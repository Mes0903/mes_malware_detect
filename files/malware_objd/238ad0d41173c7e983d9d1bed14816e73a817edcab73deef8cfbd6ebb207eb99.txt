
238ad0d41173c7e983d9d1bed14816e73a817edcab73deef8cfbd6ebb207eb99.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	mov    DWORD PTR ds:0x448940,0x401b0c
  40100d:	pop    ebp
  40100e:	ret    
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	mov    DWORD PTR ds:0x448940,0x440a65
  40101d:	pop    ebp
  40101e:	ret    
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	mov    eax,DWORD PTR [ebp+0x8]
  401026:	mov    eax,DWORD PTR [eax-0x4]
  401029:	pop    ebp
  40102a:	ret    
  40102b:	int3   
  40102c:	int3   
  40102d:	int3   
  40102e:	int3   
  40102f:	int3   
  401030:	push   ebp
  401031:	mov    ebp,esp
  401033:	sub    esp,0x8
  401036:	mov    DWORD PTR [ebp-0x4],0x0
  40103d:	jmp    0x401048
  40103f:	mov    eax,DWORD PTR [ebp-0x4]
  401042:	add    eax,0x1
  401045:	mov    DWORD PTR [ebp-0x4],eax
  401048:	mov    ecx,DWORD PTR [ebp-0x4]
  40104b:	cmp    ecx,DWORD PTR [ebp+0x8]
  40104e:	jae    0x40109b
  401050:	mov    edx,DWORD PTR [ebp-0x4]
  401053:	mov    eax,DWORD PTR [ebp+0xc]
  401056:	movzx  ecx,WORD PTR [eax+edx*2]
  40105a:	sar    ecx,0xc
  40105d:	cmp    ecx,0x3
  401060:	jne    0x401099
  401062:	mov    edx,DWORD PTR [ebp-0x4]
  401065:	mov    eax,DWORD PTR [ebp+0xc]
  401068:	movzx  ecx,WORD PTR [eax+edx*2]
  40106c:	and    ecx,0xfff
  401072:	add    ecx,0x43
  401075:	mov    DWORD PTR [ebp-0x8],ecx
  401078:	mov    edx,DWORD PTR [ebp+0x18]
  40107b:	mov    eax,DWORD PTR [ebp+0x10]
  40107e:	add    eax,DWORD PTR [edx]
  401080:	mov    ecx,DWORD PTR [ebp-0x8]
  401083:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  401087:	add    edx,DWORD PTR [ebp+0x14]
  40108a:	mov    eax,DWORD PTR [ebp+0x18]
  40108d:	mov    ecx,DWORD PTR [ebp+0x10]
  401090:	add    ecx,DWORD PTR [eax]
  401092:	mov    eax,DWORD PTR [ebp-0x8]
  401095:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  401099:	jmp    0x40103f
  40109b:	mov    esp,ebp
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	sub    esp,0x14
  4010a6:	mov    eax,DWORD PTR [ebp+0x8]
  4010a9:	cmp    DWORD PTR [eax+0x4],0x0
  4010ad:	je     0x4010f7
  4010af:	mov    DWORD PTR [ebp-0x14],0x2a1
  4010b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4010b9:	mov    edx,DWORD PTR [ecx+0x4]
  4010bc:	sub    edx,0x8
  4010bf:	shr    edx,1
  4010c1:	mov    DWORD PTR [ebp-0xc],edx
  4010c4:	mov    eax,DWORD PTR [ebp+0x8]
  4010c7:	add    eax,0x8
  4010ca:	mov    DWORD PTR [ebp-0x10],eax
  4010cd:	mov    ecx,DWORD PTR [ebp+0x8]
  4010d0:	push   ecx
  4010d1:	mov    edx,DWORD PTR [ebp+0x10]
  4010d4:	push   edx
  4010d5:	mov    eax,DWORD PTR [ebp+0xc]
  4010d8:	push   eax
  4010d9:	mov    ecx,DWORD PTR [ebp-0x10]
  4010dc:	push   ecx
  4010dd:	mov    edx,DWORD PTR [ebp-0xc]
  4010e0:	push   edx
  4010e1:	call   0x401030
  4010e6:	add    esp,0x14
  4010e9:	mov    eax,DWORD PTR [ebp+0x8]
  4010ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ef:	add    ecx,DWORD PTR [eax+0x4]
  4010f2:	mov    DWORD PTR [ebp+0x8],ecx
  4010f5:	jmp    0x4010a6
  4010f7:	mov    esp,ebp
  4010f9:	pop    ebp
  4010fa:	ret    
  4010fb:	int3   
  4010fc:	int3   
  4010fd:	int3   
  4010fe:	int3   
  4010ff:	int3   
  401100:	push   ebp
  401101:	mov    ebp,esp
  401103:	pop    ebp
  401104:	ret    
  401105:	int3   
  401106:	int3   
  401107:	int3   
  401108:	int3   
  401109:	int3   
  40110a:	int3   
  40110b:	int3   
  40110c:	int3   
  40110d:	int3   
  40110e:	int3   
  40110f:	int3   
  401110:	push   ebp
  401111:	mov    ebp,esp
  401113:	push   ecx
  401114:	mov    DWORD PTR [ebp-0x4],0x4
  40111b:	push   0x40
  40111d:	push   0x3000
  401122:	mov    eax,DWORD PTR [ebp+0x8]
  401125:	push   eax
  401126:	push   0x0
  401128:	call   DWORD PTR ds:0x444ddc
  40112e:	mov    esp,ebp
  401130:	pop    ebp
  401131:	ret    
  401132:	int3   
  401133:	int3   
  401134:	int3   
  401135:	int3   
  401136:	int3   
  401137:	int3   
  401138:	int3   
  401139:	int3   
  40113a:	int3   
  40113b:	int3   
  40113c:	int3   
  40113d:	int3   
  40113e:	int3   
  40113f:	int3   
  401140:	push   ebp
  401141:	mov    ebp,esp
  401143:	pop    ebp
  401144:	ret    
  401145:	int3   
  401146:	int3   
  401147:	int3   
  401148:	int3   
  401149:	int3   
  40114a:	int3   
  40114b:	int3   
  40114c:	int3   
  40114d:	int3   
  40114e:	int3   
  40114f:	int3   
  401150:	push   ebp
  401151:	mov    ebp,esp
  401153:	sub    esp,0x8
  401156:	mov    eax,DWORD PTR [ebp+0x8]
  401159:	mov    DWORD PTR [ebp-0x4],eax
  40115c:	mov    ecx,DWORD PTR [ebp+0xc]
  40115f:	mov    DWORD PTR [ebp-0x8],ecx
  401162:	mov    edx,DWORD PTR [ebp-0x4]
  401165:	cmp    edx,DWORD PTR [ebp-0x8]
  401168:	jae    0x401171
  40116a:	mov    eax,DWORD PTR [ebp-0x4]
  40116d:	jmp    0x401174
  40116f:	jmp    0x401174
  401171:	mov    eax,DWORD PTR [ebp-0x8]
  401174:	mov    esp,ebp
  401176:	pop    ebp
  401177:	ret    
  401178:	int3   
  401179:	int3   
  40117a:	int3   
  40117b:	int3   
  40117c:	int3   
  40117d:	int3   
  40117e:	int3   
  40117f:	int3   
  401180:	push   ebp
  401181:	mov    ebp,esp
  401183:	sub    esp,0x20
  401186:	mov    DWORD PTR [ebp-0x8],0x37
  40118d:	mov    DWORD PTR [ebp-0x10],0x0
  401194:	jmp    0x40119f
  401196:	mov    eax,DWORD PTR [ebp-0x10]
  401199:	add    eax,0x4
  40119c:	mov    DWORD PTR [ebp-0x10],eax
  40119f:	mov    ecx,DWORD PTR [ebp-0x10]
  4011a2:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011a5:	jae    0x40124b
  4011ab:	mov    DWORD PTR [ebp-0x8],0x1425
  4011b2:	mov    DWORD PTR [ebp-0x8],0x37
  4011b9:	mov    edx,DWORD PTR [ebp-0x10]
  4011bc:	add    edx,0x6f3
  4011c2:	mov    DWORD PTR ds:0x448944,edx
  4011c8:	mov    eax,DWORD PTR [ebp+0x8]
  4011cb:	add    eax,DWORD PTR [ebp-0x10]
  4011ce:	mov    ecx,DWORD PTR [eax]
  4011d0:	add    ecx,DWORD PTR [ebp-0x10]
  4011d3:	mov    edx,DWORD PTR [ebp+0x8]
  4011d6:	add    edx,DWORD PTR [ebp-0x10]
  4011d9:	mov    DWORD PTR [edx],ecx
  4011db:	mov    eax,DWORD PTR [ebp-0xc]
  4011de:	mov    DWORD PTR [ebp-0x14],eax
  4011e1:	mov    DWORD PTR [ebp-0x8],0x1425
  4011e8:	mov    ecx,DWORD PTR ds:0x448944
  4011ee:	mov    DWORD PTR [ebp-0x20],ecx
  4011f1:	mov    edx,DWORD PTR [ebp-0x20]
  4011f4:	mov    DWORD PTR [ebp-0x1c],edx
  4011f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4011fa:	mov    DWORD PTR [ebp-0x18],eax
  4011fd:	cmp    DWORD PTR [ebp-0x10],0x0
  401201:	jne    0x401233
  401203:	push   0x0
  401205:	push   0x80
  40120a:	push   0x3
  40120c:	push   0x0
  40120e:	push   0x3
  401210:	push   0x1
  401212:	push   0x448948
  401217:	call   DWORD PTR ds:0x444de0
  40121d:	mov    DWORD PTR [ebp-0x4],eax
  401220:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401224:	je     0x40122c
  401226:	cmp    DWORD PTR [ebp-0x4],0x0
  40122a:	jne    0x401233
  40122c:	mov    eax,0x42
  401231:	jmp    0x40124b
  401233:	mov    ecx,DWORD PTR [ebp+0x8]
  401236:	add    ecx,DWORD PTR [ebp-0x10]
  401239:	mov    edx,DWORD PTR [ecx]
  40123b:	xor    edx,DWORD PTR [ebp-0x18]
  40123e:	mov    eax,DWORD PTR [ebp+0x8]
  401241:	add    eax,DWORD PTR [ebp-0x10]
  401244:	mov    DWORD PTR [eax],edx
  401246:	jmp    0x401196
  40124b:	mov    esp,ebp
  40124d:	pop    ebp
  40124e:	ret    
  40124f:	int3   
  401250:	push   ebp
  401251:	mov    ebp,esp
  401253:	sub    esp,0x82c
  401259:	mov    DWORD PTR [ebp+0xc],0x15b3
  401260:	mov    eax,DWORD PTR [ebp+0xc]
  401263:	mov    DWORD PTR [ebp-0x82c],eax
  401269:	cmp    DWORD PTR [ebp-0x82c],0xf
  401270:	ja     0x40129a
  401272:	cmp    DWORD PTR [ebp-0x82c],0xf
  401279:	je     0x401339
  40127f:	cmp    DWORD PTR [ebp-0x82c],0x1
  401286:	je     0x4012b2
  401288:	cmp    DWORD PTR [ebp-0x82c],0x2
  40128f:	je     0x4013c0
  401295:	jmp    0x4013d9
  40129a:	cmp    DWORD PTR [ebp-0x82c],0x15b3
  4012a4:	je     0x4012ab
  4012a6:	jmp    0x4013d9
  4012ab:	xor    eax,eax
  4012ad:	jmp    0x4013ef
  4012b2:	push   0x0
  4012b4:	push   0x0
  4012b6:	push   0x0
  4012b8:	push   0x0
  4012ba:	call   DWORD PTR ds:0x445354
  4012c0:	mov    DWORD PTR [ebp-0x54],eax
  4012c3:	push   0xc8
  4012c8:	push   0xc8
  4012cd:	push   0x64
  4012cf:	push   0x64
  4012d1:	mov    ecx,DWORD PTR [ebp-0x54]
  4012d4:	push   ecx
  4012d5:	call   DWORD PTR ds:0x445358
  4012db:	push   0x0
  4012dd:	push   0x64
  4012df:	push   0x64
  4012e1:	mov    edx,DWORD PTR [ebp-0x54]
  4012e4:	push   edx
  4012e5:	call   DWORD PTR ds:0x44535c
  4012eb:	push   0xc8
  4012f0:	push   0xc8
  4012f5:	mov    eax,DWORD PTR [ebp-0x54]
  4012f8:	push   eax
  4012f9:	call   DWORD PTR ds:0x445360
  4012ff:	push   0x0
  401301:	push   0x64
  401303:	push   0xc8
  401308:	mov    ecx,DWORD PTR [ebp-0x54]
  40130b:	push   ecx
  40130c:	call   DWORD PTR ds:0x44535c
  401312:	push   0xc8
  401317:	push   0x64
  401319:	mov    edx,DWORD PTR [ebp-0x54]
  40131c:	push   edx
  40131d:	call   DWORD PTR ds:0x445360
  401323:	mov    eax,DWORD PTR [ebp-0x54]
  401326:	push   eax
  401327:	call   DWORD PTR ds:0x445364
  40132d:	mov    ds:0x448934,eax
  401332:	xor    eax,eax
  401334:	jmp    0x4013ef
  401339:	lea    ecx,[ebp-0x50]
  40133c:	push   ecx
  40133d:	mov    edx,DWORD PTR [ebp+0x8]
  401340:	push   edx
  401341:	call   DWORD PTR ds:0x4450a8
  401347:	mov    DWORD PTR [ebp-0x58],eax
  40134a:	lea    eax,[ebp-0x10]
  40134d:	push   eax
  40134e:	mov    ecx,DWORD PTR [ebp+0x8]
  401351:	push   ecx
  401352:	call   DWORD PTR ds:0x4450ac
  401358:	mov    eax,DWORD PTR [ebp-0x8]
  40135b:	cdq    
  40135c:	and    edx,0x3
  40135f:	add    eax,edx
  401361:	sar    eax,0x2
  401364:	mov    DWORD PTR [ebp-0x10],eax
  401367:	mov    eax,DWORD PTR [ebp-0x8]
  40136a:	imul   eax,eax,0x3
  40136d:	cdq    
  40136e:	and    edx,0x3
  401371:	add    eax,edx
  401373:	sar    eax,0x2
  401376:	mov    DWORD PTR [ebp-0x8],eax
  401379:	mov    eax,DWORD PTR [ebp-0x4]
  40137c:	cdq    
  40137d:	and    edx,0x3
  401380:	add    eax,edx
  401382:	sar    eax,0x2
  401385:	mov    DWORD PTR [ebp-0xc],eax
  401388:	mov    eax,DWORD PTR [ebp-0x4]
  40138b:	imul   eax,eax,0x3
  40138e:	cdq    
  40138f:	and    edx,0x3
  401392:	add    eax,edx
  401394:	sar    eax,0x2
  401397:	mov    DWORD PTR [ebp-0x4],eax
  40139a:	lea    edx,[ebp-0x10]
  40139d:	push   edx
  40139e:	mov    eax,ds:0x448934
  4013a3:	push   eax
  4013a4:	mov    ecx,DWORD PTR [ebp-0x58]
  4013a7:	push   ecx
  4013a8:	call   DWORD PTR ds:0x445368
  4013ae:	lea    edx,[ebp-0x50]
  4013b1:	push   edx
  4013b2:	mov    eax,DWORD PTR [ebp+0x8]
  4013b5:	push   eax
  4013b6:	call   DWORD PTR ds:0x4450b0
  4013bc:	xor    eax,eax
  4013be:	jmp    0x4013ef
  4013c0:	mov    ecx,DWORD PTR ds:0x448934
  4013c6:	push   ecx
  4013c7:	call   DWORD PTR ds:0x44536c
  4013cd:	push   0x0
  4013cf:	call   DWORD PTR ds:0x4450b4
  4013d5:	xor    eax,eax
  4013d7:	jmp    0x4013ef
  4013d9:	mov    edx,DWORD PTR [ebp+0x14]
  4013dc:	push   edx
  4013dd:	mov    eax,DWORD PTR [ebp+0x10]
  4013e0:	push   eax
  4013e1:	mov    ecx,DWORD PTR [ebp+0xc]
  4013e4:	push   ecx
  4013e5:	mov    edx,DWORD PTR [ebp+0x8]
  4013e8:	push   edx
  4013e9:	call   DWORD PTR ds:0x4450b8
  4013ef:	mov    esp,ebp
  4013f1:	pop    ebp
  4013f2:	ret    0x10
  4013f5:	int3   
  4013f6:	int3   
  4013f7:	int3   
  4013f8:	int3   
  4013f9:	int3   
  4013fa:	int3   
  4013fb:	int3   
  4013fc:	int3   
  4013fd:	int3   
  4013fe:	int3   
  4013ff:	int3   
  401400:	push   ebp
  401401:	mov    ebp,esp
  401403:	sub    esp,0x1bc
  401409:	pusha  
  40140a:	mov    DWORD PTR ds:0x448a4c,ebp
  401410:	push   0x104
  401415:	lea    eax,[ebp-0x110]
  40141b:	push   eax
  40141c:	call   DWORD PTR ds:0x444de4
  401422:	mov    DWORD PTR [ebp-0x14c],0x30
  40142c:	mov    DWORD PTR [ebp-0x148],0x3
  401436:	mov    DWORD PTR [ebp-0x144],0x401250
  401440:	mov    DWORD PTR [ebp-0x140],0x0
  40144a:	mov    DWORD PTR [ebp-0x13c],0x0
  401454:	mov    DWORD PTR [ebp-0x138],0x2
  40145e:	push   0x7f00
  401463:	push   0x0
  401465:	call   DWORD PTR ds:0x4450bc
  40146b:	mov    DWORD PTR [ebp-0x134],eax
  401471:	push   0x7f00
  401476:	push   0x0
  401478:	call   DWORD PTR ds:0x4450c0
  40147e:	mov    DWORD PTR [ebp-0x130],eax
  401484:	push   0x0
  401486:	call   DWORD PTR ds:0x445370
  40148c:	mov    DWORD PTR [ebp-0x12c],eax
  401492:	mov    DWORD PTR [ebp-0x128],0x0
  40149c:	mov    DWORD PTR [ebp-0x124],0x44406c
  4014a6:	push   0x7f00
  4014ab:	push   0x0
  4014ad:	call   DWORD PTR ds:0x4450bc
  4014b3:	mov    DWORD PTR [ebp-0x120],eax
  4014b9:	lea    ecx,[ebp-0x14c]
  4014bf:	push   ecx
  4014c0:	call   DWORD PTR ds:0x4450c4
  4014c6:	push   0x0
  4014c8:	push   0x2
  4014ca:	push   0x0
  4014cc:	push   0x0
  4014ce:	push   0x80000000
  4014d3:	push   0x80000000
  4014d8:	push   0x80000000
  4014dd:	push   0x80000000
  4014e2:	push   0xcf0000
  4014e7:	push   0x444078
  4014ec:	push   0x44406c
  4014f1:	push   0x0
  4014f3:	call   DWORD PTR ds:0x4450c8
  4014f9:	mov    DWORD PTR [ebp-0x18c],eax
  4014ff:	mov    DWORD PTR [ebp-0x194],0x0
  401509:	mov    edx,DWORD PTR ds:0x444de0
  40150f:	mov    DWORD PTR [ebp-0x1a8],edx
  401515:	mov    DWORD PTR [ebp-0x114],0x0
  40151f:	mov    DWORD PTR [ebp-0x188],0x64
  401529:	mov    DWORD PTR [ebp-0x11c],0x3
  401533:	mov    DWORD PTR [ebp-0x194],0x0
  40153d:	mov    DWORD PTR [ebp-0x154],0x0
  401547:	mov    DWORD PTR [ebp-0x184],0x1
  401551:	mov    DWORD PTR [ebp-0x118],0x3
  40155b:	mov    DWORD PTR [ebp-0x114],0x0
  401565:	mov    DWORD PTR [ebp-0x188],0x64
  40156f:	mov    DWORD PTR [ebp-0x11c],0x3
  401579:	mov    DWORD PTR [ebp-0x194],0x0
  401583:	mov    DWORD PTR [ebp-0x154],0x0
  40158d:	mov    DWORD PTR [ebp-0x184],0x1
  401597:	mov    DWORD PTR [ebp-0x118],0x3
  4015a1:	mov    DWORD PTR [ebp-0x114],0x0
  4015ab:	mov    DWORD PTR [ebp-0x188],0x64
  4015b5:	mov    DWORD PTR [ebp-0x11c],0x3
  4015bf:	mov    DWORD PTR [ebp-0x194],0x0
  4015c9:	mov    DWORD PTR [ebp-0x154],0x0
  4015d3:	mov    DWORD PTR [ebp-0x184],0x1
  4015dd:	mov    DWORD PTR [ebp-0x118],0x3
  4015e7:	push   0x104
  4015ec:	lea    eax,[ebp-0x110]
  4015f2:	push   eax
  4015f3:	call   DWORD PTR ds:0x444de4
  4015f9:	call   0x401a60
  4015fe:	push   0x444080
  401603:	push   0x444090
  401608:	call   DWORD PTR ds:0x444de8
  40160e:	push   eax
  40160f:	call   DWORD PTR ds:0x444dec
  401615:	mov    DWORD PTR [ebp-0x17c],eax
  40161b:	lea    ecx,[ebp-0x158]
  401621:	push   ecx
  401622:	push   0x20019
  401627:	push   0x0
  401629:	push   0x44409c
  40162e:	push   0x80000002
  401633:	call   DWORD PTR [ebp-0x17c]
  401639:	test   eax,eax
  40163b:	je     0x40164c
  40163d:	push   0x4
  40163f:	call   DWORD PTR ds:0x444df0
  401645:	xor    eax,eax
  401647:	jmp    0x401a56
  40164c:	lea    edx,[ebp-0x158]
  401652:	push   edx
  401653:	push   0x20019
  401658:	push   0x0
  40165a:	push   0x4440b0
  40165f:	mov    eax,DWORD PTR [ebp-0x158]
  401665:	push   eax
  401666:	call   DWORD PTR [ebp-0x17c]
  40166c:	test   eax,eax
  40166e:	je     0x40167f
  401670:	push   0x4
  401672:	call   DWORD PTR ds:0x444df0
  401678:	xor    eax,eax
  40167a:	jmp    0x401a56
  40167f:	lea    ecx,[ebp-0x158]
  401685:	push   ecx
  401686:	push   0x20019
  40168b:	push   0x0
  40168d:	push   0x4440c0
  401692:	mov    edx,DWORD PTR [ebp-0x158]
  401698:	push   edx
  401699:	call   DWORD PTR [ebp-0x17c]
  40169f:	test   eax,eax
  4016a1:	je     0x4016b2
  4016a3:	push   0x4
  4016a5:	call   DWORD PTR ds:0x444df0
  4016ab:	xor    eax,eax
  4016ad:	jmp    0x401a56
  4016b2:	lea    eax,[ebp-0x158]
  4016b8:	push   eax
  4016b9:	push   0x20019
  4016be:	push   0x0
  4016c0:	push   0x448938
  4016c5:	mov    ecx,DWORD PTR [ebp-0x158]
  4016cb:	push   ecx
  4016cc:	call   DWORD PTR [ebp-0x17c]
  4016d2:	test   eax,eax
  4016d4:	je     0x4016e5
  4016d6:	push   0x4
  4016d8:	call   DWORD PTR ds:0x444df0
  4016de:	xor    eax,eax
  4016e0:	jmp    0x401a56
  4016e5:	lea    edx,[ebp-0x158]
  4016eb:	push   edx
  4016ec:	push   0x20019
  4016f1:	push   0x0
  4016f3:	push   0x44893c
  4016f8:	mov    eax,DWORD PTR [ebp-0x158]
  4016fe:	push   eax
  4016ff:	call   DWORD PTR [ebp-0x17c]
  401705:	test   eax,eax
  401707:	je     0x401718
  401709:	push   0x4
  40170b:	call   DWORD PTR ds:0x444df0
  401711:	xor    eax,eax
  401713:	jmp    0x401a56
  401718:	lea    ecx,[ebp-0x158]
  40171e:	push   ecx
  40171f:	push   0x20019
  401724:	push   0x0
  401726:	push   0x4440e0
  40172b:	mov    edx,DWORD PTR [ebp-0x158]
  401731:	push   edx
  401732:	call   DWORD PTR [ebp-0x17c]
  401738:	test   eax,eax
  40173a:	je     0x40174b
  40173c:	push   0x4
  40173e:	call   DWORD PTR ds:0x444df0
  401744:	xor    eax,eax
  401746:	jmp    0x401a56
  40174b:	lea    eax,[ebp-0x158]
  401751:	push   eax
  401752:	push   0x20019
  401757:	push   0x0
  401759:	push   0x4440cc
  40175e:	mov    ecx,DWORD PTR [ebp-0x158]
  401764:	push   ecx
  401765:	call   DWORD PTR [ebp-0x17c]
  40176b:	test   eax,eax
  40176d:	jne    0x40177e
  40176f:	push   0x4
  401771:	call   DWORD PTR ds:0x444df0
  401777:	xor    eax,eax
  401779:	jmp    0x401a56
  40177e:	push   0x104
  401783:	push   0x448948
  401788:	call   DWORD PTR ds:0x444de4
  40178e:	push   0x44413c
  401793:	push   0x448948
  401798:	call   DWORD PTR ds:0x444df4
  40179e:	call   0x401000
  4017a3:	mov    edx,DWORD PTR ds:0x448940
  4017a9:	push   edx
  4017aa:	call   0x401020
  4017af:	add    esp,0x4
  4017b2:	mov    DWORD PTR [ebp-0x198],eax
  4017b8:	mov    eax,DWORD PTR [ebp-0x198]
  4017be:	push   eax
  4017bf:	call   0x401110
  4017c4:	add    esp,0x4
  4017c7:	mov    DWORD PTR [ebp-0x190],eax
  4017cd:	mov    ecx,DWORD PTR [ebp-0x198]
  4017d3:	push   ecx
  4017d4:	push   0x0
  4017d6:	mov    edx,DWORD PTR [ebp-0x190]
  4017dc:	push   edx
  4017dd:	call   0x401140
  4017e2:	add    esp,0xc
  4017e5:	mov    eax,DWORD PTR [ebp-0x198]
  4017eb:	mov    DWORD PTR [ebp-0x1a0],eax
  4017f1:	mov    ecx,DWORD PTR [ebp-0x194]
  4017f7:	cmp    ecx,DWORD PTR [ebp-0x198]
  4017fd:	jae    0x401889
  401803:	mov    edx,DWORD PTR [ebp-0x1a0]
  401809:	push   edx
  40180a:	mov    eax,DWORD PTR [ebp-0x188]
  401810:	push   eax
  401811:	call   0x401150
  401816:	add    esp,0x8
  401819:	mov    DWORD PTR [ebp-0x1a4],eax
  40181f:	mov    ecx,DWORD PTR [ebp-0x1a4]
  401825:	push   ecx
  401826:	mov    edx,DWORD PTR ds:0x448940
  40182c:	add    edx,DWORD PTR [ebp-0x154]
  401832:	push   edx
  401833:	mov    eax,DWORD PTR [ebp-0x190]
  401839:	add    eax,DWORD PTR [ebp-0x194]
  40183f:	push   eax
  401840:	call   0x442b9c
  401845:	add    esp,0xc
  401848:	mov    ecx,DWORD PTR [ebp-0x11c]
  40184e:	add    ecx,DWORD PTR [ebp-0x188]
  401854:	add    ecx,DWORD PTR [ebp-0x154]
  40185a:	mov    DWORD PTR [ebp-0x154],ecx
  401860:	mov    edx,DWORD PTR [ebp-0x194]
  401866:	add    edx,DWORD PTR [ebp-0x188]
  40186c:	mov    DWORD PTR [ebp-0x194],edx
  401872:	mov    eax,DWORD PTR [ebp-0x1a0]
  401878:	sub    eax,DWORD PTR [ebp-0x1a4]
  40187e:	mov    DWORD PTR [ebp-0x1a0],eax
  401884:	jmp    0x4017f1
  401889:	mov    ecx,DWORD PTR [ebp-0x198]
  40188f:	push   ecx
  401890:	mov    edx,DWORD PTR [ebp-0x190]
  401896:	push   edx
  401897:	call   0x401180
  40189c:	add    esp,0x8
  40189f:	mov    DWORD PTR [ebp-0x154],0x0
  4018a9:	mov    DWORD PTR [ebp-0x1ac],0x0
  4018b3:	call   0x401010
  4018b8:	mov    eax,ds:0x448940
  4018bd:	push   eax
  4018be:	call   0x401020
  4018c3:	add    esp,0x4
  4018c6:	mov    DWORD PTR [ebp-0x1b0],eax
  4018cc:	mov    ecx,DWORD PTR [ebp-0x1b0]
  4018d2:	push   ecx
  4018d3:	call   0x401110
  4018d8:	add    esp,0x4
  4018db:	mov    DWORD PTR [ebp-0x150],eax
  4018e1:	mov    edx,DWORD PTR [ebp-0x1b0]
  4018e7:	push   edx
  4018e8:	push   0x0
  4018ea:	mov    eax,DWORD PTR [ebp-0x150]
  4018f0:	push   eax
  4018f1:	call   0x401140
  4018f6:	add    esp,0xc
  4018f9:	mov    ecx,DWORD PTR [ebp-0x1b0]
  4018ff:	mov    DWORD PTR [ebp-0x1b8],ecx
  401905:	mov    edx,DWORD PTR [ebp-0x1ac]
  40190b:	cmp    edx,DWORD PTR [ebp-0x1b0]
  401911:	jae    0x40199c
  401917:	mov    eax,DWORD PTR [ebp-0x1b8]
  40191d:	push   eax
  40191e:	mov    ecx,DWORD PTR [ebp-0x188]
  401924:	push   ecx
  401925:	call   0x401150
  40192a:	add    esp,0x8
  40192d:	mov    DWORD PTR [ebp-0x1bc],eax
  401933:	mov    edx,DWORD PTR [ebp-0x1bc]
  401939:	push   edx
  40193a:	mov    eax,ds:0x448940
  40193f:	add    eax,DWORD PTR [ebp-0x154]
  401945:	push   eax
  401946:	mov    ecx,DWORD PTR [ebp-0x150]
  40194c:	add    ecx,DWORD PTR [ebp-0x1ac]
  401952:	push   ecx
  401953:	call   0x442b9c
  401958:	add    esp,0xc
  40195b:	mov    edx,DWORD PTR [ebp-0x11c]
  401961:	add    edx,DWORD PTR [ebp-0x188]
  401967:	add    edx,DWORD PTR [ebp-0x154]
  40196d:	mov    DWORD PTR [ebp-0x154],edx
  401973:	mov    eax,DWORD PTR [ebp-0x1ac]
  401979:	add    eax,DWORD PTR [ebp-0x188]
  40197f:	mov    DWORD PTR [ebp-0x1ac],eax
  401985:	mov    ecx,DWORD PTR [ebp-0x1b8]
  40198b:	sub    ecx,DWORD PTR [ebp-0x1bc]
  401991:	mov    DWORD PTR [ebp-0x1b8],ecx
  401997:	jmp    0x401905
  40199c:	mov    edx,DWORD PTR [ebp-0x1b0]
  4019a2:	push   edx
  4019a3:	mov    eax,DWORD PTR [ebp-0x150]
  4019a9:	push   eax
  4019aa:	call   0x401180
  4019af:	add    esp,0x8
  4019b2:	mov    ecx,DWORD PTR [ebp-0x190]
  4019b8:	mov    edx,DWORD PTR [ebp-0x150]
  4019be:	mov    DWORD PTR [ecx],edx
  4019c0:	push   0x40000
  4019c5:	call   0x401110
  4019ca:	add    esp,0x4
  4019cd:	mov    DWORD PTR [ebp-0x4],eax
  4019d0:	lea    eax,[ebp-0x158]
  4019d6:	push   eax
  4019d7:	push   0x20019
  4019dc:	push   0x0
  4019de:	push   0x444154
  4019e3:	push   0x80000002
  4019e8:	call   DWORD PTR ds:0x4453d8
  4019ee:	test   eax,eax
  4019f0:	je     0x4019f6
  4019f2:	xor    eax,eax
  4019f4:	jmp    0x401a56
  4019f6:	push   0x3d200
  4019fb:	mov    ecx,DWORD PTR [ebp-0x190]
  401a01:	push   ecx
  401a02:	mov    edx,DWORD PTR [ebp-0x4]
  401a05:	add    edx,0x300
  401a0b:	push   edx
  401a0c:	call   0x442b9c
  401a11:	add    esp,0xc
  401a14:	mov    eax,DWORD PTR [ebp-0x4]
  401a17:	sub    eax,0x400000
  401a1c:	push   eax
  401a1d:	mov    ecx,DWORD PTR [ebp-0x4]
  401a20:	push   ecx
  401a21:	mov    edx,DWORD PTR [ebp-0x150]
  401a27:	push   edx
  401a28:	call   0x4010a0
  401a2d:	add    esp,0xc
  401a30:	mov    esp,DWORD PTR ds:0x448a4c
  401a36:	pop    ecx
  401a37:	mov    ecx,DWORD PTR [ebp-0x4]
  401a3a:	add    ecx,0x3d190
  401a40:	mov    edx,ecx
  401a42:	call   0x401a47
  401a47:	pop    eax
  401a48:	call   0x401a4d
  401a4d:	pop    eax
  401a4e:	call   0x401a53
  401a53:	pop    eax
  401a54:	jmp    edx
  401a56:	mov    esp,ebp
  401a58:	pop    ebp
  401a59:	ret    
  401a5a:	int3   
  401a5b:	int3   
  401a5c:	int3   
  401a5d:	int3   
  401a5e:	int3   
  401a5f:	int3   
  401a60:	push   ebp
  401a61:	mov    ebp,esp
  401a63:	mov    eax,ds:0x444014
  401a68:	mov    BYTE PTR [eax+0x3],0x73
  401a6c:	mov    ecx,DWORD PTR ds:0x444014
  401a72:	mov    BYTE PTR [ecx+0x4],0x74
  401a76:	mov    edx,DWORD PTR ds:0x444014
  401a7c:	mov    BYTE PTR [edx+0x5],0x65
  401a80:	mov    eax,ds:0x444014
  401a85:	mov    BYTE PTR [eax+0x6],0x6d
  401a89:	mov    ecx,DWORD PTR ds:0x444014
  401a8f:	mov    BYTE PTR [ecx+0x7],0x33
  401a93:	mov    edx,DWORD PTR ds:0x444014
  401a99:	mov    BYTE PTR [edx+0x8],0x32
  401a9d:	mov    eax,ds:0x444014
  401aa2:	mov    BYTE PTR [eax+0x9],0x5c
  401aa6:	mov    ecx,DWORD PTR ds:0x444014
  401aac:	mov    BYTE PTR [ecx+0xa],0x61
  401ab0:	mov    edx,DWORD PTR ds:0x444014
  401ab6:	mov    BYTE PTR [edx+0xb],0x74
  401aba:	mov    eax,ds:0x444014
  401abf:	mov    BYTE PTR [eax+0xc],0x6c
  401ac3:	mov    ecx,DWORD PTR ds:0x444014
  401ac9:	mov    BYTE PTR [ecx+0xd],0x2e
  401acd:	mov    edx,DWORD PTR ds:0x444014
  401ad3:	mov    BYTE PTR [edx+0xe],0x64
  401ad7:	mov    eax,ds:0x444014
  401adc:	mov    BYTE PTR [eax+0xf],0x6c
  401ae0:	mov    ecx,DWORD PTR ds:0x444014
  401ae6:	mov    BYTE PTR [ecx+0x10],0x6c
  401aea:	mov    edx,DWORD PTR ds:0x444014
  401af0:	mov    BYTE PTR [edx],0x5c
  401af3:	mov    eax,ds:0x444014
  401af8:	mov    BYTE PTR [eax+0x1],0x73
  401afc:	mov    ecx,DWORD PTR ds:0x444014
  401b02:	mov    BYTE PTR [ecx+0x2],0x79
  401b06:	pop    ebp
  401b07:	ret    
  401b08:	add    dl,dl
  401b0a:	add    eax,DWORD PTR [eax]
  401b0c:	repz rol DWORD PTR [ebx+0x0],cl
  401b10:	lods   al,BYTE PTR ds:[esi]
  401b11:	arpl   WORD PTR [eax+edx*2-0x7f],si
  401b15:	imul   esp,DWORD PTR [ebx+0x41],0x6572628f
  401b1c:	pusha  
  401b1d:	je     0x401b1f
  401b1f:	add    BYTE PTR [edi],dh
  401b21:	push   0x6e2f6461
  401b26:	bound  esi,QWORD PTR [edx+0x52]
  401b29:	jne    0x401ba4
  401b2b:	inc    ebp
  401b2c:	dec    ebx
  401b2d:	inc    esi
  401b2e:	add    BYTE PTR [eax],al
  401b30:	aaa    
  401b31:	push   0x6e2f6461
  401b36:	bound  esi,QWORD PTR [edx+0x52]
  401b39:	jne    0x401bb4
  401b3b:	inc    ebp
  401b3c:	sub    edx,DWORD PTR [eax+0x0]
  401b3f:	add    BYTE PTR [edx+eiz*2],ch
  401b42:	je     0x401b91
  401b44:	or     al,0x63
  401b46:	jne    0x401bb4
  401b48:	push   cs
  401b49:	dec    edi
  401b4a:	popa   
  401b4b:	outs   dx,BYTE PTR ds:[esi]
  401b4c:	pop    ss
  401b4d:	imul   esp,DWORD PTR [ebp+0x41],0xfffffff3
  401b51:	push   es
  401b52:	add    BYTE PTR [eax],al
  401b54:	xor    BYTE PTR [ebp+0x65],dh
  401b57:	popa   
  401b58:	jmp    DWORD PTR [ecx+0x46]
  401b5b:	imul   ebx,edi,0xd7004161
  401b61:	jae    0x401bd7
  401b63:	jb     0x401b35
  401b65:	gs je  0x401ba9
  401b68:	repz push es
  401b6a:	add    BYTE PTR [eax],al
  401b6c:	mov    ah,0x61
  401b6e:	je     0x401bc7
  401b70:	add    BYTE PTR [eax],al
  401b72:	add    dl,bl
  401b74:	push   0x73c46f64
  401b79:	inc    esp
  401b7a:	imul   eax,ecx,0x9c746361
  401b80:	je     0x401bfb
  401b82:	inc    ecx
  401b83:	repz push es
  401b85:	add    BYTE PTR [eax],al
  401b87:	mov    ah,0x61
  401b89:	je     0x401bd8
  401b8b:	test   BYTE PTR [edx+0x75],ah
  401b8e:	ins    BYTE PTR es:[edi],dx
  401b8f:	xchg   esi,eax
  401b90:	dec    esi
  401b91:	popa   
  401b92:	outs   dx,BYTE PTR ds:[esi]
  401b93:	(bad)
  401b97:	repz push es
  401b99:	add    BYTE PTR [eax],al
  401b9b:	out    dx,eax
  401b9c:	add    eax,DWORD PTR [eax+0x0]
  401b9f:	pop    es
  401ba0:	add    al,0x40
  401ba2:	add    BYTE PTR [edi],cl
  401ba4:	add    al,0x40
  401ba6:	add    BYTE PTR [edi],ah
  401ba8:	add    al,0x40
  401baa:	add    BYTE PTR [ebx],ch
  401bac:	add    al,0x40
  401bae:	add    BYTE PTR [edi],ah
  401bb0:	add    al,0x40
  401bb2:	add    BYTE PTR [ebx+0x4],dl
  401bb5:	inc    eax
  401bb6:	add    BYTE PTR [ebx],bh
  401bb8:	add    al,0x40
  401bba:	add    BYTE PTR [edx+eiz*2],ch
  401bbd:	je     0x401c0f
  401bbf:	and    DWORD PTR [eax+0x63],ebp
  401bc2:	inc    ecx
  401bc3:	packsswb mm6,QWORD PTR [edx+0x65]
  401bc7:	and    BYTE PTR [eax+eax*1+0x0],dh
  401bcb:	daa    
  401bcc:	push   0x6e3f6461
  401bd1:	bound  esi,QWORD PTR [edx+0x12]
  401bd4:	jne    0x401c4f
  401bd6:	inc    ebp
  401bd7:	add    BYTE PTR [eax],al
  401bd9:	add    bl,bh
  401bdb:	inc    ebp
  401bdc:	add    BYTE PTR [eax],al
  401bde:	or     BYTE PTR [edx+0x72],ah
  401be1:	outs   dx,BYTE PTR ds:[esi]
  401be2:	(bad)  
  401be3:	push   0x33
  401be5:	xor    dl,BYTE PTR ds:0xf36c6c63
  401beb:	push   es
  401bec:	add    BYTE PTR [eax],al
  401bee:	(bad)  
  401bef:	jae    0x401c67
  401bf1:	arpl   cx,ax
  401bf3:	jb     0x401c23
  401bf5:	xlat   BYTE PTR fs:[ebx]
  401bf7:	push   0x0
  401bf9:	add    dh,cl
  401bfb:	popa   
  401bfc:	ins    DWORD PTR es:[edi],dx
  401bfd:	jae    0x401bcd
  401bff:	jb     0x401c01
  401c01:	add    BYTE PTR [esi-0x5e9c898d],bl
  401c07:	jb     0x401c37
  401c09:	(bad)
  401c0e:	xchg   BYTE PTR [ecx+0x6d],ah
  401c11:	arpl   WORD PTR [ebx-0x62ffff83],ax
  401c17:	ins    DWORD PTR es:[edi],dx
  401c18:	jb     0x401c8e
  401c1a:	xchg   BYTE PTR [ebp+0x6c],ah
  401c1d:	inc    ecx
  401c1e:	xchg   DWORD PTR [edx+0x6f],ebp
  401c21:	arpl   bx,si
  401c23:	push   es
  401c24:	add    BYTE PTR [eax],al
  401c26:	cmp    eax,0x66747260
  401c2b:	push   0x6347416c
  401c30:	outs   dx,DWORD PTR ds:[esi]
  401c31:	arpl   bx,si
  401c33:	push   es
  401c34:	add    BYTE PTR [eax],al
  401c36:	push   ds
  401c37:	gs ins DWORD PTR es:[edi],dx
  401c39:	popa   
  401c3a:	inc    ebx
  401c3b:	pop    ebp
  401c3c:	imul   esp,DWORD PTR [ebp+0x0],0x463c0000
  401c43:	inc    si
  401c45:	sbb    ah,BYTE PTR [ebx+0x65]
  401c48:	add    BYTE PTR ds:0x26747260,bh
  401c4e:	push   0x6621506c
  401c53:	je     0x401cba
  401c55:	adc    BYTE PTR [ebx+0x0],bh
  401c58:	add    BYTE PTR [ebx],bh
  401c5a:	ins    BYTE PTR es:[edi],dx
  401c5b:	popa   
  401c5c:	jo     0x401c90
  401c5e:	arpl   WORD PTR [edi+ebp*2+0x10],bp
  401c62:	pop    es
  401c63:	add    BYTE PTR [eax],al
  401c65:	fsubr  DWORD PTR [ebx+0x72]
  401c68:	outs   dx,BYTE PTR ds:[esi]
  401c69:	into   
  401c6a:	bound  esi,QWORD PTR [ebx]
  401c6c:	xor    cl,BYTE PTR ds:0xf36c6c6b
  401c72:	push   es
  401c73:	add    BYTE PTR [eax],al
  401c75:	mov    ah,0x6b
  401c77:	je     0x401cc9
  401c79:	shl    DWORD PTR [ebp+0x63],0x65
  401c7d:	sar    BYTE PTR [ecx+0x48],0x65
  401c81:	shl    BYTE PTR [esi+0x0],cl
  401c84:	add    bl,dh
  401c86:	push   es
  401c87:	mov    esp,0x59aaf303
  401c8c:	add    bl,dh
  401c8e:	fild   WORD PTR [ebx]
  401c90:	add    bl,dh
  401c92:	fild   WORD PTR [ebx]
  401c94:	add    bl,dh
  401c96:	fild   WORD PTR [ebx]
  401c98:	add    bl,dh
  401c9a:	fild   WORD PTR [ebx]
  401c9c:	add    bl,dh
  401c9e:	fild   WORD PTR [ebx]
  401ca0:	add    bl,dh
  401ca2:	fild   WORD PTR [ebx]
  401ca4:	add    BYTE PTR [eax],al
  401ca6:	add    BYTE PTR [eax],al
  401ca8:	repz fild WORD PTR [ebx]
  401cab:	add    bl,dh
  401cad:	fild   WORD PTR [ebx]
  401caf:	add    bl,dh
  401cb1:	fild   WORD PTR [ebx]
  401cb3:	add    bl,dh
  401cb5:	fild   WORD PTR [ebx]
  401cb7:	add    bl,dh
  401cb9:	fild   WORD PTR [ebx]
  401cbb:	add    bl,dh
  401cbd:	fild   WORD PTR [ebx]
  401cbf:	add    bl,dh
  401cc1:	fild   WORD PTR [ebx]
  401cc3:	add    bl,dh
  401cc5:	fild   WORD PTR [ebx]
  401cc7:	add    bl,dh
  401cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cca:	add    al,0x0
  401ccc:	repz fild WORD PTR [ebx]
  401ccf:	add    bl,dh
  401cd1:	fild   WORD PTR [ebx]
  401cd3:	add    bl,dh
  401cd5:	fild   WORD PTR [ebx]
  401cd7:	add    bl,dh
  401cd9:	fild   WORD PTR [ebx]
  401cdb:	add    bl,dh
  401cdd:	fild   WORD PTR [ebx]
  401cdf:	add    bl,dh
  401ce1:	fild   WORD PTR [ebx]
  401ce3:	add    bl,dh
  401ce5:	fild   WORD PTR [ebx]
  401ce7:	add    bl,dh
  401ce9:	fild   WORD PTR [ebx]
  401ceb:	add    bl,dh
  401ced:	fild   WORD PTR [ebx]
  401cef:	add    bl,dh
  401cf1:	fild   WORD PTR [ebx]
  401cf3:	add    bl,dh
  401cf5:	fild   WORD PTR [ebx]
  401cf7:	add    bl,dh
  401cf9:	fild   WORD PTR [ebx]
  401cfb:	add    bl,dh
  401cfd:	fild   WORD PTR [ebx]
  401cff:	add    bl,dh
  401d01:	fild   WORD PTR [ebx]
  401d03:	add    bl,dh
  401d05:	push   es
  401d06:	jmp    0xe947100e
  401d0b:	add    eax,DWORD PTR [eax]
  401d0d:	add    BYTE PTR [eax],al
  401d0f:	repz push es
  401d11:	jmp    0xe9471019
  401d16:	add    esi,ebx
  401d18:	push   es
  401d19:	jmp    0xe9471021
  401d1e:	add    esi,ebx
  401d20:	push   es
  401d21:	jmp    0xe9471029
  401d26:	add    esi,ebx
  401d28:	push   es
  401d29:	jmp    0xe9471031
  401d2e:	add    esi,ebx
  401d30:	push   es
  401d31:	jmp    0xe9471039
  401d36:	add    esi,ebx
  401d38:	push   es
  401d39:	jmp    0xe9471041
  401d3e:	add    esi,ebx
  401d40:	push   es
  401d41:	jmp    0xe9471049
  401d46:	add    esi,ebx
  401d48:	push   es
  401d49:	jmp    0xe9471051
  401d4e:	add    esi,ebx
  401d50:	push   es
  401d51:	jmp    0xe9471059
  401d56:	add    esi,ebx
  401d58:	push   es
  401d59:	jmp    0xe9471061
  401d5e:	add    esi,ebx
  401d60:	push   es
  401d61:	jmp    0xe9471069
  401d66:	add    esi,ebx
  401d68:	push   es
  401d69:	jmp    0xe9471071
  401d6e:	add    esi,ebx
  401d70:	push   es
  401d71:	jmp    0x401d79
  401d76:	repz push es
  401d78:	jmp    0xe9471080
  401d7d:	add    esi,ebx
  401d7f:	push   es
  401d80:	jmp    0x471088
  401d85:	jmp    0xe940247a
  401d8a:	lock push es
  401d8c:	add    BYTE PTR [ecx-0x52fff94d],bh
  401d92:	out    dx,eax
  401d93:	pop    es
  401d94:	add    BYTE PTR [eax],cl
  401d96:	bnd jp 0x401de8
  401d99:	jmp    0xe940248e
  401d9e:	lock push es
  401da0:	add    BYTE PTR [ecx],cl
  401da2:	lock or BYTE PTR [ecx],al
  401da5:	loop   0x401d9e
  401da7:	add    BYTE PTR [eax],al
  401da9:	jmp    0xe9402522
  401dae:	inc    eax
  401daf:	pop    es
  401db0:	add    cl,ch
  401db2:	lock push es
  401db4:	add    BYTE PTR [eax-0x16fff95f],dl
  401dba:	add    BYTE PTR [edi],al
  401dbc:	add    cl,ch
  401dbe:	nop
  401dbf:	pop    es
  401dc0:	add    cl,ch
  401dc2:	lock inc esi
  401dc4:	add    cl,ch
  401dc6:	loopne 0x401dce
  401dc8:	add    cl,ch
  401dca:	out    dx,al
  401dcb:	push   es
  401dcc:	add    ah,ch
  401dce:	lock add eax,0x6f0e800
  401dd4:	add    ah,ch
  401dd6:	lock add eax,0xe900
  401ddc:	add    al,dh
  401dde:	push   es
  401ddf:	add    cl,ch
  401de1:	lock or al,BYTE PTR [eax]
  401de4:	jmp    0xea40116d
  401de9:	lock push es
  401deb:	add    bl,ch
  401ded:	lock push es
  401def:	sub    ecx,0xe90016f0
  401df5:	add    BYTE PTR [edi],al
  401df7:	add    cl,ch
  401df9:	lock push ss
  401dfb:	add    cl,ch
  401dfd:	add    BYTE PTR [edi],al
  401dff:	add    BYTE PTR [eax],al
  401e01:	pop    edx
  401e02:	pop    es
  401e03:	add    BYTE PTR [eax],al
  401e05:	sub    al,BYTE PTR [edi]
  401e07:	add    BYTE PTR [eax],al
  401e09:	dec    edx
  401e0a:	pop    es
  401e0b:	add    BYTE PTR [eax],al
  401e0d:	dec    edx
  401e0e:	pop    es
  401e0f:	add    BYTE PTR [eax],al
  401e11:	push   cs
  401e12:	popa   
  401e13:	add    eax,DWORD PTR [eax]
  401e15:	pop    edx
  401e16:	or     BYTE PTR [eax],al
  401e18:	add    BYTE PTR [edx],cl
  401e1a:	pop    es
  401e1b:	add    BYTE PTR [eax],al
  401e1d:	or     al,BYTE PTR [edi]
  401e1f:	add    BYTE PTR [eax],al
  401e21:	sbb    al,BYTE PTR [edi]
  401e23:	add    BYTE PTR [eax],al
  401e25:	sbb    al,BYTE PTR [edi]
  401e27:	add    BYTE PTR [eax],al
  401e29:	or     al,BYTE PTR [edi]
  401e2b:	add    BYTE PTR [eax],al
  401e2d:	or     al,BYTE PTR [edi]
  401e2f:	add    BYTE PTR [eax],al
  401e31:	fcmovbe st,st(6)
  401e33:	add    eax,DWORD PTR [eax]
  401e35:	cli    
  401e36:	or     al,0x0
  401e38:	add    dl,cl
  401e3a:	push   es
  401e3b:	add    BYTE PTR [eax],al
  401e3d:	retf   0x6
  401e40:	add    BYTE PTR [eax],al
  401e42:	add    BYTE PTR [eax],al
  401e44:	fiadd  DWORD PTR [esi]
  401e46:	add    BYTE PTR [eax],al
  401e48:	fiadd  DWORD PTR [esi]
  401e4a:	add    BYTE PTR [eax],al
  401e4c:	retf   0x6
  401e4f:	add    dl,cl
  401e51:	push   es
  401e52:	add    BYTE PTR [eax],al
  401e54:	call   0x6:0x9a000006
  401e5b:	add    BYTE PTR [edx-0x75fffffa],cl
  401e61:	push   es
  401e62:	add    BYTE PTR [eax],al
  401e64:	call   0x6:0x9a000006
  401e6b:	add    BYTE PTR [edx+0x26000016],cl
  401e71:	or     BYTE PTR [eax],al
  401e73:	add    BYTE PTR [edx+0x6],bl
  401e76:	add    BYTE PTR [eax],al
  401e78:	pop    edx
  401e79:	push   es
  401e7a:	add    BYTE PTR [eax],al
  401e7c:	repz fild WORD PTR [ebx]
  401e7f:	add    bl,dh
  401e81:	fild   WORD PTR [ebx]
  401e83:	add    bl,dh
  401e85:	fild   WORD PTR [ebx]
  401e87:	add    bl,dh
  401e89:	fild   WORD PTR [ebx]
  401e8b:	add    bl,dh
  401e8d:	or     DWORD PTR [eax+0x65],esi
  401e90:	mov    ebx,0xf30003bb
  401e95:	pop    ss
  401e96:	test   DWORD PTR [ebx],eax
  401e98:	repz fist WORD PTR [ebx]
  401e9b:	add    bl,dh
  401e9d:	fistp  QWORD PTR [edi+0x3]
  401ea0:	repz (bad) 
  401ea3:	dec    DWORD PTR [eax+eiz*8]
  401ea6:	add    eax,DWORD PTR [eax]
  401ea8:	add    BYTE PTR [eax],al
  401eaa:	add    bl,dh
  401eac:	fild   WORD PTR [ebx]
  401eae:	add    bl,dh
  401eb0:	fild   WORD PTR [ebx]
  401eb2:	add    bl,dh
  401eb4:	mov    edi,0x1a530003
  401eb9:	pusha  
  401eba:	popa   
  401ebb:	pop    edi
  401ebc:	aas    
  401ebd:	add    al,0x0
  401ebf:	repz daa 
  401ec1:	push   ds
  401ec2:	add    bl,dh
  401ec4:	fbld   TBYTE PTR [ebx+0x9dff303]
  401eca:	add    bl,dh
  401ecc:	fisttp WORD PTR [ebx+0x3dff303]
  401ed2:	add    bl,dh
  401ed4:	fild   WORD PTR [ebx]
  401ed6:	add    bl,dh
  401ed8:	fild   WORD PTR [ebx]
  401eda:	add    bl,dh
  401edc:	pop    ds
  401edd:	add    al,0x0
  401edf:	mov    bl,0xc9
  401ee1:	jno    0x401f48
  401ee3:	pop    es
  401ee4:	icebp  
  401ee5:	bound  eax,QWORD PTR [eax]
  401ee7:	repz mov ecx,0xdff3001f
  401eed:	rol    DWORD PTR [ebx],cl
  401eef:	repz fild QWORD PTR [ebx]
  401ef2:	add    bl,dh
  401ef4:	fist   WORD PTR [ecx-0x16f90cfd]
  401efa:	add    esi,ebx
  401efc:	push   es
  401efd:	jmp    0xe9471205
  401f02:	add    esi,ebx
  401f04:	push   es
  401f05:	test   eax,0xe944f303
  401f0a:	add    esi,ebx
  401f0c:	push   es
  401f0d:	jmp    0x401f15
  401f12:	repz push es
  401f14:	jmp    0xe947121c
  401f19:	add    esi,ebx
  401f1b:	push   es
  401f1c:	jmp    0xe9471224
  401f21:	add    esi,ebx
  401f23:	push   es
  401f24:	jmp    0xe947122c
  401f29:	add    esi,ebx
  401f2b:	push   es
  401f2c:	jmp    0xe9471234
  401f31:	add    esi,ebx
  401f33:	push   es
  401f34:	jmp    0xe947123c
  401f39:	add    esi,ebx
  401f3b:	push   es
  401f3c:	jmp    0xe9471244
  401f41:	add    esi,ebx
  401f43:	push   es
  401f44:	jmp    0xe947124c
  401f49:	add    esi,ebx
  401f4b:	push   es
  401f4c:	jmp    0xe9471254
  401f51:	add    esi,ebx
  401f53:	push   es
  401f54:	jmp    0xe947125c
  401f59:	add    esi,ebx
  401f5b:	push   es
  401f5c:	jmp    0xe9471264
  401f61:	add    esi,ebx
  401f63:	push   es
  401f64:	jmp    0xe947126c
  401f69:	add    esi,ebx
  401f6b:	push   es
  401f6c:	jmp    0xe9471274
  401f71:	add    esi,ebx
  401f73:	push   es
  401f74:	add    cl,ch
  401f76:	add    BYTE PTR [eax],al
  401f78:	add    al,dh
  401f7a:	push   es
  401f7b:	add    cl,ch
  401f7d:	lock push es
  401f7f:	add    cl,ch
  401f81:	lock push es
  401f83:	add    cl,ch
  401f85:	lock push es
  401f87:	add    cl,ch
  401f89:	lock push es
  401f8b:	add    cl,ch
  401f8d:	lock push es
  401f8f:	add    cl,ch
  401f91:	lock push es
  401f93:	add    cl,ch
  401f95:	lock push es
  401f97:	add    cl,ch
  401f99:	lock push es
  401f9b:	add    cl,ch
  401f9d:	lock push es
  401f9f:	add    cl,ch
  401fa1:	lock push es
  401fa3:	add    cl,ch
  401fa5:	lock push es
  401fa7:	add    cl,ch
  401fa9:	lock push es
  401fab:	add    cl,ch
  401fad:	lock push es
  401faf:	add    cl,ch
  401fb1:	lock push es
  401fb3:	add    cl,ch
  401fb5:	lock push es
  401fb7:	add    cl,ch
  401fb9:	lock push es
  401fbb:	add    cl,ch
  401fbd:	lock push es
  401fbf:	add    cl,ch
  401fc1:	lock push es
  401fc3:	add    cl,ch
  401fc5:	lock push es
  401fc7:	add    cl,ch
  401fc9:	lock push es
  401fcb:	add    cl,ch
  401fcd:	lock push es
  401fcf:	add    cl,ch
  401fd1:	lock push es
  401fd3:	add    cl,ch
  401fd5:	lock push es
  401fd7:	add    cl,ch
  401fd9:	lock push es
  401fdb:	add    cl,ch
  401fdd:	add    BYTE PTR [eax],al
  401fdf:	add    al,dh
  401fe1:	push   es
  401fe2:	add    cl,ch
  401fe4:	lock push es
  401fe6:	add    cl,ch
  401fe8:	lock push es
  401fea:	add    cl,ch
  401fec:	lock push es
  401fee:	add    cl,ch
  401ff0:	lock push es
  401ff2:	add    BYTE PTR [eax],al
  401ff4:	call   0x3:0x8a000003
  401ffb:	add    BYTE PTR [edx+0x5a000003],cl
  402001:	add    eax,DWORD PTR [eax]
  402003:	add    BYTE PTR [edx+0x3],bl
  402006:	add    BYTE PTR [eax],al
  402008:	dec    edx
  402009:	add    eax,DWORD PTR [eax]
  40200b:	add    BYTE PTR [edx+0x3],cl
  40200e:	add    BYTE PTR [eax],al
  402010:	pop    edx
  402011:	add    eax,DWORD PTR [eax]
  402013:	add    BYTE PTR [edx+0x3],bl
  402016:	add    BYTE PTR [eax],al
  402018:	dec    edx
  402019:	add    eax,DWORD PTR [eax]
  40201b:	add    BYTE PTR [edx+0x3],cl
  40201e:	add    BYTE PTR [eax],al
  402020:	sbb    al,BYTE PTR [ebx]
  402022:	add    BYTE PTR [eax],al
  402024:	sbb    al,BYTE PTR [ebx]
  402026:	add    BYTE PTR [eax],al
  402028:	or     al,BYTE PTR [ebx]
  40202a:	add    BYTE PTR [eax],al
  40202c:	or     al,BYTE PTR [ebx]
  40202e:	add    BYTE PTR [eax],al
  402030:	sbb    al,BYTE PTR [ebx]
  402032:	add    BYTE PTR [eax],al
  402034:	sbb    al,BYTE PTR [ebx]
  402036:	add    BYTE PTR [eax],al
  402038:	or     al,BYTE PTR [ebx]
  40203a:	add    BYTE PTR [eax],al
  40203c:	or     al,BYTE PTR [ebx]
  40203e:	add    BYTE PTR [eax],al
  402040:	fimul  DWORD PTR [edx]
  402042:	add    BYTE PTR [eax],al
  402044:	add    BYTE PTR [eax],al
  402046:	add    dl,bl
  402048:	or     al,BYTE PTR [eax]
  40204a:	add    dl,cl
  40204c:	or     al,BYTE PTR [eax]
  40204e:	add    dl,cl
  402050:	or     al,BYTE PTR [eax]
  402052:	add    dl,bl
  402054:	or     al,BYTE PTR [eax]
  402056:	add    dl,bl
  402058:	or     al,BYTE PTR [eax]
  40205a:	add    dl,cl
  40205c:	or     al,BYTE PTR [eax]
  40205e:	add    dl,cl
  402060:	or     al,BYTE PTR [eax]
  402062:	add    BYTE PTR [edx-0x65fffff6],bl
  402068:	or     al,BYTE PTR [eax]
  40206a:	add    BYTE PTR [edx-0xcfffff6],cl
  402070:	fild   WORD PTR [ebx]
  402072:	add    bl,dh
  402074:	fild   WORD PTR [ebx]
  402076:	add    bl,dh
  402078:	fild   WORD PTR [ebx]
  40207a:	add    bl,dh
  40207c:	fild   WORD PTR [ebx]
  40207e:	add    bl,dh
  402080:	fild   WORD PTR [ebx]
  402082:	add    bl,dh
  402084:	fild   WORD PTR [ebx]
  402086:	add    bl,dh
  402088:	fild   WORD PTR [ebx]
  40208a:	add    bl,dh
  40208c:	fild   WORD PTR [ebx]
  40208e:	add    bl,dh
  402090:	fild   WORD PTR [ebx]
  402092:	add    bl,dh
  402094:	fild   WORD PTR [ebx]
  402096:	add    bl,dh
  402098:	fild   WORD PTR [ebx]
  40209a:	add    bl,dh
  40209c:	fild   WORD PTR [ebx]
  40209e:	add    bl,dh
  4020a0:	fild   WORD PTR [ebx]
  4020a2:	add    bl,dh
  4020a4:	fild   WORD PTR [ebx]
  4020a6:	add    bl,dh
  4020a8:	fild   WORD PTR [ebx]
  4020aa:	add    BYTE PTR [eax],al
  4020ac:	add    BYTE PTR [eax],al
  4020ae:	repz fild WORD PTR [ebx]
  4020b1:	add    bl,dh
  4020b3:	mov    eax,ds:0x83f3037c
  4020b8:	jl     0x4020bd
  4020ba:	repz test DWORD PTR [ebx+eax*1-0xd],edi
  4020bf:	push   ecx
  4020c0:	jl     0x4020c5
  4020c2:	repz dec ecx
  4020c4:	jl     0x4020c9
  4020c6:	repz pop ds
  4020c8:	jl     0x4020cd
  4020ca:	repz mov cl,0x8b
  4020cd:	add    esi,ebx
  4020cf:	lds    ecx,FWORD PTR [ebx-0x74320cfd]
  4020d5:	add    esi,ebx
  4020d7:	jmp    0x332457
  4020dc:	jnp    0x4020e1
  4020de:	repz icebp 
  4020e0:	jnp    0x4020e5
  4020e2:	repz and edi,DWORD PTR [ebx+eax*1-0xd]
  4020e7:	inc    ecx
  4020e8:	jl     0x4020ed
  4020ea:	repz push es
  4020ec:	and    edi,DWORD PTR [eax+esi*8+0x6]
  4020f0:	jnp    0x40216e
  4020f2:	lock push es
  4020f4:	inc    ebx
  4020f5:	jl     0x4020e7
  4020f7:	push   es
  4020f8:	stos   DWORD PTR es:[edi],eax
  4020f9:	jl     0x4020eb
  4020fb:	push   es
  4020fc:	lahf   
  4020fd:	jl     0x4020ef
  4020ff:	push   es
  402100:	xchg   ecx,eax
  402101:	jl     0x4020f3
  402103:	push   es
  402104:	jae    0x402182
  402106:	lock push es
  402108:	xlat   BYTE PTR ds:[ebx]
  402109:	jl     0x4020fb
  40210b:	push   es
  40210c:	pop    ds
  40210d:	jge    0x4020ff
  40210f:	push   es
  402110:	mov    ebx,0x7c
  402115:	lock push es
  402117:	arpl   WORD PTR [ebp-0x10],di
  40211a:	push   es
  40211b:	xchg   DWORD PTR [ebp-0x10],edi
  40211e:	push   es
  40211f:	sub    edi,DWORD PTR [ebp-0x10]
  402122:	push   es
  402123:	adc    eax,0x4106f07d
  402128:	jge    0x40211a
  40212a:	push   es
  40212b:	xor    DWORD PTR [ebp-0x10],edi
  40212e:	push   es
  40212f:	out    dx,eax
  402130:	jge    0x402122
  402132:	push   es
  402133:	add    DWORD PTR [esi-0x10],edi
  402136:	push   es
  402137:	mov    ebp,0xe906f08a
  40213c:	add    esi,ebx
  40213e:	push   es
  40213f:	add    eax,DWORD PTR [edx-0x7de2f910]
  402145:	lock push es
  402147:	and    eax,DWORD PTR [edx-0x7dc4f910]
  40214d:	lock push es
  40214f:	jns    0x4020d2
  402151:	lock push es
  402153:	arpl   WORD PTR [edx-0x7db2f910],ax
  402159:	lock push es
  40215b:	in     eax,dx
  40215c:	xor    al,0x6
  40215f:	jmp    0x6f471467
  402164:	xor    al,0x6
  402167:	add    bl,bl
  402169:	jae    0x402173
  40216b:	add    BYTE PTR [ecx+0x6d000824],dh
  402171:	jae    0x40217b
  402173:	add    BYTE PTR [ecx],ah
  402175:	jb     0x40217f
  402177:	add    BYTE PTR ds:0x72000000,cl
  40217d:	or     BYTE PTR [eax],al
  40217f:	xor    DWORD PTR [edx+0x8],esi
  402182:	add    BYTE PTR [ebx],dh
  402184:	jb     0x40218e
  402186:	add    BYTE PTR [ecx],ch
  402188:	jb     0x402192
  40218a:	add    BYTE PTR [ebp-0x3efff78d],bh
  402190:	jae    0x40219a
  402192:	add    BYTE PTR [ecx-0x24],dl
  402195:	pop    es
  402196:	add    BYTE PTR [ebx+0x21000873],al
  40219c:	int3   
  40219d:	pop    es
  40219e:	add    BYTE PTR [ecx],dh
  4021a0:	les    eax,FWORD PTR [edi]
  4021a2:	add    cl,ch
  4021a4:	lock push es
  4021a6:	add    BYTE PTR [ecx+0x5f],bl
  4021a9:	or     BYTE PTR [eax],al
  4021ab:	jmp    0xaf4028a0
  4021b0:	xchg   ebp,eax
  4021b1:	pop    es
  4021b2:	add    BYTE PTR [ecx-0x73],bh
  4021b5:	pop    es
  4021b6:	add    BYTE PTR [edi-0x7b],al
  4021b9:	pop    es
  4021ba:	add    BYTE PTR [ebx-0x63],dl
  4021bd:	pop    es
  4021be:	add    BYTE PTR [edi],bl
  4021c0:	xchg   ebp,eax
  4021c1:	pop    es
  4021c2:	add    BYTE PTR [edi],cl
  4021c4:	lea    eax,[edi]
  4021c6:	add    bl,bh
  4021c8:	xchg   BYTE PTR [edi],al
  4021ca:	add    bh,dh
  4021cc:	pop    esi
  4021cd:	or     BYTE PTR [eax],al
  4021cf:	jecxz  0x402225
  4021d1:	or     BYTE PTR [eax],al
  4021d3:	dec    DWORD PTR [eax+ecx*1+0x0]
  4021d7:	pop    es
  4021d8:	arpl   WORD PTR [eax],cx
  4021da:	add    BYTE PTR [edi],bl
  4021dc:	inc    ebx
  4021dd:	or     BYTE PTR [eax],al
  4021df:	and    eax,DWORD PTR [eax]
  4021e1:	add    BYTE PTR [eax],al
  4021e3:	inc    ebx
  4021e4:	or     BYTE PTR [eax],al
  4021e6:	add    BYTE PTR [esi],ch
  4021e8:	ja     0x4021ed
  4021ea:	add    ah,bh
  4021ec:	jbe    0x4021f1
  4021ee:	add    BYTE PTR [esi],bl
  4021f0:	ja     0x4021f5
  4021f2:	add    BYTE PTR [esi],bh
  4021f4:	ja     0x4021f9
  4021f6:	add    BYTE PTR [esi],ch
  4021f8:	ja     0x4021fd
  4021fa:	add    BYTE PTR [edx+0x76],cl
  4021fd:	add    eax,DWORD PTR [eax]
  4021ff:	inc    esi
  402200:	jbe    0x402205
  402202:	add    BYTE PTR [esi+0x76],bl
  402205:	add    eax,DWORD PTR [eax]
  402207:	call   0x35c:0xa000035c
  40220e:	add    BYTE PTR [esp+ebx*2+0x5c080003],ah
  402215:	add    eax,DWORD PTR [eax]
  402217:	sub    BYTE PTR [ebx+eax*1+0x0],bl
  40221b:	cmp    BYTE PTR [ebx+eax*1+0x0],bl
  40221f:	rcr    BYTE PTR [ebx+0x3],cl
  402222:	add    BYTE PTR [esi-0x2bfffca5],bh
  402228:	pop    ebx
  402229:	add    eax,DWORD PTR [eax]
  40222b:	pop    bx
  40222d:	add    eax,DWORD PTR [eax]
  40222f:	mov    al,ds:0x400035b
  402234:	pop    esp
  402235:	add    eax,DWORD PTR [eax]
  402237:	mov    dh,0x5b
  402239:	add    eax,DWORD PTR [eax]
  40223b:	(bad)  
  40223c:	pop    ebx
  40223d:	add    eax,DWORD PTR [eax]
  40223f:	je     0x40229b
  402241:	add    eax,DWORD PTR [eax]
  402243:	add    dh,BYTE PTR [ebp+0x3]
  402246:	add    BYTE PTR [eax],al
  402248:	add    BYTE PTR [eax],al
  40224a:	cmp    BYTE PTR [ebp+0x3],dh
  40224d:	add    BYTE PTR [esi+0x75],cl
  402250:	add    eax,DWORD PTR [eax]
  402252:	mov    bh,BYTE PTR [eax+0x3]
  402255:	add    BYTE PTR [edx+0x78],bh
  402258:	add    eax,DWORD PTR [eax]
  40225a:	push   eax
  40225b:	jne    0x402260
  40225d:	add    BYTE PTR [edx+0x78],ah
  402260:	add    eax,DWORD PTR [eax]
  402262:	repz jno 0x4022d6
  402265:	add    esi,ebx
  402267:	imul   esi,DWORD PTR [ecx+0x3],0x371b3f3
  40226e:	repz mov edi,0xadf30371
  402274:	jno    0x402279
  402276:	repz cdq 
  402278:	jno    0x40227d
  40227a:	repz jmp 0xce3325f0
  402280:	jo     0x402285
  402282:	repz daa 
  402284:	jno    0x402289
  402286:	repz push DWORD PTR [eax+0x3]
  40228a:	repz jmp 0x78332600
  402290:	jo     0x402295
  402292:	repz push ebp
  402294:	jo     0x402299
  402296:	repz inc edi
  402298:	jo     0x40229d
  40229a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40229c:	jo     0x4022a1
  40229e:	repz aaa 
  4022a0:	jo     0x4022a5
  4022a2:	repz xor esi,DWORD PTR [eax+0x3]
  4022a6:	repz inc ebp
  4022a8:	jo     0x4022ad
  4022aa:	repz inc ebp
  4022ac:	jo     0x4022b1
  4022ae:	add    BYTE PTR [eax],al
  4022b0:	add    bl,dh
  4022b2:	fld    DWORD PTR [ebx-0x7c2c0cfd]
  4022b8:	add    esi,ebx
  4022ba:	lahf   
  4022bb:	add    DWORD PTR [ebx],0xfffffff3
  4022be:	scas   eax,DWORD PTR es:[edi]
  4022bf:	add    DWORD PTR [ebx],0xfffffff3
  4022c2:	push   ecx
  4022c3:	xchg   ebp,eax
  4022c4:	add    esi,ebx
  4022c6:	jne    0x40225d
  4022c8:	add    esi,ebx
  4022ca:	popa   
  4022cb:	xchg   ebp,eax
  4022cc:	add    esi,ebx
  4022ce:	test   DWORD PTR [ebp-0x6a7c0cfd],edx
  4022d4:	add    esi,ebx
  4022d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022d7:	ins    BYTE PTR es:[edi],dx
  4022d8:	add    esi,ebx
  4022da:	jns    0x402348
  4022dc:	add    esi,ebx
  4022de:	push   es
  4022df:	adc    ebp,DWORD PTR [ebx-0x10]
  4022e2:	push   es
  4022e3:	std    
  4022e4:	push   0xfffffff0
  4022e6:	push   es
  4022e7:	out    0x6a,eax
  4022e9:	lock push es
  4022eb:	iret   
  4022ec:	push   0xfffffff0
  4022ee:	push   es
  4022ef:	xlat   BYTE PTR ds:[ebx]
  4022f0:	push   0xfffffff0
  4022f2:	push   es
  4022f3:	mov    ds:0xa506f06a,eax
  4022f8:	push   0xfffffff0
  4022fa:	push   es
  4022fb:	test   eax,0x5306f06a
  402300:	push   0xfffffff0
  402302:	push   es
  402303:	jg     0x40236f
  402305:	lock push es
  402307:	jns    0x402373
  402309:	lock push es
  40230b:	or     eax,0x1506f06a
  402310:	push   0xfffffff0
  402312:	push   es
  402313:	and    ebp,DWORD PTR [edx+0x0]
  402316:	add    BYTE PTR [eax],al
  402318:	lock push es
  40231a:	and    ebp,DWORD PTR [edx-0x10]
  40231d:	push   es
  40231e:	mov    cl,0x69
  402320:	lock push es
  402322:	adc    DWORD PTR [edx-0x10],ebp
  402325:	push   es
  402326:	add    ebp,DWORD PTR [edx-0x10]
  402329:	push   es
  40232a:	loope  0x402395
  40232c:	lock push es
  40232e:	push   ebp
  40232f:	ins    DWORD PTR es:[edi],dx
  402330:	lock push es
  402332:	dec    ecx
  402333:	ins    DWORD PTR es:[edi],dx
  402334:	lock push es
  402336:	das    
  402337:	ins    DWORD PTR es:[edi],dx
  402338:	lock push es
  40233a:	jno    0x4023a9
  40233c:	lock push es
  40233e:	mov    ebp,DWORD PTR [ebp-0x10]
  402341:	push   es
  402342:	jg     0x4023b1
  402344:	lock push es
  402346:	jae    0x4023b5
  402348:	lock push es
  40234a:	xchg   edi,eax
  40234b:	ins    BYTE PTR es:[edi],dx
  40234c:	lock push es
  40234e:	jg     0x4023bc
  402350:	lock push es
  402352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402353:	ins    BYTE PTR es:[edi],dx
  402354:	lock push es
  402356:	int    0x6c
  402358:	lock push es
  40235a:	add    BYTE PTR [ebp-0x28fffba9],ch
  402360:	dec    edi
  402361:	add    al,0x0
  402363:	repz inc edi
  402365:	add    al,0x0
  402367:	aad    0x58
  402369:	add    al,0x0
  40236b:	iret   
  40236c:	pop    eax
  40236d:	add    al,0x0
  40236f:	mov    ch,0x48
  402371:	add    al,0x0
  402373:	scas   eax,DWORD PTR es:[edi]
  402374:	dec    eax
  402375:	add    al,0x0
  402377:	sbb    DWORD PTR [eax],0x4
  40237a:	add    BYTE PTR [edi+0x18000000],al
  402380:	add    al,0x0
  402382:	push   ebp
  402383:	or     BYTE PTR [eax+eax*1],al
  402386:	ins    DWORD PTR es:[edi],dx
  402387:	or     BYTE PTR [eax+eax*1],al
  40238a:	sbb    ebx,DWORD PTR [edi]
  40238c:	add    al,0x0
  40238e:	xor    eax,0x1d000417
  402393:	(bad)  
  402395:	add    BYTE PTR ds:0xb5000407,ch
  40239b:	fadd   DWORD PTR [ebx]
  40239d:	add    cl,cl
  40239f:	fadd   DWORD PTR [ebx]
  4023a1:	add    ch,dl
  4023a3:	enter  0x3,0xe9
  4023a7:	enter  0x3,0x59
  4023ab:	lds    eax,FWORD PTR [ebx]
  4023ad:	add    BYTE PTR [edi],dh
  4023af:	mov    ebp,0xc5390003
  4023b4:	add    eax,DWORD PTR [eax]
  4023b6:	cmp    DWORD PTR [ebp-0x5a76fffd],0x9d610003
  4023c0:	add    eax,DWORD PTR [eax]
  4023c2:	mov    ebp,0xc70003a5
  4023c7:	popf   
  4023c8:	add    eax,DWORD PTR [eax]
  4023ca:	lods   eax,DWORD PTR ds:[esi]
  4023cb:	test   DWORD PTR [ebx],eax
  4023cd:	add    BYTE PTR [ecx-0x2afffc83],ch
  4023d3:	test   DWORD PTR [ebx],eax
  4023d5:	add    BYTE PTR [eax],al
  4023d7:	and    al,0x71
  4023d9:	add    eax,DWORD PTR [eax]
  4023db:	les    esi,FWORD PTR [eax+0x3]
  4023de:	add    dl,bl
  4023e0:	jo     0x4023e5
  4023e2:	add    BYTE PTR [eax],al
  4023e4:	add    BYTE PTR [eax],al
  4023e6:	bnd jno 0x4023ec
  4023e9:	add    dl,ah
  4023eb:	pop    ecx
  4023ec:	add    eax,DWORD PTR [eax]
  4023ee:	mov    dh,BYTE PTR [eax+0x3]
  4023f1:	add    dl,bl
  4023f3:	add    eax,DWORD PTR [eax]
  4023f5:	add    BYTE PTR [esi],ah
  4023f7:	xchg   esp,eax
  4023f8:	add    eax,DWORD PTR [eax]
  4023fa:	sub    dl,BYTE PTR [ebx+eax*1+0x393dc00]
  402401:	add    BYTE PTR [edx-0x6dfffffd],bl
  402407:	add    eax,DWORD PTR [eax]
  402409:	and    BYTE PTR [ebx-0x677ffffd],0x3
  402410:	add    BYTE PTR [eax-0x7ffffc6c],al
  402416:	mov    al,BYTE PTR [ebx]
  402418:	add    BYTE PTR [eax],al
  40241a:	push   esi
  40241b:	ins    DWORD PTR es:[edi],dx
  40241c:	add    eax,DWORD PTR [eax]
  40241e:	sub    al,0x6e
  402420:	add    eax,DWORD PTR [eax]
  402422:	mov    al,0x6d
  402424:	add    eax,DWORD PTR [eax]
  402426:	dec    edx
  402427:	add    eax,DWORD PTR [eax]
  402429:	add    al,bl
  40242b:	ins    DWORD PTR es:[edi],dx
  40242c:	add    eax,DWORD PTR [eax]
  40242e:	sub    al,0x6e
  402430:	add    eax,DWORD PTR [eax]
  402432:	xor    BYTE PTR [esi+0x3],ch
  402435:	add    BYTE PTR [esi-0x79fffc92],al
  40243b:	outs   dx,BYTE PTR ds:[esi]
  40243c:	add    eax,DWORD PTR [eax]
  40243e:	sub    BYTE PTR [esi+0x3],ch
  402441:	add    ah,dh
  402443:	ins    DWORD PTR es:[edi],dx
  402444:	add    eax,DWORD PTR [eax]
  402446:	inc    esp
  402447:	outs   dx,BYTE PTR ds:[esi]
  402448:	add    eax,DWORD PTR [eax]
  40244a:	add    BYTE PTR [eax],al
  40244c:	add    BYTE PTR [esi],al
  40244e:	outs   dx,BYTE PTR ds:[esi]
  40244f:	add    eax,DWORD PTR [eax]
  402451:	(bad)  
  402452:	ins    BYTE PTR es:[edi],dx
  402453:	add    eax,DWORD PTR [eax]
  402455:	repz daa 
  402457:	jp     0x40245c
  402459:	repz sbb edi,DWORD PTR [edx+0x3]
  40245d:	repz dec edi
  40245f:	jp     0x402464
  402461:	repz push ecx
  402463:	jp     0x402468
  402465:	repz imul edi,DWORD PTR [edx+0x3],0xfffffff3
  40246a:	push   edi
  40246b:	jns    0x402470
  40246d:	repz cmp DWORD PTR [edx+0x3],edi
  402471:	repz and eax,0x2df3037a
  402477:	jp     0x40247c
  402479:	repz lds eax,FWORD PTR [ebx]
  40247c:	add    BYTE PTR [ebx+0x30],dh
  40247f:	jp     0x402484
  402481:	repz loope 0x4024fd
  402484:	add    esi,ebx
  402486:	out    dx,eax
  402487:	add    eax,DWORD PTR [eax]
  402489:	repz lahf 
  40248b:	js     0x402490
  40248d:	repz out dx,eax
  40248f:	add    eax,DWORD PTR [eax]
  402491:	repz pop ds
  402493:	mov    BYTE PTR [ebx],al
  402495:	repz mov bh,0x87
  402498:	add    esi,ebx
  40249a:	mov    DWORD PTR [edi-0x78180cfd],0x87ebf303
  4024a4:	add    esi,ebx
  4024a6:	lea    eax,[eax-0x7f6c0cfd]
  4024ac:	add    esi,ebx
  4024ae:	das    
  4024af:	add    BYTE PTR [ebx],0x0
  4024b2:	add    BYTE PTR [eax],al
  4024b4:	repz jg 0x402437
  4024b7:	add    esi,ebx
  4024b9:	xchg   ebp,eax
  4024ba:	add    BYTE PTR [ebx],0xf3
  4024bd:	imul   eax,DWORD PTR [eax-0x7f380cfd],0x80b9f303
  4024c7:	add    esi,ebx
  4024c9:	jns    0x40244b
  4024cb:	add    esi,ebx
  4024cd:	add    DWORD PTR [eax-0x1cf90cfd],0xffffff80
  4024d4:	lock push es
  4024d6:	rol    DWORD PTR [eax-0x7f00f910],1
  4024dc:	lock push es
  4024de:	jmp    0x69471563
  4024e3:	xchg   eax,esi
  4024e5:	push   es
  4024e6:	push   ebp
  4024e7:	xchg   eax,esi
  4024e9:	push   es
  4024ea:	dec    ebp
  4024eb:	xchg   eax,esi
  4024ed:	push   es
  4024ee:	test   DWORD PTR [edi-0x7f50f910],eax
  4024f4:	lock push es
  4024f6:	mov    bh,0x80
  4024f8:	lock push es
  4024fa:	ret    
  4024fb:	xor    al,0x6
  4024fe:	in     eax,0x80
  402500:	lock push es
  402502:	fild   DWORD PTR [eax-0x7ef6f910]
  402508:	lock push es
  40250a:	add    eax,0xed06f081
  40250f:	xor    al,0x6
  402512:	xor    DWORD PTR [ecx-0x7ebef910],eax
  402518:	add    BYTE PTR [eax],al
  40251a:	add    al,dh
  40251c:	push   es
  40251d:	add    DWORD PTR [ecx-0x7eeaf910],eax
  402523:	lock push es
  402525:	int    0x82
  402527:	lock push es
  402529:	icebp  
  40252a:	xor    al,0x6
  40252d:	jge    0x4024b1
  40252f:	lock push es
  402531:	test   DWORD PTR [edx-0x7dbef910],eax
  402537:	lock push es
  402539:	xor    DWORD PTR [edx-0x7d6cf910],eax
  40253f:	lock push es
  402541:	add    DWORD PTR [edx-0x7d98f910],0xfffffff0
  402548:	push   es
  402549:	ins    DWORD PTR es:[edi],dx
  40254a:	xor    al,0x6
  40254d:	add    BYTE PTR [ecx+0x7b000972],dh
  402553:	jae    0x40255e
  402555:	add    BYTE PTR [edi-0x72fff674],bl
  40255b:	jb     0x402566
  40255d:	add    BYTE PTR [ecx-0x44fff68e],cl
  402563:	jb     0x40256e
  402565:	add    BYTE PTR [ebp+0x7f000872],ch
  40256b:	jo     0x402575
  40256d:	add    BYTE PTR [edi+0x77],ah
  402570:	or     BYTE PTR [eax],al
  402572:	dec    ebp
  402573:	outs   dx,DWORD PTR ds:[esi]
  402574:	or     BYTE PTR [eax],al
  402576:	cdq    
  402577:	jo     0x402581
  402579:	add    BYTE PTR [ebx-0x44fff790],ch
  40257f:	add    BYTE PTR [eax],al
  402581:	add    BYTE PTR [eax+0x8],dh
  402584:	add    bl,cl
  402586:	jo     0x402590
  402588:	add    BYTE PTR [ebp-0x18fff790],bh
  40258e:	outs   dx,DWORD PTR ds:[esi]
  40258f:	or     BYTE PTR [eax],al
  402591:	shl    DWORD PTR [edi+0x8],1
  402594:	add    BYTE PTR [ebp-0x6efff792],dh
  40259a:	jbe    0x4025a4
  40259c:	add    bl,al
  40259e:	outs   dx,BYTE PTR ds:[esi]
  40259f:	or     BYTE PTR [eax],al
  4025a1:	mov    ds:0x4d000876,eax
  4025a6:	outs   dx,BYTE PTR ds:[esi]
  4025a7:	or     BYTE PTR [eax],al
  4025a9:	push   ecx
  4025aa:	jbe    0x4025b4
  4025ac:	add    BYTE PTR [ebx+0x6e],ah
  4025af:	or     BYTE PTR [eax],al
  4025b1:	gs jbe 0x4025bc
  4025b4:	add    bh,ch
  4025b6:	outs   dx,BYTE PTR ds:[esi]
  4025b7:	or     BYTE PTR [eax],al
  4025b9:	xlat   BYTE PTR ds:[ebx]
  4025ba:	jbe    0x4025c4
  4025bc:	add    bl,al
  4025be:	outs   dx,BYTE PTR ds:[esi]
  4025bf:	or     BYTE PTR [eax],al
  4025c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025c2:	jbe    0x4025cc
  4025c4:	add    BYTE PTR ds:0x86d,cl
  4025ca:	mov    al,BYTE PTR cs:[ebx]
  4025cd:	add    ah,ch
  4025cf:	mov    WORD PTR [ebx],es
  4025d1:	add    BYTE PTR [eax],bh
  4025d3:	mov    al,BYTE PTR [ebx]
  4025d5:	add    ah,al
  4025d7:	mov    al,BYTE PTR [ebx]
  4025d9:	add    ah,ah
  4025db:	mov    al,BYTE PTR [ebx]
  4025dd:	add    BYTE PTR [eax-0x2ffffc76],dh
  4025e3:	mov    al,BYTE PTR [ebx]
  4025e5:	add    BYTE PTR [eax],al
  4025e7:	add    BYTE PTR [eax],al
  4025e9:	sbb    al,BYTE PTR [esi-0x7a47fffd]
  4025ef:	add    eax,DWORD PTR [eax]
  4025f1:	retf   0x385
  4025f4:	add    ah,bl
  4025f6:	arpl   WORD PTR [ebx],ax
  4025f8:	add    dl,ch
  4025fa:	xchg   BYTE PTR [ebx],al
  4025fc:	add    BYTE PTR [edx+0x74000363],al
  402602:	arpl   WORD PTR [ebx],ax
  402604:	add    BYTE PTR [esp+eiz*2+0x3],al
  402608:	add    BYTE PTR [eax+0x64],dl
  40260b:	add    eax,DWORD PTR [eax]
  40260d:	test   BYTE PTR [edi-0x77f5fffd],0x3
  402614:	add    BYTE PTR [eax+ecx*4],al
  402617:	add    eax,DWORD PTR [eax]
  402619:	aam    0x87
  40261b:	add    eax,DWORD PTR [eax]
  40261d:	sbb    BYTE PTR [eax-0x77f7fffd],cl
  402623:	add    eax,DWORD PTR [eax]
  402625:	mov    BYTE PTR cs:[ebx],al
  402628:	add    BYTE PTR [edx],bl
  40262a:	mov    BYTE PTR [ebx],al
  40262c:	add    BYTE PTR [edx+0x40000387],bl
  402632:	mov    BYTE PTR [ebx],al
  402634:	add    BYTE PTR [edx+0x7],cl
  402637:	add    BYTE PTR [eax],al
  402639:	inc    eax
  40263a:	js     0x40263f
  40263c:	add    BYTE PTR [eax+0x78],bl
  40263f:	add    eax,DWORD PTR [eax]
  402641:	mov    dh,0x7a
  402643:	add    eax,DWORD PTR [eax]
  402645:	repz adc eax,0x2df30394
  40264b:	xchg   esp,eax
  40264c:	add    eax,DWORD PTR [eax]
  40264e:	add    BYTE PTR [eax],al
  402650:	repz pop ebp
  402652:	xchg   esp,eax
  402653:	add    esi,ebx
  402655:	cmp    edx,DWORD PTR [ebx+eax*1+0x3946ff3]
  40265c:	repz (bad) 
  40265e:	xchg   ebx,eax
  40265f:	add    esi,ebx
  402661:	mov    ds:0xadf30393,eax
  402666:	xchg   ebx,eax
  402667:	add    esi,ebx
  402669:	leave  
  40266a:	xchg   ebx,eax
  40266b:	add    esi,ebx
  40266d:	ret    
  40266e:	xchg   ebx,eax
  40266f:	add    esi,ebx
  402671:	add    eax,0xbf30379
  402676:	jns    0x40267b
  402678:	repz (bad) 
  40267a:	js     0x40267f
  40267c:	repz adc eax,0x8bf30379
  402682:	js     0x402687
  402684:	repz inc ecx
  402686:	jns    0x40268b
  402688:	repz inc edi
  40268a:	jns    0x40268f
  40268c:	repz sbb DWORD PTR [ecx+0x3],edi
  402690:	repz das 
  402692:	jns    0x402697
  402694:	repz out dx,eax
  402696:	add    eax,DWORD PTR [eax]
  402698:	repz mov ebp,0x94730003
  40269e:	jbe    0x4026a3
  4026a0:	repz fiadd WORD PTR [ebx]
  4026a3:	add    BYTE PTR [ebx-0x15],dh
  4026a6:	add    eax,DWORD PTR [eax]
  4026a8:	jae    0x402699
  4026aa:	add    eax,DWORD PTR [eax]
  4026ac:	jae    0x402634
  4026ae:	jbe    0x4026b3
  4026b0:	repz fiadd DWORD PTR [ebx]
  4026b3:	add    BYTE PTR [eax],al
  4026b5:	add    BYTE PTR [eax],al
  4026b7:	jae    0x4026a2
  4026b9:	add    eax,DWORD PTR [eax]
  4026bb:	jae    0x4026e5
  4026bd:	jp     0x4026c2
  4026bf:	repz mov bl,0x79
  4026c2:	add    esi,ebx
  4026c4:	push   es
  4026c5:	in     eax,dx
  4026c6:	add    esi,ebx
  4026c8:	xchg   dl,bl
  4026ca:	add    esi,ebx
  4026cc:	xchg   BYTE PTR ds:0xfb06f07a,cl
  4026d2:	jns    0x4026c4
  4026d4:	push   es
  4026d5:	fild   WORD PTR [ebx]
  4026d7:	repz xchg ah,dl
  4026da:	add    esi,ebx
  4026dc:	xchg   BYTE PTR [ebp-0x14790cfd],bh
  4026e2:	add    esi,ebx
  4026e4:	xchg   dh,bh
  4026e6:	add    esi,ebx
  4026e8:	xchg   cl,ch
  4026ea:	jns    0x4026dc
  4026ec:	push   es
  4026ed:	out    dx,eax
  4026ee:	add    esi,ebx
  4026f0:	xchg   ch,dh
  4026f2:	add    esi,ebx
  4026f4:	xchg   BYTE PTR ds:0x2b06f076,dh
  4026fa:	jbe    0x4026ec
  4026fc:	push   es
  4026fd:	xor    DWORD PTR [esi-0x10],esi
  402700:	push   es
  402701:	jle    0x402706
  402703:	repz xchg cl,bh
  402706:	add    esi,ebx
  402708:	xchg   dl,ch
  40270a:	add    esi,ebx
  40270c:	xchg   dl,bh
  40270e:	add    esi,ebx
  402710:	xchg   BYTE PTR [ecx+0x4],bl
  402713:	repz xchg cl,ch
  402716:	add    esi,ebx
  402718:	push   es
  402719:	ja     0x4026b0
  40271b:	add    BYTE PTR [eax],al
  40271d:	add    al,dh
  40271f:	push   es
  402720:	test   eax,0xa306f095
  402725:	xchg   ebp,eax
  402726:	lock push es
  402728:	mov    ebp,0xbf06f095
  40272d:	xchg   ebp,eax
  40272e:	lock push es
  402730:	adc    DWORD PTR [ebp-0x6a66f910],0x958706f0
  40273a:	lock push es
  40273c:	in     eax,dx
  40273d:	xchg   ecx,eax
  40273e:	lock push es
  402740:	add    bh,bl
  402742:	add    BYTE PTR ds:0x562c900,0x0
  402749:	adc    esp,DWORD PTR [ecx+0x5]
  40274c:	add    BYTE PTR ds:0xa9000561,dl
  402752:	bound  eax,QWORD PTR ds:0x582bb00
  402758:	add    BYTE PTR ds:0xa3000581,bl
  40275e:	add    BYTE PTR ds:0x6f0e900,0x0
  402765:	arpl   WORD PTR [ebx-0x747cfffb],cx
  40276b:	add    eax,0x57b4d00
  402770:	add    BYTE PTR [ebx-0x50fffa84],bl
  402776:	fs add al,0x0
  402779:	mov    ch,0x5c
  40277b:	add    al,0x0
  40277d:	mov    ch,0x64
  40277f:	add    al,0x0
  402781:	retf   
  402782:	add    BYTE PTR [eax],al
  402784:	add    BYTE PTR [esp+eax*1+0x0],bl
  402788:	fild   WORD PTR [esp+eax*1+0x0]
  40278c:	jmp    0xe9402e81
  402791:	lock push es
  402793:	add    BYTE PTR [edx-0x2fc1668d],dh
  402799:	adc    ebx,ecx
  40279b:	dec    esp
  40279c:	mov    edx,ebx
  40279e:	jecxz  0x40278f
  4027a0:	inc    esp
  4027a1:	and    DWORD PTR [eax+0x274f8d3d],eax
  4027a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027a8:	imul   edi,ebp,0xf8644fd8
  4027ae:	clc    
  4027af:	jb     0x4027db
  4027b1:	mov    dl,0xb0
  4027b3:	push   ss
  4027b4:	push   ds
  4027b5:	mov    ebp,0xf2861ac5
  4027ba:	inc    ecx
  4027bb:	dec    esi
  4027bc:	add    BYTE PTR ds:0xacb12e20,ah
  4027c2:	cmp    bl,BYTE PTR [eax-0x740fb949]
  4027c8:	repz sbb DWORD PTR [esi],ecx
  4027cb:	repnz inc edx
  4027cd:	leave  
  4027ce:	push   es
  4027cf:	fiadd  WORD PTR [bx+di-0x4]
  4027d3:	sti    
  4027d4:	and    ecx,ebp
  4027d6:	xchg   BYTE PTR [esi+ebx*2-0x8],ch
  4027da:	fcomp  DWORD PTR [edi+0x47]
  4027dd:	nop
  4027de:	jmp    0xb2855bcd
  4027e3:	jno    0x402858
  4027e5:	mov    ebp,DWORD PTR [eax+0x2933]
  4027eb:	add    BYTE PTR [ebp*2-0x2657ee2e],al
  4027f2:	(bad)  
  4027f3:	mov    edi,0x603e8c4d
  4027f8:	ja     0x4027a2
  4027fa:	xor    ebp,DWORD PTR [ecx]
  4027fc:	les    ebp,FWORD PTR [edx+edx*8+0x11]
  402800:	sub    dl,bl
  402802:	(bad)  
  402803:	mov    edi,0x603e8b8d
  402808:	cwde   
  402809:	pop    eax
  40280a:	pop    es
  40280b:	cmc    
  40280c:	imul   eax,esi,0xffffffd3
  40280f:	adc    DWORD PTR [ebx-0x54],eax
  402812:	add    BYTE PTR [eax],al
  402814:	ror    BYTE PTR [ecx],cl
  402816:	loop   0x402839
  402818:	inc    edx
  402819:	sub    BYTE PTR [ebp-0x53],dl
  40281c:	mov    ecx,eax
  40281e:	dec    edx
  40281f:	inc    edi
  402820:	sbb    al,0x12
  402822:	cld    
  402823:	or     al,0xea
  402825:	outs   dx,DWORD PTR ds:[esi]
  402826:	mov    bh,0x38
  402828:	jg     0x40282b
  40282a:	fnsave [eax+0x1f]
  40282d:	dec    edi
  40282e:	call   0x241b3479
  402833:	mov    dh,0x19
  402835:	and    DWORD PTR [eax],ebp
  402837:	(bad)  
  402838:	repz inc esp
  40283a:	mov    esp,0x9565e265
  40283f:	mov    ebp,0x53e76fb1
  402844:	add    ebx,DWORD PTR [edx]
  402846:	sbb    al,0x5a
  402848:	icebp  
  402849:	dec    ebp
  40284a:	sub    DWORD PTR [eax+0x53],ecx
  40284d:	jo     0x40288c
  40284f:	pushf  
  402850:	add    BYTE PTR [eax],al
  402852:	add    BYTE PTR [esi-0x4d883171],dh
  402858:	sbb    eax,0x423c95b3
  40285d:	jp     0x4027e8
  40285f:	and    al,0x29
  402861:	mov    edx,0xd88bad32
  402866:	(bad)  
  402868:	dec    edx
  402869:	adc    ebx,DWORD PTR [edx]
  40286b:	and    DWORD PTR [edi],ebp
  40286d:	aas    
  40286e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40286f:	jmp    DWORD PTR [edx+0x2d]
  402872:	ins    BYTE PTR es:[edi],dx
  402873:	mov    ecx,0x859f9268
  402878:	(bad)  
  40287a:	jge    0x40287a
  40287c:	stos   BYTE PTR es:[edi],al
  40287d:	fimul  DWORD PTR [ebx+eiz*1-0x49]
  402881:	push   ebp
  402882:	fdiv   DWORD PTR [ebx]
  402884:	cmp    al,0x2a
  402886:	mov    ecx,0x9bf82400
  40288b:	mov    edi,0x4dc18dd6
  402890:	jecxz  0x402905
  402892:	shl    edx,1
  402894:	jb     0x402829
  402896:	add    BYTE PTR [ebx-0x4b0233d3],dh
  40289c:	outs   dx,DWORD PTR ds:[esi]
  40289d:	popf   
  40289e:	adc    cl,bh
  4028a0:	dec    ebp
  4028a1:	jno    0x402872
  4028a3:	add    bl,BYTE PTR [eax+0x36]
  4028a6:	add    BYTE PTR [ecx-0x10],cl
  4028a9:	cmp    BYTE PTR [esi],ch
  4028ab:	iret   
  4028ac:	cmp    DWORD PTR [edi],esp
  4028ae:	xor    eax,0xd153493a
  4028b3:	loop   0x4028bb
  4028b5:	push   edi
  4028b6:	popf   
  4028b7:	add    BYTE PTR [eax],al
  4028b9:	add    bl,dh
  4028bb:	(bad)  
  4028bc:	cs scas al,BYTE PTR es:[edi]
  4028be:	imul   esp,DWORD PTR [edi],0x69
  4028c1:	popf   
  4028c2:	add    DWORD PTR [ebx-0x7cb8ef2],edi
  4028c8:	jo     0x402900
  4028ca:	repz mov al,0xe9
  4028cd:	cmp    BYTE PTR ds:0xa5c75023,al
  4028d3:	jae    0x402932
  4028d5:	xor    DWORD PTR [eax+edi*8],0xb0f36589
  4028dc:	jmp    0x6f05dc12
  4028e1:	popf   
  4028e2:	add    DWORD PTR [ebx-0x7cb8f32],edi
  4028e8:	jo     0x402920
  4028ea:	repz mov al,0xe9
  4028ed:	cmp    ch,al
  4028ef:	and    ch,al
  4028f1:	imul   esi,DWORD PTR [esi+0x5b],0x68
  4028f5:	jo     0x40292b
  4028f7:	clc    
  4028f8:	jo     0x402930
  4028fa:	repz mov al,0xe9
  4028fd:	cmp    ch,al
  4028ff:	and    cl,BYTE PTR [eax]
  402901:	cmp    al,0x6a
  402903:	or     eax,ebx
  402905:	int3   
  402906:	mov    ch,0xf7
  402908:	dec    ecx
  402909:	dec    esp
  40290a:	repz push es
  40290c:	jmp    0x7c481c14
  402911:	popf   
  402912:	lahf   
  402913:	inc    edx
  402914:	in     eax,dx
  402915:	fisub  DWORD PTR [ebx-0xc9f7709]
  40291b:	(bad)  
  40291c:	cs call 0x5d26:0x6b000000
  402924:	stos   BYTE PTR es:[edi],al
  402925:	pop    edi
  402926:	inc    edx
  402927:	int    0xec
  402929:	ret    
  40292a:	test   DWORD PTR [eax+0x2ec6f360],0x266b9a
  402934:	gs ins DWORD PTR es:[edi],dx
  402936:	loopne 0x402954
  402938:	or     cl,BYTE PTR [edx+0x1e5411b6]
  40293e:	pop    es
  40293f:	shr    BYTE PTR [esi],0x37
  402942:	(bad)  
  402944:	in     eax,dx
  402945:	jae    0x4029a0
  402947:	xor    DWORD PTR [eax],ebx
  402949:	or     edx,ebx
  40294b:	dec    esp
  40294c:	arpl   bx,dx
  40294e:	xor    eax,0xff4833a4
  402953:	push   ebp
  402954:	xor    eax,0xbaeb8556
  402959:	fidivr WORD PTR [eax+0x62e9711]
  40295f:	shr    BYTE PTR [esi+0x2e208e5a],0x5
  402966:	jge    0x40292c
  402968:	bound  edx,QWORD PTR [ebx-0x48]
  40296b:	adc    DWORD PTR [ebx+ebx*2+0x6],ebp
  40296f:	adc    BYTE PTR [ebx+0x2c0489f1],ah
  402975:	xor    DWORD PTR [edi],edi
  402977:	mov    ds:0x481218da,eax
  40297c:	jae    0x40294b
  40297e:	mov    al,ds:0x5b99fc7f
  402983:	jbe    0x4029f5
  402985:	add    BYTE PTR [eax],al
  402987:	add    BYTE PTR [ebx],dl
  402989:	adc    cl,BYTE PTR [ecx-0x7e]
  40298c:	pop    ds
  40298d:	mov    dh,0x11
  40298f:	push   edi
  402990:	mov    DWORD PTR [edi],eax
  402992:	shr    BYTE PTR [esi+0x61208f7a],0xb5
  402999:	add    ah,BYTE PTR [edi]
  40299b:	aas    
  40299c:	es mov ecx,0x7289a11
  4029a2:	adc    BYTE PTR [ebx-0x10],al
  4029a5:	test   DWORD PTR [edi+0x7b],esi
  4029a8:	or     al,0x12
  4029aa:	dec    ecx
  4029ab:	inc    edx
  4029ac:	fidiv  WORD PTR [ebp-0x517bffef]
  4029b2:	add    al,al
  4029b4:	lds    eax,FWORD PTR [eax-0x3f54df78]
  4029ba:	nop
  4029bb:	inc    ebp
  4029bc:	add    BYTE PTR [edi],0xd0
  4029bf:	adc    DWORD PTR [ebx],eax
  4029c1:	or     DWORD PTR [eax],eax
  4029c3:	stos   BYTE PTR es:[edi],al
  4029c4:	mov    cl,BYTE PTR [ebp+0x2e]
  4029c7:	and    al,0xe2
  4029c9:	ins    DWORD PTR es:[edi],dx
  4029ca:	dec    ebx
  4029cb:	addr16 call 0xc751faa6
  4029d1:	xor    al,BYTE PTR [eax]
  4029d3:	rol    BYTE PTR ds:0x32fffd9b,0x28
  4029da:	mov    ebp,0xd0df3949
  4029df:	adc    DWORD PTR [edi+0x3b],esp
  4029e2:	add    al,al
  4029e4:	test   DWORD PTR [eax-0x8630003],esp
  4029ea:	fs call 0xd1e1:0x85000000
  4029f2:	adc    DWORD PTR [edi+0x611000ba],ebx
  4029f8:	cmp    BYTE PTR [esi],bh
  4029fa:	std    
  4029fb:	ins    DWORD PTR es:[edi],dx
  4029fc:	popa   
  4029fd:	scas   eax,DWORD PTR es:[edi]
  4029fe:	ins    DWORD PTR es:[edi],dx
  4029ff:	std    
  402a00:	adc    eax,0xcaa411d2
  402a05:	add    al,al
  402a07:	inc    ebp
  402a08:	jle    0x402992
  402a0a:	and    BYTE PTR [edi-0x1d],al
  402a0d:	xchg   ebx,ebp
  402a0f:	leave  
  402a10:	icebp  
  402a11:	rcl    DWORD PTR [ecx],1
  402a13:	inc    esp
  402a14:	retf   
  402a15:	add    al,al
  402a17:	test   DWORD PTR [ebp-0x78],edi
  402a1a:	and    BYTE PTR [edx+esi*8],bl
  402a1d:	popf   
  402a1e:	les    edx,FWORD PTR [ecx+0x7c]
  402a21:	rcl    BYTE PTR [ecx],cl
  402a23:	dec    edi
  402a24:	lahf   
  402a25:	add    BYTE PTR [eax],dl
  402a27:	xor    BYTE PTR [esi],al
  402a29:	add    DWORD PTR [ebx+esi*8],0xffffffbf
  402a2d:	push   0x15
  402a2f:	lods   al,BYTE PTR ds:[esi]
  402a30:	jmp    0x402a6b
  402a32:	rol    DWORD PTR [edx],1
  402a34:	jae    0x4029bf
  402a36:	add    BYTE PTR [ebx-0x730243d4],dh
  402a3c:	xor    dh,BYTE PTR [edi]
  402a3e:	sbb    al,0x76
  402a40:	popf   
  402a41:	mov    BYTE PTR [ebx+0x56b74d28],dh
  402a47:	dec    esp
  402a48:	xor    BYTE PTR [esi],bh
  402a4a:	fwait
  402a4b:	xchg   ebp,eax
  402a4c:	jbe    0x402a4d
  402a4e:	mov    dl,0x9c
  402a50:	shl    BYTE PTR [esi+0xd3],cl
  402a56:	add    cl,BYTE PTR [edi+0x0]
  402a59:	add    BYTE PTR [ebx],al
  402a5b:	sub    BYTE PTR [ecx],al
  402a5d:	push   ecx
  402a5e:	test   eax,0x84bf8b97
  402a63:	je     0x402a33
  402a65:	shl    edx,cl
  402a67:	mov    ?,ebp
  402a69:	jmp    esp
  402a6b:	mov    DWORD PTR [eax],0x78a3c951
  402a71:	scas   eax,DWORD PTR es:[edi]
  402a72:	xchg   esi,eax
  402a73:	hlt    
  402a74:	xor    edx,edx
  402a76:	add    dh,BYTE PTR [ebx+ecx*8+0x0]
  402a7a:	xor    ebp,DWORD PTR [ecx+ebx*4+0x71a6d388]
  402a81:	jbe    0x402a15
  402a83:	cdq    
  402a84:	push   0x64
  402a86:	sar    DWORD PTR [ebp+0x62],cl
  402a89:	jb     0x402a1d
  402a8b:	mov    ah,BYTE PTR [esi+0x74]
  402a8e:	push   esi
  402a8f:	jle    0x402ab4
  402a91:	jo     0x402ae5
  402a93:	jge    0x402ae9
  402a95:	gs push edi
  402a97:	rcl    BYTE PTR [edi+0x6f],1
  402a9a:	adc    ebp,DWORD PTR [ebp-0x7db98ddd]
  402aa0:	push   edi
  402aa1:	imul   edx,DWORD PTR [esi-0x7d],0x7466623
  402aa8:	push   edi
  402aa9:	gs aas 
  402aab:	jo     0x402afb
  402aad:	jb     0x402a8c
  402aaf:	or     al,0xe9
  402ab1:	add    esi,ebx
  402ab3:	push   es
  402ab4:	test   eax,0xd90730ab
  402ab9:	stos   BYTE PTR es:[edi],al
  402aba:	add    BYTE PTR [eax],al
  402abc:	add    BYTE PTR [eax],dh
  402abe:	pop    es
  402abf:	jmp    0xef471dc7
  402ac4:	xor    DWORD PTR [ebx-0x7f],0x69
  402ac8:	xor    BYTE PTR [ebx+0x7],0xe9
  402acc:	repz icebp 
  402ace:	sub    BYTE PTR [ecx-0x77],0x71
  402ad2:	xchg   ebp,edi
  402ad4:	push   es
  402ad5:	out    dx,al
  402ad6:	inc    ebx
  402ad7:	and    al,0x47
  402ad9:	jbe    0x402a5f
  402adb:	ins    BYTE PTR es:[edi],dx
  402adc:	push   es
  402add:	repz push es
  402adf:	mov    ecx,0x69377313
  402ae4:	xor    ebx,0xe
  402ae7:	jmp    0xb95f3f17
  402aec:	cmp    BYTE PTR [ebx+0x7],dh
  402aef:	out    0x3,al
  402af1:	in     al,0x16
  402af3:	sbb    DWORD PTR [ebx+eax*8],esi
  402af6:	mov    gs,ecx
  402af8:	add    esi,ebx
  402afa:	adc    DWORD PTR es:[ebx+ebp*2-0xcfc9679],eax
  402b02:	push   es
  402b03:	leave  
  402b04:	arpl   WORD PTR [ebx-0x14943e92],dx
  402b0a:	push   cs
  402b0b:	out    dx,al
  402b0c:	pop    ebx
  402b0d:	adc    DWORD PTR [esi-0x6a],0x53
  402b11:	arpl   WORD PTR [edi],cx
  402b13:	loope  0x402b18
  402b15:	repz push cs
  402b17:	jmp    0xf1421e27
  402b1c:	add    esi,ebx
  402b1e:	push   es
  402b1f:	jmp    0x402b27
  402b24:	repz push es
  402b26:	add    cl,ch
  402b28:	lock push es
  402b2a:	add    cl,ch
  402b2c:	lock push es
  402b2e:	add    cl,bl
  402b30:	jmp    0x402b77
  402b32:	add    ch,ah
  402b34:	lock add al,BYTE PTR [eax]
  402b37:	loope  0x402b29
  402b39:	add    al,BYTE PTR [eax]
  402b3b:	sbb    ebp,esi
  402b3d:	inc    ebp
  402b3e:	add    ch,ch
  402b40:	lock add eax,DWORD PTR [eax]
  402b43:	f2xm1  
  402b45:	push   cs
  402b46:	add    cl,bh
  402b48:	out    dx,al
  402b49:	inc    ebp
  402b4a:	add    ch,ah
  402b4c:	lock add BYTE PTR [eax],al
  402b4f:	leave  
  402b50:	lock es add cl,bl
  402b54:	test   BYTE PTR [ebp+0x0],0xed
  402b58:	lock add al,BYTE PTR [eax]
  402b5b:	stc    
  402b5c:	lock idiv bh
  402b5f:	fsub   st,st(7)
  402b61:	inc    ebp
  402b62:	add    cl,dh
  402b64:	lock idiv bh
  402b67:	enter  0x26f0,0x0
  402b6b:	(bad)  
  402b6d:	inc    ebp
  402b6e:	add    cl,dh
  402b70:	lock idiv bh
  402b73:	push   0xf90086f7
  402b78:	test   DWORD PTR [ebp+0x0],0x26f0e1
  402b7f:	imul   ebp,edi,0xffd90106
  402b85:	inc    ebp
  402b86:	add    BYTE PTR [ecx],cl
  402b88:	add    BYTE PTR [eax],al
  402b8a:	add    bh,ch
  402b8c:	xchg   BYTE PTR [eax],al
  402b8e:	jmp    0x402b87
  402b90:	push   es
  402b91:	add    al,0xf9
  402b93:	out    0x45,eax
  402b95:	add    cl,cl
  402b97:	lock add al,0x1
  402b9a:	jmp    0x402b8b
  402b9c:	push   es
  402b9d:	adc    cl,bh
  402b9f:	out    dx,eax
  402ba0:	inc    ebx
  402ba1:	add    BYTE PTR [eax],al
  402ba3:	fwait
  402ba4:	sub    dh,BYTE PTR [edx]
  402ba6:	xchg   DWORD PTR cs:[eax+eax*1],eax
  402baa:	add    BYTE PTR [edx+0x1],bh
  402bad:	add    BYTE PTR [eax],al
  402baf:	retf   0x500c
  402bb2:	add    dl,cl
  402bb4:	or     al,0x10
  402bb6:	add    BYTE PTR [esi-0x57ff8cf4],ah
  402bbc:	add    DWORD PTR [edi],ebx
  402bbe:	add    BYTE PTR [edx-0x75ff8ff4],cl
  402bc4:	or     al,0x30
  402bc6:	add    BYTE PTR [edx-0x55ff3ff5],bl
  402bcc:	add    DWORD PTR [edx],ecx
  402bce:	add    BYTE PTR [edx-0x75ff9ff4],cl
  402bd4:	or     al,0x20
  402bd6:	add    BYTE PTR [edx+0xb],bl
  402bd9:	mov    al,ds:0xc5a00
  402bde:	add    BYTE PTR [edx+0xc],cl
  402be1:	add    BYTE PTR [eax],0x4a
  402be4:	or     al,0x40
  402be6:	add    BYTE PTR [edx+0xb],bl
  402be9:	loopne 0x402beb
  402beb:	sub    al,BYTE PTR [ecx]
  402bed:	push   es
  402bee:	add    BYTE PTR [eax],al
  402bf0:	add    BYTE PTR [eax],al
  402bf2:	dec    edx
  402bf3:	or     al,0x58
  402bf5:	add    BYTE PTR [edx+0xc],cl
  402bf8:	sbb    BYTE PTR [eax],al
  402bfa:	sbb    cl,BYTE PTR [ebx]
  402bfc:	nop
  402bfd:	add    BYTE PTR [ecx],ch
  402bff:	add    DWORD PTR [ebx],edi
  402c01:	add    BYTE PTR [edx],cl
  402c03:	or     al,0x78
  402c05:	add    BYTE PTR [edx],cl
  402c07:	or     al,0x38
  402c09:	add    BYTE PTR [edx],bl
  402c0b:	or     edx,eax
  402c0d:	add    BYTE PTR [ebx],ch
  402c0f:	add    DWORD PTR [ecx],edx
  402c11:	add    BYTE PTR [edx],cl
  402c13:	or     al,0x68
  402c15:	add    BYTE PTR [edx],cl
  402c17:	or     al,0x28
  402c19:	add    dl,bl
  402c1b:	or     dh,BYTE PTR [eax+0xbedf300]
  402c21:	or     bl,dh
  402c23:	in     eax,dx
  402c24:	or     ecx,DWORD PTR [eax+0x480bedf3]
  402c2a:	repz in eax,dx
  402c2c:	or     al,0xf0
  402c2e:	repz mov ebp,0xedf30406
  402c34:	or     edx,DWORD PTR [ebx+esi*8-0x13]
  402c38:	or     edx,DWORD PTR [ebx+esi*8]
  402c3b:	ror    BYTE PTR [ebx],cl
  402c3d:	jecxz  0x402c32
  402c3f:	fadd   QWORD PTR [ebx+ebp*1]
  402c42:	repz in eax,dx
  402c44:	or     esi,DWORD PTR [ebx+esi*8-0x13]
  402c48:	or     esi,DWORD PTR [ebx+esi*8]
  402c4b:	in     eax,dx
  402c4c:	or     cl,al
  402c4e:	repz mov esi,0xedf30d04
  402c54:	or     esp,DWORD PTR [eax+eax*1+0x0]
  402c58:	add    bl,dh
  402c5a:	in     eax,dx
  402c5b:	or     esp,DWORD PTR [ebx+esi*8]
  402c5e:	in     eax,dx
  402c5f:	or     ch,BYTE PTR [eax+0x40bedf3]
  402c65:	repz in eax,dx
  402c67:	or     eax,DWORD PTR [ebx+esi*8-0xcbbf413]
  402c6e:	in     eax,dx
  402c6f:	or     ch,al
  402c71:	repz mov ebp,0xedf30804
  402c77:	or     ebx,DWORD PTR [ebx+esi*8-0x13]
  402c7b:	or     ebx,DWORD PTR [ebx+esi*8]
  402c7e:	in     eax,dx
  402c7f:	or     bl,BYTE PTR [eax+0x5304d9f3]
  402c85:	repz in eax,dx
  402c87:	or     edi,DWORD PTR [ebx+esi*8-0x13]
  402c8b:	or     edi,DWORD PTR [ebx+esi*8]
  402c8e:	in     eax,dx
  402c8f:	or     bl,al
  402c91:	repz mov ebx,0xedf31704
  402c97:	or     ebp,DWORD PTR [ebx+esi*8+0x6]
  402c9b:	jmp    0xe9474bab
  402ca0:	or     ch,BYTE PTR [ebx-0x10f416f9]
  402ca6:	push   es
  402ca7:	jmp    0xe94793b7
  402cac:	or     edi,DWORD PTR [edi]
  402cae:	pop    es
  402caf:	jmp    0xd947f7be
  402cb4:	add    al,0xf0
  402cb6:	push   es
  402cb7:	jmp    0xe9474dc7
  402cbc:	or     eax,DWORD PTR [eax]
  402cbe:	add    BYTE PTR [eax],al
  402cc0:	add    DWORD PTR [edi],eax
  402cc2:	hlt    
  402cc3:	or     edx,DWORD PTR [eax+0x7]
  402cc6:	cli    
  402cc7:	add    al,0xd0
  402cc9:	push   es
  402cca:	jmp    0xe9474dda
  402ccf:	or     eax,ecx
  402cd1:	push   es
  402cd2:	jmp    0xd847dbe1
  402cd7:	add    al,0xe8
  402cd9:	push   es
  402cda:	jmp    0xe9473dea
  402cdf:	or     edx,DWORD PTR [ecx]
  402ce1:	pop    es
  402ce2:	jmp    0xe947bbf1
  402ce7:	or     esi,ecx
  402ce9:	push   es
  402cea:	jmp    0xe9479dfa
  402cef:	or     esi,DWORD PTR [ecx+0x4f0ae906]
  402cf5:	pop    es
  402cf6:	fld    DWORD PTR [esp+esi*8]
  402cf9:	push   es
  402cfa:	jmp    0xe946c60a
  402cff:	or     ecx,DWORD PTR [ecx]
  402d01:	pop    es
  402d02:	jmp    0xfd47ac11
  402d07:	add    al,0xb0
  402d09:	push   es
  402d0a:	jmp    0xe946c61a
  402d0f:	or     ecx,ecx
  402d11:	push   es
  402d12:	jmp    0x474c21
  402d17:	fcomi  st,st(7)
  402d19:	stc    
  402d1a:	(bad)  
  402d1b:	call   0xe9408e08
  402d20:	clc    
  402d21:	and    BYTE PTR [eax],al
  402d23:	jmp    0xf9402d28
  402d28:	call   0xe900:0xe8e900
  402d2f:	call   0xf9292db4
  402d34:	inc    eax
  402d35:	add    cl,ch
  402d37:	stc    
  402d38:	fiadd  DWORD PTR [eax]
  402d3a:	fincstp 
  402d3c:	or     eax,DWORD PTR [eax]
  402d3e:	jmp    0xe9406a2b
  402d43:	clc    
  402d44:	cld    
  402d45:	jmp    FWORD PTR [eax]
  402d47:	test   DWORD PTR [esi],0x19f1fa00
  402d4d:	add    cl,ch
  402d4f:	call   0xf9292db0
  402d54:	sbb    al,0x0
  402d56:	jmp    0xd840f052
  402d5b:	icebp  
  402d5c:	add    eax,0x6ce8e900
  402d61:	add    cl,ch
  402d63:	clc    
  402d64:	sub    al,0x0
  402d66:	jmp    0xe940d062
  402d6b:	call   0xe9292d7c
  402d70:	mov    WORD PTR [eax],es
  402d72:	jmp    0xe9407a6f
  402d77:	mul    edx
  402d79:	add    cl,bl
  402d7b:	icebp  
  402d7c:	(bad)  
  402d7d:	(bad)  
  402d7e:	call   0xe940626b
  402d83:	clc    
  402d84:	hlt    
  402d85:	(bad)  
  402d86:	call   0xfd40a082
  402d8b:	add    BYTE PTR [eax],al
  402d8d:	add    cl,dh
  402d8f:	imul   eax,DWORD PTR [eax],0x54e8e9
  402d95:	add    BYTE PTR [edx],bl
  402d97:	add    DWORD PTR [esi],edi
  402d99:	add    BYTE PTR [edx],bl
  402d9b:	add    bl,ah
  402d9d:	add    BYTE PTR [eax],bl
  402d9f:	or     BYTE PTR [ebx],bl
  402da1:	add    BYTE PTR [edx],cl
  402da3:	add    DWORD PTR [esi+0x0],ebp
  402da6:	fiadd  DWORD PTR [eax]
  402da8:	cs add dl,bl
  402dab:	add    edi,DWORD PTR [eax+eax*1+0xe00ca]
  402db2:	retf   0x8e00
  402db5:	add    dl,bl
  402db7:	add    BYTE PTR [esi+0x0],cl
  402dba:	fiadd  DWORD PTR [ebx]
  402dbc:	cld    
  402dbd:	add    BYTE PTR [edx+0x9],ch
  402dc0:	add    BYTE PTR [eax],al
  402dc2:	retf   0x5100
  402dc5:	add    BYTE PTR [edx-0x60ffef00],bl
  402dcb:	add    BYTE PTR [ebx+0x1f099800],al
  402dd1:	add    BYTE PTR [edx-0x65ff8f00],cl
  402dd7:	add    BYTE PTR [ecx],dh
  402dd9:	add    BYTE PTR [edx-0x65ff3dfd],bl
  402ddf:	or     DWORD PTR [edx],ecx
  402de1:	add    BYTE PTR [edx+0x5a006100],cl
  402de7:	add    BYTE PTR [ecx],ah
  402de9:	add    BYTE PTR [edx+0x3],bl
  402dec:	mov    ds:0x1004a00,al
  402df1:	add    BYTE PTR [eax],al
  402df3:	add    BYTE PTR [eax],al
  402df5:	dec    edx
  402df6:	add    BYTE PTR [ecx+0x41005a00],al
  402dfc:	add    BYTE PTR [edx+0x3],bl
  402dff:	loop   0x402e01
  402e01:	sbb    cl,BYTE PTR [ecx]
  402e03:	push   es
  402e04:	add    BYTE PTR [edx+0x0],cl
  402e07:	pop    ecx
  402e08:	add    BYTE PTR [edx],bl
  402e0a:	add    BYTE PTR [ecx],bl
  402e0c:	add    BYTE PTR [edx],bl
  402e0e:	add    edx,DWORD PTR [edx+0x2d0f300]
  402e14:	cmp    esi,ebx
  402e16:	fisttp QWORD PTR [ebx]
  402e18:	jns    0x402e0d
  402e1a:	fisttp QWORD PTR [ebx]
  402e1c:	cmp    ebx,esi
  402e1e:	fisttp QWORD PTR [edx+edx*8]
  402e21:	repz scas al,BYTE PTR es:[edi]
  402e23:	add    dl,BYTE PTR [ecx]
  402e25:	repz fisttp QWORD PTR [ebx]
  402e28:	imul   esi,ebx,0xf3290bdd
  402e2e:	fisttp QWORD PTR [edx+esi*4]
  402e31:	repz fisttp QWORD PTR [ebx]
  402e34:	or     ebx,esi
  402e36:	fisttp QWORD PTR [ebx]
  402e38:	mov    ebx,esi
  402e3a:	fisttp QWORD PTR [ebx]
  402e3c:	dec    ecx
  402e3d:	repz fisttp QWORD PTR [edx+esi*8]
  402e41:	rep lods eax,DWORD PTR ds:[esi]
  402e43:	add    al,BYTE PTR [ebx+esi*8]
  402e46:	fisttp QWORD PTR [ebx]
  402e48:	push   ebp
  402e49:	repz fisttp QWORD PTR [ebx]
  402e4c:	adc    eax,0x20bcdf3
  402e51:	repnz rol BYTE PTR [eax],1
  402e54:	sub    esi,ebx
  402e56:	fisttp QWORD PTR [ebx]
  402e58:	jne    0x402e5a
  402e5a:	add    BYTE PTR [eax],al
  402e5c:	repz fisttp QWORD PTR [ebx]
  402e5f:	xor    eax,0xca0addf3
  402e64:	repz scas al,BYTE PTR es:[edi]
  402e66:	add    BYTE PTR ds:0x650bddf3,cl
  402e6c:	repz fisttp QWORD PTR [ebx]
  402e6f:	and    eax,0xaa0addf3
  402e74:	repz fisttp QWORD PTR [ebx]
  402e77:	add    eax,0x850bddf3
  402e7c:	repz fisttp QWORD PTR [ebx]
  402e7f:	inc    ebp
  402e80:	repz fisttp QWORD PTR [edx]
  402e83:	jmp    0xddf3:0x800adf3
  402e8a:	or     ebx,DWORD PTR [ebp-0xd]
  402e8d:	push   es
  402e8e:	jmp    0xe947349e
  402e93:	or     bh,BYTE PTR [ecx+0x6]
  402e96:	std    
  402e97:	add    al,al
  402e99:	push   es
  402e9a:	jmp    0xe946bcaa
  402e9f:	or     eax,esi
  402ea1:	push   es
  402ea2:	jmp    0xdb4647b1
  402ea7:	add    ah,bl
  402ea9:	push   es
  402eaa:	jmp    0xe9478cba
  402eaf:	or     edx,DWORD PTR [esi]
  402eb1:	pop    es
  402eb2:	jmp    0xe947c7c1
  402eb7:	or     esp,esi
  402eb9:	push   es
  402eba:	jmp    0xe947acca
  402ebf:	or     eax,DWORD PTR [eax]
  402ec1:	add    BYTE PTR [eax],al
  402ec3:	ss pop es
  402ec5:	jmp    0xd947e7d4
  402eca:	add    al,dh
  402ecc:	push   es
  402ecd:	jmp    0xe9476edd
  402ed2:	or     eax,DWORD PTR [eax]
  402ed4:	pop    es
  402ed5:	hlt    
  402ed6:	or     esi,DWORD PTR [eax-0x2fff05f9]
  402edc:	push   es
  402edd:	jmp    0xe9472eed
  402ee2:	or     eax,eax
  402ee4:	push   es
  402ee5:	jmp    0xd847e3f4
  402eea:	add    al,ch
  402eec:	push   es
  402eed:	jmp    0xe946fefd
  402ef2:	or     edx,DWORD PTR [eax]
  402ef4:	pop    es
  402ef5:	jmp    0xe947c404
  402efa:	or     esi,eax
  402efc:	push   es
  402efd:	jmp    0xe9479f0d
  402f02:	or     esi,DWORD PTR [eax+0x550ae906]
  402f08:	pop    es
  402f09:	add    cl,bl
  402f0b:	repz or DWORD PTR [eax],eax
  402f0e:	jmp    0xe9405d0b
  402f13:	clc    
  402f14:	in     eax,dx
  402f15:	(bad)  
  402f16:	call   0xfd40a804
  402f1b:	repz inc ebp
  402f1d:	add    cl,ch
  402f1f:	clc    
  402f20:	dec    ebp
  402f21:	add    cl,ch
  402f23:	clc    
  402f24:	or     eax,0xe900
  402f29:	add    cl,ch
  402f2b:	mov    eax,0xf5f3db00
  402f30:	(bad)  
  402f31:	call   0xe9408d2e
  402f36:	clc    
  402f37:	sbb    eax,0x98e9e900
  402f3c:	add    cl,ch
  402f3e:	call   0xf9292f40
  402f43:	jge    0x402f45
  402f45:	jmp    0xe9406d42
  402f4a:	jmp    0xf4193027
  402f4f:	or     eax,DWORD PTR [eax]
  402f51:	jmp    0xe940694e
  402f56:	clc    
  402f57:	stc    
  402f58:	jmp    FWORD PTR [eax]
  402f5a:	out    dx,eax
  402f5b:	push   es
  402f5c:	add    dl,bh
  402f5e:	xchg   ebp,eax
  402f5f:	adc    al,0x0
  402f61:	jmp    0xe940895e
  402f66:	clc    
  402f67:	sbb    DWORD PTR [eax],eax
  402f69:	jmp    0xd840f05d
  402f6e:	jne    0x402f70
  402f70:	add    cl,ch
  402f72:	clc    
  402f73:	imul   eax,DWORD PTR [eax],0x29f8e9
  402f79:	jmp    0xe940d06d
  402f7e:	call   0xf9292f8c
  402f83:	mov    DWORD PTR [eax],eax
  402f85:	add    BYTE PTR [edx-0x3],bl
  402f88:	inc    esi
  402f89:	add    BYTE PTR [edx+0x2],cl
  402f8c:	out    dx,al
  402f8d:	add    BYTE PTR [eax],al
  402f8f:	add    BYTE PTR [eax],al
  402f91:	sbb    dl,al
  402f93:	or     BYTE PTR [eax],al
  402f95:	sbb    bh,ch
  402f97:	pop    esi
  402f98:	add    BYTE PTR [edx],bl
  402f9a:	std    
  402f9b:	push   ds
  402f9c:	add    BYTE PTR [edx],cl
  402f9e:	add    bl,BYTE PTR [esi+0x62d01600]
  402fa4:	add    BYTE PTR [edx],bl
  402fa6:	std    
  402fa7:	jle    0x402fa9
  402fa9:	sbb    bh,ch
  402fab:	add    BYTE PTR ds:[edx],cl
  402fae:	add    bl,dh
  402fb0:	add    BYTE PTR [eax],bl
  402fb2:	rcr    BYTE PTR [edx],1
  402fb4:	add    dl,bl
  402fb6:	cld    
  402fb7:	outs   dx,BYTE PTR ds:[esi]
  402fb8:	add    dl,bl
  402fba:	cld    
  402fbb:	cs add dl,cl
  402fbe:	add    edi,DWORD PTR [esi+0xefcca00]
  402fc4:	add    dl,bl
  402fc6:	cld    
  402fc7:	mov    es,WORD PTR [eax]
  402fc9:	(bad)  
  402fcb:	dec    esi
  402fcc:	add    dl,cl
  402fce:	add    edi,esi
  402fd0:	add    BYTE PTR [edx-0x2f],ch
  402fd3:	(bad)  
  402fd4:	call   FWORD PTR [edx-0x65ffb004]
  402fda:	cld    
  402fdb:	verr   WORD PTR [esi-0x67ff8d04]
  402fe2:	rcr    DWORD PTR [esi],1
  402fe4:	add    BYTE PTR [edx-0x65ff9004],bl
  402fea:	cld    
  402feb:	das    
  402fec:	add    BYTE PTR [edx-0x65ff3efd],cl
  402ff2:	ror    DWORD PTR [ecx],1
  402ff4:	add    BYTE PTR [eax],al
  402ff6:	add    BYTE PTR [eax],al
  402ff8:	pop    edx
  402ff9:	cld    
  402ffa:	pop    edi
  402ffb:	add    BYTE PTR [edx-0x4],bl
  402ffe:	pop    ds
  402fff:	add    BYTE PTR [edx+0x3],cl
  403002:	mov    eax,ds:0xbddf300
  403007:	add    bl,dh
  403009:	fisttp QWORD PTR [ebx]
  40300b:	xor    bl,0xdd
  40300e:	or     eax,DWORD PTR [eax-0xd]
  403011:	fisttp QWORD PTR [ecx+eiz*8]
  403014:	rep lods eax,DWORD PTR ds:[esi]
  403016:	inc    BYTE PTR ds:0x580bddf3
  40301c:	repz fisttp QWORD PTR [ebx]
  40301f:	sbb    bl,dh
  403021:	fisttp QWORD PTR [ecx+edx*4]
  403024:	repz int3 
  403026:	(bad)  
  403027:	cmp    dh,bl
  403029:	fisttp QWORD PTR [ebx]
  40302b:	js     0x403020
  40302d:	fisttp QWORD PTR [ebx]
  40302f:	cmp    bl,dh
  403031:	fisttp QWORD PTR [ecx+edx*8]
  403034:	repz scas al,BYTE PTR es:[edi]
  403036:	(bad)  
  403037:	adc    bl,dh
  403039:	fisttp QWORD PTR [ebx]
  40303b:	push   0x280bddf3
  403040:	repz fisttp QWORD PTR [ecx+esi*4]
  403044:	repz fisttp QWORD PTR [ebx]
  403047:	or     bl,dh
  403049:	fisttp QWORD PTR [ebx]
  40304b:	mov    bl,dh
  40304d:	fisttp QWORD PTR [ebx]
  40304f:	dec    eax
  403050:	repz fisttp QWORD PTR [ecx+esi*8]
  403054:	rep lods eax,DWORD PTR ds:[esi]
  403056:	inc    BYTE PTR [ebx]
  403058:	repz fisttp QWORD PTR [ebx]
  40305b:	push   esp
  40305c:	add    BYTE PTR [eax],al
  40305e:	add    bl,dh
  403060:	fisttp QWORD PTR [ebx]
  403062:	adc    al,0xf3
  403064:	fimul  DWORD PTR [ebx]
  403066:	jecxz  0x40305b
  403068:	int3   
  403069:	cld    
  40306a:	sub    dh,bl
  40306c:	fisttp QWORD PTR [ebx]
  40306e:	je     0x403063
  403070:	fisttp QWORD PTR [ebx]
  403072:	xor    al,0xf3
  403074:	fisttp QWORD PTR [edx]
  403076:	leave  
  403077:	repz scas al,BYTE PTR es:[edi]
  403079:	cld    
  40307a:	or     al,0xf3
  40307c:	fisttp QWORD PTR [ebx]
  40307e:	fs repz push es
  403081:	jmp    0xe9474791
  403086:	or     cl,BYTE PTR [edx-0x8f416fa]
  40308c:	push   es
  40308d:	jmp    0xe9469f9d
  403092:	or     esi,DWORD PTR [edi+0x4a0ae906]
  403098:	push   es
  403099:	frndint 
  40309b:	hlt    
  40309c:	push   es
  40309d:	jmp    0xe946f7ad
  4030a2:	or     edi,edi
  4030a4:	push   es
  4030a5:	jmp    0xfd46aab4
  4030aa:	cld    
  4030ab:	mov    eax,ds:0x870be906
  4030b0:	push   es
  4030b1:	jmp    0xe946efc1
  4030b6:	or     bl,BYTE PTR [edx]
  4030b8:	push   es
  4030b9:	(bad)  
  4030bb:	add    eax,0x570be907
  4030c0:	pop    es
  4030c1:	jmp    0x4030d1
  4030c6:	sysret 
  4030c8:	jmp    0xe947cad7
  4030cd:	or     edi,edi
  4030cf:	push   es
  4030d0:	jmp    0xe947a7e0
  4030d5:	or     ebp,DWORD PTR [edi]
  4030d7:	pop    es
  4030d8:	jmp    0xd947eae7
  4030dd:	cld    
  4030de:	icebp  
  4030df:	push   es
  4030e0:	jmp    0xe94771f0
  4030e5:	or     eax,DWORD PTR [ecx]
  4030e7:	pop    es
  4030e8:	hlt    
  4030e9:	or     edx,DWORD PTR [eax+0x7]
  4030ec:	cli    
  4030ed:	cld    
  4030ee:	rol    DWORD PTR [esi],1
  4030f0:	jmp    0xe9473200
  4030f5:	or     eax,ecx
  4030f7:	push   es
  4030f8:	jmp    0x47df07
  4030fd:	fsubr  DWORD PTR [edi+0x1]
  403100:	add    cl,ch
  403102:	clc    
  403103:	push   0x28e8e900
  403108:	add    cl,ch
  40310a:	jmp    0xf92931b2
  40310f:	or     BYTE PTR [eax],al
  403111:	jmp    0xe940ba0e
  403116:	call   0xea293163
  40311b:	jecxz  0x40311d
  40311d:	fldcw  WORD PTR [edi]
  40311f:	add    eax,0x30f8e900
  403124:	add    cl,ch
  403126:	call   0x129311b
  40312b:	add    BYTE PTR [eax],al
  40312d:	jmp    0x103d31a5
  403132:	dec    ecx
  403133:	add    cl,ch
  403135:	clc    
  403136:	push   eax
  403137:	add    cl,ch
  403139:	call   0xea29314e
  40313e:	mov    bl,0x0
  403140:	fucomi st,st(7)
  403142:	clc    
  403143:	(bad)  
  403144:	call   0xe9409241
  403149:	call   0xea29316e
  40314e:	xchg   ebx,eax
  40314f:	add    cl,ch
  403151:	clc    
  403152:	add    BYTE PTR [eax],al
  403154:	jmp    0xe940b251
  403159:	call   0xea29319e
  40315e:	rol    DWORD PTR [eax],cl
  403160:	fldcw  WORD PTR [edi-0x716fffe]
  403166:	xor    al,0x0
  403168:	jmp    0x29402505
  40316d:	xchg   edi,eax
  40316e:	int    0xff
  403170:	cli    
  403171:	stc    
  403172:	sbb    DWORD PTR [eax],eax
  403174:	jmp    0x408501
  403179:	mov    dl,cl
  40317b:	xor    eax,0xccca8a00
  403180:	add    BYTE PTR [ebx+0x0],cl
  403183:	ltr    WORD PTR [edx-0x2f]
  403187:	add    BYTE PTR gs:[edx-0x2f],cl
  40318b:	and    eax,0xacca4a00
  403190:	add    BYTE PTR [eax],al
  403192:	add    BYTE PTR [eax],al
  403194:	pop    edx
  403195:	rol    DWORD PTR ds:0x85d15a00,1
  40319b:	add    BYTE PTR [edx-0x2f],cl
  40319e:	inc    ebp
  40319f:	add    BYTE PTR [edx-0x36],cl
  4031a2:	in     al,dx
  4031a3:	add    BYTE PTR [edx+0x0],cl
  4031a6:	or     DWORD PTR [eax],eax
  4031a8:	sbb    dl,cl
  4031aa:	pop    ebp
  4031ab:	add    BYTE PTR [edx],cl
  4031ad:	rcr    DWORD PTR ds:0x9cca0a00,1
  4031b3:	add    BYTE PTR [esi],cl
  4031b5:	add    BYTE PTR [ebx+0x0],ah
  4031b8:	sbb    dl,cl
  4031ba:	jge    0x4031bc
  4031bc:	or     dl,cl
  4031be:	cmp    eax,0xdcca0a00
  4031c3:	add    al,cl
  4031c5:	add    DWORD PTR [ebx],ebx
  4031c7:	add    dl,bl
  4031c9:	shr    BYTE PTR [ebp+0x0],1
  4031cc:	retf   0x2dd0
  4031cf:	add    dl,cl
  4031d1:	retf   
  4031d2:	mov    esp,0xdd0da00
  4031d7:	add    dl,bl
  4031d9:	ror    BYTE PTR [ebp+0x4dd0ca00],1
  4031df:	add    dl,cl
  4031e1:	retf   
  4031e2:	cld    
  4031e3:	add    BYTE PTR [edx+0x1],bh
  4031e6:	add    BYTE PTR [eax],al
  4031e8:	call   0x10d0:0x8a0050d0
  4031ef:	add    BYTE PTR [edi-0xcff7d30],bl
  4031f5:	iret   
  4031f6:	or     bl,BYTE PTR [edi]
  4031f8:	add    BYTE PTR [eax],al
  4031fa:	add    bl,dh
  4031fc:	(bad)  
  4031fe:	jo     0x4031f3
  403200:	(bad)  
  403202:	xor    bl,dh
  403204:	(bad)  
  403206:	ret    0xadf3
  403209:	or     cl,BYTE PTR [edx]
  40320b:	repz (bad) 
  40320e:	pusha  
  40320f:	repz (bad) 
  403212:	and    bl,dh
  403214:	(bad)  
  403216:	mov    ds:0xfbddf3,al
  40321b:	repz (bad) 
  40321e:	xor    bl,0xdd
  403221:	sti    
  403222:	inc    eax
  403223:	repz (bad) 
  403226:	loop   0x40321b
  403228:	lods   eax,DWORD PTR ds:[esi]
  403229:	or     al,BYTE PTR [esi]
  40322b:	repz (bad) 
  40322e:	pop    eax
  40322f:	repz (bad) 
  403232:	sbb    bl,dh
  403234:	(bad)  
  403236:	xchg   edx,eax
  403237:	repz ror BYTE PTR [edx],1
  40323a:	cmp    esi,ebx
  40323c:	(bad)  
  40323e:	js     0x403233
  403240:	(bad)  
  403242:	cmp    bl,dh
  403244:	(bad)  
  403246:	shl    bl,cl
  403248:	scas   al,BYTE PTR es:[edi]
  403249:	or     dl,BYTE PTR [ecx]
  40324b:	repz (bad) 
  40324e:	push   0x28fbddf3
  403253:	repz (bad) 
  403256:	mov    dl,0xf3
  403258:	(bad)  
  40325a:	or     bl,dh
  40325c:	(bad)  
  40325e:	mov    BYTE PTR [eax],al
  403260:	add    BYTE PTR [eax],al
  403262:	repz (bad) 
  403265:	dec    eax
  403266:	repz (bad) 
  403269:	repnz rep lods eax,DWORD PTR ds:[esi]
  40326c:	or     al,BYTE PTR [ebx+esi*8]
  40326f:	(bad)  
  403271:	push   esp
  403272:	repz push es
  403274:	jmp    0xf9473274
  403279:	sti    
  40327a:	repnz add eax,0x6d808fa
  403280:	jmp    0xe9473a80
  403285:	sti    
  403286:	mov    edi,0x39fae906
  40328b:	push   es
  40328c:	fmul   DWORD PTR [eax]
  40328e:	test   BYTE PTR [esi],0xe9
  403291:	sti    
  403292:	xlat   BYTE PTR ds:[ebx]
  403293:	push   es
  403294:	jmp    0xe9474294
  403299:	cli    
  40329a:	cdq    
  40329b:	push   es
  40329c:	jmp    0xe947229c
  4032a1:	sti    
  4032a2:	ja     0x4032aa
  4032a4:	jmp    0xe946e2a4
  4032a9:	cli    
  4032aa:	sbb    DWORD PTR [esi],eax
  4032ac:	(bad)  [eax]
  4032ae:	sti    
  4032af:	push   es
  4032b0:	jmp    0xe946f2b0
  4032b5:	sti    
  4032b6:	test   DWORD PTR [esi],0x669fae9
  4032bc:	std    
  4032bd:	or     BYTE PTR [eax+0x7ffbe906],ah
  4032c3:	push   es
  4032c4:	jmp    0x4033c4
  4032c9:	mov    bh,0x6
  4032cb:	jmp    0xdb47fcca
  4032d0:	or     ah,bh
  4032d2:	push   es
  4032d3:	jmp    0xe94782d3
  4032d8:	sti    
  4032d9:	pop    es
  4032da:	pop    es
  4032db:	jmp    0xe947bcda
  4032e0:	sti    
  4032e1:	test   DWORD PTR [esi],0x76ffbe9
  4032e7:	jmp    0xe9475ae7
  4032ec:	cli    
  4032ed:	test   eax,0xfbd90007
  4032f2:	add    eax,0x3598e900
  4032f7:	add    cl,ch
  4032f9:	cwde   
  4032fa:	cmc    
  4032fb:	push   ebx
  4032fd:	mov    ch,al
  4032ff:	add    dl,bh
  403301:	sti    
  403302:	and    eax,0x5578e900
  403307:	add    cl,ch
  403309:	js     0x403320
  40330b:	add    cl,ch
  40330d:	imul   eax,ecx,0xfdfbd800
  403313:	(bad)  
  403314:	call   0xe9409871
  403319:	pop    eax
  40331a:	and    eax,0xa149e900
  40331f:	add    cl,ch
  403321:	dec    eax
  403322:	add    eax,0x8538e900
  403327:	add    cl,ch
  403329:	cmp    BYTE PTR [ebp+0x0],al
  40332c:	jmp    0x29403331
  403331:	loope  0x403333
  403333:	fsincos 
  403335:	add    DWORD PTR [eax],eax
  403337:	jmp    0xe9406054
  40333c:	sbb    ch,ch
  40333e:	(bad)  
  40333f:	call   0xfd40a44d
  403344:	sti    
  403345:	inc    ebp
  403346:	add    cl,ch
  403348:	clc    
  403349:	dec    esp
  40334a:	add    cl,ch
  40334c:	clc    
  40334d:	or     al,0x0
  40334f:	jmp    0xdb40e43d
  403354:	sti    
  403355:	cmc    
  403356:	(bad)  
  403357:	call   0xe9409034
  40335c:	fcomp  DWORD PTR [eax+eax*1]
  40335f:	jmp    0xe940c42d
  403364:	enter  0xfffc,0xe8
  403368:	mov    eax,0xca00007c
  40336d:	int    0x4a
  40336f:	add    BYTE PTR [edx-0x35ff0934],bl
  403375:	inc    BYTE PTR [eax+eax*1]
  403378:	mov    cl,ch
  40337a:	push   esi
  40337b:	add    BYTE PTR [edx-0x25ffe933],cl
  403381:	retf   0xffff
  403384:	mov    DWORD PTR [eax],eax
  403386:	xor    eax,DWORD PTR [eax]
  403388:	mov    cl,ch
  40338a:	jbe    0x40338c
  40338c:	mov    cl,ch
  40338e:	add    BYTE PTR ss:[edx-0x36],bl
  403392:	into   
  403393:	add    BYTE PTR [eax],al
  403395:	add    BYTE PTR [eax],al
  403397:	dec    ebx
  403398:	add    BYTE PTR [edi],cl
  40339a:	add    BYTE PTR [edx-0x33],cl
  40339d:	data16 add BYTE PTR [edx-0x33],cl
  4033a1:	add    BYTE PTR es:[edx-0x36],bl
  4033a5:	scas   al,BYTE PTR es:[edi]
  4033a6:	add    BYTE PTR [edx-0x33],bl
  4033a9:	push   es
  4033aa:	add    BYTE PTR [edx-0x33],cl
  4033ad:	xchg   BYTE PTR [eax],al
  4033af:	dec    edx
  4033b0:	int    0x46
  4033b2:	add    BYTE PTR [edx],bl
  4033b4:	retf   0xee
  4033b7:	dec    edx
  4033b8:	add    BYTE PTR [ecx],cl
  4033ba:	add    BYTE PTR [edx],cl
  4033bc:	int    0x5e
  4033be:	add    BYTE PTR [edx],cl
  4033c0:	int    0x1e
  4033c2:	add    BYTE PTR [edx],bl
  4033c4:	retf   0x9e
  4033c7:	push   es
  4033c8:	add    BYTE PTR [ebx+0x0],ah
  4033cb:	or     cl,ch
  4033cd:	jle    0x4033cf
  4033cf:	or     cl,ch
  4033d1:	ds add dl,bl
  4033d4:	retf   
  4033d5:	fiadd  WORD PTR [eax]
  4033d7:	enter  0x1b01,0x0
  4033db:	retf   0x6ecc
  4033de:	add    dl,cl
  4033e0:	int3   
  4033e1:	cs add dl,bl
  4033e4:	retf   
  4033e5:	mov    esi,0xfbddf300
  4033ea:	push   cs
  4033eb:	repz (bad) 
  4033ee:	mov    ?,ebx
  4033f0:	(bad)  
  4033f2:	dec    esi
  4033f3:	repz (bad) 
  4033f6:	(bad)  
  4033f7:	rep lods eax,DWORD PTR ds:[esi]
  4033f9:	or     BYTE PTR [ecx],al
  4033fb:	add    BYTE PTR [eax],al
  4033fd:	add    bl,dh
  4033ff:	mov    al,0x8
  403401:	add    edx,esi
  403403:	int3   
  403404:	or     BYTE PTR [ecx],dl
  403406:	repz add al,0x9
  403409:	add    ebx,esp
  40340b:	into   
  40340c:	or     BYTE PTR ds:0x108d6f3,al
  403412:	out    dx,eax
  403413:	stos   BYTE PTR es:[edi],al
  403414:	or     BYTE PTR [ecx-0xd],al
  403417:	stos   BYTE PTR es:[edi],al
  403418:	or     BYTE PTR [ecx],al
  40341a:	mov    bl,0xad
  40341c:	or     BYTE PTR [ebx],al
  40341e:	repz mov ch,0x8
  403421:	add    ecx,esi
  403423:	leave  
  403424:	or     BYTE PTR [ecx],ah
  403426:	repz leave 
  403428:	or     BYTE PTR [ecx],al
  40342a:	adc    ecx,esp
  40342c:	or     BYTE PTR [ecx],cl
  40342e:	repz ror DWORD PTR [eax],cl
  403431:	add    ebx,ebp
  403433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403434:	or     BYTE PTR [ecx+0x91df3],al
  40343a:	rep lods eax,DWORD PTR ds:[esi]
  40343c:	or     BYTE PTR [edx],al
  40343e:	repz mov al,0x8
  403441:	xor    edx,0xf31908cc
  403447:	add    al,0x9
  403449:	add    ebx,ebp
  40344b:	into   
  40344c:	or     BYTE PTR [edi],al
  40344e:	repz (bad) 
  403450:	or     BYTE PTR [ecx],al
  403452:	in     eax,dx
  403453:	stos   BYTE PTR es:[edi],al
  403454:	or     BYTE PTR [ecx-0xd],ah
  403457:	stos   BYTE PTR es:[edi],al
  403458:	or     BYTE PTR [ecx],al
  40345a:	push   ebx
  40345b:	scas   al,BYTE PTR es:[edi]
  40345c:	or     BYTE PTR [ebx+esi*8],al
  40345f:	mov    ch,0x8
  403461:	add    DWORD PTR [eax],eax
  403463:	add    BYTE PTR [eax],al
  403465:	lock push es
  403467:	std    
  403468:	or     BYTE PTR [edx],al
  40346a:	pop    es
  40346b:	std    
  40346c:	or     dl,dh
  40346e:	push   ss
  40346f:	sti    
  403470:	or     dh,ch
  403472:	push   es
  403473:	repz or dl,dh
  403476:	cli    
  403477:	fimul  WORD PTR [eax]
  403479:	mov    dl,0x6
  40347b:	test   eax,0xd906f308
  403480:	add    eax,DWORD PTR [edx]
  403482:	pop    es
  403483:	fild   DWORD PTR [ebx]
  403485:	repz push es
  403487:	icebp  
  403488:	add    esi,esp
  40348a:	push   es
  40348b:	lock add ebp,ebp
  40348e:	push   es
  40348f:	jecxz  0x403494
  403491:	test   BYTE PTR [esi],0xe2
  403494:	add    ebp,edi
  403496:	push   es
  403497:	cmc    
  403498:	add    esi,eax
  40349a:	push   es
  40349b:	in     al,dx
  40349c:	add    esi,ecx
  40349e:	push   es
  40349f:	out    0x3,eax
  4034a1:	repnz push es
  4034a3:	fiadd  WORD PTR [ebx]
  4034a5:	repz push es
  4034a7:	jmp    0x774727af
  4034ac:	adc    al,0xec
  4034ae:	dec    edi
  4034af:	lds    esp,FWORD PTR [edx-0x13]
  4034b2:	fcom   DWORD PTR [ebx+0x33]
  4034b5:	jmp    0x6dff:0x9ec7e06d
  4034bc:	fcomp  DWORD PTR [ecx-0x6f5943aa]
  4034c2:	fisttp QWORD PTR [edx+0x77]
  4034c5:	(bad)
  4034c9:	add    BYTE PTR [eax],al
  4034cb:	add    BYTE PTR [eax],ch
  4034cd:	clc    
  4034ce:	test   BYTE PTR [edi+eiz*1+0x26daf74d],cl
  4034d5:	out    0x61,al
  4034d7:	stos   DWORD PTR es:[edi],eax
  4034d8:	and    DWORD PTR [edi+0x12],ebp
  4034db:	inc    eax
  4034dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034dd:	adc    BYTE PTR [eax+edx*2-0x5e],bh
  4034e1:	inc    ebp
  4034e2:	add    dh,ch
  4034e4:	std    
  4034e5:	jle    0x4034ce
  4034e7:	pop    eax
  4034e8:	les    eax,FWORD PTR [ebp+0x7dc08d90]
  4034ee:	sbb    eax,0x6a770f1b
  4034f3:	mov    eax,ds:0x2ff38021
  4034f8:	xor    BYTE PTR [ebp-0x1e9b7b7c],al
  4034fe:	sbb    dl,BYTE PTR [edx]
  403500:	fwait
  403501:	in     al,0x6d
  403503:	cwde   
  403504:	test   ebx,ebx
  403506:	hlt    
  403507:	es ins BYTE PTR es:[edi],dx
  403509:	fiadd  DWORD PTR [ebx+0x13331f3f]
  40350f:	test   eax,0x53643268
  403514:	test   al,0x29
  403516:	std    
  403517:	mov    ebp,0x368a2c39
  40351c:	and    ecx,DWORD PTR [eax]
  40351e:	adc    al,0xa0
  403520:	les    ecx,FWORD PTR [ebx+eiz*2]
  403523:	dec    edx
  403524:	in     al,dx
  403525:	adc    eax,0xe55b4fa
  40352a:	lea    esi,[ecx+0x3f3b3510]
  403530:	add    BYTE PTR [eax],al
  403532:	add    BYTE PTR [edi],bh
  403534:	das    
  403535:	dec    esp
  403536:	lea    esi,[ecx-0x5fe42ada]
  40353c:	sub    eax,0xa1498a2
  403541:	cmp    al,0x26
  403543:	imul   ecx,DWORD PTR [ebx],0x4b
  403546:	je     0x4035bd
  403548:	adc    al,0xd2
  40354a:	add    bh,BYTE PTR [ecx+edx*1-0x5b]
  40354e:	arpl   WORD PTR [eax+0x7c],bp
  403551:	xor    eax,0x427898cd
  403556:	aas    
  403557:	cmp    DWORD PTR [edx-0x7cd65625],eax
  40355d:	lods   al,BYTE PTR ds:[esi]
  40355e:	add    BYTE PTR [ecx],bh
  403560:	data16 fdiv DWORD PTR [edx]
  403563:	lahf   
  403564:	cmc    
  403565:	fiadd  WORD PTR [ebp+0x15]
  403568:	vpaddusb ymm0,ymm5,YMMWORD PTR [ebx+0x26abd114]
  403570:	sbb    bl,cl
  403572:	ror    BYTE PTR es:[ecx],1
  403575:	ficom  WORD PTR [ecx+0x4a]
  403578:	stc    
  403579:	(bad)  
  40357a:	enter  0x28bc,0xd0
  40357e:	mov    edi,0x21b4ddef
  403583:	mov    ecx,0x4356b3cd
  403588:	cmp    eax,0x6cb5cfba
  40358d:	mov    ebp,0x29274b8
  403592:	sub    BYTE PTR [edx+0x5f0541],al
  403598:	add    BYTE PTR [eax],al
  40359a:	pop    eax
  40359b:	jae    0x4035a9
  40359d:	(bad)  
  40359e:	out    dx,al
  40359f:	jecxz  0x4035ac
  4035a1:	mov    cl,0xdd
  4035a3:	dec    esi
  4035a4:	outs   dx,DWORD PTR ds:[esi]
  4035a5:	das    
  4035a6:	dec    ebx
  4035a7:	std    
  4035a8:	addr16 pop eax
  4035aa:	jno    0x40355b
  4035ac:	pusha  
  4035ad:	rol    DWORD PTR [edi+0x1e],0x66
  4035b1:	mov    dh,0xca
  4035b3:	dec    ebx
  4035b4:	fdiv   QWORD PTR [esi+0x4c]
  4035b7:	pop    edx
  4035b8:	fild   DWORD PTR [ecx]
  4035ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035bb:	jmp    0xefd4:0xb93098d1
  4035c2:	mov    ds:0x4571b187,eax
  4035c7:	xchg   esi,eax
  4035c8:	mov    dh,0x6
  4035ca:	scas   eax,DWORD PTR es:[edi]
  4035cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035cc:	mov    edi,0xb875599f
  4035d1:	call   0x7847b94e
  4035d6:	(bad)  
  4035d8:	add    BYTE PTR [edi],cl
  4035da:	repz sub eax,0xb75d099c
  4035e0:	imul   ecx,DWORD PTR [esi],0xffffffd2
  4035e3:	mov    ecx,edi
  4035e5:	imul   esp,DWORD PTR [ebx+edx*1+0x9],0x5864eb6d
  4035ed:	sub    BYTE PTR fs:[edi+0x22d56327],0x35
  4035f5:	imul   ebx,DWORD PTR [eax-0x70],0x64
  4035f9:	ins    BYTE PTR es:[edi],dx
  4035fa:	fcomip st,st(5)
  4035fc:	adc    esp,DWORD PTR [ebp+0x0]
  4035ff:	add    BYTE PTR [eax],al
  403601:	outs   dx,BYTE PTR ds:[esi]
  403602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403603:	add    esp,DWORD PTR [edx-0x5f]
  403606:	sbb    esi,DWORD PTR [ecx+0x6]
  403609:	pop    ss
  40360a:	mov    DWORD PTR [eax-0x301107ff],esp
  403610:	or     BYTE PTR [ecx-0x63],dh
  403613:	mov    edi,0xac74860f
  403618:	mov    al,0xe
  40361a:	(bad)  
  40361b:	fdiv   QWORD PTR [edi-0x4174381f]
  403621:	push   0x6fb97c52
  403626:	ins    DWORD PTR es:[edi],dx
  403627:	call   0x19370808
  40362c:	fiadd  DWORD PTR [esi]
  40362e:	add    DWORD PTR [edi-0x2d],0xd4384b67
  403635:	dec    eax
  403636:	inc    esi
  403637:	gs mov dl,0xb6
  40363a:	jae    0x403670
  40363c:	mov    ch,0xf9
  40363e:	and    DWORD PTR [esp+edi*4],eax
  403641:	nop
  403642:	nop
  403643:	adc    edi,DWORD PTR [ebx-0x205f10b9]
  403649:	mov    ecx,0xded8709c
  40364e:	or     al,al
  403650:	ror    DWORD PTR [edi+0x39],1
  403653:	iret   
  403654:	(bad)  
  403655:	and    BYTE PTR [edi],al
  403657:	rcr    esp,cl
  403659:	call   0xaefa:0x8dac5d47
  403660:	jnp    0x4035ee
  403662:	jno    0x40369d
  403664:	mov    eax,DWORD PTR [eax]
  403666:	add    BYTE PTR [eax],al
  403668:	push   ebx
  403669:	loope  0x403625
  40366b:	sbb    bh,ch
  40366d:	dec    edx
  40366e:	inc    esp
  40366f:	call   0x37d62e65
  403674:	jmp    0xfe8756e9
  403679:	loope  0x403660
  40367b:	push   esp
  40367c:	out    dx,al
  40367d:	push   esi
  40367e:	push   ebx
  40367f:	inc    esp
  403680:	icebp  
  403681:	jmp    0x40367b
  403683:	repz jmp 0xff639e0d
  403689:	int    0xcc
  40368b:	nop
  40368c:	sbb    ebx,DWORD PTR [edx+edi*1-0x80]
  403690:	or     al,0xe7
  403692:	fild   QWORD PTR [edi-0x20b181f3]
  403698:	adc    dl,ch
  40369a:	test   edx,0xbb8164a5
  4036a0:	call   0x9576:0xa36c0aed
  4036a7:	pushf  
  4036a8:	inc    esp
  4036a9:	retf   
  4036aa:	fiadd  WORD PTR [esi]
  4036ac:	mov    al,ds:0xa0f7685d
  4036b1:	hlt    
  4036b2:	icebp  
  4036b3:	daa    
  4036b4:	xchg   esi,eax
  4036b5:	jnp    0x403733
  4036b7:	pop    eax
  4036b8:	mov    esi,eax
  4036ba:	leave  
  4036bb:	test   BYTE PTR [ebx+0x7c9557b1],cl
  4036c1:	mov    al,ds:0x77de5e5
  4036c6:	jae    0x40367e
  4036c8:	bound  edi,QWORD PTR [edx]
  4036ca:	rol    BYTE PTR [eax+0x0],0x0
  4036ce:	add    BYTE PTR [esi],bh
  4036d0:	mov    al,0x4e
  4036d2:	push   ecx
  4036d3:	inc    ecx
  4036d4:	mov    eax,ds:0xdfd2dc00
  4036d9:	add    al,0x6a
  4036db:	add    edi,ebx
  4036dd:	jae    0x4036da
  4036df:	pop    es
  4036e0:	sub    bl,ah
  4036e2:	gs out dx,al
  4036e4:	sub    dl,BYTE PTR [edi+edx*1-0x7ef2ce6b]
  4036eb:	sbb    eax,0xabf27a2d
  4036f0:	adc    esp,esp
  4036f2:	pop    esp
  4036f3:	stos   BYTE PTR es:[edi],al
  4036f4:	adc    BYTE PTR [ebx+0xa07790e],dl
  4036fa:	js     0x403755
  4036fc:	or     bh,BYTE PTR [ebp-0x53]
  4036ff:	aas    
  403700:	adc    dh,al
  403702:	cmp    edx,DWORD PTR [esi-0x617e78f1]
  403708:	or     BYTE PTR [esi],bl
  40370a:	lgs    ecx,FWORD PTR [ecx]
  40370d:	imul   esp,DWORD PTR [ebx+eiz*8+0x1232f724],0x278802c
  403718:	xor    ebx,DWORD PTR [ecx]
  40371a:	push   es
  40371b:	icebp  
  40371c:	sub    eax,0xd6965f6e
  403721:	dec    cl
  403723:	(bad)  
  403725:	mov    DWORD PTR [ebx],esi
  403727:	and    eax,0x2e9d10dd
  40372c:	in     al,0x67
  40372e:	push   esi
  40372f:	call   0x0:0xc0f980
  403736:	cmp    eax,DWORD PTR [ecx+0x7a692a8e]
  40373c:	pop    ss
  40373d:	xchg   esp,eax
  40373e:	retf   0x6076
  403741:	xchg   ecx,eax
  403742:	(bad)  
  403743:	(bad)  
  403745:	pop    ds
  403746:	(bad)  
  403747:	xlat   BYTE PTR ds:[ebx]
  403748:	mov    eax,ds:0x38df2ead
  40374d:	cmp    eax,DWORD PTR [ebp-0x1e]
  403750:	dec    edi
  403751:	add    BYTE PTR [ebx-0xa2e44da],ch
  403757:	idiv   DWORD PTR [ebx-0x4af7805a]
  40375d:	aas    
  40375e:	rcl    DWORD PTR [edx+esi*4],1
  403761:	dec    eax
  403762:	mov    al,0x22
  403764:	or     eax,0x9b34ed8
  403769:	scas   eax,DWORD PTR es:[edi]
  40376a:	xchg   esp,eax
  40376b:	add    eax,DWORD PTR [ebx]
  40376d:	ss mov edx,0x19410453
  403773:	fbld   TBYTE PTR [eax-0x21]
  403776:	xchg   DWORD PTR [esi+0x67],ebp
  403779:	test   al,0x2d
  40377b:	inc    eax
  40377c:	outs   dx,BYTE PTR ds:[esi]
  40377d:	xor    DWORD PTR [ebx+0x3e46698f],eax
  403783:	fwait
  403784:	popa   
  403785:	retf   
  403786:	lock mov esp,DWORD PTR [esi-0x44]
  40378a:	sub    bh,BYTE PTR [edi+ebp*2+0x25]
  40378e:	les    ebp,FWORD PTR [ebx+0x57475268]
  403794:	or     al,0xcc
  403796:	mov    DWORD PTR [esi+0xb],eax
  403799:	mov    ebx,0xe3000000
  40379e:	mov    bh,0x1
  4037a0:	and    cl,BYTE PTR [ebp-0x19]
  4037a3:	add    al,0x55
  4037a5:	dec    esp
  4037a6:	or     eax,0xbde2c5ba
  4037ab:	mov    esp,0xb3ecf8b2
  4037b0:	sub    edx,DWORD PTR [esi+0x5f]
  4037b3:	mov    bl,0x5c
  4037b5:	jne    0x403780
  4037b7:	xlat   BYTE PTR ds:[ebx]
  4037b8:	ret    0x785b
  4037bb:	shl    BYTE PTR [ebp+0x2cd928d1],1
  4037c1:	aas    
  4037c2:	ficomp WORD PTR [ebx-0x56]
  4037c6:	les    esp,FWORD PTR [ebx+ebx*4+0x34]
  4037ca:	xlat   BYTE PTR ds:[ebx]
  4037cb:	arpl   sp,bp
  4037cd:	repz cmp esp,DWORD PTR [ebx+0x72a5a66a]
  4037d4:	ins    DWORD PTR es:[edi],dx
  4037d5:	icebp  
  4037d6:	push   esi
  4037d7:	dec    BYTE PTR [eax]
  4037d9:	jg     0x40375b
  4037db:	or     eax,0x5f32080e
  4037e0:	pop    es
  4037e1:	sbb    esp,0x2dee002e
  4037e7:	cmp    bh,BYTE PTR [edi-0x47b6449a]
  4037ed:	adc    DWORD PTR [ecx+0x1668b11b],ecx
  4037f3:	jmp    0x4037aa
  4037f5:	mul    DWORD PTR [esi+esi*2]
  4037f8:	rol    BYTE PTR [ecx-0x312a7a4d],cl
  4037fe:	inc    ecx
  4037ff:	xlat   BYTE PTR ds:[ebx]
  403800:	fadd   QWORD PTR [eax]
  403802:	add    BYTE PTR [eax],al
  403804:	dec    edi
  403805:	xcrypt-ctr (bad)
  403806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403807:	(bad)  
  403809:	add    DWORD PTR [edx-0x1e938a2d],esi
  40380f:	aam    0xc2
  403811:	push   ss
  403812:	xchg   ebx,eax
  403813:	fstp   QWORD PTR [ebx]
  403815:	inc    eax
  403816:	sbb    dl,0x4
  403819:	sti    
  40381a:	in     eax,dx
  40381b:	mov    ebp,0xb91d6572
  403820:	popf   
  403821:	cmovg  esi,DWORD PTR [eax-0x48c1c6e4]
  403828:	jmp    0x4037f9
  40382a:	sub    DWORD PTR [eax],ecx
  40382c:	imul   ebx,DWORD PTR [esi+0x5a],0xf
  403830:	je     0x403896
  403832:	or     al,BYTE PTR [esi]
  403834:	aad    0xf1
  403836:	cli    
  403837:	add    BYTE PTR [edx],al
  403839:	leave  
  40383a:	gs gs ins BYTE PTR es:[edi],dx
  40383d:	push   edi
  40383e:	xchg   esi,eax
  40383f:	bound  ebx,QWORD PTR [ebx-0x63]
  403842:	(bad)  
  403843:	imul   edx,edx,0xffffffea
  403846:	mov    dh,0x6c
  403848:	fld    QWORD PTR [esi]
  40384a:	and    edx,esp
  40384c:	jmp    0xe6f1c7b7
  403851:	xlat   BYTE PTR ds:[ebx]
  403852:	cmp    eax,0xab50f783
  403857:	xchg   edx,eax
  403858:	lock std 
  40385a:	pop    es
  40385b:	push   ds
  40385c:	xchg   esp,eax
  40385d:	addr16 jbe 0x40384d
  403860:	mov    ah,0xd6
  403862:	and    al,0x3f
  403864:	call   0x0:0x4e924d
  40386b:	xchg   ebp,eax
  40386c:	add    BYTE PTR [ebx+0x3d712259],dh
  403872:	sub    DWORD PTR ds:0xcdfacfde,ebx
  403878:	inc    esi
  403879:	pop    ecx
  40387a:	or     cl,bl
  40387c:	neg    DWORD PTR [ecx+0x246d9f95]
  403882:	gs cwde 
  403884:	loopne 0x40383c
  403886:	mov    dh,0x81
  403888:	inc    edi
  403889:	inc    eax
  40388a:	(bad)  
  40388b:	jle    0x403883
  40388d:	add    al,0xd2
  40388f:	jle    0x403812
  403891:	jae    0x403854
  403893:	jns    0x403861
  403895:	fnstenv [edx+0x60]
  403898:	push   ebx
  403899:	inc    edi
  40389a:	mov    ds:0xdebea5f,al
  40389f:	ret    
  4038a0:	jl     0x4038fc
  4038a2:	std    
  4038a3:	mov    ebp,0xad2ec0d1
  4038a8:	pop    edx
  4038a9:	cs pop esi
  4038ab:	stos   BYTE PTR es:[edi],al
  4038ac:	jecxz  0x4038c4
  4038ae:	dec    edx
  4038af:	adc    eax,0x123aa174
  4038b4:	retf   
  4038b5:	jmp    0x40389f
  4038b7:	aam    0x61
  4038b9:	jne    0x4038d4
  4038bb:	aam    0xec
  4038bd:	std    
  4038be:	test   eax,ebp
  4038c0:	jp     0x40384a
  4038c2:	jbe    0x4038ab
  4038c4:	ret    
  4038c5:	add    dl,dl
  4038c7:	xchg   edi,eax
  4038c8:	or     DWORD PTR [edx+0x5c],ebx
  4038cb:	push   ds
  4038cc:	add    al,0x2d
  4038ce:	jmp    0xf04038d3
  4038d3:	push   es
  4038d4:	add    BYTE PTR [eax],ch
  4038d6:	loopne 0x4038f3
  4038d8:	sbb    DWORD PTR [ebx-0x6f],ebp
  4038db:	clc    
  4038dc:	xor    DWORD PTR [edx-0x12d50e1e],ebp
  4038e2:	pop    ebp
  4038e3:	xor    ah,BYTE PTR [esp+0x43]
  4038e7:	aaa    
  4038e8:	jge    0x403959
  4038ea:	outs   dx,BYTE PTR ds:[esi]
  4038eb:	pop    esp
  4038ec:	push   esi
  4038ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ee:	xchg   ebp,eax
  4038ef:	inc    ebp
  4038f0:	dec    edi
  4038f1:	icebp  
  4038f2:	jp     0x4038d1
  4038f4:	enter  0x6bb0,0xc4
  4038f8:	shl    DWORD PTR [ebx-0x31],1
  4038fb:	scas   al,BYTE PTR es:[edi]
  4038fc:	cli    
  4038fd:	and    bl,BYTE PTR [eax+0x27f5e3b3]
  403903:	je     0x4038b1
  403905:	lods   al,BYTE PTR ds:[esi]
  403906:	cs ins DWORD PTR es:[edi],dx
  403908:	mov    ch,0x67
  40390a:	in     al,0x89
  40390c:	sahf   
  40390d:	push   ds
  40390e:	fist   DWORD PTR [esi-0x373d4779]
  403914:	dec    edx
  403915:	stc    
  403916:	adc    esp,eax
  403918:	push   ebx
  403919:	cmp    al,BYTE PTR [edi-0x4d]
  40391c:	js     0x403999
  40391e:	xor    BYTE PTR [esi+0x6d4f9c61],ch
  403924:	cs aad 0xb6
  403927:	je     0x403960
  403929:	push   ds
  40392a:	jl     0x4038cb
  40392c:	sbb    al,0x57
  40392e:	jae    0x4038ba
  403930:	add    eax,0x82220f40
  403935:	add    DWORD PTR [eax],eax
  403937:	add    BYTE PTR [eax],al
  403939:	pop    eax
  40393a:	pop    es
  40393b:	fwait
  40393c:	mov    dl,0x3a
  40393e:	in     al,dx
  40393f:	scas   eax,DWORD PTR es:[edi]
  403940:	jae    0x4038ed
  403942:	cmc    
  403943:	test   al,0x0
  403945:	pop    ss
  403946:	out    0x76,al
  403948:	out    0x36,al
  40394a:	push   esi
  40394b:	ins    BYTE PTR es:[edi],dx
  40394c:	jmp    DWORD PTR [ebp+0x3]
  40394f:	inc    ecx
  403950:	aam    0xb4
  403952:	mov    bl,0x59
  403954:	int    0xa8
  403956:	sbb    eax,0xad699584
  40395b:	sahf   
  40395c:	mov    WORD PTR [edx],?
  40395e:	cld    
  40395f:	mov    cl,0xa7
  403961:	sti    
  403962:	dec    ebx
  403963:	test   eax,0xe8a8acbe
  403968:	icebp  
  403969:	ins    DWORD PTR es:[edi],dx
  40396a:	jp     0x40395f
  40396c:	call   0xc41ec0af
  403971:	out    dx,eax
  403972:	cwde   
  403973:	(bad)
  403976:	xchg   esp,eax
  403977:	pop    ebp
  403978:	pop    ebp
  403979:	mov    eax,ds:0xf2444622
  40397e:	jle    0x4039eb
  403980:	outs   dx,DWORD PTR ds:[esi]
  403981:	mov    bl,0xc4
  403983:	jo     0x4039fb
  403985:	test   BYTE PTR [esi+0x31],bl
  403988:	cmp    DWORD PTR ds:0xf62029f0,esp
  40398e:	rol    DWORD PTR [esi],0xb
  403991:	xchg   DWORD PTR [ecx],edx
  403993:	sbb    al,0x12
  403995:	(bad)  [ebx]
  403997:	inc    esi
  403998:	fistp  WORD PTR [eax]
  40399a:	mov    ebx,0xc65c
  40399f:	add    BYTE PTR [ebx-0x35129013],cl
  4039a5:	pop    esp
  4039a6:	imul   esi,esp,0xffffff9d
  4039a9:	int    0x2a
  4039ab:	mov    ebx,0xa231c7dc
  4039b0:	(bad)  
  4039b2:	sbb    al,0x89
  4039b4:	imul   eax,DWORD PTR ds:[edi],0x9f869190
  4039bb:	pop    ss
  4039bc:	push   eax
  4039bd:	xchg   edi,eax
  4039be:	test   BYTE PTR [esi],cl
  4039c0:	repz push esi
  4039c2:	loop   0x40396d
  4039c4:	push   cs
  4039c5:	sbb    BYTE PTR [ebx+0x3dc51fb2],dh
  4039cb:	repz loopne 0x403a0b
  4039ce:	dec    esp
  4039cf:	call   0xc55f2cad
  4039d4:	mov    dl,0xab
  4039d6:	in     eax,dx
  4039d7:	fstp   QWORD PTR [ebx+0x437952aa]
  4039dd:	jecxz  0x403a20
  4039df:	bound  ebx,QWORD PTR [edx]
  4039e1:	sub    al,0xf1
  4039e3:	dec    esi
  4039e4:	xor    DWORD PTR [ebp+0x20],esp
  4039e7:	push   esp
  4039e8:	cmp    BYTE PTR [esi-0x1080ea73],ch
  4039ee:	jle    0x4039fe
  4039f0:	jle    0x403a22
  4039f2:	lods   al,BYTE PTR ds:[esi]
  4039f3:	and    ecx,DWORD PTR [ebp+0x71]
  4039f6:	fnstsw WORD PTR [eax]
  4039f8:	cmp    al,0xb2
  4039fa:	enter  0xbba0,0x6b
  4039fe:	mov    bh,0xbb
  403a00:	adc    ah,BYTE PTR ds:0x966b
  403a06:	add    cl,bh
  403a08:	sbb    ebx,DWORD PTR [edx+0x3b7008d]
  403a0e:	int3   
  403a0f:	aaa    
  403a10:	jbe    0x403a06
  403a12:	(bad)  
  403a13:	sub    DWORD PTR ss:[esi],esp
  403a16:	cli    
  403a17:	push   ebp
  403a18:	call   0x7a851b73
  403a1d:	pusha  
  403a1e:	mov    ebx,0xa02fb379
  403a23:	push   eax
  403a24:	cld    
  403a25:	add    cl,BYTE PTR [ebp-0x69edca85]
  403a2b:	sbb    BYTE PTR [esi-0x204a2865],0x6c
  403a32:	int3   
  403a33:	mov    ah,0x20
  403a35:	mov    esi,0xcf6197e1
  403a3a:	cli    
  403a3b:	xchg   BYTE PTR [edi],al
  403a3d:	inc    ebp
  403a3e:	fist   DWORD PTR [ecx]
  403a40:	cmp    esp,edi
  403a42:	test   eax,0x78b72fea
  403a47:	mov    edi,0xac876e46
  403a4c:	pop    ebp
  403a4d:	and    DWORD PTR [esi],edx
  403a4f:	in     eax,0x14
  403a51:	loopne 0x403a39
  403a53:	out    0xb,eax
  403a55:	xchg   ebx,eax
  403a56:	xor    ecx,DWORD PTR [ebx]
  403a58:	jecxz  0x403aab
  403a5a:	inc    esp
  403a5b:	adc    dl,bh
  403a5d:	dec    ebp
  403a5e:	cs and al,BYTE PTR ss:[edi-0x33c4eaa3]
  403a66:	or     al,0x38
  403a68:	push   esp
  403a69:	add    eax,0xfc
  403a6e:	sub    al,0x4d
  403a70:	dec    edx
  403a71:	jno    0x4039f5
  403a73:	push   es
  403a74:	mov    esp,DWORD PTR [edx-0x3037e087]
  403a7a:	dec    esp
  403a7b:	clc    
  403a7c:	or     cl,al
  403a7e:	aas    
  403a7f:	icebp  
  403a80:	xchg   ebp,eax
  403a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a82:	iret   
  403a83:	imul   ecx,DWORD PTR [edi-0x2d],0x8704732c
  403a8a:	add    DWORD PTR [ebp+edi*4-0x6d7b158b],ebx
  403a91:	out    0x2c,eax
  403a93:	into   
  403a94:	push   ebx
  403a95:	sbb    BYTE PTR [eax],ah
  403a97:	xlat   BYTE PTR ds:[ebx]
  403a98:	add    BYTE PTR [edx+0x45],cl
  403a9b:	rol    cl,0x3a
  403a9e:	push   esi
  403a9f:	test   eax,0xebf43c1f
  403aa4:	push   ebp
  403aa5:	dec    ebx
  403aa6:	xlat   BYTE PTR ds:[ebx]
  403aa7:	hlt    
  403aa8:	pushf  
  403aa9:	push   ds
  403aaa:	cli    
  403aab:	sbb    esp,edx
  403aad:	in     eax,dx
  403aae:	add    al,BYTE PTR [ebx]
  403ab0:	sti    
  403ab1:	jle    0x403af3
  403ab3:	push   eax
  403ab4:	cmp    dl,BYTE PTR [eax+0x7900593b]
  403aba:	xchg   edx,eax
  403abb:	and    DWORD PTR [ecx-0x48],edi
  403abe:	inc    ecx
  403abf:	cmp    al,0x60
  403ac1:	out    0x3e,eax
  403ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ac4:	out    0x9e,eax
  403ac6:	xor    eax,0x8055feb9
  403acb:	(bad)  
  403acc:	aad    0xc
  403ace:	xlat   BYTE PTR ds:[ebx]
  403acf:	iret   
  403ad0:	int3   
  403ad1:	ret    
  403ad2:	add    BYTE PTR [eax],al
  403ad4:	add    BYTE PTR [ecx-0x73],bl
  403ad7:	add    DWORD PTR [edx+0x319a95fa],0xffffffab
  403ade:	jp     0x403a91
  403ae0:	lock adc eax,0x5732a864
  403ae6:	xchg   DWORD PTR [ebx],edi
  403ae8:	repz cdq 
  403aea:	sahf   
  403aeb:	and    ah,BYTE PTR [eax+0x61097165]
  403af1:	cs ins BYTE PTR es:[edi],dx
  403af3:	adc    BYTE PTR [esi],dh
  403af5:	mov    ah,0xab
  403af7:	pop    edi
  403af8:	out    dx,eax
  403af9:	fdiv   QWORD PTR [edx-0x220d5bba]
  403aff:	ins    DWORD PTR es:[edi],dx
  403b00:	pop    ebp
  403b01:	loope  0x403acb
  403b03:	je     0x403aaf
  403b05:	fisub  WORD PTR [eax-0xd]
  403b08:	jmp    0x403ae1
  403b0a:	inc    edi
  403b0b:	jmp    0x3069:0xc12b1f28
  403b12:	xor    bl,al
  403b14:	scas   al,BYTE PTR es:[edi]
  403b15:	mov    ebx,0x9ae796f1
  403b1a:	in     al,dx
  403b1b:	lea    ebp,[esp+edi*1]
  403b1e:	pop    es
  403b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b20:	imul   ebx,DWORD PTR gs:[esi],0xffffffbc
  403b24:	add    esp,DWORD PTR [ebp+0x48]
  403b27:	jno    0x403aeb
  403b29:	das    
  403b2a:	pop    ebp
  403b2b:	push   0x43325771
  403b30:	xor    BYTE PTR [eax-0x73ffa5d5],bh
  403b36:	push   edi
  403b37:	sub    eax,0x15
  403b3c:	ins    DWORD PTR es:[edi],dx
  403b3d:	dec    eax
  403b3e:	ss or  al,0x1e
  403b41:	stos   BYTE PTR es:[edi],al
  403b42:	sbb    ah,BYTE PTR [edi]
  403b44:	out    dx,eax
  403b45:	out    0xff,al
  403b47:	cmp    eax,0xb9980678
  403b4c:	sub    DWORD PTR [esi-0x1c155f7e],esi
  403b52:	lods   eax,DWORD PTR ds:[esi]
  403b53:	mov    ebx,DWORD PTR [ebx+0x3492b553]
  403b59:	shl    esp,0xdd
  403b5c:	in     eax,0x7e
  403b5e:	out    dx,eax
  403b5f:	les    esp,FWORD PTR [esi+0x67efc22e]
  403b65:	mov    al,ds:0x3a63f6d9
  403b6a:	pop    es
  403b6b:	scas   al,BYTE PTR es:[edi]
  403b6c:	ret    0x1c88
  403b6f:	mov    bh,0xf1
  403b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b72:	xor    DWORD PTR [eax+esi*1+0x7f852a77],ebx
  403b79:	std    
  403b7a:	push   0xffffffca
  403b7c:	mov    esi,0xedd3704d
  403b81:	sbb    ebx,DWORD PTR [ebp-0x8]
  403b84:	cmp    al,0xac
  403b86:	inc    ebp
  403b87:	loope  0x403b34
  403b89:	mov    edi,0xe7a66dd
  403b8e:	lds    edi,FWORD PTR [edi-0x47]
  403b91:	push   ecx
  403b92:	call   0xf32223eb
  403b97:	dec    ebp
  403b98:	daa    
  403b99:	jae    0x403b4d
  403b9b:	add    dh,BYTE PTR [esi-0x3d]
  403b9e:	test   eax,0x1b
  403ba3:	mov    ch,0x94
  403ba5:	test   BYTE PTR [eax],dh
  403ba7:	hlt    
  403ba8:	and    bl,BYTE PTR [edi-0x3ac7add7]
  403bae:	in     al,0xd3
  403bb0:	data16 fdivp st(5),st
  403bb3:	repz aad 0xcf
  403bb6:	repz lds edx,FWORD PTR [esi+edi*4+0x2c43a4e8]
  403bbe:	test   eax,0xb25cba73
  403bc3:	push   0x71
  403bc5:	or     bl,BYTE PTR [edi-0x7c04d7bf]
  403bcb:	dec    eax
  403bcc:	lahf   
  403bcd:	call   0x1a1f5aed
  403bd2:	pop    es
  403bd3:	push   ds
  403bd4:	push   ds
  403bd5:	inc    esi
  403bd6:	sub    bh,ch
  403bd8:	pop    esp
  403bd9:	aaa    
  403bda:	xor    esp,ebp
  403bdc:	cmp    esp,DWORD PTR [ebp-0x2b8d4490]
  403be2:	imul   esp,DWORD PTR [edx-0x46b97d47],0xfffffff0
  403be9:	jno    0x403c48
  403beb:	shl    cl,1
  403bed:	(bad)  
  403bee:	cli    
  403bef:	cmp    BYTE PTR [eax+0x6341e1a5],ch
  403bf5:	jns    0x403bc3
  403bf7:	sbb    bl,BYTE PTR [edx-0x78]
  403bfa:	xlat   BYTE PTR ds:[ebx]
  403bfb:	adc    esi,ebp
  403bfd:	adc    DWORD PTR [esi-0x731d4ba4],edx
  403c03:	cmp    eax,0xa03467
  403c08:	add    BYTE PTR [eax],al
  403c0a:	pop    esi
  403c0b:	es inc ebp
  403c0d:	mov    ebx,0x2360696f
  403c12:	lock mov al,ds:0xea09382f
  403c18:	(bad)  
  403c19:	adc    al,0x22
  403c1b:	and    ecx,DWORD PTR [esi]
  403c1d:	push   cs
  403c1e:	or     ebp,DWORD PTR [ebx+ebx*4+0x4f]
  403c22:	push   esp
  403c23:	lods   eax,DWORD PTR ds:[esi]
  403c24:	ins    BYTE PTR es:[edi],dx
  403c25:	push   esp
  403c26:	inc    ebp
  403c27:	out    dx,al
  403c28:	mov    ecx,0xcb2f2679
  403c2d:	bound  esp,QWORD PTR [edi]
  403c2f:	pop    es
  403c30:	push   es
  403c31:	leave  
  403c32:	jmp    0x403bb9
  403c34:	mov    edi,0x749ed0b7
  403c39:	addr16 in eax,dx
  403c3b:	jae    0x403c6a
  403c3d:	xchg   esi,eax
  403c3e:	(bad)  
  403c3f:	ins    BYTE PTR es:[edi],dx
  403c40:	loop   0x403c45
  403c42:	daa    
  403c43:	mov    ds:0xbb35f4a3,al
  403c48:	push   eax
  403c49:	and    dl,BYTE PTR [ecx]
  403c4b:	rcl    BYTE PTR [ecx],1
  403c4d:	push   ebx
  403c4e:	cli    
  403c4f:	enter  0x4efe,0x52
  403c53:	dec    esi
  403c54:	aaa    
  403c55:	imul   edx,DWORD PTR ds:[edi+0x7c],0xb53c45f0
  403c5d:	pop    ds
  403c5e:	daa    
  403c5f:	and    eax,0xea7e89da
  403c64:	sbb    bh,BYTE PTR [ebx+0x5d]
  403c67:	repz push edi
  403c69:	stos   DWORD PTR es:[edi],eax
  403c6a:	js     0x403c84
  403c6c:	cdq    
  403c6d:	fadd   QWORD PTR [eax]
  403c6f:	add    BYTE PTR [eax],al
  403c71:	xchg   ebx,eax
  403c72:	add    DWORD PTR [ebp+0x4c58adb2],edx
  403c78:	ror    DWORD PTR [esi-0x546af8c1],0x2a
  403c7f:	mov    esi,0x9131c063
  403c84:	cmc    
  403c85:	loop   0x403c83
  403c87:	dec    edi
  403c88:	push   es
  403c89:	cli    
  403c8a:	jecxz  0x403c8e
  403c8c:	pop    eax
  403c8d:	xlat   BYTE PTR ds:[ebx]
  403c8e:	push   cs
  403c8f:	ret    0xb428
  403c92:	adc    eax,0x90943c4d
  403c97:	test   BYTE PTR [ebx-0x59],cl
  403c9a:	xchg   edi,ecx
  403c9c:	sbb    al,BYTE PTR [edx+0x6aea0662]
  403ca2:	jns    0x403ced
  403ca4:	jg     0x403c5e
  403ca6:	mov    ah,0x88
  403ca8:	nop
  403ca9:	mov    ds:0x9ecb00ab,eax
  403cae:	mov    ecx,0xa0840ac0
  403cb3:	fldenv [edi+edx*2+0x7a]
  403cb7:	adc    al,0x1d
  403cb9:	rcr    BYTE PTR [edi+0xd],0xd6
  403cbd:	jno    0x403c4b
  403cbf:	es (bad) 
  403cc1:	and    dl,BYTE PTR [esi-0x386bbfc1]
  403cc7:	jo     0x403cca
  403cc9:	jmp    0x403c96
  403ccb:	imul   esi,DWORD PTR [edx+0x7342a136],0x9c5bb9bd
  403cd5:	add    BYTE PTR [eax],al
  403cd7:	add    BYTE PTR [edx],bl
  403cd9:	and    bl,ah
  403cdb:	aad    0xc9
  403cdd:	cmp    ch,al
  403cdf:	push   ds
  403ce0:	call   0x57982b38
  403ce5:	aas    
  403ce6:	idiv   DWORD PTR [eax-0x23]
  403ce9:	or     eax,0x1466b9b8
  403cee:	mov    eax,ds:0x89f72cfa
  403cf3:	cmp    esi,DWORD PTR [edx+eiz*8-0x6e]
  403cf7:	jmp    0xd64043ec
  403cfc:	fcmovb st,st(4)
  403cfe:	add    DWORD PTR [edi],eax
  403d00:	cmp    eax,DWORD PTR [edx+0x40953003]
  403d06:	add    ah,BYTE PTR [ebp-0x6df8f261]
  403d0c:	xor    ebx,ecx
  403d0e:	push   es
  403d0f:	cmp    esi,DWORD PTR [ebx-0x229bfb77]
  403d15:	inc    edi
  403d16:	add    eax,0xe1a40a1
  403d1b:	outs   dx,BYTE PTR ds:[esi]
  403d1c:	jmp    0xd9e:0x743f0fd7
  403d23:	dec    eax
  403d24:	xchg   BYTE PTR [esp+ecx*1+0x0],bl
  403d28:	mov    esi,0x69091a71
  403d2d:	xchg   edi,eax
  403d2e:	fmul   DWORD PTR [eax]
  403d30:	shl    BYTE PTR [ebp+0x4bc70a9d],1
  403d36:	pop    esp
  403d37:	or     ecx,DWORD PTR [edx+0x1c2627]
  403d3d:	add    BYTE PTR [eax],al
  403d3f:	dec    ebp
  403d40:	shl    esp,0x1d
  403d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d44:	sti    
  403d45:	mov    eax,ds:0x6015b31f
  403d4a:	push   ds
  403d4b:	add    BYTE PTR es:[edi],ch
  403d4e:	sbb    edx,DWORD PTR [ecx]
  403d50:	jmp    0x18ab:0xd3c81aec
  403d57:	jg     0x403d96
  403d59:	imul   ebx,DWORD PTR [ecx],0x123578a2
  403d5f:	inc    ebp
  403d60:	xchg   edx,eax
  403d61:	not    DWORD PTR [ebx]
  403d63:	ins    BYTE PTR es:[edi],dx
  403d64:	lods   al,BYTE PTR ds:[esi]
  403d65:	mov    al,0x11
  403d67:	fild   DWORD PTR [ebp+0x73]
  403d6a:	adc    BYTE PTR [esi],ch
  403d6c:	push   eax
  403d6d:	cmp    al,0x15
  403d6f:	stc    
  403d70:	mov    edx,0x850014fd
  403d75:	mov    eax,0x7a5ed716
  403d7a:	pop    ss
  403d7b:	jp     0x403dc9
  403d7d:	dec    ebp
  403d7e:	cmp    BYTE PTR [ebp-0x5a],bl
  403d81:	mov    ?,WORD PTR [ecx]
  403d83:	xchg   esp,eax
  403d84:	xchg   edi,eax
  403d85:	leave  
  403d86:	cmp    eax,ebx
  403d88:	jno    0x403d95
  403d8a:	cmp    dh,BYTE PTR [esi]
  403d8c:	fs inc esp
  403d8e:	aas    
  403d8f:	add    DWORD PTR [esi-0x4f27c17a],ecx
  403d95:	mov    edi,0x25aef3c
  403d9a:	cmp    eax,0x365e1ab2
  403d9f:	mov    ch,0xf4
  403da1:	fwait
  403da2:	aaa    
  403da3:	add    BYTE PTR [eax],al
  403da5:	add    bl,dh
  403da7:	adc    eax,0x9f1edac1
  403dac:	push   0x18
  403dae:	pop    es
  403daf:	and    al,0x7c
  403db1:	push   edi
  403db2:	add    dh,BYTE PTR [ecx]
  403db4:	(bad)  
  403db5:	xchg   ebp,eax
  403db6:	add    ecx,DWORD PTR [edx+0x28]
  403db9:	rol    DWORD PTR [ecx],cl
  403dbb:	add    eax,DWORD PTR [edx]
  403dbd:	adc    eax,esp
  403dbf:	das    
  403dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dc1:	imul   ecx,edi,0x4c
  403dc4:	mov    WORD PTR [ecx-0x110de22a],gs
  403dca:	int3   
  403dcb:	out    0x57,al
  403dcd:	sub    eax,0x624e7bd5
  403dd2:	ror    BYTE PTR [eax-0x3e2e601c],1
  403dd8:	call   0x1224:0xb0dad3e6
  403ddf:	sbb    BYTE PTR [eax+0x78],dh
  403de2:	sbb    DWORD PTR [ebp-0x19f74527],esi
  403de8:	and    edi,esp
  403dea:	or     cl,BYTE PTR [edi+0xe]
  403ded:	sbb    esi,DWORD PTR ds:[eax+ebx*1+0x71]
  403df2:	push   ss
  403df3:	popa   
  403df4:	xor    dh,BYTE PTR [ebx-0xa33a5f1]
  403dfa:	add    eax,0xdc376633
  403dff:	pop    edi
  403e00:	mov    DWORD PTR [edx+0x58a39ca3],ebx
  403e06:	mov    ds:0x1e5d4d,al
  403e0b:	add    BYTE PTR [eax],al
  403e0d:	mov    al,ds:0x81dbf736
  403e12:	stos   DWORD PTR es:[edi],eax
  403e13:	loopne 0x403da7
  403e15:	jl     0x403def
  403e17:	dec    edx
  403e18:	push   ecx
  403e19:	test   DWORD PTR [ecx-0x1580e84c],esi
  403e1f:	sahf   
  403e20:	aad    0x66
  403e22:	pop    es
  403e23:	loope  0x403dfc
  403e25:	jp     0x403e5c
  403e27:	scas   al,BYTE PTR es:[edi]
  403e28:	jno    0x403e52
  403e2a:	xor    al,0xff
  403e2c:	or     esp,esi
  403e2e:	xor    DWORD PTR [eax],ecx
  403e30:	es mov esp,0x73308d33
  403e36:	cs pop edx
  403e38:	sbb    dh,BYTE PTR [ecx]
  403e3a:	das    
  403e3b:	and    esp,DWORD PTR [edi+ebp*8+0x30]
  403e3f:	sub    al,0xce
  403e41:	mov    ch,0x30
  403e43:	pop    ecx
  403e44:	jmp    0x221d:0x40662368
  403e4b:	aaa    
  403e4c:	mov    esi,0x940023db
  403e51:	mov    DWORD PTR ds:0x203e8195,esp
  403e57:	mov    ds:0xeb2104a7,al
  403e5c:	push   ebp
  403e5d:	ret    0xb41e
  403e60:	sti    
  403e61:	popa   
  403e62:	push   ds
  403e63:	icebp  
  403e64:	cmp    dl,BYTE PTR [ecx+ebp*1+0x27ce111e]
  403e6b:	dec    edi
  403e6c:	outs   dx,DWORD PTR ds:[esi]
  403e6d:	or     BYTE PTR [esi],ah
  403e6f:	cmp    ch,al
  403e71:	add    BYTE PTR [eax],al
  403e73:	add    BYTE PTR [edx+0x27],bl
  403e76:	popf   
  403e77:	ror    BYTE PTR [ebp-0x288735d6],cl
  403e7d:	sub    dh,BYTE PTR [ebx+0x6]
  403e80:	adc    DWORD PTR ds:0x2c132c5c,ebp
  403e86:	leave  
  403e87:	into   
  403e88:	cmp    al,0x3f
  403e8a:	mul    BYTE PTR [esi+eax*1+0x3e]
  403e8e:	daa    
  403e8f:	sbb    eax,eax
  403e91:	aas    
  403e92:	adc    BYTE PTR [ecx],dh
  403e94:	bound  eax,QWORD PTR [ecx-0x7b]
  403e97:	es and eax,0xdf0cb244
  403e9d:	inc    esp
  403e9e:	add    BYTE PTR [ebx-0x7f],bl
  403ea1:	push   eax
  403ea2:	dec    esp
  403ea3:	inc    esp
  403ea4:	retf   
  403ea5:	mov    cs,WORD PTR [ebp-0x7f]
  403ea8:	xchg   dl,cl
  403eaa:	inc    esi
  403eab:	mov    fs,WORD PTR [eax+0x2a5f470c]
  403eb1:	inc    edi
  403eb2:	inc    ebp
  403eb3:	sub    BYTE PTR [ebp+eax*4-0x3d4152bc],ch
  403eba:	inc    ecx
  403ebb:	mov    edx,0x3400418
  403ec0:	xchg   ecx,eax
  403ec1:	cmp    eax,0x7f74cc42
  403ec6:	inc    ebx
  403ec7:	mov    ecx,0x8654b5d8
  403ecc:	div    bh
  403ece:	push   esp
  403ecf:	xlat   BYTE PTR ds:[ebx]
  403ed0:	sbb    al,0x3a
  403ed2:	push   edi
  403ed3:	loopne 0x403e77
  403ed5:	jnp    0x403f2d
  403ed7:	jne    0x403ed9
  403ed9:	add    BYTE PTR [eax],al
  403edb:	mov    al,0xae
  403edd:	push   ebx
  403ede:	inc    edx
  403edf:	push   cs
  403ee0:	icebp  
  403ee1:	push   ecx
  403ee2:	or     esp,esp
  403ee4:	xor    dl,BYTE PTR [eax+0x14]
  403ee7:	sub    dh,BYTE PTR [ebp+0x51]
  403eea:	shr    DWORD PTR [eax-0x5b],1
  403eed:	pop    edx
  403eee:	mov    esi,0x6f5ae6c6
  403ef3:	mov    WORD PTR [ecx+ebx*2],gs
  403ef6:	cwde   
  403ef7:	jb     0x403f63
  403ef9:	pop    eax
  403efa:	std    
  403efb:	popa   
  403efc:	lahf   
  403efd:	pop    ebp
  403efe:	jmp    0x23f4:0x135bdd7f
  403f05:	pop    esi
  403f06:	cmp    al,0x1a
  403f08:	bound  ebx,QWORD PTR [edi+0x69]
  403f0b:	push   es
  403f0c:	cli    
  403f0d:	loopne 0x403f65
  403f0f:	loopne 0x403ecc
  403f11:	loopne 0x403e9a
  403f13:	sub    dh,BYTE PTR [ebp-0x1e]
  403f16:	mov    al,0xac
  403f18:	aaa    
  403f19:	jecxz  0x403f1b
  403f1b:	into   
  403f1c:	cmp    DWORD PTR [esi+eiz*8],edi
  403f1f:	loope  0x403ef0
  403f21:	(bad)  
  403f22:	out    0x38,eax
  403f24:	out    0xb7,al
  403f26:	in     eax,0xd7
  403f28:	or     DWORD PTR [edx-0x1c],edi
  403f2b:	adc    al,BYTE PTR [ecx+0x26]
  403f2e:	out    dx,eax
  403f2f:	int    0xa6
  403f31:	jecxz  0x403f21
  403f33:	xchg   esp,eax
  403f34:	nop
  403f35:	mov    ds:0x6062bbec,al
  403f3a:	in     eax,dx
  403f3b:	imul   ebp,DWORD PTR ss:[edi],0xe8
  403f42:	fld    DWORD PTR [edx-0x4aaf1613]
  403f48:	stos   BYTE PTR es:[edi],al
  403f49:	jmp    0x403f6a
  403f4b:	dec    edi
  403f4c:	imul   ebp,edx,0xfd13330a
  403f52:	aad    0xd8
  403f54:	sar    esp,1
  403f56:	sbb    al,0xdf
  403f58:	xchg   esi,eax
  403f59:	(bad)  
  403f5a:	xor    eax,DWORD PTR ds:0x169eff55
  403f60:	sbb    bh,dl
  403f62:	xchg   ecx,eax
  403f63:	hlt    
  403f64:	xlat   BYTE PTR ds:[ebx]
  403f65:	sti    
  403f66:	dec    eax
  403f67:	jb     0x403f07
  403f69:	stc    
  403f6a:	out    0x1f,eax
  403f6c:	pop    esp
  403f6d:	clc    
  403f6e:	and    bl,BYTE PTR [esi+0x0]
  403f71:	repz mov ebp,0xe4f2c28b
  403f77:	mov    ecx,0x574bf083
  403f7c:	inc    esi
  403f7d:	icebp  
  403f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f7f:	inc    esp
  403f80:	or     esp,esi
  403f82:	imul   esp,DWORD PTR [ebx-0x7e7f0a36],0x6f8ff78d
  403f8c:	dec    edi
  403f8d:	idiv   dl
  403f8f:	pop    ecx
  403f90:	js     0x403f6b
  403f92:	in     eax,0xb7
  403f94:	mov    ecx,0x8aa9f3d8
  403f99:	cld    
  403f9a:	sub    edi,edx
  403f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f9d:	sub    BYTE PTR ds:[esi+ebp*4+0x71],cl
  403fa2:	sbb    eax,0xb39835
  403fa7:	add    BYTE PTR [eax],al
  403fa9:	adc    al,0x8e
  403fab:	loop   0x403fa1
  403fad:	into   
  403fae:	mov    cl,BYTE PTR [edi+esi*1-0x39]
  403fb2:	inc    edi
  403fb3:	pop    es
  403fb4:	imul   eax,esp,0x40
  403fb7:	and    DWORD PTR [ecx-0x10246e43],ebp
  403fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fbe:	push   ds
  403fbf:	jne    0x403fee
  403fc1:	sahf   
  403fc2:	mov    ds:0xaca3625f,eax
  403fc7:	leave  
  403fc8:	mov    al,ds:0xe633c5a2
  403fcd:	rol    BYTE PTR [edx-0x503edbe3],0xb9
  403fd4:	pop    esi
  403fd5:	mov    dh,0xc8
  403fd7:	(bad)  
  403fd8:	pushf  
  403fd9:	scas   eax,DWORD PTR es:[edi]
  403fda:	cdq    
  403fdb:	in     eax,dx
  403fdc:	fnstenv [ebp-0x53e7bc9a]
  403fe2:	sti    
  403fe3:	push   eax
  403fe4:	push   edi
  403fe5:	mov    cl,0x4
  403fe7:	not    DWORD PTR [eax+esi*4+0x32d3853d]
  403fee:	pop    edx
  403fef:	stos   DWORD PTR es:[edi],eax
  403ff0:	adc    DWORD PTR [ebx],esi
  403ff2:	xchg   edi,eax
  403ff3:	addr16 dec ebp
  403ff5:	sub    BYTE PTR [eax],dh
  403ff7:	ror    DWORD PTR [edi-0x36c49ed7],0x3b
  403ffe:	into   
  403fff:	adc    eax,0xfef33a0b
  404004:	inc    ebx
  404005:	das    
  404006:	fsubr  QWORD PTR [eax]
  404008:	xchg   BYTE PTR [esi],ah
  40400a:	aad    0xd2
  40400c:	rol    BYTE PTR [eax],0x0
  40400f:	add    BYTE PTR [edx+esi*4],bh
  404012:	jl     0x404016
  404014:	xor    eax,0x4c8e2906
  404019:	xchg   edi,eax
  40401a:	push   ss
  40401b:	mov    eax,0x41c79686
  404020:	fcom   DWORD PTR [eax+esi*8+0x65951beb]
  404027:	not    BYTE PTR [esi-0x68]
  40402a:	push   edx
  40402b:	push   eax
  40402c:	(bad)  
  40402d:	cdq    
  40402e:	jnp    0x403fda
  404030:	adc    DWORD PTR [edx-0x642c7b5c],ebx
  404036:	popa   
  404037:	mov    edi,0x692e909f
  40403c:	push   ebp
  40403d:	xchg   ecx,eax
  40403e:	jg     0x404053
  404040:	or     edx,DWORD PTR [ebx-0x6d36c278]
  404046:	or     eax,0xda8f8627
  40404b:	add    BYTE PTR [esi+ecx*4],bh
  40404e:	mov    ds:0xac8be27a,eax
  404053:	aam    0xa0
  404055:	(bad)  
  404056:	f2xm1  
  404058:	imul   eax,DWORD PTR [edx-0x7cd7a91a],0xffffffb7
  40405f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404060:	inc    BYTE PTR [eax-0x7f4b7580]
  404066:	adc    eax,0x227d7399
  40406b:	scas   eax,DWORD PTR es:[edi]
  40406c:	xor    DWORD PTR [ebx+ebp*2+0x4d],edi
  404070:	idiv   DWORD PTR [ebp+0x34]
  404073:	jecxz  0x404075
  404075:	add    BYTE PTR [eax],al
  404077:	cs jg  0x4040eb
  40407a:	pop    ds
  40407b:	jns    0x404001
  40407d:	sahf   
  40407e:	add    eax,0x73cf84bb
  404083:	in     eax,dx
  404084:	xchg   BYTE PTR [eax+0x1d8627d9],bh
  40408a:	enter  0x8b60,0x4a
  40408e:	pop    esi
  40408f:	mov    ds:0x8f30089,al
  404094:	sbb    BYTE PTR [edi-0x79261d24],al
  40409a:	dec    ecx
  40409b:	inc    eax
  40409c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40409d:	test   eax,0xa7e69a76
  4040a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040a3:	or     al,0x2a
  4040a5:	stos   BYTE PTR es:[edi],al
  4040a6:	nop
  4040a7:	into   
  4040a8:	push   0xffffffab
  4040aa:	add    eax,0x32ae9bbf
  4040af:	loope  0x40408e
  4040b1:	scas   al,BYTE PTR es:[edi]
  4040b2:	fist   DWORD PTR [eax+eiz*1-0x53]
  4040b6:	les    esp,FWORD PTR [esi+0x7601ac61]
  4040bc:	mov    ch,0xa7
  4040be:	push   cs
  4040bf:	mov    bl,dh
  4040c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c2:	fbld   TBYTE PTR [ebx]
  4040c4:	cmp    ah,BYTE PTR [eax+ebp*4+0x2da578bd]
  4040cb:	iret   
  4040cc:	mov    bh,0xa0
  4040ce:	cmp    dh,BYTE PTR [ecx]
  4040d0:	in     eax,dx
  4040d1:	mov    al,ds:0xa3326b83
  4040d6:	dec    esp
  4040d7:	jne    0x404149
  4040d9:	mov    ds:0x39,al
  4040de:	loope  0x4040aa
  4040e0:	mov    ch,0x6
  4040e2:	test   DWORD PTR [eax],0x472d57b4
  4040e8:	mov    dh,0x60
  4040ea:	mov    ebx,0x99f5b784
  4040ef:	shl    DWORD PTR [edx-0x4d00003e],0x8b
  4040f6:	cmc    
  4040f7:	cmp    eax,0x7c1394b1
  4040fc:	mov    al,0x51
  4040fe:	push   ecx
  4040ff:	fdivr  DWORD PTR [ebx-0x45e658c2]
  404105:	out    dx,eax
  404106:	sahf   
  404107:	push   ebx
  404108:	mov    eax,0xb9956b18
  40410d:	add    BYTE PTR [esi-0x36432184],bh
  404113:	push   0x1c
  404115:	mov    ebp,0xbf5a5880
  40411a:	addr16 mov dh,0x97
  40411d:	mov    esi,0x30a
  404122:	out    dx,eax
  404123:	adc    DWORD PTR [eax+edi*4-0x55f63d6f],edi
  40412a:	test   BYTE PTR [ecx],ch
  40412c:	mov    ch,0x12
  40412e:	fld    QWORD PTR [ecx+0x73388f62]
  404134:	fidiv  WORD PTR [edi]
  404136:	xchg   BYTE PTR [ebx+ebp*2+0x25],dl
  40413a:	and    ebp,DWORD PTR [ebx-0x64ba622a]
  404140:	mov    bl,0xc5
  404142:	add    BYTE PTR [eax],al
  404144:	add    BYTE PTR [eax+0x44],ah
  404147:	or     BYTE PTR [ebp-0x42],bh
  40414a:	push   0xffffffbd
  40414c:	outs   dx,DWORD PTR ds:[esi]
  40414d:	fld    TBYTE PTR [ebx]
  40414f:	add    edi,edx
  404151:	jb     0x404187
  404153:	(bad)  
  404154:	dec    edx
  404155:	xlat   BYTE PTR ds:[ebx]
  404156:	retf   0xf26a
  404159:	test   eax,0x7ce0dedb
  40415e:	sbb    ah,BYTE PTR [ebx+0x58]
  404161:	jne    0x40419f
  404163:	sbb    DWORD PTR [eax-0x30],edx
  404166:	mov    dl,0xa4
  404168:	call   0xfa50d4fb
  40416d:	imul   esi,DWORD PTR [edx-0x54],0x42
  404171:	ret    0x7bc2
  404174:	fbld   TBYTE PTR [edi]
  404176:	dec    esp
  404177:	(bad)  
  404178:	addr16 cdq 
  40417a:	add    dh,BYTE PTR [edx+0x75]
  40417d:	sub    al,0xe3
  40417f:	int    0xcd
  404181:	mov    edx,0x5f95acf3
  404186:	adc    dl,BYTE PTR [ecx]
  404188:	sub    eax,0xa46cd8f3
  40418d:	add    al,0x1e
  40418f:	rcr    DWORD PTR [eax],cl
  404191:	je     0x404190
  404193:	stos   DWORD PTR es:[edi],eax
  404194:	iret   
  404195:	fabs   
  404197:	test   BYTE PTR [ebx+0x51],dh
  40419a:	test   bl,ah
  40419c:	lds    esp,FWORD PTR [ebx+0x67]
  40419f:	cmp    al,0x7a
  4041a1:	jmp    0x404148
  4041a3:	xor    dl,BYTE PTR fs:[ebx+0x49]
  4041a7:	int3   
  4041a8:	mov    es,WORD PTR [eax]
  4041aa:	add    BYTE PTR [eax],al
  4041ac:	jmp    0x4041f8
  4041ae:	sbb    al,0x3b
  4041b0:	stc    
  4041b1:	outs   dx,DWORD PTR ds:[esi]
  4041b2:	add    eax,DWORD PTR [edi+0x4ffc1741]
  4041b8:	les    ebx,FWORD PTR [ebx-0x7e7b13ac]
  4041be:	mov    bl,0x59
  4041c0:	outs   dx,BYTE PTR ds:[esi]
  4041c1:	and    al,0x8c
  4041c3:	in     eax,0x1e
  4041c5:	out    dx,eax
  4041c6:	jnp    0x40414e
  4041c8:	dec    esi
  4041c9:	xchg   esp,eax
  4041ca:	mov    ds:0x4479ae3a,eax
  4041cf:	(bad)  
  4041d0:	mov    ah,0xfc
  4041d2:	jmp    0x404206
  4041d4:	inc    esp
  4041d5:	push   ds
  4041d6:	adc    esp,esp
  4041d8:	leave  
  4041d9:	inc    eax
  4041da:	sub    al,0x58
  4041dc:	inc    ecx
  4041dd:	mov    ds:0xc833eddb,eax
  4041e2:	je     0x404235
  4041e4:	fwait
  4041e5:	ds mov ebx,0x93e3a32b
  4041eb:	xchg   edi,eax
  4041ec:	cmp    ecx,edx
  4041ee:	repz and DWORD PTR [ecx],ebp
  4041f1:	lea    ecx,[esi+ebx*4-0x6f]
  4041f5:	lods   eax,DWORD PTR ds:[esi]
  4041f6:	and    ecx,DWORD PTR [ecx-0xc]
  4041f9:	push   eax
  4041fa:	or     esi,ebp
  4041fc:	xor    al,0x32
  4041fe:	pop    esp
  4041ff:	inc    eax
  404200:	xlat   BYTE PTR ds:[ebx]
  404202:	ret    
  404203:	cld    
  404204:	into   
  404205:	push   es
  404206:	aaa    
  404207:	aam    0x74
  404209:	repz adc DWORD PTR [ebx+0x10],edi
  40420d:	jl     0x4041bb
  40420f:	or     al,0x0
  404211:	add    BYTE PTR [eax],al
  404213:	pop    ebp
  404214:	lea    ecx,[ecx-0x2019f6cd]
  40421a:	dec    edx
  40421b:	ss jo  0x40425b
  40421e:	in     al,0xb3
  404220:	or     BYTE PTR [ebx-0x7d],bl
  404223:	pop    ds
  404224:	push   ss
  404225:	mov    dh,0x9c
  404227:	stos   DWORD PTR es:[edi],eax
  404228:	pop    esi
  404229:	in     al,0x4b
  40422b:	call   DWORD PTR [ecx-0x16ab0cbf]
  404231:	pop    esi
  404232:	xchg   esp,eax
  404233:	out    0xf7,al
  404235:	mov    ecx,0x137f52bb
  40423a:	ret    
  40423b:	jge    0x40424f
  40423d:	out    dx,al
  40423e:	pop    ebx
  40423f:	mov    ecx,0x640b885b
  404244:	ins    DWORD PTR es:[edi],dx
  404245:	gs and al,0xb0
  404248:	add    eax,0x4d93343b
  40424d:	xchg   esi,eax
  40424e:	sbb    ebp,edi
  404250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404251:	mov    al,0x6b
  404253:	call   0x6c3a:0xe6d30db3
  40425a:	stos   DWORD PTR es:[edi],eax
  40425b:	mov    cl,0xd6
  40425d:	dec    ecx
  40425e:	test   BYTE PTR ds:0xb9e2e71e,ch
  404264:	xor    dl,al
  404266:	cmp    esp,DWORD PTR [eax+ecx*8]
  404269:	dec    ebx
  40426a:	add    esp,esi
  40426c:	mov    edi,0x38421c26
  404271:	ror    dl,0xef
  404274:	and    eax,0x639d
  404279:	add    BYTE PTR [ebx],bh
  40427b:	into   
  40427c:	cld    
  40427d:	mov    eax,DWORD PTR [ebx+eax*2]
  404280:	pop    ecx
  404281:	mov    bl,0x40
  404283:	stos   DWORD PTR es:[edi],eax
  404284:	add    BYTE PTR [edi-0x40],dh
  404287:	and    al,0xee
  404289:	rcr    BYTE PTR [ecx-0x32],cl
  40428c:	push   esi
  40428d:	xor    al,0x48
  40428f:	outs   dx,DWORD PTR ds:[esi]
  404290:	push   cs
  404291:	adc    DWORD PTR [edi-0x6e5049ff],esi
  404297:	ja     0x40423d
  404299:	mov    bh,BYTE PTR [eax-0x3f1ce406]
  40429f:	iret   
  4042a0:	cmp    DWORD PTR [esi],0x58392448
  4042a6:	fcomp  st(0)
  4042a8:	sub    esi,DWORD PTR [ebp-0x156ce2ff]
  4042ae:	pop    ecx
  4042af:	in     eax,0x3a
  4042b1:	pop    es
  4042b2:	addr16 xchg ecx,eax
  4042b4:	and    DWORD PTR [ecx+0x1],0xffffffdd
  4042b8:	nop
  4042b9:	jl     0x404263
  4042bb:	xchg   edi,eax
  4042bc:	sub    DWORD PTR ds:0xb8b442cf,ebx
  4042c2:	stc    
  4042c3:	scas   al,BYTE PTR es:[edi]
  4042c4:	or     al,0x96
  4042c6:	dec    eax
  4042c7:	cmp    bl,BYTE PTR [esi]
  4042c9:	xor    esi,DWORD PTR [ecx-0x3eaa594b]
  4042cf:	cwde   
  4042d0:	(bad)  
  4042d1:	jo     0x40432b
  4042d3:	fld    QWORD PTR [ebp-0x32]
  4042d6:	jmp    0x12b976a
  4042db:	in     al,0xeb
  4042dd:	add    BYTE PTR [eax],0x0
  4042e0:	add    al,bh
  4042e2:	mov    dh,0x71
  4042e4:	pop    ds
  4042e5:	xchg   ecx,eax
  4042e6:	aas    
  4042e7:	leave  
  4042e8:	stc    
  4042e9:	jo     0x404298
  4042eb:	fist   DWORD PTR [ecx+ecx*2+0x10856341]
  4042f2:	in     al,dx
  4042f3:	push   0x20
  4042f5:	mov    ecx,0xe8fed387
  4042fa:	hlt    
  4042fb:	rcr    BYTE PTR [ebx+0x7980f1],0xc1
  404302:	mov    al,0x5c
  404304:	in     al,0xbc
  404306:	push   edi
  404307:	loope  0x404365
  404309:	call   0xe87f:0x374e5478
  404310:	idiv   BYTE PTR [ecx+0x44ae8b2a]
  404316:	data16 aaa 
  404318:	push   ss
  404319:	and    al,BYTE PTR [edx-0x7e]
  40431c:	add    al,0xcf
  40431e:	popf   
  40431f:	cmp    eax,0xe915e6bc
  404324:	and    ebx,ebx
  404326:	ficom  DWORD PTR [ecx+ebx*4+0x6d]
  40432a:	int    0xe0
  40432c:	mov    edx,DWORD PTR [eax+0x32]
  40432f:	pop    esp
  404330:	xor    edx,DWORD PTR [ecx]
  404332:	sub    eax,0xd7cced59
  404337:	in     eax,0x55
  404339:	stos   BYTE PTR es:[edi],al
  40433a:	clc    
  40433b:	dec    edi
  40433c:	inc    edi
  40433d:	inc    edi
  40433e:	(bad)  
  40433f:	jmp    0x404340
  404341:	fisub  WORD PTR [edi+0x623a]
  404347:	add    bl,ah
  404349:	inc    eax
  40434a:	xchg   edx,ebx
  40434c:	jne    0x4042dc
  40434e:	xor    cl,al
  404350:	dec    eax
  404351:	test   DWORD PTR [esi-0x126ae990],ecx
  404357:	sub    BYTE PTR [ebx+0x5e],ch
  40435a:	push   ecx
  40435b:	nop
  40435c:	jge    0x4043ae
  40435e:	in     al,0x82
  404360:	loopne 0x404317
  404362:	push   edi
  404363:	cmp    cl,BYTE PTR [ecx-0x52]
  404366:	mov    fs,WORD PTR [edi+0x1f32e534]
  40436c:	xchg   edx,eax
  40436d:	lds    eax,FWORD PTR [esi+0x3a205f0d]
  404373:	mov    ch,0x26
  404375:	inc    ax
  404377:	mov    ebp,0x5fc7cdb
  40437c:	repz rcr dl,0x48
  404380:	in     al,0x65
  404382:	inc    ecx
  404383:	cmc    
  404384:	inc    esp
  404385:	lods   eax,DWORD PTR ds:[esi]
  404386:	cmp    DWORD PTR [edx],esp
  404388:	and    DWORD PTR [edx+0x13],edx
  40438b:	sahf   
  40438c:	jns    0x4043c6
  40438e:	jno    0x4043bb
  404390:	jnp    0x40434d
  404392:	retf   0x1397
  404395:	cmc    
  404396:	mov    edx,0x61f9cbf4
  40439b:	dec    eax
  40439c:	xor    esp,DWORD PTR [eax+0x2]
  40439f:	std    
  4043a0:	and    DWORD PTR [ebx-0x5c36bed7],eax
  4043a6:	push   ecx
  4043a7:	xchg   esi,eax
  4043a8:	and    al,0x47
  4043aa:	jmp    0x4043d5
  4043ac:	add    BYTE PTR [eax],al
  4043ae:	add    BYTE PTR [eax+ecx*2+0x6dbe9f99],dh
  4043b5:	mov    dl,0x23
  4043b7:	push   cs
  4043b8:	fwait
  4043b9:	or     ch,BYTE PTR [ebx-0x42]
  4043bc:	push   DWORD PTR [ecx]
  4043be:	xlat   BYTE PTR ds:[ebx]
  4043bf:	(bad)  
  4043c0:	and    edx,edx
  4043c2:	bound  edx,QWORD PTR [eax*4+0xd94de79]
  4043c9:	or     BYTE PTR [ecx],0xb1
  4043cc:	jo     0x404368
  4043ce:	mov    ch,0x69
  4043d0:	xchg   edi,eax
  4043d1:	dec    ecx
  4043d2:	add    BYTE PTR [ebx-0x24],cl
  4043d5:	loope  0x404392
  4043d7:	ret    
  4043d8:	push   ebp
  4043d9:	repnz fidivr WORD PTR [ebx+0x18]
  4043dd:	pop    ecx
  4043de:	arpl   WORD PTR [ebx],ax
  4043e0:	mov    edi,0xa411d6aa
  4043e5:	xchg   ecx,eax
  4043e6:	push   0x59
  4043e8:	sub    BYTE PTR [ecx-0x43],0xf4
  4043ec:	out    0xc1,eax
  4043ee:	add    DWORD PTR [ecx+ebp*4+0x21],esp
  4043f2:	mov    ah,0x4e
  4043f4:	mov    edx,?
  4043f6:	pop    es
  4043f7:	inc    BYTE PTR [esi]
  4043f9:	add    DWORD PTR [ecx+0x1],0xc
  4043fd:	push   ds
  4043fe:	fidiv  DWORD PTR [esi-0x776079d]
  404404:	jno    0x40439b
  404406:	mov    ds:0xca33f9ac,al
  40440b:	add    edx,DWORD PTR [ebp-0x23688eaf]
  404411:	scas   al,BYTE PTR es:[edi]
  404412:	adc    al,BYTE PTR [eax]
  404414:	add    BYTE PTR [eax],al
  404416:	cli    
  404417:	out    dx,al
  404418:	leave  
  404419:	cmp    DWORD PTR [esi+0x35265c86],ecx
  40441f:	into   
  404420:	stc    
  404421:	add    al,0xc9
  404423:	xlat   BYTE PTR es:[ebx]
  404425:	pop    esi
  404426:	sub    al,0x34
  404428:	jb     0x4043e7
  40442a:	sar    BYTE PTR [ebx+ecx*1+0x265157b5],0x96
  404432:	or     ebx,DWORD PTR [edx-0x54b01280]
  404438:	popf   
  404439:	dec    esi
  40443a:	add    al,BYTE PTR [edi+ebp*8-0x63]
  40443e:	mov    esi,0x27d0a30
  404443:	mov    eax,0xcab0e664
  404448:	add    DWORD PTR [ebp-0x5],0x1c2d1821
  40444f:	scas   al,BYTE PTR es:[edi]
  404450:	mov    ch,0xd
  404452:	add    BYTE PTR [esi-0x6d],0x75
  404456:	adc    eax,0x79d62e54
  40445b:	pushf  
  40445c:	push   eax
  40445d:	(bad)  
  40445e:	retf   0x6d74
  404461:	gs cs cld 
  404464:	retf   0xccfd
  404467:	push   cs
  404468:	out    0x1c,al
  40446a:	daa    
  40446b:	xchg   WORD PTR [ebp-0x78],dx
  40446f:	jmp    0x404492
  404471:	test   ch,0x82
  404474:	add    ah,bh
  404476:	outs   dx,DWORD PTR ds:[esi]
  404477:	xchg   ebp,eax
  404478:	xchg   esi,eax
  404479:	cdq    
  40447a:	add    BYTE PTR [eax],al
  40447c:	add    BYTE PTR [esi-0x27],al
  40447f:	sub    eax,0x26531e80
  404484:	sbb    eax,0xfb9e9fb5
  404489:	(bad)  
  40448a:	dec    ecx
  40448b:	mov    WORD PTR [esi+0x3734a5de],ss
  404491:	dec    ebp
  404492:	repnz test al,0x52
  404495:	es jge 0x4044a9
  404498:	lods   al,BYTE PTR ds:[esi]
  404499:	xchg   esi,eax
  40449a:	call   0x84b00da1
  40449f:	mov    ebx,0xe3a7665f
  4044a4:	cli    
  4044a5:	jle    0x4044f2
  4044a7:	pop    ebx
  4044a8:	aam    0xaf
  4044aa:	popf   
  4044ab:	dec    ecx
  4044ac:	jno    0x4044f4
  4044ae:	push   ebx
  4044af:	icebp  
  4044b0:	or     ch,dh
  4044b2:	test   BYTE PTR [ebp+eiz*1-0x32],ch
  4044b6:	call   0x7c9ec88e
  4044bb:	(bad)  
  4044bc:	sahf   
  4044bd:	mov    bh,0xef
  4044bf:	jge    0x4044a2
  4044c1:	mov    bh,0x27
  4044c3:	(bad)  
  4044c4:	cmp    al,0xd
  4044c6:	lds    ebp,FWORD PTR [esi+0x5a]
  4044c9:	jg     0x4044fb
  4044cb:	jl     0x404484
  4044cd:	push   esi
  4044ce:	mov    ebp,0x9c516c4
  4044d3:	pop    ecx
  4044d4:	repz pop edi
  4044d6:	data16 loope 0x404466
  4044d9:	out    dx,al
  4044da:	adc    dh,bl
  4044dc:	push   0x3e4b5f07
  4044e1:	add    BYTE PTR [eax],al
  4044e3:	add    bh,ch
  4044e5:	mov    ebx,0x30c69b13
  4044ea:	stos   DWORD PTR es:[edi],eax
  4044eb:	mov    ch,0x57
  4044ed:	lds    edi,FWORD PTR [ecx+0x128ad10]
  4044f3:	add    BYTE PTR [edx],bl
  4044f5:	pop    edx
  4044f6:	test   eax,0x157b2f9c
  4044fb:	and    al,0x91
  4044fd:	mov    cl,0x9f
  4044ff:	ss push esp
  404501:	push   edx
  404502:	sbb    al,0x8e
  404504:	cmp    eax,0xd8866612
  404509:	repnz fnstcw WORD PTR [esi]
  40450c:	mov    dh,0xb9
  40450e:	outs   dx,DWORD PTR ds:[esi]
  40450f:	sub    al,0x53
  404511:	sbb    dl,bl
  404513:	xchg   esp,eax
  404514:	push   0xffffff83
  404516:	add    al,0x9
  404518:	mov    edi,0xe1b1b861
  40451d:	jmp    0x1bb0:0xc924a30c
  404524:	add    bl,BYTE PTR [ecx+0x3bf743d1]
  40452a:	outs   dx,BYTE PTR ds:[esi]
  40452b:	sti    
  40452c:	mov    DWORD PTR [eax-0x25],esi
  40452f:	jmp    0x51a7d8a0
  404534:	adc    eax,0xb0ccb04c
  404539:	push   0xe3be740c
  40453e:	mov    eax,0x5005b66
  404543:	ficomp WORD PTR [edx]
  404545:	add    eax,DWORD PTR [eax]
  404547:	add    BYTE PTR [eax],al
  404549:	add    BYTE PTR [eax],al
  40454b:	fld    QWORD PTR [ecx]
  40454d:	xor    BYTE PTR [esi+0x2c60a874],dl
  404553:	sub    DWORD PTR [ebx+0x5ddba50],0xffffffc4
  40455a:	sbb    edx,ebp
  40455c:	add    ah,dh
  40455e:	(bad)  
  40455f:	jae    0x404549
  404561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404562:	xor    eax,0xa394ef24
  404567:	(bad)  
  404568:	iret   
  404569:	mov    BYTE PTR [edx],dh
  40456b:	rcl    esi,cl
  40456d:	mov    eax,0xd74ff3a4
  404572:	jmp    0xda12624c
  404577:	jnp    0x404510
  404579:	jne    0x4045c7
  40457b:	fsub   DWORD PTR [ebp+0x72]
  40457e:	jl     0x4045de
  404580:	push   ebp
  404581:	ins    BYTE PTR es:[edi],dx
  404582:	sub    eax,0x1d6d3fec
  404587:	bound  ecx,QWORD PTR [ebx]
  404589:	jne    0x40459b
  40458b:	(bad)  
  40458d:	jae    0x4045af
  40458f:	add    DWORD PTR [ecx],0x2c2b716b
  404595:	outs   dx,BYTE PTR ds:[esi]
  404596:	inc    ecx
  404597:	dec    ebp
  404598:	stos   BYTE PTR es:[edi],al
  404599:	leave  
  40459a:	aam    0xe6
  40459c:	xchg   edx,eax
  40459d:	into   
  40459e:	in     al,0x48
  4045a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045a1:	xlat   BYTE PTR ds:[ebx]
  4045a2:	mov    ch,0xc2
  4045a4:	xor    cl,dl
  4045a6:	test   DWORD PTR [ecx+eiz*4],esi
  4045a9:	pop    ds
  4045aa:	cwde   
  4045ab:	popf   
  4045ac:	dec    ebx
  4045ad:	sbb    DWORD PTR [eax+0x33000000],ebp
  4045b3:	mov    ebx,0x29b9f921
  4045b8:	es leave 
  4045ba:	pop    ds
  4045bb:	les    eax,FWORD PTR [edx]
  4045bd:	pop    esp
  4045be:	mov    ah,0x50
  4045c0:	push   es
  4045c1:	ins    BYTE PTR es:[edi],dx
  4045c2:	cmp    bl,BYTE PTR [edx-0x4]
  4045c5:	cmp    al,0x90
  4045c7:	inc    edx
  4045c8:	sti    
  4045c9:	or     al,0x6
  4045cb:	test   eax,0xf43b201d
  4045d0:	sbb    dl,BYTE PTR [eax]
  4045d2:	popf   
  4045d3:	bound  esp,QWORD PTR [ebx]
  4045d5:	inc    ecx
  4045d6:	rsqrtps xmm4,XMMWORD PTR [ecx+esi*2]
  4045da:	popa   
  4045db:	int3   
  4045dc:	add    ah,ah
  4045de:	ret    0x7d8
  4045e1:	aam    0x34
  4045e3:	cmp    dh,0x84
  4045e6:	(bad)  
  4045e7:	dec    edx
  4045e8:	stc    
  4045e9:	mov    ah,0x58
  4045eb:	pop    es
  4045ec:	sbb    al,0x77
  4045ee:	fwait
  4045ef:	mov    al,ds:0x325b71ab
  4045f4:	xor    ch,BYTE PTR [eax-0x56]
  4045f7:	mov    esp,0x46aa6f7d
  4045fc:	sti    
  4045fd:	retf   
  4045fe:	pop    ss
  4045ff:	stos   BYTE PTR es:[edi],al
  404600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404601:	int3   
  404602:	aas    
  404603:	sbb    al,0x15
  404605:	aad    0xe6
  404607:	aad    0x82
  404609:	ror    dh,cl
  40460b:	aas    
  40460c:	iret   
  40460d:	retf   0x72c3
  404610:	mov    eax,0x20e0f3cd
  404615:	aam    0x0
  404617:	add    BYTE PTR [eax],al
  404619:	and    al,BYTE PTR [edi-0x32d2cb2]
  40461f:	(bad)  
  404620:	ja     0x404681
  404622:	pop    ebx
  404623:	xchg   edi,eax
  404624:	jo     0x40465d
  404626:	jmp    0x7fbeaf50
  40462b:	xor    DWORD PTR [esi-0x6a],ebp
  40462e:	adc    eax,0x848b0611
  404633:	add    DWORD PTR ds:[ebx+0xe],ebp
  404637:	scas   eax,DWORD PTR es:[edi]
  404638:	clc    
  404639:	sbb    ebx,DWORD PTR [eax-0x68]
  40463c:	call   FWORD PTR [ebx]
  40463e:	jmp    0x1c21:0x8da71b15
  404645:	scas   eax,DWORD PTR es:[edi]
  404646:	mul    DWORD PTR [edi+0x7771f625]
  40464c:	and    bl,dh
  40464e:	jecxz  0x40466e
  404650:	enter  0x76b2,0xe8
  404654:	into   
  404655:	or     BYTE PTR [ecx+esi*2],0xd6
  404659:	shl    DWORD PTR [edx+0x7e],cl
  40465c:	rol    DWORD PTR [ebx],1
  40465e:	icebp  
  40465f:	div    DWORD PTR [esi+ebp*2-0x72]
  404663:	out    0x71,eax
  404665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404666:	add    al,0x0
  404668:	push   esi
  404669:	dec    eax
  40466a:	stos   DWORD PTR es:[edi],eax
  40466b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40466c:	sbb    DWORD PTR [edi-0x45],0xcdf1e133
  404673:	mov    ds:0x349df0ee,al
  404678:	jg     0x404630
  40467a:	ins    BYTE PTR es:[edi],dx
  40467b:	mov    cs,WORD PTR [eax+0x0]
  40467e:	add    BYTE PTR [eax],al
  404680:	test   eax,0x6c6187c
  404685:	adc    bh,BYTE PTR [ebx+0x2ce1fbf1]
  40468b:	pop    eax
  40468c:	shl    DWORD PTR [edx],cl
  40468e:	xchg   edi,eax
  40468f:	inc    edi
  404690:	aam    0x42
  404692:	add    DWORD PTR [edx-0x20bca1b],edx
  404698:	in     al,0x25
  40469a:	bound  ebp,QWORD PTR [edx+edx*8-0x2a]
  40469e:	xlat   BYTE PTR ds:[ebx]
  40469f:	sbb    edx,DWORD PTR ds:0xf2954e07
  4046a5:	jns    0x404694
  4046a7:	loop   0x4046a0
  4046a9:	imul   edi,DWORD PTR [ebx+0x6b],0xf4c19857
  4046b0:	dec    ecx
  4046b1:	enter  0x4c57,0xbf
  4046b5:	mov    ebp,0xadc1fbc6
  4046ba:	push   eax
  4046bb:	(bad)  
  4046bc:	retf   0xea5e
  4046bf:	int    0x9f
  4046c1:	mov    ?,WORD PTR [ebx+ecx*2+0x3a]
  4046c5:	add    bl,bh
  4046c7:	aam    0x2e
  4046c9:	repnz dec eax
  4046cb:	gs cmp eax,0x3cb2f323
  4046d1:	push   ebx
  4046d2:	gs xor al,0x7d
  4046d5:	and    eax,0x3583e358
  4046da:	into   
  4046db:	dec    edx
  4046dc:	mov    WORD PTR [esi],es
  4046de:	je     0x404695
  4046e0:	pop    ebp
  4046e1:	xlat   BYTE PTR ds:[ebx]
  4046e2:	loope  0x4046e4
  4046e4:	add    BYTE PTR [eax],al
  4046e6:	add    BYTE PTR [eax],ah
  4046e8:	shl    BYTE PTR [ebp-0x6a3060bf],1
  4046ee:	xlat   BYTE PTR ds:[ebx]
  4046ef:	es mov ebx,0xb5696dc4
  4046f5:	hlt    
  4046f6:	sti    
  4046f7:	cdq    
  4046f8:	add    ch,cl
  4046fa:	push   0xffffffe6
  4046fc:	add    cl,bl
  4046fe:	cld    
  4046ff:	outs   dx,DWORD PTR ds:[esi]
  404700:	call   0xe8208d8c
  404705:	mov    bh,0xd0
  404707:	push   esi
  404708:	mov    ds:0xc99732c,eax
  40470d:	sbb    eax,0x4ba170e5
  404712:	pop    edi
  404713:	call   FWORD PTR [esi+0x64ac97b]
  404719:	jno    0x404757
  40471b:	mov    ch,0x9
  40471d:	inc    ecx
  40471e:	stos   BYTE PTR es:[edi],al
  40471f:	sbb    al,0xa5
  404721:	movups xmm2,XMMWORD PTR [ebx]
  404724:	pushf  
  404725:	pop    ds
  404726:	xchg   BYTE PTR [ebp+0x2a25b4ff],al
  40472c:	add    BYTE PTR [ebp-0x2c19dc4d],al
  404732:	or     esp,ebp
  404734:	jmp    0xef9:0xd0ac9fe3
  40473b:	jecxz  0x40470c
  40473d:	leave  
  40473e:	cwde   
  40473f:	pop    edx
  404740:	mov    edx,0xb5552298
  404745:	test   al,0xb4
  404747:	rcr    DWORD PTR [ecx],cl
  404749:	cmp    eax,0x17
  40474e:	in     al,dx
  40474f:	push   ss
  404750:	or     eax,0x5c2b9581
  404755:	cmp    ebx,DWORD PTR [edx+0x34]
  404758:	ins    BYTE PTR es:[edi],dx
  404759:	lods   eax,DWORD PTR ds:[esi]
  40475a:	pop    edi
  40475b:	xor    al,BYTE PTR [ebx-0x4cd28fe0]
  404761:	mov    dh,0xf3
  404763:	mov    al,0x71
  404765:	loop   0x404766
  404767:	sti    
  404768:	jb     0x40473c
  40476a:	mov    DWORD PTR [esi-0x31],esi
  40476d:	inc    edi
  40476e:	sbb    al,BYTE PTR [ebx-0x2a]
  404771:	ja     0x4046f7
  404773:	mov    ah,0xcc
  404775:	es out 0x9c,al
  404778:	(bad)  
  404779:	push   ss
  40477a:	jo     0x4047c9
  40477c:	and    eax,0x201be10b
  404781:	cmp    ebp,DWORD PTR [edi-0x55]
  404784:	push   ss
  404785:	push   0xffffffed
  404787:	mov    ch,0x1d
  404789:	pop    edx
  40478a:	pop    ebx
  40478b:	push   esp
  40478c:	cli    
  40478d:	into   
  40478e:	call   0x773f42cf
  404793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404794:	add    ebp,DWORD PTR [esi-0x61ff8d2c]
  40479a:	inc    edx
  40479b:	add    cl,bh
  40479d:	xchg   edx,eax
  40479e:	aaa    
  40479f:	sub    esp,edi
  4047a1:	mov    ds:0xf2029aa1,al
  4047a6:	fild   DWORD PTR [esi-0x5e9a3dff]
  4047ac:	and    eax,0x1f2fbe57
  4047b1:	add    BYTE PTR [bx+si],al
  4047b4:	add    BYTE PTR [eax],ch
  4047b6:	mov    bh,0x17
  4047b8:	ss ret 0x1c21
  4047bc:	push   es
  4047bd:	dec    esp
  4047be:	stos   BYTE PTR es:[edi],al
  4047bf:	iret   
  4047c0:	sbb    eax,ebp
  4047c2:	push   ss
  4047c3:	aam    0x2b
  4047c5:	push   ebx
  4047c6:	mov    al,ds:0x48c97acd
  4047cb:	(bad)  
  4047cc:	dec    edx
  4047cd:	aaa    
  4047ce:	(bad)  
  4047cf:	push   0xffffffdf
  4047d1:	mov    WORD PTR [ecx],?
  4047d3:	imul   ebp,edi,0xbe70c11a
  4047d9:	mov    al,0x4f
  4047db:	je     0x40476b
  4047dd:	push   ds
  4047de:	pop    es
  4047df:	mov    edi,0x48af50d1
  4047e4:	shl    BYTE PTR [eax+0x21],cl
  4047e7:	ror    ebx,1
  4047e9:	mov    cl,0xca
  4047eb:	push   ds
  4047ec:	leave  
  4047ed:	loope  0x404823
  4047ef:	cwde   
  4047f0:	ins    BYTE PTR es:[edi],dx
  4047f1:	push   esp
  4047f2:	cwde   
  4047f3:	inc    edi
  4047f4:	addr16 cmp al,0x2a
  4047f7:	mov    dh,0x6e
  4047f9:	cmc    
  4047fa:	ret    
  4047fb:	and    DWORD PTR [esi-0x3],esi
  4047fe:	dec    ebp
  4047ff:	inc    ecx
  404800:	test   BYTE PTR [ecx],0xbd
  404803:	mov    ?,ebp
  404805:	fst    DWORD PTR [edx+0x1f]
  404808:	add    eax,0xffa89939
  40480d:	sub    ah,BYTE PTR [edi]
  40480f:	and    ecx,DWORD PTR es:[ebp+eax*8+0x3bb42091]
  404817:	clc    
  404818:	sbb    DWORD PTR [eax],eax
  40481a:	add    BYTE PTR [eax],al
  40481c:	jge    0x4047cf
  40481e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40481f:	sbb    al,BYTE PTR [ebp+0x1f]
  404822:	xor    ah,BYTE PTR [edx]
  404824:	inc    eax
  404825:	xchg   edx,eax
  404826:	pop    ebp
  404827:	and    DWORD PTR [eax-0x4],esi
  40482a:	retf   
  40482b:	sbb    BYTE PTR [ecx+0x66],al
  40482e:	mov    ebx,0x34d8511b
  404833:	mul    ebp
  404835:	jnp    0x404879
  404837:	cld    
  404838:	lods   eax,DWORD PTR ds:[esi]
  404839:	add    eax,0x5fe505cb
  40483e:	xchg   esp,eax
  40483f:	dec    BYTE PTR [esi]
  404841:	repnz stos DWORD PTR es:[edi],eax
  404843:	push   0xfffffff8
  404845:	pusha  
  404846:	fwait
  404847:	imul   ebp,eax,0xc97001ee
  40484d:	je     0x40487c
  40484f:	jae    0x4047ea
  404851:	or     ch,BYTE PTR [ebx+0x74691ccf]
  404857:	aam    0x24
  404859:	xlat   BYTE PTR ds:[ebx]
  40485a:	inc    DWORD PTR [esi+edi*1]
  40485d:	or     BYTE PTR [ebx+0x1d702d12],0x82
  404864:	rol    esp,cl
  404866:	mov    al,0x8d
  404868:	rcl    BYTE PTR [esi+eiz*1-0x639bf6e4],1
  40486f:	jmp    0x40487c
  404871:	je     0x40487d
  404873:	fimul  WORD PTR gs:[edx]
  404876:	test   eax,0x3edadd92
  40487b:	sti    
  40487c:	int    0x29
  40487e:	test   esp,esp
  404880:	add    BYTE PTR [eax],al
  404882:	add    al,dh
  404884:	aaa    
  404885:	adc    edi,DWORD PTR [esp+edx*2+0x4d]
  404889:	or     BYTE PTR [ebx+0x47],0x1d
  40488d:	adc    al,0xd2
  40488f:	daa    
  404890:	in     al,dx
  404891:	lods   eax,DWORD PTR ds:[esi]
  404892:	fst    QWORD PTR [esi]
  404894:	cld    
  404895:	aaa    
  404896:	pop    ebx
  404897:	rcl    DWORD PTR [ecx+0x61c2449b],0xd
  40489e:	mov    ch,0xb4
  4048a0:	mov    al,0xb7
  4048a2:	loop   0x40485d
  4048a4:	shl    BYTE PTR [ecx],0x6f
  4048a7:	mov    al,ds:0xa318d4b5
  4048ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ad:	inc    edx
  4048ae:	cmp    DWORD PTR [ebx],0x3aeef854
  4048b4:	test   BYTE PTR [esi+0x68],ch
  4048b7:	aad    0xf8
  4048b9:	int3   
  4048ba:	test   edi,0xc0865ae8
  4048c0:	pop    ss
  4048c1:	loope  0x404894
  4048c3:	aad    0x47
  4048c5:	ja     0x404938
  4048c7:	cmp    BYTE PTR [esi],bh
  4048c9:	out    0xde,al
  4048cb:	cmp    eax,0x2d4f702e
  4048d0:	(bad)  
  4048d2:	clc    
  4048d3:	out    dx,eax
  4048d4:	or     ebx,DWORD PTR [eax+eax*1-0x5b]
  4048d8:	out    0x9d,al
  4048da:	push   DWORD PTR [edx]
  4048dc:	out    0xad,al
  4048de:	imul   edi,DWORD PTR [ebx+0x1cd3fefb],0x45cef8
  4048e8:	add    BYTE PTR [eax],al
  4048ea:	stos   BYTE PTR es:[edi],al
  4048eb:	popf   
  4048ec:	loope  0x404966
  4048ee:	cmp    eax,0x14eed19f
  4048f3:	pop    es
  4048f4:	adc    DWORD PTR [ebx+eax*8+0x4],0xffffffb3
  4048f9:	ret    0x12d
  4048fc:	es popa 
  4048fe:	jp     0x4048e3
  404900:	adc    eax,0x470213f7
  404905:	dec    ebp
  404906:	xchg   esp,eax
  404907:	stc    
  404908:	jbe    0x4048e5
  40490a:	fs mov edx,0xd2334a6a
  404910:	pop    edx
  404911:	fcomp  QWORD PTR [edx-0x38]
  404914:	or     esp,DWORD PTR [esi-0x3]
  404917:	sar    BYTE PTR [ebx],cl
  404919:	lock and DWORD PTR [edi],0xffffffae
  40491d:	push   ebx
  40491e:	hlt    
  40491f:	sub    al,0x9e
  404921:	lds    ebx,FWORD PTR [ebp+0x15]
  404924:	iret   
  404925:	jg     0x4048b1
  404927:	push   ss
  404928:	(bad)  
  404929:	jmp    0x1d327845
  40492e:	shr    BYTE PTR ds:0x14a98ac2,0x93
  404935:	xor    BYTE PTR [esi],ch
  404937:	das    
  404938:	mov    ds:0x36b3b0a6,eax
  40493d:	add    eax,0x9306d107
  404942:	outs   dx,BYTE PTR ds:[esi]
  404943:	leave  
  404944:	push   edi
  404945:	sub    DWORD PTR [ecx],edi
  404947:	shl    BYTE PTR [edi-0x41],cl
  40494a:	pop    ecx
  40494b:	add    BYTE PTR [edx+0x2e],bh
  40494e:	add    BYTE PTR [eax],al
  404950:	add    BYTE PTR [esi-0xc47b61d],cl
  404956:	ficomp DWORD PTR [ebx]
  404958:	sbb    esi,ecx
  40495a:	add    edx,DWORD PTR ds:0xf921872b
  404960:	mov    ebp,0x8df86cdc
  404965:	push   edx
  404966:	repz (bad) 
  404968:	fsubp  st(0),st
  40496a:	mov    ds:0xad6eef01,al
  40496f:	add    eax,DWORD PTR [eax]
  404971:	repz push es
  404973:	or     DWORD PTR [ecx],esi
  404975:	xor    al,dl
  404977:	in     eax,dx
  404978:	popa   
  404979:	jno    0x404944
  40497b:	(bad)  
  40497c:	push   edx
  40497d:	mov    al,0xc
  40497f:	sbb    ch,al
  404981:	out    dx,eax
  404982:	call   0xa749:0xfe36f42c
  404989:	ins    DWORD PTR es:[edi],dx
  40498a:	std    
  40498b:	inc    edx
  40498c:	xchg   esi,eax
  40498d:	mov    ah,0xd8
  40498f:	retf   0xeb8a
  404992:	faddp  st(1),st
  404994:	mov    ebx,0xe8953a3a
  404999:	jns    0x4049ec
  40499b:	mov    al,0xd9
  40499d:	test   al,0x74
  40499f:	outs   dx,DWORD PTR ds:[esi]
  4049a0:	dec    edi
  4049a1:	out    0x12,eax
  4049a3:	push   esi
  4049a4:	jle    0x4049e4
  4049a6:	sub    DWORD PTR ss:0x1c8c2575,0x12c15aac
  4049b1:	and    ah,BYTE PTR [ecx-0x36]
  4049b4:	and    eax,DWORD PTR [eax]
  4049b6:	add    BYTE PTR [eax],al
  4049b8:	add    edi,DWORD PTR [eax-0x51]
  4049bb:	jo     0x4049fd
  4049bd:	(bad)  
  4049be:	xchg   esp,eax
  4049bf:	inc    ecx
  4049c0:	xor    DWORD PTR [esi+0x54bed755],0xb3e7e66e
  4049ca:	mov    esi,DWORD PTR [ebp-0x7b7f5ce4]
  4049d0:	gs pop es
  4049d2:	imul   ecx,DWORD PTR [eax],0x5b
  4049d5:	inc    eax
  4049d6:	add    BYTE PTR [ebx],0x5a
  4049d9:	call   FWORD PTR [eax-0x7f3dd52a]
  4049df:	in     eax,dx
  4049e0:	sub    DWORD PTR [ecx+0x3bb62ccf],eax
  4049e6:	mov    esi,0x9cfa9f17
  4049eb:	inc    edx
  4049ec:	les    edi,FWORD PTR [ebp+0x7ced499c]
  4049f2:	jl     0x404a73
  4049f4:	iret   
  4049f5:	push   0xaa06846d
  4049fa:	dec    esi
  4049fb:	jno    0x404a2a
  4049fd:	out    0x4e,eax
  4049ff:	pop    edx
  404a00:	sub    BYTE PTR fs:[eax-0x65],bh
  404a04:	shl    BYTE PTR [ecx+edx*4-0x50],cl
  404a08:	mov    ds:0x70c5aaa5,eax
  404a0d:	loop   0x4049a1
  404a0f:	mov    esi,0x46c42381
  404a14:	test   DWORD PTR [eax-0x5b],esi
  404a17:	cmp    eax,0x18c6b18c
  404a1c:	add    BYTE PTR [eax],al
  404a1e:	add    BYTE PTR [edi-0x61cc2912],dh
  404a24:	das    
  404a25:	add    bl,dh
  404a27:	or     DWORD PTR [ebp+0x9],ebp
  404a2a:	fisubr DWORD PTR [edx]
  404a2c:	scas   al,BYTE PTR es:[edi]
  404a2d:	loop   0x404a2b
  404a2f:	sti    
  404a30:	jmp    0x3d46:0x2bbb07da
  404a37:	mov    ebp,0xf4462799
  404a3c:	pop    eax
  404a3d:	add    al,0x33
  404a3f:	mov    edi,0xd6181517
  404a44:	(bad)  
  404a45:	inc    ecx
  404a46:	fldenv [ecx-0x6b]
  404a49:	dec    ebx
  404a4a:	repnz xor dl,BYTE PTR [eax+eax*1+0x60]
  404a4f:	in     al,dx
  404a50:	ja     0x404ac7
  404a52:	pop    ecx
  404a53:	aas    
  404a54:	jge    0x404a8a
  404a56:	(bad)  
  404a57:	jno    0x404ab3
  404a59:	sti    
  404a5a:	out    dx,eax
  404a5b:	je     0x4049e8
  404a5d:	mov    edx,0x79bc960c
  404a62:	or     eax,0x3a38adc5
  404a67:	jl     0x404a88
  404a69:	call   DWORD PTR [ebx+0x5f]
  404a6c:	dec    esi
  404a6d:	mov    esi,0x7d013a28
  404a72:	adc    DWORD PTR [ecx],esi
  404a74:	lock cmp ebx,DWORD PTR [ecx-0x6ffab22a]
  404a7b:	adc    eax,0x40ab441d
  404a80:	jmp    0x1b00:0xb286
  404a87:	sti    
  404a88:	lds    ebx,FWORD PTR [ebp-0x26]
  404a8b:	mov    es,WORD PTR [ecx]
  404a8d:	ins    BYTE PTR es:[edi],dx
  404a8e:	loope  0x404aef
  404a90:	inc    eax
  404a91:	dec    edi
  404a92:	int3   
  404a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a94:	sub    DWORD PTR [esi],0xffffff9f
  404a97:	mov    edi,0xc24f21c2
  404a9c:	or     eax,0x4c934c08
  404aa1:	jecxz  0x404acd
  404aa3:	fs (bad) 
  404aa5:	cli    
  404aa6:	xor    DWORD PTR [ebp-0x32],0xffffffa5
  404aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404aab:	pop    es
  404aac:	or     DWORD PTR [ecx+ecx*2+0x66c747d6],esp
  404ab3:	sub    DWORD PTR [ebx-0x35c7a84a],ecx
  404ab9:	arpl   WORD PTR [edx+edi*1],dx
  404abc:	push   esp
  404abd:	dec    edx
  404abe:	xlat   BYTE PTR ds:[ebx]
  404abf:	sub    dl,BYTE PTR ds:0xd5dc8261
  404ac5:	js     0x404aa0
  404ac7:	or     al,0x97
  404ac9:	add    BYTE PTR [eax+eiz*2],cl
  404acc:	cwde   
  404acd:	push   eax
  404ace:	adc    eax,0xee11a9b7
  404ad3:	popa   
  404ad4:	cli    
  404ad5:	rol    BYTE PTR [edi+0x7a],cl
  404ad8:	retf   
  404ad9:	xchg   ebx,eax
  404ada:	cwde   
  404adb:	in     al,0xd6
  404add:	pop    esp
  404ade:	sar    ecx,0xe5
  404ae1:	sbb    eax,0xdeb4deda
  404ae6:	jecxz  0x404b1f
  404ae8:	test   BYTE PTR [edi+0x34000000],bl
  404aee:	not    BYTE PTR [ecx]
  404af0:	pop    eax
  404af1:	sbb    eax,0xf619229f
  404af6:	mov    edx,0xa50fda6f
  404afb:	inc    eax
  404afc:	fwait
  404afd:	out    0x65,eax
  404aff:	imul   esp,DWORD PTR [edi-0x19a58ef2],0x25
  404b06:	int3   
  404b07:	or     DWORD PTR ds:0x643852fc,esp
  404b0d:	retf   
  404b0e:	adc    ch,BYTE PTR [esi-0x60762d5d]
  404b14:	loop   0x404a9f
  404b16:	xor    ah,cl
  404b18:	and    DWORD PTR [eax+0x5f60fd3b],esi
  404b1e:	mov    ds:0xa886afe0,eax
  404b23:	iret   
  404b24:	out    dx,al
  404b25:	sbb    eax,0x142d8292
  404b2a:	or     esi,DWORD PTR [edx+0x244fe36c]
  404b30:	stos   DWORD PTR es:[edi],eax
  404b31:	jmp    0x45e5:0xc1ea14d4
  404b38:	sub    DWORD PTR [eax],ebp
  404b3a:	out    dx,eax
  404b3b:	jbe    0x404ba5
  404b3d:	popf   
  404b3e:	test   al,0x78
  404b40:	test   BYTE PTR [ebx+eiz*4+0x47],0xb7
  404b45:	repz xchg edx,eax
  404b47:	or     al,0x1b
  404b49:	out    0xa1,eax
  404b4b:	cmc    
  404b4c:	sub    DWORD PTR [esi],ebx
  404b4e:	pop    ecx
  404b4f:	ss mov esp,0x41000000
  404b55:	jg     0x404ba2
  404b57:	lea    eax,[eax-0x3c21d7ea]
  404b5d:	lea    esp,[ecx]
  404b5f:	out    dx,eax
  404b60:	add    cl,ch
  404b62:	stos   BYTE PTR es:[edi],al
  404b63:	repz sub eax,0x64c29fbb
  404b69:	pop    edx
  404b6a:	mov    ah,0x91
  404b6c:	lahf   
  404b6d:	jns    0x404b3c
  404b6f:	mov    al,ds:0x368e30d6
  404b74:	or     DWORD PTR [edi],esp
  404b76:	jae    0x404b7f
  404b78:	dec    eax
  404b79:	push   ds
  404b7a:	pusha  
  404b7b:	push   esp
  404b7c:	jnp    0x404b03
  404b7e:	imul   esp,DWORD PTR [ebp-0x46],0x389884a8
  404b85:	into   
  404b86:	jnp    0x404b31
  404b88:	stc    
  404b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b8a:	push   esi
  404b8b:	cli    
  404b8c:	stos   BYTE PTR es:[edi],al
  404b8d:	mov    al,ds:0xe16bcb71
  404b92:	mov    al,0x5d
  404b94:	cmp    al,0xe2
  404b96:	xchg   edi,eax
  404b97:	ins    BYTE PTR es:[edi],dx
  404b98:	cmc    
  404b99:	add    bh,BYTE PTR [ebx-0x3a6b51c1]
  404b9f:	push   cs
  404ba0:	addr16 cmp eax,0x3630123e
  404ba6:	inc    ebx
  404ba7:	and    esi,ecx
  404ba9:	out    dx,al
  404baa:	das    
  404bab:	jo     0x404b5f
  404bad:	fcomp  DWORD PTR [eax]
  404baf:	inc    ecx
  404bb0:	jae    0x404beb
  404bb2:	fcmovbe st,st(6)
  404bb4:	xor    al,0x2a
  404bb6:	out    dx,eax
  404bb7:	in     eax,0x0
  404bb9:	add    BYTE PTR [eax],al
  404bbb:	in     eax,dx
  404bbc:	mov    al,BYTE PTR [esi*4-0x7c02d34a]
  404bc3:	outs   dx,DWORD PTR ds:[esi]
  404bc4:	pop    es
  404bc5:	cwde   
  404bc6:	inc    edx
  404bc7:	jns    0x404bc6
  404bc9:	nop
  404bca:	cmp    eax,0x18aa3ea8
  404bcf:	dec    ebx
  404bd0:	jg     0x404b85
  404bd2:	das    
  404bd3:	cmp    al,al
  404bd5:	fsub   st(6),st
  404bd7:	mov    ebp,0xc6d9ecf8
  404bdc:	cmp    esi,ecx
  404bde:	cld    
  404bdf:	(bad)  
  404be1:	scas   eax,DWORD PTR es:[edi]
  404be2:	add    edx,edi
  404be4:	mov    ebx,0xf4f37ba0
  404be9:	mov    BYTE PTR [edx+eiz*8-0x6e8e9dcb],al
  404bf0:	jbe    0x404c6d
  404bf2:	push   esi
  404bf3:	shl    BYTE PTR [edi-0xec9685c],0xa4
  404bfa:	mov    al,0xff
  404bfc:	xor    esi,eax
  404bfe:	lds    edx,FWORD PTR [ebx+esi*2-0x49]
  404c02:	mov    edx,0x857b45d
  404c07:	scas   eax,DWORD PTR es:[edi]
  404c08:	scas   eax,DWORD PTR es:[edi]
  404c09:	push   esi
  404c0a:	push   DWORD PTR [edi+0x6e]
  404c0d:	jne    0x404be1
  404c0f:	mov    esi,0xc5ed642d
  404c14:	in     al,dx
  404c15:	mov    dl,0x2c
  404c17:	dec    edx
  404c18:	lods   al,BYTE PTR ds:[esi]
  404c19:	call   0x3e:0x716b3b13
  404c20:	add    BYTE PTR [eax],al
  404c22:	fsubr  DWORD PTR [ecx]
  404c24:	mov    BYTE PTR [ecx+0x9],cl
  404c27:	jmp    0xa8260dfa
  404c2c:	faddp  st(6),st
  404c2e:	in     al,dx
  404c2f:	mov    bp,0x47ab
  404c33:	es pushf 
  404c35:	xchg   esp,eax
  404c36:	push   cs
  404c37:	in     eax,0xea
  404c39:	push   ebp
  404c3a:	and    BYTE PTR [ebx+0x62b16ae2],0x0
  404c41:	stc    
  404c42:	je     0x404cbb
  404c44:	add    BYTE PTR [bp+si+0x66],dh
  404c48:	es or  eax,0x1cb86835
  404c4e:	xor    bh,BYTE PTR [ecx-0x7]
  404c51:	aas    
  404c52:	xchg   edx,ecx
  404c54:	cmp    bl,BYTE PTR [esi]
  404c56:	mov    BYTE PTR [ebx+0x2dd9697b],bl
  404c5c:	mov    esp,0xfd3c9e60
  404c61:	cmp    esi,DWORD PTR [ebx+0xf]
  404c64:	ds inc edx
  404c66:	ins    BYTE PTR es:[edi],dx
  404c67:	fidivr WORD PTR [esi+0x15]
  404c6a:	repz loop 0x404c1c
  404c6d:	adc    al,0xec
  404c6f:	repz lock test DWORD PTR [edx],0x3fe63243
  404c77:	adc    BYTE PTR [ebx+0x31],dh
  404c7a:	out    0xa7,eax
  404c7c:	mov    ah,0x18
  404c7e:	fdiv   DWORD PTR [esi-0x7a4acc0b]
  404c84:	ss dec edx
  404c86:	add    BYTE PTR [eax],al
  404c88:	add    BYTE PTR [edx-0x764d88ac],dh
  404c8e:	mov    al,0x4e
  404c90:	mov    ebx,0x900fa18e
  404c95:	ret    
  404c96:	push   edx
  404c97:	int3   
  404c98:	mov    DWORD PTR [ebx+eax*4-0xabaa973],ebx
  404c9f:	dec    ecx
  404ca0:	aaa    
  404ca1:	(bad)  
  404ca2:	in     al,0xa
  404ca4:	push   esp
  404ca5:	push   edi
  404ca6:	pop    ss
  404ca7:	enter  0x1865,0x46
  404cab:	mov    edx,ebp
  404cad:	xchg   ecx,eax
  404cae:	cmp    eax,DWORD PTR [esi+0x3]
  404cb1:	(bad)  
  404cb2:	sub    al,0x7
  404cb4:	sbb    BYTE PTR [edx-0x1afe3c27],bl
  404cba:	or     BYTE PTR [ebp-0x67b64300],al
  404cc0:	inc    edx
  404cc1:	inc    esp
  404cc2:	shr    BYTE PTR [eax-0x604a0fd],1
  404cc8:	rcl    BYTE PTR [esi-0x1a],0xca
  404ccc:	sbb    ebx,0x721fc4ba
  404cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cd3:	repz pop esi
  404cd5:	mov    ecx,0xb09da708
  404cda:	popf   
  404cdb:	xchg   ebp,eax
  404cdc:	fdiv   st(7),st
  404cde:	fdivp  st(7),st
  404ce0:	sbb    al,BYTE PTR [esi+0x49]
  404ce3:	xor    DWORD PTR [edx-0x23],ebx
  404ce6:	in     al,0x61
  404ce8:	cdq    
  404ce9:	aam    0xf9
  404ceb:	push   edx
  404cec:	fadd   DWORD PTR [eax]
  404cee:	add    BYTE PTR [eax],al
  404cf0:	jecxz  0x404d53
  404cf2:	dec    edi
  404cf3:	pop    ss
  404cf4:	jmp    0x2d4f:0xc1567e7c
  404cfb:	xchg   ebp,eax
  404cfc:	test   al,0xb6
  404cfe:	sbb    al,0xd4
  404d00:	out    0x75,eax
  404d02:	mov    dl,BYTE PTR [ebx]
  404d04:	(bad)  
  404d05:	adc    DWORD PTR [ebx-0x17c2daae],edi
  404d0b:	xchg   ecx,eax
  404d0c:	or     al,0x24
  404d0e:	fnop   
  404d10:	xor    al,0xf9
  404d12:	repnz in al,dx
  404d14:	or     eax,0xf6adc1ee
  404d19:	dec    edx
  404d1a:	xchg   ecx,eax
  404d1b:	outs   dx,BYTE PTR ds:[esi]
  404d1c:	call   ebx
  404d1e:	lahf   
  404d1f:	das    
  404d20:	mov    al,0x95
  404d22:	xor    eax,0x70ab9e8
  404d27:	test   eax,0x6a539fd2
  404d2c:	fwait
  404d2d:	mov    eax,0x212c2b64
  404d32:	jns    0x404d18
  404d34:	adc    eax,0xf3a54838
  404d39:	mov    DWORD PTR [ebx+ebx*1+0xd],esi
  404d3d:	mov    ecx,DWORD PTR [ecx-0x36242bd6]
  404d43:	mov    esp,0x8db33493
  404d48:	push   edx
  404d49:	in     eax,dx
  404d4a:	lahf   
  404d4b:	ficom  WORD PTR [ecx]
  404d4d:	mul    DWORD PTR [edi+ebp*8-0x1ea065f0]
  404d54:	add    BYTE PTR [eax],al
  404d56:	add    BYTE PTR [esi+0x5fd066aa],ah
  404d5c:	(bad)  
  404d5d:	mov    DWORD PTR [ebx-0x4d8b36ec],eax
  404d63:	int    0x1d
  404d65:	mov    bl,0x24
  404d67:	mov    dh,BYTE PTR [esi-0x36]
  404d6a:	adc    eax,0x46a56b3b
  404d6f:	clc    
  404d70:	je     0x404d12
  404d72:	ja     0x404d1d
  404d74:	shl    DWORD PTR [edi],0x6b
  404d77:	pop    esi
  404d78:	bound  ebx,QWORD PTR [esi]
  404d7a:	pop    edx
  404d7b:	daa    
  404d7c:	mov    edi,0xb0dc0931
  404d81:	dec    esp
  404d82:	cmp    BYTE PTR [ebp+0x42ae0b85],al
  404d88:	mov    ?,edx
  404d8a:	sahf   
  404d8b:	add    esp,DWORD PTR [ebx]
  404d8d:	(bad)  
  404d8f:	sar    BYTE PTR [eax+ebp*8],0xfc
  404d93:	popa   
  404d94:	mov    al,ds:0x9ef30003
  404d99:	shr    DWORD PTR [edx+0x24],0xa1
  404d9d:	xchg   esp,edx
  404d9f:	inc    ebp
  404da0:	mov    ds:0xa52abe45,al
  404da5:	or     ch,BYTE PTR [eax-0x3d375159]
  404dab:	enter  0x8ea4,0x7c
  404daf:	sub    DWORD PTR [ebx+0x776164c],0x4f43f0f7
  404db9:	out    dx,al
  404dba:	mov    dl,0x0
  404dbc:	add    BYTE PTR [eax],al
  404dbe:	fadd   DWORD PTR [ebp-0x42918b1c]
  404dc4:	fnsave [esi]
  404dc6:	pushf  
  404dc7:	test   al,0xf0
  404dc9:	stc    
  404dca:	mov    ebp,DWORD PTR [ebx]
  404dcc:	icebp  
  404dcd:	mov    ebx,0x7de33a60
  404dd2:	mov    BYTE PTR [eax],0xe2
  404dd5:	aas    
  404dd6:	mov    ah,0xd3
  404dd8:	add    al,0xe6
  404dda:	xchg   ecx,eax
  404ddb:	pop    ss
  404ddc:	cld    
  404ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dde:	sub    cl,BYTE PTR [esi-0xa]
  404de1:	popa   
  404de2:	fdivr  st(4),st
  404de4:	out    dx,al
  404de5:	and    ebp,esi
  404de7:	(bad)  
  404de9:	in     al,dx
  404dea:	stc    
  404deb:	(bad)
  404df0:	shr    DWORD PTR [eax+0x14],1
  404df3:	leave  
  404df4:	shr    BYTE PTR [edx],1
  404df6:	pushfw 
  404df8:	sti    
  404df9:	(bad)  
  404dfa:	and    bh,BYTE PTR [edi-0x69846b06]
  404e00:	clc    
  404e01:	push   edx
  404e02:	int    0x6c
  404e04:	stc    
  404e05:	adc    BYTE PTR [edi-0x55202389],bh
  404e0b:	cli    
  404e0c:	aam    0x9d
  404e0e:	ret    
  404e0f:	jmp    0x11a5a9f2
  404e14:	(bad)  
  404e15:	sbb    edi,edx
  404e17:	inc    ebx
  404e18:	loope  0x404e68
  404e1a:	sub    eax,0xf8ce0a7
  404e1f:	mov    esi,0xcad2
  404e24:	add    BYTE PTR [ecx-0x34f72c7c],al
  404e2a:	dec    edi
  404e2b:	mov    BYTE PTR [edi-0x2b],0xd2
  404e2f:	mov    esi,0x17785
  404e34:	mov    ch,0xb0
  404e36:	rcl    BYTE PTR [ecx-0x54],1
  404e39:	repnz ss gs pop ds
  404e3d:	in     eax,0xfd
  404e3f:	push   edi
  404e40:	push   ss
  404e41:	jae    0x404e56
  404e43:	outs   dx,DWORD PTR ds:[esi]
  404e44:	sbb    al,0x59
  404e46:	leave  
  404e47:	ss adc eax,0xf8015e8f
  404e4d:	mov    edi,0x5f98455
  404e52:	mov    esp,0x2143fbb3
  404e57:	jmp    0x1bcd:0xdd0661fa
  404e5e:	lods   al,BYTE PTR ds:[esi]
  404e5f:	nop
  404e60:	(bad)  
  404e61:	leave  
  404e62:	test   DWORD PTR [edi-0x2287832],esp
  404e68:	(bad)  
  404e69:	pop    ebp
  404e6a:	xor    cl,cl
  404e6c:	retf   0x4412
  404e6f:	dec    esp
  404e70:	retf   
  404e71:	shr    ch,1
  404e73:	jp     0x404e3e
  404e75:	mov    gs,WORD PTR [edi+0x22]
  404e78:	enter  0x9814,0x15
  404e7c:	adc    eax,DWORD PTR [edi]
  404e7e:	pop    ebx
  404e7f:	sub    BYTE PTR [edx],dl
  404e81:	mov    ebp,0x7b001fb4
  404e86:	es inc esi
  404e88:	add    DWORD PTR [eax],eax
  404e8a:	add    BYTE PTR [eax],al
  404e8c:	sub    edi,edi
  404e8e:	jo     0x404ea4
  404e90:	fdivrp st(2),st
  404e92:	repz or eax,0x7c31ca4
  404e98:	bound  edi,QWORD PTR [esi+0x66c1fe9a]
  404e9e:	lods   eax,DWORD PTR ds:[esi]
  404e9f:	sbb    DWORD PTR [ebp-0x7e],esp
  404ea2:	rcr    BYTE PTR [eax],0x1f
  404ea5:	lods   al,BYTE PTR ds:[esi]
  404ea6:	neg    DWORD PTR [edx]
  404ea8:	fldcw  WORD PTR [edi]
  404eaa:	scas   al,BYTE PTR es:[edi]
  404eab:	sbb    ecx,DWORD PTR [ebx-0x3aff6728]
  404eb1:	sbb    eax,0xdbc41c25
  404eb6:	dec    esi
  404eb7:	sub    esi,DWORD PTR [esi-0x588d0f67]
  404ebd:	push   edi
  404ebe:	fwait
  404ebf:	inc    ebp
  404ec0:	mov    WORD PTR [ebx+0x45bd78dc],es
  404ec6:	mov    dh,0x4f
  404ec8:	mov    edi,0xbe1607ff
  404ecd:	shl    DWORD PTR [edx+0x21],0xb3
  404ed1:	mov    BYTE PTR [esp+eiz*4-0x4e],dh
  404ed5:	dec    edx
  404ed6:	push   ds
  404ed7:	xchg   ebx,eax
  404ed8:	inc    eax
  404ed9:	xchg   esp,eax
  404eda:	lahf   
  404edb:	retf   0xc6a1
  404ede:	retf   0x7efd
  404ee1:	cmp    al,0x2e
  404ee3:	mov    al,0x6f
  404ee5:	out    dx,al
  404ee6:	inc    ebx
  404ee7:	xchg   DWORD PTR [ebp-0x50],ebp
  404eea:	stc    
  404eeb:	fmulp  st(4),st
  404eed:	jno    0x404e7f
  404eef:	jmp    0x61404ef4
  404ef4:	aaa    
  404ef5:	xchg   BYTE PTR [eax+eiz*2-0x7],ch
  404ef9:	jmp    0x404f56
  404efb:	jb     0x404eb8
  404efd:	push   ecx
  404efe:	add    dh,BYTE PTR [ebx+0x7d]
  404f01:	cmp    BYTE PTR ds:0x87f1fb8,dh
  404f07:	test   eax,0xab3f14dd
  404f0c:	mov    ds:0x61ba66aa,eax
  404f11:	rcl    DWORD PTR [ecx-0x49],0x28
  404f15:	xlat   BYTE PTR ds:[ebx]
  404f16:	aam    0xb6
  404f18:	out    0xbc,al
  404f1a:	jecxz  0x404ec0
  404f1c:	lods   al,BYTE PTR ds:[esi]
  404f1d:	add    bh,BYTE PTR [edx-0x729694cb]
  404f23:	and    bl,BYTE PTR [eax-0x35]
  404f26:	and    BYTE PTR [ebx],ah
  404f28:	xchg   esi,eax
  404f29:	mov    al,ds:0x36e8f317
  404f2e:	pop    ds
  404f2f:	cmp    eax,0x4a7574e8
  404f34:	fnstsw WORD PTR [ecx-0x81c409d]
  404f3a:	or     BYTE PTR [eax-0x7e48c217],ch
  404f40:	bnd jnp 0x404f20
  404f43:	dec    esi
  404f44:	arpl   WORD PTR [edi+0x16c7b9a],di
  404f4a:	lock inc esp
  404f4c:	bound  eax,QWORD PTR [ebx+0x4e]
  404f4f:	test   DWORD PTR [ecx-0x7b],ebp
  404f52:	and    al,0xb2
  404f54:	pop    esi
  404f55:	enter  0x32,0x0
  404f59:	add    BYTE PTR [edi],dh
  404f5b:	pop    esi
  404f5c:	or     bl,BYTE PTR [eax+0x0]
  404f5f:	pusha  
  404f60:	dec    esp
  404f61:	out    0x19,al
  404f63:	popa   
  404f64:	mov    cs,WORD PTR [esi+eax*1-0x3c976bae]
  404f6b:	pop    edx
  404f6c:	(bad)  
  404f6d:	add    esp,ecx
  404f6f:	push   esp
  404f70:	adc    BYTE PTR [ebp+ecx*1-0x529ada4],bh
  404f77:	jo     0x404f14
  404f79:	shr    BYTE PTR [edi+0x6f],0xdd
  404f7d:	test   eax,0x14176d78
  404f82:	adc    DWORD PTR [esi+0x59],ebp
  404f85:	jle    0x404fc5
  404f87:	inc    edi
  404f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f89:	cmp    DWORD PTR [ebx],ecx
  404f8b:	dec    eax
  404f8c:	in     al,0x52
  404f8e:	xor    al,0xd6
  404f90:	and    ebp,ebp
  404f92:	jne    0x404f69
  404f94:	pop    edi
  404f95:	xchg   DWORD PTR [edx-0x16],eax
  404f98:	lods   al,BYTE PTR ds:[esi]
  404f99:	xchg   ecx,eax
  404f9a:	(bad)  
  404f9b:	icebp  
  404f9c:	jmp    0x4945:0x28fbf0fa
  404fa3:	add    DWORD PTR [edi+0x2f],esp
  404fa6:	push   esi
  404fa7:	pop    es
  404fa8:	mov    bh,cl
  404faa:	stc    
  404fab:	xchg   BYTE PTR [ecx-0x74a59d6f],cl
  404fb1:	push   ebx
  404fb2:	mov    esp,0x8e158aa1
  404fb7:	mov    al,0x8f
  404fb9:	fadd   DWORD PTR [ecx+0x9a8633]
  404fbf:	add    BYTE PTR [eax],al
  404fc1:	call   0x84d5:0x145c8c1e
  404fc8:	push   ds
  404fc9:	test   BYTE PTR [ebx],0x56
  404fcc:	loop   0x404ff8
  404fce:	iret   
  404fcf:	dec    esi
  404fd0:	mov    al,ds:0x664501d3
  404fd5:	ins    DWORD PTR es:[edi],dx
  404fd6:	cmp    DWORD PTR [esp],edi
  404fd9:	jg     0x405003
  404fdb:	push   ecx
  404fdc:	jmp    0xa790fb73
  404fe1:	imul   esi,DWORD PTR [esi+0x7d256d42],0x43
  404fe8:	sub    eax,edi
  404fea:	push   ebx
  404feb:	and    al,0xf5
  404fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fee:	xchg   edi,eax
  404fef:	sbb    eax,0x17ca41b3
  404ff4:	jno    0x404fd5
  404ff6:	jo     0x405006
  404ff8:	das    
  404ff9:	in     eax,dx
  404ffa:	pop    edi
  404ffb:	add    edi,esi
  404ffd:	in     al,dx
  404ffe:	loop   0x405001
  405000:	mov    esp,0x79efedb9
  405005:	aaa    
  405006:	inc    ebp
  405007:	icebp  
  405008:	aaa    
  405009:	push   ebp
  40500a:	sbb    al,0xda
  40500c:	add    ecx,DWORD PTR [edx]
  40500e:	aas    
  40500f:	fcmovnb st,st(5)
  405011:	jo     0x405025
  405013:	fnstcw WORD PTR [edi-0x32]
  405016:	call   0xf7dc91f2
  40501b:	mov    esp,0xb47ab20a
  405020:	int3   
  405021:	enter  0x65,0xbe
  405025:	add    BYTE PTR [eax],al
  405027:	add    BYTE PTR [ebp+0x7b],dh
  40502a:	cli    
  40502b:	mov    bh,0x3b
  40502d:	xchg   edx,eax
  40502e:	int    0xc0
  405030:	clc    
  405031:	xor    esp,DWORD PTR [eax-0x3f]
  405034:	ficom  DWORD PTR ss:[esi-0x4d]
  405038:	fs jg  0x405049
  40503b:	mov    dl,0xaa
  40503d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40503e:	cmp    DWORD PTR [edi-0x6143641f],esp
  405044:	pop    ds
  405045:	jb     0x404fd2
  405047:	xchg   esp,eax
  405048:	jge    0x405031
  40504a:	ror    DWORD PTR [ebp+0x3ee53cc3],1
  405050:	iret   
  405051:	add    bl,al
  405053:	aaa    
  405054:	or     DWORD PTR [ecx],ebp
  405056:	out    dx,eax
  405057:	cmp    eax,0x34b6ae5b
  40505c:	lea    edx,[edi-0x7f]
  40505f:	sbb    esi,edx
  405061:	push   0x4
  405063:	sbb    BYTE PTR [eax],dl
  405065:	shl    DWORD PTR [ebx],0x1a
  405068:	xchg   edx,eax
  405069:	push   ss
  40506a:	push   0x1b
  40506c:	inc    esp
  40506d:	out    dx,eax
  40506e:	pop    esp
  40506f:	sub    al,0x1a
  405071:	xchg   ecx,eax
  405072:	adc    BYTE PTR ds:0x2f277adc,ah
  405078:	mov    ds,esp
  40507a:	jge    0x4050a2
  40507c:	dec    eax
  40507d:	ror    DWORD PTR [eax+0x2b],1
  405080:	add    edi,DWORD PTR [ecx]
  405082:	int3   
  405083:	sub    al,ch
  405085:	sar    dl,cl
  405087:	sub    BYTE PTR [edi-0x7c],ah
  40508a:	mov    ds:0x29,al
  40508f:	and    DWORD PTR [ecx+0x61aab295],ebp
  405095:	test   al,0xb3
  405097:	ins    BYTE PTR es:[edi],dx
  405098:	retf   
  405099:	lahf   
  40509a:	mov    eax,ds:0xa0c60d3e
  40509f:	clc    
  4050a0:	div    eax
  4050a2:	add    BYTE PTR [esi+0x46],al
  4050a5:	pop    es
  4050a6:	je     0x4050ef
  4050a8:	adc    BYTE PTR [ebp+0x43],ch
  4050ab:	xchg   ebp,eax
  4050ac:	retf   
  4050ad:	rcr    DWORD PTR [edx],cl
  4050af:	test   BYTE PTR ds:0x285b2db9,al
  4050b5:	xchg   esi,eax
  4050b6:	inc    eax
  4050b7:	pop    edx
  4050b8:	fdivp  st(3),st
  4050ba:	ja     0x405104
  4050bc:	pushf  
  4050bd:	inc    ecx
  4050be:	cs dec ecx
  4050c0:	bound  ebp,QWORD PTR [eax]
  4050c2:	sbb    DWORD PTR [ecx+esi*1],ebx
  4050c5:	ds pushf 
  4050c7:	sbb    eax,0x4fab53e7
  4050cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050cd:	jmp    0x80ab8fc4
  4050d2:	lds    esi,FWORD PTR [ebp+0x2f]
  4050d5:	xbegin 0xcfed49ef
  4050db:	push   es
  4050dc:	mov    bl,0x12
  4050de:	xchg   esi,eax
  4050df:	pop    ss
  4050e0:	ins    DWORD PTR es:[edi],dx
  4050e1:	jns    0x405084
  4050e3:	adc    dh,BYTE PTR [esi]
  4050e5:	outs   dx,DWORD PTR ds:[esi]
  4050e6:	and    al,0x13
  4050e8:	add    BYTE PTR ds:0xbab9c113,al
  4050ee:	dec    edx
  4050ef:	shl    BYTE PTR [ebx-0x2f],0x7d
  4050f3:	add    BYTE PTR [eax],al
  4050f5:	add    bh,ah
  4050f7:	xor    DWORD PTR ds:0x5f3bc630,0xe0fdd407
  405101:	pop    esi
  405102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405103:	(bad)  
  405104:	mov    ebp,DWORD PTR [ecx-0x40]
  405107:	mov    bl,BYTE PTR [ebp-0x8bb3e14]
  40510d:	fist   DWORD PTR [ebx-0x6d7db6fa]
  405113:	push   eax
  405114:	and    esi,DWORD PTR [ebp-0x779bf277]
  40511a:	mov    bl,cl
  40511c:	or     eax,0xf51df3bf
  405121:	scas   eax,DWORD PTR es:[edi]
  405122:	or     eax,0x22dab71f
  405127:	and    dh,BYTE PTR [edx-0x34]
  40512a:	lahf   
  40512b:	sub    dh,BYTE PTR [esi+eiz*4]
  40512e:	push   eax
  40512f:	and    esi,ebp
  405131:	pop    ss
  405132:	sub    DWORD PTR [eax],ebp
  405134:	mov    al,0x72
  405136:	out    dx,al
  405137:	mov    eax,ss:0xe33593d0
  40513d:	mov    ecx,0x41d4364
  405142:	mov    ch,0x44
  405144:	pop    edi
  405145:	outs   dx,BYTE PTR ds:[esi]
  405146:	mov    edx,0x3778aa37
  40514b:	inc    ecx
  40514c:	in     al,dx
  40514d:	adc    DWORD PTR [eax],edi
  40514f:	dec    ebx
  405150:	lods   al,BYTE PTR es:[esi]
  405152:	add    edx,edx
  405154:	addr16 (bad) 
  405156:	(bad)  
  405157:	adc    BYTE PTR [ecx+eax*4-0x5000000],0x87
  40515f:	shr    dl,cl
  405161:	fadd   QWORD PTR [ecx-0x7502aaf0]
  405167:	dec    esi
  405168:	aas    
  405169:	xor    bh,BYTE PTR [esi-0x65]
  40516c:	sub    DWORD PTR [edi+0x6042d97e],ebp
  405172:	jl     0x40518b
  405174:	std    
  405175:	cdq    
  405176:	jnp    0x4051cd
  405178:	xchg   edi,eax
  405179:	jle    0x4051ad
  40517b:	mov    edi,0xfd394373
  405180:	sbb    BYTE PTR [edi+ebp*1+0x43],dl
  405184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405185:	test   DWORD PTR [eax],edi
  405187:	or     ebp,0xdbc7cb6a
  40518d:	out    0xcc,eax
  40518f:	add    eax,0x4bcee8b1
  405194:	setno  ch
  405197:	mov    DWORD PTR [ebp-0x3a],esp
  40519a:	push   es
  40519b:	mov    ds:0xa31ed1ad,al
  4051a0:	out    dx,eax
  4051a1:	mov    ah,0x2f
  4051a3:	xchg   ecx,eax
  4051a4:	xor    ebp,edi
  4051a6:	pop    es
  4051a7:	nop
  4051a8:	jae    0x405209
  4051aa:	aad    0x84
  4051ac:	mov    dh,0x69
  4051ae:	pop    edx
  4051af:	jl     0x4051a9
  4051b1:	int3   
  4051b2:	mov    dh,BYTE PTR [esi+0x3a]
  4051b5:	inc    ebp
  4051b6:	mov    cl,0x6f
  4051b8:	jl     0x4051e1
  4051ba:	pushf  
  4051bb:	jmp    0x614744c3
  4051c0:	pop    eax
  4051c1:	add    BYTE PTR [eax],al
  4051c3:	add    BYTE PTR [esp+0x43],dl
  4051c7:	or     edi,DWORD PTR [ebx-0x73b1047e]
  4051cd:	popf   
  4051ce:	jbe    0x4051f2
  4051d0:	pop    esp
  4051d1:	ss mov dh,0xb5
  4051d4:	mov    ds:0x4428cbd9,eax
  4051d9:	stos   DWORD PTR es:[edi],eax
  4051da:	dec    esp
  4051db:	lods   eax,DWORD PTR ds:[esi]
  4051dc:	fisttp DWORD PTR [edi+0x2c]
  4051df:	push   eax
  4051e0:	retf   
  4051e1:	popf   
  4051e2:	fmul   QWORD PTR [ebx]
  4051e4:	cmp    al,0x81
  4051e6:	(bad)  
  4051e7:	push   esi
  4051e8:	xchg   ebx,eax
  4051e9:	and    esi,DWORD PTR [esi]
  4051eb:	add    esi,DWORD PTR [eax+ecx*1-0x4d]
  4051ef:	lods   eax,DWORD PTR ds:[esi]
  4051f0:	xor    al,0x4f
  4051f2:	cmp    ebp,DWORD PTR [edx]
  4051f4:	dec    ebx
  4051f5:	lods   al,BYTE PTR ds:[esi]
  4051f6:	dec    ecx
  4051f7:	mov    ch,0xdc
  4051f9:	fst    DWORD PTR [eax-0x46cafce0]
  4051ff:	cli    
  405200:	mov    ebp,0x35f116d
  405205:	xchg   ecx,eax
  405206:	adc    esi,esp
  405208:	gs rep stos BYTE PTR es:[edi],al
  40520b:	cmp    ebx,DWORD PTR [bx+si]
  40520e:	sbb    DWORD PTR es:[ebx],esi
  405211:	mov    edi,0x5c54bc86
  405216:	add    BYTE PTR [edx+eax*1-0x1],bh
  40521a:	inc    edx
  40521b:	sbb    al,0x35
  40521d:	push   ds
  40521e:	es jl  0x4051ae
  405221:	or     eax,0xf6000c70
  405226:	adc    al,0x16
  405228:	add    BYTE PTR [eax],al
  40522a:	add    BYTE PTR [ebx-0x79904ab],dl
  405230:	mov    ebp,0x9f2fe39e
  405235:	daa    
  405236:	mov    eax,DWORD PTR [ebx]
  405238:	jle    0x40527c
  40523a:	jns    0x4051e2
  40523c:	out    0xab,al
  40523e:	loope  0x40523a
  405240:	inc    ebp
  405241:	leave  
  405242:	dec    ecx
  405243:	ret    0x3e5c
  405246:	add    DWORD PTR [ebp-0x42],esi
  405249:	pop    ebx
  40524a:	jecxz  0x4051f7
  40524c:	and    al,0xb5
  40524e:	pop    ebx
  40524f:	aas    
  405250:	pop    es
  405251:	rcl    dh,1
  405253:	add    bh,cl
  405255:	push   0xc2d5456
  40525a:	ins    BYTE PTR es:[edi],dx
  40525b:	jmp    0x7ded34f6
  405260:	jne    0x4051e9
  405262:	int3   
  405263:	push   ss
  405264:	xchg   cl,dl
  405266:	cmp    al,0xaa
  405268:	lods   eax,DWORD PTR ds:[esi]
  405269:	mov    ah,0x26
  40526b:	outs   dx,DWORD PTR ds:[esi]
  40526c:	cmp    eax,0xe5a3d65a
  405271:	ds push ebx
  405273:	push   esp
  405274:	test   BYTE PTR [ebp-0x1ce9d765],0xa9
  40527b:	lea    ebp,[esi+0x4e21310d]
  405281:	push   0xa1954b19
  405286:	mov    cl,0xdf
  405288:	ins    DWORD PTR es:[edi],dx
  405289:	les    esi,FWORD PTR [ebx+0xb29dd52]
  40528f:	add    BYTE PTR [eax],al
  405291:	add    dh,al
  405293:	xor    eax,0x406d004f
  405298:	outs   dx,DWORD PTR ds:[esi]
  405299:	not    ch
  40529b:	jl     0x4052a5
  40529d:	xchg   ebx,eax
  40529e:	pop    es
  40529f:	dec    edx
  4052a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052a1:	jge    0x405242
  4052a3:	jne    0x405265
  4052a5:	sbb    bh,dh
  4052a7:	sbb    eax,edx
  4052a9:	dec    esi
  4052aa:	lahf   
  4052ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ac:	mov    dh,0x2b
  4052ae:	jge    0x4052c0
  4052b0:	sbb    ch,al
  4052b2:	cmc    
  4052b3:	lods   al,BYTE PTR ds:[esi]
  4052b4:	jle    0x405256
  4052b6:	jo     0x40532f
  4052b8:	inc    edi
  4052b9:	sbb    eax,ebx
  4052bb:	inc    ebx
  4052bc:	and    BYTE PTR [edx+ecx*8+0x74],bh
  4052c0:	(bad)  
  4052c1:	xchg   edx,eax
  4052c2:	jb     0x40528f
  4052c4:	out    0xf7,eax
  4052c6:	jno    0x405257
  4052c8:	push   edi
  4052c9:	cmp    eax,0x583f30b9
  4052ce:	stos   DWORD PTR es:[edi],eax
  4052cf:	xchg   edi,eax
  4052d0:	(bad)  
  4052d1:	mov    dh,0x53
  4052d3:	and    dh,bh
  4052d5:	rcl    DWORD PTR [esi+0x3e6aceee],cl
  4052db:	dec    ebp
  4052dc:	test   al,0xf
  4052de:	fdivr  st(7),st
  4052e0:	push   es
  4052e1:	loope  0x405277
  4052e3:	lds    esp,FWORD PTR [eax-0x7c]
  4052e6:	lods   al,BYTE PTR ds:[esi]
  4052e7:	sub    BYTE PTR [eax-0x2e],dh
  4052ea:	xor    al,0x97
  4052ec:	push   ss
  4052ed:	mov    bh,0x26
  4052ef:	sub    bh,BYTE PTR [eax-0x2170a1a7]
  4052f5:	cmp    al,0x0
  4052f7:	add    BYTE PTR [eax],al
  4052f9:	fcmovnb st,st(4)
  4052fb:	out    0x85,eax
  4052fd:	inc    ebx
  4052fe:	idiv   BYTE PTR [edi-0x20]
  405301:	mov    eax,ds:0x90e2f4d
  405306:	lock inc edi
  405308:	imul   esp,DWORD PTR [ecx],0x6
  40530b:	cpuid  
  40530d:	imul   esi,DWORD PTR [ebx],0x7ef3c768
  405313:	pop    es
  405314:	(bad)  
  405315:	or     dl,bh
  405317:	dec    ebx
  405318:	mov    al,ds:0x982259a7
  40531d:	mov    dh,BYTE PTR es:[esi+0x2a0483ff]
  405324:	push   eax
  405325:	popf   
  405326:	jae    0x4052d5
  405328:	aaa    
  405329:	clc    
  40532a:	xchg   ebx,eax
  40532b:	dec    esp
  40532c:	daa    
  40532d:	mov    esi,0xdb400873
  405332:	jns    0x405387
  405334:	out    dx,eax
  405335:	xor    eax,0x5087ff9a
  40533a:	pop    ds
  40533b:	scas   al,BYTE PTR es:[edi]
  40533c:	mov    al,0x9
  40533e:	pop    es
  40533f:	sub    edx,edi
  405341:	or     DWORD PTR fs:[esi+0x21308278],esi
  405348:	pop    ds
  405349:	fild   QWORD PTR [eax+0x20f0f6e9]
  40534f:	ins    DWORD PTR es:[edi],dx
  405350:	nop
  405351:	dec    ebp
  405352:	psrad  mm7,QWORD PTR [esi]
  405355:	imul   eax,esi,0x76
  405358:	pop    eax
  405359:	(bad)  
  40535a:	leave  
  40535b:	inc    esi
  40535c:	pusha  
  40535d:	add    BYTE PTR [eax],al
  40535f:	add    BYTE PTR [edi-0x66],al
  405362:	mov    eax,DWORD PTR [edi]
  405364:	loop   0x405319
  405366:	inc    eax
  405367:	test   al,0xbc
  405369:	inc    ebx
  40536a:	xchg   esp,eax
  40536b:	iret   
  40536c:	pop    ecx
  40536d:	and    esi,DWORD PTR [ebp-0x21]
  405370:	lahf   
  405371:	arpl   cx,sp
  405373:	mov    bh,0x7a
  405375:	dec    ecx
  405376:	outs   dx,BYTE PTR ds:[esi]
  405377:	pop    ss
  405378:	adc    al,0xca
  40537a:	jmp    0x938f44ee
  40537f:	dec    eax
  405380:	test   al,0xd6
  405382:	ds das 
  405384:	inc    ebp
  405385:	clc    
  405386:	mov    eax,DWORD PTR [eax-0x18b73edd]
  40538c:	mov    esi,0x6cd29206
  405391:	push   0x3a
  405393:	xchg   BYTE PTR [ecx*4-0xc2b26d8],ch
  40539a:	(bad)  
  40539b:	jge    0x405381
  40539d:	sbb    BYTE PTR ds:0x9dbfe430,cl
  4053a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053a4:	ret    
  4053a5:	pop    esp
  4053a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053a7:	aaa    
  4053a8:	sbb    al,0x46
  4053aa:	neg    DWORD PTR [edx+0x7d96e17b]
  4053b0:	jnp    0x4053c9
  4053b2:	neg    eax
  4053b4:	adc    eax,0xb385ecf4
  4053b9:	mov    cs,WORD PTR [ebp+0x869cdd2]
  4053bf:	fwait
  4053c0:	or     al,0xe3
  4053c2:	pop    edi
  4053c3:	aaa    
  4053c4:	add    BYTE PTR [eax],al
  4053c6:	add    BYTE PTR [ebx+0x48],ch
  4053c9:	bound  esp,QWORD PTR [esp+eax*8-0x5cd005a6]
  4053d0:	mov    ebp,0xce852b94
  4053d5:	xor    esp,DWORD PTR [edi+0x342e29a2]
  4053db:	cmp    eax,0xdaa08e57
  4053e0:	mov    bl,0xb
  4053e2:	int    0xd3
  4053e4:	sbb    ah,BYTE PTR [ebx-0x5effd277]
  4053ea:	(bad)  
  4053eb:	mov    esp,DWORD PTR [edx-0x7a9a7e07]
  4053f1:	adc    DWORD PTR [edi+0x3379b36d],ebx
  4053f7:	mov    bl,BYTE PTR [eax+0x6b]
  4053fa:	test   al,0x25
  4053fc:	sub    dl,BYTE PTR [ebx]
  4053fe:	sub    al,0xc2
  405400:	int3   
  405401:	lea    eax,[ecx-0x2b217a06]
  405407:	(bad)  
  405408:	mov    al,ds:0xc86ae400
  40540d:	or     BYTE PTR [ebp+eiz*1+0x64],dh
  405411:	ins    DWORD PTR es:[edi],dx
  405412:	fs mov bh,0xa7
  405415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405416:	in     al,0x74
  405418:	add    ecx,0x2edff9fe
  40541e:	ds pop esp
  405420:	cmp    DWORD PTR [edx-0x45],ecx
  405423:	push   ss
  405424:	adc    al,0xf3
  405426:	jae    0x4053c9
  405428:	not    DWORD PTR [ebp+0x51]
  40542e:	ds dec esp
  405430:	js     0x4053fb
  405432:	fwait
  405433:	scas   eax,DWORD PTR es:[edi]
  405434:	sbb    eax,0x4bc06b61
  405439:	test   eax,0xbb2e58c8
  40543e:	ins    DWORD PTR es:[edi],dx
  40543f:	or     al,al
  405441:	inc    ebx
  405442:	mov    al,0x20
  405444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405445:	mov    esi,0x2e1c296a
  40544a:	(bad)
  40544d:	adc    al,0x62
  40544f:	jno    0x4053e8
  405451:	(bad)  
  405452:	iret   
  405453:	xchg   esi,eax
  405454:	repnz xor al,0xee
  405457:	out    dx,eax
  405458:	add    al,0x94
  40545a:	mov    ecx,DWORD PTR [eax]
  40545c:	pusha  
  40545d:	mov    ss,WORD PTR [esi]
  40545f:	mov    eax,0x50812e8e
  405464:	jmp    0x405411
  405466:	test   eax,0x3c03527b
  40546b:	mov    al,ds:0x40f70137
  405470:	fstp   DWORD PTR [ecx+0x71bbe824]
  405476:	inc    ebx
  405477:	xlat   BYTE PTR ds:[ebx]
  405478:	jmp    0x8f712296
  40547d:	or     edi,DWORD PTR [ecx]
  40547f:	(bad)  
  405480:	popa   
  405481:	jae    0x405459
  405483:	push   0x385d0004
  405488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405489:	mov    ebp,0xd8c104e5
  40548e:	ja     0x4054c1
  405490:	outs   dx,BYTE PTR ds:[esi]
  405491:	add    BYTE PTR ss:[eax],al
  405494:	add    BYTE PTR [edi],bh
  405496:	lea    ecx,[eax]
  405498:	push   ebx
  405499:	div    eax
  40549b:	dec    ebp
  40549c:	call   0xfa9d:0xff29c7af
  4054a3:	test   DWORD PTR [ecx],edx
  4054a5:	adc    eax,0xc874e1be
  4054aa:	xchg   ebp,eax
  4054ab:	fmul   st,st(5)
  4054ad:	inc    eax
  4054ae:	sub    DWORD PTR [esi+0x109c62a8],edi
  4054b4:	inc    esi
  4054b5:	mov    ah,BYTE PTR [eax]
  4054b7:	jbe    0x4054dc
  4054b9:	xor    al,al
  4054bb:	data16 jne 0x405478
  4054be:	cld    
  4054bf:	add    BYTE PTR [eax],dl
  4054c1:	cwde   
  4054c2:	dec    ecx
  4054c3:	scas   al,BYTE PTR es:[edi]
  4054c4:	(bad)  
  4054c5:	push   eax
  4054c6:	cmc    
  4054c7:	enter  0xd9b,0x1f
  4054cb:	icebp  
  4054cc:	and    dh,BYTE PTR [ebp-0x58b86a65]
  4054d2:	cmp    DWORD PTR es:[ecx-0x33a26df1],ebp
  4054d9:	in     al,dx
  4054da:	inc    ebp
  4054db:	out    dx,al
  4054dc:	push   es
  4054dd:	xchg   esp,eax
  4054de:	jb     0x405469
  4054e0:	arpl   WORD PTR [esi-0x1172d9c1],ax
  4054e6:	jp     0x405529
  4054e8:	call   0x51b8fd60
  4054ed:	fist   DWORD PTR [ebx]
  4054ef:	push   ds
  4054f0:	xor    al,0xf9
  4054f2:	mov    al,ds:0x1d71dab0
  4054f7:	(bad)  
  4054f8:	mov    edi,0x69000000
  4054fd:	jp     0x4054c5
  4054ff:	jmp    0x8ce19485
  405504:	repz xchg esi,eax
  405506:	xchg   ebx,eax
  405507:	push   cs
  405508:	adc    DWORD PTR [edi+0x40],edi
  40550b:	imul   esi,esp,0xa5516b01
  405511:	and    ah,bh
  405513:	xor    eax,0x99722838
  405518:	push   ds
  405519:	mov    ch,bl
  40551b:	std    
  40551c:	mov    ds:0x6ab937b7,eax
  405521:	or     BYTE PTR [esi+ebx*8+0x7131223f],bl
  405528:	loope  0x4054db
  40552a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40552b:	push   ss
  40552c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40552d:	ss (bad) 
  40552f:	sub    eax,0x4979af35
  405534:	dec    eax
  405535:	popf   
  405536:	into   
  405537:	in     eax,0xae
  405539:	aam    0x82
  40553b:	adc    ebx,0x7d91a3bc
  405541:	inc    esp
  405542:	xor    dh,dh
  405544:	loopne 0x40552c
  405546:	pushf  
  405547:	pop    ecx
  405548:	imul   BYTE PTR [esi+0x318b3e38]
  40554e:	add    BYTE PTR [esi],0x12
  405551:	jb     0x405520
  405553:	pusha  
  405554:	aaa    
  405555:	pop    eax
  405556:	jp     0x405526
  405558:	mov    edi,edx
  40555a:	(bad)  
  40555b:	test   al,0xbc
  40555d:	inc    edi
  40555e:	push   cs
  40555f:	inc    ecx
  405560:	add    BYTE PTR [eax],al
  405562:	add    BYTE PTR [ebx],cl
  405564:	clc    
  405565:	ret    0x1e26
  405568:	repnz adc eax,0xb9618089
  40556e:	out    dx,al
  40556f:	(bad)
  405572:	aad    0x14
  405574:	jg     0x4055da
  405576:	mov    cl,0xe9
  405578:	or     al,0xf7
  40557a:	sbb    eax,0x795be48f
  40557f:	jb     0x405587
  405581:	cli    
  405582:	mov    edx,0x1692b01a
  405587:	in     eax,dx
  405588:	push   esp
  405589:	nop
  40558a:	rcl    DWORD PTR [edx+0x2a],0xe8
  40558e:	or     eax,0x5c64cd35
  405593:	xchg   BYTE PTR gs:0xffa17bf9,al
  40559a:	arpl   WORD PTR ds:0xa3ef5efc,bx
  4055a0:	sbb    BYTE PTR [edi+0x25],ch
  4055a3:	fstp   QWORD PTR [edi-0x21]
  4055a6:	test   eax,0x1ec5c4c2
  4055ab:	adc    eax,0x6ab274da
  4055b0:	cmp    eax,0x967207f0
  4055b5:	cmp    BYTE PTR [ebx+0x15],cl
  4055b8:	jno    0x405604
  4055ba:	add    BYTE PTR [edx-0x22ab2df5],ch
  4055c0:	call   0x3f0607ee
  4055c5:	loop   0x4055e5
  4055c7:	add    BYTE PTR [eax],al
  4055c9:	add    BYTE PTR [edx-0x2564027],bl
  4055cf:	ret    0x2538
  4055d2:	sub    BYTE PTR [ebp+0x269a54b5],0x35
  4055d9:	add    BYTE PTR [ebp+0x524b4f01],ch
  4055df:	fwait
  4055e0:	pop    DWORD PTR [edi]
  4055e2:	cmc    
  4055e3:	ja     0x4055ce
  4055e5:	add    esi,ebx
  4055e7:	push   es
  4055e8:	jmp    0xe94748f0
  4055ed:	add    esi,ebx
  4055ef:	push   es
  4055f0:	jmp    0xe94748f8
  4055f5:	add    esi,ebx
  4055f7:	push   es
  4055f8:	jmp    0x474900
  4055fd:	jmp    0xe9405cf2
  405602:	lock push es
  405604:	add    al,ch
  405606:	lock push es
  405608:	add    al,ch
  40560a:	lock push es
  40560c:	add    al,ch
  40560e:	lock push es
  405610:	add    al,ch
  405612:	lock push es
  405614:	add    bl,ch
  405616:	lock push es
  405618:	add    bl,ch
  40561a:	lock push es
  40561c:	add    bl,ch
  40561e:	lock push es
  405620:	add    bl,ch
  405622:	lock push es
  405624:	add    dl,ch
  405626:	lock push es
  405628:	add    dl,ch
  40562a:	lock push es
  40562c:	add    dl,ch
  40562e:	add    BYTE PTR [eax],al
  405630:	add    al,dh
  405632:	push   es
  405633:	add    dl,ch
  405635:	lock push es
  405637:	add    ch,ch
  405639:	lock push es
  40563b:	add    ch,ah
  40563d:	lock push es
  40563f:	add    ch,ch
  405641:	lock push es
  405643:	add    ch,ah
  405645:	lock push es
  405647:	add    ah,ch
  405649:	lock push es
  40564b:	add    ah,ah
  40564d:	lock push es
  40564f:	add    ah,ch
  405651:	lock push es
  405653:	add    ah,ah
  405655:	lock push es
  405657:	add    cl,ch
  405659:	lock push es
  40565b:	add    cl,bl
  40565d:	loope  0x405676
  40565f:	add    cl,ah
  405661:	out    dx,eax
  405662:	clts   
  405664:	jecxz  0x40565b
  405666:	adc    DWORD PTR [esi*8-0x10fdec0d],eax
  40566d:	icebp  
  40566e:	adc    eax,0x6f0e900
  405673:	add    cl,ch
  405675:	lock push es
  405677:	add    BYTE PTR [eax],al
  405679:	call   0x9:0x8a000009
  405680:	add    BYTE PTR [ebx-0x64fffff7],cl
  405686:	or     DWORD PTR [eax],eax
  405688:	add    BYTE PTR [eax-0x77fffff7],bl
  40568e:	or     DWORD PTR [eax],eax
  405690:	add    BYTE PTR [ecx+0x9],cl
  405696:	add    BYTE PTR [eax],al
  405698:	pop    ecx
  405699:	or     DWORD PTR [eax],eax
  40569b:	add    BYTE PTR [esi+0x9],dl
  40569e:	add    BYTE PTR [eax],al
  4056a0:	push   esi
  4056a1:	or     DWORD PTR [eax],eax
  4056a3:	add    BYTE PTR [edi+0x9],al
  4056a6:	add    BYTE PTR [eax],al
  4056a8:	push   edi
  4056a9:	or     DWORD PTR [eax],eax
  4056ab:	add    BYTE PTR [ecx+ecx*1+0x0],dl
  4056af:	add    BYTE PTR [ecx+ecx*1+0x0],dl
  4056b3:	add    BYTE PTR [ebp+0x9],al
  4056b6:	add    BYTE PTR [eax],al
  4056b8:	adc    eax,0x22000009
  4056bd:	or     DWORD PTR [eax],eax
  4056bf:	add    BYTE PTR [edx],ah
  4056c1:	or     DWORD PTR [eax],eax
  4056c3:	add    BYTE PTR [ebx],dl
  4056c5:	or     DWORD PTR [eax],eax
  4056c7:	add    BYTE PTR [ebx],dl
  4056c9:	or     DWORD PTR [eax],eax
  4056cb:	add    BYTE PTR [eax],al
  4056cd:	or     DWORD PTR [eax],eax
  4056cf:	add    BYTE PTR [eax],al
  4056d1:	or     DWORD PTR [eax],eax
  4056d3:	add    BYTE PTR [ecx],dl
  4056d5:	or     DWORD PTR [eax],eax
  4056d7:	add    cl,dl
  4056d9:	or     BYTE PTR [eax],al
  4056db:	add    dh,bl
  4056dd:	or     BYTE PTR [eax],al
  4056df:	add    dh,cl
  4056e1:	or     BYTE PTR [eax],al
  4056e3:	add    bh,cl
  4056e5:	or     BYTE PTR [eax],al
  4056e7:	add    BYTE PTR [edi-0x25fffff8],ch
  4056ed:	or     BYTE PTR [eax],al
  4056ef:	add    dl,cl
  4056f1:	or     BYTE PTR [eax],al
  4056f3:	add    bl,dh
  4056f5:	ins    DWORD PTR es:[edi],dx
  4056f6:	add    eax,DWORD PTR [eax]
  4056f8:	rep ins DWORD PTR es:[edi],dx
  4056fa:	add    eax,DWORD PTR [eax]
  4056fc:	add    BYTE PTR [eax],al
  4056fe:	add    bl,dh
  405700:	ins    DWORD PTR es:[edi],dx
  405701:	add    eax,DWORD PTR [eax]
  405703:	rep ins DWORD PTR es:[edi],dx
  405705:	add    eax,DWORD PTR [eax]
  405707:	rep ins DWORD PTR es:[edi],dx
  405709:	add    eax,DWORD PTR [eax]
  40570b:	rep ins DWORD PTR es:[edi],dx
  40570d:	add    eax,DWORD PTR [eax]
  40570f:	rep ins DWORD PTR es:[edi],dx
  405711:	add    eax,DWORD PTR [eax]
  405713:	rep ins DWORD PTR es:[edi],dx
  405715:	add    eax,DWORD PTR [eax]
  405717:	rep ins DWORD PTR es:[edi],dx
  405719:	add    eax,DWORD PTR [eax]
  40571b:	rep ins DWORD PTR es:[edi],dx
  40571d:	add    eax,DWORD PTR [eax]
  40571f:	rep ins DWORD PTR es:[edi],dx
  405721:	add    eax,DWORD PTR [eax]
  405723:	rep ins DWORD PTR es:[edi],dx
  405725:	add    eax,DWORD PTR [eax]
  405727:	rep ins DWORD PTR es:[edi],dx
  405729:	add    eax,DWORD PTR [eax]
  40572b:	rep ins DWORD PTR es:[edi],dx
  40572d:	add    eax,DWORD PTR [eax]
  40572f:	rep outs dx,DWORD PTR ds:[esi]
  405731:	add    eax,DWORD PTR [eax]
  405733:	repz jo 0x405739
  405736:	add    bl,dh
  405738:	je     0x40573d
  40573a:	add    bl,dh
  40573c:	ins    DWORD PTR es:[edi],dx
  40573d:	add    eax,DWORD PTR [eax]
  40573f:	repz jns 0x405745
  405742:	or     bl,dh
  405744:	icebp  
  405745:	add    ecx,DWORD PTR [eax]
  405747:	repz test eax,0x21f30803
  40574d:	add    al,0x8
  40574f:	repz sbb DWORD PTR [eax+ecx*1],eax
  405753:	repz xchg ecx,eax
  405755:	add    ecx,DWORD PTR [eax]
  405757:	repz leave 
  405759:	add    ecx,DWORD PTR [eax]
  40575b:	repz rol DWORD PTR [ebx],0x8
  40575f:	repz imul eax,DWORD PTR [ebx],0x8
  405766:	repz loope 0x40576b
  405769:	or     bl,dh
  40576b:	sbb    DWORD PTR [eax+ecx*1],eax
  40576e:	repz xchg ecx,eax
  405770:	add    ecx,DWORD PTR [eax]
  405772:	repz push es
  405774:	in     eax,0x3
  405776:	jmp    0x40577e
  405778:	pop    ebp
  405779:	add    ebp,ebx
  40577b:	push   es
  40577c:	adc    eax,0x8d06fb04
  405781:	add    edi,ebx
  405783:	push   es
  405784:	jmp    0x405789
  405786:	jmp    0x40578e
  405788:	imul   eax,DWORD PTR [ebx],0xffffffeb
  40578b:	push   es
  40578c:	sub    eax,DWORD PTR [ebx+edi*8]
  40578f:	push   es
  405790:	stos   DWORD PTR es:[edi],eax
  405791:	add    edi,ebx
  405793:	push   es
  405794:	or     eax,DWORD PTR [ebx+ebp*8]
  405797:	push   es
  405798:	mov    eax,DWORD PTR [ebx]
  40579a:	jmp    0x4057a2
  40579c:	retf   
  40579d:	add    edi,ebx
  40579f:	push   es
  4057a0:	dec    ebx
  4057a1:	add    edi,ebx
  4057a3:	push   es
  4057a4:	fild   DWORD PTR [ebx]
  4057a6:	jmp    0x4057ae
  4057a8:	pop    ebx
  4057a9:	add    ebp,ebx
  4057ab:	push   es
  4057ac:	fwait
  4057ad:	add    edi,ebx
  4057af:	push   es
  4057b0:	sbb    eax,DWORD PTR [ebx]
  4057b2:	sti    
  4057b3:	push   es
  4057b4:	fild   DWORD PTR [ebx]
  4057b6:	jmp    0x4057be
  4057b8:	pop    ebx
  4057b9:	add    ebp,ebx
  4057bb:	push   es
  4057bc:	fwait
  4057bd:	add    edi,ebx
  4057bf:	push   es
  4057c0:	sbb    eax,DWORD PTR [ebx]
  4057c2:	sti    
  4057c3:	push   es
  4057c4:	repz add ebp,ebx
  4057c7:	push   es
  4057c8:	jae    0x4057cd
  4057ca:	add    BYTE PTR [eax],al
  4057cc:	add    bl,ch
  4057ce:	push   es
  4057cf:	mov    ds:0x2306fb03,eax
  4057d4:	add    edi,ebx
  4057d6:	push   es
  4057d7:	adc    eax,DWORD PTR [ebx+ebp*8]
  4057da:	push   es
  4057db:	xchg   ebx,eax
  4057dc:	add    al,0xeb
  4057de:	push   es
  4057df:	inc    ebx
  4057e0:	add    al,0xfb
  4057e2:	push   es
  4057e3:	ret    
  4057e4:	add    al,0xfb
  4057e6:	push   es
  4057e7:	jecxz  0x4057ec
  4057e9:	jmp    0x4057f1
  4057eb:	arpl   WORD PTR [ebx+ebp*8],ax
  4057ee:	push   es
  4057ef:	add    BYTE PTR [ebx],dl
  4057f1:	test   DWORD PTR [esi],0xeef9300
  4057f7:	add    bl,ah
  4057f9:	lock push cs
  4057fb:	add    BYTE PTR [ebx-0x11],ah
  4057fe:	push   cs
  4057ff:	add    BYTE PTR [ebx],dl
  405801:	test   DWORD PTR [esi],0xeef9300
  405807:	add    bh,ch
  405809:	lock push cs
  40580b:	add    BYTE PTR [edi-0x11],ah
  40580e:	push   cs
  40580f:	add    BYTE PTR [edi],ch
  405811:	test   DWORD PTR [esi],0xeefa700
  405817:	add    BYTE PTR [edi],cl
  405819:	test   DWORD PTR [esi],0xeef8700
  40581f:	add    bh,cl
  405821:	lock push cs
  405823:	add    BYTE PTR [edi-0x11],al
  405826:	push   cs
  405827:	add    bh,bl
  405829:	lock push cs
  40582b:	add    BYTE PTR [edi-0x11],dl
  40582e:	push   cs
  40582f:	add    BYTE PTR [edi-0x10000000],bl
  405835:	push   cs
  405836:	add    BYTE PTR [edi],dl
  405838:	out    dx,eax
  405839:	push   cs
  40583a:	add    bh,bl
  40583c:	lock push cs
  40583e:	add    BYTE PTR [edi-0x11],dl
  405841:	push   cs
  405842:	add    BYTE PTR [edi+0x17000ef0],bl
  405848:	out    dx,eax
  405849:	push   cs
  40584a:	add    bh,dh
  40584c:	lock push cs
  40584e:	add    BYTE PTR [edi-0x11],ch
  405851:	push   cs
  405852:	add    BYTE PTR [edi+0x1f000ef0],ah
  405858:	out    dx,eax
  405859:	push   cs
  40585a:	add    BYTE PTR [edi],dl
  40585c:	test   DWORD PTR [esi],0xef08f00
  405862:	add    BYTE PTR [edi-0x9],al
  405865:	push   cs
  405866:	add    BYTE PTR [edi+0xef0],bh
  40586c:	aam    0x5
  40586e:	or     BYTE PTR [eax],al
  405870:	xor    al,0x6
  405872:	or     BYTE PTR [eax],al
  405874:	in     al,0xa
  405876:	or     BYTE PTR [eax],al
  405878:	je     0x40587f
  40587a:	or     BYTE PTR [eax],al
  40587c:	aam    0x5
  40587e:	or     BYTE PTR [eax],al
  405880:	adc    al,0x6
  405882:	or     BYTE PTR [eax],al
  405884:	add    al,0xb
  405886:	or     BYTE PTR [eax],al
  405888:	je     0x40588f
  40588a:	or     BYTE PTR [eax],al
  40588c:	mov    eax,DWORD PTR ds:0x60b0008
  405892:	or     BYTE PTR [eax],al
  405894:	fisttp DWORD PTR [edx]
  405896:	or     BYTE PTR [eax],al
  405898:	add    BYTE PTR [eax],al
  40589a:	add    BYTE PTR [ebx+0x5],bl
  40589d:	or     BYTE PTR [eax],al
  40589f:	jmp    0x4058ab
  4058a1:	or     BYTE PTR [eax],al
  4058a3:	imul   eax,DWORD PTR ds:0x53b0008,0x8
  4058aa:	add    BYTE PTR [ebx+0x3b000805],bh
  4058b0:	add    eax,0x5bb0008
  4058b5:	or     BYTE PTR [eax],al
  4058b7:	imul   eax,DWORD PTR ds:0x5eb0008,0x8
  4058be:	add    BYTE PTR [ebx],bl
  4058c0:	add    eax,0x59b0008
  4058c5:	or     BYTE PTR [eax],al
  4058c7:	mov    eax,DWORD PTR ds:0x60b0008
  4058cd:	or     BYTE PTR [eax],al
  4058cf:	and    eax,DWORD PTR ds:0x5a30008
  4058d5:	or     BYTE PTR [eax],al
  4058d7:	push   ebx
  4058d8:	add    eax,0x5d30008
  4058dd:	or     BYTE PTR [eax],al
  4058df:	jecxz  0x4058eb
  4058e1:	or     BYTE PTR [eax],al
  4058e3:	arpl   WORD PTR [edx],cx
  4058e5:	or     BYTE PTR [eax],al
  4058e7:	xrelease mov BYTE PTR [ebx],0x8
  4058eb:	repz inc esi
  4058ed:	add    al,0x8
  4058ef:	repz add cx,WORD PTR [eax]
  4058f3:	repz out 0x3,al
  4058f6:	or     bl,dh
  4058f8:	push   ss
  4058f9:	add    al,0x8
  4058fb:	repz xchg esi,eax
  4058fd:	add    al,0x8
  4058ff:	add    BYTE PTR [eax],al
  405901:	add    bl,dh
  405903:	add    cx,WORD PTR [eax]
  405906:	repz out 0x3,al
  405909:	or     bl,dh
  40590b:	push   ss
  40590c:	add    al,0x8
  40590e:	repz xchg esi,eax
  405910:	add    al,0x8
  405912:	repz jb 0x405918
  405915:	or     bl,dh
  405917:	jmp    0x804:0x32f30803
  40591e:	rep stos BYTE PTR es:[edi],al
  405920:	add    al,0x8
  405922:	repz adc al,BYTE PTR [eax+ecx*1]
  405926:	repz mov al,BYTE PTR [eax+ecx*1]
  40592a:	repz push edx
  40592c:	add    ecx,DWORD PTR [eax]
  40592e:	repz retf 0x803
  405932:	repz bound eax,QWORD PTR [ebx]
  405935:	or     bl,dh
  405937:	fiadd  DWORD PTR [ebx]
  405939:	or     bl,dh
  40593b:	mov    ds:0x1af30803,al
  405940:	add    al,0x8
  405942:	repz bound eax,QWORD PTR [ebx]
  405945:	or     bl,dh
  405947:	fiadd  DWORD PTR [ebx]
  405949:	or     bl,dh
  40594b:	mov    ds:0x1af30803,al
  405950:	add    al,0x8
  405952:	repz jp 0x405958
  405955:	or     bl,dh
  405957:	repnz add ecx,DWORD PTR [eax]
  40595a:	rep stos BYTE PTR es:[edi],al
  40595c:	add    ecx,DWORD PTR [eax]
  40595e:	repz and al,BYTE PTR [eax+ecx*1]
  405962:	repz push es
  405964:	adc    al,0x4
  405966:	add    BYTE PTR [eax],al
  405968:	add    bl,ch
  40596a:	push   es
  40596b:	mov    WORD PTR [ebx],es
  40596d:	sti    
  40596e:	push   es
  40596f:	inc    esp
  405970:	add    al,0xfb
  405972:	push   es
  405973:	mov    esp,0xe406eb03
  405978:	add    ebp,ebx
  40597a:	push   es
  40597b:	pop    esp
  40597c:	add    edi,ebx
  40597e:	push   es
  40597f:	adc    al,0x4
  405981:	sti    
  405982:	push   es
  405983:	mov    WORD PTR [ebx],es
  405985:	jmp    0x40598d
  405987:	in     al,0x3
  405989:	jmp    0x405991
  40598b:	pop    esp
  40598c:	add    edi,ebx
  40598e:	push   es
  40598f:	adc    al,0x4
  405991:	sti    
  405992:	push   es
  405993:	mov    WORD PTR [ebx],es
  405995:	jmp    0x40599d
  405997:	fiadd  DWORD PTR [ebx]
  405999:	jmp    0x5a06:0xfa04da06
  4059a0:	add    edi,edx
  4059a2:	push   es
  4059a3:	pop    edx
  4059a4:	add    al,0xea
  4059a6:	push   es
  4059a7:	mov    edx,0xba06ea03
  4059ac:	add    al,0xfa
  4059ae:	push   es
  4059af:	cmp    al,BYTE PTR [ebx]
  4059b1:	cli    
  4059b2:	push   es
  4059b3:	cmp    al,BYTE PTR [edx+ebp*8]
  4059b6:	push   es
  4059b7:	cli    
  4059b8:	add    ebp,edx
  4059ba:	push   es
  4059bb:	cli    
  4059bc:	add    al,0xfa
  4059be:	push   es
  4059bf:	jp     0x4059c4
  4059c1:	cli    
  4059c2:	push   es
  4059c3:	jp     0x4059c9
  4059c5:	jmp    0x9a06:0xea039a06
  4059cc:	add    al,0x0
  4059ce:	add    BYTE PTR [eax],al
  4059d0:	cli    
  4059d1:	push   es
  4059d2:	sbb    al,BYTE PTR [ebx]
  4059d4:	cli    
  4059d5:	push   es
  4059d6:	sbb    al,BYTE PTR [edx+ebp*8]
  4059d9:	push   es
  4059da:	repnz add ebp,edx
  4059dd:	push   es
  4059de:	repnz add al,0xfa
  4059e1:	push   es
  4059e2:	add    BYTE PTR [edx-0x10],ah
  4059e5:	or     eax,0xdf76200
  4059ea:	add    BYTE PTR [edx],dh
  4059ec:	out    dx,eax
  4059ed:	or     eax,0xff03200
  4059f2:	add    BYTE PTR [edx-0x5dfff011],ah
  4059f8:	lock lldt WORD PTR [edx]
  4059fc:	out    dx,eax
  4059fd:	lldt   WORD PTR [edx]
  405a00:	lock sldt WORD PTR [edx-0x7dfff011]
  405a08:	lock lldt WORD PTR [edx]
  405a0c:	out    dx,eax
  405a0d:	lldt   WORD PTR [edx]
  405a10:	lock sldt WORD PTR [edx-0x7dfff011]
  405a18:	lock verr dx
  405a1c:	lock verr dx
  405a20:	icebp  
  405a21:	lldt   WORD PTR [edx-0x11]
  405a25:	lldt   WORD PTR [edx-0x10]
  405a29:	sldt   edx
  405a2c:	lock sldt edx
  405a30:	icebp  
  405a31:	(bad)  
  405a33:	xor    al,BYTE PTR [eax]
  405a35:	add    BYTE PTR [eax],al
  405a37:	out    dx,eax
  405a38:	(bad)  
  405a3a:	xor    dh,al
  405a3c:	sldt   WORD PTR [edx]
  405a3f:	out    dx,eax
  405a40:	sldt   WORD PTR [edx]
  405a43:	lock (bad) 
  405a46:	jb     0x405a37
  405a48:	(bad)  
  405a4a:	jb     0x405a3c
  405a4c:	verr   WORD PTR [edx-0x5dfff010]
  405a53:	icebp  
  405a54:	lldt   WORD PTR [edx]
  405a57:	out    dx,eax
  405a58:	lldt   WORD PTR [edx]
  405a5b:	lock sldt WORD PTR [eax]
  405a5f:	add    eax,0x1500090a
  405a64:	or     DWORD PTR [ecx],ecx
  405a66:	add    BYTE PTR [ebp-0x6afff6fe],dl
  405a6c:	or     DWORD PTR [ecx],ecx
  405a6e:	add    ch,al
  405a70:	add    cl,BYTE PTR [ecx]
  405a72:	add    BYTE PTR ds:0x9500090a,dl
  405a78:	or     DWORD PTR [ecx],ecx
  405a7a:	add    BYTE PTR [ebp-0x1afff6f8],dl
  405a80:	add    cl,BYTE PTR [ecx]
  405a82:	add    ch,dh
  405a84:	or     DWORD PTR [ecx],ecx
  405a86:	add    BYTE PTR [ebp+0x9],dh
  405a89:	or     DWORD PTR [eax],eax
  405a8b:	jne    0x405a95
  405a8d:	or     DWORD PTR [eax],eax
  405a8f:	in     eax,0x2
  405a91:	or     DWORD PTR [eax],eax
  405a93:	cmc    
  405a94:	or     DWORD PTR [ecx],ecx
  405a96:	add    BYTE PTR [ebp+0x9],dh
  405a99:	or     DWORD PTR [eax],eax
  405a9b:	add    BYTE PTR [eax],al
  405a9d:	add    BYTE PTR [ebp+0x8],dh
  405aa0:	or     DWORD PTR [eax],eax
  405aa2:	mov    ch,0x9
  405aa4:	or     DWORD PTR [eax],eax
  405aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aa7:	or     BYTE PTR [ecx],cl
  405aa9:	add    BYTE PTR ds:0x2500090a,ah
  405aaf:	or     DWORD PTR [ecx],ecx
  405ab1:	add    BYTE PTR ds:0xa5000909,dh
  405ab7:	or     BYTE PTR [ecx],cl
  405ab9:	add    BYTE PTR ds:0x2500090a,ah
  405abf:	or     DWORD PTR [ecx],ecx
  405ac1:	add    BYTE PTR [ebp+0x9],dl
  405ac4:	or     DWORD PTR [eax],eax
  405ac6:	inc    ebp
  405ac7:	or     BYTE PTR [ecx],cl
  405ac9:	add    ch,al
  405acb:	or     DWORD PTR [ecx],ecx
  405acd:	add    ch,al
  405acf:	or     BYTE PTR [ecx],cl
  405ad1:	add    BYTE PTR [ebp+0x9],dl
  405ad4:	or     DWORD PTR [eax],eax
  405ad6:	test   DWORD PTR [eax],ecx
  405ad8:	or     DWORD PTR [eax],eax
  405ada:	repz sbb al,0x3
  405add:	or     ebx,esi
  405adf:	adc    al,0x2
  405ae1:	or     ebx,esi
  405ae3:	je     0x405ae8
  405ae5:	or     ebx,esi
  405ae7:	ins    BYTE PTR es:[edi],dx
  405ae8:	add    cl,BYTE PTR [ecx]
  405aea:	repz in al,0x2
  405aed:	or     ebx,esi
  405aef:	fadd   QWORD PTR [ecx]
  405af1:	or     ebx,esi
  405af3:	xor    al,0x4
  405af5:	or     ebx,esi
  405af7:	sub    al,0x5
  405af9:	or     ebx,esi
  405afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405afc:	add    al,0x9
  405afe:	repz pushf 
  405b00:	add    eax,0x9
  405b05:	repz adc al,0x4
  405b08:	or     ebx,esi
  405b0a:	or     al,0x5
  405b0c:	or     ebx,esi
  405b0e:	test   BYTE PTR [ecx+ecx*1],al
  405b11:	repz cld 
  405b13:	add    al,0x9
  405b15:	repz adc al,0x4
  405b18:	or     ebx,esi
  405b1a:	or     al,0x5
  405b1c:	or     ebx,esi
  405b1e:	test   BYTE PTR [ecx+ecx*1],al
  405b21:	repz cld 
  405b23:	add    al,0x9
  405b25:	repz add ecx,DWORD PTR fs:[ecx]
  405b29:	repz pop esp
  405b2b:	add    al,0x9
  405b2d:	repz aam 0x3
  405b30:	or     ebx,esi
  405b32:	int3   
  405b33:	add    al,0x9
  405b35:	repz inc esp
  405b37:	add    ecx,DWORD PTR [ecx]
  405b39:	repz mov esp,0x34f30904
  405b3f:	add    al,0x9
  405b41:	repz sub al,0x5
  405b44:	or     ebx,esi
  405b46:	add    al,0x4
  405b48:	or     ebx,esi
  405b4a:	jl     0x405b50
  405b4c:	or     ebx,esi
  405b4e:	hlt    
  405b4f:	add    ecx,DWORD PTR [ecx]
  405b51:	repz in al,dx
  405b53:	add    al,0x9
  405b55:	repz push es
  405b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b58:	add    edi,edx
  405b5a:	push   es
  405b5b:	sahf   
  405b5c:	add    al,0xfa
  405b5e:	push   es
  405b5f:	push   ss
  405b60:	add    al,0xea
  405b62:	push   es
  405b63:	push   cs
  405b64:	add    eax,0x3e906ea
  405b69:	add    BYTE PTR [eax],al
  405b6b:	add    ah,dh
  405b6d:	push   es
  405b6e:	test   eax,0xc906ec03
  405b73:	add    esi,esp
  405b75:	push   es
  405b76:	mov    DWORD PTR [ebx],eax
  405b78:	in     al,dx
  405b79:	push   es
  405b7a:	stc    
  405b7b:	add    esi,esp
  405b7d:	push   es
  405b7e:	cmp    DWORD PTR [esp+ebp*8],eax
  405b81:	push   es
  405b82:	sbb    DWORD PTR [esp+esi*8],eax
  405b85:	push   es
  405b86:	pop    ecx
  405b87:	add    al,0xec
  405b89:	push   es
  405b8a:	icebp  
  405b8b:	add    esi,esp
  405b8d:	push   es
  405b8e:	xor    DWORD PTR [esp+ebp*8],eax
  405b91:	push   es
  405b92:	add    DWORD PTR [esp+esi*8],eax
  405b95:	push   es
  405b96:	inc    ecx
  405b97:	add    al,0xec
  405b99:	push   es
  405b9a:	add    DWORD PTR [esp+esi*8],eax
  405b9d:	push   es
  405b9e:	inc    ecx
  405b9f:	add    al,0xec
  405ba1:	push   es
  405ba2:	rol    DWORD PTR [ebx],1
  405ba4:	hlt    
  405ba5:	push   es
  405ba6:	adc    DWORD PTR [esp+ebp*8],eax
  405ba9:	push   es
  405baa:	in     eax,dx
  405bab:	add    esi,esp
  405bad:	push   es
  405bae:	and    eax,0xcd06ec04
  405bb3:	add    esi,esp
  405bb5:	push   es
  405bb6:	add    eax,0xfd06ec04
  405bbb:	add    esi,esp
  405bbd:	push   es
  405bbe:	mov    ch,0x3
  405bc0:	in     al,dx
  405bc1:	push   es
  405bc2:	sbb    eax,0xd506f404
  405bc7:	add    ebp,esp
  405bc9:	push   es
  405bca:	jmp    0x3:0x6a06fb03
  405bd1:	add    BYTE PTR [eax],al
  405bd3:	sti    
  405bd4:	push   es
  405bd5:	add    BYTE PTR [edx+0x2a000ef0],ch
  405bdb:	lock push cs
  405bdd:	add    dl,cl
  405bdf:	lock push cs
  405be1:	add    BYTE PTR [edx-0x10],cl
  405be4:	push   cs
  405be5:	add    BYTE PTR [edx+0xa000ef0],cl
  405beb:	lock push cs
  405bed:	add    cl,ch
  405bef:	lock add DWORD PTR [eax],eax
  405bf2:	f2xm1  
  405bf4:	add    DWORD PTR [eax],eax
  405bf6:	loope  0x405be8
  405bf8:	add    DWORD PTR [eax],eax
  405bfa:	shl    eax,1
  405bfc:	add    DWORD PTR [eax],eax
  405bfe:	in     eax,dx
  405bff:	lock add eax,DWORD PTR [eax]
  405c02:	cmc    
  405c03:	lock add eax,DWORD PTR [eax]
  405c06:	in     eax,0xf0
  405c08:	add    eax,DWORD PTR [eax]
  405c0a:	in     eax,dx
  405c0b:	lock add eax,DWORD PTR [eax]
  405c0e:	jmp    0x405c00
  405c10:	add    eax,DWORD PTR [eax]
  405c12:	fcomi  st,st(0)
  405c14:	add    eax,DWORD PTR [eax]
  405c16:	jecxz  0x405c08
  405c18:	add    eax,DWORD PTR [eax]
  405c1a:	shl    eax,cl
  405c1c:	add    eax,DWORD PTR [eax]
  405c1e:	out    dx,eax
  405c1f:	lock add eax,DWORD PTR [eax]
  405c22:	div    eax
  405c24:	add    eax,DWORD PTR [eax]
  405c26:	out    0xf0,eax
  405c28:	add    eax,DWORD PTR [eax]
  405c2a:	out    dx,eax
  405c2b:	lock add eax,DWORD PTR [eax]
  405c2e:	call   0xd8406023
  405c33:	lock add eax,DWORD PTR [eax]
  405c36:	loopne 0x405c38
  405c38:	add    BYTE PTR [eax],al
  405c3a:	lock add eax,DWORD PTR [eax]
  405c3d:	shl    al,1
  405c3f:	add    eax,DWORD PTR [eax]
  405c41:	in     al,dx
  405c42:	lock add eax,DWORD PTR [eax]
  405c45:	hlt    
  405c46:	lock add eax,DWORD PTR [eax]
  405c49:	in     al,0xf0
  405c4b:	add    eax,DWORD PTR [eax]
  405c4d:	in     al,dx
  405c4e:	lock add eax,DWORD PTR [eax]
  405c51:	add    BYTE PTR [ecx+0x6],bl
  405c54:	add    eax,0x5062900
  405c59:	add    BYTE PTR [ecx+0x6],dl
  405c5c:	add    eax,0x5062100
  405c61:	add    BYTE PTR ds:0x1d000506,bl
  405c67:	push   es
  405c68:	add    eax,0x2050a00
  405c6d:	add    ecx,DWORD PTR [esi]
  405c6f:	add    al,BYTE PTR ds:0x6101c05
  405c75:	push   es
  405c76:	or     eax,0x1207070f
  405c7b:	push   cs
  405c7c:	or     BYTE PTR [eax],cl
  405c7e:	adc    cl,BYTE PTR [esi]
  405c80:	or     BYTE PTR [eax],cl
  405c82:	jecxz  0x405c90
  405c84:	or     DWORD PTR [ecx],ecx
  405c86:	jecxz  0x405c94
  405c88:	or     DWORD PTR [ecx],ecx
  405c8a:	ror    BYTE PTR [ebx],1
  405c8c:	or     cl,BYTE PTR [edx]
  405c8e:	ror    BYTE PTR [ebx],1
  405c90:	or     cl,BYTE PTR [edx]
  405c92:	ror    BYTE PTR [ebx],0xa
  405c95:	or     al,al
  405c97:	or     ecx,DWORD PTR [edx]
  405c99:	or     dl,cl
  405c9b:	or     cl,BYTE PTR [ebx]
  405c9d:	or     eax,DWORD PTR [eax]
  405c9f:	add    BYTE PTR [eax],al
  405ca1:	ror    DWORD PTR [edx],1
  405ca3:	or     ecx,DWORD PTR [ebx]
  405ca5:	mov    eax,ds:0xa10b0b0a
  405caa:	or     cl,BYTE PTR [ebx]
  405cac:	or     edx,DWORD PTR [esi-0x49f3f3f7]
  405cb2:	or     DWORD PTR [esp+ecx*1],ecx
  405cb5:	xchg   BYTE PTR [ecx],cl
  405cb7:	or     al,0xc
  405cb9:	xchg   esi,eax
  405cba:	or     DWORD PTR [esp+ecx*1],ecx
  405cbd:	xchg   esi,eax
  405cbe:	or     DWORD PTR [esp+ecx*1],ecx
  405cc1:	xchg   esi,eax
  405cc2:	or     DWORD PTR [esp+ecx*1],ecx
  405cc5:	or     WORD PTR [esp+ecx*1],cx
  405cc9:	push   esi
  405cca:	or     DWORD PTR [esp+ecx*1],ecx
  405ccd:	repz bound ecx,QWORD PTR [esi]
  405cd0:	or     eax,0xd0e5ae6
  405cd5:	(bad)  
  405cd6:	jb     0x405ce6
  405cd8:	or     eax,0xd0e6af6
  405cdd:	out    dx,al
  405cde:	bound  ecx,QWORD PTR [esi]
  405ce0:	or     eax,0xd0e5ae6
  405ce5:	(bad)  
  405ce6:	jb     0x405cf6
  405ce8:	or     eax,0xd0e6af6
  405ced:	out    dx,al
  405cee:	popa   
  405cef:	adc    DWORD PTR [esi],ecx
  405cf1:	in     eax,0x59
  405cf3:	adc    DWORD PTR [esi],ecx
  405cf5:	std    
  405cf6:	jno    0x405d09
  405cf8:	push   cs
  405cf9:	cmc    
  405cfa:	imul   edx,DWORD PTR [ecx],0x1161ed0e
  405d00:	push   cs
  405d01:	in     eax,0x59
  405d03:	adc    DWORD PTR [esi],ecx
  405d05:	add    BYTE PTR [eax],al
  405d07:	add    ch,bh
  405d09:	outs   dx,DWORD PTR ds:[esi]
  405d0a:	or     eax,0xd67f50e
  405d0f:	push   cs
  405d10:	in     eax,dx
  405d11:	pop    edi
  405d12:	or     eax,0xd57e50e
  405d17:	push   cs
  405d18:	std    
  405d19:	outs   dx,DWORD PTR ds:[esi]
  405d1a:	or     eax,0xd67f50e
  405d1f:	push   cs
  405d20:	in     eax,dx
  405d21:	pop    edi
  405d22:	or     eax,0xd57e50e
  405d27:	push   cs
  405d28:	std    
  405d29:	outs   dx,DWORD PTR ds:[esi]
  405d2a:	or     eax,0xd67f50e
  405d2f:	push   cs
  405d30:	in     eax,dx
  405d31:	pusha  
  405d32:	push   cs
  405d33:	pmulhuw mm3,QWORD PTR [eax+0xe]
  405d37:	paddb  mm6,QWORD PTR [eax+0xe]
  405d3b:	pmuludq mm5,QWORD PTR [eax+0xe]
  405d3f:	paddsb mm4,QWORD PTR [eax+0xe]
  405d43:	pmulhuw mm3,QWORD PTR [eax+0xe]
  405d47:	paddb  mm0,QWORD PTR [esi]
  405d4a:	test   BYTE PTR [esi],0xf4
  405d4d:	pop    es
  405d4e:	out    dx,al
  405d4f:	push   cs
  405d50:	in     al,dx
  405d51:	pop    es
  405d52:	out    0xe,al
  405d54:	in     al,0x7
  405d56:	fimul  WORD PTR [esi]
  405d58:	cld    
  405d59:	pop    es
  405d5a:	test   BYTE PTR [esi],0xf4
  405d5d:	pop    es
  405d5e:	out    dx,al
  405d5f:	push   cs
  405d60:	in     al,dx
  405d61:	pop    es
  405d62:	out    0xe,al
  405d64:	in     al,0x7
  405d66:	fimul  WORD PTR [esi]
  405d68:	cld    
  405d69:	pop    es
  405d6a:	test   BYTE PTR [esi],0x0
  405d6d:	add    BYTE PTR [eax],al
  405d6f:	hlt    
  405d70:	pop    es
  405d71:	out    dx,al
  405d72:	push   cs
  405d73:	in     al,dx
  405d74:	pop    es
  405d75:	jmp    0xfb56607d
  405d7a:	adc    eax,esp
  405d7c:	adc    ebx,ebp
  405d7e:	pop    ss
  405d7f:	fist   WORD PTR [edx]
  405d81:	aam    0x18
  405d83:	out    0x11,al
  405d85:	fist   WORD PTR ds:0x15d710dd
  405d8b:	add    eax,0xfc16fe11
  405d90:	psadbw mm2,QWORD PTR [esi]
  405d93:	add    al,0x10
  405d95:	icebp  
  405d96:	sbb    edi,ebx
  405d98:	push   ds
  405d99:	icebp  
  405d9a:	sbb    ebp,ebx
  405d9c:	push   ds
  405d9d:	loope  0x405dba
  405d9f:	jmp    0x405dbf
  405da1:	loope  0x405dbe
  405da3:	fistp  DWORD PTR [esi]
  405da5:	rcr    BYTE PTR [edx+ebx*8],1
  405da8:	sbb    eax,0x1e0a1cd0
  405dad:	add    BYTE PTR ds:0x1d001e0a,bl
  405db3:	cli    
  405db4:	sbb    eax,0x1cf919f3
  405db9:	repz sbb ecx,ebp
  405dbc:	sbb    al,0xe3
  405dbe:	sbb    ecx,ebp
  405dc0:	sbb    al,0xe3
  405dc2:	sbb    ecx,ebx
  405dc4:	sbb    al,0x0
  405dc6:	rcr    edx,cl
  405dc8:	sbb    al,0x1a
  405dca:	ror    DWORD PTR [edx],cl
  405dcc:	sbb    eax,0x1d09031a
  405dd1:	sbb    al,BYTE PTR [ebx]
  405dd3:	add    BYTE PTR [eax],al
  405dd5:	add    cl,bh
  405dd7:	sbb    al,0x1a
  405dd9:	repnz stc 
  405ddb:	sbb    ebx,DWORD PTR [ebx]
  405ddd:	bnd jmp 0xea2278fe
  405de3:	sbb    ebx,DWORD PTR [ebx]
  405de5:	loop   0x405dc0
  405de7:	sbb    ebx,DWORD PTR [ebx]
  405de9:	rcr    cl,cl
  405deb:	sbb    ebx,DWORD PTR [ebx]
  405ded:	ror    BYTE PTR [ecx],cl
  405def:	sbb    al,0x1b
  405df1:	add    cl,BYTE PTR [eax]
  405df3:	sbb    al,0x1b
  405df5:	add    bh,al
  405df7:	sbb    ebx,DWORD PTR [ebx]
  405df9:	cmc    
  405dfa:	hlt    
  405dfb:	sbb    bl,BYTE PTR [ebp*8-0x1ae3e514]
  405e02:	in     al,0x1a
  405e04:	sbb    al,0xdd
  405e06:	fcomp  QWORD PTR [edx]
  405e08:	sbb    al,0xd5
  405e0a:	aam    0x1a
  405e0c:	sbb    al,0xcd
  405e0e:	or     al,0x13
  405e10:	sbb    al,0x5
  405e12:	adc    edx,DWORD PTR [ebx]
  405e14:	sbb    al,0xfd
  405e16:	cld    
  405e17:	adc    bl,BYTE PTR [esi*8-0x12e3ed0c]
  405e1e:	in     al,dx
  405e1f:	adc    bl,BYTE PTR [eiz*8-0x22e3ed1c]
  405e26:	fcom   QWORD PTR [edx]
  405e28:	sbb    al,0xd5
  405e2a:	aam    0x12
  405e2c:	sbb    al,0xcd
  405e2e:	or     al,0x13
  405e30:	sbb    al,0x5
  405e32:	rcl    DWORD PTR [edx],cl
  405e34:	sbb    al,0xfd
  405e36:	cld    
  405e37:	adc    bl,BYTE PTR [esp+esi*8]
  405e3a:	add    BYTE PTR [eax],al
  405e3c:	add    ch,dh
  405e3e:	adc    ebx,DWORD PTR ds:0x1d13edec
  405e44:	add    BYTE PTR [edi-0x60e2e2eb],cl
  405e4a:	adc    eax,0x159f1d1d
  405e4f:	sbb    eax,0x1d153f1d
  405e54:	sbb    eax,0x1d1d15ef
  405e59:	pop    edi
  405e5a:	adc    eax,0x155f1d1d
  405e5f:	sbb    eax,0x1d155f1d
  405e64:	sbb    eax,0x1d1d154f
  405e69:	pop    ds
  405e6a:	adc    eax,0x151f1d1d
  405e6f:	sbb    eax,0x1d153f1d
  405e74:	sbb    eax,0x1d1d15ef
  405e79:	pop    ds
  405e7a:	adc    eax,0x90a1d1d
  405e7f:	add    al,BYTE PTR [ebx]
  405e81:	push   ss
  405e82:	or     eax,0x2020706
  405e87:	or     DWORD PTR [ecx],ecx
  405e89:	add    BYTE PTR [eax],al
  405e8b:	or     ecx,DWORD PTR [ebx]
  405e8d:	push   cs
  405e8e:	push   es
  405e8f:	or     al,0xc
  405e91:	iret   
  405e92:	add    al,0xd
  405e94:	or     eax,0xe0e03dc
  405e99:	int    0x2
  405e9b:	(bad)  
  405e9c:	pminub mm3,QWORD PTR [ecx]
  405e9f:	adc    BYTE PTR [eax],dl
  405ea1:	add    BYTE PTR [eax],al
  405ea3:	add    dl,cl
  405ea5:	sbb    DWORD PTR [eax],edx
  405ea7:	adc    BYTE PTR [ebx-0x64eeeee8],ch
  405ead:	sbb    BYTE PTR [ecx],dl
  405eaf:	adc    DWORD PTR [eax-0x37edede9],ebx
  405eb5:	pop    ss
  405eb6:	adc    dl,BYTE PTR [edx]
  405eb8:	test   eax,0x99131316
  405ebd:	push   ss
  405ebe:	adc    edx,DWORD PTR [ebx]
  405ec0:	repz jae 0x405eda
  405ec3:	adc    al,0xe7
  405ec5:	jnp    0x405ede
  405ec7:	adc    al,0xdf
  405ec9:	push   ebx
  405eca:	pop    ss
  405ecb:	adc    al,0xe7
  405ecd:	pop    ebx
  405ece:	pop    ss
  405ecf:	adc    al,0xdf
  405ed1:	push   edx
  405ed2:	push   ss
  405ed3:	adc    eax,0x15165b06
  405ed8:	(bad)  
  405ed9:	jb     0x405ef1
  405edb:	adc    eax,0x15167b06
  405ee0:	(bad)  
  405ee1:	jne    0x405ef8
  405ee3:	push   ss
  405ee4:	in     eax,0x7d
  405ee6:	adc    eax,0x1555dd16
  405eeb:	push   ss
  405eec:	in     eax,0x5d
  405eee:	adc    eax,0x1454dd16
  405ef3:	pop    ss
  405ef4:	add    al,0x5d
  405ef6:	adc    al,0x17
  405ef8:	cld    
  405ef9:	je     0x405f0f
  405efb:	pop    ss
  405efc:	add    al,0x7d
  405efe:	adc    al,0x17
  405f00:	cld    
  405f01:	ja     0x405f1e
  405f03:	sbb    bl,ch
  405f05:	ja     0x405f22
  405f07:	sbb    BYTE PTR [eax],al
  405f09:	add    BYTE PTR [eax],al
  405f0b:	jmp    0x405f74
  405f0d:	sbb    ebx,DWORD PTR [eax]
  405f0f:	(bad)  [edi+0x1b]
  405f12:	sbb    bl,bl
  405f14:	push   edi
  405f15:	sbb    ebx,DWORD PTR [eax]
  405f17:	or     edx,DWORD PTR [esi+0x1b]
  405f1a:	sbb    BYTE PTR [ebx],cl
  405f1c:	push   es
  405f1d:	sbb    al,0x18
  405f1f:	sti    
  405f20:	add    eax,0x76fb181c
  405f25:	sbb    al,0x19
  405f27:	jmp    0x1c66:0xea191c76
  405f2e:	sbb    edx,ebx
  405f30:	data16 sbb al,0x19
  405f33:	ficom  DWORD PTR [esi+0x1c]
  405f36:	sbb    DWORD PTR [edx],ecx
  405f38:	push   edi
  405f39:	sbb    al,0x19
  405f3b:	or     al,BYTE PTR [edi]
  405f3d:	add    BYTE PTR ds:0x1d000dfa,bl
  405f43:	cli    
  405f44:	or     eax,0x10e91df3
  405f49:	repz sbb eax,0x1de310e9
  405f4f:	fst    DWORD PTR [eax]
  405f51:	jecxz  0x405f70
  405f53:	fst    DWORD PTR [eax]
  405f55:	rcr    DWORD PTR ds:0x1dd31109,cl
  405f5b:	or     DWORD PTR [ecx],edx
  405f5d:	add    ebx,DWORD PTR [esi]
  405f5f:	stc    
  405f60:	adc    BYTE PTR [ebx],al
  405f62:	push   ds
  405f63:	stc    
  405f64:	adc    dl,dh
  405f66:	push   ds
  405f67:	call   0xe85f517b
  405f6c:	psrad  mm3,QWORD PTR [esi]
  405f6f:	add    BYTE PTR [eax],al
  405f71:	add    al,bl
  405f73:	psrad  mm3,QWORD PTR [esi]
  405f76:	fmul   DWORD PTR [edi]
  405f78:	rcr    BYTE PTR [esi],cl
  405f7a:	or     BYTE PTR [eax],dl
  405f7c:	rcr    BYTE PTR [esi],cl
  405f7e:	or     BYTE PTR [eax],dl
  405f80:	add    bl,BYTE PTR [edi]
  405f82:	clc    
  405f83:	lar    ebx,WORD PTR [edi]
  405f86:	clc    
  405f87:	adc    ch,cl
  405f89:	add    esi,ebx
  405f8b:	push   es
  405f8c:	call   0xeb475294
  405f91:	add    esi,ebx
  405f93:	push   es
  405f94:	jmp    0xf303:0xed06f303
  405f9b:	push   es
  405f9c:	in     al,0x3
  405f9e:	repz push es
  405fa0:	out    dx,eax
  405fa1:	add    esi,ebx
  405fa3:	push   es
  405fa4:	out    0x3,al
  405fa6:	repz push es
  405fa8:	loope  0x405fad
  405faa:	repz push es
  405fac:	jecxz  0x405fb1
  405fae:	repz push es
  405fb0:	cmc    
  405fb1:	add    esi,ebx
  405fb3:	push   es
  405fb4:	out    dx,eax
  405fb5:	add    esi,ebx
  405fb7:	push   es
  405fb8:	add    cl,bl
  405fba:	lock push es
  405fbc:	add    ch,dl
  405fbe:	lock push es
  405fc0:	add    BYTE PTR [ecx],al
  405fc2:	test   DWORD PTR [esi],0x6f0fd00
  405fc8:	add    cl,cl
  405fca:	lock push es
  405fcc:	add    cl,al
  405fce:	lock push es
  405fd0:	add    BYTE PTR [ecx-0x3efff910],bh
  405fd6:	add    BYTE PTR [eax],al
  405fd8:	add    al,dh
  405fda:	push   es
  405fdb:	add    BYTE PTR [ecx],ch
  405fdd:	test   DWORD PTR [esi],0x6ef1900
  405fe3:	add    cl,cl
  405fe5:	lock push es
  405fe7:	add    cl,bl
  405fe9:	lock push es
  405feb:	add    BYTE PTR [ecx-0x10],ch
  405fee:	push   es
  405fef:	add    BYTE PTR [ecx+0x290006f0],cl
  405ff5:	lock push es
  405ff7:	add    BYTE PTR [ecx-0x10],cl
  405ffa:	push   es
  405ffb:	add    cl,ch
  405ffd:	lock push es
  405fff:	add    cl,ch
  406001:	lock push es
  406003:	add    cl,ch
  406005:	lock push es
  406007:	add    al,ch
  406009:	lock push es
  40600b:	add    bl,ch
  40600d:	lock push es
  40600f:	add    dl,ch
  406011:	lock push es
  406013:	add    ch,ch
  406015:	lock push es
  406017:	add    bh,ah
  406019:	lock push es
  40601b:	add    cl,ah
  40601d:	lock push es
  40601f:	add    ch,bl
  406021:	lock push es
  406023:	add    cl,bh
  406025:	lock push es
  406027:	add    BYTE PTR [ecx],al
  406029:	out    dx,eax
  40602a:	push   es
  40602b:	add    BYTE PTR [ecx],cl
  40602d:	test   DWORD PTR [esi],0x6ef1900
  406033:	add    BYTE PTR [eax],al
  406035:	or     cl,BYTE PTR [ebx]
  406037:	add    BYTE PTR [eax],al
  406039:	sub    cl,BYTE PTR [ebx]
  40603b:	add    BYTE PTR [eax],al
  40603d:	add    BYTE PTR [eax],al
  40603f:	add    BYTE PTR [edx],bl
  406041:	or     eax,DWORD PTR [eax]
  406043:	add    BYTE PTR [edx+0xb],bl
  406046:	add    BYTE PTR [eax],al
  406048:	mov    al,BYTE PTR ds:0x60a0000
  40604e:	add    BYTE PTR [eax],al
  406050:	call   0xb:0x9a00000c
  406057:	add    BYTE PTR [edx-0x7500008e],cl
  40605d:	or     BYTE PTR [eax],al
  40605f:	add    BYTE PTR [edx-0x2],bl
  406062:	(bad)  
  406063:	call   FWORD PTR [edx+0xa]
  406066:	add    BYTE PTR [eax],al
  406068:	dec    edx
  406069:	push   ss
  40606a:	add    BYTE PTR [eax],al
  40606c:	dec    edx
  40606d:	push   cs
  40606e:	add    BYTE PTR [eax],al
  406070:	pop    edx
  406071:	add    BYTE PTR es:[eax],al
  406074:	pop    edx
  406075:	add    BYTE PTR ss:[eax],al
  406078:	dec    edx
  406079:	inc    esi
  40607a:	(bad)  
  40607b:	dec    DWORD PTR [edx+0x66]
  40607e:	(bad)  
  40607f:	call   FWORD PTR [esi+0x61]
  406082:	aas    
  406083:	add    BYTE PTR [esi+0x61],cl
  406086:	aas    
  406087:	add    BYTE PTR [esi+0x61],cl
  40608a:	aas    
  40608b:	add    BYTE PTR [esi+0x61],cl
  40608e:	aas    
  40608f:	add    BYTE PTR [esi+0x61],bl
  406092:	aas    
  406093:	add    BYTE PTR [esi+0x61],cl
  406096:	aas    
  406097:	add    BYTE PTR [esi+0x61],cl
  40609a:	aas    
  40609b:	add    BYTE PTR [esi+0x61],cl
  40609e:	aas    
  40609f:	add    BYTE PTR [esi+0x3f60],bl
  4060a5:	add    BYTE PTR [eax],al
  4060a7:	mov    fs,WORD PTR [eax+0x3f]
  4060aa:	add    cl,cl
  4060ac:	add    eax,0x5cf0004
  4060b1:	push   es
  4060b2:	add    bl,dh
  4060b4:	pusha  
  4060b5:	add    ecx,DWORD PTR [eax]
  4060b7:	repz add cx,WORD PTR [edx]
  4060bb:	repz je 0x4060c1
  4060be:	or     eax,0x110360f3
  4060c3:	repz dec esp
  4060c5:	add    edx,DWORD PTR [edi]
  4060c7:	repz push esp
  4060c9:	add    ebx,DWORD PTR [edi]
  4060cb:	repz cmp al,0x3
  4060ce:	sub    esi,ebx
  4060d0:	dec    esp
  4060d1:	add    edi,DWORD PTR [ebx]
  4060d3:	repz sbb al,0x4
  4060d6:	push   ebx
  4060d7:	repz cld 
  4060d9:	add    esi,DWORD PTR [ebx-0xd]
  4060dc:	fadd   QWORD PTR [edx]
  4060de:	mov    ds:0xe3039cf3,eax
  4060e3:	repz pop ebp
  4060e5:	add    al,BYTE PTR [eax]
  4060e7:	repz pop edi
  4060e9:	add    eax,DWORD PTR [eax]
  4060eb:	rep outs dx,DWORD PTR ds:[esi]
  4060ed:	add    edx,DWORD PTR [eax]
  4060ef:	rep outs dx,DWORD PTR ds:[esi]
  4060f1:	add    edx,DWORD PTR [eax]
  4060f3:	rep outs dx,DWORD PTR ds:[esi]
  4060f5:	add    edx,DWORD PTR [eax]
  4060f7:	rep outs dx,DWORD PTR ds:[esi]
  4060f9:	add    edx,DWORD PTR [eax]
  4060fb:	repz dec esi
  4060fd:	add    edx,DWORD PTR [ecx]
  4060ff:	repz dec esi
  406101:	add    edx,DWORD PTR [ecx]
  406103:	repz dec ebp
  406105:	add    edx,DWORD PTR [edx]
  406107:	repz dec ebp
  406109:	add    edx,DWORD PTR [edx]
  40610b:	add    BYTE PTR [eax],al
  40610d:	add    bl,dh
  40610f:	ins    BYTE PTR es:[edi],dx
  406110:	add    edx,DWORD PTR [ebx]
  406112:	rep ins BYTE PTR es:[edi],dx
  406114:	add    edx,DWORD PTR [ebx]
  406116:	repz jae 0x40611c
  406119:	adc    al,0xf3
  40611b:	jnp    0x406120
  40611d:	adc    al,0xf3
  40611f:	push   edx
  406120:	add    edx,DWORD PTR ds:0x15035af3
  406126:	repz dec ebp
  406128:	add    ecx,DWORD PTR [ecx-0xd]
  40612b:	sbb    al,0x3
  40612d:	add    bl,dh
  40612f:	push   es
  406130:	call   0xea475238
  406135:	add    esi,edi
  406137:	push   es
  406138:	in     al,dx
  406139:	add    ebp,esp
  40613b:	push   es
  40613c:	loopne 0x406141
  40613e:	out    dx,al
  40613f:	push   es
  406140:	fadd   DWORD PTR [ebx]
  406142:	fiadd  DWORD PTR [esi]
  406144:	or     BYTE PTR [edx+eiz*8],al
  406147:	push   es
  406148:	sub    BYTE PTR [edx+edx*1],al
  40614b:	pop    es
  40614c:	push   0xe807b204
  406151:	add    al,0x72
  406153:	push   es
  406154:	call   0xe844535a
  406159:	push   ebx
  40615b:	or     al,ch
  40615d:	or     esi,edx
  40615f:	add    ch,al
  406161:	adc    esi,edx
  406163:	push   cs
  406164:	call   0xe877538c
  406169:	ret    
  40616a:	repz out 0xe8,al
  40616d:	add    esi,ebx
  40616f:	push   es
  406170:	stc    
  406171:	add    eax,DWORD PTR [eax]
  406173:	add    BYTE PTR [eax],al
  406175:	add    eax,DWORD PTR [edi]
  406177:	stc    
  406178:	add    esp,ebx
  40617a:	push   es
  40617b:	clc    
  40617c:	add    esp,edx
  40617e:	push   es
  40617f:	sti    
  406180:	add    esp,ecx
  406182:	push   es
  406183:	fiadd  DWORD PTR [ebx]
  406185:	loopne 0x40618d
  406187:	aad    0x3
  406189:	pop    es
  40618a:	pop    es
  40618b:	fadd   QWORD PTR [ebx]
  40618d:	inc    BYTE PTR [esi]
  40618f:	xlat   BYTE PTR ds:[ebx]
  406190:	add    eax,DWORD PTR ds:0xfc03fe07
  406196:	push   es
  406197:	add    DWORD PTR [ebx+ebp*8],eax
  40619a:	push   es
  40619b:	lock add ebp,edx
  40619e:	push   es
  40619f:	repz add ebx,ecx
  4061a2:	push   es
  4061a3:	loop   0x4061a8
  4061a5:	fadd   DWORD PTR [esi]
  4061a7:	fld    QWORD PTR [ebx]
  4061a9:	sysret 
  4061ab:	add    ah,dl
  4061ad:	lock adc DWORD PTR [eax],eax
  4061b0:	test   eax,0x8ffc6f0
  4061b5:	add    dh,0xff
  4061b8:	sbb    BYTE PTR [esi+eax*8-0x1],bh
  4061bc:	fs pop esi
  4061be:	(bad)  
  4061bf:	(bad)  
  4061c0:	cmp    ebp,DWORD PTR [esi+eax*8-0x1]
  4061c4:	sbb    DWORD PTR [ebx-0x3a],ebx
  4061c7:	(bad)  
  4061c8:	call   0x884068bd
  4061cd:	out    dx,eax
  4061ce:	or     al,BYTE PTR [ecx]
  4061d0:	mov    esi,edi
  4061d2:	dec    esi
  4061d3:	add    cl,BYTE PTR [edx-0x11]
  4061d6:	lds    eax,FWORD PTR [eax]
  4061d8:	inc    esp
  4061d9:	add    BYTE PTR [eax],al
  4061db:	add    bh,dh
  4061dd:	xor    DWORD PTR [ecx],eax
  4061df:	dec    edi
  4061e0:	out    dx,eax
  4061e1:	int3   
  4061e2:	add    BYTE PTR [eax-0x9],al
  4061e5:	out    0x0,al
  4061e7:	push   ebx
  4061e8:	out    dx,eax
  4061e9:	rol    BYTE PTR [eax],1
  4061eb:	push   edx
  4061ec:	imul   edx
  4061ee:	add    BYTE PTR [ebp-0x11],al
  4061f1:	in     eax,dx
  4061f2:	add    BYTE PTR [edi],bh
  4061f4:	div    ecx
  4061f6:	add    BYTE PTR [esi-0x67ff1411],dl
  4061fc:	test   DWORD PTR [ecx],0x4bef9b01
  406202:	add    bl,BYTE PTR [edx+0x7c00c4f7]
  406208:	out    dx,eax
  406209:	xor    BYTE PTR [ecx],al
  40620b:	ja     0x406204
  40620d:	retf   
  40620e:	add    BYTE PTR [esi-0x11],bh
  406211:	inc    edi
  406212:	add    dh,BYTE PTR [eax-0x9]
  406215:	in     eax,0x0
  406217:	arpl   di,bp
  406219:	iret   
  40621a:	add    BYTE PTR [edx-0x9],ah
  40621d:	jmp    0xed2fb722
  406222:	add    BYTE PTR [edi+esi*8+0x51],cl
  406226:	add    al,BYTE PTR [eax]
  406228:	lods   al,BYTE PTR ds:[esi]
  406229:	or     bh,BYTE PTR [esi+0x1]
  40622c:	sub    eax,0x1a017c03
  406231:	add    edx,DWORD PTR [ecx+eax*1+0x9]
  406235:	add    eax,DWORD PTR [edx]
  406237:	add    DWORD PTR [edi-0x6bfec6f6],eax
  40623d:	or     al,BYTE PTR [esi]
  40623f:	add    DWORD PTR [eax],eax
  406241:	add    BYTE PTR [eax],al
  406243:	xchg   edx,eax
  406244:	or     cl,BYTE PTR [ecx+eax*1]
  406247:	nop
  406248:	or     bl,BYTE PTR [eax]
  40624a:	add    DWORD PTR [esi+0xa],edi
  40624d:	sbb    al,BYTE PTR [ecx]
  40624f:	pop    ebp
  406250:	or     cl,BYTE PTR [esi]
  406252:	add    DWORD PTR [edx+0x7b01100a],ecx
  406258:	or     al,BYTE PTR [ebx+0x1]
  40625b:	pop    eax
  40625c:	or     al,BYTE PTR [edi+0x1]
  40625f:	inc    edi
  406260:	or     dl,BYTE PTR [eax+0x1]
  406263:	inc    edx
  406264:	or     bl,BYTE PTR [eax+0x1]
  406267:	inc    ebx
  406268:	or     ch,BYTE PTR [esi+0x1]
  40626b:	push   ecx
  40626c:	or     dh,BYTE PTR [eax+0x1]
  40626f:	mov    WORD PTR [edx],cs
  406271:	bound  eax,QWORD PTR [ecx]
  406273:	jp     0x40627f
  406275:	push   ebp
  406276:	add    DWORD PTR [ecx+0xa],ebp
  406279:	add    eax,DWORD PTR [ecx]
  40627b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40627c:	or     DWORD PTR [edx],edi
  40627e:	add    DWORD PTR [ecx+ecx*1+0x9b20107],esi
  406285:	or     eax,0x1909b001
  40628a:	add    DWORD PTR [esi-0x42fee4f7],ebx
  406290:	or     DWORD PTR [edi],ecx
  406292:	add    edx,ebp
  406294:	or     DWORD PTR [ecx],edx
  406296:	add    ebx,ebx
  406298:	or     DWORD PTR [ecx+eax*1-0x8],eax
  40629c:	or     DWORD PTR [eax+0x1],ecx
  40629f:	out    0x9,eax
  4062a1:	push   ecx
  4062a2:	add    ebx,esi
  4062a4:	pop    ss
  4062a5:	add    ebx,DWORD PTR [ecx+0x0]
  4062a8:	add    BYTE PTR [eax],al
  4062aa:	repnz push ss
  4062ac:	add    ebp,DWORD PTR [edi-0xe]
  4062af:	or     BYTE PTR [ebx],al
  4062b1:	jno    0x4062a5
  4062b3:	ins    DWORD PTR es:[edi],dx
  4062b4:	add    ah,BYTE PTR [ebx-0xe]
  4062b7:	je     0x4062bb
  4062b9:	fyl2x  
  4062bb:	mov    esi,0x7df22601
  4062c0:	add    DWORD PTR [edx+esi*8],esp
  4062c3:	xchg   esi,eax
  4062c4:	add    DWORD PTR [eax],esi
  4062c6:	repnz mov BYTE PTR [ecx],al
  4062c9:	push   ds
  4062ca:	bnd jmp 0x4062cd
  4062cd:	xor    al,0xf2
  4062cf:	out    dx,al
  4062d0:	add    BYTE PTR [edi],ah
  4062d2:	repnz cmc 
  4062d4:	add    BYTE PTR ds:0x3100f6f2,ah
  4062da:	repnz clc 
  4062dc:	add    BYTE PTR [edi],bl
  4062de:	repnz jecxz 0x4062e1
  4062e1:	xor    eax,0xa01a2f2
  4062e6:	repnz popf 
  4062e8:	add    DWORD PTR [eax],ecx
  4062ea:	repnz mov dl,0x1
  4062ed:	and    dl,dh
  4062ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062f0:	add    DWORD PTR [edx+esi*8],ebx
  4062f3:	mov    al,BYTE PTR [ecx]
  4062f5:	ins    BYTE PTR es:[edi],dx
  4062f6:	repnz xchg ebp,eax
  4062f8:	add    DWORD PTR [edx+esi*8-0x7e],ebx
  4062fc:	add    DWORD PTR [ebx],ecx
  4062fe:	repnz mov ebp,0xd2f20900
  406304:	add    BYTE PTR [ecx],ah
  406306:	repnz xlat BYTE PTR ds:[ebx]
  406308:	add    BYTE PTR ds:0x6d00baf2,bl
  40630e:	add    BYTE PTR [eax],al
  406310:	add    dl,dh
  406312:	lds    eax,FWORD PTR [eax]
  406314:	pop    ebp
  406315:	repnz add DWORD PTR [eax],0x80f238
  40631c:	push   esi
  40631d:	repnz add BYTE PTR [eax],0x28
  406321:	repnz push es
  406323:	dec    edi
  406324:	add    al,cl
  406326:	pop    es
  406327:	push   ebx
  406328:	add    cl,ah
  40632a:	pop    es
  40632b:	inc    edx
  40632c:	add    cl,dl
  40632e:	pop    es
  40632f:	cmp    eax,0x3a078d00
  406334:	add    BYTE PTR [esi+eax*1+0x34],al
  406338:	add    BYTE PTR [edx],bl
  40633a:	push   es
  40633b:	aas    
  40633c:	add    BYTE PTR [edi],bl
  40633e:	push   es
  40633f:	xor    eax,DWORD PTR [eax]
  406341:	add    BYTE PTR [esi],al
  406343:	mov    ds:0x9d061007,al
  406348:	pop    es
  406349:	dec    esp
  40634a:	push   es
  40634b:	xchg   esp,eax
  40634c:	pop    es
  40634d:	sub    DWORD PTR [esi],eax
  40634f:	mov    es,WORD PTR [edi]
  406351:	sub    BYTE PTR [esi],al
  406353:	test   eax,0xa605f307
  406358:	pop    es
  406359:	aad    0x5
  40635b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40635c:	pop    es
  40635d:	add    eax,0xc9079e06
  406362:	add    eax,0x63607b8
  406367:	mov    ebx,0xba063707
  40636c:	pop    es
  40636d:	lds    eax,FWORD PTR ds:0x60107b0
  406373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406374:	pop    es
  406375:	add    BYTE PTR [eax],al
  406377:	add    bl,bl
  406379:	add    eax,0x5d9079f
  40637e:	mov    DWORD PTR [edi],eax
  406380:	repnz add eax,0x6040786
  406386:	push   ebp
  406387:	pop    es
  406388:	in     al,0x5
  40638a:	dec    esi
  40638b:	pop    es
  40638c:	sbb    BYTE PTR [esi],al
  40638e:	pop    eax
  40638f:	pop    es
  406390:	mov    ch,0x5
  406392:	pop    ebx
  406393:	pop    es
  406394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406395:	add    eax,0x5e4073a
  40639a:	inc    eax
  40639b:	pop    es
  40639c:	mov    al,ds:0xf4340005
  4063a1:	fld    QWORD PTR [eax]
  4063a3:	das    
  4063a4:	in     al,dx
  4063a5:	fild   WORD PTR [eax]
  4063a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a8:	hlt    
  4063a9:	sub    al,0x20
  4063ab:	dec    eax
  4063ac:	sti    
  4063ad:	or     BYTE PTR [eax],dh
  4063af:	dec    ebx
  4063b0:	jmp    0x4063ac
  4063b2:	das    
  4063b3:	dec    edx
  4063b4:	jmp    0x4063af
  4063b6:	das    
  4063b7:	dec    ebp
  4063b8:	sti    
  4063b9:	add    eax,0x6ffb4430
  4063be:	xor    BYTE PTR [edi-0x15],cl
  4063c1:	js     0x4063f3
  4063c3:	inc    esi
  4063c4:	jmp    0x40636b
  4063c6:	xor    BYTE PTR [ecx-0x6fcf580c],dl
  4063cc:	in     al,dx
  4063cd:	mov    eax,ds:0xa3f48330
  4063d2:	xor    BYTE PTR [edx-0x6acf6214],al
  4063d8:	hlt    
  4063d9:	xor    BYTE PTR [si+0x0],cl
  4063de:	add    ah,ch
  4063e0:	popa   
  4063e1:	xor    BYTE PTR [edi+0x7e3063f4],al
  4063e7:	in     al,dx
  4063e8:	inc    edi
  4063e9:	xor    BYTE PTR [ecx-0xc],bl
  4063ec:	push   0x30
  4063ee:	pop    eax
  4063ef:	in     al,dx
  4063f0:	test   al,0x30
  4063f2:	pop    ebx
  4063f3:	hlt    
  4063f4:	mov    ds:0xa4ec5a30,al
  4063f9:	xor    BYTE PTR ds:0x34309ef4,bh
  4063ff:	in     al,dx
  406400:	mov    al,ds:0x9ff43f30
  406405:	xor    BYTE PTR [esi],dh
  406407:	in     al,dx
  406408:	cdq    
  406409:	xor    BYTE PTR [ecx-0x5fcf640c],ah
  40640f:	in     al,dx
  406410:	mov    ch,0x30
  406412:	xchg   ebx,eax
  406413:	hlt    
  406414:	mov    bh,0x30
  406416:	xchg   edx,eax
  406417:	in     al,dx
  406418:	mov    cl,0x30
  40641a:	add    BYTE PTR [esi+0x3],dh
  40641d:	mov    bh,0x30
  40641f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406420:	add    edi,DWORD PTR [ecx-0x44fc5bd0]
  406426:	xor    BYTE PTR [ebp-0x25cf42fd],al
  40642c:	add    edi,DWORD PTR [edi-0x3efc24d0]
  406432:	xor    al,cl
  406434:	add    eax,esp
  406436:	xor    cl,cl
  406438:	add    eax,esi
  40643a:	xor    BYTE PTR [esi],bl
  40643c:	add    cl,al
  40643e:	xor    BYTE PTR [edi],cl
  406440:	add    cl,dl
  406442:	xor    BYTE PTR [eax],al
  406444:	add    BYTE PTR [eax],al
  406446:	or     al,0x2
  406448:	retf   
  406449:	xor    BYTE PTR ds:0x8230cc02,cl
  40644f:	dec    esp
  406451:	xor    BYTE PTR [ebx-0x6fcf3201],al
  406457:	dec    esi
  406459:	xor    BYTE PTR [ecx+0x6630d1ff],dl
  40645f:	call   esp
  406461:	xor    BYTE PTR [edi-0x1],dl
  406464:	xlat   BYTE PTR ds:[ebx]
  406465:	xor    BYTE PTR [edi+edi*8-0x26],dl
  406469:	xor    BYTE PTR [ebp-0x1],dh
  40646c:	fnsave [eax]
  40646e:	dec    edx
  40646f:	(bad)  
  406470:	fidiv  WORD PTR [eax]
  406472:	dec    ebx
  406473:	(bad)  
  406474:	fbstp  TBYTE PTR [eax]
  406476:	cmp    bh,bh
  406478:	loopne 0x4064aa
  40647a:	cmp    edi,edi
  40647c:	loope  0x4064ae
  40647e:	mov    ?,edi
  406480:	jecxz  0x4064b2
  406482:	jg     0x406483
  406484:	in     eax,0x30
  406486:	jl     0x406487
  406488:	out    0x30,eax
  40648a:	jge    0x40648b
  40648c:	call   0xea3f16c1
  406491:	xor    BYTE PTR [ebx-0xccf1502],dh
  406497:	xor    eax,0x3503ec08
  40649c:	or     ch,ch
  40649e:	jecxz  0x4064c3
  4064a0:	or     bh,ch
  4064a2:	jecxz  0x4064ae
  4064a4:	or     bl,dh
  4064a6:	jecxz  0x4064b9
  4064a8:	or     BYTE PTR [ebx-0x1d000000],bl
  4064ae:	clc    
  4064af:	pop    es
  4064b0:	pushf  
  4064b1:	ret    
  4064b2:	rol    DWORD PTR [esi],cl
  4064b4:	or     al,0xed
  4064b6:	in     al,0x6
  4064b8:	sbb    esi,ebp
  4064ba:	rol    BYTE PTR [esi],1
  4064bc:	pop    ds
  4064bd:	in     eax,dx
  4064be:	push   ds
  4064bf:	pop    es
  4064c0:	and    ebp,esi
  4064c2:	sbb    eax,0x1ced2207
  4064c7:	pop    es
  4064c8:	and    esi,ebp
  4064ca:	sbb    eax,DWORD PTR [edi]
  4064cc:	and    al,0xed
  4064ce:	and    al,BYTE PTR [edi]
  4064d0:	and    eax,0x260699f5
  4064d5:	in     eax,dx
  4064d6:	mov    al,ds:0xa7f52706
  4064db:	push   es
  4064dc:	sub    ch,ch
  4064de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064df:	push   es
  4064e0:	sub    ebp,esi
  4064e2:	mov    ch,0x6
  4064e4:	sub    ch,ch
  4064e6:	mov    ah,0x6
  4064e8:	sub    esi,ebp
  4064ea:	mov    ds:0x8aed2c06,eax
  4064ef:	push   es
  4064f0:	sub    eax,0x2e06b1f5
  4064f5:	in     eax,dx
  4064f6:	cwde   
  4064f7:	push   es
  4064f8:	das    
  4064f9:	cmc    
  4064fa:	scas   eax,DWORD PTR es:[edi]
  4064fb:	push   es
  4064fc:	xor    ch,ch
  4064fe:	scas   al,BYTE PTR es:[edi]
  4064ff:	push   es
  406500:	xor    ebp,esi
  406502:	lea    eax,[esi]
  406504:	xor    ch,ch
  406506:	mov    WORD PTR [esi],es
  406508:	xor    esi,ebp
  40650a:	mov    eax,DWORD PTR [esi]
  40650c:	xor    al,0xed
  40650e:	xchg   edx,eax
  40650f:	push   es
  406510:	xor    eax,0xf5000000
  406515:	push   es
  406516:	aas    
  406517:	push   es
  406518:	std    
  406519:	add    BYTE PTR [esi],dh
  40651b:	push   es
  40651c:	add    al,0x1
  40651e:	xor    DWORD PTR [esi],eax
  406520:	sti    
  406521:	add    BYTE PTR [eax],dh
  406523:	push   es
  406524:	jmp    0x4900:0xe9062300
  40652b:	push   es
  40652c:	mov    bl,0x0
  40652e:	dec    eax
  40652f:	push   es
  406530:	mov    dl,0x0
  406532:	dec    ebx
  406533:	push   es
  406534:	mov    cl,0x0
  406536:	or     al,BYTE PTR [esi]
  406538:	mov    al,0x0
  40653a:	add    eax,0xc00b706
  40653f:	push   es
  406540:	scas   al,BYTE PTR es:[edi]
  406541:	add    BYTE PTR [edi],al
  406543:	push   es
  406544:	xor    eax,0x2c060e01
  406549:	add    DWORD PTR [ecx],edx
  40654b:	push   es
  40654c:	sub    eax,DWORD PTR [ecx]
  40654e:	add    BYTE PTR [esi],al
  406550:	sub    al,BYTE PTR [ecx]
  406552:	add    eax,DWORD PTR [esi]
  406554:	cmp    DWORD PTR [ecx],eax
  406556:	ror    BYTE PTR [ecx],cl
  406558:	cmp    BYTE PTR [ecx],al
  40655a:	int    0x9
  40655c:	das    
  40655d:	add    esp,eax
  40655f:	or     DWORD PTR [esi],esp
  406561:	add    DWORD PTR [edi-0x29fec2f7],edi
  406567:	or     DWORD PTR [ecx+eax*1],esi
  40656a:	mov    ecx,0xb8014309
  40656f:	or     DWORD PTR [edx+0x1],eax
  406572:	mov    ebx,0x48012109
  406577:	push   es
  406578:	add    BYTE PTR [eax],al
  40657a:	add    BYTE PTR [ecx],ah
  40657c:	add    ecx,DWORD PTR [ebx+0x6]
  40657f:	and    BYTE PTR [ebx],al
  406581:	dec    edx
  406582:	push   es
  406583:	and    al,BYTE PTR [ebx]
  406585:	inc    ebp
  406586:	push   es
  406587:	mov    DWORD PTR [edx],0x2be064c
  40658d:	inc    edi
  40658e:	push   es
  40658f:	lds    eax,FWORD PTR [edx]
  406591:	add    BYTE PTR [esi-0x13],cl
  406594:	iret   
  406595:	add    eax,DWORD PTR [ecx-0xb]
  406598:	into   
  406599:	add    edx,DWORD PTR [eax-0x6cfc3213]
  40659f:	cmc    
  4065a0:	int3   
  4065a1:	add    eax,DWORD PTR [edx+0x7d03cbed]
  4065a7:	cmc    
  4065a8:	retf   0x9403
  4065ab:	in     eax,dx
  4065ac:	xchg   ebp,eax
  4065ad:	add    al,0x8f
  4065af:	cmc    
  4065b0:	enter  0x8603,0xed
  4065b4:	mov    DWORD PTR [ebx],0x2110f579
  4065ba:	pop    eax
  4065bb:	in     eax,dx
  4065bc:	add    al,0x4
  4065be:	pop    ebx
  4065bf:	cmc    
  4065c0:	add    eax,DWORD PTR [edx+ebx*2]
  4065c3:	in     eax,dx
  4065c4:	add    eax,0x2f55504
  4065c9:	add    al,0x3c
  4065cb:	in     eax,dx
  4065cc:	add    DWORD PTR [edi+esi*1],eax
  4065cf:	cmc    
  4065d0:	add    BYTE PTR [esi+edi*1],al
  4065d3:	in     eax,dx
  4065d4:	inc    DWORD PTR [ebx]
  4065d6:	xor    ebp,esi
  4065d8:	inc    BYTE PTR [ebx]
  4065da:	mov    al,ds:0xa303fdee
  4065df:	add    BYTE PTR [eax],al
  4065e1:	add    dh,dh
  4065e3:	cld    
  4065e4:	add    edx,DWORD PTR [edx-0x72fc0412]
  4065ea:	idiv   dl
  4065ec:	add    eax,DWORD PTR [esi+ebp*8-0x980fb6a]
  4065f3:	clc    
  4065f4:	add    esi,DWORD PTR [esi-0x12]
  4065f7:	test   DWORD PTR [ebx],0x3b8f6a9
  4065fd:	test   al,0xee
  4065ff:	ss add al,0xab
  406602:	div    BYTE PTR ds:0xc0eeaa04
  406608:	add    esp,DWORD PTR [ebp+0x432f6]
  40660e:	xchg   edi,eax
  40660f:	add    DWORD PTR ds:0x44019404,esi
  406615:	add    al,0x85
  406617:	add    DWORD PTR [ebx],esi
  406619:	add    al,0x92
  40661b:	add    DWORD PTR [ebp+0x4],eax
  40661e:	add    eax,DWORD PTR [edx]
  406620:	cmp    BYTE PTR [eax+eax*1],al
  406623:	add    bh,BYTE PTR [ecx]
  406625:	add    al,0x11
  406627:	add    bh,BYTE PTR [edx]
  406629:	add    al,0xe
  40662b:	add    bh,BYTE PTR [ebx]
  40662d:	add    al,0xdf
  40662f:	add    DWORD PTR [esp+eax*1],edi
  406632:	int3   
  406633:	add    DWORD PTR ds:0x3e01cd04,edi
  406639:	add    al,0xea
  40663b:	add    DWORD PTR [edi],edi
  40663d:	add    al,0xcb
  40663f:	add    DWORD PTR [edi+0x4],ecx
  406642:	mov    eax,0x44001
  406647:	add    BYTE PTR [eax],al
  406649:	mov    ecx,0x26044101
  40664e:	or     al,0x42
  406650:	add    al,0x7
  406652:	or     al,0x43
  406654:	add    al,0x4
  406656:	or     al,0x36
  406658:	add    al,0xf5
  40665a:	or     esi,DWORD PTR [edx]
  40665c:	add    al,0xe2
  40665e:	or     ecx,DWORD PTR [esp+eax*1-0x4d]
  406662:	or     eax,0xdb0044b
  406667:	aaa    
  406668:	add    al,0x81
  40666a:	or     eax,0xd5e0448
  40666f:	dec    ebp
  406670:	add    al,0x4f
  406672:	or     eax,0xd7c0449
  406677:	inc    edi
  406678:	add    al,0x7d
  40667a:	or     eax,0xdba044a
  40667f:	cs add al,0x7b
  406682:	or     eax,0xd680410
  406687:	adc    DWORD PTR [ebx+esi*8],eax
  40668a:	nop
  40668b:	push   es
  40668c:	test   DWORD PTR es:[ebx-0x6d10ebfa],0x8df71506
  406697:	push   es
  406698:	and    al,0xef
  40669a:	xchg   esp,eax
  40669b:	push   es
  40669c:	adc    esi,edi
  40669e:	xchg   DWORD PTR [esi],eax
  4066a0:	and    eax,0x1805b6ef
  4066a5:	idiv   DWORD PTR [ecx-0x3710e6fb]
  4066ab:	add    eax,0x1a
  4066b0:	mul    DWORD PTR [ebx]
  4066b2:	push   es
  4066b3:	sbb    ebp,edi
  4066b5:	mov    edx,0xd5f71c05
  4066ba:	add    eax,0x5ccef1d
  4066bf:	push   ds
  4066c0:	neg    DWORD PTR [edi]
  4066c2:	push   es
  4066c3:	pop    ds
  4066c4:	out    dx,eax
  4066c5:	inc    BYTE PTR ds:0x601f72f
  4066cb:	and    bh,ch
  4066cd:	add    BYTE PTR [esi],al
  4066cf:	and    edi,esi
  4066d1:	sti    
  4066d2:	add    eax,0x562ef22
  4066d7:	and    esi,edi
  4066d9:	pop    ebp
  4066da:	add    eax,0x564ef16
  4066df:	adc    dh,bh
  4066e1:	push   edi
  4066e2:	add    eax,0x566ef2c
  4066e7:	sub    esi,edi
  4066e9:	imul   eax,DWORD PTR ds:0x538ef17,0x553f728
  4066f3:	sub    eax,0x29054aef
  4066f8:	mul    DWORD PTR [ebp-0x6310d8fb]
  4066fe:	add    eax,0x48ef72a
  406703:	xchg   al,dh
  406705:	push   es
  406706:	dec    ebx
  406707:	add    al,0x6b
  406709:	or     DWORD PTR [edx+0x4],ecx
  40670c:	push   0x9
  40670e:	dec    ebp
  40670f:	add    al,0x79
  406711:	or     DWORD PTR [esp+eax*1+0x0],eax
  406715:	add    BYTE PTR [eax],al
  406717:	cdq    
  406718:	or     DWORD PTR [esi+0x4],ecx
  40671b:	outs   dx,DWORD PTR ds:[esi]
  40671c:	or     DWORD PTR [ecx+0x4],edx
  40671f:	or     DWORD PTR gs:[eax+0x4],eax
  406723:	cwde   
  406724:	or     DWORD PTR [edx+0x4],eax
  406727:	je     0x406732
  406729:	xchg   edi,eax
  40672a:	add    al,0x76
  40672c:	or     DWORD PTR [esi-0x67d921fc],ecx
  406732:	add    al,0x5f
  406734:	or     DWORD PTR [ebx+0x7a095604],ebx
  40673a:	add    al,0x4d
  40673c:	or     DWORD PTR [ebp+0x4],esi
  40673f:	inc    esp
  406740:	or     DWORD PTR [esp+eax*1+0x39],edi
  406744:	or     DWORD PTR [edi+0x4],esi
  406747:	arpl   WORD PTR [ecx],cx
  406749:	pop    esi
  40674a:	add    al,0x2f
  40674c:	or     DWORD PTR [ecx+0x4],esp
  40674f:	or     DWORD PTR es:[eax+0x4],edx
  406753:	mov    eax,0xa3045308
  406758:	or     BYTE PTR [edx+0x4],al
  40675b:	lods   eax,DWORD PTR ds:[esi]
  40675c:	or     BYTE PTR [eax],ch
  40675e:	add    al,0x82
  406760:	or     BYTE PTR [ebx],ch
  406762:	add    al,0x61
  406764:	or     BYTE PTR [edx],ch
  406766:	add    al,0x60
  406768:	or     BYTE PTR [ebp-0x5bf798fd],ch
  40676e:	add    ebx,DWORD PTR [esi+0x8]
  406771:	scas   eax,DWORD PTR es:[edi]
  406772:	add    eax,DWORD PTR [ebp+0x7c03a608]
  406778:	or     BYTE PTR [ecx+0x3],dh
  40677e:	jnp    0x406788
  406780:	mov    al,0x3
  406782:	jp     0x40678c
  406784:	add    BYTE PTR [ebx-0x5dfc7f10],ah
  40678a:	lock jg 0x406790
  40678d:	mov    ch,0xf0
  40678f:	add    BYTE PTR [ebx],0xac
  406792:	lock add DWORD PTR [ebx],0x384f0a7
  406799:	sahf   
  40679a:	lock add DWORD PTR [ebx],0xffffff99
  40679e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067a0:	add    ebx,DWORD PTR [eax-0x64fc5a10]
  4067a6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a8:	add    edx,DWORD PTR [ebp+0x3c03aaf0]
  4067ae:	lock test eax,0xacf03703
  4067b4:	add    edi,DWORD PTR [esi]
  4067b6:	lock stos DWORD PTR es:[edi],eax
  4067b8:	add    esi,DWORD PTR [ecx]
  4067ba:	lock scas al,BYTE PTR es:[edi]
  4067bc:	add    esp,DWORD PTR [eax]
  4067be:	lock lods eax,DWORD PTR ds:[esi]
  4067c0:	add    ecx,DWORD PTR [eax-0x10]
  4067c3:	xchg   ebp,eax
  4067c4:	add    ecx,DWORD PTR [ebx-0x10]
  4067c7:	cwde   
  4067c8:	add    ecx,DWORD PTR [edx-0x10]
  4067cb:	xchg   edi,eax
  4067cc:	add    ecx,DWORD PTR ds:0x4039af0
  4067d2:	lock cdq 
  4067d4:	add    ecx,DWORD PTR [edi]
  4067d6:	lock pushf 
  4067d8:	add    eax,DWORD PTR [esi]
  4067da:	lock fwait
  4067dc:	add    edx,DWORD PTR [ecx]
  4067de:	lock sahf 
  4067e0:	add    edx,DWORD PTR [eax]
  4067e2:	add    BYTE PTR [eax],al
  4067e4:	add    al,dh
  4067e6:	popf   
  4067e7:	add    eax,DWORD PTR [ebx]
  4067e9:	lock mov al,ds:0x9ff00203
  4067ef:	add    edx,ebp
  4067f1:	icebp  
  4067f2:	mov    ds:0xa1f1cc03,al
  4067f7:	add    eax,edi
  4067f9:	icebp  
  4067fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067fb:	add    edi,DWORD PTR [esi+0x3a3f1]
  406801:	pop    edx
  406802:	or     al,al
  406804:	add    ebx,DWORD PTR [ebx+0x8]
  406807:	rol    DWORD PTR [ebx],0x48
  40680a:	or     bl,al
  40680c:	add    ecx,DWORD PTR [ecx+0x8]
  40680f:	ret    0x5e03
  406812:	or     ah,al
  406814:	add    ebx,DWORD PTR [edi+0x8]
  406817:	lds    eax,FWORD PTR [ebx]
  406819:	mov    WORD PTR [eax],cs
  40681b:	mov    BYTE PTR [ebx],0x7d
  40681e:	or     bh,al
  406820:	add    esi,DWORD PTR [edx+0x8]
  406823:	enter  0x7303,0x8
  406827:	leave  
  406828:	add    edi,DWORD PTR [ebx-0x47dc49a1]
  40682e:	pop    edi
  40682f:	or     esp,DWORD PTR ds:0x24ff5f69
  406835:	outs   dx,BYTE PTR ds:[esi]
  406836:	pop    edi
  406837:	pop    ds
  406838:	and    edi,DWORD PTR [edi+0x5f]
  40683b:	and    BYTE PTR [ebx],ah
  40683d:	ins    BYTE PTR es:[edi],dx
  40683e:	pop    edi
  40683f:	add    DWORD PTR ds:0x23a05f6d,esp
  406845:	sbb    BYTE PTR [edi-0x5e],0x23
  406849:	add    BYTE PTR [eax],al
  40684b:	add    BYTE PTR [ebx+0x5f],dh
  40684e:	mov    ds:0xa55f7023,eax
  406853:	and    esp,DWORD PTR [ecx-0x59dc65a1]
  406859:	pop    edi
  40685a:	pushf  
  40685b:	and    esi,DWORD PTR [edi]
  40685d:	pop    esi
  40685e:	popf   
  40685f:	and    esp,DWORD PTR [esi+ebx*2]
  406862:	lahf   
  406863:	and    eax,DWORD PTR [ebp+0x5e]
  406866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406867:	and    ebx,DWORD PTR [edx]
  406869:	pop    esi
  40686a:	stos   DWORD PTR es:[edi],eax
  40686b:	and    eax,DWORD PTR [esi]
  40686d:	pop    esi
  40686e:	arpl   WORD PTR [edx],sp
  406870:	pop    ss
  406871:	pop    esi
  406872:	pop    edi
  406873:	and    dl,BYTE PTR [ebx+eiz*2+0x63552264]
  40687a:	sub    ah,BYTE PTR [edx]
  40687c:	repz scas eax,DWORD PTR es:[edi]
  40687e:	cld    
  40687f:	xor    edx,ecx
  406881:	scas   al,BYTE PTR es:[edi]
  406882:	cld    
  406883:	sbb    al,0xd1
  406885:	lods   eax,DWORD PTR ds:[esi]
  406886:	cld    
  406887:	sbb    eax,0x6fcaad1
  40688c:	shl    DWORD PTR [edi-0x592ec404],1
  406892:	cld    
  406893:	inc    edx
  406894:	rcr    DWORD PTR [edx-0x4e2d2c04],1
  40689a:	cld    
  40689b:	rcl    DWORD PTR [edx],1
  40689d:	test   eax,0x9a1160fc
  4068a2:	cld    
  4068a3:	sbb    DWORD PTR [ecx],edx
  4068a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068a6:	cld    
  4068a7:	adc    DWORD PTR [ecx],0x1182fca5
  4068ad:	jl     0x4068ab
  4068af:	sub    BYTE PTR [eax],al
  4068b1:	add    BYTE PTR [eax],al
  4068b3:	adc    DWORD PTR [ebx-0x35eed604],edx
  4068b9:	sti    
  4068ba:	adc    DWORD PTR es:[ecx],esp
  4068bd:	cld    
  4068be:	daa    
  4068bf:	ror    eax,1
  4068c1:	sti    
  4068c2:	add    ecx,edx
  4068c4:	mov    ecx,0xc4f291fb
  4068c9:	sti    
  4068ca:	(bad)  
  4068cb:	shl    BYTE PTR [ebx],cl
  4068cd:	cld    
  4068ce:	nop
  4068cf:	rcr    BYTE PTR [edx],cl
  4068d1:	cld    
  4068d2:	xchg   ecx,eax
  4068d3:	shl    BYTE PTR [ecx],cl
  4068d5:	cld    
  4068d6:	xchg   edx,eax
  4068d7:	ror    al,cl
  4068d9:	cli    
  4068da:	and    edi,ecx
  4068dc:	psubq  mm0,mm5
  4068df:	push   ss
  4068e0:	psubq  mm2,QWORD PTR [ecx+0x8fb0e0e]
  4068e7:	pop    ss
  4068e8:	or     eax,0xc0f0bfb
  4068ed:	sti    
  4068ee:	or     al,0x17
  4068f0:	adc    edi,ebx
  4068f2:	or     DWORD PTR [edi],ecx
  4068f4:	or     bl,bh
  4068f6:	and    edx,DWORD PTR [edi]
  4068f8:	pop    es
  4068f9:	sar    dl,1
  4068fb:	jmp    0x53b3c2a
  406900:	sub    al,0xc2
  406902:	cli    
  406903:	hlt    
  406904:	sub    edi,DWORD PTR [ebp-0x2bd41706]
  40690a:	cli    
  40690b:	add    BYTE PTR [edi+ecx*8],ch
  40690e:	cli    
  40690f:	enter  0xc62b,0xfa
  406913:	dec    edx
  406914:	and    eax,0xfab9
  406919:	add    BYTE PTR [ecx],bh
  40691b:	and    eax,0x2a74fa98
  406920:	fwait
  406921:	cli    
  406922:	test   al,0x25
  406924:	call   0xf8fa:0x9525a7fa
  40692b:	sub    edi,DWORD PTR [edx+edi*8+0x10]
  40692f:	sub    al,0x77
  406931:	cli    
  406932:	add    BYTE PTR [esi+edi*2],ch
  406935:	cli    
  406936:	sbb    BYTE PTR [ecx+esi*2],ch
  406939:	cli    
  40693a:	repnz sub ecx,DWORD PTR [eax-0x74d90e03]
  406941:	std    
  406942:	repnz es mov bh,ch
  406946:	lock es test ebp,edi
  40694a:	mul    DWORD PTR [esi]
  40694c:	mov    ebp,?
  40694e:	in     eax,dx
  40694f:	es xchg ebp,edi
  406952:	hlt    
  406953:	es mov ?,ebp
  406956:	sti    
  406957:	es cmp ebp,0xfd5026ea
  40695e:	loopne 0x406986
  406960:	push   ebx
  406961:	std    
  406962:	add    DWORD PTR [edi],esp
  406964:	inc    ebp
  406965:	std    
  406966:	adc    DWORD PTR [ebx],ebp
  406968:	aas    
  406969:	std    
  40696a:	push   ss
  40696b:	daa    
  40696c:	push   esi
  40696d:	std    
  40696e:	(bad)  
  406970:	cmp    ebp,edi
  406972:	and    DWORD PTR [esi],esp
  406974:	add    BYTE PTR [eax],bh
  406976:	(bad)  
  406977:	mov    ah,0x20
  406979:	cmp    edi,DWORD PTR [esi+0x9a20bb]
  40697f:	add    BYTE PTR [eax],al
  406981:	mov    ecx,0xa99520ba
  406986:	mov    ecx,0xb8a99c20
  40698b:	and    BYTE PTR [edi+0x7e20bf99],dl
  406991:	cdq    
  406992:	mov    esi,0xb898120
  406997:	and    DWORD PTR [edx-0x77],esi
  40699a:	neg    BYTE PTR [edi]
  40699c:	ins    DWORD PTR es:[edi],dx
  40699d:	jns    0x4069ce
  40699f:	and    esp,DWORD PTR [ecx+edi*2+0x32]
  4069a3:	add    BYTE PTR [edi+0x69],bl
  4069a6:	and    ebp,DWORD PTR cs:[edx-0x5adf4297]
  4069ad:	pop    ecx
  4069ae:	mov    esp,0xc359ac20
  4069b3:	and    BYTE PTR [edi-0x5fdf3db7],ah
  4069b9:	dec    ecx
  4069ba:	and    DWORD PTR es:[ebx+0x3525f539],esp
  4069c1:	cmp    DWORD PTR [edi+0x25],eax
  4069c4:	sub    al,0x29
  4069c6:	cdq    
  4069c7:	and    eax,0x254d2927
  4069cc:	push   ds
  4069cd:	sbb    DWORD PTR [ecx-0x7e6e6db],esi
  4069d3:	pop    ds
  4069d4:	sbb    BYTE PTR [ecx],cl
  4069d6:	call   FWORD PTR [edi]
  4069d8:	sbb    ecx,DWORD PTR [ecx]
  4069da:	cld    
  4069db:	pop    ds
  4069dc:	sbb    bh,cl
  4069de:	add    ah,BYTE PTR [eax]
  4069e0:	cmp    eax,0x372101f9
  4069e5:	add    BYTE PTR [eax],al
  4069e7:	add    cl,ch
  4069e9:	adc    eax,0x14e93e20
  4069ee:	and    BYTE PTR [eax],dh
  4069f0:	fld    DWORD PTR [edx]
  4069f2:	daa    
  4069f3:	add    BYTE PTR [ecx],dl
  4069f5:	pop    ebp
  4069f6:	stos   DWORD PTR es:[edi],eax
  4069f7:	and    eax,0x25bf5cee
  4069fc:	fistp  WORD PTR [ebp+esi*4+0x25]
  406a00:	in     al,dx
  406a01:	pop    esp
  406a02:	into   
  406a03:	and    eax,0x25ad5dad
  406a08:	mov    edx,0xbb25e55d
  406a0d:	pop    ebp
  406a0e:	stos   BYTE PTR es:[edi],al
  406a0f:	and    eax,0x25ac5da8
  406a14:	test   eax,0xb625b25d
  406a19:	pop    ebp
  406a1a:	mov    esp,0x55db725
  406a1f:	es mov ah,0x5d
  406a22:	and    DWORD PTR [eax],esp
  406a24:	gs pop ebp
  406a26:	test   eax,0xb15d8225
  406a2b:	and    eax,0x25bb5d73
  406a30:	jo     0x406a8f
  406a32:	sbb    esp,DWORD PTR [esi]
  406a34:	sbb    DWORD PTR [ebp+0x1d],0x625d7e26
  406a3b:	outs   dx,DWORD PTR es:[esi]
  406a3d:	pop    ebp
  406a3e:	gs es mov esp,0x9a26645d
  406a45:	pop    ebp
  406a46:	pop    ds
  406a47:	daa    
  406a48:	retf   
  406a49:	pop    ebp
  406a4a:	pop    ds
  406a4b:	and    BYTE PTR [eax],al
  406a4d:	add    BYTE PTR [eax],al
  406a4f:	enter  0x205d,0x20
  406a53:	mov    ecx,0xd627125d
  406a58:	pop    ebp
  406a59:	push   ss
  406a5a:	daa    
  406a5b:	(bad)  
  406a5c:	pop    ebp
  406a5d:	outs   dx,BYTE PTR ds:[esi]
  406a5e:	les    ebx,FWORD PTR es:[ebp+0x6c]
  406a62:	lds    ebx,FWORD PTR es:[ebp+0x41]
  406a66:	rcr    BYTE PTR es:[ebp+0x3f],cl
  406a6a:	adc    esp,DWORD PTR es:[eax+0xd]
  406a6e:	es repz stc 
  406a71:	clc    
  406a72:	adc    al,0x10
  406a74:	stc    
  406a75:	clc    
  406a76:	push   ss
  406a77:	adc    al,BYTE PTR [ecx+edi*8]
  406a7a:	aaa    
  406a7b:	adc    ebx,DWORD PTR [ebx-0x8]
  406a7e:	sbb    DWORD PTR [ebx],edx
  406a80:	push   esi
  406a81:	clc    
  406a82:	sbb    eax,0x3bf9d113
  406a87:	repz (bad) 
  406a89:	stc    
  406a8a:	cmp    eax,0x27f977f3
  406a8f:	rol    DWORD PTR [esi-0x502ed907],1
  406a95:	stc    
  406a96:	scas   al,BYTE PTR es:[edi]
  406a97:	repz mov cl,0xf9
  406a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a9b:	shl    DWORD PTR [eax-0x542ed707],1
  406aa1:	stc    
  406aa2:	or     eax,edx
  406aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aa5:	stc    
  406aa6:	pop    esi
  406aa7:	repz cdq 
  406aa9:	stc    
  406aaa:	pop    ss
  406aab:	adc    DWORD PTR [ecx+edi*8-0x659ef6c],ebp
  406ab2:	mov    ds:0x11000000,eax
  406ab7:	jge    0x406ab2
  406ab9:	retf   0x810e
  406abc:	stc    
  406abd:	pop    es
  406abe:	adc    BYTE PTR [esi-0x7],dh
  406ac1:	sub    DWORD PTR [ecx],edx
  406ac3:	js     0x406abe
  406ac5:	adc    BYTE PTR [ecx],0x7a
  406ac8:	stc    
  406ac9:	adc    DWORD PTR [ecx],0xd1a1f8c4
  406acf:	mov    ebx,0x14d1a2f8
  406ad4:	clc    
  406ad5:	push   ss
  406ad6:	ror    edi,cl
  406ad8:	test   edi,0xd0f7ceee
  406ade:	not    cl
  406ae0:	not    ecx
  406ae2:	out    dx,al
  406ae3:	shl    bh,1
  406ae5:	shl    dh,cl
  406ae7:	ret    
  406ae8:	not    ebx
  406aea:	out    dx,al
  406aeb:	push   es
  406aec:	or     al,0xf8
  406aee:	mov    DWORD PTR [ebx],0x3bef807
  406af4:	push   cs
  406af5:	clc    
  406af6:	lds    eax,FWORD PTR [ebx]
  406af8:	add    eax,edi
  406afa:	mov    esp,0xabf81003
  406aff:	add    edx,DWORD PTR [ebx]
  406b01:	clc    
  406b02:	stos   BYTE PTR es:[edi],al
  406b03:	add    eax,DWORD PTR [edx]
  406b05:	clc    
  406b06:	cdq    
  406b07:	add    edi,ebp
  406b09:	neg    DWORD PTR [eax-0x30082bfd]
  406b0f:	add    ecx,edi
  406b11:	test   esi,0xbdf7c603
  406b17:	add    ebx,ecx
  406b19:	test   DWORD PTR [eax],0x3b40000
  406b1f:	mov    eax,0xbb0393f7
  406b24:	not    DWORD PTR [edx-0x6e0845fd]
  406b2a:	add    esi,DWORD PTR [ebp-0x63fc6f09]
  406b30:	not    DWORD PTR [edi+0x3]
  406b33:	xchg   edi,eax
  406b34:	test   DWORD PTR [esi+0x3],0x355f79e
  406b3b:	xchg   ecx,eax
  406b3c:	test   DWORD PTR [ebx+eax*1-0x80],0x83035bf7
  406b44:	neg    DWORD PTR [edx+0x3]
  406b47:	dec    eax
  406b48:	div    bl
  406b4a:	or     al,0x4b
  406b4c:	div    dl
  406b4e:	or     al,0x8a
  406b50:	div    cl
  406b52:	or     al,0x85
  406b54:	div    al
  406b56:	or     al,0x8c
  406b58:	div    bh
  406b5a:	or     al,0x87
  406b5c:	imul   dh
  406b5e:	or     al,0x8e
  406b60:	div    ch
  406b62:	or     al,0x91
  406b64:	imul   ah
  406b66:	or     al,0x0
  406b68:	add    BYTE PTR ds:0xfd830e0e,0xe
  406b6f:	push   cs
  406b70:	push   edx
  406b71:	in     eax,0x11
  406b73:	push   cs
  406b74:	dec    ebp
  406b75:	fst    QWORD PTR [eax]
  406b77:	push   cs
  406b78:	inc    esp
  406b79:	in     eax,0xb
  406b7b:	push   cs
  406b7c:	aas    
  406b7d:	fisttp QWORD PTR [edx]
  406b7f:	push   cs
  406b80:	push   esi
  406b81:	add    BYTE PTR [eax],al
  406b83:	add    ch,al
  406b85:	or     eax,0xcbd390e
  406b8a:	push   cs
  406b8b:	cmp    ch,al
  406b8d:	test   DWORD PTR ds:0xdf6bd3b,0xdf8029a
  406b97:	xchg   ebp,eax
  406b98:	add    dh,bl
  406b9a:	or     eax,0xdf2029c
  406b9f:	xchg   edi,eax
  406ba0:	add    dh,ch
  406ba2:	or     eax,0xdf3e27e
  406ba7:	and    edx,0xe2700dfe
  406bad:	std    
  406bae:	or     eax,0xe00e273
  406bb3:	bound  eax,QWORD PTR [edx]
  406bb5:	add    BYTE PTR [esi],cl
  406bb7:	pop    ebp
  406bb8:	add    bh,bl
  406bba:	or     eax,0xdfa0254
  406bbf:	dec    edi
  406bc0:	add    bh,ch
  406bc2:	or     eax,0xdfbe246
  406bc7:	test   eax,0xa80e26e2
  406bcc:	loop   0x406bf3
  406bce:	push   cs
  406bcf:	stos   DWORD PTR es:[edi],eax
  406bd0:	loop   0x406bfa
  406bd2:	push   cs
  406bd3:	sub    al,BYTE PTR [edx]
  406bd5:	sub    BYTE PTR [esi],cl
  406bd7:	and    eax,0x2c0e2302
  406bdc:	add    ah,BYTE PTR [edx]
  406bde:	push   cs
  406bdf:	daa    
  406be0:	add    ah,BYTE PTR ds:0xf5dd000e
  406be6:	es push cs
  406be8:	add    BYTE PTR [eax],al
  406bea:	add    dl,al
  406bec:	cmc    
  406bed:	daa    
  406bee:	push   cs
  406bef:	shl    ebp,cl
  406bf1:	sub    BYTE PTR [esi],cl
  406bf3:	shl    ch,1
  406bf5:	sub    DWORD PTR [esi],ecx
  406bf7:	and    esi,esi
  406bf9:	sub    cl,BYTE PTR [esi]
  406bfb:	push   ss
  406bfc:	imul   BYTE PTR [ebx]
  406bfe:	push   cs
  406bff:	pop    ss
  406c00:	imul   BYTE PTR [esi+ecx*1]
  406c03:	hlt    
  406c04:	cmc    
  406c05:	sub    eax,0x2ef6050e
  406c0a:	push   cs
  406c0b:	jmp    0x30f5:0xdb0e2ff5
  406c12:	push   cs
  406c13:	fdiv   st,st(5)
  406c15:	xor    DWORD PTR [esi],ecx
  406c17:	imul   esi,esi,0xf65e0e32
  406c1d:	xor    ecx,DWORD PTR [esi]
  406c1f:	pop    edi
  406c20:	div    BYTE PTR [esi+ecx*1]
  406c23:	pop    esp
  406c24:	div    BYTE PTR ds:0x36f66d0e
  406c2a:	push   cs
  406c2b:	push   edx
  406c2c:	div    BYTE PTR [edi]
  406c2e:	push   cs
  406c2f:	arpl   si,si
  406c31:	cmp    BYTE PTR [esi],cl
  406c33:	pusha  
  406c34:	idiv   BYTE PTR [ecx]
  406c36:	push   cs
  406c37:	xor    al,0xf6
  406c39:	cmp    eax,0x3ef6a50e
  406c3e:	push   cs
  406c3f:	push   0xfffffff6
  406c41:	aas    
  406c42:	push   cs
  406c43:	imul   esi,esi,0x40
  406c46:	push   cs
  406c47:	js     0x406c3f
  406c49:	inc    ecx
  406c4a:	push   cs
  406c4b:	jns    0x406c43
  406c4d:	inc    edx
  406c4e:	push   cs
  406c4f:	add    BYTE PTR [eax],al
  406c51:	add    BYTE PTR [esi-0xa],ch
  406c54:	inc    ebx
  406c55:	push   cs
  406c56:	outs   dx,DWORD PTR ds:[esi]
  406c57:	test   BYTE PTR [esi+ecx*1-0x44],0xf6
  406c5c:	inc    ebp
  406c5d:	push   cs
  406c5e:	lods   eax,DWORD PTR ds:[esi]
  406c5f:	test   BYTE PTR [esi+0xe],0xf3
  406c63:	lds    ecx,FWORD PTR [edi]
  406c65:	dec    eax
  406c66:	in     eax,0xc6
  406c68:	cmovns edi,ebp
  406c6b:	mov    bh,0xf
  406c6d:	dec    edx
  406c6e:	cmc    
  406c6f:	mov    eax,0xc1ed4b0f
  406c74:	cmovl  esp,ebp
  406c77:	sbb    dl,BYTE PTR [eax]
  406c79:	dec    ebp
  406c7a:	std    
  406c7b:	dec    DWORD PTR [edi]
  406c7d:	push   eax
  406c7e:	cmc    
  406c7f:	dec    BYTE PTR [edi]
  406c81:	push   ecx
  406c82:	in     eax,dx
  406c83:	std    
  406c84:	rsqrtps xmm4,xmm5
  406c87:	cld    
  406c88:	rcpps  xmm7,xmm5
  406c8b:	pop    ebx
  406c8c:	andps  xmm6,xmm5
  406c8f:	push   edx
  406c90:	andnps xmm5,xmm5
  406c93:	pop    ecx
  406c94:	orps   xmm4,xmm5
  406c97:	push   eax
  406c98:	xorps  xmm7,xmm5
  406c9b:	addr16 addps xmm6,xmm5
  406c9f:	mulpd  xmm5,xmm5
  406ca3:	mov    ss,WORD PTR [edx]
  406ca5:	xor    edx,esp
  406ca7:	lea    edx,[edx]
  406ca9:	xor    al,dl
  406cab:	mov    WORD PTR [edx],ss
  406cad:	xor    eax,edx
  406caf:	adc    DWORD PTR [edx],0x34
  406cb2:	ret    0x128a
  406cb5:	xor    eax,0xc2000000
  406cba:	adc    DWORD PTR [edx],0x11c92236
  406cc0:	aaa    
  406cc1:	and    bh,BYTE PTR [eax-0x38ddc7ef]
  406cc7:	adc    DWORD PTR [ecx],edi
  406cc9:	and    al,dh
  406ccb:	adc    DWORD PTR [edx],edi
  406ccd:	add    dh,BYTE PTR [ebp-0x33fdc4ef]
  406cd3:	adc    DWORD PTR [edx+eax*1],edi
  406cd6:	ret    
  406cd7:	adc    DWORD PTR ds:0x3e121a02,edi
  406cdd:	loop   0x406ce5
  406cdf:	xchg   esi,eax
  406ce0:	adc    ah,ah
  406ce2:	pop    ss
  406ce3:	cdq    
  406ce4:	adc    dh,BYTE PTR [ebx-0x4ded67e9]
  406cea:	pop    ss
  406ceb:	fwait
  406cec:	adc    dh,BYTE PTR [ecx-0x4fed85e9]
  406cf2:	pop    ss
  406cf3:	jne    0x406d07
  406cf5:	mov    bh,0x17
  406cf7:	jl     0x406d0b
  406cf9:	scas   al,BYTE PTR es:[edi]
  406cfa:	pop    ss
  406cfb:	ja     0x406d0f
  406cfd:	xor    eax,0x2c125e18
  406d02:	sbb    BYTE PTR [ecx+0x12],ah
  406d05:	sub    ebx,DWORD PTR [eax]
  406d07:	push   eax
  406d08:	adc    ch,BYTE PTR [edx]
  406d0a:	sbb    BYTE PTR [ebx+0x12],dl
  406d0d:	cmp    DWORD PTR [eax],ebx
  406d0f:	inc    edx
  406d10:	adc    bh,BYTE PTR [eax]
  406d12:	sbb    BYTE PTR ds:0x34182f12,bh
  406d18:	adc    ah,BYTE PTR [esi]
  406d1a:	sbb    BYTE PTR [edi],ch
  406d1c:	adc    al,BYTE PTR [eax]
  406d1e:	add    BYTE PTR [eax],al
  406d20:	cmp    eax,0x3411a618
  406d25:	sbb    BYTE PTR [ecx-0x57e7bcef],ch
  406d2b:	adc    DWORD PTR [edx+0x18],eax
  406d2e:	stos   DWORD PTR es:[edi],eax
  406d2f:	adc    DWORD PTR [ecx],esp
  406d31:	sbb    BYTE PTR [edx-0x5ae7dfef],ch
  406d37:	adc    DWORD PTR [edi],esp
  406d39:	sbb    BYTE PTR [ecx+edx*1+0x11a7181e],ch
  406d40:	lds    edx,FWORD PTR [edi]
  406d42:	scas   al,BYTE PTR es:[edi]
  406d43:	adc    DWORD PTR [edi+edx*1+0x17bb11b1],edi
  406d4a:	mov    al,ds:0xa317ba11
  406d4f:	adc    DWORD PTR [ecx-0x57ee4de9],ebp
  406d55:	pop    ss
  406d56:	lods   eax,DWORD PTR ds:[esi]
  406d57:	adc    DWORD PTR [edi-0x1d5bffe9],ebx
  406d5d:	mov    ebx,0xb9029f30
  406d62:	xor    BYTE PTR [esi],dh
  406d64:	add    bh,BYTE PTR [edx-0x18fdc6d0]
  406d6a:	xor    BYTE PTR [eax],bh
  406d6c:	add    ch,al
  406d6e:	xor    BYTE PTR [ebx],bh
  406d70:	loop   0x406d56
  406d72:	xor    BYTE PTR [edx],bl
  406d74:	loop   0x406d5b
  406d76:	xor    BYTE PTR ds:0x1c11aee2,dl
  406d7c:	loop   0x406d2d
  406d7e:	adc    DWORD PTR [edi],edx
  406d80:	add    ch,BYTE PTR [ebp+0x3e11]
  406d86:	add    BYTE PTR [edx],al
  406d88:	lods   al,BYTE PTR ds:[esi]
  406d89:	adc    DWORD PTR [ecx+0x2],eax
  406d8c:	stos   DWORD PTR es:[edi],eax
  406d8d:	adc    DWORD PTR [eax],esi
  406d8f:	add    ch,BYTE PTR [edx-0x571dccef]
  406d95:	adc    DWORD PTR [edx],esp
  406d97:	loop   0x406d40
  406d99:	adc    DWORD PTR ds:0x141196e2,ebx
  406d9f:	loop   0x406d36
  406da1:	adc    DWORD PTR [edi],ecx
  406da3:	add    dl,BYTE PTR [ebp-0x6c0a39ef]
  406da9:	adc    ecx,ecx
  406dab:	in     eax,dx
  406dac:	xchg   edx,eax
  406dad:	adc    eax,ecx
  406daf:	in     eax,0x91
  406db1:	adc    ebx,ecx
  406db3:	std    
  406db4:	nop
  406db5:	adc    edx,ecx
  406db7:	cmc    
  406db8:	(bad)  
  406db9:	adc    ebp,eax
  406dbb:	in     eax,dx
  406dbc:	sahf   
  406dbd:	adc    esp,ecx
  406dbf:	in     eax,0x9d
  406dc1:	adc    edi,eax
  406dc3:	std    
  406dc4:	pushf  
  406dc5:	adc    DWORD PTR [esi-0x6eee640b],ecx
  406dcb:	in     eax,dx
  406dcc:	call   0x8311:0x99e58011
  406dd3:	std    
  406dd4:	cwde   
  406dd5:	adc    DWORD PTR [eax],eax
  406dd7:	popa   
  406dd8:	or     DWORD PTR [edi-0x3ff691ef],edi
  406dde:	adc    DWORD PTR [edi+0x9],ebp
  406de1:	rcl    DWORD PTR [ecx],0xac
  406de4:	or     dl,al
  406de6:	adc    DWORD PTR [ebp+0x316d08],edi
  406dec:	add    BYTE PTR [eax],al
  406dee:	mov    edx,0xbb317108
  406df3:	or     BYTE PTR [eax+0x31],bh
  406df6:	test   al,0x8
  406df8:	jg     0x406e2b
  406dfa:	leave  
  406dfb:	or     BYTE PTR [ecx-0x7bf739cf],al
  406e01:	xor    DWORD PTR [edi+0x24318608],esi
  406e07:	or     DWORD PTR [ebp-0x71f6facf],ecx
  406e0d:	xor    DWORD PTR [edx],edx
  406e0f:	or     ebx,ebp
  406e11:	adc    DWORD PTR [ebx],eax
  406e13:	or     eax,esi
  406e15:	adc    eax,esp
  406e17:	or     cl,bh
  406e19:	adc    ebp,ebp
  406e1b:	or     BYTE PTR [ecx-0x54abc9e0],ch
  406e21:	and    dh,bh
  406e23:	push   ebx
  406e24:	push   ecx
  406e25:	add    edi,ebx
  406e27:	push   ebx
  406e28:	push   edx
  406e29:	add    DWORD PTR [esp+edx*2+0x77],ecx
  406e2d:	add    DWORD PTR [edx+0x23],ebp
  406e30:	mov    al,ds:0xa1236b20
  406e35:	and    BYTE PTR [eax+0x23],bh
  406e38:	mov    ds:0xa3237920,al
  406e3d:	and    BYTE PTR [esi+0x23],dh
  406e40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e41:	and    BYTE PTR [edi+0x23],ah
  406e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e45:	and    BYTE PTR [ebx+eiz*1-0x5a],dh
  406e49:	and    BYTE PTR [ebp-0x3ddf58dd],dh
  406e4f:	and    ebp,DWORD PTR [eax+0x20]
  406e55:	repz (bad) 
  406e57:	and    ch,BYTE PTR [ecx-0x55dd3bed]
  406e5d:	adc    esi,DWORD PTR [ebp-0x35ec54de]
  406e63:	and    ch,BYTE PTR [ebx+edx*1-0xcffa19a]
  406e6a:	add    eax,DWORD PTR gs:[eax]
  406e6d:	repz push esi
  406e6f:	pop    esi
  406e70:	add    bl,dh
  406e72:	push   esi
  406e73:	add    eax,DWORD PTR [eax]
  406e75:	repz fs pop esi
  406e78:	add    bl,dh
  406e7a:	cmp    DWORD PTR [ebx],eax
  406e7c:	add    bl,dh
  406e7e:	push   edx
  406e7f:	pop    esi
  406e80:	add    bl,dh
  406e82:	push   0x3
  406e84:	add    bl,dh
  406e86:	cmp    al,0x5e
  406e88:	add    bl,dh
  406e8a:	xor    BYTE PTR [ebx],al
  406e8c:	add    bl,dh
  406e8e:	or     BYTE PTR [edi+0x0],bl
  406e91:	repz or BYTE PTR [eax+eax*1],al
  406e95:	repz cld 
  406e97:	pop    ebp
  406e98:	add    bl,dh
  406e9a:	xchg   ebp,eax
  406e9b:	add    al,0x0
  406e9d:	rep outs dx,DWORD PTR ds:[esi]
  406e9f:	pop    esi
  406ea0:	add    bl,dh
  406ea2:	dec    ebx
  406ea3:	add    al,0x0
  406ea5:	rep outs dx,BYTE PTR ds:[esi]
  406ea7:	pop    esi
  406ea8:	add    bl,dh
  406eaa:	dec    edx
  406eab:	add    al,0x0
  406ead:	repz adc DWORD PTR [ebp+0x0],ebx
  406eb1:	repz or eax,0x10f30003
  406eb7:	pop    ebp
  406eb8:	add    BYTE PTR [eax],al
  406eba:	add    BYTE PTR [eax],al
  406ebc:	repz or al,0x3
  406ebf:	add    bl,dh
  406ec1:	repz pop esp
  406ec3:	add    bl,dh
  406ec5:	test   DWORD PTR [edx],0x5cf2f300
  406ecb:	add    bl,dh
  406ecd:	inc    BYTE PTR [edx]
  406ecf:	add    bl,dh
  406ed1:	push   es
  406ed2:	aas    
  406ed3:	pop    ebp
  406ed4:	repz push es
  406ed6:	retf   
  406ed7:	add    dh,bl
  406ed9:	push   es
  406eda:	ds pop ebp
  406edc:	repz push es
  406ede:	retf   0xf302
  406ee1:	push   es
  406ee2:	or     DWORD PTR [ebp-0xd],ebx
  406ee5:	push   es
  406ee6:	rol    BYTE PTR [ebx],1
  406ee8:	repz push es
  406eea:	or     BYTE PTR [ebp-0xd],bl
  406eed:	push   es
  406eee:	mov    ebp,0xcb06f303
  406ef3:	pop    esp
  406ef4:	repz push es
  406ef6:	adc    al,BYTE PTR [ebx+esi*8]
  406ef9:	push   es
  406efa:	retf   0xf35c
  406efd:	push   es
  406efe:	cld    
  406eff:	add    dh,bl
  406f01:	push   es
  406f02:	rcr    DWORD PTR [ebx+esi*8+0x6],cl
  406f06:	push   cs
  406f07:	add    al,0xf3
  406f09:	push   es
  406f0a:	ret    0xf35c
  406f0d:	push   es
  406f0e:	jmp    0xf35d:0x6906f302
  406f15:	push   es
  406f16:	leave  
  406f17:	add    esi,ebx
  406f19:	push   es
  406f1a:	pusha  
  406f1b:	pop    ebp
  406f1c:	repz push es
  406f1e:	loopne 0x406f23
  406f20:	add    BYTE PTR [eax],al
  406f22:	add    bl,dh
  406f24:	push   es
  406f25:	je     0x406f84
  406f27:	repz push es
  406f29:	in     al,dx
  406f2a:	add    dh,bl
  406f2c:	push   es
  406f2d:	pop    eax
  406f2e:	pop    ebp
  406f2f:	repz push es
  406f31:	jns    0x406f36
  406f33:	repz push es
  406f35:	jnp    0x406f93
  406f37:	repz push es
  406f39:	pop    eax
  406f3a:	add    al,0xf3
  406f3c:	push   es
  406f3d:	jp     0x406f9b
  406f3f:	repz push es
  406f41:	pop    ebx
  406f42:	add    al,0xf3
  406f44:	push   es
  406f45:	pop    ebp
  406f46:	pop    esp
  406f47:	repz push es
  406f49:	cmp    al,BYTE PTR [ebx+esi*8]
  406f4c:	push   es
  406f4d:	add    BYTE PTR [edi+ecx*8+0x6],bl
  406f51:	add    BYTE PTR ds:0x7f0006ef,al
  406f57:	mov    edi,0xf0c40006
  406f5c:	push   es
  406f5d:	add    BYTE PTR [esi-0x51],bh
  406f60:	push   es
  406f61:	add    bh,al
  406f63:	lock push es
  406f65:	add    BYTE PTR [ecx-0x61],ah
  406f68:	push   es
  406f69:	add    dh,al
  406f6b:	lock push es
  406f6d:	add    BYTE PTR [eax-0x31],dl
  406f70:	push   es
  406f71:	add    cl,al
  406f73:	lock push es
  406f75:	add    BYTE PTR [ebp+0xa0006bf],al
  406f7b:	out    dx,eax
  406f7c:	push   es
  406f7d:	add    BYTE PTR [ebx-0x51],dh
  406f80:	push   es
  406f81:	add    BYTE PTR [eax],cl
  406f83:	out    dx,eax
  406f84:	push   es
  406f85:	add    BYTE PTR [edx+0x0],ah
  406f88:	add    BYTE PTR [eax],al
  406f8a:	lahf   
  406f8b:	push   es
  406f8c:	add    BYTE PTR [ebx],cl
  406f8e:	out    dx,eax
  406f8f:	push   es
  406f90:	add    BYTE PTR [edi+ecx*2+0x7],dl
  406f94:	add    ch,bl
  406f96:	lock push es
  406f98:	add    BYTE PTR [edi-0x33fff8c1],al
  406f9e:	lock push es
  406fa0:	add    BYTE PTR [esi+0x2f],dh
  406fa3:	pop    es
  406fa4:	add    BYTE PTR [edi+0x530006f0],bh
  406faa:	pop    ds
  406fab:	pop    es
  406fac:	add    BYTE PTR [ebx+0x420006f0],dl
  406fb2:	dec    edi
  406fb3:	pop    es
  406fb4:	add    BYTE PTR [edx-0x6afff910],al
  406fba:	cmp    BYTE PTR [edi],al
  406fbc:	add    BYTE PTR [ebp-0x11],cl
  406fbf:	push   es
  406fc0:	add    BYTE PTR [eax+ebp*1-0x10c3fff9],al
  406fc7:	push   es
  406fc8:	add    BYTE PTR [eax],al
  406fca:	fs mov al,0xff
  406fcd:	jmp    DWORD PTR [ebx+ecx*1]
  406fd0:	add    BYTE PTR [eax],al
  406fd2:	jne    0x406f84
  406fd4:	(bad)  
  406fd5:	jmp    DWORD PTR ds:0xba00000a
  406fdb:	scas   eax,DWORD PTR es:[edi]
  406fdc:	(bad)  
  406fdd:	(bad)  
  406fde:	jmp    0xffaf:0xab00000a
  406fe5:	(bad)  
  406fe6:	sti    
  406fe7:	or     al,BYTE PTR [eax]
  406fe9:	add    al,bh
  406feb:	scas   eax,DWORD PTR es:[edi]
  406fec:	(bad)  
  406fed:	inc    DWORD PTR [eax]
  406fef:	add    BYTE PTR [eax],al
  406ff1:	call   0xe9407000
  406ff6:	scas   eax,DWORD PTR es:[edi]
  406ff7:	(bad)  
  406ff8:	(bad)  
  406ff9:	stc    
  406ffa:	or     al,BYTE PTR [eax]
  406ffc:	add    BYTE PTR [esi-0x50],bh
  406fff:	(bad)  
  407000:	jmp    FWORD PTR [esi]
  407002:	or     BYTE PTR [eax],al
  407004:	add    BYTE PTR [edi-0x50],ch
  407007:	(bad)  
  407008:	jmp    FWORD PTR [edi]
  40700a:	or     BYTE PTR [eax],al
  40700c:	add    BYTE PTR [edi+ebp*4-0x1],bh
  407010:	jmp    FWORD PTR [eax+ecx*1]
  407013:	add    BYTE PTR [eax],al
  407015:	ins    DWORD PTR es:[edi],dx
  407016:	mov    al,0xff
  407018:	jmp    FWORD PTR [ebp+0x52000007]
  40701e:	mov    al,0xff
  407020:	inc    DWORD PTR [edx+0x23000007]
  407026:	mov    al,0xff
  407028:	push   DWORD PTR [ebx+0x7]
  40702b:	add    BYTE PTR [eax],al
  40702d:	xor    al,0xb0
  40702f:	(bad)  
  407030:	(bad)  
  407031:	cmp    cl,BYTE PTR [eax]
  407033:	add    BYTE PTR [eax],al
  407035:	in     eax,0xaf
  407037:	(bad)  
  407038:	jmp    FWORD PTR [ebx]
  40703a:	or     BYTE PTR [eax],al
  40703c:	add    BYTE PTR [edx-0x50],cl
  40703f:	(bad)  
  407040:	(bad)  
  407041:	cmp    BYTE PTR [ebx],cl
  407043:	add    BYTE PTR [eax],al
  407045:	repz sahf 
  407047:	pop    edx
  407048:	add    bl,dh
  40704a:	mov    al,0x3
  40704c:	add    bl,dh
  40704e:	lahf   
  40704f:	pop    edx
  407050:	add    bl,dh
  407052:	sbb    DWORD PTR [eax+eax*1],eax
  407055:	add    BYTE PTR [eax],al
  407057:	add    bl,dh
  407059:	mov    al,ds:0x1af3005a
  40705e:	add    al,0x0
  407060:	repz mov eax,ds:0xfbf3005a
  407066:	add    eax,DWORD PTR [eax]
  407068:	repz mov ds:0xfcf3005a,al
  40706e:	add    eax,DWORD PTR [eax]
  407070:	repz mov ds:0x5f3005a,eax
  407076:	add    al,0x0
  407078:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40707a:	pop    edx
  40707b:	add    bl,dh
  40707d:	push   esi
  40707e:	add    eax,DWORD PTR [eax]
  407080:	repz adc eax,0x67f3005a
  407086:	add    eax,DWORD PTR [eax]
  407088:	repz es pop edx
  40708b:	add    bl,dh
  40708d:	cmp    BYTE PTR [ebx],al
  40708f:	add    bl,dh
  407091:	pop    ss
  407092:	pop    edx
  407093:	add    bl,dh
  407095:	xchg   ecx,eax
  407096:	add    eax,DWORD PTR [eax]
  407098:	repz and al,0x5a
  40709b:	add    bl,dh
  40709d:	mov    ds:0x1bf30003,al
  4070a2:	pop    edx
  4070a3:	add    bl,dh
  4070a5:	jno    0x4070aa
  4070a7:	add    bl,dh
  4070a9:	sub    bl,BYTE PTR [edx+0x0]
  4070ac:	repz add BYTE PTR [ebx],0x0
  4070b0:	repz sbb DWORD PTR [edx+0x0],ebx
  4070b4:	repz fild WORD PTR [edx]
  4070b7:	add    bl,dh
  4070b9:	sub    BYTE PTR [edx+0x0],bl
  4070bc:	add    BYTE PTR [eax],al
  4070be:	add    bl,dh
  4070c0:	fiadd  WORD PTR [edx]
  4070c2:	add    bl,dh
  4070c4:	push   es
  4070c5:	mov    ecx,0x6b06f359
  4070ca:	add    al,0xf3
  4070cc:	push   es
  4070cd:	mov    eax,0x6a06f359
  4070d2:	add    al,0xf3
  4070d4:	push   es
  4070d5:	fwait
  4070d6:	pop    ecx
  4070d7:	repz push es
  4070d9:	gs add al,0xf3
  4070dc:	push   es
  4070dd:	call   0xf304:0x6406f359
  4070e4:	push   es
  4070e5:	mov    ebp,0x6706f359
  4070ea:	add    al,0xf3
  4070ec:	push   es
  4070ed:	mov    esp,0x6606f359
  4070f2:	add    al,0xf3
  4070f4:	push   es
  4070f5:	mov    BYTE PTR [ecx-0xd],bl
  4070f8:	push   es
  4070f9:	dec    ecx
  4070fa:	add    al,0xf3
  4070fc:	push   es
  4070fd:	mov    ebx,DWORD PTR [ecx-0xd]
  407100:	push   es
  407101:	dec    eax
  407102:	add    al,0xf3
  407104:	push   es
  407105:	dec    edx
  407106:	pop    ecx
  407107:	repz push es
  407109:	mov    eax,DWORD PTR [ebx+esi*8]
  40710c:	push   es
  40710d:	dec    ebp
  40710e:	pop    ecx
  40710f:	repz push es
  407111:	mov    al,BYTE PTR [ebx]
  407113:	repz push es
  407115:	push   eax
  407116:	pop    ecx
  407117:	repz push es
  407119:	test   DWORD PTR [ebx+esi*8],eax
  40711c:	push   es
  40711d:	inc    ebx
  40711e:	pop    ecx
  40711f:	repz push es
  407121:	test   BYTE PTR [ebx],al
  407123:	add    BYTE PTR [eax],al
  407125:	add    bl,dh
  407127:	push   es
  407128:	adc    bl,BYTE PTR [ecx-0xd]
  40712b:	push   es
  40712c:	ret    0xf303
  40712f:	push   es
  407130:	add    eax,0xad06f359
  407135:	add    esi,ebx
  407137:	push   es
  407138:	mov    ds,WORD PTR [eax-0xd]
  40713b:	push   es
  40713c:	pushf  
  40713d:	add    esi,ebx
  40713f:	push   es
  407140:	add    al,ch
  407142:	icebp  
  407143:	pop    es
  407144:	add    eax,ebp
  407146:	icebp  
  407147:	pop    es
  407148:	add    eax,ebp
  40714a:	icebp  
  40714b:	pop    es
  40714c:	add    eax,ebp
  40714e:	icebp  
  40714f:	pop    es
  407150:	add    ebp,edx
  407152:	icebp  
  407153:	pop    es
  407154:	add    eax,ebp
  407156:	icebp  
  407157:	pop    es
  407158:	add    eax,ebp
  40715a:	out    dx,al
  40715b:	pop    es
  40715c:	add    ebx,ebp
  40715e:	test   BYTE PTR [edx+eax*1],0xeb
  407162:	out    dx,al
  407163:	add    al,0x2
  407165:	jmp    0x4071c3
  407167:	add    eax,0x4eeeb04
  40716c:	add    al,0xeb
  40716e:	test   BYTE PTR [edx+eax*1],0xeb
  407172:	out    dx,al
  407173:	or     al,BYTE PTR [eiz*8-0x12fdfb0a]
  40717a:	out    dx,al
  40717b:	add    al,0x2
  40717d:	jmp    0x407175
  40717f:	add    al,0x4
  407181:	in     eax,dx
  407182:	and    al,0x7
  407184:	add    ch,bl
  407186:	sbb    al,0x6
  407188:	add    eax,ebp
  40718a:	add    BYTE PTR [eax],al
  40718c:	add    cl,dh
  40718e:	pop    es
  40718f:	add    esp,esp
  407191:	or     eax,0xefe92126
  407196:	add    eax,0x5f7ea06
  40719b:	add    ebp,edx
  40719d:	out    dx,eax
  40719e:	add    eax,0x3f7ea03
  4071a3:	add    eax,0x309efea
  4071a8:	jmp    0x5f1:0xe80303f7
  4071af:	add    ebp,eax
  4071b1:	test   DWORD PTR ds:0x5efe803,0x5f7e801
  4071bb:	add    BYTE PTR [eax],al
  4071bd:	retf   0x4
  4071c0:	add    BYTE PTR [edx-0x65fffffc],bl
  4071c6:	add    al,0x0
  4071c8:	add    BYTE PTR [edx-0x75fffffc],cl
  4071ce:	add    al,0x0
  4071d0:	add    BYTE PTR [edx-0x65fffffc],bl
  4071d6:	add    al,0x0
  4071d8:	add    BYTE PTR [edx-0x75fffffc],cl
  4071de:	sub    eax,DWORD PTR [eax]
  4071e0:	and    esi,esi
  4071e2:	and    eax,0x45a2726
  4071e7:	sub    ch,BYTE PTR [ebx]
  4071e9:	dec    edx
  4071ea:	pop    ds
  4071eb:	add    BYTE PTR cs:[edx],bh
  4071ee:	sti    
  4071ef:	xor    DWORD PTR [ebx],esi
  4071f1:	add    BYTE PTR [eax],al
  4071f3:	add    BYTE PTR [esi],ah
  4071f5:	div    DWORD PTR ds:0xfff32237
  4071fb:	dec    DWORD PTR [edx+0x4]
  4071fe:	add    BYTE PTR [eax],al
  407200:	dec    edx
  407201:	imul   esp,DWORD PTR [ecx+0x63],0xfffffff6
  407205:	gs gs addr16 repnz popa 
  40720a:	imul   ebp,DWORD PTR [ebx+0x1e],0x3a6f6d5f
  407211:	cmp    esi,DWORD PTR [ecx+0x73]
  407214:	es aaa 
  407216:	jne    0x40728f
  407218:	and    dh,BYTE PTR [ebx]
  40721a:	jns    0x40721c
  40721c:	or     al,BYTE PTR [esi+ebx*2]
  40721f:	pop    edi
  407220:	sub    ch,BYTE PTR [ebx+0x61]
  407223:	arpl   WORD PTR [esi-0x4d989a9a],si
  407229:	bound  ebp,QWORD PTR [ecx+0x6b]
  40722c:	sahf   
  40722d:	pop    esi
  40722e:	ins    DWORD PTR es:[edi],dx
  40722f:	outs   dx,DWORD PTR ds:[esi]
  407230:	jp     0x40726c
  407232:	jno    0x4072a7
  407234:	data16 ss jne 0x4072af
  407238:	repz jne 0x407217
  40723b:	jns    0x407230
  40723d:	add    DWORD PTR [ebx],0x35df37e
  407243:	add    bl,dh
  407245:	pop    ebp
  407246:	add    eax,DWORD PTR [eax]
  407248:	repz pop ebp
  40724a:	add    eax,DWORD PTR [eax]
  40724c:	repz pop ebp
  40724e:	add    eax,DWORD PTR [eax]
  407250:	repz pop ebp
  407252:	add    eax,DWORD PTR [eax]
  407254:	repz pop ebp
  407256:	add    eax,DWORD PTR [eax]
  407258:	add    BYTE PTR [eax],al
  40725a:	add    bl,dh
  40725c:	pop    ebp
  40725d:	add    eax,DWORD PTR [eax]
  40725f:	repz pop ebp
  407261:	add    eax,DWORD PTR [eax]
  407263:	repz pop ebp
  407265:	add    eax,DWORD PTR [eax]
  407267:	repz pop ebp
  407269:	add    eax,DWORD PTR [eax]
  40726b:	repz pop ebp
  40726d:	add    eax,DWORD PTR [eax]
  40726f:	repz pop ebp
  407271:	add    eax,DWORD PTR [eax]
  407273:	repz pop ebp
  407275:	add    eax,DWORD PTR [eax]
  407277:	repz pop ebp
  407279:	add    eax,DWORD PTR [eax]
  40727b:	repz pop ebp
  40727d:	add    eax,DWORD PTR [eax]
  40727f:	repz pop ebp
  407281:	add    eax,DWORD PTR [eax]
  407283:	repz pop ebp
  407285:	add    eax,DWORD PTR [eax]
  407287:	repz pop ebp
  407289:	add    eax,DWORD PTR [eax]
  40728b:	repz pop ebp
  40728d:	add    eax,DWORD PTR [eax]
  40728f:	repz pop ebp
  407291:	add    eax,DWORD PTR [eax]
  407293:	repz pop ebp
  407295:	add    eax,DWORD PTR [eax]
  407297:	repz pop ebp
  407299:	add    eax,DWORD PTR [eax]
  40729b:	repz pop ebp
  40729d:	add    eax,DWORD PTR [eax]
  40729f:	repz pop ebp
  4072a1:	add    eax,DWORD PTR [eax]
  4072a3:	repz pop ebp
  4072a5:	add    eax,DWORD PTR [eax]
  4072a7:	repz pop edi
  4072a9:	add    eax,DWORD PTR [eax]
  4072ab:	repz pop edi
  4072ad:	add    eax,DWORD PTR [eax]
  4072af:	repz pop edi
  4072b1:	add    eax,DWORD PTR [eax]
  4072b3:	repz push es
  4072b5:	jmp    0xe94765bd
  4072ba:	add    esi,ebx
  4072bc:	push   es
  4072bd:	jmp    0x4072c5
  4072c2:	repz push es
  4072c4:	jmp    0x64765cc
  4072c9:	push   esi
  4072ca:	lods   al,BYTE PTR ds:[esi]
  4072cb:	dec    esi
  4072cc:	(bad)  
  4072cd:	push   ebp
  4072ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072cf:	dec    esi
  4072d0:	not    BYTE PTR [ebp-0x64]
  4072d3:	dec    esi
  4072d4:	out    dx,al
  4072d5:	push   ebp
  4072d6:	xchg   esp,eax
  4072d7:	dec    esi
  4072d8:	out    0x55,al
  4072da:	mov    WORD PTR [esi-0x22],cs
  4072dd:	push   ebp
  4072de:	test   BYTE PTR [esi-0x2a],cl
  4072e1:	push   ebp
  4072e2:	jl     0x407332
  4072e4:	into   
  4072e5:	push   ebp
  4072e6:	je     0x407336
  4072e8:	(bad)  
  4072e9:	push   ebp
  4072ea:	ins    BYTE PTR es:[edi],dx
  4072eb:	dec    esi
  4072ec:	mov    esi,0xb64e6455
  4072f1:	push   ebp
  4072f2:	pop    esp
  4072f3:	dec    esi
  4072f4:	scas   al,BYTE PTR es:[edi]
  4072f5:	push   ebp
  4072f6:	push   esp
  4072f7:	dec    esi
  4072f8:	jmp    0xe54a63ff
  4072fd:	(bad)  
  4072fe:	out    dx,al
  4072ff:	add    eax,0x4e3c0ae1
  407304:	mov    ss,WORD PTR [ebp+0x34]
  407307:	dec    esi
  407308:	xchg   BYTE PTR [edx],cl
  40730a:	clc    
  40730b:	cli    
  40730c:	jmp    0x407313
  40730e:	hlt    
  40730f:	dec    ebp
  407310:	jbe    0x407367
  407312:	sbb    al,0x4e
  407314:	outs   dx,BYTE PTR ds:[esi]
  407315:	push   ebp
  407316:	adc    al,0x4e
  407318:	push   bp
  40731a:	or     al,0x4e
  40731c:	pop    esi
  40731d:	push   ebp
  40731e:	add    al,0x4e
  407320:	push   esi
  407321:	push   ebp
  407322:	cld    
  407323:	dec    ebp
  407324:	dec    esi
  407325:	push   ebp
  407326:	add    BYTE PTR [eax],al
  407328:	add    ah,dh
  40732a:	dec    ebp
  40732b:	inc    esi
  40732c:	or     bh,al
  40732e:	cli    
  40732f:	jmp    0x407336
  407331:	hlt    
  407332:	dec    ebp
  407333:	add    BYTE PTR [esi],dh
  407335:	inc    esi
  407336:	dec    esi
  407337:	jmp    FWORD PTR [esi]
  407339:	ds dec esi
  40733b:	jmp    DWORD PTR [esi]
  40733d:	es dec esi
  40733f:	call   FWORD PTR [esi]
  407341:	push   ds
  407342:	dec    esi
  407343:	call   DWORD PTR [esi]
  407345:	es dec esi
  407347:	dec    DWORD PTR [esi]
  407349:	push   ds
  40734a:	dec    esi
  40734b:	(bad)  
  40734c:	jmp    0xe9407a41
  407351:	lock push es
  407353:	add    cl,ch
  407355:	lock push es
  407357:	add    cl,ch
  407359:	lock push es
  40735b:	add    cl,ch
  40735d:	lock push es
  40735f:	add    cl,ch
  407361:	lock push es
  407363:	add    cl,ch
  407365:	lock push es
  407367:	add    cl,ch
  407369:	lock push es
  40736b:	add    cl,ch
  40736d:	lock push es
  40736f:	add    cl,ch
  407371:	lock push es
  407373:	add    cl,ch
  407375:	lock push es
  407377:	add    cl,ch
  407379:	lock push es
  40737b:	add    cl,ch
  40737d:	lock push es
  40737f:	add    cl,ch
  407381:	lock push es
  407383:	add    cl,ch
  407385:	lock push es
  407387:	add    cl,ch
  407389:	lock push es
  40738b:	add    cl,ch
  40738d:	add    BYTE PTR [eax],al
  40738f:	add    al,dh
  407391:	push   es
  407392:	add    cl,ch
  407394:	lock push es
  407396:	add    cl,ch
  407398:	lock push es
  40739a:	add    cl,ch
  40739c:	lock push es
  40739e:	add    cl,ch
  4073a0:	lock push es
  4073a2:	add    cl,ch
  4073a4:	lock push es
  4073a6:	add    cl,ch
  4073a8:	lock push es
  4073aa:	add    cl,ch
  4073ac:	lock push es
  4073ae:	add    BYTE PTR [eax],al
  4073b0:	fimul  DWORD PTR [eax]
  4073b2:	add    BYTE PTR [eax],al
  4073b4:	fimul  DWORD PTR [eax]
  4073b6:	add    BYTE PTR [eax],al
  4073b8:	retf   0x8
  4073bb:	add    dl,cl
  4073bd:	or     BYTE PTR [eax],al
  4073bf:	add    dl,bl
  4073c1:	or     BYTE PTR [eax],al
  4073c3:	add    dl,bl
  4073c5:	or     BYTE PTR [eax],al
  4073c7:	add    dl,cl
  4073c9:	or     BYTE PTR [eax],al
  4073cb:	add    dl,cl
  4073cd:	or     BYTE PTR [eax],al
  4073cf:	add    BYTE PTR [edx-0x65fffff8],bl
  4073d5:	or     BYTE PTR [eax],al
  4073d7:	add    BYTE PTR [edx-0x75fffff8],cl
  4073dd:	or     BYTE PTR [eax],al
  4073df:	add    BYTE PTR [edx-0x65fffff8],bl
  4073e5:	or     BYTE PTR [eax],al
  4073e7:	add    BYTE PTR [edx-0x75fffff8],cl
  4073ed:	or     BYTE PTR [eax],al
  4073ef:	add    BYTE PTR [edx+0x3],bl
  4073f2:	add    DWORD PTR [eax],eax
  4073f4:	add    BYTE PTR [eax],al
  4073f6:	add    BYTE PTR [ebx+0x3],bl
  4073f9:	add    DWORD PTR [ecx],eax
  4073fb:	dec    ebx
  4073fc:	add    eax,DWORD PTR [ecx]
  4073fe:	add    DWORD PTR [ebx+0x3],ecx
  407401:	add    DWORD PTR [ecx],eax
  407403:	pop    ebx
  407404:	add    eax,DWORD PTR [ecx]
  407406:	add    DWORD PTR [ebx+0x3],ebx
  407409:	add    DWORD PTR [ecx],eax
  40740b:	dec    ebx
  40740c:	add    eax,DWORD PTR [ecx]
  40740e:	add    DWORD PTR [ebx+0x3],ecx
  407411:	add    DWORD PTR [eax],eax
  407413:	sbb    eax,DWORD PTR [ebx]
  407415:	add    DWORD PTR [ecx],eax
  407417:	sbb    eax,DWORD PTR [ebx]
  407419:	add    DWORD PTR [ecx],eax
  40741b:	or     eax,DWORD PTR [ebx]
  40741d:	add    DWORD PTR [ecx],eax
  40741f:	or     eax,DWORD PTR [ebx]
  407421:	add    DWORD PTR [ecx],eax
  407423:	sbb    eax,DWORD PTR [ebx]
  407425:	add    DWORD PTR [ecx],eax
  407427:	sbb    eax,DWORD PTR [ebx]
  407429:	add    DWORD PTR [ecx],eax
  40742b:	repz pop esi
  40742d:	add    al,0x1
  40742f:	repnz pop esi
  407431:	add    al,0x1
  407433:	repnz pop esi
  407435:	add    al,0x1
  407437:	repnz pop esi
  407439:	add    al,0x1
  40743b:	repnz pop esi
  40743d:	add    al,0x1
  40743f:	repnz pop esi
  407441:	add    al,0x1
  407443:	repnz pop esi
  407445:	add    al,0x1
  407447:	repnz pop esi
  407449:	add    al,0x1
  40744b:	repnz pop esi
  40744d:	add    al,0x1
  40744f:	repnz pop esi
  407451:	add    al,0x1
  407453:	repz pop ebp
  407455:	add    eax,DWORD PTR [eax]
  407457:	repz pop ebp
  407459:	add    eax,DWORD PTR [eax]
  40745b:	add    BYTE PTR [eax],al
  40745d:	add    bl,dh
  40745f:	pop    ebp
  407460:	add    eax,DWORD PTR [eax]
  407462:	repz pop ebp
  407464:	add    eax,DWORD PTR [eax]
  407466:	repz pop ebp
  407468:	add    eax,DWORD PTR [eax]
  40746a:	repz pop ebp
  40746c:	add    eax,DWORD PTR [eax]
  40746e:	repz pop ebp
  407470:	add    eax,DWORD PTR [eax]
  407472:	repz pop ebp
  407474:	add    eax,DWORD PTR [eax]
  407476:	repz pop ebp
  407478:	add    eax,DWORD PTR [eax]
  40747a:	repz pop ebp
  40747c:	add    eax,DWORD PTR [eax]
  40747e:	repz pop ebp
  407480:	add    eax,DWORD PTR [eax]
  407482:	repz pop ebp
  407484:	add    eax,DWORD PTR [eax]
  407486:	repz pop ebp
  407488:	add    eax,DWORD PTR [eax]
  40748a:	repz pop ebp
  40748c:	add    eax,DWORD PTR [eax]
  40748e:	repz pop ebp
  407490:	add    eax,DWORD PTR [eax]
  407492:	repz pop ebp
  407494:	add    eax,DWORD PTR [eax]
  407496:	repz pop ebp
  407498:	add    eax,DWORD PTR [eax]
  40749a:	repz pop ebp
  40749c:	add    eax,DWORD PTR [eax]
  40749e:	repz pop ebp
  4074a0:	add    eax,DWORD PTR [eax]
  4074a2:	repz pop ebp
  4074a4:	add    eax,DWORD PTR [eax]
  4074a6:	repz push es
  4074a8:	jmp    0xe94767b0
  4074ad:	add    esi,ebx
  4074af:	push   es
  4074b0:	jmp    0xe94767b8
  4074b5:	add    esi,ebx
  4074b7:	push   es
  4074b8:	jmp    0xe94767c0
  4074bd:	add    esi,ebx
  4074bf:	push   es
  4074c0:	jmp    0x4074c8
  4074c5:	repz push es
  4074c7:	jmp    0xe94767cf
  4074cc:	add    esi,ebx
  4074ce:	push   es
  4074cf:	jmp    0xe94767d7
  4074d4:	add    esi,ebx
  4074d6:	push   es
  4074d7:	jmp    0x594767df
  4074dc:	enter  0x8565,0x64
  4074e0:	lahf   
  4074e1:	out    0x56,al
  4074e3:	popa   
  4074e4:	sub    eax,0xf79245b0
  4074e9:	ret    0xa89f
  4074ec:	adc    eax,eax
  4074ee:	add    ecx,DWORD PTR [esi]
  4074f0:	ret    0x4197
  4074f3:	int3   
  4074f4:	in     eax,0x86
  4074f6:	aad    0xb0
  4074f8:	fld    DWORD PTR [edx+0x64b779c7]
  4074fe:	dec    edx
  4074ff:	bound  ebx,QWORD PTR [edi+0xf]
  407502:	cs popa 
  407504:	pop    ebx
  407505:	inc    ebp
  407506:	scas   al,BYTE PTR es:[edi]
  407507:	dec    eax
  407508:	mov    edx,0x52693da5
  40750d:	(bad)  
  40750e:	cmp    al,0x36
  407510:	jle    0x4074bd
  407512:	push   edx
  407513:	xchg   esi,eax
  407514:	mov    esp,cs
  407516:	loopne 0x4074c7
  407518:	repnz call 0x6d34:0x968cb96f
  407520:	enter  0xe84c,0xff
  407524:	adc    DWORD PTR [edx+0x99001a],eax
  40752a:	add    BYTE PTR [eax],al
  40752c:	lock push es
  40752e:	add    BYTE PTR [ecx-0x17],bh
  407531:	push   0x36
  407533:	mov    ecx,ebx
  407535:	sahf   
  407536:	ss test ecx,ebx
  407539:	xchg   edx,eax
  40753a:	lea    ecx,ss:[ecx]
  40753d:	icebp  
  40753e:	jo     0x4074d3
  407540:	mov    ds:0x2408fed,al
  407545:	pop    ss
  407546:	retf   0x4672
  407549:	test   BYTE PTR [ebx+0x49a55800],dh
  40754f:	popa   
  407550:	and    eax,0x7415a7a0
  407555:	mov    WORD PTR [edi-0x3b],ss
  407558:	fist   DWORD PTR [edx]
  40755a:	aaa    
  40755b:	int    0xb
  40755d:	ret    
  40755e:	ss mov ch,0xb
  407561:	mov    bl,0x36
  407563:	popf   
  407564:	sti    
  407565:	loop   0x40759d
  407567:	test   ebx,edi
  407569:	shl    BYTE PTR [ecx-0x48],cl
  40756c:	xor    al,0xa5
  40756e:	inc    edi
  40756f:	jge    0x4075a2
  407571:	xlat   BYTE PTR ds:[ebx]
  407572:	inc    ebx
  407573:	std    
  407574:	xchg   esp,eax
  407575:	gs int 0x25
  407578:	dec    ebx
  407579:	adc    al,0x44
  40757b:	popa   
  40757c:	mov    eax,ds:0xc68477e2
  407581:	nop
  407582:	mov    eax,0x3762fb6a
  407587:	(bad)  
  40758a:	aaa    
  40758b:	lods   eax,DWORD PTR ds:[esi]
  40758c:	jmp    0x407590
  40758e:	cmp    ch,dh
  407590:	add    BYTE PTR [eax],al
  407592:	add    al,bh
  407594:	repnz aaa 
  407596:	std    
  407597:	call   0xe34aadbe
  40759c:	dec    eax
  40759d:	and    eax,0xb0f79599
  4075a2:	add    BYTE PTR [edi-0x63],al
  4075a5:	cmp    bl,BYTE PTR [ecx]
  4075a7:	xchg   esi,eax
  4075a8:	push   cs
  4075a9:	sti    
  4075aa:	call   0xa173:0x2d1b56b8
  4075b1:	sar    esi,1
  4075b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075b4:	dec    ebp
  4075b5:	xchg   ebx,eax
  4075b6:	cmp    BYTE PTR [esi-0x3],bh
  4075b9:	mov    ds:0xb3fd6e38,eax
  4075be:	cmp    BYTE PTR [esi-0x4],bh
  4075c1:	ret    
  4075c2:	cmp    BYTE PTR [esi],bl
  4075c4:	cld    
  4075c5:	sar    DWORD PTR [eax],cl
  4075c7:	(bad)  
  4075c8:	mov    ah,0xa
  4075ca:	lea    edi,[edx]
  4075cc:	out    dx,eax
  4075cd:	jmp    0x40754f
  4075cf:	adc    ch,dh
  4075d1:	or     al,0x5e
  4075d3:	stos   BYTE PTR es:[edi],al
  4075d4:	xchg   ebx,eax
  4075d5:	push   ds
  4075d6:	imul   esi,DWORD PTR [ebp-0x10],0xffffffa6
  4075da:	enter  0x3fec,0xdc
  4075de:	lods   al,BYTE PTR ds:[esi]
  4075df:	mov    al,ds:0x5e392028
  4075e4:	std    
  4075e5:	push   ebx
  4075e6:	cmp    DWORD PTR [esi-0x3],edi
  4075e9:	arpl   WORD PTR [ecx],di
  4075eb:	outs   dx,BYTE PTR ds:[esi]
  4075ec:	std    
  4075ed:	jae    0x407628
  4075ef:	push   ds
  4075f0:	std    
  4075f1:	cmp    DWORD PTR [ecx],0xfffffffe
  4075f4:	stc    
  4075f5:	push   ecx
  4075f6:	fiadd  WORD PTR [eax]
  4075f8:	add    BYTE PTR [eax],al
  4075fa:	mov    al,ds:0xfecc8b18
  4075ff:	jmp    0xe3f:0xfa6fcc74
  407606:	test   al,0xca
  407608:	pop    ss
  407609:	jae    0x407640
  40760b:	push   esp
  40760c:	pop    ecx
  40760d:	icebp  
  40760e:	mov    dh,0x67
  407610:	or     edi,DWORD PTR [ebp-0x62]
  407613:	cli    
  407614:	add    edi,DWORD PTR [edx]
  407616:	ds (bad) 
  407618:	adc    edi,DWORD PTR [edx]
  40761a:	ds (bad) 
  40761c:	and    edi,DWORD PTR [edx]
  40761e:	repz inc ecx
  407620:	or     DWORD PTR [ecx+ebp*8],esi
  407623:	cmp    DWORD PTR [ecx],ecx
  407625:	inc    esp
  407626:	and    edi,DWORD PTR [esi+0x12]
  407629:	dec    esi
  40762a:	call   0xa7a30db6
  40762f:	clc    
  407630:	sbb    al,0x6d
  407632:	mov    eax,0xcd193739
  407637:	cld    
  407638:	loope  0x40768a
  40763a:	adc    ebp,ebp
  40763c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40763d:	add    esi,esi
  40763f:	ret    0xb409
  407642:	sub    DWORD PTR [edx+0xa],edi
  407645:	les    ebp,FWORD PTR [ecx]
  407647:	adc    cl,BYTE PTR [edx]
  407649:	aam    0x19
  40764b:	jmp    0xf409:0xc219e409
  407652:	or     DWORD PTR [ebx],edi
  407654:	pop    ebp
  407655:	sbb    BYTE PTR [esi-0x45b90d8a],ch
  40765b:	retf   
  40765c:	jmp    0x407655
  40765e:	add    BYTE PTR [eax],al
  407660:	add    dh,ah
  407662:	(bad)
  407666:	neg    eax
  407668:	xchg   ebx,eax
  407669:	inc    edi
  40766a:	dec    esp
  40766b:	and    al,0x2c
  40766d:	adc    dl,BYTE PTR [edx-0x1f]
  407670:	arpl   ax,bx
  407672:	or     DWORD PTR [edx],0x9d9c874
  407678:	test   al,cl
  40767a:	ror    DWORD PTR [ecx],1
  40767c:	xchg   esp,eax
  40767d:	mov    eax,0xb8a409c9
  407682:	or     DWORD PTR [ebx-0x53],0x823316fd
  407689:	fstp   QWORD PTR [ebp+0x19]
  40768c:	jl     0x407614
  40768e:	jmp    0xbd96:0xd865fb9c
  407695:	out    0x56,al
  407697:	ret    
  407698:	imul   ebp,eax,0xae481f06
  40769e:	or     bh,ch
  4076a0:	(bad)  
  4076a1:	ud2    
  4076a3:	lds    ecx,FWORD PTR [edi]
  4076a5:	out    0xa,eax
  4076a7:	int    0xf
  4076a9:	scas   eax,DWORD PTR es:[edi]
  4076aa:	or     dh,BYTE PTR ds:0x1d0ac710
  4076b0:	adc    BYTE PTR [esi],cl
  4076b2:	or     BYTE PTR [edi],ah
  4076b4:	xchg   esi,eax
  4076b5:	mov    edi,0xe36e25c6
  4076ba:	pop    ds
  4076bb:	or     edx,DWORD PTR [ecx-0x4aba0c]
  4076c1:	cmp    eax,DWORD PTR [ebx]
  4076c3:	(bad)  
  4076c4:	mov    al,BYTE PTR [eax]
  4076c6:	add    BYTE PTR [eax],al
  4076c8:	call   0x8749fdb5
  4076cd:	iret   
  4076ce:	and    BYTE PTR [edi],cl
  4076d0:	xlat   BYTE PTR ds:[ebx]
  4076d1:	add    edi,DWORD PTR [ecx]
  4076d3:	(bad)  
  4076d5:	add    eax,DWORD PTR ds:0xed040711
  4076db:	adc    BYTE PTR [edi],ch
  4076dd:	add    al,0xb5
  4076df:	adc    BYTE PTR [edi],ah
  4076e1:	(bad)  
  4076e2:	fsubr  QWORD PTR [esi-0x18d27fd4]
  4076e8:	sub    bl,BYTE PTR [ebx+0xaf2fd53]
  4076ee:	loopne 0x4076a4
  4076f0:	or     eax,0xcdd09411
  4076f5:	ror    DWORD PTR [esi-0xfbd8e19],cl
  4076fb:	imul   eax,DWORD PTR [esi*4-0x42fb58f1]
  407703:	jg     0x6d14600d
  407709:	inc    esi
  40770a:	adc    DWORD PTR [ebx+esi*8],eax
  40770d:	push   es
  40770e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40770f:	jb     0x407777
  407711:	pop    edx
  407712:	loopne 0x407773
  407714:	ss inc esi
  407716:	add    bl,ah
  407718:	lea    eax,[ebp+0x3c]
  40771b:	xchg   ebp,eax
  40771c:	mov    DWORD PTR [eax-0x194eb01c],eax
  407722:	or     cl,dh
  407724:	(bad)  
  407725:	jmp    0x4535:0x5213dbd1
  40772c:	add    BYTE PTR [eax],al
  40772e:	add    ch,bh
  407730:	outs   dx,BYTE PTR ds:[esi]
  407731:	ss push ebp
  407733:	add    eax,0xfd353677
  407738:	dec    edx
  407739:	cmp    BYTE PTR [ecx+0x71383aff],ah
  40773f:	mov    ch,0x8c
  407741:	pop    eax
  407742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407743:	fimul  WORD PTR [eax+eiz*2]
  407746:	icebp  
  407747:	sbb    eax,0x930de6bf
  40774c:	out    dx,eax
  40774d:	xchg   ebp,edi
  40774f:	ja     0x40770d
  407751:	rol    DWORD PTR [ecx],0x47
  407754:	stc    
  407755:	cmp    al,0x41
  407757:	(bad)  
  407759:	cmp    ebp,esp
  40775b:	cli    
  40775c:	pop    edx
  40775d:	cmp    dl,BYTE PTR [ecx]
  40775f:	stc    
  407760:	bound  edi,QWORD PTR [edx]
  407762:	or     ecx,ebp
  407764:	sub    bh,BYTE PTR [edx]
  407766:	sbb    ecx,ebp
  407768:	cmp    bh,BYTE PTR [edx]
  40776a:	adc    ecx,edi
  40776c:	les    edi,FWORD PTR [ebp+0x44]
  40776f:	jno    0x4077bc
  407771:	call   0x6342bd08
  407776:	js     0x40777e
  407778:	pop    edi
  407779:	fnsave [ebp+0x74aadc0c]
  40777f:	or     al,0xec
  407781:	adc    eax,0x5c705a5e
  407786:	jno    0x407773
  407788:	xchg   edx,eax
  407789:	cmp    edi,DWORD PTR [ecx-0x5]
  40778c:	call   0x3b:0x7efb713b
  407793:	add    BYTE PTR [eax],al
  407795:	add    BYTE PTR [esi+0xe],dh
  407798:	sar    BYTE PTR [ebx],0x92
  40779b:	push   cs
  40779c:	in     al,0xfd
  40779e:	push   ebp
  40779f:	imul   edx,DWORD PTR [eax+0x6ad3cf66],0xffffffa3
  4077a6:	pop    esi
  4077a7:	adc    eax,0x2b8d859
  4077ac:	adc    cl,BYTE PTR [eax+edx*4+0x3a]
  4077b0:	pop    es
  4077b1:	aas    
  4077b2:	xchg   edi,eax
  4077b3:	shl    ebp,1
  4077b5:	jae    0x4077f4
  4077b7:	adc    al,0x24
  4077b9:	cmp    eax,0xffffb90a
  4077be:	test   BYTE PTR [edx],0x0
  4077c1:	add    BYTE PTR [esi],dl
  4077c3:	sbb    eax,0x1d8e3480
  4077c8:	mov    BYTE PTR [esi*1-0x66030d1d],dh
  4077cf:	xchg   esp,eax
  4077d0:	iret   
  4077d1:	outs   dx,DWORD PTR ds:[esi]
  4077d2:	imul   edi,DWORD PTR [ebx],0x10
  4077d5:	(bad)  
  4077d6:	sbb    eax,0x37a056c8
  4077db:	and    DWORD PTR [edx+0x66],esi
  4077de:	add    al,0x7
  4077e0:	xor    bl,ch
  4077e2:	or     bl,BYTE PTR [edi+0x52]
  4077e5:	aaa    
  4077e6:	rcl    DWORD PTR [ecx],1
  4077e8:	jmp    0xb54f4a26
  4077ed:	cmp    al,BYTE PTR [edi+ecx*1]
  4077f0:	fs cmp al,0x83
  4077f3:	adc    al,0xb6
  4077f5:	cmp    al,0xca
  4077f7:	aam    0xce
  4077f9:	lods   al,BYTE PTR ds:[esi]
  4077fa:	add    BYTE PTR [eax],al
  4077fc:	add    BYTE PTR [edx+0x43],dl
  4077ff:	and    eax,0x5df5426a
  407804:	push   esi
  407805:	mov    edx,0x39842d5
  40780a:	and    ah,dl
  40780c:	call   0xadf3:0x5e163863
  407813:	call   0x1c24:0xa342453
  40781a:	or     eax,0x2314450b
  40781f:	or     esp,DWORD PTR [ebx+0xc]
  407822:	test   DWORD PTR [edx],0xb81047f
  407828:	(bad)
  40782b:	jae    0x407888
  40782d:	xor    bh,BYTE PTR [eax+0x51cb35fc]
  407833:	imul   edx,DWORD PTR ds:0xd2fe8b74,0x8f405ab7
  40783d:	pop    edx
  40783e:	add    dl,bl
  407840:	pause  
  407842:	jmp    0x407858
  407844:	pop    ebp
  407845:	ret    0x1506
  407848:	outs   dx,DWORD PTR ds:[esi]
  407849:	ret    0x14b0
  40784c:	nop
  40784d:	ret    0x15a4
  407850:	retf   0x422
  407853:	adc    eax,0xc18ebdd
  407858:	mov    bh,0x7d
  40785a:	dec    ecx
  40785b:	jns    0x4077ee
  40785d:	fbld   TBYTE PTR [ebx+0x7312]
  407863:	add    dh,dh
  407865:	(bad)  
  407866:	scas   al,BYTE PTR es:[edi]
  407867:	scas   eax,DWORD PTR es:[edi]
  407868:	cmp    al,0x7b
  40786a:	adc    eax,0x66c77624
  40786f:	pop    ss
  407870:	adc    DWORD PTR [eax+0xf],0xffffff9b
  407874:	out    0xa,eax
  407876:	adc    BYTE PTR [esi+ebx*8-0x67],ch
  40787a:	adc    BYTE PTR [ebx+0x221139e6],ah
  407880:	fst    QWORD PTR [ebx+0x11]
  407883:	aaa    
  407884:	(bad)
  407887:	xchg   edx,eax
  407888:	fwait
  407889:	outs   dx,BYTE PTR ds:[esi]
  40788a:	push   cs
  40788b:	pop    ecx
  40788c:	test   al,0x6
  40788e:	imul   edx,DWORD PTR [ebp+0x6aed8cca],0x71
  407895:	rol    BYTE PTR [edi-0x1fffe2fd],0xdb
  40789c:	fwait
  40789d:	push   eax
  40789e:	clc    
  40789f:	sti    
  4078a0:	das    
  4078a1:	cld    
  4078a2:	mov    dl,0x11
  4078a4:	and    bh,ah
  4078a6:	popf   
  4078a7:	adc    DWORD PTR [edi],esp
  4078a9:	cld    
  4078aa:	leave  
  4078ab:	adc    DWORD PTR [edx-0x4],ecx
  4078ae:	xchg   esi,eax
  4078af:	adc    DWORD PTR [esi],edi
  4078b1:	cld    
  4078b2:	lods   al,BYTE PTR ds:[esi]
  4078b3:	sub    esi,DWORD PTR [ecx+edi*1+0x1b]
  4078b7:	sbb    DWORD PTR [edi],0x59
  4078ba:	sub    ebp,DWORD PTR [ecx-0x39]
  4078bd:	mov    cl,0xc3
  4078bf:	xor    al,0x86
  4078c1:	data16 outs dx,BYTE PTR ds:[esi]
  4078c3:	fld    DWORD PTR [ebp-0x2b]
  4078c6:	inc    eax
  4078c7:	fadd   QWORD PTR [eax]
  4078c9:	add    BYTE PTR [eax],al
  4078cb:	push   ebx
  4078cc:	add    DWORD PTR [eax+0x7c80adaf],esp
  4078d2:	xor    BYTE PTR [ecx],bh
  4078d4:	stos   BYTE PTR es:[edi],al
  4078d5:	mov    BYTE PTR [esi+0x2c3f454f],ah
  4078db:	cmp    BYTE PTR [ebx+0x3623a567],0xe9
  4078e2:	or     ecx,edi
  4078e4:	call   DWORD PTR [edx+0xb]
  4078e7:	outs   dx,BYTE PTR ds:[esi]
  4078e8:	jmp    DWORD PTR [ecx+0xb]
  4078eb:	mov    al,ds:0x82df9fff
  4078f0:	jbe    0x4078eb
  4078f2:	and    eax,0xb6ee261c
  4078f7:	mov    ebx,edi
  4078f9:	outs   dx,DWORD PTR ds:[esi]
  4078fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078fb:	push   es
  4078fc:	pop    esp
  4078fd:	dec    ecx
  4078fe:	aaa    
  4078ff:	mov    ds:0x9f518380,al
  407904:	pop    ecx
  407905:	dec    ebx
  407906:	ins    BYTE PTR es:[edi],dx
  407907:	adc    al,0x97
  407909:	add    ah,dl
  40790b:	jns    0x4078f3
  40790d:	jmp    0x40796f
  40790f:	mov    edi,0xbb59a0e
  407914:	pop    edx
  407915:	out    dx,eax
  407916:	hlt    
  407917:	rol    BYTE PTR [edx-0xc8ddb6b],1
  40791d:	ror    BYTE PTR ds:0x6b19df48,1
  407923:	xor    DWORD PTR [eax+ebp*2-0x3b007ad],esi
  40792a:	mov    eax,0xe1363bd8
  40792f:	add    BYTE PTR [eax],al
  407931:	add    bh,dh
  407933:	in     al,dx
  407934:	js     0x407968
  407936:	xchg   edx,eax
  407937:	pop    ebp
  407938:	add    eax,ebx
  40793a:	sbb    dl,bl
  40793c:	jge    0x407958
  40793e:	sahf   
  40793f:	sahf   
  407940:	and    ebx,eax
  407942:	add    al,0x62
  407944:	mov    WORD PTR [eax],?
  407946:	push   esp
  407947:	xchg   edi,eax
  407948:	loope  0x407941
  40794a:	and    BYTE PTR [edx+eax*1],dl
  40794d:	xor    edx,DWORD PTR [eax]
  40794f:	cwde   
  407950:	xor    WORD PTR ds:0xa0c8ffa8,bp
  407957:	(bad)  
  407958:	aad    0x31
  40795a:	mov    edi,gs
  40795c:	jmp    0x68e1:0x21c6cbbf
  407963:	mov    ebp,0xd3beefe4
  407968:	aad    0xcc
  40796a:	mov    ah,BYTE PTR [ebx+0x2d]
  40796d:	push   ebx
  40796e:	push   edi
  40796f:	xchg   edi,eax
  407970:	rcr    DWORD PTR [ebp+0x45],1
  407973:	les    edi,FWORD PTR [ebx]
  407975:	dec    ecx
  407976:	cld    
  407977:	mov    cl,0x23
  407979:	shl    al,cl
  40797b:	jne    0x4079cf
  40797d:	lock push esp
  40797f:	jl     0x40792d
  407981:	icebp  
  407982:	inc    DWORD PTR [ebp-0x28d3ff95]
  407988:	inc    ecx
  407989:	pop    edx
  40798a:	mov    bl,0xa9
  40798c:	daa    
  40798d:	xchg   ebp,eax
  40798e:	push   ebp
  40798f:	popf   
  407990:	outs   dx,DWORD PTR ds:[esi]
  407991:	xchg   esi,eax
  407992:	(bad)  
  407993:	shl    BYTE PTR [esi],cl
  407995:	test   al,0x0
  407997:	add    BYTE PTR [eax],al
  407999:	daa    
  40799a:	dec    eax
  40799b:	rcl    BYTE PTR [edx],1
  40799d:	leave  
  40799e:	stc    
  40799f:	in     al,0xad
  4079a1:	lock (bad) 
  4079a3:	pop    ebp
  4079a4:	sti    
  4079a5:	jl     0x407935
  4079a7:	add    dl,al
  4079a9:	cs mov ebp,0x946076bf
  4079af:	ss dec ebx
  4079b1:	inc    eax
  4079b2:	xor    edi,DWORD PTR cs:[edx]
  4079b5:	xor    al,0x80
  4079b7:	cs loopne 0x40794f
  4079ba:	lahf   
  4079bb:	xor    ch,BYTE PTR ds:0x51efcbac
  4079c1:	cld    
  4079c2:	push   ebp
  4079c3:	rcr    DWORD PTR [eax-0x1215cacd],0xf
  4079ca:	out    0xa3,al
  4079cc:	xchg   edx,eax
  4079cd:	leave  
  4079ce:	mov    bh,0x31
  4079d0:	mov    edx,0x57eff5b6
  4079d5:	ins    BYTE PTR es:[edi],dx
  4079d6:	mov    ecx,0x8bd0e632
  4079db:	inc    edi
  4079dc:	xor    dl,0x1e
  4079df:	xchg   edi,eax
  4079e0:	sub    esi,edx
  4079e2:	xchg   ebx,eax
  4079e3:	mov    esi,0x154ba458
  4079e8:	loop   0x407a30
  4079ea:	int    0x2a
  4079ec:	es shl BYTE PTR gs:[eax],1
  4079f0:	mov    bl,0x8f
  4079f2:	inc    ecx
  4079f3:	xchg   cl,ch
  4079f5:	dec    ecx
  4079f6:	jecxz  0x407a53
  4079f8:	rcl    esi,1
  4079fa:	rol    DWORD PTR [esi+0xe0],cl
  407a00:	or     al,0x4b
  407a02:	push   ebp
  407a03:	(bad)  
  407a04:	repz mov ecx,DWORD PTR [esp+ecx*1+0x4ce4e784]
  407a0c:	stos   BYTE PTR es:[edi],al
  407a0d:	dec    edi
  407a0e:	xor    dh,dh
  407a10:	dec    esi
  407a11:	inc    edi
  407a12:	mov    cs,edx
  407a14:	push   ecx
  407a15:	jecxz  0x4079bd
  407a17:	mov    ecx,0xcd9a6641
  407a1c:	mov    ds:0x6f92dd3c,al
  407a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a22:	loopne 0x407a75
  407a24:	or     BYTE PTR [ebx-0x68226e8a],bl
  407a2a:	repz out 0x22,eax
  407a2d:	das    
  407a2e:	jmp    0x407a5b
  407a30:	dec    esp
  407a31:	scas   eax,DWORD PTR es:[edi]
  407a32:	adc    ebx,DWORD PTR ss:[edx]
  407a35:	add    cl,BYTE PTR [edx]
  407a37:	ror    DWORD PTR [esi-0x53],0xc7
  407a3b:	loope  0x407a7b
  407a3d:	arpl   WORD PTR [edi+0x17],bx
  407a40:	cmp    esi,ebp
  407a42:	js     0x407a5a
  407a44:	xchg   ecx,eax
  407a45:	in     eax,dx
  407a46:	cs adc eax,0x882c5f98
  407a4c:	stos   BYTE PTR es:[edi],al
  407a4d:	jne    0x407a15
  407a4f:	(bad)
  407a53:	test   al,0x44
  407a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a56:	int    0x75
  407a58:	pop    esp
  407a59:	push   0xffffffb4
  407a5b:	lds    ebx,FWORD PTR [edi]
  407a5d:	cmp    dl,BYTE PTR [eax+ebx*2+0x13bed61c]
  407a64:	add    BYTE PTR [eax],al
  407a66:	add    BYTE PTR [ebx+0x6cd7519d],ah
  407a6c:	test   BYTE PTR [ebp-0x64bdad45],bl
  407a72:	ret    0x88ba
  407a75:	arpl   WORD PTR [ecx+0xc6aa6d2],di
  407a7b:	mov    bl,0xad
  407a7d:	push   0xffffffd9
  407a7f:	push   eax
  407a80:	pop    es
  407a81:	retf   0x3e8d
  407a84:	aam    0x2e
  407a86:	(bad)  
  407a87:	bound  ebp,QWORD PTR ds:0x5c3634d3
  407a8d:	in     al,dx
  407a8e:	ja     0x407a74
  407a90:	leave  
  407a91:	or     BYTE PTR [ebx+0x2f],ch
  407a94:	jge    0x407a5b
  407a96:	loope  0x407a5c
  407a98:	jae    0x407a6b
  407a9a:	mov    dh,0x31
  407a9c:	pop    es
  407a9d:	jmp    0xe9476da5
  407aa2:	add    esi,ebx
  407aa4:	push   es
  407aa5:	xchg   esi,eax
  407aa6:	nop
  407aa7:	mov    dl,0x6
  407aa9:	mov    ?,WORD PTR ss:[edx-0xcfc16fa]
  407ab0:	push   es
  407ab1:	jns    0x407a40
  407ab3:	mov    dl,0x6
  407ab5:	lahf   
  407ab6:	lea    esi,[edx-0x1fc6dfa]
  407abc:	push   es
  407abd:	jge    0x407b3b
  407abf:	mov    bl,0x6
  407ac1:	mov    al,ds:0x4506f603
  407ac6:	jl     0x407a7b
  407ac8:	push   es
  407ac9:	jecxz  0x407ace
  407acb:	add    BYTE PTR [eax],al
  407acd:	add    ah,cl
  407acf:	push   es
  407ad0:	adc    eax,0x3106b37d
  407ad5:	add    al,0xf6
  407ad7:	push   es
  407ad8:	or     eax,0xfa06b37d
  407add:	add    esi,esi
  407adf:	push   es
  407ae0:	add    eax,0x6506b37d
  407ae5:	add    edi,ebp
  407ae7:	push   es
  407ae8:	mov    ch,0x7c
  407aea:	xor    eax,DWORD PTR [edi]
  407aec:	push   es
  407aed:	add    al,0x7
  407aef:	pop    es
  407af0:	or     eax,0xac07337d
  407af5:	add    edi,edx
  407af7:	push   es
  407af8:	stc    
  407af9:	jl     0x407b2e
  407afb:	pop    es
  407afc:	add    BYTE PTR [eax+0x10004f0],ch
  407b02:	ss (bad) 
  407b04:	call   FWORD PTR ds:0xc90003f0
  407b0a:	daa    
  407b0b:	(bad)  
  407b0c:	call   DWORD PTR [eax-0x12fff610]
  407b12:	pop    ss
  407b13:	(bad)  
  407b14:	jmp    FWORD PTR [ebx-0xeffe610]
  407b1a:	pop    es
  407b1b:	(bad)  
  407b1c:	(bad)  
  407b1d:	fdivrp st(0),st
  407b1f:	adc    BYTE PTR [eax],al
  407b21:	in     eax,dx
  407b22:	stc    
  407b23:	(bad)  
  407b24:	call   FWORD PTR ds:0xd50004f7
  407b2a:	out    0xc6,eax
  407b2c:	inc    DWORD PTR [esi-0x9]
  407b2f:	add    al,0x0
  407b31:	mov    ebp,0xd7000000
  407b36:	(bad)  
  407b37:	(bad)  
  407b38:	mov    eax,0xc9000ff7
  407b3d:	mov    esi,0x2f7ceff
  407b43:	add    BYTE PTR [ecx-0x35003949],dl
  407b49:	lock push cs
  407b4b:	add    BYTE PTR [ebp-0x61003959],ch
  407b51:	test   DWORD PTR [eax+eax*1],0xffc6974d
  407b58:	xor    al,0xf7
  407b5a:	or     DWORD PTR [eax],eax
  407b5c:	inc    ecx
  407b5d:	xchg   esi,eax
  407b5f:	(bad)  
  407b60:	(bad)  
  407b62:	add    al,BYTE PTR [eax]
  407b64:	cmp    DWORD PTR [edi-0x3a],esi
  407b67:	jmp    FWORD PTR [edi-0x7afff010]
  407b6d:	addr16 (bad) 
  407b6f:	(bad)  
  407b70:	cmp    bh,dh
  407b72:	idiv   bh
  407b74:	fcomp  DWORD PTR [eax-0x39]
  407b77:	(bad)  
  407b78:	dec    ecx
  407b7a:	or     DWORD PTR [edi],eax
  407b7c:	add    BYTE PTR [edx-0x18ffc03f],ah
  407b82:	add    cl,BYTE PTR [ecx]
  407b84:	add    BYTE PTR [esi-0x3f],ah
  407b87:	aas    
  407b88:	add    bh,bh
  407b8a:	add    cl,BYTE PTR [edx]
  407b8c:	add    BYTE PTR [edx-0x3f],ch
  407b8f:	aas    
  407b90:	add    BYTE PTR [ecx+0x9],ah
  407b93:	adc    al,BYTE PTR [eax]
  407b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b96:	sar    DWORD PTR [edi],0x0
  407b99:	add    BYTE PTR [eax],al
  407b9b:	add    BYTE PTR [edi],dh
  407b9d:	add    esp,DWORD PTR [eax]
  407b9f:	add    BYTE PTR [edx-0x51ffc03f],dl
  407ba5:	or     DWORD PTR [eax+eax*1],eax
  407ba8:	call   0x2109:0x93003fc1
  407baf:	add    BYTE PTR [esi],dh
  407bb1:	mov    edx,0x2ed003f
  407bb6:	xor    al,BYTE PTR [eax]
  407bb8:	cmp    BYTE PTR [edx+0x30d003f],0x22
  407bbf:	add    BYTE PTR [esi-0x28ffc046],bl
  407bc5:	or     DWORD PTR [eax+eax*1],ecx
  407bc8:	into   
  407bc9:	mov    edx,0x94e003f
  407bce:	sbb    eax,DWORD PTR [eax]
  407bd0:	add    bh,BYTE PTR [edi+edi*1+0xf095200]
  407bd7:	add    dl,ah
  407bd9:	mov    ebx,0x9c8003f
  407bde:	or     BYTE PTR [eax],al
  407be0:	(bad)  
  407be1:	mov    ebx,0x94d003f
  407be6:	add    eax,0x3fbbce00
  407beb:	add    dl,al
  407bed:	or     BYTE PTR [edx],al
  407bef:	add    BYTE PTR [edx-0xcffc045],bl
  407bf5:	and    eax,DWORD PTR [ebx]
  407bf7:	adc    al,0xf3
  407bf9:	add    eax,0xb6f3407d
  407bfe:	add    dl,BYTE PTR [ecx]
  407c00:	add    BYTE PTR [eax],al
  407c02:	add    bl,dh
  407c04:	push   ecx
  407c05:	jl     0x407c47
  407c07:	repz rol BYTE PTR [edx],cl
  407c0a:	adc    ebx,esi
  407c0c:	sub    eax,0xd0f3407c
  407c11:	add    al,BYTE PTR [edi]
  407c13:	repz in eax,0x7c
  407c16:	inc    eax
  407c17:	repz lahf 
  407c19:	add    ecx,DWORD PTR [esi]
  407c1b:	repz add eax,0x6df3407d
  407c21:	add    ecx,DWORD PTR [ebx+esi*8]
  407c24:	in     eax,0x7c
  407c26:	inc    eax
  407c27:	repz or DWORD PTR [ebx],eax
  407c2a:	add    al,0xf3
  407c2c:	sbb    eax,0x68f3407d
  407c31:	add    al,0x7
  407c33:	repz jne 0x407bc0
  407c36:	inc    eax
  407c37:	repz and al,BYTE PTR [ebx]
  407c3a:	or     eax,0x408a95f3
  407c3f:	repz jne 0x407c46
  407c42:	or     bl,dh
  407c44:	mov    DWORD PTR [edx+0x475f340],ecx
  407c4a:	or     bl,dh
  407c4c:	lea    ecx,[edx+0x331f340]
  407c52:	pop    es
  407c53:	repz test DWORD PTR [edx+0x499f340],ecx
  407c5a:	adc    eax,0x4089adf3
  407c5f:	repz cld 
  407c61:	add    ecx,DWORD PTR [ebx]
  407c63:	repz xor DWORD PTR [ecx+0x40],ecx
  407c6a:	repz add DWORD PTR [ebx+ecx*1],eax
  407c6e:	repz add eax,0x6f3408a
  407c74:	push   eax
  407c75:	add    al,0x1
  407c77:	pop    es
  407c78:	mov    ch,0x89
  407c7a:	xor    eax,DWORD PTR [edi]
  407c7c:	add    BYTE PTR [edx+ebp*8],al
  407c7f:	push   es
  407c80:	mov    eax,ds:0x3073389
  407c85:	add    al,0xe0
  407c87:	push   es
  407c88:	cmc    
  407c89:	mov    DWORD PTR [ebx],esi
  407c8b:	pop    es
  407c8c:	sahf   
  407c8d:	add    ebp,ebx
  407c8f:	push   es
  407c90:	add    DWORD PTR [edx+0x4330733],ecx
  407c96:	hlt    
  407c97:	push   es
  407c98:	add    DWORD PTR [edx+0x4380733],ecx
  407c9e:	in     al,dx
  407c9f:	push   es
  407ca0:	stc    
  407ca1:	mov    DWORD PTR [ebx],esi
  407ca3:	pop    es
  407ca4:	push   esi
  407ca5:	add    al,0xf7
  407ca7:	push   es
  407ca8:	jmp    0x5147b036
  407cad:	add    al,0xea
  407caf:	push   es
  407cb0:	cmc    
  407cb1:	mov    BYTE PTR [ebx-0x6fc20fa],dh
  407cb7:	push   es
  407cb8:	ror    DWORD PTR [eax+0x40406b3],1
  407cbe:	out    dx,eax
  407cbf:	push   es
  407cc0:	leave  
  407cc1:	mov    BYTE PTR [ebx-0x52fc7bfa],dh
  407cc7:	add    eax,0x6b38761
  407ccc:	fadd   QWORD PTR [ebx]
  407cce:	add    BYTE PTR [eax],al
  407cd0:	add    BYTE PTR [esi-0x4c77d6fa],bl
  407cd6:	push   es
  407cd7:	jo     0x407cdc
  407cd9:	fiadd  DWORD PTR [esi]
  407cdb:	cmc    
  407cdc:	xchg   DWORD PTR [ebx-0x16fc58fa],esi
  407ce2:	push   es
  407ce3:	loope  0x407c6c
  407ce5:	mov    bl,0x6
  407ce7:	imul   eax,DWORD PTR [ebx],0x869506c0
  407ced:	mov    bl,0x6
  407cef:	add    BYTE PTR [edx-0x62fffc10],ah
  407cf5:	jne    0x407cbe
  407cf7:	push   DWORD PTR [eax+0x29000ff0]
  407cfd:	jne    0x407cc6
  407cff:	jmp    DWORD PTR [ebp-0x10]
  407d02:	jmp    0xeeff:0xc77578ff
  407d09:	lock or al,BYTE PTR [eax]
  407d0c:	imul   esi,DWORD PTR [ebp-0x39],0xc2f09aff
  407d13:	push   eax
  407d15:	jne    0x407cde
  407d17:	jmp    FWORD PTR [edx-0x26fffd10]
  407d1d:	jne    0x407ce6
  407d1f:	call   edx
  407d21:	lock add al,BYTE PTR [eax]
  407d24:	shl    DWORD PTR [ebp-0x39],0xff
  407d28:	fs lock or al,0x0
  407d2c:	fnsave [ebp-0x39]
  407d2f:	dec    DWORD PTR ds:0xd50000f0
  407d35:	add    BYTE PTR [eax],al
  407d37:	add    BYTE PTR [ebp-0x39],dh
  407d3a:	jmp    edi
  407d3c:	lock loopne 0x407d3e
  407d3f:	int3   
  407d40:	jne    0x407d09
  407d42:	(bad)  
  407d43:	jmp    0x407d35
  407d45:	add    eax,DWORD PTR [eax]
  407d47:	lds    esi,FWORD PTR [ebp-0x39]
  407d4a:	(bad)  
  407d4b:	aas    
  407d4c:	out    dx,eax
  407d4d:	add    DWORD PTR [eax],eax
  407d4f:	popf   
  407d50:	jne    0x407d19
  407d52:	jmp    FWORD PTR [esi]
  407d54:	out    dx,eax
  407d55:	add    eax,0xc7759100
  407d5a:	inc    DWORD PTR [ecx-0x56ffee11]
  407d60:	jne    0x407d29
  407d62:	dec    edi
  407d64:	lock or DWORD PTR [eax],eax
  407d67:	pop    ecx
  407d68:	jne    0x407d31
  407d6a:	(bad)  
  407d6b:	(bad)  
  407d6c:	cmp    eax,DWORD PTR [esi]
  407d6e:	add    eax,0x4080a200
  407d73:	add    BYTE PTR ds:0x4a001406,bl
  407d79:	add    DWORD PTR [eax+0x0],0x1e02f2
  407d80:	mov    edx,0x5004083
  407d85:	add    eax,DWORD PTR [edi]
  407d87:	add    BYTE PTR [edx-0x3effbf7d],dh
  407d8d:	add    eax,0x83660010
  407d92:	inc    eax
  407d93:	add    BYTE PTR [edi],al
  407d95:	add    eax,DWORD PTR [esi]
  407d97:	add    BYTE PTR [esi+0x4083],cl
  407d9d:	add    BYTE PTR [eax],al
  407d9f:	pop    DWORD PTR ds:0x83620003
  407da5:	inc    eax
  407da6:	add    BYTE PTR [esi+0x5],bl
  407da9:	das    
  407daa:	add    BYTE PTR [edx-0x2effbf7d],al
  407db0:	add    dl,BYTE PTR [edi]
  407db2:	add    BYTE PTR [edx-0x48ffbf7d],cl
  407db8:	add    bl,BYTE PTR [edx]
  407dba:	add    dh,dh
  407dbc:	test   DWORD PTR [eax+0x0],eax
  407dbf:	rol    DWORD PTR [edx],0xf
  407dc2:	add    BYTE PTR [esi+0x44004084],ah
  407dc8:	add    eax,0x847e0014
  407dcd:	inc    eax
  407dce:	add    BYTE PTR [ecx+0x5],dh
  407dd1:	pop    ds
  407dd2:	add    BYTE PTR [esi+0x36004084],bl
  407dd8:	add    eax,0x85e60024
  407ddd:	inc    eax
  407dde:	add    BYTE PTR [ecx+0x2000a05],cl
  407de4:	xchg   BYTE PTR [eax+0x0],al
  407de7:	repz js 0x407ded
  407dea:	add    al,0xf3
  407dec:	jae    0x39a7132
  407df2:	add    al,0xf3
  407df4:	out    0x82,eax
  407df6:	inc    eax
  407df7:	repz and eax,0xe5f30c03
  407dfd:	add    BYTE PTR [eax-0xd],0x4a
  407e01:	add    edx,DWORD PTR [ecx]
  407e03:	add    BYTE PTR [eax],al
  407e05:	add    bl,dh
  407e07:	adc    DWORD PTR [ebx+0x2d3f340],eax
  407e0d:	push   cs
  407e0e:	repz add DWORD PTR [ebx+0x34af340],eax
  407e15:	or     al,0xf3
  407e17:	push   ecx
  407e18:	add    BYTE PTR [eax-0xd],0x9
  407e1c:	add    al,0x12
  407e1e:	repz sub eax,0x90f34082
  407e24:	add    ebx,DWORD PTR [esi]
  407e26:	repz or eax,0xaff34083
  407e2c:	add    dh,BYTE PTR [ecx]
  407e2e:	repz stc 
  407e30:	add    BYTE PTR [eax-0xd],0x1d
  407e34:	add    ecx,DWORD PTR [ecx]
  407e36:	repz int 0x82
  407e39:	inc    eax
  407e3a:	repz test BYTE PTR [ebx],al
  407e3d:	or     al,0xf3
  407e3f:	fld    QWORD PTR [edx+0x3bbf340]
  407e45:	or     al,0xf3
  407e47:	lods   eax,DWORD PTR ds:[esi]
  407e48:	add    DWORD PTR [eax-0xd],0xffffffc6
  407e4c:	add    eax,DWORD PTR [edi]
  407e4e:	repz aad 0x83
  407e51:	inc    eax
  407e52:	repz rol BYTE PTR [ebx],0x14
  407e56:	repz int 0x83
  407e59:	inc    eax
  407e5a:	repz mov ch,0x3
  407e5d:	add    al,0xf3
  407e5f:	adc    eax,0x6f34084
  407e64:	out    dx,eax
  407e65:	add    esi,edi
  407e67:	push   es
  407e68:	cmp    DWORD PTR [eax+eax*1+0x6b30000],eax
  407e6f:	out    dx,eax
  407e70:	add    esi,edi
  407e72:	push   es
  407e73:	and    DWORD PTR [ebx+esi*4-0xafc28fa],eax
  407e7a:	push   es
  407e7b:	sub    DWORD PTR [ebx+esi*4-0xfb66fa],eax
  407e82:	push   es
  407e83:	mov    ecx,0xde073383
  407e88:	add    esi,edi
  407e8a:	push   es
  407e8b:	adc    DWORD PTR [ebx+esi*1-0x12fba5f9],eax
  407e92:	push   es
  407e93:	loope  0x407e18
  407e95:	xor    eax,DWORD PTR [edi]
  407e97:	mov    al,BYTE PTR [esp+esi*8]
  407e9a:	push   es
  407e9b:	jmp    0xdd47b223
  407ea0:	add    edi,esp
  407ea2:	push   es
  407ea3:	cmp    DWORD PTR [edi+0x3a706e4],edi
  407ea9:	call   0xd4ff83b4
  407eae:	push   es
  407eaf:	and    al,BYTE PTR [edx+edi*8]
  407eb2:	push   es
  407eb3:	xor    DWORD PTR [edi+0x3aa06c4],edi
  407eb9:	out    dx,al
  407eba:	push   es
  407ebb:	xor    DWORD PTR [edi+0x3ea06b4],edi
  407ec1:	stc    
  407ec2:	push   es
  407ec3:	sub    eax,0x9c0724bf
  407ec8:	add    ebp,esi
  407eca:	push   es
  407ecb:	lea    edi,[esi+0x3da0714]
  407ed1:	add    BYTE PTR [eax],al
  407ed3:	add    ch,ah
  407ed5:	push   es
  407ed6:	jne    0x407e96
  407ed8:	add    al,0x7
  407eda:	mov    DWORD PTR [ebx],0xbf3d06e6
  407ee0:	hlt    
  407ee1:	push   es
  407ee2:	add    BYTE PTR [ecx-0x10],ah
  407ee5:	adc    al,0x0
  407ee7:	inc    ecx
  407ee8:	fs idiv edi
  407eeb:	ins    BYTE PTR es:[edi],dx
  407eec:	lock or eax,DWORD PTR [eax]
  407eef:	cmp    eax,0x1dfff754
  407ef4:	test   DWORD PTR [ecx],0xf7441d00
  407efa:	push   DWORD PTR [ebp-0x10]
  407efd:	push   ss
  407efe:	add    cl,al
  407f00:	xor    eax,0xf71efff7
  407f05:	add    al,BYTE PTR [eax]
  407f07:	shl    DWORD PTR [ebp-0xf0a000a],0x1
  407f0e:	add    ch,bh
  407f10:	xchg   ebp,eax
  407f11:	idiv   bh
  407f13:	sbb    bh,dh
  407f15:	add    al,BYTE PTR [eax]
  407f17:	fld    QWORD PTR [ebp-0xf2e000a]
  407f1d:	push   ss
  407f1e:	add    BYTE PTR [ecx+0x76],al
  407f21:	idiv   bh
  407f23:	in     al,dx
  407f24:	lock sbb DWORD PTR [eax],eax
  407f27:	inc    ebp
  407f28:	data16 idiv bh
  407f2b:	stos   BYTE PTR es:[edi],al
  407f2c:	lock add al,0x0
  407f2f:	xor    eax,0xffff656
  407f34:	lock pop ss
  407f36:	add    BYTE PTR [ecx],ch
  407f38:	add    BYTE PTR [eax],al
  407f3a:	add    BYTE PTR [esi-0xa],al
  407f3d:	dec    DWORD PTR [ebx+0x390004f0]
  407f43:	ss idiv bh
  407f46:	pop    ecx
  407f47:	lock push ss
  407f49:	add    BYTE PTR [ebp-0x5a],cl
  407f4c:	idiv   bh
  407f4e:	std    
  407f4f:	lock pop ss
  407f51:	add    BYTE PTR [ecx-0x6b],dh
  407f54:	idiv   bh
  407f56:	(bad)  
  407f57:	neg    DWORD PTR [ebx]
  407f59:	add    BYTE PTR [ecx-0x7b],bl
  407f5c:	idiv   bh
  407f5e:	jmp    DWORD PTR [edx]
  407f60:	or     edx,DWORD PTR [eax+eax*1]
  407f63:	adc    dh,BYTE PTR [ebp+0x3f]
  407f66:	add    ah,bh
  407f68:	or     dl,BYTE PTR [edi]
  407f6a:	add    dl,bl
  407f6c:	je     0x407fad
  407f6e:	add    ch,ch
  407f70:	or     dl,BYTE PTR [edx]
  407f72:	add    BYTE PTR [esi],ah
  407f74:	je     0x407fb5
  407f76:	add    BYTE PTR [ebp+0xa00180a],al
  407f7c:	je     0x407fbd
  407f7e:	add    BYTE PTR [esi+0xb],al
  407f81:	and    eax,DWORD PTR [eax]
  407f83:	data16 jbe 0x407fc5
  407f86:	add    ah,cl
  407f88:	or     DWORD PTR ds:0x3f758e00,esp
  407f8e:	add    BYTE PTR [edi],ah
  407f90:	or     ebx,DWORD PTR [ebx]
  407f92:	add    BYTE PTR [edx+0x59003f75],al
  407f98:	or     eax,DWORD PTR [ebx]
  407f9a:	add    BYTE PTR [esi+0x75],ch
  407f9d:	aas    
  407f9e:	add    BYTE PTR [eax],al
  407fa0:	add    BYTE PTR [eax],al
  407fa2:	mov    ah,0x9
  407fa4:	pop    es
  407fa5:	add    BYTE PTR [esi],dl
  407fa7:	jbe    0x407fe8
  407fa9:	add    ah,al
  407fab:	or     DWORD PTR [edi],eax
  407fad:	add    BYTE PTR [esi],bh
  407faf:	jbe    0x407ff0
  407fb1:	add    BYTE PTR [ecx+ecx*1+0x747e001c],ah
  407fb8:	aas    
  407fb9:	add    BYTE PTR [eax+0x6000709],bl
  407fbf:	jne    0x408000
  407fc1:	add    BYTE PTR [eax+0x9],ah
  407fc4:	or     al,BYTE PTR [eax]
  407fc6:	push   0x74
  407fc8:	aas    
  407fc9:	add    BYTE PTR ds:0x4a004c09,dh
  407fcf:	je     0x408010
  407fd1:	add    BYTE PTR [ebx+0x4200220a],ch
  407fd7:	jne    0x408018
  407fd9:	add    bl,dh
  407fdb:	add    ebp,DWORD PTR ss:[esi]
  407fde:	repz xchg edi,eax
  407fe0:	mov    edi,0x37df33f
  407fe5:	add    al,0xf3
  407fe7:	scas   eax,DWORD PTR es:[edi]
  407fe8:	mov    esi,0x2bcf33f
  407fed:	adc    esi,ebx
  407fef:	ret    
  407ff0:	mov    esi,0x3dff33f
  407ff5:	adc    al,0xf3
  407ff7:	stos   DWORD PTR es:[edi],eax
  407ff8:	mov    esi,0x336f33f
  407ffd:	push   ds
  407ffe:	repz or eax,eax
  408001:	aas    
  408002:	repz pop DWORD PTR [ebx]
  408005:	sbb    eax,0xf3000000
  40800a:	jmp    0x407fcb
  40800c:	aas    
  40800d:	repz mov ebp,0x3df32002
  408013:	mov    edi,0x2d0f33f
  408018:	addr16 repz gs mov eax,0x372f33f
  408020:	add    eax,0x3fb7b1f3
  408025:	repz sbb BYTE PTR [edx+ecx*1],al
  408029:	repz jge 0x407fe4
  40802c:	aas    
  40802d:	repz sub eax,DWORD PTR [ebx]
  408030:	cmp    ebx,esi
  408032:	dec    ecx
  408033:	mov    eax,0x331f33f
  408038:	sub    eax,0x3fb859f3
  40803d:	repz add al,0x3
  408040:	pop    es
  408041:	repz jno 0x407ffc
  408044:	aas    
  408045:	repz inc BYTE PTR [edx]
  408048:	or     al,0xf3
  40804a:	push   ecx
  40804b:	mov    eax,0x396f33f
  408050:	or     esi,ebx
  408052:	dec    ebp
  408053:	mov    eax,0x5906f33f
  408058:	add    al,0xe8
  40805a:	push   es
  40805b:	in     eax,0xbe
  40805d:	or     al,0x7
  40805f:	inc    ebx
  408060:	add    al,0xf9
  408062:	push   es
  408063:	sar    DWORD PTR [esi+0x4aa06fc],1
  408069:	call   0xff4d74
  40806e:	add    BYTE PTR [eax],al
  408070:	in     al,dx
  408071:	push   es
  408072:	fild   WORD PTR [ebx]
  408074:	test   DWORD PTR [esi],0x6dcbe8d
  40807a:	mov    BYTE PTR [edi+eax*8],0x6
  40807e:	dec    ebp
  40807f:	mov    esi,0x3f506cc
  408084:	clc    
  408085:	push   es
  408086:	dec    ecx
  408087:	mov    esi,0x44e06bc
  40808c:	jecxz  0x408094
  40808e:	ins    DWORD PTR es:[edi],dx
  40808f:	mov    esi,0x3e1072c
  408094:	clc    
  408095:	push   es
  408096:	imul   edi,DWORD PTR [esi+0x3b9071c],0xbdd506e8
  4080a0:	or     al,0x7
  4080a2:	out    dx,al
  4080a3:	add    ebp,esp
  4080a5:	push   es
  4080a6:	mov    ebp,0x2906fcbd
  4080ab:	add    al,0xe1
  4080ad:	push   es
  4080ae:	mov    eax,ds:0x2f06ecbd
  4080b3:	add    al,0xcd
  4080b5:	push   es
  4080b6:	stc    
  4080b7:	mov    ebp,0x38f06dc
  4080bc:	out    0x6,eax
  4080be:	leave  
  4080bf:	mov    ebp,0x3be06cc
  4080c4:	fiadd  WORD PTR [esi]
  4080c6:	loope  0x408085
  4080c8:	mov    esp,0xe603f206
  4080cd:	push   es
  4080ce:	add    DWORD PTR [ebp-0x21fff8d4],edi
  4080d4:	add    BYTE PTR [eax],al
  4080d6:	add    al,dh
  4080d8:	adc    eax,0xf39e0500
  4080dd:	inc    DWORD PTR [esi]
  4080df:	out    dx,eax
  4080e0:	(bad)  
  4080e1:	inc    eax
  4080e3:	(bad)  
  4080e4:	repz dec DWORD PTR [ebx-0x6effec10]
  4080eb:	jg     0x4080e0
  4080ed:	call   DWORD PTR [ebx-0x73000210]
  4080f3:	outs   dx,DWORD PTR ds:[esi]
  4080f4:	repz jmp DWORD PTR [ebx-0x10]
  4080f8:	pop    es
  4080f9:	add    BYTE PTR [ecx-0x17000ca1],al
  4080ff:	lock push es
  408101:	add    cl,ch
  408103:	lock push es
  408105:	add    BYTE PTR [ebp+0x47],ah
  408108:	repz (bad) 
  40810a:	fcomip st,st(0)
  40810c:	push   es
  40810d:	add    al,ch
  40810f:	lock push es
  408111:	add    ch,bh
  408113:	scas   eax,DWORD PTR es:[edi]
  408114:	repnz (bad) 
  408116:	out    dx,al
  408117:	lock push es
  408119:	add    BYTE PTR [ecx],al
  40811b:	test   DWORD PTR [esi],0xf297bd00
  408121:	(bad)  
  408122:	cli    
  408123:	lock push es
  408125:	add    cl,dh
  408127:	lock push es
  408129:	add    BYTE PTR [ecx],bl
  40812b:	jle    0x40811f
  40812d:	(bad)  
  40812e:	fdiv   st,st(0)
  408130:	push   es
  408131:	add    cl,ah
  408133:	lock push es
  408135:	add    ch,dl
  408137:	addr16 repnz (bad) 
  40813a:	fild   WORD PTR [eax]
  40813c:	add    BYTE PTR [eax],al
  40813e:	lock push es
  408140:	add    BYTE PTR [ecx],al
  408142:	out    dx,eax
  408143:	push   es
  408144:	add    cl,ch
  408146:	dec    edi
  408147:	bnd jmp ebx
  40814a:	lock push es
  40814c:	add    ch,ah
  40814e:	lock push es
  408150:	add    BYTE PTR [eax],al
  408152:	mov    ecx,DWORD PTR [eax+eax*1]
  408155:	add    BYTE PTR [edx+0x6],bl
  408158:	add    BYTE PTR [eax],al
  40815a:	pop    eax
  40815b:	or     al,0x0
  40815d:	add    BYTE PTR [eax+0x6],cl
  408160:	add    BYTE PTR [eax],al
  408162:	dec    ebx
  408163:	add    eax,0x6560000
  408168:	add    BYTE PTR [eax],al
  40816a:	pop    eax
  40816b:	add    eax,0x6540000
  408170:	add    BYTE PTR [eax],al
  408172:	mov    bl,0xa
  408174:	add    BYTE PTR [eax],al
  408176:	mov    BYTE PTR ss:[eax+0x0],0xe0
  40817b:	or     al,BYTE PTR [eax]
  40817d:	add    BYTE PTR [esi+eax*8+0x40],bl
  408181:	add    cl,dl
  408183:	or     al,BYTE PTR [eax]
  408185:	add    BYTE PTR [edx-0x3a],dl
  408188:	inc    eax
  408189:	add    dh,bl
  40818b:	or     al,BYTE PTR [eax]
  40818d:	add    BYTE PTR [edx-0x34],al
  408190:	inc    eax
  408191:	add    bh,ch
  408193:	or     al,BYTE PTR [eax]
  408195:	add    BYTE PTR [esi-0x34],ah
  408198:	inc    eax
  408199:	add    ah,bl
  40819b:	add    eax,0xf1ba0000
  4081a0:	inc    eax
  4081a1:	add    BYTE PTR [eax],al
  4081a3:	add    BYTE PTR [eax],al
  4081a5:	int    0x5
  4081a7:	add    BYTE PTR [eax],al
  4081a9:	into   
  4081aa:	icebp  
  4081ab:	inc    eax
  4081ac:	add    BYTE PTR [edx+0xb],bl
  4081af:	add    BYTE PTR [eax],al
  4081b1:	repnz mov BYTE PTR [eax+0x0],0x4b
  4081b6:	or     eax,DWORD PTR [eax]
  4081b8:	add    BYTE PTR [esi-0xe],al
  4081bb:	inc    eax
  4081bc:	add    BYTE PTR [eax],bl
  4081be:	or     eax,DWORD PTR [eax]
  4081c0:	add    BYTE PTR [esi-0xe],al
  4081c3:	inc    eax
  4081c4:	add    BYTE PTR [ecx],cl
  4081c6:	or     eax,DWORD PTR [eax]
  4081c8:	add    BYTE PTR [esi],al
  4081ca:	repnz inc eax
  4081cc:	add    bl,dh
  4081ce:	mov    ds:0xb8f30003,eax
  4081d3:	ds inc ecx
  4081d5:	repz mov ds:0xbef30003,al
  4081db:	ds inc ecx
  4081dd:	repz mov eax,ds:0xc4f30003
  4081e3:	ds inc ecx
  4081e5:	repz mov al,ds:0x1df30002
  4081eb:	inc    eax
  4081ec:	inc    ecx
  4081ed:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ef:	add    al,BYTE PTR [eax]
  4081f1:	repz and eax,0xb6f34140
  4081f7:	add    al,BYTE PTR [eax]
  4081f9:	repz and al,0x40
  4081fc:	inc    ecx
  4081fd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081ff:	add    al,BYTE PTR [eax]
  408201:	repz inc DWORD PTR [eax+0x41]
  408205:	repz mov ah,0x2
  408208:	add    BYTE PTR [eax],al
  40820a:	add    BYTE PTR [eax],al
  40820c:	repz cmovno eax,DWORD PTR [ecx-0xd]
  408211:	stos   DWORD PTR es:[edi],eax
  408212:	add    al,BYTE PTR [eax]
  408214:	repz add eax,DWORD PTR [ecx+0x41]
  408218:	repz mov edx,0xb5f30002
  40821e:	aas    
  40821f:	inc    ecx
  408220:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408222:	add    al,BYTE PTR [eax]
  408224:	repz fisttp QWORD PTR [ebx+0x41]
  408228:	repz mov eax,0x23f30002
  40822e:	dec    ebx
  40822f:	inc    ecx
  408230:	rep lods eax,DWORD PTR ds:[esi]
  408232:	add    al,BYTE PTR [eax]
  408234:	repz fwait
  408236:	dec    edx
  408237:	inc    ecx
  408238:	repz sbb eax,0x1df20103
  40823e:	add    eax,DWORD PTR [eax]
  408240:	repz sbb eax,0x1ef30003
  408246:	add    al,BYTE PTR [eax]
  408248:	repz push es
  40824a:	jmp    0x40824f
  40824c:	repz push es
  40824e:	leave  
  40824f:	leave  
  408250:	test   BYTE PTR [eax],dh
  408252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408253:	add    esi,ebx
  408255:	push   es
  408256:	call   0xef47755e
  40825b:	add    esi,ebx
  40825d:	push   es
  40825e:	mov    ecx,0xec3064ae
  408263:	add    esi,ebx
  408265:	push   es
  408266:	mov    ecx,0xe93054ae
  40826b:	add    al,0xf1
  40826d:	add    esp,ebp
  40826f:	add    BYTE PTR [eax],al
  408271:	add    BYTE PTR [eax],al
  408273:	in     eax,dx
  408274:	pop    es
  408275:	loope  0x408283
  408277:	jmp    0xe5495f77
  40827c:	(bad)  
  40827d:	fcom   DWORD PTR [ecx+eax*1]
  408280:	adc    al,0xd5
  408282:	adc    ch,bh
  408284:	pop    ss
  408285:	rcr    DWORD PTR [ecx+edi*8],1
  408288:	or     ecx,ebp
  40828a:	sbb    ch,dh
  40828c:	bswap  ecx
  40828e:	in     al,0xd2
  408290:	jecxz  0x408256
  408292:	loopne 0x408262
  408294:	out    0xc0,eax
  408296:	in     al,dx
  408297:	retf   0xbcdb
  40829a:	call   0xf4f96265
  40829f:	and    dh,ah
  4082a1:	mov    ah,0xf0
  4082a3:	push   ds
  4082a4:	clc    
  4082a5:	mov    al,0xfc
  4082a7:	sbb    ch,ah
  4082a9:	lods   al,BYTE PTR ds:[esi]
  4082aa:	clc    
  4082ab:	push   ss
  4082ac:	lock test al,0xa4
  4082af:	push   edx
  4082b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082b1:	les    esp,FWORD PTR [eax-0x533f57b2]
  4082b7:	dec    edx
  4082b8:	pushf  
  4082b9:	mov    esp,0xb8a046a8
  4082be:	mov    ah,0x22
  4082c0:	mov    ah,0xb4
  4082c2:	mov    al,0x1e
  4082c4:	mov    eax,0xad5fb0ff
  4082c9:	pop    edx
  4082ca:	lea    edi,[ebx+0x57895ed1]
  4082d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082d1:	bound  eax,QWORD PTR [ebp-0x7e9956ad]
  4082d7:	add    BYTE PTR [eax],al
  4082d9:	add    BYTE PTR [edi-0x63],cl
  4082dc:	push   0x7d
  4082de:	dec    ebx
  4082df:	mov    eax,ds:0xb5a7796e
  4082e4:	jb     0x40835b
  4082e6:	mov    ds:0x9f7176b9,eax
  4082eb:	lods   eax,DWORD PTR ds:[esi]
  4082ec:	jp     0x40835b
  4082ee:	fwait
  4082ef:	mov    cl,0x7e
  4082f1:	imul   esi,DWORD PTR [edi-0x7c],0x88736583
  4082f8:	xchg   DWORD PTR [ecx+0x6f],esp
  4082fb:	jl     0x408288
  4082fd:	pop    ebp
  4082fe:	imul   eax,DWORD PTR [eax-0x6b78a671],0xffffff93
  408305:	push   ebp
  408306:	sbb    DWORD PTR [eax-0x7380ae69],0xffffff9b
  40830d:	dec    ebp
  40830e:	jnp    0x4082a0
  408310:	lahf   
  408311:	dec    ecx
  408312:	xchg   edi,eax
  408313:	mov    fs:0xa7689345,eax
  408319:	inc    ecx
  40831a:	(bad)  
  40831b:	pop    esp
  40831c:	stos   DWORD PTR es:[edi],eax
  40831d:	cmp    eax,0x39af608b
  408322:	addr16 jns 0x4082d8
  408325:	xor    eax,0x31b77563
  40832a:	pop    edi
  40832b:	jno    0x4082e8
  40832d:	sub    eax,0x29bf6d5b
  408332:	aaa    
  408333:	dec    ecx
  408334:	ret    
  408335:	and    eax,0x21c74533
  40833a:	das    
  40833b:	inc    ecx
  40833c:	retf   
  40833d:	sbb    eax,0x2b000000
  408342:	cmp    eax,0xd30a00cf
  408347:	rcl    ebx,1
  408349:	(bad)  
  40834a:	(bad)  
  40834b:	aad    0xd7
  40834d:	add    cl,bl
  40834f:	(bad)  
  408351:	out    0xce,al
  408353:	fstp   st(7)
  408355:	cli    
  408356:	loop   0x408339
  408358:	jecxz  0x408348
  40835a:	out    0xe5,al
  40835c:	out    0xf2,eax
  40835e:	fucompp 
  408360:	jmp    0x4083d8
  408362:	out    0xed,al
  408364:	out    dx,eax
  408365:	push   0xfffffffa
  408367:	icebp  
  408368:	repz pop esi
  40836a:	fdivrp st(5),st
  40836c:	mul    DWORD PTR [edx-0xe]
  40836f:	stc    
  408370:	sti    
  408371:	inc    esi
  408372:	idiv   ch
  408374:	call   FWORD PTR [edx+0x9]
  408377:	add    al,BYTE PTR [ebx]
  408379:	dec    esi
  40837a:	sub    eax,0x1520705
  40837f:	or     cl,BYTE PTR [ebx]
  408381:	push   ss
  408382:	add    eax,0x194a0f0e
  408387:	adc    dl,BYTE PTR [ebx]
  408389:	ds std 
  40838b:	adc    eax,0x1a114217
  408390:	sbb    esp,DWORD PTR [esi]
  408392:	adc    eax,0x293a1f1e
  408397:	and    DWORD PTR [ebx],esp
  408399:	cs dec ebp
  40839b:	and    eax,0x29213227
  4083a0:	sub    esi,DWORD PTR [esi]
  4083a2:	and    eax,0x2f2d
  4083a7:	add    BYTE PTR [edx-0x61cccec8],ch
  4083ad:	sbb    al,0x35
  4083af:	aaa    
  4083b0:	mov    ds:0x863b3930,al
  4083b5:	xor    al,0x3d
  4083b7:	aas    
  4083b8:	call   0x658c:0xae636168
  4083bf:	addr16 repz inc edi
  4083c2:	stos   BYTE PTR es:[edi],al
  4083c3:	imul   ecx,DWORD PTR [eax+0x6c],0x701c6da6
  4083ca:	mov    dl,0x71
  4083cc:	and    BYTE PTR [esi+ebp*4+0x75],dh
  4083d0:	and    al,0x78
  4083d2:	mov    edx,0xd67c3879
  4083d7:	pop    ebp
  4083d8:	sub    al,0x80
  4083da:	ret    0x3041
  4083dd:	fs mov esi,0xca683445
  4083e3:	dec    ecx
  4083e4:	sub    BYTE PTR [esi+eax*8-0x2d7043b3],cl
  4083eb:	push   ecx
  4083ec:	rcl    BYTE PTR [ebx-0x683baa32],0xda
  4083f3:	pop    ecx
  4083f4:	fcomp  DWORD PTR [ebx-0x6033824b]
  4083fa:	add    DWORD PTR [edx-0x79825c90],0x8a89a774
  408404:	push   0x7c8e85cb
  408409:	iret   
  40840a:	xchg   ecx,eax
  40840b:	xchg   edx,eax
  40840c:	add    BYTE PTR [eax],al
  40840e:	add    BYTE PTR [eax-0x7b69722d],al
  408414:	xlat   BYTE PTR ds:[ebx]
  408415:	cdq    
  408416:	call   0xbf6c:0x9e95bb78
  40841d:	popa   
  40841e:	mov    ds:0xa65dc350,al
  408423:	push   esp
  408424:	(bad)  
  408425:	imul   ebp,DWORD PTR [edx-0x519a14b8],0xb271ee9c
  40842f:	mov    al,ds:0xa4b66df2
  408434:	idiv   BYTE PTR [ecx-0x46]
  408437:	cwde   
  408438:	fidiv  DWORD PTR [ebp-0x42]
  40843b:	mov    WORD PTR [edi],es
  40843d:	sub    DWORD PTR [edx-0x4f],eax
  408440:	dec    eax
  408441:	and    eax,0x2144b53e
  408446:	dec    edx
  408447:	test   eax,0xbd461d40
  40844c:	cmp    al,0x19
  40844e:	push   edx
  40844f:	rcr    DWORD PTR [eax+0x15],0x4e
  408453:	lds    edx,FWORD PTR [ecx+edx*1+0x5a]
  408457:	mov    ecx,0xad560d50
  40845c:	dec    esp
  40845d:	or     DWORD PTR [edx],esp
  40845f:	xchg   ecx,eax
  408460:	sub    BYTE PTR ds:0x124951e,al
  408466:	sub    cl,BYTE PTR [ecx+0x5d25fd20]
  40846c:	sbb    al,0xf9
  40846e:	xor    DWORD PTR [ecx+0x38],esp
  408471:	cmc    
  408472:	sub    eax,0x65000000
  408477:	xor    al,0xf1
  408479:	cmp    DWORD PTR [ecx+0x30],ebx
  40847c:	in     eax,dx
  40847d:	xor    eax,0xf1e92c4d
  408482:	inc    esp
  408483:	sub    al,0xe8
  408485:	add    esi,ebx
  408487:	push   es
  408488:	jmp    0xe9477790
  40848d:	add    esi,ebx
  40848f:	push   es
  408490:	jmp    0xe9477798
  408495:	add    esi,ebx
  408497:	push   es
  408498:	jmp    0xe94777a0
  40849d:	add    esi,ebx
  40849f:	push   es
  4084a0:	jmp    0xe94777a8
  4084a5:	add    edi,esp
  4084a7:	pop    es
  4084a8:	pop    ss
  4084a9:	add    al,0xf3
  4084ab:	push   es
  4084ac:	(bad)  
  4084ae:	repz push es
  4084b0:	jmp    0xe94777b8
  4084b5:	add    esi,ebx
  4084b7:	push   es
  4084b8:	add    cl,ch
  4084ba:	lock push es
  4084bc:	add    cl,ch
  4084be:	lock push es
  4084c0:	add    cl,ch
  4084c2:	lock push es
  4084c4:	add    cl,ch
  4084c6:	lock sub eax,DWORD PTR [ebx]
  4084c9:	jmp    0xe9408bbe
  4084ce:	lock push es
  4084d0:	add    cl,ch
  4084d2:	lock push es
  4084d4:	add    cl,ch
  4084d6:	lock push es
  4084d8:	add    cl,ch
  4084da:	add    BYTE PTR [eax],al
  4084dc:	add    al,dh
  4084de:	push   es
  4084df:	add    cl,ch
  4084e1:	lock push es
  4084e3:	add    cl,ch
  4084e5:	lock push es
  4084e7:	add    cl,ch
  4084e9:	lock push es
  4084eb:	add    BYTE PTR [edi],dl
  4084ed:	shr    BYTE PTR [ebx],0x7
  4084f0:	jmp    0xe9408be5
  4084f5:	lock push es
  4084f7:	add    cl,ch
  4084f9:	lock push es
  4084fb:	add    cl,ch
  4084fd:	lock push es
  4084ff:	add    cl,ch
  408501:	lock push es
  408503:	add    cl,ch
  408505:	lock push es
  408507:	add    cl,ch
  408509:	lock push es
  40850b:	add    cl,ch
  40850d:	lock push es
  40850f:	add    bh,cl
  408511:	loope  0x40853e
  408513:	pop    es
  408514:	jmp    0xe9408c09
  408519:	lock push es
  40851b:	add    cl,ch
  40851d:	lock push es
  40851f:	add    cl,ch
  408521:	lock push es
  408523:	add    cl,ch
  408525:	lock push es
  408527:	add    cl,ch
  408529:	lock sub eax,DWORD PTR [ebx]
  40852c:	xchg   edi,eax
  40852d:	shr    DWORD PTR [ebx],0x87
  408530:	(bad)  
  408531:	and    DWORD PTR [edx],ebp
  408533:	pop    es
  408534:	add    dl,bl
  408536:	push   es
  408537:	add    BYTE PTR [eax],al
  408539:	retf   0x6
  40853c:	add    dl,cl
  40853e:	push   es
  40853f:	add    BYTE PTR [eax],al
  408541:	add    BYTE PTR [eax],al
  408543:	add    dl,bl
  408545:	push   es
  408546:	add    BYTE PTR [eax],al
  408548:	fiadd  DWORD PTR [esi]
  40854a:	add    BYTE PTR [eax],al
  40854c:	sbb    al,0xf5
  40854e:	(bad)  
  40854f:	call   FWORD PTR ds:0x3dfffef5
  408555:	cmc    
  408556:	(bad)  
  408557:	jg     0x4084f3
  408559:	push   es
  40855a:	add    BYTE PTR [eax],al
  40855c:	mov    al,BYTE PTR [esi]
  40855e:	add    BYTE PTR [eax],al
  408560:	mov    al,BYTE PTR [esi]
  408562:	add    BYTE PTR [eax],al
  408564:	call   0x6:0x9a000006
  40856b:	add    ch,bl
  40856d:	hlt    
  40856e:	(bad)  
  40856f:	(bad)  
  408570:	(bad)  
  408572:	(bad)  
  408573:	(bad)  
  408574:	std    
  408575:	hlt    
  408576:	(bad)  
  408577:	jg     0x4085d3
  408579:	push   es
  40857a:	add    BYTE PTR [eax],al
  40857c:	dec    edx
  40857d:	push   es
  40857e:	add    BYTE PTR [eax],al
  408580:	dec    edx
  408581:	push   es
  408582:	add    BYTE PTR [eax],al
  408584:	pop    edx
  408585:	push   es
  408586:	add    BYTE PTR [eax],al
  408588:	pop    edx
  408589:	push   es
  40858a:	add    BYTE PTR [eax],al
  40858c:	sbb    al,0xf8
  40858e:	(bad)  
  40858f:	sti    
  408590:	dec    ebx
  408591:	push   es
  408592:	add    al,bh
  408594:	sbb    eax,DWORD PTR [esi]
  408596:	add    BYTE PTR [eax+0x1a],bh
  408599:	push   es
  40859a:	add    BYTE PTR [eax],al
  40859c:	or     al,BYTE PTR [esi]
  40859e:	add    BYTE PTR [eax],al
  4085a0:	or     al,BYTE PTR [esi]
  4085a2:	add    BYTE PTR [eax],al
  4085a4:	sbb    al,BYTE PTR [esi]
  4085a6:	add    BYTE PTR [eax],al
  4085a8:	add    BYTE PTR [eax],al
  4085aa:	add    BYTE PTR [ebp-0x8],cl
  4085ad:	(bad)  
  4085ae:	dec    DWORD PTR [edx]
  4085b0:	push   es
  4085b1:	add    BYTE PTR [eax],al
  4085b3:	repz pop ds
  4085b5:	add    eax,DWORD PTR [eax]
  4085b7:	repz pop ds
  4085b9:	add    eax,DWORD PTR [eax]
  4085bb:	jae    0x4085dc
  4085bd:	add    eax,DWORD PTR [eax]
  4085bf:	repz pop ds
  4085c1:	add    eax,DWORD PTR [eax]
  4085c3:	repz pop ds
  4085c5:	add    eax,DWORD PTR [eax]
  4085c7:	repz pop ds
  4085c9:	add    eax,DWORD PTR [eax]
  4085cb:	repz lahf 
  4085cd:	add    eax,DWORD PTR [eax]
  4085cf:	repz pop ds
  4085d1:	add    eax,DWORD PTR [eax]
  4085d3:	repz pop ds
  4085d5:	add    al,BYTE PTR [ecx]
  4085d7:	repz push ds
  4085d9:	add    al,BYTE PTR [eax]
  4085db:	repz pop ds
  4085dd:	add    eax,DWORD PTR [eax]
  4085df:	repz pop ds
  4085e1:	add    eax,DWORD PTR [eax]
  4085e3:	repz pop ds
  4085e5:	add    eax,DWORD PTR [eax]
  4085e7:	repz pop ds
  4085e9:	add    eax,DWORD PTR [eax]
  4085eb:	repz push ds
  4085ed:	add    eax,DWORD PTR [eax]
  4085ef:	repz lahf 
  4085f1:	add    eax,DWORD PTR [eax]
  4085f3:	repz lahf 
  4085f5:	add    DWORD PTR [eax-0x7ffce08d],0xfffffff3
  4085fc:	and    ecx,DWORD PTR [edi]
  4085fe:	sbb    al,0xff
  408600:	dec    ebx
  408601:	nop    edi
  408604:	push   ebx
  408605:	(bad)  
  408607:	repz pop ds
  408609:	add    eax,DWORD PTR [eax]
  40860b:	jae    0x40862c
  40860d:	or     eax,0x1a
  408612:	fld    DWORD PTR ds:0x2de11a0e
  408618:	adc    eax,0x152e0112
  40861d:	adc    al,BYTE PTR [ecx]
  40861f:	dec    esi
  408620:	adc    eax,0x154e0112
  408625:	adc    al,BYTE PTR [ecx]
  408627:	dec    esi
  408628:	adc    eax,0x29f7312
  40862d:	and    bl,0x6
  408630:	jmp    0x34d5f42
  408635:	push   cs
  408636:	fst    DWORD PTR [ebx+edi*8]
  408639:	adc    eax,0x15fb1501
  40863e:	add    DWORD PTR ds:0x150115db,edx
  408644:	fist   DWORD PTR ds:0x15db1501
  40864a:	loope  0x4085d2
  40864c:	imul   eax,DWORD PTR [ebx],0x3e906f3
  408652:	repz push es
  408654:	jmp    0xe947795c
  408659:	add    esi,ebx
  40865b:	push   es
  40865c:	jmp    0xe9477964
  408661:	add    esi,ebx
  408663:	push   es
  408664:	jmp    0xe947796c
  408669:	add    esi,ebx
  40866b:	push   es
  40866c:	jmp    0xe9477974
  408671:	add    esi,ebx
  408673:	push   es
  408674:	jmp    0x40867c
  408679:	repz push es
  40867b:	jmp    0xe9477983
  408680:	add    esi,ebx
  408682:	push   es
  408683:	jmp    0xe947798b
  408688:	add    esi,ebx
  40868a:	push   es
  40868b:	jmp    0xe9477993
  408690:	add    esi,ebx
  408692:	push   es
  408693:	jmp    0xe947799b
  408698:	add    esi,ebx
  40869a:	push   es
  40869b:	jmp    0xe94779a3
  4086a0:	add    esi,ebx
  4086a2:	push   es
  4086a3:	jmp    0xe94779ab
  4086a8:	add    esi,ebx
  4086aa:	push   es
  4086ab:	add    cl,ch
  4086ad:	lock push es
  4086af:	add    cl,ch
  4086b1:	lock push es
  4086b3:	add    cl,ch
  4086b5:	lock push es
  4086b7:	add    cl,ch
  4086b9:	lock push es
  4086bb:	add    cl,ch
  4086bd:	lock push es
  4086bf:	add    cl,ch
  4086c1:	lock push es
  4086c3:	add    cl,ch
  4086c5:	lock push es
  4086c7:	add    cl,ch
  4086c9:	lock push es
  4086cb:	add    cl,ch
  4086cd:	lock push es
  4086cf:	add    cl,ch
  4086d1:	lock push es
  4086d3:	add    BYTE PTR [ebp+0x51],dl
  4086d6:	xchg   edi,eax
  4086d7:	jo     0x40872c
  4086d9:	imul   edx,DWORD PTR [esi+0x9170],0x0
  4086e0:	loopne 0x408737
  4086e2:	inc    ecx
  4086e3:	inc    ebx
  4086e4:	inc    edi
  4086e5:	xchg   edi,eax
  4086e6:	jo     0x40873a
  4086e8:	pop    ss
  4086e9:	xchg   esi,eax
  4086ea:	jo     0x408714
  4086ec:	xchg   edi,eax
  4086ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ee:	or     ebx,DWORD PTR [esi+0x6f]
  4086f1:	daa    
  4086f2:	xor    bh,BYTE PTR [eax+0x3dd92db5]
  4086f8:	adc    BYTE PTR [ebx+edi*2-0x3d4df38b],0x33
  408700:	repnz sub cl,bh
  408703:	les    edi,FWORD PTR [edx]
  408705:	hlt    
  408706:	inc    esi
  408707:	into   
  408708:	iret   
  408709:	rol    eax,cl
  40870b:	sub    DWORD PTR [edi],edi
  40870d:	aas    
  40870e:	mov    ebx,0x704ddfed
  408713:	mov    bl,BYTE PTR [esi+0x6e877a6c]
  408719:	into   
  40871a:	cdq    
  40871b:	pop    edx
  40871c:	leave  
  40871d:	jp     0x4086db
  40871f:	mov    edx,0xf47ffa67
  408724:	mov    ebp,esi
  408726:	ins    DWORD PTR es:[edi],dx
  408727:	add    BYTE PTR [eax+eiz*1+0x53],dh
  40872b:	fist   WORD PTR [edi+0xaf0e764]
  408731:	push   0x842d73fe
  408736:	mov    ebx,0xbb388421
  40873b:	ret    
  40873c:	mov    al,ds:0xe429a473
  408741:	mov    ch,0xf0
  408743:	mov    dh,0x0
  408745:	add    BYTE PTR [eax],al
  408747:	test   ah,dh
  408749:	adc    DWORD PTR [edi+0x64a66bb8],ebx
  40874f:	retf   
  408750:	and    edx,DWORD PTR [edx-0x70]
  408753:	add    eax,DWORD PTR [edi-0x52]
  408756:	sbb    BYTE PTR [edx-0x16],0x4b
  40875a:	sbb    DWORD PTR [edi],esp
  40875c:	div    BYTE PTR [esi+0x5e]
  40875f:	xor    dl,dl
  408761:	mov    DWORD PTR [edi],esi
  408763:	cmp    BYTE PTR [ebx],0x1c
  408766:	sub    BYTE PTR [edi+0x73],dl
  408769:	(bad)  
  40876a:	fwait
  40876b:	into   
  40876c:	sti    
  40876d:	aam    0x22
  40876f:	(bad)  
  408770:	and    al,0xac
  408772:	popa   
  408773:	xor    ebx,edi
  408775:	loop   0x40873a
  408777:	in     al,dx
  408778:	scas   al,BYTE PTR es:[edi]
  408779:	sub    al,0xe4
  40877b:	ret    0x11fd
  40877e:	adc    DWORD PTR [eax-0x2],edi
  408781:	mov    dl,0x21
  408783:	pop    es
  408784:	xchg   edx,eax
  408785:	mov    esi,0xb5cfc7ed
  40878a:	xchg   edi,eax
  40878b:	cmp    al,0xa7
  40878d:	inc    esp
  40878e:	fwait
  40878f:	shr    BYTE PTR [ebx-0x2dd04d0d],0xcc
  408796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408797:	dec    ebx
  408798:	jmp    0x8d41bc4
  40879d:	mov    ecx,0xf8035655
  4087a2:	(bad)
  4087a7:	shr    DWORD PTR [ebx-0x14],cl
  4087aa:	fiadd  WORD PTR [eax]
  4087ac:	add    BYTE PTR [eax],al
  4087ae:	xchg   esi,eax
  4087af:	je     0x408805
  4087b1:	jns    0x408823
  4087b3:	aaa    
  4087b4:	das    
  4087b5:	and    ebx,ebx
  4087b7:	sub    al,BYTE PTR [esi+0x2427b9]
  4087bd:	jg     0x40882f
  4087bf:	popf   
  4087c0:	fbld   TBYTE PTR [eax+0x32f5f29]
  4087c6:	cli    
  4087c7:	jbe    0x4087b7
  4087c9:	push   ds
  4087ca:	add    eax,0x6412f19
  4087cf:	mov    edx,0x33147452
  4087d4:	shr    DWORD PTR [ebp-0x3],1
  4087d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087d8:	xchg   DWORD PTR [edi+0x7f],esi
  4087db:	push   es
  4087dc:	jmp    0x47b138be
  4087e1:	push   ds
  4087e2:	lds    edi,FWORD PTR [eax]
  4087e4:	aaa    
  4087e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087e6:	fisttp WORD PTR [esi]
  4087e8:	mov    dl,0x92
  4087ea:	jae    0x4087e6
  4087ec:	inc    esp
  4087ed:	bound  edi,QWORD PTR [edx-0x40]
  4087f0:	fld    st(0)
  4087f2:	mov    dh,0x2f
  4087f4:	add    eax,DWORD PTR [eax]
  4087f6:	xrelease mov DWORD PTR [eax+eax*1],eax
  4087fa:	repz scas eax,DWORD PTR es:[edi]
  4087fc:	add    DWORD PTR [eax],eax
  4087fe:	repz push edx
  408800:	add    eax,DWORD PTR [eax]
  408802:	repz mov eax,0xff30003
  408808:	std    
  408809:	jmp    DWORD PTR [edx+ecx*2+0x3]
  40880d:	add    bl,dh
  40880f:	mov    ebx,0x3
  408814:	add    bl,dh
  408816:	paddw  mm7,mm7
  408819:	dec    esp
  40881a:	push   edx
  40881b:	add    eax,DWORD PTR [eax]
  40881d:	repz loop 0x408823
  408820:	add    bl,dh
  408822:	push   es
  408823:	imul   eax,DWORD PTR [ecx],0x40406f3
  408829:	repz push es
  40882b:	xchg   DWORD PTR [ebx],eax
  40882d:	repz push es
  40882f:	imul   eax,DWORD PTR [ecx],0x40c06f3
  408835:	repz push es
  408837:	mov    es,WORD PTR [ebx]
  408839:	repz push es
  40883b:	imul   eax,DWORD PTR [ecx],0x40406f3
  408841:	repz push es
  408843:	pop    ecx
  408844:	add    esi,ebx
  408846:	push   es
  408847:	mov    esp,edi
  408849:	in     al,dx
  40884a:	and    al,0xcd
  40884c:	add    esi,ebx
  40884e:	push   es
  40884f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  408851:	pusha  
  408852:	mov    bh,0xfa
  408854:	pushf  
  408855:	push   ecx
  408856:	mov    BYTE PTR [eax+ebp*4],0x42
  40885a:	stos   BYTE PTR es:[edi],al
  40885b:	stc    
  40885c:	mov    al,0xc4
  40885e:	and    al,0x1d
  408860:	popf   
  408861:	push   ebx
  408862:	stos   DWORD PTR es:[edi],eax
  408863:	mov    ah,0x9a
  408865:	push   edx
  408866:	cdq    
  408867:	(bad)  
  408868:	mov    cl,0x2b
  40886a:	(bad)  
  40886b:	call   0x9f477b73
  408870:	mov    bh,0x31
  408872:	cdq    
  408873:	retf   
  408874:	mov    ds:0x9b94aa20,al
  408879:	add    BYTE PTR [eax],al
  40887b:	add    BYTE PTR [edx],al
  40887d:	stos   BYTE PTR es:[edi],al
  40887e:	(bad)  
  40887f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408880:	test   BYTE PTR [edi+ebx*4],ah
  408883:	mov    bh,0x31
  408885:	cdq    
  408886:	mov    esp,DWORD PTR [edx-0x4f4c5600]
  40888c:	xlat   BYTE PTR ds:[ebx]
  40888d:	cwde   
  40888e:	mov    eax,0x83a7d5b1
  408893:	mov    al,0xe1
  408895:	push   es
  408896:	mov    bh,0xb7
  408898:	ret    
  408899:	cdq    
  40889a:	xor    DWORD PTR [ecx-0x79003235],0xffffff8e
  4088a1:	mov    ch,0x71
  4088a3:	jl     0x408836
  4088a5:	cwde   
  4088a6:	push   0x71d45956
  4088ab:	dec    esi
  4088ac:	push   esp
  4088ad:	stos   DWORD PTR es:[edi],eax
  4088ae:	jb     0x40890a
  4088b0:	out    dx,eax
  4088b1:	push   es
  4088b2:	add    BYTE PTR [ebx],bh
  4088b4:	arpl   WORD PTR [eax-0x69adc5ac],si
  4088ba:	push   ebx
  4088bb:	push   ecx
  4088bc:	inc    ebp
  4088bd:	stos   DWORD PTR es:[edi],eax
  4088be:	pusha  
  4088bf:	dec    ebp
  4088c0:	sbb    al,0x98
  4088c2:	pusha  
  4088c3:	cmp    eax,DWORD PTR [ebx+0x24]
  4088c6:	push   DWORD PTR ds:0xe4b9653
  4088cc:	xchg   esi,eax
  4088cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088ce:	inc    ebx
  4088cf:	add    eax,0x1dff238b
  4088d4:	xchg   ebx,eax
  4088d5:	xchg   ebp,eax
  4088d6:	inc    esi
  4088d7:	or     al,0xa3
  4088d9:	(bad)  
  4088da:	imul   ecx,DWORD PTR ds:0xd6da68f,0x0
  4088e1:	add    BYTE PTR [eax],al
  4088e3:	imul   ebp,DWORD PTR [edx-0x550f4101],0xffffffff
  4088ea:	(bad)  
  4088eb:	lock call 0xba00:0x6f0e8ff
  4088f3:	lock sar edi,cl
  4088f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088f7:	lock mov edx,0xc5f09dff
  4088fd:	call   FWORD PTR [edx-0x6b003610]
  408903:	lock sar edi,1
  408906:	mov    edi,0x9affa7f0
  40890b:	lock mov bl,0xff
  40890e:	cdq    
  40890f:	lock mov bl,0xff
  408912:	mov    ?,eax
  408914:	call   0xffff:0xbbf0acff
  40891b:	add    DWORD PTR [edi],0x6e
  40891e:	add    BYTE PTR [esi+0x7],dh
  408921:	outs   dx,DWORD PTR ds:[esi]
  408922:	add    ch,al
  408924:	pop    es
  408925:	jae    0x408927
  408927:	sub    al,BYTE PTR [edi]
  408929:	dec    esi
  40892a:	add    dh,dh
  40892c:	or     bl,BYTE PTR [eax+eax*1-0x27]
  408930:	or     dh,BYTE PTR [ebp+0x0]
  408933:	enter  0x720a,0x0
  408937:	mov    bh,0xa
  408939:	outs   dx,BYTE PTR ds:[esi]
  40893a:	add    dh,dl
  40893c:	or     dl,BYTE PTR [esi+0x0]
  40893f:	mov    bh,0xa
  408941:	jb     0x408943
  408943:	leave  
  408944:	or     ch,BYTE PTR [ecx+0x0]
  408947:	add    BYTE PTR [eax],al
  408949:	add    BYTE PTR [ebp-0x51ff91f6],bh
  40894f:	or     dl,BYTE PTR [eax+0x0]
  408952:	or     BYTE PTR [ebx],cl
  408954:	outs   dx,DWORD PTR ds:[esi]
  408955:	add    ah,dh
  408957:	or     ch,BYTE PTR [ecx+0x0]
  40895a:	fiadd  WORD PTR [esi]
  40895c:	add    BYTE PTR gs:[esi],bl
  40895f:	or     ebp,DWORD PTR [ecx+0x0]
  408962:	leave  
  408963:	push   es
  408964:	je     0x408966
  408966:	fimul  WORD PTR [edx]
  408968:	and    eax,0x6b900
  40896d:	add    BYTE PTR [edx+0x6],bh
  408970:	jb     0x408972
  408972:	mov    ebp,0xb3006606
  408977:	push   es
  408978:	ins    BYTE PTR es:[edi],dx
  408979:	add    BYTE PTR [edi-0x40ffb6fa],dh
  40897f:	push   es
  408980:	popa   
  408981:	add    BYTE PTR [ebp+0x6a006506],dh
  408987:	push   es
  408988:	popa   
  408989:	add    BYTE PTR [esi+0x6],al
  40898c:	push   0x68a00
  408991:	add    BYTE PTR [edx+0x72],bl
  408994:	xor    eax,0xaf2ef319
  408999:	xor    eax,0xd0451cfa
  40899e:	fild   DWORD PTR [ebx+0x45]
  4089a1:	ror    bl,1
  4089a3:	cmp    eax,0x2b9139e6
  4089a8:	add    eax,DWORD PTR [eax]
  4089aa:	repz inc edx
  4089ac:	std    
  4089ad:	inc    DWORD PTR [eax]
  4089af:	add    BYTE PTR [eax],al
  4089b1:	xor    al,0xe6
  4089b3:	jecxz  0x4089b4
  4089b5:	sub    al,0x81
  4089b7:	jno    0x4089f9
  4089b9:	repz sub ebp,DWORD PTR [ebx+0x40]
  4089bd:	repz imul DWORD PTR [edx+0x40]
  4089c1:	repz retf 
  4089c3:	rol    DWORD PTR [ecx-0xd],0xc6
  4089c7:	push   0x40
  4089c9:	repz dec edi
  4089cb:	imul   eax,DWORD PTR [eax-0xd],0x30
  4089cf:	push   0x40
  4089d1:	repz jmp 0x408995
  4089d4:	inc    ecx
  4089d5:	repz out 0xc1,al
  4089d8:	inc    ecx
  4089d9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089db:	ins    BYTE PTR es:[edi],dx
  4089dc:	inc    eax
  4089dd:	repz das 
  4089df:	add    eax,DWORD PTR [eax]
  4089e1:	repz das 
  4089e3:	add    eax,DWORD PTR [eax]
  4089e5:	repz ret 0x4033
  4089e9:	repz mov es,WORD PTR [eax]
  4089ec:	dec    ebx
  4089ed:	outs   dx,BYTE PTR ds:[esi]
  4089ee:	pop    esi
  4089ef:	adc    al,0xd0
  4089f1:	loop   0x4089a1
  4089f3:	imul   eax,DWORD PTR [eax],0xffffffb3
  4089f6:	jo     0x408a43
  4089f8:	pop    edx
  4089f9:	pop    edi
  4089fa:	scas   al,BYTE PTR es:[edi]
  4089fb:	iret   
  4089fc:	inc    ebp
  4089fd:	sahf   
  4089fe:	stos   DWORD PTR es:[edi],eax
  4089ff:	adc    al,0xd0
  408a01:	add    dh,BYTE PTR [ebp+0x67]
  408a04:	add    bl,dl
  408a06:	nop
  408a07:	dec    ecx
  408a08:	sar    ecx,1
  408a0a:	cli    
  408a0b:	out    0x84,eax
  408a0d:	jle    0x4089b8
  408a0f:	test   al,0xcf
  408a11:	loop   0x408a19
  408a13:	imul   edx,esi,0x0
  408a16:	add    BYTE PTR [eax],al
  408a18:	ins    BYTE PTR es:[edi],dx
  408a19:	popa   
  408a1a:	scas   al,BYTE PTR es:[edi]
  408a1b:	dec    ebx
  408a1c:	leave  
  408a1d:	pop    edx
  408a1e:	mov    eax,0x674bbb84
  408a23:	test   eax,0xd66af724
  408a28:	dec    esp
  408a29:	popa   
  408a2a:	scas   al,BYTE PTR es:[edi]
  408a2b:	dec    ebx
  408a2c:	test   eax,0x77e81c5a
  408a31:	and    esp,DWORD PTR [edi-0x57]
  408a34:	and    al,0xf7
  408a36:	push   0xffffffd5
  408a38:	sub    al,0x61
  408a3a:	cs dec esp
  408a3c:	leave  
  408a3d:	pop    edx
  408a3e:	adc    BYTE PTR [ebp-0x4333d611],0x43
  408a45:	div    DWORD PTR [edx-0x72]
  408a48:	repz inc esi
  408a4a:	imul   esp,DWORD PTR cs:[edx-0x106a7ceb],0x29
  408a52:	lods   al,BYTE PTR ds:[esi]
  408a53:	mov    esp,0x8e72f723
  408a58:	repz inc esi
  408a5a:	imul   eax,DWORD PTR cs:[edx+0x14],0xffffffe3
  408a5f:	add    esi,ebx
  408a61:	push   es
  408a62:	jno    0x408a99
  408a64:	xor    eax,DWORD PTR [edi]
  408a66:	cmp    DWORD PTR [edi],esp
  408a68:	xor    eax,DWORD PTR [edi]
  408a6a:	mov    dl,0x29
  408a6c:	xor    eax,DWORD PTR [edi]
  408a6e:	add    al,BYTE PTR [esi+edx*2]
  408a71:	pop    es
  408a72:	sti    
  408a73:	add    eax,DWORD PTR [ebp+0x7]
  408a76:	int3   
  408a77:	add    ebx,DWORD PTR [edi]
  408a79:	pop    es
  408a7a:	sbb    al,BYTE PTR [eax+eax*1]
  408a7d:	add    BYTE PTR [eax],al
  408a7f:	loope  0x408a87
  408a81:	pop    es
  408a82:	add    al,0x17
  408a84:	pop    es
  408a85:	mov    ebp,0xe9070703
  408a8a:	add    esi,ebx
  408a8c:	push   es
  408a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a8e:	sahf   
  408a8f:	add    cl,cl
  408a91:	(bad)  
  408a92:	mov    edi,0xbf48ab64
  408a97:	push   edx
  408a98:	mov    cl,0x71
  408a9a:	xchg   esp,eax
  408a9b:	xchg   ecx,eax
  408a9c:	xchg   esp,eax
  408a9d:	push   0x78c68a8e
  408aa2:	mov    eax,ds:0x7d63b291
  408aa7:	jne    0x408a74
  408aa9:	ja     0x408a94
  408aab:	lock push es
  408aad:	add    BYTE PTR [edx-0x7fba6b9b],bl
  408ab3:	fs stos DWORD PTR es:[edi],eax
  408ab5:	dec    eax
  408ab6:	jg     0x408a4a
  408ab8:	mov    cl,0x71
  408aba:	push   esp
  408abb:	push   esi
  408abc:	xchg   esp,eax
  408abd:	push   0x78c67d4e
  408ac2:	and    DWORD PTR [esi-0x4e],edx
  408ac5:	arpl   WORD PTR ds:0x1bff2052,di
  408acb:	dec    ebp
  408acc:	(bad)  
  408acd:	pop    ds
  408ace:	stc    
  408acf:	add    ch,dl
  408ad1:	sub    eax,0x9d500f9
  408ad6:	jmp    0x3b4091cb
  408adb:	lods   eax,DWORD PTR ds:[esi]
  408adc:	lds    ebx,FWORD PTR [edi]
  408ade:	jmp    0x74091d3
  408ae3:	add    BYTE PTR [eax],al
  408ae5:	add    bh,dh
  408ae7:	xchg   ebx,eax
  408ae8:	call   FWORD PTR [eax]
  408aea:	out    dx,eax
  408aeb:	xchg   esp,eax
  408aec:	(bad)  
  408aed:	mov    esp,0x4fff0f0
  408af2:	out    dx,eax
  408af3:	mov    dl,0xff
  408af5:	add    al,0xf7
  408af7:	push   es
  408af8:	add    BYTE PTR [ecx],bl
  408afa:	mov    eax,ds:0x53d94ec0
  408aff:	mov    cl,0x53
  408b01:	stos   BYTE PTR es:[edi],al
  408b02:	shl    BYTE PTR [esi+ebp*2+0x73aa79ca],0xe9
  408b0a:	lock push es
  408b0c:	add    BYTE PTR [eax],al
  408b0e:	push   0x35
  408b10:	pop    esi
  408b11:	inc    ebx
  408b12:	mov    dh,0x78
  408b14:	jb     0x408b7b
  408b16:	mov    al,BYTE PTR [ebx]
  408b18:	add    BYTE PTR [eax],al
  408b1a:	pop    edx
  408b1b:	xor    eax,0x7785505e
  408b20:	imul   eax,DWORD PTR [eax],0xffffffaa
  408b23:	xor    eax,0x6a6f525e
  408b28:	arpl   WORD PTR [eax],ax
  408b2a:	call   0x7382:0xc8575e35
  408b31:	gs pop edx
  408b33:	add    eax,DWORD PTR [eax]
  408b35:	add    BYTE PTR [edx+0x3],cl
  408b38:	add    BYTE PTR [eax],al
  408b3a:	dec    edx
  408b3b:	add    eax,DWORD PTR [eax]
  408b3d:	add    BYTE PTR [edx],bl
  408b3f:	add    eax,DWORD PTR [eax]
  408b41:	add    BYTE PTR [edx],bl
  408b43:	add    eax,DWORD PTR [ecx]
  408b45:	add    dl,bh
  408b47:	sub    al,0x2f
  408b49:	add    BYTE PTR [eax],al
  408b4b:	add    BYTE PTR [eax],al
  408b4d:	sbb    BYTE PTR [eax],dh
  408b4f:	inc    eax
  408b50:	add    BYTE PTR [edi],cl
  408b52:	daa    
  408b53:	inc    eax
  408b54:	add    BYTE PTR [eax+0x27],ch
  408b57:	inc    eax
  408b58:	add    BYTE PTR [edi],cl
  408b5a:	cs inc eax
  408b5c:	add    BYTE PTR [esi-0x38ffbfd2],bl
  408b62:	or     al,BYTE PTR [eax]
  408b64:	add    bl,bl
  408b66:	or     DWORD PTR [eax+eax*1],eax
  408b69:	mov    al,0x35
  408b6b:	sub    DWORD PTR [eax],eax
  408b6d:	sbb    dl,BYTE PTR [esi+0x52]
  408b70:	push   esp
  408b71:	fimul  DWORD PTR [edx]
  408b73:	add    BYTE PTR [eax],al
  408b75:	or     eax,0x12005348
  408b7a:	aaa    
  408b7b:	push   ebx
  408b7c:	push   eax
  408b7d:	jne    0x408b92
  408b7f:	sub    eax,0xa9a31
  408b84:	add    BYTE PTR [ebx+0x69],bl
  408b87:	bound  esp,QWORD PTR [ebp-0xd]
  408b8a:	aas    
  408b8b:	scas   eax,DWORD PTR es:[edi]
  408b8c:	sub    al,0x27
  408b8e:	dec    edi
  408b8f:	xchg   ebp,eax
  408b90:	pushw  es
  408b92:	dec    edi
  408b93:	sahf   
  408b94:	fs leave 
  408b96:	(bad)  
  408b98:	add    bl,dh
  408b9a:	jo     0x408b32
  408b9c:	ins    DWORD PTR es:[edi],dx
  408b9d:	add    eax,0xda73a243
  408ba2:	je     0x408b39
  408ba4:	cmp    DWORD PTR [ebx],edx
  408ba6:	jno    0x408b3f
  408ba8:	outs   dx,BYTE PTR ds:[esi]
  408ba9:	loopne 0x408b35
  408bab:	clc    
  408bac:	or     ebx,esi
  408bae:	jb     0x408b61
  408bb0:	imul   eax,DWORD PTR [eax],0x0
  408bb3:	add    dh,bl
  408bb5:	je     0x408b4c
  408bb7:	sub    eax,0xff978bcf
  408bbc:	cmp    al,0x65
  408bbe:	mov    eax,ds:0x9586d273
  408bc3:	push   esp
  408bc4:	mov    al,ds:0x8c40b1ca
  408bc9:	ret    0x7395
  408bcc:	sar    BYTE PTR [ebx-0x3b7a974f],0x3
  408bd3:	add    bl,dh
  408bd5:	in     al,dx
  408bd6:	mov    esi,0x32fd353
  408bdb:	add    bl,dh
  408bdd:	push   DWORD PTR [edx+edx*2+0x40f9f]
  408be4:	repz repz call 0xdcff:0xedf7e4ff
  408bed:	pop    es
  408bee:	out    dx,eax
  408bef:	call   esp
  408bf1:	pop    es
  408bf2:	lock dec esp
  408bf5:	div    eax
  408bf7:	inc    esp
  408bf9:	div    ecx
  408bfb:	(bad)  
  408bfc:	mov    esp,0xb4fff307
  408c01:	add    ebx,DWORD PTR [ebx-0x22f90c8b]
  408c07:	lahf   
  408c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c09:	sbb    eax,0x1d9cb1d5
  408c0e:	shl    DWORD PTR [ecx-0x4e34e26c],0x8c
  408c15:	sbb    eax,0x1eb
  408c1a:	add    cl,dh
  408c1c:	or     dl,ch
  408c1e:	add    ecx,esi
  408c20:	or     bl,ch
  408c22:	add    ecx,esi
  408c24:	or     bl,ah
  408c26:	stc    
  408c27:	cli    
  408c28:	out    0xf2,al
  408c2a:	stc    
  408c2b:	cli    
  408c2c:	adc    bl,dh
  408c2e:	stc    
  408c2f:	jmp    0x98af:0xe2a09a10
  408c36:	scas   eax,DWORD PTR es:[edi]
  408c37:	dec    esp
  408c38:	sbb    eax,0x96c1a197
  408c3d:	rol    DWORD PTR [ebx],0xf3
  408c40:	push   es
  408c41:	stos   DWORD PTR es:[edi],eax
  408c42:	mov    ds:0xe389afc1,al
  408c47:	sub    al,0x1d
  408c49:	xor    BYTE PTR [ecx-0x11aa5243],dh
  408c4f:	loopne 0x408c07
  408c51:	pop    edx
  408c52:	xchg   ebp,eax
  408c53:	xchg   ecx,eax
  408c54:	mov    ds:0x1d0cb159,eax
  408c59:	or     eax,DWORD PTR [esi+ecx*8]
  408c5c:	push   es
  408c5d:	cmp    al,BYTE PTR [ecx+edx*8]
  408c60:	push   es
  408c61:	jmp    0xb477f69
  408c66:	add    al,0x16
  408c68:	pop    es
  408c69:	sbb    al,BYTE PTR [ecx+edx*1]
  408c6c:	pop    es
  408c6d:	leave  
  408c6e:	add    edx,DWORD PTR [esi]
  408c70:	pop    es
  408c71:	sbb    al,BYTE PTR [ebx+esi*8]
  408c74:	push   es
  408c75:	adc    al,0xb1
  408c77:	push   edi
  408c78:	cdq    
  408c79:	or     edx,DWORD PTR [esi-0x67fb12c2]
  408c7f:	add    BYTE PTR [eax],al
  408c81:	add    BYTE PTR [eax+0x7],cl
  408c84:	add    BYTE PTR [edx],ch
  408c86:	and    DWORD PTR [ebx-0x3c720aa0],0x9689df6d
  408c90:	outs   dx,BYTE PTR ds:[esi]
  408c91:	iret   
  408c92:	test   DWORD PTR [ebx-0x4f4d2293],esp
  408c98:	outs   dx,BYTE PTR ds:[esi]
  408c99:	retf   0x1c6b
  408c9c:	jmp    FWORD PTR [ebp-0x448c669b]
  408ca2:	addr16 lahf 
  408ca4:	inc    esp
  408ca5:	mov    DWORD PTR [esi-0x51],0xab86be71
  408cac:	fs xchg edi,eax
  408cae:	xchg   esp,eax
  408caf:	(bad)  
  408cb0:	imul   ecx,DWORD PTR [esi-0x66004e6d],0xfffffff0
  408cb7:	scas   al,BYTE PTR es:[edi]
  408cb8:	inc    DWORD PTR [ebx-0x6b005510]
  408cbe:	lock xlat BYTE PTR ds:[ebx]
  408cc0:	(bad)  
  408cc1:	mov    edx,0x8cffecf0
  408cc6:	lock stos BYTE PTR es:[edi],al
  408cc8:	(bad)  
  408cc9:	jl     0x408cbb
  408ccb:	push   es
  408ccc:	add    BYTE PTR [ebx],ah
  408cce:	pop    ebx
  408ccf:	or     ecx,DWORD PTR [edx]
  408cd1:	inc    ebp
  408cd2:	dec    edx
  408cd3:	mov    al,0x1f
  408cd5:	or     ecx,DWORD PTR [edx]
  408cd7:	cdq    
  408cd8:	and    esp,ebx
  408cda:	(bad)  
  408cdb:	lods   eax,DWORD PTR ds:[esi]
  408cdc:	or     DWORD PTR gs:[edx-0x6c],ebx
  408ce0:	push   0x21fc5b3a
  408ce5:	or     al,0x0
  408ce7:	add    BYTE PTR [eax],al
  408ce9:	pop    esp
  408cea:	out    0x1f,al
  408cec:	inc    esi
  408ced:	mov    al,ds:0x8cc96e97
  408cf2:	sbb    edi,edi
  408cf4:	or     esi,edi
  408cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cf7:	call   FWORD PTR [edi+ebp*8]
  408cfa:	push   es
  408cfb:	add    BYTE PTR [ecx],ch
  408cfd:	call   0x6e22:0xdd0067a8
  408d04:	data16 hlt 
  408d06:	cmc    
  408d07:	or     DWORD PTR ds:0x6409f6b9,esp
  408d0d:	not    DWORD PTR [esi+0x1f]
  408d10:	das    
  408d11:	push   esp
  408d12:	daa    
  408d13:	and    DWORD PTR ds:0xa0c21b9,esp
  408d19:	mov    al,BYTE PTR [edi]
  408d1b:	add    BYTE PTR [eax],al
  408d1d:	lea    eax,[edi]
  408d1f:	arpl   WORD PTR [eax],ax
  408d21:	cli    
  408d22:	add    ah,BYTE PTR [edx]
  408d24:	add    bh,dh
  408d26:	add    dh,BYTE PTR [ebx+0x0]
  408d29:	call   0x99408d30
  408d2e:	pop    es
  408d2f:	outs   dx,DWORD PTR ds:[esi]
  408d30:	add    BYTE PTR [edi+0x7],bh
  408d33:	push   ebx
  408d34:	add    BYTE PTR [edx+0x7],bh
  408d37:	add    BYTE PTR gs:[ecx+0x7],ch
  408d3b:	add    BYTE PTR [eax],al
  408d3d:	das    
  408d3e:	or     DWORD PTR ds:0x75a0a,ecx
  408d44:	add    BYTE PTR [edx-0xa],bh
  408d47:	or     DWORD PTR ds:0x750,ecx
  408d4d:	add    BYTE PTR [eax],al
  408d4f:	add    BYTE PTR [edi],dh
  408d51:	jg     0x408d52
  408d53:	(bad)  
  408d54:	jmp    0xd940f25b
  408d59:	add    ch,BYTE PTR [eax+0x0]
  408d5c:	mov    bh,0x2
  408d5e:	je     0x408d60
  408d60:	mov    dh,0x2
  408d62:	outs   dx,DWORD PTR ds:[esi]
  408d63:	add    ch,al
  408d65:	add    ch,BYTE PTR [esi+0x0]
  408d68:	fiadd  DWORD PTR [edx]
  408d6a:	jb     0x408d6c
  408d6c:	mov    bl,0x2
  408d6e:	jbe    0x408d70
  408d70:	xor    eax,DWORD PTR [ebx]
  408d72:	ins    BYTE PTR es:[edi],dx
  408d73:	add    bh,dh
  408d75:	add    ah,BYTE PTR [edi+0x0]
  408d78:	test   DWORD PTR [edx],0x12f30000
  408d7e:	add    eax,DWORD PTR [eax]
  408d80:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d82:	dec    edx
  408d83:	inc    ecx
  408d84:	repz mov dh,0x4b
  408d87:	inc    ecx
  408d88:	repz cld 
  408d8a:	add    edi,DWORD PTR [edx]
  408d8c:	repz inc edi
  408d8e:	add    ecx,DWORD PTR [ebp-0xd]
  408d91:	sti    
  408d92:	add    edi,DWORD PTR [ebx]
  408d94:	repz in al,0x3
  408d97:	dec    esi
  408d98:	repz pop ebp
  408d9a:	add    ecx,DWORD PTR [esi-0xd]
  408d9d:	pop    eax
  408d9e:	add    ecx,DWORD PTR [esi-0xd]
  408da1:	push   edi
  408da2:	add    edi,DWORD PTR [ebx]
  408da4:	repz add al,0x4
  408da7:	cmp    esi,ebx
  408da9:	imul   eax,DWORD PTR [ebx],0x57
  408dac:	repz push es
  408dae:	add    al,0x0
  408db0:	repz xchg edi,eax
  408db2:	cmp    al,BYTE PTR [ecx+0x0]
  408db5:	add    BYTE PTR [eax],al
  408db7:	repz retf 
  408db9:	inc    ecx
  408dba:	inc    ecx
  408dbb:	repz mov ch,0x41
  408dbe:	inc    ecx
  408dbf:	repz pop esp
  408dc1:	add    edi,DWORD PTR [ecx-0xd]
  408dc4:	jl     0x408dc9
  408dc6:	dec    esp
  408dc7:	repz jbe 0x408dcd
  408dca:	jae    0x408dbf
  408dcc:	xchg   ebx,eax
  408dcd:	add    dl,BYTE PTR [esi-0xd]
  408dd0:	xchg   BYTE PTR [ebx],al
  408dd2:	gs pause 
  408dd5:	add    dh,BYTE PTR [ebx]
  408dd7:	repz std 
  408dd9:	add    eax,DWORD PTR [eax]
  408ddb:	repz jmp 0x4303:0xe6f34403
  408de3:	repz fild DWORD PTR [ebx]
  408de6:	imul   esi,ebx,0xf36e03ca
  408dec:	rol    DWORD PTR [ebx],cl
  408dee:	add    bl,dh
  408df0:	in     al,dx
  408df1:	add    ebp,DWORD PTR [ecx-0xd]
  408df4:	int3   
  408df5:	add    esp,DWORD PTR [ebp-0xd]
  408df8:	push   es
  408df9:	sbb    eax,DWORD PTR [esp+ecx*2]
  408dfc:	pop    es
  408dfd:	xor    al,0x4
  408dff:	sub    al,BYTE PTR [edi]
  408e01:	ds add al,0x5d
  408e04:	pop    es
  408e05:	add    eax,0xfb072d04
  408e0a:	add    edx,DWORD PTR [edx+0x7]
  408e0d:	or     al,0x4
  408e0f:	dec    esi
  408e10:	pop    es
  408e11:	jmp    0x2a478119
  408e16:	add    al,0x14
  408e18:	pop    es
  408e19:	xlat   BYTE PTR ds:[ebx]
  408e1a:	add    eax,DWORD PTR [eax]
  408e1c:	add    BYTE PTR [eax],al
  408e1e:	and    BYTE PTR [edi],al
  408e20:	into   
  408e21:	add    eax,DWORD PTR [edi]
  408e23:	pop    es
  408e24:	int3   
  408e25:	add    esp,DWORD PTR [edi+eax*1]
  408e28:	rol    BYTE PTR [ebx],0x15
  408e2b:	pop    es
  408e2c:	int    0x3
  408e2e:	or     al,0x7
  408e30:	mov    dh,0x3
  408e32:	xor    BYTE PTR [edi],al
  408e34:	lds    eax,FWORD PTR [ebx]
  408e36:	rol    BYTE PTR [esi],cl
  408e38:	mov    edx,0xe906e003
  408e3d:	add    esi,ebx
  408e3f:	push   es
  408e40:	retf   0x2003
  408e43:	pop    es
  408e44:	fild   DWORD PTR [ebx]
  408e46:	add    al,0x7
  408e48:	xlat   BYTE PTR ds:[ebx]
  408e49:	add    ecx,DWORD PTR [ebx]
  408e4b:	pop    es
  408e4c:	jmp    0x9a478154
  408e51:	add    edi,DWORD PTR [edx-0x3ffc85fa]
  408e57:	push   es
  408e58:	add    DWORD PTR [ebx],0x44d0692
  408e5e:	mov    WORD PTR [esi],es
  408e60:	push   esi
  408e61:	add    al,0xf3
  408e63:	push   es
  408e64:	das    
  408e65:	retf   
  408e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e67:	retf   
  408e68:	and    eax,DWORD PTR [ebx+esi*8]
  408e6b:	push   es
  408e6c:	shl    BYTE PTR [edx],0xfc
  408e6f:	add    eax,0x44283baa
  408e74:	add    BYTE PTR [edx+edi*2-0xf5f39b8],ch
  408e7b:	push   es
  408e7c:	add    BYTE PTR [ebx-0x5a1dcbcf],cl
  408e82:	add    BYTE PTR [eax],al
  408e84:	add    BYTE PTR [edx],ch
  408e86:	inc    ebp
  408e87:	xlat   BYTE PTR ds:[ebx]
  408e88:	test   al,0x8
  408e8a:	sbb    eax,0x1c069ddd
  408e8f:	fsub   DWORD PTR [ebx-0x6a25c6fa]
  408e95:	fdivr  QWORD PTR [eax+eax*8]
  408e98:	xchg   ecx,eax
  408e99:	xor    ecx,DWORD PTR [ecx+edx*8-0x5e]
  408e9d:	xor    DWORD PTR [ebx],ebp
  408e9f:	add    dl,dl
  408ea1:	dec    esp
  408ea2:	lahf   
  408ea3:	outs   dx,BYTE PTR ds:[esi]
  408ea4:	fidivr WORD PTR [ebp-0x56]
  408ea7:	fld    TBYTE PTR ss:[edi-0x70]
  408eab:	jmp    FWORD PTR [eax-0x30bb3d52]
  408eb1:	pop    ebx
  408eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb3:	push   0x6d9045b3
  408eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eb9:	test   DWORD PTR [esi+0x6f0c07c],edx
  408ebf:	add    ch,al
  408ec1:	xor    bh,BYTE PTR [esi-0x5f7863b3]
  408ec7:	inc    eax
  408ec8:	pop    DWORD PTR [ebx-0xf708e56]
  408ece:	push   es
  408ecf:	add    cl,ch
  408ed1:	test   BYTE PTR [eax],0x11
  408ed4:	mov    esp,0xc434dc4b
  408ed9:	adc    ebp,edi
  408edb:	cmp    cl,ah
  408edd:	adc    ebp,esi
  408edf:	sub    dl,BYTE PTR [edi]
  408ee1:	push   cs
  408ee2:	in     eax,dx
  408ee3:	ss cmc 
  408ee5:	lock push es
  408ee7:	add    al,bh
  408ee9:	add    BYTE PTR [eax],al
  408eeb:	add    BYTE PTR [ecx],al
  408eed:	icebp  
  408eee:	add    edi,ebx
  408ef0:	cli    
  408ef1:	mov    bl,0x52
  408ef3:	add    dl,cl
  408ef5:	or     eax,DWORD PTR [eax]
  408ef7:	add    DWORD PTR [edx],ecx
  408ef9:	add    al,0x0
  408efb:	add    BYTE PTR [edi-0x55],cl
  408efe:	mov    eax,ds:0xb1a55fb1
  408f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f04:	pop    eax
  408f05:	mov    DWORD PTR [ebp+edi*4-0x574452bc],edi
  408f0c:	inc    eax
  408f0d:	mov    ebx,0xa75b89a2
  408f12:	mov    ch,0xa5
  408f14:	and    edi,DWORD PTR [ecx-0x6eb34753]
  408f1a:	mov    al,0xba
  408f1c:	dec    esi
  408f1d:	mov    edx,DWORD PTR [edi-0x6ff176]
  408f23:	call   FWORD PTR [ecx]
  408f25:	test   eax,0xae79b7a3
  408f2a:	mov    bl,0xa2
  408f2c:	push   cs
  408f2d:	(bad)  
  408f2e:	mov    ds:0xbca474a8,eax
  408f33:	mov    al,ds:0xffffadfc
  408f38:	cmp    BYTE PTR [ebx+0x6d],ch
  408f3b:	push   0x36
  408f3d:	jle    0x408fad
  408f3f:	add    BYTE PTR [ebx+esi*1+0x25],bl
  408f43:	xor    dl,BYTE PTR [edx+0xd]
  408f46:	xor    esp,DWORD PTR ds:0x273140
  408f4c:	aaa    
  408f4d:	jge    0x408fa3
  408f4f:	add    BYTE PTR cs:[eax],al
  408f52:	add    BYTE PTR [esi],dh
  408f54:	ds push ebp
  408f56:	sub    bh,BYTE PTR [edx+0x3a]
  408f59:	pop    ecx
  408f5a:	add    cl,ch
  408f5c:	mov    ecx,0xccc40dcd
  408f62:	lock test ecx,0xd962d9c8
  408f69:	(bad)  
  408f6b:	or     al,BYTE PTR [ebx]
  408f6d:	add    BYTE PTR [eax],al
  408f6f:	repz ficom DWORD PTR [edx-0x67496794]
  408f76:	jne    0x408f14
  408f78:	fisub  DWORD PTR [edx+esi*2-0x648c560d]
  408f7f:	jnp    0x408f2d
  408f81:	jns    0x408f0e
  408f83:	xchg   BYTE PTR [ecx-0x405b4387],ch
  408f89:	pop    edi
  408f8a:	mov    ds:0x9158b794,al
  408f8f:	push   0x8cad66c2
  408f94:	mov    al,0x57
  408f96:	in     eax,0x69
  408f98:	mov    ch,0x7c
  408f9a:	cmp    BYTE PTR [esi-0x5d],0x8e
  408f9e:	cwde   
  408f9f:	sub    DWORD PTR [ebp-0x53866392],0x20799a7d
  408fa9:	add    eax,DWORD PTR [eax]
  408fab:	repz xor BYTE PTR [esi-0x5bc4f59d],ch
  408fb2:	je     0x408fc4
  408fb4:	lock cdq 
  408fb6:	arpl   WORD PTR [eax],ax
  408fb8:	add    BYTE PTR [eax],al
  408fba:	sti    
  408fbb:	pop    ds
  408fbc:	add    eax,DWORD PTR [eax]
  408fbe:	repz mov fs,WORD PTR [ecx+esi*4-0x70]
  408fc3:	mov    DWORD PTR [esi-0x4b],ebp
  408fc6:	pop    ecx
  408fc7:	xchg   esi,eax
  408fc8:	push   eax
  408fc9:	lods   al,BYTE PTR ds:[esi]
  408fca:	repz push ss
  408fcc:	dec    BYTE PTR ds:0x42041eef
  408fd2:	sti    
  408fd3:	sbb    DWORD PTR ds:0x12cf300,eax
  408fd9:	adc    esi,ebx
  408fdb:	pop    ds
  408fdc:	repnz push cs
  408fde:	call   0xdc4a:0xf31f0432
  408fe5:	daa    
  408fe6:	loop   0x40903f
  408fe8:	shl    DWORD PTR [edi],1
  408fea:	mov    ds:0xdeec1d06,eax
  408fef:	push   es
  408ff0:	je     0x408f75
  408ff2:	arpl   WORD PTR [eax+0x795f8964],ax
  408ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ff9:	(bad)  
  408ffa:	pusha  
  408ffb:	xchg   cl,ch
  408ffd:	add    esi,ebx
  408fff:	push   es
  409000:	push   0x73
  409002:	jnp    0x409044
  409004:	outs   dx,DWORD PTR ds:[esi]
  409005:	jp     0x409076
  409007:	push   es
  409008:	es call 0x9d34:0x940daa4c
  409010:	sub    BYTE PTR [ebp+eax*2+0x5b960293],dh
  409017:	fwait
  409018:	or     dl,BYTE PTR [ebx-0x52f048e6]
  40901e:	add    BYTE PTR [eax],al
  409020:	add    BYTE PTR [esi-0x5d],cl
  409023:	add    DWORD PTR [esi-0x670c3cbe],ebx
  409029:	sbb    al,0xa5
  40902b:	adc    al,bl
  40902d:	fdivr  QWORD PTR [eax-0x4cc63e56]
  409033:	mov    edx,0xbec118a2
  409038:	add    esi,ebx
  40903a:	push   es
  40903b:	add    eax,0xcfa914e3
  409040:	or     cl,dl
  409042:	in     eax,dx
  409043:	retf   0xd5ab
  409046:	xchg   ebx,eax
  409047:	jmp    0xf8af:0xba9016ea
  40904e:	fstp   st(4)
  409050:	mov    al,ds:0xf48ea0e0
  409055:	push   cs
  409056:	ror    BYTE PTR [edx-0x1b082f60],cl
  40905c:	add    bl,BYTE PTR [edi+0xcb0a6b3]
  409062:	or     dh,cl
  409064:	mov    al,0xc8
  409066:	mov    bh,0xff
  409068:	retf   0x4f9
  40906b:	pop    ecx
  40906c:	call   0xb12b:0xfd16d163
  409073:	pop    esi
  409074:	pop    ss
  409075:	test   DWORD PTR [esi],0xc1362900
  40907b:	push   edi
  40907c:	jmp    0x4090ad
  40907e:	mov    BYTE PTR [esp+ebx*1+0x2e],0x15
  409083:	push   edi
  409085:	add    BYTE PTR [eax],al
  409087:	add    al,cl
  409089:	fsub   QWORD PTR [edi*8-0x16fff910]
  409090:	lock push es
  409092:	add    BYTE PTR [edx+0x35],cl
  409095:	imul   esp,DWORD PTR [esi+esi*4+0x7b868909],0x56d87376
  4090a0:	dec    edx
  4090a1:	pop    esi
  4090a2:	lods   al,BYTE PTR ds:[esi]
  4090a3:	mov    ch,0x3
  4090a5:	inc    esp
  4090a6:	rcl    DWORD PTR [ebx+0x518b61dc],1
  4090ac:	es cmp al,cl
  4090af:	bound  ebp,QWORD PTR [ebx-0x80]
  4090b2:	lea    ecx,[edi+0x3cdd6a36]
  4090b8:	pop    es
  4090b9:	pop    ebp
  4090ba:	mov    bh,0x97
  4090bc:	sbb    ah,BYTE PTR [edx-0xb]
  4090bf:	jae    0x4090e1
  4090c1:	push   ebp
  4090c2:	mov    bl,0x8e
  4090c4:	or     esp,DWORD PTR [edi+eiz*4+0x3c]
  4090c8:	mov    ebx,0xcc8d8743
  4090cd:	imul   ebp,DWORD PTR [ebp-0x5c954583],0x44
  4090d4:	push   0xab259576
  4090d9:	push   ebx
  4090da:	idiv   DWORD PTR ds:0x38dd41fc
  4090e0:	stos   BYTE PTR es:[edi],al
  4090e1:	jbe    0x4090d3
  4090e3:	add    BYTE PTR [esp+eax*8],al
  4090e6:	(bad)
  4090e9:	xchg   ebx,eax
  4090ea:	test   BYTE PTR [ecx-0x4000000],al
  4090f0:	stos   BYTE PTR es:[edi],al
  4090f1:	mov    ds:0xe8ea88f0,al
  4090f6:	xchg   esi,eax
  4090f7:	jns    0x4090b1
  4090f9:	jecxz  0x409098
  4090fb:	(bad)  
  4090fc:	xchg   ebx,eax
  4090fd:	sahf   
  4090fe:	add    BYTE PTR [ecx],ch
  409100:	out    0xed,eax
  409102:	out    0x35,al
  409104:	cli    
  409105:	test   DWORD PTR [ebp-0x1b08207e],ecx
  40910b:	mov    ebx,0x96c1ef7d
  409110:	shl    al,cl
  409112:	ret    
  409113:	jg     0x4090e1
  409115:	(bad)  
  409116:	lds    ebp,FWORD PTR [edi-0x4d2b381f]
  40911c:	ret    0xcbdc
  40911f:	fiadd  DWORD PTR [edi]
  409121:	add    BYTE PTR [eax],al
  409123:	dec    ecx
  409124:	xchg   edi,eax
  409125:	popf   
  409126:	xchg   esi,eax
  409127:	adc    eax,0x72fdf68a
  40912c:	pop    DWORD PTR [edi-0x6811b46c]
  409132:	mov    dh,0xd8
  409134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409135:	mov    ah,0xa2
  409137:	and    BYTE PTR [ecx-0x628a4a6b],0xbe
  40913e:	test   al,0x62
  409140:	or     al,BYTE PTR [eax]
  409142:	add    BYTE PTR [eax+0x4e],dl
  409145:	push   esi
  409146:	pop    edi
  409147:	dec    esp
  409148:	aas    
  409149:	ds xor al,0x6b
  40914c:	push   ebp
  40914d:	inc    eax
  40914e:	pop    ebp
  40914f:	add    BYTE PTR [ebx+0x55],0x78
  409153:	add    BYTE PTR [eax],al
  409155:	add    BYTE PTR [edi-0x729ca396],cl
  40915b:	jb     0x4091d8
  40915d:	pop    esi
  40915e:	imul   esp,DWORD PTR [eax+0x66],0x9383f377
  409165:	(bad)  
  409166:	cmp    al,0x2f
  409168:	jmp    0xf1668d99
  40916d:	and    dl,bh
  40916f:	push   edx
  409170:	fisub  WORD PTR [edx]
  409172:	in     al,0x52
  409174:	or     DWORD PTR [ebx],ebp
  409176:	ror    BYTE PTR [ecx-0x31],cl
  409179:	pop    ds
  40917a:	xchg   edx,eax
  40917b:	sbb    eax,0x62f30003
  409180:	xor    al,0xd2
  409182:	cmp    eax,DWORD PTR [esp+ebp*1-0x24]
  409186:	sbb    BYTE PTR [edi+0x3f],bl
  409189:	fdiv   QWORD PTR [ebx]
  40918b:	push   edi
  40918c:	adc    al,0xd4
  40918e:	int    0x65
  409190:	dec    esi
  409191:	fcomip st,st(3)
  409193:	pop    DWORD PTR [esp+eiz*4+0x320a4]
  40919a:	repz into 
  40919c:	mov    esp,0xb8d62d48
  4091a1:	dec    esp
  4091a2:	sub    bl,ch
  4091a4:	scas   eax,DWORD PTR es:[edi]
  4091a5:	push   ebp
  4091a6:	xor    bl,dl
  4091a8:	rcr    DWORD PTR [ebp+0x2d],0xeb
  4091ac:	les    eax,FWORD PTR [ebx+0x37]
  4091af:	out    dx,eax
  4091b0:	mov    edx,0xa0132675
  4091b5:	ins    DWORD PTR es:[edi],dx
  4091b6:	cmp    eax,0x68a4ea
  4091bb:	add    BYTE PTR [eax],al
  4091bd:	and    DWORD PTR [ebp-0x44],edx
  4091c0:	push   esi
  4091c1:	sbb    DWORD PTR [ecx-0x4a],esp
  4091c4:	pop    ebx
  4091c5:	sub    BYTE PTR [esi-0x3a],bl
  4091c8:	pop    ebx
  4091c9:	xor    eax,DWORD PTR [edi-0x1]
  4091cc:	push   DWORD PTR [ecx+edi*8-0x31]
  4091d0:	and    al,0x22
  4091d2:	dec    ebx
  4091d3:	shl    DWORD PTR [ecx],1
  4091d5:	adc    edx,DWORD PTR [esi]
  4091d7:	stos   DWORD PTR es:[edi],eax
  4091d8:	sub    al,0x8
  4091da:	pop    ss
  4091db:	mov    eax,0xde06c55c
  4091e0:	aam    0x15
  4091e2:	(bad)  
  4091e3:	test   eax,0xc3da038f
  4091e8:	into   
  4091e9:	stos   DWORD PTR es:[edi],eax
  4091ea:	mov    eax,ss
  4091ec:	(bad)  
  4091ee:	rcr    ebx,1
  4091f0:	ret    
  4091f1:	sub    al,0x12
  4091f3:	jmp    0xdc4784fb
  4091f8:	int    0xfc
  4091fa:	call   0xa2c5b8e
  4091ff:	pop    ebp
  409200:	add    bh,cl
  409202:	fwait
  409203:	jmp    0xf3f6810b
  409208:	aam    0xc5
  40920a:	shr    BYTE PTR ds:0xdd9ddefe,0xfa
  409211:	push   eax
  409212:	sti    
  409213:	xlat   BYTE PTR ds:[ebx]
  409214:	lock xor dh,ch
  409217:	jmp    0x63a9:0x19d50ff
  40921e:	test   al,0x1c
  409220:	xchg   esi,eax
  409221:	add    BYTE PTR [eax],al
  409223:	add    BYTE PTR [edi],dl
  409225:	jmp    0xe75224f0
  40922a:	adc    BYTE PTR [ebx-0x662e69b5],dl
  409230:	loopne 0x409226
  409232:	push   es
  409233:	xchg   esp,eax
  409234:	out    0x97,eax
  409236:	adc    DWORD PTR [ebp-0x37da54ee],ebx
  40923c:	xor    al,0xf2
  40923e:	pop    ds
  40923f:	into   
  409240:	out    0x9,al
  409242:	cli    
  409243:	or     dh,BYTE PTR [esi]
  409245:	pop    es
  409246:	jmp    0xea47854e
  40924b:	add    edx,ebp
  40924d:	add    dl,ah
  40924f:	ret    
  409250:	out    dx,al
  409251:	repz in eax,dx
  409253:	jmp    FWORD PTR [ecx+edx*1-0x4a]
  409257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409258:	fldenv [ecx-0x607f4001]
  40925e:	jmp    FWORD PTR [ebx-0x69986c74]
  409264:	ins    DWORD PTR es:[edi],dx
  409265:	mov    WORD PTR [eax-0x70],fs
  409268:	pop    edi
  409269:	cwde   
  40926a:	pop    eax
  40926b:	into   
  40926c:	pusha  
  40926d:	lods   eax,DWORD PTR ds:[esi]
  40926e:	and    edi,DWORD PTR [edi-0x39be5ab9]
  409274:	pop    ds
  409275:	icebp  
  409276:	pusha  
  409277:	sar    DWORD PTR [ebp-0x5b],0x71
  40927b:	jmp    0x73409970
  409280:	jbe    0x409211
  409282:	jnp    0x4092da
  409284:	bound  ebx,QWORD PTR [ebp+0xfff]
  40928a:	add    BYTE PTR [ecx],al
  40928c:	test   DWORD PTR ds:0xffc8fee7,0x61a99c
  409296:	popa   
  409297:	push   esi
  409298:	imul   esp,DWORD PTR [eax-0x1595b479],0xffffff8f
  40929f:	dec    edi
  4092a0:	pop    ebp
  4092a1:	stos   DWORD PTR es:[edi],eax
  4092a2:	mov    DWORD PTR [edx+0x68],ecx
  4092a5:	loop   0x40930c
  4092a7:	pop    eax
  4092a8:	adc    BYTE PTR [edx-0x5aedda7],dh
  4092ae:	cdq    
  4092af:	push   ecx
  4092b0:	push   cs
  4092b1:	add    BYTE PTR [ecx],bh
  4092b3:	popa   
  4092b4:	xchg   ebx,eax
  4092b5:	js     0x4092b5
  4092b7:	and    eax,0x64
  4092ba:	clc    
  4092bb:	retf   
  4092bc:	(bad)  
  4092bd:	idiv   BYTE PTR fs:[eax-0x5d]
  4092c1:	ins    BYTE PTR es:[edi],dx
  4092c2:	or     dl,BYTE PTR [edx+0x5ad669a9]
  4092c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092c9:	outs   dx,BYTE PTR ds:[esi]
  4092ca:	rcr    DWORD PTR [ebx+0x520378a3],cl
  4092d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092d1:	mov    dx,0xf783
  4092d5:	aas    
  4092d6:	add    BYTE PTR [esi+0x4],dl
  4092d9:	add    BYTE PTR [eax],al
  4092db:	loopne 0x409284
  4092dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092de:	mov    ds:0xbfe9a977,eax
  4092e3:	jno    0x4092d6
  4092e5:	test   eax,0xe1b0bba8
  4092ea:	scas   eax,DWORD PTR es:[edi]
  4092eb:	test   eax,0xb3bead
  4092f0:	add    BYTE PTR [eax],al
  4092f2:	loop   0x4092a5
  4092f4:	mov    ah,0xb5
  4092f6:	cwde   
  4092f7:	mov    bh,0xb0
  4092f9:	mov    ds:0xbaa5b3b8,al
  4092fe:	cdq    
  4092ff:	mov    al,al
  409301:	add    dh,dl
  409303:	clc    
  409304:	out    dx,al
  409305:	cmc    
  409306:	icebp  
  409307:	fnstsw WORD PTR [eax-0x1018ee07]
  40930d:	cmc    
  40930e:	sbb    eax,0x1df5b0dc
  409313:	fsub   st(5),st
  409315:	stc    
  409316:	and    eax,0xdaa6ece8
  40931b:	add    eax,DWORD PTR [eax]
  40931d:	add    BYTE PTR [ebx],al
  40931f:	add    dl,BYTE PTR [ecx]
  409321:	inc    esp
  409322:	int3   
  409323:	pop    es
  409324:	push   cs
  409325:	adc    eax,0x14c11d2
  40932a:	les    edx,FWORD PTR [eax]
  40932c:	add    eax,0xff4bd41a
  409331:	(bad)  
  409332:	stc    
  409333:	push   esi
  409334:	inc    eax
  409335:	push   edi
  409336:	out    0x45,eax
  409338:	dec    ebx
  409339:	inc    eax
  40933a:	xlat   BYTE PTR ds:[ebx]
  40933b:	dec    edi
  40933c:	pop    ebx
  40933d:	inc    ecx
  40933e:	loope  0x409394
  409340:	dec    esp
  409341:	pop    ebx
  409342:	repz inc ebp
  409344:	push   eax
  409345:	pop    eax
  409346:	out    0x45,eax
  409348:	push   esp
  409349:	add    BYTE PTR [edi-0x74],dh
  40934c:	mov    ds,WORD PTR [ecx-0x717d8497]
  409352:	repz mov WORD PTR [edx+edx*4+0x64000000],cs
  40935a:	stos   BYTE PTR es:[edi],al
  40935b:	ja     0x4092e0
  40935d:	xchg   BYTE PTR [eax+0x1d749f76],al
  409363:	add    eax,DWORD PTR [eax]
  409365:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409367:	xchg   DWORD PTR [ecx-0x6a89759c],ebx
  40936d:	imul   ecx,DWORD PTR [eax-0x7b956885],0x6e
  409374:	sahf   
  409375:	jbe    0x409311
  409377:	push   ebx
  409378:	mov    ebp,DWORD PTR [ebx-0x61]
  40937b:	add    eax,DWORD PTR [eax]
  40937d:	repz jnp 0x409320
  409380:	outs   dx,DWORD PTR ds:[esi]
  409381:	lea    esp,[ecx-0x67]
  409384:	jge    0x409324
  409386:	xchg   ebx,eax
  409387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409388:	jnp    0x409322
  40938a:	lahf   
  40938b:	mov    edi,0x3ac8e69
  409390:	add    bl,dh
  409392:	inc    edi
  409393:	and    al,0xf4
  409395:	adc    DWORD PTR [ebp+0x22],esp
  409398:	out    0xfb,eax
  40939a:	push   0x51e9f726
  40939f:	adc    al,0xfe
  4093a1:	fsub   QWORD PTR [eax]
  4093a3:	add    eax,DWORD PTR [eax]
  4093a5:	repz das 
  4093a7:	out    dx,al
  4093a8:	add    edi,edi
  4093aa:	sbb    eax,0x31fd10f0
  4093af:	add    eax,0x219f203
  4093b4:	add    bl,dh
  4093b6:	mov    ds:0xc26b9e89,eax
  4093bb:	jne    0x409357
  4093bd:	add    BYTE PTR [eax],al
  4093bf:	add    BYTE PTR [edi-0x65],bh
  4093c2:	sub    DWORD PTR [ebx+esi*2+0x73987bb0],0xf30002a4
  4093cd:	push   esp
  4093ce:	shl    DWORD PTR [eax+eax*8],cl
  4093d1:	push   es
  4093d2:	add    al,ah
  4093d4:	rcl    ebp,cl
  4093d6:	push   ds
  4093d7:	fsubr  st(5),st
  4093d9:	fadd   QWORD PTR [ecx]
  4093db:	(bad)  [esi+ecx*1-0x28]
  4093df:	(bad)  
  4093e0:	rcl    DWORD PTR [ebx-0x65285e5b],1
  4093e6:	lds    ebx,FWORD PTR [edi-0x65627537]
  4093ec:	lds    esp,FWORD PTR [ecx+esi*4+0x706c1a2]
  4093f3:	std    
  4093f4:	clc    
  4093f5:	lock fmul DWORD PTR [eax]
  4093f8:	icebp  
  4093f9:	or     ecx,esp
  4093fb:	or     ch,bh
  4093fd:	stc    
  4093fe:	rol    BYTE PTR [ebx+esi*8],1
  409401:	imul   al
  409403:	add    esi,ebx
  409405:	push   es
  409406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409407:	rol    ebp,0xc7
  40940a:	xor    DWORD PTR [ebx-0x386e475a],0x3e8acbe
  409414:	repz push es
  409416:	arpl   WORD PTR [edi-0x61c3736c],dx
  40941c:	mov    ds,WORD PTR [ebp+0x751a440]
  409422:	or     ah,al
  409424:	add    BYTE PTR [eax],al
  409426:	add    BYTE PTR [ebx],ah
  409428:	out    0xeb,al
  40942a:	int3   
  40942b:	daa    
  40942c:	jmp    0xe3627b33
  409431:	call   0x90478739
  409436:	pop    ss
  409437:	mov    eax,ds:0xb8298f0d
  40943c:	and    DWORD PTR [esi+0x7f27bc3b],eax
  409442:	daa    
  409443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409444:	and    ebp,ecx
  409446:	add    esi,ebx
  409448:	push   es
  409449:	fdivr  st,st(6)
  40944b:	retf   0x5
  40944e:	fbld   TBYTE PTR [ebx-0x6e29ecf8]
  409454:	icebp  
  409455:	pop    ss
  409456:	push   es
  409457:	out    dx,eax
  409458:	push   es
  409459:	add    BYTE PTR [ebx-0x13],cl
  40945c:	das    
  40945d:	test   DWORD PTR [eax-0x1c],0x1f42dc20
  409464:	adc    DWORD PTR [eax],eax
  409466:	push   edi
  409467:	or     DWORD PTR [ebp*8-0x2fdeedbc],esi
  40946e:	dec    ebx
  40946f:	imul   DWORD PTR [ebx]
  409471:	call   0xe8587fbe
  409476:	adc    ebx,esp
  409478:	push   es
  409479:	add    BYTE PTR [ebp-0x39],bh
  40947c:	jle    0x409420
  40947e:	jnp    0x4094ee
  409480:	jp     0x40940b
  409482:	outs   dx,BYTE PTR ds:[esi]
  409483:	test   al,0x6c
  409485:	nop
  409486:	pop    eax
  409487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409488:	pop    ebp
  409489:	xchg   esp,eax
  40948a:	imul   eax,DWORD PTR [eax],0x7c750000
  409490:	and    DWORD PTR [esi-0x11],0x84580006
  409497:	sub    DWORD PTR [edi-0x7b788d7a],0x7b
  40949e:	mov    WORD PTR [ecx-0x63],?
  4094a1:	jne    0x40950d
  4094a3:	push   0x87616398
  4094a8:	xor    BYTE PTR [edx+0x73],0x7
  4094ac:	add    BYTE PTR [esi-0x6516b7e5],dl
  4094b2:	and    ebx,DWORD PTR [ebx]
  4094b4:	rcl    BYTE PTR [ecx-0x3a37c8ff],0xf0
  4094bb:	push   es
  4094bc:	add    BYTE PTR [eax],cl
  4094be:	xchg   esp,eax
  4094bf:	xchg   ebx,eax
  4094c0:	pop    esi
  4094c1:	or     al,0x54
  4094c3:	scas   al,BYTE PTR es:[edi]
  4094c4:	fs (bad) 
  4094c6:	push   esi
  4094c7:	or     al,0xff
  4094c9:	add    BYTE PTR [ebx+0x581f3425],bh
  4094cf:	and    BYTE PTR [ebx],ch
  4094d1:	sub    ah,BYTE PTR [edx+0x32]
  4094d4:	daa    
  4094d5:	and    al,0xb9
  4094d7:	or     BYTE PTR [eax],al
  4094d9:	add    BYTE PTR [esi-0x4f],dh
  4094dc:	xchg   ebp,eax
  4094dd:	mov    edx,0xa3a1a460
  4094e2:	push   ebp
  4094e3:	or     BYTE PTR [eax],al
  4094e5:	add    BYTE PTR [ebx+0x4],ch
  4094e8:	and    ecx,DWORD PTR [esi]
  4094ea:	dec    eax
  4094eb:	add    cl,BYTE PTR [ebx*1+0x1a0853]
  4094f2:	add    BYTE PTR [eax],al
  4094f4:	add    BYTE PTR [ebx],ch
  4094f6:	outs   dx,DWORD PTR ds:[esi]
  4094f7:	jl     0x409572
  4094f9:	popf   
  4094fa:	push   0x7b
  4094fc:	dec    edi
  4094fd:	arpl   WORD PTR [edi+0x74],si
  409500:	jno    0x409567
  409502:	bound  esi,QWORD PTR [ebx+0x0]
  409505:	push   es
  409506:	fdivr  DWORD PTR [edi-0x3f39283e]
  40950c:	add    dl,cl
  40950e:	call   0x87cf:0x9d968482
  409515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409516:	ror    BYTE PTR [ecx-0x313e1f59],cl
  40951c:	mov    DWORD PTR [esi-0x40],ecx
  40951f:	rcl    dl,1
  409521:	js     0x4094dc
  409523:	mov    edi,0xc6983dd4
  409528:	cwde   
  409529:	push   ebx
  40952a:	xchg   ecx,eax
  40952b:	(bad)  
  40952c:	call   ebp
  40952e:	adc    BYTE PTR ds:0x7ca07,al
  409534:	add    BYTE PTR [edi-0x5c],ah
  409537:	mov    dh,0xa1
  409539:	pop    edi
  40953a:	mov    esp,0xb664a3be
  40953f:	mov    eax,ds:0x7cabe
  409544:	add    bl,dh
  409546:	and    ecx,DWORD PTR [edx]
  409548:	jg     0x409577
  40954a:	add    al,0x6
  40954c:	add    bl,dh
  40954e:	aam    0xbd
  409550:	inc    esp
  409551:	inc    esi
  409552:	push   ds
  409553:	add    eax,DWORD PTR [eax]
  409555:	repz jmp 0x409513
  409558:	push   ebx
  409559:	add    BYTE PTR [eax],al
  40955b:	add    ch,al
  40955d:	sbb    eax,0xb8f30003
  409562:	pop    ss
  409563:	out    dx,al
  409564:	mov    BYTE PTR ds:0x57f30003,bl
  40956a:	add    BYTE PTR [edx],ah
  40956c:	sbb    al,0x1c
  40956e:	in     al,dx
  40956f:	or     edi,ecx
  409571:	das    
  409572:	fdiv   QWORD PTR ds:0x13ef2af8
  409578:	add    BYTE PTR [ecx],bh
  40957a:	or     al,BYTE PTR [edx]
  40957c:	icebp  
  40957d:	sbb    eax,0x51f30003
  409582:	out    dx,al
  409583:	xor    edi,ecx
  409585:	pop    ds
  409586:	icebp  
  409587:	sbb    dh,bl
  409589:	lods   al,BYTE PTR ds:[esi]
  40958a:	and    ecx,edi
  40958c:	xor    dh,ah
  40958e:	daa    
  40958f:	out    0x11,eax
  409591:	or     bl,BYTE PTR [esp+edi*8]
  409594:	dec    eax
  409595:	sbb    eax,0x63f30003
  40959a:	in     al,dx
  40959b:	xor    eax,0x1efe39ce
  4095a0:	shl    dl,0x6
  4095a3:	or     al,0xf6
  4095a5:	sbb    eax,0x2af30003
  4095aa:	lea    esi,gs:[ebx+0x6f]
  4095ae:	push   0xffffffa0
  4095b0:	mov    eax,ds:0xf3000376
  4095b5:	test   BYTE PTR [edi],bl
  4095b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095b8:	jl     0x409567
  4095ba:	cmp    bh,ch
  4095bc:	fadd   DWORD PTR [eax+0x15]
  4095bf:	out    0x0,al
  4095c1:	add    BYTE PTR [eax],al
  4095c3:	xchg   esp,eax
  4095c4:	pop    es
  4095c5:	pop    ebx
  4095c6:	pop    ecx
  4095c7:	rcr    BYTE PTR [esi+0x52],1
  4095ca:	or     eax,0x8569098a
  4095cf:	into   
  4095d0:	or     eax,0x2399188a
  4095d5:	xchg   esi,eax
  4095d6:	sub    DWORD PTR [ecx+0x68],ebx
  4095d9:	bound  edi,QWORD PTR [edi]
  4095db:	pop    ebp
  4095dc:	push   ebx
  4095dd:	sub    DWORD PTR ds:0x2ba83db8,0xffffffad
  4095e4:	cmp    BYTE PTR [ecx+0x76],dh
  4095e7:	inc    bp
  4095e9:	test   DWORD PTR [ebx],eax
  4095eb:	repz push es
  4095ed:	mov    ds:0xe0fa18f0,eax
  4095f2:	or     BYTE PTR [edi],al
  4095f4:	add    edx,ebx
  4095f6:	leave  
  4095f7:	jmp    0xb84b84ff
  4095fc:	(bad)  
  4095fd:	xchg   edx,eax
  4095fe:	add    ah,al
  409600:	iret   
  409601:	xchg   esi,eax
  409602:	cli    
  409603:	fdivr  st(7),st
  409605:	add    eax,eax
  409607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409608:	mov    bh,0xe8
  40960a:	mov    esi,DWORD PTR [edx+ecx*1]
  40960d:	sahf   
  40960e:	fwait
  40960f:	mov    ds:0xb5a78d91,al
  409614:	les    ebp,FWORD PTR [ebx-0x53675c3c]
  40961a:	sar    BYTE PTR [eax+edi*4+0xa0cc9ad],0xc5
  409622:	or     ch,bh
  409624:	(bad)  
  409625:	cld    
  409626:	add    DWORD PTR [eax],eax
  409628:	add    BYTE PTR [eax],al
  40962a:	in     al,0xcb
  40962c:	or     edi,edi
  40962e:	repnz std 
  409630:	call   0x96478938
  409635:	jb     0x4096af
  409637:	jl     0x40969f
  409639:	ins    BYTE PTR es:[edi],dx
  40963a:	jp     0x409686
  40963c:	pop    eax
  40963d:	je     0x4096b3
  40963f:	add    BYTE PTR [eax],0x51
  409642:	jbe    0x40964a
  409644:	add    bl,bh
  409646:	(bad)  
  409649:	idiv   DWORD PTR [ebx-0x1237be07]
  40964f:	out    dx,eax
  409650:	or     ah,BYTE PTR [eax]
  409652:	xchg   esp,eax
  409653:	inc    DWORD PTR [edx]
  409655:	lock lock push es
  409658:	add    BYTE PTR [edx*2+0x67086ca3],ah
  40965f:	mov    BYTE PTR [esi+eiz*1],ch
  409662:	push   ebp
  409663:	sahf   
  409664:	ins    BYTE PTR es:[edi],dx
  409665:	jmp    0xf409d5a
  40966a:	push   edx
  40966b:	(bad)  
  40966c:	gs jmp 0x6d409d62
  409672:	retf   0xa04f
  409675:	jmp    0x89409d6a
  40967a:	imul   ebp,DWORD PTR [eax-0x7e],0x9b62195b
  409681:	pop    ebp
  409682:	jno    0x40968a
  409684:	add    dh,al
  409686:	xchg   esi,eax
  409687:	mov    ecx,0xc980ae42
  40968c:	push   ebp
  40968d:	mov    DWORD PTR [eax],eax
  40968f:	add    BYTE PTR [eax],al
  409691:	pusha  
  409692:	mov    al,0x5b
  409694:	mov    ds:0xab53be6a,eax
  409699:	popa   
  40969a:	(bad)  
  40969b:	outs   dx,DWORD PTR ds:[esi]
  40969c:	mov    al,0x33
  40969e:	ret    
  40969f:	dec    ebx
  4096a0:	mov    ds:0xa862fb62,al
  4096a5:	inc    ebx
  4096a6:	mov    eax,0x885c900a
  4096ab:	jp     0x409696
  4096ad:	lock push es
  4096af:	add    cl,dl
  4096b1:	mov    ebp,0x23a1cc29
  4096b6:	cmp    cl,bl
  4096b8:	mov    esi,0xd32f03
  4096bd:	(bad)  
  4096be:	ffree  st(5)
  4096c0:	fild   DWORD PTR [edi-0x63000b2a]
  4096c6:	(bad)  
  4096c7:	enter  0x5ec3,0xd5
  4096cb:	sub    ch,0x8c
  4096ce:	(bad)  
  4096cf:	enter  0xed00,0x5e
  4096d3:	pushw  0xd
  4096d6:	push   0x72ae7a73
  4096db:	and    DWORD PTR [edx+0x5],esp
  4096de:	imul   ebp,DWORD PTR [edx+0x6a],0x617960f3
  4096e5:	call   0x1c17:0xae000004
  4096ec:	add    al,0x8a
  4096ee:	add    eax,0x18ec4c06
  4096f3:	adc    BYTE PTR [edx],dl
  4096f5:	add    BYTE PTR [eax],al
  4096f7:	add    BYTE PTR [eax+0x11],bl
  4096fa:	adc    eax,0xc2c4c000
  4096ff:	ficom  DWORD PTR [edi+edx*8]
  409702:	xlat   BYTE PTR ds:[ebx]
  409703:	xchg   edx,eax
  409704:	mov    dl,0xbf
  409706:	into   
  409707:	int3   
  409708:	out    0xca,al
  40970a:	(bad)  
  40970b:	call   0xccfb:0xcfc3c4fd
  409712:	(bad)
  409715:	(bad)  
  409716:	(bad)  
  409717:	call   DWORD PTR [esi-0x3543494e]
  40971d:	lods   al,BYTE PTR ds:[esi]
  40971e:	lods   eax,DWORD PTR ds:[esi]
  40971f:	cld    
  409720:	xchg   esp,eax
  409721:	mov    dl,0xb7
  409723:	mov    esp,0xb7b0811d
  409728:	mov    eax,0xbbad9fb9
  40972d:	mov    ecx,0x32f300bd
  409732:	ds ficomp WORD PTR ss:[edx]
  409736:	cmp    eax,0xd3f7f33f
  40973b:	and    al,0xf
  40973d:	or     eax,0xf71c3dcd
  409742:	fnstsw WORD PTR [ecx]
  409744:	or     eax,0xfd64e701
  409749:	push   es
  40974a:	call   0xe85faf7d
  40974f:	and    eax,0xcfe0702
  409754:	bswap  ebx
  409756:	jmp    DWORD PTR [esi]
  409758:	inc    edi
  409759:	sub    esi,esp
  40975b:	adc    DWORD PTR [eax],eax
  40975d:	add    BYTE PTR [eax],al
  40975f:	out    dx,al
  409760:	adc    al,BYTE PTR [ecx]
  409762:	add    ebx,esi
  409764:	adc    ecx,esi
  409766:	push   cs
  409767:	repz mov eax,ds:0x8e85f70f
  40976d:	test   BYTE PTR [eax],al
  40976f:	repz stc 
  409771:	mov    ds:0x8c3e0f66,al
  409776:	jge    0x40973f
  409778:	pop    ebp
  409779:	mov    al,ds:0xa837e76e
  40977e:	jo     0x40975c
  409780:	sbb    eax,0xadf30003
  409785:	xchg   BYTE PTR [edi-0x50997398],al
  40978b:	repz fs mov ch,0x5b
  40978f:	mov    ah,0x64
  409791:	scas   eax,DWORD PTR es:[edi]
  409792:	dec    ebx
  409793:	cdq    
  409794:	push   ecx
  409795:	scas   eax,DWORD PTR es:[edi]
  409796:	jp     0x40975b
  409798:	jg     0x409723
  40979a:	fs stos DWORD PTR es:[edi],eax
  40979c:	jg     0x40972e
  40979e:	push   ebp
  40979f:	(bad)  
  4097a0:	push   0xffffffbe
  4097a2:	push   ecx
  4097a3:	test   al,0x51
  4097a5:	rcl    BYTE PTR [ecx-0x6f],0x8d
  4097a9:	lahf   
  4097aa:	dec    DWORD PTR [eiz*2-0x6e748d6a]
  4097b1:	lahf   
  4097b2:	imul   edi,DWORD PTR [ebx-0x7c6dc0fa],0x52a556a0
  4097bc:	aaa    
  4097bd:	and    al,0xa5
  4097bf:	push   edx
  4097c0:	outs   dx,BYTE PTR ds:[esi]
  4097c1:	jmp    0x4097c9
  4097c6:	repz push es
  4097c8:	repnz std 
  4097ca:	and    al,0x54
  4097cc:	xor    BYTE PTR [ebx+esi*8],al
  4097cf:	push   es
  4097d0:	push   ss
  4097d1:	mov    eax,0xc014502a
  4097d6:	and    DWORD PTR [esi+0x31],esp
  4097d9:	mov    ecx,0xb9372333
  4097de:	inc    edi
  4097df:	pop    es
  4097e0:	mov    edi,0x98f1a90a
  4097e5:	adc    bl,BYTE PTR [ebx-0x59ed7d01]
  4097eb:	fld    QWORD PTR [ecx+0x42039516]
  4097f1:	sub    DWORD PTR [esi+0x7c1a76f0],ecx
  4097f7:	pop    es
  4097f8:	repz fcmovnb st,st(1)
  4097fb:	push   es
  4097fc:	mov    edx,0xe05ac3cb
  409801:	pop    es
  409802:	clc    
  409803:	push   es
  409804:	test   eax,0xc178e59c
  409809:	add    esi,ebx
  40980b:	push   es
  40980c:	xchg   edi,eax
  40980d:	pushf  
  40980e:	fbstp  TBYTE PTR [ecx-0x3e]
  409811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409812:	shl    DWORD PTR [ecx+ebp*4],0xa5
  409816:	mov    ebp,0xcaa1a675
  40981b:	sbb    al,0xb8
  40981e:	cdq    
  40981f:	push   0x798f8a90
  409824:	adc    ah,0xd9
  409827:	jg     0x4098a4
  409829:	xchg   edx,eax
  40982a:	add    BYTE PTR [eax],al
  40982c:	add    BYTE PTR [eax-0x144d5a83],ah
  409832:	cs add cl,ch
  409835:	pop    ebp
  409836:	push   es
  409837:	jmp    FWORD PTR [ebx]
  409839:	jnp    0x409819
  40983b:	sar    BYTE PTR [ecx-0x29],0x6
  40983f:	add    BYTE PTR [edi+0x2c],dh
  409842:	push   es
  409843:	jmp    0x40981e
  409845:	push   edx
  409846:	sar    DWORD PTR [ebp+0x74ec6],0xf2
  40984d:	aad    0xd
  40984f:	add    cl,ch
  409851:	lock push es
  409853:	add    BYTE PTR [edx],bh
  409855:	pop    esi
  409856:	jne    0x4098cf
  409858:	jmp    0xe8409f4d
  40985d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40985e:	cmp    esp,DWORD PTR ds:0x302bc6c8
  409864:	out    dx,eax
  409865:	sahf   
  409866:	cmp    bh,BYTE PTR ss:[ebp-0x32cdcb40]
  40986d:	mov    edi,0xa9ce1621
  409872:	and    eax,0x19b8b42a
  409877:	or     dh,BYTE PTR [edx+0x52843ad]
  40987d:	out    dx,al
  40987e:	sub    al,0x14
  409880:	in     eax,0xf4
  409882:	and    ebx,DWORD PTR [edx]
  409884:	std    
  409885:	dec    edi
  409886:	ss pop ss
  409888:	jecxz  0x4098d4
  40988a:	adc    edx,DWORD PTR [ebx]
  40988c:	out    dx,al
  40988d:	pop    edi
  40988e:	inc    ebp
  40988f:	xor    ch,dl
  409891:	add    BYTE PTR [eax],al
  409893:	add    BYTE PTR [ebx+0x15],al
  409896:	or     al,0xed
  409898:	inc    esp
  409899:	and    BYTE PTR ds:0x808f0f5,dh
  40989f:	mov    BYTE PTR [edi+0x3a],dh
  4098a2:	fs jmp 0xac409f98
  4098a8:	mov    esp,DWORD PTR [esi+0x64]
  4098ab:	jge    0x4098dd
  4098ad:	je     0x40991d
  4098af:	add    BYTE PTR [edi-0x55],ah
  4098b2:	addr16 jle 0x4098cf
  4098b5:	or     DWORD PTR [eax],eax
  4098b7:	add    dh,bl
  4098b9:	sub    ebx,ebp
  4098bb:	clc    
  4098bc:	push   cs
  4098bd:	push   ds
  4098be:	sti    
  4098bf:	in     eax,dx
  4098c0:	xor    DWORD PTR [esi],edi
  4098c2:	in     al,dx
  4098c3:	out    0xcb,eax
  4098c5:	and    eax,0x1ec3eff2
  4098ca:	rcl    ebp,0xc7
  4098cd:	and    bh,ah
  4098cf:	jmp    0x1e64:0xb4e117b3
  4098d6:	loope  0x4098d4
  4098d8:	call   0xdb0e:0x85dec834
  4098df:	sar    DWORD PTR [ebx+0x4b],0xc6
  4098e3:	fstp   QWORD PTR [edx-0x70fffff8]
  4098e9:	jmp    0x409914
  4098eb:	sub    DWORD PTR [edx-0xde6d720],ebp
  4098f1:	or     al,BYTE PTR [eax]
  4098f3:	add    BYTE PTR [esp+ebp*2],bl
  4098f6:	test   al,0xaa
  4098f8:	add    BYTE PTR [eax],al
  4098fa:	add    BYTE PTR [ecx],bh
  4098fc:	pop    edi
  4098fd:	test   eax,0xe4225900
  409902:	neg    DWORD PTR [ecx]
  409904:	sub    al,0xf4
  409906:	loop   0x40992e
  409908:	dec    esp
  409909:	jecxz  0x4098f3
  40990b:	mov    esp,0xc4e0fd25
  409910:	sub    al,0xce
  409912:	fidiv  DWORD PTR [eax+0x4e5f328]
  409918:	adc    al,0xee
  40991a:	mov    ebx,0xf3ee2ce3
  40991f:	fnsave [esi]
  409921:	(bad)  
  409922:	rcl    DWORD PTR [edx],1
  409924:	sbb    eax,0x48b1cece
  409929:	ret    
  40992a:	(bad)
  40992d:	sbb    bh,al
  40992f:	xor    BYTE PTR [edx],ch
  409931:	aaa    
  409932:	shl    bl,0x6a
  409935:	dec    eax
  409936:	lods   eax,DWORD PTR ds:[esi]
  409937:	dec    esp
  409938:	inc    esp
  409939:	sbb    BYTE PTR [eax+0x614f5b],bl
  40993f:	repz pop ss
  409941:	and    al,0xed
  409943:	cmc    
  409944:	out    0x18,eax
  409946:	std    
  409947:	fadd   st,st(2)
  409949:	cmp    dl,ch
  40994b:	shl    ah,cl
  40994d:	push   ds
  40994e:	hlt    
  40994f:	retf   0x17d4
  409952:	mov    eax,0xdffa1bc0
  409958:	les    edx,FWORD PTR [eax]
  40995a:	out    0x81,eax
  40995c:	popf   
  40995d:	pop    ss
  40995e:	out    0x0,eax
  409960:	add    BYTE PTR [eax],al
  409962:	mov    ecx,0x9bce2dab
  409967:	sahf   
  409968:	and    al,0xce
  40996a:	mov    ah,0xb4
  40996c:	add    eax,DWORD PTR [eax]
  40996e:	repz or eax,0x241771a3
  409974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409975:	pusha  
  409976:	sbb    al,0x9
  409978:	sar    BYTE PTR [edi+ecx*1],1
  40997b:	sbb    DWORD PTR [ebx-0x6df1e595],edx
  409981:	sub    BYTE PTR [esi],al
  409983:	sti    
  409984:	mov    ds:0x86e5fd70,eax
  409989:	and    ch,dl
  40998b:	retf   
  40998c:	lahf   
  40998d:	ins    DWORD PTR es:[edi],dx
  40998e:	jmp    0x7924f54
  409993:	repz repnz adc ah,bh
  409997:	mov    ebx,0xf9f615e8
  40999c:	aam    0x4d
  40999e:	mov    edx,0xa577b0ad
  4099a3:	mov    al,ds:0x6e944bf
  4099a8:	idiv   BYTE PTR [ecx-0x5140ba31]
  4099ae:	mov    dh,0x5e
  4099b0:	xchg   edx,eax
  4099b1:	loop   0x409984
  4099b3:	cmp    ecx,edx
  4099b5:	(bad)  
  4099b7:	sub    BYTE PTR [edx-0x29],bh
  4099ba:	into   
  4099bb:	cmp    eax,0x807d8dbd
  4099c0:	jge    0x40995a
  4099c2:	js     0x409a13
  4099c4:	mov    ds:0x3,al
  4099c9:	repz push es
  4099cb:	mov    cl,0x3a
  4099cd:	leave  
  4099ce:	rol    esi,cl
  4099d0:	cmp    edi,DWORD PTR [edx-0x7998461e]
  4099d6:	fbstp  TBYTE PTR [edi+edi*1+0x42a5e4af]
  4099dd:	jb     0x4099b3
  4099df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099e0:	inc    edx
  4099e1:	mov    bl,0xc6
  4099e3:	test   al,0x7d
  4099e5:	mov    bh,0xd0
  4099e7:	sahf   
  4099e8:	ds test eax,0xa40cc5ca
  4099ee:	add    cl,BYTE PTR [esi+0x5def9f14]
  4099f4:	dec    ebx
  4099f5:	fs test eax,0x9f755e50
  4099fb:	or     BYTE PTR [edx],0x99
  4099fe:	add    edx,DWORD PTR [edi-0x760d75f5]
  409a04:	push   edi
  409a05:	push   esi
  409a06:	stc    
  409a07:	jns    0x409a25
  409a09:	jle    0x4099f1
  409a0b:	xchg   BYTE PTR [eax+0x6873a442],al
  409a11:	mov    DWORD PTR [edi-0x5e68926e],ecx
  409a17:	fs jg  0x409a96
  409a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a1b:	bound  eax,QWORD PTR [ebp-0x7d996bce]
  409a21:	jae    0x4099a9
  409a23:	jmp    FWORD PTR [eax-0x3f]
  409a26:	retf   
  409a27:	leave  
  409a28:	sub    BYTE PTR [edx-0x7b],dh
  409a2b:	lea    edx,[edi+0x0]
  409a2e:	add    BYTE PTR [eax],al
  409a30:	mov    edi,0xde35e4f8
  409a35:	mov    al,0xa8
  409a37:	pop    ecx
  409a38:	xchg   edx,eax
  409a39:	mov    fs,WORD PTR [ebp-0x6443cb6]
  409a3f:	push   ss
  409a40:	mov    ecx,0xb63dacac
  409a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a46:	mov    ebp,0xa6b6de35
  409a4b:	cmp    bl,BYTE PTR [edx-0x67c24c5e]
  409a51:	dec    ecx
  409a52:	push   edi
  409a53:	ss call 0x5257:0x9b355765
  409a5b:	cli    
  409a5c:	int3   
  409a5d:	adc    al,0x54
  409a5f:	xor    eax,0xe94b5db7
  409a64:	mov    edi,0x8219202b
  409a69:	inc    edi
  409a6a:	push   esp
  409a6b:	das    
  409a6c:	jg     0x409ac4
  409a6e:	inc    edi
  409a6f:	and    al,bl
  409a71:	inc    edx
  409a72:	ins    DWORD PTR es:[edi],dx
  409a73:	sbb    eax,0x15687376
  409a78:	push   edi
  409a79:	jae    0x409ab3
  409a7b:	pop    es
  409a7c:	and    BYTE PTR [esi+0x7c],0x1b
  409a80:	jge    0x409aed
  409a82:	imul   edi,edi,0x51
  409a85:	push   0x6d
  409a87:	adc    ebx,DWORD PTR [eax+0x73]
  409a8a:	jle    0x409a91
  409a8c:	push   ebx
  409a8d:	xor    dh,BYTE PTR [ecx-0x4]
  409a90:	or     DWORD PTR [bx+di],esp
  409a93:	test   DWORD PTR [eax],0x19620000
  409a99:	pop    ds
  409a9a:	mov    esi,0xf9105888
  409a9f:	dec    esp
  409aa0:	add    DWORD PTR [esi],edx
  409aa2:	add    BYTE PTR [esi+0x266460b6],bl
  409aa8:	repnz or al,0x18
  409aab:	inc    eax
  409aac:	icebp  
  409aad:	adc    eax,DWORD PTR [ebx]
  409aaf:	dec    ebp
  409ab0:	mov    ebp,0xce12113f
  409ab5:	sub    BYTE PTR [edx+ecx*2],ch
  409ab8:	fldenv [eax]
  409aba:	je     0x409ae4
  409abc:	shl    BYTE PTR [ebx],1
  409abe:	cmp    BYTE PTR [edx+ebp*8],dh
  409ac1:	and    al,0x30
  409ac3:	cmp    ah,al
  409ac5:	cmp    DWORD PTR [ecx],edx
  409ac7:	cmp    ah,bh
  409ac9:	ss das 
  409acb:	sub    al,0xd4
  409acd:	xor    esp,DWORD PTR [ebx]
  409acf:	imul   ebx,DWORD PTR [ecx+0x34b62461],0x8b6adbcc
  409ad9:	mov    ch,0xb0
  409adb:	mov    al,BYTE PTR [edi-0x2e]
  409ade:	les    edx,FWORD PTR [esp+eax*2-0x7f7e283f]
  409ae5:	(bad)  
  409ae6:	fst    QWORD PTR [esi-0x692721bd]
  409aec:	xor    al,0xde
  409aee:	mov    BYTE PTR [ebp+eax*2-0x2f],bl
  409af2:	int3   
  409af3:	pop    eax
  409af4:	pop    ds
  409af5:	jmp    0xc5:0xef157efc
  409afc:	add    BYTE PTR [eax],al
  409afe:	xchg   BYTE PTR [edx],dl
  409b00:	in     al,0xf3
  409b02:	js     0x409b25
  409b04:	loope  0x409afd
  409b06:	cmp    DWORD PTR [edi],ecx
  409b08:	out    0xe1,eax
  409b0a:	add    al,0x37
  409b0c:	in     al,0xe4
  409b0e:	ins    BYTE PTR es:[edi],dx
  409b0f:	and    eax,0x262baaa5
  409b14:	loop   0x409b04
  409b16:	in     al,0x6c
  409b18:	(bad)  
  409b19:	lds    edi,FWORD PTR [esi-0xcffffe7]
  409b1f:	fidiv  DWORD PTR [ebp+0x2edad5a]
  409b25:	add    bl,dh
  409b27:	mov    BYTE PTR [esi-0x5a],bh
  409b2a:	arpl   WORD PTR [eax+0x75],sp
  409b2d:	test   BYTE PTR [ebx+0x66],bl
  409b30:	ins    DWORD PTR es:[edi],dx
  409b31:	add    bl,dh
  409b33:	and    eax,0x232ef51c
  409b38:	adc    bh,bl
  409b3a:	imul   ecx,DWORD PTR [ebx],0x38f30003
  409b40:	daa    
  409b41:	ret    0x2c29
  409b44:	inc    ecx
  409b45:	int3   
  409b46:	sub    BYTE PTR [edi+0x38],dh
  409b49:	retf   
  409b4a:	ss out dx,al
  409b4c:	add    al,BYTE PTR [eax]
  409b4e:	repz push ecx
  409b50:	fs mov dh,0x53
  409b53:	cmc    
  409b54:	inc    edi
  409b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b56:	repz jo 0x409bb9
  409b59:	mov    dl,0x93
  409b5b:	mov    esp,DWORD PTR [edx-0x53]
  409b5e:	xor    BYTE PTR [ecx+0x5a],0xb2
  409b62:	add    BYTE PTR [eax],al
  409b64:	add    BYTE PTR [edi-0xc43a473],cl
  409b6a:	and    ebp,DWORD PTR [eax-0x6da8f391]
  409b70:	jae    0x409b82
  409b72:	out    dx,al
  409b73:	add    al,BYTE PTR [eax]
  409b75:	repz cmp edx,DWORD PTR [edi-0x1700e595]
  409b7c:	dec    eax
  409b7d:	add    cl,bh
  409b7f:	mov    esp,0xfdeff00f
  409b84:	adc    ebx,DWORD PTR [ecx]
  409b86:	pmaxub mm4,QWORD PTR [ecx]
  409b89:	repz adc BYTE PTR [ebx-0x46d10689],cl
  409b90:	push   ebp
  409b91:	sub    BYTE PTR ds:0x36f30004,bl
  409b97:	dec    edx
  409b98:	mov    ah,0x9e
  409b9a:	push   es
  409b9b:	jno    0x409c09
  409b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b9e:	test   DWORD PTR [edx+0x7b],ebp
  409ba1:	jne    0x409b3b
  409ba3:	xor    BYTE PTR [eax-0x80],0x8f
  409ba7:	jbe    0x409c17
  409ba9:	repz push es
  409bab:	add    eax,0xec2f03c7
  409bb0:	call   0xfa1fb9c2
  409bb5:	loopne 0x409bbd
  409bb7:	inc    esi
  409bb8:	and    BYTE PTR [ecx],bl
  409bba:	out    0x3e,eax
  409bbc:	ds pop ds
  409bbe:	les    ebp,FWORD PTR [ebx]
  409bc0:	xor    eax,0x5f4d062c
  409bc5:	dec    edx
  409bc6:	mov    dh,0x73
  409bc8:	add    DWORD PTR [eax],0x944f0000
  409bce:	push   edi
  409bcf:	ins    BYTE PTR es:[edi],dx
  409bd0:	dec    ebx
  409bd1:	xchg   esi,eax
  409bd2:	jb     0x409c28
  409bd4:	pop    ebp
  409bd5:	mov    al,ds:0x93647562
  409bda:	dec    edi
  409bdb:	add    al,0xf3
  409bdd:	push   es
  409bde:	dec    ebp
  409bdf:	lea    ebp,[edx+0x7e]
  409be2:	sbb    ebx,esi
  409be4:	pop    ss
  409be5:	pop    es
  409be6:	jns    0x409c60
  409be8:	gs xchg edx,eax
  409bea:	pop    ebp
  409beb:	mov    ds:0xf303e8d7,al
  409bf1:	push   es
  409bf2:	imul   ebp,DWORD PTR [eax+0x5d],0xd307c9a2
  409bf9:	std    
  409bfa:	call   0x35478f02
  409bff:	lea    ebp,[ecx]
  409c01:	gs pop es
  409c03:	mov    dl,BYTE PTR [edx]
  409c05:	ja     0x409c14
  409c07:	xchg   esp,eax
  409c08:	push   es
  409c09:	jo     0x409c09
  409c0b:	add    esi,ebx
  409c0d:	push   es
  409c0e:	nop
  409c0f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409c11:	fsubr  QWORD PTR [ebx+0x7ac2a]
  409c17:	inc    ebp
  409c18:	cli    
  409c19:	xchg   ebx,eax
  409c1a:	xchg   edx,eax
  409c1b:	jmp    0xea40a310
  409c20:	xor    dh,BYTE PTR ds:[edi]
  409c23:	or     BYTE PTR [eax],bh
  409c25:	cmp    BYTE PTR [edx-0xb],ch
  409c28:	inc    eax
  409c29:	inc    eax
  409c2a:	cs jmp 0xf840a320
  409c30:	add    BYTE PTR [eax],al
  409c32:	add    BYTE PTR [esp+ebx*1+0x5],cl
  409c36:	fimul  DWORD PTR [edi-0x2]
  409c39:	push   esi
  409c3a:	dec    DWORD PTR [esi+0x14]
  409c3d:	push   ds
  409c3e:	jecxz  0x409c5d
  409c40:	(bad)  
  409c41:	(bad)  
  409c42:	sub    edx,ebp
  409c44:	ror    ch,cl
  409c46:	sub    eax,0x1fffc7b1
  409c4b:	(bad)  
  409c4c:	cld    
  409c4d:	out    dx,eax
  409c4e:	add    esi,esi
  409c50:	cld    
  409c51:	out    0x41,eax
  409c53:	mov    edi,0xedfff4ff
  409c58:	add    ah,bh
  409c5a:	add    esi,eax
  409c5c:	push   es
  409c5d:	add    BYTE PTR [ecx],ch
  409c5f:	push   es
  409c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c61:	(bad)  
  409c62:	retf   
  409c63:	pop    es
  409c64:	in     eax,0xe7
  409c66:	sar    esp,1
  409c68:	in     eax,0xae
  409c6a:	mov    edi,0xcde4effc
  409c6f:	test   DWORD PTR [esi],0x26682e00
  409c75:	inc    eax
  409c76:	inc    esp
  409c77:	data16 outs dx,WORD PTR ds:[esi]
  409c7a:	inc    esi
  409c7b:	xchg   ecx,eax
  409c7c:	pop    ebp
  409c7d:	sub    BYTE PTR [eax],bl
  409c7f:	mov    DWORD PTR [ebx+0x62],ebp
  409c82:	and    al,ah
  409c84:	push   ss
  409c85:	pop    ss
  409c86:	jmp    0xd540a37b
  409c8b:	mov    esp,0x727afefd
  409c90:	std    
  409c91:	enter  0x4300,0x2
  409c95:	add    BYTE PTR [eax],al
  409c97:	add    BYTE PTR [eax],al
  409c99:	add    BYTE PTR [ecx+0x2b],dl
  409c9c:	aad    0xdf
  409c9e:	dec    eax
  409c9f:	and    al,0xc0
  409ca1:	int3   
  409ca2:	pop    edx
  409ca3:	or     DWORD PTR [eax],eax
  409ca5:	add    bl,ah
  409ca7:	pusha  
  409ca8:	test   eax,0xe3517eae
  409cad:	mov    ch,BYTE PTR [eax+ebp*2-0x53]
  409cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cb2:	iret   
  409cb3:	pop    edi
  409cb4:	mov    eax,ds:0x53ab8700
  409cb9:	push   edx
  409cba:	mov    bh,BYTE PTR [ebp+ebx*1+0x4fa35876]
  409cc1:	pop    ebx
  409cc2:	mov    ebp,DWORD PTR [edx-0x4ae9fea5]
  409cc8:	inc    eax
  409cc9:	inc    edx
  409cca:	dec    esp
  409ccb:	lods   al,BYTE PTR ds:[esi]
  409ccc:	dec    ecx
  409ccd:	push   edi
  409cce:	push   edi
  409ccf:	jmp    0x44fe9cf6
  409cd4:	mov    eax,0xbb5cb3a0
  409cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cda:	mov    BYTE PTR [edx+eiz*4-0xd],0xa
  409cdf:	or     DWORD PTR [eax],eax
  409ce1:	add    BYTE PTR [ebp+0x29241fe6],bl
  409ce7:	test   BYTE PTR [edx],0x4
  409cea:	in     eax,0xef
  409cec:	adc    DWORD PTR [eax],ecx
  409cee:	fdiv   st,st(1)
  409cf0:	push   ss
  409cf1:	or     al,0xac
  409cf3:	add    DWORD PTR [edx],ecx
  409cf5:	inc    esp
  409cf6:	add    edx,edi
  409cf8:	or     eax,0x6feca03
  409cfd:	or     BYTE PTR [eax],al
  409cff:	add    BYTE PTR [eax],al
  409d01:	or     BYTE PTR [ebx-0x5b69b2b9],dh
  409d07:	(bad)  
  409d08:	(bad)  
  409d09:	std    
  409d0a:	cwde   
  409d0b:	outs   dx,DWORD PTR ds:[esi]
  409d0c:	je     0x409c97
  409d0e:	(bad)  
  409d0f:	push   edx
  409d10:	push   esp
  409d11:	repz sub al,0xb9
  409d14:	inc    edx
  409d15:	sub    esi,DWORD PTR [eax]
  409d17:	mov    ebx,0xab242747
  409d1c:	pop    edx
  409d1d:	in     eax,dx
  409d1e:	loopne 0x409cdb
  409d20:	inc    ecx
  409d21:	push   ds
  409d22:	and    esi,DWORD PTR [ebx+ebx*2+0x1afd0bc2]
  409d29:	push   es
  409d2a:	fcmovu st,st(6)
  409d2c:	sub    BYTE PTR [edi],dl
  409d2e:	loope  0x409ccf
  409d30:	jno    0x409d12
  409d32:	aad    0xa1
  409d34:	jle    0x409d11
  409d36:	adc    ebx,esp
  409d38:	sub    ecx,eax
  409d3a:	cli    
  409d3b:	out    0xff,al
  409d3d:	cmp    al,0x26
  409d3f:	cmp    ecx,ebx
  409d41:	sbb    eax,0x39de241a
  409d46:	push   ss
  409d47:	and    al,0xdd
  409d49:	xchg   BYTE PTR [ebx],dh
  409d4b:	push   0xffffffc0
  409d4d:	xor    bh,BYTE PTR [esi+edi*2]
  409d50:	int    0x2e
  409d52:	xor    eax,0x41288242
  409d57:	aaa    
  409d58:	(bad)  
  409d59:	aaa    
  409d5a:	sub    al,0x38
  409d5c:	ret    
  409d5d:	xor    bl,bh
  409d5f:	add    DWORD PTR [eax],eax
  409d61:	repz jno 0x409d5f
  409d64:	arpl   WORD PTR [eax],ax
  409d66:	add    BYTE PTR [eax],al
  409d68:	push   edi
  409d69:	out    dx,al
  409d6a:	add    al,BYTE PTR [eax]
  409d6c:	repz loope 0x409d51
  409d6f:	fstp   TBYTE PTR [eax-0x2b6a304a]
  409d75:	mov    eax,0xb5a1d7da
  409d7a:	loope  0x409d4f
  409d7c:	jnp    0x409df0
  409d7e:	iret   
  409d7f:	aam    0xb4
  409d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d82:	xchg   DWORD PTR [edx-0x353a525b],ecx
  409d88:	mov    ah,0x92
  409d8a:	enter  0x5bad,0x6
  409d8e:	jmp    0x1479096
  409d93:	cmp    esp,ebx
  409d95:	sub    dl,bl
  409d97:	xor    ebx,edx
  409d99:	jne    0x409d81
  409d9b:	shl    BYTE PTR cs:[ecx],cl
  409d9e:	adc    al,0x7a
  409da0:	add    esp,DWORD PTR [edi+eiz*1]
  409da3:	inc    esp
  409da4:	repz push es
  409da6:	lods   al,BYTE PTR ds:[esi]
  409da7:	rcl    BYTE PTR [edi-0x7358c150],cl
  409dad:	mov    ds:0xfb5cca8f,eax
  409db2:	push   ebp
  409db3:	lea    eax,[ebx+0x789b7d91]
  409db9:	xchg   edx,eax
  409dba:	dec    ebp
  409dbb:	add    al,0xf3
  409dbd:	push   es
  409dbe:	loopne 0x409e3a
  409dc0:	mov    edi,0xd472ca66
  409dc5:	push   es
  409dc6:	cmp    al,0xa6
  409dc8:	and    eax,0x8b0ea6
  409dcd:	add    BYTE PTR [eax],al
  409dcf:	popa   
  409dd0:	mov    ch,0x63
  409dd2:	scas   eax,DWORD PTR es:[edi]
  409dd3:	pop    ebp
  409dd4:	lods   eax,DWORD PTR ds:[esi]
  409dd5:	push   es
  409dd6:	add    DWORD PTR [eax],ebx
  409dd8:	mov    ah,BYTE PTR [edx]
  409dda:	cwde   
  409ddb:	inc    ebx
  409ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ddd:	push   esi
  409dde:	jmp    0xc0814b38
  409de3:	ds cmc 
  409de5:	or     al,0xec
  409de7:	aaa    
  409de8:	rcr    DWORD PTR [ebx],0x86
  409deb:	xchg   edx,eax
  409dec:	mov    ebx,0x96bea545
  409df1:	jg     0x409d83
  409df3:	jns    0x409dbd
  409df5:	(bad)  
  409df6:	cli    
  409df7:	mov    ecx,0xf303e8ab
  409dfc:	push   es
  409dfd:	add    DWORD PTR [edx],ebp
  409dff:	mov    db7,ebp
  409e02:	and    al,0x13
  409e04:	ds sti 
  409e06:	add    esi,ebx
  409e08:	push   es
  409e09:	add    BYTE PTR [ebx+0x73],cl
  409e0c:	addr16 and ch,cl
  409e0f:	lock push es
  409e11:	add    bl,dl
  409e13:	fistp  QWORD PTR [eax]
  409e15:	add    BYTE PTR [edx-0x4b263394],bh
  409e1b:	stos   BYTE PTR es:[edi],al
  409e1c:	test   edx,ecx
  409e1e:	mov    dl,0x74
  409e20:	mov    esi,0xfaa470d7
  409e25:	(bad)  
  409e26:	out    0x1a,al
  409e28:	sbb    al,0x4
  409e2a:	sbb    al,0xd
  409e2c:	or     BYTE PTR [esi-0x17],dl
  409e2f:	lock push es
  409e31:	add    BYTE PTR [edi+0x2e000000],ah
  409e37:	stos   DWORD PTR es:[edi],eax
  409e38:	mov    al,ds:0x6f0e9
  409e3d:	sub    DWORD PTR [edx+ebx*4],0xdd677495
  409e44:	mov    ebp,0x6f091
  409e49:	add    al,BYTE PTR [ebx+edi*1]
  409e4c:	dec    ebp
  409e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e4e:	rol    BYTE PTR [esi],cl
  409e50:	add    dl,cl
  409e52:	stos   DWORD PTR es:[edi],eax
  409e53:	arpl   WORD PTR [edi+edi*8],dx
  409e56:	test   eax,0x8d9f0006
  409e5b:	gs ror sp,0x39
  409e60:	xor    al,0x7c
  409e62:	rol    BYTE PTR [esi],0x0
  409e65:	jmp    0x409e2f
  409e67:	cs and al,0xc9
  409e6a:	les    ebx,FWORD PTR [ecx]
  409e6c:	addr16 je 0x409ed3
  409e6f:	adc    ch,BYTE PTR [ebx+0x70]
  409e72:	pusha  
  409e73:	push   ss
  409e74:	outs   dx,DWORD PTR ds:[esi]
  409e75:	dec    esp
  409e76:	arpl   WORD PTR [edx],cx
  409e78:	add    bh,ch
  409e7a:	sti    
  409e7b:	pop    ds
  409e7c:	add    BYTE PTR [ebp+0x68],ch
  409e7f:	xchg   ebx,eax
  409e80:	sahf   
  409e81:	imul   ebp,edi,0x21000006
  409e87:	jne    0x409eef
  409e89:	jb     0x409e82
  409e8b:	inc    esi
  409e8c:	add    BYTE PTR [eax],al
  409e8e:	cmp    bh,BYTE PTR [edi+0x7f]
  409e91:	ds in  eax,0x61
  409e94:	jae    0x409f10
  409e96:	mov    edi,0x5
  409e9b:	add    BYTE PTR [eax],al
  409e9d:	out    0x69,al
  409e9f:	imul   edi,DWORD PTR [ecx-0x4],0x98081378
  409ea6:	jo     0x409ed7
  409ea8:	jo     0x409e85
  409eaa:	inc    ebx
  409eab:	push   edx
  409eac:	dec    eax
  409ead:	(bad)  
  409eae:	daa    
  409eaf:	sbb    BYTE PTR [edi+0x5a],ch
  409eb2:	add    eax,0x94830000
  409eb7:	rcr    edx,0xe1
  409eba:	rcr    al,0x8b
  409ebd:	fild   WORD PTR [ebp-0x36fa3564]
  409ec3:	(bad)  
  409ec4:	call   DWORD PTR [edi+0x26]
  409ec7:	and    edx,DWORD PTR ds:0x51b
  409ecd:	in     al,dx
  409ece:	cs pop ds
  409ed0:	add    dl,BYTE PTR [edx]
  409ed2:	add    eax,0x86380000
  409ed7:	jnp    0x409f52
  409ed9:	push   edi
  409eda:	xor    BYTE PTR [ebx],ah
  409edc:	and    al,BYTE PTR [edx+0x29]
  409edf:	arpl   WORD PTR gs:[edi+0x5d],di
  409ee3:	popa   
  409ee4:	arpl   WORD PTR [bp+di],bp
  409ee7:	and    DWORD PTR [edi],ebp
  409ee9:	and    eax,0x7b7f7935
  409eee:	and    ebp,DWORD PTR [ecx]
  409ef0:	daa    
  409ef1:	mov    ebp,0x8066753d
  409ef6:	add    eax,0x41217b15
  409efb:	inc    ebx
  409efc:	pop    ecx
  409efd:	or     eax,0x464f76
  409f02:	add    BYTE PTR [eax],al
  409f04:	repz es dec ebx
  409f07:	push   cs
  409f08:	repz jo 0x409ea1
  409f0b:	test   al,0x5c
  409f0d:	add    eax,DWORD PTR gs:[eax]
  409f10:	repz jl 0x409ec4
  409f13:	lods   al,BYTE PTR ds:[esi]
  409f14:	pop    ebx
  409f15:	and    dh,0xf1
  409f18:	mov    al,ds:0x56b1b78e
  409f1d:	dec    ebx
  409f1e:	mov    ah,0xba
  409f20:	push   ebx
  409f21:	addr16 mov ah,0xa9
  409f24:	push   esp
  409f25:	push   ebx
  409f26:	shl    edx,0x8d
  409f29:	jp     0x409eaf
  409f2b:	mov    bl,0x47
  409f2d:	push   ecx
  409f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f2f:	stos   BYTE PTR es:[edi],al
  409f30:	inc    ebx
  409f31:	pop    esp
  409f32:	call   0x4092:0x92587f97
  409f39:	addr16 xchg ebx,eax
  409f3b:	xchg   esi,eax
  409f3c:	cmp    al,0x80
  409f3e:	call   0x7fc2:0xd67d8290
  409f45:	outs   dx,BYTE PTR ds:[esi]
  409f46:	test   BYTE PTR [ebx-0x7b53a492],cl
  409f4c:	push   ds
  409f4d:	xor    eax,DWORD PTR [ebx]
  409f4f:	add    bl,dh
  409f51:	test   al,0xf7
  409f53:	inc    eax
  409f54:	repz mov dh,0x48
  409f57:	inc    edx
  409f58:	repz test eax,0xa1f34248
  409f5e:	dec    eax
  409f5f:	inc    edx
  409f60:	repz cdq 
  409f62:	dec    eax
  409f63:	inc    edx
  409f64:	repz xchg esi,eax
  409f66:	dec    eax
  409f67:	inc    edx
  409f68:	add    BYTE PTR [eax],al
  409f6a:	add    bl,dh
  409f6c:	div    edi
  409f6e:	inc    eax
  409f6f:	repz fcomip st,st(7)
  409f72:	inc    eax
  409f73:	repz aam 0xf7
  409f76:	inc    eax
  409f77:	repz mov eax,DWORD PTR [edx]
  409f7a:	arpl   bx,si
  409f7c:	in     eax,dx
  409f7d:	add    al,BYTE PTR [eax]
  409f7f:	repz push es
  409f81:	sub    BYTE PTR [edx+0x30],al
  409f84:	inc    ebx
  409f85:	and    al,0x46
  409f87:	xor    al,0x4f
  409f89:	and    BYTE PTR [edx+0x38],cl
  409f8c:	dec    ebx
  409f8d:	sbb    al,0x4e
  409f8f:	sub    al,0x57
  409f91:	sbb    BYTE PTR [edx+0x20],dl
  409f94:	push   ebx
  409f95:	adc    al,0x56
  409f97:	inc    esp
  409f98:	pop    edi
  409f99:	adc    BYTE PTR [edx+0x12],bl
  409f9c:	gs dec edx
  409f9e:	push   0x6c0e6116
  409fa3:	or     ch,BYTE PTR [ebp+0x12]
  409fa6:	jo     0x409fc6
  409fa8:	imul   eax,DWORD PTR [esi],0x1a750274
  409fae:	js     0x409fb6
  409fb0:	jno    0x409fb0
  409fb2:	jnp    0x409fae
  409fb4:	jl     0x409f6f
  409fb6:	xor    al,0x21
  409fb8:	xor    al,0xbd
  409fba:	cmp    BYTE PTR ds:0x83cb130,bl
  409fc0:	sub    cl,ch
  409fc2:	add    esi,ebx
  409fc4:	push   es
  409fc5:	jmp    0xd54792cd
  409fca:	daa    
  409fcb:	mov    db1,esp
  409fce:	jno    0x409fd0
  409fd0:	add    BYTE PTR [eax],al
  409fd2:	shl    BYTE PTR [edx-0x44],0x75
  409fd6:	mov    esp,0xa879c07e
  409fdb:	and    cl,BYTE PTR ds:0x522cf28
  409fe1:	sub    ch,bl
  409fe3:	aaa    
  409fe4:	test   eax,0xa543b144
  409fe9:	dec    eax
  409fea:	mov    ch,0x3f
  409fec:	mov    eax,ds:0x9d4bb94c
  409ff1:	push   eax
  409ff2:	lods   eax,DWORD PTR ds:[esi]
  409ff3:	inc    edi
  409ff4:	cdq    
  409ff5:	push   esp
  409ff6:	mov    eax,ds:0x45589553
  409ffb:	pop    esi
  409ffc:	add    ch,cl
  409ffe:	or     al,0x2b
  40a000:	and    al,0xc5
  40a002:	adc    al,0x4f
  40a004:	pop    ecx
  40a005:	inc    ebx
  40a006:	cmp    BYTE PTR [ebx+0x5d],dl
  40a009:	aas    
  40a00a:	sub    al,0x67
  40a00c:	popa   
  40a00d:	dec    ebx
  40a00e:	push   eax
  40a00f:	imul   esp,DWORD PTR [ebp+0x47],0x54
  40a013:	pop    edi
  40a014:	imul   edx,DWORD PTR [ebx+0x48],0x1c4f6d63
  40a01b:	ja     0x40a08e
  40a01d:	jmp    0x540a712
  40a022:	cmp    al,0x57
  40a024:	push   edx
  40a025:	ss aaa 
  40a027:	push   eax
  40a028:	pop    edi
  40a029:	cmp    bh,BYTE PTR [edx]
  40a02b:	pop    ecx
  40a02c:	push   esi
  40a02d:	sub    al,0x21
  40a02f:	push   esi
  40a030:	dec    eax
  40a031:	push   ds
  40a032:	and    BYTE PTR [ebx+0x5f],bl
  40a035:	int    0x0
  40a037:	add    BYTE PTR [eax],al
  40a039:	lock push es
  40a03b:	add    BYTE PTR [eax],dl
  40a03d:	frstor [eax+0x65]
  40a040:	or     ch,bl
  40a042:	push   es
  40a043:	add    BYTE PTR [edx-0x2dffb6e9],al
  40a049:	adc    cl,BYTE PTR [ecx+0x0]
  40a04c:	test   DWORD PTR [edx],edx
  40a04e:	dec    ecx
  40a04f:	add    BYTE PTR [edx+0x12],dl
  40a052:	dec    ecx
  40a053:	add    BYTE PTR [ebx+0x14004911],bl
  40a059:	out    dx,eax
  40a05a:	jl     0x40a05c
  40a05c:	jmp    0x6540a751
  40a061:	xchg   BYTE PTR [esi],dh
  40a063:	add    BYTE PTR [ebx-0x20],bl
  40a066:	dec    eax
  40a067:	add    BYTE PTR [eax+eiz*8+0x48],dl
  40a06b:	add    BYTE PTR [ebp-0x23],al
  40a06e:	dec    eax
  40a06f:	add    BYTE PTR [eax],cl
  40a071:	aad    0x48
  40a073:	add    BYTE PTR [edx+0x48c0],cl
  40a079:	xchg   BYTE PTR [ecx],bh
  40a07b:	inc    edx
  40a07c:	add    BYTE PTR [ebp-0x62ffffa3],ch
  40a082:	push   ebp
  40a083:	inc    ebx
  40a084:	add    BYTE PTR [ebp+0x29000042],cl
  40a08a:	or     esp,DWORD PTR [ecx+0x0]
  40a08d:	cmp    BYTE PTR [ebx],cl
  40a08f:	imul   eax,DWORD PTR [eax],0x650b2c
  40a095:	or     ebp,DWORD PTR es:[esi]
  40a098:	add    BYTE PTR [esi],ah
  40a09a:	or     ebp,DWORD PTR [eax+eax*1+0x0]
  40a09e:	add    BYTE PTR [eax],al
  40a0a0:	or     eax,DWORD PTR ds:[eax]
  40a0a3:	add    ah,dl
  40a0a5:	inc    edi
  40a0a6:	dec    ecx
  40a0a7:	inc    ebx
  40a0a8:	fsubr  DWORD PTR [ebp+0x61]
  40a0ab:	je     0x40a094
  40a0ad:	or     al,BYTE PTR [eax]
  40a0af:	add    ah,dl
  40a0b1:	inc    edi
  40a0b2:	dec    ecx
  40a0b3:	inc    ecx
  40a0b4:	neg    BYTE PTR [esi+0x46]
  40a0b7:	imul   edi,DWORD PTR [esi+0x6c],0x47c40000
  40a0be:	dec    ecx
  40a0bf:	inc    esi
  40a0c0:	(bad)  
  40a0c1:	jge    0x40a136
  40a0c3:	push   0x69626a19
  40a0c8:	pop    esp
  40a0c9:	ins    BYTE PTR es:[edi],dx
  40a0ca:	je     0x40a0cc
  40a0cc:	test   BYTE PTR [esi+0x49],al
  40a0cf:	inc    esp
  40a0d0:	aaa    
  40a0d1:	jbe    0x40a147
  40a0d3:	jb     0x40a102
  40a0d5:	jo     0x40a0d7
  40a0d7:	add    dl,al
  40a0d9:	clc    
  40a0da:	add    BYTE PTR ds:[edx-0x1effbdba],bl
  40a0e1:	hlt    
  40a0e2:	add    BYTE PTR ds:[esi+0x4c003e94],cl
  40a0e9:	repz inc eax
  40a0eb:	add    BYTE PTR [ebx+esi*8+0x40],cl
  40a0ef:	add    BYTE PTR [ebx+0x4b],dl
  40a0f2:	inc    edx
  40a0f3:	add    bl,dh
  40a0f5:	fwait
  40a0f6:	inc    esp
  40a0f7:	inc    edx
  40a0f8:	repz add DWORD PTR [edx+eax*2-0xd],0xffffff8b
  40a0fe:	inc    esp
  40a0ff:	inc    edx
  40a100:	xrelease xchg BYTE PTR [edx+eax*2+0x0],al
  40a105:	add    BYTE PTR [eax],al
  40a107:	repz jns 0x40a14f
  40a10a:	inc    edx
  40a10b:	repz jbe 0x40a153
  40a10e:	inc    edx
  40a10f:	repz dec edx
  40a111:	inc    esi
  40a112:	inc    edx
  40a113:	repz aas 
  40a115:	popa   
  40a116:	fs dec ebp
  40a118:	inc    ebp
  40a119:	ins    BYTE PTR es:[edi],dx
  40a11a:	push   0x48
  40a11c:	xor    ch,BYTE PTR [edi+0x6e]
  40a11f:	inc    ebx
  40a120:	das    
  40a121:	jb     0x40a196
  40a123:	daa    
  40a124:	cmp    al,0x75
  40a126:	js     0x40a151
  40a128:	aas    
  40a129:	imul   ecx,DWORD PTR [si],0xf3007b3b
  40a130:	test   eax,esi
  40a132:	aas    
  40a133:	repz cmp DWORD PTR [ebx+0x42],edx
  40a137:	repz test al,0xfc
  40a13a:	aas    
  40a13b:	repz adc al,BYTE PTR [ecx+ebx*2]
  40a13f:	repz fld QWORD PTR [edx]
  40a142:	add    bl,dh
  40a144:	ret    
  40a145:	add    dh,BYTE PTR [ebx+esi*8-0xb]
  40a149:	add    dh,BYTE PTR [ebx+esi*8-0x23]
  40a14d:	add    al,BYTE PTR [eax]
  40a14f:	repz sbb al,0x65
  40a152:	inc    edx
  40a153:	repz mov esp,0xa9f35102
  40a159:	add    al,BYTE PTR [eax]
  40a15b:	repz call 0x5c04:0x7f34263
  40a163:	repz fld QWORD PTR [edx]
  40a166:	add    bl,dh
  40a168:	jg     0x40a16c
  40a16a:	mov    ds:0xf3000000,eax
  40a16f:	mov    DWORD PTR [edx],eax
  40a171:	add    bl,dh
  40a173:	push   es
  40a174:	lea    eax,[ebx]
  40a176:	call   0x8506:0x83039a06
  40a17d:	add    edx,DWORD PTR [edx-0x5afc6ffa]
  40a183:	push   es
  40a184:	mov    BYTE PTR [ebx],al
  40a186:	pop    esi
  40a187:	pop    es
  40a188:	test   BYTE PTR [ebx],al
  40a18a:	repz push es
  40a18c:	scas   al,BYTE PTR es:[edi]
  40a18d:	addr16 push di
  40a190:	jnp    0x40a1fe
  40a192:	dec    edi
  40a193:	jp     0x40a1df
  40a195:	jo     0x40a1d1
  40a197:	gs inc edi
  40a199:	imul   esi,ebx,0x6
  40a19c:	mov    ecx,0x3907317d
  40a1a1:	add    al,0x41
  40a1a3:	pop    es
  40a1a4:	push   esi
  40a1a5:	add    al,0x1b
  40a1a7:	pop    es
  40a1a8:	push   eax
  40a1a9:	add    al,0x11
  40a1ab:	pop    es
  40a1ac:	inc    eax
  40a1ad:	add    al,0x27
  40a1af:	pop    es
  40a1b0:	and    eax,0x2d073f04
  40a1b5:	add    al,0xf3
  40a1b7:	push   es
  40a1b8:	push   es
  40a1b9:	pusha  
  40a1ba:	sbb    dh,BYTE PTR [edi+0x5]
  40a1bd:	jno    0x40a1bf
  40a1bf:	and    eax,0x7076805
  40a1c4:	cs pusha 
  40a1c6:	fidiv  DWORD PTR [esi+0xd]
  40a1c9:	jno    0x40a1ab
  40a1cb:	push   edi
  40a1cc:	std    
  40a1cd:	fs loope 0x40a24a
  40a1d0:	hlt    
  40a1d1:	jae    0x40a1d3
  40a1d3:	add    BYTE PTR [eax],al
  40a1d5:	repz push es
  40a1d7:	scas   al,BYTE PTR es:[edi]
  40a1d8:	pop    edi
  40a1d9:	fidiv  DWORD PTR [esi-0x33]
  40a1dc:	jo     0x40a19e
  40a1de:	push   edi
  40a1df:	shl    DWORD PTR [eax-0x39],0x6a
  40a1e3:	mov    esi,0xae06c572
  40a1e8:	pop    edi
  40a1e9:	call   0x65:0x8e75aa76
  40a1f0:	mov    ebp,0xb5694893
  40a1f5:	mov    esp,DWORD PTR [ebp+0x70]
  40a1f8:	scas   eax,DWORD PTR es:[edi]
  40a1f9:	xchg   BYTE PTR [ebx+0x6d],ah
  40a1fc:	mov    cl,0xae
  40a1fe:	cmp    eax,0x56b7a454
  40a203:	add    BYTE PTR [esi-0x528fa26c],ah
  40a209:	pop    edi
  40a20a:	jbe    0x40a27c
  40a20c:	mov    ds,WORD PTR [ebp+0x6c]
  40a20f:	dec    ecx
  40a210:	test   BYTE PTR [edi+0x6a],dl
  40a213:	gs jmp 0x2e40a909
  40a219:	push   ebx
  40a21a:	pusha  
  40a21b:	jo     0x40a243
  40a21d:	push   edx
  40a21e:	jnp    0x40a269
  40a220:	inc    esp
  40a221:	push   esi
  40a222:	push   0x65
  40a224:	and    al,0x49
  40a226:	outs   dx,WORD PTR ds:[esi]
  40a228:	dec    ebp
  40a229:	adc    dh,BYTE PTR [ebp+0x73]
  40a22c:	sbb    dl,BYTE PTR [esi]
  40a22e:	ins    DWORD PTR es:[edi],dx
  40a22f:	gs jmp 0x2640a925
  40a235:	adc    esp,DWORD PTR [eax+0x70]
  40a238:	add    BYTE PTR cs:[eax],al
  40a23b:	add    BYTE PTR [edx],dl
  40a23d:	jnp    0x40a288
  40a23f:	or     al,0xe
  40a241:	push   0x65
  40a243:	sub    al,0x9
  40a245:	outs   dx,WORD PTR ds:[esi]
  40a247:	add    eax,0xe9737512
  40a24c:	lock push es
  40a24e:	add    BYTE PTR [esi],ah
  40a250:	rcr    DWORD PTR [edi+0x70],cl
  40a253:	sbb    dl,dh
  40a255:	js     0x40a2bc
  40a257:	and    dl,cl
  40a259:	addr16 addr16 int3 
  40a25c:	mov    esp,0xbed55361
  40a261:	imul   esp,DWORD PTR [ecx-0x3c],0xfffffff0
  40a265:	push   es
  40a266:	add    BYTE PTR [esp+edx*1+0x60001d4d],dl
  40a26d:	hlt    
  40a26e:	sub    eax,DWORD PTR [ebp-0x3a]
  40a271:	into   
  40a272:	pop    ebx
  40a273:	mov    bl,0x7b
  40a275:	pop    es
  40a276:	out    0xeb,eax
  40a278:	in     al,0x88
  40a27a:	inc    eax
  40a27b:	add    BYTE PTR [edi+0x72],ah
  40a27e:	inc    ecx
  40a27f:	add    BYTE PTR [ecx+0x72],ch
  40a282:	inc    ecx
  40a283:	add    BYTE PTR [ebx],bl
  40a285:	xchg   DWORD PTR [eax+0x0],eax
  40a288:	mov    edx,cs
  40a28a:	inc    eax
  40a28b:	add    BYTE PTR [esi+eax*4+0x40],bh
  40a28f:	add    BYTE PTR [eax],cl
  40a291:	xchg   DWORD PTR [eax+0x0],eax
  40a294:	pop    ebx
  40a295:	retf   
  40a296:	inc    eax
  40a297:	add    BYTE PTR [ebx+ecx*8+0x40],cl
  40a29b:	add    BYTE PTR [ecx+0x72],cl
  40a29e:	inc    ecx
  40a29f:	add    BYTE PTR [eax],al
  40a2a1:	add    BYTE PTR [eax],al
  40a2a3:	jmp    0x6440e333
  40a2a8:	mov    eax,DWORD PTR [eax+0x0]
  40a2ab:	xchg   ecx,eax
  40a2ac:	in     al,dx
  40a2ad:	ds add dh,bl
  40a2b0:	or     cl,BYTE PTR [ecx+0x0]
  40a2b3:	or     DWORD PTR [ebx],ecx
  40a2b5:	push   eax
  40a2b6:	add    dh,dl
  40a2b8:	or     al,BYTE PTR [ecx+0x0]
  40a2bb:	add    ecx,DWORD PTR [ebx]
  40a2bd:	add    BYTE PTR [eax],al
  40a2bf:	or     ah,BYTE PTR [esi]
  40a2c1:	add    BYTE PTR [eax],al
  40a2c3:	mov    edx,0xb7000005
  40a2c8:	add    eax,0x58a006d
  40a2cd:	add    BYTE PTR [eax],al
  40a2cf:	cmp    al,BYTE PTR ds:0xaec002d
  40a2d5:	add    BYTE PTR [eax],al
  40a2d7:	aaa    
  40a2d8:	add    eax,0x52f006d
  40a2dd:	jo     0x40a2df
  40a2df:	dec    DWORD PTR [edx]
  40a2e1:	jae    0x40a2e3
  40a2e3:	pop    edx
  40a2e4:	add    eax,0xd3f30000
  40a2e9:	add    ch,BYTE PTR [ebp-0xd]
  40a2ec:	iret   
  40a2ed:	add    al,BYTE PTR [eax]
  40a2ef:	repz mov WORD PTR [edx+0x47],cs
  40a2f3:	mov    ?,WORD PTR [ebx-0x4f7391b5]
  40a2f9:	push   0x5eb38446
  40a2fe:	sub    DWORD PTR gs:[edi-0x20648b9f],0x2
  40a309:	add    bl,dh
  40a30b:	lds    eax,FWORD PTR [edx]
  40a30d:	add    bl,dh
  40a30f:	retf   0x7302
  40a312:	repz ret 0x3002
  40a316:	repz lds eax,FWORD PTR [edx]
  40a319:	js     0x40a30e
  40a31b:	mov    DWORD PTR [edx],0x36cf325
  40a321:	add    bl,dh
  40a323:	add    al,BYTE PTR [ebx+esi*2]
  40a326:	repz or al,BYTE PTR [eax+esi*1]
  40a32a:	repz adc eax,0xddf37804
  40a330:	add    al,BYTE PTR [eax]
  40a332:	repz out dx,al
  40a334:	sub    BYTE PTR [edx],dh
  40a336:	aad    0xfa
  40a338:	add    al,BYTE PTR [eax]
  40a33a:	repz ds push 0x20
  40a33e:	push   ds
  40a33f:	xor    BYTE PTR [ebp+0x6e],ch
  40a342:	sbb    al,0x11
  40a344:	push   0x20
  40a346:	push   cs
  40a347:	or     al,0x76
  40a349:	outs   dx,DWORD PTR ds:[esi]
  40a34a:	add    DWORD PTR [esi+0x1b106367],edi
  40a350:	jbe    0x40a3c4
  40a352:	(bad)  
  40a353:	add    DWORD PTR [eax+eax*1],eax
  40a356:	repz xor eax,0x12bc4554
  40a35c:	dec    edx
  40a35d:	dec    ebx
  40a35e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a35f:	adc    BYTE PTR [ecx+0x4e],dl
  40a362:	repz push es
  40a364:	fldenv [edx-0x3f]
  40a367:	jae    0x40a32d
  40a369:	jne    0x40a37e
  40a36b:	pop    esi
  40a36c:	fisub  DWORD PTR [ebx]
  40a36e:	add    BYTE PTR [eax],al
  40a370:	add    bl,al
  40a372:	gs aam 0x74
  40a375:	xchg   esi,eax
  40a376:	push   0xffffffe9
  40a378:	add    esi,ebx
  40a37a:	push   es
  40a37b:	mov    cl,0x53
  40a37d:	mov    dh,0x4f
  40a37f:	cdq    
  40a380:	inc    edx
  40a381:	mov    esi,0xf33fa453
  40a386:	push   es
  40a387:	call   0xd36f:0x8a5d816f
  40a38e:	popa   
  40a38f:	xchg   BYTE PTR [edi-0x72],bl
  40a392:	mov    BYTE PTR es:[eax+eiz*2+0x6a],dh
  40a397:	jnp    0x40a408
  40a399:	pop    edx
  40a39a:	pusha  
  40a39b:	(bad)  
  40a39c:	and    edx,DWORD PTR [ebp+0x66]
  40a39f:	and    BYTE PTR [edi+0x4e],0x6b
  40a3a3:	jmp    0x314796ab
  40a3a8:	push   esp
  40a3a9:	cs push eax
  40a3ab:	cmp    dl,BYTE PTR [eax+0x21]
  40a3ae:	sub    dl,BYTE PTR ds:[eax-0xd]
  40a3b2:	push   es
  40a3b3:	inc    esp
  40a3b4:	data16 adc BYTE PTR [eax+0x3c],ah
  40a3b8:	popw   ds
  40a3ba:	push   0x3b
  40a3bc:	popa   
  40a3bd:	pop    ss
  40a3be:	daa    
  40a3bf:	cmp    al,0x66
  40a3c1:	push   cs
  40a3c2:	outs   dx,DWORD PTR ds:[esi]
  40a3c3:	cmp    DWORD PTR [ecx+0x10],esp
  40a3c6:	jnp    0x40a3d4
  40a3c8:	pusha  
  40a3c9:	rcr    DWORD PTR [ebp+0xf],cl
  40a3cc:	jo     0x40a3e4
  40a3ce:	jne    0x40a3d7
  40a3d0:	gs pop es
  40a3d2:	daa    
  40a3d3:	sbb    dh,BYTE PTR [eax+0x0]
  40a3d6:	add    BYTE PTR [eax],al
  40a3d8:	sar    BYTE PTR [edx+0xc],cl
  40a3db:	add    al,0xf3
  40a3dd:	push   es
  40a3de:	xor    DWORD PTR [esi+esi*4+0x4f],edx
  40a3e2:	add    BYTE PTR [eax],ah
  40a3e4:	lods   eax,DWORD PTR ds:[esi]
  40a3e5:	pop    eax
  40a3e6:	inc    ecx
  40a3e7:	sbb    eax,0xb05f4abe
  40a3ec:	scas   al,BYTE PTR es:[edi]
  40a3ed:	pop    edx
  40a3ee:	inc    ebp
  40a3ef:	mov    ebx,0xb64c45b6
  40a3f4:	mov    eax,ds:0xb3b5415a
  40a3f9:	push   es
  40a3fa:	add    al,dl
  40a3fc:	mov    ?,WORD PTR [eax+0x61]
  40a3ff:	int    0x8f
  40a401:	push   0x20
  40a403:	retf   0x608d
  40a406:	jae    0x40a3bd
  40a408:	xchg   edi,eax
  40a409:	pusha  
  40a40a:	je     0x40a3d5
  40a40c:	cmp    DWORD PTR [edx+0x72],0x679690
  40a413:	mov    eax,ds:0xa05f49a0
  40a418:	ss push ebp
  40a41a:	inc    ecx
  40a41b:	mov    ch,0x37
  40a41d:	inc    ebx
  40a41e:	pop    edi
  40a41f:	stos   BYTE PTR es:[edi],al
  40a420:	xor    eax,0x2f9d533d
  40a425:	cmp    eax,0x6f0e954
  40a42a:	add    BYTE PTR [eax+0x4d],dl
  40a42d:	jne    0x40a490
  40a42f:	dec    ebp
  40a430:	dec    esi
  40a431:	arpl   WORD PTR [eax],sp
  40a433:	dec    edx
  40a434:	inc    edi
  40a435:	push   0x73104872
  40a43a:	cmp    eax,DWORD PTR gs:[eax]
  40a43d:	add    BYTE PTR [eax],al
  40a43f:	iret   
  40a440:	pop    edi
  40a441:	outs   dx,BYTE PTR ds:[esi]
  40a442:	or     DWORD PTR [eax],edx
  40a444:	pop    edi
  40a445:	jne    0x40a48e
  40a447:	or     BYTE PTR [edi],ah
  40a449:	jae    0x40a48b
  40a44b:	or     DWORD PTR [eax+eiz*1+0x11],esp
  40a44f:	adc    ch,BYTE PTR [eax+0x64]
  40a452:	add    al,0x1
  40a454:	pop    es
  40a455:	add    BYTE PTR [ecx],ah
  40a457:	pop    ds
  40a458:	inc    esp
  40a459:	pop    edi
  40a45a:	and    BYTE PTR [ebp+0x1e004154],dh
  40a460:	cmp    al,0x44
  40a462:	pop    edi
  40a463:	or     DWORD PTR [ebx],edi
  40a465:	push   ebp
  40a466:	dec    esi
  40a467:	adc    DWORD PTR [esi+0x53],edx
  40a46a:	dec    ecx
  40a46b:	loopne 0x40a4b4
  40a46d:	add    BYTE PTR [eax],al
  40a46f:	and    esp,DWORD PTR [esi+esi*2+0x61]
  40a473:	cs pop ebx
  40a475:	and    BYTE PTR fs:[ecx],ch
  40a478:	bound  esp,QWORD PTR [ecx+0x72]
  40a47b:	cmp    ebp,DWORD PTR [ecx+0x74]
  40a47e:	gs push 0xea6e692a
  40a484:	imul   ebp,DWORD PTR [edi+0x6e],0x746e6756
  40a48b:	pcmpgtd mm4,QWORD PTR [ebp+0x6e]
  40a48f:	jne    0x40a4ef
  40a491:	push   0x61676220
  40a496:	fs addr16 js 0x40a49a
  40a49a:	add    BYTE PTR [edx-0x5ca0baa7],dl
  40a4a0:	inc    ebx
  40a4a1:	push   esi
  40a4a2:	inc    ecx
  40a4a3:	add    BYTE PTR [eax],al
  40a4a5:	add    BYTE PTR [esi-0x76a0bbc6],cl
  40a4ab:	inc    esp
  40a4ac:	dec    esi
  40a4ad:	push   esp
  40a4ae:	xchg   edi,eax
  40a4af:	inc    ebx
  40a4b0:	push   esp
  40a4b1:	pop    edi
  40a4b2:	(bad)  
  40a4b3:	sub    eax,0x3b06474e
  40a4b8:	add    BYTE PTR [eax],al
  40a4ba:	xor    esp,DWORD PTR [ebp+0x76]
  40a4bd:	popa   
  40a4be:	out    dx,al
  40a4bf:	popa   
  40a4c0:	and    BYTE PTR fs:[ecx],bh
  40a4c3:	pop    ebx
  40a4c4:	popa   
  40a4c5:	jb     0x40a4f2
  40a4c7:	push   0x22d86574
  40a4cc:	imul   ebp,DWORD PTR [esi-0x6],0xf661655a
  40a4d3:	dec    ebp
  40a4d4:	jb     0x40a4d6
  40a4d6:	ret    0x4552
  40a4d9:	pop    edi
  40a4da:	repz es inc esi
  40a4dd:	push   esi
  40a4de:	mov    dl,0xb
  40a4e0:	dec    ebx
  40a4e1:	inc    esp
  40a4e2:	les    esi,FWORD PTR [edi]
  40a4e4:	aas    
  40a4e5:	inc    ecx
  40a4e6:	mov    bh,0x22
  40a4e8:	push   edx
  40a4e9:	pop    edi
  40a4ea:	mov    edi,0xbd454924
  40a4ef:	fild   WORD PTR [edx]
  40a4f1:	add    bl,dh
  40a4f3:	mov    bl,0x3c
  40a4f5:	and    al,dl
  40a4f7:	xlat   BYTE PTR ds:[ebx]
  40a4f8:	popa   
  40a4f9:	jb     0x40a4cd
  40a4fb:	shr    BYTE PTR [esi+0x65],0xa1
  40a4ff:	call   FWORD PTR [esi+0x78]
  40a502:	mov    ds:0x96745fba,eax
  40a507:	ret    
  40a508:	add    al,BYTE PTR [eax]
  40a50a:	add    BYTE PTR [eax],al
  40a50c:	add    bl,dh
  40a50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a50f:	push   edx
  40a510:	inc    ebp
  40a511:	lods   al,BYTE PTR ds:[esi]
  40a512:	mov    edi,DWORD PTR [edi+ebx*2]
  40a515:	scas   al,BYTE PTR es:[edi]
  40a516:	(bad)  
  40a517:	push   edx
  40a518:	inc    ebp
  40a519:	mov    al,0xb3
  40a51b:	cmp    eax,0x6486f344
  40a520:	jbe    0x40a574
  40a522:	push   0x6a
  40a524:	adc    edi,DWORD PTR fs:[eax+esi*2+0x61]
  40a529:	push   esp
  40a52a:	jnp    0x40a589
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	pop    edi
  40a52e:	fiadd  WORD PTR [edx]
  40a530:	add    bl,dh
  40a532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a533:	push   edx
  40a534:	inc    ebp
  40a535:	and    al,0x37
  40a537:	inc    esi
  40a538:	push   esi
  40a539:	xor    bl,BYTE PTR [edx]
  40a53b:	dec    ebx
  40a53c:	inc    esp
  40a53d:	adc    al,0x1c
  40a53f:	push   edx
  40a540:	inc    ecx
  40a541:	xor    al,0xb
  40a543:	aas    
  40a544:	dec    esi
  40a545:	aas    
  40a546:	fiadd  WORD PTR [edx]
  40a548:	add    bl,dh
  40a54a:	push   esi
  40a54b:	data16 jbe 0x40a560
  40a54e:	inc    edx
  40a54f:	imul   esp,DWORD PTR [ebx+edx*8+0x2e],0x6f
  40a554:	add    DWORD PTR gs:[edi],eax
  40a557:	and    BYTE PTR [eax+eax*1],ah
  40a55a:	jae    0x40a577
  40a55c:	imul   eax,DWORD PTR ds:0xf303e964,0x6
  40a563:	and    DWORD PTR [esi+ebp*4+0x4b],edx
  40a567:	xor    BYTE PTR [esi-0x3b],al
  40a56a:	inc    ebp
  40a56b:	sub    eax,0x184baf4b
  40a570:	dec    edi
  40a571:	add    BYTE PTR [eax],al
  40a573:	add    BYTE PTR [esi-0x5faaefa8],dh
  40a579:	push   edx
  40a57a:	mov    ebx,0xe943ad4a
  40a57f:	add    esi,ebx
  40a581:	push   es
  40a582:	shl    BYTE PTR [ebp-0x5b],0x65
  40a586:	mov    ebp,0xb9268f6a
  40a58b:	bound  esp,QWORD PTR [edi-0xcfc16a2]
  40a591:	push   es
  40a592:	mov    eax,ds:0xa04bb653
  40a597:	inc    ebp
  40a598:	popf   
  40a599:	inc    ebp
  40a59a:	mov    ch,0x4a
  40a59c:	mov    bh,0x4b
  40a59e:	mov    ecx,0xe93e9f42
  40a5a3:	add    esi,ebx
  40a5a5:	push   es
  40a5a6:	and    BYTE PTR [ebp+0x5d],0x66
  40a5aa:	xchg   ebp,eax
  40a5ab:	push   0x57
  40a5ad:	daa    
  40a5ae:	jns    0x40a614
  40a5b0:	popa   
  40a5b1:	jae    0x40a59c
  40a5b3:	add    esi,ebx
  40a5b5:	push   es
  40a5b6:	mov    eax,ds:0x304c2e53
  40a5bb:	inc    edx
  40a5bc:	and    eax,0x2f3d2d46
  40a5c1:	dec    esp
  40a5c2:	cmp    DWORD PTR [ebx+0x41],eax
  40a5c5:	push   ebx
  40a5c6:	jmp    0x504798ce
  40a5cb:	bound  esp,QWORD PTR ds:0xf5d4d66
  40a5d1:	daa    
  40a5d2:	add    BYTE PTR [ecx+0x10],al
  40a5d5:	js     0x40a64b
  40a5d7:	jmp    0xf040a5dc
  40a5dc:	push   es
  40a5dd:	add    BYTE PTR [ecx],dh
  40a5df:	daa    
  40a5e0:	inc    edx
  40a5e1:	pop    edi
  40a5e2:	xor    BYTE PTR [ecx],dh
  40a5e4:	push   ebp
  40a5e5:	inc    ecx
  40a5e6:	and    eax,0x215f432e
  40a5eb:	mov    al,0x57
  40a5ed:	push   esp
  40a5ee:	jmp    0x1040ace3
  40a5f3:	shl    DWORD PTR [ecx+eiz*2+0x5],1
  40a5f7:	scas   al,BYTE PTR es:[edi]
  40a5f8:	bound  esp,QWORD PTR [eax]
  40a5fa:	adc    al,0x9d
  40a5fc:	cmp    al,BYTE PTR [eax]
  40a5fe:	mov    cl,0xa0
  40a600:	inc    ecx
  40a601:	pop    edi
  40a602:	mov    al,0xb2
  40a604:	push   esp
  40a605:	inc    ecx
  40a606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a607:	out    dx,eax
  40a608:	inc    edx
  40a609:	pop    edi
  40a60a:	mov    ah,0xbe
  40a60c:	cmp    al,BYTE PTR [eax]
  40a60e:	rcl    BYTE PTR [edx-0x48329e8c],1
  40a614:	bound  esp,QWORD PTR [eax]
  40a616:	mov    eax,ds:0x95052a4
  40a61b:	xchg   edx,eax
  40a61c:	popa   
  40a61d:	je     0x40a5b0
  40a61f:	xchg   ecx,eax
  40a620:	bound  eax,QWORD PTR [eax]
  40a622:	mov    cl,0xa0
  40a624:	inc    ecx
  40a625:	pop    edi
  40a626:	mov    al,ds:0x9d415132
  40a62b:	daa    
  40a62c:	inc    ebx
  40a62d:	pop    edi
  40a62e:	mov    ah,0x2b
  40a630:	push   ebx
  40a631:	dec    eax
  40a632:	scas   al,BYTE PTR es:[edi]
  40a633:	sub    al,0x7
  40a635:	add    BYTE PTR [eax+0x7d617152],al
  40a63b:	daa    
  40a63c:	arpl   WORD PTR [eax],sp
  40a63e:	xor    DWORD PTR [eax],eax
  40a640:	add    BYTE PTR [eax],al
  40a642:	sbb    edx,DWORD PTR [ebx+0x50]
  40a645:	or     DWORD PTR [ebx+esi*2],edi
  40a648:	popa   
  40a649:	pop    ebp
  40a64a:	sub    dh,BYTE PTR [esi+0x20]
  40a64d:	dec    edx
  40a64e:	adc    BYTE PTR [ebx+0x65],ah
  40a651:	add    BYTE PTR [edx-0x1dfffffa],cl
  40a657:	push   edx
  40a658:	inc    ebp
  40a659:	pop    edi
  40a65a:	rol    DWORD PTR [esi+edx*2+0x41],cl
  40a65e:	out    0x2b,al
  40a660:	inc    esp
  40a661:	pop    edi
  40a662:	mov    ecx,0xbf54414e
  40a667:	push   ecx
  40a668:	add    BYTE PTR [eax],al
  40a66a:	repz fs jbe 0x40a6cf
  40a66e:	dec    bx
  40a670:	and    BYTE PTR fs:[edx],ah
  40a673:	dec    edi
  40a674:	push   esp
  40a675:	push   eax
  40a676:	sub    dh,BYTE PTR [eax+0x65]
  40a679:	jb     0x40a6c4
  40a67b:	dec    ebx
  40a67c:	outs   dx,DWORD PTR ds:[esi]
  40a67d:	outs   dx,BYTE PTR ds:[esi]
  40a67e:	pop    edx
  40a67f:	push   es
  40a680:	add    BYTE PTR [eax],al
  40a682:	adc    BYTE PTR [esi+0x45],0x5f
  40a686:	or     DWORD PTR [eax+0x56],0x41
  40a68a:	push   esi
  40a68b:	sub    eax,DWORD PTR [edi+ebx*2+0x5c]
  40a68f:	aas    
  40a690:	push   edx
  40a691:	push   ebx
  40a692:	arpl   WORD PTR [ebp+0x4e],ax
  40a695:	add    BYTE PTR [esi],ch
  40a697:	arpl   WORD PTR [ecx+eiz*2-0x6],si
  40a69b:	jo     0x40a702
  40a69d:	arpl   WORD PTR [edi],bp
  40a69f:	dec    ebx
  40a6a0:	jbe    0x40a707
  40a6a2:	outs   dx,BYTE PTR ds:[esi]
  40a6a3:	es popa 
  40a6a5:	data16 add BYTE PTR [eax],al
  40a6a8:	add    BYTE PTR [esi+0x5f],bl
  40a6ab:	jb     0x40a6cd
  40a6ad:	jns    0x40a713
  40a6af:	ins    DWORD PTR es:[edi],dx
  40a6b0:	jo     0x40a718
  40a6b2:	pop    edi
  40a6b3:	je     0x40a71a
  40a6b5:	outs   dx,BYTE PTR ds:[esi]
  40a6b6:	and    eax,0x67646f63
  40a6bb:	arpl   WORD PTR gs:[esi+0x4b],cx
  40a6bf:	outs   dx,DWORD PTR ds:[esi]
  40a6c0:	outs   dx,BYTE PTR ds:[esi]
  40a6c1:	and    BYTE PTR ds:0x74256c63,0x65
  40a6c8:	and    BYTE PTR [edi],ah
  40a6ca:	bound  esi,QWORD PTR [ebx+0x73]
  40a6cd:	repz imul esp,DWORD PTR ds:[ebp-0xd],0x3c455427
  40a6d6:	sbb    eax,0x23404f40
  40a6db:	dec    eax
  40a6dc:	pop    edi
  40a6dd:	xor    BYTE PTR [ecx],ah
  40a6df:	inc    edx
  40a6e0:	dec    esi
  40a6e1:	cs sbb eax,0x322c4958
  40a6e7:	add    al,0x0
  40a6e9:	repz adc esp,DWORD PTR [ecx+0x6f]
  40a6ed:	adc    eax,DWORD PTR [ebx]
  40a6ef:	arpl   WORD PTR [esi-0x16],bp
  40a6f2:	mov    edi,0xfbd2655a
  40a6f7:	data16 jb 0x40a70d
  40a6fa:	(bad)  
  40a6fb:	push   0x74
  40a6fd:	(bad)  
  40a6fe:	in     al,dx
  40a6ff:	and    dh,BYTE PTR [ebx-0x32]
  40a702:	add    ah,BYTE PTR [edx+0x3b]
  40a705:	adc    edx,ecx
  40a707:	js     0x40a76e
  40a709:	rol    ecx,0x5e
  40a70c:	outs   dx,DWORD PTR ds:[esi]
  40a70d:	add    BYTE PTR [eax],al
  40a70f:	add    BYTE PTR [edi+edi*8-0x3d609a99],ah
  40a716:	arpl   WORD PTR [esi+edx*4-0x45],si
  40a71a:	add    al,BYTE PTR [eax]
  40a71c:	repz mov bh,0x52
  40a71f:	inc    ebp
  40a720:	lods   al,BYTE PTR ds:[esi]
  40a721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a722:	inc    ebp
  40a723:	inc    ecx
  40a724:	scas   eax,DWORD PTR es:[edi]
  40a725:	mov    ds:0xa9ac5f54,al
  40a72a:	inc    ebp
  40a72b:	push   edx
  40a72c:	lods   eax,DWORD PTR ds:[esi]
  40a72d:	fwait
  40a72e:	aas    
  40a72f:	push   edi
  40a730:	repz mov WORD PTR [esi+0x72],?
  40a734:	dec    esi
  40a735:	jg     0x40a794
  40a737:	and    BYTE PTR [esi-0x70],dl
  40a73a:	gs dec di
  40a73d:	mov    esi,0x7f137461
  40a742:	pusha  
  40a743:	and    BYTE PTR [esi],bh
  40a745:	push   0x7437866
  40a74a:	dec    esp
  40a74b:	gs aas 
  40a74d:	bound  eax,QWORD PTR [ebp+0x24]
  40a750:	daa    
  40a751:	pop    esi
  40a752:	inc    esp
  40a753:	addr16 repz push es
  40a756:	and    DWORD PTR [esi+esi*1+0x48],edx
  40a75a:	xor    BYTE PTR [edx+0x3d],al
  40a75d:	inc    esi
  40a75e:	sub    eax,0x2c48373b
  40a763:	inc    ecx
  40a764:	sub    eax,0x32581a48
  40a769:	push   ebx
  40a76a:	sub    al,0x4
  40a76c:	repz push es
  40a76e:	adc    eax,0x626d65c
  40a773:	bound  eax,QWORD PTR [eax]
  40a775:	add    BYTE PTR [eax],al
  40a777:	les    ebx,FWORD PTR [ecx+0x4]
  40a77a:	jne    0x40a75c
  40a77c:	gs push cs
  40a77e:	addr16 mov ah,0x63
  40a781:	push   cs
  40a782:	pop    edi
  40a783:	ret    
  40a784:	pop    edx
  40a785:	or     al,0x78
  40a787:	into   
  40a788:	or     ah,BYTE PTR es:[ebx-0x31]
  40a78c:	pop    edx
  40a78d:	retf   
  40a78e:	(bad)  
  40a78f:	rcr    BYTE PTR [ebx+0x9],1
  40a792:	push   0xffffff92
  40a794:	pop    ebp
  40a795:	lds    esp,FWORD PTR [esi-0x71]
  40a798:	push   es
  40a799:	mov    eax,ds:0xaa47b653
  40a79e:	inc    ebp
  40a79f:	mov    ah,0x59
  40a7a1:	les    esi,FWORD PTR [eax+eax*4+0x65]
  40a7a5:	into   
  40a7a6:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7a8:	arpl   WORD PTR [esi-0x73a57ca2],di
  40a7ae:	ja     0x40a73e
  40a7b0:	push   es
  40a7b1:	xchg   ebp,eax
  40a7b2:	pop    ebx
  40a7b3:	push   esi
  40a7b4:	daa    
  40a7b5:	xchg   BYTE PTR [ecx+0x44],ah
  40a7b8:	gs jle 0x40a822
  40a7bb:	pop    edx
  40a7bc:	daa    
  40a7bd:	mov    ah,BYTE PTR [edx+0x47]
  40a7c0:	pop    ebx
  40a7c1:	mov    esp,DWORD PTR [edx+0x50]
  40a7c4:	pop    esp
  40a7c5:	add    cl,cl
  40a7c7:	pop    edx
  40a7c8:	imul   di,WORD PTR [ebp+0x55],0x63
  40a7ce:	xor    DWORD PTR [edi],ebx
  40a7d0:	inc    edx
  40a7d1:	pop    edi
  40a7d2:	sub    dh,BYTE PTR [ecx]
  40a7d4:	dec    eax
  40a7d5:	bound  eax,QWORD PTR [esi+0x1b]
  40a7d8:	outs   dx,BYTE PTR ds:[esi]
  40a7d9:	add    BYTE PTR [ebp+0x0],dl
  40a7dc:	add    BYTE PTR [eax],al
  40a7de:	aas    
  40a7df:	bound  esp,QWORD PTR [eax]
  40a7e1:	push   esi
  40a7e2:	xor    eax,0x16446848
  40a7e7:	arpl   WORD PTR [ebp+0x3b],sp
  40a7ea:	add    BYTE PTR [eax+0x63],cl
  40a7ed:	adc    dh,BYTE PTR ds:[edi+0x6c]
  40a7f1:	or     al,0xfb
  40a7f3:	popa   
  40a7f4:	and    BYTE PTR [edx],cl
  40a7f6:	(bad)  
  40a7f7:	pop    edx
  40a7f8:	ins    BYTE PTR es:[edi],dx
  40a7f9:	or     ecx,esi
  40a7fb:	arpl   WORD PTR [ebx-0x37],bp
  40a7fe:	(bad)  
  40a7ff:	imul   edx,DWORD PTR gs:0x310062ca,0x2a5f41a7
  40a80a:	mov    cl,0x47
  40a80c:	push   0x6562d604
  40a811:	fcmovnb st,st(1)
  40a813:	inc    edi
  40a814:	arpl   si,cx
  40a816:	xchg   ebx,eax
  40a817:	jbe    0x40a885
  40a819:	int3   
  40a81a:	pushf  
  40a81b:	popa   
  40a81c:	add    ch,dl
  40a81e:	mov    eax,0xb6d62061
  40a823:	inc    edi
  40a824:	push   0x656297c4
  40a829:	mov    ebx,0xbd6170b5
  40a82e:	jnp    0x40a891
  40a830:	and    BYTE PTR [edx-0x7493a571],cl
  40a836:	push   edi
  40a837:	push   0x6b
  40a839:	leave  
  40a83a:	dec    esi
  40a83b:	push   0x6b4b7d69
  40a840:	add    BYTE PTR [eax],al
  40a842:	add    BYTE PTR [eax],al
  40a844:	add    BYTE PTR [edx-0x66a0bac6],ah
  40a84a:	dec    eax
  40a84b:	pop    edi
  40a84c:	push   0x65646b77
  40a851:	cmp    BYTE PTR [ebp+0x76],dl
  40a854:	popa   
  40a855:	push   ds
  40a856:	pusha  
  40a857:	add    BYTE PTR gs:[esi+0x43],al
  40a85b:	and    BYTE PTR gs:0x37685f45,ch
  40a862:	ins    BYTE PTR es:[edi],dx
  40a863:	fs fcom DWORD PTR gs:[ebp+0x66]
  40a868:	imul   esi,DWORD PTR [edi],0x39206467
  40a86e:	ins    BYTE PTR es:[edi],dx
  40a86f:	ins    BYTE PTR es:[edi],dx
  40a870:	ins    BYTE PTR es:[edi],dx
  40a871:	sub    BYTE PTR [ebx+eiz*2+0x6b],ch
  40a875:	stos   BYTE PTR es:[edi],al
  40a876:	ins    BYTE PTR es:[edi],dx
  40a877:	popa   
  40a878:	imul   edi,esi,0x1200646f
  40a87e:	cmp    eax,DWORD PTR [ebp+0x5f]
  40a881:	or     DWORD PTR [ecx+0x5f],ecx
  40a884:	push   0x65646be7
  40a889:	dec    eax
  40a88a:	push   ebp
  40a88b:	imul   si,di,0x6466
  40a890:	add    BYTE PTR [esi+0x42],al
  40a893:	and    BYTE PTR gs:0x48755f44,bl
  40a89a:	inc    esi
  40a89b:	and    BYTE PTR [ebx+0x3b],ah
  40a89e:	inc    esi
  40a89f:	ins    BYTE PTR es:[edi],dx
  40a8a0:	bound  ebp,QWORD PTR [ebx]
  40a8a2:	imul   ebp,DWORD PTR [ebx+0x20],0x6c696b24
  40a8a9:	add    BYTE PTR [eax],al
  40a8ab:	add    BYTE PTR [edi],dh
  40a8ad:	outs   dx,BYTE PTR ds:[esi]
  40a8ae:	add    BYTE PTR [eax],al
  40a8b0:	push   edx
  40a8b1:	cmp    al,BYTE PTR [ebp+0x5f]
  40a8b4:	dec    ecx
  40a8b5:	dec    eax
  40a8b6:	pop    edi
  40a8b7:	jne    0x40a911
  40a8b9:	inc    esi
  40a8ba:	add    BYTE PTR [eax],al
  40a8bc:	xchg   BYTE PTR [ecx+0x65],al
  40a8bf:	and    bl,dh
  40a8c1:	mov    WORD PTR [edi+ebx*2+0x4e],ds
  40a8c5:	mov    esi,DWORD PTR [ecx+0x73]
  40a8c8:	push   edx
  40a8c9:	xchg   ebp,eax
  40a8ca:	addr16 pop edi
  40a8cc:	push   ecx
  40a8cd:	mov    esp,DWORD PTR [ebp+0x69]
  40a8d0:	push   ebp
  40a8d1:	shl    BYTE PTR [ecx+0x61],1
  40a8d4:	dec    edi
  40a8d5:	fs popa 
  40a8d7:	popa   
  40a8d8:	push   eax
  40a8d9:	cmp    DWORD PTR [esi+eiz*2],esp
  40a8dc:	adc    dh,BYTE PTR [edi]
  40a8de:	pusha  
  40a8df:	gs (bad) 
  40a8e2:	add    al,BYTE PTR [eax]
  40a8e4:	repz daa 
  40a8e6:	push   esp
  40a8e7:	inc    ebp
  40a8e8:	xor    al,0x31
  40a8ea:	inc    edx
  40a8eb:	pop    edi
  40a8ec:	push   ds
  40a8ed:	dec    ebx
  40a8ee:	jno    0x40a963
  40a8f0:	adc    dl,BYTE PTR [ebp+0x67]
  40a8f3:	pop    edi
  40a8f4:	adc    DWORD PTR [ebx+0x65],ecx
  40a8f7:	imul   eax,DWORD PTR ds:0xf30002f0,0xd0637700
  40a901:	adc    dh,BYTE PTR [ecx+0x73]
  40a904:	repz daa 
  40a906:	push   esp
  40a907:	inc    ebp
  40a908:	mov    ah,0x1c
  40a90a:	cmp    DWORD PTR [eax],eax
  40a90c:	repz inc DWORD PTR [edx+0x54]
  40a910:	add    BYTE PTR [eax],al
  40a912:	add    BYTE PTR [eax-0xcfffbd9],dh
  40a918:	cli    
  40a919:	cmp    eax,0x4fb19e53
  40a91e:	inc    ebx
  40a91f:	rcl    DWORD PTR [esi-0x5f0cbac0],0x55
  40a926:	inc    edx
  40a927:	shl    BYTE PTR [eax-0x4d4eb6b0],0x2
  40a92e:	add    bl,dh
  40a930:	mov    ch,0x3b
  40a932:	push   esp
  40a933:	mov    edx,0xf30049b5
  40a938:	sbb    BYTE PTR ds:0xa806ae53,0x51
  40a93f:	xor    BYTE PTR [edi-0x17],cl
  40a942:	add    esi,ebx
  40a944:	push   es
  40a945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a946:	inc    esi
  40a947:	inc    ecx
  40a948:	dec    esp
  40a949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a94a:	add    esi,ebx
  40a94c:	push   es
  40a94d:	stos   BYTE PTR es:[edi],al
  40a94e:	cmp    esi,DWORD PTR [esi]
  40a950:	dec    eax
  40a951:	mov    dl,0x3c
  40a953:	push   ds
  40a954:	cmp    ebp,ecx
  40a956:	add    esi,ebx
  40a958:	push   es
  40a959:	pushf  
  40a95a:	cmp    BYTE PTR [edx],dh
  40a95c:	dec    eax
  40a95d:	cmp    eax,0x354e453b
  40a962:	dec    ebx
  40a963:	repz push es
  40a965:	cmp    eax,DWORD PTR [edi+0x43]
  40a968:	push   esp
  40a969:	cmp    ebx,DWORD PTR [eax-0xd]
  40a96c:	push   es
  40a96d:	sbb    al,0x3e
  40a96f:	aas    
  40a970:	push   esp
  40a971:	sub    bh,BYTE PTR [ecx]
  40a973:	repz push es
  40a975:	sbb    DWORD PTR [edx+0x0],edx
  40a978:	add    BYTE PTR [eax],al
  40a97a:	sub    al,0x37
  40a97c:	sbb    DWORD PTR [ebx+0x1f],eax
  40a97f:	dec    eax
  40a980:	xor    DWORD PTR [ebx+esi*8],eax
  40a983:	push   es
  40a984:	cmp    DWORD PTR [edx-0x4c],edx
  40a987:	ss das 
  40a989:	cmp    ebp,DWORD PTR [ebp-0xcfc16b6]
  40a98f:	push   es
  40a990:	xor    al,0x3d
  40a992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a993:	dec    ecx
  40a994:	jmp    0x24479c9c
  40a999:	cmp    DWORD PTR [eax-0xcfbe2ad],esi
  40a99f:	push   es
  40a9a0:	mov    ch,0x3c
  40a9a2:	mov    al,0x4f
  40a9a4:	jmp    0xaa479cac
  40a9a9:	cmp    al,0xc3
  40a9ab:	cmp    eax,0x6f303e9
  40a9b0:	popf   
  40a9b1:	push   ecx
  40a9b2:	mov    dl,0x47
  40a9b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b5:	add    esi,ebx
  40a9b7:	push   es
  40a9b8:	add    BYTE PTR [esi-0x61b6c560],ah
  40a9be:	mov    dh,0x37
  40a9c0:	add    BYTE PTR [edx-0x5bb1aad1],ch
  40a9c6:	xor    edi,DWORD PTR [ebx]
  40a9c8:	add    BYTE PTR [ecx-0x5effc4bb],bh
  40a9ce:	sub    eax,0xf0e94446
  40a9d3:	push   es
  40a9d4:	add    BYTE PTR [ebp-0x62baacd3],ah
  40a9da:	xor    eax,0x8a0007
  40a9df:	add    BYTE PTR [eax],al
  40a9e1:	pop    ss
  40a9e2:	jne    0x40aa52
  40a9e4:	dec    esp
  40a9e5:	adc    al,0x5b
  40a9e7:	imul   ecx,DWORD PTR [esi+0x49],0x25590007
  40a9ee:	je     0x40aa68
  40a9f0:	push   eax
  40a9f1:	cli    
  40a9f2:	outs   dx,DWORD PTR ds:[si]
  40a9f4:	push   edi
  40a9f5:	sub    DWORD PTR [edx+0x63],ebp
  40a9f8:	xor    eax,0xe96e7426
  40a9fd:	lock push es
  40a9ff:	add    BYTE PTR [edx+0x18],cl
  40aa02:	jne    0x40aa78
  40aa04:	or     al,0xc9
  40aa06:	pop    edx
  40aa07:	sub    eax,0x6774d20d
  40aa0c:	sbb    eax,0x150006bf
  40aa11:	frstor [ebp+0x6e]
  40aa14:	cli    
  40aa15:	shr    BYTE PTR [ecx+0x72],cl
  40aa18:	int3   
  40aa19:	shl    DWORD PTR [ebx+eiz*2+0x6],cl
  40aa1d:	shr    DWORD PTR [ebp+0x6e],cl
  40aa20:	push   es
  40aa21:	out    dx,eax
  40aa22:	push   es
  40aa23:	add    ah,bl
  40aa25:	mov    al,ds:0xc4c8726b
  40aa2a:	imul   eax,DWORD PTR [eax],0x6e59b8ca
  40aa30:	ret    0x6a93
  40aa33:	add    BYTE PTR [eax],al
  40aa35:	and    DWORD PTR [esi+0x65],esp
  40aa38:	jo     0x40aa31
  40aa3a:	imul   ebp,DWORD PTR [ecx+ebp*2+0x3c],0x29000066
  40aa42:	cmp    ebp,DWORD PTR [edi+0x73]
  40aa45:	add    BYTE PTR [eax],al
  40aa47:	add    BYTE PTR [edi+0x6],bh
  40aa4a:	add    BYTE PTR [eax],al
  40aa4c:	sahf   
  40aa4d:	mov    cl,0x40
  40aa4f:	add    BYTE PTR [ecx-0x53],bh
  40aa52:	inc    eax
  40aa53:	add    BYTE PTR [ebp+0x4b0040c6],dh
  40aa59:	retf   
  40aa5a:	inc    eax
  40aa5b:	add    BYTE PTR [esp+ecx*8+0x40],cl
  40aa5f:	add    BYTE PTR [eax-0x34],dl
  40aa62:	inc    eax
  40aa63:	add    BYTE PTR [ebp+0x45006c06],cl
  40aa69:	or     esp,DWORD PTR [edx+0x0]
  40aa6c:	cmp    ecx,DWORD PTR [ebx]
  40aa6e:	ins    BYTE PTR es:[edi],dx
  40aa6f:	add    dh,ah
  40aa71:	or     al,BYTE PTR [eax]
  40aa73:	add    dh,dh
  40aa75:	or     ch,BYTE PTR [edi+0x0]
  40aa78:	cmp    DWORD PTR [ebx],ecx
  40aa7a:	popa   
  40aa7b:	add    BYTE PTR [esi],dh
  40aa7d:	or     ebx,DWORD PTR [eax+eax*1-0x76]
  40aa81:	push   es
  40aa82:	add    BYTE PTR [eax],al
  40aa84:	xor    dl,BYTE PTR [edi+0x74]
  40aa87:	jo     0x40aad9
  40aa89:	std    
  40aa8a:	cs ja  0x40aa8a
  40aa8d:	push   ebp
  40aa8e:	(bad)
  40aa94:	jmp    0x5a7017d6
  40aa99:	push   es
  40aa9a:	add    BYTE PTR [eax],al
  40aa9c:	loop   0x40aaf4
  40aa9e:	je     0x40ab10
  40aaa0:	cmp    ch,0x2e
  40aaa3:	ja     0x40aae2
  40aaa5:	push   ebp
  40aaa6:	cs addr16 inc ebp
  40aaa9:	cmp    eax,0x6c67
  40aaae:	add    BYTE PTR [edi],ch
  40aab0:	add    BYTE PTR [ebx+0x6f],ah
  40aab3:	repz retf 0x19
  40aab7:	repz add ecx,DWORD PTR [edi-0x709c0cc1]
  40aabe:	aas    
  40aabf:	repz jl 0x40aac4
  40aac2:	repz add DWORD PTR gs:[edx],0x63
  40aac7:	repz int 0x2
  40aaca:	push   eax
  40aacb:	repz jge 0x40aad0
  40aace:	imul   esi,ebx,0xf3690279
  40aad4:	mov    eax,DWORD PTR [edx]
  40aad6:	xrelease mov BYTE PTR gs:[edx],al
  40aada:	gs repz out dx,eax
  40aadd:	add    al,BYTE PTR [eax]
  40aadf:	repz rol DWORD PTR [edx],1
  40aae2:	gs repz push edi
  40aae5:	add    esp,DWORD PTR [ebp-0xd]
  40aae8:	out    dx,eax
  40aae9:	add    al,BYTE PTR [eax]
  40aaeb:	repz jle 0x40aadd
  40aaee:	inc    ecx
  40aaef:	repz out dx,eax
  40aaf1:	add    al,BYTE PTR [eax]
  40aaf3:	repz and DWORD PTR [ebp-0x10],edi
  40aaf7:	lods   al,BYTE PTR ds:[esi]
  40aaf8:	jmp    0xf073f887
  40aafd:	fiadd  DWORD PTR [eax-0x33]
  40ab00:	in     eax,dx
  40ab01:	add    dh,dh
  40ab03:	aaa    
  40ab04:	adc    al,0xfc
  40ab06:	add    bh,bh
  40ab08:	jmp    0xd65d935d
  40ab0d:	add    al,BYTE PTR [eax]
  40ab0f:	js     0x40aaba
  40ab11:	dec    ecx
  40ab12:	ret    0x0
  40ab15:	add    bh,dh
  40ab17:	out    dx,eax
  40ab18:	dec    ebp
  40ab19:	mov    eax,DWORD PTR [edi+0x6e]
  40ab1c:	fmul   DWORD PTR [ebx]
  40ab1e:	repnz out dx,eax
  40ab20:	add    dl,BYTE PTR [ebx-0x63]
  40ab23:	clc    
  40ab24:	jl     0x40ab1d
  40ab26:	jo     0x40ab80
  40ab28:	sbb    BYTE PTR [edi],cl
  40ab2a:	jno    0x40ab66
  40ab2c:	add    al,0x0
  40ab2e:	repz push es
  40ab30:	push   0xe90b74e9
  40ab35:	add    ebp,esp
  40ab37:	xchg   ecx,eax
  40ab38:	pop    edi
  40ab39:	add    al,0xf3
  40ab3b:	push   es
  40ab3c:	bound  eax,QWORD PTR [edi-0x5]
  40ab3f:	mov    esp,DWORD PTR [ecx]
  40ab41:	jo     0x40ab39
  40ab43:	adc    DWORD PTR [esi+0x5],esi
  40ab46:	jo     0x40ab26
  40ab48:	jmp    0x6611:0x3085ee6f
  40ab4f:	pop    edx
  40ab50:	jb     0x40abc1
  40ab52:	test   edi,0xe0deec63
  40ab58:	adc    eax,0xe906f300
  40ab5d:	jle    0x40ab2c
  40ab5f:	pop    ebx
  40ab60:	idiv   BYTE PTR [ebp+ebx*4-0x74]
  40ab64:	cs ja  0x40abde
  40ab67:	fcomip st,st(6)
  40ab69:	call   0x75e09b23
  40ab6e:	repnz push es
  40ab70:	imul   ebp,DWORD PTR [ecx],0xf9395af3
  40ab76:	dec    cx
  40ab78:	jmp    0x40abf0
  40ab7a:	add    BYTE PTR [eax],al
  40ab7c:	add    BYTE PTR ds:0x2bc11bb,ah
  40ab82:	dec    edx
  40ab83:	push   ecx
  40ab84:	mov    esp,0xdbe8e084
  40ab89:	fs push cs
  40ab8b:	jmp    0x64181393
  40ab90:	icebp  
  40ab91:	loopne 0x40ab86
  40ab93:	nop
  40ab94:	popa   
  40ab95:	push   cs
  40ab96:	add    eax,0xc83334e9
  40ab9b:	out    dx,al
  40ab9c:	mov    esp,DWORD PTR [esi+0x7a61e946]
  40aba2:	dec    ecx
  40aba3:	xor    ebp,ebx
  40aba5:	repnz adc esi,DWORD PTR [edi+0x7e]
  40aba9:	inc    esi
  40abaa:	pop    ebx
  40abab:	add    ch,dl
  40abad:	mov    ds:0x92dd74df,eax
  40abb2:	lea    edi,[ebp-0x3]
  40abb5:	dec    eax
  40abb6:	fimul  WORD PTR [eax]
  40abb8:	jmp    0xf98639ad
  40abbd:	xchg   ebp,eax
  40abbe:	lahf   
  40abbf:	je     0x40abb9
  40abc1:	(bad)
  40abc5:	xchg   ecx,edx
  40abc7:	(bad)  
  40abc8:	fld    st(7)
  40abca:	(bad)  
  40abcb:	pop    esi
  40abcc:	xchg   edi,eax
  40abcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abce:	int    0xc1
  40abd0:	loope  0x40abc2
  40abd2:	mov    edi,DWORD PTR [ecx+ebx*8]
  40abd5:	add    al,BYTE PTR [edi+0x0]
  40abd8:	fs scas eax,DWORD PTR es:[edi]
  40abda:	push   ebx
  40abdb:	xor    DWORD PTR es:[eax-0x21],0xe9fe
  40abe3:	add    BYTE PTR [ebp+0x42],al
  40abe6:	dec    eax
  40abe7:	xchg   ebx,eax
  40abe8:	lock xor edi,edi
  40abeb:	aam    0xc
  40abed:	stc    
  40abee:	aas    
  40abef:	jmp    0x6a48f72b
  40abf4:	ins    BYTE PTR es:[edi],dx
  40abf5:	or     ebp,eax
  40abf7:	add    eax,0x39fedf50
  40abfc:	xchg   esp,eax
  40abfd:	pop    edx
  40abfe:	or     BYTE PTR [edx],bh
  40ac00:	mov    WORD PTR [eax+0x6d8ba582],?
  40ac06:	sub    al,0xc6
  40ac08:	add    dl,BYTE PTR [ebx]
  40ac0a:	lea    esp,[edi]
  40ac0c:	in     eax,dx
  40ac0d:	call   FWORD PTR ss:[esi+0x620bc370]
  40ac14:	lods   eax,DWORD PTR ds:[esi]
  40ac15:	in     al,dx
  40ac16:	mov    dh,0x3a
  40ac18:	ret    0x5738
  40ac1b:	jb     0x40ac84
  40ac1d:	loopne 0x40ac94
  40ac1f:	stc    
  40ac20:	(bad)  
  40ac22:	out    0xcb,eax
  40ac24:	dec    edi
  40ac25:	(bad)  
  40ac27:	add    cl,al
  40ac29:	pop    ds
  40ac2a:	adc    BYTE PTR [ebx+0x4016132f],cl
  40ac30:	dec    edx
  40ac31:	bound  eax,QWORD PTR [ebp+0x10]
  40ac34:	hlt    
  40ac35:	pop    ebx
  40ac36:	inc    esi
  40ac37:	adc    al,0x34
  40ac39:	bound  eax,QWORD PTR [ebp+0x14]
  40ac3c:	mov    DWORD PTR [edi],edi
  40ac3e:	adc    BYTE PTR [eax],al
  40ac40:	stc    
  40ac41:	retf   0x8066
  40ac44:	sbb    al,BYTE PTR [ebx]
  40ac46:	add    BYTE PTR [esi+0x0],ah
  40ac49:	add    BYTE PTR [eax],al
  40ac4b:	sbb    DWORD PTR [edi],0x14
  40ac4e:	lea    ebx,[ebp+0x1b]
  40ac51:	lea    eax,[esi+0x52]
  40ac54:	xor    al,0x50
  40ac56:	inc    DWORD PTR [edi]
  40ac58:	sbb    al,al
  40ac5a:	push   0xffffffbe
  40ac5c:	cmp    al,0x89
  40ac5e:	add    edi,ebp
  40ac60:	ins    BYTE PTR es:[edi],dx
  40ac61:	adc    BYTE PTR [ebx-0xa9f2fc],al
  40ac67:	pop    es
  40ac68:	inc    ecx
  40ac69:	sub    al,0x6a
  40ac6b:	fimul  DWORD PTR [ecx-0x1a9ae93b]
  40ac71:	adc    esi,DWORD PTR [esp+edx*4]
  40ac74:	dec    edx
  40ac75:	add    BYTE PTR [ebx+0x5e5f26d6],al
  40ac7b:	das    
  40ac7c:	push   edx
  40ac7d:	ret    
  40ac7e:	push   ebp
  40ac7f:	and    DWORD PTR [esi-0x766dba77],esi
  40ac85:	jmp    0x826a:0x574cc90c
  40ac8c:	pop    edi
  40ac8d:	je     0x40ac8b
  40ac8f:	sar    DWORD PTR [edx+0xa885b80],1
  40ac95:	xor    edi,edi
  40ac97:	popa   
  40ac98:	popf   
  40ac99:	jae    0x40acfe
  40ac9b:	push   ebx
  40ac9c:	outs   dx,DWORD PTR ds:[esi]
  40ac9d:	cld    
  40ac9e:	jle    0x40ac51
  40aca0:	popa   
  40aca1:	inc    esp
  40aca2:	or     bl,dh
  40aca4:	or     edi,edi
  40aca6:	mov    esi,es
  40aca8:	ja     0x40acf3
  40acaa:	call   0x42d589
  40acaf:	add    BYTE PTR [eax],al
  40acb1:	add    al,bh
  40acb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb4:	outs   dx,DWORD PTR ds:[esi]
  40acb5:	dec    esp
  40acb6:	push   0xfa69fc2b
  40acbb:	cmp    dh,BYTE PTR [eax+0x8]
  40acbe:	enter  0x4e37,0x5b
  40acc2:	icebp  
  40acc3:	out    dx,eax
  40acc4:	sub    edi,eax
  40acc6:	sahf   
  40acc7:	stc    
  40acc8:	jp     0x40ad0e
  40acca:	psllw  mm7,QWORD PTR [ebp+0x7a31d898]
  40acd1:	xlat   BYTE PTR ds:[ebx]
  40acd2:	and    cl,BYTE PTR [ecx+0x7a]
  40acd5:	repnz in al,0x84
  40acd8:	outs   dx,DWORD PTR ds:[esi]
  40acd9:	clc    
  40acda:	lock xchg edx,eax
  40acdc:	cli    
  40acdd:	mov    WORD PTR ds:0x66ff52f2,gs
  40ace3:	in     al,dx
  40ace4:	in     eax,0x14
  40ace6:	sbb    ebx,esi
  40ace8:	inc    edx
  40ace9:	add    BYTE PTR [edx],ch
  40aceb:	xchg   edi,eax
  40acec:	jg     0x40acad
  40acee:	aas    
  40acef:	out    0x64,eax
  40acf1:	add    eax,0xeb03886e
  40acf6:	lock dec ax
  40acf9:	cld    
  40acfa:	jmp    0xeb39:0xba7ee76a
  40ad01:	push   edi
  40ad02:	cmp    al,0x1e
  40ad04:	dec    ecx
  40ad05:	leave  
  40ad06:	mov    cl,0xe7
  40ad08:	add    cl,BYTE PTR [edi]
  40ad0a:	inc    ebp
  40ad0b:	in     eax,0xf3
  40ad0d:	mov    ch,0x35
  40ad0f:	out    dx,eax
  40ad10:	rcr    edi,0xeb
  40ad13:	lock shr edx,0x0
  40ad17:	add    BYTE PTR [eax],al
  40ad19:	mov    BYTE PTR [ebp-0x1108dbc1],bl
  40ad1f:	dec    esp
  40ad20:	mov    esp,DWORD PTR [edx+0x6]
  40ad23:	scas   al,BYTE PTR es:[edi]
  40ad24:	(bad)  
  40ad25:	js     0x40ad73
  40ad27:	sub    DWORD PTR [edi+ebx*8],eax
  40ad2a:	add    al,0x3f
  40ad2c:	fcom   QWORD PTR [eax]
  40ad2e:	psubsw mm0,QWORD PTR [ebx]
  40ad31:	js     0x40acf7
  40ad33:	es ret 0x6f0
  40ad37:	push   ss
  40ad38:	ja     0x40ace8
  40ad3a:	add    bl,BYTE PTR [ecx]
  40ad3c:	in     eax,0x7
  40ad3e:	repz fld DWORD PTR [ebx-0xd]
  40ad42:	xchg   ecx,eax
  40ad43:	pusha  
  40ad44:	jg     0x40ad63
  40ad46:	push   ebx
  40ad47:	in     eax,dx
  40ad48:	jle    0x40ad68
  40ad4a:	push   edx
  40ad4b:	loope  0x40adc5
  40ad4d:	div    BYTE PTR [eax-0x18]
  40ad50:	js     0x40ad88
  40ad52:	fstp   st(0)
  40ad54:	js     0x40ad8b
  40ad56:	cmp    eax,0xc933312a
  40ad5b:	fwait
  40ad5c:	js     0x40ad36
  40ad5e:	mov    BYTE PTR [esp+ebp*8+0x71],al
  40ad62:	jmp    0x40acf0
  40ad64:	push   eax
  40ad65:	push   0xe7411dc1
  40ad6a:	xchg   BYTE PTR [ecx-0x56700c05],dl
  40ad70:	neg    DWORD PTR [esi]
  40ad72:	xor    al,0x72
  40ad74:	repz inc edi
  40ad76:	or     ch,BYTE PTR [edx-0x14]
  40ad79:	push   eax
  40ad7a:	push   ebp
  40ad7b:	loope  0x40add6
  40ad7d:	add    BYTE PTR [eax],al
  40ad7f:	add    cl,dh
  40ad81:	ds add ah,ah
  40ad84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad85:	fsub   st(0),st
  40ad87:	pop    ecx
  40ad88:	out    dx,eax
  40ad89:	mov    DWORD PTR [eax+eiz*1-0x2d],ebx
  40ad8d:	sar    DWORD PTR ds:[edx+0x4de9062e],0x78
  40ad95:	les    ebx,FWORD PTR [eax]
  40ad97:	pop    edx
  40ad98:	xor    DWORD PTR [esp+ebp*2],edi
  40ad9b:	outs   dx,DWORD PTR ds:[esi]
  40ad9c:	iret   
  40ad9d:	push   ss
  40ad9e:	add    cl,al
  40ada0:	xor    eax,0xb9e90051
  40ada5:	cmp    eax,0xed7a985
  40adaa:	xor    ebp,DWORD PTR [ecx-0x164a1250]
  40adb0:	lock push es
  40adb2:	xor    ecx,DWORD PTR [esi+0x2d8d3407]
  40adb8:	adc    ebp,DWORD PTR [ebx]
  40adba:	push   eax
  40adbb:	mov    edx,0xcd438b46
  40adc0:	or     al,0x37
  40adc2:	mov    ebp,esi
  40adc4:	add    al,0x2f
  40adc6:	mov    ebp,ebx
  40adc8:	cld    
  40adc9:	sub    cl,BYTE PTR [ecx-0x17e90b2b]
  40adcf:	cmc    
  40add0:	push   ebp
  40add1:	fdiv   st(6),st
  40add3:	xor    BYTE PTR gs:[ebx+0xbeb0d43],cl
  40adda:	test   BYTE PTR [ebx-0x10],ch
  40addd:	push   es
  40adde:	add    BYTE PTR [esi],dh
  40ade0:	and    esi,DWORD PTR [edi]
  40ade2:	lea    esp,[ebp+0x4000000]
  40ade8:	sti    
  40ade9:	out    0x8a,eax
  40adeb:	mov    ebx,ebx
  40aded:	(bad)  
  40adee:	gs mov al,0x57
  40adf1:	outs   dx,BYTE PTR ds:[esi]
  40adf2:	push   ss
  40adf3:	pop    esp
  40adf4:	and    edx,DWORD PTR [edx+eiz*2]
  40adf7:	add    al,0x23
  40adf9:	sbb    al,0x11
  40adfb:	pop    ss
  40adfc:	(bad)  
  40adfd:	(bad)  
  40adfe:	call   0xd164f0dc
  40ae03:	fcmovnb st,st(4)
  40ae05:	jge    0x40ada0
  40ae07:	sub    ecx,DWORD PTR [eax+0x24]
  40ae0a:	add    DWORD PTR ds:0xd6bb332a,ecx
  40ae10:	shl    eax,cl
  40ae12:	adc    cl,BYTE PTR [ecx+0x52]
  40ae15:	inc    ecx
  40ae16:	pusha  
  40ae17:	sub    esp,DWORD PTR [ebx]
  40ae19:	adc    BYTE PTR [eax],al
  40ae1b:	icebp  
  40ae1c:	shl    BYTE PTR [esp+ebx*1+0x1],1
  40ae20:	addr16 and al,0x14
  40ae23:	shl    DWORD PTR [edx-0x10b18c03],1
  40ae29:	(bad)  
  40ae2a:	ss dec edx
  40ae2c:	pop    es
  40ae2d:	test   al,al
  40ae2f:	dec    BYTE PTR [esi]
  40ae31:	inc    DWORD PTR [esi+edi*1-0x29]
  40ae35:	add    edi,0xea753587
  40ae3b:	jne    0x40ae7b
  40ae3d:	and    al,0x14
  40ae3f:	(bad)  
  40ae40:	fld    DWORD PTR ds:0x42761a00
  40ae46:	and    al,0x36
  40ae48:	out    dx,eax
  40ae49:	gs mov ecx,0xa000000
  40ae4f:	pop    es
  40ae50:	xor    eax,eax
  40ae52:	sar    DWORD PTR [esi],cl
  40ae54:	and    al,0x10
  40ae56:	adc    eax,0xfeebbf53
  40ae5b:	out    0x72,eax
  40ae5d:	and    al,0x1e
  40ae5f:	out    dx,eax
  40ae60:	cli    
  40ae61:	push   es
  40ae62:	or     al,BYTE PTR [edi]
  40ae64:	lea    eax,[esi+edi*8+0x6]
  40ae68:	call   0x4411b7
  40ae6d:	mov    ecx,DWORD PTR ds:0x615b5e46
  40ae73:	lock pop ebx
  40ae75:	ret    
  40ae76:	(bad)
  40ae7a:	(bad)  
  40ae7b:	sbb    al,BYTE PTR [esi]
  40ae7d:	add    dl,cl
  40ae7f:	adc    DWORD PTR [ebx],esi
  40ae81:	fistp  DWORD PTR [ebp+ebx*1-0x77]
  40ae85:	pop    ebp
  40ae86:	cli    
  40ae87:	mov    ebx,DWORD PTR [ebx-0x1c]
  40ae8a:	adc    ecx,DWORD PTR [eax-0x10]
  40ae8d:	mov    DWORD PTR [edi],esi
  40ae8f:	mov    edi,0x8b4e5d87
  40ae94:	pop    ebx
  40ae95:	enter  0x66f3,0x40
  40ae99:	aam    0xc8
  40ae9b:	lods   al,BYTE PTR ds:[esi]
  40ae9c:	push   esi
  40ae9d:	dec    esi
  40ae9e:	in     al,dx
  40ae9f:	push   ecx
  40aea0:	js     0x40aea1
  40aea2:	je     0x40ae94
  40aea4:	test   edi,esi
  40aea6:	icebp  
  40aea7:	adc    edx,edi
  40aea9:	sub    BYTE PTR [ebx-0x13],0x11
  40aead:	test   DWORD PTR [eax+esi*8+0x2],esi
  40aeb1:	add    BYTE PTR [eax],al
  40aeb3:	add    BYTE PTR [eax],al
  40aeb5:	push   esp
  40aeb6:	repz jge 0x172b2e73
  40aebd:	(bad)  
  40aebe:	out    dx,eax
  40aebf:	add    ch,bl
  40aec1:	mov    ecx,0x68085054
  40aec6:	pop    ss
  40aec7:	or     BYTE PTR [ebx+0x4647a],cl
  40aecd:	rep ins BYTE PTR es:[edi],dx
  40aecf:	fild   DWORD PTR [ecx]
  40aed1:	in     al,dx
  40aed2:	pop    ebx
  40aed3:	ret    
  40aed4:	xchg   DWORD PTR [esi+0x5f448f73],ebp
  40aeda:	mov    al,ds:0x9f03548f
  40aedf:	mov    ecx,DWORD PTR [edi+ecx*2+0x57]
  40aee3:	cmp    BYTE PTR [eax-0x18658496],dh
  40aee9:	not    ecx
  40aeeb:	add    al,0x0
  40aeed:	fdivr  DWORD PTR [edx-0x71]
  40aef0:	mov    esp,0xfee2268b
  40aef5:	retf   
  40aef6:	cmp    edi,ecx
  40aef8:	dec    esp
  40aefa:	bound  esp,QWORD PTR [eax-0x1df73529]
  40af00:	(bad)  
  40af01:	ss clc 
  40af03:	idiv   bh
  40af05:	mov    ah,0xef
  40af07:	(bad)  
  40af08:	mov    ah,0x1f
  40af0a:	shl    eax,1
  40af0c:	(bad)  
  40af0d:	fwait
  40af0e:	ds sbb al,0x0
  40af11:	repz push es
  40af13:	push   ebx
  40af14:	add    ebp,DWORD PTR [eax-0x40]
  40af17:	imul   ecx,DWORD PTR [edi+0x0],0x0
  40af1b:	add    BYTE PTR [ebx-0xce89f12],al
  40af21:	push   es
  40af22:	push   0xffffffc9
  40af24:	iret   
  40af25:	fnstenv [ebx]
  40af27:	in     al,dx
  40af28:	jmp    edi
  40af2a:	push   eax
  40af2b:	mov    edi,?
  40af2d:	push   es
  40af2e:	jmp    0xafef1ec1
  40af33:	loope  0x40af92
  40af35:	xor    eax,0x12ffe139
  40af3a:	test   DWORD PTR [ebx-0xd],0xd910ac85
  40af41:	pop    es
  40af42:	pop    esp
  40af43:	inc    edi
  40af44:	inc    ebx
  40af45:	ss jb  0x40af8f
  40af48:	jmp    0x40aed7
  40af4a:	and    BYTE PTR [eax],cl
  40af4c:	sbb    ecx,DWORD PTR [eax+0x2d]
  40af4f:	add    esi,ebx
  40af51:	adc    eax,0xd2a61b77
  40af56:	(bad)  
  40af58:	mov    esi,0xf309f2ee
  40af5d:	push   es
  40af5e:	push   esi
  40af5f:	push   edi
  40af60:	add    ebp,esi
  40af62:	jmp    0xf8eb:0x9f06f309
  40af69:	add    ch,cl
  40af6b:	add    esp,DWORD PTR [ecx]
  40af6d:	(bad)  
  40af6e:	aas    
  40af6f:	mov    ecx,0x8ae906f2
  40af74:	addr16 mov ebx,0xefc7576f
  40af7a:	xor    BYTE PTR [ebx+esi*8],bl
  40af7d:	push   es
  40af7e:	pusha  
  40af7f:	inc    edi
  40af80:	add    BYTE PTR [eax],al
  40af82:	add    BYTE PTR [edi-0xc18747c],al
  40af88:	shr    BYTE PTR [ebx-0x1ba44b20],0x8c
  40af8f:	aaa    
  40af90:	sar    edi,cl
  40af92:	add    esi,ebp
  40af94:	ins    BYTE PTR es:[edi],dx
  40af95:	push   es
  40af96:	xchg   ecx,eax
  40af97:	imul   eax,DWORD PTR [ebx-0x30],0x38ef3d70
  40af9e:	push   esp
  40af9f:	stos   DWORD PTR es:[edi],eax
  40afa0:	or     DWORD PTR [esi+0x6ed28],ecx
  40afa6:	bound  edi,QWORD PTR [ebp+0x7ca26aea]
  40afac:	(bad)  
  40afad:	pop    esp
  40afae:	mov    eax,ds:0xf0cc5379
  40afb3:	mov    ebp,0xc5f0eb6
  40afb8:	add    eax,0x4367e900
  40afbd:	or     BYTE PTR [edx-0x50],dh
  40afc0:	add    ch,al
  40afc2:	ret    0x5ad
  40afc5:	add    BYTE PTR [ebp+0x30],ah
  40afc8:	or     DWORD PTR [eax+eiz*8+0x720006ee],eax
  40afcf:	int    0xca
  40afd1:	add    dh,ah
  40afd3:	inc    eax
  40afd4:	(bad)  
  40afd5:	je     0x40b048
  40afd7:	imul   ebx,DWORD PTR [ebx-0x5c],0x75eabc20
  40afde:	push   es
  40afdf:	jle    0x40b034
  40afe1:	fadd   st(3),st
  40afe3:	cld    
  40afe4:	mov    al,BYTE PTR [esi-0x1f]
  40afe7:	add    BYTE PTR [eax],al
  40afe9:	add    BYTE PTR [edx-0x2b2300ca],bh
  40afef:	lock aas 
  40aff1:	jmp    0x6c4c736d
  40aff6:	mov    al,0x53
  40aff8:	push   cs
  40aff9:	cs xor eax,0xb8ac8adf
  40afff:	test   ch,al
  40b001:	cmc    
  40b002:	out    dx,eax
  40b003:	inc    ecx
  40b004:	in     al,dx
  40b005:	fwait
  40b006:	mov    dl,0x14
  40b008:	mul    BYTE PTR [edx+0x35]
  40b00b:	jmp    0x40b045
  40b00d:	add    BYTE PTR [edi-0x277af245],al
  40b013:	add    al,0x0
  40b015:	add    BYTE PTR [edi+0x5d],bl
  40b018:	(bad)  
  40b019:	dec    DWORD PTR [edx-0x74357d0a]
  40b01f:	add    eax,DWORD PTR [eax]
  40b021:	(bad)  
  40b022:	rcr    esi,0x8b
  40b025:	jne    0x40b065
  40b027:	jmp    0xc084:0x38a0480
  40b02e:	mov    dh,0xd8
  40b030:	push   0x83fdf14
  40b035:	push   eax
  40b036:	ror    DWORD PTR [ebp-0x24],1
  40b039:	add    ecx,DWORD PTR [ecx+0x3a15ff12]
  40b03f:	sar    DWORD PTR [esi],1
  40b041:	add    cl,bl
  40b043:	into   
  40b044:	or     bh,bh
  40b046:	pop    ss
  40b047:	xlat   BYTE PTR ds:[ebx]
  40b048:	add    ebx,0xd85b8a46
  40b04e:	add    BYTE PTR [eax],al
  40b050:	add    BYTE PTR [edi-0x60acf7e9],bh
  40b056:	cmp    eax,0xaaff89e0
  40b05b:	out    0x74,al
  40b05d:	add    eax,DWORD PTR fs:[eax]
  40b060:	test   edx,ecx
  40b062:	pop    es
  40b063:	mov    DWORD PTR [esi+0x1b],ebp
  40b066:	add    eax,DWORD PTR [eax]
  40b068:	push   ebx
  40b069:	mov    dl,0x1f
  40b06b:	cmp    BYTE PTR [eax],al
  40b06d:	or     bh,BYTE PTR [edi-0x42]
  40b070:	ja     0xda40b1d8
  40b076:	add    ebp,0xe1e30c8b
  40b07c:	xor    cl,dl
  40b07e:	or     al,BYTE PTR [eax+eax*8+0x14d7fdd]
  40b085:	fimul  DWORD PTR [edx]
  40b087:	or     DWORD PTR [ebp-0xd],0x1f
  40b08b:	fild   WORD PTR [edx+0x7c120c3e]
  40b091:	fimul  WORD PTR [ecx+ebx*2]
  40b094:	mov    esp,0xdeec2178
  40b099:	(bad)  
  40b09b:	add    cl,BYTE PTR [ecx-0x4076dfca]
  40b0a1:	in     al,0x57
  40b0a3:	adc    eax,DWORD PTR [ecx]
  40b0a5:	repz fisttp WORD PTR [ecx+0x4368fb44]
  40b0ac:	add    al,0x68
  40b0ae:	jo     0x40b032
  40b0b0:	add    bl,dh
  40b0b2:	(bad)  
  40b0b4:	dec    esp
  40b0b5:	add    BYTE PTR [eax],al
  40b0b7:	add    BYTE PTR [ebx+0x3a],al
  40b0ba:	clc    
  40b0bb:	mov    WORD PTR [esi+0x5c503267],gs
  40b0c1:	mov    ebx,0xdfb31612
  40b0c6:	add    ebx,0x6a04f9ff
  40b0cc:	sti    
  40b0cd:	push   0x48
  40b0cf:	pushf  
  40b0d0:	mov    ds:0xf2aca687,eax
  40b0d5:	fild   QWORD PTR [eax+0x1]
  40b0d8:	cdq    
  40b0d9:	mov    bl,0x8f
  40b0db:	inc    esp
  40b0dc:	jnp    0x40b0ce
  40b0de:	imul   eax,DWORD PTR [eax],0x268df89
  40b0e4:	push   0xa903eb25
  40b0e9:	loope  0x40b0ed
  40b0eb:	mov    ebp,DWORD PTR [ebx]
  40b0ed:	arpl   WORD PTR [edx+0x34b770e],di
  40b0f3:	add    bl,dh
  40b0f5:	mov    bh,0x7a
  40b0f7:	cmp    ebx,esi
  40b0f9:	(bad)  
  40b0fb:	xor    eax,0x142c1db
  40b100:	repz dec ax
  40b103:	clc    
  40b104:	jo     0x40b10c
  40b106:	and    DWORD PTR [esi+ecx*2],eax
  40b109:	add    esi,DWORD PTR [edx-0x2e]
  40b10c:	int3   
  40b10d:	aas    
  40b10e:	adc    eax,0xa381bdde
  40b113:	fcmovne st,st(1)
  40b115:	imul   esi,DWORD PTR [edx+0x4a],0xf3a78223
  40b11c:	add    BYTE PTR [eax],al
  40b11e:	add    BYTE PTR [edi-0x3a],ch
  40b121:	jnp    0x40b12a
  40b123:	loopne 0x40b101
  40b125:	add    DWORD PTR [edx],eax
  40b127:	push   si
  40b129:	adc    eax,0xeb2660ec
  40b12e:	add    esi,esp
  40b130:	popf   
  40b131:	test   al,0x87
  40b133:	xchg   BYTE PTR [edx+0xd],bl
  40b136:	push   0xffffffc6
  40b138:	sbb    DWORD PTR [ebx+0x63d7643b],ebx
  40b13e:	mov    dl,0xdf
  40b140:	pop    ss
  40b141:	out    0x94,al
  40b143:	pushf  
  40b144:	sbb    DWORD PTR [eax+0x19bf1866],esp
  40b14a:	and    eax,0x476fd478
  40b14f:	dec    ebx
  40b150:	sbb    DWORD PTR [ebx+0x18],0x3c
  40b154:	aad    0x8d
  40b156:	in     al,dx
  40b157:	xchg   ebp,eax
  40b158:	sbb    eax,0x79903e9
  40b15d:	jb     0x40b125
  40b15f:	ja     0x40b1a4
  40b161:	lods   eax,DWORD PTR ds:[esi]
  40b162:	in     al,dx
  40b163:	(bad)  
  40b164:	sbb    ecx,ebp
  40b166:	add    esi,DWORD PTR [eax-0x33]
  40b169:	adc    ebx,ebp
  40b16b:	mov    edi,0x79e2d3ce
  40b170:	push   ebx
  40b171:	lea    ecx,[ecx-0x26bb21ff]
  40b177:	cmc    
  40b178:	aam    0xf9
  40b17a:	ret    
  40b17b:	sub    al,0x18
  40b17d:	aaa    
  40b17e:	inc    esi
  40b17f:	sub    ch,cl
  40b181:	push   DWORD PTR [eax+eax*1-0x7fe50000]
  40b188:	inc    esp
  40b189:	loope  0x40b1f6
  40b18b:	dec    esp
  40b18c:	add    al,0x72
  40b18e:	js     0x40b1e4
  40b190:	add    ecx,ebp
  40b192:	lock cmp al,0x57
  40b195:	bound  esi,QWORD PTR [ebp-0xd45b414]
  40b19b:	push   es
  40b19c:	mov    esi,DWORD PTR [eax+esi*4-0x479b397f]
  40b1a3:	dec    edi
  40b1a4:	or     ebx,DWORD PTR [edi+0x1e0436d]
  40b1aa:	mov    ds:0x9be90019,al
  40b1af:	or     al,0x8d
  40b1b1:	cmp    al,0x8f
  40b1b3:	in     al,dx
  40b1b4:	jle    0x40b1d0
  40b1b6:	test   DWORD PTR [esi],0x2d1ca984
  40b1bc:	mov    edi,DWORD PTR [ebx+eax*1]
  40b1bf:	int    0x44
  40b1c1:	mov    esi,0x3df589f1
  40b1c6:	add    edx,esp
  40b1c8:	je     0x40b14b
  40b1ca:	dec    eax
  40b1cb:	div    DWORD PTR [ecx+ebp*8]
  40b1ce:	lock mov DWORD PTR [edi+0x4c81f620],edi
  40b1d5:	mov    DWORD PTR [eax-0x6a],ecx
  40b1d8:	das    
  40b1d9:	jmp    0xf5a539ce
  40b1de:	lock rol DWORD PTR [ebp+edx*4+0x7b],cl
  40b1e3:	xor    ebx,eax
  40b1e5:	mov    edx,0x8144d546
  40b1ea:	add    BYTE PTR [eax],al
  40b1ec:	add    BYTE PTR [ebx+0x4b],ch
  40b1ef:	call   0x3803675e
  40b1f4:	and    ch,BYTE PTR [edx+ebx*8-0x2cd49af2]
  40b1fb:	dec    BYTE PTR [esi+0x17]
  40b1fe:	pop    ebx
  40b1ff:	lock add BYTE PTR [edx+0x35],al
  40b203:	add    eax,DWORD PTR [eax]
  40b205:	fidivr DWORD PTR [esi+0x53]
  40b208:	mov    esp,0x8bc84d51
  40b20d:	ja     0x40b1da
  40b20f:	xchg   DWORD PTR [ebp+0x2e],edx
  40b212:	test   DWORD PTR [ebx-0x4c],edx
  40b215:	mov    BYTE PTR [edi-0x48],bl
  40b218:	int    0x8a
  40b21a:	pop    es
  40b21b:	push   0x38
  40b21d:	jp     0x40b237
  40b21f:	mov    DWORD PTR [ebp-0x56],ecx
  40b222:	jge    0x40b267
  40b224:	hlt    
  40b225:	and    edi,DWORD PTR ds:0xc01f89c4
  40b22b:	les    eax,FWORD PTR [ebp-0x1e]
  40b22e:	or     al,ch
  40b230:	cmc    
  40b231:	ss or  eax,0xd64e8300
  40b237:	jle    0x40b2b6
  40b239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b23a:	or     DWORD PTR [edi],ecx
  40b23c:	test   cl,al
  40b23e:	lods   eax,DWORD PTR ds:[esi]
  40b23f:	std    
  40b240:	push   DWORD PTR ds:0xf0e8dc35
  40b246:	or     eax,DWORD PTR [eax]
  40b248:	add    ah,bh
  40b24a:	loop   0x40b27e
  40b24c:	add    ecx,DWORD PTR [edx+0x7]
  40b24f:	push   DWORD PTR [ebp+0x0]
  40b252:	add    BYTE PTR [eax],al
  40b254:	push   0xffffffe2
  40b256:	sub    al,BYTE PTR [ebx]
  40b258:	pop    edx
  40b259:	pop    es
  40b25a:	push   DWORD PTR [ebp+0x6a]
  40b25d:	loop   0x40b281
  40b25f:	add    ecx,DWORD PTR [edx+0x7]
  40b262:	cmp    DWORD PTR [ebp-0x72],esi
  40b265:	call   FWORD PTR [esi+0x5b1105c0]
  40b26b:	leave  
  40b26c:	dec    eax
  40b26d:	add    al,BYTE PTR [eax]
  40b26f:	push   ebp
  40b270:	xchg   ecx,eax
  40b271:	fiadd  WORD PTR [ecx-0x15746d1c]
  40b277:	sbb    BYTE PTR [ecx+0x16],cl
  40b27a:	push   esi
  40b27b:	push   edi
  40b27c:	repz push 0xb1defedd
  40b282:	cmc    
  40b283:	aas    
  40b284:	repz push esi
  40b286:	inc    eax
  40b287:	and    al,0x7
  40b289:	push   ebp
  40b28a:	inc    ebx
  40b28b:	add    al,0x98
  40b28d:	xor    BYTE PTR ds:0xc5dcf300,al
  40b293:	dec    edi
  40b294:	int3   
  40b295:	shl    esi,cl
  40b297:	adc    DWORD PTR [ebx],esi
  40b299:	loopne 0x40b285
  40b29b:	xchg   esp,eax
  40b29c:	or     al,0xe0
  40b29e:	add    cl,BYTE PTR [ebx+0x3ae7adc3]
  40b2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2a5:	push   ebx
  40b2a6:	xor    al,0x55
  40b2a8:	cmp    al,0x8d
  40b2aa:	ret    0x8ee7
  40b2ad:	aad    0xd9
  40b2af:	(bad)  
  40b2b0:	outs   dx,DWORD PTR ds:[esi]
  40b2b1:	and    BYTE PTR [ecx+0x27],dl
  40b2b4:	es in  eax,dx
  40b2b6:	ret    
  40b2b7:	push   esi
  40b2b8:	add    BYTE PTR [eax],al
  40b2ba:	add    BYTE PTR [ebx],dh
  40b2bc:	mov    eax,0xb97cfab9
  40b2c1:	jle    0x40b282
  40b2c3:	(bad)  
  40b2c4:	(bad)  
  40b2c5:	lea    eax,[esi-0x9]
  40b2c8:	push   esp
  40b2c9:	or     DWORD PTR [ebx+0x6802dff2],0x33
  40b2d0:	add    DWORD PTR ds:0xefa0c300,ecx
  40b2d6:	pavgb  mm3,QWORD PTR [edi]
  40b2d9:	add    al,0x85
  40b2db:	xor    edi,esp
  40b2dd:	lock (bad) 
  40b2df:	out    0xeb,al
  40b2e1:	cmc    
  40b2e2:	aas    
  40b2e3:	repz data16 aas 
  40b2e6:	and    al,0xf
  40b2e8:	js     0x40b336
  40b2ea:	das    
  40b2eb:	repz fisttp WORD PTR [ebp+0x4f52d8ef]
  40b2f2:	mov    bh,0xd8
  40b2f4:	pop    edx
  40b2f5:	or     al,BYTE PTR [esi+ebp*2-0xcfc17f9]
  40b2fc:	jge    0x40b324
  40b2fe:	jmp    0x40b33d
  40b300:	pop    ss
  40b301:	jmp    0x58c1909
  40b306:	and    BYTE PTR [ebx-0x37],al
  40b309:	lods   al,BYTE PTR ds:[esi]
  40b30a:	pop    ds
  40b30b:	or     BYTE PTR [edi],al
  40b30d:	jo     0x40b376
  40b30f:	pop    ss
  40b310:	sub    eax,DWORD PTR [ecx-0x1a]
  40b313:	test   BYTE PTR [esi],al
  40b315:	jmp    0xfb9b6938
  40b31a:	xor    ebx,ebx
  40b31c:	pop    ebp
  40b31d:	jmp    0x40b322
  40b31f:	add    BYTE PTR [eax],al
  40b321:	add    bl,dh
  40b323:	test   DWORD PTR [edi+ebx*1+0x75de0b0f],edx
  40b32a:	ins    BYTE PTR es:[edi],dx
  40b32b:	mov    ch,BYTE PTR [eax]
  40b32d:	dec    edi
  40b32e:	sti    
  40b32f:	leave  
  40b330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b331:	pop    ds
  40b332:	rol    DWORD PTR [edi],cl
  40b334:	jmp    0x7f50a63c
  40b339:	(bad)  
  40b33a:	std    
  40b33b:	adc    BYTE PTR [edi+0x7006f304],0x68
  40b342:	xlat   BYTE PTR ds:[ebx]
  40b343:	out    dx,al
  40b344:	popa   
  40b345:	inc    ecx
  40b346:	out    dx,eax
  40b347:	fisub  WORD PTR [ebp+0x6d06f243]
  40b34d:	(bad)  
  40b34e:	cmc    
  40b34f:	mov    bl,BYTE PTR [ebx+0x4]
  40b352:	repz push es
  40b354:	(bad)  
  40b355:	cli    
  40b356:	icebp  
  40b357:	xor    al,BYTE PTR ds:0xf1457ffc
  40b35d:	xor    ebx,DWORD PTR [ebx+0x43]
  40b360:	aam    0x3
  40b362:	repz mov ch,BYTE PTR [eax+0x247ecc4f]
  40b369:	and    BYTE PTR ds:0xfd200487,al
  40b36f:	push   es
  40b370:	idiv   edx
  40b372:	imul   ecx,DWORD PTR [ecx+0x0],0x8c5167ed
  40b379:	call   0x71a8ba6e
  40b37e:	(bad)  
  40b37f:	sar    dh,1
  40b381:	mov    ecx,0xfa0ffa1b
  40b386:	add    BYTE PTR [eax],al
  40b388:	add    BYTE PTR [eax+0x43298506],dh
  40b38e:	adc    ecx,DWORD PTR [ebx-0x78821b52]
  40b394:	imul   esi,eax,0x33620006
  40b39a:	sub    esp,DWORD PTR [eax]
  40b39c:	ret    
  40b39d:	icebp  
  40b39e:	xor    ebp,eax
  40b3a0:	mov    esi,0x64000501
  40b3a5:	mov    bh,0x4f
  40b3a7:	push   ss
  40b3a8:	add    DWORD PTR ds:0x2ce90210,edi
  40b3ae:	nop
  40b3af:	jae    0x40b394
  40b3b1:	retf   0x2444
  40b3b4:	xlat   BYTE PTR ds:[ebx]
  40b3b5:	jo     0x40b403
  40b3b7:	and    al,0xdf
  40b3b9:	xchg   ebp,eax
  40b3ba:	push   esi
  40b3bb:	mov    bl,0x2
  40b3bd:	hlt    
  40b3be:	fdivrp st(7),st
  40b3c0:	add    al,0xef
  40b3c2:	push   es
  40b3c3:	mov    DWORD PTR [edx],ebp
  40b3c5:	repz enter 0xd43,0x82
  40b3ca:	pop    es
  40b3cb:	or     BYTE PTR [ebp+0x13],0xf9
  40b3cf:	add    al,0x3c
  40b3d1:	arpl   WORD PTR [ebp-0x3c],di
  40b3d4:	jb     0x40b400
  40b3d6:	call   0x731af60
  40b3db:	dec    ebp
  40b3dc:	push   0xffffffd4
  40b3de:	sub    bl,BYTE PTR [eax]
  40b3e0:	loope  0x40b414
  40b3e2:	inc    esp
  40b3e3:	and    al,0xf6
  40b3e5:	icebp  
  40b3e6:	add    DWORD PTR [ebx-0x33],0x38
  40b3ea:	sbb    BYTE PTR [ebp-0x2e],al
  40b3ed:	add    BYTE PTR [eax],al
  40b3ef:	add    BYTE PTR [edx-0x61fff0f6],bl
  40b3f5:	sbb    bh,bh
  40b3f7:	call   FWORD PTR [ebp-0xffba27e]
  40b3fd:	or     BYTE PTR [esi-0x18],dl
  40b400:	push   ebx
  40b401:	out    dx,eax
  40b402:	add    BYTE PTR [eax],al
  40b404:	xchg   esi,eax
  40b405:	ret    
  40b406:	jb     0x40b40d
  40b408:	aam    0xf
  40b40a:	and    al,0x17
  40b40c:	or     edi,ebx
  40b40e:	fidivr DWORD PTR [eax]
  40b410:	sahf   
  40b411:	out    dx,eax
  40b412:	push   ss
  40b413:	je     0x40b3ea
  40b415:	or     ah,0xe8
  40b418:	bound  ebx,QWORD PTR [esi]
  40b41a:	add    BYTE PTR [eax],al
  40b41c:	push   ecx
  40b41d:	inc    esi
  40b41e:	add    al,0x83
  40b420:	add    bh,dl
  40b422:	jl     0x40b45f
  40b424:	pop    ecx
  40b425:	lods   al,BYTE PTR ds:[esi]
  40b426:	pop    ss
  40b427:	jge    0x40b3b3
  40b429:	scas   al,BYTE PTR es:[edi]
  40b42a:	adc    ecx,DWORD PTR [ecx+edi*4]
  40b42d:	inc    ebx
  40b42e:	add    BYTE PTR [ebx],ch
  40b430:	push   esi
  40b431:	out    dx,eax
  40b432:	sbb    edi,DWORD PTR ds:0xa2c31a
  40b438:	and    al,0x1f
  40b43a:	push   esi
  40b43b:	push   edi
  40b43c:	jo     0x40b448
  40b43e:	pop    eax
  40b43f:	call   0x3e65b6
  40b444:	push   ss
  40b445:	retf   
  40b446:	jae    0x40b45f
  40b448:	mov    ecx,0xb2c0331f
  40b44d:	or     edi,edx
  40b44f:	(bad)  
  40b450:	cmp    eax,0x75be86
  40b455:	add    BYTE PTR [eax],al
  40b457:	pusha  
  40b458:	adc    al,0x57
  40b45a:	push   0x48
  40b45c:	or     ebp,eax
  40b45e:	dec    ebp
  40b45f:	mov    al,ds:0x27fffdb7
  40b464:	pop    es
  40b465:	adc    eax,DWORD PTR [eax+0x5a]
  40b468:	add    BYTE PTR [edx+0x24],0x3e
  40b46c:	mov    eax,0xbff3e834
  40b471:	add    eax,DWORD PTR [eax]
  40b473:	repz pop ss
  40b475:	in     al,dx
  40b476:	pop    ds
  40b477:	repnz fld QWORD PTR [edx]
  40b47a:	mov    esi,DWORD PTR [ecx+ebp*8-0x220d7001]
  40b481:	add    dl,BYTE PTR [eax+0xc]
  40b484:	mov    edx,0xddb311d2
  40b489:	mov    DWORD PTR [esi-0x9],eax
  40b48c:	push   esp
  40b48d:	test   BYTE PTR [ebx+0x6802ddf2],cl
  40b493:	xor    esi,DWORD PTR [ebp+0x4534fff9]
  40b499:	icebp  
  40b49a:	verr   WORD PTR [eax-0x1a4c7afe]
  40b4a1:	jg     0x40b498
  40b4a3:	into   
  40b4a4:	sbb    eax,0x58f7ead7
  40b4a9:	aas    
  40b4aa:	add    al,0xf0
  40b4ac:	and    BYTE PTR [edi+edi*8],dh
  40b4af:	fsubp  st(7),st
  40b4b1:	icebp  
  40b4b2:	aas    
  40b4b3:	repz pushf 
  40b4b5:	xor    al,0x5d
  40b4b7:	dec    eax
  40b4b8:	pop    ecx
  40b4b9:	loope  0x40b517
  40b4bb:	add    BYTE PTR [eax],al
  40b4bd:	add    BYTE PTR [eax-0x10dbc12a],dh
  40b4c3:	fisubr WORD PTR [ebx+ecx*4]
  40b4c6:	and    BYTE PTR ds:0x20786ffe,0x4
  40b4cd:	je     0x40b4c4
  40b4cf:	adc    eax,0xdff3c7ec
  40b4d4:	add    cl,BYTE PTR [ebx+0x3c21e35]
  40b4da:	repz pop edx
  40b4dc:	int3   
  40b4dd:	je     0x40b4ce
  40b4df:	mov    WORD PTR [eax+ebp*8],cs
  40b4e2:	pushf  
  40b4e3:	loopne 0x40b4e7
  40b4e5:	add    BYTE PTR [eax+0x6],dh
  40b4e8:	add    al,0xeb
  40b4ea:	add    DWORD PTR [edi],eax
  40b4ec:	jb     0x40b4eb
  40b4ee:	jno    0x40b4b8
  40b4f0:	in     al,0x34
  40b4f2:	outs   dx,BYTE PTR ds:[esi]
  40b4f3:	(bad)  
  40b4f4:	sbb    esi,esp
  40b4f6:	call   0x29a2:0x13108dfe
  40b4fd:	add    al,0x1c
  40b4ff:	hlt    
  40b500:	in     al,0xf2
  40b502:	aam    0x6
  40b504:	add    BYTE PTR [esi],0xa3
  40b507:	pusha  
  40b508:	loope  0x40b4e0
  40b50a:	mov    edi,0xf34291e6
  40b50f:	int    0xf3
  40b511:	or     esp,eax
  40b513:	inc    esi
  40b514:	jmp    0xea946199
  40b519:	adc    DWORD PTR [ebx-0x73029037],esi
  40b51f:	pop    es
  40b520:	sub    al,BYTE PTR [edx+0x58000000]
  40b526:	and    ebp,ebp
  40b528:	add    eax,DWORD PTR [esi-0x5]
  40b52b:	sub    eax,0xe95ddb0d
  40b530:	add    esi,ebx
  40b532:	mov    esi,eax
  40b534:	add    ecx,eax
  40b536:	sbb    BYTE PTR [edx-0x3],ah
  40b539:	lods   eax,DWORD PTR ds:[esi]
  40b53a:	push   edx
  40b53b:	(bad)  
  40b53e:	(bad)  
  40b53f:	jnp    0x40b547
  40b541:	inc    ebx
  40b542:	into   
  40b543:	mov    bl,0xe3
  40b545:	dec    ecx
  40b546:	dec    ecx
  40b547:	jmp    0xda439d22
  40b54c:	inc    ebx
  40b54d:	repz loope 0x40b545
  40b550:	xor    ecx,DWORD PTR [ecx]
  40b552:	pop    es
  40b553:	fimul  WORD PTR [edi]
  40b555:	xchg   ebx,eax
  40b556:	mov    eax,ds:0xf36c0429
  40b55b:	loopne 0x40b54d
  40b55d:	and    al,0x7
  40b55f:	ins    BYTE PTR es:[edi],dx
  40b560:	(bad)  
  40b561:	out    0x2,eax
  40b563:	sti    
  40b564:	ret    
  40b565:	dec    ecx
  40b566:	add    al,BYTE PTR [eax]
  40b568:	pusha  
  40b569:	dec    ebp
  40b56a:	popf   
  40b56b:	add    BYTE PTR [ebx-0x567cf90d],ch
  40b571:	repz ss push 0xfffffff1
  40b575:	pop    ds
  40b576:	adc    ah,al
  40b578:	inc    edx
  40b579:	mov    dl,0x6
  40b57b:	push   esp
  40b57d:	and    al,0xf8
  40b57f:	aas    
  40b580:	jmp    0xc5bc3db8
  40b585:	adc    al,0xcd
  40b587:	jae    0x40b576
  40b589:	add    BYTE PTR [eax],al
  40b58b:	add    bl,ah
  40b58d:	(bad)  
  40b58e:	jmp    0x8aed:0x24591fdb
  40b595:	push   es
  40b596:	call   DWORD PTR [edi+ecx*1]
  40b599:	mov    al,ds:0xf3c7e942
  40b59e:	add    edi,edx
  40b5a0:	xor    BYTE PTR [edi],al
  40b5a2:	ret    0xf0ed
  40b5a5:	xchg   DWORD PTR [ebx+0x5],edi
  40b5a8:	repz push es
  40b5aa:	je     0x40b587
  40b5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ad:	pop    eax
  40b5ae:	and    al,0xe5
  40b5b0:	pop    edx
  40b5b1:	pop    es
  40b5b2:	(bad)  
  40b5b3:	(bad)  
  40b5b5:	mov    eax,ds:0xf39fe942
  40b5ba:	(bad)  
  40b5bb:	stc    
  40b5bc:	xor    BYTE PTR [edi],al
  40b5be:	ret    0xf0e5
  40b5c1:	xor    al,0x8b
  40b5c3:	stc    
  40b5c4:	sbb    eax,0x15d673cd
  40b5c9:	shl    BYTE PTR [ebx-0x26],cl
  40b5cc:	ss int3 
  40b5ce:	xor    esi,DWORD PTR [esi]
  40b5d0:	xchg   edi,eax
  40b5d1:	mov    esp,0x83a7e6fe
  40b5d6:	cmc    
  40b5d7:	push   esp
  40b5d8:	mov    ds:0x47afe835,al
  40b5dd:	int    0xfe
  40b5df:	das    
  40b5e0:	xor    dh,BYTE PTR [edx]
  40b5e2:	push   edi
  40b5e3:	add    bl,bh
  40b5e5:	jge    0x40b659
  40b5e7:	and    al,0x3e
  40b5e9:	jg     0x40b665
  40b5eb:	and    al,0x2a
  40b5ed:	jg     0x40b639
  40b5ef:	and    al,0x0
  40b5f1:	add    BYTE PTR [eax],al
  40b5f3:	and    dh,BYTE PTR [edi+0x14b559a2]
  40b5f9:	ret    0x4a0c
  40b5fc:	dec    ebp
  40b5fd:	enter  0x2e74,0x1a
  40b601:	mov    esi,DWORD PTR [esi+ebp*1+0x0]
  40b605:	lea    eax,[eax+eiz*1]
  40b608:	pop    ds
  40b609:	repnz dec eax
  40b60b:	jecxz  0x40b58d
  40b60d:	adc    al,BYTE PTR [esi]
  40b60f:	xchg   edx,eax
  40b610:	xlat   BYTE PTR ds:[ebx]
  40b611:	jae    0x40b60a
  40b613:	hlt    
  40b614:	enter  0x2,0x3c
  40b618:	mov    bl,0x72
  40b61a:	and    al,0x6
  40b61c:	loopne 0x40b684
  40b61e:	inc    DWORD PTR [ebp-0x4d]
  40b621:	mov    eax,esi
  40b623:	dec    edi
  40b624:	mov    edx,0x3c351272
  40b629:	and    al,0xc
  40b62b:	adc    eax,0x6c0c243c
  40b630:	mov    dl,0x13
  40b632:	xor    BYTE PTR [edi+eax*2+0x40e8300],bl
  40b639:	mov    eax,esi
  40b63b:	je     0x40b602
  40b63d:	push   es
  40b63e:	add    BYTE PTR [ecx],dl
  40b640:	add    edx,DWORD PTR [esi-0x75]
  40b643:	or     al,BYTE PTR [edi]
  40b645:	retf   
  40b646:	call   0x3e6861
  40b64b:	push   cs
  40b64c:	enter  0x1972,0x11
  40b650:	cli    
  40b651:	add    dh,BYTE PTR [edi]
  40b653:	imul   esi,DWORD PTR [edx+0x2472],0xff0d8600
  40b65d:	adc    eax,0x3ed0da
  40b662:	repz pusha 
  40b664:	enter  0xf20b,0xdc
  40b668:	jge    0x40b62f
  40b66a:	dec    eax
  40b66b:	fist   WORD PTR ds:0x79fb5c0
  40b671:	add    BYTE PTR [ebp+0xaff16ec],ah
  40b677:	sbb    ch,BYTE PTR [eax]
  40b679:	or     al,0xc5
  40b67b:	retf   0xf07d
  40b67e:	or     BYTE PTR [esi+0x7d],ch
  40b681:	or     esi,ebp
  40b683:	addr16 hlt 
  40b685:	cmp    DWORD PTR [ecx],edi
  40b687:	repnz add al,BYTE PTR [edi-0x4d]
  40b68b:	enter  0x244e,0xe7
  40b68f:	iret   
  40b690:	loope  0x40b6c4
  40b692:	xor    esi,esp
  40b694:	xor    edx,eax
  40b696:	out    dx,eax
  40b697:	fld    QWORD PTR [ecx]
  40b699:	mov    dh,0x21
  40b69b:	aam    0x98
  40b69d:	ror    al,0x1f
  40b6a0:	fcomip st,st(0)
  40b6a2:	in     al,dx
  40b6a3:	lods   al,BYTE PTR ds:[esi]
  40b6a4:	or     BYTE PTR es:[ecx-0x20],bl
  40b6a8:	shl    DWORD PTR [ebx+0x17],1
  40b6ab:	aam    0xd1
  40b6ad:	adc    al,0x1f
  40b6af:	mov    dl,0x42
  40b6b1:	add    BYTE PTR [eax+0x1c],dh
  40b6b4:	add    dl,al
  40b6b6:	sti    
  40b6b7:	fistp  QWORD PTR [eax]
  40b6b9:	push   edi
  40b6ba:	cli    
  40b6bb:	ret    
  40b6bc:	es or  al,0x0
  40b6bf:	add    BYTE PTR [eax],al
  40b6c1:	inc    ecx
  40b6c2:	mov    ebp,0xe3d75c1b
  40b6c7:	adc    eax,0x36f078ff
  40b6cc:	jmp    DWORD PTR [edi]
  40b6ce:	mov    esp,0xb39455f6
  40b6d3:	push   cs
  40b6d4:	push   ss
  40b6d5:	xor    esp,eax
  40b6d7:	test   ebx,eax
  40b6d9:	mul    DWORD PTR [edx-0x3c]
  40b6dc:	jae    0x40b6ca
  40b6de:	push   es
  40b6df:	cs dec edx
  40b6e1:	mov    eax,0xe500054a
  40b6e6:	jecxz  0x40b701
  40b6e8:	(bad)  
  40b6e9:	lds    ebp,FWORD PTR [eax]
  40b6eb:	stos   DWORD PTR es:[edi],eax
  40b6ec:	sti    
  40b6ed:	pop    esp
  40b6ee:	jge    0x40b69e
  40b6f0:	ficomp WORD PTR [ebp+0x10]
  40b6f3:	and    eax,0xd255f728
  40b6f8:	push   cs
  40b6f9:	cmp    edx,DWORD PTR [edx-0x2a]
  40b6fc:	push   edi
  40b6fd:	loop   0x40b71c
  40b6ff:	test   al,0x33
  40b701:	mov    ds:0xff2814c9,al
  40b706:	leave  
  40b707:	sti    
  40b708:	adc    edi,ebp
  40b70a:	inc    esi
  40b70b:	jmp    0x393be796
  40b710:	add    al,0x8
  40b712:	add    eax,0x332c3bb
  40b717:	jmp    0x3d43ae9a
  40b71c:	inc    esi
  40b71d:	repz xor BYTE PTR [edx],bl
  40b720:	les    ebx,FWORD PTR [ebp+0x572f83]
  40b726:	add    BYTE PTR [eax],al
  40b728:	adc    edi,DWORD PTR [esi+0x13]
  40b72b:	fcomp  QWORD PTR [ecx-0x3a8116bb]
  40b731:	jge    0x40b72d
  40b733:	push   cs
  40b734:	pop    edi
  40b735:	and    ebp,ebp
  40b737:	pop    eax
  40b738:	test   BYTE PTR [ebp-0xac02dca],0xa8
  40b73f:	test   BYTE PTR [edx-0xcfc0f02],dh
  40b745:	or     eax,0x159b5528
  40b74a:	sub    DWORD PTR [edx],esi
  40b74c:	inc    ebp
  40b74d:	(bad)
  40b750:	or     al,bh
  40b752:	lock sti 
  40b754:	xchg   esp,eax
  40b755:	leave  
  40b756:	jmp    0x185125
  40b75b:	popa   
  40b75c:	repz add ch,BYTE PTR [edx+ebp*4+0x1a5730f0]
  40b764:	mov    ds:0xa864c014,al
  40b769:	push   ebp
  40b76a:	bound  ebx,QWORD PTR es:[ecx+eiz*8-0x56]
  40b76f:	sub    dh,bh
  40b771:	jge    0x40b764
  40b773:	push   0x1
  40b775:	retf   0xec73
  40b778:	mov    al,0x87
  40b77a:	(bad)
  40b77d:	leave  
  40b77e:	(bad)  
  40b77f:	repnz xor DWORD PTR [edi-0x10],edx
  40b783:	xchg   edx,eax
  40b784:	repz pop edi
  40b786:	shl    cl,0x28
  40b789:	leave  
  40b78a:	(bad)  
  40b78b:	jmp    0xf77c:0x2e000000
  40b792:	adc    al,0xd2
  40b794:	inc    edi
  40b795:	imul   esi,DWORD PTR [eax-0x16fffee9],0x2aaae162
  40b79f:	out    dx,eax
  40b7a0:	ficom  WORD PTR [eax+0x6c]
  40b7a3:	and    cl,al
  40b7a5:	sub    DWORD PTR [ecx],0xffffff9b
  40b7a8:	mov    ebx,DWORD PTR es:[ebx+edi*8]
  40b7ac:	call   0xe107:0xc849e942
  40b7b3:	lock push es
  40b7b5:	(bad)  
  40b7b6:	in     al,dx
  40b7b7:	in     al,dx
  40b7b8:	call   0x82e8:0x9f7e942
  40b7bf:	cs pop es
  40b7c1:	je     0x40b7aa
  40b7c3:	aas    
  40b7c4:	inc    esp
  40b7c5:	and    al,0xf5
  40b7c7:	cmp    DWORD PTR [ecx],eax
  40b7c9:	mov    esp,DWORD PTR [esi]
  40b7cb:	loop   0x40b7f5
  40b7cd:	ret    0xf0ed
  40b7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7d1:	add    edi,DWORD PTR ds:0x570736
  40b7d7:	and    DWORD PTR [ebx+0x4506c083],edi
  40b7dd:	mov    edx,DWORD PTR ds:0x4169f2
  40b7e3:	adc    DWORD PTR [ebx-0x337d3699],ecx
  40b7e9:	(bad)  
  40b7ea:	(bad)  
  40b7eb:	fild   WORD PTR [edi+0x10]
  40b7ee:	clc    
  40b7ef:	inc    ebp
  40b7f0:	mov    bh,0xfd
  40b7f2:	add    DWORD PTR [eax],0x0
  40b7f5:	add    BYTE PTR [ebx],al
  40b7f7:	mov    dh,0x73
  40b7f9:	or     ebx,ecx
  40b7fb:	lods   al,BYTE PTR ds:[esi]
  40b7fc:	push   es
  40b7fd:	or     BYTE PTR [edx+0x4],bl
  40b800:	dec    edi
  40b801:	jne    0x40b78b
  40b803:	sti    
  40b804:	div    DWORD PTR [eax+eiz*1+0x4b]
  40b808:	into   
  40b809:	imul   eax,DWORD PTR [ebx+0x1a0006cc],0xb1e8be0e
  40b813:	inc    edx
  40b814:	add    al,ch
  40b816:	push   0xffffffb8
  40b818:	std    
  40b819:	jmp    DWORD PTR [ebx-0x2653fc08]
  40b81f:	add    bl,BYTE PTR [esi+0x5f]
  40b822:	pop    ecx
  40b823:	adc    DWORD PTR [ebx-0x15862614],ecx
  40b829:	stos   DWORD PTR es:[edi],eax
  40b82a:	dec    ecx
  40b82b:	add    al,0x53
  40b82d:	jmp    edi
  40b82f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b830:	adc    BYTE PTR [eax-0x26],al
  40b833:	cmp    BYTE PTR [ebx+0x8],0x2d
  40b837:	pop    es
  40b838:	test   bh,dl
  40b83a:	retf   0x3
  40b83d:	or     DWORD PTR [edi+0x560efec7],0xffffff89
  40b844:	(bad)  
  40b845:	dec    edx
  40b847:	cmp    BYTE PTR [ebx+0x10],0xca
  40b84b:	push   es
  40b84c:	test   bl,al
  40b84e:	call   0xfa6a:0xf3ff0003
  40b855:	out    0xa9,eax
  40b857:	test   edi,0xfe
  40b85d:	outs   dx,BYTE PTR ds:[esi]
  40b85e:	sbb    eax,0x528c1056
  40b863:	sti    
  40b864:	out    0x86,eax
  40b866:	iret   
  40b867:	into   
  40b868:	(bad)  
  40b869:	jbe    0x40b888
  40b86b:	add    BYTE PTR [esp+ecx*2+0x650002dd],al
  40b872:	and    bh,al
  40b874:	add    BYTE PTR [ebp+0x6e0e5808],bh
  40b87a:	jne    0x40b881
  40b87c:	add    al,0xf3
  40b87e:	fnstsw WORD PTR [edi-0x51]
  40b881:	cmc    
  40b882:	aad    0x2
  40b884:	add    BYTE PTR [eax-0x1a],bl
  40b887:	jg     0x40b900
  40b889:	imul   DWORD PTR [edx]
  40b88b:	xchg   esp,eax
  40b88c:	add    ebp,edi
  40b88e:	fld    QWORD PTR [edx]
  40b890:	sub    DWORD PTR [esi-0x5174fd33],0xffffffe1
  40b897:	jnp    0x40b8dd
  40b899:	jmp    0x40b88a
  40b89b:	push   esp
  40b89c:	mov    edx,0x2dbf3
  40b8a1:	retf   0xf3f2
  40b8a4:	jb     0x40b895
  40b8a6:	loopne 0x40b83d
  40b8a8:	push   esp
  40b8a9:	jecxz  0x40b853
  40b8ab:	xchg   ebp,eax
  40b8ac:	add    eax,0x2a968e4
  40b8b1:	mov    al,0x67
  40b8b3:	add    eax,DWORD PTR [ebx+esi*8]
  40b8b6:	scas   eax,DWORD PTR es:[edi]
  40b8b7:	or     ecx,eax
  40b8b9:	gs ret 0xc119
  40b8bd:	dec    ebp
  40b8be:	pop    ss
  40b8bf:	push   es
  40b8c0:	sldt   WORD PTR [eax]
  40b8c3:	add    BYTE PTR [esi+esi*4-0x5f53fccd],al
  40b8ca:	xor    eax,0xcef30ce8
  40b8cf:	(bad)  
  40b8d0:	in     al,0x6
  40b8d2:	pop    esi
  40b8d3:	push   es
  40b8d4:	inc    eax
  40b8d5:	(bad)  
  40b8d6:	xchg   ebx,eax
  40b8d7:	sti    
  40b8d8:	icebp  
  40b8d9:	int    0xb8
  40b8db:	(bad)  
  40b8dd:	ret    
  40b8de:	or     eax,0xdf080ecf
  40b8e3:	(bad)  
  40b8e5:	sub    al,0xd0
  40b8e7:	add    eax,0x34e67df4
  40b8ec:	lock int 0x98
  40b8ef:	mov    edx,DWORD PTR ss:[edx]
  40b8f2:	in     al,0xce
  40b8f4:	ins    DWORD PTR es:[edi],dx
  40b8f5:	push   ss
  40b8f6:	xchg   esi,eax
  40b8f7:	add    eax,0xdc3e06d9
  40b8fc:	punpckhwd mm5,mm0
  40b8ff:	add    ebp,DWORD PTR [esi-0x39]
  40b902:	cmp    esp,ebp
  40b904:	repz arpl cx,si
  40b907:	sbb    al,0xa6
  40b909:	push   ss
  40b90a:	cmp    al,0x78
  40b90c:	jns    0x40b8c1
  40b90e:	add    DWORD PTR [edx-0xd],0x1cf8a659
  40b915:	sbb    DWORD PTR [ecx],ebp
  40b917:	add    al,0xc4
  40b919:	add    BYTE PTR fs:[esi],0xc0
  40b91d:	(bad)
  40b920:	add    al,BYTE PTR [edi-0x17]
  40b923:	sub    ch,BYTE PTR [esi+0x3d8c8]
  40b929:	add    BYTE PTR [eax],al
  40b92b:	pushf  
  40b92c:	xchg   ebx,eax
  40b92d:	test   BYTE PTR [edi],0x8
  40b930:	pop    ds
  40b931:	pop    es
  40b932:	sbb    eax,0x3ed0b6d
  40b937:	repz adc eax,0xaf07d96
  40b93d:	jmp    0x264afb45
  40b942:	xor    edi,DWORD PTR [edi+ebp*4]
  40b945:	or     bh,0xcd
  40b948:	(bad)
  40b94b:	outs   dx,BYTE PTR ds:[esi]
  40b94c:	or     al,BYTE PTR [eax]
  40b94e:	in     eax,dx
  40b94f:	lock push es
  40b951:	push   0xffffffe8
  40b953:	std    
  40b954:	scas   al,BYTE PTR es:[edi]
  40b955:	xlat   BYTE PTR ds:[ebx]
  40b956:	dec    eax
  40b957:	lock push es
  40b959:	test   DWORD PTR [ecx],ebp
  40b95b:	dec    ebx
  40b95c:	fcomp  QWORD PTR [esi+0x2a]
  40b95f:	in     eax,0x85
  40b961:	jmp    0x40b9a5
  40b963:	xor    DWORD PTR [edi],eax
  40b965:	push   edi
  40b966:	push   es
  40b967:	mov    esi,DWORD PTR [ecx-0x760f56ef]
  40b96d:	jnp    0x40b93c
  40b96f:	js     0x40b935
  40b971:	jae    0x40b94a
  40b973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b974:	cmp    DWORD PTR [ecx+esi*8],esp
  40b977:	dec    eax
  40b978:	js     0x40b976
  40b97a:	fidiv  WORD PTR [esi]
  40b97c:	mov    bh,BYTE PTR [edi-0x74a4a7a3]
  40b982:	fnstenv [edi]
  40b984:	imul   edi,esi,0x57633ec6
  40b98a:	mov    esi,0x2911b53c
  40b98f:	add    BYTE PTR [eax],al
  40b991:	add    bh,dh
  40b993:	gs ret 0xf0e5
  40b997:	scas   al,BYTE PTR es:[edi]
  40b998:	out    0xf3,al
  40b99a:	lock push es
  40b99c:	test   BYTE PTR [ecx+0x3e5649cb],ch
  40b9a2:	outs   dx,BYTE PTR ds:[esi]
  40b9a3:	mov    cl,0xaa
  40b9a5:	sub    ch,bh
  40b9a7:	pop    ebp
  40b9a8:	(bad)  
  40b9a9:	fsubr  QWORD PTR [edi+edx*1]
  40b9ac:	inc    eax
  40b9ad:	jmp    0xe564f2e9
  40b9b2:	sbb    BYTE PTR [eax-0x3],al
  40b9b5:	outs   dx,BYTE PTR ds:[esi]
  40b9b6:	es nop
  40b9b8:	out    dx,eax
  40b9b9:	ins    BYTE PTR es:[edi],dx
  40b9ba:	lds    edi,FWORD PTR [eax]
  40b9bc:	sbb    eax,0xfec44451
  40b9c1:	push   esi
  40b9c2:	jb     0x40b9d6
  40b9c4:	call   FWORD PTR [edx]
  40b9c6:	scas   eax,DWORD PTR es:[edi]
  40b9c7:	sub    cl,BYTE PTR [ecx+0x40f5c00]
  40b9cd:	add    dl,bl
  40b9cf:	sub    cl,BYTE PTR [ecx-0x13f337a]
  40b9d5:	push   DWORD PTR [edx]
  40b9d7:	sar    ah,0xff
  40b9da:	aad    0xf9
  40b9dc:	(bad)  
  40b9dd:	adc    eax,0x3eb90a
  40b9e2:	gs repnz (bad) 
  40b9e5:	and    eax,0x3eba86
  40b9ea:	outs   dx,DWORD PTR ds:[esi]
  40b9eb:	aas    
  40b9ec:	jmp    0x40ba44
  40b9ee:	test   DWORD PTR [ebp+0x14],ebx
  40b9f1:	(bad)  
  40b9f2:	push   DWORD PTR [edi+0x75fd]
  40b9f8:	add    BYTE PTR [esi+0x550873d3],dl
  40b9fe:	mov    ebp,0xb1a161e
  40ba03:	mov    esi,eax
  40ba05:	iret   
  40ba06:	fnstcw WORD PTR [edi+edx*1+0x32]
  40ba0a:	push   ecx
  40ba0b:	or     al,BYTE PTR [eax]
  40ba0d:	pop    edx
  40ba0e:	mov    WORD PTR [esi+0x15e5474],?
  40ba14:	push   esi
  40ba15:	test   DWORD PTR [ebp+0xc],ebx
  40ba18:	(bad)  
  40ba19:	inc    edx
  40ba1b:	out    0x16,al
  40ba1d:	push   esp
  40ba1e:	sar    ebp,cl
  40ba20:	mov    ecx,DWORD PTR [edx+esi*8+0x5c]
  40ba24:	ret    0x81a
  40ba27:	push   ebp
  40ba28:	mov    edx,DWORD PTR [esi+0x2e758af9]
  40ba2e:	sti    
  40ba2f:	(bad)  
  40ba30:	jne    0x40ba6c
  40ba32:	aas    
  40ba33:	jl     0x40ba41
  40ba35:	test   DWORD PTR [esp+ebx*1-0x1],ebx
  40ba39:	jmp    FWORD PTR [edi-0x483000ac]
  40ba3f:	push   ebp
  40ba40:	(bad)  
  40ba41:	mov    edi,0xf315fdbf
  40ba46:	mov    ebp,0x26f33ff4
  40ba4b:	inc    esi
  40ba4c:	sbb    al,0x76
  40ba4e:	in     eax,dx
  40ba4f:	push   ebp
  40ba50:	inc    eax
  40ba51:	outs   dx,BYTE PTR ds:[esi]
  40ba52:	sti    
  40ba53:	push   esi
  40ba54:	cmp    al,0xcb
  40ba56:	or     edi,edx
  40ba58:	push   DWORD PTR [ecx+ebp*1+0x73c3]
  40ba5f:	add    al,ah
  40ba61:	cmp    BYTE PTR ds:0x8648e053,dl
  40ba67:	cmc    
  40ba68:	daa    
  40ba69:	mov    DWORD PTR [edi],0x26a1035d
  40ba6f:	mov    esi,edi
  40ba71:	in     al,dx
  40ba72:	jns    0x40bab8
  40ba74:	ror    eax,cl
  40ba76:	les    esi,FWORD PTR [ecx-0x10]
  40ba79:	es push esi
  40ba7b:	and    BYTE PTR [ecx],cl
  40ba7d:	scas   eax,DWORD PTR es:[edi]
  40ba7e:	retf   
  40ba7f:	je     0x40ba94
  40ba81:	lods   eax,DWORD PTR ds:[esi]
  40ba82:	dec    edi
  40ba83:	fucomip st,st(7)
  40ba85:	in     al,0x50
  40ba87:	or     BYTE PTR [ebx-0x76],cl
  40ba8a:	enter  0x54fe,0xf0
  40ba8e:	push   ds
  40ba8f:	jne    0x40baa4
  40ba91:	add    esi,DWORD PTR [ebx-0x181587a6]
  40ba97:	pop    esi
  40ba98:	popf   
  40ba99:	sbb    al,dh
  40ba9b:	sbb    esi,ebx
  40ba9d:	sbb    bh,BYTE PTR [edi-0x15]
  40baa0:	lds    ebp,FWORD PTR [eax+edx*2+0x14]
  40baa4:	and    al,0x1a
  40baa6:	hlt    
  40baa7:	(bad)  
  40baa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baa9:	test   eax,0x94eb74c9
  40baae:	lock pop ss
  40bab0:	in     eax,0xed
  40bab2:	add    ecx,DWORD PTR [ebx+0x77d22a03]
  40bab8:	(bad)  
  40bab9:	test   DWORD PTR [eax+0x7eadf308],edi
  40babf:	mov    edi,0x81050767
  40bac4:	add    BYTE PTR [eax],al
  40bac6:	add    dh,bl
  40bac8:	cmp    al,0xf3
  40baca:	retf   0xf67
  40bacd:	inc    ecx
  40bace:	push   0xdf4dc2d6
  40bad3:	(bad)  
  40bad4:	sub    al,0xe9
  40bad6:	xor    esp,eax
  40bad8:	cmp    al,0xed
  40bada:	retf   0xf47
  40badd:	inc    ecx
  40bade:	sub    BYTE PTR [esi-0x4980d23e],dh
  40bae4:	popa   
  40bae5:	(bad)  
  40bae6:	(bad)
  40bae9:	mov    ah,0x7e
  40baeb:	mov    BYTE PTR [esi-0x41],dl
  40baee:	jle    0x40bb0f
  40baf0:	sbb    esi,DWORD PTR [esi+0x71e707ca]
  40baf6:	dec    ecx
  40baf7:	test   ecx,0x3c7de773
  40bafd:	shl    DWORD PTR [ecx],1
  40baff:	je     0x40bb3d
  40bb01:	fnstenv [edx]
  40bb03:	ins    BYTE PTR es:[edi],dx
  40bb04:	cmp    al,0xf1
  40bb06:	retf   0x12ff
  40bb09:	test   DWORD PTR [ebx-0xd],0x6fe82b8f
  40bb10:	(bad)  
  40bb11:	push   ebx
  40bb12:	inc    esp
  40bb13:	jbe    0x40bace
  40bb15:	cmp    al,0x2b
  40bb17:	pop    ebx
  40bb18:	ss lock add esi,ebx
  40bb1c:	mov    ch,BYTE PTR [eax-0x97262b1]
  40bb22:	push   ss
  40bb23:	dec    eax
  40bb24:	mov    WORD PTR [esi+0x3bfdb54f],ds
  40bb2a:	hlt    
  40bb2b:	add    BYTE PTR [eax],al
  40bb2d:	add    BYTE PTR [ecx+0x35ff624f],ah
  40bb33:	nop
  40bb34:	and    esp,DWORD PTR [eax+ecx*8]
  40bb37:	enter  0x6fa,0x7a
  40bb3b:	cmp    al,0xc9
  40bb3d:	pop    ebp
  40bb3e:	repz sar edi,0xfb
  40bb42:	rol    cl,1
  40bb44:	jae    0x40bad4
  40bb46:	in     al,dx
  40bb47:	shl    BYTE PTR [ecx+esi*8-0x38],0xb4
  40bb4c:	sti    
  40bb4d:	pop    esi
  40bb4e:	test   eax,0x10dc2b44
  40bb53:	cmp    al,0xd7
  40bb55:	inc    edx
  40bb56:	adc    eax,0x2346f786
  40bb5b:	and    edi,edi
  40bb5d:	aam    0xcc
  40bb5f:	sbb    eax,DWORD PTR [eax-0x17]
  40bb62:	jmp    0x40bb9f
  40bb64:	daa    
  40bb65:	jmp    0x1151f75a
  40bb6a:	ror    DWORD PTR [edi],cl
  40bb6c:	add    cl,ch
  40bb6e:	sbb    al,0x82
  40bb70:	jae    0x40bb53
  40bb72:	test   eax,0xb801083a
  40bb77:	ret    0x6fe
  40bb7a:	add    eax,0xca9e1c4b
  40bb7f:	pop    ebp
  40bb80:	pop    ebp
  40bb81:	sub    ecx,DWORD PTR [ecx+eax*8+0x55f4a689]
  40bb88:	push   esi
  40bb89:	jb     0x40bb4e
  40bb8b:	(bad)  
  40bb8c:	ja     0x40bb78
  40bb8e:	inc    ebx
  40bb8f:	hlt    
  40bb90:	ficom  DWORD PTR [eax]
  40bb92:	add    BYTE PTR [eax],al
  40bb94:	add    BYTE PTR [ecx],cl
  40bb96:	pop    ds
  40bb97:	jbe    0x40bb9e
  40bb99:	les    eax,FWORD PTR ds:0xe6b2ea9f
  40bb9f:	jae    0x40bb78
  40bba1:	mov    edi,0x2ab66a09
  40bba6:	xor    eax,0xd1f7d924
  40bbab:	xor    BYTE PTR [ecx-0x22a756c6],0xf0
  40bbb2:	push   es
  40bbb3:	test   DWORD PTR [ecx-0x2dbcec3d],ebp
  40bbb9:	ficomp DWORD PTR [esi]
  40bbbb:	jb     0x40bbbd
  40bbbd:	dec    esi
  40bbbe:	sbb    eax,eax
  40bbc0:	pop    esi
  40bbc1:	ror    eax,1
  40bbc3:	add    al,BYTE PTR [eax]
  40bbc5:	xchg   ecx,eax
  40bbc6:	inc    esp
  40bbc7:	and    al,0x8b
  40bbc9:	or     al,0xaf
  40bbcb:	mov    eax,DWORD PTR [edx+esi*4]
  40bbce:	mov    edi,0x381204b5
  40bbd3:	add    eax,DWORD PTR [ecx+0x3380751]
  40bbd9:	adc    eax,0x4155e2e2
  40bbde:	fild   QWORD PTR [ecx]
  40bbe0:	add    eax,0x4198c6
  40bbe5:	pop    ecx
  40bbe6:	test   BYTE PTR [edx+0x3eb97635],0x0
  40bbed:	bound  eax,QWORD PTR gs:[edx]
  40bbf0:	xor    edi,ebp
  40bbf2:	cmc    
  40bbf3:	push   esi
  40bbf4:	mov    esp,edx
  40bbf6:	aaa    
  40bbf7:	inc    esp
  40bbf8:	adc    BYTE PTR [eax],al
  40bbfa:	add    BYTE PTR [eax],al
  40bbfc:	dec    edx
  40bbfd:	iret   
  40bbfe:	jae    0x40bc08
  40bc00:	in     eax,dx
  40bc01:	dec    edi
  40bc02:	adc    BYTE PTR [edx+0x7d],ch
  40bc05:	iret   
  40bc06:	aam    0x85
  40bc08:	retf   0x2a56
  40bc0b:	add    edi,DWORD PTR [edi-0x48]
  40bc0e:	push   ebp
  40bc0f:	push   0x56
  40bc11:	cmp    DWORD PTR [eax+edx*1+0x1a],eax
  40bc15:	cli    
  40bc16:	(bad)  
  40bc17:	jne    0x40bc6b
  40bc19:	iret   
  40bc1a:	adc    edx,DWORD PTR [eax+ecx*2-0x657affbc]
  40bc21:	push   eax
  40bc22:	add    al,0xb0
  40bc24:	dec    ebx
  40bc25:	jecxz  0x40bc35
  40bc27:	push   0x4b
  40bc29:	not    DWORD PTR [esi+0x57]
  40bc2c:	add    eax,0x4d1073ce
  40bc31:	push   ecx
  40bc32:	or     bh,bh
  40bc34:	fs sbb al,al
  40bc37:	pop    edi
  40bc38:	repz imul DWORD PTR [ebx*2+0x5602e231]
  40bc40:	pushf  
  40bc41:	mov    DWORD PTR [esi-0x75],ebx
  40bc44:	out    0x7d,al
  40bc46:	add    al,BYTE PTR [eax]
  40bc48:	repz and al,0x35
  40bc4b:	or     al,0x78
  40bc4d:	sbb    esi,eax
  40bc4f:	mov    ah,BYTE PTR [ecx+0x16]
  40bc52:	mov    edx,DWORD PTR [edi]
  40bc54:	rep lods eax,DWORD PTR ds:[esi]
  40bc56:	add    dh,BYTE PTR [ebx]
  40bc58:	aam    0x1c
  40bc5a:	les    ebp,FWORD PTR [ebx+0x246cf0f]
  40bc60:	add    BYTE PTR [eax],al
  40bc62:	add    BYTE PTR [edi],dl
  40bc64:	push   cs
  40bc65:	ret    
  40bc66:	into   
  40bc67:	out    dx,al
  40bc68:	lods   al,BYTE PTR ds:[esi]
  40bc69:	retf   0xc3e1
  40bc6c:	cs enter 0x6f5a,0x63
  40bc71:	pop    esp
  40bc72:	mov    esi,DWORD PTR [ecx]
  40bc74:	mov    esi,0x4726117b
  40bc79:	sub    BYTE PTR [esi-0x50],bl
  40bc7c:	cmp    BYTE PTR [ebx-0x15],0x70
  40bc80:	shr    ebp,0xe7
  40bc83:	dec    eax
  40bc84:	or     al,cl
  40bc86:	(bad)  
  40bc87:	push   eax
  40bc88:	lds    edx,FWORD PTR [esi-0x3ccd0cbe]
  40bc8e:	je     0x40bc84
  40bc90:	jnp    0x40bc54
  40bc92:	call   0x436b8f
  40bc97:	gs jmp 0xcfe9:0x24c000fb
  40bc9f:	loope  0x40bc8e
  40bca1:	add    edx,DWORD PTR [edi-0x42]
  40bca4:	mov    edx,0x9c3c0058
  40bca9:	mov    ds:0x3ec8733,al
  40bcae:	test   DWORD PTR [ebx],esi
  40bcb0:	les    ebx,FWORD PTR [edx]
  40bcb2:	push   0x441a062f
  40bcb7:	repz mov esp,DWORD PTR [eax-0x6a3fbc24]
  40bcbe:	(bad)  
  40bcbf:	jns    0x40bcc2
  40bcc1:	rcl    DWORD PTR [edi+0x5c1906b1],1
  40bcc7:	add    BYTE PTR [eax],al
  40bcc9:	add    BYTE PTR [edi],ah
  40bccb:	xor    ebp,DWORD PTR [ecx]
  40bccd:	add    al,0xb
  40bccf:	(bad)  
  40bcd0:	jbe    0x40bc99
  40bcd2:	in     eax,dx
  40bcd3:	xchg   edx,eax
  40bcd4:	fisttp DWORD PTR [edi]
  40bcd6:	xchg   edi,eax
  40bcd7:	dec    edx
  40bcd8:	jmp    0xf918810
  40bcdd:	add    dh,bl
  40bcdf:	sub    BYTE PTR [eax],0x51
  40bce2:	hlt    
  40bce3:	clc    
  40bce4:	sub    ch,bl
  40bce6:	mov    al,BYTE PTR [edi]
  40bce8:	jmp    0xb3cce1f0
  40bced:	xlat   BYTE PTR ds:[ebx]
  40bcee:	jl     0x40bd6e
  40bcf0:	call   0xfcefaff8
  40bcf5:	xor    esi,edx
  40bcf7:	push   es
  40bcf8:	jb     0x40bcb8
  40bcfa:	sub    al,0xbe
  40bcfc:	cmp    DWORD PTR [ebx],edx
  40bcfe:	xchg   esp,eax
  40bcff:	push   0xffffffd4
  40bd01:	xchg   edi,eax
  40bd02:	xor    DWORD PTR [edi],eax
  40bd04:	sar    BYTE PTR [esi+0x45b82f5],cl
  40bd0a:	repz push es
  40bd0c:	jb     0x40bd1f
  40bd0e:	aaa    
  40bd0f:	sbb    DWORD PTR [ecx+0x79a2db03],ebp
  40bd15:	inc    ebx
  40bd16:	repz push esi
  40bd18:	out    0xad,al
  40bd1a:	aam    0xb2
  40bd1c:	pop    ecx
  40bd1d:	inc    esp
  40bd1e:	repz mov ebp,0x4a9f081b
  40bd24:	jmp    0x29abc1cb
  40bd29:	add    al,0x3c
  40bd2b:	aad    0x50
  40bd2d:	cld    
  40bd2e:	add    BYTE PTR [eax],al
  40bd30:	add    al,al
  40bd32:	inc    esi
  40bd33:	add    cl,ch
  40bd35:	xor    eax,0xb17d3bf3
  40bd3a:	push   es
  40bd3b:	mov    ds:0x497b2d,eax
  40bd40:	sahf   
  40bd41:	inc    esi
  40bd42:	es and al,0x1d
  40bd45:	mov    bh,0x6
  40bd47:	call   esp
  40bd49:	in     al,dx
  40bd4a:	push   0x42
  40bd4c:	jmp    0x2aed03a2
  40bd51:	out    dx,eax
  40bd52:	mov    ebp,0x32ff01d5
  40bd57:	inc    eax
  40bd58:	jmp    0x957cb00a
  40bd5d:	xor    DWORD PTR [edi],eax
  40bd5f:	mov    ds:0x487cad,eax
  40bd64:	push   esi
  40bd65:	sahf   
  40bd66:	and    eax,0x730d544
  40bd6b:	(bad)  
  40bd6c:	cld    
  40bd6d:	hlt    
  40bd6e:	push   0x42
  40bd70:	jmp    0xaaed0b06
  40bd75:	lock mov ebp,0x6ad48ad5
  40bd7b:	inc    edx
  40bd7c:	jmp    0x4d80b970
  40bd81:	xor    DWORD PTR [edi],eax
  40bd83:	jne    0x40bd66
  40bd85:	(bad)  
  40bd86:	sti    
  40bd87:	inc    ebx
  40bd88:	cmp    eax,0xe1740731
  40bd8d:	out    dx,eax
  40bd8e:	sti    
  40bd8f:	inc    edi
  40bd90:	dec    ebp
  40bd91:	xor    DWORD PTR [edi],eax
  40bd93:	je     0x40bd6e
  40bd95:	add    BYTE PTR [eax],al
  40bd97:	add    bh,bh
  40bd99:	sti    
  40bd9a:	dec    edi
  40bd9b:	cmp    eax,0xf17406b1
  40bda0:	jmp    0x40bd67
  40bda2:	jae    0x40bd89
  40bda4:	add    BYTE PTR [esi],0xeb
  40bda7:	jmp    0x40bd8b
  40bda9:	(bad)  
  40bdaa:	pop    ebp
  40bdab:	cs sbb dl,al
  40bdae:	rol    DWORD PTR [eax],0x4e
  40bdb1:	or     DWORD PTR [ebx-0x75],edx
  40bdb4:	xchg   edx,eax
  40bdb5:	xchg   ecx,esp
  40bdb7:	add    edi,ebp
  40bdb9:	mov    dl,0xe6
  40bdbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdbc:	bound  eax,QWORD PTR [edx]
  40bdbe:	add    BYTE PTR [edx+ecx*2+0x7830756],al
  40bdc5:	jmp    0x85b0175
  40bdca:	push   esi
  40bdcb:	push   edi
  40bdcc:	mov    ch,0x26
  40bdce:	lods   al,BYTE PTR ds:[esi]
  40bdcf:	inc    ebx
  40bdd0:	or     al,BYTE PTR [ebx+0x2c9ac56]
  40bdd6:	call   0x4a708f
  40bddb:	pop    edi
  40bddc:	cmp    DWORD PTR [ebx-0x54],ecx
  40bddf:	inc    ebx
  40bde0:	retf   0x84e2
  40bde3:	sar    BYTE PTR [edi-0x7e3fcf44],0xc7
  40bdea:	sbb    ebx,0xffffff9f
  40bded:	mov    esi,0x463a9866
  40bdf2:	add    al,ch
  40bdf4:	and    eax,0x32000220
  40bdf9:	inc    ebx
  40bdfa:	rol    DWORD PTR [ecx],1
  40bdfc:	add    BYTE PTR [eax],al
  40bdfe:	add    BYTE PTR [edx-0x108dfdfc],bl
  40be04:	fisub  DWORD PTR [esi-0x5df77509]
  40be0a:	nop
  40be0b:	sub    al,BYTE PTR [esi+0x0]
  40be0e:	test   dl,bl
  40be10:	dec    ebx
  40be11:	adc    al,ch
  40be13:	mov    ds:0x36ffff79,eax
  40be18:	mov    esp,0x92ace71
  40be1d:	mov    ds:0x462a90,al
  40be22:	test   DWORD PTR [ecx],esi
  40be24:	dec    ebp
  40be25:	add    al,0x3c
  40be27:	dec    eax
  40be28:	push   esi
  40be29:	mov    edi,0x27aef3b0
  40be2e:	ret    
  40be2f:	fistp  DWORD PTR ds:0x57f34298
  40be35:	(bad)
  40be38:	jae    0x40be3c
  40be3a:	add    BYTE PTR [eax+0xa],dl
  40be3d:	cwde   
  40be3e:	inc    edx
  40be3f:	repz and al,bl
  40be42:	jae    0x40be18
  40be44:	cld    
  40be45:	les    ebp,FWORD PTR [edi]
  40be47:	adc    al,0xb3
  40be49:	or     BYTE PTR [edi],0xb3
  40be4c:	lods   eax,DWORD PTR ds:[esi]
  40be4d:	xor    ah,BYTE PTR [ebx+0x3ff9db]
  40be53:	push   edx
  40be54:	retf   0x4296
  40be57:	repz cmp al,0x13
  40be5a:	mov    edi,0x40421f
  40be5f:	pop    ecx
  40be60:	mov    al,0x2a
  40be62:	call   0xc040be67
  40be67:	mov    edx,0xaea30002
  40be6c:	and    eax,ebx
  40be6e:	add    esi,ebp
  40be70:	mov    edi,0x81f97854
  40be75:	jmp    0x40be62
  40be77:	scas   eax,DWORD PTR es:[edi]
  40be78:	add    al,BYTE PTR [eax]
  40be7a:	mov    ebp,0x2600fa62
  40be7f:	or     bl,BYTE PTR [eax+eax*4+0x57]
  40be83:	jo     0x40be87
  40be85:	push   0xfffffff3
  40be87:	adc    eax,0xadf2ed88
  40be8c:	jle    0x40be4d
  40be8e:	push   es
  40be8f:	stos   BYTE PTR es:[edi],al
  40be90:	adc    al,al
  40be92:	cwde   
  40be93:	xlat   BYTE PTR ds:[ebx]
  40be94:	pop    edx
  40be95:	mov    BYTE PTR [ebp+0x70],cl
  40be98:	add    ch,BYTE PTR [edx-0xf]
  40be9b:	adc    eax,0xadf2ed9c
  40bea0:	jle    0x40be61
  40bea2:	fistp  QWORD PTR [ecx+0x6f20459]
  40bea8:	jmp    0xe0c224b0
  40bead:	ror    DWORD PTR [ebp-0x45],0x38
  40beb1:	cs repz mov ebx,0x46e2c3f3
  40beb8:	jmp    0xbbff264d
  40bebd:	ret    
  40bebe:	sub    eax,0xe024c155
  40bec3:	push   es
  40bec4:	jmp    0x24a81b51
  40bec9:	jo     0x40becb
  40becb:	add    BYTE PTR [eax],al
  40becd:	mov    cl,0x6
  40becf:	out    dx,al
  40bed0:	cwde   
  40bed1:	dec    esp
  40bed2:	int    0xaa
  40bed4:	or     bl,dh
  40bed6:	push   ecx
  40bed7:	bound  esi,QWORD PTR [eax+0x860aa73]
  40bedd:	repz push es
  40bedf:	ja     0x40bf2a
  40bee1:	sti    
  40bee2:	pop    es
  40bee3:	sbb    bl,BYTE PTR [edx+0x3c]
  40bee6:	or     ah,BYTE PTR [ebp-0x76]
  40bee9:	fdivr  QWORD PTR [edx-0x68e87c18]
  40beef:	cwde   
  40bef0:	inc    edi
  40bef1:	repz pop es
  40bef3:	out    0x89,al
  40bef5:	js     0x40befe
  40bef7:	jmp    0xfa1ebeff
  40befc:	ret    0x8e4e
  40beff:	gs xor al,0x20
  40bf02:	inc    edi
  40bf03:	jmp    0x32701e98
  40bf08:	ret    
  40bf09:	popf   
  40bf0a:	scas   eax,DWORD PTR es:[edi]
  40bf0b:	rcl    BYTE PTR [ecx-0xe],1
  40bf0e:	push   es
  40bf0f:	ins    BYTE PTR es:[edi],dx
  40bf10:	mov    DWORD PTR [esp+edi*4-0x9cb3ceb],eax
  40bf17:	sub    BYTE PTR [ebx+eiz*1-0x46],dl
  40bf1b:	cmp    eax,0xe947003c
  40bf20:	push   ebx
  40bf21:	ins    BYTE PTR es:[edi],dx
  40bf22:	adc    al,0x0
  40bf24:	cdq    
  40bf25:	std    
  40bf26:	inc    esi
  40bf27:	add    BYTE PTR [edi+esi*1+0x33],ah
  40bf2b:	sub    esi,DWORD PTR [edx+0x2a]
  40bf2e:	dec    edx
  40bf2f:	lea    esp,[eax+eax*1+0x0]
  40bf33:	add    BYTE PTR [eax-0x5f290145],cl
  40bf39:	push   esi
  40bf3a:	call   0x483f54
  40bf3f:	ins    BYTE PTR es:[edi],dx
  40bf40:	xor    BYTE PTR [esi],dh
  40bf42:	pop    ss
  40bf43:	mov    esi,0x2aac3e2b
  40bf48:	out    dx,eax
  40bf49:	mov    eax,DWORD PTR [ecx+esi*4+0x39feb933]
  40bf50:	xor    BYTE PTR [ebx],dl
  40bf52:	mov    al,0xfb
  40bf54:	mov    al,0x6
  40bf56:	test   DWORD PTR [ecx-0x597cf244],ebp
  40bf5c:	in     al,dx
  40bf5d:	inc    ebp
  40bf5e:	add    DWORD PTR [esi-0x6d61cb64],0xffffffd4
  40bf65:	sub    al,0xdb
  40bf67:	in     eax,0x75
  40bf69:	test   BYTE PTR [ebx-0x6],dh
  40bf6c:	xor    BYTE PTR [edi],al
  40bf6e:	or     esp,ebp
  40bf70:	shr    BYTE PTR [ebp+0x42],1
  40bf73:	jmp    0xed36d415
  40bf78:	shr    BYTE PTR [ebp+0x42],1
  40bf7b:	jmp    0x684af277
  40bf80:	jecxz  0x40bf68
  40bf82:	stos   DWORD PTR es:[edi],eax
  40bf83:	stos   BYTE PTR es:[edi],al
  40bf84:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf86:	push   cs
  40bf87:	jmp    0x799f197c
  40bf8c:	neg    DWORD PTR [ebp-0x37]
  40bf8f:	sub    ebp,esp
  40bf91:	push   es
  40bf92:	push   ebp
  40bf93:	jb     0x40bff1
  40bf95:	xchg   bl,ch
  40bf97:	std    
  40bf98:	add    BYTE PTR [eax],al
  40bf9a:	add    dl,bh
  40bf9c:	push   es
  40bf9d:	add    BYTE PTR [edx+0x8b521a],bh
  40bfa3:	scas   eax,DWORD PTR es:[edi]
  40bfa4:	jno    0x40bfb6
  40bfa6:	inc    eax
  40bfa7:	pop    edx
  40bfa8:	in     eax,dx
  40bfa9:	pop    edi
  40bfaa:	lds    ebx,FWORD PTR [ecx-0x662800fb]
  40bfb0:	fsubr  DWORD PTR [eax+0x20]
  40bfb3:	stc    
  40bfb4:	ret    0xbe51
  40bfb7:	ss cmp eax,0x8e040042
  40bfbd:	sbb    edx,DWORD PTR [edi+edx*4+0x43]
  40bfc1:	add    BYTE PTR [esi+0x69],ah
  40bfc4:	lds    eax,FWORD PTR es:[ebx+0x1a]
  40bfc8:	out    dx,eax
  40bfc9:	mov    ds:0x435758,al
  40bfce:	mov    DWORD PTR [edi],ebp
  40bfd0:	test   eax,0xc60a43c2
  40bfd5:	adc    esi,DWORD PTR [esp+eax*1]
  40bfd8:	inc    ebp
  40bfd9:	add    BYTE PTR [ebx-0xa9e9aa],al
  40bfdf:	inc    ebp
  40bfe0:	mov    DWORD PTR [ebx-0x2388c14],esi
  40bfe6:	call   0x407a61
  40bfeb:	push   ecx
  40bfec:	inc    ebx
  40bfed:	jl     0x40bf92
  40bfef:	(bad)  
  40bff0:	cmp    al,BYTE PTR [edx+0x0]
  40bff3:	xchg   ebx,eax
  40bff4:	jne    0x40bff5
  40bff6:	(bad)  
  40bff7:	fimul  DWORD PTR [ebx+0x44c288c4]
  40bffd:	dec    ecx
  40bffe:	jne    0x40c000
  40c000:	add    BYTE PTR [eax],al
  40c002:	and    BYTE PTR [eax-0x39ce254d],cl
  40c008:	std    
  40c009:	call   0x4079e4
  40c00e:	xchg   edi,eax
  40c00f:	xor    al,BYTE PTR [eax]
  40c011:	add    BYTE PTR [edx+0x595013ea],cl
  40c017:	mov    DWORD PTR [ebx-0x30],esi
  40c01a:	sbb    ebx,ecx
  40c01c:	std    
  40c01d:	call   0x338315
  40c022:	jl     0x40c047
  40c024:	les    edi,FWORD PTR [ebp-0x2a]
  40c027:	xor    al,0xca
  40c029:	dec    edi
  40c02a:	(bad)  ds:0x22f34272
  40c030:	xchg   edi,eax
  40c032:	pop    esi
  40c033:	test   eax,0xee4b4fbf
  40c038:	mov    cl,0x0
  40c03a:	repz and al,bl
  40c03d:	push   cs
  40c03e:	pop    esi
  40c03f:	outs   dx,BYTE PTR ds:[esi]
  40c040:	cld    
  40c041:	ret    0xa6c6
  40c044:	repz mov edi,0xc78636cd
  40c04a:	cs jns 0x40c00c
  40c04d:	mov    eax,0x2af15
  40c052:	outs   dx,BYTE PTR ds:[esi]
  40c053:	and    ebx,ebp
  40c055:	cli    
  40c056:	adc    al,0x61
  40c058:	mov    dl,BYTE PTR [edi]
  40c05a:	mov    bl,0xf6
  40c05c:	ss cli 
  40c05e:	fwait
  40c05f:	stc    
  40c060:	aaa    
  40c061:	inc    eax
  40c062:	repz pop edx
  40c064:	xchg   bh,al
  40c066:	add    BYTE PTR [eax],al
  40c068:	add    dh,dh
  40c06a:	cmp    BYTE PTR [edi+0x6ed2ec4f],0x11
  40c071:	xor    ebp,DWORD PTR [esi+0x28db4c83]
  40c077:	push   esp
  40c078:	push   ebx
  40c079:	dec    ecx
  40c07a:	lods   eax,DWORD PTR ds:[esi]
  40c07b:	push   ebx
  40c07c:	push   0xfffffff2
  40c07e:	aad    0x2
  40c080:	add    bl,dh
  40c082:	sub    eax,0x4aab848e
  40c087:	sar    dh,0x23
  40c08a:	jmp    0xaeeebcd4
  40c08f:	add    al,BYTE PTR [eax]
  40c091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c092:	(bad)  
  40c094:	adc    DWORD PTR [ebx],esi
  40c096:	scas   al,BYTE PTR es:[edi]
  40c097:	mov    ebp,edi
  40c099:	jo     0x40c0a1
  40c09b:	daa    
  40c09c:	rol    BYTE PTR [eax],0xe0
  40c09f:	mov    ecx,0xb8bb2f8e
  40c0a4:	rol    BYTE PTR [edi],0xbb
  40c0a7:	pop    ebx
  40c0a8:	xchg   BYTE PTR [ecx+edi*4+0x50bcc005],ch
  40c0af:	(bad)  
  40c0b0:	adc    eax,0x3a9151f
  40c0b5:	jbe    0x40c07d
  40c0b7:	je     0x40c0c2
  40c0b9:	push   0xb78de541
  40c0be:	mov    esi,0x66dfbf36
  40c0c3:	cli    
  40c0c4:	inc    ebx
  40c0c5:	repz mov esp,DWORD PTR [ebx]
  40c0c8:	mov    esp,0x38c5be71
  40c0cd:	add    BYTE PTR [eax],al
  40c0cf:	add    bh,dh
  40c0d1:	outs   dx,BYTE PTR ds:[esi]
  40c0d2:	out    0x37,eax
  40c0d4:	icebp  
  40c0d5:	repz test al,0xd5
  40c0d8:	adc    al,0xf3
  40c0da:	lahf   
  40c0db:	es push 0xffffff8a
  40c0de:	sub    ecx,esp
  40c0e0:	movzx  ebx,WORD PTR [ebp-0x6c31906f]
  40c0e7:	mov    edi,0x636dadfd
  40c0ec:	repz push es
  40c0ee:	je     0x40c079
  40c0f0:	mov    ah,0xb4
  40c0f2:	jge    0x40c0b3
  40c0f4:	int3   
  40c0f5:	(bad)
  40c0f9:	push   ds
  40c0fa:	jge    0x40c167
  40c0fc:	xor    DWORD PTR [edi],eax
  40c0fe:	jo     0x40c121
  40c100:	(bad)  [edx-0x57]
  40c103:	add    edi,DWORD PTR [edx+0x14]
  40c106:	in     eax,dx
  40c107:	outs   dx,DWORD PTR ds:[esi]
  40c108:	xor    DWORD PTR [edi],eax
  40c10a:	dec    esi
  40c10b:	xlat   BYTE PTR ds:[ebx]
  40c10c:	int3   
  40c10d:	and    DWORD PTR [edx-0x56e10cfc],ebp
  40c113:	xor    eax,0x36000733
  40c118:	cli    
  40c119:	(bad)  
  40c11a:	adc    DWORD PTR [ecx-0x623d0e10],ebp
  40c120:	inc    DWORD PTR [ecx-0x7876ee09]
  40c126:	(bad)  
  40c127:	call   0x2972c975
  40c12c:	jns    0x40c0f7
  40c12e:	jae    0x40c11e
  40c130:	jno    0x40c135
  40c132:	push   esp
  40c133:	inc    ecx
  40c134:	add    BYTE PTR [eax],al
  40c136:	add    BYTE PTR [eax+0x29010106],dh
  40c13c:	xor    al,0x0
  40c13e:	jmp    0xe8f115f8
  40c143:	test   eax,0x7834c2bf
  40c148:	mov    ds:0x8778cd82,al
  40c14d:	jmp    0x40c13c
  40c14f:	in     eax,dx
  40c150:	push   es
  40c151:	add    BYTE PTR [edx],bl
  40c153:	lds    ebx,FWORD PTR [ebp-0x75]
  40c156:	cmp    al,0xf7
  40c158:	stc    
  40c159:	fisubr DWORD PTR [edx+0x55]
  40c15c:	pop    es
  40c15d:	mov    esp,ecx
  40c15f:	in     al,dx
  40c160:	jns    0x40c1a4
  40c162:	jmp    0xfcc9ce32
  40c167:	adc    BYTE PTR [edx+0x42],ah
  40c16a:	jmp    0x8148fcac
  40c16f:	std    
  40c170:	mov    al,0xfe
  40c172:	xchg   BYTE PTR [ebp+esi*2+0x74],dh
  40c176:	out    0xe2,al
  40c178:	jne    0x40c162
  40c17a:	mov    bh,0xf7
  40c17c:	push   es
  40c17d:	add    BYTE PTR [edx],bl
  40c17f:	pop    es
  40c180:	pop    es
  40c181:	add    cl,dh
  40c183:	lock pop ecx
  40c185:	push   esp
  40c187:	mov    BYTE PTR [edi],dl
  40c189:	inc    eax
  40c18a:	jmp    0xaaeb97e0
  40c18f:	lock icebp 
  40c191:	ret    0x6f00
  40c194:	sbb    bh,bh
  40c196:	adc    eax,0x4017e6
  40c19b:	add    BYTE PTR [eax],al
  40c19d:	add    BYTE PTR [ecx+0x69],ch
  40c1a0:	test   eax,0x1b818a43
  40c1a5:	in     al,0x21
  40c1a7:	dec    ecx
  40c1a8:	add    bl,ch
  40c1aa:	(bad)  
  40c1ab:	retf   
  40c1ac:	add    esp,esp
  40c1ae:	xor    DWORD PTR [ecx+0x0],ecx
  40c1b1:	add    DWORD PTR [eax+0x0],esi
  40c1b4:	mov    eax,0x491f80
  40c1b9:	pop    ecx
  40c1ba:	loop   0x40c1cd
  40c1bc:	add    eax,0x52
  40c1bf:	inc    edx
  40c1c0:	jne    0x40c1ba
  40c1c2:	shr    DWORD PTR [esi+0xb1a12f2],1
  40c1c8:	push   0x478fd8
  40c1cd:	(bad)  
  40c1ce:	jl     0x40c1b2
  40c1d0:	cmp    edi,DWORD PTR [eax-0x2900f4f7]
  40c1d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d7:	ds and al,0x10
  40c1da:	or     ah,bl
  40c1dc:	add    DWORD PTR [edx],eax
  40c1de:	or     cl,BYTE PTR [ecx]
  40c1e0:	mov    DWORD PTR ds:0x4232fe,ebx
  40c1e6:	push   ebp
  40c1e7:	sbb    eax,0xada15dc
  40c1ec:	mov    eax,DWORD PTR [ebp+0x12]
  40c1ef:	popa   
  40c1f0:	loop   0x40c1ed
  40c1f2:	gs jae 0x40c177
  40c1f5:	shr    dh,0x87
  40c1f8:	cmp    ebx,edi
  40c1fa:	fbld   TBYTE PTR [edi+0x7f05351]
  40c200:	push   0x58
  40c205:	push   ss
  40c206:	inc    esi
  40c207:	add    bh,bh
  40c209:	iret   
  40c20a:	xor    BYTE PTR [ecx],dl
  40c20c:	inc    eax
  40c20d:	fiadd  DWORD PTR [edi-0x6f0cfff5]
  40c213:	inc    eax
  40c214:	add    BYTE PTR [ecx+eax*4-0x61cf4e41],dh
  40c21b:	test   edx,0xff6029f4
  40c221:	pushf  
  40c222:	std    
  40c223:	stos   DWORD PTR es:[edi],eax
  40c224:	sub    al,0x97
  40c226:	in     eax,0xbc
  40c228:	xor    DWORD PTR [ebx-0x7bb17943],0x15
  40c22f:	mov    ebp,0xaaa606fe
  40c234:	pop    ebx
  40c235:	ja     0x40c23c
  40c237:	mov    ebp,0x86bd3383
  40c23c:	ds fs mov ch,0xbb
  40c240:	inc    BYTE PTR [esi]
  40c242:	pop    edx
  40c243:	adc    al,BYTE PTR [eax-0xd]
  40c246:	inc    eax
  40c247:	cwde   
  40c248:	scas   eax,DWORD PTR es:[edi]
  40c249:	mov    al,0x9d
  40c24b:	idiv   edx
  40c24d:	mov    esi,0x71488ee
  40c252:	mov    bh,BYTE PTR [edi]
  40c254:	add    BYTE PTR [ebx-0x43],cl
  40c257:	jecxz  0x40c25a
  40c259:	repz or cl,al
  40c25c:	push   cs
  40c25d:	outs   dx,DWORD PTR ds:[esi]
  40c25e:	sar    DWORD PTR [ebx+0x7091cfe],cl
  40c264:	xor    al,0x47
  40c266:	loope  0x40c26b
  40c268:	mov    ds:0xb000000,eax
  40c26d:	push   eax
  40c26e:	inc    eax
  40c26f:	add    al,cl
  40c271:	push   0x5a6e2f35
  40c276:	out    0x9f,eax
  40c278:	repnz popf 
  40c27a:	add    ch,al
  40c27c:	loop   0x40c21e
  40c27e:	add    al,BYTE PTR [eax]
  40c280:	inc    eax
  40c281:	and    eax,DWORD PTR [edi+0x2a2ae23]
  40c287:	add    BYTE PTR [ebx+0x25],al
  40c28a:	imul   BYTE PTR [ebx]
  40c28c:	lahf   
  40c28d:	push   es
  40c28e:	stos   BYTE PTR es:[edi],al
  40c28f:	add    ecx,DWORD PTR [edx-0xcbf65a2]
  40c295:	push   ds
  40c296:	jno    0x40c30b
  40c298:	xor    DWORD PTR [edi],eax
  40c29a:	xchg   ecx,eax
  40c29b:	adc    DWORD PTR [eax-0x2d549369],eax
  40c2a1:	in     al,dx
  40c2a2:	jmp    0x27ab:0xe1399c03
  40c2a9:	mov    bl,0x2d
  40c2ab:	mov    esp,0x87f5c670
  40c2b0:	mov    ch,0xb4
  40c2b2:	sbb    eax,0xe14986bc
  40c2b7:	add    edi,edi
  40c2b9:	or     eax,DWORD PTR [ecx]
  40c2bb:	mov    cl,0x68
  40c2bd:	mov    bl,0x5
  40c2bf:	test   al,0xf2
  40c2c1:	jbe    0x40c2aa
  40c2c3:	stc    
  40c2c4:	xor    DWORD PTR [ebx],eax
  40c2c6:	pop    esp
  40c2c7:	ret    
  40c2c8:	mov    ch,0x54
  40c2ca:	xchg   edx,eax
  40c2cb:	mov    BYTE PTR [edi+0x51],dl
  40c2ce:	stos   DWORD PTR es:[edi],eax
  40c2cf:	add    BYTE PTR [eax],al
  40c2d1:	add    BYTE PTR [eax],al
  40c2d3:	repz pop ecx
  40c2d5:	jb     0x40c27f
  40c2d7:	jno    0x40c283
  40c2d9:	rol    BYTE PTR [ebp+0x3e5a648],1
  40c2df:	repz pop esp
  40c2e1:	push   ds
  40c2e2:	mov    DWORD PTR [eax-0x16],ebp
  40c2e5:	dec    eax
  40c2e6:	push   es
  40c2e7:	repz push es
  40c2e9:	rol    DWORD PTR [ebx-0x7716f90f],0x80
  40c2f0:	jmp    0x3e7:0xedfeac1a
  40c2f7:	push   0xf3058e86
  40c2fc:	push   es
  40c2fd:	add    eax,DWORD PTR [esi]
  40c2ff:	jle    0x40c284
  40c301:	int3   
  40c302:	mov    dh,ch
  40c304:	push   es
  40c305:	jmp    0x7d9f5e
  40c30a:	loope  0x40c377
  40c30c:	ds and al,0xd5
  40c30f:	sbb    BYTE PTR [edi-0x610f5551],cl
  40c315:	mov    al,0x4
  40c317:	cmc    
  40c318:	push   es
  40c319:	mov    ecx,0x6ee47
  40c31e:	bound  esi,QWORD PTR [ecx+0x30e8ffcc]
  40c324:	inc    eax
  40c325:	jne    0x40c367
  40c327:	push   0x46
  40c329:	and    al,0xe1
  40c32b:	inc    eax
  40c32c:	sbb    eax,0x6328c101
  40c331:	inc    edx
  40c332:	jmp    0xf898de80
  40c337:	add    BYTE PTR [eax],al
  40c339:	add    BYTE PTR [eax],dh
  40c33b:	pop    es
  40c33c:	mov    ebx,DWORD PTR [ecx]
  40c33e:	jb     0x40c2fc
  40c340:	jae    0x40c339
  40c342:	test   eax,0xb0d8181b
  40c347:	push   es
  40c348:	cmp    eax,0x6f736
  40c34d:	jl     0x40c336
  40c34f:	pop    eax
  40c350:	call   esp
  40c352:	rcl    BYTE PTR [edi],1
  40c354:	inc    eax
  40c355:	jmp    0x729f7f97
  40c35a:	xor    dl,BYTE PTR [ebx+ecx*4-0x34]
  40c35e:	fwait
  40c35f:	les    eax,FWORD PTR [ebx]
  40c361:	jmp    0x6b2c4129
  40c366:	test   BYTE PTR [edx+0xb74cd80],bh
  40c36c:	add    cl,ch
  40c36e:	rol    DWORD PTR [ebx-0x6100fa85],0x0
  40c375:	jmp    0x7de7:0x14ff06f0
  40c37c:	dec    esp
  40c37d:	in     eax,0x6b
  40c37f:	xchg   BYTE PTR [ebx],ah
  40c381:	aam    0xec
  40c383:	mov    cl,0xfe
  40c385:	add    BYTE PTR [edx],cl
  40c387:	outs   dx,BYTE PTR ds:[esi]
  40c388:	xor    ebp,DWORD PTR [esi+ebp*1]
  40c38b:	dec    ecx
  40c38c:	add    BYTE PTR [ebx-0x6797fcf9],cl
  40c392:	or     cl,BYTE PTR [ecx+0x0]
  40c395:	call   0x416b80
  40c39a:	jge    0x40c31c
  40c39c:	jecxz  0x40c3fb
  40c39e:	add    BYTE PTR [eax],al
  40c3a0:	add    BYTE PTR [eax],cl
  40c3a2:	or     al,BYTE PTR [eax]
  40c3a4:	push   ebp
  40c3a5:	adc    DWORD PTR [edx-0x7f],ebp
  40c3a8:	in     al,dx
  40c3a9:	ret    0xff57
  40c3ac:	jne    0x40c33c
  40c3ae:	jle    0x40c3f3
  40c3b0:	cwde   
  40c3b1:	jp     0x40c41f
  40c3b3:	jae    0x40c3bd
  40c3b5:	xor    ch,BYTE PTR [edx]
  40c3b7:	(bad)  
  40c3b8:	dec    ebp
  40c3ba:	jle    0x40c3ff
  40c3bc:	cwde   
  40c3bd:	cmp    ah,bl
  40c3bf:	jmp    DWORD PTR [edi+0x42]
  40c3c2:	sub    DWORD PTR [edx+0x0],eax
  40c3c5:	std    
  40c3c6:	push   ss
  40c3c7:	pop    eax
  40c3c8:	adc    DWORD PTR [edx-0x280f74fb],ebx
  40c3ce:	ja     0x40c442
  40c3d0:	sbb    esi,DWORD PTR [eax+0x6c]
  40c3d3:	push   esp
  40c3d4:	jmp    DWORD PTR [edi]
  40c3d6:	adc    eax,0x305a4013
  40c3db:	mov    edi,0x7eb84774
  40c3e0:	add    BYTE PTR [edx+0x5],cl
  40c3e3:	je     0x40c3f3
  40c3e5:	in     al,0x6f
  40c3e7:	adc    esp,DWORD PTR [eax+0x33004548]
  40c3ed:	dec    edx
  40c3ee:	dec    esp
  40c3ef:	leave  
  40c3f0:	ret    0x512
  40c3f3:	mov    eax,esi
  40c3f5:	xor    DWORD PTR [edi+0x53],esi
  40c3f8:	mov    ebx,DWORD PTR [esi+0x55]
  40c3fb:	push   ecx
  40c3fc:	mov    ecx,DWORD PTR [edi]
  40c3fe:	mov    eax,ds:0x9ff343aa
  40c403:	push   ebx
  40c404:	push   edi
  40c405:	add    BYTE PTR [eax],al
  40c407:	add    bl,bl
  40c409:	dec    edi
  40c40a:	loop   0x40c40d
  40c40c:	rep ins BYTE PTR es:[edi],dx
  40c40e:	fisttp DWORD PTR [eax-0x3d0379ca]
  40c414:	pop    esi
  40c415:	mov    eax,ds:0x6bdabff3
  40c41a:	add    eax,DWORD PTR [eax]
  40c41c:	repz rol DWORD PTR [ebx+edx*2],cl
  40c420:	and    BYTE PTR [ebx],ah
  40c422:	aas    
  40c423:	or     BYTE PTR [ebx],ah
  40c425:	jno    0x40c3de
  40c427:	je     0x40c424
  40c429:	and    eax,0x4919ff57
  40c42e:	mov    ecx,0x42cc5714
  40c433:	add    BYTE PTR [esi-0x22],ch
  40c436:	cs add al,0xb5
  40c439:	imul   esi,DWORD PTR [edi+0x66be5200],0x42
  40c440:	repz sbb al,0xa4
  40c443:	adc    ebp,edx
  40c445:	bound  eax,QWORD PTR [esi]
  40c447:	push   esi
  40c448:	js     0x40c425
  40c44a:	mov    ss,WORD PTR [ecx]
  40c44c:	mov    bl,0x9d
  40c44e:	push   ebx
  40c44f:	mov    eax,0x454213
  40c454:	or     BYTE PTR [ebx-0x624f5412],ah
  40c45a:	sub    al,0x4
  40c45c:	lock loop 0x40c41a
  40c45f:	mov    WORD PTR [esi-0x63afae5f],gs
  40c465:	fcom   st(0)
  40c467:	test   BYTE PTR [ebx],dh
  40c469:	pop    ebx
  40c46a:	add    eax,0xfe
  40c46f:	scas   al,BYTE PTR es:[edi]
  40c470:	enter  0xb853,0xe7
  40c474:	add    DWORD PTR [ebx+0x0],0xabeea2c8
  40c47b:	mov    al,0x9d
  40c47d:	sub    al,0x4
  40c47f:	lock push es
  40c481:	sub    al,0xbc
  40c483:	outs   dx,DWORD PTR ds:[esi]
  40c484:	inc    edx
  40c485:	mov    eax,ds:0x9657a352
  40c48a:	ror    DWORD PTR [esi-0x76],1
  40c48d:	test   al,0x2e
  40c48f:	lock mov al,0x2b
  40c492:	mov    ecx,0x757cf9dd
  40c497:	xor    DWORD PTR [edi],eax
  40c499:	xor    DWORD PTR [edi-0x4716bc7e],esi
  40c49f:	aas    
  40c4a0:	scas   eax,DWORD PTR es:[edi]
  40c4a1:	mov    ebp,0x5db76bab
  40c4a6:	mov    eax,0x4dbc670
  40c4ab:	lods   eax,DWORD PTR ds:[esi]
  40c4ac:	dec    ecx
  40c4ad:	dec    esi
  40c4ae:	mov    eax,0x447a06df
  40c4b3:	rep outs dx,BYTE PTR ds:[esi]
  40c4b5:	call   0x3647f62e
  40c4ba:	mov    edx,DWORD PTR cs:[edi+0x41]
  40c4be:	sub    DWORD PTR [edi+ebp*4+0x25],edi
  40c4c2:	jg     0x40c500
  40c4c4:	cmp    edx,ebp
  40c4c6:	mov    ecx,0x56d0b02f
  40c4cb:	ins    BYTE PTR es:[edi],dx
  40c4cc:	cmp    dh,ah
  40c4ce:	sub    esi,ebx
  40c4d0:	xchg   al,ch
  40c4d2:	add    eax,DWORD PTR [eax]
  40c4d4:	add    BYTE PTR [eax],al
  40c4d6:	shr    BYTE PTR [edi-0x5042448d],0xdb
  40c4dd:	(bad)  
  40c4de:	loop   0x40c526
  40c4e0:	jmp    0xe5f0c28f
  40c4e5:	mov    bh,0x69
  40c4e7:	dec    ecx
  40c4e8:	loope  0x40c545
  40c4ea:	sub    al,ah
  40c4ec:	loopne 0x40c4f1
  40c4ee:	cdq    
  40c4ef:	push   es
  40c4f0:	into   
  40c4f1:	icebp  
  40c4f2:	sub    BYTE PTR [ecx+ebp*1+0x4],dh
  40c4f6:	sbb    al,0x19
  40c4f8:	fst    DWORD PTR [edx]
  40c4fa:	mov    bl,0x6
  40c4fc:	add    BYTE PTR [esi-0x493ff3d1],bh
  40c502:	daa    
  40c503:	les    edx,FWORD PTR [esp+esi*2-0x35]
  40c507:	jmp    0xe902:0x34b688b
  40c50e:	lock push esp
  40c510:	lea    esp,[ebx+edx*1]
  40c513:	push   edi
  40c514:	lea    ebp,[edi+ecx*4]
  40c517:	ds (bad) 
  40c519:	and    al,0x13
  40c51b:	(bad)  
  40c51d:	call   0x91557312
  40c522:	loope  0x40c56a
  40c524:	add    BYTE PTR [edi+esi*4+0x33],ch
  40c528:	or     eax,0xb79f026c
  40c52d:	lahf   
  40c52e:	test   DWORD PTR [esi],0x46a84100
  40c534:	add    ecx,ebp
  40c536:	imul   esi,ebx,0xd733
  40c53c:	add    BYTE PTR [eax],dh
  40c53e:	pop    es
  40c53f:	push   ebx
  40c540:	sahf   
  40c541:	or     DWORD PTR [edx],edx
  40c543:	add    ecx,ebp
  40c545:	lock pop ecx
  40c547:	xor    esp,DWORD PTR [esi]
  40c549:	push   0xffffff83
  40c54b:	outs   dx,DWORD PTR ds:[esi]
  40c54c:	pop    ds
  40c54d:	cmp    al,0xad
  40c54f:	push   esi
  40c550:	mov    ecx,0x2582d4a5
  40c555:	sti    
  40c556:	jnp    0x40c4dc
  40c558:	jns    0x40c500
  40c55a:	lods   eax,DWORD PTR ds:[esi]
  40c55b:	(bad)  
  40c55c:	cdq    
  40c55d:	mov    ebp,DWORD PTR [bx-0x9]
  40c561:	test   DWORD PTR [ebp+0x1884d4fe],ebp
  40c567:	inc    eax
  40c568:	jmp    0xf0b533e0
  40c56d:	mov    eax,ds:0x6559847b
  40c572:	lods   eax,DWORD PTR ds:[esi]
  40c573:	inc    dl
  40c575:	stc    
  40c576:	push   ds
  40c577:	add    BYTE PTR [eax],al
  40c579:	or     ecx,DWORD PTR [edx]
  40c57b:	add    BYTE PTR [ebp-0x2d271],cl
  40c581:	inc    ebp
  40c582:	cmp    eax,0x895cff50
  40c587:	ret    0x870c
  40c58a:	test   BYTE PTR [ebx+0x99bb8],0x0
  40c591:	jb     0x40c567
  40c593:	inc    ebp
  40c594:	add    edx,ebx
  40c596:	jle    0x40c60b
  40c598:	inc    eax
  40c599:	xor    bh,BYTE PTR [eax]
  40c59b:	(bad)  
  40c59c:	dec    edx
  40c59e:	popa   
  40c59f:	rol    BYTE PTR [edi+0x0],1
  40c5a2:	add    BYTE PTR [eax],al
  40c5a4:	fisttp DWORD PTR [ecx]
  40c5a6:	mov    eax,esi
  40c5a8:	jmp    0x134:0x7a8c437f
  40c5af:	add    dl,cl
  40c5b1:	mov    DWORD PTR [ecx-0x2891cd39],ecx
  40c5b7:	add    DWORD PTR [edx+0x275c437a],ebx
  40c5bd:	div    DWORD PTR [edi]
  40c5bf:	mov    eax,0xa19
  40c5c4:	xor    ah,BYTE PTR ds:0x7e9a0146
  40c5ca:	inc    ebx
  40c5cb:	jo     0x40c607
  40c5cd:	fild   WORD PTR [eax]
  40c5cf:	xor    ebx,esp
  40c5d1:	cmp    ecx,DWORD PTR [ebp+0x5759d645]
  40c5d7:	mov    DWORD PTR [edi-0x1b],edi
  40c5da:	mov    BYTE PTR [ebp-0x26],bh
  40c5dd:	jp     0x40c652
  40c5df:	push   0x106ffd55
  40c5e4:	call   0x8d18:0xbfc08509
  40c5eb:	inc    ebp
  40c5ec:	mov    ds:0xf8d5652,al
  40c5f1:	stos   DWORD PTR es:[edi],eax
  40c5f2:	dec    esi
  40c5f3:	(bad)  
  40c5f4:	repz push edx
  40c5f6:	xor    al,0xe8
  40c5f8:	(bad)  
  40c5f9:	jns    0x40c5fd
  40c5fb:	add    BYTE PTR [eax],cl
  40c5fd:	mov    al,ds:0x2014c77f
  40c602:	mov    esp,0xf7d887fe
  40c607:	lds    eax,FWORD PTR [eax]
  40c609:	add    BYTE PTR [eax],al
  40c60b:	jge    0x40c5e1
  40c60d:	push   edx
  40c60e:	inc    DWORD PTR [esi-0x788378e9]
  40c614:	sbb    DWORD PTR [edx],eax
  40c616:	pop    eax
  40c617:	fisttp DWORD PTR [eax]
  40c619:	push   es
  40c61a:	add    bl,dh
  40c61c:	jl     0x40c64c
  40c61e:	push   0xfeb2a4cb
  40c623:	aam    0x39
  40c625:	aas    
  40c626:	ins    BYTE PTR es:[edi],dx
  40c627:	jp     0x40c604
  40c629:	and    ecx,DWORD PTR [ebp-0x4c8421c2]
  40c62f:	repz popf 
  40c631:	add    ch,al
  40c633:	cs add DWORD PTR gs:[eax],eax
  40c637:	inc    eax
  40c638:	and    edi,DWORD PTR [edi+0x6f]
  40c63b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c63c:	cmp    eax,0xa0094fb5
  40c641:	test   DWORD PTR [ebx+eiz*1+0x66],edi
  40c645:	stos   BYTE PTR es:[edi],al
  40c646:	cmp    edi,ebp
  40c648:	popf   
  40c649:	add    ch,BYTE PTR [edx-0x5]
  40c64c:	dec    edx
  40c64d:	aas    
  40c64e:	pop    esp
  40c64f:	and    ebx,DWORD PTR [eax+0x79f68d00]
  40c655:	pop    edx
  40c656:	call   0x436a73
  40c65b:	fs xchg ebx,eax
  40c65d:	lea    esi,es:[esi-0x1c8b4aeb]
  40c664:	lea    eax,[edi+0x372b78c5]
  40c66a:	push   eax
  40c66b:	fstp   DWORD PTR [ecx+0x57]
  40c66e:	mov    eax,DWORD PTR [eax]
  40c670:	add    BYTE PTR [eax],al
  40c672:	cmp    eax,0x169d107
  40c677:	pop    es
  40c678:	jmp    0x3657f6fd
  40c67d:	mov    ebp,DWORD PTR [edi+0x24813222]
  40c683:	push   es
  40c684:	inc    esp
  40c685:	or     bl,BYTE PTR [ebx+0x72]
  40c688:	call   0xb8dfb990
  40c68d:	cmp    eax,0x810f06f2
  40c692:	aaa    
  40c693:	xor    esi,DWORD PTR [eax+0x3706f0c1]
  40c699:	jbe    0x40c70f
  40c69b:	add    ecx,ebp
  40c69d:	add    edi,DWORD PTR ds:0x3322e11f
  40c6a3:	pop    es
  40c6a4:	push   ds
  40c6a5:	mov    ch,0xff
  40c6a7:	not    dh
  40c6a9:	inc    ebx
  40c6aa:	repz jg 0x40c690
  40c6ad:	mov    ebx,0xe94782
  40c6b2:	out    dx,al
  40c6b3:	repnz xchg esp,eax
  40c6b5:	inc    eax
  40c6b6:	xrelease xchg DWORD PTR [edi+eax*1],esp
  40c6ba:	js     0x40c67f
  40c6bc:	add    ebp,eax
  40c6be:	jp     0x40c6d2
  40c6c0:	call   0xb787b3b8
  40c6c5:	cs pushf 
  40c6c7:	dec    esp
  40c6c8:	sub    cl,BYTE PTR [esi+0x78]
  40c6cb:	call   0x3e9:0x7f4a767
  40c6d2:	and    BYTE PTR [edi],bl
  40c6d4:	jno    0x40c6d4
  40c6d6:	add    BYTE PTR [eax],al
  40c6d8:	add    BYTE PTR [ebx+ebp*4-0x70],dh
  40c6dc:	or     edx,edx
  40c6de:	inc    esi
  40c6df:	jmp    0xef3366a
  40c6e4:	mov    ah,0x5d
  40c6e6:	sahf   
  40c6e7:	aam    0x4d
  40c6e9:	repnz push es
  40c6eb:	jb     0x40c6f2
  40c6ed:	mov    ds:0xf8abff7f,eax
  40c6f2:	sahf   
  40c6f3:	daa    
  40c6f4:	xchg   edi,eax
  40c6f5:	lock push es
  40c6f7:	(bad)  
  40c6f8:	out    dx,eax
  40c6f9:	lock or BYTE PTR [eax],al
  40c6fc:	jmp    0xdb4327c
  40c701:	jb     0x40c77d
  40c703:	repz iret 
  40c705:	pusha  
  40c706:	lods   al,BYTE PTR ds:[esi]
  40c707:	push   eax
  40c708:	pop    ds
  40c709:	mov    edi,0x43b59c79
  40c70e:	lods   al,BYTE PTR ds:[esi]
  40c70f:	inc    cl
  40c711:	addr16 push edi
  40c713:	add    cl,ch
  40c715:	je     0x40c782
  40c717:	jae    0x40c70e
  40c719:	inc    ecx
  40c71a:	icebp  
  40c71b:	mov    ch,BYTE PTR [edx-0x796b60b9]
  40c721:	mov    al,ds:0xe5ebeaa9
  40c726:	push   0x5a
  40c728:	mov    al,0xad
  40c72a:	push   es
  40c72b:	add    BYTE PTR [esp+ecx*2],dl
  40c72e:	sahf   
  40c72f:	add    BYTE PTR [ebp-0x16fff829],0x25
  40c736:	push   ecx
  40c737:	push   edi
  40c738:	mov    ds:0xe90007db,al
  40c73d:	add    BYTE PTR [eax],al
  40c73f:	add    BYTE PTR [ebp+0x7e],al
  40c742:	test   ecx,0xe9403538
  40c748:	jae    0x40c6cd
  40c74a:	retf   
  40c74b:	inc    edi
  40c74c:	pusha  
  40c74d:	test   eax,0xaf3a264f
  40c752:	jmp    0xe85b26e0
  40c757:	call   DWORD PTR [ecx-0x57]
  40c75a:	(bad)  
  40c75b:	fidivr DWORD PTR [edx]
  40c75d:	cmc    
  40c75e:	mov    edi,0xf803b373
  40c763:	ftst   
  40c765:	repnz retf 
  40c767:	push   fs
  40c769:	test   eax,0x5ac9003f
  40c76e:	add    dh,BYTE PTR [ebp+0x58]
  40c771:	mov    cl,0xbe
  40c773:	inc    esi
  40c774:	xor    DWORD PTR [ecx+0x70],0x3ec679e8
  40c77b:	lea    edx,[edi+0x2193e68a]
  40c781:	push   es
  40c782:	add    BYTE PTR [ebx-0x73019149],al
  40c788:	xchg   edi,eax
  40c789:	imul   edi,esp,0x8b562dff
  40c78f:	(bad)  
  40c790:	and    bh,cl
  40c792:	repnz add BYTE PTR [edx],bl
  40c795:	cmp    BYTE PTR [esi-0x3ad6298c],0xe8
  40c79c:	mov    cl,0x71
  40c79e:	(bad)  
  40c79f:	jmp    DWORD PTR [ecx+0x76]
  40c7a2:	xchg   DWORD PTR [ebp+0x0],esi
  40c7a5:	add    BYTE PTR [eax],al
  40c7a7:	cmp    BYTE PTR [esi-0xc],0x7e
  40c7ab:	(bad)  
  40c7ac:	cwde   
  40c7ad:	cld    
  40c7ae:	jbe    0x40c74a
  40c7b0:	enter  0x57fc,0x4d
  40c7b4:	out    dx,eax
  40c7b5:	pop    es
  40c7b6:	lea    edx,[edi]
  40c7b8:	mov    esp,esi
  40c7ba:	fcom   st(1)
  40c7bc:	add    eax,0xf20a8400
  40c7c1:	sbb    eax,0x89adcf03
  40c7c6:	(bad)  
  40c7c7:	xchg   BYTE PTR gs:[ebx-0x18],bh
  40c7cb:	xor    dh,ah
  40c7cd:	repnz add BYTE PTR [edx-0x618b417f],cl
  40c7d4:	sub    dh,dh
  40c7d6:	call   0x3f3bb4
  40c7db:	adc    edi,ebp
  40c7dd:	imul   ebx
  40c7df:	add    BYTE PTR [esi+0x3002e873],0xf1
  40c7e6:	add    bl,dh
  40c7e8:	lahf   
  40c7e9:	cmc    
  40c7ea:	cmc    
  40c7eb:	ror    BYTE PTR [edx-0x78],0xcb
  40c7ef:	push   ebp
  40c7f0:	add    BYTE PTR [edx-0x4e700c97],dh
  40c7f6:	adc    al,0xff
  40c7f8:	leave  
  40c7f9:	inc    edx
  40c7fa:	add    BYTE PTR [eax-0x1d],dh
  40c7fd:	(bad)  
  40c7fe:	pop    esi
  40c7ff:	push   0x3a5b5159
  40c804:	pop    ebp
  40c805:	pop    es
  40c806:	add    BYTE PTR [esi+0x80a024],bh
  40c80c:	add    BYTE PTR [eax],al
  40c80e:	comiss xmm0,DWORD PTR [edi]
  40c811:	add    bl,dh
  40c813:	or     al,0x5a
  40c815:	push   edi
  40c816:	cdq    
  40c817:	add    ebx,DWORD PTR [edi+edx*1+0x32b07015]
  40c81e:	sbb    BYTE PTR [ebx+eax*8-0x4bcb158d],dh
  40c825:	out    0xa1,eax
  40c827:	add    DWORD PTR [edx],0xf39cd800
  40c82d:	mov    edi,0x425ea690
  40c832:	(bad)
  40c837:	mov    ds:0x3ef30001,al
  40c83c:	in     al,0xab
  40c83e:	xor    BYTE PTR [esi-0x621b20a7],bl
  40c844:	add    cl,BYTE PTR [edi]
  40c846:	ja     0x40c89a
  40c848:	add    al,0x0
  40c84a:	xrelease xchg BYTE PTR [ebx],al
  40c84d:	or     bl,dh
  40c84f:	popf   
  40c850:	sub    ecx,DWORD PTR ss:[ebx]
  40c853:	dec    edx
  40c854:	pop    es
  40c855:	add    bl,dh
  40c857:	push   ebp
  40c858:	retf   
  40c859:	in     al,dx
  40c85a:	test   cl,dh
  40c85c:	in     al,dx
  40c85d:	ret    0xcf07
  40c860:	scas   eax,DWORD PTR es:[edi]
  40c861:	xor    al,0x77
  40c863:	pop    es
  40c864:	pop    ebx
  40c865:	inc    ebp
  40c866:	repz jnp 0x40c881
  40c869:	pushf  
  40c86a:	jmp    0x40c84c
  40c86c:	out    0x3,eax
  40c86e:	push   0x601b7
  40c873:	add    BYTE PTR [eax],al
  40c875:	and    BYTE PTR [ecx+0x4498fc47],dh
  40c87b:	jmp    0xe7bc5a1b
  40c880:	add    eax,DWORD PTR [ebp+0x2]
  40c883:	leave  
  40c884:	pop    edi
  40c885:	mov    cl,0x6
  40c887:	or     DWORD PTR [eax],edi
  40c889:	clc    
  40c88a:	jns    0x40c827
  40c88c:	aaa    
  40c88d:	sub    DWORD PTR [eax-0x56f9642b],ebp
  40c893:	int    0xb0
  40c895:	sbb    eax,0xb1600902
  40c89a:	push   es
  40c89b:	jmp    0x3d47bba2
  40c8a0:	adc    eax,0x5fe0ea68
  40c8a5:	mov    cl,0x6
  40c8a7:	cmp    dl,BYTE PTR [ebp+0x5b]
  40c8aa:	adc    edx,ebx
  40c8ac:	inc    edx
  40c8ad:	repz push ebx
  40c8af:	and    DWORD PTR [eax-0x4616fa2b],0x4454e6ef
  40c8b9:	repz inc esi
  40c8bb:	cmc    
  40c8bc:	aas    
  40c8bd:	pop    ecx
  40c8be:	sti    
  40c8bf:	xor    BYTE PTR [esi],0xce
  40c8c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8c3:	ins    DWORD PTR es:[edi],dx
  40c8c4:	jo     0x40c88a
  40c8c6:	jl     0x40c870
  40c8c8:	add    ebp,eax
  40c8ca:	ret    
  40c8cb:	aam    0xff
  40c8cd:	jnp    0x40c8bd
  40c8cf:	pusha  
  40c8d0:	dec    ebx
  40c8d1:	idiv   DWORD PTR [ebp-0x50]
  40c8d4:	sti    
  40c8d5:	imul   esi,DWORD PTR [esi+0x551],0x87b0c000
  40c8df:	sti    
  40c8e0:	pop    eax
  40c8e1:	inc    ebx
  40c8e2:	add    cl,ch
  40c8e4:	pop    eax
  40c8e5:	call   0x1d31b175
  40c8ea:	or     al,0x11
  40c8ec:	sub    eax,0x571efe9a
  40c8f1:	les    esi,FWORD PTR [ebx-0x1c]
  40c8f4:	(bad)  
  40c8f6:	lds    ebp,FWORD PTR [ecx-0x5e76fa14]
  40c8fc:	dec    eax
  40c8fd:	jl     0x40c8ee
  40c8ff:	adc    ch,dh
  40c901:	repz cmc 
  40c903:	dec    eax
  40c904:	cmp    BYTE PTR [ebx+0x42],bl
  40c907:	jmp    0xe8ccd564
  40c90c:	lock mov al,0x4
  40c90f:	or     DWORD PTR [ebx-0x2496ffbc],edx
  40c915:	sti    
  40c916:	mov    bl,ah
  40c918:	sbb    BYTE PTR [ebx+0x42],bl
  40c91b:	jmp    0xeb520788
  40c920:	lock out dx,al
  40c922:	pop    esp
  40c923:	loope  0x40c8e9
  40c925:	in     eax,0x8a
  40c927:	hlt    
  40c928:	clc    
  40c929:	pop    edx
  40c92a:	inc    edx
  40c92b:	jmp    0xe928a3b8
  40c930:	lock addr16 pop es
  40c933:	inc    ebp
  40c934:	xor    BYTE PTR [edi],al
  40c936:	mov    ebx,DWORD PTR [ecx-0xd8c3638]
  40c93c:	push   0xe8e560
  40c941:	add    BYTE PTR [eax],al
  40c943:	lock cmp al,0xe8
  40c946:	fist   WORD PTR [ebx+0x250efea5]
  40c94c:	inc    edx
  40c94d:	leave  
  40c94e:	sub    edi,ebx
  40c950:	push   es
  40c951:	push   ebp
  40c952:	jb     0x40c9a7
  40c954:	xchg   ebx,ebp
  40c956:	in     eax,0xf2
  40c958:	push   es
  40c959:	add    BYTE PTR [edx+ebp*1+0xf],bl
  40c95d:	push   eax
  40c95e:	add    BYTE PTR ds:0x4fc607e0,dh
  40c964:	jne    0x40c964
  40c966:	(bad)  
  40c967:	lahf   
  40c968:	push   cs
  40c969:	adc    BYTE PTR [eax-0x76],al
  40c96c:	(bad)  
  40c96d:	mov    esi,0x57398374
  40c972:	(bad)  
  40c973:	jg     0x40c917
  40c975:	mov    ecx,0xa4b04
  40c97a:	push   0x3fde6a
  40c97f:	(bad)  
  40c980:	pop    ss
  40c981:	repz std 
  40c983:	inc    ebp
  40c984:	jne    0x40c96c
  40c986:	mov    ah,0x7a
  40c988:	or     al,BYTE PTR [eax]
  40c98a:	pop    ecx
  40c98b:	arpl   WORD PTR [edi+0x2d47ebe],cx
  40c991:	fdiv   DWORD PTR [edx+ebx*8+0xa]
  40c995:	mov    eax,edi
  40c997:	fidiv  DWORD PTR [edx]
  40c999:	add    DWORD PTR [eax],eax
  40c99b:	or     cl,BYTE PTR [edx+0xb6f45e6]
  40c9a1:	add    BYTE PTR [ebp-0x7cd821a6],al
  40c9a7:	add    BYTE PTR [eax],al
  40c9a9:	add    BYTE PTR [edx+0x75],al
  40c9ac:	jb     0x40c9d1
  40c9ae:	xchg   ecx,eax
  40c9af:	int3   
  40c9b0:	dec    esi
  40c9b1:	(bad)  
  40c9b2:	out    dx,eax
  40c9b3:	in     eax,dx
  40c9b4:	adc    al,BYTE PTR [eax-0x26]
  40c9b7:	cmp    bh,bh
  40c9b9:	jne    0x40c991
  40c9bb:	and    dh,al
  40c9bd:	push   eax
  40c9be:	inc    BYTE PTR gs:[ebx+0x11]
  40c9c2:	sbb    cl,BYTE PTR [ebx]
  40c9c4:	dec    eax
  40c9c5:	lea    eax,[ecx]
  40c9c7:	jbe    0x40ca02
  40c9c9:	enter  0xc9a0,0xfc
  40c9cd:	rcl    BYTE PTR [edx+0x4f],0xff
  40c9d1:	dec    edi
  40c9d3:	mov    eax,ds:0xf77215fd
  40c9d8:	aas    
  40c9d9:	add    bl,dh
  40c9db:	pop    esp
  40c9dc:	dec    ecx
  40c9dd:	mov    ch,BYTE PTR [esi]
  40c9df:	push   ebp
  40c9e0:	mov    esp,0x57affbc1
  40c9e5:	mov    edx,DWORD PTR [edi+0x9f7a730]
  40c9eb:	mov    cl,0x9a
  40c9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ee:	jl     0x40c9e4
  40c9f0:	lods   eax,DWORD PTR ds:[esi]
  40c9f1:	xor    DWORD PTR [ebx],0xffffff83
  40c9f4:	adc    ch,BYTE PTR [edx-0xd]
  40c9f7:	test   DWORD PTR [esi+edi*8],0xc69afc5c
  40c9fe:	mov    bl,0xaf
  40ca00:	add    dh,BYTE PTR [eax+0x3200f8f2]
  40ca06:	xor    ebx,DWORD PTR [eax]
  40ca08:	test   al,0x5c
  40ca0a:	xor    BYTE PTR [edi],al
  40ca0c:	xlat   BYTE PTR ds:[ebx]
  40ca0d:	inc    BYTE PTR [eax]
  40ca0f:	add    BYTE PTR [eax],al
  40ca11:	xor    al,0xb4
  40ca13:	test   DWORD PTR [edi+0x1a15a7],edi
  40ca19:	and    al,0x9a
  40ca1b:	rcl    BYTE PTR [ecx],cl
  40ca1d:	mov    bl,0xaf
  40ca1f:	imul   ecx,DWORD PTR [ecx+edi*4-0x51],0x97ca6602
  40ca27:	xor    eax,0xefd77814
  40ca2c:	cmp    BYTE PTR [edi-0xcbaad52],0xaf
  40ca33:	xor    eax,0x2da7808
  40ca38:	sub    al,dh
  40ca3a:	push   ebp
  40ca3b:	lods   al,BYTE PTR ds:[esi]
  40ca3c:	loopne 0x40ca5e
  40ca3e:	outs   dx,BYTE PTR ds:[esi]
  40ca3f:	shl    bh,0x91
  40ca42:	xchg   ebp,eax
  40ca43:	lods   al,BYTE PTR ds:[esi]
  40ca44:	inc    BYTE PTR [eax]
  40ca46:	outs   dx,BYTE PTR ds:[esi]
  40ca47:	rol    DWORD PTR [ebx],0xf3
  40ca4a:	cli    
  40ca4b:	js     0x40ca38
  40ca4d:	jo     0x40c9d9
  40ca4f:	sbb    edx,DWORD PTR [ebx+0x1d]
  40ca52:	pusha  
  40ca53:	(bad)  
  40ca54:	push   cs
  40ca55:	gs pop es
  40ca57:	pop    edx
  40ca58:	sbb    dh,cl
  40ca5a:	xchg   ecx,eax
  40ca5b:	mov    ds:0x1c922c8b,eax
  40ca60:	ja     0x40c9fa
  40ca62:	sbb    ebp,DWORD PTR [ecx+0x50dd8c03]
  40ca68:	in     al,dx
  40ca69:	mov    esp,DWORD PTR [ebp+edi*1-0x6780c881]
  40ca70:	fwait
  40ca71:	mov    eax,0x3eb01
  40ca76:	add    BYTE PTR [eax],al
  40ca78:	ja     0x40ca41
  40ca7a:	fwait
  40ca7b:	out    0xda,al
  40ca7d:	add    eax,0x377b476c
  40ca82:	push   ss
  40ca83:	test   BYTE PTR [ebp+eax*1+0x10],0xad
  40ca88:	dec    ebp
  40ca89:	xchg   edx,eax
  40ca8a:	stos   DWORD PTR es:[edi],eax
  40ca8b:	mov    esi,DWORD PTR [esi+ebp*4+0x6f10eca]
  40ca92:	ins    DWORD PTR es:[edi],dx
  40ca93:	les    edi,FWORD PTR [edi-0x533f10f1]
  40ca99:	lahf   
  40ca9a:	jmp    0x40cacd
  40ca9c:	push   0x31bb4245
  40caa1:	push   edi
  40caa2:	out    0x98,eax
  40caa4:	sbb    al,0x3a
  40caa6:	bound  ebx,QWORD PTR [edi-0x7d3f548f]
  40caac:	sbb    bl,ch
  40caae:	icebp  
  40caaf:	add    esi,ebx
  40cab1:	aaa    
  40cab2:	pop    ds
  40cab3:	push   ebp
  40cab4:	hlt    
  40cab5:	fldcw  WORD PTR [eax+eiz*2]
  40cab8:	xor    DWORD PTR [edi],eax
  40caba:	je     0x40caf3
  40cabc:	lsl    esp,WORD PTR [edi-0x1707e8b9]
  40cac3:	fwait
  40cac4:	dec    eax
  40cac5:	scas   al,BYTE PTR es:[edi]
  40cac6:	out    0x3,eax
  40cac8:	ja     0x40ca90
  40caca:	cld    
  40cacb:	fnstsw WORD PTR [ecx+0x4a]
  40cace:	lds    ecx,FWORD PTR [edi]
  40cad0:	mov    esp,0xe8cd001a
  40cad5:	xchg   ecx,eax
  40cad6:	jae    0x40ca9d
  40cad8:	add    al,0x8e
  40cada:	inc    ebx
  40cadb:	or     eax,0xb000000
  40cae0:	scas   eax,DWORD PTR es:[edi]
  40cae1:	or     eax,0x8aa44f5d
  40cae6:	push   ecx
  40cae7:	sbb    DWORD PTR [eax],esp
  40cae9:	and    al,0xf5
  40caeb:	jne    0x40ca91
  40caed:	je     0x40cadc
  40caef:	xchg   ecx,eax
  40caf0:	inc    edi
  40caf1:	and    al,0xd9
  40caf3:	std    
  40caf4:	inc    edi
  40caf5:	and    al,0xd1
  40caf7:	pop    eax
  40caf8:	mov    ebx,0xaff0e8e8
  40cafd:	add    esi,DWORD PTR [edx+0x14]
  40cb00:	jmp    0x40cb15
  40cb02:	push   0x70feb0c
  40cb07:	icebp  
  40cb08:	push   es
  40cb09:	add    dh,bl
  40cb0b:	jne    0x40caf9
  40cb0d:	add    cl,ch
  40cb0f:	lock cmp ebp,eax
  40cb12:	xchg   ecx,eax
  40cb13:	push   ds
  40cb14:	add    eax,0x14306d00
  40cb19:	test   BYTE PTR [edi-0xe],bl
  40cb1c:	push   es
  40cb1d:	add    BYTE PTR [ebx-0x12],dl
  40cb20:	xchg   ecx,eax
  40cb21:	inc    ebx
  40cb22:	add    eax,0x196836d3
  40cb27:	(bad)  
  40cb28:	jbe    0x40cb61
  40cb2a:	rcr    ebx,0x9e
  40cb2d:	inc    dh
  40cb2f:	mov    al,BYTE PTR [edi+0x24]
  40cb32:	dec    ecx
  40cb33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb34:	xor    BYTE PTR [ecx],al
  40cb36:	inc    ecx
  40cb37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb38:	jb     0x40cb7c
  40cb3a:	jmp    0xf898c6d8
  40cb3f:	xor    BYTE PTR [edi],al
  40cb41:	mov    ebx,DWORD PTR [ecx+0x72000000]
  40cb47:	pushf  
  40cb48:	push   cs
  40cb49:	ins    DWORD PTR es:[edi],dx
  40cb4a:	push   cs
  40cb4b:	add    eax,0xfb99e900
  40cb50:	pop    ss
  40cb51:	add    BYTE PTR [ebx-0x6074ffba],ch
  40cb57:	adc    DWORD PTR es:[eax-0x36],eax
  40cb5b:	scas   eax,DWORD PTR es:[edi]
  40cb5c:	mov    ch,0x0
  40cb5e:	call   0xd16d:0x64057506
  40cb65:	xor    eax,DWORD PTR [eax+ecx*4-0xc]
  40cb69:	clts   
  40cb6b:	dec    esp
  40cb6c:	add    al,BYTE PTR [eax]
  40cb6e:	call   0xa806:0x9a957d7e
  40cb75:	and    BYTE PTR [esi+0x5],al
  40cb78:	or     DWORD PTR ds:0x423eea,0x4a
  40cb7f:	pop    ds
  40cb80:	and    DWORD PTR [esi+ebx*1],0xb
  40cb84:	add    BYTE PTR [eax],al
  40cb86:	call   0x8406:0x4a95967e
  40cb8d:	shl    BYTE PTR [edi-0x22],0x8c
  40cb91:	mov    esp,0x30636
  40cb96:	dec    edx
  40cb97:	jle    0x40cbc1
  40cb99:	sti    
  40cb9a:	cmp    eax,0xde83646d
  40cb9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cba0:	fiadd  WORD PTR [esi]
  40cba2:	sbb    al,BYTE PTR [esi]
  40cba4:	add    BYTE PTR [esp+esi*8+0x0],dh
  40cba8:	adc    eax,0x8d
  40cbad:	xchg   esi,eax
  40cbae:	shl    edx,0x6
  40cbb1:	sbb    al,BYTE PTR [esi]
  40cbb3:	lea    ecx,[esi+esi*8-0x4e]
  40cbb7:	out    0x4f,al
  40cbb9:	call   0xc6cdcbc8
  40cbbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbbf:	xor    dl,BYTE PTR [eax-0x63]
  40cbc2:	idiv   BYTE PTR [edi+0x12]
  40cbc5:	sbb    cl,BYTE PTR [ebx]
  40cbc7:	lea    ecx,[esi+esi*4-0x4f]
  40cbcb:	add    eax,eax
  40cbcd:	repz ficomp WORD PTR [esi-0xa4fa6fd]
  40cbd4:	mov    edi,0xba9aae59
  40cbd9:	popa   
  40cbda:	scas   eax,DWORD PTR es:[edi]
  40cbdb:	add    ch,al
  40cbdd:	nop
  40cbde:	jle    0x40cbe3
  40cbe0:	add    BYTE PTR [ebp+0x30abe2aa],ah
  40cbe6:	mov    al,0x12
  40cbe8:	je     0x40cbd8
  40cbea:	mov    bh,0x2
  40cbec:	add    bl,dh
  40cbee:	das    
  40cbef:	sbb    eax,0x769a8c14
  40cbf4:	adc    esi,DWORD PTR [ebx]
  40cbf6:	mov    al,0x1c
  40cbf8:	add    DWORD PTR [esi+0x6b],ebp
  40cbfb:	fisub  WORD PTR [ebx+0x23]
  40cbfe:	enter  0x52e9,0xb0
  40cc02:	add    eax,0xe85caa9c
  40cc07:	test   eax,0x22cbb78c
  40cc0c:	push   eax
  40cc0d:	leave  
  40cc0e:	scas   eax,DWORD PTR es:[edi]
  40cc0f:	sbb    al,0x2
  40cc11:	add    BYTE PTR [eax],al
  40cc13:	add    BYTE PTR [edx+ebx*4+0x5a],cl
  40cc17:	adc    DWORD PTR [ebx+0x76f77daf],esi
  40cc1d:	mov    al,ds:0x989c0a2d
  40cc22:	push   cs
  40cc23:	aam    0x1
  40cc25:	jo     0x40cc29
  40cc27:	push   edi
  40cc28:	and    al,0x5c
  40cc2a:	sbb    eax,0xacc00b01
  40cc2f:	(bad)  
  40cc30:	adc    al,0xe1
  40cc32:	rol    DWORD PTR [ebx-0x29],0x9c
  40cc36:	add    edi,edi
  40cc38:	and    BYTE PTR [eax+ebp*1],dl
  40cc3b:	and    al,0xe7
  40cc3d:	mov    dh,0x2e
  40cc3f:	add    ebx,esi
  40cc41:	scas   eax,DWORD PTR es:[edi]
  40cc42:	cmp    DWORD PTR [ebx+0x17],0xffffffbe
  40cc46:	adc    cl,BYTE PTR [edi]
  40cc48:	outs   dx,BYTE PTR ds:[esi]
  40cc49:	pop    es
  40cc4a:	adc    eax,DWORD PTR [ebx]
  40cc4c:	repz push es
  40cc4e:	adc    eax,DWORD PTR [esi]
  40cc50:	dec    ebx
  40cc51:	sbb    al,0xdd
  40cc53:	jp     0x40ccca
  40cc55:	scas   eax,DWORD PTR es:[edi]
  40cc56:	jno    0x40cc09
  40cc58:	lds    esp,FWORD PTR [eax-0x8e8bf91]
  40cc5e:	arpl   sp,ax
  40cc60:	in     eax,0x8a
  40cc62:	daa    
  40cc63:	add    esi,ebx
  40cc65:	push   es
  40cc66:	pop    esp
  40cc67:	adc    al,0x6
  40cc6a:	jmp    0x8ccd:0x1b36f303
  40cc71:	and    al,0x32
  40cc73:	add    esi,ebx
  40cc75:	mov    ch,BYTE PTR [eax]
  40cc77:	xor    BYTE PTR [eax],al
  40cc79:	add    BYTE PTR [eax],al
  40cc7b:	icebp  
  40cc7c:	mov    al,ds:0x72d06329
  40cc81:	test   eax,0x35f90903
  40cc86:	hlt    
  40cc87:	ins    DWORD PTR es:[edi],dx
  40cc88:	cli    
  40cc89:	call   0x6a477fa1
  40cc8e:	lods   al,BYTE PTR ds:[esi]
  40cc8f:	repz sbb edi,ebp
  40cc92:	fwait
  40cc93:	cdq    
  40cc94:	repnz jmp 0x5bf8:0xc54b7b03
  40cc9c:	push   es
  40cc9d:	call   0x1c7bfa5
  40cca2:	add    edi,DWORD PTR [esi-0x4cf0a0f]
  40cca8:	mov    ecx,ebx
  40ccaa:	out    dx,eax
  40ccab:	pop    eax
  40ccac:	inc    esp
  40ccad:	jmp    0xf96fb25a
  40ccb2:	xchg   ebp,eax
  40ccb3:	mov    dl,0x6
  40ccb5:	shl    eax,0xa3
  40ccb8:	push   es
  40ccb9:	jmp    0x744f4c66
  40ccbe:	(bad)  
  40ccbf:	shl    BYTE PTR [edx-0x6e0cfc18],1
  40ccc5:	jmp    DWORD PTR [esp+ecx*8+0x3]
  40ccc9:	add    ebp,ecx
  40cccb:	lock scas al,BYTE PTR es:[edi]
  40cccd:	push   esp
  40ccce:	(bad)
  40ccd1:	jmp    0x40cca1
  40ccd3:	js     0x40cc62
  40ccd5:	cld    
  40ccd6:	xchg   esi,eax
  40ccd7:	fwait
  40ccd8:	cmp    DWORD PTR [edi-0x39ba22],0xffffffe8
  40ccdf:	add    BYTE PTR [eax],al
  40cce1:	add    al,dh
  40cce3:	lahf   
  40cce4:	jbe    0x40ccd7
  40cce6:	aaa    
  40cce7:	add    esi,DWORD PTR [eax*2-0x900f8c9]
  40ccee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccef:	daa    
  40ccf0:	cmp    ecx,DWORD PTR [eax+0x36]
  40ccf3:	pop    es
  40ccf4:	call   0x480d46
  40ccf9:	fs add al,0xe4
  40ccfc:	imul   ecx
  40ccfe:	lock push es
  40cd00:	call   0x466cbb
  40cd05:	jno    0x40ccbb
  40cd07:	jmp    0x5585:0xff1f50e
  40cd0e:	lock push es
  40cd10:	add    BYTE PTR [esp+ebx*1-0x15],dh
  40cd14:	and    edi,DWORD PTR [ecx-0x7ead43a1]
  40cd1a:	jo     0x40cd87
  40cd1c:	inc    edx
  40cd1d:	jmp    0xcdc45ec1
  40cd22:	cmp    BYTE PTR [esi],al
  40cd24:	add    cl,ch
  40cd26:	mov    al,ds:0xf0038fae
  40cd2b:	push   es
  40cd2c:	test   DWORD PTR [ecx],ebp
  40cd2e:	sub    edi,DWORD PTR [edx+0x43]
  40cd31:	or     eax,0x55bd724
  40cd36:	sbb    al,0x13
  40cd38:	ins    BYTE PTR es:[edi],dx
  40cd39:	inc    ebx
  40cd3a:	not    BYTE PTR [ecx+0x36d30543]
  40cd40:	push   0x4333f500
  40cd45:	sub    al,BYTE PTR [eax]
  40cd47:	add    BYTE PTR [eax],al
  40cd49:	and    dl,dh
  40cd4b:	cmc    
  40cd4c:	jmp    DWORD PTR [ebp+0x3a244320]
  40cd52:	xor    edx,DWORD PTR [ebx+0x6a]
  40cd55:	retf   
  40cd56:	add    bl,BYTE PTR [eax-0x54]
  40cd59:	or     DWORD PTR [ebx],eax
  40cd5b:	call   DWORD PTR ds:0x3ff922
  40cd61:	push   ecx
  40cd62:	xlat   BYTE PTR ds:[ebx]
  40cd63:	and    esp,DWORD PTR [ebx+eax*2]
  40cd66:	inc    edi
  40cd67:	and    al,0x18
  40cd69:	inc    ebx
  40cd6a:	xlat   BYTE PTR ds:[ebx]
  40cd6b:	and    ebx,DWORD PTR [eax+esi*8]
  40cd6e:	gs cmp ebx,eax
  40cd71:	lahf   
  40cd72:	fwait
  40cd73:	push   esp
  40cd74:	call   FWORD PTR [edi-0x75bfed06]
  40cd7a:	or     DWORD PTR [ebx+edx*2],0x20244717
  40cd81:	dec    edx
  40cd82:	add    BYTE PTR [edx],al
  40cd84:	call   FWORD PTR [edi-0x75bfeed2]
  40cd8a:	and    DWORD PTR [eax+eiz*4],edi
  40cd8d:	dec    eax
  40cd8e:	dec    edx
  40cd8f:	add    BYTE PTR [ecx],bh
  40cd91:	jbe    0x40cd51
  40cd93:	push   ss
  40cd94:	je     0x40cde2
  40cd96:	gs jb  0x40cdbd
  40cd99:	repnz gs aad 0xff
  40cd9d:	outs   dx,BYTE PTR ds:[esi]
  40cd9e:	mov    esi,0x4cfdff26
  40cda3:	call   edi
  40cda5:	shr    esi,0x23
  40cda8:	adc    al,0x35
  40cdaa:	out    dx,al
  40cdab:	and    edx,DWORD PTR [eax]
  40cdad:	add    BYTE PTR [eax],al
  40cdaf:	add    dl,dh
  40cdb1:	lahf   
  40cdb2:	sbb    BYTE PTR [edx],al
  40cdb4:	sbb    cl,BYTE PTR [edx-0x28f4f385]
  40cdba:	or     bh,bh
  40cdbc:	(bad)  
  40cdbd:	out    dx,al
  40cdbe:	stos   DWORD PTR es:[edi],eax
  40cdbf:	inc    ebx
  40cdc0:	repz scas eax,DWORD PTR es:[edi]
  40cdc2:	call   0xb57:0x2b0189a
  40cdc9:	xchg   BYTE PTR [edx+0x3f19f4fe],bl
  40cdcf:	and    al,0xfc
  40cdd1:	hlt    
  40cdd2:	inc    ebp
  40cdd3:	pop    ebx
  40cdd4:	js     0x40cd98
  40cdd6:	inc    edi
  40cdd7:	ret    0xafeb
  40cdda:	dec    edi
  40cddb:	mov    eax,edi
  40cddd:	ficom  WORD PTR [edx+0x56]
  40cde0:	add    BYTE PTR [esi+0x4c],bh
  40cde3:	xor    ch,BYTE PTR [eax-0x430d2e79]
  40cde9:	test   BYTE PTR [esi-0x41],bh
  40cdec:	in     al,0x23
  40cdee:	(bad)  
  40cdef:	jmp    FWORD PTR [edi+ebp*4+0x2fec684d]
  40cdf6:	add    eax,DWORD PTR [eax]
  40cdf8:	pushf  
  40cdf9:	call   0x4477:0xb03311c6
  40ce00:	(bad)  
  40ce01:	pop    edi
  40ce02:	icebp  
  40ce03:	fiadd  DWORD PTR [edx+edx*4-0x4fccee5e]
  40ce0a:	push   edx
  40ce0b:	(bad)  
  40ce0c:	fisubr WORD PTR [ebx+0x11]
  40ce0f:	inc    eax
  40ce10:	repz sub BYTE PTR [ebx+0x3a],ch
  40ce17:	gs push ebx
  40ce19:	dec    eax
  40ce1a:	cmp    DWORD PTR [esi+0x684e24e3],edi
  40ce20:	mov    ds:0x7b33846d,eax
  40ce25:	inc    ebx
  40ce26:	data16 jo 0x40cde0
  40ce29:	xlat   BYTE PTR ds:[ebx]
  40ce2a:	je     0x40ce24
  40ce2c:	xchg   esp,eax
  40ce2d:	ins    DWORD PTR es:[edi],dx
  40ce2e:	inc    edi
  40ce2f:	icebp  
  40ce30:	xor    BYTE PTR [ebp+eiz*2-0x177e3b59],bl
  40ce37:	sti    
  40ce38:	adc    esp,eax
  40ce3a:	or     BYTE PTR [edx],0x6
  40ce3d:	out    dx,al
  40ce3e:	das    
  40ce3f:	jmp    0x40ce90
  40ce41:	push   esp
  40ce42:	fbstp  TBYTE PTR [ecx-0x2f]
  40ce45:	jmp    0x9500:0xa889e498
  40ce4c:	mov    DWORD PTR [eax],eax
  40ce4e:	add    al,0x7f
  40ce50:	cmc    
  40ce51:	sbb    BYTE PTR [ebp+0x43df4707],ah
  40ce57:	repz cmp eax,0x48a0008a
  40ce5d:	jmp    0xb1c8bafa
  40ce62:	adc    al,0xd8
  40ce64:	or     BYTE PTR [edx-0x47],ch
  40ce67:	in     al,dx
  40ce68:	inc    esp
  40ce69:	shr    BYTE PTR [esi],cl
  40ce6b:	mov    edi,0xb44d3b1b
  40ce70:	repnz pusha 
  40ce72:	adc    dh,BYTE PTR [ebx]
  40ce74:	pop    es
  40ce75:	push   ss
  40ce76:	scas   al,BYTE PTR es:[edi]
  40ce77:	mov    cl,0x9
  40ce79:	cmc    
  40ce7a:	loopne 0x40ce7c
  40ce7c:	add    BYTE PTR [eax],al
  40ce7e:	xchg   esp,eax
  40ce7f:	and    DWORD PTR [edi],ebx
  40ce81:	add    esi,ebx
  40ce83:	scas   al,BYTE PTR es:[edi]
  40ce84:	shr    DWORD PTR [esi],1
  40ce86:	repnz push es
  40ce88:	pop    edi
  40ce89:	jmp    esp
  40ce8b:	push   0xffffffa9
  40ce8d:	add    esi,edi
  40ce8f:	nop
  40ce90:	and    BYTE PTR [eax],dh
  40ce92:	(bad)  
  40ce93:	xor    cl,ch
  40ce95:	imul   eax,esp,0x5e
  40ce98:	test   eax,0xf4b45b03
  40ce9d:	add    dh,bl
  40ce9f:	scas   eax,DWORD PTR es:[edi]
  40cea0:	push   es
  40cea1:	jns    0x40ced4
  40cea3:	(bad)  
  40cea4:	adc    BYTE PTR [eax],al
  40cea6:	inc    ebp
  40cea7:	mov    bh,0xcc
  40cea9:	add    dh,ah
  40ceab:	push   esp
  40ceac:	sub    bl,al
  40ceae:	dec    ecx
  40ceaf:	or     BYTE PTR [ecx-0x11f9ae7d],bl
  40ceb5:	ins    DWORD PTR es:[edi],dx
  40ceb6:	xor    DWORD PTR [edi],esi
  40ceb8:	add    BYTE PTR [ecx],al
  40ceba:	sbb    eax,0x9aeefea0
  40cebf:	mov    bl,0x83
  40cec1:	ret    0xf1c4
  40cec4:	cmc    
  40cec5:	in     al,0x10
  40cec7:	jo     0x40cf0b
  40cec9:	jmp    0x434ce1c0
  40cece:	push   esi
  40cecf:	popf   
  40ced0:	adc    al,0xb1
  40ced2:	loop   0x40cf1a
  40ced4:	add    BYTE PTR [edi],bl
  40ced6:	cmp    cl,dh
  40ced8:	ret    0xb0fa
  40cedb:	xchg   edx,ebx
  40cedd:	fisubr WORD PTR [ebx+ebx*2+0x4f]
  40cee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee2:	add    BYTE PTR [eax],al
  40cee4:	add    ch,ah
  40cee6:	mov    ds:0xcaf72911,al
  40ceeb:	scas   eax,DWORD PTR es:[edi]
  40ceec:	call   0x6240daa3
  40cef1:	sbb    eax,DWORD PTR cs:[ebp-0x7500fb65]
  40cef8:	daa    
  40cef9:	seto   BYTE PTR [ebp+0xd]
  40cefd:	inc    ecx
  40cefe:	aaa    
  40ceff:	push   ecx
  40cf00:	adc    DWORD PTR [edx-0x5b],0x418be8ff
  40cf07:	push   0x29148dd5
  40cf0c:	pusha  
  40cf0d:	(bad)  
  40cf0e:	mov    esp,DWORD PTR cs:[edi+0x70]
  40cf12:	fwait
  40cf13:	(bad)  
  40cf14:	jmp    0xe0b42b0e
  40cf19:	jmp    0x40cea4
  40cf1b:	sub    ecx,0xfffffff0
  40cf1e:	push   es
  40cf1f:	push   edi
  40cf20:	cwde   
  40cf21:	in     eax,0x19
  40cf23:	fs mov ecx,0x1104148f
  40cf29:	push   ds
  40cf2a:	mov    ds:0x81afe8ff,al
  40cf2f:	mov    edi,0x56f395
  40cf34:	add    BYTE PTR [ecx],cl
  40cf36:	xchg   esi,eax
  40cf37:	mov    esi,0xeb1e87c3
  40cf3c:	mov    edx,DWORD PTR [edi-0x61]
  40cf3f:	push   ecx
  40cf40:	push   esi
  40cf41:	xchg   ecx,eax
  40cf42:	pop    eax
  40cf43:	push   ebp
  40cf44:	cmp    eax,esp
  40cf46:	fimul  DWORD PTR [esi]
  40cf48:	test   DWORD PTR [eax],eax
  40cf4a:	add    BYTE PTR [eax],al
  40cf4c:	sbb    eax,0x99000002
  40cf51:	call   0x835dcfc9
  40cf56:	add    eax,DWORD PTR [ecx]
  40cf58:	or     al,BYTE PTR [edi]
  40cf5a:	mov    edi,DWORD PTR [ebp-0x36]
  40cf5d:	mov    DWORD PTR [ebx+0x14],eax
  40cf60:	push   ecx
  40cf61:	fwait
  40cf62:	xchg   DWORD PTR [ebp-0x2e],edi
  40cf65:	imul   eax,edi,0x0
  40cf68:	retf   0x5306
  40cf6b:	jmp    edi
  40cf6d:	or     cl,BYTE PTR [ebp-0x73295dba]
  40cf73:	inc    esi
  40cf74:	ret    0x396e
  40cf77:	out    dx,eax
  40cf78:	retf   
  40cf79:	push   es
  40cf7a:	add    DWORD PTR [ebp-0x5e],eax
  40cf7d:	test   eax,0x95d48ad6
  40cf82:	and    bh,BYTE PTR [edi-0x5a]
  40cf85:	push   cs
  40cf86:	cmp    al,0x1b
  40cf88:	popf   
  40cf89:	(bad)  
  40cf8a:	retf   
  40cf8b:	add    BYTE PTR [edx-0x723f7bfa],bl
  40cf91:	sbb    BYTE PTR [ebx-0x74f97600],0x46
  40cf98:	ss dec esi
  40cf9a:	dec    eax
  40cf9b:	je     0x40cf48
  40cf9d:	dec    esi
  40cf9e:	dec    eax
  40cf9f:	(bad)  
  40cfa1:	mov    ?,esi
  40cfa3:	dec    DWORD PTR [edx-0x45]
  40cfa6:	inc    esp
  40cfa7:	push   0xab825d
  40cfac:	pop    edx
  40cfad:	push   es
  40cfae:	push   ebx
  40cfaf:	inc    DWORD PTR [eax]
  40cfb1:	add    BYTE PTR [eax],al
  40cfb3:	repz jp 0x40cfc0
  40cfb6:	push   edi
  40cfb7:	cmp    al,0x93
  40cfb9:	rcl    BYTE PTR ds:0x448dafb3,cl
  40cfbf:	pop    es
  40cfc0:	sub    eax,0xb87a0bc8
  40cfc5:	mov    edi,DWORD PTR [ebx+ebp*8+0x7]
  40cfc9:	out    dx,eax
  40cfca:	(bad)  
  40cfcb:	adc    al,0xa1
  40cfcd:	xchg   BYTE PTR [edi-0x72dc04],bh
  40cfd3:	add    al,0xb0
  40cfd5:	sub    al,0x1
  40cfd7:	outs   dx,BYTE PTR ds:[esi]
  40cfd8:	dec    edx
  40cfd9:	sub    BYTE PTR [eax-0x1d],ch
  40cfdc:	fiadd  DWORD PTR [ebx+0x0]
  40cfdf:	in     al,dx
  40cfe0:	rol    BYTE PTR [edi],1
  40cfe2:	call   0x439b96
  40cfe7:	jbe    0x40d058
  40cfe9:	push   ss
  40cfea:	je     0x40cfc0
  40cfec:	stc    
  40cfed:	and    ecx,DWORD PTR [ebx+0x75a2f835]
  40cff3:	daa    
  40cff4:	and    eax,0xbc2e8afa
  40cff9:	stos   BYTE PTR es:[edi],al
  40cffa:	push   eax
  40cffb:	outs   dx,DWORD PTR ds:[esi]
  40cffc:	scas   eax,DWORD PTR es:[edi]
  40cffd:	add    al,BYTE PTR [ebx+esi*4+0xc833f93]
  40d004:	lods   al,BYTE PTR ds:[esi]
  40d005:	add    cl,BYTE PTR [ebx+0x45c9c01e]
  40d00b:	pop    ds
  40d00c:	stos   DWORD PTR es:[edi],eax
  40d00d:	add    al,BYTE PTR [eax]
  40d00f:	repz xor al,0xfe
  40d012:	mov    ch,BYTE PTR ds:0xc6edb8
  40d018:	add    BYTE PTR [eax],al
  40d01a:	pop    es
  40d01b:	xchg   esp,eax
  40d01c:	mov    eax,ds:0x50151375
  40d021:	or     al,0x6c
  40d023:	push   ecx
  40d024:	mov    edi,DWORD PTR ds:[edi+eax*2]
  40d028:	jmp    0x86f0c3b0
  40d02d:	mov    edi,0x2ddb06df
  40d032:	repz mov ebp,DWORD PTR [esi-0x186eb305]
  40d039:	add    eax,0x123183f3
  40d03e:	outs   dx,BYTE PTR ds:[esi]
  40d03f:	jmp    0x8d6e7249
  40d044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d045:	pop    ss
  40d046:	jo     0x40cfe6
  40d048:	out    0x21,eax
  40d04a:	jmp    0x9648c0d4
  40d04f:	add    esi,DWORD PTR [edx+0x47]
  40d052:	out    0xe7,eax
  40d054:	add    BYTE PTR [esp+eiz*2-0x7],bl
  40d058:	call   0x41818860
  40d05d:	(bad)  
  40d05e:	xor    al,0x98
  40d060:	test   al,0xad
  40d062:	not    ah
  40d064:	test   al,0xad
  40d066:	repnz push esi
  40d068:	out    0x40,eax
  40d06a:	cmp    eax,0xe4c60c3c
  40d06f:	push   es
  40d070:	fcmovb st,st(3)
  40d072:	or     al,0x8e
  40d074:	daa    
  40d075:	xor    BYTE PTR [eax+0x71936231],dh
  40d07b:	sbb    ebp,edi
  40d07d:	add    al,0x0
  40d07f:	add    BYTE PTR [eax],al
  40d081:	ds sti 
  40d083:	sbb    eax,0xfe89f12e
  40d088:	aas    
  40d089:	sbb    esi,ebx
  40d08b:	sti    
  40d08c:	inc    ebx
  40d08d:	repz xchg edi,eax
  40d08f:	cmc    
  40d090:	pop    es
  40d091:	mov    edi,ebx
  40d093:	dec    esp
  40d094:	add    al,0xf3
  40d096:	aaa    
  40d097:	fs (bad) 
  40d099:	inc    DWORD PTR [edx]
  40d09b:	sbb    eax,esp
  40d09d:	push   ds
  40d09e:	(bad)
  40d0a2:	dec    ecx
  40d0a3:	fxch   st(0)
  40d0a5:	mov    dh,0x2a
  40d0a7:	in     eax,0x3
  40d0a9:	repz push es
  40d0ab:	add    BYTE PTR [ecx+0x74],al
  40d0ae:	pop    es
  40d0af:	add    ch,cl
  40d0b1:	rol    BYTE PTR [esi],0x5e
  40d0b4:	sub    cl,BYTE PTR [ecx]
  40d0b6:	mov    eax,?
  40d0b8:	jb     0x40d073
  40d0ba:	sub    cl,BYTE PTR [eax-0x42]
  40d0bd:	in     al,0xdf
  40d0bf:	inc    edi
  40d0c0:	mov    eax,ds:0xeb69dbdd
  40d0c5:	jge    0x40d0e1
  40d0c7:	pop    esp
  40d0c8:	xchg   ecx,eax
  40d0c9:	sbb    al,0x13
  40d0cb:	inc    eax
  40d0cc:	jmp    0x144e224
  40d0d1:	xor    DWORD PTR [ebp+0x5875e8ff],esp
  40d0d7:	je     0x40d0be
  40d0d9:	push   ds
  40d0da:	pop    eax
  40d0db:	jmp    0xf0eb:0x6c422a13
  40d0e2:	push   es
  40d0e3:	add    dl,dl
  40d0e5:	add    BYTE PTR [eax],al
  40d0e7:	add    al,ch
  40d0e9:	mov    WORD PTR [ebx+0x5],es
  40d0ec:	add    ebp,DWORD PTR ds:0xf7426401
  40d0f2:	mov    BYTE PTR [edi],ah
  40d0f4:	(bad)  
  40d0f5:	mov    edi,0x6f51545
  40d0fa:	add    cl,ch
  40d0fc:	cwde   
  40d0fd:	iret   
  40d0fe:	add    bl,ch
  40d100:	lock xchg edi,eax
  40d102:	jae    0x40d0c9
  40d104:	ror    BYTE PTR [edx+0x1352257d],0x24
  40d10b:	fst    DWORD PTR [ebx+0x10]
  40d10e:	add    al,0x81
  40d110:	push   ss
  40d111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d112:	(bad)  
  40d113:	call   0x295b8093
  40d118:	imul   ebp,DWORD PTR [edi-0x5140a2],0xffffffff
  40d11f:	mov    esi,0xa78a966f
  40d124:	les    ecx,FWORD PTR [esi+0x48]
  40d127:	add    BYTE PTR [ebp+0x586a20f0],cl
  40d12d:	mov    BYTE PTR [esp+ebx*2+0x32],bh
  40d131:	fwait
  40d132:	jae    0x40d174
  40d134:	dec    edx
  40d135:	data16 jne 0x40d13c
  40d138:	loop   0x40d133
  40d13a:	loop   0x40d13c
  40d13c:	pop    edx
  40d13d:	cmp    BYTE PTR [esi-0x414eb18b],0xeb
  40d144:	sub    cl,dh
  40d146:	inc    esp
  40d147:	ins    BYTE PTR es:[edi],dx
  40d148:	sbb    DWORD PTR [ebx],eax
  40d14a:	add    BYTE PTR [eax],al
  40d14c:	add    BYTE PTR [eax],al
  40d14e:	add    BYTE PTR ds:0x971023f0,ah
  40d154:	in     eax,0x5b
  40d156:	call   FWORD PTR [esi-0x5200f161]
  40d15c:	push   cs
  40d15d:	call   0x430aba
  40d162:	test   DWORD PTR [edx-0x65],0xd742f7be
  40d169:	pop    ebp
  40d16a:	ret    0xae2
  40d16d:	push   ecx
  40d16e:	push   ebx
  40d16f:	std    
  40d170:	ja     0x40d1ee
  40d172:	or     cl,bl
  40d174:	retf   0x6c5
  40d177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d178:	out    dx,eax
  40d179:	aas    
  40d17a:	add    BYTE PTR [edx+0x50],ah
  40d17d:	mov    DWORD PTR [ecx],eax
  40d17f:	fiadd  DWORD PTR [ecx-0x4641dbbe]
  40d185:	fld    st(7)
  40d187:	int3   
  40d188:	stos   BYTE PTR es:[edi],al
  40d189:	jae    0x40d1cb
  40d18b:	call   0x4a:0x9f2405cd
  40d192:	mov    DWORD PTR [edi+ebx*8],eax
  40d195:	mov    BYTE PTR [esi-0xe],bl
  40d198:	sbb    DWORD PTR [esp+ebp*2-0x23],0x4c
  40d19d:	jo     0x40d19f
  40d19f:	mov    cs,WORD PTR [edx]
  40d1a1:	add    BYTE PTR [edx-0xd],ch
  40d1a4:	mov    ds:0x581b458b,al
  40d1a9:	mov    eax,DWORD PTR [ebp-0x19]
  40d1ac:	push   ss
  40d1ad:	ds jl  0x40d22a
  40d1b0:	ss test bh,bh
  40d1b3:	add    BYTE PTR [eax],al
  40d1b5:	add    BYTE PTR [eax+eiz*4-0x75],bl
  40d1b9:	popf   
  40d1ba:	outs   dx,DWORD PTR ds:[esi]
  40d1bb:	mov    al,ds:0xcc0a0002
  40d1c0:	out    0xf,al
  40d1c2:	mov    edi,0xc7ff3406
  40d1c7:	ret    
  40d1c8:	test   BYTE PTR [esp+ebp*4-0x4b72cd51],0xaf
  40d1d0:	stos   BYTE PTR es:[edi],al
  40d1d1:	not    BYTE PTR [edi]
  40d1d3:	lahf   
  40d1d4:	add    al,BYTE PTR [ebx+0x316a31b]
  40d1da:	push   0xffffff86
  40d1dc:	push   ss
  40d1dd:	pop    edi
  40d1de:	js     0x40d246
  40d1e0:	cmp    DWORD PTR [ecx+0x31],ebx
  40d1e3:	cwde   
  40d1e4:	add    dl,BYTE PTR [esi+0x68]
  40d1e7:	scas   eax,DWORD PTR es:[edi]
  40d1e8:	stos   BYTE PTR es:[edi],al
  40d1e9:	adc    dh,bl
  40d1eb:	lahf   
  40d1ec:	add    dh,dh
  40d1ee:	aaa    
  40d1ef:	add    al,0xc
  40d1f1:	add    DWORD PTR [edi-0x52],ebx
  40d1f4:	xor    al,0xe8
  40d1f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1f7:	ret    
  40d1f8:	popf   
  40d1f9:	(bad)  
  40d1fa:	push   0xf7c23c6d
  40d1ff:	lahf   
  40d200:	popf   
  40d201:	mov    ch,0x73
  40d203:	lahf   
  40d204:	add    al,BYTE PTR [eax]
  40d206:	mov    ah,0xa5
  40d208:	loop   0x40d27e
  40d20a:	xor    esp,DWORD PTR [eax-0x3c04ba3b]
  40d210:	pop    ss
  40d211:	inc    eax
  40d212:	repz ja 0x40d290
  40d215:	jecxz  0x40d1b3
  40d217:	sbb    al,0x9e
  40d219:	jne    0x40d21b
  40d21b:	add    BYTE PTR [eax],al
  40d21d:	js     0x6cdb596
  40d223:	data16 (bad) 
  40d225:	cs (bad) 
  40d227:	fmul   QWORD PTR [edx+0x382a06bc]
  40d22d:	push   0x7834b7a2
  40d232:	inc    ebx
  40d233:	cmc    
  40d234:	xor    bh,BYTE PTR [ebp-0x653aec3]
  40d23a:	push   es
  40d23b:	jmp    0x623779ca
  40d240:	xchg   ebx,eax
  40d241:	jnp    0x40d25e
  40d243:	and    eax,0xe8f128ab
  40d248:	add    ebp,DWORD PTR [eax+0x13]
  40d24b:	loope  0x40d1d9
  40d24d:	scas   eax,DWORD PTR es:[edi]
  40d24e:	mov    fs,WORD PTR [ebx-0x6b]
  40d251:	mov    al,ds:0xe3477431
  40d256:	or     ebp,DWORD PTR [esi+edi*2-0x64]
  40d25a:	push   es
  40d25b:	jmp    0xf9c29563
  40d260:	stos   BYTE PTR es:[edi],al
  40d261:	and    DWORD PTR [ecx-0x398f621b],ebp
  40d267:	push   esp
  40d268:	inc    edi
  40d269:	cld    
  40d26a:	sbb    dl,ch
  40d26c:	mov    DWORD PTR [ecx+0x78105395],edi
  40d272:	(bad)  
  40d274:	cmc    
  40d275:	and    al,0x7
  40d277:	push   ss
  40d278:	popf   
  40d279:	(bad)  
  40d27a:	or     BYTE PTR [eax+eiz*4],dh
  40d27d:	aad    0x1a
  40d27f:	mov    cl,0x26
  40d281:	add    BYTE PTR [eax],al
  40d283:	add    BYTE PTR [esp+ecx*1+0x1ac5e3e3],dh
  40d28a:	stc    
  40d28b:	xor    BYTE PTR [ebp-0x6162c1f7],0x8
  40d292:	or     al,0x9c
  40d294:	jns    0x40d2e0
  40d296:	icebp  
  40d297:	and    eax,0x9ec0cac
  40d29c:	jo     0x40d269
  40d29e:	call   eax
  40d2a0:	jae    0x40d26f
  40d2a2:	add    DWORD PTR [edi+0x222b06f6],esp
  40d2a8:	js     0x40d306
  40d2aa:	sub    ecx,0xfffffff0
  40d2ad:	push   es
  40d2ae:	mov    al,0xe8
  40d2b0:	dec    ebx
  40d2b1:	out    0xfe,eax
  40d2b3:	xchg   esi,eax
  40d2b4:	ja     0x40d24a
  40d2b6:	(bad)  
  40d2b7:	jmp    0x3f236354
  40d2bc:	jle    0x40d297
  40d2be:	mov    edi,0x44cf29fa
  40d2c3:	sub    eax,0xe97f8d78
  40d2c8:	lock push es
  40d2ca:	mov    DWORD PTR [esi+0x6b],esp
  40d2cd:	xchg   esp,eax
  40d2ce:	(bad)  
  40d2cf:	jmp    0xaf004dbb
  40d2d4:	out    dx,al
  40d2d5:	das    
  40d2d6:	leave  
  40d2d7:	sub    eax,DWORD PTR [ebx]
  40d2d9:	pop    es
  40d2da:	adc    DWORD PTR [eax],0xffffffef
  40d2dd:	popf   
  40d2de:	or     dh,dh
  40d2e0:	ja     0x40d277
  40d2e2:	push   esp
  40d2e3:	bound  eax,QWORD PTR [ebx-0x77]
  40d2e6:	jmp    0x40d2e1
  40d2e8:	add    BYTE PTR [eax],al
  40d2ea:	add    BYTE PTR [ebp+0x4b],dh
  40d2ed:	lock cmp DWORD PTR [esi-0x5],ebx
  40d2f1:	cmp    ebx,0xffffffb0
  40d2f4:	push   es
  40d2f5:	lea    esp,[edi+eax*4]
  40d2f8:	inc    ebx
  40d2f9:	call   0x47c3e9
  40d2fe:	mov    al,0xb3
  40d300:	cmp    cl,BYTE PTR [ebx-0x72c9de3b]
  40d306:	and    al,0x6f
  40d308:	inc    ebx
  40d309:	call   FWORD PTR [edi+esi*8]
  40d30c:	xchg   ebx,eax
  40d30d:	adc    al,0x6d
  40d30f:	ret    0xffd3
  40d312:	popa   
  40d313:	sub    eax,0x531c8a8f
  40d318:	sbb    eax,0x7970000
  40d31d:	add    cl,0xc0
  40d320:	fistp  QWORD PTR [edi-0x6a]
  40d323:	inc    edx
  40d324:	or     BYTE PTR [ecx+0x6241bbd1],al
  40d32a:	dec    BYTE PTR [ebx-0x29]
  40d32d:	out    0x91,eax
  40d32f:	stc    
  40d330:	add    eax,0xbc8c900
  40d335:	add    BYTE PTR [ebx],dh
  40d337:	adc    ebx,esi
  40d339:	pop    es
  40d33a:	mov    ebx,DWORD PTR [ebx]
  40d33c:	into   
  40d33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d33e:	add    DWORD PTR [esi+0x57e8d100],esp
  40d344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d345:	cmp    DWORD PTR [eax-0x2effa0f1],0xee753de2
  40d34f:	add    BYTE PTR [eax],al
  40d351:	add    bl,al
  40d353:	or     ecx,DWORD PTR [ebp+0x469908]
  40d359:	inc    ecx
  40d35a:	fwait
  40d35b:	jo     0x40d35b
  40d35d:	add    BYTE PTR [edx],bl
  40d35f:	pop    es
  40d360:	jb     0x40d33b
  40d362:	fimul  DWORD PTR [eax]
  40d364:	ret    
  40d365:	sbb    DWORD PTR [edi+eax*1+0x75],0x1b
  40d36a:	jb     0x40d3b3
  40d36c:	add    BYTE PTR [eax],al
  40d36e:	sub    ah,ah
  40d370:	add    BYTE PTR [edx+0xa],ch
  40d373:	loope  0x40d374
  40d375:	push   ebp
  40d376:	sbb    eax,0x1a100a95
  40d37b:	or     eax,DWORD PTR [ebp+0x210827c0]
  40d381:	push   es
  40d382:	fadd   st,st(6)
  40d384:	shl    DWORD PTR [eax+0x4687c9cb],0xd2
  40d38b:	ds dec eax
  40d38d:	je     0x40d352
  40d38f:	mov    DWORD PTR [eax+eax*1],esp
  40d392:	dec    ecx
  40d393:	in     eax,0x3
  40d395:	add    bl,dh
  40d397:	test   BYTE PTR [ebx+eax*4-0x3],al
  40d39b:	add    BYTE PTR [ebx+0x46637b3c],0x0
  40d3a2:	repz call 0x42c0:0x785456cf
  40d3aa:	repz clc 
  40d3ac:	call   0x7300:0x428e9714
  40d3b3:	repz mov eax,esp
  40d3b6:	add    BYTE PTR [eax],al
  40d3b8:	add    BYTE PTR [eax],dh
  40d3ba:	mov    al,ds:0x48047502
  40d3bf:	push   ds
  40d3c0:	jmp    DWORD PTR [ecx+ecx*2-0x80]
  40d3c4:	mov    edi,0x2485a1e7
  40d3c9:	jcxz   0x40d412
  40d3cc:	add    bl,dh
  40d3ce:	jmp    0x5d6f5bd3
  40d3d3:	add    al,BYTE PTR [ecx]
  40d3d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3d6:	lock lock out dx,eax
  40d3d9:	loope  0x40d43a
  40d3db:	add    bl,BYTE PTR [edi+0x78]
  40d3de:	jmp    0x458d:0x907855c6
  40d3e5:	jmp    0x40d43e
  40d3e7:	dec    edx
  40d3e8:	je     0x40d3e0
  40d3ea:	and    al,0x42
  40d3ec:	add    al,0x76
  40d3ee:	loopne 0x40d3ff
  40d3f0:	pop    es
  40d3f1:	mov    ds:0xe317efa8,eax
  40d3f6:	fild   WORD PTR [ebx]
  40d3f8:	mov    edi,DWORD PTR [ebp-0x58c6ede]
  40d3fe:	inc    ebp
  40d3ff:	add    al,0x56
  40d401:	in     al,0xb2
  40d403:	repnz rdpmc 
  40d406:	mov    al,ds:0x253ec338
  40d40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d40c:	push   eax
  40d40d:	and    dl,bh
  40d40f:	mov    gs,edi
  40d411:	js     0x40d419
  40d413:	das    
  40d414:	or     al,0x2b
  40d416:	aas    
  40d417:	adc    BYTE PTR ss:[esi],dl
  40d41a:	lahf   
  40d41b:	and    DWORD PTR [ebx-0x53000000],ebx
  40d421:	xchg   ecx,eax
  40d422:	fs ret 
  40d424:	pop    ds
  40d425:	or     edi,DWORD PTR [ebx+0x6c1089c3]
  40d42b:	sbb    edi,ebp
  40d42d:	aad    0x91
  40d42f:	fsub   st(5),st
  40d431:	sbb    edi,DWORD PTR [ecx+0x11ff2e8e]
  40d437:	mov    DWORD PTR [eax],0xe310b103
  40d43d:	leave  
  40d43e:	stos   DWORD PTR es:[edi],eax
  40d43f:	xchg   edi,eax
  40d440:	lock xchg al,ch
  40d443:	add    ebx,DWORD PTR [eax+0x9]
  40d446:	cs inc eax
  40d448:	pop    edi
  40d449:	add    eax,0x39f30369
  40d44e:	call   0xfe9a:0x2d1b4c36
  40d455:	xchg   ecx,eax
  40d456:	sti    
  40d457:	out    dx,eax
  40d458:	in     al,dx
  40d459:	inc    esi
  40d45a:	jmp    0xed5c48df
  40d45f:	mov    WORD PTR ds:0x2436299e,cs
  40d465:	sbb    esi,ebp
  40d467:	call   0xfb15:0xd1fdfea7
  40d46e:	aam    0xf3
  40d470:	int3   
  40d471:	push   es
  40d472:	mov    eax,ds:0xa8ed1c92
  40d477:	inc    esp
  40d478:	or     al,ah
  40d47a:	jno    0x40d47e
  40d47c:	shr    BYTE PTR [ebp+0x322bcb19],0xdd
  40d483:	adc    DWORD PTR [eax],eax
  40d485:	add    BYTE PTR [eax],al
  40d487:	add    al,0x7c
  40d489:	sbb    ecx,DWORD PTR [esp+ebp*8]
  40d48c:	pop    eax
  40d48d:	aam    0xf2
  40d48f:	and    DWORD PTR [edi-0x6e6a9801],esi
  40d495:	(bad)  
  40d496:	call   0xf2289a8b
  40d49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d49c:	add    al,0x95
  40d49e:	icebp  
  40d49f:	pop    ds
  40d4a0:	inc    ebp
  40d4a1:	add    BYTE PTR [eax],ch
  40d4a3:	into   
  40d4a4:	inc    ebx
  40d4a5:	or     al,0x1b
  40d4a7:	push   eax
  40d4a8:	jg     0x40d4af
  40d4aa:	cmp    eax,esi
  40d4ac:	das    
  40d4ad:	pop    esi
  40d4ae:	and    ch,BYTE PTR [eax-0x2216f83a]
  40d4b4:	jnp    0x40d4a1
  40d4b6:	sbb    BYTE PTR [esi+0x40],dh
  40d4b9:	or     BYTE PTR [ebp+ebp*1-0x70],dh
  40d4bd:	dec    eax
  40d4be:	mov    bh,0xe4
  40d4c0:	dec    edx
  40d4c1:	add    DWORD PTR [ebx-0x9],0x1a
  40d4c5:	or     al,0xa3
  40d4c7:	cmc    
  40d4c8:	test   dh,0xac
  40d4cb:	test   ah,dh
  40d4cd:	(bad)  
  40d4ce:	call   0x2e4770c3
  40d4d3:	or     al,0x93
  40d4d5:	psubsw mm6,mm0
  40d4d8:	push   es
  40d4d9:	mov    ebp,DWORD PTR [ecx+0x1d747d3c]
  40d4df:	mov    ah,0x4f
  40d4e1:	jae    0x40d4da
  40d4e3:	fiadd  WORD PTR [esi]
  40d4e5:	lea    ebx,[esp+edi*2+0x935737]
  40d4ec:	add    BYTE PTR [eax],al
  40d4ee:	div    BYTE PTR [esi]
  40d4f0:	call   esp
  40d4f2:	call   0x782a14ed
  40d4f7:	cwde   
  40d4f8:	add    BYTE PTR [ebp+eax*1-0x31],dh
  40d4fc:	je     0x40d4e3
  40d4fe:	in     al,dx
  40d4ff:	div    BYTE PTR [edx]
  40d501:	test   eax,0xa931fc47
  40d506:	lahf   
  40d507:	pop    es
  40d508:	mov    ebp,ecx
  40d50a:	cmp    DWORD PTR [edi+0x33cd0088],0x0
  40d511:	pop    esi
  40d512:	mov    ds:0xb68b53ca,eax
  40d517:	mov    ch,dl
  40d519:	or     al,0xe9
  40d51b:	aam    0x8c
  40d51d:	jne    0x40d57d
  40d51f:	pop    ebx
  40d520:	jb     0x40d520
  40d522:	push   ebp
  40d523:	outs   dx,BYTE PTR ds:[esi]
  40d524:	std    
  40d525:	jne    0x40d4bd
  40d527:	add    ah,0xff
  40d52a:	inc    DWORD PTR [edx]
  40d52c:	call   0xfdaf4a15
  40d531:	test   BYTE PTR [edx-0x1],cl
  40d534:	push   cs
  40d535:	mov    ebx,DWORD PTR [ebx+ebx*2+0x79]
  40d539:	call   DWORD PTR ds:0x9ec0826f
  40d53f:	(bad)  
  40d540:	mov    cl,0x1
  40d542:	and    DWORD PTR [edx],ecx
  40d544:	xor    bl,bl
  40d546:	xlat   BYTE PTR ds:[ebx]
  40d547:	shl    bl,1
  40d549:	call   0x3e4322
  40d54e:	xchg   esp,eax
  40d54f:	add    ecx,0x5b
  40d555:	and    ecx,edx
  40d557:	push   es
  40d558:	add    BYTE PTR [ebx+0x5b],ch
  40d55b:	push   edx
  40d55c:	loope  0x40d573
  40d55e:	outs   dx,DWORD PTR ds:[esi]
  40d55f:	rcl    DWORD PTR [ecx-0x1e],0xe8
  40d563:	loopne 0x40d564
  40d565:	aad    0xca
  40d567:	push   ebx
  40d568:	mov    esi,esi
  40d56a:	aam    0x52
  40d56c:	push   esi
  40d56d:	(bad)  
  40d56e:	outs   dx,BYTE PTR ds:[esi]
  40d56f:	jae    0x40d593
  40d571:	pop    ecx
  40d572:	push   edx
  40d573:	xor    esi,esi
  40d575:	mov    eax,ds:0x695607d0
  40d57a:	outs   dx,BYTE PTR ds:[esi]
  40d57b:	jae    0x40d58d
  40d57d:	adc    eax,0xa5e80c01
  40d582:	(bad)  
  40d583:	(bad)  
  40d584:	inc    DWORD PTR [ecx-0xc097c86]
  40d58a:	ss iret 
  40d58c:	push   edx
  40d58d:	fnclex 
  40d58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d590:	(bad)  
  40d591:	fdivr  QWORD PTR [ecx-0x67d17530]
  40d597:	sub    BYTE PTR [edx],al
  40d599:	jle    0x40d566
  40d59b:	xchg   edi,eax
  40d59c:	pop    edx
  40d59d:	fistp  DWORD PTR [edx+edx*8+0x1]
  40d5a1:	repz sbb al,ah
  40d5a4:	je     0x40d5b4
  40d5a6:	sbb    DWORD PTR [ecx],edx
  40d5a8:	cld    
  40d5a9:	xor    eax,0x78028e09
  40d5ae:	data16 (bad) 
  40d5b0:	fcomip st,st(1)
  40d5b2:	out    dx,eax
  40d5b3:	stos   DWORD PTR es:[edi],eax
  40d5b4:	sti    
  40d5b5:	xchg   ebx,eax
  40d5b6:	or     eax,0x8a97
  40d5bb:	add    BYTE PTR [ebx+0x4b74bb1b],ch
  40d5c1:	or     bl,BYTE PTR [edx+0x7f988857]
  40d5c7:	(bad)  
  40d5c8:	jmp    DWORD PTR [ecx-0x2187e175]
  40d5ce:	xor    eax,0x7e23a5b
  40d5d3:	add    dh,al
  40d5d5:	sbb    BYTE PTR [eax+0x3784780],ch
  40d5db:	add    bl,dh
  40d5dd:	and    BYTE PTR [ecx],bl
  40d5df:	or     al,0x44
  40d5e1:	lods   eax,DWORD PTR ds:[esi]
  40d5e2:	jle    0x40d580
  40d5e4:	repz lahf 
  40d5e6:	add    dh,dh
  40d5e8:	scas   al,BYTE PTR es:[edi]
  40d5e9:	xchg   ebx,eax
  40d5ea:	add    BYTE PTR [ebp-0x72cc0c4a],cl
  40d5f0:	outs   dx,BYTE PTR ds:[esi]
  40d5f1:	pop    eax
  40d5f2:	xchg   ebp,eax
  40d5f3:	(bad)  
  40d5f4:	sbb    al,0x70
  40d5f6:	xchg   ebp,eax
  40d5f7:	je     0x40d5e0
  40d5f9:	in     al,0x40
  40d5fb:	cld    
  40d5fc:	jae    0x40d59e
  40d5fe:	add    al,BYTE PTR [eax]
  40d600:	jg     0x40d5b3
  40d602:	xchg   ebp,eax
  40d603:	adc    al,0x3f
  40d605:	pop    es
  40d606:	cld    
  40d607:	inc    ebx
  40d608:	repz sub DWORD PTR [eax-0x5f75fcf1],0xffffff96
  40d610:	fstp   TBYTE PTR [eax-0x720cfc18]
  40d616:	fild   DWORD PTR [ebx]
  40d618:	std    
  40d619:	inc    esi
  40d61a:	jmp    0x6a65aec9
  40d61f:	pop    eax
  40d620:	add    BYTE PTR [eax],al
  40d622:	add    BYTE PTR [esi+ecx*4],bl
  40d625:	lods   eax,DWORD PTR ds:[esi]
  40d626:	xchg   esi,eax
  40d627:	repnz adc edx,ebx
  40d62a:	sub    edi,ebp
  40d62c:	jnp    0x40d691
  40d62e:	aaa    
  40d62f:	lods   al,BYTE PTR ds:[esi]
  40d630:	lea    edx,[ebp-0x76bc89cd]
  40d636:	xor    esi,DWORD PTR [ebp-0x74fb09bd]
  40d63c:	mov    ch,0x88
  40d63e:	xchg   esi,eax
  40d63f:	lea    esp,[eax]
  40d641:	jmp    0x40d5cb
  40d643:	outs   dx,DWORD PTR ds:[esi]
  40d644:	xor    BYTE PTR [esi-0x6a],ch
  40d647:	jge    0x40d67f
  40d649:	je     0x40d68b
  40d64b:	(bad)  
  40d64c:	ss push ecx
  40d64e:	ror    BYTE PTR [ebp+ecx*4+0x55],0xaa
  40d653:	mov    esi,0xc4586a24
  40d658:	lea    eax,[ebp-0x6a]
  40d65b:	std    
  40d65c:	adc    edi,DWORD PTR [ebx+0x29]
  40d65f:	jecxz  0x40d6dc
  40d661:	imul   esp,DWORD PTR [ebx],0x44
  40d664:	lea    ebp,ds:0x9436e33
  40d66a:	xor    ebp,DWORD PTR ds:0x14ffee43
  40d670:	imul   ecx,DWORD PTR [eax],0xeb202596
  40d676:	mov    BYTE PTR [edi+0x30],dh
  40d679:	push   es
  40d67a:	xchg   esi,eax
  40d67b:	adc    eax,0x3406c36
  40d680:	add    BYTE PTR ss:[ecx],al
  40d683:	jg     0x40d632
  40d685:	(bad)  
  40d686:	out    dx,al
  40d687:	add    BYTE PTR [eax],al
  40d689:	add    BYTE PTR [edx-0xe],cl
  40d68c:	imul   eax,DWORD PTR ds:0x39e0426c,0xd6e0cb9f
  40d696:	jle    0x40d62a
  40d698:	inc    esp
  40d699:	cmc    
  40d69a:	icebp  
  40d69b:	adc    cl,BYTE PTR ds:0x3fc14af
  40d6a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6a2:	or     al,0x8b
  40d6a4:	adc    ecx,ebp
  40d6a6:	lock push es
  40d6a8:	jmp    0x40d68c
  40d6aa:	jle    0x40d6ef
  40d6ac:	psubsb mm6,QWORD PTR [edi+0x43]
  40d6b0:	cld    
  40d6b1:	out    0xf0,eax
  40d6b3:	push   es
  40d6b4:	add    BYTE PTR [ebx-0x1c],ah
  40d6b7:	test   BYTE PTR [edi+0x420f424],0x74
  40d6be:	aam    0xfa
  40d6c0:	dec    edi
  40d6c1:	ins    BYTE PTR es:[edi],dx
  40d6c2:	int3   
  40d6c3:	stos   BYTE PTR es:[edi],al
  40d6c4:	dec    edi
  40d6c5:	scas   eax,DWORD PTR es:[edi]
  40d6c6:	(bad)  
  40d6c7:	cli    
  40d6c8:	add    al,0xa7
  40d6ca:	mov    esp,0x2850fffc
  40d6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d0:	(bad)  
  40d6d1:	pop    esi
  40d6d2:	jp     0x40d717
  40d6d4:	cld    
  40d6d5:	push   0x2f
  40d6d7:	or     BYTE PTR [eax+0x5c],dl
  40d6da:	sbb    al,0xab
  40d6dc:	dec    edi
  40d6dd:	inc    esi
  40d6de:	in     al,0xfe
  40d6e0:	out    0xce,eax
  40d6e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6e3:	push   es
  40d6e4:	add    dl,bh
  40d6e6:	cmp    DWORD PTR [eax-0x39322141],ecx
  40d6ec:	mov    ch,BYTE PTR [eax]
  40d6ee:	add    BYTE PTR [eax],al
  40d6f0:	add    BYTE PTR [eax],ch
  40d6f2:	(bad)  
  40d6f3:	psubsw mm3,mm5
  40d6f6:	jg     0x40d6e3
  40d6f8:	push   0xe9039c5b
  40d6fd:	lock aaa 
  40d6ff:	push   esi
  40d700:	add    BYTE PTR [ecx+0x645707fb],ah
  40d706:	pusha  
  40d707:	and    al,0x79
  40d709:	sbb    cl,BYTE PTR [eax]
  40d70b:	xor    ecx,ecx
  40d70d:	dec    esi
  40d70e:	push   es
  40d70f:	sete   BYTE PTR [ebx-0x49]
  40d713:	fst    DWORD PTR [ebx+0x40]
  40d716:	or     BYTE PTR [ebp-0x75283ebb],cl
  40d71c:	(bad)  
  40d71d:	push   ebx
  40d71e:	inc    ebp
  40d71f:	loopne 0x40d709
  40d721:	pop    ss
  40d722:	xor    al,0x0
  40d724:	add    BYTE PTR [esi-0x38],dl
  40d727:	or     eax,0x91884
  40d72c:	add    dl,al
  40d72e:	aam    0xfa
  40d730:	cmovbe esi,DWORD PTR [ecx+0x29a0000]
  40d737:	mov    dh,0x45
  40d739:	adc    esi,0x1c178d4f
  40d73f:	sti    
  40d740:	jmp    FWORD PTR [ebp-0x29]
  40d743:	out    0x52,eax
  40d745:	iret   
  40d746:	or     BYTE PTR [eax],al
  40d748:	test   BYTE PTR [edx+0x2],bl
  40d74b:	test   BYTE PTR [edi],bl
  40d74d:	mov    BYTE PTR [edi],al
  40d74f:	add    BYTE PTR [edi],cl
  40d751:	push   esp
  40d752:	int3   
  40d753:	cli    
  40d754:	jmp    0x40d756
  40d756:	add    BYTE PTR [eax],al
  40d758:	pusha  
  40d759:	aas    
  40d75a:	cmp    BYTE PTR [edi+edx*2-0x520004e5],bl
  40d761:	sti    
  40d762:	cmp    al,0x3b
  40d764:	or     ebp,edi
  40d766:	icebp  
  40d767:	xor    ebx,DWORD PTR [edx]
  40d769:	jnp    0x40d741
  40d76b:	sbb    ebx,DWORD PTR [edx]
  40d76d:	lods   eax,DWORD PTR ds:[esi]
  40d76e:	inc    BYTE PTR [eax]
  40d770:	or     eax,0xd05bd73
  40d775:	or     BYTE PTR [eax],al
  40d777:	add    edx,ebp
  40d779:	add    dh,BYTE PTR [edi+0x3e26f3c0]
  40d77f:	in     al,0x89
  40d781:	lahf   
  40d782:	test   DWORD PTR [edi+ecx*1+0x6d],eax
  40d786:	sub    al,0xe8
  40d788:	and    ecx,edx
  40d78a:	add    DWORD PTR [eax],eax
  40d78c:	outs   dx,DWORD PTR ds:[esi]
  40d78d:	fld    QWORD PTR [ebx]
  40d78f:	test   BYTE PTR [esi+ebx*4],bl
  40d792:	add    al,BYTE PTR [eax]
  40d794:	(bad)  
  40d795:	out    0x10,al
  40d797:	in     al,0x66
  40d799:	nop
  40d79a:	push   edx
  40d79b:	add    dl,bl
  40d79d:	dec    esp
  40d79e:	add    al,0x0
  40d7a0:	repz sub cl,BYTE PTR [eax-0x6d3b80fc]
  40d7a7:	(bad)  
  40d7a8:	fsub   DWORD PTR [eax+0x36]
  40d7ab:	push   0xffffffef
  40d7ad:	and    cl,BYTE PTR [ecx-0x3c]
  40d7b0:	and    esp,DWORD PTR ds:0x69168792
  40d7b6:	fwait
  40d7b7:	loop   0x40d828
  40d7b9:	lahf   
  40d7ba:	add    al,BYTE PTR [eax+eax*1-0x5e4d0000]
  40d7c1:	xchg   BYTE PTR [edi-0x7ffd600e],ch
  40d7c7:	push   ss
  40d7c8:	pop    esp
  40d7c9:	or     BYTE PTR [edi],cl
  40d7cb:	jbe    0x40d80f
  40d7cd:	add    eax,0x4909f300
  40d7d2:	loopne 0x40d7c6
  40d7d4:	xchg   ebx,eax
  40d7d5:	repnz (bad) 
  40d7d7:	cs push 0xa06cfffa
  40d7dd:	leave  
  40d7de:	inc    esp
  40d7df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7e0:	sahf   
  40d7e1:	add    al,BYTE PTR [eax]
  40d7e3:	repz inc esp
  40d7e5:	add    al,bh
  40d7e7:	scas   al,BYTE PTR es:[edi]
  40d7e8:	xchg   DWORD PTR ds:0xc99ff300,eax
  40d7ee:	inc    esp
  40d7ef:	xchg   DWORD PTR [ecx-0x570cfffe],ebp
  40d7f5:	pop    eax
  40d7f6:	inc    esp
  40d7f7:	sub    al,0x7
  40d7f9:	mov    cl,0x7e
  40d7fb:	out    0x2,eax
  40d7fd:	cli    
  40d7fe:	inc    ebx
  40d7ff:	repz jg 0x40d7b5
  40d802:	stos   DWORD PTR es:[edi],eax
  40d803:	in     eax,dx
  40d804:	cmp    dl,0x4
  40d807:	repz push es
  40d809:	mov    cl,0x3b
  40d80b:	xchg   DWORD PTR [eax],edi
  40d80d:	mov    cl,0x2
  40d80f:	outs   dx,BYTE PTR ds:[esi]
  40d810:	es call 0x6bbecb19
  40d816:	sti    
  40d817:	mov    eax,ds:0x7780f91c
  40d81c:	jmp    0xfc1:0x36e592dd
  40d823:	add    BYTE PTR [eax],al
  40d825:	add    BYTE PTR [edi-0x6b7816f9],bl
  40d82b:	stc    
  40d82c:	ins    BYTE PTR es:[edi],dx
  40d82d:	cmp    al,0xf2
  40d82f:	push   es
  40d830:	jmp    0xe15deb52
  40d835:	xchg   edx,eax
  40d836:	pop    es
  40d837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d838:	add    DWORD PTR [esi-0xd],0x377cbe89
  40d83f:	scas   eax,DWORD PTR es:[edi]
  40d840:	loope  0x40d808
  40d842:	cmc    
  40d843:	adc    BYTE PTR [ebx+eax*1-0x4fcf90d],0x3b
  40d84b:	and    DWORD PTR [eax-0x5],esi
  40d84e:	sbb    dh,bh
  40d850:	imul   eax,DWORD PTR [eax-0x6d8a7618],0x71
  40d857:	(bad)  
  40d858:	loopne 0x40d7f6
  40d85a:	jp     0x40d862
  40d85c:	jmp    0xf14c5064
  40d861:	fld    DWORD PTR ss:[edi]
  40d864:	fs dec eax
  40d866:	gs ss inc ecx
  40d869:	retf   
  40d86a:	cwde   
  40d86b:	pop    es
  40d86c:	jmp    0x653a64f8
  40d871:	or     dl,dh
  40d873:	push   es
  40d874:	add    cl,ch
  40d876:	sub    BYTE PTR [edx],ch
  40d878:	neg    dh
  40d87a:	ins    BYTE PTR es:[edi],dx
  40d87b:	(bad)  
  40d87c:	(bad)  
  40d87d:	call   0xa4f6d272
  40d882:	mov    dh,BYTE PTR [eax+edx*2]
  40d885:	fs imul esi,ebp,0xfffffffa
  40d889:	push   cs
  40d88a:	add    BYTE PTR [eax],al
  40d88c:	add    BYTE PTR [ecx-0x432317c7],al
  40d892:	push   es
  40d893:	add    BYTE PTR [ebp+0x30],ah
  40d896:	clc    
  40d897:	or     DWORD PTR [ebx],0xfffffff0
  40d89a:	push   es
  40d89b:	add    dh,bl
  40d89d:	call   0x1403:0x6371f642
  40d8a4:	loop   0x40d828
  40d8a6:	mov    DWORD PTR [esp+ebp*1+0x3a53389f],ecx
  40d8ad:	push   esp
  40d8ae:	adc    DWORD PTR [ebx],0xffffffc2
  40d8b1:	bound  ecx,QWORD PTR [ecx-0x40eb8fb1]
  40d8b7:	(bad)  
  40d8b8:	fsub   QWORD PTR [ebx+esi*8]
  40d8bb:	aas    
  40d8bc:	jmp    0xf0b4212e
  40d8c1:	mov    edx,0x89e5f743
  40d8c6:	outs   dx,DWORD PTR ds:[esi]
  40d8c7:	(bad)  
  40d8c8:	call   0x6312adbd
  40d8cd:	sub    al,0xbf
  40d8cf:	cmp    ch,BYTE PTR [edx+0x370ef3eb]
  40d8d5:	inc    ebp
  40d8d6:	jge    0x40d923
  40d8d8:	fs das 
  40d8da:	iret   
  40d8db:	inc    edi
  40d8dc:	in     eax,0xdc
  40d8de:	jmp    0xcd9d826d
  40d8e3:	ret    0x7cd4
  40d8e6:	mov    al,cl
  40d8e8:	imul   ebp,DWORD PTR [ebp+0x6],0x43292e72
  40d8ef:	test   DWORD PTR [eax],0x5e000000
  40d8f5:	ja     0x40d96a
  40d8f7:	enter  0x9005,0x6
  40d8fb:	push   ss
  40d8fc:	mov    al,BYTE PTR [ebx+ebp*8]
  40d8ff:	addr16 add eax,0x8aff0ff3
  40d905:	pushf  
  40d906:	out    0x59,al
  40d908:	in     al,0x75
  40d90a:	std    
  40d90b:	mov    DWORD PTR [edi+0x5c],ecx
  40d90e:	cmp    ebx,eax
  40d910:	jg     0x40d910
  40d912:	lds    eax,FWORD PTR [ebp+0xd]
  40d915:	add    eax,0x836cddeb
  40d91a:	ss pop ss
  40d91c:	jg     0x40d96c
  40d91e:	xchg   DWORD PTR [eax+0x22],ebx
  40d921:	or     eax,0xc6c10457
  40d926:	mov    DWORD PTR [ebp-0x1e],edi
  40d929:	shr    BYTE PTR [ecx+0x4],cl
  40d92c:	push   edi
  40d92d:	inc    ecx
  40d92e:	mov    ah,0x50
  40d930:	mov    dl,0xfb
  40d932:	mov    edx,0xbe7fda01
  40d937:	je     0x40d93c
  40d939:	jmp    0x77134351
  40d93e:	xor    esp,eax
  40d940:	jno    0x40d984
  40d942:	add    bh,bh
  40d944:	ins    BYTE PTR es:[edi],dx
  40d945:	or     al,0x44
  40d947:	fcom   DWORD PTR [ecx+0x4c0673c2]
  40d94d:	inc    eax
  40d94e:	test   DWORD PTR [ecx],0x2689071
  40d954:	rcr    esp,cl
  40d956:	mov    BYTE PTR [eax],cl
  40d958:	add    BYTE PTR [eax],al
  40d95a:	add    al,ah
  40d95c:	dec    BYTE PTR [ebp+ecx*2+0x4be82be]
  40d963:	fcmovnbe st,st(2)
  40d965:	out    0xcb,eax
  40d967:	mov    bh,0x76
  40d969:	std    
  40d96a:	mov    eax,DWORD PTR [edi-0x75]
  40d96d:	push   ecx
  40d96e:	push   0xfffffff3
  40d970:	fwait
  40d971:	jge    0x40d9b7
  40d973:	xor    ecx,DWORD PTR [ebp-0x66]
  40d976:	mov    BYTE PTR ss:[esi+0x52338402],bl
  40d97d:	icebp  
  40d97e:	inc    dh
  40d980:	cmc    
  40d981:	call   0x3331:0x8fd81673
  40d988:	shl    BYTE PTR [eax],0x5b
  40d98b:	cmp    bl,bl
  40d98d:	push   es
  40d98e:	add    BYTE PTR ds:0xdb008b5a,dh
  40d994:	pop    edx
  40d995:	xchg   edi,eax
  40d996:	push   cs
  40d997:	jbe    0x40d956
  40d999:	or     BYTE PTR [eax],al
  40d99b:	repz jg 0x40da19
  40d99e:	inc    esp
  40d99f:	xor    esp,DWORD PTR [esi+edx*1]
  40d9a2:	fmul   DWORD PTR [ebp-0x3fdb6da]
  40d9a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9a9:	dec    eax
  40d9aa:	lds    edi,FWORD PTR [ebx]
  40d9ac:	jne    0x40d934
  40d9ae:	mov    edi,0x48026ff6
  40d9b3:	in     al,0xeb
  40d9b5:	icebp  
  40d9b6:	add    al,0xf3
  40d9b8:	outs   dx,DWORD PTR ds:[esi]
  40d9b9:	cmp    dh,BYTE PTR [edx+edi*8-0x53]
  40d9bd:	dec    eax
  40d9be:	test   DWORD PTR [eax],0x46f40000
  40d9c4:	xchg   esi,eax
  40d9c5:	add    al,0xf3
  40d9c7:	outs   dx,DWORD PTR ds:[esi]
  40d9c8:	dec    edx
  40d9c9:	jg     0x40d9be
  40d9cb:	outs   dx,DWORD PTR ds:[esi]
  40d9cc:	add    cl,BYTE PTR [ecx+0x447ce02e]
  40d9d2:	dec    edi
  40d9d3:	jmp    0x40da1d
  40d9d5:	mov    al,0x43
  40d9d7:	jecxz  0x40d961
  40d9d9:	sub    ecx,DWORD PTR [ebp+ecx*4+0x51c4f8e]
  40d9e0:	stc    
  40d9e1:	jmp    esi
  40d9e3:	das    
  40d9e4:	add    al,0x85
  40d9e6:	mov    bl,0x65
  40d9e8:	xchg   edi,edx
  40d9ea:	test   DWORD PTR [esi],0xcc7603e9
  40d9f0:	mov    WORD PTR [esi+ebp*2],?
  40d9f3:	mov    esp,?
  40d9f5:	(bad)  
  40d9f6:	push   ebp
  40d9f7:	xchg   BYTE PTR [eax-0x7ae3b3ca],bh
  40d9fd:	stc    
  40d9fe:	add    al,0x7
  40da00:	fs (bad) 
  40da02:	in     eax,dx
  40da03:	mov    esi,DWORD PTR [esi+0x8]
  40da06:	repz push es
  40da08:	mov    DWORD PTR [edx-0x70d9cc91],0x7c871e25
  40da12:	ja     0x40da49
  40da14:	push   ss
  40da15:	(bad)  
  40da16:	adc    eax,0x6f7cdcfc
  40da1b:	retf   
  40da1c:	add    eax,0x5b90058f
  40da21:	aam    0xfd
  40da23:	test   ebp,esi
  40da25:	add    BYTE PTR [eax],0x0
  40da28:	add    BYTE PTR [edi],bh
  40da2a:	xor    ebp,esi
  40da2c:	mov    gs,ebp
  40da2e:	outs   dx,BYTE PTR ds:[esi]
  40da2f:	pop    edi
  40da30:	dec    esi
  40da31:	repz push es
  40da33:	jo     0x40da7d
  40da35:	retf   
  40da36:	mov    eax,edx
  40da38:	mov    fs,ebp
  40da3a:	mov    ah,BYTE PTR [edx+0x7]
  40da3d:	repz push es
  40da3f:	push   ecx
  40da40:	add    esi,ebx
  40da42:	pop    es
  40da43:	jmp    0xfbc6c561
  40da48:	mov    ds:0x8ee8c989,eax
  40da4d:	pop    es
  40da4e:	or     edi,edx
  40da50:	inc    ebx
  40da51:	repz xchg ecx,eax
  40da53:	mov    al,ds:0xdffb99ca
  40da58:	lds    ebp,FWORD PTR [edi]
  40da5a:	jle    0x40da43
  40da5c:	pushf  
  40da5d:	sub    al,0xb
  40da5f:	jmp    0x893c5e67
  40da64:	jp     0x40da6d
  40da66:	ltr    WORD PTR [edx]
  40da69:	fs cli 
  40da6b:	out    0x17,eax
  40da6d:	(bad)  
  40da6e:	xchg   edx,eax
  40da6f:	cli    
  40da70:	data16 jne 0x40d9fb
  40da73:	imul   eax
  40da75:	pop    ebp
  40da76:	mov    dh,BYTE PTR [edx]
  40da78:	in     eax,dx
  40da79:	lock push es
  40da7b:	mov    esp,DWORD PTR [eax+ebp*2+0x75554c88]
  40da82:	mov    BYTE PTR [ecx+ecx*1+0x36fe846d],cl
  40da89:	mov    bh,0xe2
  40da8b:	iret   
  40da8c:	pusha  
  40da8d:	add    BYTE PTR [eax],al
  40da8f:	add    bl,ah
  40da91:	bound  ecx,QWORD PTR [eax-0x7bb3b33c]
  40da97:	cmc    
  40da98:	outs   dx,BYTE PTR ds:[esi]
  40da99:	test   dh,bh
  40da9b:	jmp    0x40da8d
  40da9d:	push   es
  40da9e:	add    BYTE PTR [eax-0x55],ah
  40daa1:	sbb    eax,0x8e7506fe
  40daa6:	test   ch,bl
  40daa8:	outs   dx,BYTE PTR ds:[esi]
  40daa9:	test   dh,bh
  40daab:	add    BYTE PTR [esi+0x8],al
  40daae:	add    cl,ch
  40dab0:	jge    0x40daad
  40dab2:	pop    es
  40dab3:	je     0x40db21
  40dab5:	sbb    dh,bh
  40dab7:	fisubr WORD PTR [esi+0x6c]
  40daba:	xlat   BYTE PTR ds:[ebx]
  40dabb:	nop
  40dabc:	lock push es
  40dabe:	test   BYTE PTR [ecx+0x51531eeb],ch
  40dac4:	jbe    0x40da4b
  40dac6:	(bad)  
  40dac7:	call   0xe1b55ed3
  40dacc:	sbb    ebx,DWORD PTR [bx+si]
  40dacf:	xlat   BYTE PTR ds:[ebx]
  40dad0:	xor    BYTE PTR [edi],al
  40dad2:	test   DWORD PTR [ecx-0x15336d5a],ebp
  40dad8:	lock push es
  40dada:	call   FWORD PTR [edi+esi*2]
  40dadd:	xchg   ebx,eax
  40dade:	test   ch,dh
  40dae0:	jle    0x40da67
  40dae2:	inc    BYTE PTR [eax]
  40dae4:	push   ebp
  40dae5:	int3   
  40dae6:	out    dx,eax
  40dae7:	or     BYTE PTR [edx+0x25e80008],0xd0
  40daee:	(bad)  
  40daef:	call   esi
  40daf1:	dec    edx
  40daf2:	or     eax,0x84
  40daf7:	jnp    0x40db02
  40daf9:	add    BYTE PTR [eax],al
  40dafb:	iret   
  40dafc:	retf   
  40dafd:	out    dx,eax
  40dafe:	push   eax
  40daff:	iret   
  40db00:	mov    ebp,DWORD PTR [edx]
  40db02:	(bad)  
  40db03:	mov    ebp,0x22534e91
  40db08:	xchg   ebx,eax
  40db09:	std    
  40db0a:	add    BYTE PTR [edx+0x3b],cl
  40db0d:	push   DWORD PTR [ebp-0x4e]
  40db10:	xchg   ecx,eax
  40db11:	adc    edi,DWORD PTR [eax-0x750037b9]
  40db17:	or     al,BYTE PTR [eax]
  40db19:	je     0x40daef
  40db1b:	adc    DWORD PTR [edi+0x5928e0d],edx
  40db21:	add    BYTE PTR [eax],al
  40db23:	cdq    
  40db24:	xchg   esp,eax
  40db25:	add    al,0xf
  40db27:	cwde   
  40db28:	sbb    al,BYTE PTR [edx]
  40db2a:	add    BYTE PTR [edx],cl
  40db2c:	sub    cl,BYTE PTR [ebx-0x26cd17b]
  40db32:	push   DWORD PTR [eax+edx*2-0x7d]
  40db36:	adc    al,0xce
  40db38:	xchg   edx,eax
  40db39:	std    
  40db3a:	xorps  xmm6,XMMWORD PTR [edx+eax*1]
  40db3e:	add    dl,cl
  40db40:	sub    DWORD PTR [ebx+0xe1cd8f8],eax
  40db46:	mov    edx,DWORD PTR [edi+0x70]
  40db49:	cli    
  40db4a:	(bad)  
  40db4b:	jge    0x40db9b
  40db4d:	xor    DWORD PTR [eax],0x7d
  40db50:	xchg   edx,eax
  40db51:	std    
  40db52:	jmp    0x40db15
  40db54:	sub    DWORD PTR [ebx+0x1b1ca5f8],eax
  40db5a:	push   0x0
  40db5c:	add    BYTE PTR [eax],al
  40db5e:	call   0x8b9c:0xf3348404
  40db65:	(bad)  
  40db66:	jle    0x40db4a
  40db68:	out    dx,al
  40db69:	sti    
  40db6a:	test   BYTE PTR [edx+ebx*4-0x73fb60a0],cl
  40db71:	test   BYTE PTR [ebx-0xed97a94],dh
  40db77:	ins    DWORD PTR es:[edi],dx
  40db78:	add    al,BYTE PTR [eax+0xf026fe4]
  40db7e:	jbe    0x40db02
  40db80:	add    BYTE PTR [eax],al
  40db82:	repz push ebx
  40db84:	leave  
  40db85:	push   ds
  40db86:	cld    
  40db87:	jmp    0x5cc9:0x6df301f6
  40db8e:	push   edi
  40db8f:	mov    edx,0x3dbefed0
  40db94:	jle    0x40db1a
  40db96:	fbstp  TBYTE PTR [esp+ecx*4]
  40db99:	inc    bl
  40db9b:	cli    
  40db9c:	test   DWORD PTR [ebx+0x4f8c241e],edx
  40dba2:	or     ecx,edi
  40dba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dba5:	dec    BYTE PTR [ebx+ecx*4]
  40dba8:	jg     0x40db66
  40dbaa:	pop    edi
  40dbab:	or     cl,BYTE PTR [esi+edi*8-0x7701051c]
  40dbb2:	push   esi
  40dbb3:	leave  
  40dbb4:	(bad)  
  40dbb5:	(bad)  
  40dbb6:	in     al,dx
  40dbb7:	out    0x6d,eax
  40dbb9:	xchg   edi,eax
  40dbba:	out    0x69,al
  40dbbc:	mov    cl,BYTE PTR [edx+0x447c6036]
  40dbc2:	add    BYTE PTR [eax],al
  40dbc4:	add    bh,cl
  40dbc6:	enter  0xff83,0xcc
  40dbca:	jo     0x40dc43
  40dbcc:	test   BYTE PTR [edi],dl
  40dbce:	dec    ecx
  40dbcf:	mov    bh,dh
  40dbd1:	and    BYTE PTR [eax],ah
  40dbd3:	mov    edx,DWORD PTR [edi+edi*8]
  40dbd6:	popa   
  40dbd7:	inc    edx
  40dbd8:	add    ah,bh
  40dbda:	stc    
  40dbdb:	inc    edx
  40dbdc:	add    esi,DWORD PTR [eax+0x7]
  40dbdf:	lods   eax,DWORD PTR ds:[esi]
  40dbe0:	clc    
  40dbe1:	xor    al,0x12
  40dbe3:	gs nop
  40dbe5:	xchg   esp,eax
  40dbe6:	sub    al,0x3b
  40dbe9:	cmp    edi,ebx
  40dbeb:	sar    BYTE PTR [ebx],cl
  40dbed:	hlt    
  40dbee:	mov    esi,DWORD PTR [edi]
  40dbf0:	add    eax,0x8a6a06f3
  40dbf5:	ficom  WORD PTR [ecx]
  40dbf7:	addr16 pop esp
  40dbf9:	repz push es
  40dbfb:	jmp    0xcf1fd81d
  40dc00:	jl     0x40dc79
  40dc02:	xor    ebx,DWORD PTR [esi-0x75]
  40dc05:	push   ebp
  40dc06:	in     eax,dx
  40dc07:	clc    
  40dc08:	js     0x40dbbf
  40dc0a:	or     bh,BYTE PTR [ecx+0x463b6f78]
  40dc10:	mov    edi,DWORD PTR ds:0x434125d7
  40dc16:	and    ebp,ecx
  40dc18:	add    esi,ebx
  40dc1a:	outs   dx,BYTE PTR ds:[esi]
  40dc1b:	(bad)  
  40dc1c:	scas   al,BYTE PTR es:[edi]
  40dc1d:	and    eax,0xbef9282
  40dc22:	imul   ebp,eax,0x3
  40dc25:	repz mov WORD PTR [ebp+0xff],gs
  40dc2c:	jo     0x40dc75
  40dc2e:	fnstsw WORD PTR [edi-0x7f]
  40dc31:	pop    es
  40dc32:	jmp    0x28f9c83a
  40dc37:	jns    0x40dbe5
  40dc39:	or     DWORD PTR [edx-0x7c6f026c],esi
  40dc3f:	add    al,0xf3
  40dc41:	push   es
  40dc42:	cmp    DWORD PTR [ecx+0x2d],edi
  40dc45:	or     al,0x38
  40dc47:	jns    0x40dcb0
  40dc49:	call   0x88c0:0xd7cd8ad4
  40dc50:	stos   BYTE PTR es:[edi],al
  40dc51:	add    ebp,0x550b70c1
  40dc57:	xchg   DWORD PTR [ebp+0x2be8ff81],esi
  40dc5d:	fiadd  DWORD PTR [edx+edi*8]
  40dc60:	mov    al,0x92
  40dc62:	dec    esp
  40dc63:	mov    ch,0xe7
  40dc65:	(bad)  
  40dc66:	dec    edi
  40dc67:	jo     0x40dc9c
  40dc69:	push   ebx
  40dc6a:	mov    WORD PTR [esp+ebx*1+0x7e],gs
  40dc6e:	dec    BYTE PTR [esi+0x3d1481c0]
  40dc74:	add    DWORD PTR [ecx+0x0],0x64
  40dc78:	mov    al,0x10
  40dc7a:	test   eax,eax
  40dc7c:	test   DWORD PTR [esi],0x349ebb00
  40dc82:	div    BYTE PTR [edx-0x4d]
  40dc85:	push   edx
  40dc86:	cmp    ah,BYTE PTR [edi]
  40dc88:	in     al,0x15
  40dc8a:	setg   BYTE PTR [esi+0x5c4b8c]
  40dc91:	add    BYTE PTR [eax],al
  40dc93:	mov    eax,0xeced483e
  40dc98:	adc    eax,0x3c4ca98b
  40dc9d:	(bad)  
  40dc9e:	mov    esp,0x69c1837c
  40dca3:	jbe    0x40dcac
  40dca5:	jb     0x40dced
  40dca7:	jg     0x40dc29
  40dca9:	(bad)  
  40dcaa:	call   0xf9886a9f
  40dcaf:	(bad)  
  40dcb0:	(bad)  
  40dcb1:	dec    esp
  40dcb2:	sbb    DWORD PTR [ecx-0xf],edi
  40dcb5:	pop    ss
  40dcb6:	je     0x40dd2b
  40dcb8:	sub    eax,0xd16afeff
  40dcbd:	out    0x5b,eax
  40dcbf:	sahf   
  40dcc0:	cmp    esi,0x2bc36d87
  40dcc6:	out    0x6a,al
  40dcc8:	adc    DWORD PTR [esi],0xb48fdb54
  40dcce:	sub    eax,0x60fe817a
  40dcd3:	xor    al,0x30
  40dcd5:	inc    DWORD PTR [eax]
  40dcd7:	mov    ch,0x8e
  40dcd9:	std    
  40dcda:	jne    0x40dc62
  40dcdc:	mov    ss,WORD PTR [ebx]
  40dcde:	or     ah,cl
  40dce0:	(bad)  
  40dce1:	(bad)  
  40dce2:	jmp    0xfea5:0xafc8ba5
  40dce9:	mov    ebp,0x6a048a00
  40dcee:	add    al,dl
  40dcf0:	and    al,0x89
  40dcf2:	test   DWORD PTR [esi-0x71],eax
  40dcf5:	std    
  40dcf6:	inc    DWORD PTR [eax]
  40dcf8:	add    BYTE PTR [eax],al
  40dcfa:	loopne 0x40dd02
  40dcfc:	lea    eax,[edi-0x72]
  40dcff:	xor    al,0x8d
  40dd01:	test   DWORD PTR [edx+0xafffd8f],ebp
  40dd07:	inc    esi
  40dd08:	inc    ebx
  40dd09:	lock pop edx
  40dd0b:	add    al,0x0
  40dd0d:	add    dl,al
  40dd0f:	aas    
  40dd10:	(bad)  
  40dd12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd13:	and    BYTE PTR [eax],cl
  40dd15:	pop    ebx
  40dd16:	sub    al,0x3
  40dd18:	add    ebx,DWORD PTR [edi]
  40dd1a:	leave  
  40dd1b:	dec    ecx
  40dd1c:	add    BYTE PTR [ebx+0x66fd9877],al
  40dd22:	xchg   ebx,eax
  40dd23:	jmp    FWORD PTR [edi+edi*8]
  40dd26:	aad    0x8d
  40dd28:	jae    0x40dd7f
  40dd2a:	add    BYTE PTR [esi+edi*8-0x7c06f501],0x14
  40dd32:	out    0x8d,eax
  40dd34:	std    
  40dd35:	push   0x1a
  40dd37:	xor    al,0xff
  40dd39:	adc    eax,0x3e763e
  40dd3e:	ins    BYTE PTR es:[edi],dx
  40dd3f:	add    eax,DWORD PTR [esp+ebp*1+0x66fd8ee5]
  40dd46:	push   ebx
  40dd47:	add    BYTE PTR [ebx],dl
  40dd49:	std    
  40dd4a:	aad    0x8e
  40dd4c:	or     eax,0xc28a8ab7
  40dd51:	or     al,0xf3
  40dd53:	jmp    0x8887:0x50c6134d
  40dd5a:	ss stos BYTE PTR es:[edi],al
  40dd5c:	call   0x6e78:0x66
  40dd63:	add    cl,BYTE PTR [ecx-0x87cb5ca]
  40dd69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd6a:	pusha  
  40dd6b:	jle    0x40ddbe
  40dd6d:	repnz ins DWORD PTR es:[edi],dx
  40dd6f:	add    dh,BYTE PTR [ebx]
  40dd71:	mov    bl,0xec
  40dd73:	add    eax,0x6d68e4dc
  40dd78:	mov    edi,0xba2ed3b
  40dd7d:	jo     0x40dd2c
  40dd7f:	cld    
  40dd80:	mov    BYTE PTR [esi],ch
  40dd82:	sahf   
  40dd83:	leave  
  40dd84:	pop    esp
  40dd85:	inc    edi
  40dd86:	ja     0x40dd63
  40dd88:	push   cs
  40dd89:	pushf  
  40dd8a:	jmp    0x44c9:0xe85cfed6
  40dd91:	aaa    
  40dd92:	pop    edx
  40dd93:	out    0xfe,eax
  40dd95:	(bad)  
  40dd96:	fnsave [ebp-0x7c]
  40dd99:	pop    ss
  40dd9a:	rol    DWORD PTR [edi+0x3df4a3fe],1
  40dda0:	aam    0xc9
  40dda2:	ins    DWORD PTR es:[edi],dx
  40dda3:	fcmovnb st,st(2)
  40dda5:	ret    
  40dda6:	jmp    0xec0e:0x30c31efe
  40ddad:	sbb    al,0x82
  40ddaf:	(bad)  
  40ddb0:	adc    eax,0x7c836db3
  40ddb5:	pop    ds
  40ddb6:	sbb    al,bh
  40ddb8:	add    DWORD PTR [ebp+0x6d],0x2
  40ddbc:	add    ah,bh
  40ddbe:	add    DWORD PTR [edi-0x77a69174],edx
  40ddc4:	inc    BYTE PTR [eax]
  40ddc6:	add    BYTE PTR [eax],al
  40ddc8:	in     al,dx
  40ddc9:	or     BYTE PTR [ecx+0x7e6ff2b5],ah
  40ddcf:	mov    edi,0x5c6d06ec
  40ddd4:	aam    0x7e
  40ddd6:	call   0x63982555
  40dddb:	inc    ecx
  40dddc:	ret    
  40dddd:	xlat   BYTE PTR ds:[ebx]
  40ddde:	pop    ebx
  40dddf:	or     DWORD PTR [eax],0x2487c57e
  40dde5:	cmp    ah,BYTE PTR [edx-0x4a8194cd]
  40ddeb:	add    al,0xf3
  40dded:	xor    DWORD PTR [edi-0x21fc91cc],esp
  40ddf3:	xor    edx,DWORD PTR [esp+esi*8-0x41187874]
  40ddfa:	sti    
  40ddfb:	inc    ebx
  40ddfc:	repz inc ecx
  40ddfe:	stos   BYTE PTR es:[edi],al
  40ddff:	pop    es
  40de00:	out    dx,eax
  40de01:	or     eax,0x7dc8793e
  40de06:	jge    0x40dd8f
  40de08:	sub    ecx,esp
  40de0a:	xchg   esp,eax
  40de0b:	adc    edi,ebx
  40de0d:	cmp    DWORD PTR [eax+0x710e6a1e],esp
  40de13:	aaa    
  40de14:	icebp  
  40de15:	in     al,0x69
  40de17:	dec    ecx
  40de18:	sbb    BYTE PTR [esi+0x55],bh
  40de1b:	xchg   ebp,ebx
  40de1d:	or     eax,0x503ec574
  40de22:	push   0x277cf1a5
  40de27:	sub    DWORD PTR [edi+0x7bdd5a],0x0
  40de2e:	add    BYTE PTR [ebp-0x75064bf7],dh
  40de34:	push   ss
  40de35:	je     0x40deb0
  40de37:	loopne 0x40deb6
  40de39:	sbb    eax,0x6a0d1987
  40de3e:	or     DWORD PTR [edi],esp
  40de40:	or     DWORD PTR [esp+eax*2+0x79740289],edx
  40de47:	les    edi,FWORD PTR [ebp-0x3]
  40de4a:	xchg   BYTE PTR [ebx-0x74],al
  40de4d:	jmp    DWORD PTR [ebp-0x2018291c]
  40de53:	(bad)  
  40de54:	jl     0x40de54
  40de56:	push   ebx
  40de57:	icebp  
  40de58:	mov    ecx,DWORD PTR [edi+ecx*1+0x38fe7c74]
  40de5f:	dec    edx
  40de60:	shl    BYTE PTR [esi],cl
  40de62:	iret   
  40de63:	pop    es
  40de64:	outs   dx,DWORD PTR ds:[esi]
  40de65:	cli    
  40de66:	mov    eax,ds:0x34fe7c6d
  40de6b:	push   ebx
  40de6c:	mov    cl,BYTE PTR [ebp+ebx*2+0x18fe7c7b]
  40de73:	loopne 0x40de7e
  40de75:	(bad)  
  40de76:	cmp    esp,eax
  40de78:	jge    0x40deee
  40de7a:	xchg   ecx,eax
  40de7b:	jne    0x40de8f
  40de7d:	add    al,0xff
  40de7f:	xor    BYTE PTR [edi],al
  40de81:	jmp    0x40de6e
  40de83:	mov    eax,ds:0x5b2c8a60
  40de88:	cmp    cl,cl
  40de8a:	push   0x78
  40de8c:	jl     0x40de9c
  40de8e:	pop    esp
  40de8f:	das    
  40de90:	mov    es,WORD PTR [ecx+ecx*8+0x76000000]
  40de97:	jl     0x40de97
  40de99:	push   0x2f
  40de9b:	pop    es
  40de9c:	mov    DWORD PTR [esp+ebx*2+0x7b],ebp
  40dea0:	(bad)  
  40dea1:	push   esi
  40dea2:	leave  
  40dea3:	retf   0x6007
  40dea6:	mov    ebx,0x6d46fe15
  40deab:	nop
  40deac:	dec    esp
  40dead:	push   ecx
  40deae:	scas   eax,DWORD PTR es:[edi]
  40deaf:	mov    bl,BYTE PTR [ebx]
  40deb1:	aaa    
  40deb2:	ins    DWORD PTR es:[edi],dx
  40deb3:	jl     0x40df07
  40deb5:	call   0x7c6e:0xfd848be1
  40debc:	(bad)  
  40debd:	mov    ecx,0x59147dc1
  40dec2:	add    edi,DWORD PTR ds:0xc306400
  40dec8:	pop    DWORD PTR [eax]
  40deca:	add    eax,DWORD PTR [ebp+0x1761fffd]
  40ded0:	in     al,dx
  40ded1:	call   0x40a9c7
  40ded6:	icebp  
  40ded7:	jno    0x40de5a
  40ded9:	clc    
  40deda:	int    0xc
  40dedc:	push   es
  40dedd:	(bad)  
  40dede:	pop    ss
  40dedf:	mov    bh,bh
  40dee1:	jmp    0x9b05:0xfb5c00d9
  40dee8:	fsubr  DWORD PTR ds:[ebp-0x3d8a767e]
  40deef:	mov    al,ds:0x89a00f3
  40def4:	mov    BYTE PTR [ebp+0x65],0x8
  40def8:	jmp    0x40dfee
  40defd:	mov    cl,BYTE PTR [eax]
  40deff:	add    BYTE PTR [ebx],dh
  40df01:	pop    edx
  40df02:	sbb    eax,0x1a853e83
  40df07:	mov    DWORD PTR [esi-0x78],eax
  40df0a:	or     eax,0xf59a6a0d
  40df0f:	inc    esp
  40df10:	or     BYTE PTR [edx],cl
  40df12:	fwait
  40df13:	or     ebx,ecx
  40df15:	fld    QWORD PTR [ecx+0x24d303e9]
  40df1b:	add    al,0x8b
  40df1d:	add    al,0x9b
  40df1f:	xchg   edi,eax
  40df20:	mov    bh,0x5b
  40df22:	or     BYTE PTR [ebx-0x2ff42c10],cl
  40df28:	sub    DWORD PTR [ecx+eax*4+0x2c6840d],0x0
  40df30:	add    ch,ch
  40df32:	or     esp,eax
  40df34:	push   ebx
  40df35:	test   BYTE PTR [ebx],ch
  40df37:	call   0xfdc2c42c
  40df3c:	mov    edx,edx
  40df3e:	test   ebp,edi
  40df40:	add    DWORD PTR [edi+0x3f],esp
  40df43:	lea    eax,[ebp-0xd]
  40df46:	xor    cl,BYTE PTR gs:[ebp-0x17cbc24a]
  40df4d:	scas   eax,DWORD PTR es:[edi]
  40df4e:	mov    BYTE PTR [edx],0x0
  40df51:	js     0x40df45
  40df53:	mov    dl,0x8a
  40df55:	jmp    0x40df3d
  40df57:	push   es
  40df58:	aam    0xcb
  40df5a:	test   BYTE PTR [ecx+0x0],cl
  40df5d:	repz lock cmp esi,0x0
  40df62:	add    BYTE PTR [eax],al
  40df64:	inc    edi
  40df65:	repz sub ebp,eax
  40df68:	jmp    0xa422:0x680003dc
  40df6f:	sub    BYTE PTR [ebx+0x4453326f],0xbd
  40df76:	or     eax,0x8d009b08
  40df7b:	(bad)  
  40df7c:	pushf  
  40df7d:	call   0x6ed5620c
  40df82:	or     eax,0xb0128c0b
  40df87:	mov    ah,BYTE PTR [esi]
  40df89:	call   0x26e:0x4491
  40df8f:	mov    edi,esi
  40df91:	cdq    
  40df92:	call   0x6483:0x26eaa30
  40df99:	hlt    
  40df9a:	repz cmp DWORD PTR [eax+0x70fe83ec],0xffffffe4
  40dfa2:	add    DWORD PTR [ebx+eiz*4+0x23],esi
  40dfa6:	ds sti 
  40dfa8:	repz enter 0x8b38,0x3d
  40dfad:	(bad)
  40dfb0:	repnz ins DWORD PTR es:[edi],dx
  40dfb2:	ja     0x40dfa3
  40dfb4:	jo     0x40dff1
  40dfb6:	test   BYTE PTR [ebp+ebp*8+0x2b],dh
  40dfba:	ds div esi
  40dfbd:	enter  0x55cc,0xb
  40dfc1:	push   es
  40dfc2:	sub    DWORD PTR ds:0xe1e06f3,ecx
  40dfc8:	add    BYTE PTR [eax],al
  40dfca:	add    BYTE PTR [ebx],dl
  40dfcc:	xlat   BYTE PTR ds:[ebx]
  40dfcd:	mov    esi,0x10e8784
  40dfd2:	and    eax,0x80057afd
  40dfd7:	in     al,0x8
  40dfd9:	je     0x40dfd3
  40dfdb:	jns    0x40dfb9
  40dfdd:	loopne 0x40e00c
  40dfdf:	retf   
  40dfe0:	enter  0x235,0xf3
  40dfe4:	ins    DWORD PTR es:[edi],dx
  40dfe5:	test   BYTE PTR [esi+0xa537ac4],0xad
  40dfec:	(bad)  
  40dfed:	fld    QWORD PTR ds:0xe16106c8
  40dff3:	mov    ecx,0xf3bc996f
  40dff8:	push   es
  40dff9:	mov    esi,0xfe6fbcf9
  40dffe:	pop    edx
  40dfff:	popf   
  40e000:	jp     0x40e064
  40e002:	leave  
  40e003:	cdq    
  40e004:	cmp    ebp,eax
  40e006:	adc    dh,BYTE PTR [esi-0x40]
  40e009:	lahf   
  40e00a:	add    DWORD PTR [ebp+0x7c7b1387],0x9
  40e011:	gs mov bl,0x7b
  40e014:	jp     0x40df9b
  40e016:	and    edi,0x66
  40e019:	jge    0x40e014
  40e01b:	pop    ebp
  40e01c:	in     eax,dx
  40e01d:	jne    0x40dfa2
  40e01f:	out    0xe,eax
  40e021:	adc    DWORD PTR [edx],0x89657a5d
  40e027:	mov    WORD PTR [edx],cs
  40e029:	je     0x40e06f
  40e02b:	pop    ebx
  40e02c:	xchg   esp,eax
  40e02d:	dec    edi
  40e02e:	add    DWORD PTR [eax],0x0
  40e031:	add    BYTE PTR ds:0x717061d4,bh
  40e037:	imul   ecx,DWORD PTR [eax],0xffffff87
  40e03a:	scas   eax,DWORD PTR es:[edi]
  40e03b:	or     bh,BYTE PTR [esi]
  40e03d:	clc    
  40e03e:	jmp    0x4ecdfb3
  40e043:	add    eax,0xc994a48d
  40e048:	mov    WORD PTR [esp+edx*4-0xb6b0137],gs
  40e04f:	inc    ecx
  40e050:	inc    esp
  40e051:	adc    eax,0xe90006e7
  40e056:	cld    
  40e057:	or     bh,bh
  40e059:	fsubr  QWORD PTR [edx+edx*1-0x468416c0]
  40e060:	jae    0x40e046
  40e062:	jne    0x40e0a5
  40e064:	inc    BYTE PTR [edx]
  40e066:	xor    BYTE PTR [edx+0x14],bh
  40e069:	jmp    0xd240a758
  40e06e:	inc    ecx
  40e06f:	lea    eax,[ecx+eax*8+0x6f]
  40e073:	ret    0x47f7
  40e076:	fs ret 0xd2e5
  40e07a:	cli    
  40e07b:	test   DWORD PTR [ecx+eax*8-0x10],esp
  40e07f:	xor    eax,0xc26e4fc0
  40e084:	cmc    
  40e085:	arpl   WORD PTR [ebx+0xa2c8809],bp
  40e08b:	lock pop es
  40e08d:	ins    BYTE PTR es:[edi],dx
  40e08e:	mov    ebx,0x7b964f75
  40e093:	add    esi,eax
  40e095:	and    al,0x0
  40e097:	add    BYTE PTR [eax],al
  40e099:	sti    
  40e09a:	jns    0x40e082
  40e09c:	fisubr DWORD PTR [ebx-0x4845fffa]
  40e0a2:	test   DWORD PTR [edi-0x75b9841a],edi
  40e0a8:	test   al,0xa7
  40e0aa:	inc    edi
  40e0ab:	psubsw mm5,QWORD PTR [ebx]
  40e0ae:	mov    ebx,gs
  40e0b0:	push   0xe90131d4
  40e0b5:	lock aad 0x8a
  40e0b8:	lods   al,BYTE PTR ds:[esi]
  40e0b9:	call   0x8941378e
  40e0be:	in     eax,dx
  40e0bf:	enter  0x1a6f,0x5
  40e0c3:	xor    ecx,ecx
  40e0c5:	add    ecx,DWORD PTR es:[edi]
  40e0c8:	xchg   esp,eax
  40e0c9:	retf   
  40e0ca:	xor    dh,dh
  40e0cc:	push   esi
  40e0cd:	pusha  
  40e0ce:	or     al,0x8d
  40e0d0:	inc    ebp
  40e0d1:	out    dx,al
  40e0d2:	push   ebp
  40e0d3:	mov    ebx,edi
  40e0d5:	xchg   ebx,eax
  40e0d6:	push   esi
  40e0d7:	jmp    0x5eff:0xffb103e8
  40e0de:	les    esi,FWORD PTR [ebx+0xf]
  40e0e1:	test   al,0xc4
  40e0e3:	out    0xa6,eax
  40e0e5:	retf   
  40e0e6:	add    al,0x0
  40e0e8:	add    BYTE PTR [edi-0x7],0xfe
  40e0ec:	jae    0x40e0bc
  40e0ee:	mov    edi,ecx
  40e0f0:	push   esi
  40e0f1:	and    BYTE PTR [ecx*4-0x19ac5ebb],al
  40e0f8:	cli    
  40e0f9:	pop    ecx
  40e0fa:	add    al,0x0
  40e0fc:	test   BYTE PTR [eax],al
  40e0fe:	add    BYTE PTR [eax],al
  40e100:	pop    edx
  40e101:	jo     0x40e0e9
  40e103:	jmp    0x40e08a
  40e105:	mov    cl,BYTE PTR [ebx-0x19]
  40e108:	adc    esp,eax
  40e10a:	and    eax,DWORD PTR [eax]
  40e10c:	mov    al,BYTE PTR [edi-0x3bb47502]
  40e112:	call   0x8a036227
  40e117:	ror    DWORD PTR [ebx],1
  40e119:	loope  0x40e119
  40e11b:	dec    BYTE PTR [edx+0x4ae1c104]
  40e121:	or     edx,ecx
  40e123:	rol    DWORD PTR [edx+0x52e2c10b],0xb
  40e12a:	ret    0x8c48
  40e12d:	inc    eax
  40e12e:	cmc    
  40e12f:	pop    edx
  40e130:	pop    ss
  40e131:	test   esi,edi
  40e133:	call   FWORD PTR [edx+0x17]
  40e136:	xchg   DWORD PTR [ebx+esi*8-0x36fffd93],eax
  40e13d:	ins    DWORD PTR es:[edi],dx
  40e13e:	in     al,dx
  40e13f:	add    BYTE PTR [esi-0x55],bh
  40e142:	jnp    0x40e193
  40e144:	js     0x40e10b
  40e146:	imul   ebp,DWORD PTR [esi-0x7bfd90a0],0x33
  40e14d:	mov    dl,0x98
  40e14f:	mov    DWORD PTR [esi-0x417c73dc],esi
  40e155:	sub    DWORD PTR [edx+0x43e9fcfe],eax
  40e15b:	jae    0x40e142
  40e15d:	lahf   
  40e15e:	cmp    ebp,0x26dec
  40e164:	add    BYTE PTR [eax],al
  40e166:	add    BYTE PTR [ebp+0x10],ah
  40e169:	imul   edi,DWORD PTR [ecx-0x24],0x70
  40e16d:	jg     0x40e0fb
  40e16f:	cs jle 0x40e144
  40e172:	xor    cl,ah
  40e174:	cmp    cl,bl
  40e176:	mov    WORD PTR [esi-0x57],gs
  40e179:	cmp    dh,0xbc
  40e17c:	cmp    eax,0x48c37c8b
  40e181:	adc    eax,0x42e06b4
  40e186:	test   DWORD PTR [ebx+0x36c60a31],esi
  40e18c:	mov    ecx,0xe4e0eadb
  40e191:	cmc    
  40e192:	out    dx,eax
  40e193:	cwde   
  40e194:	jbe    0x40e119
  40e196:	jge    0x40e187
  40e198:	imul   esi,esi,0x8
  40e19b:	push   0x7c3b2017
  40e1a0:	adc    dh,BYTE PTR [ebp-0x16]
  40e1a3:	add    ebp,esi
  40e1a5:	enter  0xd917,0x61
  40e1a9:	cmp    DWORD PTR [edi+0x448f1df7],0x4c
  40e1b0:	sbb    eax,0x626cb6c
  40e1b5:	data16 add BYTE PTR [ebp-0xf],0x58
  40e1ba:	and    bh,0xe
  40e1bd:	inc    ebx
  40e1bf:	xor    al,0x3c
  40e1c1:	push   esi
  40e1c2:	div    DWORD PTR ds:0xca78c386
  40e1c8:	inc    eax
  40e1c9:	mov    ds:0x7c,eax
  40e1ce:	repz pop es
  40e1d0:	ins    BYTE PTR es:[edi],dx
  40e1d1:	sub    al,0xf2
  40e1d3:	push   es
  40e1d4:	jmp    0xabcadec6
  40e1d9:	push   ebx
  40e1da:	call   0xff32:0xe780b906
  40e1e1:	ret    
  40e1e2:	hlt    
  40e1e3:	and    DWORD PTR [edi+ecx*1],0x59
  40e1e7:	or     DWORD PTR [ecx+0x18cc7be9],esp
  40e1ed:	adc    BYTE PTR [ebp-0x1a34f334],ah
  40e1f3:	mov    al,BYTE PTR [eax+0x3]
  40e1f6:	repz push es
  40e1f8:	xor    eax,edi
  40e1fa:	sti    
  40e1fb:	dec    esp
  40e1fc:	and    esi,DWORD PTR [edi+0x19]
  40e1ff:	pusha  
  40e200:	aam    0x4
  40e202:	repz push es
  40e204:	pop    esp
  40e205:	leave  
  40e206:	mov    esp,0xf3b8b15f
  40e20b:	push   es
  40e20c:	jb     0x40e282
  40e20e:	imul   edi,esp,0xffffffb8
  40e211:	adc    DWORD PTR [esi-0x7296cb8a],0xfffffffc
  40e218:	xchg   esp,eax
  40e219:	jmp    0x74d3:0x6c39dd2a
  40e220:	xchg   ebp,eax
  40e221:	jg     0x40e28c
  40e223:	outs   dx,DWORD PTR ds:[esi]
  40e224:	imul   edi,DWORD PTR [edi-0xd],0xaf911efb
  40e22b:	(bad)  
  40e22c:	sbb    BYTE PTR [ecx+0x18ff76b7],dl
  40e232:	add    BYTE PTR [eax],al
  40e234:	add    bh,al
  40e236:	out    dx,al
  40e237:	mov    ch,0xe8
  40e239:	lock xor DWORD PTR [ecx+ebx*2+0x78],0xd0dc887e
  40e242:	ins    DWORD PTR es:[edi],dx
  40e243:	fwait
  40e244:	lahf   
  40e245:	out    dx,al
  40e246:	push   es
  40e247:	or     DWORD PTR [esi-0x54],0xfffffffa
  40e24b:	or     esi,DWORD PTR [edx+0x12]
  40e24e:	push   cs
  40e24f:	(bad)  
  40e250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e252:	shr    al,1
  40e254:	test   edi,ebp
  40e256:	push   es
  40e257:	add    BYTE PTR [esi-0x168c3868],dl
  40e25d:	lock add DWORD PTR [ebp+ecx*1+0x68],0xa76a07d3
  40e266:	pop    es
  40e267:	push   eax
  40e268:	or     edx,0xffffffdc
  40e26b:	push   edx
  40e26c:	adc    DWORD PTR ds:0x69fefe73,edi
  40e272:	jge    0x40e1f6
  40e274:	imul   bh
  40e276:	sti    
  40e277:	pop    es
  40e278:	out    dx,al
  40e279:	retf   
  40e27a:	push   ebp
  40e27b:	out    0xa5,eax
  40e27d:	jl     0x40e285
  40e27f:	add    BYTE PTR [edx-0x45],dh
  40e282:	push   ebp
  40e283:	out    0x32,eax
  40e285:	jge    0x40e28d
  40e287:	add    BYTE PTR [edx+0x2d],ch
  40e28a:	jne    0x40e29a
  40e28c:	ins    DWORD PTR es:[edi],dx
  40e28d:	xchg   esi,eax
  40e28e:	je     0x40e28e
  40e290:	mov    esi,0x3d007471
  40e295:	jmp    0x40e2e3
  40e297:	inc    esp
  40e298:	mov    dl,0x0
  40e29a:	add    BYTE PTR [eax],al
  40e29c:	lock add BYTE PTR [edx+eiz*4-0x5b],0xd3
  40e2a2:	pop    edx
  40e2a3:	mov    al,0x32
  40e2a5:	or     al,BYTE PTR [eax]
  40e2a7:	punpckhbw mm1,mm2
  40e2aa:	in     al,0x7
  40e2ac:	jle    0x40e278
  40e2ae:	rol    DWORD PTR [eax],1
  40e2b0:	loope  0x40e2f0
  40e2b2:	in     eax,0x8d
  40e2b4:	pop    edi
  40e2b5:	fld    DWORD PTR [edi+0x25e17645]
  40e2bb:	mov    bl,0x5b
  40e2bd:	or     DWORD PTR [ebx-0x20c2610],ecx
  40e2c3:	(bad)  
  40e2c5:	das    
  40e2c6:	(bad)  
  40e2c7:	call   FWORD PTR [ebp+0x49d5e65b]
  40e2cd:	or     DWORD PTR [eax],eax
  40e2cf:	jmp    DWORD PTR [edi-0x1b]
  40e2d2:	push   0xe658845a
  40e2d7:	jo     0x40e2b8
  40e2d9:	hlt    
  40e2da:	std    
  40e2db:	add    edx,0xa
  40e2de:	jne    0x40e2e8
  40e2e0:	inc    esp
  40e2e1:	loope  0x40e33b
  40e2e3:	mov    ah,0xb
  40e2e5:	or     ebx,ebp
  40e2e7:	jns    0xd4b6e0de
  40e2ed:	retf   0xf743
  40e2f0:	xchg   ecx,eax
  40e2f1:	loope  0x40e2f5
  40e2f3:	(bad)  
  40e2f4:	xchg   edi,eax
  40e2f5:	icebp  
  40e2f6:	(bad)  
  40e2f7:	out    0xf1,eax
  40e2f9:	scas   al,BYTE PTR es:[edi]
  40e2fa:	(bad)  
  40e2fb:	call   FWORD PTR [edx+0x7]
  40e2fe:	sti    
  40e2ff:	add    DWORD PTR [eax],eax
  40e301:	add    BYTE PTR [eax],al
  40e303:	daa    
  40e304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e305:	jle    0x40e384
  40e307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e308:	push   ecx
  40e309:	jb     0x40e2a1
  40e30b:	popf   
  40e30c:	jl     0x40e2f8
  40e30e:	inc    DWORD PTR [edi-0x6]
  40e311:	push   0x33e309ff
  40e316:	std    
  40e317:	pop    ebp
  40e318:	repnz add eax,0xffffff8d
  40e31c:	popf   
  40e31d:	mov    esi,0x895c16eb
  40e322:	in     al,dx
  40e323:	sbb    edi,esi
  40e325:	adc    al,BYTE PTR [ebx+0x56feeef7]
  40e32b:	repz call 0x85b6e72e
  40e331:	or     al,0x8e
  40e333:	mov    ebx,DWORD PTR [esi+0x2]
  40e336:	add    BYTE PTR [eax+0xb],dh
  40e339:	jl     0x40e33a
  40e33b:	rol    DWORD PTR [edi],0x3c
  40e33e:	pop    ebx
  40e33f:	xor    al,0x2b
  40e341:	je     0x40e343
  40e343:	repz pop ebp
  40e345:	add    cl,BYTE PTR [ecx+0x588c19e]
  40e34b:	lock mov ds:0x6b8de77a,al
  40e351:	add    al,BYTE PTR [eax]
  40e353:	outs   dx,DWORD PTR ds:[esi]
  40e354:	push   ds
  40e355:	not    DWORD PTR [edi]
  40e357:	push   0x258a76ab
  40e35c:	mov    BYTE PTR [edi+0x3],0xf3
  40e360:	pop    ebp
  40e361:	jnp    0x40e3af
  40e363:	jmp    FWORD PTR [edi+ecx*8]
  40e366:	out    dx,eax
  40e367:	add    BYTE PTR [eax],al
  40e369:	add    dl,cl
  40e36b:	mov    dl,0x6e
  40e36d:	sub    BYTE PTR [esi+0x78466915],dl
  40e373:	stos   BYTE PTR es:[edi],al
  40e374:	jb     0x40e2fe
  40e376:	or     bh,BYTE PTR cs:[ecx]
  40e379:	(bad)  
  40e37a:	pop    esi
  40e37b:	mov    bl,0x87
  40e37d:	jl     0x40e346
  40e37f:	call   0x767f6e89
  40e384:	lea    ecx,[ebx-0xe]
  40e387:	jne    0x40e371
  40e389:	adc    esp,DWORD PTR [edx]
  40e38b:	jecxz  0x40e353
  40e38d:	push   es
  40e38e:	jmp    0x40e3bd
  40e390:	jge    0x40e3a6
  40e392:	out    dx,eax
  40e393:	jnp    0x40e357
  40e395:	push   DWORD PTR [ecx-0x5f]
  40e398:	push   cs
  40e399:	test   DWORD PTR [ebx+0x2e8b0d3a],esi
  40e39f:	mov    edx,0xde9bcd87
  40e3a4:	push   es
  40e3a5:	add    bl,dh
  40e3a7:	push   es
  40e3a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3a9:	into   
  40e3aa:	js     0x40e3cb
  40e3ac:	mov    ds:0x61732f7c,al
  40e3b1:	(bad)  
  40e3b2:	push   0xad389207
  40e3b7:	or     al,BYTE PTR ds:0x74c95d46
  40e3bd:	mov    dh,dl
  40e3bf:	or     dh,BYTE PTR [esi-0x3a]
  40e3c2:	pop    esp
  40e3c3:	add    eax,0xd1f3700c
  40e3c8:	pusha  
  40e3c9:	cmp    bh,BYTE PTR [esi+0x8fed7a]
  40e3cf:	add    BYTE PTR [eax],al
  40e3d1:	mov    ecx,0xc97c5573
  40e3d6:	rcr    DWORD PTR [edi],cl
  40e3d8:	inc    eax
  40e3d9:	mov    esi,0x3588387f
  40e3de:	pop    esi
  40e3df:	rol    DWORD PTR [esi],cl
  40e3e1:	repz push es
  40e3e3:	ins    DWORD PTR es:[edi],dx
  40e3e4:	inc    ebx
  40e3e5:	adc    BYTE PTR [ebx],0x5c
  40e3e8:	(bad)  
  40e3e9:	in     al,dx
  40e3ea:	(bad)  
  40e3eb:	adc    BYTE PTR [ebp-0x10],cl
  40e3ee:	push   es
  40e3ef:	jmp    0xfb2e187a
  40e3f4:	mov    BYTE PTR [ebp+0x356b1e7e],dh
  40e3fa:	or     cl,ch
  40e3fc:	add    esi,DWORD PTR [edi+0x47]
  40e3ff:	jae    0x40e407
  40e401:	and    BYTE PTR [edi-0x58],al
  40e404:	fnsave [ecx-0x4e22d6ca]
  40e40a:	fdiv   QWORD PTR [ecx+0x68]
  40e40d:	and    edx,esi
  40e40f:	shl    DWORD PTR ss:[edi-0x34],cl
  40e413:	aam    0xd4
  40e415:	xchg   esp,eax
  40e416:	aad    0x6a
  40e418:	add    al,0xf3
  40e41a:	jge    0x40e3dc
  40e41c:	aaa    
  40e41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e41e:	cs mov edi,0xff7dd8f0
  40e424:	adc    ecx,DWORD PTR [ebx]
  40e426:	test   edx,edi
  40e428:	call   0xf1ab1aa9
  40e42d:	or     dh,bh
  40e42f:	rcr    BYTE PTR [esi+0x1dc62cf8],cl
  40e435:	add    BYTE PTR [eax],al
  40e437:	add    al,dh
  40e439:	jg     0x40e46a
  40e43b:	pusha  
  40e43c:	pop    edi
  40e43d:	push   es
  40e43e:	mov    edi,DWORD PTR [ecx+0x72]
  40e441:	jl     0x40e4b6
  40e443:	fbld   TBYTE PTR [edi+0x34]
  40e446:	mov    DWORD PTR [edi],edx
  40e448:	repz pop esi
  40e44a:	(bad)  [edi-0x38]
  40e44d:	jo     0x40e3d1
  40e44f:	out    0x3c,eax
  40e451:	pop    es
  40e452:	jge    0x40e447
  40e454:	mov    ecx,0xc5efe83b
  40e459:	jo     0x40e459
  40e45b:	mov    bh,0x95
  40e45d:	or     cl,BYTE PTR [ebx+0x57098c2f]
  40e463:	push   ecx
  40e464:	xchg   esi,eax
  40e465:	push   edi
  40e466:	(bad)  
  40e467:	les    eax,FWORD PTR ss:[esi+0x5e]
  40e46b:	(bad)  
  40e46c:	and    eax,0x3672c23f
  40e471:	push   es
  40e472:	mov    esi,eax
  40e474:	sbb    eax,0x3e6c56dc
  40e479:	div    BYTE PTR [edx]
  40e47b:	fs das 
  40e47d:	imul   BYTE PTR [esi]
  40e47f:	xchg   edx,eax
  40e480:	xor    BYTE PTR [edx],bh
  40e482:	mov    eax,DWORD PTR [ecx]
  40e484:	rcl    dh,0xe7
  40e487:	lods   eax,DWORD PTR ds:[esi]
  40e488:	and    eax,0x3f62fe71
  40e48d:	mov    esi,ebp
  40e48f:	pop    esp
  40e490:	repz xor al,0xc0
  40e493:	rcl    BYTE PTR [ecx],cl
  40e495:	fldenv [edi+0x7f]
  40e498:	lock push es
  40e49a:	add    BYTE PTR [edx+0x0],ah
  40e49d:	add    BYTE PTR [eax],al
  40e49f:	xor    DWORD PTR [edx-0x23],ebp
  40e4a2:	add    BYTE PTR [eax],dh
  40e4a4:	or     eax,DWORD PTR [eax]
  40e4a6:	push   esi
  40e4a7:	and    dh,cl
  40e4a9:	out    0xb7,al
  40e4ab:	push   0x598afdec
  40e4b0:	loopne 0x40e4be
  40e4b2:	push   0xffffff8a
  40e4b4:	pop    ebp
  40e4b5:	xchg   esp,eax
  40e4b6:	add    BYTE PTR [edx+0x72c03305],cl
  40e4bc:	xor    DWORD PTR [ecx+0x0],edi
  40e4bf:	pop    edx
  40e4c0:	dec    esp
  40e4c1:	pop    esp
  40e4c2:	pop    ebx
  40e4c3:	mov    DWORD PTR [esi-0x77],edx
  40e4c6:	in     al,dx
  40e4c7:	sti    
  40e4c8:	pop    ecx
  40e4c9:	push   ebp
  40e4ca:	xor    eax,ebp
  40e4cc:	cmp    bl,bl
  40e4ce:	mov    DWORD PTR [edi-0x7],edx
  40e4d1:	aaa    
  40e4d2:	jle    0x40e522
  40e4d4:	outs   dx,DWORD PTR ds:[esi]
  40e4d5:	sub    ecx,DWORD PTR [ebx+0x66c7084c]
  40e4db:	cdq    
  40e4dc:	ins    DWORD PTR es:[edi],dx
  40e4dd:	push   ds
  40e4de:	add    BYTE PTR [edx+edx*1],bh
  40e4e1:	push   0x4
  40e4e3:	mov    ebp,eax
  40e4e5:	sbb    dl,BYTE PTR [eax-0x2b]
  40e4e8:	jbe    0x40e4f0
  40e4ea:	jmp    FWORD PTR [edi]
  40e4ec:	cmp    DWORD PTR [esi],edx
  40e4ee:	inc    eax
  40e4ef:	sbb    cl,BYTE PTR [eax-0x3a70f33e]
  40e4f5:	jae    0x40e4fa
  40e4f7:	aad    0x46
  40e4f9:	cli    
  40e4fa:	inc    ebx
  40e4fb:	pop    ecx
  40e4fc:	lds    esi,FWORD PTR [esi]
  40e4fe:	cmp    edx,DWORD PTR [eax+esi*2+0xd37a]
  40e505:	add    BYTE PTR [ecx+0x47],ah
  40e508:	cli    
  40e509:	pop    edi
  40e50a:	xchg   ecx,eax
  40e50b:	ret    
  40e50c:	rol    BYTE PTR [edx+ebx*8],0x57
  40e510:	mov    esp,ebp
  40e512:	imul   ebx,DWORD PTR [ecx+0x55],0x33
  40e516:	aad    0x3a
  40e518:	fisttp DWORD PTR [ecx+0x7e37ef17]
  40e51e:	repz popa 
  40e520:	clc    
  40e521:	sub    al,0x78
  40e523:	push   0xdd15c703
  40e528:	sti    
  40e529:	xor    esi,ebx
  40e52b:	aaa    
  40e52c:	sbb    ebp,DWORD PTR [edx-0x1d]
  40e52f:	fadd   QWORD PTR [ebx+0x23]
  40e532:	and    esp,DWORD PTR [ecx+0x737c07ee]
  40e538:	ss push ss
  40e53a:	xor    ebx,DWORD PTR [esi-0x7d]
  40e53d:	ret    
  40e53e:	jmp    edx
  40e540:	inc    ebx
  40e541:	je     0x40e533
  40e543:	cmp    BYTE PTR [esi+0x40dcb0fb],0x37
  40e54a:	sbb    BYTE PTR [eax],dl
  40e54c:	add    BYTE PTR [eax+eiz*1-0x1b],bh
  40e550:	mov    esi,0x4b14a4fb
  40e555:	shl    edi,0x5d
  40e558:	rcl    BYTE PTR [esi+0x68],1
  40e55b:	out    0x86,al
  40e55d:	inc    esi
  40e55e:	pmulhw mm6,QWORD PTR [edx+0x4f]
  40e562:	sbb    edi,DWORD PTR [edi]
  40e564:	ja     0x40e564
  40e566:	sbb    al,0xdd
  40e568:	jnp    0x40e56b
  40e56a:	add    BYTE PTR [eax],al
  40e56c:	add    BYTE PTR [esi-0x28397cb5],dl
  40e572:	nop
  40e573:	push   0xffffff9a
  40e575:	add    al,0x21
  40e577:	jns    0x40e4fb
  40e579:	sti    
  40e57a:	pop    ebx
  40e57b:	cmc    
  40e57c:	add    eax,eax
  40e57e:	sbb    eax,0x1e20026d
  40e583:	les    ebx,FWORD PTR [esi+0x45]
  40e586:	sbb    eax,0x7617438d
  40e58b:	mov    ecx,DWORD PTR [ebx+0xf]
  40e58e:	bound  ecx,QWORD PTR [ebx-0x351b08c1]
  40e594:	add    ecx,DWORD PTR [eax]
  40e596:	pop    ds
  40e597:	out    dx,eax
  40e598:	add    al,BYTE PTR [eax]
  40e59a:	pop    es
  40e59b:	test   eax,0x6946d944
  40e5a0:	arpl   WORD PTR [esi-0x5b12563a],bp
  40e5a6:	out    0x63,eax
  40e5a8:	inc    esi
  40e5a9:	fadd   QWORD PTR [esi]
  40e5ab:	push   ebx
  40e5ac:	cmp    al,0x94
  40e5ae:	mul    ah
  40e5b0:	js     0x40e58e
  40e5b2:	pop    esi
  40e5b3:	adc    al,0x2d
  40e5b5:	icebp  
  40e5b6:	push   es
  40e5b7:	push   0x3f
  40e5b9:	loopne 0x40e5fe
  40e5bb:	jno    0x40e57c
  40e5bd:	rol    BYTE PTR [edx],1
  40e5bf:	jb     0x40e588
  40e5c1:	adc    bh,bh
  40e5c3:	ds (bad) 
  40e5c5:	loopne 0x40e5f1
  40e5c7:	loope  0x40e641
  40e5c9:	test   BYTE PTR es:[eax-0x587c3cf5],ch
  40e5d0:	or     eax,DWORD PTR [eax]
  40e5d2:	add    BYTE PTR [eax],al
  40e5d4:	pop    ebx
  40e5d5:	icebp  
  40e5d6:	jmp    0xeec7d8de
  40e5db:	(bad)  
  40e5dc:	cmp    al,0xd1
  40e5de:	fild   DWORD PTR ds:0xce294e3c
  40e5e4:	jns    0x40e648
  40e5e6:	imul   esp,DWORD PTR [edi-0xc],0x697361d8
  40e5ed:	shr    ah,0xd0
  40e5f0:	imul   esi,ecx,0xabc04f0
  40e5f6:	ret    0xbc4a
  40e5f9:	pop    esi
  40e5fa:	js     0x40e64f
  40e5fc:	std    
  40e5fd:	outs   dx,BYTE PTR ds:[esi]
  40e5fe:	ins    BYTE PTR es:[edi],dx
  40e5ff:	inc    ebx
  40e600:	in     eax,0x8a
  40e602:	jae    0x40e607
  40e604:	repz push es
  40e606:	(bad)  
  40e608:	lock (bad) 
  40e60b:	pop    esp
  40e60c:	imul   eax,esp,0xfffffff8
  40e60f:	mov    DWORD PTR [edi],esi
  40e611:	jae    0x40e5d2
  40e613:	fdiv   st,st(0)
  40e615:	in     al,dx
  40e616:	(bad)  
  40e617:	jle    0x40e692
  40e619:	retf   
  40e61a:	test   DWORD PTR [edx],0x72db39f6
  40e620:	cld    
  40e621:	or     DWORD PTR [ebp-0x1f],edi
  40e624:	jle    0x40e5f1
  40e626:	sti    
  40e627:	adc    dl,cl
  40e629:	pop    esi
  40e62a:	jge    0x40e62d
  40e62c:	push   0xf02d8d04
  40e631:	(bad)  
  40e632:	imul   edx,ebp,0xe1467ba0
  40e638:	add    BYTE PTR [eax],al
  40e63a:	add    BYTE PTR [eax-0x1112eb93],ah
  40e640:	(bad)  
  40e641:	jmp    FWORD PTR [ecx+0x33]
  40e644:	add    al,BYTE PTR [ebp-0x12d9c57]
  40e64a:	sub    al,0xeb
  40e64c:	add    BYTE PTR [ebp+ecx*4+0x70],0x49
  40e651:	aaa    
  40e652:	ret    0x5e33
  40e655:	jnp    0x40e5f8
  40e657:	js     0x40e69e
  40e659:	mov    ah,BYTE PTR [edi+0x6eff08d7]
  40e65f:	les    ecx,FWORD PTR [ecx-0x7e262341]
  40e665:	dec    ebp
  40e666:	in     eax,0x79
  40e668:	inc    edi
  40e669:	push   0x29
  40e66b:	out    0x9,eax
  40e66d:	push   es
  40e66e:	ret    
  40e66f:	fadd   st,st(7)
  40e671:	push   esi
  40e672:	cdq    
  40e673:	addr16 mov esp,0x36e23e03
  40e679:	push   ss
  40e67a:	test   eax,0xddc389f0
  40e67f:	test   edx,eax
  40e681:	repz jb 0x40e67e
  40e684:	add    eax,0x895ca48b
  40e689:	inc    esp
  40e68a:	adc    DWORD PTR [edi],esp
  40e68c:	xor    al,BYTE PTR [edi-0x1b]
  40e68f:	in     al,0x7c
  40e691:	mov    al,BYTE PTR [eax]
  40e693:	pushf  
  40e694:	ins    DWORD PTR es:[edi],dx
  40e695:	imul   ecx,ecx,0xd014e1b2
  40e69b:	mov    ebp,0x1aef4
  40e6a0:	add    BYTE PTR [eax],al
  40e6a2:	popa   
  40e6a3:	push   esp
  40e6a4:	pop    esp
  40e6a5:	leave  
  40e6a6:	mov    BYTE PTR [ebp-0x2],ch
  40e6a9:	mov    dl,bh
  40e6ab:	out    dx,al
  40e6ac:	add    eax,0x42
  40e6af:	mov    ds:0xdae40068,al
  40e6b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6b5:	add    BYTE PTR [edx+0x1ac9eb09],cl
  40e6bb:	jbe    0x40e6df
  40e6bd:	add    al,0x9a
  40e6bf:	cmp    edx,DWORD PTR [ebp-0x75]
  40e6c2:	inc    edx
  40e6c3:	sub    bh,0x74
  40e6c6:	and    cl,0xd3
  40e6c9:	in     al,dx
  40e6ca:	(bad)  
  40e6cb:	hlt    
  40e6cc:	xchg   DWORD PTR [edi+0x56],eax
  40e6cf:	add    ah,0xe8
  40e6d2:	dec    esp
  40e6d3:	out    dx,al
  40e6d4:	std    
  40e6d5:	inc    esi
  40e6d7:	leave  
  40e6d8:	jae    0x40e6de
  40e6da:	mov    cl,cl
  40e6dc:	jmp    0x284b80e
  40e6e1:	inc    ecx
  40e6e2:	icebp  
  40e6e3:	mov    ebx,0xc4fee836
  40e6e8:	std    
  40e6e9:	call   DWORD PTR [esi-0x6e138d37]
  40e6ef:	inc    ebx
  40e6f0:	add    cl,BYTE PTR [ebx+0x38be60cb]
  40e6f6:	or     DWORD PTR [ebx+0x68],ebp
  40e6f9:	cmp    BYTE PTR [ebx+0x3c],bl
  40e6fc:	dec    esi
  40e6fd:	mov    DWORD PTR [ebp+ebp*2-0x3],ecx
  40e701:	adc    eax,0x3ffafa
  40e706:	add    BYTE PTR [eax],al
  40e708:	add    BYTE PTR [ecx-0x244ff4d3],cl
  40e70e:	push   ebp
  40e70f:	pop    esp
  40e710:	ret    0x59f3
  40e713:	add    dl,BYTE PTR [ebp+0x68]
  40e716:	push   0xffffff80
  40e718:	jmp    0x40e74d
  40e71a:	mov    WORD PTR [edi-0x64e9488c],es
  40e720:	add    dh,bl
  40e722:	pop    ebp
  40e723:	mov    DWORD PTR [ebx+ebp*8-0x79],ecx
  40e727:	add    ecx,DWORD PTR [ebx-0x17ba953]
  40e72d:	lods   al,BYTE PTR ds:[esi]
  40e72e:	dec    ebp
  40e72f:	aad    0xc8
  40e731:	mov    cl,0x5a
  40e733:	add    dl,BYTE PTR [esi+0x44]
  40e736:	jmp    0x56e371b6
  40e73b:	fucomp st(3)
  40e73d:	mov    WORD PTR [ebp-0x1710b976],gs
  40e743:	inc    eax
  40e744:	out    0x4c,eax
  40e746:	call   0x13ef:0x9e6ffe74
  40e74d:	fcom   DWORD PTR [ebx+0x820033b]
  40e753:	cmp    al,0x57
  40e755:	lds    edi,FWORD PTR [esi+ecx*1+0x30]
  40e759:	std    
  40e75a:	sbb    eax,0x5a378304
  40e75f:	mov    dl,0x0
  40e761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e762:	adc    eax,DWORD PTR [ecx+0x54]
  40e765:	push   0xa68ad2ea
  40e76a:	jne    0x40e753
  40e76c:	mov    edi,0xeb000000
  40e771:	pusha  
  40e772:	add    DWORD PTR [esi+0x70],esp
  40e775:	push   ebp
  40e776:	and    al,BYTE PTR [eax]
  40e778:	shl    BYTE PTR [ebx-0x64d22879],0x73
  40e77f:	inc    DWORD PTR [eax+0x7603e88b]
  40e785:	lods   eax,DWORD PTR ds:[esi]
  40e786:	push   ss
  40e787:	lea    esi,[eax-0xbb033c7]
  40e78d:	push   es
  40e78e:	cld    
  40e78f:	aaa    
  40e790:	add    eax,0xb080e8c7
  40e795:	cli    
  40e796:	imul   eax,DWORD PTR [eax+eiz*2+0x1c],0xffffffb7
  40e79b:	mov    BYTE PTR [edi-0x1],bl
  40e79e:	adc    BYTE PTR [eax],bh
  40e7a0:	into   
  40e7a1:	imul   edi,ebp,0xffffff80
  40e7a4:	mov    esp,0x7c96e608
  40e7a9:	sub    BYTE PTR [eax],0xef
  40e7ac:	add    BYTE PTR [edi],ch
  40e7ae:	sub    al,0x8
  40e7b0:	sbb    BYTE PTR es:[ebx+0x0],dl
  40e7b4:	jbe    0x40e779
  40e7b6:	hlt    
  40e7b7:	shr    DWORD PTR [edi-0x39],cl
  40e7ba:	in     al,dx
  40e7bb:	rcl    DWORD PTR [ebp+0x330df911],cl
  40e7c1:	pop    es
  40e7c2:	push   0x3f
  40e7c4:	clc    
  40e7c5:	inc    esp
  40e7c6:	sub    esi,DWORD PTR [ebp-0xd]
  40e7c9:	sti    
  40e7ca:	jne    0x40e788
  40e7cc:	aam    0xe4
  40e7ce:	ffreep st(0)
  40e7d0:	or     al,0xf3
  40e7d2:	out    dx,al
  40e7d3:	add    DWORD PTR [eax],0x0
  40e7d6:	add    bh,ah
  40e7d8:	cli    
  40e7d9:	call   0x6025d8cc
  40e7de:	shl    ah,0x44
  40e7e1:	sub    esi,DWORD PTR [ebp-0xd]
  40e7e4:	in     al,0x69
  40e7e6:	hlt    
  40e7e7:	add    BYTE PTR [edi],al
  40e7e9:	std    
  40e7ea:	aad    0xca
  40e7ec:	push   ss
  40e7ed:	pop    esp
  40e7ee:	in     al,dx
  40e7ef:	adc    BYTE PTR [edx-0x57],bh
  40e7f2:	pop    ds
  40e7f3:	vminss xmm1,xmm5,DWORD PTR [esi]
  40e7f7:	out    0x14,eax
  40e7f9:	test   eax,0xdc427003
  40e7fe:	jle    0x40e854
  40e800:	repnz adc eax,0xf0f179ce
  40e806:	imul   esp,ebp,0x69
  40e809:	push   DWORD PTR ds:0xebf78887
  40e80f:	out    dx,eax
  40e810:	mov    DWORD PTR [edi+0x33f3306d],edi
  40e816:	loope  0x40e7bd
  40e818:	(bad)  
  40e819:	je     0x40e815
  40e81b:	retf   0x8cfa
  40e81e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e81f:	hlt    
  40e820:	(bad)  
  40e821:	mov    WORD PTR [edx-0x2b012914],gs
  40e827:	add    BYTE PTR [ecx],dl
  40e829:	inc    eax
  40e82a:	jmp    0x274c2ea2
  40e82f:	jne    0x40e89a
  40e831:	add    dh,dh
  40e833:	imul   eax,ecx,0xc5d64733
  40e839:	xor    ebx,DWORD PTR [ebp+0x0]
  40e83c:	add    BYTE PTR [eax],al
  40e83e:	icebp  
  40e83f:	xchg   BYTE PTR [ebp+ebx*8-0x10],bh
  40e843:	repz add ecx,DWORD PTR [edi+0xe]
  40e847:	lds    esi,FWORD PTR [ebx]
  40e849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e84a:	mov    edx,0xaa630069
  40e84f:	imul   ebx,DWORD PTR [ebp+0x12],0xe90747b6
  40e856:	dec    ebp
  40e857:	stos   BYTE PTR es:[edi],al
  40e858:	aaa    
  40e859:	aaa    
  40e85a:	in     al,0x76
  40e85c:	mov    ah,bh
  40e85e:	jae    0x40e876
  40e860:	add    DWORD PTR [edx+0x29],esp
  40e863:	push   es
  40e864:	imul   ebp,DWORD PTR [ecx-0x3d3ef9e1],0xffffff9f
  40e86b:	test   DWORD PTR [edx],0x52327d64
  40e871:	sbb    DWORD PTR ds:0xcc66fe3a,0x7b293207
  40e87b:	stos   BYTE PTR es:[edi],al
  40e87c:	jae    0x40e865
  40e87e:	mov    eax,ds:0x316203bb
  40e883:	push   es
  40e884:	imul   eax,DWORD PTR [eax],0xffffffc3
  40e887:	sbb    ch,al
  40e889:	cmp    esp,edx
  40e88b:	cmc    
  40e88c:	std    
  40e88d:	pop    esi
  40e88e:	leave  
  40e88f:	dec    edi
  40e890:	mov    esp,ebp
  40e892:	xchg   ecx,eax
  40e893:	inc    edi
  40e894:	push   es
  40e895:	add    DWORD PTR [esi],0xb
  40e898:	push   ebx
  40e899:	push   edi
  40e89a:	push   edi
  40e89b:	push   eax
  40e89c:	(bad)  
  40e89d:	call   0x40ebda
  40e8a2:	add    BYTE PTR [eax],al
  40e8a4:	add    BYTE PTR [ecx-0x21a1c848],bh
  40e8aa:	ja     0x40e8dd
  40e8ac:	xor    eax,ebp
  40e8ae:	call   0x6dd873b7
  40e8b3:	mov    eax,DWORD PTR [ebp+ecx*8+0x6d]
  40e8b7:	mov    edx,DWORD PTR [ebp-0x3a]
  40e8ba:	int    0x96
  40e8bc:	add    BYTE PTR [edx+0x17146a05],bl
  40e8c2:	aas    
  40e8c3:	jmp    0xb550:0xd63f3750
  40e8ca:	push   cs
  40e8cb:	cmp    al,0x16
  40e8cd:	fiadd  DWORD PTR [edx]
  40e8cf:	add    esp,0xffffff96
  40e8d2:	jle    0x40e892
  40e8d4:	js     0x40e86e
  40e8d6:	inc    eax
  40e8d7:	add    edi,0x45e1852
  40e8dd:	push   es
  40e8de:	mov    BYTE PTR [ecx+0x595485c8],0xc9
  40e8e5:	mov    BYTE PTR [ecx],al
  40e8e7:	add    BYTE PTR [ebx+0x53f4c899],cl
  40e8ed:	mov    DWORD PTR [eax-0x11bc6ab],edi
  40e8f3:	jge    0x40e91a
  40e8f5:	jns    0x40e8eb
  40e8f7:	mov    DWORD PTR [esi],eax
  40e8f9:	inc    eax
  40e8fa:	adc    DWORD PTR [ebp+0x4e6d0d44],ecx
  40e900:	push   ebx
  40e902:	dec    ebx
  40e903:	es adc al,0x14
  40e906:	jb     0x40e936
  40e908:	push   ss
  40e909:	add    BYTE PTR [eax],al
  40e90b:	add    BYTE PTR [ebx-0x83c7aa1],dh
  40e911:	loop   0x40e955
  40e913:	jae    0x40e8f7
  40e915:	pushf  
  40e916:	test   esi,eax
  40e918:	mov    ebx,0x6f03d074
  40e91d:	ret    
  40e91e:	test   edi,eax
  40e920:	in     al,0xa9
  40e922:	int    0xc1
  40e924:	neg    DWORD PTR [ebp+0x7d]
  40e927:	ret    0x11c8
  40e92a:	ror    BYTE PTR ss:[edx],cl
  40e92d:	mov    es,WORD PTR [esi]
  40e92f:	je     0x40e93d
  40e931:	sub    BYTE PTR [ebx],0x50
  40e934:	adc    ebp,ebx
  40e936:	or     BYTE PTR [esi-0x6],ah
  40e939:	lea    esi,[esi]
  40e93b:	je     0x40e945
  40e93d:	or     al,0x3b
  40e93f:	push   ebp
  40e940:	jae    0x40e9a9
  40e942:	pop    ss
  40e943:	jae    0x40e932
  40e945:	pusha  
  40e946:	mov    eax,0x2b9f95f0
  40e94b:	push   esp
  40e94c:	cmc    
  40e94d:	jne    0x40e945
  40e94f:	out    dx,eax
  40e950:	jae    0x40e999
  40e952:	pop    ss
  40e953:	pcmpgtd mm3,QWORD PTR [esi-0x623e3d2f]
  40e95a:	inc    esp
  40e95b:	push   ebp
  40e95c:	(bad)  
  40e95d:	hlt    
  40e95e:	jne    0x40e9c9
  40e960:	call   DWORD PTR [edx+edi*1+0x2a]
  40e964:	arpl   WORD PTR [ecx],si
  40e966:	jle    0x40e97b
  40e968:	repnz dec ebx
  40e96a:	adc    cl,BYTE PTR [eax+0x4ec257e7]
  40e970:	add    BYTE PTR [eax],al
  40e972:	add    BYTE PTR [esi+0x305dd0f1],bh
  40e978:	or     edi,DWORD PTR [ebp-0x15]
  40e97b:	push   0x1f830023
  40e980:	pop    es
  40e981:	adc    DWORD PTR [edi-0x41],edi
  40e984:	dec    esi
  40e985:	push   eax
  40e986:	push   edi
  40e987:	sbb    eax,0xaf7d5568
  40e98c:	cli    
  40e98d:	popa   
  40e98e:	mov    edi,0x5f9b79f4
  40e993:	or     al,0x40
  40e995:	cmp    eax,0xdcdcfd71
  40e99a:	jle    0x40e94b
  40e99c:	pop    edx
  40e99d:	cwde   
  40e99e:	jle    0x40e9d7
  40e9a0:	dec    edi
  40e9a1:	mov    eax,0xf72aff70
  40e9a6:	ret    
  40e9a7:	fadd   QWORD PTR [esp+ebp*1-0x1fbb5600]
  40e9ae:	add    esp,DWORD PTR [esi]
  40e9b0:	jl     0x40e9c6
  40e9b2:	sbb    eax,0x6a
  40e9b5:	out    0x3,eax
  40e9b7:	repz rcr BYTE PTR [ebp-0x10fd8082],1
  40e9be:	jo     0x40e96d
  40e9c0:	pop    esi
  40e9c1:	adc    BYTE PTR [edx+esi*8],0x6
  40e9c5:	sbb    al,BYTE PTR [esp+ebx*8+0x79]
  40e9c9:	pop    ebx
  40e9ca:	js     0x40e958
  40e9cc:	jnp    0x40e990
  40e9ce:	jo     0x40e95d
  40e9d0:	jns    0x40ea3d
  40e9d2:	sti    
  40e9d3:	xchg   BYTE PTR [edi-0x43],ah
  40e9d6:	rol    DWORD PTR [eax],cl
  40e9d8:	add    BYTE PTR [eax],al
  40e9da:	jge    0x40e9ed
  40e9dc:	imul   edx,DWORD PTR ds:0x43ea0733,0xfb6b79bc
  40e9e6:	addr16 popfw 
  40e9e9:	shr    DWORD PTR [ecx+0x40],cl
  40e9ec:	sbb    BYTE PTR [ebp+0x4a],0x67
  40e9f0:	lea    esi,[eax+0x4299af8]
  40e9f6:	outs   dx,DWORD PTR ds:[esi]
  40e9f7:	inc    esi
  40e9f8:	hlt    
  40e9f9:	das    
  40e9fa:	leave  
  40e9fb:	push   ss
  40e9fc:	add    BYTE PTR [ebp+ebp*2-0x7d],ah
  40ea00:	std    
  40ea01:	outs   dx,BYTE PTR ds:[esi]
  40ea02:	mov    ds:0xc82f8ab7,eax
  40ea07:	push   esi
  40ea08:	jmp    0xbfc48d6b
  40ea0d:	(bad)  
  40ea0f:	jnp    0x40e9d6
  40ea11:	inc    ecx
  40ea12:	sub    BYTE PTR [esi+edi*8+0x46],bl
  40ea16:	ins    BYTE PTR es:[edi],dx
  40ea17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea18:	jae    0x40e9f6
  40ea1a:	jg     0x40ea5d
  40ea1c:	out    0x5b,eax
  40ea1e:	xchg   esi,eax
  40ea1f:	push   0x75270fe
  40ea24:	add    cl,ch
  40ea26:	mov    eax,DWORD PTR gs:[ebx]
  40ea29:	pop    ds
  40ea2a:	arpl   WORD PTR [ebp-0x3b],sp
  40ea2d:	jmp    0x9489b122
  40ea32:	pop    ecx
  40ea33:	mov    dh,0x0
  40ea35:	adc    dl,BYTE PTR [esi]
  40ea37:	icebp  
  40ea38:	adc    edx,DWORD PTR [ebx-0x23014210]
  40ea3e:	add    BYTE PTR [eax],al
  40ea40:	add    ah,bh
  40ea42:	cld    
  40ea43:	aas    
  40ea44:	jmp    0x6cce0117
  40ea49:	jnp    0x40eaaf
  40ea4b:	(bad)  
  40ea4c:	faddp  st(7),st
  40ea4e:	mov    ebp,0xfce0fcfe
  40ea53:	aas    
  40ea54:	jmp    0x745834ca
  40ea59:	mov    edx,0x1917e75a
  40ea5e:	gs (bad) 
  40ea60:	jo     0x40ea77
  40ea62:	pop    es
  40ea63:	add    cl,ch
  40ea65:	jae    0x40e9f2
  40ea67:	add    esp,DWORD PTR [edi-0x163a9b2c]
  40ea6d:	lock (bad) 
  40ea6f:	dec    eax
  40ea70:	sbb    al,0xc6
  40ea72:	pop    ss
  40ea73:	shr    BYTE PTR [esi],0x3d
  40ea76:	dec    edi
  40ea77:	ret    0xda00
  40ea7a:	pop    ss
  40ea7b:	rol    ch,0x9
  40ea7e:	or     eax,DWORD PTR [eax]
  40ea80:	jne    0x40eaf9
  40ea82:	cmp    al,0xbc
  40ea84:	fcom   DWORD PTR [edi+0x4a]
  40ea87:	(bad)  
  40ea88:	push   ebp
  40ea89:	(bad)  
  40ea8a:	(bad)  
  40ea8b:	jmp    0x40ea9f
  40ea8d:	dec    edx
  40ea8e:	or     al,BYTE PTR [eax+0x41cfca3d]
  40ea94:	add    BYTE PTR [edx],bl
  40ea96:	pop    edi
  40ea97:	adc    eax,0xfdf510e8
  40ea9c:	call   DWORD PTR [esi-0x76f18d36]
  40eaa2:	das    
  40eaa3:	(bad)  
  40eaa4:	lds    eax,FWORD PTR [eax]
  40eaa6:	add    BYTE PTR [eax],al
  40eaa8:	cdq    
  40eaa9:	or     DWORD PTR [eax],eax
  40eaab:	(bad)  
  40eaac:	xlat   BYTE PTR ds:[ebx]
  40eaad:	leave  
  40eaae:	ret    
  40eaaf:	inc    ebx
  40eab0:	retf   0x560a
  40eab3:	call   edi
  40eab5:	fst    DWORD PTR [eax]
  40eab7:	inc    eax
  40eab8:	ficom  DWORD PTR [ebx-0x4a]
  40eabb:	or     al,0x1e
  40eabd:	dec    edx
  40eabe:	inc    dl
  40eac0:	pusha  
  40eac1:	std    
  40eac2:	out    0xb5,eax
  40eac4:	mov    ebp,0x9d50fdf4
  40eac9:	pop    ebp
  40eaca:	and    cl,BYTE PTR [ecx*4-0x35e9c402]
  40ead1:	or     al,BYTE PTR [ebx-0x2923713c]
  40ead7:	sbb    ebx,DWORD PTR [edx+0x49]
  40eada:	rol    BYTE PTR [edx+ebx*4],0x38
  40eade:	mov    DWORD PTR ds:0x3ffb7a,ebx
  40eae4:	jns    0x40eaaf
  40eae6:	push   ebx
  40eae7:	ror    WORD PTR [ebx+0x20],cl
  40eaeb:	data16 jecxz 0x40eb39
  40eaee:	xor    al,0x6a
  40eaf0:	data16 xchg BYTE PTR [ebp+0x1],al
  40eaf4:	repz pop ds
  40eaf6:	add    DWORD PTR [ebp-0x5],0x7a4f5f40
  40eafd:	cmp    eax,0xe4f76d7b
  40eb02:	push   ecx
  40eb03:	sub    BYTE PTR [edi],0x6b
  40eb06:	fadd   DWORD PTR [ebx]
  40eb08:	xchg   ebp,eax
  40eb09:	xchg   esi,eax
  40eb0a:	fstp   QWORD PTR [eax]
  40eb0c:	add    BYTE PTR [eax],al
  40eb0e:	add    BYTE PTR [edi+0x6467f5b],bl
  40eb14:	mov    al,ds:0x9ff7457f
  40eb19:	ins    DWORD PTR es:[edi],dx
  40eb1a:	rcr    BYTE PTR [eax],cl
  40eb1c:	push   0x82e7457f
  40eb21:	sar    dh,cl
  40eb23:	out    0x5b,al
  40eb25:	adc    al,0x40
  40eb27:	repz push ebp
  40eb29:	jns    0x40eb71
  40eb2b:	or     dh,cl
  40eb2d:	inc    esi
  40eb2e:	or     ecx,DWORD PTR [ebp-0x29]
  40eb31:	les    ebx,FWORD PTR [edi]
  40eb33:	in     eax,0x6d
  40eb35:	add    BYTE PTR [eax+edi*8-0x6d],dh
  40eb39:	sub    ebp,DWORD PTR [edi+0x18]
  40eb3c:	jp     0x40eb55
  40eb3e:	push   0xffffffe3
  40eb40:	fcmovb st,st(5)
  40eb42:	sbb    ah,BYTE PTR [ebx]
  40eb44:	repz les esp,FWORD PTR [ebx]
  40eb47:	and    ebx,DWORD PTR [ebp+0x50]
  40eb4a:	gs js  0x40eafa
  40eb4d:	sbb    DWORD PTR [ebx+0x11575aaf],eax
  40eb53:	or     DWORD PTR [esi+0x7d],ebx
  40eb56:	inc    ebp
  40eb57:	iret   
  40eb58:	and    dl,ah
  40eb5a:	(bad)  
  40eb5b:	out    0xf9,al
  40eb5d:	adc    eax,0x47f0f340
  40eb62:	or     eax,eax
  40eb64:	lods   eax,DWORD PTR ds:[esi]
  40eb65:	into   
  40eb66:	gs push 0x34
  40eb69:	cmp    BYTE PTR [ebx+0x30],bl
  40eb6c:	add    edi,edx
  40eb6e:	mov    dl,BYTE PTR [esi]
  40eb70:	pop    es
  40eb71:	fst    DWORD PTR ds:0xb3000000
  40eb77:	push   es
  40eb78:	adc    ebx,DWORD PTR [eax]
  40eb7a:	data16 int3 
  40eb7c:	loopne 0x40eb51
  40eb7e:	jg     0x40eb4d
  40eb80:	out    0xd3,eax
  40eb82:	cs or  eax,0x90276ce9
  40eb88:	(bad)  [edi]
  40eb8a:	ffree  st(6)
  40eb8c:	call   0x7541c11
  40eb91:	and    DWORD PTR [ebp-0xf2616da],0xad7eecda
  40eb9b:	add    bh,BYTE PTR [ecx-0x47064982]
  40eba1:	ins    BYTE PTR es:[edi],dx
  40eba2:	pop    ds
  40eba3:	jo     0x40eb95
  40eba5:	jle    0x40eb5d
  40eba7:	stc    
  40eba8:	rol    BYTE PTR [ebx],cl
  40ebaa:	mov    ds:0x79e61963,eax
  40ebaf:	retf   
  40ebb0:	or     BYTE PTR [ecx+0x7a8f12b0],al
  40ebb6:	inc    BYTE PTR ss:[esi-0x16e4aa80]
  40ebbd:	frndint 
  40ebbf:	(bad)  
  40ebc1:	jle    0x40ebf0
  40ebc3:	sub    ebx,DWORD PTR [ecx-0x66ffc982]
  40ebc9:	ins    BYTE PTR es:[edi],dx
  40ebca:	lahf   
  40ebcb:	in     al,dx
  40ebcc:	popa   
  40ebcd:	(bad)
  40ebd0:	and    al,0x0
  40ebd2:	jae    0x40ebe8
  40ebd4:	jmp    0x40ec2e
  40ebd6:	out    dx,eax
  40ebd7:	xchg   ecx,eax
  40ebd8:	or     DWORD PTR es:[eax],eax
  40ebdb:	add    BYTE PTR [eax],al
  40ebdd:	or     DWORD PTR [edi],eax
  40ebdf:	cmp    DWORD PTR [ebp-0x5f],ebp
  40ebe2:	xchg   DWORD PTR [edi+edi*8-0x19dcb93f],esp
  40ebe9:	imul   ecx,esp,0x11
  40ebec:	leave  
  40ebed:	mov    cl,0xb7
  40ebef:	call   FWORD PTR [esi]
  40ebf1:	dec    ecx
  40ebf2:	sbb    ebp,DWORD PTR [edx-0x17]
  40ebf5:	aas    
  40ebf6:	nop
  40ebf7:	out    dx,eax
  40ebf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebf9:	add    eax,0xef29161b
  40ebfe:	pop    DWORD PTR [ebp-0x7]
  40ec01:	retf   
  40ec02:	add    dh,BYTE PTR [eax]
  40ec04:	div    DWORD PTR [eax]
  40ec06:	arpl   bp,si
  40ec08:	mov    eax,ds:0x2f8c46eb
  40ec0d:	frstor [edi]
  40ec0f:	shr    DWORD PTR [edx-0x50],0xfb
  40ec13:	imul   edx,ebp,0xf1469240
  40ec19:	inc    eax
  40ec1a:	shr    BYTE PTR fs:[esi+ebp*1-0x35],cl
  40ec1f:	push   cs
  40ec20:	sahf   
  40ec21:	rol    BYTE PTR [edi+0x417ff1c3],0x1a
  40ec28:	aas    
  40ec29:	rcl    DWORD PTR [esi+0xe],cl
  40ec2c:	jbe    0x40ec1c
  40ec2e:	into   
  40ec2f:	inc    edi
  40ec30:	mov    ebp,0xd4e78609
  40ec35:	(bad)  
  40ec37:	imul   edi,ecx,0xb907cc5d
  40ec3d:	push   ebp
  40ec3e:	leave  
  40ec3f:	and    edi,DWORD PTR [ecx+0x5f000000]
  40ec45:	xor    eax,0x8ae6265
  40ec4a:	(bad)  
  40ec4c:	jle    0x40ec53
  40ec4e:	data16 sub BYTE PTR [eax+0xa],dl
  40ec52:	sub    DWORD PTR ds:0x280aecac,0xffffff8e
  40ec59:	pop    DWORD PTR [esi+0x1d]
  40ec5c:	cmp    al,0x28
  40ec5e:	push   0xffffffe5
  40ec60:	sbb    ecx,esp
  40ec62:	add    edi,DWORD PTR [ecx]
  40ec64:	or     cl,cl
  40ec66:	sbb    edi,DWORD PTR [ecx]
  40ec68:	sbb    BYTE PTR ds:0x45010065,dh
  40ec6e:	add    BYTE PTR [edi],cl
  40ec70:	cld    
  40ec71:	pushf  
  40ec72:	add    DWORD PTR [esi-0x65],esp
  40ec75:	jmp    0x40ec7d
  40ec77:	or     DWORD PTR [esi-0x74f49ba1],0x65
  40ec7e:	xchg   DWORD PTR [edi+0x2a],eax
  40ec81:	push   eax
  40ec82:	pop    ecx
  40ec83:	ret    
  40ec84:	or     eax,0xfd51f6e2
  40ec89:	ret    0x1af
  40ec8c:	dec    edx
  40ec8d:	push   es
  40ec8e:	test   eax,eax
  40ec90:	repnz pop ebx
  40ec92:	adc    edx,0x2f
  40ec95:	pop    es
  40ec96:	mov    edx,0xfe461f44
  40ec9b:	xor    cl,dl
  40ec9d:	cmp    DWORD PTR [ebx+0x37f83fc9],eax
  40eca3:	add    ch,BYTE PTR [esi]
  40eca5:	cmp    al,0x83
  40eca7:	inc    DWORD PTR [eax]
  40eca9:	add    BYTE PTR [eax],al
  40ecab:	pop    ds
  40ecac:	add    eax,0x50a57b8
  40ecb1:	sub    bl,0x5b
  40ecb4:	scas   al,BYTE PTR es:[edi]
  40ecb5:	js     0x40ecb7
  40ecb7:	fld    QWORD PTR [ebp-0x1383bf17]
  40ecbd:	jb     0x40ece3
  40ecbf:	(bad)  
  40ecc1:	outs   dx,DWORD PTR ds:[esi]
  40ecc2:	call   FWORD PTR [eax+0x1335537]
  40ecc8:	out    dx,al
  40ecc9:	adc    ecx,DWORD PTR [eax-0x44]
  40eccc:	inc    ebp
  40eccd:	inc    BYTE PTR [edx+0x7ab8fb0e]
  40ecd3:	retf   0x8004
  40ecd6:	test   edx,ebx
  40ecd8:	jb     0x40ece7
  40ecda:	cmp    ecx,esp
  40ecdc:	push   ebp
  40ecdd:	or     DWORD PTR [ebp-0x71],esi
  40ece0:	fstp   QWORD PTR [edx]
  40ece2:	shl    DWORD PTR ds:[edx-0x77],0xf0
  40ece7:	repz inc esp
  40ece9:	inc    DWORD PTR [edi-0x2780ee19]
  40ecef:	lock dec ecx
  40ecf1:	jge    0x40ecb5
  40ecf3:	adc    eax,0xf7784deb
  40ecf8:	push   esp
  40ecf9:	dec    ebx
  40ecfa:	je     0x40ecf5
  40ecfc:	in     al,0xb6
  40ecfe:	and    ebp,edi
  40ed00:	repnz cmp esi,DWORD PTR [ebx-0xf]
  40ed04:	(bad)  
  40ed05:	sub    ebx,DWORD PTR [ebx-0x54]
  40ed08:	lods   eax,DWORD PTR ds:[esi]
  40ed09:	cli    
  40ed0a:	jmp    DWORD PTR [ecx+0xf77f18]
  40ed10:	add    BYTE PTR [eax],al
  40ed12:	mov    ds:0xf22c5c00,al
  40ed17:	outs   dx,DWORD PTR ds:[esi]
  40ed18:	add    dh,BYTE PTR [ebx]
  40ed1a:	dec    eax
  40ed1b:	xchg   esp,eax
  40ed1c:	inc    ebp
  40ed1d:	jnp    0x40ecb5
  40ed1f:	xchg   esp,eax
  40ed20:	push   ebp
  40ed21:	je     0x40ed19
  40ed23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed24:	mov    edx,0x356fb374
  40ed29:	ror    al,0x24
  40ed2c:	lock push ss
  40ed2e:	(bad)  
  40ed2f:	test   BYTE PTR ds:0x6f04ac74,0x74
  40ed36:	in     al,dx
  40ed37:	xchg   ecx,edx
  40ed39:	push   ebp
  40ed3b:	in     eax,dx
  40ed3c:	pop    ebp
  40ed3d:	dec    ebp
  40ed3e:	stos   DWORD PTR es:[edi],eax
  40ed3f:	xchg   esp,eax
  40ed40:	add    al,BYTE PTR [edi]
  40ed42:	jae    0x40ed39
  40ed44:	daa    
  40ed45:	push   esi
  40ed46:	aam    0x7a
  40ed48:	push   ds
  40ed49:	adc    al,0x7e
  40ed4b:	jg     0x40edb6
  40ed4d:	push   ecx
  40ed4e:	sbb    eax,0x37146999
  40ed53:	inc    eax
  40ed54:	ret    0x71ff
  40ed57:	sub    dl,BYTE PTR [ebx]
  40ed59:	mov    ecx,0x80016e29
  40ed5e:	outs   dx,BYTE PTR ds:[esi]
  40ed5f:	cs jmp 0x40ed6b
  40ed62:	fadd   DWORD PTR [esi]
  40ed64:	scas   eax,DWORD PTR es:[edi]
  40ed65:	icebp  
  40ed66:	out    dx,al
  40ed67:	(bad)  
  40ed69:	jl     0x40ed07
  40ed6b:	ins    BYTE PTR es:[edi],dx
  40ed6c:	loopne 0x40edea
  40ed6e:	stos   DWORD PTR es:[edi],eax
  40ed6f:	adc    al,0xa9
  40ed71:	loop   0x40edde
  40ed73:	or     edi,DWORD PTR [esi]
  40ed75:	ja     0x40ed77
  40ed77:	add    BYTE PTR [eax],al
  40ed79:	mov    eax,0xce4571d7
  40ed7e:	mov    DWORD PTR [ecx-0x6fe40f15],edx
  40ed84:	out    dx,eax
  40ed85:	jmp    0xaf89:0xe720348b
  40ed8c:	lock repnz (bad) 
  40ed8f:	iret   
  40ed90:	enter  0x44a9,0xe0
  40ed94:	add    esi,DWORD PTR [esi+0x4e]
  40ed97:	cld    
  40ed98:	xor    eax,0x697d607b
  40ed9d:	lods   eax,DWORD PTR ds:[esi]
  40ed9e:	mov    bh,0x61
  40eda0:	push   esp
  40eda1:	loope  0x40ee02
  40eda3:	push   0xecdaf32b
  40eda8:	ret    0xd9aa
  40edab:	push   ebp
  40edac:	jg     0x40edd0
  40edae:	(bad)  
  40edb0:	test   al,0x9d
  40edb2:	push   es
  40edb3:	out    0x83,al
  40edb5:	ja     0x40ee10
  40edb7:	mov    esp,0xc0606ff6
  40edbc:	add    DWORD PTR [eax],ebx
  40edbe:	inc    ebp
  40edbf:	pop    edi
  40edc0:	add    bl,al
  40edc2:	add    ebp,DWORD PTR [edx+0x22]
  40edc5:	repz mov ebp,DWORD PTR ds:0x6109c9c9
  40edcc:	ror    esp,1
  40edce:	or     BYTE PTR [ecx+0x7f],ch
  40edd1:	test   ch,bl
  40edd3:	in     eax,0x7e
  40edd5:	(bad)  
  40edd6:	fucompp 
  40edd8:	test   BYTE PTR [esi],cl
  40edda:	pop    es
  40eddb:	sub    bh,BYTE PTR [edi+0x0]
  40edde:	add    BYTE PTR [eax],al
  40ede0:	mov    ebx,0x58bcffda
  40ede5:	pusha  
  40ede6:	(bad)  
  40ede7:	out    dx,al
  40ede8:	mov    edi,DWORD PTR [eax+0x5fdfb98a]
  40edee:	gs and al,bl
  40edf1:	fiadd  DWORD PTR ds:0x4a06316a
  40edf7:	push   esp
  40edf8:	or     al,0x8b
  40edfa:	sar    DWORD PTR [esp+esi*2],1
  40edfd:	mov    al,ds:0x86f3e956
  40ee02:	test   BYTE PTR [edi-0x517aedac],bh
  40ee08:	dec    eax
  40ee09:	or     DWORD PTR [ebx],ebp
  40ee0b:	stos   DWORD PTR es:[edi],eax
  40ee0c:	(bad)  [ecx]
  40ee0e:	jmp    0x40edfa
  40ee10:	ja     0x40ee3b
  40ee12:	add    BYTE PTR [edx-0x4d],ah
  40ee15:	shr    dl,0xe4
  40ee18:	mov    BYTE PTR [eax-0x758f1201],bh
  40ee1e:	mov    edi,0xf589f200
  40ee23:	std    
  40ee24:	out    dx,eax
  40ee25:	and    DWORD PTR ds:0xc014b7e9,0x22
  40ee2c:	xlat   BYTE PTR ds:[ebx]
  40ee2d:	ror    DWORD PTR ds:0xfe5fd968,cl
  40ee33:	push   esi
  40ee34:	sbb    edx,ebp
  40ee36:	add    eax,0x55f2391
  40ee3b:	imul   ebp,DWORD PTR [edi-0x1b4bfde2],0xa10145
  40ee45:	add    BYTE PTR [eax],al
  40ee47:	aad    0x1e
  40ee49:	add    dl,dh
  40ee4b:	sbb    dl,bl
  40ee4d:	add    DWORD PTR [eax-0xf],esi
  40ee50:	dec    ecx
  40ee51:	xor    ch,BYTE PTR [ecx]
  40ee53:	sbb    ebx,eax
  40ee55:	and    ebp,ebp
  40ee57:	aad    0x4
  40ee59:	cmp    DWORD PTR [ebp+0x750edc],esp
  40ee5f:	ror    BYTE PTR [ecx-0x105ddb86],0xfd
  40ee66:	call   FWORD PTR ds:0x85b80358
  40ee6c:	or     al,BYTE PTR [edi]
  40ee6e:	or     BYTE PTR [eax+0x5b],0xfe
  40ee72:	push   edx
  40ee73:	les    ecx,FWORD PTR [ebp+0x68]
  40ee76:	xor    dl,BYTE PTR [ecx]
  40ee78:	fnstenv [ecx]
  40ee7a:	rcr    cl,0xd1
  40ee7d:	pop    ebp
  40ee7e:	sub    edi,DWORD PTR [ebx]
  40ee80:	loopne 0x40ee17
  40ee82:	int3   
  40ee83:	lods   eax,DWORD PTR ds:[esi]
  40ee84:	out    0x7d,al
  40ee86:	test   DWORD PTR [eax+0x468a0c57],ecx
  40ee8c:	push   esp
  40ee8d:	adc    dl,0xf6
  40ee90:	pop    ebp
  40ee91:	xchg   BYTE PTR [ecx],dl
  40ee93:	sbb    ecx,DWORD PTR [edx+0x4d]
  40ee96:	jne    0x40ef0a
  40ee98:	mov    ch,bh
  40ee9a:	jne    0x40eef1
  40ee9c:	fwait
  40ee9d:	dec    ecx
  40ee9e:	mov    eax,0x800702f0
  40eea3:	push   esp
  40eea4:	add    al,0x0
  40eea6:	mov    ecx,esi
  40eea8:	adc    BYTE PTR es:[ebp+0x53000000],al
  40eeaf:	push   edi
  40eeb0:	add    BYTE PTR [ecx+0x5b5c45f3],cl
  40eeb6:	fadd   DWORD PTR [esi]
  40eeb8:	add    BYTE PTR [ebp-0x6f],dl
  40eebb:	mov    esi,0xe637834f
  40eec0:	(bad)  
  40eec1:	push   edx
  40eec2:	push   esp
  40eec3:	loope  0x40eeb5
  40eec5:	xor    edx,DWORD PTR [ecx]
  40eec7:	mov    ah,dh
  40eec9:	je     0x40eec4
  40eecb:	dec    ebp
  40eecc:	mov    DWORD PTR [ebp-0x42],edi
  40eecf:	add    cl,bh
  40eed1:	test   DWORD PTR [edx],ecx
  40eed3:	push   edi
  40eed4:	adc    cl,BYTE PTR [edi]
  40eed6:	and    eax,0xf3660ef7
  40eedb:	jmp    0x107b:0x85e87351
  40eee2:	jo     0x40ef12
  40eee4:	add    cl,BYTE PTR [eax+0x30]
  40eee7:	scas   al,BYTE PTR es:[edi]
  40eee8:	out    dx,eax
  40eee9:	out    0x44,eax
  40eeeb:	jmp    0x40ef5a
  40eeed:	je     0x40eed7
  40eeef:	lock pop esp
  40eef1:	add    DWORD PTR [eax],ebp
  40eef3:	lods   eax,DWORD PTR ds:[esi]
  40eef4:	mov    edi,0xfd7009fb
  40eef9:	jg     0x40eebb
  40eefb:	scas   eax,DWORD PTR es:[edi]
  40eefc:	fmul   QWORD PTR [eax+0x7bfe8f2]
  40ef02:	outs   dx,BYTE PTR ds:[esi]
  40ef03:	scas   eax,DWORD PTR es:[edi]
  40ef04:	out    dx,al
  40ef05:	add    DWORD PTR [edx+0x67],edi
  40ef08:	jns    0x40ef4e
  40ef0a:	addr16 cmc 
  40ef0c:	retf   0x31c8
  40ef0f:	add    dl,BYTE PTR [di+0x0]
  40ef13:	add    BYTE PTR [eax],al
  40ef15:	push   0x3a84d373
  40ef1a:	repnz push DWORD PTR [edx]
  40ef1d:	xor    esp,DWORD PTR [esi-0xd91aabf]
  40ef23:	addr16 out 0x31,eax
  40ef26:	test   DWORD PTR [ebp-0x2],esp
  40ef29:	int    0xe2
  40ef2b:	inc    edx
  40ef2c:	jae    0x40ef1c
  40ef2e:	lock cmp bh,dh
  40ef31:	sub    dh,BYTE PTR [eax+0x16174479]
  40ef37:	inc    edx
  40ef38:	push   esp
  40ef39:	js     0x40ef06
  40ef3b:	rol    DWORD PTR [edx+edi*1+0x3332fe3a],cl
  40ef42:	es inc edx
  40ef44:	push   ebp
  40ef45:	call   0x1c44:0xe766
  40ef4b:	data16 inc BYTE PTR [ebp-0x15]
  40ef4f:	inc    edx
  40ef50:	jae    0x40ef48
  40ef52:	lock cmp bh,dh
  40ef55:	stos   BYTE PTR es:[edi],al
  40ef56:	pop    es
  40ef57:	sub    bh,BYTE PTR [edx+0x37]
  40ef5a:	pop    ebx
  40ef5b:	das    
  40ef5c:	inc    edx
  40ef5d:	pop    ds
  40ef5e:	nop
  40ef5f:	add    al,0x66
  40ef61:	inc    edi
  40ef62:	(bad)  
  40ef64:	pop    ebx
  40ef65:	ret    
  40ef66:	pop    ebp
  40ef67:	add    eax,0x80477766
  40ef6c:	sub    eax,0x7b396e
  40ef71:	pop    ecx
  40ef72:	iret   
  40ef73:	jae    0x40ef38
  40ef75:	xchg   esp,eax
  40ef76:	sbb    DWORD PTR [ecx+0x2b],ebp
  40ef7c:	andps  xmm2,XMMWORD PTR ss:[eax]
  40ef80:	or     eax,0xd3efeb1e
  40ef85:	push   ebx
  40ef86:	scas   eax,DWORD PTR es:[edi]
  40ef87:	or     DWORD PTR [edx+0x7e21c788],ebp
  40ef8d:	xchg   BYTE PTR ds:0xc186ec04,dl
  40ef93:	adc    al,cl
  40ef95:	(bad)  
  40ef96:	adc    edi,esp
  40ef98:	addr16 ret 0xd3f0
  40ef9c:	test   BYTE PTR [ebp-0x63],bl
  40ef9f:	lds    ebp,FWORD PTR gs:[esi-0xf]
  40efa3:	fs cmp eax,0xf0422b5c
  40efa9:	push   es
  40efaa:	sbb    al,0x79
  40efac:	sbb    BYTE PTR [esi+0x5aaf7b16],dh
  40efb2:	popa   
  40efb3:	mov    edi,0x7361b3f4
  40efb8:	mov    esi,0x14fbab8d
  40efbd:	jnp    0x40f01d
  40efbf:	gs add eax,0xafec2882
  40efc5:	mov    DWORD PTR [ebx-0xf4d9899],ebx
  40efcb:	pop    ebx
  40efcc:	push   esp
  40efcd:	pop    ebp
  40efce:	cmp    eax,0xff466f65
  40efd3:	mov    al,0xd
  40efd5:	cmp    dh,0xb4
  40efd8:	in     al,dx
  40efd9:	sbb    eax,0x12c3257d
  40efde:	mov    ebp,DWORD PTR [eax+eax*1-0x1e380000]
  40efe5:	cmp    al,dl
  40efe7:	int3   
  40efe8:	sub    dh,bh
  40efea:	das    
  40efeb:	jmp    0x8589:0xd20f8254
  40eff2:	xchg   esi,eax
  40eff3:	lock add eax,DWORD PTR [eax+0x745bf502]
  40effa:	loope  0x40f019
  40effc:	ret    
  40effd:	pop    es
  40effe:	cmp    DWORD PTR [edx],ecx
  40f000:	ret    
  40f001:	sti    
  40f002:	jb     0x40f03b
  40f004:	xchg   ecx,eax
  40f005:	int    0xc1
  40f007:	dec    edx
  40f008:	pop    ecx
  40f009:	dec    dh
  40f00b:	sbb    ecx,DWORD PTR [edi]
  40f00d:	test   esi,eax
  40f00f:	pop    esp
  40f010:	add    dh,BYTE PTR [ebx]
  40f012:	mov    al,0x46
  40f014:	mov    cs,WORD PTR ds:0x3461817
  40f01a:	jmp    0xf564a7fa
  40f01f:	(bad)
  40f022:	stc    
  40f023:	and    BYTE PTR [ebx+esi*2-0x33],bl
  40f027:	inc    esp
  40f028:	nop
  40f029:	inc    ebx
  40f02a:	lds    edi,FWORD PTR [ebx+eiz*2]
  40f02d:	test   DWORD PTR [ebp+0x72c25c97],0x640c2734
  40f037:	pop    esp
  40f038:	daa    
  40f039:	adc    BYTE PTR [ecx],bl
  40f03b:	mov    ss,edi
  40f03d:	and    esi,ebp
  40f03f:	mov    eax,edi
  40f041:	and    ebp,ebp
  40f043:	test   al,0xb9
  40f045:	sti    
  40f046:	push   esi
  40f047:	add    BYTE PTR [eax],al
  40f049:	add    BYTE PTR [edi-0x639dabb8],dl
  40f04f:	mov    dh,0x50
  40f051:	add    BYTE PTR [ecx+0x61],bl
  40f054:	push   es
  40f055:	add    BYTE PTR [edi-0x35a849a5],bl
  40f05b:	pop    ebx
  40f05c:	jle    0x40f049
  40f05e:	sahf   
  40f05f:	fisttp WORD PTR [ebx+0x10]
  40f062:	mov    DWORD PTR [esi-0x1d1a014a],edi
  40f068:	mov    eax,ebx
  40f06a:	dec    ecx
  40f06b:	out    dx,eax
  40f06c:	std    
  40f06d:	jne    0x40f03c
  40f06f:	scas   al,BYTE PTR es:[edi]
  40f070:	push   ebp
  40f071:	add    BYTE PTR [ebp+0x195ce986],bl
  40f077:	cmp    esi,esi
  40f079:	add    ah,cl
  40f07b:	cwde   
  40f07c:	std    
  40f07d:	add    BYTE PTR [ebp+eax*4-0x3f],bh
  40f081:	add    BYTE PTR [ebx-0x5a47fffa],bl
  40f087:	out    0xfd,al
  40f089:	jg     0x40f06c
  40f08b:	sbb    dh,BYTE PTR [ecx+0x6]
  40f08e:	adc    DWORD PTR [ebx],ebx
  40f090:	lds    eax,FWORD PTR [ebp+0x35]
  40f093:	add    al,0x8d
  40f095:	add    al,0x51
  40f097:	xchg   esi,eax
  40f098:	mov    esi,DWORD PTR [ebp-0x5e]
  40f09b:	jmp    0x40f052
  40f09d:	mov    BYTE PTR [ebp-0x113f7d1a],0xf1
  40f0a4:	(bad)  
  40f0a5:	jne    0x40f0e5
  40f0a7:	mov    DWORD PTR [ebx+0x10],edx
  40f0aa:	gs inc eax
  40f0ac:	or     cl,BYTE PTR [ebx+0xf000000]
  40f0b2:	mov    ebx,0x3d82cb89
  40f0b7:	cli    
  40f0b8:	jmp    DWORD PTR [ebp-0x5b7e1177]
  40f0be:	cmp    dh,bh
  40f0c0:	push   es
  40f0c1:	mov    bh,BYTE PTR [edi]
  40f0c3:	sbb    eax,DWORD PTR [eax+0x73fee517]
  40f0c9:	push   edx
  40f0ca:	out    0x73,al
  40f0cc:	clc    
  40f0cd:	repz (bad) 
  40f0cf:	or     bh,al
  40f0d1:	hlt    
  40f0d2:	enter  0xc58e,0x4d
  40f0d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d7:	dec    ebx
  40f0d8:	rol    DWORD PTR [ebx],0x70
  40f0db:	mov    al,ds:0x8268f379
  40f0e0:	jmp    0xd4d6:0x7459e2ca
  40f0e7:	enter  0x78f7,0xaa
  40f0eb:	or     cl,BYTE PTR [ecx-0x15bdc30e]
  40f0f1:	rcl    BYTE PTR [edx+0x7f42eb8d],1
  40f0f7:	test   DWORD PTR [ebx+edi*8+0x6f],edi
  40f0fb:	xlat   BYTE PTR ds:[ebx]
  40f0fc:	push   es
  40f0fd:	pop    ebx
  40f0fe:	js     0x40f102
  40f100:	pop    es
  40f101:	jae    0x40f107
  40f103:	aad    0x8a
  40f105:	ds pusha 
  40f107:	mov    ch,0xe7
  40f109:	enter  0x6139,0xfe
  40f10d:	push   0x74fa8597
  40f112:	mov    dl,0xa
  40f114:	mov    eax,0xc4000000
  40f119:	outs   dx,DWORD PTR ds:[esi]
  40f11a:	or     DWORD PTR [eax+0x64872658],eax
  40f120:	pop    ebx
  40f121:	outs   dx,DWORD PTR ds:[esi]
  40f122:	dec    eax
  40f123:	inc    esp
  40f124:	push   esp
  40f125:	outs   dx,DWORD PTR ds:[esi]
  40f126:	mov    eax,0x36f3080
  40f12b:	add    bl,dh
  40f12d:	out    0x61,eax
  40f12f:	(bad)  
  40f130:	cmp    al,0xf0
  40f132:	push   ds
  40f133:	fadd   st,st(1)
  40f135:	popa   
  40f136:	(bad)  
  40f137:	xlat   BYTE PTR ds:[ebx]
  40f138:	xor    eax,0xc000632a
  40f13d:	jmp    0xfe48:0x360bf7d7
  40f144:	adc    al,0xe3
  40f146:	inc    edx
  40f147:	jae    0x40f109
  40f149:	push   es
  40f14a:	data16 fsub st,st(0)
  40f14d:	lea    esi,[ebx-0x1b2d020d]
  40f153:	mov    gs,WORD PTR [edi-0x2bb19ea2]
  40f159:	mov    dl,0x41
  40f15b:	(bad)  
  40f15c:	in     eax,0x8c
  40f15e:	cmp    BYTE PTR [esi+ebx*8+0x730ae8dd],al
  40f165:	ror    bl,cl
  40f167:	or     DWORD PTR [edi+0x58],0xffffffe8
  40f16b:	xlat   BYTE PTR ds:[ebx]
  40f16c:	mov    DWORD PTR [eax-0x6d],ebx
  40f16f:	pop    ebx
  40f170:	aam    0xe0
  40f172:	bound  esi,QWORD PTR cs:[ebp+0x49c1268c]
  40f179:	dec    esi
  40f17a:	sub    dh,bl
  40f17c:	add    BYTE PTR [eax],al
  40f17e:	add    BYTE PTR [edx+ebx*4-0x790bfc7e],ah
  40f185:	add    DWORD PTR [edi+ebp*2+0x51],ebp
  40f189:	jae    0x40f1f3
  40f18b:	jns    0x40f14f
  40f18d:	loopne 0x40f11c
  40f18f:	aaa    
  40f190:	pshufw mm0,QWORD PTR [ebx],0xc0
  40f194:	inc    esi
  40f195:	shl    DWORD PTR [ebp+0x67],0xc3
  40f199:	add    al,0xf4
  40f19b:	mov    esp,0x3283c57
  40f1a0:	pop    eax
  40f1a1:	xor    al,0x28
  40f1a3:	add    ebx,DWORD PTR [eax+0x3c]
  40f1a6:	sub    BYTE PTR [ebx],al
  40f1a8:	outs   dx,DWORD PTR ds:[esi]
  40f1a9:	sbb    al,0x61
  40f1ab:	dec    ebp
  40f1ac:	pop    eax
  40f1ad:	test   eax,0x40eef8ee
  40f1b2:	mov    ah,0xb1
  40f1b4:	push   es
  40f1b5:	cmp    DWORD PTR [ecx],0x84e904bf
  40f1bb:	xchg   edi,eax
  40f1bc:	pop    edx
  40f1bd:	call   0x7e4b9122
  40f1c2:	xlat   BYTE PTR ds:[ebx]
  40f1c3:	hlt    
  40f1c4:	push   edi
  40f1c5:	(bad)  
  40f1c6:	fild   DWORD PTR [eax+0x79e93ff6]
  40f1cc:	ret    
  40f1cd:	jecxz  0x40f221
  40f1cf:	loope  0x40f1e4
  40f1d1:	shr    BYTE PTR [ecx+0x41648cb7],0xaa
  40f1d8:	ret    0x4fe3
  40f1db:	push   edx
  40f1dc:	pop    ecx
  40f1dd:	(bad)  
  40f1de:	push   0xffffffb4
  40f1e0:	pop    ebx
  40f1e1:	(bad)  
  40f1e2:	jb     0x40f1e4
  40f1e4:	add    BYTE PTR [eax],al
  40f1e6:	mov    ah,0x63
  40f1e8:	out    0x4a,eax
  40f1ea:	mov    esp,0xff2b0005
  40f1ef:	push   es
  40f1f0:	push   0xfffffff5
  40f1f2:	fdivr  DWORD PTR [edi+0x6ef0aa4f]
  40f1f8:	cwde   
  40f1f9:	pushf  
  40f1fa:	out    dx,al
  40f1fb:	push   es
  40f1fc:	add    DWORD PTR [esp+ecx*2-0xb8302a8],0x57
  40f204:	je     0x40f1f7
  40f206:	adc    esi,ebx
  40f208:	jnp    0x40f1e5
  40f20a:	mov    al,0x57
  40f20c:	xchg   DWORD PTR [esp+edx*1+0x13e54c85],esp
  40f213:	ins    DWORD PTR es:[edi],dx
  40f214:	or     al,0x1a
  40f216:	aaa    
  40f217:	sbb    bl,al
  40f219:	bound  ecx,QWORD PTR [ebp-0x2c5e7da1]
  40f21f:	mov    es,WORD PTR [ebp+eax*8-0x28]
  40f223:	scas   al,BYTE PTR es:[edi]
  40f224:	je     0x40f211
  40f226:	lock inc esp
  40f228:	pop    es
  40f229:	jmp    0x6b2c7ecb
  40f22e:	test   al,0x58
  40f230:	je     0x40f222
  40f232:	rcl    edx,cl
  40f234:	or     ebx,DWORD PTR [esi+0x2911cf45]
  40f23a:	out    dx,eax
  40f23b:	push   edi
  40f23c:	je     0x40f237
  40f23e:	push   0xffffffc7
  40f240:	inc    BYTE PTR [eax]
  40f242:	daa    
  40f243:	pop    es
  40f244:	push   0x0
  40f246:	popf   
  40f247:	xor    BYTE PTR [esi],al
  40f249:	inc    DWORD PTR [eax]
  40f24b:	add    BYTE PTR [eax],al
  40f24d:	aaa    
  40f24e:	das    
  40f24f:	adc    BYTE PTR [eax+0x1a],al
  40f252:	cmp    BYTE PTR [ebx+0x10],0x1a
  40f256:	or     edi,DWORD PTR gs:[ebx]
  40f259:	push   edi
  40f25a:	push   ebx
  40f25b:	jp     0x40f25f
  40f25d:	fld    st(2)
  40f25f:	xor    ecx,ecx
  40f261:	mov    ah,0x81
  40f263:	or     al,BYTE PTR [esi-0x71]
  40f266:	int3   
  40f267:	or     al,BYTE PTR [eax]
  40f269:	xchg   DWORD PTR [ebx+0x125153ea],eax
  40f26f:	push   ebp
  40f270:	push   edi
  40f271:	pop    ecx
  40f272:	mov    bl,0xfd
  40f274:	jne    0x40f237
  40f276:	out    0x73,eax
  40f278:	or     al,0xdd
  40f27a:	pop    esp
  40f27b:	jbe    0x40f28f
  40f27d:	mov    cl,BYTE PTR [edx]
  40f27f:	mov    ebx,eax
  40f281:	jo     0x40f28d
  40f283:	push   DWORD PTR [ebp-0x62]
  40f286:	sti    
  40f287:	cmc    
  40f288:	jmp    DWORD PTR [edi]
  40f28a:	add    cl,BYTE PTR [ebx-0x22a0d3d]
  40f290:	call   FWORD PTR [ebp-0x727a097e]
  40f296:	xor    eax,0xff0f4723
  40f29b:	test   DWORD PTR ds:[edx+0x2f],ecx
  40f29f:	sbb    ebp,eax
  40f2a1:	dec    ebp
  40f2a2:	mov    edi,0xbae1fffd
  40f2a7:	xor    esi,0x26
  40f2aa:	pop    ecx
  40f2ab:	push   ebp
  40f2ac:	call   DWORD PTR [edi]
  40f2ae:	test   DWORD PTR [edx+0xc3],0xe806309d
  40f2b8:	out    0xb5,eax
  40f2ba:	std    
  40f2bb:	inc    ecx
  40f2bd:	int3   
  40f2be:	jmp    0x4271e5c5
  40f2c3:	pop    esi
  40f2c4:	int    0x18
  40f2c6:	rol    ecx,0xfb
  40f2c9:	pop    edi
  40f2ca:	mov    bh,0x8a
  40f2cc:	pxor   mm6,QWORD PTR [edx-0x272343ab]
  40f2d3:	pop    es
  40f2d4:	js     0x40f2ae
  40f2d6:	mov    dh,al
  40f2d8:	add    al,0x53
  40f2da:	adc    BYTE PTR [ecx],0xb3
  40f2dd:	pop    edi
  40f2de:	mov    edi,edx
  40f2e0:	sbb    WORD PTR fs:[ebp-0x76ff9fc9],cx
  40f2e8:	cs int3 
  40f2ea:	test   BYTE PTR [edi+ebx*8+0x5f],al
  40f2ee:	push   es
  40f2ef:	add    bl,dh
  40f2f1:	fiadd  WORD PTR [edx-0x1]
  40f2f4:	repnz pop edi
  40f2f6:	add    al,BYTE PTR [ecx-0x5ffda038]
  40f2fc:	repz jl 0x40f319
  40f2ff:	mov    esp,DWORD PTR [esi]
  40f301:	cld    
  40f302:	imul   esp,DWORD PTR [ecx],0xffffffb7
  40f305:	add    al,0x5f
  40f307:	xor    DWORD PTR [ebx+0x26ff2ed3],0x64
  40f30e:	mov    DWORD PTR ds:0x8d0ad294,eax
  40f314:	not    edi
  40f316:	mov    cl,0x4f
  40f318:	add    BYTE PTR [eax],al
  40f31a:	add    BYTE PTR [edx+edx*2+0x603312ae],al
  40f321:	xchg   DWORD PTR [edi+0x4a8fa7fb],edi
  40f327:	ins    BYTE PTR es:[edi],dx
  40f328:	clc    
  40f329:	inc    esp
  40f32a:	jl     0x40f35e
  40f32c:	pusha  
  40f32d:	pop    edx
  40f32e:	mov    dh,ch
  40f330:	push   eax
  40f331:	dec    ebx
  40f332:	gs push 0x6b
  40f335:	fimul  DWORD PTR [edx-0x7cfeb7cc]
  40f33b:	cmp    eax,DWORD PTR [esi]
  40f33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f33e:	mov    esi,0x41afb19e
  40f343:	in     al,dx
  40f344:	push   es
  40f345:	aas    
  40f346:	mov    bh,0x2d
  40f348:	fcmovb st,st(4)
  40f34a:	vmread DWORD PTR [esi-0x7b],edx
  40f34e:	clc    
  40f34f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f350:	clc    
  40f351:	sub    BYTE PTR [eax+ebp*2],al
  40f354:	dec    esi
  40f355:	addr16 inc esi
  40f357:	or     al,0x7
  40f359:	jmp    0xe8966561
  40f35e:	add    edx,DWORD PTR [ebx+0x6]
  40f361:	(bad)  
  40f362:	adc    esp,DWORD PTR [esi-0x3b]
  40f365:	out    0x6b,eax
  40f367:	mov    dl,0x48
  40f369:	dec    ebp
  40f36a:	pop    esi
  40f36b:	jo     0x40f3b4
  40f36d:	mov    esp,0x4dbdc27
  40f372:	hlt    
  40f373:	aad    0xdb
  40f375:	or     al,0xf4
  40f377:	and    eax,0xdf5ef654
  40f37c:	sahf   
  40f37d:	stc    
  40f37e:	ret    
  40f37f:	add    BYTE PTR [eax],al
  40f381:	add    BYTE PTR [ebx+ecx*4-0x7d5c24d8],bh
  40f388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f389:	pop    esi
  40f38a:	jmp    0x798a7ed4
  40f38f:	add    eax,0x6eb072f
  40f394:	adc    al,BYTE PTR [edx]
  40f396:	jo     0x40f3d7
  40f398:	cmc    
  40f399:	mov    ebp,0x3e0492e
  40f39e:	sbb    eax,0x8a44b881
  40f3a3:	or     ebp,esi
  40f3a5:	xchg   ebp,eax
  40f3a6:	mov    ds:0x10bddfe1,al
  40f3ab:	add    al,0x47
  40f3ad:	sbb    DWORD PTR [ecx-0x10],esp
  40f3b0:	mov    esi,0x6a0c5681
  40f3b5:	inc    esi
  40f3b6:	add    al,0xed
  40f3b8:	(bad)  
  40f3b9:	jmp    0xa9f6f860
  40f3be:	pop    ecx
  40f3bf:	call   FWORD PTR [ecx+0xf]
  40f3c2:	fidiv  DWORD PTR [esi]
  40f3c4:	sbb    bh,BYTE PTR [ebx+0x6a066672]
  40f3ca:	mov    cl,0x23
  40f3cc:	jmp    0xb888:0xe9e0
  40f3d2:	push   ss
  40f3d3:	jg     0x40f425
  40f3d5:	jmp    0x40f42d
  40f3d7:	dec    ecx
  40f3d8:	xor    BYTE PTR [ecx-0x52],0xda
  40f3dc:	or     DWORD PTR [esi+0x2b],ebp
  40f3df:	sub    BYTE PTR [esi+eiz*2],al
  40f3e2:	add    al,0xd4
  40f3e4:	adc    DWORD PTR [ecx-0x10000000],ebp
  40f3ea:	pop    es
  40f3eb:	sar    BYTE PTR [ecx-0x1edc27b1],0x9e
  40f3f2:	imul   edi,DWORD PTR [edx],0x2d
  40f3f5:	ds push ebp
  40f3f7:	xor    dh,BYTE PTR [eax]
  40f3f9:	int    0x7e
  40f3fb:	or     edi,ecx
  40f3fd:	xor    cl,BYTE PTR [eax]
  40f3ff:	add    BYTE PTR [edx+0x27],ch
  40f402:	push   ebp
  40f403:	je     0x40f3f8
  40f405:	pop    ds
  40f406:	fsub   DWORD PTR [ebx]
  40f408:	in     eax,0x17
  40f40a:	sti    
  40f40b:	ja     0x40f408
  40f40d:	mov    al,0x53
  40f40f:	dec    esi
  40f410:	push   cs
  40f411:	retf   
  40f412:	daa    
  40f413:	or     BYTE PTR [edi-0x13c03f8],bl
  40f419:	aaa    
  40f41a:	dec    edx
  40f41b:	add    ebp,edi
  40f41d:	lock dec eax
  40f41f:	add    ebp,ecx
  40f421:	jae    0x40f3f2
  40f423:	and    ebp,ebp
  40f425:	lock fld DWORD PTR [ebx]
  40f428:	sbb    ch,BYTE PTR [edi]
  40f42a:	popa   
  40f42b:	cs push 0xffffffc8
  40f42e:	push   esp
  40f42f:	je     0x40f414
  40f431:	(bad)  
  40f432:	xlat   BYTE PTR ds:[ebx]
  40f433:	and    eax,DWORD PTR [eax]
  40f435:	dec    esi
  40f436:	mov    dl,0x13
  40f438:	cmp    BYTE PTR [eax],0x47
  40f43b:	(bad)  
  40f43c:	push   ebp
  40f43d:	xlat   BYTE PTR ds:[ebx]
  40f43e:	sti    
  40f43f:	dec    DWORD PTR [esp+ecx*1-0x213f7af7]
  40f446:	dec    esi
  40f447:	out    0x78,al
  40f449:	mov    DWORD PTR [edx+0x85fd],esi
  40f44f:	add    BYTE PTR [edx+0x3b],bl
  40f452:	or     DWORD PTR [esi+0x75],edx
  40f455:	cmp    esp,DWORD PTR [edx]
  40f457:	or     al,0xfa
  40f459:	loop   0x40f431
  40f45b:	ret    
  40f45c:	xchg   ebp,eax
  40f45d:	mov    dl,0x5c
  40f45f:	ret    0x71e
  40f462:	cmp    DWORD PTR [esi+ebp*1+0xb],0x0
  40f467:	push   esi
  40f468:	xor    DWORD PTR [edi-0x3526fb8d],0xb4592ce9
  40f472:	std    
  40f473:	jne    0x40f43b
  40f475:	mov    bl,0x72
  40f477:	and    al,0xe2
  40f479:	mov    bl,0x13
  40f47b:	js     0x40f435
  40f47d:	inc    esi
  40f47e:	dec    BYTE PTR [edx+0x144810a]
  40f484:	dec    edi
  40f485:	(bad)  
  40f486:	jb     0x40f46c
  40f488:	loop   0x40f479
  40f48a:	ret    0xd5ff
  40f48d:	mov    BYTE PTR [esi-0x2636e8c],bh
  40f493:	je     0x40f443
  40f495:	add    dl,BYTE PTR [eax-0x18]
  40f498:	adc    bh,al
  40f49a:	std    
  40f49b:	push   DWORD PTR [eax+ecx*8+0x2]
  40f49f:	add    BYTE PTR [ecx-0x64],ch
  40f4a2:	mov    ecx,esi
  40f4a4:	pop    ebp
  40f4a5:	jg     0x40f49d
  40f4a7:	test   DWORD PTR [edi+esi*1-0x798874c2],ebx
  40f4ae:	adc    BYTE PTR [eax-0xd],al
  40f4b1:	pop    edi
  40f4b2:	test   esi,edi
  40f4b4:	add    BYTE PTR [eax],al
  40f4b6:	add    BYTE PTR [ebx+edi*4+0xb],ah
  40f4ba:	jmp    edi
  40f4bc:	add    esi,esp
  40f4be:	inc    BYTE PTR [eax-0x2b]
  40f4c1:	pop    ebx
  40f4c2:	inc    BYTE PTR ds:0x2b8a3699
  40f4c8:	mov    bl,0x7
  40f4ca:	cmp    ebp,DWORD PTR [esi+0x1c]
  40f4cd:	or     eax,0x45f84b02
  40f4d2:	(bad)  
  40f4d3:	sub    al,0xe4
  40f4d5:	inc    ebx
  40f4d6:	jae    0x40f4d4
  40f4d8:	mov    dl,0xff
  40f4da:	ds ret 
  40f4dc:	aam    0x1
  40f4de:	call   FWORD PTR [edi-0x87311b5]
  40f4e4:	div    DWORD PTR [ebx+0x5a9cb4e7]
  40f4ea:	inc    BYTE PTR [ebx+0x5f]
  40f4ed:	ins    DWORD PTR es:[edi],dx
  40f4ee:	add    ecx,eax
  40f4f0:	pop    ds
  40f4f1:	mov    ebx,0x1e485d
  40f4f6:	add    BYTE PTR [eax+0x43],dh
  40f4f9:	push   ds
  40f4fa:	add    al,0xf3
  40f4fc:	ins    BYTE PTR es:[edi],dx
  40f4fd:	mov    al,0x56
  40f4ff:	push   0x47f08f27
  40f504:	push   edi
  40f505:	lea    edi,[ebx+ecx*2]
  40f508:	cs ret 0x71ff
  40f50c:	and    al,0x5b
  40f50e:	je     0x40f4fb
  40f510:	lock iret 
  40f512:	and    eax,DWORD PTR [ebx]
  40f514:	stc    
  40f515:	xor    cl,BYTE PTR [edx-0xedff35]
  40f51b:	add    BYTE PTR [eax],al
  40f51d:	add    ah,al
  40f51f:	aam    0x5b
  40f521:	mov    WORD PTR [edi],fs
  40f523:	xor    DWORD PTR [ebx],eax
  40f525:	call   0xfe9c1310
  40f52a:	outs   dx,DWORD PTR ds:[esi]
  40f52b:	pop    ds
  40f52c:	rcl    BYTE PTR [edx],1
  40f52e:	push   0x75b6ef06
  40f533:	fiadd  DWORD PTR [eax+esi*8]
  40f536:	icebp  
  40f537:	dec    ecx
  40f538:	cmp    BYTE PTR [esp+eiz*2+0x44],ch
  40f53c:	int    0x5a
  40f53e:	mov    WORD PTR [edi],es
  40f540:	rol    BYTE PTR ds:0xba1d4721,cl
  40f546:	test   eax,0x9d03ec44
  40f54b:	push   ecx
  40f54c:	rol    DWORD PTR [ebx-0x7f17391e],cl
  40f552:	je     0x40f524
  40f554:	cmp    edx,DWORD PTR [edi]
  40f556:	cmp    dl,BYTE PTR ds:0x466fb2bb
  40f55c:	push   cs
  40f55d:	cld    
  40f55e:	in     eax,dx
  40f55f:	cdq    
  40f560:	les    esi,FWORD PTR [ecx-0x3037ae8f]
  40f566:	sti    
  40f567:	test   DWORD PTR [ebp+0x6d858e52],ebp
  40f56d:	inc    DWORD PTR [ebp-0x463a57f8]
  40f573:	fsubr  QWORD PTR ss:[ebx+0x19]
  40f577:	inc    esi
  40f578:	arpl   di,bp
  40f57a:	and    BYTE PTR ss:[eax-0x3fc188a6],0xf1
  40f582:	add    BYTE PTR [eax],al
  40f584:	add    ch,ah
  40f586:	xchg   edi,eax
  40f587:	cld    
  40f588:	int    0x71
  40f58a:	push   eax
  40f58b:	or     al,dl
  40f58d:	sti    
  40f58e:	and    DWORD PTR ds:0x25845652,0xffffffff
  40f595:	cmp    eax,0x2bccb10b
  40f59a:	pop    ebp
  40f59b:	mov    ch,0x1e
  40f59d:	mov    ebp,0x5c80ddd9
  40f5a2:	shl    ecx,1
  40f5a4:	mov    al,ch
  40f5a6:	push   es
  40f5a7:	cwde   
  40f5a8:	mov    ch,0x26
  40f5aa:	pop    edi
  40f5ab:	call   FWORD PTR [edx+0x2e]
  40f5ae:	push   ecx
  40f5af:	(bad)  
  40f5b0:	mov    edx,0xf588ea2f
  40f5b5:	mov    dl,0x45
  40f5b7:	push   edx
  40f5b8:	aaa    
  40f5b9:	add    eax,0xfad98a2c
  40f5be:	xchg   edi,eax
  40f5bf:	add    eax,0x6540a75c
  40f5c4:	push   0xffffffb5
  40f5c6:	(bad)  
  40f5c7:	jbe    0x40f5ad
  40f5c9:	sti    
  40f5ca:	xchg   edi,eax
  40f5cb:	rol    edx,0x49
  40f5ce:	or     DWORD PTR [edi+0x6e],0x51
  40f5d2:	test   ecx,edi
  40f5d4:	in     al,dx
  40f5d5:	and    ecx,DWORD PTR [ecx]
  40f5d7:	add    eax,0xfe4fcab0
  40f5dc:	cmp    cl,0x81
  40f5df:	dec    edi
  40f5e0:	outs   dx,BYTE PTR ds:[esi]
  40f5e1:	adc    DWORD PTR [ebp-0x13bc1307],eax
  40f5e7:	add    al,0x50
  40f5e9:	add    BYTE PTR [eax],al
  40f5eb:	add    BYTE PTR [edx-0x399201b1],ch
  40f5f1:	rol    DWORD PTR [esi],cl
  40f5f3:	loope  0x40f5e6
  40f5f5:	lds    esi,FWORD PTR [ecx]
  40f5f7:	inc    edx
  40f5f8:	xchg   BYTE PTR [eax],cl
  40f5fa:	ror    BYTE PTR [ecx-0xd],0x7e
  40f5fe:	add    BYTE PTR [edx-0x143a7c10],bl
  40f604:	dec    edi
  40f605:	mov    fs,WORD PTR [ebp+0x6c]
  40f608:	das    
  40f609:	fild   DWORD PTR [edi]
  40f60b:	gs push cs
  40f60d:	fild   DWORD PTR [ebx]
  40f60f:	jns    0x40f601
  40f611:	pop    ebx
  40f612:	add    ebx,edi
  40f614:	xor    BYTE PTR [edx+0x7c842a5a],dh
  40f61a:	jmp    0x40f686
  40f61c:	sbb    edi,esp
  40f61e:	or     BYTE PTR [esp+edi*1+0x6fb75150],0xda
  40f626:	pop    es
  40f627:	add    BYTE PTR [edi],bl
  40f629:	inc    DWORD PTR ds:0x8307578b
  40f62f:	and    BYTE PTR [edx-0x7db2786a],bl
  40f635:	lock (bad) 
  40f639:	mov    eax,0x825afffe
  40f63e:	inc    ebx
  40f63f:	adc    cl,bl
  40f641:	jecxz  0x40f643
  40f643:	mov    DWORD PTR [edi],edx
  40f645:	mov    bh,0xe9
  40f647:	add    eax,0x8b0640e1
  40f64c:	or     BYTE PTR [edx+0xf47b],0x0
  40f653:	pop    edx
  40f654:	sbb    ah,0x74
  40f657:	cs add ah,0x3b
  40f65b:	pop    ebx
  40f65c:	cmp    cl,BYTE PTR [edx]
  40f65e:	mov    ch,BYTE PTR [edx]
  40f660:	icebp  
  40f661:	push   esp
  40f662:	adc    al,0x6
  40f664:	push   eax
  40f665:	cmp    ecx,DWORD PTR ds:[ebx+0x39]
  40f669:	repnz mov esi,DWORD PTR [edx+0x22]
  40f66d:	inc    BYTE PTR [eax-0x7d]
  40f670:	nop
  40f671:	push   es
  40f672:	jmp    0x40f683
  40f674:	xchg   ebp,eax
  40f675:	mov    edi,DWORD PTR [ebp+0x12]
  40f678:	sub    bh,0xe8
  40f67b:	fld    DWORD PTR ds:0xb2610000
  40f681:	mov    DWORD PTR [ebp+0x3e],ecx
  40f684:	jnp    0x40f6f9
  40f686:	or     al,0x3f
  40f688:	push   es
  40f689:	lea    eax,[edx+ecx*8]
  40f68c:	or     al,BYTE PTR [eax]
  40f68e:	call   0x3ec105
  40f693:	push   esi
  40f694:	retf   0x840d
  40f697:	jno    0x40f6a3
  40f699:	add    BYTE PTR [eax],al
  40f69b:	inc    edi
  40f69c:	scas   eax,DWORD PTR es:[edi]
  40f69d:	jb     0x40f6b9
  40f69f:	imul   edi,DWORD PTR [ebx-0x3b],0x5625f3e8
  40f6a6:	(bad)  
  40f6a7:	pushf  
  40f6a8:	jmp    0x16a9f25a
  40f6ad:	mov    WORD PTR [eax],cs
  40f6af:	jp     0x40f715
  40f6b1:	jno    0x40f637
  40f6b3:	mov    bl,0x65
  40f6b5:	jle    0x40f643
  40f6b7:	add    BYTE PTR [eax],al
  40f6b9:	add    bl,dh
  40f6bb:	pop    edi
  40f6bc:	add    dh,dh
  40f6be:	cs push eax
  40f6c0:	add    esi,DWORD PTR [ebp+ebx*8-0x28]
  40f6c4:	enter  0x78fb,0x9e
  40f6c8:	mov    bh,bh
  40f6ca:	outs   dx,DWORD PTR ds:[esi]
  40f6cb:	mov    al,BYTE PTR fs:[edx+0x5ece601b]
  40f6d2:	js     0x40f724
  40f6d4:	lods   al,BYTE PTR ds:[esi]
  40f6d5:	(bad)  
  40f6d6:	ficom  WORD PTR [edi]
  40f6d8:	repnz aas 
  40f6da:	repz loop 0x40f720
  40f6dd:	jge    0x40f680
  40f6df:	xor    BYTE PTR [eax],dh
  40f6e1:	xor    ch,BYTE PTR [ebx+eiz*8]
  40f6e4:	inc    ebx
  40f6e5:	jge    0x40f6e4
  40f6e7:	jmp    0x77b42df3
  40f6ec:	and    esi,DWORD PTR [ebx+ebp*8-0x21]
  40f6f0:	ins    BYTE PTR es:[edi],dx
  40f6f1:	or     BYTE PTR [ebx-0x79],dh
  40f6f4:	push   DWORD PTR [esi-0x13]
  40f6f7:	and    DWORD PTR [edi+0x685bfb3a],edi
  40f6fd:	sub    dh,BYTE PTR [ecx]
  40f6ff:	rcl    DWORD PTR [edi],cl
  40f701:	xor    bh,BYTE PTR [esi-0x71]
  40f704:	push   ebp
  40f705:	test   cl,al
  40f707:	aaa    
  40f708:	out    dx,al
  40f709:	mov    edi,ebp
  40f70b:	stc    
  40f70c:	cmp    eax,0x13
  40f70f:	mov    WORD PTR [edx],cs
  40f711:	sbb    dl,0x56
  40f714:	cmp    al,0xef
  40f717:	mov    esi,?
  40f719:	inc    edi
  40f71a:	sub    DWORD PTR [edi+0x3a66],edx
  40f720:	add    BYTE PTR [ebp+0x76079f06],dh
  40f726:	inc    esi
  40f727:	sahf   
  40f728:	or     eax,DWORD PTR [ebx-0x4a]
  40f72b:	mov    esi,0xd47fc6b
  40f730:	push   edi
  40f731:	scas   al,BYTE PTR es:[edi]
  40f732:	add    bh,BYTE PTR [ecx+0xc37803]
  40f738:	push   edi
  40f739:	das    
  40f73a:	dec    ebx
  40f73b:	scas   eax,DWORD PTR es:[edi]
  40f73c:	shl    ah,0xfd
  40f73f:	push   0x7
  40f741:	je     0x40f790
  40f743:	in     eax,0x8a
  40f745:	mov    bh,0x4a
  40f747:	cmp    eax,0xaa3fc9b6
  40f74c:	repz pop esp
  40f74e:	and    BYTE PTR [ebx],0x58
  40f751:	imul   ecx,DWORD PTR [eax+edx*8+0x3c],0x82bd4d8c
  40f759:	sub    al,0x4d
  40f75b:	shr    DWORD PTR [ecx-0x59],0x81
  40f75f:	mov    esp,0x69fa4882
  40f764:	loopne 0x40f78a
  40f766:	push   es
  40f767:	cmp    ch,BYTE PTR [esi+0x1d695879]
  40f76d:	repz jnp 0x40f764
  40f770:	or     edi,DWORD PTR [edi+edi*2-0x4c84a7d5]
  40f777:	je     0x40f793
  40f779:	xor    ebp,edi
  40f77b:	imul   eax,DWORD PTR [esp+edi*8+0x4c],0x86ec89e8
  40f783:	pop    edi
  40f784:	and    eax,DWORD PTR [eax]
  40f786:	add    BYTE PTR [eax],al
  40f788:	add    DWORD PTR [bx+di+0x5c],ebp
  40f78c:	sti    
  40f78d:	retf   0x83e3
  40f790:	(bad)  
  40f792:	int    0xb
  40f794:	xor    edi,DWORD PTR [esi-0x55]
  40f797:	push   edi
  40f798:	or     DWORD PTR [ecx-0x46],ecx
  40f79b:	pop    esi
  40f79c:	or     DWORD PTR [ecx-0x1],ecx
  40f79f:	in     eax,0x71
  40f7a1:	ins    BYTE PTR es:[edi],dx
  40f7a2:	(bad)  
  40f7a3:	call   0x74587898
  40f7a8:	enter  0x8007,0x22
  40f7ac:	add    eax,0x396904d3
  40f7b1:	es jne 0x40f7aa
  40f7b4:	addr16 retf 
  40f7b6:	sti    
  40f7b7:	adc    bh,ah
  40f7b9:	or     BYTE PTR [esi],0x69
  40f7bc:	daa    
  40f7bd:	in     al,dx
  40f7be:	jae    0x40f7a6
  40f7c0:	jo     0x40f811
  40f7c2:	or     BYTE PTR [ebp-0xd],ch
  40f7c5:	xchg   al,bh
  40f7c7:	hlt    
  40f7c8:	inc    esi
  40f7c9:	add    eax,DWORD PTR [edi+0x22]
  40f7cc:	leave  
  40f7cd:	aad    0xe9
  40f7cf:	bound  esp,QWORD PTR [esi]
  40f7d1:	and    eax,ebx
  40f7d3:	ret    0xf07
  40f7d6:	pop    ds
  40f7d7:	cmp    al,0x42
  40f7d9:	sbb    ecx,ecx
  40f7db:	ins    BYTE PTR es:[edi],dx
  40f7dc:	xchg   BYTE PTR [ebp-0x16],cl
  40f7df:	jmp    0x40f812
  40f7e1:	les    edi,FWORD PTR [edi-0xf]
  40f7e4:	jl     0x40f7be
  40f7e6:	clc    
  40f7e7:	lahf   
  40f7e8:	mov    al,0x6
  40f7ea:	je     0x40f7d0
  40f7ec:	add    BYTE PTR [eax],al
  40f7ee:	add    BYTE PTR [edi+0x11],ah
  40f7f1:	cli    
  40f7f2:	sbb    edx,DWORD PTR [ebx-0xdeb05f0]
  40f7f8:	dec    ebx
  40f7f9:	dec    esp
  40f7fa:	test   DWORD PTR [edx+0x2d],edi
  40f7fd:	sub    bl,BYTE PTR [ebx+ebp*4]
  40f800:	or     BYTE PTR [ecx+esi*2+0x74],0x0
  40f805:	(bad)  
  40f806:	in     eax,0xf0
  40f808:	push   es
  40f809:	add    BYTE PTR [ecx-0x46],dl
  40f80c:	mov    esi,?
  40f80e:	pop    esi
  40f80f:	jae    0x40f79c
  40f811:	jae    0x40f826
  40f813:	pop    esp
  40f814:	xor    DWORD PTR [ebx+eiz*8+0x3],esi
  40f818:	inc    edi
  40f819:	add    BYTE PTR [bp+0x3e3c],bl
  40f81e:	add    BYTE PTR [edx+0x7fff03de],bl
  40f824:	mov    bl,0x89
  40f826:	ret    
  40f827:	xor    dl,BYTE PTR [eax+0x7dd5fffa]
  40f82d:	or     al,0x8b
  40f82f:	pop    edi
  40f830:	scas   eax,DWORD PTR es:[edi]
  40f831:	xchg   DWORD PTR [ebx+ebx*1],eax
  40f834:	int3   
  40f835:	mov    esi,0x43b29c74
  40f83a:	clc    
  40f83b:	add    DWORD PTR [edx+esi*8-0x5cbfcb9],ebx
  40f842:	mov    ecx,ebp
  40f844:	fbstp  TBYTE PTR ds:0x89b285ff
  40f84a:	inc    ebp
  40f84b:	push   edx
  40f84c:	fimul  WORD PTR [ebx]
  40f84e:	mov    ecx,DWORD PTR [edi]
  40f850:	stos   DWORD PTR es:[edi],eax
  40f851:	mov    DWORD PTR [esi],edi
  40f853:	add    BYTE PTR [eax],al
  40f855:	add    BYTE PTR [edx],dh
  40f857:	call   0x8666f819
  40f85c:	(bad)  
  40f85d:	call   DWORD PTR ds:0x99c95995
  40f863:	pushf  
  40f864:	mov    esp,ebp
  40f866:	leave  
  40f867:	jecxz  0x40f873
  40f869:	sub    DWORD PTR [edi-0x13ad0156],0x7d
  40f870:	lock sub DWORD PTR [edi+eax*1],0xffffff8d
  40f875:	sbb    al,0xd2
  40f877:	cdq    
  40f878:	xchg   DWORD PTR [ebp+0x66],eax
  40f87b:	sbb    BYTE PTR [ebx-0xc],0x31
  40f87f:	(bad)  
  40f880:	or     eax,0x75f83
  40f885:	add    BYTE PTR ds:0x8383067a,dl
  40f88b:	daa    
  40f88c:	je     0x40f898
  40f88e:	pop    ecx
  40f88f:	lods   eax,DWORD PTR ds:[esi]
  40f890:	pop    es
  40f891:	jb     0x40f868
  40f893:	xchg   edi,esi
  40f895:	or     eax,0x830828f3
  40f89a:	mov    bl,0x5e
  40f89c:	mov    DWORD PTR [edi+ecx*8+0x5],eax
  40f8a0:	inc    ecx
  40f8a1:	jno    0x40f872
  40f8a3:	add    eax,0xcf700e41
  40f8a8:	add    al,BYTE PTR [eax]
  40f8aa:	repz sub BYTE PTR [ebx+0xa87e07],cl
  40f8b1:	sub    DWORD PTR [edx+0x7004ce41],0xfffffff7
  40f8b8:	and    BYTE PTR [ebp+0x0],dh
  40f8bb:	add    BYTE PTR [eax],al
  40f8bd:	mul    esp
  40f8bf:	xor    DWORD PTR [eax+0x3c68040e],ecx
  40f8c5:	hlt    
  40f8c6:	adc    BYTE PTR [ebx+eax*4],al
  40f8c9:	jp     0x40f90b
  40f8cb:	into   
  40f8cc:	adc    BYTE PTR [eax+0x57],dh
  40f8cf:	or     BYTE PTR [edx-0xa],dh
  40f8d2:	fmul   QWORD PTR [esp+ecx*1-0x23]
  40f8d6:	pusha  
  40f8d7:	test   esi,eax
  40f8d9:	icebp  
  40f8da:	hlt    
  40f8db:	dec    esi
  40f8dc:	jno    0x40f92a
  40f8de:	in     eax,0x32
  40f8e0:	sub    ch,BYTE PTR [ebx]
  40f8e2:	xor    eax,0x310a6622
  40f8e7:	xlat   BYTE PTR ds:[ebx]
  40f8e8:	adc    eax,0x4680a700
  40f8ed:	xor    eax,0x70410745
  40f8f2:	js     0x40f8f9
  40f8f4:	data16 jo 0x40f95f
  40f8f7:	scas   al,BYTE PTR es:[edi]
  40f8f8:	jae    0x40f91f
  40f8fa:	push   0x44
  40f8fc:	add    BYTE PTR [edi-0xe397aa0],bl
  40f902:	inc    esp
  40f903:	dec    ebp
  40f904:	jno    0x40f92b
  40f906:	inc    ebp
  40f907:	dec    ebp
  40f908:	je     0x40f901
  40f90a:	fsubr  st(0),st
  40f90c:	sti    
  40f90d:	icebp  
  40f90e:	in     al,0x32
  40f910:	sub    cl,BYTE PTR [esi+0x7]
  40f913:	gs jg  0x40f94d
  40f916:	dec    edi
  40f917:	imul   eax,DWORD PTR [eax],0x6e
  40f91a:	add    ch,cl
  40f91c:	add    esi,ebx
  40f91e:	aaa    
  40f91f:	push   ecx
  40f920:	pop    esp
  40f921:	add    BYTE PTR [eax],al
  40f923:	add    BYTE PTR [esi],cl
  40f925:	mov    DWORD PTR [ebp+0x53],eax
  40f928:	jo     0x40f970
  40f92a:	mov    ah,0xf
  40f92c:	jbe    0x40f95b
  40f92e:	mov    ebx,0xc04701fd
  40f933:	mov    ebx,0xc3e8c727
  40f938:	cdq    
  40f939:	add    ebx,DWORD PTR [esi]
  40f93b:	fstp   DWORD PTR [eax-0x1aa3d683]
  40f941:	dec    ebp
  40f942:	or     eax,0x71f87953
  40f947:	mov    ecx,0x74e47f7c
  40f94c:	ja     0x40f994
  40f94e:	jl     0x40f93b
  40f950:	jne    0x40f915
  40f952:	lock jle 0x40f924
  40f955:	push   edx
  40f956:	imul   ecx,DWORD PTR [edx-0xe],0x69505b7f
  40f95d:	inc    ecx
  40f95e:	mov    edi,0xcd495426
  40f963:	jle    0x40f91c
  40f965:	dec    esi
  40f966:	rol    DWORD PTR [eax],1
  40f968:	js     0x40f92d
  40f96a:	sar    BYTE PTR [esi-0x2],0x5e
  40f96e:	call   0x2d3b:0x69493591
  40f975:	test   eax,0x453baf46
  40f97a:	xor    edi,DWORD PTR [edi+0x8]
  40f97d:	test   DWORD PTR [edi+esi*8+0x2ed9b0c1],eax
  40f984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f985:	adc    eax,0x7c86
  40f98a:	add    BYTE PTR [edi+0x4b06f52],ah
  40f990:	lldt   WORD PTR [ebx+esi*8]
  40f994:	stc    
  40f995:	test   DWORD PTR [edx-0x10],eax
  40f998:	push   es
  40f999:	add    BYTE PTR [edx-0x4d],dh
  40f99c:	push   eax
  40f99d:	mov    ah,BYTE PTR [eax+ebx*8+0x5561037b]
  40f9a4:	clc    
  40f9a5:	lds    esp,FWORD PTR [ecx+eiz*1+0x24ac8748]
  40f9ac:	jge    0x40f977
  40f9ae:	push   edx
  40f9af:	mov    ebx,0x103182e2
  40f9b4:	rcr    DWORD PTR [eax],cl
  40f9b6:	(bad)  
  40f9b7:	jne    0x40fa09
  40f9b9:	or     BYTE PTR [ebx+0x2182e0fa],bl
  40f9bf:	repz ror BYTE PTR [edx+ebp*2],1
  40f9c3:	das    
  40f9c4:	push   es
  40f9c5:	orps   xmm6,xmm7
  40f9c8:	loopne 0x40f94e
  40f9ca:	sub    DWORD PTR [ebx+0x2ae5ea65],ebp
  40f9d0:	ret    
  40f9d1:	(bad)  
  40f9d2:	call   0x69554315
  40f9d7:	data16 or BYTE PTR [eax],al
  40f9da:	je     0x40f9cf
  40f9dc:	push   cs
  40f9dd:	lea    ebp,ds:0x5c8d0058
  40f9e3:	mov    ebx,0xafd9447e
  40f9e8:	leave  
  40f9e9:	mov    esp,0xbf83a2c6
  40f9ee:	xor    eax,0x81000000
  40f9f3:	test   DWORD PTR [ecx+esi*4-0x11],edi
  40f9f7:	jnp    0x40fa55
  40f9f9:	mov    ch,0x49
  40f9fb:	add    BYTE PTR [edx-0x37],ch
  40f9fe:	pop    eax
  40f9ff:	loop   0x40f989
  40fa01:	in     eax,0x2f
  40fa03:	sar    DWORD PTR [edi+0x14],0xc2
  40fa07:	inc    edi
  40fa08:	jb     0x40f9eb
  40fa0a:	cs es pop eax
  40fa0d:	add    ah,dh
  40fa0f:	retf   
  40fa10:	add    bh,BYTE PTR [ebx-0x2b]
  40fa13:	leave  
  40fa14:	inc    ebx
  40fa15:	in     al,dx
  40fa16:	jge    0x40fa0a
  40fa18:	mov    al,BYTE PTR [ebp+0x6a]
  40fa1b:	enter  0x7b32,0x42
  40fa1f:	mov    cl,0xf7
  40fa21:	(bad)  
  40fa22:	cmp    eax,0x4af07d02
  40fa27:	cmp    ch,bh
  40fa29:	add    BYTE PTR [esi-0x6ddd95fb],ah
  40fa2f:	pop    ebp
  40fa30:	xchg   DWORD PTR [ecx+esi*4],eax
  40fa33:	ds xor eax,eax
  40fa36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa37:	int3   
  40fa38:	add    bh,BYTE PTR [ebx-0x23]
  40fa3b:	aas    
  40fa3c:	test   BYTE PTR [ebx+0x4539bb57],0x8e
  40fa43:	push   es
  40fa44:	adc    BYTE PTR [ebp-0x3],0xb5
  40fa48:	std    
  40fa49:	mov    ebx,ecx
  40fa4b:	xchg   ebp,eax
  40fa4c:	pop    esp
  40fa4d:	pop    ebx
  40fa4e:	ret    
  40fa4f:	rol    BYTE PTR [esi],0x0
  40fa52:	jge    0x40fa84
  40fa54:	bnd call 0xd440fa5a
  40fa5a:	ja     0x40fa59
  40fa5c:	jmp    FWORD PTR [ecx+0x27ede9c3]
  40fa62:	retf   0x56ea
  40fa65:	and    eax,0xf8bf7ca
  40fa6a:	dec    ebx
  40fa6b:	mov    eax,esi
  40fa6d:	xlat   BYTE PTR ds:[ebx]
  40fa6e:	or     al,0x74
  40fa70:	or     al,0xd7
  40fa72:	mov    dh,0x72
  40fa74:	adc    al,0xc9
  40fa76:	or     edi,esi
  40fa78:	jmp    0x40fe1b
  40fa7d:	xchg   edi,eax
  40fa7e:	mov    dh,0x73
  40fa80:	cmovns eax,ebx
  40fa83:	ds jmp 0x40fe23
  40fa89:	repz sub al,0x42
  40fa8c:	call   0x43580b
  40fa91:	mov    al,ds:0xe177edd4
  40fa96:	sbb    eax,0xcff58304
  40fa9b:	aad    0x2f
  40fa9d:	jo     0x40fad2
  40fa9f:	(bad)  
  40faa0:	(bad)  
  40faa1:	pop    esi
  40faa2:	adc    bh,BYTE PTR [esi+0x6]
  40faa5:	in     al,dx
  40faa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faa7:	adc    DWORD PTR [edi],ecx
  40faa9:	xchg   ebp,eax
  40faaa:	add    BYTE PTR [edx+esi*8],bl
  40faad:	inc    esi
  40faae:	jge    0x40facb
  40fab0:	iret   
  40fab1:	outs   dx,DWORD PTR ds:[esi]
  40fab2:	lock (bad) 
  40fab4:	push   eax
  40fab5:	xor    al,0xba
  40fab7:	pop    es
  40fab8:	pcmpeqw mm0,QWORD PTR [ecx+ecx*1+0xf]
  40fabd:	add    BYTE PTR [eax],al
  40fabf:	add    BYTE PTR [ebp+0x20],ch
  40fac2:	sbb    al,0xf2
  40fac4:	pop    ds
  40fac5:	push   ds
  40fac6:	pop    esp
  40fac7:	inc    eax
  40fac8:	inc    edx
  40fac9:	and    eax,0x28268a34
  40face:	jnp    0x40fabf
  40fad0:	jo     0x40fa65
  40fad2:	(bad)  
  40fad3:	(bad)  
  40fad4:	(bad)  
  40fad5:	ss mov bh,0xfe
  40fad8:	mov    al,ds:0x6a07bdb9
  40fadd:	jae    0x40fadd
  40fadf:	mov    al,dh
  40fae1:	arpl   WORD PTR [ebx],cx
  40fae3:	repnz fimul WORD PTR [esi]
  40fae6:	mov    ebp,esi
  40fae8:	out    0x42,eax
  40faea:	xchg   ecx,edx
  40faec:	fbstp  TBYTE PTR [esi]
  40faee:	adc    eax,eax
  40faf0:	jbe    0x40fa74
  40faf2:	int    0x14
  40faf4:	hlt    
  40faf5:	lea    edx,[edi+ecx*1]
  40faf8:	jge    0x40fb5f
  40fafa:	sbb    ebx,esi
  40fafc:	mov    esi,0xb346c328
  40fb01:	cmp    BYTE PTR [eax+0x7b],al
  40fb04:	adc    al,0x7
  40fb06:	xchg   edx,eax
  40fb07:	add    cl,al
  40fb09:	cmp    cl,bl
  40fb0b:	cmp    al,0x6f
  40fb0d:	cmp    eax,0x92336ee5
  40fb12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb13:	push   edi
  40fb14:	sbb    al,0x22
  40fb16:	test   eax,0xefd36fab
  40fb1b:	dec    esi
  40fb1c:	rol    DWORD PTR [edi+0x15],1
  40fb1f:	scas   al,BYTE PTR es:[edi]
  40fb20:	dec    edi
  40fb21:	dec    ecx
  40fb22:	loopne 0x40fb27
  40fb24:	add    BYTE PTR [eax],al
  40fb26:	add    BYTE PTR [esi],bh
  40fb28:	xchg   edx,eax
  40fb29:	push   esp
  40fb2a:	mov    dh,0x45
  40fb2c:	xchg   edx,eax
  40fb2d:	pop    edi
  40fb2e:	jnp    0x40fb57
  40fb30:	punpckldq mm2,DWORD PTR [edi+esi*2+0x4f]
  40fb35:	sar    edi,cl
  40fb37:	outs   dx,DWORD PTR ds:[esi]
  40fb38:	inc    ebp
  40fb39:	mov    esp,0x3d4e71f7
  40fb3e:	pop    ebp
  40fb3f:	push   ebp
  40fb40:	push   es
  40fb41:	jmp    0xb3867149
  40fb46:	(bad)  
  40fb47:	loope  0x40fb8f
  40fb49:	test   al,0x5c
  40fb4b:	add    DWORD PTR [esi],0x46e003e9
  40fb51:	(bad)  
  40fb52:	jg     0x40fae0
  40fb54:	inc    ebp
  40fb55:	call   0x6964750c
  40fb5a:	repnz mov esp,0x754e6a06
  40fb60:	mov    ebx,0x12ef82c5
  40fb65:	out    dx,al
  40fb66:	fcom   DWORD PTR [ebx]
  40fb68:	push   ss
  40fb69:	sahf   
  40fb6a:	push   es
  40fb6b:	in     al,dx
  40fb6c:	jge    0x40fb85
  40fb6e:	sbb    esp,DWORD PTR [ebx-0x45]
  40fb71:	xor    al,0x1b
  40fb73:	cmp    al,0xac
  40fb75:	arpl   WORD PTR [ebx-0x40],ax
  40fb78:	fld    TBYTE PTR [ecx+0x46]
  40fb7b:	repnz adc eax,0x7de40676
  40fb81:	(bad)  
  40fb82:	cld    
  40fb83:	push   ecx
  40fb85:	out    dx,eax
  40fb86:	xor    eax,0x38443092
  40fb8b:	add    BYTE PTR [eax],al
  40fb8d:	add    BYTE PTR [eax+ebx*2-0x6fe8d376],ch
  40fb94:	out    dx,eax
  40fb95:	push   0x23
  40fb97:	adc    edi,edi
  40fb99:	adc    al,0x6
  40fb9b:	fdiv   st(6),st
  40fb9d:	call   0x112b:0x7007d279
  40fba4:	mov    ebx,DWORD PTR [ebx+esi*8]
  40fba7:	push   ecx
  40fba9:	hlt    
  40fbaa:	sbb    ecx,DWORD PTR [edx-0x75e8220b]
  40fbb0:	rcl    ebp,1
  40fbb2:	jecxz  0x40fbad
  40fbb4:	mov    edi,0x18c2026c
  40fbb9:	ficomp WORD PTR [ebp-0x9]
  40fbbc:	push   cs
  40fbbd:	jle    0x40fb8c
  40fbbf:	icebp  
  40fbc0:	repnz mov ah,0xb5
  40fbc3:	mov    eax,eax
  40fbc5:	jmp    0x40fc38
  40fbc7:	dec    ebp
  40fbc8:	add    DWORD PTR [ecx+0x127b48f9],ebp
  40fbce:	cmp    DWORD PTR [esi],eax
  40fbd0:	sub    ebx,DWORD PTR [ebx]
  40fbd2:	add    DWORD PTR [esi-0x7c],ecx
  40fbd5:	pop    ds
  40fbd6:	lea    esp,[ebp+0x3d2e62c0]
  40fbdc:	xlat   BYTE PTR ds:[ebx]
  40fbdd:	loop   0x40fc0f
  40fbdf:	loope  0x40fb6d
  40fbe1:	lods   eax,DWORD PTR ds:[esi]
  40fbe2:	ja     0x40fc29
  40fbe4:	and    ch,BYTE PTR [eax]
  40fbe6:	popf   
  40fbe7:	loop   0x40fc45
  40fbe9:	sub    ebp,DWORD PTR [eax+0x44]
  40fbec:	jmp    0x7391e6dd
  40fbf1:	in     al,dx
  40fbf2:	add    BYTE PTR [eax],al
  40fbf4:	add    BYTE PTR [eax],dh
  40fbf6:	mov    es,WORD PTR [edi]
  40fbf8:	ins    DWORD PTR es:[edi],dx
  40fbf9:	or     BYTE PTR [ebx-0x47f6ec0c],bh
  40fbff:	add    DWORD PTR [eax],eax
  40fc01:	cmp    eax,ecx
  40fc03:	shr    ebx,0x43
  40fc06:	sub    al,BYTE PTR [ecx+0x115edaf9]
  40fc0c:	sbb    DWORD PTR [edx+0x9],0xf
  40fc10:	mov    bh,0x22
  40fc12:	sub    al,BYTE PTR [ebx+0x64e1ffc9]
  40fc18:	and    DWORD PTR [edx],0x48
  40fc1b:	jb     0x40fc1f
  40fc1d:	sub    eax,ecx
  40fc1f:	rcl    DWORD PTR [ebp-0x7f],0xa6
  40fc23:	dec    edi
  40fc24:	mov    ecx,edi
  40fc26:	inc    edx
  40fc27:	xchg   DWORD PTR [ebp+0x66],eax
  40fc2a:	mov    ecx,ds
  40fc2c:	jg     0x40fbfd
  40fc2e:	xchg   dh,al
  40fc30:	jmp    DWORD PTR [ebx]
  40fc32:	(bad)  
  40fc33:	push   esp
  40fc34:	(bad)  
  40fc35:	(bad)  
  40fc36:	sub    eax,0xd1325754
  40fc3b:	mov    edx,0x43c435ff
  40fc40:	or     al,0x5a
  40fc42:	shl    BYTE PTR [ebx-0x4],cl
  40fc45:	pop    ecx
  40fc46:	jp     0x40fc45
  40fc48:	adc    eax,0x3e3576
  40fc4d:	test   eax,0x66896500
  40fc52:	adc    esi,edi
  40fc54:	pop    esi
  40fc55:	or     ebx,edx
  40fc57:	std    
  40fc58:	jne    0x40fc5a
  40fc5a:	add    BYTE PTR [eax],al
  40fc5c:	xchg   ebx,eax
  40fc5d:	jp     0x40fc5c
  40fc5f:	adc    eax,0x3e391a
  40fc64:	ret    
  40fc65:	lds    esi,FWORD PTR [ecx]
  40fc67:	leave  
  40fc68:	ins    BYTE PTR es:[edi],dx
  40fc69:	ror    BYTE PTR [edx],0x47
  40fc6c:	adc    eax,esi
  40fc6e:	push   ecx
  40fc6f:	mov    esi,DWORD PTR [esi-0x15]
  40fc72:	pop    es
  40fc73:	test   DWORD PTR [ebp+0x52],edx
  40fc76:	add    eax,DWORD PTR [ebx-0x3ca62d5e]
  40fc7c:	repz add al,0xb6
  40fc7f:	out    0x8b,eax
  40fc81:	xchg   ecx,eax
  40fc82:	dec    ebx
  40fc83:	(bad)  
  40fc84:	outs   dx,BYTE PTR ds:[esi]
  40fc85:	icebp  
  40fc86:	daa    
  40fc87:	or     al,0xa3
  40fc89:	and    BYTE PTR [ebp-0x659dd3ab],dh
  40fc8f:	adc    dh,BYTE PTR [ebx-0x22bcbbd3]
  40fc95:	ins    BYTE PTR es:[edi],dx
  40fc96:	add    al,BYTE PTR [ebx+0x8d5a41b]
  40fc9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc9d:	pushf  
  40fc9e:	cmc    
  40fc9f:	ja     0x40fc82
  40fca1:	in     eax,dx
  40fca2:	add    ebx,DWORD PTR [ebx+0x30]
  40fca5:	jae    0x40fcad
  40fca7:	xor    bl,dh
  40fca9:	call   0x8cb950ee
  40fcae:	mov    cl,0x82
  40fcb0:	dec    esi
  40fcb1:	mov    ah,0x2
  40fcb3:	push   esi
  40fcb4:	outs   dx,BYTE PTR ds:[esi]
  40fcb5:	jae    0x40fca9
  40fcb7:	dec    edi
  40fcb8:	aam    0x5b
  40fcba:	(bad)  
  40fcbb:	xor    dh,BYTE PTR [ebx+0xfbbdab]
  40fcc1:	add    BYTE PTR [eax],al
  40fcc3:	fisttp DWORD PTR [edi+0x54]
  40fcc6:	(bad)  
  40fcc7:	mov    esp,0xbd8452b5
  40fccc:	inc    edi
  40fccd:	clc    
  40fcce:	(bad)  
  40fccf:	es cld 
  40fcd1:	pop    edx
  40fcd2:	jae    0x40fd3c
  40fcd4:	icebp  
  40fcd5:	dec    ebx
  40fcd6:	jmp    0x7368:0xfbc5b4eb
  40fcdd:	cli    
  40fcde:	mov    dl,dh
  40fce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fce1:	inc    esp
  40fce2:	pop    ebp
  40fce3:	mov    edx,0x8f8ab5ed
  40fce8:	lahf   
  40fce9:	mov    ah,0x8a
  40fceb:	sbb    DWORD PTR [ecx+0x737e3d77],0xfffffffe
  40fcf2:	dec    edi
  40fcf3:	fs mov ebx,0x7308afa
  40fcf9:	jb     0x40fd35
  40fcfb:	dec    esp
  40fcfc:	in     eax,dx
  40fcfd:	(bad)  
  40fcfe:	dec    ebx
  40fcff:	dec    ebp
  40fd00:	nop
  40fd01:	sub    ecx,DWORD PTR [eax+0x71]
  40fd04:	aas    
  40fd05:	int    0xd1
  40fd07:	fimul  DWORD PTR [ebx-0x74182e5f]
  40fd0d:	mov    ebp,0xfe41fbd1
  40fd12:	pop    ebx
  40fd13:	loopne 0x40fd92
  40fd15:	lods   eax,DWORD PTR ds:[esi]
  40fd16:	dec    ebx
  40fd17:	rol    DWORD PTR [eax],cl
  40fd19:	je     0x40fcd3
  40fd1b:	stc    
  40fd1c:	add    al,0x91
  40fd1e:	jecxz  0x40fd6a
  40fd20:	inc    edx
  40fd21:	xchg   ebp,eax
  40fd22:	jg     0x40fcd3
  40fd24:	inc    edx
  40fd25:	sub    eax,0xaa
  40fd2a:	sub    eax,DWORD PTR [esi+0x1b]
  40fd2d:	jg     0x40fd37
  40fd2f:	fsubr  DWORD PTR [ecx-0x1f]
  40fd32:	call   0x2fba1c3d
  40fd37:	pop    ss
  40fd38:	sbb    DWORD PTR [ebx+0x67],ecx
  40fd3b:	adc    esi,DWORD PTR [ecx+eax*8-0x28]
  40fd3f:	cs enter 0xcd51,0x41
  40fd44:	popa   
  40fd45:	push   esp
  40fd46:	outs   dx,DWORD PTR ds:[esi]
  40fd47:	cmp    bh,cl
  40fd49:	std    
  40fd4a:	mov    ebp,0xb85c44bb
  40fd4f:	jl     0x40fd8e
  40fd51:	dec    ebx
  40fd52:	cdq    
  40fd53:	push   cs
  40fd54:	(bad)  
  40fd56:	test   al,0x8d
  40fd58:	fwait
  40fd59:	sti    
  40fd5a:	imul   eax,DWORD PTR [edi],0x72
  40fd5d:	inc    edx
  40fd5e:	ss push eax
  40fd60:	sub    DWORD PTR [ebx-0x3a],ecx
  40fd63:	cs push cs
  40fd65:	mov    es,WORD PTR [ebp+0x26f78241]
  40fd6b:	das    
  40fd6c:	sbb    DWORD PTR [edi-0x4cd6be8b],ecx
  40fd72:	jns    0x40fdb2
  40fd74:	jmp    FWORD PTR [ecx-0x48]
  40fd77:	inc    eax
  40fd78:	je     0x40fd57
  40fd7a:	test   eax,0xa9f123b5
  40fd7f:	sbb    al,BYTE PTR [eax-0x76becf05]
  40fd85:	shl    DWORD PTR [ebx+0x40],1
  40fd88:	jge    0x40fd8b
  40fd8a:	sbb    eax,0xc65541
  40fd8f:	add    BYTE PTR [eax],al
  40fd91:	and    al,0xe5
  40fd93:	sqrtps xmm1,xmm6
  40fd96:	inc    edx
  40fd97:	(bad)  
  40fd98:	call   0xe9425d65
  40fd9d:	lock pop DWORD PTR ds:0x10b5b06c
  40fda4:	cmp    DWORD PTR [esi+0x39603c3],ecx
  40fdaa:	mov    ecx,0x8ff72911
  40fdaf:	inc    ebp
  40fdb0:	icebp  
  40fdb1:	pusha  
  40fdb2:	push   es
  40fdb3:	jmp    0x40fda0
  40fdb5:	push   es
  40fdb6:	inc    edi
  40fdb7:	pop    esi
  40fdb8:	stos   DWORD PTR es:[edi],eax
  40fdb9:	in     al,0x40
  40fdbb:	jmp    0xf7c6d07d
  40fdc0:	or     eax,ebx
  40fdc2:	pop    ss
  40fdc3:	pushw  0x38
  40fdc6:	jmp    0x8613e03e
  40fdcb:	imul   DWORD PTR [ebp+0x6c660bac]
  40fdd1:	xor    BYTE PTR [ebx-0x27ab2cf8],bh
  40fdd7:	gs pusha 
  40fdd9:	out    dx,al
  40fdda:	add    ecx,0xffffffeb
  40fddd:	xchg   edx,eax
  40fdde:	lea    eax,[eax]
  40fde0:	(bad)  
  40fde1:	pop    ss
  40fde2:	push   es
  40fde3:	sub    DWORD PTR [ebx],0xfffffff6
  40fde6:	add    eax,0xffffffeb
  40fde9:	mov    DWORD PTR [ecx+0x0],edi
  40fdec:	xchg   DWORD PTR [ebx-0x80],esi
  40fdef:	je     0x40fdf1
  40fdf1:	mov    esi,0x66c018
  40fdf6:	add    BYTE PTR [eax],al
  40fdf8:	jecxz  0x40fe03
  40fdfa:	ret    
  40fdfb:	mov    ecx,DWORD PTR [esi+0x51eb0420]
  40fe01:	ret    0x3bff
  40fe04:	pusha  
  40fe05:	push   eax
  40fe06:	pop    es
  40fe07:	cmp    al,0x5f
  40fe09:	push   eax
  40fe0a:	add    eax,DWORD PTR [ecx-0x1f]
  40fe0d:	cld    
  40fe0e:	jo     0x40fe01
  40fe10:	rol    ebx,1
  40fe12:	sub    DWORD PTR [esi+eiz*8+0x6],eax
  40fe16:	cmp    ecx,esi
  40fe18:	out    0x36,al
  40fe1a:	mov    edx,DWORD PTR [ecx+0x1b]
  40fe1d:	adc    edx,esi
  40fe1f:	jae    0x40fe5f
  40fe21:	test   BYTE PTR [edi],dh
  40fe23:	or     eax,0x3a8005f7
  40fe28:	add    BYTE PTR [ecx+0x0],dl
  40fe2b:	mov    edx,DWORD PTR [eax+0x44]
  40fe2e:	xchg   DWORD PTR [edi],ecx
  40fe30:	dec    eax
  40fe31:	pop    es
  40fe32:	add    BYTE PTR [ebp-0x7f],dl
  40fe35:	fiadd  WORD PTR [ecx+0x547aa6ec]
  40fe3b:	mov    ebp,DWORD PTR [ebx-0x2b]
  40fe3e:	inc    esp
  40fe3f:	sbb    al,0xba
  40fe41:	jbe    0x40feb5
  40fe43:	push   edx
  40fe44:	shl    bl,0x55
  40fe47:	lea    edx,[edi-0x6717b10d]
  40fe4d:	xchg   ecx,eax
  40fe4e:	std    
  40fe4f:	dec    DWORD PTR [ecx+0x60]
  40fe52:	jmp    0xf3ff:0x31f2b9ef
  40fe59:	ins    BYTE PTR es:[edi],dx
  40fe5a:	push   cs
  40fe5b:	jbe    0x40fe5d
  40fe5d:	add    BYTE PTR [eax],al
  40fe5f:	clc    
  40fe60:	rol    DWORD PTR [esp+ecx*1-0x77],0xc6
  40fe65:	xchg   DWORD PTR [ebp+0x2e],eax
  40fe68:	ret    0x1044
  40fe6b:	mov    eax,ds:0xf34d8bc6
  40fe70:	std    
  40fe71:	jp     0x40feb7
  40fe73:	xchg   ebx,eax
  40fe74:	add    eax,0x874fe8a
  40fe79:	cmp    BYTE PTR [edi+0x3abf2fe6],0xe5
  40fe80:	pop    ebp
  40fe81:	aam    0xdd
  40fe83:	push   0xffffff8f
  40fe85:	out    dx,al
  40fe86:	mov    BYTE PTR [ebp+0x78405d05],dh
  40fe8c:	jmp    0x13c8:0xa62c025b
  40fe93:	push   0xffffffe7
  40fe95:	jmp    0x40fe46
  40fe97:	repnz push esp
  40fe99:	push   cs
  40fe9a:	xor    esi,DWORD PTR [ebx]
  40fe9c:	cmp    al,0x47
  40fe9e:	mov    BYTE PTR [ebp+0x23447961],ch
  40fea4:	rol    BYTE PTR ss:[edi],0xe4
  40fea8:	mov    cl,0x45
  40feaa:	dec    DWORD PTR [ebp*1-0x594d36ed]
  40feb1:	mov    ch,0xf3
  40feb3:	push   0x22
  40feb5:	dec    esp
  40feb6:	mov    ah,BYTE PTR [ebp-0x4e483cf]
  40febc:	dec    ecx
  40febd:	call   0xc8b9ff36
  40fec2:	sldt   WORD PTR [eax]
  40fec5:	add    ah,ch
  40fec7:	mov    ds:0x30d4ff35,al
  40fecc:	jns    0x40ff4b
  40fece:	jmp    0x40fef1
  40fed0:	inc    esp
  40fed1:	pop    esi
  40fed2:	and    eax,0xf9c23979
  40fed7:	ins    DWORD PTR es:[edi],dx
  40fed8:	add    DWORD PTR [edi],ecx
  40feda:	outs   dx,DWORD PTR ds:[esi]
  40fedb:	int3   
  40fedc:	add    al,BYTE PTR [eax]
  40fede:	repz or dl,cl
  40fee1:	nop    eax
  40fee4:	jnp    0x40ff33
  40fee6:	out    dx,eax
  40fee7:	test   eax,0x7680eee
  40feec:	mov    bh,0xe7
  40feee:	je     0x40fec4
  40fef0:	sbb    eax,0x9d0bb351
  40fef5:	lds    eax,FWORD PTR [esi-0x28301fb8]
  40fefb:	mov    esi,DWORD PTR [ecx-0x20c01378]
  40ff01:	shl    cl,1
  40ff03:	xchg   BYTE PTR [ecx],ch
  40ff05:	and    ebp,DWORD PTR [esi-0x2f]
  40ff08:	sub    eax,0x5e205b83
  40ff0d:	add    DWORD PTR [ebx+0x49],esi
  40ff10:	or     BYTE PTR [ebx+0xf],bl
  40ff13:	(bad)  
  40ff14:	cmp    eax,DWORD PTR [edi+0x49]
  40ff17:	sbb    al,0xde
  40ff19:	test   DWORD PTR [ecx],esi
  40ff1b:	xlat   BYTE PTR ds:[ebx]
  40ff1c:	vhaddpd xmm2,xmm1,XMMWORD PTR [ebx]
  40ff20:	sub    DWORD PTR [ecx+edi*2],eax
  40ff23:	pop    edi
  40ff24:	in     eax,0x85
  40ff26:	mov    bh,0x3d
  40ff28:	sbb    BYTE PTR [edi+0x0],al
  40ff2b:	add    BYTE PTR [eax],al
  40ff2d:	call   DWORD PTR [esi-0x79f33c04]
  40ff33:	and    eax,DWORD PTR [edi+0x79]
  40ff36:	les    ebx,FWORD PTR [eax-0x2dc25886]
  40ff3c:	sub    DWORD PTR [eax+0x8be7edc],eax
  40ff42:	or     ebp,esi
  40ff44:	jp     0x40ffaa
  40ff46:	inc    edx
  40ff47:	loop   0x40ff19
  40ff49:	adc    BYTE PTR [edi+0x1e5ff972],al
  40ff4f:	jb     0x40ff0a
  40ff51:	les    eax,FWORD PTR [ecx]
  40ff53:	scas   eax,DWORD PTR es:[edi]
  40ff54:	repz cmc 
  40ff56:	mov    ebx,ebx
  40ff58:	inc    esi
  40ff59:	mov    ebp,0xe8b6613d
  40ff5e:	(bad)  
  40ff5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff60:	or     al,0xf2
  40ff62:	or     eax,0x3da5dc64
  40ff67:	push   DWORD PTR ds:0x31443c5c
  40ff6d:	cmp    ch,ch
  40ff6f:	jg     0x40ff94
  40ff71:	mov    DWORD PTR [eax*4-0x1c2d240],ecx
  40ff78:	imul   ebp,DWORD PTR [eax],0x3f640f0b
  40ff7e:	cmp    al,0xfe
  40ff80:	push   es
  40ff81:	call   0x9f03f350
  40ff86:	add    eax,0x3c336a0f
  40ff8b:	(bad)  
  40ff8c:	out    dx,al
  40ff8d:	fxch   st(3)
  40ff8f:	add    esp,DWORD PTR [ecx]
  40ff91:	add    BYTE PTR [eax],al
  40ff93:	add    BYTE PTR [ebx+0x73ee0106],al
  40ff99:	hlt    
  40ff9a:	(bad)  
  40ff9b:	(bad)  
  40ff9c:	mov    ch,0xfd
  40ff9e:	(bad)  
  40ff9f:	and    al,0xa3
  40ffa1:	(bad)  
  40ffa2:	(bad)  
  40ffa3:	sub    al,0xbf
  40ffa5:	std    
  40ffa6:	(bad)  
  40ffa7:	and    al,0xc3
  40ffa9:	mov    es,WORD PTR [ecx+edi*4-0x17]
  40ffad:	les    eax,FWORD PTR [edi]
  40ffaf:	fidiv  WORD PTR [ebx+0x11]
  40ffb2:	jmp    DWORD PTR [esi-0x6840074b]
  40ffb8:	inc    esi
  40ffb9:	and    DWORD PTR [ecx],eax
  40ffbb:	pusha  
  40ffbc:	ss adc eax,0xbce81574
  40ffc2:	psadbw mm3,QWORD PTR [esp+edi*2-0x18]
  40ffc7:	out    dx,eax
  40ffc8:	sub    eax,0x9662fe3d
  40ffcd:	add    al,0x8a
  40ffcf:	pop    ds
  40ffd0:	out    dx,al
  40ffd1:	(bad)  
  40ffd2:	push   ebp
  40ffd3:	in     eax,dx
  40ffd4:	mov    al,0x1
  40ffd6:	ret    
  40ffd7:	fcmovb st,st(5)
  40ffd9:	hlt    
  40ffda:	or     ebp,ebx
  40ffdc:	lods   al,BYTE PTR ds:[esi]
  40ffdd:	xor    bh,BYTE PTR [edx]
  40ffdf:	sub    ah,BYTE PTR [ebx+0x5c008b04]
  40ffe5:	cmp    bh,ah
  40ffe7:	mov    ah,0xe4
  40ffe9:	(bad)  
  40ffea:	std    
  40ffeb:	push   0xffffffea
  40ffed:	ins    BYTE PTR es:[edi],dx
  40ffee:	mov    ecx,DWORD PTR [ebp-0x6]
  40fff1:	jb     0x40ffd9
  40fff3:	stos   DWORD PTR es:[edi],eax
  40fff4:	adc    al,ch
  40fff6:	std    
  40fff7:	add    DWORD PTR [eax],eax
  40fff9:	add    BYTE PTR [eax],al
  40fffb:	dec    edi
  40fffc:	in     al,dx
  40fffd:	daa    
  40fffe:	inc    ebp
  40ffff:	ret    0x7cba
  410002:	sbb    cl,dh
  410004:	sbb    cl,BYTE PTR [ebx-0x38f699ba]
  41000a:	mov    DWORD PTR [edi+0x3a4689e4],ecx
  410010:	and    edi,eax
  410012:	lea    esi,[edi-0x8]
  410015:	xchg   DWORD PTR [ebp+0x3a],eax
  410018:	(bad)  [edi]
  41001a:	(bad)  
  41001b:	and    eax,0x324d89c2
  410020:	push   es
  410021:	iret   
  410022:	mov    esp,edx
  410024:	sub    al,BYTE PTR [edx+0x76bd25c0]
  41002a:	(bad)  
  41002b:	gs ret 0x3b45
  41002f:	in     al,0x32
  410031:	jo     0x410005
  410033:	xor    esp,DWORD PTR [esi-0x4]
  410036:	call   DWORD PTR [ebp+0x43]
  410039:	out    0x9f,eax
  41003b:	fs ret 0x55fd
  41003f:	xchg   ecx,eax
  410040:	fiadd  WORD PTR [ecx+0xf4c65f8]
  410046:	mov    esp,DWORD PTR [edi]
  410048:	aas    
  410049:	out    0x67,al
  41004b:	jne    0x41000e
  41004d:	std    
  41004e:	and    DWORD PTR [edx-0x3e],0x73
  410052:	add    al,0x99
  410054:	(bad)  
  410055:	jmp    0xdb57898e
  41005a:	push   ebx
  41005b:	mov    edx,eax
  41005d:	jae    0x41006f
  41005f:	add    BYTE PTR [eax],al
  410061:	add    bl,dh
  410063:	jnp    0x410017
  410065:	(bad)  
  410066:	ds pop edx
  410068:	scas   eax,DWORD PTR es:[edi]
  410069:	(bad)  
  41006a:	es ss inc ebx
  41006d:	adc    al,0x23
  41006f:	pusha  
  410070:	ret    0xd9ff
  410073:	lock lds edx,FWORD PTR [ecx]
  410076:	fimul  DWORD PTR [edx-0x4d1f820e]
  41007c:	imul   DWORD PTR [edi]
  41007e:	retf   
  41007f:	inc    esi
  410080:	inc    ebx
  410081:	jae    0x41006b
  410083:	pop    eax
  410084:	mov    ebp,0xf21f70f
  410089:	rcr    BYTE PTR [eax+0x2f],0x7a
  41008d:	sbb    al,cl
  41008f:	call   0xeb77:0x9af30b40
  410096:	push   0xa455f262
  41009b:	xlat   BYTE PTR ds:[ebx]
  41009c:	add    edi,edi
  41009e:	mov    esi,0x3cf60f29
  4100a3:	(bad)  
  4100a5:	out    0x5b,eax
  4100a7:	dec    esp
  4100a8:	inc    ebx
  4100a9:	(bad)  
  4100aa:	js     0x4100f1
  4100ac:	jge    0x4100ac
  4100ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100af:	and    DWORD PTR [edi],ecx
  4100b1:	ror    BYTE PTR [eax],0x37
  4100b4:	mov    ebx,0x8bdf0b56
  4100b9:	dec    BYTE PTR [eax+edi*4]
  4100bc:	push   edx
  4100bd:	test   ch,bh
  4100bf:	adc    BYTE PTR [ebp-0x76],dl
  4100c2:	mov    dh,0x3d
  4100c4:	scas   eax,DWORD PTR es:[edi]
  4100c5:	push   esi
  4100c6:	add    BYTE PTR [eax],al
  4100c8:	add    ah,dh
  4100ca:	adc    eax,edi
  4100cc:	mov    WORD PTR [ecx+eax*4+0x43],cs
  4100d0:	je     0x4100cd
  4100d2:	xchg   edi,eax
  4100d3:	aam    0xfe
  4100d5:	fdiv   QWORD PTR [ecx+0x265fc307]
  4100db:	lods   al,BYTE PTR ds:[esi]
  4100dc:	out    0x7c,eax
  4100de:	pop    es
  4100df:	sahf   
  4100e0:	inc    esp
  4100e1:	(bad)
  4100e4:	pop    eax
  4100e5:	jmp    0x7030ac77
  4100ea:	inc    edi
  4100eb:	aam    0x1
  4100ed:	jp     0x41010e
  4100ef:	jb     0x41012e
  4100f1:	dec    ecx
  4100f2:	ficomp DWORD PTR [esi-0x16e84d5a]
  4100f8:	js     0x41012a
  4100fa:	jecxz  0x4100d8
  4100fc:	js     0x410136
  4100fe:	jecxz  0x4100f0
  410100:	lods   eax,DWORD PTR ds:[esi]
  410101:	jns    0x4100b6
  410103:	(bad)  
  410104:	sti    
  410105:	jge    0x4100f8
  410107:	imul   eax,DWORD PTR [ebx-0x1b],0xfd4269d6
  41010e:	lods   al,BYTE PTR cs:[esi]
  410110:	pop    edx
  410111:	cmp    ch,BYTE PTR gs:[eax-0x3b]
  410115:	lock push es
  410117:	xchg   edi,eax
  410118:	into   
  410119:	repnz xor DWORD PTR [eax],edx
  41011c:	inc    eax
  41011d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41011e:	(bad)  
  41011f:	aam    0xd5
  410121:	mov    ds:0x6f3c238f,eax
  410126:	(bad)  
  410127:	rcl    ah,1
  410129:	int3   
  41012a:	aaa    
  41012b:	(bad)
  41012e:	add    BYTE PTR [eax],al
  410130:	sub    al,0xa2
  410132:	mov    eax,ds:0xbe06f305
  410137:	mov    ecx,0x402b40e8
  41013c:	repz cmp DWORD PTR [ebx],esi
  41013f:	or     al,0x1b
  410141:	push   esp
  410142:	clc    
  410143:	add    eax,0x18a485f3
  410148:	sub    al,BYTE PTR [ebp-0x20]
  41014b:	add    ecx,DWORD PTR [ecx+0x7e0a6012]
  410151:	shr    ah,0xad
  410154:	in     al,0xc9
  410156:	jge    0x410171
  410158:	daa    
  410159:	adc    DWORD PTR [eax],eax
  41015b:	sub    edi,ebp
  41015d:	test   ebx,eax
  41015f:	frstor [ebx-0x3d]
  410162:	pop    ss
  410163:	mov    ecx,0xfbf41331
  410168:	mov    al,0x39
  41016a:	mov    DWORD PTR [edi],ebp
  41016c:	sub    al,0xd3
  41016e:	mov    bh,BYTE PTR ds:0x6a0bc27c
  410174:	jecxz  0x410187
  410176:	push   ebx
  410177:	push   0x37
  410179:	dec    edx
  41017a:	push   ebp
  41017b:	sahf   
  41017c:	repz data16 add cl,ch
  410180:	lock or DWORD PTR [edi+0x6ef0b],eax
  410187:	jb     0x410133
  410189:	add    DWORD PTR [ebx+0x13aceb29],eax
  41018f:	mov    ecx,0x11f3c27f
  410194:	add    BYTE PTR [eax],al
  410196:	add    ah,ah
  410198:	cs (bad) 
  41019a:	inc    BYTE PTR [eax+0x38]
  41019d:	adc    al,0xb5
  41019f:	cli    
  4101a0:	(bad)  
  4101a1:	jmp    FWORD PTR [ecx-0x45]
  4101a4:	or     eax,0x82e1a985
  4101a9:	mov    esi,0xe806f0e9
  4101ae:	(bad)  
  4101af:	sahf   
  4101b0:	cmp    dh,bh
  4101b2:	pusha  
  4101b3:	cmp    esi,DWORD PTR [ecx]
  4101b5:	mov    WORD PTR [ebx+eiz*8],gs
  4101b8:	hlt    
  4101b9:	cmc    
  4101ba:	sbb    DWORD PTR [esi-0x4e],ebp
  4101bd:	out    dx,eax
  4101be:	ror    DWORD PTR ds:0x7fe8ffa2,0xc2
  4101c5:	sti    
  4101c6:	loop   0x410182
  4101c8:	mov    dl,0x3
  4101ca:	fidiv  DWORD PTR [ecx+0x3362732c]
  4101d0:	sub    eax,0xb4fe8e82
  4101d5:	add    al,BYTE PTR [eax]
  4101d7:	add    BYTE PTR [ecx],cl
  4101d9:	pop    edi
  4101da:	cmp    ebx,DWORD PTR [esi+edi*2+0x2c]
  4101de:	lea    eax,[edx]
  4101e0:	adc    al,0x6a
  4101e2:	adc    al,0x5d
  4101e4:	jg     0x4101d8
  4101e6:	push   ebx
  4101e7:	dec    ebp
  4101e8:	pop    ds
  4101e9:	cmp    al,0x16
  4101eb:	mov    al,BYTE PTR [ebx+eax*4]
  4101ee:	(bad)  
  4101ef:	into   
  4101f0:	(bad)  
  4101f1:	mov    esi,0x7f4ecf74
  4101f6:	ret    
  4101f7:	rol    DWORD PTR [edx],1
  4101f9:	add    BYTE PTR [eax],al
  4101fb:	add    BYTE PTR [eax],al
  4101fd:	add    cl,dh
  4101ff:	sti    
  410200:	jo     0x4101e4
  410202:	xor    DWORD PTR [ecx],ecx
  410204:	imul   esi,esi,0x2e1
  41020a:	cdq    
  41020b:	jg     0x410207
  41020d:	jne    0x41026a
  41020f:	xor    eax,edx
  410211:	test   ebp,ebx
  410213:	outs   dx,DWORD PTR ds:[esi]
  410214:	das    
  410215:	mov    edx,DWORD PTR [edi+0x56c081f8]
  41021b:	test   BYTE PTR [esi+0x4],dh
  41021e:	dec    ecx
  41021f:	xchg   edi,eax
  410220:	outs   dx,BYTE PTR ds:[esi]
  410221:	cld    
  410222:	aad    0x57
  410224:	mov    DWORD PTR [eax],ecx
  410226:	xlat   BYTE PTR ds:[ebx]
  410227:	retf   0x1272
  41022a:	adc    ecx,DWORD PTR [eax-0xa]
  41022d:	jbe    0x41027e
  41022f:	mov    ebx,DWORD PTR [ebx-0x8]
  410232:	icebp  
  410233:	fstp   TBYTE PTR [edi-0x5]
  410236:	call   0x404e:0xe9005987
  41023d:	add    eax,0x451
  410242:	and    edi,ebx
  410244:	jo     0x41021b
  410246:	xchg   ecx,eax
  410247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410248:	(bad)  [bx+di]
  41024b:	add    al,0x0
  41024d:	add    BYTE PTR [edi-0xcfe2677],cl
  410253:	sub    eax,0x8a668d02
  410258:	sub    ebx,DWORD PTR [ebp-0x62]
  41025b:	add    BYTE PTR [eax-0x7d],0xb3
  41025f:	xor    bl,BYTE PTR [ecx]
  410261:	inc    DWORD PTR [eax]
  410263:	add    BYTE PTR [eax],al
  410265:	pop    esi
  410266:	mov    dl,0x2b
  410268:	adc    eax,DWORD PTR [ebp+0x3e8c40a8]
  41026e:	fisubr WORD PTR [ebx]
  410270:	neg    DWORD PTR [edi]
  410272:	add    dh,BYTE PTR cs:[edx]
  410275:	mov    bl,0x70
  410277:	loopne 0x4102d3
  410279:	mov    edx,0x78000feb
  41027e:	push   0x3e
  410280:	mov    edi,fs
  410282:	sub    al,0xc7
  410284:	addr16 mov eax,0x1900022e
  41028a:	cs fdivr st,st(6)
  41028d:	ficomp WORD PTR [ecx+0x18]
  410290:	inc    eax
  410291:	repz sub BYTE PTR [eax+0x44],bh
  410295:	jecxz  0x410243
  410297:	inc    edi
  410298:	or     esp,DWORD PTR [ebp+esi*8+0x1c]
  41029c:	rcl    BYTE PTR [eax],0x6b
  41029f:	cmp    al,ch
  4102a1:	mov    ch,0x35
  4102a3:	add    cl,BYTE PTR [ecx+0x448b29ad]
  4102a9:	call   FWORD PTR [ebp-0x38048bc1]
  4102af:	mov    al,BYTE PTR [ebp-0x16]
  4102b2:	lods   al,BYTE PTR ds:[esi]
  4102b3:	dec    eax
  4102b4:	or     bl,BYTE PTR [ebp+0x5301550]
  4102ba:	out    dx,al
  4102bb:	add    eax,DWORD PTR [ebx-0x17cced1]
  4102c1:	repnz out dx,eax
  4102c3:	(bad)  
  4102c4:	out    0x7e,eax
  4102c6:	inc    ebp
  4102c7:	aas    
  4102c8:	inc    BYTE PTR [eax]
  4102ca:	add    BYTE PTR [eax],al
  4102cc:	js     0x4102c0
  4102ce:	aas    
  4102cf:	push   esi
  4102d0:	popf   
  4102d1:	push   es
  4102d2:	xchg   ecx,eax
  4102d3:	(bad)  
  4102d5:	ss popf 
  4102d7:	test   ch,dh
  4102d9:	or     ebx,DWORD PTR [edi]
  4102db:	jmp    0x410338
  4102dd:	ss mov cl,0x2
  4102e0:	repz push es
  4102e2:	adc    ebx,DWORD PTR [eax]
  4102e4:	fdivr  QWORD PTR [esp+esi*2-0x43018f72]
  4102eb:	inc    ecx
  4102ec:	int    0x36
  4102ee:	sbb    BYTE PTR [ecx-0x21],al
  4102f1:	repnz inc bl
  4102f4:	mov    esp,0x6e0f2489
  4102f9:	inc    edi
  4102fa:	in     eax,0x96
  4102fc:	mov    cl,0xa1
  4102fe:	loop   0x4102e0
  410300:	and    al,0x32
  410302:	out    0xb6,eax
  410304:	call   0x6980b63e
  410309:	dec    esi
  41030a:	inc    eax
  41030b:	in     al,dx
  41030c:	adc    BYTE PTR [edi],al
  41030e:	jmp    0x9b779fa0
  410313:	aas    
  410314:	xchg   esp,eax
  410315:	mov    ds:0x84754053,al
  41031a:	fwait
  41031b:	xor    edx,DWORD PTR [esi+eax*8-0x54]
  41031f:	add    esi,ebx
  410321:	sub    BYTE PTR [ecx],0x2a
  410324:	ret    0xfd35
  410327:	aas    
  410328:	mov    edi,0x58840481
  41032d:	pop    ss
  41032e:	call   0x839d:0xd9
  410335:	sub    eax,DWORD PTR [eax-0x54]
  410338:	push   ds
  410339:	mov    al,ds:0x613634a3
  41033e:	cmp    al,0x7b
  410340:	mov    ah,0xd4
  410342:	mov    DWORD PTR ds:0x5cf1ecbc,esp
  410348:	and    dl,BYTE PTR [edx-0x75]
  41034b:	lahf   
  41034c:	xor    bh,bh
  41034e:	popa   
  41034f:	cmp    al,BYTE PTR [esi]
  410351:	push   esi
  410352:	push   ss
  410353:	xlat   BYTE PTR ds:[ebx]
  410354:	push   ecx
  410355:	cld    
  410356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410357:	mov    esp,0x42e5fd88
  41035c:	or     DWORD PTR [edx-0x13],ebp
  41035f:	into   
  410360:	dec    ebx
  410361:	inc    esp
  410362:	cli    
  410363:	lock mov esi,ebp
  410366:	std    
  410367:	mov    ah,0x82
  410369:	inc    esi
  41036a:	repnz addr16 retf 0x60f7
  41036f:	mov    dh,BYTE PTR [ecx]
  410371:	push   cs
  410372:	lods   al,BYTE PTR ss:[esi]
  410374:	dec    BYTE PTR [edx-0x129134c]
  41037a:	aam    0xf8
  41037c:	lahf   
  41037d:	inc    edx
  41037f:	neg    BYTE PTR [esi]
  410381:	sub    eax,0x8b06f2e2
  410386:	cmp    DWORD PTR [edx+0x3b],ebp
  410389:	jae    0x410368
  41038b:	imul   ecx,edx,0x808f6207
  410391:	fld    QWORD PTR [ecx-0x35]
  410394:	and    edi,edi
  410396:	call   0x7441039b
  41039b:	jne    0x410410
  41039d:	in     eax,0x2e
  41039f:	retf   
  4103a0:	adc    ch,al
  4103a2:	sbb    BYTE PTR [ebx+ebp*4+0xe],cl
  4103a6:	and    al,0x81
  4103a8:	jl     0x4103a7
  4103aa:	sbb    eax,0xab74fbc3
  4103af:	fsubr  st(7),st
  4103b1:	pop    ds
  4103b2:	retf   
  4103b3:	xor    al,0xfe
  4103b5:	arpl   WORD PTR [edx],di
  4103b7:	sbb    BYTE PTR [edi+0x47],bl
  4103ba:	sbb    BYTE PTR [esi],bh
  4103bc:	shr    ebp,0xf0
  4103bf:	fisttp DWORD PTR [edx+0x52d647c5]
  4103c5:	aaa    
  4103c6:	cmp    al,0x80
  4103c8:	jns    0x4103ca
  4103ca:	cmp    al,BYTE PTR [eax+0x1074f7f5]
  4103d0:	test   BYTE PTR [ebp-0xfdce328],0x9a
  4103d7:	jae    0x4103da
  4103d9:	xor    al,BYTE PTR [ecx-0x306bf241]
  4103df:	(bad)  
  4103e0:	out    0xef,al
  4103e2:	stos   BYTE PTR es:[edi],al
  4103e3:	or     eax,DWORD PTR [eax]
  4103e5:	pop    cx
  4103e7:	lock cs jae 0x4103b9
  4103eb:	ss mov esi,0xfd7dffeb
  4103f1:	jne    0x4103d1
  4103f3:	cmp    ecx,ebx
  4103f5:	jmp    0x4103d0
  4103f7:	xchg   edi,eax
  4103f8:	pop    ebp
  4103f9:	sub    al,0x41
  4103fb:	mov    esi,0xd3e6
  410400:	add    dl,bh
  410402:	or     al,BYTE PTR [eax]
  410404:	jge    0xcdcc55fa
  41040a:	fbld   TBYTE PTR [eax-0x3b]
  41040d:	xor    eax,0x54c083f5
  410412:	sar    ebp,1
  410414:	jne    0x4103dc
  410416:	pop    esp
  410417:	push   ecx
  410418:	call   0x3ecbcd
  41041d:	or     al,BYTE PTR [edi-0x6]
  410420:	add    DWORD PTR [edi+0x26],ebx
  410423:	mov    BYTE PTR [esi+0x5b],al
  410426:	mov    WORD PTR [esi-0x390d9e8c],?
  41042c:	push   edi
  41042d:	gs mov edx,0x977a53be
  410433:	inc    esp
  410434:	add    al,0x6a
  410436:	add    eax,0x585946b6
  41043b:	mov    DWORD PTR [ebp+0x42],eax
  41043e:	repz cs call 0x3fe60b
  410445:	repz lea eax,[edx]
  410448:	pop    edi
  410449:	(bad)  
  41044c:	shl    edi,0x1d
  41044f:	aad    0x8a
  410451:	pop    es
  410452:	lahf   
  410453:	das    
  410454:	stos   DWORD PTR es:[edi],eax
  410455:	lock sbb eax,0x1c9d5302
  41045b:	pop    DWORD PTR [ebx+eax*1-0x12]
  41045f:	sub    ebx,DWORD PTR [ecx-0x76fde26f]
  410465:	add    BYTE PTR [eax],al
  410467:	add    BYTE PTR [esi],dh
  410469:	mov    al,BYTE PTR [esi-0xfd2a141]
  41046f:	mov    edi,0x64bca
  410474:	repz mov eax,0xb376efb6
  41047a:	mov    bh,0xd
  41047c:	js     0x4104e9
  41047e:	sub    ebx,esp
  410480:	sub    BYTE PTR [esp+edi*1-0x7935d178],0xbf
  410488:	sub    BYTE PTR es:[ebx],bh
  41048b:	je     0x410424
  41048d:	lds    eax,FWORD PTR [edx]
  41048f:	mov    ah,0x9c
  410491:	int3   
  410492:	sub    cl,bl
  410494:	jo     0x4104e0
  410496:	pop    esi
  410497:	dec    DWORD PTR [ebx+edi*2]
  41049a:	adc    al,BYTE PTR [eax]
  41049c:	call   FWORD PTR [edi+edi*2-0x2f6c0d03]
  4104a3:	mov    dh,dh
  4104a5:	xor    eax,0x710b5e8d
  4104aa:	cmp    edx,DWORD PTR [edi+edx*2]
  4104ad:	das    
  4104ae:	ret    0x71ff
  4104b1:	cmp    BYTE PTR [edx],0xff
  4104b4:	outs   dx,DWORD PTR ds:[esi]
  4104b5:	cmp    esi,DWORD PTR [esi+0x2eb27832]
  4104bb:	sub    BYTE PTR [ecx+ebp*1],0x7f
  4104bf:	(bad)
  4104c2:	push   ebx
  4104c3:	sbb    BYTE PTR [ebp-0x10e92225],bl
  4104c9:	sbb    al,0x29
  4104cb:	add    al,0x0
  4104cd:	add    BYTE PTR [eax],al
  4104cf:	jo     0x41051b
  4104d1:	fadd   QWORD PTR [esi+0x3cd9ba5c]
  4104d7:	scas   eax,DWORD PTR es:[edi]
  4104d8:	cs jno 0x4104a1
  4104db:	add    al,0x85
  4104dd:	scas   al,BYTE PTR es:[edi]
  4104de:	pop    eax
  4104df:	repz push es
  4104e1:	jmp    0x1a77bcde
  4104e6:	pop    esi
  4104e7:	or     DWORD PTR [edx+esi*2],ecx
  4104ea:	(bad)  
  4104eb:	in     al,0x80
  4104ed:	sub    esp,DWORD PTR [eax+0x41]
  4104f0:	xor    dh,bl
  4104f2:	xor    eax,DWORD PTR [edx]
  4104f4:	(bad)  
  4104f5:	call   0xb9786482
  4104fa:	pop    eax
  4104fb:	and    DWORD PTR [edi+0x6f303a4],ebx
  410501:	sbb    cl,BYTE PTR [edi-0x6caf80c9]
  410507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410508:	or     cl,ch
  41050a:	lock ins BYTE PTR es:[edi],dx
  41050c:	push   es
  41050d:	pop    edi
  41050e:	sti    
  41050f:	das    
  410510:	pop    ss
  410511:	daa    
  410512:	(bad)  
  410513:	imul   ecx,DWORD PTR [ebx],0xfffffff6
  410516:	xchg   esi,eax
  410517:	push   esp
  410518:	jg     0x4104b5
  41051a:	cmp    al,0x7b
  41051c:	mov    esp,0x27278a18
  410521:	test   al,0xc
  410523:	dec    esp
  410524:	dec    ecx
  410525:	outs   dx,DWORD PTR ds:[esi]
  410526:	(bad)  
  410527:	pushf  
  410528:	out    dx,al
  410529:	sub    DWORD PTR [esi*2-0xcfc1645],ecx
  410530:	jge    0x4104d5
  410532:	pop    edi
  410533:	add    BYTE PTR [eax],al
  410535:	add    cl,dh
  410537:	inc    ebp
  410538:	mov    ecx,0xf8bc5d51
  41053d:	out    dx,eax
  41053e:	mov    WORD PTR [ebp+0x7f8eeeff],ds
  410544:	inc    esp
  410545:	xor    eax,0x9f7c8319
  41054a:	cld    
  41054b:	pop    esp
  41054c:	gs xchg edx,eax
  41054e:	and    al,0x31
  410550:	mov    bl,bl
  410552:	push   esi
  410553:	cmp    al,0xda
  410555:	call   0x3c440c4a
  41055a:	retf   
  41055b:	jle    0x4105b1
  41055d:	mov    ch,0xf8
  41055f:	jns    0x4105ae
  410561:	push   cs
  410562:	jbe    0x41051f
  410564:	rol    DWORD PTR [edi-0x4],cl
  410567:	inc    eax
  410568:	push   cs
  410569:	ins    BYTE PTR es:[edi],dx
  41056a:	xchg   ecx,eax
  41056b:	xor    esi,edi
  41056d:	jmp    0xd0bef404
  410572:	stc    
  410573:	mov    ebx,DWORD PTR [ebx-0x74f90f17]
  410579:	sub    al,0x13
  41057b:	mov    dl,0x3b
  41057d:	f2xm1  
  41057f:	add    DWORD PTR [ebp+0x6ed06],eax
  410585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410586:	repz push ss
  410588:	add    DWORD PTR [edx+esi*4+0x1],esi
  41058c:	push   eax
  41058d:	jo     0x4105f9
  41058f:	xor    eax,0x314fdde7
  410594:	(bad)  
  410595:	bound  edi,QWORD PTR [edi]
  410597:	mov    ebx,edx
  410599:	mov    ebp,0x4c000000
  41059e:	out    dx,al
  41059f:	jl     0x41057a
  4105a1:	inc    edx
  4105a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a3:	sub    BYTE PTR [edi],0xf8
  4105a6:	jg     0x41061c
  4105a8:	inc    ecx
  4105a9:	push   0xffffffb4
  4105ab:	push   cs
  4105ac:	xchg   ebx,eax
  4105ad:	in     al,0x31
  4105af:	je     0x4105c2
  4105b1:	inc    ecx
  4105b2:	xor    BYTE PTR [edx*8+0x69ffc702],dl
  4105b9:	mov    bl,0xfd
  4105bb:	test   BYTE PTR [eax],al
  4105bd:	or     dh,BYTE PTR [edi+0xc]
  4105c0:	inc    edi
  4105c1:	fcmovnb st,st(4)
  4105c3:	fld    DWORD PTR [ecx]
  4105c5:	pop    edx
  4105c6:	add    eax,0x7b1a7d3b
  4105cb:	fucomip st,st(3)
  4105cd:	aad    0x63
  4105cf:	std    
  4105d0:	fistp  DWORD PTR [ebx]
  4105d2:	add    eax,0x30410300
  4105d7:	stc    
  4105d8:	jb     0x4105fd
  4105da:	add    BYTE PTR [ebx+0x10],0xc3
  4105de:	retf   0x1d9
  4105e1:	sbb    al,BYTE PTR ds:0x7c8fc303
  4105e7:	fld    DWORD PTR [ecx]
  4105e9:	or     al,BYTE PTR ds:0xb85de857
  4105ef:	std    
  4105f0:	inc    DWORD PTR [ecx+0x56c0320a]
  4105f6:	les    esi,FWORD PTR [edx+0xc]
  4105f9:	ins    DWORD PTR es:[edi],dx
  4105fa:	aas    
  4105fb:	push   cs
  4105fc:	mov    eax,DWORD PTR [edi]
  4105fe:	sbb    edx,DWORD PTR [ebx-0x18]
  410601:	add    BYTE PTR [eax],al
  410603:	add    dl,ch
  410605:	imul   edi,esi,0x92e2e9ff
  41060b:	mov    dl,0x4d
  41060d:	in     eax,dx
  41060e:	mov    esi,DWORD PTR [ebp+0x16]
  410611:	fdiv   QWORD PTR [esi+0x59]
  410614:	call   0x4:0x9be0e904
  41061b:	xor    ebx,eax
  41061d:	add    cl,0xf7
  410620:	push   edi
  410621:	aam    0x39
  410623:	push   ebp
  410624:	retf   0x2c78
  410627:	cmp    WORD PTR [ebp+0xad1840d],0x0
  410630:	pusha  
  410631:	or     bl,BYTE PTR [eax+0x66]
  410634:	jecxz  0x41067c
  410636:	mov    dl,0xf
  410638:	repz iret 
  41063a:	shl    BYTE PTR [edi],0xd5
  41063d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41063e:	enter  0xcd26,0xde
  410642:	and    eax,DWORD PTR [edi]
  410644:	aad    0x34
  410646:	inc    ebx
  410647:	gs jp  0x4106ad
  41064a:	jo     0x4105d8
  41064c:	mov    ch,0x3c
  41064e:	lods   al,BYTE PTR ds:[esi]
  41064f:	add    esp,DWORD PTR [ebx+0x18b7beba]
  410655:	add    esp,DWORD PTR [edx+0x916a538]
  41065b:	test   BYTE PTR [edi+0x1f],bh
  41065e:	add    al,BYTE PTR [eax]
  410660:	mov    DWORD PTR [eax-0x26],edx
  410663:	gs jp  0x410651
  410666:	outs   dx,DWORD PTR ds:[esi]
  410667:	push   cs
  410668:	add    BYTE PTR [eax],al
  41066a:	add    BYTE PTR ds:0x6865fde0,bh
  410670:	adc    bl,bh
  410672:	xor    bh,BYTE PTR gs:[edi+0xb]
  410676:	data16 clc 
  410678:	pop    esi
  410679:	mov    eax,ds:0x86d02e88
  41067e:	inc    ebp
  41067f:	or     al,BYTE PTR [esp+edx*1]
  410682:	push   eax
  410683:	data16 loop 0x4106fd
  410686:	dec    edi
  410687:	int3   
  410688:	pop    edx
  410689:	repnz adc eax,0xb7071e33
  41068f:	ss cli 
  410691:	test   bl,al
  410693:	out    0x53,eax
  410695:	add    eax,ebp
  410697:	popa   
  410698:	je     0x41069c
  41069a:	add    ah,dh
  41069c:	pop    DWORD PTR [ebx+0x4f]
  41069f:	outs   dx,BYTE PTR ds:[esi]
  4106a0:	stos   BYTE PTR es:[edi],al
  4106a1:	(bad)  
  4106a3:	xchg   esp,eax
  4106a4:	enter  0x492b,0xc7
  4106a8:	push   ds
  4106a9:	add    cl,BYTE PTR [ebx+0x2f37262e]
  4106af:	outs   dx,BYTE PTR ds:[esi]
  4106b0:	pop    DWORD PTR [edi]
  4106b2:	push   0xfffffff0
  4106b4:	push   es
  4106b5:	ret    0xaf86
  4106b8:	into   
  4106b9:	sbb    al,0x39
  4106bb:	gs jge 0x410661
  4106be:	sub    edx,DWORD PTR [edi+edx*4-0x2c]
  4106c2:	add    dh,bl
  4106c4:	das    
  4106c5:	jnp    0x4106d6
  4106c7:	jle    0x410692
  4106c9:	xor    al,0xac
  4106cb:	pop    esp
  4106cc:	in     al,dx
  4106cd:	call   0x4106d5
  4106d2:	push   0xa8fe003f
  4106d7:	push   es
  4106d8:	jmp    0x20fb735c
  4106dd:	cmp    DWORD PTR [edi-0x580c69e6],ebx
  4106e3:	push   es
  4106e4:	jmp    0x212391b9
  4106e9:	xchg   DWORD PTR [edi-0x63799482],esp
  4106ef:	xor    dh,BYTE PTR [ebp+0x1daa1438]
  4106f5:	add    al,0xf3
  4106f7:	mov    ch,BYTE PTR [eax+0x132e0aaf]
  4106fd:	adc    BYTE PTR [eax-0x44],bh
  410700:	in     al,0x8c
  410702:	repz aad 0x5b
  410705:	mov    ?,WORD PTR [ebx+ebp*1]
  410708:	test   DWORD PTR [eax],edi
  41070a:	and    ch,BYTE PTR [esi]
  41070c:	fdivr  DWORD PTR [edi-0x7c]
  41070f:	(bad)  
  410710:	imul   eax,DWORD PTR [edx+esi*8],0x6
  410714:	jmp    0xe97446a5
  410719:	scas   al,BYTE PTR es:[edi]
  41071a:	nop
  41071b:	xchg   DWORD PTR [esi],ebx
  41071d:	add    al,0xf4
  41071f:	cmp    DWORD PTR [ebx+eax*1],0xfffffff3
  410723:	push   es
  410724:	inc    ecx
  410725:	jmp    0x802a0fae
  41072a:	dec    esp
  41072b:	(bad)  
  41072c:	fs inc eax
  41072e:	test   BYTE PTR [esi],ch
  410730:	(bad)  
  410731:	call   0xfb38caab
  410736:	add    BYTE PTR [eax],al
  410738:	add    BYTE PTR [ebx-0xe103a43],bh
  41073e:	jg     0x4107bc
  410740:	adc    eax,0xe95e5418
  410745:	lock adc edi,0x70b9bbd2
  41074c:	rol    BYTE PTR [ebp+0x77877536],0x39
  410753:	imul   ebx,ebp,0x5ce7b2fb
  410759:	xor    bh,ch
  41075b:	dec    edi
  41075c:	out    0x2,al
  41075e:	jmp    0x410775
  410760:	sub    edi,ebp
  410762:	mov    ebx,eax
  410764:	in     eax,0x73
  410766:	outs   dx,BYTE PTR ds:[esi]
  410767:	jae    0x410748
  410769:	push   ebp
  41076a:	xchg   ebp,eax
  41076c:	mov    ds:0x20006f6,al
  410771:	dec    edx
  410772:	ss jno 0x41070c
  410775:	enter  0xfded,0x27
  410779:	out    0x86,eax
  41077b:	jge    0x41076e
  41077d:	icebp  
  41077e:	mov    ah,0x2d
  410780:	adc    BYTE PTR [ecx+edx*2],bl
  410783:	add    cl,ch
  410785:	lock or ebx,edi
  410788:	rcr    BYTE PTR [ecx],cl
  41078a:	mov    eax,0x35b27218
  41078f:	push   0x728a9
  410794:	jmp    0x5ecd518a
  410799:	sbb    BYTE PTR [edi],al
  41079b:	add    cl,ch
  41079d:	add    BYTE PTR [eax],al
  41079f:	add    BYTE PTR [ebp-0x2364b4db],bh
  4107a5:	sub    al,0xea
  4107a7:	jmp    0x41074b
  4107a9:	ins    DWORD PTR es:[edi],dx
  4107aa:	sub    DWORD PTR [ecx],0x63
  4107ad:	or     bh,bh
  4107af:	add    BYTE PTR [edi-0xf],al
  4107b2:	mov    DWORD PTR [ebp+0x32],eax
  4107b5:	pop    edx
  4107b6:	out    0xad,al
  4107b8:	or     DWORD PTR gs:[eax],eax
  4107bb:	push   ebx
  4107bc:	xor    dh,ah
  4107be:	scas   al,BYTE PTR es:[edi]
  4107bf:	call   DWORD PTR ds:0x2f47380
  4107c5:	fcom   DWORD PTR [ebp+0x0]
  4107c8:	dec    edx
  4107c9:	xor    BYTE PTR [ebx+0x8],0xb7
  4107cd:	je     0x4107e5
  4107cf:	push   edi
  4107d0:	cmc    
  4107d1:	pop    ss
  4107d2:	in     al,dx
  4107d3:	adc    bl,BYTE PTR [edx+0x45146a09]
  4107d9:	jbe    0x4107c1
  4107db:	or     DWORD PTR [edi+eax*1],0x56
  4107df:	jmp    FWORD PTR [edi]
  4107e1:	xor    eax,0x881a4014
  4107e6:	ret    0x8f0c
  4107e9:	leave  
  4107ea:	jae    0x4107f9
  4107ec:	mov    al,0x16
  4107ee:	push   eax
  4107ef:	push   esi
  4107f0:	xor    eax,0xda163416
  4107f5:	add    al,BYTE PTR [ebx-0x2c3e93c]
  4107fb:	adc    eax,0x40173a
  410800:	addr16 mov bh,0x56
  410803:	cld    
  410804:	add    BYTE PTR [eax],al
  410806:	add    BYTE PTR [ebp-0x46bc190b],al
  41080c:	add    eax,DWORD PTR [eax]
  41080e:	mov    eax,DWORD PTR [edi]
  410810:	jecxz  0x410853
  410812:	mov    DWORD PTR [edi],edx
  410814:	jecxz  0x41084f
  410816:	pop    ebp
  410817:	xchg   edx,eax
  410818:	add    eax,0xf5473082
  41081d:	std    
  41081e:	jmp    0x411048
  410823:	daa    
  410824:	inc    edi
  410825:	push   cs
  410826:	xor    esi,DWORD PTR [ecx]
  410828:	pop    eax
  410829:	xchg   DWORD PTR [ebp-0xd],ebx
  41082c:	and    DWORD PTR [edx],ebp
  41082e:	icebp  
  41082f:	xor    eax,0x3689021e
  410834:	dec    edx
  410835:	stc    
  410836:	ret    0x76ff
  410839:	sti    
  41083a:	pop    esp
  41083b:	jecxz  0x4108a8
  41083d:	test   BYTE PTR [ebp+esi*8-0x261076b4],0x29
  410845:	xchg   DWORD PTR [ebp-0xc],eax
  410848:	je     0x41081c
  41084a:	inc    BYTE PTR [esi]
  41084c:	push   edx
  41084d:	or     al,0x40
  41084f:	repz mov al,ds:0xde760b3e
  410855:	scas   al,BYTE PTR es:[edi]
  410856:	or     eax,0xda3c9eb0
  41085b:	repnz sbb eax,0x4d963b02
  410861:	mov    al,0xdf
  410863:	sbb    BYTE PTR [ebx],ch
  410865:	cmp    BYTE PTR [ebp-0x5],0x1d
  410869:	scas   al,BYTE PTR es:[edi]
  41086a:	push   cs
  41086b:	add    BYTE PTR [eax],al
  41086d:	add    BYTE PTR [ebx+ecx*8],bl
  410870:	jnp    0x457d3624
  410876:	sti    
  410877:	sbb    eax,0x1da5f12a
  41087c:	add    bh,bh
  41087e:	xchg   BYTE PTR [ecx+0x2a],cl
  410881:	xor    eax,DWORD PTR [ebx+0x5d]
  410884:	xor    al,0x8c
  410886:	data16 xor ch,BYTE PTR [edx]
  410889:	pop    ss
  41088a:	cmp    al,0x1e
  41088c:	add    cl,BYTE PTR [ebx+0x7685265e]
  410892:	sti    
  410893:	repz xor al,0x14
  410896:	fisttp WORD PTR [edi-0x3e]
  410899:	(bad)  
  41089a:	jns    0x41087e
  41089c:	dec    edi
  41089d:	imul   esp,edi,0x230e43a0
  4108a3:	mov    eax,ds:0x744033c
  4108a8:	pavgw  xmm2,XMMWORD PTR [ecx+ebp*4]
  4108ad:	add    esi,DWORD PTR [eax+0x42]
  4108b0:	in     al,0xcd
  4108b2:	xchg   ebp,eax
  4108b3:	adc    DWORD PTR [ecx+0x12],ebx
  4108b6:	xor    eax,DWORD PTR [edi]
  4108b8:	je     0x410929
  4108ba:	sbb    al,0x2b
  4108bc:	cmp    eax,0x35c1b635
  4108c1:	add    ecx,DWORD PTR [ebx-0xcfd0585]
  4108c7:	sub    ebx,DWORD PTR [ebx+0x4d1f4c27]
  4108cd:	xor    eax,0x1f9b2b5d
  4108d2:	add    BYTE PTR [eax],al
  4108d4:	add    BYTE PTR [edi+eiz*1+0x3d],cl
  4108d8:	xor    eax,0x34ab804d
  4108dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108de:	int3   
  4108df:	mov    eax,ds:0xe916324a
  4108e4:	into   
  4108e5:	imul   ebx,DWORD PTR [edx],0x8b02867
  4108eb:	jmp    0x3615c8f3
  4108f0:	xchg   DWORD PTR [edi+0x46],esp
  4108f3:	shl    DWORD PTR [edx*1+0xc2e5c1e],cl
  4108fa:	sub    edi,ecx
  4108fc:	pop    eax
  4108fd:	ja     0x4108c0
  4108ff:	js     0x4108d4
  410901:	imul   ecx,ecx,0xffffffb8
  410904:	mov    dl,BYTE PTR [edi-0x1f29a0e6]
  41090a:	add    BYTE PTR [ebx+0x3c],0x7b
  41090e:	int3   
  41090f:	pushf  
  410910:	sub    edi,DWORD PTR [eax-0x33]
  410913:	call   0x2c31561b
  410918:	je     0x41095a
  41091a:	div    DWORD PTR [ebx-0x42]
  41091d:	xchg   esp,eax
  41091e:	xlat   BYTE PTR ds:[ebx]
  41091f:	imul   edi,DWORD PTR [esi-0x7f002840],0xffffffcc
  410926:	std    
  410927:	add    cl,ch
  410929:	sub    al,0x6a
  41092b:	jae    0x410933
  41092d:	fidiv  WORD PTR [edx+0x364d5efb]
  410933:	out    0x61,eax
  410935:	or     DWORD PTR [edx],ebp
  410937:	dec    BYTE PTR [esi+0x0]
  41093a:	add    BYTE PTR [eax],al
  41093c:	pop    ebp
  41093d:	mov    BYTE PTR ss:[eax+eax*8-0x387185df],ch
  410945:	sub    BYTE PTR [eax+0x5c7ec494],cl
  41094b:	xor    DWORD PTR [ecx-0x35],edi
  41094e:	sti    
  41094f:	je     0x410936
  410951:	inc    ebp
  410952:	cld    
  410953:	push   ds
  410954:	daa    
  410955:	mov    edx,0xba04ac8c
  41095a:	out    0x10,eax
  41095c:	cli    
  41095d:	pop    es
  41095e:	add    BYTE PTR [ebp-0x50],ch
  410961:	mov    ch,0x1e
  410963:	dec    BYTE PTR [esi+0x47cfe2e]
  410969:	and    dl,BYTE PTR [eax+eax*2-0x10]
  41096d:	push   es
  41096e:	call   FWORD PTR [ebx+ebp*8+0x7e]
  410972:	inc    esp
  410973:	int    0xff
  410975:	shr    DWORD PTR [esi+0x5c7ee0d6],0xd5
  41097c:	mov    cs,edx
  41097e:	div    DWORD PTR [eax+0x22]
  410981:	cs (bad) 
  410983:	xor    al,0xbb
  410985:	and    DWORD PTR [esi],esi
  410987:	xchg   al,al
  410989:	sub    BYTE PTR [ecx-0x28],ch
  41098c:	jae    0x410938
  41098e:	fild   DWORD PTR [ecx+0x7]
  410991:	fiadd  DWORD PTR ds:0x4c7df0e8
  410997:	test   esp,eax
  410999:	cmp    al,0xb7
  41099b:	and    eax,0xffffe98a
  4109a0:	add    BYTE PTR [eax],al
  4109a2:	add    BYTE PTR [ebp-0x20c639bf],bh
  4109a8:	repnz dec edi
  4109aa:	sysret 
  4109ac:	inc    eax
  4109ad:	out    dx,al
  4109ae:	push   eax
  4109af:	sbb    eax,0xdfe3ab0
  4109b4:	test   BYTE PTR [ecx+0x43865ac7],0xe8
  4109bb:	pop    ecx
  4109bc:	push   ebp
  4109bd:	out    0xbb,al
  4109bf:	xor    dh,dh
  4109c1:	std    
  4109c2:	adc    esi,0xfffffffa
  4109c5:	(bad)  
  4109c6:	jne    0x410982
  4109c8:	test   eax,0xa4b4e8ee
  4109cd:	std    
  4109ce:	call   FWORD PTR ds:0xfce8ea70
  4109d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109d5:	std    
  4109d6:	inc    DWORD PTR ds:0xf5f619d5
  4109dc:	int3   
  4109dd:	and    DWORD PTR [ebp-0xe],esi
  4109e0:	cwde   
  4109e1:	in     al,dx
  4109e2:	add    DWORD PTR [edx+0x5],ebx
  4109e5:	mov    eax,esi
  4109e7:	iret   
  4109e8:	xchg   DWORD PTR [esi-0x790bc203],edi
  4109ee:	sbb    DWORD PTR [ebx+0x6b],ebx
  4109f1:	jae    0x4109ed
  4109f3:	lods   eax,DWORD PTR ds:[esi]
  4109f4:	push   esp
  4109f5:	pop    ecx
  4109f6:	leave  
  4109f7:	dec    ecx
  4109f8:	dec    esi
  4109f9:	mov    esp,ebp
  4109fb:	mov    ecx,esp
  4109fd:	test   BYTE PTR [ecx-0x16eb2],0x1a
  410a04:	push   eax
  410a05:	mov    ecx,ebx
  410a07:	add    BYTE PTR [eax],al
  410a09:	add    BYTE PTR [ecx-0x2aa9fdb0],al
  410a0f:	jg     0x4109e1
  410a11:	je     0x4109da
  410a13:	cmc    
  410a14:	jae    0x410a26
  410a16:	popa   
  410a17:	inc    edi
  410a18:	push   es
  410a19:	inc    DWORD PTR [edi]
  410a1b:	pop    es
  410a1c:	push   0x5
  410a1e:	repz cmc 
  410a20:	sbb    edx,DWORD PTR [edi+edi*1+0x1e]
  410a24:	add    al,BYTE PTR [ebx+esi*4-0x1c9657d6]
  410a2b:	call   0x971c:0x15df23ae
  410a32:	neg    BYTE PTR [esi]
  410a34:	add    bh,bh
  410a36:	and    BYTE PTR [esi],dh
  410a38:	jg     0x410aad
  410a3a:	xlat   BYTE PTR ds:[ebx]
  410a3b:	sub    DWORD PTR [ecx],esi
  410a3d:	jb     0x410a2e
  410a3f:	(bad)
  410a42:	mov    WORD PTR [ecx-0x65853983],?
  410a48:	out    0x93,al
  410a4a:	repz sbb eax,0xf055e802
  410a50:	xor    esi,edi
  410a52:	js     0x410a42
  410a54:	xchg   ebp,esi
  410a56:	fild   QWORD PTR [ecx]
  410a58:	fmul   DWORD PTR [edx+0x437f6e34]
  410a5e:	(bad)  
  410a60:	shl    bh,cl
  410a62:	sub    edi,esp
  410a64:	xor    esi,edi
  410a66:	popf   
  410a67:	adc    eax,0x293cadd0
  410a6c:	jle    0x410ab1
  410a6e:	add    BYTE PTR [eax],al
  410a70:	add    BYTE PTR [edi],cl
  410a72:	push   esi
  410a73:	sar    dh,cl
  410a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a76:	dec    ebp
  410a77:	xor    DWORD PTR [edi+esi*8+0x20],esi
  410a7b:	mov    dh,0x7
  410a7d:	sbb    al,0xcd
  410a7f:	sti    
  410a80:	out    0xf5,eax
  410a82:	in     eax,dx
  410a83:	add    eax,DWORD PTR [eax]
  410a85:	jle    0x410a59
  410a87:	out    0x17,eax
  410a89:	jns    0x410af1
  410a8b:	sbb    ecx,DWORD PTR [edx-0x76cf96d6]
  410a91:	xor    BYTE PTR [ecx],dl
  410a93:	rcr    BYTE PTR [edx+0x78],cl
  410a96:	inc    edx
  410a97:	into   
  410a98:	shl    edi,0x6
  410a9b:	jmp    0x695b7476
  410aa0:	and    al,bh
  410aa2:	sar    BYTE PTR ds:0xec9cdc7d,1
  410aa8:	jle    0x410ad9
  410aaa:	and    ebx,DWORD PTR [eax]
  410aac:	fimul  DWORD PTR [edx+0x28]
  410aaf:	mov    ecx,0x511b530
  410ab4:	push   ss
  410ab5:	xor    eax,DWORD PTR [edi]
  410ab7:	fs inc esp
  410ab9:	and    bh,ah
  410abb:	scas   eax,DWORD PTR es:[di]
  410abd:	mov    al,ds:0xf303f906
  410ac2:	mov    cl,0xfd
  410ac4:	cmp    BYTE PTR [edi],dh
  410ac6:	das    
  410ac7:	out    0x2,eax
  410ac9:	repz push es
  410acb:	mov    esp,0x44b1c801
  410ad0:	jge    0x410b01
  410ad2:	aaa    
  410ad3:	icebp  
  410ad4:	dec    ecx
  410ad5:	add    BYTE PTR [eax],al
  410ad7:	add    dh,ah
  410ad9:	add    al,BYTE PTR [edx]
  410adb:	dec    edx
  410adc:	jns    0x410b0c
  410ade:	jno    0x410b29
  410ae0:	mov    ebp,0xbf452fc8
  410ae5:	jnp    0x410aeb
  410ae7:	test   DWORD PTR [eax-0x26],ebx
  410aea:	mov    dh,0xf4
  410aec:	ds jnp 0x410b18
  410aef:	jnp    0x410ab8
  410af1:	adc    BYTE PTR cs:[ebp+esi*1+0x27],bl
  410af6:	cmc    
  410af7:	test   BYTE PTR [eax+ecx*1],ah
  410afa:	fiadd  WORD PTR [ebp+0x3e9061e]
  410b00:	outs   dx,BYTE PTR ds:[esi]
  410b01:	rcr    esp,0xd3
  410b04:	mov    al,dh
  410b06:	inc    edx
  410b07:	adc    ah,BYTE PTR [eax-0x20cf3264]
  410b0d:	mov    ds:0x81fcc3da,al
  410b12:	test   al,0x0
  410b14:	outs   dx,DWORD PTR ds:[esi]
  410b15:	dec    ecx
  410b16:	(bad)  
  410b17:	call   0xaab120c
  410b1c:	fs retf 
  410b1e:	rcl    DWORD PTR [ebx],cl
  410b20:	xchg   esi,edx
  410b22:	(bad)  
  410b23:	hlt    
  410b24:	fdiv   st(4),st
  410b26:	aas    
  410b27:	jmp    0x374c55a3
  410b2c:	gs add al,0x8d
  410b2f:	sub    al,0x1b
  410b31:	(bad)  
  410b32:	push   edx
  410b33:	adc    eax,DWORD PTR [edx]
  410b35:	and    eax,0xc7050114
  410b3a:	jmp    DWORD PTR [ebx+0x0]
  410b3d:	add    BYTE PTR [eax],al
  410b3f:	xor    BYTE PTR ds:0x6f08b84,dl
  410b45:	add    BYTE PTR [esi-0x402c5ceb],dh
  410b4b:	cmovge ecx,DWORD PTR [edi+0x42]
  410b4f:	or     BYTE PTR [ecx],0xf0
  410b52:	push   0xffffffc2
  410b54:	add    ecx,DWORD PTR [edi]
  410b56:	data16 hlt 
  410b58:	and    eax,0x14eee9fe
  410b5d:	xor    BYTE PTR [eax],0x9
  410b60:	call   0xec74:0x2e096904
  410b67:	outs   dx,DWORD PTR ds:[esi]
  410b68:	push   ds
  410b69:	add    al,0x9c
  410b6b:	dec    eax
  410b6c:	xchg   ecx,eax
  410b6d:	ret    0x2dc2
  410b70:	adc    al,BYTE PTR [ecx]
  410b72:	scas   al,BYTE PTR es:[edi]
  410b73:	icebp  
  410b74:	mov    al,0xff
  410b76:	imul   eax,DWORD PTR [edx],0xadd8730b
  410b7c:	mov    eax,ds:0x2e4b1534
  410b81:	xchg   esp,eax
  410b82:	inc    edi
  410b83:	icebp  
  410b84:	push   es
  410b85:	and    ecx,0xffffffc4
  410b88:	call   0x2c2:0x9138c2c5
  410b8f:	cmp    dl,BYTE PTR [edx]
  410b91:	lea    eax,[eax]
  410b93:	mov    ah,0xf
  410b95:	sub    eax,0xf
  410b98:	mov    ds:0x3d8f3542,eax
  410b9d:	mov    eax,DWORD PTR [ebp+0x7e]
  410ba0:	cmp    bh,ch
  410ba2:	jne    0x410ba4
  410ba4:	add    BYTE PTR [eax],al
  410ba6:	out    0xcb,al
  410ba8:	inc    edx
  410ba9:	xor    eax,0x358a039e
  410bae:	dec    esi
  410baf:	stc    
  410bb0:	aas    
  410bb1:	add    al,dh
  410bb3:	cmc    
  410bb4:	std    
  410bb5:	(bad)  
  410bb6:	dec    edi
  410bb7:	retf   
  410bb8:	jb     0x410beb
  410bba:	inc    ecx
  410bbb:	push   eax
  410bbc:	push   es
  410bbd:	sub    ebx,DWORD PTR [ecx-0x77]
  410bc0:	out    0x5,al
  410bc2:	sbb    DWORD PTR [eax+0xe],ebx
  410bc5:	add    ah,cl
  410bc7:	dec    edi
  410bc8:	shr    cl,cl
  410bca:	and    edx,DWORD PTR [eax-0x2d]
  410bcd:	je     0x410b61
  410bcf:	mov    al,ds:0xe2110c53
  410bd4:	std    
  410bd5:	push   ebp
  410bd6:	call   0x4386:0x8f69fe7f
  410bdd:	aam    0x8a
  410bdf:	cmp    BYTE PTR [eax-0x1],ch
  410be2:	adc    eax,0x7ec083bd
  410be7:	or     BYTE PTR [ecx-0x74a9ed83],cl
  410bed:	inc    ebp
  410bee:	out    0x3a,al
  410bf0:	std    
  410bf1:	jne    0x410be9
  410bf3:	sbb    BYTE PTR [ebx+edx*2],0x60
  410bf7:	hlt    
  410bf8:	std    
  410bf9:	adc    eax,0x3ff76e
  410bfe:	xchg   ecx,eax
  410bff:	dec    edi
  410c00:	neg    BYTE PTR [esi-0x2d]
  410c03:	enter  0xa,0xf9
  410c07:	retf   0x8c0
  410c0a:	add    BYTE PTR [eax],al
  410c0c:	add    BYTE PTR [edx],cl
  410c0e:	ds mov esp,ebp
  410c11:	repz scas al,BYTE PTR es:[edi]
  410c13:	push   ds
  410c14:	mov    ds:0x56022ff1,eax
  410c19:	jbe    0x410c83
  410c1b:	mov    dh,0x43
  410c1d:	lea    esi,[eax+0x1c60ffe9]
  410c23:	jg     0x410bd9
  410c25:	push   ebx
  410c26:	jae    0x410c55
  410c28:	dec    bl
  410c2a:	jbe    0x410c2d
  410c2c:	add    ebx,esi
  410c2e:	mov    al,0xa7
  410c30:	repz repz mov al,0xa7
  410c34:	sti    
  410c35:	repz loopne 0x410bb8
  410c38:	inc    esp
  410c39:	(bad)  
  410c3a:	(bad)  
  410c3b:	sbb    esi,DWORD PTR [edx]
  410c3d:	jmp    0x410c6d
  410c3f:	add    al,BYTE PTR [ebx+esi*4+0x1eff1722]
  410c46:	mov    dl,0x79
  410c48:	lds    ebx,FWORD PTR [ebx+eax*2+0x5df36936]
  410c4f:	call   0x5be8:0x22df3cb
  410c56:	inc    edx
  410c57:	add    eax,DWORD PTR [eax]
  410c59:	jl     0x410cbe
  410c5b:	ss out 0xf8,eax
  410c5e:	xchg   ecx,eax
  410c5f:	sub    eax,0xb7c5c0fe
  410c64:	stos   DWORD PTR es:[edi],eax
  410c65:	fs cmc 
  410c67:	int3   
  410c68:	enter  0x6330,0x79
  410c6c:	jmp    0x410cde
  410c6e:	or     ch,BYTE PTR [ebx]
  410c70:	add    BYTE PTR [eax],0x0
  410c73:	add    BYTE PTR [edi-0x66],bl
  410c76:	pop    es
  410c77:	add    bl,dh
  410c79:	pusha  
  410c7a:	aam    0x56
  410c7c:	outs   dx,BYTE PTR ds:[esi]
  410c7d:	jb     0x410c65
  410c7f:	adc    eax,DWORD PTR [eax]
  410c81:	sbb    al,0xd1
  410c83:	mov    BYTE PTR [edi-0x4b17f5af],ah
  410c89:	add    BYTE PTR [edx],0x0
  410c8c:	ja     0x410c95
  410c8e:	test   eax,0xe88170fd
  410c93:	add    esi,ebx
  410c95:	cs stos DWORD PTR es:[edi],eax
  410c97:	(bad)  
  410c98:	add    al,0x24
  410c9a:	popa   
  410c9b:	dec    esp
  410c9c:	imul   eax,ebx,0xc
  410c9f:	or     al,0x6a
  410ca1:	ret    
  410ca2:	add    al,0x14
  410ca4:	in     eax,0x47
  410ca6:	fdiv   DWORD PTR [esi-0x329cd0f6]
  410cac:	repz push es
  410cae:	aas    
  410caf:	icebp  
  410cb0:	mov    ecx,0x961c29bc
  410cb5:	(bad)  
  410cb6:	out    0x3,eax
  410cb8:	jo     0x410c8c
  410cba:	les    ecx,FWORD PTR [ebx]
  410cbc:	jecxz  0x410c4d
  410cbe:	and    al,0xe8
  410cc0:	fsubr  QWORD PTR [edi]
  410cc2:	sbb    DWORD PTR [esi],esi
  410cc4:	mov    cl,0x5
  410cc6:	cld    
  410cc7:	adc    BYTE PTR [ebx-0xcfd07dc],bl
  410ccd:	xchg   ecx,eax
  410cce:	in     al,0xe7
  410cd0:	hlt    
  410cd1:	cs mov esp,0x69238d6f
  410cd7:	cmp    DWORD PTR [eax],eax
  410cd9:	add    BYTE PTR [eax],al
  410cdb:	repz das 
  410cdd:	adc    DWORD PTR [esi],esi
  410cdf:	mov    cl,0x8
  410ce1:	mov    ebp,0xe8288cf9
  410ce6:	add    esi,ebx
  410ce8:	xchg   DWORD PTR [ecx+0x2f],ecx
  410ceb:	pop    ecx
  410cec:	repnz ss inc ecx
  410cef:	lock call 0x3e9:0x5aa1bf2
  410cf7:	jo     0x410d20
  410cf9:	adc    DWORD PTR [ecx],ebx
  410cfb:	out    0x1c,eax
  410cfd:	sub    esp,eax
  410cff:	(bad)  
  410d00:	aad    0x73
  410d02:	mov    eax,0x7c10ff10
  410d07:	mov    eax,ds:0x8e90005
  410d0c:	mov    ebx,0x8ff0e90f
  410d11:	int    0x6a
  410d13:	fninit 
  410d15:	out    0x93,eax
  410d17:	inc    ebx
  410d18:	push   es
  410d19:	add    BYTE PTR [edx],dl
  410d1b:	and    esp,edi
  410d1d:	andnps xmm4,xmm2
  410d20:	xchg   ecx,eax
  410d21:	inc    ebx
  410d22:	or     eax,0xe869b6df
  410d27:	mov    al,BYTE PTR [esi]
  410d29:	pop    eax
  410d2a:	pusha  
  410d2b:	mov    ah,0xe6
  410d2d:	pop    ss
  410d2e:	rol    DWORD PTR [eax-0x4b],0xff
  410d32:	call   0xf564a38c
  410d37:	call   0xf12a5eb1
  410d3c:	rcr    DWORD PTR [ebp-0x26],0x0
  410d40:	add    BYTE PTR [eax],al
  410d42:	xor    BYTE PTR [ebp+0x48a58c8a],bh
  410d48:	add    ebp,ecx
  410d4a:	jo     0x410d2f
  410d4c:	(bad)  
  410d4d:	cmp    DWORD PTR [ebx-0x740900de],esi
  410d53:	mov    esp,0xb8c61a56
  410d58:	push   esi
  410d59:	mov    dh,0x68
  410d5b:	sbb    dh,cl
  410d5d:	test   eax,0x4e56b9f0
  410d62:	in     eax,0xb6
  410d64:	adc    DWORD PTR [ecx+0x2ef8df0],ebp
  410d6a:	es xchg esi,eax
  410d6c:	push   ds
  410d6d:	shr    eax,0xf4
  410d70:	(bad)  
  410d71:	call   0xf9552ebc
  410d76:	add    eax,edi
  410d78:	jmp    DWORD PTR [ebx-0x50]
  410d7b:	xchg   ebp,eax
  410d7c:	pop    es
  410d7d:	mov    esi,0xb514211e
  410d82:	loop   0x410d4a
  410d84:	(bad)  
  410d85:	call   DWORD PTR [ebx+esi*8+0x13]
  410d89:	mov    al,ds:0x5efe4648
  410d8e:	jl     0x410d57
  410d90:	push   ebx
  410d91:	mov    ebx,DWORD PTR [esi]
  410d93:	mov    ds:0x80d430ea,al
  410d98:	dec    edi
  410d99:	lea    esp,[edi-0x6517a946]
  410d9f:	or     BYTE PTR [ecx],al
  410da1:	add    BYTE PTR ds:0x6a0658,ch
  410da7:	add    BYTE PTR [eax],al
  410da9:	or     bh,dh
  410dab:	mov    BYTE PTR [edx-0x7ba1fa25],ah
  410db1:	call   0x4ebb:0x178d1656
  410db8:	push   edi
  410dba:	and    bh,ch
  410dbc:	jne    0x410d80
  410dbe:	std    
  410dbf:	cwde   
  410dc0:	mov    ds:0xc08505db,eax
  410dc5:	out    0x7,al
  410dc7:	xor    eax,eax
  410dc9:	or     al,BYTE PTR [edx]
  410dcb:	add    DWORD PTR [ebx],esi
  410dcd:	pop    edx
  410dce:	jecxz  0x410d90
  410dd0:	add    al,0x9a
  410dd2:	ss mov esp,ebp
  410dd5:	or     edi,esp
  410dd7:	test   BYTE PTR [ecx+0x373e],0x9a
  410dde:	aaa    
  410ddf:	push   0x22570f53
  410de4:	sub    BYTE PTR [edx-0x3],al
  410de7:	cmp    BYTE PTR [edx],al
  410de9:	mov    eax,DWORD PTR ds:0x3b40c68b
  410def:	xchg   DWORD PTR [esi+esi*8+0x1e],eax
  410df3:	mov    esi,DWORD PTR [esi+esi*8+0x16]
  410df7:	push   esi
  410df8:	call   0x42193f
  410dfd:	fild   WORD PTR [esi+0x22]
  410e00:	push   eax
  410e01:	repz pop edi
  410e03:	sbb    cl,BYTE PTR [ebx-0x7cd4efc4]
  410e09:	xor    esp,DWORD PTR [ebx+0x82eb]
  410e0f:	add    BYTE PTR [edi+0x77fff64b],dl
  410e15:	jae    0x410df5
  410e17:	dec    edi
  410e18:	push   0x6b
  410e1a:	fimul  WORD PTR [edi]
  410e1c:	data16 repz fild WORD PTR [edi]
  410e20:	jp     0x410e0d
  410e22:	fist   WORD PTR [edi]
  410e24:	js     0x410e97
  410e26:	ror    BYTE PTR [edi+esi*4-0x5038ebf5],cl
  410e2d:	adc    ecx,DWORD PTR [eax*1-0x38fdd20d]
  410e34:	das    
  410e35:	adc    ah,ah
  410e37:	add    bl,dh
  410e39:	sub    eax,0x522fc702
  410e3e:	fiadd  WORD PTR [ecx]
  410e40:	repz sub eax,0x2b49e802
  410e46:	add    eax,DWORD PTR [eax]
  410e48:	sbb    eax,0xb05c1fa5
  410e4d:	add    edi,DWORD PTR [edi-0x15]
  410e50:	jb     0x410de4
  410e52:	cli    
  410e53:	add    ebx,esi
  410e55:	sub    eax,0xb39b8477
  410e5a:	sub    esi,edi
  410e5c:	inc    ebx
  410e5d:	mov    dh,0xef
  410e5f:	dec    BYTE PTR [ecx+eax*8+0x24ffbf7e]
  410e66:	ja     0x410df4
  410e68:	jnp    0x410e3d
  410e6a:	sub    esi,edi
  410e6c:	mov    esi,edx
  410e6e:	pop    esp
  410e6f:	add    bl,dh
  410e71:	(bad)  
  410e72:	inc    ebp
  410e73:	push   esp
  410e74:	add    BYTE PTR [eax],al
  410e76:	add    BYTE PTR [eax-0x36],bh
  410e79:	test   ebx,ebp
  410e7b:	(bad)  
  410e7c:	jl     0x410e4e
  410e7e:	mov    bl,dh
  410e80:	push   es
  410e81:	icebp  
  410e82:	jle    0x410e7a
  410e84:	mov    bh,0x6f
  410e86:	mov    eax,0xfba39240
  410e8b:	mov    ds:0x69f7931f,eax
  410e90:	cmp    eax,0x69a2a92
  410e95:	xchg   ebx,eax
  410e96:	add    al,0xbd
  410e98:	lea    edx,[ebx-0x6748e2cd]
  410e9e:	adc    BYTE PTR [eax+edx*1+0x6c],0x47
  410ea3:	or     al,0x20
  410ea5:	call   0x23d2fd26
  410eaa:	sub    al,0xa3
  410eac:	mov    ebx,DWORD PTR [ebx]
  410eae:	clc    
  410eaf:	mov    WORD PTR [esi+0x3b],?
  410eb2:	(bad)  
  410eb3:	in     al,dx
  410eb4:	and    BYTE PTR [edi],dh
  410eb6:	cld    
  410eb7:	and    BYTE PTR ds:[eax],bl
  410eba:	fdiv   QWORD PTR [edi+0x46]
  410ebd:	fnstsw WORD PTR [esi+0x7c]
  410ec0:	push   es
  410ec1:	jmp    0xa10a86c9
  410ec6:	jge    0x410eb4
  410ec8:	xchg   ecx,eax
  410ec9:	cmp    ebx,DWORD PTR [edx+eiz*1]
  410ecc:	lods   eax,DWORD PTR ds:[esi]
  410ecd:	enter  0xd89d,0xb6
  410ed1:	test   DWORD PTR [ebx+0x3e906b8],edx
  410ed7:	outs   dx,BYTE PTR ds:[esi]
  410ed8:	inc    esi
  410ed9:	sti    
  410eda:	mov    al,0x0
  410edc:	add    BYTE PTR [eax],al
  410ede:	ror    ecx,cl
  410ee0:	ins    BYTE PTR es:[edi],dx
  410ee1:	jmp    0x410f12
  410ee3:	das    
  410ee4:	fisub  WORD PTR [ebp-0x408ec43f]
  410eea:	cwde   
  410eeb:	mov    edx,esp
  410eed:	add    al,0xdf
  410eef:	mov    DWORD PTR [ebp-0x50],ecx
  410ef2:	xor    BYTE PTR [ebp-0x58],dl
  410ef5:	jl     0x410f2c
  410ef7:	test   DWORD PTR cs:[edi],edx
  410efa:	gs pop ds
  410efc:	jmp    FWORD PTR [ebx-0x49]
  410eff:	xchg   ebx,eax
  410f00:	ss xchg esi,eax
  410f02:	jbe    0x410f23
  410f04:	xor    DWORD PTR [ecx],0x56c281a
  410f0a:	sbb    ah,BYTE PTR [ecx]
  410f0c:	mov    dl,BYTE PTR [ecx]
  410f0e:	mov    esp,0xb7c97320
  410f13:	rcl    BYTE PTR [ebx],cl
  410f15:	sahf   
  410f16:	ja     0x410f5f
  410f18:	(bad)  
  410f19:	adc    DWORD PTR [edx+0x29],ebx
  410f1c:	(bad)  
  410f1d:	neg    BYTE PTR [edi+ebx*2-0x2d68268d]
  410f24:	adc    ebx,DWORD PTR [edx]
  410f26:	mov    bh,0xa7
  410f28:	mov    edi,0x3e1f2f54
  410f2d:	rcr    DWORD PTR [edi+0x29],0xfe
  410f31:	into   
  410f32:	and    esp,DWORD PTR [edi]
  410f34:	mov    esi,0xfe1d1b90
  410f39:	and    al,0x1b
  410f3b:	xchg   ecx,eax
  410f3c:	inc    esp
  410f3d:	mov    ch,0x77
  410f3f:	dec    ecx
  410f40:	aas    
  410f41:	repnz add BYTE PTR [eax],al
  410f44:	add    BYTE PTR [ebp+0x4f4a7126],dl
  410f4a:	mov    ebx,0x1a8572ef
  410f4f:	mov    ah,cl
  410f51:	inc    ebp
  410f52:	mov    bl,0xe7
  410f54:	cmp    ebx,DWORD PTR [edi+0x2fd1501d]
  410f5a:	ret    
  410f5b:	div    DWORD PTR [edx-0x58]
  410f5e:	into   
  410f5f:	(bad)  
  410f60:	sbb    BYTE PTR [edi+0x17dd741d],bl
  410f66:	add    al,0x56
  410f68:	data16 mov al,ds:0x7cd4fefa
  410f6e:	xchg   ecx,eax
  410f6f:	add    eax,0x741df1c3
  410f74:	loope  0x410f18
  410f76:	sbb    eax,0x9d8e004f
  410f7b:	mov    esi,0xfd35ce0f
  410f80:	jmp    DWORD PTR ds:0xd10873ef
  410f86:	pop    es
  410f87:	push   esi
  410f88:	dec    DWORD PTR [edx+0x4a7d8952]
  410f8e:	fwait
  410f8f:	add    al,0x57
  410f91:	jo     0x410f9d
  410f93:	push   esi
  410f94:	(bad)  
  410f95:	jp     0x410fad
  410f97:	add    eax,0xffffffaf
  410f9a:	dec    edi
  410f9b:	aaa    
  410f9c:	inc    edi
  410f9d:	and    dh,BYTE PTR [eax+0x57]
  410fa0:	mov    ecx,DWORD PTR [ecx]
  410fa2:	xchg   ebp,eax
  410fa3:	dec    ebx
  410fa4:	or     BYTE PTR [ebx+0x37],bh
  410fa7:	std    
  410fa8:	ja     0x410faa
  410faa:	add    BYTE PTR [eax],al
  410fac:	push   ds
  410fad:	cmp    ebp,edi
  410faf:	push   eax
  410fb0:	fiadd  DWORD PTR [edi-0x5e328a42]
  410fb6:	add    DWORD PTR [ebp+0x6a50f2d7],ecx
  410fbc:	(bad)  
  410fbe:	jne    0x410fc4
  410fc0:	or     esi,esp
  410fc2:	dec    esi
  410fc3:	sbb    BYTE PTR [edi-0x3d],cl
  410fc6:	jae    0x410fe5
  410fc8:	test   DWORD PTR [edi+0x12],edx
  410fcb:	mov    eax,DWORD PTR [edi]
  410fcd:	xlat   BYTE PTR ds:[ebx]
  410fce:	push   ebp
  410fcf:	(bad)  
  410fd0:	fistp  WORD PTR [esi]
  410fd2:	mov    ebx,edx
  410fd4:	gs push edi
  410fd6:	push   cs
  410fd7:	call   0x3ef508
  410fdc:	and    DWORD PTR [eax+0xe],ecx
  410fdf:	mov    esp,DWORD PTR [edx-0x6dae02c7]
  410fe5:	mov    al,ds:0x58055701
  410fea:	push   es
  410feb:	push   ebx
  410fec:	adc    eax,0xda854233
  410ff1:	push   esi
  410ff2:	sar    bh,0xf3
  410ff5:	cmp    bh,dl
  410ff7:	mov    dh,al
  410ff9:	pusha  
  410ffa:	and    eax,0xc464bb4f
  410fff:	pop    edx
  411000:	cmp    dh,cl
  411002:	adc    eax,DWORD PTR [eax]
  411004:	(bad)  
  411005:	test   al,0x17
  411007:	add    BYTE PTR [edi+0x5b],0x3
  41100b:	add    bl,dh
  41100d:	pusha  
  41100e:	int3   
  41100f:	push   esi
  411010:	add    BYTE PTR [eax],al
  411012:	add    bl,bl
  411014:	mov    edi,0x87f33fb0
  411019:	bound  esi,QWORD PTR [ebx+esi*4+0x2f]
  41101d:	sbb    bh,dl
  41101f:	mov    ds:0x238b022e,eax
  411024:	pusha  
  411025:	dec    ecx
  411026:	cmp    ah,BYTE PTR [eax]
  411028:	and    al,0x7e
  41102a:	mov    ?,ebx
  41102c:	das    
  41102d:	add    dl,BYTE PTR [ebx-0x60]
  411030:	xchg   esi,eax
  411031:	(bad)  
  411032:	sti    
  411033:	js     0x41105a
  411035:	int3   
  411036:	(bad)  
  411037:	mov    ds:0x7ebf7f23,eax
  41103c:	into   
  41103d:	jp     0x411044
  41103f:	jle    0x411014
  411041:	sub    edx,DWORD PTR [eax+0x40]
  411044:	mov    eax,0xfedc5601
  411049:	jne    0x6814e402
  41104f:	jae    0x41104c
  411051:	ret    
  411052:	dec    DWORD PTR [esi+edi*8-0x50]
  411056:	aas    
  411057:	repz test DWORD PTR [edx+0x6f],eax
  41105b:	repnz sub eax,0x88e8f779
  411061:	scas   al,BYTE PTR es:[edi]
  411062:	xor    DWORD PTR [esi-0x1d],esi
  411065:	daa    
  411066:	dec    edi
  411067:	outs   dx,BYTE PTR ds:[esi]
  411068:	stos   DWORD PTR es:[edi],eax
  411069:	mov    bh,ch
  41106b:	xchg   esp,eax
  41106c:	lods   eax,DWORD PTR ds:[esi]
  41106d:	ror    BYTE PTR [esi+esi*1-0x7a2c66f9],cl
  411074:	xchg   edx,eax
  411075:	pusha  
  411076:	jp     0x411078
  411078:	add    BYTE PTR [eax],al
  41107a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41107b:	nop
  41107c:	and    eax,0xa4572f3e
  411081:	add    esi,ebx
  411083:	push   es
  411084:	cmp    BYTE PTR cs:[ebp+ebx*1+0x3d],0x26
  41108a:	add    al,0x6
  41108c:	jmp    0x2b555b94
  411091:	es dec ebp
  411093:	nop
  411094:	in     eax,dx
  411095:	into   
  411096:	inc    ebp
  411097:	mov    bh,0xf0
  411099:	jp     0x411052
  41109b:	push   ds
  41109c:	popa   
  41109d:	sti    
  41109e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41109f:	sbb    esi,DWORD PTR [edi-0x60fa8605]
  4110a5:	es mov ah,0xe
  4110a8:	adc    DWORD PTR [edi+0x73],ebx
  4110ab:	push   es
  4110ac:	jmp    0xac5bc82b
  4110b1:	(bad)  
  4110b2:	jmp    0x718dedfd
  4110b7:	inc    edi
  4110b8:	inc    ecx
  4110b9:	cmc    
  4110ba:	inc    ebp
  4110bb:	inc    edi
  4110bc:	shr    BYTE PTR [ecx+edi*8+0x4ec5cd1b],0xc0
  4110c4:	scas   eax,DWORD PTR es:[edi]
  4110c5:	inc    ecx
  4110c6:	aas    
  4110c7:	nop
  4110c8:	int3   
  4110c9:	or     eax,0xffffff9a
  4110cc:	jmp    0x16f903d4
  4110d1:	int    0x89
  4110d3:	push   es
  4110d4:	call   0x6bf903dc
  4110d9:	ja     0x41114b
  4110db:	sbb    DWORD PTR [ebp+0x25],edx
  4110e1:	and    ebx,DWORD PTR [ebx+edx*1]
  4110e4:	clc    
  4110e5:	jns    0x4110fd
  4110e7:	jno    0x4110e7
  4110e9:	ds sbb al,0x18
  4110ec:	adc    BYTE PTR [esi+0x46],dh
  4110ef:	(bad)  
  4110f0:	cld    
  4110f1:	xchg   esi,eax
  4110f2:	mov    BYTE PTR [ebp+ebx*8-0x10],ah
  4110f6:	das    
  4110f7:	adc    esi,DWORD PTR [esp+eax*1-0x78]
  4110fb:	cld    
  4110fc:	pop    esi
  4110fd:	(bad)  
  4110fe:	retf   
  4110ff:	imul   ebp,ecx,0x41fe4373
  411105:	jb     0x41112c
  411107:	inc    BYTE PTR [esi-0x18]
  41110a:	ret    0x720b
  41110d:	pop    ebp
  41110e:	mov    eax,0x1973648c
  411113:	(bad)  
  411114:	and    BYTE PTR cs:[esp+esi*2],bl
  411118:	add    DWORD PTR ds:0x43f54f1c,esi
  41111e:	sbb    al,0x84
  411120:	sub    DWORD PTR [ebx-0x77376fe],eax
  411126:	das    
  411127:	adc    dh,BYTE PTR [esp+eiz*4-0x79]
  41112b:	std    
  41112c:	(bad)  
  41112d:	xlat   BYTE PTR ds:[ebx]
  41112e:	retf   
  41112f:	push   esi
  411130:	push   0xffffffd7
  411132:	sbb    al,0xe7
  411134:	xchg   ebp,eax
  411135:	rcr    BYTE PTR [esi+edi*8],cl
  411138:	jo     0x41117f
  41113a:	repz mov ah,bh
  41113d:	and    ecx,DWORD PTR [edx+0x1ccc6d8c]
  411143:	(bad)  
  411144:	cmp    BYTE PTR [eax],al
  411146:	add    BYTE PTR [eax],al
  411148:	push   ss
  411149:	xchg   ebx,eax
  41114a:	sbb    ebx,DWORD PTR [edi]
  41114c:	push   cs
  41114d:	retf   0x6413
  411150:	xor    BYTE PTR [ebx-0x79aa9bef],dl
  411156:	sti    
  411157:	scas   al,BYTE PTR es:[edi]
  411158:	pop    ss
  411159:	retf   0x6a56
  41115c:	or     BYTE PTR [ecx],bl
  41115e:	out    0xcd,eax
  411160:	adc    bl,BYTE PTR [ecx]
  411162:	(bad)  
  411163:	bound  ecx,QWORD PTR [eax]
  411165:	lea    eax,ds:0x501e655c
  41116b:	add    BYTE PTR [ebp+0x69],ch
  41116e:	push   cs
  41116f:	push   esi
  411170:	sbb    eax,0x4a850e36
  411175:	push   0x2
  411177:	xor    edi,0xffffffee
  41117a:	dec    BYTE PTR [edx-0x7b46e6c]
  411180:	cmp    esp,ebx
  411182:	jae    0x411198
  411184:	xor    al,0xe3
  411186:	dec    esi
  411187:	adc    bh,dl
  411189:	lds    esi,FWORD PTR [edx+0x4]
  41118c:	fnstcw WORD PTR [eax-0xa]
  41118f:	add    BYTE PTR [eax-0x80],al
  411192:	mov    esi,DWORD PTR [ebp-0x3a]
  411195:	dec    ebp
  411196:	out    0xad,al
  411198:	sbb    al,0x6
  41119a:	add    BYTE PTR [edx+0x69],ch
  41119d:	xchg   ecx,eax
  41119e:	jae    0x411188
  4111a0:	xor    bh,dh
  4111a2:	mov    al,ds:0x8b064afe
  4111a7:	push   ebp
  4111a8:	and    ch,BYTE PTR [esi+0x7546]
  4111ae:	add    BYTE PTR [edx+0x6],bl
  4111b1:	test   edi,edi
  4111b3:	mov    eax,ds:0x15450dd5
  4111b8:	pushf  
  4111b9:	ror    BYTE PTR [edi],1
  4111bb:	push   esi
  4111bc:	mov    dh,0x81
  4111be:	jge    0x4111d2
  4111c0:	add    ecx,DWORD PTR [ebx-0x72fe5938]
  4111c6:	dec    ebp
  4111c7:	xor    al,BYTE PTR [edx+0x5fda0c7b]
  4111cd:	or     eax,0x8af71745
  4111d2:	jne    0x4111be
  4111d4:	push   eax
  4111d5:	dec    edi
  4111d6:	call   DWORD PTR [edi]
  4111d8:	out    0x4e,eax
  4111da:	inc    DWORD PTR [edi]
  4111dc:	or     ecx,DWORD PTR [ebp-0x2aca9bb]
  4111e2:	ss pop ebp
  4111e4:	pop    ds
  4111e5:	jle    0x4111f9
  4111e7:	repz out dx,eax
  4111e9:	add    ecx,DWORD PTR [ebx-0x18b65b35]
  4111ef:	imul   esi,DWORD PTR [edx+eiz*1-0x2],0xfeff6370
  4111f7:	push   ds
  4111f8:	and    al,0x2a
  4111fa:	adc    edx,DWORD PTR [eax+ebp*4+0x22]
  4111fe:	(bad)  
  4111ff:	inc    BYTE PTR [edi]
  411201:	sub    al,0xb
  411203:	push   esp
  411204:	mov    eax,0x298b5622
  411209:	imul   edi,esi,0x5ac0686c
  41120f:	cmp    ch,ch
  411211:	(bad)  
  411212:	inc    DWORD PTR [eax]
  411214:	add    BYTE PTR [eax],al
  411216:	(bad)  
  411217:	xchg   esp,eax
  411218:	das    
  411219:	add    BYTE PTR [edi-0x55],0x5
  41121d:	add    bl,dh
  41121f:	jl     0x4111d9
  411221:	push   esi
  411222:	fisttp DWORD PTR [edi+0x77f33f97]
  411228:	mov    dl,0x74
  41122a:	mov    bl,0x2f
  41122c:	sub    bh,dh
  41122e:	popf   
  41122f:	add    cl,BYTE PTR cs:[ebx-0x77c2a3dd]
  411236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411237:	neg    esi
  411239:	repnz in al,0xab
  41123c:	and    al,BYTE PTR [eax]
  41123e:	repz das 
  411240:	lea    eax,ds:0x55b52e99
  411246:	push   0xffffffda
  411248:	sbb    edi,esi
  41124a:	mov    ds:0xfcbf88ef,eax
  41124f:	mov    ds:0x2df3003c,al
  411254:	lea    eax,ds:0x502feb6e
  41125a:	dec    ecx
  41125b:	and    BYTE PTR [eax-0x78cddc02],bh
  411261:	mov    edi,0x496c06f4
  411266:	repz push es
  411268:	jmp    0xe947a399
  41126d:	add    edi,DWORD PTR [eax-0x3e]
  411270:	mov    WORD PTR [esi+0x181b89ec],cs
  411276:	inc    edx
  411277:	mov    bh,0x7d
  411279:	mov    ah,0x0
  41127b:	add    BYTE PTR [eax],al
  41127d:	fadd   QWORD PTR [ecx-0x7d89ed58]
  411283:	out    0x3,eax
  411285:	repz ffree st(3)
  411288:	pop    ss
  411289:	in     eax,dx
  41128a:	sbb    ah,0x4
  41128d:	repz push es
  41128f:	(bad)  
  411290:	enter  0x8c68,0xe0
  411294:	popa   
  411295:	fs pop es
  411297:	jmp    0x53cad79f
  41129c:	adc    DWORD PTR [esi+0x18],0x35
  4112a0:	mov    ch,0xd4
  4112a2:	push   ss
  4112a3:	jmp    0x25f7f580
  4112a8:	mov    ah,0xe0
  4112aa:	sub    DWORD PTR [eax],0xb38def97
  4112b0:	adc    ebx,DWORD PTR [ecx]
  4112b2:	hlt    
  4112b3:	pop    ebx
  4112b4:	mov    BYTE PTR [eax+ebx*1-0x4c53ddfb],ah
  4112bb:	imul   ecx,DWORD PTR [ebx+0x15],0xd23102f
  4112c2:	sbb    BYTE PTR [edi-0x38],bl
  4112c5:	adc    al,0x8c
  4112c7:	sub    esp,DWORD PTR [eax]
  4112c9:	imul   ecx,DWORD PTR [edi],0x875f8f37
  4112cf:	shl    DWORD PTR [ecx],cl
  4112d1:	in     eax,dx
  4112d2:	mov    ah,0x40
  4112d4:	adc    al,0xf1
  4112d6:	aam    0xdc
  4112d8:	mov    bl,0xdd
  4112da:	mov    ch,0xd4
  4112dc:	xchg   BYTE PTR [edx+edx*4+0xecff],dl
  4112e3:	add    BYTE PTR [edi+0x75dbea18],ah
  4112e9:	cmp    BYTE PTR [edi-0x5c],0x12
  4112ed:	sbb    DWORD PTR [edi+0x3a],ecx
  4112f0:	outs   dx,BYTE PTR ds:[esi]
  4112f1:	aas    
  4112f2:	inc    BYTE PTR [ecx-0x7101c7e6]
  4112f8:	jbe    0x411309
  4112fa:	imul   edx,DWORD PTR [eax],0x2183926c
  411300:	(bad)  
  411301:	mov    ch,0xfc
  411303:	jmp    0xf48871f8
  411308:	mov    al,0x17
  41130a:	mov    DWORD PTR [ecx],edi
  41130c:	sahf   
  41130d:	sbb    al,0x73
  41130f:	jmp    0x411378
  411311:	xor    BYTE PTR [edx+0x748d00a4],cl
  411317:	push   ecx
  411318:	inc    esi
  411319:	dec    esp
  41131a:	push   cs
  41131b:	lods   eax,DWORD PTR ds:[esi]
  41131c:	test   al,0xdc
  41131e:	repnz mov ch,0xe6
  411321:	mov    al,ds:0x264d738
  411326:	mov    eax,0xffd75c29
  41132b:	mov    edx,0xa48cc781
  411330:	ins    BYTE PTR es:[edi],dx
  411331:	(bad)  
  411332:	push   ebp
  411333:	push   ss
  411334:	and    al,0x97
  411336:	adc    DWORD PTR [ecx+0x74d78bf0],ebp
  41133c:	xor    al,0xf
  41133e:	out    0x74,eax
  411340:	(bad)  
  411341:	sbb    dh,bh
  411343:	push   0xffffffbb
  411345:	pop    es
  411346:	push   DWORD PTR [eax+eax*1+0x0]
  41134a:	add    al,ah
  41134c:	mov    edi,gs
  41134e:	shr    DWORD PTR [ebp+0x3bdefe62],1
  411354:	pop    ds
  411355:	(bad)  
  411356:	mov    WORD PTR [ebx],ss
  411358:	adc    eax,0x9b13cf82
  41135d:	add    eax,DWORD PTR [eax]
  41135f:	dec    ecx
  411360:	ins    DWORD PTR es:[edi],dx
  411361:	repnz add BYTE PTR [ebp+ecx*2+0x3c0e02f2],bl
  411369:	push   0xc27d2772
  41136e:	pop    eax
  41136f:	(bad)  
  411370:	(bad)  
  411372:	add    dl,cl
  411374:	test   DWORD PTR [ebx-0x8],eax
  411377:	jmp    0x661c:0x2003f462
  41137e:	lock mov DWORD PTR [ecx+0xb1f6810],edx
  411385:	sahf   
  411386:	adc    dh,dl
  411388:	loope  0x41138b
  41138a:	popf   
  41138b:	test   al,0x62
  41138d:	out    dx,al
  41138e:	add    esi,DWORD PTR [edx+0x1c]
  411391:	mov    esi,eax
  411393:	cmp    al,BYTE PTR [ebx+0x4cb2fc43]
  411399:	sti    
  41139a:	push   DWORD PTR [ebp+0x4ef443ef]
  4113a0:	jle    0x4113d3
  4113a2:	push   0xffffff9b
  4113a4:	test   DWORD PTR [ebx-0x30],esi
  4113a7:	(bad)
  4113ac:	or     cl,BYTE PTR [ebp+0x45]
  4113b2:	adc    bl,BYTE PTR [edx+0x66]
  4113b5:	test   BYTE PTR [ecx-0x40],0x11
  4113b9:	push   0x13c50b0a
  4113be:	jb     0x4113bd
  4113c0:	add    edx,ecx
  4113c2:	cmp    DWORD PTR [edx-0x19],esp
  4113c5:	add    esp,ebx
  4113c7:	sbb    ah,BYTE PTR [esi-0x10]
  4113ca:	sbb    esi,ecx
  4113cc:	adc    DWORD PTR [ebx+0x458959cc],ecx
  4113d2:	push   ss
  4113d3:	jecxz  0x4113df
  4113d5:	std    
  4113d6:	adc    eax,0xf345f4f6
  4113db:	xor    ecx,DWORD PTR [ebx]
  4113dd:	je     0x4113ff
  4113df:	retf   0x8c93
  4113e2:	data16 ins BYTE PTR es:[edi],dx
  4113e4:	mov    ebx,0x3545ee7
  4113e9:	add    BYTE PTR [esi-0x1e],bh
  4113ec:	sbb    ecx,DWORD PTR [edi+0x5b]
  4113ef:	pop    esi
  4113f0:	add    ch,BYTE PTR [edx]
  4113f2:	out    0xf7,eax
  4113f4:	adc    eax,DWORD PTR [edx]
  4113f6:	or     bl,BYTE PTR [edx+ebp*4]
  4113f9:	hlt    
  4113fa:	lock dec ebp
  4113fc:	mul    BYTE PTR [edi-0x66]
  4113ff:	and    bh,ch
  411401:	adc    ecx,DWORD PTR [ebx]
  411403:	nop
  411404:	add    ch,BYTE PTR [eax]
  411406:	call   FWORD PTR [eax-0x1d87b0bb]
  41140c:	pop    ds
  41140d:	out    0xa0,eax
  41140f:	mov    ds:0x3268fe1e,eax
  411414:	sub    dh,BYTE PTR [edx]
  411416:	add    BYTE PTR [eax],al
  411418:	add    BYTE PTR [eax+0x78fbc898],bl
  41141e:	daa    
  41141f:	mov    dl,0xfe
  411421:	ret    0x8927
  411424:	inc    esp
  411425:	dec    edi
  411426:	cwde   
  411427:	or     ecx,DWORD PTR [ebp+0x4fb1d3be]
  41142d:	dec    esp
  41142e:	outs   dx,BYTE PTR ds:[esi]
  41142f:	test   BYTE PTR [ebx+esi*1+0x3d478634],0xec
  411437:	push   ds
  411438:	mov    ch,BYTE PTR [esi-0x3cf874fd]
  41143e:	cld    
  41143f:	mov    ah,0x7
  411441:	js     0x411470
  411443:	mov    ah,0xfe
  411445:	ret    
  411446:	pop    ss
  411447:	mov    DWORD PTR [ebx+ebx*1+0x79],ebx
  41144b:	mov    edi,0x1a261b57
  411450:	inc    BYTE PTR [esp+eax*4]
  411453:	mov    esp,0xaa062a5a
  411458:	mov    eax,0x2f672269
  41145d:	js     0x411466
  41145f:	jmp    0x35fe5467
  411464:	xchg   ecx,eax
  411465:	addr16 dec ebx
  411467:	rcl    BYTE PTR [esi],1
  411469:	fld    DWORD PTR [edi]
  41146b:	jmp    0x62445b8e
  411470:	inc    ebp
  411471:	xor    al,0xa1
  411473:	add    BYTE PTR [ebx+0x1f1c526f],bh
  411479:	mov    ch,0x14
  41147b:	nop
  41147c:	test   DWORD PTR [eax],eax
  41147e:	add    BYTE PTR [eax],al
  411480:	xchg   esp,eax
  411481:	adc    al,0x95
  411483:	mov    esp,0x9da88a4b
  411488:	sar    DWORD PTR [edi+0x2b],cl
  41148b:	or     al,0x68
  41148d:	jmp    FWORD PTR [ebx-0x48]
  411490:	clc    
  411491:	mov    eax,0xb7223661
  411496:	ins    DWORD PTR es:[edi],dx
  411497:	je     0x4114f9
  411499:	pop    es
  41149a:	jmp    0xd38882a2
  41149f:	or     DWORD PTR [eax-0x66],edi
  4114a2:	in     al,0x2b
  4114a4:	pusha  
  4114a5:	xchg   bh,ah
  4114a7:	add    ecx,DWORD PTR [eax+0x9]
  4114aa:	cli    
  4114ab:	inc    ebx
  4114ac:	mov    ch,0xb4
  4114ae:	mov    eax,ds:0xe8ff324c
  4114b3:	mov    eax,0x2f672379
  4114b8:	xor    BYTE PTR [edi],al
  4114ba:	jmp    0xb5fdb4c2
  4114bf:	mov    ch,BYTE PTR [edi+0x148abdfe]
  4114c5:	mov    ebp,0x1ec4aa82
  4114ca:	jae    0x4114ea
  4114cc:	adc    eax,0x9ab59514
  4114d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d2:	call   FWORD PTR [edi+0x3b]
  4114d5:	and    BYTE PTR [edi+0x1],dl
  4114d8:	jo     0x4114ef
  4114da:	(bad)  
  4114db:	out    0x3e,al
  4114dd:	mov    edx,0xca784e69
  4114e2:	out    dx,eax
  4114e3:	xor    DWORD PTR [eax],eax
  4114e5:	add    BYTE PTR [eax],al
  4114e7:	pop    ss
  4114e8:	cdq    
  4114e9:	dec    dh
  4114eb:	(bad)  
  4114ec:	mov    esp,0x7ea35355
  4114f1:	inc    esp
  4114f2:	ror    DWORD PTR [edi-0x19499ad5],1
  4114f8:	adc    al,0x56
  4114fa:	pop    ss
  4114fb:	mov    DWORD PTR [edx-0x43ccd378],esp
  411501:	out    0x40,eax
  411503:	push   cs
  411504:	adc    eax,0xceebdafe
  411509:	pop    esp
  41150a:	jge    0x411574
  41150c:	retf   0xf6f7
  41150f:	sbb    eax,0x4dc1fecb
  411514:	adc    al,0xe
  411516:	ins    DWORD PTR es:[edi],dx
  411517:	mov    eax,ds:0x69e90006
  41151c:	mov    dl,0xdf
  41151e:	jo     0x411554
  411520:	daa    
  411521:	cmp    BYTE PTR [eax+ebx*1-0x639df568],bh
  411528:	sub    ecx,DWORD PTR [esp+eiz*4-0xe50d3ec]
  41152f:	lock push es
  411531:	mov    DWORD PTR [esp+eiz*8+0x6b395cce],ebx
  411538:	(bad)  [ecx-0x36]
  41153b:	ins    DWORD PTR es:[edi],dx
  41153c:	call   0xe9fa:0xea08c1cf
  411543:	lock adc esi,DWORD PTR [ecx+ebx*1+0x7a]
  411548:	dec    ecx
  411549:	dec    edi
  41154a:	add    DWORD PTR [eax],0x0
  41154d:	add    ah,ch
  41154f:	scas   eax,DWORD PTR es:[edi]
  411550:	mov    WORD PTR [eax],es
  411552:	outs   dx,DWORD PTR ds:[esi]
  411553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411554:	out    0xb8,al
  411556:	cmc    
  411557:	icebp  
  411558:	std    
  411559:	pop    ecx
  41155a:	arpl   WORD PTR [ebx+eax*2-0x19266e20],ax
  411561:	add    BYTE PTR [edx],0x7
  411564:	add    BYTE PTR [ebx],dh
  411566:	mov    cl,0xf3
  411568:	jae    0x411562
  41156a:	push   ecx
  41156b:	xor    DWORD PTR [esi+0x12],edi
  41156e:	or     cl,BYTE PTR [ebx]
  411570:	call   edi
  411572:	repz push ecx
  411574:	div    BYTE PTR [ebp+eax*1-0x78]
  411578:	test   BYTE PTR [ecx],0xfc
  41157b:	je     0x411506
  41157d:	enter  0xe54b,0xff
  411581:	dec    edx
  411583:	xchg   BYTE PTR [edi+0x5],dh
  411586:	jecxz  0x41150f
  411588:	(bad)  
  411589:	(bad)  
  41158a:	fstp   TBYTE PTR [ecx+0x5f]
  41158d:	cdq    
  41158e:	mov    cl,0xc8
  411590:	iret   
  411591:	clc    
  411592:	and    ecx,DWORD PTR [ecx-0x32]
  411595:	jne    0x41152d
  411597:	aaa    
  411598:	mov    esi,0x5fde97eb
  41159d:	mov    ds:0x4587f30d,eax
  4115a2:	mov    dh,0x2e
  4115a4:	shl    DWORD PTR [ebp+edx*4+0x7f],0xc6
  4115a9:	mov    edx,DWORD PTR [edi-0x54cb1912]
  4115af:	repnz std 
  4115b1:	test   BYTE PTR [eax],al
  4115b3:	add    BYTE PTR [eax],al
  4115b5:	or     bh,BYTE PTR [edx+0x2f]
  4115b8:	lea    edx,[edi+0x69534ebe]
  4115be:	push   edi
  4115bf:	std    
  4115c0:	jne    0x4115e0
  4115c2:	add    DWORD PTR [ebx-0x30],0x15fd5679
  4115c9:	mov    edx,0xf3003e15
  4115ce:	pushf  
  4115cf:	sbb    al,BYTE PTR [eax]
  4115d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115d2:	sbb    BYTE PTR [ebx],bl
  4115d4:	je     0x4115fd
  4115d6:	xchg   ebp,eax
  4115d7:	(bad)
  4115da:	stos   DWORD PTR es:[edi],eax
  4115db:	cmp    edi,esi
  4115dd:	add    al,0x19
  4115df:	xchg   esp,eax
  4115e0:	retf   
  4115e1:	push   0x6b
  4115e3:	push   ss
  4115e4:	(bad)  
  4115e5:	fiadd  WORD PTR [edi+0x30f33ff5]
  4115eb:	nop
  4115ec:	rcr    ebx,cl
  4115ee:	loope  0x411656
  4115f0:	(bad)  
  4115f1:	fadd   st(5),st
  4115f3:	lods   eax,DWORD PTR ds:[esi]
  4115f4:	mov    WORD PTR [esi-0x3301e4f5],ds
  4115fa:	out    0x2b,eax
  4115fc:	jno    0x4115c7
  4115fe:	pop    ds
  4115ff:	add    ch,BYTE PTR [edx+0x40]
  411602:	mov    bl,0x90
  411604:	mov    bh,0x1b
  411606:	js     0x4115aa
  411608:	stc    
  411609:	repz pop ds
  41160b:	lea    edx,[edi+ebx*4-0x5c]
  41160f:	enter  0xd8db,0x4c
  411613:	pop    ebx
  411614:	inc    edi
  411615:	push   ds
  411616:	loopne 0x41161b
  411618:	sldt   WORD PTR [eax]
  41161b:	add    BYTE PTR [edi],dh
  41161d:	jo     0x4115fd
  41161f:	retf   0xe3f4
  411622:	dec    ebx
  411623:	cmp    BYTE PTR [esi],bl
  411625:	mov    WORD PTR [edi-0x711e97ff],cs
  41162b:	je     0x411630
  41162d:	dec    esi
  41162e:	mov    bl,0x4f
  411630:	xor    ah,BYTE PTR fs:[edx]
  411633:	mov    WORD PTR [esi+0x3],?
  411636:	sbb    edi,esi
  411638:	push   esp
  411639:	enter  0xeb90,0x4c
  41163d:	pop    edx
  41163e:	or     dl,BYTE PTR [eax+0x44]
  411641:	adc    DWORD PTR [ecx],ebx
  411643:	(bad)  
  411644:	push   0x4bc58ef7
  411649:	push   es
  41164a:	jo     0x41166f
  41164c:	sub    eax,0x8406911
  411651:	adc    bl,BYTE PTR [ebx+0x4a25140f]
  411657:	sbb    edx,DWORD PTR ds:0x79277b11
  41165d:	fld    TBYTE PTR [eax-0x9f93b0a]
  411663:	xor    ebp,edi
  411665:	call   0x2c5b:0x111e1af8
  41166c:	in     eax,dx
  41166d:	cmp    ebp,ebx
  41166f:	nop
  411670:	enter  0xbe10,0x1a
  411674:	addr16 bswap ebp
  411677:	xor    DWORD PTR [edx-0x36],ebp
  41167a:	lds    edi,FWORD PTR [edx+0x45afac2e]
  411680:	add    BYTE PTR [eax],al
  411682:	add    al,bh
  411684:	push   es
  411685:	sbb    al,0x8f
  411687:	enter  0xbc86,0x5b
  41168b:	repnz push es
  41168d:	jmp    0x37444e20
  411692:	xchg   DWORD PTR [ebx+eiz*8+0x38],esp
  411696:	sbb    esp,DWORD PTR [edi]
  411698:	call   FWORD PTR [ebx-0x80]
  41169b:	sub    al,0x12
  41169d:	test   DWORD PTR [edx],ebx
  41169f:	cmp    al,0x7e
  4116a1:	sub    edx,DWORD PTR [eax]
  4116a3:	mov    esi,?
  4116a5:	push   ecx
  4116a6:	add    al,0xf3
  4116a8:	mov    DWORD PTR [eax-0x18e190f6],ebp
  4116ae:	add    esi,ebx
  4116b0:	and    DWORD PTR [ebx-0x35],0xb3551067
  4116b7:	push   esp
  4116b8:	xchg   esi,eax
  4116b9:	int    0x4
  4116bb:	repz jnp 0x4116f6
  4116be:	mov    edi,es
  4116c0:	push   ss
  4116c1:	arpl   WORD PTR [ecx],dx
  4116c3:	cmc    
  4116c4:	mov    bh,bh
  4116c6:	sbb    bh,dh
  4116c8:	push   es
  4116c9:	add    BYTE PTR [edx-0xe],ah
  4116cc:	or     DWORD PTR [ebp+esi*8+0x67],0xb479feba
  4116d4:	paddd  mm5,mm1
  4116d7:	jae    0x411729
  4116d9:	push   cs
  4116da:	fs ret 
  4116dc:	push   es
  4116dd:	add    cl,ch
  4116df:	jge    0x4116ac
  4116e1:	or     esi,DWORD PTR [edx-0x8]
  4116e4:	adc    DWORD PTR [ecx+eiz*8+0x0],0xc0460000
  4116ec:	(bad)  
  4116ed:	cwde   
  4116ee:	cld    
  4116ef:	mov    bh,BYTE PTR [edi+0x796df6]
  4116f5:	jmp    0x4397caea
  4116fa:	xchg   ecx,eax
  4116fb:	xor    BYTE PTR [ecx+edx*4-0x69],0x27
  411700:	js     0x4116c2
  411702:	test   DWORD PTR [esi],0x9cf72c8b
  411708:	(bad)  
  411709:	bound  esi,QWORD PTR [ecx]
  41170b:	shr    BYTE PTR [ecx-0x21],0x78
  41170f:	daa    
  411710:	sbb    cl,BYTE PTR [edx+ecx*1-0x8eb01ef]
  411717:	jnp    0x411755
  411719:	sub    DWORD PTR [esi-0x289e0031],esp
  41171f:	sbb    dl,bl
  411721:	jecxz  0x4116f2
  411723:	adc    dh,dl
  411725:	jg     0x411755
  411727:	add    DWORD PTR [ebp+edx*1+0x6a0006f0],eax
  41172e:	push   esp
  41172f:	pop    es
  411730:	add    bl,dl
  411732:	xchg   ebx,eax
  411733:	xor    BYTE PTR [ebp+ebx*4-0x59],0x27
  411738:	inc    eax
  411739:	push   eax
  41173a:	test   DWORD PTR [esi],0x7beca48b
  411740:	pop    es
  411741:	add    bh,al
  411743:	pop    edi
  411744:	(bad)  
  411745:	push   edx
  411746:	rcl    esp,0x50
  411749:	push   eax
  41174a:	add    eax,0x9294
  41174f:	add    BYTE PTR [eax],al
  411751:	dec    edx
  411752:	add    eax,DWORD PTR [ebp-0x74f77040]
  411758:	jne    0x41170c
  41175a:	loop   0x4117b2
  41175c:	jg     0x411769
  41175e:	add    ecx,DWORD PTR [ecx+0x2e1e645]
  411764:	cmp    DWORD PTR [edi-0x9],0xfffffffe
  411768:	imul   esp,DWORD PTR [edx-0x78],0xdb629073
  41176f:	or     al,0xf9
  411771:	or     al,BYTE PTR [ebx]
  411773:	mov    eax,DWORD PTR [ebp-0x1a]
  411776:	jnp    0x41177e
  411778:	lea    ebx,[edi]
  41177a:	jecxz  0x4117cc
  41177c:	mov    ebx,DWORD PTR [esp+edx*2-0x61a400b2]
  411783:	(bad)  
  411784:	(bad)  
  411785:	fimul  DWORD PTR [ebp+0x7bd775be]
  41178b:	jae    0x41176d
  41178d:	mov    dl,0x2d
  41178f:	jge    0x411792
  411791:	retf   0x4381
  411794:	clc    
  411795:	or     DWORD PTR [esi],0xa526581
  41179b:	push   0x69
  41179d:	pop    ss
  41179e:	mov    ebp,0xef65ff4e
  4117a3:	push   esi
  4117a4:	call   0x4009fb
  4117a9:	add    DWORD PTR [ebp-0xa],edi
  4117ac:	mov    ebx,edi
  4117ae:	out    dx,al
  4117af:	mov    DWORD PTR [ebp-0x2],eax
  4117b2:	mov    esp,?
  4117b4:	mov    ecx,0xa2000000
  4117b9:	jge    0x4117f9
  4117bb:	add    BYTE PTR [ebp+0x4e],dl
  4117be:	out    dx,eax
  4117bf:	test   ebx,esi
  4117c1:	rol    DWORD PTR [edi],1
  4117c3:	inc    esp
  4117c4:	inc    edx
  4117c5:	mov    eax,ds:0x5b7a0342
  4117ca:	ss mov dh,bl
  4117cd:	mov    ds:0x3de87342,al
  4117d2:	xor    DWORD PTR [edi],0xfffffff3
  4117d5:	push   ebx
  4117d6:	std    
  4117d7:	mov    eax,0xffc26b33
  4117dc:	mov    esi,0x768cb151
  4117e1:	push   eax
  4117e2:	pop    ss
  4117e3:	(bad)  
  4117e4:	adc    al,0x50
  4117e6:	test   DWORD PTR [ebx+edi*8+0x6f],eax
  4117ea:	sub    bh,BYTE PTR [edi-0x7de9f2f2]
  4117f0:	aaa    
  4117f1:	sub    al,0x17
  4117f3:	je     0x4117ec
  4117f5:	test   al,0x12
  4117f7:	inc    ah
  4117f9:	and    al,0x90
  4117fb:	mul    esp
  4117fd:	push   esp
  4117fe:	xor    ch,0x5c
  411801:	and    dl,al
  411803:	fisubr DWORD PTR [edi+0x58]
  411806:	push   es
  411807:	test   BYTE PTR [esi+0x1f],dh
  41180a:	add    al,BYTE PTR [eax]
  41180c:	pop    ecx
  41180d:	ror    BYTE PTR [eax-0x2e08288c],cl
  411813:	fcmove st,st(3)
  411815:	retf   
  411816:	sbb    edi,edi
  411818:	lods   al,BYTE PTR ds:[esi]
  411819:	cwde   
  41181a:	cwde   
  41181b:	repz add BYTE PTR [eax],al
  41181e:	add    BYTE PTR [esi-0x1e],dh
  411821:	or     edx,DWORD PTR [eax+0x70]
  411824:	pop    esp
  411825:	or     edx,DWORD PTR [edi+0x68]
  411828:	gs mov bl,0x8a
  41182b:	ss adc al,0x2a
  41182e:	mov    ds:0x83168c87,al
  411833:	mov    bl,0xb
  411835:	add    dh,bh
  411837:	mov    al,0x9
  411839:	xchg   ebp,eax
  41183a:	mov    esi,fs
  41183c:	push   es
  41183d:	dec    ebp
  41183e:	mov    esp,0x460c34c
  411843:	repz jnp 0x4117f1
  411846:	or     eax,ebx
  411848:	mov    ch,0x61
  41184a:	ds mov esp,0x5b07ab81
  411850:	mov    BYTE PTR [edi+edx*1],bh
  411853:	cmp    eax,0xf2902882
  411858:	or     al,0x29
  41185a:	stos   BYTE PTR es:[edi],al
  41185b:	pushf  
  41185c:	jnp    0x4117f9
  41185e:	pop    ds
  41185f:	mov    esp,0x1c1bc41e
  411864:	or     eax,0xb6ecc163
  411869:	mov    ch,0x8a
  41186b:	ss mov dh,0x71
  41186e:	sar    eax,0x1e
  411871:	xchg   DWORD PTR [edi],edx
  411873:	std    
  411874:	or     al,0x6c
  411876:	inc    esp
  411877:	or     BYTE PTR [eax],0xef
  41187a:	inc    edx
  41187b:	jo     0x4118ad
  41187d:	pop    esp
  41187e:	push   es
  41187f:	in     al,0x92
  411881:	lock mov al,BYTE PTR [eax]
  411884:	add    BYTE PTR [eax],al
  411886:	das    
  411887:	sub    ebp,DWORD PTR [ecx+0x4b]
  41188a:	aad    0x1f
  41188c:	inc    eax
  41188d:	cmp    ebp,ecx
  41188f:	or     al,0xc5
  411891:	nop
  411892:	in     al,dx
  411893:	push   ds
  411894:	and    BYTE PTR [ebx-0x43],0xc
  411898:	popa   
  411899:	nop
  41189a:	les    ebp,FWORD PTR [ecx+edx*1+0x71fb378b]
  4118a1:	or     eax,DWORD PTR [ebx+0xc]
  4118a4:	aaa    
  4118a5:	or     al,0x68
  4118a7:	add    eax,0xff24173f
  4118ac:	fld    DWORD PTR [ebx+0x2e]
  4118af:	ds stos BYTE PTR es:[edi],al
  4118b1:	or     esi,ebx
  4118b3:	xlat   BYTE PTR ds:[ebx]
  4118b4:	test   al,0xc3
  4118b6:	mov    dl,0xfb
  4118b8:	(bad)  
  4118b9:	call   0x692c9a01
  4118be:	adc    al,0x74
  4118c0:	add    ecx,ebp
  4118c2:	lock xlat BYTE PTR ds:[ebx]
  4118c4:	mov    edi,0x53043221
  4118c9:	out    0xe3,al
  4118cb:	dec    ebx
  4118cc:	push   ebp
  4118cd:	mov    dh,0x7b
  4118cf:	push   ebx
  4118d0:	jae    0x411918
  4118d2:	fisttp QWORD PTR [esi+eax*8]
  4118d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118d6:	or     BYTE PTR [eax+0x74],cl
  4118d9:	test   eax,0x8ebf87f0
  4118de:	fcomp  DWORD PTR [ebp-0xa]
  4118e1:	jmp    0x6ca1b9d6
  4118e6:	cmp    DWORD PTR [edi+edx*2],0x1
  4118ea:	add    BYTE PTR [eax],al
  4118ec:	add    BYTE PTR [ebp+0x79e8ff14],bl
  4118f2:	inc    edx
  4118f3:	dec    edi
  4118f4:	je     0x411969
  4118f6:	cwde   
  4118f7:	(bad)  
  4118f8:	(bad)  
  4118f9:	out    0xbb,al
  4118fb:	mov    edx,0x8006f0e8
  411900:	pop    esp
  411901:	dec    ebx
  411902:	mov    al,ds:0x80fee6fc
  411907:	ret    0x36d1
  41190a:	test   BYTE PTR [eax],al
  41190c:	jmp    0xa67b25d4
  411911:	test   BYTE PTR [edx+0x6f0e9c0],0x83
  411918:	shl    esi,0xfc
  41191b:	xor    DWORD PTR [ecx-0x11],0x6
  41191f:	add    BYTE PTR [ebx+0x51],al
  411922:	jp     0x411998
  411924:	lods   eax,DWORD PTR ds:[esi]
  411925:	addr16 jle 0x4119a4
  411928:	(bad)  
  411929:	iret   
  41192a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41192b:	imul   cl
  41192d:	lock jns 0x411974
  411930:	xchg   ecx,eax
  411931:	inc    edi
  411932:	popf   
  411933:	add    BYTE PTR [eax],al
  411935:	in     eax,0x83
  411937:	xor    DWORD PTR [ebp+edi*8-0xf],0xfffffffd
  41193c:	push   eax
  41193d:	fnstcw WORD PTR [edi+0x5b]
  411940:	clc    
  411941:	shl    DWORD PTR [ebx-0xe],cl
  411944:	jmp    DWORD PTR [edi+0x77]
  411947:	push   cs
  411948:	inc    eax
  411949:	dec    edx
  41194a:	mov    WORD PTR [esi+0x43845675],?
  411950:	hlt    
  411951:	add    BYTE PTR [eax],al
  411953:	add    BYTE PTR [edx+0x6ac6895a],cl
  411959:	test   BYTE PTR [ebx-0x8],bh
  41195c:	mov    ds:0x4a018818,al
  411961:	ss std 
  411963:	jmp    0x41197e
  411965:	xchg   dh,al
  411967:	jmp    DWORD PTR [ebx-0x2d7c11b5]
  41196d:	icebp  
  41196e:	jae    0x411980
  411970:	jo     0x411971
  411972:	mov    WORD PTR [ebp-0x16],es
  411975:	pop    ecx
  411976:	dec    esi
  411977:	jmp    DWORD PTR [edi]
  411979:	cmp    edx,DWORD PTR [eax+eax*2]
  41197c:	or     al,BYTE PTR [esi+0x51700cc2]
  411982:	mov    esi,DWORD PTR [ebp+0x46]
  411985:	dec    ebx
  411986:	out    0x9,al
  411988:	lds    eax,FWORD PTR [esi]
  41198a:	add    BYTE PTR [ebx-0x7bc826c],cl
  411990:	dec    edi
  411991:	dec    ecx
  411992:	out    0x89,al
  411994:	pop    ss
  411995:	ror    DWORD PTR [ebx-0x20de17b],cl
  41199b:	inc    DWORD PTR [ebx+0x49]
  41199e:	ror    BYTE PTR [ebp+0x4587eb07],cl
  4119a4:	jle    0x411927
  4119a6:	sub    DWORD PTR [edi+ecx*2-0xd],0xfffffffd
  4119ab:	push   eax
  4119ac:	cmovno ecx,esi
  4119af:	(bad)  
  4119b0:	repz fidivr DWORD PTR [ebx]
  4119b3:	add    al,0xf3
  4119b5:	pop    ds
  4119b6:	add    al,bh
  4119b8:	add    BYTE PTR [eax],al
  4119ba:	add    BYTE PTR [esi],ch
  4119bc:	add    BYTE PTR [ecx],0x0
  4119bf:	repz pop ds
  4119c1:	cmp    eax,DWORD PTR [edi+ecx*4+0x1e]
  4119c5:	add    al,BYTE PTR [eax]
  4119c7:	repz xchg esi,edi
  4119ca:	call   0xed4f:0x5c871ff2
  4119d1:	inc    ebx
  4119d2:	aaa    
  4119d3:	scas   al,BYTE PTR es:[edi]
  4119d4:	daa    
  4119d5:	add    edx,DWORD PTR [ebp+0x63429d33]
  4119db:	pop    ebx
  4119dc:	(bad)  
  4119dd:	adc    dh,bh
  4119df:	cmp    al,0x69
  4119e1:	mov    ah,0x5a
  4119e3:	sub    bl,dh
  4119e5:	(bad)  
  4119e6:	inc    edi
  4119e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119e9:	adc    BYTE PTR es:[edi],0x94
  4119ed:	add    BYTE PTR [eax],al
  4119ef:	repz dec esp
  4119f1:	lods   al,BYTE PTR ds:[esi]
  4119f2:	push   esi
  4119f3:	mov    DWORD PTR [edx-0x7b],ecx
  4119f6:	je     0x411a6b
  4119f8:	pop    eax
  4119f9:	sub    bl,BYTE PTR [ecx+0x33021ffd]
  4119ff:	add    eax,0x73448572
  411a04:	jo     0x41198b
  411a06:	mov    esp,0xfe121b6b
  411a0b:	stos   DWORD PTR es:[edi],eax
  411a0c:	sbb    eax,0x37730002
  411a11:	inc    edx
  411a12:	xchg   dl,dh
  411a14:	pop    ds
  411a15:	test   edi,esi
  411a17:	int3   
  411a18:	sub    BYTE PTR [esi+0x21ff10a],al
  411a1e:	cmp    eax,DWORD PTR [eax]
  411a20:	add    BYTE PTR [eax],al
  411a22:	mov    ch,0x18
  411a24:	xchg   BYTE PTR [edx],al
  411a26:	icebp  
  411a27:	pop    ds
  411a28:	add    cl,BYTE PTR [ebx+0x1412efb4]
  411a2e:	dec    ebx
  411a2f:	pop    es
  411a30:	sti    
  411a31:	ret    
  411a32:	pushf  
  411a33:	jle    0x411a58
  411a35:	xor    al,0xd9
  411a37:	inc    eax
  411a38:	in     eax,0x87
  411a3a:	popf   
  411a3b:	pop    es
  411a3c:	jmp    0x73f23344
  411a41:	xchg   ecx,eax
  411a42:	mov    al,0xae
  411a44:	nop
  411a45:	icebp  
  411a46:	jle    0x411a4e
  411a48:	jmp    0x6df74fcb
  411a4d:	cdq    
  411a4e:	xor    al,0x9
  411a50:	sti    
  411a51:	dec    edi
  411a52:	add    al,bh
  411a54:	call   0x6d3a4927
  411a59:	dec    ebx
  411a5a:	repz push es
  411a5c:	jmp    0xb3bcb91a
  411a61:	bt     DWORD PTR [ebx-0x55],edi
  411a65:	and    esp,DWORD PTR [ebx+0x6c891809]
  411a6b:	stc    
  411a6c:	arpl   WORD PTR [edi-0xd],dx
  411a6f:	push   es
  411a70:	jmp    0x7167d1f3
  411a75:	cld    
  411a76:	addr16 mov bl,0x30
  411a79:	mov    dh,0x7f
  411a7b:	mov    bl,0x1c
  411a7d:	mov    dh,0xb4
  411a7f:	jg     0x411afc
  411a81:	or     edi,ebp
  411a83:	mov    dh,0x84
  411a85:	mov    BYTE PTR [eax],al
  411a87:	add    BYTE PTR [eax],al
  411a89:	xor    al,0xf9
  411a8b:	imul   ecx,DWORD PTR [esi+0x7ee906f3],0x2f
  411a92:	daa    
  411a93:	jno    0x411a90
  411a95:	outs   dx,DWORD PTR ds:[esi]
  411a96:	mov    dl,0xb4
  411a98:	mov    ch,0x67
  411a9a:	mov    dl,0xa8
  411a9c:	mov    ch,0x5a
  411a9e:	div    DWORD PTR [esi]
  411aa0:	adc    edi,DWORD PTR [edi]
  411aa2:	das    
  411aa3:	lds    ebx,FWORD PTR [eax-0x4b424858]
  411aa9:	cld    
  411aaa:	cmp    edi,0x4b81f1a8
  411ab0:	call   0x24c421a5
  411ab5:	aaa    
  411ab6:	add    al,0xf
  411ab8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  411aba:	pop    es
  411abb:	add    cl,ch
  411abd:	or     eax,0x8862d3c3
  411ac2:	jnp    0x411b18
  411ac4:	xchg   ecx,eax
  411ac5:	inc    esi
  411ac6:	mov    al,ds:0x890e8ff
  411acb:	dec    esi
  411acc:	jbe    0x411a75
  411ace:	rol    BYTE PTR [ecx+ebp*4-0x17e17e0f],1
  411ad5:	lock push es
  411ad7:	mov    esp,DWORD PTR [eax+edi*8-0x749bf884]
  411ade:	inc    eax
  411adf:	push   ecx
  411ae0:	mov    bh,0x80
  411ae2:	or     DWORD PTR [eax+0xd],edx
  411ae5:	push   0x48
  411ae7:	push   cs
  411ae8:	fs lock add eax,0xe900
  411aef:	add    BYTE PTR [ebp+0x2862e7c2],ch
  411af5:	jnp    0x411b4b
  411af7:	inc    ebp
  411af8:	data16 mov dl,0xfe
  411afb:	xchg   esp,eax
  411afc:	fdiv   DWORD PTR [edi-0x7cb34702]
  411b02:	mov    edi,0xff217bde
  411b07:	call   0x1d8596fc
  411b0c:	ja     0x411aa0
  411b0e:	out    dx,eax
  411b0f:	mov    al,0xc0
  411b11:	clc    
  411b12:	test   DWORD PTR [esi],ebx
  411b14:	lock push es
  411b16:	add    BYTE PTR [eax-0x7c],dh
  411b19:	and    ecx,DWORD PTR [edx+0x7b7b0b2c]
  411b1f:	call   0xd5b59918
  411b24:	mov    eax,0xc5000390
  411b29:	jge    0x411ac1
  411b2b:	add    dl,cl
  411b2d:	add    ecx,DWORD PTR [ecx+0x4589b675]
  411b33:	or     BYTE PTR [ecx-0x4ecd15c0],bl
  411b39:	mov    DWORD PTR [esi],eax
  411b3b:	add    DWORD PTR [ebx-0x55fd01ec],0xdf491f6f
  411b45:	mov    DWORD PTR [bx+si-0x7e],edx
  411b49:	mov    al,al
  411b4b:	call   0x3efea1
  411b50:	ffreep st(2)
  411b52:	jb     0x411bb3
  411b54:	add    BYTE PTR [eax],al
  411b56:	add    BYTE PTR [eax],cl
  411b58:	add    dh,0xff
  411b5b:	out    0x47,eax
  411b5d:	imul   al
  411b5f:	jp     0x411b39
  411b61:	std    
  411b62:	call   eax
  411b64:	fucompp 
  411b66:	aaa    
  411b67:	shl    DWORD PTR [edx+0x6],1
  411b6a:	mov    dl,0x8a
  411b6c:	mov    al,ah
  411b6e:	call   0x3efee0
  411b73:	lahf   
  411b74:	ret    0x3d72
  411b77:	jl     0x411be2
  411b79:	inc    BYTE PTR [edx+0x6de6f5e2]
  411b7f:	mov    dl,0xf5
  411b81:	std    
  411b82:	mov    ebp,edx
  411b84:	jg     0x411b7a
  411b86:	je     0x411bac
  411b88:	dec    ebp
  411b89:	or     eax,0xf84b87f5
  411b8f:	loop   0x411c06
  411b91:	fdivr  st,st(7)
  411b93:	in     eax,0x84
  411b95:	aad    0x56
  411b97:	repnz cmp DWORD PTR [edi+edi*8-0x7b0c242b],ebx
  411b9f:	mov    cl,0x9e
  411ba1:	adc    DWORD PTR [ebx],esi
  411ba3:	repz scas eax,DWORD PTR es:[edi]
  411ba5:	cdq    
  411ba6:	mov    edi,0x4004303e
  411bab:	outs   dx,BYTE PTR ds:[esi]
  411bac:	cmp    ecx,DWORD PTR [edi+eiz*8]
  411baf:	push   edx
  411bb0:	stos   BYTE PTR es:[edi],al
  411bb1:	adc    dh,bh
  411bb3:	cwde   
  411bb4:	repnz aam 0xf5
  411bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb8:	sub    ebx,DWORD PTR [eax]
  411bba:	mov    al,BYTE PTR [eax]
  411bbc:	add    BYTE PTR [eax],al
  411bbe:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  411bc0:	test   BYTE PTR [edi+eax*4+0x0],al
  411bc4:	int    0x46
  411bc6:	imul   esp
  411bc8:	sub    DWORD PTR [edx-0x7c],0xffffff95
  411bcc:	adc    BYTE PTR [edx+0x76108c36],cl
  411bd2:	jmp    0x411c4c
  411bd4:	stc    
  411bd5:	dec    edi
  411bd6:	ins    BYTE PTR es:[edi],dx
  411bd7:	pop    ds
  411bd8:	in     al,dx
  411bd9:	(bad)  
  411bda:	scas   al,BYTE PTR es:[edi]
  411bdb:	jg     0x411c59
  411bdd:	inc    esp
  411bde:	aas    
  411bdf:	jns    0x411b9f
  411be1:	out    dx,eax
  411be2:	jo     0x411b8f
  411be4:	and    eax,0xe8080b
  411be9:	cmp    bh,0x54
  411bec:	adc    dh,bh
  411bee:	push   0xe28a0dbb
  411bf3:	lahf   
  411bf4:	mov    dl,0xfe
  411bf6:	rcl    edi,0x7c
  411bf9:	inc    esp
  411bfa:	sbb    ebp,DWORD PTR [ecx-0x7]
  411bfd:	dec    edi
  411bfe:	sbb    al,0xbf
  411c00:	stc    
  411c01:	mov    ch,BYTE PTR [esi-0x5cf883c5]
  411c07:	sbb    al,0xb2
  411c09:	pop    es
  411c0a:	js     0x411bb7
  411c0c:	or     eax,0x7c2786fe
  411c11:	pop    es
  411c12:	mov    ds:0x7817b004,eax
  411c17:	mov    dl,0x21
  411c19:	mov    bh,bl
  411c1b:	lahf   
  411c1c:	adc    BYTE PTR [eax-0x15],dl
  411c1f:	push   es
  411c20:	jb     0x411beb
  411c22:	add    BYTE PTR [eax],al
  411c24:	add    al,bl
  411c26:	xchg   ecx,eax
  411c27:	out    dx,eax
  411c28:	mov    bl,0xcd
  411c2a:	push   edi
  411c2b:	fistp  QWORD PTR [edx+0x27]
  411c2e:	inc    DWORD PTR [ecx-0x48]
  411c31:	and    al,0xef
  411c33:	cmp    BYTE PTR [esi*4-0x436640fb],dl
  411c3a:	add    eax,0x4702afdd
  411c3f:	out    0xae,eax
  411c41:	bound  esi,QWORD PTR ds:[eax-0x746dc0bd]
  411c48:	test   DWORD PTR [eax-0xcfc1736],ebx
  411c4e:	pop    ecx
  411c4f:	xor    eax,0xde2714b7
  411c54:	ret    
  411c55:	je     0x411cc4
  411c57:	daa    
  411c58:	imul   DWORD PTR [edi+eax*1]
  411c5b:	jg     0x411c31
  411c5d:	iret   
  411c5e:	pop    es
  411c5f:	out    0x7a,eax
  411c61:	fs (bad) 
  411c63:	in     al,0x23
  411c65:	outs   dx,DWORD PTR ds:[esi]
  411c66:	add    eax,0x77087ef
  411c6b:	out    0x3,eax
  411c6d:	fstp   DWORD PTR [esi+0x5c]
  411c70:	cdq    
  411c71:	sub    al,0x5e
  411c73:	dec    edi
  411c74:	xlat   BYTE PTR ds:[ebx]
  411c75:	inc    eax
  411c76:	push   es
  411c77:	out    0x99,eax
  411c79:	retf   
  411c7a:	xchg   ebx,eax
  411c7b:	mov    esp,0xfbeebc27
  411c80:	pop    ss
  411c81:	sbb    al,0x5
  411c83:	jae    0x411c8c
  411c85:	jo     0x411cf2
  411c87:	adc    eax,DWORD PTR [eax+eax*1]
  411c8a:	add    BYTE PTR [eax],al
  411c8c:	js     0x411c62
  411c8e:	mov    eax,0xb8d6b780
  411c93:	mov    dh,0xfd
  411c95:	push   ebp
  411c96:	xrelease mov BYTE PTR [edx*1+0x6f3c864],dh
  411c9e:	add    cl,ch
  411ca0:	imul   ecx,DWORD PTR ds:0x56e89c8b,0x24a0e655
  411caa:	sub    DWORD PTR [ecx-0x17cd7433],0xfffffff0
  411cb1:	push   es
  411cb2:	push   0x33
  411cb4:	jb     0x411c71
  411cb6:	test   al,0xc7
  411cb8:	in     eax,0x4
  411cba:	pop    ecx
  411cbb:	rol    DWORD PTR [ecx],1
  411cbd:	stc    
  411cbe:	add    cl,ch
  411cc0:	sub    DWORD PTR [ebx-0x8],ecx
  411cc3:	bound  ebx,QWORD PTR [eax-0xcc702ac]
  411cc9:	in     eax,dx
  411cca:	cld    
  411ccb:	jmp    0x3ccc23c0
  411cd0:	rcl    DWORD PTR [ebp+0x50],cl
  411cd3:	mov    es,WORD PTR [edi+0x18]
  411cd6:	sub    DWORD PTR [ecx-0x1613748b],0xfffffff0
  411cdd:	push   es
  411cde:	mov    DWORD PTR [ebx+edx*1],ebp
  411ce1:	xchg   ecx,eax
  411ce2:	or     BYTE PTR [ebx+ebx*4-0xc],bl
  411ce6:	push   edx
  411ce7:	rol    DWORD PTR [eax+0x1d],1
  411cea:	inc    eax
  411ceb:	jmp    0x6c512270
  411cf0:	add    BYTE PTR [eax],al
  411cf2:	add    BYTE PTR [eax-0xfdc7cec],dh
  411cf8:	push   es
  411cf9:	add    BYTE PTR [edi],ch
  411cfb:	sub    eax,DWORD PTR ds:0x4ac6ee00
  411d01:	std    
  411d02:	cdq    
  411d03:	jae    0x411c90
  411d05:	test   al,0x2f
  411d07:	in     eax,dx
  411d08:	add    al,0x51
  411d0a:	xchg   ebx,eax
  411d0b:	cmp    al,0x61
  411d0d:	mov    ebx,DWORD PTR [eax+esi*1+0x2]
  411d11:	(bad)  
  411d12:	push   ss
  411d13:	call   0xed4ffd5e
  411d18:	pop    esi
  411d19:	push   edi
  411d1a:	add    BYTE PTR [edi+0x448e0e47],al
  411d20:	or     BYTE PTR [eax],al
  411d22:	add    BYTE PTR [ecx-0x31],dl
  411d25:	in     eax,dx
  411d26:	push   0x76
  411d28:	mov    al,0x8c
  411d2a:	push   ebp
  411d2b:	ret    0x52b8
  411d2e:	lea    eax,[edi+0x3]
  411d31:	(bad)  
  411d32:	call   FWORD PTR [ebp+0x510067b8]
  411d38:	cmp    cl,BYTE PTR [edi-0x77]
  411d3b:	mov    db1,edx
  411d3e:	or     BYTE PTR [edx],cl
  411d40:	adc    dl,BYTE PTR [eax+0xc]
  411d43:	pop    ss
  411d44:	dec    ebx
  411d45:	je     0x411da3
  411d47:	xor    al,0x86
  411d49:	mov    esp,0xfe114d08
  411d4e:	add    BYTE PTR [edi],bl
  411d50:	mov    WORD PTR ds:0x71115dff,es
  411d56:	sbb    BYTE PTR [eax],al
  411d58:	add    BYTE PTR [eax],al
  411d5a:	popf   
  411d5b:	pop    edx
  411d5c:	mov    WORD PTR [eax],cs
  411d5e:	ins    DWORD PTR es:[edi],dx
  411d5f:	adc    esi,edi
  411d61:	data16 (bad) [edi]
  411d64:	cmp    eax,0xbd864974
  411d69:	add    bh,BYTE PTR ds:0xc766055a
  411d6f:	aas    
  411d70:	je     0x411d61
  411d72:	xor    al,0x86
  411d74:	xor    eax,0x31052640
  411d79:	rcl    bh,0x4a
  411d7c:	jno    0x411db0
  411d7e:	mov    edi,0xedff058b
  411d83:	adc    DWORD PTR [ebp-0x7d],ecx
  411d86:	rcl    BYTE PTR [ecx],cl
  411d88:	mov    WORD PTR [ebp-0x1a],cs
  411d8b:	and    dl,BYTE PTR [ebx-0x7eee3228]
  411d91:	shl    BYTE PTR [esi-0xd],0x32
  411d95:	shl    bl,0x85
  411d98:	inc    ecx
  411d99:	je     0x411d4e
  411d9b:	in     eax,dx
  411d9c:	ror    DWORD PTR [esi+eiz*4-0x347ee5ff],0x1
  411da4:	or     eax,0xc6cf9ea
  411da9:	jns    0x411e12
  411dab:	jmp    0x411d2d
  411dad:	div    edx
  411daf:	bound  eax,QWORD PTR [eax]
  411db1:	(bad)  
  411db2:	ss loope 0x411d7e
  411db5:	pop    esp
  411db6:	(bad)  
  411db7:	jmp    0xd1fd633f
  411dbc:	or     al,0x8a
  411dbe:	add    BYTE PTR [eax],al
  411dc0:	add    BYTE PTR [esi],ch
  411dc2:	sar    BYTE PTR [eax+0x7],0x43
  411dc6:	shl    DWORD PTR [edx+0x243b7807],0x8a
  411dcd:	les    edi,FWORD PTR ss:[eax+0x7]
  411dd1:	inc    ebx
  411dd2:	test   eax,0x2b7807b2
  411dd7:	or     al,0x8a
  411dd9:	sti    
  411dda:	aas    
  411ddb:	or     edx,DWORD PTR [eax-0x1d]
  411dde:	push   0x41
  411de0:	mov    ch,BYTE PTR [esi]
  411de2:	mov    BYTE PTR [eax+0x7],bh
  411de5:	cld    
  411de6:	imul   ebx,DWORD PTR [ebx],0xfffffffd
  411de9:	fs jns 0x411d9d
  411dec:	inc    dl
  411dee:	out    0x78,eax
  411df0:	push   es
  411df1:	mov    esp,0x7807b168
  411df6:	ret    
  411df7:	adc    eax,0x19b79c69
  411dfc:	mov    dh,0x4d
  411dfe:	push   ecx
  411dff:	or     al,0x5e
  411e01:	xchg   ebp,eax
  411e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e03:	cmp    al,dl
  411e05:	ret    0x4557
  411e08:	jae    0x411dfc
  411e0a:	out    dx,eax
  411e0b:	int    0x3
  411e0d:	mov    eax,ds:0xcff97e1
  411e12:	pop    es
  411e13:	cmp    al,0x9
  411e15:	or     eax,0x6ca1002
  411e1a:	add    dl,BYTE PTR [edi]
  411e1c:	sbb    dl,ch
  411e1e:	out    dx,al
  411e1f:	mov    dl,BYTE PTR [edi]
  411e21:	cmc    
  411e22:	add    DWORD PTR [eax],edx
  411e24:	and    eax,0xe9000000
  411e29:	add    edi,edi
  411e2b:	sbb    al,BYTE PTR [edi-0xb]
  411e2e:	test   BYTE PTR [ebx],0x4a
  411e31:	or     bh,bh
  411e33:	dec    edx
  411e34:	fiadd  DWORD PTR [ecx]
  411e36:	out    0xad,eax
  411e38:	mov    cl,0x59
  411e3a:	jb     0x411e48
  411e3c:	outs   dx,DWORD PTR ds:[esi]
  411e3d:	aam    0x5b
  411e3f:	fucomp st(5)
  411e41:	mov    ecx,0xc66fa1e9
  411e46:	cmp    esp,ebp
  411e48:	jno    0x411e48
  411e4a:	not    DWORD PTR [eax-0x3981ee01]
  411e50:	repnz test DWORD PTR [edi+0x6a0c208c],ebp
  411e57:	or     al,0x24
  411e59:	jl     0x411e41
  411e5b:	sbb    esp,ebx
  411e5d:	push   es
  411e5e:	out    0x3,eax
  411e60:	sbb    al,0xc6
  411e62:	jg     0x411de8
  411e64:	je     0x411e67
  411e66:	call   0xc6c65015
  411e6b:	add    ebx,ecx
  411e6d:	push   cs
  411e6e:	bts    DWORD PTR [ecx],esi
  411e71:	xor    eax,0x7a24cfa7
  411e76:	sar    edx,1
  411e78:	test   DWORD PTR [eax*8-0x3685d332],ecx
  411e7f:	mov    cl,0x1
  411e81:	stc    
  411e82:	push   0xd
  411e84:	add    al,0x7c
  411e86:	(bad)  
  411e88:	gs dec esp
  411e8a:	jmp    0x411f15
  411e8f:	sub    edi,DWORD PTR [esi+0x0]
  411e92:	mov    ebp,0x91f785f3
  411e97:	or     DWORD PTR [edx],0x6a
  411e9a:	in     eax,dx
  411e9b:	pop    eax
  411e9c:	add    al,0xd0
  411e9e:	mov    edx,0x640ab809
  411ea3:	dec    esi
  411ea4:	shl    DWORD PTR [esi+0x6a],1
  411ea7:	in     al,0xe
  411ea9:	jne    0x411e9c
  411eab:	cmc    
  411eac:	clc    
  411ead:	mov    esi,DWORD PTR [ebp-0x1]
  411eb0:	iret   
  411eb1:	jmp    0xbda07a7f
  411eb6:	xchg   DWORD PTR [ebp-0x3],ebp
  411eb9:	add    ebx,DWORD PTR [esi-0x31]
  411ebc:	add    eax,0xf7746cf6
  411ec1:	mov    edx,0x6e5793b9
  411ec7:	xchg   edx,eax
  411ec8:	test   ecx,edi
  411eca:	in     al,dx
  411ecb:	or     DWORD PTR ds:0x742bb701,0xc67580ef
  411ed5:	add    al,dl
  411ed7:	xor    DWORD PTR [ebp+0x66],ebx
  411eda:	ins    BYTE PTR es:[edi],dx
  411edb:	iret   
  411edc:	jae    0x411edf
  411ede:	push   0xffffffc8
  411ee0:	push   es
  411ee1:	xchg   esi,ebx
  411ee3:	dec    edx
  411ee4:	lds    ebp,FWORD PTR [edx-0x1f]
  411ee7:	test   DWORD PTR [eax],0x35a2aa58
  411eed:	test   dl,0x22
  411ef0:	je     0x411f38
  411ef2:	out    0x0,al
  411ef4:	add    BYTE PTR [eax],al
  411ef6:	ror    DWORD PTR ds:0x741ab266,0x3e
  411efd:	sbb    dh,BYTE PTR [edi+0x620cf784]
  411f03:	or     ebp,DWORD PTR [edx-0x15]
  411f06:	mov    ch,ch
  411f08:	adc    eax,0x732ce76a
  411f0d:	add    BYTE PTR [edi+0x21],cl
  411f10:	or     eax,0x38129966
  411f15:	ja     0x411f56
  411f17:	mov    eax,ds:0x55350af3
  411f1c:	enter  0x6e8d,0xfe
  411f20:	int    0x83
  411f22:	fmul   DWORD PTR [ecx]
  411f24:	or     eax,0xf88910b7
  411f29:	xor    BYTE PTR [ecx+0x27],bl
  411f2c:	arpl   WORD PTR [ebp-0x7cfd6fdd],ax
  411f32:	and    cl,BYTE PTR [ebx]
  411f34:	test   al,0x2
  411f36:	pop    esi
  411f37:	add    eax,0x8f1def5
  411f3c:	push   0x8
  411f3e:	xor    bh,BYTE PTR [esi+esi*1+0x5e]
  411f42:	cdq    
  411f43:	scas   eax,DWORD PTR es:[edi]
  411f44:	mov    ch,ah
  411f46:	push   ecx
  411f47:	ror    BYTE PTR [ecx],0x81
  411f4a:	jbe    0x411f4a
  411f4c:	add    BYTE PTR [eax],al
  411f4e:	call   0x3:0x9800bbb5
  411f55:	push   edi
  411f56:	mov    ds:0x796fd3,eax
  411f5b:	add    BYTE PTR [eax],al
  411f5d:	cld    
  411f5e:	or     eax,0x22c90874
  411f63:	gs call 0x37a:0x7d820d65
  411f6b:	je     0x411f91
  411f6d:	gs (bad) 
  411f6f:	or     eax,0xfb16bf83
  411f74:	jmp    ebp
  411f76:	or     cl,BYTE PTR [ebx-0x1f3217b]
  411f7c:	push   DWORD PTR [edx-0x3d]
  411f7f:	add    BYTE PTR [ecx],al
  411f81:	pop    edx
  411f82:	adc    bl,0x8b
  411f85:	add    DWORD PTR [eax-0x7c],edi
  411f88:	hlt    
  411f89:	repz push edi
  411f8b:	pop    es
  411f8c:	dec    BYTE PTR [ebx-0x2a]
  411f8f:	add    eax,DWORD PTR [ecx]
  411f91:	rep outs dx,BYTE PTR ds:[esi]
  411f93:	retf   
  411f94:	inc    ebx
  411f95:	mov    dl,0x97
  411f97:	mov    esi,0x9c5de74
  411f9c:	add    bl,dh
  411f9e:	in     eax,dx
  411f9f:	jbe    0x412013
  411fa1:	sti    
  411fa2:	mov    edi,0xa276019b
  411fa7:	stc    
  411fa8:	push   edi
  411fa9:	or     eax,ebx
  411fab:	dec    ecx
  411fac:	(bad)  
  411fad:	hlt    
  411fae:	arpl   WORD PTR [ebp-0x24ed7f9],di
  411fb4:	je     0x411fc8
  411fb6:	dec    eax
  411fb7:	adc    al,BYTE PTR [eax]
  411fb9:	repz out dx,eax
  411fbb:	lahf   
  411fbc:	cmp    ch,ch
  411fbe:	je     0x411fb0
  411fc0:	push   cs
  411fc1:	add    BYTE PTR [eax],al
  411fc3:	add    BYTE PTR [esi+ebp*8+0x3ff74c7c],al
  411fca:	jns    0x411fcc
  411fcc:	outs   dx,BYTE PTR ds:[esi]
  411fcd:	xor    esi,edi
  411fcf:	dec    edi
  411fd0:	and    al,cl
  411fd2:	push   es
  411fd3:	cwde   
  411fd4:	lods   al,BYTE PTR ds:[esi]
  411fd5:	lds    edx,FWORD PTR [ecx+0x0]
  411fd8:	cwde   
  411fd9:	repnz sar DWORD PTR [edi-0x3ec6e9c4],cl
  411fe0:	out    0xef,eax
  411fe2:	scas   al,BYTE PTR es:[edi]
  411fe3:	mov    bl,BYTE PTR [edi-0xdf8ea91]
  411fe9:	out    dx,eax
  411fea:	add    DWORD PTR [esi+0x24],edx
  411fed:	push   ebp
  411fee:	(bad)  
  411ff0:	repz out dx,eax
  411ff2:	jl     0x411fe3
  411ff4:	js     0x411fa3
  411ff6:	lahf   
  411ff7:	cmp    cl,BYTE PTR [ebx-0xa]
  411ffa:	std    
  411ffb:	xor    DWORD PTR [ebx],esi
  411ffd:	mov    DWORD PTR [eax-0x4e4e63f2],esp
  412003:	inc    dh
  412005:	push   es
  412006:	out    dx,eax
  412007:	jbe    0x411fa7
  412009:	adc    BYTE PTR [ecx+0x56a0301b],bh
  41200f:	or     dl,cl
  412011:	push   es
  412012:	add    cl,BYTE PTR [eax*8+0xcb32909]
  412019:	jge    0x411fc4
  41201b:	add    dh,bl
  41201d:	outs   dx,BYTE PTR ds:[esi]
  41201e:	das    
  41201f:	add    dh,bl
  412021:	push   es
  412022:	pop    esp
  412023:	shl    esp,0x56
  412026:	xchg   ecx,eax
  412027:	add    eax,0x8d000000
  41202c:	(bad)  
  41202d:	push   DWORD PTR [esi+0x7e]
  412030:	add    ch,BYTE PTR [edi-0x57bd11c0]
  412036:	mov    cl,0x37
  412038:	out    dx,eax
  412039:	dec    ecx
  41203a:	push   eax
  41203b:	in     eax,0xfd
  41203d:	push   0xffffff86
  41203f:	call   0xd61f9b4a
  412044:	jae    0x412021
  412046:	test   BYTE PTR [edi-0x3af81a02],dl
  41204c:	push   es
  41204d:	ins    BYTE PTR es:[edi],dx
  41204e:	add    esp,0xcc07d6fc
  412054:	jns    0x41203d
  412056:	add    al,0xf3
  412058:	shl    bh,0x1
  41205b:	repz push es
  41205d:	ins    BYTE PTR es:[edi],dx
  41205e:	and    DWORD PTR [esp+edi*8-0x4873f84a],0xb6f304e7
  412069:	call   0xaa114714
  41206e:	cld    
  41206f:	jl     0x4120c3
  412071:	bound  ebx,QWORD PTR [eax]
  412073:	jae    0x41205f
  412075:	jmp    0x412079
  412077:	repz push es
  412079:	sbb    ch,BYTE PTR [esi+0x1e7ff73]
  41207f:	repz push es
  412081:	add    bl,bh
  412083:	jle    0x41200f
  412085:	mov    ecx,fs
  412087:	lock cld 
  412089:	std    
  41208a:	enterw 0x87ed,0xac
  41208f:	add    BYTE PTR [eax],al
  412091:	add    ah,ch
  412093:	inc    eax
  412094:	mov    edi,0x7b888ede
  412099:	loope  0x41208b
  41209b:	xchg   ecx,eax
  41209c:	push   es
  41209d:	jo     0x4120d1
  41209f:	cmc    
  4120a0:	je     0x4120a9
  4120a2:	hlt    
  4120a3:	jb     0x4120ad
  4120a5:	push   0xffffff92
  4120a7:	in     eax,0xfe
  4120a9:	cs hlt 
  4120ab:	std    
  4120ac:	mov    WORD PTR [edi+eiz*8-0x5],gs
  4120b0:	std    
  4120b1:	push   ds
  4120b2:	fist   WORD PTR ds:0x70f0e800
  4120b8:	add    al,0xb3
  4120ba:	imul   ecx,DWORD PTR [ebx-0x8],0x74
  4120be:	jb     0x4120a4
  4120c0:	(bad)  
  4120c1:	(bad)  
  4120c2:	cmc    
  4120c3:	jecxz  0x412113
  4120c5:	call   0x6cc027b9
  4120ca:	clc    
  4120cb:	inc    edi
  4120cc:	aas    
  4120cd:	aas    
  4120ce:	mov    dl,0x73
  4120d0:	push   ds
  4120d1:	fisub  WORD PTR [ebx+0x4]
  4120d4:	mov    ebp,DWORD PTR [edi+ebx*8]
  4120d7:	dec    ebx
  4120d8:	push   esi
  4120d9:	pop    esp
  4120da:	sbb    ebp,eax
  4120dc:	cld    
  4120dd:	(bad)  
  4120de:	in     eax,dx
  4120df:	les    eax,FWORD PTR [ebx-0x47]
  4120e2:	lock or BYTE PTR [eax],al
  4120e5:	jmp    0xaf3f85e2
  4120ea:	cmc    
  4120eb:	xchg   eax,eax
  4120ed:	sbb    al,0x7d
  4120ef:	inc    edx
  4120f0:	cmp    DWORD PTR [ebx+eiz*8],edx
  4120f3:	jno    0x412097
  4120f5:	fiadd  DWORD PTR [eax]
  4120f7:	add    BYTE PTR [eax],al
  4120f9:	xor    BYTE PTR [edx+0x59],bl
  4120fc:	mov    al,ds:0x7b2
  412101:	loope  0x41213c
  412103:	jmp    0x6e83:0xe98007f6
  41210a:	hlt    
  41210b:	mov    al,BYTE PTR [ebp+0x2e]
  41210e:	stos   BYTE PTR es:[edi],al
  41210f:	mov    dh,BYTE PTR [ebx+0xe]
  412112:	adc    BYTE PTR [ecx+0x1e],0xe6
  412116:	stos   DWORD PTR es:[edi],eax
  412117:	mov    bh,BYTE PTR [ebp+0x52]
  41211a:	loope  0x412116
  41211c:	add    edx,ebp
  41211e:	mov    bh,0x56
  412120:	push   ebx
  412121:	mov    eax,ds:0xe6458840
  412126:	pop    ds
  412127:	das    
  412128:	int3   
  412129:	or     ecx,DWORD PTR [eax]
  41212b:	mov    eax,DWORD PTR [ebp-0x3e]
  41212e:	mov    bh,0x67
  412130:	inc    eax
  412131:	int    0x96
  412133:	or     edi,edi
  412135:	addr16 add bh,bh
  412138:	adc    eax,0x3df64e
  41213d:	push   edi
  41213e:	dec    eax
  41213f:	jno    0x41217f
  412141:	test   eax,0xdd4d853a
  412146:	iret   
  412147:	dec    esp
  412148:	or     al,0x54
  41214a:	jecxz  0x41215a
  41214c:	mov    dh,0x67
  41214e:	add    al,0x8a
  412150:	inc    ebp
  412151:	ret    0x517d
  412154:	adc    eax,0x811d7ba
  412159:	pushf  
  41215a:	mov    ebx,0x80fe
  41215f:	add    BYTE PTR [edi],bh
  412161:	add    al,BYTE PTR [ecx]
  412163:	jne    0x4120fb
  412165:	cmp    DWORD PTR [edi+edi*8-0x76],eax
  412169:	enter  0x4d3a,0x8e
  41216d:	xchg   ebp,eax
  41216e:	fimul  WORD PTR [ebp-0xb2f529]
  412174:	out    0xa,eax
  412176:	(bad)  
  412177:	jne    0x412107
  412179:	add    dh,BYTE PTR [eax+ecx*1-0xd]
  41217d:	xchg   esp,eax
  41217e:	in     eax,dx
  41217f:	dec    ebx
  412180:	add    DWORD PTR [esi],ebp
  412182:	add    al,0xff
  412184:	fidivr WORD PTR [ecx+0x77]
  412187:	rol    ah,cl
  412189:	jl     0x41211b
  41218b:	sbb    eax,0xe737691f
  412190:	ds test al,0x1
  412193:	add    BYTE PTR [ebx+eax*8-0x12103ec6],ah
  41219a:	js     0x41219b
  41219c:	jno    0x4121f3
  41219e:	add    esi,DWORD PTR [ebx-0x8]
  4121a1:	bound  eax,QWORD PTR [ebx+esi*2-0x14]
  4121a5:	popf   
  4121a6:	add    al,0x14
  4121a8:	push   ebx
  4121a9:	ffreep st(1)
  4121ab:	push   DWORD PTR [ecx]
  4121ad:	call   0x820c:0x4170eb78
  4121b4:	pop    ss
  4121b5:	icebp  
  4121b6:	mov    al,0x69
  4121b8:	repz js 0x4121e7
  4121bb:	mov    ch,BYTE PTR [esi-0x1301210b]
  4121c1:	mov    DWORD PTR [edi+ecx*2],eax
  4121c4:	add    BYTE PTR [eax],al
  4121c6:	add    ah,ah
  4121c8:	jnp    0x4121b7
  4121ca:	imul   esi,ebx,0xd40f8ef8
  4121d0:	jnp    0x4121c7
  4121d2:	inc    BYTE PTR [esi-0x18]
  4121d5:	add    al,0x14
  4121d7:	add    edi,esi
  4121d9:	sar    edi,0x71
  4121dc:	call   0x1e3095e5
  4121e1:	inc    esp
  4121e2:	jmp    0xeff3:0x17bed0d6
  4121e9:	cmp    edi,0x178ded6b
  4121ef:	jo     0x412215
  4121f1:	loopne 0x4121fa
  4121f3:	mov    WORD PTR [ebp-0x4b],gs
  4121f6:	and    esi,edi
  4121f8:	push   es
  4121f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121fa:	jbe    0x41222c
  4121fc:	and    ebp,edi
  4121fe:	mov    bl,0x24
  412200:	push   edi
  412201:	add    DWORD PTR [ebx+ebx*2],eax
  412204:	in     eax,dx
  412205:	jmp    0xe8f8150d
  41220a:	test   al,0x69
  41220c:	in     al,0x1c
  41220e:	inc    edx
  41220f:	add    BYTE PTR [edi],al
  412211:	sbb    al,0x79
  412213:	pop    eax
  412214:	pop    eax
  412215:	sbb    BYTE PTR [edi-0x51],dh
  412218:	(bad)  
  412219:	mov    bh,0x78
  41221b:	mov    bh,0xe
  41221d:	pop    esi
  41221e:	shl    DWORD PTR ds:0xecf1ff14,cl
  412224:	push   es
  412225:	fs inc ebx
  412227:	lahf   
  412228:	add    bh,cl
  41222a:	inc    ebx
  41222b:	add    BYTE PTR [eax],al
  41222d:	add    BYTE PTR [ecx],cl
  41222f:	or     al,0x72
  412231:	mov    esi,0x78ed901c
  412236:	mov    bh,0xfa
  412238:	pusha  
  412239:	mov    ebp,0x3ae8b6f0
  41223e:	xor    al,BYTE PTR [ebx]
  412240:	out    0xae,eax
  412242:	imul   ebp,ebx,0x85fc176a
  412248:	test   BYTE PTR [edi],cl
  41224a:	in     al,0x50
  41224c:	mov    edx,0x6c084a43
  412251:	xchg   ah,bl
  412253:	lods   eax,DWORD PTR ds:[esi]
  412254:	fs mov esi,0x8dee56c0
  41225a:	mov    esp,0xbe0c2c8d
  41225f:	jae    0x412234
  412261:	add    eax,DWORD PTR [edx]
  412263:	cli    
  412264:	cld    
  412265:	inc    edi
  412266:	add    DWORD PTR [edi-0x19],eax
  412269:	mov    BYTE PTR [ebx-0x4cca148d],dh
  41226f:	in     eax,dx
  412270:	in     al,dx
  412271:	mov    ?,WORD PTR [eax]
  412273:	repz add BYTE PTR [eax-0x7],ah
  412277:	pop    DWORD PTR [ebx-0x4f]
  41227a:	jbe    0x4122bc
  41227c:	add    al,0x59
  41227e:	neg    BYTE PTR [ebx-0x39]
  412281:	stos   DWORD PTR es:[edi],eax
  412282:	jmp    0x41228a
  412284:	std    
  412285:	sbb    eax,0xe96a0b1b
  41228a:	icebp  
  41228b:	jae    0x4122b1
  41228d:	fyl2x  
  41228f:	jae    0x4122b5
  412291:	fld    DWORD PTR [eax]
  412293:	add    BYTE PTR [eax],al
  412295:	icebp  
  412296:	aaa    
  412297:	std    
  412298:	fdiv   QWORD PTR [esp+edx*1-0x21b616c0]
  41229f:	sbb    DWORD PTR [ecx],ebp
  4122a1:	cmp    dh,bl
  4122a3:	ret    0xf0ed
  4122a6:	push   ebp
  4122a7:	mov    DWORD PTR [ebp-0x63],eax
  4122aa:	push   es
  4122ab:	mov    esp,DWORD PTR [eax+eax*1+0xbcfd57]
  4122b2:	nop
  4122b3:	inc    ebx
  4122b4:	icebp  
  4122b5:	icebp  
  4122b6:	jb     0x4122c4
  4122b8:	ss (bad) 
  4122ba:	sti    
  4122bb:	adc    esi,ebp
  4122bd:	fiadd  WORD PTR [esi+0x0]
  4122c0:	ins    BYTE PTR es:[edi],dx
  4122c1:	aaa    
  4122c2:	jne    0x4122c7
  4122c4:	push   0x27
  4122c6:	sti    
  4122c7:	jmp    0x1085a0b6
  4122cc:	lods   al,BYTE PTR ds:[esi]
  4122cd:	scas   al,BYTE PTR es:[edi]
  4122ce:	or     eax,DWORD PTR [eax]
  4122d0:	call   0xc478:0xdc38de25
  4122d7:	inc    ecx
  4122d8:	jmp    0x2f975428
  4122dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122de:	les    eax,FWORD PTR [ecx-0x17]
  4122e1:	sbb    bh,dl
  4122e3:	adc    ecx,ebp
  4122e5:	fiadd  WORD PTR [esi+0x0]
  4122e8:	adc    edx,edx
  4122ea:	sahf   
  4122eb:	ret    
  4122ec:	sub    ch,bh
  4122ee:	jae    0x412307
  4122f0:	add    BYTE PTR [ebx],ah
  4122f2:	daa    
  4122f3:	or     al,0xb7
  4122f5:	leave  
  4122f6:	add    al,BYTE PTR [ebp+0x1d]
  4122fc:	xchg   edx,eax
  4122fd:	mov    ebp,0x2713003f
  412302:	pushf  
  412303:	(bad)
  412306:	mov    BYTE PTR ds:0x3fcf72,0x5b
  41230d:	pop    esi
  41230e:	sti    
  41230f:	adc    eax,0x40128a
  412314:	adc    al,0xa2
  412316:	or     BYTE PTR [edi-0x3cc8fcf7],dh
  41231c:	dec    edi
  41231d:	sub    al,0x68
  41231f:	sar    BYTE PTR [edi],1
  412321:	inc    esp
  412322:	add    bh,bh
  412324:	aas    
  412325:	aam    0x12
  412327:	inc    eax
  412328:	dec    edx
  412329:	cmp    DWORD PTR [edi-0x1393d08c],edi
  41232f:	jne    0x41238b
  412331:	add    al,0x50
  412333:	(bad)  
  412334:	aas    
  412335:	mov    eax,0xa10a4012
  41233a:	or     BYTE PTR [edi-0x3cc8fba7],dh
  412340:	aas    
  412341:	add    BYTE PTR [edx],dh
  412343:	shl    cl,0x1e
  412346:	xchg   DWORD PTR [esi+ebp*1+0xc],ecx
  41234a:	push   0x28
  41234c:	add    eax,0xa9102470
  412351:	add    al,0x30
  412353:	(bad)  
  412354:	cli    
  412355:	cld    
  412356:	fcomp  DWORD PTR [ebx]
  412358:	or     bh,ch
  41235a:	fcomp  DWORD PTR [ebx+0x18]
  41235d:	or     al,0x0
  41235f:	push   ebx
  412360:	add    BYTE PTR [eax],al
  412362:	add    BYTE PTR [ecx+0x721d38d8],cl
  412368:	mov    edi,0x3d1f003f
  41236d:	push   esi
  41236e:	mov    esi,0x41c5b5f3
  412373:	repz das 
  412375:	call   DWORD PTR [ebx]
  412377:	(bad)  
  412378:	fild   DWORD PTR [ecx+0x0]
  41237b:	fcmovnu st,st(2)
  41237d:	cdq    
  41237e:	ret    
  41237f:	xor    dh,ch
  412381:	jbe    0x41239a
  412383:	jp     0x41234f
  412385:	or     eax,0x8aee30b5
  41238a:	sbb    ebp,ebx
  41238c:	push   eax
  41238d:	inc    ebx
  41238e:	add    BYTE PTR [edx-0xe],bh
  412391:	popf   
  412392:	ret    
  412393:	mov    al,0xed
  412395:	mov    DWORD PTR [ebx],0x43aa7b
  41239b:	repnz ud0 edx,DWORD PTR [ebx]
  41239f:	inc    ebx
  4123a0:	fild   DWORD PTR [ecx+0x0]
  4123a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123a4:	dec    esi
  4123a5:	adc    BYTE PTR [ebp-0x3ec31250],dh
  4123ab:	mov    esi,0xa6d06c15
  4123b0:	lods   eax,DWORD PTR ds:[esi]
  4123b1:	add    ebp,edi
  4123b3:	(bad)  
  4123b4:	cmp    eax,0x4f34016
  4123b9:	ret    
  4123ba:	je     0x4123ba
  4123bc:	aad    0xd
  4123be:	jbe    0x412373
  4123c0:	in     eax,dx
  4123c1:	push   ecx
  4123c2:	std    
  4123c3:	fisubr WORD PTR [ecx+0x16]
  4123c6:	inc    eax
  4123c7:	add    BYTE PTR [eax],al
  4123c9:	add    bl,dh
  4123cb:	dec    esp
  4123cc:	adc    BYTE PTR [ebp-0x3ec31250],dh
  4123d2:	data16 in al,0x33
  4123d5:	rcr    al,0xfb
  4123d8:	mov    WORD PTR [edi+edx*1-0x8],cs
  4123dc:	imul   ebp,DWORD PTR [eax],0xffffffd4
  4123df:	jl     0x412406
  4123e1:	adc    BYTE PTR [eax],ah
  4123e3:	std    
  4123e4:	xor    bh,ch
  4123e6:	mov    ds:0xb319d9fd,eax
  4123eb:	pop    es
  4123ec:	(bad)  
  4123ee:	sbb    cl,cl
  4123f0:	out    dx,eax
  4123f1:	add    eax,DWORD PTR [eax-0x7e]
  4123f4:	ret    
  4123f5:	test   BYTE PTR [edi+0x6a593523],dl
  4123fb:	je     0x4123d4
  4123fd:	mov    WORD PTR [ebx+0x1077be8c],fs
  412403:	fucomip st,st(0)
  412405:	jo     0x41238b
  412407:	imul   bl
  412409:	pop    es
  41240a:	add    DWORD PTR [ebx+0x74],edx
  41240d:	inc    esi
  41240e:	lahf   
  41240f:	push   edi
  412410:	xor    eax,0x96f535ec
  412415:	add    BYTE PTR [esi-0x39],ch
  412418:	adc    al,0x8
  41241a:	and    edi,eax
  41241c:	xchg   edx,eax
  41241d:	jl     0x412491
  41241f:	je     0x412410
  412421:	add    edi,DWORD PTR [edx+0x3c]
  412424:	mov    bh,0x19
  412426:	mov    bl,0x6
  412428:	add    DWORD PTR [esi+ebx*4],ecx
  41242b:	jp     0x412421
  41242d:	pop    eax
  41242e:	add    BYTE PTR [eax],al
  412430:	add    BYTE PTR [eax+0x4c],ch
  412433:	xor    edx,DWORD PTR [ebx+0x2e]
  412436:	jl     0x412417
  412438:	add    BYTE PTR [edx+ecx*4],bh
  41243b:	and    ecx,DWORD PTR [edi]
  41243d:	jb     0x4124b3
  41243f:	repz add ebx,DWORD PTR [edi-0x4f7169fd]
  412446:	rcl    BYTE PTR [edi+0x2e027f00],cl
  41244c:	fnstenv [edx-0x35]
  41244f:	xrelease xchg BYTE PTR [edx],bl
  412452:	jnp    0x412446
  412454:	pop    eax
  412455:	js     0x4124a2
  412457:	or     edx,DWORD PTR [ebx+0x42]
  41245a:	div    BYTE PTR ds:0x9e02b784
  412460:	mov    ?,WORD PTR [eax]
  412462:	jecxz  0x4123fb
  412464:	add    BYTE PTR [edi+0x17],al
  412467:	add    dh,dh
  412469:	stos   DWORD PTR es:[edi],eax
  41246a:	fild   QWORD PTR [esp+eiz*2]
  41246d:	lahf   
  41246e:	jg     0x412435
  412470:	imul   BYTE PTR [ebx]
  412472:	enter  0xde50,0x2a
  412476:	add    edi,ebp
  412478:	pop    esp
  412479:	div    ebx
  41247b:	ss into 
  41247d:	cli    
  41247e:	adc    ch,BYTE PTR es:[ecx]
  412481:	out    dx,eax
  412482:	mov    eax,eax
  412484:	xor    eax,0x3dfd896f
  412489:	fimul  WORD PTR [ecx+0x60e235d9]
  41248f:	or     BYTE PTR [edx],bh
  412491:	sbb    al,0xf4
  412493:	adc    ebx,ecx
  412495:	add    BYTE PTR [eax],al
  412497:	add    BYTE PTR [esi],al
  412499:	inc    edi
  41249a:	add    BYTE PTR [edx+0x3b],ch
  41249d:	add    dh,BYTE PTR [eax-0x38ab4218]
  4124a3:	stos   DWORD PTR es:[edi],eax
  4124a4:	add    eax,DWORD PTR [edi]
  4124a6:	push   ebx
  4124a7:	jb     0x4124ec
  4124a9:	inc    ebp
  4124aa:	push   ecx
  4124ab:	jbe    0x412477
  4124ad:	(bad)  
  4124ae:	cld    
  4124af:	aam    0xf8
  4124b1:	sbb    BYTE PTR [eax-0x17],al
  4124b4:	jno    0x4124a4
  4124b6:	std    
  4124b7:	aad    0xbc
  4124b9:	xchg   DWORD PTR [ebx+0x55],ecx
  4124bc:	and    al,0x87
  4124be:	loopne 0x4124b9
  4124c0:	aaa    
  4124c1:	out    0x13,al
  4124c3:	cdq    
  4124c4:	mov    al,BYTE PTR [edi]
  4124c6:	push   0xffffffe6
  4124c8:	cwde   
  4124c9:	push   es
  4124ca:	add    cl,ch
  4124cc:	jo     0x4124c1
  4124ce:	jae    0x4124b1
  4124d0:	arpl   WORD PTR [ecx-0x4],cx
  4124d3:	adc    DWORD PTR [eax],eax
  4124d5:	repnz std 
  4124d7:	push   ds
  4124d8:	jnp    0x4124a1
  4124da:	je     0x4124a4
  4124dc:	pop    edx
  4124dd:	pop    es
  4124de:	push   0xffffffe9
  4124e0:	fnstsw WORD PTR [eax+0xc]
  4124e3:	add    BYTE PTR [ecx-0x31ba762f],bl
  4124e9:	loopne 0x4124f7
  4124eb:	(bad)  
  4124ec:	mov    ebp,0x46c084f5
  4124f1:	add    al,0x89
  4124f3:	inc    ebp
  4124f4:	into   
  4124f5:	loopne 0x4124b2
  4124f7:	cld    
  4124f8:	int    0xf5
  4124fa:	mov    al,0x1
  4124fc:	add    BYTE PTR [eax],al
  4124fe:	add    BYTE PTR [ecx-0x51ba7702],dh
  412504:	loopne 0x4124b5
  412506:	cld    
  412507:	lods   eax,DWORD PTR ds:[esi]
  412508:	cmc    
  412509:	xor    al,al
  41250b:	rol    ecx,1
  41250d:	ret    0x9a08
  412510:	dec    edi
  412511:	xchg   esp,ebp
  412513:	or     esp,esp
  412515:	sub    al,0x83
  412517:	iret   
  412518:	push   cs
  412519:	add    BYTE PTR [esi+0x6],dl
  41251c:	js     0x412506
  41251e:	repnz out dx,eax
  412520:	or     DWORD PTR [eax],eax
  412522:	cmp    al,0x56
  412524:	jbe    0x412590
  412526:	lea    eax,[edi]
  412528:	rcl    DWORD PTR [eax+0x53],cl
  41252b:	bound  edi,QWORD PTR [ebp-0x74420007]
  412531:	shl    BYTE PTR [ecx+edi*1-0x77],0x79
  412536:	or     BYTE PTR [edx-0x7f],cl
  412539:	xor    DWORD PTR [eax],esi
  41253b:	and    al,0x48
  41253d:	add    BYTE PTR [esp+ecx*1+0x5e],dh
  412541:	or     bh,bh
  412543:	inc    edi
  412544:	add    BYTE PTR [ecx-0x4a82dbb],cl
  41254a:	(bad)  
  41254b:	cdq    
  41254c:	retf   
  41254d:	or     al,0x83
  41254f:	aas    
  412550:	add    al,0x0
  412552:	je     0x412570
  412554:	pop    esi
  412555:	or     bh,bh
  412557:	push   edi
  412558:	add    al,0x89
  41255a:	inc    ebp
  41255b:	cli    
  41255c:	push   edi
  41255d:	sti    
  41255e:	(bad)  
  41255f:	repz pusha 
  412561:	lds    ecx,FWORD PTR [eax+eax*1]
  412564:	add    BYTE PTR [eax],al
  412566:	jo     0x4124ea
  412568:	adc    DWORD PTR [eax],eax
  41256a:	pop    edi
  41256b:	cld    
  41256c:	addr16 or ah,cl
  41256f:	jp     0x412582
  412571:	mov    ebp,DWORD PTR [esi]
  412573:	push   es
  412574:	push   ecx
  412575:	std    
  412576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412577:	pusha  
  412578:	lds    ecx,FWORD PTR [ecx+ecx*2]
  41257b:	idiv   ah
  41257d:	jae    0x412586
  41257f:	arpl   WORD PTR [ebp-0x10],ax
  412582:	inc    ebx
  412583:	fst    st(6)
  412585:	xor    DWORD PTR [edi-0x44bc712f],0x97e84f0d
  41258f:	mov    dl,0xfb
  412591:	std    
  412592:	cwde   
  412593:	aam    0xfc
  412595:	jae    0x41257a
  412597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412598:	jne    0x4125a6
  41259a:	je     0x4125ae
  41259c:	or     al,0xfd
  41259e:	and    BYTE PTR [ebp+0x1e014015],dl
  4125a4:	add    al,0xf5
  4125a6:	cmp    edi,eax
  4125a8:	shl    ebp,0x3b
  4125ab:	sub    ecx,ecx
  4125ad:	ret    0xdde3
  4125b0:	imul   eax,DWORD PTR [eax-0x2fe220d],0xfd09c9c7
  4125ba:	fsubp  st(5),st
  4125bc:	cmovo  esi,ebx
  4125bf:	push   esp
  4125c0:	js     0x4125e6
  4125c2:	out    dx,eax
  4125c3:	pop    esp
  4125c4:	adc    eax,0x19e011c
  4125c9:	cmc    
  4125ca:	add    BYTE PTR [eax],al
  4125cc:	add    BYTE PTR [ebx],bh
  4125ce:	call   0x1f6d1b94
  4125d3:	or     BYTE PTR [eax],al
  4125d5:	sahf   
  4125d6:	push   0xd90f81f0
  4125db:	or     BYTE PTR [ebx-0x9],0x5
  4125df:	es push ecx
  4125e1:	inc    ebp
  4125e2:	pop    edi
  4125e3:	addr16 add al,0xf3
  4125e6:	push   es
  4125e7:	add    DWORD PTR [eax],0x37f0649
  4125ed:	repz push es
  4125ef:	addr16 std 
  4125f1:	inc    eax
  4125f2:	jmp    FWORD PTR [ebx+0x47]
  4125f5:	(bad)  
  4125f6:	fist   WORD PTR [ebx]
  4125f8:	stc    
  4125f9:	mov    esi,0x3fc463f2
  4125fe:	addr16 je 0x412647
  412601:	scas   eax,DWORD PTR es:[edi]
  412602:	push   edi
  412603:	ins    BYTE PTR es:[edi],dx
  412604:	jbe    0x4125a9
  412606:	fild   WORD PTR [ebx]
  412608:	add    BYTE PTR [ebp+0x1fc363f2],bl
  41260e:	push   edi
  41260f:	cli    
  412610:	fadd   st,st(4)
  412612:	push   ebx
  412613:	mov    bl,0x74
  412615:	sub    al,0x7e
  412617:	cmp    al,0xf4
  412619:	add    DWORD PTR [eax+ebp*2],eax
  41261c:	std    
  41261d:	repz push es
  41261f:	inc    edi
  412620:	add    esp,esi
  412622:	xor    ah,al
  412624:	pop    esi
  412625:	pop    edi
  412626:	jp     0x412613
  412628:	cmp    BYTE PTR [edx+0x79],ah
  41262b:	sub    dl,BYTE PTR [esi+0x4b]
  41262e:	jb     0x41268a
  412630:	cld    
  412631:	add    BYTE PTR [eax],al
  412633:	add    BYTE PTR [esi-0x80],cl
  412636:	out    0x38,al
  412638:	xor    bh,BYTE PTR [ebx-0x32]
  41263b:	push   eax
  41263c:	push   0x9d52df44
  412641:	push   esi
  412642:	data16 jbe 0x412674
  412645:	repnz hlt 
  412647:	aaa    
  412648:	add    DWORD PTR [edi-0x19],eax
  41264b:	xchg   BYTE PTR [ebx],dh
  41264d:	jnp    0x41262a
  41264f:	mov    BYTE PTR [eax-0x7f39fe02],dh
  412655:	or     esi,DWORD PTR [eax+0x44]
  412658:	out    dx,eax
  412659:	fld    QWORD PTR [eax]
  41265b:	aad    0xff
  41265d:	cmp    ebp,eax
  41265f:	mov    ebx,0x74fdf463
  412664:	xor    eax,0xebbce8f3
  412669:	repz std 
  41266b:	(bad)  [eax-0x4ddfa6b0]
  412671:	or     al,BYTE PTR [eax]
  412673:	jo     0x412664
  412675:	mov    DWORD PTR [ebp-0x1b],ebx
  412678:	jne    0x4126bf
  41267a:	cld    
  41267b:	add    DWORD PTR [eax],ebp
  41267d:	lock std 
  41267f:	out    dx,al
  412680:	xor    ecx,0x3e7dd0ea
  412686:	aas    
  412687:	imul   esp,DWORD PTR [esi+0x70fd71f1],0xf05402f9
  412691:	aaa    
  412692:	(bad)  
  412693:	dec    edi
  412694:	jle    0x412692
  412696:	call   0x41278c
  41269b:	jo     0x412696
  41269d:	add    al,0x3c
  41269f:	hlt    
  4126a0:	xchg   DWORD PTR [edx],esp
  4126a2:	jmp    0x7371650d
  4126a7:	mov    bh,0x31
  4126a9:	cmp    dh,BYTE PTR [ecx-0x5775fb24]
  4126af:	call   0x587ae76c
  4126b4:	jp     0x4126da
  4126b6:	icebp  
  4126b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126b8:	ficom  WORD PTR [ebp+0x5a]
  4126bb:	dec    eax
  4126bc:	repz ret 0xf0ed
  4126c0:	push   ebp
  4126c1:	mov    DWORD PTR [ebp-0x62],edi
  4126c4:	inc    ecx
  4126c5:	or     eax,0x50feb09e
  4126ca:	jae    0x412694
  4126cc:	ss push esi
  4126ce:	out    0x61,al
  4126d0:	jne    0x4126e2
  4126d2:	fisub  WORD PTR [ecx-0x37]
  4126d5:	mov    eax,DWORD PTR [eax]
  4126d7:	dec    esi
  4126d8:	(bad)  
  4126d9:	cli    
  4126da:	pcmpeqw mm0,mm2
  4126dd:	or     ebp,DWORD PTR [edi-0x2d4d0246]
  4126e3:	xchg   edx,eax
  4126e4:	dec    edi
  4126e5:	sti    
  4126e6:	cmovl  eax,DWORD PTR [esi-0x5]
  4126ea:	data16 aad 0x9d
  4126ed:	inc    ecx
  4126ee:	or     al,0xd5
  4126f0:	mov    dh,0xd7
  4126f2:	add    edi,eax
  4126f4:	pop    es
  4126f5:	retf   0x250f
  4126f8:	clc    
  4126f9:	or     ebp,DWORD PTR [edi-0x7b67dff]
  4126ff:	add    BYTE PTR [eax],al
  412701:	add    ch,dl
  412703:	mov    ch,0xc0
  412705:	cmp    edx,esp
  412707:	sti    
  412708:	sbb    BYTE PTR [eax+0xf00049a],0x7d
  41270f:	les    eax,FWORD PTR [ebp+0x5b819a45]
  412715:	adc    al,0x9
  412717:	addr16 or al,0x0
  41271a:	cdq    
  41271b:	sar    DWORD PTR [edi+0x7d],cl
  41271e:	stos   BYTE PTR es:[edi],al
  41271f:	add    al,0x76
  412721:	adc    DWORD PTR es:[edi+0xc],eax
  412725:	mov    ebx,edi
  412727:	add    bh,bh
  412729:	ret    0x802a
  41272c:	ret    
  41272d:	call   0x3d12e5
  412732:	push   ebp
  412733:	mov    dh,0x43
  412735:	inc    ecx
  412736:	dec    ebx
  412737:	inc    edi
  412738:	or     BYTE PTR [edi],cl
  41273a:	or     al,0x45
  41273c:	xor    BYTE PTR [ecx],al
  41273e:	ud0    eax,DWORD PTR [esi+0x41315645]
  412745:	adc    BYTE PTR [eax],bh
  412747:	rol    BYTE PTR [edi+0x4380f24f],cl
  41274d:	inc    ecx
  41274e:	sbb    DWORD PTR [edi],edi
  412750:	clc    
  412751:	cmp    al,0xf3
  412753:	fidiv  WORD PTR [eax+0x11]
  412756:	push   0x300111ab
  41275b:	push   ebp
  41275c:	dec    DWORD PTR [ecx+0x3f1475e0]
  412762:	mov    al,0xf4
  412764:	fnstenv [edx+0x0]
  412767:	add    BYTE PTR [eax],al
  412769:	std    
  41276a:	inc    esp
  41276b:	and    eax,0x1692f13c
  412770:	mov    DWORD PTR [esi],ebp
  412772:	out    dx,al
  412773:	push   es
  412774:	ror    eax,0xdf
  412777:	mov    edx,DWORD PTR [ecx]
  412779:	imul   ebp,esi,0x44
  41277c:	inc    ecx
  41277d:	or     BYTE PTR [esi],ah
  41277f:	jae    0x412777
  412781:	fcomp  st(2)
  412783:	xor    eax,0x8ecf4604
  412788:	inc    ebx
  412789:	jecxz  0x412767
  41278b:	(bad)  
  41278c:	jmp    0x88549b86
  412791:	add    bl,BYTE PTR [edi]
  412793:	inc    ebx
  412794:	cmp    DWORD PTR [ebx+0x2689f24b],edi
  41279a:	(bad)  
  41279b:	add    ecx,DWORD PTR [ebp-0x1]
  41279e:	jbe    0x4127e5
  4127a0:	clc    
  4127a1:	enter  0x79f,0x86
  4127a5:	or     eax,0x15fdf7b9
  4127aa:	adc    eax,0xddffc2c9
  4127af:	dec    esi
  4127b0:	mov    DWORD PTR [edi+0x5c],edx
  4127b3:	call   0x4f70e7e8
  4127b8:	xor    DWORD PTR [ecx-0x34],eax
  4127bb:	clc    
  4127bc:	inc    ebp
  4127bd:	add    BYTE PTR [esi+0x765b5389],bl
  4127c3:	dec    ebp
  4127c4:	lock push 0x12
  4127c7:	fadd   QWORD PTR [edi+0x533989b6]
  4127cd:	add    BYTE PTR [eax],al
  4127cf:	add    BYTE PTR [edi],al
  4127d1:	pop    es
  4127d2:	test   BYTE PTR [ecx+0x3e7057a],0x6a
  4127d9:	inc    ecx
  4127da:	fisttp WORD PTR [edx+0x4760d2c0]
  4127e0:	pop    ds
  4127e1:	jnp    0x412797
  4127e3:	adc    ebp,DWORD PTR [ecx+ebx*2+0x3f]
  4127e7:	cmp    eax,0x6064ff29
  4127ec:	hlt    
  4127ed:	out    dx,al
  4127ee:	out    0x8c,eax
  4127f0:	cmp    bl,bl
  4127f2:	jb     0x412843
  4127f4:	jmp    0x412777
  4127f6:	jmp    0x41280a
  4127f8:	imul   edi,DWORD PTR [esi+edx*1],0x3e
  4127fc:	sub    BYTE PTR [edi],cl
  4127fe:	fidivr WORD PTR [edi+0xd]
  412801:	or     bh,ah
  412803:	add    edi,DWORD PTR [eax+0x57]
  412806:	inc    al
  412808:	xor    bh,ah
  41280a:	call   0x62481b12
  41280f:	hlt    
  412810:	jmp    0x5c82:0x4976fb43
  412817:	call   0x8d1c9490
  41281c:	cmp    bl,dh
  41281e:	bound  esi,QWORD PTR [esi-0x75]
  412821:	das    
  412822:	repz cmp al,0x0
  412825:	inc    ebp
  412826:	jb     0x412800
  412828:	mov    edx,0xe576d74b
  41282d:	or     DWORD PTR [eax+esi*8],0x6ee1fb2b
  412834:	add    BYTE PTR [eax],al
  412836:	add    ch,ch
  412838:	inc    ebp
  412839:	loop   0x4128b1
  41283b:	add    ebp,DWORD PTR [ebx-0x67]
  41283e:	dec    eax
  41283f:	sbb    dh,bh
  412841:	adc    al,0x2
  412843:	je     0x4128b1
  412845:	(bad)
  412849:	ret    0x4376
  41284c:	ins    BYTE PTR es:[edi],dx
  41284d:	add    dl,ch
  41284f:	imul   esi,DWORD PTR [edx-0x10],0xe6a56a
  412856:	out    0xf8,eax
  412858:	das    
  412859:	jnp    0x4128ac
  41285b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41285c:	pop    es
  41285d:	inc    edx
  41285e:	inc    edx
  41285f:	adc    al,0x87
  412861:	arpl   WORD PTR [ecx-0x10],cx
  412864:	jg     0x4128e1
  412866:	fyl2x  
  412868:	jno    0x41285e
  41286a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41286b:	mov    edi,0x4bb51479
  412870:	cmp    BYTE PTR [ebx+0x45],0x7f
  412874:	inc    ecx
  412875:	call   0x2a30564c
  41287a:	cmp    DWORD PTR [ecx],esi
  41287c:	dec    ecx
  41287d:	xchg   DWORD PTR [esp+esi*4+0x1f19537f],edi
  412884:	pop    edx
  412885:	clc    
  412886:	jb     0x4128a5
  412888:	jecxz  0x4128b3
  41288a:	stc    
  41288b:	hlt    
  41288c:	fwait
  41288d:	xlat   BYTE PTR ds:[ebx]
  41288e:	stos   DWORD PTR es:[edi],eax
  41288f:	imul   edi,DWORD PTR [ecx-0x2c],0x39f85bde
  412896:	(bad)  
  412897:	sbb    eax,0x3c88ff
  41289c:	add    BYTE PTR [eax],al
  41289e:	xchg   ebx,eax
  41289f:	test   DWORD PTR [ebx-0x37],ecx
  4128a2:	mov    BYTE PTR [ecx+ecx*4],al
  4128a5:	sub    al,0xa3
  4128a7:	test   DWORD PTR [ebx-0x37],edx
  4128aa:	outs   dx,DWORD PTR ds:[esi]
  4128ab:	jno    0x4128c9
  4128ad:	jmp    0x3c43641d
  4128b2:	lock or DWORD PTR [ebp-0x16],0xf6105979
  4128ba:	lea    ebx,[ecx+0x14]
  4128bd:	loop   0x4128e9
  4128bf:	sti    
  4128c0:	mov    WORD PTR [edi-0x11],ds
  4128c3:	push   es
  4128c4:	add    BYTE PTR [esi+0x80ceb2],cl
  4128ca:	out    dx,eax
  4128cb:	push   cs
  4128cc:	add    BYTE PTR [ebx+0x7710547],cl
  4128d2:	sar    BYTE PTR [edi],1
  4128d4:	sti    
  4128d5:	mov    BYTE PTR [esi+0x1c],cl
  4128d8:	inc    ebx
  4128d9:	mov    bl,BYTE PTR [edi-0xf]
  4128dc:	shl    cl,0x16
  4128df:	inc    edi
  4128e1:	mov    BYTE PTR [esi],cl
  4128e3:	sbb    al,0x8a
  4128e5:	dec    ebp
  4128e6:	mov    edx,0xbbc0c5f4
  4128eb:	push   es
  4128ec:	mov    DWORD PTR [ebx-0x43],edx
  4128ef:	add    dl,cl
  4128f1:	add    esp,edx
  4128f3:	jp     0x412941
  4128f5:	aaa    
  4128f6:	fisttp DWORD PTR [ecx+0x6e6302c3]
  4128fc:	in     al,0x89
  4128fe:	xchg   edi,eax
  4128ff:	fadd   QWORD PTR [ebp+0x5d]
  412905:	sbb    dh,BYTE PTR [eax]
  412907:	mov    edi,0x5181997d
  41290c:	loopne 0x41294f
  41290e:	ds clc 
  412910:	add    ebx,ebx
  412912:	jns    0x412965
  412914:	aam    0x51
  412916:	push   esi
  412917:	fmul   QWORD PTR [ecx+0x1ae7e887]
  41291d:	and    DWORD PTR [edi],edi
  41291f:	clc    
  412920:	jmp    0x4128c9
  412922:	mov    DWORD PTR [ecx-0xc],edi
  412925:	mov    ebp,0xc78b145c
  41292a:	loop   0x4128b3
  41292c:	jne    0x4128b0
  41292e:	jle    0x412989
  412930:	sbb    BYTE PTR [ecx+0x781c88d3],cl
  412936:	inc    ebx
  412937:	aaa    
  412938:	dec    ebp
  412939:	xchg   BYTE PTR [esi+eiz*8-0x75],dh
  41293d:	pop    ds
  41293e:	adc    edi,ebx
  412940:	inc    ebp
  412941:	xchg   BYTE PTR [ebx],al
  412943:	dec    ecx
  412944:	loopne 0x412939
  412946:	push   0xb08f448
  41294b:	aam    0x7c
  41294d:	and    eax,DWORD PTR [ebp+0x1b68f840]
  412953:	adc    al,0x37
  412955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412956:	jne    0x41295e
  412958:	mov    WORD PTR [ebp-0x1f0209a4],cs
  41295e:	das    
  41295f:	add    al,0x4b
  412961:	aas    
  412962:	fisttp WORD PTR [eax-0x14]
  412965:	mov    bl,0x18
  412967:	aas    
  412968:	adc    al,0x0
  41296a:	add    BYTE PTR [eax],al
  41296c:	cld    
  41296d:	dec    ecx
  41296e:	jae    0x41296e
  412970:	add    al,0x45
  412972:	mov    al,BYTE PTR [ebx-0x11]
  412975:	ja     0x4129bf
  412977:	fsubr  DWORD PTR [ebx-0x1a]
  41297a:	mov    al,ch
  41297c:	dec    esp
  41297d:	jl     0x4129d9
  41297f:	(bad)  
  412980:	mov    cl,0x5
  412982:	add    al,0x31
  412984:	mov    bl,0x18
  412986:	lock push ebx
  412988:	push   0x3bec8201
  41298d:	imul   ecx,DWORD PTR [eax+0x8],0x5615b678
  412994:	and    al,0x77
  412996:	dec    eax
  412997:	lock push 0xa9890da2
  41299d:	push   0xb5f01050
  4129a2:	(bad)  
  4129a3:	stc    
  4129a4:	loopne 0x412979
  4129a6:	mov    esi,0xbbdd9643
  4129ab:	inc    ebx
  4129ac:	(bad)  
  4129ad:	fisttp QWORD PTR [edx+0x75764b4b]
  4129b3:	shr    BYTE PTR [edx+0x22],0xec
  4129b7:	cmp    DWORD PTR [edx-0xd45791c],esi
  4129bd:	fld    QWORD PTR [ecx]
  4129bf:	sub    DWORD PTR [ebx],edi
  4129c1:	push   es
  4129c2:	cmp    cl,BYTE PTR [ebx+0x192baa8]
  4129c8:	push   0x51
  4129ca:	test   DWORD PTR [eax+0x4f60c6b0],0x57000000
  4129d4:	das    
  4129d5:	xchg   edi,eax
  4129d6:	add    eax,0x3e87a68
  4129db:	repz pop ds
  4129dd:	test   eax,0x82d6b08b
  4129e2:	add    DWORD PTR [edx+0x41],edi
  4129e5:	aaa    
  4129e6:	push   0x3
  4129e8:	dec    esi
  4129e9:	jo     0x412a32
  4129eb:	pop    ds
  4129ec:	jge    0x412992
  4129ee:	xlat   BYTE PTR ds:[ebx]
  4129ef:	retf   0xccc5
  4129f2:	add    BYTE PTR [ecx+eax*2+0x3b],ch
  4129f6:	mov    DWORD PTR [eax+0x78c302ba],esi
  4129fc:	pop    es
  4129fd:	pusha  
  4129fe:	aas    
  4129ff:	iret   
  412a00:	jle    0x41298e
  412a02:	xlat   BYTE PTR ds:[ebx]
  412a03:	div    BYTE PTR [ecx-0x4e11144c]
  412a09:	mov    ah,0xe7
  412a0b:	push   0x6c
  412a0d:	fist   WORD PTR [eax-0x32]
  412a10:	je     0x412a25
  412a12:	cmc    
  412a13:	inc    eax
  412a14:	test   DWORD PTR [edi],0xfeeabfbf
  412a1a:	add    al,0x86
  412a1c:	dec    esp
  412a1d:	sti    
  412a1e:	mov    BYTE PTR [eax],bh
  412a20:	sti    
  412a21:	popa   
  412a22:	aas    
  412a23:	mov    ds:0xf3e04c86,eax
  412a28:	test   DWORD PTR [esp+eiz*8-0xd],eax
  412a2c:	jnp    0x412a41
  412a2e:	push   es
  412a2f:	xor    eax,0x6c03e6c1
  412a34:	je     0x4129b9
  412a36:	mov    al,BYTE PTR [eax]
  412a38:	add    BYTE PTR [eax],al
  412a3a:	sbb    bh,cl
  412a3c:	jo     0x412a7c
  412a3e:	stos   DWORD PTR es:[edi],eax
  412a3f:	rol    DWORD PTR [eax],0x2c
  412a42:	popw   es
  412a44:	(bad)  
  412a45:	and    al,0xf6
  412a47:	push   es
  412a48:	(bad)  
  412a49:	sub    al,0x43
  412a4b:	jmp    0xb284:0xea5b24c3
  412a52:	(bad)  
  412a53:	push   esp
  412a54:	or     DWORD PTR [ebx+edx*2],0x6aec7307
  412a5b:	pop    ss
  412a5c:	mov    BYTE PTR [esi+edi*1],dl
  412a5f:	jge    0x412a61
  412a61:	mov    bl,0xed
  412a63:	jmp    0x412ad8
  412a65:	in     al,0x1f
  412a67:	inc    esi
  412a68:	in     al,0x52
  412a6a:	in     eax,dx
  412a6b:	xchg   DWORD PTR [ebx+0x49],edi
  412a6e:	lock jne 0x412a76
  412a71:	das    
  412a72:	int    0xea
  412a74:	add    BYTE PTR [ecx-0x3b],ah
  412a77:	adc    edi,DWORD PTR [edx]
  412a79:	lods   al,BYTE PTR ds:[esi]
  412a7a:	out    dx,eax
  412a7b:	jne    0x412a90
  412a7d:	ds mov ch,0xe6
  412a80:	mov    DWORD PTR [eax+edi*4+0x30114beb],ebp
  412a87:	mov    BYTE PTR [ebx+0x41],bh
  412a8a:	lock add DWORD PTR [ebx+0x31],0xede9c35f
  412a92:	mov    es,WORD PTR [ebp-0x2c]
  412a95:	jmp    0xc3257015
  412a9a:	std    
  412a9b:	out    0x76,al
  412a9d:	icebp  
  412a9e:	add    BYTE PTR [eax],al
  412aa0:	add    BYTE PTR [edx+0x45],ch
  412aa3:	std    
  412aa4:	arpl   WORD PTR ds:0x7ae7e914,di
  412aaa:	inc    ebp
  412aab:	adc    eax,0x80ec3a73
  412ab0:	pop    esp
  412ab1:	mov    ds:0xe83c8806,al
  412ab6:	jb     0x412abb
  412ab8:	adc    edi,DWORD PTR [edx]
  412aba:	ret    
  412abb:	je     0x412abd
  412abd:	test   BYTE PTR [ebp-0xfdfdf5],al
  412ac3:	or     eax,0xfdf81fc6
  412ac8:	xchg   DWORD PTR [edi],ecx
  412aca:	mov    edi,0xf7178046
  412acf:	add    BYTE PTR [edi],cl
  412ad1:	iret   
  412ad2:	jl     0x412ad4
  412ad4:	add    BYTE PTR [edx-0x7b],bl
  412ad7:	or     ecx,DWORD PTR [eax]
  412ad9:	fidiv  DWORD PTR [edi-0x2c]
  412adc:	add    al,al
  412ade:	std    
  412adf:	jae    0x412b00
  412ae1:	retf   0xfe77
  412ae4:	add    BYTE PTR [eax+0xf74134f],dl
  412aea:	sbb    edx,DWORD PTR [ecx-0x5]
  412aed:	ds cli 
  412aef:	or     eax,DWORD PTR [edx+eiz*4]
  412af2:	std    
  412af3:	xchg   DWORD PTR [esp+edx*1],edx
  412af6:	mov    edi,0x6d1bfe41
  412afb:	push   ecx
  412afc:	sti    
  412afd:	dec    esp
  412afe:	enter  0xc08,0x1a
  412b02:	mov    edi,0xfe41
  412b07:	add    dl,bl
  412b09:	ins    BYTE PTR es:[edi],dx
  412b0a:	add    edi,edi
  412b0c:	lahf   
  412b0d:	ror    BYTE PTR [ecx+0x71f5e404],1
  412b13:	(bad)  
  412b14:	cmc    
  412b15:	ins    DWORD PTR es:[edi],dx
  412b16:	fdiv   st(7),st
  412b18:	outs   dx,DWORD PTR ds:[esi]
  412b19:	lock push eax
  412b1b:	call   FWORD PTR [edi-0xc]
  412b1e:	call   0xfc3521d1
  412b23:	add    edi,DWORD PTR [edx+0x6c75c07f]
  412b29:	cmc    
  412b2a:	jno    0x412b08
  412b2c:	lds    ebp,FWORD PTR [ebp+0x6f95e849]
  412b32:	hlt    
  412b33:	(bad)  
  412b35:	dec    edi
  412b36:	in     al,dx
  412b37:	push   ebx
  412b39:	dec    edx
  412b3a:	hlt    
  412b3b:	mov    esi,edi
  412b3d:	jns    0x412b06
  412b3f:	add    eax,0x87074f2
  412b44:	imul   esp,DWORD PTR [ebx],0xffffffef
  412b47:	mov    BYTE PTR [esi+0x689cd9af],dh
  412b4d:	cdq    
  412b4e:	repnz mov DWORD PTR [esi-0x2102a90f],esi
  412b55:	lea    eax,[esi]
  412b57:	(bad)  
  412b58:	mov    ds:0x448ee485,eax
  412b5d:	jns    0x412b65
  412b5f:	icebp  
  412b60:	jo     0x412b7d
  412b62:	loopne 0x412b74
  412b64:	push   0x9e81e023
  412b69:	lea    edx,[ecx]
  412b6b:	cmp    DWORD PTR [eax],eax
  412b6d:	add    BYTE PTR [eax],al
  412b6f:	scas   al,BYTE PTR es:[edi]
  412b70:	popf   
  412b71:	add    cl,BYTE PTR [eax+ebx*4+0x70fdf25f]
  412b78:	mov    ds:0x9b7810d9,eax
  412b7d:	fld    DWORD PTR [ecx+0x39110996]
  412b83:	mov    dh,0x85
  412b85:	add    cl,BYTE PTR [esp+eiz*4+0x48fdf227]
  412b8c:	xchg   ecx,eax
  412b8d:	jle    0x412b55
  412b8f:	inc    ebp
  412b90:	daa    
  412b91:	ret    
  412b92:	adc    bl,dh
  412b94:	stos   BYTE PTR es:[edi],al
  412b95:	jle    0x412b83
  412b97:	jo     0x412b92
  412b99:	sbb    al,0x51
  412b9b:	and    eax,0xd236a9
  412ba0:	stc    
  412ba1:	dec    ecx
  412ba2:	xor    DWORD PTR [ebx+0x6aec5876],esi
  412ba8:	xchg   edx,eax
  412ba9:	cmc    
  412baa:	xchg   DWORD PTR [esi+0x12],eax
  412bad:	jl     0x412c2a
  412baf:	fwait
  412bb0:	mov    dh,0x58
  412bb2:	adc    al,0xec
  412bb4:	push   es
  412bb5:	jne    0x412b60
  412bb7:	xchg   esp,eax
  412bb8:	out    0xe7,eax
  412bba:	jl     0x412bf4
  412bbc:	call   FWORD PTR [edi+0x57]
  412bbf:	xchg   ebx,eax
  412bc0:	jge    0x412bde
  412bc2:	hlt    
  412bc3:	push   0x39
  412bc5:	xlat   BYTE PTR ds:[ebx]
  412bc6:	jp     0x412be8
  412bc8:	jmp    0x412bcc
  412bca:	mov    esi,0x33578fe
  412bcf:	repz push es
  412bd1:	bound  edi,QWORD PTR [edi]
  412bd3:	add    BYTE PTR [eax],al
  412bd5:	add    BYTE PTR [edi+0x7b],bl
  412bd8:	cmp    al,0xf4
  412bda:	repnz mov ebp,0xf72b3f70
  412be0:	pop    ebp
  412be1:	add    cl,bh
  412be3:	pusha  
  412be4:	sar    BYTE PTR [esi],cl
  412be6:	fcomi  st,st(7)
  412be8:	push   0x58
  412bea:	xor    al,0xe7
  412bec:	out    0x7c,eax
  412bee:	inc    esp
  412bef:	jge    0x412c05
  412bf1:	fdivr  DWORD PTR [eax+0x56]
  412bf4:	outs   dx,BYTE PTR ds:[esi]
  412bf5:	leave  
  412bf6:	mov    al,0xe2
  412bf8:	call   0x72481f00
  412bfd:	hlt    
  412bfe:	retf   0xfb41
  412c01:	outs   dx,BYTE PTR ds:[esi]
  412c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c03:	jnp    0x412ba1
  412c05:	repz je 0x412c41
  412c08:	aas    
  412c09:	jge    0x412bb3
  412c0b:	into   
  412c0c:	jb     0x412c7d
  412c0e:	jmp    0x412c7d
  412c10:	lock psadbw mm3,QWORD PTR [ebx-0x65]
  412c15:	jl     0x412c6f
  412c17:	jecxz  0x412c8b
  412c19:	rcr    DWORD PTR [edx],0x54
  412c1c:	imul   DWORD PTR [esi-0x2]
  412c1f:	xchg   ecx,eax
  412c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c21:	jmp    0x412c70
  412c23:	and    bl,ch
  412c25:	push   0x40
  412c27:	or     eax,0xf7382cae
  412c2c:	jp     0x412c20
  412c2e:	and    al,BYTE PTR ds:[eax]
  412c31:	stc    
  412c32:	sbb    eax,0xbc6c870d
  412c37:	mov    ?,WORD PTR [ebx-0x23]
  412c3a:	add    BYTE PTR [eax],al
  412c3c:	add    bh,al
  412c3e:	popa   
  412c3f:	hlt    
  412c40:	pop    esp
  412c41:	test   BYTE PTR [ebp+0x626fdd7b],0xe4
  412c48:	jmp    0x447a3b4f
  412c4d:	xchg   ebx,eax
  412c4e:	arpl   WORD PTR [ecx],ax
  412c50:	sub    ecx,DWORD PTR [esi+0xb]
  412c53:	or     DWORD PTR [ebx+ebx*2+0x7],0x8071c89
  412c5b:	(bad)  
  412c5c:	call   0xe2880b76
  412c61:	(bad)  
  412c64:	inc    ecx
  412c65:	(bad)  
  412c66:	popa   
  412c67:	call   0x2a3429ce
  412c6c:	xor    al,0x43
  412c6e:	xor    al,dl
  412c70:	sub    BYTE PTR [ebp-0x587eac73],dh
  412c76:	cmp    esp,esi
  412c78:	ret    0xe2c5
  412c7b:	mov    esp,eax
  412c7d:	cmp    BYTE PTR [eax],dh
  412c7f:	lock out dx,al
  412c81:	push   ebx
  412c82:	mov    esi,0xbe7d6042
  412c87:	or     eax,0xde20067e
  412c8c:	xbegin 0x69928820
  412c92:	push   edx
  412c93:	in     al,0x42
  412c95:	cli    
  412c96:	(bad)  
  412c97:	pop    ebx
  412c98:	adc    DWORD PTR [ecx+0x3a],ebx
  412c9b:	in     al,0x69
  412c9d:	inc    ebp
  412c9e:	add    eax,DWORD PTR [eax]
  412ca0:	ins    BYTE PTR es:[edi],dx
  412ca1:	add    BYTE PTR [eax],al
  412ca3:	add    BYTE PTR [ebx],dh
  412ca5:	or     DWORD PTR [ebx-0x16],esi
  412ca8:	inc    ebp
  412ca9:	push   esp
  412caa:	add    al,0x62
  412cac:	and    eax,0x1d000cf7
  412cb1:	cmp    eax,0x33080314
  412cb6:	retf   0xd0f
  412cb9:	retf   0x0
  412cbc:	mov    dl,dh
  412cbe:	inc    ecx
  412cbf:	fmul   QWORD PTR [edx]
  412cc1:	pop    eax
  412cc2:	sbb    al,0x0
  412cc4:	add    DWORD PTR [eax+0xc],esp
  412cc7:	jne    0x412c58
  412cc9:	pusha  
  412cca:	dec    ecx
  412ccb:	aam    0x12
  412ccd:	pop    es
  412cce:	xor    ecx,DWORD PTR [eax-0x7d02e1e2]
  412cd4:	xchg   ebp,eax
  412cd5:	or     BYTE PTR [edx-0x223561b3],cl
  412cdb:	add    al,0x50
  412cdd:	mov    eax,ds:0x5f350c88
  412ce2:	dec    ecx
  412ce3:	in     al,0x6c
  412ce5:	mov    ds:0x8656e1c0,eax
  412cea:	dec    edi
  412ceb:	call   DWORD PTR [eax-0x61]
  412cee:	call   edi
  412cf0:	ret    0x3346
  412cf3:	add    DWORD PTR [ecx+0x1f8902cd],ebx
  412cf9:	rol    DWORD PTR [ebp+0x5963a245],0xd4
  412d00:	ror    ecx,1
  412d02:	jns    0x412d49
  412d04:	cmp    DWORD PTR [edi],0x8be4
  412d0a:	add    BYTE PTR [edi-0xb],cl
  412d0d:	call   eax
  412d0f:	xchg   ebx,eax
  412d10:	aas    
  412d11:	fmul   DWORD PTR [ebx+0x5585e957]
  412d17:	rcr    BYTE PTR ss:[ebx+ecx*4],0x8f
  412d1c:	hlt    
  412d1d:	out    0x17,eax
  412d1f:	dec    ecx
  412d20:	push   esi
  412d21:	clc    
  412d22:	push   DWORD PTR [esi-0x6]
  412d25:	xchg   BYTE PTR [ebp-0xa],dl
  412d28:	ins    BYTE PTR es:[edi],dx
  412d29:	xchg   DWORD PTR [ebp-0xd],esi
  412d2c:	aad    0x7a
  412d2e:	pop    ebx
  412d2f:	jmp    0x412d21
  412d31:	aam    0x66
  412d33:	push   0xffffffa2
  412d35:	push   edx
  412d36:	aas    
  412d37:	call   0x8fbdf6ee
  412d3c:	imul   edi,DWORD PTR [edi],0xe9ab9c10
  412d42:	jmp    DWORD PTR [edi]
  412d44:	sar    BYTE PTR [edx+0x4b],cl
  412d47:	mov    ebp,DWORD PTR [ecx]
  412d49:	aas    
  412d4a:	aam    0x7
  412d4c:	lods   al,BYTE PTR ds:[esi]
  412d4d:	out    dx,al
  412d4e:	inc    ebx
  412d4f:	jg     0x412dba
  412d51:	inc    eax
  412d52:	adc    BYTE PTR [edx+0x7f0df01a],bh
  412d58:	push   0xffffffeb
  412d5a:	std    
  412d5b:	fs loope 0x412d2d
  412d5e:	jmp    FWORD PTR [edi-0xd38fd33]
  412d64:	sbb    dh,ah
  412d66:	inc    eax
  412d67:	or     BYTE PTR [ebx],ch
  412d69:	sbb    BYTE PTR ds:0xfdee1077,cl
  412d6f:	add    BYTE PTR [eax],al
  412d71:	add    BYTE PTR [ecx+ebp*2],bh
  412d74:	dec    eax
  412d75:	or     al,0x69
  412d77:	sbb    edx,eax
  412d79:	mov    bl,bh
  412d7b:	pop    eax
  412d7c:	(bad)  
  412d7d:	pop    ebp
  412d7e:	(bad)  
  412d81:	ret    0xedfb
  412d84:	xor    al,al
  412d86:	or     BYTE PTR [ebx+0x58],al
  412d89:	mov    DWORD PTR [edi],ebx
  412d8b:	jno    0x412d6a
  412d8d:	push   eax
  412d8e:	js     0x412d3b
  412d90:	stc    
  412d91:	mov    BYTE PTR [edx+0x6a5553f1],ch
  412d97:	fwait
  412d98:	cmc    
  412d99:	mov    DWORD PTR [esi],edi
  412d9b:	mov    edx,0x8278fa7a
  412da0:	adc    DWORD PTR [ecx],eax
  412da2:	stos   DWORD PTR es:[edi],eax
  412da3:	lock out 0x31,eax
  412da6:	fld    QWORD PTR [esi]
  412da8:	sub    eax,0x2506cd48
  412dad:	dec    eax
  412dae:	mov    BYTE PTR [esi],0x60
  412db1:	inc    eax
  412db2:	or     DWORD PTR [ebp+0x496caf8c],0x13
  412db9:	sub    ch,BYTE PTR [ebx+edx*1+0x6c]
  412dbd:	out    0xa4,al
  412dbf:	jecxz  0x412da8
  412dc1:	sbb    ch,BYTE PTR [ebx-0x54bf9fc9]
  412dc7:	out    dx,eax
  412dc8:	jmp    0x4747:0x71f72078
  412dcf:	lea    edi,[esp+esi*8]
  412dd2:	mov    edx,0x7edeb6
  412dd7:	add    BYTE PTR [eax],al
  412dd9:	cmp    al,0x5
  412ddb:	out    0x3,eax
  412ddd:	sbb    cl,cl
  412ddf:	jo     0x412e28
  412de1:	aaa    
  412de2:	out    dx,eax
  412de3:	jmp    0xbc14:0x41d2b078
  412dea:	lea    esi,[esp+ebp*8]
  412ded:	je     0x412e40
  412def:	mov    edi,0xea618429
  412df4:	jp     0x412da6
  412df6:	fisub  WORD PTR [edx+0x47]
  412df9:	sub    ebx,DWORD PTR [edi]
  412dfb:	test   al,0x6f
  412dfd:	repnz lea esp,[esp+ecx*8]
  412e01:	jp     0x412e44
  412e03:	(bad)  
  412e04:	std    
  412e05:	addr16 push ecx
  412e07:	jnp    0x412e06
  412e09:	pop    edi
  412e0a:	cmp    DWORD PTR [edi+0x79],edx
  412e0d:	mov    BYTE PTR [esi],cl
  412e0f:	mov    edx,0x56de80ec
  412e14:	ja     0x412e1d
  412e16:	out    dx,al
  412e17:	inc    ecx
  412e18:	in     al,dx
  412e19:	mul    dl
  412e1b:	neg    BYTE PTR [eax+ecx*2-0x8c08d21]
  412e22:	lea    eax,[eax]
  412e24:	lods   al,BYTE PTR ds:[esi]
  412e25:	in     al,0x88
  412e27:	arpl   WORD PTR ds:0x96387ef,cx
  412e2d:	test   DWORD PTR [edi-0x7810ee9d],0x8df70d63
  412e37:	cmp    al,0xdf
  412e39:	cs leave 
  412e3b:	add    eax,0xe9
  412e40:	sub    DWORD PTR [esi-0x4c],edx
  412e43:	jo     0x412e79
  412e45:	mov    ebx,0xc9b4ac87
  412e4a:	inc    ebx
  412e4b:	sbb    eax,esi
  412e4d:	enter  0xfe43,0xf1
  412e51:	test   ecx,ebx
  412e53:	pop    edi
  412e54:	and    ecx,DWORD PTR [eax+0x55f0c17b]
  412e5a:	push   es
  412e5b:	fidivr WORD PTR [edi]
  412e5d:	test   DWORD PTR [esi-0x4aebbce4],0x431fcee9
  412e67:	xchg   ebp,eax
  412e68:	in     eax,0x5
  412e6a:	std    
  412e6b:	and    al,0x37
  412e6d:	lock sbb BYTE PTR [edx-0x23],ch
  412e71:	jmp    0xafd0:0x8f481400
  412e78:	mov    ch,0xfb
  412e7a:	call   FWORD PTR [edi-0x63]
  412e7d:	out    0x66,al
  412e7f:	ret    0xe6b5
  412e82:	jae    0x412e5a
  412e84:	pop    ss
  412e85:	inc    esi
  412e86:	in     al,0x62
  412e88:	mov    ch,0xca
  412e8a:	std    
  412e8b:	sbb    al,0x3b
  412e8d:	mov    al,al
  412e8f:	jmp    0x412f04
  412e91:	pop    esi
  412e92:	aam    0xe9
  412e94:	mov    DWORD PTR [ebp-0x3c],eax
  412e97:	(bad)  
  412e98:	dec    esp
  412e99:	lock add al,0x27
  412e9c:	lods   eax,DWORD PTR ds:[esi]
  412e9d:	mov    dh,0x0
  412e9f:	add    BYTE PTR [ecx+0x49],ah
  412ea2:	call   0x412ee2
  412ea7:	(bad)
  412eab:	aad    0x9a
  412ead:	inc    ecx
  412eae:	fdiv   QWORD PTR [ebp-0x1e1fae66]
  412eb4:	fisttp QWORD PTR [edi+esi*4]
  412eb7:	(bad)  
  412eb8:	in     eax,0xb
  412eba:	mov    bh,0x7f
  412ebc:	rol    DWORD PTR [eax-0x7afa1b83],1
  412ec2:	push   ebp
  412ec3:	(bad)  
  412ec4:	pop    ecx
  412ec5:	push   es
  412ec6:	data16 mov cl,0x48
  412ec9:	shl    BYTE PTR [eax+eax*8-0x7b],0xb
  412ece:	add    dl,BYTE PTR [edx]
  412ed0:	or     cl,BYTE PTR [esi]
  412ed2:	(bad)  
  412ed4:	mov    edx,0x5d82e8bd
  412ed9:	inc    esp
  412eda:	push   cs
  412edb:	mov    eax,edi
  412edd:	inc    ecx
  412ede:	dec    BYTE PTR [ebx-0x263fae9e]
  412ee4:	les    eax,FWORD PTR [edx]
  412ee6:	and    BYTE PTR [edi],0xf6
  412ee9:	dec    DWORD PTR [esi]
  412eeb:	iret   
  412eec:	nop
  412eed:	add    BYTE PTR [eax],al
  412eef:	dec    edx
  412ef0:	test   DWORD PTR [ebx],ecx
  412ef2:	or     dl,bl
  412ef4:	outs   dx,DWORD PTR ds:[esi]
  412ef5:	rol    BYTE PTR [eax],1
  412ef7:	rol    BYTE PTR ds:0x6fca3174,0xfb
  412efe:	add    dh,bl
  412f00:	loopne 0x412f65
  412f02:	mov    ecx,DWORD PTR [edi]
  412f04:	iret   
  412f05:	cmp    di,di
  412f08:	mov    dl,0x74
  412f0a:	sub    DWORD PTR [eax],eax
  412f0c:	add    BYTE PTR [eax],al
  412f0e:	adc    eax,0x36dc5194
  412f13:	loope  0x412e9a
  412f15:	pop    es
  412f16:	add    DWORD PTR [edi-0x24],0xbedf0e88
  412f1d:	call   0x44bb1715
  412f22:	in     eax,0xee
  412f24:	mov    edi,0x7cefec43
  412f29:	push   ebx
  412f2a:	stos   DWORD PTR es:[edi],eax
  412f2b:	ins    DWORD PTR es:[edi],dx
  412f2c:	ret    0xc802
  412f2f:	out    0xf5,al
  412f31:	shrd   DWORD PTR [ebx-0xe84ff16],ebp,cl
  412f38:	jmp    0xbc0e:0x73a373
  412f3f:	add    ecx,0xfffffffd
  412f42:	ds push ss
  412f44:	jmp    0xeabfdabc
  412f49:	jae    0x412eea
  412f4b:	mul    BYTE PTR [eax-0x4]
  412f4e:	pushf  
  412f4f:	fld    DWORD PTR [esi]
  412f51:	lock outs dx,BYTE PTR ds:[esi]
  412f53:	outs   dx,DWORD PTR cs:[esi]
  412f55:	cmp    BYTE PTR [ebx+eax*2+0x333c0dcc],cl
  412f5c:	fdivr  st,st(5)
  412f5e:	push   es
  412f5f:	mov    dh,0xfa
  412f61:	mov    ah,0x1e
  412f63:	mov    esi,0x556773ea
  412f68:	jo     0x412f1e
  412f6a:	sub    eax,0xde8904e9
  412f6f:	in     eax,0x79
  412f71:	inc    ebx
  412f72:	add    BYTE PTR [eax],al
  412f74:	add    BYTE PTR [ebp+0x66],dl
  412f77:	inc    eax
  412f78:	std    
  412f79:	pop    ebx
  412f7a:	pusha  
  412f7b:	repnz std 
  412f7d:	inc    esp
  412f7e:	push   ebp
  412f7f:	inc    eax
  412f80:	or     al,0xf0
  412f82:	xchg   esp,eax
  412f83:	push   esi
  412f84:	std    
  412f85:	mov    esi,0xc3c60679
  412f8a:	jne    0x412f58
  412f8c:	mov    ah,BYTE PTR [ecx+eiz*2]
  412f8f:	push   es
  412f90:	icebp  
  412f91:	jo     0x412fc6
  412f93:	hlt    
  412f94:	adc    BYTE PTR [eax+0x2b],ch
  412f97:	hlt    
  412f98:	sbb    DWORD PTR [esi-0x35ecccfa],0x68fa9b49
  412fa2:	push   ecx
  412fa3:	push   ebp
  412fa4:	jmp    0x8c03:0xd7a483f6
  412fab:	lods   al,BYTE PTR ds:[esi]
  412fac:	xlat   BYTE PTR ds:[ebx]
  412fad:	jb     0x413020
  412faf:	das    
  412fb0:	adc    ebx,DWORD PTR [edx]
  412fb2:	dec    edx
  412fb3:	ja     0x412faf
  412fb5:	push   0xceea2d24
  412fba:	cmp    eax,esi
  412fbc:	jle    0x412f6b
  412fbe:	inc    eax
  412fbf:	xor    ch,al
  412fc1:	jecxz  0x412fc9
  412fc3:	mov    esp,0xfb83c77e
  412fc8:	push   ss
  412fc9:	inc    edx
  412fca:	cmp    DWORD PTR [esi-0x1ec3eca],ebx
  412fd0:	inc    ecx
  412fd1:	loop   0x412f99
  412fd3:	pusha  
  412fd4:	push   eax
  412fd5:	mov    ds:0xef948d,eax
  412fda:	add    BYTE PTR [eax],al
  412fdc:	je     0x413017
  412fde:	ret    
  412fdf:	jnp    0x412fe9
  412fe1:	repz and BYTE PTR [edi-0x19],cl
  412fe5:	pcmpgtw mm3,QWORD PTR [esi+0x7ce7df74]
  412fec:	mov    eax,0x4f4f700e
  412ff1:	lea    ebp,[esp+eiz*8]
  412ff4:	push   0x51
  412ff6:	xlat   BYTE PTR ds:[ebx]
  412ff7:	jp     0x412fb9
  412ff9:	loop   0x412fed
  412ffb:	mov    ebp,0x36790fe
  413000:	repz push es
  413002:	jb     0x41303b
  413004:	aas    
  413005:	mov    esi,DWORD PTR [esp+eiz*8]
  413008:	je     0x412fef
  41300a:	jmp    0x72ffe889
  41300f:	clc    
  413010:	sti    
  413011:	sbb    ebp,DWORD PTR [esp+ecx*1]
  413014:	out    dx,al
  413015:	mov    al,BYTE PTR [eax]
  413017:	push   ds
  413018:	lock push es
  41301a:	add    BYTE PTR [eax-0x3c],ah
  41301d:	fimul  WORD PTR [ebx+0x43c91bb9]
  413023:	push   ecx
  413024:	lock push es
  413026:	add    cl,ch
  413028:	ja     0x413000
  41302a:	cmp    DWORD PTR [esp+edi*8+0x1c725761],esp
  413031:	mov    edi,0x16c8bc89
  413036:	cmp    al,0xe2
  413038:	inc    ebp
  413039:	push   eax
  41303a:	mov    DWORD PTR [esp+edx*8+0xe2cd90],ebp
  413041:	add    BYTE PTR [eax],al
  413043:	std    
  413044:	idiv   BYTE PTR [edx-0x11]
  413047:	aas    
  413048:	push   edx
  413049:	clc    
  41304a:	sar    BYTE PTR [edi+ebx*4+0x2033e773],1
  413051:	jnp    0x41302c
  413053:	or     al,0xd9
  413055:	dec    ebp
  413056:	ret    0x5aa0
  413059:	push   es
  41305a:	pusha  
  41305b:	or     al,0xd7
  41305d:	xchg   DWORD PTR [esp+ebx*4+0x20],ebp
  413061:	jnp    0x413040
  413063:	or     eax,0x835c8708
  413068:	mov    BYTE PTR [ebx-0x3f],bh
  41306b:	lock pop esp
  41306d:	or     BYTE PTR [edx],dl
  41306f:	aam    0xd6
  413071:	jl     0x41305d
  413073:	scas   al,BYTE PTR es:[edi]
  413074:	out    dx,eax
  413075:	add    al,0x6a
  413077:	mov    ebp,0xcd6200ee
  41307c:	idiv   BYTE PTR [esi+0x144f6c6]
  413082:	(bad)  
  413083:	pop    ss
  413084:	pop    edx
  413085:	adc    al,0x1d
  413087:	pop    ebp
  413088:	nop
  413089:	jnp    0x413010
  41308b:	mov    bh,0x51
  41308d:	lock ret 0xdae5
  413091:	sub    DWORD PTR [eax],eax
  413093:	mov    cl,BYTE PTR [ecx+0x42]
  413096:	mov    DWORD PTR [edi],eax
  413098:	mov    edi,0xfa965587
  41309d:	push   eax
  41309e:	cld    
  41309f:	xchg   ecx,eax
  4130a0:	inc    esp
  4130a1:	in     al,dx
  4130a2:	sub    ebp,DWORD PTR [edx+0xd9acde]
  4130a8:	add    BYTE PTR [eax],al
  4130aa:	dec    eax
  4130ab:	popa   
  4130ac:	jno    0x413086
  4130ae:	or     eax,0x1c3bf27f
  4130b3:	jo     0x4130bd
  4130b5:	mov    ecx,DWORD PTR [edi+0x424d85b5]
  4130bb:	mov    ebx,0xd17f8b06
  4130c0:	test   DWORD PTR [ebp+0x32],edx
  4130c3:	mov    bh,BYTE PTR [ecx+0x1c]
  4130c6:	ficom  DWORD PTR [ebx+ecx*2+0x2]
  4130ca:	add    cl,BYTE PTR [bx+di-0x3bb1]
  4130cf:	pop    edx
  4130d0:	push   ecx
  4130d1:	adc    ch,cl
  4130d3:	jle    0x413126
  4130d5:	adc    al,0xdb
  4130d7:	jecxz  0x4130db
  4130d9:	cmp    esp,eax
  4130db:	fimul  WORD PTR [ebp+ecx*8-0xfff676]
  4130e2:	push   edi
  4130e3:	lds    eax,FWORD PTR [eax-0x78fd1183]
  4130e9:	jne    0x413079
  4130eb:	push   esi
  4130ec:	pop    ss
  4130ed:	mov    ecx,edi
  4130ef:	jmp    0xfa49:0x61050c88
  4130f6:	loop   0x413136
  4130f8:	xor    eax,DWORD PTR [ecx]
  4130fa:	loop   0x41311a
  4130fc:	xor    eax,DWORD PTR [edx]
  4130fe:	rcr    BYTE PTR [edi],1
  413100:	test   DWORD PTR [eax-0x7d00d212],0x4d8a0695
  41310a:	pop    esi
  41310b:	ret    0x4dd
  41310e:	add    BYTE PTR [eax],al
  413110:	add    bl,dh
  413112:	jmp    0xb540b9d0
  413117:	ja     0x413164
  413119:	sbb    eax,DWORD PTR [ebp-0x1ced3f45]
  41311f:	js     0x413172
  413121:	adc    al,0xe9
  413123:	mov    bh,0x1
  413125:	sub    esp,DWORD PTR [edi+0x38]
  413128:	xor    eax,0x2bd70f2
  41312d:	push   0xffffffba
  41312f:	aad    0x87
  413131:	scas   al,BYTE PTR es:[edi]
  413132:	aaa    
  413133:	jnp    0x413190
  413135:	(bad)  
  413136:	stc    
  413137:	sar    BYTE PTR [ebx+0x30],0x59
  41313b:	dec    edi
  41313c:	call   0x226dca9
  413141:	ret    0x4f67
  413144:	fdivr  DWORD PTR [eax+0x73]
  413147:	fld    QWORD PTR [edi+0x1ad8f61e]
  41314d:	push   0xdee9e5ab
  413152:	jo     0x4131bb
  413154:	clc    
  413155:	lods   al,BYTE PTR ds:[esi]
  413156:	jb     0x413165
  413158:	mov    DWORD PTR [esi],edi
  41315a:	idiv   BYTE PTR [eax+0x73]
  41315d:	sti    
  41315e:	pop    eax
  41315f:	inc    edi
  413160:	or     al,dh
  413162:	(bad)  
  413163:	jp     0x413199
  413165:	pusha  
  413166:	scas   eax,DWORD PTR es:[edi]
  413167:	sub    cl,BYTE PTR [ebx-0x55]
  41316a:	(bad)  
  41316b:	fimul  WORD PTR [ecx+0x43e6de2e]
  413171:	jnp    0x413162
  413173:	cmp    al,ch
  413175:	add    BYTE PTR [eax],al
  413177:	add    BYTE PTR [eax-0x5],bh
  41317a:	jmp    0x4131b5
  41317c:	mov    dh,0x79
  41317e:	rcr    BYTE PTR gs:[ebx+eiz*1-0x18],1
  413183:	mov    DWORD PTR [esi+0x4f4b2cbd],esp
  413189:	mov    ebp,0x7458275
  41318e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41318f:	out    0x2,al
  413191:	mov    ecx,0xc64f38e8
  413196:	mov    BYTE PTR [ecx],al
  413198:	sub    al,0x4b
  41319a:	xchg   DWORD PTR [ebx-0x16],eax
  41319d:	inc    ecx
  41319e:	fcomi  st,st(6)
  4131a0:	push   0x16e67d3c
  4131a5:	nop
  4131a6:	sub    al,0xf8
  4131a8:	jp     0x4131f4
  4131aa:	mov    edi,DWORD PTR [ebx-0x5]
  4131ad:	(bad)  
  4131ae:	cs inc esi
  4131b0:	popf   
  4131b1:	aas    
  4131b2:	xor    cl,al
  4131b4:	fild   DWORD PTR [esi]
  4131b6:	sbb    al,ah
  4131b8:	fcmovbe st,st(1)
  4131ba:	mov    ah,0x7a
  4131bc:	xlat   BYTE PTR ds:[ebx]
  4131bd:	xchg   DWORD PTR [ebx+0x53],edx
  4131c0:	push   0x49
  4131c2:	out    dx,eax
  4131c3:	jp     0x4131f1
  4131c5:	sti    
  4131c6:	pushf  
  4131c7:	dec    esi
  4131c8:	je     0x413213
  4131ca:	aaa    
  4131cb:	jp     0x413205
  4131cd:	div    DWORD PTR [ecx-0x17]
  4131d0:	push   0x31
  4131d2:	jmp    0x4131d6
  4131d4:	stos   DWORD PTR es:[edi],eax
  4131d5:	pop    es
  4131d6:	adc    DWORD PTR [edx],esi
  4131d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131d9:	les    esp,FWORD PTR [ebp+eiz*8-0xd000000]
  4131e0:	les    ebp,FWORD PTR [esi+eiz*8-0x4c53720d]
  4131e7:	ins    BYTE PTR es:[edi],dx
  4131e8:	pop    ecx
  4131e9:	daa    
  4131ea:	jl     0x41321c
  4131ec:	out    dx,eax
  4131ed:	mov    dl,0xc4
  4131ef:	test   BYTE PTR [ecx+0x6f303ce],0x12
  4131f6:	mov    esp,0xd99f496c
  4131fb:	repnz (bad) 
  4131fd:	xor    al,0xf8
  4131ff:	jnp    0x413242
  413201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413202:	jnp    0x4131c4
  413204:	jmp    0x7200:0x89e6d402
  41320b:	lock push es
  41320d:	add    BYTE PTR [edx],al
  41320f:	xor    DWORD PTR [ebx+0x51ab543],eax
  413215:	mov    DWORD PTR [ebx+edi*2],esp
  413218:	jo     0x41322a
  41321a:	xor    BYTE PTR [eax-0x239f0bb1],ch
  413220:	fidivr WORD PTR [ecx]
  413222:	test   al,0x94
  413224:	add    eax,0x8d232487
  413229:	inc    ebx
  41322a:	mov    eax,ds:0xea7b9bda
  41322f:	mov    DWORD PTR [edi-0x8],eax
  413232:	mov    si,ds
  413235:	or     eax,0xfdeebc96
  41323a:	(bad)  
  41323c:	or     al,0xb5
  41323e:	mov    ah,0xbc
  413240:	fdiv   QWORD PTR [ebx+0x39]
  413243:	add    BYTE PTR [eax],al
  413245:	add    BYTE PTR [edx+0x5e],bl
  413248:	or     BYTE PTR [ecx-0x30],dl
  41324b:	sar    ebp,cl
  41324d:	ss dec edx
  41324f:	inc    esi
  413250:	clc    
  413251:	ficomp WORD PTR [edi+0x46]
  413254:	hlt    
  413255:	push   0x1c
  413257:	mov    edi,0xbb146a00
  41325c:	add    BYTE PTR [edx+0x4c],ch
  41325f:	out    0x0,eax
  413261:	push   0x44
  413263:	jecxz  0x413265
  413265:	jb     0x413293
  413267:	xlat   BYTE PTR ds:[ebx]
  413268:	mov    edi,DWORD PTR [ebp-0x1139bf12]
  41326e:	lock xor DWORD PTR [ebx+0x31],0x70b44608
  413276:	mov    ebp,0x9f24c6b2
  41327b:	fcmovb st,st(3)
  41327d:	sub    al,0x2
  41327f:	fiadd  DWORD PTR [ecx+ebp*4+0x8148ce]
  413286:	mov    bh,0xe2
  413288:	add    BYTE PTR [ebp+0x4f],dh
  41328b:	pop    edi
  41328c:	add    cl,BYTE PTR [ecx+0x287cb1f]
  413292:	inc    ecx
  413293:	sbb    eax,ebx
  413295:	jne    0x4132e6
  413297:	jecxz  0x4132da
  413299:	loopne 0x4132fc
  41329b:	or     DWORD PTR [edi+0x7d],edi
  41329e:	jle    0x4132a6
  4132a0:	jno    0x4132a9
  4132a2:	dec    esp
  4132a3:	sbb    DWORD PTR [edi],ecx
  4132a5:	add    BYTE PTR [ebx+0x3bdc18],ah
  4132ab:	add    BYTE PTR [eax],al
  4132ad:	iret   
  4132ae:	into   
  4132af:	jno    0x4132c2
  4132b1:	test   DWORD PTR [eax],ebx
  4132b3:	in     al,0xff
  4132b5:	out    0xb6,eax
  4132b7:	jg     0x41327b
  4132b9:	push   cs
  4132ba:	xchg   DWORD PTR [ecx-0x2c],edi
  4132bd:	or     ah,BYTE PTR [ebx-0x38]
  4132c0:	jmp    0x4132a0
  4132c2:	fwait
  4132c3:	inc    ecx
  4132c4:	rcr    dl,1
  4132c6:	pop    esi
  4132c7:	inc    ecx
  4132c8:	in     al,0xf3
  4132ca:	sbb    eax,esp
  4132cc:	jbe    0x4132b0
  4132ce:	pop    esi
  4132cf:	inc    ecx
  4132d0:	fcom   DWORD PTR [ecx+0x11]
  4132d3:	fsub   st(3),st
  4132d5:	int3   
  4132d6:	pop    esi
  4132d7:	inc    ecx
  4132d8:	fadd   QWORD PTR [ecx+0x11]
  4132db:	fadd   DWORD PTR [eax+0x7400e357]
  4132e1:	lahf   
  4132e2:	cs inc ecx
  4132e4:	les    edi,FWORD PTR [esi-0x4]
  4132e7:	jg     0x4132f8
  4132e9:	mov    BYTE PTR [ebp+0x4],bl
  4132ec:	push   ds
  4132ed:	and    DWORD PTR [esi+0x5d92eabd],esi
  4132f3:	push   esp
  4132f4:	push   ds
  4132f5:	fwait
  4132f6:	pop    esi
  4132f7:	rol    cl,1
  4132f9:	mov    al,ds:0x4e4586d2
  4132fe:	ret    
  4132ff:	call   0x38a9261c
  413304:	push   ds
  413305:	icebp  
  413306:	addr16 dec eax
  413308:	push   ds
  413309:	lock test eax,0x6cf2fe47
  41330f:	retf   0x4
  413312:	add    BYTE PTR [eax],al
  413314:	jae    0x413328
  413316:	cmc    
  413317:	push   ebp
  413319:	bound  esp,QWORD PTR [esi-0x7e100d00]
  41331f:	or     eax,0xd05f6feb
  413324:	repz or DWORD PTR gs:[esp+ebx*8+0x6f],esi
  41332a:	pop    edi
  41332b:	std    
  41332c:	repz fisttp DWORD PTR [eax]
  41332f:	cmp    DWORD PTR [esi-0xcba7e5],esp
  413335:	jmp    0x4132c0
  413337:	add    eax,0x88ffbb7b
  41333c:	xor    ch,BYTE PTR [esi]
  41333e:	in     al,dx
  41333f:	or     BYTE PTR [ebx-0x5d],ch
  413342:	(bad)  
  413343:	(bad)  
  413344:	jns    0x413375
  413346:	ret    
  413347:	call   0xbc909a4f
  41334c:	mov    dl,0x37
  41334e:	cld    
  41334f:	xchg   DWORD PTR [edi],ebp
  413351:	mov    eax,0xb03f8803
  413356:	push   es
  413357:	(bad)  
  413358:	sub    DWORD PTR cs:[ebx],eax
  41335b:	xor    DWORD PTR [ebp-0x18f71116],0xac43c7dd
  413365:	out    dx,al
  413366:	mov    DWORD PTR ds:0x8bb173a4,eax
  41336c:	neg    edi
  41336e:	loop   0x4133e3
  413370:	scas   eax,DWORD PTR es:[edi]
  413371:	fstp   DWORD PTR [eax-0x8]
  413374:	mov    WORD PTR [ebx-0x2b],ds
  413377:	push   eax
  413378:	add    BYTE PTR [eax],al
  41337a:	add    BYTE PTR [ebx+edx*2+0x716e8d1],al
  413381:	jecxz  0x413365
  413383:	jbe    0x413389
  413385:	xlat   BYTE PTR ds:[ebx]
  413386:	mov    BYTE PTR [ebx],dh
  413388:	push   edx
  413389:	adc    ebx,esp
  41338b:	loopne 0x41336b
  41338d:	ficomp WORD PTR [edx+0x58c6eea8]
  413393:	pop    edi
  413394:	or     BYTE PTR [esi+0x38],dh
  413397:	pop    edi
  413398:	fdivr  DWORD PTR [esp+edx*8]
  41339b:	jp     0x4133ef
  41339d:	outs   dx,DWORD PTR ds:[esi]
  41339e:	leave  
  41339f:	test   BYTE PTR ds:0x8eeb6072,0x24
  4133a6:	loop   0x413423
  4133a8:	inc    edx
  4133a9:	xchg   esi,eax
  4133aa:	jmp    0x413423
  4133ac:	aam    0x8e
  4133ae:	loop   0x41341a
  4133b0:	inc    edx
  4133b1:	cmp    eax,esp
  4133b3:	adc    eax,DWORD PTR ds:0xd680e317
  4133b9:	pmulhw mm6,QWORD PTR fs:0xd875d07f
  4133c1:	pushw  es
  4133c3:	add    eax,DWORD PTR [esp+eiz*4-0x5373fc11]
  4133ca:	out    dx,eax
  4133cb:	jb     0x413436
  4133cd:	sbb    esi,ebx
  4133cf:	sbb    eax,DWORD PTR [edx+0x27]
  4133d2:	adc    ah,BYTE PTR [edi+0x4a]
  4133d5:	cmp    eax,0xac83cee2
  4133da:	jmp    0x4133bf
  4133dc:	mov    esp,DWORD PTR [ebx+ebp*8+0x72000000]
  4133e3:	imul   ebp,DWORD PTR [edi],0x5741fbf3
  4133e9:	adc    bh,BYTE PTR [edi+0x26]
  4133ec:	adc    eax,0x6237a6e2
  4133f1:	leave  
  4133f2:	cmp    eax,0xf30f29ce
  4133f7:	xor    DWORD PTR [edx-0x11],esi
  4133fa:	jp     0x41343d
  4133fc:	add    ch,ah
  4133fe:	in     eax,0x43
  413400:	adc    dh,bl
  413402:	imul   esi,DWORD PTR [esi+0x0],0x5635f0e9
  413409:	jb     0x4133d5
  41340b:	repnz add BYTE PTR [ebx+eax*1+0x16],bl
  413410:	fst    DWORD PTR [eax]
  413412:	sbb    al,0xf3
  413414:	jne    0x41341f
  413416:	xor    cx,WORD PTR [eax]
  413419:	ins    BYTE PTR es:[edi],dx
  41341a:	sti    
  41341b:	adc    eax,0xee3a6250
  413420:	loop   0x4133dd
  413422:	push   edx
  413423:	(bad)  ds:0xff17aa5f
  413429:	and    edi,edi
  41342b:	or     DWORD PTR [esi-0x27fa00d2],esi
  413431:	rcr    ch,cl
  413433:	bnd jno 0x4133bf
  413436:	inc    cx
  413438:	sbb    BYTE PTR [edx-0x3c],dh
  41343b:	repnz mov DWORD PTR [esi],edx
  41343e:	mov    al,0x5
  413440:	inc    ebx
  413441:	(bad)  
  413443:	mov    al,0x89
  413445:	aaa    
  413446:	add    BYTE PTR [eax],al
  413448:	add    BYTE PTR [edi-0x23],ch
  41344b:	call   ebx
  41344d:	loopne 0x41345e
  41344f:	repnz (bad) 
  413452:	adc    BYTE PTR [edi],0x61
  413455:	fist   WORD PTR [esi]
  413457:	aas    
  413458:	add    ah,BYTE PTR [ebp+0x1f52f659]
  41345e:	xchg   ecx,edi
  413460:	jmp    0x41347f
  413462:	idiv   DWORD PTR [eax]
  413464:	cmp    esp,DWORD PTR [esi]
  413466:	hlt    
  413467:	mov    DWORD PTR [eax],eax
  413469:	addr16 out dx,eax
  41346b:	aas    
  41346c:	test   al,0xf
  41346e:	shl    DWORD PTR [edx+0x1f],0x96
  413472:	clc    
  413473:	jg     0x413487
  413475:	jmp    0x4134d0
  413477:	push   cs
  413478:	add    BYTE PTR [ecx+0xa6fbc],dh
  41347e:	rol    BYTE PTR [ebp+0x37495a18],cl
  413484:	retf   0xaff8
  413487:	xchg   DWORD PTR [ebp+0x7e],eax
  41348a:	or     eax,DWORD PTR [ebx+0xc]
  41348d:	jecxz  0x4134db
  41348f:	or     al,0x3b
  413491:	pop    ss
  413492:	fisttp DWORD PTR [esi+eax*4]
  413495:	(bad)  
  413496:	out    0xfb,eax
  413498:	dec    DWORD PTR [esp+edx*1]
  41349b:	popf   
  41349c:	adc    ch,al
  41349e:	dec    edx
  41349f:	add    BYTE PTR [ebp-0x68],bl
  4134a2:	(bad)  
  4134a4:	push   esp
  4134a5:	shl    ebp,1
  4134a7:	xchg   DWORD PTR [ebp+0x3e],ecx
  4134aa:	div    DWORD PTR [edx+0x51]
  4134b0:	pop    ss
  4134b1:	mov    ebp,esp
  4134b3:	inc    esp
  4134b4:	jmp    0xe61c63c9
  4134b9:	cmp    eax,0x66
  4134bc:	xor    DWORD PTR [ebx+0xb34840b],ebx
  4134c2:	add    BYTE PTR [eax],al
  4134c4:	or     eax,0xf4076d6f
  4134c9:	repz out dx,al
  4134cb:	jbe    0xda4135a1
  4134d1:	div    BYTE PTR [edx-0x2ff524bf]
  4134d7:	jne    0x2296ba78
  4134dd:	pusha  
  4134de:	xchg   DWORD PTR [ecx-0x27],edx
  4134e1:	pop    edi
  4134e2:	call   ebp
  4134e4:	int    0x6e
  4134e6:	ror    BYTE PTR [ecx+0x5d85cd67],cl
  4134ec:	sbb    DWORD PTR cs:[ecx-0x14],0x8bcc1523
  4134f4:	repz jl 0xc409e03e
  4134fb:	or     eax,0x606b1f5c
  413500:	sub    eax,0xde03657
  413505:	cdq    
  413506:	shl    DWORD PTR [ecx-0xa],1
  413509:	push   si
  41350b:	lock mov ch,ah
  41350e:	push   cs
  41350f:	mov    ch,0x33
  413511:	push   esi
  413512:	inc    edi
  413513:	lock add BYTE PTR [eax],al
  413516:	add    ch,cl
  413518:	clc    
  413519:	ss enter 0x60ec,0x5d
  41351e:	add    dh,bl
  413520:	fbld   TBYTE PTR [ebx-0x7f]
  413523:	into   
  413524:	pop    DWORD PTR [ecx*1+0x2136f]
  41352b:	repz mov ah,0x96
  41352e:	push   ebx
  41352f:	inc    ebx
  413530:	fcom   QWORD PTR [ebx-0x511b1cbb]
  413536:	ret    0x227a
  413539:	in     al,dx
  41353a:	or     eax,0x87011e64
  41353f:	mov    esi,0x17438b73
  413544:	pop    eax
  413545:	inc    edi
  413546:	les    edi,FWORD PTR [eax-0x2e]
  413549:	in     eax,0x29
  41354b:	xor    eax,0x89c096b4
  413550:	mov    edi,0xe286637
  413555:	push   ecx
  413556:	add    edi,DWORD PTR [edx-0x6d]
  413559:	aad    0xe9
  41355b:	cmc    
  41355c:	mov    ah,0x96
  41355e:	shr    BYTE PTR [edx-0x5d],0xd5
  413562:	data16 or BYTE PTR [ebx+0x7700dc5],bl
  413569:	add    al,BYTE PTR [eax]
  41356b:	repz retf 
  41356d:	cmp    BYTE PTR [ebx-0x41],0x7
  413571:	out    0xe,eax
  413573:	ja     0x41356a
  413575:	call   0x5e45287d
  41357a:	cmp    DWORD PTR [eax],eax
  41357c:	add    BYTE PTR [eax],al
  41357e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41357f:	add    al,0x56
  413581:	inc    edi
  413582:	jmp    0x413587
  413584:	ds into 
  413586:	(bad)  
  413587:	fwait
  413588:	je     0x41356d
  41358a:	js     0x4135bf
  41358c:	fcomp  st(6)
  41358e:	out    dx,al
  41358f:	mov    ds:0xc6460f0f,eax
  413594:	jo     0x4135ee
  413596:	imul   eax,DWORD PTR [edx*4+0x2c082356],0xffffffdc
  41359e:	repnz xor edi,ecx
  4135a1:	push   cs
  4135a2:	xchg   ch,cl
  4135a4:	jo     0x4135f6
  4135a6:	and    eax,DWORD PTR [esi+ecx*4]
  4135a9:	mov    ebp,0x83e3427a
  4135ae:	add    al,0x7
  4135b0:	pusha  
  4135b1:	cmp    BYTE PTR [ebx],bl
  4135b3:	jle    0x4135e1
  4135b5:	mov    al,ds:0x3b48afe
  4135ba:	repz push es
  4135bc:	popa   
  4135bd:	dec    esi
  4135be:	jecxz  0x413546
  4135c0:	nop
  4135c1:	add    al,0xa0
  4135c3:	adc    esi,DWORD PTR [edx-0x2d]
  4135c6:	retf   0xeec7
  4135c9:	xchg   BYTE PTR [ecx+0x6],cl
  4135cc:	out    0x3,eax
  4135ce:	push   0x4c
  4135d0:	iret   
  4135d1:	mov    ch,BYTE PTR [eax-0xd3a1522]
  4135d7:	mov    esi,0xfb35070
  4135dc:	sub    BYTE PTR [edx-0x5],dl
  4135df:	jg     0x41357f
  4135e1:	test   DWORD PTR [eax],0xbf0b0000
  4135e7:	jmp    0xe319:0xe7fa79cd
  4135ee:	add    eax,DWORD PTR [eax]
  4135f0:	ins    BYTE PTR es:[edi],dx
  4135f1:	nop
  4135f2:	push   es
  4135f3:	add    cl,ch
  4135f5:	xor    BYTE PTR [esi],cl
  4135f7:	inc    ebx
  4135f8:	sub    DWORD PTR [edx-0x1e],eax
  4135fb:	add    DWORD PTR [esi-0x600ef20c],edx
  413601:	pusha  
  413602:	jmp    0x413587
  413604:	call   0xc13cf9
  413609:	repnz push edi
  41360b:	aas    
  41360c:	jb     0x4135c6
  41360e:	or     eax,0x5c75e6c1
  413613:	(bad)  
  413614:	call   0x186b409
  413619:	jp     0x413652
  41361b:	call   0xd046680a
  413620:	adc    dh,BYTE PTR [ecx]
  413622:	push   ebp
  413623:	sbb    esp,DWORD PTR [edx-0x42]
  413626:	cli    
  413627:	sub    BYTE PTR [ecx+0x3487e3f2],bh
  41362d:	das    
  41362e:	jge    0x4136a3
  413630:	test   eax,0xe7347dd5
  413635:	into   
  413636:	or     eax,0x85ea1c30
  41363b:	shr    bl,0xb
  41363e:	leave  
  41363f:	jb     0x4135c5
  413641:	repnz inc ecx
  413643:	or     al,0xd2
  413645:	sub    ebx,DWORD PTR [esi+ecx*8-0x70]
  413649:	add    BYTE PTR [eax],al
  41364b:	add    dh,ch
  41364d:	sar    ebp,cl
  41364f:	jmp    0xe64611c4
  413654:	jne    0x413672
  413656:	(bad)  
  413657:	call   0x2309b44c
  41365c:	mov    dl,0x4
  41365e:	test   DWORD PTR ds:0x620006f0,ecx
  413664:	ss out dx,eax
  413666:	mov    BYTE PTR [eax+ecx*8-0x26ff40f8],dh
  41366d:	xchg   esi,eax
  41366e:	aaa    
  41366f:	ret    0xcf89
  413672:	mov    BYTE PTR [edi-0x62],dh
  413675:	pop    ds
  413676:	lock add edi,ebx
  413679:	jge    0x4136ec
  41367b:	shl    BYTE PTR [ecx],0x3a
  41367e:	ror    BYTE PTR [ebx+0x30370cbe],0x7f
  413685:	xlat   BYTE PTR ds:[ebx]
  413686:	add    al,0x8e
  413689:	out    dx,eax
  41368a:	shl    DWORD PTR [edx-0x1b],0x7
  41368e:	dec    ebx
  41368f:	or     al,0xb1
  413691:	mov    edi,0xbbf3d076
  413696:	add    BYTE PTR [eax],al
  413698:	mov    al,BYTE PTR [ebx]
  41369a:	mov    dh,0x47
  41369c:	sbb    ebx,DWORD PTR [esi-0x40]
  41369f:	add    dh,ch
  4136a1:	or     al,BYTE PTR [eax]
  4136a3:	add    ebp,0x36
  4136a6:	add    DWORD PTR [eax+edx*2+0x5],esi
  4136aa:	inc    ecx
  4136ab:	cld    
  4136ac:	jns    0x413684
  4136ae:	mov    ah,0x43
  4136b0:	add    BYTE PTR [eax],al
  4136b2:	add    BYTE PTR [edx-0x21],bl
  4136b5:	or     cl,BYTE PTR [ebx+0x4489e717]
  4136bb:	dec    ebx
  4136bc:	cmc    
  4136bd:	test   BYTE PTR [ebp+0x56],al
  4136c0:	jg     0x413703
  4136c2:	in     al,dx
  4136c3:	mov    eax,ds:0xd68dfc40
  4136c8:	add    eax,0xc6ff8d0c
  4136cd:	call   0xfbf3cfaf
  4136d2:	test   BYTE PTR [edx+0x3],bl
  4136d5:	test   BYTE PTR [ecx-0x74fff9f6],bh
  4136db:	iret   
  4136dc:	(bad)  
  4136dd:	inc    DWORD PTR [esi+esi*1+0x6c]
  4136e1:	xchg   DWORD PTR [ebp+0x3a],edx
  4136e4:	ins    BYTE PTR es:[edi],dx
  4136e5:	mov    ebp,0x63e7f3c2
  4136ea:	xchg   DWORD PTR [ebx],eax
  4136ec:	retf   0x5388
  4136ef:	xlat   BYTE PTR ds:[ebx]
  4136f0:	rol    edx,0xc2
  4136f3:	sti    
  4136f4:	leave  
  4136f5:	mov    dl,BYTE PTR [eax-0xf]
  4136f8:	ror    DWORD PTR [eax-0x3d363cad],0xc2
  4136ff:	sti    
  413700:	or     DWORD PTR [edx-0x777610b0],0xc281a753
  41370a:	ret    0x89eb
  41370d:	mov    dl,BYTE PTR [eax-0xb]
  413710:	push   esp
  413711:	xor    al,0x50
  413713:	jp     0x413784
  413715:	or     DWORD PTR [ecx-0x4000000],eax
  41371b:	stos   DWORD PTR es:[edi],eax
  41371c:	push   es
  41371d:	mov    ebp,DWORD PTR [ebx]
  41371f:	mov    ah,0x55
  413721:	or     eax,0x51ec326c
  413726:	cmp    bl,BYTE PTR fs:[eax-0x273fb4b1]
  41372d:	std    
  41372e:	push   esp
  41372f:	les    esi,FWORD PTR [esi]
  413731:	or     eax,0x48432085
  413736:	mov    edi,0x13744c07
  41373b:	sub    BYTE PTR [esp+esi*2-0x13],cl
  41373f:	pop    esp
  413740:	pop    edi
  413741:	cld    
  413742:	repz je 0x41377b
  413745:	std    
  413746:	sahf   
  413747:	(bad)  
  413748:	lea    edx,[ebx+0x47]
  41374b:	js     0x41379c
  41374d:	clc    
  41374e:	push   0x7855b42a
  413753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413754:	in     al,dx
  413755:	xchg   esi,eax
  413756:	or     DWORD PTR [eax-0x27],edx
  413759:	jmp    0xd8909029
  41375e:	push   0x66fdaffa
  413763:	pop    es
  413764:	pop    edi
  413765:	(bad)  
  413766:	xor    BYTE PTR [edi+0x59cb32b8],dh
  41376c:	pop    ebp
  41376d:	fcmovnbe st,st(6)
  41376f:	fdiv   st(2),st
  413771:	fiadd  DWORD PTR [eax-0x51]
  413774:	jb     0x4137a7
  413776:	lahf   
  413777:	shl    BYTE PTR [ebx+ebx*8+0x35174a6a],1
  41377e:	add    BYTE PTR [eax],al
  413780:	add    BYTE PTR [esi],bl
  413782:	fbld   TBYTE PTR [ebp-0x2a]
  413785:	scas   al,BYTE PTR es:[edi]
  413786:	shl    BYTE PTR [eax+0x41],1
  413789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41378a:	mov    ah,BYTE PTR [edi]
  41378c:	push   eax
  41378d:	call   0x9728dc0d
  413792:	dec    edx
  413793:	sbb    ecx,DWORD PTR [ecx-0x730cf9c9]
  413799:	xor    bl,ah
  41379b:	jb     0x4137de
  41379d:	xchg   DWORD PTR [esi],eax
  41379f:	lods   al,BYTE PTR ds:[esi]
  4137a0:	fild   QWORD PTR [edx+0x42]
  4137a3:	fisttp DWORD PTR [esi-0x552f3d38]
  4137a9:	push   0xc08eded0
  4137ae:	out    0xea,al
  4137b0:	xor    BYTE PTR [ebx-0x22],ah
  4137b3:	xor    cl,bl
  4137b5:	dec    esi
  4137b6:	shr    BYTE PTR [esi+edi*4-0x40],1
  4137ba:	or     DWORD PTR [ecx+0x6],edx
  4137bd:	popf   
  4137be:	fcomi  st,st(0)
  4137c0:	push   ss
  4137c1:	xor    ebp,DWORD PTR [ecx+0x60]
  4137c4:	inc    eax
  4137c5:	call   FWORD PTR [ebx+ebp*8-0x78]
  4137c9:	mov    al,0x2
  4137cb:	aaa    
  4137cc:	(bad)  [eax+0x32c50cfe]
  4137d2:	inc    DWORD PTR [ecx*4-0xa70ff58]
  4137d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137da:	add    eax,0x5b337fe7
  4137df:	add    dh,bl
  4137e1:	sbb    DWORD PTR [esp+ebp*8+0x6e],edx
  4137e5:	add    BYTE PTR [eax],al
  4137e7:	add    BYTE PTR [ebx-0x4d],al
  4137ea:	std    
  4137eb:	fdiv   st(0),st
  4137ed:	fiadd  WORD PTR [eax]
  4137ef:	enter  0x6f7,0x84
  4137f3:	sub    DWORD PTR [esp+eax*1],esp
  4137f6:	xor    DWORD PTR [edi+0x32],edx
  4137f9:	fiadd  WORD PTR [edx]
  4137fb:	cli    
  4137fc:	mov    ds:0xc81d73d1,al
  413801:	dec    esi
  413802:	xor    BYTE PTR [esi],0x99
  413805:	jge    0x4137cd
  413807:	inc    edx
  413808:	not    BYTE PTR ds:0x2deac6c0
  41380e:	(bad)  
  41380f:	sub    ebp,eax
  413811:	push   es
  413812:	xor    ah,BYTE PTR [eax]
  413814:	test   DWORD PTR [edx],ecx
  413816:	iret   
  413817:	add    DWORD PTR [edx+0x34e8a88f],ebp
  41381d:	iret   
  41381e:	mov    DWORD PTR [ebp+0x60660adc],edx
  413824:	out    dx,al
  413825:	jge    0x41386b
  413827:	(bad)  
  41382a:	or     BYTE PTR [ebx+0x725306f7],ch
  413830:	dec    ebx
  413831:	test   esp,ebp
  413833:	in     eax,0x1f
  413835:	cmp    DWORD PTR [ebp+0x43],edx
  413838:	minps  xmm1,XMMWORD PTR [eax]
  41383b:	(bad)  
  41383c:	hlt    
  41383d:	out    0xa9,al
  41383f:	sub    dh,bh
  413841:	jge    0x41383b
  413843:	bound  edi,QWORD PTR [eax-0x2f]
  413846:	adc    esp,ebp
  413848:	daa    
  413849:	(bad)  
  41384b:	jb     0x41384d
  41384d:	add    BYTE PTR [eax],al
  41384f:	aas    
  413850:	xor    esi,0xffffffee
  413853:	pushf  
  413854:	(bad)  
  413855:	(bad)  
  413856:	call   0xe1bcbe4b
  41385b:	lock xchg DWORD PTR [esi],ebx
  41385e:	add    ah,dh
  413860:	add    DWORD PTR [ebx],0x8448366
  413866:	lgs    eax,FWORD PTR [ebp+0x4]
  41386a:	(bad)  
  41386b:	pop    ss
  41386c:	mov    al,0x0
  41386e:	data16 arpl WORD PTR [ecx+0xa],cx
  413872:	orps   xmm0,XMMWORD PTR [ebp+edi*8-0x1]
  413877:	retf   0xb2ff
  41387a:	dec    esi
  41387b:	rcr    BYTE PTR [edx],cl
  41387d:	dec    ebp
  41387e:	push   ebx
  41387f:	sub    eax,0x8a10b1de
  413884:	or     al,BYTE PTR [ecx+0x4dd176c0]
  41388a:	push   0x9f2
  41388f:	int    0x3d
  413891:	or     BYTE PTR [ebp-0x72b221ac],cl
  413897:	inc    edi
  413898:	add    dl,BYTE PTR [eax+0x53]
  41389b:	repnz aam 0xb7
  41389e:	add    DWORD PTR [edx-0x35ccfd25],ebx
  4138a4:	add    DWORD PTR [esi+0x10],0x840bc307
  4138ab:	dec    esi
  4138ac:	or     DWORD PTR [eax],eax
  4138ae:	add    cl,ah
  4138b0:	xor    al,0x8
  4138b2:	data16 add BYTE PTR [eax],al
  4138b5:	add    cl,ah
  4138b7:	inc    esi
  4138b8:	push   cs
  4138b9:	pcmpeqw mm0,QWORD PTR [eax+0x8]
  4138bd:	data16 fwait
  4138bf:	loop   0x4138c0
  4138c1:	xchg   DWORD PTR [ebx+esi*8],edx
  4138c4:	or     dh,BYTE PTR [esi-0x3e550076]
  4138ca:	rol    DWORD PTR [edi+0xc],cl
  4138cd:	test   al,0x19
  4138cf:	ds push es
  4138d1:	cmp    DWORD PTR [edx-0x4a],0x7f
  4138d5:	rcl    BYTE PTR [esi],0x81
  4138d8:	inc    esi
  4138d9:	or     al,0xf3
  4138db:	imul   eax,DWORD PTR [eax+0xe],0x88241e7e
  4138e2:	lock pop ecx
  4138e4:	inc    eax
  4138e5:	push   cs
  4138e6:	imul   esp,DWORD PTR [esi],0x21
  4138e9:	(bad)  
  4138ea:	lods   eax,DWORD PTR ds:[esi]
  4138eb:	rol    DWORD PTR [ecx],0x66
  4138ee:	jo     0x4138cc
  4138f0:	pop    es
  4138f1:	or     ah,dh
  4138f3:	dec    edx
  4138f4:	ror    DWORD PTR [eax-0xe7fecb],0x5f
  4138fb:	retf   0xb508
  4138fe:	xor    al,0xae
  413900:	test   al,bh
  413902:	jecxz  0x41388e
  413904:	lock les esi,FWORD PTR [esi]
  413907:	fadd   DWORD PTR [ecx]
  413909:	jl     0x4138fe
  41390b:	ffreep st(0)
  41390d:	inc    ebx
  41390e:	stos   DWORD PTR es:[edi],eax
  41390f:	aas    
  413910:	add    al,0x0
  413912:	repz sbb al,0x3e
  413915:	hlt    
  413916:	cld    
  413917:	fild   WORD PTR [ecx]
  413919:	add    BYTE PTR [eax],al
  41391b:	add    BYTE PTR [eax],al
  41391d:	mov    cl,bl
  41391f:	test   al,bh
  413921:	shl    DWORD PTR [edx-0x12],cl
  413924:	les    ebp,FWORD PTR [esi]
  413926:	fadd   DWORD PTR [ecx]
  413928:	add    BYTE PTR [edi+ebx*8-0x40],bh
  41392c:	inc    ebx
  41392d:	jnp    0x41390e
  41392f:	fadd   DWORD PTR [eax]
  413931:	repz and al,0x3e
  413934:	hlt    
  413935:	fild   WORD PTR fs:[ecx]
  413938:	add    BYTE PTR [esi+0x25],ch
  41393b:	sub    dl,BYTE PTR [eax+0x66]
  41393e:	sbb    eax,0x22785020
  413943:	or     al,0xe8
  413945:	pop    ds
  413946:	vpaddw ymm5,ymm5,YMMWORD PTR [esi+0x25]
  41394b:	sub    DWORD PTR [eax+0x66],edx
  41394e:	sbb    eax,0x2278501e
  413953:	fsub   st(0),st
  413955:	das    
  413956:	push   es
  413957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413958:	xlat   BYTE PTR ds:[ebx]
  413959:	push   ds
  41395a:	jnp    0x413981
  41395c:	sub    bl,al
  41395e:	jnp    0x41398d
  413960:	sub    al,0xa3
  413962:	and    DWORD PTR [eax+edx*8],0xd785921b
  413969:	(bad)  
  41396a:	pop    edi
  41396b:	xlat   BYTE PTR ds:[ebx]
  41396c:	xor    ch,BYTE PTR [eax+0x44]
  41396f:	mov    eax,0x683cdb33
  413974:	xlat   BYTE PTR ds:[ebx]
  413975:	out    0x81,al
  413977:	lods   eax,DWORD PTR ds:[esi]
  413978:	adc    ebp,DWORD PTR [ebx+0x45]
  41397b:	test   al,0x6
  41397d:	sahf   
  41397e:	inc    ebp
  41397f:	loope  0x413987
  413981:	add    BYTE PTR [eax],al
  413983:	add    BYTE PTR [esi+0x2dbddb45],bl
  413989:	adc    ebp,eax
  41398b:	xor    BYTE PTR [ebx-0x4f141bad],0x87
  413992:	xlat   BYTE PTR ss:[ebx]
  413994:	je     0x4139db
  413996:	iret   
  413997:	xor    BYTE PTR [ebx+0x25d6fd53],0xf7
  41399e:	sbb    eax,0x6f2960e
  4139a3:	hlt    
  4139a4:	int3   
  4139a5:	push   es
  4139a6:	pusha  
  4139a7:	ds out dx,eax
  4139a9:	and    DWORD PTR [edi],0xa4c4f750
  4139af:	(bad)  
  4139b0:	je     0x4139e7
  4139b2:	push   DWORD PTR [eax-0x7c11338d]
  4139b8:	call   0xec922188
  4139bd:	retf   
  4139be:	push   ebp
  4139bf:	hlt    
  4139c0:	push   edi
  4139c1:	repnz retf 0xcf3
  4139c5:	pop    es
  4139c6:	xor    eax,0xc68733ec
  4139cb:	(bad)  
  4139cc:	add    dl,ch
  4139ce:	jb     0x41398d
  4139d0:	xchg   esi,eax
  4139d1:	sub    al,0x0
  4139d3:	adc    bh,BYTE PTR [esi]
  4139d5:	leave  
  4139d6:	add    al,0xe9
  4139d8:	cmp    eax,0xeea60455
  4139dd:	leave  
  4139de:	adc    ecx,DWORD PTR [ecx-0x69fff3e0]
  4139e4:	mov    esi,0xf4fcf6
  4139e9:	add    BYTE PTR [eax],al
  4139eb:	and    al,0xf7
  4139ed:	aas    
  4139ee:	jmp    0x915d8f18
  4139f3:	ja     0x41397b
  4139f5:	std    
  4139f6:	jbe    0x4139bd
  4139f8:	push   esp
  4139f9:	sbb    BYTE PTR [ecx+0x66fd875f],al
  4139ff:	lds    edx,FWORD PTR [esp+eax*2+0x51]
  413a03:	addr16 xchg ch,bh
  413a06:	push   esi
  413a07:	push   ds
  413a08:	fild   WORD PTR [ecx-0x3e366297]
  413a0e:	pushf  
  413a0f:	imul   ebx,edx,0x579d974f
  413a15:	or     al,0x36
  413a17:	mov    ds:0xf0a91253,eax
  413a1c:	jge    0x413a0e
  413a1e:	int3   
  413a1f:	lock push es
  413a21:	std    
  413a22:	jmp    0x100f690
  413a27:	cmp    dh,0xbe
  413a2a:	bound  ebp,QWORD PTR [esi-0x5a1620b5]
  413a30:	push   es
  413a31:	add    BYTE PTR [edx+0x46],dh
  413a34:	mov    esp,edx
  413a36:	fyl2xp1 
  413a38:	sar    BYTE PTR [edi-0x207407ff],0xf1
  413a3f:	jmp    0x4139cc
  413a41:	xchg   DWORD PTR [ebx+edi*1],esp
  413a44:	pusha  
  413a45:	add    al,0x64
  413a47:	or     al,0xcb
  413a49:	push   eax
  413a4a:	into   
  413a4b:	mov    ah,0xfe
  413a4d:	out    0x0,eax
  413a4f:	add    BYTE PTR [eax],al
  413a51:	add    BYTE PTR [ecx-0x310002ec],bh
  413a57:	ret    0x1874
  413a5a:	lahf   
  413a5b:	mov    esp,0xb1fc1074
  413a60:	jno    0x413a6e
  413a62:	push   ebp
  413a63:	cmp    ecx,DWORD PTR [eax]
  413a65:	call   0x3e4eff
  413a6a:	sahf   
  413a6b:	ret    0x474
  413a6e:	stos   BYTE PTR es:[edi],al
  413a6f:	pop    es
  413a70:	out    0x2,eax
  413a72:	cmp    bh,al
  413a74:	pop    esi
  413a75:	leave  
  413a76:	dec    eax
  413a77:	cli    
  413a78:	call   DWORD PTR [ecx+edx*2-0x21]
  413a7c:	jge    0x413a6a
  413a7e:	(bad)  
  413a7f:	or     BYTE PTR [eax],al
  413a81:	add    BYTE PTR [ecx-0x63f3a681],bl
  413a87:	sbb    eax,DWORD PTR [edi+0xc60d27d]
  413a8d:	push   0x4038f2
  413a92:	pop    ebp
  413a93:	fisubr WORD PTR [ebp+0x5e]
  413a96:	retf   
  413a97:	push   es
  413a98:	test   al,al
  413a9a:	xchg   ebp,eax
  413a9b:	dec    edx
  413a9c:	sti    
  413a9d:	pop    es
  413a9e:	call   0xfdcf:0x7d406806
  413aa5:	imul   eax,DWORD PTR [esi+0x4ac84181],0x9b5d97de
  413aaf:	push   es
  413ab0:	test   al,al
  413ab2:	test   DWORD PTR [edx-0x1d],ecx
  413ab5:	pop    es
  413ab6:	add    BYTE PTR [eax],al
  413ab8:	add    BYTE PTR [edx-0x7dfb95fa],cl
  413abe:	push   ss
  413abf:	mov    DWORD PTR [ebp+0x12],ecx
  413ac2:	push   ss
  413ac3:	mov    ch,0x38
  413ac5:	mov    esp,0x52e80042
  413aca:	(bad)  
  413acd:	repz pop edx
  413acf:	ror    DWORD PTR ds:0xfffc6b6e,0x3c
  413ad6:	pop    eax
  413ad7:	ds int 0x6b
  413ada:	and    ebp,DWORD PTR [edi-0x796f5175]
  413ae0:	inc    ebx
  413ae1:	aaa    
  413ae2:	enter  0x5c0,0xf3
  413ae6:	fild   WORD PTR [esi+0x3e5b0e7b]
  413aec:	rcr    BYTE PTR [ebx],1
  413aee:	cmp    ah,bh
  413af0:	inc    DWORD PTR [ecx+ebp*4]
  413af3:	mov    eax,DWORD PTR [ebx+0x16]
  413af6:	ror    DWORD PTR [ebx-0x3efe0bb5],1
  413afc:	loopne 0x413af9
  413afe:	stc    
  413aff:	push   es
  413b00:	mov    edi,0x3c110f4
  413b05:	fisub  WORD PTR [ebx-0x2c]
  413b08:	std    
  413b09:	call   0x18b9:0xf30000df
  413b10:	mov    edi,0x58560f4
  413b15:	repz fisttp WORD PTR [eax-0x163d8ff7]
  413b1c:	add    BYTE PTR [eax],al
  413b1e:	add    BYTE PTR [eax],al
  413b20:	loopne 0x413b32
  413b22:	xchg   BYTE PTR [ebx-0x65],al
  413b25:	mov    al,ds:0xf4468b31
  413b2a:	mov    DWORD PTR [ebx-0x79],edi
  413b2d:	call   0x9ab93f61
  413b32:	in     eax,0x89
  413b34:	mov    ebx,0x89bfb164
  413b39:	scas   eax,DWORD PTR es:[edi]
  413b3a:	sbb    bh,0xf3
  413b3d:	(bad)  
  413b3f:	add    al,bh
  413b41:	and    eax,0xdfa5d088
  413b46:	aam    0x0
  413b48:	repz push es
  413b4a:	or     bh,BYTE PTR [edx-0x108196c]
  413b50:	cmp    al,0x5c
  413b52:	jmp    0x413ad4
  413b54:	mov    al,0xe6
  413b56:	test   al,0xdd
  413b58:	jmp    0x413b21
  413b5a:	leave  
  413b5b:	cld    
  413b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b5d:	leave  
  413b5e:	xor    al,0xfc
  413b60:	sti    
  413b61:	mov    esp,0xde134160
  413b66:	xchg   BYTE PTR [ecx],dh
  413b68:	sbb    al,0xc9
  413b6a:	imul   eax,esp,0xffffffa0
  413b6d:	add    ch,BYTE PTR [edx+0x41]
  413b70:	pop    ds
  413b71:	leave  
  413b72:	bound  ecx,QWORD PTR [ecx+0x17]
  413b75:	test   DWORD PTR [edi+0x4],edi
  413b78:	out    dx,al
  413b79:	and    ch,0xa
  413b7c:	repz push es
  413b7e:	das    
  413b7f:	add    esi,DWORD PTR [eax+0x25]
  413b82:	out    dx,al
  413b83:	add    eax,DWORD PTR [eax]
  413b85:	add    BYTE PTR [eax],al
  413b87:	repz pop esi
  413b89:	daa    
  413b8a:	pop    ebx
  413b8b:	cli    
  413b8c:	push   es
  413b8d:	mov    esi,0x6bff587e
  413b92:	dec    ecx
  413b93:	into   
  413b94:	aaa    
  413b95:	aas    
  413b96:	nop
  413b97:	daa    
  413b98:	push   es
  413b99:	out    0x87,eax
  413b9b:	mov    bl,0xf8
  413b9d:	push   0xfffffffc
  413b9f:	out    dx,eax
  413ba0:	push   es
  413ba1:	out    0x83,eax
  413ba3:	sub    al,cl
  413ba5:	out    0x7e,eax
  413ba7:	cli    
  413ba8:	not    DWORD PTR [ebx-0x3a]
  413bab:	sahf   
  413bac:	xor    al,0xef
  413bae:	xchg   DWORD PTR [ebx-0xa279d08],esi
  413bb4:	push   es
  413bb5:	out    0x7e,eax
  413bb7:	cli    
  413bb8:	add    DWORD PTR [ebx+eiz*8+0x7bac79f3],0x23
  413bc0:	jp     0x413b56
  413bc2:	jecxz  0x413c32
  413bc4:	xor    al,0x0
  413bc6:	in     eax,0xe5
  413bc8:	mov    esi,0x82f02083
  413bcd:	(bad)  
  413bcf:	lock push es
  413bd1:	std    
  413bd2:	push   esp
  413bd3:	inc    edi
  413bd4:	jge    0x413c19
  413bd6:	popa   
  413bd7:	sub    BYTE PTR [esp+edi*8-0x32],dl
  413bdb:	and    DWORD PTR [esi-0x28],edi
  413bde:	ins    BYTE PTR es:[edi],dx
  413bdf:	test   edx,edi
  413be1:	and    DWORD PTR [edx+edi*8-0x3449fffa],0xffffffe6
  413be9:	std    
  413bea:	aam    0x0
  413bec:	add    BYTE PTR [eax],al
  413bee:	test   al,0xf4
  413bf0:	aas    
  413bf1:	jmp    0xf08acce7
  413bf6:	(bad)  
  413bf7:	into   
  413bf8:	bound  bp,DWORD PTR [ebp+0x10a865fe]
  413bff:	jmp    DWORD PTR [ebp-0xe]
  413c02:	das    
  413c03:	popa   
  413c04:	xchg   DWORD PTR [ebx+eiz*2],esp
  413c07:	popa   
  413c08:	mov    DWORD PTR [edx],ebp
  413c0a:	in     eax,0xfa
  413c0c:	mov    ch,0x22
  413c0e:	fsub   QWORD PTR [ecx-0x41]
  413c11:	dec    ecx
  413c12:	fsub   DWORD PTR [ecx+0x9]
  413c15:	sub    BYTE PTR [edx-0x80],bl
  413c18:	inc    ebx
  413c19:	ja     0x413c60
  413c1b:	ret    0xe923
  413c1e:	lock leave 
  413c20:	add    BYTE PTR [edx-0x4f],dh
  413c23:	xchg   edi,esp
  413c25:	fldcw  WORD PTR [ebp-0x50d97678]
  413c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c2c:	adc    BYTE PTR [edx+0x59],ah
  413c2f:	and    eax,0x8756f2d6
  413c34:	call   0x8e8f42a
  413c39:	loop   0x413bea
  413c3b:	jg     0x413c80
  413c3d:	pop    ecx
  413c3e:	push   ds
  413c3f:	test   DWORD PTR [edx+0x50234900],0x50a3978d
  413c49:	call   0x3c7216
  413c4e:	je     0x413c12
  413c50:	inc    ecx
  413c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c52:	add    BYTE PTR [eax],al
  413c54:	add    BYTE PTR [edx+0x5d],ah
  413c57:	mov    ebp,0x63ca7445
  413c5c:	rcl    DWORD PTR [edi],0x6b
  413c5f:	or     BYTE PTR [edx+0x42],ch
  413c62:	dec    eax
  413c63:	inc    ecx
  413c64:	pushf  
  413c65:	fidiv  DWORD PTR [ebp-0x5bbdf78f]
  413c6b:	pop    esp
  413c6c:	add    DWORD PTR [edx],ebx
  413c6e:	jg     0x413c30
  413c70:	setbe  dl
  413c73:	add    eax,0xfb800a00
  413c78:	je     0x413c80
  413c7a:	push   cs
  413c7b:	sti    
  413c7c:	jne    0x413cf8
  413c7e:	mov    ch,0x71
  413c80:	or     BYTE PTR [edx+0x4c],dh
  413c83:	pop    esp
  413c84:	add    DWORD PTR [edx],ecx
  413c86:	jg     0x413c48
  413c88:	orps   xmm7,XMMWORD PTR [ebx+0x43da0003]
  413c8f:	cmp    DWORD PTR [esp+eax*8],esi
  413c92:	dec    edx
  413c93:	add    BYTE PTR [eax+0xd84d],bh
  413c99:	ins    BYTE PTR es:[edi],dx
  413c9a:	fadd   DWORD PTR [eax]
  413c9c:	add    dl,bl
  413c9e:	inc    ebx
  413c9f:	enter  0xb456,0x41
  413ca3:	inc    ecx
  413ca4:	fstp   TBYTE PTR [edi]
  413ca6:	mov    cs,WORD PTR [eax+0x6ad7edfe]
  413cac:	add    BYTE PTR [edx-0x7527be30],cl
  413cb2:	xor    BYTE PTR [ebp-0x2c27ccb3],al
  413cb8:	push   esi
  413cb9:	add    BYTE PTR [eax],al
  413cbb:	add    BYTE PTR [ecx-0xc7a7620],ch
  413cc1:	daa    
  413cc2:	int    0xfd
  413cc4:	jl     0x413d44
  413cc6:	xor    ebp,edi
  413cc8:	pushf  
  413cc9:	xor    eax,ecx
  413ccb:	sbb    BYTE PTR [edx+0x3b],bh
  413cce:	leave  
  413ccf:	xchg   esi,ebx
  413cd1:	or     eax,DWORD PTR [ebx+0xb05b7b]
  413cd7:	xchg   BYTE PTR [edx],bh
  413cd9:	mov    al,0x1
  413cdb:	add    cl,bl
  413cdd:	scas   eax,DWORD PTR es:[edi]
  413cde:	pop    ecx
  413cdf:	sub    al,0xf2
  413ce1:	scas   eax,DWORD PTR es:[edi]
  413ce2:	add    DWORD PTR [ebx+0x3131a7b6],ecx
  413ce8:	xor    ebx,eax
  413cea:	xor    BYTE PTR [esi-0xe],bl
  413ced:	scas   eax,DWORD PTR es:[edi]
  413cee:	test   al,bh
  413cf0:	and    al,0xad
  413cf2:	xchg   BYTE PTR [esi-0x2fe500d],bh
  413cf8:	inc    bl
  413cfa:	idiv   DWORD PTR [edi]
  413cfc:	repz loop 0x413d3c
  413cff:	and    eax,0x8300aff3
  413d04:	push   0xffffffab
  413d06:	add    DWORD PTR [eax],eax
  413d08:	jo     0x413d15
  413d0a:	clc    
  413d0b:	jmp    DWORD PTR [eax-0x47]
  413d0e:	pop    ebx
  413d0f:	std    
  413d10:	in     al,0xc2
  413d12:	cmc    
  413d13:	cld    
  413d14:	push   es
  413d15:	loopne 0x413d0b
  413d17:	aas    
  413d18:	repz cmp BYTE PTR [esi+0xc],al
  413d1c:	js     0x413cd5
  413d1e:	rcl    BYTE PTR [eax+0x0],1
  413d21:	add    BYTE PTR [eax],al
  413d23:	jecxz  0x413d4d
  413d25:	dec    esi
  413d26:	clc    
  413d27:	jo     0x413cf3
  413d29:	icebp  
  413d2a:	jmp    FWORD PTR [edi+0x4c]
  413d2d:	push   ebp
  413d2e:	outs   dx,DWORD PTR ds:[esi]
  413d2f:	jo     0x413cfb
  413d31:	fld    DWORD PTR [eax]
  413d33:	sbb    ch,bh
  413d35:	stc    
  413d36:	mov    BYTE PTR [esi],dh
  413d38:	add    al,0x7c
  413d3a:	dec    ebx
  413d3b:	mov    eax,DWORD PTR [esi]
  413d3d:	je     0x413d56
  413d3f:	mov    WORD PTR [ebx],gs
  413d41:	push   0x51
  413d43:	lock push es
  413d45:	popf   
  413d46:	cmp    al,0x15
  413d48:	mov    cl,BYTE PTR [ebp-0x54c30cf8]
  413d4e:	cmp    DWORD PTR [esi+0x3b],ebp
  413d51:	out    dx,eax
  413d52:	jl     0x413d86
  413d54:	scas   al,BYTE PTR es:[edi]
  413d55:	push   esi
  413d56:	fcomp  DWORD PTR [esi-0x3b]
  413d59:	push   0xffffffcb
  413d5b:	push   esi
  413d5c:	adc    eax,0x6f1eb6b
  413d61:	out    0x88,eax
  413d63:	xor    edx,DWORD PTR ds:0x6f1f36b
  413d69:	out    0x82,eax
  413d6b:	cmp    eax,DWORD PTR [edi]
  413d6d:	cmp    al,0x23
  413d6f:	jp     0x413dbc
  413d71:	xlat   BYTE PTR ds:[ebx]
  413d72:	inc    ebx
  413d73:	jmp    0x1cc6:0x159af4b
  413d7a:	int3   
  413d7b:	jb     0x413d32
  413d7d:	lock jp 0x413dbe
  413d80:	xchg   ebx,eax
  413d81:	adc    al,0xe0
  413d83:	sbb    ebp,DWORD PTR [ebx]
  413d85:	adc    ecx,edi
  413d87:	add    BYTE PTR [eax],al
  413d89:	add    dh,bh
  413d8b:	mov    al,0xdf
  413d8d:	pop    ecx
  413d8e:	in     al,dx
  413d8f:	pop    esp
  413d90:	(bad)  
  413d91:	repnz outs dx,BYTE PTR ds:[esi]
  413d93:	les    edi,FWORD PTR [esi-0x31]
  413d96:	xor    BYTE PTR [edi],dl
  413d98:	bound  ecx,QWORD PTR [ecx+0x3]
  413d9b:	mov    BYTE PTR [esp+ebx*8],ah
  413d9e:	in     al,dx
  413d9f:	jmp    FWORD PTR [ebx+0x6a9d41cb]
  413da5:	push   ecx
  413da6:	fild   WORD PTR [esi]
  413da8:	out    0x87,al
  413daa:	or     al,ah
  413dac:	dec    esi
  413dad:	iret   
  413dae:	mov    dh,0x3a
  413db0:	fcmovne st,st(6)
  413db2:	add    BYTE PTR [ebx],bl
  413db4:	fld    DWORD PTR [ebx-0xd]
  413db7:	lods   eax,DWORD PTR ds:[esi]
  413db8:	add    ah,dl
  413dba:	lods   eax,DWORD PTR ds:[esi]
  413dbb:	ret    0x62fd
  413dbe:	inc    edx
  413dbf:	punpckhbw mm5,QWORD PTR [ecx-0x6cffe1db]
  413dc6:	out    dx,eax
  413dc7:	pop    DWORD PTR [ebx+0x16]
  413dca:	(bad)  
  413dcb:	scas   al,BYTE PTR es:[edi]
  413dcc:	call   0x6c29:0x8406efb3
  413dd3:	mov    BYTE PTR [edi+0xd06f0e5],bh
  413dd9:	aas    
  413dda:	stos   BYTE PTR es:[edi],al
  413ddb:	rol    DWORD PTR [ecx-0x7bee10ff],0x5
  413de2:	sti    
  413de3:	push   es
  413de4:	add    BYTE PTR [ecx],dh
  413de6:	pop    es
  413de7:	adc    al,BYTE PTR [esp+ebp*4+0x210006f2]
  413dee:	add    BYTE PTR [eax],al
  413df0:	add    BYTE PTR [eax+ecx*4],dh
  413df3:	sub    ebp,ebx
  413df5:	lock push es
  413df7:	dec    eax
  413df8:	out    dx,al
  413df9:	ins    BYTE PTR es:[edi],dx
  413dfa:	sar    bh,1
  413dfc:	call   0x654e8cf1
  413e01:	push   ecx
  413e02:	pop    es
  413e03:	add    cl,ch
  413e05:	enter  0x8311,0x79
  413e09:	in     al,dx
  413e0a:	push   es
  413e0b:	add    BYTE PTR [ecx],al
  413e0d:	mov    bh,0x39
  413e0f:	sbb    ecx,ebp
  413e11:	call   0xe857:0x672c8b05
  413e18:	sbb    BYTE PTR [ecx],bl
  413e1a:	(bad)  
  413e1b:	std    
  413e1c:	ins    DWORD PTR es:[edi],dx
  413e1d:	mov    al,0x11
  413e1f:	test   cl,dh
  413e21:	in     al,dx
  413e22:	push   es
  413e23:	add    cl,dl
  413e25:	xor    BYTE PTR [edx],bh
  413e27:	sbb    ecx,ebp
  413e29:	sub    cl,BYTE PTR [ebx]
  413e2b:	mov    ebp,DWORD PTR [esp+esi*4+0x910e856]
  413e32:	(bad)  
  413e33:	std    
  413e34:	add    BYTE PTR [esi],bl
  413e36:	enter  0x840b,0xba
  413e3a:	or     eax,DWORD PTR [eax]
  413e3c:	add    BYTE PTR [ecx],dl
  413e3e:	inc    edi
  413e3f:	les    ecx,FWORD PTR [ebx-0x1135]
  413e45:	aad    0x7
  413e47:	xchg   ecx,edx
  413e49:	fcmovnu st,st(5)
  413e4b:	adc    BYTE PTR [ebx],cl
  413e4d:	enter  0xcd40,0xc1
  413e51:	call   0x122bd0d
  413e56:	add    BYTE PTR [eax],al
  413e58:	pop    edx
  413e59:	aam    0x0
  413e5b:	add    BYTE PTR [ecx+0x7a],ah
  413e5e:	mov    ebp,0xe2ca52e8
  413e63:	or     BYTE PTR [ecx-0x3b],dl
  413e66:	test   DWORD PTR [ebp-0x62],eax
  413e69:	dec    edx
  413e6a:	or     eax,DWORD PTR [ebx+eiz*8+0x3200000e]
  413e71:	mov    eax,0x3d25ff79
  413e76:	lock test DWORD PTR [ecx+eax*8-0x7f],ebp
  413e7b:	sbb    cl,BYTE PTR [esi]
  413e7d:	pop    es
  413e7e:	add    BYTE PTR [eax-0x36],ch
  413e81:	pop    ecx
  413e82:	pop    ss
  413e83:	add    BYTE PTR [ebp+0x5b],al
  413e86:	les    edx,FWORD PTR [esi+0x62]
  413e89:	scas   al,BYTE PTR es:[edi]
  413e8a:	push   ebp
  413e8b:	add    DWORD PTR [edx],ebx
  413e8d:	mov    eax,eax
  413e8f:	jle    0xa414052
  413e95:	ds inc ecx
  413e97:	or     al,0x61
  413e99:	cli    
  413e9a:	ret    
  413e9b:	mov    esp,edx
  413e9d:	cld    
  413e9e:	cli    
  413e9f:	push   eax
  413ea0:	(bad)  
  413ea1:	cld    
  413ea2:	out    0x13,eax
  413ea4:	(bad)  
  413ea5:	sar    ebx,cl
  413ea7:	jmp    0x3d0f9b
  413eac:	inc    ecx
  413ead:	push   edx
  413eae:	or     BYTE PTR [eax-0xd],ch
  413eb1:	outs   dx,DWORD PTR ds:[esi]
  413eb2:	push   esp
  413eb3:	sbb    ebx,esi
  413eb5:	lds    eax,FWORD PTR [esi]
  413eb7:	mov    esi,DWORD PTR [esi]
  413eb9:	add    BYTE PTR [eax+ebp*8],dh
  413ebc:	add    BYTE PTR [eax],al
  413ebe:	add    BYTE PTR [ecx+0x67],ah
  413ec1:	add    al,BYTE PTR [eax]
  413ec3:	ja     0x413eb5
  413ec5:	cli    
  413ec6:	cmp    DWORD PTR [edx+0x150001ad],0xffffffef
  413ecd:	inc    esp
  413ece:	out    dx,eax
  413ecf:	sti    
  413ed0:	mov    edx,eax
  413ed2:	inc    ebx
  413ed3:	sub    BYTE PTR [eax+0x10c01557],0x8e
  413eda:	add    BYTE PTR [ebx-0x50],dh
  413edd:	add    ebp,edi
  413edf:	(bad)  
  413ee0:	pop    ebx
  413ee1:	clc    
  413ee2:	aas    
  413ee3:	repz xor al,ah
  413ee6:	pushw  0xaa6b
  413eea:	or     eax,0x65eef366
  413eef:	or     ch,bl
  413ef1:	shl    BYTE PTR [ebx-0x17],1
  413ef4:	push   ecx
  413ef5:	ja     0x413f3a
  413ef7:	sbb    BYTE PTR [edx+0x9],cl
  413efa:	inc    ebx
  413efb:	and    BYTE PTR [eax*1+0x12ff2be],al
  413f02:	add    BYTE PTR [ecx-0xd],ch
  413f05:	stos   DWORD PTR es:[edi],eax
  413f06:	mov    ah,BYTE PTR [esi+0x73d0777f]
  413f0c:	pop    DWORD PTR [edx]
  413f0e:	adc    BYTE PTR [ecx],0xaf
  413f11:	pop    es
  413f12:	retf   0xd187
  413f15:	test   edi,eax
  413f17:	jg     0x413ed7
  413f19:	adc    bh,al
  413f1b:	sub    edi,ebx
  413f1d:	out    dx,al
  413f1e:	or     al,0x7f
  413f20:	outs   dx,BYTE PTR ds:[esi]
  413f21:	cmp    al,BYTE PTR [ecx-0x2e000000]
  413f27:	mov    cl,0x80
  413f29:	mov    edi,0x30fc84f1
  413f2e:	mov    edx,0xe23f1f06
  413f33:	adc    DWORD PTR [ebx-0x3e],esi
  413f36:	xor    al,0x86
  413f38:	dec    eax
  413f39:	push   DWORD PTR [ebx-0x39]
  413f3c:	jecxz  0x413f36
  413f3e:	popf   
  413f3f:	mov    WORD PTR [ebx+edx*8-0x1d982987],?
  413f46:	test   DWORD PTR [esi-0x3326f8b7],0xcf7725b3
  413f50:	fwait
  413f51:	bnd ret 
  413f53:	iret   
  413f54:	fistp  QWORD PTR [esi]
  413f56:	loop   0x413f69
  413f58:	jnp    0x413f1c
  413f5a:	sub    al,0x86
  413f5c:	or     cl,cl
  413f5e:	jb     0x413f27
  413f60:	out    dx,eax
  413f61:	fdiv   st,st(6)
  413f63:	cmc    
  413f64:	das    
  413f65:	or     ebp,DWORD PTR [eax-0x6b8819eb]
  413f6b:	dec    edi
  413f6c:	push   0xffffffe2
  413f6e:	inc    edi
  413f6f:	test   DWORD PTR [eax+0x71b7fbf4],ebp
  413f75:	cmp    DWORD PTR [ebx-0x7a],eax
  413f78:	enter  0xf06,0x5
  413f7c:	adc    DWORD PTR [edi+eiz*4+0x6fc3fa16],edi
  413f83:	iret   
  413f84:	out    dx,al
  413f85:	outs   dx,DWORD PTR ds:[esi]
  413f86:	xor    ecx,DWORD PTR [esi+0x6a]
  413f89:	in     al,0x0
  413f8b:	add    BYTE PTR [eax],al
  413f8d:	adc    eax,DWORD PTR [ebp-0x4905bb59]
  413f93:	popf   
  413f94:	inc    ecx
  413f95:	add    ecx,DWORD PTR [esi]
  413f97:	adc    edi,ebp
  413f99:	mov    bh,BYTE PTR [esi]
  413f9b:	push   0xe70ef3ba
  413fa0:	add    ecx,DWORD PTR [esi-0x47]
  413fa3:	sub    al,0xd4
  413fa5:	add    edi,DWORD PTR [ebx]
  413fa7:	lock pop ebp
  413fa9:	imul   eax,DWORD PTR [esi+0xeefa700],0x0
  413fb0:	jmp    0x74446cce
  413fb5:	xor    dh,BYTE PTR [edi-0x20cd93b0]
  413fbb:	push   eax
  413fbc:	inc    ecx
  413fbd:	cs ds std 
  413fc0:	dec    esi
  413fc1:	test   al,0x7b
  413fc3:	inc    ebx
  413fc4:	cmp    ah,al
  413fc6:	push   esi
  413fc7:	or     eax,0x50b03276
  413fcc:	bound  esi,QWORD PTR [edx]
  413fce:	adc    ecx,DWORD PTR [ecx-0x226f21f]
  413fd4:	mov    ecx,0x1c12a998
  413fd9:	test   al,0xc2
  413fdb:	mov    DWORD PTR [eax+edi*2+0x5d964028],edx
  413fe2:	shl    BYTE PTR [edi-0x12],0xeb
  413fe6:	inc    ebx
  413fe7:	xchg   esp,eax
  413fe8:	cdq    
  413fe9:	cmp    BYTE PTR [edx-0x750f17a8],dl
  413fef:	rcr    dh,0x0
  413ff2:	add    BYTE PTR [eax],al
  413ff4:	int3   
  413ff5:	js     0x413ff9
  413ff7:	jmp    0x75bcc6ec
  413ffc:	lock adc DWORD PTR [ebx-0x3f85c657],edx
  414003:	cmp    DWORD PTR [ebx+eax*2-0x719f8d6b],ebp
  41400a:	enter  0x3fa8,0x17
  41400e:	jg     0x413fdb
  414010:	lock push es
  414012:	std    
  414013:	jmp    0xb1cb1125
  414018:	das    
  414019:	loopne 0x41402b
  41401b:	(bad)  
  41401c:	lock rol DWORD PTR [eax],0xe9
  414020:	cmc    
  414021:	(bad)  
  414022:	mov    DWORD PTR [ebx+ebp*8],esp
  414025:	sbb    bh,0x0
  414028:	loop   0x413ff4
  41402a:	jmp    0x5d08:0x877ae108
  414031:	hlt    
  414032:	adc    ebp,ecx
  414034:	add    ecx,eax
  414036:	sti    
  414037:	inc    DWORD PTR [ecx+0x4f]
  41403a:	or     BYTE PTR [eax-0x76],ch
  41403d:	push   esp
  41403e:	pop    ss
  41403f:	add    BYTE PTR [eax+0xe458ac2],dh
  414045:	hlt    
  414046:	out    0x36,eax
  414048:	push   edx
  414049:	or     al,BYTE PTR [eax]
  41404b:	test   dl,cl
  41404d:	mov    esp,0x3885d81
  414052:	add    BYTE PTR [esi-0x25],ah
  414055:	inc    esi
  414056:	leave  
  414057:	or     BYTE PTR [eax],al
  414059:	add    BYTE PTR [eax],al
  41405b:	je     0x414027
  41405d:	inc    ecx
  41405e:	iret   
  41405f:	and    BYTE PTR ds:0xbbbb45bd,0x63
  414066:	rcl    DWORD PTR [edi+0x6f800878],0x77
  41406d:	add    BYTE PTR [edi],cl
  41406f:	mov    ebx,0xcc99c92f
  414075:	mov    BYTE PTR [ebp-0x12],al
  414078:	adc    cl,BYTE PTR [ecx-0x8]
  41407b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41407c:	mov    al,0x88
  41407e:	inc    ebp
  41407f:	cs mov eax,eax
  414082:	pop    es
  414083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414084:	or     ecx,DWORD PTR [eax-0x2]
  414087:	(bad)  
  414088:	mov    edi,0x4f223963
  41408d:	add    eax,0x5ca8947
  414092:	cmp    ebx,edi
  414094:	shl    BYTE PTR [edx-0x14],cl
  414097:	add    DWORD PTR [eax-0x8],ecx
  41409a:	jne    0x41408f
  41409c:	int    0x41
  41409e:	clc    
  41409f:	xor    edi,0x66f36bf7
  4140a5:	stc    
  4140a6:	mov    ah,BYTE PTR [esi+0x3c]
  4140a9:	fcomp  QWORD PTR [esi+0x6a]
  4140ac:	test   edi,eax
  4140ae:	test   BYTE PTR [ebx-0xd018253],dh
  4140b4:	scas   eax,DWORD PTR es:[edi]
  4140b5:	add    DWORD PTR [ecx-0x34],ebp
  4140b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140b9:	add    al,0x7b
  4140bb:	xlat   BYTE PTR ds:[ebx]
  4140bc:	(bad)  
  4140be:	mov    al,BYTE PTR [eax]
  4140c0:	add    BYTE PTR [eax],al
  4140c2:	ss in  al,dx
  4140c4:	xor    edx,DWORD PTR [ebp-0x35]
  4140c7:	jb     0x414114
  4140c9:	std    
  4140ca:	lods   al,BYTE PTR ds:[esi]
  4140cb:	inc    edi
  4140cc:	sbb    al,0xfc
  4140ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140cf:	inc    ebp
  4140d0:	pop    esp
  4140d1:	inc    eax
  4140d2:	and    al,0xa9
  4140d4:	add    DWORD PTR [edx-0xe],ebp
  4140d7:	hlt    
  4140d8:	dec    esp
  4140d9:	or     BYTE PTR [ebx-0x7b00d64b],bl
  4140df:	sub    al,0xc4
  4140e1:	or     eax,0x10077
  4140e6:	repz sub BYTE PTR [ebp+0x8],al
  4140ea:	fld    TBYTE PTR [edi+0x50]
  4140ed:	sbb    ebx,esi
  4140ef:	cdq    
  4140f0:	add    ecx,DWORD PTR [ebx-0x17cbfc4a]
  4140f6:	gs popf 
  4140f8:	add    al,BYTE PTR [eax]
  4140fa:	ja     0x4140ec
  4140fc:	test   BYTE PTR [ebx+0x1af7e],0xec
  414103:	xchg   esp,eax
  414104:	ss in  al,0x70
  414107:	push   ecx
  414108:	cmp    BYTE PTR [eax],al
  41410a:	js     0x41417b
  41410c:	push   ds
  41410d:	std    
  41410e:	repz scas eax,DWORD PTR es:[edi]
  414110:	add    DWORD PTR [edi-0x183d47ed],edi
  414116:	jmp    0x4140c0
  414118:	ret    0x7a66
  41411b:	icebp  
  41411c:	cmp    esp,DWORD PTR [esi+0x6e]
  41411f:	pop    es
  414120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414121:	clc    
  414122:	jo     0x4140b1
  414124:	out    0x3,eax
  414126:	add    BYTE PTR [eax],al
  414128:	add    bl,dh
  41412a:	or     eax,0xa5accb5e
  41412f:	jmp    0x7284a3aa
  414134:	mov    eax,0xc8ffdfcb
  414139:	(bad)  
  41413a:	and    BYTE PTR [edi-0x17c08f08],0x3
  414141:	repz cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414144:	push   eax
  414145:	fiadd  DWORD PTR [esi]
  414147:	mov    dh,0xc8
  414149:	std    
  41414a:	xchg   ecx,eax
  41414b:	aam    0xfb
  41414d:	xchg   esp,eax
  41414e:	add    BYTE PTR [esi+0x2782f302],dh
  414154:	clc    
  414155:	jo     0x41417e
  414157:	call   0xcccb345f
  41415c:	repz mov eax,?
  41415f:	es (bad) 
  414161:	repz mov ebp,0x21503e7
  414167:	stos   BYTE PTR es:[edi],al
  414168:	cmp    eax,DWORD PTR [edx]
  41416a:	pop    ecx
  41416b:	bound  eax,QWORD PTR [ecx]
  41416d:	(bad)  
  41416e:	jne    0x41410c
  414170:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414173:	jmp    0xeaefe9f2
  414178:	mov    ebx,0xd362076a
  41417d:	mov    WORD PTR [edi+edx*8-0x1f16b484],fs
  414184:	sti    
  414185:	inc    edi
  414186:	or     eax,0xc7f24d95
  41418b:	int    0xfc
  41418d:	add    BYTE PTR [eax],al
  41418f:	add    BYTE PTR [ebp-0x52],ch
  414192:	(bad)  
  414194:	pop    ds
  414195:	jmp    0x8f4e3d42
  41419a:	clc    
  41419b:	jp     0x41414f
  41419d:	inc    edx
  41419e:	add    BYTE PTR [edx-0x5e],ah
  4141a1:	scas   al,BYTE PTR es:[edi]
  4141a2:	push   0xffffffe4
  4141a4:	xlat   BYTE PTR ds:[ebx]
  4141a5:	cmc    
  4141a6:	or     ebp,edi
  4141a8:	mov    ds:0xbb328707,eax
  4141ad:	mov    ebx,0x8e4ef943
  4141b2:	dec    ebx
  4141b3:	stc    
  4141b4:	inc    esi
  4141b5:	dec    BYTE PTR [eax+0x31]
  4141b8:	inc    ecx
  4141b9:	jb     0x4141a4
  4141bb:	in     al,0x6a
  4141bd:	pop    es
  4141be:	std    
  4141bf:	jmp    0x1d82cfb4
  4141c4:	dec    eax
  4141c5:	iret   
  4141c6:	mov    edi,0xf08fc748
  4141cb:	or     ah,BYTE PTR [ecx-0x389d31f2]
  4141d1:	jl     0x4141c1
  4141d3:	loope  0x4141a6
  4141d5:	mov    eax,0x49e07f0d
  4141da:	mov    edi,0xce0f9748
  4141df:	loop   0x41422b
  4141e1:	test   BYTE PTR [ecx-0x67],cl
  4141e4:	jno    0x4141a5
  4141e6:	add    ebx,DWORD PTR [ebx+ebx*8-0xf02867b]
  4141ed:	or     DWORD PTR [ebx-0x245c61c],eax
  4141f3:	add    DWORD PTR [eax],0x8640000
  4141f9:	add    cl,ch
  4141fb:	mov    edx,0x50b4fd0e
  414200:	outs   dx,BYTE PTR ds:[esi]
  414201:	inc    ecx
  414202:	jmp    0xda455a3c
  414207:	mov    al,0x6
  414209:	xchg   DWORD PTR [edx],ebp
  41420b:	dec    ebx
  41420c:	mov    eax,eax
  41420e:	out    dx,al
  41420f:	jae    0x4141bb
  414211:	cli    
  414212:	(bad)  
  414213:	xor    eax,0xf0e9a7a4
  414218:	push   es
  414219:	std    
  41421a:	add    cl,bl
  41421c:	scas   al,BYTE PTR es:[edi]
  41421d:	in     eax,0xbb
  41421f:	mov    dl,0xc3
  414221:	sti    
  414222:	cmp    DWORD PTR [ecx+0x63e8fdae],0xffffffce
  414229:	sti    
  41422a:	jmp    edx
  41422c:	inc    edx
  41422d:	jae    0x41424a
  41422f:	or     bl,BYTE PTR [esi-0x1]
  414232:	dec    BYTE PTR [edi]
  414234:	mov    ebx,0x21ce8e5
  414239:	add    BYTE PTR [edx+ecx*4-0x357e7e4c],al
  414240:	pop    es
  414241:	add    BYTE PTR [ebx+0x4065bfc7],cl
  414247:	mov    ebp,0xba69fdb0
  41424c:	ds inc ecx
  41424e:	mov    ah,0x7a
  414250:	fistp  QWORD PTR [ebx]
  414252:	push   esi
  414253:	fwait
  414254:	pop    es
  414255:	test   al,al
  414257:	mov    esi,0x7d805d
  41425c:	add    BYTE PTR [eax],al
  41425e:	push   ds
  41425f:	call   0x4f4b4ed7
  414264:	mov    ah,0x10
  414266:	dec    esi
  414267:	mov    ecx,0xbffe7d7d
  41426c:	jb     0x4142c6
  41426e:	or     cl,BYTE PTR [edi-0x4d]
  414271:	add    BYTE PTR [esi-0xb],bl
  414274:	rcr    DWORD PTR gs:[edi+0x1b66088f],0x47
  41427c:	mov    edx,0x41c26c08
  414281:	mov    esp,0xb6798762
  414286:	pop    edx
  414287:	pop    ebp
  414288:	adc    BYTE PTR [edi],cl
  41428a:	lahf   
  41428b:	(bad)  
  41428c:	mov    BYTE PTR [ebp+0x5c],al
  41428f:	xor    eax,DWORD PTR [ecx-0x4c]
  414292:	cli    
  414293:	xor    edi,DWORD PTR [edi]
  414295:	xor    ebx,esi
  414297:	std    
  414298:	mov    ebp,0xd9ae5c43
  41429d:	jl     0x41423a
  41429f:	(bad)
  4142a3:	xor    esp,eax
  4142a5:	call   0x3f80689a
  4142aa:	sbb    dl,BYTE PTR [esi]
  4142ac:	retf   0xfcfd
  4142af:	das    
  4142b0:	inc    ebp
  4142b1:	adc    al,0xf3
  4142b3:	adc    edx,esi
  4142b5:	cld    
  4142b6:	mov    sp,0x13c4
  4142ba:	(bad)  
  4142bb:	mov    ebp,0xa9c80041
  4142c0:	push   edi
  4142c1:	add    BYTE PTR [eax],al
  4142c3:	add    BYTE PTR [eax],al
  4142c5:	retf   
  4142c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c7:	dec    ecx
  4142c8:	std    
  4142c9:	int3   
  4142ca:	and    eax,0x3125e8cf
  4142cf:	ret    
  4142d0:	std    
  4142d1:	mov    esp,0xe8e8d5db
  4142d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142d7:	(bad)  
  4142d8:	std    
  4142d9:	cwde   
  4142da:	mov    esp,0x9b9bf178
  4142df:	int3   
  4142e0:	std    
  4142e1:	pushf  
  4142e2:	push   ebp
  4142e3:	idiv   esp
  4142e5:	push   ds
  4142e6:	pop    eax
  4142e7:	ret    
  4142e8:	jae    0x4142e5
  4142ea:	inc    edi
  4142eb:	dec    edi
  4142ec:	cmc    
  4142ed:	test   cl,ch
  4142ef:	and    bl,BYTE PTR [esi+0x18]
  4142f2:	test   ecx,0x7871f310
  4142f8:	lock jbe 0x414315
  4142fb:	push   eax
  4142fc:	dec    edi
  4142fd:	jns    0x4142a1
  4142ff:	jge    0x4142c1
  414301:	out    0x74,eax
  414303:	adc    dl,dl
  414305:	pop    ss
  414306:	retf   
  414307:	dec    esi
  414308:	add    ebx,ecx
  41430a:	lods   eax,DWORD PTR ds:[esi]
  41430b:	daa    
  41430c:	jmp    0x7359af00
  414311:	repnz push es
  414313:	sub    eax,0xa6f4e57a
  414318:	and    DWORD PTR [edi+esi*8],0x52
  41431c:	in     eax,dx
  41431d:	ret    
  41431e:	xchg   al,dl
  414320:	or     bl,BYTE PTR [esi+0x1ef97a16]
  414326:	scas   al,BYTE PTR es:[edi]
  414327:	jmp    0x4143ee
  41432c:	fcomip st,st(6)
  41432e:	sub    al,0x7a
  414330:	cmc    
  414331:	xchg   BYTE PTR [eax+0x42ad7813],dh
  414337:	sub    BYTE PTR [ebx+esi*1],0xea
  41433b:	cmp    BYTE PTR [ecx-0x4c7219f9],0xb0
  414342:	test   eax,0x10016701
  414347:	(bad)  
  414348:	(bad)  
  414349:	push   es
  41434a:	out    0x3,eax
  41434c:	jnp    0x41434f
  41434e:	(bad)
  414353:	cld    
  414354:	and    al,0xc1
  414356:	out    dx,al
  414357:	add    edx,DWORD PTR ds:0x1903d1c6
  41435d:	pop    es
  41435e:	rol    DWORD PTR [ebx],0x19
  414361:	add    eax,0x329e03c1
  414366:	or     ebp,eax
  414368:	xchg   edi,eax
  414369:	adc    edi,DWORD PTR [edi]
  41436b:	repz int3 
  41436d:	push   es
  41436e:	bound  esi,QWORD PTR [edi]
  414370:	iret   
  414371:	add    ah,BYTE PTR [eax+0x42]
  414374:	div    ebp
  414376:	das    
  414377:	jle    0x41432c
  414379:	or     DWORD PTR [ebx+eax*8+0x31],esi
  41437d:	push   cs
  41437e:	out    0x2e,eax
  414380:	jp     0x41432c
  414382:	push   0xffffffd7
  414384:	add    eax,ecx
  414386:	lods   al,BYTE PTR ds:[esi]
  414387:	lds    edx,FWORD PTR [edx+eax*4+0x27]
  41438b:	dec    edi
  41438c:	into   
  41438d:	push   ebp
  41438e:	add    BYTE PTR [edi+0x17000000],bl
  414394:	mov    ?,WORD PTR [edi-0x1f]
  414397:	mov    ecx,0xe872f445
  41439c:	add    DWORD PTR [ebx-0x27],0x4b74c67a
  4143a3:	je     0x4143d8
  4143a5:	clc    
  4143a6:	ficomp WORD PTR [edx+0x2972045b]
  4143ac:	rol    BYTE PTR [ebx-0x42],0xf7
  4143b0:	scas   al,BYTE PTR es:[edi]
  4143b1:	push   es
  4143b2:	mov    al,ds:0xb181bb30
  4143b7:	shl    DWORD PTR [eax*2+0x50beaa74],1
  4143be:	adc    esi,DWORD PTR [edi]
  4143c0:	sub    eax,0xba153f1e
  4143c5:	std    
  4143c6:	hlt    
  4143c7:	adc    al,0x15
  4143c9:	inc    eax
  4143ca:	jmp    0xbbb60b3a
  4143cf:	push   ds
  4143d0:	pop    es
  4143d1:	sub    DWORD PTR [edx-0xb02a97c],0x666a5180
  4143db:	mov    al,0x14
  4143dd:	xchg   esp,eax
  4143de:	sti    
  4143df:	xor    BYTE PTR [edi],al
  4143e1:	sub    DWORD PTR [ecx],0xffffffeb
  4143e4:	add    al,dh
  4143e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143e7:	mov    cl,0xb8
  4143e9:	mov    WORD PTR [eax+ebx*2+0x48b4fd57],gs
  4143f0:	sub    eax,0xb9d69f1e
  4143f5:	std    
  4143f6:	aam    0x0
  4143f8:	add    BYTE PTR [eax],al
  4143fa:	aam    0x14
  4143fc:	inc    eax
  4143fd:	jmp    0xea3e8072
  414402:	sub    eax,DWORD PTR [ebx]
  414404:	(bad)  
  414405:	lods   al,BYTE PTR ds:[esi]
  414406:	xor    al,BYTE PTR [edi]
  414408:	and    DWORD PTR [esi],0x4bba07
  41440e:	push   esi
  41440f:	dec    DWORD PTR [eax-0x75a693a1]
  414415:	inc    ebp
  414416:	cmp    al,0xcb
  414418:	mov    edi,0xfa896556
  41441d:	mov    ebx,DWORD PTR [ebx]
  41441f:	mov    DWORD PTR [ecx],ecx
  414421:	xor    al,0x7e
  414423:	inc    ecx
  414424:	add    BYTE PTR [edi-0x1c],dl
  414427:	push   0xffffffa0
  414429:	lods   al,BYTE PTR ds:[esi]
  41442a:	or     eax,DWORD PTR [edi+ebp*1]
  41442d:	leave  
  41442e:	repz xor DWORD PTR [eax-0x54],eax
  414432:	fld    DWORD PTR [edx]
  414434:	jno    0x41443c
  414436:	xchg   ebx,eax
  414437:	cmp    al,BYTE PTR [eax-0x54]
  41443a:	leave  
  41443b:	add    bh,BYTE PTR [edi-0x3f]
  41443e:	push   es
  41443f:	xor    ebp,0x5b690818
  414445:	pop    esi
  414446:	cdq    
  414447:	pop    esi
  414448:	xchg   esp,ebp
  41444a:	sbb    edx,DWORD PTR [eax+0x56]
  41444d:	mov    edx,edi
  41444f:	pop    es
  414450:	das    
  414451:	fisttp DWORD PTR [ecx-0x3b0cc836]
  414457:	sbb    eax,DWORD PTR [edi-0x3f7f2dbb]
  41445d:	or     al,0x0
  41445f:	add    BYTE PTR [eax],al
  414461:	adc    ebx,DWORD PTR [ebx-0xc]
  414464:	je     0x414425
  414466:	mov    bl,BYTE PTR [eax-0x4]
  414469:	adc    bl,BYTE PTR [edi*1+0x3713ca83]
  414470:	into   
  414471:	pop    eax
  414472:	jne    0x4143fb
  414474:	(bad)  
  414475:	mov    eax,ds:0xb0571fc3
  41447a:	inc    ebx
  41447b:	push   0x37a00
  414480:	push   eax
  414481:	cmp    ecx,ebp
  414483:	cli    
  414484:	jmp    DWORD PTR [edi-0x1d]
  414487:	adc    DWORD PTR [eax-0xd],eax
  41448a:	lods   eax,DWORD PTR ds:[esi]
  41448b:	mov    ?,eax
  41448d:	sbb    BYTE PTR ds:0x626a4d35,dl
  414493:	mov    ebp,0xf12f4039
  414498:	mov    BYTE PTR [esi-0x1439795b],bh
  41449e:	and    al,0x5f
  4144a0:	clc    
  4144a1:	retf   
  4144a2:	cmp    al,0xec
  4144a4:	ds repz lock mov esi,0x59c52776
  4144ac:	enter  0xc81c,0x85
  4144b0:	rcr    BYTE PTR [edi-0xfc17526],0xc5
  4144b7:	mov    edi,0x4a250743
  4144bc:	add    al,0x68
  4144be:	loop   0x41447f
  4144c0:	sub    DWORD PTR ds:0x42fcbd,0x11ff0000
  4144ca:	fimul  DWORD PTR [ecx+0x42faac2e]
  4144d0:	fistp  WORD PTR [ebx]
  4144d2:	or     al,0xb0
  4144d4:	repnz cwde 
  4144d6:	adc    dh,BYTE PTR [edx]
  4144d8:	mov    bl,0x99
  4144da:	or     ecx,DWORD PTR [ecx-0x565657ca]
  4144e0:	mov    ebp,0xb332bf25
  4144e5:	int    0x5f
  4144e7:	pop    ecx
  4144e8:	mov    edx,0x52000be2
  4144ed:	fs ins DWORD PTR es:[edi],dx
  4144ef:	inc    ecx
  4144f0:	repz sub al,ah
  4144f3:	je     0x4144dc
  4144f5:	in     al,0x4
  4144f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144f8:	push   edi
  4144f9:	popa   
  4144fa:	add    DWORD PTR [edx-0x70],ebp
  4144fd:	pop    edi
  4144fe:	add    ecx,ebp
  414500:	in     al,dx
  414501:	jle    0x414547
  414503:	lods   al,BYTE PTR ds:[esi]
  414504:	xor    BYTE PTR [edi],al
  414506:	out    0xc8,eax
  414508:	lock push 0x43
  41450b:	inc    ebp
  41450c:	repz jns 0x414518
  41450f:	inc    ebx
  414510:	repz imul eax,DWORD PTR [edi+0x68],0x544806b2
  414518:	lahf   
  414519:	dec    edx
  41451a:	out    0x64,eax
  41451c:	sub    DWORD PTR [ebx-0x56],0x3
  414520:	pop    esp
  414521:	jg     0x4144f7
  414523:	inc    ebx
  414524:	repz imul esp,DWORD PTR [edi-0x77f94d99],0x83
  41452f:	add    BYTE PTR [edi-0x19],al
  414532:	fs inc ebx
  414534:	imul   ebp,DWORD PTR [edx],0x4
  414537:	je     0x4145a0
  414539:	fadd   QWORD PTR [ebx-0xd]
  41453c:	imul   eax,edi,0x8806b267
  414542:	imul   esp,eax,0x46
  414545:	out    0x64,eax
  414547:	add    ebp,DWORD PTR [ebx+0x2a]
  41454a:	add    al,0x8c
  41454c:	xor    dh,ah
  41454e:	inc    ebx
  41454f:	repz imul esp,edi,0x48073266
  414556:	xchg   ebx,eax
  414557:	add    BYTE PTR [edi-0x19],al
  41455a:	fs jecxz 0x4145c8
  41455d:	sub    al,BYTE PTR [esp+eiz*2]
  414560:	call   0x66c7:0x69f343dc
  414567:	xor    al,BYTE PTR [edi]
  414569:	mov    BYTE PTR [ebx+0x64e74700],bl
  41456f:	jecxz  0x4145dc
  414571:	stos   BYTE PTR es:[edi],al
  414572:	add    edi,DWORD PTR [edx+ebp*2-0xc]
  414576:	inc    ebx
  414577:	repz imul esp,DWORD PTR [edi-0x77f8cd9a],0x46e087
  414582:	jmp    0xaae49c9e
  414587:	lock xchg ebp,eax
  414589:	pushf  
  41458a:	cld    
  41458b:	mov    al,0x6
  41458d:	mov    eax,ds:0x47cd89
  414592:	dec    eax
  414593:	add    BYTE PTR [eax],al
  414595:	add    BYTE PTR [ecx+ebx*1+0x40],ch
  414599:	jmp    0xaae47c6d
  41459e:	lock xchg ebp,eax
  4145a0:	sbb    al,0xd7
  4145a2:	mov    al,0x6
  4145a4:	mov    eax,ds:0x47d569
  4145a9:	dec    eax
  4145aa:	push   eax
  4145ab:	sbb    eax,DWORD PTR [eax-0x17]
  4145ae:	xchg   ecx,eax
  4145af:	xchg   esi,eax
  4145b0:	mov    ds:0x1095ef2a,eax
  4145b5:	push   DWORD PTR [eax-0x75765efa]
  4145bb:	inc    edi
  4145bc:	add    BYTE PTR [eax-0x16bfe311],cl
  4145c2:	xchg   ecx,eax
  4145c3:	jbe    0x414568
  4145c5:	sub    dh,bh
  4145c7:	xchg   ebp,eax
  4145c8:	or     al,0xd7
  4145ca:	mov    al,0x6
  4145cc:	mov    eax,ds:0x465aa9
  4145d1:	dec    eax
  4145d2:	rcr    DWORD PTR [ebx],cl
  4145d4:	inc    eax
  4145d5:	jmp    0x2ae51d2b
  4145da:	out    dx,eax
  4145db:	xchg   ebx,eax
  4145dc:	xor    ah,bl
  4145de:	xor    BYTE PTR [edi],al
  4145e0:	mov    eax,ds:0x465a89
  4145e5:	dec    eax
  4145e6:	dec    ebx
  4145e7:	sbb    eax,DWORD PTR [eax-0x17]
  4145ea:	push   ecx
  4145eb:	mov    bh,0xa3
  4145ed:	stos   BYTE PTR es:[edi],al
  4145ee:	lock xchg ebx,eax
  4145f0:	cmp    al,0xf4
  4145f2:	xor    BYTE PTR [edi],al
  4145f4:	mov    eax,ds:0x4616e9
  4145f9:	mov    BYTE PTR [eax],al
  4145fb:	add    BYTE PTR [eax],al
  4145fd:	mov    ebx,0x9a00401b
  414602:	sub    DWORD PTR [eax],edx
  414604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414605:	pop    ecx
  414606:	or     BYTE PTR [ebp+0x489f2c],bl
  41460c:	mov    ds:0x3f2cea,eax
  414611:	mov    ebx,0x5a401466
  414616:	sub    DWORD PTR [eax],esi
  414618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414619:	mov    DWORD PTR [eax],ecx
  41461b:	popf   
  41461c:	fcomp  DWORD PTR [esi+0x48]
  41461f:	add    BYTE PTR [ebx+0x3f2a9a],ah
  414625:	mov    ebx,0x4a4012ae
  41462a:	sub    DWORD PTR [eax-0x5a],edx
  41462d:	mov    DWORD PTR [eax],ecx
  41462f:	popf   
  414630:	sub    BYTE PTR [edi],ch
  414632:	dec    eax
  414633:	add    BYTE PTR [ebx+0x3f2cba],ah
  414639:	imul   esp,DWORD PTR [eax],0x14
  41463c:	inc    eax
  41463d:	or     ch,BYTE PTR [ecx]
  41463f:	jo     0x4145e7
  414641:	(bad)  [edx]
  414643:	popf   
  414644:	lods   al,BYTE PTR ds:[esi]
  414645:	push   ds
  414646:	dec    eax
  414647:	add    BYTE PTR [ebx+0x3f298a],ah
  41464d:	imul   edi,DWORD PTR [eax],0x14
  414650:	inc    eax
  414651:	fisubr DWORD PTR [eax]
  414653:	nop
  414654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414655:	sbb    DWORD PTR [ebx],ecx
  414657:	popf   
  414658:	cwde   
  414659:	fiadd  WORD PTR [edi+0x0]
  41465c:	mov    ds:0x3f2a2a,eax
  414661:	add    BYTE PTR [eax],al
  414663:	add    BYTE PTR [ebx],bh
  414665:	jl     0x41467b
  414667:	inc    eax
  414668:	fisubr DWORD PTR [eax]
  41466a:	mov    al,0xa6
  41466c:	or     DWORD PTR [ebx],ecx
  41466e:	popf   
  41466f:	enter  0x479e,0x0
  414673:	mov    ds:0x3f29da,eax
  414678:	jnp    0x4146e1
  41467a:	adc    al,0x40
  41467c:	repz popf 
  41467e:	(bad)  
  41467f:	ror    BYTE PTR [ebp+0x60],1
  414682:	add    DWORD PTR [edi+0x41d14b],ebx
  414688:	push   eax
  414689:	cmp    eax,0x7ef34163
  41468e:	dec    ecx
  41468f:	adc    esi,DWORD PTR [ebx]
  414691:	sahf   
  414692:	(bad)  
  414693:	lock xchg ebp,eax
  414695:	pusha  
  414696:	add    DWORD PTR [edi+0x41b95b],ebx
  41469c:	nop
  41469d:	popf   
  41469e:	inc    cx
  4146a0:	repz ds int 0x14
  4146a4:	mov    bl,0x9d
  4146a6:	bound  edx,QWORD PTR [eax]
  4146a8:	mov    WORD PTR [eax+0x1],fs
  4146ab:	lahf   
  4146ac:	mov    bl,0xd2
  4146ae:	inc    ecx
  4146af:	add    BYTE PTR [eax-0xcbe9943],dl
  4146b5:	jle    0x41465f
  4146b7:	adc    al,0xb3
  4146b9:	popf   
  4146ba:	pusha  
  4146bb:	xor    BYTE PTR [eax+eiz*8+0x3],dl
  4146bf:	lahf   
  4146c0:	xor    edi,DWORD PTR [ecx-0x22afffbf]
  4146c6:	bound  eax,QWORD PTR [ecx+0x0]
  4146c9:	add    BYTE PTR [eax],al
  4146cb:	repz jle 0x414732
  4146ce:	adc    al,0xb3
  4146d0:	popf   
  4146d1:	pusha  
  4146d2:	push   eax
  4146d3:	dec    esp
  4146d4:	loopne 0x4146d9
  4146d6:	lahf   
  4146d7:	sub    esi,DWORD PTR [ebx+0x900041]
  4146dd:	arpl   WORD PTR [ecx-0xd],ax
  4146e0:	ds mov esp,0x60a03314
  4146e6:	jo     0x41467c
  4146e8:	fld    QWORD PTR [ebx]
  4146ea:	lahf   
  4146eb:	mov    ds:0x900041dc,eax
  4146f0:	and    BYTE PTR [ebx+0x41],ah
  4146f3:	repz ds push eax
  4146f6:	adc    esi,DWORD PTR [ebx]
  4146f8:	pop    es
  4146f9:	out    0x60,eax
  4146fb:	sub    DWORD PTR [edx-0x56],0x3
  4146ff:	jl     0x4146a4
  414701:	sti    
  414702:	inc    ebx
  414703:	xrelease xchg DWORD PTR gs:[ebp+0x32],esp
  414708:	pop    es
  414709:	mov    al,cl
  41470b:	fild   WORD PTR [esi-0x19]
  41470e:	pusha  
  41470f:	inc    ebx
  414710:	push   0xffffffaa
  414712:	add    edx,DWORD PTR [ebx+esi*2-0x2d]
  414716:	inc    ebx
  414717:	repz gs daa 
  41471a:	gs mov dl,0x6
  41471d:	dec    eax
  41471e:	add    al,0x0
  414720:	inc    edi
  414721:	out    0x60,eax
  414723:	inc    ebx
  414724:	push   0xffffffaa
  414726:	add    ebp,DWORD PTR [ebx+ecx*2-0x24]
  41472a:	inc    ebx
  41472b:	repz gs pop es
  41472e:	add    BYTE PTR gs:[eax],al
  414731:	add    BYTE PTR [edx-0x204bb7fa],dh
  414737:	inc    esi
  414738:	out    0x60,eax
  41473a:	and    ebp,DWORD PTR [edx+0x2a]
  41473d:	add    al,0x84
  41473f:	mov    bl,0xf3
  414741:	inc    ebx
  414742:	repz gs out 0x6b,eax
  414746:	mov    dl,0x6
  414748:	mov    BYTE PTR [edi+0x29e746e3],bl
  41474e:	retf   
  41474f:	push   ds
  414750:	xchg   DWORD PTR [edi-0x4e],esp
  414753:	push   es
  414754:	mov    dl,BYTE PTR [ebx]
  414756:	dec    ebx
  414757:	inc    esi
  414758:	out    0xab,eax
  41475a:	div    BYTE PTR [ebx+0x55b2bca6]
  414760:	xor    eax,0xf9732089
  414765:	inc    ebx
  414766:	repz push ds
  414768:	xor    esi,DWORD PTR [esi]
  41476a:	xor    eax,DWORD PTR [edi]
  41476c:	push   ds
  41476d:	mov    ebp,0x360f1e9d
  414772:	xor    eax,DWORD PTR [edi]
  414774:	add    BYTE PTR [esi],bl
  414776:	push   edx
  414777:	out    0xa7,eax
  414779:	sub    dh,bh
  41477b:	mov    bl,0xd6
  41477d:	rcr    esp,1
  41477f:	cmp    BYTE PTR [eax-0x17],al
  414782:	inc    edi
  414783:	push   0x7338130
  414788:	std    
  414789:	aaa    
  41478a:	fdiv   DWORD PTR [edx]
  41478c:	jbe    0x414737
  41478e:	lock pop ebx
  414790:	mov    eax,ds:0x4808a9
  414795:	add    BYTE PTR ss:[eax],al
  414798:	add    BYTE PTR [esi-0x4f487be2],bl
  41479e:	push   es
  41479f:	push   ebp
  4147a0:	dec    edx
  4147a1:	rcr    BYTE PTR [esi+0x41],0xe9
  4147a5:	lahf   
  4147a6:	fsubr  DWORD PTR [edx-0x14]
  4147a9:	or     bh,ah
  4147ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ac:	stos   BYTE PTR es:[edi],al
  4147ad:	lock addr16 pusha 
  4147b0:	push   ecx
  4147b1:	mov    bl,0x6
  4147b3:	call   0xfdf4c3f0
  4147b8:	arpl   WORD PTR [eax],bx
  4147ba:	mov    bl,cl
  4147bc:	jne    0x4147d3
  4147be:	mov    dl,0x33
  4147c0:	push   ecx
  4147c1:	xchg   edi,eax
  4147c2:	inc    edi
  4147c3:	add    BYTE PTR [edx+0x30],dh
  4147c6:	mov    bl,0x33
  4147c8:	xor    DWORD PTR [edi+0x2ce0047],eax
  4147ce:	dec    ecx
  4147cf:	test   al,0x2a
  4147d1:	out    dx,eax
  4147d2:	mov    bl,0x33
  4147d4:	add    DWORD PTR [edi+0x2b60047],ecx
  4147da:	jmp    0x9f387286
  4147df:	addr16 es out dx,eax
  4147e2:	push   es
  4147e3:	pop    esi
  4147e4:	jae    0x41479a
  4147e6:	dec    esi
  4147e7:	sar    DWORD PTR [esp+eiz*2],0xa3
  4147eb:	dec    edi
  4147ec:	cmp    BYTE PTR [eax],ah
  4147ee:	sbb    eax,0xee3f0007
  4147f3:	neg    DWORD PTR [eax+0x62]
  4147f6:	push   cs
  4147f7:	retf   0xca00
  4147fa:	add    ebx,0x50
  414800:	sbb    eax,0xf1e807f6
  414805:	sbb    eax,0xcb17fffb
  41480a:	jno    0x414813
  41480c:	sub    BYTE PTR [ebx+edi*8+0x0],0x9a
  414811:	popa   
  414812:	pop    ds
  414813:	push   0xffffff80
  414815:	jg     0x414890
  414817:	clc    
  414818:	push   edx
  414819:	pop    esp
  41481a:	cld    
  41481b:	leave  
  41481c:	mov    al,BYTE PTR [edi+eax*4]
  41481f:	(bad)  
  414820:	mov    ch,BYTE PTR [ebp+0x71]
  414823:	or     BYTE PTR [edx],al
  414825:	jno    0x4147d3
  414827:	(bad)  
  414828:	std    
  414829:	test   eax,eax
  41482b:	jne    0x414872
  41482d:	sub    al,0xfe
  41482f:	call   FWORD PTR [edx+0x4]
  414832:	out    0x2,eax
  414834:	mov    esp,eax
  414836:	pop    ebx
  414837:	leave  
  414838:	or     BYTE PTR [edi],al
  41483a:	add    BYTE PTR [ebp-0x2f],dl
  41483d:	pop    esi
  41483e:	push   0x3a
  414840:	jo     0x414846
  414842:	dec    edi
  414843:	jmp    DWORD PTR [edi]
  414845:	mov    al,ds:0x810a4013
  41484a:	push   ecx
  41484b:	or     al,0x8f
  41484d:	inc    eax
  41484e:	add    al,0x83
  414850:	push   esi
  414851:	or     BYTE PTR [ecx-0x7ee73937],al
  414857:	rol    bh,cl
  414859:	add    eax,0x4ab744ba
  41485e:	add    BYTE PTR [ebp-0x17b000e9],cl
  414864:	add    BYTE PTR [eax],al
  414866:	add    BYTE PTR ds:0x57fffb22,ch
  41486c:	jbe    0x4148e2
  41486e:	adc    esi,ebx
  414870:	sbb    eax,0xd04629f7
  414875:	cmp    DWORD PTR [esi-0xe],0x8309d
  41487c:	pop    esi
  41487d:	pop    ds
  41487e:	xchg   DWORD PTR [eax],esi
  414880:	jo     0x414830
  414882:	cmp    bh,BYTE PTR [esi-0x24]
  414885:	icebp  
  414886:	sbb    BYTE PTR [ebp-0x1276182f],0x29
  41488d:	int3   
  41488e:	je     0x41485b
  414890:	sbb    eax,0xb80630bc
  414895:	mov    ecx,DWORD PTR [esi-0xe]
  414898:	sbb    eax,0xab0778bc
  41489d:	xor    edi,0x890c731b
  4148a3:	cmp    eax,0xf3089045
  4148a8:	popf   
  4148a9:	scas   al,BYTE PTR es:[edi]
  4148aa:	adc    al,ah
  4148ac:	xor    al,0xb9
  4148ae:	mov    DWORD PTR ds:0xf306e105,edi
  4148b4:	popf   
  4148b5:	pop    edx
  4148b6:	jmp    0x670db5a9
  4148bb:	push   0xffffffb5
  4148bd:	mov    es,WORD PTR [ebx-0x15]
  4148c0:	and    al,cl
  4148c2:	je     0x4148c0
  4148c4:	sbb    eax,0xb39e29f9
  4148c9:	cmp    DWORD PTR [eax+0x0],0x9df20000
  4148d0:	cs add al,0xe0
  4148d3:	pop    ebp
  4148d4:	stos   DWORD PTR es:[edi],eax
  4148d5:	push   es
  4148d6:	mov    ds:0x4fd0fc5,eax
  4148db:	enter  0x8722,0xb0
  4148df:	add    eax,0x9debc255
  4148e4:	dec    esi
  4148e5:	mov    edi,ebx
  4148e7:	and    DWORD PTR [eax-0x6cf88d08],esp
  4148ed:	xor    bh,0x6
  4148f0:	out    0x54,eax
  4148f2:	push   0x4c
  4148f4:	fisttp WORD PTR [edx+esi*8+0x374c55fd]
  4148fb:	push   ebp
  4148fc:	push   0xffffffca
  4148fe:	mov    esi,0xf3b97e71
  414903:	push   es
  414904:	push   ds
  414905:	mov    esp,DWORD PTR [edi]
  414907:	jecxz  0x4148db
  414909:	mov    bl,BYTE PTR [edi]
  41490b:	jecxz  0x414903
  41490d:	and    edx,ebx
  41490f:	rcl    bl,0x3e
  414912:	sub    DWORD PTR ds:0xee07ce12,esp
  414918:	rol    BYTE PTR ds:0x4870251c,0xd7
  41491f:	push   cs
  414920:	out    dx,al
  414921:	jno    0x41494e
  414923:	cmp    al,0xcd
  414925:	mov    WORD PTR [ebx+0x53c2c53a],?
  41492b:	dec    DWORD PTR [esp+ecx*1-0x206483d5]
  414932:	add    BYTE PTR [eax],al
  414934:	add    ah,bh
  414936:	and    al,0x60
  414938:	dec    eax
  414939:	pop    ss
  41493a:	adc    DWORD PTR [esi],esp
  41493c:	inc    eax
  41493d:	ud2    
  41493f:	xchg   BYTE PTR [ebx],al
  414941:	repz pop es
  414943:	movaps xmm4,XMMWORD PTR [ebx-0x487518f9]
  41494a:	loop   0x41491e
  41494c:	cld    
  41494d:	cs (bad) 
  41494f:	push   0x44
  414951:	icebp  
  414952:	push   es
  414953:	out    0x53,eax
  414955:	or     edx,DWORD PTR [eax]
  414957:	clc    
  414958:	add    esi,ebx
  41495a:	sub    edx,0x4d0ebb86
  414960:	lea    esi,[ebx+0x67ac1840]
  414966:	push   edi
  414967:	add    al,ch
  414969:	lock test DWORD PTR [ebp+eax*1-0x1],eax
  41496e:	out    dx,eax
  41496f:	vsubss xmm5,xmm1,xmm1
  414973:	add    ecx,ebp
  414975:	lock push esi
  414977:	call   0x482a0d
  41497c:	mov    ss,WORD PTR [ebx+eiz*8]
  41497f:	setno  BYTE PTR [ebp+0x17]
  414983:	add    cl,ch
  414985:	addr16 pop es
  414987:	imul   cl
  414989:	icebp  
  41498a:	xor    al,BYTE PTR [ebx]
  41498c:	push   0xffffffb0
  41498e:	add    ch,cl
  414990:	jmp    0x414939
  414992:	ins    DWORD PTR es:[edi],dx
  414993:	mov    esi,DWORD PTR [edx+0x56503c94]
  414999:	add    BYTE PTR [eax],al
  41499b:	add    ah,bl
  41499d:	loop   0x4149b6
  41499f:	cdq    
  4149a0:	out    dx,eax
  4149a1:	and    BYTE PTR [edi+eiz*4],al
  4149a4:	dec    eax
  4149a5:	push   ebp
  4149a6:	(bad)  
  4149a7:	call   0xe701cc9c
  4149ac:	in     al,dx
  4149ad:	mov    al,ds:0x7ff0e8ff
  4149b2:	add    esi,esi
  4149b4:	jecxz  0x4149fc
  4149b6:	dec    esp
  4149b7:	int3   
  4149b8:	call   0x484f:0x1ce900ab
  4149bf:	xchg   ebp,eax
  4149c0:	fisubr WORD PTR [ebx+0x7feccd74]
  4149c6:	pop    esp
  4149c7:	(bad)
  4149ca:	inc    ebx
  4149cb:	cwde   
  4149cc:	icebp  
  4149cd:	push   es
  4149ce:	out    0x24,eax
  4149d0:	icebp  
  4149d1:	push   es
  4149d2:	add    BYTE PTR [edx-0x1d],dh
  4149d5:	loop   0x4149e6
  4149d7:	push   ebx
  4149d8:	out    dx,eax
  4149d9:	and    bh,bh
  4149db:	arpl   WORD PTR [ebx+0x783914e2],si
  4149e1:	lods   al,BYTE PTR ds:[esi]
  4149e2:	call   0xfd8588e7
  4149e7:	dec    DWORD PTR [esi+0x5a1c74c2]
  4149ed:	out    dx,eax
  4149ee:	and    ecx,DWORD PTR [edi]
  4149f0:	iret   
  4149f1:	test   DWORD PTR [edi],0x8d438256
  4149f7:	push   DWORD PTR [ebp+0x60]
  4149fa:	or     DWORD PTR [eax+0x40ca6e6],eax
  414a00:	add    BYTE PTR [eax],al
  414a02:	add    bh,bl
  414a04:	lods   al,BYTE PTR ds:[esi]
  414a05:	push   ebx
  414a06:	call   0x3cdb52
  414a0b:	bound  esp,QWORD PTR ds:0x899a0152
  414a11:	dec    esp
  414a12:	and    al,0xca
  414a14:	jne    0x4149fb
  414a16:	test   DWORD PTR [ebx-0x7495fff8],ecx
  414a1c:	jne    0x414a2f
  414a1e:	cld    
  414a1f:	mov    cl,BYTE PTR [eax+0x0]
  414a22:	push   eax
  414a23:	xor    eax,0x4a110016
  414a28:	or     BYTE PTR [edx+0x0],ch
  414a2b:	pop    es
  414a2c:	xchg   DWORD PTR [esp+edx*4],esp
  414a2f:	pop    edx
  414a30:	or     BYTE PTR [eax],al
  414a32:	push   eax
  414a33:	xor    bh,BYTE PTR [edi+0x45]
  414a36:	aaa    
  414a37:	inc    ebx
  414a38:	pusha  
  414a39:	and    edi,DWORD PTR [esi-0xb]
  414a3c:	jae    0x4149c7
  414a3e:	test   BYTE PTR [esi],bh
  414a40:	cwde   
  414a41:	add    BYTE PTR [eax],al
  414a43:	pop    edx
  414a44:	pop    eax
  414a45:	call   0x449912
  414a4a:	test   BYTE PTR [edx],cl
  414a4c:	add    al,0x84
  414a4e:	dec    ebp
  414a4f:	sbb    ecx,DWORD PTR [eax]
  414a51:	add    BYTE PTR [edx+0x1b],ch
  414a54:	jg     0x4149f2
  414a56:	and    al,0x16
  414a58:	or     BYTE PTR [eax],al
  414a5a:	add    BYTE PTR [edx-0x49],al
  414a5d:	mov    eax,0x7d9df300
  414a62:	shl    ah,0x21
  414a65:	(bad)  
  414a67:	add    BYTE PTR [eax],al
  414a69:	add    ah,bh
  414a6b:	popf   
  414a6c:	mov    dh,0x13
  414a6e:	or     edx,ecx
  414a70:	inc    ecx
  414a71:	add    BYTE PTR [esi+0x5d],dh
  414a74:	push   es
  414a75:	xchg   ebx,eax
  414a76:	das    
  414a77:	add    al,BYTE PTR ds:0x55a5b831
  414a7d:	and    al,0xe4
  414a7f:	pushf  
  414a80:	adc    BYTE PTR [edi+0x6a019df3],0x3f
  414a87:	dec    ebx
  414a88:	sub    eax,0xabe60f24
  414a8d:	(bad)  
  414a8e:	lods   al,BYTE PTR ds:[esi]
  414a8f:	popf   
  414a90:	add    DWORD PTR [ebx+0x289b977],ecx
  414a96:	repz popf 
  414a98:	push   ecx
  414a99:	push   0xfffffff7
  414a9b:	push   ebp
  414a9c:	fisub  DWORD PTR [ebp-0xe]
  414a9f:	popf   
  414aa0:	jge    0x414a62
  414aa2:	pop    es
  414aa3:	fmul   DWORD PTR [edx+0x7d4b23c6]
  414aa9:	and    al,0x6f
  414aab:	lahf   
  414aac:	add    DWORD PTR [eax],eax
  414aae:	and    ecx,DWORD PTR [esi-0x61241557]
  414ab4:	add    DWORD PTR [ebx+0x6a207133],eax
  414aba:	mov    bh,0xc3
  414abc:	dec    ebx
  414abd:	mov    ebp,DWORD PTR [edi-0x5caeba3f]
  414ac3:	adc    al,0x10
  414ac5:	xor    al,0xdd
  414ac7:	pop    ebp
  414ac8:	add    DWORD PTR [ecx-0x7b774ec9],eax
  414ace:	add    BYTE PTR [eax],al
  414ad0:	add    BYTE PTR [edi],cl
  414ad2:	dec    esi
  414ad3:	add    DWORD PTR [eax],eax
  414ad5:	repz es cmp eax,0x3d4ac324
  414adc:	and    al,0xfb
  414ade:	push   es
  414adf:	aaa    
  414ae0:	xchg   DWORD PTR [edi-0x5dabd51e],ebp
  414ae6:	push   edi
  414ae7:	fs or  bh,0x8e
  414aeb:	jmp    0x70983df3
  414af0:	xor    bh,cl
  414af2:	dec    edx
  414af3:	iret   
  414af4:	xor    bl,BYTE PTR [edi+eax*1-0x19]
  414af8:	jle    0x414aad
  414afa:	xor    eax,DWORD PTR ds:0xe7166b2c
  414b00:	add    edx,esi
  414b02:	xor    eax,ebx
  414b04:	pop    ss
  414b05:	into   
  414b06:	adc    al,0xf7
  414b08:	adc    BYTE PTR [ebx],dh
  414b0a:	pop    es
  414b0b:	mov    ?,WORD PTR [eax]
  414b0d:	pop    ss
  414b0e:	or     esi,DWORD PTR [edx-0x11]
  414b11:	push   esp
  414b12:	adc    eax,0xd1ae0427
  414b17:	jbe    0x414b49
  414b19:	iret   
  414b1a:	push   cs
  414b1b:	outs   dx,BYTE PTR ds:[esi]
  414b1c:	into   
  414b1d:	mov    ch,0x43
  414b1f:	or     eax,DWORD PTR ds:0x50ba5594
  414b25:	sbb    eax,DWORD PTR [esi]
  414b27:	test   DWORD PTR [ebx],0xc3f4a9f3
  414b2d:	loop   0x414b75
  414b2f:	out    0x83,eax
  414b31:	mul    edx
  414b33:	in     eax,dx
  414b34:	add    al,BYTE PTR [eax]
  414b36:	add    BYTE PTR [eax],al
  414b38:	loopne 0x414b83
  414b3a:	ss jo  0x414b4c
  414b3d:	dec    edi
  414b3e:	jmp    0x6bbd3e46
  414b43:	loopne 0x414b9d
  414b45:	pop    es
  414b46:	out    0x3,eax
  414b48:	dec    esi
  414b49:	jae    0x414b16
  414b4b:	mov    bh,0xf3
  414b4d:	push   es
  414b4e:	out    0x8a,eax
  414b50:	mov    bh,0xe2
  414b52:	mov    dh,0x86
  414b54:	scas   eax,DWORD PTR es:[edi]
  414b55:	loop   0x414b0d
  414b57:	push   ebx
  414b58:	xor    eax,DWORD PTR cs:[eax]
  414b5b:	int    0xfc
  414b5d:	ret    
  414b5e:	inc    esp
  414b5f:	lds    esp,FWORD PTR [esi+edx*1]
  414b62:	in     eax,dx
  414b63:	sub    bh,ch
  414b65:	ret    
  414b66:	inc    esp
  414b67:	add    eax,0x2b4631b7
  414b6c:	out    dx,eax
  414b6d:	ret    
  414b6e:	inc    esp
  414b6f:	add    eax,0x28ee4db3
  414b74:	out    dx,eax
  414b75:	ret    
  414b76:	inc    esp
  414b77:	add    eax,0x28ee2a3f
  414b7c:	out    dx,eax
  414b7d:	ret    
  414b7e:	inc    esp
  414b7f:	add    eax,0x28eebf2b
  414b84:	out    dx,eax
  414b85:	ret    
  414b86:	inc    esp
  414b87:	lds    esp,FWORD PTR [eax]
  414b89:	scas   al,BYTE PTR es:[edi]
  414b8a:	out    dx,al
  414b8b:	sub    bh,ch
  414b8d:	ret    
  414b8e:	inc    esp
  414b8f:	lds    ebp,FWORD PTR [ebx+edx*1]
  414b92:	in     eax,dx
  414b93:	sub    bh,ch
  414b95:	sahf   
  414b96:	or     BYTE PTR [esi-0x17955499],0x0
  414b9d:	add    BYTE PTR [eax],al
  414b9f:	ins    DWORD PTR es:[edi],dx
  414ba0:	and    BYTE PTR [ebp*2+0x510006f0],0xe1
  414ba8:	push   0x0
  414baa:	jmp    0x6249992a
  414baf:	aam    0xe2
  414bb1:	cmovno ebp,esi
  414bb4:	cmp    edi,edi
  414bb6:	call   0xd5657e26
  414bbb:	cwde   
  414bbc:	std    
  414bbd:	dec    esi
  414bbe:	call   0xbc29a3b3
  414bc3:	pop    ss
  414bc4:	lods   al,BYTE PTR ds:[esi]
  414bc5:	std    
  414bc6:	(bad)  
  414bc7:	mov    esi,0x7bc2bff7
  414bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bcd:	pop    ebx
  414bce:	sub    eax,DWORD PTR [ecx+ebp*4+0x54]
  414bd2:	bound  edx,QWORD PTR [ecx+ebp*1+0x73200ec]
  414bd9:	add    BYTE PTR [eax],al
  414bdb:	mov    DWORD PTR [ebx],edi
  414bdd:	mov    DWORD PTR [ebp-0x1e],esi
  414be0:	pop    ebp
  414be1:	xlat   BYTE PTR ds:[ebx]
  414be2:	push   0x5d87050b
  414be7:	and    bl,bh
  414be9:	jle    0x414c66
  414beb:	fiadd  WORD PTR [edx]
  414bed:	mov    BYTE PTR [ebp+0x1d],0x2
  414bf1:	or     eax,DWORD PTR [esp+ebx*4+0x7f000003]
  414bf8:	inc    ecx
  414bf9:	sbb    BYTE PTR [ecx-0xac74e9],cl
  414bff:	daa    
  414c00:	mov    esp,DWORD PTR [esi-0x75]
  414c03:	add    BYTE PTR [eax],al
  414c05:	add    BYTE PTR [ecx],cl
  414c07:	jmp    0x25d4ff3
  414c0c:	add    BYTE PTR [ebx-0x786d56e],cl
  414c12:	pop    ecx
  414c13:	je     0x414c10
  414c15:	jne    0x414bcd
  414c17:	outs   dx,BYTE PTR ds:[esi]
  414c18:	inc    DWORD PTR [eax]
  414c1a:	mov    ebp,0x9a016380
  414c1f:	add    al,0x68
  414c21:	mov    cl,cl
  414c23:	add    al,0x0
  414c25:	jmp    DWORD PTR [edi+0x58]
  414c28:	mov    dl,0x43
  414c2a:	mov    dh,BYTE PTR [ebp+0x11]
  414c2d:	adc    BYTE PTR [ecx-0x67c2ffbc],cl
  414c33:	add    eax,DWORD PTR [eax]
  414c35:	add    BYTE PTR [ebx],dh
  414c37:	inc    edx
  414c38:	std    
  414c39:	dec    DWORD PTR [edx+0x5c4de84d]
  414c3f:	add    al,0x0
  414c41:	push   edi
  414c42:	mov    dl,0xfd
  414c44:	or     eax,0xb1874a00
  414c49:	enter  0x740f,0xfb
  414c4d:	call   0x417af8
  414c52:	repz and al,BYTE PTR [edi-0x4f06c134]
  414c59:	push   eax
  414c5a:	sub    cx,bp
  414c5d:	cmp    DWORD PTR [ebx],0x60f999a9
  414c63:	mov    cl,0xb2
  414c65:	mov    BYTE PTR [esi+0xc08597],dh
  414c6b:	add    BYTE PTR [eax],al
  414c6d:	lahf   
  414c6e:	adc    edi,DWORD PTR [ebp+0x1]
  414c71:	or     al,0x53
  414c73:	ror    BYTE PTR [ecx-0x11a4682],1
  414c79:	in     eax,dx
  414c7a:	pop    ecx
  414c7c:	cmc    
  414c7d:	sbb    esp,DWORD PTR [ebp-0x5dc7743f]
  414c83:	out    0xbe,al
  414c85:	inc    ebx
  414c86:	or     DWORD PTR [edi+edi*8-0x2c],esi
  414c8a:	dec    eax
  414c8b:	jge    0x414c8c
  414c8d:	aam    0x32
  414c8f:	cmp    ah,bl
  414c91:	jnp    0x414c75
  414c93:	mov    cl,0xe8
  414c95:	mov    DWORD PTR [edx+esi*4-0x3],ecx
  414c99:	jp     0x414cc2
  414c9b:	add    al,0x0
  414c9d:	repz xor cl,BYTE PTR [eax-0x4dd75138]
  414ca4:	(bad)  
  414ca5:	repz popf 
  414ca7:	inc    ecx
  414ca8:	inc    edi
  414ca9:	es aaa 
  414cab:	jmp    0x85f1e1fa
  414cb0:	shl    bl,0x9d
  414cb3:	add    DWORD PTR [edx-0xd],ebp
  414cb6:	ret    
  414cb7:	add    DWORD PTR [ebx+0x31515636],ecx
  414cbd:	mov    bl,0x55
  414cbf:	adc    cl,BYTE PTR [ebp-0xe]
  414cc2:	popf   
  414cc3:	out    dx,al
  414cc4:	inc    edx
  414cc5:	imul   esp,DWORD PTR [eax-0x620c5778],0x1
  414ccc:	mov    esi,edx
  414cce:	push   es
  414ccf:	pop    ds
  414cd0:	sbb    eax,DWORD PTR [eax]
  414cd2:	add    BYTE PTR [eax],al
  414cd4:	add    esi,DWORD PTR [edx]
  414cd6:	out    0x3,eax
  414cd8:	fld    DWORD PTR [ecx]
  414cda:	fs dec eax
  414cdc:	inc    ebx
  414cdd:	push   esi
  414cde:	dec    DWORD PTR [edx]
  414ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ce1:	add    eax,0x323387e7
  414ce6:	loopne 0x414d11
  414ce8:	jb     0x414d13
  414cea:	test   DWORD PTR [edi],0x7ade14a0
  414cf0:	mov    al,0xb4
  414cf2:	ds jg  0x414c9d
  414cf5:	call   0x7ce7:0x57a6fcf
  414cfc:	cwde   
  414cfd:	inc    cl
  414cff:	push   es
  414d00:	rol    esi,0x6b
  414d03:	les    esp,FWORD PTR [edi+0x19]
  414d06:	out    dx,al
  414d07:	jns    0x414d39
  414d09:	fwait
  414d0a:	pop    ds
  414d0b:	cmp    al,0x67
  414d0d:	adc    DWORD PTR [edi],ebx
  414d0f:	cmp    al,0x60
  414d11:	cmp    ebp,DWORD PTR [ebp-0x6df731b9]
  414d17:	inc    edx
  414d18:	dec    ebp
  414d19:	mov    dl,BYTE PTR [esi+esi*4]
  414d1c:	neg    DWORD PTR [ebx]
  414d1e:	es jg  0x414d51
  414d21:	pop    edi
  414d22:	(bad)  
  414d23:	popf   
  414d24:	push   ss
  414d25:	or     bh,ah
  414d27:	sbb    eax,0xb0df30f7
  414d2c:	loopne 0x414cd4
  414d2e:	inc    edx
  414d2f:	inc    ebp
  414d30:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d32:	cld    
  414d33:	pop    es
  414d34:	loop   0x414d7c
  414d36:	out    0x7c,eax
  414d38:	add    BYTE PTR [eax],al
  414d3a:	add    BYTE PTR [ebx-0x2bc7a274],al
  414d40:	xchg   ecx,eax
  414d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d42:	lahf   
  414d43:	or     DWORD PTR [edi],eax
  414d45:	popf   
  414d46:	jp     0x414d55
  414d48:	xchg   edx,eax
  414d49:	out    0x1b,eax
  414d4b:	adc    al,0xf4
  414d4d:	jmp    DWORD PTR [edi-0x16ffd110]
  414d53:	out    dx,al
  414d54:	push   es
  414d55:	mov    esp,DWORD PTR [eax+ebx*8+0x68e5468d]
  414d5c:	fldenv [edi-0x18]
  414d5f:	lock mov al,al
  414d62:	xchg   esp,eax
  414d63:	jmp    0xfda4:0xc27e83c
  414d6a:	(bad)  
  414d6b:	fnsave [edx-0x5c03e018]
  414d71:	std    
  414d72:	imul   eax,esp,0x74f600a3
  414d78:	inc    edi
  414d79:	std    
  414d7a:	fiadd  WORD PTR [ebx-0x70]
  414d7d:	jae    0x414d50
  414d7f:	pop    eax
  414d80:	ds dec ebp
  414d82:	call   0xc6bcd477
  414d87:	lock sbb DWORD PTR [edi],eax
  414d8a:	mov    bh,0xef
  414d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d8d:	push   cs
  414d8e:	ins    BYTE PTR es:[edi],dx
  414d8f:	push   cs
  414d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d91:	std    
  414d92:	scas   al,BYTE PTR es:[edi]
  414d93:	inc    ebx
  414d94:	xchg   edx,eax
  414d95:	jae    0x414df8
  414d97:	push   0xf0e8685a
  414d9c:	mov    ds:0x3971,eax
  414da1:	add    BYTE PTR [edi-0x3e],bl
  414da4:	sahf   
  414da5:	call   0x6829859a
  414daa:	or     eax,0xba72fda4
  414daf:	scas   al,BYTE PTR es:[edi]
  414db0:	xor    ecx,DWORD PTR [esi]
  414db2:	lock push es
  414db4:	pop    esi
  414db5:	mov    edx,0x2bc73fb0
  414dba:	hlt    
  414dbb:	push   es
  414dbc:	push   ebx
  414dbd:	jb     0x414e23
  414dbf:	xchg   esp,ebp
  414dc1:	frstor [edi]
  414dc3:	cmp    eax,0x9077c355
  414dc8:	jae    0x414dca
  414dca:	es push edx
  414dcc:	call   0x4b5c86
  414dd1:	mov    ebx,DWORD PTR [edi+0x66580a1]
  414dd7:	or     dh,dh
  414dd9:	push   es
  414dda:	pop    ebx
  414ddb:	add    eax,DWORD PTR [edx]
  414ddd:	pop    ebx
  414dde:	pop    esi
  414ddf:	stc    
  414de0:	imul   edx,DWORD PTR [eax],0x50044fd7
  414de6:	xchg   edi,eax
  414de7:	hlt    
  414de8:	sti    
  414de9:	mov    ebx,ecx
  414deb:	and    DWORD PTR [eax-0x768ada75],0xfb3e427e
  414df5:	adc    eax,0x3ffba2
  414dfa:	retf   0x893d
  414dfd:	jge    0x414e1d
  414dff:	and    DWORD PTR [edi-0x4de6f18],edi
  414e05:	inc    DWORD PTR [eax]
  414e07:	add    BYTE PTR [eax],al
  414e09:	mov    ecx,0xa4a4687
  414e0e:	xchg   BYTE PTR [ecx-0x8],bh
  414e11:	popa   
  414e12:	enter  0x7be8,0x51
  414e16:	je     0x414e13
  414e18:	call   FWORD PTR [edi]
  414e1a:	jae    0x414da5
  414e1c:	inc    ebp
  414e1d:	xchg   BYTE PTR [ecx+esi*2-0xc],dh
  414e21:	push   edi
  414e22:	(bad)  
  414e23:	mov    edi,edi
  414e25:	fist   WORD PTR [esi+0x50]
  414e28:	push   0xffffffaa
  414e2a:	push   ecx
  414e2b:	call   0xfbb5392c
  414e30:	or     DWORD PTR [esi-0x5],0x7e
  414e34:	clc    
  414e35:	lds    esp,FWORD PTR [ebp+0x88ab682]
  414e3b:	add    BYTE PTR [ebx+0x16a3add],cl
  414e41:	mov    ds:0xf343ac50,al
  414e46:	lods   eax,DWORD PTR ds:[esi]
  414e47:	scas   al,BYTE PTR es:[edi]
  414e48:	adc    ebx,DWORD PTR [ebx]
  414e4a:	lahf   
  414e4b:	inc    ecx
  414e4c:	add    BYTE PTR [edx+0x73],bh
  414e4f:	stc    
  414e50:	xor    BYTE PTR [ebx],0xb5
  414e53:	test   DWORD PTR [ecx-0x2fe520d],ebx
  414e59:	(bad)  
  414e5a:	mov    ch,0x14
  414e5c:	inc    eax
  414e5d:	rep stos BYTE PTR es:[edi],al
  414e5f:	jbe    0x414e61
  414e61:	rep lods eax,DWORD PTR ds:[esi]
  414e63:	cmp    BYTE PTR [ebx],cl
  414e65:	cmp    al,0x83
  414e67:	stc    
  414e68:	cld    
  414e69:	fimul  WORD PTR [ebp+0x12]
  414e6c:	inc    eax
  414e6d:	add    BYTE PTR [eax],al
  414e6f:	add    bl,dh
  414e71:	xor    BYTE PTR [edi],ah
  414e73:	or     bl,dh
  414e75:	xor    BYTE PTR [edi],ch
  414e77:	or     bl,dh
  414e79:	and    DWORD PTR [edx],ebp
  414e7b:	push   0xffffffbb
  414e7d:	xchg   ecx,edi
  414e7f:	cld    
  414e80:	(bad)  
  414e81:	int    0x5a
  414e83:	inc    ecx
  414e84:	repz les ebx,FWORD PTR [eax]
  414e87:	add    al,0xe0
  414e89:	in     eax,dx
  414e8a:	add    ecx,DWORD PTR [ecx+0x74ae2afb]
  414e90:	dec    esi
  414e91:	sbb    DWORD PTR [eax],edx
  414e93:	xor    ch,bh
  414e95:	in     eax,dx
  414e96:	add    ebp,DWORD PTR [edx+0x3]
  414e99:	sub    eax,DWORD PTR [ebx+0x4]
  414e9c:	inc    ebx
  414e9d:	inc    ebx
  414e9e:	inc    esi
  414e9f:	add    al,0x23
  414ea1:	ins    DWORD PTR es:[edi],dx
  414ea2:	ror    BYTE PTR [ecx-0x79160813],cl
  414ea8:	hlt    
  414ea9:	xor    bl,al
  414eab:	adc    al,0x66
  414ead:	in     al,dx
  414eae:	pop    ss
  414eaf:	push   esi
  414eb0:	inc    ebx
  414eb1:	(bad)  
  414eb2:	ror    BYTE PTR [ecx-0x3b7d69d2],cl
  414eb8:	sti    
  414eb9:	adc    eax,DWORD PTR [ecx+0x7cae277d]
  414ebf:	inc    ebp
  414ec0:	and    eax,DWORD PTR [edi]
  414ec2:	fucomi st,st(0)
  414ec4:	add    al,0x24
  414ec6:	inc    DWORD PTR [ebx]
  414ec8:	pop    es
  414ec9:	add    al,0xcd
  414ecb:	xor    dh,0x50
  414ece:	out    0x37,eax
  414ed0:	or     edi,DWORD PTR [edi+ecx*8]
  414ed3:	add    al,BYTE PTR [eax]
  414ed5:	add    BYTE PTR [eax],al
  414ed7:	and    eax,DWORD PTR [esi-0x19]
  414eda:	sbb    esi,ebx
  414edc:	push   es
  414edd:	fild   WORD PTR [ebx]
  414edf:	dec    ebx
  414ee0:	add    BYTE PTR [esi+0x2789f303],bh
  414ee6:	aaa    
  414ee7:	out    dx,eax
  414ee8:	push   esi
  414ee9:	call   0xff7d3288
  414eee:	daa    
  414eef:	(bad)  
  414ef0:	mov    ds:0xea0ae0e,eax
  414ef5:	sets   BYTE PTR [eax+0x5cf1e705]
  414efc:	inc    ebx
  414efd:	xchg   ebp,eax
  414efe:	dec    edx
  414eff:	sub    al,0xc8
  414f01:	jecxz  0x414f06
  414f03:	mov    al,ds:0xf81d38f
  414f08:	sahf   
  414f09:	push   0xffffffa0
  414f0b:	(bad)  
  414f0c:	aaa    
  414f0d:	cmp    eax,0x3f088955
  414f12:	jecxz  0x414f15
  414f14:	jecxz  0x414f50
  414f16:	pushf  
  414f17:	mov    al,ds:0x74adbe20
  414f1c:	dec    ebx
  414f1d:	or     edx,DWORD PTR [eax]
  414f1f:	jo     0x414ee8
  414f21:	xor    al,0x6
  414f23:	xor    esi,DWORD PTR [eax+0x6f30316]
  414f29:	adc    DWORD PTR [ebx+0x1492fcbe],esi
  414f2f:	xor    eax,DWORD PTR [edi]
  414f31:	aaa    
  414f32:	lods   eax,DWORD PTR ds:[esi]
  414f33:	add    BYTE PTR [edi],al
  414f35:	fadd   DWORD PTR [ebx-0xd]
  414f38:	scas   al,BYTE PTR es:[edi]
  414f39:	cdq    
  414f3a:	sub    al,BYTE PTR [eax]
  414f3c:	add    BYTE PTR [eax],al
  414f3e:	sahf   
  414f3f:	mov    ds:0x14af6d00,al
  414f44:	test   BYTE PTR [ecx],ah
  414f46:	lock push es
  414f48:	add    BYTE PTR [eax-0x72],dl
  414f4b:	mov    eax,ds:0x52fbe9fd
  414f50:	and    al,0xf9
  414f52:	cmc    
  414f53:	cmp    ah,BYTE PTR [esi*8+0x46a94f88]
  414f5a:	xchg   esi,eax
  414f5b:	mov    al,BYTE PTR [ebp+eax*1-0xd]
  414f5f:	xchg   eax,edi
  414f61:	ss push esi
  414f63:	xchg   BYTE PTR [ecx+ebp*8-0x727ef910],ah
  414f6a:	dec    esp
  414f6b:	add    al,BYTE PTR [eax]
  414f6d:	xchg   ebx,eax
  414f6e:	mov    al,ds:0x18cd448d
  414f73:	xor    BYTE PTR [eax],al
  414f75:	mov    ecx,0xe8cab188
  414f7a:	lock (bad) 
  414f7c:	jl     0x414f43
  414f7e:	adc    BYTE PTR [edi+0x2373e5c4],al
  414f84:	and    al,0xdd
  414f86:	hlt    
  414f87:	adc    eax,0xa2ffe67a
  414f8c:	adc    esp,DWORD PTR [ecx-0x1f]
  414f8f:	inc    esi
  414f90:	add    BYTE PTR [edx+0x48],ch
  414f93:	out    0x72,eax
  414f95:	cmp    al,0x6a
  414f97:	fmul   QWORD PTR [edx+0x31e5db35]
  414f9d:	mov    ds:0x198b095a,al
  414fa2:	add    BYTE PTR [eax],al
  414fa4:	add    BYTE PTR [edi+0x7e0fa86],bh
  414faa:	or     ecx,DWORD PTR [edx-0x75079455]
  414fb0:	cmp    DWORD PTR [esi-0x79],ecx
  414fb3:	cli    
  414fb4:	in     al,dx
  414fb5:	dec    DWORD PTR [edx]
  414fb7:	add    al,0xa0
  414fb9:	mov    ecx,DWORD PTR [ebx+ecx*4]
  414fbc:	add    BYTE PTR [edx],cl
  414fbe:	xchg   esp,eax
  414fbf:	cmp    dl,0x97
  414fc2:	ficom  DWORD PTR [edx]
  414fc4:	add    al,0x33
  414fc6:	mov    dl,bh
  414fc8:	je     0x414f5f
  414fca:	popf   
  414fcb:	inc    BYTE PTR [eax-0x18]
  414fce:	iret   
  414fcf:	out    0x7,eax
  414fd1:	retf   0x465
  414fd4:	mov    BYTE PTR [ebx-0x4eba02ea],cl
  414fda:	retf   0xc084
  414fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fde:	mov    ebp,0xa9a7db81
  414fe3:	les    eax,FWORD PTR [esi+eiz*8-0x56]
  414fe7:	(bad)  
  414fe8:	call   FWORD PTR [edx+0x5]
  414feb:	sti    
  414fec:	ja     0x415030
  414fee:	push   ds
  414fef:	jae    0x414ffd
  414ff1:	fstp   st(2)
  414ff3:	add    ecx,DWORD PTR [ebp-0x17c65682]
  414ff9:	xchg   ebp,eax
  414ffa:	ins    DWORD PTR es:[edi],dx
  414ffb:	sti    
  414ffc:	call   FWORD PTR [edi+0x7a202449]
  415002:	jge    0x414fc9
  415004:	std    
  415005:	sbb    eax,0x44876d
  41500a:	add    BYTE PTR [eax],al
  41500c:	mov    eax,ss:0x6da16be5
  415012:	sti    
  415013:	(bad)  
  415014:	(bad)  
  415015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415016:	or     eax,0x76d3250
  41501b:	add    edx,ebx
  41501d:	xchg   eax,eax
  41501f:	xorps  xmm3,XMMWORD PTR [ebx+0x1e9dfffc]
  415026:	inc    esp
  415027:	and    al,0xc2
  415029:	xor    al,0xe8
  41502b:	test   DWORD PTR [eax-0x4d74fffc],esp
  415031:	xchg   bh,dl
  415033:	je     0x41504a
  415035:	and    BYTE PTR [esp-0xd],bh
  415039:	xchg   ebp,eax
  41503a:	cmp    ch,0x27
  41503d:	mov    bh,0x7e
  41503f:	icebp  
  415040:	jo     0x415054
  415042:	loopne 0x415063
  415044:	repz repz push ebx
  415047:	mov    ebp,DWORD PTR [edi]
  415049:	rcr    cl,cl
  41504b:	imul   esi,ebx,0xb91e9bfd
  415051:	scas   eax,DWORD PTR es:[edi]
  415052:	add    DWORD PTR [ecx+0x3a1bb2b7],eax
  415058:	data16 jb 0x415038
  41505b:	aaa    
  41505c:	lds    ebx,FWORD PTR [ebp-0x56]
  41505f:	adc    esp,DWORD PTR [ebx]
  415061:	rol    BYTE PTR [ecx+0x0],0x70
  415065:	jmp    0x4fe4:0x11af8af7
  41506c:	pop    ebx
  41506d:	int    0xa8
  41506f:	std    
  415070:	add    BYTE PTR [eax],al
  415072:	add    BYTE PTR [ebp+ebp*1-0x3e],al
  415076:	cmp    ch,BYTE PTR [edx+edi*2+0x104b51bc]
  41507d:	push   ds
  41507e:	std    
  41507f:	sub    al,0x86
  415081:	icebp  
  415082:	jb     0x415077
  415084:	lods   eax,DWORD PTR ds:[esi]
  415085:	stos   BYTE PTR es:[edi],al
  415086:	xor    ebx,DWORD PTR [edi]
  415088:	fadd   QWORD PTR [eax+eax*1+0x14]
  41508c:	ret    
  41508d:	adc    DWORD PTR [ecx],edx
  41508f:	mov    bl,0xad
  415091:	call   0x1ef4297
  415096:	or     eax,0xfda92577
  41509b:	hlt    
  41509c:	mov    eax,0xc60f242d
  4150a1:	lods   al,BYTE PTR ds:[esi]
  4150a2:	cdq    
  4150a3:	repnz lods eax,DWORD PTR ds:[esi]
  4150a5:	idiv   BYTE PTR [edi-0x76b2ffc4]
  4150ab:	into   
  4150ac:	cli    
  4150ad:	lds    eax,FWORD PTR [ebx+esi*8]
  4150b0:	cli    
  4150b1:	jl     0x41509f
  4150b3:	jo     0x4150bb
  4150b5:	xchg   ebx,eax
  4150b6:	aas    
  4150b7:	and    bh,BYTE PTR [ecx]
  4150b9:	ss stos DWORD PTR es:[edi],eax
  4150bb:	inc    eax
  4150bc:	adc    esp,DWORD PTR [eax+ecx*2+0x6f]
  4150c0:	lahf   
  4150c1:	adc    al,0xfc
  4150c3:	jnp    0x41505b
  4150c5:	pop    ebp
  4150c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c8:	lahf   
  4150c9:	jle    0x415051
  4150cb:	adc    BYTE PTR [edi-0x5ccf8719],bl
  4150d1:	pop    ss
  4150d2:	pushf  
  4150d3:	xchg   ecx,eax
  4150d4:	std    
  4150d5:	out    0x3,al
  4150d7:	add    BYTE PTR [eax],al
  4150d9:	add    BYTE PTR [edx-0x42],ch
  4150dc:	jo     0x415126
  4150de:	jmp    0x415069
  4150e0:	xor    dh,BYTE PTR [eax]
  4150e2:	push   cs
  4150e3:	xchg   edx,eax
  4150e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150e5:	addr16 ret 
  4150e7:	shl    DWORD PTR [esi],cl
  4150e9:	inc    ebx
  4150ea:	dec    ebx
  4150eb:	adc    ecx,esp
  4150ed:	add    esi,ebx
  4150ef:	mov    WORD PTR [edi],cs
  4150f1:	js     0x4150b3
  4150f3:	sahf   
  4150f4:	aas    
  4150f5:	dec    eax
  4150f6:	hlt    
  4150f7:	push   es
  4150f8:	out    0x4a,eax
  4150fa:	popf   
  4150fb:	mov    WORD PTR [edx],gs
  4150fd:	dec    esi
  4150fe:	sub    al,0xc4
  415100:	fild   WORD PTR [ebx]
  415102:	jp     0x41511d
  415104:	or     eax,DWORD PTR [esi-0x7f18ed70]
  41510a:	and    eax,0x9a78b91a
  41510f:	fsub   DWORD PTR [ebx+0x40]
  415112:	xor    esi,DWORD PTR [esi]
  415114:	pop    esp
  415115:	inc    edx
  415116:	xor    eax,0x574ecf36
  41511b:	lahf   
  41511c:	fidivr WORD PTR [edi+0x33]
  41511f:	sbb    edx,edi
  415121:	and    DWORD PTR [edx+0x6],edi
  415124:	inc    ebp
  415125:	in     eax,dx
  415126:	xor    DWORD PTR [ecx-0x6da901c4],ebx
  41512c:	es push es
  41512e:	dec    ebp
  41512f:	loop   0x415130
  415131:	sub    eax,DWORD PTR [ebx+0x4ae4b13]
  415137:	or     eax,DWORD PTR [ecx+0x72d5cdae]
  41513d:	in     eax,dx
  41513e:	add    BYTE PTR [eax],al
  415140:	add    dh,bh
  415142:	int    0x69
  415144:	lahf   
  415145:	popf   
  415146:	xchg   ecx,eax
  415147:	inc    ebx
  415148:	dec    ebp
  415149:	aas    
  41514a:	xor    DWORD PTR [edx],edi
  41514c:	and    ah,BYTE PTR [edx+eiz*1]
  41514f:	cld    
  415150:	ins    BYTE PTR es:[edi],dx
  415151:	aam    0xe
  415153:	(bad)  
  415154:	sub    al,0x8a
  415156:	sahf   
  415157:	mov    ah,dh
  415159:	dec    esp
  41515a:	scas   eax,DWORD PTR es:[edi]
  41515b:	mov    ds:0x839c4bd3,eax
  415160:	sub    ebx,eax
  415162:	clc    
  415163:	mov    BYTE PTR [esp+edx*4-0x61a92e28],ch
  41516a:	pushf  
  41516b:	jae    0x41515e
  41516d:	js     0x4150fc
  41516f:	pop    ss
  415170:	jmp    0xe684e065
  415175:	fwait
  415176:	sbb    cl,BYTE PTR [eax]
  415178:	inc    ecx
  415179:	and    BYTE PTR [esi],0xfd
  41517c:	es mov ebp,0xff100d41
  415182:	fwait
  415183:	std    
  415184:	push   ss
  415185:	(bad)  
  415186:	scas   al,BYTE PTR es:[edi]
  415187:	loope  0x415109
  415189:	pop    ebx
  41518a:	pushf  
  41518b:	xor    ah,BYTE PTR [edx]
  41518d:	js     0x4151b7
  41518f:	std    
  415190:	dec    BYTE PTR [ebx+0x35]
  415193:	mov    eax,edi
  415195:	lea    edx,[ebp+ecx*1+0x76d65]
  41519c:	jmp    0xbbc5461f
  4151a1:	les    ebx,FWORD PTR [edx]
  4151a3:	push   ebp
  4151a4:	sbb    al,BYTE PTR [eax]
  4151a6:	add    BYTE PTR [eax],al
  4151a8:	test   al,0xd7
  4151aa:	cld    
  4151ab:	imul   edx,DWORD PTR [esi-0x46ff8d2a],0x4a01561b
  4151b5:	ins    BYTE PTR es:[edi],dx
  4151b6:	js     0x41522c
  4151b8:	fisttp WORD PTR [ecx+0x8ff58fa]
  4151be:	push   0x4
  4151c0:	dec    ecx
  4151c1:	enter  0x5f02,0xf9
  4151c5:	sbb    al,0x16
  4151c7:	(bad)  
  4151c8:	loopne 0x41517c
  4151ca:	cmp    bl,0x93
  4151cd:	(bad)  
  4151ce:	pcmpgtd mm4,QWORD PTR [ebp+0x6bc1d22f]
  4151d5:	popf   
  4151d6:	arpl   WORD PTR [ebx],ax
  4151d8:	push   eax
  4151d9:	out    0x7e,eax
  4151db:	jmp    0x8d6fcc2a
  4151e0:	mov    al,0x2e
  4151e2:	cmp    bl,0x8f
  4151e5:	(bad)  
  4151e6:	pcmpgtd mm2,QWORD PTR [ebp+0x2f]
  4151ea:	rol    cl,cl
  4151ec:	mov    ebx,0x2003639d
  4151f1:	call   0x7a9f3b74
  4151f6:	push   ss
  4151f7:	lea    esp,[eax-0x72]
  4151fa:	cmp    bl,0x4f
  4151fd:	(bad)  
  4151fe:	adc    esp,DWORD PTR [esi+0x45]
  415201:	das    
  415202:	rol    cl,cl
  415204:	jmp    0x4151a3
  415206:	arpl   WORD PTR [ebx],ax
  415208:	shl    bh,1
  41520a:	jle    0x4151f5
  41520c:	add    BYTE PTR [eax],al
  41520e:	add    BYTE PTR [ebp-0x62],bl
  415211:	mov    ah,0xc9
  415213:	dec    esp
  415214:	jp     0x4151c8
  415216:	pop    ebx
  415217:	mov    ?,WORD PTR [ebx+0x5e990374]
  41521d:	std    
  41521e:	gs xchg ebx,eax
  415220:	mov    eax,ds:0x44b5c788
  415225:	mov    edi,0x8004333
  41522a:	data16 repz es cld 
  41522e:	push   edi
  41522f:	inc    ebp
  415230:	jno    0x4152b1
  415232:	shl    BYTE PTR [edi-0x6],cl
  415235:	jns    0x415241
  415237:	outs   dx,DWORD PTR ds:[esi]
  415238:	push   edi
  415239:	xor    BYTE PTR [esi+0x0],cl
  41523c:	outs   dx,BYTE PTR ds:[esi]
  41523d:	test   bh,dh
  41523f:	push   ss
  415240:	sar    esi,cl
  415242:	imul   esi,ecx,0x73039945
  415248:	fnstenv [bp+si-0xe]
  41524c:	out    dx,eax
  41524d:	dec    ebp
  41524e:	xor    DWORD PTR [ebp-0x657ff277],ebx
  415254:	(bad)  
  415255:	es pop ss
  415257:	or     BYTE PTR [edx+edi*8],dl
  41525a:	gs cld 
  41525c:	sar    DWORD PTR [edx+0x1e1ef066],cl
  415262:	or     DWORD PTR [ebp+0x7db4f4fe],0x730a7770
  41526c:	aaa    
  41526d:	hlt    
  41526e:	jp     0x4152c1
  415270:	and    bh,BYTE PTR [ebx+0x74]
  415276:	lock xor BYTE PTR [edi+edi*8-0x5749eb1b],bh
  41527e:	icebp  
  41527f:	pop    ecx
  415280:	sti    
  415281:	data16 cmp ch,ch
  415284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415285:	add    bl,dh
  415287:	mov    edi,DWORD PTR [ebp+ecx*1-0x6b]
  41528b:	lock lock mov edi,0x871ba599
  415292:	in     al,dx
  415293:	push   ebp
  415294:	ret    0x6853
  415297:	repnz and ah,0x1b
  41529b:	das    
  41529c:	cwde   
  41529d:	nop
  41529e:	repnz lods eax,DWORD PTR ds:[esi]
  4152a0:	add    DWORD PTR [ebx+0x6851c1ef],ecx
  4152a6:	icebp  
  4152a7:	push   es
  4152a8:	jmp    0xf4dd45b0
  4152ad:	mov    DWORD PTR [eax],0xcbaee747
  4152b3:	jmp    DWORD PTR [esi+0x24a16a43]
  4152b9:	ret    
  4152ba:	(bad)  
  4152bb:	loope  0x415273
  4152bd:	adc    BYTE PTR [ebx],dh
  4152bf:	pop    es
  4152c0:	scas   al,BYTE PTR es:[edi]
  4152c1:	std    
  4152c2:	nop
  4152c3:	adc    al,0x27
  4152c5:	add    al,0x73
  4152c7:	(bad)  [esi-0x40]
  4152ca:	xor    al,BYTE PTR [edi]
  4152cc:	out    0x30,eax
  4152ce:	jmp    0x415303
  4152d0:	push   esi
  4152d1:	retf   
  4152d2:	mov    al,0x47
  4152d4:	out    0x4e,eax
  4152d6:	sahf   
  4152d7:	icebp  
  4152d8:	xchg   edx,eax
  4152d9:	adc    DWORD PTR [eax],eax
  4152db:	add    BYTE PTR [eax],al
  4152dd:	xor    eax,DWORD PTR [edi]
  4152df:	addr16 call 0x46c1439
  4152e5:	repz adc ecx,edx
  4152e8:	fwait
  4152e9:	dec    edi
  4152ea:	fwait
  4152eb:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ed:	outs   dx,DWORD PTR ds:[esi]
  4152ee:	(bad)  
  4152ef:	rcl    DWORD PTR [esi+esi*1],cl
  4152f2:	add    DWORD PTR [ebx-0x7ef94d40],eax
  4152f8:	in     eax,dx
  4152f9:	sbb    eax,0x8b002d07
  4152fe:	shr    DWORD PTR [edx+0x36344c03],0x10
  415305:	inc    ebx
  415306:	clc    
  415307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415308:	add    ebx,DWORD PTR [esi-0xf205470]
  41530e:	xchg   DWORD PTR [ebp-0x7278d001],ebp
  415314:	sti    
  415315:	and    al,0x83
  415317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415318:	imul   DWORD PTR [edx+0x42]
  41531b:	retf   
  41531c:	sti    
  41531d:	ins    BYTE PTR es:[edi],dx
  41531e:	inc    esp
  41531f:	in     al,dx
  415320:	jp     0x415357
  415322:	enter  0xe100,0xf0
  415326:	xor    al,0x89
  415328:	clc    
  415329:	pop    ecx
  41532a:	mov    esp,0x94f0e900
  41532f:	inc    esp
  415330:	add    eax,0xef7199ef
  415335:	ss scas eax,DWORD PTR es:[edi]
  415337:	inc    ecx
  415338:	inc    ecx
  415339:	xchg   esi,eax
  41533a:	pushf  
  41533b:	mov    DWORD PTR [edi-0x16fb3ad3],ebp
  415341:	add    BYTE PTR [eax],al
  415343:	add    BYTE PTR ds:0x6b68ec90,bh
  415349:	pop    ds
  41534a:	(bad)  
  41534b:	call   0x4d481740
  415350:	add    eax,0x94690047
  415355:	(bad)  
  415357:	sub    ch,bh
  415359:	push   es
  41535a:	push   ebp
  41535b:	adc    al,0x8d
  41535d:	pop    ebx
  41535e:	fsubr  DWORD PTR [edx+esi*1-0x381aaf9]
  415365:	stos   BYTE PTR es:[edi],al
  415366:	adc    ch,BYTE PTR [ecx]
  415368:	out    dx,eax
  415369:	xchg   BYTE PTR [ebx],bh
  41536b:	inc    ecx
  41536c:	cmp    al,0x48
  41536e:	add    cl,ch
  415370:	(bad)  
  415373:	pop    es
  415374:	xchg   esi,eax
  415375:	pushf  
  415376:	std    
  415377:	ins    DWORD PTR es:[edi],dx
  415378:	das    
  415379:	adc    ecx,DWORD PTR [edi]
  41537b:	es pop esp
  41537d:	outs   dx,BYTE PTR ds:[esi]
  41537e:	ret    
  41537f:	stos   BYTE PTR es:[edi],al
  415380:	lock ins BYTE PTR es:[edi],dx
  415382:	ss test al,0xf0
  415385:	rol    BYTE PTR [ebx],0x81
  415388:	test   BYTE PTR [eax+0x0],cl
  41538b:	call   0x1954ef3f
  415390:	loope  0x4153d8
  415392:	add    BYTE PTR [esp+ebp*8-0x66],ch
  415396:	push   eax
  415397:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415399:	mov    ?,esi
  41539b:	push   cs
  41539c:	push   esi
  41539d:	aaa    
  41539e:	push   0xfda60600
  4153a3:	jmp    DWORD PTR [edx+0x63]
  4153a6:	sti    
  4153a7:	add    BYTE PTR [eax],al
  4153a9:	add    BYTE PTR [eax],al
  4153ab:	sbb    ah,BYTE PTR [ebx+0x71]
  4153ae:	or     ch,cl
  4153b0:	(bad)  
  4153b1:	cld    
  4153b2:	dec    DWORD PTR [edx]
  4153b4:	sbb    eax,0x8cdfc79
  4153b9:	int3   
  4153ba:	adc    eax,0xc081031a
  4153bf:	inc    esi
  4153c0:	clc    
  4153c1:	push   edx
  4153c2:	lea    eax,[edi+0x1e]
  4153c5:	(bad)  
  4153c6:	dec    DWORD PTR [ebp+0x7d4fffff]
  4153cc:	or     BYTE PTR [esi+edx*1],dh
  4153cf:	or     al,BYTE PTR [ebx]
  4153d1:	jg     0x415397
  4153d3:	mov    esi,0x8ce4b986
  4153d8:	(bad)  
  4153d9:	sti    
  4153da:	push   es
  4153db:	fst    st(6)
  4153dd:	push   cs
  4153de:	sub    DWORD PTR [edi],0x7a
  4153e1:	(bad)  
  4153e2:	jmp    FWORD PTR [ebp-0xc]
  4153e5:	or     dl,BYTE PTR [ebp+0x24c8635a]
  4153eb:	cwde   
  4153ec:	sbb    eax,0x99710d46
  4153f1:	ret    
  4153f2:	inc    esi
  4153f3:	jg     0x4153f9
  4153f5:	xchg   DWORD PTR [ebp-0x49bda],eax
  4153fb:	mov    dl,0xb1
  4153fd:	(bad)  
  4153fe:	dec    DWORD PTR [edx-0x7a]
  415401:	data16 or BYTE PTR [edx+0x1d],cl
  415405:	inc    esi
  415406:	or     al,0xc1
  415408:	fadd   DWORD PTR [edi]
  41540a:	mov    DWORD PTR [ecx+ebx*4+0xc688],edx
  415411:	add    BYTE PTR [ebx],dl
  415413:	enter  0x4,0x74
  415417:	push   ds
  415418:	in     eax,dx
  415419:	(bad)  
  41541a:	sbb    edi,DWORD PTR [ecx]
  41541c:	jbe    0x41545e
  41541e:	repz scas eax,DWORD PTR es:[edi]
  415420:	cdq    
  415421:	jg     0x415416
  415423:	scas   eax,DWORD PTR es:[edi]
  415424:	add    DWORD PTR [esi+0x30],ebx
  415427:	sub    al,0x23
  415429:	add    al,0xc
  41542b:	adc    eax,DWORD PTR [eax]
  41542d:	mov    al,0xf2
  41542f:	in     al,dx
  415430:	repz mov ch,0xb5
  415433:	mov    edx,0xd7e67439
  415438:	pop    ss
  415439:	add    DWORD PTR [ecx],esp
  41543b:	outs   dx,BYTE PTR ds:[esi]
  41543c:	lds    ebp,FWORD PTR [edx-0xf]
  41543f:	(bad)  
  415440:	sub    eax,0xd6a3c80f
  415445:	(bad)  
  415446:	xor    dh,BYTE PTR [edx+ecx*1]
  415449:	mov    dh,BYTE PTR ds:0xb9e83baa
  41544f:	scas   al,BYTE PTR es:[edi]
  415450:	add    DWORD PTR [eax],eax
  415452:	and    edi,edi
  415454:	xor    edi,ebp
  415456:	fisub  WORD PTR [ebp-0x9]
  415459:	aas    
  41545a:	repz mov esp,0x71ab81cc
  415460:	mov    eax,DWORD PTR [esi-0x9]
  415463:	mov    eax,0x2db0c078
  415468:	and    cl,BYTE PTR [eax]
  41546a:	repz xchg ecx,eax
  41546c:	or     dh,BYTE PTR [edi]
  41546e:	add    eax,0xb39412be
  415473:	ins    DWORD PTR es:[edi],dx
  415474:	mov    eax,ds:0x13
  415479:	ja     0x415416
  41547b:	inc    ecx
  41547c:	add    BYTE PTR [edx+0x60],bh
  41547f:	or     DWORD PTR [ebx+0x54e3ba33],eax
  415485:	ret    
  415486:	dec    eax
  415487:	sbb    al,BYTE PTR [esp+edx*2]
  41548a:	mov    ebx,0xadb313a5
  41548f:	mov    al,al
  415491:	mov    esi,0xe37e8ca7
  415496:	sbb    eax,0x734c103
  41549b:	popf   
  41549c:	or     ebp,DWORD PTR [esi]
  41549e:	repnz ss stc 
  4154a1:	in     al,0x6
  4154a3:	push   0x2a
  4154a5:	jmp    0x4154ad
  4154a7:	fld    st(3)
  4154a9:	xor    cl,BYTE PTR [ebp+ebp*4-0x1608df9]
  4154b0:	pop    ss
  4154b1:	(bad)  [ecx+ebp*8]
  4154b4:	xor    edi,esi
  4154b6:	icebp  
  4154b7:	(bad)  
  4154b8:	clc    
  4154b9:	mov    ah,0x6
  4154bb:	out    0x19,al
  4154bd:	not    DWORD PTR [edi+0x46fefff4]
  4154c3:	out    0x86,eax
  4154c5:	sub    eax,0x2d8ece03
  4154ca:	(bad)  
  4154cc:	ret    
  4154cd:	inc    edi
  4154ce:	or     al,0x17
  4154d0:	mov    ds:0x43dcb6e0,eax
  4154d5:	repz add DWORD PTR [ebp+0xc],0xfffffff3
  4154da:	ret    
  4154db:	cmp    al,0x8f
  4154dd:	add    BYTE PTR [eax],al
  4154df:	add    BYTE PTR [edi-0x5be4747b],bl
  4154e5:	xchg   edi,eax
  4154e6:	out    0x90,eax
  4154e8:	xor    BYTE PTR [ebx-0x718f6ec9],bl
  4154ee:	test   DWORD PTR [edx+0x80f368e],esp
  4154f4:	rol    DWORD PTR [esi],cl
  4154f6:	out    0x2b,eax
  4154f8:	jle    0x415491
  4154fa:	out    0x3,eax
  4154fc:	jbe    0x41550f
  4154fe:	out    dx,eax
  4154ff:	retf   0x9ab0
  415502:	rol    DWORD PTR [ebx+esi*8],cl
  415505:	push   es
  415506:	push   esi
  415507:	clc    
  415508:	sub    cl,dh
  41550a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41550b:	add    esi,DWORD PTR [eax-0x3a]
  41550e:	mov    esp,0x13817a10
  415513:	mov    eax,ds:0x41009746
  415518:	cmp    al,0x97
  41551a:	std    
  41551b:	jmp    0x297359a5
  415520:	aas    
  415521:	les    eax,FWORD PTR [ecx+ebp*8]
  415524:	add    DWORD PTR [ecx-0x40],edx
  415527:	mov    eax,ds:0x95480d04
  41552c:	in     eax,dx
  41552d:	aad    0xbf
  41552f:	sub    bl,dh
  415531:	icebp  
  415532:	push   edi
  415533:	sub    dl,dh
  415535:	add    al,0x58
  415537:	sub    ch,BYTE PTR [eax+0x6de2744e]
  41553d:	scas   al,BYTE PTR es:[edi]
  41553e:	adc    ebx,DWORD PTR [ebp-0xa]
  415541:	fdivr  DWORD PTR [edi+0xaa]
  415547:	aas    
  415548:	or     ecx,eax
  41554a:	cdq    
  41554b:	lock (bad) 
  41554d:	or     eax,0x48032f97
  415552:	cmp    eax,0xea743efd
  415557:	lahf   
  415558:	push   esi
  415559:	rol    DWORD PTR [ebx-0xd],0x2e
  41555d:	rol    DWORD PTR [ebx-0x41],0x3e
  415561:	shl    esi,0x4b
  415564:	pop    es
  415565:	dec    eax
  415566:	xor    DWORD PTR [ebx],ecx
  415568:	add    eax,DWORD PTR [ecx+0x11aa481]
  41556e:	fidiv  DWORD PTR [eax-0x371a9538]
  415574:	(bad)  
  415575:	push   0xffffffd9
  415577:	enter  0x53c7,0x62
  41557b:	inc    ebx
  41557c:	inc    esi
  41557d:	mov    DWORD PTR [edi+0x66fdce47],esp
  415583:	xchg   edx,eax
  415584:	aaa    
  415585:	push   0xffffffe9
  415587:	xchg   ebx,eax
  415588:	sbb    cl,BYTE PTR [eax]
  41558a:	pusha  
  41558b:	mov    ah,0x92
  41558d:	std    
  41558e:	hlt    
  41558f:	cmp    al,0xfc
  415591:	aas    
  415592:	add    BYTE PTR [edx-0x75],bl
  415595:	les    ecx,FWORD PTR [edi+edx*8]
  415598:	dec    ebp
  415599:	cld    
  41559a:	push   eax
  41559b:	add    eax,0x7cff07fe
  4155a0:	push   cs
  4155a1:	sti    
  4155a2:	adc    eax,0x3d901a
  4155a7:	std    
  4155a8:	push   edx
  4155a9:	pop    ss
  4155aa:	rol    BYTE PTR [eax],0x0
  4155ad:	add    BYTE PTR [edx-0x3f],cl
  4155b0:	ret    0xa04
  4155b3:	fld    QWORD PTR [esi-0x397c9414]
  4155b9:	call   0x3cbd67
  4155be:	pop    edx
  4155bf:	in     al,0xff
  4155c1:	(bad)  
  4155c2:	jg     0x4155c5
  4155c4:	test   DWORD PTR [ebp-0x2a],eax
  4155c7:	adc    WORD PTR [esp+ebx*8],si
  4155cb:	dec    ecx
  4155cc:	add    BYTE PTR [ebx+0x4589058e],al
  4155d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d3:	fsqrt  
  4155d5:	jne    0x415599
  4155d7:	data16 jbe 0x4155de
  4155da:	test   DWORD PTR [ecx+edi*4-0xcf4f5eb],ebx
  4155e1:	fsub   DWORD PTR [ecx+0x58c940c9]
  4155e7:	or     eax,0x9efeff00
  4155ec:	add    edi,edi
  4155ee:	cli    
  4155ef:	add    bh,bl
  4155f1:	jo     0x415581
  4155f3:	adc    ax,sp
  4155f6:	scas   eax,DWORD PTR es:[edi]
  4155f7:	dec    ecx
  4155f8:	add    bh,dh
  4155fa:	push   edx
  4155fb:	xchg   edx,eax
  4155fc:	mov    ebp,0xd4840
  415601:	push   ebp
  415602:	adc    DWORD PTR [esi+0x7f],esp
  415605:	in     al,dx
  415606:	or     bl,ah
  415608:	push   ebp
  415609:	push   edi
  41560a:	loope  0x415684
  41560c:	xchg   eax,ebx
  41560e:	repz inc edi
  415610:	in     al,0xfd
  415612:	add    BYTE PTR [eax],al
  415614:	add    BYTE PTR [esp+eax*2-0x7b],dl
  415618:	rol    bh,0x95
  41561b:	sub    esi,DWORD PTR [ecx]
  41561d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41561e:	aaa    
  41561f:	cmp    dh,bh
  415621:	cmp    al,0xdc
  415623:	test   al,al
  415625:	mov    edi,0xf0b50f09
  41562a:	and    BYTE PTR [ecx+0x2baa9e02],bl
  415630:	adc    BYTE PTR [ebx+0x2a310f08],bh
  415636:	and    BYTE PTR [ecx-0x3dcd03eb],bl
  41563c:	mov    esi,DWORD PTR [edx-0x201f7e6c]
  415642:	outs   dx,DWORD PTR ds:[esi]
  415643:	xor    al,0xfd
  415645:	jge    0x4155f2
  415647:	mov    al,ds:0x4193cb13
  41564c:	add    BYTE PTR [esi+0x5e],ch
  41564f:	sbb    BYTE PTR [edx],ch
  415651:	push   0x3315f7fb
  415656:	sahf   
  415657:	sahf   
  415658:	aad    0x88
  41565a:	xchg   ecx,eax
  41565b:	out    0xff,al
  41565d:	les    edx,FWORD PTR [edi]
  41565f:	inc    edi
  415660:	cld    
  415661:	clc    
  415662:	pusha  
  415663:	sbb    BYTE PTR [esi],cl
  415665:	retf   
  415666:	cmc    
  415667:	popf   
  415668:	std    
  415669:	lods   al,BYTE PTR ds:[esi]
  41566a:	ins    DWORD PTR es:[edi],dx
  41566b:	pop    ss
  41566c:	cld    
  41566d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41566e:	fwait
  41566f:	in     eax,0x15
  415671:	xor    ebx,DWORD PTR [esi+0x60d8d59e]
  415677:	pop    ss
  415678:	xor    al,BYTE PTR [eax]
  41567a:	add    BYTE PTR [eax],al
  41567c:	cwde   
  41567d:	cwde   
  41567e:	push   ecx
  41567f:	call   FWORD PTR [ecx-0x5cbc6c3c]
  415685:	scas   al,BYTE PTR es:[edi]
  415686:	sbb    BYTE PTR ds:0x8b099b74,dl
  41568c:	mov    dh,0x6
  41568e:	aaa    
  41568f:	xor    al,0x7a
  415691:	dec    edx
  415692:	jmp    0x4156bd
  415694:	add    ebx,DWORD PTR [edi+0x6f302b1]
  41569a:	fs (bad) 
  41569c:	(bad)  
  41569d:	test   eax,0x12720f52
  4156a2:	inc    ebx
  4156a3:	add    al,0xc7
  4156a5:	lods   eax,DWORD PTR ds:[esi]
  4156a6:	sbb    DWORD PTR ss:[edi-0x6c],ecx
  4156aa:	aam    0xe7
  4156ac:	push   es
  4156ad:	inc    edi
  4156ae:	out    0xd1,eax
  4156b0:	fs xor al,0xbd
  4156b3:	cmp    dh,BYTE PTR [ecx+ecx*8]
  4156b6:	fild   WORD PTR [ebx]
  4156b8:	mov    ebp,0x4cd3177f
  4156bd:	xchg   DWORD PTR [ebp-0x11c2fbf0],eax
  4156c3:	js     0x4156f8
  4156c5:	sub    BYTE PTR [edi-0x62],0x72
  4156c9:	lods   al,BYTE PTR ds:[esi]
  4156ca:	in     al,0x90
  4156cc:	outs   dx,BYTE PTR ds:[esi]
  4156cd:	or     bh,cl
  4156cf:	sub    ch,al
  4156d1:	xchg   ebx,eax
  4156d2:	fiadd  WORD PTR [edi-0x53dce54d]
  4156d8:	xchg   ecx,eax
  4156d9:	xchg   ecx,eax
  4156da:	into   
  4156db:	sahf   
  4156dc:	ja     0x4156a4
  4156de:	cmp    eax,DWORD PTR [ebx+0x0]
  4156e1:	add    BYTE PTR [eax],al
  4156e3:	neg    BYTE PTR [ebx-0x16]
  4156e6:	cmp    BYTE PTR [ebx+0x49093c08],0xf7
  4156ed:	push   cs
  4156ee:	stos   DWORD PTR es:[edi],eax
  4156ef:	std    
  4156f0:	xlat   BYTE PTR ds:[ebx]
  4156f1:	scas   eax,DWORD PTR es:[edi]
  4156f2:	sub    BYTE PTR [ebx+0x5c78edfb],0x81
  4156f9:	sub    BYTE PTR [edi+0x33eba672],bl
  4156ff:	and    dl,BYTE PTR [ebp+edi*8+0x72f98607]
  415706:	clc    
  415707:	mov    esp,0xb06c0006
  41570c:	pop    ss
  41570d:	pop    ss
  41570e:	imul   ecx,DWORD PTR [esi],0xf5dbff00
  415714:	and    BYTE PTR [esi+ebx*2],dl
  415717:	push   es
  415718:	or     edi,ebp
  41571a:	cld    
  41571b:	sub    bh,dh
  41571d:	aas    
  41571e:	jmp    0xedb51d9e
  415723:	mov    al,ds:0x5dd7ea93
  415728:	not    DWORD PTR [ebx]
  41572a:	fbstp  TBYTE PTR [eax+0x58318906]
  415730:	jg     0x41572d
  415732:	test   DWORD PTR es:[ecx],edi
  415735:	std    
  415736:	hlt    
  415737:	adc    al,0xf9
  415739:	aas    
  41573a:	jmp    0xaf9eaa81
  41573f:	xor    DWORD PTR [edi],esi
  415741:	mov    DWORD PTR ds:0xe990a26f,edx
  415747:	add    BYTE PTR [eax],al
  415749:	add    al,dh
  41574b:	push   es
  41574c:	push   ecx
  41574d:	adc    esi,0x7f
  415750:	xor    DWORD PTR [edi-0x73],0xffffff94
  415754:	std    
  415755:	push   ebx
  415756:	out    dx,eax
  415757:	ss call 0xfdd4099e
  41575d:	bound  ebp,QWORD PTR [edi+edi*8]
  415760:	mov    DWORD PTR [ecx],ebp
  415762:	jecxz  0x4156eb
  415764:	(bad)  
  415765:	cmc    
  415766:	cwde   
  415767:	(bad)  
  415768:	sti    
  415769:	mov    esi,0x6c87295e
  41576e:	fist   DWORD PTR [ebx-0x9205103]
  415774:	and    al,0xe9
  415776:	lock dec esi
  415778:	xor    BYTE PTR [edi+esi*8],dl
  41577b:	push   es
  41577c:	call   0xfdd33d6c
  415781:	push   0xffffffd4
  415783:	call   0x66f8:0x4a030000
  41578a:	add    DWORD PTR [edx-0x8],ecx
  41578d:	dec    bx
  41578f:	retf   
  415790:	or     BYTE PTR [esi-0x2d],ah
  415793:	mov    DWORD PTR [esi-0x1],esi
  415796:	int    0x73
  415798:	xchg   DWORD PTR [ebp+0x62],eax
  41579b:	sbb    DWORD PTR [ecx-0x48c428c],0xfb7340e8
  4157a5:	call   esi
  4157a7:	retf   0x3571
  4157aa:	std    
  4157ab:	cdq    
  4157ac:	adc    DWORD PTR [esi],edx
  4157ae:	add    BYTE PTR [eax],al
  4157b0:	add    BYTE PTR [edx-0xabfc6fa],cl
  4157b6:	or     al,BYTE PTR [eax]
  4157b8:	jne    0x4157f5
  4157ba:	jae    0x4157fd
  4157bc:	clc    
  4157bd:	mov    esi,ecx
  4157bf:	div    DWORD PTR [eax]
  4157c1:	ja     0x4157c9
  4157c3:	add    BYTE PTR [esi+0x15],dh
  4157c6:	retf   
  4157c7:	inc    ecx
  4157c8:	clc    
  4157c9:	sub    ch,BYTE PTR [ebx+0x48fdfffd]
  4157cf:	hlt    
  4157d0:	mov    eax,0x442a
  4157d5:	je     0x415783
  4157d7:	inc    edx
  4157d8:	hlt    
  4157d9:	dec    eax
  4157da:	ss xor al,al
  4157dd:	xor    DWORD PTR [esi+0x35ca04c2],edi
  4157e3:	std    
  4157e4:	jmp    0xc541:0x574ed4a5
  4157eb:	call   0xfbb3d764
  4157f0:	xor    esp,DWORD PTR [ecx-0x2a]
  4157f3:	dec    esi
  4157f4:	(bad)  
  4157f5:	jmp    0x4157f5
  4157f7:	test   BYTE PTR [esi+esi*4-0x67],al
  4157fb:	cld    
  4157fc:	adc    eax,0x3d984a
  415801:	repz and al,0x99
  415804:	or     DWORD PTR [eax+eax*4-0x12dfe0eb],0x8be6fd32
  41580f:	idiv   BYTE PTR [edi]
  415811:	repz icebp 
  415813:	sub    DWORD PTR [eax+eax*1],edx
  415816:	add    BYTE PTR [eax],al
  415818:	pop    ebx
  415819:	lea    esp,[eax]
  41581b:	std    
  41581c:	fs in  al,0xbe
  41581f:	je     0x415824
  415821:	pop    ecx
  415822:	mov    al,dh
  415824:	dec    ebx
  415825:	cbw    
  415827:	std    
  415828:	dec    esp
  415829:	and    al,0x91
  41582b:	jmp    0xea02e51d
  415830:	mov    dh,0x8c
  415832:	xchg   ebx,eax
  415833:	cmp    DWORD PTR [eax+0x53],eax
  415836:	icebp  
  415837:	imul   edx,eax,0x274ea980
  41583d:	call   0x7b74dcdd
  415842:	cli    
  415843:	mov    BYTE PTR ds:0xfb69eb04,ch
  415849:	push   esp
  41584a:	daa    
  41584b:	add    bl,BYTE PTR [eax+ecx*1+0x5fe6e7f6]
  415852:	add    DWORD PTR [ebp-0xc],edx
  415855:	mov    cl,0xfd
  415857:	adc    eax,0x10a89e33
  41585c:	in     al,0x93
  41585e:	in     eax,dx
  41585f:	adc    eax,0xd88e9e33
  415864:	push   0x79ff2ba0
  415869:	jo     0x415804
  41586b:	adc    BYTE PTR [eax],ah
  41586d:	leave  
  41586e:	out    dx,eax
  41586f:	and    esp,ebp
  415871:	fld    QWORD PTR [ebx]
  415873:	xor    DWORD PTR [ebx+0x4a5938f8],esi
  415879:	pop    ebp
  41587a:	add    BYTE PTR cs:[eax],al
  41587d:	add    BYTE PTR [eax],al
  41587f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415880:	pop    es
  415881:	sbb    esp,eax
  415883:	call   0xe9216c17
  415888:	(bad)  
  415889:	sbb    BYTE PTR [eax],al
  41588b:	mov    ?,edx
  41588d:	out    dx,al
  41588e:	icebp  
  41588f:	les    eax,FWORD PTR [esi]
  415891:	test   eax,0x7239f30c
  415896:	test   al,0x72
  415898:	mov    ds:0x37c536c3,eax
  41589d:	bound  ebx,QWORD PTR [edx+edi*2+0x4abe7296]
  4158a4:	aaa    
  4158a5:	jb     0x4158a9
  4158a7:	mov    esi,0x4eca6233
  4158ac:	aaa    
  4158ad:	jecxz  0x41582f
  4158af:	xor    edx,DWORD PTR [ecx]
  4158b1:	in     eax,dx
  4158b2:	push   es
  4158b3:	sbb    ebx,esp
  4158b5:	ds scas eax,DWORD PTR es:[edi]
  4158b7:	clc    
  4158b8:	sbb    bl,BYTE PTR [edi-0x2b04ff66]
  4158be:	inc    ebx
  4158bf:	repz rcr ecx,1
  4158c2:	loop   0x4158e0
  4158c4:	nop
  4158c5:	xchg   esp,eax
  4158c6:	inc    ecx
  4158c7:	mov    edx,esi
  4158c9:	fwait
  4158ca:	add    esi,ebx
  4158cc:	and    DWORD PTR [edi+ebp*4+0xbac7ba3],0xe90ee589
  4158d7:	cmc    
  4158d8:	(bad)  
  4158d9:	out    0x80,eax
  4158db:	mov    bl,0x19
  4158dd:	mov    esi,0x7bb3091
  4158e2:	adc    BYTE PTR [eax],al
  4158e4:	add    BYTE PTR [eax],al
  4158e6:	lock int 0x23
  4158e9:	test   al,0x60
  4158eb:	(bad)  
  4158ed:	inc    eax
  4158ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ef:	add    eax,0x11720253
  4158f4:	lahf   
  4158f5:	add    eax,DWORD PTR [eax-0x1a]
  4158f8:	arpl   WORD PTR [edx+0x79006336],bx
  4158fe:	div    DWORD PTR [ecx]
  415900:	pop    esi
  415901:	adc    dh,BYTE PTR [esi-0x3716fb3c]
  415907:	adc    esp,DWORD PTR ds:0x1391f0e9
  41590d:	int    0x82
  41590f:	iret   
  415910:	(bad)  
  415911:	fidiv  DWORD PTR [eax-0x1c791563]
  415917:	mov    ds:0x135978e9,al
  41591c:	fadd   DWORD PTR [edx+0x7d893394]
  415922:	pop    ds
  415923:	jle    0x4158e4
  415925:	push   ecx
  415926:	mov    dl,0x92
  415928:	std    
  415929:	pop    esi
  41592a:	addr16 inc ebx
  41592c:	cld    
  41592d:	bound  esi,QWORD PTR [ebx+0x4531f4fe]
  415933:	dec    edi
  415934:	mov    ebx,DWORD PTR [esp+eiz*2+0x5999c1e5]
  41593b:	adc    ecx,DWORD PTR [eax]
  41593d:	ret    
  41593e:	lock xchg ecx,eax
  415940:	jae    0x41591b
  415942:	mov    DWORD PTR [ebx],edx
  415944:	or     al,0x26
  415946:	pop    es
  415947:	or     edi,ebp
  415949:	hlt    
  41594a:	add    BYTE PTR [eax],al
  41594c:	add    BYTE PTR [eax+0x3fe93ff3],bh
  415952:	les    ecx,FWORD PTR [ecx+ebp*8]
  415955:	(bad)  
  415956:	push   es
  415957:	std    
  415958:	jge    0x415976
  41595a:	sti    
  41595b:	cld    
  41595c:	jne    0x415972
  41595e:	sti    
  41595f:	cld    
  415960:	js     0x41594e
  415962:	mov    edx,DWORD PTR [ebx]
  415964:	leave  
  415965:	loop   0x415935
  415967:	jmp    FWORD PTR [edx+0x725306ef]
  41596d:	mov    ecx,DWORD PTR [eax+0x350605ec]
  415973:	push   ebp
  415974:	bound  esp,QWORD PTR [edi-0x80]
  415977:	out    dx,eax
  415978:	add    BYTE PTR [ecx+0x4d],al
  41597b:	out    0x4c,eax
  41597d:	inc    ecx
  41597e:	cdq    
  41597f:	mov    ch,0x0
  415981:	xchg   edx,eax
  415982:	or     al,BYTE PTR [eax]
  415984:	cmp    esp,DWORD PTR [edx+0x0]
  415987:	dec    esi
  415988:	(bad)  
  415989:	fcmovbe st,st(3)
  41598b:	xchg   dh,cl
  41598d:	jne    0x415964
  41598f:	or     eax,DWORD PTR [ebp+0x305f15a]
  415995:	inc    edx
  415996:	pushf  
  415997:	cmc    
  415998:	jmp    0x41593f
  41599a:	(bad)  
  41599b:	cmp    edi,edi
  41599d:	lahf   
  41599e:	sahf   
  41599f:	adc    eax,DWORD PTR [eax+0x5a]
  4159a2:	mov    ch,0x30
  4159a4:	daa    
  4159a5:	pop    edx
  4159a6:	or     dh,BYTE PTR [ecx+0x2d]
  4159a9:	aad    0xfd
  4159ab:	pop    es
  4159ac:	lea    ecx,[edi+0x8b505e]
  4159b2:	add    BYTE PTR [eax],al
  4159b4:	lahf   
  4159b5:	push   es
  4159b6:	push   0x2
  4159b8:	mov    dl,0xdd
  4159ba:	(bad)  
  4159bb:	dec    DWORD PTR [edx+0xd]
  4159be:	shl    BYTE PTR [ebp+0x52],0x78
  4159c2:	inc    ecx
  4159c3:	aam    0x18
  4159c5:	inc    BYTE PTR [eax]
  4159c7:	cmp    DWORD PTR [edi+0x56],ecx
  4159ca:	jno    0x4159dd
  4159cc:	(bad)  
  4159cd:	outs   dx,DWORD PTR ds:[esi]
  4159ce:	jnp    0x415980
  4159d0:	mov    edx,0x415e5b09
  4159d5:	rol    edx,0x8
  4159d8:	sbb    dh,BYTE PTR [ebp+edi*4+0x716effeb]
  4159df:	fdivr  st(5),st
  4159e1:	pushf  
  4159e2:	and    DWORD PTR [esi],edx
  4159e4:	call   0xe8ca:0x51f1e709
  4159eb:	mov    cl,dl
  4159ed:	outs   dx,BYTE PTR ds:[esi]
  4159ee:	sti    
  4159ef:	push   eax
  4159f0:	mov    ch,0xfd
  4159f2:	and    ecx,DWORD PTR [eax]
  4159f4:	repz dec ecx
  4159f6:	add    al,0xfd
  4159f8:	aas    
  4159f9:	add    al,0xfc
  4159fb:	cld    
  4159fc:	inc    edi
  4159fd:	cld    
  4159fe:	sti    
  4159ff:	cld    
  415a00:	inc    edx
  415a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a02:	cwde   
  415a03:	adc    esi,edi
  415a05:	lods   eax,DWORD PTR ds:[esi]
  415a06:	inc    ecx
  415a07:	add    al,ah
  415a09:	data16 test al,bh
  415a0c:	pushf  
  415a0d:	xchg   esp,eax
  415a0e:	outs   dx,BYTE PTR ds:[esi]
  415a0f:	shl    BYTE PTR [ecx+0x7853019b],0x83
  415a16:	test   ah,ch
  415a18:	add    BYTE PTR [eax],al
  415a1a:	add    bh,dh
  415a1c:	and    BYTE PTR [esi],bl
  415a1e:	cld    
  415a1f:	repz lock cs std 
  415a23:	(bad)  
  415a24:	xchg   edi,eax
  415a25:	mov    WORD PTR [ebx],?
  415a27:	push   edi
  415a28:	stos   BYTE PTR es:[edi],al
  415a29:	inc    ecx
  415a2a:	add    BYTE PTR [ebp+edx*4+0x9],ah
  415a2e:	mov    DWORD PTR [ebx],edi
  415a30:	and    al,0xf
  415a32:	add    al,0x54
  415a34:	aam    0x7d
  415a36:	rol    bh,0xa7
  415a39:	test   cl,cl
  415a3b:	inc    esp
  415a3c:	inc    esi
  415a3d:	mov    al,BYTE PTR [eax]
  415a3f:	repz lahf 
  415a41:	mov    WORD PTR [esi-0x15],cs
  415a44:	lar    eax,WORD PTR [edi-0x26823442]
  415a4b:	lahf   
  415a4c:	mov    ds:0xe51b5b8a,al
  415a51:	ror    BYTE PTR ds:0x4389df5d,0xfb
  415a58:	hlt    
  415a59:	or     eax,0x8d627610
  415a5e:	push   0xfffffff3
  415a60:	outs   dx,DWORD PTR ds:[esi]
  415a61:	cwde   
  415a62:	jae    0x415a4f
  415a64:	mov    ebx,gs
  415a66:	mov    bl,0x1
  415a68:	pop    esi
  415a69:	add    DWORD PTR [ecx+0x73bc23cb],ecx
  415a6f:	inc    DWORD PTR [esi]
  415a71:	out    0x11,al
  415a73:	out    0x7f,eax
  415a75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a76:	lods   al,BYTE PTR ds:[esi]
  415a77:	fs nop
  415a79:	(bad)  
  415a7a:	xchg   edi,eax
  415a7b:	outs   dx,DWORD PTR ds:[esi]
  415a7c:	(bad)  
  415a7d:	push   ebx
  415a7e:	or     eax,0x6a000000
  415a83:	inc    edx
  415a84:	repz (bad) 
  415a87:	adc    bl,BYTE PTR [edx-0x5d782e55]
  415a8d:	xchg   edi,eax
  415a8e:	call   0xf013:0x9c9b69ea
  415a95:	mov    esi,0x38a8b30
  415a9a:	repz push es
  415a9c:	add    BYTE PTR [edi],0x4
  415a9f:	nop
  415aa0:	jmp    0xfc484da9
  415aa5:	(bad)  
  415aa6:	scas   eax,DWORD PTR es:[edi]
  415aa7:	inc    edx
  415aa8:	jnp    0x415af2
  415aaa:	push   ss
  415aab:	pop    es
  415aac:	out    0x96,eax
  415aae:	(bad)  
  415ab0:	ins    DWORD PTR es:[edi],dx
  415ab1:	push   cs
  415ab2:	jmp    0x415a3f
  415ab4:	(bad)  
  415ab6:	push   edi
  415ab7:	mov    ah,0x64
  415ab9:	(bad)  
  415aba:	mov    DWORD PTR [edi],0x8846cb6a
  415ac0:	int3   
  415ac1:	xchg   edi,eax
  415ac2:	repz adc dh,al
  415ac5:	xchg   esi,eax
  415ac6:	ror    BYTE PTR [edx-0xb2f0ec2],0xa6
  415acd:	add    eax,esi
  415acf:	jg     0x415afb
  415ad1:	cmp    esi,DWORD PTR [ecx+ecx*8]
  415ad4:	repz add eax,eax
  415ad7:	jg     0x415ae4
  415ad9:	sbb    DWORD PTR [edi],0xfffffffb
  415adc:	fld    st(3)
  415ade:	mov    ds:0xeb495c36,eax
  415ae3:	xor    eax,0x3397
  415ae8:	add    BYTE PTR [ecx-0x18be9406],cl
  415aee:	add    BYTE PTR ss:[ecx+0x51fd8be4],al
  415af5:	test   BYTE PTR [edi],dl
  415af7:	or     BYTE PTR [esi-0x17006ccd],ch
  415afd:	lock push es
  415aff:	lds    ebp,FWORD PTR [edi+eiz*2]
  415b02:	mul    BYTE PTR [ecx+ebp*8]
  415b05:	lock rol DWORD PTR [ebx-0x3b],0x68
  415b0a:	cmc    
  415b0b:	(bad)  
  415b0c:	call   0xdd155296
  415b11:	xor    BYTE PTR [edi],al
  415b13:	cmc    
  415b14:	xchg   ecx,eax
  415b15:	cdq    
  415b16:	dec    ebx
  415b17:	inc    eax
  415b18:	mov    al,0xb2
  415b1a:	add    al,BYTE PTR [eax]
  415b1c:	xor    al,0x78
  415b1e:	call   0x5cbf:0xd5f3034f
  415b25:	sub    ecx,DWORD PTR [ebx+0x20bf294f]
  415b2b:	push   es
  415b2c:	jle    0x415b31
  415b2e:	inc    DWORD PTR [esi+0x13898b2c]
  415b34:	jge    0x415b99
  415b36:	retf   
  415b37:	call   FWORD PTR [ebp-0x68]
  415b3a:	in     eax,dx
  415b3b:	mov    edi,0x4c83fa9
  415b40:	jmp    0x32729346
  415b45:	push   cs
  415b46:	inc    esi
  415b47:	add    BYTE PTR [edi+eax*8],0xc7
  415b4b:	inc    ecx
  415b4c:	jmp    0xf0415b51
  415b51:	xor    DWORD PTR [ebx-0x4],esi
  415b54:	mov    esi,0xf0aac3ae
  415b59:	xor    al,0xfd
  415b5b:	cld    
  415b5c:	dec    esp
  415b5d:	clc    
  415b5e:	aas    
  415b5f:	jmp    0x2ce92ad4
  415b64:	mov    cl,0x6
  415b66:	add    BYTE PTR [edi+edi*8-0xaff865e],dl
  415b6d:	jo     0x415b6a
  415b6f:	test   BYTE PTR [edx],bl
  415b71:	cli    
  415b72:	(bad)  
  415b74:	xlat   BYTE PTR ds:[ebx]
  415b75:	and    al,cl
  415b77:	inc    ebx
  415b78:	retf   0x3620
  415b7b:	inc    ecx
  415b7c:	retf   0x197e
  415b7f:	test   al,0x97
  415b81:	dec    eax
  415b82:	add    BYTE PTR [esi-0x63],dl
  415b85:	call   0x448a:0x30a12ed
  415b8c:	out    0x96,al
  415b8e:	in     eax,0xce
  415b90:	mov    bl,0x74
  415b92:	sti    
  415b93:	mov    esp,DWORD PTR [edi-0x75bfee92]
  415b99:	loopne 0x415ba0
  415b9b:	mov    edx,DWORD PTR [edx-0x28]
  415b9e:	push   edx
  415b9f:	inc    DWORD PTR [ebp+ebx*8+0xc]
  415ba3:	push   0xffffff98
  415ba5:	fild   DWORD PTR [esi-0x78a69218]
  415bab:	clc    
  415bac:	or     DWORD PTR [edx-0x5],esi
  415baf:	je     0x415c08
  415bb1:	xchg   ebx,edi
  415bb3:	inc    DWORD PTR [eax]
  415bb5:	add    BYTE PTR [eax],al
  415bb7:	or     BYTE PTR [bp+si],dh
  415bba:	fcmovnbe st,st(1)
  415bbc:	mov    ecx,0x68a1619
  415bc1:	push   ecx
  415bc2:	inc    DWORD PTR [esp+ebx*8]
  415bc5:	cli    
  415bc6:	(bad)  
  415bc7:	jge    0x415b9d
  415bc9:	pop    eax
  415bca:	mov    cl,BYTE PTR [ecx]
  415bcc:	rol    cl,1
  415bce:	add    al,0x4a
  415bd0:	fld    DWORD PTR [esi+0x145e99ec]
  415bd6:	push   ebx
  415bd7:	sub    DWORD PTR [edi+0x56],ecx
  415bda:	cmp    BYTE PTR [edi],ch
  415bdc:	push   ds
  415bdd:	rol    DWORD PTR [ebx+0xa],0xf9
  415be1:	xor    BYTE PTR [esi+0x3f49b2],bh
  415be7:	repz dec ecx
  415be9:	xchg   esp,eax
  415bea:	adc    ecx,DWORD PTR [edi]
  415bec:	mov    es,WORD PTR [ecx+0x0]
  415bef:	mov    ebx,0x30c369a2
  415bf4:	mov    al,ds:0x8ddb1a0e
  415bf9:	mov    edi,ebp
  415bfb:	fsub   QWORD PTR [ebx]
  415bfd:	les    esi,FWORD PTR [edx+eax*1+0x59]
  415c01:	(bad)  
  415c02:	stos   DWORD PTR es:[edi],eax
  415c03:	mov    dh,0xdc
  415c05:	add    ebp,DWORD PTR [edx-0x39fc2103]
  415c0b:	test   BYTE PTR [edi-0x610cbe42],0x2b
  415c12:	std    
  415c13:	push   es
  415c14:	push   eax
  415c15:	out    dx,eax
  415c16:	aas    
  415c17:	repz and eax,0x83e
  415c1d:	add    BYTE PTR [eax+0x46],al
  415c20:	add    ch,al
  415c22:	xor    DWORD PTR [edi-0x6c],esp
  415c25:	std    
  415c26:	and    ebp,DWORD PTR [ecx-0x12]
  415c29:	neg    esi
  415c2b:	fild   WORD PTR [ebx]
  415c2d:	xchg   DWORD PTR [esi],esi
  415c2f:	js     0x415bb1
  415c31:	clc    
  415c32:	je     0x415bbe
  415c34:	std    
  415c35:	xor    BYTE PTR [ebx],dh
  415c37:	je     0x415c52
  415c39:	mov    DWORD PTR [esi],ebx
  415c3b:	ins    BYTE PTR es:[edi],dx
  415c3c:	out    dx,al
  415c3d:	aas    
  415c3e:	repz lock cs push ecx
  415c42:	push   dx
  415c44:	xchg   ebp,eax
  415c45:	dec    edi
  415c46:	mov    al,ds:0xa2ec461a
  415c4b:	dec    esp
  415c4c:	xor    BYTE PTR [ebp+0x48019fe5],bh
  415c52:	pushf  
  415c53:	outs   dx,DWORD PTR ds:[esi]
  415c54:	mov    bl,BYTE PTR [ebx-0x5]
  415c57:	push   ss
  415c58:	ss cld 
  415c5a:	and    al,0xe9
  415c5c:	jg     0x415c56
  415c5e:	sbb    al,0x52
  415c60:	inc    eax
  415c61:	std    
  415c62:	inc    BYTE PTR [esi]
  415c64:	sti    
  415c65:	in     eax,dx
  415c66:	int3   
  415c67:	push   es
  415c68:	fdivr  st(5),st
  415c6a:	iret   
  415c6b:	push   es
  415c6c:	out    0xe,eax
  415c6e:	lds    edi,FWORD PTR [ebp-0x5c]
  415c71:	xchg   edi,eax
  415c72:	mov    edx,0xd4e77bc5
  415c77:	fistp  WORD PTR [ebp-0x5381196c]
  415c7d:	or     ebx,DWORD PTR [edx]
  415c7f:	les    esi,FWORD PTR [ebx-0x20]
  415c82:	add    BYTE PTR [eax],al
  415c84:	add    BYTE PTR [ebx+0x34],al
  415c87:	je     0x415cd2
  415c89:	iret   
  415c8a:	aaa    
  415c8b:	ficomp WORD PTR [ecx]
  415c8d:	(bad)  
  415c8e:	mov    BYTE PTR [esp+edi*8+0x23],bl
  415c92:	xor    al,0x36
  415c94:	xchg   ebx,eax
  415c95:	inc    eax
  415c96:	pop    esi
  415c98:	mov    edx,0xff33c770
  415c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c9e:	adc    bl,bh
  415ca0:	fwait
  415ca1:	out    0x27,eax
  415ca3:	scas   al,BYTE PTR es:[edi]
  415ca4:	xchg   ebx,eax
  415ca5:	ins    BYTE PTR es:[edi],dx
  415ca6:	sub    ch,bh
  415ca8:	xchg   edx,eax
  415ca9:	add    BYTE PTR [edi-0xf170662],cl
  415caf:	es add al,0x6a
  415cb2:	inc    edx
  415cb3:	fbstp  TBYTE PTR [edx]
  415cb5:	adc    eax,0xf7c6b02c
  415cba:	push   es
  415cbb:	adc    al,0x7f
  415cbd:	push   edi
  415cbe:	test   BYTE PTR [ebx+0x1630c200],al
  415cc4:	(bad)  
  415cc5:	xchg   esp,eax
  415cc6:	lahf   
  415cc7:	mov    BYTE PTR [esi+ecx*2+0x4b296a88],cl
  415cce:	pop    es
  415ccf:	bound  ebp,QWORD PTR [esi+esi*1-0x14fbacbe]
  415cd6:	push   es
  415cd7:	out    0xc9,eax
  415cd9:	mov    al,0x87
  415cdb:	out    0x92,eax
  415cdd:	mov    al,ds:0xfa640092
  415ce2:	mov    gs,eax
  415ce4:	mov    ah,0xe2
  415ce6:	mov    ebp,edi
  415ce8:	jb     0x415cea
  415cea:	add    BYTE PTR [eax],al
  415cec:	loop   0x415c7c
  415cee:	test   BYTE PTR [ecx],ch
  415cf0:	jmp    0x415cd6
  415cf2:	mov    ch,BYTE PTR [esp+eiz*2-0xf7caac9]
  415cf9:	sbb    al,0x2e
  415cfb:	call   0x730:0xd9ebf381
  415d02:	mov    ecx,edi
  415d04:	jne    0x415c8e
  415d06:	ins    DWORD PTR es:[edi],dx
  415d07:	je     0x415cfb
  415d09:	mov    BYTE PTR [ebx-0x1a],al
  415d0c:	jo     0x415d19
  415d0e:	std    
  415d0f:	jmp    0xfede:0xeee9b8de
  415d16:	pop    ebp
  415d17:	fs pop edx
  415d19:	adc    cl,BYTE PTR [eax]
  415d1b:	push   ds
  415d1c:	(bad)
  415d20:	adc    ebp,0xf3801ffc
  415d26:	and    ebx,ebx
  415d28:	xor    BYTE PTR [edi],al
  415d2a:	mov    DWORD PTR [esi-0x4fa6d73f],ebp
  415d30:	lods   eax,DWORD PTR ds:[esi]
  415d31:	xor    ecx,DWORD PTR [ecx+0x3b86c785]
  415d37:	inc    ecx
  415d38:	stos   DWORD PTR es:[edi],eax
  415d39:	inc    ebp
  415d3a:	add    cl,ch
  415d3c:	or     ecx,edi
  415d3e:	push   ebp
  415d3f:	aas    
  415d40:	cwde   
  415d41:	ret    
  415d42:	inc    ecx
  415d43:	jmp    0x7d54e762
  415d48:	pop    esi
  415d49:	(bad)  
  415d4a:	jmp    FWORD PTR [eax+0x23]
  415d4d:	pop    edi
  415d4e:	ret    
  415d4f:	stos   BYTE PTR es:[edi],al
  415d50:	add    BYTE PTR [eax],al
  415d52:	add    al,dh
  415d54:	push   es
  415d55:	jae    0x415d4a
  415d57:	pop    eax
  415d58:	repz dec si
  415d5b:	popa   
  415d5c:	add    al,0x0
  415d5f:	outs   dx,BYTE PTR ds:[esi]
  415d60:	xchg   edx,eax
  415d61:	les    eax,FWORD PTR ds:0x3fbe76
  415d67:	jo     0x415d16
  415d69:	ds add ah,cl
  415d6c:	(bad)  
  415d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d6e:	lds    ebx,FWORD PTR [ecx+0x3]
  415d71:	std    
  415d72:	push   ebp
  415d73:	in     eax,0x8e
  415d75:	in     eax,dx
  415d76:	adc    cl,BYTE PTR [edx+0x3]
  415d79:	pop    esi
  415d7a:	lea    ecx,[edi+0x77]
  415d7d:	push   eax
  415d7e:	jmp    FWORD PTR [edi-0x7a]
  415d81:	mov    BYTE PTR [ebp-0x1e],al
  415d84:	and    al,0x0
  415d86:	(bad)  
  415d87:	(bad)  
  415d88:	xchg   esi,eax
  415d89:	xor    BYTE PTR [eax],al
  415d8b:	retf   0xe80a
  415d8e:	sbb    eax,0x50fb98d2
  415d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d94:	push   ds
  415d95:	or     bh,bh
  415d97:	mov    edi,0xca40114e
  415d9c:	(bad)  
  415d9d:	shl    BYTE PTR [eax+ecx*8+0x22],0xa0
  415da2:	jbe    0x415d7e
  415da4:	or     bh,bl
  415da6:	jne    0x415d3e
  415da8:	xchg   edi,eax
  415da9:	adc    DWORD PTR [ebx+edi*4],ecx
  415dac:	retf   0x31ff
  415daf:	pop    edx
  415db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415db1:	add    dh,BYTE PTR [eax+0x8c2c19b]
  415db7:	add    BYTE PTR [eax],al
  415db9:	add    BYTE PTR [edx+0x9ec873d],cl
  415dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dc0:	push   eax
  415dc1:	push   0xfffd825a
  415dc6:	adc    BYTE PTR [edx+0x1e5ff59],0x41
  415dcd:	lock iret 
  415dcf:	dec    edx
  415dd0:	jno    0x415de1
  415dd2:	and    BYTE PTR [edx-0x7f11ea04],al
  415dd8:	cmp    eax,0xc421f300
  415ddd:	out    0xb4,eax
  415ddf:	outs   dx,BYTE PTR ds:[esi]
  415de0:	add    DWORD PTR [eax],eax
  415de2:	rol    BYTE PTR [eax-0xd43a93f],0xc
  415de9:	div    DWORD PTR ds:0x490089b3
  415def:	jmp    0xb0b96638
  415df4:	stc    
  415df5:	xchg   BYTE PTR [esi-0x10bc84bd],ch
  415dfb:	call   0xabab6643
  415e00:	mov    eax,ds:0xc8643689
  415e05:	inc    ebx
  415e06:	(bad)  [ecx+0x1]
  415e09:	add    bl,dh
  415e0b:	bnd ret 
  415e0d:	je     0x415df8
  415e0f:	out    0x44,al
  415e11:	in     al,0xb4
  415e13:	xor    bl,BYTE PTR [ecx+eax*1-0x7efe900d]
  415e1a:	push   esi
  415e1b:	fs add esi,eax
  415e1e:	add    BYTE PTR [eax],al
  415e20:	add    BYTE PTR [esi],ch
  415e22:	push   ebp
  415e23:	add    edi,esp
  415e25:	into   
  415e26:	outs   dx,DWORD PTR ds:[esi]
  415e27:	add    DWORD PTR [eax],eax
  415e29:	outs   dx,BYTE PTR ds:[esi]
  415e2a:	scas   eax,DWORD PTR es:[edi]
  415e2b:	adc    eax,0x2b77014
  415e30:	or     eax,0x1bd6e
  415e35:	repz clc 
  415e37:	adc    eax,0xfc42780c
  415e3c:	mov    bh,dh
  415e3e:	xchg   esi,eax
  415e3f:	pushf  
  415e40:	pop    es
  415e41:	push   0xce88fc1a
  415e46:	jnp    0x415ec6
  415e48:	jnp    0x415eb5
  415e4a:	repnz inc ebp
  415e4c:	mov    al,0xc3
  415e4e:	cld    
  415e4f:	push   ss
  415e50:	or     BYTE PTR [ebp+edi*2+0x5],dl
  415e54:	std    
  415e55:	out    0x6,al
  415e57:	inc    edi
  415e58:	test   BYTE PTR [edi+eax*1],0x64
  415e5c:	ret    
  415e5d:	out    dx,al
  415e5e:	mov    ecx,DWORD PTR [ebx+eax*1-0xd]
  415e62:	push   es
  415e63:	push   ebp
  415e64:	inc    esi
  415e65:	arpl   WORD PTR [edi],ax
  415e67:	mov    ebx,0x72cb7a20
  415e6c:	xchg   BYTE PTR [ebx],dh
  415e6e:	cli    
  415e6f:	test   eax,0x407ab07a
  415e74:	mov    bl,0xf3
  415e76:	push   es
  415e77:	out    0x7c,eax
  415e79:	mov    eax,0x87ba641e
  415e7e:	and    ah,BYTE PTR [edx+0x2]
  415e81:	push   0x34fadb
  415e86:	add    BYTE PTR [eax],al
  415e88:	out    dx,al
  415e89:	cli    
  415e8a:	div    BYTE PTR [ebx]
  415e8c:	cmp    eax,0xb387d784
  415e91:	adc    al,0x6b
  415e93:	push   edi
  415e94:	repz push es
  415e96:	out    0x7c,eax
  415e98:	xor    BYTE PTR [ebx+0x6c],dh
  415e9b:	les    eax,FWORD PTR [ebp+0x1f]
  415e9e:	ficomp WORD PTR [ecx]
  415ea0:	out    0x8f,eax
  415ea2:	cmp    al,0x94
  415ea4:	mov    dh,0xfa
  415ea6:	idiv   BYTE PTR [edx-0x46]
  415ea9:	outs   dx,DWORD PTR ds:[esi]
  415eaa:	(bad)  
  415eab:	mov    ah,BYTE PTR [esi-0x113b9c7c]
  415eb1:	mov    bl,BYTE PTR [esp+eax*1-0xd]
  415eb5:	push   es
  415eb6:	bound  eax,QWORD PTR [esi]
  415eb8:	sbb    eax,DWORD PTR [edi]
  415eba:	out    dx,eax
  415ebb:	add    esi,ebx
  415ebd:	adc    DWORD PTR [esp+edx*4],0x6a
  415ec1:	push   ebp
  415ec2:	xchg   esi,eax
  415ec3:	xor    al,0xef
  415ec5:	lea    esp,[eax+eiz*4]
  415ec8:	jo     0x415f11
  415eca:	push   es
  415ecb:	pop    edi
  415ecc:	fcom   QWORD PTR [ecx]
  415ece:	jle    0x415ec9
  415ed0:	add    BYTE PTR ds:0x3fef2900,bl
  415ed6:	xor    esi,eax
  415ed8:	lock push es
  415eda:	jae    0x415eb5
  415edc:	pop    esi
  415edd:	enter  0x9af,0xdb
  415ee1:	pop    ds
  415ee2:	mov    DWORD PTR [eax+edi*2-0x562b3f78],ebp
  415ee9:	ds add eax,0xbc
  415eef:	and    eax,0x3dfeee
  415ef4:	or     edi,ebp
  415ef6:	fdivr  QWORD PTR [eax+0x18]
  415ef9:	inc    eax
  415efa:	jmp    0xb9b4a67a
  415eff:	cs or  bh,bh
  415f02:	push   0x9bff7ee2
  415f07:	out    dx,al
  415f08:	xchg   BYTE PTR [ebx+0x10],bh
  415f0b:	idiv   dl
  415f0d:	cmp    al,BYTE PTR [esi]
  415f0f:	or     dl,BYTE PTR [edi]
  415f11:	mov    esp,DWORD PTR [esp+ecx*4+0x6598fff0]
  415f18:	mul    edi
  415f1a:	out    dx,al
  415f1b:	retf   
  415f1c:	mov    bh,0x12
  415f1e:	sub    edi,ebp
  415f20:	aas    
  415f21:	add    ch,al
  415f23:	lock push es
  415f25:	or     eax,0xfd81ee6c
  415f2a:	into   
  415f2b:	mov    ch,0xc7
  415f2d:	repz xor eax,0xd2fd838c
  415f33:	mov    DWORD PTR [esi],esi
  415f35:	(bad)  
  415f36:	push   0x68
  415f38:	or     BYTE PTR ds:0x7ecbb754,cl
  415f3e:	mov    BYTE PTR [ebx+0x5],al
  415f41:	add    cl,ch
  415f43:	jno    0x415f08
  415f45:	push   es
  415f46:	pusha  
  415f47:	xor    edi,DWORD PTR [ebx-0x17]
  415f4a:	in     eax,0x36
  415f4c:	(bad)  
  415f4d:	cld    
  415f4e:	add    BYTE PTR [ebx-0x6c],bl
  415f51:	jno    0x415f43
  415f53:	add    BYTE PTR [eax],al
  415f55:	add    BYTE PTR [edx-0x2200a40e],al
  415f5b:	mov    BYTE PTR [ecx-0xc],bh
  415f5e:	pop    edx
  415f5f:	xor    al,0x5e
  415f61:	pop    ebx
  415f62:	es cmp ah,0x75
  415f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f67:	xchg   esp,eax
  415f68:	adc    DWORD PTR [esp+esi*1],esp
  415f6b:	(bad)  
  415f6c:	dec    DWORD PTR [ecx-0x3d3a6ba9]
  415f72:	inc    esi
  415f73:	pop    es
  415f74:	push   esi
  415f75:	mov    esp,DWORD PTR [edi]
  415f77:	fist   DWORD PTR [ebx]
  415f79:	inc    eax
  415f7a:	or     bh,BYTE PTR [edx+ebp*2]
  415f7d:	add    ebp,ebx
  415f7f:	sbb    esp,DWORD PTR [esp+edx*1]
  415f82:	loope  0x415ff9
  415f84:	mov    BYTE PTR [esi+esi*1-0x7d],dl
  415f88:	mov    bh,cl
  415f8a:	repnz shl bh,0x0
  415f8e:	fimul  DWORD PTR [edx+0x20e174c0]
  415f94:	call   DWORD PTR [esi-0x23]
  415f97:	mov    ebx,0x9147f887
  415f9c:	jno    0x415f84
  415f9e:	jge    0x415fd4
  415fa0:	ret    0xda08
  415fa3:	cmp    DWORD PTR [edi-0x750b614],eax
  415fa9:	sub    DWORD PTR [esi-0x1aa9af81],0xffffff93
  415fb0:	jno    0x415fbe
  415fb2:	and    DWORD PTR [ebp-0x25d8a05],edx
  415fb8:	jae    0x415fde
  415fba:	add    BYTE PTR [eax],al
  415fbc:	add    dh,ah
  415fbe:	std    
  415fbf:	dec    ebx
  415fc0:	and    al,0xa2
  415fc2:	xchg   ebx,eax
  415fc3:	adc    eax,edi
  415fc5:	mov    esi,eax
  415fc7:	dec    DWORD PTR [edx+0xfd78ab2]
  415fcd:	repz repz jbe 0x415fd1
  415fd1:	rep outs dx,DWORD PTR ds:[esi]
  415fd3:	cld    
  415fd4:	mov    ah,0xb6
  415fd6:	ja     0x416056
  415fd8:	inc    esp
  415fd9:	pop    ss
  415fda:	push   0x53dffd31
  415fdf:	cmc    
  415fe0:	or     al,0x84
  415fe2:	sub    eax,DWORD PTR [eax]
  415fe4:	push   0xfffffff1
  415fe6:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  415fe8:	adc    al,ch
  415fea:	cs xor al,0x6a
  415fed:	repz inc edi
  415fef:	test   DWORD PTR [eax],eax
  415ff1:	rep outs dx,DWORD PTR ds:[esi]
  415ff3:	xor    ch,bh
  415ff5:	(bad)  
  415ff6:	jae    0x415fed
  415ff8:	aas    
  415ff9:	repz jmp 0xe9a8:0x7cef73c3
  416001:	scas   eax,DWORD PTR es:[edi]
  416002:	in     al,0x47
  416004:	and    al,0xeb
  416006:	in     al,dx
  416007:	mov    edi,ebp
  416009:	xchg   BYTE PTR [edx+0x7cf73378],dh
  41600f:	inc    ecx
  416010:	add    BYTE PTR [ecx+0x20],bl
  416013:	das    
  416014:	xchg   DWORD PTR [edi+0x54],eax
  416017:	in     eax,dx
  416018:	cld    
  416019:	(bad)
  41601c:	inc    DWORD PTR [eax]
  41601e:	mov    al,0x1
  416020:	or     eax,DWORD PTR [eax]
  416022:	add    BYTE PTR [eax],al
  416024:	rep outs dx,DWORD PTR ds:[esi]
  416026:	add    DWORD PTR [eax],ecx
  416028:	and    edx,esi
  41602a:	xchg   ebx,eax
  41602b:	push   ecx
  41602c:	mov    esp,0xe7738cb8
  416031:	in     al,0x34
  416033:	and    al,0xd3
  416035:	push   eax
  416036:	push   ss
  416037:	or     BYTE PTR [eax+0x3b],bh
  41603a:	call   0x8b17eb56
  41603f:	std    
  416040:	xchg   esp,eax
  416041:	lds    edx,FWORD PTR [ebx-0x13f3f803]
  416047:	mov    BYTE PTR [ebx-0x2f4a59fa],ch
  41604d:	sbb    DWORD PTR [esi+0xd67e8c],0xc2fa6e94
  416057:	out    dx,eax
  416058:	addr16 pop ecx
  41605a:	xchg   edx,eax
  41605b:	add    eax,0x1f37870
  416060:	ins    BYTE PTR es:[edi],dx
  416061:	or     BYTE PTR [esi],dl
  416063:	cs jp  0x4160ab
  416066:	adc    bh,BYTE PTR [ecx+0x50]
  416069:	jecxz  0x416093
  41606b:	sti    
  41606c:	cmp    al,0xd4
  41606e:	imul   edi,DWORD PTR [ebx],0x42
  416071:	fdivr  DWORD PTR [ebp-0x29f7db80]
  416077:	cmp    eax,0xa8f978e2
  41607c:	push   0xc5983dce
  416081:	lea    ebp,[ebx-0x1c730319]
  416087:	add    al,BYTE PTR [eax]
  416089:	add    BYTE PTR [eax],al
  41608b:	xlat   BYTE PTR ds:[ebx]
  41608c:	ss jecxz 0x416089
  41608f:	xchg   DWORD PTR [esi],edi
  416091:	arpl   WORD PTR [eax-0x3c16e581],bp
  416097:	das    
  416098:	push   cs
  416099:	(bad)  
  41609a:	push   edi
  41609c:	shl    BYTE PTR [edi],0x6a
  41609f:	dec    ecx
  4160a0:	or     eax,0x92d6949e
  4160a5:	test   eax,0xde5c7702
  4160aa:	dec    ebp
  4160ab:	mov    bl,0x10
  4160ad:	jnp    0x416076
  4160af:	bnd jbe 0x4160e2
  4160b2:	xchg   DWORD PTR [eax+eax*4+0x54e2b956],edi
  4160b9:	inc    ecx
  4160ba:	(bad)  
  4160bb:	jnp    0x416106
  4160bd:	and    BYTE PTR [ebx-0x6c567374],dl
  4160c3:	mov    ebx,0x37a9001c
  4160c8:	outs   dx,BYTE PTR ds:[esi]
  4160c9:	add    bh,bl
  4160cb:	mov    al,0xe2
  4160cd:	pop    ebp
  4160ce:	inc    edx
  4160cf:	mov    ch,0xb
  4160d1:	add    BYTE PTR [ebx],dl
  4160d3:	jg     0x4160ae
  4160d5:	cmp    BYTE PTR [eax-0x56cef9fc],ch
  4160db:	sub    al,0xd6
  4160dd:	mov    ah,ch
  4160df:	icebp  
  4160e0:	mov    WORD PTR ds:0x9f43dbd,es
  4160e6:	lds    edi,FWORD PTR [esp+edi*1]
  4160e9:	add    dh,bh
  4160eb:	repnz xor eax,0xc2c0
  4160f1:	add    BYTE PTR ds:0xbbb70db0,dh
  4160f7:	stc    
  4160f8:	inc    BYTE PTR [ecx+0x2c]
  4160fb:	mov    es,WORD PTR [esi]
  4160fd:	or     eax,0x506f63f
  416102:	cs sti 
  416104:	add    ah,BYTE PTR [edi+0x38727725]
  41610a:	cmp    al,0x77
  41610c:	je     0x41609e
  41610e:	jo     0x416151
  416110:	pop    esi
  416111:	pushf  
  416112:	int3   
  416113:	adc    DWORD PTR [esi+0x29507428],esi
  416119:	es mov esp,0x21a07347
  41611f:	outs   dx,DWORD PTR ds:[esi]
  416120:	push   eax
  416121:	push   es
  416122:	push   0x3298481
  416127:	inc    edx
  416128:	inc    esi
  416129:	bound  esi,QWORD PTR [ecx-0x4696f993]
  41612f:	loope  0x4161a4
  416131:	in     al,dx
  416132:	xor    bh,BYTE PTR [esi]
  416134:	icebp  
  416135:	pop    ebx
  416136:	popa   
  416137:	cmp    eax,0x8ecb5df1
  41613c:	into   
  41613d:	add    ah,BYTE PTR [edi-0x7b]
  416140:	test   DWORD PTR [eax],0x461f1988
  416146:	and    DWORD PTR [esi+0x6100be7],edi
  41614c:	cmp    al,0x30
  41614e:	enter  0x3981,0x39
  416152:	fld    QWORD PTR ds:0x3b46
  416158:	add    BYTE PTR [ecx+0x19],bl
  41615b:	in     eax,dx
  41615c:	mov    ebx,DWORD PTR [eax+eiz*2+0x7f8283be]
  416163:	outs   dx,DWORD PTR ds:[esi]
  416164:	push   es
  416165:	loope  0x4161ac
  416167:	daa    
  416168:	mov    DWORD PTR [ecx-0x1b3fd0f7],0xd155bf2f
  416172:	xchg   edi,eax
  416173:	jg     0x416161
  416175:	fidiv  WORD PTR [edi]
  416177:	push   esi
  416178:	mov    ebx,DWORD PTR [edx+0x6d084100]
  41617e:	add    al,BYTE PTR [ecx-0x8]
  416181:	mov    cl,0x6f
  416183:	mov    BYTE PTR [ebp-0x4e],bh
  416186:	add    dh,al
  416188:	call   0x3cedd3
  41618d:	xchg   ecx,eax
  41618e:	stos   DWORD PTR es:[edi],eax
  41618f:	sbb    ebx,0x45fc793f
  416195:	sar    BYTE PTR ds:0x13fafe7f,cl
  41619b:	jecxz  0x4161d0
  41619d:	sbb    dh,BYTE PTR [ecx]
  41619f:	pop    esi
  4161a0:	pop    ebx
  4161a1:	adc    eax,DWORD PTR [eax+ecx*1+0x0]
  4161a5:	rcl    DWORD PTR [ebp+0xac67d80],0x85
  4161ac:	jne    0x416174
  4161ae:	rol    edi,1
  4161b0:	add    dl,bl
  4161b2:	or     dh,BYTE PTR [ecx+0x4]
  4161b5:	adc    DWORD PTR [ebx+0x3641e372],edx
  4161bb:	clc    
  4161bc:	add    DWORD PTR [eax],0x0
  4161bf:	add    bl,dh
  4161c1:	retf   0xfff7
  4161c4:	ja     0x4161da
  4161c6:	sti    
  4161c7:	ss ss inc esp
  4161ca:	push   ss
  4161cb:	add    DWORD PTR [edx+0x23],ebp
  4161ce:	mov    BYTE PTR [ecx+0x7604b40e],al
  4161d4:	in     al,0xe8
  4161d6:	xor    al,0xc
  4161d8:	push   0xb229882b
  4161dd:	jmp    0x4161a6
  4161df:	cs pop ebx
  4161e1:	cwde   
  4161e2:	mov    bh,ch
  4161e4:	fs jecxz 0x4161aa
  4161e7:	jae    0x4161d1
  4161e9:	test   BYTE PTR ds:0xf823680c,bh
  4161ef:	cmp    BYTE PTR [esi+0x44df15f3],dh
  4161f5:	jae    0x4161ec
  4161f7:	push   ebp
  4161f8:	dec    ebx
  4161f9:	sub    BYTE PTR ds:0xcdcf300,0xf8
  416200:	js     0x4161da
  416202:	jp     0x4161c5
  416204:	sbb    ecx,DWORD PTR [edx+0x6f]
  416207:	std    
  416208:	sbb    al,0x5a
  41620a:	inc    DWORD PTR [esi+0x73753bae]
  416210:	aas    
  416211:	cwde   
  416212:	cdq    
  416213:	cs inc edx
  416215:	jo     0x416218
  416217:	xor    DWORD PTR [ecx],esp
  416219:	call   0x6ff4d869
  41621e:	jl     0x4161e8
  416220:	sub    BYTE PTR [edx],bl
  416222:	test   DWORD PTR [edx+0x0],0x56b40000
  416229:	cs cld 
  41622b:	inc    edx
  41622c:	jne    0x41626c
  41622e:	inc    ebx
  41622f:	xlat   BYTE PTR ds:[ebx]
  416230:	lahf   
  416231:	jl     0x4161f9
  416233:	and    esp,DWORD PTR [edx+0x6fb96833]
  416239:	add    DWORD PTR [eax],eax
  41623b:	retf   
  41623c:	push   es
  41623d:	int    0x4c
  41623f:	repz push es
  416241:	push   0xffffffbf
  416243:	or     edx,esi
  416245:	mov    esi,0xce7e3cbe
  41624a:	mov    BYTE PTR [eax],ah
  41624c:	jnp    0x41621d
  41624e:	inc    esi
  41624f:	cmp    al,0x7e
  416251:	mov    esi,0x20b307c
  416256:	aas    
  416257:	sti    
  416258:	or     DWORD PTR [edx-0x6f80cffc],ebp
  41625e:	aas    
  41625f:	jbe    0x4162de
  416261:	sahf   
  416262:	cs jp  0x4162cf
  416265:	push   0xe708b397
  41626a:	add    eax,ebp
  41626c:	aad    0xe
  41626e:	scas   al,BYTE PTR es:[edi]
  41626f:	repz push es
  416271:	out    0x1d,eax
  416273:	repz mov ebp,0x6b250cf
  416279:	push   ss
  41627a:	mov    eax,esp
  41627c:	xor    bh,ch
  41627e:	inc    ebx
  41627f:	xrelease mov DWORD PTR [ebx],esp
  416282:	neg    DWORD PTR [edx+0x5e79bf08]
  416288:	leave  
  416289:	out    0x1b,al
  41628b:	add    BYTE PTR [eax],al
  41628d:	add    ah,ah
  41628f:	daa    
  416290:	dec    edi
  416291:	cmc    
  416292:	or     al,0xb4
  416294:	lds    ecx,FWORD PTR [eax-0x3a8374f2]
  41629a:	or     BYTE PTR [ebp+0x2e],bh
  41629d:	fwait
  41629e:	mov    ecx,0xf003e79d
  4162a3:	pop    eax
  4162a4:	call   0xfb3255ac
  4162a9:	xor    ebx,DWORD PTR [ecx+0x7]
  4162ac:	pop    esp
  4162ad:	push   cs
  4162ae:	mov    ds:0xcb882f88,eax
  4162b3:	test   eax,0x82ce885a
  4162b8:	add    BYTE PTR [ecx],ch
  4162ba:	cli    
  4162bb:	and    eax,0xbf88748b
  4162c0:	mov    ch,0xe9
  4162c2:	lock push es
  4162c4:	call   0x48aa2e
  4162c9:	xor    dh,BYTE PTR fs:[edi-0x28a29db0]
  4162d0:	push   esp
  4162d1:	sar    DWORD PTR [esp+ecx*8],1
  4162d4:	(bad)  
  4162d5:	call   0x5c4eaa4d
  4162da:	scas   eax,DWORD PTR es:[edi]
  4162db:	add    eax,0x34
  4162de:	jg     0x416317
  4162e0:	ror    BYTE PTR [edi],0x10
  4162e3:	pop    ds
  4162e4:	mov    ch,0x2a
  4162e6:	neg    ecx
  4162e8:	mov    dh,0x87
  4162ea:	out    dx,al
  4162eb:	push   es
  4162ec:	add    BYTE PTR [edx+esi*2+0x49],bl
  4162f0:	sti    
  4162f1:	xchg   BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [eax],al
  4162f5:	ins    BYTE PTR es:[edi],dx
  4162f6:	ffree  st(5)
  4162f8:	jmp    0xfc8829ed
  4162fd:	ja     0x4162b6
  4162ff:	call   FWORD PTR [edi+0x6c068e30]
  416305:	das    
  416306:	repz push es
  416308:	mov    ecx,0xe889c788
  41630d:	lock test DWORD PTR [esi],esp
  416310:	jmp    0x817cea46
  416315:	xor    al,dh
  416317:	(bad)  
  416318:	call   0x77725afb
  41631d:	push   edi
  41631e:	dec    eax
  41631f:	inc    ecx
  416320:	jmp    0x1554dcf3
  416325:	add    DWORD PTR [eax+eax*1],edi
  416328:	imul   edi,DWORD PTR [edx-0xf553c4d],0x78f67306
  416332:	xor    eax,0x83ed00fd
  416337:	test   al,al
  416339:	inc    esi
  41633a:	jb     0x4162bc
  41633c:	and    eax,0x3f45fe
  416341:	retf   0x1b9
  416344:	mov    eax,0xffc887
  416349:	in     al,0x83
  41634b:	adc    eax,esi
  41634d:	test   al,0xc7
  41634f:	jmp    DWORD PTR [edi+0x3c]
  416352:	int    0x3e
  416354:	add    BYTE PTR [eax+0x3],al
  416357:	push   0x58
  41635c:	jle    0x416326
  41635e:	(bad)  
  41635f:	(bad)  
  416360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416361:	das    
  416362:	or     eax,0xf0008a40
  416367:	test   DWORD PTR [ebx+ecx*1+0x17],edx
  41636b:	push   0xffffff8d
  41636d:	sub    ebx,edi
  41636f:	adc    eax,0x3d786a
  416374:	xlat   BYTE PTR ds:[ebx]
  416375:	inc    edi
  416376:	je     0x416397
  416378:	das    
  416379:	xchg   DWORD PTR [eax],eax
  41637b:	add    BYTE PTR [edx+0xb],bl
  41637e:	sbb    BYTE PTR [esi-0x43],dl
  416381:	jbe    0x416320
  416383:	adc    cl,BYTE PTR [edx]
  416385:	add    ebp,DWORD PTR [edi]
  416387:	shr    BYTE PTR [esi+eax*4],0xc0
  41638b:	je     0x4163a9
  41638d:	add    BYTE PTR [esp+0x16],cl
  416391:	cli    
  416392:	cld    
  416393:	scas   eax,DWORD PTR es:[edi]
  416394:	or     esp,DWORD PTR [eax-0x5f3b74fa]
  41639a:	jmp    0x4873dd1
  41639f:	add    BYTE PTR [edi+0x0],ah
  4163a2:	in     al,dx
  4163a3:	cmp    DWORD PTR [esi-0x6dc28289],0x46
  4163aa:	aas    
  4163ab:	add    dl,bl
  4163ad:	sub    al,0x53
  4163af:	jne    0x4163a4
  4163b1:	pop    esp
  4163b2:	inc    ebx
  4163b3:	fdiv   DWORD PTR [esi-0x2ba9fe53]
  4163b9:	pop    ebx
  4163ba:	xchg   ebp,eax
  4163bb:	adc    dh,BYTE PTR [ebx]
  4163bd:	jo     0x416340
  4163bf:	cmp    eax,DWORD PTR [eax]
  4163c1:	add    BYTE PTR [eax],al
  4163c3:	mov    ebp,DWORD PTR [ebx]
  4163c5:	inc    edx
  4163c6:	add    bl,dh
  4163c8:	repnz in eax,dx
  4163ca:	out    0x91,eax
  4163cc:	bound  eax,QWORD PTR [ebx+0x10b077fd]
  4163d2:	push   cs
  4163d3:	jo     0x4163e0
  4163d5:	dec    eax
  4163d6:	ret    
  4163d7:	xor    BYTE PTR [eax+0x1],dh
  4163da:	(bad)  
  4163db:	out    dx,al
  4163dc:	xchg   DWORD PTR [ebp+0x2b6ef341],edi
  4163e2:	std    
  4163e3:	fidivr WORD PTR [edi-0x3a0cc00e]
  4163e9:	add    DWORD PTR [eax+0x66],ebx
  4163ec:	sbb    edx,DWORD PTR [eax+ebp*8-0x27ceba0]
  4163f3:	js     0x416420
  4163f5:	cld    
  4163f6:	add    al,BYTE PTR [ebx-0x34fffe90]
  4163fc:	ins    DWORD PTR es:[edi],dx
  4163fd:	add    al,BYTE PTR [eax]
  4163ff:	repz pop ds
  416401:	ja     0x4163c9
  416403:	pop    ebx
  416404:	adc    eax,0x63cfd0d
  416409:	add    BYTE PTR [ebx-0x76ce8c52],cl
  41640f:	xor    eax,0x247335d8
  416414:	shl    DWORD PTR [ebx+edi*2+0x1f],1
  416418:	in     eax,0xbd
  41641a:	call   0xfdc61f2c
  41641f:	cdq    
  416420:	push   ebx
  416421:	test   BYTE PTR [ebx-0x1d],dh
  416424:	xor    BYTE PTR ds:0xfc,cl
  41642a:	cld    
  41642b:	push   edx
  41642c:	xor    eax,0xe706b316
  416431:	xor    BYTE PTR [edi-0x24418df6],0x5
  416438:	pushf  
  416439:	test   dh,bl
  41643b:	fldcw  WORD PTR [edx+edi*4+0x2ee70ab1]
  416442:	jp     0x4164ae
  416444:	push   0xe7032f98
  416449:	add    esi,DWORD PTR [ebx+0x3b]
  41644c:	push   edi
  41644d:	push   esp
  41644e:	xor    al,BYTE PTR [edi]
  416450:	call   0x7213a985
  416455:	stos   DWORD PTR es:[edi],eax
  416456:	push   ds
  416457:	add    bl,BYTE PTR [ecx]
  416459:	les    edx,FWORD PTR [ebx+edx*1-0x740cfc18]
  416460:	jl     0x416415
  416462:	mov    BYTE PTR [ecx-0x42],bh
  416465:	fwait
  416466:	jno    0x416403
  416468:	out    0x3,eax
  41646a:	push   0x7633a2c3
  41646f:	repz out dx,al
  416471:	js     0x4164a8
  416473:	(bad)  
  416474:	mov    ss,esp
  416476:	addr16 jns 0x41640f
  416479:	jle    0x4164b5
  41647b:	repz mov ebx,0x1742b076
  416481:	sbb    al,0xeb
  416483:	mov    cl,0x2a
  416485:	add    al,0xdb
  416487:	pop    es
  416488:	out    0x3,eax
  41648a:	jae    0x416505
  41648c:	aam    0xb
  41648e:	add    BYTE PTR [eax],al
  416490:	add    dl,ah
  416492:	(bad)  
  416493:	out    0x8c,al
  416495:	dec    ebx
  416496:	sbb    al,0x27
  416498:	test   DWORD PTR [ebx],esi
  41649a:	mov    esp,0x6f30245
  41649f:	bound  esi,QWORD PTR [ebp+0x42e7072d]
  4164a5:	mov    ecx,0x399a3ff3
  4164aa:	push   es
  4164ab:	add    cl,ch
  4164ad:	lock xchg DWORD PTR [ebx-0x28493df],esp
  4164b4:	jmp    0x1fa1e91e
  4164b9:	outs   dx,DWORD PTR ds:[esi]
  4164ba:	jp     0x41650c
  4164bc:	fs pop ebp
  4164be:	dec    edi
  4164bf:	cld    
  4164c0:	push   cs
  4164c1:	outs   dx,DWORD PTR ds:[esi]
  4164c2:	outs   dx,DWORD PTR ds:[esi]
  4164c3:	lea    eax,[edi-0x10]
  4164c6:	push   es
  4164c7:	mov    DWORD PTR [esp+edi*4-0x71],esi
  4164cb:	shl    DWORD PTR [ebp+edi*1+0x4f],1
  4164cf:	cld    
  4164d0:	out    dx,al
  4164d1:	jo     0x416542
  4164d3:	retf   
  4164d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d5:	test   DWORD PTR [esi],0x4eefe27f
  4164db:	add    cl,ch
  4164dd:	call   0x5b6f:0x91ea6a05
  4164e4:	cli    
  4164e5:	aas    
  4164e6:	xchg   cl,bh
  4164e8:	in     eax,0xe1
  4164ea:	xchg   ebx,eax
  4164eb:	mov    edi,0x88d8f543
  4164f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f1:	test   DWORD PTR [eax+0x2a],edi
  4164f4:	test   al,0x0
  4164f6:	add    BYTE PTR [eax],al
  4164f8:	fisttp WORD PTR [esi]
  4164fa:	add    al,ch
  4164fc:	lock or DWORD PTR [esi+0x3ff13351],esi
  416503:	jmp    0xfc40df75
  416508:	or     BYTE PTR [ebx+eax*2-0x7c72df0f],cl
  41650f:	test   eax,0x19fd79bc
  416514:	fs inc esi
  416516:	mov    esp,eax
  416518:	cld    
  416519:	jg     0x4164ce
  41651b:	sub    DWORD PTR [ecx+edi*2-0x4603be03],esp
  416522:	add    cl,ch
  416524:	gs ja  0x4164aa
  416527:	add    ah,cl
  416529:	jge    0x416545
  41652b:	mov    ecx,0x1b4
  416530:	xchg   edi,eax
  416531:	(bad)  
  416532:	sar    ch,1
  416534:	lds    eax,FWORD PTR [ebx+0x43da00c6]
  41653a:	inc    esi
  41653b:	jne    0x416550
  41653d:	jmp    0x7587:0x8405ff1d
  416544:	mov    dh,0x8a
  416546:	pop    ecx
  416547:	or     ch,dh
  416549:	jge    0x416550
  41654b:	lea    ecx,[edi+0x5a5755bf]
  416551:	imul   edx,DWORD PTR ds:0xe80389b7,0xffffff94
  416558:	fiadd  DWORD PTR [ecx]
  41655a:	add    BYTE PTR [edx-0x4e000000],cl
  416560:	cmp    BYTE PTR [ecx+0xc],dh
  416563:	ds or  eax,0x5d48e856
  416569:	cld    
  41656a:	push   DWORD PTR [ebx-0xb]
  41656d:	cld    
  41656e:	call   FWORD PTR [edx+0x47d08196]
  416574:	test   bl,bh
  416576:	(bad)  
  416577:	mov    al,BYTE PTR [ebx]
  416579:	inc    eax
  41657a:	dec    ecx
  41657b:	psubd  mm1,QWORD PTR [ecx+0x586525c3]
  416582:	leave  
  416583:	mov    BYTE PTR [ebx],cl
  416585:	add    BYTE PTR [ebp-0x2f],dl
  416588:	out    0x7e,eax
  41658a:	in     al,0x72
  41658c:	sub    ah,0x4c
  41658f:	dec    esi
  416590:	add    eax,DWORD PTR [eax]
  416592:	push   ebx
  416593:	fcomp  QWORD PTR [ebx-0x76]
  416596:	mov    ah,0x2e
  416598:	arpl   si,di
  41659a:	call   FWORD PTR [edx]
  41659c:	jmp    0x4165f3
  41659e:	pushf  
  41659f:	sbb    al,BYTE PTR [ebx]
  4165a1:	mov    DWORD PTR [ebx+esi*8+0x9],eax
  4165a5:	and    BYTE PTR [eax+0x14],dl
  4165a8:	push   edx
  4165a9:	or     DWORD PTR [ecx+0x2699d35],ecx
  4165af:	add    eax,0xaf8b8238
  4165b4:	or     DWORD PTR [edi+ecx*2],edx
  4165b7:	mov    DWORD PTR [esi+0x36],ebp
  4165ba:	fld    DWORD PTR [eax-0x18]
  4165bd:	add    eax,DWORD PTR [eax]
  4165bf:	repz fucomip st,st(0)
  4165c2:	pop    ss
  4165c3:	add    BYTE PTR [eax],al
  4165c5:	add    BYTE PTR [ecx+eiz*4-0x5395afff],ah
  4165cc:	and    eax,0x25ac7a24
  4165d1:	and    ah,al
  4165d3:	pop    ebx
  4165d4:	icebp  
  4165d5:	rdpmc  
  4165d7:	pusha  
  4165d8:	mov    al,al
  4165da:	ds pop edx
  4165dc:	nop
  4165dd:	inc    esp
  4165de:	xlat   BYTE PTR ds:[ebx]
  4165df:	jnp    0x4165b2
  4165e1:	mov    ch,BYTE PTR [edi]
  4165e3:	or     al,0x20
  4165e5:	push   eax
  4165e6:	outs   dx,BYTE PTR ds:[esi]
  4165e7:	and    al,0x28
  4165e9:	and    al,0x43
  4165eb:	sar    edi,cl
  4165ed:	and    ebp,edi
  4165ef:	push   edi
  4165f0:	fidivr DWORD PTR [edi]
  4165f2:	repnz pop edi
  4165f4:	ins    BYTE PTR es:[edi],dx
  4165f5:	add    DWORD PTR [eax-0x58],esi
  4165f8:	jg     0x416581
  4165fa:	das    
  4165fb:	or     al,0x18
  4165fd:	sub    DWORD PTR [ebx-0x53],0x6076840f
  416604:	add    DWORD PTR [eax],eax
  416606:	sbb    BYTE PTR [ecx+0x606e840f],ah
  41660c:	add    DWORD PTR [eax],eax
  41660e:	jo     0x41661c
  416610:	sub    BYTE PTR [eax],bl
  416612:	bnd jp 0x416647
  416615:	push   eax
  416616:	cmp    al,0x74
  416618:	and    eax,0x28046610
  41661d:	sbb    al,0x7e
  41661f:	pop    es
  416620:	fwait
  416621:	sub    bl,cl
  416623:	or     edi,esp
  416625:	add    esi,DWORD PTR [esi]
  416627:	mov    ecx,DWORD PTR [ebx]
  416629:	fadd   QWORD PTR [eax]
  41662b:	add    BYTE PTR [eax],al
  41662d:	repz push es
  41662f:	out    0x5,eax
  416631:	repz push es
  416633:	out    0x6b,eax
  416635:	fdiv   QWORD PTR [ebp-0x501fc19]
  41663b:	or     dl,BYTE PTR [eax]
  41663d:	push   0x77
  41663f:	aas    
  416640:	jae    0x416682
  416642:	jbe    0x41666a
  416644:	mov    ebx,DWORD PTR [edi+0x2b]
  416647:	jmp    0x41667d
  416649:	mov    edx,0xe3286b83
  41664e:	pop    es
  41664f:	out    0x3,eax
  416651:	and    eax,DWORD PTR [ebx+ebp*4-0x647fd8d9]
  416658:	daa    
  416659:	pop    ds
  41665a:	pop    edi
  41665b:	in     eax,dx
  41665c:	mov    esi,0xf86206f3
  416661:	rcr    BYTE PTR [edx],1
  416663:	and    dh,BYTE PTR [ebp+0x1f]
  416666:	push   es
  416667:	jb     0x416638
  416669:	rol    BYTE PTR [edx],1
  41666b:	bound  ebx,QWORD PTR [ecx+0x68]
  41666e:	retf   0xdc02
  416671:	xchg   esp,eax
  416672:	cmp    al,0x85
  416674:	add    esi,ebx
  416676:	and    DWORD PTR [eax+edx*1],0x63b49ba
  41667d:	ins    BYTE PTR es:[edi],dx
  41667e:	ss jo  0x4166f2
  416681:	ins    BYTE PTR es:[edi],dx
  416682:	jne    0x41666b
  416684:	mov    gs,WORD PTR [edi+0x2a]
  416687:	pop    es
  416688:	add    esi,ebx
  41668a:	push   es
  41668b:	pop    edi
  41668c:	sbb    esi,DWORD PTR [ebx+0x7e13bf]
  416692:	add    BYTE PTR [eax],al
  416694:	jp     0x416660
  416696:	retf   0x5a0f
  416699:	sbb    al,BYTE PTR [eax+0x71]
  41669c:	cmp    al,0x75
  41669e:	add    cl,ch
  4166a0:	mov    ah,BYTE PTR gs:[ecx+ecx*1]
  4166a4:	lock push es
  4166a6:	add    BYTE PTR [ecx+0x8],dh
  4166a9:	mov    DWORD PTR [esi-0x2c],0xb6c0379e
  4166b0:	adc    cl,dh
  4166b2:	mov    BYTE PTR [ebp+ebp*1+0x47],al
  4166b6:	or     cl,ch
  4166b8:	sbb    eax,0x1a98ec7e
  4166bd:	add    BYTE PTR [ebx+0x35],0x20
  4166c1:	(bad)  
  4166c3:	inc    eax
  4166c4:	ds jne 0x4166c4
  4166c7:	es ins DWORD PTR es:[edi],dx
  4166c9:	inc    edi
  4166ca:	je     0x4166c7
  4166cc:	ja     0x4166be
  4166ce:	sti    
  4166cf:	in     eax,dx
  4166d0:	fld    QWORD PTR [eax]
  4166d2:	mov    ecx,ebx
  4166d4:	mov    al,ds:0x739c5d6c
  4166d9:	jb     0x416664
  4166db:	daa    
  4166dc:	dec    edi
  4166dd:	dec    DWORD PTR [edi+0x1]
  4166e0:	popf   
  4166e1:	frndint 
  4166e3:	out    dx,al
  4166e4:	loopne 0x41672c
  4166e6:	pop    esi
  4166e7:	mov    al,0x30
  4166e9:	fmul   DWORD PTR [eax+0x54dac6cd]
  4166ef:	fs stos BYTE PTR es:[edi],al
  4166f1:	jo     0x416743
  4166f3:	inc    ebx
  4166f4:	icebp  
  4166f5:	pop    esi
  4166f6:	cwde   
  4166f7:	mov    DWORD PTR [eax],0x72040000
  4166fd:	mov    DWORD PTR [ecx-0x298b8296],edi
  416703:	imul   ecx,eax,0xf7f681fb
  416709:	pop    ss
  41670a:	jb     0x41674e
  41670c:	or     al,0x56
  41670e:	adc    edi,edx
  416710:	inc    ebx
  416711:	call   0x8b4a2e4c
  416716:	mov    cs,esp
  416718:	fsubr  st(7),st
  41671a:	add    BYTE PTR [edi+ecx*2-0x4],cl
  41671e:	(bad)  
  41671f:	cli    
  416720:	or     edi,esp
  416722:	or     ah,dl
  416724:	loop   0x416739
  416726:	push   ebp
  416727:	popf   
  416728:	repz xor eax,eax
  41672b:	sub    eax,0x16c2c652
  416730:	or     BYTE PTR [ecx-0x75],dl
  416733:	scas   al,BYTE PTR es:[edi]
  416734:	xchg   esp,esp
  416736:	clc    
  416737:	fwait
  416738:	test   BYTE PTR [ebx+0x53081a05],0xff
  41673f:	inc    edi
  416740:	add    al,ch
  416742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416743:	mov    ebp,0x1a84faf3
  416748:	outs   dx,BYTE PTR ds:[esi]
  416749:	xor    BYTE PTR [ebp-0x17f7d472],cl
  41674f:	mov    esi,0x51fffc5e
  416754:	push   esi
  416755:	add    eax,0xe81f568d
  41675a:	add    ebx,edx
  41675c:	pop    es
  41675d:	push   eax
  41675e:	push   0x0
  416760:	add    BYTE PTR [eax],al
  416762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416763:	push   esp
  416764:	mov    bh,al
  416766:	repnz mov bh,0x8c
  416769:	call   FWORD PTR [ebp-0x65fa7aa1]
  41676f:	pop    es
  416770:	mov    DWORD PTR [esi+esi*8+0x16],eax
  416774:	push   0x0
  416776:	(bad)  
  416778:	adc    BYTE PTR [esp+eax*4],dh
  41677b:	inc    edi
  41677c:	std    
  41677d:	adc    BYTE PTR [esi+0x3],0x5b
  416781:	mov    esi,DWORD PTR [edi-0x75fb409a]
  416787:	dec    esi
  416788:	mov    ah,ch
  41678a:	or     ebx,DWORD PTR [edx+0x53]
  41678d:	push   0x5e
  41678f:	hlt    
  416790:	jo     0x41679a
  416792:	adc    BYTE PTR [ecx-0x630c00af],0x90
  416799:	inc    ebx
  41679a:	dec    edi
  41679b:	sub    eax,0xf45b62ea
  4167a0:	jg     0x41679f
  4167a2:	cmp    al,0xf8
  4167a4:	jo     0x416729
  4167a6:	cmp    eax,0x33320572
  4167ab:	mov    BYTE PTR [ecx+ecx*4],ah
  4167ae:	scas   al,BYTE PTR es:[edi]
  4167af:	jmp    0x5c316035
  4167b4:	add    ch,BYTE PTR [edx-0x19]
  4167b7:	mov    ch,0xd1
  4167b9:	push   ebp
  4167ba:	or     al,0x5a
  4167bc:	or     ebp,edi
  4167be:	fisubr WORD PTR [ebp+0x13]
  4167c1:	inc    eax
  4167c2:	repz loopne 0x416809
  4167c5:	or     al,0x0
  4167c7:	add    BYTE PTR [eax],al
  4167c9:	popf   
  4167ca:	(bad)
  4167cd:	in     al,dx
  4167ce:	and    DWORD PTR [ecx+0x3f3746ff],esi
  4167d4:	add    al,0xf3
  4167d6:	mov    edx,0xaf42ec8a
  4167db:	rcl    DWORD PTR [esi+edi*2-0x55],cl
  4167df:	jge    0x416831
  4167e1:	pop    ebx
  4167e2:	cmp    BYTE PTR [ecx],al
  4167e4:	add    bl,dh
  4167e6:	pop    ss
  4167e7:	scas   eax,DWORD PTR es:[edi]
  4167e8:	sti    
  4167e9:	mov    ah,0x79
  4167eb:	xchg   eax,esi
  4167ed:	jbe    0x416869
  4167ef:	neg    BYTE PTR [ebx]
  4167f1:	js     0x416816
  4167f3:	sub    BYTE PTR [edx-0xe],0xd5
  4167f7:	add    ecx,DWORD PTR [ecx-0x6dfab75b]
  4167fd:	repnz pop edi
  4167ff:	mov    al,bh
  416801:	outs   dx,BYTE PTR ds:[esi]
  416802:	dec    ecx
  416803:	cmc    
  416804:	add    eax,0x54395825
  416809:	je     0x4167c4
  41680b:	xchg   ebp,eax
  41680d:	int3   
  41680e:	add    DWORD PTR [ecx-0x3f],ecx
  416811:	mov    esi,0x72707206
  416816:	hlt    
  416817:	out    dx,al
  416818:	add    eax,edx
  41681a:	sti    
  41681b:	imul   cl
  41681d:	dec    esp
  41681e:	jmp    0x43ba:0x6f3049e
  416825:	dec    ebx
  416826:	sub    eax,0x5e367d7b
  41682b:	mov    eax,0x8e
  416830:	mov    al,0xfe
  416832:	push   ss
  416833:	jmp    0xfea0:0x7ce7e024
  41683a:	dec    esi
  41683b:	xchg   edx,eax
  41683c:	data16 or bh,ah
  41683f:	xchg   BYTE PTR [ebx],dh
  416841:	cld    
  416842:	loop   0x416875
  416844:	xor    ebx,DWORD PTR [esi-0x20]
  416847:	jl     0x4167c9
  416849:	dec    dh
  41684b:	dec    ebx
  41684c:	repz push es
  41684e:	out    0x6b,eax
  416850:	add    dh,BYTE PTR [ebx+0x2e]
  416853:	jge    0x41683b
  416855:	sti    
  416856:	out    dx,al
  416857:	mov    DWORD PTR [ebx-0x282eeea2],edi
  41685d:	jno    0x4168c0
  41685f:	inc    ecx
  416860:	sub    dl,ah
  416862:	sub    BYTE PTR [eax],cl
  416864:	repz test DWORD PTR [edi],ecx
  416867:	add    al,0x47
  416869:	std    
  41686a:	scas   al,BYTE PTR es:[edi]
  41686b:	div    ebx
  41686d:	xor    eax,0x36194127
  416872:	pop    DWORD PTR [eax+0x19]
  416875:	xor    eax,0x7e40413f
  41687a:	retf   
  41687b:	add    BYTE PTR [edi-0x7399dee],0xd5
  416882:	sbb    DWORD PTR [ecx+0x1d],ebx
  416885:	fisubr DWORD PTR [edi-0x22]
  416888:	js     0x4168b8
  41688a:	fisttp WORD PTR [edi+ebp*2]
  41688d:	lods   eax,DWORD PTR ds:[esi]
  41688e:	add    cl,ch
  416890:	lock push es
  416892:	mov    esp,DWORD PTR [eax+eax*1]
  416895:	add    BYTE PTR [eax],al
  416897:	jae    0x41686f
  416899:	out    0x53,eax
  41689b:	fidiv  DWORD PTR [ebx-0x3]
  41689e:	gs mov al,0x3
  4168a1:	test   BYTE PTR [ebx-0x10],al
  4168a4:	push   es
  4168a5:	add    BYTE PTR [edx+0x2d],ah
  4168a8:	or     eax,ebp
  4168aa:	inc    edx
  4168ab:	mov    edi,0x256cfd73
  4168b0:	or     DWORD PTR [edi+0x19],ecx
  4168b3:	js     0x41687a
  4168b5:	test   DWORD PTR [ecx+0x66fd729a],0x7207ed6b
  4168bf:	mov    al,ds:0x982788db
  4168c4:	jle    0x4168c7
  4168c6:	jmp    0xbd01f3bb
  4168cb:	jmp    0xfd72:0x23c3e7d8
  4168d2:	cli    
  4168d3:	data16 ss std 
  4168d6:	cli    
  4168d7:	xor    BYTE PTR [edi+0x5b],bh
  4168da:	adc    DWORD PTR [ecx-0x14],ebp
  4168dd:	jmp    0x41694f
  4168df:	frstor [eax-0x79]
  4168e2:	mov    ah,0x44
  4168e4:	cs icebp 
  4168e6:	xchg   ebp,eax
  4168e7:	loope  0x416917
  4168e9:	push   ds
  4168ea:	jl     0x4168e2
  4168ec:	(bad)  
  4168ed:	aaa    
  4168ee:	lahf   
  4168ef:	icebp  
  4168f0:	cli    
  4168f1:	add    BYTE PTR [edi+0x2a39761b],ch
  4168f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168f8:	xor    ebp,edi
  4168fa:	pop    esp
  4168fb:	add    BYTE PTR [eax],al
  4168fd:	add    bl,ch
  4168ff:	jnp    0x41697c
  416901:	rol    DWORD PTR [edi],1
  416903:	adc    eax,0x8af0e904
  416908:	rcl    BYTE PTR [ebp-0x51],0x73
  41690c:	jae    0x41690e
  41690e:	cmp    al,BYTE PTR [eax+0x7635ec41]
  416914:	cmc    
  416915:	call   0x3c5929
  41691a:	rcl    dl,1
  41691c:	mov    BYTE PTR [ebp-0x7e],dh
  41691f:	jecxz  0x416934
  416921:	add    ecx,DWORD PTR [edx+0x4]
  416924:	mov    DWORD PTR [ebp+0x66],esi
  416927:	jecxz  0x416938
  416929:	cli    
  41692a:	jne    0x416918
  41692c:	mov    ebx,eax
  41692e:	popa   
  41692f:	sbb    eax,0x544675fb
  416934:	cld    
  416935:	adc    eax,0x401b4a
  41693a:	(bad)
  41693e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41693f:	inc    ebp
  416940:	in     eax,0xe8
  416942:	pushf  
  416943:	pop    es
  416944:	add    BYTE PTR [eax],al
  416946:	loope  0x41690f
  416948:	jo     0x416930
  41694a:	mov    cl,0xb9
  41694c:	mov    DWORD PTR [ebp-0x5e],esi
  41694f:	loop   0x416934
  416951:	add    cl,BYTE PTR [edx]
  416953:	add    al,0x89
  416955:	jne    0x41697d
  416957:	jecxz  0x416938
  416959:	stc    
  41695a:	adc    eax,0xb5c031ec
  41695f:	dec    ebp
  416960:	pop    eax
  416961:	leave  
  416962:	add    BYTE PTR [eax],al
  416964:	add    BYTE PTR [eax],cl
  416966:	add    eax,DWORD PTR [eax]
  416968:	push   ebp
  416969:	push   ecx
  41696a:	fisttp WORD PTR [ecx+edx*2-0x77]
  41696e:	push   ebp
  41696f:	push   esp
  416970:	lea    ecx,[edi+0x1d684feb]
  416976:	or     eax,DWORD PTR [eax]
  416978:	add    dl,dh
  41697a:	sbb    al,0xfc
  41697c:	call   DWORD PTR [ebp-0x30390f80]
  416982:	jmp    0x416983
  416984:	test   BYTE PTR [edi+ebx*2+0x2af38b39],bh
  41698b:	jl     0x4169f7
  41698d:	jmp    0x41699b
  41698f:	push   esi
  416990:	mov    DWORD PTR [edx+0x6ef57128],esi
  416996:	mov    esi,eax
  416998:	sub    edi,DWORD PTR [esi+0x59]
  41699b:	xor    al,0x89
  41699d:	gs je  0x416a16
  4169a0:	jno    0x4169b2
  4169a2:	adc    al,0x10
  4169a4:	std    
  4169a5:	fidiv  WORD PTR [ebp-0x78]
  4169a8:	inc    ebp
  4169a9:	imul   DWORD PTR ds:0x78071379
  4169af:	sar    edi,0x71
  4169b2:	mov    eax,ds:0x79338305
  4169b7:	or     al,0x81
  4169b9:	xor    al,0x55
  4169bb:	ds stc 
  4169bd:	mov    eax,ds:0x35046e7c
  4169c2:	mov    ds:0xd5beff7a,al
  4169c7:	mov    edx,DWORD PTR [edx+0x0]
  4169ca:	add    BYTE PTR [eax],al
  4169cc:	or     al,0xd8
  4169ce:	mov    al,BYTE PTR [ebx+0x4]
  4169d1:	mov    al,ds:0x1b2a58d7
  4169d6:	std    
  4169d7:	call   FWORD PTR [edi+0x6e8164f4]
  4169dd:	push   0xb43d5101
  4169e2:	xor    BYTE PTR [ecx+0x7601745e],al
  4169e8:	add    al,0xd
  4169ea:	lock or ecx,esp
  4169ed:	mov    ecx,DWORD PTR [ecx]
  4169ef:	call   0xfdbc1c96
  4169f4:	push   0x3ef67d70
  4169f9:	fs xor eax,eax
  4169fc:	cwde   
  4169fd:	dec    eax
  4169fe:	mov    es,WORD PTR [ebx-0x9]
  416a01:	xchg   ebp,eax
  416a02:	jmp    0xe7485d9e
  416a07:	add    ecx,DWORD PTR [ebx-0x71861f1f]
  416a0d:	aad    0x60
  416a0f:	pop    esp
  416a10:	fwait
  416a11:	retf   0x7938
  416a14:	jle    0x416997
  416a16:	stos   BYTE PTR es:[edi],al
  416a17:	ins    DWORD PTR es:[edi],dx
  416a18:	in     eax,0xe0
  416a1a:	out    0xeb,al
  416a1c:	test   BYTE PTR [edi],al
  416a1e:	out    0x3,eax
  416a20:	and    al,BYTE PTR [edi-0x41]
  416a23:	aam    0x5a
  416a25:	outs   dx,BYTE PTR ds:[esi]
  416a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a27:	fidivr DWORD PTR [ebx-0xcf35735]
  416a2d:	shl    DWORD PTR [ecx+0x68],cl
  416a30:	add    BYTE PTR [eax],al
  416a32:	add    BYTE PTR [edi+edx*8+0x6ab08734],dh
  416a39:	pop    ss
  416a3a:	in     al,dx
  416a3b:	pop    ebp
  416a3c:	pop    es
  416a3d:	out    0x3,eax
  416a3f:	sbb    esi,edi
  416a41:	jno    0x416abc
  416a43:	sbb    BYTE PTR es:[edi+0x2f3347f],0x8d
  416a4b:	mov    al,0x6a
  416a4d:	rcl    DWORD PTR [eax],1
  416a4f:	ret    0xb558
  416a52:	jo     0x416a51
  416a54:	cmp    DWORD PTR [ecx],0xffffffef
  416a57:	out    dx,al
  416a58:	das    
  416a59:	mov    esp,0x71ff8177
  416a5e:	iret   
  416a5f:	hlt    
  416a60:	jg     0x416a4b
  416a62:	mov    WORD PTR [ecx+eiz*2+0x5dd4d2df],fs
  416a69:	mov    eax,0x2739d678
  416a6e:	fidiv  DWORD PTR [ebp+0x3403eb48]
  416a74:	mov    cl,BYTE PTR [ebx-0x65f914e1]
  416a7a:	rcr    DWORD PTR [edi],1
  416a7c:	repz mov ah,0x7e
  416a7f:	mov    bl,0xf2
  416a81:	(bad)  
  416a82:	mov    edx,0x6215ad97
  416a87:	pop    ds
  416a88:	aam    0xfc
  416a8a:	pop    ebp
  416a8b:	ror    DWORD PTR [esi],cl
  416a8d:	call   0xfdac0fb3
  416a92:	bound  eax,QWORD PTR [eax]
  416a94:	mov    dh,dh
  416a96:	push   esp
  416a97:	add    BYTE PTR [eax],al
  416a99:	add    bl,dh
  416a9b:	cmp    al,al
  416a9d:	rcl    bl,cl
  416a9f:	aam    0x67
  416aa1:	pusha  
  416aa2:	lock push es
  416aa4:	add    BYTE PTR [edx-0x4d],ah
  416aa7:	pop    esi
  416aa8:	shl    BYTE PTR [eax+0x73566bdb],cl
  416aae:	mov    eax,0xca38a95e
  416ab3:	imul   ecx,DWORD PTR [edx+0x69fcd7aa],0xffffffe9
  416aba:	dec    eax
  416abb:	xchg   esp,eax
  416abc:	add    cl,ch
  416abe:	lock aaa 
  416ac0:	rcl    BYTE PTR [ecx+0x76fd7568],0x4b
  416ac7:	retf   
  416ac8:	pop    eax
  416ac9:	adc    BYTE PTR [ebp+0x67bc0002],dh
  416acf:	pop    edx
  416ad0:	dec    edi
  416ad1:	mov    bh,0x23
  416ad3:	add    BYTE PTR [ebx+0x55],0x20
  416ad7:	in     eax,0x99
  416ad9:	jmp    0x1f2971ce
  416ade:	jbe    0x416b4b
  416ae0:	std    
  416ae1:	jb     0x416b43
  416ae3:	mov    dh,dh
  416ae5:	mov    ebp,0x2d437e10
  416aea:	cdq    
  416aeb:	dec    esi
  416aec:	(bad)  
  416aed:	call   0x7313a0e2
  416af2:	dec    ecx
  416af3:	jb     0x416aea
  416af5:	ins    BYTE PTR es:[edi],dx
  416af6:	push   ds
  416af7:	clc    
  416af8:	or     eax,0x7270b5d0
  416afd:	add    BYTE PTR [eax],al
  416aff:	add    BYTE PTR [eax],al
  416b01:	ret    
  416b02:	jnp    0x416b4d
  416b04:	or     BYTE PTR [ebx],ah
  416b06:	or     DWORD PTR [edi+0x55fff1c6],eax
  416b0c:	call   0x3dc489
  416b11:	stc    
  416b12:	ret    0x5e5a
  416b15:	inc    ebx
  416b16:	leave  
  416b17:	add    eax,DWORD PTR [eax]
  416b19:	retf   
  416b1a:	xchg   DWORD PTR [esp-0x6e],edi
  416b1e:	or     BYTE PTR [edi+0x56],cl
  416b21:	aad    0x76
  416b23:	test   DWORD PTR ss:[edx-0x6596cd89],ebx
  416b2a:	sar    ah,1
  416b2c:	dec    DWORD PTR [edx-0x7f]
  416b2f:	clc    
  416b30:	push   edi
  416b31:	lea    esi,[edi+0x21]
  416b34:	sbb    BYTE PTR [edx+0x7c],ah
  416b37:	dec    ebp
  416b38:	call   FWORD PTR [ebp-0x80]
  416b3b:	lock test DWORD PTR [esi+esi*2+0x1],esp
  416b40:	xor    cl,BYTE PTR [edx+0x25622e0]
  416b46:	xchg   ecx,eax
  416b47:	add    BYTE PTR [eax],al
  416b49:	sbb    al,BYTE PTR [ecx-0x14a4173d]
  416b4f:	cli    
  416b50:	call   DWORD PTR [esi+edi*2-0x28]
  416b54:	call   0x3dbe59
  416b59:	nop
  416b5a:	(bad)  
  416b5b:	out    0xe,al
  416b5d:	xor    BYTE PTR [eax],cl
  416b5f:	push   0x80a9a
  416b64:	xor    eax,DWORD PTR [eax]
  416b66:	add    BYTE PTR [eax],al
  416b68:	sbb    bl,bl
  416b6a:	adc    bh,cl
  416b6c:	sbb    eax,0x815e5af4
  416b71:	dec    edx
  416b72:	mov    edi,0x8856ca04
  416b77:	in     al,dx
  416b78:	mov    edx,DWORD PTR [edx+0x53]
  416b7b:	(bad)  
  416b7c:	repz call 0x3:0xf44b5075
  416b84:	repz adc eax,0x6cacfa2e
  416b8a:	mov    cl,al
  416b8c:	outs   dx,BYTE PTR ds:[esi]
  416b8d:	lock sbb ebp,DWORD PTR es:[eax-0x5e]
  416b92:	jne    0x416bfe
  416b94:	fist   DWORD PTR [eax]
  416b96:	push   edx
  416b97:	pop    esi
  416b98:	test   BYTE PTR [ebx-0x80],dl
  416b9b:	sar    dh,cl
  416b9d:	arpl   WORD PTR [ebx+esi*2],di
  416ba0:	jg     0x416b71
  416ba2:	or     cl,BYTE PTR [ecx+0x28c761e]
  416ba8:	js     0x416b48
  416baa:	push   0x8
  416bac:	ret    0xb045
  416baf:	push   eax
  416bb0:	pop    esp
  416bb1:	pushf  
  416bb2:	xor    al,al
  416bb4:	mov    ch,0xb6
  416bb6:	aas    
  416bb7:	add    al,0xf3
  416bb9:	xor    cl,BYTE PTR [ecx-0x31d15d14]
  416bbf:	mov    dh,BYTE PTR [esi-0x30962e87]
  416bc5:	xchg   ebp,eax
  416bc6:	imul   esi,edi,0x2c
  416bc9:	in     al,dx
  416bca:	mov    eax,ecx
  416bcc:	add    BYTE PTR [eax],al
  416bce:	add    BYTE PTR [esi-0x5a],ch
  416bd1:	in     eax,dx
  416bd2:	sbb    ebp,DWORD PTR [eax+0x22]
  416bd5:	js     0x416c41
  416bd7:	fst    DWORD PTR [eax]
  416bd9:	push   edx
  416bda:	pop    esi
  416bdb:	add    al,0xd3
  416bdd:	jg     0x416bb1
  416bdf:	jle    0x416c44
  416be1:	cmp    al,0x73
  416be3:	dec    DWORD PTR [esi+0xc]
  416be6:	mov    DWORD PTR [esi+0x78028c75],ebx
  416bec:	pop    ds
  416bed:	push   0x8
  416bef:	inc    edx
  416bf0:	enter  0x4fef,0xdc
  416bf4:	sbb    DWORD PTR [edx],esi
  416bf6:	shl    BYTE PTR ds:0xf7413007,0x6
  416bfd:	mov    ah,0x8a
  416bff:	xlat   BYTE PTR ds:[ebx]
  416c00:	xchg   BYTE PTR [ebx],cl
  416c02:	jnp    0x416c30
  416c04:	xchg   BYTE PTR [ebx+ecx*1-0x31632a0d],cl
  416c0b:	and    BYTE PTR ds:0x191f4364,dh
  416c11:	add    BYTE PTR [ebx-0x27],0x7d
  416c15:	out    dx,eax
  416c16:	int    0x97
  416c18:	hlt    
  416c19:	out    dx,al
  416c1a:	imul   ecx,DWORD PTR [ecx-0x29],0xffffffdd
  416c1e:	jne    0x416c9a
  416c20:	ja     0x416c8e
  416c22:	outs   dx,BYTE PTR ds:[esi]
  416c23:	add    BYTE PTR [ebx],al
  416c25:	sbb    DWORD PTR [edx+ecx*4+0x28],eax
  416c29:	sbb    eax,0xa67dd0ea
  416c2e:	ins    BYTE PTR es:[edi],dx
  416c2f:	mov    esi,0x75b66e
  416c34:	add    BYTE PTR [eax],al
  416c36:	lds    edi,FWORD PTR [edi+ecx*4+0x6c]
  416c3a:	and    edx,edi
  416c3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c3d:	jne    0x416cb8
  416c3f:	inc    esi
  416c40:	xchg   edx,eax
  416c41:	or     ecx,ebx
  416c43:	push   es
  416c44:	add    eax,esp
  416c46:	add    eax,DWORD PTR [edi+0x7f]
  416c49:	les    edi,FWORD PTR [edx+ebp*2]
  416c4c:	xchg   ch,dl
  416c4e:	into   
  416c4f:	int    0x71
  416c51:	pop    edi
  416c52:	enter  0xeb44,0x3
  416c56:	ret    0x9235
  416c59:	cmp    al,0xf5
  416c5b:	repz out dx,al
  416c5d:	je     0x416be4
  416c5f:	dec    BYTE PTR [esi+0xb]
  416c62:	mov    ds:0xdd8c5669,eax
  416c67:	jg     0x416c16
  416c69:	jmp    FWORD PTR [ebp-0x37]
  416c6c:	out    dx,al
  416c6d:	mov    cl,BYTE PTR [ebp-0x5]
  416c70:	mov    eax,ds:0xfffb5940
  416c75:	rcr    BYTE PTR [eax],0xd7
  416c78:	inc    eax
  416c79:	jmp    0xe93f11c6
  416c7e:	lock aaa 
  416c80:	shl    dl,cl
  416c82:	cmp    dh,bl
  416c84:	cmp    BYTE PTR [edx-0x3c],ch
  416c87:	add    DWORD PTR [edx],eax
  416c89:	pop    DWORD PTR ds:0xe2055382
  416c8f:	inc    esi
  416c90:	xchg   DWORD PTR [esp+eax*2-0x5a1ebcd0],esp
  416c97:	and    eax,0xd538
  416c9c:	add    al,ch
  416c9e:	cmc    
  416c9f:	adc    ah,BYTE PTR [ecx]
  416ca1:	mov    ds:0xee53ff01,eax
  416ca6:	xchg   eax,eax
  416ca8:	jmp    0x416c65
  416caa:	lds    eax,FWORD PTR [edi]
  416cac:	fisub  WORD PTR [esi+eax*2-0x7f]
  416cb0:	xor    al,0xeb
  416cb2:	imul   ebp,ecx,0xffffffd9
  416cb5:	xor    BYTE PTR [esi-0x27],bl
  416cb8:	cli    
  416cb9:	mov    al,0xc6
  416cbb:	shl    BYTE PTR [edx+0x35],0x61
  416cbf:	xor    DWORD PTR [ebx+ecx*8],0xd8a9326b
  416cc6:	xchg   ebp,eax
  416cc7:	std    
  416cc8:	call   0xe945b1bd
  416ccd:	add    edx,DWORD PTR [ebp+0x37]
  416cd0:	sbb    eax,0xca7402d3
  416cd5:	jnp    0x416d00
  416cd7:	or     BYTE PTR [edx-0x45e40d4e],dh
  416cdd:	test   eax,0xf4dc102e
  416ce2:	cs push eax
  416ce4:	call   0x12806bfd
  416ce9:	sub    esp,DWORD PTR ds:0x28f7d504
  416cef:	jmp    0xc078b3f4
  416cf4:	jmp    0x416cc2
  416cf6:	inc    esp
  416cf7:	call   0x586bdff
  416cfc:	ret    0x4ce
  416cff:	xchg   DWORD PTR [eax+0x0],ecx
  416d02:	add    BYTE PTR [eax],al
  416d04:	(bad)  
  416d05:	jmp    0x8003e2ce
  416d0a:	dec    eax
  416d0b:	or     BYTE PTR [ebx+0x3c],dl
  416d0e:	or     ebx,ebp
  416d10:	mov    cl,0x7f
  416d12:	push   eax
  416d13:	or     BYTE PTR [ecx+0x7c2071be],dh
  416d19:	jg     0x416d8b
  416d1b:	add    al,0x89
  416d1d:	div    BYTE PTR [esi]
  416d1f:	into   
  416d20:	fs ja  0x416d35
  416d23:	mov    cl,BYTE PTR [ebx-0x69b779bd]
  416d29:	adc    dl,0x75
  416d2c:	pushf  
  416d2d:	sbb    ecx,DWORD PTR ds:0x86439175
  416d33:	dec    eax
  416d34:	xor    ax,ax
  416d37:	ret    
  416d38:	fldenv [edx+0x9]
  416d3b:	add    cl,dl
  416d3d:	inc    edx
  416d3e:	or     ebx,eax
  416d40:	retf   0x33
  416d43:	je     0x416da2
  416d45:	xor    al,al
  416d47:	jmp    0x41700d
  416d4c:	stc    
  416d4d:	repz jae 0x416d74
  416d50:	push   edx
  416d51:	cmc    
  416d52:	adc    BYTE PTR [eax+0x48],bh
  416d55:	inc    esp
  416d56:	std    
  416d57:	mov    dl,BYTE PTR [edx+0x7e]
  416d5a:	xlat   BYTE PTR ds:[ebx]
  416d5b:	jg     0x416d6b
  416d5d:	xor    al,al
  416d5f:	jmp    0x416d80
  416d61:	dec    esi
  416d62:	mov    dh,BYTE PTR [edi+0x2]
  416d65:	cmp    DWORD PTR [esi],0x0
  416d6b:	pop    ds
  416d6c:	and    DWORD PTR [ecx-0x2ea40cbd],ecx
  416d72:	out    0x10,eax
  416d74:	mov    BYTE PTR [edx-0x3],dh
  416d77:	jp     0x416dd0
  416d79:	mov    al,al
  416d7b:	pop    edi
  416d7c:	add    dl,ch
  416d7e:	cld    
  416d7f:	addr16 cli 
  416d81:	adc    edx,DWORD PTR [eax-0x2c]
  416d84:	push   edx
  416d85:	xor    DWORD PTR [esi],edx
  416d87:	xor    ebx,DWORD PTR [esi-0x7a]
  416d8a:	(bad)  
  416d8b:	div    esi
  416d8d:	rol    BYTE PTR [ebx],1
  416d8f:	enter  0x7e3f,0x45
  416d93:	out    dx,eax
  416d94:	retf   0x17bf
  416d97:	repnz adc eax,0x68a44e0d
  416d9d:	test   eax,eax
  416d9f:	es pop edx
  416da1:	xor    eax,eax
  416da3:	mov    BYTE PTR [ecx+0x308c0e7e],dh
  416da9:	or     BYTE PTR [ecx],al
  416dab:	xor    al,0x62
  416dad:	(bad)  
  416dae:	cld    
  416daf:	pop    es
  416db0:	cli    
  416db1:	adc    ecx,DWORD PTR [edi+0x74]
  416db4:	jb     0x416de7
  416db6:	push   ss
  416db7:	mov    bl,0x5d
  416db9:	xchg   ah,al
  416dbb:	neg    DWORD PTR [esi-0x2e]
  416dbe:	add    ebp,DWORD PTR [eax+0x18]
  416dc1:	or     BYTE PTR [ecx+0x8059fe5],cl
  416dc7:	repz mov al,ds:0x207803ca
  416dcd:	or     BYTE PTR [ecx-0x13000000],cl
  416dd3:	xchg   edi,eax
  416dd4:	add    eax,0xca78f308
  416dd9:	add    esp,DWORD PTR [ebx+0x5e]
  416ddc:	iret   
  416ddd:	pop    eax
  416dde:	xor    DWORD PTR [ecx+0x1],esp
  416de1:	push   ebx
  416de2:	push   0xf33d8181
  416de7:	jno    0x416dee
  416de9:	xor    dh,BYTE PTR [ebx]
  416deb:	push   es
  416dec:	push   edx
  416ded:	in     al,0x9e
  416def:	addr16 aam 0xfb
  416df2:	imul   esi,DWORD PTR [edi],0x3f
  416df5:	arpl   bp,si
  416df7:	dec    si
  416df9:	jle    0x416dde
  416dfb:	nop
  416dfc:	mov    esp,0xb45d71fb
  416e01:	pop    es
  416e02:	and    DWORD PTR [edi+0x42],eax
  416e05:	mov    ebx,0x182dbd43
  416e0a:	dec    ebx
  416e0b:	stc    
  416e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e0d:	add    edi,DWORD PTR [edx-0x2a]
  416e10:	loop   0x416d92
  416e12:	sbb    ecx,DWORD PTR [eax]
  416e14:	fs pop es
  416e16:	add    dh,BYTE PTR [edx]
  416e18:	pop    ds
  416e19:	and    BYTE PTR [esi],0xf
  416e1c:	jmp    0xf4f7:0xfdb73401
  416e23:	fdiv   QWORD PTR gs:[ebx]
  416e26:	std    
  416e27:	(bad)  
  416e28:	out    0x1c,al
  416e2a:	or     esi,DWORD PTR cs:[edx-0x3f]
  416e2e:	lock mov DWORD PTR [ebx-0x2f75e600],esp
  416e35:	add    eax,DWORD PTR [eax]
  416e37:	add    BYTE PTR [eax],al
  416e39:	add    BYTE PTR [esi],dl
  416e3b:	into   
  416e3c:	cmp    bl,BYTE PTR [ebx+0x26]
  416e3f:	xor    eax,0x58a6671
  416e44:	add    al,0x5e
  416e46:	(bad)  
  416e47:	jmp    0x4fbf:0x376ef05c
  416e4e:	push   di
  416e50:	add    esp,DWORD PTR [ebp-0xcf7573d]
  416e56:	mov    ebx,0xbda26061
  416e5b:	popa   
  416e5c:	dec    edx
  416e5d:	sbb    ebx,ebp
  416e5f:	out    0x3,al
  416e61:	rep outs dx,BYTE PTR ds:[esi]
  416e63:	loopne 0x416e6c
  416e65:	repz push es
  416e67:	add    BYTE PTR [edx+0x1a50b7a7],bh
  416e6d:	sbb    cl,0xf
  416e70:	jb     0x416e09
  416e72:	mov    ebx,0xf918f4fc
  416e77:	aas    
  416e78:	jmp    0x4147fb98
  416e7d:	lock aam 0xfc
  416e80:	inc    esi
  416e81:	sbb    BYTE PTR ds:0x4726e573,al
  416e87:	jmp    0x6ba0122f
  416e8c:	test   eax,0xf9434bf0
  416e91:	in     al,dx
  416e92:	push   es
  416e93:	add    cl,ch
  416e95:	sahf   
  416e96:	or     DWORD PTR [ebx-0x3491352],ecx
  416e9c:	(bad)  
  416e9d:	add    BYTE PTR [eax],al
  416e9f:	add    BYTE PTR [ebx],ah
  416ea1:	sbb    eax,0xfa24dcfd
  416ea6:	aas    
  416ea7:	jmp    0xf649ba23
  416eac:	push   ebp
  416ead:	adc    eax,0xb6a60173
  416eb2:	imul   ebp,edx,0x54fcb69f
  416eb8:	repz arpl WORD PTR [ebx-0x1f],si
  416ebc:	add    ebx,DWORD PTR ds:0xf858f4fd
  416ec2:	aas    
  416ec3:	jmp    0x2453bb1
  416ec8:	mov    dh,0xd9
  416eca:	push   es
  416ecb:	bound  ebp,QWORD PTR [edx-0xf16f592]
  416ed1:	push   es
  416ed2:	jmp    0x5ea6ef34
  416ed7:	inc    edx
  416ed8:	sub    al,0x47
  416eda:	or     al,0xe9
  416edc:	sbb    bh,BYTE PTR [edx+0x27c89988]
  416ee2:	add    BYTE PTR [eax],al
  416ee4:	sbb    cl,BYTE PTR [ecx]
  416ee6:	xchg   DWORD PTR [esi+0x16],eax
  416ee9:	loop   0x416f23
  416eeb:	jl     0x416f24
  416eed:	dec    ecx
  416eee:	std    
  416eef:	test   BYTE PTR [edx+0x5d],bl
  416ef2:	add    al,0x50
  416ef4:	lea    edi,[esi+0x916667e]
  416efa:	xchg   DWORD PTR [esi],eax
  416efc:	xchg   ecx,ecx
  416efe:	jae    0x416f06
  416f00:	stos   BYTE PTR es:[edi],al
  416f01:	xlat   BYTE PTR ds:[ebx]
  416f02:	rol    BYTE PTR [ebx-0xc000000],cl
  416f08:	or     bl,BYTE PTR [ebx+0x5e]
  416f0b:	or     ebx,esp
  416f0d:	inc    ebp
  416f0e:	or     BYTE PTR [edi-0x38],al
  416f11:	jae    0x416f1e
  416f13:	push   0xffffffd7
  416f15:	adc    BYTE PTR [edi+eax*8+0x48],bh
  416f19:	std    
  416f1a:	xor    BYTE PTR [eax+eiz*2-0x3],0xc2
  416f1f:	ja     0x416f04
  416f21:	jmp    0x416ea4
  416f23:	scas   al,BYTE PTR es:[edi]
  416f24:	adc    ebp,edi
  416f26:	call   FWORD PTR [edx+0x5789533b]
  416f2c:	hlt    
  416f2d:	jle    0x416f94
  416f2f:	sahf   
  416f30:	or     edx,DWORD PTR [ebx-0x75]
  416f33:	mov    esi,DWORD PTR [eax-0x73810100]
  416f39:	je     0x416f40
  416f3b:	push   ecx
  416f3c:	or     edi,ebx
  416f3e:	dec    esp
  416f3f:	push   es
  416f40:	add    DWORD PTR [esp+esi*2],0x54
  416f44:	mov    eax,edi
  416f46:	add    BYTE PTR [edx-0x78],bl
  416f49:	add    BYTE PTR [edi+0x3d5d96],bh
  416f4f:	jb     0x416f5b
  416f51:	jno    0x416f58
  416f53:	ffree  st(6)
  416f55:	jne    0x416f97
  416f57:	pop    edx
  416f58:	shr    BYTE PTR [edx+0x69f45dff],0x0
  416f5f:	repz and ah,bl
  416f62:	ja     0x416fbf
  416f64:	xor    DWORD PTR [edx+ebp*2],eax
  416f67:	repz cmc 
  416f69:	push   ebx
  416f6a:	jbe    0x416f6c
  416f6c:	add    BYTE PTR [eax],al
  416f6e:	mov    bl,0x6d
  416f70:	outs   dx,BYTE PTR ds:[esi]
  416f71:	jae    0x416f5e
  416f73:	add    al,0x6d
  416f75:	jbe    0x416f6e
  416f77:	hlt    
  416f78:	push   ss
  416f79:	jo     0x416f59
  416f7b:	lods   eax,DWORD PTR ds:[esi]
  416f7c:	add    DWORD PTR [edi-0x3f77aa4b],eax
  416f82:	in     al,0xf1
  416f84:	jb     0x416f86
  416f86:	rep ins DWORD PTR es:[edi],dx
  416f88:	xlat   BYTE PTR ds:[ebx]
  416f89:	add    esi,DWORD PTR [esi-0x66]
  416f8c:	stc    
  416f8d:	dec    esi
  416f8e:	dec    ecx
  416f8f:	mov    bl,0xd1
  416f91:	les    ebp,FWORD PTR [esi]
  416f93:	data16 add al,0x0
  416f96:	rep ins DWORD PTR es:[edi],dx
  416f98:	outs   dx,BYTE PTR ds:[esi]
  416f99:	adc    esi,DWORD PTR [edi+0x62]
  416f9c:	sar    edi,0xd4
  416f9f:	cmp    ah,BYTE PTR [ebx]
  416fa1:	push   DWORD PTR [eax+ebp*8-0x51f993d2]
  416fa8:	add    DWORD PTR [ecx-0x5ffe920d],edi
  416fae:	fild   QWORD PTR [ecx-0x8]
  416fb1:	or     cl,BYTE PTR [ebx-0x7300dc6e]
  416fb7:	jmp    0xf2b07cff
  416fbc:	add    BYTE PTR [eax],al
  416fbe:	repz repnz mov DWORD PTR [edi],0xf787eb23
  416fc6:	ins    DWORD PTR es:[edi],dx
  416fc7:	push   esp
  416fc8:	outs   dx,BYTE PTR ds:[esi]
  416fc9:	push   eax
  416fca:	sub    al,0x32
  416fcc:	cld    
  416fcd:	push   ebx
  416fcf:	ins    DWORD PTR es:[edi],dx
  416fd0:	add    ebp,edi
  416fd2:	add    BYTE PTR [eax],al
  416fd4:	add    dh,bh
  416fd6:	xchg   ecx,eax
  416fd7:	adc    al,BYTE PTR [eax-0xd]
  416fda:	jmp    0x6e5f:0x6da7340
  416fe1:	repz push es
  416fe3:	out    0x2c,eax
  416fe5:	mov    al,0xe
  416fe7:	out    0xc1,al
  416fe9:	mov    cl,0xe
  416feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fec:	xchg   eax,esi
  416fee:	pop    ebp
  416fef:	test   DWORD PTR [esi+0x1e],ebp
  416ff2:	push   es
  416ff3:	ins    BYTE PTR es:[edi],dx
  416ff4:	mov    BYTE PTR [esp+eiz*2],bl
  416ff7:	jbe    0x417067
  416ff9:	mov    ds:0xe2ebd463,eax
  416ffe:	(bad)  
  416fff:	out    0x7c,al
  417001:	mov    al,0xe
  417003:	fs inc ebx
  417005:	jg     0x416fcc
  417007:	rcl    BYTE PTR [eax+edi*2],0x8c
  41700b:	aas    
  41700c:	ins    DWORD PTR es:[edi],dx
  41700d:	out    0x62,al
  41700f:	iret   
  417010:	dec    edi
  417011:	gs (bad) 
  417013:	out    0xd3,al
  417015:	xlat   BYTE PTR ds:[ebx]
  417016:	cld    
  417017:	not    BYTE PTR ds:0xc8620733
  41701d:	in     al,dx
  41701e:	test   DWORD PTR [ebx],ebp
  417020:	call   DWORD PTR [ebx+edi*8-0x6d]
  417024:	ret    
  417025:	mov    ah,0x93
  417027:	imul   ecx,DWORD PTR [eax],0xffffffa4
  41702a:	popa   
  41702b:	push   cs
  41702c:	outs   dx,BYTE PTR ds:[esi]
  41702d:	inc    ebx
  41702e:	(bad)  
  41702f:	fdiv   st(7),st
  417031:	in     eax,dx
  417032:	(bad)  
  417033:	out    0x7a,al
  417035:	xor    BYTE PTR [edi],cl
  417037:	call   0xf6b3:0x82
  41703e:	xchg   esi,eax
  41703f:	xor    BYTE PTR [eax+0x6f],0xe5
  417043:	ins    DWORD PTR es:[edi],dx
  417044:	jle    0x416ffd
  417046:	(bad)  
  417048:	in     al,dx
  417049:	popa   
  41704a:	mov    esi,0xe762e881
  41704f:	test   BYTE PTR [edx],0xb6
  417052:	push   eax
  417053:	adc    ebx,ecx
  417055:	push   esi
  417056:	xor    eax,0x6154c4
  41705b:	aas    
  41705c:	dec    edi
  41705d:	arpl   bp,dx
  41705f:	push   0xffffffd7
  417061:	popa   
  417062:	je     0x417065
  417064:	add    al,BYTE PTR [edi+0x50]
  417067:	cmp    DWORD PTR [edi],ebx
  417069:	sar    ah,cl
  41706b:	pop    ds
  41706c:	das    
  41706d:	arpl   WORD PTR [ebx],dx
  41706f:	imul   edi,esp,0x8f69ffc6
  417075:	popa   
  417076:	je     0x41705d
  417078:	call   0xfe7b:0xa8eee946
  41707f:	outs   dx,BYTE PTR ds:[esi]
  417080:	xchg   esi,eax
  417081:	adc    al,0xc0
  417083:	(bad)  
  417084:	cs mov edi,0x6eb2bc6
  41708a:	push   ebx
  41708b:	bound  edx,QWORD PTR [ebx-0x2e]
  41708e:	dec    esi
  41708f:	mov    edx,0x9ef08ebe
  417094:	jne    0x4170ee
  417096:	je     0x417087
  417098:	mov    edx,0xa6e96a09
  41709d:	bound  edx,QWORD PTR [ebx]
  41709f:	cmc    
  4170a0:	add    BYTE PTR [eax],al
  4170a2:	add    dh,bl
  4170a4:	(bad)  
  4170a5:	jmp    FWORD PTR [ecx+0x2b]
  4170a8:	adc    eax,DWORD PTR [ecx-0x42f8b77c]
  4170ae:	jmp    0xb64177b3
  4170b3:	dec    eax
  4170b4:	inc    edi
  4170b5:	dec    ecx
  4170b6:	push   es
  4170b7:	push   cs
  4170b8:	nop
  4170b9:	fsub   DWORD PTR [edx+ebp*1+0x14]
  4170bd:	test   BYTE PTR [ebp-0x9],ah
  4170c0:	push   es
  4170c1:	add    BYTE PTR [edx-0x6c],ch
  4170c4:	or     eax,0xece15d00
  4170c9:	(bad)  
  4170ca:	fnstsw WORD PTR [ebp+0xd]
  4170cd:	std    
  4170ce:	cld    
  4170cf:	add    al,bh
  4170d1:	aas    
  4170d2:	jmp    0x4075ec
  4170d7:	dec    edx
  4170d8:	add    eax,0x48c76371
  4170dd:	stc    
  4170de:	push   eax
  4170df:	ror    DWORD PTR [eax+0x5],1
  4170e2:	push   edi
  4170e3:	jmp    0xc349e0db
  4170e8:	jo     0x4170e3
  4170ea:	(bad)  
  4170eb:	aas    
  4170ec:	jne    0x4170ff
  4170ee:	inc    eax
  4170ef:	sbb    cl,BYTE PTR [eax-0x202f8b40]
  4170f5:	inc    eax
  4170f6:	cld    
  4170f7:	pop    ebp
  4170f9:	jae    0x417134
  4170fb:	or     ecx,DWORD PTR [eax-0xb]
  4170fe:	add    DWORD PTR [edi],0x1a0cc9ed
  417104:	add    eax,0x3773
  417109:	add    BYTE PTR [edi-0x7e478c25],cl
  41710f:	mov    ds:0xbc120301,eax
  417114:	ror    DWORD PTR [edx+0x35],0xf3
  417118:	add    eax,0xffffff9e
  41711b:	sub    ebx,edi
  41711d:	jne    0x417135
  41711f:	fild   WORD PTR ds:0x4f089c03
  417125:	push   eax
  417126:	adc    eax,0x8a162ff9
  41712b:	add    al,0x87
  41712d:	inc    ebp
  41712e:	(bad)  
  41712f:	xchg   ah,al
  417131:	or     al,0x9b
  417133:	dec    edx
  417134:	add    ebx,ebp
  417136:	inc    ebp
  417137:	aaa    
  417138:	in     eax,0x5f
  41713a:	popa   
  41713b:	repz cli 
  41713d:	mov    al,0x8b
  41713f:	mov    edi,0x38f2530e
  417144:	dec    eax
  417145:	call   DWORD PTR [ebp-0x728b0976]
  41714b:	in     eax,dx
  41714c:	xor    eax,0xfc9fc0e8
  417151:	push   ebx
  417153:	sti    
  417154:	inc    ebx
  417155:	pop    ebp
  417156:	lds    edx,FWORD PTR [ebx+edi*1]
  417159:	ret    0x6deb
  41715c:	ror    BYTE PTR [eax+0x1457ed47],1
  417162:	mov    al,ds:0xa0d93500
  417167:	lds    eax,FWORD PTR [ebx-0x24920d00]
  41716d:	add    DWORD PTR [eax],eax
  41716f:	add    BYTE PTR [eax],al
  417171:	mov    al,ds:0xf36802f3
  417176:	ins    DWORD PTR es:[edi],dx
  417177:	add    DWORD PTR [eax+0x24],eax
  41717a:	sti    
  41717b:	test   DWORD PTR [edi+0x136988be],0xffc13be3
  417185:	jns    0x41715d
  417187:	test   ch,bh
  417189:	add    al,0x41
  41718b:	jge    0x417128
  41718d:	rep ins DWORD PTR es:[edi],dx
  41718f:	add    DWORD PTR [esi+0x35],edx
  417192:	outs   dx,BYTE PTR ds:[esi]
  417193:	adc    DWORD PTR [eax],eax
  417195:	repz lahf 
  417197:	pop    ecx
  417198:	in     al,0x39
  41719a:	shr    DWORD PTR [eax-0x79],1
  41719d:	and    ch,BYTE PTR ss:0x7c9b5fc1
  4171a4:	pop    ebx
  4171a5:	retf   
  4171a6:	push   esi
  4171a7:	enter  0x3f0f,0x3f
  4171ab:	(bad)  
  4171ac:	cld    
  4171ad:	inc    esi
  4171ae:	pop    esi
  4171af:	push   0x13
  4171b1:	jecxz  0x41720f
  4171b3:	sar    edi,0xef
  4171b6:	imul   eax,DWORD PTR [eax+eax*1],0xfffffff3
  4171ba:	jp     0x417189
  4171bc:	mov    dh,BYTE PTR [esi]
  4171be:	pop    esi
  4171bf:	ror    DWORD PTR [eax-0x330a9d2],1
  4171c5:	push   es
  4171c6:	bound  ebp,QWORD PTR [edx+0x70]
  4171c9:	sti    
  4171ca:	jo     0x4171dc
  4171cc:	nop
  4171cd:	out    0x6,al
  4171cf:	daa    
  4171d0:	add    al,0x70
  4171d2:	inc    esi
  4171d3:	push   ebx
  4171d4:	sub    BYTE PTR [eax],al
  4171d6:	add    BYTE PTR [eax],al
  4171d8:	jp     0x4171a3
  4171da:	(bad)  
  4171db:	cs xor bl,dl
  4171de:	add    BYTE PTR ds:0xe8685eb0,al
  4171e4:	pop    esp
  4171e5:	push   es
  4171e6:	out    0xa3,eax
  4171e8:	repz xlat BYTE PTR ds:[ebx]
  4171ea:	call   esi
  4171ec:	jns    0x4171bf
  4171ee:	mov    edx,0x1c5facd4
  4171f3:	jo     0x417193
  4171f5:	pop    edi
  4171f6:	hlt    
  4171f7:	daa    
  4171f8:	add    edi,eax
  4171fa:	out    0x80,al
  4171fc:	xor    ebx,edx
  4171fe:	repz jle 0x4171b1
  417201:	push   esi
  417202:	ret    0x8c0
  417205:	fimul  DWORD PTR [ecx+0x5e]
  417208:	cli    
  417209:	mov    bh,0x75
  41720b:	adc    bh,dl
  41720d:	hlt    
  41720e:	es add al,0x35
  417211:	leave  
  417212:	gs add al,0xf6
  417215:	fcom   DWORD PTR [edx+0x5b]
  417218:	jnp    0x4171eb
  41721a:	push   ebp
  41721b:	push   0x3e
  41721d:	pop    esi
  41721e:	hlt    
  41721f:	mov    ds:0xc9e6c701,eax
  417224:	sbb    al,0xbc
  417226:	cmp    eax,0xbc5df4f0
  41722b:	test   esp,0xbe6a74b5
  417231:	xchg   ecx,eax
  417232:	lods   al,BYTE PTR ds:[esi]
  417233:	push   0x16
  417235:	ret    0x452f
  417238:	inc    DWORD PTR [esi]
  41723a:	mov    esp,0x7e
  41723f:	xchg   edi,eax
  417240:	mov    bh,bl
  417242:	or     al,BYTE PTR [edx-0x4b]
  417245:	popf   
  417246:	push   0x20
  417248:	or     ebp,DWORD PTR [eax+esi*8-0x68]
  41724c:	outs   dx,DWORD PTR ds:[esi]
  41724d:	add    BYTE PTR [ecx-0x50],dh
  417250:	pop    esi
  417251:	std    
  417252:	gs xor bl,dl
  417255:	dec    ecx
  417256:	imul   ecx,DWORD PTR [eax+eiz*2-0xf93abfe],0x8c63603
  417261:	xor    esi,ecx
  417263:	retf   0xfd9
  417266:	jb     0x4172ac
  417268:	push   es
  417269:	std    
  41726a:	xor    al,0xdf
  41726c:	pop    ebx
  41726d:	jae    0x417234
  41726f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417270:	add    eax,0x82caaefc
  417275:	rcr    BYTE PTR ds:0x99735be3,0xae
  41727c:	inc    ebx
  41727d:	mov    DWORD PTR [edi-0x71035f39],esp
  417283:	mov    al,BYTE PTR [edx-0x68eb0240]
  417289:	call   DWORD PTR [ecx+0x76d918f5]
  41728f:	adc    al,0x72
  417291:	call   0xfd9cb171
  417296:	data16 add al,0x6e
  417299:	call   0xfd9c2191
  41729e:	arpl   WORD PTR [esi],bp
  4172a0:	mov    esp,0xb25d
  4172a5:	add    BYTE PTR [ecx],bl
  4172a7:	dec    ecx
  4172a8:	or     al,0xe9
  4172aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ab:	mov    gs,esp
  4172ad:	cwde   
  4172ae:	mov    eax,ds:0xb0be03e5
  4172b3:	pop    ebp
  4172b4:	(bad)  
  4172b5:	aam    0xf4
  4172b7:	or     eax,0xca39e940
  4172bc:	mul    DWORD PTR [edi+esi*1-0x26]
  4172c0:	add    DWORD PTR [eax],esp
  4172c2:	cs mov eax,0xd4008154
  4172c8:	aas    
  4172c9:	add    BYTE PTR [edx-0x7200cfc7],cl
  4172cf:	or     al,0xbc
  4172d1:	adc    bl,BYTE PTR [edx+0x9]
  4172d4:	xchg   eax,ebx
  4172d6:	pop    ss
  4172d7:	int3   
  4172d8:	jae    0x41731e
  4172da:	and    al,BYTE PTR [edi]
  4172dc:	adc    BYTE PTR [eax],al
  4172de:	pop    edx
  4172df:	cmp    eax,DWORD PTR ds:0xa6e307ff
  4172e5:	inc    ebx
  4172e6:	dec    edx
  4172e7:	out    dx,al
  4172e8:	adc    BYTE PTR [ecx+edi*1],al
  4172eb:	dec    ecx
  4172ec:	std    
  4172ed:	mov    dh,BYTE PTR [edx]
  4172ef:	fdiv   st(2),st
  4172f1:	je     0x4172e4
  4172f3:	cmp    BYTE PTR [edx+0x54398e45],cl
  4172f9:	mov    esi,0xfffd5e8d
  4172fe:	add    BYTE PTR [ebx],al
  417300:	test   DWORD PTR [ebp+0x7e],esi
  417303:	out    dx,al
  417304:	into   
  417305:	test   DWORD PTR [edx+0x6c],ecx
  417308:	or     ecx,DWORD PTR [ebx-0x39000000]
  41730e:	out    dx,al
  41730f:	ss (bad) 
  417311:	sbb    eax,0x16c6c342
  417316:	push   es
  417317:	add    bl,ch
  417319:	adc    al,0x36
  41731b:	in     eax,0x8f
  41731d:	inc    ebx
  41731e:	out    dx,al
  41731f:	cli    
  417320:	pop    esi
  417321:	dec    ebp
  417322:	ins    DWORD PTR es:[edi],dx
  417323:	cmc    
  417324:	jmp    edi
  417326:	inc    esp
  417327:	cmovo  ecx,edx
  41732a:	fcmovnb st,st(2)
  41732c:	pop    edi
  41732d:	xchg   ecx,eax
  41732e:	and    DWORD PTR [edi+0x4cb44155],edi
  417334:	xor    DWORD PTR [edi+0x5155ffe4],0x2d
  41733b:	fs adc eax,0x8d53088a
  417341:	push   edi
  417342:	in     al,0x4f
  417344:	push   0xfffffff3
  417346:	ins    DWORD PTR es:[edi],dx
  417347:	(bad)  [ecx]
  417349:	pushf  
  41734a:	jae    0x417345
  41734c:	cld    
  41734d:	mov    ebp,0x3b7340eb
  417352:	inc    edi
  417353:	mov    esi,0x68b0fffb
  417358:	adc    ebx,ebx
  41735a:	ds sar edi,0x71
  41735e:	jmp    0xbed9:0x2b72
  417364:	sti    
  417365:	mov    bl,0xb9
  417367:	xor    eax,ebp
  417369:	add    esp,DWORD PTR [edi]
  41736b:	gs std 
  41736d:	push   0xfd7f46
  417372:	add    BYTE PTR [eax],al
  417374:	mov    DWORD PTR [edi+esi*2],0xccfe4743
  41737b:	imul   edx,DWORD PTR [ecx],0x3407efad
  417381:	pushf  
  417382:	cmp    eax,0x8913f2f2
  417388:	scas   al,BYTE PTR es:[edi]
  417389:	popa   
  41738a:	add    al,0xa7
  41738d:	bound  edi,QWORD PTR [edx+0x4b]
  417390:	pop    ss
  417391:	xlat   BYTE PTR ds:[ebx]
  417392:	sti    
  417393:	mov    BYTE PTR [ecx+edi*2],dh
  417396:	cld    
  417397:	push   esp
  417398:	sbb    edi,DWORD PTR [esp+edi*4]
  41739b:	cld    
  41739c:	cld    
  41739d:	mov    al,ds:0x16955d41
  4173a2:	inc    edx
  4173a3:	or     bl,dh
  4173a5:	xchg   edx,eax
  4173a6:	jp     0x417394
  4173a8:	inc    edx
  4173a9:	icebp  
  4173aa:	fdivp  st(3),st
  4173ac:	repz xchg ebx,eax
  4173ae:	jp     0x4173e3
  4173b0:	pop    edi
  4173b1:	cmp    eax,ecx
  4173b3:	jmp    DWORD PTR ds:0x23fbbeeb
  4173b9:	dec    eax
  4173ba:	add    ebp,edi
  4173bc:	inc    esi
  4173bd:	cmp    ah,BYTE PTR [esi+0x73]
  4173c0:	jmp    0x4173c8
  4173c2:	es dec esi
  4173c4:	jo     0x41740c
  4173c6:	xchg   esp,eax
  4173c7:	es fadd st(1),st
  4173ca:	adc    dh,al
  4173cc:	ficomp DWORD PTR [ebx-0xc]
  4173cf:	or     esp,esp
  4173d1:	(bad)  
  4173d2:	out    0x82,al
  4173d4:	mov    esp,eax
  4173d6:	jae    0x4173ee
  4173d8:	add    BYTE PTR [eax],al
  4173da:	add    BYTE PTR [edx-0x3f],bh
  4173dd:	repnz xor BYTE PTR [ebx-0x74e18cf8],0x7a
  4173e5:	das    
  4173e6:	outs   dx,BYTE PTR ds:[si]
  4173e8:	(bad)  
  4173e9:	fild   WORD PTR [eax+0x78f2d266]
  4173ef:	mov    al,0x5a
  4173f1:	aaa    
  4173f2:	iret   
  4173f3:	push   edi
  4173f4:	shl    edx,1
  4173f6:	data16 ror BYTE PTR [esi],0xbe
  4173fa:	dec    ebp
  4173fb:	jb     0x41745b
  4173fd:	call   0xa6d164f2
  417402:	pop    edx
  417403:	jmp    0x4173b8
  417405:	mov    ds,WORD PTR [eax+0x329e5bbb]
  41740b:	xor    edi,DWORD PTR [ebx+0xe313d34]
  417411:	out    0xd0,eax
  417413:	imul   ebp,DWORD PTR [edx+0x18],0xffffffd5
  417417:	jae    0x4173fa
  417419:	jp     0x41741e
  41741b:	mov    ds:0x80671db4,al
  417420:	or     ch,BYTE PTR [esi+0x10]
  417423:	jnp    0x41741d
  417425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417426:	add    ebp,esi
  417428:	aam    0xf2
  41742a:	jp     0x41744c
  41742c:	mov    ds:0x8ddcc3fc,eax
  417431:	das    
  417432:	js     0x417464
  417434:	pop    ebx
  417435:	xchg   edi,eax
  417436:	inc    ax
  417438:	or     edi,DWORD PTR [esi+0x66]
  41743b:	mov    BYTE PTR [edi],0x0
  41743e:	jmp    0xad417443
  417443:	pop    ebx
  417444:	jae    0x417427
  417446:	dec    ebp
  417447:	xor    DWORD PTR [ebx-0x3415cd7],eax
  41744d:	hlt    
  41744e:	clc    
  41744f:	or     DWORD PTR [eax-0x17],eax
  417452:	jno    0x4174b3
  417454:	jp     0x4173ea
  417456:	mov    edi,0xd905438f
  41745b:	ds or  eax,0x73c731a6
  417461:	scas   eax,DWORD PTR es:[edi]
  417462:	sbb    dl,bh
  417464:	inc    edi
  417465:	out    dx,al
  417466:	push   cs
  417467:	add    BYTE PTR [ebx-0x1f],0xec
  41746b:	inc    esi
  41746c:	je     0x417491
  41746e:	xor    dh,BYTE PTR [edi-0x35a4a304]
  417474:	cld    
  417475:	hlt    
  417476:	in     al,0x9
  417478:	inc    eax
  417479:	jmp    0x6c554a55
  41747e:	test   BYTE PTR [esi+0x50],bl
  417481:	mov    dh,0x4c
  417483:	push   edx
  417484:	push   ebp
  417485:	scas   al,BYTE PTR es:[edi]
  417486:	inc    esp
  417487:	add    bh,ch
  417489:	mov    edi,0x13ff5f72
  41748e:	add    BYTE PTR [eax+0x469df943],dl
  417494:	je     0x41747a
  417496:	fwait
  417497:	int    0xfb
  417499:	jo     0x4174aa
  41749b:	pop    DWORD PTR [ebx-0x7f]
  41749e:	stos   BYTE PTR es:[edi],al
  41749f:	or     al,0xfd
  4174a1:	cld    
  4174a2:	mov    BYTE PTR [esi+0x11],ch
  4174a5:	and    DWORD PTR [eax],eax
  4174a7:	add    BYTE PTR [eax],al
  4174a9:	mov    ds,WORD PTR [ebx+0x31]
  4174ac:	sub    DWORD PTR [esi+0x313058bb],esi
  4174b2:	idiv   edi
  4174b4:	mov    ebx,0x3d816b5b
  4174b9:	(bad)  [esi+0x2a410055]
  4174bf:	fs adc eax,0x6a53059a
  4174c5:	into   
  4174c6:	dec    esi
  4174c7:	mov    al,BYTE PTR [ebp+0x6]
  4174ca:	xor    ecx,DWORD PTR [edx+0x67330e45]
  4174d0:	adc    eax,0x89056a05
  4174d5:	addr16 loope 0x4174d2
  4174d8:	(bad)  
  4174d9:	adc    DWORD PTR [edx],esp
  4174db:	jl     0x4174f2
  4174dd:	pop    edx
  4174de:	add    eax,0x9a011ae7
  4174e3:	icebp  
  4174e4:	test   edx,ecx
  4174e6:	push   esi
  4174e7:	push   ds
  4174e8:	lea    edx,[edi-0x1f]
  4174eb:	dec    esp
  4174ec:	lea    esp,[edi]
  4174ee:	xlat   BYTE PTR ds:[ebx]
  4174ef:	dec    esp
  4174f0:	push   0x5f
  4174f2:	xor    eax,0xdc524586
  4174f7:	pop    eax
  4174f8:	cld    
  4174f9:	and    eax,0x4275facb
  4174fe:	fadd   QWORD PTR [eax-0x8]
  417501:	test   edx,ecx
  417503:	jle    0x417582
  417505:	add    BYTE PTR ds:0x40e5d871,0x58
  41750c:	leave  
  41750d:	add    BYTE PTR [eax],al
  41750f:	add    BYTE PTR [eax+0x59],bl
  417512:	std    
  417513:	push   esp
  417514:	mov    eax,ds:0x7d514cb1
  417519:	cwde   
  41751a:	or     DWORD PTR [eax],eax
  41751c:	or     al,BYTE PTR ds:0x161e7460
  417522:	shr    bl,0xf6
  417525:	xchg   DWORD PTR [ecx-0x8],esp
  417528:	or     dh,BYTE PTR [esi]
  41752a:	push   ebx
  41752b:	mov    edi,DWORD PTR [edi]
  41752d:	jns    0x417540
  41752f:	inc    eax
  417530:	fidivr DWORD PTR [esi]
  417532:	std    
  417533:	mov    WORD PTR [edi-0xc72b014],cs
  417539:	stos   BYTE PTR es:[edi],al
  41753a:	fs push eax
  41753c:	aam    0x33
  41753e:	cmc    
  41753f:	cld    
  417540:	inc    esi
  417541:	push   esi
  417542:	fs (bad) 
  417544:	outs   dx,BYTE PTR ds:[esi]
  417545:	cs out dx,al
  417547:	inc    ebp
  417548:	mov    esp,0x330f093b
  41754d:	outs   dx,BYTE PTR ds:[esi]
  41754e:	cmp    al,0x29
  417551:	jnp    0x41757b
  417553:	mov    DWORD PTR [esi],ebp
  417555:	shl    DWORD PTR es:[ebx-0x1a],0x5
  41755a:	das    
  41755b:	inc    ebp
  41755c:	xchg   esp,eax
  41755d:	or     DWORD PTR [eax-0x28],edi
  417560:	jbe    0x417587
  417562:	in     eax,dx
  417563:	sub    DWORD PTR [ecx],ebx
  417565:	outs   dx,BYTE PTR ds:[esi]
  417566:	jbe    0x4175ab
  417568:	jnp    0x4175e8
  41756a:	sar    ah,1
  41756c:	(bad)  
  41756d:	cmp    DWORD PTR [ebx+esi*2-0x5],esp
  417571:	pusha  
  417572:	cmp    al,BYTE PTR [ecx+0x6b000000]
  417578:	outs   dx,DWORD PTR ds:[esi]
  417579:	fmul   DWORD PTR [edi]
  41757b:	push   0x3382f42b
  417580:	mov    dl,0x6
  417582:	mov    DWORD PTR [esi+0x78088b45],edi
  417588:	lods   eax,DWORD PTR ds:[esi]
  417589:	ins    DWORD PTR es:[edi],dx
  41758a:	or     BYTE PTR [eax+0x34451745],ah
  417590:	test   eax,0xc4cdc015
  417595:	dec    edx
  417596:	ret    0x6df7
  417599:	mov    eax,0x6fed0f88
  41759e:	adc    al,al
  4175a0:	ud1    esi,DWORD PTR [eax]
  4175a3:	or     al,0xd5
  4175a5:	push   ebx
  4175a6:	aaa    
  4175a7:	xchg   BYTE PTR [ebp-0x2b],dl
  4175aa:	dec    ecx
  4175ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ac:	add    eax,0x6df3004c
  4175b1:	bound  esi,QWORD PTR [ebx-0x5]
  4175b4:	push   es
  4175b5:	je     0x417578
  4175b7:	call   0xdcc7362a
  4175bc:	push   edi
  4175bd:	pusha  
  4175be:	leave  
  4175bf:	loopne 0x4175dc
  4175c1:	adc    esi,DWORD PTR es:[edi-0x6a]
  4175c5:	call   0xa4cd68cd
  4175ca:	pop    edi
  4175cb:	jb     0x41762b
  4175cd:	ficom  WORD PTR [edx]
  4175cf:	jno    0x417573
  4175d1:	call   0xfe2e68d9
  4175d6:	push   ss
  4175d7:	sar    DWORD PTR [ebp+0x5515],0x0
  4175de:	fisubr DWORD PTR [edi]
  4175e0:	out    0x88,al
  4175e2:	add    BYTE PTR ds:0xed2603e7,0x8a
  4175e9:	bound  eax,QWORD PTR [eax]
  4175eb:	(bad)  
  4175ed:	rol    DWORD PTR [ebp+ecx*4+0x248b5fac],0x69
  4175f5:	add    eax,0x91096bf3
  4175fa:	mov    al,0x5a
  4175fc:	aaa    
  4175fd:	ins    BYTE PTR es:[edi],dx
  4175fe:	js     0x417652
  417600:	(bad)  
  417601:	bound  ebp,QWORD PTR [ecx+eax*8-0x2e]
  417605:	push   ds
  417606:	ss pop es
  417608:	imul   esi,ecx,0x45
  41760b:	push   edi
  41760c:	out    0x90,eax
  41760e:	mov    al,0x5e
  417610:	pop    ss
  417611:	in     al,dx
  417612:	pop    esp
  417613:	push   es
  417614:	out    0x3,eax
  417616:	sbb    ecx,DWORD PTR [esi]
  417618:	xchg   edi,eax
  417619:	bound  esp,QWORD PTR [esi]
  41761b:	mov    ebx,DWORD PTR [edi+0x6b071e88]
  417621:	retf   
  417622:	adc    eax,0x8886e757
  417627:	pop    esi
  417628:	mov    bh,0x12
  41762a:	jno    0x417644
  41762c:	call   0xcd6934
  417631:	sub    al,0x97
  417633:	mov    cl,0xe7
  417635:	cmc    
  417636:	test   eax,0x306cfd53
  41763b:	add    al,0x8e
  41763d:	or     al,0xf6
  41763f:	push   es
  417640:	add    BYTE PTR [edx+0x0],ch
  417643:	add    BYTE PTR [eax],al
  417645:	ror    DWORD PTR [esi],cl
  417647:	add    ch,dl
  417649:	jmp    0x417607
  41764b:	out    0x21,eax
  41764d:	cli    
  41764e:	push   es
  41764f:	add    BYTE PTR [ebp+0x30],ah
  417652:	ficom  DWORD PTR [edx+edi*8]
  417655:	sbb    dl,BYTE PTR [ebx+esi*2+0x35]
  417659:	sbb    bh,dl
  41765b:	inc    ebp
  41765c:	adc    DWORD PTR es:[edi+eiz*8-0x2ac556d],edi
  417664:	bound  ebp,QWORD PTR [edx]
  417666:	outs   dx,BYTE PTR ds:[esi]
  417667:	adc    eax,0xfd06f0e8
  41766c:	jl     0x41768a
  41766e:	add    BYTE PTR [ebx-0x3],0x9
  417672:	xlat   BYTE PTR ds:[ebx]
  417673:	repz not BYTE PTR [edx]
  417676:	push   esp
  417677:	jae    0x41766a
  417679:	stos   BYTE PTR es:[edi],al
  41767a:	outs   dx,BYTE PTR ds:[esi]
  41767b:	rcr    dl,1
  41767d:	rcl    BYTE PTR [ebx-0x77],cl
  417680:	and    al,0xd3
  417682:	fistp  QWORD PTR [edi+0x74476de5]
  417688:	fstp   st(0)
  41768a:	add    DWORD PTR [esi-0x3a],eax
  41768d:	ror    BYTE PTR [ebp+0x4775f143],cl
  417693:	jae    0x417681
  417695:	inc    esi
  417696:	push   esp
  417697:	pop    esi
  417698:	ret    0x8253
  41769b:	pop    esi
  41769c:	icebp  
  41769d:	pop    edi
  41769e:	push   ebx
  41769f:	adc    ecx,DWORD PTR [ebp+0x62001625]
  4176a5:	test   eax,0xea245e
  4176aa:	add    BYTE PTR [eax],al
  4176ac:	lock push es
  4176ae:	mov    DWORD PTR [eax],eax
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	scas   al,BYTE PTR es:[edi]
  4176b2:	test   BYTE PTR [esi+0x22],al
  4176b5:	add    DWORD PTR [ecx-0x4],0xffffff93
  4176b9:	inc    eax
  4176ba:	sub    DWORD PTR [ebx+0x46850317],ecx
  4176c0:	or     ah,bl
  4176c2:	mov    esi,ebp
  4176c4:	retf   0x2f09
  4176c7:	shl    BYTE PTR ds:0x978bf93e,cl
  4176cd:	mov    cl,0x4e
  4176cf:	mov    DWORD PTR [ecx+ebp*1-0x7e09b97b],ebp
  4176d6:	push   esi
  4176d7:	xor    al,0xfd
  4176d9:	pop    ebp
  4176da:	in     eax,dx
  4176db:	adc    bl,BYTE PTR [edx+0x9]
  4176de:	das    
  4176df:	call   DWORD PTR [ebx-0x578ac699]
  4176e5:	mov    ss,WORD PTR [edi+edx*2+0x55]
  4176e9:	out    0x10,al
  4176eb:	mov    eax,0x88fd4988
  4176f0:	push   esp
  4176f1:	cmc    
  4176f2:	mov    DWORD PTR ss:[edi],0xd4e85459
  4176f9:	dec    ebp
  4176fa:	cld    
  4176fb:	inc    DWORD PTR [ebp+0x4d45cfe1]
  417701:	out    0x69,al
  417703:	(bad)  
  417704:	mov    dl,0xe3
  417706:	jp     0x417707
  417708:	mov    ah,0x26
  41770a:	sti    
  41770b:	adc    eax,0x3d5b86
  417710:	add    BYTE PTR [eax],al
  417712:	add    BYTE PTR [edi+0x498b3547],bh
  417718:	bnd ret 0xe874
  41771c:	test   DWORD PTR [ecx+0x8],ecx
  41771f:	or     ebx,DWORD PTR [ebx+0x583a15fc]
  417725:	cmp    eax,0x73c99700
  41772a:	adc    esi,ebx
  41772c:	(bad)  
  41772e:	pop    es
  41772f:	lock pop esi
  417731:	add    DWORD PTR [eax],eax
  417733:	jg     0x41778e
  417735:	pusha  
  417736:	xor    esp,edi
  417738:	cmp    DWORD PTR [ecx-0x75a04cee],esp
  41773e:	cmp    DWORD PTR [edx],ebp
  417740:	cdq    
  417741:	(bad)  
  417742:	and    bh,BYTE PTR [eax+0x6c]
  417745:	add    eax,0xbc364551
  41774a:	pop    ebx
  41774b:	xor    bl,BYTE PTR [esi-0x17]
  41774e:	dec    esp
  417750:	add    ax,bp
  417753:	mov    edx,0x7700010d
  417758:	push   ds
  417759:	(bad)  
  41775a:	or     BYTE PTR [ecx+0x5e],cl
  41775d:	imul   esi,DWORD PTR [esi+esi*1+0x25],0xf8f36a60
  417765:	jnp    0x417798
  417767:	pushf  
  417768:	popf   
  417769:	imul   ebp,DWORD PTR [eax+0x2e],0x9b555ffd
  417770:	add    dh,0xfc
  417773:	test   BYTE PTR [ecx+0x4041],dl
  417779:	add    BYTE PTR [eax+0x7f73602f],cl
  41777f:	push   es
  417780:	mov    dh,0x42
  417782:	ins    BYTE PTR es:[edi],dx
  417783:	gs mov ch,0xe7
  417786:	mov    ah,0x22
  417788:	pop    ebp
  417789:	std    
  41778a:	jo     0x417722
  41778c:	pop    ebp
  41778d:	pop    ebp
  41778e:	mov    ch,0x18
  417790:	dec    ebx
  417791:	ret    0x5df7
  417794:	mov    eax,0xb2ef5788
  417799:	push   eax
  41779a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41779b:	loop   0x41777a
  41779d:	pop    es
  41779e:	pushf  
  41779f:	out    0xde,al
  4177a1:	imul   DWORD PTR [ebx+edi*1]
  4177a4:	ins    DWORD PTR es:[edi],dx
  4177a5:	adc    dh,BYTE PTR [ebx+0x3a12e706]
  4177ab:	push   cs
  4177ac:	cmp    eax,0x61da9f2c
  4177b1:	(bad)  
  4177b2:	fmul   DWORD PTR [edi]
  4177b4:	stos   BYTE PTR es:[edi],al
  4177b5:	fcomp  DWORD PTR [ecx-0x7a9fdb83]
  4177bb:	sbb    al,0x7e
  4177bd:	mov    al,0x7f
  4177c0:	sub    eax,0x76392218
  4177c5:	(bad)  
  4177c6:	sbb    BYTE PTR [esi-0x43],bh
  4177c9:	pop    ss
  4177ca:	dec    edx
  4177cb:	cmp    ebx,ebp
  4177cd:	add    bh,BYTE PTR ds:0x45a6217
  4177d3:	mov    ah,0xde
  4177d5:	xlat   BYTE PTR ds:[ebx]
  4177d6:	or     al,0x54
  4177d8:	fmul   QWORD PTR [edi]
  4177da:	loop   0x4177a2
  4177dc:	out    0x2a,al
  4177de:	add    BYTE PTR [eax],al
  4177e0:	add    BYTE PTR [esi],ch
  4177e2:	push   ebx
  4177e4:	arpl   WORD PTR [edx-0xb2d18f6],ax
  4177ea:	push   ebx
  4177eb:	lods   al,BYTE PTR ds:[esi]
  4177ec:	pop    edi
  4177ed:	push   0xffffffc9
  4177ef:	sbb    bl,BYTE PTR [ebx]
  4177f1:	sub    eax,0x8e499923
  4177f6:	(bad)  [esi]
  4177f8:	imul   edx,ebp,0x7d
  4177fb:	out    0x8c,al
  4177fd:	push   ds
  4177fe:	or     esi,DWORD PTR [eax-0x41]
  417801:	in     al,dx
  417802:	jg     0x4177b1
  417804:	pop    ss
  417805:	fiadd  DWORD PTR [esi-0x2a]
  417808:	add    ch,BYTE PTR [ebp-0x5308aee2]
  41780e:	push   ebx
  41780f:	push   esp
  417810:	or     al,0x56
  417812:	stc    
  417813:	push   ss
  417814:	test   BYTE PTR [edi+eax*1],0x6a
  417818:	inc    edi
  417819:	not    DWORD PTR [ebx+0x3c]
  41781c:	pop    esp
  41781d:	ds stc 
  41781f:	mov    dh,0xf1
  417821:	hlt    
  417822:	push   es
  417823:	add    BYTE PTR [ecx-0x9],bh
  417826:	pop    ebp
  417827:	pop    es
  417828:	push   ss
  417829:	(bad)  
  41782a:	imul   edi
  41782c:	sti    
  41782d:	xor    BYTE PTR [ebx+0x2f],dl
  417830:	test   eax,0xabc6ae55
  417835:	hlt    
  417836:	push   es
  417837:	push   ebx
  417838:	bound  edx,QWORD PTR [ebp+eax*4-0x45be2614]
  41783f:	lds    esp,FWORD PTR [esp+edx*4]
  417842:	push   es
  417843:	std    
  417844:	fadd   QWORD PTR [eax]
  417846:	add    BYTE PTR [eax],al
  417848:	cld    
  417849:	idiv   DWORD PTR [edi]
  41784b:	jmp    0xafccc7c9
  417850:	call   0x40e5ff0b
  417855:	push   esp
  417856:	adc    eax,DWORD PTR [ebp-0x3e]
  417859:	adc    al,BYTE PTR [eax]
  41785b:	sbb    cl,BYTE PTR [eax]
  41785d:	mov    bl,BYTE PTR [ebx+0x41]
  417860:	fbstp  TBYTE PTR [eax+0x7f95b72b]
  417866:	inc    ebx
  417867:	loope  0x4178da
  417869:	inc    edi
  41786a:	add    al,0x60
  41786c:	mov    ebx,0xe8c48756
  417871:	jg     0x4178b9
  417873:	ror    DWORD PTR [edx-0x77527509],1
  417879:	push   es
  41787a:	push   eax
  41787b:	push   cs
  41787c:	stos   DWORD PTR es:[edi],eax
  41787d:	push   esi
  41787e:	std    
  41787f:	(bad)  
  417881:	clc    
  417882:	aas    
  417883:	jmp    0x6c4dc3f9
  417888:	mov    al,0xd5
  41788a:	inc    esp
  41788b:	bound  ebp,QWORD PTR [esi]
  41788d:	and    al,BYTE PTR [ecx]
  41788f:	sub    al,0xef
  417891:	xchg   BYTE PTR [ebx-0x13],bh
  417894:	lock aad 0xb
  417897:	sbb    bh,BYTE PTR [eax+0x37600889]
  41789d:	push   es
  41789e:	xchg   DWORD PTR [eax],eax
  4178a0:	add    al,BYTE PTR [ebx]
  4178a2:	out    0x2b,eax
  4178a4:	rol    DWORD PTR [edx],0x81
  4178a7:	leave  
  4178a8:	out    dx,al
  4178a9:	test   BYTE PTR [esi+0xd7],0xf1
  4178b0:	adc    eax,0x57a2fa7d
  4178b5:	std    
  4178b6:	(bad)  
  4178b7:	clc    
  4178b8:	push   ecx
  4178b9:	cld    
  4178ba:	inc    eax
  4178bb:	push   ds
  4178bc:	pusha  
  4178bd:	add    bl,BYTE PTR [ecx-0x6d]
  4178c0:	repnz xor al,0x48
  4178c3:	push   cs
  4178c4:	cmp    BYTE PTR ds:0x8502f289,al
  4178ca:	dec    eax
  4178cb:	(bad)  
  4178cd:	add    eax,DWORD PTR [ebx-0x39fffd06]
  4178d3:	(bad)  
  4178d4:	mov    dl,0xfc
  4178d6:	dec    BYTE PTR [edi+0x224586ad]
  4178dc:	mov    BYTE PTR [ecx+0x8],al
  4178df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178e0:	xchg   BYTE PTR [edi+0x2948f117],bh
  4178e6:	jb     0x41792f
  4178e8:	mov    ah,0x70
  4178ea:	lock in eax,0x59
  4178ed:	in     eax,dx
  4178ee:	adc    bl,BYTE PTR [edx+0x5]
  4178f1:	mov    al,BYTE PTR [ebp-0x2b]
  4178f4:	xchg   ebx,eax
  4178f5:	pop    eax
  4178f6:	leave  
  4178f7:	enter  0x2,0x55
  4178fb:	adc    edi,edx
  4178fd:	jle    0x4178e3
  4178ff:	loop   0x417888
  417901:	in     al,dx
  417902:	adc    BYTE PTR [ecx],al
  417904:	or     BYTE PTR [edi+0x60680],al
  41790a:	add    BYTE PTR [esp+edi*2+0x7e462444],cl
  417911:	aas    
  417912:	cmp    al,0x0
  417914:	add    BYTE PTR [eax],al
  417916:	sbb    eax,0x5e24447e
  41791b:	xchg   dh,cl
  41791d:	push   ebx
  41791f:	adc    edx,ebp
  417921:	push   DWORD PTR [edi+0x2b]
  417924:	sub    BYTE PTR [eax],bl
  417926:	mov    ds:0xdefd01b5,eax
  41792b:	fucomi st,st(6)
  41792d:	aas    
  41792e:	repz pop edx
  417930:	(bad)  
  417931:	(bad)  
  417932:	and    al,0x5f
  417934:	aad    0x6
  417936:	jo     0x4178df
  417938:	add    cl,BYTE PTR ds:0xda6e
  41793e:	repz fsubr st(4),st
  417941:	and    edi,ebx
  417943:	pop    edi
  417944:	adc    al,al
  417946:	outs   dx,BYTE PTR ds:[esi]
  417947:	or     ebp,DWORD PTR [eax]
  417949:	or     al,0x48
  41794b:	loop   0x41790c
  41794d:	pop    es
  41794e:	inc    ebx
  41794f:	fprem1 
  417951:	jmp    0x417954
  417953:	push   ds
  417954:	add    al,0x89
  417956:	xor    dh,bh
  417958:	test   al,al
  41795a:	pop    edi
  41795b:	cld    
  41795c:	xchg   BYTE PTR [ecx+0x17],cl
  41795f:	jecxz  0x4179aa
  417961:	je     0x41794b
  417963:	mov    ?,WORD PTR [ecx+0x5c9dcee7]
  417969:	std    
  41796a:	push   0xd74187c6
  41796f:	out    0xc4,al
  417971:	and    esi,edi
  417973:	jmp    0x4d80:0xe7ed735b
  41797a:	add    BYTE PTR [eax],al
  41797c:	add    BYTE PTR [ecx],al
  41797e:	pop    esi
  41797f:	push   0x257a7805
  417984:	or     BYTE PTR [eax-0x10],dh
  417987:	pop    ebx
  417988:	mov    esi,DWORD PTR [eax]
  41798a:	push   esi
  41798b:	mov    cl,0xfc
  41798d:	fimul  WORD PTR [ebp-0x10]
  417990:	aas    
  417991:	repz loop 0x4179ef
  417994:	je     0x417a0d
  417996:	ins    DWORD PTR es:[edi],dx
  417997:	imul   ebp,DWORD PTR [edx+0x3e706f0],0x354476f
  4179a1:	lea    eax,[edi+0x5d44f626]
  4179a7:	add    al,0x5b
  4179a9:	(bad)  
  4179aa:	sub    dh,bl
  4179ac:	mov    dl,0xca
  4179ae:	or     dl,BYTE PTR [ecx+0x4]
  4179b1:	cdq    
  4179b2:	adc    al,0xb6
  4179b4:	pop    ss
  4179b5:	sbb    ebx,edx
  4179b7:	sub    al,0x4
  4179b9:	repz call FWORD PTR [esp+edx*2+0x1e]
  4179be:	xor    DWORD PTR [edx],eax
  4179c0:	push   edx
  4179c1:	mov    WORD PTR [eax-0x19],gs
  4179c4:	jp     0x417995
  4179c6:	push   es
  4179c7:	push   0xd8c07342
  4179cc:	add    ebx,DWORD PTR [esi-0x10391ea2]
  4179d2:	dec    edi
  4179d3:	or     bh,0xe7
  4179d6:	dec    edi
  4179d7:	outs   dx,BYTE PTR ds:[esi]
  4179d8:	mov    ebx,0xb94c7c3e
  4179dd:	mov    bl,0xb3
  4179df:	jno    0x417999
  4179e1:	add    BYTE PTR [eax],al
  4179e3:	add    BYTE PTR [eax],dl
  4179e5:	(bad)  
  4179e6:	ds inc bh
  4179e9:	dec    edi
  4179ea:	dec    esi
  4179eb:	pop    ss
  4179ec:	mov    bl,0xab
  4179ee:	sub    BYTE PTR [eax],al
  4179f0:	repz mov bl,0x94
  4179f3:	mov    fs,WORD PTR [ebx-0x13459c49]
  4179f9:	mov    bl,0x2d
  4179fb:	icebp  
  4179fc:	mov    ah,dh
  4179fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179ff:	add    ebp,DWORD PTR [eax-0x30]
  417a02:	into   
  417a03:	pop    edx
  417a04:	(bad)  
  417a05:	pop    esi
  417a06:	or     eax,0xe4f87c6
  417a0b:	ror    ah,cl
  417a0d:	pop    esi
  417a0e:	and    eax,0x914f77c6
  417a13:	repz les ecx,FWORD PTR [eax+0x0]
  417a17:	out    dx,al
  417a18:	lock leave 
  417a1a:	inc    edi
  417a1b:	je     0x4179dc
  417a1d:	test   esi,eax
  417a1f:	or     DWORD PTR [eax+0x36b3e818],edi
  417a25:	push   edx
  417a26:	std    
  417a27:	inc    ebx
  417a28:	imul   DWORD PTR [esi-0x370f183b]
  417a2e:	inc    edi
  417a2f:	cmp    al,0x96
  417a31:	mov    ch,0xfc
  417a33:	aam    0xc0
  417a35:	hlt    
  417a36:	aas    
  417a37:	jmp    0xaa9a2ba5
  417a3c:	arpl   WORD PTR [esi-0x14],di
  417a3f:	push   0xe8ff0e8c
  417a44:	lock mov ch,0x55
  417a47:	add    BYTE PTR ds:[eax],al
  417a4a:	add    BYTE PTR [ebx+ecx*8+0x7],dh
  417a4e:	vpcmpeqw k5{z},xmm0,xmm7
  417a54:	push   es
  417a55:	add    BYTE PTR [eax-0x4d],dh
  417a58:	pop    edx
  417a59:	(bad)  
  417a5a:	sub    al,0x44
  417a5c:	pop    es
  417a5d:	mov    ecx,0xfd4ec3b9
  417a62:	je     0x417a17
  417a64:	xor    dl,BYTE PTR [eax+0x72]
  417a67:	and    DWORD PTR [edi+0x42],ebx
  417a6a:	push   esp
  417a6b:	sub    DWORD PTR [esp+eax*4+0x29],ecx
  417a6f:	jmp    0xf12b48f6
  417a74:	push   es
  417a75:	mov    ah,BYTE PTR [eax+edx*1+0x49150a5f]
  417a7c:	dec    esp
  417a7d:	mov    DWORD PTR [ecx],edi
  417a7f:	jne    0x417ace
  417a81:	add    bl,BYTE PTR [esp+edx*4-0xeedf020]
  417a88:	xchg   esi,edi
  417a8a:	(bad)  
  417a8b:	mov    ds:0x38ed6a09,eax
  417a90:	pop    edi
  417a91:	add    al,BYTE PTR [eax]
  417a93:	cmp    edx,ecx
  417a95:	dec    edi
  417a96:	lea    edx,[edi-0x75ff9556]
  417a9c:	mov    cl,0x10
  417a9e:	xor    al,0x44
  417aa0:	dec    edx
  417aa1:	std    
  417aa2:	add    BYTE PTR [esi-0x58769a01],0xa2
  417aa9:	dec    esi
  417aaa:	dec    esi
  417aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aac:	push   eax
  417aad:	sub    dh,0x0
  417ab0:	add    BYTE PTR [eax],al
  417ab2:	inc    edi
  417ab3:	inc    DWORD PTR [eax+0xa4a97]
  417ab9:	push   0x4a
  417abb:	test   DWORD PTR [ecx-0x1f],eax
  417abe:	or     al,BYTE PTR [esi-0x500557bf]
  417ac4:	adc    BYTE PTR [eax],dh
  417ac6:	adc    al,0x4a
  417ac8:	std    
  417ac9:	adc    BYTE PTR [esi-0x1],0xe6
  417acd:	push   es
  417ace:	xchg   ecx,eax
  417acf:	(bad)  
  417ad0:	fimul  WORD PTR [ecx-0x74995929]
  417ad6:	(bad)  
  417ad7:	mov    ecx,0x3e6d0169
  417adc:	frstor [esi-0x65]
  417adf:	ret    0x8d07
  417ae2:	out    0xc1,eax
  417ae4:	mov    DWORD PTR gs:[edi+0x3351e8a3],eax
  417aeb:	mov    al,0xfa
  417aed:	jmp    DWORD PTR [edi+0x6a4588bd]
  417af3:	pop    edx
  417af4:	or     eax,0x8709ca27
  417af9:	into   
  417afa:	inc    edx
  417afb:	gs fcos 
  417afe:	fld    QWORD PTR [esi-0x7d3e8b40]
  417b04:	jns    0x417b12
  417b06:	mov    bh,BYTE PTR ds:0xbd67ff53
  417b0c:	xchg   BYTE PTR [ebp-0xd],dl
  417b0f:	arpl   WORD PTR [ecx+ebp*2-0x3173680a],si
  417b16:	add    BYTE PTR [eax],al
  417b18:	add    BYTE PTR [ebx+0x6cfd36d4],cl
  417b1e:	jecxz  0x417b63
  417b20:	jae    0x417ad4
  417b22:	mov    DWORD PTR [edx],eax
  417b24:	mov    esi,DWORD PTR [esi+0x5c88b3fb]
  417b2a:	aaa    
  417b2b:	pop    ds
  417b2c:	sti    
  417b2d:	dec    esp
  417b2e:	sub    al,0x86
  417b30:	jae    0x417b6d
  417b32:	pushf  
  417b33:	mov    esi,0xc3b597c7
  417b38:	dec    DWORD PTR [eax+ebp*4+0x3b]
  417b3c:	std    
  417b3d:	sub    al,0x8d
  417b3f:	mov    esi,0x5b1273f8
  417b44:	add    ebp,esp
  417b46:	loope  0x417b3f
  417b48:	cld    
  417b49:	adc    al,0xa4
  417b4b:	adc    eax,eax
  417b4d:	lods   al,BYTE PTR ds:[esi]
  417b4e:	or     eax,0x6331c6bb
  417b53:	add    DWORD PTR [edx-0xe],ebp
  417b56:	stos   BYTE PTR es:[edi],al
  417b57:	mov    ebp,0x4fd8a3db
  417b5c:	call   0xfd994648
  417b61:	fdivr  DWORD PTR [ecx-0x15]
  417b64:	or     al,0x6e
  417b66:	pop    ebx
  417b67:	xchg   ebp,eax
  417b68:	pop    eax
  417b69:	retf   
  417b6a:	sar    BYTE PTR [eax+0x0],1
  417b6d:	rep lods al,BYTE PTR ds:[esi]
  417b6f:	int    0xf
  417b71:	jbe    0x417bde
  417b73:	inc    ebp
  417b74:	(bad)  
  417b75:	mov    esp,0xe77357bd
  417b7a:	mov    ch,0x15
  417b7c:	pop    esp
  417b7d:	add    BYTE PTR [eax],al
  417b7f:	add    BYTE PTR [ebp+ecx*1-0x16fc8c74],ch
  417b86:	aas    
  417b87:	xchg   DWORD PTR [esi-0x5a],esi
  417b8a:	pop    eax
  417b8b:	std    
  417b8c:	xchg   esp,eax
  417b8d:	pop    es
  417b8e:	je     0x417b4e
  417b90:	jo     0x417b49
  417b92:	push   cs
  417b93:	jg     0x417b3f
  417b95:	dec    esp
  417b96:	push   ss
  417b97:	jg     0x417b4c
  417b99:	ror    esp,cl
  417b9b:	or     BYTE PTR [esi],bh
  417b9d:	ret    0xcb6a
  417ba0:	mov    ah,0xd2
  417ba2:	jecxz  0x417b28
  417ba4:	pop    ebx
  417ba5:	bnd jnp 0x417ba9
  417ba8:	and    al,BYTE PTR [edi-0x7b]
  417bab:	mov    dh,BYTE PTR [eax-0x587e8b7c]
  417bb1:	dec    ebx
  417bb2:	ficom  WORD PTR [edi-0x5d]
  417bb5:	jns    0x417be3
  417bb7:	and    BYTE PTR [ebx+0x3662755e],0x4c
  417bbe:	imul   eax,DWORD PTR [edi+eiz*4-0xd],0x6b
  417bc3:	cmp    DWORD PTR [edi-0x3ca849b5],0xc3982479
  417bcd:	jns    0x417c3b
  417bcf:	dec    eax
  417bd0:	or     eax,0xcb49e4c
  417bd5:	ins    DWORD PTR es:[edi],dx
  417bd6:	xor    edx,DWORD PTR [edi-0x2]
  417bd9:	jns    0x417c3f
  417bdb:	dec    eax
  417bdc:	cmc    
  417bdd:	dec    ebx
  417bde:	xchg   BYTE PTR [edi+ebp*8+0x8972d1],dh
  417be5:	add    BYTE PTR [eax],al
  417be7:	xor    BYTE PTR [edi],bh
  417be9:	sbb    ch,BYTE PTR [esi+0x62805f2c]
  417bef:	(bad)  
  417bf0:	dec    ebx
  417bf1:	je     0x417b84
  417bf3:	mov    edi,0x79575e4c
  417bf8:	cs aas 
  417bfa:	mov    al,0x18
  417bfc:	dec    esp
  417bfd:	dec    esi
  417bfe:	mov    eax,DWORD PTR [eax-0x1]
  417c01:	rol    BYTE PTR [ebx],1
  417c03:	js     0x417bc6
  417c05:	sbb    dh,BYTE PTR [esp+ecx*4+0x4434ffb6]
  417c0c:	dec    edx
  417c0d:	mov    esi,DWORD PTR [eax+ebp*1+0x53314342]
  417c14:	aam    0x3f
  417c16:	jmp    0x171b8433
  417c1b:	and    al,0x81
  417c1d:	rol    DWORD PTR [eax],0xe1
  417c20:	dec    ecx
  417c21:	std    
  417c22:	push   es
  417c23:	mov    ds:0xdb68ec7e,al
  417c28:	mov    ds:0xb5f0e903,al
  417c2d:	push   esp
  417c2e:	out    dx,al
  417c2f:	arpl   di,di
  417c31:	adc    BYTE PTR [ecx],ch
  417c33:	idiv   DWORD PTR [ebp+0x4b]
  417c36:	icebp  
  417c37:	ja     0x417c00
  417c39:	jmp    0x417c9d
  417c3b:	ds dec edx
  417c3d:	mov    al,0x5d
  417c3f:	out    dx,eax
  417c40:	push   es
  417c41:	add    BYTE PTR [ebx+eiz*2+0x5f],dh
  417c45:	push   0xfd4b43f9
  417c4a:	inc    ebx
  417c4b:	add    BYTE PTR [eax],al
  417c4d:	add    bl,dh
  417c4f:	scas   al,BYTE PTR es:[edi]
  417c50:	out    0x4a,eax
  417c52:	fisttp QWORD PTR [ecx-0x3]
  417c55:	ins    DWORD PTR es:[edi],dx
  417c56:	mov    al,0xd7
  417c58:	add    al,0xdb
  417c5a:	mov    al,0x63
  417c5c:	stc    
  417c5d:	jmp    0xe7ca8352
  417c62:	popf   
  417c63:	xlat   BYTE PTR ds:[ebx]
  417c64:	pop    es
  417c65:	jb     0x417cd7
  417c67:	xchg   edi,edi
  417c69:	call   0x718d045e
  417c6e:	inc    ebp
  417c6f:	jle    0x417ccc
  417c71:	jns    0x417cbb
  417c73:	cmp    al,0x92
  417c75:	call   0xd601ff6a
  417c7a:	dec    BYTE PTR [ebx+0x73]
  417c7d:	pop    ecx
  417c7e:	imul   eax,esi,0xb9d141f3
  417c84:	cld    
  417c85:	add    BYTE PTR ds:0x4f89d6f5,dh
  417c8b:	fidiv  WORD PTR [esi]
  417c8d:	ret    
  417c8e:	xchg   ebp,eax
  417c8f:	test   BYTE PTR [eax+eax*1-0x4276f976],ah
  417c96:	mov    dh,0xb0
  417c98:	cli    
  417c99:	jmp    edx
  417c9b:	ins    BYTE PTR es:[edi],dx
  417c9c:	push   eax
  417c9d:	jmp    ebp
  417c9f:	jl     0x417cea
  417ca1:	lock jo 0x417ca7
  417ca4:	mov    DWORD PTR [ebp-0x54c21],eax
  417caa:	mov    bh,BYTE PTR [ebp+0x41]
  417cad:	hlt    
  417cae:	xor    DWORD PTR [edi-0x1b],eax
  417cb1:	call   0x38417cb6
  417cb6:	xor    al,0xfe
  417cb8:	inc    ecx
  417cba:	stos   BYTE PTR es:[edi],al
  417cbb:	ss sti 
  417cbd:	sahf   
  417cbe:	mov    BYTE PTR cs:[edi],al
  417cc1:	rol    DWORD PTR [edx+0x19],1
  417cc4:	mov    DWORD PTR [edi],eax
  417cc6:	mov    bl,0x36
  417cc8:	inc    ebp
  417cc9:	inc    esi
  417cca:	aaa    
  417ccb:	add    eax,DWORD PTR [ebx-0x14055529]
  417cd1:	push   es
  417cd2:	cwde   
  417cd3:	gs enter 0x60a,0x0
  417cd8:	push   edi
  417cd9:	bound  esi,QWORD PTR [edi+0x7a]
  417cdc:	add    DWORD PTR [edx],ebx
  417cde:	out    dx,eax
  417cdf:	mov    esi,0x57ed0f74
  417ce4:	or     al,0xdf
  417ce6:	push   esp
  417ce7:	push   eax
  417ce8:	push   0xfffffffe
  417cea:	fwait
  417ceb:	in     eax,0xa2
  417ced:	lock add eax,0x36893b00
  417cf3:	(bad)  
  417cf5:	add    bh,bh
  417cf7:	jae    0x417d06
  417cf9:	lea    edi,[esi-0x3a]
  417cfc:	call   0x3c2808
  417d01:	repz out 0xbc,al
  417d04:	test   eax,0x9bc68707
  417d0a:	rcl    BYTE PTR [edi-0x3],0xa4
  417d0e:	ins    BYTE PTR es:[edi],dx
  417d0f:	jmp    0x1a170aa
  417d14:	xor    DWORD PTR [ebx+0xe7f3c7],esi
  417d1a:	add    BYTE PTR [eax],al
  417d1c:	mov    WORD PTR [eax],fs
  417d1e:	scas   eax,DWORD PTR es:[edi]
  417d1f:	imul   ebx,DWORD PTR [bx+0x1],0x0
  417d24:	rcr    BYTE PTR [edi],0x6c
  417d27:	add    DWORD PTR [ebx-0x493aad08],ecx
  417d2d:	pop    es
  417d2e:	add    DWORD PTR [eax],eax
  417d30:	repz pop edi
  417d32:	push   esp
  417d33:	xor    eax,0xfd12e94b
  417d38:	push   esp
  417d39:	jo     0x417da4
  417d3b:	ror    BYTE PTR [ecx+eiz*2],1
  417d3e:	push   esp
  417d3f:	std    
  417d40:	mov    esi,0xfcc8692f
  417d45:	xor    BYTE PTR [ecx+ecx*4-0x13],dl
  417d49:	cmp    dh,cl
  417d4b:	idiv   DWORD PTR [eax+0x12]
  417d4e:	or     al,0x89
  417d50:	jae    0x417d31
  417d52:	add    DWORD PTR [eax],eax
  417d54:	repz inc edi
  417d56:	mov    bl,0x91
  417d58:	repnz pop edi
  417d5a:	adc    al,al
  417d5c:	jo     0x417d80
  417d5e:	pop    esp
  417d5f:	push   ebp
  417d61:	rol    DWORD PTR [eax+0x5d],cl
  417d64:	cwde   
  417d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d66:	aas    
  417d67:	add    al,0xf3
  417d69:	add    eax,0x4c6ee7f0
  417d6e:	push   esp
  417d6f:	std    
  417d70:	inc    ebx
  417d71:	fstp   TBYTE PTR [ebx-0x122ebcfd]
  417d77:	cmp    edi,ebp
  417d79:	sbb    eax,0x7b78104
  417d7e:	repz jle 0x417d81
  417d81:	add    BYTE PTR [eax],al
  417d83:	mov    bl,0xd3
  417d85:	in     eax,0x11
  417d87:	mov    bl,0x5e
  417d89:	sub    eax,0xde06f303
  417d8e:	mov    WORD PTR [esi],?
  417d90:	jmp    0x417d2b
  417d92:	scas   al,BYTE PTR es:[edi]
  417d93:	jecxz  0x417dee
  417d95:	xchg   ebp,eax
  417d96:	fstp   st(3)
  417d98:	inc    ecx
  417d99:	mov    ebx,0x2bb6baf
  417d9e:	hlt    
  417d9f:	jnp    0x417d9f
  417da1:	mov    WORD PTR [edx],ds
  417da3:	add    al,0xeb
  417da5:	out    0x3,eax
  417da7:	repz shr DWORD PTR [ebx-0x779f8a17],1
  417dae:	xor    al,0x6e
  417db0:	dec    eax
  417db1:	jb     0x417e06
  417db3:	sub    dl,BYTE PTR [edx+0x73]
  417db6:	sbb    esp,DWORD PTR [ecx+ebx*1]
  417db9:	jne    0x417de0
  417dbb:	push   0xca80e2a9
  417dc0:	add    dh,bh
  417dc2:	fsubr  st,st(1)
  417dc4:	jnp    0x417db0
  417dc6:	mov    BYTE PTR [ebx],dh
  417dc8:	sar    ebp,cl
  417dca:	xchg   BYTE PTR [ebx],dh
  417dcc:	add    eax,DWORD PTR [ecx+0x8]
  417dcf:	ret    
  417dd0:	jns    0x417e00
  417dd2:	in     al,dx
  417dd3:	mov    ah,0x47
  417dd5:	aam    0xf
  417dd7:	add    eax,0x2f86e6c7
  417ddc:	sti    
  417ddd:	arpl   WORD PTR [edi+eax*4-0x2f],ax
  417de1:	sub    eax,DWORD PTR [edi+0x21e1ff32]
  417de7:	add    BYTE PTR [eax],al
  417de9:	add    BYTE PTR [edi+0x31],bh
  417dec:	cmp    eax,0x8e07cf5c
  417df1:	push   ebx
  417df2:	dec    BYTE PTR [edi+0x5a22222e]
  417df8:	add    eax,0xffd2b00f
  417dfd:	sbb    al,0x54
  417dff:	mov    ebx,0x4dd923
  417e04:	data16 and BYTE PTR [esi-0x18],ch
  417e08:	(bad)  
  417e09:	call   0xc38451fe
  417e0e:	out    dx,al
  417e0f:	pop    esi
  417e10:	add    ch,BYTE PTR [esi]
  417e12:	inc    eax
  417e13:	dec    edx
  417e14:	mov    DWORD PTR [ecx],edi
  417e16:	hlt    
  417e17:	push   ebx
  417e18:	je     0x417e1b
  417e1a:	out    dx,al
  417e1b:	sbb    BYTE PTR [esi+0x7],bh
  417e1e:	jb     0x417dc8
  417e20:	add    ebp,DWORD PTR [edx-0x44]
  417e23:	add    ebx,DWORD PTR [esp+ebx*4]
  417e26:	cmp    DWORD PTR [esi+0x1],0x64
  417e2a:	aaa    
  417e2b:	rcl    DWORD PTR [edx+ebp*2],cl
  417e2e:	das    
  417e2f:	jmp    FWORD PTR [ecx-0x7]
  417e32:	mov    al,ds:0xa0e7457c
  417e37:	dec    edx
  417e38:	adc    edi,DWORD PTR [ebp+0x6a00075a]
  417e3e:	stos   DWORD PTR es:[edi],eax
  417e3f:	cli    
  417e40:	sub    BYTE PTR [ecx],0x2b
  417e43:	icebp  
  417e44:	inc    edx
  417e45:	push   0xffffffad
  417e47:	(bad)  
  417e48:	cmp    BYTE PTR [edi],cl
  417e4a:	and    esi,DWORD PTR [esi+edx*2]
  417e4d:	rol    DWORD PTR [eax],0x0
  417e50:	add    BYTE PTR [ebx+0x6cefd08],ch
  417e56:	inc    edi
  417e57:	pop    esi
  417e58:	and    al,0x54
  417e5a:	inc    ebp
  417e5b:	add    al,0xe9
  417e5d:	pop    edx
  417e5e:	pop    edi
  417e5f:	mov    ch,0xf7
  417e61:	ror    DWORD PTR [ecx-0x50],0xe8
  417e65:	lods   eax,DWORD PTR ds:[esi]
  417e66:	push   esi
  417e67:	push   esi
  417e68:	jb     0x417e86
  417e6a:	and    ecx,DWORD PTR [eax]
  417e6c:	ss jl  0x417ebb
  417e6f:	mov    DWORD PTR [ecx],edi
  417e71:	repz jge 0x417e88
  417e74:	pop    ebx
  417e75:	ins    DWORD PTR es:[edi],dx
  417e76:	mov    bh,0x67
  417e78:	add    cl,bl
  417e7a:	fadd   QWORD PTR [esi-0x32da11b0]
  417e80:	cmp    esp,DWORD PTR [eax+0x58]
  417e83:	add    DWORD PTR [ebx],esi
  417e85:	call   0xfee:0x96f629e5
  417e8c:	add    DWORD PTR [ecx+0x5e],edi
  417e8f:	das    
  417e90:	test   DWORD PTR ds:0x5a8b1758,ebx
  417e96:	sbb    ah,BYTE PTR [edi]
  417e98:	icebp  
  417e99:	popf   
  417e9a:	mov    al,ds:0x3e240f15
  417e9f:	or     ecx,DWORD PTR [edx+0x414b0dbe]
  417ea5:	xor    BYTE PTR [esi],0xff
  417ea8:	je     0x417e96
  417eaa:	(bad)  
  417eab:	sti    
  417eac:	jg     0x417e8f
  417eae:	sbb    al,0xc0
  417eb0:	inc    eax
  417eb1:	inc    ecx
  417eb2:	jns    0x417f0f
  417eb4:	ret    0x0
  417eb7:	add    BYTE PTR [edx+0xa],dl
  417eba:	mov    dl,BYTE PTR [ecx]
  417ebc:	loopne 0x417ecd
  417ebe:	dec    ebx
  417ebf:	inc    ecx
  417ec0:	xchg   esp,eax
  417ec1:	adc    al,0xc2
  417ec3:	jne    0x417f09
  417ec5:	(bad)  
  417ec6:	sti    
  417ec7:	jg     0x417f14
  417ec9:	in     al,0xe5
  417ecb:	xor    ebx,DWORD PTR [edx-0x3eaa1f1c]
  417ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ed2:	jl     0x417ec0
  417ed4:	or     DWORD PTR ss:[eax],eax
  417ed7:	add    cl,ch
  417ed9:	or     BYTE PTR [eax-0x7780b98b],0xfa
  417ee0:	mov    eax,ds:0x3d2ce4f1
  417ee5:	or     al,BYTE PTR [eax]
  417ee7:	mov    edx,edi
  417ee9:	out    dx,al
  417eea:	ss inc esi
  417eec:	add    al,BYTE PTR [edi]
  417eee:	jg     0x417f24
  417ef0:	std    
  417ef1:	or     DWORD PTR [eax],eax
  417ef3:	div    bl
  417ef5:	repnz and eax,DWORD PTR [edx]
  417ef8:	js     0x417ee4
  417efa:	jmp    0x417e82
  417efc:	cs cwde 
  417efe:	fmul   DWORD PTR [eax+ebp*2]
  417f01:	jmp    0x437d:0x682e86ef
  417f08:	mov    ebx,0x7acbaca6
  417f0d:	jb     0x417efc
  417f0f:	mov    esp,ebp
  417f11:	mov    al,0xe4
  417f13:	out    dx,eax
  417f14:	repz mov al,0xe4
  417f17:	jmp    0x417f0c
  417f19:	fs xchg edi,eax
  417f1b:	mov    edi,0x7a000000
  417f20:	jb     0x417f6f
  417f22:	sbb    DWORD PTR [ebx+0x4685007d],0xfc000406
  417f2c:	mov    ebp,0x6e775173
  417f31:	add    ebp,edi
  417f33:	xlat   BYTE PTR ds:[ebx]
  417f34:	mov    edx,0x3032891a
  417f39:	add    BYTE PTR [esi-0x49ffd14c],dh
  417f3f:	mov    ah,0x31
  417f41:	inc    edx
  417f42:	loopne 0x417f2f
  417f44:	cmp    BYTE PTR [edx-0x80],al
  417f47:	aam    0x30
  417f49:	mov    ah,0x86
  417f4b:	mov    dh,0x5b
  417f4d:	add    BYTE PTR [ebx+0x12f5e],al
  417f53:	jo     0x417f77
  417f55:	push   esp
  417f56:	ret    
  417f57:	mov    al,0x2f
  417f59:	add    DWORD PTR ds:0xaa77,ecx
  417f5f:	repz cmp al,0x97
  417f62:	inc    ebp
  417f63:	idiv   DWORD PTR [eax-0xd959442]
  417f69:	outs   dx,DWORD PTR ds:[esi]
  417f6a:	mov    DWORD PTR [ebp+0x53437a63],esi
  417f70:	push   es
  417f71:	jb     0x417f3c
  417f73:	xchg   esp,eax
  417f74:	icebp  
  417f75:	scas   al,BYTE PTR es:[edi]
  417f76:	jp     0x417f20
  417f78:	outs   dx,BYTE PTR ds:[esi]
  417f79:	bound  edi,QWORD PTR [esi+0x7a9eeff4]
  417f7f:	xor    BYTE PTR [ebx+0x70],ch
  417f82:	mov    esi,0x88000000
  417f87:	nop
  417f88:	mov    dl,0x1c
  417f8a:	stos   DWORD PTR es:[edi],eax
  417f8b:	adc    al,0x3d
  417f8d:	enter  0x45f1,0x87
  417f91:	sti    
  417f92:	ins    DWORD PTR es:[edi],dx
  417f93:	rcl    BYTE PTR [esi-0x1b2b7b00],cl
  417f99:	cld    
  417f9a:	jne    0x417fb0
  417f9c:	popf   
  417f9d:	shl    ah,0x8d
  417fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fa1:	inc    ebx
  417fa2:	idiv   BYTE PTR [esi+ebp*4+0x8]
  417fa6:	pop    esp
  417fa7:	daa    
  417fa8:	out    dx,eax
  417fa9:	cld    
  417faa:	push   ebp
  417fab:	mov    gs,WORD PTR [edi+eax*2+0x6ad6ca7a]
  417fb2:	fimul  DWORD PTR [eax+0x38]
  417fb5:	dec    ebx
  417fb6:	je     0x417f82
  417fb8:	push   edx
  417fb9:	jl     0x418028
  417fbb:	mov    esp,edi
  417fbd:	add    esi,ebx
  417fbf:	lea    esp,[ebx+ecx*4+0x35f8d7a]
  417fc6:	repz push es
  417fc8:	ins    BYTE PTR es:[edi],dx
  417fc9:	mov    esi,0x6bac4c7c
  417fce:	dec    esp
  417fcf:	inc    esp
  417fd0:	out    0x3,eax
  417fd2:	ins    BYTE PTR es:[edi],dx
  417fd3:	retf   0x4fa2
  417fd6:	loopne 0x41800e
  417fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fd9:	ret    
  417fda:	xor    al,0x8b
  417fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fdd:	(bad)  
  417fde:	jg     0x417f82
  417fe0:	loope  0x417fe5
  417fe2:	repz adc ebp,DWORD PTR [edi+0x56]
  417fe6:	retf   
  417fe7:	push   es
  417fe8:	out    0x82,eax
  417fea:	add    BYTE PTR [eax],al
  417fec:	add    BYTE PTR [esi],ch
  417fee:	or     eax,0x7446400
  417ff3:	or     eax,0x4b8d0977
  417ff8:	cdq    
  417ff9:	jo     0x418037
  417ffb:	data16 out dx,al
  417ffd:	ins    BYTE PTR es:[edi],dx
  417ffe:	sub    al,0xff
  418000:	call   0x73905f5
  418005:	in     al,0x87
  418007:	loopne 0x417ff1
  418009:	lock push es
  41800b:	add    DWORD PTR [eax+0x6a58b7cb],0x1773a83e
  418015:	jo     0x418052
  418017:	push   0xb612c4dc
  41801c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41801d:	out    dx,eax
  41801e:	adc    DWORD PTR [esi-0x1f7c0d5a],esi
  418024:	loope  0x417fcf
  418026:	test   BYTE PTR [ecx],al
  418028:	inc    ecx
  418029:	ds mov edi,edi
  41802c:	call   0xd850e21
  418031:	mov    bh,0xd3
  418033:	imul   ebp,eax,0x9cfe43aa
  418039:	mov    BYTE PTR [esi-0x47da4837],cl
  41803f:	movhps xmm1,QWORD PTR [edx+0xf]
  418043:	std    
  418044:	xchg   esp,eax
  418045:	push   0xac07902b
  41804a:	inc    ecx
  41804b:	add    DWORD PTR [ecx],0x4f8411ee
  418051:	add    BYTE PTR [eax],al
  418053:	add    BYTE PTR [ebx+0x43],al
  418056:	std    
  418057:	fs scas eax,DWORD PTR es:[edi]
  418059:	mov    edx,0x3f4d2408
  41805e:	std    
  41805f:	fidiv  WORD PTR ds:0xf7018088
  418065:	push   es
  418066:	add    DWORD PTR [ebx+ebp*1+0x2c],ecx
  41806a:	inc    ebx
  41806b:	add    BYTE PTR [ebx],cl
  41806d:	pop    es
  41806e:	add    BYTE PTR [edi],cl
  418070:	pushf  
  418071:	dec    esp
  418072:	add    DWORD PTR [edi],ecx
  418074:	mov    WORD PTR [edx+eax*1-0x3f],?
  418078:	cmp    bh,BYTE PTR [edi]
  41807a:	or     dl,al
  41807c:	or     edi,eax
  41807e:	ss inc ebp
  418080:	cli    
  418081:	push   ebp
  418082:	or     cl,BYTE PTR [ebx+0x3c7f072c]
  418088:	pop    eax
  418089:	push   es
  41808a:	or     ecx,DWORD PTR [ebp+0x855]
  418090:	dec    ecx
  418091:	das    
  418092:	icebp  
  418093:	add    BYTE PTR [ecx-0x2d],bl
  418096:	pusha  
  418097:	cmovg  ecx,DWORD PTR [eax]
  41809a:	std    
  41809b:	dec    edx
  41809d:	mov    ebp,0x2f49284d
  4180a2:	adc    DWORD PTR [eax],eax
  4180a4:	jmp    0x418073
  4180a6:	jle    0x418126
  4180a8:	cli    
  4180a9:	or     al,BYTE PTR [ebp+0x48c2da45]
  4180af:	in     al,dx
  4180b0:	push   esp
  4180b1:	call   0x41dd36c0
  4180b6:	mov    bl,0x51
  4180b8:	add    BYTE PTR [eax],al
  4180ba:	add    BYTE PTR [ebx-0x7ef72035],bl
  4180c0:	enter  0x4536,0xda
  4180c4:	pop    ecx
  4180c5:	push   cs
  4180c6:	add    edx,DWORD PTR [edx+ebp*8-0x42a1ba06]
  4180cd:	inc    eax
  4180ce:	adc    al,0xe3
  4180d0:	inc    esi
  4180d1:	jmp    0x7c280d11
  4180d6:	(bad)  
  4180d8:	dec    esi
  4180d9:	adc    DWORD PTR [ebx],edi
  4180db:	mov    esi,fs
  4180dd:	or     cl,BYTE PTR [ebp+0xb95]
  4180e3:	ror    DWORD PTR [ecx-0x17],0x89
  4180e7:	repz repnz push ebx
  4180ea:	cmp    DWORD PTR [ebp+0x684bd607],ebp
  4180f0:	repz push ebx
  4180f2:	sub    DWORD PTR [ebp+0x343790b],ebp
  4180f8:	lods   eax,DWORD PTR ds:[esi]
  4180f9:	inc    ebx
  4180fa:	add    ah,BYTE PTR [ebx+0x70ebc4a4]
  418100:	jo     0x418104
  418102:	push   eax
  418103:	hlt    
  418104:	cmp    cl,BYTE PTR [ecx]
  418106:	push   ss
  418107:	xor    esi,DWORD PTR [eax]
  418109:	stos   BYTE PTR es:[edi],al
  41810a:	push   esi
  41810b:	outs   dx,BYTE PTR ds:[esi]
  41810c:	outs   dx,DWORD PTR ds:[esi]
  41810d:	aad    0x2b
  41810f:	push   0x9d0d53fa
  418114:	cs cld 
  418116:	mov    ch,0x22
  418118:	das    
  418119:	inc    edx
  41811a:	loopne 0x418117
  41811c:	and    al,0x3f
  41811e:	add    DWORD PTR [eax],eax
  418120:	add    BYTE PTR [eax],al
  418122:	mov    bl,0xe4
  418124:	les    ecx,FWORD PTR [edi]
  418126:	xor    edi,DWORD PTR ss:[eax+0x56]
  41812a:	jmp    FWORD PTR [edi+ecx*1+0x7e60f382]
  418131:	push   edx
  418133:	das    
  418134:	add    DWORD PTR [ecx+0x3903fc0e],eax
  41813a:	cmp    eax,0x78b3d308
  41813f:	push   0x5d
  418141:	std    
  418142:	ss inc esp
  418144:	jp     0x418189
  418146:	xor    DWORD PTR [esp+eax*8+0x21722813],0x7b
  41814e:	mov    esp,0x70ebc4a4
  418153:	out    dx,eax
  418154:	add    DWORD PTR [edi+0x437713ae],eax
  41815a:	inc    ebx
  41815b:	sub    al,0xc3
  41815d:	and    edi,DWORD PTR [edx+0x6a]
  418160:	push   ecx
  418161:	xor    DWORD PTR [ebx],0x37b3e906
  418167:	mov    ebx,0xff004cca
  41816c:	cld    
  41816d:	ret    
  41816e:	and    al,0xde
  418170:	das    
  418171:	xchg   DWORD PTR [ebx],esi
  418173:	mov    ebx,0x36a878f8
  418178:	out    dx,al
  418179:	xchg   ebp,eax
  41817a:	or     al,0x10
  41817c:	jge    0x418138
  41817e:	add    eax,0xebfbc746
  418183:	inc    edi
  418184:	jmp    0xcbba:0x43
  41818b:	test   dh,0xf9
  41818e:	mov    esp,DWORD PTR ds:0x68037200
  418194:	add    ebp,esi
  418196:	xchg   ecx,eax
  418197:	data16 add dh,bl
  41819a:	push   es
  41819b:	push   0xffffffe6
  41819d:	rol    BYTE PTR [edi],0x76
  4181a0:	(bad)  
  4181a1:	loopne 0x41812e
  4181a3:	and    al,0xf8
  4181a5:	sti    
  4181a6:	enter  0xd006,0x82
  4181aa:	adc    BYTE PTR [ebp-0x62ee523c],dl
  4181b0:	mov    esp,0xfb4745f2
  4181b5:	jmp    0x4181fc
  4181b7:	jmp    0x3:0x32c2724b
  4181be:	push   cs
  4181bf:	addr16 or al,0x1f
  4181c2:	adc    BYTE PTR [ecx+ebp*4-0xd],ah
  4181c6:	push   es
  4181c7:	out    0x80,eax
  4181c9:	scas   al,BYTE PTR es:[edi]
  4181ca:	add    al,0x6a
  4181cc:	into   
  4181cd:	push   0xc086e5a4
  4181d2:	and    ah,bh
  4181d4:	add    ebp,DWORD PTR [edx-0x36]
  4181d7:	retf   0xa4c3
  4181da:	lods   al,BYTE PTR ds:[esi]
  4181db:	call   0x64422c
  4181e0:	(bad)  
  4181e1:	inc    DWORD PTR [ecx+0x73]
  4181e4:	rol    DWORD PTR [esi-0x4a068cbd],1
  4181ea:	dec    ebp
  4181eb:	std    
  4181ec:	push   esp
  4181ed:	add    BYTE PTR [eax],al
  4181ef:	add    BYTE PTR [ebx],ch
  4181f1:	inc    ebx
  4181f2:	jae    0x4181d5
  4181f4:	enter  0xfc33,0xce
  4181f8:	test   al,0x27
  4181fa:	clc    
  4181fb:	pxor   mm0,QWORD PTR [esi]
  4181fe:	mov    DWORD PTR [edi-0x7d],edx
  418201:	push   es
  418202:	add    cl,ch
  418204:	jae    0x41825b
  418206:	or     eax,0xfd40d665
  41820b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41820c:	clc    
  41820d:	jns    0x418254
  41820f:	in     eax,0xe9
  418211:	jns    0x418260
  418213:	in     al,dx
  418214:	das    
  418215:	daa    
  418216:	or     dl,ah
  418218:	aaa    
  418219:	mov    BYTE PTR [ebx-0x7f],al
  41821c:	jmp    0x8411:0xf0e9fd41
  418223:	fsubp  st(7),st
  418225:	push   es
  418226:	add    BYTE PTR [edx+0x6d0d03b6],dh
  41822c:	mov    ecx,0x75e9fd40
  418231:	mov    ds:0xbb6de9f3,eax
  418236:	out    dx,eax
  418237:	(bad)  
  418238:	cdq    
  418239:	test   BYTE PTR [eax+0x46],dh
  41823c:	sub    BYTE PTR [edx-0x77],al
  41823f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418240:	call   0xf11ee5ca
  418245:	test   DWORD PTR [esi+0x9],edi
  418248:	test   DWORD PTR [edi-0x1a56eabd],0x126f570c
  418252:	mov    dh,0xb9
  418254:	add    BYTE PTR [eax],al
  418256:	add    bh,ch
  418258:	jg     0x418239
  41825a:	loope  0x4182b9
  41825c:	dec    ebp
  41825d:	cmp    DWORD PTR [eax],eax
  41825f:	lahf   
  418260:	retf   
  418261:	jae    0x418274
  418263:	pop    ecx
  418264:	inc    ebp
  418265:	and    edi,edi
  418267:	xchg   edi,eax
  418268:	das    
  418269:	mov    BYTE PTR [ebp+0x26],cl
  41826c:	ret    0xec40
  41826f:	adc    DWORD PTR [ebp+0x1d],edi
  418272:	jl     0x4182e0
  418274:	rol    BYTE PTR [eax+0x14],0x1
  418278:	inc    ebp
  418279:	sbb    eax,0xfb19bf0f
  41827e:	jmp    FWORD PTR ds:0x83ec40c0
  418284:	inc    esi
  418285:	in     eax,dx
  418286:	cmp    edx,esp
  418288:	and    dh,BYTE PTR [esi+0x47]
  41828b:	xchg   ecx,eax
  41828c:	inc    esi
  41828d:	in     eax,dx
  41828e:	sub    eax,esp
  418290:	out    0x84,al
  418292:	inc    ebp
  418293:	mov    al,BYTE PTR [ebp-0x41d5fd40]
  418299:	inc    eax
  41829a:	in     al,dx
  41829b:	dec    ecx
  41829c:	retf   0x5001
  41829f:	ins    DWORD PTR es:[edi],dx
  4182a0:	aaa    
  4182a1:	xor    eax,0x55031a16
  4182a6:	pop    ecx
  4182a7:	push   edi
  4182a8:	retf   0x2770
  4182ab:	push   ecx
  4182ac:	jg     0x41829b
  4182ae:	andps  xmm6,XMMWORD PTR [ebx]
  4182b1:	or     al,0xb6
  4182b3:	pop    ebx
  4182b4:	add    edi,DWORD PTR [ebp-0x40c26d1e]
  4182ba:	mov    eax,DWORD PTR [eax]
  4182bc:	add    BYTE PTR [eax],al
  4182be:	and    al,0xae
  4182c0:	(bad)  
  4182c1:	dec    DWORD PTR [edx-0x3afbbde3]
  4182c7:	icebp  
  4182c8:	push   ss
  4182c9:	rcr    BYTE PTR [edx-0x45],0x40
  4182cd:	hlt    
  4182ce:	inc    edi
  4182cf:	inc    esi
  4182d0:	cmp    BYTE PTR [esi-0x5e],cl
  4182d3:	pop    ecx
  4182d4:	mov    dh,0x8b
  4182d6:	xchg   edi,eax
  4182d7:	(bad)  
  4182d8:	cli    
  4182d9:	inc    ebp
  4182da:	repz cmp edi,DWORD PTR [ebx+eax*2+0x63]
  4182df:	test   eax,0x6e1813bf
  4182e4:	and    DWORD PTR ds:0xfd46f97e,ecx
  4182ea:	inc    esp
  4182eb:	test   eax,0xf070ebbf
  4182f0:	add    al,BYTE PTR [edi+0x437b53ae]
  4182f6:	and    esi,DWORD PTR [ecx]
  4182f8:	mov    edi,0x53eb7a23
  4182fd:	xor    DWORD PTR [ebx],0x9efcb132
  418303:	push   ebx
  418304:	inc    edi
  418305:	adc    ecx,ebx
  418307:	push   ebp
  418308:	sar    edi,0xab
  41830b:	push   ss
  41830c:	jge    0x4182ce
  41830e:	in     al,dx
  41830f:	mov    ds:0x64f4fea5,al
  418314:	jnp    0x418361
  418316:	jecxz  0x418344
  418318:	(bad)  
  418319:	aas    
  41831a:	repnz and al,0x8f
  41831d:	pop    es
  41831e:	mov    dl,0x8e
  418320:	cld    
  418321:	or     BYTE PTR [eax],al
  418323:	add    BYTE PTR [eax],al
  418325:	mov    dl,0xb8
  418327:	jns    0x4182bd
  418329:	repz das 
  41832b:	add    DWORD PTR [ecx],ebp
  41832d:	xor    ch,BYTE PTR [eax+edx*2]
  418330:	fcomp  st(0)
  418332:	outs   dx,DWORD PTR ds:[esi]
  418333:	les    eax,FWORD PTR [esi+0x14ccdc2e]
  418339:	lods   al,BYTE PTR ds:[esi]
  41833a:	(bad)  
  41833b:	in     eax,dx
  41833c:	mov    BYTE PTR [esi],ch
  41833e:	cmp    al,0xc
  418340:	inc    esi
  418341:	ror    DWORD PTR [ebx-0x6c],cl
  418344:	out    0x23,eax
  418346:	mov    BYTE PTR [esi-0x3],0xb4
  41834a:	bound  ecx,QWORD PTR [ebp-0x1]
  41834d:	test   BYTE PTR [edi],ch
  41834f:	add    DWORD PTR [edx-0x10],ebp
  418352:	xchg   edi,eax
  418353:	pop    edx
  418354:	outs   dx,BYTE PTR ds:[esi]
  418355:	jne    0x41835d
  418357:	es dec ecx
  418359:	(bad)  
  41835a:	je     0x418302
  41835c:	add    dh,dh
  41835e:	je     0x418306
  418360:	add    eax,0xfcdf269c
  418365:	xchg   ebp,eax
  418366:	mov    ebx,ebx
  418368:	add    esi,DWORD PTR [ebx+edx*8-0xa]
  41836c:	jp     0x4183db
  41836e:	and    bh,0x3
  418371:	repz add DWORD PTR [ebp-0x51f54711],edx
  418378:	shl    esp,0x7
  41837b:	out    0x3,eax
  41837d:	repz das 
  41837f:	xchg   BYTE PTR [edx],al
  418381:	repz push es
  418383:	bound  edi,QWORD PTR [ecx+0x5c947e8]
  418389:	add    BYTE PTR [eax],al
  41838b:	add    BYTE PTR [ebx+edx*8-0x2e],dh
  41838f:	jl     0x41832e
  418391:	push   ss
  418392:	add    dh,BYTE PTR [edx+ebp*2]
  418395:	adc    bl,BYTE PTR [eax+0x7c]
  418398:	mov    al,0x12
  41839a:	jo     0x41838b
  41839c:	hlt    
  41839d:	(bad)  
  41839e:	xor    eax,0xc2507bf8
  4183a3:	mov    ecx,0xf41b8e54
  4183a8:	lock (bad) 
  4183aa:	sub    al,0x54
  4183ac:	add    al,0xc2
  4183ae:	(bad)  
  4183af:	clc    
  4183b0:	ja     0x418339
  4183b2:	call   0xa7c976ba
  4183b7:	add    eax,0x5af6c26c
  4183bc:	and    BYTE PTR [esi],al
  4183be:	out    0x3,eax
  4183c0:	jp     0x41843f
  4183c2:	jnp    0x4183c7
  4183c4:	repz push es
  4183c6:	sbb    bh,BYTE PTR [ebx]
  4183c8:	fidivr DWORD PTR ds:0x1a967ff6
  4183ce:	out    0x3,eax
  4183d0:	mov    esp,0x7becffcb
  4183d5:	mov    esi,ebx
  4183d7:	int3   
  4183d8:	lock push es
  4183da:	mov    esi,esi
  4183dc:	jmp    0xf12b186d
  4183e1:	push   es
  4183e2:	mov    DWORD PTR [esi-0x141f82a0],ebp
  4183e8:	mov    al,ds:0xbbf5753b
  4183ed:	mov    ah,0xb
  4183ef:	inc    BYTE PTR [eax]
  4183f1:	add    BYTE PTR [eax],al
  4183f3:	push   esi
  4183f4:	int3   
  4183f5:	adc    eax,0x458df0a9
  4183fa:	aad    0xb7
  4183fc:	mov    ecx,0xc327007
  418401:	mov    DWORD PTR [edi+eax*8],esp
  418404:	test   esp,eax
  418406:	in     eax,0x9f
  418408:	(bad)  
  418409:	pop    ss
  41840a:	sar    dh,0x3d
  41840d:	std    
  41840e:	mov    BYTE PTR [edx+esi*2],0x45
  418412:	call   0x6a594b9e
  418417:	mov    esp,0xa80be708
  41841c:	cmp    ebp,edi
  41841e:	jb     0x4183d2
  418420:	out    0x3f,eax
  418422:	cmp    ecx,ecx
  418424:	cmp    esp,DWORD PTR [edi-0x17]
  418427:	xor    eax,0x845c17b8
  41842c:	push   es
  41842d:	push   esi
  41842e:	xchg   BYTE PTR [edx+0x2cb2890b],ah
  418434:	mov    eax,0x3a2760b
  418439:	call   0xfd7bade8
  41843e:	push   0x3f
  418440:	cmp    al,0x71
  418442:	or     eax,0x56fc13fa
  418447:	xor    al,0xb3
  418449:	and    ah,BYTE PTR [edi+ebp*1-0x4d]
  41844d:	or     BYTE PTR [eax],al
  41844f:	mul    DWORD PTR [ecx+edi*8]
  418452:	inc    ebp
  418454:	xor    eax,DWORD PTR [edx+0xb0]
  41845a:	out    dx,al
  41845b:	add    al,BYTE PTR [eax]
  41845d:	paddb  mm7,QWORD PTR [ebx-0x2]
  418461:	push   cs
  418462:	int3   
  418463:	jae    0x418464
  418465:	sar    dl,0x3a
  418468:	or     cl,al
  41846a:	dec    ecx
  41846b:	iret   
  41846c:	jg     0x4184ad
  41846e:	sahf   
  41846f:	dec    ebx
  418470:	scas   al,BYTE PTR es:[edi]
  418471:	jmp    0x4184cf
  418473:	rol    BYTE PTR [ebp+0x70],0xc3
  418477:	inc    ebp
  418478:	add    eax,0xc768580
  41847d:	test   BYTE PTR [edi],bh
  41847f:	and    edi,ebp
  418481:	dec    DWORD PTR [esi+eax*2+0x1d]
  418485:	add    DWORD PTR ds:0xa1d7986,edx
  41848b:	pop    es
  41848c:	or     esi,DWORD PTR [esi-0x49f4fe33]
  418492:	lds    ecx,FWORD PTR [eax]
  418494:	mov    ebp,0xbe4002e0
  418499:	add    eax,DWORD PTR [edx-0x79]
  41849c:	cmp    edx,DWORD PTR [esi+edi*4-0x22]
  4184a0:	xchg   BYTE PTR [esi+0x65a],al
  4184a6:	pop    ecx
  4184a7:	stc    
  4184a8:	dec    BYTE PTR [eax-0x6c19ccf1]
  4184ae:	add    cl,0xfa
  4184b1:	mov    ebx,DWORD PTR [edi]
  4184b3:	out    0x3f,eax
  4184b5:	push   eax
  4184b6:	loopne 0x4184ba
  4184b8:	push   0x0
  4184ba:	inc    ebp
  4184bb:	push   edi
  4184bc:	adc    eax,0x8d
  4184c1:	fld    QWORD PTR ds:0x36cfff56
  4184c7:	mov    bl,cl
  4184c9:	inc    ebp
  4184ca:	push   edi
  4184cb:	or     edi,edi
  4184cd:	repz pop edx
  4184cf:	stc    
  4184d0:	out    0xdf,eax
  4184d2:	aad    0x45
  4184d4:	std    
  4184d5:	jo     0x41849f
  4184d7:	add    ecx,DWORD PTR ds:0xffe4db6f
  4184dd:	jl     0x418512
  4184df:	in     al,dx
  4184e0:	sti    
  4184e1:	je     0x4184cc
  4184e3:	cmc    
  4184e4:	add    DWORD PTR [ecx+0x26000404],0x3c
  4184eb:	inc    ebp
  4184ec:	std    
  4184ed:	pop    esp
  4184ee:	pushf  
  4184ef:	adc    bh,BYTE PTR [ebx]
  4184f1:	clc    
  4184f2:	or     eax,DWORD PTR [esi-0x3]
  4184f5:	(bad)  
  4184f6:	push   ebx
  4184f7:	or     BYTE PTR [edx],bl
  4184f9:	inc    edi
  4184fa:	cmp    DWORD PTR [ebx+0x74],eax
  4184fd:	push   ss
  4184fe:	stos   DWORD PTR es:[edi],eax
  4184ff:	inc    eax
  418500:	je     0x4184ea
  418502:	push   0xffffffe3
  418504:	sti    
  418505:	sub    al,0x21
  418507:	repz sub bh,0x3
  41850b:	add    al,0x0
  41850d:	in     al,dx
  41850e:	cdq    
  41850f:	mov    ebx,0xb391e5fe
  418514:	add    DWORD PTR [edx],esi
  418516:	push   eax
  418517:	cld    
  418518:	or     BYTE PTR [edx],dh
  41851a:	sub    eax,0x1bbc8049
  41851f:	rcl    BYTE PTR [ebx-0x4a0babf8],1
  418525:	add    BYTE PTR [eax],al
  418527:	add    BYTE PTR [edi+ebp*1],dh
  41852a:	hlt    
  41852b:	mov    ch,0x34
  41852d:	cs inc edx
  41852f:	loopne 0x41851c
  418531:	and    al,0x42
  418533:	add    ebx,ebx
  418535:	scas   eax,DWORD PTR es:[edi]
  418536:	add    dl,BYTE PTR [edi+eax*2-0x6c]
  41853a:	dec    esi
  41853b:	inc    ebx
  41853c:	adc    ebp,DWORD PTR [edi]
  41853e:	hlt    
  41853f:	sub    BYTE PTR [edi+0x70000153],0x60
  418546:	jmp    esi
  418548:	lods   al,BYTE PTR ds:[esi]
  418549:	push   es
  41854a:	pusha  
  41854b:	inc    ebp
  41854c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41854d:	or     DWORD PTR [ebp-0x62f76243],edx
  418553:	mov    ch,0xf2
  418555:	inc    edi
  418556:	inc    edi
  418557:	cld    
  418558:	sti    
  418559:	inc    edi
  41855a:	adc    ch,BYTE PTR [edx+ecx*8]
  41855d:	fmul   st,st(6)
  41855f:	hlt    
  418560:	jb     0x41857e
  418562:	rol    DWORD PTR [ebx],cl
  418564:	repz std 
  418566:	mov    ebx,cs
  418568:	jecxz  0x4185c7
  41856a:	jo     0x418512
  41856c:	fsubr  QWORD PTR ds:0x37188135
  418572:	sub    al,0xc1
  418574:	push   esp
  418575:	cmp    esi,ebx
  418577:	jg     0x4185e2
  418579:	push   es
  41857a:	out    0x3,eax
  41857c:	div    BYTE PTR [eax-0x5a]
  41857f:	add    ch,BYTE PTR [edx-0x38]
  418582:	cmp    BYTE PTR [edx+0x70],0xaa
  418586:	in     eax,dx
  418587:	inc    esp
  418588:	lea    ebp,cs:0xf8
  41858f:	ins    DWORD PTR es:[edi],dx
  418590:	adc    DWORD PTR [edi+0x45],0x1e
  418594:	cmp    DWORD PTR [edx-0x43],esp
  418597:	mov    ebp,gs
  418599:	sahf   
  41859a:	jp     0x418614
  41859c:	mov    esi,0x8d0644c5
  4185a1:	sub    al,0xfc
  4185a3:	retf   
  4185a4:	dec    esi
  4185a5:	pusha  
  4185a6:	jle    0x418627
  4185a8:	cmp    DWORD PTR [esi+0x238a7444],ebp
  4185ae:	inc    ebp
  4185af:	out    0x38,al
  4185b1:	jb     0x4185eb
  4185b3:	or     cl,BYTE PTR [edi-0x1a]
  4185b6:	lea    ebp,[esi]
  4185b8:	add    eax,0x8dfb63a8
  4185bd:	xor    al,0x84
  4185bf:	div    BYTE PTR [eax+0x2e]
  4185c2:	add    edx,ebp
  4185c4:	inc    ebp
  4185c5:	add    dh,ah
  4185c7:	retfw  0x6002
  4185cb:	ins    DWORD PTR es:[edi],dx
  4185cc:	mov    BYTE PTR ds:0xbf04679f,cl
  4185d2:	dec    ecx
  4185d3:	cwde   
  4185d4:	movsx  esp,WORD PTR [eax+0x55]
  4185d8:	xchg   esp,eax
  4185d9:	mov    DWORD PTR [eax+eax*4-0x3ed4d66f],esp
  4185e0:	xchg   DWORD PTR ds:[esp+edi*8-0xf927973],esp
  4185e8:	push   es
  4185e9:	add    BYTE PTR [eax-0x53],ah
  4185ec:	or     BYTE PTR [ecx+0x6d86f],0xe9
  4185f3:	add    BYTE PTR [eax],al
  4185f5:	add    ch,ah
  4185f7:	mov    ebp,DWORD PTR [eax+0x16]
  4185fa:	scas   eax,DWORD PTR es:[edi]
  4185fb:	cmp    ebp,eax
  4185fd:	sub    BYTE PTR fs:[ebx],bh
  418600:	std    
  418601:	push   es
  418602:	icebp  
  418603:	push   es
  418604:	add    cl,ch
  418606:	mov    ecx,0x46f68bc3
  41860b:	sub    bl,al
  41860d:	stos   BYTE PTR es:[edi],al
  41860e:	lock add eax,0xfffffff6
  418612:	and    DWORD PTR [ecx+0x4],0x8809f0e9
  418619:	(bad)  
  41861a:	or     eax,0xb86afd38
  41861f:	add    bh,ah
  418621:	pop    ss
  418622:	(bad)  
  418623:	cmp    ebp,edi
  418625:	jo     0x418659
  418627:	adc    al,0x87
  418629:	adc    al,0xbf
  41862b:	lea    eax,[ebx+0x5]
  41862e:	mov    bh,0xc7
  418630:	imul   ebp,ecx,0x6c1bb431
  418636:	mov    eax,0xf71cfd06
  41863b:	(bad)  
  41863c:	leave  
  41863d:	aaa    
  41863e:	xor    BYTE PTR [edi+ecx*1+0x97d6d00],dh
  418645:	inc    edi
  418647:	or     ebp,eax
  418649:	enter  0xc442,0xfa
  41864d:	and    DWORD PTR [edx],0x2
  418650:	je     0x418677
  418652:	pop    ss
  418653:	ret    
  418654:	jae    0x418661
  418656:	jmp    esp
  418658:	sti    
  418659:	inc    DWORD PTR [eax]
  41865b:	add    BYTE PTR [eax],al
  41865d:	cmp    eax,0xf8bc8114
  418662:	add    al,BYTE PTR [eax]
  418664:	(bad)  
  418666:	dec    esp
  418667:	dec    BYTE PTR [esi]
  418669:	add    al,0x54
  41866b:	inc    eax
  41866d:	sub    cl,BYTE PTR [ebx]
  41866f:	pop    es
  418670:	rcr    DWORD PTR [ecx-0x5],0x7f
  418674:	aas    
  418675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418676:	outs   dx,DWORD PTR ds:[esi]
  418677:	mov    ah,0xeb
  418679:	push   esp
  41867a:	mov    BYTE PTR [esi+0x70],al
  41867d:	ror    DWORD PTR [ebp+0x5],cl
  418680:	mov    dl,BYTE PTR [ebp+0x37]
  418683:	pop    edx
  418684:	je     0x4186c8
  418686:	aaa    
  418687:	push   ecx
  418688:	(bad)  
  41868a:	or     eax,0x144a0017
  41868f:	mov    dh,0x47
  418691:	sbb    edx,DWORD PTR [esi+esi*4]
  418694:	dec    edi
  418695:	sbb    dl,al
  418697:	fisttp WORD PTR [eax]
  418699:	and    edx,eax
  41869b:	(bad)  
  41869c:	test   DWORD PTR [edx+0x4e745404],0x81553b83
  4186a6:	lea    eax,[eax-0x78fcf600]
  4186ac:	pop    esi
  4186ad:	mov    dh,0x89
  4186af:	inc    ecx
  4186b0:	adc    ch,cl
  4186b2:	mov    ss,WORD PTR [ebp+0x36c98dfe]
  4186b8:	pop    ebp
  4186b9:	jp     0x4186d4
  4186bb:	test   BYTE PTR [eax-0x2bd620d],dl
  4186c1:	add    BYTE PTR [eax],al
  4186c3:	add    BYTE PTR [esi-0x13],bh
  4186c6:	add    al,0x80
  4186c8:	or     esp,DWORD PTR [edi]
  4186ca:	mov    WORD PTR [ebx+0x13],es
  4186cd:	cmp    edx,DWORD PTR [edx]
  4186cf:	mov    DWORD PTR [esi],esp
  4186d1:	pop    eax
  4186d2:	adc    dh,BYTE PTR [esi-0x2079d3cc]
  4186d8:	stos   DWORD PTR es:[edi],eax
  4186d9:	cmp    DWORD PTR [edi+eax*4+0x36],eax
  4186dd:	or     BYTE PTR [ebp-0x7ea030bd],cl
  4186e3:	cmp    eax,0x504da924
  4186e8:	hlt    
  4186e9:	mov    ds:0x1ff3151c,al
  4186ee:	mov    ss,WORD PTR [ebx-0x2d]
  4186f1:	dec    ecx
  4186f2:	add    ebp,edi
  4186f4:	out    0x43,al
  4186f6:	inc    edx
  4186f7:	jae    0x418704
  4186f9:	jbe    0x41873d
  4186fb:	jae    0x418700
  4186fd:	adc    eax,0x93540bb8
  418702:	or     eax,ebp
  418704:	out    0x17,eax
  418706:	inc    edx
  418707:	std    
  418708:	outs   dx,BYTE PTR ds:[esi]
  418709:	loopne 0x41871c
  41870b:	and    edi,0x41
  41870e:	add    DWORD PTR [eax],eax
  418710:	push   0xb7e714bb
  418715:	pop    esp
  418716:	add    DWORD PTR [eax],eax
  418718:	hlt    
  418719:	xchg   ebp,eax
  41871a:	(bad)  
  41871b:	(bad)  
  41871c:	in     eax,dx
  41871d:	popf   
  41871e:	iret   
  41871f:	add    DWORD PTR [edx],esi
  418721:	inc    eax
  418722:	or     al,0x9
  418724:	xor    ah,BYTE PTR [ecx]
  418726:	cmp    DWORD PTR [eax-0x3c000000],eax
  41872c:	adc    edi,DWORD PTR [eax+0x3c1a0aeb]
  418732:	std    
  418733:	hlt    
  418734:	test   al,0xc4
  418736:	and    esi,DWORD PTR [eax+eiz*8]
  418739:	shr    DWORD PTR [ecx-0xd],cl
  41873c:	push   es
  41873d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41873e:	mov    bh,0xf8
  418740:	xor    DWORD PTR [esi+0x620f6041],0x1436254d
  41874a:	adc    al,0xc6
  41874c:	mov    ebx,0xff4040f2
  418751:	mov    cs,WORD PTR [esi-0x42]
  418754:	xor    eax,0x5b38776
  418759:	fs dec esi
  41875b:	add    al,0x7
  41875d:	out    0x10,eax
  41875f:	gs int 0xe7
  418762:	adc    BYTE PTR [ebp-0x3b],bl
  418765:	call   0xe2401aac
  41876a:	inc    edx
  41876b:	repnz add DWORD PTR cs:[bx],esp
  418770:	mov    ebx,0x33942b4a
  418775:	ss inc ecx
  418777:	mov    dh,0x81
  418779:	adc    DWORD PTR es:[ebp-0x5aef1842],ebx
  418780:	(bad)  
  418781:	call   0xe23fbbc8
  418786:	dec    ebp
  418787:	repnz inc edi
  418789:	addr16 cld 
  41878b:	mov    al,ds:0x8d12ba
  418790:	add    BYTE PTR [eax],al
  418792:	test   al,0xea
  418794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418795:	ror    dl,cl
  418797:	push   es
  418798:	div    BYTE PTR [esi+0x4978408]
  41879e:	es mov ebx,0xdc2a8cfe
  4187a4:	fnsave [esi+0x105c35e4]
  4187aa:	push   cs
  4187ab:	mov    ebx,0x3d942bde
  4187b0:	mov    BYTE PTR [eax+0x70],0x46
  4187b4:	out    dx,al
  4187b5:	xchg   BYTE PTR [edi+eiz*8+0x2bf0e8ff],al
  4187bc:	mov    eax,ds:0x453233b6
  4187c1:	neg    BYTE PTR [edx-0x36]
  4187c4:	(bad)  
  4187c5:	in     eax,dx
  4187c6:	pop    edx
  4187c7:	ret    0xa801
  4187ca:	adc    bh,bh
  4187cc:	or     BYTE PTR [eax-0x397fd111],ch
  4187d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187d3:	mov    eax,0x306e90eb
  4187d8:	std    
  4187d9:	jbe    0x4187de
  4187db:	jge    0x41882a
  4187dd:	call   0xeb8704e5
  4187e2:	xor    DWORD PTR [eax+ecx*1-0xe],edx
  4187e6:	sub    BYTE PTR [esi-0x3b],bh
  4187e9:	add    dh,BYTE PTR [eax]
  4187eb:	xchg   DWORD PTR [eax],edi
  4187ed:	enter  0xc879,0x13
  4187f1:	mov    ebx,0xdd4b7de0
  4187f6:	add    BYTE PTR [eax],al
  4187f8:	add    BYTE PTR [edi-0x3c],ah
  4187fb:	add    esp,DWORD PTR [edx-0x7]
  4187fe:	mov    edx,DWORD PTR [ebx+0x39]
  418801:	jns    0x4187c3
  418803:	sbb    edx,DWORD PTR [edx]
  418805:	hlt    
  418806:	test   DWORD PTR [ebx+0x19],esp
  418809:	lock or BYTE PTR [eax],0x69
  41880d:	or     edi,ecx
  41880f:	or     al,0x65
  418811:	mov    eax,0x70e9000d
  418816:	cmp    al,0x57
  418818:	out    dx,al
  418819:	ins    BYTE PTR es:[edi],dx
  41881a:	jb     0x418835
  41881c:	jmp    0x94390f11
  418821:	add    ecx,DWORD PTR [ebx+0x6f702b6]
  418827:	and    al,0x38
  41882a:	add    eax,DWORD PTR [esp+eax*4+0x690006e8]
  418831:	(bad)  
  418832:	iret   
  418833:	or     al,0x0
  418835:	mov    ds,WORD PTR [esi-0x77f5ffea]
  41883b:	cmc    
  41883c:	pop    edi
  41883d:	add    al,BYTE PTR cs:[eax-0x7efbc707]
  418844:	fwait
  418845:	retf   0x7
  418848:	(bad)  
  41884a:	inc    ebx
  41884b:	add    BYTE PTR [edi],cl
  41884d:	sub    al,0x4b
  41884f:	add    ecx,eax
  418851:	jnp    0x418855
  418853:	pop    es
  418854:	enter  0xf47,0x5
  418858:	mov    DWORD PTR [edi],eax
  41885a:	out    dx,eax
  41885b:	test   BYTE PTR [esi+0x1e000000],cl
  418861:	or     eax,DWORD PTR [eax]
  418863:	add    BYTE PTR [ecx+0x59],ah
  418866:	adc    DWORD PTR [ebx+eiz*4-0x34],edi
  41886a:	inc    ebp
  41886b:	cmp    BYTE PTR [ebx+0x31000007],cl
  418871:	and    eax,0x80a64688
  418876:	retf   0x5c8b
  418879:	pop    ss
  41887a:	daa    
  41887b:	push   ebp
  41887c:	mov    esi,0xd390147f
  418881:	push   cs
  418882:	mov    BYTE PTR [ebx-0x3c78fc84],cl
  418888:	inc    ecx
  418889:	dec    ecx
  41888a:	mov    DWORD PTR gs:[esi-0x6874fb83],ecx
  418891:	sti    
  418892:	mov    BYTE PTR [ebx+edx*2],al
  418895:	xor    al,BYTE PTR [edx+0x10]
  418898:	jne    0x4188a3
  41889a:	jg     0x41885c
  41889c:	dec    eax
  41889d:	add    BYTE PTR [ecx+0x10],0x91
  4188a1:	pushf  
  4188a2:	xchg   esp,eax
  4188a3:	add    BYTE PTR [edx],bl
  4188a5:	pop    es
  4188a6:	adc    edx,0x4a3631be
  4188ac:	push   cs
  4188ad:	outs   dx,BYTE PTR ds:[esi]
  4188ae:	xor    DWORD PTR [ebx+0xd8a57f3],ecx
  4188b4:	jp     0x418889
  4188b6:	xchg   esp,eax
  4188b7:	add    bl,dh
  4188b9:	sbb    eax,0x5ee3458a
  4188be:	and    DWORD PTR [edx],eax
  4188c0:	inc    ebx
  4188c1:	jns    0x418879
  4188c3:	or     eax,DWORD PTR [eax]
  4188c5:	add    BYTE PTR [eax],al
  4188c7:	in     al,0xfa
  4188c9:	paddw  mm0,QWORD PTR [esi]
  4188cc:	push   eax
  4188cd:	adc    eax,DWORD PTR [eax-0xd]
  4188d0:	mov    ah,0xc5
  4188d2:	adc    edi,DWORD PTR [eax+0x19]
  4188d5:	or     al,0x87
  4188d7:	xor    BYTE PTR cs:[edx+0x449dcb43],cl
  4188de:	or     al,0x6a
  4188e0:	jmp    0x4188fd
  4188e2:	out    0x74,eax
  4188e4:	mov    dl,0x3d
  4188e6:	std    
  4188e7:	js     0x4188d4
  4188e9:	pop    ss
  4188ea:	sbb    ah,0x72
  4188ed:	mov    cl,BYTE PTR [ebx-0x75]
  4188f0:	mov    bh,0xcf
  4188f2:	pop    ss
  4188f3:	cld    
  4188f4:	mov    ds:0xc184fbaa,eax
  4188f9:	stc    
  4188fa:	pop    edx
  4188fb:	cmp    DWORD PTR [ecx],0xffffff85
  4188fe:	arpl   WORD PTR [edi-0xf],si
  418901:	cmp    eax,0x1a3f2b80
  418906:	shl    BYTE PTR [eax-0x40],0x3a
  41890a:	xor    DWORD PTR [ebx],0xbc3d811e
  418910:	mov    dh,0xc7
  418912:	pop    ds
  418913:	cld    
  418914:	mov    ds:0x1ff312e9,al
  418919:	mov    al,BYTE PTR [ebx+0x17]
  41891c:	pusha  
  41891d:	shr    DWORD PTR [ecx-0xd],1
  418920:	xor    BYTE PTR [ebp+0x2917e1b],dh
  418926:	dec    edi
  418927:	mov    ebp,0xfb520
  41892c:	add    BYTE PTR [eax],al
  41892e:	push   0xa03db207
  418933:	add    bl,dh
  418935:	mov    bh,0xf4
  418937:	push   ds
  418938:	fidiv  WORD PTR [edi]
  41893a:	push   es
  41893b:	xor    ah,BYTE PTR [esp+eax*2-0x12]
  41893f:	mov    edi,DWORD PTR [esi+0x6f31d]
  418945:	(bad)  
  418946:	or     al,0x2
  418948:	ins    BYTE PTR es:[edi],dx
  418949:	xchg   BYTE PTR [ecx],cl
  41894b:	pop    es
  41894c:	out    0x88,eax
  41894e:	pop    eax
  41894f:	sbb    edx,DWORD PTR [eax-0x18f8fe1e]
  418955:	or     BYTE PTR [ebp-0xd],0xe6
  418959:	mov    bh,0xed
  41895b:	in     eax,dx
  41895c:	sub    al,0xac
  41895e:	out    dx,eax
  41895f:	mov    ch,BYTE PTR [eax]
  418961:	sbb    al,0xf3
  418963:	push   es
  418964:	jne    0x41892d
  418966:	add    al,0x5
  418968:	sti    
  418969:	test   eax,0xf8fec07b
  41896e:	lds    edi,FWORD PTR [edx-0x5cc9073d]
  418974:	in     eax,dx
  418975:	xchg   edx,ebx
  418977:	push   cs
  418978:	out    0x3,eax
  41897a:	jp     0x418944
  41897c:	out    dx,al
  41897d:	xchg   BYTE PTR [ebx-0x6206f946],dh
  418983:	add    DWORD PTR [ebp+0x20],esp
  418986:	or     eax,DWORD PTR [edi]
  418988:	out    0xa9,eax
  41898a:	fs (bad) 
  41898c:	xchg   esi,eax
  41898d:	mov    es,ebp
  41898f:	adc    dh,BYTE PTR [edx+0x41]
  418992:	add    BYTE PTR [eax],al
  418994:	add    BYTE PTR [ebx-0x4a],cl
  418997:	jo     0x41899d
  418999:	repz mov esp,DWORD PTR [edi]
  41899c:	or     eax,0x3ef086f
  4189a1:	repz sbb eax,0x12ad88d4
  4189a7:	jmp    0x72e6:0x4fea4b
  4189ae:	cmp    edx,DWORD PTR ds:0xc97ff0e9
  4189b4:	adc    ah,BYTE PTR [edi+0x25230f7c]
  4189ba:	fisttp QWORD PTR [esp+ebp*2]
  4189bd:	fcomp  DWORD PTR [ebx]
  4189bf:	add    cl,ch
  4189c1:	jae    0x4189f1
  4189c3:	(bad)  
  4189c4:	cmp    al,0xe3
  4189c6:	jl     0x418a07
  4189c8:	call   0xe66c54b7
  4189cd:	ins    DWORD PTR es:[edi],dx
  4189ce:	pop    edx
  4189cf:	adc    eax,0xe6c9f0e9
  4189d4:	xchg   DWORD PTR ds:0xaee2fd32,ebx
  4189da:	test   al,0xe8
  4189dc:	xchg   BYTE PTR [ebx-0x77],bh
  4189df:	mov    cl,ch
  4189e1:	lock push es
  4189e3:	add    DWORD PTR [edi],ebp
  4189e5:	xchg   edi,ebp
  4189e7:	xlat   BYTE PTR ds:[ebx]
  4189e8:	xchg   edx,eax
  4189e9:	rol    BYTE PTR [edi+0x25dbe15b],cl
  4189ef:	mul    BYTE PTR [edi+edi*8]
  4189f2:	add    al,0x74
  4189f4:	lods   al,BYTE PTR ds:[esi]
  4189f5:	imul   eax,ecx,0x6b
  4189f8:	and    al,BYTE PTR [eax]
  4189fa:	add    BYTE PTR [eax],al
  4189fc:	sub    BYTE PTR [esi+0x18ae6237],dh
  418a02:	sub    DWORD PTR [ecx],0x44
  418a05:	add    ebp,DWORD PTR [edx-0x17]
  418a08:	mov    al,ds:0x7bdd567d
  418a0d:	inc    esi
  418a0e:	call   0x49037b
  418a13:	inc    edx
  418a14:	imul   edi,DWORD PTR [esi+0x46],0x39484a05
  418a1b:	inc    eax
  418a1c:	dec    DWORD PTR [ecx+0x6f0fe8a]
  418a22:	mov    ah,dl
  418a24:	cmp    al,dl
  418a26:	sub    eax,DWORD PTR [eax]
  418a28:	cmp    eax,0x1a177b89
  418a2d:	add    al,0x7f
  418a2f:	clc    
  418a30:	sbb    edi,DWORD PTR [eax-0x60]
  418a33:	mov    cl,BYTE PTR [ecx+0x5]
  418a36:	out    0x95,eax
  418a38:	mov    DWORD PTR [ebp+edi*1+0x0],ebp
  418a3c:	and    DWORD PTR [ecx+0xada7e7f],ebx
  418a42:	or     eax,DWORD PTR [ebp+0x13b7]
  418a48:	mov    DWORD PTR [ebp+ecx*2+0x0],ebp
  418a4c:	daa    
  418a4d:	push   0xffffff88
  418a4f:	dec    esi
  418a50:	cs xor dh,dl
  418a53:	je     0x418aa0
  418a55:	add    BYTE PTR [esi+0x18],0x47
  418a59:	retf   
  418a5a:	jae    0x418a7b
  418a5c:	rcl    edx,1
  418a5e:	or     al,BYTE PTR [ebx+0x13000000]
  418a64:	adc    al,0x0
  418a66:	add    al,dh
  418a68:	or     dl,BYTE PTR [eax-0x73]
  418a6b:	aam    0xe
  418a6d:	xchg   ebx,eax
  418a6f:	and    BYTE PTR [esi],0x86
  418a72:	add    BYTE PTR [edx+0x160fc086],bl
  418a78:	aaa    
  418a79:	adc    al,0x0
  418a7b:	mov    ah,al
  418a7d:	and    al,0x8b
  418a7f:	push   esp
  418a80:	pop    ss
  418a81:	daa    
  418a82:	enter  0xd1e1,0xa
  418a86:	xchg   edi,esi
  418a88:	adc    eax,DWORD PTR [eax]
  418a8a:	add    BYTE PTR [eax],al
  418a8c:	add    BYTE PTR [edx],bh
  418a8e:	dec    esi
  418a8f:	(bad)  
  418a90:	sti    
  418a91:	sbb    BYTE PTR [edx],0x45
  418a94:	add    eax,DWORD PTR [eax]
  418a96:	and    DWORD PTR [edx],0xa
  418a99:	je     0x418aa7
  418a9b:	loopne 0x418ae4
  418a9d:	(bad)  
  418a9e:	cmp    DWORD PTR [esi+ebx*1+0x26f3850c],edx
  418aa5:	adc    al,BYTE PTR [eax]
  418aa7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aa9:	shr    DWORD PTR [ebx+0x8],0x60
  418aad:	adc    eax,0x3a30e8e7
  418ab2:	std    
  418ab3:	call   0x714e304f
  418ab8:	cmp    cl,BYTE PTR [edi]
  418aba:	add    bl,dh
  418abc:	push   esi
  418abd:	sbb    al,0xfd
  418abf:	or     al,0x50
  418ac1:	mov    cs,WORD PTR [esi-0x69]
  418ac4:	adc    al,0x5b
  418ac6:	or     eax,0x77000000
  418acb:	dec    edi
  418acc:	cmp    bh,ch
  418ace:	hlt    
  418acf:	mov    bl,0xbe
  418ad1:	pop    ss
  418ad2:	jbe    0x418b34
  418ad4:	lods   eax,DWORD PTR ds:[esi]
  418ad5:	and    ch,BYTE PTR [eax]
  418ad7:	xchg   edi,eax
  418ad8:	mov    dh,0xe
  418ada:	dec    ecx
  418adb:	and    cl,dl
  418add:	mov    bh,BYTE PTR ds:0xdbc18d04
  418ae3:	ror    DWORD PTR [eax+0x409af300],cl
  418ae9:	jae    0x418af9
  418aeb:	push   ecx
  418aec:	inc    ecx
  418aed:	mov    DWORD PTR [esi],esp
  418aef:	xor    al,0x8c
  418af1:	mov    cs,WORD PTR [edi-0x65fffee0]
  418af7:	in     eax,0x19
  418af9:	add    bl,dh
  418afb:	test   al,0xbe
  418afd:	sbb    ecx,eax
  418aff:	idiv   ebp
  418b01:	(bad)  
  418b02:	add    al,0xc5
  418b04:	mov    cl,BYTE PTR [ecx]
  418b06:	leave  
  418b07:	gs in  eax,0x72
  418b0a:	xchg   ebx,eax
  418b0b:	mov    eax,ds:0x3800ff38
  418b10:	mov    eax,DWORD PTR [ecx-0xe]
  418b13:	or     edx,eax
  418b15:	sub    bl,dh
  418b17:	adc    BYTE PTR [esi-0x3df730ba],cl
  418b1d:	sbb    ebx,DWORD PTR [eax]
  418b1f:	pop    es
  418b20:	aas    
  418b21:	mov    al,0x35
  418b23:	and    BYTE PTR [ebp+0x39],dl
  418b26:	inc    esi
  418b27:	cs rcr cl,cl
  418b2a:	aam    0xb3
  418b2c:	loop   0x418b24
  418b2e:	add    BYTE PTR [eax],al
  418b30:	add    BYTE PTR ds:0xcefee322,ch
  418b36:	scas   al,BYTE PTR es:[edi]
  418b37:	jne    0x418b3a
  418b39:	js     0x418b05
  418b3b:	cmc    
  418b3c:	mov    esi,DWORD PTR [ebp-0x4d8e2252]
  418b42:	sub    eax,0xfdc0ca72
  418b47:	xchg   esp,eax
  418b48:	or     bl,bh
  418b4a:	inc    edi
  418b4b:	rol    BYTE PTR [eax],0x72
  418b4e:	sub    al,ch
  418b50:	cld    
  418b51:	xchg   esi,eax
  418b52:	call   0x7f3a:0xc47a1a38
  418b59:	mov    bl,0xb2
  418b5b:	frndint 
  418b5d:	cmp    edi,edi
  418b5f:	xor    al,0xa
  418b61:	and    bl,BYTE PTR [ecx+0x29]
  418b64:	mov    esp,DWORD PTR ds:0xf645e1cb
  418b6a:	jge    0x418bc6
  418b6c:	add    al,0xf3
  418b6e:	push   es
  418b6f:	fiadd  DWORD PTR [ebx-0x36]
  418b72:	push   ss
  418b73:	div    BYTE PTR [ecx-0xe]
  418b76:	adc    DWORD PTR ds:0xeb74f7f0,0xe31e5c05
  418b80:	test   BYTE PTR [ebx+0x36117107],dl
  418b86:	xchg   DWORD PTR [ecx-0x1],esp
  418b89:	add    DWORD PTR [eax],eax
  418b8b:	sbb    dl,BYTE PTR [esi-0x46]
  418b8e:	inc    edi
  418b8f:	fimul  WORD PTR [edi-0xb11de4f]
  418b95:	add    BYTE PTR [eax],al
  418b97:	add    BYTE PTR [edx-0xf],al
  418b9a:	daa    
  418b9b:	or     DWORD PTR [eax-0x4a9dffb8],eax
  418ba1:	mov    eax,eax
  418ba3:	(bad)  
  418ba5:	es icebp 
  418ba7:	or     ah,BYTE PTR es:[esi]
  418baa:	inc    ebx
  418bab:	push   ds
  418bac:	or     ch,BYTE PTR [ecx+ecx*4]
  418baf:	scas   eax,DWORD PTR es:[edi]
  418bb0:	fdivr  DWORD PTR [edi+0x4e]
  418bb3:	jge    0x418b6a
  418bb5:	inc    esi
  418bb6:	je     0x418b9a
  418bb8:	das    
  418bb9:	push   esp
  418bba:	jno    0x418b79
  418bbc:	push   esi
  418bbd:	sub    eax,0x1141644d
  418bc2:	mov    DWORD PTR [edx],ebp
  418bc4:	(bad)  
  418bc5:	dec    edi
  418bc6:	test   ecx,ebp
  418bc8:	lock mov eax,eax
  418bcb:	out    dx,al
  418bcc:	test   eax,ebp
  418bce:	cld    
  418bcf:	(bad)  
  418bd0:	mov    ebx,0x3262231f
  418bd5:	adc    DWORD PTR [ecx],ebp
  418bd7:	mov    cl,0xef
  418bd9:	push   ebp
  418bda:	jne    0x418bb9
  418bdc:	jbe    0x418bdc
  418bde:	cmp    DWORD PTR [edi],esp
  418be0:	retf   
  418be1:	mov    ecx,0x2c186a12
  418be6:	push   cs
  418be7:	ins    DWORD PTR es:[edi],dx
  418be8:	repz sub ebp,edi
  418beb:	sahf   
  418bec:	jbe    0x418bb4
  418bee:	(bad)  
  418bef:	shl    BYTE PTR [edx-0x89af31f],cl
  418bf5:	sub    al,0xfd
  418bf7:	xchg   BYTE PTR [edi+0x46],bh
  418bfa:	inc    ecx
  418bfb:	ret    0x0
  418bfe:	add    BYTE PTR [edx-0x2e94f360],dh
  418c04:	das    
  418c05:	std    
  418c06:	outs   dx,BYTE PTR ds:[esi]
  418c07:	lds    edi,FWORD PTR [bp+di+0x6c]
  418c0b:	xor    dl,bh
  418c0d:	add    DWORD PTR [ebp-0x36],0x29
  418c11:	std    
  418c12:	adc    ah,BYTE PTR [esp+eax*1+0x2d17670d]
  418c19:	std    
  418c1a:	add    BYTE PTR [ebp-0x1cbe39ce],dh
  418c20:	cmp    eax,0xff0b3b59
  418c25:	(bad)  
  418c26:	int    0x4
  418c28:	out    dx,eax
  418c29:	cli    
  418c2a:	push   0xffffffee
  418c2c:	dec    edi
  418c2d:	out    0xc7,al
  418c2f:	in     al,0xee
  418c31:	cli    
  418c32:	cmp    eax,DWORD PTR [esp+eiz*2-0x49ea2e90]
  418c39:	dec    BYTE PTR [edx-0x9bfe39c]
  418c3f:	push   cs
  418c40:	add    BYTE PTR [ecx+ebp*8],al
  418c43:	out    dx,eax
  418c44:	in     eax,dx
  418c45:	cli    
  418c46:	jmp    DWORD PTR [ecx+0x4e]
  418c49:	imul   esi,DWORD PTR [ebx+0x56],0x8103b604
  418c50:	inc    esp
  418c51:	xor    DWORD PTR [ebx+0x1c],eax
  418c54:	pop    es
  418c55:	or     BYTE PTR [edx*1-0x4a016654],al
  418c5c:	repz in al,0x87
  418c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c60:	repz cli 
  418c62:	cmp    eax,DWORD PTR [eax]
  418c64:	add    BYTE PTR [eax],al
  418c66:	add    al,0x5f
  418c68:	jo     0x418c0b
  418c6a:	mov    ch,0x99
  418c6c:	dec    BYTE PTR [edx-0x9bfc8fc]
  418c72:	into   
  418c73:	(bad)  
  418c74:	cld    
  418c75:	call   0x3c8199
  418c7a:	mov    eax,ds:0x26736951
  418c7f:	add    al,0xb6
  418c81:	add    esp,DWORD PTR [ecx]
  418c83:	inc    ebp
  418c84:	xor    DWORD PTR [ebx+0x1c],eax
  418c87:	pop    es
  418c88:	or     BYTE PTR [ecx],al
  418c8a:	jno    0x418c50
  418c8c:	ss pop esi
  418c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c8f:	add    al,0x7f
  418c91:	jbe    0x418cb8
  418c93:	hlt    
  418c94:	cli    
  418c95:	psllq  mm1,QWORD PTR [ebx+0x12258901]
  418c9c:	shl    ebp,0xf7
  418c9f:	xor    eax,0xeb79e711
  418ca4:	xor    al,0xfd
  418ca6:	sbb    BYTE PTR [ebp+eiz*4+0x367a700c],dl
  418cad:	std    
  418cae:	dec    esp
  418caf:	xor    al,0x6b
  418cb1:	add    DWORD PTR [eax+0x5b],edi
  418cb4:	in     eax,dx
  418cb5:	inc    eax
  418cb6:	inc    ebp
  418cb7:	sbb    DWORD PTR [ecx],ecx
  418cb9:	adc    BYTE PTR [eax-0x64],cl
  418cbc:	mov    BYTE PTR [esi-0x61],cl
  418cbf:	dec    eax
  418cc0:	pop    esp
  418cc1:	or     eax,0xfd366270
  418cc6:	sbb    al,0x24
  418cc8:	imul   eax,DWORD PTR [ecx],0x0
  418ccb:	add    BYTE PTR [eax],al
  418ccd:	mov    al,0xa0
  418ccf:	cmp    ecx,DWORD PTR [edx]
  418cd1:	cld    
  418cd2:	cdq    
  418cd3:	sbb    edi,ebx
  418cd5:	add    al,0x4c
  418cd7:	push   es
  418cd8:	xchg   dl,dl
  418cda:	push   ebx
  418cdb:	ss std 
  418cdd:	jo     0x418d34
  418cdf:	add    eax,0x389d1176
  418ce4:	or     ebx,DWORD PTR [edi-0x5]
  418ce7:	test   BYTE PTR [edx+0x74011ff3],0xfd
  418cee:	sbb    bl,dh
  418cf0:	pop    ds
  418cf1:	repz pop ds
  418cf3:	push   es
  418cf4:	xchg   dh,ch
  418cf6:	mov    DWORD PTR [esi],esi
  418cf8:	std    
  418cf9:	inc    BYTE PTR [esi-0x1f]
  418cfc:	push   DWORD PTR [ecx+ecx*2-0x7e510582]
  418d03:	xor    DWORD PTR ss:[ebx-0x13a044b9],esi
  418d0a:	call   0xdc2b:0x9994fb33
  418d11:	pop    DWORD PTR [edi]
  418d13:	ss retfw 0xee4f
  418d18:	and    BYTE PTR [edi+0x7336562b],0xee
  418d1f:	loopne 0x418d27
  418d21:	jo     0x418d61
  418d23:	inc    ebx
  418d24:	ss data16 (bad) 
  418d27:	dec    edi
  418d28:	inc    eax
  418d29:	pop    edi
  418d2a:	sub    dh,BYTE PTR [esi]
  418d2c:	cli    
  418d2d:	mov    dh,0x9a
  418d2f:	fld    QWORD PTR [edx+0x2a000000]
  418d35:	sub    DWORD PTR [esi],esp
  418d37:	div    BYTE PTR ss:[eax-0x16]
  418d3b:	jl     0x418d2a
  418d3d:	push   cs
  418d3e:	out    0x3,eax
  418d40:	mov    dl,0xed
  418d42:	daa    
  418d43:	scas   al,BYTE PTR es:[edi]
  418d44:	fyl2xp1 
  418d46:	push   0x6e
  418d48:	sub    BYTE PTR [edx],ch
  418d4a:	inc    BYTE PTR [ecx+0x7fe6001b]
  418d50:	inc    ebp
  418d51:	sub    al,0xee
  418d53:	xor    eax,0x5072f72
  418d58:	outs   dx,DWORD PTR ds:[esi]
  418d59:	fdiv   QWORD PTR fs:0x486ebfe
  418d60:	repz push es
  418d62:	fidivr WORD PTR [edi-0x77]
  418d65:	sub    eax,esi
  418d67:	xor    eax,0x3d58728
  418d6c:	repz pop ds
  418d6e:	mov    bh,0x36
  418d70:	(bad)  
  418d71:	sub    esp,ebp
  418d73:	add    edx,DWORD PTR [ebx]
  418d75:	pop    es
  418d76:	out    0x4,eax
  418d78:	jno    0x418d2b
  418d7a:	call   0xb4e3:0xe0ebbe35
  418d81:	sub    esi,ebx
  418d83:	jge    0x418dae
  418d85:	sub    al,0x86
  418d87:	xor    eax,0x3c6d9e8
  418d8c:	repz stc 
  418d8e:	jmp    FWORD PTR [esi+ecx*2+0x2c]
  418d92:	std    
  418d93:	outs   dx,BYTE PTR ds:[esi]
  418d94:	test   dl,cl
  418d96:	pop    ds
  418d97:	jmp    0xf0418d9c
  418d9c:	sti    
  418d9d:	add    ebp,0xffffffc5
  418da0:	sub    edi,ebp
  418da2:	adc    al,0xef
  418da4:	idiv   bh
  418da6:	call   0x473ffac4
  418dab:	push   ds
  418dac:	lock pop ebp
  418dae:	int    0xf7
  418db0:	xchg   DWORD PTR [edx+0x37],esp
  418db3:	push   ds
  418db4:	sub    al,0xd
  418db6:	ja     0x418daa
  418db8:	jno    0x418dc8
  418dba:	add    edi,ebp
  418dbc:	push   es
  418dbd:	inc    ecx
  418dbe:	loop   0x418d71
  418dc0:	mov    bl,0x2a
  418dc2:	out    0xb4,al
  418dc4:	idiv   bl
  418dc6:	push   cs
  418dc7:	out    0x87,al
  418dc9:	clc    
  418dca:	lock out dx,eax
  418dcc:	and    BYTE PTR ds:0x812be7fd,0xf1
  418dd3:	adc    dl,bh
  418dd5:	or     edi,0xffffffc4
  418dd8:	sub    edi,ebp
  418dda:	and    al,0x8f
  418ddc:	push   es
  418ddd:	add    cl,ch
  418ddf:	test   DWORD PTR [edx+0x2bbfd511],0x6fe693b
  418de9:	add    al,dl
  418deb:	lods   al,BYTE PTR ds:[esi]
  418dec:	sub    eax,0x28e5befd
  418df1:	sbb    eax,0x81f9f0e9
  418df6:	fld    QWORD PTR ds:0xfae4fd2a
  418dfc:	out    0xff,al
  418dfe:	call   0xf7418e03
  418e03:	xor    cl,0x92
  418e06:	jmp    FWORD PTR [ecx]
  418e08:	cmp    edi,DWORD PTR [esi+0xfd2890]
  418e0e:	popf   
  418e0f:	test   al,0xe7
  418e11:	sti    
  418e12:	sbb    eax,0xaa5f38f3
  418e17:	add    al,0x0
  418e19:	movlhps xmm2,xmm1
  418e1c:	idiv   bh
  418e1e:	or     eax,0x8a2ffd31
  418e23:	add    al,0xe5
  418e25:	push   ss
  418e26:	pop    ds
  418e27:	repz cli 
  418e29:	cmp    ebx,DWORD PTR [eax+eiz*2-0xf3c7cf4]
  418e30:	cli    
  418e31:	dec    DWORD PTR [ebp-0x66]
  418e34:	inc    BYTE PTR [edx-0x37]
  418e37:	jmp    0x418e42
  418e39:	psubusb mm6,QWORD PTR [eax-0x78f2000a]
  418e40:	clc    
  418e41:	or     eax,0xfcc1aa4d
  418e46:	(bad)  
  418e48:	cmp    BYTE PTR [ebp+0xf00041a],al
  418e4e:	xchg   esi,eax
  418e4f:	call   0x2024:0x321dfffb
  418e56:	or     al,BYTE PTR [ebx+ecx*1]
  418e59:	xchg   BYTE PTR [esi+ebp*8+0x49cffffa],bh
  418e60:	sbb    eax,0x86050a00
  418e65:	mov    eax,ds:0x1e000000
  418e6a:	hlt    
  418e6b:	cli    
  418e6c:	jmp    0x3c66bd
  418e71:	icebp  
  418e72:	push   esp
  418e73:	imul   ecx,DWORD PTR [edi],0xfff89f49
  418e79:	popf   
  418e7a:	add    esi,DWORD PTR [esi-0x77fe6fd]
  418e80:	or     bh,BYTE PTR [ebp+0x5dfc8681]
  418e86:	repz jle 0x418e81
  418e89:	repz and al,BYTE PTR [edx]
  418e8c:	xchg   BYTE PTR [edx*4-0x651902cf],bl
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	repz sbb BYTE PTR [ebp+0x30b09864],al
  418e9c:	cmp    edx,esp
  418e9e:	cmp    eax,0x97f40001
  418ea3:	test   al,0xfb
  418ea5:	jl     0x418e6f
  418ea7:	out    dx,al
  418ea8:	rcr    DWORD PTR es:0x59740d01,cl
  418eaf:	sub    eax,0xbad664fd
  418eb4:	clc    
  418eb5:	pop    esp
  418eb6:	call   0x1eee44bb
  418ebb:	add    dh,BYTE PTR [esi-0x1fbbe444]
  418ec1:	sti    
  418ec2:	xor    al,0x44
  418ec4:	add    DWORD PTR [ebx],esi
  418ec6:	pushf  
  418ec7:	dec    eax
  418ec8:	add    DWORD PTR [edx+0x5a],ebp
  418ecb:	xor    DWORD PTR [ecx],edi
  418ecd:	add    BYTE PTR [eax],al
  418ecf:	add    BYTE PTR [esi+0x7810b02d],dh
  418ed5:	outs   dx,DWORD PTR ds:[esi]
  418ed6:	std    
  418ed7:	mov    dh,bh
  418ed9:	sahf   
  418eda:	jl     0x418ee4
  418edc:	outs   dx,BYTE PTR ds:[esi]
  418edd:	out    0xab,al
  418edf:	add    al,0x78
  418ee1:	lea    eax,ds:0x542229
  418ee7:	xor    DWORD PTR [ecx],esp
  418ee9:	out    0xd9,al
  418eeb:	inc    edi
  418eec:	jle    0x418f05
  418eee:	jle    0x418f46
  418ef0:	pop    edi
  418ef1:	or     DWORD PTR [ebp+0x42],edx
  418ef4:	jns    0x418f2b
  418ef6:	jl     0x418f4b
  418ef8:	out    0x24,eax
  418efa:	(bad)  
  418efb:	or     al,0x71
  418efd:	jp     0x418f00
  418eff:	add    bl,dh
  418f01:	xor    edi,DWORD PTR [esi-0x1cf8d08b]
  418f07:	shr    bh,0x8d
  418f0a:	lods   eax,DWORD PTR ds:[esi]
  418f0b:	add    esi,ebx
  418f0d:	push   es
  418f0e:	out    0x79,al
  418f10:	inc    esi
  418f11:	or     ebx,edx
  418f13:	cmp    al,0xe7
  418f15:	shl    ebp,cl
  418f17:	jns    0x418f4f
  418f19:	or     esi,ebp
  418f1b:	xchg   edi,eax
  418f1c:	push   esp
  418f1d:	nop
  418f1e:	and    al,0x20
  418f20:	(bad)  
  418f21:	pop    esp
  418f22:	push   ds
  418f23:	add    eax,0xfeef2844
  418f28:	mov    ah,0x16
  418f2a:	xchg   ebp,eax
  418f2b:	retf   0x47f3
  418f2e:	inc    edi
  418f2f:	sti    
  418f30:	sti    
  418f31:	dec    eax
  418f32:	pusha  
  418f33:	rol    BYTE PTR [eax],0x0
  418f36:	add    BYTE PTR [eax-0x70],ch
  418f39:	lods   al,BYTE PTR ds:[esi]
  418f3a:	sub    esp,eax
  418f3c:	push   cs
  418f3d:	jg     0x418f71
  418f3f:	push   esi
  418f40:	es mov dh,0x7c
  418f43:	mov    al,0x1e
  418f45:	(bad)  
  418f46:	fadd   DWORD PTR [eax-0x76]
  418f49:	or     BYTE PTR cs:[edx-0xc],cl
  418f4d:	in     eax,dx
  418f4e:	jns    0x418f83
  418f50:	xchg   esp,eax
  418f51:	lahf   
  418f52:	ins    DWORD PTR es:[edi],dx
  418f53:	jb     0x418f7d
  418f55:	call   0xf67447d6
  418f5a:	jno    0x418fc7
  418f5c:	imul   ecx,DWORD PTR [ebx+eax*8-0x7ccaeaec],0x3a6b459
  418f67:	scas   al,BYTE PTR es:[edi]
  418f68:	(bad)  
  418f69:	xor    al,0x30
  418f6b:	je     0x418f39
  418f6d:	fiadd  WORD PTR [edi+0x6bde9c33]
  418f73:	out    dx,al
  418f74:	and    eax,0xcb6db1ce
  418f79:	mov    esi,0x6315c187
  418f7e:	fcmovnb st,st(4)
  418f80:	and    eax,0x37c6b600
  418f85:	inc    edx
  418f86:	pusha  
  418f87:	pushf  
  418f88:	stc    
  418f89:	cmp    BYTE PTR [ebx+0x14fcf383],dh
  418f8f:	out    0x8f,eax
  418f91:	push   ebx
  418f92:	popf   
  418f93:	loop   0x418f2e
  418f95:	out    dx,eax
  418f96:	bound  edi,QWORD PTR [ecx]
  418f98:	nop
  418f99:	leave  
  418f9a:	xchg   ecx,eax
  418f9b:	add    BYTE PTR [eax],al
  418f9d:	add    BYTE PTR [ebp+0x32],bh
  418fa0:	std    
  418fa1:	jle    0x41900f
  418fa3:	inc    esi
  418fa4:	or     eax,0xfff8446d
  418fa9:	call   0x6735519d
  418fae:	mov    ah,0xf9
  418fb0:	mov    BYTE PTR [esp+ebx*8-0x5eaabd21],ah
  418fb7:	cmp    eax,0x90149c89
  418fbc:	inc    ebx
  418fbd:	inc    ecx
  418fbe:	dec    esi
  418fbf:	dec    ebp
  418fc0:	or     eax,0xfd33f865
  418fc5:	ss jbe 0x418f69
  418fc8:	jmp    0x418fb3
  418fca:	repz mov bh,BYTE PTR [ebx-0x76f90f03]
  418fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd2:	add    al,0x8e
  418fd4:	inc    ebx
  418fd5:	std    
  418fd6:	scas   eax,DWORD PTR es:[edi]
  418fd7:	leave  
  418fd8:	and    ebp,DWORD PTR [ecx-0x66dc3657]
  418fde:	stc    
  418fdf:	mov    WORD PTR [ecx+ebp*8],ss
  418fe2:	lock and esi,DWORD PTR [ebx-0x2f]
  418fe6:	(bad)  
  418fe7:	mov    ecx,0x353deef3
  418fec:	mov    DWORD PTR [edi-0x917b081],ebp
  418ff2:	shl    DWORD PTR [ebx],cl
  418ff4:	std    
  418ff5:	ins    BYTE PTR es:[edi],dx
  418ff6:	xor    BYTE PTR [edx],dl
  418ff8:	test   BYTE PTR [ebx],cl
  418ffa:	cld    
  418ffb:	push   es
  418ffc:	add    BYTE PTR [eax],al
  418ffe:	leave  
  418fff:	push   ebp
  419000:	icebp  
  419001:	jmp    0x80419006
  419006:	out    0xfa,eax
  419008:	call   DWORD PTR [edi+0x4f]
  41900b:	inc    BYTE PTR [edx+0x4586298d]
  419011:	pop    esi
  419012:	mov    ds:0x5d0c3c02,al
  419017:	push   0x3c
  419019:	shl    DWORD PTR [eax+0x3a],1
  41901c:	cmp    al,0x7
  41901e:	pop    esi
  41901f:	bound  ecx,QWORD PTR [edi]
  419021:	fdivr  QWORD PTR [esi]
  419023:	add    DWORD PTR [ebx],esi
  419025:	arpl   WORD PTR [edx+ecx*2],si
  419028:	bswap  esp
  41902a:	dec    esi
  41902b:	dec    DWORD PTR [esi]
  41902d:	push   ds
  41902e:	leave  
  41902f:	test   BYTE PTR [ebp+0x26],cl
  419032:	pop    es
  419033:	mov    dh,0x4f
  419035:	mov    ecx,ecx
  419037:	fmul   QWORD PTR [eax]
  419039:	push   ecx
  41903a:	loopne 0x419046
  41903c:	mov    dh,0x8d
  41903e:	or     edi,DWORD PTR [ebp-0x40dc9d20]
  419044:	mov    DWORD PTR [edi+0x24584f4],eax
  41904a:	pop    ebp
  41904b:	add    eax,0xfad715b8
  419050:	jg     0x419015
  419052:	dec    esp
  419053:	cmc    
  419054:	or     DWORD PTR ds:0x1537e70d,0xffffff9e
  41905b:	mov    edi,0x7eb2528d
  419060:	loope  0x41906d
  419062:	mov    eax,ds:0x9605ec48
  419067:	xchg   DWORD PTR [edx+0x77000000],esp
  41906d:	dec    eax
  41906e:	std    
  41906f:	push   cs
  419070:	aam    0x87
  419072:	stos   BYTE PTR es:[edi],al
  419073:	ins    DWORD PTR es:[edi],dx
  419074:	retf   0x430a
  419077:	mov    edi,eax
  419079:	(bad)  
  41907a:	test   BYTE PTR [ebp-0xd],al
  41907d:	xor    eax,0x205ec087
  419082:	imul   edi,ebp,0xe8ad4cdc
  419088:	jmp    0x4190aa
  41908a:	cmp    al,0x3f
  41908c:	js     0x4190fc
  41908e:	jnp    0x4190db
  419090:	(bad)  
  419091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419092:	(bad)  
  419093:	test   DWORD PTR [eax],0x1e86c260
  419099:	sbb    ch,dl
  41909b:	leave  
  41909c:	das    
  41909d:	inc    esp
  41909e:	jmp    0x9889:0x8245175d
  4190a5:	mov    WORD PTR ds:0x7a305d0d,gs
  4190ab:	enter  0x7fc0,0x81
  4190af:	fucomip st,st(4)
  4190b1:	out    dx,eax
  4190b2:	push   eax
  4190b3:	loop   0x41911d
  4190b5:	pop    edx
  4190b6:	xor    eax,0x77308bbf
  4190bb:	add    al,0xfb
  4190bd:	jo     0x419044
  4190bf:	shl    ah,1
  4190c1:	test   eax,0xcc5cf9c8
  4190c6:	sub    al,0x43
  4190c8:	call   FWORD PTR [eax+0x6b0afbbe]
  4190ce:	adc    eax,0x7e
  4190d3:	ss test al,0xc6
  4190d6:	idiv   eax
  4190d8:	aad    0xfc
  4190da:	sbb    DWORD PTR [eax],0x13
  4190dd:	sub    eax,0x1d7a70fd
  4190e2:	add    BYTE PTR [edx-0x7e],bh
  4190e5:	adc    eax,0x17f3770d
  4190ea:	add    bl,dh
  4190ec:	cwde   
  4190ed:	(bad)  
  4190ee:	and    esi,DWORD PTR [ebx-0x5cdc395a]
  4190f4:	push   es
  4190f5:	xchg   edi,eax
  4190f6:	adc    al,0xf3
  4190f8:	push   es
  4190f9:	out    0x7a,eax
  4190fb:	lods   eax,DWORD PTR ds:[esi]
  4190fc:	mov    dl,0x19
  4190fe:	cmp    eax,0xeb28461a
  419103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419104:	adc    bl,BYTE PTR [ebx-0x15]
  419107:	add    DWORD PTR [edi],eax
  419109:	out    0x79,eax
  41910b:	repnz vshufps ymm1,ymm0,ymm5,0x11
  419111:	ins    BYTE PTR es:[edi],dx
  419112:	dec    dl
  419114:	and    ch,BYTE PTR [esi-0x59e9bae4]
  41911a:	cs push 0xffffffc9
  41911d:	or     dh,bl
  41911f:	mov    ch,0xee
  419121:	test   eax,0xde47ebc4
  419126:	jg     0x41912e
  419128:	cld    
  419129:	out    0x3,al
  41912b:	out    0x58,al
  41912d:	fidivr DWORD PTR [edx+0x35]
  419130:	xlat   BYTE PTR ds:[ebx]
  419131:	in     eax,0x75
  419133:	or     BYTE PTR ss:[ecx+0x17],ah
  419137:	add    BYTE PTR [eax],al
  419139:	add    cl,dh
  41913b:	lds    ebx,FWORD PTR [esi]
  41913d:	sbb    BYTE PTR [ebp+ebp*1+0x39],dh
  419141:	(bad)  
  419142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419143:	retf   0xfee7
  419146:	sahf   
  419147:	shr    al,cl
  419149:	inc    esp
  41914a:	push   ebx
  41914b:	pslld  mm0,QWORD PTR [esp+ebp*2-0x34]
  419150:	cmp    al,BYTE PTR [edx-0x4ebdf9ca]
  419156:	das    
  419157:	int3   
  419158:	ss add al,0xf3
  41915b:	push   es
  41915c:	out    0xfe,eax
  41915e:	jle    0x41912a
  419160:	out    0xfe,eax
  419162:	mov    dx,0x82e8
  419166:	nop
  419167:	and    ah,bh
  419169:	inc    esp
  41916a:	adc    ecx,DWORD PTR [edi]
  41916c:	repnz inc ecx
  41916e:	loop   0x4191a4
  419170:	addr16 sub al,0xd5
  419173:	adc    DWORD PTR [eax],eax
  419175:	pop    ebp
  419176:	mov    dl,0x89
  419178:	push   ebx
  419179:	std    
  41917a:	fidivr DWORD PTR [eax]
  41917c:	or     DWORD PTR [ebx+eax*8+0x6],0x222724c5
  419184:	std    
  419185:	jmp    0x142a5d7a
  41918a:	loop   0x4191ed
  41918c:	inc    eax
  41918d:	jo     0x41913b
  41918f:	xor    DWORD PTR [edi-0xdcffcdc],eax
  419195:	push   0xffffff8c
  419197:	sbb    eax,0xc730fa00
  41919c:	xchg   BYTE PTR [eax+eax*1],ch
  41919f:	add    BYTE PTR [eax],al
  4191a1:	dec    ebx
  4191a3:	call   0xdf10bf6e
  4191a8:	push   0xffffffd0
  4191aa:	and    DWORD PTR [eax-0x41ec2ce4],ecx
  4191b0:	jno    0x41918a
  4191b2:	lods   eax,DWORD PTR ds:[esi]
  4191b3:	aas    
  4191b4:	jmp    0x98c1f548
  4191b9:	fs loope 0x4191bb
  4191bc:	and    eax,0x70fbcdf8
  4191c1:	lods   al,BYTE PTR ds:[esi]
  4191c2:	sbb    DWORD PTR [ebx-0x47f65bd7],eax
  4191c8:	push   esi
  4191c9:	push   ss
  4191ca:	and    al,0x7d
  4191cc:	pusha  
  4191cd:	xor    al,0x19
  4191cf:	or     eax,0xf5cbfe7f
  4191d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191d5:	clc    
  4191d6:	and    DWORD PTR [eax-0x7bec0364],ecx
  4191dc:	inc    ebp
  4191dd:	test   DWORD PTR [esi],0xf1757200
  4191e3:	or     al,0x57
  4191e5:	repz adc DWORD PTR [ecx],esi
  4191e8:	cmp    ebp,DWORD PTR [eax+0x5c62f3cd]
  4191ee:	sbb    eax,0x39a30042
  4191f3:	adc    DWORD PTR [ebx],edi
  4191f5:	rcl    BYTE PTR [esi+0x2a],0xeb
  4191f9:	sbb    DWORD PTR [esi],edx
  4191fb:	iret   
  4191fc:	inc    edx
  4191fd:	inc    ecx
  4191fe:	push   ebx
  4191ff:	imul   ecx,DWORD PTR [edi],0x115089
  419205:	add    BYTE PTR [eax],al
  419207:	add    dl,bl
  419209:	and    esi,DWORD PTR [ebx+0x2d625113]
  41920f:	je     0xf3849935
  419215:	pop    edi
  419216:	icebp  
  419217:	xorps  xmm6,xmm7
  41921a:	hlt    
  41921b:	(bad)  
  41921c:	jge    0x419211
  41921e:	inc    eax
  41921f:	adc    al,0x51
  419221:	popa   
  419222:	stc    
  419223:	cmp    edi,edi
  419225:	(bad)  
  419226:	jge    0x4191fd
  419228:	xchg   ecx,eax
  419229:	fmul   QWORD PTR [edx]
  41922b:	test   BYTE PTR [ecx+eax*1],ah
  41922e:	sti    
  41922f:	dec    DWORD PTR [ecx]
  419231:	jno    0x41921c
  419233:	add    BYTE PTR [ebp-0x65ebb577],bl
  419239:	add    al,0x85
  41923b:	pop    ebp
  41923c:	(bad)  
  41923d:	lds    edi,FWORD PTR cs:[ebp+0x4e]
  419241:	popf   
  419242:	dec    eax
  419243:	adc    al,0xd1
  419245:	push   eax
  419246:	imul   esi,DWORD PTR [ebx-0x10],0xd113b321
  41924d:	popa   
  41924e:	sub    eax,0x720840f
  419253:	cmp    DWORD PTR [edi-0x66da8f28],ebx
  419259:	repz inc eax
  41925b:	adc    al,0x43
  41925d:	dec    ecx
  41925e:	adc    DWORD PTR [ecx+ebp*4-0x2],edi
  419262:	sbb    DWORD PTR [ebx-0x3f7d8f7c],ecx
  419268:	xchg   bh,dh
  41926a:	ss pop ebp
  41926c:	add    BYTE PTR [eax],al
  41926e:	add    bl,dh
  419270:	and    eax,0xe6e00db3
  419275:	rol    DWORD PTR [esi-0x4117965b],0xfc
  41927c:	mov    al,0x22
  41927e:	test   DWORD PTR [ecx+ebx*1],0x2e037b7d
  419285:	cld    
  419286:	xor    BYTE PTR [edx+edi*1-0x1cd702d7],0x27
  41928e:	or     eax,0xfd2c8d71
  419293:	fsub   QWORD PTR [esi+edi*4-0x4168ccdd]
  41929a:	and    ecx,esp
  41929c:	fcmovu st,st(7)
  41929e:	mov    BYTE PTR [ebx+eax*8+0x5246fd03],bl
  4192a5:	jle    0x419270
  4192a7:	mov    ah,0x2
  4192a9:	or     al,0x56
  4192ab:	lods   al,BYTE PTR ds:[esi]
  4192ac:	cli    
  4192ad:	adc    edi,ebp
  4192af:	push   ds
  4192b0:	sub    ch,BYTE PTR [edx]
  4192b2:	jae    0x41929f
  4192b4:	test   DWORD PTR [esi-0x14],edx
  4192b7:	xchg   esp,eax
  4192b8:	mov    BYTE PTR [ebp-0x7fcf4c7e],bh
  4192be:	iret   
  4192bf:	(bad)  ds:0xb21e3901
  4192c5:	mov    ah,0xd3
  4192c7:	mov    dh,BYTE PTR ds:0x946cfd29
  4192cd:	mov    dh,0xfb
  4192cf:	sub    al,0x72
  4192d1:	or     eax,0xff
  4192d6:	pop    esp
  4192d7:	sub    eax,0x2e5a8101
  4192dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192dd:	push   ds
  4192de:	or     BYTE PTR [eax+0x4e700c95],al
  4192e4:	sub    al,0xfd
  4192e6:	cmp    al,0x40
  4192e8:	outs   dx,DWORD PTR ds:[esi]
  4192e9:	or     DWORD PTR [eax+0x20b8e006],esi
  4192ef:	pcmpgtb mm0,mm7
  4192f2:	sbb    al,0x1f
  4192f4:	push   ss
  4192f5:	sub    esi,DWORD PTR [eax+0x18b961fa]
  4192fb:	fnsave [ebx-0x3dc072f1]
  419301:	cmp    esi,esi
  419303:	mov    ch,BYTE PTR ds:0x6a1efe18
  419309:	test   eax,0xb8700608
  41930e:	add    BYTE PTR [esi],cl
  419310:	fs push edx
  419312:	add    al,BYTE PTR [edi]
  419314:	out    0x7c,eax
  419316:	cmp    BYTE PTR [ebx],bl
  419318:	adc    bh,BYTE PTR [eax+ebx*2]
  41931b:	fld    DWORD PTR [ecx]
  41931d:	retf   0x9a58
  419320:	fsqrt  
  419322:	jle    0x419336
  419324:	lock mov eax,0xc70394c0
  41932a:	mov    bh,0xc4
  41932c:	cli    
  41932d:	in     al,dx
  41932e:	xor    ebx,esi
  419330:	sbb    bl,BYTE PTR [esi]
  419332:	call   0xa784:0x18c16201
  419339:	scas   eax,DWORD PTR es:[edi]
  41933a:	add    BYTE PTR [eax],al
  41933c:	add    BYTE PTR [ebx],al
  41933e:	loop   0x419363
  419340:	cld    
  419341:	push   es
  419342:	or     eax,0x8fc43cba
  419347:	and    eax,0xde47bbc8
  41934c:	jp     0x419326
  41934e:	pop    ds
  41934f:	data16 sub dh,BYTE PTR [edx-0x64]
  419353:	push   esi
  419354:	add    esi,esi
  419356:	sbb    ebp,0x17
  419359:	pop    esi
  41935a:	push   ds
  41935b:	adc    cl,cl
  41935d:	pop    eax
  41935e:	push   cs
  41935f:	imul   edx,DWORD PTR [edx+0x46],0xb07e3e1e
  419366:	loop   0x419367
  419368:	test   al,0xbf
  41936a:	leave  
  41936b:	and    ebp,DWORD PTR [esi]
  41936d:	sub    edx,0xffffff88
  419370:	mov    ds,WORD PTR ds:[esi]
  419373:	(bad)  
  419374:	xchg   esp,eax
  419375:	in     al,dx
  419376:	(bad)
  41937a:	not    BYTE PTR [ebp+0xe]
  41937d:	arpl   WORD PTR [esi],cx
  41937f:	std    
  419380:	jl     0x419386
  419382:	sbb    esi,DWORD PTR [ebx-0xf]
  419385:	call   0xcb387f8f
  41938a:	iret   
  41938b:	sub    BYTE PTR [ecx],0xf9
  41938e:	mov    BYTE PTR [eax],cl
  419390:	push   eax
  419392:	push   es
  419393:	cmp    DWORD PTR [ebx+ebx*1],edi
  419396:	cwde   
  419397:	rol    eax,cl
  419399:	push   0x13
  41939b:	std    
  41939c:	into   
  41939d:	(bad)  
  41939e:	mov    ebx,0xf66b
  4193a3:	add    BYTE PTR [edi+0x63],dh
  4193a6:	clc    
  4193a7:	mov    esi,0xe2b60c1a
  4193ac:	mov    bh,0x13
  4193ae:	inc    ebx
  4193af:	shl    ecx,1
  4193b1:	xchg   edx,eax
  4193b2:	sbb    BYTE PTR [edx-0x4f],dh
  4193b5:	in     eax,dx
  4193b6:	or     al,0x57
  4193b8:	ret    0x871c
  4193bb:	in     eax,0x98
  4193bd:	xchg   ch,al
  4193bf:	jmp    0x419349
  4193c1:	adc    DWORD PTR [edx],eax
  4193c3:	test   BYTE PTR ds:0xda7eec0b,0x25
  4193ca:	outs   dx,DWORD PTR ds:[esi]
  4193cb:	jle    0x419397
  4193cd:	sbb    ecx,DWORD PTR ds:0x821cb237
  4193d3:	cs cmc 
  4193d5:	fistp  QWORD PTR [esi-0x49f3faae]
  4193db:	scas   al,BYTE PTR es:[edi]
  4193dc:	icebp  
  4193dd:	or     esi,DWORD PTR [esi-0x1fa21162]
  4193e3:	add    BYTE PTR [edx+0x1a],al
  4193e6:	mov    esi,0x7ee58f89
  4193eb:	(bad)  
  4193ec:	dec    ecx
  4193ed:	add    BYTE PTR [ecx+0xb094a00],al
  4193f3:	mov    dh,0x5d
  4193f5:	or     BYTE PTR [ebx],cl
  4193f7:	mov    dh,0x5d
  4193f9:	add    edi,DWORD PTR [edi+0x65]
  4193fc:	push   es
  4193fd:	add    edi,DWORD PTR [ebp-0x40e5ed20]
  419403:	xor    ebp,eax
  419405:	xor    ch,0x33
  419408:	add    BYTE PTR [eax],al
  41940a:	add    BYTE PTR ds:0x5f89c28d,dl
  419410:	cmc    
  419411:	out    0xda,al
  419413:	mov    DWORD PTR [ebp-0x7],edi
  419416:	add    BYTE PTR [ebp-0x25fe12a3],bl
  41941c:	or     BYTE PTR [eax],al
  41941e:	inc    edi
  41941f:	mov    cl,0x4c
  419421:	xor    al,al
  419423:	or     ah,BYTE PTR [eax+0x5d43f040]
  419429:	stc    
  41942a:	jmp    0x4193b4
  41942c:	and    DWORD PTR [ecx-0x4],0xffffffca
  419430:	adc    edi,DWORD PTR [ebp-0x12a2acc0]
  419436:	inc    edi
  419437:	or     DWORD PTR [ecx+0xc],0xb07cdb6
  41943e:	mov    dh,0xd5
  419440:	add    al,0x7f
  419442:	data16 or BYTE PTR gs:[ebp+0x40c782e0],bh
  41944a:	lock fwait
  41944c:	or     BYTE PTR [eax],al
  41944e:	add    BYTE PTR [ecx+0x179ae6c9],dl
  419454:	pusha  
  419455:	rol    DWORD PTR [ebx+0x4d8508bb],1
  41945b:	mov    dh,0x1e
  41945d:	mov    ebx,0x9671f388
  419462:	aas    
  419463:	repz cmp al,0x67
  419466:	xor    BYTE PTR [edi],0x33
  419469:	sar    edi,0xad
  41946c:	xchg   esi,eax
  41946d:	mov    ch,0xfb
  41946f:	add    BYTE PTR [eax],al
  419471:	add    BYTE PTR [edx+0x6b],ch
  419474:	sub    DWORD PTR [ebx-0x4806accd],eax
  41947a:	sub    al,0xe5
  41947c:	daa    
  41947d:	jge    0x4194f9
  41947f:	arpl   WORD PTR [ecx],bp
  419481:	or     eax,0xf5c01d65
  419486:	scas   al,BYTE PTR es:[edi]
  419487:	adc    eax,0x19a68702
  41948c:	cmc    
  41948d:	or     DWORD PTR [edi],0x2e
  419490:	add    DWORD PTR [eax],eax
  419492:	push   0x3d0cf164
  419497:	cmp    dl,BYTE PTR [edx]
  419499:	xor    ecx,eax
  41949b:	xchg   esi,eax
  41949c:	mov    dh,0xf3
  41949e:	js     0x41948a
  4194a0:	daa    
  4194a1:	inc    edx
  4194a2:	push   0xffffffda
  4194a4:	(bad)  
  4194a6:	test   eax,0xf0e8d6c9
  4194ab:	and    BYTE PTR [edi+0x42],cl
  4194ae:	or     ah,bh
  4194b0:	xchg   edi,eax
  4194b1:	or     al,0x70
  4194b3:	imul   edx,DWORD PTR [ebx],0x0
  4194b6:	repz cmp al,0x6b
  4194b9:	adc    DWORD PTR [eax-0x2d],edi
  4194bc:	repz or al,0x5d
  4194bf:	sub    edi,esi
  4194c1:	inc    eax
  4194c2:	(bad)  
  4194c4:	das    
  4194c5:	or     eax,0xfd2e096f
  4194ca:	mov    WORD PTR [edi+edi*4+0x27ea7813],es
  4194d1:	aaa    
  4194d2:	cmp    ah,BYTE PTR cs:[ebx+0xd2]
  4194d9:	mov    eax,0x6c83f565
  4194de:	push   es
  4194df:	push   ecx
  4194e0:	daa    
  4194e1:	xchg   sp,bx
  4194e4:	pop    ss
  4194e5:	repz lea esp,[edi+ecx*1+0x11c581e6]
  4194ed:	repz push es
  4194ef:	jo     0x4194ba
  4194f1:	dec    eax
  4194f2:	fild   QWORD PTR [esi]
  4194f4:	test   eax,0x9794e005
  4194f9:	ret    
  4194fa:	add    dh,bl
  4194fc:	ins    DWORD PTR es:[edi],dx
  4194fd:	add    dl,BYTE PTR [eax+0x54f7f3b5]
  419503:	jmp    0x4194fe
  419505:	in     eax,0xc9
  419507:	sbb    dh,BYTE PTR [eax-0x3ef2382f]
  41950d:	loopne 0x4194ec
  41950f:	stos   DWORD PTR es:[edi],eax
  419510:	ja     0x6a4ba73d
  419516:	les    esi,FWORD PTR [edx-0x80]
  419519:	xor    edx,DWORD PTR [edx+0xf49ead9]
  41951f:	pop    ebp
  419520:	mul    BYTE PTR [ebx]
  419522:	push   eax
  419523:	sub    BYTE PTR [ebp+0x2d],bh
  419526:	mov    ebx,0x89e64511
  41952b:	push   ds
  41952c:	das    
  41952d:	into   
  41952e:	sbb    ch,BYTE PTR [edx-0x58]
  419531:	aam    0x7
  419533:	out    dx,al
  419534:	or     BYTE PTR [ebx-0x5d949d3],0xbb
  41953b:	stos   BYTE PTR es:[edi],al
  41953c:	test   BYTE PTR [eax],0x0
  41953f:	add    BYTE PTR [edx+0x10],dh
  419542:	popf   
  419543:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  419545:	mov    fs,WORD PTR [eax+eiz*8]
  419548:	fmul   QWORD PTR [edi-0x6b681fd4]
  41954e:	ret    0xa67a
  419551:	lods   eax,DWORD PTR ds:[esi]
  419552:	out    0x26,al
  419554:	add    bl,bh
  419556:	jno    0x419592
  419558:	jle    0x4194ee
  41955a:	call   eax
  41955c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41955d:	sbb    esi,DWORD PTR [ebx-0x27]
  419560:	adc    eax,0xa3660b96
  419565:	add    ch,al
  419567:	and    bh,cl
  419569:	sbb    edi,ebp
  41956b:	ins    BYTE PTR es:[edi],dx
  41956c:	mov    al,0xb
  41956e:	adc    DWORD PTR [edx],0xffffffe3
  419571:	push   es
  419572:	add    BYTE PTR [edx-0x450442a7],dh
  419578:	lods   al,BYTE PTR ds:[esi]
  419579:	and    edi,ecx
  41957b:	cmp    al,0xd
  41957d:	sbb    al,0x89
  41957f:	pushf  
  419580:	aam    0x43
  419582:	inc    ebx
  419583:	std    
  419584:	out    dx,eax
  419585:	push   es
  419586:	add    cl,ch
  419588:	jno    0x41959c
  41958a:	call   DWORD PTR [edi+ecx*1+0x57d5ddf]
  419591:	xchg   edx,ecx
  419593:	dec    esi
  419595:	sbb    ecx,DWORD PTR ds:0x36c6f937
  41959b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41959c:	les    ecx,FWORD PTR [ebx]
  41959e:	test   BYTE PTR ds:0xe6fd1c23,bh
  4195a4:	add    BYTE PTR [eax],al
  4195a6:	add    BYTE PTR [ebp+esi*8-0x2df4d378],ah
  4195ad:	dec    edx
  4195ae:	std    
  4195af:	mov    ?,WORD PTR [edx]
  4195b1:	cmp    DWORD PTR [ecx-0x2cd27a3a],esp
  4195b7:	push   cs
  4195b8:	sbb    al,0x81
  4195ba:	cmp    al,0xdb
  4195bc:	push   es
  4195bd:	xchg   DWORD PTR [ebx+eiz*8],esp
  4195c0:	or     eax,DWORD PTR [ebx+0x700ba]
  4195c6:	jo     0x419574
  4195c8:	sbb    eax,0xd754b139
  4195cd:	cmp    BYTE PTR [edi],dh
  4195cf:	jnp    0x419567
  4195d1:	adc    dh,bl
  4195d3:	push   ds
  4195d4:	adc    BYTE PTR [edi],dh
  4195d6:	add    BYTE PTR [edi-0x36da8c2a],bh
  4195dc:	jecxz  0x41961e
  4195de:	adc    al,0x43
  4195e0:	pop    eax
  4195e1:	adc    DWORD PTR [eax+esi*2-0x1],edi
  4195e5:	sbb    DWORD PTR [ebx-0x3f7d9e6c],ecx
  4195eb:	inc    esi
  4195ec:	div    BYTE PTR [esi]
  4195ee:	pop    ebp
  4195ef:	push   edx
  4195f0:	imul   ecx,DWORD PTR [ebx],0x33
  4195f3:	adc    eax,DWORD PTR [esi-0x7a]
  4195f6:	dec    esi
  4195f7:	mov    gs,WORD PTR [esi]
  4195f9:	mov    esi,0xf598cd0f
  4195fe:	(bad)  
  4195ff:	std    
  419600:	xchg   DWORD PTR [ecx-0x10],edi
  419603:	sbb    dl,BYTE PTR [edx]
  419605:	sbb    bh,0x3
  419608:	in     al,0xfa
  41960a:	cmp    eax,DWORD PTR [eax]
  41960c:	add    BYTE PTR [eax],al
  41960e:	pop    edi
  41960f:	loope  0x41961b
  419611:	or     BYTE PTR [edx-0x18],0xfa
  419615:	call   DWORD PTR [ecx-0x7cbfdea7]
  41961b:	pop    ecx
  41961c:	and    edi,edi
  41961e:	xchg   DWORD PTR [ecx],edi
  419620:	mov    bh,dl
  419622:	jo     0x419629
  419624:	sti    
  419625:	jne    0x4195e5
  419627:	lahf   
  419628:	(bad)  
  419629:	inc    DWORD PTR [edi+0xb]
  41962c:	push   esi
  41962d:	inc    DWORD PTR [edi-0xd]
  419630:	cli    
  419631:	jne    0x419601
  419633:	jecxz  0x4196a5
  419635:	or     BYTE PTR [edx-0x520019aa],dh
  41963b:	cdq    
  41963c:	mov    edi,0x1056570f
  419641:	add    dl,cl
  419643:	pop    edi
  419644:	cmp    BYTE PTR [ebp+0x5e],bl
  419647:	push   edi
  419648:	shr    ecx,1
  41964a:	mov    ds:0x8dfffae9,al
  41964f:	stos   BYTE PTR es:[edi],al
  419650:	dec    edx
  419651:	add    ebx,esi
  419653:	and    BYTE PTR [ebx+0x45],ch
  419656:	icebp  
  419657:	outs   dx,BYTE PTR ds:[esi]
  419658:	and    cl,BYTE PTR [eax]
  41965a:	clc    
  41965b:	push   ebp
  41965c:	js     0x41961d
  41965e:	mov    ah,0xe3
  419660:	pop    ss
  419661:	push   DWORD PTR [esi+ebp*1+0x1]
  419665:	xchg   DWORD PTR [esi-0xf3a8057],esi
  41966b:	mov    dh,0x72
  41966d:	add    bl,dh
  41966f:	sub    eax,0xb5f4
  419674:	add    BYTE PTR [esi+ebp*1+0x2ba4b5f4],ah
  41967b:	inc    edx
  41967c:	(bad)  
  41967e:	adc    al,0x37
  419680:	xchg   DWORD PTR [esi+0xc6efc5],ebp
  419686:	out    dx,al
  419687:	cmp    BYTE PTR ds:0xfbbda6b3,0xf4
  41968e:	cdq    
  41968f:	inc    ecx
  419690:	xor    DWORD PTR [ebp*1-0x5af8b486],0x8718f7b5
  41969b:	cmp    al,0x43
  41969d:	add    ebp,DWORD PTR [edi]
  41969f:	add    DWORD PTR [eax],eax
  4196a1:	repz pop esp
  4196a3:	inc    ecx
  4196a4:	xchg   DWORD PTR [esi+0x41e8b911],ebp
  4196aa:	pop    ebp
  4196ab:	inc    ecx
  4196ac:	inc    eax
  4196ad:	jp     0x419699
  4196af:	adc    ebp,ecx
  4196b1:	loope  0x4196af
  4196b3:	dec    edx
  4196b4:	aas    
  4196b5:	and    BYTE PTR [esi-0x75],ch
  4196b8:	dec    ebx
  4196b9:	ret    
  4196ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196bb:	(bad)  
  4196bc:	sti    
  4196bd:	sub    al,0x35
  4196bf:	ret    
  4196c0:	or     al,0x85
  4196c2:	call   0xf8bea3c9
  4196c7:	add    eax,0xd62592bf
  4196cc:	mov    edi,0x142c06ac
  4196d1:	pushf  
  4196d2:	pop    ss
  4196d3:	out    0x3,eax
  4196d5:	jmp    0x0:0x74824c
  4196dc:	js     0x4196ac
  4196de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196df:	pop    DWORD PTR [ebx+eax*4-0x79]
  4196e3:	add    eax,0x138ac174
  4196e8:	xor    eax,0x2cb17f85
  4196ed:	pop    es
  4196ee:	fisub  WORD PTR [ecx+0x6c]
  4196f1:	push   ss
  4196f2:	aam    0xc3
  4196f4:	pop    esp
  4196f5:	shr    BYTE PTR [edi-0x37],0x58
  4196f9:	lea    esp,[ebx+ebx*1+0xbd44d70]
  419700:	jl     0x419719
  419702:	inc    esi
  419703:	and    edi,DWORD PTR [esi-0x19e45373]
  419709:	push   eax
  41970a:	fmulp  st(2),st
  41970c:	jne    0x4196bf
  41970e:	xor    cl,BYTE PTR [ecx-0x548af8cd]
  419714:	repz push es
  419716:	out    0x86,eax
  419718:	xor    DWORD PTR [edx+ebp*2],ebx
  41971b:	push   ds
  41971c:	inc    BYTE PTR [edi]
  41971e:	data16 sbb al,0xe3
  419721:	push   es
  419722:	out    0x22,eax
  419724:	xlat   BYTE PTR ds:[ebx]
  419725:	jno    0x419759
  419727:	nop
  419728:	mov    ah,0x6
  41972a:	mov    edx,0x28d23135
  41972f:	adc    esi,DWORD PTR [edi-0x40]
  419732:	jmp    0x34c18a3a
  419737:	clc    
  419738:	retf   
  419739:	or     bl,BYTE PTR [edx]
  41973b:	xor    DWORD PTR ss:[edx+0xb01d],eax
  419742:	add    BYTE PTR [ebx],cl
  419744:	xor    dh,dh
  419746:	xchg   BYTE PTR [edi],ch
  419748:	push   es
  419749:	out    0x3,eax
  41974b:	jb     0x4196e2
  41974d:	call   eax
  41974f:	lock call 0x176:0x13ef431b
  419757:	cmp    BYTE PTR [ebp+0x1f2d721b],0xb2
  41975e:	adc    eax,0xa98306f7
  419763:	loope  0x4196ee
  419765:	idiv   DWORD PTR [edx-0x2f]
  419768:	adc    ecx,DWORD PTR [ecx+0x231fd324]
  41976e:	bound  ebp,QWORD PTR [edx+0x45a328f2]
  419774:	cmp    eax,0x6d0575
  419779:	cmp    ch,BYTE PTR [edi+0x6a129944]
  41977f:	out    dx,al
  419780:	adc    eax,0x1805650e
  419785:	std    
  419786:	inc    esi
  419787:	outs   dx,BYTE PTR ds:[esi]
  419788:	sar    dh,0x2
  41978b:	and    ecx,esp
  41978d:	or     al,0x6d
  41978f:	rcl    DWORD PTR [edi],0xfd
  419792:	cs jne 0x419757
  419795:	imul   DWORD PTR [edx-0x1fec362f]
  41979b:	sub    edi,edx
  41979d:	jge    0x419815
  41979f:	fbstp  TBYTE PTR [edx+eax*1]
  4197a2:	jmp    0x95981797
  4197a7:	add    BYTE PTR [eax],al
  4197a9:	add    BYTE PTR ds:0xe1233946,cl
  4197af:	mov    eax,edx
  4197b1:	std    
  4197b2:	adc    dl,BYTE PTR [ecx+eax*1]
  4197b5:	adc    DWORD PTR [edi],edx
  4197b7:	inc    ecx
  4197b8:	add    ch,cl
  4197ba:	lock dec ebx
  4197bc:	inc    ebx
  4197bd:	cmc    
  4197be:	icebp  
  4197bf:	push   es
  4197c0:	add    cl,ch
  4197c2:	ja     0x4197d2
  4197c4:	(bad)  
  4197c5:	fnsave [eax+edx*2+0x2]
  4197c9:	add    dl,cl
  4197cb:	or     DWORD PTR [edi],esi
  4197cd:	pop    esi
  4197ce:	es clc 
  4197d0:	jle    0x419774
  4197d2:	outs   dx,BYTE PTR ds:[esi]
  4197d3:	out    0xfa,eax
  4197d5:	nop    DWORD PTR [eax+eax*2]
  4197d9:	adc    DWORD PTR [eax+0x4],0x74
  4197dd:	test   DWORD PTR es:[edi-0x7e],esi
  4197e1:	repz gs out 0x7e,eax
  4197e5:	cli    
  4197e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197e7:	addr16 push cs
  4197e9:	xor    DWORD PTR [eax+0x5],0x74
  4197ed:	and    ecx,DWORD PTR [ebx]
  4197ef:	cmc    
  4197f0:	add    BYTE PTR [eax],0x5a
  4197f3:	or     DWORD PTR [ebx],ecx
  4197f5:	test   DWORD PTR [esi-0x6],esp
  4197f8:	cli    
  4197f9:	dec    ecx
  4197fb:	push   0x8c45005d
  419800:	(bad)
  419805:	inc    ebp
  419806:	xor    BYTE PTR ds:[edx+0x14],al
  41980a:	xor    al,0xc9
  41980c:	in     al,0x75
  41980e:	add    BYTE PTR [eax],al
  419810:	add    BYTE PTR [eax+0x9],cl
  419813:	add    BYTE PTR [ebx],bh
  419815:	test   BYTE PTR [ebp+0x70],ah
  419818:	out    dx,al
  419819:	call   0xe84c:0x3750733
  419820:	out    0xcd,al
  419822:	dec    ebp
  419823:	adc    DWORD PTR [ecx],eax
  419825:	sbb    cl,BYTE PTR [ecx]
  419827:	add    BYTE PTR [ebx-0x73f4f61e],al
  41982d:	push   edx
  41982e:	or     eax,DWORD PTR [eax]
  419830:	add    BYTE PTR [ecx],dh
  419832:	inc    edi
  419833:	imul   ecx,DWORD PTR [edi],0xfff14b59
  419839:	aad    0xf7
  41983b:	mov    ch,0x13
  41983d:	or     DWORD PTR [edx-0x733af606],ecx
  419843:	and    dh,bl
  419845:	repz cmp al,0x20
  419848:	or     ecx,0xda840efe
  41984e:	push   eax
  41984f:	and    ch,bh
  419851:	jb     0x41989b
  419853:	popa   
  419854:	add    bl,dh
  419856:	sbb    eax,0x50f68410
  41985b:	and    ch,bh
  41985d:	pushf  
  41985e:	jecxz  0x419857
  419860:	ss sbb bl,BYTE PTR cs:[edi+0x33e9aca]
  419868:	add    bl,dh
  41986a:	ins    BYTE PTR es:[edi],dx
  41986b:	(bad)  
  41986c:	adc    esi,edx
  41986e:	sbb    eax,0x86700001
  419873:	add    cl,BYTE PTR ds:0x7f000000
  419879:	add    eax,DWORD PTR cs:[eax]
  41987c:	repz pop eax
  41987e:	mov    edi,0x18a0ec6b
  419883:	icebp  
  419884:	push   esp
  419885:	mov    ch,0xf
  419887:	mov    dh,0xe0
  419889:	pusha  
  41988a:	test   dl,bh
  41988c:	cli    
  41988d:	cmp    edx,esi
  41988f:	cmp    BYTE PTR [ecx],0xfe
  419892:	xchg   edi,eax
  419893:	or     esi,DWORD PTR [edx-0x38]
  419896:	pusha  
  419897:	add    bl,dh
  419899:	sbb    eax,0xd0368310
  41989e:	pop    ds
  41989f:	std    
  4198a0:	sbb    al,0x63
  4198a2:	cmc    
  4198a3:	ss scas al,BYTE PTR es:[edi]
  4198a5:	sbb    DWORD PTR [edi+0x1fe1ad2],ebx
  4198ab:	add    bl,dh
  4198ad:	in     al,dx
  4198ae:	lds    edx,FWORD PTR [ebx]
  4198b0:	repnz sbb eax,0x6700001
  4198b6:	add    cl,BYTE PTR ds:0x1ed7f
  4198bc:	repz pop eax
  4198be:	mov    edi,0x6a06ec6b
  4198c3:	pop    esp
  4198c4:	loop   0x4198d9
  4198c6:	fimul  WORD PTR [edi]
  4198c8:	test   edi,esi
  4198ca:	sub    DWORD PTR [ebx-0x6b4ff37],eax
  4198d0:	jae    0x4198e2
  4198d2:	hlt    
  4198d3:	push   cs
  4198d4:	gs jns 0x419890
  4198d7:	pop    ds
  4198d8:	scas   al,BYTE PTR es:[edi]
  4198d9:	test   DWORD PTR [ecx+0x89],esi
  4198df:	repz push es
  4198e1:	out    0xe,eax
  4198e3:	ja     0x419962
  4198e5:	cdq    
  4198e6:	pop    ds
  4198e7:	xchg   esi,eax
  4198e8:	adc    esp,DWORD PTR [eax+edi*8]
  4198eb:	vpsubd xmm3,xmm6,XMMWORD PTR [ebp+0x56b1db5]
  4198f3:	repz push es
  4198f5:	scas   al,BYTE PTR es:[edi]
  4198f6:	leave  
  4198f7:	loopne 0x4198fe
  4198f9:	out    0x3,eax
  4198fb:	xrelease xchg DWORD PTR [edi+0x5],ebp
  4198ff:	test   BYTE PTR [edx+0x6f3055b],0x22
  419906:	mov    esi,0x986a03c8
  41990b:	inc    ebx
  41990c:	adc    edx,DWORD PTR [esi+0xf]
  41990f:	jge    0x419908
  419911:	test   eax,0xf6003982
  419916:	(bad)  
  419917:	popf   
  419918:	sbb    BYTE PTR [esi],bh
  41991a:	pop    ds
  41991b:	jb     0x41992d
  41991d:	in     al,0x9d
  41991f:	clc    
  419920:	test   DWORD PTR [ecx],esi
  419922:	mov    ebx,esi
  419924:	push   es
  419925:	out    0xe,eax
  419927:	jo     0x4198f2
  419929:	sbb    BYTE PTR [edi],bl
  41992b:	push   cs
  41992c:	adc    ebp,DWORD PTR [edi+esi*8-0x620d3643]
  419933:	sub    eax,0xf3049f1d
  419938:	push   es
  419939:	mov    edx,0x803131
  41993e:	pushf  
  41993f:	fmul   st(7),st
  419941:	rcr    esi,0x0
  419944:	add    BYTE PTR [eax],al
  419946:	ins    BYTE PTR es:[edi],dx
  419947:	mov    ebp,0x1ff0e8fe
  41994c:	add    DWORD PTR [edx],ebx
  41994e:	add    ebp,eax
  419950:	cmp    BYTE PTR [edi],dh
  419952:	add    DWORD PTR [ebx],0xffffff81
  419955:	cmp    esp,edx
  419957:	push   es
  419958:	add    dh,dh
  41995a:	push   ds
  41995b:	add    BYTE PTR [ecx+0xc80cb17],cl
  419961:	fdiv   DWORD PTR [ecx-0x121a216e]
  419967:	test   DWORD PTR [edi],eax
  419969:	fwait
  41996a:	cmc    
  41996b:	adc    edi,ebp
  41996d:	and    al,0x8b
  41996f:	fld    DWORD PTR [edx-0x3]
  419972:	cmp    di,sp
  419975:	lock test DWORD PTR [esi],0xc4c2ba00
  41997c:	xchg   BYTE PTR [ebx+ebp*2],dl
  41997f:	iret   
  419980:	shl    esi,0x74
  419983:	add    edi,edi
  419985:	call   0x1a42b97a
  41998a:	and    ebp,eax
  41998c:	cmp    BYTE PTR [edi-0x7efc64],bh
  419992:	jecxz  0x41999a
  419994:	add    dh,bl
  419996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419997:	dec    DWORD PTR [eax+0xc801c9f]
  41999d:	fdiv   DWORD PTR [ecx]
  41999f:	xchg   edx,eax
  4199a0:	fsubp  st(5),st
  4199a2:	cmc    
  4199a3:	mov    cl,bl
  4199a5:	cmp    ch,bh
  4199a7:	adc    edi,ebp
  4199a9:	lods   al,BYTE PTR ds:[esi]
  4199aa:	add    BYTE PTR [eax],al
  4199ac:	add    BYTE PTR [ecx+ebx*8],bl
  4199af:	inc    edx
  4199b0:	cmc    
  4199b1:	outs   dx,BYTE PTR ds:[esi]
  4199b2:	cmp    edi,esp
  4199b4:	xor    al,0xf0
  4199b6:	push   es
  4199b7:	add    dl,bl
  4199b9:	ret    0x86c4
  4199bc:	add    BYTE PTR [edi+0x1a],dl
  4199bf:	cmp    dl,al
  4199c1:	fld    QWORD PTR [ecx+0x5da00d2]
  4199c7:	out    0x3,eax
  4199c9:	cdq    
  4199ca:	xlat   BYTE PTR ds:[ebx]
  4199cb:	inc    ecx
  4199cc:	cmp    ebp,DWORD PTR [edi+edx*2]
  4199cf:	or     al,0x83
  4199d1:	mov    al,0xf6
  4199d3:	(bad)  
  4199d4:	dec    ebp
  4199d6:	mov    ebx,0x2f048b06
  4199db:	xchg   DWORD PTR [ebx+ebx*4],ecx
  4199de:	inc    esi
  4199df:	jge    0x4199c2
  4199e1:	fwait
  4199e2:	add    al,BYTE PTR [ecx-0x50c946f]
  4199e8:	call   edi
  4199ea:	push   cs
  4199eb:	ss inc ebp
  4199ed:	xchg   esi,eax
  4199ee:	jae    0x4199c6
  4199f0:	jmp    0x41a530
  4199f5:	test   eax,0xc78941d7
  4199fa:	push   cs
  4199fb:	cmp    dl,al
  4199fd:	jge    0x419980
  4199ff:	xchg   esi,eax
  419a00:	add    BYTE PTR [edx+0x5],bl
  419a03:	out    0x3,eax
  419a05:	test   eax,0xec3b41d7
  419a0a:	push   esi
  419a0b:	or     al,0x83
  419a0d:	ins    BYTE PTR es:[edi],dx
  419a0e:	idiv   bh
  419a10:	inc    DWORD PTR [eax]
  419a12:	add    BYTE PTR [eax],al
  419a14:	pop    ebp
  419a15:	mov    ebx,0x39848b06
  419a1a:	xchg   DWORD PTR [ebx+edi*1],ecx
  419a1d:	inc    esi
  419a1e:	jge    0x419a01
  419a20:	dec    ebx
  419a21:	add    al,BYTE PTR [ebp+edx*2-0x50c15]
  419a28:	push   edi
  419a29:	sbb    DWORD PTR [esi],esi
  419a2b:	inc    ebp
  419a2c:	inc    esi
  419a2d:	jae    0x419a05
  419a2f:	jmp    0x4199b3
  419a31:	ss iret 
  419a33:	inc    edx
  419a34:	sbb    DWORD PTR [ecx+0x11],0x3b
  419a38:	repz fstp QWORD PTR [edi-0x2fe3f7a2]
  419a3f:	shl    DWORD PTR [ecx-0x39444bc],1
  419a45:	pushf  
  419a46:	test   al,0xb
  419a48:	repz sbb eax,0xa4e8b60c
  419a4e:	mov    ch,0x33
  419a50:	imul   ebx,DWORD PTR [edx],0x3f7340f2
  419a56:	icebp  
  419a57:	or     al,0x6e
  419a59:	(bad)  
  419a5a:	adc    ch,bh
  419a5c:	mov    esp,0xfa13c641
  419a61:	loop   0x419a5a
  419a63:	jge    0x419a2f
  419a65:	xor    eax,0xdcc130d0
  419a6a:	mov    BYTE PTR [ebx+0x7],dl
  419a6d:	adc    eax,0x74c77c3f
  419a72:	add    BYTE PTR [ecx],dh
  419a74:	mov    eax,ds:0x5dd6dc
  419a79:	add    BYTE PTR [eax],al
  419a7b:	pop    ss
  419a7c:	sub    DWORD PTR [eax+0x11def34],eax
  419a82:	or     eax,0x5688153d
  419a87:	daa    
  419a88:	xchg   esp,eax
  419a89:	or     al,0xf
  419a8b:	mov    al,0x9d
  419a8d:	and    DWORD PTR [eax],edx
  419a8f:	in     al,dx
  419a90:	test   eax,0xa954f027
  419a95:	sbb    eax,DWORD PTR [ebx-0x19]
  419a98:	out    0xc4,al
  419a9a:	adc    eax,ebp
  419a9c:	(bad)  
  419a9d:	xchg   DWORD PTR [ebx+0x3b],ecx
  419aa0:	cmc    
  419aa1:	inc    eax
  419aa2:	or     eax,0xfd26386f
  419aa7:	sub    al,0x9d
  419aa9:	popf   
  419aaa:	jmp    0x419a9f
  419aac:	sub    BYTE PTR [esi+0x11dee92],al
  419ab2:	mov    DWORD PTR [esi+0x31801b06],edi
  419ab8:	or     eax,0x8408be70
  419abd:	adc    DWORD PTR [esi+ebp*8],ecx
  419ac0:	xchg   DWORD PTR [eax+0x606f30e],edx
  419ac6:	out    0x81,eax
  419ac8:	sti    
  419ac9:	imul   eax,edx,0xffffffe4
  419acc:	jle    0x419a7a
  419ace:	neg    DWORD PTR [ebx]
  419ad0:	inc    esi
  419ad1:	ins    BYTE PTR es:[edi],dx
  419ad2:	fwait
  419ad3:	imul   ecx,eax,0x52
  419ad6:	fbld   TBYTE PTR [ebx+edx*4-0x10ba78cb]
  419add:	out    0x8f,al
  419adf:	add    BYTE PTR [eax],al
  419ae1:	add    dl,bl
  419ae3:	pushf  
  419ae4:	out    0x1a,al
  419ae6:	cmp    eax,0x784c71ef
  419aeb:	mov    eax,0x1eb28eda
  419af0:	sub    BYTE PTR [ebp+0x44640f9c],bl
  419af6:	and    BYTE PTR [ecx+0x1b84c971],bh
  419afc:	cld    
  419afd:	mov    ds,WORD PTR ds:0xba45c1f3
  419b03:	cs push ss
  419b05:	lock push 0x3
  419b08:	rol    ecx,0x18
  419b0b:	call   0xd7fb:0x56986eb
  419b12:	push   0xffffffc3
  419b14:	out    0xdd,eax
  419b16:	scas   al,BYTE PTR es:[edi]
  419b17:	loope  0x419af3
  419b19:	iret   
  419b1a:	mov    bl,0xf
  419b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b1d:	out    dx,eax
  419b1e:	std    
  419b1f:	sar    edx,0x97
  419b22:	sbb    DWORD PTR [ebx],0x0
  419b25:	out    dx,eax
  419b26:	sub    al,0x7b
  419b28:	lods   eax,DWORD PTR ds:[esi]
  419b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b2a:	jnp    0x419b62
  419b2c:	adc    dh,BYTE PTR [edi]
  419b2e:	jmp    0xd87e:0x51bf003c
  419b35:	bound  esi,QWORD PTR [ecx]
  419b37:	mov    eax,DWORD PTR [edx+0x38f66329]
  419b3d:	mov    esp,0xda0d98f8
  419b42:	scas   eax,DWORD PTR es:[edi]
  419b43:	iret   
  419b44:	xchg   BYTE PTR [edi+0x3c000000],bl
  419b4a:	into   
  419b4b:	mov    esi,0xeea679f6
  419b50:	dec    BYTE PTR [ecx]
  419b52:	mov    BYTE PTR [ebx-0x7],bh
  419b55:	lock sti 
  419b57:	sub    BYTE PTR [ebx],0x13
  419b5a:	or     al,0xfd
  419b5c:	and    cl,BYTE PTR [edx-0x3294f2ee]
  419b62:	push   ds
  419b63:	std    
  419b64:	(bad)  
  419b65:	ins    DWORD PTR es:[edi],dx
  419b66:	retf   0x2923
  419b69:	retfw  0xc623
  419b6d:	sub    edx,0xffffff88
  419b70:	xchg   esi,eax
  419b71:	push   esi
  419b72:	push   cs
  419b73:	(bad)  
  419b74:	cmp    al,0x9b
  419b76:	jg     0x419b41
  419b78:	scas   al,BYTE PTR es:[edi]
  419b79:	xor    esi,0x55
  419b7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b7d:	arpl   si,di
  419b7f:	cld    
  419b80:	adc    al,0xfb
  419b82:	or     esi,DWORD PTR [ebx-0x1f]
  419b85:	enter  0xe3b9,0x8e
  419b89:	fnstcw WORD PTR [edi-0x7606567e]
  419b8f:	push   esp
  419b90:	out    dx,eax
  419b91:	lock push es
  419b93:	cmp    DWORD PTR [ebx+edi*8],edx
  419b96:	xchg   edi,eax
  419b97:	rol    DWORD PTR [eax+0x66fd1c05],cl
  419b9d:	cmc    
  419b9e:	xor    eax,0xca7798e9
  419ba3:	adc    edx,DWORD PTR [edx]
  419ba5:	mov    dh,0x91
  419ba7:	test   eax,0x38a23262
  419bac:	add    BYTE PTR [eax],al
  419bae:	add    BYTE PTR [eax],al
  419bb0:	shl    BYTE PTR [esi+eax*4+0xf],cl
  419bb4:	pushf  
  419bb5:	adc    al,0x80
  419bb7:	cli    
  419bb8:	pop    ss
  419bb9:	ja     0x419bc4
  419bbb:	inc    ebx
  419bbc:	and    edx,edx
  419bbe:	outs   dx,BYTE PTR ds:[esi]
  419bbf:	xchg   esi,eax
  419bc0:	call   0x1cdd:0x2e75072c
  419bc7:	and    eax,0xfffffffb
  419bca:	jae    0x419be8
  419bcc:	mov    DWORD PTR [edi+0x5d],ebp
  419bcf:	add    BYTE PTR [edi-0x72],ch
  419bd2:	jle    0x419bce
  419bd4:	loope  0x419c53
  419bd6:	push   cs
  419bd7:	and    eax,0x4
  419bda:	je     0x419be8
  419bdc:	dec    ebx
  419bdd:	in     al,dx
  419bde:	add    BYTE PTR [eax],0xda
  419be1:	or     DWORD PTR [ebx],ecx
  419be3:	test   DWORD PTR [eax+esi*8],esi
  419be6:	cli    
  419be7:	dec    DWORD PTR [ecx]
  419be9:	lock inc eax
  419beb:	adc    al,0xe3
  419bed:	inc    ebp
  419bee:	adc    DWORD PTR [esp+esi*2-0x1f],edi
  419bf2:	pop    edi
  419bf3:	jmp    DWORD PTR [ebp-0x11]
  419bf6:	ss pop esi
  419bf8:	add    BYTE PTR ss:[edi+0x3d],bh
  419bfc:	inc    ebp
  419bfd:	out    dx,eax
  419bfe:	cli    
  419bff:	cvttps2pi mm2,QWORD PTR [eax+eax*4]
  419c03:	cli    
  419c04:	cmp    esi,0xffffff83
  419c07:	dec    ebx
  419c08:	gs out dx,eax
  419c0a:	cli    
  419c0b:	and    DWORD PTR [eax+0x22],0xc
  419c0f:	test   BYTE PTR [eax],bl
  419c11:	lock cli 
  419c13:	inc    DWORD PTR [eax]
  419c15:	add    BYTE PTR [eax],al
  419c17:	fucomi st,st(4)
  419c19:	lahf   
  419c1a:	add    BYTE PTR [edx+0x9],cl
  419c1d:	or     eax,DWORD PTR [esp+ebx*4-0x66000512]
  419c24:	dec    ecx
  419c25:	cmp    cl,al
  419c27:	es ftst 
  419c2a:	sub    esi,ebx
  419c2c:	mov    ah,0x16
  419c2e:	std    
  419c2f:	clc    
  419c30:	pop    ebp
  419c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c32:	or     al,0x70
  419c34:	pop    ss
  419c35:	sbb    ch,bh
  419c37:	and    al,0x1c
  419c39:	dec    edi
  419c3a:	adc    DWORD PTR [eax-0x27],esi
  419c3d:	or     BYTE PTR [edx+eax*1-0x5f],dh
  419c41:	sbb    eax,0x82138720
  419c46:	cli    
  419c47:	push   ebx
  419c48:	pop    ds
  419c49:	add    DWORD PTR [eax],eax
  419c4b:	in     al,dx
  419c4c:	call   0x3fc2:0xfbf4fd08
  419c53:	sub    bh,bl
  419c55:	xchg   edi,eax
  419c56:	xlat   BYTE PTR ds:[ebx]
  419c57:	fimul  DWORD PTR [edi+edx*1]
  419c5a:	std    
  419c5b:	fcomp  QWORD PTR [ecx-0x49]
  419c5e:	imul   esp,esp,0xffffffa0
  419c61:	cmp    bh,dh
  419c63:	int3   
  419c64:	and    eax,0xa0e0b608
  419c69:	sbb    cl,BYTE PTR [edx]
  419c6b:	in     al,dx
  419c6c:	cdq    
  419c6d:	sub    esi,edi
  419c6f:	mov    ah,0x3d
  419c71:	test   dl,bh
  419c73:	clc    
  419c74:	adc    al,0x7d
  419c76:	loopne 0x419c1d
  419c78:	dec    ebp
  419c79:	sbb    BYTE PTR [ecx-0x67000000],al
  419c7f:	and    cl,BYTE PTR [eax]
  419c81:	test   BYTE PTR [esp+ebx*2+0x6870fd18],bh
  419c88:	push   es
  419c89:	or     eax,0xfd175c6f
  419c8e:	jl     0x419c2f
  419c90:	sbb    al,BYTE PTR [ebx+0xd011df3]
  419c96:	ja     0x419cf8
  419c98:	pop    ss
  419c99:	std    
  419c9a:	fs loope 0x419c60
  419c9d:	cmp    BYTE PTR [edx],dh
  419c9f:	adc    dl,BYTE PTR [edi-0x19]
  419ca2:	pushf  
  419ca3:	pushf  
  419ca4:	pop    ss
  419ca5:	std    
  419ca6:	or     BYTE PTR [edi],al
  419ca8:	lds    esp,FWORD PTR [edi+0x197387f7]
  419cae:	ds or  al,0xe6
  419cb1:	push   ecx
  419cb2:	loop   0x419c3b
  419cb4:	push   ecx
  419cb5:	or     eax,0x1d69efa7
  419cba:	cli    
  419cbb:	xchg   edx,eax
  419cbc:	aam    0x84
  419cbe:	sbb    ebx,edi
  419cc0:	mov    edx,0xdc1173f2
  419cc5:	(bad)  
  419cc6:	clc    
  419cc7:	test   DWORD PTR [ecx],esp
  419cc9:	jle    0x419cbe
  419ccb:	push   es
  419ccc:	out    0x8,eax
  419cce:	jo     0x419c50
  419cd0:	adc    eax,0xa6c7f618
  419cd5:	fsubr  QWORD PTR [ebp+0x732a348a]
  419cdb:	or     al,0xfe
  419cdd:	pop    ss
  419cde:	je     0x419ca1
  419ce0:	fcmovu st,st(4)
  419ce2:	add    BYTE PTR [eax],al
  419ce4:	add    BYTE PTR [ebp-0x3171a405],dl
  419cea:	or     esp,esi
  419cec:	(bad)  [esi]
  419cee:	fwait
  419cef:	in     eax,dx
  419cf0:	and    BYTE PTR [ecx],0xd
  419cf3:	(bad)  
  419cf4:	pop    ss
  419cf5:	out    0x54,al
  419cf7:	jmp    0x300:0xbcd3458a
  419cfe:	add    ebp,esi
  419d00:	cmp    BYTE PTR [edi],0xd
  419d03:	mov    dh,0x17
  419d05:	xor    cl,BYTE PTR [esp]
  419d08:	lock lds edi,FWORD PTR [ecx+0x1da697fa]
  419d0f:	sub    eax,0x600b7e16
  419d14:	shl    eax,0xcf
  419d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d18:	pop    es
  419d19:	js     0x419ce2
  419d1b:	test   BYTE PTR [edi],dl
  419d1d:	iretw  
  419d1f:	sbb    al,0xa8
  419d21:	out    dx,eax
  419d22:	xchg   DWORD PTR [eax],eax
  419d24:	leave  
  419d25:	dec    BYTE PTR [ecx]
  419d27:	std    
  419d28:	fidivr WORD PTR [esi+0x34bf8905]
  419d2e:	adc    DWORD PTR [ecx+edi*8],eax
  419d31:	cmp    al,0xfa
  419d33:	add    DWORD PTR [ebx],0xffffffdd
  419d36:	or     ebp,edi
  419d38:	stos   BYTE PTR es:[edi],al
  419d39:	add    eax,0x3a0013c8
  419d3e:	idiv   DWORD PTR [ebx+0x1f]
  419d41:	into   
  419d42:	jmp    0xd543:0x83fc36fd
  419d49:	add    BYTE PTR [eax],al
  419d4b:	add    BYTE PTR [ecx],ch
  419d4d:	dec    esp
  419d4e:	or     eax,0xfd08fe74
  419d53:	push   ds
  419d54:	sbb    BYTE PTR [ecx+0x1c71e66b],ch
  419d5a:	sti    
  419d5b:	push   cs
  419d5c:	add    al,0xfc
  419d5e:	mov    ch,0xea
  419d60:	jns    0x419d13
  419d62:	xor    esi,edi
  419d64:	fdiv   st(2),st
  419d66:	(bad)  
  419d67:	in     eax,0x73
  419d69:	psubq  mm5,mm6
  419d6c:	in     eax,0xc7
  419d6e:	cld    
  419d6f:	sub    al,0xc3
  419d71:	ror    DWORD PTR [edx-0xb],1
  419d74:	fs sub al,0xe7
  419d77:	ret    
  419d78:	fisttp DWORD PTR [ebx]
  419d7a:	std    
  419d7b:	pusha  
  419d7c:	mov    bl,0xf6
  419d7e:	cmp    BYTE PTR [eax-0x43228213],ch
  419d84:	add    eax,0x4b17390c
  419d89:	sti    
  419d8a:	sub    BYTE PTR [ebp-0x15],0xb
  419d8e:	std    
  419d8f:	div    BYTE PTR [esi]
  419d91:	or     BYTE PTR [ecx+0x414a337],cl
  419d97:	stc    
  419d98:	out    dx,eax
  419d99:	sti    
  419d9a:	and    DWORD PTR [edi+0xfd0c0b],0x19
  419da1:	repnz inc eax
  419da3:	adc    al,0x33
  419da5:	aas    
  419da6:	adc    DWORD PTR [esp+edi*2-0x25],edi
  419daa:	mov    bh,0xfd
  419dac:	(bad)  
  419dae:	test   BYTE PTR [ebp+0x0],al
  419db1:	add    BYTE PTR [eax],al
  419db3:	inc    esi
  419db4:	sub    eax,0x9ecf0fbe
  419db9:	clc    
  419dba:	call   FWORD PTR [ebp+0x4d6c5b2c]
  419dc0:	test   DWORD PTR [edx+0xaf0adfd],ecx
  419dc6:	mov    dh,0x9
  419dc8:	jge    0x419e20
  419dca:	xor    al,0xd4
  419dcc:	or     DWORD PTR ds:0x94872d10,ecx
  419dd2:	std    
  419dd3:	int    0xf0
  419dd5:	notrack call DWORD PTR [edi+0x1a]
  419dd9:	ss dec ebp
  419ddb:	div    BYTE PTR [ecx-0x25]
  419dde:	jmp    0x3c8d37
  419de3:	arpl   WORD PTR [edi+0x11],ax
  419de6:	cmp    ecx,DWORD PTR [ebx]
  419de8:	add    DWORD PTR [ecx-0x50c2085],ecx
  419dee:	cmp    edi,DWORD PTR [ecx+eiz*2+0xc]
  419df2:	xor    DWORD PTR [edx],0xfffffff2
  419df5:	cli    
  419df6:	dec    ebp
  419df8:	mov    ebx,0x36f48afe
  419dfd:	repz add al,0xaa
  419e00:	adc    eax,0xf238840c
  419e05:	cli    
  419e06:	dec    ecx
  419e08:	repz inc eax
  419e0a:	adc    al,0xa3
  419e0c:	inc    eax
  419e0d:	adc    DWORD PTR [esp+edi*2-0x23],edi
  419e11:	push   ebx
  419e12:	std    
  419e13:	dec    ebp
  419e14:	repz or dh,BYTE PTR [esi-0x2b000000]
  419e1b:	push   es
  419e1c:	or     esi,DWORD PTR [esi-0x41031f0d]
  419e22:	push   ebx
  419e23:	daa    
  419e24:	or     BYTE PTR [edi+0xfb0376],bh
  419e2a:	dec    eax
  419e2b:	sbb    BYTE PTR [esi+esi*4],al
  419e2e:	lods   al,BYTE PTR ds:[esi]
  419e2f:	push   ds
  419e30:	add    al,0xb6
  419e32:	mov    esp,0xfbe0421d
  419e37:	adc    al,0x42
  419e39:	add    DWORD PTR [ebx],edi
  419e3b:	lahf   
  419e3c:	rcl    BYTE PTR [ebx-0x41],cl
  419e3f:	ret    
  419e40:	sub    BYTE PTR [ecx+0xd12b817],dl
  419e46:	pop    ebp
  419e47:	push   eax
  419e48:	add    BYTE PTR ds:0xbefd7065,cl
  419e4e:	adc    ah,BYTE PTR [edi]
  419e50:	or     dl,cl
  419e52:	jp     0x419ebe
  419e54:	or     eax,0xc3243a01
  419e59:	adc    ebp,esp
  419e5b:	fwait
  419e5c:	aam    0x0
  419e5e:	repz pop ds
  419e60:	cmp    al,0x52
  419e63:	jp     0x419e6f
  419e65:	lds    ebp,FWORD PTR [esi]
  419e67:	ds (bad) 
  419e69:	push   ebx
  419e6b:	sbb    eax,0x7b704d28
  419e70:	loope  0x419e71
  419e72:	fldenv [edi-0x78]
  419e75:	inc    ebx
  419e76:	pmaxub mm6,QWORD PTR [ebx+0x2fe46fc]
  419e7d:	mov    dh,0x0
  419e7f:	add    BYTE PTR [eax],al
  419e81:	in     al,dx
  419e82:	xor    BYTE PTR [esi+0x716ffc1b],cl
  419e88:	nop
  419e89:	inc    esi
  419e8a:	fiadd  WORD PTR [ebx]
  419e8c:	std    
  419e8d:	es es add ch,dl
  419e91:	cmp    eax,0x780f8e51
  419e96:	gs adc al,0x73
  419e99:	test   DWORD PTR [esi],0x1ef48ea6
  419e9f:	inc    edx
  419ea0:	and    esi,DWORD PTR [esi+0x8]
  419ea3:	ins    BYTE PTR es:[edi],dx
  419ea4:	inc    ebx
  419ea5:	out    0xfb,eax
  419ea7:	retf   
  419ea8:	cmc    
  419ea9:	push   0x70048608
  419eae:	mov    bl,0xf1
  419eb0:	add    esi,ebx
  419eb2:	idiv   DWORD PTR [esp+edi*4]
  419eb5:	dec    ebp
  419eb6:	stc    
  419eb7:	xor    al,0xc4
  419eb9:	repnz inc ebp
  419ebb:	inc    edi
  419ebc:	or     ebp,edx
  419ebe:	inc    ebp
  419ebf:	jmp    0xfe02:0xae50e61b
  419ec6:	push   eax
  419ec7:	sahf   
  419ec8:	add    DWORD PTR [edi+eiz*1-0x11],esp
  419ecc:	or     BYTE PTR [edi+eax*4-0x5],bl
  419ed0:	fcmovnb st,st(0)
  419ed2:	xchg   edx,eax
  419ed3:	mov    al,BYTE PTR [eax+0x4e6e688]
  419ed9:	jo     0x419f40
  419edb:	jmp    0xe7fc:0x54f7f303
  419ee2:	push   eax
  419ee3:	addr16 jae 0x419ee6
  419ee6:	add    BYTE PTR [eax],al
  419ee8:	dec    eax
  419ee9:	(bad)  
  419eea:	out    0x0,al
  419eec:	jmp    0x419f09
  419eee:	popf   
  419eef:	mov    BYTE PTR [eax-0xd],al
  419ef2:	nop
  419ef3:	add    esi,edx
  419ef5:	xchg   ecx,eax
  419ef6:	rcl    BYTE PTR [eax+eax*2],cl
  419ef9:	out    dx,eax
  419efa:	xchg   esp,eax
  419efb:	adc    al,0x40
  419efd:	mul    ebp
  419eff:	cdq    
  419f00:	call   0xcd3df30c
  419f05:	push   cs
  419f06:	(bad)  
  419f07:	adc    ebp,DWORD PTR [esi+0x7003a781]
  419f0d:	push   cs
  419f0e:	icebp  
  419f0f:	add    esi,ebx
  419f11:	jnp    0x419f4f
  419f13:	in     al,0x8b
  419f15:	(bad)  
  419f17:	popa   
  419f18:	mov    dl,0xe3
  419f1a:	mov    BYTE PTR [ebx+ecx*4],dl
  419f1d:	enter  0x394e,0xe0
  419f21:	xchg   ebx,eax
  419f22:	sbb    esi,DWORD PTR [edx-0x4c]
  419f25:	or     DWORD PTR [ebx-0x7f],esi
  419f28:	test   eax,0x1f9730a
  419f2d:	xchg   esp,eax
  419f2e:	or     eax,DWORD PTR [esi-0x4d180086]
  419f34:	(bad)  
  419f36:	std    
  419f37:	ins    BYTE PTR es:[edi],dx
  419f38:	mov    bh,0xf9
  419f3a:	and    BYTE PTR [edx+0x6afd0745],0xa8
  419f41:	add    eax,0x750c481
  419f46:	mov    ch,bh
  419f48:	cmp    eax,0x4e03c1
  419f4d:	add    BYTE PTR [eax],al
  419f4f:	stc    
  419f50:	stc    
  419f51:	sub    DWORD PTR [esi],0xd3fd09d7
  419f57:	call   0xf1254c7b
  419f5c:	push   es
  419f5d:	push   0x42
  419f5f:	out    0x5e,al
  419f61:	or     ch,cl
  419f63:	lock jge 0x419fb1
  419f66:	(bad)
  419f69:	push   ebp
  419f6a:	call   0x953ef526
  419f6f:	rcl    BYTE PTR [ecx+0x7a01eb44],1
  419f75:	sbb    al,0x70
  419f77:	stos   BYTE PTR es:[edi],al
  419f78:	adc    bh,ch
  419f7a:	jl     0x419f54
  419f7c:	(bad)
  419f80:	jns    0x419f92
  419f82:	cmp    eax,esi
  419f84:	mov    esp,0x871aee04
  419f89:	(bad)  
  419f8a:	xor    al,0xb7
  419f8c:	push   es
  419f8d:	(bad)  
  419f8e:	push   esp
  419f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f90:	pop    es
  419f91:	lds    eax,FWORD PTR [eax]
  419f93:	mov    DWORD PTR [edx],edi
  419f95:	call   0xfb5b4a06
  419f9a:	mov    eax,DWORD PTR [edx-0x75]
  419f9d:	cli    
  419f9e:	sbb    eax,0x75fb1956
  419fa3:	neg    DWORD PTR [ecx]
  419fa5:	jbe    0x41a017
  419fa7:	push   ebp
  419fa8:	lahf   
  419fa9:	or     bh,bh
  419fab:	outs   dx,DWORD PTR ds:[esi]
  419fac:	rcl    BYTE PTR [edx],cl
  419fae:	inc    eax
  419faf:	pop    edx
  419fb0:	mov    bl,0x55
  419fb2:	test   DWORD PTR [eax],eax
  419fb4:	add    BYTE PTR [eax],al
  419fb6:	mov    bl,BYTE PTR [edi-0x650b76f9]
  419fbc:	mov    DWORD PTR [edi-0x3b],eax
  419fbf:	and    cl,BYTE PTR [ecx+0xa]
  419fc2:	pop    edx
  419fc3:	or     bh,BYTE PTR [edi-0x42]
  419fc6:	jbe    0x419fd2
  419fc8:	add    BYTE PTR [eax],al
  419fca:	dec    edx
  419fcb:	lahf   
  419fcc:	add    eax,0x86065f8b
  419fd1:	xchg   BYTE PTR [esi-0x5efffff7],dl
  419fd7:	push   eax
  419fd8:	in     eax,0x34
  419fda:	and    BYTE PTR [edx],cl
  419fdc:	add    BYTE PTR [ebx+0x503cee5f],cl
  419fe2:	aad    0x9e
  419fe4:	sbb    al,0xf
  419fe6:	pushf  
  419fe7:	adc    bl,bh
  419fe9:	jne    0x419fe1
  419feb:	or     BYTE PTR [esi+0x3cb76a90],dh
  419ff1:	add    ch,dh
  419ff3:	sahf   
  419ff4:	adc    al,0x3
  419ff6:	std    
  419ff7:	mov    edi,0x84ba75fb
  419ffc:	(bad)  
  419ffd:	dec    DWORD PTR [edi+0x6]
  41a000:	cld    
  41a001:	jne    0x419fd5
  41a003:	and    ebp,edi
  41a005:	(bad)  
  41a007:	pop    ss
  41a008:	add    eax,0x9fc8cc5
  41a00e:	repz out dx,eax
  41a010:	add    BYTE PTR [eax-0x2f12bf7],bh
  41a016:	mov    ch,BYTE PTR [ecx+0x1b]
  41a019:	std    
  41a01a:	add    BYTE PTR [eax],al
  41a01c:	add    BYTE PTR [eax+edi*2+0x203323c5],dl
  41a023:	psrlq  mm3,0xe4
  41a027:	push   esi
  41a028:	add    eax,0xcf0227c
  41a02d:	cmp    eax,0xb35b747f
  41a032:	out    dx,eax
  41a033:	(bad)  
  41a035:	or     esi,ecx
  41a037:	aaa    
  41a038:	push   esi
  41a039:	pop    esp
  41a03a:	add    dh,cl
  41a03c:	mov    BYTE PTR [eax],ch
  41a03e:	test   BYTE PTR [ebp-0x6fdb3f5],dl
  41a044:	out    0x2f,eax
  41a046:	xchg   esp,eax
  41a047:	push   cs
  41a048:	std    
  41a049:	jbe    0x41a07a
  41a04b:	inc    DWORD PTR [edx+0xf62f]
  41a051:	imul   edi,eax,0xc
  41a054:	std    
  41a055:	and    al,0x46
  41a057:	lods   eax,DWORD PTR ds:[esi]
  41a058:	call   0x43bcec79
  41a05d:	iret   
  41a05e:	hlt    
  41a05f:	push   esi
  41a060:	push   ebp
  41a061:	repnz scas eax,DWORD PTR es:[edi]
  41a063:	mov    al,0xfc
  41a065:	jle    0x41a076
  41a067:	push   DWORD PTR [ebp+0x1b952cf4]
  41a06d:	in     al,0x5d
  41a06f:	test   BYTE PTR [eax-0x2ff51b2],dl
  41a075:	pop    esi
  41a076:	test   BYTE PTR [ebx],0xc5
  41a079:	inc    ebp
  41a07a:	or     eax,0x1df00f95
  41a07f:	(bad)  
  41a081:	add    BYTE PTR [eax],al
  41a083:	add    bh,bh
  41a085:	push   0xe63efd3b
  41a08a:	sbb    BYTE PTR [edi-0x64],bh
  41a08d:	pop    es
  41a08e:	out    0x10,al
  41a090:	jo     0x41a059
  41a092:	in     eax,dx
  41a093:	xchg   BYTE PTR [esi+ecx*1],ch
  41a096:	out    0x3,eax
  41a098:	imul   esp,DWORD PTR [eax],0xffffffcb
  41a09b:	adc    BYTE PTR [esi+0x6c05ad88],bl
  41a0a1:	lds    ebx,FWORD PTR [edx+0x3]
  41a0a4:	repz push es
  41a0a6:	shl    BYTE PTR [ecx+0x7ce706ed],0x30
  41a0ad:	sub    esp,DWORD PTR [edi]
  41a0af:	mov    ah,0x77
  41a0b1:	jp     0x41a07a
  41a0b3:	add    BYTE PTR [ebp+0x896960c],ah
  41a0b9:	adc    al,0x55
  41a0bb:	jae    0x41a040
  41a0bd:	bound  esp,QWORD PTR [edi]
  41a0bf:	add    al,0x56
  41a0c1:	jp     0x41a0a2
  41a0c3:	add    al,0x26
  41a0c5:	pop    ebp
  41a0c6:	jbe    0x41a05e
  41a0c8:	hlt    
  41a0c9:	(bad)  
  41a0ca:	mov    eax,ds:0x6612c010
  41a0cf:	xchg   esi,eax
  41a0d0:	in     al,dx
  41a0d1:	out    dx,al
  41a0d2:	and    DWORD PTR [ecx],esi
  41a0d4:	cs add al,0x6c
  41a0d7:	inc    ebx
  41a0d8:	test   BYTE PTR [ecx+0x41cfb11],0x70
  41a0df:	mov    cl,0x84
  41a0e1:	mov    esi,0x40e0fda
  41a0e6:	inc    eax
  41a0e7:	xor    al,BYTE PTR [eax]
  41a0e9:	add    BYTE PTR [eax],al
  41a0eb:	sbb    DWORD PTR [esi+ebp*1],eax
  41a0ee:	jl     0x41a0a0
  41a0f0:	sub    dh,dh
  41a0f2:	pop    ecx
  41a0f3:	sahf   
  41a0f4:	add    eax,0x79efb3a7
  41a0f9:	mov    DWORD PTR [eax],0x960e0b9d
  41a0ff:	clc    
  41a100:	adc    edi,DWORD PTR ds:0xa7618383
  41a106:	add    ecx,esi
  41a108:	jns    0x41a10a
  41a10a:	shr    edi,1
  41a10c:	leave  
  41a10d:	push   ebp
  41a10e:	out    dx,al
  41a10f:	adc    ax,WORD PTR [ecx]
  41a112:	mov    ecx,0x720c77e4
  41a117:	call   0x923141d
  41a11c:	clc    
  41a11d:	(bad)  
  41a11f:	in     al,dx
  41a120:	xchg   DWORD PTR [edi+0x7f76bf6],edi
  41a126:	jmp    0xec06271b
  41a12b:	pop    es
  41a12c:	test   DWORD PTR [eax+0x71],esi
  41a12f:	cmp    bh,0xfc
  41a132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a133:	(bad)  
  41a134:	out    0x7,eax
  41a136:	jmp    0xcd842f2b
  41a13b:	xor    BYTE PTR [ebx-0x3],dl
  41a13e:	adc    al,0x57
  41a140:	adc    dh,BYTE PTR [esi+0x1c77e5ee]
  41a146:	out    dx,al
  41a147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a148:	xchg   esi,eax
  41a149:	(bad)  
  41a14a:	adc    al,0x2f
  41a14c:	add    edi,esi
  41a14e:	hlt    
  41a14f:	add    BYTE PTR [eax],al
  41a151:	add    BYTE PTR [eax+0x6],cl
  41a154:	aad    0xbf
  41a156:	in     eax,0x77
  41a158:	adc    BYTE PTR [edx-0x18],dh
  41a15b:	add    DWORD PTR [ebx-0x1b],esi
  41a15e:	cmc    
  41a15f:	ja     0x41a169
  41a161:	inc    ecx
  41a162:	shl    esp,0xfc
  41a165:	inc    esi
  41a166:	push   0xffffffc6
  41a168:	or     al,0x64
  41a16a:	mov    eax,ds:0xb8e9000e
  41a16f:	and    al,0xfc
  41a171:	cs in  al,dx
  41a173:	jmp    0x41a1bd
  41a175:	adc    esp,esp
  41a177:	add    DWORD PTR [ecx-0x49ec2b5c],ecx
  41a17d:	mov    esi,0xe5046ef
  41a182:	jp     0x41a1a6
  41a184:	or     eax,0xfb0a1400
  41a189:	jne    0x41a139
  41a18b:	add    DWORD PTR [ebx+0x3cb82a80],esi
  41a191:	add    ch,cl
  41a193:	lahf   
  41a194:	adc    al,0x3
  41a196:	test   DWORD PTR [ebx+edi*8-0x2ffa558b],edi
  41a19d:	inc    DWORD PTR [edi+0x7]
  41a1a0:	xchg   ebx,ecx
  41a1a2:	lods   eax,DWORD PTR ds:[esi]
  41a1a3:	lahf   
  41a1a4:	add    al,0xe8
  41a1a6:	cmp    eax,0x17fffb31
  41a1ab:	inc    esi
  41a1ac:	or     eax,DWORD PTR [ebp-0x2fcd3]
  41a1b2:	add    dh,ah
  41a1b4:	clc    
  41a1b5:	inc    DWORD PTR [eax]
  41a1b7:	add    BYTE PTR [eax],al
  41a1b9:	dec    ebp
  41a1ba:	and    esp,ebp
  41a1bc:	dec    BYTE PTR [ebp+0x4e468711]
  41a1c2:	dec    ebx
  41a1c3:	fld    QWORD PTR [edx]
  41a1c5:	sar    ecx,1
  41a1c7:	std    
  41a1c8:	mov    BYTE PTR [edi],bl
  41a1ca:	inc    DWORD PTR [edi-0x7af5a4b4]
  41a1d0:	dec    ebp
  41a1d1:	outs   dx,BYTE PTR ds:[esi]
  41a1d2:	jge    0x41a222
  41a1d4:	adc    BYTE PTR [ecx],dh
  41a1d6:	(bad)  
  41a1d7:	lock mov DWORD PTR [edi+0x16],esi
  41a1db:	mov    DWORD PTR [edx+eiz*4],eax
  41a1de:	jl     0x41a1e8
  41a1e0:	mov    DWORD PTR [edi+0xe],ecx
  41a1e3:	xchg   DWORD PTR [esi+0x596],ecx
  41a1e9:	mov    ds:0xc18be4c6,eax
  41a1ee:	fmul   QWORD PTR [edx+0x68]
  41a1f1:	cdq    
  41a1f2:	xchg   esi,eax
  41a1f3:	clc    
  41a1f4:	bound  edx,QWORD PTR [ebx-0x3af68e03]
  41a1fa:	into   
  41a1fb:	sbb    al,0x2
  41a1fd:	fiadd  DWORD PTR ds:0xf3f3eb00
  41a203:	and    DWORD PTR [ebx+0x13],0xf4379f0
  41a20a:	mov    al,0x7b
  41a20c:	inc    ebx
  41a20d:	pop    ss
  41a20e:	add    DWORD PTR [ebp+0x641f423],edx
  41a214:	std    
  41a215:	inc    esi
  41a216:	sar    ch,1
  41a218:	mov    ch,0x63
  41a21a:	jg     0x41a1c9
  41a21c:	aas    
  41a21d:	add    BYTE PTR [eax],al
  41a21f:	add    bl,dh
  41a221:	loopne 0x41a1b7
  41a223:	sbb    esi,eax
  41a225:	ror    BYTE PTR [edx],0x73
  41a228:	sti    
  41a229:	fs aaa 
  41a22b:	push   esi
  41a22c:	xchg   esp,eax
  41a22d:	inc    edx
  41a22e:	hlt    
  41a22f:	cld    
  41a230:	push   es
  41a231:	hlt    
  41a232:	or     esi,DWORD PTR [ebx-0x5]
  41a235:	(bad)  
  41a236:	and    eax,0x84b07cdb
  41a23b:	sar    bh,0xf4
  41a23e:	int    0x1d
  41a240:	outs   dx,DWORD PTR ds:[esi]
  41a241:	mov    al,ds:0xb86e0d0a
  41a246:	add    al,BYTE PTR [eax]
  41a248:	repz fs mov ebp,0x88796ae7
  41a24f:	add    bl,dh
  41a251:	out    dx,eax
  41a252:	sti    
  41a253:	mov    ch,0xb4
  41a255:	out    dx,al
  41a256:	sti    
  41a257:	mov    ch,0xa4
  41a259:	in     eax,dx
  41a25a:	inc    ecx
  41a25b:	fucomip st,st(3)
  41a25d:	hlt    
  41a25e:	add    DWORD PTR ss:[edx],ebp
  41a261:	outs   dx,DWORD PTR ds:[esi]
  41a262:	retf   
  41a263:	push   ebx
  41a264:	lahf   
  41a265:	test   BYTE PTR [esi+0x56],dh
  41a268:	out    dx,eax
  41a269:	fs mov ebp,0x10ca6813
  41a26f:	xchg   edi,ecx
  41a271:	fidiv  WORD PTR [edi+0x56]
  41a274:	mul    DWORD PTR [ebp+ecx*4-0x15]
  41a278:	push   0xffffffb3
  41a27a:	icebp  
  41a27b:	add    ebp,DWORD PTR [eax+0x6]
  41a27e:	mov    ch,0xf3
  41a280:	sbb    edx,DWORD PTR [edx+0x13]
  41a283:	jns    0x41a285
  41a285:	add    BYTE PTR [eax],al
  41a287:	cmp    eax,0xe48f6213
  41a28c:	mov    cs,edx
  41a28e:	jns    0x41a2a8
  41a290:	and    DWORD PTR [ebx],eax
  41a292:	or     eax,0x78f07bce
  41a297:	xor    BYTE PTR [ebx],dl
  41a299:	pusha  
  41a29a:	xchg   BYTE PTR [edi+0x7],bl
  41a29d:	out    0x3,eax
  41a29f:	add    al,bh
  41a2a1:	iret   
  41a2a2:	test   esi,esi
  41a2a4:	push   es
  41a2a5:	out    0x78,eax
  41a2a7:	xor    BYTE PTR [ebx],ch
  41a2a9:	daa    
  41a2aa:	mov    ah,0x9f
  41a2ac:	jp     0x41a2b5
  41a2ae:	std    
  41a2af:	pop    esi
  41a2b0:	or     dh,al
  41a2b2:	xchg   esi,eax
  41a2b3:	call   0x63b517c7
  41a2b8:	bound  esp,QWORD PTR [edi]
  41a2ba:	add    al,0x7e
  41a2bc:	jp     0x41a28d
  41a2be:	add    BYTE PTR [esi-0x36959a7],bl
  41a2c4:	mov    esi,DWORD PTR [ecx-0x69ed1ff4]
  41a2ca:	xchg   esi,eax
  41a2cb:	hlt    
  41a2cc:	out    dx,al
  41a2cd:	cmp    DWORD PTR [edi],ebp
  41a2cf:	push   esi
  41a2d0:	add    BYTE PTR [ebx+eax*2-0x2],ch
  41a2d4:	mov    DWORD PTR [ecx],ebx
  41a2d6:	add    eax,0x128006f3
  41a2db:	dec    ebx
  41a2dc:	add    BYTE PTR [esi-0x38],ch
  41a2df:	cdq    
  41a2e0:	push   cs
  41a2e1:	fsub   st(3),st
  41a2e3:	in     eax,0x50
  41a2e5:	mov    bl,0x96
  41a2e7:	push   esi
  41a2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ea:	stos   DWORD PTR es:[edi],eax
  41a2eb:	add    BYTE PTR [eax],al
  41a2ed:	add    BYTE PTR [eax+0x6b856210],ah
  41a2f3:	pop    es
  41a2f4:	out    0x3,eax
  41a2f6:	repnz dec eax
  41a2f8:	iret   
  41a2f9:	retf   0xeb1
  41a2fc:	add    BYTE PTR [ebp-0x26bd7275],bh
  41a302:	jns    0x41a28c
  41a304:	jg     0x41a2ef
  41a306:	lock push es
  41a308:	mov    DWORD PTR [eax+ebp*8+0x5b994588],esp
  41a30f:	inc    esp
  41a310:	or     al,0x60
  41a312:	outs   dx,BYTE PTR ds:[esi]
  41a313:	mov    ds:0x8df0e8ff,al
  41a318:	inc    edx
  41a319:	std    
  41a31a:	loopne 0x41a2fa
  41a31c:	sbb    BYTE PTR [ecx],ch
  41a31e:	aad    0x17
  41a320:	cld    
  41a321:	out    dx,al
  41a322:	call   0xb79f00ae
  41a327:	call   0x732892f
  41a32c:	xor    DWORD PTR [ecx-0x18041749],ebp
  41a332:	lock push es
  41a334:	or     eax,0xe00b07f
  41a339:	ja     0x41a37b
  41a33b:	add    eax,0xc0532789
  41a340:	(bad)  
  41a342:	jne    0x41a309
  41a344:	add    BYTE PTR [eax-0x1ddfbc12],ch
  41a34a:	scas   eax,DWORD PTR es:[edi]
  41a34b:	jae    0x41a353
  41a34d:	push   0xffffff92
  41a34f:	sar    edi,cl
  41a351:	add    DWORD PTR [eax],0x125f0000
  41a357:	mov    dh,0x31
  41a359:	hlt    
  41a35a:	adc    DWORD PTR [esi-0x21400cd7],esi
  41a360:	loope  0x41a39f
  41a362:	mov    DWORD PTR [esi-0x7a71fce4],0x6f77d
  41a36c:	jo     0x41a3a0
  41a36e:	iret   
  41a36f:	mov    ch,BYTE PTR [eax+eiz*8-0x108a7a79]
  41a376:	push   es
  41a377:	add    BYTE PTR [eax],al
  41a379:	add    esp,0x7cd830c
  41a37f:	test   DWORD PTR [ebp-0x1e],edi
  41a382:	add    DWORD PTR [ecx-0x20],0x7f1e1289
  41a389:	loope  0x41a40a
  41a38b:	mov    eax,esi
  41a38d:	add    al,0x12
  41a38f:	sti    
  41a390:	mov    DWORD PTR [edi+0x511ce726],edx
  41a396:	cmp    edi,DWORD PTR [ebp+0x1111d8e1]
  41a39c:	jo     0x41a3c0
  41a39e:	(bad)  
  41a39f:	cld    
  41a3a0:	mov    BYTE PTR [edi+0x3fc08126],cl
  41a3a6:	or     DWORD PTR [edx-0x6],ebp
  41a3a9:	ret    
  41a3aa:	xchg   DWORD PTR ds:0x417d9a00,eax
  41a3b0:	loopne 0x41a3fd
  41a3b2:	sub    al,BYTE PTR [edx]
  41a3b4:	push   eax
  41a3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3b6:	cwde   
  41a3b7:	or     bh,bh
  41a3b9:	add    BYTE PTR [eax],al
  41a3bb:	add    bh,cl
  41a3bd:	cs sti 
  41a3bf:	adc    eax,0x3cf88a
  41a3c4:	adc    edi,eax
  41a3c6:	or     al,0x8b
  41a3c8:	xlat   BYTE PTR ds:[ebx]
  41a3c9:	out    0x85,al
  41a3cb:	inc    ebp
  41a3cc:	jle    0x41a44b
  41a3ce:	inc    ecx
  41a3cf:	and    al,ah
  41a3d1:	or     DWORD PTR [edi-0x3c],edi
  41a3d4:	push   esi
  41a3d5:	(bad)  
  41a3d6:	pop    ebp
  41a3d7:	sbb    esp,DWORD PTR [ebp-0x7b]
  41a3da:	loop   0x41a3da
  41a3dc:	(bad)  [eax+0x2]
  41a3df:	inc    ecx
  41a3e0:	ret    
  41a3e1:	mov    esi,0xde3fff20
  41a3e6:	or     esi,DWORD PTR [esi-0x6f4cfe76]
  41a3ec:	stos   BYTE PTR es:[edi],al
  41a3ed:	scas   al,BYTE PTR es:[edi]
  41a3ee:	cmp    al,0x0
  41a3f0:	sbb    DWORD PTR [edi+0x54f3571c],esi
  41a3f6:	nop
  41a3f7:	sbb    ebp,DWORD PTR [eax+0x29]
  41a3fa:	or     dh,BYTE PTR [ebx-0x15]
  41a3fd:	popf   
  41a3fe:	or     DWORD PTR [ebx-0x1d],esi
  41a401:	cmp    al,0x90
  41a403:	or     edi,esp
  41a405:	mov    edx,0xbcfe7f8
  41a40a:	or     bh,ch
  41a40c:	jp     0x41a3b8
  41a40e:	in     al,dx
  41a40f:	sub    bl,0xee
  41a412:	stc    
  41a413:	add    DWORD PTR [edi+0x160000ef],0xfffffff7
  41a41a:	add    al,0xfd
  41a41c:	int3   
  41a41d:	hlt    
  41a41e:	jl     0x41a3a7
  41a420:	add    BYTE PTR [eax],al
  41a422:	add    bl,dh
  41a424:	out    dx,eax
  41a425:	add    BYTE PTR [ebx+0x3b027bb3],al
  41a42b:	aad    0xeb
  41a42d:	push   es
  41a42e:	std    
  41a42f:	es push ecx
  41a431:	jne    0x41a476
  41a433:	ret    
  41a434:	jbe    0x41a3b8
  41a436:	xchg   esp,eax
  41a437:	repz out dx,eax
  41a439:	add    BYTE PTR [ecx-0x1fbf2fd2],cl
  41a43f:	icebp  
  41a440:	pop    ds
  41a441:	pop    es
  41a442:	jae    0x41a3eb
  41a444:	mov    esp,0xda7c0b91
  41a449:	rcl    BYTE PTR ds:0x437bf033,1
  41a44f:	adc    esi,ebp
  41a451:	dec    esi
  41a452:	dec    eax
  41a453:	repnz in al,dx
  41a455:	dec    esi
  41a456:	push   eax
  41a457:	icebp  
  41a458:	scas   al,BYTE PTR es:[edi]
  41a459:	and    BYTE PTR [eax],cl
  41a45b:	call   0x7b00a709
  41a460:	sub    ah,ah
  41a462:	mov    ebx,esi
  41a464:	jo     0x41a4a6
  41a466:	or     al,0xff
  41a468:	sbb    esi,edi
  41a46a:	cmp    DWORD PTR [ebx+0x78fd076c],0x6
  41a471:	lods   al,BYTE PTR ds:[esi]
  41a472:	xor    edi,DWORD PTR [edx+0x4b]
  41a475:	cmp    edi,DWORD PTR [ebx+0x75]
  41a478:	xchg   edx,eax
  41a479:	out    0x3,al
  41a47b:	repz mov esp,DWORD PTR [ebx+0x14]
  41a47f:	or     eax,0x2ccd45fd
  41a484:	or     eax,0xb563
  41a489:	add    BYTE PTR [edi],dl
  41a48b:	std    
  41a48c:	xor    eax,0x7f72e009
  41a491:	(bad)
  41a494:	scas   al,BYTE PTR es:[edi]
  41a495:	and    dh,ah
  41a497:	cld    
  41a498:	jno    0x41a451
  41a49a:	mov    eax,0xd5146b8a
  41a49f:	cld    
  41a4a0:	or     eax,0xed73b4cd
  41a4a5:	or     al,ah
  41a4a7:	jb     0x41a4f8
  41a4a9:	lds    edi,FWORD PTR [ecx+edx*4-0x74321055]
  41a4b0:	jecxz  0x41a4b5
  41a4b2:	repz (bad) 
  41a4b4:	sub    esi,DWORD PTR [edx+edi*2]
  41a4b7:	dec    edx
  41a4b8:	mov    ebx,0xe693757a
  41a4bd:	add    esi,ebx
  41a4bf:	mov    DWORD PTR [ebx+0x13],esp
  41a4c2:	(bad)  
  41a4c3:	cld    
  41a4c4:	(bad)
  41a4c7:	jae    0x41a4ae
  41a4c9:	or     al,ah
  41a4cb:	jb     0x41a54c
  41a4cd:	les    esi,FWORD PTR [ecx+edi*1-0x59]
  41a4d1:	ret    
  41a4d2:	push   ebp
  41a4d3:	adc    BYTE PTR [esi+0x23906608],cl
  41a4d9:	loopne 0x41a546
  41a4db:	push   edx
  41a4dc:	sti    
  41a4dd:	ret    
  41a4de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4df:	sti    
  41a4e0:	adc    esp,esp
  41a4e2:	dec    edi
  41a4e3:	jb     0x41a4c8
  41a4e5:	or     al,al
  41a4e7:	out    dx,al
  41a4e8:	(bad)  
  41a4e9:	mov    edi,0x75fffc1e
  41a4ee:	add    BYTE PTR [eax],al
  41a4f0:	add    BYTE PTR [edi+0x72601047],dh
  41a4f6:	xchg   edi,edi
  41a4f8:	call   0xf18432ed
  41a4fd:	cdq    
  41a4fe:	pop    esp
  41a4ff:	je     0x41a561
  41a501:	xor    ch,BYTE PTR [ecx+ebp*8+0x1f]
  41a505:	pop    DWORD PTR [edi-0x8]
  41a508:	add    BYTE PTR [eax+ebx*1+0xd],al
  41a50c:	ins    BYTE PTR es:[edi],dx
  41a50d:	(bad)  
  41a50e:	in     al,0xfc
  41a510:	ss jmp 0x41a58a
  41a513:	sbb    BYTE PTR [edx-0x63],ah
  41a516:	idiv   esp
  41a518:	pushf  
  41a519:	add    BYTE PTR [esi-0x10e08d3b],cl
  41a51f:	mov    bl,0x33
  41a521:	jmp    0x41a51c
  41a523:	sub    BYTE PTR [ecx],0xcb
  41a526:	xchg   DWORD PTR [ecx+ebp*8-0x63fef910],edi
  41a52d:	in     al,dx
  41a52e:	stc    
  41a52f:	inc    edx
  41a530:	fucomp st(3)
  41a532:	ja     0x41a558
  41a534:	xor    eax,0xfffffff9
  41a537:	jb     0x41a53e
  41a539:	sub    dl,dl
  41a53b:	cld    
  41a53c:	push   esp
  41a53d:	(bad)  
  41a53e:	mov    cs,eax
  41a540:	aas    
  41a541:	in     al,dx
  41a542:	ja     0x41a554
  41a544:	into   
  41a545:	bound  ecx,QWORD PTR [edi]
  41a547:	std    
  41a548:	cmp    al,0x87
  41a54a:	jecxz  0x41a537
  41a54c:	mov    ds:0xa982f9f4,eax
  41a551:	arpl   WORD PTR [ebp+0xc2e6],si
  41a557:	add    bl,dh
  41a559:	push   es
  41a55a:	add    BYTE PTR [eax-0x66],dh
  41a55d:	inc    DWORD PTR [esi-0x37c19cd4]
  41a563:	adc    al,0x9d
  41a565:	cli    
  41a566:	jb     0x41a559
  41a568:	leave  
  41a569:	push   edi
  41a56a:	hlt    
  41a56b:	add    BYTE PTR [ebp-0x6b],ch
  41a56e:	in     al,dx
  41a56f:	mov    edx,DWORD PTR [edi+edi*2+0x30e9e8c7]
  41a576:	sti    
  41a577:	call   DWORD PTR [edi+0x19107442]
  41a57d:	scas   al,BYTE PTR es:[edi]
  41a57e:	lock call DWORD PTR [edi-0x15]
  41a582:	xchg   DWORD PTR [ebp+0x16],eax
  41a585:	rol    BYTE PTR [ecx-0x8],1
  41a588:	ds and esp,edi
  41a58b:	pop    ds
  41a58c:	xor    DWORD PTR [eax+edi*2+0x1496c385],0x6e935c3b
  41a597:	adc    esp,ecx
  41a599:	scas   eax,DWORD PTR es:[edi]
  41a59a:	add    al,0x76
  41a59c:	(bad)  
  41a59e:	mov    esp,0x58b96340
  41a5a3:	cmp    edx,DWORD PTR [edx]
  41a5a5:	repnz mov esi,DWORD PTR [eax-0xb]
  41a5a9:	add    ebx,edi
  41a5ab:	cmp    ecx,DWORD PTR [edi-0x797df4fe]
  41a5b1:	sbb    al,0xfb
  41a5b3:	call   DWORD PTR [ecx-0x38]
  41a5b6:	and    BYTE PTR [eax+0x13],al
  41a5b9:	enter  0xff20,0x0
  41a5bd:	add    BYTE PTR [eax],al
  41a5bf:	inc    edi
  41a5c0:	out    0x87,eax
  41a5c2:	xlat   BYTE PTR ds:[ebx]
  41a5c3:	inc    eax
  41a5c4:	add    edi,ebx
  41a5c6:	jne    0x41a566
  41a5c8:	jge    0x41a591
  41a5ca:	jmp    DWORD PTR [edi]
  41a5cc:	jmp    0x41a620
  41a5ce:	inc    edi
  41a5d0:	repnz sti 
  41a5d2:	jne    0x41a562
  41a5d4:	add    DWORD PTR [ecx+0x8],esi
  41a5d7:	mov    dl,0x9c
  41a5d9:	(bad)  
  41a5da:	call   FWORD PTR [ebp-0x28f04079]
  41a5e0:	fwait
  41a5e1:	add    BYTE PTR [eax],al
  41a5e3:	dec    edx
  41a5e4:	fstp   QWORD PTR [ecx-0xc]
  41a5e7:	repz aam 0xa7
  41a5ea:	sti    
  41a5eb:	sar    BYTE PTR [ebp-0x7eb105e5],0x5
  41a5f2:	mov    DWORD PTR [ebp-0x1b388005],ebp
  41a5f8:	imul   edx,DWORD PTR [esi],0xffffffe3
  41a5fb:	sub    al,0x69
  41a5fd:	retf   0x975d
  41a600:	lock jle 0x41a5e9
  41a603:	push   ss
  41a604:	pop    ecx
  41a605:	push   es
  41a606:	cmp    DWORD PTR [esi+0x2e85f5e7],esi
  41a60c:	inc    ebx
  41a60d:	push   es
  41a60e:	std    
  41a60f:	shr    BYTE PTR [edi],0xc1
  41a612:	xchg   BYTE PTR [ebp+0xac7c99b],dh
  41a618:	xor    ebx,DWORD PTR [ebx]
  41a61a:	std    
  41a61b:	in     al,dx
  41a61c:	fs shl bh,0x2a
  41a620:	stos   DWORD PTR es:[edi],eax
  41a621:	in     al,dx
  41a622:	or     al,0x0
  41a624:	add    BYTE PTR [eax],al
  41a626:	outs   dx,BYTE PTR ds:[esi]
  41a627:	and    esp,DWORD PTR [eax]
  41a629:	std    
  41a62a:	aam    0xd4
  41a62c:	mov    ds:0x356cfc6b,al
  41a631:	out    0xc4,al
  41a633:	add    dh,dh
  41a635:	mov    ch,0xf0
  41a637:	je     0x41a672
  41a639:	xor    DWORD PTR [ecx+0x3105246c],esp
  41a63f:	sbb    eax,0xdc36891f
  41a644:	inc    eax
  41a645:	call   0x8421c3a
  41a64a:	xor    BYTE PTR [esp+esi*1+0xd],ch
  41a64e:	ja     0x41a6bb
  41a650:	sbb    eax,0xbcc084fd
  41a655:	adc    edi,DWORD PTR [edx+esi*1-0x20]
  41a659:	imul   esi,ebx,0x781b8cb0
  41a65f:	nop
  41a660:	add    dh,BYTE PTR [ebx+0xb]
  41a663:	pop    es
  41a664:	jb     0x41a69f
  41a666:	(bad)  
  41a669:	hlt    
  41a66a:	push   edi
  41a66b:	jae    0x41a650
  41a66d:	add    al,0xc0
  41a66f:	push   cs
  41a670:	jg     0x41a6a4
  41a672:	sbb    al,0xf9
  41a674:	test   DWORD PTR [edi+0x33],edi
  41a677:	jb     0x41a6bf
  41a679:	sbb    esp,DWORD PTR [eax*1+0x5b7403e7]
  41a680:	imul   ecx,ecx,0x2c
  41a683:	jnp    0x41a63c
  41a685:	enter  0x6abe,0xda
  41a689:	fild   DWORD PTR [eax]
  41a68b:	add    BYTE PTR [eax],al
  41a68d:	out    0xb0,eax
  41a68f:	jmp    0x3976e20c
  41a694:	and    DWORD PTR [ecx+eax*1],0x8d1130a9
  41a69b:	stos   DWORD PTR es:[edi],eax
  41a69c:	sysenter 
  41a69e:	out    dx,al
  41a69f:	jmp    0x63509e1d
  41a6a4:	xor    al,0x5f
  41a6a6:	das    
  41a6a7:	stos   BYTE PTR es:[edi],al
  41a6a8:	add    al,0x30
  41a6aa:	adc    esi,DWORD PTR [edx-0x41]
  41a6ad:	add    BYTE PTR [esp+ebp*4],bh
  41a6b0:	or     ecx,DWORD PTR [edi-0x2e]
  41a6b3:	add    edx,ebp
  41a6b5:	jnp    0x41a6f8
  41a6b7:	cmp    DWORD PTR [esi-0x4d],0x73
  41a6bb:	fcmove st,st(0)
  41a6bd:	sbb    DWORD PTR [edi],ecx
  41a6bf:	jge    0x41a6b6
  41a6c1:	jecxz  0x41a690
  41a6c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c4:	jp     0x41a6fb
  41a6c6:	pop    ebx
  41a6c7:	and    al,BYTE PTR [ebx-0x12]
  41a6ca:	xchg   DWORD PTR ds:0x11f8961e,esi
  41a6d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6d1:	mov    BYTE PTR [eax],cl
  41a6d3:	imul   ebp,eax,0x78c5f891
  41a6d9:	xor    BYTE PTR [ebx],ah
  41a6db:	daa    
  41a6dc:	jnp    0x41a70e
  41a6de:	and    eax,DWORD PTR [eax]
  41a6e0:	mov    dh,0x7d
  41a6e2:	and    al,0x89
  41a6e4:	xchg   esi,eax
  41a6e5:	mov    bh,al
  41a6e7:	std    
  41a6e8:	sbb    al,0x4b
  41a6ea:	(bad)
  41a6ee:	adc    BYTE PTR [esi-0x6a],dl
  41a6f1:	add    BYTE PTR [eax],al
  41a6f3:	add    BYTE PTR [ebp+0x8],bh
  41a6f6:	std    
  41a6f7:	adc    al,0x4b
  41a6f9:	sti    
  41a6fa:	jb     0x41a6ed
  41a6fc:	fmul   DWORD PTR [ebx-0x29]
  41a6ff:	jle    0x41a6f0
  41a701:	cmp    DWORD PTR [edi+0x14bade6],0xffffffe9
  41a708:	lock dec ebp
  41a70a:	cmp    esp,eax
  41a70c:	hlt    
  41a70d:	jne    0x41a6e3
  41a70f:	push   eax
  41a710:	shl    edx,cl
  41a712:	cld    
  41a713:	push   esi
  41a714:	mov    eax,DWORD PTR [eax+0x7c]
  41a717:	fs mov al,0x9
  41a71a:	test   BYTE PTR [ecx],ah
  41a71c:	fdiv   st(1),st
  41a71e:	cld    
  41a71f:	add    cl,BYTE PTR [eax+eax*1+0xd]
  41a723:	outs   dx,DWORD PTR ds:[esi]
  41a724:	daa    
  41a725:	jecxz  0x41a723
  41a727:	cs or  ebp,esi
  41a72a:	loop   0x41a752
  41a72c:	test   DWORD PTR [ebp-0x38aa62bb],0xe3376d0c
  41a736:	cld    
  41a737:	push   cs
  41a738:	mov    ebx,0x3ef6085c
  41a73d:	mov    cl,0xe3
  41a73f:	(bad)  
  41a740:	lock jg 0x41a798
  41a743:	xchg   ebp,eax
  41a744:	mov    ebx,0x510e6c5
  41a749:	cli    
  41a74a:	cld    
  41a74b:	jb     0x41a777
  41a74d:	and    eax,DWORD PTR [eax+0x70]
  41a750:	inc    edx
  41a751:	adc    eax,DWORD PTR [edi-0x16a924d4]
  41a757:	inc    BYTE PTR [eax]
  41a759:	add    BYTE PTR [eax],al
  41a75b:	jne    0x41a7a1
  41a75d:	clc    
  41a75e:	add    bl,dh
  41a760:	dec    ebp
  41a761:	adc    al,0xf
  41a763:	pop    es
  41a764:	nop
  41a765:	loopne 0x41a766
  41a767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a768:	aaa    
  41a769:	pop    esi
  41a76a:	ins    BYTE PTR es:[edi],dx
  41a76b:	inc    ebp
  41a76c:	adc    BYTE PTR [edi+0xb0395e5],0xb6
  41a773:	dec    ecx
  41a774:	mov    BYTE PTR [edx+0x30],cl
  41a777:	push   ebp
  41a778:	mov    ebp,0x3a190800
  41a77d:	inc    ecx
  41a77e:	hlt    
  41a77f:	inc    ebp
  41a780:	mov    ?,WORD PTR [edx-0x1c]
  41a783:	mov    ch,0x3
  41a785:	sti    
  41a786:	inc    ebp
  41a787:	dec    esi
  41a788:	add    al,0x71
  41a78a:	and    al,0xf0
  41a78c:	add    bh,bl
  41a78e:	jne    0x41a786
  41a790:	xchg   ebx,edx
  41a792:	(bad)  
  41a793:	aas    
  41a794:	sbb    eax,DWORD PTR [edi+0x71044ccb]
  41a79a:	adc    BYTE PTR [ebp+0x3fff0c7d],dh
  41a7a0:	or     ebp,eax
  41a7a2:	lods   al,BYTE PTR ds:[esi]
  41a7a3:	rol    BYTE PTR [ebx],cl
  41a7a5:	sti    
  41a7a6:	test   DWORD PTR [edx],ebx
  41a7a8:	outs   dx,DWORD PTR ds:[esi]
  41a7a9:	mov    dl,0xe9
  41a7ab:	jno    0x41a7ba
  41a7ad:	add    BYTE PTR [eax],al
  41a7af:	popa   
  41a7b0:	inc    eax
  41a7b1:	and    al,0x40
  41a7b3:	arpl   WORD PTR [eax+0x24],ax
  41a7b6:	push   eax
  41a7b7:	icebp  
  41a7b8:	and    al,BYTE PTR [edi+0x4133e245]
  41a7be:	adc    al,0x0
  41a7c0:	add    BYTE PTR [eax],al
  41a7c2:	lds    edx,FWORD PTR [edi+0x9b5e432]
  41a7c8:	aaa    
  41a7c9:	pop    esi
  41a7ca:	jbe    0x41a7e5
  41a7cc:	jg     0x41a80c
  41a7ce:	out    dx,eax
  41a7cf:	or     ebx,edi
  41a7d1:	(bad)  
  41a7d3:	or     eax,0xeecf393f
  41a7d8:	or     eax,DWORD PTR [ebp-0x318000d]
  41a7de:	test   ch,al
  41a7e0:	inc    edi
  41a7e1:	adc    al,0x7c
  41a7e3:	xor    ebp,DWORD PTR [eax]
  41a7e5:	push   0xfffffff3
  41a7e7:	mov    ah,0x77
  41a7e9:	sbb    al,0x78
  41a7eb:	xchg   ebp,eax
  41a7ec:	add    DWORD PTR [ebx+0xb],esi
  41a7ef:	imul   ecx,esi,0x14135c55
  41a7f5:	std    
  41a7f6:	fsubrp st(3),st
  41a7f8:	add    DWORD PTR [ebx-0x5],esi
  41a7fb:	xchg   DWORD PTR [esi-0x28],edx
  41a7fe:	inc    esp
  41a7ff:	test   DWORD PTR [edi-0x13b93841],eax
  41a805:	push   edx
  41a806:	icebp  
  41a807:	fild   WORD PTR [eax]
  41a809:	mov    DWORD PTR [esi-0x5178bf3d],esi
  41a80f:	retf   
  41a810:	push   eax
  41a811:	jmp    0xf88a20e2
  41a816:	fisubr DWORD PTR [edx+0x407e0d14]
  41a81c:	out    0xfc,al
  41a81e:	add    al,0x19
  41a820:	bound  ebp,QWORD PTR [esp+ebp*8+0x60]
  41a824:	jmp    0x41a90c
  41a829:	hlt    
  41a82a:	xor    al,0x12
  41a82c:	mov    dh,0xf0
  41a82e:	push   0x7df4304f
  41a833:	add    eax,0x47e73008
  41a838:	hlt    
  41a839:	in     al,0x6b
  41a83b:	(bad)  
  41a83c:	loopne 0x41a80a
  41a83e:	sbb    al,0x2
  41a840:	inc    ebx
  41a841:	fild   WORD PTR [eax+edi*2]
  41a844:	and    al,0x49
  41a846:	loopne 0x41a849
  41a848:	jae    0x41a821
  41a84a:	js     0x41a826
  41a84c:	cld    
  41a84d:	fmul   DWORD PTR es:[ebp+0x74e53dc8]
  41a854:	adc    BYTE PTR [esi+eax*1+0x7b96105c],bl
  41a85b:	out    dx,eax
  41a85c:	jmp    0x41a7e3
  41a85e:	fst    st(5)
  41a860:	add    DWORD PTR [eax-0x3a],esi
  41a863:	push   edx
  41a864:	mov    dh,0x95
  41a866:	out    dx,al
  41a867:	out    0x3,eax
  41a869:	repz and DWORD PTR [ebx],0x2b7fb328
  41a870:	sub    bl,al
  41a872:	loope  0x41a872
  41a874:	mov    WORD PTR [ecx-0xb92012],?
  41a87a:	add    eax,0xf553856c
  41a87f:	xchg   ebp,eax
  41a880:	cmp    eax,0x84de62a5
  41a885:	imul   ebp,edx,0xffffff85
  41a888:	add    esi,esp
  41a88a:	mov    esp,0x44e9
  41a88f:	add    ah,ah
  41a891:	dec    ebx
  41a892:	jnp    0x41a8a5
  41a894:	outs   dx,DWORD PTR ds:[esi]
  41a895:	arpl   WORD PTR [edx-0x540ae1ff],cx
  41a89b:	pop    ss
  41a89c:	push   ss
  41a89d:	jnp    0x41a8a2
  41a89f:	outs   dx,BYTE PTR ds:[esi]
  41a8a0:	repz cmc 
  41a8a2:	fistp  DWORD PTR [edi]
  41a8a4:	jp     0x41a883
  41a8a6:	dec    ebp
  41a8a7:	ja     0x41a884
  41a8a9:	xor    DWORD PTR [ecx],0xd77af65a
  41a8af:	add    BYTE PTR [eax+0x3],ah
  41a8b2:	ss ja  0x41a8b0
  41a8b5:	fimul  WORD PTR [ecx+0x6bf4dfd9]
  41a8bb:	les    esp,FWORD PTR [eax-0x52]
  41a8be:	xsha1  (bad)
  41a8bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c0:	int    0xf4
  41a8c2:	out    0x6d,al
  41a8c4:	rcr    esi,0x70
  41a8c7:	add    esi,ebx
  41a8c9:	push   es
  41a8ca:	jb     0x41a913
  41a8cc:	mov    bh,0x7e
  41a8ce:	mov    ds:0x4a7a17,eax
  41a8d3:	int    0x30
  41a8d5:	mov    WORD PTR [edx-0x3b],es
  41a8d8:	inc    eax
  41a8d9:	in     al,dx
  41a8da:	pop    edi
  41a8db:	call   0x24caafd0
  41a8e0:	(bad)  
  41a8e1:	cmp    eax,0x7fe3fd43
  41a8e6:	sbb    cl,dl
  41a8e8:	repz icebp 
  41a8ea:	mov    BYTE PTR [edi],dh
  41a8ec:	add    ebp,DWORD PTR [esi]
  41a8ee:	xlat   BYTE PTR ds:[ebx]
  41a8ef:	out    dx,al
  41a8f0:	ja     0x41a919
  41a8f2:	in     al,0xb6
  41a8f4:	add    BYTE PTR [eax],al
  41a8f6:	add    bl,dh
  41a8f8:	test   DWORD PTR [edx-0x4b],edi
  41a8fb:	in     al,dx
  41a8fc:	ja     0x41a93f
  41a8fe:	jb     0x41a8aa
  41a900:	push   cs
  41a901:	sub    DWORD PTR [ecx-0x1695e63c],0xffffffa0
  41a908:	jg     0x41a95f
  41a90a:	in     eax,dx
  41a90b:	outs   dx,DWORD PTR ds:[esi]
  41a90c:	(bad)  
  41a90d:	out    0x50,eax
  41a90f:	mov    DWORD PTR [esi],0x3306400
  41a915:	cmp    DWORD PTR [ecx+0xe],0xfffffff3
  41a919:	cld    
  41a91a:	adc    ch,0x7d
  41a91d:	inc    ebp
  41a91e:	add    eax,0x4038bec6
  41a923:	mov    edx,DWORD PTR [edx]
  41a925:	mov    ah,dl
  41a927:	mov    BYTE PTR [esp+ebp*1-0x2c],0xe5
  41a92c:	test   edi,esi
  41a92e:	call   0x4c143416
  41a933:	repz icebp 
  41a935:	mov    DWORD PTR [edx-0x3b9cf0f],ebp
  41a93b:	add    ecx,DWORD PTR [ebx-0xe0cf43a]
  41a941:	mov    BYTE PTR [esp+eax*8+0x6feab602],ch
  41a948:	mov    ah,0xf9
  41a94a:	stos   BYTE PTR es:[edi],al
  41a94b:	ja     0x41a949
  41a94d:	or     al,0x0
  41a94f:	mov    ebp,0xadff6f7e
  41a954:	repz sti 
  41a956:	and    al,0xf
  41a958:	inc    ebx
  41a959:	mov    DWORD PTR [ecx+0x0],eax
  41a95c:	add    BYTE PTR [eax],al
  41a95e:	mov    cl,BYTE PTR [edx-0x7462f50c]
  41a964:	rol    DWORD PTR [eax],cl
  41a966:	call   0xfbe8:0x7a860b07
  41a96d:	dec    DWORD PTR [ecx]
  41a96f:	repz or BYTE PTR [esi-0x66],dh
  41a973:	mov    ah,dh
  41a975:	or     eax,0x85391026
  41a97a:	pop    edx
  41a97b:	pop    es
  41a97c:	add    BYTE PTR [edi],cl
  41a97e:	xlat   BYTE PTR ds:[ebx]
  41a97f:	jg     0x41a95f
  41a981:	dec    DWORD PTR [ebp+0x1439c037]
  41a987:	imul   ecx,DWORD PTR [ebx],0xffffff85
  41a98a:	fsubr  st,st(0)
  41a98c:	sti    
  41a98d:	push   DWORD PTR [ebx-0x4a]
  41a990:	cld    
  41a991:	dec    DWORD PTR [edx+0x30]
  41a994:	pop    esi
  41a995:	ins    BYTE PTR es:[edi],dx
  41a996:	sbb    eax,0x1a009f88
  41a99b:	pop    es
  41a99c:	cmp    BYTE PTR [ebx],0x10
  41a99f:	add    al,0x81
  41a9a1:	call   0x8ea3:0x4300070a
  41a9a8:	cld    
  41a9a9:	call   FWORD PTR [edx]
  41a9ab:	mov    ah,dh
  41a9ad:	or     DWORD PTR ds:0xade2568b,ebx
  41a9b3:	repz jg 0x41a9ae
  41a9b6:	cli    
  41a9b7:	add    DWORD PTR [ecx+edx*2+0x3dfbf238],eax
  41a9be:	push   0xb
  41a9c0:	add    BYTE PTR [eax],al
  41a9c2:	add    BYTE PTR [eax],al
  41a9c4:	add    BYTE PTR [ecx],al
  41a9c6:	jo     0x41aa47
  41a9c8:	clc    
  41a9c9:	ret    
  41a9ca:	jp     0x41aa42
  41a9cc:	xor    ebx,0x17
  41a9cf:	and    al,0x74
  41a9d1:	inc    edx
  41a9d2:	ret    
  41a9d3:	mov    al,ds:0xde0b4ff
  41a9d8:	and    esi,0xfffffffd
  41a9db:	cld    
  41a9dc:	cld    
  41a9dd:	cwde   
  41a9de:	test   BYTE PTR [ecx+0x5e6de9f7],al
  41a9e4:	sbb    DWORD PTR [ebx-0x2979f205],0xc6fcfdbd
  41a9ee:	bound  eax,QWORD PTR [ecx]
  41a9f0:	add    bl,dh
  41a9f2:	les    ecx,FWORD PTR [ebx-0x7f]
  41a9f5:	jnp    0x41a9ed
  41a9f7:	or     eax,0xfdbe0682
  41a9fc:	cld    
  41a9fd:	jo     0x41a9b7
  41a9ff:	pcmpeqd mm6,QWORD PTR [edx+0x54ff87e2]
  41aa06:	loopne 0x41a9f1
  41aa08:	int    0x78
  41aa0a:	and    bh,BYTE PTR [eax]
  41aa0c:	imul   bh
  41aa0e:	out    0x4,eax
  41aa10:	jmp    0x348d0f4b
  41aa15:	cmp    eax,0x180408e4
  41aa1a:	mov    esi,0x71df4d89
  41aa1f:	add    eax,0xb184f208
  41aa24:	mov    BYTE PTR [ebp+0x3f613],ah
  41aa2a:	add    BYTE PTR [eax],al
  41aa2c:	sti    
  41aa2d:	fsubp  st(1),st
  41aa2f:	vmread DWORD PTR [edx-0x180809cc],ebp
  41aa36:	adc    cl,ch
  41aa38:	push   edx
  41aa39:	jne    0x41aa86
  41aa3b:	xor    al,0xe5
  41aa3d:	jmp    0x41aa47
  41aa3f:	adc    ah,dh
  41aa41:	arpl   si,cx
  41aa43:	(bad)  
  41aa45:	and    dh,bh
  41aa47:	inc    edx
  41aa48:	inc    DWORD PTR [esi]
  41aa4a:	es js  0x41aa64
  41aa4d:	pop    ebp
  41aa4e:	out    0xfe,eax
  41aa50:	inc    ecx
  41aa51:	adc    esp,DWORD PTR [edx-0x2a]
  41aa54:	mov    edi,0xab8aef7b
  41aa59:	pop    eax
  41aa5a:	push   es
  41aa5b:	js     0x41aa60
  41aa5d:	bnd jae 0x41aa6f
  41aa60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa61:	jnp    0x41aa42
  41aa63:	jmp    0x41aa56
  41aa65:	fsubr  st,st(5)
  41aa67:	std    
  41aa68:	jno    0x41aa30
  41aa6a:	cmc    
  41aa6b:	xchg   DWORD PTR [ecx],ecx
  41aa6d:	icebp  
  41aa6e:	(bad)  
  41aa70:	fwait
  41aa71:	add    eax,0x5224f941
  41aa76:	sub    eax,0x6c4ac59
  41aa7b:	add    al,0x83
  41aa7d:	rol    BYTE PTR [ebx+0x43],1
  41aa80:	repz mov dl,0x41
  41aa83:	inc    ebx
  41aa84:	xrelease mov DWORD PTR [ecx+0x43],0x4311c0f3
  41aa8c:	repz push es
  41aa8e:	or     al,0x43
  41aa90:	add    BYTE PTR [eax],al
  41aa92:	add    bl,dh
  41aa94:	icebp  
  41aa95:	add    eax,DWORD PTR [ebx-0xd]
  41aa98:	sbb    bh,ch
  41aa9a:	inc    edx
  41aa9b:	repz and DWORD PTR ds:0xd4af343,edx
  41aaa2:	inc    ebx
  41aaa3:	repz pop eax
  41aaa5:	add    eax,0xfd61f343
  41aaaa:	inc    edx
  41aaab:	repz jno 0x41aa82
  41aaae:	inc    edx
  41aaaf:	repz mov edi,0x8bf342cb
  41aab5:	les    eax,FWORD PTR [edx-0xd]
  41aab8:	idiv   DWORD PTR [edx+eax*2+0x42d65cf3]
  41aabf:	repz jecxz 0x41aa8f
  41aac2:	inc    edx
  41aac3:	repz push ds
  41aac5:	add    BYTE PTR [ecx-0x4264f8cf],bh
  41aacb:	xor    DWORD PTR [edi],eax
  41aacd:	lea    edx,[ebp-0x78d8f8cf]
  41aad3:	xor    DWORD PTR [edi],eax
  41aad5:	cmp    eax,DWORD PTR [edx-0x7d2ef8cf]
  41aadb:	xor    DWORD PTR [edi],eax
  41aadd:	xchg   edi,eax
  41aade:	jnp    0x41ab11
  41aae0:	pop    es
  41aae1:	mov    edx,0x2307317b
  41aae6:	jl     0x41ab19
  41aae8:	pop    es
  41aae9:	cmp    edi,DWORD PTR [edx+0x31]
  41aaec:	pop    es
  41aaed:	neg    DWORD PTR [ebx+0x30]
  41aaf0:	pop    es
  41aaf1:	fistp  DWORD PTR [ebx+0x30]
  41aaf4:	pop    es
  41aaf5:	adc    eax,0x5a
  41aafa:	xor    BYTE PTR [edi],al
  41aafc:	and    ebx,DWORD PTR [edx+0x30]
  41aaff:	pop    es
  41ab00:	xor    BYTE PTR [edx],bh
  41ab02:	mov    al,0x6
  41ab04:	repnz cmp esi,DWORD PTR [eax-0x4fc32bfa]
  41ab0b:	push   es
  41ab0c:	jbe    0x41ab42
  41ab0e:	mov    al,0x6
  41ab10:	pop    esi
  41ab11:	sbb    al,0xb0
  41ab13:	push   es
  41ab14:	xchg   esp,eax
  41ab15:	adc    al,0xb0
  41ab17:	push   es
  41ab18:	mov    ds:0xab06b01c,al
  41ab1d:	adc    al,0xb0
  41ab1f:	push   es
  41ab20:	mov    edx,0x4206b1fc
  41ab25:	add    DWORD PTR [eax-0x4e0124fa],esi
  41ab2b:	push   es
  41ab2c:	mov    esp,0x306b1f6
  41ab31:	loope  0x41aae4
  41ab33:	push   es
  41ab34:	adc    al,0xe1
  41ab36:	mov    cl,0x6
  41ab38:	sbb    al,0xd1
  41ab3a:	mov    cl,0x6
  41ab3c:	sub    dl,cl
  41ab3e:	mov    cl,0x6
  41ab40:	mov    al,0x0
  41ab42:	stos   DWORD PTR es:[edi],eax
  41ab43:	inc    esp
  41ab44:	add    BYTE PTR [ebp-0x56],ch
  41ab47:	inc    esp
  41ab48:	add    BYTE PTR [edi],ah
  41ab4a:	dec    esi
  41ab4b:	inc    ebp
  41ab4c:	add    BYTE PTR [ebp-0x53],bh
  41ab4f:	inc    esp
  41ab50:	add    BYTE PTR [edi],dl
  41ab52:	arpl   WORD PTR [eax+eax*1-0x2f],ax
  41ab56:	arpl   WORD PTR [eax+eax*1+0x38],ax
  41ab5a:	ins    BYTE PTR es:[edi],dx
  41ab5b:	inc    esp
  41ab5c:	add    bh,al
  41ab5e:	add    BYTE PTR [eax],al
  41ab60:	add    BYTE PTR [esp+eax*2+0x0],ch
  41ab64:	pop    ebx
  41ab65:	jge    0x41abab
  41ab67:	add    BYTE PTR [edx+eax*4],ch
  41ab6a:	inc    esp
  41ab6b:	add    BYTE PTR [ecx+0x66004525],al
  41ab71:	add    eax,0x3b810045
  41ab76:	dec    edx
  41ab77:	add    BYTE PTR [eax],dh
  41ab79:	and    ecx,DWORD PTR [edx+0x0]
  41ab7c:	jb     0x41abb1
  41ab7e:	dec    edx
  41ab7f:	add    BYTE PTR [edx+0xa],bh
  41ab82:	dec    edx
  41ab83:	add    BYTE PTR [ebx+ebx*8],ch
  41ab86:	dec    ecx
  41ab87:	add    BYTE PTR [ecx-0x25],ch
  41ab8a:	dec    ecx
  41ab8b:	add    BYTE PTR [ebp-0xaffb635],dh
  41ab91:	retf   
  41ab92:	dec    ecx
  41ab93:	add    BYTE PTR [esi],bh
  41ab95:	fmul   DWORD PTR [ecx+0x0]
  41ab98:	jnp    0x41ab72
  41ab9a:	dec    ecx
  41ab9b:	add    bh,ch
  41ab9d:	retf   0x49
  41aba0:	les    esi,FWORD PTR [esi]
  41aba2:	dec    edx
  41aba3:	add    BYTE PTR [edx-0x1],bh
  41aba6:	dec    ecx
  41aba7:	add    BYTE PTR [edi+0x20004a03],dh
  41abad:	xchg   ecx,eax
  41abae:	dec    ecx
  41abaf:	add    BYTE PTR [eax],al
  41abb1:	or     ecx,DWORD PTR [ecx]
  41abb3:	inc    DWORD PTR [ebx]
  41abb5:	push   ds
  41abb6:	push   es
  41abb7:	push   es
  41abb8:	pop    es
  41abb9:	add    al,BYTE PTR [edx]
  41abbb:	or     cl,BYTE PTR [ebx]
  41abbd:	repz jmp 0xd2ebf2c7
  41abc3:	push   es
  41abc4:	or     eax,0x3000000
  41abc9:	iret   
  41abca:	dec    ebx
  41abcb:	adc    al,BYTE PTR [eax]
  41abcd:	aam    0xf
  41abcf:	push   ss
  41abd0:	add    al,0xd8
  41abd2:	sbb    ebx,DWORD PTR [edx]
  41abd4:	stc    
  41abd5:	fstp   DWORD PTR [edx]
  41abd7:	sbb    ch,cl
  41abd9:	or     BYTE PTR ds:0x19ede61c,bl
  41abdf:	and    BYTE PTR [edx],dl
  41abe1:	mov    edi,0xbf121f23
  41abe6:	and    ah,BYTE PTR [edx]
  41abe8:	sar    BYTE PTR [ebx-0x2833d9e1],1
  41abee:	sub    BYTE PTR [eax],ch
  41abf0:	retf   
  41abf1:	(bad)  
  41abf2:	sub    BYTE PTR [edi],ah
  41abf4:	retf   0x2dc9
  41abf7:	sub    al,0xde
  41abf9:	adc    eax,0x373a474b
  41abfe:	dec    ebx
  41abff:	inc    edi
  41ac00:	sub    ah,BYTE PTR [edi]
  41ac02:	sub    DWORD PTR ds:0x3233102a,ebp
  41ac08:	and    ah,ch
  41ac0a:	sub    al,0x34
  41ac0c:	push   ds
  41ac0d:	imul   BYTE PTR [edi]
  41ac0f:	ss and al,0xf8
  41ac12:	cmp    edi,DWORD PTR [edx]
  41ac14:	sbb    bh,dh
  41ac16:	cmp    bh,BYTE PTR [ecx]
  41ac18:	mov    edx,0xba474b36
  41ac1d:	retf   
  41ac1e:	aaa    
  41ac1f:	ds cld 
  41ac21:	pop    ds
  41ac22:	inc    ebx
  41ac23:	inc    edx
  41ac24:	mov    al,0x23
  41ac26:	aas    
  41ac27:	inc    esi
  41ac28:	repz sbb al,0x4c
  41ac2b:	nop
  41ac2c:	add    BYTE PTR [eax],al
  41ac2e:	add    BYTE PTR [edi+0xa],dh
  41ac31:	inc    ebx
  41ac32:	add    BYTE PTR [ebx],ch
  41ac34:	cli    
  41ac35:	inc    ebx
  41ac36:	add    bh,ch
  41ac38:	clc    
  41ac39:	inc    ebx
  41ac3a:	add    BYTE PTR [ebx-0xcbb1dfa],dh
  41ac40:	outs   dx,DWORD PTR ds:[esi]
  41ac41:	loop   0x41ac87
  41ac43:	repz pushf 
  41ac45:	rol    DWORD PTR [ebx+esi*8-0x6a],1
  41ac49:	into   
  41ac4a:	inc    esp
  41ac4b:	repz add al,0xc0
  41ac4e:	inc    esp
  41ac4f:	repz add al,0xc0
  41ac52:	inc    esp
  41ac53:	xrelease xchg DWORD PTR [edi+0x44],ebx
  41ac57:	xrelease xchg DWORD PTR [edi+0x44],ebx
  41ac5b:	repz adc BYTE PTR [eax-0x5f950cbc],ah
  41ac62:	inc    esp
  41ac63:	repz ret 0x448f
  41ac67:	repz add dl,BYTE PTR [ecx-0x7ec10cbc]
  41ac6e:	inc    esp
  41ac6f:	repz cld 
  41ac71:	jl     0x41acb7
  41ac73:	repz inc esi
  41ac75:	jne    0x41acbb
  41ac77:	repz js 0x41ace7
  41ac7a:	inc    esp
  41ac7b:	repz mov ds:0xd4f34364,al
  41ac81:	pop    esp
  41ac82:	inc    ebx
  41ac83:	repz (bad) 
  41ac85:	push   ebp
  41ac86:	inc    ebx
  41ac87:	repz std 
  41ac89:	dec    edx
  41ac8a:	inc    ebx
  41ac8b:	repz arpl WORD PTR [ebx+0x43],ax
  41ac8f:	repz arpl WORD PTR [ebx],di
  41ac92:	inc    ebx
  41ac93:	add    BYTE PTR [eax],al
  41ac95:	add    bl,dh
  41ac97:	xchg   DWORD PTR [edi+0x43],ebx
  41ac9a:	xrelease xchg DWORD PTR [edi+0x43],ebx
  41ac9e:	repz retf 
  41aca0:	and    al,BYTE PTR [ebx-0xd]
  41aca3:	push   eax
  41aca4:	sbb    al,0x43
  41aca6:	repz test DWORD PTR [ebx],edx
  41aca9:	inc    ebx
  41acaa:	repz mov esp,0x3f3430b
  41acb0:	add    eax,0x70b1f343
  41acb5:	inc    ebx
  41acb6:	repz ret 0x62ff
  41acba:	mov    al,0x6
  41acbc:	retf   
  41acbd:	arpl   WORD PTR [eax-0x4f8c29fa],si
  41acc3:	push   es
  41acc4:	fnsave [ebx-0x50]
  41acc7:	push   es
  41acc8:	call   0xf3485d30
  41accd:	arpl   WORD PTR [eax],si
  41accf:	pop    es
  41acd0:	repz jae 0x41ad03
  41acd3:	pop    es
  41acd4:	repz jae 0x41ad07
  41acd7:	pop    es
  41acd8:	jg     0x41ad3a
  41acda:	xor    BYTE PTR [edi],al
  41acdc:	jg     0x41ad3e
  41acde:	xor    BYTE PTR [edi],al
  41ace0:	adc    esi,DWORD PTR [ebx+0x30]
  41ace3:	pop    es
  41ace4:	pop    edi
  41ace5:	jae    0x41ad17
  41ace7:	pop    es
  41ace8:	jp     0x41ad4d
  41acea:	xor    BYTE PTR [edi],al
  41acec:	(bad)  
  41aced:	arpl   WORD PTR [eax],si
  41acef:	pop    es
  41acf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf1:	jae    0x41ad23
  41acf3:	pop    es
  41acf4:	push   ebx
  41acf5:	jb     0x41ac82
  41acf7:	ins    DWORD PTR es:[edi],dx
  41acf8:	in     al,dx
  41acf9:	mov    ebp,0xf1000000
  41acfe:	push   es
  41acff:	add    BYTE PTR [edx+0x34],ch
  41ad02:	repz cld 
  41ad04:	push   0x2d
  41ad06:	idiv   esp
  41ad08:	push   0x35
  41ad0a:	mov    ebx,0x51663afc
  41ad0f:	or     BYTE PTR [edi],dh
  41ad11:	fst    DWORD PTR es:[edx+esi*2+0x68]
  41ad16:	add    DWORD PTR [eax-0x42],0x60e05969
  41ad1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad1e:	mov    esi,0x852b1486
  41ad23:	pop    edx
  41ad24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad25:	jns    0x41ad80
  41ad27:	call   0x8918aa9c
  41ad2c:	sahf   
  41ad2d:	div    eax
  41ad2f:	or     al,0x65
  41ad31:	or     al,0x2
  41ad33:	add    BYTE PTR [eax],al
  41ad35:	sbb    ch,BYTE PTR [ebx]
  41ad37:	fimul  DWORD PTR [edi]
  41ad39:	xchg   esi,eax
  41ad3a:	adc    eax,DWORD PTR [ebx]
  41ad3c:	add    BYTE PTR [edx],cl
  41ad3e:	xor    DWORD PTR [ecx+0x10],edx
  41ad41:	pop    es
  41ad42:	add    DWORD PTR ds:0x8aff0655,esi
  41ad48:	push   cs
  41ad49:	adc    eax,0x37390008
  41ad4e:	cld    
  41ad4f:	js     0x41ad58
  41ad51:	mov    al,0xf8
  41ad53:	in     eax,0x4
  41ad55:	aad    0x7
  41ad57:	add    BYTE PTR [edi],cl
  41ad59:	gs inc edi
  41ad5b:	sbb    BYTE PTR [ebx],al
  41ad5d:	add    eax,0x508181
  41ad62:	add    BYTE PTR [eax],al
  41ad64:	sbb    eax,0x250ffbef
  41ad69:	inc    edi
  41ad6a:	sbb    al,0x89
  41ad6c:	push   edi
  41ad6d:	inc    eax
  41ad6e:	sti    
  41ad6f:	(bad)  
  41ad70:	(bad)  
  41ad72:	mov    dl,0x47
  41ad74:	mov    al,ds:0xed4c8180
  41ad79:	out    dx,al
  41ad7a:	sti    
  41ad7b:	mov    eax,0xb414a
  41ad80:	adc    ebp,DWORD PTR [ebp+0x29]
  41ad83:	call   FWORD PTR [ebp-0x157a7a0d]
  41ad89:	repz sti 
  41ad8b:	inc    DWORD PTR [ecx]
  41ad8d:	sub    al,0x20
  41ad8f:	mov    DWORD PTR [edi+0x424585c2],esi
  41ad95:	das    
  41ad96:	ret    0x5575
  41ad99:	lods   al,BYTE PTR ds:[esi]
  41ad9a:	inc    ecx
  41ad9b:	clc    
  41ad9c:	push   edx
  41ad9d:	popa   
  41ad9e:	inc    eax
  41ad9f:	add    bl,cl
  41ada1:	xor    eax,DWORD PTR [ecx+0x52]
  41ada4:	sbb    DWORD PTR [ebx+0x74],edx
  41ada7:	es mov edi,0x5dfec885
  41adad:	repz dec esp
  41adaf:	push   0xfffffff3
  41adb1:	fld    QWORD PTR [edi-0xb84d47e]
  41adb7:	cld    
  41adb8:	ret    
  41adb9:	js     0x41ad78
  41adbb:	out    0xfd,eax
  41adbd:	mov    bl,0x3
  41adbf:	add    BYTE PTR [eax+0x6d],ch
  41adc2:	jg     0x41adb9
  41adc4:	xchg   ah,ah
  41adc6:	data16 cld 
  41adc8:	add    BYTE PTR [eax],al
  41adca:	add    BYTE PTR [edx],bl
  41adcc:	jo     0x41adcc
  41adce:	(bad)  
  41adcf:	cld    
  41add0:	psrld  mm1,QWORD PTR [eax-0x38761a53]
  41add7:	mov    dl,0x48
  41add9:	adc    bh,BYTE PTR [edi-0x207e2326]
  41addf:	repnz pop esp
  41ade1:	jecxz  0x41ade1
  41ade3:	imul   ebx,DWORD PTR [ebx-0x5d7bf334],0x16
  41adea:	xchg   DWORD PTR [esi],esi
  41adec:	dec    eax
  41aded:	add    eax,0xc3dc2db5
  41adf2:	out    0xf0,al
  41adf4:	pop    esp
  41adf5:	jecxz  0x41adf5
  41adf7:	jnp    0x41ae44
  41adf9:	and    ch,bh
  41adfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adfc:	add    DWORD PTR ds:0x5cc2db5,eax
  41ae02:	lods   eax,DWORD PTR ds:[esi]
  41ae03:	stos   DWORD PTR es:[edi],eax
  41ae04:	loope  0x41adb3
  41ae06:	inc    ebp
  41ae07:	jmp    0x41ae6f
  41ae09:	push   edi
  41ae0a:	nop
  41ae0b:	lock inc edx
  41ae0d:	or     BYTE PTR [ecx],al
  41ae0f:	lods   al,BYTE PTR ds:[esi]
  41ae10:	ffree  st(3)
  41ae12:	xchg   BYTE PTR [esi],ch
  41ae14:	mov    WORD PTR fs:[edx-0x5d],ss
  41ae18:	addr16 pop eax
  41ae1a:	xchg   esp,eax
  41ae1b:	js     0x41ae37
  41ae1d:	or     al,0xbf
  41ae1f:	dec    ebx
  41ae20:	jecxz  0x41ae53
  41ae22:	(bad)  
  41ae23:	mov    dl,0xfc
  41ae25:	ret    0x7686
  41ae28:	cmp    ch,dh
  41ae2a:	cld    
  41ae2b:	inc    esp
  41ae2c:	pop    es
  41ae2d:	jb     0x41ae6c
  41ae2f:	add    BYTE PTR [eax],al
  41ae31:	add    bl,ch
  41ae33:	(bad)  
  41ae34:	mov    cs,WORD PTR [edx]
  41ae36:	adc    cl,al
  41ae38:	pop    edi
  41ae39:	inc    eax
  41ae3a:	pop    ss
  41ae3b:	and    BYTE PTR [ebx+0x67],0x26
  41ae3f:	jmp    0xeba7:0xfeb68a85
  41ae46:	stc    
  41ae47:	and    eax,0x73718ca8
  41ae4c:	outs   dx,BYTE PTR ds:[esi]
  41ae4d:	test   BYTE PTR [edi],0x7e
  41ae50:	lods   al,BYTE PTR ds:[esi]
  41ae51:	or     edi,DWORD PTR [edi+ebx*8]
  41ae54:	jmp    DWORD PTR [edx]
  41ae56:	xor    al,0x80
  41ae58:	imul   esi,DWORD PTR [ebx-0x12],0xffffffe9
  41ae5c:	dec    ebp
  41ae5d:	mov    dh,BYTE PTR [ecx]
  41ae5f:	out    dx,eax
  41ae60:	outs   dx,DWORD PTR ds:[esi]
  41ae61:	add    BYTE PTR [edx+ebp*8+0x3d],0xf6
  41ae66:	icebp  
  41ae67:	inc    esi
  41ae68:	jmp    0xc65f:0x537ff303
  41ae6f:	jmp    0x5ea33a99
  41ae74:	push   ds
  41ae75:	div    BYTE PTR [edi-0x51888481]
  41ae7b:	jmp    0x87833a8d
  41ae80:	outs   dx,DWORD PTR ds:[esi]
  41ae81:	push   eax
  41ae82:	push   edi
  41ae83:	jg     0x41ae18
  41ae85:	jg     0x41aef4
  41ae87:	push   ebx
  41ae88:	sub    ecx,DWORD PTR [ecx+eiz*1+0x28805fab]
  41ae8f:	jmp    0x8aef:0x406bf5e5
  41ae96:	add    BYTE PTR [eax],al
  41ae98:	add    BYTE PTR [ecx],bl
  41ae9a:	sti    
  41ae9b:	jg     0x41aea1
  41ae9d:	repz xchg bh,ah
  41aea0:	outs   dx,DWORD PTR ds:[esi]
  41aea1:	stc    
  41aea2:	(bad)  
  41aea3:	into   
  41aea4:	or     eax,0x3f6fc812
  41aea9:	imul   ebx,ebp,0xffffffff
  41aeac:	jmp    0x62ca032a
  41aeb1:	add    eax,0xf0e922ff
  41aeb6:	jbe    0x41aeb8
  41aeb8:	adc    esi,ecx
  41aeba:	dec    ebx
  41aebb:	je     0x41aecc
  41aebd:	in     al,0x6
  41aebf:	add    cl,bh
  41aec1:	lock jb 0x41af15
  41aec4:	(bad)  
  41aec5:	lock push es
  41aec7:	and    cl,ch
  41aec9:	test   BYTE PTR [ebx+0x3b],al
  41aecc:	jmp    0xf541e5c1
  41aed1:	cmc    
  41aed2:	sub    eax,0x6b0e900
  41aed7:	je     0x41ae8c
  41aed9:	mov    ebp,0xf0b90006
  41aede:	jb     0x41af19
  41aee0:	ret    
  41aee1:	fabs   
  41aee3:	sub    esp,0xfffffff0
  41aee6:	push   es
  41aee7:	mov    eax,0x6edf3
  41aeec:	pusha  
  41aeed:	jl     0x41af17
  41aeef:	std    
  41aef0:	cs mov esi,0xf0e9fd2d
  41aef6:	push   es
  41aef7:	jle    0x41aed4
  41aef9:	imul   eax,eax,0xffffffbe
  41aefc:	adc    BYTE PTR [eax],al
  41aefe:	add    BYTE PTR [eax],al
  41af00:	(bad)  
  41af01:	jg     0x41aebd
  41af03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af04:	lahf   
  41af05:	jmp    0x41af03
  41af07:	jno    0x41af7d
  41af09:	push   esp
  41af0a:	std    
  41af0b:	(bad)  
  41af0c:	lahf   
  41af0d:	add    BYTE PTR [edx-0x3147864],0x2
  41af14:	in     al,0x5c
  41af16:	or     al,BYTE PTR [ecx-0x76]
  41af19:	aad    0x69
  41af1b:	in     al,dx
  41af1c:	mov    esi,ecx
  41af1e:	xchg   BYTE PTR [eax+esi*4+0x5bcefce9],dl
  41af25:	adc    al,0x87
  41af27:	add    bh,ah
  41af29:	inc    ebx
  41af2a:	sti    
  41af2b:	call   DWORD PTR [ebp-0x2876f721]
  41af31:	daa    
  41af32:	sti    
  41af33:	call   DWORD PTR [ebp-0x6aab7e84]
  41af39:	repz sti 
  41af3b:	mov    ecx,DWORD PTR [ebx+edi*8]
  41af3e:	xchg   BYTE PTR [ebp+0x2e],bh
  41af41:	xchg   esp,ebx
  41af43:	pop    es
  41af44:	xchg   ebx,eax
  41af45:	push   0xf375ff1d
  41af4a:	xchg   edi,eax
  41af4c:	xchg   ebx,eax
  41af4d:	pop    ebp
  41af4e:	call   FWORD PTR [eax-0x73]
  41af51:	in     al,dx
  41af52:	or     esi,DWORD PTR [edi-0x5d8eb34]
  41af58:	sub    al,0x69
  41af5a:	mov    ebp,0xc47dd174
  41af5f:	mov    ebx,DWORD PTR ds:0x98ff5e
  41af65:	add    BYTE PTR [eax],al
  41af67:	mov    eax,ds:0x223bf7da
  41af6c:	jo     0x41af97
  41af6e:	lea    esi,[ebx-0x260098fc]
  41af74:	jle    0x41af41
  41af76:	sar    DWORD PTR [ebx],0x6
  41af79:	sti    
  41af7a:	adc    eax,0x3f9b5a
  41af7f:	inc    ecx
  41af80:	int3   
  41af81:	test   DWORD PTR [ebp-0x40d32],ebx
  41af87:	bswap  edi
  41af89:	jno    0x41af92
  41af8b:	sub    ch,0xe5
  41af8e:	loopne 0x41af1e
  41af90:	add    eax,DWORD PTR [eax]
  41af92:	(bad)  
  41af93:	pop    edi
  41af94:	jecxz  0x41af93
  41af96:	call   FWORD PTR [edx+0x10be703]
  41af9c:	adc    BYTE PTR ds:[ecx-0x4d0f1],cl
  41afa3:	repz sar BYTE PTR [edi+edx*8+0x76],1
  41afa8:	loope  0x41afdb
  41afaa:	xchg   edi,eax
  41afab:	leave  
  41afac:	fmul   QWORD PTR [ebx-0xb]
  41afaf:	pop    edx
  41afb0:	pop    esp
  41afb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afb2:	pop    edi
  41afb3:	dec    esp
  41afb4:	mov    al,0xf0
  41afb6:	push   DWORD PTR [ecx+0xa]
  41afb9:	mov    al,ds:0x2c626afc
  41afbe:	std    
  41afbf:	xor    al,0x88
  41afc1:	jp     0x41af45
  41afc3:	out    dx,eax
  41afc4:	nop
  41afc5:	lock cld 
  41afc7:	hlt    
  41afc8:	push   eax
  41afc9:	dec    edx
  41afca:	adc    BYTE PTR [eax],al
  41afcc:	add    BYTE PTR [eax],al
  41afce:	outs   dx,BYTE PTR ds:[esi]
  41afcf:	sbb    DWORD PTR [edx+eax*1],eax
  41afd2:	push   0x22
  41afd4:	loopne 0x41b00e
  41afd6:	mov    dh,0xc9
  41afd8:	outs   dx,BYTE PTR ds:[esi]
  41afd9:	add    DWORD PTR [edx-0x26],edi
  41afdc:	fadd   QWORD PTR [edx-0x76e536e8]
  41afe2:	scas   al,BYTE PTR es:[edi]
  41afe3:	cmp    DWORD PTR [ebx-0x29fe4ed8],ecx
  41afe9:	into   
  41afea:	jmp    0x41af9e
  41afec:	jg     0x41aff9
  41afee:	cwde   
  41afef:	stc    
  41aff0:	ror    DWORD PTR [edx-0x197ac111],cl
  41aff6:	neg    eax
  41aff8:	mov    eax,0xfb70e371
  41affd:	cld    
  41affe:	jo     0x41aff7
  41b000:	pop    es
  41b001:	cmp    DWORD PTR [ebx-0x7177097f],ebp
  41b007:	(bad)  
  41b008:	icebp  
  41b009:	cld    
  41b00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b00b:	jno    0x41b07c
  41b00d:	fdiv   st,st(3)
  41b00f:	bound  esp,QWORD PTR [eax]
  41b011:	imul   BYTE PTR ds:0xd47402f4
  41b017:	in     al,dx
  41b018:	mov    ecx,0xbc68df45
  41b01d:	jle    0x41afb1
  41b01f:	pop    es
  41b020:	out    0x3,al
  41b022:	repz push es
  41b024:	test   al,0xdb
  41b026:	hlt    
  41b027:	mov    esi,eax
  41b029:	add    al,0x6c
  41b02b:	push   esp
  41b02c:	sar    DWORD PTR [ecx+esi*4-0x32],cl
  41b030:	cmp    al,BYTE PTR [ecx]
  41b032:	add    BYTE PTR [eax],al
  41b034:	add    BYTE PTR [edx-0x74],ch
  41b037:	push   ds
  41b038:	repz dec edi
  41b03a:	out    0xe5,al
  41b03c:	mov    ecx,0x48600ef0
  41b041:	inc    edi
  41b042:	(bad)  [eax+eax*1]
  41b045:	out    dx,eax
  41b046:	pop    edx
  41b047:	lds    eax,FWORD PTR [edx]
  41b049:	dec    bp
  41b04b:	std    
  41b04c:	jle    0x41b07a
  41b04e:	enter  0xfb7e,0x9d
  41b052:	out    0x85,eax
  41b054:	add    esi,ebx
  41b056:	push   es
  41b057:	push   0xffffffe3
  41b059:	or     eax,0x7bd02b8f
  41b05e:	dec    esp
  41b05f:	outs   dx,DWORD PTR ds:[esi]
  41b060:	add    al,BYTE PTR [ebp-0x75]
  41b063:	out    dx,al
  41b064:	add    esi,esp
  41b066:	in     eax,0xe6
  41b068:	jl     0x41b0a3
  41b06a:	xlat   BYTE PTR ds:[ebx]
  41b06b:	pop    edi
  41b06c:	dec    eax
  41b06d:	mov    bh,0x91
  41b06f:	mov    ds:0x433b6bff,eax
  41b074:	jl     0x41b0a7
  41b076:	fbld   TBYTE PTR [ebx-0x32]
  41b079:	inc    eax
  41b07a:	jmp    DWORD PTR [ecx+0x48]
  41b07d:	xlat   BYTE PTR ds:[ebx]
  41b07e:	xchg   ebx,eax
  41b07f:	fiadd  DWORD PTR [esi+0x199bffb]
  41b085:	or     dl,dl
  41b087:	scas   eax,DWORD PTR es:[edi]
  41b088:	les    edx,FWORD PTR [ebp-0x537957f8]
  41b08e:	in     eax,0x61
  41b090:	out    dx,al
  41b091:	mov    ds:0xbf7069b1,eax
  41b096:	push   es
  41b097:	jae    0x41b102
  41b099:	add    BYTE PTR [eax],al
  41b09b:	add    BYTE PTR [edx-0x20],bh
  41b09e:	push   DWORD PTR [ecx-0x728f84d5]
  41b0a4:	jne    0x41b046
  41b0a6:	aas    
  41b0a7:	out    0x82,al
  41b0a9:	loop   0x41b0aa
  41b0ab:	push   esp
  41b0ac:	adc    eax,0xe6cd72e4
  41b0b1:	push   eax
  41b0b2:	xchg   esp,eax
  41b0b3:	into   
  41b0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0b5:	and    eax,0x9062c6fd
  41b0ba:	xchg   edx,eax
  41b0bb:	and    eax,0x62fce242
  41b0c0:	cmp    ch,ch
  41b0c2:	cmp    eax,0x8906f745
  41b0c7:	cmp    al,0x43
  41b0c9:	mov    BYTE PTR [edi+0x28efe614],bh
  41b0cf:	bound  ebp,QWORD PTR [edx+edi*2-0x1c549bd8]
  41b0d6:	cld    
  41b0d7:	xchg   dh,al
  41b0d9:	fidiv  WORD PTR [edi+ebx*8-0x72]
  41b0dd:	or     bh,BYTE PTR [edx]
  41b0df:	ins    BYTE PTR es:[edi],dx
  41b0e0:	stos   DWORD PTR es:[edi],eax
  41b0e1:	jecxz  0x41b0df
  41b0e3:	outs   dx,BYTE PTR ds:[esi]
  41b0e4:	test   dl,bh
  41b0e6:	and    BYTE PTR [ebx+ebp*4-0xfa1031d],0x5a
  41b0ee:	packsswb mm7,QWORD PTR [edx]
  41b0f1:	in     al,0x36
  41b0f3:	fs inc esp
  41b0f5:	loop   0x41b0f3
  41b0f7:	inc    esi
  41b0f8:	pop    ebx
  41b0f9:	or     eax,0x7b5c0245
  41b0fe:	jno    0x41b08d
  41b100:	add    BYTE PTR [eax],al
  41b102:	add    BYTE PTR [eax+0x61],cl
  41b105:	or     al,0xfa
  41b107:	mov    al,0x1d
  41b109:	inc    ebx
  41b10a:	sbb    eax,0xa4374843
  41b10f:	push   0xf5023658
  41b114:	adc    DWORD PTR [esi+0x57911feb],esi
  41b11a:	add    ch,ch
  41b11c:	aad    0xfb
  41b11e:	pinsrw mm1,WORD PTR [esi],0x8
  41b122:	cmp    edx,DWORD PTR [edi-0x24]
  41b125:	or     eax,DWORD PTR [esi+ebx*8-0x37fffff6]
  41b12c:	pop    edi
  41b12d:	push   edx
  41b12e:	cld    
  41b12f:	adc    DWORD PTR [esp+ecx*1],edi
  41b132:	jb     0x41b16f
  41b134:	sar    DWORD PTR [edx+0xb084a00],0xb6
  41b13b:	dec    eax
  41b13c:	xor    eax,DWORD PTR [ecx-0xc]
  41b13f:	pop    ebp
  41b140:	mov    WORD PTR [esi+0x42085a00],gs
  41b146:	mov    edi,esp
  41b148:	(bad)  
  41b149:	aaa    
  41b14a:	push   ebp
  41b14b:	ds pop edx
  41b14d:	out    0xe9,eax
  41b14f:	mov    dh,0x7
  41b151:	add    BYTE PTR [eax],al
  41b153:	inc    ebx
  41b154:	lea    esp,[eax]
  41b156:	jmp    FWORD PTR [ebp-0x29]
  41b159:	or     eax,DWORD PTR [edx+edx*4+0x31000007]
  41b160:	cmp    eax,0x86940f90
  41b165:	cld    
  41b166:	inc    DWORD PTR [eax]
  41b168:	add    BYTE PTR [eax],al
  41b16a:	or     al,bl
  41b16c:	pop    esi
  41b16d:	or     DWORD PTR [edi+0x48],0xfffffffb
  41b171:	dec    DWORD PTR [ebp+0x8]
  41b174:	je     0x41b19e
  41b176:	add    DWORD PTR [eax+edx*4],edi
  41b179:	jbe    0x41b115
  41b17b:	(bad)  
  41b17c:	jno    0x41b162
  41b17e:	popa   
  41b17f:	dec    ebp
  41b180:	cld    
  41b181:	inc    DWORD PTR [edi-0x696a7689]
  41b187:	(bad)  
  41b188:	sti    
  41b189:	dec    DWORD PTR ds:0xdff3c9d
  41b18f:	xlat   BYTE PTR ds:[ebx]
  41b190:	in     al,0xf0
  41b192:	jns    0x41b19b
  41b194:	add    BYTE PTR [ebx-0x7d135d0d],cl
  41b19a:	mov    bl,0x7a
  41b19c:	sub    cl,ch
  41b19e:	(bad)  
  41b19f:	pop    eax
  41b1a0:	scas   al,BYTE PTR es:[edi]
  41b1a1:	inc    ebx
  41b1a2:	mov    esp,fs
  41b1a4:	in     al,dx
  41b1a5:	mov    BYTE PTR [esi],ch
  41b1a7:	ds add al,0xc5
  41b1aa:	mov    eax,0x691e72fd
  41b1af:	pop    edx
  41b1b0:	pop    eax
  41b1b1:	std    
  41b1b2:	ins    BYTE PTR es:[edi],dx
  41b1b3:	les    edi,FWORD PTR [eax-0x3f]
  41b1b6:	sbb    BYTE PTR [ebp-0x2219f7d5],dh
  41b1bc:	cmp    esp,0x8a1821f2
  41b1c2:	jle    0x41b1be
  41b1c4:	in     al,dx
  41b1c5:	cld    
  41b1c6:	inc    esp
  41b1c7:	aad    0x38
  41b1c9:	inc    eax
  41b1cb:	out    0x3e,al
  41b1cd:	xchg   DWORD PTR [eax],eax
  41b1cf:	add    BYTE PTR [eax],al
  41b1d1:	sahf   
  41b1d2:	test   eax,0xffff5328
  41b1d7:	mov    bh,BYTE PTR [edi-0x57]
  41b1da:	jl     0x41b1da
  41b1dc:	jb     0x41b1b1
  41b1de:	jo     0x41b18f
  41b1e0:	aas    
  41b1e1:	adc    al,0x8c
  41b1e3:	in     al,dx
  41b1e4:	inc    BYTE PTR [eax-0x4c457e2a]
  41b1ea:	pop    esp
  41b1eb:	in     eax,dx
  41b1ec:	cld    
  41b1ed:	icebp  
  41b1ee:	(bad)  
  41b1f0:	cmp    BYTE PTR [esi+0x730771d9],bl
  41b1f6:	es cli 
  41b1f8:	jb     0x41b1e9
  41b1fa:	lods   eax,DWORD PTR ds:[esi]
  41b1fb:	jnp    0x41b24f
  41b1fd:	fbld   TBYTE PTR [ebp+0x6f]
  41b200:	clc    
  41b201:	and    BYTE PTR [edi],dl
  41b203:	jnp    0x41b27f
  41b205:	inc    DWORD PTR [esi]
  41b207:	aas    
  41b208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b209:	ds int 0x2b
  41b20c:	dec    ebx
  41b20d:	ret    
  41b20e:	mov    ah,0x4a
  41b210:	mov    DWORD PTR [edi+eax*1-0x11163e2e],ebp
  41b217:	jmp    0xbaa5a51f
  41b21c:	xor    dh,BYTE PTR [ebx-0x180863e0]
  41b222:	and    DWORD PTR [esi],0x3
  41b225:	mov    cl,0x1e
  41b227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b228:	sar    esi,cl
  41b22a:	dec    edx
  41b22b:	mov    al,0x40
  41b22d:	lahf   
  41b22e:	pop    ebx
  41b22f:	retf   
  41b230:	sub    ch,BYTE PTR [esi+0x746a12]
  41b236:	add    BYTE PTR [eax],al
  41b238:	ins    BYTE PTR es:[edi],dx
  41b239:	loop   0x41b221
  41b23b:	(bad)  
  41b23c:	sahf   
  41b23d:	(bad)  
  41b23f:	sub    ebp,DWORD PTR [eax+0x1a2252d6]
  41b245:	push   esp
  41b246:	mov    bl,0x77
  41b248:	call   0x55b3586a
  41b24d:	out    dx,al
  41b24e:	into   
  41b24f:	sub    dh,BYTE PTR [esi]
  41b251:	adc    ch,BYTE PTR [edx+0x58]
  41b254:	xor    al,0xe2
  41b256:	out    0xfe,al
  41b258:	data16 (bad) 
  41b25b:	sub    edi,DWORD PTR [eax-0x25f9e52a]
  41b261:	leave  
  41b262:	sbb    bl,dh
  41b264:	or     ecx,DWORD PTR [eax]
  41b266:	das    
  41b267:	sub    esi,DWORD PTR [esi]
  41b269:	adc    ch,BYTE PTR [edx+0x30]
  41b26c:	add    al,0xe2
  41b26e:	out    0x7c,al
  41b270:	mov    cl,0xb6
  41b272:	popa   
  41b273:	jo     0x41b26c
  41b275:	lea    edi,[ebx-0x4938dc81]
  41b27b:	push   ebx
  41b27c:	inc    ebx
  41b27d:	loop   0x41b21a
  41b27f:	and    ebx,esi
  41b281:	loope  0x41b2d0
  41b283:	sub    BYTE PTR [ecx+0x2e],0x46
  41b287:	out    dx,al
  41b288:	iret   
  41b289:	aaa    
  41b28a:	rol    DWORD PTR [ecx],1
  41b28c:	and    edi,DWORD PTR [edx]
  41b28e:	add    BYTE PTR [edx+0x7d],ah
  41b291:	mov    BYTE PTR [edx+0x51],bh
  41b294:	aaa    
  41b295:	pop    ebp
  41b296:	mov    al,ds:0xfd297b70
  41b29b:	push   ds
  41b29c:	add    BYTE PTR [eax],al
  41b29e:	add    BYTE PTR [ebp-0x72d8e817],dl
  41b2a4:	loop   0x41b2d6
  41b2a6:	and    BYTE PTR [ecx],bl
  41b2a8:	mov    edx,0x5574b436
  41b2ad:	or     eax,eax
  41b2af:	xor    ebp,edi
  41b2b1:	jb     0x41b2a2
  41b2b3:	stc    
  41b2b4:	inc    esp
  41b2b5:	mov    al,ds:0x7eef2b60
  41b2ba:	loop   0x41b2b5
  41b2bc:	loop   0x41b2ba
  41b2be:	fisub  WORD PTR [esi-0x7b]
  41b2c1:	in     al,dx
  41b2c2:	jmp    0xd2c0b9b7
  41b2c7:	jmp    0xb803:0xcbc6fce2
  41b2ce:	fst    QWORD PTR [edx+eiz*8-0x4]
  41b2d2:	repnz sub BYTE PTR [ebp+0x52],dl
  41b2d6:	fidiv  WORD PTR [esi-0xf170041]
  41b2dc:	popa   
  41b2dd:	stc    
  41b2de:	call   DWORD PTR [edx+eiz*8]
  41b2e1:	cld    
  41b2e2:	pop    ss
  41b2e3:	pop    ds
  41b2e4:	push   ds
  41b2e5:	xlat   BYTE PTR ds:[ebx]
  41b2e6:	fisubr WORD PTR [ebp-0x31]
  41b2e9:	(bad)  
  41b2ea:	call   0x7dbc42df
  41b2ef:	scas   al,BYTE PTR es:[edi]
  41b2f0:	pop    ss
  41b2f1:	fnstenv [eax+0x73baad]
  41b2f7:	jp     0x41b33d
  41b2f9:	cld    
  41b2fa:	and    BYTE PTR [eax+eiz*1-0x3],bh
  41b2fe:	pop    esi
  41b2ff:	(bad)  
  41b300:	push   esp
  41b301:	xor    BYTE PTR [edx],dl
  41b303:	add    BYTE PTR [eax],al
  41b305:	add    BYTE PTR [ebx+edi*2],dh
  41b308:	jo     0x41b2ba
  41b30a:	(bad)  
  41b30b:	push   ebp
  41b30c:	in     al,0x0
  41b30e:	inc    ecx
  41b30f:	and    BYTE PTR [edi+edi*8-0x4b4c1],dl
  41b316:	add    eax,0x5449260
  41b31b:	repnz sti 
  41b31d:	call   0x4216f5
  41b322:	bswap  ebx
  41b324:	or     eax,DWORD PTR [ebp+0xb25]
  41b32a:	icebp  
  41b32b:	xor    dh,BYTE PTR ds:0xbb5f127d
  41b331:	mov    eax,DWORD PTR [edi]
  41b333:	mov    edi,fs
  41b335:	mov    esi,0x2b942011
  41b33a:	pop    ss
  41b33b:	dec    edi
  41b33c:	sti    
  41b33d:	call   DWORD PTR [ebp+0x2f]
  41b340:	mov    ebp,0x8a5cfb77
  41b345:	push   esp
  41b346:	inc    ebp
  41b347:	repz sti 
  41b349:	cmp    BYTE PTR [edx+0x59],dl
  41b34c:	adc    eax,DWORD PTR [ebx-0x4b789]
  41b352:	test   DWORD PTR ds:0x88d07374,eax
  41b358:	push   ecx
  41b359:	inc    DWORD PTR [ebp+0x564d87f3]
  41b35f:	sub    al,0x3d
  41b361:	add    esi,edi
  41b363:	test   DWORD PTR [di-0x7a],edi
  41b367:	sub    eax,0xd859
  41b36c:	add    bh,bh
  41b36e:	dec    edi
  41b36f:	aaa    
  41b370:	jge    0x41b3e4
  41b372:	pop    ebx
  41b373:	pop    eax
  41b374:	add    BYTE PTR ds:0x357509f3,0x2f
  41b37b:	jns    0x41b375
  41b37d:	stc    
  41b37e:	std    
  41b37f:	jg     0x41b3c0
  41b381:	loopne 0x41b3db
  41b383:	and    esi,esi
  41b385:	mov    edi,ds
  41b387:	sbb    al,0x75
  41b389:	repz fdivr DWORD PTR [edi-0x46]
  41b38d:	xor    edx,DWORD PTR [ecx-0x14]
  41b390:	cld    
  41b391:	repnz mov eax,ds:0xad86810e
  41b397:	jmp    0x41b395
  41b399:	mov    esp,0x700774eb
  41b39e:	jb     0x41b3e5
  41b3a0:	std    
  41b3a1:	lods   al,BYTE PTR ds:[esi]
  41b3a2:	sub    bh,bh
  41b3a4:	jb     0x41b395
  41b3a6:	test   al,0x79
  41b3a8:	jp     0x41b349
  41b3aa:	into   
  41b3ab:	dec    ebp
  41b3ac:	les    ebp,FWORD PTR [eax+0x72]
  41b3af:	xor    eax,0xda088cfd
  41b3b4:	rol    BYTE PTR [edi-0x67cf1720],cl
  41b3ba:	add    al,0x12
  41b3bc:	xor    DWORD PTR [eax+0x2844eb9c],ebx
  41b3c2:	leave  
  41b3c3:	outs   dx,DWORD PTR ds:[esi]
  41b3c4:	pop    eax
  41b3c5:	jb     0x41b3ab
  41b3c7:	or     bh,ah
  41b3c9:	pop    esp
  41b3ca:	mov    eax,0x5270506f
  41b3cf:	in     al,0xff
  41b3d1:	add    BYTE PTR [eax],al
  41b3d3:	add    al,al
  41b3d5:	fnstcw WORD PTR [ebp-0x76]
  41b3d8:	jmp    DWORD PTR [eax-0x3dc30318]
  41b3de:	ins    BYTE PTR es:[edi],dx
  41b3df:	test   al,0xb0
  41b3e1:	in     eax,dx
  41b3e2:	pop    edx
  41b3e3:	hlt    
  41b3e4:	retf   
  41b3e5:	jb     0x41b3b4
  41b3e7:	jae    0x41b3e1
  41b3e9:	in     al,0xc8
  41b3eb:	jae    0x41b3e1
  41b3ed:	(bad)
  41b3f1:	in     eax,dx
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	js     0x41b410
  41b3f6:	fadd   QWORD PTR [edx-0x7edf26c6]
  41b3fc:	jle    0x41b3bf
  41b3fe:	add    ecx,DWORD PTR ds:0x43565
  41b404:	repz push es
  41b406:	adc    bh,BYTE PTR [ecx]
  41b408:	sti    
  41b409:	xchg   ecx,eax
  41b40a:	mov    bl,0x13
  41b40c:	je     0x41b41f
  41b40e:	bound  edi,QWORD PTR [ecx]
  41b410:	(bad)  [edx]
  41b412:	pushf  
  41b413:	sti    
  41b414:	jne    0x41b467
  41b416:	jmp    0x41b3f4
  41b418:	jb     0x41b421
  41b41a:	out    0x3,eax
  41b41c:	jb     0x41b3ed
  41b41e:	xor    eax,0xb39239df
  41b423:	pmulhuw mm1,QWORD PTR [ebx+0x7]
  41b427:	jo     0x41b40e
  41b429:	mov    DWORD PTR [eax+eax*1],ebx
  41b42c:	pop    ds
  41b42d:	sub    DWORD PTR [eax+eax*1+0x60],esp
  41b431:	fisttp WORD PTR ds:0x72378feb
  41b437:	add    DWORD PTR [eax],0xddc00000
  41b43d:	std    
  41b43e:	jmp    0x446a:0x53dec773
  41b445:	xlat   BYTE PTR ds:[ebx]
  41b446:	xchg   BYTE PTR [edi+ecx*1+0x1701eb37],ch
  41b44d:	cmc    
  41b44e:	inc    ebx
  41b44f:	xrelease mov DWORD PTR [edx+0x7f541df7],ebp
  41b456:	imul   esi,ebp,0x4663838f
  41b45c:	fidivr WORD PTR [ebp-0x49ec9682]
  41b462:	jmp    0x4a5b:0x6fd3de37
  41b469:	out    0x86,eax
  41b46b:	imul   esp,DWORD PTR [edi-0x62],0x1b071fea
  41b472:	add    dl,ah
  41b474:	mov    BYTE PTR [ecx+0x4f447bfb],0x8c
  41b47b:	fcmovne st,st(0)
  41b47d:	xchg   edi,eax
  41b47e:	jmp    0x41b4f3
  41b480:	(bad)  
  41b482:	jmp    0xf4cd:0xa931028b
  41b489:	mov    BYTE PTR [eax+edi*2+0x5d79532e],bh
  41b490:	push   ecx
  41b491:	adc    BYTE PTR [eax-0x1],ah
  41b494:	(bad)  
  41b495:	push   edx
  41b496:	ins    DWORD PTR es:[edi],dx
  41b497:	in     eax,dx
  41b498:	cmp    DWORD PTR [eax-0x16fce090],edx
  41b49e:	jmp    0x57dd:0x1e000000
  41b4a5:	xchg   esi,eax
  41b4a6:	sub    al,BYTE PTR [eax-0x39]
  41b4a9:	sub    eax,DWORD PTR [eax]
  41b4ab:	pop    es
  41b4ac:	push   ebx
  41b4ad:	jb     0x41b46b
  41b4af:	dec    esp
  41b4b0:	push   ecx
  41b4b1:	mov    bh,0x1d
  41b4b3:	pop    ecx
  41b4b4:	or     BYTE PTR [esi-0x4880777],bh
  41b4ba:	xor    BYTE PTR [edi],al
  41b4bc:	xchg   DWORD PTR [esp+ecx*4-0x216c2a3],ebp
  41b4c3:	retf   
  41b4c4:	jae    0x41b483
  41b4c6:	idiv   bl
  41b4c8:	adc    DWORD PTR [edx],0xffffffdc
  41b4cb:	sub    ch,BYTE PTR [ecx]
  41b4cd:	fsubrp st(6),st
  41b4cf:	mov    dl,0x83
  41b4d1:	ret    0xf3e3
  41b4d4:	mov    ebx,esi
  41b4d6:	aam    0xbe
  41b4d8:	jae    0x41b4e3
  41b4da:	dec    edx
  41b4db:	fwait
  41b4dc:	add    ebx,edi
  41b4de:	dec    ebx
  41b4df:	fcom   DWORD PTR [edx]
  41b4e2:	ss pop eax
  41b4e4:	push   es
  41b4e5:	sub    eax,DWORD PTR [edi]
  41b4e7:	add    edx,DWORD PTR [esi]
  41b4e9:	xor    al,0x48
  41b4eb:	pop    ebp
  41b4ec:	cmp    ch,cl
  41b4ee:	xchg   esp,eax
  41b4ef:	adc    BYTE PTR [edi],bh
  41b4f1:	jae    0x41b4db
  41b4f3:	inc    esp
  41b4f4:	test   BYTE PTR [edx-0x5fcf4b7c],dh
  41b4fa:	mov    esp,es
  41b4fc:	jae    0x41b4fe
  41b4fe:	xor    DWORD PTR [edx+0x42],ebx
  41b501:	cld    
  41b502:	(bad)  
  41b503:	push   ss
  41b504:	std    
  41b505:	jg     0x41b507
  41b507:	add    BYTE PTR [eax],al
  41b509:	cmp    al,0x24
  41b50b:	jno    0x41b4c3
  41b50d:	mov    eax,ds:0xd4740815
  41b512:	mov    BYTE PTR [ebp-0x1],dh
  41b515:	hlt    
  41b516:	imul   esp,DWORD PTR [edi-0x2f64973],0xffffffb1
  41b51d:	hlt    
  41b51e:	pop    ecx
  41b51f:	ret    
  41b520:	call   0x3cc986
  41b525:	push   edi
  41b526:	ret    
  41b527:	jno    0x41b532
  41b529:	push   esp
  41b52a:	out    dx,eax
  41b52b:	adc    DWORD PTR [eax-0x38],edi
  41b52e:	dec    eax
  41b52f:	add    bl,ch
  41b531:	cwde   
  41b532:	sti    
  41b533:	lds    ecx,FWORD PTR [ebx+0x185d44f]
  41b539:	adc    ecx,ecx
  41b53b:	out    0x2,eax
  41b53d:	test   eax,0xc35b5ac8
  41b542:	les    eax,FWORD PTR [eax+eax*1]
  41b545:	addr16 pop ebx
  41b547:	jmp    0x4f70a3cf
  41b54c:	push   edi
  41b54d:	jo     0x41b573
  41b54f:	pop    ebx
  41b550:	push   edi
  41b551:	or     edx,ecx
  41b553:	mov    DWORD PTR [ebp-0x6a],eax
  41b556:	xor    edx,DWORD PTR [eax-0x1]
  41b559:	push   edi
  41b55a:	sub    al,0x16
  41b55c:	inc    eax
  41b55d:	pop    edx
  41b55e:	adc    eax,eax
  41b560:	inc    eax
  41b561:	fstp   DWORD PTR [ebx-0x34e876f8]
  41b567:	test   DWORD PTR [ebp+0x76],eax
  41b56a:	popa   
  41b56b:	inc    edx
  41b56c:	cld    
  41b56d:	add    BYTE PTR [eax],al
  41b56f:	add    bh,cl
  41b571:	sbb    al,0xc4
  41b573:	push   eax
  41b574:	jmp    0x22b7b0aa
  41b579:	popa   
  41b57a:	jp     0x41b540
  41b57c:	repz je 0x41b58c
  41b57f:	pusha  
  41b580:	out    0x2d,al
  41b582:	add    al,0x83
  41b584:	xor    ebx,ebx
  41b586:	push   DWORD PTR [ecx]
  41b588:	xor    esi,DWORD PTR [edi-0x4e]
  41b58b:	push   esp
  41b58d:	in     eax,dx
  41b58e:	pop    edx
  41b58f:	adc    BYTE PTR [ebp-0x7a],al
  41b592:	jle    0x41b59d
  41b594:	in     al,0x64
  41b596:	call   0x3e9a7d0d
  41b59b:	fmul   st,st(3)
  41b59d:	inc    ebx
  41b59e:	ds std 
  41b5a0:	int3   
  41b5a1:	data16 (bad) 
  41b5a3:	cmp    BYTE PTR [eax-0x12171f67],dh
  41b5a9:	pop    eax
  41b5aa:	ds lock jae 0x41b583
  41b5ae:	pop    ss
  41b5af:	jae    0x41b5a9
  41b5b1:	sub    al,0x36
  41b5b3:	hlt    
  41b5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5b5:	stos   BYTE PTR es:[edi],al
  41b5b6:	lock ss repnz outs dx,DWORD PTR ds:[esi]
  41b5bb:	jmp    0x41b625
  41b5bd:	stos   BYTE PTR es:[edi],al
  41b5be:	in     al,0x88
  41b5c0:	ds bnd jne 0x41b63f
  41b5c4:	sti    
  41b5c5:	out    dx,al
  41b5c6:	jne    0x41b60c
  41b5c8:	repnz enter 0x72c3,0xef
  41b5cd:	mov    al,ds:0x5f6e8c0
  41b5d2:	pop    es
  41b5d3:	pop    es
  41b5d4:	add    BYTE PTR [eax],al
  41b5d6:	add    BYTE PTR [esp+eiz*8+0x7a],ah
  41b5da:	inc    ebp
  41b5db:	imul   DWORD PTR [eax]
  41b5dd:	shl    DWORD PTR [edx-0x16],0xb4
  41b5e1:	sub    eax,0xe5e6b0e8
  41b5e6:	cld    
  41b5e7:	pop    eax
  41b5e8:	mov    fs,esp
  41b5ea:	jb     0x41b633
  41b5ec:	sub    eax,0xfd4372e5
  41b5f1:	fld    TBYTE PTR [edi-0x6]
  41b5f4:	lods   al,BYTE PTR ds:[esi]
  41b5f5:	in     al,0xfc
  41b5f7:	sahf   
  41b5f8:	push   es
  41b5f9:	mov    ds:0x7202b67b,eax
  41b5fe:	cmp    DWORD PTR [edi],ebx
  41b600:	fistp  DWORD PTR [ebx]
  41b602:	in     al,dx
  41b603:	jns    0x41b647
  41b605:	fild   WORD PTR [ebx+eiz*4]
  41b608:	out    dx,al
  41b609:	and    ch,bh
  41b60b:	(bad)  
  41b60c:	fidiv  DWORD PTR [ecx+0x3e]
  41b60f:	out    dx,eax
  41b610:	(bad)  
  41b611:	out    0x16,al
  41b613:	jp     0x41b656
  41b615:	jecxz  0x41b692
  41b617:	or     BYTE PTR [edx],al
  41b619:	jb     0x41b65c
  41b61b:	out    0x47,eax
  41b61d:	jo     0x41b65d
  41b61f:	jmp    0x41b681
  41b621:	bound  eax,QWORD PTR [ecx-0x51]
  41b624:	popa   
  41b625:	pusha  
  41b626:	test   DWORD PTR ds:[ebp-0x108c2c55],0x4ee56fe9
  41b631:	mov    ebx,0xdd397b00
  41b636:	(bad)  
  41b638:	shr    BYTE PTR [ebp+esi*8-0xe000000],0xed
  41b640:	loop   0x41b5ff
  41b642:	cs or  eax,ebp
  41b645:	mov    bl,0x8d
  41b647:	cmp    DWORD PTR [edx-0x18fc4d44],esi
  41b64d:	push   eax
  41b64e:	push   0xffffffeb
  41b650:	imul   ebx,eax,0xe69e30e4
  41b656:	loope  0x41b666
  41b658:	pop    esp
  41b659:	jno    0x41b6be
  41b65b:	push   ss
  41b65c:	out    0xdb,al
  41b65e:	dec    esi
  41b65f:	(bad)  
  41b661:	out    0x70,al
  41b663:	(bad)  
  41b664:	pop    edx
  41b665:	ins    DWORD PTR es:[edi],dx
  41b666:	jp     0x41b6ac
  41b668:	sar    DWORD PTR [edx-0x47],cl
  41b66b:	fisubr WORD PTR [edi+edi*8+0x4071da3d]
  41b672:	aas    
  41b673:	(bad)  
  41b674:	jmp    eax
  41b676:	mov    al,0x82
  41b678:	(bad)  
  41b679:	xor    al,0x16
  41b67b:	inc    edx
  41b67c:	cmp    DWORD PTR [ebx+eiz*1],ebp
  41b67f:	push   esi
  41b680:	add    ebp,DWORD PTR [ecx-0x38]
  41b683:	sub    esi,DWORD PTR [ebx-0x64]
  41b686:	jo     0x41b69a
  41b688:	sub    eax,0xc017f115
  41b68d:	ins    BYTE PTR es:[edi],dx
  41b68e:	xor    BYTE PTR [esi+0x3d],dl
  41b691:	imul   ecx,DWORD PTR [eax+0x1ffdfcd9],0xcda18137
  41b69b:	loope  0x41b691
  41b69d:	lods   eax,DWORD PTR ds:[esi]
  41b69e:	aad    0xda
  41b6a0:	mov    BYTE PTR [ecx+0x0],bl
  41b6a3:	add    BYTE PTR [eax],al
  41b6a5:	jae    0x41b67a
  41b6a7:	jae    0x41b6ac
  41b6a9:	das    
  41b6aa:	pop    es
  41b6ab:	add    cl,bh
  41b6ad:	lock ins BYTE PTR es:[edi],dx
  41b6af:	add    bl,dl
  41b6b1:	lock xor ch,bh
  41b6b4:	aam    0x90
  41b6b6:	idiv   BYTE PTR [edi]
  41b6b8:	jmp    0xd9b45030
  41b6bd:	outs   dx,DWORD PTR ss:[esi]
  41b6bf:	out    0x24,eax
  41b6c1:	lock push es
  41b6c3:	xor    DWORD PTR [ecx],0xabe6e18d
  41b6c9:	xchg   ebp,eax
  41b6ca:	fimul  DWORD PTR [eax+0x5cef3611]
  41b6d0:	icebp  
  41b6d1:	xchg   ebp,eax
  41b6d2:	(bad)  
  41b6d4:	je     0x41b656
  41b6d6:	loope  0x41b72c
  41b6d8:	loope  0x41b72f
  41b6da:	(bad)  
  41b6dc:	je     0x41b732
  41b6de:	loope  0x41b72c
  41b6e0:	icebp  
  41b6e1:	push   edi
  41b6e2:	fimul  DWORD PTR [eax-0x38c7515a]
  41b6e8:	stos   DWORD PTR es:[edi],eax
  41b6e9:	repz push es
  41b6eb:	push   esi
  41b6ec:	bound  edi,QWORD PTR [edi]
  41b6ee:	pop    ecx
  41b6ef:	ds add dh,dh
  41b6f2:	imul   edi,ebp,0x2b20ca45
  41b6f8:	jne    0x41b715
  41b6fa:	sbb    edx,DWORD PTR [ebx-0x1]
  41b6fd:	fisub  WORD PTR [esi]
  41b6ff:	or     al,0x56
  41b701:	push   ebp
  41b702:	or     DWORD PTR [ebx+edx*1-0x3f7efd36],ebx
  41b709:	add    BYTE PTR [eax],al
  41b70b:	add    bh,ch
  41b70d:	add    ecx,DWORD PTR [edx-0x42a6cbfc]
  41b713:	je     0x41b733
  41b715:	and    DWORD PTR [eax],esp
  41b717:	je     0x41b733
  41b719:	and    DWORD PTR ds:0x920de72,eax
  41b71f:	jbe    0x41b6f3
  41b721:	and    BYTE PTR [esi],bh
  41b723:	je     0x41b6f3
  41b725:	and    BYTE PTR [ebx],ch
  41b727:	jne    0x41b6f7
  41b729:	xchg   esp,eax
  41b72a:	std    
  41b72b:	jmp    0x718:0x5ec016d8
  41b732:	add    BYTE PTR [ebp+0x41],dl
  41b735:	mov    edi,0x179aec7f
  41b73a:	lds    edx,FWORD PTR [edi-0x57]
  41b73d:	jecxz  0x41b6c4
  41b73f:	dec    ebp
  41b740:	ficomp WORD PTR [edx+0x4a]
  41b743:	(bad)  
  41b744:	and    esp,DWORD PTR [eax-0x10]
  41b747:	mov    DWORD PTR [edi-0x14],eax
  41b74a:	xor    eax,0x82d3924d
  41b74f:	ss fwait
  41b751:	add    al,0x0
  41b753:	push   esi
  41b754:	loope  0x41b75a
  41b756:	das    
  41b757:	leave  
  41b758:	mov    bl,0x11
  41b75a:	hlt    
  41b75b:	je     0x41b7b1
  41b75d:	test   BYTE PTR [eax],bh
  41b75f:	pop    ds
  41b760:	xchg   esp,eax
  41b761:	imul   ecx,DWORD PTR [eax],0xe5d727ff
  41b767:	or     eax,0x8d00044b
  41b76c:	repz stc 
  41b76e:	add    cl,BYTE PTR [edx-0x13000000]
  41b774:	or     DWORD PTR [eax],ebp
  41b776:	or     eax,0x7376
  41b77b:	repz push esp
  41b77d:	ds hlt 
  41b77f:	sub    al,0x2b
  41b781:	lock xor BYTE PTR [ebx],0xb9
  41b785:	jge    0x41b778
  41b787:	repz in eax,dx
  41b789:	add    BYTE PTR [ecx-0xae82a62],cl
  41b78f:	jae    0x41b784
  41b791:	in     eax,0xff
  41b793:	ja     0x41b7b7
  41b795:	add    edi,edi
  41b797:	sbb    BYTE PTR [esi-0x17130281],0x7a
  41b79e:	fpatan 
  41b7a0:	in     eax,dx
  41b7a1:	add    BYTE PTR [eax-0x7d0c66d5],al
  41b7a7:	ret    0xed
  41b7aa:	add    BYTE PTR [ebx+0x6e],cl
  41b7ad:	ins    BYTE PTR es:[edi],dx
  41b7ae:	inc    eax
  41b7af:	repz ret 
  41b7b1:	cli    
  41b7b2:	aas    
  41b7b3:	and    al,0x46
  41b7b5:	daa    
  41b7b6:	std    
  41b7b7:	mov    esp,0xe4bf7d40
  41b7bc:	popa   
  41b7bd:	test   al,0xff
  41b7bf:	lods   al,BYTE PTR ds:[esi]
  41b7c0:	in     eax,dx
  41b7c1:	mov    edx,0xd9eda542
  41b7c6:	mov    cl,0xf3
  41b7c8:	in     eax,dx
  41b7c9:	add    BYTE PTR [edx-0x13],ch
  41b7cc:	cwde   
  41b7cd:	daa    
  41b7ce:	cmc    
  41b7cf:	add    eax,0xfc8058d9
  41b7d4:	lods   eax,DWORD PTR ds:[esi]
  41b7d5:	add    al,ch
  41b7d7:	add    BYTE PTR [eax],al
  41b7d9:	add    bl,bl
  41b7db:	add    ah,ah
  41b7dd:	cld    
  41b7de:	outs   dx,DWORD PTR ds:[esi]
  41b7df:	sub    eax,0xaa35076d
  41b7e4:	loop   0x41b7e4
  41b7e6:	pop    ebx
  41b7e7:	xor    DWORD PTR [ecx],eax
  41b7e9:	add    bl,dh
  41b7eb:	push   es
  41b7ec:	lods   eax,DWORD PTR ds:[esi]
  41b7ed:	dec    ecx
  41b7ee:	push   esi
  41b7ef:	push   es
  41b7f0:	out    dx,al
  41b7f1:	cdq    
  41b7f2:	mov    cl,0xd7
  41b7f4:	in     eax,0x99
  41b7f6:	jl     0x41b866
  41b7f8:	push   esi
  41b7f9:	inc    esp
  41b7fa:	repz sbb edi,DWORD PTR [esi-0xd2821a6]
  41b801:	mov    BYTE PTR [esi+ebp*4+0x417a0429],ch
  41b808:	mov    bh,0x91
  41b80a:	mov    al,0xfe
  41b80c:	out    0xeb,eax
  41b80e:	adc    eax,ebx
  41b810:	popf   
  41b811:	jecxz  0x41b883
  41b813:	(bad)  
  41b814:	sbb    ecx,DWORD PTR [edi]
  41b816:	add    eax,0x79848e41
  41b81b:	xlat   BYTE PTR ds:[ebx]
  41b81c:	repnz push ebp
  41b81e:	and    al,0xeb
  41b820:	sbb    eax,0x764ca513
  41b825:	mov    fs,WORD PTR [ebx+ebx*2-0xa]
  41b829:	inc    ebx
  41b82a:	repz loope 0x41b7dd
  41b82d:	sbb    al,0x28
  41b82f:	fcmovnbe st,st(3)
  41b831:	push   ecx
  41b832:	jae    0x41b888
  41b834:	push   ebp
  41b835:	add    al,0x40
  41b837:	aas    
  41b838:	or     edx,DWORD PTR [ecx]
  41b83a:	inc    edi
  41b83b:	dec    ebx
  41b83c:	add    ecx,DWORD PTR [esi]
  41b83e:	add    BYTE PTR [eax],al
  41b840:	add    BYTE PTR [edi],bh
  41b842:	inc    edi
  41b843:	sti    
  41b844:	or     al,0x27
  41b846:	adc    esi,ebx
  41b848:	sub    DWORD PTR [eax],esp
  41b84a:	and    al,0x62
  41b84c:	dec    ecx
  41b84d:	jmp    0x41b870
  41b84f:	xchg   DWORD PTR cs:[esp+ecx*1+0xc192695],ebx
  41b857:	jg     0x41b7e4
  41b859:	inc    DWORD PTR [esi-0x19]
  41b85c:	nop
  41b85d:	xor    dh,dh
  41b85f:	out    0x33,eax
  41b861:	jbe    0x41b85f
  41b863:	pop    edx
  41b864:	imul   DWORD PTR [edi+eax*1]
  41b867:	add    BYTE PTR [edi+ebp*1+0x59],ch
  41b86b:	or     esp,DWORD PTR [edx-0x56]
  41b86e:	into   
  41b86f:	sub    BYTE PTR [edi+edi*1],0x9
  41b873:	(bad)  
  41b874:	in     eax,0x48
  41b876:	imul   al
  41b878:	loope  0x41b8f0
  41b87a:	or     al,0x89
  41b87c:	sbb    al,0x1f
  41b87e:	mov    es,WORD PTR [ebx]
  41b880:	loopne 0x41b8d3
  41b882:	dec    ecx
  41b883:	clc    
  41b884:	jb     0x41b819
  41b886:	(bad)  
  41b887:	inc    esp
  41b888:	pusha  
  41b889:	xchg   ebx,eax
  41b88a:	(bad)  
  41b88b:	cmp    BYTE PTR [edi+ebp*8],ch
  41b88e:	add    eax,DWORD PTR [edx-0x32ced49]
  41b894:	aas    
  41b895:	jl     0x41b8e0
  41b897:	clc    
  41b898:	ret    0x739
  41b89b:	inc    ebx
  41b89c:	loope  0x41b84f
  41b89e:	int    0xc1
  41b8a0:	in     eax,dx
  41b8a1:	lock cmp al,0x89
  41b8a4:	jns    0x41b8a6
  41b8a6:	add    BYTE PTR [eax],al
  41b8a8:	sub    DWORD PTR [eax],ebx
  41b8aa:	sar    BYTE PTR [edx-0x3abbe32f],0xe0
  41b8b1:	add    al,BYTE PTR [esi+0x6f06e]
  41b8b7:	mov    edx,0xf924417d
  41b8bc:	jbe    0x41b8bf
  41b8be:	or     eax,0x72f59f69
  41b8c3:	out    dx,eax
  41b8c4:	stos   BYTE PTR es:[edi],al
  41b8c5:	or     DWORD PTR [eax],esi
  41b8c7:	adc    bl,BYTE PTR [edx+ebp*2+0x58003080]
  41b8ce:	or     ch,BYTE PTR [ecx-0x41]
  41b8d1:	and    BYTE PTR [esp+ebp*8+0x70],dh
  41b8d5:	fsubr  QWORD PTR ds:0xf7558c94
  41b8db:	test   al,0x1d
  41b8dd:	or     al,BYTE PTR [eax+0x125bdf10]
  41b8e3:	add    bh,bh
  41b8e5:	sbb    ah,BYTE PTR [ecx+0x72fef080]
  41b8eb:	add    eax,0x755bb2da
  41b8f0:	push   edi
  41b8f1:	mov    ebp,esi
  41b8f3:	jp     0x41b8a9
  41b8f5:	icebp  
  41b8f6:	mov    ecx,edx
  41b8f8:	call   0x7ff7:0x3b8000e4
  41b8ff:	cli    
  41b900:	push   ebx
  41b901:	neg    BYTE PTR [ebp+0x7cc32cc3]
  41b907:	jecxz  0x41b91e
  41b909:	mov    DWORD PTR [edi+0x30],edi
  41b90f:	sbb    BYTE PTR [ebx-0x9ec0684],dl
  41b915:	popf   
  41b916:	ret    0xc44c
  41b919:	jl     0x41b8fd
  41b91b:	adc    eax,0x5430be89
  41b920:	(bad)  
  41b921:	das    
  41b922:	and    eax,0x5c849808
  41b927:	cmp    cl,BYTE PTR [eax]
  41b929:	mov    BYTE PTR [edx+ebp*4+0xa],dl
  41b92d:	jg     0x41b8ef
  41b92f:	fsub   st,st(3)
  41b931:	inc    DWORD PTR [edi+0x4042f8be]
  41b937:	adc    DWORD PTR [edi+0x24],esp
  41b93a:	adc    al,0xdd
  41b93c:	mov    dh,BYTE PTR [edi-0x1]
  41b93f:	sbb    eax,0x145f57e6
  41b944:	inc    DWORD PTR ds:0x4ca8c00
  41b94a:	add    BYTE PTR [ecx],ah
  41b94c:	aas    
  41b94d:	and    al,0x8
  41b94f:	mov    cl,0xc8
  41b951:	(bad)  
  41b952:	aas    
  41b953:	test   BYTE PTR [esp+ebx*1],bh
  41b956:	call   0x3cc56c
  41b95b:	add    DWORD PTR [ebx+0x71f3f681],edi
  41b961:	icebp  
  41b962:	cld    
  41b963:	pop    es
  41b964:	retf   0xfd0c
  41b967:	inc    ecx
  41b969:	or     al,0xe8
  41b96b:	sub    ch,dl
  41b96d:	(bad)  
  41b96f:	js     0x41b995
  41b971:	jmp    0x41b974
  41b973:	add    BYTE PTR [eax],al
  41b975:	add    BYTE PTR [eax],ah
  41b977:	push   ds
  41b978:	inc    edx
  41b979:	ret    0xddeb
  41b97c:	xor    eax,0xed615f89
  41b981:	or     esi,DWORD PTR [eax+0x3b]
  41b984:	hlt    
  41b985:	add    eax,ebp
  41b987:	mov    bl,0xdf
  41b989:	jb     0x41b96e
  41b98b:	int3   
  41b98c:	cmc    
  41b98d:	ja     0x41b990
  41b98f:	push   ds
  41b990:	add    al,0x87
  41b992:	scas   al,BYTE PTR es:[edi]
  41b993:	cdq    
  41b994:	jmp    0x41b999
  41b996:	jo     0x41b9e3
  41b998:	loopne 0x41b999
  41b99a:	imul   esp,DWORD PTR [ebx],0xe1be890c
  41b9a0:	xor    edx,DWORD PTR [esi+0x76]
  41b9a3:	mov    dl,0x8
  41b9a5:	mov    DWORD PTR [esi-0xce17c27],ebp
  41b9ab:	pop    eax
  41b9ac:	mov    ecx,0xdbf27a54
  41b9b1:	cmp    BYTE PTR [ebp+0x6e514dd0],ch
  41b9b7:	loop   0x41b991
  41b9b9:	out    0x1f,eax
  41b9bb:	cdq    
  41b9bc:	(bad)  
  41b9be:	js     0x41ba25
  41b9c0:	adc    al,0xd2
  41b9c2:	or     BYTE PTR [eax],bh
  41b9c4:	push   ebp
  41b9c5:	inc    ebx
  41b9c6:	clc    
  41b9c7:	mov    ds:0x6e27308,al
  41b9cc:	xor    eax,0x83a32710
  41b9d1:	jp     0x41b9d6
  41b9d3:	fist   WORD PTR [ebp+eax*2+0x70]
  41b9d7:	mov    ds:0x1f0,al
  41b9dc:	add    BYTE PTR [edi],bl
  41b9de:	pop    es
  41b9df:	test   al,0x1c
  41b9e1:	or     bl,dl
  41b9e3:	xchg   esp,eax
  41b9e4:	std    
  41b9e5:	xchg   DWORD PTR [ecx+0x13],ebx
  41b9e8:	xor    al,0x7e
  41b9ea:	pop    ecx
  41b9eb:	mul    eax
  41b9ed:	loope  0x41ba61
  41b9ef:	fld    DWORD PTR [ebx-0xd]
  41b9f2:	mov    DWORD PTR [esi],esp
  41b9f4:	push   esi
  41b9f5:	in     al,dx
  41b9f6:	jg     0x41b9a3
  41b9f8:	(bad)  
  41b9fa:	adc    ch,dl
  41b9fc:	sbb    eax,0x417251df
  41ba01:	dec    ebx
  41ba02:	bsr    edx,DWORD PTR [edx-0x7e]
  41ba06:	pop    ss
  41ba07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba08:	aas    
  41ba09:	popf   
  41ba0a:	das    
  41ba0b:	mov    al,ds:0x6a06e4c2
  41ba10:	popa   
  41ba11:	add    ecx,DWORD PTR [eax]
  41ba13:	xor    al,0xd5
  41ba15:	jnp    0x41ba60
  41ba17:	scas   eax,DWORD PTR es:[edi]
  41ba18:	mov    ebp,DWORD PTR [ecx+0x6dd401fa]
  41ba1e:	adc    eax,0xa79e792
  41ba23:	dec    BYTE PTR [edx+0x53af0f03]
  41ba29:	pop    ds
  41ba2a:	sbb    ah,0x83
  41ba2d:	std    
  41ba2e:	and    eax,0xd07309fb
  41ba33:	out    dx,eax
  41ba34:	pop    edi
  41ba35:	test   BYTE PTR [esi-0x2a1ee91],0x69
  41ba3c:	(bad)  
  41ba3e:	push   ebp
  41ba3f:	jmp    0x41b9cd
  41ba41:	add    BYTE PTR [eax],al
  41ba43:	add    BYTE PTR [eax+0x7c],al
  41ba46:	push   edx
  41ba47:	inc    edx
  41ba48:	sub    eax,0xd352570e
  41ba4d:	xchg   BYTE PTR [eax+0x2],dl
  41ba50:	inc    ecx
  41ba51:	call   0xfab3:0x7036169
  41ba58:	jae    0x41baae
  41ba5a:	add    cl,bl
  41ba5c:	neg    DWORD PTR [edx+0xc]
  41ba5f:	push   0x12
  41ba61:	test   DWORD PTR [ecx],0x5a7f829c
  41ba67:	and    DWORD PTR [eax],esi
  41ba69:	loopne 0x41ba76
  41ba6b:	bound  esi,QWORD PTR [edx]
  41ba6d:	fisttp DWORD PTR [eax-0x16b8675c]
  41ba73:	jmp    0xfac2:0x72f44579
  41ba7a:	sub    BYTE PTR [edx],ch
  41ba7c:	outs   dx,BYTE PTR ds:[esi]
  41ba7d:	shr    ecx,1
  41ba7f:	into   
  41ba80:	cmp    esi,0x1c
  41ba83:	je     0x41ba91
  41ba85:	or     bh,bh
  41ba87:	jb     0x41ba7a
  41ba89:	adc    ah,BYTE PTR [eax]
  41ba8b:	pop    ebp
  41ba8c:	out    dx,eax
  41ba8d:	adc    al,BYTE PTR [edi]
  41ba8f:	dec    ebp
  41ba90:	in     al,dx
  41ba91:	adc    cl,BYTE PTR [ebx]
  41ba93:	inc    esi
  41ba94:	lock inc edi
  41ba96:	jmp    0x14873469
  41ba9b:	add    ch,BYTE PTR [eax]
  41ba9d:	mov    DWORD PTR [edi],eax
  41ba9f:	bound  esi,QWORD PTR [ecx]
  41baa1:	jmp    0xd36f610b
  41baa6:	push   edx
  41baa7:	jb     0x41baa9
  41baa9:	add    BYTE PTR [eax],al
  41baab:	adc    al,0x41
  41baad:	dec    edi
  41baae:	aas    
  41baaf:	(bad)  
  41bab0:	shl    DWORD PTR [edx-0x7],cl
  41bab3:	adc    eax,0x30db77f5
  41bab8:	pop    es
  41bab9:	mov    esp,esi
  41babb:	clc    
  41babc:	mov    DWORD PTR [edx+0x71],eax
  41babf:	imul   eax,DWORD PTR [esp+ecx*1+0x5c],0x5e3908f4
  41bac7:	and    DWORD PTR [edi+0x51],ecx
  41baca:	jb     0x41ba79
  41bacc:	push   ds
  41bacd:	(bad)  
  41bace:	mov    ecx,0x4e55fd4a
  41bad3:	mov    ebx,0x5a001635
  41bad8:	add    eax,0x8296c47f
  41badd:	inc    ecx
  41bade:	cld    
  41badf:	shufps xmm6,XMMWORD PTR [ecx+0x5],0x13
  41bae4:	addr16 cld 
  41bae6:	jmp    0x41ba81
  41bae8:	mov    al,0x41
  41baea:	cld    
  41baeb:	add    DWORD PTR [edi-0x4],eax
  41baee:	sub    eax,esp
  41baf0:	test   bh,dh
  41baf2:	add    DWORD PTR [esi+0x41],ebx
  41baf5:	jg     0x41baf2
  41baf7:	pop    eax
  41baf8:	add    DWORD PTR cs:[eax+0x4273f6a4],eax
  41baff:	sar    DWORD PTR [esi],1
  41bb01:	clc    
  41bb02:	lea    edx,[edx-0x5326c8f6]
  41bb08:	cmc    
  41bb09:	jg     0x41bb47
  41bb0b:	dec    esp
  41bb0c:	out    dx,eax
  41bb0d:	jo     0x41bb3a
  41bb0f:	add    BYTE PTR [eax],al
  41bb11:	add    dl,bh
  41bb13:	sbb    bl,bh
  41bb15:	jne    0x41bb51
  41bb17:	mov    dl,0x11
  41bb19:	pushf  
  41bb1a:	dec    ecx
  41bb1b:	inc    ebp
  41bb1c:	add    BYTE PTR [ebp+0x2b1c395a],al
  41bb22:	out    0xe6,eax
  41bb24:	push   ebx
  41bb25:	(bad)  
  41bb26:	(bad)  
  41bb28:	push   edx
  41bb29:	dec    DWORD PTR [edi]
  41bb2b:	cmc    
  41bb2c:	adc    eax,0x591c1a40
  41bb31:	or     al,0x91
  41bb33:	xor    DWORD PTR [eax],ecx
  41bb35:	or     DWORD PTR [esi-0xa],0xfffffffe
  41bb39:	jl     0x41bb21
  41bb3b:	(bad)  
  41bb3d:	mov    bl,bh
  41bb3f:	mov    al,0x37
  41bb41:	neg    eax
  41bb43:	jle    0x41bb9c
  41bb45:	mov    ecx,DWORD PTR [edi]
  41bb47:	neg    DWORD PTR [edx+0x5e]
  41bb4a:	add    eax,ebp
  41bb4c:	or     BYTE PTR [eax],al
  41bb4e:	jg     0x41bbcf
  41bb50:	call   0xf48baed8
  41bb55:	push   eax
  41bb56:	sbb    eax,0x78145541
  41bb5b:	rcr    DWORD PTR [eax+0x12],cl
  41bb5e:	xor    ebx,esi
  41bb60:	fcmovnbe st,st(5)
  41bb62:	pushf  
  41bb63:	xchg   ebx,eax
  41bb64:	lock xchg BYTE PTR [esi],ch
  41bb67:	and    bl,bl
  41bb69:	aad    0x78
  41bb6b:	fwait
  41bb6c:	or     al,0x87
  41bb6e:	cs out dx,al
  41bb70:	xchg   BYTE PTR [edx-0x15],al
  41bb73:	push   0x18
  41bb75:	or     BYTE PTR [eax],al
  41bb77:	add    BYTE PTR [eax],al
  41bb79:	push   0x675a8916
  41bb7e:	(bad)
  41bb81:	jo     0x41bbc0
  41bb83:	add    al,0x0
  41bb85:	repz jo 0x41bbb7
  41bb88:	mov    edx,esi
  41bb8a:	fld1   
  41bb8c:	jb     0x41bb48
  41bb8e:	call   0xe5f0426e
  41bb93:	test   DWORD PTR [edi-0x719e14],edi
  41bb99:	xor    al,0xde
  41bb9b:	xchg   DWORD PTR [edx+0x23],edi
  41bb9e:	add    eax,0xf8a875c3
  41bba3:	cs std 
  41bba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bba6:	lods   eax,DWORD PTR ds:[esi]
  41bba7:	fist   DWORD PTR [edx]
  41bba9:	ja     0x41bb58
  41bbab:	inc    eax
  41bbac:	add    BYTE PTR [esi-0x62],dh
  41bbaf:	push   ebp
  41bbb0:	ins    BYTE PTR es:[edi],dx
  41bbb1:	jae    0x41bb65
  41bbb3:	pop    ss
  41bbb4:	cmp    al,BYTE PTR [esi-0x4b57901]
  41bbba:	fadd   st(7),st
  41bbbc:	inc    esp
  41bbbd:	sbb    BYTE PTR [edi+0x55],cl
  41bbc0:	sub    DWORD PTR [eax-0x6],edi
  41bbc3:	fisttp WORD PTR [eax+0x73af62b4]
  41bbc9:	out    dx,eax
  41bbca:	xor    al,BYTE PTR [ebp+0x15]
  41bbcd:	repnz push es
  41bbcf:	and    al,BYTE PTR [edi-0x35]
  41bbd2:	pop    eax
  41bbd3:	in     al,dx
  41bbd4:	xor    ch,BYTE PTR [eax-0x6]
  41bbd7:	out    dx,al
  41bbd8:	mov    BYTE PTR [esi+0x33de],ah
  41bbde:	add    BYTE PTR [eax],al
  41bbe0:	scas   al,BYTE PTR es:[edi]
  41bbe1:	iret   
  41bbe2:	push   ecx
  41bbe3:	mov    cr7,ebp
  41bbe6:	xchg   esp,eax
  41bbe7:	xor    dh,dl
  41bbe9:	ret    
  41bbea:	xchg   esi,eax
  41bbeb:	jmp    0x41bc31
  41bbed:	add    ebp,DWORD PTR [esi]
  41bbef:	fdiv   QWORD PTR [ebx+0x51]
  41bbf2:	and    eax,DWORD PTR [ebx]
  41bbf4:	std    
  41bbf5:	neg    DWORD PTR ds:0xeac87f56
  41bbfb:	cld    
  41bbfc:	aam    0xcf
  41bbfe:	xchg   ebx,eax
  41bbff:	div    DWORD PTR [edi-0x4b03157f]
  41bc05:	ficom  WORD PTR [eax+eax*1+0x5e]
  41bc09:	iret   
  41bc0a:	jmp    0xa3bd136d
  41bc0f:	or     ebx,DWORD PTR [edx]
  41bc11:	xlat   BYTE PTR ds:[ebx]
  41bc12:	jmp    0xdf93d7e9
  41bc17:	pop    es
  41bc18:	inc    edx
  41bc19:	jge    0x41bc76
  41bc1b:	or     dl,dh
  41bc1d:	(bad)  
  41bc1e:	out    0x58,eax
  41bc20:	daa    
  41bc21:	jnp    0x41bc46
  41bc23:	shr    bl,1
  41bc25:	mov    al,0xed
  41bc27:	test   DWORD PTR [edi-0x48244a31],edi
  41bc2d:	jnp    0x41bc52
  41bc2f:	or     BYTE PTR [ebp-0xb394fd5],ch
  41bc35:	push   es
  41bc36:	xor    al,0x8f
  41bc38:	or     BYTE PTR ds:0x196a323a,dh
  41bc3e:	psadbw mm5,QWORD PTR [edi+eax*1]
  41bc42:	push   ds
  41bc43:	fild   DWORD PTR [eax]
  41bc45:	add    BYTE PTR [eax],al
  41bc47:	popa   
  41bc48:	sti    
  41bc49:	jge    0x41bbfd
  41bc4b:	fist   WORD PTR [eax+eax*1-0x1f]
  41bc4f:	gs (bad) 
  41bc51:	cld    
  41bc52:	xchg   edi,eax
  41bc53:	jb     0x41bc20
  41bc55:	jge    0x41bc1e
  41bc57:	jae    0x41bbe7
  41bc59:	jge    0x41bc1e
  41bc5b:	ins    DWORD PTR es:[edi],dx
  41bc5c:	dec    ecx
  41bc5d:	or     BYTE PTR [ebx-0x58502128],bl
  41bc63:	leave  
  41bc64:	retf   
  41bc65:	sub    BYTE PTR [ecx],0x43
  41bc68:	cmp    eax,DWORD PTR [eax-0x67]
  41bc6b:	outs   dx,DWORD PTR ds:[esi]
  41bc6c:	dec    ecx
  41bc6d:	or     BYTE PTR [esi],dh
  41bc6f:	popa   
  41bc70:	test   DWORD PTR [edx+0x2d],eax
  41bc73:	jp     0x41bcbf
  41bc75:	cmp    bl,ch
  41bc77:	jae    0x41bc07
  41bc79:	jae    0x41bc5e
  41bc7b:	mov    BYTE PTR [ecx+0x7f981601],bl
  41bc81:	xlat   BYTE PTR ds:[ebx]
  41bc82:	lods   al,BYTE PTR fs:[esi]
  41bc84:	pop    edx
  41bc85:	sub    eax,0x54fab272
  41bc8a:	cdq    
  41bc8b:	and    eax,0x39ea10df
  41bc90:	retf   
  41bc91:	mov    cl,0xae
  41bc93:	jnp    0x41bcaf
  41bc95:	cmp    ecx,edx
  41bc97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc98:	inc    esp
  41bc99:	std    
  41bc9a:	ficomp WORD PTR [ecx]
  41bc9c:	pop    ecx
  41bc9d:	or     dh,bl
  41bc9f:	js     0x41bc91
  41bca1:	mov    edi,0xc2081005
  41bca6:	jno    0x41bc9a
  41bca8:	jg     0x41bcec
  41bcaa:	mov    ebp,0xb2000000
  41bcaf:	fidivr WORD PTR [esi-0x7734c609]
  41bcb5:	stos   BYTE PTR es:[edi],al
  41bcb6:	sbb    eax,0xfb1cfd00
  41bcbb:	jg     0x41bc81
  41bcbd:	xchg   ecx,eax
  41bcbe:	pop    es
  41bcbf:	or     edi,ebp
  41bcc1:	xchg   esi,eax
  41bcc2:	mov    ecx,0xb6a0592c
  41bcc7:	add    eax,0x7e070000
  41bccc:	call   0xfe1b2b52
  41bcd1:	dec    edx
  41bcd3:	adc    al,0x56
  41bcd5:	push   edi
  41bcd6:	lock or BYTE PTR [edi+0x41c7b2f0],al
  41bcdd:	sti    
  41bcde:	retf   0x40ea
  41bce1:	or     ch,cl
  41bce3:	xchg   DWORD PTR [ebx+0x50099a00],eax
  41bce9:	push   0x40394a
  41bcee:	and    eax,eax
  41bcf0:	in     al,0xa5
  41bcf2:	inc    esi
  41bcf3:	mov    al,0xfb
  41bcf5:	test   edx,ebx
  41bcf7:	ss jbe 0x41bc87
  41bcfa:	push   esp
  41bcfb:	pop    es
  41bcfc:	mov    cl,BYTE PTR [eax]
  41bcfe:	or     ch,BYTE PTR [ebx-0x766f8be4]
  41bd04:	cmc    
  41bd05:	or     DWORD PTR [esi+0x1],edi
  41bd08:	cmp    cl,0x5f
  41bd0b:	xor    bh,bh
  41bd0d:	aas    
  41bd0e:	add    esi,esp
  41bd10:	daa    
  41bd11:	lock add BYTE PTR [eax],al
  41bd14:	add    BYTE PTR [ecx+0x36],cl
  41bd17:	or     BYTE PTR [ebp+0x5056017f],cl
  41bd1d:	mov    edi,0x1dfeec7d
  41bd22:	scas   eax,DWORD PTR es:[edi]
  41bd23:	ret    
  41bd24:	test   DWORD PTR [edx],ebx
  41bd26:	mov    al,0xfb
  41bd28:	call   FWORD PTR [ecx]
  41bd2a:	or     DWORD PTR [eax],eax
  41bd2c:	add    BYTE PTR [edx+0xc],al
  41bd2f:	add    BYTE PTR [bp+si],cl
  41bd32:	jp     0x41bd08
  41bd34:	test   DWORD PTR [ecx+0xb23a36],eax
  41bd3a:	loope  0x41bd15
  41bd3c:	inc    ebp
  41bd3d:	dec    ebp
  41bd3e:	scas   eax,DWORD PTR es:[edi]
  41bd3f:	xchg   eax,edi
  41bd41:	xchg   edi,eax
  41bd42:	scas   eax,DWORD PTR es:[edi]
  41bd43:	jo     0x41bd6c
  41bd45:	repz adc BYTE PTR [edx+0xdeeee6],bl
  41bd4c:	sub    DWORD PTR [eax+0x1f9debec],esi
  41bd52:	dec    ebp
  41bd53:	xlat   BYTE PTR ds:[ebx]
  41bd54:	mov    BYTE PTR [esi],ah
  41bd56:	loop   0x41bd97
  41bd58:	push   ebp
  41bd59:	jp     0x41bd3a
  41bd5b:	cmp    DWORD PTR cs:[ebx-0x72139b],0x2688d72c
  41bd66:	into   
  41bd67:	mov    esi,edi
  41bd69:	mov    dh,0xa3
  41bd6b:	(bad)  
  41bd6d:	inc    ecx
  41bd6e:	ss aad 0xfe
  41bd71:	popf   
  41bd72:	or     eax,0x7598428e
  41bd77:	ss pop ecx
  41bd79:	add    BYTE PTR [eax],al
  41bd7b:	add    BYTE PTR [edx+0x1e000820],bh
  41bd81:	pop    ecx
  41bd82:	call   0x8cd25d7
  41bd87:	add    DWORD PTR [esi],edx
  41bd89:	into   
  41bd8a:	mov    eax,esp
  41bd8c:	js     0x41bd9f
  41bd8e:	in     al,dx
  41bd8f:	sub    eax,0x8400ddf3
  41bd94:	xor    edx,DWORD PTR [ebx-0x3]
  41bd97:	xor    BYTE PTR [ebx],dh
  41bd99:	or     DWORD PTR [ecx],esp
  41bd9b:	push   esi
  41bd9c:	dec    esp
  41bd9d:	push   ebx
  41bd9e:	icebp  
  41bd9f:	mov    ah,bh
  41bda1:	loopne 0x41bdf0
  41bda3:	or     BYTE PTR [ebx+esi*1],bh
  41bda6:	or     BYTE PTR [esi+0x34],dl
  41bda9:	retf   
  41bdaa:	adc    BYTE PTR [esi],dl
  41bdac:	mov    bl,0xdd
  41bdae:	add    ebx,0xfffffff7
  41bdb1:	or     BYTE PTR [edi],dh
  41bdb3:	add    al,0xa5
  41bdb5:	loopne 0x41bd40
  41bdb7:	pop    esp
  41bdb8:	out    dx,eax
  41bdb9:	push   0xfaa85dbf
  41bdbe:	lds    ecx,FWORD PTR [ebx]
  41bdc0:	repz push es
  41bdc2:	cmp    eax,0xe2340c8d
  41bdc7:	xor    ebx,ebp
  41bdc9:	push   esp
  41bdca:	retf   0x3e8c
  41bdcd:	sti    
  41bdce:	pop    ebx
  41bdcf:	inc    edx
  41bdd0:	out    0x81,al
  41bdd2:	test   al,0x4f
  41bdd4:	jmp    0xb16654ac
  41bdd9:	pop    es
  41bdda:	test   al,0x8c
  41bddc:	(bad)  
  41bddd:	fucomip st,st(0)
  41bddf:	mov    WORD PTR [eax],es
  41bde1:	add    BYTE PTR [eax],al
  41bde3:	retf   0x4f33
  41bde6:	repz mov ebp,0x747f5dcc
  41bdec:	push   edx
  41bded:	in     al,dx
  41bdee:	mov    ch,BYTE PTR [esi]
  41bdf0:	call   DWORD PTR [esi+0x2a2d4602]
  41bdf6:	cs push 0xffffffda
  41bdf9:	xchg   edi,eax
  41bdfa:	xor    DWORD PTR [eax+0x41],ebp
  41bdfd:	fbstp  TBYTE PTR [ebx]
  41bdff:	sbb    edi,edi
  41be01:	sub    eax,0x1d17fb4e
  41be06:	fsub   st,st(1)
  41be08:	test   DWORD PTR es:[ebx-0xd],0x284f2681
  41be10:	int3   
  41be11:	xchg   ebx,eax
  41be12:	or     ebx,DWORD PTR [ebx+0x7c]
  41be15:	mov    eax,0xf67ff303
  41be1a:	jge    0x41be7a
  41be1c:	push   edx
  41be1d:	int    0x84
  41be1f:	leave  
  41be20:	cli    
  41be21:	out    0x4f,al
  41be23:	adc    edi,DWORD PTR [edx+0x2b]
  41be26:	fsubr  DWORD PTR [eax+eiz*2-0x53e291d]
  41be2d:	inc    eax
  41be2e:	or     BYTE PTR [esi],ch
  41be30:	push   ecx
  41be31:	(bad)  
  41be33:	add    DWORD PTR [edi],edx
  41be35:	xlat   BYTE PTR ds:[ebx]
  41be36:	inc    ebx
  41be37:	repz and DWORD PTR [esi+0x34eb51],0xfdcbe2c1
  41be42:	scas   al,BYTE PTR es:[edi]
  41be43:	loopne 0x41be19
  41be45:	cld    
  41be46:	sbb    al,0x0
  41be48:	add    BYTE PTR [eax],al
  41be4a:	out    dx,eax
  41be4b:	leave  
  41be4c:	adc    cl,BYTE PTR [ecx+0x1]
  41be4f:	or     eax,DWORD PTR [eax]
  41be51:	bound  ebp,QWORD PTR [ebp-0x85438d4]
  41be57:	push   es
  41be58:	push   ebx
  41be59:	jb     0x41be26
  41be5b:	xchg   ebx,ebp
  41be5d:	fld    QWORD PTR [esi]
  41be5f:	xor    al,0x31
  41be61:	jbe    0x41be7f
  41be63:	pop    ebp
  41be64:	add    al,0x6e
  41be66:	ret    0xf12
  41be69:	test   eax,0x6aef7ff0
  41be6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be6f:	retf   
  41be70:	cmp    BYTE PTR [ecx+0x43],bl
  41be73:	push   ss
  41be74:	mov    esp,DWORD PTR [esp+eax*8+0x322e563a]
  41be7b:	jecxz  0x41be98
  41be7d:	jmp    0xdd3ec572
  41be82:	loopne 0x41be7d
  41be84:	aas    
  41be85:	jmp    0xaccab523
  41be8a:	mov    al,ds:0x23f1430f
  41be8f:	retf   0x6445
  41be92:	mov    dl,0xe2
  41be94:	dec    edi
  41be95:	mov    bh,0x3d
  41be97:	cmc    
  41be98:	xor    ebx,eax
  41be9a:	mov    al,0x6
  41be9c:	sub    DWORD PTR [ecx],0xffffffc2
  41be9f:	ficom  WORD PTR [ebp-0xa]
  41bea2:	inc    ebx
  41bea3:	push   0x11
  41bea5:	test   eax,0x46c47ff0
  41beaa:	add    eax,0xe5c1c2
  41beaf:	add    BYTE PTR [eax],al
  41beb1:	lock xor eax,0xde71c589
  41beb7:	pop    ss
  41beb8:	cmp    bh,BYTE PTR [edx+0x45]
  41bebb:	clc    
  41bebc:	add    dl,bh
  41bebe:	cmc    
  41bebf:	(bad)  
  41bec0:	push   ebx
  41bec1:	shl    BYTE PTR [edx],0xfb
  41bec4:	adc    eax,0x3cd646
  41bec9:	jmp    0x45:0xfa2811b1
  41bed0:	test   DWORD PTR [edx+0x37],ecx
  41bed3:	push   ss
  41bed4:	lea    ebx,[edi]
  41bed6:	stos   DWORD PTR es:[edi],eax
  41bed7:	dec    esp
  41bed8:	push   0xffffffba
  41beda:	pop    edi
  41bedb:	sti    
  41bedc:	(bad)  
  41bedd:	mov    edi,0xca401025
  41bee2:	xchg   BYTE PTR [ebp+esi*2-0x14400822],bh
  41bee9:	out    0x7f,al
  41beeb:	inc    ecx
  41beec:	in     al,dx
  41beed:	jp     0x41be9f
  41beef:	jno    0x41bef9
  41bef1:	or     eax,0x9a01e847
  41bef6:	add    eax,0x46cd5300
  41befb:	hlt    
  41befc:	add    cl,BYTE PTR [edx-0x4000fffb]
  41bf02:	in     eax,dx
  41bf03:	cmovo  ebx,DWORD PTR [edx-0x48b437a]
  41bf0a:	adc    eax,0x4707534f
  41bf0f:	call   0x71f1f864
  41bf14:	clc    
  41bf15:	add    BYTE PTR [eax],al
  41bf17:	add    BYTE PTR ds:0x9a1038d7,al
  41bf1d:	add    eax,0x1dec081
  41bf22:	sti    
  41bf23:	adc    eax,0x3cd252
  41bf28:	ffreep st(5)
  41bf2a:	jno    0x41bf2e
  41bf2c:	or     DWORD PTR [ebx],eax
  41bf2e:	sti    
  41bf2f:	jne    0x41bf83
  41bf31:	mov    bl,0x11
  41bf33:	mov    al,ds:0x8a004538
  41bf38:	repz pushf 
  41bf3a:	ss (bad) 
  41bf3c:	xor    ebx,esp
  41bf3e:	add    BYTE PTR [ebx+0x68],dl
  41bf41:	mov    bl,0x30
  41bf43:	dec    edi
  41bf44:	rcr    BYTE PTR [edx+0x3d],0xf8
  41bf48:	mov    ds:0x46a0c45,eax
  41bf4d:	int3   
  41bf4e:	mov    bh,0xfc
  41bf50:	out    0xbf,al
  41bf52:	lock aas 
  41bf54:	repz (bad) 
  41bf56:	les    ecx,FWORD PTR [edi+esi*2]
  41bf59:	dec    edx
  41bf5a:	add    al,0x0
  41bf5c:	repz adc BYTE PTR [edi+0x40ae233a],al
  41bf63:	add    BYTE PTR [esi+0x23],ah
  41bf66:	fmul   DWORD PTR [edi+0x20]
  41bf69:	in     eax,dx
  41bf6a:	imul   edx,DWORD PTR [edi],0xfcd8d3c4
  41bf70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf71:	pop    ebx
  41bf72:	les    esi,FWORD PTR [edx+0x41]
  41bf75:	sub    ebp,ebp
  41bf77:	pop    ss
  41bf78:	add    bl,BYTE PTR [esi+0x8100]
  41bf7e:	add    BYTE PTR [ebx+0x68654db4],ch
  41bf84:	fwait
  41bf85:	aam    0x38
  41bf87:	mov    al,0x92
  41bf89:	pusha  
  41bf8a:	push   esi
  41bf8b:	fwait
  41bf8c:	sbb    eax,0x6584fdd3
  41bf91:	aam    0x38
  41bf93:	sub    BYTE PTR [edx+0x2f],0x8b
  41bf97:	cs jmp 0x6a2d:0xf1e6fd33
  41bf9f:	or     bh,cl
  41bfa1:	dec    esp
  41bfa2:	clc    
  41bfa3:	pop    esp
  41bfa4:	jmp    0xc4217f25
  41bfa9:	shl    DWORD PTR ds:0x1024ab4c,cl
  41bfaf:	mov    bl,0xdd
  41bfb1:	pop    ss
  41bfb2:	rol    edi,0x6
  41bfb5:	adc    eax,0xaa0e348a
  41bfba:	dec    ebp
  41bfbb:	fcomi  st,st(7)
  41bfbd:	pushf  
  41bfbe:	ret    
  41bfbf:	lods   al,BYTE PTR ds:[esi]
  41bfc0:	ss into 
  41bfc2:	or     eax,0xf40af21e
  41bfc7:	aam    0x6
  41bfc9:	add    al,cl
  41bfcb:	sub    bh,0x61
  41bfce:	add    ecx,eax
  41bfd0:	push   es
  41bfd1:	pop    es
  41bfd2:	add    al,0xf3
  41bfd4:	push   ebx
  41bfd5:	jmp    0x41bf67
  41bfd7:	cmc    
  41bfd8:	fdivr  st(0),st
  41bfda:	push   ss
  41bfdb:	repz push ss
  41bfdd:	out    0x3,eax
  41bfdf:	or     DWORD PTR [esi+eiz*2+0xc0],ebp
  41bfe6:	repz xor BYTE PTR [edi+0x7dc8d776],cl
  41bfed:	xor    eax,0xd46f51ce
  41bff2:	loope  0x41bf9a
  41bff4:	fadd   DWORD PTR [ebx-0xd]
  41bff7:	daa    
  41bff8:	jno    0x41bfba
  41bffa:	sbb    edi,DWORD PTR [esi-0x2585d1d7]
  41c000:	mov    bh,0x80
  41c002:	adc    ebx,ecx
  41c004:	out    0x6b,al
  41c006:	ret    
  41c007:	push   ecx
  41c008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c009:	add    edx,DWORD PTR [esi-0x330ee90f]
  41c00f:	push   es
  41c010:	ins    BYTE PTR es:[edi],dx
  41c011:	ret    
  41c012:	add    BYTE PTR [edi],ah
  41c014:	mov    edi,0xe747077b
  41c019:	xor    esi,DWORD PTR [esi-0xf]
  41c01c:	pop    edx
  41c01d:	icebp  
  41c01e:	sub    al,0x7
  41c020:	ins    BYTE PTR es:[edi],dx
  41c021:	ret    
  41c022:	loopne 0x41c01a
  41c024:	pop    ebx
  41c025:	inc    esi
  41c026:	pop    edi
  41c027:	xor    eax,0xb657d491
  41c02c:	arpl   bx,ax
  41c02e:	rol    DWORD PTR [edx],0x0
  41c031:	mov    ebx,0x6ac0c030
  41c036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c037:	retf   0xf5ff
  41c03a:	mov    ebx,0xeaaac687
  41c03f:	jge    0x41c02c
  41c041:	push   0x13
  41c043:	das    
  41c044:	push   esi
  41c045:	sbb    bl,BYTE PTR [esi+0x16]
  41c048:	test   BYTE PTR [edi+0x0],0x0
  41c04c:	add    BYTE PTR [esi+0x3902fc3c],dl
  41c052:	push   esp
  41c053:	sbb    al,BYTE PTR [ebx-0x45]
  41c056:	jnp    0x41c09a
  41c058:	cmp    DWORD PTR [ecx-0x230302ca],0x75e93ff0
  41c062:	retf   0xae0b
  41c065:	cmp    ch,BYTE PTR [edi+0x43]
  41c068:	jmp    0x2cccc75d
  41c06d:	ja     0x41c000
  41c06f:	dec    edx
  41c070:	jge    0x41c070
  41c072:	cmp    DWORD PTR [eax],ecx
  41c074:	std    
  41c075:	in     eax,dx
  41c076:	(bad)
  41c07a:	pop    ecx
  41c07b:	in     al,dx
  41c07c:	mov    ebx,0xed72c400
  41c081:	jmp    0x560a:0xf0e9002e
  41c088:	mov    bh,0xda
  41c08a:	push   ebp
  41c08b:	push   esi
  41c08c:	inc    esi
  41c08d:	call   0xbf89:0xf0a90eee
  41c094:	mov    ebp,0xd972fde6
  41c099:	and    al,0x17
  41c09b:	push   0xfffffff9
  41c09d:	jae    0x41c0e8
  41c09f:	in     al,dx
  41c0a0:	mov    ecx,0x1103941
  41c0a5:	push   cs
  41c0a6:	(bad)  
  41c0a7:	std    
  41c0a8:	push   cs
  41c0a9:	cmp    al,0x16
  41c0ab:	std    
  41c0ac:	add    bh,dl
  41c0ae:	fld    DWORD PTR [edi+0x35]
  41c0b4:	mov    edx,0x3d003cbc
  41c0b9:	cmp    bl,0x75
  41c0bc:	ds (bad) 
  41c0bf:	mov    eax,DWORD PTR [edi]
  41c0c1:	(bad)  
  41c0c3:	add    cl,BYTE PTR [ecx]
  41c0c5:	retf   
  41c0c6:	pop    edx
  41c0c7:	leave  
  41c0c8:	pop    eax
  41c0c9:	(bad)  
  41c0ca:	cld    
  41c0cb:	push   esp
  41c0cc:	xchg   ecx,eax
  41c0cd:	in     eax,0x52
  41c0cf:	xor    edx,DWORD PTR [edi+eax*4+0x41]
  41c0d3:	or     al,0xf3
  41c0d5:	pop    edi
  41c0d6:	or     al,0x75
  41c0d8:	sub    ecx,ebx
  41c0da:	jno    0x41c0e4
  41c0dc:	mov    dl,0xa2
  41c0de:	jae    0x41c120
  41c0e0:	or     bh,dl
  41c0e2:	out    0xf,eax
  41c0e4:	sbb    edx,ebx
  41c0e6:	sti    
  41c0e7:	adc    DWORD PTR [esi+0x6d14e7c5],0x5e
  41c0ee:	or     al,0xff
  41c0f0:	xlat   BYTE PTR ds:[ebx]
  41c0f1:	shl    DWORD PTR [esp+esi*4-0x3b],0x49
  41c0f6:	add    BYTE PTR [eax+0x72],dl
  41c0f9:	sar    BYTE PTR [esi],cl
  41c0fb:	dec    DWORD PTR [ebp-0x73]
  41c0fe:	rcl    BYTE PTR [eax],0x11
  41c101:	sar    DWORD PTR [edx+0x1b],1
  41c104:	dec    ebp
  41c105:	pop    edi
  41c106:	sbb    BYTE PTR [ebx+0x75fbbd57],cl
  41c10c:	call   0xfb1a:0x420c71d8
  41c113:	dec    ebp
  41c115:	fdiv   DWORD PTR [ecx+0xc]
  41c118:	add    BYTE PTR [eax],al
  41c11a:	add    BYTE PTR [ecx],dl
  41c11c:	(bad)  
  41c11e:	jae    0x41c0ec
  41c120:	xlat   BYTE PTR ds:[ebx]
  41c121:	sti    
  41c122:	mov    eax,esp
  41c124:	neg    DWORD PTR [eax-0x3e]
  41c127:	or     WORD PTR [ecx-0x75],dx
  41c12b:	repz or eax,DWORD PTR [esi+0x157ccbeb]
  41c132:	std    
  41c133:	retf   
  41c134:	repz pop ecx
  41c136:	inc    eax
  41c137:	repz ss push eax
  41c13a:	lock inc esp
  41c13c:	loop   0x41c12a
  41c13e:	push   cs
  41c13f:	mov    bl,0xaf
  41c141:	jnp    0x41c185
  41c143:	aas    
  41c144:	call   0x6ab8ce0f
  41c149:	add    eax,DWORD PTR [eax]
  41c14b:	repz add BYTE PTR [edx],bh
  41c14e:	mov    esi,esp
  41c150:	xchg   ebx,eax
  41c151:	cmc    
  41c152:	aas    
  41c153:	repz push edi
  41c155:	mov    ah,0x74
  41c157:	mov    bl,0xaf
  41c159:	xor    ch,bh
  41c15b:	sbb    eax,0xb374dc47
  41c160:	scas   eax,DWORD PTR es:[edi]
  41c161:	iret   
  41c162:	jb     0x41c163
  41c164:	aaa    
  41c165:	lods   al,BYTE PTR ds:[esi]
  41c166:	cld    
  41c167:	lds    esi,FWORD PTR [edi]
  41c169:	inc    ebp
  41c16a:	in     al,dx
  41c16b:	sub    BYTE PTR [ebp-0x2],bh
  41c16e:	add    DWORD PTR [eax+0x180000ae],0x75
  41c175:	inc    BYTE PTR [ebx+0xae78]
  41c17b:	sbb    al,0x3d
  41c17d:	push   ebp
  41c17e:	or     BYTE PTR [eax],al
  41c180:	add    BYTE PTR [eax],al
  41c182:	outs   dx,BYTE PTR ds:[esi]
  41c183:	jmp    0x41c150
  41c185:	dec    edi
  41c186:	push   0xffffffab
  41c188:	enter  0xc0fc,0x2b
  41c18c:	les    esi,FWORD PTR [edx-0x10]
  41c18f:	es dec ebp
  41c191:	clc    
  41c192:	or     DWORD PTR [edx+0x2e],ebp
  41c195:	xor    DWORD PTR [ebx+0x368766a4],esi
  41c19b:	add    bh,BYTE PTR [ebp+0x42]
  41c19e:	imul   esp,DWORD PTR [ebp-0x461902d0],0xfffffff6
  41c1a5:	aas    
  41c1a6:	repz push es
  41c1a8:	jb     0x41c1e9
  41c1aa:	inc    DWORD PTR [edi+0x3a6c0022]
  41c1b0:	outs   dx,DWORD PTR ds:[esi]
  41c1b1:	jnp    0x41c18c
  41c1b3:	rol    ax,1
  41c1b6:	loope  0x41c1bf
  41c1b8:	je     0x41c1f9
  41c1ba:	dec    edi
  41c1bb:	xchg   edx,eax
  41c1bc:	mov    ds:0xab91b4af,eax
  41c1c1:	imul   ebp,DWORD PTR [edi+ecx*4+0x569fcba3],0xffffffde
  41c1c9:	stos   DWORD PTR es:[edi],eax
  41c1ca:	or     eax,edi
  41c1cc:	add    eax,DWORD PTR [edi+ebp*8]
  41c1cf:	push   es
  41c1d0:	out    0xfe,eax
  41c1d2:	sbb    al,0xc4
  41c1d4:	out    0x7,al
  41c1d6:	ret    
  41c1d7:	pop    ebx
  41c1d8:	push   ds
  41c1d9:	cmp    DWORD PTR [ebx+ebx*2-0x3c04a942],edi
  41c1e0:	fist   DWORD PTR [edi]
  41c1e2:	jecxz  0x41c22a
  41c1e4:	out    0x86,eax
  41c1e6:	add    BYTE PTR [eax],al
  41c1e8:	add    BYTE PTR [ebx+edi*1],dh
  41c1eb:	std    
  41c1ec:	shl    BYTE PTR [ecx-0x59],1
  41c1ef:	jno    0x41c207
  41c1f1:	xchg   ebx,eax
  41c1f2:	sbb    BYTE PTR [edi],ah
  41c1f4:	add    al,0xde
  41c1f6:	fmul   QWORD PTR [ebp-0x633c48aa]
  41c1fc:	jl     0x41c22f
  41c1fe:	stos   DWORD PTR es:[edi],eax
  41c1ff:	outs   dx,DWORD PTR ds:[esi]
  41c200:	inc    esi
  41c201:	ret    
  41c202:	std    
  41c203:	repz retf 
  41c205:	inc    eax
  41c206:	or     eax,0xc3bb566e
  41c20b:	mov    ebx,0x5339afdf
  41c210:	rol    BYTE PTR [ecx],1
  41c212:	arpl   cx,di
  41c214:	inc    ebx
  41c215:	repz fs mov dl,0x7c
  41c219:	xor    DWORD PTR [edi+0xeb2baa5],esi
  41c21f:	out    0x7c,eax
  41c221:	or     eax,DWORD PTR cs:[eax]
  41c224:	sahf   
  41c225:	inc    DWORD PTR [eax]
  41c227:	mov    al,ds:0x830730db
  41c22c:	sub    esp,eax
  41c22e:	add    eax,0x8eab1e50
  41c233:	add    eax,0x137306c
  41c238:	mov    ecx,0xd969da43
  41c23d:	or     ch,BYTE PTR [edi-0x3ddc00b1]
  41c243:	pop    esp
  41c244:	sub    al,BYTE PTR ds:0xad5ceb8e
  41c24a:	push   ss
  41c24b:	push   eax
  41c24c:	push   ebx
  41c24d:	add    BYTE PTR [eax],al
  41c24f:	add    bh,dh
  41c251:	shl    DWORD PTR [edx-0x7],0x35
  41c255:	cmp    BYTE PTR [esi+edx*8],cl
  41c258:	mov    edx,0x25e96a0e
  41c25d:	sbb    BYTE PTR [eax-0x25],dl
  41c260:	mov    al,0x6
  41c262:	sub    DWORD PTR [ecx-0x49afed55],0xfffffffa
  41c269:	mov    ds:0x8def2911,al
  41c26e:	inc    edx
  41c26f:	stc    
  41c270:	leave  
  41c271:	or     BYTE PTR [ecx],dh
  41c273:	test   eax,0xe90bc522
  41c278:	sbb    edx,DWORD PTR [eax+0x32d368eb]
  41c27e:	add    ecx,ebp
  41c280:	lock pop eax
  41c282:	push   ebp
  41c283:	ins    BYTE PTR es:[edi],dx
  41c284:	jp     0x41c244
  41c286:	std    
  41c287:	jbe    0x41c235
  41c289:	push   edx
  41c28a:	std    
  41c28b:	hlt    
  41c28c:	mov    eax,0xa05512c3
  41c291:	add    al,BYTE PTR [eax]
  41c293:	ins    BYTE PTR es:[edi],dx
  41c294:	jp     0x41c254
  41c296:	std    
  41c297:	push   esi
  41c298:	lods   al,BYTE PTR ds:[esi]
  41c299:	push   edx
  41c29a:	push   eax
  41c29b:	ror    DWORD PTR [eax-0x65ffbfc6],0x91
  41c2a2:	push   0x89069a02
  41c2a7:	mov    ch,0x1a
  41c2a9:	xlat   BYTE PTR ds:[ebx]
  41c2aa:	sti    
  41c2ab:	push   DWORD PTR [edx]
  41c2ad:	mov    ah,0x3d
  41c2af:	call   DWORD PTR ds:0xcc086
  41c2b5:	add    BYTE PTR [eax],al
  41c2b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2b8:	hlt    
  41c2b9:	add    al,0x84
  41c2bc:	mov    edx,0xd6da8589
  41c2c1:	sti    
  41c2c2:	jmp    FWORD PTR [edx-0x22]
  41c2c5:	or     al,BYTE PTR [eax]
  41c2c7:	pop    edx
  41c2c8:	push   es
  41c2c9:	test   al,al
  41c2cb:	mov    esi,0xf101b009
  41c2d0:	add    al,0x32
  41c2d2:	shl    BYTE PTR [ebx-0x38],0x0
  41c2d6:	add    bh,bl
  41c2d8:	cmp    eax,0x623681e9
  41c2dd:	add    DWORD PTR [eax],eax
  41c2df:	or     dh,ch
  41c2e1:	push   edx
  41c2e2:	lea    ebx,[edi+0x45fff999]
  41c2e8:	mul    BYTE PTR [edi+0x3c]
  41c2eb:	ret    0x4a
  41c2ee:	call   0x3e8ffa
  41c2f3:	pop    esi
  41c2f4:	(bad)  
  41c2f5:	or     eax,DWORD PTR [ebp+esi*2+0x57000005]
  41c2fc:	(bad)  
  41c2fd:	lods   al,BYTE PTR ds:[esi]
  41c2fe:	cld    
  41c2ff:	ror    BYTE PTR gs:[ebp+ecx*4+0x5f],1
  41c304:	call   0x15fa:0xf645fff9
  41c30b:	jbe    0x41c2c1
  41c30d:	cmp    al,0x0
  41c30f:	pop    ss
  41c310:	(bad)  
  41c311:	lods   al,BYTE PTR ds:[esi]
  41c312:	cld    
  41c313:	adc    eax,0xbfff4cd1
  41c318:	mov    ebp,0x4589
  41c31d:	add    bl,dh
  41c31f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c320:	pop    eax
  41c321:	inc    esp
  41c322:	sbb    esi,DWORD PTR [eax+0x0]
  41c325:	push   eax
  41c326:	fwait
  41c327:	imul   eax,DWORD PTR [ebx-0x3],0xffffff84
  41c32b:	sub    al,0xc5
  41c32d:	pshufw mm6,mm7,0xcd
  41c331:	or     al,0x6f
  41c333:	test   BYTE PTR [eax],al
  41c335:	add    bl,dh
  41c337:	jg     0x41c306
  41c339:	jb     0x41c336
  41c33b:	xor    cl,BYTE PTR [eax-0x31e7a14d]
  41c341:	dec    edi
  41c342:	dec    ebx
  41c343:	jmp    0x858:0x84cffcb
  41c34a:	jns    0x41c333
  41c34c:	fcom   DWORD PTR [edi+0x3f]
  41c34f:	mov    ecx,0xe01883ca
  41c354:	test   BYTE PTR [esi-0x74ff500d],al
  41c35a:	outs   dx,BYTE PTR ds:[esi]
  41c35b:	fwait
  41c35c:	int3   
  41c35d:	cld    
  41c35e:	sbb    al,0xff
  41c360:	pop    ebx
  41c361:	fs fwait
  41c363:	out    dx,eax
  41c364:	add    edi,DWORD PTR [ecx+0xaefd]
  41c36a:	jbe    0x41c3ae
  41c36c:	js     0x41c367
  41c36e:	cld    
  41c36f:	ja     0x41c34c
  41c371:	push   cs
  41c372:	mov    bl,0x70
  41c374:	retf   0x4a56
  41c377:	sub    eax,0x865fccc
  41c37c:	pop    esp
  41c37d:	add    al,0xf2
  41c37f:	lods   eax,DWORD PTR ds:[esi]
  41c380:	add    BYTE PTR [ebx+0x6e000000],cl
  41c386:	pop    edx
  41c387:	int    0xfc
  41c389:	int3   
  41c38a:	push   ds
  41c38b:	pop    esp
  41c38c:	je     0x41c3d9
  41c38e:	out    dx,al
  41c38f:	add    edi,ebp
  41c391:	out    0xd1,al
  41c393:	icebp  
  41c394:	aas    
  41c395:	repz in eax,0xc
  41c398:	add    dh,dl
  41c39a:	push   es
  41c39b:	out    0x3,eax
  41c39d:	push   ds
  41c39e:	dec    eax
  41c39f:	rol    DWORD PTR [edi-0x1e],1
  41c3a2:	mov    edi,0x58574763
  41c3a7:	mov    bh,0xcc
  41c3a9:	loope  0x41c3a5
  41c3ab:	fadd   QWORD PTR [ebx-0xd]
  41c3ae:	and    DWORD PTR [edx],0x0
  41c3b1:	ret    0xccc6
  41c3b4:	jp     0x41c3e7
  41c3b6:	mov    bl,0x95
  41c3b8:	jle    0x41c36b
  41c3ba:	xor    BYTE PTR [esi+0x728a7834],0xca
  41c3c1:	pop    edi
  41c3c2:	shl    BYTE PTR [esi+0xb7b717e],0xcd
  41c3c9:	dec    edi
  41c3ca:	push   edi
  41c3cb:	cs inc edi
  41c3cd:	xchg   DWORD PTR [ebx-0x19],ecx
  41c3d0:	add    esi,ebx
  41c3d2:	(bad)  
  41c3d3:	stos   DWORD PTR es:[edi],eax
  41c3d4:	(bad)  ds:0x1b03e6c0
  41c3da:	pmulhuw mm1,mm4
  41c3dd:	daa    
  41c3de:	mov    eax,0xb85ce8be
  41c3e3:	scas   al,BYTE PTR es:[edi]
  41c3e4:	fsub   st,st(6)
  41c3e6:	xchg   ecx,eax
  41c3e7:	arpl   WORD PTR [edi+0x9000000],dx
  41c3ed:	rol    ch,0x33
  41c3f0:	sbb    esp,DWORD PTR [ecx-0xb0032bb]
  41c3f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3f7:	sub    al,0x9a
  41c3f9:	int    0xa8
  41c3fb:	pop    es
  41c3fc:	repz mov ebp,DWORD PTR [eax+eax*1]
  41c400:	jo     0x41c3c8
  41c402:	adc    al,BYTE PTR ds:0x3ffbc043
  41c408:	add    eax,DWORD PTR [edi-0x19]
  41c40b:	js     0x41c3c3
  41c40d:	lods   eax,DWORD PTR ds:[esi]
  41c40e:	inc    eax
  41c40f:	jmp    0x41c3d8
  41c411:	mov    edi,0xaecc7914
  41c416:	push   DWORD PTR [ecx+0x65fcc2c8]
  41c41c:	mov    al,0x33
  41c41e:	cmp    DWORD PTR [esi+0x720c4225],edi
  41c424:	test   DWORD PTR [ebx+0x56efddbf],0x16ccf4fd
  41c42e:	inc    eax
  41c42f:	jmp    0xed65ffa7
  41c434:	lock cmp ah,BYTE PTR [eax]
  41c437:	sahf   
  41c438:	sbb    al,BYTE PTR [edi]
  41c43a:	push   0xffffffe9
  41c43c:	enter  0xff1a,0xe8
  41c440:	lock shl DWORD PTR [ebx-0x3b],0x4c
  41c445:	ret    0x1635
  41c448:	pop    ebp
  41c449:	inc    edi
  41c44a:	adc    BYTE PTR [ecx+0x7cbf83f0],ch
  41c450:	add    BYTE PTR [eax],al
  41c452:	add    dh,ch
  41c454:	pop    ds
  41c455:	add    eax,0x1ae30bb
  41c45a:	cmp    ecx,esi
  41c45c:	popa   
  41c45d:	pop    esi
  41c45e:	sub    esi,esp
  41c460:	push   es
  41c461:	push   ebx
  41c462:	jb     0x41c4af
  41c464:	push   eax
  41c465:	dec    edi
  41c466:	jb     0x41c41f
  41c468:	adc    al,ch
  41c46a:	sub    al,0x2b
  41c46c:	add    eax,DWORD PTR [eax]
  41c46e:	jmp    0x3e014863
  41c473:	shr    DWORD PTR [eax+eax*1],cl
  41c476:	ins    BYTE PTR es:[edi],dx
  41c477:	mov    edx,0xba644ec2
  41c47c:	mov    esi,0x4eee434e
  41c481:	std    
  41c482:	cld    
  41c483:	and    al,0x17
  41c485:	inc    eax
  41c486:	jmp    0xe4b542fe
  41c48b:	ins    DWORD PTR es:[edi],dx
  41c48c:	inc    ecx
  41c48d:	cld    
  41c48e:	in     eax,0x23
  41c490:	add    al,0x89
  41c492:	add    BYTE PTR [edi],dl
  41c494:	retf   
  41c495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c496:	pop    es
  41c497:	mov    BYTE PTR [edi+ebp*1],0xc0
  41c49b:	and    eax,DWORD PTR [esi-0x3b66f822]
  41c4a1:	mov    ebp,0xbf7b99f8
  41c4a6:	push   ebp
  41c4a7:	and    edi,ebx
  41c4a9:	dec    edi
  41c4aa:	mov    esp,edx
  41c4ac:	cmp    eax,0xd20de8c4
  41c4b1:	sti    
  41c4b2:	push   ecx
  41c4b4:	push   0x70
  41c4b6:	add    al,0x0
  41c4b8:	add    BYTE PTR [eax],al
  41c4ba:	js     0x41c486
  41c4bc:	out    0x56,eax
  41c4be:	push   esp
  41c4bf:	cmc    
  41c4c0:	cli    
  41c4c1:	jne    0x41c515
  41c4c3:	loop   0x41c51f
  41c4c5:	sti    
  41c4c6:	or     al,0xd2
  41c4c8:	xchg   eax,esi
  41c4ca:	xlat   BYTE PTR ds:[ebx]
  41c4cb:	fdiv   DWORD PTR [ecx+0x4]
  41c4ce:	cmp    dl,cl
  41c4d0:	out    0x41,eax
  41c4d2:	scas   eax,DWORD PTR es:[edi]
  41c4d3:	inc    esi
  41c4d4:	push   ds
  41c4d5:	inc    ecx
  41c4d7:	xor    BYTE PTR [edi],0xf0
  41c4da:	mov    ecx,0xd21186ad
  41c4df:	test   DWORD PTR [esi],0xe424a8a
  41c4e5:	mov    ah,bh
  41c4e7:	mov    ebp,0x21a883d
  41c4ec:	aaa    
  41c4ed:	enter  0xdeb8,0x66
  41c4f1:	add    BYTE PTR [eax-0x18804fe],dh
  41c4f7:	hlt    
  41c4f8:	push   ebp
  41c4f9:	inc    ebp
  41c4fb:	push   es
  41c4fc:	sti    
  41c4fd:	adc    eax,0x3cb2ca
  41c502:	dec    edi
  41c503:	repnz cli 
  41c505:	div    DWORD PTR [ecx+0x7c56d7ab]
  41c50b:	(bad)  
  41c50c:	in     al,0xa7
  41c50e:	repz cdq 
  41c510:	(bad)  
  41c511:	cld    
  41c512:	jns    0x41c584
  41c514:	es pop ecx
  41c516:	es jb  0x41c515
  41c519:	jmp    DWORD PTR [edi]
  41c51b:	cmp    ebp,edx
  41c51d:	jle    0x41c51f
  41c51f:	add    BYTE PTR [eax],al
  41c521:	(bad)  
  41c522:	pop    ss
  41c523:	add    eax,DWORD PTR [eax]
  41c525:	repz and BYTE PTR ds:0x26e83dd9,dl
  41c52c:	adc    al,0x27
  41c52e:	mov    edx,0x480372c9
  41c533:	fdiv   DWORD PTR ds:0x6de4c8c
  41c539:	and    eax,DWORD PTR [ebp+0x50]
  41c53c:	adc    BYTE PTR [ebx+0x74fccc7b],cl
  41c542:	sub    cl,dl
  41c544:	cmp    BYTE PTR [eax+0x73],ah
  41c547:	and    al,0x89
  41c549:	scas   al,BYTE PTR es:[edi]
  41c54a:	mov    bl,0x31
  41c54c:	mov    ebx,DWORD PTR [esi+0x54fcc757]
  41c552:	pop    es
  41c553:	pop    esp
  41c554:	dec    edi
  41c555:	repz scas eax,DWORD PTR es:[edi]
  41c557:	pop    edx
  41c558:	add    esi,DWORD PTR [esi-0x7e]
  41c55b:	rcl    BYTE PTR [edi+0x4b],1
  41c55e:	popf   
  41c55f:	xor    eax,DWORD PTR [eax]
  41c561:	repz popf 
  41c563:	ja     0x41c4e7
  41c565:	pop    ebx
  41c566:	lods   eax,DWORD PTR ds:[esi]
  41c567:	(bad)  
  41c568:	cld    
  41c569:	ret    
  41c56a:	cmp    BYTE PTR [edi-0x101d91b1],bh
  41c570:	dec    edi
  41c571:	or     ecx,DWORD PTR [ebx]
  41c573:	pop    es
  41c574:	std    
  41c575:	or     al,0x30
  41c577:	ror    BYTE PTR [edi],0xa4
  41c57a:	xor    ah,cl
  41c57c:	cld    
  41c57d:	xchg   esp,ebx
  41c57f:	(bad)  
  41c580:	jb     0x41c561
  41c582:	sub    BYTE PTR ds:0x8,bh
  41c588:	inc    eax
  41c589:	ins    DWORD PTR es:[edi],dx
  41c58a:	push   ebx
  41c58b:	or     ah,ah
  41c58d:	pop    es
  41c58e:	cld    
  41c58f:	daa    
  41c590:	add    BYTE PTR [edi-0x19],al
  41c593:	test   ah,bl
  41c595:	push   es
  41c596:	sbb    al,0x6
  41c598:	jns    0x41c579
  41c59a:	lea    ecx,[edi-0x21]
  41c59d:	scas   al,BYTE PTR es:[edi]
  41c59e:	in     al,0xcd
  41c5a0:	mov    esi,0xdcdc14bc
  41c5a5:	shl    BYTE PTR [ecx+ecx*8+0x4e],0x91
  41c5aa:	test   eax,0xf6c9ac2d
  41c5af:	add    eax,DWORD PTR [eax-0x70]
  41c5b2:	dec    edx
  41c5b3:	test   DWORD PTR [eax-0x4c0a2b5],ecx
  41c5b9:	push   ss
  41c5ba:	mov    edx,0xd93ee97c
  41c5bf:	inc    ebx
  41c5c0:	repz push ebx
  41c5c2:	mov    bl,0x58
  41c5c4:	jb     0x41c603
  41c5c6:	jecxz  0x41c5dd
  41c5c8:	in     eax,0x2d
  41c5ca:	xor    eax,0x8b386402
  41c5cf:	pop    ebp
  41c5d0:	icebp  
  41c5d1:	mov    DWORD PTR [ebx+0xaebcc3],ebx
  41c5d7:	xor    al,0xf3
  41c5d9:	push   es
  41c5da:	push   cs
  41c5db:	push   edx
  41c5dc:	test   DWORD PTR [edi+0xec6c92d],0x5723c897
  41c5e6:	cmp    ebx,0xdc1d8fc4
  41c5ec:	add    BYTE PTR [eax],al
  41c5ee:	add    BYTE PTR [esi+0x7703e727],dh
  41c5f4:	(bad)  
  41c5f5:	push   edx
  41c5f6:	or     DWORD PTR [ecx+0x7466407],ecx
  41c5fc:	pop    edi
  41c5fd:	mov    edi,0xe706b4be
  41c602:	jbe    0x41c5b5
  41c604:	push   cs
  41c605:	pop    ss
  41c606:	leave  
  41c607:	jle    0x41c5eb
  41c609:	inc    eax
  41c60b:	ss stos BYTE PTR es:[edi],al
  41c60d:	cld    
  41c60e:	scas   al,BYTE PTR es:[edi]
  41c60f:	gs jl  0x41c685
  41c612:	or     dh,BYTE PTR [esi+0x40]
  41c615:	or     cl,ch
  41c617:	inc    edx
  41c618:	pusha  
  41c619:	push   0xffffffe8
  41c61b:	add    BYTE PTR [esi+0x626e142],cl
  41c621:	push   esi
  41c622:	xchg   ecx,eax
  41c623:	stos   BYTE PTR es:[edi],al
  41c624:	mov    ecx,0x42377efc
  41c629:	adc    al,0x6c
  41c62b:	mov    al,0x37
  41c62d:	dec    eax
  41c62e:	add    ebp,edi
  41c630:	mov    ecx,0x33ef975
  41c635:	jmp    0x187b355a
  41c63a:	jmp    0xe837ba7c
  41c63f:	icebp  
  41c640:	xor    dh,BYTE PTR [esp+esi*2]
  41c643:	xor    eax,0x98293073
  41c648:	aas    
  41c649:	push   eax
  41c64a:	jmp    0xddb7803f
  41c64f:	out    0xc2,eax
  41c651:	cld    
  41c652:	lahf   
  41c653:	add    BYTE PTR [eax],al
  41c655:	add    BYTE PTR [eax+0x4b],bl
  41c658:	std    
  41c659:	cmp    ah,BYTE PTR [eax]
  41c65b:	xor    DWORD PTR [eax],ecx
  41c65d:	mov    cl,0xcf
  41c65f:	retf   0x9e7
  41c662:	into   
  41c663:	push   es
  41c664:	add    BYTE PTR [ebp+0x30],ch
  41c667:	aaa    
  41c668:	adc    BYTE PTR [edx-0x4e],dh
  41c66b:	or     ch,BYTE PTR [edx-0x17]
  41c66e:	cmp    esi,DWORD PTR [ecx]
  41c670:	or     BYTE PTR [ebx-0x6917ab0f],al
  41c676:	xor    eax,0xc83efcba
  41c67b:	ret    
  41c67c:	shr    ebp,0xf0
  41c67f:	xchg   ebp,esi
  41c681:	push   ebp
  41c682:	into   
  41c683:	lea    ecx,[edx]
  41c685:	add    dh,ah
  41c687:	mov    bh,BYTE PTR [edi]
  41c689:	add    cl,bh
  41c68b:	mov    BYTE PTR [ecx-0x7847d137],0x15
  41c692:	repnz mov bh,BYTE PTR [edi]
  41c695:	add    bl,dl
  41c697:	sbb    BYTE PTR [esi+ecx*1+0xa],dh
  41c69b:	test   BYTE PTR [esi+0x6da88],bh
  41c6a1:	cmp    ebx,DWORD PTR [ebx-0x7d7c12ab]
  41c6a7:	ret    0x8bbf
  41c6aa:	(bad)  
  41c6ab:	adc    bh,BYTE PTR [eax+0x50f59a43]
  41c6b1:	push   esi
  41c6b2:	sbb    DWORD PTR [eax-0x1635cc05],eax
  41c6b8:	mov    dh,0x88
  41c6ba:	add    BYTE PTR [eax],al
  41c6bc:	add    BYTE PTR [edx-0x2c7afffa],cl
  41c6c2:	push   esi
  41c6c3:	and    al,0x8b
  41c6c5:	fistp  WORD PTR [edx]
  41c6c7:	mov    eax,0xd33d8a43
  41c6cc:	xor    eax,0x2
  41c6cf:	je     0x41c6da
  41c6d1:	call   0xf455:0x1b3bcf05
  41c6d8:	jmp    0x41c73e
  41c6da:	cmp    eax,0x3af569f5
  41c6df:	std    
  41c6e0:	call   FWORD PTR [edx+0x5]
  41c6e3:	dec    BYTE PTR [ebx+0x412d57f2]
  41c6e9:	arpl   WORD PTR [ebx-0x7c],di
  41c6ec:	add    BYTE PTR [edx+0x6],cl
  41c6ef:	mov    esi,0x45e228
  41c6f4:	call   0x3c9543
  41c6f9:	mov    es,ebp
  41c6fb:	jo     0x41c73f
  41c6fd:	mov    eax,ds:0xf3b82c1e
  41c702:	in     al,dx
  41c703:	add    edi,ebp
  41c705:	out    dx,al
  41c706:	mov    ebx,0x34f34088
  41c70b:	enter  0xf466,0x37
  41c70f:	add    DWORD PTR [eax],eax
  41c711:	rep lods al,BYTE PTR ds:[esi]
  41c713:	pop    es
  41c714:	sub    BYTE PTR [ebx+0x157403ec],ch
  41c71a:	std    
  41c71b:	sub    al,0xe8
  41c71d:	xchg   ebx,eax
  41c71e:	retw   0xfc
  41c722:	add    BYTE PTR [eax],al
  41c724:	js     0x41c711
  41c726:	pop    ds
  41c727:	adc    al,0x0
  41c729:	jne    0x41c76c
  41c72b:	push   0xfffffff3
  41c72d:	xor    cl,BYTE PTR [esi+0x18]
  41c730:	push   0xffffffa0
  41c732:	jnp    0x41c790
  41c734:	test   DWORD PTR [edi-0x500def1d],0xe8248b31
  41c73e:	fcmovnbe st,st(7)
  41c740:	add    BYTE PTR [edi+0x252d5d00],ch
  41c746:	rcr    BYTE PTR [edx+0x28],0xee
  41c74a:	cld    
  41c74b:	jmp    FWORD PTR [ecx+0x74]
  41c74e:	lock push ebp
  41c750:	sbb    al,0xbd
  41c752:	lds    esi,FWORD PTR [eax]
  41c754:	xor    ebp,DWORD PTR [edx]
  41c756:	mov    esp,0x52250673
  41c75b:	or     al,0x68
  41c75d:	stc    
  41c75e:	retf   0xf101
  41c761:	xchg   edx,eax
  41c762:	idiv   BYTE PTR [edi]
  41c764:	jo     0x41c753
  41c766:	adc    BYTE PTR [ecx],bh
  41c768:	xor    bl,BYTE PTR [ebp-0x6b15172f]
  41c76e:	shr    BYTE PTR [edi],0xf0
  41c771:	loope  0x41c7ec
  41c773:	mul    DWORD PTR [esi+0x3a6943cd]
  41c779:	jg     0x41c7f2
  41c77b:	jo     0x41c76c
  41c77d:	push   es
  41c77e:	iret   
  41c77f:	jns    0x41c7a0
  41c781:	mov    eax,0x324c80dd
  41c786:	bnd js 0x41c789
  41c789:	add    BYTE PTR [eax],al
  41c78b:	mov    bl,0x16
  41c78d:	(bad)  
  41c78e:	int3   
  41c78f:	mov    edi,DWORD PTR [ecx-0x744aff0a]
  41c795:	add    esi,DWORD PTR es:[esp+eax*2-0x29]
  41c79a:	dec    edi
  41c79b:	in     al,dx
  41c79c:	mov    ebp,DWORD PTR [ecx]
  41c79e:	cld    
  41c79f:	jne    0x41c7e1
  41c7a1:	jmp    0x41c760
  41c7a3:	out    dx,eax
  41c7a4:	add    al,0x72
  41c7a6:	mov    ebp,0x2eaa592f
  41c7ab:	jp     0x41c7e3
  41c7ad:	not    DWORD PTR [eax]
  41c7af:	mov    bl,0x50
  41c7b1:	ins    BYTE PTR es:[edi],dx
  41c7b2:	into   
  41c7b3:	inc    eax
  41c7b4:	sbb    eax,0x8bf74b72
  41c7b9:	pop    ds
  41c7ba:	clc    
  41c7bb:	jnp    0x41c793
  41c7bd:	scas   eax,DWORD PTR es:[edi]
  41c7be:	dec    ecx
  41c7bf:	div    DWORD PTR [ecx]
  41c7c1:	in     al,dx
  41c7c2:	int    0xf2
  41c7c4:	add    al,0xd3
  41c7c6:	test   ah,0x83
  41c7c9:	sub    BYTE PTR [edx+ecx*8],dl
  41c7cc:	rcr    al,0xd5
  41c7cf:	ret    
  41c7d0:	(bad)  
  41c7d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7d2:	and    eax,0x14272cb2
  41c7d7:	repnz lds eax,FWORD PTR [ecx-0x32]
  41c7db:	jp     0x41c7de
  41c7dd:	jg     0x41c7e1
  41c7df:	loopne 0x41c82e
  41c7e1:	dec    edi
  41c7e2:	add    ebx,edi
  41c7e4:	pop    es
  41c7e5:	jb     0x41c825
  41c7e7:	sti    
  41c7e8:	and    DWORD PTR [esi],0xff570250
  41c7ee:	lods   al,BYTE PTR ds:[esi]
  41c7ef:	add    BYTE PTR [eax],al
  41c7f1:	add    BYTE PTR [edi+0xbd905b8],cl
  41c7f7:	mov    eax,0x417bf774
  41c7fc:	add    cl,bl
  41c7fe:	dec    eax
  41c7ff:	mov    esi,0xb9f0e975
  41c804:	jne    0x41c7f7
  41c806:	cmp    ah,cl
  41c808:	hlt    
  41c809:	fbstp  TBYTE PTR [edi]
  41c80b:	mov    ebx,0xc428fd75
  41c810:	hlt    
  41c811:	iret   
  41c812:	aaa    
  41c813:	mov    ebx,0x7c170975
  41c818:	hlt    
  41c819:	mov    edi,0x175bab7
  41c81e:	(bad)  
  41c81f:	jae    0x41c815
  41c821:	scas   eax,DWORD PTR es:[edi]
  41c822:	mov    bh,0x2d
  41c824:	xor    BYTE PTR [edi],bh
  41c826:	mov    bh,0x98
  41c828:	neg    DWORD PTR [edi-0x14fa3e49]
  41c82e:	mov    bl,0x56
  41c830:	push   ebx
  41c831:	aaa    
  41c832:	push   cs
  41c833:	mov    ?,edi
  41c835:	adc    BYTE PTR [esi-0xf170081],ch
  41c83b:	add    eax,0x4678c13b
  41c840:	add    BYTE PTR [edx-0x3e8b453b],bh
  41c846:	sbb    ebx,ebp
  41c848:	out    0x73,eax
  41c84a:	mov    edi,0x3756fcb9
  41c84f:	aaa    
  41c850:	call   0xfcfb77c0
  41c855:	inc    esi
  41c856:	add    BYTE PTR [eax],al
  41c858:	add    BYTE PTR [edi+0x37],ah
  41c85b:	add    cl,ch
  41c85d:	lock scas al,BYTE PTR es:[edi]
  41c85f:	je     0x41c89f
  41c861:	cs mov edx,0x29e91230
  41c867:	adc    BYTE PTR [edi-0x128b719d],bl
  41c86d:	repz mov bl,0xe7
  41c870:	xchg   DWORD PTR [edi],ebp
  41c872:	mov    edx,0xc473aafc
  41c877:	das    
  41c878:	add    BYTE PTR [ecx],dh
  41c87a:	loop   0x41c88b
  41c87c:	jb     0x41c87d
  41c87e:	ret    0xc73
  41c881:	bnd call 0x654fc779
  41c887:	sub    BYTE PTR [eax-0x778fd37],bh
  41c88d:	xchg   edi,eax
  41c88e:	ret    0x5170
  41c891:	xchg   ecx,eax
  41c892:	sbb    eax,0x2c9b828
  41c897:	xchg   eax,ecx
  41c899:	mov    ds:0xda0084c9,eax
  41c89e:	or     cl,BYTE PTR [ecx-0x50d3474]
  41c8a4:	dec    DWORD PTR [ebp-0x8ffca72]
  41c8aa:	add    edi,DWORD PTR [ebp-0x17]
  41c8ad:	inc    edx
  41c8ae:	or     eax,DWORD PTR [eax]
  41c8b0:	add    BYTE PTR ds:0x623bf1f0,cl
  41c8b6:	out    dx,eax
  41c8b7:	sub    DWORD PTR [ebp+0x520df06d],eax
  41c8bd:	add    BYTE PTR [eax],al
  41c8bf:	add    BYTE PTR [edx+0x1dfef314],al
  41c8c5:	lods   al,BYTE PTR ds:[esi]
  41c8c6:	cmp    DWORD PTR [eax],ebp
  41c8c8:	loop   0x41c917
  41c8ca:	add    bl,ch
  41c8cc:	cwde   
  41c8cd:	test   ebx,ecx
  41c8cf:	imul   eax,ebx,0x9afffc82
  41c8d5:	mov    BYTE PTR [eax+edi*4],ah
  41c8d8:	dec    ecx
  41c8d9:	or     ch,al
  41c8db:	cmp    eax,0x89fbc8b4
  41c8e0:	outs   dx,DWORD PTR ds:[esi]
  41c8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8e2:	mov    ah,0x43
  41c8e4:	pop    edx
  41c8e5:	sub    DWORD PTR [esi+0x5d],ebx
  41c8e8:	or     ebp,0x8bfe8b51
  41c8ee:	call   0x4c0b9f
  41c8f3:	push   esi
  41c8f4:	repz mov ebx,edi
  41c8f7:	mov    al,BYTE PTR [esi+0x34fcc19c]
  41c8fd:	push   0x9fbd15a8
  41c902:	add    BYTE PTR [ebx-0x3427b92],cl
  41c908:	sbb    al,0x90
  41c90a:	sub    al,BYTE PTR [eax]
  41c90c:	or     ecx,DWORD PTR [edx+esi*4]
  41c90f:	dec    DWORD PTR [esp+ebp*1]
  41c912:	ror    DWORD PTR [edi+ebp*2],0xf3
  41c916:	add    al,BYTE PTR [eax]
  41c918:	repz sub bh,al
  41c91b:	dec    edi
  41c91c:	and    sp,WORD PTR ds:0x5074ecf9
  41c923:	push   eax
  41c924:	add    BYTE PTR [eax],al
  41c926:	add    bl,bl
  41c928:	pop    es
  41c929:	mov    cl,0xff
  41c92b:	fsubr  QWORD PTR [edx]
  41c92d:	ror    DWORD PTR [edi+ebp*2],0xaa
  41c931:	add    eax,DWORD PTR [eax]
  41c933:	repz sbb ebp,edi
  41c936:	mov    bh,BYTE PTR [esi]
  41c938:	xor    al,0x59
  41c93a:	call   0x45dbdd
  41c93f:	push   0x768b5065
  41c944:	or     edi,DWORD PTR [ebp-0x70f05b04]
  41c94a:	cmp    BYTE PTR [edi],0x37
  41c94d:	ret    0x43fc
  41c950:	pop    eax
  41c951:	ret    0xf3ed
  41c954:	lahf   
  41c955:	xchg   DWORD PTR [edi-0xeadc0c],edi
  41c95b:	jl     0x41c8fc
  41c95d:	pop    DWORD PTR [edx-0x33db8e9]
  41c963:	ret    
  41c964:	hlt    
  41c965:	pop    ss
  41c966:	cmp    BYTE PTR [ecx],al
  41c968:	pusha  
  41c969:	add    BYTE PTR [ecx-0x7bee1ba5],al
  41c96f:	push   ebp
  41c970:	push   es
  41c971:	out    0x3,eax
  41c973:	repz and bl,bl
  41c976:	nop
  41c977:	sar    DWORD PTR [esi+0x435eabae],0xe7
  41c97e:	add    ecx,ecx
  41c980:	repz jae 0x41c9bb
  41c983:	arpl   WORD PTR [esi+0xf],cx
  41c986:	xchg   esi,eax
  41c987:	mov    ecx,0x2de706
  41c98c:	add    BYTE PTR [eax],al
  41c98e:	fld    QWORD PTR [ebx-0x61434c8d]
  41c994:	outs   dx,BYTE PTR ds:[esi]
  41c995:	dec    edi
  41c996:	repz push es
  41c998:	cmp    cl,dl
  41c99a:	mov    cl,0xb5
  41c99c:	out    0x58,al
  41c99e:	out    dx,al
  41c99f:	jl     0x41c9c4
  41c9a1:	shl    DWORD PTR [ebx+eax*4+0x213ccc2b],0xf1
  41c9a9:	pop    esp
  41c9aa:	js     0x41c9de
  41c9ac:	xchg   ebx,eax
  41c9ad:	lods   al,BYTE PTR ds:[esi]
  41c9ae:	in     eax,dx
  41c9af:	lock lods eax,DWORD PTR ds:[esi]
  41c9b1:	sar    DWORD PTR ds:0xcdbc6a4e,0x5
  41c9b8:	imul   edi,DWORD PTR [edx-0x3c],0xffffffb4
  41c9bc:	out    0x8e,al
  41c9be:	jno    0x41ca13
  41c9c0:	nop
  41c9c1:	shl    DWORD PTR [edi+0x79c11157],0x4a
  41c9c8:	aaa    
  41c9c9:	push   esp
  41c9ca:	jp     0x41c998
  41c9cc:	push   ss
  41c9cd:	rol    DWORD PTR [ecx],0x47
  41c9d0:	fadd   DWORD PTR [ebx-0xd]
  41c9d3:	jg     0x41ca33
  41c9d5:	test   DWORD PTR [edi+0x6187edb4],ecx
  41c9db:	pop    es
  41c9dc:	out    0x3,eax
  41c9de:	push   0x77baaa8a
  41c9e3:	mov    ah,0x96
  41c9e5:	sub    esi,edi
  41c9e7:	add    eax,0x8a7803e7
  41c9ec:	inc    esp
  41c9ee:	popf   
  41c9ef:	mov    bl,0xfc
  41c9f1:	cdq    
  41c9f2:	add    BYTE PTR [eax],al
  41c9f4:	add    BYTE PTR [edi-0x46],bl
  41c9f7:	push   ebp
  41c9f8:	je     0x41c9ae
  41c9fa:	mov    dh,0x4f
  41c9fc:	ins    BYTE PTR es:[edi],dx
  41c9fd:	lods   al,BYTE PTR ds:[esi]
  41c9fe:	ror    BYTE PTR [edi+0x16],cl
  41ca01:	in     al,0xf2
  41ca03:	push   cs
  41ca04:	test   eax,0x7dbf87f0
  41ca09:	sar    BYTE PTR [edi-0x7e],1
  41ca0c:	lea    esp,[ebp-0x4d]
  41ca0f:	cld    
  41ca10:	(bad)  
  41ca11:	sbb    DWORD PTR [ecx+0x6b],edi
  41ca14:	in     al,dx
  41ca15:	xor    esi,DWORD PTR [ebx-0x7a25028d]
  41ca1b:	aaa    
  41ca1c:	push   cs
  41ca1d:	mov    esp,0x98356a0c
  41ca22:	sub    al,0x87
  41ca24:	loope  0x41ca95
  41ca26:	je     0x41ca29
  41ca28:	dec    edi
  41ca29:	call   0x700f3d11
  41ca2e:	mov    dl,0xfe
  41ca30:	cmp    ecx,ecx
  41ca32:	add    BYTE PTR [edx-0x34d6bc3],0x39
  41ca39:	jl     0x41c9c3
  41ca3b:	arpl   WORD PTR [edx+0x644fb2b3],sp
  41ca41:	jne    0x41ca9a
  41ca43:	cmc    
  41ca44:	mov    ?,WORD PTR [ebx+0x62d9e843]
  41ca4a:	mov    bl,0xfc
  41ca4c:	fs mov al,0x37
  41ca4f:	sbb    ah,BYTE PTR [ebp+ebp*2+0x57]
  41ca53:	cmc    
  41ca54:	outs   dx,BYTE PTR ds:[esi]
  41ca55:	mov    bl,0x9e
  41ca57:	add    eax,0x74
  41ca5c:	jge    0x41ca7d
  41ca5e:	sti    
  41ca5f:	pop    esi
  41ca60:	mov    bl,0x7e
  41ca62:	push   edx
  41ca63:	loope  0x41caad
  41ca65:	sbb    eax,DWORD PTR [eax]
  41ca67:	jmp    0x101555c
  41ca6c:	scas   al,BYTE PTR es:[edi]
  41ca6d:	add    al,0xfe
  41ca6f:	inc    ebp
  41ca70:	and    eax,0x20ff7988
  41ca75:	pop    ss
  41ca76:	sub    BYTE PTR [ebx],0x5
  41ca79:	(bad)  
  41ca7a:	sti    
  41ca7b:	pop    edi
  41ca7c:	xor    DWORD PTR ds:0x74ec2c5,esp
  41ca82:	push   ecx
  41ca83:	mov    esi,esi
  41ca85:	mov    al,ch
  41ca87:	ins    BYTE PTR es:[edi],dx
  41ca88:	dec    ecx
  41ca89:	pop    es
  41ca8a:	add    BYTE PTR [esi-0x73],dl
  41ca8d:	loope  0x41cac8
  41ca8f:	lea    ebx,[edi+0x7f89546b]
  41ca95:	jnp    0x41ca1e
  41ca97:	stc    
  41ca98:	repnz or BYTE PTR [eax+0x0],0x1a
  41ca9d:	add    dl,0x50
  41caa0:	mov    ebp,0x26948195
  41caa5:	jae    0x41caa2
  41caa7:	push   eax
  41caa8:	xor    dh,BYTE PTR [edi]
  41caaa:	jmp    0x4e0f:0xbc7fda00
  41cab1:	das    
  41cab2:	std    
  41cab3:	dec    edx
  41cab5:	mov    ch,0xf2
  41cab7:	push   esi
  41cab8:	xor    cl,BYTE PTR [ebx-0x1f250004]
  41cabe:	add    DWORD PTR [esi+0x0],edx
  41cac1:	add    BYTE PTR [eax],al
  41cac3:	loopne 0x41cad0
  41cac5:	push   0x4006ca00
  41caca:	lea    ecx,[edi-0x71]
  41cacd:	clc    
  41cace:	push   DWORD PTR [ebp+0x5b]
  41cad1:	sti    
  41cad2:	adc    eax,0x40186a
  41cad7:	adc    eax,DWORD PTR [eax-0x4]
  41cada:	and    DWORD PTR [edx],0x72
  41cadd:	or     eax,DWORD PTR [ebx+eax*1+0x4900000b]
  41cae4:	loopne 0x41cb20
  41cae6:	(bad)  
  41cae7:	repz call 0x325c:0x4174fd9f
  41caef:	dec    eax
  41caf0:	pop    eax
  41caf1:	add    ecx,DWORD PTR [ebx+esi*8-0x61]
  41caf5:	push   edx
  41caf6:	mov    DWORD PTR [esi],esp
  41caf8:	mov    esp,0x52f3400e
  41cafd:	inc    edi
  41cafe:	clc    
  41caff:	mov    ds:0x44ff4628,eax
  41cb04:	mov    al,ds:0x3c768b55
  41cb09:	mov    esi,0xbd7034fc
  41cb0e:	jb     0x41cb3f
  41cb10:	or     esi,edx
  41cb12:	xor    BYTE PTR [ebx],0x3c
  41cb15:	cmc    
  41cb16:	ss sahf 
  41cb18:	mov    bh,0x37
  41cb1a:	sub    eax,0xffb52370
  41cb1f:	cmp    ah,0xbc
  41cb22:	jb     0x41cb23
  41cb24:	rcl    BYTE PTR [edi],1
  41cb26:	js     0x41cb28
  41cb28:	add    BYTE PTR [eax],al
  41cb2a:	loope  0x41cb0b
  41cb2c:	add    ebp,DWORD PTR [edx-0xd]
  41cb2f:	and    al,0xb9
  41cb31:	mov    dh,BYTE PTR [esi]
  41cb33:	enter  0x5550,0xe4
  41cb37:	cli    
  41cb38:	mov    bh,0xfc
  41cb3a:	data16 jl 0x41cafa
  41cb3d:	aad    0x6e
  41cb3f:	pop    edi
  41cb40:	xor    al,0x7
  41cb42:	or     ch,bl
  41cb44:	mov    ebx,0x44cef72
  41cb49:	jmp    0xfd1b993f
  41cb4e:	test   BYTE PTR ds:[ebp+0x40cddf12],bh
  41cb55:	add    BYTE PTR [edx+edi*4+0x4006fcbc],ah
  41cb5c:	cmovo  esi,ebx
  41cb5f:	sub    ebx,edx
  41cb61:	pop    eax
  41cb62:	push   es
  41cb63:	pop    es
  41cb64:	pause  
  41cb66:	jno    0x41cb02
  41cb68:	pop    edx
  41cb69:	mov    esi,0x2b3f567f
  41cb6e:	adc    esi,DWORD PTR [edx+0x7a35e4d]
  41cb74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb75:	int3   
  41cb76:	xor    ebx,DWORD PTR [ebx+0x72]
  41cb79:	scas   eax,DWORD PTR es:[edi]
  41cb7a:	jae    0x41cb1e
  41cb7c:	mov    esi,0x76971983
  41cb81:	inc    edx
  41cb82:	repz pop es
  41cb84:	mov    edx,0x167d9e55
  41cb89:	push   cs
  41cb8a:	jne    0x41cb1e
  41cb8c:	out    0x3,al
  41cb8e:	add    BYTE PTR [eax],al
  41cb90:	add    bl,dh
  41cb92:	push   ds
  41cb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb94:	xor    eax,0x180606b3
  41cb99:	inc    ebx
  41cb9a:	adc    al,0xa7
  41cb9c:	add    esi,DWORD PTR [eax-0x3a]
  41cb9f:	in     eax,0x87
  41cba1:	ins    DWORD PTR es:[edi],dx
  41cba2:	push   es
  41cba3:	out    0x3,eax
  41cba5:	jo     0x41cb5f
  41cba7:	pop    edx
  41cba8:	lea    eax,ds:[ebp+0x2e87041c]
  41cbaf:	cmp    eax,0xf886e1bd
  41cbb4:	inc    ebx
  41cbb5:	repz sub edx,0xe706f286
  41cbbc:	add    eax,DWORD PTR [ebx-0x61]
  41cbbf:	fdiv   QWORD PTR [edi-0x439e4f2a]
  41cbc5:	jno    0x41cb77
  41cbc7:	sbb    ah,BYTE PTR [edi]
  41cbc9:	jp     0x41cba3
  41cbcb:	jno    0x41cb9b
  41cbcd:	aam    0x97
  41cbcf:	iret   
  41cbd0:	mov    esp,0x375c58b7
  41cbd5:	mov    ds:0x8cbdae84,eax
  41cbda:	icebp  
  41cbdb:	mov    edi,0x589fbc
  41cbe0:	arpl   WORD PTR [edi+0x4d7510a8],si
  41cbe6:	mov    bl,0x83
  41cbe8:	inc    edx
  41cbe9:	retf   
  41cbea:	dec    edx
  41cbeb:	push   0xffffffa9
  41cbed:	ins    DWORD PTR es:[edi],dx
  41cbee:	sub    eax,0x848b198
  41cbf3:	dec    ecx
  41cbf4:	jmp    0xf041cbf9
  41cbf9:	mov    cl,0x72
  41cbfb:	cmp    DWORD PTR [edx-0x35],edi
  41cbfe:	dec    edi
  41cbff:	ins    BYTE PTR es:[edi],dx
  41cc00:	mov    ah,0xb2
  41cc02:	dec    edi
  41cc03:	inc    ecx
  41cc04:	inc    edx
  41cc05:	clc    
  41cc06:	cld    
  41cc07:	cs jb  0x41cbce
  41cc0a:	or     ebp,DWORD PTR [edi+ebp*1+0x3]
  41cc0e:	popf   
  41cc0f:	sub    cl,BYTE PTR [edi+0x761637af]
  41cc15:	test   al,bl
  41cc17:	xchg   ebp,eax
  41cc18:	or     DWORD PTR [edx-0x57a8fa8e],esi
  41cc1e:	sti    
  41cc1f:	(bad)  
  41cc20:	pop    edi
  41cc21:	mov    bl,0x72
  41cc23:	cmc    
  41cc24:	dec    eax
  41cc25:	aam    0xf0
  41cc27:	out    dx,eax
  41cc28:	dec    edi
  41cc29:	lahf   
  41cc2a:	add    al,0x53
  41cc2c:	out    dx,eax
  41cc2d:	sahf   
  41cc2e:	aam    0xdd
  41cc30:	aas    
  41cc31:	mov    bl,0x5c
  41cc33:	aaa    
  41cc34:	call   0x809b:0x7a34c0c7
  41cc3b:	aad    0x8
  41cc3d:	push   esi
  41cc3e:	push   esi
  41cc3f:	push   ss
  41cc40:	loop   0x41cc10
  41cc42:	addr16 in eax,0x58
  41cc45:	inc    edi
  41cc46:	add    BYTE PTR [edx-0x80],ah
  41cc49:	mov    BYTE PTR [edx],bl
  41cc4b:	ror    DWORD PTR [eax+0x47],1
  41cc4e:	add    BYTE PTR [eax-0x23],dh
  41cc51:	loop   0x41cc0a
  41cc53:	sub    ch,bh
  41cc55:	mov    cl,0x12
  41cc57:	xchg   ebp,eax
  41cc58:	add    al,BYTE PTR [edi+0x0]
  41cc5b:	add    BYTE PTR [eax],al
  41cc5d:	add    BYTE PTR [eax],al
  41cc5f:	and    DWORD PTR [ecx+0x8],ecx
  41cc62:	mov    ds:0x402bb6,eax
  41cc67:	adc    DWORD PTR [ecx+0xc],ecx
  41cc6a:	mov    ds:0x403b1e,eax
  41cc6f:	add    DWORD PTR [ecx+0x10],ecx
  41cc72:	mov    ds:0x402b8a,eax
  41cc77:	adc    DWORD PTR [ecx+0x14],ecx
  41cc7a:	mov    ds:0x403306,eax
  41cc7f:	loope  0x41ccc9
  41cc81:	sbb    BYTE PTR [edx+0x58],ch
  41cc84:	es cmc 
  41cc86:	mov    bh,0x89
  41cc88:	add    ecx,DWORD PTR [ecx-0x7ab44d83]
  41cc8e:	xor    eax,0x402b56
  41cc93:	loop   0x41cc75
  41cc95:	dec    ecx
  41cc96:	add    BYTE PTR [edx+0x7e],cl
  41cc99:	ret    
  41cc9a:	push   eax
  41cc9b:	fs jle 0x41cccf
  41cc9e:	mov    esp,0xff004348
  41cca3:	add    al,0xde
  41cca5:	mov    cs:0x403316,eax
  41ccab:	scas   eax,DWORD PTR es:[edi]
  41ccac:	lock out dx,eax
  41ccae:	pop    eax
  41ccaf:	and    bl,BYTE PTR [ecx+0x4a]
  41ccb2:	add    BYTE PTR [edx],cl
  41ccb4:	add    bl,0x50
  41ccb7:	sbb    eax,0x19b800b5
  41ccbc:	add    edi,ebx
  41ccbe:	(bad)  
  41ccbf:	inc    eax
  41ccc0:	mov    bh,0x9f
  41ccc2:	or     BYTE PTR [eax],al
  41ccc4:	add    BYTE PTR [eax],al
  41ccc6:	jb     0x41cd0e
  41ccc8:	add    BYTE PTR [ebp-0x17ab8ce1],cl
  41ccce:	les    edi,FWORD PTR [eax+eax*1]
  41ccd1:	add    BYTE PTR [ecx-0x36],al
  41ccd4:	dec    esp
  41ccd5:	jmp    DWORD PTR [edi-0xcbc4b52]
  41ccdb:	lahf   
  41ccdc:	mov    ecx,0x65d319d5
  41cce1:	adc    ebx,DWORD PTR [ecx+eiz*8+0x3]
  41cce5:	mov    ebx,DWORD PTR [esi]
  41cce7:	cwde   
  41cce8:	pop    ebx
  41cce9:	call   0x45b6e6
  41ccee:	js     0x41cd55
  41ccf0:	push   ebx
  41ccf1:	std    
  41ccf2:	mov    esi,0xf340789b
  41ccf7:	dec    esp
  41ccf8:	shl    BYTE PTR [eax+0x4497c3],cl
  41ccfe:	sub    bl,BYTE PTR [ebx-0x604f4b54]
  41cd04:	sub    al,0x19
  41cd06:	sbb    cl,bl
  41cd08:	or     BYTE PTR [eax+0x112c9fb0],bh
  41cd0e:	or     bh,BYTE PTR [ebx-0x604f4af4]
  41cd14:	sub    al,0x9
  41cd16:	xor    eax,0xb0a89fa3
  41cd1b:	lahf   
  41cd1c:	add    edi,DWORD PTR [ecx]
  41cd1e:	xor    BYTE PTR [ebx-0x4f97802],dl
  41cd24:	ins    BYTE PTR es:[edi],dx
  41cd25:	inc    eax
  41cd26:	repz mov WORD PTR [esi+0x59],ss
  41cd2a:	add    BYTE PTR [eax],al
  41cd2c:	add    BYTE PTR [edx],ch
  41cd2e:	loop   0x41cd3f
  41cd30:	add    BYTE PTR [esi+0x1780a828],ah
  41cd36:	push   esp
  41cd37:	push   edx
  41cd38:	push   ebp
  41cd39:	mov    ebx,esp
  41cd3b:	push   esp
  41cd3c:	call   0xfcf89e78
  41cd41:	pop    ecx
  41cd42:	lods   eax,DWORD PTR ds:[esi]
  41cd43:	xchg   DWORD PTR [edx-0x61],edi
  41cd46:	out    0xab,eax
  41cd48:	mov    edi,0x6a00a02a
  41cd4d:	pop    es
  41cd4e:	and    edi,DWORD PTR [eax]
  41cd50:	shr    BYTE PTR [ebx],0xc8
  41cd53:	outs   dx,DWORD PTR ds:[esi]
  41cd54:	inc    esi
  41cd55:	repz push es
  41cd57:	out    0x8e,eax
  41cd59:	inc    ecx
  41cd5a:	pop    ss
  41cd5b:	jb     0x41cd95
  41cd5d:	out    0x7b,eax
  41cd5f:	sub    esp,DWORD PTR [esp+edi*1+0x3e51e921]
  41cd66:	lahf   
  41cd67:	mov    bl,0xa7
  41cd69:	lahf   
  41cd6a:	lods   eax,DWORD PTR ds:[esi]
  41cd6b:	arpl   bx,ax
  41cd6d:	out    0x82,eax
  41cd6f:	xchg   edx,eax
  41cd70:	add    eax,0xc0106f3
  41cd75:	and    eax,DWORD PTR [edx+0x3b69a3ab]
  41cd7b:	xchg   ebx,eax
  41cd7c:	stos   DWORD PTR es:[edi],eax
  41cd7d:	ds repnz push ebp
  41cd80:	mov    edx,0x80ddc671
  41cd85:	cs or  bh,ah
  41cd88:	add    ebp,DWORD PTR [eax+0x43]
  41cd8b:	dec    ebx
  41cd8c:	push   ebx
  41cd8d:	leave  
  41cd8e:	pop    es
  41cd8f:	popf   
  41cd90:	push   edx
  41cd91:	add    BYTE PTR [eax],al
  41cd93:	add    BYTE PTR [ebx+0x68],bl
  41cd96:	cmp    bh,BYTE PTR [edx-0x305480b9]
  41cd9c:	jno    0x41cd64
  41cd9e:	in     eax,dx
  41cd9f:	jg     0x41cd27
  41cda1:	or     bh,ah
  41cda3:	add    esi,DWORD PTR [edx+0x2b]
  41cda6:	sti    
  41cda7:	add    dh,dh
  41cda9:	or     BYTE PTR [edx+0x5],0xf3
  41cdad:	push   es
  41cdae:	ins    BYTE PTR es:[edi],dx
  41cdaf:	inc    eax
  41cdb0:	or     edx,DWORD PTR [esi-0x7f]
  41cdb3:	add    esp,DWORD PTR [ebp+0x1882ff55]
  41cdb9:	lods   eax,DWORD PTR ds:[esi]
  41cdba:	in     eax,0x8b
  41cdbc:	mov    cl,0xba
  41cdbe:	arpl   sp,ax
  41cdc0:	out    0x82,eax
  41cdc2:	bound  eax,QWORD PTR [esi]
  41cdc4:	repz push es
  41cdc6:	push   0x37
  41cdc8:	fild   DWORD PTR [edi]
  41cdca:	idiv   BYTE PTR [edi+0x72]
  41cdcd:	or     edi,esp
  41cdcf:	add    ebp,DWORD PTR [eax+0x42]
  41cdd2:	add    BYTE PTR [ecx-0x56bd7fd9],bh
  41cdd8:	pop    ds
  41cdd9:	push   ebp
  41cdda:	push   ebp
  41cddb:	xchg   ecx,eax
  41cddc:	sbb    ebx,DWORD PTR [ebx+0x49689efc]
  41cde2:	fsubr  DWORD PTR [edi+esi*4-0x5]
  41cde6:	add    DWORD PTR [ecx],0xffffffed
  41cde9:	push   es
  41cdea:	add    BYTE PTR [edx-0x1c],ch
  41cded:	mov    dh,0xff
  41cdef:	in     eax,dx
  41cdf0:	adc    al,0x4a
  41cdf2:	add    ch,cl
  41cdf4:	lock jg 0x41ce39
  41cdf7:	test   DWORD PTR [eax],eax
  41cdf9:	add    BYTE PTR [eax],al
  41cdfb:	pop    ds
  41cdfc:	and    DWORD PTR [ecx],eax
  41cdfe:	mov    edi,0x4d399f23
  41ce03:	cmp    ch,BYTE PTR [ebx-0x76c7537a]
  41ce09:	mov    edi,0x241e4de
  41ce0e:	jmp    0x35a45403
  41ce13:	out    dx,eax
  41ce14:	and    BYTE PTR [edx],ch
  41ce16:	fs add al,0x93
  41ce19:	push   edi
  41ce1a:	inc    ecx
  41ce1b:	xchg   esp,eax
  41ce1c:	inc    esp
  41ce1d:	add    cl,ch
  41ce1f:	jne    0x41ce6a
  41ce21:	clc    
  41ce22:	mov    ecx,0xbf4fc367
  41ce27:	imul   edi,DWORD PTR [ecx],0xc
  41ce2a:	add    edi,edi
  41ce2c:	call   0xaa73:0x6b9c06fc
  41ce33:	outs   dx,DWORD PTR ds:[esi]
  41ce34:	xor    eax,edi
  41ce36:	jmp    0xeb585136
  41ce3b:	lock push es
  41ce3d:	and    DWORD PTR [edi+edi*1-0x2],0x8eb660c
  41ce45:	add    cl,ch
  41ce47:	inc    eax
  41ce48:	jle    0x41ce8c
  41ce4a:	shr    DWORD PTR [ebp+0x38],1
  41ce4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce4e:	add    dl,al
  41ce50:	(bad)  
  41ce51:	sub    edi,edi
  41ce53:	xchg   ebp,eax
  41ce54:	test   BYTE PTR [ecx-0xc],bh
  41ce57:	push   ecx
  41ce58:	(bad)  
  41ce59:	in     al,0x42
  41ce5b:	test   al,0x7
  41ce5d:	add    BYTE PTR [eax-0x38000000],ch
  41ce63:	inc    BYTE PTR [eax+0x7cbf1]
  41ce69:	mov    ebx,edi
  41ce6b:	xor    ax,0x7e45
  41ce6f:	inc    BYTE PTR [ecx+0x78be5]
  41ce75:	sub    edi,ecx
  41ce77:	jbe    0x41ce60
  41ce79:	or     bl,BYTE PTR [ecx]
  41ce7b:	cmc    
  41ce7c:	jecxz  0x41ce7e
  41ce7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce7f:	sub    al,0xd3
  41ce81:	add    DWORD PTR [edx-0x7dba78f9],ecx
  41ce87:	(bad)  
  41ce88:	inc    DWORD PTR [ecx]
  41ce8a:	pop    edx
  41ce8b:	pop    es
  41ce8c:	add    BYTE PTR [ebx+0x769fb9a],cl
  41ce92:	or     eax,0x4a31dfed
  41ce97:	pop    es
  41ce98:	add    BYTE PTR [esi-0x21],bl
  41ce9b:	(bad)  
  41ce9c:	jp     0x41ced2
  41ce9e:	push   0x6e
  41cea0:	adc    esp,esi
  41cea2:	popf   
  41cea3:	inc    edx
  41cea4:	add    BYTE PTR [ecx-0x3d],bl
  41cea7:	in     al,dx
  41cea8:	fild   DWORD PTR [ebp+0x6a20dbda]
  41ceae:	cmp    al,0x84
  41ceb0:	jns    0x41ce5a
  41ceb2:	push   edx
  41ceb3:	pop    edi
  41ceb4:	pop    esp
  41ceb5:	dec    eax
  41ceb6:	or     al,BYTE PTR [edi]
  41ceb8:	xchg   DWORD PTR [ebp-0x1a],ecx
  41cebb:	fld    DWORD PTR [ebx+ecx*4]
  41cebe:	int    0x5f
  41cec0:	adc    edx,esi
  41cec2:	adc    al,0x73
  41cec4:	add    eax,0x9f000000
  41ceca:	add    BYTE PTR [edx+0x8],ch
  41cecd:	repz pop eax
  41cecf:	ds loopne 0x41cef5
  41ced2:	mov    al,ds:0x353d0000
  41ced7:	aas    
  41ced8:	lock push 0x840ca7db
  41cede:	push   0x0
  41cee0:	(bad)  
  41cee1:	jbe    0x41cec7
  41cee3:	or     edi,edi
  41cee5:	ja     0x41cf47
  41cee7:	das    
  41cee8:	add    ecx,ebx
  41ceea:	xchg   ecx,eax
  41ceeb:	mov    bl,0xfd
  41ceed:	lods   al,BYTE PTR ds:[esi]
  41ceee:	daa    
  41ceef:	inc    ecx
  41cef0:	or     BYTE PTR [esi+0x60],ch
  41cef3:	or     BYTE PTR cs:[eax-0x25],ch
  41cef7:	scas   eax,DWORD PTR es:[edi]
  41cef8:	out    0xf,al
  41cefa:	lahf   
  41cefb:	add    BYTE PTR [eax],al
  41cefd:	js     0x41cf37
  41ceff:	mov    DWORD PTR [edx-0x6d],eax
  41cf02:	mov    BYTE PTR [esi],cl
  41cf04:	dec    eax
  41cf05:	repz lahf 
  41cf07:	mov    DWORD PTR [edx-0x7d],eax
  41cf0a:	xor    eax,0x50c30849
  41cf0f:	das    
  41cf10:	fdiv   st,st(0)
  41cf12:	or     DWORD PTR [ebx-0x79],edx
  41cf15:	loopne 0x41ceca
  41cf17:	test   al,0x37
  41cf19:	(bad)  
  41cf1a:	jmp    0x4a89:0xa3b1feb4
  41cf21:	pop    ds
  41cf22:	and    bl,bh
  41cf24:	sub    al,0x68
  41cf26:	pop    ebp
  41cf27:	add    al,0x74
  41cf29:	jmp    0x4a2062
  41cf2e:	add    BYTE PTR [eax],al
  41cf30:	xor    eax,0x242d109c
  41cf35:	pop    ebp
  41cf36:	add    al,0x89
  41cf38:	mov    dh,0x13
  41cf3a:	push   esp
  41cf3b:	dec    edi
  41cf3c:	push   0xb8010475
  41cf41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf42:	push   ebx
  41cf43:	call   0xfcf47e3c
  41cf48:	repnz push es
  41cf4a:	sub    cl,BYTE PTR [eax]
  41cf4c:	push   0x46
  41cf4e:	jmp    0x41ceda
  41cf50:	cmp    edi,edi
  41cf52:	inc    eax
  41cf53:	jmp    0x420d206
  41cf58:	push   0xcb5b972b
  41cf5d:	imul   esp,DWORD PTR ds:0x2b7bf304,0xa57e34bc
  41cf67:	push   ebx
  41cf68:	mov    esi,0x41b6f733
  41cf6d:	sti    
  41cf6e:	mov    ds,ebx
  41cf70:	call   0xf432:0x648095a9
  41cf77:	mov    ah,BYTE PTR [ecx]
  41cf79:	scas   eax,DWORD PTR es:[edi]
  41cf7a:	imul   ebp,DWORD PTR [ebp-0x74e906e0],0xffffffb6
  41cf81:	sahf   
  41cf82:	je     0x41cf6b
  41cf84:	xchg   DWORD PTR [ecx+0x7fe3425f],ebp
  41cf8a:	(bad)  [edi]
  41cf8c:	push   0x43
  41cf8e:	sub    ecx,DWORD PTR [ecx+0x30b6ed6c]
  41cf94:	add    BYTE PTR [eax],al
  41cf96:	add    bh,dh
  41cf98:	test   ebx,ecx
  41cf9a:	stos   DWORD PTR es:[edi],eax
  41cf9b:	lock xor ebp,ebp
  41cf9e:	mov    ebp,0xaae80eb3
  41cfa3:	out    0xea,al
  41cfa5:	lods   eax,DWORD PTR ds:[esi]
  41cfa6:	push   es
  41cfa7:	jo     0x41cfff
  41cfa9:	cs mov dh,0x3f
  41cfac:	test   DWORD PTR [ebx+0x63f9f3ab],esp
  41cfb2:	cmp    eax,0xbd15a92e
  41cfb7:	mov    bl,0xe
  41cfb9:	out    0x29,eax
  41cfbb:	retf   0x837b
  41cfbe:	pop    edi
  41cfbf:	mov    esp,0xf33e9c9e
  41cfc4:	push   es
  41cfc5:	add    BYTE PTR [ebx+esi*4-0x52],ah
  41cfc9:	dec    edi
  41cfca:	bound  edi,QWORD PTR ds:0xdf5cfd39
  41cfd0:	stos   DWORD PTR es:[edi],eax
  41cfd1:	jb     0x41cfc0
  41cfd3:	cwde   
  41cfd4:	xor    ebp,edx
  41cfd6:	(bad)  
  41cfd7:	sahf   
  41cfd8:	test   DWORD PTR [edi+0x727dec55],edi
  41cfde:	rcl    DWORD PTR [edx+esi*4+0x73],0xef
  41cfe3:	and    BYTE PTR [esi-0x3b],bh
  41cfe6:	rcr    DWORD PTR [esp+ebx*8-0x4],0xae
  41cfeb:	push   0x2701c47
  41cff0:	out    0x88,eax
  41cff2:	and    al,0x53
  41cff4:	jge    0x41d03d
  41cff6:	xchg   esi,eax
  41cff7:	jo     0x41cfaa
  41cff9:	cld    
  41cffa:	mov    es,WORD PTR [eax]
  41cffc:	add    BYTE PTR [eax],al
  41cffe:	test   BYTE PTR [esi],0x75
  41d001:	lock imul edi,DWORD PTR ds:0xe33a70c8,0xffffff86
  41d009:	sub    dl,BYTE PTR [edi-0x3ba3d1e2]
  41d00f:	bound  edx,QWORD PTR [edi+0x51]
  41d012:	loopne 0x41d055
  41d014:	add    cl,ch
  41d016:	jne    0x41d05d
  41d018:	clc    
  41d019:	mov    ecx,0x4e4fc37b
  41d01e:	or     al,0x17
  41d020:	std    
  41d021:	mov    esp,0x53299eec
  41d026:	xchg   BYTE PTR [ebx-0x4e3bc678],ch
  41d02c:	jae    0x41d02f
  41d02e:	jb     0x41d05d
  41d030:	clc    
  41d031:	jmp    0xaaccb53c
  41d036:	and    BYTE PTR [eax],bh
  41d038:	mov    ebp,DWORD PTR [edx-0x6b02c7f4]
  41d03e:	pop    eax
  41d03f:	jg     0x41d006
  41d041:	add    BYTE PTR [edx],al
  41d043:	scas   al,BYTE PTR es:[edi]
  41d044:	jmp    0xbd69de48
  41d049:	jne    0x41d059
  41d04b:	jg     0x41d08e
  41d04d:	clc    
  41d04e:	fs pop esp
  41d050:	xor    al,0x2c
  41d052:	or     eax,0x6438573
  41d057:	pop    ebx
  41d058:	push   esi
  41d059:	fwait
  41d05a:	mov    ebp,0xa438572
  41d05f:	jle    0x41d0a2
  41d061:	or     BYTE PTR [eax],al
  41d063:	add    BYTE PTR [eax],al
  41d065:	arpl   WORD PTR [edi+0x4],ax
  41d068:	jmp    0x3d4292
  41d06d:	pop    ecx
  41d06e:	mov    esp,0xbbec5ffb
  41d073:	mov    esi,0x8738ca0c
  41d078:	in     al,dx
  41d079:	sbb    DWORD PTR [eax+0x20],esp
  41d07c:	push   ebx
  41d07d:	adc    esp,ecx
  41d07f:	xchg   DWORD PTR [ebp-0x66],eax
  41d082:	push   es
  41d083:	mov    edi,0xe7fe9656
  41d088:	push   0x8bfb717d
  41d08d:	or     ch,BYTE PTR [ecx]
  41d08f:	repz jne 0x41d027
  41d092:	mov    dh,0xbc
  41d094:	jmp    0x41d3f7
  41d099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d09a:	(bad)  [ecx]
  41d09c:	lea    edi,[edi]
  41d09e:	iret   
  41d09f:	push   esp
  41d0a0:	call   0x41ba79
  41d0a5:	fucomip st,st(0)
  41d0a7:	sti    
  41d0a8:	push   eax
  41d0a9:	shr    DWORD PTR [edx+0x4c],0x53
  41d0ad:	std    
  41d0ae:	fadd   DWORD PTR [edi]
  41d0b0:	call   0x3d2d20
  41d0b5:	ret    
  41d0b6:	call   0xd81c56b2
  41d0bb:	pusha  
  41d0bc:	push   0xfffffff3
  41d0be:	mov    ds:0x6d0f4285,eax
  41d0c3:	mov    bl,0x72
  41d0c5:	add    eax,DWORD PTR [ecx]
  41d0c7:	push   cs
  41d0c8:	pop    eax
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    ch,ah
  41d0cd:	pop    ebp
  41d0ce:	add    BYTE PTR [ecx+0x4285a12f],al
  41d0d4:	jge    0xabbce38d
  41d0da:	inc    eax
  41d0db:	add    BYTE PTR [eax-0x25],bh
  41d0de:	stos   DWORD PTR es:[edi],eax
  41d0df:	sub    BYTE PTR [esi],bh
  41d0e1:	test   al,0x52
  41d0e3:	std    
  41d0e4:	data16 test al,0x56
  41d0e7:	call   0xfcf38e44
  41d0ec:	and    esi,DWORD PTR [ebx]
  41d0ee:	aas    
  41d0ef:	in     al,dx
  41d0f0:	and    ch,BYTE PTR [ebx]
  41d0f2:	add    BYTE PTR [edx],dh
  41d0f4:	and    cl,al
  41d0f6:	push   ds
  41d0f7:	in     eax,dx
  41d0f8:	mov    ch,0x6d
  41d0fa:	jle    0x41d137
  41d0fc:	icebp  
  41d0fd:	sbb    BYTE PTR [edi-0x4],al
  41d100:	fcomp  DWORD PTR [ecx-0x24]
  41d103:	xlat   BYTE PTR ds:[ebx]
  41d104:	lock jmp 0x3e08:0x1b4350ab
  41d10c:	and    edi,DWORD PTR [eax+0x56]
  41d10f:	in     eax,dx
  41d110:	test   DWORD PTR ds:0x7f427f,ebx
  41d116:	push   ds
  41d117:	add    eax,esi
  41d119:	sub    BYTE PTR [ecx+0x56],bl
  41d11c:	pop    ebx
  41d11d:	out    0x9a,eax
  41d11f:	cld    
  41d120:	fs xor eax,esp
  41d123:	jb     0x41d10e
  41d125:	pop    ebp
  41d126:	cwde   
  41d127:	inc    DWORD PTR [ebp+0x4e]
  41d12a:	mov    cl,0x30
  41d12c:	xor    edi,DWORD PTR [ecx]
  41d12e:	or     edi,ebp
  41d130:	add    BYTE PTR [eax],al
  41d132:	add    BYTE PTR [esi-0x108d4e41],bh
  41d138:	jg     0x41d0d2
  41d13a:	sub    eax,DWORD PTR [edi+eax*1+0x25]
  41d13e:	mov    bl,0x7b
  41d140:	dec    esp
  41d141:	repz jl 0x41d118
  41d144:	xchg   ecx,eax
  41d145:	sub    eax,0xe9a2b1df
  41d14a:	dec    eax
  41d14b:	add    eax,DWORD PTR [esi-0x5b]
  41d14e:	dec    esi
  41d14f:	xor    al,0xc9
  41d151:	(bad)  
  41d152:	add    esp,DWORD PTR [eax+0x8870291]
  41d158:	and    ebp,DWORD PTR [edx+0x29]
  41d15b:	outs   dx,DWORD PTR ds:[esi]
  41d15c:	pop    es
  41d15d:	je     0x41d1a7
  41d15f:	ja     0x41d197
  41d161:	fidivr WORD PTR [eax]
  41d163:	sti    
  41d164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d165:	sti    
  41d166:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d168:	dec    ecx
  41d169:	out    0x4c,eax
  41d16b:	cmp    al,0x8c
  41d16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d16e:	cmp    ch,dh
  41d170:	inc    esi
  41d171:	add    BYTE PTR [ecx+0x77],cl
  41d174:	sbb    ch,cl
  41d176:	idiv   BYTE PTR [edi+ecx*8-0x58]
  41d17a:	pop    es
  41d17b:	repz cmp eax,0xed737a6
  41d181:	sahf   
  41d182:	sbb    bh,cl
  41d184:	pop    esi
  41d185:	sub    DWORD PTR [edx+ebp*2],eax
  41d188:	sahf   
  41d189:	das    
  41d18a:	mov    DWORD PTR [edi-0x367c2be6],edx
  41d190:	stos   DWORD PTR es:[edi],eax
  41d191:	push   ecx
  41d192:	inc    esi
  41d193:	repz push es
  41d195:	sti    
  41d196:	out    0x0,eax
  41d198:	add    BYTE PTR [eax],al
  41d19a:	xchg   esp,eax
  41d19b:	push   ecx
  41d19c:	ins    BYTE PTR es:[edi],dx
  41d19d:	mov    cl,0x77
  41d19f:	mov    ah,BYTE PTR [esi]
  41d1a1:	aaa    
  41d1a2:	or     bh,BYTE PTR ds:0x499cff9d
  41d1a8:	out    0x59,eax
  41d1aa:	pop    esi
  41d1ab:	sti    
  41d1ac:	cmp    dl,BYTE PTR ds:0x9b9e06b3
  41d1b2:	test   eax,0x9eb23d9b
  41d1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1b8:	(bad)  
  41d1b9:	fild   DWORD PTR [eax-0x5d16c009]
  41d1bf:	pop    esp
  41d1c1:	(bad)  
  41d1c2:	xor    eax,0xdc725636
  41d1c7:	jmp    0x56fb:0xf861bf0b
  41d1ce:	lods   eax,DWORD PTR ds:[esi]
  41d1cf:	push   es
  41d1d0:	mov    DWORD PTR [ecx],esp
  41d1d2:	mov    edi,0x1774d889
  41d1d7:	mov    ch,dh
  41d1d9:	jge    0x41d1d6
  41d1db:	fadd   QWORD PTR [edx]
  41d1dd:	add    al,0x95
  41d1df:	inc    esi
  41d1e0:	add    BYTE PTR [ebp-0x34],bl
  41d1e3:	lods   al,BYTE PTR ds:[esi]
  41d1e4:	add    ah,bl
  41d1e6:	mov    eax,ds:0x1ba983a3
  41d1eb:	jmp    0x41d241
  41d1ed:	mov    ?,ebx
  41d1ef:	pop    esi
  41d1f0:	inc    eax
  41d1f1:	jmp    0xcd547421
  41d1f6:	fld    QWORD PTR [esi+0x0]
  41d1f9:	rcr    DWORD PTR [eax+ebx*4-0x4],0xae
  41d1fe:	add    BYTE PTR [eax],al
  41d200:	add    BYTE PTR [esi-0x64],ch
  41d203:	cld    
  41d204:	sbb    eax,0x9780aef4
  41d209:	bound  esp,QWORD PTR [ebx-0x68fb69ac]
  41d20f:	adc    DWORD PTR [ecx],ebp
  41d211:	out    dx,eax
  41d212:	inc    ecx
  41d213:	pop    esi
  41d214:	jb     0x41d1cc
  41d216:	aas    
  41d217:	rcl    DWORD PTR [esi],0x6
  41d21a:	sbb    al,0x74
  41d21c:	ret    0x1ec8
  41d21f:	je     0x41d1d2
  41d221:	xchg   DWORD PTR [eax],esp
  41d223:	and    al,0xf5
  41d225:	out    dx,eax
  41d226:	dec    ebx
  41d227:	jo     0x41d217
  41d229:	and    eax,0xf7e52423
  41d22e:	dec    esi
  41d22f:	js     0x41d1e7
  41d231:	shl    DWORD PTR [ecx-0x501ff8d],0xe7
  41d238:	aaa    
  41d239:	mov    ah,0x58
  41d23b:	sti    
  41d23c:	add    DWORD PTR [edx-0x7db77910],eax
  41d242:	mov    bl,0x44
  41d244:	je     0x41d1d5
  41d246:	push   cs
  41d247:	cmp    BYTE PTR [eax-0x79],0x8
  41d24b:	je     0x41d25a
  41d24d:	jb     0x41d1f3
  41d24f:	mov    ah,0x43
  41d251:	or     dl,BYTE PTR [edi+0x11]
  41d254:	lock sub BYTE PTR [eax+0x0],cl
  41d258:	jmp    0x41d28c
  41d25a:	mov    BYTE PTR [esp+edi*2+0xa],dh
  41d25e:	ds je  0x41d274
  41d261:	xchg   ecx,eax
  41d262:	call   0xce00:0x87e4
  41d269:	push   esi
  41d26a:	sti    
  41d26b:	adc    edx,0x56
  41d26e:	jo     0x41d289
  41d270:	mov    dl,0x14
  41d272:	idiv   bh
  41d274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d275:	or     BYTE PTR [esi],0x8d
  41d278:	or     bl,bl
  41d27a:	cli    
  41d27b:	mov    ss:0x85feea30,al
  41d281:	add    DWORD PTR [eax],edx
  41d283:	push   esi
  41d284:	mov    dl,0x2d
  41d286:	jmp    0x41d286
  41d288:	push   ebp
  41d289:	dec    DWORD PTR [ebx]
  41d28b:	mov    eax,0x15fb0ad9
  41d290:	jp     0x41d28b
  41d292:	aas    
  41d293:	add    ah,al
  41d295:	and    esp,eax
  41d297:	pop    edi
  41d298:	pop    eax
  41d299:	lahf   
  41d29a:	cld    
  41d29b:	mov    bl,BYTE PTR [ebx-0x5e8b4374]
  41d2a1:	fild   WORD PTR [esi-0x75f451ac]
  41d2a7:	adc    al,0x6a
  41d2a9:	xchg   esi,esi
  41d2ab:	or     eax,0xfa800c3e
  41d2b0:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2b2:	xor    eax,0x7ba65407
  41d2b7:	iret   
  41d2b8:	mov    ebx,0x4d72d332
  41d2bd:	out    dx,eax
  41d2be:	add    al,0x0
  41d2c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2c1:	sub    BYTE PTR [ebp-0x7e2ab080],bl
  41d2c7:	jmp    0x41d250
  41d2c9:	lods   eax,DWORD PTR ds:[esi]
  41d2ca:	add    BYTE PTR [eax],al
  41d2cc:	add    BYTE PTR [eax],al
  41d2ce:	add    al,al
  41d2d0:	pop    ebx
  41d2d1:	jnp    0x41d345
  41d2d3:	jmp    0x41d2fd
  41d2d5:	inc    edi
  41d2d6:	or     BYTE PTR [ebp+ebx*2-0x5628bc87],bh
  41d2dd:	scas   eax,DWORD PTR es:[edi]
  41d2de:	adc    cl,BYTE PTR [ebx+0x6a0040bf]
  41d2e4:	jno    0x41d2ca
  41d2e6:	sbb    ebp,DWORD PTR [eax+0x6b]
  41d2e9:	loopne 0x41d271
  41d2eb:	aaa    
  41d2ec:	adc    al,0xdc
  41d2ee:	mov    BYTE PTR ds:0x6a291a0c,ch
  41d2f4:	hlt    
  41d2f5:	out    0x2f,eax
  41d2f7:	push   sp
  41d2f9:	call   0x42f9fe4d
  41d2fe:	inc    esp
  41d2ff:	repz scas eax,DWORD PTR es:[edi]
  41d301:	jg     0x41d346
  41d303:	pop    ss
  41d304:	adc    al,0x54
  41d306:	mov    DWORD PTR [ebx+eax*2+0x6943184e],ebp
  41d30d:	lock sub BYTE PTR [ebp+0x6a35ad9c],0xdc
  41d315:	out    0x1f,eax
  41d317:	push   0xfffffffc
  41d319:	out    0x23,eax
  41d31b:	(bad)  [esp+edi*8+0x24302d84]
  41d323:	retf   
  41d324:	scas   eax,DWORD PTR es:[edi]
  41d325:	jnp    0x41d36a
  41d327:	iret   
  41d328:	iret   
  41d329:	jns    0x41d36d
  41d32b:	sti    
  41d32c:	push   es
  41d32d:	jb     0x41d36b
  41d32f:	test   DWORD PTR [ebp+0x13a6],0xb537400
  41d339:	hlt    
  41d33a:	ins    DWORD PTR es:[edi],dx
  41d33b:	dec    ebx
  41d33c:	add    edi,eax
  41d33e:	dec    DWORD PTR [edx+0x6f30497]
  41d344:	ins    BYTE PTR es:[edi],dx
  41d345:	dec    eax
  41d346:	pop    ss
  41d347:	call   DWORD PTR [esi-0x18cf8365]
  41d34d:	add    esi,DWORD PTR [edi-0x39]
  41d350:	cmc    
  41d351:	xchg   edi,esp
  41d353:	pop    es
  41d354:	out    0x3,eax
  41d356:	mov    esi,ebp
  41d358:	arpl   WORD PTR [eax],si
  41d35a:	iret   
  41d35b:	loop   0x41d30b
  41d35d:	fwait
  41d35e:	adc    BYTE PTR [esi-0x19],al
  41d361:	add    edi,DWORD PTR [edx-0x36]
  41d364:	xchg   esi,eax
  41d365:	scas   al,BYTE PTR es:[edi]
  41d366:	ret    
  41d367:	mov    eax,ds:0xaed19bbc
  41d36c:	in     eax,dx
  41d36d:	scas   al,BYTE PTR es:[edi]
  41d36e:	out    dx,eax
  41d36f:	fdiv   DWORD PTR [ecx-0x46]
  41d372:	ins    DWORD PTR es:[edi],dx
  41d373:	add    eax,0xa1dfd9cf
  41d378:	aad    0x19
  41d37a:	jmp    0x5129f612
  41d37f:	aaa    
  41d380:	(bad)  
  41d381:	aaa    
  41d382:	pand   mm7,QWORD PTR [ebp+0x26f91b18]
  41d389:	add    al,0x72
  41d38b:	retf   0x19da
  41d38e:	fst    DWORD PTR [ebx+0x3ee8e822]
  41d394:	(bad)  
  41d395:	pusha  
  41d396:	xor    eax,DWORD PTR [edi]
  41d398:	out    0x80,eax
  41d39a:	add    BYTE PTR [eax],al
  41d39c:	add    BYTE PTR [eax],dh
  41d39e:	jmp    0x41d3ca
  41d3a0:	push   esp
  41d3a1:	jp     0x41d36c
  41d3a3:	push   ss
  41d3a4:	scas   eax,DWORD PTR es:[edi]
  41d3a5:	ret    
  41d3a6:	mov    eax,ds:0xa8b79bb4
  41d3ab:	push   DWORD PTR [ebp+0x45]
  41d3ae:	test   BYTE PTR [edi+0x438c5af5],bh
  41d3b4:	or     eax,0xf4fd370f
  41d3b9:	or     ch,dh
  41d3bb:	aas    
  41d3bc:	jmp    0xe2429d9a
  41d3c1:	push   0x9547e863
  41d3c6:	test   DWORD PTR [edi-0x318b12],edi
  41d3cc:	call   0x58561c1
  41d3d1:	xlat   BYTE PTR ds:[ebx]
  41d3d2:	mov    DWORD PTR ss:[esi],ebp
  41d3d5:	shl    BYTE PTR [ebx-0x56d9e1d0],0x56
  41d3dc:	add    DWORD PTR [ebp-0x5e],eax
  41d3df:	cld    
  41d3e0:	xlat   BYTE PTR ds:[ebx]
  41d3e1:	mov    esi,ecx
  41d3e3:	xchg   dl,ch
  41d3e5:	push   0x4efefd5c
  41d3ea:	scas   al,BYTE PTR es:[edi]
  41d3eb:	dec    eax
  41d3ec:	or     DWORD PTR [eax],0xffffff8c
  41d3ef:	jnp    0x41d3b6
  41d3f1:	inc    eax
  41d3f2:	aas    
  41d3f3:	call   0x490633
  41d3f8:	ins    BYTE PTR es:[edi],dx
  41d3f9:	sub    ebp,ebx
  41d3fb:	pop    edi
  41d3fc:	cmp    DWORD PTR [esp+eax*2+0x24],edx
  41d400:	or     eax,0x27000000
  41d405:	mov    es,esp
  41d407:	sbb    ecx,ebp
  41d409:	repnz pop esp
  41d40b:	ins    BYTE PTR es:[edi],dx
  41d40c:	cmp    esp,esp
  41d40e:	jg     0x41d3f9
  41d410:	lock push es
  41d412:	call   0xfce57b2a
  41d417:	push   0xffffffbb
  41d419:	or     al,0x83
  41d41b:	test   eax,0x158920db
  41d420:	mov    edx,DWORD PTR [eax]
  41d422:	mov    DWORD PTR [edi+0x88b80a],ebx
  41d428:	(bad)  
  41d429:	scas   al,BYTE PTR es:[edi]
  41d42a:	adc    BYTE PTR [ecx+0x62],dl
  41d42d:	inc    edx
  41d42e:	jmp    0xbcc9d231
  41d433:	je     0x41d427
  41d435:	sbb    eax,0x1f662471
  41d43a:	fmul   QWORD PTR [ebx+0x24791f49]
  41d440:	out    dx,al
  41d441:	pop    ds
  41d442:	dec    ecx
  41d443:	cmp    BYTE PTR [esi+0x7c],dl
  41d446:	cmp    ch,bl
  41d448:	lods   al,BYTE PTR ds:[esi]
  41d449:	jno    0x41d3cb
  41d44b:	rol    BYTE PTR [esi+0x490386e3],0xa
  41d452:	push   0x4
  41d454:	xor    cl,BYTE PTR [eax+0x341a4074]
  41d45a:	call   0xfbb2c286
  41d45f:	mov    ecx,DWORD PTR [edi+eax*4]
  41d462:	inc    DWORD PTR [ebx]
  41d464:	sbb    DWORD PTR [edi+0xff53],ebx
  41d46a:	add    BYTE PTR [esi-0x1daed759],al
  41d470:	imul   ebx
  41d472:	(bad)  
  41d473:	std    
  41d474:	add    al,0x37
  41d476:	mov    ebx,DWORD PTR [edi-0x64]
  41d479:	sti    
  41d47a:	ja     0x41d47e
  41d47c:	or     eax,0xffffffeb
  41d47f:	mov    esp,0xbd068772
  41d484:	xlat   BYTE PTR ds:[ebx]
  41d485:	and    ebp,DWORD PTR [eax]
  41d487:	push   ebx
  41d488:	dec    ebx
  41d489:	sub    BYTE PTR [ebx+0x2c441cd9],cl
  41d48f:	mov    ds:0x7dfee82c,al
  41d494:	std    
  41d495:	adc    edx,DWORD PTR [esi-0x4e]
  41d498:	sub    ecx,ebp
  41d49a:	dec    BYTE PTR [ebp+0x13]
  41d49d:	(bad)  
  41d49e:	jmp    0xd7f3:0x5fbc9588
  41d4a5:	inc    esi
  41d4a6:	mov    DWORD PTR [esi-0xcfc3e0e],edx
  41d4ac:	add    dh,BYTE PTR [edi-0x15]
  41d4af:	jo     0x41d442
  41d4b1:	and    al,0x51
  41d4b3:	sbb    eax,0x730c3625
  41d4b8:	scas   eax,DWORD PTR es:[edi]
  41d4b9:	cld    
  41d4ba:	(bad)  
  41d4bb:	mov    ebp,0xf3f08598
  41d4c0:	lods   eax,DWORD PTR ds:[esi]
  41d4c1:	add    BYTE PTR [ecx+0x627fa5dd],cl
  41d4c7:	dec    edi
  41d4c8:	lods   eax,DWORD PTR ds:[esi]
  41d4c9:	jge    0x41d50d
  41d4cb:	inc    edi
  41d4cc:	jge    0x41d4e4
  41d4ce:	push   ss
  41d4cf:	add    BYTE PTR [eax],al
  41d4d1:	add    BYTE PTR [ebp+0x34a0b735],ah
  41d4d7:	fdiv   DWORD PTR [edi-0x29]
  41d4da:	jp     0x41d46e
  41d4dc:	test   al,0x82
  41d4de:	dec    eax
  41d4df:	add    BYTE PTR [ebx],0x32
  41d4e2:	xor    esi,esi
  41d4e4:	mov    ?,esi
  41d4e6:	adc    al,0xad
  41d4e8:	push   ss
  41d4e9:	sub    bh,BYTE PTR [esi-0x6e]
  41d4ec:	aam    0x57
  41d4ee:	sbb    ecx,DWORD PTR [ebx+0x73f3003e]
  41d4f4:	fmul   DWORD PTR [edx-0x17b7128a]
  41d4fa:	inc    esp
  41d4fb:	jb     0x41d4fd
  41d4fd:	add    BYTE PTR [esi-0x15],dh
  41d500:	iret   
  41d501:	dec    edi
  41d502:	fdiv   QWORD PTR [ebx]
  41d504:	test   al,0x50
  41d506:	retf   
  41d507:	sbb    eax,0x29ccfca2
  41d50c:	mov    ecx,0x9c01234e
  41d511:	mov    dl,ch
  41d513:	pop    ebp
  41d514:	test   al,0x50
  41d516:	data16 jecxz 0x41d4c0
  41d519:	xchg   BYTE PTR [esi],dh
  41d51b:	ins    BYTE PTR es:[edi],dx
  41d51c:	fwait
  41d51d:	mov    fs,WORD PTR [esi+0x1caba607]
  41d523:	loop   0x41d50b
  41d525:	xor    bl,ch
  41d527:	cmp    DWORD PTR [edi-0x1f],edi
  41d52a:	fwait
  41d52b:	popf   
  41d52c:	lea    ebx,[edi+0x78bf3143]
  41d532:	stc    
  41d533:	mov    ds:0x9c1e,al
  41d538:	add    al,bl
  41d53a:	dec    eax
  41d53b:	out    0x3,eax
  41d53d:	(bad)  
  41d53f:	pop    ebx
  41d540:	sub    DWORD PTR [ebx+0x3f],esp
  41d543:	dec    edi
  41d544:	adc    eax,0x7ee706b1
  41d549:	das    
  41d54a:	aaa    
  41d54b:	fs inc ecx
  41d54d:	xor    esi,DWORD PTR [edi]
  41d54f:	pop    esp
  41d550:	inc    ecx
  41d551:	dec    edi
  41d552:	aaa    
  41d553:	shl    esi,1
  41d555:	lahf   
  41d556:	mov    esi,DWORD PTR [ebx+0x5fe4c87]
  41d55c:	stos   DWORD PTR es:[edi],eax
  41d55d:	das    
  41d55e:	mov    ah,BYTE PTR [edx]
  41d560:	clc    
  41d561:	jno    0x41d52a
  41d563:	call   0xa5cc:0x71cd6bc0
  41d56a:	mov    edx,DWORD PTR [ebx+0xf4479a7]
  41d570:	pushf  
  41d571:	jle    0x41d524
  41d573:	add    al,0xab
  41d575:	jno    0x41d53e
  41d577:	jb     0x41d567
  41d579:	mov    WORD PTR [edx+0x30f3436e],es
  41d57f:	jecxz  0x41d5cf
  41d581:	js     0x41d5c6
  41d583:	fistp  WORD PTR [ebx-0x55234dae]
  41d589:	jno    0x41d551
  41d58b:	pop    edx
  41d58c:	jecxz  0x41d609
  41d58e:	inc    ebx
  41d58f:	fistp  QWORD PTR [esi+0x39]
  41d592:	lahf   
  41d593:	jno    0x41d5e5
  41d595:	mov    edi,0xd87ba1d9
  41d59a:	idiv   edi
  41d59c:	pop    edi
  41d59d:	add    BYTE PTR [eax],al
  41d59f:	add    al,ch
  41d5a1:	push   ss
  41d5a2:	xchg   DWORD PTR [ecx],ebx
  41d5a4:	jecxz  0x41d52b
  41d5a6:	push   edi
  41d5a7:	and    ecx,edx
  41d5a9:	test   DWORD PTR [edi+0x1d],edx
  41d5ac:	adc    al,0x49
  41d5ae:	or     al,0xaf
  41d5b0:	xor    BYTE PTR [ebx],cl
  41d5b2:	(bad)  
  41d5b3:	jg     0x41d5fd
  41d5b5:	popf   
  41d5b6:	cld    
  41d5b7:	jmp    0x913a16b9
  41d5bc:	ficomp DWORD PTR [ebx+0xf0876fc]
  41d5c2:	adc    cl,ch
  41d5c4:	lock scas al,BYTE PTR es:[edi]
  41d5c6:	ins    BYTE PTR es:[edi],dx
  41d5c7:	push   ebx
  41d5c8:	mov    bl,BYTE PTR [edx-0x418cbe78]
  41d5ce:	or     al,0x6d
  41d5d0:	jecxz  0x41d56d
  41d5d2:	cld    
  41d5d3:	dec    esi
  41d5d4:	retf   
  41d5d5:	push   eax
  41d5d6:	or     al,0x98
  41d5d8:	fadd   DWORD PTR [esi]
  41d5da:	adc    cl,ch
  41d5dc:	lock xchg ecx,eax
  41d5de:	inc    eax
  41d5df:	out    dx,eax
  41d5e0:	rcr    BYTE PTR [ebx-0x7a61e8b],0x8f
  41d5e7:	cld    
  41d5e8:	mov    al,0x6
  41d5ea:	and    DWORD PTR [ecx],0xd2830bef
  41d5f0:	pop    ecx
  41d5f1:	call   0x7c00:0xadb6afc
  41d5f8:	jmp    0xa0e2d92d
  41d5fd:	mov    WORD PTR cs:[ecx+0x30],?
  41d601:	pop    es
  41d602:	push   ecx
  41d603:	add    DWORD PTR [eax],eax
  41d605:	add    BYTE PTR [eax],al
  41d607:	imul   ebp,DWORD PTR [esi+0x4958e6fd],0xc
  41d60e:	rol    DWORD PTR [eax-0x67],1
  41d611:	cld    
  41d612:	(bad)  
  41d613:	dec    esi
  41d614:	dec    ecx
  41d615:	or     dh,cl
  41d617:	das    
  41d618:	add    ebp,ecx
  41d61a:	add    bh,bl
  41d61c:	ins    DWORD PTR es:[edi],dx
  41d61d:	jno    0x41d62b
  41d61f:	inc    ecx
  41d620:	push   edx
  41d621:	fs xchg esp,eax
  41d623:	loop   0x41d667
  41d625:	add    BYTE PTR [edx-0x71],ch
  41d628:	dec    edi
  41d629:	call   0xfbb19a85
  41d62e:	pop    ecx
  41d62f:	xor    eax,DWORD PTR [edx+0x1c95fff4]
  41d635:	idiv   dh
  41d637:	jne    0x41d6a7
  41d639:	(bad)  
  41d63a:	(bad)  
  41d63b:	mov    ss,WORD PTR [eax]
  41d63d:	or     DWORD PTR [edx],ecx
  41d63f:	or     ebx,eax
  41d641:	inc    BYTE PTR [edx+0x107408e2]
  41d647:	aad    0xeb
  41d649:	or     ecx,DWORD PTR [ebp-0x72b2f95f]
  41d64f:	inc    esi
  41d650:	adc    BYTE PTR [ebp-0x18],cl
  41d653:	cwde   
  41d654:	jp     0x41d650
  41d656:	call   FWORD PTR [ebx-0x23]
  41d659:	or     ecx,DWORD PTR [ebx+0x4c2948f]
  41d65f:	push   edx
  41d660:	xchg   ebp,eax
  41d661:	sti    
  41d662:	inc    ebp
  41d663:	push   ss
  41d664:	sbb    eax,DWORD PTR [edx+0xc]
  41d667:	int3   
  41d668:	push   es
  41d669:	sbb    BYTE PTR [edx],cl
  41d66b:	add    BYTE PTR [eax],al
  41d66d:	add    ch,dl
  41d66f:	fisttp DWORD PTR [ebx]
  41d671:	mov    ecx,DWORD PTR [edi-0x60]
  41d674:	xchg   DWORD PTR [ebp+0x16],ecx
  41d677:	sbb    DWORD PTR [eax+edi*2+0x1a],0x21
  41d67c:	push   ebp
  41d67d:	jo     0x41d602
  41d67f:	fidiv  DWORD PTR [ebx+0x66]
  41d682:	int    0x42
  41d684:	jl     0x41d686
  41d686:	ficom  DWORD PTR [edi]
  41d688:	(bad)  
  41d689:	pop    esi
  41d68a:	je     0x41d6d6
  41d68c:	(bad)
  41d68f:	pop    es
  41d690:	xchg   DWORD PTR [eax-0x32],eax
  41d693:	ss sti 
  41d695:	je     0x41d68a
  41d697:	or     esp,edi
  41d699:	mov    cl,BYTE PTR [ebx-0x6a]
  41d69c:	cmp    DWORD PTR [edi-0x15ac4a19],0xffffffb5
  41d6a3:	pop    esp
  41d6a4:	scas   eax,DWORD PTR es:[edi]
  41d6a5:	xlat   BYTE PTR ds:[ebx]
  41d6a6:	or     BYTE PTR [esi-0x51],ch
  41d6a9:	xlat   BYTE PTR ds:[ebx]
  41d6aa:	inc    esp
  41d6ab:	jo     0x41d6a9
  41d6ad:	inc    DWORD PTR [edi+0x19]
  41d6b0:	xchg   ebp,eax
  41d6b1:	add    BYTE PTR [edi+0x785653b1],0x7e
  41d6b8:	jnp    0x41d6ff
  41d6ba:	jmp    0x41d6e4
  41d6bc:	cmp    DWORD PTR [esp],eax
  41d6bf:	pop    ss
  41d6c0:	dec    esi
  41d6c1:	clc    
  41d6c2:	push   0xffffffe2
  41d6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6c5:	cmp    BYTE PTR [edx],0xa4
  41d6c8:	jl     0x41d749
  41d6ca:	rep lods eax,DWORD PTR ds:[esi]
  41d6cc:	add    BYTE PTR [ecx+0x730099da],al
  41d6d2:	add    BYTE PTR [eax],al
  41d6d4:	add    BYTE PTR [ebx-0x31751049],dh
  41d6da:	dec    ecx
  41d6db:	dec    ecx
  41d6dc:	call   0x42444d
  41d6e1:	in     al,dx
  41d6e2:	sbb    al,0x3f
  41d6e4:	adc    ah,BYTE PTR [ebx+0x3456fac]
  41d6ea:	jle    0x41d767
  41d6ec:	(bad)
  41d6f0:	pop    ebp
  41d6f1:	outs   dx,BYTE PTR ds:[esi]
  41d6f2:	jp     0x41d6a8
  41d6f4:	out    0x80,eax
  41d6f6:	retf   0xfca7
  41d6f9:	jo     0x41d6e4
  41d6fb:	hlt    
  41d6fc:	xor    BYTE PTR [ebx],0x71
  41d6ff:	adc    DWORD PTR [ecx-0x7736e7d3],ecx
  41d705:	scas   al,BYTE PTR es:[edi]
  41d706:	cdq    
  41d707:	dec    esi
  41d708:	call   0xfce66881
  41d70d:	outs   dx,DWORD PTR ds:[esi]
  41d70e:	lock sub eax,0xaf077021
  41d714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d715:	retf   
  41d716:	fist   DWORD PTR [eax+0x2]
  41d719:	sub    bl,bh
  41d71b:	das    
  41d71c:	or     BYTE PTR [eax+0x0],al
  41d71f:	(bad)  
  41d720:	lds    ebp,FWORD PTR [ecx+0x1f]
  41d723:	fistp  WORD PTR [ebx]
  41d725:	fist   WORD PTR [ebx]
  41d727:	daa    
  41d728:	add    al,0x72
  41d72a:	(bad)  
  41d72b:	ficomp DWORD PTR [ebx-0x58534f46]
  41d731:	jno    0x41d6fa
  41d733:	xchg   ecx,eax
  41d734:	retf   
  41d735:	imul   eax,DWORD PTR [ebx+ebx*4+0x7b],0x0
  41d73a:	add    BYTE PTR [eax],al
  41d73c:	int3   
  41d73d:	add    dl,BYTE PTR [esi+0x2b8e8b31]
  41d743:	cld    
  41d744:	mov    dh,0x47
  41d746:	jecxz  0x41d74c
  41d748:	push   0x44
  41d74a:	jnp    0x41d6e8
  41d74c:	mov    ah,0x99
  41d74e:	jne    0x41d6f7
  41d750:	jo     0x41d719
  41d752:	repnz les esp,FWORD PTR [ebx]
  41d755:	mov    ebp,0x28cfba45
  41d75b:	add    bl,dh
  41d75d:	xor    eax,0x187a4dbc
  41d762:	out    dx,eax
  41d763:	jp     0x41d71b
  41d765:	add    dh,BYTE PTR [edx-0x66]
  41d768:	jno    0x41d731
  41d76a:	mov    dl,0xe9
  41d76c:	lods   al,BYTE PTR ds:[esi]
  41d76d:	push   ds
  41d76e:	rol    DWORD PTR [ecx+ebx*4],cl
  41d771:	add    al,0x92
  41d773:	xor    dl,bh
  41d775:	xor    DWORD PTR [esp+ebp*1-0x5],esi
  41d779:	push   DWORD PTR cs:[eax]
  41d77c:	mov    bl,0x6
  41d77e:	push   0xffffffc4
  41d780:	loopne 0x41d730
  41d782:	mov    ds,WORD PTR [esi+edi*8+0x3480a599]
  41d789:	adc    al,0xe4
  41d78b:	xor    BYTE PTR [ecx+ebx*4-0x7008fe01],0x45
  41d793:	in     eax,0x58
  41d795:	xor    bl,BYTE PTR [edx+esi*2]
  41d798:	sub    al,0xe3
  41d79a:	sysenter 
  41d79c:	dec    eax
  41d79d:	(bad)  
  41d79e:	out    0xdf,eax
  41d7a0:	add    BYTE PTR [eax],al
  41d7a2:	add    BYTE PTR [esi-0x4f9a0366],cl
  41d7a8:	adc    eax,0x3bb0fae3
  41d7ad:	pop    ebx
  41d7ae:	and    dh,BYTE PTR [ecx+0x2f620005]
  41d7b4:	inc    DWORD PTR [eax+0x7406f331]
  41d7ba:	leave  
  41d7bb:	sbb    edx,ebx
  41d7bd:	add    edi,DWORD PTR [edx]
  41d7bf:	or     BYTE PTR [esi],bh
  41d7c1:	and    al,0xe1
  41d7c3:	xor    eax,0x22c5778e
  41d7c8:	mov    BYTE PTR [edi-0x1928a737],bh
  41d7ce:	jg     0x41d765
  41d7d0:	cmp    bl,BYTE PTR [ecx+0x6c]
  41d7d3:	xor    BYTE PTR [ebx+eax*1],dl
  41d7d6:	push   0xffffff98
  41d7d8:	call   0xe5c1:0x5961ebe8
  41d7df:	lock or esi,DWORD PTR [ebp+0x3e8ff4b8]
  41d7e6:	icebp  
  41d7e7:	scas   al,BYTE PTR es:[edi]
  41d7e8:	pop    eax
  41d7e9:	(bad)  
  41d7ea:	jmp    0x2a7dedf
  41d7ef:	cmp    eax,0x71ec713b
  41d7f4:	lahf   
  41d7f5:	arpl   WORD PTR [edx+0x260f8ff3],di
  41d7fb:	mov    dl,0x2
  41d7fd:	data16 jb 0x41d7a7
  41d800:	repnz imul ebp,eax,0xe14f81e6
  41d807:	add    BYTE PTR [eax],al
  41d809:	add    BYTE PTR [eax-0x57],bl
  41d80c:	add    BYTE PTR [eax],al
  41d80e:	or     eax,DWORD PTR ds:0x3719c02f
  41d814:	xchg   esp,ebp
  41d816:	pop    ecx
  41d817:	jo     0x41d829
  41d819:	or     BYTE PTR [edi-0x35bc5899],0x4
  41d820:	dec    edi
  41d821:	push   esi
  41d822:	add    eax,0xd9838092
  41d827:	add    al,0x0
  41d829:	call   0x3c41ce
  41d82e:	inc    esi
  41d82f:	ret    
  41d830:	or     eax,DWORD PTR [esp+eiz*8+0x19000005]
  41d837:	loopne 0x41d844
  41d839:	add    BYTE PTR [ebp-0x75fc96e8],bh
  41d83f:	add    al,0x7f
  41d841:	jge    0x41d7cd
  41d843:	add    al,0xb
  41d845:	mov    ?,eax
  41d847:	add    eax,0xe8110000
  41d84c:	pop    es
  41d84d:	push   esi
  41d84e:	bound  eax,QWORD PTR [ebp+esi*8-0x1]
  41d852:	in     eax,dx
  41d853:	xchg   BYTE PTR [edi+ecx*1-0xcc2a],bh
  41d85a:	dec    edx
  41d85b:	pop    ds
  41d85c:	cmp    ch,ah
  41d85e:	pop    eax
  41d85f:	inc    esp
  41d860:	add    BYTE PTR [ebx+0x402c5e],bh
  41d866:	mov    DWORD PTR [ebx-0x2d],esp
  41d869:	call   0x3d49ce
  41d86e:	add    BYTE PTR [eax],al
  41d870:	add    bl,al
  41d872:	xlat   BYTE PTR ds:[ebx]
  41d873:	sti    
  41d874:	xor    DWORD PTR [edx-0xe7bf49f],0x5
  41d87b:	add    BYTE PTR [eax],al
  41d87d:	xor    eax,esp
  41d87f:	test   BYTE PTR [eax],al
  41d881:	or     al,BYTE PTR [edi+edi*8]
  41d884:	add    al,0x22
  41d886:	sub    al,0x40
  41d888:	add    bl,dh
  41d88a:	sub    al,0x2c
  41d88c:	je     0x41d881
  41d88e:	jb     0x41d88a
  41d890:	jg     0x41d90d
  41d892:	add    BYTE PTR [eax],0x74
  41d895:	add    ebx,DWORD PTR [ecx+0x1ae4102d]
  41d89b:	cmc    
  41d89c:	out    0xa6,eax
  41d89e:	xchg   esi,eax
  41d89f:	mov    ds:0xff01cafc,eax
  41d8a4:	push   ebx
  41d8a6:	adc    al,0xc9
  41d8a8:	mov    BYTE PTR [eax-0x3413b9da],bh
  41d8ae:	push   ss
  41d8af:	xchg   esp,eax
  41d8b0:	cld    
  41d8b1:	mov    ah,0x16
  41d8b3:	ds lock loopne 0x41d924
  41d8b7:	sbb    al,BYTE PTR [edi+0x42755a2e]
  41d8bd:	(bad)  
  41d8be:	es inc eax
  41d8c0:	push   eax
  41d8c1:	push   0x8530b3ea
  41d8c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8c7:	mov    edx,0x77e873
  41d8cc:	inc    DWORD PTR [eax]
  41d8ce:	nop
  41d8cf:	push   eax
  41d8d0:	std    
  41d8d1:	(bad)  
  41d8d2:	jno    0x41d86c
  41d8d4:	stc    
  41d8d5:	add    BYTE PTR [eax],al
  41d8d7:	add    BYTE PTR [eax+0x18],ch
  41d8da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8db:	xor    DWORD PTR [ebx],0xffffffa0
  41d8de:	jl     0x41d889
  41d8e0:	icebp  
  41d8e1:	lods   eax,DWORD PTR ds:[esi]
  41d8e2:	add    BYTE PTR [ecx-0x5167ce52],cl
  41d8e8:	js     0x41d94c
  41d8ea:	xchg   esp,eax
  41d8eb:	mov    BYTE PTR [ebx+0x29],ch
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	repz hlt 
  41d8f2:	lds    esi,FWORD PTR [ebp-0x65]
  41d8f5:	push   es
  41d8f6:	inc    ebp
  41d8f7:	adc    ah,bh
  41d8f9:	imul   eax,DWORD PTR [ebp+0x10],0xffffffc0
  41d8fd:	shl    BYTE PTR [eax+0x7f],1
  41d900:	rep lods eax,DWORD PTR ds:[esi]
  41d902:	add    ch,bh
  41d904:	sahf   
  41d905:	push   es
  41d906:	repz fwait
  41d908:	push   esp
  41d909:	lahf   
  41d90a:	sbb    al,0xa4
  41d90c:	jnp    0x41d94f
  41d90e:	add    ebx,edx
  41d910:	fs and dh,0x3
  41d914:	repz mov ebp,DWORD PTR [ebx+0x627f7b97]
  41d91b:	add    esi,ebx
  41d91d:	push   es
  41d91e:	mov    dl,0xb5
  41d920:	popa   
  41d921:	std    
  41d922:	in     eax,dx
  41d923:	jb     0x41d979
  41d925:	pop    es
  41d926:	out    0x3,eax
  41d928:	fild   DWORD PTR [edx-0x3a]
  41d92b:	mov    ds:0xb02b82c7,al
  41d930:	jne    0x41d989
  41d932:	data16 add al,0xf3
  41d935:	push   es
  41d936:	shl    ch,cl
  41d938:	jnp    0x41d8c1
  41d93a:	data16 add al,0x0
  41d93d:	add    BYTE PTR [eax],al
  41d93f:	repz push es
  41d941:	sbb    BYTE PTR [ecx+0x3417eee8],dl
  41d947:	mov    esp,DWORD PTR [edx]
  41d949:	mov    fs,WORD PTR [edx-0x4fdc7d71]
  41d94f:	fwait
  41d950:	sbb    eax,0x4a3b1055
  41d955:	out    0x39,eax
  41d957:	jbe    0x41d955
  41d959:	jbe    0x41d951
  41d95b:	sub    al,0x7
  41d95d:	jle    0x41d978
  41d95f:	add    edx,DWORD PTR [esi+0x1c5e0ffb]
  41d965:	fbld   TBYTE PTR [edx+0x479edb01]
  41d96b:	repz cmp DWORD PTR [esi],0x6c033087
  41d972:	mov    edi,0x5b67eef
  41d977:	repz push es
  41d979:	popf   
  41d97a:	mov    ds:0xbb38247,al
  41d97f:	sbb    esp,DWORD PTR [esi-0x1]
  41d982:	inc    ebx
  41d983:	push   eax
  41d984:	xchg   ebx,eax
  41d985:	mov    BYTE PTR [ecx],dh
  41d987:	adc    sp,di
  41d98a:	push   0x50
  41d98c:	xchg   ebx,eax
  41d98d:	or     al,0x65
  41d98f:	push   eax
  41d990:	xchg   ebp,eax
  41d991:	cld    
  41d992:	jmp    0xea31eb0c
  41d997:	fldenv gs:[edi]
  41d99a:	inc    ecx
  41d99b:	xor    al,0x7
  41d99d:	je     0x41d982
  41d99f:	jne    0x41d963
  41d9a1:	data16 and BYTE PTR [eax],al
  41d9a4:	add    BYTE PTR [eax],al
  41d9a6:	outs   dx,DWORD PTR ds:[esi]
  41d9a7:	xchg   ebp,eax
  41d9a8:	cld    
  41d9a9:	jmp    0x8d299e9b
  41d9ae:	adc    BYTE PTR [edx-0x68c48f04],0x82
  41d9b5:	test   eax,0xe8d68ae1
  41d9ba:	lock push es
  41d9bc:	mov    DWORD PTR [esi-0x16783921],ebp
  41d9c2:	lock push es
  41d9c4:	add    DWORD PTR [edi-0x513b791],ebp
  41d9ca:	jp     0x41da02
  41d9cc:	std    
  41d9cd:	sbb    al,0xe3
  41d9cf:	xchg   DWORD PTR [edi+0x657ad8e1],edi
  41d9d5:	sub    edi,esi
  41d9d7:	sahf   
  41d9d8:	mov    ebp,0x8906f07f
  41d9dd:	cmp    DWORD PTR [edi+0x10],0x184607f8
  41d9e4:	hlt    
  41d9e5:	jmp    DWORD PTR [edx]
  41d9e7:	or     BYTE PTR [edx+0x7d],0x1a
  41d9eb:	mov    BYTE PTR [esi+0x1f19f21],bh
  41d9f1:	call   0xde1eb9e6
  41d9f6:	cld    
  41d9f7:	jg     0x41da3b
  41d9f9:	cmp    eax,0x838d65
  41d9fe:	sbb    cl,BYTE PTR [ecx]
  41da00:	add    BYTE PTR [ebx],al
  41da02:	loope  0x41da7a
  41da04:	lods   al,BYTE PTR ds:[esi]
  41da05:	or     BYTE PTR [edx],0x9
  41da08:	add    al,ch
  41da0a:	add    BYTE PTR [eax],al
  41da0c:	add    BYTE PTR [edx-0x610005a2],bl
  41da12:	leave  
  41da13:	or     eax,DWORD PTR [edx+ebx*4-0x6efffff6]
  41da1a:	ds in  al,dx
  41da1c:	mov    edx,DWORD PTR [edx-0x25000373]
  41da22:	jg     0x41d9e9
  41da24:	je     0x41d9e4
  41da26:	test   DWORD PTR [eax+eax*4-0x36],edi
  41da2a:	or     BYTE PTR [eax],al
  41da2c:	lea    edi,[esi-0x7574b170]
  41da32:	arpl   WORD PTR [ebx-0x78995b1a],bx
  41da38:	inc    ebp
  41da39:	mov    dh,0x82
  41da3b:	dec    ecx
  41da3c:	or     al,0xf9
  41da3e:	or     ebx,ecx
  41da40:	push   ecx
  41da41:	mov    ch,0x3b
  41da43:	jge    0x41da45
  41da45:	call   0xfb69:0xac73e808
  41da4c:	mov    ecx,edi
  41da4e:	push   esi
  41da4f:	std    
  41da50:	xchg   edi,eax
  41da51:	push   ds
  41da52:	or     eax,DWORD PTR [eax]
  41da54:	add    BYTE PTR [ecx+0x11df876e],ch
  41da5a:	dec    esp
  41da5b:	lock cmp ecx,DWORD PTR [edi+ebp*8+0x21]
  41da60:	cmp    edx,DWORD PTR [ecx+ebp*8+0x45fff1d]
  41da67:	mov    DWORD PTR [eax+0x36],edi
  41da6a:	mov    edi,DWORD PTR [eax+ebp*1-0x11ce18e]
  41da71:	add    BYTE PTR [eax],al
  41da73:	add    ch,dl
  41da75:	mov    edi,DWORD PTR [edi+ecx*1-0x2fa32]
  41da7c:	repz popf 
  41da7e:	mov    eax,DWORD PTR [edx+0x43]
  41da81:	sub    DWORD PTR ds:0x29d3e0f8,ebx
  41da87:	aaa    
  41da88:	sahf   
  41da89:	(bad)  [esi]
  41da8b:	xchg   BYTE PTR [ebx-0x62],ch
  41da8e:	add    BYTE PTR [eax],al
  41da90:	fsubr  st,st(3)
  41da92:	push   cs
  41da93:	test   BYTE PTR [ebx-0x62],dh
  41da96:	add    BYTE PTR [eax],al
  41da98:	dec    edx
  41da99:	(bad)  
  41da9a:	add    eax,DWORD PTR [eax]
  41da9c:	repz sbb ecx,0x4a
  41daa0:	(bad)  
  41daa1:	jp     0x41daac
  41daa3:	push   eax
  41daa4:	fild   DWORD PTR [eax+0x18e4fc98]
  41daaa:	inc    ebp
  41daab:	lock push 0x2688e85d
  41dab1:	xchg   edx,eax
  41dab2:	mov    DWORD PTR [esi],edi
  41dab4:	inc    ebx
  41dab5:	sbb    DWORD PTR [esi-0x10],eax
  41dab8:	js     0x41da97
  41daba:	out    dx,eax
  41dabb:	mov    BYTE PTR [esi],ch
  41dabd:	retf   0x3e89
  41dac0:	aas    
  41dac1:	sub    DWORD PTR [esi-0x14],eax
  41dac4:	jp     0x41da93
  41dac6:	sbb    ecx,DWORD PTR [ecx+0x3fc6c22e]
  41dacc:	pop    ds
  41dacd:	sahf   
  41dace:	mov    ecx,DWORD PTR [edx-0x79]
  41dad1:	cwde   
  41dad2:	mov    esi,0x885d670c
  41dad7:	add    BYTE PTR ds:[eax],al
  41dada:	add    BYTE PTR [esi],al
  41dadc:	sbb    DWORD PTR [esi-0x10],eax
  41dadf:	push   0xffffffed
  41dae1:	jmp    0x41da6b
  41dae3:	cs jp  0x41da69
  41dae6:	mov    edi,0xf783038f
  41daeb:	shl    BYTE PTR [edi+eax*4+0x9df389],1
  41daf2:	mov    DWORD PTR [esi+0x136fa00d],ebp
  41daf8:	pop    es
  41daf9:	dec    edi
  41dafa:	mov    ss,WORD PTR [ecx-0x6c]
  41dafd:	pop    ebp
  41dafe:	mov    WORD PTR [ecx-0x20ecaa6a],?
  41db04:	sahf   
  41db05:	push   0x71932ea6
  41db0a:	inc    esi
  41db0b:	and    esp,DWORD PTR [eax]
  41db0d:	rol    DWORD PTR [esp+ebx*2-0x72546906],cl
  41db14:	lods   al,BYTE PTR ds:[esi]
  41db15:	sub    al,0xa0
  41db17:	adc    eax,0x7a023af
  41db1c:	jg     0x41dac9
  41db1e:	scas   eax,DWORD PTR es:[edi]
  41db1f:	push   es
  41db20:	inc    ebp
  41db21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db22:	add    DWORD PTR [ecx+0x619cd1f3],0xffffffee
  41db29:	ror    ecx,0x60
  41db2c:	sub    al,0xc2
  41db2e:	rcr    DWORD PTR [esi+0x28],0x9d
  41db32:	sub    eax,DWORD PTR [ecx-0x30601261]
  41db38:	cld    
  41db39:	out    dx,al
  41db3a:	pop    ebx
  41db3b:	xor    eax,DWORD PTR [edi]
  41db3d:	inc    eax
  41db3e:	cmp    eax,0x72000000
  41db43:	mov    esi,0xce26abd5
  41db48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db49:	sbb    BYTE PTR [ecx],dh
  41db4b:	shl    BYTE PTR [esi],1
  41db4d:	lock push ds
  41db4f:	aam    0x71
  41db51:	inc    esp
  41db52:	retf   
  41db53:	jg     0x41db7c
  41db55:	adc    al,0x6a
  41db57:	dec    esp
  41db58:	mov    bh,0x8b
  41db5a:	int3   
  41db5b:	loop   0x41dbce
  41db5d:	push   ecx
  41db5e:	xchg   edi,eax
  41db5f:	and    BYTE PTR [edi],0x18
  41db62:	push   0x4c
  41db64:	or     DWORD PTR [ebp+0x49620f04],0x5f
  41db6b:	leave  
  41db6c:	and    BYTE PTR es:[ebp+edi*2+0x2b],ah
  41db71:	mov    al,0x1b
  41db73:	mov    cl,0xff
  41db75:	in     eax,0xdc
  41db77:	push   ecx
  41db78:	xchg   DWORD PTR [eax],ebp
  41db7a:	adc    al,BYTE PTR [eax+0x22765942]
  41db80:	sub    BYTE PTR [edx-0x26],dh
  41db83:	xchg   esi,eax
  41db84:	out    0xe7,eax
  41db86:	adc    DWORD PTR [ebx-0x721dbf04],0xfffffffc
  41db8d:	inc    esi
  41db8e:	js     0x41dbd5
  41db90:	cld    
  41db91:	push   ecx
  41db92:	out    0x9d,al
  41db94:	cld    
  41db95:	mov    DWORD PTR ss:[edx],0x93f0aab8
  41db9c:	adc    bl,BYTE PTR [ecx]
  41db9e:	add    edx,edx
  41dba0:	push   DWORD PTR [ecx+0x30]
  41dba3:	lahf   
  41dba4:	aaa    
  41dba5:	add    DWORD PTR [eax],0x4ee40000
  41dbab:	inc    eax
  41dbac:	jmp    0xdc31d03e
  41dbb1:	xor    BYTE PTR [edi],al
  41dbb3:	push   0xfffffff1
  41dbb5:	or     BYTE PTR [edi-0x19],dh
  41dbb8:	div    BYTE PTR [ebp-0x6e]
  41dbbb:	adc    ah,cl
  41dbbd:	sub    BYTE PTR [edi+0x0],al
  41dbc0:	inc    eax
  41dbc1:	push   es
  41dbc2:	mov    bh,al
  41dbc4:	fimul  WORD PTR [ecx-0x4429af08]
  41dbca:	mov    eax,ds:0x93f72911
  41dbcf:	jb     0x41dbaa
  41dbd1:	test   DWORD PTR [esp+ecx*1],edx
  41dbd4:	mov    esi,0xdcfcfefb
  41dbd9:	mov    esp,0x71e94059
  41dbde:	lds    ecx,FWORD PTR [ebx]
  41dbe0:	inc    esi
  41dbe1:	lds    ebp,FWORD PTR [edi]
  41dbe3:	(bad)  
  41dbe4:	stos   BYTE PTR es:[edi],al
  41dbe5:	imul   ecx,DWORD PTR [ecx+0x60],0x8938ba3a
  41dbec:	sbb    DWORD PTR [edi],ebp
  41dbee:	cmp    al,0x89
  41dbf0:	add    dl,dh
  41dbf2:	inc    esi
  41dbf3:	mov    ecx,0x44b20c
  41dbf8:	push   ebp
  41dbf9:	dec    ecx
  41dbfa:	jp     0x41dc23
  41dbfc:	stc    
  41dbfd:	fisttp QWORD PTR [esi+0x59a12ec]
  41dc03:	push   ebx
  41dc04:	push   esi
  41dc05:	sar    ecx,0x23
  41dc08:	sbb    al,0x74
  41dc0a:	jo     0x41dc1d
  41dc0c:	clc    
  41dc0d:	add    BYTE PTR [eax],al
  41dc0f:	add    BYTE PTR [ebp-0x2d74ffbc],al
  41dc15:	test   al,al
  41dc17:	or     al,0x89
  41dc19:	ins    BYTE PTR es:[edi],dx
  41dc1a:	sti    
  41dc1b:	je     0x41db9e
  41dc1d:	into   
  41dc1e:	cli    
  41dc1f:	adc    eax,0x3c97ce
  41dc24:	loop   0x41dbc4
  41dc26:	out    0xff,eax
  41dc28:	fld    QWORD PTR [esp+esi*8+0x669457ff]
  41dc2f:	or     BYTE PTR [edx+0x14],dh
  41dc32:	in     eax,0xff
  41dc34:	in     eax,dx
  41dc35:	cld    
  41dc36:	xlat   BYTE PTR ds:[ebx]
  41dc37:	inc    edi
  41dc39:	cld    
  41dc3a:	mov    bh,0x43
  41dc3c:	retf   0x54d3
  41dc3f:	jmp    0x41dbcb
  41dc41:	jecxz  0x41dc02
  41dc43:	mov    dl,bl
  41dc45:	add    al,0x0
  41dc47:	add    edx,edi
  41dc49:	pushf  
  41dc4a:	mov    ah,0x43
  41dc4c:	retf   0xdbaf
  41dc4f:	jne    0x41dbf6
  41dc51:	jg     0x41dca7
  41dc53:	fs pop ds
  41dc55:	sti    
  41dc56:	push   edi
  41dc57:	jmp    DWORD PTR [esp+ebx*2+0x725ce434]
  41dc5e:	data16 adc ah,ah
  41dc61:	bound  esp,QWORD PTR [ecx]
  41dc63:	in     eax,0x4c
  41dc65:	jb     0x41dc4e
  41dc67:	or     DWORD PTR [ebx-0xc00a034],ecx
  41dc6d:	in     eax,0x27
  41dc6f:	xor    DWORD PTR [eax-0x23],ecx
  41dc72:	xor    al,0xfd
  41dc74:	add    BYTE PTR [eax],al
  41dc76:	add    dh,bh
  41dc78:	or     eax,0xf0f33ff2
  41dc7d:	cmp    eax,0x365d685b
  41dc82:	ret    0x9df7
  41dc85:	das    
  41dc86:	push   esi
  41dc87:	js     0x41dcb7
  41dc89:	test   BYTE PTR [ebp-0x31],bh
  41dc8c:	popf   
  41dc8d:	xchg   esi,edx
  41dc8f:	mov    edi,0x9b4586fe
  41dc94:	hlt    
  41dc95:	mov    ebx,0xbef4ec74
  41dc9a:	xchg   BYTE PTR [ebp-0x37fa584b],dh
  41dca0:	cmc    
  41dca1:	jle    0x41dd08
  41dca3:	fwait
  41dca4:	popf   
  41dca5:	sub    BYTE PTR [ebx+ecx*2],cl
  41dca8:	pop    ebp
  41dca9:	add    ch,bh
  41dcab:	out    0xed,al
  41dcad:	icebp  
  41dcae:	aas    
  41dcaf:	repz add al,0x2a
  41dcb2:	push   ebp
  41dcb3:	lods   al,BYTE PTR ds:[esi]
  41dcb4:	mov    cl,0x58
  41dcb6:	inc    eax
  41dcb7:	repz jo 0x41dc55
  41dcba:	adc    ah,bl
  41dcbc:	stos   DWORD PTR es:[edi],eax
  41dcbd:	inc    eax
  41dcbe:	add    BYTE PTR [eax+0xf],ch
  41dcc1:	sub    DWORD PTR [ecx],edi
  41dcc3:	lods   eax,DWORD PTR ds:[esi]
  41dcc4:	mov    al,0x3e
  41dcc6:	icebp  
  41dcc7:	sbb    eax,0xdb2414a9
  41dccc:	adc    al,0x15
  41dcce:	and    al,0xdb
  41dcd0:	iret   
  41dcd1:	call   0x7800:0x3f78ab12
  41dcd8:	gs jg  0x41dc9e
  41dcdb:	add    BYTE PTR [eax],al
  41dcdd:	add    bh,ch
  41dcdf:	sbb    al,0x98
  41dce1:	cld    
  41dce2:	pop    ds
  41dce3:	xchg   esp,eax
  41dce4:	xor    edi,ebp
  41dce6:	out    0x51,al
  41dce8:	out    dx,al
  41dce9:	aas    
  41dcea:	repz push es
  41dcec:	(bad)  
  41dced:	mov    DWORD PTR es:[edi-0x70837f63],ecx
  41dcf4:	sbb    esi,ecx
  41dcf6:	(bad)  
  41dcf8:	(bad)  
  41dcf9:	jae    0x41dd47
  41dcfb:	pop    DWORD PTR [ebp-0x2c70c4f8]
  41dd01:	or     ebx,DWORD PTR [ebx-0x5bc518bd]
  41dd07:	(bad)  [edx]
  41dd0a:	xor    edi,DWORD PTR [esi-0x1a]
  41dd0d:	add    esi,ebx
  41dd0f:	add    esp,esp
  41dd11:	jmp    0x41dd8f
  41dd13:	inc    ebx
  41dd14:	out    0xea,eax
  41dd16:	les    ebx,FWORD PTR [esi]
  41dd18:	mov    dh,0x9c
  41dd1a:	add    DWORD PTR [edi+0x2ff343d8],edx
  41dd20:	popf   
  41dd21:	mov    BYTE PTR [ebx],dh
  41dd23:	sub    ebp,DWORD PTR [ecx]
  41dd25:	or     esi,ebx
  41dd27:	cmp    DWORD PTR [edx-0x51],esp
  41dd2a:	jae    0x41dcd6
  41dd2c:	push   ds
  41dd2d:	or     BYTE PTR [eax],0x8a
  41dd30:	out    0x3,al
  41dd32:	repz xor ebx,edx
  41dd35:	mov    eax,0xfecf3646
  41dd3a:	shl    DWORD PTR [edx-0x57],1
  41dd3d:	add    ebp,esi
  41dd3f:	cmp    BYTE PTR [eax],0x3
  41dd42:	add    BYTE PTR [eax],al
  41dd44:	add    bl,dh
  41dd46:	push   es
  41dd47:	dec    DWORD PTR ds:0x86ed8dc1
  41dd4d:	test   dh,bh
  41dd4f:	push   0x61
  41dd51:	mov    esp,0x19dce68e
  41dd56:	sti    
  41dd57:	in     eax,0x7f
  41dd59:	mov    BYTE PTR [edi],al
  41dd5b:	out    0x3,eax
  41dd5d:	fsubr  QWORD PTR [ebx]
  41dd5f:	xlat   BYTE PTR ds:[ebx]
  41dd60:	or     ch,BYTE PTR [ebp+0x7a]
  41dd63:	out    0x3,al
  41dd65:	repz cmp edi,0xe834ff3b
  41dd6c:	pop    ss
  41dd6d:	arpl   WORD PTR [ebx-0x4489204],cx
  41dd73:	sub    DWORD PTR [ebx-0x11],0x6
  41dd77:	add    BYTE PTR [esi-0x5],dl
  41dd7a:	dec    esi
  41dd7b:	inc    eax
  41dd7c:	jmp    0x955469a2
  41dd81:	gs into 
  41dd83:	call   DWORD PTR [eax+0x76fca59e]
  41dd89:	jl     0x41dd29
  41dd8b:	xchg   ch,dh
  41dd8d:	and    al,0xf6
  41dd8f:	and    BYTE PTR [edi+0x58],0x1a
  41dd93:	pop    ebp
  41dd94:	shl    BYTE PTR [edx-0x7a],1
  41dd97:	(bad)  
  41dd98:	call   0x174e58d
  41dd9d:	mov    DWORD PTR [esi+0x0],0x762ad900
  41dda4:	in     eax,dx
  41dda5:	jns    0x41ddc0
  41dda7:	or     BYTE PTR [edx+0x0],ah
  41ddaa:	add    BYTE PTR [eax],al
  41ddac:	xor    DWORD PTR [esi-0x7497d0bb],esp
  41ddb2:	call   0x686dfd79
  41ddb7:	xchg   edi,eax
  41ddb8:	(bad)  
  41ddb9:	jle    0x41de05
  41ddbb:	stc    
  41ddbc:	mov    DWORD PTR [eax],ebx
  41ddbe:	or     al,0x62
  41ddc0:	mov    cl,0x8a
  41ddc2:	jb     0x41ddb5
  41ddc4:	mov    dl,al
  41ddc6:	std    
  41ddc7:	(bad)  
  41ddc8:	jns    0x41dd68
  41ddca:	inc    ebx
  41ddcb:	mul    bl
  41ddcd:	test   BYTE PTR [edx-0x2be5b73],0x5c
  41ddd4:	jmp    0x41dd61
  41ddd6:	jb     0x41ddc9
  41ddd8:	mov    BYTE PTR [esp+ebp*8+0x438489d6],bl
  41dddf:	add    eax,0xf786ab
  41dde4:	mov    ch,0xf6
  41dde6:	das    
  41dde7:	mov    ecx,esi
  41dde9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddea:	adc    al,0xe8
  41ddec:	xchg   esp,eax
  41dded:	pop    esp
  41ddee:	sti    
  41ddef:	call   DWORD PTR [ecx]
  41ddf1:	(bad)
  41ddf4:	jmp    0x41ddf8
  41ddf6:	add    BYTE PTR [edi+0x55],dl
  41ddf9:	xchg   esi,eax
  41ddfa:	in     al,dx
  41ddfb:	adc    bl,BYTE PTR [edx]
  41ddfd:	add    edi,ebx
  41ddff:	jne    0x41de6b
  41de01:	jo     0x41de74
  41de03:	or     al,0x75
  41de05:	test   BYTE PTR [edi],0xff
  41de08:	aas    
  41de09:	jno    0x41ddbe
  41de0b:	inc    ebx
  41de0c:	pop    edx
  41de0d:	test   al,al
  41de0f:	or     al,0x0
  41de11:	add    BYTE PTR [eax],al
  41de13:	cmc    
  41de14:	rcl    BYTE PTR [esi-0x75],1
  41de17:	scas   eax,DWORD PTR es:[edi]
  41de18:	into   
  41de19:	mov    esi,0x2f018cff
  41de1e:	fild   DWORD PTR [ebx]
  41de20:	iret   
  41de21:	and    ecx,DWORD PTR [ebp+eax*2+0xd]
  41de25:	aas    
  41de26:	add    cl,BYTE PTR [edx]
  41de28:	or     DWORD PTR [ecx+0x503aee44],ecx
  41de2e:	call   0x41bbd0
  41de33:	xchg   ebx,eax
  41de34:	int    0x23
  41de36:	and    BYTE PTR [edx-0x78dc8bfe],ah
  41de3c:	int    0x23
  41de3e:	dec    eax
  41de3f:	repnz call 0x15fa:0xd9da005d
  41de47:	ficom  DWORD PTR [ebx-0x1f86ffc4]
  41de4d:	sahf   
  41de4e:	call   0x163d4d18
  41de53:	shl    BYTE PTR [eax],cl
  41de55:	inc    eax
  41de56:	add    BYTE PTR [ebx],dh
  41de58:	sar    BYTE PTR [esi-0x38],1
  41de5b:	xchg   ebp,eax
  41de5c:	pop    edx
  41de5d:	mov    cl,0x89
  41de5f:	repz rcr edi,1
  41de62:	pop    ss
  41de63:	jp     0x41de3f
  41de65:	fist   WORD PTR [ebx]
  41de67:	dec    ebx
  41de68:	mov    al,ds:0x9f098407
  41de6d:	add    BYTE PTR [eax],al
  41de6f:	js     0x41dee5
  41de71:	stos   DWORD PTR es:[edi],eax
  41de72:	scas   al,BYTE PTR es:[edi]
  41de73:	call   0x0:0x88965d
  41de7a:	fwait
  41de7b:	sbb    edi,DWORD PTR [ebx+0x4326f0c]
  41de81:	add    bl,dh
  41de83:	and    BYTE PTR [eax+0x23],bl
  41de86:	outs   dx,DWORD PTR ds:[esi]
  41de87:	sahf   
  41de88:	add    BYTE PTR [eax],al
  41de8a:	repnz xchg esp,eax
  41de8c:	jge    0x41de1e
  41de8e:	repz popf 
  41de90:	add    BYTE PTR [ecx-0x7f4581],cl
  41de96:	inc    esp
  41de97:	sahf   
  41de98:	xor    DWORD PTR [esi-0x9],0xffffff9d
  41de9c:	pop    es
  41de9d:	test   BYTE PTR [ecx-0x62],dh
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	jle    0x41defe
  41dea4:	fadd   QWORD PTR [edi+0x76]
  41dea7:	mov    edx,0xc0b23dc
  41deac:	and    eax,DWORD PTR [eax]
  41deae:	repz int3 
  41deb0:	dec    edi
  41deb1:	and    esi,DWORD PTR [ebx-0x62]
  41deb4:	add    BYTE PTR [eax],al
  41deb6:	jnp    0x41df1a
  41deb8:	fcom   QWORD PTR [eax+ebp*2]
  41debb:	sbb    ah,al
  41debd:	xchg   ebx,esi
  41debf:	popf   
  41dec0:	add    al,ch
  41dec2:	(bad)  
  41dec3:	jle    0x41dec5
  41dec5:	add    BYTE PTR [ebx+0x79],dh
  41dec8:	fcom   QWORD PTR [eax]
  41deca:	repz xchg esp,eax
  41decc:	jl     0x41ded6
  41dece:	repnz popf 
  41ded0:	add    BYTE PTR [edx-0x34],ch
  41ded3:	xchg   esp,eax
  41ded4:	or     al,0x24
  41ded6:	call   FWORD PTR [ebp+ebp*8+0x2706e00f]
  41dedd:	add    al,0x0
  41dedf:	add    BYTE PTR [eax],al
  41dee1:	mov    dh,0x12
  41dee3:	add    ebp,esp
  41dee5:	xchg   esp,eax
  41dee6:	ret    
  41dee7:	(bad)  
  41dee8:	cdq    
  41dee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deea:	mov    edx,DWORD PTR [edx-0x20]
  41deed:	int3   
  41deee:	mov    ebx,ebx
  41def0:	arpl   WORD PTR [edx],ax
  41def2:	inc    edi
  41def3:	out    0x8c,eax
  41def5:	or     bl,ah
  41def7:	add    bh,BYTE PTR [edi-0x79]
  41defa:	sti    
  41defb:	bound  esp,QWORD PTR [ebx-0x79197484]
  41df01:	xor    bl,ah
  41df03:	lods   al,BYTE PTR cs:[esi]
  41df05:	fsub   DWORD PTR [esi]
  41df07:	out    0x3,eax
  41df09:	jp     0x41df44
  41df0b:	test   DWORD PTR [eax+esi*4-0x4c3e1d1e],0xcb8ae6fa
  41df16:	(bad)  
  41df17:	lods   al,BYTE PTR ds:[esi]
  41df18:	add    al,0x44
  41df1a:	or     BYTE PTR [eax+0x2d1eb68a],ch
  41df20:	inc    ecx
  41df21:	mov    DWORD PTR ds:0x8b2e6350,0xf6a19855
  41df2b:	dec    ebp
  41df2c:	push   cs
  41df2d:	out    dx,eax
  41df2e:	sahf   
  41df2f:	push   edx
  41df30:	mov    ds:0x3f6f8b16,al
  41df35:	xlat   BYTE PTR ds:[ebx]
  41df36:	out    dx,al
  41df37:	imul   eax,ebx,0xffffff81
  41df3a:	out    dx,al
  41df3b:	sub    eax,0xe686d04f
  41df40:	add    esi,ebx
  41df42:	jg     0x41dfa6
  41df44:	fild   WORD PTR [eax]
  41df46:	add    BYTE PTR [eax],al
  41df48:	je     0x41df51
  41df4a:	out    0x3,eax
  41df4c:	fild   DWORD PTR [eax-0x600cfc7a]
  41df52:	jae    0x41df57
  41df54:	repz push es
  41df56:	and    eax,0xff89f304
  41df5b:	jl     0x41df01
  41df5d:	cmp    cl,BYTE PTR [ecx-0x17cd635b]
  41df63:	lahf   
  41df64:	mov    edx,0x3070fc8b
  41df69:	dec    DWORD PTR [eax+0xa936d]
  41df6f:	jmp    0xf5826164
  41df74:	imul   eax,DWORD PTR [esi+0x6f76523],0x81914300
  41df7e:	inc    eax
  41df7f:	fldcw  WORD PTR [ebx+0xe]
  41df82:	and    al,0xe1
  41df84:	mov    eax,0xf0e12c9e
  41df89:	push   es
  41df8a:	push   0xffffffca
  41df8c:	jnp    0x41df9c
  41df8e:	and    al,0xc1
  41df90:	sbb    BYTE PTR [edi+0x6f0c120],bl
  41df96:	mov    DWORD PTR [esi-0x32bc81f9],esp
  41df9c:	sub    BYTE PTR [edx],bh
  41df9e:	std    
  41df9f:	hlt    
  41dfa0:	inc    eax
  41dfa1:	mov    esi,DWORD PTR [ebx+0xd]
  41dfa4:	push   ebx
  41dfa5:	mov    ds:0x8b843dfa,al
  41dfaa:	imul   ecx,DWORD PTR [eax+eax*1],0xb2780000
  41dfb1:	mov    cl,ch
  41dfb3:	cmp    al,0xf2
  41dfb5:	push   edi
  41dfb6:	push   ecx
  41dfb7:	out    dx,al
  41dfb8:	into   
  41dfb9:	(bad)  
  41dfba:	call   0x9a91a338
  41dfbf:	pop    ebp
  41dfc0:	push   ss
  41dfc1:	and    al,0x9
  41dfc3:	dec    edi
  41dfc4:	leave  
  41dfc5:	(bad)  [esi]
  41dfc7:	pop    esp
  41dfc8:	and    BYTE PTR ds:0x7b7caf72,ah
  41dfce:	int    0xc8
  41dfd0:	xor    eax,ebp
  41dfd2:	pop    es
  41dfd3:	lods   al,BYTE PTR ds:[esi]
  41dfd4:	mov    esp,edi
  41dfd6:	add    BYTE PTR [ecx+0x4a],ah
  41dfd9:	dec    esp
  41dfda:	push   ebx
  41dfdb:	int    0xf9
  41dfdd:	and    esp,DWORD PTR [eax]
  41dfdf:	repnz test al,0xd8
  41dfe2:	dec    ebp
  41dfe4:	jp     0x41e026
  41dfe6:	and    al,0xb6
  41dfe8:	jnp    0x41e02a
  41dfea:	and    al,0xfa
  41dfec:	push   es
  41dfed:	je     0x41e046
  41dfef:	adc    edx,esi
  41dff1:	and    ebx,DWORD PTR [eax]
  41dff3:	pop    ss
  41dff4:	jno    0x41e067
  41dff6:	or     BYTE PTR [ecx],ah
  41dff8:	out    dx,eax
  41dff9:	or     ecx,DWORD PTR [ebx+0x4e792ef]
  41dfff:	adc    edx,edx
  41e001:	and    edx,DWORD PTR [edi+ebx*1]
  41e004:	retf   0x1823
  41e007:	mov    edx,0x6247071
  41e00c:	jle    0x41dfcd
  41e00e:	inc    DWORD PTR [esi]
  41e010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e011:	jo     0x41e06a
  41e013:	add    BYTE PTR [eax],al
  41e015:	add    BYTE PTR [edx+0x75],dh
  41e018:	in     al,dx
  41e019:	jmp    FWORD PTR [ebp+0x70]
  41e01c:	jo     0x41e042
  41e01e:	(bad)  
  41e01f:	jnp    0x41e061
  41e021:	and    al,0x22
  41e023:	pop    ebp
  41e024:	nop
  41e025:	loopne 0x41dff3
  41e027:	jo     0x41e0a8
  41e029:	jl     0x41e011
  41e02b:	xchg   esi,eax
  41e02c:	cld    
  41e02d:	je     0x41e04c
  41e02f:	lods   al,BYTE PTR ds:[esi]
  41e030:	jns    0x41e03e
  41e032:	inc    esi
  41e033:	aas    
  41e034:	test   DWORD PTR [esi+esi*8-0x76],edi
  41e038:	test   DWORD PTR [esi+eiz*8-0x6a],ebx
  41e03c:	out    0xb,eax
  41e03e:	icebp  
  41e03f:	out    dx,eax
  41e040:	or     esi,DWORD PTR [esp+edx*1-0x28]
  41e044:	out    0x73,eax
  41e046:	stos   BYTE PTR es:[edi],al
  41e047:	jae    0x41e044
  41e049:	mov    ecx,DWORD PTR [esi-0x57]
  41e04c:	adc    al,0x85
  41e04e:	or     eax,0xf38d28f8
  41e053:	pop    ecx
  41e054:	fadd   QWORD PTR [edi-0x35]
  41e057:	shl    BYTE PTR ds:0x3d14f300,0x24
  41e05e:	out    dx,eax
  41e05f:	sbb    al,0x1b
  41e061:	pusha  
  41e062:	repz cmp ebp,DWORD PTR es:[eax+0x68]
  41e067:	(bad)  
  41e068:	fcom   QWORD PTR [ebx]
  41e06a:	push   0xffffffd8
  41e06c:	aaa    
  41e06d:	mov    DWORD PTR [esi],esi
  41e06f:	mov    ?,WORD PTR [edx-0x7661e8bb]
  41e075:	jge    0x41e0b2
  41e077:	daa    
  41e078:	ds add BYTE PTR fs:[eax],al
  41e07c:	add    BYTE PTR [edx-0x73036b21],cl
  41e082:	sbb    eax,DWORD PTR [eax+0x24]
  41e085:	cmp    eax,esi
  41e087:	cwde   
  41e088:	pop    ebp
  41e089:	repz popf 
  41e08b:	xchg   DWORD PTR [ebx-0x31],eax
  41e08e:	add    DWORD PTR [edi-0x3e62fcb6],eax
  41e094:	xchg   BYTE PTR [ebp-0x30ba41fb],ch
  41e09a:	popf   
  41e09b:	test   eax,0x92815634
  41e0a0:	push   edx
  41e0a1:	js     0x41e11d
  41e0a3:	cmp    DWORD PTR [edx],0x4e
  41e0a6:	inc    ebp
  41e0a7:	aas    
  41e0a8:	add    bl,dh
  41e0aa:	in     al,dx
  41e0ab:	xchg   BYTE PTR [edx-0x15],bl
  41e0ae:	inc    edi
  41e0af:	sub    esi,DWORD PTR [edx+eiz*4-0x14]
  41e0b3:	xchg   edx,eax
  41e0b4:	cmp    BYTE PTR [edx+ebp*4+0x27],al
  41e0b8:	aaa    
  41e0b9:	sahf   
  41e0ba:	test   eax,0x80b6612
  41e0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0c0:	std    
  41e0c1:	or     al,0x22
  41e0c3:	les    esi,FWORD PTR [ebx-0x5a]
  41e0c6:	lds    eax,FWORD PTR [eax+edi*4]
  41e0c9:	mov    al,0x9d
  41e0cb:	xchg   ebx,eax
  41e0cc:	adc    al,BYTE PTR [edi]
  41e0ce:	pop    es
  41e0cf:	stc    
  41e0d0:	inc    ebx
  41e0d1:	repz int 0x9b
  41e0d4:	pop    es
  41e0d5:	gs inc ebp
  41e0d7:	sbb    eax,0xe802da40
  41e0dc:	mov    esp,cr7
  41e0df:	mov    edx,0x98
  41e0e4:	aam    0x73
  41e0e6:	add    al,0x95
  41e0e8:	mov    DWORD PTR [ebx-0x20bf6b12],0x66cc37f
  41e0f2:	out    0x3,eax
  41e0f4:	repnz add DWORD PTR [edi],ecx
  41e0f7:	pop    esp
  41e0f8:	xor    eax,DWORD PTR [edi]
  41e0fa:	push   0x1b
  41e0fc:	daa    
  41e0fd:	pop    es
  41e0fe:	push   esp
  41e0ff:	fcom   DWORD PTR [edi+ecx*1]
  41e102:	inc    esp
  41e103:	add    al,0x0
  41e105:	shl    DWORD PTR [ecx-0x35],1
  41e108:	mov    WORD PTR [eax-0x33],?
  41e10b:	xchg   esp,eax
  41e10c:	jg     0x41e08f
  41e10e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e10f:	(bad)  
  41e111:	nop
  41e112:	out    0x2,al
  41e114:	loopne 0x41e0f6
  41e116:	and    eax,0x12fae9d9
  41e11b:	push   esi
  41e11c:	aam    0xfa
  41e11e:	dec    esi
  41e11f:	inc    eax
  41e120:	repz xchg ebx,ebx
  41e123:	xchg   ebx,eax
  41e124:	loop   0x41e16c
  41e126:	out    0x94,eax
  41e128:	shl    esi,0x75
  41e12b:	push   cs
  41e12c:	out    dx,eax
  41e12d:	xor    ebp,DWORD PTR [esi-0x12]
  41e130:	xor    al,0x4f
  41e132:	test   eax,0xeac27203
  41e137:	xor    al,0xc5
  41e139:	sub    esi,DWORD PTR [eax+eax*8+0x408efa94]
  41e140:	repz xchg ebx,ebx
  41e143:	xchg   ebx,eax
  41e144:	loop   0x41e18c
  41e146:	out    0xd0,eax
  41e148:	add    BYTE PTR [eax],al
  41e14a:	add    BYTE PTR [esi+eax*2+0x0],al
  41e14e:	iret   
  41e14f:	imul   eax,DWORD PTR [ebx-0x7],0xe8c26be7
  41e156:	or     eax,0xa473586d
  41e15b:	jp     0x41e16d
  41e15d:	test   BYTE PTR [eax],ah
  41e15f:	in     al,dx
  41e160:	inc    ebx
  41e161:	xor    DWORD PTR [ecx],ebp
  41e163:	jo     0x41e1e2
  41e165:	sub    bh,BYTE PTR [ebp+ecx*8-0x10]
  41e169:	add    DWORD PTR [ecx-0xf7ff665],esp
  41e16f:	aam    0xf9
  41e171:	(bad)  
  41e172:	stos   BYTE PTR es:[edi],al
  41e173:	push   es
  41e174:	cmp    dh,dh
  41e176:	shl    BYTE PTR [edi+0x20f706],cl
  41e17c:	sbb    DWORD PTR [ecx-0x21],ebp
  41e17f:	popf   
  41e180:	adc    edi,DWORD PTR [esi+0xdfa72a0]
  41e186:	cdq    
  41e187:	xor    eax,0x76690991
  41e18c:	ss jnp 0x41e14f
  41e18f:	imul   ecx,DWORD PTR [ebp+0x73],0xffffffea
  41e193:	ins    DWORD PTR es:[edi],dx
  41e194:	dec    esi
  41e195:	(bad)  
  41e196:	push   eax
  41e197:	cmc    
  41e198:	cli    
  41e199:	add    DWORD PTR [esi+0x37348da1],edx
  41e19f:	xor    al,0x87
  41e1a1:	and    al,0xe9
  41e1a3:	test   BYTE PTR [esi],0x58
  41e1a6:	stos   BYTE PTR es:[edi],al
  41e1a7:	or     dl,BYTE PTR [eax+0x7e9b6aeb]
  41e1ad:	add    BYTE PTR [ebp+0x1b000000],0xd7
  41e1b4:	push   ebp
  41e1b5:	push   ss
  41e1b6:	sbb    al,0x83
  41e1b8:	and    ah,0x24
  41e1bb:	test   DWORD PTR [edi+0xd1e0cdd],eax
  41e1c1:	imul   edi,esp,0xffffff85
  41e1c4:	cld    
  41e1c5:	jmp    0x65ac3d
  41e1ca:	adc    bh,BYTE PTR [edx]
  41e1cc:	call   0xfbdb71c8
  41e1d1:	test   dl,cl
  41e1d3:	or     DWORD PTR [ecx+ebx*2+0x33000a0b],eax
  41e1da:	sbb    cl,bl
  41e1dc:	test   BYTE PTR [esi+ebp*4+0x6d],al
  41e1e0:	xor    eax,0x8608de45
  41e1e5:	cmp    al,0xcb
  41e1e7:	or     DWORD PTR [eax],eax
  41e1e9:	mov    edx,edi
  41e1eb:	adc    DWORD PTR [edx],edx
  41e1ed:	inc    eax
  41e1ee:	fiadd  DWORD PTR [edx+ecx*2]
  41e1f1:	adc    BYTE PTR [ebp+0x23],bl
  41e1f4:	sti    
  41e1f5:	(bad)  
  41e1f6:	jle    0x41e182
  41e1f8:	push   ebx
  41e1f9:	call   0x3d51cc
  41e1fe:	and    DWORD PTR [edx+0x6aee7485],ebx
  41e204:	aaa    
  41e205:	div    DWORD PTR [ebp-0x65fedd73]
  41e20b:	or     DWORD PTR [eax+0x7409967d],eax
  41e211:	push   cs
  41e212:	fcomp  QWORD PTR [ecx+0x871]
  41e218:	add    BYTE PTR [edx-0x6a007956],dh
  41e21e:	mov    ds:0x95a00e6,al
  41e223:	xchg   DWORD PTR [ebp+0x52],eax
  41e226:	mov    eax,ds:0x98658abd
  41e22b:	test   DWORD PTR [esi+edi*1+0x75],eax
  41e22f:	mov    DWORD PTR [esi+ebp*1+0x7d],eax
  41e233:	dec    esp
  41e234:	mov    DWORD PTR [esi+0x6d],eax
  41e237:	adc    al,0xe8
  41e239:	xchg   esp,eax
  41e23a:	mov    ?,ebx
  41e23c:	call   FWORD PTR [esi-0x7a7bf4b7]
  41e242:	or     DWORD PTR [eax],eax
  41e244:	add    bl,dh
  41e246:	jmp    0x7391:0xbfcb2444
  41e24d:	xlat   BYTE PTR ds:[ebx]
  41e24e:	setl   dl
  41e251:	ins    BYTE PTR es:[edi],dx
  41e252:	inc    esp
  41e253:	xchg   edx,eax
  41e254:	mov    BYTE PTR [edi-0x587923ed],ch
  41e25a:	or     ebx,eax
  41e25c:	dec    esi
  41e25d:	js     0x41e295
  41e25f:	mov    DWORD PTR [ebx+0xf],0x3787005a
  41e266:	push   edx
  41e267:	int3   
  41e268:	xchg   BYTE PTR [edi+0x4a],dl
  41e26b:	inc    eax
  41e26c:	call   0xfcd3dec1
  41e271:	outs   dx,DWORD PTR ds:[esi]
  41e272:	add    al,BYTE PTR cs:[eax+esi*2+0x1d00006e]
  41e27a:	sub    al,0x45
  41e27c:	and    al,0x0
  41e27e:	add    BYTE PTR [eax],al
  41e280:	add    BYTE PTR [esi-0x71],ch
  41e283:	sar    BYTE PTR [ebx+esi*8],1
  41e286:	aas    
  41e287:	and    al,0xe7
  41e289:	out    0x47,al
  41e28b:	and    al,0xe3
  41e28d:	out    0xf,al
  41e28f:	and    al,0xe7
  41e291:	push   ebp
  41e292:	imul   ecx,DWORD PTR [ebp-0x10853a7c],0xffffffb8
  41e299:	les    edx,FWORD PTR [edi]
  41e29b:	popa   
  41e29c:	sbb    eax,0xbf88b2b5
  41e2a1:	push   ecx
  41e2a2:	loopne 0x41e2f3
  41e2a4:	mov    ebp,0x272417a4
  41e2a9:	popa   
  41e2aa:	shl    bh,0x92
  41e2ad:	sub    eax,0xae770004
  41e2b2:	pop    ss
  41e2b3:	sbb    al,0x44
  41e2b5:	jp     0x41e29b
  41e2b7:	movd   mm7,DWORD PTR [edx-0x1c]
  41e2bb:	xor    ecx,DWORD PTR [ebx+0x7c]
  41e2be:	jg     0x41e2bc
  41e2c0:	sub    al,0x7
  41e2c2:	imul   eax,esp,0xffffffa0
  41e2c5:	or     eax,0x16d7405e
  41e2ca:	sub    eax,0xe813cf48
  41e2cf:	aam    0xf
  41e2d1:	test   BYTE PTR [edx-0x4d7c0b19],ch
  41e2d7:	out    0xec,eax
  41e2d9:	xchg   ecx,eax
  41e2da:	mov    ds:0x9b6ec0e7,al
  41e2df:	sub    edi,0x947183
  41e2e5:	add    BYTE PTR [eax],al
  41e2e7:	sub    edi,DWORD PTR [ebx+edx*4+0x56]
  41e2eb:	pop    esp
  41e2ec:	add    ecx,ebx
  41e2ee:	add    bl,dh
  41e2f0:	cli    
  41e2f1:	not    DWORD PTR [eax+0x7cbf2b40]
  41e2f7:	xor    BYTE PTR [ebx],ch
  41e2f9:	mov    edi,0xc72b4090
  41e2fe:	fwait
  41e2ff:	ret    
  41e300:	mov    ebp,ebp
  41e302:	nop
  41e303:	jns    0x41e2ff
  41e305:	or     dl,ah
  41e307:	mov    WORD PTR [edi-0x6e606f95],?
  41e30d:	pop    edx
  41e30e:	call   0x87be5213
  41e313:	pop    DWORD PTR [ebx+0x26cf17c5]
  41e319:	iret   
  41e31a:	dec    edx
  41e31b:	cdq    
  41e31c:	test   BYTE PTR [ebp+0x32b307c],dh
  41e322:	inc    esp
  41e323:	je     0x41e2ef
  41e325:	retf   0x2be7
  41e328:	retf   0xf2
  41e32b:	jno    0x41e37d
  41e32d:	xchg   esp,eax
  41e32e:	nop
  41e32f:	push   edi
  41e330:	xchg   ecx,eax
  41e331:	adc    ch,al
  41e333:	in     al,0x6e
  41e335:	jo     0x41e2be
  41e337:	inc    edi
  41e338:	xor    DWORD PTR [esi],0x2
  41e33b:	dec    edx
  41e33c:	verr   WORD PTR [esp+ebx*8+0x2a]
  41e341:	sbb    BYTE PTR [ecx+0x66fc8afd],al
  41e347:	ds ret 
  41e349:	pop    esp
  41e34a:	mov    edi,0xcf000000
  41e34f:	(bad)  
  41e350:	loop   0x41e306
  41e352:	adc    eax,DWORD PTR cs:[eax]
  41e355:	sbb    dh,BYTE PTR [edi]
  41e357:	inc    ebx
  41e358:	pop    es
  41e359:	in     al,dx
  41e35a:	cmp    BYTE PTR [ebx-0x79c816c0],bh
  41e360:	or     dh,cl
  41e362:	test   al,0xc6
  41e364:	(bad)  
  41e365:	jmp    0x3ae5:0x6ac18140
  41e36c:	mov    eax,0xb00ef0aa
  41e371:	call   0xfdcab925
  41e376:	jo     0x41e3de
  41e378:	imul   DWORD PTR [eax+0x64]
  41e37b:	xchg   bh,bh
  41e37d:	call   0x9e97bb72
  41e382:	lahf   
  41e383:	pop    edi
  41e384:	push   eax
  41e385:	add    DWORD PTR [ebx-0x2191071],0xa
  41e38c:	push   ecx
  41e38d:	sar    esp,1
  41e38f:	and    eax,0xece0d6fd
  41e394:	cld    
  41e395:	into   
  41e396:	in     eax,0xe
  41e398:	xchg   DWORD PTR ds:0xd1512e9b,ebp
  41e39e:	int3   
  41e39f:	and    eax,0xecc0b6fd
  41e3a4:	cld    
  41e3a5:	scas   al,BYTE PTR es:[edi]
  41e3a6:	add    eax,0x5b2d8713
  41e3ab:	ss push ecx
  41e3ad:	xchg   ecx,eax
  41e3ae:	sbb    al,0x26
  41e3b0:	std    
  41e3b1:	xchg   esi,eax
  41e3b2:	add    BYTE PTR [eax],al
  41e3b4:	add    al,bl
  41e3b6:	jno    0x41e33e
  41e3b8:	adc    eax,0x37325b
  41e3bd:	push   cs
  41e3be:	outs   dx,DWORD PTR ds:[esi]
  41e3bf:	sbb    al,0xf
  41e3c1:	(bad)  
  41e3c2:	sub    edi,ebp
  41e3c4:	dec    DWORD PTR [edx+0x53]
  41e3c7:	pop    eax
  41e3c8:	and    al,0x32
  41e3ca:	add    DWORD PTR [eax+0x61b57],0x8081b93b
  41e3d4:	dec    edi
  41e3d5:	or     eax,DWORD PTR [esi]
  41e3d7:	add    BYTE PTR [eax],bh
  41e3d9:	pop    edi
  41e3da:	jle    0x41e44c
  41e3dc:	adc    al,0xad
  41e3de:	push   ds
  41e3df:	and    al,0x28
  41e3e1:	mov    ebp,0xb224241e
  41e3e6:	push   ecx
  41e3e7:	outs   dx,BYTE PTR ds:[esi]
  41e3e8:	call   FWORD PTR ds:0xc4e9d4fd
  41e3ee:	or     al,BYTE PTR [eax]
  41e3f0:	add    BYTE PTR [edi-0x31],cl
  41e3f3:	and    esp,DWORD PTR [edx+ebx*4]
  41e3f6:	add    bl,BYTE PTR [ecx+0x24]
  41e3f9:	stos   BYTE PTR es:[edi],al
  41e3fa:	popf   
  41e3fb:	cs mov ebp,gs
  41e3fe:	xchg   ecx,eax
  41e3ff:	xchg   eax,edi
  41e401:	inc    ebx
  41e402:	pop    ss
  41e403:	and    al,0x1c
  41e405:	or     DWORD PTR [ebx+ecx*1+0xacb84],0x24198d00
  41e410:	sub    BYTE PTR [edi],cl
  41e412:	xor    ah,BYTE PTR [eax+ebx*2]
  41e415:	mov    ebp,0x242419
  41e41a:	add    BYTE PTR [eax],al
  41e41c:	mov    dl,0xab
  41e41e:	jmp    FWORD PTR gs:[ebp-0x9db8f04]
  41e425:	test   DWORD PTR [eax+0x24],esp
  41e428:	mov    ds:0xf644c605,al
  41e42d:	cmp    esp,0x80808484
  41e433:	fisttp WORD PTR [edx+0x5]
  41e436:	add    BYTE PTR [ebx-0xd],ch
  41e439:	mov    eax,ds:0xe23488c6
  41e43e:	cmp    BYTE PTR [edx],bh
  41e440:	lock add BYTE PTR [edx-0x35ea0841],al
  41e447:	xchg   BYTE PTR [edi-0x487917ad],ah
  41e44d:	dec    ebx
  41e44e:	hlt    
  41e44f:	pop    eax
  41e450:	(bad)  
  41e451:	hlt    
  41e452:	test   BYTE PTR [ebx],ah
  41e454:	imul   ebp,DWORD PTR [edi+0x0],0xc0f28d00
  41e45b:	jae    0x41e456
  41e45d:	dec    ecx
  41e45e:	retf   
  41e45f:	inc    esp
  41e460:	mov    ebp,0xf37f8778
  41e465:	outs   dx,DWORD PTR ds:[esi]
  41e466:	add    BYTE PTR [esi+0x68],ah
  41e469:	repz in al,0x8b
  41e46c:	rep ins DWORD PTR es:[edi],dx
  41e46e:	add    BYTE PTR [esi+0x6e],ah
  41e471:	cs adc eax,0x45675506
  41e477:	cmp    BYTE PTR [esi-0x75],bl
  41e47a:	jg     0x41e4bf
  41e47c:	pop    ss
  41e47d:	mov    dh,0x30
  41e47f:	data16 add BYTE PTR [eax],al
  41e482:	add    BYTE PTR [edx+esi*4+0x53fc37e4],ch
  41e489:	jnp    0x41e4ce
  41e48b:	(bad)  
  41e48d:	lea    edx,[edx]
  41e48f:	sub    ebx,DWORD PTR [eax+eax*2+0x0]
  41e493:	jp     0x41e4c7
  41e495:	call   0xe86c4cd5
  41e49a:	cmovae esp,edi
  41e49d:	inc    edi
  41e49e:	and    al,0x37
  41e4a0:	push   ecx
  41e4a1:	hlt    
  41e4a2:	ja     0x41e485
  41e4a4:	sub    eax,0xa2f8b04
  41e4a9:	fadd   DWORD PTR [esi-0x3ab7edd1]
  41e4af:	mov    bh,0x9
  41e4b1:	xor    al,0x5
  41e4b3:	repz push es
  41e4b5:	out    0x3,eax
  41e4b7:	dec    ebx
  41e4b8:	bswap  ecx
  41e4ba:	mov    WORD PTR [edi-0x75],ss
  41e4bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4be:	sbb    BYTE PTR [edx],bl
  41e4c0:	cmp    al,0xb
  41e4c2:	call   0x7934d9af
  41e4c7:	test   al,0x2a
  41e4c9:	shl    DWORD PTR [edx+ebp*2],cl
  41e4cc:	dec    ecx
  41e4cd:	jle    0x41e505
  41e4cf:	dec    eax
  41e4d0:	sub    DWORD PTR [ebp-0x73],0xdb0b2ab8
  41e4d7:	mov    eax,0x23d8f72a
  41e4dc:	and    BYTE PTR [edx+0x522be4e7],0xdb
  41e4e3:	test   al,0x2a
  41e4e5:	fcmovnb st,st(5)
  41e4e7:	add    BYTE PTR [eax],al
  41e4e9:	add    BYTE PTR [eax-0x9fd11d6],dh
  41e4ef:	retf   0xec0a
  41e4f2:	jnp    0x41e4be
  41e4f4:	add    ch,al
  41e4f6:	in     eax,0xdb
  41e4f8:	retf   0xddf3
  41e4fb:	fcmovnb st,st(2)
  41e4fd:	div    ebx
  41e4ff:	jnp    0x41e4d0
  41e501:	inc    edi
  41e502:	pop    ss
  41e503:	pop    ds
  41e504:	fiadd  WORD PTR [ecx-0x72fa7fc7]
  41e50a:	cmp    al,0x3
  41e50c:	ret    
  41e50d:	cld    
  41e50e:	mov    ah,0xf3
  41e510:	jecxz  0x41e49e
  41e512:	and    BYTE PTR [ebx],ch
  41e514:	retf   
  41e515:	fwait
  41e516:	adc    cl,BYTE PTR [ebp+eiz*8-0x2ea19574]
  41e51d:	add    ecx,esp
  41e51f:	pop    ebx
  41e520:	aad    0x17
  41e522:	xlat   BYTE PTR ds:[ebx]
  41e523:	and    bh,BYTE PTR [edi-0x3a7f543e]
  41e529:	jle    0x41e52b
  41e52b:	sub    ecx,DWORD PTR [ebx]
  41e52d:	pushf  
  41e52e:	push   eax
  41e52f:	test   bh,bh
  41e531:	mov    ch,0x7f
  41e533:	xor    BYTE PTR [ebx+0x5],0x4f
  41e537:	lods   al,BYTE PTR ds:[si]
  41e539:	ret    0x826e
  41e53c:	cld    
  41e53d:	adc    eax,0x4fe8274b
  41e542:	fwait
  41e543:	cmp    esp,0x302adc8e
  41e549:	xchg   ecx,eax
  41e54a:	int    0x5e
  41e54c:	std    
  41e54d:	jle    0x41e54f
  41e54f:	add    BYTE PTR [eax],al
  41e551:	pop    es
  41e552:	loope  0x41e4dd
  41e554:	stos   BYTE PTR es:[edi],al
  41e555:	fisttp DWORD PTR [ebp+0x3310ce2]
  41e55b:	add    BYTE PTR [ebx+ebx*4+0x6845806b],bh
  41e562:	mov    ?,WORD PTR [esi+0x72037a6a]
  41e568:	loopne 0x41e554
  41e56a:	jg     0x41e550
  41e56c:	fild   QWORD PTR [esi-0x7e]
  41e56f:	cld    
  41e570:	push   edx
  41e571:	repnz xor al,0xc0
  41e574:	bound  edx,QWORD PTR [ebp+0x6b94c0e1]
  41e57a:	jb     0x41e4fc
  41e57c:	or     eax,0x6abe8f68
  41e581:	push   0xa
  41e583:	jb     0x41e565
  41e585:	jmp    0xfc7b:0x7513e806
  41e58c:	adc    dh,dl
  41e58e:	cmp    al,al
  41e590:	jb     0x41e51f
  41e592:	loope  0x41e554
  41e594:	fwait
  41e595:	loope  0x41e587
  41e597:	inc    BYTE PTR [edx-0x1ad2910f]
  41e59d:	push   0xde3bc07b
  41e5a2:	lock inc DWORD PTR [edx-0xa]
  41e5a6:	outs   dx,BYTE PTR ds:[esi]
  41e5a7:	and    ebp,ecx
  41e5a9:	js     0x41e626
  41e5ab:	rol    BYTE PTR [eax],0xdf
  41e5ae:	std    
  41e5af:	call   0x7dcd9437
  41e5b4:	in     al,dx
  41e5b5:	add    BYTE PTR [eax],al
  41e5b7:	add    BYTE PTR [esi+0x4],cl
  41e5ba:	add    BYTE PTR [eax],al
  41e5bc:	or     DWORD PTR [ecx],edi
  41e5be:	push   ebx
  41e5bf:	mov    DWORD PTR [esi],ebx
  41e5c1:	addr16 or al,0x89
  41e5c4:	push   es
  41e5c5:	adc    BYTE PTR [bp+di+0x460],al
  41e5ca:	or     eax,DWORD PTR [esi+0x366]
  41e5d0:	loop   0x41e5b4
  41e5d2:	cld    
  41e5d3:	dec    DWORD PTR [edx-0x5e]
  41e5d6:	hlt    
  41e5d7:	fisub  DWORD PTR [ecx+edx*4+0x4861f62f]
  41e5de:	jo     0x41e5eb
  41e5e0:	mov    eax,ds:0x934fe48a
  41e5e5:	add    al,BYTE PTR [eax]
  41e5e7:	mov    eax,edx
  41e5e9:	popf   
  41e5ea:	(bad)  
  41e5eb:	xor    al,cl
  41e5ed:	dec    ebp
  41e5ee:	fimul  DWORD PTR [edi]
  41e5f0:	mov    gs,ecx
  41e5f2:	cld    
  41e5f3:	dec    DWORD PTR [edx]
  41e5f5:	push   ebp
  41e5f6:	sti    
  41e5f7:	inc    edi
  41e5f8:	jecxz  0x41e5ff
  41e5fa:	and    al,0x10
  41e5fc:	pushf  
  41e5fd:	je     0x41e586
  41e5ff:	inc    esp
  41e600:	scas   al,BYTE PTR es:[edi]
  41e601:	ins    DWORD PTR es:[edi],dx
  41e602:	sti    
  41e603:	xor    al,0x52
  41e605:	fwait
  41e606:	cmp    ecx,0x3b4309da
  41e60c:	jbe    0x41e66b
  41e60e:	or     al,0x72
  41e610:	out    0xff,eax
  41e612:	inc    edi
  41e613:	add    al,0x41
  41e615:	add    al,0xfb
  41e617:	push   eax
  41e618:	sahf   
  41e619:	xchg   BYTE PTR [esp+esi*2+0x20000000],bh
  41e620:	sbb    al,0x18
  41e622:	call   0x3c91ab
  41e627:	ror    DWORD PTR [eax+0x70],1
  41e62a:	push   ds
  41e62b:	rep lods al,BYTE PTR ds:[esi]
  41e62d:	add    ah,dh
  41e62f:	ja     0x41e660
  41e631:	add    al,0x87
  41e633:	add    esi,DWORD PTR [ebx+edi*2+0x6f]
  41e637:	jecxz  0x41e5dd
  41e639:	inc    eax
  41e63a:	or     bl,dh
  41e63c:	loop   0x41e67e
  41e63e:	add    BYTE PTR ds:0x6bfef02f,ch
  41e644:	(bad)  
  41e645:	dec    DWORD PTR [eax+0x3102985b]
  41e64b:	dec    esp
  41e64c:	pop    eax
  41e64d:	xchg   BYTE PTR [ebx-0x48],dh
  41e650:	fidivr DWORD PTR [esp]
  41e653:	fistp  DWORD PTR [edi]
  41e655:	push   ds
  41e656:	add    ecx,DWORD PTR [ebx-0x69]
  41e659:	mov    bl,0xff
  41e65b:	sub    al,0xeb
  41e65d:	shl    BYTE PTR [ebx-0x7],0xda
  41e661:	cmp    al,0x24
  41e663:	sti    
  41e664:	mov    edi,0x6f543198
  41e669:	add    BYTE PTR [esi-0x5b],dl
  41e66c:	mov    esp,0xb1c6e118
  41e671:	add    BYTE PTR [esi-0x5b],dl
  41e674:	(bad)  
  41e675:	out    dx,eax
  41e676:	dec    edi
  41e677:	loope  0x41e628
  41e679:	add    BYTE PTR [ecx],bh
  41e67b:	mov    ch,0xbb
  41e67d:	repnz mov ah,ch
  41e680:	inc    edi
  41e681:	add    ecx,DWORD PTR [ecx-0x54000000]
  41e687:	and    eax,0x97ec88f1
  41e68c:	add    ecx,DWORD PTR [ecx-0x170eea44]
  41e692:	jecxz  0x41e651
  41e694:	mov    DWORD PTR [edx],edx
  41e696:	xchg   ebx,eax
  41e697:	pusha  
  41e698:	inc    eax
  41e699:	add    BYTE PTR [ebx-0x64fb6291],al
  41e69f:	add    BYTE PTR [bx+si],al
  41e6a2:	repz mov edi,0x73d5cc0
  41e6a8:	inc    edx
  41e6a9:	jge    0x41e63c
  41e6ab:	fisubr DWORD PTR [ecx+0x376b7a2f]
  41e6b1:	xor    edi,DWORD PTR [edx-0x38]
  41e6b4:	loop   0x41e63a
  41e6b6:	adc    DWORD PTR [edi-0x1a],edi
  41e6b9:	xor    DWORD PTR [esi],ebx
  41e6bb:	mov    dh,BYTE PTR [ecx]
  41e6bd:	add    BYTE PTR [esi],dh
  41e6bf:	or     BYTE PTR [edi+0x70],ah
  41e6c2:	and    al,0x7
  41e6c4:	scas   al,BYTE PTR es:[edi]
  41e6c5:	xor    al,0xf7
  41e6c7:	and    DWORD PTR [esi+0x3881d10],0x19914c88
  41e6d1:	cld    
  41e6d2:	repz icebp 
  41e6d4:	mov    cl,BYTE PTR [ecx-0x521b90fa]
  41e6da:	ss jl  0x41e75a
  41e6dd:	adc    bh,bl
  41e6df:	outs   dx,BYTE PTR ds:[esi]
  41e6e0:	fsubr  QWORD PTR [ebp+0x126d7c26]
  41e6e6:	add    ebp,DWORD PTR [edi-0xc]
  41e6e9:	lods   eax,DWORD PTR ds:[esi]
  41e6ea:	add    BYTE PTR [eax],al
  41e6ec:	add    BYTE PTR [esi],dl
  41e6ee:	jl     0x41e761
  41e6f0:	inc    ebp
  41e6f1:	idiv   DWORD PTR [ebx-0x55]
  41e6f4:	mov    esi,DWORD PTR [ebx-0x3e]
  41e6f7:	dec    edx
  41e6f8:	in     al,dx
  41e6f9:	imul   edx,eax,0x2a488ea
  41e6ff:	add    BYTE PTR [edi],bh
  41e701:	jmp    0x41e6fb
  41e703:	and    al,0x77
  41e705:	arpl   WORD PTR [ebx],bx
  41e707:	aas    
  41e708:	stos   DWORD PTR es:[edi],eax
  41e709:	jne    0x41e786
  41e70b:	and    eax,0x260f6389
  41e710:	inc    ebp
  41e711:	test   DWORD PTR [esi+0x6ef3447a],0x7bbeab08
  41e71b:	cdq    
  41e71c:	fwait
  41e71d:	cwde   
  41e71e:	pop    ebp
  41e71f:	cld    
  41e720:	mov    BYTE PTR [edi-0x70],cl
  41e723:	jmp    FWORD PTR [ecx]
  41e725:	fld    DWORD PTR [ebx-0x40]
  41e728:	mov    ebx,0xf48046b0
  41e72d:	test   al,0xb3
  41e72f:	inc    eax
  41e730:	jmp    0xaa4092b5
  41e735:	outs   dx,DWORD PTR ds:[esi]
  41e736:	adc    BYTE PTR [eax],bh
  41e738:	xchg   ecx,eax
  41e739:	aaa    
  41e73a:	pop    es
  41e73b:	add    al,0x79
  41e73d:	icebp  
  41e73e:	inc    ebp
  41e73f:	push   edx
  41e740:	jb     0x41e6c6
  41e742:	cld    
  41e743:	jmp    0x41e746
  41e745:	in     eax,dx
  41e746:	push   es
  41e747:	add    BYTE PTR [edx],bl
  41e749:	inc    esi
  41e74a:	pop    esi
  41e74b:	push   esp
  41e74c:	jo     0x41e753
  41e74e:	imul   ecx,DWORD PTR [eax+0xa0],0xffffffc8
  41e755:	loopne 0x41e753
  41e757:	push   0x76
  41e759:	jl     0x41e768
  41e75b:	addr16 es jl 0x41e75b
  41e75f:	jmp    0x745aa1b
  41e764:	cmp    BYTE PTR [ebx],dl
  41e766:	or     eax,0xfc7c126d
  41e76b:	jmp    0xfd3ebe52
  41e770:	mov    BYTE PTR [esi],dl
  41e772:	inc    eax
  41e773:	jmp    0xe6405aef
  41e778:	test   DWORD PTR [edi+edi*8+0x7479f0e8],ecx
  41e77f:	in     eax,dx
  41e780:	jge    0x41e77a
  41e782:	fild   QWORD PTR [edx-0x58]
  41e785:	jnp    0x41e76e
  41e787:	push   eax
  41e788:	fidivr DWORD PTR [ebx-0x4]
  41e78b:	gs mov al,0xb
  41e78e:	test   BYTE PTR [edi],ah
  41e790:	lock push es
  41e792:	add    BYTE PTR [ebp+ecx*2+0x52],ch
  41e796:	cli    
  41e797:	push   ss
  41e798:	jnp    0x41e764
  41e79a:	out    0x7a,eax
  41e79c:	mov    BYTE PTR [edx-0x4],bh
  41e79f:	add    BYTE PTR [esi+0x46],al
  41e7a2:	jo     0x41e805
  41e7a4:	lods   eax,DWORD PTR ds:[esi]
  41e7a5:	or     al,0xe0
  41e7a7:	call   0x3d9dd3
  41e7ac:	adc    DWORD PTR [esi+0x4036f337],edx
  41e7b2:	push   esi
  41e7b3:	lea    edx,[edi]
  41e7b5:	stos   DWORD PTR es:[edi],eax
  41e7b6:	stc    
  41e7b7:	inc    DWORD PTR [eax]
  41e7b9:	add    BYTE PTR [eax],al
  41e7bb:	popf   
  41e7bc:	xor    edx,DWORD PTR [eax-0x18]
  41e7bf:	data16 mov ah,0xfc
  41e7c2:	inc    DWORD PTR [edi]
  41e7c4:	inc    ebx
  41e7c5:	jo     0x41e802
  41e7c7:	or     DWORD PTR [edx-0x38301f8f],eax
  41e7cd:	out    dx,eax
  41e7ce:	push   eax
  41e7cf:	shr    DWORD PTR [edi],cl
  41e7d1:	lock mov DWORD PTR [edi-0x6da27a6a],ebp
  41e7d8:	fwait
  41e7d9:	mov    edx,0x80825d8e
  41e7de:	shl    dh,0x6b
  41e7e1:	sti    
  41e7e2:	xor    eax,0x3fd56e
  41e7e7:	lahf   
  41e7e8:	xchg   esp,edx
  41e7ea:	std    
  41e7eb:	popf   
  41e7ec:	or     DWORD PTR [ebp+ecx*4-0x29],0xdfe84c92
  41e7f4:	(bad)  
  41e7f5:	sti    
  41e7f6:	inc    DWORD PTR [edx+0x578dfac7]
  41e7fc:	xchg   esi,eax
  41e7fd:	in     al,0x5a
  41e7ff:	xchg   ecx,eax
  41e800:	cmp    ebx,0xd48fa256
  41e806:	(bad)  
  41e807:	sub    eax,0x32e07200
  41e80c:	jnp    0x41e828
  41e80e:	dec    DWORD PTR ds:0xc6681d9e
  41e814:	add    al,BYTE PTR [eax]
  41e816:	add    BYTE PTR [edi-0x78],bl
  41e819:	aam    0xfd
  41e81b:	repz adc BYTE PTR [ebp+0x4f],al
  41e822:	mov    esp,0xdefcfc90
  41e827:	stos   DWORD PTR es:[edi],eax
  41e828:	repz aas 
  41e82a:	repz mov bh,0xc7
  41e82d:	add    edx,esi
  41e82f:	outs   dx,DWORD PTR ds:[esi]
  41e830:	add    BYTE PTR [ebp+0x15],dh
  41e833:	and    bh,BYTE PTR [edi]
  41e835:	std    
  41e836:	repnz daa 
  41e838:	daa    
  41e839:	std    
  41e83a:	pop    es
  41e83b:	cmp    edi,DWORD PTR [ecx+0x42]
  41e83e:	xchg   edi,eax
  41e83f:	sbb    al,0x8e
  41e841:	cmp    BYTE PTR [ebx+0x6d],0xa
  41e845:	sbb    BYTE PTR [eax-0x51],dh
  41e848:	or     BYTE PTR [edi+0x70],0xa0
  41e84c:	clc    
  41e84d:	push   esp
  41e84e:	pop    ebx
  41e84f:	addr16 out 0xfc,al
  41e852:	pop    esp
  41e853:	in     al,0x90
  41e855:	cmp    BYTE PTR [eax+0x1a],ah
  41e858:	inc    DWORD PTR [edi+0x389998ae]
  41e85e:	fldcw  WORD PTR [esi+0x31]
  41e861:	push   esi
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	loop   0x41e80d
  41e865:	cli    
  41e866:	xor    al,0x80
  41e868:	xor    BYTE PTR [ecx-0x40],dl
  41e86b:	clc    
  41e86c:	out    dx,eax
  41e86d:	inc    edi
  41e86e:	add    BYTE PTR [eax],dh
  41e870:	add    al,0x81
  41e872:	sbb    ecx,DWORD PTR [edi-0xb]
  41e875:	pushf  
  41e876:	scas   al,BYTE PTR es:[edi]
  41e877:	loopne 0x41e841
  41e879:	pop    edx
  41e87a:	or     al,0x52
  41e87c:	jmp    0x768b:0x2abca050
  41e883:	aaa    
  41e884:	mov    ah,bh
  41e886:	add    BYTE PTR [eax],al
  41e888:	add    ah,dh
  41e88a:	sahf   
  41e88b:	cwde   
  41e88c:	mov    dl,0xca
  41e88e:	cmp    DWORD PTR [esi+0x6f61b382],eax
  41e894:	inc    edx
  41e895:	fcom   QWORD PTR [eax+0x7bb6f98]
  41e89b:	and    eax,0xa38d2e86
  41e8a0:	xchg   BYTE PTR [edi],ah
  41e8a2:	fcomp  QWORD PTR [edi]
  41e8a4:	ret    0xb1d4
  41e8a7:	popa   
  41e8a8:	add    esi,ebx
  41e8aa:	mov    dh,0xe7
  41e8ac:	ret    0xed43
  41e8af:	out    0xd2,al
  41e8b1:	retf   
  41e8b2:	in     eax,dx
  41e8b3:	out    0x42,al
  41e8b5:	mov    edx,DWORD PTR [esi+0x60]
  41e8b8:	add    esi,ebx
  41e8ba:	mov    WORD PTR [ecx+0x136eb229],gs
  41e8c0:	test   BYTE PTR [bx+si+0x39],bh
  41e8c4:	sub    eax,0x4461430b
  41e8c9:	repz in al,dx
  41e8cb:	out    0xd1,al
  41e8cd:	dec    ebx
  41e8ce:	js     0x41e8a3
  41e8d0:	outs   dx,DWORD PTR ds:[esi]
  41e8d1:	hlt    
  41e8d2:	(bad)  
  41e8d3:	out    0x78,al
  41e8d5:	sub    BYTE PTR fs:[ebp+0x71d21f10],0xd7
  41e8dd:	js     0x41e8f6
  41e8df:	daa    
  41e8e0:	add    al,0x9d
  41e8e2:	in     al,dx
  41e8e3:	out    0x98,al
  41e8e5:	jecxz  0x41e8b7
  41e8e7:	(bad)  
  41e8e8:	out    dx,eax
  41e8e9:	ins    BYTE PTR es:[edi],dx
  41e8ea:	pop    ss
  41e8eb:	daa    
  41e8ec:	add    al,0x0
  41e8ee:	add    BYTE PTR [eax],al
  41e8f0:	jo     0x41e939
  41e8f2:	repnz cld 
  41e8f4:	mov    ah,0x77
  41e8f6:	fld    TBYTE PTR [ebx-0x14]
  41e8f9:	(bad)  
  41e8fa:	out    0x2d,al
  41e8fc:	mov    esi,0x1c793b77
  41e901:	adc    BYTE PTR [edi+ecx*1+0xf],0xd7
  41e906:	mov    ebp,0xf378fd50
  41e90b:	jae    0x41e8f1
  41e90d:	(bad)  
  41e90e:	out    0x25,al
  41e910:	dec    eax
  41e911:	fdiv   DWORD PTR [eax-0x3f]
  41e914:	dec    ebx
  41e915:	inc    esp
  41e916:	call   FWORD PTR [edx-0x3d0112df]
  41e91c:	lock outs dx,BYTE PTR ds:[esi]
  41e91e:	int    0x21
  41e920:	jbe    0x41e99c
  41e922:	sar    BYTE PTR [ebx-0x7d0012ff],0xf0
  41e929:	outs   dx,BYTE PTR ds:[esi]
  41e92a:	rcl    DWORD PTR [ecx],0x6e
  41e92d:	jp     0x41e8ef
  41e92f:	pushf  
  41e930:	sub    ebp,DWORD PTR [esi+edi*2+0xd]
  41e934:	xchg   ebx,eax
  41e935:	add    eax,DWORD PTR [eax]
  41e937:	jmp    0x34ccbb0a
  41e93c:	dec    ebp
  41e93d:	jle    0x41e93b
  41e93f:	out    0x9,al
  41e941:	aad    0xfb
  41e943:	jb     0x41e9be
  41e945:	pop    edi
  41e946:	mov    ?,esp
  41e948:	lock push es
  41e94a:	add    ebx,DWORD PTR [ebx+0x530006f1]
  41e950:	arpl   di,ax
  41e952:	imul   ebp,ecx,0xdd000000
  41e958:	hlt    
  41e959:	shr    DWORD PTR [edx-0x68],cl
  41e95c:	jp     0x41e945
  41e95e:	mov    al,0x61
  41e960:	jp     0x41e95e
  41e962:	ins    BYTE PTR es:[edi],dx
  41e963:	xor    cl,bh
  41e965:	sbb    dh,BYTE PTR [edx-0x7a]
  41e968:	(bad)  
  41e969:	addr16 popa 
  41e96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e96c:	(bad)  
  41e96d:	call   FWORD PTR [ebx-0x4b]
  41e970:	dec    ebx
  41e971:	cli    
  41e972:	xchg   BYTE PTR [edi-0x39],dh
  41e975:	out    0xed,eax
  41e977:	pusha  
  41e978:	ja     0x41e976
  41e97a:	ins    BYTE PTR es:[edi],dx
  41e97b:	xor    BYTE PTR [edx],cl
  41e97d:	xchg   ebx,eax
  41e97e:	test   eax,0xf072b794
  41e983:	and    esi,DWORD PTR [edi+0x4b857065]
  41e989:	cli    
  41e98a:	push   esi
  41e98b:	ja     0x41e93d
  41e98d:	in     eax,dx
  41e98e:	call   0xccf083
  41e993:	pop    edi
  41e994:	lods   al,BYTE PTR ds:[esi]
  41e995:	idiv   edi
  41e997:	and    eax,0x8afffcb4
  41e99c:	xor    DWORD PTR [ecx-0x7],esi
  41e99f:	mov    dl,0x26
  41e9a1:	je     0x41e9e3
  41e9a3:	(bad)  
  41e9a5:	or     esp,0x50fb8ae7
  41e9ab:	in     eax,0x64
  41e9ad:	test   al,0x12
  41e9af:	mov    cl,BYTE PTR [edx]
  41e9b1:	jg     0x41ea30
  41e9b3:	test   BYTE PTR [eax],0x76
  41e9b6:	and    al,0x21
  41e9b8:	xor    eax,DWORD PTR [esi+eiz*2]
  41e9bb:	add    BYTE PTR [eax],al
  41e9bd:	add    BYTE PTR [ecx],cl
  41e9bf:	inc    edx
  41e9c0:	cld    
  41e9c1:	jae    0x41e984
  41e9c3:	cmp    bh,bl
  41e9c5:	adc    eax,0x401d1a
  41e9ca:	cdq    
  41e9cb:	retf   0xff4c
  41e9ce:	sbb    eax,0x568588ff
  41e9d3:	mov    bl,bh
  41e9d5:	dec    DWORD PTR [edx]
  41e9d7:	jecxz  0x41e974
  41e9d9:	aam    0x5a
  41e9db:	or     ah,bh
  41e9dd:	or     al,0xd7
  41e9df:	jg     0x41e9a9
  41e9e1:	std    
  41e9e2:	test   DWORD PTR [edx+0x4d4be84c],ecx
  41e9e8:	sti    
  41e9e9:	inc    DWORD PTR ds:0xffc3c569
  41e9ef:	test   eax,ebp
  41e9f1:	sub    DWORD PTR [esi-0xd],0x4d
  41e9f5:	push   ecx
  41e9f6:	or     DWORD PTR [ecx-0x77],edx
  41e9f9:	je     0x41ea29
  41e9fb:	add    ch,al
  41e9fd:	mov    ah,0xa
  41ea00:	add    BYTE PTR [ebx-0x60f21cb4],cl
  41ea06:	sbb    cl,BYTE PTR [edx]
  41ea08:	test   al,al
  41ea0a:	push   ds
  41ea0b:	adc    ch,al
  41ea0d:	mov    bl,dh
  41ea0f:	sbb    BYTE PTR [ecx-0x70a0bf04],al
  41ea15:	dec    ebx
  41ea16:	pop    ss
  41ea17:	js     0x41ea81
  41ea19:	fild   DWORD PTR [ebp+0x695e005f]
  41ea1f:	and    ch,bl
  41ea21:	mov    BYTE PTR [eax],al
  41ea23:	add    BYTE PTR [eax],al
  41ea25:	into   
  41ea26:	add    BYTE PTR [ebp+0x31],0xa8
  41ea2a:	sbb    BYTE PTR [ebp-0x19],ch
  41ea2d:	mov    eax,ds:0x83fc8158
  41ea32:	pop    esi
  41ea33:	inc    ebp
  41ea34:	out    0x32,eax
  41ea36:	mov    ah,0x81
  41ea38:	cld    
  41ea39:	arpl   WORD PTR [esi+0x45],bx
  41ea3c:	push   edx
  41ea3d:	js     0x41ea42
  41ea3f:	sub    ebx,0x53
  41ea42:	popa   
  41ea43:	add    BYTE PTR [eax],al
  41ea45:	inc    eax
  41ea46:	jmp    0x2085f6a5
  41ea4b:	or     BYTE PTR [esi+0x1c],dl
  41ea4e:	into   
  41ea4f:	xchg   BYTE PTR [edi-0x6a479afa],bh
  41ea55:	repz pop edi
  41ea57:	add    cl,ch
  41ea59:	and    eax,0x6407fde1
  41ea5e:	cmp    esi,DWORD PTR [ebx+ecx*4]
  41ea61:	sahf   
  41ea62:	mov    edi,0x4754fc7e
  41ea67:	mov    bh,0x2a
  41ea69:	repz pop edi
  41ea6b:	xor    DWORD PTR [eax-0x5],0x6e4f49f8
  41ea72:	loop   0x41ea1c
  41ea74:	std    
  41ea75:	xor    al,0x84
  41ea77:	jmp    0x24fe:0xd3c6bcff
  41ea7e:	pop    edi
  41ea7f:	push   0x81fcedf9
  41ea84:	sub    BYTE PTR [edi],0x4f
  41ea87:	xchg   DWORD PTR [edi-0x79000000],edi
  41ea8d:	push   es
  41ea8e:	idiv   DWORD PTR [ebx+0x3e70675]
  41ea94:	push   0xf7817eb3
  41ea99:	je     0x41ead9
  41ea9b:	mov    BYTE PTR [ecx],bl
  41ea9d:	pop    es
  41ea9e:	out    0x6b,eax
  41eaa0:	jmp    0x475f:0x4303e6f5
  41eaa7:	push   ss
  41eaa8:	aam    0x74
  41eaaa:	popa   
  41eaab:	clc    
  41eaac:	clc    
  41eaad:	jge    0x41ea9b
  41eaaf:	mov    BYTE PTR [esp+eax*1+0x74bca263],al
  41eab6:	out    0x8c,al
  41eab8:	xor    DWORD PTR [ebx],eax
  41eaba:	fiadd  DWORD PTR [ebx+0x16]
  41eabd:	cs stos BYTE PTR es:[edi],al
  41eabf:	pop    es
  41eac0:	js     0x41eab4
  41eac2:	jmp    0x98c8:0x5f478012
  41eac9:	pop    edi
  41eaca:	(bad)  
  41eacb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eacc:	mov    WORD PTR [edx+ebp*2+0x44],?
  41ead0:	add    dh,dh
  41ead2:	push   eax
  41ead3:	or     BYTE PTR [ebx],cl
  41ead5:	inc    edi
  41ead6:	dec    esi
  41ead7:	les    esi,FWORD PTR [esp+ebp*8-0x61]
  41eadb:	add    al,0xf3
  41eadd:	push   es
  41eade:	(bad)  
  41eadf:	cmp    bl,BYTE PTR [ebx+0x3e]
  41eae2:	in     eax,dx
  41eae3:	add    dh,bl
  41eae5:	mov    ah,BYTE PTR [esi-0x291f4508]
  41eaeb:	add    bl,0x2
  41eaee:	cmovl  eax,DWORD PTR [eax]
  41eaf1:	add    BYTE PTR [eax],al
  41eaf3:	inc    esp
  41eaf4:	je     0x41eadc
  41eaf6:	add    BYTE PTR [esi],0x5f
  41eaf9:	pop    edx
  41eafa:	adc    DWORD PTR [esp+esi*2],esi
  41eafd:	bound  eax,QWORD PTR [eax+eiz*4-0x37]
  41eb01:	adc    BYTE PTR [eax],cl
  41eb03:	js     0x41eacf
  41eb05:	jp     0x41eadb
  41eb07:	xchg   esp,eax
  41eb08:	inc    eax
  41eb09:	(bad)  
  41eb0a:	call   0xb83ef1ff
  41eb0f:	cwde   
  41eb10:	xchg   ecx,eax
  41eb11:	or     al,0xe8
  41eb13:	lock mov bh,BYTE PTR [edi-0x7d803c2b]
  41eb1a:	xor    DWORD PTR [ecx+0x73],0x1873b9fc
  41eb21:	js     0x41eafe
  41eb23:	mov    al,0x73
  41eb25:	dec    esp
  41eb26:	ins    BYTE PTR es:[edi],dx
  41eb27:	je     0x41ead4
  41eb29:	std    
  41eb2a:	ss jb  0x41eaf0
  41eb2d:	addr16 and dh,bh
  41eb30:	push   es
  41eb31:	add    BYTE PTR [esi],ah
  41eb33:	or     DWORD PTR [edi+0x76],ebx
  41eb36:	out    dx,al
  41eb37:	icebp  
  41eb38:	push   es
  41eb39:	test   BYTE PTR [ecx],ch
  41eb3b:	mov    ebx,0xa488fd
  41eb40:	dec    ebp
  41eb41:	jmp    edi
  41eb43:	pusha  
  41eb44:	je     0x41eb2f
  41eb46:	aam    0x6f
  41eb48:	cmp    DWORD PTR [ebx-0x2ff6301],eax
  41eb4e:	mov    bh,0x18
  41eb50:	inc    esp
  41eb51:	shl    bh,cl
  41eb53:	jae    0x41eb2e
  41eb55:	out    0xb3,eax
  41eb57:	add    BYTE PTR [eax],al
  41eb59:	add    BYTE PTR ds:0x2f1bfc72,ah
  41eb5f:	rcr    DWORD PTR [ebp+0x32],cl
  41eb62:	mov    eax,0xa0e90b45
  41eb67:	je     0x41eb27
  41eb69:	in     eax,0xf0
  41eb6b:	xlat   BYTE PTR ds:[ebx]
  41eb6c:	mov    ch,al
  41eb6e:	outs   dx,DWORD PTR ds:[esi]
  41eb6f:	pop    edi
  41eb70:	inc    edi
  41eb71:	sbb    ch,BYTE PTR [ecx]
  41eb73:	jle    0x41eba7
  41eb75:	fldl2e 
  41eb77:	(bad)  
  41eb78:	push   DWORD PTR ds:0x1cfd034d
  41eb7e:	out    0x7f,eax
  41eb80:	inc    edx
  41eb81:	mov    ch,0x40
  41eb83:	jb     0x41eb5a
  41eb85:	add    BYTE PTR [ecx+0x166a08cb],bl
  41eb8b:	test   BYTE PTR [ecx-0x1c],al
  41eb8e:	cli    
  41eb8f:	loop   0x41eb16
  41eb91:	(bad)  
  41eb92:	pushf  
  41eb93:	xchg   BYTE PTR [edi+0x65],bh
  41eb96:	sahf   
  41eb97:	pop    es
  41eb98:	mov    DWORD PTR [ebp-0x52],eax
  41eb9b:	push   edi
  41eb9c:	in     al,0x83
  41eb9e:	push   ds
  41eb9f:	xchg   bl,bh
  41eba1:	test   BYTE PTR [edx],bl
  41eba3:	jns    0x41ebb3
  41eba5:	lea    esp,[edi-0x61981b1e]
  41ebab:	xchg   ebx,edi
  41ebad:	mov    eax,0x639
  41ebb2:	xor    ebx,DWORD PTR [ecx-0x7e250003]
  41ebb8:	inc    ecx
  41ebb9:	aam    0x7a
  41ebbb:	fidivr WORD PTR [ecx-0x7e]
  41ebbe:	add    BYTE PTR [eax],al
  41ebc0:	add    ch,bl
  41ebc2:	xchg   BYTE PTR [eax-0x76e37940],al
  41ebc8:	jne    0x41ebc8
  41ebca:	fld    QWORD PTR [esp+edi*2-0x63]
  41ebce:	repnz mov ah,0x92
  41ebd1:	mov    al,BYTE PTR [esi]
  41ebd3:	add    cl,ch
  41ebd5:	add    al,0x5
  41ebd7:	add    BYTE PTR [eax],al
  41ebd9:	sbb    DWORD PTR [eax-0x14],esp
  41ebdc:	add    BYTE PTR [edi],cl
  41ebde:	inc    eax
  41ebdf:	in     al,dx
  41ebe0:	push   eax
  41ebe1:	mov    dl,0x4c
  41ebe3:	js     0x41ebe4
  41ebe5:	cmp    eax,0x5f75bc7f
  41ebea:	xchg   edi,eax
  41ebeb:	jno    0x41ebdd
  41ebed:	inc    edx
  41ebee:	and    BYTE PTR [edi+edi*8-0x63],bh
  41ebf2:	in     al,0x3b
  41ebf4:	add    DWORD PTR [edx+0x6],ebx
  41ebf7:	push   0x14
  41ebf9:	mov    edi,0xcf50d03f
  41ebfe:	aas    
  41ebff:	mov    esp,0x5598f350
  41ec04:	xor    BYTE PTR [edi],0x54
  41ec07:	push   0x7c8a2246
  41ec0c:	xchg   BYTE PTR [esi+0x1f428f33],dh
  41ec12:	adc    ah,ch
  41ec14:	xchg   esp,eax
  41ec15:	repz pop edi
  41ec17:	add    al,ch
  41ec19:	fwait
  41ec1a:	imul   edi,DWORD PTR [ebp-0x4],0x728ad068
  41ec21:	or     esp,ebx
  41ec23:	jne    0x41ec31
  41ec25:	add    BYTE PTR [eax],al
  41ec27:	add    BYTE PTR [edi+0x28],dh
  41ec2a:	add    al,0x0
  41ec2c:	repz hlt 
  41ec2e:	fdivrp st(3),st
  41ec30:	dec    ecx
  41ec31:	push   0x1c68d231
  41ec36:	fcomi  st,st(4)
  41ec38:	ret    0x51ea
  41ec3b:	or     al,0x6e
  41ec3d:	int3   
  41ec3e:	add    eax,DWORD PTR [eax]
  41ec40:	repz pop esp
  41ec42:	pop    edx
  41ec43:	xchg   DWORD PTR [esi],ebx
  41ec45:	gs mov ebp,edi
  41ec48:	call   0x72c2f959
  41ec4d:	pop    edi
  41ec4e:	add    BYTE PTR [eax],al
  41ec50:	outs   dx,BYTE PTR ds:[esi]
  41ec51:	test   eax,0x782e8718
  41ec56:	cmp    BYTE PTR [edx-0x8],0x5f
  41ec5a:	mul    DWORD PTR [ecx]
  41ec5c:	sbb    DWORD PTR [edi+ecx*4+0x42],esi
  41ec60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec61:	das    
  41ec62:	pop    DWORD PTR [edi+ebp*8+0x2f]
  41ec66:	jge    0x41ec7a
  41ec68:	das    
  41ec69:	jp     0x41ec2b
  41ec6b:	push   DWORD PTR [ecx-0x5d]
  41ec6e:	or     al,0x83
  41ec70:	xor    edi,DWORD PTR [edx]
  41ec72:	or     DWORD PTR [ecx+0x48bfbae],ecx
  41ec78:	xor    eax,0x59ff092a
  41ec7d:	push   es
  41ec7e:	sub    DWORD PTR [ebx-0x3fdbd209],ecx
  41ec84:	mov    edi,0x68d06203
  41ec89:	sbb    eax,0x849f
  41ec8e:	add    BYTE PTR ds:0xf30cc086,bl
  41ec94:	clc    
  41ec95:	int3   
  41ec96:	cmp    al,0xb8
  41ec98:	outs   dx,BYTE PTR ds:[esi]
  41ec99:	stc    
  41ec9a:	pop    ds
  41ec9b:	jp     0x41ece2
  41ec9d:	ror    eax,0xfc
  41eca0:	(bad)  
  41eca2:	fsub   QWORD PTR [ebp+0x79]
  41eca5:	pop    edi
  41eca6:	jmp    0x6f61:0x7eb70e34
  41ecad:	mov    ch,0x7e
  41ecaf:	add    DWORD PTR [edi],esi
  41ecb1:	ffree  st(3)
  41ecb3:	fadd   QWORD PTR [ebp+0xf490f22]
  41ecb9:	(bad)  
  41ecba:	sub    al,0x30
  41ecbc:	jnp    0x41ecbf
  41ecbe:	pop    esp
  41ecbf:	sbb    ebp,DWORD PTR [edi-0x31]
  41ecc2:	enter  0x84c4,0xa3
  41ecc6:	jnp    0x41eca4
  41ecc8:	sub    DWORD PTR ds:0x986bea1b,0xffffff8a
  41eccf:	and    al,0xf2
  41ecd1:	icebp  
  41ecd2:	add    esp,DWORD PTR [eax]
  41ecd4:	enter  0xc86b,0x58
  41ecd8:	xlat   BYTE PTR ds:[ebx]
  41ecd9:	sbb    BYTE PTR [ebx],0x2a
  41ecdc:	sub    BYTE PTR [ebx+0x77],0x79
  41ece0:	retf   0x6cce
  41ece3:	xchg   edx,eax
  41ece4:	pop    ebx
  41ece5:	fdivr  QWORD PTR [ebp+0x71]
  41ece8:	inc    edi
  41ece9:	pop    ebx
  41ecea:	outs   dx,BYTE PTR cs:[esi]
  41ecec:	cli    
  41eced:	mov    esi,0xc45b246c
  41ecf2:	jge    0x41ecf4
  41ecf4:	add    BYTE PTR [eax],al
  41ecf6:	push   ebp
  41ecf7:	ins    DWORD PTR es:[edi],dx
  41ecf8:	mov    esp,0xffd9577d
  41ecfd:	rol    BYTE PTR [ebx+ebx*2],0xfd
  41ed01:	scas   al,BYTE PTR es:[edi]
  41ed02:	pop    ecx
  41ed03:	sbb    BYTE PTR [eax+0x39],bl
  41ed06:	push   0x2c6cf3c5
  41ed0b:	lods   al,BYTE PTR ds:[esi]
  41ed0c:	dec    edi
  41ed0d:	add    DWORD PTR [edx+0x7a8efd54],0x247f8260
  41ed17:	or     bh,ah
  41ed19:	mov    al,ds:0x62fc7295
  41ed1e:	add    al,0x68
  41ed20:	mov    BYTE PTR [ebx+ecx*4],ah
  41ed23:	fldenv [edi+0x7e]
  41ed26:	test   DWORD PTR [esi],0xf2c75100
  41ed2c:	cld    
  41ed2d:	push   esi
  41ed2e:	lds    edi,FWORD PTR [ebp-0x29]
  41ed31:	inc    ecx
  41ed32:	lock pop edx
  41ed34:	std    
  41ed35:	inc    esi
  41ed36:	ins    BYTE PTR es:[edi],dx
  41ed37:	hlt    
  41ed38:	out    dx,eax
  41ed39:	push   ecx
  41ed3a:	dec    esp
  41ed3b:	out    dx,al
  41ed3c:	cld    
  41ed3d:	ss jnp 0x41ed8e
  41ed40:	jb     0x41ed20
  41ed42:	jne    0x41ed38
  41ed44:	jmp    0x41ed57
  41ed46:	sbb    dh,ch
  41ed48:	cld    
  41ed49:	push   ds
  41ed4a:	ja     0x41eccc
  41ed4c:	(bad)  
  41ed4d:	call   0x5c4b4b42
  41ed52:	pushf  
  41ed53:	pop    ebx
  41ed54:	out    0x33,eax
  41ed56:	cdq    
  41ed57:	jb     0x41ed55
  41ed59:	mov    edx,0x30000000
  41ed5e:	rcr    DWORD PTR [ebp-0x6e],cl
  41ed61:	cmp    DWORD PTR [esi+0x3],eax
  41ed64:	jmp    0x692d6c06
  41ed69:	or     al,0xa8
  41ed6b:	add    ecx,ebp
  41ed6d:	lock aad 0x55
  41ed70:	ds jp  0x41edd2
  41ed73:	xor    dh,cl
  41ed75:	mov    BYTE PTR ds:[edx+0x0],bh
  41ed79:	call   0x8018:0x95fc717c
  41ed80:	adc    bl,BYTE PTR [edx]
  41ed82:	or     ecx,DWORD PTR [ecx+0x797c0c1c]
  41ed88:	clc    
  41ed89:	ret    
  41ed8a:	jo     0x41ed7c
  41ed8c:	cmp    ebx,DWORD PTR [ecx+0x2]
  41ed8f:	jg     0x41ed46
  41ed91:	sbb    al,BYTE PTR [ebx]
  41ed93:	add    BYTE PTR [ebx+0x458586cf],cl
  41ed99:	sbb    dh,0xc
  41ed9c:	paddusw mm7,mm3
  41ed9f:	jle    0x41ed9a
  41eda1:	adc    BYTE PTR [edi+0x8],dh
  41eda4:	add    DWORD PTR [ebx-0x76f88c00],0xffffffc3
  41edab:	(bad)  
  41edac:	cmp    cl,cl
  41edae:	jne    0x41ed98
  41edb0:	mov    eax,DWORD PTR [edx+0x1f]
  41edb3:	jns    0x41edb1
  41edb5:	sub    ebp,ebx
  41edb7:	aaa    
  41edb8:	ret    
  41edb9:	sahf   
  41edba:	adc    cl,BYTE PTR [ecx-0x38d037b8]
  41edc0:	jae    0x41edc2
  41edc2:	add    BYTE PTR [eax],al
  41edc4:	aam    0x64
  41edc6:	jg     0x41ee00
  41edc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edc9:	jne    0x41edcf
  41edcb:	dec    cx
  41edcd:	xor    DWORD PTR [edx],ecx
  41edcf:	jne    0x41ed99
  41edd1:	jg     0x41ed90
  41edd3:	sbb    edx,0x7
  41edd6:	xchg   DWORD PTR [ebp+0x2],ecx
  41edd9:	jge    0x41ede3
  41eddb:	lea    ecx,[esi+0x700000a]
  41ede1:	jne    0x41edd3
  41ede3:	mov    DWORD PTR [edi-0x12],ebx
  41ede6:	in     al,0x91
  41ede8:	call   0x4ac6e9d8
  41eded:	ja     0x41ee39
  41edef:	test   DWORD PTR [ebp-0xc00ec89],edx
  41edf5:	retf   0x886b
  41edf8:	sub    al,0x48
  41edfa:	out    0xc,eax
  41edfc:	pop    esp
  41edfd:	inc    ebp
  41edfe:	mov    WORD PTR [edx+0x5f],cs
  41ee01:	stc    
  41ee02:	into   
  41ee03:	idiv   DWORD PTR [edx+0x5c]
  41ee06:	xchg   ebx,eax
  41ee07:	xor    BYTE PTR [ebx],0x34
  41ee0a:	xor    eax,0x8ca7b689
  41ee0f:	dec    edx
  41ee10:	aas    
  41ee11:	(bad)  
  41ee13:	jle    0x41ee85
  41ee15:	pop    eax
  41ee16:	add    BYTE PTR [esp+ebp*8-0x18],dh
  41ee1a:	xor    ebp,eax
  41ee1c:	xchg   esp,eax
  41ee1d:	dec    edi
  41ee1e:	jns    0x41ee1c
  41ee20:	adc    al,0x23
  41ee22:	jl     0x41ee5a
  41ee24:	scas   al,BYTE PTR es:[edi]
  41ee25:	repz or BYTE PTR [edx-0x69000000],al
  41ee2c:	fdivr  QWORD PTR [eax-0x4]
  41ee2f:	jo     0x41ee94
  41ee31:	js     0x41ee2f
  41ee33:	jle    0x41ee3b
  41ee35:	inc    ecx
  41ee36:	inc    edx
  41ee37:	jecxz  0x41ee27
  41ee39:	add    eax,DWORD PTR [eax]
  41ee3b:	xrelease mov BYTE PTR [ebx],0xff
  41ee3f:	fcomp  QWORD PTR [edi-0x73]
  41ee42:	inc    edx
  41ee43:	fcmovnu st,st(2)
  41ee45:	div    bl
  41ee47:	fist   DWORD PTR [ecx+0x55]
  41ee4a:	std    
  41ee4b:	(bad)  
  41ee4c:	enter  0x3060,0xbc
  41ee50:	div    di
  41ee53:	in     al,0xe5
  41ee55:	push   esi
  41ee56:	jmp    FWORD PTR [edi+ebx*2+0x5ea74241]
  41ee5d:	add    BYTE PTR [eax],al
  41ee5f:	repz div dh
  41ee62:	jmp    0x41eecc
  41ee64:	mov    ds:0x43e886c,al
  41ee69:	cmp    edi,DWORD PTR [ebx+edi*8]
  41ee6c:	dec    esp
  41ee6d:	jl     0x41ee13
  41ee6f:	repz push es
  41ee71:	out    0x3,eax
  41ee73:	push   0x2
  41ee75:	out    dx,eax
  41ee76:	loope  0x41ee9d
  41ee78:	das    
  41ee79:	out    0x7f,al
  41ee7b:	mov    eax,DWORD PTR [esi]
  41ee7d:	out    0x3,eax
  41ee7f:	ret    
  41ee80:	ins    DWORD PTR es:[edi],dx
  41ee81:	fild   DWORD PTR [ebx-0x711938fe]
  41ee87:	rcr    DWORD PTR [edx+0x61],0x4b
  41ee8b:	jnp    0x41ee50
  41ee8d:	mov    dl,0x8e
  41ee8f:	add    BYTE PTR [eax],al
  41ee91:	add    al,dh
  41ee93:	add    al,0x74
  41ee95:	ror    BYTE PTR [esi+ebx*2-0x75],1
  41ee99:	adc    eax,0x5b616d2e
  41ee9e:	jae    0x41ef11
  41eea0:	lea    ecx,[edx]
  41eea2:	ja     0x41ef1e
  41eea4:	out    0x3,al
  41eea6:	repz xor DWORD PTR [esi+0x61e4aff1],ebx
  41eead:	dec    DWORD PTR [ecx]
  41eeaf:	push   ds
  41eeb0:	cld    
  41eeb1:	ret    
  41eeb2:	cld    
  41eeb3:	jns    0x41ee50
  41eeb5:	(bad)  
  41eeb7:	ins    BYTE PTR es:[edi],dx
  41eeb8:	pop    ebp
  41eeb9:	imul   esi,DWORD PTR [edx+0x7a03e71e],0x45
  41eec0:	popa   
  41eec1:	lock aam 0xd7
  41eec4:	inc    ebp
  41eec5:	xor    esi,edx
  41eec7:	adc    dh,BYTE PTR [edi+0x15]
  41eeca:	xor    eax,DWORD PTR [edi]
  41eecc:	ins    BYTE PTR es:[edi],dx
  41eecd:	inc    ebx
  41eece:	inc    eax
  41eecf:	jmp    DWORD PTR [ebp-0x66f0407a]
  41eed5:	push   eax
  41eed6:	retf   
  41eed7:	or     eax,0x3d7b5672
  41eedc:	adc    eax,0x7c1ba80f
  41eee1:	ret    
  41eee2:	pushf  
  41eee3:	mov    BYTE PTR [esi],ah
  41eee5:	lock out 0x7f,eax
  41eee8:	mov    ds:0xffba7b77,eax
  41eeed:	loopne 0x41ef20
  41eeef:	leave  
  41eef0:	out    dx,eax
  41eef1:	push   ebp
  41eef2:	lock push es
  41eef4:	add    BYTE PTR [eax+0x0],dh
  41eef7:	add    BYTE PTR [eax],al
  41eef9:	lock test esp,edi
  41eefc:	add    DWORD PTR [ebx+edi*8-0x78],ebx
  41ef00:	sub    al,0xeb
  41ef02:	jle    0x41ef4e
  41ef04:	loope  0x41eeb9
  41ef06:	enter  0x5cef,0xef
  41ef0a:	push   es
  41ef0b:	add    BYTE PTR [eax-0x10],dh
  41ef0e:	jge    0x41ef8a
  41ef10:	shl    DWORD PTR [esi+0x47],0xe7
  41ef14:	pop    ds
  41ef15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef16:	imul   edi,esp,0xeff16e0f
  41ef1c:	jmp    0x9672fa3e
  41ef21:	outs   dx,BYTE PTR ds:[esi]
  41ef22:	leave  
  41ef23:	jmp    0x41ef0a
  41ef25:	fwait
  41ef26:	enter  0x72fb,0x54
  41ef2a:	jo     0x41ef73
  41ef2c:	ret    0x744d
  41ef2f:	or     al,0x6b
  41ef31:	shr    DWORD PTR [ecx-0x4],0x6e
  41ef35:	mov    es,WORD PTR [edx]
  41ef37:	lds    ebp,FWORD PTR [eax+eax*4-0xf170084]
  41ef3e:	jge    0x41ef82
  41ef40:	push   ecx
  41ef41:	jbe    0x41ef33
  41ef43:	repz inc ecx
  41ef45:	add    al,0x59
  41ef47:	std    
  41ef48:	inc    esi
  41ef49:	sar    DWORD PTR [esi+0x42],1
  41ef4c:	cmp    DWORD PTR [edx+0x2d2058c9],ebp
  41ef52:	or     BYTE PTR [eax],al
  41ef54:	xchg   esp,eax
  41ef55:	outs   dx,DWORD PTR ds:[esi]
  41ef56:	pop    edi
  41ef57:	or     BYTE PTR ds:0x85eb8737,0x0
  41ef5e:	add    BYTE PTR [eax],al
  41ef60:	(bad)  
  41ef61:	rcl    DWORD PTR [ebx+eax*4-0x12],1
  41ef65:	ficom  WORD PTR [esi-0x18798db6]
  41ef6b:	add    BYTE PTR [ebp-0x32],dh
  41ef6e:	cli    
  41ef6f:	dec    DWORD PTR [ecx-0x12]
  41ef72:	test   DWORD PTR [esi+esi*4+0xf],eax
  41ef76:	aaa    
  41ef77:	mov    DWORD PTR [edi],0xcac02f00
  41ef7d:	(bad)  
  41ef7f:	add    DWORD PTR [edx+0x7],ebx
  41ef82:	das    
  41ef83:	ror    bh,0x5b
  41ef86:	and    BYTE PTR [eax-0x2d],al
  41ef89:	xor    al,0x38
  41ef8b:	mov    eax,0x93e80309
  41ef90:	push   eax
  41ef91:	out    dx,al
  41ef92:	sti    
  41ef93:	mov    eax,DWORD PTR [edi]
  41ef95:	sti    
  41ef96:	mov    BYTE PTR [esi+esi*8+0xe],al
  41ef9a:	test   DWORD PTR [esi+eiz*1+0x33],eax
  41ef9e:	das    
  41ef9f:	shl    BYTE PTR [ecx+0x3644c3bd],0x13
  41efa6:	les    edi,FWORD PTR [eax-0x36]
  41efa9:	add    al,bl
  41efab:	inc    esp
  41efac:	es and ebp,esp
  41efaf:	mov    edx,ebx
  41efb1:	add    ch,al
  41efb3:	call   0xe941f7c9
  41efb8:	int3   
  41efb9:	pop    es
  41efba:	add    BYTE PTR [eax],al
  41efbc:	mov    DWORD PTR [edx+0x8],ebp
  41efbf:	adc    ch,bl
  41efc1:	mov    BYTE PTR [edx+0x0],ah
  41efc7:	fiadd  DWORD PTR [esi]
  41efc9:	push   esi
  41efca:	mov    edi,DWORD PTR [ecx]
  41efcc:	fisubr WORD PTR [esi]
  41efce:	or     al,0xcb
  41efd0:	push   es
  41efd1:	xchg   eax,edi
  41efd3:	push   edi
  41efd4:	out    dx,eax
  41efd5:	or     eax,DWORD PTR [esi+eiz*1+0x65000006]
  41efdc:	fidiv  WORD PTR [eax+0x7fef0dfb]
  41efe2:	dec    esp
  41efe3:	mov    dh,0x16
  41efe5:	sti    
  41efe6:	psllq  mm1,mm0
  41efe9:	jo     0x41f050
  41efeb:	jbe    0x41efff
  41efed:	out    dx,al
  41efee:	ss push 0x3c8b049d
  41eff4:	push   eax
  41eff5:	rol    DWORD PTR [eax-0x1917af65],1
  41effb:	jle    0x41f05d
  41effd:	add    al,ch
  41efff:	mov    ds:0x7afc7575,al
  41f004:	and    al,0x20
  41f006:	adc    al,0x6e
  41f008:	mov    al,ds:0xef9d04ee
  41f00d:	add    eax,DWORD PTR [eax]
  41f00f:	repz push esp
  41f011:	push   es
  41f012:	mov    edi,DWORD PTR [edi+0x5b4f1403]
  41f018:	mov    edi,0x493cfc76
  41f01d:	lods   eax,DWORD PTR ds:[esi]
  41f01e:	out    dx,eax
  41f01f:	xor    al,0xc
  41f021:	and    BYTE PTR [ebx+ebx*1],dl
  41f024:	push   esi
  41f025:	push   ebx
  41f026:	std    
  41f027:	and    al,0xe5
  41f029:	mov    edi,0x23
  41f02e:	add    eax,DWORD PTR [edx]
  41f030:	mov    esi,DWORD PTR [ebx-0x31]
  41f033:	aas    
  41f034:	mov    eax,DWORD PTR [ebx-0x29]
  41f037:	inc    ebx
  41f038:	mov    edi,DWORD PTR [ebx-0x31]
  41f03b:	inc    edi
  41f03c:	cmp    al,BYTE PTR [ebx-0x29]
  41f03f:	dec    eax
  41f040:	add    BYTE PTR [edx-0xd],ch
  41f043:	push   ebp
  41f044:	add    ecx,DWORD PTR [ebx+0x4fcc0437]
  41f04a:	jbe    0x41f097
  41f04c:	sbb    al,0x38
  41f04e:	retf   
  41f04f:	ret    0x28
  41f052:	repz fild DWORD PTR [ebx+0x72]
  41f056:	in     eax,0x57
  41f058:	mov    BYTE PTR [eax],dl
  41f05a:	repz pop edi
  41f05c:	jne    0x41f070
  41f05e:	stos   DWORD PTR es:[edi],eax
  41f05f:	dec    ebp
  41f060:	sar    bh,0xb6
  41f063:	push   es
  41f064:	stos   DWORD PTR es:[edi],eax
  41f065:	pop    ds
  41f066:	inc    BYTE PTR [esi+0x4f61f9a]
  41f06c:	cdq    
  41f06d:	dec    edi
  41f06e:	inc    edi
  41f06f:	pop    edi
  41f070:	or     BYTE PTR [esi+edx*4+0x69],dl
  41f074:	jno    0x41f067
  41f076:	hlt    
  41f077:	jge    0x41f0a2
  41f079:	mov    esi,DWORD PTR [esi+0x7c0acd5e]
  41f07f:	imul   edi,DWORD PTR [ecx+0x214e6b76],0x1e83ff57
  41f089:	ja     0x41f0f2
  41f08b:	imul   edx,DWORD PTR [ecx],0xcdfbe06f
  41f091:	sub    eax,0x4b000000
  41f096:	test   eax,0xd04f7596
  41f09b:	into   
  41f09c:	mov    esp,0xa3b56834
  41f0a1:	add    al,0xaf
  41f0a3:	sub    DWORD PTR [ebx+ecx*4],eax
  41f0a6:	push   ss
  41f0a7:	sbb    ebx,ebp
  41f0a9:	jns    0x41f06d
  41f0ab:	ret    0xc313
  41f0ae:	jg     0x41f0c2
  41f0b0:	and    BYTE PTR [edi],al
  41f0b2:	pop    edi
  41f0b3:	ins    BYTE PTR es:[edi],dx
  41f0b4:	out    dx,al
  41f0b5:	pop    ss
  41f0b6:	imul   ebp,DWORD PTR [edx+0x43],0x1b8f2a80
  41f0bd:	mov    ch,BYTE PTR [ecx+0x75]
  41f0c0:	xor    BYTE PTR [esi+eiz*1],0x60
  41f0c4:	mov    edi,0xbf7412d0
  41f0c9:	adc    BYTE PTR [ebx],dl
  41f0cb:	mov    bh,0xe9
  41f0cd:	in     eax,0xde
  41f0cf:	jmp    0xd776:0xcea5d4db
  41f0d6:	push   0x5ee31fba
  41f0db:	js     0x41f0e1
  41f0dd:	les    ebp,FWORD PTR [eax-0x1]
  41f0e0:	imul   ebp,ebx,0xf0aaac26
  41f0e6:	push   ss
  41f0e7:	push   0x8006f0e9
  41f0ec:	xchg   ebx,eax
  41f0ed:	hlt    
  41f0ee:	jg     0x41f16b
  41f0f0:	int    0xf8
  41f0f2:	imul   edx,DWORD PTR [edx],0xffc6e45d
  41f0f8:	jae    0x41f0fa
  41f0fa:	add    BYTE PTR [eax],al
  41f0fc:	pushf  
  41f0fd:	and    al,0x10
  41f0ff:	adc    DWORD PTR [ebx+0xaf6fcf3],esi
  41f105:	mov    esi,0xfe84e1a7
  41f10a:	out    0x5a,eax
  41f10c:	std    
  41f10d:	addr16 cld 
  41f10f:	mov    DWORD PTR [edi],esp
  41f111:	scas   eax,DWORD PTR es:[edi]
  41f112:	inc    eax
  41f113:	jmp    0x6b5f8a0
  41f118:	inc    edi
  41f119:	nop
  41f11a:	ja     0x41f145
  41f11c:	neg    DWORD PTR [esi+0x6c]
  41f11f:	scas   al,BYTE PTR es:[edi]
  41f120:	mov    esi,0x78f19e6a
  41f125:	(bad)  
  41f126:	inc    DWORD PTR [eax-0x11]
  41f129:	push   es
  41f12a:	add    BYTE PTR [ecx-0x40],ch
  41f12d:	pop    edi
  41f12e:	or     BYTE PTR [ecx-0x17962910],0x2f
  41f135:	rcl    DWORD PTR [esi+ecx*4-0x1c],cl
  41f139:	(bad)  
  41f13a:	movaps xmm7,xmm6
  41f13d:	pop    ebp
  41f13e:	push   cs
  41f13f:	push   ecx
  41f140:	repz repnz or al,BYTE PTR [ecx]
  41f144:	test   DWORD PTR [esi],0x14096900
  41f14a:	std    
  41f14b:	cld    
  41f14c:	je     0x41f161
  41f14e:	inc    eax
  41f14f:	jmp    0xf165e5b3
  41f154:	dec    eax
  41f155:	sub    al,0xff
  41f157:	out    0xf0,eax
  41f159:	jnp    0x41f19e
  41f15b:	add    dh,bh
  41f15d:	dec    edx
  41f15e:	dec    esp
  41f15f:	mov    DWORD PTR [eax],0x78e0000
  41f165:	xor    ah,ch
  41f167:	push   ebx
  41f168:	inc    ebx
  41f169:	cld    
  41f16a:	(bad)  
  41f16b:	lahf   
  41f16c:	fisttp DWORD PTR [esi]
  41f16e:	inc    eax
  41f16f:	call   0x874e:0x645fc036
  41f176:	in     eax,0x67
  41f178:	lds    eax,FWORD PTR [eax]
  41f17a:	add    BYTE PTR [esi+edi*2-0x14],bl
  41f17e:	push   edi
  41f17f:	dec    ecx
  41f180:	ret    
  41f181:	xchg   esi,ecx
  41f183:	dec    ecx
  41f184:	repnz in al,0x28
  41f187:	nop
  41f188:	add    al,0x0
  41f18a:	test   edx,ecx
  41f18c:	jbe    0x41f1f5
  41f18e:	mov    esp,DWORD PTR [edx+ebp*4+0x4601ce4]
  41f195:	add    BYTE PTR [ebp-0x7a0fa776],al
  41f19b:	and    eax,0x5c8b5757
  41f1a0:	repnz ins BYTE PTR es:[edi],dx
  41f1a2:	adc    al,0xea
  41f1a4:	fisub  DWORD PTR [edx]
  41f1a6:	rol    BYTE PTR [edx+esi*8-0x26300f79],1
  41f1ad:	jo     0x41f1d1
  41f1af:	add    BYTE PTR [edi],al
  41f1b1:	call   0xfc334741
  41f1b6:	test   DWORD PTR [edx+0x57],ecx
  41f1b9:	add    DWORD PTR [ebx+0x2e7032a],eax
  41f1bf:	dec    ecx
  41f1c0:	ret    
  41f1c1:	add    eax,0x308568fe
  41f1c7:	add    BYTE PTR [eax],al
  41f1c9:	add    BYTE PTR [ecx-0x23f7180d],dl
  41f1cf:	fimul  DWORD PTR [edi+ecx*8-0x9d024ac]
  41f1d6:	pushf  
  41f1d7:	jb     0x41f249
  41f1d9:	int    0xf3
  41f1db:	scas   al,BYTE PTR es:[edi]
  41f1dc:	add    BYTE PTR [edx-0xd],ch
  41f1df:	(bad)  
  41f1e0:	sub    dl,dl
  41f1e2:	int3   
  41f1e3:	int    0x7d
  41f1e5:	mov    edi,0xf57d3b3e
  41f1ea:	inc    edi
  41f1eb:	imul   esi,DWORD PTR [ebx+0x35],0xffffffcb
  41f1ef:	mov    ds:0xa6acfd43,al
  41f1f4:	push   0x7406b46b
  41f1f9:	xor    DWORD PTR [ebx-0xd5000f7],esi
  41f1ff:	mov    ah,0xd2
  41f201:	shl    BYTE PTR [esi],0xd9
  41f204:	adc    BYTE PTR fs:[edi-0xd9630c0],0x84
  41f20c:	jae    0x41f220
  41f20e:	pop    ds
  41f20f:	inc    eax
  41f210:	sar    bh,0x77
  41f213:	mov    al,0xf7
  41f215:	jbe    0x41f237
  41f217:	dec    ecx
  41f218:	aam    0x50
  41f21a:	leave  
  41f21b:	outs   dx,BYTE PTR ds:[esi]
  41f21c:	frndint 
  41f21e:	(bad)  
  41f21f:	pop    ss
  41f220:	adc    al,0x40
  41f222:	repz repnz inc ebx
  41f225:	jae    0x41f202
  41f227:	add    BYTE PTR [edi+0x42],bh
  41f22a:	aas    
  41f22b:	add    dh,bl
  41f22d:	inc    BYTE PTR [eax]
  41f22f:	add    BYTE PTR [eax],al
  41f231:	int3   
  41f232:	sub    ebx,0x3f
  41f235:	rep lods al,BYTE PTR ds:[esi]
  41f237:	push   ss
  41f238:	pop    esp
  41f239:	add    esi,DWORD PTR [eax]
  41f23b:	add    al,0x83
  41f23d:	xor    eax,DWORD PTR [ebx+ebp*1]
  41f240:	mov    ebp,DWORD PTR [esi-0x49752c85]
  41f246:	xchg   ebx,edx
  41f248:	mov    ch,BYTE PTR [esi-0x79032c21]
  41f24e:	fstp   TBYTE PTR [edx+0x5a]
  41f251:	sti    
  41f252:	hlt    
  41f253:	push   ss
  41f254:	pusha  
  41f255:	add    eax,DWORD PTR [edi]
  41f257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f258:	add    esi,DWORD PTR [eax+0x46]
  41f25b:	rcl    BYTE PTR [edi],cl
  41f25d:	(bad)  
  41f25f:	pop    edx
  41f260:	jae    0x41f2c3
  41f262:	pop    edi
  41f263:	dec    ebp
  41f264:	stc    
  41f265:	fdivr  QWORD PTR [ebp-0x8b0e6bb]
  41f26b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f26c:	add    esi,DWORD PTR [eax+0x46]
  41f26f:	mov    ebx,0x2adbb600
  41f274:	jae    0x41f277
  41f276:	jg     0x41f270
  41f278:	ret    
  41f279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f27a:	mov    BYTE PTR [ebx+0x1a219f6f],ch
  41f280:	clc    
  41f281:	call   0x8d41d6d3
  41f286:	gs out 0x7c,al
  41f289:	push   es
  41f28a:	or     esi,DWORD PTR [eax-0x2e]
  41f28d:	hlt    
  41f28e:	xchg   ecx,eax
  41f28f:	stos   DWORD PTR es:[edi],eax
  41f290:	outs   dx,DWORD PTR ds:[esi]
  41f291:	mov    ecx,DWORD PTR [eax]
  41f293:	mov    edx,0x43
  41f298:	retf   
  41f299:	dec    edi
  41f29a:	test   eax,0x37727bd8
  41f29f:	fisubr DWORD PTR [ebx+0x1b]
  41f2a2:	pop    ss
  41f2a3:	adc    al,0xb3
  41f2a5:	push   es
  41f2a6:	xor    DWORD PTR ss:[ecx+0x44de1662],0x3ddde6ef
  41f2b1:	fs cmp edi,esp
  41f2b4:	aaa    
  41f2b5:	cmp    al,0x63
  41f2b7:	inc    ebx
  41f2b8:	mov    eax,ds:0xb18a620
  41f2bd:	clc    
  41f2be:	es add al,0x72
  41f2c1:	pop    esi
  41f2c2:	adc    cl,bh
  41f2c4:	(bad)  
  41f2c5:	xchg   ecx,eax
  41f2c6:	and    esi,DWORD PTR [eax+0x71]
  41f2c9:	inc    esi
  41f2ca:	cli    
  41f2cb:	sbb    ebx,DWORD PTR [ebx]
  41f2cd:	out    dx,al
  41f2ce:	lods   al,BYTE PTR ds:[esi]
  41f2cf:	jno    0x41f2d0
  41f2d1:	nop
  41f2d2:	push   DWORD PTR [eax+0x6b]
  41f2d5:	bound  esi,QWORD PTR [ebx-0x34]
  41f2d8:	jae    0x41f2a3
  41f2da:	sti    
  41f2db:	mov    ecx,0xb6fbd961
  41f2e0:	mov    esi,0xd8dcfd65
  41f2e5:	arpl   bp,dx
  41f2e7:	fs xor al,bl
  41f2ea:	add    esi,DWORD PTR [edx+0x39]
  41f2ed:	outs   dx,DWORD PTR ds:[esi]
  41f2ee:	pop    es
  41f2ef:	xchg   esi,eax
  41f2f0:	sbb    ah,bl
  41f2f2:	int    0x37
  41f2f4:	inc    ecx
  41f2f5:	pop    ss
  41f2f6:	ror    BYTE PTR [esi-0x123eb23e],0x0
  41f2fd:	add    BYTE PTR [eax],al
  41f2ff:	lock mov esp,0x28a4570c
  41f305:	or     BYTE PTR [esi-0x1e4f5f8d],bh
  41f30b:	test   DWORD PTR [esi],0x87f17200
  41f311:	(bad)  
  41f312:	jne    0x41f2fe
  41f314:	(bad)  
  41f315:	inc    BYTE PTR [edx+0x6a0f61ef]
  41f31b:	sbb    DWORD PTR [edi],eax
  41f31d:	xor    DWORD PTR [ecx+0x6586ea42],ebp
  41f323:	data16 cld 
  41f325:	(bad)  
  41f326:	call   0xe603b81b
  41f32b:	lock mov bh,0x88
  41f32e:	aad    0x70
  41f330:	jo     0x41f329
  41f332:	jmp    0x1f92fa27
  41f337:	sbb    dl,BYTE PTR [ecx+0x4a478142]
  41f33d:	inc    edx
  41f33e:	mov    ds:0x20716eef,al
  41f343:	mov    ds:0xb31c8a62,al
  41f348:	imul   edx,ecx,0x74
  41f34b:	test   DWORD PTR [esi],0xbef70081
  41f351:	cld    
  41f352:	mov    bl,BYTE PTR [esi+ecx*8+0x41]
  41f356:	int3   
  41f357:	sub    ah,ah
  41f359:	cmp    al,0x0
  41f35b:	jb     0x41f2f7
  41f35d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f35e:	add    dl,bl
  41f360:	loop   0x41f3bb
  41f362:	or     BYTE PTR [eax],al
  41f364:	add    BYTE PTR [eax],al
  41f366:	dec    edi
  41f367:	mov    dl,BYTE PTR [ecx+eax*1]
  41f36a:	retf   0x8507
  41f36d:	inc    ebp
  41f36e:	cmp    ah,ah
  41f370:	jg     0x41f37a
  41f372:	fild   DWORD PTR [edi]
  41f374:	add    dh,al
  41f376:	xchg   edi,eax
  41f377:	ret    
  41f378:	cld    
  41f379:	mov    BYTE PTR [edi+0x5a6d05db],0x7
  41f380:	test   DWORD PTR [ebp-0x2a],eax
  41f383:	fild   WORD PTR [ecx-0x18]
  41f386:	and    DWORD PTR [esp+eiz*8-0x75],ecx
  41f38a:	mov    edx,0x11f441e2
  41f38f:	jae    0x41f390
  41f391:	mov    WORD PTR [esi+0x34],gs
  41f394:	test   al,0x89
  41f396:	call   edi
  41f398:	xor    esi,0x45894af6
  41f39e:	idiv   BYTE PTR [edx]
  41f3a0:	mov    DWORD PTR [ebp-0x5e],eax
  41f3a3:	aaa    
  41f3a4:	or     BYTE PTR fs:[edx+0x7],bl
  41f3a8:	add    BYTE PTR [eax+0x3d],ch
  41f3ab:	(bad)  
  41f3ac:	cld    
  41f3ad:	(bad)  
  41f3ae:	cmp    eax,0x17c7005d
  41f3b3:	out    dx,eax
  41f3b4:	add    BYTE PTR [eax],al
  41f3b6:	dec    edx
  41f3b7:	pop    es
  41f3b8:	sti    
  41f3b9:	adc    eax,0x3ffc8e
  41f3be:	xchg   edi,eax
  41f3bf:	(bad)  
  41f3c0:	jno    0x41f3d7
  41f3c2:	lahf   
  41f3c3:	dec    esp
  41f3c4:	les    edx,FWORD PTR [eax+0x7d]
  41f3c7:	pop    ebp
  41f3c8:	add    al,0xff
  41f3ca:	add    BYTE PTR [eax],al
  41f3cc:	add    bl,dh
  41f3ce:	bound  eax,QWORD PTR [edi+ecx*1]
  41f3d1:	mov    bl,0x6d
  41f3d3:	test   DWORD PTR [edi-0x19a0d0c],edi
  41f3d9:	cld    
  41f3da:	ins    BYTE PTR es:[edi],dx
  41f3db:	outs   dx,DWORD PTR ds:[esi]
  41f3dc:	jb     0x41f3e5
  41f3de:	test   DWORD PTR ds:0x7bf1ecfd,esp
  41f3e4:	inc    edx
  41f3e5:	fistp  WORD PTR [ecx-0x4a]
  41f3e8:	aas    
  41f3e9:	fsub   QWORD PTR [eax-0x46b803a8]
  41f3ef:	outs   dx,DWORD PTR ds:[esi]
  41f3f0:	xor    DWORD PTR [ebx+0x7066083b],0x9
  41f3f7:	add    al,0xd
  41f3f9:	ja     0x41f429
  41f3fb:	add    al,BYTE PTR [eax]
  41f3fd:	repz pop esp
  41f3ff:	inc    eax
  41f400:	gs jp  0x41f46c
  41f403:	inc    esi
  41f404:	inc    edx
  41f405:	test   al,0x6f
  41f407:	pop    ecx
  41f408:	mov    bl,0xf2
  41f40a:	outs   dx,DWORD PTR ds:[esi]
  41f40b:	add    BYTE PTR [edx-0x1],ch
  41f40e:	pop    es
  41f40f:	(bad)  
  41f410:	retf   0x118d
  41f413:	xchg   BYTE PTR [edi+0x4a7b40ff],bh
  41f419:	xchg   DWORD PTR [ecx-0x4a],esi
  41f41c:	push   cs
  41f41d:	in     al,0x21
  41f41f:	mov    edx,0x7b7ec1fc
  41f424:	out    dx,eax
  41f425:	pop    ebx
  41f426:	in     al,0xe7
  41f428:	cld    
  41f429:	pop    esp
  41f42a:	aad    0x73
  41f42c:	call   0x82b7f122
  41f431:	add    BYTE PTR [eax],al
  41f433:	add    BYTE PTR [ebp+0x41],al
  41f436:	test   BYTE PTR [edi-0x76ff900e],al
  41f43c:	mov    esi,0x3942457b
  41f441:	jo     0x41f3ca
  41f443:	cld    
  41f444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f445:	add    al,0x79
  41f447:	add    al,0x76
  41f449:	pop    es
  41f44a:	xor    al,0x50
  41f44c:	lods   eax,DWORD PTR ds:[esi]
  41f44d:	mov    ecx,0x8bc4d49d
  41f452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f453:	stc    
  41f454:	jmp    0x29335e41
  41f459:	(bad)  
  41f45a:	cmc    
  41f45b:	xchg   edi,eax
  41f45c:	cmp    al,0x8b
  41f45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f45f:	stc    
  41f460:	in     eax,0x8d
  41f462:	in     eax,dx
  41f463:	(bad)  
  41f465:	mov    ecx,0x5a20d46d
  41f46a:	or     dh,BYTE PTR ds:[ebx+0x317c2660]
  41f471:	pop    ebp
  41f472:	popa   
  41f473:	leave  
  41f474:	fcom   QWORD PTR [ecx]
  41f476:	xchg   esi,eax
  41f477:	or     al,0x8b
  41f479:	test   BYTE PTR ds:0x1e8f304,0x4c
  41f480:	inc    edx
  41f481:	iret   
  41f482:	outs   dx,BYTE PTR ds:[esi]
  41f483:	xor    al,0x20
  41f485:	pop    es
  41f486:	out    0xe5,eax
  41f488:	jmp    0x41f4c8
  41f48a:	popf   
  41f48b:	sub    eax,0x896be109
  41f490:	out    0x61,al
  41f492:	adc    eax,0xb7071a6f
  41f497:	pop    ebx
  41f498:	add    BYTE PTR [eax],al
  41f49a:	add    BYTE PTR [esi+0x6903e82d],dl
  41f4a0:	enter  0x82ea,0xb0
  41f4a4:	adc    bh,bh
  41f4a6:	fcmovnbe st,st(6)
  41f4a8:	popa   
  41f4a9:	in     eax,dx
  41f4aa:	in     eax,0xa5
  41f4ac:	inc    ebp
  41f4ad:	out    dx,al
  41f4ae:	in     eax,0x75
  41f4b0:	mov    ebp,edx
  41f4b2:	outs   dx,BYTE PTR ds:[esi]
  41f4b3:	push   edi
  41f4b4:	popa   
  41f4b5:	dec    esp
  41f4b6:	jge    0x41f521
  41f4b8:	adc    dh,cl
  41f4ba:	outs   dx,BYTE PTR ds:[esi]
  41f4bb:	inc    edi
  41f4bc:	xchg   ebx,eax
  41f4bd:	arpl   di,di
  41f4bf:	aas    
  41f4c0:	popa   
  41f4c1:	mov    ebp,0xff6e2e7a
  41f4c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4c7:	adc    eax,0xb065fc62
  41f4cc:	aam    0x4e
  41f4ce:	aas    
  41f4cf:	mov    edi,0x859e67c9
  41f4d4:	test   DWORD PTR [edi+0x58ff21c],edi
  41f4da:	add    ebp,esi
  41f4dc:	(bad)  
  41f4dd:	int    0x86
  41f4df:	loopne 0x41f54a
  41f4e1:	fucomip st,st(1)
  41f4e3:	lock push es
  41f4e5:	mov    ebp,DWORD PTR [esp+ebp*8+0x63]
  41f4e9:	cld    
  41f4ea:	outs   dx,BYTE PTR ds:[esi]
  41f4eb:	rcl    BYTE PTR [edi],0xd9
  41f4ee:	push   ecx
  41f4ef:	loop   0x41f4db
  41f4f1:	cld    
  41f4f2:	pop    esi
  41f4f3:	ins    BYTE PTR es:[edi],dx
  41f4f4:	mov    al,ds:0x9bcdf773
  41f4f9:	sbb    ch,0x55
  41f4fc:	arpl   sp,di
  41f4fe:	mov    cl,0x0
  41f500:	add    BYTE PTR [eax],al
  41f502:	js     0x41f4d8
  41f504:	add    ch,BYTE PTR [edx+0x18]
  41f507:	cmc    
  41f508:	jb     0x41f4f8
  41f50a:	lods   eax,DWORD PTR ds:[esi]
  41f50b:	fwait
  41f50c:	call   0x378f:0xfc6315df
  41f513:	inc    edi
  41f514:	pop    es
  41f515:	out    dx,al
  41f516:	pop    ebp
  41f517:	aas    
  41f518:	mov    BYTE PTR [eax+eax*1+0x2ef186ea],ch
  41f51f:	(bad)  
  41f522:	stc    
  41f523:	(bad)  
  41f524:	out    0x72,eax
  41f526:	mov    bl,0x40
  41f528:	xchg   BYTE PTR [ecx-0x78103b17],bh
  41f52e:	jmp    0xf0b25792
  41f533:	cmp    esp,0xffffffee
  41f536:	ins    BYTE PTR es:[edi],dx
  41f537:	(bad)  
  41f538:	(bad)  
  41f539:	call   0x5c46832e
  41f53e:	test   BYTE PTR [eax],bh
  41f540:	dec    esi
  41f541:	add    ch,bl
  41f543:	icebp  
  41f544:	dec    esp
  41f545:	sub    bh,cl
  41f547:	retf   0x1471
  41f54a:	mov    esp,0x55d87985
  41f54f:	bound  edx,QWORD PTR [eax+0x710516c0]
  41f555:	or     BYTE PTR [ecx-0x32ff95f7],ah
  41f55b:	icebp  
  41f55c:	dec    esp
  41f55d:	sub    al,0x91
  41f55f:	inc    edi
  41f560:	lock bsf ecx,DWORD PTR [edx]
  41f564:	dec    eax
  41f565:	je     0x41f567
  41f567:	add    BYTE PTR [eax],al
  41f569:	add    al,0x9c
  41f56b:	jno    0x41f5be
  41f56d:	lock pusha 
  41f56f:	ret    
  41f570:	inc    ebp
  41f571:	outs   dx,BYTE PTR ds:[esi]
  41f572:	repz (bad) 
  41f574:	dec    edx
  41f576:	mov    esi,0xcac76a05
  41f57b:	inc    ecx
  41f57c:	in     al,0xdc
  41f57e:	add    eax,DWORD PTR [eax]
  41f580:	add    BYTE PTR [edx+0x22b471e0],al
  41f586:	sbb    bl,BYTE PTR [edi]
  41f588:	add    dl,cl
  41f58a:	fiadd  WORD PTR [ecx-0x10]
  41f58d:	xchg   ebp,eax
  41f58e:	call   0x6a4c:0xc9114ffc
  41f595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f596:	dec    esi
  41f597:	mov    DWORD PTR [ebp+0x1a],edi
  41f59a:	ret    
  41f59b:	ror    DWORD PTR [edi],0xe5
  41f59e:	icebp  
  41f59f:	push   ebp
  41f5a0:	pop    ecx
  41f5a1:	bswap  ebx
  41f5a3:	jp     0x41f5bb
  41f5a5:	cmc    
  41f5a6:	push   edi
  41f5a7:	loopne 0x41f534
  41f5a9:	dec    edi
  41f5aa:	ror    DWORD PTR [ebx],cl
  41f5ac:	mov    bh,0x5a
  41f5ae:	xor    eax,DWORD PTR [edi+0x41e08ac7]
  41f5b4:	int3   
  41f5b5:	sbb    al,bl
  41f5b7:	outs   dx,DWORD PTR ds:[esi]
  41f5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b9:	dec    edx
  41f5ba:	add    eax,DWORD PTR [edi-0x7f5e0c83]
  41f5c0:	jp     0x41f60b
  41f5c2:	ins    DWORD PTR es:[edi],dx
  41f5c3:	hlt    
  41f5c4:	pop    es
  41f5c5:	push   0x9dffd670
  41f5ca:	mov    al,ds:0x33d0
  41f5cf:	add    BYTE PTR [eax-0x6],bh
  41f5d2:	sti    
  41f5d3:	std    
  41f5d4:	scas   al,BYTE PTR es:[edi]
  41f5d5:	mov    eax,ds:0x710b427f
  41f5da:	jg     0x41f61e
  41f5dc:	adc    ebp,DWORD PTR [ebx+0x7f]
  41f5df:	inc    edx
  41f5e0:	pop    es
  41f5e1:	cmp    BYTE PTR gs:[edx+0x17],0x69
  41f5e6:	sti    
  41f5e7:	add    DWORD PTR [edx-0x76],0x2a68fc6b
  41f5ee:	pop    eax
  41f5ef:	xor    BYTE PTR [ebx-0x47709a4],0xff
  41f5f6:	push   0x4e
  41f5f8:	jmp    0x41f5ea
  41f5fa:	in     eax,0xd3
  41f5fc:	repz fdivr DWORD PTR [edi-0x75]
  41f600:	repnz outs dx,DWORD PTR ds:[esi]
  41f602:	add    BYTE PTR [edi+0x11070],al
  41f608:	repz fdivr DWORD PTR [edi]
  41f60b:	lds    esi,FWORD PTR [eax+0x8]
  41f60e:	add    DWORD PTR [eax],eax
  41f610:	rep outs dx,BYTE PTR ds:[esi]
  41f612:	pop    eax
  41f613:	jp     0x41f608
  41f615:	outs   dx,DWORD PTR ds:[esi]
  41f616:	add    BYTE PTR [ebx+esi*4+0x5d0d067c],al
  41f61d:	icebp  
  41f61e:	sub    bh,bh
  41f620:	mov    WORD PTR [eax+0x77],?
  41f623:	mov    BYTE PTR [edi],ah
  41f625:	outs   dx,DWORD PTR ds:[esi]
  41f626:	add    BYTE PTR [eax],al
  41f628:	push   0xffffffd4
  41f62a:	jg     0x41f64b
  41f62c:	repnz outs dx,DWORD PTR ds:[esi]
  41f62e:	add    dh,bh
  41f630:	jo     0x41f5ca
  41f632:	add    DWORD PTR [eax],eax
  41f634:	add    BYTE PTR [eax],al
  41f636:	add    bl,dh
  41f638:	call   0x70bb9fa
  41f63d:	jmp    0x41f60c
  41f63f:	imul   ecx,DWORD PTR [eax],0x64
  41f642:	inc    esp
  41f643:	shl    ch,0xe5
  41f646:	mov    cl,0x83
  41f648:	pop    ds
  41f649:	call   0x26d3e951
  41f64e:	cld    
  41f64f:	ins    DWORD PTR es:[edi],dx
  41f650:	cmp    DWORD PTR [ecx+0x24],0x2c
  41f654:	pop    esi
  41f655:	out    0x69,al
  41f657:	jae    0x41f678
  41f659:	call   0xa7cbe961
  41f65e:	add    BYTE PTR [ecx-0x767b442d],ch
  41f664:	popa   
  41f665:	out    0xf0,eax
  41f667:	in     eax,0xf0
  41f669:	fidivr DWORD PTR [eax-0x4f]
  41f66c:	scas   al,BYTE PTR es:[edi]
  41f66d:	push   ss
  41f66e:	jns    0x41f621
  41f670:	xchg   edx,eax
  41f671:	push   ss
  41f672:	imul   eax,DWORD PTR [ecx],0x17
  41f675:	ffree  st(3)
  41f677:	in     al,0x88
  41f679:	mov    ds:0x9ac369f8,al
  41f67e:	aam    0x4a
  41f680:	in     al,0xd0
  41f682:	mul    DWORD PTR [edi+ebp*2]
  41f685:	or     esi,edi
  41f687:	(bad)  
  41f688:	pop    ebp
  41f689:	pop    ebx
  41f68a:	icebp  
  41f68b:	test   al,0x6e
  41f68d:	lds    esp,FWORD PTR [eax-0x3662a24c]
  41f693:	dec    ebx
  41f694:	push   eax
  41f695:	sub    BYTE PTR [eax],al
  41f697:	repz mov ah,0x95
  41f69a:	jle    0x41f69c
  41f69c:	add    BYTE PTR [eax],al
  41f69e:	mov    WORD PTR [ecx],ds
  41f6a0:	es sub eax,0x3e7ba55
  41f6a6:	repz shr esi,cl
  41f6a9:	rcr    BYTE PTR [edi],cl
  41f6ab:	mov    dh,0xb5
  41f6ad:	push   0xffffffe1
  41f6af:	sahf   
  41f6b0:	fadd   st,st(3)
  41f6b2:	je     0x41f642
  41f6b4:	fs enter 0x5d6d,0xff
  41f6b9:	call   0xe5b43ad3
  41f6be:	es inc edi
  41f6c0:	call   0x5d9e97b0
  41f6c5:	aas    
  41f6c6:	mov    ah,0xb8
  41f6c8:	mov    ch,al
  41f6ca:	ins    DWORD PTR es:[edi],dx
  41f6cb:	jno    0x41f6f8
  41f6cd:	cmp    bh,BYTE PTR [ebp+esi*1+0x5c386a88]
  41f6d4:	cld    
  41f6d5:	jmp    0x631dbf89
  41f6da:	ins    DWORD PTR es:[edi],dx
  41f6db:	adc    edi,edi
  41f6dd:	call   0x2cc8abd2
  41f6e2:	xchg   ebx,eax
  41f6e3:	nop
  41f6e4:	sbb    ch,0xf7
  41f6e7:	push   es
  41f6e8:	add    BYTE PTR [esi],bh
  41f6ea:	mov    esp,0x3604f54
  41f6ef:	xor    eax,0x5c8f2cc4
  41f6f4:	cld    
  41f6f5:	jmp    0x81847aea
  41f6fa:	pop    ecx
  41f6fb:	stc    
  41f6fc:	jmp    0x41f6d9
  41f6fe:	mov    al,0x5c
  41f700:	xchg   esp,ebx
  41f702:	add    BYTE PTR [eax],al
  41f704:	add    BYTE PTR [eax+0x15],cl
  41f707:	mov    cl,0xc1
  41f709:	test   DWORD PTR [esi],0xda72e600
  41f70f:	(bad)  
  41f710:	call   0x9dc28505
  41f715:	out    dx,eax
  41f716:	push   es
  41f717:	add    BYTE PTR [edx+0x6b],dh
  41f71a:	push   esp
  41f71b:	mov    ch,bh
  41f71d:	sub    BYTE PTR [edx+0x42],al
  41f720:	das    
  41f721:	lock xchg ebp,esi
  41f724:	not    BYTE PTR [eax+edi*4]
  41f727:	(bad)  
  41f728:	call   0xe187851d
  41f72d:	jae    0x41f6cb
  41f72f:	jae    0x41f729
  41f731:	sahf   
  41f732:	pop    esp
  41f733:	dec    esp
  41f734:	add    ch,ch
  41f736:	test   BYTE PTR [edi],0x13
  41f739:	call   0x38dc:0x4dc08108
  41f740:	add    DWORD PTR [edx+0x8],ecx
  41f743:	mov    BYTE PTR [ebp+0x4f],0x3
  41f747:	mov    BYTE PTR [ebp+0x2d],0x3
  41f74b:	or     esi,DWORD PTR [esi-0x1f4211e9]
  41f751:	dec    ecx
  41f752:	fisttp DWORD PTR [eax+0x5]
  41f755:	mov    fs,eax
  41f757:	inc    ecx
  41f758:	in     al,dx
  41f759:	xchg   edi,eax
  41f75a:	pop    ds
  41f75b:	or     al,0x84
  41f75d:	push   esi
  41f75e:	add    eax,DWORD PTR [eax]
  41f760:	add    BYTE PTR ds:0xe20c3d96,bh
  41f766:	push   esi
  41f767:	or     BYTE PTR [eax+0x0],cl
  41f76a:	add    BYTE PTR [eax],al
  41f76c:	out    0xf5,eax
  41f76e:	mov    BYTE PTR [esi-0x3a],al
  41f771:	push   0xbb05387f
  41f776:	add    ecx,DWORD PTR [ebp-0x7c9db93c]
  41f77c:	mov    dl,0x1
  41f77e:	jno    0x41f785
  41f780:	push   ebx
  41f781:	pushf  
  41f782:	lock jmp 0x41f75b
  41f785:	and    BYTE PTR [ecx-0xc],0xca
  41f789:	cmp    BYTE PTR [ecx-0xc],0xda
  41f78d:	pop    esi
  41f78e:	adc    BYTE PTR [ebp+0xf0007da],0x65
  41f795:	dec    eax
  41f796:	adc    BYTE PTR [ebx+0x3986f754],cl
  41f79c:	mov    dh,BYTE PTR [ecx]
  41f79e:	sti    
  41f79f:	jne    0x41f787
  41f7a1:	in     eax,dx
  41f7a2:	push   ebx
  41f7a3:	adc    BYTE PTR [esi],dl
  41f7a5:	ret    
  41f7a6:	jo     0x41f7b2
  41f7a8:	or     DWORD PTR [esp+ebp*8],edi
  41f7ab:	add    ah,dl
  41f7ad:	fwait
  41f7ae:	cli    
  41f7af:	add    ebx,esi
  41f7b1:	or     cl,ch
  41f7b3:	cld    
  41f7b4:	out    0x51,al
  41f7b6:	push   cs
  41f7b7:	inc    eax
  41f7b8:	repz mov al,0x24
  41f7bc:	rep ins DWORD PTR es:[edi],dx
  41f7be:	sub    edi,DWORD PTR [edi+0x55ec91e4]
  41f7c4:	push   0xf6e68125
  41f7c9:	or     al,0x4
  41f7cb:	add    bh,al
  41f7cd:	sub    DWORD PTR [ebx+0xe6],eax
  41f7d3:	frstor [esp+edi*2-0x43]
  41f7d7:	rep ins DWORD PTR es:[edi],dx
  41f7d9:	add    BYTE PTR [ecx+0x3dec514a],al
  41f7df:	js     0x41f803
  41f7e1:	pop    eax
  41f7e2:	or     al,0x5d
  41f7e4:	sub    ebp,edi
  41f7e6:	xlat   BYTE PTR ds:[ebx]
  41f7e7:	ret    
  41f7e8:	inc    ebp
  41f7e9:	sar    eax,0x14
  41f7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7ed:	shl    edi,cl
  41f7ef:	xchg   esp,eax
  41f7f0:	test   al,0x67
  41f7f2:	cld    
  41f7f3:	add    al,0xc0
  41f7f5:	(bad)  
  41f7f6:	(bad)  
  41f7f7:	cld    
  41f7f8:	ins    BYTE PTR es:[edi],dx
  41f7f9:	adc    bl,BYTE PTR [bx]
  41f7fc:	aas    
  41f7fd:	sar    bh,0xd9
  41f800:	dec    edx
  41f801:	and    eax,0x700c41
  41f806:	jl     0x41f7cc
  41f808:	stos   DWORD PTR es:[edi],eax
  41f809:	mov    esp,0xe66ff324
  41f80e:	or     eax,0x1fa20e
  41f813:	repz cmp edi,edi
  41f816:	cmp    ah,BYTE PTR [edx]
  41f818:	add    DWORD PTR [eax+eax*1],eax
  41f81b:	ds cmp DWORD PTR cs:[edx-0x53],0xad0bed70
  41f824:	stos   DWORD PTR es:[edi],eax
  41f825:	data16 (bad) 
  41f827:	imul   esp,DWORD PTR [ebx+0x6f0e870],0x25
  41f82e:	mov    esi,0x68a35989
  41f833:	add    al,0xdc
  41f835:	adc    eax,0x5
  41f83a:	out    dx,al
  41f83b:	test   ah,dh
  41f83d:	push   0xe6665a77
  41f842:	imul   eax,DWORD PTR ds:0xc17a1374,0xd39c7ede
  41f84c:	stos   DWORD PTR es:[edi],eax
  41f84d:	inc    eax
  41f84e:	scas   al,BYTE PTR es:[edi]
  41f84f:	or     ah,BYTE PTR [esi]
  41f851:	pop    ds
  41f852:	repz push es
  41f854:	rcr    BYTE PTR [ecx],cl
  41f856:	jae    0x41f834
  41f858:	aam    0x4
  41f85a:	(bad)  
  41f85b:	sub    BYTE PTR [edx-0x1a],ch
  41f85e:	les    eax,FWORD PTR [esi]
  41f860:	cmp    al,0x10
  41f862:	sbb    edi,esp
  41f864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f865:	data16 daa 
  41f867:	mov    gs,WORD PTR [ecx-0x30]
  41f86a:	sbb    eax,0xa97ae65a
  41f86f:	pop    esi
  41f870:	imul   esp,DWORD PTR [eax],0x1092077b
  41f876:	jp     0x41f839
  41f878:	fiadd  WORD PTR [eax+0x7adbd33c]
  41f87e:	test   eax,0xf8b66f56
  41f883:	mov    dh,0x7d
  41f885:	adc    DWORD PTR [edi-0x21fbd90c],edi
  41f88b:	ret    
  41f88c:	outs   dx,BYTE PTR ds:[esi]
  41f88d:	jnp    0x41f8c0
  41f88f:	pop    edi
  41f890:	and    DWORD PTR [ebx+0x3e70824],eax
  41f896:	test   BYTE PTR [eax+ebp*2+0x6159bf66],0x6b
  41f89e:	add    BYTE PTR [eax],al
  41f8a0:	add    ah,cl
  41f8a2:	leave  
  41f8a3:	out    0x3,eax
  41f8a5:	repz pop ecx
  41f8a7:	mov    bl,0x5b
  41f8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8aa:	repz (bad) 
  41f8ac:	cmp    BYTE PTR [ecx],al
  41f8ae:	(bad)  
  41f8af:	dec    DWORD PTR [ebp+0x2ac6beae]
  41f8b5:	mov    ds:0x2b6aeb8e,al
  41f8ba:	repnz push ebp
  41f8bc:	mov    esi,0xaa8851f9
  41f8c1:	loopne 0x41f848
  41f8c3:	mov    edi,0xff69ecf6
  41f8c8:	call   0xd08249bd
  41f8cd:	test   DWORD PTR [ebx],0x6ef0784
  41f8d3:	add    BYTE PTR [ebx+0x31],dh
  41f8d6:	lock add BYTE PTR [edi+edx*8+0x59],0xfa
  41f8dc:	mov    eax,ds:0x5cfcc4b8
  41f8e1:	mov    ch,0x1d
  41f8e3:	(bad)  
  41f8e4:	call   0x24c8afd9
  41f8e9:	retf   
  41f8ea:	pop    edx
  41f8eb:	adc    al,ch
  41f8ed:	add    al,bh
  41f8ef:	jmp    FWORD PTR [ecx+0x4d]
  41f8f2:	mov    cl,0xfe
  41f8f4:	call   0x674effe9
  41f8f9:	push   edx
  41f8fa:	pop    ecx
  41f8fb:	cld    
  41f8fc:	jmp    0xe8957b7a
  41f901:	lock push es
  41f903:	mov    DWORD PTR [eax+eax*1],esi
  41f906:	add    BYTE PTR [eax],al
  41f908:	pop    edi
  41f909:	(bad)  
  41f90a:	xor    esi,DWORD PTR [ecx+0x67]
  41f90d:	aad    0xf3
  41f90f:	ins    BYTE PTR es:[edi],dx
  41f910:	dec    esi
  41f911:	aam    0x4b
  41f913:	bound  edx,QWORD PTR [esi-0x23d67d00]
  41f919:	lds    ebp,FWORD PTR [ecx-0x17]
  41f91c:	mov    al,ds:0xe1f9125b
  41f921:	(bad)  
  41f922:	jmp    DWORD PTR [ebx+0x30]
  41f925:	aad    0x37
  41f927:	add    BYTE PTR [ecx],ah
  41f929:	call   0xc081:0xd44f896c
  41f930:	pop    esi
  41f931:	xacquire xchg BYTE PTR [esi-0x46],dh
  41f935:	fld    QWORD PTR [ecx-0xc]
  41f938:	sbb    esp,eax
  41f93a:	adc    dh,bh
  41f93c:	les    ecx,FWORD PTR [esi+esi*8]
  41f93f:	and    ebx,edx
  41f941:	cmp    eax,0x584c8d10
  41f946:	dec    esp
  41f947:	lea    ebx,[ecx+0x3fff500e]
  41f94d:	and    BYTE PTR [esi],dl
  41f94f:	inc    eax
  41f950:	dec    edx
  41f951:	test   eax,eax
  41f953:	or     al,0xcf
  41f955:	ret    
  41f956:	jno    0x41f960
  41f958:	rcl    BYTE PTR [edi+0x60c38fb],0x74
  41f95f:	adc    BYTE PTR ds:0xf8bf498,ah
  41f965:	jmp    0x41f99e
  41f967:	xchg   edx,edx
  41f969:	add    eax,DWORD PTR [eax]
  41f96b:	add    BYTE PTR [eax],al
  41f96d:	add    BYTE PTR [eax],al
  41f96f:	call   0x9175e0e9
  41f974:	addr16 in al,dx
  41f976:	mov    ecx,DWORD PTR [esi+ebx*8-0x39]
  41f97a:	call   0x3c9ad5
  41f97f:	sbb    DWORD PTR [eax+0x574a8504],0x5eec8307
  41f989:	cld    
  41f98a:	dec    edi
  41f98b:	jne    0x41f994
  41f98d:	aam    0x12
  41f98f:	sbb    al,BYTE PTR [ebx]
  41f991:	xchg   DWORD PTR [ebp+0x5e],esi
  41f994:	mov    ebx,0xe244bff2
  41f999:	xchg   DWORD PTR [edi+0x48e],eax
  41f99f:	inc    ecx
  41f9a0:	nop
  41f9a1:	hlt    
  41f9a2:	xor    ebx,0x9
  41f9a5:	jl     0x41f9a6
  41f9a7:	imul   esp,DWORD PTR [edx-0x5a8bc798],0x91f30001
  41f9b1:	std    
  41f9b2:	out    0x34,eax
  41f9b4:	outs   dx,BYTE PTR ds:[esi]
  41f9b5:	add    BYTE PTR [eax],al
  41f9b7:	xchg   esp,eax
  41f9b8:	xchg   edx,eax
  41f9b9:	push   esp
  41f9ba:	cld    
  41f9bb:	out    0xfd,al
  41f9bd:	adc    DWORD PTR [eax-0xd],eax
  41f9c0:	hlt    
  41f9c1:	sub    esi,ebp
  41f9c3:	fwait
  41f9c4:	loop   0x41f97c
  41f9c6:	adc    eax,0xbf1f2dd8
  41f9cb:	jns    0x41f962
  41f9cd:	(bad)  
  41f9ce:	jg     0x41fa2a
  41f9d0:	fwait
  41f9d1:	in     eax,dx
  41f9d2:	or     al,0x0
  41f9d4:	add    BYTE PTR [eax],al
  41f9d6:	jo     0x41fa05
  41f9d8:	add    BYTE PTR [eax+0x68],dl
  41f9db:	push   eax
  41f9dc:	pop    eax
  41f9dd:	imul   esi,esp,0x3384006d
  41f9e3:	mov    cl,0xb
  41f9e5:	push   ecx
  41f9e6:	cmp    al,0x78
  41f9e8:	cmp    dh,0x34
  41f9eb:	ins    DWORD PTR es:[edi],dx
  41f9ec:	pop    eax
  41f9ed:	rol    DWORD PTR [edx],0x6f
  41f9f0:	add    BYTE PTR [ebx+esi*1+0x6854fc11],al
  41f9f7:	lods   al,BYTE PTR ds:[esi]
  41f9f8:	pop    eax
  41f9f9:	and    eax,0x5d006def
  41f9fe:	lods   eax,DWORD PTR ds:[esi]
  41f9ff:	xchg   esi,eax
  41fa00:	aas    
  41fa01:	xor    BYTE PTR [edx],bh
  41fa03:	cmp    al,0x4e
  41fa05:	ss ins BYTE PTR es:[edi],dx
  41fa07:	adc    eax,0xeff30001
  41fa0c:	das    
  41fa0d:	push   esi
  41fa0e:	jle    0x41fa25
  41fa10:	int    0xfe
  41fa12:	in     al,0x60
  41fa14:	iret   
  41fa15:	mov    ch,dh
  41fa17:	loopne 0x41fa3d
  41fa19:	nop
  41fa1a:	repz pop ebx
  41fa1c:	sti    
  41fa1d:	mov    bh,ch
  41fa1f:	push   es
  41fa20:	ja     0x41fa9c
  41fa22:	call   0xfc03a1a5
  41fa27:	jge    0x41f9d7
  41fa29:	add    dh,bl
  41fa2b:	push   es
  41fa2c:	fstp   DWORD PTR [ebx+0x4b]
  41fa2f:	adc    bl,BYTE PTR [eax]
  41fa31:	out    dx,eax
  41fa32:	idiv   BYTE PTR [edi+0x6d]
  41fa35:	retf   
  41fa36:	popf   
  41fa37:	push   esi
  41fa38:	out    0xd8,al
  41fa3a:	add    BYTE PTR [eax],al
  41fa3c:	add    BYTE PTR [ebp-0x496bc125],ch
  41fa42:	push   ebp
  41fa43:	and    eax,0xb3bab3c5
  41fa48:	int3   
  41fa49:	imul   edx,DWORD PTR [ebx+ebx*8],0xd
  41fa4d:	xor    eax,DWORD PTR [edi]
  41fa4f:	fimul  DWORD PTR [eax-0x26]
  41fa52:	div    BYTE PTR [ebx+0x7d]
  41fa55:	in     al,dx
  41fa56:	pop    es
  41fa57:	out    0x3,eax
  41fa59:	ss or  eax,0x714eafb
  41fa5f:	call   0xf305:0x467575d3
  41fa66:	push   es
  41fa67:	jo     0x41f9eb
  41fa69:	rol    BYTE PTR [edi],1
  41fa6b:	out    0x3,eax
  41fa6d:	ss ds inc eax
  41fa70:	or     al,0x78
  41fa72:	(bad)  
  41fa73:	fiadd  WORD PTR [ebx+esi*8]
  41fa76:	push   es
  41fa77:	sbb    dh,BYTE PTR [edi+ebx*1+0x69fc403e]
  41fa7e:	lea    eax,[esi]
  41fa80:	add    eax,0xb43a06f3
  41fa85:	pop    es
  41fa86:	imul   ecx,DWORD PTR ds:[eax-0x30],0x568bfae0
  41fa8e:	psubsb mm0,QWORD PTR [ebx]
  41fa91:	repz pop esi
  41fa93:	sbb    BYTE PTR [ebp-0x1a],0x55
  41fa97:	push   ss
  41fa98:	xchg   ecx,eax
  41fa99:	or     eax,DWORD PTR ss:[eax]
  41fa9c:	or     DWORD PTR [ecx+eiz*1+0x0],0xe9
  41faa4:	jge    0x41fac6
  41faa6:	hlt    
  41faa7:	sti    
  41faa8:	mov    al,0x55
  41faaa:	mov    esp,DWORD PTR [edi+0x13]
  41faad:	push   esi
  41faae:	cld    
  41faaf:	jmp    0x5d144d34
  41fab4:	jns    0x41faa3
  41fab6:	(bad)  
  41fab7:	call   0x5fc8b1ac
  41fabc:	pop    ebx
  41fabd:	push   esp
  41fabe:	cld    
  41fabf:	jmp    0xe8996e2b
  41fac4:	lock push es
  41fac6:	xchg   DWORD PTR [edi-0x1603ab4d],eax
  41facc:	adc    DWORD PTR [ecx],edi
  41face:	mov    BYTE PTR [ebp+0x6786f6cc],ch
  41fad4:	adc    DWORD PTR [esp+edi*8-0x17],0xffffff83
  41fad9:	mov    ecx,DWORD PTR [edi+0x5006f0e8]
  41fadf:	pusha  
  41fae0:	jno    0x41fab7
  41fae2:	(bad)  
  41fae3:	call   0x6ddf88d8
  41fae8:	out    dx,eax
  41fae9:	push   es
  41faea:	add    dh,bl
  41faec:	sti    
  41faed:	in     eax,dx
  41faee:	jmp    0x8b48ebdd
  41faf3:	addr16 pop eax
  41faf5:	push   esp
  41faf6:	cld    
  41faf7:	jmp    0x973ec059
  41fafc:	jne    0x41fb47
  41fafe:	or     edx,DWORD PTR [esi]
  41fb00:	xor    bh,BYTE PTR [esi-0x3b]
  41fb03:	adc    dh,BYTE PTR [ebp+0x3e0009]
  41fb09:	add    BYTE PTR [eax],al
  41fb0b:	je     0x41fb69
  41fb0d:	out    0xfa,eax
  41fb0f:	lock push es
  41fb11:	add    BYTE PTR [edi-0x17f7d6d4],bl
  41fb17:	les    ecx,FWORD PTR [edx]
  41fb19:	push   ebp
  41fb1a:	add    BYTE PTR [edx+0x5dfec287],al
  41fb20:	test   ebx,eax
  41fb22:	pop    edi
  41fb23:	mov    BYTE PTR [eax+eax*1],cl
  41fb26:	push   ebx
  41fb27:	in     al,0x64
  41fb29:	add    bh,al
  41fb2b:	aad    0xbc
  41fb2d:	je     0x41fb6f
  41fb2f:	retf   0xb377
  41fb32:	or     bl,cl
  41fb34:	or     BYTE PTR [eax],al
  41fb36:	pop    ebx
  41fb37:	adc    esi,esi
  41fb39:	or     cl,0x66
  41fb3c:	inc    BYTE PTR [esi-0x4f43fff]
  41fb42:	adc    BYTE PTR [ecx],cl
  41fb44:	mov    esi,0xd6474b00
  41fb49:	xor    eax,0xbb29f
  41fb4e:	add    BYTE PTR [esi+eax*1-0x79],ah
  41fb52:	xchg   DWORD PTR [esi],esi
  41fb54:	or     eax,DWORD PTR [eax]
  41fb56:	add    bh,cl
  41fb58:	or     ebx,DWORD PTR [eax+0x74083283]
  41fb5e:	pop    es
  41fb5f:	loope  0x41fb58
  41fb61:	out    0x39,eax
  41fb63:	sbb    al,0xe6
  41fb65:	sti    
  41fb66:	inc    ebx
  41fb67:	or     DWORD PTR [ecx+0x85a0154],0xe272
  41fb71:	add    cl,al
  41fb73:	sti    
  41fb74:	out    0x12,eax
  41fb76:	or     cl,BYTE PTR [ebx]
  41fb78:	mov    DWORD PTR [edi+0x7fe],eax
  41fb7e:	or     ah,dh
  41fb80:	sar    bh,cl
  41fb82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb83:	mov    ?,ebp
  41fb85:	dec    DWORD PTR [edx]
  41fb87:	loopne 0x41fbb9
  41fb89:	(bad)  
  41fb8a:	pop    esp
  41fb8b:	out    0x87,al
  41fb8d:	xchg   DWORD PTR [esi-0x68fffff9],ebp
  41fb93:	retf   0x770
  41fb96:	repz or eax,0x4f93125f
  41fb9c:	sar    bh,0x77
  41fb9f:	in     al,0xeb
  41fba1:	(bad)  
  41fba2:	fcomp  QWORD PTR [ebp-0x50]
  41fba5:	cld    
  41fba6:	mov    ebp,0xf28f86ea
  41fbab:	pop    ebp
  41fbac:	add    BYTE PTR [eax-0x3c],dl
  41fbaf:	adc    ebx,DWORD PTR [edi-0x4c]
  41fbb2:	push   ebx
  41fbb3:	pop    edi
  41fbb4:	add    BYTE PTR [eax],al
  41fbb6:	retf   
  41fbb7:	arpl   WORD PTR [esi-0x3],ax
  41fbba:	lods   al,BYTE PTR ds:[esi]
  41fbbb:	mov    ds:0xd9230447,eax
  41fbc0:	ret    
  41fbc1:	(bad)  
  41fbc2:	cmp    DWORD PTR [ecx],esp
  41fbc4:	mov    ch,0x88
  41fbc6:	xchg   DWORD PTR [esi-0x4f],ebp
  41fbc9:	mov    dh,BYTE PTR [ecx+eiz*2+0x1]
  41fbcd:	add    bl,dh
  41fbcf:	lea    eax,[esi+0x42]
  41fbd2:	jl     0x41fc31
  41fbd4:	mov    DWORD PTR [edx+0x0],eax
  41fbd7:	add    BYTE PTR [eax],al
  41fbd9:	jnp    0x41fbd7
  41fbdb:	hlt    
  41fbdc:	jmp    0x41fbdf
  41fbde:	sahf   
  41fbdf:	add    BYTE PTR [edi-0x5c],bh
  41fbe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbe3:	add    DWORD PTR [eax],eax
  41fbe5:	repz push esp
  41fbe7:	pop    edi
  41fbe8:	call   DWORD PTR [esp+edx*8-0x4f]
  41fbec:	mov    BYTE PTR [eax*1+0x6c44f93e],dh
  41fbf3:	test   BYTE PTR [edi-0x7374d439],bh
  41fbf9:	fwait
  41fbfa:	pop    esi
  41fbfb:	add    BYTE PTR [eax],al
  41fbfd:	mov    dl,0xc8
  41fbff:	dec    eax
  41fc00:	jae    0x41fbbf
  41fc02:	ficom  DWORD PTR [edi+0x5df253]
  41fc08:	call   0xfca09d2b
  41fc0d:	ja     0x41fbac
  41fc0f:	aam    0x28
  41fc11:	jbe    0x41fc19
  41fc13:	sub    cl,BYTE PTR [eax]
  41fc15:	mov    ds:0xe3fff353,eax
  41fc1a:	(bad)  
  41fc1b:	out    0x8c,al
  41fc1d:	ja     0x41fbce
  41fc1f:	out    0x3,eax
  41fc21:	repz jge 0x41fc18
  41fc24:	mov    bh,al
  41fc26:	xchg   DWORD PTR [ebp-0x68],edi
  41fc29:	cmp    BYTE PTR [eax],cl
  41fc2b:	out    0x3,eax
  41fc2d:	into   
  41fc2e:	mov    cl,BYTE PTR [esi]
  41fc30:	add    esi,ebx
  41fc32:	push   es
  41fc33:	data16 mul BYTE PTR [eax-0x52fc590b]
  41fc3a:	int3   
  41fc3b:	push   ebp
  41fc3c:	add    al,BYTE PTR [eax]
  41fc3e:	add    BYTE PTR [eax],al
  41fc40:	dec    ebp
  41fc41:	push   edx
  41fc42:	rcr    DWORD PTR [ebx-0x59],cl
  41fc45:	cld    
  41fc46:	ss cmc 
  41fc48:	fadd   QWORD PTR [esi]
  41fc4a:	jno    0x41fc12
  41fc4c:	xchg   edi,eax
  41fc4d:	inc    eax
  41fc4e:	sub    DWORD PTR [esi+0x6f69637b],esi
  41fc54:	clc    
  41fc55:	jge    0x41fc02
  41fc57:	or     esp,DWORD PTR ds:0xe4db71ba
  41fc5d:	test   DWORD PTR [esi],esp
  41fc5f:	stc    
  41fc60:	addr16 xor dh,cl
  41fc63:	pusha  
  41fc64:	adc    ecx,DWORD PTR [edi+0x73]
  41fc67:	test   BYTE PTR [eax],bl
  41fc69:	or     bh,ah
  41fc6b:	add    eax,ebx
  41fc6d:	dec    eax
  41fc6e:	stos   DWORD PTR es:[edi],eax
  41fc6f:	pusha  
  41fc70:	dec    esp
  41fc71:	test   DWORD PTR ds:0xdacc6c07,esp
  41fc77:	pop    edi
  41fc78:	loope  0x41fcdc
  41fc7a:	clc    
  41fc7b:	ret    
  41fc7c:	xor    al,0x15
  41fc7e:	fisttp QWORD PTR [ebp-0x6cf0b15f]
  41fc84:	mov    esp,0xa503e707
  41fc89:	loopne 0x41fcfc
  41fc8b:	add    eax,0x7
  41fc8e:	add    cl,ch
  41fc90:	lock jge 0x41fc96
  41fc93:	jns    0x41fd0d
  41fc95:	or     al,BYTE PTR [ebx+0x36cc1bb0]
  41fc9b:	sub    al,0xe7
  41fc9d:	ficomp DWORD PTR [edi]
  41fc9f:	bound  esi,QWORD PTR [esi+0xa88101]
  41fca5:	add    BYTE PTR [eax],al
  41fca7:	fstp   QWORD PTR [edx-0x29]
  41fcaa:	loop   0x41fcdc
  41fcac:	daa    
  41fcad:	mov    edi,0xbf86db13
  41fcb2:	in     eax,dx
  41fcb3:	cmp    BYTE PTR [edx-0x71b2b04],0x3f
  41fcba:	jmp    0x644d4230
  41fcbf:	das    
  41fcc0:	aad    0x1e
  41fcc2:	bound  esi,QWORD PTR [eax-0x4b]
  41fcc5:	(bad)  
  41fcc6:	call   0x79757cbb
  41fccb:	sysenter 
  41fccd:	mov    ebx,0x4a7f343f
  41fcd2:	xor    DWORD PTR [eax-0x7a],edi
  41fcd5:	push   ebx
  41fcd6:	call   0xcdc303cb
  41fcdb:	push   0x15a4c251
  41fce0:	push   ecx
  41fce1:	mov    DWORD PTR [eax],ebx
  41fce3:	xor    eax,0x8117288
  41fce8:	cwde   
  41fce9:	push   edi
  41fcea:	call   0x5eb403df
  41fcef:	outs   dx,DWORD PTR ds:[esi]
  41fcf0:	int3   
  41fcf1:	cld    
  41fcf2:	jmp    0xf2cb071b
  41fcf7:	fdiv   st,st(1)
  41fcf9:	cli    
  41fcfa:	out    0x9d,al
  41fcfc:	push   edx
  41fcfd:	jb     0x41fcd4
  41fcff:	xchg   ebp,eax
  41fd00:	hlt    
  41fd01:	out    dx,eax
  41fd02:	sti    
  41fd03:	xor    BYTE PTR [ecx-0x7a],dl
  41fd06:	and    al,0xc4
  41fd08:	mov    dl,0x5d
  41fd0a:	add    BYTE PTR [eax],al
  41fd0c:	add    BYTE PTR [eax],al
  41fd0e:	arpl   di,ax
  41fd10:	add    BYTE PTR [eax],al
  41fd12:	(bad)  
  41fd13:	jge    0x41fcfd
  41fd15:	xor    DWORD PTR [esi],0x29
  41fd18:	dec    edi
  41fd19:	push   esi
  41fd1a:	fucom  st(2)
  41fd1c:	pop    ecx
  41fd1d:	icebp  
  41fd1e:	push   esp
  41fd1f:	mov    al,0x87
  41fd21:	clc    
  41fd22:	and    DWORD PTR [esi-0x14],0xffffff85
  41fd26:	test   DWORD PTR [edi],ebp
  41fd28:	add    esi,DWORD PTR [edx]
  41fd2a:	call   0x7f04:0xca0081e3
  41fd31:	jge    0x41fced
  41fd33:	add    al,0x87
  41fd35:	pop    edi
  41fd36:	fmulp  st(2),st
  41fd38:	inc    ecx
  41fd39:	(bad)  
  41fd3a:	fisubr DWORD PTR [edi]
  41fd3c:	or     cl,BYTE PTR [ebp-0x161aef71]
  41fd42:	sub    al,BYTE PTR [eax+eax*1]
  41fd45:	lea    ebx,[edi+0x10]
  41fd48:	xchg   BYTE PTR [ebp-0x56],al
  41fd4b:	mov    cl,0x71
  41fd4d:	adc    BYTE PTR [ecx],ah
  41fd4f:	das    
  41fd50:	add    al,0xe8
  41fd52:	mov    esi,0x1f000008
  41fd57:	or     eax,0x5f194b7b
  41fd5c:	hlt    
  41fd5d:	add    BYTE PTR [ebx],al
  41fd5f:	inc    edi
  41fd60:	lock mov ecx,DWORD PTR [ebp+0x70f84105]
  41fd67:	add    al,0xfb
  41fd69:	jne    0x41fdc1
  41fd6b:	mov    cl,0x71
  41fd6d:	sbb    ch,dh
  41fd6f:	cs adc bh,bh
  41fd72:	add    BYTE PTR [eax],al
  41fd74:	add    bh,bl
  41fd76:	push   ebx
  41fd77:	sti    
  41fd78:	jne    0x41fdd0
  41fd7a:	fmul   st(0),st
  41fd7c:	sbb    DWORD PTR [ebx+0x4],ebx
  41fd7f:	xchg   eax,esi
  41fd81:	iret   
  41fd82:	mov    eax,0x2fc11a70
  41fd87:	add    al,0x8b
  41fd89:	repz xchg edi,eax
  41fd8b:	imul   eax,DWORD PTR [ebp+eiz*1+0x41],0x5a
  41fd90:	xor    DWORD PTR [ebx],0x12
  41fd93:	or     dh,al
  41fd95:	scas   al,BYTE PTR es:[edi]
  41fd96:	nop
  41fd97:	add    al,ch
  41fd99:	jmp    0x5423:0x78fc5dd9
  41fda0:	xor    BYTE PTR [esi-0x5902e45b],0x79
  41fda7:	aam    0xbb
  41fda9:	in     al,dx
  41fdaa:	xor    BYTE PTR [eax+0x23],ch
  41fdad:	scas   eax,DWORD PTR es:[edi]
  41fdae:	jg     0x41fe0a
  41fdb0:	push   esp
  41fdb1:	retf   
  41fdb2:	addr16 inc esp
  41fdb4:	std    
  41fdb5:	aam    0xd3
  41fdb7:	(bad)  
  41fdb8:	cld    
  41fdb9:	sub    al,0xf8
  41fdbb:	mov    dh,0xc6
  41fdbd:	mov    cl,0x35
  41fdbf:	add    BYTE PTR [ebx+0x68],dl
  41fdc2:	mov    ecx,0xdce7eb7e
  41fdc7:	in     al,0xfb
  41fdc9:	repz mov WORD PTR [ebx-0x7899d978],?
  41fdd0:	xlat   BYTE PTR ds:[ebx]
  41fdd1:	push   0x94fe8fe0
  41fdd6:	pop    ebp
  41fdd7:	mov    DWORD PTR [edx+0x0],eax
  41fdda:	add    BYTE PTR [eax],al
  41fddc:	xchg   esp,esp
  41fdde:	mov    esi,0x58aa7a07
  41fde3:	out    0x81,eax
  41fde5:	sub    bl,BYTE PTR [ebx-0x4]
  41fde8:	outs   dx,DWORD PTR ds:[esi]
  41fde9:	sbb    eax,0x726c53d8
  41fdee:	or     al,0x89
  41fdf0:	es mov edx,0x73f33ff1
  41fdf6:	add    BYTE PTR [ebx+0x69b059ae],cl
  41fdfc:	icebp  
  41fdfd:	pop    eax
  41fdfe:	xor    eax,DWORD PTR [eax+0x30d55e4b]
  41fe04:	jo     0x41fe0c
  41fe06:	bound  edx,QWORD PTR [eax]
  41fe08:	repz fsincos 
  41fe0b:	mov    BYTE PTR [ebx-0x7292a2a],dh
  41fe11:	jnp    0x41fe39
  41fe13:	or     al,0x74
  41fe15:	leave  
  41fe16:	mov    esi,0x238214e9
  41fe1b:	pop    eax
  41fe1c:	mov    esp,0x1f5ce8dc
  41fe21:	adc    ecx,ebp
  41fe23:	add    dh,bl
  41fe25:	push   es
  41fe26:	sbb    al,0x6
  41fe28:	jb     0x41fdeb
  41fe2a:	call   0x254a:0xda01db5c
  41fe31:	adc    ch,BYTE PTR [eax+0x337ff3d6]
  41fe37:	pusha  
  41fe38:	inc    ebx
  41fe39:	sbb    BYTE PTR [ebx],0xc
  41fe3c:	fucomi st,st(5)
  41fe3e:	je     0x41fe9c
  41fe40:	add    BYTE PTR [eax],al
  41fe42:	add    bh,al
  41fe44:	and    BYTE PTR [ebx],0x60
  41fe47:	pop    ds
  41fe48:	mov    dl,0x2f
  41fe4a:	inc    ecx
  41fe4b:	in     al,dx
  41fe4c:	push   es
  41fe4d:	mov    ah,0x88
  41fe4f:	cwde   
  41fe50:	mov    al,BYTE PTR [edx-0x3d]
  41fe53:	inc    ebx
  41fe54:	mov    ch,0x61
  41fe56:	push   ebx
  41fe57:	imul   eax,ebp,0xffffffd6
  41fe5a:	push   esp
  41fe5b:	mov    esp,0x3e8e26f2
  41fe60:	cmc    
  41fe61:	or     DWORD PTR [ebx+0x1f],eax
  41fe64:	mov    ah,BYTE PTR [esi]
  41fe66:	sti    
  41fe67:	sub    al,0x5f
  41fe69:	jbe    0x41fec0
  41fe6b:	jbe    0x41febb
  41fe6d:	bound  eax,QWORD PTR [ebx-0x20]
  41fe70:	add    eax,0x7a4d43d9
  41fe75:	out    0x3,eax
  41fe77:	repz jnp 0x41fdfd
  41fe7a:	inc    ebx
  41fe7b:	imul   eax,DWORD PTR [ebp+0xe],0x7d
  41fe7f:	inc    edi
  41fe80:	dec    ebp
  41fe81:	push   ebp
  41fe83:	dec    edi
  41fe84:	xchg   DWORD PTR [edx+0x9],edi
  41fe87:	lock mov cs,WORD PTR [edi]
  41fe8a:	push   cs
  41fe8b:	out    dx,eax
  41fe8c:	push   es
  41fe8d:	mov    bh,0x19
  41fe8f:	inc    edx
  41fe90:	dec    esi
  41fe91:	cld    
  41fe92:	pop    ebp
  41fe93:	sti    
  41fe94:	in     al,0x36
  41fe96:	and    al,0x97
  41fe98:	xlat   BYTE PTR ds:[ebx]
  41fe99:	xlat   BYTE PTR ds:[ebx]
  41fe9a:	dec    edi
  41fe9b:	test   cl,0xdf
  41fe9e:	(bad)
  41fea2:	xor    al,0xa3
  41fea4:	dec    ebp
  41fea5:	jo     0x41fe84
  41fea7:	add    BYTE PTR [eax],al
  41fea9:	add    BYTE PTR [edx],dl
  41feab:	adc    eax,0x491d9d43
  41feb0:	gs loopne 0x41fe6e
  41feb3:	pop    ecx
  41feb4:	je     0x41ff0c
  41feb6:	je     0x41fe88
  41feb8:	pop    es
  41feb9:	pop    esp
  41feba:	jo     0x41ff39
  41febc:	(bad)  
  41febd:	call   0x2507b5b2
  41fec2:	sub    al,0x4e
  41fec4:	ret    0x262c
  41fec7:	dec    ebp
  41fec8:	std    
  41fec9:	aam    0xa8
  41fecb:	cld    
  41fecc:	aas    
  41fecd:	jmp    0x744e8c45
  41fed2:	mov    dl,0x4f
  41fed4:	out    0x9a,eax
  41fed6:	sbb    BYTE PTR [esp+edi*8+0x62],cl
  41feda:	fisttp WORD PTR [eax-0x78eb0928]
  41fee0:	(bad)  
  41fee1:	call   0x218480d6
  41fee6:	aas    
  41fee7:	jle    0x41fed9
  41fee9:	inc    ecx
  41feea:	inc    ebp
  41feeb:	pop    ecx
  41feec:	std    
  41feed:	es jb  0x41fe7d
  41fef0:	ja     0x41fecf
  41fef2:	jge    0x41ff51
  41fef4:	push   0x3108071f
  41fef9:	imul   edi,DWORD PTR [edx],0xdfffff4f
  41feff:	das    
  41ff00:	mov    esp,0xfc5b2e74
  41ff05:	push   edx
  41ff06:	repnz outs dx,DWORD PTR ds:[esi]
  41ff08:	out    dx,al
  41ff09:	dec    BYTE PTR [ebp-0x1f]
  41ff0c:	cmc    
  41ff0d:	fiadd  WORD PTR [eax]
  41ff0f:	add    BYTE PTR [eax],al
  41ff11:	dec    esp
  41ff12:	mov    al,0x87
  41ff14:	retf   
  41ff15:	mov    ds:0x66e80047,eax
  41ff1a:	loopne 0x41ff16
  41ff1c:	call   DWORD PTR [edx+0x21ebf746]
  41ff22:	pop    ebx
  41ff23:	std    
  41ff24:	push   edx
  41ff25:	and    ah,BYTE PTR [edx-0x7ec20112]
  41ff2b:	inc    ecx
  41ff2c:	stc    
  41ff2d:	xchg   ecx,eax
  41ff2e:	cs add al,0xeb
  41ff31:	and    DWORD PTR [ecx+0x3cdafa79],ecx
  41ff37:	and    DWORD PTR [ebx+0x7d320701],eax
  41ff3d:	int    0x5a
  41ff3f:	std    
  41ff40:	mov    WORD PTR [edi],es
  41ff42:	ret    
  41ff43:	xchg   ebx,ecx
  41ff45:	bound  ecx,QWORD PTR ds:0xcc3dfeee
  41ff4b:	mov    esp,0xc77d9d74
  41ff50:	call   0x3ce0c3
  41ff55:	push   ss
  41ff56:	enter  0x470,0xd4
  41ff5a:	inc    esi
  41ff5b:	test   DWORD PTR [ecx],0x7fe7f52d
  41ff61:	enter  0xfbad,0x53
  41ff65:	and    ch,BYTE PTR [ebx]
  41ff67:	mov    esi,0x7987bdfe
  41ff6c:	cli    
  41ff6d:	mov    bh,BYTE PTR [ecx+ecx*1]
  41ff70:	lea    eax,ds:0xfffdd8
  41ff76:	add    BYTE PTR [eax],al
  41ff78:	pop    edx
  41ff79:	cwde   
  41ff7a:	sti    
  41ff7b:	adc    eax,0x3ff2edf3
  41ff80:	repz fst st(7)
  41ff83:	clc    
  41ff84:	repz leave 
  41ff86:	add    DWORD PTR [eax-0x74090e],esi
  41ff8c:	inc    esp
  41ff8d:	pop    esi
  41ff8e:	cmp    BYTE PTR [edx+0x3a],0x5e
  41ff92:	or     DWORD PTR [esi+ecx*2+0x7efc5664],eax
  41ff99:	in     eax,0xeb
  41ff9b:	(bad)  
  41ff9c:	and    al,0x5e
  41ff9e:	mov    al,0x86
  41ffa0:	mov    dh,0x65
  41ffa2:	push   edi
  41ffa3:	adc    al,BYTE PTR [edi]
  41ffa5:	xor    al,al
  41ffa7:	(bad)  
  41ffa8:	jg     0x41ffcd
  41ffaa:	dec    esp
  41ffab:	mov    ah,BYTE PTR [esi+edi*4+0x0]
  41ffaf:	add    bl,dh
  41ffb1:	in     eax,dx
  41ffb2:	mov    dh,al
  41ffb4:	or     edx,ebp
  41ffb6:	push   edx
  41ffb7:	std    
  41ffb8:	in     al,dx
  41ffb9:	loop   0x41fffe
  41ffbb:	ja     0x41ffca
  41ffbd:	jmp    0x36276815
  41ffc2:	add    esi,DWORD PTR [ecx]
  41ffc4:	dec    ecx
  41ffc5:	pop    esi
  41ffc6:	mov    bl,0x8a
  41ffc8:	dec    esi
  41ffc9:	sahf   
  41ffca:	imul   edi,edi,0xffffffc2
  41ffcd:	rcl    DWORD PTR [esi-0x79],cl
  41ffd0:	fldcw  WORD PTR ss:[ebx+0x36]
  41ffd4:	xchg   ebp,eax
  41ffd5:	jecxz  0x42002d
  41ffd7:	xchg   BYTE PTR ds:0xc08b62,dh
  41ffdd:	add    BYTE PTR [eax],al
  41ffdf:	fwait
  41ffe0:	repnz push ebx
  41ffe2:	std    
  41ffe3:	pushf  
  41ffe4:	enter  0x6a2b,0xf2
  41ffe8:	sar    BYTE PTR [edi+edi*4+0x396c1878],cl
  41ffef:	adc    BYTE PTR [ebx],0x57
  41fff2:	xchg   DWORD PTR [esi],esi
  41fff4:	sbb    DWORD PTR [eax-0x3f90041],eax
  41fffa:	sub    BYTE PTR [edi-0xcfc181e],0x76
  420001:	out    0x3,eax
  420003:	repz int3 
  420005:	fist   WORD PTR [ebx+esi*1]
  420008:	jg     0x42003b
  42000a:	ins    BYTE PTR es:[edi],dx
  42000b:	fwait
  42000c:	pop    eax
  42000d:	cld    
  42000e:	pop    eax
  42000f:	inc    edi
  420010:	rcr    esi,1
  420012:	pop    eax
  420013:	loope  0x42006b
  420015:	fadd   st,st(3)
  420017:	xor    al,0x7d
  420019:	sub    ebx,DWORD PTR [ebp-0x31]
  42001c:	lods   al,BYTE PTR ds:[esi]
  42001d:	inc    ecx
  42001e:	dec    ebx
  42001f:	xor    al,BYTE PTR [edx]
  420021:	out    0xae,eax
  420023:	imul   ebx,DWORD PTR [edx+0x69],0x67
  420027:	lods   al,BYTE PTR ds:[esi]
  420028:	mov    ah,0x73
  42002a:	test   BYTE PTR [ebp+eax*1-0x4961fc19],dl
  420031:	lods   al,BYTE PTR ds:[esi]
  420032:	mov    esi,0xbe6005ff
  420037:	add    al,0x4b
  420039:	sti    
  42003a:	addr16 add al,bh
  42003d:	out    0x14,al
  42003f:	mov    bl,0x80
  420041:	sub    ebx,DWORD PTR [eax+eax*1+0x0]
  420045:	add    BYTE PTR ds:0xf3030286,ah
  42004b:	push   es
  42004c:	test   BYTE PTR [ecx+0x3e707cd],0x6c
  420053:	les    edi,FWORD PTR [edx-0x74]
  420056:	jnp    0x42003f
  420058:	out    0x3,eax
  42005a:	repz add eax,0xd47b4fe4
  420060:	out    dx,al
  420061:	xchg   BYTE PTR [edi],ch
  420063:	push   DWORD PTR [esi+0x4c55916b]
  420069:	pop    eax
  42006a:	jno    0x4200b3
  42006c:	cmc    
  42006d:	mov    bh,BYTE PTR [ecx+0x7]
  420070:	out    0x3,eax
  420072:	jge    0x420038
  420074:	jmp    esp
  420076:	icebp  
  420077:	aad    0xb
  420079:	bound  esi,QWORD PTR [edx]
  42007b:	xchg   DWORD PTR [edi-0x13],esi
  42007e:	push   es
  42007f:	cld    
  420080:	mov    ah,BYTE PTR [eax-0x10]
  420083:	push   es
  420084:	add    BYTE PTR [edi],bl
  420086:	popf   
  420087:	inc    BYTE PTR [ecx]
  420089:	xchg   ebp,eax
  42008a:	xor    al,0xe0
  42008c:	aaa    
  42008d:	je     0x42001c
  42008f:	xchg   edx,eax
  420090:	push   esp
  420091:	cdq    
  420092:	stos   DWORD PTR es:[edi],eax
  420093:	hlt    
  420094:	das    
  420095:	fbstp  TBYTE PTR [eax]
  420097:	dec    edx
  420098:	mov    DWORD PTR [eax+ebx*4+0x7bf5c386],esp
  42009f:	jg     0x420100
  4200a1:	call   0xfd2a0796
  4200a6:	ret    0xfc4b
  4200a9:	into   
  4200aa:	add    BYTE PTR [eax],al
  4200ac:	add    BYTE PTR [edx+0x5a],al
  4200af:	cld    
  4200b0:	xor    al,0xaf
  4200b2:	xchg   BYTE PTR [edx-0x4b],ch
  4200b5:	out    0x4b,eax
  4200b7:	adc    bh,BYTE PTR [ecx+0x62000a01]
  4200bd:	push   0xf0e8feca
  4200c2:	fdiv   st(7),st
  4200c4:	imul   esi,DWORD PTR [edx+0x30da4f91],0x62
  4200cb:	mov    edi,ecx
  4200cd:	out    dx,eax
  4200ce:	push   es
  4200cf:	sub    DWORD PTR [ecx-0x17960a5b],0x7b
  4200d6:	les    esi,FWORD PTR [edi+0x52623562]
  4200dc:	jns    0x4200fb
  4200de:	dec    ebx
  4200df:	sub    DWORD PTR [ecx],0xffffffc3
  4200e2:	add    eax,0x493da4c6
  4200e7:	std    
  4200e8:	fadd   QWORD PTR [eax+0x4b]
  4200eb:	adc    bh,BYTE PTR ds:0x9a1
  4200f1:	and    DWORD PTR [edx+0x66],eax
  4200f4:	add    BYTE PTR [ecx],al
  4200f6:	or     cl,BYTE PTR [eax-0x1005cd32]
  4200fc:	inc    ch
  4200fe:	xchg   BYTE PTR [esp+esi*2-0x74de23bf],bh
  420105:	xchg   edi,eax
  420106:	std    
  420107:	xchg   al,dh
  420109:	jno    0x4200c6
  42010b:	xor    al,0x3
  42010d:	cmp    ebx,DWORD PTR [edi-0x4]
  420110:	push   eax
  420111:	add    BYTE PTR [eax],al
  420113:	add    dl,ah
  420115:	(bad)  
  420116:	in     al,dx
  420117:	inc    BYTE PTR [ebp-0x37]
  42011a:	mov    esp,0x420b4e74
  42011f:	dec    DWORD PTR [ebx+0x7c]
  420122:	jnp    0x420128
  420124:	shl    DWORD PTR [eax],cl
  420126:	add    BYTE PTR [ebx+0xd],dh
  420129:	jp     0x4201a5
  42012b:	add    al,0x4c
  42012d:	inc    esi
  42012e:	sti    
  42012f:	add    DWORD PTR [ecx-0x7e720bba],edx
  420135:	gs std 
  420137:	call   FWORD PTR [edx]
  420139:	fld    QWORD PTR [ebx-0x44fbb0f]
  42013f:	dec    ebp
  420140:	inc    edx
  420141:	test   BYTE PTR [ecx-0xc],ch
  420144:	shl    BYTE PTR [ecx+0x4761f841],cl
  42014a:	hlt    
  42014b:	or     DWORD PTR [edi],0xffffffb7
  42014e:	xor    al,0x3b
  420150:	dec    ecx
  420151:	sub    ch,bh
  420153:	(bad)  
  420154:	fiadd  DWORD PTR [ecx]
  420156:	mov    WORD PTR [edx],es
  420158:	inc    ebp
  420159:	mov    cl,0xfb
  42015b:	(bad)  
  42015c:	mov    edi,0x3a15fbb4
  420161:	push   esi
  420162:	cmp    al,0x0
  420164:	sbb    ch,BYTE PTR [edi]
  420166:	sti    
  420167:	add    BYTE PTR [esi-0xcba7904],bh
  42016d:	gs push 0x55b885b8
  420173:	mov    DWORD PTR [esi],esi
  420175:	shl    DWORD PTR [ebp+0x5d],0xba
  42017c:	sbb    al,0x9
  42017e:	add    BYTE PTR [ecx],cl
  420180:	pop    esi
  420181:	push   ebp
  420182:	scas   eax,DWORD PTR es:[edi]
  420183:	addr16 pop edi
  420185:	add    BYTE PTR [eax],al
  420187:	ins    BYTE PTR es:[edi],dx
  420188:	dec    ebx
  420189:	lock adc BYTE PTR [ebx-0x728b2a3],dh
  420190:	sbb    eax,0x9130d74e
  420195:	adc    ebp,edi
  420197:	jae    0x420159
  420199:	test   al,0xfe
  42019b:	inc    esp
  42019c:	pop    esi
  42019d:	add    BYTE PTR [esi-0x3],dh
  4201a0:	pusha  
  4201a1:	mov    al,BYTE PTR [ebp+0x5f8a]
  4201a7:	cld    
  4201a8:	test   DWORD PTR [bx+0x5df2],esp
  4201ad:	add    BYTE PTR [ecx],al
  4201af:	xor    al,0xed
  4201b1:	xor    esp,esi
  4201b3:	and    al,ah
  4201b5:	out    dx,eax
  4201b6:	cld    
  4201b7:	xchg   ecx,edi
  4201b9:	pop    es
  4201ba:	imul   esp,DWORD PTR [ecx],0xc1838532
  4201c0:	add    DWORD PTR [eax],0x0
  4201c3:	repz in eax,dx
  4201c5:	push   edx
  4201c6:	adc    ch,BYTE PTR [edi]
  4201c8:	dec    eax
  4201c9:	sar    bh,0x71
  4201cc:	mov    eax,ds:0xe9b38307
  4201d1:	pop    ds
  4201d2:	or     eax,0xfeabdf9d
  4201d7:	int3   
  4201d8:	pop    ebp
  4201d9:	mov    ebx,0x3e4bcb38
  4201de:	mov    DWORD PTR [eax],eax
  4201e0:	add    BYTE PTR [eax],al
  4201e2:	lds    eax,FWORD PTR gs:[eax]
  4201e5:	add    bl,dh
  4201e7:	fstp   QWORD PTR [ecx+0x31]
  4201ea:	and    BYTE PTR [edi],al
  4201ec:	clc    
  4201ed:	add    al,0x5d
  4201ef:	cmp    al,0x5c
  4201f1:	inc    edx
  4201f2:	je     0x420264
  4201f4:	jle    0x4201f9
  4201f6:	repz push es
  4201f8:	inc    edx
  4201f9:	test   dl,0x46
  4201fc:	push   ecx
  4201fd:	push   cs
  4201fe:	jns    0x420180
  420200:	pop    DWORD PTR [ebx]
  420202:	repz push es
  420204:	out    0x8d,al
  420206:	lods   al,BYTE PTR ds:[esi]
  420207:	dec    eax
  420208:	es add eax,0x8df546a5
  42020e:	push   0x6d
  420210:	adc    eax,0x3f707455
  420215:	add    esi,ebx
  420217:	push   es
  420218:	or     BYTE PTR [edx-0x20],0xdc
  42021c:	ficom  DWORD PTR [eax+eax*8+0x22]
  420220:	jmp    0x4201a8
  420222:	jo     0x420239
  420224:	inc    ecx
  420225:	add    esi,ebx
  420227:	push   es
  420228:	xchg   edi,eax
  420229:	push   esp
  42022a:	add    DWORD PTR [edi],edx
  42022c:	std    
  42022d:	ret    
  42022e:	and    al,0x84
  420230:	mov    ds:0x36056307,al
  420235:	inc    edx
  420236:	lock push es
  420238:	(bad)  
  420239:	icebp  
  42023a:	ror    DWORD PTR [ecx+ecx*4],cl
  42023d:	inc    eax
  42023e:	mov    eax,ds:0x1080ca7b
  420243:	dec    esi
  420244:	addr16 add BYTE PTR [bx+si],al
  420248:	add    al,bl
  42024a:	jmp    esi
  42024c:	add    eax,DWORD PTR [edx-0x23]
  42024f:	cmp    eax,0xe7017cec
  420254:	add    ebp,DWORD PTR [edx+0x40]
  420257:	xchg   ebp,eax
  420258:	out    dx,al
  420259:	lods   al,BYTE PTR ds:[esi]
  42025a:	sbb    DWORD PTR [edi],esp
  42025c:	add    al,0x78
  42025e:	mov    ebx,0xe9ccb3ca
  420263:	aas    
  420264:	add    esi,ebx
  420266:	xchg   ecx,eax
  420267:	(bad)  
  420268:	mov    ebx,0xe9401824
  42026d:	jne    0x4201f9
  42026f:	and    edi,DWORD PTR [ecx]
  420271:	lock push es
  420273:	add    BYTE PTR [ecx-0x727fa3b9],bh
  420279:	hlt    
  42027a:	jb     0x42027b
  42027c:	call   0xe9ac0971
  420281:	call   0x23a2:0x75293145
  420288:	jno    0x42027a
  42028a:	push   es
  42028b:	add    BYTE PTR [eax-0x7c],ah
  42028e:	jmp    0x15e8:0x6f0e9af
  420295:	inc    ebp
  420296:	inc    esi
  420297:	cld    
  420298:	xor    eax,0xffffffb0
  42029b:	add    edx,ebx
  42029d:	mov    al,0x90
  42029f:	fwait
  4202a0:	int    0xb8
  4202a2:	inc    ebp
  4202a3:	cld    
  4202a4:	jmp    0xe9bc2a71
  4202a9:	lock xchg ecx,eax
  4202ab:	inc    ebx
  4202ac:	lds    eax,FWORD PTR [eax]
  4202ae:	add    BYTE PTR [eax],al
  4202b0:	pusha  
  4202b1:	lea    eax,[ebx-0x3b9a4f3]
  4202b7:	jmp    0xfd65cc5b
  4202bc:	jae    0x420288
  4202be:	and    esi,ecx
  4202c0:	inc    eax
  4202c1:	lea    edi,[ebx-0x3b9a4f3]
  4202c7:	jmp    0xdd65c44b
  4202cc:	mov    eax,ds:0x4f4885b
  4202d1:	sbb    eax,0xdc6e940
  4202d6:	xor    edx,eax
  4202d8:	jb     0x4202a3
  4202da:	and    ebx,ebp
  4202dc:	popf   
  4202dd:	aad    0xfc
  4202df:	mov    bh,0x74
  4202e1:	dec    ecx
  4202e2:	or     eax,DWORD PTR [eax]
  4202e4:	loopne 0x420320
  4202e6:	mov    DWORD PTR [esi+esi*4+0x15],eax
  4202ea:	dec    edi
  4202eb:	push   eax
  4202ec:	cmp    eax,0xcec48001
  4202f1:	jl     0x42027c
  4202f3:	inc    esp
  4202f4:	idiv   BYTE PTR [esi]
  4202f6:	test   DWORD PTR [esi+esi*8+0x46],ebx
  4202fa:	test   DWORD PTR [esi+eiz*8+0x7a],ebx
  4202fe:	in     al,0xd6
  420300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420301:	fdivr  st,st(3)
  420303:	mov    edx,ebp
  420305:	xchg   DWORD PTR [eax+0xb2224],esi
  42030b:	add    BYTE PTR [edx],dh
  42030d:	enter  0xff03,0x1d
  420311:	mov    BYTE PTR [eax+0x24],al
  420317:	mov    edx,0xe300000a
  42031c:	xchg   ecx,eax
  42031d:	jl     0x420320
  42031f:	dec    edx
  420320:	or     DWORD PTR [ecx-0x7ac6c9bc],ecx
  420326:	xchg   esi,edx
  420328:	or     eax,DWORD PTR [eax]
  42032a:	add    cl,al
  42032c:	rcl    BYTE PTR [ebx-0x77],1
  42032f:	(bad)
  420332:	call   FWORD PTR [edx]
  420334:	loope  0x4202be
  420336:	lock or eax,0x420866d8
  42033c:	mov    ds:0x143dfeba,al
  420341:	mov    edi,0xfcd02f74
  420346:	lahf   
  420347:	mov    esp,0xb288fc4a
  42034c:	push   cs
  42034d:	xchg   eax,esi
  42034f:	xor    DWORD PTR [ebx],ecx
  420351:	das    
  420352:	test   BYTE PTR [edi+0x4c],0x20
  420356:	push   eax
  420357:	adc    BYTE PTR [eax+0x59],0x0
  42035b:	retf   0xbc8c
  42035e:	jne    0x420353
  420360:	sub    BYTE PTR [ebp-0x3c],bh
  420363:	fisttp DWORD PTR [ebp+0x4e]
  420366:	cld    
  420367:	les    esi,FWORD PTR [edx+0x16ad7240]
  42036d:	in     al,0xe9
  42036f:	repz sub eax,0x4e748ab5
  420375:	add    eax,DWORD PTR [eax]
  420377:	repz jge 0x42037b
  42037a:	mov    dh,0x0
  42037c:	add    BYTE PTR [eax],al
  42037e:	je     0x420366
  420380:	add    al,BYTE PTR [eax]
  420382:	repz jge 0x4203d6
  420385:	adc    al,BYTE PTR [edi+0x40]
  420388:	sar    bh,0x71
  42038b:	(bad)  
  42038c:	push   ecx
  42038d:	jae    0x420370
  42038f:	inc    edx
  420390:	add    bh,bh
  420392:	je     0x4203c2
  420394:	aam    0x8
  420396:	cld    
  420397:	mov    ebx,0x2df23781
  42039c:	add    BYTE PTR [ecx],bh
  42039e:	xor    ah,BYTE PTR [eax+0x504b54f3]
  4203a4:	push   eax
  4203a5:	cld    
  4203a6:	dec    esp
  4203a7:	jecxz  0x42036d
  4203a9:	and    esp,DWORD PTR [ebx-0xc47e1eb]
  4203af:	sub    eax,0xaa68ba5d
  4203b4:	mov    DWORD PTR [edi],ebx
  4203b6:	repnz sub eax,0xba743900
  4203bc:	add    BYTE PTR [eax],al
  4203be:	repz xor al,0x84
  4203c1:	sub    eax,0x89002df2
  4203c6:	je     0x4203ba
  4203c8:	add    BYTE PTR [eax],al
  4203ca:	repz or BYTE PTR [edx+esi*2],bh
  4203ce:	out    dx,al
  4203cf:	or     BYTE PTR [ebx+0x73],al
  4203d2:	jmp    0x4e81:0x54e746a8
  4203d9:	cld    
  4203da:	fadd   DWORD PTR [esi]
  4203dc:	jp     0x42045a
  4203de:	cmp    bl,ch
  4203e0:	jmp    0xca9d:0x0
  4203e7:	retf   0x7bff
  4203ea:	mov    ah,BYTE PTR [ebp-0x4]
  4203ed:	lds    eax,FWORD PTR [ebx-0x1a]
  4203f0:	or     al,0xb2
  4203f2:	mov    edx,0xf2b0ae3
  4203f7:	sti    
  4203f8:	repz scas al,BYTE PTR es:[edi]
  4203fa:	retf   0xffc2
  4203fd:	and    al,0xc3
  4203ff:	or     al,BYTE PTR [eax]
  420401:	idiv   DWORD PTR [eax+0x6935b46]
  420407:	out    0x3,eax
  420409:	(bad)  
  42040a:	jl     0x4203ae
  42040c:	daa    
  42040d:	test   DWORD PTR [edi+0x5f4897a],0x37ba03e7
  420417:	in     eax,0x87
  420419:	aas    
  42041a:	push   es
  42041b:	out    0x3,eax
  42041d:	js     0x4203e9
  42041f:	retf   0xacd7
  420422:	inc    ebx
  420423:	xchg   esp,eax
  420424:	sti    
  420425:	push   edi
  420426:	mov    esp,0x26e150ea
  42042b:	repz ret 
  42042d:	inc    esp
  42042e:	mov    ah,BYTE PTR [esi]
  420430:	add    DWORD PTR [eax+0x6d],esi
  420433:	out    0x3,al
  420435:	repz cmp al,0xaa
  420438:	daa    
  420439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42043a:	push   cs
  42043b:	jae    0x420459
  42043d:	fsub   QWORD PTR [edx+0x431c880a]
  420443:	out    0x0,al
  420445:	add    BYTE PTR [esi+0x10],0x45
  420449:	add    BYTE PTR [eax],al
  42044b:	add    bh,bh
  42044d:	mov    DWORD PTR [esi+0x3],esi
  420450:	repz push es
  420452:	sar    bh,cl
  420454:	lods   al,BYTE PTR ds:[esi]
  420455:	(bad)  
  420456:	gs xor ebp,0x42
  42045a:	(bad)  
  42045b:	call   0xe84d8ca8
  420460:	lock (bad) 
  420462:	int    0x91
  420464:	cmp    cl,bl
  420466:	cld    
  420467:	sahf   
  420468:	out    0x47,eax
  42046a:	jb     0x4203ec
  42046c:	sub    al,dh
  42046e:	and    edx,DWORD PTR ds:0xc055baf0
  420474:	mov    esi,fs
  420476:	ja     0x420466
  420478:	cmp    eax,0xc5aa3982
  42047d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42047e:	mov    bh,ah
  420480:	enter  0x292,0xe9
  420484:	lock lea ecx,[ebx-0x3bedcfb]
  42048b:	jmp    0x5cd91d1
  420490:	iret   
  420491:	inc    ecx
  420492:	cld    
  420493:	jmp    0x3f0f93d9
  420498:	inc    eax
  420499:	or     bh,BYTE PTR [ecx]
  42049b:	sub    al,BYTE PTR [edx-0x11]
  42049e:	mov    bl,BYTE PTR [ebp+0xc]
  4204a1:	lahf   
  4204a2:	(bad)  
  4204a3:	call   0x6dccd698
  4204a8:	or     al,0x23
  4204aa:	(bad)  
  4204ab:	call   0xd129d6a0
  4204b0:	add    BYTE PTR [eax],al
  4204b2:	add    BYTE PTR [edi+0x44],bl
  4204b5:	cld    
  4204b6:	jb     0x420458
  4204b8:	(bad)  
  4204b9:	lock jne 0x4204fc
  4204bc:	(bad)  
  4204bd:	frstor [edx-0x45]
  4204c0:	sub    DWORD PTR [ecx-0xb],esp
  4204c3:	mov    ah,0x42
  4204c5:	out    0x19,eax
  4204c7:	jp     0x42050d
  4204c9:	cld    
  4204ca:	sbb    cl,al
  4204cc:	cmp    eax,DWORD PTR [ebx+0xd]
  4204cf:	sub    ecx,DWORD PTR [eax]
  4204d1:	or     eax,0xfc445065
  4204d6:	add    BYTE PTR ds:0xb6245c14,dh
  4204dc:	inc    ecx
  4204dd:	xchg   ecx,eax
  4204de:	shl    al,0xc4
  4204e1:	or     eax,DWORD PTR [edx+eiz*4-0x6a000430]
  4204e8:	pop    esi
  4204e9:	and    BYTE PTR [ecx+eiz*2],cl
  4204ec:	repnz in al,0xb7
  4204ef:	je     0x4204c2
  4204f1:	sti    
  4204f2:	xor    eax,DWORD PTR [ecx+0x64dbe479]
  4204f8:	sar    ebx,1
  4204fa:	jmp    0x3dd8b5
  4204ff:	pop    ss
  420500:	pop    edi
  420501:	and    BYTE PTR [eax+0x72],dl
  420504:	xor    esi,DWORD PTR [eax+eax*1-0x17ce4376]
  42050b:	cwde   
  42050c:	inc    ebp
  42050d:	cld    
  42050e:	mov    WORD PTR [esi],ds
  420510:	out    dx,eax
  420511:	inc    DWORD PTR [eax]
  420513:	call   0x0:0xff5005
  42051a:	fdivr  QWORD PTR [ebp+0x4598a039]
  420520:	cld    
  420521:	cmp    BYTE PTR [esi+0x4c744be9],al
  420527:	shl    BYTE PTR [eax+0x24],1
  42052a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42052b:	rcl    bl,1
  42052d:	cmp    DWORD PTR [esi+0x5c7447e9],edx
  420533:	shl    BYTE PTR [eax+0x24],1
  420536:	xchg   edx,eax
  420537:	rcl    bl,1
  420539:	lea    ecx,[esi+0x11e80fe9]
  42053f:	push   esp
  420540:	sti    
  420541:	call   DWORD PTR [edi-0x75e7dfb2]
  420547:	rcl    dl,1
  420549:	lea    ecx,[esi+0xa00a7e9]
  42054f:	add    eax,0xd9f3ace8
  420554:	add    eax,DWORD PTR [eax]
  420556:	jbe    0x420543
  420558:	daa    
  420559:	push   eax
  42055a:	or     ebp,ebx
  42055c:	xchg   ebp,eax
  42055d:	push   esp
  42055f:	pop    ds
  420560:	scas   al,BYTE PTR es:[edi]
  420561:	pop    eax
  420562:	js     0x4205b7
  420564:	scas   eax,DWORD PTR es:[edi]
  420565:	sar    BYTE PTR [esi],0xa5
  420568:	pop    esp
  420569:	adc    bh,0x66
  42056c:	sub    ebx,0xe7b4fd13
  420572:	sub    al,0x65
  420574:	dec    edx
  420575:	cld    
  420576:	js     0x42058b
  420578:	clc    
  420579:	xor    DWORD PTR [ebx+0x8acc42],0x0
  420580:	add    BYTE PTR [edi],ch
  420582:	dec    edx
  420583:	cld    
  420584:	dec    edi
  420585:	sbb    DWORD PTR [esi+0x7f],edx
  420588:	inc    ebx
  420589:	iret   
  42058a:	push   ebp
  42058b:	mov    al,0x69
  42058d:	repz or BYTE PTR [ebp+0x12],0x2b
  420592:	xchg   edx,eax
  420593:	sar    edi,0x77
  420596:	out    dx,al
  420597:	enter  0x7060,0x52
  42059b:	and    al,0x14
  42059d:	repz sub DWORD PTR [eax+eax*4+0x2409f7],0x734d2ae7
  4205a9:	femms  
  4205ab:	pop    esp
  4205ac:	dec    edx
  4205ad:	cwde   
  4205ae:	jmp    0x9b758800
  4205b3:	mov    eax,0x2051c7fc
  4205b8:	call   0xfc8cec9c
  4205bd:	push   0xbfd887e6
  4205c2:	inc    esi
  4205c3:	(bad)  
  4205c4:	inc    ecx
  4205c6:	add    eax,0x3125ca24
  4205cb:	test   BYTE PTR [edi+0x190d06a7],bh
  4205d1:	lock cli 
  4205d3:	mov    al,cl
  4205d5:	or     al,0xb
  4205d7:	not    DWORD PTR [eax+0x7d506c4]
  4205dd:	shl    DWORD PTR [edx+0x29],cl
  4205e0:	add    al,0xe3
  4205e2:	mov    edx,0x78ef
  4205e7:	add    BYTE PTR [ecx],bh
  4205e9:	and    edi,edx
  4205eb:	adc    BYTE PTR [esi+eax*1-0x2e95fc19],0x2
  4205f3:	jnp    0x42064a
  4205f5:	ja     0x4205dd
  4205f7:	add    esi,ebx
  4205f9:	rcl    DWORD PTR [ebp+0x271464f7],cl
  4205ff:	add    al,0xbe
  420601:	mov    ecx,0xe7414cca
  420606:	jge    0x4205df
  420608:	or     BYTE PTR [eax-0x5],al
  42060b:	jmp    0x42064c
  42060d:	inc    eax
  42060e:	repz repz lahf 
  420611:	mov    ecx,0xf214cf2
  420616:	pop    esi
  420617:	test   esp,0x2603a972
  42061d:	fsub   QWORD PTR [ecx+0x67]
  420620:	sbb    DWORD PTR [ebp+0x6],eax
  420623:	add    al,0x20
  420625:	mov    WORD PTR [edx-0x7d],cs
  420628:	pop    eax
  420629:	push   edx
  42062a:	call   0x2e15f932
  42062f:	xlat   BYTE PTR ds:[ebx]
  420630:	or     al,0x8c
  420632:	ret    
  420633:	sti    
  420634:	push   edi
  420635:	mov    ecx,0xeec14cca
  42063a:	adc    eax,0x934010d7
  42063f:	and    edi,DWORD PTR [esi]
  420641:	mov    ecx,0x1ec14ce2
  420646:	(bad)  
  420647:	(bad)  
  420648:	add    BYTE PTR [eax-0x1],al
  42064b:	jnp    0x42064d
  42064d:	add    BYTE PTR [eax],al
  42064f:	and    BYTE PTR [edx+0x72],al
  420652:	frstor [ebx+0x42]
  420655:	adc    ch,BYTE PTR ds:0x6fffc653
  42065b:	xor    eax,0x7a982eb
  420660:	xchg   edi,esp
  420662:	jmp    0x2d380d57
  420667:	retf   
  420668:	aas    
  420669:	or     eax,0xfc3e1e65
  42066e:	jmp    0x654e65e0
  420673:	es ds cld 
  420676:	jmp    0xe94dc7ee
  42067b:	iret   
  42067c:	mov    cl,bl
  42067e:	jmp    0x342a0d73
  420683:	stc    
  420684:	cmp    edi,esp
  420686:	ins    DWORD PTR es:[edi],dx
  420687:	xor    BYTE PTR [ebx],cl
  420689:	test   BYTE PTR [esi],bh
  42068b:	lock push es
  42068d:	add    BYTE PTR [esi+0x3],dh
  420690:	cmp    al,0x12
  420692:	adc    eax,0x6bfffea0
  420697:	xor    BYTE PTR [ebx],cl
  420699:	test   BYTE PTR [esi-0x46fff910],cl
  42069f:	sub    cl,bh
  4206a1:	(bad)  
  4206a2:	dec    edi
  4206a3:	das    
  4206a4:	test   DWORD PTR [edx-0x7],eax
  4206a7:	ins    DWORD PTR es:[edi],dx
  4206a8:	jle    0x4206b6
  4206aa:	fidivr WORD PTR gs:0xd39ee9fc
  4206b1:	mov    dl,dh
  4206b3:	add    BYTE PTR [eax],al
  4206b5:	add    BYTE PTR [edx],bh
  4206b7:	ds dec esp
  4206b9:	adc    ecx,ebp
  4206bb:	inc    ebp
  4206bc:	std    
  4206bd:	push   ds
  4206be:	retf   
  4206bf:	sub    eax,0x8a0c9c86
  4206c4:	cmc    
  4206c5:	xchg   ebp,eax
  4206c6:	cs out dx,eax
  4206c8:	xor    al,BYTE PTR [eax]
  4206ca:	jbe    0x42066a
  4206cc:	aas    
  4206cd:	add    BYTE PTR [ecx-0x6872f7b4],ah
  4206d3:	adc    eax,0x790dfff9
  4206d8:	sti    
  4206d9:	aaa    
  4206da:	mov    ecx,eax
  4206dc:	or     al,0xb3
  4206de:	fiadd  DWORD PTR [edx]
  4206e0:	ret    
  4206e1:	test   esi,esp
  4206e3:	iret   
  4206e4:	sti    
  4206e5:	dec    DWORD PTR [ecx]
  4206e7:	or     bh,ch
  4206e9:	jmp    FWORD PTR ds:0x1a114838
  4206ef:	add    eax,DWORD PTR [ecx-0x78bcd940]
  4206f5:	test   DWORD PTR [esi-0x2e000431],ebx
  4206fb:	push   es
  4206fc:	dec    esp
  4206fd:	lods   al,BYTE PTR ds:[esi]
  4206fe:	sbb    DWORD PTR [ebx],eax
  420700:	jno    0x420734
  420702:	fs pop es
  420704:	and    BYTE PTR [ecx+ecx*1-0x3b8beffd],ch
  42070b:	adc    al,0xb1
  42070d:	in     al,0x2f
  42070f:	sar    bl,cl
  420711:	lea    edx,[edi]
  420713:	pop    ss
  420714:	stc    
  420715:	dec    DWORD PTR ds:0x37fb73
  42071b:	add    BYTE PTR [eax],al
  42071d:	and    ebx,DWORD PTR [eax-0x2dd20220]
  420723:	ret    
  420724:	test   esi,esp
  420726:	iret   
  420727:	sti    
  420728:	dec    DWORD PTR [eax+0x2dfffd09]
  42072e:	cmp    BYTE PTR [ecx+edx*1-0x66],cl
  420732:	or     DWORD PTR [ecx+0x6433a7c0],eax
  420738:	add    dl,cl
  42073a:	add    al,BYTE PTR [eax]
  42073c:	push   0x4a
  42073e:	shl    BYTE PTR [ecx+0x24],1
  420741:	in     eax,dx
  420742:	adc    eax,0xe3f315fb
  420747:	cmc    
  420748:	aas    
  420749:	repz or al,0xcf
  42074c:	das    
  42074d:	xor    al,0x5a
  42074f:	mov    al,ds:0xa92fb311
  420754:	pop    ebp
  420755:	js     0x4207c1
  420757:	adc    al,0x59
  420759:	sub    dh,cl
  42075b:	pop    ss
  42075c:	add    BYTE PTR [esi+0x70e754b8],bh
  420762:	jbe    0x4207aa
  420764:	cld    
  420765:	outs   dx,DWORD PTR ds:[esi]
  420766:	outs   dx,DWORD PTR ds:[esi]
  420767:	iret   
  420768:	add    al,0x9e
  42076a:	dec    esp
  42076b:	pop    ds
  42076c:	push   eax
  42076d:	inc    edi
  42076e:	lock add edx,DWORD PTR [ecx+0x45]
  420772:	mov    ecx,0x1c3c13cf
  420777:	dec    ecx
  420778:	jb     0x42077d
  42077a:	enter  0xfd03,0x5e
  42077e:	ss dec ecx
  420780:	adc    al,BYTE PTR [eax]
  420782:	add    BYTE PTR [eax],al
  420784:	daa    
  420785:	retf   0xffc5
  420788:	push   ds
  420789:	xchg   ebp,eax
  42078a:	iret   
  42078b:	punpckhbw mm2,QWORD PTR [esi-0x7b188db7]
  420792:	iret   
  420793:	pop    es
  420794:	lods   al,BYTE PTR ds:[esi]
  420795:	push   ebx
  420796:	mov    al,0xab
  420798:	xor    BYTE PTR [esi],ch
  42079a:	jge    0x420773
  42079c:	jbe    0x42074b
  42079e:	retf   
  42079f:	push   ebx
  4207a0:	outs   dx,BYTE PTR ds:[esi]
  4207a1:	leave  
  4207a2:	enter  0x764f,0xd4
  4207a6:	int3   
  4207a7:	dec    ebx
  4207a8:	jo     0x4207be
  4207aa:	add    al,0x74
  4207ac:	xor    al,0xb1
  4207ae:	(bad)  
  4207af:	psllq  mm7,QWORD PTR [ecx-0x3d]
  4207b3:	mov    ebp,0xffc5862f
  4207b8:	mov    esi,0x1ebeff4
  4207bd:	outs   dx,BYTE PTR ds:[esi]
  4207be:	add    dh,dh
  4207c0:	out    dx,al
  4207c1:	push   es
  4207c2:	mov    ebx,0xe806b38b
  4207c7:	rcl    BYTE PTR [ecx],1
  4207c9:	scas   eax,DWORD PTR es:[edi]
  4207ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207cb:	sar    esp,1
  4207cd:	push   es
  4207ce:	push   cs
  4207cf:	lock and al,0x19
  4207d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207d3:	add    esi,DWORD PTR [eax+0x47]
  4207d6:	jb     0x4207d4
  4207d8:	jnp    0x420819
  4207da:	(bad)  
  4207db:	mov    al,ds:0x5ded3bb6
  4207e0:	repnz clc 
  4207e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207e3:	or     BYTE PTR [ebx+esi*4-0x1b],0x84
  4207e8:	add    BYTE PTR [eax],al
  4207ea:	add    cl,bh
  4207ec:	ror    BYTE PTR [esi+0x3506fcc5],cl
  4207f2:	dec    ecx
  4207f3:	loope  0x42082b
  4207f5:	fadd   st,st(3)
  4207f7:	in     al,dx
  4207f8:	fcomp  QWORD PTR [edi*2+0x4613dfb3]
  4207ff:	in     al,dx
  420800:	push   es
  420801:	aas    
  420802:	pop    edx
  420803:	aad    0x3b
  420805:	out    0xdb,al
  420807:	xchg   esp,eax
  420808:	jbe    0x420833
  42080a:	add    al,0x1d
  42080c:	cmp    al,0xfb
  42080e:	adc    esp,ebp
  420810:	(bad)  
  420811:	out    0x84,al
  420813:	mov    al,0xa
  420815:	sbb    eax,0xe708b25c
  42081a:	add    edi,DWORD PTR [edx+0x44]
  42081d:	test   eax,0x692a6baf
  420822:	pop    eax
  420823:	int3   
  420824:	xlat   BYTE PTR ds:[ebx]
  420825:	mov    ebp,0xe7059e88
  42082a:	add    ebx,DWORD PTR [esi]
  42082c:	mov    cl,0xe6
  42082e:	mov    cl,0x7f
  420830:	adc    DWORD PTR [ebx],edx
  420832:	repnz mov ah,0x6
  420835:	push   0x40
  420837:	clc    
  420838:	mov    DWORD PTR [edi+edi*8-0x900724c],esp
  42083f:	mov    eax,0xaa2fc77c
  420844:	mov    es,WORD PTR [edx-0xf]
  420847:	leave  
  420848:	sar    DWORD PTR [ebx+0x6c],0x71
  42084c:	mov    ebx,0xe8ff
  420851:	add    al,dh
  420853:	(bad)  
  420854:	out    0x36,eax
  420856:	xchg   esi,eax
  420857:	cmp    edi,esp
  420859:	xchg   ebx,eax
  42085a:	lock mov al,0x27
  42085d:	ins    BYTE PTR es:[edi],dx
  42085e:	fs push ebx
  420860:	dec    edi
  420861:	add    edi,ecx
  420863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420864:	(bad)  
  420865:	call   0x34cceba0
  42086a:	fist   WORD PTR [eax+0x6f07985]
  420870:	add    BYTE PTR [eax],bh
  420872:	lahf   
  420873:	xchg   ebp,eax
  420874:	pop    ds
  420875:	jmp    0xc73e826a
  42087a:	lock push es
  42087c:	push   0xffffffe8
  42087e:	addr16 inc ebx
  420880:	out    0x5b,eax
  420882:	(bad)  
  420883:	cmp    bh,ah
  420885:	fiadd  WORD PTR [ebx+0x4fe86952]
  42088b:	inc    ebx
  42088c:	mov    esi,0x8022c08a
  420891:	or     esi,edi
  420893:	push   es
  420894:	or     eax,0xc10f3056
  420899:	jo     0x42090d
  42089b:	and    al,0xfe
  42089d:	call   0x6240b592
  4208a2:	xor    esp,DWORD PTR [edx]
  4208a4:	ins    BYTE PTR es:[edi],dx
  4208a5:	or     ebp,edi
  4208a7:	push   es
  4208a8:	or     eax,0xfeafd89e
  4208ad:	jno    0x4208e2
  4208af:	jns    0x420891
  4208b1:	stc    
  4208b2:	sbb    dl,bl
  4208b4:	popa   
  4208b5:	jmp    0xf04208ba
  4208ba:	or     esi,DWORD PTR [ebp-0x40c4e600]
  4208c0:	pop    edi
  4208c1:	jecxz  0x42084a
  4208c3:	out    0x1,al
  4208c5:	dec    edx
  4208c6:	push   es
  4208c7:	xchg   esi,eax
  4208c9:	cmp    ebp,0x695a04be
  4208cf:	xchg   esp,ebp
  4208d1:	mov    esi,DWORD PTR [edi-0x45]
  4208d4:	out    dx,al
  4208d5:	dec    ebx
  4208d6:	push   es
  4208d7:	add    BYTE PTR [edi+0x70],dl
  4208da:	push   es
  4208db:	dec    edi
  4208dc:	dec    DWORD PTR [edi+0xa]
  4208df:	push   ss
  4208e0:	inc    eax
  4208e1:	sbb    al,BYTE PTR [ebx+0x47970cc0]
  4208e7:	dec    eax
  4208e8:	push   eax
  4208e9:	jo     0x4208ed
  4208eb:	test   DWORD PTR [ebx],edi
  4208ed:	mov    ch,0xbf
  4208ef:	inc    edi
  4208f0:	add    al,0x81
  4208f2:	stc    
  4208f3:	in     al,0x25
  4208f5:	sbb    eax,ecx
  4208f7:	sti    
  4208f8:	mov    ecx,DWORD PTR [esi+eax*8-0x43250004]
  4208ff:	cmp    DWORD PTR [eax],esi
  420901:	mov    esp,0x988fc45
  420906:	dec    edi
  420907:	data16 adc BYTE PTR [edi],dh
  42090a:	mov    ecx,0x5da00c4
  42090f:	push   eax
  420910:	lea    ebx,[ecx-0x7d]
  420913:	cld    
  420914:	dec    edx
  420916:	jne    0x420913
  420918:	xlat   BYTE PTR ds:[ebx]
  420919:	repnz add al,0xfd
  42091c:	inc    DWORD PTR [eax]
  42091e:	add    BYTE PTR [eax],al
  420920:	call   0x5:0x9ad882be
  420927:	push   eax
  420928:	pop    ss
  420929:	xchg   BYTE PTR [eax+eax*1-0xaffa76],cl
  420930:	int    0x85
  420932:	rcr    BYTE PTR [eax],0x25
  420935:	mov    eax,ebp
  420937:	add    esi,ebx
  420939:	das    
  42093a:	add    BYTE PTR [ebx+0xc36d],cl
  420940:	repz lahf 
  420942:	ja     0x4208c9
  420944:	inc    edi
  420945:	add    BYTE PTR cs:[eax],al
  420948:	ret    
  420949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42094a:	dec    eax
  42094b:	out    0x53,eax
  42094d:	add    BYTE PTR cs:[eax],al
  420950:	dec    esp
  420951:	fsincos 
  420953:	add    eax,0x85772ff3
  420958:	repz sub DWORD PTR [eax],eax
  42095b:	add    BYTE PTR [ebx-0xf088226],ah
  420961:	das    
  420962:	add    BYTE PTR [eax+0x1b],dl
  420965:	dec    eax
  420966:	(bad)  
  420967:	push   ebx
  420969:	mov    ds:0x2fed137d,al
  42096e:	add    BYTE PTR [eax+0x78],dl
  420971:	ins    BYTE PTR es:[edi],dx
  420972:	pop    eax
  420973:	xchg   cl,dh
  420975:	das    
  420976:	add    BYTE PTR [ebp+0x4ffc],bh
  42097c:	mov    DWORD PTR [esi],ebp
  42097e:	jns    0x420944
  420980:	(bad)  [ebx+eiz*8+0xff]
  420987:	in     al,0x29
  420989:	lea    edi,[edi-0x790fb14e]
  42098f:	cs push 0xffffffd6
  420992:	(bad)  
  420993:	jns    0x4209fe
  420995:	pop    eax
  420996:	xchg   DWORD PTR [edx+0x2e],edx
  420999:	add    BYTE PTR ds:0x42f96e84,cl
  42099f:	mov    bh,0xe9
  4209a1:	jp     0x420923
  4209a3:	xchg   ebp,eax
  4209a4:	das    
  4209a5:	add    BYTE PTR [eax],al
  4209a7:	js     0x420949
  4209a9:	in     al,0x7
  4209ab:	repz sub eax,0x2f89807b
  4209b1:	add    BYTE PTR [eax],al
  4209b3:	js     0x4209bc
  4209b5:	sub    bh,BYTE PTR [ebx+esi*4]
  4209b8:	shl    BYTE PTR [ecx-0x29],cl
  4209bb:	ror    BYTE PTR [esi],1
  4209bd:	mov    ebp,0xe2c269ae
  4209c2:	mov    bl,0xda
  4209c4:	cli    
  4209c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209c6:	js     0x420983
  4209c8:	retf   0x3e71
  4209cb:	push   esp
  4209cc:	shl    BYTE PTR [esi],cl
  4209ce:	inc    ebp
  4209cf:	push   edi
  4209d0:	mov    WORD PTR [ebx-0x29058439],fs
  4209d6:	in     eax,dx
  4209d7:	add    al,0x7
  4209d9:	jo     0x42095d
  4209db:	xor    BYTE PTR [edi],al
  4209dd:	out    0x3,eax
  4209df:	leave  
  4209e0:	push   ss
  4209e1:	pop    esp
  4209e2:	sub    BYTE PTR [esi+eax*1-0x763cfc19],0x69
  4209ea:	cmp    eax,DWORD PTR [eax]
  4209ec:	add    BYTE PTR [eax],al
  4209ee:	sbb    al,0x38
  4209f0:	out    0xb3,al
  4209f2:	pop    ss
  4209f3:	push   eax
  4209f4:	jle    0x4209f7
  4209f6:	or     al,0x38
  4209f8:	out    0x76,al
  4209fa:	jno    0x420993
  4209fc:	out    0x3,al
  4209fe:	repz (bad) 
  420a00:	arpl   WORD PTR [ecx+0x3e7071c],ax
  420a06:	inc    ebx
  420a07:	cmp    BYTE PTR [ebp+0x4f1eb081],bl
  420a0d:	add    ah,bl
  420a0f:	aaa    
  420a10:	out    0x76,al
  420a12:	jno    0x4209a8
  420a14:	out    0x3,eax
  420a16:	repz (bad) 
  420a18:	jae    0x4209ab
  420a1a:	test   al,0x5
  420a1c:	out    0x3,eax
  420a1e:	dec    ecx
  420a1f:	pop    es
  420a20:	push   0x3c
  420a22:	mov    bh,0x2e
  420a24:	call   DWORD PTR [ecx-0x52]
  420a27:	aaa    
  420a28:	jno    0x420aa9
  420a2a:	push   esi
  420a2b:	add    eax,0x837403e7
  420a30:	inc    DWORD PTR [edx+esi*8-0x70fcfffa]
  420a37:	mov    WORD PTR [edx+0x6f08f],es
  420a3d:	mov    ecx,0xeae38705
  420a42:	lock push es
  420a44:	push   eax
  420a45:	dec    esi
  420a46:	push   ds
  420a47:	xchg   ebx,eax
  420a49:	cmc    
  420a4a:	dec    eax
  420a4b:	add    edi,edi
  420a4d:	call   0x7bc49642
  420a52:	add    BYTE PTR [eax],al
  420a54:	add    al,dh
  420a56:	push   es
  420a57:	add    BYTE PTR [ecx-0x1508893b],bl
  420a5d:	lock push es
  420a5f:	push   0xffffffe9
  420a61:	jae    0x420aa2
  420a63:	cld    
  420a64:	add    ebx,ebx
  420a66:	xor    al,0xfd
  420a68:	push   cs
  420a69:	stos   BYTE PTR es:[edi],al
  420a6a:	test   ch,cl
  420a6c:	call   0x6ac91161
  420a71:	pop    ds
  420a72:	add    DWORD PTR [eax],eax
  420a74:	jmp    0x64cd09b3
  420a79:	int    0x38
  420a7b:	cld    
  420a7c:	jmp    0xe9c296c1
  420a81:	(bad)  
  420a82:	ss cld 
  420a84:	cmp    DWORD PTR [esi-0x1b5a7fae],ebp
  420a8a:	scas   al,BYTE PTR es:[edi]
  420a8b:	add    ebp,eax
  420a8d:	lock push es
  420a8f:	mov    esp,DWORD PTR [edx+eiz*1+0x35]
  420a93:	cld    
  420a94:	jmp    0xd5f28c39
  420a99:	into   
  420a9a:	ss cld 
  420a9c:	adc    ebp,edi
  420a9e:	xchg   edi,eax
  420aa0:	sahf   
  420aa1:	sbb    BYTE PTR [ebx],ah
  420aa3:	out    dx,al
  420aa4:	xchg   edi,eax
  420aa5:	das    
  420aa6:	jg     0x420a2a
  420aa8:	xor    ecx,0x6
  420aab:	add    BYTE PTR [eax],al
  420aad:	int    0x6c
  420aaf:	test   DWORD PTR [ebx-0x3cd42],eax
  420ab5:	dec    eax
  420ab7:	add    BYTE PTR [eax],al
  420ab9:	add    BYTE PTR [eax],al
  420abb:	add    bh,ah
  420abd:	scas   eax,DWORD PTR es:[edi]
  420abe:	call   0xfd742944
  420ac3:	dec    DWORD PTR [edx+0x1cf8a187]
  420ac9:	retf   
  420aca:	sti    
  420acb:	add    BYTE PTR [edi-0x46],dl
  420ace:	cld    
  420acf:	call   FWORD PTR [edx+0x7a]
  420ad2:	mov    DWORD PTR [ebp-0x4344e],eax
  420ad8:	mov    dl,0x94
  420ada:	sbb    al,BYTE PTR [eax]
  420adc:	pop    edx
  420add:	xchg   DWORD PTR [ecx+0xc],edi
  420ae0:	pop    edx
  420ae1:	inc    esi
  420ae2:	or     eax,0x873e878b
  420ae7:	dec    ebp
  420ae8:	push   edx
  420ae9:	mov    ebp,0xcafcf881
  420aee:	sti    
  420aef:	call   0x3e35fb
  420af4:	jecxz  0x420abd
  420af6:	add    al,0x0
  420af8:	ja     0x420aa9
  420afa:	call   0x7e040182
  420aff:	in     al,dx
  420b00:	xchg   BYTE PTR [eax],al
  420b02:	add    BYTE PTR [eax],al
  420b04:	lds    edx,FWORD PTR [edi+0xafa24b8]
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	mov    dl,0x9d
  420b0e:	ret    
  420b0f:	(bad)  
  420b10:	lods   eax,DWORD PTR ds:[esi]
  420b11:	lea    esp,[eax+0x24]
  420b14:	loop   0x420b1f
  420b16:	mov    DWORD PTR [esi+eiz*8-0x25fffecd],eax
  420b1d:	pop    ecx
  420b1e:	mov    DWORD PTR [eax+eax*1+0x0],eax
  420b22:	add    BYTE PTR [esi-0x43a417fb],dh
  420b28:	or     DWORD PTR [eax],eax
  420b2a:	mov    esi,ebx
  420b2c:	jmp    0x0:0x1e9dba0b
  420b33:	jbe    0x420b18
  420b35:	out    0x7,eax
  420b37:	mov    ecx,esi
  420b39:	and    BYTE PTR [eax],al
  420b3b:	repz sbb al,0x8d
  420b3e:	loop   0x420b6e
  420b40:	bound  eax,QWORD PTR [edi]
  420b42:	add    BYTE PTR [eax+0x7b],bh
  420b45:	in     al,0x3
  420b47:	and    BYTE PTR [esi-0x71],bh
  420b4a:	mov    ah,0x61
  420b4c:	push   ds
  420b4d:	add    BYTE PTR [eax],al
  420b4f:	pop    ebx
  420b50:	xchg   ebp,eax
  420b51:	cs std 
  420b53:	mov    al,fs:0x65e7fc3b
  420b59:	cmc    
  420b5a:	fadd   st,st(0)
  420b5c:	nop
  420b5d:	stos   BYTE PTR es:[edi],al
  420b5e:	adc    esp,DWORD PTR [ebp+0xf73418f]
  420b64:	inc    eax
  420b65:	aad    0x50
  420b67:	cmp    al,0x3a
  420b69:	mov    al,0x11
  420b6b:	mov    bl,0x1f
  420b6d:	std    
  420b6e:	shr    BYTE PTR [ebp-0x1cf470a3],0x47
  420b75:	(bad)  
  420b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b78:	sub    al,0x85
  420b7a:	idiv   edi
  420b7c:	mov    edx,0x89ea87eb
  420b81:	or     ch,bh
  420b83:	jg     0x420b88
  420b85:	sbb    BYTE PTR [ebx+0x74000000],cl
  420b8b:	lea    eax,[ebx]
  420b8d:	add    bl,dh
  420b8f:	out    dx,eax
  420b90:	inc    eax
  420b91:	adc    ah,BYTE PTR [ebx]
  420b93:	cmp    al,0xc0
  420b95:	(bad)  
  420b96:	jns    0x420b7a
  420b98:	out    0x1f,eax
  420b9a:	push   0xffffffad
  420b9c:	outs   dx,BYTE PTR ds:[esi]
  420b9d:	(bad)  
  420b9e:	aam    0x1e
  420ba0:	test   ebx,eax
  420ba2:	jmp    FWORD PTR [ebp+0x7285e03]
  420ba8:	test   eax,0xa6f8f30f
  420bad:	cs mov edi,0xf0e82280
  420bb3:	xlat   BYTE PTR ds:[ebx]
  420bb4:	xor    al,0x91
  420bb6:	pop    edi
  420bb7:	jns    0x420ba0
  420bb9:	add    esi,ebx
  420bbb:	push   ds
  420bbc:	test   BYTE PTR [eax],dh
  420bbe:	xchg   esi,eax
  420bbf:	xor    al,0x69
  420bc1:	cmp    ecx,DWORD PTR [edi-0x5408e345]
  420bc7:	fdivr  DWORD PTR [ecx-0x49231f53]
  420bcd:	inc    edx
  420bce:	add    bl,ch
  420bd0:	push   es
  420bd1:	xlat   BYTE PTR ds:[ebx]
  420bd2:	ret    
  420bd3:	xor    esi,ebx
  420bd5:	mov    bl,0x2
  420bd7:	(bad)  
  420bd8:	out    0xfe,al
  420bda:	xor    esi,DWORD PTR [ebp-0x9176f0c]
  420be0:	out    dx,al
  420be1:	fmul   QWORD PTR [edi-0x45]
  420be4:	in     eax,0x86
  420be6:	cmp    al,0x1b
  420be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420be9:	in     al,dx
  420bea:	je     0x420bfa
  420bec:	xchg   ecx,eax
  420bed:	or     eax,DWORD PTR [eax]
  420bef:	add    BYTE PTR [eax],al
  420bf1:	ss mov ebx,0x8c7817ca
  420bf7:	and    al,0x4
  420bf9:	repz push es
  420bfb:	xchg   edi,eax
  420bfc:	inc    edx
  420bfd:	add    edi,esi
  420bff:	aam    0xc3
  420c01:	adc    al,0x81
  420c03:	stos   BYTE PTR es:[edi],al
  420c04:	out    0xec,eax
  420c06:	jge    0x420c6d
  420c08:	push   ecx
  420c09:	add    eax,0x3084e634
  420c0e:	add    edx,DWORD PTR [edi-0x57306afd]
  420c14:	adc    bl,dh
  420c16:	clc    
  420c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c18:	sub    eax,0xe8327fdf
  420c1d:	lock xlat BYTE PTR ds:[ebx]
  420c1f:	adc    al,0x8f
  420c21:	test   BYTE PTR [eax-0x1],bl
  420c24:	out    0xf0,eax
  420c26:	push   es
  420c27:	call   0xfc74205b
  420c2c:	push   0xffffffff
  420c2e:	xor    dh,BYTE PTR [ebx-0x31]
  420c31:	mov    edi,0x5d3a504e
  420c36:	pop    ss
  420c37:	push   esi
  420c38:	cmp    DWORD PTR [edx],esi
  420c3a:	mov    eax,0xd6c7c923
  420c3f:	cld    
  420c40:	aam    0x60
  420c42:	adc    eax,0x468fe940
  420c47:	jge    0x420c20
  420c49:	jne    0x420c4a
  420c4b:	das    
  420c4c:	and    DWORD PTR [eax+0x6fe67332],ebx
  420c52:	cmp    edx,DWORD PTR [ebx]
  420c54:	aam    0x0
  420c56:	add    BYTE PTR [eax],al
  420c58:	stc    
  420c59:	jle    0x420c71
  420c5b:	cdq    
  420c5c:	lock aam 0x58
  420c5f:	sub    ebp,ebx
  420c61:	push   es
  420c62:	xor    ch,BYTE PTR [ecx]
  420c64:	push   es
  420c65:	cmp    edx,DWORD PTR [edx+0x62]
  420c68:	add    esi,DWORD PTR [ebp+0x6eee5eb]
  420c6e:	add    BYTE PTR [edx-0x179825e6],bh
  420c74:	icebp  
  420c75:	push   es
  420c76:	add    BYTE PTR [esp+esi*2+0x2f],ah
  420c7a:	cli    
  420c7b:	push   cs
  420c7c:	mov    dl,0xc3
  420c7e:	cld    
  420c7f:	jl     0x420c69
  420c81:	xor    DWORD PTR [edx],edx
  420c83:	and    eax,0x61ffc6fe
  420c88:	scas   eax,DWORD PTR es:[edi]
  420c89:	mov    al,bl
  420c8b:	outs   dx,DWORD PTR ds:[esi]
  420c8c:	pop    ss
  420c8d:	idiv   ah
  420c8f:	sbb    bh,BYTE PTR [ecx+0x44a5b532]
  420c95:	repz jmp DWORD PTR [ecx-0x7e]
  420c99:	jb     0x420d06
  420c9b:	sub    edi,ebp
  420c9d:	jge    0x420c21
  420c9f:	add    BYTE PTR [esi-0x500040f],dh
  420ca5:	cmp    DWORD PTR [edi-0x5118718],0xffffffff
  420cac:	dec    edi
  420cad:	(bad)  
  420cae:	jo     0x420cc2
  420cb0:	dec    ecx
  420cb1:	ror    BYTE PTR [eax],0x47
  420cb4:	dec    ecx
  420cb5:	enter  0x7244,0x63
  420cb9:	cmp    edi,DWORD PTR [edi+ebx*2-0x2c000000]
  420cc0:	push   ebx
  420cc1:	(bad)
  420cc4:	push   es
  420cc5:	inc    DWORD PTR [bp-0x78a0]
  420cca:	xchg   DWORD PTR [edx+0x62],edx
  420ccd:	cmp    al,0x0
  420ccf:	jno    0x420cb2
  420cd1:	push   ecx
  420cd2:	mov    esp,DWORD PTR [esi]
  420cd4:	test   eax,ebp
  420cd6:	hlt    
  420cd7:	lea    eax,[esi]
  420cd9:	add    BYTE PTR [esi-0x53],dl
  420cdc:	pop    esi
  420cdd:	mov    BYTE PTR [ecx],al
  420cdf:	pop    edx
  420ce0:	push   es
  420ce1:	dec    edi
  420ce2:	call   0x3cbd80
  420ce7:	adc    eax,0x9a116019
  420cec:	push   es
  420ced:	test   DWORD PTR [ebx+0x4e],eax
  420cf0:	mov    esi,esp
  420cf2:	call   FWORD PTR [edi-0x1]
  420cf5:	xor    eax,eax
  420cf7:	jecxz  0x420d37
  420cf9:	(bad)  
  420cfa:	call   FWORD PTR [edx]
  420cfc:	cmp    esi,edx
  420cfe:	push   esi
  420cff:	(bad)  
  420d00:	dec    eax
  420d01:	adc    BYTE PTR [eax-0x7e],0x15
  420d05:	xchg   ebp,eax
  420d06:	mov    BYTE PTR [esi+0x4c28fdd],cl
  420d0c:	repnz mov DWORD PTR [ebp-0x72],eax
  420d10:	push   ebp
  420d11:	sti    
  420d12:	adc    eax,0x400eea
  420d17:	add    DWORD PTR [ebp+0x4],0x3b
  420d1b:	repz popa 
  420d1d:	mov    bh,0xd4
  420d1f:	pop    ecx
  420d20:	pop    ds
  420d21:	pop    DWORD PTR [edx+0x0]
  420d24:	add    BYTE PTR [eax],al
  420d26:	ja     0x420d37
  420d28:	lods   al,BYTE PTR ds:[esi]
  420d29:	adc    DWORD PTR [edx-0x49],edi
  420d2c:	xchg   edi,esp
  420d2e:	inc    ecx
  420d2f:	pop    esi
  420d30:	cmp    eax,0x87ea76fc
  420d35:	dec    edi
  420d36:	and    eax,0x1bbd0316
  420d3b:	(bad)  
  420d3c:	sar    bh,0x45
  420d3f:	cdq    
  420d40:	push   ss
  420d41:	mov    eax,0x8703e001
  420d46:	xor    BYTE PTR [ecx+edi*8],bh
  420d49:	lds    ebx,FWORD PTR [edi]
  420d4b:	ret    
  420d4c:	test   eax,0x87e27ffe
  420d51:	dec    edi
  420d52:	sbb    edi,DWORD PTR [esi]
  420d54:	call   0xcc19e8d0
  420d59:	shl    DWORD PTR [ebp-0x30],0x8e
  420d5d:	inc    edx
  420d5e:	ja     0x420dcf
  420d60:	rcl    BYTE PTR [esp+eiz*2+0x3a],cl
  420d64:	fmul   DWORD PTR [esi]
  420d66:	mov    bl,0x1f
  420d68:	mov    eax,DWORD PTR [eax-0x1]
  420d6b:	add    al,0x46
  420d6d:	jae    0x420de8
  420d6f:	inc    ebp
  420d70:	add    ecx,DWORD PTR [ebx+0x67d3abae]
  420d76:	adc    DWORD PTR [esi+0x4a4b97bb],edi
  420d7c:	ds std 
  420d7e:	sub    al,0xaa
  420d80:	mov    BYTE PTR [ebx-0x7117783d],0x43
  420d87:	sbb    al,0xd2
  420d89:	imul   eax,DWORD PTR [eax],0x98ef0000
  420d8f:	sar    ah,cl
  420d91:	out    0x37,al
  420d93:	adc    BYTE PTR [eax-0xd],al
  420d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d97:	add    BYTE PTR [ecx],bh
  420d99:	xor    eax,0x9887f606
  420d9e:	xor    ebp,ebx
  420da0:	ds inc esi
  420da2:	fnstcw WORD PTR [edx+ebp*4]
  420da5:	repnz (bad) 
  420da7:	int    0x18
  420da9:	jae    0x420dc1
  420dab:	daa    
  420dac:	add    al,0x1a
  420dae:	dec    ecx
  420daf:	in     eax,dx
  420db0:	xchg   DWORD PTR [eax+esi*1],esi
  420db3:	mov    ch,0x3e
  420db5:	ins    DWORD PTR es:[edi],dx
  420db6:	(bad)  
  420db7:	(bad)  
  420db8:	or     BYTE PTR [ebx],cl
  420dba:	push   es
  420dbb:	out    0x3,eax
  420dbd:	sbb    eax,0xb51c297e
  420dc2:	retf   0x391
  420dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dc6:	sbb    bh,BYTE PTR [edi+0x17]
  420dc9:	xor    eax,DWORD PTR [edi]
  420dcb:	jo     0x420d95
  420dcd:	mov    al,ds:0x770ea4ec
  420dd2:	mov    ch,0xe7
  420dd4:	add    esi,ebx
  420dd6:	jnp    0x420d83
  420dd8:	pop    ebx
  420dd9:	in     al,dx
  420dda:	(bad)  
  420ddb:	out    0xa9,al
  420ddd:	in     al,dx
  420dde:	(bad)  
  420ddf:	outs   dx,DWORD PTR ds:[esi]
  420de0:	mov    dl,0x10
  420de2:	jle    0x420dbd
  420de4:	jmp    0x420e4d
  420de6:	pop    eax
  420de7:	ror    BYTE PTR [ecx],0x5e
  420dea:	mov    edx,0xe2b38c3a
  420def:	cmp    eax,0x56
  420df4:	jnp    0x420db2
  420df6:	add    dl,ah
  420df8:	mov    ch,0x2f
  420dfa:	mov    bl,0x37
  420dfc:	jne    0x420dc2
  420dfe:	(bad)  
  420dff:	ds loope 0x420e7c
  420e02:	test   bl,0x2c
  420e05:	in     eax,dx
  420e06:	sub    al,0xb7
  420e08:	add    edi,edx
  420e0a:	mov    ah,0xd5
  420e0c:	imul   eax,esp,0xca69d3c6
  420e12:	not    dl
  420e14:	btc    edi,0xfc
  420e18:	fld    DWORD PTR [ebx+ebp*8+0x11df0e9]
  420e1f:	sbb    ch,BYTE PTR [edi+0x78d57232]
  420e25:	(bad)  
  420e26:	sbb    edi,DWORD PTR [edi]
  420e28:	es adc eax,0x2fb0f440
  420e2e:	aaa    
  420e2f:	cmp    dl,BYTE PTR [ebx]
  420e31:	add    al,BYTE PTR [esp+edx*8+0x620006f1]
  420e38:	mov    ah,0x1f
  420e3a:	bound  esi,QWORD PTR gs:[eax+0x7a86601]
  420e41:	pop    es
  420e42:	mov    BYTE PTR [edx],ch
  420e44:	scas   eax,DWORD PTR es:[edi]
  420e45:	add    dh,BYTE PTR [esi+0x4061f6a9]
  420e4b:	mov    ebp,0x5133c669
  420e50:	repnz mov edx,0x2bd76a05
  420e56:	sub    BYTE PTR [ecx-0x5000000],0xbf
  420e5d:	xchg   BYTE PTR [edx],ch
  420e5f:	jnp    0x420e88
  420e61:	or     al,0x9d
  420e63:	mov    ch,0x32
  420e65:	jg     0x420e43
  420e67:	clc    
  420e68:	das    
  420e69:	ret    0x2bac
  420e6c:	xor    DWORD PTR ds:0xfc2fd364,ecx
  420e72:	jmp    0x414d7adc
  420e77:	push   cs
  420e78:	xor    eax,ebp
  420e7a:	lods   al,BYTE PTR ds:[esi]
  420e7b:	or     esi,DWORD PTR [eax]
  420e7d:	in     al,0xa5
  420e7f:	mov    ah,0x31
  420e81:	cld    
  420e82:	xchg   ebx,eax
  420e83:	loopne 0x420e23
  420e85:	xchg   edi,eax
  420e86:	pop    ecx
  420e87:	xor    ch,BYTE PTR [edi]
  420e89:	mov    ebp,DWORD PTR [edx-0x101840dc]
  420e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e90:	xor    esp,edi
  420e92:	add    BYTE PTR [edi+0xdfd92b7],bl
  420e98:	repnz in al,0xa1
  420e9b:	add    esi,edx
  420e9d:	sti    
  420e9e:	mov    ecx,DWORD PTR [edx+0xafffde8]
  420ea4:	jl     0x420ee5
  420ea6:	dec    esp
  420ea7:	xchg   ebx,eax
  420ea8:	fdiv   st(5),st
  420eaa:	(bad)  
  420eab:	fidivr DWORD PTR [edi-0x3e]
  420eae:	(bad)  
  420eaf:	retf   0x400a
  420eb2:	dec    ecx
  420eb3:	pop    ss
  420eb4:	repnz fs add bl,bl
  420eb8:	or     al,BYTE PTR [eax]
  420eba:	lea    edx,[edi+0x35]
  420ebd:	clc    
  420ebe:	inc    DWORD PTR [eax]
  420ec0:	add    BYTE PTR [eax],al
  420ec2:	lea    ebx,[edx-0x77]
  420ec5:	inc    ebx
  420ec6:	cli    
  420ec7:	push   edx
  420ec8:	in     al,0xe7
  420eca:	dec    ecx
  420ecb:	in     al,dx
  420ecc:	sti    
  420ecd:	push   0xffffff9b
  420ecf:	jge    0x420f12
  420ed1:	test   dl,bl
  420ed3:	pop    edx
  420ed4:	push   ds
  420ed5:	mov    cl,0x12
  420ed7:	adc    ch,al
  420ed9:	(bad)  
  420eda:	pop    edx
  420edb:	in     al,dx
  420edc:	sti    
  420edd:	(bad)  
  420ede:	xlat   BYTE PTR ds:[ebx]
  420edf:	jle    0x420f2d
  420ee1:	xor    ecx,DWORD PTR ds:0x5e586453
  420ee7:	inc    edi
  420ee8:	cld    
  420ee9:	(bad)  
  420eea:	addr16 push edx
  420eec:	or     eax,0x7f815a40
  420ef1:	pusha  
  420ef2:	dec    ebx
  420ef3:	or     al,BYTE PTR [eax]
  420ef5:	cmp    eax,DWORD PTR ds:0xc0b83fb
  420efb:	jmp    0x420ef8
  420efd:	push   edi
  420efe:	std    
  420eff:	adc    al,0xe8
  420f01:	adc    al,0x8a
  420f03:	or     al,BYTE PTR [edi+0x70f351f0]
  420f09:	dec    ecx
  420f0a:	fs jmp 0x420f1e
  420f0d:	mov    al,0xf3
  420f0f:	das    
  420f10:	sar    bh,0x6b
  420f13:	mov    eax,ds:0x2014fed4
  420f18:	test   esp,0xfea66f87
  420f1e:	call   0x10f3:0xe6fcd21e
  420f25:	inc    eax
  420f26:	add    BYTE PTR [eax],al
  420f28:	add    bl,dh
  420f2a:	mov    dh,0x84
  420f2c:	pop    ebx
  420f2d:	repnz pop ds
  420f2f:	add    BYTE PTR [ecx],bh
  420f31:	lods   al,BYTE PTR ds:[esi]
  420f32:	retf   
  420f33:	sbb    al,0x50
  420f35:	fcom   QWORD PTR [eax+0x1fd4fecf]
  420f3b:	cmp    DWORD PTR [edx],edx
  420f3d:	ror    DWORD PTR [edi-0x40],cl
  420f40:	(bad)  
  420f41:	jnp    0x420ee3
  420f43:	(bad)  
  420f45:	mov    esp,0x3fc4fd1f
  420f4a:	sbb    al,0x3e
  420f4c:	inc    edx
  420f4d:	test   al,0x1e
  420f4f:	into   
  420f50:	push   esp
  420f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f52:	sub    al,al
  420f54:	adc    dh,BYTE PTR [ebx]
  420f56:	and    BYTE PTR [edx-0x261b67be],cl
  420f5c:	(bad)  
  420f5d:	mov    cl,0x23
  420f5f:	add    BYTE PTR [ecx+0x78],dl
  420f62:	push   edx
  420f63:	sbb    al,0xf
  420f65:	xor    esp,DWORD PTR [eax]
  420f67:	into   
  420f68:	mov    BYTE PTR [ebx-0x3be43e48],al
  420f6e:	mov    ds:0x6ff07343,al
  420f73:	cmp    eax,edx
  420f75:	push   0x16890465
  420f7a:	adc    BYTE PTR ds:0x43a2f340,0x73
  420f81:	lock (bad) 
  420f83:	cmp    esp,edx
  420f85:	push   0x3b80fc65
  420f8a:	push   es
  420f8b:	es mov al,0x0
  420f8e:	add    BYTE PTR [eax],al
  420f90:	not    esi
  420f92:	sbb    eax,0xa7178f11
  420f97:	add    ebp,DWORD PTR [edx-0x3c]
  420f9a:	repnz adc BYTE PTR [edx+esi*4-0x17],0xd3
  420fa0:	andnps xmm6,XMMWORD PTR [ecx-0x3e]
  420fa4:	hlt    
  420fa5:	and    DWORD PTR [esi],0xffffffb0
  420fa8:	not    esi
  420faa:	in     eax,dx
  420fab:	adc    bh,bh
  420fad:	adc    eax,0x57a0427
  420fb2:	fs inc ebx
  420fb4:	pusha  
  420fb5:	or     BYTE PTR [edi],dh
  420fb7:	cmp    eax,edi
  420fb9:	xchg   DWORD PTR [edx-0x20],ecx
  420fbc:	in     al,0x6
  420fbe:	cmp    edi,DWORD PTR [ebp+0x51e857b]
  420fc4:	repz push es
  420fc6:	ins    BYTE PTR es:[edi],dx
  420fc7:	inc    ebx
  420fc8:	inc    eax
  420fc9:	cli    
  420fca:	push   ss
  420fcb:	cmp    edi,DWORD PTR [esi-0x2d]
  420fce:	out    0x3,eax
  420fd0:	repz sub esi,ebx
  420fd3:	and    esi,esp
  420fd5:	(bad)  
  420fd6:	out    0x8e,al
  420fd8:	jbe    0x420fa5
  420fda:	out    0x3,eax
  420fdc:	repz and DWORD PTR [esi+0x7dd6f3af],0x1a857b56
  420fe7:	add    eax,0x436406f3
  420fec:	add    BYTE PTR [edi+esi*4],al
  420fef:	cmp    al,BYTE PTR [ecx]
  420ff1:	push   ebx
  420ff2:	test   bl,0x0
  420ff5:	add    BYTE PTR [eax],al
  420ff7:	sub    DWORD PTR fs:[ebx+eiz*4+0x5d],0x9480e62c
  421000:	mov    bl,0xe9
  421002:	ror    DWORD PTR [edi+0x54],cl
  421005:	jno    0x420f88
  421007:	les    eax,FWORD PTR ds:0x87f0e900
  42100d:	mov    edi,0xff9e4eb5
  421012:	mov    eax,0xfa1018e9
  421017:	xor    BYTE PTR [ebx+edi*1],ch
  42101a:	jmp    0x421013
  42101c:	push   es
  42101d:	add    BYTE PTR [ebp-0x6d005f02],dl
  421023:	lock mov al,ds:0x8383fe11
  421029:	(bad)  
  42102a:	call   0x19543a1f
  42102f:	ffree  st(6)
  421031:	jmp    DWORD PTR [edi+0x31]
  421034:	mov    al,0xfe
  421036:	call   0x9e0b2f2b
  42103b:	sbb    ch,BYTE PTR [ebx]
  42103d:	pop    esp
  42103e:	das    
  42103f:	mov    dh,0x45
  421041:	add    ebp,ecx
  421043:	jg     0x421009
  421045:	jae    0xea3e3bba
  42104b:	cmp    al,0x6c
  42104d:	jae    0x421083
  42104f:	outs   dx,DWORD PTR ds:[esi]
  421050:	scas   eax,DWORD PTR es:[edi]
  421051:	and    ebp,ebp
  421053:	lock aad 0xc
  421056:	jne    0x421086
  421058:	sar    ch,cl
  42105a:	mov    ds:0xea000000,al
  42105f:	je     0x421050
  421061:	retf   
  421062:	test   BYTE PTR ss:[ebx],bl
  421065:	imul   DWORD PTR [edx+0x3d493bce]
  42106b:	into   
  42106c:	cmp    ecx,DWORD PTR [eax+0x41]
  42106f:	jmp    0xa835aaf
  421074:	cmp    al,0x8c
  421076:	mov    ds:0xd37883ba,al
  42107b:	sub    edi,esp
  42107d:	jmp    0x78c6100f
  421082:	mov    ah,0x2b
  421084:	cld    
  421085:	add    BYTE PTR [edx+0x5c],bl
  421088:	add    BYTE PTR [ebx],dh
  42108a:	sbb    bl,dl
  42108c:	dec    BYTE PTR [edx+0x123d7b08]
  421092:	mov    cl,0x36
  421094:	adc    BYTE PTR [ecx+0x2b8],0x7f
  42109b:	add    eax,DWORD PTR [ecx+edx*4+0x2a9]
  4210a2:	jg     0x4210cf
  4210a4:	das    
  4210a5:	shl    cl,0x4
  4210a8:	xchg   edx,eax
  4210aa:	add    BYTE PTR [edi+0xd],0xeb
  4210ae:	and    ebp,DWORD PTR [ebx+0x70aa08d]
  4210b4:	add    BYTE PTR [ebp-0x1a],dh
  4210b7:	stos   BYTE PTR es:[edi],al
  4210b8:	lea    esp,[ecx+0x750006da]
  4210be:	into   
  4210bf:	xor    edi,DWORD PTR [ebx+ebp*8-0x38000000]
  4210c6:	jnp    0x421086
  4210c8:	mov    BYTE PTR [ebx],bl
  4210ca:	adc    ebp,DWORD PTR [edi]
  4210cc:	ror    BYTE PTR [esi+0x55],0xfd
  4210d0:	jae    0x42109d
  4210d2:	inc    esi
  4210d3:	adc    BYTE PTR [ecx-0x38],0x5a
  4210d7:	inc    DWORD PTR [edx+0x51840462]
  4210dd:	mov    ds,WORD PTR [edx-0x1]
  4210e0:	adc    BYTE PTR [edx+0x16],0x84
  4210e4:	push   ecx
  4210e5:	call   0x802a:0x4282ff5a
  4210ec:	push   ecx
  4210ed:	stos   DWORD PTR es:[edi],eax
  4210ee:	pop    edx
  4210ef:	inc    DWORD PTR [edx+0x4c1fe52]
  4210f5:	mov    bh,BYTE PTR [ecx]
  4210f7:	xchg   esp,ebp
  4210f9:	(bad)  [ecx]
  4210fb:	cmc    
  4210fc:	xor    DWORD PTR [esi-0xc000347],0xfefcd31f
  421106:	pop    ebx
  421107:	adc    DWORD PTR [eax-0xd],eax
  42110a:	(bad)  
  42110b:	aaa    
  42110c:	adc    ah,bh
  42110e:	push   ebx
  42110f:	sar    bh,0x77
  421112:	loopne 0x4210c0
  421114:	bound  esp,QWORD PTR [esi-0x74]
  421117:	fadd   QWORD PTR [ebx]
  421119:	ret    0x9c95
  42111c:	mov    dh,BYTE PTR [edi-0x76b147bd]
  421122:	sbb    eax,0xf7fefcd0
  421127:	adc    eax,DWORD PTR [eax+0x0]
  42112a:	add    BYTE PTR [eax],al
  42112c:	repz call 0x23b4:0x9cb77340
  421134:	mul    DWORD PTR [ecx-0x53]
  421137:	inc    edx
  421138:	mov    DWORD PTR [edi],ebx
  42113a:	test   DWORD PTR [ebx+0x17],eax
  42113d:	xor    al,0xd0
  42113f:	addr16 jbe 0x421138
  421142:	in     al,dx
  421143:	es retf 
  421145:	sahf   
  421146:	jne    0x421145
  421148:	aam    0xc5
  42114a:	(bad)  
  42114b:	mov    dh,BYTE PTR [edi]
  42114d:	cld    
  42114e:	pop    es
  42114f:	mov    esi,DWORD PTR [edi]
  421151:	add    al,0xb0
  421153:	out    0xbf,eax
  421155:	scas   al,BYTE PTR es:[edi]
  421156:	xor    eax,0xae5f6efc
  42115b:	push   ds
  42115c:	inc    ebx
  42115d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42115e:	(bad)  [edi-0x6cd7dfd0]
  421164:	cwde   
  421165:	nop
  421166:	xor    al,0x83
  421168:	mov    bl,0x13
  42116a:	or     eax,DWORD PTR [ecx+0x40643ffe]
  421170:	repz and ebp,DWORD PTR [ecx]
  421173:	push   es
  421174:	or     DWORD PTR [eax],esp
  421176:	mov    eax,eax
  421178:	mov    esi,DWORD PTR [ecx+0x66cfc36]
  42117e:	ret    0x518a
  421181:	retf   
  421182:	sub    DWORD PTR [ebx+0x3eeae2b0],ecx
  421188:	repnz iretw 
  42118b:	ret    
  42118c:	dec    esp
  42118d:	jl     0x421126
  42118f:	out    0x0,eax
  421191:	add    BYTE PTR [eax],al
  421193:	sbb    ebx,eax
  421195:	add    cl,BYTE PTR [ebp-0xc688214]
  42119b:	or     ebx,eax
  42119d:	dec    BYTE PTR [esp+edi*4-0x3f7a8dfe]
  4211a4:	pop    es
  4211a5:	out    0x3,eax
  4211a7:	xor    DWORD PTR [edx],eax
  4211a9:	out    0xd0,eax
  4211ab:	imul   ebx,DWORD PTR [edx],0x69
  4211ae:	sub    BYTE PTR [ebp+edi*2+0x5ab98927],ah
  4211b5:	nop
  4211b6:	adc    esi,DWORD PTR [ebx+edi*4-0xe]
  4211ba:	mov    BYTE PTR [edx+eiz*8+0x1b398898],ah
  4211c1:	aaa    
  4211c2:	lea    esi,[ecx]
  4211c4:	pop    ds
  4211c5:	into   
  4211c6:	add    BYTE PTR [ecx+ebp*1-0x2b0d562b],cl
  4211cd:	int    0x73
  4211cf:	and    BYTE PTR [esi],al
  4211d1:	out    0x3,eax
  4211d3:	(bad)  
  4211d4:	adc    ah,BYTE PTR [edi]
  4211d6:	adc    BYTE PTR [ebx],dh
  4211d8:	pop    es
  4211d9:	inc    ecx
  4211da:	add    al,0xb6
  4211dc:	adc    dh,BYTE PTR [edi+0x6c073312]
  4211e2:	inc    ebx
  4211e3:	and    ch,bh
  4211e5:	mov    DWORD PTR ss:[ecx],esi
  4211e8:	pop    ds
  4211e9:	ss sub al,0xd0
  4211ec:	ror    BYTE PTR [ebp+0x1c44b536],cl
  4211f2:	iret   
  4211f3:	jnp    0x42122b
  4211f5:	jno    0x4211b4
  4211f7:	add    BYTE PTR [eax],al
  4211f9:	add    ah,ch
  4211fb:	daa    
  4211fc:	(bad)  
  4211fd:	cmp    BYTE PTR [ecx+ebp*1-0x4],dh
  421201:	jmp    0xe841927f
  421206:	lock push es
  421208:	dec    edi
  421209:	sar    DWORD PTR [edi+edi*2-0x7],cl
  42120d:	sbb    al,cl
  42120f:	shl    bh,1
  421211:	sbb    BYTE PTR [ebx],ah
  421213:	sub    edi,esp
  421215:	ins    BYTE PTR es:[edi],dx
  421216:	mov    al,0xb3
  421218:	or     edi,DWORD PTR [esi]
  42121a:	mov    esp,fs
  42121c:	or     ebx,DWORD PTR [ecx+0x72e74369]
  421222:	sub    al,0x29
  421224:	cld    
  421225:	(bad)  
  421226:	ds inc esi
  421228:	add    ebp,ecx
  42122a:	in     eax,0xb3
  42122c:	and    esp,ebp
  42122e:	imul   ebp,DWORD PTR [ecx-0x4],0xfcfc2c95
  421235:	jge    0x42125b
  421237:	cld    
  421238:	push   ecx
  421239:	adc    DWORD PTR [ebx],edi
  42123b:	dec    edi
  42123c:	(bad)  
  42123d:	call   0x2b420df4
  421242:	in     al,dx
  421243:	daa    
  421244:	push   ebx
  421245:	jb     0x421262
  421247:	xchg   ebx,esp
  421249:	loope  0x4212b5
  42124b:	les    ecx,FWORD PTR [ebx]
  42124d:	push   0xb
  42124f:	or     al,0x51
  421251:	aaa    
  421252:	mov    esi,0xeec4f786
  421257:	xor    BYTE PTR [eax-0x18],0xf0
  42125b:	push   es
  42125c:	or     eax,0x6f
  421261:	mov    ebx,0x73e9fc28
  421266:	das    
  421267:	cld    
  421268:	mul    BYTE PTR [edi]
  42126a:	idiv   esi
  42126c:	call   0xe1b43c61
  421271:	fist   WORD PTR [eax+edi*2]
  421274:	cmc    
  421275:	mov    al,0x27
  421277:	mov    DWORD PTR [eax],eax
  421279:	jb     0x421222
  42127b:	sti    
  42127c:	movhps xmm2,QWORD PTR [eax-0x3]
  421280:	dec    DWORD PTR [edx+0x46244886]
  421286:	repnz push ebx
  421288:	jmp    DWORD PTR [edi-0x41]
  42128b:	cmovo  ecx,DWORD PTR [edx+0x36]
  42128f:	xlat   BYTE PTR ds:[ebx]
  421290:	mov    DWORD PTR [esi+0x5abe0c47],eax
  421296:	daa    
  421297:	cld    
  421298:	call   edi
  42129a:	ret    0x247a
  42129d:	fs push esi
  42129f:	push   ebx
  4212a0:	call   DWORD PTR [edi]
  4212a2:	mov    ebx,0xa71a400f
  4212a7:	mov    esp,0x4f392a79
  4212ac:	push   edi
  4212ad:	std    
  4212ae:	push   edi
  4212af:	add    al,0xff
  4212b1:	pop    ss
  4212b2:	mov    bh,0xf
  4212b4:	inc    eax
  4212b5:	sbb    bh,BYTE PTR [eax+ebx*2+0x24]
  4212b9:	es inc esi
  4212bb:	aaa    
  4212bc:	pop    esp
  4212bd:	adc    edi,DWORD PTR ss:[esp+ebx*8-0x55]
  4212c2:	pop    edx
  4212c3:	mov    ah,0x43
  4212c5:	add    BYTE PTR [eax],al
  4212c7:	add    dl,bl
  4212c9:	fld    TBYTE PTR [esp+eax*1-0xfff525]
  4212d0:	jp     0x4212dc
  4212d2:	std    
  4212d3:	dec    edx
  4212d5:	push   ebx
  4212d6:	sti    
  4212d7:	jne    0x4212ab
  4212d9:	fist   DWORD PTR [ecx]
  4212db:	or     BYTE PTR [esi-0x6d7503b6],ah
  4212e1:	xchg   edi,esi
  4212e3:	dec    ebp
  4212e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212e6:	hlt    
  4212e7:	add    BYTE PTR [edx-0x1aaca9f6],bl
  4212ed:	fist   DWORD PTR [ecx]
  4212ef:	enter  0x4a99,0xfc
  4212f3:	mov    bl,dh
  4212f5:	repz fisttp WORD PTR [edi]
  4212f8:	retf   0xdff3
  4212fb:	adc    edi,edi
  4212fd:	xor    eax,0x41931233
  421302:	sar    bh,0xc
  421305:	mov    al,0xfc
  421307:	jmp    FWORD PTR [ecx+eax*1-0x35]
  42130b:	cld    
  42130c:	ficom  WORD PTR [edi]
  42130e:	xor    edx,DWORD PTR [edx]
  421310:	inc    edi
  421311:	and    eax,eax
  421313:	push   DWORD PTR [ecx+0x3b]
  421316:	add    al,0xfe
  421318:	cld    
  421319:	stos   DWORD PTR es:[edi],eax
  42131a:	cmp    eax,0x2a3044ff
  42131f:	inc    ebx
  421320:	pop    ss
  421321:	inc    eax
  421322:	dec    DWORD PTR [esi+ebp*2]
  421325:	call   0x23bc:0xddf30000
  42132c:	add    BYTE PTR [eax],al
  42132e:	add    BYTE PTR [ebx],al
  421330:	and    BYTE PTR [edx+eax*2+0x12335cc0],ch
  421337:	add    esp,DWORD PTR [eax+eax*8]
  42133a:	(bad)  
  42133b:	jns    0x42133d
  42133d:	jle    0x421334
  42133f:	hlt    
  421340:	mov    bl,0x61
  421342:	(bad)  
  421343:	cld    
  421344:	das    
  421345:	test   DWORD PTR [ebx-0x31],eax
  421348:	aaa    
  421349:	rcl    BYTE PTR [eax+0x44],1
  42134c:	xor    eax,0x22e407aa
  421351:	adc    al,0x14
  421353:	xor    esi,DWORD PTR [eax]
  421355:	xchg   DWORD PTR [edi-0x854c1c],edi
  42135b:	int3   
  42135c:	das    
  42135d:	call   0x47fc:0xfbe2c5ff
  421364:	or     al,0xe0
  421366:	cld    
  421367:	aas    
  421368:	adc    al,0xe8
  42136a:	addr16 repz out dx,eax
  42136d:	add    eax,DWORD PTR [eax]
  42136f:	cmp    eax,0x5f19a607
  421374:	stc    
  421375:	es add al,0x8a
  421378:	mov    ah,0x9d
  42137a:	enter  0xf6d0,0xe6
  42137e:	sti    
  42137f:	test   BYTE PTR ds:0x46c207fa,ah
  421385:	xchg   ecx,eax
  421386:	add    DWORD PTR [edx],esp
  421388:	mov    esi,0xfb0b1975
  42138d:	es add al,0x72
  421390:	push   ds
  421391:	gs mov eax,0xc3000000
  421397:	mov    al,0xe6
  421399:	add    bl,BYTE PTR [esi-0x26449ba]
  42139f:	pop    es
  4213a0:	out    0x3,eax
  4213a2:	inc    esi
  4213a3:	fwait
  4213a4:	out    dx,al
  4213a5:	xor    ah,cl
  4213a7:	inc    edx
  4213a8:	fld    st(3)
  4213aa:	xor    al,0x30
  4213ac:	repz add ah,BYTE PTR [esi+0x36]
  4213b0:	daa    
  4213b1:	sbb    al,0xf4
  4213b3:	(bad)
  4213b7:	adc    eax,0x68a4556
  4213bc:	push   ss
  4213bd:	mov    ecx,0xe7a28ff4
  4213c2:	int3   
  4213c3:	inc    edi
  4213c4:	unpcklps xmm1,XMMWORD PTR [ebx-0xb38c142]
  4213cb:	xchg   ecx,eax
  4213cc:	stos   BYTE PTR es:[edi],al
  4213cd:	out    0x10,eax
  4213cf:	mov    ss,WORD PTR [edx+0x328e10e7]
  4213d5:	call   0xf7a642e6
  4213da:	aam    0x24
  4213dc:	sar    edi,0xcf
  4213df:	fidivr DWORD PTR [esi]
  4213e1:	ins    BYTE PTR es:[edi],dx
  4213e2:	xor    eax,DWORD PTR [edi]
  4213e4:	(bad)  
  4213e5:	sbb    BYTE PTR [edi-0x5],al
  4213e8:	es add al,0xb6
  4213eb:	(bad)  
  4213ed:	dec    esp
  4213ee:	pop    ds
  4213ef:	(bad)  
  4213f0:	jmp    FWORD PTR [ebp+0x29113b0b]
  4213f6:	test   ecx,0xda5d
  4213fc:	add    BYTE PTR [eax],dh
  4213fe:	mov    edi,0x46a38c88
  421403:	pop    es
  421404:	jmp    0x6b2da3b4
  421409:	fsub   QWORD PTR [edi+0x7090e4f5]
  42140f:	inc    eax
  421410:	jmp    0x816faf09
  421415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421416:	popa   
  421417:	std    
  421418:	data16 je 0x42147f
  42141b:	jae    0x421421
  42141d:	jne    0x421443
  42141f:	mov    ebp,DWORD PTR [esp+edi*2-0x78a3982c]
  421426:	(bad)  [esi]
  421428:	push   ecx
  421429:	enter  0xfd5e,0x3e
  42142d:	add    DWORD PTR [ecx-0x7fc49bf1],ebx
  421433:	cld    
  421434:	mov    ah,0x24
  421436:	and    esi,DWORD PTR [edx-0xf]
  421439:	inc    eax
  42143a:	and    edx,DWORD PTR [edx]
  42143c:	in     eax,dx
  42143d:	cld    
  42143e:	(bad)  
  42143f:	inc    DWORD PTR [ecx]
  421441:	icebp  
  421442:	and    DWORD PTR [edx-0x7],esi
  421445:	rcr    DWORD PTR [eax+0xc3b060b],0xfd
  42144c:	aam    0xa4
  42144e:	idiv   DWORD PTR [edi]
  421450:	jmp    0xe94d5a84
  421455:	sub    cl,BYTE PTR [ecx]
  421457:	and    BYTE PTR [ebp+0x550023b6],dl
  42145d:	repnz cs cld 
  421460:	xchg   ebp,eax
  421461:	add    BYTE PTR [eax],al
  421463:	add    BYTE PTR [ecx],al
  421465:	and    eax,DWORD PTR [ebx+0x31098ba9]
  42146b:	add    BYTE PTR [edx-0x35fb41b6],cl
  421471:	(bad)  
  421472:	and    DWORD PTR [eax],esi
  421474:	iret   
  421475:	inc    edi
  421476:	cld    
  421477:	push   esp
  421478:	adc    edi,esp
  42147a:	repnz add eax,0x3fc3aa
  421480:	mov    ?,WORD PTR ds:0x5b967587
  421486:	sbb    eax,0xfa9640e8
  42148b:	dec    DWORD PTR [esi]
  42148d:	retf   
  42148e:	jo     0x4214a8
  421490:	mov    cl,0x1c
  421492:	pop    esp
  421493:	mov    eax,0x10710b19
  421498:	aad    0x5b
  42149a:	or     al,0x8b
  42149c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42149d:	sti    
  42149e:	cli    
  42149f:	jne    0x421503
  4214a1:	push   DWORD PTR [ecx-0x182a5a03]
  4214a7:	adc    BYTE PTR [ebp+0x7fff105b],dh
  4214ad:	not    DWORD PTR [ebp-0x1]
  4214b0:	jg     0x4214d1
  4214b2:	sti    
  4214b3:	adc    eax,0x3ffe7e
  4214b8:	je     0x42150e
  4214ba:	mov    esi,0x873c0a10
  4214bf:	in     al,dx
  4214c0:	cld    
  4214c1:	or     esp,DWORD PTR [eax]
  4214c3:	lods   al,BYTE PTR ds:[esi]
  4214c4:	pop    ecx
  4214c5:	pop    es
  4214c6:	add    al,0x56
  4214c8:	add    BYTE PTR [eax],al
  4214ca:	add    BYTE PTR [ecx+0x2b74085b],dl
  4214d0:	call   DWORD PTR [eax-0x7f2a0b44]
  4214d6:	shr    BYTE PTR [esi+0xe],0x37
  4214da:	xor    eax,0x3fae7a
  4214df:	aas    
  4214e0:	sti    
  4214e1:	cli    
  4214e2:	jne    0x4214be
  4214e4:	mov    ds:0x38f31449,eax
  4214e9:	mov    ch,0x7
  4214eb:	fndisi(8087 only) 
  4214ed:	sub    al,0xfc
  4214ef:	mov    esp,0x3efd1035
  4214f4:	cmp    al,0x2f
  4214f6:	jb     0x4214fb
  4214f8:	add    ch,BYTE PTR [edi]
  4214fa:	jb     0x4214f7
  4214fc:	jo     0x421513
  4214fe:	cmp    al,0x6
  421500:	lock add ebx,DWORD PTR [esi+0x36]
  421504:	outs   dx,BYTE PTR ds:[esi]
  421505:	adc    BYTE PTR [eax],al
  421507:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  421509:	sbb    al,0xf5
  42150b:	out    dx,al
  42150c:	dec    edi
  42150d:	pop    esp
  42150e:	inc    eax
  42150f:	repz xor edx,esi
  421512:	mov    dh,bh
  421514:	xor    esi,DWORD PTR [esi+ebx*1-0x29015a5]
  42151b:	lods   al,BYTE PTR fs:[esi]
  42151d:	inc    eax
  42151e:	jae    0x42151b
  421520:	in     al,0xf4
  421522:	pop    edi
  421523:	fwait
  421524:	ins    DWORD PTR es:[edi],dx
  421525:	add    BYTE PTR [ebx-0x1d],dh
  421528:	mov    eax,0x83780fb5
  42152d:	adc    al,0xfd
  42152f:	add    BYTE PTR [eax],al
  421531:	add    dh,al
  421533:	pop    ss
  421534:	sbb    BYTE PTR [esi],ah
  421536:	ss loope 0x421568
  421539:	call   0x13f7ee41
  42153e:	and    al,0x5b
  421540:	adc    BYTE PTR [esi+0x1c],dl
  421543:	cmp    eax,0xfffffffc
  421546:	(bad)  
  421547:	fist   DWORD PTR [eax+eax*2]
  42154a:	repz pop ecx
  42154c:	int    0xc1
  42154e:	jecxz  0x42157f
  421550:	aad    0x88
  421552:	mov    cr0,edx
  421555:	and    BYTE PTR [edi+0x6d],al
  421558:	add    BYTE PTR [eax*2+0x5f0bb5a5],al
  42155f:	dec    edi
  421560:	sbb    BYTE PTR [edi],al
  421562:	lahf   
  421563:	push   es
  421564:	in     eax,0x2f
  421566:	jo     0x4215ae
  421568:	push   edx
  421569:	or     al,0xa
  42156b:	fadd   QWORD PTR [esi+0x6c]
  42156e:	xor    eax,DWORD PTR [edi]
  421570:	push   esp
  421571:	adc    al,0xbe
  421573:	fwait
  421574:	(bad)  
  421575:	jp     0x4215a0
  421577:	sti    
  421578:	mov    ebp,0xc92ef4b9
  42157d:	xor    BYTE PTR [edi-0x61eb3edf],ah
  421583:	fwait
  421584:	cli    
  421585:	cs and edi,esi
  421588:	xor    al,0x2f
  42158a:	add    DWORD PTR [edi],ecx
  42158c:	xchg   esi,eax
  42158d:	sbb    edi,edx
  42158f:	sti    
  421590:	es add al,0x1d
  421593:	les    ebp,FWORD PTR [eax+0x14]
  421599:	repz mov ebx,0xb662071
  42159f:	(bad)  
  4215a0:	pop    edi
  4215a1:	mov    bl,0x6
  4215a3:	jecxz  0x42157a
  4215a5:	imul   ebx,DWORD PTR [ebx+0x2ef5b7f6],0x28
  4215ac:	imul   ecx,DWORD PTR [esi+0x21],0x6a
  4215b0:	inc    esp
  4215b1:	sar    dh,0x11
  4215b4:	stc    
  4215b5:	pushf  
  4215b6:	pop    esi
  4215b7:	test   eax,0x3df6c003
  4215bc:	mov    ecx,0xba38e00
  4215c1:	ficomp WORD PTR es:[ebx]
  4215c5:	jns    0x4215e9
  4215c7:	and    eax,0x1df50b2f
  4215cc:	mov    ecx,0x179b21e4
  4215d1:	popf   
  4215d2:	and    DWORD PTR [ebx-0x11650001],edx
  4215d8:	cs loope 0x42155d
  4215db:	rol    bl,cl
  4215dd:	in     al,dx
  4215de:	ret    0x93ff
  4215e1:	xor    dh,ah
  4215e3:	call   DWORD PTR [ebx-0x130ad3a7]
  4215e9:	shr    BYTE PTR [eax+eax*2-0x17],1
  4215ed:	hlt    
  4215ee:	mov    eax,0x9adf5c88
  4215f3:	push   ds
  4215f4:	ror    DWORD PTR [edi+0x6cc6fd5f],0x60
  4215fb:	jae    0x4215de
  4215fd:	add    BYTE PTR [eax],al
  4215ff:	add    BYTE PTR [ecx-0x4e8ea02b],bl
  421605:	and    BYTE PTR [ebx-0x27],dh
  421608:	int    0x94
  42160a:	adc    esi,DWORD PTR [edx-0x4d]
  42160d:	clc    
  42160e:	cld    
  42160f:	adc    al,0x8f
  421611:	sub    BYTE PTR [ebx-0x6b],dl
  421614:	aad    0x22
  421616:	call   0x17d6e415
  42161b:	xchg   BYTE PTR [ebx],bh
  42161d:	hlt    
  42161e:	push   ebp
  42161f:	jle    0x4215cc
  421621:	or     al,0xfd
  421623:	cld    
  421624:	push   0x4911223
  421629:	(bad)  
  42162a:	inc    esi
  42162c:	inc    ebx
  42162d:	inc    esi
  42162e:	adc    ebp,ecx
  421630:	sub    ecx,DWORD PTR [edi-0x1904a015]
  421636:	stos   DWORD PTR es:[edi],eax
  421637:	stos   BYTE PTR es:[edi],al
  421638:	lock or dl,BYTE PTR [esi+0x72]
  42163c:	jnp    0x42164a
  42163e:	je     0x421648
  421640:	(bad)  
  421642:	mov    eax,0xbf83d537
  421647:	mov    ch,0xe8
  421649:	fnsave [edx]
  42164b:	mov    DWORD PTR [eax-0x1f6c003a],ecx
  421651:	and    DWORD PTR [edx-0x7],esi
  421654:	mov    esp,ecx
  421656:	adc    ecx,DWORD PTR [esi]
  421658:	cmp    ecx,DWORD PTR [eax]
  42165a:	call   0xfc32175f
  42165f:	inc    DWORD PTR [ecx]
  421661:	hlt    
  421662:	cli    
  421663:	jne    0x421665
  421665:	add    BYTE PTR [eax],al
  421667:	(bad)  
  421668:	lock jno 0x42167b
  42166b:	test   al,dh
  42166d:	jno    0x421677
  42166f:	int    0xf7
  421671:	xor    edx,DWORD PTR ds:0x5d5e0b1a
  421677:	cwde   
  421678:	cli    
  421679:	call   DWORD PTR [ecx+edx*2-0x19]
  42167d:	repnz add eax,0x3fa6ea
  421683:	xchg   esi,eax
  421684:	cmp    DWORD PTR [edi+0x1d578e75],eax
  42168a:	call   0x3cc33f
  42168f:	push   es
  421690:	retf   
  421691:	jo     0x4216ab
  421693:	xchg   ecx,eax
  421694:	sbb    BYTE PTR [eax+edi*4-0x27],bl
  421698:	or     dh,BYTE PTR [ecx+0x10]
  42169b:	ins    DWORD PTR es:[edi],dx
  42169c:	push   edi
  42169d:	or     al,0x8b
  42169f:	mov    edi,0x6275fafe
  4216a4:	sti    
  4216a5:	sar    ebx,0xdd
  4216a8:	icebp  
  4216a9:	out    0x10,eax
  4216ab:	int    0x57
  4216ad:	adc    bh,bh
  4216af:	aaa    
  4216b0:	repz push ebp
  4216b2:	jmp    DWORD PTR [edi]
  4216b4:	sbb    edi,ebx
  4216b6:	adc    eax,0x3ff7f2
  4216bb:	mov    WORD PTR [eax-0x42],ss
  4216be:	adc    BYTE PTR [edx+0x38],cl
  4216c1:	xchg   esp,ebp
  4216c3:	in     al,0x7
  4216c5:	and    BYTE PTR [ecx+ebx*2+0x560403],ch
  4216cc:	add    BYTE PTR [eax],al
  4216ce:	xchg   ecx,eax
  4216cf:	push   edi
  4216d0:	or     al,0x74
  4216d2:	sub    edi,ebx
  4216d4:	mov    al,ds:0x80f1ecba
  4216d9:	shl    bl,0x81
  4216dc:	or     BYTE PTR [ecx],bh
  4216de:	(bad)  
  4216df:	lea    ebp,[eax+0x40]
  4216e2:	repz mov ds:0x3466fd10,al
  4216e8:	ja     0x421734
  4216ea:	or     edx,DWORD PTR ds:0xadcb0bb5
  4216f0:	daa    
  4216f1:	cld    
  4216f2:	aam    0x39
  4216f4:	paddw  mm0,QWORD PTR [esi+0x8]
  4216f8:	sub    esi,DWORD PTR [edx-0x21]
  4216fb:	(bad)  [edx]
  4216fd:	jb     0x4216ee
  4216ff:	dec    esp
  421700:	mov    ch,0x7
  421702:	mov    ah,0x3b
  421704:	pop    eax
  421705:	adc    esi,DWORD PTR [ebx]
  421707:	xor    dl,cl
  421709:	pop    edx
  42170a:	mov    cl,0x3c
  42170c:	add    BYTE PTR [ebx+0x68],dl
  42170f:	pop    esp
  421710:	xor    al,BYTE PTR [edx]
  421712:	shl    DWORD PTR [ebx-0x2a0f0041],cl
  421718:	jbe    0x42178c
  42171a:	jecxz  0x421717
  42171c:	loopne 0x421705
  42171e:	sbb    BYTE PTR [edx+0x706ffc2a],bh
  421724:	mov    ah,0x17
  421726:	sub    BYTE PTR [ebx-0x60],dl
  421729:	mov    bh,0xb0
  42172b:	das    
  42172c:	mov    ch,0xf
  42172e:	pop    esp
  42172f:	adc    edx,DWORD PTR [ecx+ecx*4]
  421732:	add    BYTE PTR [eax],al
  421734:	add    BYTE PTR [esi-0x8dd4f9],ah
  42173a:	mov    bh,0xf2
  42173c:	clc    
  42173d:	inc    esp
  42173e:	mov    ch,0x17
  421740:	adc    BYTE PTR [ebx+esi*1],bh
  421743:	or     ch,bh
  421745:	mov    esi,0xa6fcd23b
  42174a:	sub    ebp,DWORD PTR [ebx]
  42174c:	jb     0x421749
  42174e:	aam    0x15
  421750:	lods   al,BYTE PTR ds:[esi]
  421751:	pop    es
  421752:	jo     0x421754
  421754:	pop    esi
  421755:	mov    dh,0x6
  421757:	sub    DWORD PTR [edi],edx
  421759:	repz loope 0x42173f
  42175c:	addr16 loopne 0x421725
  42175f:	out    0xb6,al
  421761:	neg    BYTE PTR [esi-0x27]
  421764:	xor    dh,BYTE PTR [ebp-0xe17d5fa]
  42176a:	fcmovbe st,st(3)
  42176c:	ret    
  42176d:	in     al,0x92
  42176f:	in     al,dx
  421770:	imul   esp,DWORD PTR [ebp+0x18],0xffffffa7
  421774:	add    esi,DWORD PTR [edx-0x1e10141f]
  42177a:	(bad)  
  42177b:	out    0xb0,al
  42177d:	out    dx,al
  42177e:	pop    esi
  42177f:	mov    bl,0x36
  421781:	std    
  421782:	push   es
  421783:	stos   BYTE PTR es:[edi],al
  421784:	fcomip st,st(1)
  421786:	out    dx,al
  421787:	fcmovnb st,st(3)
  421789:	lods   al,BYTE PTR ds:[esi]
  42178a:	adc    al,0x9e
  42178c:	btr    DWORD PTR ds:0x19d3e196,edx
  421793:	daa    
  421794:	add    al,0xb2
  421796:	mov    bl,0x71
  421798:	sbb    BYTE PTR [eax],al
  42179a:	add    BYTE PTR [eax],al
  42179c:	jae    0x4217c8
  42179e:	into   
  42179f:	xor    ecx,esi
  4217a1:	out    0x42,al
  4217a3:	(bad)  
  4217a4:	jl     0x4217af
  4217a6:	xor    eax,0xfb0f017f
  4217ab:	fst    DWORD PTR [ecx+edi*1+0x3f]
  4217af:	sub    ah,BYTE PTR [edi-0x7e]
  4217b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217b3:	mov    al,0x11
  4217b5:	test   BYTE PTR [eax+esi*4-0xb],dh
  4217b9:	xchg   ecx,eax
  4217ba:	lods   al,BYTE PTR ds:[esi]
  4217bb:	call   DWORD PTR [edx+edi*2+0x5d]
  4217bf:	sub    eax,DWORD PTR [edi-0x7d]
  4217c2:	es mov al,0xe1
  4217c5:	mov    al,0xfe
  4217c7:	shr    DWORD PTR [ecx-0x35],1
  4217ca:	push   ds
  4217cb:	aad    0x14
  4217cd:	aad    0x91
  4217cf:	sub    ah,BYTE PTR [edi]
  4217d1:	(bad)  
  4217d2:	jmp    FWORD PTR [ebx+0x114290b4]
  4217d8:	aas    
  4217d9:	cs (bad) 
  4217db:	mov    esi,0xf5aff8d9
  4217e0:	xor    BYTE PTR ds:0x9b5205a,bl
  4217e6:	add    BYTE PTR [ebp+esi*2-0x30ea7fcf],dh
  4217ed:	adc    al,BYTE PTR [edx]
  4217ef:	leave  
  4217f0:	cmp    al,0xc7
  4217f2:	(bad)  
  4217f3:	in     al,dx
  4217f4:	ret    0x728f
  4217f7:	loope  0x42177d
  4217f9:	jmp    0x65fc:0x1a5f6fe7
  421800:	add    BYTE PTR [eax],al
  421802:	add    BYTE PTR [eax],dh
  421804:	cwde   
  421805:	and    ch,BYTE PTR [edx+eax*1-0x68]
  421809:	push   ds
  42180a:	bound  esi,QWORD PTR [edx-0x27c917f8]
  421810:	sbb    bh,ah
  421812:	xor    BYTE PTR fs:[eax-0x4d40bcee],bl
  421819:	mov    bl,BYTE PTR [edi+eiz*1]
  42181c:	int    0xe7
  42181e:	xchg   ebx,eax
  42181f:	cs sbb bh,ah
  421822:	jo     0x4217d7
  421824:	inc    eax
  421825:	mov    ch,BYTE PTR [edi+ebp*1]
  421828:	int3   
  421829:	call   0x125dbb16
  42182e:	popa   
  42182f:	cld    
  421830:	(bad)  
  421831:	call   FWORD PTR [esi]
  421833:	es inc esi
  421835:	add    ebp,ecx
  421837:	inc    ebx
  421838:	(bad)  
  421839:	jmp    0x4218a5
  42183b:	cld    
  42183c:	jmp    0x421833
  42183e:	in     al,dx
  42183f:	push   eax
  421840:	jo     0x421882
  421842:	jmp    0xdccaca8b
  421847:	cmp    BYTE PTR [eax+0x55474130],bl
  42184d:	std    
  42184e:	add    BYTE PTR [ebp+0x74bc9b],dh
  421854:	xchg   dl,dh
  421856:	je     0x421844
  421858:	cmp    DWORD PTR [edx],0x30
  42185b:	pop    edi
  42185c:	and    eax,DWORD PTR [edi-0x5fffdba]
  421862:	(bad)  
  421863:	in     eax,0xf0
  421865:	add    eax,0x5e000000
  42186b:	imul   DWORD PTR [ecx+0x30]
  42186e:	cmp    al,0x9f
  421870:	dec    ecx
  421871:	ror    BYTE PTR [ebx-0x1b556b01],1
  421877:	in     eax,dx
  421878:	test   DWORD PTR [ebp+0x2],eax
  42187b:	lahf   
  42187c:	inc    ecx
  42187d:	sar    BYTE PTR [edx-0x4],1
  421880:	std    
  421881:	push   ebp
  421882:	aad    0xb
  421884:	hlt    
  421885:	adc    al,0x1a
  421887:	add    ebx,DWORD PTR [esi-0x37]
  42188a:	mov    BYTE PTR [esi],al
  42188c:	add    BYTE PTR [ebp+0x51],dl
  42188f:	(bad)  
  421890:	jg     0x42187e
  421892:	stos   BYTE PTR es:[edi],al
  421893:	aad    0x1
  421895:	and    BYTE PTR [esi+0x41],dh
  421898:	cld    
  421899:	add    edi,esp
  42189b:	cdq    
  42189c:	jno    0x4218a6
  42189e:	ficom  WORD PTR [ecx]
  4218a0:	in     al,0xe7
  4218a2:	adc    dh,cl
  4218a4:	sti    
  4218a5:	test   BYTE PTR [edx+0x56],bl
  4218a8:	test   DWORD PTR es:[esi+edx*2+0x22],ebx
  4218ad:	and    DWORD PTR [edi+edx*1+0x48e12171],0x4
  4218b5:	call   0x3e097b
  4218ba:	iret   
  4218bb:	ret    0x1570
  4218be:	lock adc dl,BYTE PTR [edx-0x73]
  4218c2:	xchg   DWORD PTR [edi-0x467317b3],esi
  4218c8:	cli    
  4218c9:	push   ebx
  4218cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218cc:	mov    esp,0xd7
  4218d1:	bound  dx,DWORD PTR [eax+0x4f]
  4218d5:	sbb    BYTE PTR [esi],ch
  4218d7:	into   
  4218d8:	cld    
  4218d9:	(bad)  
  4218da:	aad    0xf
  4218dc:	inc    eax
  4218dd:	repz jae 0x421919
  4218e0:	shr    edi,0x2d
  4218e3:	cmp    DWORD PTR [ebx-0x29],0x29
  4218e7:	add    dl,BYTE PTR [esi+0x78]
  4218ea:	(bad)  
  4218eb:	div    BYTE PTR [ebp-0x7f2b8515]
  4218f1:	cli    
  4218f2:	lods   al,BYTE PTR es:[esi]
  4218f4:	sbb    esi,DWORD PTR [eax+0x7]
  4218f7:	cmc    
  4218f8:	jb     0x421940
  4218fa:	push   0xffffffeb
  4218fc:	lds    esp,FWORD PTR [eax+0x25]
  4218ff:	xor    BYTE PTR [edi-0xe],0x25
  421903:	lods   eax,DWORD PTR ds:[esi]
  421904:	add    bl,BYTE PTR [ecx+0x2e]
  421907:	enter  0xf0e8,0xfc
  42190b:	inc    ebx
  42190c:	aas    
  42190d:	push   0x2e
  42190f:	sbb    eax,DWORD PTR ds:0x12eac
  421915:	repz das 
  421917:	repz mov edi,0x80e53533
  42191d:	call   0xf457:0x7035a426
  421924:	jge    0x4218be
  421926:	lods   eax,DWORD PTR ds:[esi]
  421927:	sub    DWORD PTR [edx],ecx
  421929:	jmp    FWORD PTR [eax-0x7f]
  42192c:	div    BYTE PTR [esi+0x30]
  42192f:	add    BYTE PTR [eax],al
  421931:	call   DWORD PTR [edi]
  421933:	xor    esi,0x14000000
  421939:	push   eax
  42193a:	add    BYTE PTR [eax],al
  42193c:	in     eax,0x3b
  42193e:	xor    esi,0x500a
  421944:	aam    0x33
  421946:	aas    
  421947:	add    eax,esi
  421949:	push   es
  42194a:	out    0x3,eax
  42194c:	repz sub eax,0xe07cf42a
  421952:	stos   BYTE PTR es:[edi],al
  421953:	fucomip st,st(0)
  421955:	or     DWORD PTR [ebx+eax*2-0x14],esi
  421959:	sub    eax,0xb964f47c
  42195e:	sub    bl,bh
  421960:	sbb    al,0xc2
  421962:	imul   esp,DWORD PTR [edi-0x716fd30],0xf9c0f46
  42196c:	jb     0x42198e
  42196e:	lock scas eax,DWORD PTR es:[edi]
  421970:	mov    ds:0xfd8426d5,eax
  421975:	or     edx,DWORD PTR [esi+ebx*4+0x3e804b7]
  42197c:	repz push es
  42197e:	adc    al,bh
  421980:	jae    0x4219a1
  421982:	loopne 0x421933
  421984:	pop    ss
  421985:	cdq    
  421986:	scas   eax,DWORD PTR es:[edi]
  421987:	test   ch,al
  421989:	or     esp,DWORD PTR [ebp-0x28]
  42198c:	inc    ebp
  42198d:	and    BYTE PTR [ebx+0x4],ah
  421990:	repz push es
  421992:	pop    ebx
  421993:	or     al,0x34
  421995:	and    BYTE PTR ds:0x4419ace4,al
  42199b:	loopne 0x42199d
  42199d:	add    BYTE PTR [eax],al
  42199f:	and    eax,0x9ce40f20
  4219a4:	sbb    DWORD PTR ds:0xea04ae08,esi
  4219aa:	add    esi,ebx
  4219ac:	push   es
  4219ad:	xchg   edx,eax
  4219ae:	(bad)  
  4219af:	ret    
  4219b0:	inc    esi
  4219b1:	fistp  QWORD PTR [edi-0x6f19f530]
  4219b7:	xor    al,0xc6
  4219b9:	and    esp,0x3e80437
  4219bf:	repz push es
  4219c1:	xchg   edx,eax
  4219c2:	or     ah,BYTE PTR [edx]
  4219c4:	inc    edi
  4219c5:	inc    DWORD PTR [ecx-0x3abc201a]
  4219cb:	dec    eax
  4219cc:	xchg   ebx,eax
  4219cd:	or     BYTE PTR [ecx-0x69],ch
  4219d0:	sbb    cl,BYTE PTR [edx]
  4219d2:	aam    0xf3
  4219d4:	lods   al,BYTE PTR ds:[esi]
  4219d5:	add    DWORD PTR [ecx+0x293106d9],esi
  4219db:	aaa    
  4219dc:	add    BYTE PTR [ecx],0xfa
  4219df:	mov    al,0xd9
  4219e1:	shr    ebp,0xf0
  4219e4:	or     esi,DWORD PTR [ebp-0x3cfa65d7]
  4219ea:	jns    0x421a59
  4219ec:	fcos   
  4219ee:	fldenv [edx+0x987c6d6]
  4219f4:	leave  
  4219f5:	add    DWORD PTR [edx-0x46774f19],ebx
  4219fb:	in     al,dx
  4219fc:	or     esi,DWORD PTR [ebp+0x31f46af8]
  421a02:	mov    ebx,0x0
  421a07:	aad    0xce
  421a09:	test   al,0x58
  421a0b:	hlt    
  421a0c:	cmp    eax,0x1c0d987
  421a11:	pop    ebx
  421a12:	out    0xb9,al
  421a14:	or     al,0x96
  421a16:	mov    al,0x6
  421a18:	(bad)  
  421a19:	in     eax,dx
  421a1a:	enter  0xc118,0xde
  421a1e:	sbb    eax,0x33ed8a58
  421a23:	push   0xd5f72965
  421a28:	(bad)  
  421a29:	cli    
  421a2a:	inc    edx
  421a2b:	mov    ds:0x95f12138,al
  421a30:	sub    BYTE PTR [edx],bh
  421a32:	mov    ah,0x8f
  421a34:	ja     0x421a1b
  421a36:	test   DWORD PTR [edx+0x17],edx
  421a39:	out    0x5,al
  421a3b:	dec    esi
  421a3c:	gs (bad) 
  421a3f:	fisttp DWORD PTR [eax+eax*1]
  421a42:	hlt    
  421a43:	adc    esi,edi
  421a45:	cwd    
  421a47:	out    dx,al
  421a48:	mov    bh,0xff
  421a4a:	dec    edx
  421a4b:	add    al,0x0
  421a4d:	cmp    bp,bp
  421a50:	ds retw 
  421a53:	pop    ds
  421a54:	dec    edx
  421a55:	adc    WORD PTR [ebx],si
  421a58:	(bad)  
  421a59:	jno    0x421a5e
  421a5b:	inc    ecx
  421a5c:	push   edi
  421a5d:	jne    0xe37518a7
  421a63:	jns    0x4219ea
  421a65:	or     al,0x54
  421a67:	lds    eax,FWORD PTR [edi+0x41]
  421a6d:	jbe    0x421a74
  421a6f:	inc    esp
  421a70:	and    al,0x12
  421a72:	das    
  421a73:	cld    
  421a74:	(bad)  
  421a75:	mov    edx,0x451d7303
  421a7a:	loope  0x421aec
  421a7c:	and    al,0xe
  421a7e:	lahf   
  421a7f:	jne    0x421ad1
  421a81:	std    
  421a82:	and    BYTE PTR [si],cl
  421a85:	in     eax,dx
  421a86:	push   0xb975e800
  421a8b:	sti    
  421a8c:	(bad)  
  421a8d:	jge    0x421a15
  421a8f:	mov    esp,0xfd93d674
  421a94:	jmp    0x3c2:0xc2bc15d8
  421a9b:	push   0x1
  421a9d:	dec    ecx
  421a9e:	les    ecx,FWORD PTR [eax+ebp*8]
  421aa1:	push   0x2afffcc5
  421aa6:	add    al,0xbf
  421aa8:	push   esi
  421aa9:	and    esp,edx
  421aab:	sti    
  421aac:	jbe    0x421aa8
  421aae:	cli    
  421aaf:	xor    BYTE PTR [eax+0x44f2e15c],ch
  421ab5:	mov    dh,0x1b
  421ab7:	std    
  421ab8:	(bad)  
  421ab9:	xchg   esp,eax
  421aba:	pop    edi
  421abb:	xchg   DWORD PTR [eax-0xd],eax
  421abe:	sub    eax,0x85c505ac
  421ac3:	loopne 0x421a6c
  421ac5:	xor    BYTE PTR gs:[esi-0x3b],0xbd
  421aca:	imul   edi,edi,0xffffffff
  421acd:	mov    esi,0x8017a4
  421ad2:	add    BYTE PTR [eax],al
  421ad4:	push   edi
  421ad5:	xchg   ebp,eax
  421ad6:	sub    bl,0xf7
  421ad9:	adc    al,0x0
  421adb:	add    BYTE PTR [eax-0x634010b1],ah
  421ae1:	ins    DWORD PTR es:[edi],dx
  421ae2:	jne    0x421b5f
  421ae4:	xlat   BYTE PTR ds:[ebx]
  421ae5:	std    
  421ae6:	jbe    0x421abe
  421ae8:	sbb    eax,DWORD PTR [edi+0x1c1cffb5]
  421aee:	inc    eax
  421aef:	les    ebp,FWORD PTR [edi+0x7aeff409]
  421af5:	ins    DWORD PTR es:[edi],dx
  421af6:	add    BYTE PTR [edi-0x7fb691],al
  421afc:	cld    
  421afd:	sub    al,0x79
  421aff:	or     edi,0xffffffa9
  421b02:	add    eax,DWORD PTR [eax]
  421b04:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b06:	jg     0x421b2b
  421b08:	jnp    0x421b2a
  421b0a:	add    BYTE PTR [eax],al
  421b0c:	mov    ah,0xac
  421b0e:	fisttp WORD PTR [ebx+0x1ff3]
  421b14:	repnz pop ds
  421b16:	add    BYTE PTR [ecx-0x188efc8],cl
  421b1c:	outs   dx,DWORD PTR ds:[esi]
  421b1d:	test   eax,0xd46654fb
  421b22:	fistp  WORD PTR [ebx]
  421b24:	inc    ecx
  421b25:	test   eax,0xf23103cf
  421b2a:	cmp    eax,0x28d743
  421b2f:	std    
  421b30:	add    esp,DWORD PTR [eax+eax*2+0x1e6770c]
  421b37:	add    BYTE PTR [eax],al
  421b39:	add    BYTE PTR [eax],al
  421b3b:	repz push es
  421b3d:	je     0x421afe
  421b3f:	shl    dl,1
  421b41:	ss call 0xeae0:0x24e7a074
  421b49:	ret    0xd1b
  421b4c:	sub    ah,dh
  421b4e:	add    esi,DWORD PTR [ebx+ecx*8-0x3e]
  421b52:	adc    ebp,DWORD PTR [edx-0x35]
  421b55:	retf   0x7a0b
  421b58:	jmp    DWORD PTR [ecx-0x46]
  421b5b:	call   0x4039ccdf
  421b60:	xlat   BYTE PTR ds:[ebx]
  421b61:	jno    0x421b96
  421b63:	dec    esp
  421b64:	mov    cs,WORD PTR [ebp+0x3ebd2f25]
  421b6a:	or     BYTE PTR [edi+0x15],0x45
  421b6e:	sbb    BYTE PTR [eax-0x19fc2916],0x8a
  421b75:	test   al,0x1
  421b77:	repz push es
  421b79:	addr16 in al,0x4
  421b7c:	and    DWORD PTR [edx+0x444ed0df],0x3
  421b83:	repz push es
  421b85:	pushf  
  421b86:	add    dh,BYTE PTR [ebx]
  421b88:	pop    ds
  421b89:	test   BYTE PTR ds:0x677315e7,ah
  421b8f:	adc    BYTE PTR [edi-0x1a],al
  421b92:	add    esi,ebx
  421b94:	dec    esi
  421b95:	dec    ebx
  421b96:	add    esi,ebx
  421b98:	push   es
  421b99:	dec    ebp
  421b9b:	(bad)  
  421b9c:	adc    eax,0x91e5
  421ba1:	add    BYTE PTR [eax-0xcfaef16],al
  421ba7:	push   es
  421ba8:	mov    edi,0xcd159813
  421bad:	and    edx,DWORD PTR [ebx+edx*4]
  421bb0:	jae    0x421b7a
  421bb2:	rcr    dh,1
  421bb4:	mov    ebp,0xfffad098
  421bb9:	sbb    BYTE PTR [edx+ecx*2+0x4f],bh
  421bbd:	pop    esp
  421bbe:	mov    ebx,0x62392fe9
  421bc3:	leave  
  421bc4:	and    edx,ecx
  421bc6:	inc    eax
  421bc7:	sub    eax,0x131189dc
  421bcc:	and    BYTE PTR [ebp-0x9407799],0xdb
  421bd3:	inc    edi
  421bd4:	mov    dh,0x8f
  421bd6:	out    dx,al
  421bd7:	push   es
  421bd8:	add    BYTE PTR [edx-0x47],ah
  421bdb:	dec    ebx
  421bdc:	(bad)  
  421bdd:	call   0x60b4e812
  421be2:	ins    BYTE PTR es:[edi],dx
  421be3:	cwde   
  421be4:	pop    es
  421be5:	gs std 
  421be7:	cwde   
  421be8:	inc    ebx
  421be9:	push   esi
  421bea:	mov    al,BYTE PTR ds:0xe90ca589
  421bf0:	sub    BYTE PTR [ebp-0x4b0302ec],ch
  421bf6:	in     al,0x7f
  421bf8:	push   ebx
  421bf9:	or     eax,0x41cd7ff3
  421bfe:	(bad)  
  421bff:	leave  
  421c00:	cld    
  421c01:	imul   edx,DWORD PTR es:[ebp+0x73],0xffffffff
  421c06:	add    BYTE PTR [eax],al
  421c08:	add    cl,dl
  421c0a:	cwde   
  421c0b:	punpckldq mm7,DWORD PTR [ebx-0x75f1ec18]
  421c12:	add    BYTE PTR [ecx-0x77172b63],cl
  421c18:	das    
  421c19:	pop    es
  421c1a:	lea    eax,[ebx-0xa]
  421c1d:	adc    DWORD PTR [eax+0x4cfb75bf],ecx
  421c23:	inc    ebx
  421c24:	or     eax,0x55fd13e0
  421c29:	retf   
  421c2a:	clc    
  421c2b:	out    0xaf,eax
  421c2d:	sbb    dl,BYTE PTR [edx]
  421c2f:	cld    
  421c30:	into   
  421c31:	jl     0x421c1b
  421c33:	sbb    eax,DWORD PTR [eax]
  421c35:	ret    0xa2a7
  421c38:	(bad)  
  421c39:	push   ebp
  421c3a:	mov    BYTE PTR [eax+0x24],bh
  421c3d:	xchg   ebp,eax
  421c3e:	or     BYTE PTR [ebx],cl
  421c40:	test   ah,dl
  421c42:	or     DWORD PTR [eax],eax
  421c44:	add    BYTE PTR [ebx-0x5f],ah
  421c47:	cld    
  421c48:	dec    DWORD PTR [edx-0x11db7f12]
  421c4e:	pop    es
  421c4f:	add    BYTE PTR [eax],al
  421c51:	pop    ebx
  421c52:	jl     0x421c5e
  421c54:	xor    DWORD PTR [esi+0x4a00942b],0x8
  421c5b:	add    BYTE PTR [edi],cl
  421c5d:	fild   QWORD PTR [edx-0x3]
  421c60:	call   FWORD PTR [edx-0x12]
  421c63:	and    BYTE PTR [esi+edi*4],0x7
  421c67:	add    BYTE PTR [eax],al
  421c69:	jmp    0x0:0x830a6e
  421c70:	xchg   BYTE PTR [eax+ebp*4],ch
  421c73:	add    BYTE PTR [edx],bl
  421c75:	or     BYTE PTR [eax],al
  421c77:	jg     0xb4219bf
  421c7d:	test   eax,0x81a07fc
  421c82:	out    0x47,eax
  421c84:	aad    0x7b
  421c86:	and    BYTE PTR [eax],dl
  421c88:	xchg   DWORD PTR [ebx+0x8091c20],ecx
  421c8e:	add    BYTE PTR [eax+0x57],dl
  421c91:	dec    esp
  421c92:	and    BYTE PTR [eax-0x56],ch
  421c95:	jbe    0x421cd7
  421c97:	and    al,0xa6
  421c99:	fbstp  TBYTE PTR [ebx-0x52]
  421c9c:	retf   0x3707
  421c9f:	inc    esp
  421ca0:	mov    esi,0xb4850b17
  421ca5:	or     al,BYTE PTR [eax]
  421ca7:	add    BYTE PTR [eax+0x3f],al
  421caa:	and    BYTE PTR [edi-0x12],dl
  421cad:	gs jo  0x421cb8
  421cb0:	repz stc 
  421cb2:	cli    
  421cb3:	or     al,0x6e
  421cb5:	xor    eax,DWORD PTR [ecx]
  421cb7:	add    bl,dh
  421cb9:	or     ebx,edi
  421cbb:	or     al,0x6f
  421cbd:	add    eax,DWORD PTR gs:[eax]
  421cc0:	repz mov al,ds:0x1de3239f
  421cc6:	je     0x423a44
  421ccc:	push   0x7f8ab72b
  421cd1:	inc    ecx
  421cd2:	cld    
  421cd3:	add    BYTE PTR [eax],al
  421cd5:	add    BYTE PTR [eax],al
  421cd7:	repz sbb eax,0x8c2d88b1
  421cdd:	mov    bl,0x3
  421cdf:	push   0xffffffe9
  421ce1:	out    0xf,eax
  421ce3:	jbe    0x421d42
  421ce5:	cwde   
  421ce6:	sahf   
  421ce7:	inc    esp
  421ce8:	cmp    dh,ah
  421cea:	adc    eax,0x30dd1db3
  421cef:	or     al,0x1e
  421cf1:	add    BYTE PTR ds:0x3cf76,cl
  421cf7:	repz les edx,FWORD PTR [ebx+ecx*1-0x68185e92]
  421cff:	repz sbb eax,0x62785000
  421d05:	lock imul edx,edx,0xfc43c4c5
  421d0c:	jmp    0x421c92
  421d0e:	mov    edi,0xfcdfa9e4
  421d13:	in     al,dx
  421d14:	stc    
  421d15:	sar    BYTE PTR [edi+0x38162d33],cl
  421d1b:	mov    ch,0x19
  421d1d:	test   DWORD PTR [edi-0x76ffe00d],esp
  421d23:	pop    DWORD PTR [eax+eax*4-0x1]
  421d27:	les    esp,FWORD PTR [eax]
  421d29:	mov    eax,DWORD PTR [ebx+0x36b0717]
  421d2f:	repz push es
  421d31:	push   ecx
  421d32:	add    eax,DWORD PTR [ebp+0x7e]
  421d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d36:	mov    ah,BYTE PTR [eax-0x15]
  421d39:	pop    esi
  421d3a:	add    eax,DWORD PTR [eax]
  421d3c:	add    BYTE PTR [eax],al
  421d3e:	repz push es
  421d40:	jo     0x421d99
  421d42:	rol    BYTE PTR [edx+0x7ff303e6],1
  421d48:	jp     0x421d31
  421d4a:	je     0x421d53
  421d4c:	out    0x3,eax
  421d4e:	mov    esp,DWORD PTR [edx+0x7df30389]
  421d54:	xchg   esi,eax
  421d55:	xchg   BYTE PTR [esi-0x65],ah
  421d58:	add    eax,0x217dee8d
  421d5d:	adc    BYTE PTR [edx],bl
  421d5f:	mov    edi,0x7dcb96e2
  421d64:	xor    esp,esi
  421d66:	jnp    0x421d70
  421d68:	sbb    eax,0x6e0ab421
  421d6d:	fnstenv [ebx+ecx*8+0xa]
  421d71:	cmc    
  421d72:	dec    esp
  421d73:	jle    0x421cf8
  421d75:	and    DWORD PTR [edi],ebp
  421d77:	mov    ecx,0x1151863e
  421d7c:	dec    ebp
  421d7d:	sbb    DWORD PTR [eax-0x60fc0a16],0xffffffbc
  421d84:	cmp    eax,0xb186f0c4
  421d89:	or     esi,ebx
  421d8b:	fwait
  421d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d8d:	mov    ?,WORD PTR [eax+0x692ba6ea]
  421d93:	inc    edi
  421d94:	out    0x3,al
  421d96:	jo     0x421dde
  421d98:	in     eax,0x90
  421d9a:	je     0x421daf
  421d9c:	or     eax,0xb9e0cb20
  421da1:	sbb    DWORD PTR [eax],eax
  421da3:	add    BYTE PTR [eax],al
  421da5:	test   BYTE PTR ds:[edx-0xe0cf19],ch
  421dac:	push   cs
  421dad:	xor    BYTE PTR [edx],dl
  421daf:	cld    
  421db0:	xchg   DWORD PTR [edi-0x43],ebp
  421db3:	and    edi,DWORD PTR ds:0xe8ff4a17
  421db9:	lock test al,0x28
  421dbc:	mov    eax,ds:0xd6be5bf4
  421dc1:	fucomip st,st(6)
  421dc3:	mov    edi,0xe707cf6a
  421dc8:	pop    ss
  421dc9:	in     al,dx
  421dca:	adc    bh,ah
  421dcc:	push   ds
  421dcd:	xlat   BYTE PTR ds:[ebx]
  421dce:	aad    0xa2
  421dd0:	scas   eax,DWORD PTR es:[edi]
  421dd1:	fcom   QWORD PTR [edx]
  421dd3:	mov    bl,0xcd
  421dd5:	jo     0x421de8
  421dd7:	cld    
  421dd8:	jmp    0x97e507f5
  421ddd:	add    al,0xb3
  421ddf:	pop    ebp
  421de0:	pop    ecx
  421de1:	imul   BYTE PTR [edi+0x47328c88]
  421de7:	or     ebp,ecx
  421de9:	in     eax,dx
  421dea:	xchg   ebp,eax
  421deb:	and    esp,ebp
  421ded:	jno    0x421d9a
  421def:	add    ebp,ecx
  421df1:	fst    QWORD PTR [ebp-0x34510add]
  421df7:	pop    es
  421df8:	call   0xdb53063
  421dfd:	pop    ds
  421dfe:	sub    ecx,eax
  421e00:	pop    ecx
  421e01:	std    
  421e02:	adc    al,BYTE PTR [ebx+0x31087b29]
  421e08:	sub    DWORD PTR [eax],eax
  421e0a:	add    BYTE PTR [eax],al
  421e0c:	sub    bl,cl
  421e0e:	add    edx,edx
  421e10:	mov    al,0x1a
  421e12:	xlat   BYTE PTR ds:[ebx]
  421e13:	sub    esp,ebx
  421e15:	push   es
  421e16:	push   ebx
  421e17:	jb     0x421ddc
  421e19:	rcl    BYTE PTR [eax-0x26],0x29
  421e1d:	fstp   DWORD PTR [edx-0x7]
  421e20:	mov    eax,DWORD PTR [ebx]
  421e22:	mov    DWORD PTR [eax+ebp*8+0x63001787],esp
  421e29:	push   ebx
  421e2a:	add    BYTE PTR [ecx+0x1affc92],cl
  421e30:	icebp  
  421e31:	pop    esp
  421e32:	push   edx
  421e33:	push   edi
  421e34:	push   ecx
  421e35:	es ins BYTE PTR es:[edi],dx
  421e37:	adc    cl,BYTE PTR [edx]
  421e39:	or     ecx,DWORD PTR [edi+0x53]
  421e3c:	jmp    0xaab81994
  421e41:	icebp  
  421e42:	jno    0x421e50
  421e44:	fldenv [edx-0x1b]
  421e47:	std    
  421e48:	mov    al,BYTE PTR [ebx+edi*8]
  421e4b:	xlat   BYTE PTR ds:[ebx]
  421e4c:	add    esp,esi
  421e4e:	aaa    
  421e4f:	repz mov esp,0x8b468920
  421e55:	push   esp
  421e56:	in     al,0x8f
  421e58:	es repnz sti 
  421e5b:	mov    DWORD PTR [edi],edx
  421e5d:	out    0x37,eax
  421e5f:	ret    
  421e60:	push   es
  421e61:	adc    DWORD PTR [edi+0x53],ecx
  421e64:	and    al,0x5b
  421e66:	sti    
  421e67:	jne    0x421ea3
  421e69:	icebp  
  421e6a:	jno    0x421e78
  421e6c:	jmp    0x14003d3
  421e71:	add    BYTE PTR [eax],al
  421e73:	pop    edx
  421e74:	add    al,0xfb
  421e76:	xlat   BYTE PTR ds:[ebx]
  421e77:	or     edx,0x6ecd0c70
  421e7d:	clc    
  421e7e:	call   0x3cc623
  421e83:	or     bl,cl
  421e85:	out    0x16,eax
  421e87:	xchg   ecx,eax
  421e88:	ss clc 
  421e8a:	mov    eax,DWORD PTR [edi-0x4]
  421e8d:	xchg   DWORD PTR [ebx+ecx*1],ebx
  421e90:	add    DWORD PTR [ebx+ecx*4],0x4f
  421e94:	adc    al,0x85
  421e96:	dec    eax
  421e97:	push   ss
  421e98:	sub    DWORD PTR [eax+ecx*1-0x66],0xa
  421e9d:	pop    ebx
  421e9e:	pop    esi
  421e9f:	mov    cl,0xc2
  421ea1:	mov    esi,0x891df30c
  421ea6:	dec    ebx
  421ea7:	pop    ss
  421ea8:	sub    BYTE PTR es:[ebx-0x7fe1f848],ch
  421eaf:	retf   
  421eb0:	adc    BYTE PTR [ebx+eax*1+0xd29de01],dl
  421eb7:	and    esp,DWORD PTR [ecx]
  421eb9:	xchg   ebp,eax
  421eba:	and    esp,edi
  421ebc:	sub    BYTE PTR [edi-0x4aca00dd],dl
  421ec2:	cld    
  421ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ec4:	cmp    BYTE PTR [ecx+0x7],al
  421ec7:	repz fiadd DWORD PTR [esi+0x33972eb]
  421ece:	add    dh,bl
  421ed0:	sbb    eax,0xc41c55af
  421ed5:	add    DWORD PTR [eax+0x0],ebp
  421ed8:	add    BYTE PTR [eax],al
  421eda:	or     DWORD PTR [edi+0x6568846e],0x2b
  421ee1:	mov    ds:0x301a6fa2,al
  421ee6:	dec    eax
  421ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ee8:	ret    0x1807
  421eeb:	pop    ebp
  421eec:	or     al,BYTE PTR [ebp+ebp*8+0x7e00001e]
  421ef3:	fiadd  DWORD PTR [ebx]
  421ef5:	inc    BYTE PTR [eax+ebx*4+0x2b]
  421ef9:	fisttp QWORD PTR [edx-0x60]
  421efc:	sbb    cl,BYTE PTR [eax+0x4a7ed7ae]
  421f02:	das    
  421f03:	mov    al,0xc
  421f05:	add    bl,dh
  421f07:	popf   
  421f08:	add    edx,DWORD PTR [eax-0x20]
  421f0b:	fstp   st(3)
  421f0d:	pop    edx
  421f0e:	jmp    0x421f28
  421f10:	jne    0x421ed1
  421f12:	jo     0x421ef1
  421f14:	dec    BYTE PTR [edi-0x67]
  421f17:	push   ds
  421f18:	test   al,0xff
  421f1a:	cld    
  421f1b:	sbb    al,0x40
  421f1d:	mov    ch,BYTE PTR [esi+eax*1-0x3b864c09]
  421f24:	sbb    ch,BYTE PTR [esi+edx*8]
  421f27:	add    dl,BYTE PTR [esi]
  421f29:	sbb    eax,0x87dd4770
  421f2e:	xchg   BYTE PTR [edi],al
  421f30:	out    0x3,eax
  421f32:	js     0x421ef8
  421f34:	cli    
  421f35:	mov    bl,0x79
  421f37:	xchg   esp,eax
  421f38:	imul   BYTE PTR [ebx]
  421f3a:	cli    
  421f3b:	cli    
  421f3c:	in     eax,dx
  421f3d:	sbb    al,0x0
  421f3f:	add    BYTE PTR [eax],al
  421f41:	jo     0x421f8a
  421f43:	cmc    
  421f44:	xchg   DWORD PTR [edx-0x23fc18f9],ecx
  421f4a:	stos   DWORD PTR es:[edi],eax
  421f4b:	ficom  DWORD PTR [ebp+esi*8-0x6bebb479]
  421f52:	push   cs
  421f53:	out    0xf3,al
  421f55:	add    dl,dh
  421f57:	sbb    DWORD PTR [ecx+0x202b7c23],esi
  421f5d:	xchg   esp,eax
  421f5e:	jg     0x421f3a
  421f60:	sbb    al,0x77
  421f62:	and    DWORD PTR [esi+0x130df997],0x20
  421f69:	addr16 hlt 
  421f6b:	push   ds
  421f6c:	repnz sbb al,0x7
  421f6f:	fs inc ebx
  421f71:	loope  0x421f64
  421f73:	jae    0x421f3b
  421f75:	dec    eax
  421f76:	pop    ds
  421f77:	imul   ecx,DWORD PTR [eax],0x46
  421f7a:	push   cs
  421f7b:	das    
  421f7c:	sub    eax,0x8ee60e3d
  421f81:	jno    0x421f8a
  421f83:	gs sbb al,0x2f
  421f86:	jg     0x421f86
  421f88:	ret    
  421f89:	lods   eax,DWORD PTR ds:[esi]
  421f8a:	xchg   ebx,eax
  421f8b:	push   eax
  421f8c:	sub    BYTE PTR [esi+0x171fa381],cl
  421f92:	xchg   esp,eax
  421f93:	push   eax
  421f94:	cmp    BYTE PTR [ecx+0xcb33d0a],0xc5
  421f9b:	dec    DWORD PTR [esi+0x2a3906f0]
  421fa1:	pop    ebp
  421fa2:	in     eax,dx
  421fa3:	push   eax
  421fa4:	adc    DWORD PTR [eax],eax
  421fa6:	add    BYTE PTR [eax],al
  421fa8:	lods   eax,DWORD PTR ds:[esi]
  421fa9:	or     eax,0xc875e9fc
  421fae:	sti    
  421faf:	add    DWORD PTR [eax+0x390efcfe],ebx
  421fb5:	sbb    al,0xfe
  421fb7:	call   0xe9c4a1ac
  421fbc:	out    0xa,al
  421fbe:	cld    
  421fbf:	popa   
  421fc0:	mov    eax,0xda7446cd
  421fc5:	push   ds
  421fc6:	ss jo  0x421f79
  421fc9:	add    DWORD PTR [ebx+0x39260b24],ecx
  421fcf:	loop   0x421fca
  421fd1:	or     dh,BYTE PTR [esi+0x6eebf]
  421fd7:	je     0x42204b
  421fd9:	or     eax,0x85e8befa
  421fde:	pop    ss
  421fdf:	sub    DWORD PTR [esi-0x11860668],ebp
  421fe5:	pop    ds
  421fe6:	sbb    BYTE PTR [edx+esi*1+0x11],dh
  421fea:	out    0xfc,eax
  421fec:	cmc    
  421fed:	or     edi,esp
  421fef:	push   eax
  421ff0:	or     DWORD PTR ds:0x886be9fc,ecx
  421ff6:	inc    DWORD PTR [esi-0x1e78f518]
  421ffc:	xor    ah,al
  421ffe:	jb     0x422073
  422000:	and    eax,0x740f5c4d
  422005:	inc    esp
  422006:	shr    ebp,0xf0
  422009:	mov    ecx,0x4d88
  42200e:	add    BYTE PTR [esi+0x21],ch
  422011:	repz call 0x1a932707
  422017:	aam    0xb3
  422019:	add    BYTE PTR ss:[ebp+0x5],dl
  42201d:	je     0x422078
  42201f:	repnz dec edi
  422021:	add    al,0x75
  422023:	std    
  422024:	jge    0x421fd7
  422026:	adc    ah,al
  422028:	icebp  
  422029:	sti    
  42202a:	call   0x3dfb81
  42202f:	ror    DWORD PTR [edi-0x2a],cl
  422032:	ja     0x422003
  422034:	sub    ebx,DWORD PTR [ecx-0x2a]
  422037:	jl     0x42204c
  422039:	xchg   DWORD PTR [edi-0x3a],ebx
  42203c:	jg     0x42207f
  42203e:	(bad)  
  42203f:	push   0x58
  422041:	dec    esp
  422042:	push   eax
  422043:	repnz push cs
  422045:	or     bh,bh
  422047:	lds    esi,FWORD PTR ds:0x3c4b9d7
  42204d:	add    BYTE PTR [eax],al
  42204f:	pop    ss
  422050:	xchg   DWORD PTR [esi+edi*8],ecx
  422053:	(bad)
  422056:	sbb    dl,cl
  422058:	cmp    DWORD PTR [ecx-0x6],esi
  42205b:	add    DWORD PTR [ecx+0x8],edi
  42205e:	cmp    ecx,DWORD PTR [ecx+0x7c]
  422061:	add    eax,ebp
  422063:	in     eax,dx
  422064:	add    al,BYTE PTR [eax]
  422066:	add    BYTE PTR [ebx],dl
  422068:	push   ecx
  422069:	or     BYTE PTR [eax],bh
  42206b:	mov    bh,0xfa
  42206d:	jae    0x422078
  42206f:	xlat   BYTE PTR ds:[ebx]
  422070:	dec    eax
  422071:	or     al,0x50
  422073:	add    BYTE PTR [eax],al
  422075:	add    BYTE PTR [edx-0x80],dh
  422078:	or     bh,bh
  42207a:	gs jge 0x4220c0
  42207d:	or     BYTE PTR [ecx],dh
  42207f:	lds    esi,FWORD PTR [eax+0x9]
  422082:	jmp    0x8508:0x4ad3ccda
  422089:	pop    edi
  42208a:	push   edx
  42208b:	dec    esi
  42208c:	push   edi
  42208d:	leave  
  42208e:	fmul   DWORD PTR [ebx]
  422090:	cld    
  422091:	mov    cl,BYTE PTR [eax*4+0x29f3fff4]
  422098:	or     eax,0x1323383
  42209d:	push   eax
  42209e:	or     al,0x2b
  4220a0:	in     al,0x11
  4220a2:	mov    bl,0x1d
  4220a4:	(bad)  
  4220a5:	lds    ecx,FWORD PTR [ebx]
  4220a7:	inc    edi
  4220a8:	or     bh,ch
  4220aa:	hlt    
  4220ab:	jae    0x4220d5
  4220ad:	outs   dx,DWORD PTR ds:[esi]
  4220ae:	xchg   ecx,eax
  4220af:	jecxz  0x4220ca
  4220b1:	mov    BYTE PTR [ebp-0x30775020],ch
  4220b7:	mov    al,ds:0xa0f307a1
  4220bc:	mov    eax,ds:0x249ef30b
  4220c1:	pop    ss
  4220c2:	icebp  
  4220c3:	sbb    eax,0xa3255100
  4220c8:	dec    edi
  4220c9:	jmp    0x8a583d84
  4220ce:	dec    esp
  4220cf:	push   cs
  4220d0:	sub    BYTE PTR ds:0x2162c9b,dl
  4220d6:	popa   
  4220d7:	push   ds
  4220d8:	add    BYTE PTR [eax],al
  4220da:	add    BYTE PTR [eax],al
  4220dc:	add    BYTE PTR [ecx],cl
  4220de:	adc    dh,BYTE PTR [eax-0x736d0c97]
  4220e4:	xlat   BYTE PTR ds:[ebx]
  4220e5:	jo     0x42213c
  4220e7:	push   ss
  4220e8:	out    0xfd,eax
  4220ea:	jno    0x422105
  4220ec:	cld    
  4220ed:	outs   dx,BYTE PTR ds:[esi]
  4220ee:	pop    ebp
  4220ef:	cdq    
  4220f0:	adc    al,0x78
  4220f2:	pop    ebx
  4220f3:	mov    bl,0x67
  4220f5:	jnp    0x4220b2
  4220f7:	ret    0xc1ff
  4220fa:	test   DWORD PTR [esi-0x67],ebp
  4220fd:	repz sbb eax,0xaafcbf7d
  422103:	inc    ebx
  422104:	xor    DWORD PTR [ebx],0x12
  422107:	std    
  422108:	xor    BYTE PTR [ebx],dh
  42210a:	sti    
  42210b:	mov    BYTE PTR [eax],al
  42210d:	jp     0x42209a
  42210f:	add    BYTE PTR [eax],al
  422111:	repz push es
  422113:	je     0x422194
  422115:	sbb    cl,BYTE PTR [ecx]
  422117:	pop    ebp
  422118:	sbb    DWORD PTR [esi],esi
  42211a:	push   es
  42211b:	out    0xc3,eax
  42211d:	lods   eax,DWORD PTR ds:[esi]
  42211e:	xchg   ecx,eax
  42211f:	dec    edi
  422120:	mov    edx,0x4aa1437b
  422125:	xor    esi,DWORD PTR [ecx+0x22732871]
  42212b:	or     DWORD PTR cs:[eax],0x6
  42212f:	jmp    0xabc01437
  422134:	or     esp,DWORD PTR [edx]
  422136:	inc    eax
  422137:	mov    ah,0xb0
  422139:	jne    0x4220f6
  42213b:	retf   0x1a07
  42213e:	dec    eax
  42213f:	xchg   edx,eax
  422140:	add    eax,0x74000000
  422145:	call   DWORD PTR [edi+0x521fb38c]
  42214b:	pop    ss
  42214c:	mov    edi,0xe7446a0a
  422151:	or     BYTE PTR [ebp+0x4],0xf3
  422155:	push   es
  422156:	je     0x4220e7
  422158:	shr    dh,1
  42215a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42215b:	mov    edi,0x2be6f6d0
  422160:	data16 and cl,ch
  422163:	sbb    BYTE PTR [ebx-0x6a],bh
  422166:	repnz sub eax,DWORD PTR [ebx+0x64]
  42216a:	out    0x3,al
  42216c:	ja     0x4221b5
  42216e:	cmp    bl,BYTE PTR [edi-0x79257195]
  422174:	jo     0x422159
  422176:	dec    esi
  422177:	add    esi,ebx
  422179:	push   es
  42217a:	aaa    
  42217b:	xchg   DWORD PTR [eax+0x4cb3f6e2],esi
  422181:	cli    
  422182:	inc    esp
  422183:	add    esi,ebx
  422185:	and    BYTE PTR [esi-0xd824771],0xdf
  42218c:	call   0x1537210c
  422191:	test   BYTE PTR [esi-0x1809b30b],0xc5
  422198:	dec    esp
  422199:	or     bh,ah
  42219b:	gs mov al,0x94
  42219e:	pop    ss
  42219f:	ins    BYTE PTR es:[edi],dx
  4221a0:	add    dl,BYTE PTR [esi+0x22224e0a]
  4221a6:	jl     0x422130
  4221a8:	add    BYTE PTR [eax],al
  4221aa:	add    dl,ch
  4221ac:	or     dl,BYTE PTR [ebp+0x51]
  4221af:	pop    ecx
  4221b0:	imul   edi,ebp,0x23a66f36
  4221b6:	(bad)  
  4221b8:	pop    ds
  4221b9:	and    esi,DWORD PTR [edx-0x5b]
  4221bc:	add    DWORD PTR [ebx-0x76fe93d7],eax
  4221c2:	mov    ds:0xc1467fec,al
  4221c7:	jns    0x4221ca
  4221c9:	mov    DWORD PTR [edx-0xeb88014],ebp
  4221cf:	imul   edi,esi,0x81eca988
  4221d5:	inc    eax
  4221d6:	in     eax,0xdf
  4221d8:	add    al,0xc6
  4221da:	sub    eax,0xddfef993
  4221df:	and    ebp,0xf
  4221e2:	(bad)  
  4221e3:	clc    
  4221e4:	and    DWORD PTR [eax],esi
  4221e6:	iret   
  4221e7:	in     al,0xa
  4221e9:	mov    dh,0xd7
  4221eb:	out    dx,al
  4221ec:	push   es
  4221ed:	add    BYTE PTR [ebx+esi*4-0x1b],ch
  4221f1:	pop    ss
  4221f2:	scas   eax,DWORD PTR es:[edi]
  4221f3:	out    dx,eax
  4221f4:	push   es
  4221f5:	inc    eax
  4221f6:	and    BYTE PTR [edx+0x532d8810],al
  4221fc:	std    
  4221fd:	pop    esp
  4221fe:	aas    
  4221ff:	push   0xf3ab5a24
  422204:	push   es
  422205:	push   ebx
  422206:	bound  ebx,QWORD PTR [ebx]
  422208:	xchg   ebx,esp
  42220a:	add    BYTE PTR [edx-0x7b],dh
  42220d:	call   0x42224e
  422212:	fstp   DWORD PTR [eax+0x53]
  422215:	call   0x3e5db0
  42221a:	or     bl,bl
  42221c:	ja     0x4221fc
  42221e:	sbb    al,BYTE PTR ds:0xcd97d887
  422224:	or     eax,DWORD PTR [edx+ebp*8-0x50fffffd]
  42222b:	outs   dx,BYTE PTR ds:[esi]
  42222c:	and    BYTE PTR [eax],dl
  42222e:	or     DWORD PTR [esi+0x20],0x10
  422232:	mov    ds:0xa0067c9,al
  422237:	mov    DWORD PTR [edi+ecx*1-0x30eaa],edi
  42223e:	fidivr DWORD PTR [edi+0x70]
  422241:	and    al,0xb6
  422243:	fdiv   QWORD PTR [ebx+0x6a04ca6c]
  422249:	and    DWORD PTR [ecx-0x37],edx
  42224c:	dec    esp
  42224d:	push   0x62
  42224f:	push   ebp
  422250:	in     al,0x69
  422252:	adc    BYTE PTR [ebx],al
  422254:	add    BYTE PTR [edx+ecx*1-0x651f7c00],al
  42225b:	add    al,0x0
  42225d:	mov    edx,DWORD PTR [ebp+0x54]
  422260:	in     al,0x1b
  422262:	add    eax,DWORD PTR cs:[eax]
  422265:	test   BYTE PTR [edx+0x1],cl
  422268:	test   al,dl
  42226a:	call   0x1026:0xc68d0004
  422271:	call   0x3e8402
  422276:	add    BYTE PTR [eax],al
  422278:	add    BYTE PTR [eax],dh
  42227a:	inc    BYTE PTR [esi+0x695d0ac6]
  422280:	push   ebx
  422281:	sub    BYTE PTR ds:0x884a00d6,0xbc
  422288:	psllq  mm3,QWORD PTR [ecx+0x1e4cff4e]
  42228f:	xchg   DWORD PTR [ebx+0xf],eax
  422292:	cs mov al,0xe7
  422295:	cmc    
  422296:	or     eax,DWORD PTR [eax]
  422298:	add    BYTE PTR [eax-0x72],ch
  42229b:	jg     0x422292
  42229d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42229e:	cmp    edx,DWORD PTR ds:0xaa0dcf73
  4222a4:	imul   ecx,DWORD PTR [esp+ecx*2+0x1e391528],0x627b5600
  4222af:	fcom   QWORD PTR [eax]
  4222b1:	sbb    eax,DWORD PTR [eax+0x60]
  4222b4:	std    
  4222b5:	cld    
  4222b6:	popf   
  4222b7:	xchg   esp,eax
  4222b8:	and    esp,esp
  4222ba:	sbb    eax,0x1d738405
  4222bf:	add    BYTE PTR [eax],al
  4222c1:	jae    0x422325
  4222c3:	or     BYTE PTR [eax],al
  4222c5:	addr16 jo 0x42224f
  4222c8:	inc    ebx
  4222c9:	femms  
  4222cb:	mov    al,0xe7
  4222cd:	push   edi
  4222ce:	mov    DWORD PTR [eax],eax
  4222d0:	add    BYTE PTR [eax+0xd],bh
  4222d3:	jl     0x4222ca
  4222d5:	inc    edi
  4222d6:	sub    BYTE PTR ds:0xaa2e0f73,dl
  4222dc:	imul   eax,DWORD PTR [eax],0x6d1d0000
  4222e2:	sub    ch,bl
  4222e4:	retf   0x1d
  4222e7:	push   esi
  4222e8:	imul   esp,ecx,0xffffffdf
  4222eb:	adc    BYTE PTR [ebx-0x73029c29],cl
  4222f1:	popf   
  4222f2:	xchg   edi,eax
  4222f3:	and    esi,esp
  4222f5:	sbb    eax,0xc96e4b8c
  4222fa:	fist   WORD PTR [ebx]
  4222fc:	mov    ebp,DWORD PTR [ebx]
  4222fe:	mov    edi,?
  422300:	ins    BYTE PTR es:[edi],dx
  422301:	ret    
  422302:	xrelease mov BYTE PTR [esi+eax*1],ch
  422306:	aaa    
  422307:	stos   BYTE PTR es:[edi],al
  422308:	int3   
  422309:	mov    bl,0x8e
  42230b:	dec    ebp
  42230c:	cmp    eax,0x8c7fe706
  422311:	xchg   edx,eax
  422312:	fadd   DWORD PTR [esi-0x4c291d50]
  422318:	push   esp
  422319:	cmp    eax,0x7bf303f2
  42231e:	jbe    0x42239f
  422320:	es xchg edx,eax
  422322:	int3   
  422323:	adc    al,0xa0
  422325:	loop   0x42231d
  422327:	lods   eax,DWORD PTR ds:[esi]
  422328:	mov    dl,BYTE PTR [ebp+0x2d7e2bb9]
  42232e:	out    0x3,al
  422330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422331:	jle    0x4222d5
  422333:	(bad)  
  422335:	push   ds
  422336:	inc    esp
  422337:	jne    0x422337
  422339:	push   es
  42233a:	cbw    
  42233c:	shl    bh,1
  42233e:	out    0x8f,al
  422340:	lock xchg ecx,eax
  422342:	sub    DWORD PTR es:[eax],eax
  422345:	add    BYTE PTR [eax],al
  422347:	test   DWORD PTR ds:0xa6c82bd7,0xef43151b
  422351:	or     esi,DWORD PTR [ebp-0x32]
  422354:	push   es
  422355:	xlat   BYTE PTR ds:[ebx]
  422356:	inc    ebx
  422357:	daa    
  422358:	gs sahf 
  42235a:	mov    cl,dl
  42235c:	fs daa 
  42235e:	add    bl,dh
  422360:	pop    ebx
  422361:	pop    esi
  422362:	sub    BYTE PTR [ebx-0x15],dh
  422365:	icebp  
  422366:	sbb    BYTE PTR [eax-0xcfc12d5],0x87
  42236d:	pop    esp
  42236e:	cld    
  42236f:	xchg   esp,eax
  422370:	push   es
  422371:	mov    al,BYTE PTR [ebx]
  422373:	and    bl,BYTE PTR [ebp+0x32]
  422376:	add    eax,0x3e86a72
  42237b:	repz out dx,al
  42237d:	add    esp,ecx
  42237f:	je     0x422387
  422381:	add    DWORD PTR [ecx],ebx
  422383:	pop    ds
  422384:	and    ebx,ebp
  422386:	jmp    0xdb1ab37b
  42238b:	pop    es
  42238c:	aas    
  42238d:	fucomi st,st(6)
  42238f:	aam    0x51
  422391:	add    ecx,ebp
  422393:	lock xchg ecx,eax
  422395:	inc    esp
  422396:	lds    edx,FWORD PTR [esi+edx*2-0x77]
  42239a:	and    eax,0x93e81e53
  42239f:	mov    al,BYTE PTR [esi]
  4223a1:	cld    
  4223a2:	ins    DWORD PTR es:[edi],dx
  4223a3:	mov    al,0x12
  4223a5:	test   al,al
  4223a7:	icebp  
  4223a8:	push   es
  4223a9:	add    BYTE PTR [eax+eax*1+0x0],dh
  4223ad:	add    BYTE PTR [edx+ebp*1+0x10],bl
  4223b1:	mov    ecx,0xe96c1bc8
  4223b6:	lock (bad) 
  4223b8:	lock adc dh,dh
  4223bb:	jns    0x4223db
  4223bd:	inc    esi
  4223be:	ins    BYTE PTR es:[edi],dx
  4223bf:	sub    dl,BYTE PTR [eax]
  4223c1:	xchg   edi,eax
  4223c2:	dec    edx
  4223c3:	jb     0x422414
  4223c5:	inc    ecx
  4223c6:	repz fld QWORD PTR [eax]
  4223c9:	jmp    0xcd86b164
  4223ce:	jecxz  0x4223bd
  4223d0:	addr16 jle 0x4223d1
  4223d3:	add    al,BYTE PTR [ecx+0x12ac95]
  4223d9:	fiadd  WORD PTR [ebx+edi*8+0x0]
  4223dd:	jmp    0xc5b6b5d2
  4223e2:	mov    eax,0xf084a7ed
  4223e7:	push   es
  4223e8:	data16 fdivr QWORD PTR [ebx-0x35]
  4223ec:	push   eax
  4223ed:	push   ebx
  4223ee:	push   edx
  4223ef:	push   esi
  4223f0:	call   0xfc47ebb6
  4223f5:	ins    DWORD PTR es:[edi],dx
  4223f6:	aaa    
  4223f7:	adc    eax,DWORD PTR [eax+esi*4+0x6ef]
  4223fe:	and    BYTE PTR [edi],cl
  422400:	push   0xfbcb32c0
  422405:	imul   ebp,DWORD PTR [edi],0x82c1e3be
  42240b:	or     al,BYTE PTR [eax]
  42240d:	test   BYTE PTR [edx+0xc28409],cl
  422413:	add    BYTE PTR [eax],al
  422415:	dec    edx
  422416:	or     DWORD PTR [eax],eax
  422418:	push   0x5e
  42241a:	xchg   BYTE PTR [esi],bh
  42241c:	or     BYTE PTR [edx],cl
  42241e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42241f:	jne    0x422474
  422421:	bound  esp,QWORD PTR [ebp-0x2d]
  422424:	add    BYTE PTR [edx-0x73],cl
  422427:	mov    ebx,0xfb669e0f
  42242c:	call   FWORD PTR [edx]
  42242e:	shl    BYTE PTR [esi+0x18],cl
  422431:	cmp    al,0xff
  422433:	cld    
  422434:	jne    0x422428
  422436:	sbb    DWORD PTR [esi+0x14],ebp
  422439:	xor    BYTE PTR [eax+0x328ae850],ah
  42243f:	sti    
  422440:	dec    DWORD PTR [esi-0x647bf3b6]
  422446:	or     al,BYTE PTR [eax]
  422448:	add    bl,ah
  42244a:	xchg   edi,eax
  42244b:	pop    es
  42244c:	je     0x422413
  42244e:	sbb    DWORD PTR [esi+0xc],ebp
  422451:	and    BYTE PTR [ebx+0x3312e850],0xfb
  422458:	call   FWORD PTR [esi+0x4b]
  42245b:	outs   dx,DWORD PTR ds:[esi]
  42245c:	jge    0x422401
  42245e:	xchg   edi,eax
  42245f:	or     esi,DWORD PTR [ebp+eax*8+0x19]
  422463:	outs   dx,BYTE PTR ds:[esi]
  422464:	adc    BYTE PTR [eax-0x5e],ah
  422467:	push   eax
  422468:	call   0x3d576b
  42246d:	push   cs
  42246e:	dec    ebx
  42246f:	outs   dx,DWORD PTR ds:[esi]
  422470:	imul   esp,DWORD PTR [edi],0x4c281f94
  422476:	int3   
  422477:	pop    ds
  422478:	sldt   WORD PTR [eax]
  42247b:	add    bl,dh
  42247d:	in     eax,dx
  42247e:	pop    ss
  42247f:	push   esp
  422480:	xchg   ebp,edx
  422482:	push   cs
  422483:	imul   esi,edx,0xfee74678
  422489:	(bad)  
  42248a:	push   cs
  42248b:	cld    
  42248c:	ja     0x42243c
  42248e:	xchg   ebx,eax
  42248f:	das    
  422490:	jbe    0x42250c
  422492:	jecxz  0x4224d3
  422494:	icebp  
  422495:	in     eax,dx
  422496:	jmp    edi
  422498:	fimul  WORD PTR [ecx+0x1a78fc0e]
  42249e:	call   0xe3ac9ad6
  4224a3:	iret   
  4224a4:	icebp  
  4224a5:	in     eax,dx
  4224a6:	dec    DWORD PTR [edi-0x60]
  4224a9:	xchg   ebp,eax
  4224aa:	push   ecx
  4224ab:	sahf   
  4224ac:	repz in eax,dx
  4224ae:	ja     0x4224f3
  4224b0:	iret   
  4224b1:	in     al,0x4c
  4224b3:	in     eax,dx
  4224b4:	repnz in eax,dx
  4224b6:	dec    DWORD PTR [eax-0xd3d3]
  4224bc:	mov    bl,0xa6
  4224be:	cwde   
  4224bf:	neg    BYTE PTR [ecx-0x28847f13]
  4224c5:	sbb    DWORD PTR [ebx+ebp*2],ebx
  4224c8:	clc    
  4224c9:	inc    esp
  4224ca:	push   cs
  4224cb:	cld    
  4224cc:	and    BYTE PTR [esi-0x68],al
  4224cf:	popf   
  4224d0:	in     eax,0x34
  4224d2:	mov    dl,0xe7
  4224d4:	dec    esp
  4224d5:	mov    WORD PTR [ecx],ss
  4224d7:	cld    
  4224d8:	imul   ebp,DWORD PTR [ecx-0x1327f31d],0x300e
  4224e2:	add    bl,bl
  4224e4:	(bad)  
  4224e5:	jno    0x4224e4
  4224e7:	mov    esp,0x555b17a0
  4224ec:	add    edx,DWORD PTR [edx]
  4224ee:	xor    DWORD PTR [ebx+0x7858b19c],esi
  4224f4:	or     dh,BYTE PTR [eax-0x16f8f83f]
  4224fa:	mov    dh,0x6b
  4224fc:	repnz outs dx,BYTE PTR ds:[esi]
  4224fe:	or     dh,BYTE PTR [edx-0xe]
  422501:	cmp    eax,0xe8711fb5
  422506:	jle    0x422531
  422508:	mov    bl,0x18
  42250a:	mov    edx,0xb4badfc3
  42250f:	sbb    al,0x8a
  422511:	test   eax,0x248faf97
  422516:	pop    eax
  422517:	sbb    DWORD PTR [edi],eax
  422519:	jmp    0xdcba7981
  42251e:	retf   0xbea9
  422521:	sbb    al,0xcc
  422523:	mov    ah,0x8d
  422525:	and    al,0xc
  422527:	push   esp
  422528:	add    esp,DWORD PTR [ebp+0x12]
  42252b:	aaa    
  42252c:	pop    DWORD PTR [ecx-0x3f85d433]
  422532:	jl     0x422522
  422534:	xchg   ecx,eax
  422535:	sbb    al,0xc
  422537:	lods   eax,DWORD PTR ds:[esi]
  422538:	add    ebx,ebp
  42253a:	or     edi,DWORD PTR [edi-0x74ba5a4]
  422540:	mov    DWORD PTR [ecx],ebp
  422542:	xchg   edi,eax
  422543:	cmc    
  422544:	add    edx,ebp
  422546:	or     eax,DWORD PTR [eax]
  422548:	add    BYTE PTR [eax],al
  42254a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42254b:	add    edi,DWORD PTR [ebp-0x188f5c05]
  422551:	sbb    ecx,DWORD PTR [ecx]
  422553:	add    DWORD PTR [ebx],esi
  422555:	adc    DWORD PTR [edx-0x21],edi
  422558:	xchg   edx,eax
  422559:	sbb    ecx,esp
  42255b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42255c:	and    edx,DWORD PTR [ecx]
  42255e:	aaa    
  42255f:	lea    esp,[esi]
  422561:	lods   eax,DWORD PTR ds:[esi]
  422562:	mov    ch,0xc5
  422564:	in     eax,dx
  422565:	add    esp,DWORD PTR [eax]
  422567:	mov    ?,ebp
  422569:	test   al,cl
  42256b:	sbb    esp,DWORD PTR [esi-0x59]
  42256e:	mov    eax,0x317e9607
  422573:	pop    ds
  422574:	add    BYTE PTR [ecx+0x5c147503],bl
  42257a:	mov    ah,0xfa
  42257c:	push   eax
  42257d:	je     0x42252c
  42257f:	(bad)  
  422580:	push   eax
  422581:	shl    DWORD PTR [esi+0x6dd6fadc],1
  422587:	ret    0xe574
  42258a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42258b:	ret    0x32e7
  42258e:	test   BYTE PTR [eax+edi*8+0x12],0x34
  422593:	(bad)  
  422594:	jg     0x4225e2
  422596:	adc    eax,DWORD PTR [edx]
  422598:	jg     0x4225de
  42259a:	sti    
  42259b:	add    ecx,edx
  42259d:	mov    eax,ds:0x9d7603a0
  4225a2:	int    0x44
  4225a4:	in     al,dx
  4225a5:	cmp    edi,esp
  4225a7:	mov    al,0xf8
  4225a9:	mov    fs,ebx
  4225ab:	add    dh,BYTE PTR [esi-0x7b]
  4225ae:	add    BYTE PTR [eax],al
  4225b0:	add    BYTE PTR [esi-0x629c1727],dh
  4225b6:	add    edi,esp
  4225b8:	ins    DWORD PTR es:[edi],dx
  4225b9:	xlat   BYTE PTR ds:[ebx]
  4225ba:	jne    0x4225ce
  4225bc:	outs   dx,BYTE PTR ds:[esi]
  4225bd:	test   esi,esi
  4225bf:	sti    
  4225c0:	fdivr  st(4),st
  4225c2:	add    dh,BYTE PTR [esi-0x7]
  4225c5:	jecxz  0x42263b
  4225c7:	or     al,0x56
  4225c9:	pop    ebp
  4225ca:	or     ch,al
  4225cc:	xchg   ch,ch
  4225ce:	add    bh,ah
  4225d0:	jae    0x42259a
  4225d2:	add    dh,BYTE PTR [esi+0x4d]
  4225d5:	or     BYTE PTR [edx-0x63],bh
  4225d8:	aaa    
  4225d9:	add    edx,DWORD PTR [eax-0x38e66d41]
  4225df:	push   ebp
  4225e0:	jb     0x4225d6
  4225e2:	xchg   ah,ch
  4225e4:	in     eax,dx
  4225e5:	xchg   DWORD PTR [edx-0x5],ebx
  4225e8:	pushf  
  4225e9:	enter  0x7d8c,0x15
  4225ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225ee:	fsubp  st(0),st
  4225f0:	add    BYTE PTR [ecx-0x4],ch
  4225f3:	cld    
  4225f4:	call   DWORD PTR [esi]
  4225f6:	inc    esi
  4225f7:	outs   dx,DWORD PTR ds:[esi]
  4225f8:	and    eax,0x39f39b9d
  4225fd:	outs   dx,DWORD PTR ds:[esi]
  4225fe:	add    ebp,edi
  422600:	jne    0x4225b8
  422602:	jge    0x422642
  422604:	or     BYTE PTR [ebp-0x28f0f461],ch
  42260a:	iret   
  42260b:	pop    es
  42260c:	push   eax
  42260d:	xor    BYTE PTR ds:0x11af64e8,al
  422613:	cld    
  422614:	inc    DWORD PTR [eax]
  422616:	add    BYTE PTR [eax],al
  422618:	daa    
  422619:	pop    ds
  42261a:	mov    eax,ebx
  42261c:	xor    bl,bh
  42261e:	xchg   esi,eax
  42261f:	dec    BYTE PTR [ebp-0x4e3c764f]
  422625:	inc    ebx
  422626:	ror    DWORD PTR [edx+ebx*2],0xbe
  42262a:	mov    ah,ch
  42262c:	(bad)  [esi]
  42262e:	(bad)  
  422630:	dec    edx
  422631:	add    eax,0x12c15751
  422636:	xchg   BYTE PTR [ebp-0x3f282],al
  42263c:	or     ah,BYTE PTR [ebx+0x50a00f5]
  422642:	xor    ebx,ebx
  422644:	(bad)  
  422645:	call   DWORD PTR [ebx]
  422647:	adc    ebx,DWORD PTR [edx+0x5]
  42264a:	dec    eax
  42264b:	cmp    eax,0xaa7
  422650:	and    eax,0xb68586b0
  422655:	pop    ss
  422656:	cld    
  422657:	dec    DWORD PTR [edx+0x501063b5]
  42265d:	retf   
  42265e:	sti    
  42265f:	mov    WORD PTR [edi+0x27],ss
  422662:	clc    
  422663:	dec    DWORD PTR ds:0x6e15fcbb
  422669:	sti    
  42266a:	cmp    eax,DWORD PTR [eax]
  42266c:	repz jb 0x4226b3
  42266f:	jae    0x4226a3
  422671:	arpl   WORD PTR [ecx+0xb09b6f3],cx
  422677:	dec    edi
  422678:	fwait
  422679:	inc    ebx
  42267a:	cld    
  42267b:	cld    
  42267c:	add    BYTE PTR [eax],al
  42267e:	add    BYTE PTR [edx+esi*2+0x62e27344],ah
  422685:	mov    ebx,esi
  422687:	xchg   esi,eax
  422688:	jmp    0x2edd7597
  42268d:	(bad)  
  42268e:	inc    DWORD PTR [edx+esi*2-0x2f2d8cc1]
  422695:	cwde   
  422696:	pop    es
  422697:	push   0x7e500831
  42269c:	imul   edx,DWORD PTR [ebx],0xfffffffa
  42269f:	fs mov ecx,0xb0b3e7af
  4226a5:	or     bh,ah
  4226a7:	imul   eax,esi,0xa3478280
  4226ad:	or     bh,ah
  4226af:	mov    ds:0x3c077785,eax
  4226b4:	xchg   ecx,eax
  4226b5:	stos   BYTE PTR es:[edi],al
  4226b6:	mov    DWORD PTR [eax],esi
  4226b8:	and    eax,0xedf7c13d
  4226bd:	mov    eax,0x1b6f1788
  4226c2:	and    esi,ecx
  4226c4:	in     eax,dx
  4226c5:	call   DWORD PTR [ebp-0x44]
  4226c8:	push   ebp
  4226c9:	test   BYTE PTR [edx-0xd],0xed
  4226cd:	cdq    
  4226ce:	add    al,al
  4226d0:	cmp    ebp,DWORD PTR [esp+esi*8-0xe692fe]
  4226d7:	and    dl,0xb9
  4226da:	jae    0x4226d6
  4226dc:	sub    al,cl
  4226de:	imul   ebp
  4226e0:	in     eax,dx
  4226e1:	(bad)  
  4226e2:	inc    DWORD PTR [eax]
  4226e4:	add    BYTE PTR [eax],al
  4226e6:	enter  0x42dd,0x42
  4226ea:	fild   DWORD PTR [esi]
  4226ec:	in     eax,dx
  4226ed:	add    esi,ebx
  4226ef:	push   es
  4226f0:	push   cs
  4226f1:	push   es
  4226f2:	scas   al,BYTE PTR es:[edi]
  4226f3:	dec    ecx
  4226f4:	adc    DWORD PTR [ecx],eax
  4226f6:	repz push es
  4226f8:	jmp    0xacd41a96
  4226fd:	and    eax,0x99e96d3c
  422702:	repz pop esi
  422704:	add    DWORD PTR [eax-0x6616f8cf],ecx
  42270a:	(bad)  
  42270b:	pop    esi
  42270c:	dec    ebx
  42270d:	jnp    0x422740
  42270f:	jmp    0x42277d
  422711:	xchg   DWORD PTR [eax+0x2c0dd301],ebp
  422717:	mov    WORD PTR [esp+ecx*1],fs
  42271a:	jmp    0xf7461025
  42271f:	push   esi
  422720:	ins    BYTE PTR es:[edi],dx
  422721:	(bad)  
  422722:	push   eax
  422723:	push   esi
  422724:	jae    0x4227a2
  422726:	mov    es,WORD PTR [ebx-0x17]
  422729:	mov    ch,0xca
  42272b:	push   es
  42272c:	xchg   ecx,eax
  42272d:	dec    DWORD PTR [edi]
  42272f:	pop    es
  422730:	jmp    0x92cb63ad
  422735:	xchg   edi,eax
  422736:	lock xor al,0xa9
  422739:	sbb    DWORD PTR [edi],eax
  42273b:	xchg   edx,eax
  42273c:	sub    al,0x14
  42273e:	mov    esp,0xee0a9158
  422743:	push   DWORD PTR [edx-0x78]
  422746:	pop    esp
  422747:	jns    0x422721
  422749:	cdq    
  42274a:	add    BYTE PTR [eax],al
  42274c:	add    ah,ch
  42274e:	xchg   ecx,eax
  42274f:	lods   al,BYTE PTR ds:[esi]
  422750:	adc    ebx,DWORD PTR [edx-0x1ef346fa]
  422756:	cmp    bh,bl
  422758:	ret    
  422759:	cld    
  42275a:	and    DWORD PTR ds:0x4178f600,0x7f
  422761:	xor    edi,esi
  422763:	cdq    
  422764:	mov    ah,0x7b
  422766:	jl     0x422768
  422768:	loope  0x422762
  42276a:	inc    esp
  42276b:	in     eax,0x2e
  42276d:	out    0x5a,al
  42276f:	pop    edx
  422770:	xor    BYTE PTR [ecx],dh
  422772:	or     al,BYTE PTR [eax]
  422774:	mov    ah,0x4b
  422776:	repnz push ecx
  422778:	mov    eax,0x63f98f87
  42277d:	aaa    
  42277e:	inc    BYTE PTR [eax]
  422780:	jmp    0xfe8fb675
  422785:	sub    al,BYTE PTR [esi+0x6f0e801]
  42278b:	mov    BYTE PTR [esi+eiz*8+0x485dce88],bl
  422792:	(bad)  
  422793:	dec    ebp
  422794:	icebp  
  422795:	stos   DWORD PTR es:[edi],eax
  422796:	retf   
  422797:	dec    edi
  422798:	pusha  
  422799:	cmp    eax,0x773489f6
  42279e:	push   esp
  42279f:	cli    
  4227a0:	sub    al,0xfe
  4227a2:	or     dh,BYTE PTR [edx+0x148ff634]
  4227a8:	out    dx,eax
  4227a9:	lock pop ecx
  4227ab:	cli    
  4227ac:	fidivr WORD PTR [esi+0x73fa50]
  4227b2:	add    BYTE PTR [eax],al
  4227b4:	pop    esp
  4227b5:	std    
  4227b6:	cmp    ebp,0xffffffee
  4227b9:	mov    ss,WORD PTR [eax+ebp*8]
  4227bc:	aas    
  4227bd:	mov    ah,0xc
  4227bf:	out    0x37,eax
  4227c1:	mov    ah,0xce
  4227c3:	jmp    0xdd71:0x81558eea
  4227ca:	sti    
  4227cb:	jmp    0xddc82ec0
  4227d0:	icebp  
  4227d1:	cmp    BYTE PTR [ebx+eiz*1],cl
  4227d4:	(bad)
  4227d8:	inc    ebp
  4227d9:	push   es
  4227da:	jne    0x42280b
  4227dc:	dec    esi
  4227dd:	pop    edi
  4227de:	xchg   BYTE PTR [edi+eiz*8-0x25ff777b],bl
  4227e5:	or     BYTE PTR [eax],al
  4227e7:	add    BYTE PTR [eax-0x43],ah
  4227ea:	std    
  4227eb:	mov    BYTE PTR [edx+0x9],dl
  4227ee:	sti    
  4227ef:	dec    edx
  4227f1:	stos   BYTE PTR es:[edi],al
  4227f2:	ret    0xdec2
  4227f5:	or     DWORD PTR [ebp-0x75],edx
  4227f8:	adc    edx,edi
  4227fa:	ret    0xe585
  4227fd:	xchg   ebp,eax
  4227fe:	sbb    dl,BYTE PTR [ebx+0x7c]
  422801:	jle    0x4227f4
  422803:	sub    ebp,DWORD PTR [edx+0x21060f7e]
  422809:	scas   al,BYTE PTR es:[edi]
  42280a:	pop    ds
  42280b:	adc    BYTE PTR [eax-0xb],bl
  42280e:	adc    al,BYTE PTR [ecx+0x12]
  422811:	cli    
  422812:	cmp    BYTE PTR [esi+edi*8-0xa],cl
  422816:	outs   dx,BYTE PTR ds:[esi]
  422817:	add    al,BYTE PTR [eax]
  422819:	add    BYTE PTR [eax],al
  42281b:	jmp    0x1f91635b
  422820:	sub    bl,BYTE PTR [ebp+0x5b]
  422823:	lds    eax,FWORD PTR [ebx+eax*1+0x0]
  422827:	movd   edi,mm4
  42282a:	mov    ecx,DWORD PTR [edi]
  42282c:	sti    
  42282d:	sub    ah,0x56
  422830:	test   BYTE PTR [esi+0xc],dh
  422833:	dec    edx
  422834:	add    BYTE PTR [esi+0x95ad5],al
  42283a:	push   ebx
  42283b:	xlat   BYTE PTR ds:[ebx]
  42283c:	mov    bh,0xf3
  42283e:	push   esi
  42283f:	xor    DWORD PTR [ebx],edi
  422841:	push   esp
  422842:	mov    esp,DWORD PTR [ebx-0x64]
  422845:	add    dh,al
  422847:	fist   WORD PTR [ecx]
  422849:	sti    
  42284a:	mov    edi,ss
  42284c:	or     bl,BYTE PTR [ebp-0x7d]
  42284f:	daa    
  422850:	cmc    
  422851:	sti    
  422852:	jne    0x42288b
  422854:	jnp    0x422865
  422856:	setne  BYTE PTR [edi+0x104ffe07]
  42285d:	adc    DWORD PTR [ecx],0xfffffff3
  422860:	dec    eax
  422861:	add    eax,esi
  422863:	repnz out dx,eax
  422865:	les    ecx,FWORD PTR [ebp+0x66]
  422868:	dec    esp
  422869:	div    DWORD PTR [ebp-0x3184b9ca]
  42286f:	mov    dl,0x48
  422871:	add    cl,BYTE PTR [edx+0x3f7dd679]
  422877:	repz hlt 
  422879:	push   ecx
  42287a:	push   edx
  42287b:	retf   0x2571
  42287e:	add    BYTE PTR [eax],al
  422880:	add    BYTE PTR [eax],al
  422882:	push   0xefde4520
  422887:	cs push ss
  422889:	add    edi,eax
  42288b:	(bad)  
  42288c:	jge    0x42281b
  42288e:	or     edi,DWORD PTR [eax-0x3c]
  422891:	push   DWORD PTR [ecx+0x2d]
  422894:	add    eax,DWORD PTR [eax-0x77fb12ea]
  42289a:	fist   DWORD PTR ds:[ecx-0x476c0bec]
  4228a1:	stc    
  4228a2:	jo     0x422874
  4228a4:	idiv   BYTE PTR [esi-0x19bb0f6f]
  4228aa:	cmc    
  4228ab:	clc    
  4228ac:	cmp    eax,0x7de68289
  4228b1:	aas    
  4228b2:	repz enter 0xb205,0x16
  4228b7:	outs   dx,BYTE PTR ds:[esi]
  4228b8:	mov    ah,bh
  4228ba:	icebp  
  4228bb:	sbb    esi,edi
  4228bd:	or     al,0x7d
  4228bf:	sub    ecx,DWORD PTR [edx]
  4228c1:	adc    BYTE PTR [edx-0x2b],0x7d
  4228c5:	xchg   bl,bl
  4228c7:	addr16 mov edi,0x54f019ff
  4228cd:	cmp    dh,BYTE PTR [ebx-0x5]
  4228d0:	out    dx,eax
  4228d1:	jmp    DWORD PTR [eax+0x20b5f6ce]
  4228d7:	add    al,0x7d
  4228d9:	das    
  4228da:	cld    
  4228db:	push   es
  4228dc:	fwait
  4228dd:	nop
  4228de:	add    DWORD PTR [ebx+edx*4],ecx
  4228e1:	xor    eax,0xa120b4ef
  4228e6:	add    BYTE PTR [eax],al
  4228e8:	add    BYTE PTR [ebp+0x77],ch
  4228eb:	out    0xa1,eax
  4228ed:	jne    0x422945
  4228ef:	in     eax,dx
  4228f0:	mov    eax,ds:0x86e34e6d
  4228f5:	pushf  
  4228f6:	push   cs
  4228f7:	ds hlt 
  4228f9:	ins    BYTE PTR es:[edi],dx
  4228fa:	push   ds
  4228fb:	pop    edi
  4228fc:	test   al,0xc1
  4228fe:	mov    es,ecx
  422900:	add    al,0x7b
  422902:	push   esi
  422903:	out    0x7b,eax
  422905:	xor    al,0x8
  422907:	inc    bx
  422909:	lock xchg DWORD PTR [edi+esi*8-0x3495f354],ecx
  422911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422912:	sti    
  422913:	cli    
  422914:	test   eax,0xc0be603e
  422919:	in     al,dx
  42291a:	int    0x27
  42291c:	test   DWORD PTR [edx+edx*2-0x158ce792],0x8a27b4ed
  422927:	adc    eax,0xe1416a03
  42292c:	jl     0x422973
  42292e:	lea    ebp,[eax+edx*1]
  422931:	sub    ecx,esp
  422933:	jmp    0xbd03:0xe9068f84
  42293a:	aaa    
  42293b:	mov    bl,0xd5
  42293d:	and    bh,BYTE PTR [edi]
  42293f:	ret    0xb695
  422942:	cmp    BYTE PTR [eax-0x318eca80],dh
  422948:	cmp    DWORD PTR [ecx+0x7de90a],0x0
  42294f:	add    bl,bh
  422951:	jb     0x42293f
  422953:	test   BYTE PTR [ebx],dh
  422955:	or     BYTE PTR [esi+0x89b203],cl
  42295b:	sub    ah,al
  42295d:	aas    
  42295e:	dec    ebx
  42295f:	test   BYTE PTR [edi],0xa
  422962:	mov    dl,0x28
  422964:	test   DWORD PTR [ebx-0x4c88ccb],eax
  42296a:	out    0xeb,al
  42296c:	push   ds
  42296d:	les    eax,FWORD PTR [eax+eiz*1+0x40800d83]
  422974:	ror    DWORD PTR [ebp-0x6925d5bf],cl
  42297a:	shl    DWORD PTR [edi],0x18
  42297d:	sub    al,cl
  42297f:	repnz sbb edi,DWORD PTR [eax-0x3b]
  422983:	ins    DWORD PTR es:[edi],dx
  422984:	or     BYTE PTR [esi+0x3],dh
  422987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422988:	jmp    0x3ef2:0xc5a588c0
  42298f:	push   0xfffffffd
  422991:	add    eax,0xf424577c
  422996:	je     0x42294a
  422998:	push   ds
  422999:	dec    ebp
  42299a:	clc    
  42299b:	arpl   WORD PTR [ecx+esi*8-0x7a],dx
  42299f:	xchg   esp,eax
  4229a0:	stc    
  4229a1:	mov    ecx,0xe230ebe1
  4229a6:	add    al,0xf3
  4229a8:	xor    DWORD PTR [eax+0x44f8d34d],edx
  4229ae:	cld    
  4229af:	arpl   WORD PTR [ecx+0xefe1b9],si
  4229b5:	add    BYTE PTR [eax],al
  4229b7:	dec    bp
  4229b9:	imul   DWORD PTR [ecx-0x3e3ff9ea]
  4229bf:	out    dx,al
  4229c0:	or     al,0xbe
  4229c2:	popa   
  4229c3:	test   esp,edi
  4229c5:	lea    edi,[edi]
  4229c7:	cli    
  4229c8:	ss leave 
  4229ca:	jno    0x422a49
  4229cc:	std    
  4229cd:	test   DWORD PTR [ebx+0x1487156a],edi
  4229d3:	add    edx,DWORD PTR [eax+0x21f0044]
  4229d9:	cld    
  4229da:	inc    ebp
  4229db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229dc:	jge    0x4229e3
  4229de:	test   DWORD PTR [ebx-0x77],edx
  4229e1:	sti    
  4229e2:	inc    eax
  4229e3:	inc    ecx
  4229e4:	cmp    al,0x77
  4229e6:	jmp    0x4229b9
  4229e8:	das    
  4229e9:	or     al,0x82
  4229eb:	cmp    DWORD PTR [edi],ecx
  4229ed:	cld    
  4229ee:	(bad)  
  4229ef:	cmp    al,0x7b
  4229f1:	ds hlt 
  4229f3:	icebp  
  4229f4:	mov    ecx,0x3c915f03
  4229f9:	ror    DWORD PTR [eax],0xca
  4229fc:	mov    bh,0x88
  4229fe:	lock push eax
  422a00:	or     BYTE PTR [eax-0x5f3a6ff],cl
  422a06:	jne    0x4229ce
  422a08:	jo     0x422a44
  422a0a:	add    DWORD PTR [ecx-0x22b579ec],esp
  422a10:	jnp    0x422a21
  422a12:	push   es
  422a13:	enter  0xfcb5,0x88
  422a17:	retf   0x42c5
  422a1a:	jne    0x422a1c
  422a1c:	add    BYTE PTR [eax],al
  422a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a1f:	scas   al,BYTE PTR es:[edi]
  422a20:	sar    BYTE PTR [ecx],0x16
  422a23:	(bad)  
  422a25:	jae    0x4229d4
  422a27:	mov    dh,0xfc
  422a29:	je     0x422a21
  422a2b:	cli    
  422a2c:	push   ebp
  422a2d:	inc    DWORD PTR [edi-0x75bfea2b]
  422a33:	test   BYTE PTR [edi-0x34630f4],bh
  422a39:	test   DWORD PTR [edx+0xe8a0996],ebx
  422a3f:	sar    esp,cl
  422a41:	xor    BYTE PTR [esi-0x2b],cl
  422a44:	inc    ebx
  422a45:	jne    0x4229cb
  422a47:	inc    esp
  422a48:	(bad)  
  422a49:	inc    DWORD PTR [edi]
  422a4b:	jle    0x422a34
  422a4d:	push   ecx
  422a4e:	stc    
  422a4f:	aad    0xc2
  422a51:	push   esi
  422a52:	repz cmp BYTE PTR [edx+ecx*2+0x2c],bh
  422a57:	addr16 mov ecx,0x7c768dfd
  422a5d:	push   ebx
  422a5f:	out    dx,eax
  422a60:	dec    DWORD PTR [eax-0xfbcadd]
  422a66:	or     al,0xef
  422a68:	ja     0x422a77
  422a6a:	mov    dl,0xa9
  422a6c:	popf   
  422a6d:	cmp    BYTE PTR [ecx],ch
  422a6f:	fisttp QWORD PTR [edx]
  422a71:	mov    BYTE PTR [ebx],al
  422a73:	fs push es
  422a75:	or     al,0xa5
  422a77:	fwait
  422a78:	add    cl,BYTE PTR [eax+0xb79f646]
  422a7e:	cli    
  422a7f:	jae    0x422a6b
  422a81:	add    DWORD PTR [eax],eax
  422a83:	add    BYTE PTR [eax],al
  422a85:	test   eax,0xfcfdb8ee
  422a8a:	outs   dx,DWORD PTR ds:[esi]
  422a8b:	mov    ecx,0x50279fd
  422a90:	(bad)  
  422a91:	sbb    DWORD PTR ss:[ebp+ebx*1+0x6b],edi
  422a96:	cli    
  422a97:	add    al,0xd
  422a99:	gs fwait
  422a9b:	add    bh,BYTE PTR [eax]
  422a9d:	ss repnz nop
  422aa0:	add    esi,DWORD PTR [ebp+0x2eff02a3]
  422aa6:	mov    eax,ds:0x882ccc90
  422aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aac:	(bad)  
  422aad:	mov    cl,0xf6
  422aaf:	jmp    DWORD PTR [edi-0xf]
  422ab2:	out    dx,al
  422ab3:	(bad)  
  422ab4:	push   DWORD PTR [edx+ebx*2-0x20]
  422ab8:	pop    es
  422ab9:	jo     0x422a69
  422abb:	sti    
  422abc:	dec    edi
  422abd:	fs fcmovne st,st(7)
  422ac0:	adc    eax,0xc37eedb3
  422ac5:	out    0xab,eax
  422ac7:	sti    
  422ac8:	call   esp
  422aca:	jmp    0x422ad0
  422acc:	add    bl,dh
  422ace:	push   es
  422acf:	inc    bx
  422ad1:	lock push esi
  422ad3:	call   0xdcf0:0x920b108f
  422ada:	adc    BYTE PTR [ecx],ch
  422adc:	add    al,0x72
  422ade:	ret    
  422adf:	cmc    
  422ae0:	inc    ecx
  422ae1:	lock push es
  422ae3:	outs   dx,BYTE PTR ds:[esi]
  422ae4:	sti    
  422ae5:	jae    0x422ad5
  422ae7:	jmp    0x422b7b
  422aec:	cli    
  422aed:	dec    ebp
  422aee:	hlt    
  422aef:	hlt    
  422af0:	ins    DWORD PTR es:[edi],dx
  422af1:	ja     0x422ae0
  422af3:	jl     0x422aa1
  422af5:	push   cs
  422af6:	es mov cl,0x73
  422af9:	(bad)  
  422afa:	in     eax,dx
  422afb:	lods   eax,DWORD PTR ds:[esi]
  422afc:	aam    0x55
  422afe:	dec    edx
  422aff:	push   es
  422b00:	out    0xc3,eax
  422b02:	outs   dx,BYTE PTR ds:[esi]
  422b03:	sti    
  422b04:	jae    0x422af3
  422b06:	jmp    0xbd90389a
  422b0b:	bnd jae 0x422afb
  422b0e:	out    0x8f,al
  422b10:	repz xor al,0x29
  422b13:	inc    edx
  422b14:	imul   ecx,eax,0x6e
  422b17:	cmp    eax,0x613eccc
  422b1c:	scas   eax,DWORD PTR es:[edi]
  422b1d:	jmp    0x422b0a
  422b1f:	push   es
  422b20:	adc    al,0xf
  422b22:	outs   dx,BYTE PTR ds:[esi]
  422b23:	cmp    DWORD PTR [edi-0x51851a8a],ebx
  422b29:	mov    ebx,DWORD PTR [ebx]
  422b2b:	sbb    edx,DWORD PTR [eax-0x64fa1506]
  422b31:	or     esp,DWORD PTR [esi+0x44]
  422b34:	lock push eax
  422b36:	outs   dx,BYTE PTR ds:[esi]
  422b37:	mov    WORD PTR ss:[ebp-0x2b],ds
  422b3b:	add    eax,0x40e8b66f
  422b40:	jno    0x422b32
  422b42:	cmp    al,0x1
  422b44:	and    al,bh
  422b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b47:	jns    0x422b35
  422b49:	add    DWORD PTR [eax],0xffffffc0
  422b4c:	div    DWORD PTR [edx+0x3c]
  422b4f:	and    BYTE PTR [eax],al
  422b51:	add    BYTE PTR [eax],al
  422b53:	arpl   WORD PTR [ecx],sp
  422b55:	dec    ecx
  422b56:	sbb    eax,0xf974404e
  422b5b:	jns    0x422bd1
  422b5d:	out    0x62,al
  422b5f:	fisttp QWORD PTR [esi-0x204d9d35]
  422b65:	sahf   
  422b66:	xchg   esi,esi
  422b68:	cli    
  422b69:	out    0xb9,eax
  422b6b:	jp     0x422b64
  422b6d:	out    0xeb,al
  422b6f:	push   0xfffffff8
  422b71:	push   ebp
  422b72:	push   ss
  422b73:	mov    cl,dh
  422b75:	call   0xfc3d16af
  422b7a:	sub    ch,dh
  422b7c:	or     BYTE PTR [bp+si+0x25],ah
  422b80:	repz jo 0x422b68
  422b83:	imul   ecx,ebx,0xffffff87
  422b86:	sbb    bh,bh
  422b88:	cmp    esp,0xddeee3e
  422b8e:	push   0x37
  422b90:	or     cl,BYTE PTR [edi+0x62]
  422b93:	adc    eax,0xf611cb7f
  422b98:	out    dx,al
  422b99:	sti    
  422b9a:	push   ds
  422b9b:	cmp    cl,ah
  422b9d:	mov    edi,0x42a6b62
  422ba2:	bound  ebp,QWORD PTR [eax+0x4fb0495c]
  422ba8:	jg     0x422b9a
  422baa:	jne    0x422b4e
  422bac:	dec    ebp
  422bad:	jne    0x422b84
  422baf:	push   0x7
  422bb1:	das    
  422bb2:	sbb    edi,esp
  422bb4:	dec    ebx
  422bb5:	(bad)  
  422bb6:	aas    
  422bb7:	add    BYTE PTR [eax],al
  422bb9:	add    dh,ch
  422bbb:	in     al,0xc1
  422bbd:	leave  
  422bbe:	repnz fisttp WORD PTR ds:0xce37f243
  422bc5:	pop    esp
  422bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bc7:	or     BYTE PTR [ecx+0x0],bl
  422bca:	popf   
  422bcb:	sbb    DWORD PTR [edx-0x1c45b620],edi
  422bd1:	xchg   edi,eax
  422bd2:	lods   eax,DWORD PTR ds:[esi]
  422bd3:	or     edi,esp
  422bd5:	mov    eax,DWORD PTR [edx-0xe8b038b]
  422bdb:	outs   dx,DWORD PTR ds:[esi]
  422bdc:	aas    
  422bdd:	and    al,0x46
  422bdf:	adc    bl,BYTE PTR [edi-0x1]
  422be2:	test   DWORD PTR [ebx],ecx
  422be4:	jle    0x422ba6
  422be6:	(bad)  
  422be7:	cld    
  422be8:	mov    BYTE PTR [esi+ebp*1-0x6],cl
  422bec:	jle    0x422bb7
  422bee:	push   ds
  422bef:	or     BYTE PTR [ebx-0x17cd6eff],al
  422bf5:	or     ch,bl
  422bf7:	adc    cl,BYTE PTR [ebx+0x300a9497]
  422bfd:	shl    BYTE PTR ds:0xda08c1ac,0xa3
  422c04:	mov    cl,dh
  422c06:	push   ecx
  422c07:	repnz sub cl,0xca
  422c0b:	test   DWORD PTR [eax],ebp
  422c0d:	dec    ecx
  422c0e:	sahf   
  422c0f:	in     al,0x80
  422c11:	jmp    0x3241b1ef
  422c16:	sbb    ch,BYTE PTR [eax+eax*8-0x69183a9]
  422c1d:	call   0xc5422c22
  422c22:	or     edi,esp
  422c24:	jmp    DWORD PTR [ebp+0xe]
  422c27:	sbb    eax,0x88f18aff
  422c2c:	retf   0x99f5
  422c2f:	dec    DWORD PTR [edx-0x172a9134]
  422c35:	cld    
  422c36:	(bad)  
  422c37:	sti    
  422c38:	push   ecx
  422c3a:	out    dx,al
  422c3b:	add    al,0x8e
  422c3e:	dec    edi
  422c3f:	or     esi,0xffffffa2
  422c42:	push   ebp
  422c43:	repz push ebx
  422c46:	fdiv   QWORD PTR [ecx+eax*1+0x5356a0c5]
  422c4d:	push   0x680c284b
  422c52:	scas   al,BYTE PTR es:[edi]
  422c53:	mov    ebx,edi
  422c55:	(bad)  
  422c56:	jecxz  0x422c8a
  422c58:	rcr    BYTE PTR [eax+0x12],0x8b
  422c5c:	or     BYTE PTR [eax-0x6a],dh
  422c5f:	add    al,0x74
  422c61:	cld    
  422c62:	ss js  0x422c84
  422c65:	mov    edx,0x9f491213
  422c6a:	call   0x114ca1bb
  422c6f:	in     al,dx
  422c70:	rcl    DWORD PTR [esi],0x74
  422c73:	jmp    edi
  422c75:	ret    
  422c76:	or     DWORD PTR [edi+eiz*8],eax
  422c79:	icebp  
  422c7a:	or     DWORD PTR ds:0x8b246852,eax
  422c80:	(bad)  
  422c81:	or     ebx,DWORD PTR [eax+eax*1+0xfc]
  422c88:	in     al,dx
  422c89:	dec    ecx
  422c8a:	and    al,0xfb
  422c8c:	arpl   si,sp
  422c8e:	mov    cl,bl
  422c90:	fsubr  QWORD PTR [esi+0x56ad8703]
  422c96:	(bad)  
  422c97:	test   esp,0x210deb3d
  422c9d:	popa   
  422c9e:	les    eax,FWORD PTR [eax+ebp*2]
  422ca1:	xor    eax,0x12cbca8b
  422ca6:	cli    
  422ca7:	sti    
  422ca8:	lods   al,BYTE PTR ds:[esi]
  422ca9:	imul   eax,edi,0x820455b
  422caf:	add    BYTE PTR [eax-0x1c],ch
  422cb2:	mov    cl,BYTE PTR [edi+ecx*8-0xb]
  422cb6:	inc    edi
  422cb7:	dec    eax
  422cb8:	push   es
  422cb9:	loopne 0x422c8f
  422cbb:	jmp    0xb129bbdc
  422cc0:	gs pop es
  422cc2:	jecxz  0x422cc6
  422cc4:	imul   ebp,edi,0x64
  422cc7:	add    ah,dh
  422cc9:	adc    edx,edx
  422ccb:	ja     0x422cdc
  422ccd:	add    ebx,DWORD PTR [esi+0x57]
  422cd0:	pop    ss
  422cd1:	add    ebp,DWORD PTR [esi-0x2e]
  422cd4:	ins    BYTE PTR es:[edi],dx
  422cd5:	int    0xd1
  422cd7:	ja     0x422d21
  422cd9:	hlt    
  422cda:	mov    dl,0x88
  422cdc:	xor    edi,DWORD PTR [ebx-0x21]
  422cdf:	mov    BYTE PTR [ebx+edi*2],ah
  422ce2:	out    0x8c,eax
  422ce4:	xor    al,0x81
  422ce6:	mov    ds:0x815bfbee,al
  422ceb:	test   al,0x0
  422ced:	add    BYTE PTR [eax],al
  422cef:	xor    ebp,0x5433368a
  422cf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cf6:	or     esi,ebx
  422cf8:	repz mov ah,0xff
  422cfb:	dec    edx
  422cfc:	dec    eax
  422cfd:	jmp    0x6bdf8ced
  422d02:	add    al,bl
  422d04:	mov    BYTE PTR [esi-0x16b7c501],0xa6
  422d0b:	repz mov al,0xa6
  422d0e:	add    eax,DWORD PTR [esi+edi*8-0x380cb972]
  422d15:	pushf  
  422d16:	mov    es,edi
  422d18:	xchg   DWORD PTR [ebp+0x27],ecx
  422d1b:	jp     0x422d5e
  422d1d:	dec    ecx
  422d1e:	mov    ?,WORD PTR [esi]
  422d20:	call   FWORD PTR [edi+0x50]
  422d23:	xlat   BYTE PTR ds:[ebx]
  422d24:	jg     0x422cda
  422d26:	punpckhdq mm0,QWORD PTR [ecx+0x11]
  422d2a:	mov    ?,WORD PTR [esi]
  422d2c:	pop    ss
  422d2d:	pusha  
  422d2e:	push   eax
  422d2f:	xchg   edi,eax
  422d30:	xchg   DWORD PTR [ecx],esp
  422d32:	add    al,0x6e
  422d34:	inc    ecx
  422d35:	and    eax,0x1d49b069
  422d3a:	es aad 0x7d
  422d3d:	add    BYTE PTR [eax+ecx*4-0xdf2cf22],ch
  422d44:	repnz leave 
  422d46:	stos   DWORD PTR es:[edi],eax
  422d47:	jecxz  0x422d4f
  422d49:	push   ebp
  422d4a:	jb     0x422daf
  422d4c:	jae    0x422d3a
  422d4e:	std    
  422d4f:	outs   dx,DWORD PTR ds:[esi]
  422d50:	imul   esi,eax,0xe9
  422d56:	ja     0x422dc9
  422d58:	or     al,0xf1
  422d5a:	mov    edx,0xff3c8757
  422d5f:	enter  0xb645,0xef
  422d63:	jns    0x422d80
  422d65:	bound  ebp,QWORD PTR [edx+0x370c7f02]
  422d6b:	push   es
  422d6c:	test   DWORD PTR [ecx+0x26871aab],ebp
  422d72:	test   DWORD PTR [ebx+0x32779175],0xfe9cc231
  422d7c:	cli    
  422d7d:	and    al,0xf
  422d7f:	sub    eax,0xdf7d7145
  422d84:	xchg   esp,esi
  422d86:	loopne 0x422e05
  422d88:	push   ebp
  422d89:	pop    ebp
  422d8a:	outs   dx,BYTE PTR ds:[esi]
  422d8b:	cld    
  422d8c:	or     al,0xee
  422d8e:	jbe    0x422d94
  422d90:	add    ecx,ebp
  422d92:	lock mov DWORD PTR [edx],eax
  422d95:	push   0xffffffdf
  422d97:	add    ecx,DWORD PTR [ebx]
  422d99:	imul   ebx,esp,0x7
  422d9c:	add    cl,ch
  422d9e:	cmovl  esi,esp
  422da1:	out    0x7b,al
  422da3:	jecxz  0x422da5
  422da5:	jmp    0xed8cb79a
  422daa:	ins    DWORD PTR es:[edi],dx
  422dab:	inc    esp
  422dac:	or     al,0xee
  422dae:	je     0x422d6e
  422db0:	add    cl,ch
  422db2:	lock cmc 
  422db4:	shr    ecx,0xf0
  422db7:	push   es
  422db8:	rol    BYTE PTR [eax],0x0
  422dbb:	add    BYTE PTR [eax],al
  422dbd:	popf   
  422dbe:	mov    bh,BYTE PTR [ebx-0x7ff96600]
  422dc4:	jge    0x422e43
  422dc6:	push   es
  422dc7:	je     0x422dd5
  422dc9:	test   ebp,eax
  422dcb:	add    BYTE PTR [eax],al
  422dcd:	mov    al,BYTE PTR [esi+0x7]
  422dd0:	test   BYTE PTR [ebx-0x2efffffa],cl
  422dd6:	aam    0x81
  422dd8:	loop   0x422e24
  422dda:	push   es
  422ddb:	add    BYTE PTR [eax+0x45f70c16],al
  422de1:	mov    al,BYTE PTR [ebx+0x6f120c45]
  422de7:	dec    eax
  422de8:	dec    eax
  422de9:	push   es
  422dea:	xor    cl,BYTE PTR [eax+0x48]
  422ded:	(bad)  
  422dee:	xor    eax,0x7a16e87b
  422df3:	and    al,0x83
  422df5:	jb     0x422df5
  422df7:	jae    0x422e10
  422df9:	mov    ebp,ebx
  422dfb:	adc    BYTE PTR [edi],cl
  422dfd:	xchg   DWORD PTR [ecx-0x5ae60000],ecx
  422e03:	add    al,0xba
  422e05:	(bad)  [edx]
  422e07:	xor    eax,DWORD PTR [esi+0x12]
  422e0a:	jns    0x422e7e
  422e0c:	test   DWORD PTR [eax-0x6a748f1e],edi
  422e12:	adc    eax,0xe2e64f83
  422e17:	cmp    DWORD PTR [ebx+0x4d82fd95],ecx
  422e1d:	xor    ah,bl
  422e1f:	xor    DWORD PTR [ebx-0x67000000],ecx
  422e25:	sub    DWORD PTR [ebx+0x29e3f24b],eax
  422e2b:	mov    ecx,DWORD PTR [ecx-0x49b47ceb]
  422e31:	loop   0x422e54
  422e33:	mov    bl,BYTE PTR [ecx+0xd]
  422e36:	test   al,al
  422e38:	repz xchg edx,eax
  422e3a:	pop    es
  422e3b:	repz mov dl,0xdf
  422e3e:	(bad)  
  422e40:	repz jb 0x422e4e
  422e43:	cmp    al,0xf2
  422e45:	jp     0x422e8b
  422e47:	repz mov dl,0xdf
  422e4a:	pop    ds
  422e4b:	add    bl,dh
  422e4d:	jnp    0x422e8b
  422e4f:	xchg   DWORD PTR [eax],esi
  422e51:	clc    
  422e52:	xchg   BYTE PTR [edi-0x1],al
  422e55:	je     0x422e69
  422e57:	jg     0x422ec2
  422e59:	jmp    0x422ece
  422e5b:	and    DWORD PTR [eax-0x2b],esi
  422e5e:	sbb    BYTE PTR [edx+0xa],dh
  422e61:	pop    ebp
  422e62:	mov    esi,0x141a0af4
  422e67:	jne    0x422e7b
  422e69:	andps  xmm1,XMMWORD PTR [ebp+0x2f4fd3b5]
  422e70:	xor    al,0x97
  422e72:	lds    ebp,FWORD PTR [edi+0x7d87902d]
  422e78:	sti    
  422e79:	(bad)  
  422e7a:	les    edi,FWORD PTR [eax-0x12]
  422e7d:	cwde   
  422e7e:	inc    edx
  422e7f:	add    al,0xf3
  422e81:	(bad)  
  422e83:	jg     0x422e0c
  422e85:	aam    0xc5
  422e87:	inc    ebp
  422e88:	add    BYTE PTR [eax],al
  422e8a:	add    BYTE PTR [esi+ebx*8],al
  422e8d:	xchg   BYTE PTR [edx],al
  422e8f:	retf   0xf82a
  422e92:	inc    DWORD PTR [esp+ebx*2]
  422e95:	xor    esp,0x7ee0ff
  422e9b:	in     al,0x59
  422e9d:	sti    
  422e9e:	sbb    BYTE PTR [esi+0x41],0x4
  422ea2:	jne    0x422e90
  422ea4:	in     al,dx
  422ea5:	mov    edi,0x792e3639
  422eaa:	inc    DWORD PTR [ecx]
  422eac:	push   ds
  422ead:	inc    esp
  422eae:	pop    ebx
  422eaf:	sbb    eax,0xf30cbe27
  422eb4:	push   es
  422eb5:	xlat   BYTE PTR ds:[ebx]
  422eb6:	ret    
  422eb7:	xchg   esp,eax
  422eb8:	stc    
  422eb9:	mov    ah,0x8a
  422ebb:	xchg   edi,eax
  422ebc:	xchg   BYTE PTR ds:0xe906f65c,al
  422ec2:	push   edx
  422ec3:	inc    ecx
  422ec4:	pop    eax
  422ec5:	outs   dx,BYTE PTR ds:[esi]
  422ec6:	cmp    ebx,0x6e43a27b
  422ecc:	(bad)  
  422ecd:	jl     0x422ed5
  422ecf:	int    0xc6
  422ed1:	add    BYTE PTR [ebp-0x11],bh
  422ed4:	push   es
  422ed5:	jmp    0xe9492245
  422eda:	adc    ebx,ebx
  422edc:	hlt    
  422edd:	cmp    al,0x4
  422edf:	repz push esi
  422ee1:	pop    esp
  422ee2:	pusha  
  422ee3:	inc    edi
  422ee4:	fcomip st,st(4)
  422ee6:	shl    ebx,cl
  422ee8:	push   es
  422ee9:	jo     0x422f33
  422eeb:	xchg   DWORD PTR [edx+0x77a9],ecx
  422ef1:	add    BYTE PTR [eax],bl
  422ef3:	test   BYTE PTR [eax+esi*8],ch
  422ef6:	jmp    0x422f75
  422ef8:	sub    al,0xec
  422efa:	clc    
  422efb:	test   BYTE PTR [eax],ch
  422efd:	or     bl,dh
  422eff:	push   es
  422f00:	jle    0x422f04
  422f02:	je     0x422f4e
  422f04:	or     DWORD PTR [edx+0xb8083eb],0x7b884f8
  422f0e:	repz push es
  422f10:	scas   al,BYTE PTR es:[edi]
  422f11:	push   eax
  422f12:	verr   WORD PTR [edx+0x2b]
  422f16:	out    dx,eax
  422f17:	push   es
  422f18:	jmp    0xb940e29f
  422f1d:	mov    ah,dl
  422f1f:	add    DWORD PTR [ebx+0xb],0x55
  422f23:	daa    
  422f24:	mov    edi,0x6ed86c03
  422f29:	fidivr WORD PTR [edx+0x79]
  422f2c:	dec    ecx
  422f2d:	mov    WORD PTR [esi],gs
  422f2f:	jmp    0x422f31
  422f31:	inc    ecx
  422f32:	push   ss
  422f33:	in     eax,dx
  422f34:	sti    
  422f35:	cs ins BYTE PTR es:[edi],dx
  422f37:	(bad)  
  422f38:	or     ebp,DWORD PTR [ebp+0x5b]
  422f3b:	out    dx,eax
  422f3c:	sti    
  422f3d:	jmp    0x6326a8e7
  422f42:	(bad)  
  422f43:	push   0xdef08301
  422f48:	adc    BYTE PTR [edi],al
  422f4a:	(bad)  
  422f4b:	jmp    0x422ed1
  422f4d:	sub    ebp,esi
  422f4f:	mov    cl,BYTE PTR [ebx-0x4f90f16]
  422f55:	je     0x422f57
  422f57:	add    BYTE PTR [eax],al
  422f59:	mov    WORD PTR [edi+0x68f153d2],es
  422f5f:	add    cl,dl
  422f61:	imul   esi,ecx,0xc66bd6fb
  422f67:	or     esp,DWORD PTR [ebp-0x28]
  422f6a:	out    dx,eax
  422f6b:	sti    
  422f6c:	jmp    0x7326a8c0
  422f71:	sbb    eax,0xf7430468
  422f76:	fsubrp st(4),st
  422f78:	lods   al,BYTE PTR ds:[esi]
  422f79:	ss jmp 0x422f00
  422f7c:	test   eax,0xea5f8afe
  422f81:	lock push es
  422f83:	xchg   DWORD PTR [esi],esi
  422f85:	add    ecx,DWORD PTR [eax+0x4969e143]
  422f8b:	hlt    
  422f8c:	ins    BYTE PTR es:[edi],dx
  422f8d:	sub    ch,BYTE PTR [ebp+0x7]
  422f90:	sbb    DWORD PTR [esi],eax
  422f92:	sbb    DWORD PTR [eax-0x25],edi
  422f95:	mov    al,0x6
  422f97:	xchg   DWORD PTR [ecx+0x1e7ad76c],edx
  422f9d:	jl     0x422fe3
  422f9f:	sar    BYTE PTR [ecx-0x4917e1a6],1
  422fa5:	sbb    eax,0x2462fbf2
  422faa:	xlat   BYTE PTR ds:[ebx]
  422fab:	jg     0x422fad
  422fad:	mov    edi,0x978900be
  422fb2:	(bad)  
  422fb3:	push   ecx
  422fb4:	mov    edx,DWORD PTR [edx]
  422fb6:	lds    eax,FWORD PTR [ebp-0x40]
  422fb9:	retf   0x4581
  422fbc:	enter  0x0,0x0
  422fc0:	add    bh,dl
  422fc2:	cmp    edi,edi
  422fc4:	add    eax,0xf0fc07f
  422fc9:	pop    es
  422fca:	add    DWORD PTR [eax],eax
  422fcc:	mov    bh,BYTE PTR [ebp+0x75]
  422fcf:	shl    dl,0xc5
  422fd2:	cmp    edi,edi
  422fd4:	test   DWORD PTR [edi+0x75],edi
  422fd7:	loopne 0x422fea
  422fd9:	dec    esi
  422fda:	in     al,0xc6
  422fdc:	dec    edi
  422fdd:	out    dx,eax
  422fde:	add    dh,al
  422fe0:	pop    ds
  422fe1:	clc    
  422fe2:	add    BYTE PTR [ecx-0x1841141],cl
  422fe8:	push   esi
  422fe9:	sti    
  422fea:	jns    0x423011
  422fec:	dec    eax
  422fed:	or     al,BYTE PTR [eax]
  422fef:	mov    ebx,DWORD PTR [ecx-0x79]
  422ff2:	clc    
  422ff3:	or     al,0x55
  422ff5:	mov    BYTE PTR [edx],dl
  422ff7:	add    cl,BYTE PTR [edx+0xa]
  422ffa:	xor    eax,DWORD PTR [ebp+0x7e]
  422ffd:	sti    
  422ffe:	jle    0x423011
  423000:	sbb    BYTE PTR [edx],cl
  423002:	add    BYTE PTR [ebx-0x3e11011f],cl
  423008:	or     cl,BYTE PTR [edx]
  42300a:	add    BYTE PTR [eax],ah
  42300c:	xor    eax,0x1a01f186
  423011:	or     bh,BYTE PTR [ebx-0x8]
  423014:	push   ss
  423015:	sti    
  423016:	jge    0x423000
  423018:	or     ecx,DWORD PTR [edx]
  42301a:	add    dh,dh
  42301c:	dec    ebx
  42301d:	or     DWORD PTR [edi],eax
  42301f:	test   BYTE PTR ds:0x9,dh
  423025:	add    BYTE PTR [eax],al
  423027:	pusha  
  423028:	inc    ebx
  423029:	sbb    BYTE PTR [ebx+esi*8-0x23f78de1],al
  423030:	push   ds
  423031:	dec    DWORD PTR [edi]
  423033:	repz fbstp TBYTE PTR [edx+0x14]
  423037:	pop    es
  423038:	fisttp WORD PTR [eax*4-0x2155]
  42303f:	mov    esp,0xf31fff1e
  423044:	fisttp WORD PTR [esp+eax*4]
  423047:	addr16 fdivp st(7),st
  42304a:	push   DWORD PTR [ebx-0x6e]
  42304d:	lock add ah,ah
  423050:	(bad)  
  423051:	cmc    
  423052:	add    bl,dh
  423054:	fild   QWORD PTR [ecx-0x1]
  423057:	and    eax,0x79aab25b
  42305c:	hlt    
  42305d:	imul   eax
  42305f:	(bad)  
  423060:	push   ss
  423061:	cld    
  423062:	sti    
  423063:	js     0x423034
  423065:	in     al,dx
  423066:	xchg   ebx,eax
  423067:	xlat   BYTE PTR ds:[ebx]
  423068:	(bad)  
  42306a:	cmp    esi,edi
  42306c:	push   eax
  42306d:	add    esp,DWORD PTR [esi-0xf]
  423070:	sbb    al,0x89
  423072:	and    BYTE PTR [ecx],0xde
  423075:	(bad)  
  423076:	(bad)  
  423077:	(bad)  
  423079:	dec    edi
  42307a:	repz bound si,DWORD PTR [ecx-0x863cb98]
  423082:	jg     0x4230bf
  423084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423085:	in     al,dx
  423086:	outs   dx,DWORD PTR ds:[esi]
  423087:	ss (bad) 
  423089:	test   DWORD PTR [ebp+0x33000000],0xf39689e4
  423093:	(bad)  
  423095:	jle    0x4230a3
  423097:	loope  0x423109
  423099:	push   edx
  42309a:	jbe    0x4230ce
  42309c:	inc    esp
  42309d:	sti    
  42309e:	cld    
  42309f:	jae    0x42305d
  4230a1:	mov    bl,0xf3
  4230a3:	(bad)  
  4230a5:	out    0x3a,eax
  4230a7:	pop    es
  4230a8:	dec    edi
  4230a9:	sti    
  4230aa:	call   0xd8ae9529
  4230af:	in     al,dx
  4230b0:	push   edx
  4230b1:	push   esp
  4230b2:	ins    BYTE PTR es:[edi],dx
  4230b3:	lds    edi,FWORD PTR [ecx+0x425857ee]
  4230b9:	jno    0x42307a
  4230bb:	push   ebp
  4230bc:	cmp    dl,BYTE PTR [ecx]
  4230be:	cmp    ebx,DWORD PTR [ecx]
  4230c0:	test   eax,0xe1612303
  4230c5:	pop    ebx
  4230c6:	je     0x423085
  4230c8:	adc    DWORD PTR [edi-0x59],ebp
  4230cb:	in     al,dx
  4230cc:	sbb    al,BYTE PTR [eax-0x77098d4d]
  4230d2:	mov    DWORD PTR cs:[ecx],0x2ebcc69
  4230d9:	pop    DWORD PTR [ebx-0x648f0c7e]
  4230df:	fdivp  st(0),st
  4230e1:	stc    
  4230e2:	js     0x4230d0
  4230e4:	pop    esp
  4230e5:	jno    0x42311a
  4230e7:	fistp  WORD PTR [ebx-0x2f1397bb]
  4230ed:	add    al,0x5d
  4230ef:	in     al,dx
  4230f0:	jmp    0x42317b
  4230f5:	pop    eax
  4230f6:	or     BYTE PTR [edi+ebx*1+0x7e],dl
  4230fa:	mov    dl,0x8d
  4230fc:	stc    
  4230fd:	dec    eax
  4230fe:	in     al,dx
  4230ff:	cmp    DWORD PTR [ebx-0x1416f90d],0xfaaade49
  423109:	jle    0x42308d
  42310b:	adc    ebx,edi
  42310d:	sub    ah,ch
  42310f:	cmp    DWORD PTR [edi-0x77b91fcf],ecx
  423115:	outs   dx,BYTE PTR ds:[esi]
  423116:	pop    edi
  423117:	mov    bh,dl
  423119:	or     BYTE PTR [edi-0x7e],dl
  42311c:	jo     0x423119
  42311e:	jns    0x423184
  423120:	xchg   edi,eax
  423121:	(bad)  
  423122:	jmp    0x423124
  423124:	jbe    0x4230c6
  423126:	fiadd  WORD PTR ds:0x8506f062
  42312c:	sub    ecx,edi
  42312e:	xchg   ecx,eax
  42312f:	shl    BYTE PTR [ebp-0x50],0x71
  423133:	or     DWORD PTR [edx],ebx
  423135:	scas   eax,DWORD PTR es:[edi]
  423136:	push   0xea646489
  42313b:	sti    
  42313c:	inc    esi
  42313d:	xchg   eax,esp
  42313f:	add    ecx,ebp
  423141:	lock jns 0x4230c9
  423144:	xchg   DWORD PTR [esi-0xfd80411],esi
  42314a:	push   es
  42314b:	inc    eax
  42314c:	mov    al,0x23
  42314e:	out    dx,al
  42314f:	ret    0xa5a4
  423152:	add    eax,0xde6dea87
  423157:	or     al,0xb9
  423159:	add    BYTE PTR [eax],al
  42315b:	add    BYTE PTR [ebx+0x2b],bh
  42315e:	or     al,0x99
  423160:	jnp    0x4231cb
  423162:	nop
  423163:	mov    edx,0x3997deb0
  423168:	jp     0x423159
  42316a:	test   BYTE PTR [ecx],ch
  42316c:	stc    
  42316d:	add    BYTE PTR [eax+ebp*8-0x21d0f910],0x74
  423175:	jns    0x42316b
  423177:	xlat   BYTE PTR ds:[ebx]
  423178:	pop    edx
  423179:	out    dx,eax
  42317a:	das    
  42317b:	xlat   BYTE PTR ds:[ebx]
  42317c:	jge    0x4231c0
  42317e:	xor    eax,0xcdde5759
  423183:	mov    edi,0xa87f483a
  423188:	repz imul edi,edx,0xffffffd9
  42318c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42318d:	loopne 0x4231be
  42318f:	test   eax,0x6c017d91
  423194:	mov    ah,0xca
  423196:	push   ecx
  423197:	add    esi,eax
  423199:	push   edi
  42319a:	lea    ebx,[ebx+ebp*2-0x16]
  42319e:	sti    
  42319f:	add    BYTE PTR [ebp-0x56],ch
  4231a2:	add    DWORD PTR [eax],eax
  4231a4:	or     al,BYTE PTR [edi+0x2b455051]
  4231aa:	fadd   DWORD PTR [edx+ebx*8]
  4231ad:	push   es
  4231ae:	add    BYTE PTR [ecx-0x31842d69],cl
  4231b4:	cmp    eax,0xda7015f0
  4231b9:	inc    esi
  4231ba:	add    BYTE PTR [ebp-0x72bda5e6],al
  4231c0:	add    BYTE PTR [eax],al
  4231c2:	add    BYTE PTR [edi-0x6872af32],dl
  4231c8:	scas   al,BYTE PTR es:[edi]
  4231c9:	push   eax
  4231ca:	push   edi
  4231cb:	push   ebp
  4231cc:	add    DWORD PTR [ebp-0x810230c],0xdc59cd50
  4231d6:	jmp    DWORD PTR [edi-0x75bfef9e]
  4231dc:	out    dx,eax
  4231dd:	jne    0x4231bb
  4231df:	pop    ss
  4231e0:	ret    
  4231e1:	pop    es
  4231e2:	inc    esp
  4231e3:	pop    es
  4231e4:	into   
  4231e5:	not    DWORD PTR ds:0x401606
  4231eb:	or     ebp,ebp
  4231ed:	add    al,0x75
  4231ef:	ds sub eax,0x6a5d0873
  4231f5:	add    DWORD PTR [ecx],eax
  4231f7:	dec    edx
  4231f8:	push   es
  4231f9:	call   0xf832a1ee
  4231fe:	mov    edx,DWORD PTR [ecx]
  423200:	sti    
  423201:	cli    
  423202:	dec    esp
  423203:	jb     0x423230
  423205:	enter  0xd50f,0xdf
  423209:	add    BYTE PTR [eax],al
  42320b:	dec    edx
  42320c:	jnp    0x42328b
  42320e:	or     BYTE PTR [ecx-0x28391fa8],dl
  423214:	jmp    0x423217
  423216:	mov    ecx,DWORD PTR [ecx]
  423218:	sbb    eax,0xdcf3f445
  42321d:	xlat   BYTE PTR ds:[ebx]
  42321e:	jg     0x4231ae
  423220:	xchg   ebx,eax
  423221:	add    ecx,DWORD PTR [ebx]
  423223:	jo     0x4231ca
  423225:	repnz sti 
  423227:	add    BYTE PTR [eax],al
  423229:	add    ah,bh
  42322b:	je     0x423267
  42322d:	call   0x2815b16
  423232:	pop    ebx
  423233:	loopne 0x423234
  423235:	push   DWORD PTR [ebx]
  423237:	mov    al,0xf8
  423239:	jae    0x42326e
  42323b:	pop    ebx
  42323c:	push   edx
  42323d:	aam    0xcb
  42323f:	sub    al,bl
  423241:	add    bl,dh
  423243:	fs (bad) 
  423245:	mov    DWORD PTR [esi],esi
  423247:	inc    eax
  423248:	jp     0x423213
  42324a:	in     al,dx
  42324b:	arpl   WORD PTR [esi-0x73200d00],bp
  423251:	pop    ebp
  423252:	(bad)  
  423253:	in     al,dx
  423254:	mov    edi,0xec0c2e89
  423259:	adc    eax,0xf684ee68
  42325e:	in     eax,dx
  42325f:	lea    ebx,[ecx]
  423261:	aaa    
  423262:	mov    al,ds:0x32f21d90
  423267:	fdiv   st(6),st
  423269:	je     0x423253
  42326b:	aam    0xdd
  42326d:	jmp    FWORD PTR [edx-0x1ffd03a4]
  423273:	add    esp,ebp
  423275:	or     DWORD PTR [esi+0x1e],esi
  423278:	cli    
  423279:	mov    BYTE PTR [esi+0x593e89d3],dh
  42327f:	shl    BYTE PTR [ecx-0xc],1
  423282:	add    BYTE PTR [edi-0xfb7b2c4],ah
  423288:	nop
  423289:	shr    DWORD PTR [edx+0x1a],0xa4
  42328d:	call   0x54423292
  423292:	mov    ds:0x98c5fbf2,al
  423297:	jno    0x42327d
  423299:	jp     0x4232a1
  42329b:	sub    al,0xa0
  42329d:	or     ecx,DWORD PTR [edi+0x7d18f678]
  4232a3:	and    al,0xe4
  4232a5:	jp     0x4232e2
  4232a7:	pop    ecx
  4232a8:	mov    esi,DWORD PTR [esi+0x6adab6d2]
  4232ae:	inc    ebx
  4232af:	push   ecx
  4232b0:	lea    edi,[esi-0x66]
  4232b3:	pusha  
  4232b4:	dec    ecx
  4232b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232b6:	cs or  al,0xa0
  4232b9:	pop    esi
  4232ba:	add    ah,BYTE PTR [eax]
  4232bc:	pop    ecx
  4232bd:	out    0x72,eax
  4232bf:	in     eax,0x3a
  4232c1:	xchg   esp,eax
  4232c2:	jb     0x4232a3
  4232c4:	mov    BYTE PTR [esi-0x59],al
  4232c7:	inc    ecx
  4232c8:	push   es
  4232c9:	jecxz  0x4232d1
  4232cb:	jmp    0x9c7033ba
  4232d0:	out    dx,eax
  4232d1:	ds ds pop esi
  4232d4:	inc    edi
  4232d5:	out    dx,eax
  4232d6:	inc    ebp
  4232d7:	mov    esi,0x9a7a0bcc
  4232dc:	cmp    ecx,DWORD PTR [ebx-0x670986e2]
  4232e2:	sub    DWORD PTR [ecx],0x70
  4232e5:	push   ss
  4232e6:	jl     0x423282
  4232e8:	aaa    
  4232e9:	ins    BYTE PTR es:[edi],dx
  4232ea:	(bad)  
  4232eb:	mov    es,ebx
  4232ed:	fild   DWORD PTR [ebx]
  4232ef:	jecxz  0x423335
  4232f1:	push   0x38
  4232f3:	mov    ch,0x69
  4232f5:	add    BYTE PTR [eax],al
  4232f7:	add    BYTE PTR [ebx],cl
  4232f9:	jp     0x423297
  4232fb:	mov    ds:0xcd156c2,eax
  423300:	sub    cl,0xda
  423303:	jmp    0x4274:0xc547d54
  42330a:	ror    DWORD PTR [edx-0x17d3e20d],0xf2
  423311:	inc    ecx
  423312:	rol    DWORD PTR [edx-0x1eff254a],1
  423318:	cmc    
  423319:	addr16 pop es
  42331b:	lods   eax,DWORD PTR ds:[esi]
  42331c:	sbb    eax,0x2431e7ec
  423321:	je     0x42335b
  423323:	jb     0x4232fa
  423325:	sub    ch,al
  423327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423328:	cmc    
  423329:	push   es
  42332a:	add    BYTE PTR [ebx],al
  42332c:	out    0x79,eax
  42332e:	inc    ebp
  42332f:	dec    ecx
  423330:	mov    al,ds:0x8bd5b7d
  423335:	add    eax,0x7de57791
  42333a:	inc    ebx
  42333b:	mov    cl,0x29
  42333d:	test   al,0x74
  42333f:	in     al,dx
  423340:	in     eax,0x43
  423342:	cmp    al,0x52
  423344:	adc    DWORD PTR [edx+0x75],edi
  423347:	mov    eax,ebx
  423349:	xchg   ebp,eax
  42334a:	or     ebp,ecx
  42334c:	lock fistp WORD PTR [ecx]
  42334f:	je     0x423394
  423351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423352:	call   0x4920bd
  423357:	ss sbb eax,0xa6872f
  42335d:	add    BYTE PTR [eax],al
  42335f:	(bad)  
  423361:	xchg   ebp,eax
  423362:	div    al
  423364:	push   es
  423365:	mov    DWORD PTR [esi-0x2aa48228],edi
  42336b:	test   DWORD PTR [ecx-0x44],esi
  42336e:	add    DWORD PTR [edi],ecx
  423370:	xchg   edi,eax
  423371:	cli    
  423372:	push   es
  423373:	rol    esi,0x37
  423376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423377:	mov    esp,0x49fec00f
  42337c:	dec    ebx
  42337d:	pop    edx
  42337e:	xchg   edx,eax
  42337f:	aaa    
  423380:	test   al,0x4
  423382:	jmp    0x6b2eb334
  423387:	dec    ebx
  423388:	dec    esi
  423389:	dec    edi
  42338a:	aas    
  42338b:	mov    esi,0x7be17d7f
  423390:	inc    ebx
  423391:	inc    eax
  423392:	add    bh,cl
  423394:	ret    0x8407
  423397:	or     BYTE PTR ds:0x71990000,al
  42339d:	sub    BYTE PTR [eax],al
  42339f:	inc    ebp
  4233a0:	cmp    BYTE PTR [bp+si],al
  4233a3:	or     al,BYTE PTR [ebx]
  4233a5:	push   0x10030a00
  4233aa:	push   0x376e
  4233af:	retf   0x5d7f
  4233b2:	fsub   DWORD PTR [edx+0x5e]
  4233b5:	ret    
  4233b6:	add    BYTE PTR [edx],cl
  4233b8:	xchg   BYTE PTR [ebp-0x2c],ah
  4233bb:	fimul  DWORD PTR [edi-0x3cf07410]
  4233c1:	push   eax
  4233c2:	mov    eax,DWORD PTR [eax]
  4233c4:	add    BYTE PTR [eax],al
  4233c6:	and    al,0xa5
  4233c8:	inc    ebp
  4233c9:	enter  0x91ca,0x45
  4233cd:	int3   
  4233ce:	push   ebx
  4233cf:	jbe    0x4233a1
  4233d1:	call   0x397ea2
  4233d6:	dec    esi
  4233d7:	retf   
  4233d8:	pop    es
  4233d9:	test   BYTE PTR [eax],dh
  4233db:	or     al,BYTE PTR [eax]
  4233dd:	add    BYTE PTR [ecx+0x5ef685ca],ch
  4233e3:	or     eax,DWORD PTR [eax-0x8a75c2]
  4233e9:	aas    
  4233ea:	or     bl,BYTE PTR [ebp+0x1]
  4233ed:	add    BYTE PTR [esi+0x7],ch
  4233f0:	ds jmp 0x4233de
  4233f3:	add    eax,0x8a8a0001
  4233f8:	jns    0x4233ff
  4233fa:	inc    edx
  4233fb:	xchg   eax,ecx
  4233fd:	(bad)  
  4233fe:	call   0xa:0x5bd3850b
  423405:	(bad)  
  423406:	pavgb  mm0,QWORD PTR [eax]
  423409:	jmp    0x423405
  42340b:	lea    eax,[ebp-0x38]
  42340e:	repz (bad) 
  423410:	dec    esi
  423411:	inc    eax
  423412:	inc    esp
  423413:	aad    0x86
  423415:	inc    ebp
  423416:	push   edi
  423417:	jae    0x4233d8
  423419:	or     ebp,DWORD PTR [edi-0x6d]
  42341c:	(bad)  
  42341d:	push   ebx
  42341f:	pushf  
  423420:	ins    BYTE PTR es:[edi],dx
  423421:	or     al,0x78
  423423:	(bad)  [edi+0xe]
  423426:	mov    bl,0xef
  423428:	hlt    
  423429:	jae    0x42342b
  42342b:	add    BYTE PTR [eax],al
  42342d:	jmp    0x42344f
  42342f:	cmc    
  423430:	shl    BYTE PTR [ebx+0x3887bfc0],cl
  423436:	mov    BYTE PTR [ecx+edi*8],dl
  423439:	cld    
  42343a:	mov    WORD PTR [ebx-0x40],?
  42343d:	jle    0x4233ff
  42343f:	add    BYTE PTR [ebp-0x45],0x87
  423443:	push   ds
  423444:	inc    eax
  423445:	in     al,0x74
  423447:	mov    al,bl
  423449:	jbe    0x423493
  42344b:	push   0xffffffbe
  42344d:	retf   0xfec2
  423450:	push   ebx
  423452:	leave  
  423453:	sbb    eax,0x3a42f166
  423458:	lock and ecx,DWORD PTR [ebp+0x6c]
  42345c:	and    al,0x68
  42345e:	lods   al,BYTE PTR ds:[esi]
  42345f:	daa    
  423460:	call   0xfc375eda
  423465:	jp     0x423411
  423467:	fistp  QWORD PTR [edi-0x65]
  42346a:	sub    al,0x4
  42346c:	test   BYTE PTR ds:0x19ffffef,dh
  423472:	mov    ecx,0xaa77fe69
  423477:	xlat   BYTE PTR ds:[ebx]
  423478:	push   eax
  423479:	jl     0x4234dd
  42347b:	(bad)  
  42347d:	popf   
  42347e:	in     al,0x6d
  423480:	in     al,0x5b
  423482:	xchg   edx,eax
  423483:	ret    0x64fa
  423486:	data16 cmp ah,ah
  423489:	jo     0x423491
  42348b:	loope  0x423480
  42348d:	call   0x474c1c
  423492:	add    BYTE PTR [eax],al
  423494:	repz push es
  423496:	pop    esi
  423497:	dec    ebx
  423498:	sbb    ebx,DWORD PTR [edx]
  42349a:	scas   al,BYTE PTR es:[edi]
  42349b:	das    
  42349c:	jl     0x4234f9
  42349e:	in     al,dx
  42349f:	jl     0x423437
  4234a1:	fcmove st,st(6)
  4234a3:	cld    
  4234a4:	adc    al,0xa
  4234a6:	(bad)  
  4234a8:	sub    BYTE PTR [edi-0x393307dc],cl
  4234ae:	jo     0x423501
  4234b0:	or     ebx,DWORD PTR [edi]
  4234b2:	and    al,0xf8
  4234b4:	clc    
  4234b5:	mov    ah,dh
  4234b7:	add    al,0xf3
  4234b9:	push   es
  4234ba:	pusha  
  4234bb:	dec    ecx
  4234bc:	nop    DWORD PTR [esp+eiz*8]
  4234c0:	call   0xf346e251
  4234c5:	push   es
  4234c6:	pop    esi
  4234c7:	jns    0x4234a0
  4234c9:	nop
  4234ca:	and    al,0xf4
  4234cc:	pop    esp
  4234cd:	and    ebx,DWORD PTR [ecx-0x737517fc]
  4234d3:	add    al,0xf3
  4234d5:	push   es
  4234d6:	pop    esi
  4234d7:	or     BYTE PTR [ebx-0x55781e6f],al
  4234dd:	adc    al,0x6d
  4234df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234e0:	repz push es
  4234e2:	jmp    0xe232dd1d
  4234e7:	xchg   DWORD PTR [edx+0x754ae05b],edi
  4234ed:	adc    esp,ecx
  4234ef:	sbb    DWORD PTR [edx-0x23096bde],0xffffffc6
  4234f6:	pusha  
  4234f7:	dec    ecx
  4234f8:	add    BYTE PTR [eax],al
  4234fa:	add    BYTE PTR [edi+0x1e7a41e],ah
  423500:	cmp    BYTE PTR [esi+0x41],ch
  423503:	fwait
  423504:	xchg   edx,eax
  423505:	in     eax,0x84
  423507:	in     al,dx
  423508:	push   ds
  423509:	add    cl,ch
  42350b:	fsub   QWORD PTR [edx]
  42350d:	xchg   ecx,ebp
  42350f:	jo     0x423530
  423511:	add    BYTE PTR [ebp+0x1a],bl
  423514:	mov    WORD PTR [ebp-0x27],cs
  423517:	int    0x2
  423519:	mov    cl,0x39
  42351b:	fld    st(7)
  42351d:	inc    ebp
  42351e:	add    DWORD PTR [ecx],0x932c892d
  423524:	loopne 0x42353b
  423526:	inc    ecx
  423527:	add    eax,0xb3640047
  42352c:	scas   al,BYTE PTR es:[edi]
  42352d:	mov    DWORD PTR [edi+eiz*2],esp
  423530:	mov    ds,WORD PTR [ebp+0x5d]
  423533:	xchg   edi,eax
  423534:	popa   
  423535:	mov    eax,0xffcabba6
  42353a:	call   0xf2a3c2f
  42353f:	sbb    esp,ecx
  423541:	sti    
  423542:	jb     0x4234e7
  423544:	out    dx,al
  423545:	test   BYTE PTR [ecx+0x2c871c6b],ch
  42354b:	ret    
  42354c:	inc    esi
  42354d:	mov    DWORD PTR [ebx+eax*8],esp
  423550:	sbb    eax,DWORD PTR [ebp+0x4d]
  423553:	pop    esi
  423554:	mov    dl,0x85
  423556:	inc    edx
  423557:	inc    esp
  423558:	ja     0x50af20a
  42355e:	jmp    0x8724:0xa000000
  423565:	lods   al,BYTE PTR ds:[esi]
  423566:	rcr    bh,0x34
  423569:	jns    0x42350c
  42356b:	stc    
  42356c:	ja     0x423549
  42356e:	xor    BYTE PTR [edi],al
  423570:	xchg   DWORD PTR [eax+eiz*4+0x5fddfb36],ebx
  423577:	mov    ecx,DWORD PTR [ebp+0x15]
  42357a:	cmc    
  42357b:	retf   
  42357c:	push   ecx
  42357d:	add    DWORD PTR [edi-0x70],ecx
  423580:	cli    
  423581:	push   cs
  423582:	cmc    
  423583:	mov    esi,0xbf4f0089
  423588:	cmp    DWORD PTR [ebp+0x62],0xffffffd8
  42358c:	inc    ebp
  42358d:	in     al,dx
  42358e:	ror    DWORD PTR [esi-0x14],1
  423591:	cmp    edx,DWORD PTR [edi-0x97df819]
  423597:	aad    0xf7
  423599:	call   DWORD PTR [ecx]
  42359b:	sub    BYTE PTR ss:[ebp+0x50],dh
  42359f:	(bad)  
  4235a0:	jne    0x423596
  4235a2:	xor    al,BYTE PTR [edi-0x7a]
  4235a5:	(bad)  
  4235a6:	sub    eax,0x51851cc1
  4235ab:	pop    ebx
  4235ac:	add    edi,edi
  4235ae:	out    0xde,eax
  4235b0:	call   0xf81af1e8
  4235b5:	and    DWORD PTR [edi+0x664583de],ebp
  4235bb:	pop    edi
  4235bc:	aas    
  4235bd:	and    al,0x93
  4235bf:	xor    eax,0xf1d7c628
  4235c4:	add    DWORD PTR [ebx-0x39000000],ecx
  4235ca:	out    dx,al
  4235cb:	cmp    DWORD PTR [ebp-0x6e],0xffffffc3
  4235cf:	xor    al,0x8e
  4235d1:	pop    esp
  4235d2:	fadd   DWORD PTR [ebx+0x7d646a45]
  4235d8:	lock inc edx
  4235da:	inc    BYTE PTR [ebp+0x75622dfe]
  4235e0:	enter  0xc232,0x3d
  4235e4:	jmp    FWORD PTR ds:0x21fb4561
  4235ea:	loope  0x423578
  4235ec:	jne    0x4235d0
  4235ee:	ret    0x3de0
  4235f1:	fst    st(7)
  4235f3:	sub    al,al
  4235f5:	ins    DWORD PTR es:[edi],dx
  4235f6:	cmp    BYTE PTR [ebx-0x37],dl
  4235f9:	enter  0xe,0x55
  4235fd:	add    edi,esp
  4235ff:	sub    esp,0xfff7cff3
  423605:	jl     0x423674
  423607:	arpl   ax,di
  423609:	repz jl 0x423665
  42360c:	push   ebx
  42360d:	fisttp DWORD PTR [ebx]
  42360f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423610:	aas    
  423611:	repz xor DWORD PTR [ebx-0xd],eax
  423615:	pop    esp
  423616:	icebp  
  423617:	adc    ch,ah
  423619:	add    DWORD PTR [eax],esi
  42361b:	add    al,0xa1
  42361d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42361f:	inc    esp
  423620:	add    BYTE PTR [eax+0x3],bh
  423623:	lock mov ecx,0x4576efb0
  423629:	inc    ebx
  42362a:	ins    DWORD PTR es:[edi],dx
  42362b:	out    0xc,eax
  42362d:	add    BYTE PTR [eax],al
  42362f:	add    BYTE PTR [eax],bl
  423631:	fstp   TBYTE PTR [edx+eax*1+0x70]
  423635:	cwde   
  423636:	sti    
  423637:	ins    DWORD PTR es:[edi],dx
  423638:	loopne 0x42360e
  42363a:	inc    edx
  42363b:	lock pushf 
  42363d:	mov    ecx,0xeef742f9
  423642:	jae    0x42365c
  423644:	js     0x423661
  423646:	cld    
  423647:	cli    
  423648:	add    bl,0x7a
  42364b:	inc    edx
  42364c:	out    0x88,eax
  42364e:	je     0x423658
  423650:	and    BYTE PTR [ecx+0x4f],ah
  423653:	call   0xfc338270
  423658:	jbe    0x423609
  42365a:	pop    si
  42365c:	push   0xc34516f1
  423661:	in     al,dx
  423662:	out    dx,eax
  423663:	jg     0x4236ab
  423665:	inc    eax
  423666:	sti    
  423667:	mov    BYTE PTR [esi+0x48],al
  42366a:	je     0x42362e
  42366c:	push   0x9767f7aa
  423671:	xchg   BYTE PTR [eax+eax*1-0x5c],al
  423675:	ret    0xeef
  423678:	xor    esi,eax
  42367a:	jl     0x4236bb
  42367c:	xor    eax,DWORD PTR [edi]
  42367e:	ins    BYTE PTR es:[edi],dx
  42367f:	ret    
  423680:	clc    
  423681:	mov    al,BYTE PTR [eax+0x2]
  423684:	repz push es
  423686:	add    DWORD PTR [ebx],0x5bf906f3
  42368c:	test   BYTE PTR [ebx],bh
  42368e:	jmp    0x9cd5f996
  423693:	mov    edi,0x5b000000
  423698:	test   al,0x21
  42369a:	add    esi,ebx
  42369c:	lea    ebx,[edi+edi*4+0x4b16bd4]
  4236a3:	jp     0x4236f8
  4236a5:	test   eax,0xabce6c55
  4236aa:	dec    ecx
  4236ab:	jg     0x4236b3
  4236ad:	pusha  
  4236ae:	dec    ecx
  4236af:	das    
  4236b0:	out    dx,al
  4236b1:	daa    
  4236b2:	xor    DWORD PTR [eax],ebp
  4236b4:	loope  0x42371b
  4236b6:	(bad)  
  4236b7:	clc    
  4236b8:	mov    cl,BYTE PTR [edi+0x5]
  4236bb:	repz push es
  4236bd:	rol    BYTE PTR [edi+0x59e906f2],0xc
  4236c4:	inc    eax
  4236c5:	ins    BYTE PTR es:[edi],dx
  4236c6:	mov    ecx,0xef92d911
  4236cb:	or     esi,ebx
  4236cd:	mov    bh,0xef
  4236cf:	clc    
  4236d0:	mov    WORD PTR [ecx-0x24],?
  4236d3:	push   eax
  4236d4:	imul   ebp,ecx,0xf60b2703
  4236da:	add    dl,BYTE PTR [ebp+0x5]
  4236dd:	or     al,BYTE PTR [ecx+0x3e8b571]
  4236e3:	rep ins BYTE PTR es:[edi],dx
  4236e5:	cmc    
  4236e6:	push   ebx
  4236e7:	dec    ebp
  4236e8:	pop    es
  4236e9:	fs mov ecx,0xef4ae007
  4236ef:	xor    al,0xcf
  4236f1:	inc    edx
  4236f2:	fsub   st(4),st
  4236f4:	(bad)  
  4236f5:	cmp    ebp,edi
  4236f7:	outs   dx,BYTE PTR ds:[esi]
  4236f8:	mov    DWORD PTR [eax],0xb7
  4236fe:	adc    BYTE PTR [eax-0x5],ah
  423701:	jmp    0x42371e
  423703:	add    ecx,DWORD PTR [ebp-0x42294a4]
  423709:	push   ds
  42370a:	push   edi
  42370b:	xchg   esp,eax
  42370c:	add    cl,ch
  42370e:	lock out dx,al
  423710:	sbb    eax,0x8ddc8405
  423715:	ins    BYTE PTR es:[edi],dx
  423716:	sub    ebx,esp
  423718:	sti    
  423719:	inc    al
  42371b:	xchg   edx,eax
  42371d:	cdq    
  42371e:	cmp    DWORD PTR [ecx],ebp
  423720:	jg     0x423710
  423722:	icebp  
  423723:	pop    ecx
  423724:	pop    ss
  423725:	je     0x4236b2
  423727:	fwait
  423728:	std    
  423729:	ficom  WORD PTR [ebp-0x61]
  42372c:	mov    eax,0xe806f0e9
  423731:	int    0x51
  423733:	fdiv   st(3),st
  423735:	je     0x4237b2
  423737:	sbb    edi,ebx
  423739:	mov    esi,0xaf873715
  42373e:	cmp    edx,eax
  423740:	lea    esp,[esp+ebx*8-0x25]
  423744:	sti    
  423745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423746:	mov    al,ds:0x73f175db
  42374b:	mov    bl,ah
  42374d:	xchg   ebx,eax
  42374e:	or     eax,0xe18150dc
  423753:	mov    DWORD PTR [eax],eax
  423755:	jmp    0x544dfdd5
  42375a:	mov    al,0x8a
  42375c:	sar    ah,0xdf
  42375f:	xor    al,al
  423761:	pop    es
  423762:	add    BYTE PTR [eax],al
  423764:	add    BYTE PTR [esi-0x76],dl
  423767:	fsub   QWORD PTR [ebx-0x23]
  42376a:	fstp   TBYTE PTR [ecx+0x6ef4f]
  423770:	fs imul esp,esp,0xfffffff3
  423774:	dec    esi
  423775:	(bad)
  423778:	add    BYTE PTR [edx+0x33754943],bl
  42377e:	pop    ebp
  42377f:	inc    ebp
  423780:	call   0xe9bd1396
  423785:	mov    dh,0x84
  423787:	ror    BYTE PTR [ebx+ecx*2],0x33
  42378b:	lea    edi,[ebp+0x72]
  42378e:	adc    al,0xc0
  423790:	call   0x38b5c5
  423795:	push   cs
  423796:	les    esi,FWORD PTR [edx+eax*2-0x19]
  42379a:	xchg   BYTE PTR [esi+edi*8+0x65],cl
  42379e:	icebp  
  42379f:	sub    esi,esi
  4237a1:	rol    BYTE PTR [edi+0x35],1
  4237a4:	cwde   
  4237a5:	repnz (bad) 
  4237a7:	mov    edi,0x7b4855fe
  4237ac:	ror    DWORD PTR [esi-0x7a],0xf6
  4237b0:	adc    BYTE PTR [eax-0x533fd440],bl
  4237b6:	pop    ebx
  4237b7:	add    eax,ebp
  4237b9:	mov    ebp,0xa3fff682
  4237be:	inc    edi
  4237bf:	lock push 0xe
  4237c2:	pusha  
  4237c3:	inc    ebp
  4237c4:	lock cli 
  4237c6:	cmp    al,0x4
  4237c8:	lea    eax,[eax]
  4237ca:	add    BYTE PTR [eax],al
  4237cc:	lahf   
  4237cd:	inc    esi
  4237ce:	idiv   bh
  4237d0:	cmp    cl,BYTE PTR gs:[ebp-0x813b97b]
  4237d7:	(bad)  
  4237d8:	mov    edx,0xda75e5c2
  4237dd:	or     ch,al
  4237df:	jl     0x423840
  4237e1:	in     al,dx
  4237e2:	imul   ecx
  4237e4:	cmp    al,0xed
  4237e6:	idiv   edi
  4237e8:	push   eax
  4237e9:	add    al,0x3c
  4237eb:	and    DWORD PTR [esi-0x61d2c3f2],ebp
  4237f1:	idiv   BYTE PTR [ebx]
  4237f3:	inc    eax
  4237f4:	repz mov ebx,0xb4153bfb
  4237fa:	add    ebp,DWORD PTR [esi]
  4237fc:	enter  0xfd39,0xae
  423800:	out    dx,eax
  423801:	cmp    dh,dh
  423803:	scas   al,BYTE PTR es:[edi]
  423804:	icebp  
  423805:	dec    eax
  423806:	add    ch,BYTE PTR [edi-0x5101b710]
  42380c:	repnz lods al,BYTE PTR ds:[esi]
  42380e:	js     0x423885
  423810:	sti    
  423811:	cld    
  423812:	jno    0x423820
  423814:	jl     0x423894
  423816:	not    DWORD PTR [edx+0x74]
  423819:	shl    DWORD PTR [edi+0xe],cl
  42381c:	mov    bl,0xef
  42381e:	dec    edi
  42381f:	das    
  423820:	xor    ebx,DWORD PTR [ecx-0x43]
  423823:	call   0xfc2f12ee
  423828:	outs   dx,DWORD PTR ds:[esi]
  423829:	xor    BYTE PTR [eax+0x29],bh
  42382c:	cld    
  42382d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42382e:	sar    BYTE PTR [edi+0x0],0x0
  423832:	add    BYTE PTR [ebx-0x10],bl
  423835:	jae    0x42384f
  423837:	stos   DWORD PTR es:[edi],eax
  423838:	in     al,0x83
  42383a:	(bad)  
  42383b:	repz out dx,eax
  42383d:	inc    DWORD PTR [edi-0x4]
  423840:	imul   edi,DWORD PTR [edx+0x0],0xfffffff3
  423844:	out    dx,eax
  423845:	aaa    
  423846:	je     0x423838
  423848:	daa    
  423849:	jae    0x423853
  42384b:	jo     0x423848
  42384d:	jmp    0x423850
  42384f:	xor    eax,0x7301f52b
  423854:	test   eax,0x62ed7501
  423859:	inc    edx
  42385a:	mov    esp,0xfb2b9e0b
  42385f:	in     al,dx
  423860:	pop    eax
  423861:	out    0x85,eax
  423863:	in     al,0xd2
  423865:	test   DWORD PTR [ebp+0x7cd71466],ecx
  42386b:	sbb    BYTE PTR [ebp-0x14],ch
  42386e:	xchg   DWORD PTR [esi],ebp
  423870:	pop    es
  423871:	icebp  
  423872:	cmc    
  423873:	cs fucomip st,st(0)
  423876:	cld    
  423877:	ja     0x42387d
  423879:	call   0xd6d42b81
  42387e:	push   DWORD PTR [ebp+0x49]
  423881:	icebp  
  423882:	jp     0x4238b2
  423884:	pcmpgtb mm6,mm5
  423887:	sbb    dl,BYTE PTR [edx]
  423889:	cdq    
  42388a:	in     al,dx
  42388b:	(bad)  
  42388c:	pop    esi
  42388d:	xlat   BYTE PTR ds:[ebx]
  42388e:	inc    ebx
  42388f:	repz xchg ecx,eax
  423891:	sbb    DWORD PTR [esi-0x2494f27f],eax
  423897:	add    BYTE PTR [eax],al
  423899:	add    bl,dh
  42389b:	push   es
  42389c:	jmp    0xb9f9671f
  4238a1:	pop    ecx
  4238a2:	sbb    eax,0x68373aef
  4238a7:	(bad)  [esi+0x3e]
  4238aa:	inc    ebx
  4238ab:	mov    DWORD PTR [ebx+eiz*8-0x3463700d],ecx
  4238b2:	mov    ds:0xaec2b191,al
  4238b7:	mov    dl,0xe9
  4238b9:	jl     0x423871
  4238bb:	mov    edx,0xddfc3dc1
  4238c0:	retf   0x3380
  4238c3:	or     eax,0x6f3896c
  4238c8:	jmp    0xc1f4df45
  4238cd:	or     esp,ebx
  4238cf:	(bad)  [edx-0x16f9a723]
  4238d5:	add    ecx,DWORD PTR [ebp+0x6e533a1a]
  4238db:	xor    DWORD PTR ds:0xffdcf8eb,0x3
  4238e2:	inc    ebx
  4238e3:	(bad)  
  4238e5:	das    
  4238e6:	add    DWORD PTR [edi-0x17],eax
  4238e9:	xchg   BYTE PTR [edi+0x7264000b],dh
  4238ef:	mov    bl,0xf9
  4238f1:	outs   dx,BYTE PTR ds:[esi]
  4238f2:	fmul   DWORD PTR [esi-0x1f262a7b]
  4238f8:	sti    
  4238f9:	ins    BYTE PTR es:[edi],dx
  4238fa:	jb     0x423937
  4238fc:	sti    
  4238fd:	push   esi
  4238fe:	add    BYTE PTR [eax],al
  423900:	add    al,cl
  423902:	aaa    
  423903:	jmpw   0x92a0
  423907:	or     al,0x70
  423909:	pop    edx
  42390a:	cmp    edi,ebx
  42390c:	ds mov al,ah
  42390f:	jb     0x4238f2
  423911:	mov    cl,0x82
  423913:	jo     0x423943
  423915:	cwde   
  423916:	loopne 0x423917
  423918:	out    0xf0,eax
  42391a:	push   es
  42391b:	sti    
  42391c:	hlt    
  42391d:	adc    dl,dh
  42391f:	aas    
  423920:	jmp    0xde441892
  423925:	jae    0x42393d
  423927:	sti    
  423928:	push   es
  423929:	pop    eax
  42392a:	pop    esp
  42392b:	mov    ebp,0xfbe04979
  423930:	jmp    0xee66bf8e
  423935:	pop    ecx
  423936:	loopne 0x4238c5
  423938:	ins    BYTE PTR es:[edi],dx
  423939:	xor    al,0xde
  42393b:	sti    
  42393c:	fisub  WORD PTR [eax-0x10aed812]
  423942:	push   es
  423943:	jmp    0xfc225342
  423948:	scas   eax,DWORD PTR es:[edi]
  423949:	mov    bl,0xd7
  42394b:	add    al,dl
  42394d:	push   ds
  42394e:	loope  0x42394b
  423950:	mov    dh,0xc2
  423952:	fbstp  TBYTE PTR [ebp-0x1f]
  423955:	mov    eax,ds:0xdd2115df
  42395a:	inc    esi
  42395b:	add    BYTE PTR [ecx],bh
  42395d:	(bad)  
  42395e:	mov    BYTE PTR [edi-0xc02e75a],0x8e
  423965:	add    BYTE PTR [eax],al
  423967:	add    cl,bl
  423969:	add    al,0x0
  42396c:	out    0xf4,eax
  42396e:	mov    WORD PTR [ebp-0x7a],es
  423971:	mov    edi,0xf15d3b24
  423976:	cmp    eax,0x57
  423979:	icebp  
  42397a:	jne    0x423955
  42397c:	and    edi,DWORD PTR [eax]
  42397e:	idiv   edi
  423980:	sbb    eax,0x32d4755f
  423985:	aas    
  423986:	xor    bh,bh
  423988:	cmp    eax,0x9bf84d85
  42398d:	test   BYTE PTR [ebx+0x20],dh
  423990:	jmp    0x4239e6
  423992:	daa    
  423993:	push   0xffffffbf
  423995:	pop    esi
  423996:	mov    ebp,0xf7f0dcbc
  42399b:	pop    eax
  42399c:	loop   0x4239f0
  42399e:	loope  0x42399f
  4239a0:	fstp   QWORD PTR [ebx+ebp*2+0x1c]
  4239a4:	jo     0x4239c8
  4239a6:	add    edi,0xffffffd1
  4239a9:	popf   
  4239aa:	call   0xf8301ad3
  4239af:	test   DWORD PTR [edx],ecx
  4239b1:	push   edi
  4239b2:	pop    es
  4239b3:	mov    al,BYTE PTR [edx+eiz*1-0x2439c4c4]
  4239ba:	jg     0x42397c
  4239bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239bd:	push   es
  4239be:	jnp    0x423a0d
  4239c0:	push   edx
  4239c1:	repnz add BYTE PTR [ebx-0x12],0x11
  4239c6:	test   DWORD PTR [ecx-0x38cc4141],0xe6000000
  4239d0:	sbb    BYTE PTR [esi+0x39],bl
  4239d3:	repnz push esi
  4239d5:	xor    DWORD PTR [ebx-0x38cced37],ecx
  4239db:	(bad)  
  4239dc:	cld    
  4239dd:	pop    ebp
  4239de:	cmp    DWORD PTR [edx],edx
  4239e0:	imul   esp,DWORD PTR ds:0xb553fc6a,0xffffffe4
  4239e7:	repz jno 0x4239d3
  4239ea:	sti    
  4239eb:	dec    ebx
  4239ec:	mov    BYTE PTR [ebp-0x1f],cl
  4239ef:	in     al,0x81
  4239f1:	jmp    0xbe975d65
  4239f6:	sti    
  4239f7:	pusha  
  4239f8:	les    ecx,FWORD PTR [edi-0x73]
  4239fb:	ss pop esp
  4239fd:	push   esp
  4239fe:	call   0xfc284c43
  423a03:	jo     0x423a29
  423a05:	adc    al,0xe7
  423a07:	pop    es
  423a08:	gs inc ebp
  423a0a:	xor    al,0xe8
  423a0c:	and    BYTE PTR [eax+0x5c],dh
  423a0f:	jae    0x423a19
  423a11:	add    al,0x74
  423a13:	inc    esp
  423a14:	mov    dh,0x8
  423a16:	lea    ebx,[esi-0x14]
  423a19:	jmp    0xd7bac719
  423a1e:	es xchg edx,eax
  423a20:	and    ecx,ebp
  423a22:	sti    
  423a23:	add    BYTE PTR [esp+edi*2+0x3b6323c2],dh
  423a2a:	in     al,dx
  423a2b:	ret    
  423a2c:	pop    es
  423a2d:	cmp    ecx,edx
  423a2f:	add    DWORD PTR gs:[ebp+0xc4],eax
  423a36:	out    dx,eax
  423a37:	(bad)  
  423a38:	sar    BYTE PTR [edx+0x20],0xed
  423a3c:	mov    edi,0xd3534c50
  423a41:	(bad)  
  423a42:	(bad)  
  423a43:	retf   
  423a44:	pop    ebp
  423a45:	(bad)  
  423a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a47:	mov    bh,0xf2
  423a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a4a:	xor    eax,0x17457cb1
  423a4f:	idiv   edx
  423a51:	pop    es
  423a52:	imul   ebp,DWORD PTR ds:0x98ed7504,0x5a0bec6a
  423a5c:	jbe    0x423a58
  423a5e:	or     al,0x6d
  423a60:	pop    edx
  423a61:	in     al,dx
  423a62:	repz push es
  423a64:	mov    ?,edx
  423a66:	jge    0x423ab3
  423a68:	mov    eax,ds:0x4f0f5423
  423a6d:	inc    esp
  423a6e:	xrelease xchg BYTE PTR [ecx+esi*8],cl
  423a72:	call   0x64c617ca
  423a77:	jmp    edi
  423a79:	outs   dx,BYTE PTR ds:[esi]
  423a7a:	icebp  
  423a7b:	test   esi,ebp
  423a7d:	sbb    esi,ebx
  423a7f:	push   ecx
  423a80:	fcomi  st,st(1)
  423a82:	fisttp WORD PTR cs:[ecx]
  423a85:	jo     0x423a76
  423a87:	in     eax,dx
  423a88:	jecxz  0x423a0d
  423a8a:	ss shr al,cl
  423a8d:	outs   dx,BYTE PTR ds:[esi]
  423a8e:	test   DWORD PTR [ebp-0x2f041464],0x9ebebac
  423a98:	gs aam 0x0
  423a9b:	add    BYTE PTR [eax],al
  423a9d:	repnz push es
  423a9f:	jmp    0x23710720
  423aa4:	ds in  al,dx
  423aa6:	push   es
  423aa7:	ins    BYTE PTR es:[edi],dx
  423aa8:	ret    
  423aa9:	push   es
  423aaa:	cmc    
  423aab:	mov    ss,WORD PTR [eax]
  423aad:	pop    bx
  423aaf:	pop    ebp
  423ab0:	dec    ebx
  423ab1:	pop    ebx
  423ab2:	popa   
  423ab3:	or     eax,ebp
  423ab5:	push   0xd5532a8d
  423aba:	add    DWORD PTR [esi],ecx
  423abc:	dec    esp
  423abd:	popa   
  423abe:	inc    ebx
  423abf:	icebp  
  423ac0:	adc    al,bh
  423ac2:	sbb    eax,0xef0f73ea
  423ac7:	fwait
  423ac8:	sar    DWORD PTR [ecx],0xd9
  423acb:	outs   dx,BYTE PTR ds:[esi]
  423acc:	aam    0x6a
  423ace:	xor    ebx,ecx
  423ad0:	cmp    DWORD PTR ds:0xf28f6509,0x3332e906
  423ada:	pop    ds
  423adb:	es sbb al,0xa1
  423ade:	inc    esp
  423adf:	add    BYTE PTR [ebx+0xb],ah
  423ae2:	or     DWORD PTR [eax+0x253e5b0],eax
  423ae8:	scas   eax,DWORD PTR es:[edi]
  423ae9:	repz test BYTE PTR ds:0xf958f692,0xc2
  423af1:	arpl   WORD PTR [ebx],ax
  423af3:	ret    0xe5
  423af6:	daa    
  423af7:	inc    eax
  423af8:	ret    0x2f31
  423afb:	outs   dx,BYTE PTR ds:[esi]
  423afc:	mov    bh,BYTE PTR [eax+0xf27ef8]
  423b02:	add    BYTE PTR [eax],al
  423b04:	adc    BYTE PTR [edi],al
  423b06:	or     esp,DWORD PTR [esp+0x6]
  423b0a:	add    cl,ch
  423b0c:	sbb    bh,bh
  423b0e:	mov    esp,ds
  423b10:	pop    eax
  423b11:	aas    
  423b12:	call   0xfc1ecbfa
  423b17:	bound  esp,QWORD PTR [edi+esi*1+0x66]
  423b1b:	lock sub bh,ch
  423b1e:	pop    edi
  423b1f:	and    al,0x8d
  423b21:	fmul   QWORD PTR [ecx+0x7d5880ac]
  423b27:	cmp    edi,ebp
  423b29:	or     eax,DWORD PTR [ebp+ebp*4+0x6a0006f7]
  423b30:	adc    ch,bh
  423b32:	add    BYTE PTR [edi-0x29],dl
  423b35:	sar    DWORD PTR [edi],0xe9
  423b38:	mov    dh,0xdb
  423b3a:	adc    eax,0x470115
  423b3f:	xchg   DWORD PTR [edi-0xf553ac5],ecx
  423b45:	test   DWORD PTR fs:[ecx],ebp
  423b48:	ret    
  423b49:	inc    ebp
  423b4a:	xchg   esp,esi
  423b4c:	lods   al,BYTE PTR ds:[esi]
  423b4d:	sar    DWORD PTR [edi],0xe9
  423b50:	jae    0x423b20
  423b52:	je     0x423b72
  423b54:	and    al,0x95
  423b56:	sar    BYTE PTR [eax],0x47
  423b59:	loopne 0x423b1f
  423b5b:	add    BYTE PTR [ecx+eiz*8],dh
  423b5e:	test   eax,eax
  423b60:	fdivp  st(4),st
  423b62:	push   es
  423b63:	mov    bh,0x2f
  423b65:	inc    eax
  423b66:	lds    eax,FWORD PTR [ebx+0x0]
  423b69:	add    BYTE PTR [eax],al
  423b6b:	sbb    dl,BYTE PTR ds:0xbacf89c9
  423b71:	test   edx,edx
  423b73:	fimul  WORD PTR [esi+ebx*2]
  423b76:	add    esi,0x1b
  423b79:	and    BYTE PTR [ebx-0x33],dh
  423b7c:	cmp    eax,0x59ec5a20
  423b81:	adc    al,0x48
  423b83:	lds    ebp,FWORD PTR [eax+0x449f5c15]
  423b89:	add    BYTE PTR [ecx-0x7f],al
  423b8c:	popf   
  423b8d:	push   0xffffffe6
  423b8f:	jl     0x423b71
  423b91:	adc    eax,0x43b8f0
  423b96:	dec    ecx
  423b98:	fild   DWORD PTR [edx+0x3dc643]
  423b9e:	call   0x39002d
  423ba3:	and    esp,ebp
  423ba5:	test   edi,edi
  423ba7:	xchg   ebp,eax
  423ba8:	push   edi
  423ba9:	mov    ah,0x0
  423bab:	call   0x8d49:0xb43c6203
  423bb2:	test   edx,ebp
  423bb4:	loope  0x423bad
  423bb6:	push   DWORD PTR [eax+0x3]
  423bb9:	push   eax
  423bba:	call   FWORD PTR [edi+0x27]
  423bbd:	push   cs
  423bbe:	inc    eax
  423bbf:	dec    edx
  423bc0:	test   ah,al
  423bc2:	or     al,0xc7
  423bc4:	xchg   al,ah
  423bc6:	inc    BYTE PTR [ebp-0x1f]
  423bc9:	push   eax
  423bca:	push   0x5a
  423bcc:	loopne 0x423c39
  423bce:	or     al,0x0
  423bd0:	add    BYTE PTR [eax],al
  423bd2:	ret    
  423bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bd4:	loopne 0x423bd4
  423bd6:	adc    eax,0xf373f7e1
  423bdb:	in     eax,0xe4
  423bdd:	adc    eax,0x3fd293
  423be2:	jo     0x423ba9
  423be4:	push   DWORD PTR [ebx+ebx*4+0x33]
  423be8:	or     cl,BYTE PTR [ebp-0x41cdeba]
  423bee:	add    al,0xf5
  423bf0:	(bad)  [esi+0x1c]
  423bf3:	mov    al,ds:0x6ada66e5
  423bf8:	stos   DWORD PTR es:[edi],eax
  423bf9:	sbb    al,0xec
  423bfb:	jge    0x423be2
  423bfd:	pop    eax
  423bfe:	(bad)  [eax*8+0x6361dcfb]
  423c05:	in     al,dx
  423c06:	repz pop eax
  423c08:	dec    ebx
  423c09:	call   0xb8566586
  423c0e:	cmp    ebx,ebx
  423c10:	aas    
  423c11:	add    BYTE PTR [eax+0x30],ch
  423c14:	cmc    
  423c15:	inc    esp
  423c16:	ds inc esp
  423c18:	jnp    0x423be8
  423c1a:	cld    
  423c1b:	mov    ds:0xbbba85cf,eax
  423c20:	cli    
  423c21:	mov    eax,0x3f965b
  423c26:	popf   
  423c27:	stos   DWORD PTR es:[edi],eax
  423c28:	out    0x1,eax
  423c2a:	pop    es
  423c2b:	out    0x72,al
  423c2d:	test   edi,esp
  423c2f:	and    al,0xe5
  423c31:	sti    
  423c32:	jl     0x423ca7
  423c34:	out    dx,eax
  423c35:	push   edx
  423c36:	add    BYTE PTR [eax],al
  423c38:	add    BYTE PTR [ecx],ah
  423c3a:	(bad)  
  423c3b:	dec    edi
  423c3c:	push   ebx
  423c3d:	jle    0x423ca2
  423c3f:	cmp    ch,bh
  423c41:	fs add eax,0x61332f54
  423c47:	mov    ds:0xe4d555ec,eax
  423c4c:	add    al,0xd9
  423c4e:	fcomip st,st(4)
  423c50:	xchg   ebx,eax
  423c51:	xor    edi,DWORD PTR [ebp-0x80]
  423c54:	shr    al,0x6
  423c57:	cmp    esp,ebx
  423c59:	dec    edi
  423c5a:	loopne 0x423c36
  423c5c:	in     al,0xac
  423c5e:	retf   0x7c01
  423c61:	scas   al,BYTE PTR es:[edi]
  423c62:	add    DWORD PTR [edx],esi
  423c64:	fdiv   QWORD PTR [ebx]
  423c66:	mov    es,ebx
  423c68:	in     al,0x18
  423c6a:	pop    esp
  423c6b:	rcr    ebx,1
  423c6d:	dec    ebx
  423c6e:	mov    ?,WORD PTR [ebx-0x46a3f71c]
  423c74:	fild   DWORD PTR [ebx-0x72]
  423c77:	mov    ds:0xee5473e4,eax
  423c7c:	add    esp,DWORD PTR [esi+0xb]
  423c7f:	pop    si
  423c81:	jmp    0x423c60
  423c83:	mov    ch,BYTE PTR [esi-0x31]
  423c86:	fisub  WORD PTR [ebx+0x7c]
  423c89:	(bad)  
  423c8b:	jae    0x423ccb
  423c8d:	retf   
  423c8e:	pop    es
  423c8f:	cld    
  423c90:	xor    dh,BYTE PTR [edi+ebx*8]
  423c93:	inc    ebp
  423c94:	icebp  
  423c95:	mov    eax,0x3fc36dd5
  423c9a:	or     esp,DWORD PTR [esi+0x36]
  423c9d:	add    BYTE PTR [eax],al
  423c9f:	add    BYTE PTR [ebx-0x54c1a4f8],ch
  423ca5:	not    ah
  423ca7:	push   es
  423ca8:	sbb    al,0x52
  423caa:	add    eax,0x6e001e03
  423caf:	inc    eax
  423cb0:	retf   
  423cb1:	mov    DWORD PTR [ecx-0x24a57b01],esi
  423cb7:	push   eax
  423cb8:	mov    esi,esp
  423cba:	sbb    esp,esp
  423cbc:	js     0x423c48
  423cbe:	sub    DWORD PTR [edi-0x9],ebp
  423cc1:	mov    DWORD PTR [ebx+ebp*8-0x146b2a11],esp
  423cc8:	je     0x423ca3
  423cca:	adc    DWORD PTR [esi],esi
  423ccc:	data16 aad 0xfa
  423ccf:	ja     0x423c87
  423cd1:	into   
  423cd2:	add    BYTE PTR [esi+0x2bc93dae],dl
  423cd8:	cmp    al,0xd5
  423cda:	push   esp
  423cdb:	jb     0x423d20
  423cdd:	lea    eax,[ebp+0x1]
  423ce0:	je     0x423cc4
  423ce2:	adc    al,0x3a
  423ce4:	jmp    0xaaa46d76
  423ce9:	repnz xchg cl,ch
  423cec:	fld    DWORD PTR [ebx-0x20ee1884]
  423cf2:	and    ch,al
  423cf4:	lock push es
  423cf6:	sub    bh,0xcb
  423cf9:	add    DWORD PTR [ebp+0x6ee05],eax
  423cff:	jae    0x423d2a
  423d01:	push   es
  423d02:	adc    BYTE PTR [ebx-0x1000000],0xff
  423d09:	jge    0x423d04
  423d0b:	test   DWORD PTR [esi],0xeb56900
  423d11:	or     esp,DWORD PTR [esi-0x8]
  423d14:	add    eax,0x4275e900
  423d19:	sbb    BYTE PTR [edx-0x12],ah
  423d1c:	and    edx,edi
  423d1e:	je     0x423d49
  423d20:	shl    bh,1
  423d22:	out    0x70,al
  423d24:	(bad)  
  423d26:	fdiv   st(2),st
  423d28:	adc    ecx,DWORD PTR [eax+0x12]
  423d2b:	scas   eax,DWORD PTR es:[edi]
  423d2c:	pop    ecx
  423d2d:	cmc    
  423d2e:	aas    
  423d2f:	lods   al,BYTE PTR ds:[esi]
  423d30:	push   es
  423d31:	or     esp,DWORD PTR [eax+ebx*4+0x7]
  423d35:	add    cl,ch
  423d37:	jo     0x423d16
  423d39:	xor    BYTE PTR [esp+esi*8-0x35ed3fdd],dh
  423d40:	add    DWORD PTR [ebp+0x1d],0xe175d027
  423d47:	js     0x423d83
  423d49:	cld    
  423d4a:	daa    
  423d4b:	stos   BYTE PTR es:[edi],al
  423d4c:	rol    DWORD PTR [eax],1
  423d4e:	add    BYTE PTR [edx],al
  423d50:	stc    
  423d51:	jne    0x423d51
  423d53:	dec    ebp
  423d54:	(bad)  
  423d55:	clc    
  423d56:	add    DWORD PTR [ebp-0x7c],ecx
  423d59:	mov    edx,0x33084a00
  423d5e:	inc    ebp
  423d5f:	cmp    bh,cl
  423d61:	jp     0x423d1c
  423d63:	sbb    cl,BYTE PTR [eax]
  423d65:	add    BYTE PTR [ebx+0x48cf6cf],cl
  423d6b:	add    BYTE PTR [eax],al
  423d6d:	add    BYTE PTR [ebx-0x7b],cl
  423d70:	or     BYTE PTR [ebx-0x6dd014e],cl
  423d76:	sbb    DWORD PTR [edi],esi
  423d78:	adc    al,0x57
  423d7a:	jmp    0x423d5e
  423d7c:	sbb    al,BYTE PTR [edi+0x4589e94c]
  423d82:	push   edx
  423d83:	jg     0x423d7c
  423d85:	je     0x423d69
  423d87:	jle    0x423d49
  423d89:	orps   xmm3,XMMWORD PTR [edi+0x10ca0000]
  423d90:	sbb    eax,0xffffff82
  423d93:	push   ecx
  423d94:	jbe    0x423d95
  423d96:	dec    ebp
  423d97:	test   DWORD PTR [ebp+0x1c],edx
  423d9a:	push   ecx
  423d9b:	fiadd  DWORD PTR [edx+0x1c3f51d8]
  423da1:	mov    ecx,edx
  423da3:	jbe    0x423e21
  423da5:	sbb    BYTE PTR [ebp+eax*4+0x45],cl
  423da9:	sbb    BYTE PTR [ecx],dl
  423dab:	or     BYTE PTR [ebx-0x72470e38],al
  423db1:	dec    esp
  423db2:	mov    ebx,0x3f023e5
  423db7:	aaa    
  423db8:	hlt    
  423db9:	mov    DWORD PTR [edi-0x49],eax
  423dbc:	xor    DWORD PTR [ebp-0x5e],0x76
  423dc0:	inc    edi
  423dc1:	add    edx,esp
  423dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423dc4:	test   esi,edi
  423dc6:	or     eax,0xf374c08c
  423dcb:	mov    cl,BYTE PTR [edx+0x2ad68c2]
  423dd1:	jne    0x423dd3
  423dd3:	add    BYTE PTR [eax],al
  423dd5:	arpl   WORD PTR [eax-0x26],sp
  423dd8:	inc    cl
  423dda:	scas   eax,DWORD PTR es:[edi]
  423ddb:	fidiv  WORD PTR [ebp+0x3f]
  423dde:	push   0x49
  423de0:	(bad)  
  423de1:	lods   al,BYTE PTR ds:[esi]
  423de2:	xor    al,BYTE PTR [ebx]
  423de4:	das    
  423de5:	mov    ds:0x2d8287b5,eax
  423dea:	mov    ah,0xed
  423dec:	adc    DWORD PTR [ebp+0x274d8cec],ebx
  423df2:	xor    al,BYTE PTR [esi-0x2]
  423df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423df6:	pop    edx
  423df7:	clc    
  423df8:	sbb    esp,DWORD PTR cs:[edx-0x7a]
  423dfc:	cli    
  423dfd:	add    al,0xf0
  423dff:	loopne 0x423e76
  423e01:	sti    
  423e02:	cli    
  423e03:	loopne 0x423e1a
  423e05:	ret    
  423e06:	sar    DWORD PTR [edi],cl
  423e08:	add    BYTE PTR [eax-0x54],dh
  423e0b:	adc    bl,bh
  423e0d:	pop    esi
  423e0e:	js     0x423dfc
  423e10:	and    al,0x75
  423e12:	and    cl,0x87
  423e15:	cs in  al,dx
  423e17:	xchg   BYTE PTR [eax],bh
  423e19:	js     0x423e46
  423e1b:	cld    
  423e1c:	xchg   bl,dh
  423e1e:	push   0x58
  423e20:	sbb    bh,BYTE PTR [ebx+esi*1-0x5d4bc7a0]
  423e27:	sbb    al,0xf3
  423e29:	cld    
  423e2a:	pop    ebp
  423e2b:	mov    dl,0xfa
  423e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e2e:	cmp    DWORD PTR [ecx+eax*1-0x36c35dc4],edx
  423e35:	mov    cl,0xe8
  423e37:	jmp    FWORD PTR ds:0xb3000000
  423e3d:	xor    eax,0x17fefbd3
  423e42:	in     al,dx
  423e43:	hlt    
  423e44:	jbe    0x423e68
  423e46:	loope  0x423e2f
  423e48:	add    DWORD PTR [edi],0x865f8cbc
  423e4e:	or     eax,0xe14c6c40
  423e53:	mov    ebx,?
  423e55:	xor    eax,0x2de8cb3
  423e5a:	outs   dx,BYTE PTR ds:[esi]
  423e5b:	adc    ah,BYTE PTR [eax+0x7f6c3105]
  423e61:	jge    0x423e0c
  423e63:	add    ebp,DWORD PTR [edx+0x44]
  423e66:	icebp  
  423e67:	sub    al,0x2b
  423e69:	cmp    BYTE PTR [edi-0x9],cl
  423e6c:	(bad)
  423e6f:	loope  0x423e64
  423e71:	fidivr WORD PTR [eax+0x5ed21989]
  423e77:	mov    ebx,0x87f2ae6e
  423e7c:	outs   dx,BYTE PTR ds:[esi]
  423e7d:	pop    es
  423e7e:	jmp    0xe596aa86
  423e83:	cmp    DWORD PTR [esi-0x2f],0xffffffe9
  423e87:	push   esi
  423e88:	mov    ebx,0x6e8ec95c
  423e8d:	scas   eax,DWORD PTR es:[edi]
  423e8e:	inc    ecx
  423e8f:	in     al,dx
  423e90:	xchg   edi,eax
  423e91:	mov    dl,0x92
  423e93:	loopne 0x423f03
  423e95:	dec    ebx
  423e96:	xor    DWORD PTR [ebx],0xe0b9e8cb
  423e9c:	enter  0xa98a,0x57
  423ea0:	add    BYTE PTR [eax],al
  423ea2:	add    cl,ch
  423ea4:	add    DWORD PTR [edx],edi
  423ea6:	inc    esi
  423ea7:	iret   
  423ea8:	ss pop esi
  423eaa:	enter  0x5d23,0x19
  423eae:	inc    ecx
  423eaf:	jle    0x423f0c
  423eb1:	xchg   ecx,eax
  423eb2:	jmp    0x423f17
  423eb4:	mov    edi,0x5b74e053
  423eb9:	fisttp QWORD PTR [ebx+ebx*4-0x77795fd1]
  423ec0:	push   ecx
  423ec1:	out    0x14,eax
  423ec3:	mov    BYTE PTR [ebp+0x0],bh
  423ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ec7:	cwde   
  423ec8:	sub    edi,eax
  423eca:	push   0xffffff89
  423ecc:	sti    
  423ecd:	push   eax
  423ece:	je     0x423e8f
  423ed0:	sti    
  423ed1:	mov    ebp,fs
  423ed3:	repz aaa 
  423ed5:	push   eax
  423ed6:	pusha  
  423ed7:	mov    ch,0xda
  423ed9:	sti    
  423eda:	hlt    
  423edb:	and    ch,dh
  423edd:	aas    
  423ede:	jmp    0x964f095a
  423ee3:	jne    0x423f30
  423ee5:	test   al,0x99
  423ee7:	pop    es
  423ee8:	into   
  423ee9:	adc    eax,0x113ab9
  423eee:	jb     0x423eb2
  423ef0:	inc    BYTE PTR [esi-0x18ba7c10]
  423ef6:	call   0x625010f1
  423efb:	stos   BYTE PTR es:[edi],al
  423efc:	fidivr DWORD PTR [edi-0x53]
  423eff:	jecxz  0x423f5f
  423f01:	mov    ah,0x73
  423f03:	scas   eax,DWORD PTR es:[edi]
  423f04:	push   es
  423f05:	mov    DWORD PTR [eax+eax*1],esp
  423f08:	add    BYTE PTR [eax],al
  423f0a:	pop    ds
  423f0b:	sub    eax,ecx
  423f0d:	sbb    BYTE PTR [ecx+0x3aaf56fb],cl
  423f13:	int3   
  423f14:	add    DWORD PTR [ecx-0x69057af5],edx
  423f1a:	push   0xe4b285af
  423f1f:	mov    DWORD PTR [edx-0x7a],esp
  423f22:	lods   al,BYTE PTR ds:[esi]
  423f23:	int3   
  423f24:	xchg   BYTE PTR [esp+eiz*4],ah
  423f27:	sub    al,0x5a
  423f29:	adc    ch,BYTE PTR [esi-0x416f76f]
  423f2f:	xchg   esp,ebp
  423f31:	push   0xffffffa3
  423f33:	test   DWORD PTR [esi-0x49],0xc3f087dd
  423f3a:	test   BYTE PTR [edi+0x5a67b3d6],0xf4
  423f41:	add    BYTE PTR [ecx],al
  423f43:	retf   0xf233
  423f46:	dec    eax
  423f47:	rol    DWORD PTR [edx+0x6ab68130],1
  423f4d:	sbb    DWORD PTR [ecx+0x6e77f42f],eax
  423f53:	push   0xffffff83
  423f55:	jge    0x423fc1
  423f57:	push   0xffffff85
  423f59:	js     0x423fa9
  423f5b:	das    
  423f5c:	adc    DWORD PTR [ecx],ebp
  423f5e:	jg     0x423f18
  423f60:	sti    
  423f61:	lds    esi,FWORD PTR [ebx]
  423f63:	pmuludq mm6,QWORD PTR [ebx-0x5]
  423f67:	hlt    
  423f68:	mov    edi,0x999e9
  423f6d:	add    BYTE PTR [eax],al
  423f6f:	add    BYTE PTR [eax],al
  423f71:	leave  
  423f72:	leave  
  423f73:	dec    BYTE PTR [edx-0x390de2ec]
  423f79:	iret   
  423f7a:	scas   eax,DWORD PTR es:[edi]
  423f7b:	add    BYTE PTR [ecx+0x7d89bad7],cl
  423f81:	cmp    BYTE PTR ds:[edi],al
  423f84:	push   edi
  423f85:	cdq    
  423f86:	ret    
  423f87:	dec    BYTE PTR [edi+0x22]
  423f8a:	sub    DWORD PTR [ebp+0x458345fe],eax
  423f90:	clc    
  423f91:	xor    DWORD PTR [eax],ecx
  423f93:	jnp    0x423ffa
  423f95:	xchg   edx,eax
  423f96:	add    eax,DWORD PTR [ebp+0x7b3bfeff]
  423f9c:	jge    0x423f20
  423f9e:	add    esi,DWORD PTR [eax+edx*1+0x37]
  423fa2:	aas    
  423fa3:	hlt    
  423fa4:	push   eax
  423fa5:	inc    edi
  423fa6:	aas    
  423fa7:	clc    
  423fa8:	push   eax
  423fa9:	bound  ebp,QWORD PTR [eax+0x7d45fff6]
  423faf:	jge    0x423fa5
  423fb1:	dec    edi
  423fb2:	mov    cl,0x74
  423fb4:	xor    DWORD PTR [ecx],ebx
  423fb6:	addr16 clc 
  423fb8:	add    BYTE PTR [ebp-0xcfecd79],dl
  423fbe:	(bad)  
  423fc0:	xchg   BYTE PTR [esi],bl
  423fc2:	out    0x90,al
  423fc4:	inc    ebp
  423fc5:	xchg   DWORD PTR [ebp-0x70],ebp
  423fc8:	inc    ebp
  423fc9:	mov    ebp,DWORD PTR [ebp-0x26]
  423fcc:	outs   dx,DWORD PTR ds:[esi]
  423fcd:	jecxz  0x423fe7
  423fcf:	pop    eax
  423fd0:	or     al,0x1d
  423fd2:	and    DWORD PTR [eax-0x10],ebx
  423fd5:	add    BYTE PTR [eax],al
  423fd7:	add    BYTE PTR [ebx+0x4],bl
  423fda:	loope  0x423fd7
  423fdc:	imul   edi,DWORD PTR fs:[edi+0x4d5770b],0x6064f300
  423fe7:	hlt    
  423fe8:	pop    eax
  423fe9:	fadd   QWORD PTR [esi+0x7e87fb75]
  423fef:	jge    0x423fd4
  423ff1:	in     eax,0xa
  423ff3:	test   DWORD PTR [ebp-0x64000023],ecx
  423ff9:	cdq    
  423ffa:	xchg   BYTE PTR [eax-0xd],al
  423ffd:	mov    al,0x53
  423fff:	lock or esi,DWORD PTR [eax]
  424002:	pop    ecx
  424003:	cli    
  424004:	adc    al,0x5c
  424006:	fdiv   st(1),st
  424008:	xchg   bl,bl
  42400a:	adc    al,al
  42400c:	outs   dx,BYTE PTR ds:[esi]
  42400d:	popf   
  42400e:	or     eax,0xffdd0a88
  424013:	(bad)  
  424014:	mov    eax,0x700b102a
  424019:	add    BYTE PTR [eax+eax*1],0xf3
  42401d:	pop    eax
  42401e:	pop    ecx
  42401f:	adc    al,0x6e
  424021:	lods   al,BYTE PTR ds:[esi]
  424022:	lds    esp,FWORD PTR [edi]
  424024:	push   ebp
  424025:	in     al,0x0
  424027:	cmp    dh,al
  424029:	add    bl,al
  42402b:	or     ebp,DWORD PTR [edi-0x64]
  42402e:	add    al,0x0
  424030:	repz push 0x61d3e8c5
  424036:	(bad)  
  424038:	jp     0x424041
  42403a:	lods   al,BYTE PTR ds:[esi]
  42403b:	repz add BYTE PTR [eax],al
  42403e:	add    BYTE PTR [edi-0x39],ch
  424041:	jmp    0x9803:0xe9076587
  424048:	adc    eax,0x36e3514a
  42404d:	inc    edx
  42404e:	not    esp
  424050:	hlt    
  424051:	test   al,0x3
  424053:	je     0x42405a
  424055:	out    0x46,al
  424057:	jecxz  0x423fe2
  424059:	and    eax,0x1d546810
  42405e:	fstp   st(6)
  424060:	into   
  424061:	mov    ecx,0xfb1706dc
  424066:	inc    ebx
  424067:	repz and DWORD PTR [ebx-0x22bd8bf9],0x258a3b28
  424072:	adc    BYTE PTR [edx+0x35f39e81],ah
  424078:	(bad)  
  424079:	pop    esi
  42407a:	push   es
  42407b:	je     0x4240d1
  42407d:	stc    
  42407e:	add    BYTE PTR [ecx],dh
  424080:	or     ah,BYTE PTR [eax+ebx*8]
  424083:	ret    0xd236
  424086:	test   ah,0xf4
  424089:	sub    BYTE PTR [esp+ecx*4],al
  42408c:	ret    0xdcf5
  42408f:	xchg   esp,eax
  424090:	not    al
  424092:	call   0xf684:0x8ab2cc7c
  424099:	pop    edi
  42409a:	pop    eax
  42409b:	pop    es
  42409c:	lds    ebp,FWORD PTR [ebx*8-0x7ec51e0e]
  4240a3:	add    BYTE PTR [eax],al
  4240a5:	add    BYTE PTR [esi-0x31],bl
  4240a8:	jmp    0xe3c45103
  4240ad:	mov    BYTE PTR [ecx+0x3],cl
  4240b0:	outs   dx,BYTE PTR ds:[esi]
  4240b1:	dec    eax
  4240b2:	jecxz  0x4240d5
  4240b4:	xor    DWORD PTR [esp+edi*4],0xc71800c5
  4240bb:	int3   
  4240bc:	jg     0x42412d
  4240be:	iret   
  4240bf:	jg     0x424106
  4240c1:	popa   
  4240c2:	ins    DWORD PTR es:[edi],dx
  4240c3:	(bad)  
  4240c4:	je     0x4240e4
  4240c6:	out    0x85,al
  4240c8:	fadd   DWORD PTR [ecx+0x72]
  4240cb:	push   ebp
  4240cc:	sti    
  4240cd:	dec    esi
  4240ce:	jns    0x424113
  4240d0:	hlt    
  4240d1:	jb     0x42407b
  4240d3:	test   DWORD PTR [ebp-0x1f],ebx
  4240d6:	imul   ecx,ebp,0xffffff86
  4240d9:	mov    esp,0xf14c7a7c
  4240de:	icebp  
  4240df:	fisubr WORD PTR [ebp-0x7b2eb995]
  4240e5:	sub    esp,eax
  4240e7:	jmp    0x42406f
  4240e9:	out    dx,eax
  4240ea:	repz int 0x52
  4240ed:	push   cs
  4240ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240ef:	into   
  4240f0:	push   eax
  4240f1:	push   es
  4240f2:	cmp    eax,0xf0a9121d
  4240f7:	int    0x36
  4240f9:	(bad)  
  4240fa:	out    dx,al
  4240fb:	dec    ebp
  4240fc:	(bad)  
  4240fd:	fnsave [esi]
  4240ff:	add    al,BYTE PTR [ebx]
  424101:	repz mov cl,0x7f
  424104:	aaa    
  424105:	faddp  st(2),st
  424107:	into   
  424108:	call   0x42413c
  42410d:	ins    BYTE PTR es:[edi],dx
  42410e:	sar    bl,1
  424110:	arpl   WORD PTR [edx-0x3bd8a42f],si
  424116:	mov    edi,0x33f0d5be
  42411b:	xchg   ebp,eax
  42411d:	ins    BYTE PTR es:[edi],dx
  42411e:	fisub  DWORD PTR [eax]
  424120:	sbb    ah,BYTE PTR [ecx]
  424122:	sbb    al,0xc0
  424124:	ds je  0x424171
  424127:	or     BYTE PTR [eax+0x32],dh
  42412a:	jecxz  0x4240b5
  42412c:	sub    al,0xc7
  42412e:	push   cs
  42412f:	inc    ebx
  424130:	in     eax,dx
  424131:	stc    
  424132:	mov    bh,cl
  424134:	add    bl,bl
  424136:	or     BYTE PTR [eax],al
  424138:	mov    DWORD PTR [edi],edx
  42413a:	fild   WORD PTR [ebx+0x7505a277]
  424140:	in     al,dx
  424141:	imul   ecx,DWORD PTR [ebp+0x7da276f7],0xc00c4e
  42414b:	dec    edi
  42414c:	call   0x3a20c6
  424151:	push   ss
  424152:	ret    
  424153:	pop    es
  424154:	test   BYTE PTR ds:0xbd000002,cl
  42415a:	cmp    BYTE PTR [eax],cl
  42415c:	mov    edx,DWORD PTR [esp+eax*1+0x62]
  424160:	adc    BYTE PTR [ebp+0xdeca1e0],al
  424166:	mov    al,0x84
  424168:	ror    BYTE PTR [ebp+0x4c],0x89
  42416c:	add    DWORD PTR [edx+0x8],ecx
  42416f:	add    DWORD PTR [esi+0x0],0x0
  424173:	add    BYTE PTR [esi+0x23],al
  424176:	pop    ebp
  424177:	lock cmp ecx,DWORD PTR [edi]
  42417a:	hlt    
  42417b:	mov    ebx,DWORD PTR [eax+ebx*8-0x78]
  42417f:	inc    ebp
  424180:	ds test eax,edi
  424183:	push   es
  424184:	dec    ebp
  424185:	or     bh,0x0
  424188:	sbb    cl,BYTE PTR [eax]
  42418a:	add    DWORD PTR [ebx],0xffffff89
  42418d:	scas   eax,DWORD PTR es:[edi]
  42418e:	dec    BYTE PTR [esi]
  424190:	mov    BYTE PTR [edi+0x0],dl
  424193:	add    BYTE PTR [edx],bl
  424195:	in     eax,dx
  424196:	inc    esp
  424197:	cld    
  424198:	std    
  424199:	mov    BYTE PTR [edi+0x0],bh
  42419c:	or     cl,BYTE PTR [eax]
  42419e:	pop    es
  42419f:	mov    bh,0xd1
  4241a1:	push   es
  4241a2:	out    dx,al
  4241a3:	rol    esi,0x3b
  4241a6:	ins    DWORD PTR es:[edi],dx
  4241a7:	cmp    BYTE PTR [ebx-0x35],0x6
  4241ab:	mov    dh,0xa3
  4241ad:	mov    eax,0xa6f31bd9
  4241b2:	and    cl,0xdb
  4241b5:	pusha  
  4241b6:	les    esp,FWORD PTR [eax]
  4241b8:	hlt    
  4241b9:	or     al,0xcc
  4241bb:	mov    DWORD PTR [esi],ebp
  4241bd:	jle    0x424141
  4241bf:	clc    
  4241c0:	in     eax,0xcb
  4241c2:	xor    eax,0x1c57b37f
  4241c7:	aas    
  4241c8:	stc    
  4241c9:	stos   BYTE PTR es:[edi],al
  4241ca:	dec    ebp
  4241cb:	sti    
  4241cc:	and    al,0xd2
  4241ce:	mov    BYTE PTR [edi],bh
  4241d0:	in     eax,dx
  4241d1:	xor    al,0x4e
  4241d3:	adc    BYTE PTR [esi-0x46],bh
  4241d6:	xlat   BYTE PTR ds:[ebx]
  4241d7:	push   eax
  4241d8:	add    BYTE PTR [eax],al
  4241da:	add    BYTE PTR [ebx+0x7cfaa4af],bl
  4241e0:	pusha  
  4241e1:	xlat   BYTE PTR ds:[ebx]
  4241e2:	add    edi,esi
  4241e4:	int    0x8a
  4241e6:	push   ebp
  4241e7:	sti    
  4241e8:	sub    cl,BYTE PTR [eax-0xc]
  4241eb:	ret    0x4852
  4241ee:	lock ret 0x4fec
  4241f2:	loopne 0x42425c
  4241f4:	sub    BYTE PTR [edi],ch
  4241f6:	sti    
  4241f7:	(bad)  
  4241f8:	cmc    
  4241f9:	mov    DWORD PTR [ebp+0x47],eax
  4241fc:	cmc    
  4241fd:	inc    esi
  4241fe:	std    
  4241ff:	cmp    al,0xcc
  424201:	jp     0x4241c3
  424203:	mov    edi,0x1745d6e0
  424208:	fmul   QWORD PTR [ebx-0x8]
  42420b:	imul   ebx,ebp,0x7f
  42420e:	add    bl,dh
  424210:	mov    ch,0x47
  424212:	jle    0x424229
  424214:	mov    ah,0x8d
  424216:	jge    0x424213
  424218:	push   0xc1ae2905
  42421d:	add    eax,0xd80a70d8
  424222:	add    ah,ah
  424224:	pusha  
  424225:	pop    ebx
  424226:	sti    
  424227:	in     al,dx
  424228:	cdq    
  424229:	test   DWORD PTR [ebp-0x21],edi
  42422c:	pop    es
  42422d:	jmp    0xd30c6383
  424232:	mov    WORD PTR [eax],?
  424234:	add    eax,DWORD PTR [ecx]
  424236:	jmp    0x424206
  424238:	pop    es
  424239:	jmp    0x83cda829
  42423e:	fld    DWORD PTR [eax]
  424240:	add    BYTE PTR [eax],al
  424242:	je     0x4241f3
  424244:	fs mov ebp,0x4f71f03f
  42424a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42424b:	retf   0xd3f4
  42424e:	or     eax,0xaa6bb607
  424253:	pop    es
  424254:	jmp    0x475dcd5c
  424259:	(bad)  [eax+0x5034136]
  42425f:	leave  
  424260:	inc    edx
  424261:	fld    DWORD PTR [esi]
  424263:	xlat   BYTE PTR ds:[ebx]
  424264:	push   ecx
  424265:	(bad)  [edx-0x37]
  424268:	xor    dl,dl
  42426a:	icebp  
  42426b:	pop    es
  42426c:	fidivr DWORD PTR [edi-0x7e]
  42426f:	pop    es
  424270:	jmp    0x61250d78
  424275:	inc    ebp
  424276:	repz leave 
  424278:	cld    
  424279:	out    0xfd,eax
  42427b:	inc    esi
  42427c:	jmp    0x31ff56c
  424281:	fnstenv [ecx+eax*2-0x13]
  424285:	mov    WORD PTR [ecx+0x2f3f5ffe],ds
  42428b:	xchg   cl,dh
  42428d:	pop    es
  42428e:	xchg   ebp,eax
  42428f:	pop    esi
  424290:	outs   dx,BYTE PTR ds:[esi]
  424291:	add    al,0x9c
  424293:	into   
  424294:	in     eax,dx
  424295:	push   ebp
  424296:	xchg   edx,eax
  424297:	or     eax,0x2a80d82c
  42429c:	pop    esi
  42429d:	dec    esp
  42429e:	out    dx,eax
  42429f:	shr    DWORD PTR [eax+0x906f303],1
  4242a5:	push   eax
  4242a6:	add    BYTE PTR [eax],al
  4242a8:	add    BYTE PTR [edi-0xb4eff7b],ch
  4242ae:	push   esp
  4242af:	cmp    esi,DWORD PTR [edi-0x1c8bf84f]
  4242b5:	outs   dx,DWORD PTR ds:[esi]
  4242b6:	sti    
  4242b7:	jmp    DWORD PTR [edx+0x2f]
  4242ba:	pop    es
  4242bb:	jmp    DWORD PTR [eax+0x2ab9ca6a]
  4242c1:	out    dx,eax
  4242c2:	(bad)  
  4242c4:	imul   ebx,DWORD PTR [edx+0x24a984cd],0x7fbafb28
  4242ce:	sti    
  4242cf:	sti    
  4242d0:	xor    BYTE PTR [edi],ch
  4242d2:	pop    es
  4242d3:	push   ebx
  4242d5:	lock nop
  4242d7:	aas    
  4242d8:	jmp    0xfd3d7abc
  4242dd:	loopne 0x4242d3
  4242df:	aas    
  4242e0:	jmp    0x2dc10c5c
  4242e5:	hlt    
  4242e6:	pop    es
  4242e7:	add    eax,0x956e9
  4242ec:	(bad)  
  4242ed:	(bad)  
  4242f0:	jmp    0x4998:0xeafc4419
  4242f7:	jge    0x424316
  4242f9:	in     al,dx
  4242fa:	pop    ecx
  4242fb:	cwde   
  4242fc:	sub    DWORD PTR [edi+ecx*4],0xf32be93f
  424303:	out    dx,eax
  424304:	(bad)  [eax+0x48a4fb06]
  42430a:	add    DWORD PTR [ebp+0x1],0x77000000
  424311:	inc    ebx
  424312:	in     al,dx
  424313:	rol    DWORD PTR [edi],1
  424315:	inc    esi
  424316:	sbb    al,0xf6
  424318:	jb     0x424330
  42431a:	cli    
  42431b:	fidivr WORD PTR [ecx+ebx*1]
  42431e:	rcl    BYTE PTR [edx],0xb2
  424321:	loop   0x42437e
  424323:	repnz xor BYTE PTR [ebx+esi*8],ch
  424327:	add    BYTE PTR [edx+0xd],dl
  42432a:	leave  
  42432b:	ret    0x50e
  42432e:	dec    esi
  42432f:	mov    ebp,DWORD PTR [edx-0x4df79150]
  424335:	repnz cmp dh,0x95
  424339:	mov    al,0x6e
  42433b:	adc    BYTE PTR [edx+0x65fe811a],al
  424341:	mov    al,0x6e
  424343:	sbb    al,0x72
  424345:	and    al,BYTE PTR [ecx+0x6eb075fe]
  42434b:	sub    al,0x62
  42434d:	retf   0xfe80
  424350:	and    eax,0x72306eb0
  424355:	rol    BYTE PTR [eax+0x6eb015fe],cl
  42435b:	xor    al,0x42
  42435d:	cli    
  42435e:	cmp    dh,0x25
  424361:	jl     0x4243d1
  424363:	inc    eax
  424364:	ud1    esi,DWORD PTR [ebp+ecx*1+0x35]
  424369:	stc    
  42436a:	out    0xfb,eax
  42436c:	or     dh,BYTE PTR [ecx-0x4a4da909]
  424372:	cmp    dh,0x0
  424375:	add    BYTE PTR [eax],al
  424377:	adc    eax,0x7cffbb11
  42437c:	enter  0xebe3,0xca
  424380:	mov    al,0xf7
  424382:	jmp    FWORD PTR [esp+edi*8-0x19]
  424386:	jecxz  0x424362
  424388:	mov    al,0xf7
  42438a:	(bad)  
  42438b:	mov    esp,0xcadbe3d3
  424390:	mov    al,0xf7
  424392:	ret    
  424393:	lea    edi,[ebp-0x8]
  424396:	test   DWORD PTR ds:0xa1560e38,edx
  42439c:	mov    eax,0x3f2f663
  4243a1:	je     0x4243c7
  4243a3:	repz loope 0x424424
  4243a6:	jmp    0xc0fc:0xfbc5c5eb
  4243ad:	inc    edx
  4243ae:	jne    0x4243ae
  4243b0:	out    0x32,eax
  4243b2:	jmp    0xfc17a15b
  4243b7:	ds gs jecxz 0x42443a
  4243bb:	xlat   BYTE PTR ds:[ebx]
  4243bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243bd:	xchg   BYTE PTR [ebp-0x15],al
  4243c0:	pop    esp
  4243c1:	jecxz  0x42441f
  4243c3:	and    BYTE PTR [eax],cl
  4243c5:	sub    edi,ebx
  4243c7:	inc    ebx
  4243c8:	loop   0x424352
  4243ca:	je     0x4243e3
  4243cc:	(bad)  
  4243cd:	out    0xba,eax
  4243cf:	cmp    eax,0xb384d249
  4243d4:	loopne 0x424451
  4243d6:	pushf  
  4243d7:	repnz (bad) 
  4243da:	add    BYTE PTR cs:[eax],al
  4243dd:	add    BYTE PTR [eax-0x30bb4549],bh
  4243e3:	sar    edi,1
  4243e5:	add    BYTE PTR [ebx-0x6f],bh
  4243e8:	sbb    ecx,DWORD PTR [edi]
  4243ea:	fwait
  4243eb:	pop    esi
  4243ec:	or     eax,0xcf547cfb
  4243f1:	or     esi,DWORD PTR ds:0xfc0f1ba1
  4243f7:	dec    edi
  4243f8:	cmp    eax,DWORD PTR [edi+edi*8]
  4243fb:	ins    BYTE PTR es:[edi],dx
  4243fc:	cs dec edi
  4243fe:	ret    
  4243ff:	xchg   edx,edx
  424401:	adc    eax,0x3fd2cb
  424406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424407:	cmp    sp,WORD PTR [edi+eiz*8]
  42440b:	add    eax,0x3d8064
  424410:	sbb    al,0x5c
  424412:	(bad)  
  424414:	add    al,BYTE PTR [ebp+ebp*8-0x3f000022]
  42441b:	ins    BYTE PTR es:[edi],dx
  42441c:	imul   edi,edi,0xd53606c1
  424422:	lahf   
  424423:	and    dh,BYTE PTR ds:0x252287d5
  424429:	aad    0x7f
  42442b:	and    dl,BYTE PTR ds:0xdc4ee6d5
  424431:	inc    ebx
  424432:	repz jge 0x42445a
  424435:	and    BYTE PTR [edi],dl
  424437:	add    ah,BYTE PTR [esi-0x17e890fb]
  42443d:	add    esi,ebx
  42443f:	xchg   ecx,eax
  424440:	sub    al,0xc
  424442:	add    BYTE PTR [eax],al
  424444:	add    BYTE PTR [edi+eax*1+0x69],ch
  424448:	pop    esp
  424449:	jmp    0x424452
  42444b:	push   ebx
  42444c:	rol    BYTE PTR [ecx+0x47],0xe9
  424450:	dec    edi
  424451:	test   BYTE PTR [ebp+esi*4-0x49f8ccb2],0xca
  424459:	jae    0x42449e
  42445b:	int    0x41
  42445d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42445e:	pop    ecx
  42445f:	fisubr DWORD PTR [esi-0x4e]
  424462:	push   eax
  424463:	push   0x6906f3e3
  424468:	add    al,0x72
  42446a:	shr    cl,1
  42446c:	int3   
  42446d:	test   DWORD PTR [edx+0x377830b8],0x3da36bf1
  424477:	test   eax,0xd3b6803
  42447c:	dec    eax
  42447d:	rol    ebp,0xb5
  424480:	pop    ds
  424481:	mov    bl,0xc5
  424483:	cld    
  424484:	push   ebx
  424485:	inc    BYTE PTR [esi-0x17]
  424488:	mov    BYTE PTR [ebx+0x2],al
  42448b:	push   ss
  42448c:	add    eax,0x3e97d6f
  424491:	repz xor dh,bl
  424494:	xchg   BYTE PTR [edi+0x1b3bb0ea],dh
  42449a:	loop   0x42449c
  42449c:	pop    ds
  42449d:	ds ret 0xe968
  4244a1:	lock push es
  4244a3:	mov    al,ds:0xc38e3e53
  4244a8:	cmp    DWORD PTR [eax],eax
  4244aa:	add    BYTE PTR [eax],al
  4244ac:	ffree  st(1)
  4244ae:	adc    eax,0x61445
  4244b3:	inc    ebx
  4244b4:	stc    
  4244b5:	xchg   edx,eax
  4244b6:	jl     0x4244c5
  4244b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244b9:	pop    esi
  4244ba:	call   0xfc03e33e
  4244bf:	bound  edi,QWORD PTR ds:0xf9e6870f
  4244c5:	pop    esi
  4244c6:	and    BYTE PTR [edi],bl
  4244c8:	add    eax,edx
  4244ca:	jo     0x4244c9
  4244cc:	jne    0x424518
  4244ce:	and    al,0x21
  4244d0:	call   DWORD PTR [ebx+0x56dcc544]
  4244d6:	call   0xfc02f7e0
  4244db:	push   0x6c
  4244dd:	adc    al,BYTE PTR [ebp+0x681e3ea9]
  4244e3:	jmp    0xd3e24bd8
  4244e8:	mov    edi,0xd30574c1
  4244ed:	pop    eax
  4244ee:	sti    
  4244ef:	cld    
  4244f0:	or     al,0x1c
  4244f2:	inc    eax
  4244f3:	jmp    0xe5667f9f
  4244f8:	mov    BYTE PTR [edx+0x7b],al
  4244fb:	aas    
  4244fc:	inc    edi
  4244fd:	lea    eax,[ebx]
  4244ff:	ss shr dh,0xfa
  424503:	mov    ecx,0xbf4f55fc
  424508:	aas    
  424509:	sbb    eax,DWORD PTR [eax+0x7f06b0f4]
  42450f:	adc    DWORD PTR [eax],eax
  424511:	add    BYTE PTR [eax],al
  424513:	icebp  
  424514:	cmp    ebp,DWORD PTR [esi]
  424516:	mov    edx,0x244a75
  42451b:	push   ds
  42451c:	stc    
  42451d:	mov    WORD PTR [esi+esi*1-0xf],es
  424521:	dec    edi
  424522:	push   0x20000949
  424527:	test   BYTE PTR [edx+0xece2444],al
  42452d:	add    BYTE PTR [eax],al
  42452f:	sbb    al,BYTE PTR [edx+0x5c]
  424532:	and    al,0xe6
  424534:	fst    DWORD PTR ds:0x4907a4
  42453a:	xor    DWORD PTR [edx],0xb
  42453d:	jne    0x424549
  42453f:	pop    ebx
  424540:	push   edi
  424541:	and    al,0x20
  424543:	xchg   edx,eax
  424544:	or     eax,DWORD PTR [eax]
  424546:	add    BYTE PTR [esi],ah
  424548:	push   eax
  424549:	dec    esi
  42454a:	call   edi
  42454c:	push   esp
  42454d:	adc    eax,0x74d9da40
  424552:	and    al,0xb6
  424554:	fst    DWORD PTR ds:0x48c77c
  42455a:	push   DWORD PTR [esi-0x3800e814]
  424560:	push   esp
  424561:	adc    eax,0x44d69a40
  424566:	and    al,0xb9
  424568:	mov    BYTE PTR [esp-0x67],bh
  42456c:	or     al,BYTE PTR [edi]
  42456e:	sbb    BYTE PTR [ecx],0xd9
  424571:	idiv   edi
  424573:	sbb    eax,0x34245f
  424578:	add    BYTE PTR [eax],al
  42457a:	xor    cl,BYTE PTR [edx]
  42457c:	ja     0x42457c
  42457e:	sub    eax,0xf22474d8
  424583:	loop   0x42457d
  424585:	jle    0x4245a3
  424587:	fcom   DWORD PTR [edi+0x5e]
  42458a:	pop    ecx
  42458b:	enter  0x8b53,0xe7
  42458f:	cmc    
  424590:	mov    ecx,0x74d95a04
  424595:	and    al,0xf3
  424597:	loope  0x424570
  424599:	in     al,0xbd
  42459b:	adc    ecx,edi
  42459d:	sti    
  42459e:	mov    edi,0x48e807d1
  4245a3:	inc    esp
  4245a4:	sar    ebx,1
  4245a6:	cdq    
  4245a7:	fnstcw WORD PTR [ebx+esi*2-0x15]
  4245ab:	bound  edx,QWORD PTR [eax+0x24]
  4245ae:	jecxz  0x4245f5
  4245b0:	(bad)  
  4245b2:	es in  eax,0xce
  4245b5:	mov    DWORD PTR [edi-0x62190fef],esp
  4245bb:	inc    edi
  4245bc:	and    BYTE PTR [esi-0x10],ah
  4245bf:	cmp    al,BYTE PTR [ebx+0x24]
  4245c2:	adc    ebx,DWORD PTR [esi]
  4245c4:	jnp    0x42460a
  4245c6:	femms  
  4245c8:	aaa    
  4245c9:	call   0xfc13777f
  4245ce:	cmp    al,0x37
  4245d0:	inc    ebx
  4245d1:	and    al,0x1b
  4245d3:	xchg   esi,eax
  4245d4:	pushf  
  4245d5:	jp     0x42459c
  4245d7:	pushf  
  4245d8:	jp     0x42461e
  4245da:	pop    ss
  4245db:	retf   0xf882
  4245de:	add    BYTE PTR [eax],al
  4245e0:	add    BYTE PTR [ecx+eax*8-0x3753d0f9],dh
  4245e7:	ret    0xda72
  4245ea:	sub    BYTE PTR [ebx+0x24],al
  4245ed:	sti    
  4245ee:	bound  eax,QWORD PTR [ebx]
  4245f0:	mov    eax,0x155805da
  4245f5:	mov    WORD PTR ds:0xc00b15cf,ds
  4245fb:	aas    
  4245fc:	add    BYTE PTR [ebx],ah
  4245fe:	sub    DWORD PTR [ebx+0x24],eax
  424601:	xlat   BYTE PTR ds:[ebx]
  424602:	dec    esp
  424603:	adc    edi,DWORD PTR [eax-0xf9fa5]
  424609:	sub    BYTE PTR fs:[ebx+0x24],al
  42460d:	pop    ss
  42460e:	ins    DWORD PTR es:[edi],dx
  42460f:	or     bh,al
  424611:	loope  0x424619
  424613:	cmp    bh,BYTE PTR [esi-0x31]
  424616:	jmp    0xd213:0x446fdc00
  42461d:	outs   dx,BYTE PTR ds:[esi]
  42461e:	dec    edx
  42461f:	(bad)
  424622:	xchg   ecx,eax
  424623:	lods   eax,DWORD PTR ds:[esi]
  424624:	daa    
  424625:	or     edx,DWORD PTR [edi+0x6c]
  424628:	inc    edi
  424629:	iret   
  42462a:	cli    
  42462b:	cwde   
  42462c:	cmp    DWORD PTR [ebx],ecx
  42462e:	je     0x4245e4
  424630:	rcr    BYTE PTR [eax],cl
  424632:	(bad)  
  424633:	loope  0x424642
  424635:	add    al,0x39
  424637:	(bad)  
  424638:	(bad)  [ebx-0x592e2d3d]
  42463e:	(bad)  
  42463f:	mov    ebp,0x1b57a233
  424644:	jnp    0x424646
  424646:	add    BYTE PTR [eax],al
  424648:	lock cmc 
  42464a:	popf   
  42464b:	jnp    0x424695
  42464d:	lss    edx,FWORD PTR [ebx-0x9]
  424651:	sar    DWORD PTR [ecx],0xfc
  424654:	int3   
  424655:	or     BYTE PTR [esi],bl
  424657:	ror    eax,1
  424659:	xchg   esp,eax
  42465a:	adc    cl,BYTE PTR [eax]
  42465c:	and    edx,DWORD PTR [eax+0x3ee6d0eb]
  424662:	test   DWORD PTR [ebx-0xd],0x7ed02c8f
  424669:	dec    esp
  42466a:	jge    0x4246a0
  42466c:	inc    ecx
  42466d:	scas   eax,DWORD PTR es:[edi]
  42466e:	int    0xcb
  424670:	cwde   
  424671:	ret    0xa5e
  424674:	ins    BYTE PTR es:[edi],dx
  424675:	push   esp
  424676:	gs jl  0x424668
  424679:	pop    es
  42467a:	and    dl,dh
  42467c:	add    ch,ah
  42467e:	mov    ch,0x34
  424680:	and    BYTE PTR [edi],ch
  424682:	xchg   esi,eax
  424683:	repnz mov dh,0x6
  424686:	xchg   esi,eax
  424687:	xor    al,0x68
  424689:	sbb    al,0x99
  42468b:	cmc    
  42468c:	and    al,0x7
  42468e:	add    BYTE PTR [eax-0x56],ah
  424691:	adc    dh,BYTE PTR [edi]
  424693:	sub    bh,BYTE PTR [ebx+0x2fe8b00a]
  424699:	adc    bl,bh
  42469b:	xlat   BYTE PTR ds:[ebx]
  42469c:	sub    BYTE PTR [edi-0xedde883],ch
  4246a2:	mov    edi,0xbfd007af
  4246a7:	lahf   
  4246a8:	scas   eax,DWORD PTR es:[edi]
  4246a9:	mov    dh,0x7f
  4246ab:	aas    
  4246ac:	add    BYTE PTR [eax],al
  4246ae:	add    bl,bl
  4246b0:	sar    bl,0xe9
  4246b3:	lock cmp esp,DWORD PTR [eax]
  4246b6:	xor    eax,0x28e9000e
  4246bc:	jae    0x42473b
  4246be:	fbld   TBYTE PTR [ebx]
  4246c0:	nop
  4246c1:	or     BYTE PTR ds:0x640006f5,0x30
  4246c8:	cmp    al,0xc
  4246ca:	push   ebx
  4246cb:	out    dx,eax
  4246cc:	mov    esp,0x1e90515
  4246d1:	add    bl,bh
  4246d3:	mov    al,0x5c
  4246d5:	mov    edi,0xbf5cf179
  4246da:	aas    
  4246db:	mov    ds:0x47ed243a,al
  4246e0:	mov    bh,0xfb
  4246e2:	sbb    eax,0x81e8130b
  4246e7:	mov    esp,0xb0bafbbc
  4246ec:	lds    eax,FWORD PTR [edx]
  4246ee:	xchg   ebp,eax
  4246ef:	es inc edi
  4246f1:	add    BYTE PTR [eax+0x2a],ah
  4246f4:	sbb    ecx,DWORD PTR [ecx+0x68467]
  4246fa:	jmp    0xeb66cc08
  4246ff:	lock push es
  424701:	mov    DWORD PTR [edi-0x28],ebp
  424704:	sar    bl,0xe9
  424707:	test   esp,0xbe18005a
  42470d:	sti    
  42470e:	push   ebp
  42470f:	loope  0x4246e5
  424711:	call   0x424729
  424716:	dec    edx
  424717:	add    eax,0xe98ef600
  42471c:	pop    es
  42471d:	add    DWORD PTR [esi+0xf],ebp
  424720:	dec    esi
  424721:	call   0x389786
  424726:	ror    edi,1
  424728:	push   esi
  424729:	ret    0x54e
  42472c:	div    DWORD PTR [esi+0xb3e]
  424732:	int    0xf
  424734:	aam    0x8a
  424736:	dec    edx
  424737:	add    eax,0xd78753e8
  42473c:	test   DWORD PTR [ebx+0x15d2e344],0xf64ed125
  424746:	dec    ecx
  424747:	or     esi,DWORD PTR [eax+edx*1-0x50]
  42474b:	mov    esi,0xbd6878c
  424750:	add    BYTE PTR [eax],al
  424752:	adc    BYTE PTR [ecx+esi*8],bh
  424755:	call   0x39f69c
  42475a:	pushf  
  42475b:	(bad)  
  42475c:	cli    
  42475d:	jae    0x424701
  42475f:	cmp    eax,0x8fc22444
  424764:	shl    BYTE PTR [esp+edx*8-0x7b],0xc0
  424769:	add    al,0xfa
  42476b:	test   DWORD PTR [edi],edi
  42476d:	adc    al,0x82
  42476f:	inc    esi
  424770:	in     al,0xff
  424772:	and    eax,0x1ee80adc
  424777:	mov    al,ds:0xfff6
  42477c:	add    al,dh
  42477e:	mov    esi,0x87b0f082
  424783:	aas    
  424784:	adc    al,0x22
  424786:	pop    esp
  424787:	in     al,0xff
  424789:	repz pop eax
  42478b:	jge    0x424728
  42478d:	retf   
  42478e:	stos   DWORD PTR es:[edi],eax
  42478f:	(bad)  
  424790:	dec    ebp
  424792:	jmp    0x42479b
  424794:	add    BYTE PTR [ebp+0x1774ca98],bh
  42479a:	fidiv  WORD PTR [esi-0xf]
  42479d:	push   esp
  42479e:	jp     0x4247c3
  4247a0:	adc    BYTE PTR [ebx+0x27],bl
  4247a3:	in     eax,dx
  4247a4:	cli    
  4247a5:	inc    esp
  4247a6:	xor    eax,0x983c85cc
  4247ab:	out    0xf1,al
  4247ad:	ins    DWORD PTR es:[edi],dx
  4247ae:	mov    BYTE PTR [ecx],0x0
  4247b1:	rep stos DWORD PTR es:[edi],eax
  4247b3:	push   ebx
  4247b4:	push   cs
  4247b5:	outs   dx,BYTE PTR ds:[esi]
  4247b6:	rcl    DWORD PTR [ebx+0xa],0x68
  4247ba:	push   0x23
  4247bc:	or     al,0x66
  4247be:	push   0xd62486f3
  4247c3:	inc    ebx
  4247c4:	in     eax,0x4
  4247c6:	loope  0x42483e
  4247c8:	ret    
  4247c9:	pushf  
  4247ca:	idiv   DWORD PTR [ebp+0x31fcf308]
  4247d0:	sti    
  4247d1:	addr16 adc bh,al
  4247d4:	xchg   dl,ah
  4247d6:	adc    BYTE PTR [ebx+0x24],0x7
  4247da:	jns    0x42482f
  4247dc:	and    al,0xff
  4247de:	vunpckhps ymm0,ymm2,YMMWORD PTR [eax]
  4247e2:	add    BYTE PTR [eax],al
  4247e4:	int3   
  4247e5:	push   0xc46ed876
  4247ea:	dec    ebp
  4247eb:	xor    eax,0xfe172fc5
  4247f0:	mov    ah,0xad
  4247f2:	add    DWORD PTR [edi+ebx*8+0x20],esi
  4247f6:	cmp    DWORD PTR [edx-0x5429],0x52f36f70
  424800:	push   0x90d9d767
  424805:	push   es
  424806:	(bad)  
  424807:	into   
  424808:	outs   dx,BYTE PTR ds:[esi]
  424809:	fcmovnbe st,st(5)
  42480b:	add    BYTE PTR [edx+edx*2+0xd],dh
  42480f:	clc    
  424810:	ins    DWORD PTR es:[edi],dx
  424811:	rcr    DWORD PTR [esi-0x3b],cl
  424814:	pop    ebx
  424815:	mov    eax,0x5768ce4d
  42481a:	outs   dx,BYTE PTR ds:[esi]
  42481b:	lds    ecx,FWORD PTR [ebx+0x67]
  42481e:	inc    esi
  42481f:	into   
  424820:	pop    eax
  424821:	pop    edi
  424822:	mov    edi,DWORD PTR [edx-0x74]
  424825:	pop    ebx
  424826:	daa    
  424827:	inc    DWORD PTR [edx+ebx*2+0x6e]
  42482b:	fbld   TBYTE PTR [edx-0x418544ab]
  424831:	adc    dh,BYTE PTR [edx+0x6ab82a7a]
  424837:	sbb    esp,DWORD PTR ds:0x6a04e9bf
  42483d:	inc    ecx
  42483e:	cmc    
  42483f:	std    
  424840:	jo     0x4247d4
  424842:	jmp    0xdbcc3b4a
  424847:	std    
  424848:	add    BYTE PTR [eax],al
  42484a:	add    BYTE PTR [edx-0x76],bh
  42484d:	jmp    0xaace3b55
  424852:	fcom   QWORD PTR [ebp+0x77cdcac0]
  424858:	(bad)  
  424859:	cmp    al,0x7
  42485b:	fs iret 
  42485d:	mov    edx,0x628c5ed9
  424862:	and    ch,dl
  424864:	mov    esi,0x1b707ee9
  424869:	call   0x709a3b71
  42486e:	aas    
  42486f:	mov    ebx,0xcb002c90
  424874:	sub    eax,DWORD PTR [esi+0x4292a8cd]
  42487a:	sub    BYTE PTR [ebp-0xc741642],ah
  424880:	push   cs
  424881:	add    cl,ch
  424883:	lock cmc 
  424885:	out    dx,eax
  424886:	fmulp  st(5),st
  424888:	mov    dh,0x87
  42488a:	lods   al,BYTE PTR ds:[esi]
  42488b:	test   BYTE PTR [ebp-0x79],cl
  42488e:	mov    esp,0x4abfa678
  424893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424894:	ret    0xcc87
  424897:	cmp    al,0x59
  424899:	sti    
  42489a:	jle    0x4248b7
  42489c:	mov    ebp,0xd1dbe9fb
  4248a1:	call   0xfc0390fe
  4248a6:	pusha  
  4248a7:	mov    ah,0xe
  4248a9:	aaa    
  4248aa:	das    
  4248ab:	stos   DWORD PTR es:[edi],eax
  4248ac:	sbb    al,0xfb
  4248ae:	xchg   esp,eax
  4248af:	add    BYTE PTR [eax],al
  4248b1:	add    BYTE PTR [eax],ch
  4248b3:	xchg   BYTE PTR [ebp-0x1b],al
  4248b6:	sbb    BYTE PTR [ebx],dl
  4248b8:	fisttp WORD PTR [esi]
  4248ba:	ds ds jge 0x4248af
  4248be:	lock inc eax
  4248c0:	adc    DWORD PTR [edx+0x6e],esi
  4248c3:	jecxz  0x4248c2
  4248c5:	call   0xe1b7ceba
  4248ca:	mov    eax,DWORD PTR [ebx+0xc]
  4248cd:	ror    DWORD PTR [ecx+0x7bdefbdd],1
  4248d3:	inc    ebx
  4248d4:	or     BYTE PTR [edx],dh
  4248d6:	sbb    dl,BYTE PTR [eax]
  4248d8:	push   edx
  4248d9:	into   
  4248da:	inc    ebp
  4248db:	psubsb mm4,QWORD PTR [eax]
  4248de:	fadd   st,st(0)
  4248e0:	sti    
  4248e1:	push   ds
  4248e2:	or     eax,0xf0e1bed0
  4248e7:	push   ebx
  4248e8:	xchg   DWORD PTR [ebp+0x3f0caa73],edi
  4248ee:	dec    edx
  4248ef:	xor    al,0x10
  4248f1:	ss cmp al,al
  4248f4:	repnz outs dx,BYTE PTR ds:[esi]
  4248f6:	fdivr  DWORD PTR [ebx+edi*8+0x7d8ff1e9]
  4248fd:	add    BYTE PTR [esi],ah
  4248ff:	push   esi
  424900:	pop    edi
  424901:	test   DWORD PTR [esp+ecx*2],esp
  424904:	pop    ebx
  424905:	mov    eax,DWORD PTR [ebp-0x1f]
  424908:	stos   BYTE PTR es:[edi],al
  424909:	std    
  42490a:	sbb    eax,0xa6c084cb
  42490f:	and    eax,0x98200b8
  424914:	add    BYTE PTR [ebx],bh
  424916:	add    BYTE PTR [eax],al
  424918:	add    BYTE PTR [edx],bl
  42491a:	cmp    eax,0x9582c87
  42491f:	add    BYTE PTR [edi],cl
  424921:	lahf   
  424922:	(bad)  [ebx-0x73]
  424925:	aad    0xad
  424927:	add    BYTE PTR [eax],al
  424929:	dec    edx
  42492a:	clc    
  42492b:	mov    BYTE PTR [ebp+0x1e],cl
  42492e:	inc    ecx
  42492f:	inc    ebp
  424930:	adc    dl,ah
  424932:	xchg   ebx,eax
  424933:	(bad)  
  424935:	fnstsw WORD PTR [esi]
  424937:	pop    ebp
  424938:	or     al,0xcf
  42493a:	and    BYTE PTR [edx+eax*1],0x1a
  42493e:	or     DWORD PTR [ebx-0x7bb5cc8],eax
  424944:	mov    edx,DWORD PTR [edi-0x47]
  424947:	jecxz  0x42495c
  424949:	jmp    0x88424118
  42494e:	int    0x83
  424950:	inc    ebp
  424951:	or     ah,cl
  424953:	jl     0x424937
  424955:	sbb    eax,0x224583d1
  42495a:	cmp    eax,0xd024f44d
  42495f:	xor    bh,bh
  424961:	daa    
  424962:	mov    ebx,0xd1d365e3
  424967:	neg    DWORD PTR [ebx-0x4f]
  42496a:	mov    edi,0xbf07ff51
  42496f:	div    BYTE PTR [ebp-0x3e]
  424972:	loopne 0x4249c2
  424974:	sbb    DWORD PTR [ebp-0x30],ebx
  424977:	push   edi
  424978:	pop    esi
  424979:	repz retw 0xc
  42497e:	add    BYTE PTR [eax],al
  424980:	repz bnd jp 0x424970
  424984:	jo     0x424918
  424986:	clc    
  424987:	xchg   BYTE PTR [edx-0x4a],al
  42498a:	xor    al,BYTE PTR [edi-0x78d0e406]
  424990:	mov    ebx,ebp
  424992:	xchg   ecx,eax
  424993:	inc    ebx
  424994:	retf   
  424995:	cmp    BYTE PTR [edi+0x34],cl
  424998:	enter  0xf700,0xaa
  42499c:	mov    ds:0x18bf96a5,eax
  4249a1:	pusha  
  4249a2:	jge    0x424a19
  4249a4:	cmp    DWORD PTR [di+0x4],edx
  4249a8:	push   0x73
  4249aa:	retf   
  4249ab:	or     eax,DWORD PTR [ebp+edi*2-0x4ea300f5]
  4249b2:	dec    esi
  4249b3:	sbb    BYTE PTR [ebx+0x63],dh
  4249b6:	idiv   edi
  4249b8:	imul   esi,DWORD PTR [ebx-0x39],0x74
  4249bc:	jmp    0x4249e6
  4249be:	aas    
  4249bf:	and    BYTE PTR [edx+0x63],bh
  4249c2:	mul    esi
  4249c4:	in     eax,dx
  4249c5:	ss push ecx
  4249c7:	or     BYTE PTR [eax+0x35],ch
  4249ca:	pop    ds
  4249cb:	xchg   DWORD PTR [edx+0x75d1aa1],edi
  4249d1:	fst    QWORD PTR [esi+0x28b0bf5b]
  4249d7:	or     ah,bh
  4249d9:	mov    dl,0xbb
  4249db:	adc    BYTE PTR [ebx+0x2b437dad],dh
  4249e1:	or     al,BYTE PTR ds:0x75
  4249e7:	adc    BYTE PTR [ecx],bh
  4249e9:	inc    eax
  4249ea:	or     al,cl
  4249ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249ed:	jp     0x424a3c
  4249ef:	(bad)  [edx]
  4249f1:	add    ecx,DWORD PTR [eax]
  4249f3:	fsub   DWORD PTR [ebx+0x67b087d]
  4249f9:	repz inc ecx
  4249fb:	xor    eax,DWORD PTR [eax]
  4249fd:	mov    ds:0x1c07c155,al
  424a02:	enter  0x42ac,0x8d
  424a06:	push   cs
  424a07:	cmp    BYTE PTR fs:[ebp-0x1904b822],cl
  424a0e:	push   eax
  424a0f:	retf   
  424a10:	(bad)  
  424a11:	sub    al,0xfc
  424a13:	xchg   ebp,eax
  424a14:	sbb    DWORD PTR [esi+0x38],ebx
  424a17:	mov    eax,DWORD PTR [edi]
  424a19:	xor    esi,ebx
  424a1b:	out    dx,eax
  424a1c:	and    al,0x6e
  424a1e:	repz adc cl,BYTE PTR [esi+0x83186fb]
  424a25:	retw   
  424a27:	add    BYTE PTR gs:[eax],ch
  424a2a:	push   ebp
  424a2b:	arpl   WORD PTR [edi],ax
  424a2d:	mov    ah,0xc7
  424a2f:	push   esp
  424a30:	inc    edx
  424a31:	xor    eax,0xa388c0e
  424a36:	ficomp WORD PTR [ebx]
  424a38:	sti    
  424a39:	in     al,dx
  424a3a:	push   eax
  424a3b:	pop    ss
  424a3c:	nop
  424a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a3e:	sti    
  424a3f:	dec    ebp
  424a40:	pop    ds
  424a41:	pop    esi
  424a42:	cmp    BYTE PTR [ebx],ch
  424a44:	pop    es
  424a45:	and    esi,ebx
  424a47:	in     eax,dx
  424a48:	(bad)  
  424a49:	fnstcw WORD PTR [eax+eax*1+0x0]
  424a4d:	add    BYTE PTR [ecx],al
  424a4f:	mov    BYTE PTR [ebx],ah
  424a51:	call   DWORD PTR [ebp+0x320eedc6]
  424a57:	cmp    bh,dh
  424a59:	add    eax,0x3ee6ba7e
  424a5e:	(bad)  
  424a5f:	(bad)  
  424a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a61:	push   esi
  424a62:	adc    bl,BYTE PTR [ebx+0x33]
  424a65:	sub    eax,0x3e5c5ba
  424a6a:	ds mov ss,ebp
  424a6d:	or     edi,0x67
  424a70:	jmp    0x983d78
  424a75:	pop    ds
  424a76:	add    bh,BYTE PTR [esi-0x40b8228b]
  424a7c:	call   0xfc00c75b
  424a81:	out    dx,al
  424a82:	arpl   di,ax
  424a84:	mov    DWORD PTR [ebx+eax*8],ebp
  424a87:	outs   dx,DWORD PTR ds:[esi]
  424a88:	add    DWORD PTR ds:0x900176f2,edx
  424a8e:	sar    DWORD PTR [ecx-0x2e001605],cl
  424a94:	bound  esi,QWORD PTR [edx-0x59f9cb49]
  424a9a:	les    esi,FWORD PTR [edx+0x6f0e8fe]
  424aa0:	xchg   DWORD PTR [esp+eiz*4-0x4306a301],esp
  424aa7:	or     eax,0x1b4eba8
  424aac:	and    eax,0x72a44
  424ab1:	push   0x0
  424ab3:	add    BYTE PTR [eax],al
  424ab5:	xchg   edi,eax
  424ab6:	jns    0x85ce8768
  424abc:	leave  
  424abd:	cmp    edi,DWORD PTR [esi+0x342bb9fb]
  424ac3:	or     al,0x70
  424ac5:	or     al,0xab
  424ac7:	mov    DWORD PTR [eax+eax*2-0x57fea270],esi
  424ace:	pop    ebx
  424acf:	in     al,0x2e
  424ad1:	pushf  
  424ad2:	es sti 
  424ad4:	(bad)  
  424ad5:	sub    edi,ebx
  424ad7:	(bad)  
  424ad8:	call   0xb15808cd
  424add:	adc    al,0xfa
  424adf:	jmp    FWORD PTR [ebx+0x30]
  424ae2:	xor    al,0x3
  424ae4:	sbb    ebp,DWORD PTR [edi]
  424ae6:	mov    al,0xca
  424ae8:	jmp    0x424ada
  424aea:	push   es
  424aeb:	xchg   DWORD PTR [edi+edi*8],edx
  424aee:	adc    al,BYTE PTR [eax+0x0]
  424af1:	retf   0x8cf6
  424af4:	test   DWORD PTR [esi],ebp
  424af6:	shl    bh,1
  424af8:	(bad)  
  424af9:	jmp    0xcecf:0xeac44531
  424b00:	test   DWORD PTR [edx+0x42c294be],ecx
  424b06:	jmp    0x49ab85fc
  424b0b:	sbb    ecx,DWORD PTR [ebx-0x7a7cf8fb]
  424b11:	add    dl,al
  424b13:	idiv   edi
  424b15:	mov    cl,0xc4
  424b17:	jge    0x424b1e
  424b19:	add    BYTE PTR [eax],al
  424b1b:	add    BYTE PTR [ecx+0xa4589c4],dh
  424b21:	cmp    eax,DWORD PTR [edi]
  424b23:	mov    ecx,DWORD PTR [edi]
  424b25:	pop    edx
  424b26:	idiv   edi
  424b28:	adc    eax,0x5f7dc10b
  424b2d:	sbb    al,cl
  424b2f:	mov    DWORD PTR [edi+0x1e4583d1],ecx
  424b35:	and    eax,0x2
  424b38:	jecxz  0x424b32
  424b3a:	mov    ebx,0x45d69674
  424b3f:	test   BYTE PTR [edx+0x5],bl
  424b42:	add    BYTE PTR [eax],ah
  424b44:	pop    esi
  424b45:	mov    eax,0xda395d83
  424b4a:	inc    ecx
  424b4b:	push   edi
  424b4c:	xchg   edi,eax
  424b4d:	cmp    BYTE PTR [edi+edi*8-0xb],dh
  424b51:	into   
  424b52:	push   eax
  424b53:	lea    ecx,[edi+0x69]
  424b56:	push   eax
  424b57:	(bad)  
  424b58:	cld    
  424b59:	cmp    al,al
  424b5b:	imul   edi,eax
  424b5e:	or     bh,BYTE PTR [eax]
  424b60:	ja     0x424b14
  424b62:	outs   dx,DWORD PTR ds:[esi]
  424b63:	sub    BYTE PTR [ecx-0x7074fc0f],al
  424b69:	dec    edx
  424b6a:	idiv   edi
  424b6c:	repz rol BYTE PTR [edi],1
  424b6f:	shl    DWORD PTR [esi-0x5d],0x16
  424b73:	shr    DWORD PTR [edx-0x15],0xdf
  424b77:	xchg   esp,esp
  424b79:	xor    al,0x81
  424b7b:	je     0x424b49
  424b7d:	jno    0x424b42
  424b7f:	aaa    
  424b80:	add    BYTE PTR [eax],al
  424b82:	add    BYTE PTR [edx-0x4dd90a15],dh
  424b88:	aaa    
  424b89:	inc    ecx
  424b8a:	call   0x55b9f957
  424b8f:	add    dh,dl
  424b91:	sub    dh,dh
  424b93:	push   ds
  424b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b95:	pop    es
  424b96:	pop    ebp
  424b97:	add    BYTE PTR [ecx+0x3995f87b],dh
  424b9d:	ret    
  424b9e:	dec    edi
  424b9f:	mov    ebx,ds
  424ba1:	xlat   BYTE PTR ds:[ebx]
  424ba2:	adc    al,0x33
  424ba4:	scas   al,BYTE PTR es:[edi]
  424ba5:	jbe    0x424b9f
  424ba7:	mov    eax,0xb683f324
  424bac:	pop    eax
  424bad:	ret    
  424bae:	sti    
  424baf:	les    edx,FWORD PTR [eax-0xf]
  424bb2:	scas   eax,DWORD PTR es:[edi]
  424bb3:	add    ebp,DWORD PTR [esi-0x1]
  424bb6:	push   edx
  424bb7:	shl    BYTE PTR [esp+edx*8],0xfb
  424bbb:	(bad)  
  424bbc:	ins    DWORD PTR es:[edi],dx
  424bbd:	lock aas 
  424bbf:	repz mov ah,0xce
  424bc2:	or     ebp,DWORD PTR [edi+0x2]
  424bc5:	ret    
  424bc6:	sti    
  424bc7:	cmp    al,0x35
  424bc9:	dec    ecx
  424bca:	or     BYTE PTR [ecx+edx*4],dh
  424bcd:	jecxz  0x424c20
  424bcf:	sub    al,0xbb
  424bd1:	fist   WORD PTR [eax]
  424bd3:	mov    bl,0xad
  424bd5:	jl     0x424c1c
  424bd7:	xor    eax,ebp
  424bd9:	mov    esi,0xc28fe775
  424bde:	adc    eax,0x3fde27
  424be3:	sbb    ah,BYTE PTR [edx+0xfbc2]
  424be9:	add    ah,bh
  424beb:	push   es
  424bec:	stos   DWORD PTR es:[edi],eax
  424bed:	inc    eax
  424bee:	cld    
  424bef:	add    eax,0x7b4e0d43
  424bf4:	loop   0x424c75
  424bf6:	bound  eax,QWORD PTR [esi]
  424bf8:	jmp    0xf583c000
  424bfd:	jl     0x424c2d
  424bff:	outs   dx,BYTE PTR ds:[si]
  424c01:	inc    eax
  424c02:	scas   eax,DWORD PTR es:[edi]
  424c03:	jmp    0x424c30
  424c05:	mov    al,0x7a
  424c07:	xor    DWORD PTR [ebp+0x6e77367c],eax
  424c0d:	inc    eax
  424c0e:	shr    ebx,cl
  424c10:	and    ebp,DWORD PTR [eax+esi*4-0xcfbaebf]
  424c17:	push   es
  424c18:	jmp    0x74b58299
  424c1d:	inc    eax
  424c1e:	ja     0x424c76
  424c20:	jp     0x424c32
  424c22:	das    
  424c23:	jg     0x424c4b
  424c25:	add    al,0x7a
  424c27:	pop    ecx
  424c28:	inc    ecx
  424c29:	jl     0x424c49
  424c2b:	imul   esp,DWORD PTR [edx-0x10],0x8
  424c2f:	push   ss
  424c30:	test   eax,0x4f397303
  424c35:	add    al,0x6c
  424c37:	stc    
  424c38:	sub    al,0xf2
  424c3a:	sbb    al,0x7
  424c3c:	mov    esp,0x25416648
  424c41:	xor    edi,DWORD PTR [esi+0x41]
  424c44:	sbb    eax,0xfd114833
  424c49:	out    dx,eax
  424c4a:	cld    
  424c4b:	push   es
  424c4c:	ins    BYTE PTR es:[edi],dx
  424c4d:	ret    
  424c4e:	add    BYTE PTR [eax],al
  424c50:	add    BYTE PTR [esi+0x6c6b32b],bh
  424c56:	retf   
  424c57:	stc    
  424c58:	inc    ebx
  424c59:	repz lea esp,[edi+ecx*8+0x501559da]
  424c61:	out    dx,al
  424c62:	std    
  424c63:	fwait
  424c64:	rol    DWORD PTR [edi+0x2d9a0008],cl
  424c6a:	xor    eax,esi
  424c6c:	out    dx,al
  424c6d:	lods   al,BYTE PTR ds:[esi]
  424c6e:	stos   BYTE PTR es:[edi],al
  424c6f:	push   edx
  424c70:	out    0x4,al
  424c72:	ja     0x424c84
  424c74:	sub    edi,esi
  424c76:	lea    eax,[ebp-0x1f]
  424c79:	and    eax,DWORD PTR [ebp+ecx*2-0x2e2405b]
  424c80:	(bad)  
  424c81:	scas   al,BYTE PTR es:[edi]
  424c82:	inc    esi
  424c83:	callw  0xd8af
  424c87:	add    cl,ch
  424c89:	lock mov cl,0x75
  424c8c:	fnstsw WORD PTR [eax]
  424c8e:	push   esp
  424c8f:	pushf  
  424c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c91:	xchg   bh,ch
  424c93:	pop    esp
  424c94:	jge    0x424cd2
  424c96:	sbb    BYTE PTR [esi-0x15],ah
  424c99:	(bad)  
  424c9a:	push   ds
  424c9b:	adc    ebp,edx
  424c9d:	lock push es
  424c9f:	sti    
  424ca0:	cld    
  424ca1:	pushf  
  424ca2:	mov    cl,0x15
  424ca4:	inc    ebp
  424ca5:	xor    esi,0xffffffff
  424ca8:	popa   
  424ca9:	(bad)  
  424caa:	(bad)  
  424cab:	gs call 0x520690b6
  424cb1:	xchg   esi,eax
  424cb2:	mov    bl,0xfb
  424cb4:	pop    esi
  424cb5:	add    BYTE PTR [eax],al
  424cb7:	add    BYTE PTR [esi],dh
  424cb9:	cmp    al,0xf4
  424cbb:	mov    edi,0xf9d01c2f
  424cc0:	mov    al,0x6
  424cc2:	add    ah,0x63
  424cc5:	pop    es
  424cc6:	or     esp,DWORD PTR [esi+ebx*8+0x6]
  424cca:	add    cl,ch
  424ccc:	stc    
  424ccd:	push   ebx
  424cce:	call   0x5dd08587
  424cd3:	cli    
  424cd4:	jmp    0x2cd8312c
  424cd9:	enter  0xfa45,0xf1
  424cdd:	pop    eax
  424cde:	sti    
  424cdf:	hlt    
  424ce0:	fs pop ss
  424ce2:	inc    eax
  424ce3:	add    BYTE PTR [edx],cl
  424ce5:	xor    DWORD PTR [ebp-0xc],eax
  424ce8:	xor    ch,ch
  424cea:	or     dh,BYTE PTR [esp+ecx*1-0x9]
  424cee:	div    BYTE PTR [ebp-0xa]
  424cf1:	retf   
  424cf2:	jne    0x424cdc
  424cf4:	mov    ah,0xcb
  424cf6:	adc    eax,0x49eac0
  424cfb:	mov    edx,DWORD PTR [edi]
  424cfd:	mov    bl,0x4a
  424cff:	(bad)  
  424d00:	push   DWORD PTR [esi-0x18]
  424d03:	cdq    
  424d04:	scas   al,BYTE PTR es:[edi]
  424d05:	retf   0x53f7
  424d08:	in     al,0x50
  424d0a:	adc    al,0xff
  424d0c:	pop    es
  424d0d:	scas   eax,DWORD PTR es:[edi]
  424d0e:	not    bh
  424d10:	lea    eax,[esp+esi*8-0x9]
  424d14:	mov    dl,0x9e
  424d16:	mov    ebx,0x4531e440
  424d1b:	mov    eax,0x7d000000
  424d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d21:	retf   
  424d22:	adc    dl,cl
  424d24:	or     bh,BYTE PTR [eax]
  424d26:	pop    ebp
  424d27:	mov    ecx,0xd530645
  424d2c:	inc    ebp
  424d2d:	in     al,0xff
  424d2f:	xchg   ecx,edx
  424d31:	dec    esi
  424d32:	jmp    DWORD PTR [edi-0x75bfef37]
  424d38:	test   BYTE PTR [edx+0x6a],0x5d
  424d3c:	retf   0xc75
  424d3f:	shr    ah,cl
  424d41:	fwait
  424d42:	jmp    DWORD PTR ds:0x979c5d02
  424d48:	mov    eax,0x51640465
  424d4d:	lsl    ebx,WORD PTR [edx+0x9]
  424d51:	div    DWORD PTR [ebp+0x1e]
  424d54:	retf   0xa415
  424d57:	ss dec ecx
  424d59:	add    BYTE PTR [ebx+0x165b157],cl
  424d5f:	repz sub dh,BYTE PTR [edx]
  424d62:	aam    0xb
  424d64:	ret    
  424d65:	ret    
  424d66:	sti    
  424d67:	adc    al,0x90
  424d69:	les    esi,FWORD PTR ds:0x4047af
  424d6f:	add    al,0xd2
  424d71:	push   ebx
  424d72:	adc    DWORD PTR [ebx-0x2bd2761],esi
  424d78:	loope  0x424d31
  424d7a:	add    al,0x67
  424d7c:	dec    ecx
  424d7d:	std    
  424d7e:	pop    esp
  424d7f:	xlat   BYTE PTR ds:[ebx]
  424d80:	push   ebx
  424d81:	or     DWORD PTR [ecx],edi
  424d83:	add    BYTE PTR [eax],al
  424d85:	add    BYTE PTR [esi],bh
  424d87:	into   
  424d88:	cmp    BYTE PTR [edx],cl
  424d8a:	inc    eax
  424d8b:	int    0x39
  424d8d:	lock int3 
  424d8f:	sti    
  424d90:	scas   eax,DWORD PTR es:[edi]
  424d91:	push   edx
  424d92:	(bad)  
  424d93:	sar    DWORD PTR [edi+0x529e3310],cl
  424d99:	lea    esp,[esi]
  424d9b:	bound  ecx,QWORD PTR [ebx-0x4455643d]
  424da1:	sti    
  424da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424da3:	or     BYTE PTR [esi],cl
  424da5:	push   edx
  424da6:	or     edi,DWORD PTR [ebp-0x730cfffe]
  424dac:	cmp    DWORD PTR [esp+ecx*4],ecx
  424daf:	(bad)  [ebx+0x14]
  424db2:	xor    ebx,DWORD PTR [esi+0x136e012d]
  424db8:	enter  0xac87,0x56
  424dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dbd:	imul   DWORD PTR [ebp+edx*2-0x41]
  424dc1:	jne    0x424df6
  424dc3:	je     0x424d83
  424dc5:	adc    eax,0x3fae53
  424dca:	mov    ebp,0xe3d4194c
  424dcf:	pop    ebp
  424dd0:	inc    DWORD PTR [ebp+0x5a5ef8ae]
  424dd6:	cwde   
  424dd7:	out    0xc1,al
  424dd9:	or     al,0xf3
  424ddb:	push   es
  424ddc:	sbb    ecx,DWORD PTR [ecx+0x27]
  424ddf:	call   DWORD PTR [edx+eiz*8+0x390551ea]
  424de6:	imul   ch
  424de8:	stos   DWORD PTR es:[edi],eax
  424de9:	mov    bl,0x0
  424deb:	add    BYTE PTR [eax],al
  424ded:	lahf   
  424dee:	add    al,0x96
  424df0:	ret    0xb686
  424df3:	cli    
  424df4:	cmp    BYTE PTR [edi],dl
  424df6:	pop    ebp
  424df7:	repnz sbb BYTE PTR [ebx],dh
  424dfa:	pop    ss
  424dfb:	test   eax,0x3481a403
  424e00:	enter  0xcb74,0xd1
  424e04:	data16 fdiv QWORD PTR [ebx-0x4bbea92e]
  424e0b:	push   esp
  424e0c:	adc    al,bl
  424e0e:	sbb    DWORD PTR [ecx],edx
  424e10:	sbb    BYTE PTR [ebx],dh
  424e12:	pop    es
  424e13:	fs ret 
  424e15:	ds popaw 
  424e18:	pusha  
  424e19:	les    ebx,FWORD PTR [edi-0x1911467f]
  424e1f:	push   esp
  424e20:	inc    esi
  424e21:	repz or dh,BYTE PTR [esi]
  424e24:	pop    DWORD PTR [edi-0x15]
  424e27:	loopne 0x424e82
  424e29:	inc    eax
  424e2a:	or     BYTE PTR ds:0x333b00e8,0xac
  424e31:	daa    
  424e32:	mov    bh,BYTE PTR [ebx-0x3e]
  424e35:	outs   dx,DWORD PTR ds:[esi]
  424e36:	(bad)  
  424e37:	std    
  424e38:	dec    eax
  424e39:	jbe    0x424dee
  424e3b:	cmc    
  424e3c:	inc    esp
  424e3d:	js     0x424e38
  424e3f:	les    edi,FWORD PTR [ebx+0x2c]
  424e42:	pop    es
  424e43:	pop    edx
  424e44:	sbb    bl,bl
  424e46:	adc    eax,0xb67403a9
  424e4b:	fs mov ecx,0x61fde3df
  424e51:	add    BYTE PTR [eax],al
  424e53:	add    bh,dh
  424e55:	cmp    DWORD PTR [edi],ecx
  424e57:	cs mov bl,0x5b
  424e5a:	add    BYTE PTR [ecx+0xe],al
  424e5d:	cmp    dl,bh
  424e5f:	cs gs dec eax
  424e62:	or     BYTE PTR [eax-0x7],dh
  424e65:	mov    eax,DWORD PTR [edx-0x3]
  424e68:	ja     0x424eb1
  424e6a:	add    al,0x83
  424e6c:	add    BYTE PTR [edx+0x33c0dd42],al
  424e72:	ret    
  424e73:	icebp  
  424e74:	test   eax,0x3277939e
  424e79:	scas   eax,DWORD PTR es:[edi]
  424e7a:	xchg   DWORD PTR [edi-0x17fd3718],ebp
  424e80:	inc    ebp
  424e81:	(bad)  
  424e82:	push   edx
  424e83:	cmp    dh,BYTE PTR [edx+0x30f5e01c]
  424e89:	pop    es
  424e8a:	pop    ebx
  424e8b:	aaa    
  424e8c:	ds jno 0x424e97
  424e8f:	jmp    0x95625b2e
  424e94:	ss pop es
  424e96:	add    al,0x17
  424e98:	jbe    0x424ed5
  424e9a:	and    al,0xe1
  424e9c:	add    al,0x12
  424e9e:	call   0xfbefba66
  424ea3:	ins    DWORD PTR es:[edi],dx
  424ea4:	mov    bh,0x3b
  424ea6:	push   ss
  424ea7:	sahf   
  424ea8:	pushf  
  424ea9:	dec    esi
  424eaa:	mov    eax,0x15adf72a
  424eaf:	add    DWORD PTR [eax],eax
  424eb1:	inc    edi
  424eb2:	add    BYTE PTR [edi+esi*4+0x3b],ch
  424eb6:	push   es
  424eb7:	ret    0x0
  424eba:	add    al,al
  424ebc:	or     dh,BYTE PTR [ebp-0x14]
  424ebf:	xchg   DWORD PTR [edx+0x40],esi
  424ec2:	and    dh,0xad
  424ec5:	je     0x424ed4
  424ec7:	add    edx,DWORD PTR [ebp-0x5]
  424eca:	hlt    
  424ecb:	call   0xd32b8eea
  424ed0:	jo     0x424eda
  424ed2:	jmp    0x12ed894
  424ed7:	or     al,0xa
  424ed9:	and    BYTE PTR [ecx+ebx*4+0x5d560406],ch
  424ee0:	cmp    DWORD PTR [ebp+0x8],0x7e
  424ee4:	scas   eax,DWORD PTR es:[edi]
  424ee5:	jecxz  0x424e8e
  424ee7:	sahf   
  424ee8:	(bad)  
  424ee9:	test   DWORD PTR [edx+ebx*8+0x3fff25ee],0xa43b852
  424ef4:	(bad)  
  424ef5:	adc    eax,0x462b68
  424efa:	mov    ecx,DWORD PTR [edx]
  424efc:	mov    esi,ebp
  424efe:	je     0x424f26
  424f00:	mov    bl,0x79
  424f02:	add    al,0x7f
  424f04:	push   cs
  424f05:	out    dx,al
  424f06:	inc    ebp
  424f07:	jmp    0xbf8:0xc50974c5
  424f0e:	(bad)  
  424f0f:	fild   QWORD PTR [ecx+0x10]
  424f12:	inc    eax
  424f13:	retf   0x3e82
  424f16:	or     BYTE PTR [edi+edi*8-0x39281500],bl
  424f1d:	jne    0x424f2f
  424f1f:	add    BYTE PTR [eax],al
  424f21:	add    BYTE PTR [ebp-0x7aa8f408],al
  424f27:	sbb    BYTE PTR [eax+0x15],cl
  424f2a:	fimul  DWORD PTR [edx]
  424f2c:	push   edi
  424f2d:	pop    esi
  424f2e:	out    0xc8,eax
  424f30:	or     al,0x0
  424f32:	jl     0x424f3c
  424f34:	and    BYTE PTR [ecx+ecx*8+0x156040a],ch
  424f3b:	cli    
  424f3c:	and    ecx,DWORD PTR [eax]
  424f3e:	jle    0x424edf
  424f40:	jecxz  0x424f91
  424f42:	push   cs
  424f43:	enter  0x84f7,0x4a
  424f47:	stc    
  424f48:	sbb    al,0xff
  424f4a:	(bad)  
  424f4c:	mov    eax,0x15c65a43
  424f51:	push   0x3faef3
  424f56:	outs   dx,BYTE PTR ds:[esi]
  424f57:	fbstp  TBYTE PTR [edx]
  424f59:	or     eax,0x75037008
  424f5e:	sti    
  424f5f:	jmp    0x5faa5062
  424f64:	pop    es
  424f65:	out    0xec,eax
  424f67:	cdq    
  424f68:	rcl    BYTE PTR ds:0x3fb31b,0xc5
  424f6f:	fld    QWORD PTR [edx]
  424f71:	add    BYTE PTR ds:0xb0abdfa2,ah
  424f77:	lahf   
  424f78:	add    edx,DWORD PTR [edx+0x78]
  424f7b:	xor    esp,ebx
  424f7d:	pop    es
  424f7e:	jg     0x424f49
  424f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f81:	adc    BYTE PTR [edi-0x47],dh
  424f84:	mov    ebx,0x84
  424f89:	xor    edi,DWORD PTR [ebx]
  424f8b:	sbb    bh,bl
  424f8d:	es dec edx
  424f8f:	jl     0x424fd0
  424f91:	repz rcr BYTE PTR [ecx],1
  424f94:	push   0x8503de02
  424f99:	mov    bl,0x5a
  424f9b:	adc    DWORD PTR [edi],esi
  424f9d:	inc    ebx
  424f9e:	mov    ds:0x9ead0838,al
  424fa3:	add    al,0x87
  424fa5:	xor    esp,DWORD PTR [esi+0x611d03a6]
  424fab:	sbb    esp,ecx
  424fad:	pop    es
  424fae:	fiadd  WORD PTR [ebx]
  424fb0:	pop    edx
  424fb1:	mov    cl,0xaa
  424fb3:	push   ecx
  424fb5:	idiv   BYTE PTR [ebp-0x560cc095]
  424fbb:	push   ebp
  424fbc:	xchg   DWORD PTR [edi],eax
  424fbe:	ret    0x740b
  424fc1:	rcl    BYTE PTR [ebp+0x397d7fd5],1
  424fc7:	mov    al,al
  424fc9:	call   ebx
  424fcb:	mov    edx,0xa106cf35
  424fd0:	inc    ebx
  424fd1:	repz scas eax,DWORD PTR es:[edi]
  424fd3:	hlt    
  424fd4:	sub    eax,DWORD PTR [edx]
  424fd6:	inc    edi
  424fd7:	jmp    0xdf7d8364
  424fdc:	cli    
  424fdd:	fdiv   st(6),st
  424fdf:	mov    ebx,0xa9c71408
  424fe4:	stos   BYTE PTR es:[edi],al
  424fe5:	hlt    
  424fe6:	pop    eax
  424fe7:	xor    bh,BYTE PTR [eax]
  424fe9:	lsl    ebp,WORD PTR [edx]
  424fec:	sbb    DWORD PTR [eax],eax
  424fee:	add    BYTE PTR [eax],al
  424ff0:	mov    bl,0x19
  424ff2:	test   eax,0xf1c4c903
  424ff7:	add    eax,esi
  424ff9:	jnp    0x425000
  424ffb:	mov    dh,0xee
  424ffd:	out    0x3c,al
  424fff:	inc    ebx
  425000:	repz or dl,BYTE PTR [esi-0x6d015976]
  425007:	aaa    
  425008:	mov    BYTE PTR [esi-0x50067c9d],bl
  42500e:	les    esp,FWORD PTR gs:[edi+0x29]
  425012:	loop   0x42500c
  425014:	dec    eax
  425015:	outs   dx,DWORD PTR ds:[esi]
  425016:	es add al,0xd8
  425019:	sbb    DWORD PTR [ecx+0x15],eax
  42501c:	xor    eax,DWORD PTR [edi]
  42501e:	pop    esi
  42501f:	mov    bl,0x76
  425021:	mov    eax,0x50fc583d
  425026:	in     eax,0x38
  425028:	sub    BYTE PTR [esp+esi*1-0x25c50cf0],al
  42502f:	sub    DWORD PTR [ebx],eax
  425031:	sub    BYTE PTR [ebx],0x10
  425034:	inc    ebx
  425035:	and    BYTE PTR [eax+edx*1],0x43
  425039:	lahf   
  42503a:	xchg   DWORD PTR [edi],esi
  42503c:	cdq    
  42503d:	scas   eax,DWORD PTR es:[edi]
  42503e:	inc    ax
  425040:	jecxz  0x425048
  425042:	std    
  425043:	lock and DWORD PTR [eax+0x19780bf3],esi
  42504a:	add    BYTE PTR [ebp+0x30046e0],ah
  425050:	imul   DWORD PTR [ebx+0xf172]
  425056:	add    BYTE PTR [ecx-0x52],bh
  425059:	data16 cmc 
  42505b:	shr    DWORD PTR [ebx+0x47013515],0x0
  425062:	push   esi
  425063:	sub    BYTE PTR [edi],dl
  425065:	rcr    BYTE PTR [esi-0x56f7cb7b],0x6f
  42506c:	inc    esp
  42506d:	sbb    al,0x36
  42506f:	fcmovnbe st,st(6)
  425071:	adc    BYTE PTR [ecx+0x292f4bf0],ch
  425077:	mov    al,0x7e
  425079:	add    dl,BYTE PTR [edx]
  42507b:	add    ebp,DWORD PTR [ebp+esi*2+0xc3955f9]
  425082:	mov    edx,0xdde4194d
  425087:	mov    al,0x6
  425089:	pop    edx
  42508a:	mov    ds:0xe90c7093,al
  42508f:	fwait
  425090:	xchg   esp,ebp
  425092:	div    esp
  425094:	out    0xab,al
  425096:	sub    ch,bh
  425098:	add    cl,BYTE PTR [edi+0x72]
  42509b:	cmp    al,0xff
  42509d:	push   ecx
  42509e:	pop    ebp
  42509f:	pop    ds
  4250a0:	lahf   
  4250a1:	imul   DWORD PTR [ebx-0x73]
  4250a4:	mov    dl,0x84
  4250a6:	test   eax,0xf4fb2a0b
  4250ab:	sbb    al,0x6f
  4250ad:	aas    
  4250ae:	jmp    0xd8aa652a
  4250b3:	xor    BYTE PTR [edi],al
  4250b5:	xchg   DWORD PTR [ecx+0x3474b96c],ebx
  4250bb:	add    BYTE PTR [eax],al
  4250bd:	add    BYTE PTR [edx+0x3f1c0450],bl
  4250c3:	mov    dl,0x72
  4250c5:	icebp  
  4250c6:	dec    edi
  4250c7:	cmp    DWORD PTR [eax+eax*1],edx
  4250ca:	ins    DWORD PTR es:[edi],dx
  4250cb:	cmc    
  4250cc:	ud0    eax,DWORD PTR [esi+edi*8+0x6b8e75f6]
  4250d4:	adc    eax,0x4a4ac8
  4250d9:	or     DWORD PTR [edi+0x1a],0x0
  4250dd:	je     0x4250ce
  4250df:	push   ebx
  4250e0:	div    DWORD PTR [esi+0x52]
  4250e3:	imul   edx,DWORD PTR ds:0x4a4acc,0x6a
  4250ea:	pop    edx
  4250eb:	imul   ebp,DWORD PTR [esi+0x8],0xffffffc1
  4250ef:	push   0x62
  4250f1:	adc    al,0x59
  4250f3:	imul   edx,DWORD PTR ds:0x4a49dc,0xfffffff7
  4250fa:	mov    dl,0xf
  4250fc:	rcl    BYTE PTR [edi-0x3],0xf4
  425100:	pop    es
  425101:	inc    eax
  425102:	xchg   ebx,eax
  425103:	inc    esp
  425104:	sbb    al,0xff
  425106:	pop    es
  425107:	ficom  DWORD PTR [eax]
  425109:	inc    eax
  42510a:	sbb    cl,BYTE PTR [ebx+0x62]
  42510d:	add    dl,ah
  42510f:	add    al,0x1
  425111:	pop    eax
  425112:	icebp  
  425113:	std    
  425114:	div    BYTE PTR [ebp-0x36]
  425117:	push   0x75
  425119:	or     al,0x29
  42511b:	ins    BYTE PTR es:[edi],dx
  42511c:	adc    eax,0x49e6c0
  425121:	pop    esi
  425122:	add    BYTE PTR [eax],al
  425124:	add    BYTE PTR [ecx],ah
  425126:	dec    esi
  425127:	mov    edx,0x8354da0c
  42512c:	in     al,dx
  42512d:	inc    ecx
  42512e:	add    DWORD PTR [eax-0x7ef635ff],0xffffffec
  425135:	stos   BYTE PTR es:[edi],al
  425136:	add    eax,0x55090000
  42513b:	test   eax,eax
  42513d:	push   es
  42513e:	punpckldq mm0,DWORD PTR [eax]
  425141:	fisubr DWORD PTR [ebx+0x15]
  425144:	adc    bl,dh
  425146:	mov    al,0x3f
  425148:	add    dh,cl
  42514a:	mov    eax,ds:0xb4f3fffe
  42514f:	xor    ebx,0xfffffff3
  425152:	lahf   
  425153:	dec    DWORD PTR [esp+edx*2-0xc00014d]
  42515a:	sub    BYTE PTR [eax-0x4331fe18],dh
  425160:	sti    
  425161:	outs   dx,BYTE PTR ds:[esi]
  425162:	xchg   edx,eax
  425163:	loope  0x42515b
  425165:	push   esp
  425166:	push   esp
  425167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425168:	dec    edx
  425169:	mov    bh,BYTE PTR [esp+edi*4]
  42516c:	add    eax,0xffff9e61
  425171:	leave  
  425172:	ror    DWORD PTR [edi+0x66],cl
  425175:	repz and dh,BYTE PTR [edx]
  425178:	xor    BYTE PTR [eax-0x19],0xbb
  42517c:	call   0xfbffa3de
  425181:	jbe    0x425162
  425183:	cmp    al,0x1d
  425185:	push   0x684edd
  42518a:	add    BYTE PTR [eax],al
  42518c:	jae    0x425179
  42518e:	aas    
  42518f:	add    BYTE PTR [esi+0x1a],dh
  425192:	paddw  mm7,mm4
  425195:	stos   DWORD PTR es:[edi],eax
  425196:	dec    esi
  425197:	call   0x41d9c6
  42519c:	jbe    0x42517c
  42519e:	or     edx,DWORD PTR [ebp+0x75c41ab3]
  4251a4:	jmp    0x141b:0x6a62c410
  4251ab:	std    
  4251ac:	int3   
  4251ad:	mov    ebp,0x9df2ea7d
  4251b2:	dec    DWORD PTR [esi+esi*2-0x4b044500]
  4251b9:	pop    esp
  4251ba:	add    al,0x0
  4251bc:	xor    esp,edi
  4251be:	xor    cl,bh
  4251c0:	inc    edx
  4251c1:	pop    es
  4251c2:	je     0x425145
  4251c4:	sti    
  4251c5:	stos   DWORD PTR es:[edi],eax
  4251c6:	call   0xc04d:0x641f43bb
  4251cd:	fld    QWORD PTR [eax-0x7d528ca8]
  4251d3:	cs aaa 
  4251d5:	dec    ebp
  4251d6:	adc    ecx,DWORD PTR [ecx+0x3ff5f2e]
  4251dc:	ret    
  4251dd:	stos   DWORD PTR es:[edi],eax
  4251de:	aam    0xef
  4251e0:	add    al,BYTE PTR [edi-0x17]
  4251e3:	xchg   BYTE PTR [edi],dh
  4251e5:	sti    
  4251e6:	pop    ecx
  4251e7:	xor    esp,edi
  4251e9:	jns    0x425257
  4251eb:	sbb    al,0x48
  4251ed:	lods   al,BYTE PTR ds:[esi]
  4251ee:	dec    edx
  4251ef:	lea    eax,[eax]
  4251f1:	add    BYTE PTR [eax],al
  4251f3:	mov    esi,0x8341705e
  4251f8:	lods   al,BYTE PTR ds:[esi]
  4251f9:	aam    0x2f
  4251fb:	loop   0x425243
  4251fd:	jmp    0x99f9088a
  425202:	mov    BYTE PTR [esi-0xcd246a2],ch
  425208:	push   ds
  425209:	adc    DWORD PTR [esi-0x7e9bf94d],ecx
  42520f:	jecxz  0x4251ba
  425211:	or     bh,BYTE PTR [ebx+0x2fda9ea3]
  425217:	clc    
  425218:	stos   DWORD PTR es:[edi],eax
  425219:	les    edi,FWORD PTR fs:[esi+0x2]
  42521d:	mov    bh,0xc3
  42521f:	aam    0xf7
  425221:	jle    0x425236
  425223:	jbe    0x425266
  425225:	fst    DWORD PTR [ebx+0x2c]
  425228:	lahf   
  425229:	jecxz  0x425261
  42522b:	fldcw  WORD PTR [ebx-0x543353bf]
  425231:	jmp    0xc23d92f0
  425236:	adc    bl,ah
  425238:	pop    ss
  425239:	sub    DWORD PTR [esi+ebp*2],eax
  42523c:	mov    BYTE PTR [eax],0x3d
  42523f:	add    al,0x25
  425241:	add    BYTE PTR [esi+0x1915b09d],ch
  425247:	push   es
  425248:	inc    edi
  425249:	add    BYTE PTR [edx+0x5d],dh
  42524c:	sahf   
  42524d:	es sbb al,0x48
  425250:	scas   eax,DWORD PTR es:[edi]
  425251:	out    0xa2,eax
  425253:	add    BYTE PTR [esi],al
  425255:	pop    edx
  425256:	and    al,BYTE PTR [eax]
  425258:	add    BYTE PTR [eax],al
  42525a:	scas   al,BYTE PTR es:[edi]
  42525b:	imul   edx,DWORD PTR [ebp+0x72],0x4c
  42525f:	sub    esp,esp
  425261:	jno    0x4252d8
  425263:	call   0x6601:0x24c01720
  42526a:	add    ebp,DWORD PTR [ebx+0x56f0a910]
  425270:	sti    
  425271:	cld    
  425272:	lock adc eax,0xf189e940
  425278:	arpl   WORD PTR [ecx-0x378f94b],ax
  42527e:	and    al,0xfc
  425280:	aas    
  425281:	jmp    0xf4ca29ef
  425286:	adc    al,BYTE PTR fs:[eax-0x17]
  42528a:	dec    ebp
  42528b:	inc    ecx
  42528c:	test   DWORD PTR [ecx],ebp
  42528e:	les    edi,FWORD PTR [ebx]
  425290:	xchg   DWORD PTR [ebp-0x1bc904d4],ebp
  425296:	shr    BYTE PTR [esi+0x3f],1
  425299:	jmp    0x7dc14461
  42529e:	adc    al,0x17
  4252a0:	cld    
  4252a1:	jl     0x42527d
  4252a3:	addr16 push 0x66072d31
  4252a9:	call   0xfd668649
  4252ae:	aad    0x16
  4252b0:	add    ecx,ebp
  4252b2:	lock push ds
  4252b4:	pop    eax
  4252b5:	xchg   ecx,eax
  4252b6:	cs pop es
  4252b8:	call   0xf7bb02bd
  4252bd:	inc    DWORD PTR [eax]
  4252bf:	add    BYTE PTR [eax],al
  4252c1:	inc    ecx
  4252c2:	add    ch,BYTE PTR [eax-0x48]
  4252c5:	fld    DWORD PTR [edx]
  4252c7:	mov    BYTE PTR [ecx+0x5ee],al
  4252cd:	push   ebp
  4252ce:	call   0xd7f7:0x2c9b85f
  4252d5:	lock add ah,BYTE PTR [edx+0x0]
  4252d9:	lock outs dx,DWORD PTR ds:[esi]
  4252db:	lea    eax,[esi+ebp*4+0xe]
  4252df:	push   eax
  4252e0:	call   FWORD PTR [esp+eax*4-0x8]
  4252e4:	jmp    FWORD PTR [edi+0x1d]
  4252e7:	sub    ecx,ecx
  4252e9:	iret   
  4252ea:	ret    0xf57
  4252ed:	faddp  st(2),st
  4252ef:	push   esi
  4252f0:	mov    ebp,DWORD PTR [edi-0x2eaa44af]
  4252f6:	pop    esi
  4252f7:	sub    esp,0x2d2
  4252fd:	pop    esp
  4252fe:	push   edi
  4252ff:	div    DWORD PTR [ebp+0x42]
  425302:	jnp    0x4252fc
  425304:	call   0x397eea
  425309:	inc    ebp
  42530a:	aaa    
  42530b:	ror    BYTE PTR [ecx+0x1a85a4f],0x5
  425312:	sub    DWORD PTR [esi],edi
  425314:	add    DWORD PTR [edx],ebx
  425316:	push   es
  425317:	lea    eax,[ebp-0x1e]
  42531a:	push   edx
  42531b:	div    DWORD PTR [ebp+0x2]
  42531e:	outs   dx,DWORD PTR ds:[esi]
  42531f:	adc    eax,0x4619e4
  425324:	test   DWORD PTR [eax],eax
  425326:	add    BYTE PTR [eax],al
  425328:	sbb    dh,bh
  42532a:	sub    ebp,DWORD PTR [edx-0x28]
  42532d:	cmp    BYTE PTR [edi],0x50
  425330:	sbb    dh,BYTE PTR [eax+0x75]
  425333:	clc    
  425334:	inc    edi
  425335:	inc    edi
  425336:	cmp    al,0x50
  425338:	repz and al,0x40
  42533b:	dec    esp
  42533c:	jbe    0x425388
  42533e:	aaa    
  42533f:	sti    
  425340:	mov    esp,0x8f5ea7c0
  425345:	lahf   
  425346:	dec    DWORD PTR [esi+esi*2-0x5b044709]
  42534d:	shrd   eax,edi,0x51
  425351:	lahf   
  425352:	inc    DWORD PTR [edi+0x4ac892e]
  425358:	mov    ch,0xda
  42535a:	mov    eax,0xb8fa7300
  42535f:	add    BYTE PTR [eax+0x6a],ch
  425362:	sub    edx,DWORD PTR [ecx]
  425364:	xor    esp,DWORD PTR [eax-0x259ab6d5]
  42536a:	scas   eax,DWORD PTR es:[edi]
  42536b:	adc    dh,bl
  42536d:	fdivr  QWORD PTR [eax-0x2edf108d]
  425373:	or     ebx,DWORD PTR [esp+ebx*2+0x64840b03]
  42537a:	pop    es
  42537b:	rcl    DWORD PTR [ebx-0x51],0xc
  42537f:	shr    esp,0x28
  425382:	or     al,0x50
  425384:	in     al,0x30
  425386:	inc    esp
  425387:	add    al,0x32
  425389:	aas    
  42538a:	sysret 
  42538c:	add    BYTE PTR [eax],al
  42538e:	add    BYTE PTR [edx],dh
  425390:	(bad)  
  425391:	mov    eax,0x29e0eb73
  425396:	or     BYTE PTR [edx+esi*4],dl
  425399:	repz adc esi,DWORD PTR [ebx+0x7fc07a9f]
  4253a0:	lods   al,BYTE PTR ds:[esi]
  4253a1:	sub    eax,0x327fc64
  4253a6:	sti    
  4253a7:	fmulp  st(7),st
  4253a9:	adc    al,0x40
  4253ab:	repz sbb bh,BYTE PTR [edi-0x11190f5]
  4253b2:	push   ebx
  4253b4:	push   es
  4253b5:	ror    DWORD PTR [esi+edx*8-0x4c7f2558],1
  4253bc:	xor    ecx,DWORD PTR [ebx-0x75]
  4253bf:	xor    BYTE PTR [edi],dl
  4253c1:	aas    
  4253c2:	adc    al,0x2c
  4253c4:	add    bl,ch
  4253c6:	add    al,0xf3
  4253c8:	push   es
  4253c9:	sbb    DWORD PTR [edi+eiz*1-0x57484cca],ebp
  4253d0:	xor    ch,bl
  4253d2:	mov    dh,0xc1
  4253d4:	test   al,0x1c
  4253d6:	or     al,0xd
  4253d8:	stos   DWORD PTR es:[edi],eax
  4253d9:	call   0xf28c:0x5aa7fb2f
  4253e0:	push   es
  4253e1:	jmp    0xd7193a9c
  4253e6:	inc    ebx
  4253e7:	repz sub DWORD PTR [ecx-0x7ee0d4d0],0x6a06f303
  4253f2:	das    
  4253f3:	add    BYTE PTR [eax],al
  4253f5:	add    bh,ch
  4253f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253f8:	cld    
  4253f9:	adc    esp,esp
  4253fb:	inc    esi
  4253fc:	jmp    0xf8748781
  425401:	mov    dh,BYTE PTR [eax+0x177c6916]
  425407:	push   es
  425408:	jmp    0xdf744610
  42540d:	mov    DWORD PTR [esi-0x72a3c159],esi
  425413:	push   es
  425414:	pop    esp
  425415:	outs   dx,DWORD PTR ds:[esi]
  425416:	lahf   
  425417:	add    eax,0xf11803e9
  42541c:	sbb    DWORD PTR [ecx],edx
  42541e:	adc    DWORD PTR ds:0x211b03a9,0xffffff96
  425425:	mov    dh,0xf8
  425427:	jnp    0x4253d5
  425429:	pop    es
  42542a:	add    BYTE PTR [edi-0x3b],al
  42542d:	add    esi,ebx
  42542f:	push   es
  425430:	add    BYTE PTR [ecx+0x6a4ef223],ch
  425436:	mov    bh,0x2
  425438:	push   eax
  425439:	je     0x42546e
  42543b:	mov    ds:0xf6e3de50,eax
  425440:	adc    ebp,DWORD PTR [ecx]
  425442:	out    dx,eax
  425443:	and    BYTE PTR [edx],al
  425445:	pop    esp
  425446:	xor    esp,DWORD PTR [ebx+0x5345c650]
  42544c:	add    ecx,ebp
  42544e:	lock stos DWORD PTR es:[edi],eax
  425450:	adc    eax,0x470329
  425455:	inc    ebx
  425456:	hlt    
  425457:	and    BYTE PTR [esi],al
  425459:	je     0x42545b
  42545b:	add    BYTE PTR [eax],al
  42545d:	xor    esp,DWORD PTR [ebx+0x531d9e50]
  425463:	add    ecx,ebp
  425465:	lock stos DWORD PTR es:[edi],eax
  425467:	adc    eax,0x46ecd5
  42546c:	cmp    edi,ebp
  42546e:	dec    ebx
  42546f:	pop    edx
  425470:	mov    al,0x32
  425472:	(bad)  
  425473:	call   FWORD PTR [ebx]
  425475:	js     0x425411
  425477:	jg     0x4253fe
  425479:	cwde   
  42547a:	daa    
  42547b:	in     al,dx
  42547c:	add    eax,0x5b8754c0
  425481:	jns    0x4254c7
  425483:	adc    al,0xbe
  425485:	test   DWORD PTR [esi],eax
  425487:	cmp    al,0xe9
  425489:	lock push es
  42548b:	sti    
  42548c:	mov    edi,0x54c7de4
  425491:	pop    es
  425492:	push   esi
  425493:	sti    
  425494:	fsubr  QWORD PTR [eax]
  425496:	adc    eax,DWORD PTR [eax-0x17]
  425499:	jae    0x425461
  42549b:	or     ebp,DWORD PTR [ebp+0x7e]
  42549e:	push   es
  42549f:	add    cl,ch
  4254a1:	jns    0x4254e7
  4254a3:	adc    al,0x62
  4254a5:	mov    eax,0xf028f2e2
  4254aa:	push   es
  4254ab:	add    BYTE PTR [eax],al
  4254ad:	dec    edx
  4254ae:	xlat   BYTE PTR ds:[ebx]
  4254af:	add    al,0x8d
  4254b1:	ins    BYTE PTR es:[edi],dx
  4254b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254b3:	loop   0x4254ba
  4254b5:	push   ecx
  4254b6:	pushf  
  4254b7:	jp     0x425480
  4254b9:	mov    dh,0x75
  4254bb:	rol    DWORD PTR [eax],0xca
  4254be:	or     dl,BYTE PTR [eax]
  4254c0:	je     0x4254c2
  4254c2:	add    BYTE PTR [eax],al
  4254c4:	sbb    BYTE PTR [eax+0x4ac6301d],dl
  4254ca:	add    BYTE PTR [edi+0x49],dl
  4254cd:	retf   
  4254ce:	adc    al,0x50
  4254d0:	aas    
  4254d1:	inc    edi
  4254d2:	and    al,0x1c
  4254d4:	or     bl,BYTE PTR [ebx+ecx*8-0x7b]
  4254d8:	pop    edx
  4254d9:	or     al,0x95
  4254db:	rcl    BYTE PTR [esi],0xcb
  4254de:	jne    0x42550d
  4254e0:	and    ebp,esp
  4254e2:	adc    eax,DWORD PTR [ebx-0xb008a6]
  4254e8:	xchg   esi,eax
  4254ea:	cmovo  ecx,DWORD PTR [edx-0x278b3fdb]
  4254f1:	(bad)  
  4254f2:	ds adc al,0x5
  4254f5:	mov    al,al
  4254f7:	add    al,0xa
  4254f9:	mov    es,WORD PTR [esp+0x2e]
  4254fd:	cmp    dh,bh
  4254ff:	rol    edi,cl
  425501:	retf   0x9507
  425504:	sbb    dh,BYTE PTR [eax-0x6]
  425507:	xor    DWORD PTR [edx],ebx
  425509:	xchg   eax,eax
  42550b:	je     0x4254f1
  42550d:	pop    ebx
  42550e:	outs   dx,BYTE PTR ds:[esi]
  42550f:	adc    al,0xc1
  425511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425512:	div    BYTE PTR [esi+esi*8-0x6]
  425516:	sbb    bh,0xb2
  425519:	jo     0x425518
  42551b:	dec    ebp
  42551d:	(bad)  
  42551e:	(bad)  
  42551f:	(bad)  
  425520:	jbe    0x4254e8
  425522:	pop    es
  425523:	mov    DWORD PTR [esi-0x3a],edx
  425526:	jnp    0xf342552c
  42552c:	jne    0x425539
  42552e:	mov    DWORD PTR [edi-0x21051835],esi
  425534:	lahf   
  425535:	adc    BYTE PTR [eax-0xd],al
  425538:	sub    al,ah
  42553a:	je     0x425534
  42553c:	jg     0x4254c0
  42553e:	inc    esp
  42553f:	pop    ss
  425540:	mov    esp,0xa124e84f
  425545:	mov    ah,0xfb
  425547:	sub    al,0xe6
  425549:	jae    0x42554c
  42554b:	sub    BYTE PTR [ecx],ch
  42554d:	call   0x22ec:0x88dab05d
  425554:	add    DWORD PTR [ebx-0x7d0050bb],eax
  42555a:	pop    ecx
  42555b:	sti    
  42555c:	(bad)  
  42555d:	ins    DWORD PTR es:[edi],dx
  42555e:	int    0x9c
  425560:	je     0x4254ea
  425562:	dec    ebp
  425563:	out    0x16,eax
  425565:	(bad)  
  425566:	push   esi
  425567:	jbe    0x4255d8
  425569:	sub    al,BYTE PTR [ecx+eax*8]
  42556c:	outs   dx,DWORD PTR ds:[esi]
  42556d:	test   al,0x16
  42556f:	jo     0x425583
  425571:	mov    eax,0x8099fd01
  425576:	jge    0x425573
  425578:	popa   
  425579:	xor    BYTE PTR [eax+eiz*1],al
  42557c:	jo     0x425526
  42557e:	jmp    DWORD PTR [ecx]
  425580:	jo     0x4255c1
  425582:	xchg   DWORD PTR [esi-0x7cfe7861],esp
  425588:	scas   al,BYTE PTR es:[edi]
  425589:	(bad)  
  42558a:	mov    esi,0x874aaff7
  42558f:	add    BYTE PTR [eax],al
  425591:	add    BYTE PTR [edi+0x30],cl
  425594:	fwait
  425595:	clc    
  425596:	jo     0x4255d3
  425598:	add    ecx,DWORD PTR [edi-0x3b]
  42559b:	sbb    BYTE PTR [esi+0x77d7653],ch
  4255a1:	data16 repz sub al,al
  4255a5:	mov    DWORD PTR [edi+0x1b1bcd06],ebx
  4255ab:	jmp    0x4255da
  4255ad:	mov    ah,0x8
  4255af:	mov    ch,BYTE PTR [ecx]
  4255b1:	das    
  4255b2:	mov    bh,0xa5
  4255b4:	xchg   esi,eax
  4255b5:	jmp    FWORD PTR [ebp+0x21]
  4255b8:	cmc    
  4255b9:	mov    ah,0x1c
  4255bb:	scas   eax,DWORD PTR es:[edi]
  4255bc:	scas   eax,DWORD PTR es:[edi]
  4255bd:	das    
  4255be:	repz push es
  4255c0:	ins    DWORD PTR es:[edi],dx
  4255c1:	ret    
  4255c2:	neg    BYTE PTR [di+0x30]
  4255c6:	out    0xae,eax
  4255c8:	in     al,dx
  4255c9:	cmp    bl,dh
  4255cb:	push   es
  4255cc:	mov    ds:0xe7f80f48,eax
  4255d1:	xchg   DWORD PTR [ebx+0x2fc9e41a],esi
  4255d7:	jmp    0x4255ae
  4255d9:	add    esi,DWORD PTR [eax+ecx*2-0x13]
  4255dd:	xchg   BYTE PTR [ebx],ch
  4255df:	out    dx,eax
  4255e0:	call   0x5556fa63
  4255e5:	les    eax,FWORD PTR [ebx-0x51]
  4255e8:	add    eax,eax
  4255ea:	mov    BYTE PTR [ecx+ebp*2-0x170830d0],ah
  4255f1:	cmp    dh,ch
  4255f3:	(bad)  
  4255f4:	adc    eax,0xe8
  4255f9:	loopne 0x425582
  4255fb:	stos   DWORD PTR es:[edi],eax
  4255fc:	or     al,0xc1
  4255fe:	scas   al,BYTE PTR es:[edi]
  4255ff:	jl     0x4255cf
  425601:	imul   esp,DWORD PTR [esi+ebx*2-0x425114b7],0xc2a45892
  42560c:	push   ecx
  42560d:	add    DWORD PTR [esi],0xffffffbe
  425610:	jle    0x425660
  425612:	inc    edx
  425613:	daa    
  425614:	or     bl,dh
  425616:	adc    edx,DWORD PTR [ebx+0x5136ef45]
  42561c:	fidivr DWORD PTR [esi]
  42561e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42561f:	cmp    bh,BYTE PTR [edi-0x49]
  425622:	jmp    0xa587:0x59fe0ff
  425629:	or     al,0x10
  42562b:	ret    0xf7e9
  42562e:	repz mov edi,0x950fefe0
  425634:	sub    DWORD PTR ds:0xab620013,esi
  42563a:	jmp    0xfefb:0x80a81103
  425641:	pusha  
  425642:	push   es
  425643:	mov    esi,0xb20ff0ed
  425648:	test   al,0xec
  42564a:	and    ebp,eax
  42564c:	jmp    0x558a6955
  425651:	in     al,dx
  425652:	repz mov edi,0xbdfb48aa
  425658:	mov    ecx,0xdab86408
  42565d:	add    BYTE PTR [eax],al
  42565f:	add    BYTE PTR [esi+0x4baa78b6],dh
  425665:	mov    esp,gs
  425667:	push   0x54
  425669:	sahf   
  42566a:	cmp    DWORD PTR [ebp-0x16fff584],0x72533925
  425674:	push   edi
  425675:	lss    ebp,FWORD PTR [esi]
  425678:	jmp    0x42569d
  42567a:	call   0x24654e68
  42567f:	loope  0x4256a5
  425681:	cli    
  425682:	inc    edi
  425683:	hlt    
  425684:	inc    esi
  425685:	enter  0xcd44,0x5c
  425689:	std    
  42568a:	(bad)  
  42568b:	call   0xd871e80
  425690:	jmp    0x425668
  425692:	je     0x42567d
  425694:	lock stos DWORD PTR es:[edi],eax
  425696:	adc    BYTE PTR [esi],ch
  425698:	mov    ah,0xea
  42569a:	or     esi,ebp
  42569c:	lock push es
  42569e:	add    BYTE PTR [eax],al
  4256a0:	fisttp QWORD PTR [ebx+0x24]
  4256a3:	adc    al,0x3a
  4256a5:	add    DWORD PTR [eax],0x244bcd00
  4256ab:	adc    BYTE PTR [eax],dl
  4256ad:	pop    es
  4256ae:	add    BYTE PTR [eax],al
  4256b0:	or     DWORD PTR [ebx+0x24],0x60c7630c
  4256b7:	jmp    0xa32e:0x4489070a
  4256be:	add    BYTE PTR [esi+edi*4-0xa],0x68
  4256c3:	rol    BYTE PTR [eax],0x0
  4256c6:	add    BYTE PTR [edx-0x7c],bh
  4256c9:	add    BYTE PTR [eax],al
  4256cb:	push   ebx
  4256cc:	dec    edx
  4256cd:	and    al,0x10
  4256cf:	cdq    
  4256d0:	(bad)  
  4256d1:	lea    esi,[esi+edi*8-0x4e]
  4256d5:	jecxz  0x4256fa
  4256d7:	pop    ebp
  4256d8:	push   ebp
  4256d9:	idiv   edi
  4256db:	push   ds
  4256dc:	scas   eax,DWORD PTR es:[edi]
  4256dd:	psubsw mm6,QWORD PTR [ebp+0x27000005]
  4256e4:	dec    edi
  4256e5:	and    al,0x14
  4256e7:	or     al,BYTE PTR [ebx+0x58651c9e]
  4256ed:	test   eax,eax
  4256ef:	fisub  WORD PTR [ecx-0x175b17b5]
  4256f5:	cmc    
  4256f6:	call   FWORD PTR [ecx]
  4256f8:	xlat   BYTE PTR ds:[ebx]
  4256f9:	and    edx,DWORD PTR [edx+ecx*4]
  4256fc:	fld    DWORD PTR [ecx]
  4256fe:	mov    eax,0xfffbb102
  425703:	sbb    DWORD PTR [esi-0x79a60000],0x77
  42570a:	add    al,0x4a
  42570c:	pop    es
  42570d:	test   DWORD PTR [esi-0x72fff9b6],ebx
  425713:	push   esi
  425714:	stos   BYTE PTR es:[edi],al
  425715:	arpl   WORD PTR [edx],si
  425717:	mov    cl,0x82
  425719:	xchg   ebx,eax
  42571a:	retf   
  42571b:	repz cmp BYTE PTR [ecx+0x7c5a3d2f],dh
  425722:	ret    
  425723:	sbb    ecx,DWORD PTR [eax+0x2c24fbb7]
  425729:	les    esi,FWORD PTR [eax+eax*1+0x0]
  42572d:	add    bl,bh
  42572f:	and    al,0x48
  425731:	and    al,0x9f
  425733:	xchg   esi,eax
  425734:	das    
  425735:	sub    ah,bh
  425737:	and    ch,al
  425739:	test   BYTE PTR [eax],ch
  42573b:	mov    cl,0x93
  42573d:	shr    ah,0x41
  425740:	les    edx,FWORD PTR [eax+0xb]
  425743:	fidivr WORD PTR [ecx+0x7a81ecfb]
  425749:	jl     0x42575a
  42574b:	xchg   esp,eax
  42574c:	xchg   edi,eax
  42574d:	enter  0x98a9,0xb0
  425751:	test   BYTE PTR [eax+0x3786f61a],bh
  425757:	adc    al,0x0
  425759:	jmp    0x4206de
  42575e:	outs   dx,BYTE PTR ds:[esi]
  42575f:	jnp    0x425744
  425761:	xchg   ecx,esi
  425763:	scas   eax,DWORD PTR es:[edi]
  425764:	inc    edx
  425766:	ja     0x42577b
  425768:	test   dh,bh
  42576a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42576b:	scas   eax,DWORD PTR es:[edi]
  42576c:	stos   DWORD PTR es:[edi],eax
  42576d:	xchg   BYTE PTR [ebx],dh
  42576f:	mov    al,0x97
  425771:	inc    ebx
  425772:	test   al,0x70
  425774:	mov    al,0xfb
  425776:	(bad)  
  425777:	imul   esi,DWORD PTR [ebp+0x3f],0xfffffff3
  42577b:	xor    al,BYTE PTR [ebx-0x5288dc]
  425781:	jmp    FWORD PTR [edx-0x15]
  425784:	out    0x37,eax
  425786:	lds    ebx,FWORD PTR [edx]
  425788:	inc    ebx
  425789:	and    al,0xb3
  42578b:	loopne 0x425727
  42578d:	mov    DWORD PTR [ebx+0x8d4faf],esi
  425793:	add    BYTE PTR [eax],al
  425795:	(bad)  
  425797:	out    dx,eax
  425798:	mov    bh,cl
  42579a:	push   es
  42579b:	or     eax,0x31304cf4
  4257a0:	mov    al,0x38
  4257a2:	(bad)  
  4257a3:	aad    0xe7
  4257a5:	adc    BYTE PTR ds:0xea6f7ee9,ch
  4257ab:	je     0x4257b2
  4257ad:	repz push es
  4257af:	outs   dx,DWORD PTR ds:[esi]
  4257b0:	retf   
  4257b1:	or     ebp,DWORD PTR [ecx]
  4257b3:	pop    ds
  4257b4:	mov    al,0x18
  4257b6:	lods   eax,DWORD PTR ds:[esi]
  4257b7:	cwde   
  4257b8:	mov    al,0xe6
  4257ba:	adc    dh,dh
  4257bc:	inc    ebx
  4257bd:	repz lea ebp,[edx-0x62308805]
  4257c4:	jmp    FWORD PTR [ebp-0x4a]
  4257c7:	mov    esi,0xe99d72d2
  4257cc:	dec    edi
  4257cd:	adc    DWORD PTR [edx],ecx
  4257cf:	jae    0x4257d5
  4257d1:	push   0x48
  4257d3:	loope  0x425785
  4257d5:	push   ds
  4257d6:	mov    ds:0x91f34437,eax
  4257db:	sub    eax,0x258de4e8
  4257e0:	call   0x812a84e9
  4257e5:	das    
  4257e6:	jmp    0x425810
  4257e8:	push   esp
  4257e9:	jle    0x425806
  4257eb:	or     eax,0x54bb1f4
  4257f0:	fdivr  st(0),st
  4257f2:	mov    ebp,DWORD PTR [ecx]
  4257f4:	add    al,0xb1
  4257f6:	dec    ebx
  4257f7:	add    eax,0xe0
  4257fc:	mov    ecx,cs
  4257fe:	sub    eax,0x70b2d4e8
  425803:	inc    esp
  425804:	repz scas al,BYTE PTR es:[edi]
  425806:	loopne 0x4257c3
  425808:	js     0x4257aa
  42580a:	pop    edi
  42580b:	int3   
  42580c:	je     0x425859
  42580e:	int    0xff
  425810:	jo     0x4257ce
  425812:	hlt    
  425813:	pop    es
  425814:	je     0x425861
  425816:	add    ch,cl
  425818:	add    BYTE PTR [eax+0x36f8c57c],cl
  42581e:	sti    
  42581f:	sbb    al,0x83
  425821:	jno    0x425862
  425823:	jmp    0xfa5252b5
  425828:	mov    al,0x6
  42582a:	cmp    eax,0x6f7eb
  42582f:	imul   BYTE PTR [ecx+ebx*2-0x6]
  425833:	ds dec esp
  425835:	xchg   edx,eax
  425836:	inc    esp
  425837:	or     eax,0xd4fb36bf
  42583c:	push   0xb5e94011
  425841:	cmp    al,0x57
  425843:	jb     0x42588f
  425845:	inc    edx
  425846:	mov    edi,0x51b279bc
  42584b:	mov    eax,0xe9f82971
  425850:	cmp    eax,0x23c0faf0
  425855:	pcmpeqb mm4,QWORD PTR [edi+0x1135883e]
  42585c:	loopne 0x4258a4
  42585e:	add    BYTE PTR [eax+eax*1+0x0],dh
  425862:	add    BYTE PTR [ebx],bh
  425864:	lahf   
  425865:	push   eax
  425866:	ss jb  0x4258b2
  425869:	cld    
  42586a:	cmp    ecx,ebx
  42586c:	mov    al,ds:0x9caf54fa
  425871:	shr    BYTE PTR [eax+esi*4+0x19],cl
  425875:	cs jb  0x4258a3
  425878:	lahf   
  425879:	test   DWORD PTR [ecx-0x56811824],ebp
  42587f:	repnz sbb ah,BYTE PTR [ecx+edx*4]
  425883:	fidiv  DWORD PTR [edx]
  425885:	cli    
  425886:	sahf   
  425887:	stc    
  425888:	sahf   
  425889:	test   DWORD PTR [esi+0x248cf7bc],edx
  42588f:	outs   dx,DWORD PTR ds:[esi]
  425890:	dec    edi
  425891:	sti    
  425892:	add    BYTE PTR [edi+0x6b],ah
  425895:	dec    edi
  425896:	push   0x48
  425898:	jo     0x42590f
  42589a:	or     ch,bl
  42589c:	mov    ecx,0x9b47c085
  4258a1:	dec    esi
  4258a2:	call   0x385863
  4258a7:	fldcw  WORD PTR [edi+0x56]
  4258aa:	mov    eax,DWORD PTR ds:0x16c2c951
  4258b0:	add    ecx,DWORD PTR [ebx+0x57]
  4258b3:	lods   eax,DWORD PTR ds:[esi]
  4258b4:	xlat   BYTE PTR ds:[ebx]
  4258b5:	and    ecx,DWORD PTR [eax+ebx*1]
  4258b8:	int3   
  4258b9:	call   0xf7b3364b
  4258be:	mov    eax,edx
  4258c0:	mov    ?,edi
  4258c2:	je     0x4258e5
  4258c4:	cmp    edi,esi
  4258c6:	je     0x4258c8
  4258c8:	add    BYTE PTR [eax],al
  4258ca:	ss mul edi
  4258cd:	jge    0x4258ac
  4258cf:	jo     0x4258c8
  4258d1:	mov    ecx,DWORD PTR [edx]
  4258d3:	(bad)  
  4258d4:	out    dx,al
  4258d5:	je     0x42589d
  4258d7:	xor    al,0x4f
  4258d9:	inc    edi
  4258db:	sbb    cl,BYTE PTR [edx]
  4258dd:	inc    eax
  4258de:	retf   0xc08f
  4258e1:	jne    0x4258bb
  4258e3:	ins    BYTE PTR es:[edi],dx
  4258e4:	mov    ebx,0x6bdea256
  4258e9:	(bad)  
  4258ea:	popf   
  4258eb:	xor    al,0xe8
  4258ed:	inc    edi
  4258ee:	cs ins DWORD PTR es:[edi],dx
  4258f0:	neg    DWORD PTR [esi-0x23]
  4258f3:	and    BYTE PTR [ebx-0x464a7a5],bh
  4258f9:	(bad)  
  4258fa:	out    0xae,al
  4258fc:	(bad)  
  4258fd:	(bad)  
  4258fe:	mov    bh,0xe
  425900:	adc    eax,0xe83a9a40
  425905:	stos   DWORD PTR es:[edi],eax
  425906:	dec    ebp
  425907:	ins    BYTE PTR es:[edi],dx
  425908:	test   DWORD PTR [edx+ecx*2-0xc00fa2a],0x6c03e7fb
  425913:	xchg   ebx,eax
  425914:	unpckhps xmm6,XMMWORD PTR [ebx-0x183f7d51]
  42591b:	mov    al,0xf0
  42591d:	mov    edi,0x871b3
  425922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425923:	sub    BYTE PTR [eax+0x50f4577f],ah
  425929:	push   edx
  42592a:	add    BYTE PTR [ecx+0x55],cl
  42592d:	lea    eax,[eax]
  42592f:	add    BYTE PTR [eax],al
  425931:	mov    esi,0xf3936c4b
  425936:	scas   eax,DWORD PTR es:[edi]
  425937:	inc    DWORD PTR [edi+0x329c44c6]
  42593d:	xor    ch,bl
  42593f:	lods   al,BYTE PTR ds:[esi]
  425940:	mov    ebx,0xfffaff3
  425945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425946:	cmp    BYTE PTR [eax-0x3e],0xa3
  42594a:	in     al,0x12
  42594c:	inc    esp
  42594d:	out    0x6f,eax
  42594f:	dec    DWORD PTR [eax-0x41170852]
  425955:	xchg   bp,ax
  425957:	push   eax
  425958:	push   ebx
  425959:	inc    eax
  42595a:	sbb    edx,eax
  42595c:	push   eax
  42595d:	fdiv   QWORD PTR [edx-0x4fcceaf9]
  425963:	jbe    0x4259aa
  425965:	retf   
  425966:	pop    eax
  425967:	ror    BYTE PTR [ebx],0x6f
  42596a:	mov    edi,?
  42596c:	push   ebx
  42596e:	mov    esp,0xefde1c12
  425973:	add    edi,ebx
  425975:	es mov eax,0xb79f4576
  42597b:	sub    eax,0x835c9cfb
  425980:	shl    ah,0x2b
  425983:	add    BYTE PTR [eax],0xf3
  425986:	scas   eax,DWORD PTR es:[edi]
  425987:	js     0x4259ce
  425989:	sti    
  42598a:	push   es
  42598b:	jo     0x4259d3
  42598d:	jmp    0x425970
  42598f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425990:	ss in  eax,0x8b
  425993:	sub    al,0xd8
  425995:	add    BYTE PTR [eax],al
  425997:	add    BYTE PTR [edx+0x43],bh
  42599a:	loope  0x425a14
  42599c:	arpl   WORD PTR [esi+0x61],bx
  42599f:	add    esi,ebx
  4259a1:	push   es
  4259a2:	xchg   ecx,eax
  4259a3:	rcl    BYTE PTR [ebp-0x43ab8d63],1
  4259a9:	cmp    DWORD PTR [edx+0x36],ebp
  4259ac:	sti    
  4259ad:	popf   
  4259ae:	cld    
  4259af:	jmp    eax
  4259b1:	inc    esi
  4259b2:	jmp    0x56239d2f
  4259b7:	ss pop es
  4259b9:	cmp    dh,BYTE PTR [edx+0x4239b450]
  4259bf:	ss jmp 0x42595f
  4259c2:	aam    0xff
  4259c4:	inc    DWORD PTR [esi-0x17]
  4259c7:	js     0x4259cc
  4259c9:	loope  0x425a00
  4259cb:	aaa    
  4259cc:	rcr    DWORD PTR [ebp+0x46e24ffc],0xe9
  4259d3:	push   ebx
  4259d4:	clc    
  4259d5:	repnz hlt 
  4259d7:	pop    ss
  4259d8:	xor    eax,DWORD PTR [edi]
  4259da:	mov    bl,0x53
  4259dc:	fcmovnb st,st(0)
  4259de:	add    ebp,DWORD PTR [eax+ebx*8-0x16c9d67d]
  4259e5:	xor    al,0xf2
  4259e7:	adc    eax,0x3a8f217
  4259ec:	jnp    0x425a28
  4259ee:	loop   0x425971
  4259f0:	mov    bl,0x13
  4259f2:	in     eax,0xc1
  4259f4:	cs pushf 
  4259f6:	call   0x935024c
  4259fb:	adc    DWORD PTR [eax],eax
  4259fd:	add    BYTE PTR [eax],al
  4259ff:	xor    eax,DWORD PTR [edi]
  425a01:	add    DWORD PTR [ecx-0x68],ecx
  425a04:	adc    ch,ah
  425a06:	in     al,dx
  425a07:	aaa    
  425a08:	xchg   ebx,eax
  425a09:	add    BYTE PTR ds:0xb575a18f,bh
  425a0f:	addr16 xchg esi,eax
  425a11:	cli    
  425a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a13:	dec    eax
  425a14:	mov    al,ds:0xf248a175
  425a19:	adc    edi,esp
  425a1b:	mov    al,0x6
  425a1d:	xchg   BYTE PTR [eax+ebx*4],ah
  425a20:	inc    eax
  425a21:	pop    edx
  425a22:	and    bl,BYTE PTR [esi-0x7616fba3]
  425a28:	adc    esp,DWORD PTR [ebp*8+0x6f669368]
  425a2f:	cwde   
  425a30:	pop    esp
  425a31:	sti    
  425a32:	fstp   QWORD PTR [eax+ecx*1]
  425a35:	call   0xfbe3302d
  425a3a:	sub    al,dl
  425a3c:	sub    esp,0xffffffb8
  425a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a40:	inc    ecx
  425a41:	or     al,0x9a
  425a43:	ret    0x6637
  425a46:	jmp    0x76f:0x6abefba5
  425a4d:	je     0x425a4e
  425a4f:	enter  0x1e12,0xb1
  425a53:	int3   
  425a54:	clc    
  425a55:	xchg   BYTE PTR [eax+eiz*8+0x6ce6c081],ah
  425a5c:	pop    es
  425a5d:	add    ecx,ebp
  425a5f:	lock mov DWORD PTR [eax],0x9e
  425a66:	lock push es
  425a68:	add    BYTE PTR [eax],dl
  425a6a:	mov    ds:0xb1e90006,al
  425a6f:	inc    ecx
  425a70:	cld    
  425a71:	jmp    0xd3026166
  425a76:	loopne 0x425a3f
  425a78:	inc    ebp
  425a79:	(bad)  
  425a7b:	push   es
  425a7c:	add    BYTE PTR [ecx],ch
  425a7e:	mov    WORD PTR [edi],es
  425a80:	ret    
  425a81:	and    al,0x5b
  425a83:	push   es
  425a84:	add    BYTE PTR [eax],al
  425a86:	mov    al,BYTE PTR [edi+0x29864583]
  425a8c:	add    BYTE PTR [edi],al
  425a8e:	call   0x408:0x3c21b07
  425a95:	add    BYTE PTR [edx-0x51803f54],cl
  425a9b:	jmp    0x425acb
  425a9d:	test   DWORD PTR [edx+0x5a3d2aeb],ebx
  425aa3:	add    al,BYTE PTR [eax]
  425aa5:	add    BYTE PTR [esi-0xf],bl
  425aa8:	cmp    al,0x0
  425aaa:	dec    eax
  425aab:	pop    es
  425aac:	add    BYTE PTR [ebp+eax*4-0x52],dh
  425ab0:	sti    
  425ab1:	add    bl,BYTE PTR [edx+0x7]
  425ab4:	jne    0x425a59
  425ab6:	and    BYTE PTR [ecx],al
  425ab8:	jecxz  0x425abc
  425aba:	and    BYTE PTR [ebx-0x51d014ae],bl
  425ac0:	sti    
  425ac1:	add    al,0x1a
  425ac3:	pop    es
  425ac4:	je     0x425ad1
  425ac6:	test   DWORD PTR [edx],0xfffe
  425acc:	add    BYTE PTR [edx],cl
  425ace:	jmp    0x425af0
  425ad0:	cmp    ebx,eax
  425ad2:	(bad)  
  425ad3:	xchg   DWORD PTR [ebx],esi
  425ad5:	loope  0x425b1b
  425ad7:	bound  ecx,QWORD PTR [eax]
  425ad9:	xor    eax,0x604be838
  425ade:	ins    DWORD PTR es:[edi],dx
  425adf:	test   DWORD PTR [ebx+0x75ee870a],0x104519c5
  425ae9:	dec    edi
  425aea:	(bad)  
  425aeb:	je     0x425b67
  425aed:	arpl   WORD PTR [esi+0x77076e2],bp
  425af3:	jecxz  0x425abf
  425af5:	jo     0x425a91
  425af7:	jecxz  0x425b28
  425af9:	and    BYTE PTR [ebp-0x9],ch
  425afc:	test   DWORD PTR [edx-0xc7cfb29],ecx
  425b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b03:	test   al,0xe7
  425b05:	icebp  
  425b06:	cld    
  425b07:	ret    
  425b08:	xchg   DWORD PTR [esi],ebp
  425b0a:	xchg   esp,eax
  425b0b:	mov    esi,0x9f2ff0e9
  425b10:	add    DWORD PTR [edx-0x56],edi
  425b13:	ja     0x425b5f
  425b15:	out    dx,eax
  425b16:	and    al,ah
  425b18:	jne    0x425b02
  425b1a:	adc    al,0x3b
  425b1c:	adc    BYTE PTR [esi+0x70],ch
  425b1f:	xor    BYTE PTR [ecx+0x7a],al
  425b22:	mov    eax,0x2fdb3d9c
  425b27:	add    al,0x0
  425b29:	repz cld 
  425b2b:	sbb    edi,edi
  425b2d:	push   ebp
  425b2e:	xchg   ebx,eax
  425b2f:	mov    ds:0xfb,eax
  425b34:	(bad)  
  425b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b36:	xchg   edi,eax
  425b37:	push   ss
  425b38:	and    DWORD PTR [edx],ebp
  425b3a:	test   eax,0xfbbc3384
  425b3f:	xchg   BYTE PTR ds:0xae86dd35,ch
  425b45:	lahf   
  425b46:	jp     0x425b43
  425b48:	lahf   
  425b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b4a:	test   al,0x15
  425b4c:	sti    
  425b4d:	mov    esi,0xa16a003f
  425b52:	jl     0x425b8e
  425b54:	jbe    0x425b27
  425b56:	das    
  425b57:	or     eax,0xdf9be178
  425b5c:	and    ah,dl
  425b5e:	test   al,0x53
  425b60:	or     esi,esi
  425b62:	push   ss
  425b63:	cli    
  425b64:	in     al,dx
  425b65:	pop    ecx
  425b66:	xchg   edi,eax
  425b67:	in     al,0x5a
  425b69:	or     ch,BYTE PTR [ecx+0x4900ab7f]
  425b6f:	pop    edx
  425b70:	cmp    bh,dl
  425b72:	ror    DWORD PTR [ebx+esi*8],0x2a
  425b76:	les    esi,FWORD PTR [esp+eax*1+0x2d]
  425b7a:	lods   al,BYTE PTR ds:[esi]
  425b7b:	sti    
  425b7c:	inc    edi
  425b7d:	pop    es
  425b7e:	pop    ds
  425b7f:	test   DWORD PTR [edi],esi
  425b81:	jecxz  0x425b67
  425b83:	add    esp,DWORD PTR [edi]
  425b85:	(bad)  
  425b86:	gs daa 
  425b88:	iret   
  425b89:	push   cs
  425b8a:	jmp    0xef5e4f0b
  425b8f:	sbb    eax,0xdfd49a40
  425b94:	inc    BYTE PTR [esi-0x17]
  425b97:	pushf  
  425b98:	add    BYTE PTR [eax],al
  425b9a:	add    ch,dh
  425b9c:	cdq    
  425b9d:	xor    eax,0x1d99f4e0
  425ba2:	loopne 0x425b90
  425ba4:	ss xchg ecx,eax
  425ba6:	xchg   BYTE PTR ds:0x337e9298,bh
  425bac:	pop    ds
  425bad:	out    dx,al
  425bae:	jle    0x425c11
  425bb0:	adc    bl,ch
  425bb2:	test   al,0xfe
  425bb4:	(bad)  
  425bb5:	xlat   BYTE PTR ds:[ebx]
  425bb6:	inc    ebx
  425bb7:	repz (bad) 
  425bb9:	jmp    0x425b57
  425bbb:	in     eax,dx
  425bbc:	xor    DWORD PTR [ebx+0x2f],0xfffffff1
  425bc0:	shr    ebx,0x50
  425bc3:	repz push es
  425bc5:	jmp    0x27db974e
  425bca:	sti    
  425bcb:	and    al,0x32
  425bcd:	pop    esi
  425bce:	xchg   edi,eax
  425bcf:	lods   al,BYTE PTR ds:[esi]
  425bd0:	xor    BYTE PTR [esi-0x4d],ch
  425bd3:	les    edi,FWORD PTR [ebp+0x4d87b4fe]
  425bd9:	test   ax,0x1208
  425bdd:	mov    ds:0x9d0e9fea,eax
  425be2:	inc    edx
  425be3:	mov    ebx,0xf42fe538
  425be8:	mov    ebp,ebx
  425bea:	sbb    eax,0x9bb635e5
  425bef:	es mov ch,0x3
  425bf2:	test   al,0x6c
  425bf4:	rcl    DWORD PTR [ebp+0xf3676],1
  425bfa:	cdq    
  425bfb:	and    ebx,DWORD PTR [ebp+esi*2+0xe1]
  425c02:	mov    edx,ebp
  425c04:	cli    
  425c05:	cld    
  425c06:	int3   
  425c07:	or     al,BYTE PTR [eax-0x17]
  425c0a:	jae    0x425bd3
  425c0c:	je     0x425bfa
  425c0e:	xchg   edi,eax
  425c0f:	sbb    ecx,DWORD PTR [eax]
  425c11:	push   ebp
  425c12:	push   es
  425c13:	xor    BYTE PTR [ebp-0xb],0x89
  425c17:	test   eax,0xf255e274
  425c1c:	pop    ss
  425c1d:	fdiv   DWORD PTR [eax]
  425c1f:	pop    es
  425c20:	mov    edi,esp
  425c22:	pop    ecx
  425c23:	test   BYTE PTR [esi-0x7908a752],0x24
  425c2a:	imul   edx,ecx,0xffffffbe
  425c2d:	sbb    eax,0x3600c565
  425c32:	test   DWORD PTR [esi],0x9c976a00
  425c38:	pop    edx
  425c39:	and    bh,BYTE PTR [edx-0x5c16f7a8]
  425c3f:	jg     0x425c2d
  425c41:	sbb    BYTE PTR [esi+0x72588734],ah
  425c47:	xchg   ebp,eax
  425c48:	je     0x425bf8
  425c4a:	jno    0x425be9
  425c4c:	sti    
  425c4d:	fucomp st(2)
  425c4f:	pop    ss
  425c50:	call   0x4839293e
  425c55:	mov    ebp,0xfe754018
  425c5a:	jmp    0xbfe9:0x4425398
  425c61:	test   eax,0x292e9959
  425c66:	add    BYTE PTR [eax],al
  425c68:	add    BYTE PTR [edi+0x7ff1457f],bl
  425c6e:	dec    eax
  425c6f:	push   eax
  425c70:	(bad)  
  425c71:	in     eax,0x9f
  425c73:	mov    eax,0x849b9538
  425c78:	add    BYTE PTR [edx],cl
  425c7a:	xlat   BYTE PTR ds:[ebx]
  425c7b:	or     bh,bh
  425c7d:	test   BYTE PTR [esi],bl
  425c7f:	jne    0x425c79
  425c81:	repnz cli 
  425c83:	sar    dh,1
  425c85:	int    0x17
  425c87:	shl    BYTE PTR [edi+eax*8+0x1c],0x45
  425c8c:	clc    
  425c8d:	ror    DWORD PTR [eax*4-0x908b901],0x15
  425c95:	mov    ds:0x23003ff2,al
  425c9a:	cdq    
  425c9b:	loop   0x425ca7
  425c9d:	pop    ss
  425c9e:	popa   
  425c9f:	je     0x425ca7
  425ca1:	push   ebp
  425ca2:	cwde   
  425ca3:	dec    esi
  425ca4:	add    BYTE PTR [edx+0x4dc87b03],cl
  425caa:	inc    ecx
  425cab:	leave  
  425cac:	ret    0x356
  425caf:	test   esi,esi
  425cb1:	push   es
  425cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cb3:	jp     0x425cb3
  425cb5:	ins    DWORD PTR es:[edi],dx
  425cb6:	out    0x15,eax
  425cb8:	push   edi
  425cb9:	loope  0x425c5c
  425cbb:	test   bh,bh
  425cbd:	inc    esi
  425cbe:	sahf   
  425cbf:	add    bh,0x72
  425cc2:	sbb    edx,eax
  425cc4:	dec    ch
  425cc6:	dec    eax
  425cc7:	call   0xf7a37f5b
  425ccc:	push   esi
  425ccd:	add    BYTE PTR [eax],al
  425ccf:	add    dl,al
  425cd1:	sbb    ch,BYTE PTR [eax-0x2]
  425cd4:	mov    ebp,0xc95fbb94
  425cd9:	xchg   al,al
  425cdb:	je     0x425ce1
  425cdd:	pop    eax
  425cde:	add    BYTE PTR [edi+0x1a],dl
  425ce1:	add    eax,DWORD PTR [eax]
  425ce3:	adc    edx,0x60
  425ce6:	mov    ebx,0x816f9155
  425ceb:	in     al,dx
  425cec:	add    al,BYTE PTR ds:0x11a50000
  425cf2:	jge    0x425d0c
  425cf4:	repz sub al,BYTE PTR [eax-0x5dfa2108]
  425cfb:	push   eax
  425cfc:	push   0x1de7f763
  425d01:	mov    ds:0x2424ffff,al
  425d06:	mov    edi,0x2ba4e774
  425d0b:	adc    al,0x66
  425d0d:	and    ebp,DWORD PTR [ebp+edi*8+0x75a5b5ac]
  425d14:	test   edi,0xc59e379b
  425d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d1b:	leave  
  425d1c:	mov    al,0x19
  425d1e:	cmp    edx,DWORD PTR [esi+esi*2]
  425d21:	pusha  
  425d22:	xor    BYTE PTR [edx],al
  425d24:	lods   al,BYTE PTR ds:[esi]
  425d25:	mov    al,ds:0x9ff3004c
  425d2a:	or     al,0x74
  425d2d:	push   edi
  425d2e:	rol    DWORD PTR [edi+0x51fbcbb7],0x0
  425d35:	add    BYTE PTR [eax],al
  425d37:	fs hlt 
  425d39:	fisttp WORD PTR [edi]
  425d3b:	push   0x5417dffc
  425d40:	xchg   esp,eax
  425d41:	fisttp DWORD PTR [edi]
  425d43:	pop    ebx
  425d44:	loopne 0x425ce7
  425d46:	sti    
  425d47:	inc    esp
  425d48:	inc    al
  425d4a:	xchg   DWORD PTR [edi+0x3452fbcb],esi
  425d50:	mov    ah,0xdb
  425d52:	adc    edi,DWORD PTR [eax-0x4c]
  425d55:	fist   DWORD PTR [ebx]
  425d57:	and    al,0xb4
  425d59:	fisttp DWORD PTR [edi]
  425d5b:	or     edi,DWORD PTR [ecx+0x6d14fba5]
  425d61:	rol    BYTE PTR [edi+0x51fc0bb7],0x78
  425d68:	push   esp
  425d69:	fild   DWORD PTR [edi]
  425d6b:	or     ebp,DWORD PTR [esi-0x5c]
  425d6e:	sti    
  425d6f:	hlt    
  425d70:	push   es
  425d71:	ret    
  425d72:	shl    BYTE PTR [edx+ecx*2-0x3b],0xf7
  425d77:	ins    DWORD PTR es:[edi],dx
  425d78:	inc    edx
  425d79:	int    0xff
  425d7b:	inc    ecx
  425d7c:	xchg   esi,eax
  425d7d:	xchg   ebp,eax
  425d7e:	fucomip st,st(0)
  425d80:	add    DWORD PTR [ebp+0x289ee4df],0x9295c8a6
  425d8a:	shl    BYTE PTR [esi],0x82
  425d8d:	std    
  425d8e:	add    bh,0xfe
  425d91:	out    0x3,al
  425d93:	repz cmp eax,0x8403266e
  425d99:	ins    BYTE PTR es:[edi],dx
  425d9a:	stos   DWORD PTR es:[edi],eax
  425d9b:	add    BYTE PTR [eax],al
  425d9d:	add    BYTE PTR [esi+0x6c53ca95],bl
  425da3:	dec    ebx
  425da4:	icebp  
  425da5:	fwait
  425da6:	js     0x425daf
  425da8:	jmp    0xa9cd85b0
  425dad:	das    
  425dae:	out    0x83,eax
  425db0:	fs stos DWORD PTR es:[edi],eax
  425db2:	jbe    0x425d49
  425db4:	mov    ds:0xb6845b53,al
  425db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dba:	push   0xf72fa98a
  425dbf:	fldcw  WORD PTR [eax-0x4e766b46]
  425dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dc6:	cmp    cl,cl
  425dc8:	adc    al,0x79
  425dca:	push   edi
  425dcb:	xchg   DWORD PTR [ebp-0x166ac2ed],eax
  425dd1:	push   eax
  425dd2:	mov    eax,ds:0x7e00cf3d
  425dd7:	sbb    esp,DWORD PTR [ecx+0x44]
  425dda:	lea    esp,[edi]
  425ddc:	mov    edi,0xab9ebb29
  425de1:	adc    esi,ebx
  425de3:	push   es
  425de4:	retf   
  425de5:	jp     0x425dd8
  425de7:	mov    DWORD PTR [ebx],esp
  425de9:	add    DWORD PTR [eax+0x344001b],edi
  425def:	push   ebp
  425df0:	bound  esp,QWORD PTR [eax-0x4b]
  425df3:	nop
  425df4:	xchg   DWORD PTR [eax+eax*1+0x186ad6e4],ebp
  425dfb:	or     eax,DWORD PTR [ecx]
  425dfd:	pushf  
  425dfe:	fisttp QWORD PTR [ebp+0xe170]
  425e04:	add    BYTE PTR [ebx-0x6b],bh
  425e07:	inc    DWORD PTR cs:[esi-0x76]
  425e0b:	lock cld 
  425e0d:	nop
  425e0e:	nop
  425e0f:	push   eax
  425e10:	add    DWORD PTR [ebx+0x20e90000],esp
  425e16:	add    BYTE PTR [ebp-0x1f],0xe7
  425e1a:	test   edx,eax
  425e1c:	pop    es
  425e1d:	sti    
  425e1e:	push   es
  425e1f:	add    BYTE PTR [edi],bh
  425e21:	push   eax
  425e22:	cli    
  425e23:	jnp    0x425e1d
  425e25:	xor    BYTE PTR [edi],al
  425e27:	test   DWORD PTR [ecx+0x648d16eb],ebp
  425e2d:	pop    edi
  425e2e:	xchg   edx,eax
  425e2f:	sti    
  425e30:	mov    dh,0xc7
  425e32:	(bad)  
  425e33:	adc    eax,0xffd47c55
  425e38:	jno    0x425e79
  425e3a:	add    BYTE PTR [ebp-0x46f6d67],0x60
  425e41:	ret    0x36f6
  425e44:	mov    eax,ds:0x4873afb
  425e49:	jecxz  0x425dd6
  425e4b:	jne    0x425e3e
  425e4d:	ins    DWORD PTR es:[edi],dx
  425e4e:	enter  0x6afa,0x29
  425e52:	xchg   ebp,eax
  425e53:	jecxz  0x425e64
  425e55:	jno    0x425de8
  425e57:	sti    
  425e58:	push   0xffffff8f
  425e5a:	nop
  425e5b:	je     0x425e7c
  425e5d:	fadd   QWORD PTR [ebx+0x53]
  425e60:	mov    edi,0xf9758fe0
  425e65:	fld    QWORD PTR [ebx-0x5]
  425e68:	add    BYTE PTR [eax],al
  425e6a:	add    BYTE PTR [eax],al
  425e6c:	das    
  425e6d:	clc    
  425e6e:	or     DWORD PTR [eax+0x1a],eax
  425e71:	mov    ch,0xba
  425e73:	jle    0x425e65
  425e75:	mov    bl,0xf2
  425e77:	jle    0x425e8d
  425e79:	ja     0x425e87
  425e7b:	xor    dl,dl
  425e7d:	shl    dh,cl
  425e7f:	je     0x425e4d
  425e81:	mov    ah,0xbe
  425e83:	jge    0x425e65
  425e85:	jg     0x425ea0
  425e87:	push   0xffffffc8
  425e89:	fisttp WORD PTR [ebx]
  425e8b:	mov    ebx,DWORD PTR [edx-0x3d8a08f9]
  425e91:	push   0x479c3015
  425e96:	add    BYTE PTR [ebx],dh
  425e98:	or     cl,BYTE PTR [esp+eax*8-0x59c25f4]
  425e9f:	xor    bl,BYTE PTR [edx+0x48]
  425ea2:	push   esi
  425ea3:	pop    ebx
  425ea4:	push   ebx
  425ea5:	int3   
  425ea6:	sub    eax,eax
  425ea8:	retf   0x55cb
  425eab:	mov    esp,DWORD PTR [esi-0x23c31374]
  425eb1:	iret   
  425eb2:	cmp    BYTE PTR [ebp-0x5a],0xd0
  425eb6:	div    BYTE PTR [ebp-0x5e]
  425eb9:	loope  0x425eba
  425ebb:	imul   ebx,DWORD PTR [edx+0x68],0xb9820875
  425ec2:	stc    
  425ec3:	inc    DWORD PTR [ebp-0x717c0f7c]
  425ec9:	fwait
  425eca:	test   dh,dh
  425ecc:	dec    esi
  425ecd:	fdivr  DWORD PTR [edx-0x2]
  425ed0:	add    BYTE PTR [eax],al
  425ed2:	add    ch,al
  425ed4:	sti    
  425ed5:	popa   
  425ed6:	mov    ecx,DWORD PTR [esi+esi*2+0x4d]
  425eda:	(bad)  
  425edb:	(bad)  [edi+0x30]
  425ede:	jmp    FWORD PTR [edi]
  425ee0:	(bad)  
  425ee1:	or     eax,0xc07e1a40
  425ee6:	jne    0x425edb
  425ee8:	stos   BYTE PTR es:[edi],al
  425ee9:	mov    al,BYTE PTR [ebp-0x5]
  425eec:	inc    ebp
  425eed:	mov    eax,0x824c0cfd
  425ef2:	enter  0x3804,0x4a
  425ef6:	lea    esi,[esi-0x5172d12b]
  425efc:	cmc    
  425efd:	cs sti 
  425eff:	push   es
  425f00:	and    al,0xf4
  425f02:	aas    
  425f03:	repz sub bh,BYTE PTR [edi+0x17f90374]
  425f0a:	adc    BYTE PTR [esi+0x6b],ah
  425f0d:	xchg   edi,eax
  425f0e:	sti    
  425f0f:	inc    esi
  425f10:	pushf  
  425f11:	das    
  425f12:	sti    
  425f13:	fiadd  WORD PTR [edi+0x24f33ff4]
  425f19:	dec    eax
  425f1a:	les    ebp,FWORD PTR [eax+0x73]
  425f1d:	repz jle 0x425eb3
  425f20:	add    DWORD PTR [esi],esp
  425f22:	mov    edx,esi
  425f24:	sbb    al,0x21
  425f26:	add    al,0xf2
  425f28:	xor    al,BYTE PTR [ebx]
  425f2a:	xchg   DWORD PTR [eax+ebp*4],edx
  425f2d:	lods   al,BYTE PTR ds:[esi]
  425f2e:	inc    cl
  425f30:	enter  0x7b84,0xdf
  425f34:	sahf   
  425f35:	adc    cl,BYTE PTR [eax]
  425f37:	add    BYTE PTR [eax],al
  425f39:	add    dh,ch
  425f3b:	pop    ds
  425f3c:	add    al,0x0
  425f3e:	repz dec ecx
  425f40:	xchg   DWORD PTR [ecx],eax
  425f42:	js     0x425fa6
  425f44:	inc    ecx
  425f45:	pop    edx
  425f46:	cmp    bl,BYTE PTR [ebp+0x33]
  425f49:	xchg   DWORD PTR [edi+0x1f],ecx
  425f4c:	mov    al,0x8
  425f4e:	icebp  
  425f4f:	lahf   
  425f50:	dec    DWORD PTR [esi-0x5b]
  425f53:	adc    al,0xd3
  425f55:	psrad  mm3,mm7
  425f58:	add    eax,DWORD PTR [edi-0x790bf7e5]
  425f5e:	mov    bl,0x9f
  425f60:	xor    al,0xfb
  425f62:	inc    ebp
  425f63:	pop    es
  425f64:	ins    BYTE PTR es:[edi],dx
  425f65:	les    ebx,FWORD PTR [esi-0x14b69208]
  425f6b:	or     esi,ebx
  425f6d:	add    eax,0xa0b906f3
  425f72:	xchg   dh,bh
  425f74:	inc    ecx
  425f75:	imul   esp
  425f77:	imul   DWORD PTR [eax+0x3e084303]
  425f7d:	inc    eax
  425f7e:	mov    edi,edx
  425f80:	pop    ebp
  425f81:	inc    esp
  425f82:	repz xor eax,0xc66eba22
  425f88:	xchg   esp,eax
  425f89:	or     esi,DWORD PTR [ecx+ecx*2-0x1f]
  425f8d:	test   BYTE PTR [ebx+0x55c1fdf8],dh
  425f93:	add    eax,0x466c0f91
  425f98:	jmp    0x653e17d1
  425f9d:	cmc    
  425f9e:	add    BYTE PTR [eax],al
  425fa0:	add    ah,dh
  425fa2:	push   es
  425fa3:	les    esp,FWORD PTR fs:[esi]
  425fa6:	fist   DWORD PTR [eax+0x8]
  425fa9:	repnz push es
  425fab:	jmp    0x3646bc34
  425fb0:	xor    al,0x66
  425fb2:	pop    ebx
  425fb3:	rcr    DWORD PTR [esi-0x34996e78],1
  425fb9:	mov    BYTE PTR [esi-0x6e869c18],bl
  425fbf:	ins    BYTE PTR es:[edi],dx
  425fc0:	ret    
  425fc1:	stc    
  425fc2:	out    dx,al
  425fc3:	pop    ebp
  425fc4:	leave  
  425fc5:	ret    
  425fc6:	jge    0x425ff2
  425fc8:	or     al,0xee
  425fca:	call   0x373563b3
  425fcf:	xchg   edx,eax
  425fd0:	push   ss
  425fd1:	jmp    0x425f71
  425fd3:	cmc    
  425fd4:	inc    ecx
  425fd5:	repz push es
  425fd7:	ins    BYTE PTR es:[edi],dx
  425fd8:	ret    
  425fd9:	mov    esi,0x99c3b764
  425fde:	sub    eax,0xa2ea000
  425fe3:	add    BYTE PTR [edx],bl
  425fe5:	inc    esi
  425fe6:	mov    eax,0xfdecc739
  425feb:	test   BYTE PTR [eax+esi*8+0x18c10006],al
  425ff2:	mov    BYTE PTR [eax-0x17],al
  425ff5:	push   ebx
  425ff6:	sti    
  425ff7:	push   edi
  425ff8:	(bad)  [eax+0x1fe78906]
  425ffe:	push   eax
  425fff:	or     ebp,DWORD PTR [ebp-0x80]
  426002:	push   es
  426003:	add    cl,ch
  426005:	add    BYTE PTR [eax],al
  426007:	add    BYTE PTR [eax],bl
  426009:	das    
  42600a:	or     ecx,ebp
  42600c:	lock sub BYTE PTR [eax],cl
  42600f:	push   ds
  426010:	lds    esi,FWORD PTR [eax-0x740f5559]
  426016:	adc    eax,0xffd0c7e5
  42601b:	outs   dx,DWORD PTR ds:[esi]
  42601c:	cmp    bh,bh
  42601e:	ss sub ah,ah
  426021:	and    dl,BYTE PTR [ebx+0x62]
  426024:	xchg   ebp,eax
  426025:	dec    esp
  426026:	push   cs
  426027:	test   eax,0x72301ef0
  42602c:	das    
  42602d:	pop    es
  42602e:	sti    
  42602f:	pop    ss
  426030:	jl     0x425fe6
  426032:	xchg   DWORD PTR [edi],esp
  426034:	out    0x1e,eax
  426036:	cmp    al,0x62
  426038:	aaa    
  426039:	pop    es
  42603a:	mov    DWORD PTR [eax],ebp
  42603c:	sti    
  42603d:	mov    esi,DWORD PTR [edx]
  42603f:	mov    esi,0xe14a8844
  426044:	enter  0x873e,0x29
  426048:	idiv   DWORD PTR [ebp+0x41]
  42604b:	icebp  
  42604c:	test   ebp,edx
  42604e:	cli    
  42604f:	mov    dh,0x68
  426051:	cmp    eax,0x88170108
  426056:	inc    eax
  426057:	jmp    0x4ea6db
  42605c:	ins    DWORD PTR es:[edi],dx
  42605d:	mov    ecx,0x40c1d7f6
  426062:	or     BYTE PTR [ecx+0x46829b0b],cl
  426068:	adc    dl,cl
  42606a:	cmp    BYTE PTR [eax+0x0],bl
  42606d:	add    BYTE PTR [eax],al
  42606f:	push   ss
  426070:	clc    
  426071:	push   cs
  426072:	cmp    DWORD PTR [edx],esi
  426074:	cld    
  426075:	jae    0x426089
  426077:	add    edx,ebx
  426079:	or     esi,DWORD PTR [edi+ebp*1-0x4d]
  42607d:	push   ebx
  42607e:	adc    BYTE PTR [esi-0x4],al
  426081:	sub    al,al
  426083:	dec    edx
  426084:	cmp    DWORD PTR [esi],0x4
  426087:	popa   
  426088:	lds    edx,FWORD PTR [eax-0x18]
  42608b:	sub    bh,bl
  42608d:	cmc    
  42608e:	jmp    DWORD PTR [ebx-0x2f]
  426091:	pop    es
  426092:	inc    esp
  426094:	jo     0x4260ab
  426096:	pop    esp
  426097:	fadd   DWORD PTR [ebx+0x0]
  42609a:	mov    esp,ebx
  42609c:	mov    ch,0xbb
  42609e:	pop    ebx
  42609f:	sbb    DWORD PTR [esi+edi*1+0x8],edi
  4260a3:	gs (bad) 
  4260a5:	sbb    eax,0x5003ca04
  4260aa:	mov    edi,0xa96
  4260af:	in     eax,0x6f
  4260b1:	adc    eax,0x439918
  4260b6:	test   DWORD PTR [edx-0x12],ecx
  4260b9:	(bad)  
  4260ba:	xor    DWORD PTR [edx+0x62],ebx
  4260bd:	clc    
  4260be:	add    BYTE PTR [edx-0x7db17cfd],bl
  4260c4:	jl     0x42611a
  4260c6:	and    al,0x92
  4260c8:	fadd   DWORD PTR [eax+0x53cc1]
  4260ce:	add    BYTE PTR [edx+0xfe9c4a],al
  4260d4:	add    BYTE PTR [eax],al
  4260d6:	jge    0x426156
  4260d8:	shl    BYTE PTR [ebp-0xd],0x7b
  4260dc:	xchg   BYTE PTR [edx-0x5],cl
  4260df:	xor    eax,0x844fb9a
  4260e4:	lea    eax,[ecx-0x57fd]
  4260ea:	push   0x72890be7
  4260ef:	pop    ecx
  4260f0:	add    eax,0x4514f300
  4260f5:	or     al,al
  4260f7:	in     al,dx
  4260f8:	mov    dh,0x89
  4260fa:	jnp    0x4260f1
  4260fc:	add    DWORD PTR [eax],eax
  4260fe:	repz and al,0x45
  426101:	or     BYTE PTR [edx+0x25],bh
  426104:	fild   DWORD PTR [ecx]
  426106:	repz popf 
  426108:	xchg   BYTE PTR [edx-0x15],al
  42610b:	es ja  0x42614e
  42610e:	cmc    
  42610f:	lahf   
  426110:	inc    DWORD PTR [esi-0x7f3d67d3]
  426116:	aaa    
  426117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426118:	(bad)  
  426119:	push   edx
  42611b:	lahf   
  42611c:	(bad)  
  42611d:	(bad)  
  42611e:	js     0x426186
  426120:	pop    es
  426121:	mov    DWORD PTR [ebx+0x58],ebp
  426124:	add    eax,0x4518f300
  426129:	or     BYTE PTR [eax],al
  42612b:	out    0x24,eax
  42612d:	mov    DWORD PTR [ebx+0x70],edi
  426130:	add    eax,0x4218f300
  426135:	or     BYTE PTR [ebx-0x78],ch
  426138:	add    al,BYTE PTR cs:[eax]
  42613b:	add    BYTE PTR [eax],al
  42613d:	repz lahf 
  42613f:	mov    BYTE PTR [edx-0x5],al
  426142:	inc    edi
  426143:	out    dx,al
  426144:	xchg   BYTE PTR [ebx],dh
  426146:	mov    al,ds:0x9ff44e02
  42614b:	dec    DWORD PTR [edi+0x74]
  42614e:	stos   DWORD PTR es:[edi],eax
  42614f:	or     edx,DWORD PTR [ecx]
  426151:	mov    bl,0x9f
  426153:	mov    BYTE PTR [edx-0x5],al
  426156:	push   es
  426157:	stac   
  42615a:	imul   BYTE PTR [ebp+0x44]
  42615d:	repz add esi,DWORD PTR [edi]
  426160:	or     al,0xf3
  426162:	push   es
  426163:	cmp    DWORD PTR [ebp+0x43d7f2de],ebx
  426169:	repz and DWORD PTR [ebx],0x617ba10c
  426170:	aam    0xf2
  426172:	push   es
  426173:	jmp    0x1afcfcaa
  426178:	inc    edx
  426179:	repz push ds
  42617b:	ja     0x426152
  42617d:	(bad)  
  42617e:	push   es
  42617f:	rcr    DWORD PTR [ecx],0xc0
  426182:	dec    eax
  426183:	jmp    0xa717eeb3
  426188:	add    ecx,DWORD PTR [ebx-0xcbe0dc8]
  42618e:	push   ds
  42618f:	out    dx,eax
  426190:	aam    0x2e
  426192:	pop    es
  426193:	rcl    DWORD PTR [eax+0x2be94921],0x40
  42619a:	shl    DWORD PTR [esi-0x22c3b4fd],cl
  4261a0:	inc    ecx
  4261a1:	add    BYTE PTR [eax],al
  4261a3:	add    bl,dh
  4261a5:	jnp    0x426142
  4261a7:	cvtdq2ps xmm3,XMMWORD PTR [edx+ebx*2]
  4261ab:	inc    esp
  4261ac:	repz aaa 
  4261ae:	cli    
  4261af:	xor    ebp,edi
  4261b1:	and    DWORD PTR [ebx+0x5e077a0b],0xad89fb46
  4261bb:	xlat   BYTE PTR ds:[ebx]
  4261bc:	int    0xbf
  4261be:	and    ah,bh
  4261c0:	cmp    eax,0x28c37bfe
  4261c5:	leave  
  4261c6:	in     eax,0x3
  4261c8:	ins    BYTE PTR es:[edi],dx
  4261c9:	inc    esp
  4261ca:	in     eax,dx
  4261cb:	dec    ebx
  4261cc:	pop    es
  4261cd:	or     dh,BYTE PTR [ecx]
  4261cf:	pop    ss
  4261d0:	fild   WORD PTR [ecx+0xdff2f00]
  4261d6:	cmp    cl,ch
  4261d8:	cld    
  4261d9:	cli    
  4261da:	cli    
  4261db:	fnstcw WORD PTR [edi+0x36]
  4261de:	adc    BYTE PTR [edx-0x52],dh
  4261e1:	(bad)  
  4261e2:	jle    0x4261ad
  4261e4:	lock das 
  4261e6:	mov    edi,0x7f9a7a34
  4261eb:	xchg   ebp,eax
  4261ec:	in     al,dx
  4261ed:	cmp    eax,0xfadd7e53
  4261f2:	cli    
  4261f3:	fdiv   QWORD PTR [eax-0x4]
  4261f6:	aas    
  4261f7:	jmp    0x4271f077
  4261fc:	ins    DWORD PTR es:[edi],dx
  4261fd:	dec    ecx
  4261fe:	sti    
  4261ff:	jo     0x4261d6
  426201:	xchg   edx,eax
  426202:	mov    DWORD PTR [esp+ebp*2+0xe9f9cb],esi
  426209:	add    BYTE PTR [eax],al
  42620b:	lock push es
  42620d:	or     ebp,DWORD PTR [esi-0x7d]
  426210:	push   es
  426211:	add    cl,ch
  426213:	imul   eax,DWORD PTR [eax+0x8],0x62
  426217:	and    eax,0xf1e567ff
  42621c:	push   es
  42621d:	add    BYTE PTR [edx-0x4f],ch
  426220:	stc    
  426221:	out    0x1f,eax
  426223:	pop    edx
  426224:	xchg   ecx,eax
  426225:	sti    
  426226:	ins    BYTE PTR es:[edi],dx
  426227:	mov    al,0x12
  426229:	jl     0x4261e1
  42622b:	adc    cl,BYTE PTR [si]
  42622e:	je     0x426265
  426230:	xchg   ebx,eax
  426231:	push   eax
  426232:	adc    DWORD PTR [esi],ecx
  426234:	push   ecx
  426235:	sti    
  426236:	div    BYTE PTR [ebp-0x39]
  426239:	je     0x4261bd
  42623b:	jno    0x426247
  42623d:	cld    
  42623e:	jmp    0x5b42693a
  426243:	mov    ds:0xe2d6533d,al
  426248:	cli    
  426249:	dec    esi
  42624a:	rcl    eax,0x63
  42624d:	cli    
  42624e:	add    BYTE PTR [ebp-0x33740784],dh
  426254:	cli    
  426255:	xchg   DWORD PTR [eax+0x4e],ebx
  426258:	pop    ebp
  426259:	add    cl,BYTE PTR [ebx+0x7d82fb0c]
  42625f:	jle    0x42622a
  426261:	inc    eax
  426262:	adc    al,0x4b
  426264:	lods   eax,DWORD PTR ds:[esi]
  426265:	bnd je 0x42629a
  426268:	jge    0x4262a8
  42626a:	or     al,dh
  42626c:	add    DWORD PTR [eax-0x5a],ebp
  42626f:	add    BYTE PTR [eax],al
  426271:	add    BYTE PTR [edx],dh
  426273:	inc    edx
  426274:	add    BYTE PTR [eax-0x19],ch
  426277:	pop    ss
  426278:	inc    eax
  426279:	add    dl,dh
  42627b:	and    al,0x38
  42627d:	inc    edx
  42627e:	sbb    dl,ch
  426280:	dec    esi
  426281:	push   0x407d1e
  426286:	mov    ch,0xb2
  426288:	not    BYTE PTR [eax+0x12]
  42628b:	test   esp,eax
  42628d:	and    BYTE PTR [edi-0x366af83e],cl
  426293:	stos   DWORD PTR es:[edi],eax
  426294:	jl     0x42628a
  426296:	ds push es
  426298:	dec    edi
  426299:	call   0x3847ca
  42629e:	adc    eax,0x4e8f3f6
  4262a3:	in     eax,0xf5
  4262a5:	jmp    DWORD PTR [eax-0x3c]
  4262a8:	jecxz  0x4262b4
  4262aa:	in     eax,0xf5
  4262ac:	repz call 0x3847aa
  4262b2:	js     0x42627b
  4262b4:	push   edi
  4262b5:	pop    ebx
  4262b6:	add    eax,ebp
  4262b8:	or     BYTE PTR [eax],al
  4262ba:	(bad)  
  4262bb:	jl     0x4262a9
  4262bd:	mov    ecx,DWORD PTR [edi+0x3]
  4262c0:	sub    esp,0x1a2
  4262c6:	fld    QWORD PTR [ebx-0x320cd340]
  4262cc:	xchg   esi,eax
  4262cd:	jne    0x4262ca
  4262cf:	sub    al,BYTE PTR [eax-0x693b8108]
  4262d5:	push   eax
  4262d6:	add    BYTE PTR [eax],al
  4262d8:	add    BYTE PTR [eax-0x3a],ch
  4262db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262dc:	es enter 0xff9d,0x84
  4262e1:	xor    edx,ecx
  4262e3:	loop   0x42626b
  4262e5:	mov    ah,0x91
  4262e7:	xor    DWORD PTR [edi-0x7b775e24],eax
  4262ed:	mov    dh,0x75
  4262ef:	cwde   
  4262f0:	sti    
  4262f1:	inc    esp
  4262f2:	int    0x88
  4262f4:	test   DWORD PTR [ebx],edi
  4262f6:	adc    BYTE PTR [esi-0x6d8a5c05],0xfa
  4262fd:	sub    al,0x14
  4262ff:	cmp    DWORD PTR [ebx+esi*1-0x4b04fd6f],eax
  426306:	xchg   ebp,eax
  426307:	sar    BYTE PTR [edi+0x8c4d6b4],cl
  42630d:	repz dec edx
  42630f:	mov    ch,ah
  426311:	jo     0x4262dc
  426313:	retf   0xa54e
  426316:	nop
  426317:	mov    edx,0x401ae766
  42631c:	fadd   QWORD PTR [eax+0x70]
  42631f:	mov    WORD PTR [ebp-0x3d],ds
  426322:	daa    
  426323:	cmp    ah,dl
  426325:	push   0xffffffc3
  426327:	mov    bh,0xfb
  426329:	(bad)  
  42632a:	mov    bl,0xf1
  42632c:	aas    
  42632d:	repz sbb al,0xbb
  426330:	or     al,0x76
  426332:	jae    0x4262e3
  426334:	mov    DWORD PTR [esi],ebx
  426336:	clc    
  426337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426338:	ret    0x89b7
  42633b:	cdq    
  42633c:	test   BYTE PTR [eax],al
  42633e:	add    BYTE PTR [eax],al
  426340:	mov    bl,0xa1
  426342:	jnp    0x4262de
  426344:	repz lahf 
  426346:	(bad)  
  426347:	cli    
  426348:	es pop es
  42634a:	icebp  
  42634b:	stos   DWORD PTR es:[edi],eax
  42634c:	or     al,0x8c
  42634e:	ficomp DWORD PTR [ecx+0x7fe2c777]
  426354:	jns    0x42635d
  426356:	jmp    0xed54d75e
  42635b:	xchg   BYTE PTR [esi],ch
  42635d:	mov    bh,0x13
  42635f:	shl    DWORD PTR [esi-0x4c72b266],0x6
  426366:	pusha  
  426367:	aas    
  426368:	arpl   WORD PTR [eax-0xba76fbc],ax
  42636e:	push   0x60070cf6
  426373:	aas    
  426374:	dec    ebx
  426375:	into   
  426376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426377:	adc    ch,bh
  426379:	and    BYTE PTR [esi+0x18],ah
  42637c:	mov    cl,0x88
  42637e:	sbb    eax,0x6046f710
  426383:	aas    
  426384:	sub    ecx,DWORD PTR [edx+0x446ffff2]
  42638a:	push   ebp
  42638b:	lea    ebp,[eax]
  42638d:	and    dl,0xab
  426390:	test   BYTE PTR [ebx],ch
  426392:	jmp    0x556e2d9a
  426397:	adc    bl,cl
  426399:	jge    0x426347
  42639b:	mov    ebx,0x44521b8b
  4263a0:	repz push ds
  4263a2:	xchg   esp,ebx
  4263a4:	add    BYTE PTR [eax],al
  4263a6:	add    BYTE PTR [esi],ah
  4263a8:	pop    es
  4263a9:	xchg   esi,eax
  4263aa:	cwde   
  4263ab:	and    ecx,DWORD PTR [edx-0x3cabf847]
  4263b1:	stc    
  4263b2:	shl    DWORD PTR [esi],0xfe
  4263b5:	out    0x7e,eax
  4263b7:	mov    bl,0x13
  4263b9:	out    0x8b,al
  4263bb:	push   ds
  4263bc:	(bad)  
  4263bd:	jae    0x4263ce
  4263bf:	mov    ds:0xa899d39e,eax
  4263c4:	mov    DWORD PTR [eax],eax
  4263c6:	(bad)  
  4263c7:	in     al,0xb2
  4263c9:	dec    eax
  4263ca:	jne    0x4263c3
  4263cc:	ds jne 0x4263c0
  4263cf:	jnp    0x4263e4
  4263d1:	fcom   st(1)
  4263d3:	mov    ecx,0xa9d6fa27
  4263d8:	sub    dl,al
  4263da:	push   ebp
  4263db:	call   0x5bdbd96d
  4263e0:	repz pop ebx
  4263e2:	(bad)  [eax-0x9d379fa]
  4263e8:	mov    eax,ds:0xb6ed5c29
  4263ed:	call   0xfbcfe185
  4263f2:	jb     0x426401
  4263f4:	mov    bl,0x48
  4263f6:	sbb    eax,0xe1753eee
  4263fb:	pop    ebx
  4263fc:	adc    ebx,eax
  4263fe:	xchg   ecx,eax
  4263ff:	mov    ebp,0x497efa27
  426404:	sub    dl,al
  426406:	std    
  426407:	stc    
  426408:	lea    esi,[ebp-0x67]
  42640b:	add    BYTE PTR [eax],al
  42640d:	add    BYTE PTR [ebx-0xd],bh
  426410:	pop    ebx
  426411:	sti    
  426412:	mov    al,0x6
  426414:	cs sub edx,ecx
  426417:	xor    ecx,ecx
  426419:	sub    eax,DWORD PTR [ecx+ecx*4]
  42641c:	push   ebp
  42641d:	(bad)  
  42641e:	in     al,dx
  42641f:	loop   0x426428
  426421:	jb     0x426415
  426423:	xor    eax,0x378b2f87
  426428:	add    al,0x6c
  42642a:	mov    al,0x12
  42642c:	add    eax,0xe78cab6a
  426431:	test   DWORD PTR [esi],0x96114b89
  426437:	sbb    eax,0x8f7716fa
  42643c:	test   DWORD PTR [esi],ecx
  42643e:	in     al,dx
  42643f:	mul    bh
  426441:	add    BYTE PTR [esp+esi*8-0x3be9000b],dl
  426448:	je     0x426451
  42644a:	adc    DWORD PTR [esi],eax
  42644c:	or     esi,0xffffff8d
  42644f:	aad    0x7
  426451:	or     DWORD PTR [ebp+0x170a7470],0x70
  426458:	je     0x426460
  42645a:	lds    ebx,FWORD PTR [edx+0x7c]
  42645d:	xchg   edx,eax
  42645e:	mov    al,BYTE PTR [ebx+eax*4]
  426461:	push   es
  426462:	and    BYTE PTR [edx],al
  426464:	or     esi,0xffffffad
  426467:	xchg   ebx,eax
  426468:	push   esi
  426469:	xor    ebx,DWORD PTR [edx+0x4a04b9d1]
  42646f:	xlat   BYTE PTR ds:[ebx]
  426470:	sub    ah,0x0
  426473:	add    BYTE PTR [eax],al
  426475:	sbb    ebx,eax
  426477:	cmp    al,0xd7
  42647a:	js     0x4264f1
  42647c:	add    al,0x28
  42647e:	(bad)
  426482:	outs   dx,DWORD PTR ds:[esi]
  426483:	je     0x426499
  426485:	loopne 0x426489
  426487:	dec    esi
  426488:	push   0x3dae79
  42648d:	lock add ch,al
  426490:	pop    ebp
  426491:	add    DWORD PTR [ebx],eax
  426493:	add    BYTE PTR [eax+0x13e37147],cl
  426499:	inc    esp
  42649a:	(bad)  
  42649c:	cmp    eax,0x620458
  4264a1:	mov    dl,0x1a
  4264a3:	pop    ebx
  4264a4:	jmp    FWORD PTR [ebp+0x470fc085]
  4264aa:	inc    esi
  4264ab:	test   DWORD PTR [eax+0x7500709f],0x69fe7cd2
  4264b5:	retf   
  4264b6:	jl     0x42647e
  4264b8:	dec    edx
  4264ba:	jge    0x426501
  4264bc:	push   ebx
  4264be:	push   eax
  4264bf:	int3   
  4264c0:	mov    edi,0x81a82526
  4264c5:	(bad)  
  4264c6:	or     ebp,edi
  4264c8:	jmp    FWORD PTR [esp+ebp*2-0x3589acd3]
  4264cf:	arpl   bp,di
  4264d1:	pushf  
  4264d2:	cwde   
  4264d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264d4:	xchg   esi,eax
  4264d5:	dec    ebp
  4264d6:	mov    al,ds:0xfb92
  4264db:	add    BYTE PTR [esi],al
  4264dd:	call   0x810:0xb0797d86
  4264e4:	jb     0x426496
  4264e6:	into   
  4264e7:	cwde   
  4264e8:	loop   0x4264aa
  4264ea:	mov    WORD PTR [ebp+0x67],?
  4264ed:	mov    ch,0xda
  4264ef:	pusha  
  4264f0:	gs push eax
  4264f2:	into   
  4264f3:	(bad)  
  4264f4:	push   0xffffffe2
  4264f6:	fwait
  4264f7:	aaa    
  4264f8:	xor    cl,ch
  4264fa:	and    ebx,edi
  4264fc:	(bad)  
  4264fd:	cdq    
  4264fe:	das    
  4264ff:	xchg   DWORD PTR ds:0x3ca90285,ebp
  426505:	js     0x426530
  426507:	adc    al,0x66
  426509:	sbb    dh,BYTE PTR [ecx]
  42650b:	sti    
  42650c:	sub    al,0x8
  42650e:	das    
  42650f:	dec    edi
  426510:	jbe    0x42649c
  426512:	push   edi
  426513:	jg     0x426540
  426515:	sbb    BYTE PTR [edi-0x6de0862d],ah
  42651b:	test   DWORD PTR [ebx],esi
  42651d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42651e:	clc    
  42651f:	xchg   BYTE PTR ds:0x4d88274d,ch
  426525:	pop    esp
  426526:	dec    DWORD PTR [esi+ebp*2-0x130469db]
  42652d:	mov    al,ds:0x704be6a7
  426532:	inc    DWORD PTR [ebx+esi*4+0x19c07065]
  426539:	pop    es
  42653a:	es adc dl,bh
  42653d:	cmp    DWORD PTR [ecx],ebp
  42653f:	sbb    eax,0x7a000000
  426544:	mov    WORD PTR [ecx-0x66],?
  426547:	mov    eax,0x5b805c86
  42654c:	add    BYTE PTR [edx],0x96
  42654f:	inc    ebx
  426550:	xchg   ah,dl
  426552:	jae    0x426548
  426554:	(bad)  
  426555:	call   0x74d65583
  42655a:	mov    ds:0x4d716f3b,eax
  42655f:	mov    BYTE PTR [esi+0x4dec3771],al
  426565:	sub    al,0x98
  426567:	repnz push es
  426569:	jmp    0x8064f171
  42656e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42656f:	repnz push es
  426571:	jmp    0xb4e9d3fc
  426576:	xchg   ebp,eax
  426577:	pop    eax
  426578:	(bad)  
  426579:	rol    DWORD PTR [ebx-0x56],1
  42657c:	sti    
  42657d:	sahf   
  42657e:	ror    BYTE PTR [eax+esi*2+0x6f304bc],cl
  426585:	pop    esi
  426586:	pop    ss
  426587:	inc    edi
  426588:	fimul  WORD PTR [ecx+0x2c94370f]
  42658e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42658f:	ret    
  426590:	lock aam 0x38
  426593:	jbe    0x426599
  426595:	pop    ecx
  426596:	lods   al,BYTE PTR ds:[esi]
  426597:	and    ch,BYTE PTR [edx+0x4a94956b]
  42659d:	cmc    
  42659e:	or     BYTE PTR [ebx],0x86
  4265a1:	jmp    0x3:0xe907697f
  4265a8:	add    BYTE PTR [eax],al
  4265aa:	je     0x4265fa
  4265ac:	mov    ecx,0x3e9f6e86
  4265b1:	xchg   ebp,eax
  4265b2:	call   0x83c1d18d
  4265b7:	jg     0x4265b9
  4265b9:	ss xchg dh,dl
  4265bc:	out    0xc5,eax
  4265be:	sbb    BYTE PTR [edi],al
  4265c0:	add    BYTE PTR [edi+esi*4+0x11],ch
  4265c4:	test   BYTE PTR [ecx-0x11],ch
  4265c7:	push   es
  4265c8:	add    dl,bl
  4265ca:	jnp    0x4265a1
  4265cc:	addr16 imul ebp,edi,0xf1930006
  4265d3:	aad    0x4e
  4265d5:	xchg   ecx,eax
  4265d6:	lock push es
  4265d8:	add    BYTE PTR [ecx],ch
  4265da:	je     0x426567
  4265dc:	nop
  4265dd:	lock jg 0x426561
  4265e0:	push   eax
  4265e1:	out    0x9d,al
  4265e3:	xor    eax,0x8def290e
  4265e8:	lock push 0x66
  4265eb:	xor    DWORD PTR [ebp-0x10],0xd8181b5f
  4265f2:	mov    al,0x6
  4265f4:	jg     0x4265b7
  4265f6:	and    ah,bh
  4265f8:	dec    edi
  4265f9:	mov    dh,0x1d
  4265fb:	add    DWORD PTR [ecx-0x9184d4],0xffffffe8
  426602:	lock hlt 
  426604:	adc    DWORD PTR [edx-0x1a82724e],0x3
  42660b:	xchg   esp,eax
  42660c:	inc    ebp
  42660d:	lea    eax,[eax]
  42660f:	add    BYTE PTR [eax],al
  426611:	add    dl,bl
  426613:	cli    
  426614:	cld    
  426615:	mov    al,bl
  426617:	cli    
  426618:	aam    0x3c
  42661a:	adc    eax,DWORD PTR [eax-0x17]
  42661d:	popf   
  42661e:	inc    esi
  42661f:	je     0x426601
  426621:	push   esi
  426622:	retf   
  426623:	push   es
  426624:	call   0xd63e6852
  426629:	repz mov ds,WORD PTR [ebp-0x1e]
  42662d:	into   
  42662e:	adc    DWORD PTR ds:0x4502fd,0x159b8c00
  426638:	mov    al,ds:0x37ffc8c8
  42663d:	xchg   DWORD PTR [edi],ecx
  42663f:	jne    0x42664d
  426641:	aaa    
  426642:	add    eax,0x9b15f990
  426647:	push   eax
  426648:	call   0x38b5e4
  42664d:	in     eax,0x14
  42664f:	clc    
  426650:	call   0x38a1bd
  426655:	xor    ebp,DWORD PTR [edx-0x7265ffff]
  42665b:	test   DWORD PTR [eax-0x39086759],esp
  426661:	mov    cl,BYTE PTR [eax]
  426663:	inc    eax
  426664:	dec    ecx
  426665:	das    
  426666:	xchg   edx,eax
  426667:	add    BYTE PTR [ebp-0x7f],0x39
  42666b:	push   esi
  42666c:	pop    ebx
  42666d:	push   ebx
  42666e:	dec    ebp
  42666f:	or     BYTE PTR [eax],al
  426671:	mov    edi,0x81ec03
  426676:	add    BYTE PTR [eax],al
  426678:	inc    esi
  426679:	mov    ebx,0x3d5a0008
  42667e:	dec    esi
  42667f:	push   edi
  426680:	xlat   BYTE PTR ds:[ebx]
  426681:	fst    QWORD PTR [ebx-0x17677a03]
  426687:	stc    
  426688:	mov    esi,0x3e6af797
  42668d:	xor    eax,0xd0cf8d4b
  426692:	idiv   bh
  426694:	cmp    esp,DWORD PTR gs:[edx+0x0]
  426698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426699:	sbb    eax,0x986283ac
  42669e:	call   0xf7db2a01
  4266a3:	test   DWORD PTR [edx+0x19],ecx
  4266a6:	sbb    eax,0x683adc8b
  4266ab:	mov    BYTE PTR [esp+ecx*8-0x1],dh
  4266af:	mov    ebx,?
  4266b1:	bnd jg 0x4266ab
  4266b4:	hlt    
  4266b5:	aam    0x33
  4266b7:	call   0x420c1e
  4266bc:	outs   dx,BYTE PTR ds:[esi]
  4266bd:	sub    eax,0xf1b394ff
  4266c2:	ret    
  4266c3:	jne    0x4266af
  4266c5:	cmp    BYTE PTR [edi+0x7ff27a62],0xf7
  4266cc:	les    esp,FWORD PTR [ecx+eax*4]
  4266cf:	test   DWORD PTR [edi+0x18],ebp
  4266d2:	(bad)  
  4266d3:	sti    
  4266d4:	and    edx,DWORD PTR ds:0xae008ff9
  4266da:	inc    DWORD PTR [esi+0x66000000]
  4266e0:	add    ecx,DWORD PTR [esi-0x8786305]
  4266e6:	mov    WORD PTR [esi],ds
  4266e8:	sbb    ch,BYTE PTR [eax+ebp*8]
  4266eb:	cli    
  4266ec:	mov    ds:0x5c72fb8e,eax
  4266f1:	rcr    BYTE PTR [eax-0x78c9a31e],cl
  4266f7:	lods   eax,DWORD PTR ds:[esi]
  4266f8:	cmp    eax,0x55777d81
  4266fd:	ins    DWORD PTR es:[edi],dx
  4266fe:	sahf   
  4266ff:	les    ebp,FWORD PTR gs:[ecx+ebx*2]
  426703:	jo     0x4266ba
  426705:	mov    cs,WORD PTR [ebx]
  426707:	outs   dx,DWORD PTR ds:[esi]
  426708:	cmp    al,0x5
  42670a:	add    bl,dh
  42670c:	clc    
  42670d:	lds    edx,FWORD PTR [eax+0x76]
  426710:	jmp    0x8d2f:0x9c3cf77a
  426717:	outs   dx,BYTE PTR ds:[esi]
  426718:	jmp    0x1d6f62a8
  42671d:	pushf  
  42671e:	or     bh,BYTE PTR [ebp+ebp*2+0x6c3384ff]
  426725:	sbb    DWORD PTR [ecx-0xe],0x6d
  426729:	dec    DWORD PTR [esi+esi*2+0x89b1d06]
  426730:	cmp    DWORD PTR [ecx+0x508a7680],0xffffff92
  426737:	clc    
  426738:	aad    0x49
  42673a:	clc    
  42673b:	je     0x426755
  42673d:	test   eax,0x34ec6403
  426742:	add    eax,DWORD PTR [eax]
  426744:	add    BYTE PTR [eax],al
  426746:	push   0xffffffcc
  426748:	cmp    BYTE PTR [esi-0x78257d25],al
  42674e:	jmp    0x4446505a
  426753:	aam    0x20
  426755:	xchg   edx,eax
  426756:	outs   dx,BYTE PTR ds:[esi]
  426757:	mov    WORD PTR [ecx-0x467d4766],cs
  42675d:	xor    BYTE PTR [esi-0x6d],0xfe
  426761:	xchg   ecx,eax
  426762:	test   al,0xd7
  426764:	imul   ecx,DWORD PTR [eax-0x6e0d7f89],0x43
  42676b:	outs   dx,DWORD PTR ds:[esi]
  42676c:	and    eax,0x6c06f339
  426771:	(bad)  
  426772:	clc    
  426773:	mov    bl,BYTE PTR [esp+eax*1-0x7bbef90d]
  42677a:	repz push es
  42677c:	jmp    0xe632d39e
  426781:	sbb    esi,ebx
  426783:	push   es
  426784:	jmp    0x6dced60c
  426789:	mov    ebx,DWORD PTR [eax-0x7e]
  42678c:	sbb    DWORD PTR [edi-0x4a],edi
  42678f:	jle    0x426722
  426791:	aad    0x32
  426793:	sbb    DWORD PTR [edx+0x6d123388],0xe906f36c
  42679d:	jle    0x426755
  42679f:	jle    0x4267ba
  4267a1:	jg     0x426741
  4267a3:	push   0xffffffb7
  4267a5:	lods   al,BYTE PTR ds:[esi]
  4267a6:	or     eax,DWORD PTR [eax+eax*1]
  4267a9:	scas   eax,DWORD PTR es:[edi]
  4267aa:	add    BYTE PTR [eax],al
  4267ac:	add    BYTE PTR [ecx-0x14567b82],al
  4267b2:	out    0x86,eax
  4267b4:	fmul   QWORD PTR [edx+ecx*4-0x3e]
  4267b8:	repnz mov ch,0x6e
  4267bb:	je     0x42677b
  4267bd:	outs   dx,DWORD PTR ds:[esi]
  4267be:	add    al,0xe8
  4267c0:	jmp    0xf1b03fd0
  4267c5:	jno    0x426843
  4267c7:	add    cl,ch
  4267c9:	push   eax
  4267ca:	pop    es
  4267cb:	jae    0x42677b
  4267cd:	push   ebp
  4267ce:	vpacksswb ymm6,ymm0,YMMWORD PTR [edi+0x35113dfa]
  4267d6:	in     al,0xf9
  4267d8:	push   ds
  4267d9:	ds jg  0x426761
  4267dc:	push   ss
  4267dd:	(bad)  ds:0x13f81785
  4267e3:	data16 sahf 
  4267e5:	sbb    DWORD PTR [ebx],0x24
  4267e8:	(bad)  [eax]
  4267ea:	pop    es
  4267eb:	jg     0x42680e
  4267ed:	sub    BYTE PTR [ecx+0x7],0x97
  4267f1:	retf   
  4267f2:	xchg   ebx,eax
  4267f3:	inc    ebp
  4267f4:	loope  0x4267b6
  4267f6:	outs   dx,BYTE PTR ds:[esi]
  4267f7:	mov    ebx,0x377d62a7
  4267fc:	scas   eax,DWORD PTR es:[edi]
  4267fd:	fucom  st(2)
  4267ff:	push   ecx
  426800:	ss in  al,dx
  426802:	mov    edx,DWORD PTR [esp+eax*8+0x5e87d83]
  426809:	leave  
  42680a:	jge    0x426807
  42680c:	bound  ebp,QWORD PTR [ebp+0xf9890e]
  426812:	add    BYTE PTR [eax],al
  426814:	leave  
  426815:	add    esi,esp
  426817:	pop    edx
  426818:	icebp  
  426819:	jge    0x426890
  42681b:	mov    eax,ds:0xfba01b63
  426820:	mov    al,0x6
  426822:	jg     0x426840
  426824:	jg     0x4268a3
  426826:	test   BYTE PTR [eax],al
  426828:	push   ecx
  426829:	sbb    DWORD PTR [ecx*4-0x67669],ecx
  426830:	popf   
  426831:	xor    eax,0x975376e8
  426836:	test   DWORD PTR [ebx+0x7500990f],0xf84501e0
  426840:	mov    dl,0xd
  426842:	(bad)  
  426845:	add    DWORD PTR [ebp-0x868dacc],eax
  42684b:	push   eax
  42684c:	sbb    eax,0xb7fff019
  426851:	hlt    
  426852:	adc    BYTE PTR [eax-0x26],al
  426855:	mov    eax,eax
  426857:	xorps  xmm2,XMMWORD PTR [ecx-0x5d22000a]
  42685e:	adc    BYTE PTR [edi-0xe],dl
  426861:	sub    BYTE PTR [ebp-0x2],bl
  426864:	std    
  426865:	mov    ds:0x8c578dab,al
  42686a:	call   0xf7d83fbd
  42686f:	call   DWORD PTR [edi]
  426871:	xchg   esp,eax
  426872:	not    DWORD PTR ds:0x3b752e
  426878:	add    BYTE PTR [eax],al
  42687a:	add    BYTE PTR [ebx-0x5f],dl
  42687d:	add    DWORD PTR [eax],eax
  42687f:	mov    al,BYTE PTR [edi-0x6f606b7b]
  426885:	test   esi,0x4940045a
  42688b:	daa    
  42688c:	xchg   edx,eax
  42688d:	add    DWORD PTR [ebp-0x5a],0xffffff9c
  426891:	adc    al,0xb9
  426893:	sub    al,0xa
  426895:	add    BYTE PTR [eax],al
  426897:	scas   eax,DWORD PTR es:[edi]
  426898:	lea    edx,[ebp+edi*8+0xbe908d]
  42689f:	dec    edx
  4268a0:	les    ecx,FWORD PTR [eax+0x75]
  4268a3:	repz xchg esi,eax
  4268a5:	iret   
  4268a6:	mov    edi,0xc9272fcc
  4268ab:	xor    DWORD PTR [edx-0x1],esi
  4268ae:	push   esp
  4268af:	push   0xffec8592
  4268b4:	imul   edi,edi,0xffffffff
  4268b7:	jo     0x4268dc
  4268b9:	mov    ebx,?
  4268bb:	mov    al,ds:0x89d6d1bf
  4268c0:	imul   eax,DWORD PTR [eax-0x7524f87b],0x18d143fb
  4268ca:	or     BYTE PTR [ecx+0x70],bl
  4268cd:	daa    
  4268ce:	call   0x41d0db
  4268d3:	data16 repnz lahf 
  4268d6:	std    
  4268d7:	int3   
  4268d8:	xor    BYTE PTR [ebx+edi*8],dh
  4268db:	ds jp  0x426868
  4268de:	jne    0x4268e0
  4268e0:	add    BYTE PTR [eax],al
  4268e2:	fist   DWORD PTR ds:0x6df35527
  4268e8:	jbe    0x4268da
  4268ea:	jbe    0x426903
  4268ec:	sbb    BYTE PTR [edi],bh
  4268ee:	jo     0x42687a
  4268f0:	out    dx,eax
  4268f1:	jmp    DWORD PTR [eax]
  4268f3:	pop    esi
  4268f4:	mov    dh,BYTE PTR [ebp+0x3]
  4268f7:	jns    0x426911
  4268f9:	sbb    BYTE PTR [edx+ebx*2+0x6e330f83],cl
  426900:	mov    al,al
  426902:	pop    es
  426903:	sbb    cl,BYTE PTR [ebx+0x47eadf75]
  426909:	clc    
  42690a:	fldcw  WORD PTR [esi+0x19]
  42690d:	add    bl,bl
  42690f:	ins    DWORD PTR es:[edi],dx
  426910:	(bad)  
  426911:	push   DWORD PTR [ebx]
  426913:	rcr    BYTE PTR [eax],0x18
  426916:	dec    ebx
  426917:	stc    
  426918:	ret    0x4cfa
  42691b:	jmp    0x72adede
  426920:	mov    ds:0x2915e4f8,al
  426925:	add    al,0xb4
  426927:	jle    0x426962
  426929:	sbb    al,dh
  42692b:	inc    ecx
  42692c:	push   edx
  42692d:	add    esi,ebx
  42692f:	push   es
  426930:	cld    
  426931:	push   es
  426932:	sbb    DWORD PTR [ebx+0x69],eax
  426935:	mov    cl,BYTE PTR [edi+0x2d25ef4]
  42693b:	xchg   ecx,eax
  42693c:	and    al,0x8c
  42693e:	sbb    eax,DWORD PTR [ebp+ebp*1+0x238af88d]
  426945:	sub    eax,0x9c000000
  42694a:	dec    ebp
  42694b:	daa    
  42694c:	imul   esp
  42694e:	rcr    DWORD PTR [ebp-0x61],cl
  426951:	inc    edx
  426952:	fmul   st,st(6)
  426954:	add    ebx,DWORD PTR [ebx-0x2b030102]
  42695a:	xchg   di,ax
  42695c:	or     bl,dh
  42695e:	push   es
  42695f:	jo     0x4268fc
  426961:	les    edi,FWORD PTR [esi-0x17]
  426964:	jp     0x426908
  426966:	jbe    0x42696f
  426968:	jl     0x426998
  42696a:	jg     0x4269eb
  42696c:	add    esi,DWORD PTR [eax+ecx*2+0x60]
  426970:	cmp    BYTE PTR [edi-0xcf74091],ah
  426976:	push   es
  426977:	mov    dh,0xbc
  426979:	xchg   esp,eax
  42697a:	ret    
  42697b:	lock sbb bl,dh
  42697e:	sbb    DWORD PTR [edi+ecx*4+0x40a171b],ebx
  426985:	repz xlat BYTE PTR ds:[ebx]
  426987:	cmp    BYTE PTR [ecx+ebx*8+0x6c03e9bc],bl
  42698e:	add    eax,0x8fef34f6
  426993:	jmp    0x426a0f
  426995:	rol    DWORD PTR [edx],0xb0
  426998:	shr    DWORD PTR [ebx+eax*8-0x1],0xc
  42699d:	inc    edi
  42699e:	xor    eax,0xf9470544
  4269a3:	adc    BYTE PTR [ebx],bl
  4269a5:	cmp    DWORD PTR [ebp+0x3534c544],eax
  4269ab:	inc    esp
  4269ac:	int    0x0
  4269ae:	add    BYTE PTR [eax],al
  4269b0:	hlt    
  4269b1:	stc    
  4269b2:	add    al,0xda
  4269b4:	xor    bh,al
  4269b6:	out    0xeb,al
  4269b8:	inc    ebx
  4269b9:	mov    esi,0xd3f0d9be
  4269be:	xchg   BYTE PTR [ebp+0x1a306b72],al
  4269c4:	mov    ebp,0x44ac8cd9
  4269c9:	xlat   BYTE PTR ds:[ebx]
  4269ca:	mov    WORD PTR [esp+ecx*2-0x73537329],fs
  4269d1:	(bad)  
  4269d2:	xchg   BYTE PTR [eax+ebp*8+0x7f255d8a],ah
  4269d9:	ss ret 0x663f
  4269dd:	add    al,0xe6
  4269e0:	je     0x426a5d
  4269e2:	add    cl,ch
  4269e4:	lock test DWORD PTR [ebp-0xb],eax
  4269e8:	cmp    ebx,DWORD PTR [edi]
  4269ea:	xchg   DWORD PTR [ecx+0x62c385ec],esp
  4269f0:	xor    BYTE PTR [eax+eax*1-0x46d1b357],0x69
  4269f8:	hlt    
  4269f9:	push   es
  4269fa:	add    al,al
  4269fc:	sub    eax,0xe7d36e77
  426a01:	add    edi,DWORD PTR [ecx]
  426a03:	je     0x426a69
  426a05:	in     al,dx
  426a06:	push   cs
  426a07:	out    0xe5,al
  426a09:	jbe    0x426a0a
  426a0b:	fisub  DWORD PTR [edi-0xd]
  426a0e:	jmp    0x426a0a
  426a10:	xor    esi,edx
  426a12:	push   ecx
  426a13:	rol    DWORD PTR [eax],0x0
  426a16:	add    BYTE PTR [ebp-0x7f],ch
  426a19:	sti    
  426a1a:	add    BYTE PTR ds:0x8a31fa9e,dh
  426a20:	test   eax,eax
  426a22:	pmaxub mm7,mm4
  426a25:	(bad)  
  426a26:	call   FWORD PTR [edx-0x2]
  426a29:	mov    esi,0x4450598b
  426a2e:	call   0x5b0db0b
  426a33:	inc    ebx
  426a34:	adc    al,0xe4
  426a36:	jb     0x426a61
  426a38:	mov    dh,BYTE PTR [ebp-0x18]
  426a3b:	or     DWORD PTR [edi+0x766e75f7],edx
  426a41:	rcl    BYTE PTR [eax-0x14],0x9a
  426a45:	pop    eax
  426a46:	call   DWORD PTR [ebp-0x27fd1c76]
  426a4c:	inc    edx
  426a4d:	test   al,al
  426a4f:	push   ds
  426a50:	and    eax,0x9751c783
  426a55:	cmp    DWORD PTR [ebp+0x3a],eax
  426a58:	push   ss
  426a59:	adc    dh,BYTE PTR [edi-0x31]
  426a5c:	push   ecx
  426a5d:	je     0x426a3b
  426a5f:	cwde   
  426a60:	ja     0x426a58
  426a62:	jne    0x426a9e
  426a64:	pop    es
  426a65:	jmp    0x7ac1:0xbac7fff
  426a6c:	xor    ch,al
  426a6e:	das    
  426a6f:	aad    0x8a
  426a71:	imul   ebx
  426a73:	cwde   
  426a74:	push   esi
  426a75:	mov    ebx,0x3313da84
  426a7a:	mov    eax,DWORD PTR [eax]
  426a7c:	add    BYTE PTR [eax],al
  426a7e:	int    0xfe
  426a80:	jmp    0xd1a:0x6ab04f39
  426a87:	add    eax,0x15de7539
  426a8c:	or     edi,edi
  426a8e:	pop    ds
  426a8f:	stos   DWORD PTR es:[edi],eax
  426a90:	sti    
  426a91:	icebp  
  426a92:	xchg   ebp,eax
  426a93:	push   ss
  426a94:	aam    0x13
  426a96:	repz scas al,BYTE PTR es:[edi]
  426a98:	xor    al,0x52
  426a9a:	pop    ebx
  426a9b:	fs xchg bl,bh
  426a9e:	pop    esp
  426a9f:	pop    ecx
  426aa0:	add    ch,BYTE PTR [esi]
  426aa2:	xor    esp,edx
  426aa4:	ret    
  426aa5:	je     0x426a88
  426aa7:	call   0xaeb07aec
  426aac:	adc    BYTE PTR [ebx],al
  426aae:	jo     0x426b26
  426ab0:	xchg   BYTE PTR [edi-0x55],bh
  426ab3:	popa   
  426ab4:	xchg   BYTE PTR [eax-0x792a770e],dh
  426aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426abb:	pop    ecx
  426abc:	js     0x426b33
  426abe:	daa    
  426abf:	xchg   esi,eax
  426ac0:	outs   dx,BYTE PTR ds:[esi]
  426ac1:	cli    
  426ac2:	adc    al,0xfd
  426ac4:	cmp    BYTE PTR [ebp-0x1d],0x6d
  426ac8:	or     edx,DWORD PTR [ecx]
  426aca:	cdq    
  426acb:	gs jp  0x426a90
  426ace:	mov    ds:0xf41010e4,eax
  426ad3:	jb     0x426aa4
  426ad5:	adc    DWORD PTR [ebx],esi
  426ad7:	outs   dx,BYTE PTR ds:[esi]
  426ad8:	add    ah,0xf7
  426adb:	call   0xaab07308
  426ae0:	mov    edx,DWORD PTR [eax+0x0]
  426ae3:	add    BYTE PTR [eax],al
  426ae5:	inc    ebx
  426ae6:	sahf   
  426ae7:	das    
  426ae8:	call   0xfbc896fa
  426aed:	and    al,0x8c
  426aef:	sub    cl,cl
  426af1:	mov    cl,0x71
  426af3:	call   DWORD PTR [eax+ebp*2+0x9]
  426af7:	test   esp,ebp
  426af9:	or     esi,DWORD PTR [eax-0x1]
  426afc:	inc    DWORD PTR [eax-0x4c]
  426aff:	cs sti 
  426b01:	es jb  0x426b7c
  426b04:	test   DWORD PTR [edi-0x73047986],eax
  426b0a:	cli    
  426b0b:	test   BYTE PTR [edi-0x65],0xa1
  426b0f:	xor    al,BYTE PTR [eax]
  426b11:	repz push es
  426b13:	outs   dx,BYTE PTR ds:[esi]
  426b14:	xchg   ebx,eax
  426b15:	outs   dx,BYTE PTR ds:[esi]
  426b16:	je     0x426b02
  426b18:	jg     0x426b4a
  426b1a:	push   es
  426b1b:	jmp    0xbca3c23
  426b20:	add    al,0xe8
  426b22:	add    BYTE PTR [ebx+eax*1+0x386606f3],0xff
  426b2a:	jnp    0x426b22
  426b2c:	mov    ch,BYTE PTR [esi+0x7b]
  426b2f:	xor    al,0xf5
  426b31:	outs   dx,DWORD PTR ds:[esi]
  426b32:	adc    DWORD PTR [ebp+0x397b3888],0xf68f068b
  426b3c:	inc    ebx
  426b3d:	repz sub DWORD PTR [ecx-0x164109f1],0x1908f303
  426b48:	push   ds
  426b49:	add    BYTE PTR [eax],al
  426b4b:	add    BYTE PTR [ebp*8+0x6f31be9],cl
  426b52:	jmp    0x55c3d99a
  426b57:	mov    al,bh
  426b59:	jp     0x426b14
  426b5b:	js     0x426b93
  426b5d:	or     eax,DWORD PTR [ecx+0x7e]
  426b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b61:	jns    0x426bad
  426b63:	jg     0x426b18
  426b65:	repz sar BYTE PTR [eax+0x2e],0x73
  426b6a:	cdq    
  426b6b:	or     al,0xf4
  426b6e:	add    DWORD PTR [ebx+0x405c173e],ecx
  426b74:	out    dx,eax
  426b75:	(bad)  
  426b76:	adc    BYTE PTR [ecx+edi*4],dh
  426b79:	jp     0x426b95
  426b7b:	jg     0x426b30
  426b7d:	xrelease mov BYTE PTR [esi+0x100a7326],al
  426b84:	aam    0x85
  426b86:	test   BYTE PTR [ebx+0x32c3f498],cl
  426b8c:	and    BYTE PTR [eax+eax*1-0x5288b54],cl
  426b93:	je     0x426b19
  426b95:	jge    0x426bac
  426b97:	or     DWORD PTR [ebp+0x3a],edi
  426b9a:	add    BYTE PTR [edi+esi*1+0x62],ah
  426b9e:	adc    BYTE PTR [esp+0x73],ah
  426ba2:	push   eax
  426ba3:	cmp    DWORD PTR [edi],esp
  426ba5:	mov    WORD PTR [ebp-0xb],ds
  426ba8:	js     0x426ba4
  426baa:	les    edi,FWORD PTR [edi+0x3dc0837a]
  426bb0:	add    BYTE PTR [eax],al
  426bb2:	add    BYTE PTR [edx],ch
  426bb4:	jge    0x426c2b
  426bb6:	(bad)  [ebx+0x14]
  426bb9:	mov    al,ds:0x7f06b0fb
  426bbe:	sub    al,0x2b
  426bc0:	jge    0x426c14
  426bc2:	cs jp  0x426bd9
  426bc5:	nop
  426bc6:	cli    
  426bc7:	mov    al,0x6
  426bc9:	test   DWORD PTR [ecx+0x6a620103],ebp
  426bcf:	cmp    DWORD PTR [edx+0xa],edi
  426bd2:	ins    BYTE PTR es:[edi],dx
  426bd3:	int3   
  426bd4:	jge    0x426bd1
  426bd6:	outs   dx,BYTE PTR ds:[esi]
  426bd7:	test   bl,al
  426bd9:	or     edx,DWORD PTR [ecx-0x11]
  426bdc:	mov    eax,0x8475efa
  426be1:	out    0xe3,eax
  426be3:	pop    ebp
  426be4:	les    ecx,FWORD PTR [ebx]
  426be6:	inc    ecx
  426be7:	add    DWORD PTR [edi-0x6],0x46
  426beb:	mov    ebp,0x1f9f5bb9
  426bf0:	push   eax
  426bf1:	mov    esi,0x4981f0e5
  426bf6:	sar    DWORD PTR [edi],1
  426bf8:	or     bl,bh
  426bfa:	stc    
  426bfb:	lahf   
  426bfc:	dec    esi
  426bfd:	test   BYTE PTR [ecx],ch
  426bff:	stos   BYTE PTR es:[edi],al
  426c00:	xchg   edx,eax
  426c01:	shl    DWORD PTR [eax+esi*1+0x7e],0xbf
  426c06:	push   cs
  426c07:	add    esp,DWORD PTR [ebx]
  426c09:	add    al,0x0
  426c0b:	and    DWORD PTR [esi],edi
  426c0d:	sbb    BYTE PTR [ebx+0x50f7339b],cl
  426c13:	xchg   esi,eax
  426c14:	push   edx
  426c15:	enter  0x84,0x0
  426c19:	add    dl,cl
  426c1b:	jg     0x426bb1
  426c1d:	sar    edi,0xc4
  426c20:	test   dl,0x56
  426c23:	add    eax,0x6f674f7
  426c28:	or     DWORD PTR [ecx+0x62],0xfffffffa
  426c2c:	add    BYTE PTR [edx+0x2d],dl
  426c2f:	xor    eax,0xf9833308
  426c34:	mov    edi,0x8d44a70f
  426c39:	inc    ecx
  426c3a:	lea    eax,[ebx+0x4]
  426c3d:	add    BYTE PTR [ebp-0x5efbdbf7],cl
  426c43:	cmp    al,0x18
  426c45:	mov    ebx,DWORD PTR [ebx]
  426c47:	xor    esi,edi
  426c49:	push   eax
  426c4a:	ds push edx
  426c4c:	enter  0x4a84,0x7e
  426c50:	xchg   esp,eax
  426c51:	rcr    DWORD PTR [edi+0x16c2f6c4],0x5
  426c58:	or     DWORD PTR [ecx+0x22],0xfffffffa
  426c5c:	add    bh,bh
  426c5e:	cmp    dh,BYTE PTR [ebp+0x2a]
  426c61:	leave  
  426c62:	push   esi
  426c63:	inc    esp
  426c64:	pop    es
  426c65:	xchg   ebp,eax
  426c66:	sbb    esi,ecx
  426c68:	inc    eax
  426c69:	dec    DWORD PTR [ecx]
  426c6b:	(bad)  
  426c6c:	je     0x426c92
  426c6e:	(bad)  
  426c6f:	sti    
  426c70:	dec    eax
  426c71:	sbb    BYTE PTR [ecx+0x5],al
  426c74:	dec    edx
  426c75:	jmp    FWORD PTR [edx+0x68]
  426c78:	sub    cl,cl
  426c7a:	push   esi
  426c7b:	inc    esp
  426c7c:	pop    es
  426c7d:	xchg   ebp,eax
  426c7e:	add    BYTE PTR [eax],al
  426c80:	add    BYTE PTR [ebx],cl
  426c82:	icebp  
  426c83:	inc    eax
  426c84:	(bad)  
  426c85:	fdiv   DWORD PTR [edi-0x5]
  426c88:	mov    dh,bl
  426c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c8b:	out    0x86,eax
  426c8d:	repnz or BYTE PTR [edi],ch
  426c90:	sbb    al,ah
  426c92:	ss jnp 0x426c55
  426c95:	cld    
  426c96:	sar    BYTE PTR [ebp-0x408ecd73],cl
  426c9c:	push   edx
  426c9d:	and    ebx,ebx
  426c9f:	movups xmm5,XMMWORD PTR [ecx+ebp*2+0x6db38703]
  426ca7:	jl     0x426cec
  426ca9:	sti    
  426caa:	inc    ebp
  426cab:	jne    0x426d21
  426cad:	rep ins DWORD PTR es:[edi],dx
  426caf:	jl     0x426d2c
  426cb1:	or     ebp,DWORD PTR [ecx+0x22c1303b]
  426cb7:	add    BYTE PTR ds:[ecx+ebp*1],ch
  426cbb:	rol    BYTE PTR [ebx-0x3cfbd44a],1
  426cc1:	lods   al,BYTE PTR ds:[esi]
  426cc2:	gs gs inc ebp
  426cc5:	mov    cl,0x6d
  426cc7:	mov    edx,0x40d5e743
  426ccc:	repz mov al,ds:0x2b41403b
  426cd3:	add    BYTE PTR ds:[ecx+eiz*1],dh
  426cd7:	inc    eax
  426cd8:	in     eax,0xae
  426cda:	sub    eax,DWORD PTR [ebx+eax*8]
  426cdd:	mov    ah,0x25
  426cdf:	add    DWORD PTR [ebp-0x4f],0x6d
  426ce3:	jbe    0x426ca8
  426ce5:	add    BYTE PTR [eax],al
  426ce7:	add    BYTE PTR [ebp+0x2d],cl
  426cea:	mov    al,BYTE PTR [edi+ecx*1+0x6a]
  426cee:	add    al,0x52
  426cf0:	push   0x5702bade
  426cf5:	cmc    
  426cf6:	inc    ebx
  426cf7:	add    BYTE PTR [edi+0x60],al
  426cfa:	sub    eax,0x8595bce8
  426cff:	sti    
  426d00:	push   0xefbe221f
  426d05:	push   es
  426d06:	jmp    0x59865f5e
  426d0b:	add    eax,0xd2e90e65
  426d10:	stos   DWORD PTR es:[edi],eax
  426d11:	mov    ds:0x6d449f9,eax
  426d16:	test   al,0x4b
  426d18:	jecxz  0x426cd6
  426d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d1b:	add    esp,DWORD PTR [ecx]
  426d1d:	mov    ecx,ds
  426d1f:	jp     0x426cae
  426d21:	inc    ebp
  426d22:	sti    
  426d23:	in     eax,0xc5
  426d25:	je     0x426d77
  426d27:	mov    ss,esi
  426d29:	(bad)  
  426d2a:	loop   0x426d43
  426d2c:	fs jbe 0x426d8f
  426d2f:	adc    esi,edi
  426d31:	sub    DWORD PTR [ecx-0x4ac64c01],0xffffffc2
  426d38:	or     al,0x7
  426d3a:	cmp    eax,0xe5097aa5
  426d3f:	dec    ecx
  426d40:	cld    
  426d41:	push   es
  426d42:	or     eax,ebx
  426d44:	xchg   edx,eax
  426d45:	or     bl,BYTE PTR [edi+0x42]
  426d48:	repz cmp DWORD PTR [ecx],ebx
  426d4b:	add    al,BYTE PTR [eax]
  426d4d:	add    BYTE PTR [eax],al
  426d4f:	repz push es
  426d51:	loop   0x426dca
  426d53:	arpl   WORD PTR [esi],ax
  426d55:	jmp    0xb6122e5d
  426d5a:	mov    cl,0x49
  426d5c:	ja     0x426dd8
  426d5e:	xchg   BYTE PTR [eax-0x8856075],cl
  426d64:	mov    ebp,edx
  426d66:	dec    ecx
  426d67:	mov    ah,0x6
  426d69:	push   ss
  426d6a:	add    BYTE PTR [esi+0x17],bh
  426d6d:	lahf   
  426d6e:	inc    edx
  426d6f:	repz sub DWORD PTR [ebx],ebp
  426d72:	shl    al,cl
  426d74:	cmp    ecx,0x49
  426d77:	adc    al,0x7
  426d79:	outs   dx,BYTE PTR ds:[esi]
  426d7a:	mov    esp,DWORD PTR [edx-0xd6199a1]
  426d80:	cmp    DWORD PTR [eax],eax
  426d82:	in     eax,dx
  426d83:	sub    esi,DWORD PTR [edi+0x25f0aaa8]
  426d89:	add    al,0x74
  426d8b:	in     al,dx
  426d8c:	inc    esi
  426d8d:	aas    
  426d8e:	jmp    0x6446edc5
  426d93:	mov    al,ds:0x6fe93fbc
  426d98:	jge    0x426d79
  426d9a:	jmp    0x2bbe748f
  426d9f:	outs   dx,DWORD PTR ds:[esi]
  426da0:	jge    0x426e0d
  426da2:	jmp    0x426d94
  426da4:	push   es
  426da5:	jge    0x426d61
  426da7:	sti    
  426da8:	add    dl,BYTE PTR [ebp+0x35baf9]
  426dae:	jb     0x426da0
  426db0:	and    eax,0xed41
  426db5:	add    BYTE PTR [ebx+0x48],dl
  426db8:	das    
  426db9:	call   0xcec1dc99
  426dbe:	lock lea edi,[esp+edi*2]
  426dc2:	lahf   
  426dc3:	sahf   
  426dc4:	aas    
  426dc5:	jmp    0xadb71ced
  426dca:	outs   dx,BYTE PTR ds:[esi]
  426dcb:	jb     0x426d9e
  426dcd:	xchg   ecx,eax
  426dce:	inc    edx
  426dcf:	jle    0x426d5a
  426dd1:	loopne 0x426e46
  426dd3:	dec    eax
  426dd4:	add    al,0x68
  426dd6:	push   0xef2abf43
  426ddb:	repnz shl DWORD PTR [edx+0x4],cl
  426ddf:	inc    edx
  426de0:	mov    edi,0x10a7ef2a
  426de5:	xor    esi,DWORD PTR [edx+0x12a82f06]
  426deb:	dec    eax
  426dec:	das    
  426ded:	sub    BYTE PTR [edx+0x3f],ch
  426df0:	rcl    DWORD PTR [ecx+0x72],1
  426df3:	add    DWORD PTR [bp+si],ebx
  426df6:	repz xor DWORD PTR [eax+0x5b073281],0x0
  426dfe:	leave  
  426dff:	je     0x426e3c
  426e01:	rcr    BYTE PTR [ecx+0x16a35609],0x48
  426e08:	cmp    eax,DWORD PTR [eax]
  426e0a:	mov    ecx,0x1f0c8349
  426e0f:	jnp    0x426dc6
  426e11:	inc    ebx
  426e12:	call   0xffc8:0x400c9ac9
  426e19:	mov    al,BYTE PTR [eax]
  426e1b:	add    BYTE PTR [eax],al
  426e1d:	retf   
  426e1e:	dec    ecx
  426e1f:	call   0x83f3b72f
  426e24:	shr    DWORD PTR [edi-0x7ac5a824],0x48
  426e2b:	loopne 0x426e34
  426e2d:	cmp    DWORD PTR [ecx-0x11003e7d],esi
  426e33:	(bad)  
  426e34:	inc    DWORD PTR [ebp+0x48]
  426e37:	loopne 0x426e48
  426e39:	stc    
  426e3a:	mov    dl,0x83
  426e3c:	ror    DWORD PTR [ebx-0x64ccf56f],0x46
  426e43:	push   ebp
  426e44:	mov    esi,DWORD PTR [esi]
  426e46:	cmp    BYTE PTR [ecx+0x68],dl
  426e49:	pop    edx
  426e4a:	inc    esi
  426e4b:	cmp    eax,DWORD PTR [eax]
  426e4d:	test   DWORD PTR [edi+ebp*8+0x12],esp
  426e51:	fimul  DWORD PTR [edx]
  426e53:	lea    eax,[ebp+0x52]
  426e56:	cmp    edi,esi
  426e58:	adc    eax,0x3b789e
  426e5d:	(bad)
  426e61:	jne    0x426ec7
  426e63:	pop    es
  426e64:	adc    ebx,edx
  426e66:	or     ah,bl
  426e68:	add    edx,DWORD PTR [ecx-0x4c1707cc]
  426e6e:	mov    esi,edi
  426e70:	dec    DWORD PTR [edx-0x3d3c36f7]
  426e76:	mov    eax,0x5df343bb
  426e7b:	test   BYTE PTR ds:0x3f70cb,dl
  426e81:	add    BYTE PTR [eax],al
  426e83:	add    BYTE PTR [eax-0x51703e22],dh
  426e89:	mov    eax,ds:0xe920ffff
  426e8e:	loope  0x426e7f
  426e90:	loope  0x426e2f
  426e92:	call   DWORD PTR [ecx+0x44]
  426e95:	stc    
  426e96:	shr    ebx,0x1
  426e99:	sahf   
  426e9a:	push   DWORD PTR [ebp+ecx*8-0x25]
  426e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e9f:	lds    esi,FWORD PTR [eax]
  426ea1:	pop    esi
  426ea2:	sub    eax,0xc1dea4fb
  426ea7:	(bad)  
  426ea8:	scas   al,BYTE PTR es:[edi]
  426ea9:	mov    eax,ds:0x5806ffff
  426eae:	xchg   edi,eax
  426eaf:	xchg   esp,eax
  426eb0:	je     0x426f17
  426eb2:	jg     0x426e38
  426eb4:	xor    edx,edx
  426eb6:	adc    al,0xc3
  426eb8:	out    dx,al
  426eb9:	stc    
  426eba:	dec    eax
  426ebb:	aas    
  426ebc:	repz mov ecx,0xabf33dc7
  426ec2:	or     DWORD PTR [eax+0x1042136],edx
  426ec8:	popf   
  426ec9:	mov    ah,0x53
  426ecb:	mov    edx,0xffc3a123
  426ed0:	sahf   
  426ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ed2:	push   edi
  426ed3:	call   0xfbc21a80
  426ed8:	mov    ebp,0x40fb7bf8
  426edd:	jmp    0x38f7ca28
  426ee2:	inc    ebx
  426ee3:	aaa    
  426ee4:	mov    bh,0x41
  426ee6:	add    esi,DWORD PTR [edx+0x0]
  426ee9:	add    BYTE PTR [eax],al
  426eeb:	in     eax,0x58
  426eed:	ret    
  426eee:	and    esi,edi
  426ef0:	adc    eax,esp
  426ef2:	xchg   BYTE PTR [ebx],al
  426ef4:	jnp    0x426ef9
  426ef6:	das    
  426ef7:	mov    bl,0x6
  426ef9:	dec    esi
  426efa:	adc    ebx,ebx
  426efc:	jge    0x426f58
  426efe:	sbb    eax,0x37
  426f01:	aaa    
  426f02:	jnp    0x426ee5
  426f04:	jg     0x426f2d
  426f06:	pop    es
  426f07:	aaa    
  426f08:	sub    esi,ecx
  426f0a:	loope  0x426e92
  426f0c:	or     ch,cl
  426f0e:	(bad)  ds:0x10f7f07d
  426f14:	add    esi,DWORD PTR [ebx+0x5b044023]
  426f1a:	add    bh,cl
  426f1c:	sbb    dh,BYTE PTR [edx-0x16f96745]
  426f22:	add    ecx,DWORD PTR [ebx-0x777cf54d]
  426f28:	jg     0x426edf
  426f2a:	daa    
  426f2b:	idiv   DWORD PTR [esi-0x1b]
  426f2e:	adc    DWORD PTR [ecx],esi
  426f30:	xor    BYTE PTR [ebp+0x27],bh
  426f33:	jecxz  0x426f2d
  426f35:	add    ebx,esp
  426f37:	retf   0xf548
  426f3a:	add    edi,DWORD PTR [esi+0x4f86cd7f]
  426f40:	sbb    bh,BYTE PTR [ebx]
  426f42:	sbb    esi,0x16
  426f45:	shl    DWORD PTR [eax-0x713d8cb8],0x43
  426f4c:	jge    0x426f82
  426f4e:	jl     0x426f50
  426f50:	add    BYTE PTR [eax],al
  426f52:	dec    ebx
  426f53:	cmp    DWORD PTR [edx-0x1662c77e],esi
  426f59:	add    al,0xf3
  426f5b:	push   es
  426f5c:	sbb    eax,0x8cc93014
  426f61:	lahf   
  426f62:	je     0x426f2a
  426f64:	call   0x59b91db3
  426f69:	mov    ?,WORD PTR [ebx+0x30118e06]
  426f6f:	leave  
  426f70:	mov    WORD PTR [ebx-0x1700398c],?
  426f76:	test   eax,0x7d4defc9
  426f7b:	(bad)  
  426f7c:	(bad)  
  426f7d:	mov    ecx,0xbc895a1d
  426f82:	pop    esp
  426f83:	sbb    BYTE PTR [ebp-0x7],0x15
  426f87:	bound  ecx,QWORD PTR [ebx]
  426f89:	addr16 in eax,dx
  426f8b:	pop    es
  426f8c:	add    cl,ch
  426f8e:	jne    0x426f5c
  426f90:	pop    es
  426f91:	push   0x50
  426f93:	pop    ss
  426f94:	mov    DWORD PTR [esp+edi*1+0xac7ed6],ebp
  426f9b:	jno    0x427011
  426f9d:	xlat   BYTE PTR ds:[ebx]
  426f9e:	sbb    BYTE PTR [ecx-0x6],ch
  426fa1:	push   ds
  426fa2:	jno    0x426f44
  426fa4:	add    al,ch
  426fa6:	lock push es
  426fa8:	je     0x426fa3
  426faa:	cmp    esp,ecx
  426fac:	jmp    0x427013
  426fae:	jne    0x426f77
  426fb0:	jmp    DWORD PTR ds:0x62b062ab
  426fb6:	add    BYTE PTR [eax],al
  426fb8:	add    BYTE PTR [eax-0x4620198e],dh
  426fbe:	retf   
  426fbf:	jmp    0x426f5a
  426fc1:	jbe    0x426f8a
  426fc3:	jmp    DWORD PTR [ebp+0x629c6234]
  426fc9:	das    
  426fca:	jb     0x42704a
  426fcc:	inc    esp
  426fcd:	out    0x6,eax
  426fcf:	jg     0x427015
  426fd1:	retf   
  426fd2:	push   es
  426fd3:	je     0x426fe4
  426fd5:	outs   dx,BYTE PTR ds:[esi]
  426fd6:	mov    dl,0x27
  426fd8:	sub    al,0x73
  426fda:	repnz imul eax
  426fdd:	sub    ah,BYTE PTR [esi]
  426fdf:	call   0xfbb0e139
  426fe4:	jb     0x426f95
  426fe6:	scas   al,BYTE PTR es:[edi]
  426fe7:	add    eax,ebp
  426fe9:	lock push es
  426feb:	pop    ds
  426fec:	mov    eax,ds:0x753ece
  426ff1:	sub    BYTE PTR [ebx+0x2ae00c4d],al
  426ff7:	pop    eax
  426ff8:	xchg   bx,ax
  426ffa:	(bad)  
  426ffb:	pop    eax
  426ffc:	mov    edi,edi
  426ffe:	xchg   cl,ch
  427000:	pushf  
  427001:	fiadd  DWORD PTR ds:0xfd97f600
  427007:	pop    ds
  427008:	je     0x427003
  42700a:	mov    ebx,edx
  42700c:	jne    0x426fe2
  42700e:	out    dx,eax
  42700f:	inc    esp
  427010:	or     BYTE PTR [edx+0x6f],bl
  427013:	sub    al,ch
  427015:	mov    dl,0x87
  427017:	idiv   edi
  427019:	mov    al,0x8
  42701b:	sub    edx,edx
  42701d:	add    BYTE PTR [eax],al
  42701f:	add    BYTE PTR [ebx-0x177a0f12],al
  427025:	jns    0x42703f
  427027:	push   edx
  427028:	cmp    ah,0x57
  42702b:	call   0x39f4f8
  427030:	adc    DWORD PTR [edx+0x7],eax
  427033:	pinsrw mm1,edx,0x5d
  427037:	or     edx,0x3a
  42703a:	pop    esi
  42703b:	mov    DWORD PTR [esi-0x2e9c1db4],eax
  427041:	dec    ecx
  427042:	or     ecx,DWORD PTR [ebx-0x7413763a]
  427048:	pop    ss
  427049:	pop    ss
  42704a:	lea    edi,[edx+eiz*1]
  42704d:	cmp    al,0xc0
  42704f:	cmp    DWORD PTR [ecx+edx*4],0x165a4083
  427056:	xchg   ebp,eax
  427057:	shl    BYTE PTR [eax+0x2a83480a],0x17
  42705e:	jnp    0x427020
  427060:	pop    ss
  427061:	fisttp QWORD PTR [ebx-0x1179b202]
  427067:	inc    ebp
  427068:	and    al,BYTE PTR [esi+ebx*2]
  42706b:	psllq  mm3,mm1
  42706e:	add    dh,BYTE PTR [eax]
  427070:	xchg   ebp,eax
  427071:	out    0x7,al
  427073:	jne    0x427044
  427075:	icebp  
  427076:	rol    DWORD PTR [edi],0xf1
  427079:	jnp    0x42708b
  42707b:	test   DWORD PTR [eax],ebx
  42707d:	jae    0x42708b
  42707f:	xchg   DWORD PTR [esi],esi
  427081:	push   edx
  427082:	jmp    0x427105
  427087:	addr16 inc esi
  427089:	and    DWORD PTR [eax],0x45796167
  42708f:	jmp    0x4270f6
  427091:	repz adc bl,bl
  427094:	pop    esi
  427095:	cmp    ebx,0x73fe96c4
  42709b:	jmp    0x427022
  42709d:	pop    edi
  42709e:	sti    
  42709f:	repz pop ebp
  4270a1:	jmp    0xf22764a6
  4270a6:	div    DWORD PTR [eax]
  4270a8:	sub    edx,eax
  4270aa:	psubusb mm5,QWORD PTR [edi]
  4270ad:	adc    BYTE PTR [esi-0x5d],bh
  4270b0:	sbb    BYTE PTR [eax-0x3de7d305],al
  4270b6:	pop    es
  4270b7:	jecxz  0x42705d
  4270b9:	repz sbb BYTE PTR [esi+0x78],dh
  4270bd:	repnz adc al,0x68
  4270c0:	mov    ds:0xedbf8d0b,eax
  4270c5:	and    BYTE PTR [edx+0x70],0x27
  4270c9:	and    al,0x75
  4270cb:	call   0xa740ddac
  4270d0:	shl    BYTE PTR [edi-0x19],cl
  4270d3:	lock in al,0xc8
  4270d6:	or     eax,DWORD PTR [eax]
  4270d8:	mov    bh,0x72
  4270da:	inc    ebp
  4270db:	jmp    0x427144
  4270dd:	in     eax,0x88
  4270df:	out    0x2d,eax
  4270e1:	clc    
  4270e2:	push   cs
  4270e3:	cld    
  4270e4:	clc    
  4270e5:	or     edi,DWORD PTR [edi+0x2a]
  4270e8:	pop    es
  4270e9:	or     dl,dh
  4270eb:	add    BYTE PTR [eax],al
  4270ed:	add    ch,dh
  4270ef:	and    DWORD PTR [eax+0x6608a1fa],0x45
  4270f6:	adc    ebp,ecx
  4270f8:	pop    edi
  4270f9:	or     al,0x6c
  4270fb:	dec    ecx
  4270fc:	and    ecx,DWORD PTR [ebp+0x3d]
  4270ff:	add    ebp,ecx
  427101:	mov    BYTE PTR [ecx],al
  427103:	sti    
  427104:	ror    BYTE PTR [edx-0x3c5ae102],cl
  42710a:	in     al,0x34
  42710c:	sub    DWORD PTR [ecx-0x75090556],ecx
  427112:	(bad)  
  427113:	sub    ch,BYTE PTR ds:0x172eccc3
  427119:	clc    
  42711a:	in     eax,dx
  42711b:	(bad)  
  42711c:	gs inc edx
  42711e:	or     ebp,DWORD PTR [eax+ebp*1]
  427121:	repnz rol BYTE PTR [ebx-0x2c9380df],0x93
  427129:	mov    dl,BYTE PTR [edi]
  42712b:	sub    esi,ebp
  42712d:	sub    BYTE PTR [ebx+0x405ad66f],0x7c
  427134:	adc    DWORD PTR [ebx],edi
  427136:	xchg   esp,eax
  427137:	jmp    DWORD PTR [eax+ecx*4-0xd]
  42713b:	push   es
  42713c:	jmp    0x25615fcb
  427141:	ret    
  427142:	je     0x427178
  427144:	sub    esi,edx
  427146:	and    eax,0x6c24733c
  42714b:	sbb    DWORD PTR ds:0x6e071c48,ecx
  427151:	jno    0x427153
  427153:	add    BYTE PTR [eax],al
  427155:	sbb    dl,BYTE PTR [ecx]
  427157:	pop    ebp
  427158:	or     dh,BYTE PTR [ebx-0x3d45c7d]
  42715e:	inc    ebp
  42715f:	aaa    
  427160:	js     0x4271b6
  427162:	sti    
  427163:	ins    DWORD PTR es:[edi],dx
  427164:	jae    0x427132
  427166:	js     0x427168
  427168:	add    eax,esi
  42716a:	pusha  
  42716b:	xchg   DWORD PTR [ecx+0x1241282b],esi
  427171:	scas   al,BYTE PTR es:[edi]
  427172:	push   ds
  427173:	mov    edx,0x2facc5
  427178:	adc    DWORD PTR [ecx+0x6c8ef9bf],0x68287446
  427182:	xor    DWORD PTR [eax],ebp
  427184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427185:	xor    DWORD PTR [edi-0x6],ebp
  427188:	in     al,dx
  427189:	sbb    BYTE PTR [ebx+0x3f],al
  42718c:	jmp    0x5fa9ec0a
  427191:	or     BYTE PTR [esi+0x34],ch
  427194:	add    eax,0xdd002e2b
  427199:	sbb    BYTE PTR [esi+0x7fa1ba4e],bh
  42719f:	sub    dh,BYTE PTR [ecx-0x62]
  4271a2:	or     bh,bl
  4271a4:	aam    0x78
  4271a6:	std    
  4271a7:	aas    
  4271a8:	jmp    0x2e5e331e
  4271ad:	ja     0x427178
  4271af:	pop    es
  4271b0:	jo     0x427170
  4271b2:	add    cl,BYTE PTR [ecx+0x5a8000bf]
  4271b8:	std    
  4271b9:	add    BYTE PTR [eax],al
  4271bb:	add    BYTE PTR [edi-0x2f],bh
  4271be:	pop    ss
  4271bf:	pusha  
  4271c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271c1:	push   cs
  4271c2:	mov    DWORD PTR [edi-0x603c7a2c],esp
  4271c8:	xchg   ebp,eax
  4271c9:	retf   
  4271ca:	push   esi
  4271cb:	sub    esi,esp
  4271cd:	push   es
  4271ce:	push   edx
  4271cf:	(bad)  
  4271d0:	loopne 0x4271b7
  4271d2:	icebp  
  4271d3:	adc    edx,esi
  4271d5:	xor    esp,DWORD PTR [eiz*4-0x29ad91ce]
  4271dc:	inc    ebp
  4271dd:	push   es
  4271de:	jg     0x4271e7
  4271e0:	out    dx,eax
  4271e1:	jno    0x4271f8
  4271e3:	add    BYTE PTR [edx+0x19],ch
  4271e6:	inc    eax
  4271e7:	add    BYTE PTR [ebp+0x75],dh
  4271ea:	pop    es
  4271eb:	call   0x3bc81c
  4271f0:	push   ebp
  4271f1:	jne    0x4271fe
  4271f3:	mov    ecx,esp
  4271f5:	push   cs
  4271f6:	call   0xf72ecb4c
  4271fb:	(bad)  
  4271fc:	in     al,dx
  4271fd:	or     ch,al
  4271ff:	and    edi,DWORD PTR [esi-0x3740914]
  427205:	and    eax,0x3fef685
  42720a:	dec    esi
  42720b:	call   0x396fe6
  427210:	cmp    ebx,DWORD PTR [ebx]
  427212:	les    eax,FWORD PTR [ebx-0x36]
  427215:	jle    0x42720f
  427217:	test   DWORD PTR [edx],ecx
  427219:	outs   dx,DWORD PTR ds:[esi]
  42721a:	inc    esp
  42721b:	mov    ecx,edi
  42721d:	and    eax,0x43c4
  427222:	add    dl,bl
  427224:	jle    0x4271ee
  427226:	imul   eax,DWORD PTR [ebx],0x1b
  427229:	lea    ecx,[ebx+ebx*4-0x2f]
  42722d:	jp     0x427268
  42722f:	call   0x471b:0x33830174
  427236:	jne    0x427237
  427238:	das    
  427239:	clc    
  42723a:	je     0x4271e9
  42723c:	test   bh,dh
  42723e:	jne    0x4271d4
  427240:	push   edi
  427241:	jecxz  0x427226
  427243:	dec    ecx
  427244:	jmp    0x42723c
  427246:	and    DWORD PTR [edi-0x75bc3bdb],esi
  42724c:	fiadd  WORD PTR [esi]
  42724e:	mov    edx,DWORD PTR ds:0x1428c860
  427254:	pop    ds
  427255:	les    eax,FWORD PTR [ebx+0x4a]
  427258:	loope  0x42725b
  42725a:	push   ebx
  42725b:	xor    al,0xea
  42725d:	mov    BYTE PTR ds:0x3f4807f3,bh
  427263:	repz sbb al,0xda
  427266:	mov    esi,0x516af8a6
  42726b:	mov    ds:0xbc18bc15,al
  427270:	and    BYTE PTR [ebx+edi*8],al
  427273:	inc    ebx
  427274:	out    0xc1,al
  427276:	test   DWORD PTR [ebx],0x14f9ddfd
  42727c:	clc    
  42727d:	icebp  
  42727e:	pop    es
  42727f:	ja     0x427220
  427281:	or     al,0x84
  427283:	ins    BYTE PTR es:[edi],dx
  427284:	pop    edi
  427285:	(bad)  
  427286:	inc    DWORD PTR [eax]
  427288:	add    BYTE PTR [eax],al
  42728a:	push   0xfb7f141a
  42728f:	scas   eax,DWORD PTR es:[edi]
  427290:	repz xor dh,BYTE PTR [eax-0xa]
  427294:	les    esi,FWORD PTR [ebx+0x21]
  427297:	loope  0x42730f
  427299:	adc    eax,DWORD PTR fs:[bx+di+0x45f8]
  42729f:	push   ebx
  4272a0:	out    dx,eax
  4272a1:	xchg   BYTE PTR [esi],bh
  4272a3:	push   0xffffff80
  4272a5:	gs (bad) 
  4272a7:	pop    esi
  4272a8:	and    BYTE PTR [ebp-0x15],0x5d
  4272ac:	mov    al,BYTE PTR [ebp-0x15]
  4272af:	lea    ecx,[edx+0x7c8eaf45]
  4272b5:	jne    0x4272c2
  4272b7:	xchg   esp,eax
  4272b8:	addr16 out 0xe8,eax
  4272bb:	pop    ebp
  4272bc:	inc    DWORD PTR [ebx+esi*4-0x64ae306d]
  4272c3:	mov    eax,ds:0x8f3000f
  4272c8:	(bad)  
  4272c9:	dec    esi
  4272ca:	and    al,0xc5
  4272cc:	or     al,ah
  4272ce:	xor    BYTE PTR [esi-0x2c],bl
  4272d1:	cli    
  4272d2:	push   es
  4272d3:	add    dl,BYTE PTR [ecx]
  4272d5:	inc    eax
  4272d6:	repz add eax,0x75cfa33
  4272dc:	loop   0x427314
  4272de:	cmp    al,0x88
  4272e0:	loope  0x42735d
  4272e2:	(bad)  
  4272e3:	divps  xmm1,XMMWORD PTR [ecx]
  4272e6:	cmovae esp,DWORD PTR [esi]
  4272e9:	add    al,0xd4
  4272eb:	inc    esi
  4272ec:	adc    DWORD PTR [eax+eax*1],edi
  4272ef:	add    BYTE PTR [eax],al
  4272f1:	xchg   edi,eax
  4272f2:	(bad)  
  4272f3:	in     al,0xef
  4272f5:	clc    
  4272f6:	imul   edi,DWORD PTR ds:0xd46bfb0c,0x4f
  4272fd:	in     eax,dx
  4272fe:	(bad)  
  4272ff:	call   0x9a16c77d
  427304:	adc    DWORD PTR [ebx],eax
  427306:	sbb    DWORD PTR [ecx],ebp
  427308:	add    al,0xa8
  42730a:	sub    BYTE PTR [esi+0x660480df],0xf9
  427311:	in     al,0xe2
  427313:	hlt    
  427314:	adc    ebp,eax
  427316:	icebp  
  427317:	sar    BYTE PTR [edx+0x5e],1
  42731a:	adc    ebp,DWORD PTR [edx-0xf]
  42731d:	in     al,dx
  42731e:	imul   ebx,esp,0x7
  427321:	inc    ecx
  427322:	ins    BYTE PTR es:[edi],dx
  427323:	mov    ah,0x7b
  427325:	sub    DWORD PTR [esi],edi
  427327:	daa    
  427328:	adc    bl,dh
  42732a:	aad    0xb5
  42732c:	shl    BYTE PTR [ebp+0x4d],1
  42732f:	imul   BYTE PTR [eax-0x4]
  427332:	dec    ecx
  427333:	mov    ah,0x2
  427335:	fld    QWORD PTR [esi+0x40]
  427338:	or     dl,dh
  42733a:	push   es
  42733b:	jmp    0xa68a082b
  427340:	add    ebx,DWORD PTR [eax+0x33160d11]
  427346:	pop    es
  427347:	sub    eax,eax
  427349:	sar    bh,1
  42734b:	call   0x2d49418c
  427350:	(bad)  
  427351:	je     0x427345
  427353:	(bad)  
  427355:	add    BYTE PTR [eax],al
  427357:	add    bh,al
  427359:	fdivp  st(7),st
  42735b:	out    0xf0,eax
  42735d:	add    al,BYTE PTR [eax]
  42735f:	out    dx,al
  427360:	add    ebp,DWORD PTR [edi+0xe]
  427363:	sub    edi,ebp
  427365:	mov    eax,DWORD PTR [eax]
  427367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427368:	xor    eax,0xf9ac366b
  42736d:	add    bh,0xe9
  427370:	lock push es
  427372:	xchg   esp,esi
  427374:	call   0xe62bb2bb
  427379:	inc    esi
  42737a:	aaa    
  42737b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42737c:	and    dl,BYTE PTR [edi]
  42737e:	xchg   esp,edx
  427380:	sbb    al,0x47
  427382:	aas    
  427383:	jmp    0xeec07e5f
  427388:	mov    WORD PTR [ebx-0x390f1700],es
  42738e:	ss test al,0x6
  427391:	pop    edi
  427392:	push   edx
  427393:	je     0x427381
  427395:	jns    0x42739b
  427397:	jmp    0xedfc7a8c
  42739c:	and    al,0x2a
  42739e:	add    BYTE PTR [ecx+0x66f9d829],al
  4273a4:	push   esp
  4273a5:	inc    edi
  4273a6:	or     esp,DWORD PTR [ebp+0x60]
  4273a9:	pop    es
  4273aa:	add    cl,ch
  4273ac:	(bad)  
  4273ad:	inc    ebx
  4273af:	stos   BYTE PTR es:[edi],al
  4273b0:	lock or DWORD PTR ds:0x29f4ed,0xf02e372
  4273bb:	test   eax,0xf0000000
  4273c0:	aad    0x65
  4273c2:	or     ch,BYTE PTR [esi+0xb]
  4273c5:	and    DWORD PTR [esi],0xaac3fef3
  4273cb:	lock sar edx,cl
  4273ce:	fdivr  st(0),st
  4273d0:	inc    edx
  4273d1:	aas    
  4273d2:	jmp    0xc9c8d0
  4273d7:	repnz sub ch,bh
  4273da:	je     0x42736b
  4273dc:	pop    esp
  4273dd:	add    dl,BYTE PTR [ebp+0x5d]
  4273e0:	sbb    al,BYTE PTR [eax]
  4273e2:	les    ecx,FWORD PTR [ecx-0x1e2908fa]
  4273e8:	repnz xor dh,ch
  4273eb:	shl    DWORD PTR [ecx],0x0
  4273ee:	adc    ebx,DWORD PTR [edx]
  4273f0:	add    esi,DWORD PTR [ebx+edi*1-0x50]
  4273f4:	add    cl,BYTE PTR [edi+0x56]
  4273f7:	test   BYTE PTR ds:0x5ec89b2,al
  4273fd:	mov    esi,0xbe5e1746
  427402:	inc    esi
  427403:	adc    al,0xa7
  427405:	inc    ebx
  427406:	inc    edx
  427407:	or     cl,al
  427409:	cmp    eax,0x3bdb590a
  42740e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42740f:	pop    esp
  427410:	lock test al,al
  427413:	out    0xfc,al
  427415:	mov    ebp,0x1132644
  42741a:	jmp    0x4273d5
  42741c:	mov    DWORD PTR [ebx+0x24],0x1ee304d1
  427423:	add    BYTE PTR [eax],al
  427425:	add    BYTE PTR [ecx+ebx*2],al
  427428:	sti    
  427429:	(bad)  
  42742a:	test   DWORD PTR [edx],0xeeda43c4
  427430:	aam    0x57
  427432:	mov    al,0x5
  427434:	div    DWORD PTR ds:0x3b29ca
  42743a:	sub    eax,0xa20df6ba
  42743f:	sub    DWORD PTR [ebx],edi
  427441:	add    BYTE PTR [ebp+0x4f],bh
  427444:	arpl   ax,bp
  427446:	leave  
  427447:	inc    ebx
  427448:	sti    
  427449:	(bad)  
  42744a:	xchg   edi,eax
  42744b:	cmc    
  42744c:	or     DWORD PTR [eax-0x66],eax
  42744f:	jnp    0x427495
  427451:	and    al,0xf3
  427453:	rcl    BYTE PTR fs:[esi+0x1a],cl
  427457:	sbb    eax,0xdc8786cb
  42745c:	addr16 or al,0xc0
  42745f:	xchg   ecx,eax
  427460:	mov    WORD PTR ds:0xffbf4acf,?
  427466:	lds    eax,FWORD PTR [ebp-0x3fc47905]
  42746c:	add    BYTE PTR [ebp+0x4f],0x2f
  427470:	add    DWORD PTR [ebp+0x3f],0x2f
  427474:	jmp    0x34fb:0xf1e6a000
  42747b:	mov    DWORD PTR [edx-0x40],edi
  42747e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42747f:	dec    edi
  427480:	mov    WORD PTR [ebp+0x1f],cs
  427483:	fiadd  DWORD PTR [ebp+0x74]
  427486:	jmp    0x0:0xfaad47
  42748d:	adc    al,0xa0
  42748f:	jnp    0x427451
  427491:	xchg   DWORD PTR [eax-0x7e],ebp
  427494:	inc    ebp
  427495:	pop    es
  427496:	das    
  427497:	add    DWORD PTR [ebp-0x5],0x2e
  42749b:	jmp    0xecfb:0xf1f6a014
  4274a2:	nop
  4274a3:	jp     0x427465
  4274a5:	pop    edi
  4274a6:	popa   
  4274a7:	test   BYTE PTR [ebp-0x25],bh
  4274aa:	pop    esi
  4274ab:	jmp    0x4274b5
  4274ad:	push   0x8ee77743
  4274b2:	or     al,0x44
  4274b4:	out    0xf1,eax
  4274b6:	(bad)  
  4274b7:	(bad)  
  4274b8:	pop    edx
  4274b9:	sbb    eax,0x1ebf46b5
  4274be:	repz loop 0x4274e4
  4274c1:	jnp    0x4274a2
  4274c3:	bound  esi,QWORD PTR [edx+esi*8+0x5d]
  4274c7:	dec    DWORD PTR [esi+0x45]
  4274ca:	in     eax,0x29
  4274cc:	hlt    
  4274cd:	add    DWORD PTR [edi],eax
  4274cf:	test   eax,0x1a342003
  4274d4:	jmp    0x4274ce
  4274d6:	inc    edx
  4274d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274d8:	add    esi,DWORD PTR [edi+ecx*2+0x60]
  4274dc:	ss iret 
  4274de:	inc    edx
  4274df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274e0:	add    edi,DWORD PTR [edx+0x2a]
  4274e3:	sar    DWORD PTR [edi],1
  4274e5:	and    al,0x7
  4274e7:	repnz push eax
  4274e9:	aad    0x22
  4274eb:	xchg   edx,eax
  4274ec:	mov    eax,0x426444b
  4274f1:	add    BYTE PTR [eax],al
  4274f3:	add    BYTE PTR [eax-0x1ed00b99],ah
  4274f9:	(bad)  
  4274fa:	call   0x323dac81
  4274ff:	ja     0x427522
  427501:	xchg   DWORD PTR [esp+edx*4],eax
  427504:	arpl   sp,ax
  427506:	call   0x7ec36d0f
  42750b:	add    eax,0x5b6406f3
  427510:	lahf   
  427511:	das    
  427512:	or     eax,DWORD PTR [ebx+0x351506c4]
  427518:	(bad)  
  427519:	les    esp,FWORD PTR [ebx-0xf]
  42751c:	lods   al,BYTE PTR ds:[esi]
  42751d:	into   
  42751e:	sbb    bl,0x4c
  427521:	push   0x7a33ea82
  427526:	hlt    
  427527:	pop    ebx
  427528:	dec    ebx
  427529:	pop    edi
  42752a:	sbb    DWORD PTR [eax+ebx*8-0x188e999],ebp
  427531:	xchg   bh,dh
  427533:	ret    
  427534:	int3   
  427535:	jp     0x4274dc
  427537:	add    eax,ebp
  427539:	mov    bh,0xb5
  42753b:	jmp    0xd3e6ef33
  427540:	and    al,0x7c
  427542:	sub    edx,esp
  427544:	xchg   esp,eax
  427545:	inc    esi
  427546:	inc    DWORD PTR [ebx]
  427548:	repz fdiv st(7),st
  42754b:	test   eax,0x91c3f16b
  427550:	or     BYTE PTR [ecx],ah
  427552:	test   al,0x26
  427554:	add    al,0xe1
  427556:	inc    ebx
  427557:	ins    BYTE PTR es:[edi],dx
  427558:	add    BYTE PTR [eax],al
  42755a:	add    BYTE PTR [edx-0x1bfea82d],al
  427560:	sahf   
  427561:	sti    
  427562:	push   cs
  427563:	mov    edx,eax
  427565:	mov    WORD PTR [eax+eiz*1-0x31],?
  427569:	out    0xd5,eax
  42756b:	cwde   
  42756c:	imul   edi,ebx,0x64
  42756f:	xor    dl,bl
  427571:	mov    BYTE PTR [eax+ecx*2+0x3370c280],ah
  427578:	fisttp DWORD PTR [esp+edx*2+0x5d454457]
  42757f:	icebp  
  427580:	push   es
  427581:	add    cl,ch
  427583:	imul   ecx,DWORD PTR [edi+ecx*2],0x50433374
  42758a:	jle    0x42757b
  42758c:	push   es
  42758d:	add    BYTE PTR [ecx+0x69],ch
  427590:	inc    ebx
  427591:	call   0x494d4e
  427596:	ins    BYTE PTR es:[edi],dx
  427597:	mov    al,0xf2
  427599:	adc    DWORD PTR [edx+0x13],ebp
  42759c:	xlat   BYTE PTR ds:[ebx]
  42759d:	inc    DWORD PTR [edx]
  42759f:	repz jns 0x4275e7
  4275a2:	sbb    DWORD PTR [edi],ebx
  4275a4:	loope  0x4275a9
  4275a6:	sbb    bh,BYTE PTR [edx-0x34]
  4275a9:	ret    
  4275aa:	sbb    DWORD PTR [edi-0x3c],edx
  4275ad:	xor    eax,0xc1e5f0e9
  4275b2:	in     eax,0x5d
  4275b4:	aam    0x73
  4275b6:	fdivr  QWORD PTR [ecx]
  4275b8:	in     eax,dx
  4275b9:	inc    ecx
  4275ba:	ins    BYTE PTR es:[edi],dx
  4275bb:	ret    
  4275bc:	cmp    bl,BYTE PTR [eax+0x41]
  4275bf:	add    BYTE PTR [eax],al
  4275c1:	add    BYTE PTR [ebp-0x35b10456],al
  4275c7:	leave  
  4275c8:	mov    WORD PTR [eax],es
  4275ca:	outs   dx,DWORD PTR ds:[esi]
  4275cb:	dec    esi
  4275cc:	push   ebx
  4275cd:	call   0x39faf0
  4275d2:	pop    ss
  4275d3:	inc    edi
  4275d4:	outs   dx,DWORD PTR ds:[esi]
  4275d5:	push   eax
  4275d6:	mov    al,0xb
  4275d8:	sub    ebx,ebx
  4275da:	dec    ecx
  4275db:	pop    DWORD PTR [ebp-0x2c]
  4275de:	dec    edx
  4275df:	push   ebp
  4275e0:	mov    BYTE PTR [ebp+0x5e],bh
  4275e3:	fst    QWORD PTR [eax+esi*2]
  4275e6:	jp     0x427632
  4275e8:	sti    
  4275e9:	test   BYTE PTR [edx],bl
  4275eb:	push   edi
  4275ec:	or     al,0x8b
  4275ee:	or     al,0x3a
  4275f0:	mov    WORD PTR [ebp-0x22],?
  4275f3:	icebp  
  4275f4:	repz cmp cl,BYTE PTR [edx+0xa]
  4275f8:	jecxz  0x4275fc
  4275fa:	call   0x9f02f9c9
  4275ff:	test   DWORD PTR [ebp+eax*2+0x458c3b16],0xc7823b7e
  42760a:	inc    edx
  42760b:	pop    edi
  42760c:	cmp    BYTE PTR [eax],al
  42760e:	sbb    ah,ch
  427610:	mov    edi,0xff704274
  427615:	mov    edi,cs
  427617:	pop    edx
  427618:	dec    ebx
  427619:	push   0x1e
  42761b:	lea    eax,[ebp+0x4c]
  42761e:	retf   0x458d
  427621:	aam    0xba
  427623:	xchg   ecx,eax
  427624:	pop    ebp
  427625:	jo     0x427627
  427627:	add    BYTE PTR [eax],al
  427629:	jb     0x4275f0
  42762b:	cmp    BYTE PTR [eax],al
  42762d:	fisubr DWORD PTR [edi+0x43]
  427630:	(bad)  
  427631:	fild   WORD PTR [ebp-0x7c0517a8]
  427637:	idiv   edi
  427639:	lock push ecx
  42763b:	mov    WORD PTR [ebp+0x12],?
  42763e:	inc    ebx
  42763f:	jecxz  0x427686
  427641:	ins    DWORD PTR es:[edi],dx
  427642:	fcomi  st,st(6)
  427644:	push   0xfffffff3
  427646:	test   eax,0x98177582
  42764b:	addr16 ss push esp
  42764e:	int3   
  42764f:	je     0x4275de
  427651:	or     BYTE PTR cs:[edi+0x39e93745],al
  427658:	mov    DWORD PTR [esi],ebp
  42765a:	test   al,0x86
  42765c:	pop    ebp
  42765d:	pop    es
  42765e:	xor    eax,0x6fee6fbb
  427663:	(bad)  
  427664:	(bad)  
  427665:	jl     0x4275e9
  427667:	jmp    0x4275f5
  427669:	cs int3 
  42766b:	shl    DWORD PTR [ebp-0x44],cl
  42766e:	test   al,0x82
  427670:	mov    ebp,0xfb7464ef
  427675:	dec    ebx
  427676:	and    BYTE PTR [ecx-0x2989ab06],dl
  42767c:	test   BYTE PTR [ebx],dh
  42767e:	in     eax,dx
  42767f:	xor    ah,BYTE PTR [esi-0xf]
  427682:	repnz icebp 
  427684:	inc    ebx
  427685:	popf   
  427686:	call   0xeaa8c59e
  42768b:	cli    
  42768c:	cli    
  42768d:	add    BYTE PTR [eax],al
  42768f:	add    BYTE PTR [esp+ecx*2],ch
  427692:	iret   
  427693:	mov    bh,0xf2
  427695:	outs   dx,DWORD PTR ds:[esi]
  427696:	(bad)  
  427697:	jg     0x4276a4
  427699:	mov    ds:0xeaf30037,al
  42769e:	ds je  0x42768b
  4276a1:	lock fldcw WORD PTR [ebx-0xd]
  4276a5:	stc    
  4276a6:	dec    DWORD PTR [esi+esi*4-0x109a2bf5]
  4276ad:	and    BYTE PTR [ebx+0x748cf785],al
  4276b3:	sti    
  4276b4:	inc    ebx
  4276b5:	jbe    0x42768c
  4276b7:	cmp    bl,dh
  4276b9:	ins    DWORD PTR es:[edi],dx
  4276ba:	add    bl,0xef
  4276bd:	add    ebp,ebx
  4276bf:	enter  0x7cc,0xac
  4276c3:	out    dx,eax
  4276c4:	leave  
  4276c5:	rcr    al,cl
  4276c7:	out    dx,al
  4276c8:	pop    esp
  4276c9:	les    esi,FWORD PTR [edx-0x2eb5ca28]
  4276cf:	dec    edx
  4276d0:	ins    BYTE PTR es:[edi],dx
  4276d1:	mov    edx,0x7372676d
  4276d6:	leave  
  4276d7:	or     esi,ebx
  4276d9:	push   es
  4276da:	xchg   esi,eax
  4276db:	int    0x99
  4276dd:	(bad)  
  4276df:	xor    BYTE PTR [edx+edx*4-0x3d85a064],ah
  4276e6:	sbb    al,0x6b
  4276e8:	ret    
  4276e9:	shr    eax,1
  4276eb:	add    ebp,DWORD PTR [edi+0x47]
  4276ee:	fidivr DWORD PTR [edi-0x4e]
  4276f1:	add    eax,0x3e9
  4276f6:	add    BYTE PTR [eax+esi*8+0x5ab686e7],dh
  4276fd:	cdq    
  4276fe:	je     0x4276de
  427700:	push   0x5e
  427702:	mov    esi,0x81446f54
  427707:	dec    ecx
  427708:	outs   dx,BYTE PTR fs:[esi]
  42770a:	je     0x42777a
  42770c:	retf   0x7dcc
  42770f:	mov    esi,0xbea9c15e
  427714:	push   es
  427715:	jmp    0xeaa6a0a0
  42771a:	xchg   edx,edi
  42771c:	add    eax,0xf0c003e9
  427721:	fbstp  TBYTE PTR [esi]
  427723:	cmp    eax,0x1cdab90
  427728:	push   esi
  427729:	fs push esi
  42772b:	call   0xf34705b9
  427730:	push   es
  427731:	(bad)  
  427732:	mov    esi,0xcc8ce17f
  427737:	int3   
  427738:	add    eax,DWORD PTR [ebx+0x73]
  42773b:	fdiv   st,st(0)
  42773d:	jmp    DWORD PTR [edx+esi*2]
  427740:	loope  0x427719
  427742:	adc    DWORD PTR [edi],ebp
  427744:	sti    
  427745:	mov    eax,ds:0xce344066
  42774a:	jo     0x4276ee
  42774c:	or     esi,DWORD PTR [edi]
  42774e:	pop    edx
  42774f:	lock mov al,bl
  427752:	jmp    0xb4c97e47
  427757:	test   al,0x8c
  427759:	inc    ebp
  42775a:	xor    eax,0x1c000000
  42775f:	sbb    ecx,DWORD PTR [eax-0x7a8c65a0]
  427765:	aaa    
  427766:	lock mov bh,BYTE PTR [eax-0x7ff90f17]
  42776d:	fcomip st,st(0)
  42776f:	je     0x4966bb
  427775:	bound  esp,QWORD PTR [ebx-0x75]
  427778:	add    al,0x70
  42777a:	bound  eax,QWORD PTR [ebx-0x7b]
  42777d:	(bad)  
  42777e:	icebp  
  42777f:	mov    ah,BYTE PTR [eax-0x7ff90f17]
  427785:	scas   al,BYTE PTR es:[edi]
  427786:	lock je 0x49680b
  42778d:	jb     0x4277bb
  42778f:	mov    ecx,DWORD PTR [eax]
  427791:	ins    BYTE PTR es:[edi],dx
  427792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427793:	je     0x4967fb
  427799:	imul   edx,ebp,0x76650b06
  42779f:	push   es
  4277a0:	add    cl,ch
  4277a2:	ins    DWORD PTR es:[edi],dx
  4277a3:	dec    esi
  4277a4:	sti    
  4277a5:	sbb    DWORD PTR ds:0xb591c78c,esp
  4277ab:	jbe    0x4277a7
  4277ad:	sahf   
  4277ae:	imul   eax,DWORD PTR [esi+0x74],0xffffffd8
  4277b2:	jae    0x42777d
  4277b4:	jecxz  0x4277f0
  4277b6:	(bad)  
  4277b7:	popf   
  4277b8:	cmp    BYTE PTR [eax],al
  4277ba:	loop   0x4277c2
  4277bc:	add    BYTE PTR [ebp-0x1059d9],cl
  4277c2:	add    BYTE PTR [eax],al
  4277c4:	add    BYTE PTR [ebp-0x42],bl
  4277c7:	mov    ebx,0x58d55c92
  4277cc:	pop    ecx
  4277cd:	pop    ecx
  4277ce:	out    dx,al
  4277cf:	div    BYTE PTR [esp+edi*2-0x1f]
  4277d3:	lds    edx,FWORD PTR [ecx+0x4f]
  4277d6:	inc    edi
  4277d7:	imul   eax
  4277d9:	shl    ecx,0xf5
  4277dc:	call   DWORD PTR [esi]
  4277de:	(bad)  
  4277df:	jae    0x427830
  4277e1:	and    DWORD PTR [edi-0x15],ebx
  4277e4:	mov    ebx,DWORD PTR [edi-0x1a]
  4277e7:	dec    esi
  4277e8:	push   esi
  4277e9:	das    
  4277ea:	dec    edi
  4277eb:	rcl    DWORD PTR [eax+0xd],cl
  4277ee:	or     BYTE PTR cs:[eax],al
  4277f1:	mov    al,BYTE PTR [edi-0x2b2a5f4b]
  4277f7:	imul   al
  4277f9:	sar    BYTE PTR [ebx-0xa],1
  4277fc:	(bad)  
  4277fd:	fxch   st(1)
  4277ff:	or     eax,DWORD PTR [ebx+0x2b73d4f2]
  427805:	rol    edi,1
  427807:	push   eax
  427808:	lea    ebp,[edi-0xe]
  42780b:	out    0x48,eax
  42780d:	rcl    esp,0xf6
  427810:	test   BYTE PTR [edx+0x783175f],cl
  427816:	arpl   WORD PTR [eax],cx
  427818:	mov    edx,edi
  42781a:	bound  eax,QWORD PTR [edx-0xcb60e2d]
  427820:	js     0x5e426f42
  427826:	les    ecx,FWORD PTR [ebx]
  427828:	inc    DWORD PTR [eax]
  42782a:	add    BYTE PTR [eax],al
  42782c:	(bad)  
  42782d:	(bad)  
  42782e:	out    0x2f,eax
  427830:	mov    esp,0xf783f6d4
  427835:	(bad)  
  427836:	dec    DWORD PTR [edx-0x7893cd0d]
  42783c:	outs   dx,BYTE PTR ds:[esi]
  42783d:	jl     0x42789b
  42783f:	cmp    al,0x35
  427841:	mov    dh,BYTE PTR [ecx+0x5b]
  427844:	push   0x385a702a
  427849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42784a:	inc    edx
  42784b:	add    al,0xf3
  42784d:	cli    
  42784e:	jl     0x42783c
  427850:	js     0x427804
  427852:	sti    
  427853:	or     bh,0x57
  427856:	add    eax,0x84a0f300
  42785b:	rcr    bh,0x9f
  42785e:	jo     0x4278d5
  427860:	sti    
  427861:	fiadd  DWORD PTR [edx+0x71209ef8]
  427867:	push   eax
  427868:	push   0x35625c16
  42786d:	jo     0x42786e
  42786f:	test   BYTE PTR [ebx+0x34f1e883],dh
  427875:	ins    BYTE PTR es:[edi],dx
  427876:	add    eax,0x82eb2474
  42787b:	clc    
  42787c:	outs   dx,BYTE PTR ds:[esi]
  42787d:	adc    BYTE PTR [ecx+0x50],dh
  427880:	pop    ebx
  427881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427882:	jno    0x42787f
  427884:	pop    esp
  427885:	(bad)  
  427886:	ret    0x6e0b
  427889:	das    
  42788a:	clc    
  42788b:	cmp    esp,DWORD PTR [eax+0xfacf79]
  427891:	add    BYTE PTR [eax],al
  427893:	fsubrp st(7),st
  427895:	adc    DWORD PTR [eax-0xd],eax
  427898:	aam    0xbf
  42789a:	or     ebp,DWORD PTR [eax-0x69]
  42789d:	jp     0x427912
  42789f:	sti    
  4278a0:	ins    BYTE PTR es:[edi],dx
  4278a1:	cmp    al,0xe8
  4278a3:	sbb    ebp,DWORD PTR es:[esi-0x5]
  4278a7:	ja     0x427858
  4278a9:	repz adc DWORD PTR [eax+0x30],ebp
  4278ad:	add    bh,bh
  4278af:	idiv   ah
  4278b1:	jo     0x427928
  4278b3:	test   DWORD PTR [esi],0x16e67139
  4278b9:	repz ret 
  4278bb:	hlt    
  4278bc:	sub    DWORD PTR [ebp-0x23400c01],0x70
  4278c3:	pop    esi
  4278c4:	adc    edx,DWORD PTR [ecx+0x7a612e8e]
  4278ca:	sar    DWORD PTR ds:0xf2082a59,1
  4278d0:	fcmovu st,st(4)
  4278d2:	jle    0x427942
  4278d4:	pop    edi
  4278d5:	fs jo  0x427890
  4278d8:	mov    bh,0x50
  4278da:	fistp  QWORD PTR [ebx+0x61]
  4278dd:	push   edx
  4278de:	xor    al,0xb3
  4278e0:	rcr    BYTE PTR [edi],0x45
  4278e3:	sti    
  4278e4:	push   es
  4278e5:	pushf  
  4278e6:	jl     0x427877
  4278e8:	test   BYTE PTR [ebp+0x6b],al
  4278eb:	jb     0x427960
  4278ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278ee:	add    eax,0xdd9306f3
  4278f3:	cmp    DWORD PTR [edx+0x279d],edx
  4278f9:	add    BYTE PTR [edi+0x4fa410be],bh
  4278ff:	pusha  
  427900:	adc    bh,BYTE PTR [ecx+esi*1-0x6e]
  427904:	popf   
  427905:	daa    
  427906:	mov    ebx,0x10c76fb5
  42790b:	movzx  eax,BYTE PTR [ebx-0x3d]
  42790f:	mov    dh,0x7e
  427911:	and    ah,BYTE PTR [ebx-0x18d85ab9]
  427917:	sahf   
  427918:	outs   dx,BYTE PTR ds:[esi]
  427919:	les    edi,FWORD PTR [edi+ecx*4]
  42791c:	cmp    eax,0x2d8e1328
  427921:	sub    bh,dl
  427923:	lea    esp,ds:0xdc5fdb28
  427929:	shr    ebp,cl
  42792b:	(bad)  
  42792c:	call   0x1cacb9
  427931:	inc    esi
  427932:	sub    eax,edx
  427934:	mov    WORD PTR ds:0x91581adb,?
  42793a:	adc    al,0xa4
  42793c:	sti    
  42793d:	sahf   
  42793e:	jb     0x42790b
  427940:	and    esp,ecx
  427942:	outs   dx,DWORD PTR ds:[esi]
  427943:	retf   
  427944:	and    esi,ecx
  427946:	jae    0x427912
  427948:	and    esi,DWORD PTR [ecx]
  42794a:	pop    esi
  42794b:	retf   
  42794c:	and    ebx,ebp
  42794e:	jae    0x42791a
  427950:	and    ebp,ebp
  427952:	dec    edi
  427953:	retf   
  427954:	and    eax,ebp
  427956:	jae    0x427922
  427958:	and    esi,DWORD PTR [ecx+0x54c92a0]
  42795e:	add    BYTE PTR [eax],al
  427960:	add    bl,ah
  427962:	inc    ebx
  427963:	inc    esp
  427964:	or     eax,0xe9000adb
  427969:	lock inc ebx
  42796b:	inc    esp
  42796c:	or     eax,0xe90005d3
  427971:	lock inc ebx
  427973:	inc    esp
  427974:	or     eax,0xe9fb60c7
  427979:	lock outs dx,BYTE PTR ds:[esi]
  42797b:	pop    esi
  42797c:	mov    cl,0xf0
  42797e:	push   es
  42797f:	xchg   DWORD PTR [edi],esp
  427981:	lahf   
  427982:	xchg   edx,eax
  427983:	inc    esp
  427984:	int    0xac
  427986:	iret   
  427987:	dec    edi
  427988:	add    DWORD PTR [eax-0x36],eax
  42798b:	(bad)  
  42798c:	call   0xdbb6bffc
  427991:	jae    0x42795d
  427993:	and    esp,DWORD PTR [ecx-0x3ab36de0]
  427999:	hlt    
  42799a:	lea    eax,[ebp+ecx*1+0x17]
  42799e:	outs   dx,DWORD PTR ds:[esi]
  42799f:	cmp    dh,BYTE PTR [ecx]
  4279a1:	out    dx,eax
  4279a2:	push   es
  4279a3:	repnz stos BYTE PTR es:[edi],al
  4279a5:	repnz fimul DWORD PTR ds:0x10232c62
  4279ac:	add    BYTE PTR [ecx+0xb890346],ah
  4279b2:	fadd   QWORD PTR [ebx+0x24]
  4279b5:	fmul   QWORD PTR cs:[esp+ecx*1-0x6d]
  4279ba:	or     dl,BYTE PTR [esi-0x75]
  4279bd:	outs   dx,DWORD PTR ds:[esi]
  4279be:	ss mov ebp,0x823e0a08
  4279c4:	in     al,dx
  4279c5:	add    BYTE PTR [eax],al
  4279c7:	add    BYTE PTR [ecx-0x42],bl
  4279ca:	arpl   WORD PTR [ebx+0x1c],dx
  4279cd:	mov    WORD PTR ss:[ebp+0x76],es
  4279d1:	cmp    cl,BYTE PTR [ebp+eax*2+0x2653a5e]
  4279d8:	loope  0x427994
  4279da:	or     edi,edi
  4279dc:	push   ebp
  4279dd:	in     eax,dx
  4279de:	sub    bl,bl
  4279e0:	adc    edi,DWORD PTR [eax]
  4279e2:	imul   DWORD PTR [edx-0x79]
  4279e5:	pop    ebp
  4279e6:	inc    esp
  4279e7:	pop    ebp
  4279e8:	dec    esi
  4279e9:	xchg   DWORD PTR [ebp-0x60],esi
  4279ec:	(bad)  
  4279ee:	mov    cl,0xa3
  4279f0:	xor    eax,0x74e61ed
  4279f5:	push   edi
  4279f6:	out    dx,eax
  4279f7:	pop    eax
  4279f8:	xor    ch,BYTE PTR [ebx-0x66]
  4279fb:	call   ebp
  4279fd:	loopne 0x4279bd
  4279ff:	test   DWORD PTR [ecx],esi
  427a01:	push   esi
  427a02:	std    
  427a03:	mov    cl,cl
  427a05:	cmp    DWORD PTR [ebp+eax*2+0x6539ba],ecx
  427a0c:	jo     0x427a18
  427a0e:	bound  eax,QWORD PTR [ecx]
  427a10:	add    bl,BYTE PTR [edi-0x57]
  427a13:	call   DWORD PTR [ebp-0x78]
  427a16:	les    edx,FWORD PTR [ecx+ebp*2]
  427a19:	ret    0x4c53
  427a1c:	push   esp
  427a1d:	in     al,dx
  427a1e:	push   esi
  427a1f:	pop    esi
  427a20:	mov    cl,0x21
  427a22:	mov    ebx,0x7ae6c155
  427a27:	in     al,dx
  427a28:	repz not eax
  427a2b:	push   ecx
  427a2c:	add    BYTE PTR [eax],al
  427a2e:	add    BYTE PTR [edi+eax*8+0x6ff31007],bh
  427a35:	js     0x427a2f
  427a37:	push   0xd37f1423
  427a3c:	outs   dx,DWORD PTR ds:[esi]
  427a3d:	and    BYTE PTR [ebx],0xf3
  427a40:	leave  
  427a41:	sti    
  427a42:	cli    
  427a43:	(bad)  
  427a44:	(bad)  
  427a45:	cdq    
  427a46:	aas    
  427a47:	repz jl 0x427a5d
  427a4a:	add    al,0x0
  427a4c:	xor    BYTE PTR [edi+eax*4],al
  427a4f:	retf   
  427a50:	out    0xca,al
  427a52:	repz jbe 0x4279fd
  427a55:	repz add ah,BYTE PTR [ecx]
  427a58:	mov    al,0x57
  427a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a5b:	rep outs dx,DWORD PTR ds:[esi]
  427a5d:	(bad)  
  427a5e:	cli    
  427a5f:	ds cmp al,0x6c
  427a62:	adc    eax,0xffbf5f47
  427a67:	dec    edx
  427a68:	clc    
  427a69:	leave  
  427a6a:	push   ecx
  427a6b:	jle    0x427a17
  427a6d:	cmp    esp,DWORD PTR [esi-0xd]
  427a70:	lahf   
  427a71:	inc    ebp
  427a72:	inc    ebp
  427a73:	cwde   
  427a74:	outs   dx,BYTE PTR ds:[esi]
  427a75:	ins    BYTE PTR es:[edi],dx
  427a76:	adc    eax,0xffbf35df
  427a7b:	jnp    0x427a17
  427a7d:	cmp    edi,DWORD PTR [edi-0x51]
  427a80:	cmp    esi,DWORD PTR [esi+0x5d]
  427a83:	xchg   ebx,eax
  427a84:	in     eax,0x3
  427a86:	adc    bl,dh
  427a88:	outs   dx,DWORD PTR ds:[esi]
  427a89:	jg     0x427b08
  427a8b:	pop    es
  427a8c:	jo     0x427a80
  427a8e:	push   cs
  427a8f:	jbe    0x427a33
  427a91:	arpl   WORD PTR [eax+0x0],dx
  427a94:	add    BYTE PTR [eax],al
  427a96:	lds    eax,FWORD PTR [ebx+esi*8]
  427a99:	repz push esp
  427a9b:	shl    dh,cl
  427a9d:	cli    
  427a9e:	out    0xbf,al
  427aa0:	adc    al,BYTE PTR [eax-0xd]
  427aa3:	or     BYTE PTR [ebx],dl
  427aa5:	sti    
  427aa6:	mov    BYTE PTR [esi],0x1
  427aa9:	jg     0x427a59
  427aab:	dec    edx
  427aac:	dec    edi
  427aad:	cld    
  427aae:	mov    esp,0x7bfc5c5d
  427ab3:	rol    esp,cl
  427ab5:	ins    BYTE PTR es:[edi],dx
  427ab6:	push   es
  427ab7:	jae    0x427a95
  427ab9:	ret    
  427aba:	adc    al,0x82
  427abc:	test   eax,0xdc5de4f6
  427ac1:	or     esp,edx
  427ac3:	(bad)  
  427ac4:	call   0xe94b90f7
  427ac9:	add    edi,DWORD PTR [esi+0x27]
  427acc:	ins    BYTE PTR es:[edi],dx
  427acd:	xabort 0xb6
  427ad0:	sub    ch,0x68
  427ad3:	pop    es
  427ad4:	jmp    0x24d31c31
  427ad9:	push   0x10f5406e
  427ade:	enter  0x7cd2,0x78
  427ae2:	test   DWORD PTR cs:[eax+0x625d2f24],0x88d2b386
  427aed:	inc    ebp
  427aee:	ss pusha 
  427af0:	jmp    0x41959961
  427af5:	xor    BYTE PTR [ebx*2+0x8342],0x0
  427afd:	push   ss
  427afe:	pusha  
  427aff:	jmp    0xacd271fa
  427b04:	adc    ecx,DWORD PTR [eax+0x35f24117]
  427b0a:	pop    ebp
  427b0b:	and    bh,BYTE PTR [ecx+0x2e]
  427b0e:	pusha  
  427b0f:	mov    edx,0x274dc5cd
  427b14:	pop    ss
  427b15:	repz mov cl,0x5d
  427b18:	pop    edi
  427b19:	fsub   QWORD PTR [edx+0x1]
  427b1c:	add    BYTE PTR [edi+0x13],0x66
  427b20:	mov    edi,0xf6000f10
  427b25:	xor    al,0x85
  427b27:	sbb    eax,0xffc6e3fd
  427b2c:	ds and ah,ah
  427b2f:	or     esp,DWORD PTR [ebp-0x2e79a3cc]
  427b35:	cwde   
  427b36:	dec    ebx
  427b37:	xchg   DWORD PTR [esi],edx
  427b39:	mov    edi,0x88c6f1fb
  427b3e:	fcomi  st,st(7)
  427b40:	mov    esi,0xeb008808
  427b45:	lock push es
  427b47:	xchg   esp,ebx
  427b49:	fadd   QWORD PTR [edx+0x3f]
  427b4c:	jmp    0x6c6b1766
  427b51:	and    ecx,DWORD PTR [edi]
  427b53:	das    
  427b54:	mov    al,ds:0xde13d116
  427b59:	jb     0x427bc8
  427b5b:	add    ecx,ebp
  427b5d:	lock fstp TBYTE PTR [ecx-0x2b]
  427b61:	add    BYTE PTR [eax],al
  427b63:	add    bh,dh
  427b65:	ror    DWORD PTR ds:0x390bb162,1
  427b6b:	and    ebx,esi
  427b6d:	rol    BYTE PTR ds:0x8927b172,cl
  427b73:	out    0x4f,al
  427b75:	ss add ecx,ebp
  427b78:	lock add DWORD PTR [ebp-0x7],0xffffffcd
  427b7d:	inc    ebp
  427b7e:	je     0x427b6b
  427b80:	pop    ss
  427b81:	movq   QWORD PTR [edi+0x6c0b5ff4],mm7
  427b88:	xchg   ecx,eax
  427b89:	push   es
  427b8a:	add    cl,ch
  427b8c:	std    
  427b8d:	enter  0x2f07,0xb1
  427b91:	pop    es
  427b92:	add    DWORD PTR [edi+0x6b],ebx
  427b95:	inc    edi
  427b96:	aas    
  427b97:	jmp    0xc58709de
  427b9c:	hlt    
  427b9d:	pop    edi
  427b9e:	adc    eax,0x3ff15a00
  427ba3:	add    BYTE PTR [ebp+0x56],cl
  427ba6:	adc    ecx,DWORD PTR [ebp-0xcc046a]
  427bac:	(bad)  
  427bad:	or     edx,DWORD PTR [eax-0x1]
  427bb0:	xchg   esi,eax
  427bb1:	es and al,0x8d
  427bb4:	(bad)  
  427bb5:	es inc esp
  427bb7:	inc    DWORD PTR ds:0x2dfe74bb
  427bbd:	lock dec ebp
  427bbf:	mov    dh,al
  427bc1:	ud0    ebp,DWORD PTR es:[ecx-0x24]
  427bc6:	cs call 0xa3427bcc
  427bcc:	(bad)  
  427bcd:	idiv   bh
  427bcf:	xchg   ecx,eax
  427bd0:	xlat   BYTE PTR ds:[ebx]
  427bd1:	jp     0x427bd1
  427bd3:	dec    ebp
  427bd4:	pusha  
  427bd5:	jg     0x427b63
  427bd7:	fild   DWORD PTR [esi]
  427bd9:	add    BYTE PTR [eax+0xb26fe],al
  427bdf:	mov    ebp,0xca0190da
  427be4:	push   es
  427be5:	arpl   si,si
  427be7:	mov    ds:0x96243501,al
  427bec:	inc    ecx
  427bed:	sti    
  427bee:	mov    WORD PTR [esi],ss
  427bf0:	daa    
  427bf1:	and    al,0x50
  427bf3:	add    al,0x48
  427bf5:	(bad)  
  427bf6:	dec    DWORD PTR [ebp+0x15]
  427bf9:	call   0xf7301706
  427bfe:	lea    edi,[esi-0x6]
  427c01:	sub    edx,DWORD PTR [ecx+0x23]
  427c04:	call   0x162:0x501241f
  427c0b:	push   0xffffffbe
  427c0d:	les    eax,FWORD PTR [edx]
  427c0f:	int    0xec
  427c11:	mov    BYTE PTR [esi+eiz*4-0x2],al
  427c15:	add    BYTE PTR [esi+0x6a],0xdb
  427c19:	inc    ebx
  427c1a:	and    al,0xf3
  427c1c:	aaa    
  427c1d:	jp     0x427c61
  427c1f:	pop    es
  427c20:	cmp    eax,0x4baf894a
  427c25:	and    edi,DWORD PTR [ecx]
  427c27:	scas   eax,DWORD PTR es:[edi]
  427c28:	inc    ebx
  427c29:	pop    ds
  427c2a:	or     ebp,DWORD PTR [edi-0x37]
  427c2d:	(bad)  
  427c2e:	inc    DWORD PTR [eax]
  427c30:	add    BYTE PTR [eax],al
  427c32:	repz mov edx,0x201323ba
  427c38:	pop    esp
  427c39:	adc    BYTE PTR [ecx+edi*1],dh
  427c3c:	imul   eax,DWORD PTR [ebx+esi*1-0xc6a849f],0xd265ff6f
  427c47:	inc    eax
  427c48:	xor    eax,ebp
  427c4a:	fisubr WORD PTR [esi+0x68]
  427c4d:	sti    
  427c4e:	js     0x427be8
  427c50:	sub    eax,0xe13687f7
  427c55:	cmp    ah,dl
  427c57:	sti    
  427c58:	cmc    
  427c59:	cli    
  427c5a:	addr16 inc esp
  427c5c:	sub    edi,ebx
  427c5e:	pop    edi
  427c5f:	dec    esp
  427c60:	sub    edx,DWORD PTR [ebx-0x35]
  427c63:	loop   0x427c25
  427c65:	call   esp
  427c67:	clc    
  427c68:	pop    ebx
  427c69:	sbb    al,0x39
  427c6b:	fisubr DWORD PTR [eax-0x5]
  427c6e:	aas    
  427c6f:	dec    esp
  427c70:	pop    ds
  427c71:	xchg   DWORD PTR [edi],esi
  427c73:	inc    esp
  427c74:	pop    ss
  427c75:	dec    edi
  427c76:	retf   
  427c77:	fistp  QWORD PTR [edi-0x6]
  427c7a:	lods   al,BYTE PTR ds:[esi]
  427c7b:	(bad)  
  427c7c:	mov    edi,0x44f50b23
  427c81:	je     0x427cc7
  427c83:	js     0x427c89
  427c85:	adc    bl,dh
  427c87:	outs   dx,DWORD PTR ds:[esi]
  427c88:	jbe    0x427cce
  427c8a:	xlat   BYTE PTR ds:[ebx]
  427c8b:	cmp    edx,DWORD PTR [edi-0x3b]
  427c8e:	cmp    dl,BYTE PTR [edx]
  427c90:	imul   eax,DWORD PTR [edi+0x746c547b],0xb9000000
  427c9a:	push   es
  427c9b:	je     0x427c5d
  427c9d:	adc    bl,bh
  427c9f:	mov    eax,0xccd269d0
  427ca4:	and    esi,DWORD PTR [eax]
  427ca6:	add    DWORD PTR [ecx+0x206f303],edi
  427cac:	bts    ebx,esi
  427caf:	test   al,0x3
  427cb1:	outs   dx,BYTE PTR ds:[esi]
  427cb2:	inc    esi
  427cb3:	jge    0x427cc2
  427cb5:	je     0x427c78
  427cb7:	loopne 0x427ce5
  427cb9:	je     0x427c8d
  427cbb:	cmc    
  427cbc:	loope  0x427ca9
  427cbe:	(bad)  
  427cbf:	push   esp
  427cc0:	cli    
  427cc1:	sub    edx,edx
  427cc3:	or     al,0x30
  427cc5:	sbb    dl,dl
  427cc7:	add    al,0x30
  427cc9:	ret    
  427cca:	outs   dx,BYTE PTR ds:[esi]
  427ccb:	or     cl,al
  427ccd:	or     al,0x59
  427ccf:	adc    bl,BYTE PTR [ebx+ecx*2-0x31]
  427cd3:	mov    dl,0x68
  427cd5:	clc    
  427cd6:	rol    DWORD PTR [esp+ecx*1],1
  427cd9:	or     ebp,DWORD PTR [ecx+0x58e86a30]
  427cdf:	adc    eax,0x4b6f1320
  427ce4:	mov    edx,0xef8a58da
  427ce9:	adc    BYTE PTR [edi],ch
  427ceb:	xchg   ecx,eax
  427cec:	xchg   BYTE PTR [edx],bh
  427cee:	pop    ecx
  427cef:	jp     0x427d6d
  427cf1:	das    
  427cf2:	and    edi,DWORD PTR [ecx+0x5dff317a]
  427cf8:	mov    edi,0xc1701310
  427cfd:	add    BYTE PTR [eax],al
  427cff:	add    BYTE PTR [eax],cl
  427d01:	mov    WORD PTR [ebx+0x525f2407],fs
  427d07:	out    dx,eax
  427d08:	sub    al,0x2c
  427d0a:	mov    ds:0xbd5f6c23,eax
  427d0f:	sub    ecx,DWORD PTR [edx+ebx*8]
  427d12:	lock add edi,esi
  427d15:	hlt    
  427d16:	inc    eax
  427d18:	lock idiv bh
  427d1b:	call   0xe9628468
  427d20:	lock outs dx,BYTE PTR ds:[esi]
  427d22:	inc    ebx
  427d23:	sbb    ebx,ebx
  427d25:	pop    ebx
  427d26:	mov    DWORD PTR [esp+eiz*2+0x5bdd7d1f],ebp
  427d2d:	sbb    bh,BYTE PTR [ebp-0xb]
  427d30:	ja     0x427d0c
  427d32:	pop    es
  427d33:	jmp    0xafc9868c
  427d38:	call   0x240bc294
  427d3d:	enter  0x5cfa,0x2f
  427d41:	pusha  
  427d42:	xor    DWORD PTR [eax],0xffffff8d
  427d45:	pop    ebx
  427d46:	add    DWORD PTR [edi-0x29],edx
  427d49:	jg     0x427d90
  427d4b:	stc    
  427d4c:	jae    0x427d95
  427d4e:	je     0x427d3b
  427d50:	(bad)  
  427d51:	push   ds
  427d52:	ret    
  427d53:	and    eax,0xe900f2d3
  427d58:	lock push es
  427d5a:	push   0x17b4dd
  427d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d60:	add    dl,BYTE PTR [edi+0xe]
  427d63:	sub    DWORD PTR [eax],eax
  427d65:	add    BYTE PTR [eax],al
  427d67:	out    dx,eax
  427d68:	jg     0x427dae
  427d6a:	int    0xec
  427d6c:	mov    ebx,0x62583259
  427d71:	pop    ebp
  427d72:	stos   DWORD PTR es:[edi],eax
  427d73:	jecxz  0x427d7b
  427d75:	cmp    ch,0xe4
  427d78:	pop    es
  427d79:	add    ch,bh
  427d7b:	jmp    0x107f1db
  427d80:	outs   dx,DWORD PTR ds:[esi]
  427d81:	or     esi,DWORD PTR [eax+0x5f7f5c16]
  427d87:	or     al,0xd3
  427d89:	or     al,0x88
  427d8b:	rol    DWORD PTR [edx+0x3f],cl
  427d8e:	jmp    0x6ad34c
  427d93:	fadd   QWORD PTR [esi+0x1]
  427d96:	add    al,0x9a
  427d98:	test   BYTE PTR [esp-0x62],ah
  427d9c:	add    ebp,DWORD PTR [eax-0x1c]
  427d9f:	je     0x427da4
  427da1:	add    bh,bh
  427da3:	outs   dx,DWORD PTR ds:[esi]
  427da4:	test   DWORD PTR [ecx],0xb3bc5a40
  427daa:	push   ebp
  427dab:	sar    DWORD PTR [esi+0x345aec7a],1
  427db1:	gs inc esp
  427db3:	ins    BYTE PTR es:[edi],dx
  427db4:	(bad)  
  427db6:	call   0x3c17d0
  427dbb:	rol    DWORD PTR [ebp+0x3],1
  427dbe:	(bad)  
  427dbf:	dec    esp
  427dc0:	add    al,BYTE PTR [eax]
  427dc2:	add    BYTE PTR [edx],bl
  427dc4:	fidivr DWORD PTR ds:0x73e08f04
  427dca:	xor    eax,DWORD PTR [eax]
  427dcc:	add    BYTE PTR [eax],al
  427dce:	cmp    al,0xc4
  427dd0:	add    BYTE PTR [ebp-0x16],dh
  427dd3:	xor    ebx,0x4
  427dd6:	int3   
  427dd7:	or     eax,DWORD PTR [ecx+0x7402a23f]
  427ddd:	add    BYTE PTR [edi-0x4f142f0d],bh
  427de3:	add    al,BYTE PTR [ebx+0x53]
  427de6:	sub    eax,0x2488fb31
  427deb:	dec    edi
  427dec:	jecxz  0x427dbb
  427dee:	pop    edx
  427def:	in     al,dx
  427df0:	imul   bl
  427df2:	loop   0x427dc3
  427df4:	cmp    bh,bh
  427df6:	in     eax,dx
  427df7:	sar    DWORD PTR ds:0x850b620c,cl
  427dfd:	inc    BYTE PTR [ebp-0x4f]
  427e00:	add    DWORD PTR [ebp+0x50504ed4],ecx
  427e06:	inc    edx
  427e07:	pop    esp
  427e08:	idiv   dh
  427e0a:	inc    ebp
  427e0b:	sar    DWORD PTR ds:0x3ee2f308,cl
  427e11:	jne    0x427dff
  427e13:	icebp  
  427e14:	inc    ebx
  427e15:	jmp    0x41dea0
  427e1a:	jbe    0x427dca
  427e1c:	or     edx,DWORD PTR [eax+0x76]
  427e1f:	sbb    eax,0x604e84f2
  427e24:	(bad)  
  427e25:	(bad)  
  427e26:	fild   DWORD PTR [eax-0x1]
  427e29:	push   DWORD PTR [ebx-0xb]
  427e2c:	out    dx,eax
  427e2d:	pop    es
  427e2e:	dec    ebx
  427e2f:	mov    ch,0xfe
  427e31:	cli    
  427e32:	add    BYTE PTR [eax],al
  427e34:	add    BYTE PTR [ebp+ebx*4+0x7c],dl
  427e38:	inc    edx
  427e39:	jecxz  0x427e15
  427e3b:	mov    edi,0xbfe2a3fb
  427e40:	out    dx,eax
  427e41:	mov    ds:0xbefb1889,eax
  427e46:	cmp    al,BYTE PTR [di+0x2f]
  427e4a:	push   edi
  427e4b:	(bad)  
  427e4c:	push   ebx
  427e4e:	xor    al,0xb
  427e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e51:	push   es
  427e52:	and    BYTE PTR [edi+edi*2],al
  427e55:	sbb    ebx,DWORD PTR [edi-0x16]
  427e58:	adc    ecx,edx
  427e5a:	and    ch,BYTE PTR [eax+0x72]
  427e5d:	hlt    
  427e5e:	(bad)  
  427e60:	out    dx,eax
  427e61:	mov    ds:0x767ee912,eax
  427e66:	mov    ds:0xd79f7500,eax
  427e6b:	mov    ecx,0x242d7617
  427e70:	push   eax
  427e71:	dec    ebx
  427e72:	pop    edi
  427e73:	(bad)  
  427e74:	push   DWORD PTR [ebx-0x7c]
  427e77:	jmp    0x427e80
  427e79:	(bad)  
  427e7b:	add    edi,ebx
  427e7d:	(bad)  
  427e7e:	(bad)  
  427e7f:	mov    ecx,0x1422681b
  427e84:	lea    ebp,[ebx]
  427e86:	in     eax,0x7e
  427e88:	stc    
  427e89:	lods   al,BYTE PTR ds:[esi]
  427e8a:	push   es
  427e8b:	(bad)  
  427e8c:	cmc    
  427e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e8e:	fsub   st(3),st
  427e90:	js     0x427ec0
  427e92:	add    ebp,DWORD PTR [ebx+edi*1+0x1f]
  427e96:	or     eax,0xb660
  427e9b:	add    al,dl
  427e9d:	jg     0x427e4a
  427e9f:	sbb    ecx,DWORD PTR ds:0xf4ef39f3
  427ea5:	pop    esi
  427ea6:	inc    ecx
  427ea7:	data16 jns 0x427eff
  427eaa:	pop    esi
  427eab:	dec    esp
  427eac:	jbe    0x427edf
  427eae:	popf   
  427eaf:	int    0xd2
  427eb1:	mov    esi,ebx
  427eb3:	add    esp,edi
  427eb5:	mov    dh,0x7e
  427eb7:	push   es
  427eb8:	pop    eax
  427eb9:	fneni(8087 only) 
  427ebb:	pop    ebx
  427ebc:	cmp    eax,0x6e650354
  427ec1:	inc    esi
  427ec2:	jne    0x427eeb
  427ec4:	ror    DWORD PTR [ecx+0x1cbf03b1],1
  427eca:	pusha  
  427ecb:	(bad)  
  427ecc:	fdivr  DWORD PTR [edi+0x2b]
  427ecf:	xor    al,0xc
  427ed1:	adc    dl,bl
  427ed3:	out    dx,al
  427ed4:	hlt    
  427ed5:	pop    esi
  427ed6:	sub    ah,BYTE PTR [esi+0x19]
  427ed9:	push   ebp
  427eda:	pusha  
  427edb:	mov    ebp,0xc2b4cfc
  427ee0:	repz popa 
  427ee2:	jl     0x427e67
  427ee4:	jle    0x427f3c
  427ee6:	sub    dh,ch
  427ee8:	outs   dx,DWORD PTR ds:[esi]
  427ee9:	and    ebp,DWORD PTR [edx+0x2488e864]
  427eef:	push   0x206405e4
  427ef4:	fcom   DWORD PTR [edx+edx*4+0x3d]
  427ef8:	xor    edi,ebp
  427efa:	call   0x8296c159
  427eff:	add    BYTE PTR fs:[eax],al
  427f02:	add    BYTE PTR [ebx],ah
  427f04:	pop    edi
  427f05:	pop    edi
  427f06:	mov    esp,0x1a0054ba
  427f0b:	pop    ss
  427f0c:	jnp    0x427f51
  427f0e:	outs   dx,DWORD PTR ds:[esi]
  427f0f:	pop    ss
  427f10:	pop    edi
  427f11:	and    DWORD PTR [edx+0xe],ebx
  427f14:	push   eax
  427f15:	mov    DWORD PTR [edi-0x4dfe5b50],esp
  427f1b:	fst    DWORD PTR [esp+ecx*1-0x13724217]
  427f22:	push   0x24
  427f24:	dec    edi
  427f25:	jg     0x427f74
  427f27:	xchg   esp,eax
  427f28:	lea    eax,[ebp-0x23]
  427f2b:	mov    ds:0x202e52b6,eax
  427f30:	mov    WORD PTR [ebp-0x7],es
  427f33:	iret   
  427f34:	push   ss
  427f35:	xchg   DWORD PTR [esp+eiz*2+0x73e17551],esp
  427f3c:	dec    esp
  427f3d:	sti    
  427f3e:	(bad)  
  427f3f:	fld    DWORD PTR [ecx+0x7f7ccd74]
  427f45:	pop    esp
  427f46:	lds    edx,FWORD PTR [eax]
  427f48:	pop    edi
  427f49:	ins    BYTE PTR es:[edi],dx
  427f4a:	not    eax
  427f4c:	dec    edi
  427f4d:	test   BYTE PTR [ecx],ch
  427f4f:	daa    
  427f50:	mov    BYTE PTR [edx],bl
  427f52:	jmp    0x427f44
  427f54:	push   es
  427f55:	xchg   DWORD PTR [edi+ebp*8],esp
  427f58:	pop    esi
  427f59:	pop    esi
  427f5a:	fcom   QWORD PTR [eax-0x24da77b1]
  427f60:	inc    DWORD PTR [esi+0x4c6c3faf]
  427f66:	add    BYTE PTR [eax],0x0
  427f69:	add    BYTE PTR [eax-0x34d276b1],dl
  427f6f:	out    dx,al
  427f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f71:	call   0x21aa7a3a
  427f76:	and    BYTE PTR [edi],al
  427f78:	add    BYTE PTR [esi+0x290e27da],bl
  427f7e:	out    dx,eax
  427f7f:	shl    DWORD PTR [ebx-0x3b],cl
  427f82:	les    edx,FWORD PTR [ebx-0x18]
  427f85:	add    BYTE PTR [edi+0x9],bl
  427f88:	add    BYTE PTR [eax],al
  427f8a:	and    cl,BYTE PTR ds:0xa488407
  427f90:	add    BYTE PTR [eax],al
  427f92:	sbb    DWORD PTR [edi+0x1f],ebx
  427f95:	adc    BYTE PTR [edx-0x2bb91204],bl
  427f9b:	ds pop ds
  427f9d:	push   cs
  427f9e:	mov    esi,edx
  427fa0:	jae    0x427fc6
  427fa2:	mov    esi,0x3e8b452e
  427fa7:	sub    edi,DWORD PTR [eax-0x7d]
  427faa:	mov    bl,0xb
  427fac:	add    BYTE PTR [edx+ecx*2+0x76],dh
  427fb0:	inc    esp
  427fb1:	and    al,0x9a
  427fb3:	jbe    0x428031
  427fb5:	and    al,0x36
  427fb7:	fbld   TBYTE PTR [ebx-0x7c180238]
  427fbd:	shl    BYTE PTR [esi-0x13],0x8c
  427fc1:	inc    esp
  427fc2:	test   DWORD PTR ss:[edi-0x18],0xfffb3005
  427fca:	cmp    eax,0x281f3b
  427fcf:	add    BYTE PTR [eax],al
  427fd1:	repnz or eax,0xe81dfe3e
  427fd7:	jae    0x427ffd
  427fd9:	or     ch,al
  427fdb:	adc    al,0xa0
  427fdd:	sbb    BYTE PTR [edi-0x5],al
  427fe0:	mov    al,dh
  427fe2:	push   ds
  427fe3:	sub    al,0x89
  427fe5:	(bad)  
  427fe6:	push   ds
  427fe7:	adc    BYTE PTR [ebp-0x76f3c4a6],al
  427fed:	(bad)  
  427fee:	push   ds
  427fef:	adc    al,0xeb
  427ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ff2:	mov    bh,BYTE PTR [esp-0x33]
  427ff6:	push   es
  427ff7:	jne    0x428000
  427ff9:	xchg   esp,eax
  427ffa:	dec    edx
  427ffb:	pop    ds
  427ffc:	push   cs
  427ffd:	retf   0x4de1
  428000:	push   0xfffffff3
  428002:	ds nop
  428004:	jl     0x42801d
  428006:	dec    eax
  428007:	mov    bh,0xe7
  428009:	nop
  42800a:	jmp    0x428069
  42800c:	sti    
  42800d:	push   0x3314eb9b
  428012:	pusha  
  428013:	out    0xff,eax
  428015:	lods   al,BYTE PTR ds:[esi]
  428016:	pusha  
  428017:	lahf   
  428018:	dec    edi
  428019:	js     0x42803c
  42801b:	scas   eax,DWORD PTR es:[edi]
  42801c:	cli    
  42801d:	es pop eax
  42801f:	pop    esi
  428020:	ror    BYTE PTR [ecx],cl
  428022:	add    al,0x91
  428024:	jl     0x427ffd
  428026:	(bad)  
  428027:	mov    ebx,0x5deb70e7
  42802c:	sti    
  42802d:	cmp    BYTE PTR [eax-0x1],ah
  428030:	push   DWORD PTR [ebx+0x6d]
  428033:	in     eax,dx
  428034:	cli    
  428035:	add    BYTE PTR [eax],al
  428037:	add    BYTE PTR [eax+0x29],bh
  42803a:	scas   eax,DWORD PTR es:[edi]
  42803b:	cli    
  42803c:	ficom  WORD PTR [edi+0x5e]
  42803f:	ror    cl,cl
  428041:	dec    ecx
  428042:	nop
  428043:	jl     0x428054
  428045:	dec    eax
  428046:	mov    bh,0xe7
  428048:	aam    0xe2
  42804a:	pop    ebp
  42804b:	sti    
  42804c:	mov    al,ds:0x34875e75
  428051:	jo     0x4280b1
  428053:	jne    0x428040
  428055:	pop    eax
  428056:	cmp    BYTE PTR [edi+0x38],bh
  428059:	popa   
  42805a:	mov    eax,ds:0x41d2f0c
  42805f:	push   ebx
  428060:	sbb    al,0x5b
  428062:	imul   ecx,DWORD PTR [esi],0xffffffb3
  428065:	pop    edi
  428066:	jg     0x4280e4
  428068:	xlat   BYTE PTR ds:[ebx]
  428069:	xor    edi,edi
  42806b:	or     ch,BYTE PTR [edi-0x21]
  42806e:	add    eax,DWORD PTR [eax]
  428070:	repz aam 0xd2
  428073:	pop    es
  428074:	or     esi,DWORD PTR [edi]
  428076:	dec    esi
  428077:	sti    
  428078:	in     al,dx
  428079:	push   esp
  42807a:	inc    esp
  42807b:	jne    0x428076
  42807d:	push   es
  42807e:	cmp    ebp,DWORD PTR [esi+eiz*1+0x58]
  428082:	call   0x75ed:0x1d461c61
  428089:	push   esi
  42808a:	dec    eax
  42808b:	sub    BYTE PTR [edi-0x3d13173b],ch
  428091:	push   ds
  428092:	jp     0x42806c
  428094:	add    al,0xf7
  428096:	pop    ebp
  428097:	enter  0xfadc,0x80
  42809b:	sbb    DWORD PTR [eax],eax
  42809d:	add    BYTE PTR [eax],al
  42809f:	scas   al,BYTE PTR es:[edi]
  4280a0:	push   ecx
  4280a1:	bound  esp,QWORD PTR [ebx+0x3a64ad7]
  4280a7:	cwde   
  4280a8:	(bad)  
  4280aa:	sti    
  4280ab:	xchg   esp,eax
  4280ac:	add    eax,0xa78861a3
  4280b1:	or     eax,0x6606bc48
  4280b6:	call   0xa32b6fad
  4280bb:	pop    ss
  4280bc:	dec    ebx
  4280bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280be:	add    esp,esp
  4280c0:	jmp    0x47c5:0xa7f323ea
  4280c7:	adc    al,0x7
  4280c9:	pusha  
  4280ca:	shl    dl,0xf2
  4280cd:	inc    edi
  4280ce:	sub    BYTE PTR [edi],ch
  4280d0:	(bad)
  4280d3:	scas   eax,DWORD PTR es:[edi]
  4280d4:	sub    al,BYTE PTR [ecx-0x26f75876]
  4280da:	mov    ds:0x3a64ad7,al
  4280df:	ins    BYTE PTR es:[edi],dx
  4280e0:	ret    0xe00c
  4280e3:	imul   eax,edx,0xffffffe2
  4280e6:	not    DWORD PTR [ebx+0x2a]
  4280e9:	lods   eax,DWORD PTR ds:[esi]
  4280ea:	les    ecx,FWORD PTR [esp+edi*2]
  4280ed:	sbb    eax,0x357fe328
  4280f2:	or     dl,bh
  4280f4:	pop    ebp
  4280f5:	or     DWORD PTR [ecx+0x7f],esp
  4280f8:	sub    al,BYTE PTR [eax]
  4280fa:	xor    DWORD PTR [esi-0x75],edi
  4280fd:	and    al,0x69
  4280ff:	lock push es
  428101:	add    BYTE PTR [ecx+0x27000000],dl
  428107:	dec    ebx
  428108:	sti    
  428109:	sahf   
  42810a:	outs   dx,DWORD PTR ds:[esi]
  42810b:	shl    DWORD PTR [ebx],cl
  42810d:	stc    
  42810e:	lock fimul DWORD PTR [eax]
  428111:	mov    ds,WORD PTR [esp+0x52479110]
  428118:	cli    
  428119:	jle    0x428196
  42811b:	dec    ebp
  42811c:	adc    eax,0x10a679
  428121:	sub    ch,0x8b
  428124:	or     al,0x2d
  428126:	mov    bh,0x50
  428128:	cmc    
  428129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42812a:	int3   
  42812b:	out    dx,al
  42812c:	add    ebx,ebp
  42812e:	dec    ebx
  42812f:	mov    DWORD PTR [ebp+eax*1-0x65],eax
  428133:	mov    DWORD PTR [ebp-0x27],ecx
  428136:	imul   eax,DWORD PTR [esi],0xdecca587
  42813c:	xchg   BYTE PTR [esp+eiz*2-0x2c17774b],ah
  428143:	stc    
  428144:	jmp    0x428141
  428146:	xor    BYTE PTR [eax-0x7a],dl
  428149:	xchg   esp,eax
  42814a:	call   0xd35bc7ad
  42814f:	dec    ebx
  428150:	aaa    
  428151:	sub    bl,BYTE PTR ds:0x4a11520a
  428157:	pusha  
  428158:	sti    
  428159:	(bad)  
  42815a:	fmul   DWORD PTR [edi+0x577fc874]
  428160:	mov    eax,ds:0xfacc5
  428165:	push   edx
  428166:	lds    ebx,FWORD PTR [esi]
  428168:	sti    
  428169:	push   ebp
  42816a:	add    BYTE PTR [eax],al
  42816c:	add    ch,ch
  42816e:	add    ch,al
  428170:	das    
  428171:	cmp    cl,BYTE PTR [esi-0x5]
  428174:	bound  edi,QWORD PTR [ebx]
  428176:	and    al,0x64
  428178:	add    BYTE PTR [ecx-0x363bdc0b],al
  42817e:	or     cl,BYTE PTR [ecx+0x4effd444]
  428184:	(bad)  
  428185:	mov    edi,0xca4009b3
  42818a:	jbe    0x4281d0
  42818c:	and    al,0xa
  42818e:	jecxz  0x42817b
  428190:	ret    
  428191:	gs scas eax,DWORD PTR es:[edi]
  428193:	add    BYTE PTR [esi+ebp*4+0x57],0x56
  428198:	pop    esi
  428199:	adc    DWORD PTR [ebp+eiz*8+0x5d],edi
  42819d:	mov    BYTE PTR [edx-0x5],bl
  4281a0:	push   esp
  4281a1:	adc    edi,edx
  4281a3:	out    0xcb,eax
  4281a5:	or     DWORD PTR [ecx+0x2eca84f6],esi
  4281ab:	cmp    edx,DWORD PTR [esi-0x7]
  4281ae:	mov    eax,0x378a7538
  4281b3:	push   ss
  4281b4:	cmp    DWORD PTR [edi-0x5de58c01],ebx
  4281ba:	add    eax,DWORD PTR [eax]
  4281bc:	add    BYTE PTR [edx-0x51],ch
  4281bf:	je     0x4281d1
  4281c1:	and    eax,0x9fff072e
  4281c6:	sti    
  4281c7:	not    BYTE PTR ds:0x3b4e9e
  4281cd:	jecxz  0x4281fc
  4281cf:	or     ecx,DWORD PTR [ecx+0x6f000000]
  4281d5:	dec    DWORD PTR [ebp+eax*2+0x458c9342]
  4281dc:	push   ds
  4281dd:	xchg   ebx,eax
  4281de:	push   ecx
  4281df:	(bad)  
  4281e0:	mov    edi,0xf2c92afb
  4281e5:	call   0xf87a:0x9115fffc
  4281ec:	adc    eax,0x355cfe2e
  4281f1:	push   ds
  4281f2:	mov    BYTE PTR ds:0x5d041df3,dl
  4281f8:	xor    DWORD PTR [ecx-0x1],ebx
  4281fb:	push   esp
  4281fc:	push   0xa0746739
  428201:	(bad)  
  428202:	pop    edx
  428203:	test   BYTE PTR [ebx+0x2051c40c],dh
  428209:	xchg   esi,eax
  42820a:	sbb    al,0x75
  42820c:	add    ebp,esp
  42820e:	cli    
  42820f:	cmp    BYTE PTR [esi+0x5c],bl
  428212:	rcl    DWORD PTR ds:0xffff605b,cl
  428218:	xchg   ebx,eax
  428219:	jge    0x4281f3
  42821b:	bsf    ecx,DWORD PTR [ebx+0xb]
  42821f:	sti    
  428220:	ds pop eax
  428222:	pop    edx
  428223:	adc    eax,0xffbf2b1f
  428228:	jnp    0x42827d
  42822a:	out    dx,eax
  42822b:	mov    BYTE PTR [esi],ah
  42822d:	push   esp
  42822e:	nop
  42822f:	inc    ebp
  428230:	sti    
  428231:	(bad)  
  428232:	nop
  428233:	inc    ebp
  428234:	out    0x8f,eax
  428236:	mov    ch,0xfa
  428238:	add    BYTE PTR [eax],al
  42823a:	add    dh,bh
  42823c:	addr16 push cs
  42823e:	leave  
  42823f:	mov    eax,edi
  428241:	pop    edx
  428242:	sti    
  428243:	je     0x4282b3
  428245:	jle    0x42823f
  428247:	ins    BYTE PTR es:[edi],dx
  428248:	mov    eax,DWORD PTR [edx]
  42824a:	pop    ebp
  42824b:	add    eax,DWORD PTR fs:[ebp+edx*1-0x423fa04d]
  428253:	call   FWORD PTR [edi-0x48]
  428256:	xchg   BYTE PTR [edi-0x1f],bl
  428259:	(bad)  
  42825a:	clc    
  42825b:	jo     0x4282a9
  42825d:	sub    dl,BYTE PTR [edx+0x4b]
  428260:	cs scas al,BYTE PTR es:[edi]
  428262:	stc    
  428263:	xor    al,0xe4
  428265:	ds je  0x42820e
  428268:	nop
  428269:	push   ebp
  42826a:	data16 fld TBYTE PTR [edx+0x6ef23c2]
  428271:	and    bh,dl
  428273:	call   0xbcf8764b
  428278:	dec    ebp
  428279:	cld    
  42827a:	pop    ss
  42827b:	loope  0x428243
  42827d:	call   0xaa3dba02
  428282:	enter  0xfed0,0x10
  428286:	add    al,0xf3
  428288:	push   es
  428289:	mov    esi,0xdcd3e811
  42828e:	mov    bl,0xd4
  428290:	loope  0x4282be
  428292:	pop    esi
  428293:	fmul   DWORD PTR [edi]
  428295:	adc    eax,0xccd2e728
  42829a:	sbb    bh,BYTE PTR [edi]
  42829c:	and    edi,ecx
  42829e:	xlat   BYTE PTR ds:[ebx]
  42829f:	add    BYTE PTR [eax],al
  4282a1:	add    dl,bl
  4282a3:	fsubp  st(0),st
  4282a5:	add    esi,ebx
  4282a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282a8:	jp     0x428282
  4282aa:	shr    dh,1
  4282ac:	jno    0x428286
  4282ae:	shr    dh,1
  4282b0:	imul   edx,edi,0xb7fc4df4
  4282b6:	inc    esi
  4282b8:	call   0xf9658a47
  4282bd:	mov    bh,bh
  4282bf:	and    dh,ch
  4282c1:	mov    ?,WORD PTR [edi]
  4282c3:	and    ecx,DWORD PTR [ecx]
  4282c5:	mov    ah,0x67
  4282c7:	ret    0x2404
  4282ca:	ret    
  4282cb:	mov    ah,0x31
  4282cd:	xlat   BYTE PTR ds:[ebx]
  4282ce:	in     al,dx
  4282cf:	sbb    DWORD PTR [eax],esp
  4282d1:	ins    BYTE PTR es:[edi],dx
  4282d2:	aam    0x4a
  4282d4:	and    bl,BYTE PTR [ebp-0x2c]
  4282d7:	dec    esi
  4282d8:	sbb    dl,bh
  4282da:	call   0xfb6a305a
  4282df:	popa   
  4282e0:	out    0x88,al
  4282e2:	mov    dh,0xfa
  4282e4:	add    edi,edx
  4282e6:	fmul   QWORD PTR [ebp+0x74]
  4282e9:	imul   DWORD PTR [ecx]
  4282eb:	sar    edi,cl
  4282ed:	fsub   DWORD PTR [eax+0x50]
  4282f0:	jne    0x4282d3
  4282f2:	mov    edi,0x30fc9ff3
  4282f7:	dec    ebp
  4282f8:	pop    ebp
  4282f9:	jb     0x428290
  4282fb:	stos   DWORD PTR es:[edi],eax
  4282fc:	mov    ebp,0x86b3f0fd
  428301:	mov    ebp,0x6af86273
  428306:	add    BYTE PTR [eax],al
  428308:	add    BYTE PTR [edx+ebx*1-0x453e2eae],al
  42830f:	stc    
  428310:	mov    dh,0x6c
  428312:	inc    edi
  428313:	je     0x428349
  428315:	add    bl,BYTE PTR [ecx+0x66]
  428318:	shl    DWORD PTR [ebp-0x3d],1
  42831b:	and    ebp,ebp
  42831d:	jmp    0xbc5e8ef3
  428322:	mov    dh,0x4f
  428324:	mov    es,ebp
  428326:	sbb    BYTE PTR [edx],dl
  428328:	sub    edi,ebp
  42832a:	retf   
  42832b:	ret    
  42832c:	in     eax,dx
  42832d:	aaa    
  42832e:	ret    
  42832f:	and    esp,ecx
  428331:	fadd   DWORD PTR [esi]
  428333:	add    cl,ch
  428335:	or     ebx,DWORD PTR [ebx+edi*8]
  428338:	fsubr  st(4),st
  42833a:	mov    dh,0xe7
  42833c:	daa    
  42833d:	mov    bl,0x4e
  42833f:	sti    
  428340:	adc    BYTE PTR [ebx-0x2b2aebd8],ch
  428346:	or     eax,0xd87f0d74
  42834b:	sbb    ecx,edx
  42834d:	lock push es
  42834f:	add    BYTE PTR [ecx-0x2edc2d39],cl
  428355:	mov    edi,0xb60123d2
  42835a:	rol    DWORD PTR [edi],1
  42835c:	push   ds
  42835d:	inc    ebp
  42835e:	loopne 0x428374
  428360:	test   eax,0xc5747df0
  428365:	inc    eax
  428366:	jg     0x4283dc
  428368:	add    BYTE PTR [esi],ah
  42836a:	push   esp
  42836b:	mov    WORD PTR [eax+eax*1+0x0],es
  42836f:	add    BYTE PTR [esi],dh
  428371:	sub    BYTE PTR [eax-0x73],dl
  428374:	push   esi
  428375:	and    al,0x20
  428377:	push   eax
  428378:	test   BYTE PTR [ebx-0x4606f78c],ch
  42837e:	out    0xc6,eax
  428380:	adc    DWORD PTR [eax-0x4fdd7c0a],esi
  428386:	je     0x4283a4
  428388:	lahf   
  428389:	inc    esi
  42838a:	pop    ds
  42838b:	or     BYTE PTR [ecx],ah
  42838d:	add    al,0x83
  42838f:	inc    ebp
  428390:	fidiv  WORD PTR [eax+0x359d1874]
  428396:	ud0    esp,DWORD PTR [edi]
  428399:	push   ebx
  42839a:	dec    ebx
  42839b:	push   edi
  42839d:	cli    
  42839e:	not    BYTE PTR ds:0x3b5622
  4283a4:	cld    
  4283a5:	jnp    0x42838c
  4283a7:	pop    ebp
  4283a8:	mov    BYTE PTR [esi-0x5],dl
  4283ab:	push   edx
  4283ac:	aam    0x7b
  4283ae:	je     0x4283d4
  4283b0:	sahf   
  4283b1:	xchg   ebp,eax
  4283b2:	not    BYTE PTR ds:0x3b569e
  4283b8:	adc    DWORD PTR [ebx],ecx
  4283ba:	call   0xf6efdf86
  4283bf:	test   dl,bl
  4283c1:	ss pop ds
  4283c3:	push   edi
  4283c4:	pop    ebp
  4283c5:	inc    bl
  4283c7:	inc    ebx
  4283c8:	mov    bl,BYTE PTR [eax+0x551e15f6]
  4283ce:	cmp    eax,DWORD PTR [eax]
  4283d0:	ret    0xed0e
  4283d3:	inc    DWORD PTR [eax]
  4283d5:	add    BYTE PTR [eax],al
  4283d7:	sbb    eax,0xa6fff884
  4283dc:	push   es
  4283dd:	call   0xf6f2807a
  4283e2:	push   edi
  4283e3:	in     eax,dx
  4283e4:	push   ebp
  4283e5:	jmp    0x4283f9
  4283e7:	repz popf 
  4283e9:	call   FWORD PTR [edx-0x63]
  4283ec:	call   0x5973db33
  4283f1:	call   DWORD PTR [eax+edi*2-0x7]
  4283f5:	imul   edx,DWORD PTR [eax-0x7ba9ac3e],0x33
  4283fc:	shr    DWORD PTR [ebx],1
  4283fe:	das    
  4283ff:	xor    esp,DWORD PTR [esi]
  428401:	ror    DWORD PTR [ebx],0x87
  428404:	call   FWORD PTR [eax*2+0x38f8abe3]
  42840b:	mov    dh,0x51
  42840d:	retf   
  42840e:	pop    ss
  42840f:	mov    ds:0x77556ed,eax
  428414:	fstp   TBYTE PTR [edi-0xbf41bf9]
  42841a:	cli    
  42841b:	data16 sub al,0x67
  42841e:	dec    ecx
  42841f:	fsub   QWORD PTR [ecx+0x69cb7f56]
  428425:	rol    BYTE PTR [edx],1
  428427:	es jno 0x42844a
  42842a:	nop
  42842b:	out    0x1f,al
  42842d:	add    al,0x5d
  42842f:	mov    cl,0x30
  428431:	call   DWORD PTR [eax+edi*2+0x7c]
  428435:	mov    cl,0xe7
  428437:	xor    al,0xef
  428439:	push   ebp
  42843a:	sti    
  42843b:	add    BYTE PTR [eax],al
  42843d:	add    BYTE PTR [eax+0x53],ch
  428440:	add    eax,DWORD PTR [ebx+esi*4-0x7a7ad3d4]
  428447:	xor    al,0x20
  428449:	xchg   DWORD PTR ds:0x7ce804c,ebx
  42844f:	pop    edx
  428450:	mov    BYTE PTR [edx-0x25],al
  428453:	aam    0x6
  428455:	test   DWORD PTR [edx],edi
  428457:	xchg   esp,eax
  428458:	lock cli 
  42845a:	fisubr WORD PTR [ebx]
  42845c:	in     eax,dx
  42845d:	add    bl,al
  42845f:	outs   dx,BYTE PTR ds:[esi]
  428460:	mov    ch,0x8c
  428462:	scas   al,BYTE PTR es:[edi]
  428463:	push   es
  428464:	icebp  
  428465:	imul   esi,esi,0x51
  428468:	sbb    bl,BYTE PTR [edx-0x3c]
  42846b:	dec    esi
  42846c:	adc    dl,al
  42846e:	in     al,dx
  42846f:	dec    ecx
  428470:	xchg   esp,eax
  428471:	out    dx,eax
  428472:	cmp    esp,edx
  428474:	fdiv   DWORD PTR [ecx+0x5af0d429]
  42847a:	(bad)  
  42847b:	jb     0x428459
  42847d:	ret    
  42847e:	sbb    al,0xac
  428480:	mov    eax,DWORD PTR [ebp+0x3]
  428483:	pop    es
  428484:	cmp    al,0x8d
  428486:	pop    ds
  428487:	pop    edi
  428488:	out    0xb2,eax
  42848a:	or     cl,BYTE PTR [edx+0x6d]
  42848d:	inc    esp
  42848e:	xchg   edi,ebp
  428490:	leave  
  428491:	iret   
  428492:	loopne 0x42850f
  428494:	sub    al,0xc
  428496:	push   ebp
  428497:	add    eax,0xdcf8cfba
  42849c:	call   0x9ea4618e
  4284a1:	push   edx
  4284a2:	add    BYTE PTR [eax],al
  4284a4:	add    al,bl
  4284a6:	dec    ecx
  4284a7:	pop    sp
  4284a9:	enter  0xe1d3,0xb6
  4284ad:	leave  
  4284ae:	and    esi,DWORD PTR [ecx-0x11]
  4284b1:	cld    
  4284b2:	push   es
  4284b3:	sub    al,0x46
  4284b5:	jecxz  0x4284bd
  4284b7:	sbb    al,0x8d
  4284b9:	lahf   
  4284ba:	pop    esi
  4284bb:	xchg   edi,eax
  4284bc:	mov    ah,0xaa
  4284be:	dec    ecx
  4284bf:	ins    DWORD PTR es:[edi],dx
  4284c0:	inc    esp
  4284c1:	daa    
  4284c2:	lds    edx,FWORD PTR [edx]
  4284c4:	mov    cl,0x59
  4284c6:	cli    
  4284c7:	sub    al,0xc5
  4284c9:	mov    WORD PTR [eax-0xb6710a7],?
  4284cf:	test   al,0x3
  4284d1:	je     0x4284a6
  4284d3:	loopne 0x428540
  4284d5:	xchg   esp,eax
  4284d6:	pop    edx
  4284d7:	inc    edx
  4284d8:	pop    ecx
  4284d9:	in     al,dx
  4284da:	dec    esi
  4284db:	cmp    dl,al
  4284dd:	or     bl,dh
  4284df:	jmp    FWORD PTR [eax]
  4284e1:	cmovp  eax,DWORD PTR [eax*1+0x6a0009b3]
  4284e9:	das    
  4284ea:	cmc    
  4284eb:	add    BYTE PTR [ebx+edi*8+0x77f94881],dl
  4284f2:	iret   
  4284f3:	add    ebp,ecx
  4284f5:	and    al,0x7
  4284f7:	xchg   DWORD PTR [ecx-0xeba7ff4],ebp
  4284fd:	arpl   WORD PTR [ebp+edx*1-0x7],cx
  428501:	or     DWORD PTR es:[eax],eax
  428504:	mov    ds,WORD PTR [edx-0x56]
  428507:	cli    
  428508:	or     al,0x0
  42850a:	add    BYTE PTR [eax],al
  42850c:	push   ebx
  42850d:	repz aas 
  42850f:	jmp    0xd7930bac
  428514:	fwait
  428515:	add    al,0x55
  428518:	call   0xff4fd19e
  42851d:	pop    esi
  42851e:	mov    ah,0xcf
  428520:	dec    ebx
  428521:	dec    esp
  428522:	sti    
  428523:	or     al,0x73
  428525:	repnz aas 
  428527:	jmp    0xa7926474
  42852c:	sub    eax,DWORD PTR [ebx+0x7ff815c0]
  428532:	dec    esp
  428533:	int    0xe8
  428535:	pop    esi
  428536:	pushf  
  428537:	jg     0x428554
  428539:	dec    esp
  42853a:	sti    
  42853b:	int3   
  42853c:	and    al,0xf2
  42853e:	aas    
  42853f:	jmp    0x6b2f0699
  428544:	(bad)  
  428547:	hlt    
  428548:	mov    ds:0x8cfd7cc9,eax
  42854d:	rcl    DWORD PTR [eax],cl
  42854f:	push   ecx
  428550:	mov    cl,0xb8
  428552:	stc    
  428553:	push   esi
  428554:	cld    
  428555:	inc    esi
  428556:	je     0x428539
  428558:	addr16 mov edx,0x35c2000f
  42855e:	jmp    0xf6d3ab62
  428563:	and    eax,0x3b58d6
  428568:	jg     0x4285e5
  42856a:	in     al,dx
  42856b:	and    esi,0x4d3
  428571:	add    BYTE PTR [eax],al
  428573:	pop    edx
  428574:	xchg   esi,eax
  428575:	dec    esi
  428576:	push   0x3a
  428578:	pop    edx
  428579:	sti    
  42857a:	push   edx
  42857b:	shr    DWORD PTR [ebx+0x566e15f6],1
  428581:	cmp    eax,DWORD PTR [eax]
  428583:	cdq    
  428584:	pop    es
  428585:	or     al,0x80
  428587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428588:	sti    
  428589:	push   DWORD PTR [esi+ebx*2-0x7d]
  42858d:	jge    0x42859b
  42858f:	sbb    bh,BYTE PTR [eax]
  428591:	push   ds
  428592:	test   DWORD PTR ds:0x9fff1a37,esp
  428598:	inc    BYTE PTR [edx+0x4a2432c7]
  42859e:	(bad)  
  42859f:	mov    ch,0x79
  4285a1:	inc    ebp
  4285a2:	cld    
  4285a3:	dec    edi
  4285a4:	ret    
  4285a5:	jne    0x4285b9
  4285a7:	std    
  4285a8:	scas   eax,DWORD PTR es:[edi]
  4285a9:	je     0x4285b7
  4285ab:	mov    dl,0xcf
  4285ad:	inc    eax
  4285ae:	(bad)  
  4285af:	xchg   ebp,eax
  4285b0:	jnp    0x4285a2
  4285b2:	mov    edi,esp
  4285b4:	inc    BYTE PTR [esi+esi*8-0x3fd5c521]
  4285bb:	jae    0x428626
  4285bd:	add    BYTE PTR [eax],al
  4285bf:	call   0x6f3b:0xa245ae00
  4285c6:	push   cs
  4285c7:	shl    BYTE PTR ds:0xfecf8de6,cl
  4285cd:	dec    edi
  4285ce:	push   0x2c3
  4285d3:	and    edx,edi
  4285d5:	mov    WORD PTR [ebp+0x0],es
  4285d8:	add    BYTE PTR [eax],al
  4285da:	repz popa 
  4285dc:	scas   eax,DWORD PTR es:[edi]
  4285dd:	addr16 test eax,0x5bffff5d
  4285e3:	push   0xd464fa69
  4285e8:	push   ebx
  4285e9:	test   DWORD PTR [ebp-0x77],esp
  4285ec:	das    
  4285ed:	xchg   DWORD PTR [esi+0x22e7ad29],ebp
  4285f3:	mov    ss,WORD PTR [ebp-0x5]
  4285f6:	jp     0x42859a
  4285f8:	push   ebx
  4285f9:	test   DWORD PTR [ebx],esi
  4285fb:	jo     0x428604
  4285fd:	push   edx
  4285fe:	dec    ebx
  4285ff:	sti    
  428600:	ret    
  428601:	stc    
  428602:	sub    al,0xf4
  428604:	fwait
  428605:	lea    esp,[esi-0x33]
  428608:	pop    eax
  428609:	sti    
  42860a:	sbb    al,0x5
  42860c:	sbb    edx,DWORD PTR [ecx+0x15]
  42860f:	pop    eax
  428610:	jmp    0x7c1d0614
  428615:	cli    
  428616:	add    al,0x28
  428618:	scas   eax,DWORD PTR es:[edi]
  428619:	xchg   BYTE PTR [esi-0x8bad99f],dh
  42861f:	jecxz  0x428665
  428621:	call   0x465492
  428626:	js     0x428670
  428628:	mov    WORD PTR [ebp-0x21],?
  42862b:	mov    bl,0x51
  42862d:	je     0x4285d4
  42862f:	mov    al,0xd7
  428631:	pop    es
  428632:	repz mov eax,0x443386f9
  428638:	mov    edi,?
  42863a:	inc    eax
  42863b:	aas    
  42863c:	push   edx
  42863d:	xor    eax,DWORD PTR [eax]
  42863f:	add    BYTE PTR [eax],al
  428641:	retf   
  428642:	sar    BYTE PTR [esi+0x6c25acf9],cl
  428648:	pushf  
  428649:	xor    eax,esi
  42864b:	push   ecx
  42864c:	jg     0x428664
  42864e:	mov    esp,0x2b6b67fe
  428653:	(bad)  
  428654:	(bad)  
  428655:	jle    0x42865e
  428657:	ins    BYTE PTR es:[edi],dx
  428658:	sar    DWORD PTR [esi+0x46],cl
  42865b:	pop    edx
  42865c:	jmp    0xf0945cdd
  428661:	rcr    BYTE PTR [ecx+ebp*4],0x3
  428665:	je     0x428633
  428667:	hlt    
  428668:	sub    BYTE PTR [edi],0x13
  42866b:	cdq    
  42866c:	lods   eax,DWORD PTR ds:[esi]
  42866d:	(bad)  
  42866e:	or     BYTE PTR [eax-0x3e],ah
  428671:	in     al,dx
  428672:	xchg   ebx,eax
  428673:	scas   al,BYTE PTR es:[edi]
  428674:	jmp    DWORD PTR [edi+ecx*4+0x765b0796]
  42867b:	mov    ebx,0xac923855
  428680:	push   edi
  428681:	cwde   
  428682:	in     al,0x1f
  428684:	inc    ecx
  428685:	sti    
  428686:	push   es
  428687:	add    cl,ch
  428689:	clc    
  42868a:	cs lahf 
  42868c:	ret    
  42868d:	sbb    al,BYTE PTR [esi+0x7f]
  428690:	repz mov es,WORD PTR [esi]
  428693:	xchg   ebx,eax
  428694:	push   esi
  428695:	out    0xfa,al
  428697:	cli    
  428698:	ret    
  428699:	add    al,0x89
  42869b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42869c:	or     BYTE PTR [ebx*8+0xed0d05d],bh
  4286a3:	pop    esi
  4286a4:	mov    BYTE PTR [eax],0x0
  4286a7:	add    BYTE PTR [eax],ch
  4286a9:	xchg   esp,eax
  4286aa:	sub    eax,esp
  4286ac:	xor    al,0x91
  4286ae:	and    ebx,DWORD PTR [ecx+eax*2]
  4286b1:	das    
  4286b2:	inc    edi
  4286b3:	add    al,0xf3
  4286b5:	push   es
  4286b6:	adc    ebp,DWORD PTR [ebx+eax*1-0x39]
  4286ba:	mov    ds:0x3b471455,al
  4286bf:	inc    edx
  4286c0:	test   DWORD PTR [esi],0xd7c7893c
  4286c6:	aaa    
  4286c7:	mov    ecx,esi
  4286c9:	xchg   ecx,eax
  4286ca:	imul   eax,DWORD PTR [edx+esi*8+0x41b0e906],0xe8fc0046
  4286d5:	xchg   ebx,eax
  4286d6:	pop    ebp
  4286d7:	jno    0x4286f8
  4286d9:	ror    BYTE PTR [ebp-0x3f750f17],cl
  4286df:	aad    0xe2
  4286e1:	inc    ecx
  4286e2:	jne    0x428739
  4286e4:	push   0x48
  4286e6:	sti    
  4286e7:	aam    0xc8
  4286e9:	inc    ecx
  4286ea:	jne    0x4286e1
  4286ec:	fcom   DWORD PTR [eax+0x0]
  4286ef:	jmp    0x31b7c8e4
  4286f4:	push   0x3e
  4286f6:	call   0xfb836d36
  4286fb:	jb     0x428742
  4286fd:	mov    WORD PTR [ebp-0xf],cs
  428700:	imul   eax,DWORD PTR [esi+0x6f0e880],0x53
  428707:	add    DWORD PTR [ecx-0x6c],edi
  42870a:	add    cl,ch
  42870c:	add    BYTE PTR [eax],al
  42870e:	add    BYTE PTR [ebx],al
  428710:	inc    edi
  428711:	test   esi,edi
  428713:	mul    DWORD PTR [ecx+0x4e5b96c0]
  428719:	mov    esi,0x86dbf0e1
  42871e:	aad    0x73
  428720:	xor    dh,BYTE PTR [eax]
  428722:	cmp    ch,BYTE PTR [edx+0x5e]
  428725:	or     ebx,DWORD PTR [edi+0x3651ceb3]
  42872b:	jp     0x428763
  42872d:	je     0x42871f
  42872f:	mov    eax,0x9da705bb
  428734:	inc    eax
  428735:	retw   0x46d4
  428739:	inc    ebp
  42873a:	lods   eax,DWORD PTR ds:[esi]
  42873b:	fsubr  DWORD PTR [edx+0x40b5a5ff]
  428741:	lea    esp,[edi+eax*1]
  428744:	lods   eax,DWORD PTR ds:[esi]
  428745:	inc    DWORD PTR [eax-0x17001c78]
  42874b:	jnp    0x428756
  42874d:	xchg   DWORD PTR [eax],eax
  42874f:	sbb    cl,BYTE PTR [eax-0x7275ffff]
  428755:	dec    ebp
  428756:	sar    bl,1
  428758:	fnstenv [esp+ecx*1+0x1d]
  42875c:	push   ebp
  42875d:	add    ebp,eax
  42875f:	fdiv   QWORD PTR [edi-0x1ffe0001]
  428765:	test   bh,bh
  428767:	xchg   esi,eax
  428768:	xor    eax,0x72b2574a
  42876d:	idiv   bh
  42876f:	lods   eax,DWORD PTR ds:[esi]
  428770:	(bad)  
  428771:	fmul   DWORD PTR [ebx+0x55000000]
  428777:	add    BYTE PTR cs:[ebx-0x75f024f3],cl
  42877e:	sbb    DWORD PTR [edi-0x70ab74cb],ebp
  428784:	add    BYTE PTR [eax-0x72fff7b5],0x8f
  42878b:	or     al,0x51
  42878d:	lea    ecx,[edi-0x5800aef0]
  428793:	(bad)  
  428795:	mov    cl,cl
  428797:	scas   eax,DWORD PTR es:[edi]
  428798:	outs   dx,DWORD PTR ds:[esi]
  428799:	(bad)
  42879d:	rol    BYTE PTR [esi-0x18a09c4],0xc4
  4287a4:	mov    ebp,0x4a42a7ff
  4287a9:	call   0x428fb0
  4287ae:	mov    ebp,0x9a85035d
  4287b3:	pop    es
  4287b4:	xchg   edi,eax
  4287b5:	ret    
  4287b6:	ret    0x3711
  4287b9:	(bad)  
  4287ba:	popf   
  4287bb:	jecxz  0x42877c
  4287bd:	xor    bl,BYTE PTR [edx-0x7ca4a689]
  4287c3:	int3   
  4287c4:	pop    es
  4287c5:	add    BYTE PTR [edi],al
  4287c7:	(bad)  
  4287c8:	jmp    0x42874d
  4287ca:	repz xchg ecx,eax
  4287cc:	dec    esp
  4287cd:	jg     0x42876e
  4287cf:	xor    DWORD PTR [edx-0x2672c3af],esi
  4287d5:	or     ebp,DWORD PTR [eax-0x43]
  4287d8:	jp     0x42881f
  4287da:	add    BYTE PTR [eax],al
  4287dc:	add    BYTE PTR [ebx],al
  4287de:	or     BYTE PTR [ecx*4-0x17e0b5d1],al
  4287e5:	push   0xffffffaa
  4287e7:	dec    esi
  4287e8:	sti    
  4287e9:	push   0x69
  4287eb:	and    ecx,DWORD PTR [esi+ebp*2]
  4287ee:	in     eax,dx
  4287ef:	fadd   DWORD PTR [edi]
  4287f1:	jo     0x4287d8
  4287f3:	dec    esi
  4287f4:	jmp    0x41b541
  4287f9:	outs   dx,BYTE PTR ds:[esi]
  4287fa:	adc    DWORD PTR [edi],0x2f
  4287fd:	cmp    BYTE PTR [edi+esi*2+0x4e5a175c],ah
  428804:	adc    eax,0xffbf3f57
  428809:	in     eax,dx
  42880a:	fcmovne st,st(0)
  42880c:	pop    es
  42880d:	stos   DWORD PTR es:[edi],eax
  42880e:	mov    eax,ds:0xc4a64820
  428813:	add    edx,0x3705b90b
  428819:	mov    bh,0x49
  42881b:	out    0x6e,eax
  42881d:	(bad)  
  42881e:	cmp    al,0xd8
  428820:	or     edi,DWORD PTR [eax+0x6a]
  428823:	out    dx,eax
  428824:	cmp    ch,BYTE PTR [di]
  428827:	(bad)  
  428828:	dec    DWORD PTR [ebx]
  42882a:	push   esi
  42882b:	imul   edi,edx,0x743eb0f4
  428831:	inc    ebx
  428832:	pop    ss
  428833:	out    dx,al
  428834:	or     bh,BYTE PTR [esi+0x70]
  428837:	ja     0x42887d
  428839:	pop    ss
  42883a:	pusha  
  42883b:	pop    edx
  42883c:	sub    al,0x70
  42883e:	jb     0x428837
  428840:	xchg   BYTE PTR [eax],al
  428842:	add    BYTE PTR [eax],al
  428844:	cmc    
  428845:	xor    al,0xc3
  428847:	and    ebp,ebx
  428849:	push   es
  42884a:	push   ss
  42884b:	push   cs
  42884c:	mov    eax,0xccffc4bb
  428851:	mov    ebx,0x8ba8517e
  428856:	test   eax,0xfc41d7d7
  42885b:	push   DWORD PTR [ebp-0x34]
  42885e:	fcomp  st(3)
  428860:	scas   al,BYTE PTR es:[edi]
  428861:	pop    es
  428862:	jmp    0x83b8236a
  428867:	push   ecx
  428868:	mov    BYTE PTR [ebx+0x2edbd729],cl
  42886e:	adc    DWORD PTR [edx+0x78],edx
  428871:	inc    edx
  428872:	mov    edi,0x4cb7ff3
  428877:	lock mov ah,0xd8
  42887a:	inc    ecx
  42887b:	clc    
  42887c:	or     al,0x19
  42887e:	test   eax,0x665e0403
  428883:	inc    edi
  428884:	inc    ebp
  428886:	xchg   ecx,eax
  428887:	push   edx
  428888:	fidiv  WORD PTR [esi]
  42888a:	test   ebx,0x5be8b03c
  428890:	xchg   ebx,eax
  428891:	mov    dl,0xe8
  428893:	add    ebp,DWORD PTR [edx+ebp*4-0x7adb083c]
  42889a:	inc    BYTE PTR [ebx]
  42889c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42889d:	sbb    ebp,DWORD PTR [ecx-0x30]
  4288a0:	in     al,dx
  4288a1:	add    al,0x7c
  4288a3:	jmp    0x4288ae
  4288a5:	mov    ebx,0xf3c4
  4288aa:	add    BYTE PTR [ecx],cl
  4288ac:	mov    ebx,0xd314f40c
  4288b1:	adc    eax,0xe02df304
  4288b6:	jle    0x42891f
  4288b8:	jmp    0x4288aa
  4288ba:	pop    ebx
  4288bb:	leave  
  4288bc:	inc    ebx
  4288bd:	ret    0x7451
  4288c0:	mov    edx,0xf8d80004
  4288c5:	inc    eax
  4288c7:	in     al,0xfc
  4288c9:	stc    
  4288ca:	scas   al,BYTE PTR es:[edi]
  4288cb:	mov    DWORD PTR [ecx],ebp
  4288cd:	sub    esp,edi
  4288cf:	and    bh,BYTE PTR [esi]
  4288d1:	lea    edx,ds:0xfbe81b0b
  4288d7:	adc    eax,0x2e62fb3d
  4288dc:	ficomp WORD PTR [ecx+0x22]
  4288df:	push   ds
  4288e0:	sub    al,0x5d
  4288e2:	stos   DWORD PTR es:[edi],eax
  4288e3:	repz push es
  4288e5:	push   edx
  4288e6:	push   ds
  4288e7:	push   cs
  4288e8:	aas    
  4288e9:	(bad)  
  4288ea:	test   BYTE PTR [eax+0x2264ad29],0x3e
  4288f1:	(bad)  
  4288f2:	(bad)  
  4288f3:	mov    BYTE PTR [ecx],ch
  4288f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4288f6:	push   esp
  4288f7:	ret    0x8d3d
  4288fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288fb:	or     bh,dl
  4288fd:	cli    
  4288fe:	fdivr  QWORD PTR [eax-0x2816bff0]
  428904:	mov    ebp,0xbaa26c03
  428909:	add    dl,BYTE PTR [esi-0x45fe45d]
  42890f:	add    BYTE PTR [eax],al
  428911:	add    BYTE PTR [eax],dh
  428913:	inc    ecx
  428914:	pop    edx
  428915:	mov    edi,0xe1b20daf
  42891a:	imul   esi,DWORD PTR [ebp+0xd3da007],0x2808b38d
  428924:	jmp    FWORD PTR [ebx+0x55]
  428927:	or     DWORD PTR [ebp+0x2e052420],eax
  42892d:	sub    DWORD PTR [esi-0x14c77935],esp
  428933:	aam    0x86
  428935:	push   ebp
  428936:	retf   
  428937:	push   cs
  428938:	mov    edi,edi
  42893a:	repz jae 0x4289ad
  42893d:	jmp    0xc3cb:0x4073f3
  428944:	push   eax
  428945:	or     al,0xc5
  428947:	addr16 mov esi,0x1a586885
  42894d:	mov    edx,DWORD PTR [ebx]
  42894f:	inc    ebx
  428950:	xor    al,cl
  428952:	fnsave [esi]
  428954:	and    cl,al
  428956:	rol    esi,1
  428958:	push   es
  428959:	inc    edx
  42895a:	mov    edi,DWORD PTR [esi-0x6]
  42895d:	iret   
  42895e:	call   0xbe66fd38
  428963:	mov    ebp,0x14bfff2e
  428968:	push   cs
  428969:	inc    eax
  42896a:	call   0x7b0b:0x710cc48b
  428971:	daa    
  428972:	mov    dl,BYTE PTR [ecx+eax*1+0x5e]
  428979:	enter  0xfb3b,0x54
  42897d:	rcr    edi,1
  42897f:	push   eax
  428980:	push   ecx
  428981:	inc    ebp
  428982:	sahf   
  428983:	dec    ecx
  428984:	add    ecx,ecx
  428986:	fsub   QWORD PTR [edi+0x56]
  428989:	sahf   
  42898a:	xor    al,0x48
  42898c:	dec    ecx
  42898d:	mov    cs,WORD PTR [edi]
  42898f:	sub    al,al
  428991:	mov    bl,0x6e
  428993:	add    BYTE PTR [eax],al
  428995:	dec    edx
  428996:	shr    DWORD PTR [edi+0x18],0xe1
  42899a:	or     cl,BYTE PTR [ebp+0x7c31270]
  4289a0:	sub    DWORD PTR [edi-0x34],0xffffffff
  4289a4:	push   edx
  4289a5:	jge    0x42896a
  4289a7:	mov    eax,0x40b8c
  4289ac:	lea    esp,[edx+0x1c]
  4289af:	dec    ebx
  4289b0:	call   FWORD PTR [edi]
  4289b2:	loopne 0x4289bd
  4289b4:	inc    eax
  4289b5:	or     bh,BYTE PTR [ebp-0x3570f3c3]
  4289bb:	jae    0x4289cf
  4289bd:	repz pop eax
  4289bf:	rol    BYTE PTR [edi],cl
  4289c1:	inc    ebx
  4289c2:	inc    esi
  4289c3:	fwait
  4289c4:	cmp    eax,0x457d48dd
  4289c9:	(bad)  [ecx+eax*8+0x4ff27a07]
  4289d0:	dec    edi
  4289d1:	les    ebx,FWORD PTR [edx+0x4f]
  4289d4:	push   cs
  4289d5:	xor    ebp,DWORD PTR [esi]
  4289d7:	jle    0x428a56
  4289d9:	mov    ebx,0x4d762d
  4289de:	add    BYTE PTR [eax],al
  4289e0:	sti    
  4289e1:	add    BYTE PTR [ecx-0x6e558ab],al
  4289e7:	jle    0x4289ff
  4289e9:	mov    al,BYTE PTR [eax+ebp*2]
  4289ec:	jecxz  0x428a28
  4289ee:	(bad)  
  4289ef:	call   FWORD PTR [ecx]
  4289f1:	xor    ah,BYTE PTR [edi+0x4a93afe7]
  4289f7:	sti    
  4289f8:	shr    ebp,0x56
  4289fb:	aas    
  4289fc:	xor    eax,0x6cffd91d
  428a01:	jg     0x4289dc
  428a03:	add    ecx,ebx
  428a05:	sbb    esp,DWORD PTR [edi]
  428a07:	call   0xfb8c6daf
  428a0c:	outs   dx,DWORD PTR ds:[esi]
  428a0d:	in     eax,dx
  428a0e:	xlat   BYTE PTR ds:[ebx]
  428a0f:	and    al,0x78
  428a11:	jb     0x428a5e
  428a13:	xchg   DWORD PTR [esi-0x14b2890b],ebx
  428a19:	xor    BYTE PTR [ebp+0x49c357e7],0xfb
  428a20:	ja     0x428a0f
  428a22:	xlat   BYTE PTR ds:[ebx]
  428a23:	adc    BYTE PTR [eax-0x5e],bh
  428a26:	not    DWORD PTR [edx-0x77]
  428a29:	xor    DWORD PTR [edi+0x5735be8c],esp
  428a2f:	mov    ecx,0x864a372a
  428a34:	sub    esi,DWORD PTR [eax]
  428a36:	fdiv   st,st(7)
  428a38:	or     eax,DWORD PTR [esi]
  428a3a:	mov    bl,0xf
  428a3c:	stc    
  428a3d:	outs   dx,DWORD PTR ds:[esi]
  428a3f:	inc    edx
  428a40:	dec    eax
  428a41:	loop   0x428a75
  428a43:	cmp    eax,0xa5000000
  428a48:	add    ebp,ecx
  428a4a:	mov    ah,0x43
  428a4c:	aam    0x6d
  428a4e:	fist   WORD PTR [eax]
  428a50:	pop    ds
  428a51:	adc    esi,DWORD PTR [edi-0x299bc08b]
  428a57:	or     al,0xd5
  428a59:	pop    edi
  428a5a:	xlat   BYTE PTR ds:[ebx]
  428a5b:	adc    BYTE PTR [edi],dl
  428a5d:	mov    ds:0x2919c8f8,al
  428a62:	add    al,0x74
  428a64:	(bad)  
  428a65:	in     al,dx
  428a66:	or     dh,BYTE PTR [eax]
  428a68:	movlps QWORD PTR [edx],xmm1
  428a6b:	mov    cl,0xc3
  428a6d:	int3   
  428a6e:	and    esi,edx
  428a70:	mov    esi,edx
  428a72:	pop    es
  428a73:	je     0x428a7a
  428a75:	push   ss
  428a76:	jge    0x428a77
  428a78:	loop   0x428a4e
  428a7a:	mov    BYTE PTR [ebx+0x74d9b4b3],dh
  428a80:	into   
  428a81:	pop    ecx
  428a82:	clc    
  428a83:	cld    
  428a84:	sbb    DWORD PTR [ecx-0x17f6d9fd],ebp
  428a8a:	add    esi,ebx
  428a8c:	mov    bl,0xf7
  428a8e:	adc    DWORD PTR [esi+edi*1],edi
  428a91:	mov    ch,0x27
  428a93:	jecxz  0x428ad2
  428a95:	fcom   QWORD PTR [ebx-0xb]
  428a98:	(bad)  
  428a99:	call   0xc2250717
  428a9e:	lods   eax,DWORD PTR ds:[esi]
  428a9f:	xchg   edi,eax
  428aa0:	fistp  QWORD PTR [edi+0x5e070341]
  428aa6:	enter  0x124,0xa2
  428aaa:	jmp    0x428aac
  428aac:	add    BYTE PTR [eax],al
  428aae:	mov    ds:0xd0c72b05,al
  428ab3:	out    0xe6,al
  428ab5:	pop    edx
  428ab6:	dec    edi
  428ab7:	aad    0xff
  428ab9:	cmc    
  428aba:	cld    
  428abb:	sub    eax,0xecf0a90e
  428ac0:	mov    edi,0x3241c5d2
  428ac5:	fsubrp st(4),st
  428ac7:	popf   
  428ac8:	push   cs
  428ac9:	sub    edi,ebp
  428acb:	mov    ebp,0x7db8e921
  428ad0:	add    cl,ch
  428ad2:	lock cs pop ss
  428ad5:	std    
  428ad6:	ds inc edx
  428ad8:	xchg   DWORD PTR [ecx+0x7574386c],edi
  428ade:	cmp    bl,BYTE PTR [eax+esi*1]
  428ae1:	push   DWORD PTR [eax+0x3fe1693d]
  428ae7:	mov    bl,0x23
  428ae9:	leave  
  428aea:	pop    esi
  428aeb:	inc    eax
  428aec:	iret   
  428aed:	arpl   WORD PTR [ebx+0x6f112fe9],bp
  428af3:	push   es
  428af4:	add    cl,ch
  428af6:	or     ecx,eax
  428af8:	cmp    esp,DWORD PTR [ebp+esi*4-0x3]
  428afc:	gs jmp 0x21851049
  428b02:	es adc al,0x34
  428b05:	div    DWORD PTR [eax]
  428b07:	cmp    eax,0xff0ca586
  428b0c:	jle    0x428b33
  428b0e:	dec    edi
  428b0f:	or     cl,0xbd
  428b12:	add    BYTE PTR [eax],al
  428b14:	add    BYTE PTR [esi+0x48bc7ea7],bl
  428b1a:	cmp    eax,0x7747a675
  428b1f:	inc    ebp
  428b20:	loopne 0x428b78
  428b22:	test   BYTE PTR [ebp-0xf],dl
  428b25:	dec    esi
  428b26:	inc    esi
  428b27:	fdivrp st(1),st
  428b29:	push   ss
  428b2a:	add    al,0xbe
  428b2c:	out    0x7f,al
  428b2e:	or     edx,DWORD PTR cs:[esi-0x10]
  428b32:	add    BYTE PTR cs:[eax],0xf7
  428b36:	int3   
  428b37:	test   BYTE PTR [eax-0x74dc1aaa],0xdb
  428b3e:	ficomp DWORD PTR [ecx+0x4fca0cd5]
  428b44:	push   ecx
  428b45:	mov    ch,0xcb
  428b47:	retf   0x840f
  428b4a:	inc    esp
  428b4b:	pop    ds
  428b4c:	xor    BYTE PTR [ecx-0x3c],bl
  428b4f:	or     ecx,DWORD PTR [eax+0x46]
  428b52:	xor    eax,0x60b97443
  428b57:	jnp    0x428b59
  428b59:	fimul  DWORD PTR [eax]
  428b5b:	bound  eax,QWORD PTR [eax]
  428b5d:	in     eax,0xc9
  428b5f:	adc    al,0x34
  428b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b62:	dec    eax
  428b63:	sti    
  428b64:	add    BYTE PTR [esi-0xbfb1dc4],0xbf
  428b6b:	gs inc edx
  428b6d:	adc    DWORD PTR [edi+ebx*1+0x28],ecx
  428b71:	adc    ebx,eax
  428b73:	out    0x6d,eax
  428b75:	push   edi
  428b76:	or     BYTE PTR [eax],al
  428b78:	mov    eax,DWORD PTR [eax]
  428b7a:	add    BYTE PTR [eax],al
  428b7c:	out    dx,al
  428b7d:	out    dx,al
  428b7e:	adc    edx,DWORD PTR [ebx-0x1c]
  428b81:	pop    edx
  428b82:	push   ss
  428b83:	pop    edi
  428b84:	enter  0x6802,0x0
  428b88:	mov    al,BYTE PTR [eax-0x5]
  428b8b:	out    0x26,eax
  428b8d:	adc    eax,0xc7d60000
  428b92:	jae    0x428b9b
  428b94:	jns    0x428b9f
  428b96:	jmp    0xf70d389b
  428b9b:	push   esi
  428b9c:	mov    ds:0xfdfe3250,al
  428ba1:	xchg   BYTE PTR [ebx],bl
  428ba3:	add    BYTE PTR [ebx+0xdfff5d7],dh
  428ba9:	jne    0x428b2d
  428bab:	in     al,dx
  428bac:	imul   esi,DWORD PTR [edx-0x7e],0xfffffff0
  428bb0:	repz mov ds:0x73c3fbc1,al
  428bb6:	fscale 
  428bb8:	sub    eax,0xf2044b6b
  428bbd:	sub    eax,0xf9defaff
  428bc2:	out    dx,eax
  428bc3:	aas    
  428bc4:	repz mov eax,ds:0xb8c1743e
  428bca:	sar    bl,0x76
  428bcd:	ins    DWORD PTR es:[edi],dx
  428bce:	shl    BYTE PTR [esi],1
  428bd0:	and    BYTE PTR [edi-0x22],ah
  428bd3:	mov    bh,ch
  428bd5:	jecxz  0x428c51
  428bd7:	ret    0x74d
  428bda:	div    BYTE PTR [ebx+0x15]
  428bdd:	sub    eax,0x88e
  428be2:	add    BYTE PTR [eax+0x76],dh
  428be5:	pop    ss
  428be6:	je     0x428bde
  428be8:	mov    al,0x4c
  428bea:	pop    esp
  428beb:	ds sub al,0xdd
  428bee:	jnp    0x428c3a
  428bf0:	add    al,0x7d
  428bf2:	or     BYTE PTR [eax+0x6d],dh
  428bf5:	add    ah,BYTE PTR [edx+0x70]
  428bf8:	push   ebp
  428bf9:	push   DWORD PTR [edi+ecx*4-0x68]
  428bfd:	cld    
  428bfe:	gs or  esp,esi
  428c01:	pop    ebx
  428c02:	dec    esi
  428c03:	popa   
  428c04:	mov    ah,0x46
  428c06:	pop    edx
  428c07:	stos   BYTE PTR es:[edi],al
  428c08:	jo     0x428bbb
  428c0a:	xchg   BYTE PTR [edi+0x72f85fb0],al
  428c10:	leave  
  428c11:	iret   
  428c12:	(bad)  
  428c13:	fs sub eax,0x20c451b2
  428c19:	sub    ebp,DWORD PTR [eax+0x2f]
  428c1c:	mov    eax,0xb5a1ffc3
  428c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c22:	and    ebx,esp
  428c24:	hlt    
  428c25:	lock xchg ebx,eax
  428c27:	jecxz  0x428c96
  428c29:	dec    DWORD PTR [eax-0xc32f951]
  428c2f:	in     eax,0x47
  428c31:	jmp    0x7403:0xe905e47f
  428c38:	icebp  
  428c39:	pop    esp
  428c3a:	hlt    
  428c3b:	aam    0x6
  428c3d:	xchg   esi,eax
  428c3e:	mov    bl,0xdd
  428c40:	cmp    edi,edx
  428c42:	xor    DWORD PTR [edi+eax*2+0xf37d],edi
  428c49:	add    BYTE PTR [ebx+edi*1-0x3c20e08b],ch
  428c50:	loope  0x428c83
  428c52:	and    al,0x46
  428c54:	push   esp
  428c55:	push   eax
  428c56:	sbb    al,0x3e
  428c58:	pop    esp
  428c59:	(bad)  
  428c5a:	mov    dl,0xc3
  428c5c:	add    al,0xfb
  428c5e:	repz das 
  428c60:	repz add al,0xf3
  428c63:	push   es
  428c64:	dec    edi
  428c65:	shl    DWORD PTR [edi-0x4d],1
  428c68:	or     al,0x24
  428c6a:	sbb    edx,DWORD PTR [eax-0x7024dff3]
  428c70:	inc    ebp
  428c71:	and    BYTE PTR [edi],al
  428c73:	das    
  428c74:	test   DWORD PTR [eax+ebp*4+0x3a],esi
  428c78:	(bad)  
  428c79:	jmp    FWORD PTR [esi+ecx*4]
  428c7c:	mov    ds:0xd962de7e,eax
  428c81:	ret    
  428c82:	mov    edx,cs
  428c84:	imul   edi,DWORD PTR [edi+0x4b18e6d0],0x7
  428c8b:	jecxz  0x428c55
  428c8d:	dec    edx
  428c8e:	mov    eax,ds:0x70fa2984
  428c93:	pop    esi
  428c94:	jmp    0xadd07f9c
  428c99:	pop    ds
  428c9a:	pop    es
  428c9b:	(bad)  
  428c9c:	and    eax,0x28f5f0d0
  428ca1:	pop    esi
  428ca2:	imul   BYTE PTR [esi]
  428ca4:	mov    ds:0x3a490d,al
  428ca9:	pusha  
  428caa:	jl     0x428c92
  428cac:	pop    ss
  428cad:	repnz add BYTE PTR [eax],al
  428cb0:	add    BYTE PTR [ebp-0xf987bf3],ch
  428cb6:	push   es
  428cb7:	add    BYTE PTR [ebx-0x527336dc],dl
  428cbd:	cld    
  428cbe:	loop   0x428d0f
  428cc0:	pop    esp
  428cc1:	push   esp
  428cc2:	out    0x1f,al
  428cc4:	cdq    
  428cc5:	mov    ecx,0xb9c923b2
  428cca:	push   esp
  428ccb:	test   DWORD PTR [ecx],ebp
  428ccd:	stc    
  428cce:	test   DWORD PTR [esi+0x6806f0e9],edx
  428cd4:	lods   eax,DWORD PTR ds:[esi]
  428cd5:	outs   dx,BYTE PTR ds:[esi]
  428cd6:	(bad)  
  428cd7:	jmp    FWORD PTR [ecx+0x27]
  428cda:	lea    ebx,ds:[ebp+0x13]
  428cde:	mov    ebx,0x3fc106e7
  428ce3:	sti    
  428ce4:	jb     0x428d17
  428ce6:	xlat   BYTE PTR ds:[ebx]
  428ce7:	cli    
  428ce8:	aam    0xc8
  428cea:	adc    al,BYTE PTR [eax-0x17]
  428ced:	inc    ebp
  428cee:	ret    
  428cef:	and    eax,DWORD PTR [ecx]
  428cf1:	jg     0x428d2f
  428cf3:	adc    eax,0xfff9a56d
  428cf8:	adc    al,cl
  428cfa:	mov    dh,BYTE PTR [ebp+ecx*8-0xc]
  428cfe:	fsubrp st(7),st
  428d00:	sub    eax,0x74fb3e20
  428d05:	jae    0x428ce9
  428d07:	ja     0x428cf1
  428d09:	lock push es
  428d0b:	call   0xfb80b65c
  428d10:	fisub  WORD PTR [ebx-0x3e]
  428d13:	and    edx,DWORD PTR [ecx]
  428d15:	add    BYTE PTR [eax],al
  428d17:	add    BYTE PTR [edi+0x4a5b30c],ah
  428d1d:	in     eax,dx
  428d1e:	dec    edi
  428d1f:	out    0x83,al
  428d21:	ret    0x1723
  428d24:	lahf   
  428d25:	mov    al,BYTE PTR [eax+eax*1+0x86fe]
  428d2c:	pop    edx
  428d2d:	jne    0x428cbb
  428d2f:	test   dh,ch
  428d31:	mov    edx,0x754a0000
  428d36:	add    dh,0x6a
  428d39:	pop    ebx
  428d3a:	cmp    DWORD PTR [ebx-0x69],ebx
  428d3d:	mov    fs,WORD PTR [eax+edx*1]
  428d40:	or     eax,DWORD PTR ds:0x41a5e800
  428d46:	stc    
  428d47:	call   FWORD PTR [ecx-0x257ae83a]
  428d4d:	dec    esp
  428d4e:	sbb    edi,edi
  428d50:	jle    0x428d6b
  428d52:	adc    al,0x8b
  428d54:	int    0xcf
  428d56:	jae    0x428d7c
  428d58:	div    BYTE PTR [edx+0x63]
  428d5b:	les    esp,FWORD PTR [ecx+0x44]
  428d5e:	sti    
  428d5f:	imul   ecx,eax,0xa599e8dc
  428d65:	iret   
  428d66:	add    eax,0xe
  428d69:	cmp    cl,al
  428d6b:	inc    esp
  428d6c:	out    dx,al
  428d6d:	cmp    eax,0xcf613300
  428d72:	jae    0x428d98
  428d74:	mov    ds:0x5439afdc,al
  428d79:	iret   
  428d7a:	dec    edx
  428d7b:	inc    DWORD PTR [eax]
  428d7d:	add    BYTE PTR [eax],al
  428d7f:	(bad)  
  428d80:	out    0x13,al
  428d82:	call   FWORD PTR [edi-0x75bff04c]
  428d88:	mov    edx,0x6f852443
  428d8d:	pop    ecx
  428d8e:	pop    ebx
  428d8f:	add    ecx,ebx
  428d91:	pop    esp
  428d92:	ret    
  428d93:	fistp  QWORD PTR [ecx-0x33917c15]
  428d99:	sub    ah,0xd6
  428d9c:	add    DWORD PTR [eax],eax
  428d9e:	add    BYTE PTR [ecx-0xc8a7d8a],ch
  428da4:	and    eax,0x3ddefab0
  428da9:	dec    eax
  428daa:	jne    0x428dab
  428dac:	xchg   edi,eax
  428dad:	dec    eax
  428dae:	adc    eax,0xffbf5e67
  428db3:	imul   ebp,DWORD PTR [edx+0x1b],0x10
  428db7:	outs   dx,BYTE PTR ds:[esi]
  428db8:	out    dx,al
  428db9:	test   DWORD PTR [ebx-0xd0fe],0xffef631c
  428dc3:	sbb    al,0x2e
  428dc5:	out    dx,eax
  428dc6:	or     ch,BYTE PTR [esi+0x22]
  428dc9:	(bad)  
  428dca:	push   ebx
  428dcc:	stos   BYTE PTR es:[edi],al
  428dcd:	push   eax
  428dce:	or     ebp,DWORD PTR [edi+0x3a]
  428dd1:	(bad)  
  428dd2:	push   ebx
  428dd4:	lods   al,BYTE PTR ds:[esi]
  428dd5:	or     BYTE PTR [eax],al
  428dd7:	in     al,0x9f
  428dd9:	push   ebx
  428dda:	add    bl,dh
  428ddc:	sub    eax,0x2def7a7e
  428de1:	repnz add DWORD PTR [eax],0x0
  428de5:	add    dl,cl
  428de7:	sub    eax,0x53cbffff
  428dec:	mov    ebx,0x43a9ccf9
  428df1:	or     ebp,DWORD PTR [edi-0x67]
  428df4:	add    al,0x0
  428df6:	repz mov ds:0x1e1323bf,al
  428dfc:	inc    ebx
  428dfd:	adc    eax,0xffbf3b77
  428e02:	sbb    dl,BYTE PTR [eax]
  428e04:	jns    0x428dba
  428e06:	xlat   BYTE PTR ds:[ebx]
  428e07:	imul   eax,DWORD PTR [eax+eax*1],0x565bf5f3
  428e0e:	arpl   WORD PTR [eax-0x550399bd],ax
  428e14:	iret   
  428e15:	and    eax,edi
  428e17:	adc    eax,0xa8634a5c
  428e1c:	inc    edx
  428e1d:	lea    esi,[edi+0x6]
  428e20:	or     eax,0xe906f204
  428e25:	pop    ebx
  428e26:	cmp    BYTE PTR [ecx],0x52
  428e29:	inc    edi
  428e2a:	call   0x1362339e
  428e2f:	xlat   BYTE PTR ds:[ebx]
  428e30:	icebp  
  428e31:	mov    gs,WORD PTR [edi-0x164bfd1e]
  428e37:	outs   dx,DWORD PTR ds:[esi]
  428e38:	lods   eax,DWORD PTR ds:[esi]
  428e39:	pop    ds
  428e3a:	or     edi,edx
  428e3c:	pop    ebp
  428e3d:	ds ret 
  428e3f:	mov    DWORD PTR [ebp+0x20],ebp
  428e42:	add    eax,DWORD PTR [esi]
  428e44:	jmp    0x6dcc514c
  428e49:	and    BYTE PTR [eax],al
  428e4b:	add    BYTE PTR [eax],al
  428e4d:	aas    
  428e4e:	push   es
  428e4f:	jmp    0xc2ef3157
  428e54:	stos   BYTE PTR es:[edi],al
  428e55:	ja     0x428e11
  428e57:	les    ebp,FWORD PTR [ebx+0x45757214]
  428e5d:	clc    
  428e5e:	and    BYTE PTR ds:0x634777ec,0xd2
  428e65:	ins    DWORD PTR es:[edi],dx
  428e66:	int3   
  428e67:	lock inc esi
  428e69:	and    esi,DWORD PTR [esi]
  428e6b:	pop    ecx
  428e6c:	add    BYTE PTR [esi+ecx*2+0x39],ch
  428e70:	adc    ecx,eax
  428e72:	fimul  WORD PTR [esi+0x2]
  428e75:	(bad)  [edi]
  428e77:	popa   
  428e78:	inc    esi
  428e79:	mov    eax,0x1bcfa98b
  428e7e:	xor    BYTE PTR [eax+edi*8],0xe5
  428e82:	cmp    eax,0xf012b21d
  428e87:	fcmove st,st(7)
  428e89:	das    
  428e8a:	test   BYTE PTR ds:0x89d73320,ch
  428e90:	lock or al,0x19
  428e93:	sub    DWORD PTR [ecx*1+0x743810ff],eax
  428e9a:	(bad)  
  428e9b:	(bad)  
  428e9c:	call   0x2186599c
  428ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ea2:	cs (bad) 
  428ea4:	and    DWORD PTR [ebp+0x3e302f31],ebp
  428eaa:	jg     0x428ef4
  428eac:	loope  0x428e34
  428eae:	xor    DWORD PTR [ebp+eax*1+0x0],0x0
  428eb3:	add    BYTE PTR [edi-0x4b],bl
  428eb6:	mov    DWORD PTR [esi-0x58],0xb53f7d91
  428ebd:	mov    al,al
  428ebf:	mov    ebp,0x574314a
  428ec4:	sbb    eax,DWORD PTR [ebx+0x3164cd44]
  428eca:	je     0x428e91
  428ecc:	or     dh,al
  428ece:	push   edx
  428ecf:	xor    edx,0x1e
  428ed2:	mov    BYTE PTR [ecx-0x4b],dh
  428ed5:	xor    eax,ebp
  428ed7:	js     0x428f14
  428ed9:	xor    bl,bh
  428edb:	jb     0x428f19
  428edd:	jmp    0x486:0xdd4e960f
  428ee4:	fwait
  428ee5:	jae    0x428ef3
  428ee7:	jmp    0xe9abc4b6
  428eec:	pop    ds
  428eed:	or     eax,ebx
  428eef:	bound  ebp,QWORD PTR [edi+0x48f4fa35]
  428ef5:	sbb    DWORD PTR [eax-0x17],eax
  428ef8:	dec    ecx
  428ef9:	leave  
  428efa:	add    esi,DWORD PTR [edx-0x3]
  428efd:	jne    0x428f51
  428eff:	bound  esp,QWORD PTR [eax]
  428f01:	pop    ds
  428f02:	psubsw mm6,mm0
  428f05:	push   es
  428f06:	repnz sub eax,0x1500fed3
  428f0c:	popf   
  428f0d:	xlat   BYTE PTR ds:[ebx]
  428f0e:	out    0xcf,eax
  428f10:	call   0xcda58a45
  428f15:	sar    BYTE PTR [ebp+0x0],1
  428f1b:	xchg   esi,eax
  428f1c:	or     DWORD PTR [esi-0x75],ecx
  428f1f:	sti    
  428f20:	scas   eax,DWORD PTR es:[edi]
  428f21:	cmp    eax,0xd3344504
  428f26:	mov    ebx,DWORD PTR [edx]
  428f28:	or     eax,DWORD PTR [ebp+0x7a3446c0]
  428f2e:	clc    
  428f2f:	dec    ebx
  428f30:	inc    esp
  428f31:	add    eax,0xdb957ff
  428f36:	inc    eax
  428f37:	pop    edx
  428f38:	xchg   BYTE PTR [esi+0x4],al
  428f3b:	lods   eax,DWORD PTR ds:[esi]
  428f3c:	ins    BYTE PTR es:[edi],dx
  428f3d:	mov    edx,0x84358a8b
  428f42:	shl    BYTE PTR [esi+0x3a],0x7a
  428f46:	clc    
  428f47:	sbb    eax,DWORD PTR [ebp+0x5]
  428f4a:	cmp    eax,0x80010814
  428f4f:	xchg   BYTE PTR [esi],al
  428f51:	sub    eax,eax
  428f53:	leave  
  428f54:	pop    ss
  428f55:	rol    BYTE PTR [eax-0x27],0x65
  428f59:	sub    ah,0x6b
  428f5c:	xchg   BYTE PTR [ebp-0x4],ah
  428f5f:	or     bh,BYTE PTR [esp+eax*2+0x74ca5afc]
  428f66:	or     al,0x72
  428f68:	or     DWORD PTR [eax+eax*1-0x26],eax
  428f6c:	dec    esi
  428f6d:	sti    
  428f6e:	inc    BYTE PTR [edi+0x33]
  428f71:	not    BYTE PTR ds:0x3b2256
  428f77:	push   edi
  428f78:	enter  0x777,0x41
  428f7c:	jne    0x428f75
  428f7e:	test   DWORD PTR [eax],eax
  428f80:	add    BYTE PTR [eax],al
  428f82:	mov    al,BYTE PTR [ebp-0x3]
  428f85:	xor    cl,BYTE PTR [edx-0x65f7460f]
  428f8b:	bound  eax,QWORD PTR [edx-0x4c87d0f]
  428f91:	dec    DWORD PTR [edx-0xcdbbc3e]
  428f97:	and    eax,0xfbf573fe
  428f9c:	pop    ebx
  428f9d:	mov    al,ds:0x87448bbc
  428fa2:	mov    ch,0x14
  428fa4:	ds add al,0xf3
  428fa7:	test   al,0xbc
  428fa9:	pop    es
  428faa:	xor    al,0x2c
  428fac:	pop    ebx
  428fad:	xchg   DWORD PTR [ebx-0x183f85e3],esi
  428fb3:	aaa    
  428fb4:	js     0x428fbe
  428fb6:	ret    
  428fb7:	fsubr  QWORD PTR [ebp-0x8b38ff9]
  428fbd:	inc    DWORD PTR [ebp+0x74]
  428fc0:	repz cli 
  428fc2:	out    0x5d,al
  428fc4:	lock aas 
  428fc6:	repz test al,0x34
  428fc9:	jmp    0xfb86748e
  428fce:	mov    esi,0xc55152b8
  428fd3:	push   eax
  428fd4:	dec    ebp
  428fd5:	push   edx
  428fd6:	mov    ebp,0xa6fed973
  428fdb:	jnp    0x428f8a
  428fdd:	gs add al,0x94
  428fe0:	inc    esp
  428fe1:	adc    eax,0xffbf5c6f
  428fe6:	add    BYTE PTR [eax],al
  428fe8:	add    BYTE PTR [ecx+0x2e06cae3],bh
  428fee:	push   edi
  428fef:	inc    BYTE PTR [eax]
  428ff1:	jae    0x428fc4
  428ff3:	pop    es
  428ff4:	cs mov bl,0x58
  428ff7:	clc    
  428ff8:	push   edx
  428ff9:	dec    ebx
  428ffa:	ds pop ss
  428ffc:	inc    eax
  428ffd:	repz lds esi,FWORD PTR [ebx+0x18]
  429001:	xor    ebx,DWORD PTR [esi]
  429003:	daa    
  429004:	push   ebx
  429005:	mov    esp,0xbb873f74
  42900a:	cmp    BYTE PTR [ecx+0x75],al
  42900d:	imul   DWORD PTR [edi]
  42900f:	aas    
  429010:	out    0xa,eax
  429012:	pop    es
  429013:	ss inc ebx
  429015:	add    ebx,DWORD PTR es:[edx+0x2917d719]
  42901c:	add    al,0x74
  42901e:	dec    esi
  42901f:	pop    esi
  429020:	or     edi,DWORD PTR [esp+edx*2+0x342010fc]
  429027:	sbb    DWORD PTR [eax*8-0x351cf1ba],ecx
  42902e:	cmp    eax,0x81f30ca7
  429033:	mov    ah,0x3f
  429035:	ret    0xb2dc
  429038:	fld    st(2)
  42903a:	fdivr  QWORD PTR [edx-0x46cc5e2a]
  429040:	(bad)  
  429042:	leave  
  429043:	hlt    
  429044:	mov    ?,eax
  429046:	fstp   TBYTE PTR [ecx]
  429048:	aam    0xec
  42904a:	xlat   BYTE PTR ds:[ebx]
  42904b:	xor    DWORD PTR [ecx],ebx
  42904d:	add    BYTE PTR [eax],al
  42904f:	add    BYTE PTR [ebx-0x15fc56e9],dh
  429055:	mov    ecx,0xed2db8f4
  42905a:	xchg   ebx,eax
  42905b:	aas    
  42905c:	lahf   
  42905d:	inc    esp
  42905e:	mov    ebx,0x7f0796d9
  429063:	push   es
  429064:	mov    eax,ds:0xf80d8edc
  429069:	mov    eax,0x8ade42fc
  42906e:	fcmovnb st,st(3)
  429070:	in     al,dx
  429071:	mov    ebp,DWORD PTR [ecx]
  429073:	(bad)  
  429074:	xor    ebx,DWORD PTR cs:[ebp+0xc]
  429078:	je     0x429079
  42907a:	cmp    BYTE PTR [ebx+0x42],al
  42907d:	(bad)  
  42907e:	mov    ebp,0xe0c4746f
  429083:	mov    WORD PTR [edx],?
  429085:	(bad)  
  429086:	js     0x42908c
  429088:	aam    0x6b
  42908a:	adc    al,0x8f
  42908c:	(bad)  
  42908d:	mov    BYTE PTR [eax],al
  42908f:	lds    ecx,FWORD PTR [ebx+ecx*1]
  429092:	add    cl,ch
  429094:	mov    ebp,0xb9c22dd8
  429099:	sub    eax,0xc6fee115
  42909e:	jmp    FWORD PTR [ecx-0x38]
  4290a1:	sub    eax,0x17170d74
  4290a6:	je     0x429098
  4290a8:	ins    DWORD PTR es:[edi],dx
  4290a9:	ds call 0xfb750b38
  4290af:	cmp    dl,0xd5
  4290b2:	out    0xf4,eax
  4290b4:	add    BYTE PTR [eax],al
  4290b6:	add    dh,cl
  4290b8:	sub    al,0xfb
  4290ba:	ins    DWORD PTR es:[edi],dx
  4290bb:	mov    al,0xbb
  4290bd:	fs shr esp,1
  4290c0:	pop    es
  4290c1:	add    cl,ch
  4290c3:	jge    0x42911b
  4290c5:	lea    ebx,[esp+edx*1+0x34]
  4290c9:	sti    
  4290ca:	inc    esi
  4290cb:	or     BYTE PTR [edi],dl
  4290cd:	push   0x3f
  4290cf:	mov    cl,0x83
  4290d1:	test   DWORD PTR [ebp-0x4d],eax
  4290d4:	sub    eax,0x1bb199fb
  4290d9:	nop
  4290da:	cli    
  4290db:	xor    BYTE PTR [edx],dh
  4290dd:	mov    WORD PTR [esp+ebx*8-0xf163f92],ss
  4290e4:	push   es
  4290e5:	call   0xfb70f457
  4290ea:	je     0x429157
  4290ec:	sub    esi,edi
  4290ee:	(bad)  
  4290ef:	mov    dl,0xd6
  4290f1:	gs jmp 0x5c92d574
  4290f7:	jnp    0x42911b
  4290f9:	std    
  4290fa:	out    0x32,al
  4290fc:	xlat   BYTE PTR ds:[ebx]
  4290fd:	cli    
  4290fe:	hlt    
  4290ff:	xchg   esp,eax
  429100:	push   ss
  429101:	inc    eax
  429102:	jmp    0xedb6d77c
  429107:	xchg   esi,eax
  429108:	push   es
  429109:	lea    eax,[eax]
  42910b:	dec    edi
  42910c:	fcomip st,st(2)
  42910e:	push   DWORD PTR [ebp+0x5a]
  429111:	dec    esi
  429112:	dec    edi
  429114:	lea    edx,[ecx]
  429116:	inc    eax
  429117:	call   0x0:0xe48580
  42911e:	push   ecx
  42911f:	(bad)  
  429120:	not    BYTE PTR [eax-0x7e]
  429123:	push   ss
  429124:	call   0x750c:0x74c765fe
  42912b:	jns    0x429130
  42912d:	push   edi
  42912e:	bound  ecx,QWORD PTR [edx-0x7675ffd5]
  429134:	shl    BYTE PTR [ebp+0x46],0x2d
  429138:	inc    esp
  429139:	adc    BYTE PTR [edi+0x8],bl
  42913c:	cmp    bl,0x60
  42913f:	jns    0x429152
  429141:	push   0xfffb1e5a
  429146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429147:	sbb    eax,ecx
  429149:	adc    bl,BYTE PTR [edx-0x5c3c09fb]
  42914f:	push   esi
  429150:	idiv   bh
  429152:	cmc    
  429153:	mov    edx,0x3b18eb00
  429158:	mov    ebx,0xb9bc815e
  42915d:	or     al,0xa
  42915f:	pop    eax
  429160:	sub    ah,0x8b
  429163:	not    BYTE PTR [edi]
  429165:	add    DWORD PTR [edx],ebx
  429167:	add    eax,0xc63d564b
  42916c:	xor    al,0x7c
  42916e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42916f:	dec    ebx
  429170:	sti    
  429171:	mov    WORD PTR [edi-0xb],?
  429174:	out    0x9f,eax
  429176:	test   eax,0x1a840004
  42917b:	push   ss
  42917c:	test   BYTE PTR [esi-0x7cfffb36],dl
  429182:	add    BYTE PTR [eax],al
  429184:	add    BYTE PTR [edi],dh
  429186:	add    eax,DWORD PTR [eax]
  429188:	(bad)  
  429189:	repz loop 0x4291cc
  42918c:	add    BYTE PTR [esi],bh
  42918e:	and    BYTE PTR [eax+0x75],al
  429191:	jecxz  0x429147
  429193:	mov    ecx,0x37fbb40b
  429198:	sti    
  429199:	outs   dx,BYTE PTR es:[esi]
  42919b:	daa    
  42919c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42919e:	popa   
  42919f:	inc    eax
  4291a0:	mov    BYTE PTR [esi],dh
  4291a2:	imul   ecx,DWORD PTR [edx+0xa96a345],0x2c1df334
  4291ac:	addr16 js 0x4291b2
  4291af:	cmp    BYTE PTR [ebx+0x7c],dl
  4291b2:	xor    ebp,DWORD PTR [edi]
  4291b4:	call   0xfb8409a3
  4291b9:	js     0x429169
  4291bb:	mov    DWORD PTR [ebp+0x63],eax
  4291be:	xchg   BYTE PTR [edx],dh
  4291c0:	das    
  4291c1:	repz sbb eax,0x6edff282
  4291c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4291c8:	xchg   esi,esi
  4291ca:	sbb    eax,0x3efb67ff
  4291cf:	mov    edi,0x26a36fff
  4291d4:	cli    
  4291d5:	xor    al,0xf1
  4291d7:	es inc edx
  4291d9:	(bad)  
  4291da:	stc    
  4291db:	aas    
  4291dc:	push   eax
  4291dd:	js     0x4291f0
  4291df:	mov    edx,es
  4291e1:	or     ebx,DWORD PTR [ebp-0x65]
  4291e4:	cli    
  4291e5:	adc    al,0xab
  4291e7:	ds je  0x4291ea
  4291ea:	add    BYTE PTR [eax],al
  4291ec:	fld    TBYTE PTR [edx+0x105e889]
  4291f2:	inc    eax
  4291f3:	push   ecx
  4291f4:	cld    
  4291f5:	mov    dl,0x6
  4291f7:	mov    bh,0x5
  4291f9:	pop    ds
  4291fa:	(bad)  
  4291fb:	(bad)  
  4291fc:	fstp   TBYTE PTR [esi-0x561b0565]
  429202:	ds je  0x429208
  429205:	pop    es
  429206:	loop   0x4291c1
  429208:	in     al,0xd7
  42920a:	ins    DWORD PTR es:[edi],dx
  42920b:	sar    eax,0xd8
  42920e:	rol    BYTE PTR [edi-0x7335d037],0x36
  429215:	xor    BYTE PTR [ebx],bl
  429217:	sub    al,0xf7
  429219:	stc    
  42921a:	mov    edx,0xb1c9753f
  42921f:	fisttp WORD PTR [edx-0x34]
  429222:	lahf   
  429223:	inc    edx
  429224:	out    dx,eax
  429225:	push   es
  429226:	cmp    al,0x8b
  429228:	xchg   DWORD PTR [ebp+0x2f8ee88d],eax
  42922e:	jmp    0x89bc0a08
  429233:	inc    ecx
  429234:	js     0x429265
  429236:	xchg   ecx,eax
  429237:	daa    
  429238:	std    
  429239:	das    
  42923a:	jp     0x4291cd
  42923c:	jbe    0x429268
  42923e:	je     0x42927f
  429240:	push   0x59a8fed6
  429245:	not    DWORD PTR [eax+0x1b]
  429248:	enter  0xe906,0x87
  42924c:	xor    ebp,DWORD PTR [ebp+0x43]
  42924f:	add    eax,0xf3000000
  429254:	push   es
  429255:	pop    esi
  429256:	inc    esi
  429257:	(bad)  
  429258:	sti    
  429259:	sub    al,BYTE PTR [ebx+esi*8]
  42925c:	(bad)  
  42925d:	scas   eax,DWORD PTR es:[edi]
  42925e:	mov    eax,0x2b28f42b
  429263:	scas   eax,DWORD PTR es:[edi]
  429264:	dec    eax
  429265:	jmp    0x9c00456d
  42926a:	cmp    al,0xb
  42926c:	cmp    eax,0x9c083d82
  429271:	cld    
  429272:	sub    eax,DWORD PTR [ebp-0x59]
  429275:	or     bh,BYTE PTR [edi]
  429277:	mov    ds:0xc03e8a9c,eax
  42927c:	push   ds
  42927d:	xchg   ecx,eax
  42927e:	lods   eax,DWORD PTR ds:[esi]
  42927f:	in     al,dx
  429280:	add    BYTE PTR cs:[ebp+0x2f],ch
  429284:	mov    bl,0xd6
  429286:	pop    esp
  429287:	stos   BYTE PTR es:[edi],al
  429288:	pop    edx
  429289:	push   eax
  42928a:	shr    DWORD PTR [edi],1
  42928c:	push   edx
  42928d:	cli    
  42928e:	ficom  WORD PTR [esi-0xf428353]
  429294:	mov    dl,0x10
  429296:	pop    esp
  429297:	stos   DWORD PTR es:[edi],eax
  429298:	pop    edx
  429299:	push   eax
  42929a:	push   ebx
  42929b:	mov    WORD PTR [ecx],?
  42929d:	xor    edx,ecx
  42929f:	xor    eax,0x6ce8ffa1
  4292a4:	inc    edi
  4292a5:	je     0x42931a
  4292a7:	and    BYTE PTR [eax],cl
  4292a9:	pop    edx
  4292aa:	mov    al,0x31
  4292ac:	aam    0x86
  4292ae:	lea    esi,[edi+0x1b]
  4292b1:	call   0x5249839f
  4292b6:	mov    es,WORD PTR [eax]
  4292b8:	add    BYTE PTR [eax],al
  4292ba:	(bad)  
  4292bc:	push   cs
  4292bd:	sub    edi,ebp
  4292bf:	test   eax,esi
  4292c1:	ins    BYTE PTR es:[edi],dx
  4292c2:	cmp    edi,DWORD PTR [edx]
  4292c4:	push   eax
  4292c5:	scas   al,BYTE PTR es:[edi]
  4292c6:	cmp    edi,DWORD PTR [edx]
  4292c8:	or     cl,ch
  4292ca:	lock push es
  4292cc:	sti    
  4292cd:	cld    
  4292ce:	in     al,dx
  4292cf:	adc    eax,DWORD PTR [eax-0x17]
  4292d2:	jnp    0x42931b
  4292d4:	je     0x4292c2
  4292d6:	jns    0x429321
  4292d8:	daa    
  4292d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292da:	clc    
  4292db:	jg     0x429322
  4292dd:	inc    ecx
  4292de:	addr16 (bad) 
  4292e0:	in     al,0x6c
  4292e2:	cmp    edi,DWORD PTR [esi]
  4292e4:	push   eax
  4292e5:	das    
  4292e6:	cmp    ecx,DWORD PTR [esi+0x1]
  4292e9:	pusha  
  4292ea:	pop    ebx
  4292eb:	daa    
  4292ec:	sti    
  4292ed:	cld    
  4292ee:	push   0x63e93ffd
  4292f3:	(bad)  
  4292f4:	iret   
  4292f5:	mov    ecx,0xf505ed8
  4292fa:	mov    ebp,0xe300457f
  4292ff:	xchg   esi,eax
  429300:	test   DWORD PTR [ebp*8-0x22af0915],ebx
  429307:	adc    eax,0x98a1290
  42930c:	add    DWORD PTR [ebp-0x91412],0x21
  429313:	ret    
  429314:	ret    
  429315:	mov    DWORD PTR [edi],edx
  429317:	fisub  WORD PTR [ecx+0x11]
  42931a:	pop    ds
  42931b:	inc    esi
  42931c:	fist   DWORD PTR [eax+0x0]
  42931f:	add    BYTE PTR [eax],al
  429321:	inc    ecx
  429322:	inc    esi
  429323:	add    ebp,DWORD PTR [edx+0x41]
  429326:	in     al,dx
  429327:	das    
  429328:	call   0x3df083
  42932d:	in     al,dx
  42932e:	sar    DWORD PTR [ecx-0x7dab75fc],0xec
  429335:	sbb    edi,esi
  429337:	xorps  xmm6,xmm0
  42933a:	sub    DWORD PTR [ebp+0x0],esp
  42933d:	(bad)  
  42933e:	jmp    0x429354
  429340:	xor    al,0x94
  429342:	dec    ecx
  429343:	sti    
  429344:	adc    BYTE PTR [esi+0x21d6216],0x65
  42934b:	mov    BYTE PTR [esi+0x4b],al
  42934e:	jl     0x429395
  429350:	lock call 0xd652:0xa200fdc3
  429358:	(bad)  
  429359:	popf   
  42935a:	add    BYTE PTR fs:[ebp-0x66],0x64
  42935f:	mov    BYTE PTR [esi+0x47],al
  429362:	arpl   WORD PTR [edx-0x779b17bb],ax
  429368:	inc    esi
  429369:	adc    eax,0x7afc457c
  42936e:	loope  0x429366
  429370:	loop   0x42933e
  429372:	jmp    0x42932a
  429374:	(bad)  
  429375:	in     eax,dx
  429376:	add    al,BYTE PTR [eax]
  429378:	test   ebx,esi
  42937a:	fbstp  TBYTE PTR [edi+0x3b8a680d]
  429380:	aaa    
  429381:	and    al,0x34
  429383:	(bad)  
  429384:	retf   0x0
  429387:	add    BYTE PTR [ebx-0x7c],al
  42938a:	xchg   BYTE PTR [edx-0x6],cl
  42938d:	add    eax,0x1ddd2f53
  429392:	mov    al,BYTE PTR [ebp-0x29]
  429395:	out    dx,al
  429396:	sub    esi,DWORD PTR [esi]
  429398:	ror    DWORD PTR [esp+edi*1-0x7b],1
  42939c:	mov    bl,0xca
  42939e:	or     eax,0xf83a2e87
  4293a3:	retf   0xdce4
  4293a6:	dec    esp
  4293a7:	push   eax
  4293a8:	adc    eax,0x9b06ccb7
  4293ad:	lods   al,BYTE PTR ds:[esi]
  4293ae:	out    dx,eax
  4293af:	stc    
  4293b0:	pushf  
  4293b1:	retf   
  4293b2:	sar    ebx,0x43
  4293b5:	xchg   esi,eax
  4293b6:	and    ecx,0xc0828d8d
  4293bc:	jmp    FWORD PTR [esi]
  4293be:	idiv   BYTE PTR [edi+edi*2-0x12]
  4293c2:	or     al,0x42
  4293c4:	test   BYTE PTR [ecx+0x1aed88a5],0x27
  4293cb:	cwde   
  4293cc:	and    BYTE PTR [ebx+edi*1-0x31664973],dh
  4293d3:	addr16 jnp 0x4293f4
  4293d6:	(bad)  
  4293d7:	call   FWORD PTR [ebx-0x3f]
  4293da:	pop    edx
  4293db:	cli    
  4293dc:	inc    esp
  4293dd:	jne    0x429361
  4293df:	rol    bh,0x2e
  4293e2:	cmp    BYTE PTR [ebp+0x37],0x2e
  4293e6:	mov    cl,0x4
  4293e8:	xchg   ebp,eax
  4293e9:	mov    al,ds:0xfecc
  4293ee:	add    bl,dh
  4293f0:	lea    esp,[edi]
  4293f2:	je     0x4293d4
  4293f4:	fstp   TBYTE PTR [ebx]
  4293f6:	leave  
  4293f7:	xor    BYTE PTR [edi],al
  4293f9:	mov    esp,0xd861f88
  4293fe:	fild   DWORD PTR [esi]
  429400:	sub    al,0xe9
  429402:	shl    BYTE PTR [edx-0xdf8b22d],1
  429408:	push   es
  429409:	jmp    0x4dc413de
  42940e:	ds call 0xdcec2d3f
  429414:	sub    al,0xd4
  429416:	inc    ebx
  429417:	in     eax,0xc6
  429419:	call   0xf335a2ac
  42941e:	ret    
  42941f:	les    edi,FWORD PTR [esi+0x2c]
  429422:	cmp    al,0x76
  429424:	inc    esi
  429425:	push   ebp
  429426:	pop    ss
  429427:	data16 jns 0x4293bf
  42942a:	cmp    DWORD PTR [eax+0x1e89182b],ebp
  429430:	push   ebx
  429431:	rcr    esp,0x24
  429434:	sub    eax,0xb1b380aa
  429439:	rep lods eax,DWORD PTR ds:[esi]
  42943b:	clc    
  42943c:	jns    0x429462
  42943e:	push   eax
  42943f:	or     eax,0xa03b3907
  429444:	xchg   DWORD PTR [ebp-0x76ee87f8],esp
  42944a:	push   ss
  42944b:	mov    bl,0x6
  42944d:	outs   dx,BYTE PTR ds:[esi]
  42944e:	xor    al,0xc1
  429450:	sub    ebx,esp
  429452:	add    DWORD PTR [eax],0x0
  429455:	add    ch,ch
  429457:	(bad)  
  429458:	call   0xe948e8d9
  42945d:	add    eax,DWORD PTR [esi+eax*2]
  429460:	mov    bl,0x88
  429462:	mov    esi,0x33c8e21a
  429467:	push   ds
  429468:	add    al,0xbc
  42946a:	cmp    ch,BYTE PTR [ebx]
  42946c:	ins    DWORD PTR es:[edi],dx
  42946d:	inc    esp
  42946e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42946f:	cli    
  429470:	into   
  429471:	pop    es
  429472:	ins    BYTE PTR es:[edi],dx
  429473:	inc    esp
  429474:	add    bl,al
  429476:	lock (bad) 
  429478:	cli    
  429479:	push   ss
  42947a:	ins    BYTE PTR es:[edi],dx
  42947b:	inc    edx
  42947c:	or     al,0x74
  42947e:	xor    dh,BYTE PTR [ebx]
  429480:	push   eax
  429481:	ins    BYTE PTR es:[edi],dx
  429482:	jb     0x4294de
  429484:	std    
  429485:	push   ss
  429486:	mov    eax,0x67eb65d6
  42948b:	leave  
  42948c:	test   DWORD PTR [esi],0xa90f7302
  429492:	lock add al,0x7d
  429496:	add    bh,BYTE PTR [ebp+eax*4+0x3d]
  42949a:	sbb    ch,BYTE PTR [esi]
  42949c:	sti    
  42949d:	cmp    DWORD PTR [esp+eax*8-0x9],edi
  4294a1:	ins    BYTE PTR es:[edi],dx
  4294a2:	or     DWORD PTR [edx-0x18],0xffffffc0
  4294a6:	xor    DWORD PTR [eax],0xb43065fb
  4294ac:	or     al,0x53
  4294ae:	sti    
  4294af:	jnp    0x4294f6
  4294b1:	leave  
  4294b2:	push   esi
  4294b3:	sub    cl,BYTE PTR [ebx-0x4a]
  4294b6:	inc    ecx
  4294b7:	stos   BYTE PTR es:[edi],al
  4294b8:	ret    
  4294b9:	fld    QWORD PTR [eax]
  4294bb:	add    BYTE PTR [eax],al
  4294bd:	imul   eax,esp,0xffffffcb
  4294c0:	cmp    DWORD PTR [edx-0x3c],edi
  4294c3:	ret    
  4294c4:	cmp    DWORD PTR [edx-0x3c],edi
  4294c7:	mov    ebx,0xb3c46a39
  4294cc:	cmp    DWORD PTR [ebp+0x2d],eax
  4294cf:	sti    
  4294d0:	(bad)  
  4294d2:	pop    ss
  4294d3:	inc    eax
  4294d4:	jmp    0xedb7dc4c
  4294d9:	gs cmp bh,ah
  4294dc:	enter  0xc465,0xb3
  4294e0:	jb     0x42951d
  4294e2:	jb     0x42954a
  4294e4:	jmp    0x28c29bdc
  4294e9:	dec    esi
  4294ea:	mov    ds:0x758777f,al
  4294ef:	add    DWORD PTR [eax],0x6249230b
  4294f5:	in     al,0x52
  4294f7:	dec    ebx
  4294f8:	call   0x427963
  4294fd:	xchg   ecx,eax
  4294fe:	cmc    
  4294ff:	or     BYTE PTR [ebp-0x1e],0x0
  429503:	dec    ebp
  429504:	hlt    
  429505:	add    DWORD PTR [esi-0x29],0xa03468d
  42950c:	mov    DWORD PTR [edi-0x12],eax
  42950f:	test   bl,bl
  429511:	outs   dx,DWORD PTR ds:[esi]
  429512:	add    eax,0x8503ff2b
  429517:	add    BYTE PTR [eax],al
  429519:	retf   0xbb78
  42951c:	call   0x3bc8c6
  429521:	add    BYTE PTR [eax],al
  429523:	add    BYTE PTR [ecx-0x15],al
  429526:	test   bh,bh
  429528:	push   ds
  429529:	imul   eax,ecx,0x93a4cb07
  42952f:	mov    al,0x9
  429531:	add    ecx,DWORD PTR [ecx-0x705a64b9]
  429537:	mov    al,0xd9
  429539:	add    cl,BYTE PTR [ebp+0x3f7db85f]
  42953f:	add    eax,0x11b7f945
  429544:	fiadd  DWORD PTR [edx]
  429546:	pop    esi
  429547:	mov    ebp,ecx
  429549:	add    al,0x89
  42954b:	ja     0x4294df
  42954d:	add    BYTE PTR [di+0x46],0x7b
  429552:	xor    eax,0xfb454c30
  429557:	gs jecxz 0x4295a1
  42955a:	pop    es
  42955b:	shr    WORD PTR [ecx-0x11],1
  42955f:	rol    WORD PTR [edi+0x9],cl
  429563:	shr    WORD PTR [ecx-0x1d],0x66
  429568:	ret    
  429569:	inc    edi
  42956a:	or     ecx,DWORD PTR [edi]
  42956c:	repz mov cl,al
  42956f:	or     esp,DWORD PTR [ebx-0x3f2c5548]
  429575:	ror    BYTE PTR [ebp+0xb],0x5c
  429579:	pusha  
  42957a:	add    edi,edi
  42957c:	inc    esp
  42957d:	and    BYTE PTR [eax+0x43],dh
  429580:	in     eax,0x9c
  429582:	aas    
  429583:	or     al,0xa3
  429585:	loopne 0x429531
  429587:	jmp    0x429589
  429589:	add    BYTE PTR [eax],al
  42958b:	mov    al,ds:0x440b4e08
  429590:	pop    eax
  429591:	movq   QWORD PTR [edi],mm5
  429594:	dec    ebx
  429595:	iret   
  429596:	or     ah,BYTE PTR [ecx+ebx*2-0x1a104f7]
  42959d:	add    al,0xbf
  42959f:	inc    ebx
  4295a0:	xor    DWORD PTR [ecx-0x79],edx
  4295a3:	ss ss test ah,al
  4295a7:	push   DWORD PTR [edx+0x6bdbd3a9]
  4295ad:	mov    cl,0xf9
  4295af:	mov    esp,0xcbeba9a3
  4295b4:	jae    0x429567
  4295b6:	stc    
  4295b7:	lods   al,BYTE PTR ds:[esi]
  4295b8:	mov    bl,0xa9
  4295ba:	fistp  WORD PTR [ebx-0x63064ea5]
  4295c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295c1:	mov    ecx,0x8c566a07
  4295c6:	ret    
  4295c7:	sub    al,0xc0
  4295c9:	fmul   st(0),st
  4295cb:	mov    cl,0x22
  4295cd:	dec    DWORD PTR [esi+0x26]
  4295d0:	jmp    0x86349812
  4295d5:	and    eax,DWORD PTR [esi]
  4295d7:	repz sbb eax,0x4c572d8c
  4295dd:	mov    edi,0x879521ff
  4295e2:	inc    edx
  4295e3:	repnz fcom DWORD PTR [esi-0x3b]
  4295e7:	mov    al,0x6
  4295e9:	jmp    0x24817de9
  4295ee:	les    eax,FWORD PTR [eax]
  4295f0:	add    BYTE PTR [eax],al
  4295f2:	cmp    al,0xb3
  4295f4:	add    cl,dl
  4295f6:	cmp    DWORD PTR [edx+0x11],edx
  4295f9:	pop    ss
  4295fa:	cmp    eax,DWORD PTR [edx-0x5a]
  4295fd:	add    ebx,DWORD PTR [esi-0x1429aef0]
  429603:	push   es
  429604:	jmp    0xdbf5c988
  429609:	mov    ch,dh
  42960b:	cmp    ch,BYTE PTR [esp+eax*8]
  42960e:	add    al,0x42
  429610:	in     al,0x4b
  429612:	ss (bad) 
  429614:	call   0xf46a361b
  429619:	xor    edi,ebp
  42961b:	(bad)  
  42961c:	call   0x253729c2
  429621:	(bad)  
  429622:	fsub   QWORD PTR [ecx+0x1fd6c15f]
  429628:	or     BYTE PTR ds:0xbe7106f3,cl
  42962e:	lock out dx,al
  429630:	sti    
  429631:	dec    ebx
  429632:	mov    dh,0xc3
  429634:	call   0xca12a2e9
  429639:	push   ecx
  42963a:	jmp    0x429645
  42963c:	mov    cl,0x41
  42963e:	in     al,0x6
  429640:	xor    al,0xe
  429642:	mov    ecx,DWORD PTR [ebx]
  429644:	loopne 0x429649
  429646:	repz sub BYTE PTR [ecx+0x47dffb0],0x48
  42964e:	scas   al,BYTE PTR es:[edi]
  42964f:	ret    
  429650:	call   0xac818c92
  429655:	ret    
  429656:	add    BYTE PTR [eax],al
  429658:	add    BYTE PTR [esi+eax*1+0x32],dh
  42965c:	aaa    
  42965d:	push   es
  42965e:	aaa    
  42965f:	xlat   BYTE PTR ds:[ebx]
  429660:	ret    
  429661:	mov    eax,fs:0xc330ee47
  429667:	(bad)  
  429668:	call   0xe48514e3
  42966d:	sbb    BYTE PTR [eax+0x6],cl
  429670:	jmp    0xe6851465
  429675:	add    eax,0x30f8a412
  42967a:	daa    
  42967b:	pop    edx
  42967c:	lods   al,BYTE PTR ds:[esi]
  42967d:	mov    ?,WORD PTR [esi+0x42]
  429680:	repnz dec ecx
  429682:	push   0xa7cb7255
  429687:	jecxz  0x4296ba
  429689:	outs   dx,BYTE PTR ds:[esi]
  42968a:	sbb    dl,BYTE PTR [ebx+ebp*8-0x40b0f910]
  429691:	xor    eax,0xe651152c
  429696:	(bad)  
  429697:	(bad)  
  429698:	fstp   DWORD PTR [ecx-0x233abb83]
  42969e:	fnstsw WORD PTR [esi-0x400a1a84]
  4296a4:	adc    al,bl
  4296a6:	and    al,0xfb
  4296a8:	jmp    0xe943d335
  4296ad:	lock lods al,BYTE PTR ds:[esi]
  4296af:	pop    es
  4296b0:	out    0xc3,al
  4296b2:	inc    esi
  4296b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296b4:	sub    dh,bh
  4296b6:	dec    ecx
  4296b7:	inc    esp
  4296b8:	or     eax,0xe9fb24cf
  4296bd:	add    BYTE PTR [eax],al
  4296bf:	add    al,dh
  4296c1:	and    DWORD PTR ds:0xffc701ed,edx
  4296c7:	jno    0x4296a1
  4296c9:	(bad)  
  4296cb:	cmp    eax,0x5849437
  4296d0:	addr16 pop es
  4296d2:	add    cl,ch
  4296d4:	mov    al,ds:0x93114ed5
  4296d9:	(bad)  
  4296da:	(bad)  
  4296db:	call   0xe845df81
  4296e0:	jg     0x4296a5
  4296e2:	and    eax,DWORD PTR [eax]
  4296e4:	fst    QWORD PTR ds:[eax+edx*2]
  4296e8:	cmp    DWORD PTR [edx-0x5],ecx
  4296eb:	test   BYTE PTR [edx-0x2972f2a9],cl
  4296f1:	inc    ebp
  4296f2:	mov    eax,DWORD PTR [eax]
  4296f4:	pop    edx
  4296f5:	or     dl,BYTE PTR [eax-0x1]
  4296f8:	inc    edi
  4296f9:	mov    cl,BYTE PTR [ebx]
  4296fb:	inc    eax
  4296fc:	dec    edx
  4296fd:	xchg   ebx,eax
  4296fe:	inc    esp
  4296ff:	and    al,0x22
  429701:	jb     0x4296e6
  429703:	mov    ebx,DWORD PTR [edx+0xa]
  429706:	lea    eax,[esi+esi*8+0x28]
  42970a:	dec    ebx
  42970b:	push   DWORD PTR [edi]
  42970d:	adc    dl,BYTE PTR [ecx]
  42970f:	inc    eax
  429710:	sbb    cl,BYTE PTR [edi-0x5dbddb8c]
  429716:	pushf  
  429717:	add    BYTE PTR [edx],cl
  429719:	or     ch,al
  42971b:	mov    eax,ds:0x8bf6dc85
  429720:	adc    al,0xe4
  429722:	inc    ebx
  429723:	and    al,0x0
  429725:	add    BYTE PTR [eax],al
  429727:	mov    dh,0xa
  429729:	mov    edi,0x1a31b644
  42972e:	add    dl,cl
  429730:	or     DWORD PTR [ecx-0x77d249bc],ecx
  429736:	pop    esp
  429737:	neg    BYTE PTR [edx]
  429739:	sbb    DWORD PTR [esi+esi*8+0xb],0xffffff89
  42973e:	pop    esp
  42973f:	out    0xfa,al
  429741:	or     BYTE PTR [esi+esi*8-0x6],0x2a
  429746:	rcr    dl,0xb7
  429749:	fild   WORD PTR [ebp+0xf2f26d6]
  42974f:	push   es
  429750:	jb     0x429752
  429752:	add    BYTE PTR [edx-0x79dbbb72],bl
  429758:	fstp   TBYTE PTR [esi]
  42975a:	add    DWORD PTR [ecx],ecx
  42975c:	inc    edi
  42975d:	pop    ds
  42975e:	adc    al,0xf3
  429760:	and    DWORD PTR [edx-0x40560bcc],eax
  429766:	and    esi,esp
  429768:	xchg   edi,eax
  429769:	stc    
  42976a:	or     ah,BYTE PTR [ebp+0x337e9a6f]
  429770:	out    dx,al
  429771:	cdq    
  429772:	mov    BYTE PTR [edi-0x5072ecb5],dh
  429778:	adc    ebx,DWORD PTR [eax]
  42977a:	push   eax
  42977b:	xor    eax,0xf310db6b
  429780:	mov    esp,0x7002a00a
  429785:	inc    DWORD PTR [edi-0x45]
  429788:	sbb    al,0x7b
  42978a:	mov    esi,0xf3000000
  42978f:	das    
  429790:	inc    DWORD PTR [edi-0x1c]
  429793:	mov    bl,0x6e
  429795:	add    bl,dh
  429797:	das    
  429798:	(bad)  
  429799:	or     ch,BYTE PTR [edi-0x30]
  42979c:	add    eax,DWORD PTR [eax]
  42979e:	repz push edi
  4297a0:	add    al,0x84
  4297a2:	pop    esi
  4297a3:	das    
  4297a4:	(bad)  
  4297a5:	(bad)  
  4297a6:	cmp    eax,DWORD PTR [ebp+0x7a]
  4297a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4297aa:	repz sub eax,0x4a37c1ff
  4297b0:	add    al,BYTE PTR ds:0x443d2fa3
  4297b6:	pop    ss
  4297b7:	inc    esp
  4297b8:	inc    DWORD PTR [ebx-0x1d84e24d]
  4297be:	repz sub eax,0x2eee67ff
  4297c4:	(bad)  
  4297c5:	(bad)  
  4297c6:	jle    0x429772
  4297c8:	ficom  DWORD PTR [ebx+0x4fff2df3]
  4297ce:	inc    eax
  4297cf:	add    ecx,edx
  4297d1:	dec    esi
  4297d2:	inc    eax
  4297d3:	stos   DWORD PTR es:[edi],eax
  4297d4:	mov    edx,0x34fdcb23
  4297d9:	adc    eax,0xc3f807b3
  4297de:	jl     0x42976b
  4297e0:	test   eax,0xe9906f04
  4297e5:	add    esi,ebx
  4297e7:	xlat   BYTE PTR ds:[ebx]
  4297e8:	test   al,0x9d
  4297ea:	jnp    0x429777
  4297ec:	int    0x9b
  4297ee:	pop    ebp
  4297ef:	and    al,0xe9
  4297f1:	xchg   BYTE PTR [eax],al
  4297f3:	add    BYTE PTR [eax],al
  4297f5:	outs   dx,DWORD PTR ds:[esi]
  4297f6:	jmp    0x429850
  4297f8:	add    esi,ebx
  4297fa:	push   es
  4297fb:	sbb    DWORD PTR ds:0xc3fd8ede,esi
  429801:	cmp    al,0x8f
  429803:	mov    ebp,0x2dd904df
  429808:	xchg   BYTE PTR [edi+0x92c04ea],dh
  42980e:	or     al,0xe9
  429810:	add    esi,DWORD PTR [esi+0x47]
  429813:	mov    ch,0xd5
  429815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429816:	xchg   ecx,eax
  429817:	ins    DWORD PTR es:[edi],dx
  429818:	fbld   TBYTE PTR [eax+0x7]
  42981b:	jmp    0xfc663b23
  429820:	jae    0x429804
  429822:	(bad)  
  429823:	call   0xa9dccba6
  429828:	jg     0x4297ee
  42982a:	call   0xf17d:0x5dc83ca
  429831:	outs   dx,DWORD PTR ds:[esi]
  429832:	(bad)  
  429833:	cli    
  429834:	not    ch
  429836:	pushf  
  429837:	mov    ecx,0xdaeb373d
  42983c:	adc    ecx,esp
  42983e:	(bad)  
  42983f:	stos   BYTE PTR es:[edi],al
  429840:	enter  0x1210,0xe5
  429844:	push   ds
  429845:	loope  0x429893
  429847:	sub    eax,0xbe07ffe8
  42984c:	add    esi,DWORD PTR [ecx-0x62fef336]
  429852:	sbb    dh,BYTE PTR cs:[ebx]
  429855:	cwde   
  429856:	and    eax,DWORD PTR [eax]
  429858:	scas   eax,DWORD PTR es:[edi]
  429859:	add    BYTE PTR [eax],al
  42985b:	add    BYTE PTR [ebx+0x7ee80ce7],bh
  429861:	arpl   cx,bp
  429863:	cmp    al,0xc0
  429865:	pop    ds
  429866:	sti    
  429867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429868:	stos   DWORD PTR es:[edi],eax
  429869:	out    0x9,eax
  42986b:	(bad)  ds:0x5b25c20a
  429871:	or     eax,0x2bb48720
  429876:	xchg   ebp,eax
  429877:	mov    edx,0xcd4491a5
  42987c:	xor    bl,dl
  42987e:	mov    WORD PTR ds:0xba4fdf5b,fs
  429884:	jae    0x429850
  429886:	and    edx,DWORD PTR [ecx]
  429888:	pop    ds
  429889:	and    BYTE PTR ds:0xffc70695,dl
  42988f:	arpl   WORD PTR [edi+0x2b721b9a],bp
  429895:	out    0x37,eax
  429897:	jo     0x4298c2
  429899:	and    DWORD PTR [esi-0x7720eb53],eax
  42989f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298a0:	cli    
  4298a1:	mov    eax,DWORD PTR [ebp+ecx*8+0x30]
  4298a5:	mov    es,WORD PTR [edx-0xd]
  4298a8:	jne    0x429874
  4298aa:	and    ebp,DWORD PTR [ebp+0x6309c56f]
  4298b0:	mov    ebx,0xb4f309e6
  4298b5:	out    0xc,al
  4298b7:	jb     0x42986c
  4298b9:	out    0xf,al
  4298bb:	popa   
  4298bc:	mov    ecx,0x9d3907
  4298c1:	add    BYTE PTR [eax],al
  4298c3:	int3   
  4298c4:	cli    
  4298c5:	je     0x4298b3
  4298c7:	mov    esp,0xee2787a2
  4298cc:	sbb    al,0x44
  4298ce:	or     eax,0x5441df0
  4298d3:	inc    DWORD PTR [esi+0x5ee007c]
  4298d9:	adc    cl,BYTE PTR [edi]
  4298db:	or     BYTE PTR [ebx-0x7],bl
  4298de:	inc    DWORD PTR [ebp-0x7a]
  4298e1:	jl     0x429907
  4298e3:	out    dx,al
  4298e4:	or     al,BYTE PTR [ebx+0x4ba18245]
  4298ea:	and    al,0x7e
  4298ec:	mov    ds:0xd5537507,eax
  4298f1:	jae    0x429917
  4298f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298f4:	(bad)  
  4298f5:	lahf   
  4298f6:	cs je  0x4298ce
  4298f9:	add    bh,0xf5
  4298fc:	xor    al,0x52
  4298fe:	mov    edi,DWORD PTR [edi+0x37]
  429901:	mov    ebp,0x823f5a04
  429906:	in     al,dx
  429907:	leave  
  429908:	jmp    0x31e91d04
  42990d:	dec    edx
  42990e:	push   esi
  42990f:	ins    DWORD PTR es:[edi],dx
  429910:	test   BYTE PTR [ebx],al
  429912:	xor    esp,ecx
  429914:	aaa    
  429915:	adc    dh,0xa7
  429918:	dec    ecx
  429919:	pop    ds
  42991a:	sbb    al,0xa3
  42991c:	push   ecx
  42991d:	pop    ds
  42991e:	sbb    al,0x93
  429920:	push   ecx
  429921:	pop    ds
  429922:	and    BYTE PTR [ebx+0x241f51],dl
  429928:	add    BYTE PTR [eax],al
  42992a:	int    0x49
  42992c:	pop    ds
  42992d:	sub    BYTE PTR [edx+0x6],cl
  429930:	add    BYTE PTR [eax],al
  429932:	repnz cwde 
  429934:	sub    edi,edi
  429936:	cmc    
  429937:	mov    al,ds:0x89d6244b
  42993c:	shl    BYTE PTR [esp+eax*8-0x60],0x43
  429941:	and    al,0xba
  429943:	or     cl,al
  429945:	mov    DWORD PTR [esi],edi
  429947:	sub    bl,BYTE PTR [ebx]
  429949:	cmp    ecx,DWORD PTR [ecx-0x5daef3a7]
  42994f:	pop    ebp
  429950:	sub    esi,edi
  429952:	repz cmp ch,dh
  429955:	mov    edi,0x51a9a
  42995a:	repz sbb al,0x3f
  42995d:	lea    edx,[edi]
  42995f:	or     al,0x13
  429961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429962:	adc    eax,0x2fc25a85
  429967:	or     al,0x18
  429969:	add    DWORD PTR [ebx+0x74fa401f],ecx
  42996f:	xchg   esp,eax
  429970:	xor    ecx,DWORD PTR [ecx+0x370f53e7]
  429976:	pusha  
  429977:	inc    eax
  429978:	sbb    DWORD PTR [ebx],0xfffffff2
  42997b:	das    
  42997c:	inc    DWORD PTR [esi+0x40195ff6]
  429982:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429984:	lds    edi,FWORD PTR [edi]
  429986:	jo     0x42991f
  429988:	or     ecx,DWORD PTR [ebx]
  42998a:	ja     0x42994c
  42998c:	add    eax,DWORD PTR [eax]
  42998e:	add    BYTE PTR [eax],al
  429990:	add    bl,dh
  429992:	add    al,BYTE PTR [ebp+0x2ff300]
  429998:	test   BYTE PTR [edi],dl
  42999a:	das    
  42999b:	(bad)  
  42999c:	push   DWORD PTR [eax+0x49]
  42999f:	ret    
  4299a0:	add    ah,ah
  4299a2:	stos   BYTE PTR es:[edi],al
  4299a3:	and    DWORD PTR [eax],eax
  4299a5:	repz das 
  4299a7:	pop    ss
  4299a8:	cmp    ebp,esp
  4299aa:	das    
  4299ab:	(bad)  
  4299ac:	cmp    esi,edi
  4299ae:	jge    0x4299a6
  4299b0:	repnz lods eax,DWORD PTR ds:[esi]
  4299b2:	daa    
  4299b3:	jg     0x4299b6
  4299b5:	repz sub eax,0x9070061c
  4299bb:	add    eax,DWORD PTR [eax]
  4299bd:	data16 adc al,0x84
  4299c0:	jp     0x4299ed
  4299c2:	add    BYTE PTR cs:[ebx+esi*4+0xffff2e],al
  4299ca:	out    dx,al
  4299cb:	cdq    
  4299cc:	add    DWORD PTR [ebp+0x7],edx
  4299cf:	jo     0x429998
  4299d1:	adc    bh,dl
  4299d3:	aas    
  4299d4:	jg     0x429a05
  4299d6:	jmp    0x4299da
  4299d8:	xor    eax,0xb15e6d4c
  4299dd:	in     al,dx
  4299de:	sub    ebx,DWORD PTR [edx]
  4299e0:	jge    0x429a12
  4299e2:	adc    esp,DWORD PTR [ebx+eax*2+0x7]
  4299e6:	rcr    BYTE PTR [ebp-0x40],cl
  4299e9:	hlt    
  4299ea:	xor    DWORD PTR [eax+0xb010613],0xffffff85
  4299f1:	mov    ebx,0xc1404
  4299f6:	add    BYTE PTR [eax],al
  4299f8:	jne    0x4299cd
  4299fa:	int3   
  4299fb:	repnz push 0xffffffcb
  4299fe:	(bad)  
  4299ff:	bnd jo 0x429a50
  429a02:	cld    
  429a03:	hlt    
  429a04:	aad    0x46
  429a06:	in     eax,0x9d
  429a08:	lock mov dh,0x63
  429a0b:	(bad)  
  429a0c:	adc    ah,bl
  429a0e:	jge    0x4299f2
  429a10:	mov    ebp,0xd6b7051d
  429a15:	test   al,0x65
  429a17:	jmp    0x429a1a
  429a19:	call   0x3216:0xeab77df4
  429a20:	mov    bh,0xea
  429a22:	test   BYTE PTR [edi-0x7b2765d6],0x33
  429a29:	movsx  edx,WORD PTR [ebx]
  429a2c:	mov    ds:0xb9e7a591,eax
  429a31:	mov    dh,0x21
  429a33:	push   esp
  429a34:	je     0x429a80
  429a36:	in     eax,dx
  429a37:	jl     0x429aa1
  429a39:	(bad)  
  429a3b:	xor    BYTE PTR [esi+0x6a],bl
  429a3e:	cmp    DWORD PTR [ecx+esi*1-0x21],0xffffff8a
  429a43:	jp     0x429a74
  429a45:	jmp    0x429a13
  429a47:	jl     0x429a7a
  429a49:	(bad)  
  429a4a:	jmp    FWORD PTR [edi]
  429a4c:	add    eax,DWORD PTR [edi]
  429a4e:	add    cl,ch
  429a50:	iret   
  429a51:	inc    edi
  429a52:	push   ss
  429a53:	mov    al,0xfd
  429a55:	xor    eax,0xc528b11e
  429a5a:	cmp    esp,DWORD PTR [ecx+0x0]
  429a5d:	add    BYTE PTR [eax],al
  429a5f:	mov    bl,0xe3
  429a61:	sub    DWORD PTR [eax-0x16ffe434],edx
  429a67:	dec    esi
  429a68:	mov    cs,WORD PTR [ebp+eax*1-0x54]
  429a6c:	fadd   st,st(0)
  429a6e:	ds cli 
  429a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a71:	mov    BYTE PTR ds:0x265ec8b,ah
  429a77:	jb     0x429a43
  429a79:	and    ebx,ecx
  429a7b:	inc    eax
  429a7c:	sbb    al,0x74
  429a7e:	int    0x48
  429a80:	xchg   edx,eax
  429a81:	jl     0x429a48
  429a83:	cmp    BYTE PTR [edi],ah
  429a85:	sub    al,0xd2
  429a87:	add    eax,0x8ba9851c
  429a8c:	add    edi,edx
  429a8e:	sub    eax,0xf786fe5b
  429a93:	cmp    BYTE PTR [edx+0x306bf6f2],cl
  429a99:	cli    
  429a9a:	pop    esi
  429a9b:	fcomp  QWORD PTR [ebx]
  429a9d:	je     0x429aac
  429a9f:	jmp    FWORD PTR [esi]
  429aa1:	(bad)  
  429aa2:	sti    
  429aa3:	into   
  429aa4:	sbb    ebp,DWORD PTR [edi]
  429aa6:	and    bh,BYTE PTR [ecx+0x6]
  429aa9:	call   0xfb5f4dee
  429aae:	bound  edi,QWORD PTR [edi+0x3fb5eed7]
  429ab4:	mov    ds,WORD PTR [ebp+ecx*8-0x20]
  429ab8:	fstp   QWORD PTR [ecx]
  429aba:	lahf   
  429abb:	(bad)  [ebx-0x698e12a6]
  429ac1:	add    edi,ecx
  429ac3:	add    BYTE PTR [eax],al
  429ac5:	add    BYTE PTR [ebx-0x36ff7919],bl
  429acb:	pop    eax
  429acd:	je     0x429aa0
  429acf:	cmp    bh,0x82
  429ad2:	sbb    cl,BYTE PTR [edi]
  429ad4:	push   eax
  429ad5:	inc    DWORD PTR [esi+0x26]
  429ad8:	and    ecx,DWORD PTR [ebp-0x17dcd0b2]
  429ade:	gs inc eax
  429ae0:	idiv   bh
  429ae2:	pop    ss
  429ae3:	retf   0x473
  429ae6:	lods   al,BYTE PTR ds:[esi]
  429ae7:	inc    esi
  429ae8:	pop    ds
  429ae9:	sbb    ch,BYTE PTR [ebp+0x1101f46]
  429aef:	inc    esi
  429af0:	pop    ds
  429af1:	adc    BYTE PTR [ecx],bl
  429af3:	leave  
  429af4:	pop    es
  429af5:	cmp    edx,DWORD PTR [esi+ebp*2+0x34b133c5]
  429afc:	jecxz  0x429aa9
  429afe:	ds in  al,dx
  429b00:	imul   BYTE PTR [edx+0x58]
  429b03:	add    bl,BYTE PTR [ebx-0x7d129334]
  429b09:	lock xor ecx,ebx
  429b0c:	jae    0x429b57
  429b0e:	ret    
  429b0f:	dec    ebp
  429b10:	pop    ds
  429b11:	adc    BYTE PTR [ebx-0x60c489f4],al
  429b17:	dec    ebx
  429b18:	inc    DWORD PTR [edx+0x751c0651]
  429b1e:	sti    
  429b1f:	mov    eax,ds:0x55da84fa
  429b24:	adc    ch,BYTE PTR [edx+0x1a]
  429b27:	mov    eax,eax
  429b29:	or     BYTE PTR [eax],al
  429b2b:	add    BYTE PTR [eax],al
  429b2d:	jp     0x429b1c
  429b2f:	jae    0x429b55
  429b31:	loop   0x429aba
  429b33:	jl     0x429b59
  429b35:	repnz cli 
  429b37:	sub    BYTE PTR [edx],0xcd
  429b3a:	in     al,dx
  429b3b:	test   al,al
  429b3d:	push   esi
  429b3e:	push   es
  429b3f:	test   BYTE PTR [esi+esi*4+0x10],0xf7
  429b44:	inc    esp
  429b45:	repz dec ebx
  429b47:	ja     0x7f51df84
  429b4d:	mov    al,0x17
  429b4f:	out    0x1,al
  429b51:	dec    edi
  429b52:	(bad)  
  429b54:	(bad)  
  429b55:	sbb    eax,0xbd2bd808
  429b5a:	sub    al,0x98
  429b5c:	pop    es
  429b5d:	data16 jmp 0x429b47
  429b60:	pop    ss
  429b61:	inc    ebx
  429b62:	loope  0x429bde
  429b64:	jl     0x429b35
  429b66:	pop    es
  429b67:	ja     0x429bc5
  429b69:	xlat   BYTE PTR ds:[ebx]
  429b6a:	push   cs
  429b6b:	sbb    al,0x4d
  429b6d:	leave  
  429b6e:	inc    esp
  429b6f:	sub    eax,0xe4043787
  429b74:	xchg   BYTE PTR [esi],dh
  429b76:	sub    al,dl
  429b78:	mov    dl,dh
  429b7a:	inc    edi
  429b7b:	out    dx,eax
  429b7c:	sub    esi,DWORD PTR [ebp+0x64]
  429b7f:	jns    0x429bc5
  429b81:	pop    ss
  429b82:	sbb    al,0xcc
  429b84:	pop    ecx
  429b85:	enter  0x22a8,0x5d
  429b89:	xor    DWORD PTR [ebx],esp
  429b8b:	call   DWORD PTR [eax+ebp*2+0x73]
  429b8f:	sub    esp,0xc3000000
  429b95:	add    dl,dl
  429b97:	gs jecxz 0x429ba3
  429b9a:	add    al,0x53
  429b9c:	cmp    al,0x32
  429b9e:	repz adc DWORD PTR [ebx-0x3b7fd1],esi
  429ba5:	stos   BYTE PTR es:[edi],al
  429ba6:	ret    0xc3a7
  429ba9:	in     eax,dx
  429baa:	add    al,0x1
  429bac:	xor    al,0x62
  429bae:	push   edi
  429baf:	inc    eax
  429bb0:	repz das 
  429bb2:	(bad)  
  429bb3:	cli    
  429bb4:	out    0x93,al
  429bb6:	push   cs
  429bb7:	inc    eax
  429bb8:	rep stos BYTE PTR es:[edi],al
  429bba:	inc    ebx
  429bbb:	je     0x429b8d
  429bbd:	test   al,0xc2
  429bbf:	mov    bl,0x68
  429bc1:	push   es
  429bc2:	mov    ah,0x73
  429bc4:	clc    
  429bc5:	push   0x28
  429bc7:	sbb    BYTE PTR [edx-0x4c7902d1],dh
  429bcd:	xchg   edx,eax
  429bce:	jecxz  0x429b50
  429bd0:	ficomp DWORD PTR [ebx+edi*2]
  429bd3:	add    al,0x1c
  429bd5:	dec    esi
  429bd6:	enter  0xc0be,0x30
  429bda:	out    0x7a,al
  429bdc:	adc    esp,DWORD PTR ss:[eax-0x43]
  429be0:	xrelease mov DWORD PTR [esp+edi*1],ebp
  429be4:	inc    ebx
  429be5:	sbb    al,0xf4
  429be7:	pop    DWORD PTR [edx]
  429be9:	(bad)  
  429bea:	call   0xe95f345a
  429bef:	add    ebx,esp
  429bf1:	shl    DWORD PTR [esi+edi*2+0x43de7706],0x0
  429bf9:	add    BYTE PTR [eax],al
  429bfb:	xor    BYTE PTR [edi],0x6
  429bfe:	(bad)  
  429bff:	cwde   
  429c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c01:	pop    edi
  429c02:	(bad)  
  429c03:	out    dx,eax
  429c04:	pop    esi
  429c05:	add    DWORD PTR [ebx],0xfffffff3
  429c08:	push   es
  429c09:	xchg   ecx,eax
  429c0a:	and    ch,ah
  429c0c:	sbb    edx,DWORD PTR [edx+0x5116e67e]
  429c12:	mov    ebx,?
  429c14:	push   es
  429c15:	jmp    0x7acbbd35
  429c1a:	sub    al,0x6c
  429c1c:	inc    ebp
  429c1d:	sbb    DWORD PTR [edi-0x4a],edi
  429c20:	jbe    0x429c3b
  429c22:	ins    BYTE PTR es:[edi],dx
  429c23:	xor    eax,0x1b83e91c
  429c28:	push   ecx
  429c29:	cmc    
  429c2a:	add    esi,ebx
  429c2c:	(bad)  
  429c2d:	sbb    al,0x98
  429c2f:	pop    es
  429c30:	(bad)  
  429c31:	call   0xaad040cf
  429c36:	add    al,0x8
  429c38:	xor    eax,0xc46cbdcf
  429c3d:	jmp    ecx
  429c3f:	iret   
  429c40:	cmp    BYTE PTR [esi-0x62],ah
  429c43:	jnp    0x429c83
  429c45:	sti    
  429c46:	aas    
  429c47:	ins    DWORD PTR es:[edi],dx
  429c48:	int3   
  429c49:	cli    
  429c4a:	pusha  
  429c4b:	adc    eax,0xcbe90020
  429c50:	ss jae 0x429c31
  429c53:	push   ebp
  429c54:	mov    bh,0xfa
  429c56:	ret    0x9821
  429c59:	pop    es
  429c5a:	xchg   DWORD PTR [ecx-0x40],ecx
  429c5d:	or     ecx,DWORD PTR [edi+0x39000000]
  429c63:	enter  0x8f09,0xab
  429c67:	dec    esi
  429c68:	mov    edi,0x7f2b2c3c
  429c6d:	(bad)
  429c70:	in     al,dx
  429c71:	sbb    eax,0x3a0006f6
  429c76:	sar    DWORD PTR [eax+0x3484a92e],0x89
  429c7d:	sbb    eax,0x358cc393
  429c82:	xchg   ebx,eax
  429c83:	iret   
  429c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c85:	cmp    BYTE PTR [ebx+ebx*2-0x77],0x45
  429c8a:	push   ebx
  429c8b:	mov    bh,0x8c
  429c8d:	sbb    eax,0x42a6b353
  429c92:	fidivr WORD PTR [edx+0x5b5c0923]
  429c98:	lea    eax,ds:0x6ca6a753
  429c9e:	and    edi,0x37
  429ca1:	pusha  
  429ca2:	sub    esp,edi
  429ca4:	das    
  429ca5:	inc    edx
  429ca6:	xlat   BYTE PTR ds:[ebx]
  429ca7:	pop    edi
  429ca8:	out    dx,al
  429ca9:	data16 fmul DWORD PTR [ecx+0x67305b4]
  429cb0:	add    cl,ch
  429cb2:	mov    BYTE PTR [esi+0x0],ah
  429cb5:	jmp    0x86e4aa
  429cba:	(bad)  
  429cbb:	sub    bl,bh
  429cbd:	mov    ebx,DWORD PTR [edx+0x7]
  429cc0:	mov    DWORD PTR [esi+ebp*8+0x42],ebx
  429cc4:	mov    BYTE PTR [eax+eax*1+0x0],bl
  429cc8:	add    dh,ch
  429cca:	inc    esi
  429ccb:	jecxz  0x429cf6
  429ccd:	pop    eax
  429cce:	out    dx,al
  429ccf:	test   BYTE PTR [ebp+0xa7273e],0xca
  429cd6:	push   es
  429cd7:	mov    eax,0x6caa1
  429cdc:	call   0x3a21b3
  429ce1:	inc    ecx
  429ce2:	lds    ecx,FWORD PTR [edi-0x73]
  429ce5:	mov    ?,WORD PTR [edx]
  429ce7:	aaa    
  429ce8:	push   eax
  429ce9:	repnz dec esp
  429ceb:	jmp    0xf075:0xbf9a95ff
  429cf2:	lahf   
  429cf3:	and    DWORD PTR [esi+ecx*1],0x6
  429cf7:	add    BYTE PTR [eax],al
  429cf9:	ficomp DWORD PTR [edi+0x32f62443]
  429cff:	jecxz  0x429d49
  429d01:	dec    ecx
  429d02:	in     eax,dx
  429d03:	test   BYTE PTR [edx+ecx*2-0x74bf80e3],0x6
  429d0b:	add    BYTE PTR [ebx+0x400a2257],cl
  429d11:	pop    edx
  429d12:	lahf   
  429d13:	inc    ebx
  429d14:	and    al,0x12
  429d16:	pushf  
  429d17:	inc    ebx
  429d18:	and    al,0x2a
  429d1a:	lahf   
  429d1b:	inc    ebx
  429d1c:	and    al,0xee
  429d1e:	fwait
  429d1f:	inc    ebx
  429d20:	and    al,0x2e
  429d22:	lahf   
  429d23:	inc    ebx
  429d24:	and    al,0xea
  429d26:	fwait
  429d27:	inc    ebx
  429d28:	and    al,0x32
  429d2a:	lahf   
  429d2b:	inc    ebx
  429d2c:	and    al,0x0
  429d2e:	add    BYTE PTR [eax],al
  429d30:	cli    
  429d31:	fwait
  429d32:	inc    ebx
  429d33:	and    al,0x1e
  429d35:	lds    eax,FWORD PTR [ebx+0x24]
  429d38:	repz adc ebp,DWORD PTR [edi]
  429d3b:	xchg   DWORD PTR [ebx-0x28bbc1d1],esi
  429d41:	repz add al,BYTE PTR [eax]
  429d44:	repz das 
  429d46:	jp     0x429d8c
  429d48:	xlat   BYTE PTR ds:[ebx]
  429d49:	xor    esp,DWORD PTR [ecx+0x6abaf386]
  429d4f:	and    al,0xcb
  429d51:	das    
  429d52:	(bad)  
  429d53:	(bad)  
  429d54:	fcmovnb st,st(3)
  429d56:	cmp    ebx,0xffffffdc
  429d59:	ss ret 
  429d5b:	and    ebp,DWORD PTR [edi]
  429d5d:	jae    0x429d71
  429d5f:	push   0xffbe94af
  429d64:	(bad)
  429d67:	inc    esp
  429d68:	pop    ss
  429d69:	ins    BYTE PTR es:[edi],dx
  429d6a:	jmp    0xf300:0x3ca3e4be
  429d71:	das    
  429d72:	jb     0x429cf8
  429d74:	iret   
  429d75:	inc    edi
  429d76:	add    al,0x0
  429d78:	repz fbstp TBYTE PTR [esi+0x5c]
  429d7c:	iret   
  429d7d:	adc    ebp,DWORD PTR [eax]
  429d7f:	sar    DWORD PTR [eax+0x5f],cl
  429d82:	in     eax,dx
  429d83:	out    dx,al
  429d84:	(bad)  
  429d85:	cmp    BYTE PTR [esp+eax*2-0x29],bh
  429d89:	out    dx,eax
  429d8a:	jl     0x429d94
  429d8c:	data16 repz fisttp WORD PTR [edi]
  429d90:	rcr    esp,0x99
  429d93:	das    
  429d94:	add    BYTE PTR [eax],al
  429d96:	add    BYTE PTR [ebp-0x38dc4f88],bh
  429d9c:	fild   QWORD PTR [eax]
  429d9e:	push   ecx
  429d9f:	ret    
  429da0:	mov    ds:0x96f77443,al
  429da5:	(bad)  
  429da6:	and    esp,ebx
  429da8:	icebp  
  429da9:	sub    BYTE PTR ds:0xffbf3cb3,dl
  429daf:	imul   esp,ebx,0x67a0fdf
  429db5:	lods   eax,DWORD PTR ds:[esi]
  429db6:	(bad)  
  429db8:	frstor ds:0xe98670f9
  429dbe:	add    esi,ebx
  429dc0:	(bad)  
  429dc1:	loope  0x429e39
  429dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429dc4:	loop   0x429d9a
  429dc6:	aad    0x77
  429dc8:	mov    dl,0x4
  429dca:	in     al,dx
  429dcb:	scas   al,BYTE PTR es:[edi]
  429dcc:	lods   al,BYTE PTR ds:[esi]
  429dcd:	out    0x9b,eax
  429dcf:	in     al,0xe1
  429dd1:	call   0xb85ae0d9
  429dd6:	adc    ebp,DWORD PTR [esi+0x47]
  429dd9:	xchg   esp,eax
  429dda:	int3   
  429ddb:	pop    ebp
  429ddc:	fwait
  429ddd:	int3   
  429dde:	xchg   edi,eax
  429ddf:	repz xchg ecx,eax
  429de1:	mov    ah,0x7c
  429de3:	aaa    
  429de4:	jecxz  0x429da2
  429de6:	jl     0x429de3
  429de8:	mov    bl,0x95
  429dea:	jbe    0x429e13
  429dec:	jecxz  0x429e5e
  429dee:	aad    0x25
  429df0:	scas   eax,DWORD PTR es:[edi]
  429df1:	lock jl 0x429e27
  429df4:	pop    es
  429df5:	cmp    DWORD PTR [ecx],ebp
  429df7:	inc    edx
  429df8:	mul    DWORD PTR [ebx+0x43]
  429dfb:	add    BYTE PTR [eax],al
  429dfd:	add    BYTE PTR [esi],ah
  429dff:	call   0xe35a234e
  429e04:	pop    eax
  429e05:	cld    
  429e06:	pop    es
  429e07:	sti    
  429e08:	ins    DWORD PTR es:[edi],dx
  429e09:	mov    edi,0x44fd9ed0
  429e0e:	pop    es
  429e0f:	repz dec edx
  429e11:	jmp    0x429def
  429e13:	xchg   edx,eax
  429e14:	(bad)  
  429e16:	jne    0x429ddb
  429e18:	int3   
  429e19:	or     ebp,DWORD PTR [edi+edx*8+0x65]
  429e1d:	cmp    ebx,DWORD PTR [eax+0x2f]
  429e20:	mov    al,ds:0x5c185a99
  429e25:	mov    edi,0x29189710
  429e2a:	(bad)  
  429e2c:	aad    0xc3
  429e2e:	cmp    al,0x8d
  429e30:	add    BYTE PTR ds:0xe186d453,ch
  429e36:	inc    eax
  429e37:	sbb    eax,0xc2a7f151
  429e3c:	and    eax,DWORD PTR [ecx]
  429e3e:	sahf   
  429e3f:	push   cs
  429e40:	push   eax
  429e41:	push   esi
  429e42:	inc    ecx
  429e43:	add    BYTE PTR [edi-0x5b],bh
  429e46:	sub    al,0xfc
  429e48:	std    
  429e49:	imul   eax,DWORD PTR [esp+eiz*8+0x13],0x23cacbe5
  429e51:	add    eax,0x2ff282fa
  429e56:	sbb    ebx,DWORD PTR [ecx*4-0x18303b63]
  429e5d:	cmp    DWORD PTR [ecx],esp
  429e5f:	sbb    al,0xfb
  429e61:	add    BYTE PTR fs:[eax],al
  429e64:	add    BYTE PTR [ebx+eiz*8+0x15e0011f],al
  429e6b:	sti    
  429e6c:	push   es
  429e6d:	dec    ecx
  429e6e:	mov    ebx,0x3d3fd123
  429e73:	ret    
  429e74:	lods   eax,DWORD PTR ds:[esi]
  429e75:	xchg   esp,eax
  429e76:	neg    DWORD PTR [edi]
  429e78:	pop    ebp
  429e79:	mov    al,0x17
  429e7b:	jecxz  0x429e51
  429e7d:	lock push es
  429e7f:	add    BYTE PTR [ebp+0x37],ah
  429e82:	xchg   ebx,eax
  429e83:	sub    esp,DWORD PTR [edx-0x4d]
  429e86:	jecxz  0x429eaf
  429e88:	bound  ecx,QWORD PTR [edi-0x20f2ab76]
  429e8e:	enter  0xbe4f,0xa6
  429e92:	test   DWORD PTR [ecx+ebp*4+0x6a620042],0xa60fe39b
  429e9d:	pop    esp
  429e9e:	jae    0x429e60
  429ea0:	xchg   edx,eax
  429ea1:	icebp  
  429ea2:	call   0x92f20c66
  429ea7:	pop    es
  429ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ea9:	xor    esp,ebx
  429eab:	das    
  429eac:	add    BYTE PTR [ebx+0x3],bl
  429eaf:	add    BYTE PTR [eax],al
  429eb1:	iret   
  429eb2:	push   esi
  429eb3:	pop    ds
  429eb4:	and    BYTE PTR [edx-0x78],dh
  429eb7:	sti    
  429eb8:	call   FWORD PTR [edx]
  429eba:	pushf  
  429ebb:	dec    ebx
  429ebc:	and    al,0x42
  429ebe:	add    al,0x4c
  429ec0:	and    al,0x5e
  429ec2:	pushf  
  429ec3:	inc    ebx
  429ec4:	and    al,0x5a
  429ec6:	sahf   
  429ec7:	pop    ebx
  429ec8:	add    DWORD PTR [eax],eax
  429eca:	add    BYTE PTR [eax],al
  429ecc:	adc    bl,BYTE PTR [edx-0x79eddba5]
  429ed2:	shl    DWORD PTR [ebp+0x16],cl
  429ed5:	adc    al,0xf6
  429ed7:	jmp    0x429f07
  429ed9:	pushf  
  429eda:	mov    edx,0xf9335de8
  429edf:	jmp    DWORD PTR [ecx-0x1d]
  429ee2:	test   bh,bh
  429ee4:	xchg   BYTE PTR [ebp-0x7e],cl
  429ee7:	inc    esp
  429ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ee9:	sbb    al,BYTE PTR [edx+0x4004aa35]
  429eef:	add    BYTE PTR [ebx+0x56],al
  429ef2:	add    dh,al
  429ef4:	aad    0xb
  429ef6:	add    BYTE PTR [esi+eiz*4+0x3a],0x83
  429efb:	inc    edi
  429efc:	xchg   edi,eax
  429efd:	nop
  429efe:	inc    ebx
  429eff:	and    al,0x2e
  429f01:	xchg   ebx,eax
  429f02:	ds push es
  429f04:	and    BYTE PTR [esi+0x1f],dl
  429f07:	push   0xefe5512
  429f0c:	fs push ebp
  429f0e:	add    al,0x50
  429f10:	lods   eax,DWORD PTR ds:[esi]
  429f11:	popw   ds
  429f13:	dec    esp
  429f14:	cmovge eax,DWORD PTR [ebx]
  429f17:	push   ebx
  429f18:	cmp    eax,0x15b606c4
  429f1d:	or     bl,bh
  429f1f:	xlat   BYTE PTR ds:[ebx]
  429f20:	pop    ebp
  429f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f22:	ds push es
  429f24:	sbb    ch,dh
  429f26:	jae    0x429f4c
  429f28:	repz add ecx,edi
  429f2b:	cli    
  429f2c:	and    eax,0x436d35
  429f31:	add    BYTE PTR [eax],al
  429f33:	in     al,dx
  429f34:	out    dx,eax
  429f35:	repnz mov cl,0xb4
  429f38:	sub    eax,0x1c0f7422
  429f3d:	(bad)  
  429f3e:	mov    esi,0x874ca4c3
  429f43:	mov    DWORD PTR [ebx],0xc377ee8
  429f49:	jns    0x429fbf
  429f4b:	iret   
  429f4c:	addr16 pop ss
  429f4e:	xchg   ebx,eax
  429f4f:	sahf   
  429f50:	lds    esp,FWORD PTR [ecx]
  429f52:	lea    edi,[edi+0x3]
  429f55:	shl    bh,1
  429f57:	ins    DWORD PTR es:[edi],dx
  429f58:	inc    ebx
  429f59:	and    eax,0xdb5466fb
  429f5e:	pop    edi
  429f5f:	fld    TBYTE PTR [edx-0x671b0669]
  429f65:	mov    edi,0x77076a07
  429f6a:	ret    
  429f6b:	xor    al,0x5e
  429f6d:	mov    BYTE PTR [esi+0x44162d6],0xf3
  429f74:	cwde   
  429f75:	mov    dh,0xb
  429f77:	jbe    0x429f4f
  429f79:	scas   eax,DWORD PTR es:[edi]
  429f7a:	pop    es
  429f7b:	push   0x3b88f767
  429f80:	xor    al,0x16
  429f82:	das    
  429f83:	js     0x429f54
  429f85:	sti    
  429f86:	ss test eax,0x6851dbb1
  429f8c:	scas   eax,DWORD PTR es:[edi]
  429f8d:	dec    DWORD PTR [edi+eiz*8-0x46c93e4f]
  429f94:	rol    BYTE PTR [edi],1
  429f96:	bound  eax,QWORD PTR [eax]
  429f98:	add    BYTE PTR [eax],al
  429f9a:	push   0xf1c1802e
  429f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fa0:	mov    ebx,0x4daad50b
  429fa5:	jne    0x42a008
  429fa7:	push   es
  429fa8:	or     ebp,ebx
  429faa:	add    ebx,DWORD PTR [ebx+ebp*8+0x60083280]
  429fb1:	mov    esp,0x41a8d9f8
  429fb6:	les    esp,FWORD PTR [esi-0x398bfc0c]
  429fbc:	in     al,dx
  429fbd:	inc    eax
  429fbe:	sahf   
  429fbf:	add    DWORD PTR [ebp+0x12ea1f81],0xa64aeb66
  429fc9:	add    eax,ecx
  429fcb:	dec    ebp
  429fcc:	in     al,0xeb
  429fce:	xor    cl,cl
  429fd0:	call   0xe94991dc
  429fd5:	and    al,0xde
  429fd7:	dec    edx
  429fd8:	xlat   BYTE PTR ds:[ebx]
  429fd9:	ret    
  429fda:	cld    
  429fdb:	mov    DWORD PTR [ecx],ebp
  429fdd:	cmc    
  429fde:	jo     0x429fe2
  429fe0:	call   0xe6e392e8
  429fe5:	retf   0x22b
  429fe8:	mov    cl,0x3f
  429fea:	sbb    al,0x7
  429fec:	jmp    0x9303:0xe907d67e
  429ff3:	mov    ecx,0xd9c4c123
  429ff8:	push   ss
  429ff9:	call   0x62d939f1
  429ffe:	add    BYTE PTR [eax],al
  42a000:	add    bh,dh
  42a002:	dec    edx
  42a003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a004:	add    ebp,DWORD PTR [edi+ecx*1]
  42a007:	in     al,0xae
  42a009:	add    eax,0xdc402966
  42a00e:	push   es
  42a00f:	push   ds
  42a010:	inc    edx
  42a011:	push   ds
  42a012:	(bad)  
  42a013:	stos   BYTE PTR es:[edi],al
  42a014:	(bad)  
  42a015:	fmul   QWORD PTR [edx+0x26]
  42a018:	add    al,0xf2
  42a01a:	pop    ds
  42a01b:	inc    ebp
  42a01c:	cmp    DWORD PTR [ebx+0x6],0x45bc0035
  42a023:	add    BYTE PTR [edx+eiz*4],bh
  42a026:	mov    WORD PTR ds:0xffd424f9,cs
  42a02c:	xchg   ecx,eax
  42a02d:	jnp    0x429fc4
  42a02f:	mul    edi
  42a031:	test   DWORD PTR [esi-0x2c4cd660],esp
  42a037:	call   ecx
  42a039:	mov    dl,0x99
  42a03b:	or     BYTE PTR [edi+0x2ac3e43d],ch
  42a041:	out    dx,eax
  42a042:	or     ah,bh
  42a044:	sbb    eax,0xf4010f72
  42a049:	pop    edi
  42a04a:	inc    esi
  42a04b:	add    eax,0xffd3b319
  42a050:	out    0xfb,al
  42a052:	enter  0x2835,0x5c
  42a056:	or     BYTE PTR [edx+ebp*8],bh
  42a059:	push   ebp
  42a05a:	into   
  42a05b:	mov    al,ds:0xffd3b305
  42a060:	imul   ecx,eax,0xd87509
  42a066:	add    BYTE PTR [eax],al
  42a068:	fld    DWORD PTR [edx]
  42a06a:	inc    eax
  42a06b:	and    eax,0xd57413b3
  42a070:	push   ds
  42a071:	or     dh,BYTE PTR [eax]
  42a073:	and    eax,0x1fe13b3
  42a078:	rcl    DWORD PTR [edi+esi*8-0x5f126a19],cl
  42a07f:	test   eax,0xc1ffd3fc
  42a084:	xor    bl,BYTE PTR [edx-0x1c52d0f8]
  42a08a:	ret    
  42a08b:	stos   BYTE PTR es:[edi],al
  42a08c:	lock or edi,esp
  42a08f:	cmc    
  42a090:	jne    0x42a0a0
  42a092:	add    DWORD PTR [eax+ebp*8+0x48],edx
  42a096:	add    eax,0xffd43b19
  42a09b:	in     eax,0xf
  42a09d:	retf   
  42a09e:	ret    
  42a09f:	add    cl,cl
  42a0a1:	or     bh,BYTE PTR [ecx+0xa35ff]
  42a0a7:	cmp    edx,DWORD PTR [edx-0x740837ed]
  42a0ad:	sub    eax,ebx
  42a0af:	mov    eax,0xa95
  42a0b4:	in     al,dx
  42a0b5:	or     DWORD PTR ds:0xfb4b9e32,0x4bfe2365
  42a0bf:	lds    ecx,FWORD PTR [ecx]
  42a0c1:	or     ebp,DWORD PTR [edi+0x15]
  42a0c4:	in     al,dx
  42a0c5:	xor    DWORD PTR [esi+ecx*2],edx
  42a0c8:	pop    edi
  42a0c9:	dec    ebx
  42a0ca:	sti    
  42a0cb:	je     0x42a0cd
  42a0cd:	add    BYTE PTR [eax],al
  42a0cf:	inc    esi
  42a0d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a0d1:	dec    ebx
  42a0d2:	lds    ecx,FWORD PTR [ecx+0x7]
  42a0d5:	call   0x1cea:0xfb4bce34
  42a0dc:	jg     0x42a0f3
  42a0de:	xor    al,0xce
  42a0e0:	dec    ebx
  42a0e1:	sti    
  42a0e2:	mov    WORD PTR [edi-0x2d],cs
  42a0e5:	dec    edi
  42a0e6:	call   FWORD PTR [edi]
  42a0e8:	xchg   ebx,eax
  42a0e9:	adc    BYTE PTR [eax-0x26],al
  42a0ec:	pusha  
  42a0ed:	add    BYTE PTR [ebp-0xa],0x5c
  42a0f1:	call   0xcbaf:0xfb4a0e36
  42a0f8:	loope  0x42a124
  42a0fa:	xor    ecx,DWORD PTR [eax]
  42a0fc:	cmp    bh,BYTE PTR [ebx+0xbd668]
  42a102:	add    BYTE PTR [ecx+ebp*4+0x29],ch
  42a106:	les    ecx,FWORD PTR [ecx-0x5a47b5fa]
  42a10c:	in     eax,0xff
  42a10e:	(bad)  
  42a10f:	jl     0x42a18f
  42a111:	adc    eax,0xfb494e30
  42a116:	xchg   DWORD PTR [edi-0xcbc40c6],ebx
  42a11c:	pop    ds
  42a11d:	test   eax,0xc26bbd9e
  42a122:	(bad)  
  42a123:	jge    0x42a158
  42a125:	rcl    DWORD PTR [ecx],cl
  42a127:	xor    esp,DWORD PTR [eax]
  42a129:	add    ah,0xff
  42a12c:	or     eax,0x5d3a5a3f
  42a131:	jg     0x42a170
  42a133:	add    BYTE PTR [eax],al
  42a135:	add    BYTE PTR [ebx],ch
  42a137:	arpl   dx,ax
  42a139:	call   DWORD PTR [ebx+edi*8-0x28]
  42a13d:	push   ecx
  42a13e:	lea    ebx,[eax+0x48]
  42a141:	aas    
  42a142:	repz fstp DWORD PTR [esi]
  42a145:	adc    eax,0xffbf2e4f
  42a14a:	mov    ah,0x52
  42a14c:	inc    edi
  42a14d:	lds    esi,FWORD PTR [eax-0x38b00e1]
  42a153:	xchg   DWORD PTR [eax-0x7d56e307],ebx
  42a159:	rcr    BYTE PTR [edi+0x3f258221],0xe3
  42a160:	sar    edi,0x4
  42a163:	jmp    0xff:0x5d36c807
  42a16a:	popf   
  42a16b:	shl    bh,1
  42a16d:	out    dx,eax
  42a16e:	add    DWORD PTR [eax-0x1],esp
  42a171:	pop    ecx
  42a172:	xchg   ebx,eax
  42a173:	cmovae edi,DWORD PTR [edi]
  42a176:	repz fdivr QWORD PTR [esi+0x3d]
  42a17a:	stos   DWORD PTR es:[edi],eax
  42a17b:	jmp    0x51d8:0x72ccffc1
  42a182:	test   edi,edx
  42a184:	inc    edi
  42a185:	aas    
  42a186:	repz jno 0x42a1a7
  42a189:	adc    eax,0xffbf2dc7
  42a18e:	sub    al,0x5b
  42a190:	inc    edi
  42a191:	lds    esi,FWORD PTR [eax]
  42a193:	and    bh,bh
  42a195:	je     0x42a19b
  42a197:	pop    es
  42a198:	rcl    ebx,1
  42a19a:	add    BYTE PTR [eax],al
  42a19c:	add    BYTE PTR [edx-0x4c7725ef],bl
  42a1a2:	call   0xc5a4:0x42ce84e2
  42a1a9:	jl     0x42a1bc
  42a1ab:	stos   DWORD PTR es:[edi],eax
  42a1ac:	pop    es
  42a1ad:	stos   DWORD PTR es:[edi],eax
  42a1ae:	dec    ebx
  42a1af:	es add al,0xf2
  42a1b2:	mov    eax,0xf454f7b1
  42a1b7:	sub    BYTE PTR [ecx+edi*4],al
  42a1ba:	data16 fld QWORD PTR [edi+0x14]
  42a1be:	pop    es
  42a1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1c0:	mov    bh,0x75
  42a1c2:	and    bh,BYTE PTR [eax]
  42a1c4:	mov    ch,0x15
  42a1c6:	cs sar esi,1
  42a1c9:	xor    al,0x4b
  42a1cb:	es add al,0xbe
  42a1ce:	aad    0x12
  42a1d0:	bound  ecx,QWORD PTR [ebx+0x4b]
  42a1d3:	es add al,0xc1
  42a1d6:	adc    esp,edx
  42a1d8:	das    
  42a1d9:	in     eax,dx
  42a1da:	(bad)  
  42a1db:	call   0x248199bb
  42a1e0:	lds    ecx,FWORD PTR [edx+ebx*4]
  42a1e3:	cli    
  42a1e4:	sub    ebx,DWORD PTR [ebx]
  42a1e6:	adc    ecx,DWORD PTR [edx+0x21]
  42a1e9:	ja     0x42a231
  42a1eb:	mov    ebp,0x2cf36a0e
  42a1f0:	inc    edi
  42a1f1:	sub    al,0x7
  42a1f3:	sub    eax,DWORD PTR [edi]
  42a1f5:	mov    ebx,0xf203a64a
  42a1fa:	mov    eax,0xf5c4f721
  42a1ff:	test   al,0x3
  42a201:	add    BYTE PTR [eax],al
  42a203:	add    BYTE PTR [ecx],ch
  42a205:	lahf   
  42a206:	cmp    BYTE PTR [edi-0x409ff8fc],dl
  42a20c:	mov    eax,0xe533dc10
  42a211:	(bad)  
  42a212:	call   0xffde0ff3
  42a217:	scas   eax,DWORD PTR es:[edi]
  42a218:	pop    eax
  42a219:	add    BYTE PTR [ecx+ebp*4-0x3054910],cl
  42a220:	xor    al,0x1
  42a222:	inc    eax
  42a223:	jmp    0xb6f3d7
  42a228:	je     0x42a1ec
  42a22a:	sti    
  42a22b:	cmp    dl,ah
  42a22d:	push   ebx
  42a22e:	or     eax,0xffd02c37
  42a233:	pop    ss
  42a234:	add    dl,BYTE PTR [ebp+ecx*1+0x25]
  42a238:	lods   al,BYTE PTR ds:[esi]
  42a239:	iret   
  42a23a:	call   DWORD PTR [edi]
  42a23c:	adc    bl,dl
  42a23e:	aas    
  42a23f:	lods   eax,DWORD PTR ds:[esi]
  42a240:	das    
  42a241:	adc    dl,bh
  42a243:	aam    0x2c
  42a245:	inc    esp
  42a246:	aas    
  42a247:	jmp    0xa9c7d95f
  42a24c:	adc    DWORD PTR gs:[eax+0x45881324],ecx
  42a253:	jge    0x42a2c4
  42a255:	aas    
  42a256:	mov    edi,0xe816761f
  42a25b:	(bad)  
  42a25d:	push   es
  42a25e:	add    BYTE PTR [edi+0x2c],bl
  42a261:	in     al,0x7
  42a263:	call   0x4194a8cc
  42a268:	add    BYTE PTR [eax],al
  42a26a:	add    BYTE PTR [ebp-0x16],ch
  42a26d:	stc    
  42a26e:	dec    esi
  42a26f:	outs   dx,DWORD PTR ds:[esi]
  42a270:	inc    ebp
  42a271:	pop    edx
  42a272:	sub    ebp,esp
  42a274:	push   es
  42a275:	xchg   DWORD PTR [edi+0x90243f8],esp
  42a27b:	add    esi,0xffffffff
  42a27e:	arpl   WORD PTR [eax],si
  42a280:	fwait
  42a281:	add    eax,0xfab6e872
  42a286:	mov    eax,0xe1618ff8
  42a28b:	lock xchg edx,ecx
  42a28e:	add    BYTE PTR [ecx-0x12ff04de],dh
  42a294:	pop    eax
  42a295:	sub    ah,0x8b
  42a298:	push   esp
  42a299:	jp     0x42a316
  42a29b:	xchg   edx,eax
  42a29c:	add    esi,DWORD PTR [esp+eax*1-0x26]
  42a2a0:	add    al,0xc9
  42a2a2:	ret    
  42a2a3:	or     DWORD PTR [esi-0xd],ebx
  42a2a6:	add    ah,al
  42a2a8:	bound  ebx,QWORD PTR [ebx+0x17]
  42a2ab:	fimul  DWORD PTR [edx]
  42a2ad:	push   0xfb438580
  42a2b2:	out    0xd3,eax
  42a2b4:	aad    0xf6
  42a2b6:	jmp    ecx
  42a2b8:	cli    
  42a2b9:	test   dh,dh
  42a2bb:	es sub eax,0x5dc90682
  42a2c1:	test   DWORD PTR [eax],0x51f735df
  42a2c7:	add    al,0xf0
  42a2c9:	dec    edi
  42a2ca:	sbb    al,0xd7
  42a2cc:	retf   0x2274
  42a2cf:	add    BYTE PTR [eax],al
  42a2d1:	add    cl,dl
  42a2d3:	cmp    eax,0x6e8a85f7
  42a2d8:	adc    cl,BYTE PTR [ebx-0x7aa89de]
  42a2de:	or     BYTE PTR [ebx-0xa],bl
  42a2e1:	push   ecx
  42a2e2:	cs jle 0x42a2a5
  42a2e5:	je     0x42a2ed
  42a2e7:	test   BYTE PTR [ebp-0x8],ah
  42a2ea:	sbb    bh,BYTE PTR [ebp+eax*2-0x4]
  42a2ee:	xchg   ecx,eax
  42a2ef:	add    dl,BYTE PTR [eax-0x1]
  42a2f2:	cmp    edi,ebx
  42a2f4:	add    BYTE PTR [esi],0x54
  42a2f7:	lock dec edi
  42a2f9:	or     BYTE PTR [ecx+0x40],ah
  42a2fc:	repz pop esi
  42a2fe:	push   edi
  42a2ff:	ret    
  42a300:	jae    0x42a307
  42a302:	push   ebx
  42a303:	dec    edx
  42a304:	add    ebp,ebx
  42a306:	jno    0x42a341
  42a308:	mov    ebx,0x825019c9
  42a30d:	in     al,dx
  42a30e:	repz dec esi
  42a310:	xchg   BYTE PTR [eax-0x15],al
  42a313:	mov    al,ds:0x98f3fba8
  42a318:	or     ecx,DWORD PTR [ebp+0x4fb10c46]
  42a31e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a31f:	outs   dx,DWORD PTR ds:[esi]
  42a320:	mov    DWORD PTR [ebx+esi*4+0xe7f0294],0x3686ff24
  42a32b:	sub    al,0x4c
  42a32d:	mov    edi,0x12b3c81d
  42a332:	xor    esp,DWORD PTR [eax]
  42a334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a335:	outs   dx,DWORD PTR ds:[esi]
  42a336:	add    BYTE PTR [eax],al
  42a338:	add    ah,bl
  42a33a:	fild   WORD PTR [ebx]
  42a33c:	call   0xfb5cdf86
  42a341:	js     0x42a393
  42a343:	mov    dl,dh
  42a345:	out    0xf7,eax
  42a347:	mov    dl,0xfa
  42a349:	fistp  QWORD PTR [ebx]
  42a34b:	or     edi,ebx
  42a34d:	out    0x2b,al
  42a34f:	out    dx,al
  42a350:	aas    
  42a351:	repz test al,0x16
  42a354:	test   DWORD PTR [esp+esi*8],edi
  42a357:	fadd   DWORD PTR [esi-0x54e1313]
  42a35d:	ret    
  42a35e:	aas    
  42a35f:	mov    al,al
  42a361:	sahf   
  42a362:	dec    ecx
  42a363:	or     dh,BYTE PTR [ebx-0x7910bc51]
  42a369:	in     eax,dx
  42a36a:	dec    esi
  42a36b:	mov    ch,0xfa
  42a36d:	mov    ds:0x7ec088e7,eax
  42a372:	sbb    DWORD PTR [edx],ebx
  42a374:	je     0x42a34d
  42a376:	adc    eax,DWORD PTR [esi-0x513b62fe]
  42a37c:	das    
  42a37d:	jbe    0x42a35e
  42a37f:	xchg   edi,eax
  42a380:	or     edi,DWORD PTR [eax+0x1d]
  42a383:	test   eax,0xaedd46ff
  42a388:	aas    
  42a389:	outs   dx,BYTE PTR ds:[esi]
  42a38a:	push   es
  42a38b:	sub    DWORD PTR [edi-0x4a1c7e0c],edx
  42a391:	leave  
  42a392:	mov    dh,0xe0
  42a394:	rol    dl,cl
  42a396:	mov    ch,0x9
  42a398:	clc    
  42a399:	hlt    
  42a39a:	stc    
  42a39b:	test   al,0x3
  42a39d:	add    BYTE PTR [eax],al
  42a39f:	add    BYTE PTR [esp+eax*2-0x66],dh
  42a3a3:	mov    ebp,0xb8e8fa66
  42a3a8:	jne    0x42a3c4
  42a3aa:	cwde   
  42a3ab:	mov    ch,BYTE PTR [esi]
  42a3ad:	(bad)  
  42a3ae:	cmp    dh,BYTE PTR [ebp+0x1dd9ac94]
  42a3b4:	mov    BYTE PTR [ecx-0x6d7e7827],al
  42a3ba:	and    al,BYTE PTR [ecx-0x7716f4f2]
  42a3c0:	icebp  
  42a3c1:	jnp    0x42a3ef
  42a3c3:	and    dl,al
  42a3c5:	or     eax,0x55e9f83c
  42a3ca:	sbb    al,0xf4
  42a3cc:	ret    
  42a3cd:	mov    ah,0xa1
  42a3cf:	mov    ah,0x14
  42a3d1:	test   BYTE PTR [ecx+0xc89f098],ch
  42a3d7:	and    bl,dh
  42a3d9:	and    ebx,0xf0b639b5
  42a3df:	mov    BYTE PTR [esi+0x6e146e0a],dh
  42a3e5:	inc    esi
  42a3e6:	std    
  42a3e7:	cli    
  42a3e8:	jne    0x42a3e8
  42a3ea:	(bad)  
  42a3eb:	sbb    al,0xc3
  42a3ed:	or     eax,0xe75b3b8
  42a3f2:	outs   dx,BYTE PTR ds:[esi]
  42a3f3:	push   es
  42a3f4:	mov    eax,ds:0xcc0bb90d
  42a3f9:	inc    esi
  42a3fa:	fs sbb eax,0x292972e8
  42a400:	cmp    ecx,DWORD PTR [esp+esi*4]
  42a403:	test   DWORD PTR [eax],0x92e90000
  42a409:	(bad)  
  42a40a:	fdivr  st,st(7)
  42a40c:	xchg   ecx,eax
  42a40d:	or     eax,DWORD PTR [ecx-0x33]
  42a410:	adc    ebx,edi
  42a412:	es jp  0x42a424
  42a415:	test   DWORD PTR [esi],ebx
  42a417:	pop    esp
  42a418:	or     BYTE PTR [esi],ch
  42a41a:	sub    DWORD PTR [edx],ecx
  42a41c:	xlat   BYTE PTR ds:[ebx]
  42a41d:	xchg   BYTE PTR [eax+ebp*8+0xef8e7bb],ah
  42a424:	adc    bl,bh
  42a426:	jb     0x42a427
  42a428:	xor    edx,0xd6dcf47c
  42a42e:	add    bl,BYTE PTR [ebx+0x453e0285]
  42a434:	adc    DWORD PTR [eax+0x9],edx
  42a437:	jp     0x42a468
  42a439:	xchg   edi,ebp
  42a43b:	inc    esi
  42a43c:	adc    DWORD PTR [eax-0x1f],edx
  42a43f:	ins    DWORD PTR es:[edi],dx
  42a440:	xor    al,0xb
  42a442:	pop    ebp
  42a443:	mov    bl,0x83
  42a445:	add    edx,DWORD PTR [esi]
  42a447:	push   es
  42a448:	mov    bh,0x7
  42a44a:	arpl   WORD PTR [ebx-0x57f0a54d],si
  42a450:	dec    esp
  42a451:	adc    cl,ch
  42a453:	test   DWORD PTR [ebp-0xceb9514],eax
  42a459:	dec    esi
  42a45a:	aas    
  42a45b:	xchg   BYTE PTR [edi+ebp*8+0x630c30f7],ah
  42a462:	fldenv [edi]
  42a464:	int3   
  42a465:	call   DWORD PTR [eax+0x76fb23bc]
  42a46b:	add    BYTE PTR [eax],al
  42a46d:	add    BYTE PTR [ebx+0x2f],ch
  42a470:	das    
  42a471:	ja     0x42a4ae
  42a473:	cs je  0x42a457
  42a476:	jnp    0x42a484
  42a478:	push   ebp
  42a479:	mov    edx,0xe9fc76e7
  42a47e:	lock push es
  42a480:	xchg   edx,ebp
  42a482:	ds mov ebp,0x284a00fa
  42a488:	add    BYTE PTR [eax],al
  42a48a:	fidivr DWORD PTR [esi-0x5]
  42a48d:	imul   esp,DWORD PTR ds:0xc290f657,0x41000008
  42a497:	pop    es
  42a498:	dec    esi
  42a499:	push   ebx
  42a49a:	in     eax,0x97
  42a49c:	clac   
  42a49f:	pop    es
  42a4a0:	add    DWORD PTR [ebx],0x17
  42a4a3:	cmp    eax,0x78251f7
  42a4a8:	cmovo  ebx,DWORD PTR [edx+0xf10f656]
  42a4af:	enter  0x3d74,0x37
  42a4b3:	inc    ebp
  42a4b4:	out    0x50,eax
  42a4b6:	xchg   ebp,eax
  42a4b7:	adc    eax,0x2da132f
  42a4bc:	bound  ecx,QWORD PTR [ebx]
  42a4be:	ret    0x8868
  42a4c1:	inc    ebp
  42a4c2:	ss sub esp,0x10
  42a4c6:	imul   eax,edi,0xf70f895d
  42a4cc:	add    BYTE PTR [ebp-0x5a],0x7b
  42a4d0:	or     BYTE PTR [ebx-0x7a000000],cl
  42a4d6:	jge    0x42a54d
  42a4d8:	in     al,dx
  42a4d9:	mov    edi,0x2e68a4a5
  42a4de:	add    DWORD PTR [eax+0x0],0xfffffffa
  42a4e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4e3:	not    BYTE PTR [ecx+0x20a]
  42a4e9:	mov    eax,ds:0x228bf745
  42a4ee:	push   edi
  42a4ef:	not    BYTE PTR [ecx+0x12]
  42a4f2:	push   eax
  42a4f3:	pop    ecx
  42a4f4:	mov    ecx,DWORD PTR [ecx+0x4b]
  42a4f7:	enter  0x4fc3,0x7c
  42a4fb:	in     al,dx
  42a4fc:	xor    DWORD PTR [esi-0xca9b5f6],0x4c
  42a503:	inc    ecx
  42a504:	inc    ebp
  42a505:	hlt    
  42a506:	sbb    al,0x27
  42a508:	dec    ebx
  42a509:	in     al,dx
  42a50a:	rcl    DWORD PTR [esi],0x87
  42a50d:	retf   
  42a50e:	mov    ds:0xa352743a,eax
  42a513:	shl    bh,0x43
  42a516:	f2xm1  
  42a518:	xor    esp,eax
  42a51a:	pop    edi
  42a51b:	jmp    DWORD PTR [ebp-0x5]
  42a51e:	inc    edi
  42a51f:	push   ss
  42a520:	jne    0x42a50d
  42a522:	jns    0x42a4b0
  42a524:	inc    ebp
  42a525:	retf   
  42a526:	stc    
  42a527:	lock cmp eax,DWORD PTR [eax]
  42a52a:	pusha  
  42a52b:	dec    DWORD PTR [eax-0x3f7fefd2]
  42a531:	daa    
  42a532:	pop    eax
  42a533:	mov    bh,bh
  42a535:	imul   edx,DWORD PTR [bx],0x51
  42a539:	add    BYTE PTR [eax],al
  42a53b:	add    BYTE PTR [eax+0x34],dh
  42a53e:	out    dx,eax
  42a53f:	xchg   BYTE PTR [edi+0x56e78f9b],al
  42a545:	jnp    0x42a5a7
  42a547:	dec    edi
  42a548:	dec    esi
  42a549:	cmp    DWORD PTR [edi-0x18],ebp
  42a54c:	repz pop ds
  42a54e:	inc    DWORD PTR [ebx+esi*1+0x70620ad3]
  42a555:	rcr    DWORD PTR [ebx],cl
  42a557:	sti    
  42a558:	fisub  WORD PTR [ebx]
  42a55a:	inc    ecx
  42a55b:	inc    ebp
  42a55c:	dec    esp
  42a55d:	pop    ds
  42a55e:	mov    BYTE PTR [ebp+0x5b],al
  42a561:	rcl    BYTE PTR [esi],1
  42a563:	adc    eax,0xffbf0cfb
  42a568:	mov    ah,0xfa
  42a56a:	push   ss
  42a56b:	add    BYTE PTR [esi-0x3e0075e9],ah
  42a571:	mov    BYTE PTR [esi-0x498b1ff9],ch
  42a577:	pop    ecx
  42a578:	push   0x31c8ba5d
  42a57d:	pop    es
  42a57e:	in     eax,dx
  42a57f:	add    ebx,DWORD PTR [esi+0x75b44d7d]
  42a585:	add    DWORD PTR [eax+ecx*8-0x8],esp
  42a589:	mov    bh,0xb2
  42a58b:	sbb    al,BYTE PTR [ebx-0x61]
  42a58e:	imul   eax,DWORD PTR [ebx+0x5f],0x3
  42a592:	data16 mov al,ds:0x15e06d8
  42a598:	inc    ecx
  42a599:	or     bl,BYTE PTR [ecx+0x24c3740b]
  42a59f:	dec    esp
  42a5a0:	add    BYTE PTR [eax],al
  42a5a2:	add    BYTE PTR [ebp+edi*2-0x4f51290f],al
  42a5a9:	imul   ecx,DWORD PTR [edi+edi*1-0xa],0x65
  42a5ae:	inc    ebx
  42a5af:	idiv   DWORD PTR [ebp-0x47]
  42a5b2:	fisub  WORD PTR [eax]
  42a5b4:	jecxz  0x42a5a6
  42a5b6:	(bad)
  42a5ba:	inc    ebx
  42a5bb:	out    dx,eax
  42a5bc:	int    0x17
  42a5be:	xchg   ebp,eax
  42a5bf:	pushf  
  42a5c0:	aam    0xa8
  42a5c2:	mov    edx,0x53e90246
  42a5c7:	repnz sbb eax,0x1a6dafd1
  42a5cd:	push   0xe907ff28
  42a5d2:	add    eax,ecx
  42a5d4:	aad    0xb2
  42a5d6:	lea    esi,[esi-0x1ebe120a]
  42a5dc:	mov    ebx,0x92481c65
  42a5e1:	sti    
  42a5e2:	aam    0x36
  42a5e4:	dec    edi
  42a5e5:	xchg   ecx,eax
  42a5e6:	add    eax,0x139a06f3
  42a5eb:	retf   0x8134
  42a5ee:	add    eax,0xbf7006f3
  42a5f3:	sbb    al,0x7f
  42a5f5:	adc    al,0x18
  42a5f7:	je     0x42a5bc
  42a5f9:	(bad)  
  42a5fa:	fdiv   DWORD PTR [eax]
  42a5fc:	adc    al,0xd8
  42a5fe:	shl    BYTE PTR [eax+0xe614d7b],cl
  42a604:	inc    esi
  42a605:	push   eax
  42a606:	mov    bh,0x0
  42a608:	add    BYTE PTR [eax],al
  42a60a:	inc    edx
  42a60b:	jp     0x42a592
  42a60d:	pop    ebp
  42a60e:	(bad)  ds:0x45a2b9fb
  42a614:	test   DWORD PTR ds:0xe8fb0c09,edi
  42a61a:	lock push es
  42a61c:	add    BYTE PTR [eax+0x3c],ah
  42a61f:	psubd  mm5,QWORD PTR [esi]
  42a622:	jmp    0xffc8:0xd459150b
  42a629:	imul   ebx,edi,0x82c37505
  42a62f:	or     eax,0x920bdd75
  42a634:	pop    es
  42a635:	sahf   
  42a636:	or     esi,edx
  42a638:	pop    ss
  42a639:	xlat   BYTE PTR ds:[ebx]
  42a63a:	mov    al,0x8
  42a63c:	ss das 
  42a63e:	jns    0x42a630
  42a640:	sub    BYTE PTR [esp+esi*8-0x560ebafb],ah
  42a647:	xchg   ebx,eax
  42a648:	or     ebx,DWORD PTR [esi+0x6a]
  42a64b:	fdivr  DWORD PTR [edi+0xafc6410]
  42a651:	jne    0x42a603
  42a653:	lods   al,BYTE PTR ds:[esi]
  42a654:	enter  0xecab,0x6
  42a658:	cs test eax,0x6255140f
  42a65e:	or     al,0xb6
  42a660:	push   edx
  42a661:	ret    0xd48
  42a664:	jne    0x42a65f
  42a666:	ja     0x42a5f2
  42a668:	pop    es
  42a669:	sahf   
  42a66a:	xor    eax,0xe865fc
  42a66f:	add    BYTE PTR [eax],al
  42a671:	ins    DWORD PTR es:[edi],dx
  42a672:	ret    0x39fa
  42a675:	fbstp  TBYTE PTR [ebx-0x1092ff06]
  42a67b:	add    eax,0x26
  42a67e:	add    DWORD PTR [ebx+0x7d],edi
  42a681:	push   cs
  42a682:	add    al,0x75
  42a684:	loop   0x42a650
  42a686:	add    al,0x57
  42a688:	leave  
  42a689:	fdivr  st,st(7)
  42a68b:	push   DWORD PTR [ecx]
  42a68d:	retf   0xeeda
  42a690:	push   0xa
  42a692:	out    dx,eax
  42a693:	jae    0x42a6b9
  42a695:	jmp    0x73ee:0xca2473ee
  42a69c:	and    al,0xba
  42a69e:	out    dx,al
  42a69f:	adc    al,0x20
  42a6a1:	mov    ah,0x43
  42a6a3:	sti    
  42a6a4:	cmp    dl,BYTE PTR [esi+0x460f0727]
  42a6aa:	les    edi,FWORD PTR [ecx-0x510135f4]
  42a6b0:	pop    es
  42a6b1:	je     0x42a70c
  42a6b3:	add    DWORD PTR [edx-0x65],ebp
  42a6b6:	push   ebx
  42a6b7:	not    BYTE PTR ds:0x3b18f2
  42a6bd:	and    esp,esi
  42a6bf:	jp     0x42a6bf
  42a6c1:	popf   
  42a6c2:	js     0x42a6e2
  42a6c4:	xor    ebx,edx
  42a6c6:	gs jp  0x42a708
  42a6c9:	cwde   
  42a6ca:	add    BYTE PTR [ebp-0x1f7c3d40],dl
  42a6d0:	hlt    
  42a6d1:	or     ebx,eax
  42a6d3:	sbb    edx,DWORD PTR [eax+0x0]
  42a6d6:	add    BYTE PTR [eax],al
  42a6d8:	and    eax,0x9215f659
  42a6dd:	adc    eax,0xc2d7003b
  42a6e2:	jae    0x42a6ee
  42a6e4:	hlt    
  42a6e5:	out    dx,eax
  42a6e6:	adc    al,0x1c
  42a6e8:	and    al,0x43
  42a6ea:	sti    
  42a6eb:	cmp    BYTE PTR [edi+ebp*8-0x7e],0xc6
  42a6f0:	cld    
  42a6f1:	ret    
  42a6f2:	push   esp
  42a6f3:	mov    esi,ebx
  42a6f5:	xor    DWORD PTR [ebp-0x662f3fb0],0x21533c0
  42a6ff:	mov    bl,0x3b
  42a701:	dec    esp
  42a702:	adc    cl,BYTE PTR [ebp+0x52af25ae]
  42a708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a709:	cwde   
  42a70a:	nop
  42a70b:	pop    es
  42a70c:	jp     0x42a730
  42a70e:	adc    ecx,DWORD PTR [ecx+0x1512a57e]
  42a714:	aas    
  42a715:	or     bh,BYTE PTR [edi-0x6fcf8801]
  42a71b:	pop    es
  42a71c:	jo     0x42a756
  42a71e:	adc    ebp,ecx
  42a720:	jno    0x42a712
  42a722:	(bad)  
  42a723:	(bad)  
  42a724:	cmp    eax,0xd8079169
  42a729:	push   es
  42a72a:	xchg   BYTE PTR [edx-0x11],al
  42a72d:	jo     0x42a74b
  42a72f:	inc    BYTE PTR [edi+0x0]
  42a732:	adc    dh,BYTE PTR [edx-0x1d]
  42a735:	sbb    al,0x8a
  42a737:	pop    ss
  42a738:	fwait
  42a739:	shl    bl,0xf9
  42a73c:	add    BYTE PTR [eax],al
  42a73e:	add    BYTE PTR [edi+esi*2-0x1e77043f],ah
  42a745:	jge    0x42a73f
  42a747:	cld    
  42a748:	add    BYTE PTR ds:0x11e005fb,0x72
  42a74f:	jmp    0x42a728
  42a751:	aad    0x20
  42a753:	jge    0x42a73a
  42a755:	mov    eax,DWORD PTR [ebp+0x7b]
  42a758:	imul   ecx,DWORD PTR [ebp-0x7022d7e5],0xc4364c9
  42a762:	sti    
  42a763:	push   es
  42a764:	clc    
  42a765:	in     al,dx
  42a766:	aas    
  42a767:	repz push 0xa670fbc0
  42a76d:	adc    DWORD PTR [edi],esi
  42a76f:	sub    al,0x7
  42a771:	sbb    eax,0x2ff7409
  42a776:	lea    ebx,[ebx+0x29db8108]
  42a77c:	push   es
  42a77d:	mov    cl,BYTE PTR [edx+0x1c039223]
  42a783:	jbe    0x42a78b
  42a785:	cmc    
  42a786:	repz xchg ebp,eax
  42a788:	add    al,0x72
  42a78a:	nop
  42a78b:	cmc    
  42a78c:	ins    BYTE PTR es:[edi],dx
  42a78d:	pusha  
  42a78e:	mov    dh,0x6
  42a790:	out    dx,al
  42a791:	pop    es
  42a792:	pop    ss
  42a793:	clc    
  42a794:	add    eax,0x7bf8136e
  42a799:	push   ebp
  42a79a:	sub    esi,DWORD PTR [edi+0x26]
  42a79d:	dec    ebx
  42a79e:	push   ss
  42a79f:	call   0x6de91f
  42a7a4:	add    BYTE PTR [eax],al
  42a7a6:	pop    edi
  42a7a7:	daa    
  42a7a8:	cmp    edx,DWORD PTR [esi]
  42a7aa:	ins    BYTE PTR es:[edi],dx
  42a7ab:	int3   
  42a7ac:	xchg   edx,eax
  42a7ad:	mov    dh,0x25
  42a7af:	shl    BYTE PTR [esi],1
  42a7b1:	inc    esp
  42a7b3:	pop    ebx
  42a7b4:	mov    edx,0x5215bb8a
  42a7b9:	dec    BYTE PTR [esi+0xd]
  42a7bc:	jg     0x42a7c2
  42a7be:	inc    ebx
  42a7bf:	push   es
  42a7c0:	hlt    
  42a7c1:	sbb    edi,esi
  42a7c3:	inc    esi
  42a7c4:	jmp    0xfacc4b53
  42a7c9:	adc    eax,0x43b64a1f
  42a7ce:	adc    DWORD PTR [edx-0x6407fe57],ecx
  42a7d4:	test   al,0xcc
  42a7d6:	std    
  42a7d7:	out    0xd4,al
  42a7d9:	xor    DWORD PTR [ebx-0x3d52c6de],0xfe0ff405
  42a7e3:	inc    esi
  42a7e4:	jmp    0xecbddb67
  42a7e9:	test   eax,0xb6005cf3
  42a7ee:	pop    esp
  42a7ef:	int    0x14
  42a7f1:	sub    edi,ebp
  42a7f3:	mov    edi,DWORD PTR [edi+0x1500381d]
  42a7f9:	cmc    
  42a7fa:	inc    esi
  42a7fb:	inc    ebp
  42a7fc:	add    BYTE PTR [edi],bh
  42a7fe:	jp     0x42a7fe
  42a800:	cli    
  42a801:	hlt    
  42a802:	sbb    al,0x17
  42a804:	inc    eax
  42a805:	jmp    0xc557a859
  42a80a:	add    BYTE PTR [eax],al
  42a80c:	add    BYTE PTR [esi],al
  42a80e:	inc    ebp
  42a80f:	add    BYTE PTR [edx-0x4b],ch
  42a812:	add    DWORD PTR [ebx+0x62],ebx
  42a815:	lds    esp,FWORD PTR [eax-0x41]
  42a818:	mov    esp,0x6d247275
  42a81d:	jo     0x42a811
  42a81f:	paddsb mm6,mm0
  42a822:	push   es
  42a823:	push   edx
  42a824:	mov    dh,0x7b
  42a826:	inc    edx
  42a827:	mov    al,0xdc
  42a829:	mov    al,0x4
  42a82b:	cs aaa 
  42a82d:	or     ch,BYTE PTR [edx-0x77]
  42a830:	mov    esp,0xc5b53f60
  42a835:	(bad)  
  42a837:	cli    
  42a838:	lahf   
  42a839:	jp     0x42a7c8
  42a83b:	inc    esp
  42a83c:	cdq    
  42a83d:	imul   ecx,DWORD PTR [ebx+0x78184],0xfffffffb
  42a844:	shl    BYTE PTR [ebx],cl
  42a846:	jp     0x42a850
  42a848:	jb     0x42a7fe
  42a84a:	or     BYTE PTR [ecx-0x112b354],0x5f
  42a851:	inc    esp
  42a852:	jo     0x42a8a6
  42a854:	xor    eax,0x75e9000a
  42a85a:	xchg   edx,eax
  42a85b:	arpl   dx,sp
  42a85d:	(bad)  
  42a85f:	push   eax
  42a860:	cmp    DWORD PTR [esi],eax
  42a862:	sbb    bl,BYTE PTR [eax]
  42a864:	div    DWORD PTR [eax]
  42a866:	add    al,0x88
  42a868:	add    BYTE PTR [edi],cl
  42a86a:	mov    bl,0x79
  42a86c:	clc    
  42a86d:	dec    ebx
  42a86e:	pushf  
  42a86f:	dec    esi
  42a870:	push   esi
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    dl,ch
  42a875:	mov    eax,DWORD PTR [esp+eiz*2+0x50f71b81]
  42a87c:	xchg   ebp,eax
  42a87d:	xchg   ebp,eax
  42a87e:	data16 (bad) 
  42a880:	aas    
  42a881:	call   0xdf5ce896
  42a886:	inc    ebx
  42a887:	push   0x45f5dbff
  42a88c:	sbb    cl,BYTE PTR [edi-0x7ace8fbc]
  42a892:	inc    DWORD PTR fs:[ebp-0x6e5995e6]
  42a899:	les    esi,FWORD PTR [esi+0x56]
  42a89c:	cmp    al,0x91
  42a89e:	test   BYTE PTR [ebp+edx*4+0x1a],ch
  42a8a2:	not    DWORD PTR [esi+0x57]
  42a8a5:	test   DWORD PTR [edi+edi*8+0x35],esp
  42a8a9:	sbb    edx,DWORD PTR [eax+0x56]
  42a8ac:	or     eax,0x15ff6485
  42a8b1:	sbb    edi,edx
  42a8b3:	(bad)  
  42a8b4:	fiadd  DWORD PTR [edi]
  42a8b6:	mov    DWORD PTR [ebp-0x8e54e],ebx
  42a8bc:	adc    eax,0xcbf87b33
  42a8c1:	or     cl,BYTE PTR [ebp-0x8e4fa94]
  42a8c7:	pop    edi
  42a8c8:	push   esp
  42a8c9:	xchg   ah,al
  42a8cb:	je     0x42a8b0
  42a8cd:	inc    ebp
  42a8ce:	add    al,0x0
  42a8d0:	jg     0x42a860
  42a8d2:	jmp    0x42a855
  42a8d4:	test   BYTE PTR [ebx],0x1
  42a8d7:	add    BYTE PTR [eax],al
  42a8d9:	add    BYTE PTR [eax],al
  42a8db:	call   0x81bd:0x825d81b6
  42a8e2:	lock add esi,ecx
  42a8e5:	push   es
  42a8e6:	(bad)  
  42a8e7:	repz sub eax,DWORD PTR ds:0x932d6a7f
  42a8ee:	js     0x42a966
  42a8f0:	lods   eax,DWORD PTR ds:[esi]
  42a8f1:	xchg   edi,eax
  42a8f2:	pop    ss
  42a8f3:	and    BYTE PTR [eax-0x120f17b6],ah
  42a8f9:	(bad)  
  42a8fa:	repnz inc eax
  42a8fc:	push   0xbfca07b1
  42a901:	sbb    edi,edi
  42a903:	xor    al,0xed
  42a905:	jnp    0x42a94c
  42a907:	sub    esp,DWORD PTR [esi-0x47]
  42a90a:	sti    
  42a90b:	cdq    
  42a90c:	jmp    0x85b935c2
  42a911:	or     eax,0x7d1d14fb
  42a916:	lea    eax,[edi]
  42a918:	jnp    0x42a929
  42a91a:	sti    
  42a91b:	sbb    esp,DWORD PTR [ebx]
  42a91d:	out    dx,eax
  42a91e:	stc    
  42a91f:	cld    
  42a920:	jno    0x42a938
  42a922:	je     0x42a902
  42a924:	js     0x42a96c
  42a926:	rcl    ebx,0xee
  42a929:	scas   al,BYTE PTR es:[edi]
  42a92a:	cli    
  42a92b:	pop    esi
  42a92c:	add    BYTE PTR [eax+0xf4adf85],al
  42a932:	sti    
  42a933:	inc    ebx
  42a934:	pop    eax
  42a935:	fstp   DWORD PTR [edx]
  42a937:	int    0x39
  42a939:	sar    DWORD PTR [edi-0x730554f8],cl
  42a93f:	add    BYTE PTR [eax],al
  42a941:	add    BYTE PTR [esi],ch
  42a943:	sub    bl,ch
  42a945:	mov    edi,0x65b42f10
  42a94a:	repz test esi,edi
  42a94d:	mov    WORD PTR [esi+0x1c],gs
  42a950:	push   cs
  42a951:	sti    
  42a952:	pushf  
  42a953:	mov    al,ds:0xdb95ff9c
  42a958:	dec    esi
  42a959:	adc    eax,0xc087f033
  42a95e:	(bad)  
  42a95f:	fist   DWORD PTR [esi-0x16f92bb5]
  42a965:	add    edi,DWORD PTR [eax+0x1c]
  42a968:	add    eax,0x66072cfa
  42a96d:	cmp    ebp,DWORD PTR [eax+0x61]
  42a970:	cs cmp eax,0x86e9139d
  42a976:	pop    ebx
  42a977:	add    dh,BYTE PTR ds:0xb1f91c16
  42a97d:	xlat   BYTE PTR ds:[ebx]
  42a97e:	xchg   ebp,eax
  42a97f:	xchg   esp,eax
  42a980:	arpl   WORD PTR [edi],dx
  42a982:	cmp    DWORD PTR [edx],eax
  42a984:	mov    ds:0x9a02f61b,al
  42a989:	adc    dh,BYTE PTR [edi-0x39]
  42a98c:	sbb    edi,esp
  42a98e:	mov    dl,0x85
  42a990:	mov    al,BYTE PTR [ecx*4+0x6c398dee]
  42a997:	or     esi,DWORD PTR [esi]
  42a999:	push   ds
  42a99a:	daa    
  42a99b:	pop    esp
  42a99c:	pop    esi
  42a99d:	pop    ds
  42a99e:	or     BYTE PTR [ebp+ebx*8-0x2a],bh
  42a9a2:	cmp    al,0x6d
  42a9a4:	jmp    0x42a9bb
  42a9a9:	jle    0x42a9b9
  42a9ab:	test   eax,0x5202151b
  42a9b0:	adc    ah,BYTE PTR [edi+edi*8+0x49]
  42a9b4:	xchg   edi,eax
  42a9b5:	add    BYTE PTR [ebx+esi*4-0x1692bc01],dl
  42a9bc:	mov    bl,0xb1
  42a9be:	dec    ebx
  42a9bf:	in     eax,0x83
  42a9c1:	repz push es
  42a9c3:	jmp    0xfc098fda
  42a9c8:	ret    
  42a9c9:	mov    ah,0x62
  42a9cb:	daa    
  42a9cc:	sti    
  42a9cd:	lods   al,BYTE PTR ds:[esi]
  42a9ce:	test   BYTE PTR [edx],dl
  42a9d0:	adc    bl,BYTE PTR [edi]
  42a9d2:	pop    ss
  42a9d3:	jg     0x42a9da
  42a9d5:	inc    ecx
  42a9d6:	add    bl,ah
  42a9d8:	sbb    edi,esi
  42a9da:	inc    esi
  42a9db:	jmp    0x5e3399
  42a9e0:	aad    0x8a
  42a9e2:	inc    ecx
  42a9e3:	add    BYTE PTR [edx],ch
  42a9e5:	icebp  
  42a9e6:	mov    ch,0x1
  42a9e8:	ds push ebp
  42a9ea:	push   ss
  42a9eb:	data16 jmp 0x42a98e
  42a9ee:	cld    
  42a9ef:	adc    al,0xd1
  42a9f1:	pop    esp
  42a9f2:	inc    ecx
  42a9f3:	add    BYTE PTR [edx-0x11],ah
  42a9f6:	cmp    ebx,0x2f247bc6
  42a9fc:	test   eax,0xeb3a8099
  42aa01:	repz fwait
  42aa03:	mov    edi,0xf3e67621
  42aa08:	push   0xffffffaf
  42aa0a:	and    dl,BYTE PTR [eax+0x37]
  42aa0d:	add    BYTE PTR [eax],al
  42aa0f:	add    BYTE PTR [edx-0x4],ch
  42aa12:	adc    al,0x9d
  42aa14:	sbb    al,0x41
  42aa16:	add    BYTE PTR [edi+esi*4+0x7a],ah
  42aa1a:	push   es
  42aa1b:	push   ds
  42aa1c:	add    bl,BYTE PTR [esp+ebx*1]
  42aa1f:	xlat   BYTE PTR ds:[ebx]
  42aa20:	xor    BYTE PTR [ecx],al
  42aa22:	jle    0x42a9ca
  42aa24:	loop   0x42a9af
  42aa26:	ret    0xb60e
  42aa29:	pop    ebx
  42aa2a:	xchg   DWORD PTR [ebp+0x40],edx
  42aa2d:	push   esi
  42aa2e:	dec    edi
  42aa2f:	mov    bh,0x6f
  42aa31:	cmp    bh,BYTE PTR [ebx+edi*8-0x3e9cff50]
  42aa38:	pop    esp
  42aa39:	inc    edi
  42aa3a:	add    BYTE PTR [esi-0x46],al
  42aa3d:	std    
  42aa3e:	rcl    ecx,1
  42aa40:	je     0x42a9d5
  42aa42:	aas    
  42aa43:	jmp    0x11c9de2b
  42aa48:	loop   0x42aa1e
  42aa4a:	jle    0x42a9d8
  42aa4c:	call   0x745c3157
  42aa51:	fdiv   DWORD PTR [ebx-0x3f]
  42aa54:	ins    DWORD PTR es:[edi],dx
  42aa55:	cmc    
  42aa56:	jae    0x42aa1d
  42aa58:	sbb    eax,0x7a00fc4a
  42aa5d:	mov    ds:0xfc07fefa,al
  42aa62:	cmc    
  42aa63:	rcl    DWORD PTR [edi],cl
  42aa65:	dec    ebx
  42aa66:	jne    0x42aa7d
  42aa68:	lea    ebx,[ecx+0x17458b06]
  42aa6e:	jne    0x42aa6c
  42aa70:	inc    edx
  42aa71:	cmc    
  42aa72:	cli    
  42aa73:	inc    DWORD PTR [eax]
  42aa75:	add    BYTE PTR [eax],al
  42aa77:	pop    edx
  42aa78:	pop    ss
  42aa79:	jne    0x42aa77
  42aa7b:	ror    eax,cl
  42aa7d:	repnz push DWORD PTR [ebx+eax*4+0x45]
  42aa82:	clc    
  42aa83:	in     al,dx
  42aa84:	mov    cl,0xc7
  42aa86:	ret    0x452
  42aa89:	push   ebp
  42aa8a:	mov    edi,DWORD PTR [esi-0x75]
  42aa8d:	jmp    0x42aadb
  42aa8f:	stc    
  42aa90:	mov    esp,0xf9ce3581
  42aa95:	cmp    al,BYTE PTR [eax]
  42aa97:	in     eax,0x81
  42aa99:	clc    
  42aa9a:	push   0x407fa2
  42aa9f:	ins    DWORD PTR es:[edi],dx
  42aaa0:	fistp  QWORD PTR [ebp-0x50981bb]
  42aaa6:	call   FWORD PTR [edx]
  42aaa8:	pop    ss
  42aaa9:	into   
  42aaaa:	push   0x407fc6
  42aaaf:	(bad)  
  42aab0:	fiadd  WORD PTR [ecx+0x683e4dd8]
  42aab6:	int3   
  42aab7:	dec    esi
  42aab8:	(bad)  
  42aab9:	cli    
  42aaba:	inc    BYTE PTR ds:0x2df0457c
  42aac0:	ds sub esi,esi
  42aac3:	inc    ebx
  42aac4:	leave  
  42aac5:	loop   0x42ab02
  42aac7:	fadd   QWORD PTR [esi]
  42aac9:	test   BYTE PTR [ebx],dh
  42aacb:	retf   
  42aacc:	add    eax,DWORD PTR [eax]
  42aace:	cmp    DWORD PTR [edi+0x13],edx
  42aad1:	pop    es
  42aad2:	test   al,al
  42aad4:	add    al,0x0
  42aad6:	add    bl,dh
  42aad8:	aam    0x48
  42aada:	or     eax,DWORD PTR [eax]
  42aadc:	add    BYTE PTR [eax],al
  42aade:	ja     0x42aaab
  42aae0:	std    
  42aae1:	push   ebx
  42aae3:	jp     0x42aaa7
  42aae5:	repz and esi,DWORD PTR [ebx-0x3e]
  42aae9:	sti    
  42aaea:	and    esp,DWORD PTR [edi-0x6e]
  42aaed:	imul   DWORD PTR [edx+0x7a]
  42aaf0:	or     ecx,DWORD PTR [ecx-0x30f51e02]
  42aaf6:	jbe    0x42aaa5
  42aaf8:	cli    
  42aaf9:	test   cl,dh
  42aafb:	out    dx,al
  42aafc:	(bad)  
  42aafd:	jmp    FWORD PTR [eax+0x2a]
  42ab00:	sbb    BYTE PTR [edi],dh
  42ab02:	sub    eax,0xf3f382f8
  42ab07:	in     eax,dx
  42ab08:	(bad)  
  42ab09:	cmp    BYTE PTR [esi+0x4d83fab9],bh
  42ab0f:	in     eax,dx
  42ab10:	(bad)  
  42ab11:	dec    DWORD PTR [ebx-0x5c]
  42ab14:	out    dx,eax
  42ab15:	stc    
  42ab16:	sub    al,0x74
  42ab18:	sub    al,0x37
  42ab1a:	inc    ebp
  42ab1b:	call   0xee3686a2
  42ab20:	dec    BYTE PTR [esi+0x14]
  42ab23:	add    dl,BYTE PTR [ebx]
  42ab25:	sti    
  42ab26:	xchg   BYTE PTR [ecx+0x7203550b],al
  42ab2c:	inc    esp
  42ab2d:	jne    0x42aae9
  42ab2f:	mov    dh,0x97
  42ab31:	sti    
  42ab32:	jge    0x42ab55
  42ab34:	xor    DWORD PTR [edi+0x23],0x5efad35d
  42ab3b:	in     al,0x9
  42ab3d:	adc    eax,0xffbf02a3
  42ab42:	add    BYTE PTR [eax],al
  42ab44:	add    BYTE PTR [edi+0x30],ch
  42ab47:	cwde   
  42ab48:	push   es
  42ab49:	xor    eax,0x84c4371
  42ab4e:	mov    ebx,0x49cb6e0a
  42ab53:	stc    
  42ab54:	mov    bp,0xb507
  42ab58:	cdq    
  42ab59:	cld    
  42ab5a:	or     DWORD PTR [esi],edx
  42ab5c:	mov    dh,0x77
  42ab5e:	inc    esp
  42ab5f:	xor    DWORD PTR [esp+edx*4-0x67f213e2],esi
  42ab66:	mov    cl,BYTE PTR [ebx-0xcc60cf1]
  42ab6c:	mov    dl,0x8c
  42ab6e:	(bad)  
  42ab6f:	aam    0xd
  42ab71:	js     0x42abb3
  42ab73:	je     0x42ab84
  42ab75:	call   0xf3461afd
  42ab7a:	push   es
  42ab7b:	ins    BYTE PTR es:[edi],dx
  42ab7c:	enter  0x575c,0x16
  42ab80:	cmpxchg BYTE PTR [ebp+0x33],dl
  42ab84:	paddd  mm0,QWORD PTR [esi-0x7cb33c26]
  42ab8b:	test   al,0x98
  42ab8d:	ret    0x3c3f
  42ab90:	or     al,0xc7
  42ab92:	ja     0x42abf4
  42ab94:	cwde   
  42ab95:	jl     0x42abd7
  42ab97:	sbb    al,0x20
  42ab99:	mov    eax,ds:0x8cf40f3e
  42ab9e:	loop   0x42ac04
  42aba0:	ret    
  42aba1:	sbb    al,0x8b
  42aba3:	and    edx,DWORD PTR [eax-0x3d]
  42aba6:	out    dx,al
  42aba7:	sahf   
  42aba8:	out    dx,eax
  42aba9:	add    BYTE PTR [eax],al
  42abab:	add    BYTE PTR [edx],cl
  42abad:	(bad)  
  42abae:	ins    DWORD PTR es:[edi],dx
  42abaf:	enter  0x723c,0xa9
  42abb3:	out    dx,eax
  42abb4:	xor    DWORD PTR [ebx-0x1c],eax
  42abb7:	xor    ebp,edi
  42abb9:	push   es
  42abba:	jmp    0xa1861fc2
  42abbf:	call   0xcaf7:0x8f601aa4
  42abc6:	pop    ebp
  42abc7:	enter  0x719c,0x29
  42abcb:	out    dx,eax
  42abcc:	jg     0x42ac19
  42abce:	dec    ebp
  42abcf:	jl     0x42ac08
  42abd1:	add    al,0x0
  42abd3:	sbb    eax,0x5cb843ed
  42abd8:	stos   DWORD PTR es:[edi],eax
  42abd9:	mov    ch,0x4f
  42abdb:	je     0x42ab98
  42abdd:	aad    0x4f
  42abdf:	push   ds
  42abe0:	mov    esi,ebp
  42abe2:	cli    
  42abe3:	pushf  
  42abe4:	cwde   
  42abe5:	add    BYTE PTR [ebp+0x1],dl
  42abe8:	imul   eax,esi,0xffffff86
  42abeb:	lods   al,BYTE PTR ds:[esi]
  42abec:	clc    
  42abed:	jb     0x42abf6
  42abef:	jb     0x42ab79
  42abf1:	dec    ebp
  42abf2:	sti    
  42abf3:	cwde   
  42abf4:	js     0x42ab84
  42abf6:	je     0x42abe9
  42abf8:	ficom  DWORD PTR [eax]
  42abfa:	xchg   DWORD PTR [ecx],esp
  42abfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42abfd:	push   edi
  42abfe:	das    
  42abff:	mov    al,0xa0
  42ac01:	sub    al,0xce
  42ac03:	cmp    esp,DWORD PTR [edi-0x240aad00]
  42ac09:	inc    ebx
  42ac0a:	clc    
  42ac0b:	shl    cl,cl
  42ac0d:	sub    eax,0x1ec0
  42ac12:	add    BYTE PTR [ebp+0x3fabc954],dl
  42ac18:	std    
  42ac19:	push   ebx
  42ac1a:	bound  edx,QWORD PTR [ebx]
  42ac1c:	xchg   BYTE PTR [ebp+esi*8+0x71],al
  42ac20:	jmp    0x3f4f:0x6f0eb07
  42ac27:	call   0x1006:0xfda02ef7
  42ac2e:	push   ds
  42ac2f:	imul   ecx,DWORD PTR [ebp+0x7f],0xffffffa9
  42ac33:	adc    ecx,DWORD PTR [ebp-0x5]
  42ac36:	cld    
  42ac37:	clc    
  42ac38:	mov    DWORD PTR [ecx+esi*2-0x4604fe1c],eax
  42ac3f:	or     BYTE PTR [ecx-0x7e0f16ec],al
  42ac45:	mov    edi,0x7985a7dd
  42ac4a:	in     eax,0x5b
  42ac4c:	dec    eax
  42ac4d:	or     BYTE PTR [eax],al
  42ac4f:	inc    edi
  42ac50:	mov    edx,0xa113302
  42ac55:	push   eax
  42ac56:	add    al,0x4f
  42ac58:	inc    ebx
  42ac59:	je     0x42ac7f
  42ac5b:	push   ecx
  42ac5c:	ret    0xff06
  42ac5f:	into   
  42ac60:	jo     0x42abef
  42ac62:	test   edx,edx
  42ac64:	or     esi,edi
  42ac66:	call   FWORD PTR [edx+0x20]
  42ac69:	stos   DWORD PTR es:[edi],eax
  42ac6a:	push   ebp
  42ac6b:	in     al,0x9
  42ac6d:	test   eax,eax
  42ac6f:	push   cs
  42ac70:	fild   DWORD PTR [ecx+0x477d8247]
  42ac76:	or     BYTE PTR [eax],al
  42ac78:	add    BYTE PTR [eax],al
  42ac7a:	dec    ecx
  42ac7b:	or     edx,DWORD PTR [eax+0x4]
  42ac7e:	inc    ecx
  42ac7f:	xor    BYTE PTR [edx-0x24],ch
  42ac82:	rcr    dl,0x57
  42ac85:	push   ecx
  42ac86:	inc    ebp
  42ac87:	aad    0xf6
  42ac89:	mov    dl,0x9
  42ac8b:	add    esi,edi
  42ac8d:	adc    eax,0x3af75a
  42ac92:	lea    esi,[eax]
  42ac94:	adc    eax,eax
  42ac96:	fldenv [edi]
  42ac98:	test   BYTE PTR [ebx+0x5e57068a],0xe1
  42ac9f:	aas    
  42aca0:	mov    edx,0xbad71a08
  42aca5:	inc    eax
  42aca6:	adc    DWORD PTR [edi+esi*8],0x82002e74
  42acad:	dec    ecx
  42acae:	adc    cl,BYTE PTR [ebx]
  42acb0:	je     0x42acd6
  42acb2:	add    bh,BYTE PTR [edi+0x1]
  42acb5:	(bad)  
  42acb6:	jmp    0xd813:0x4ab6070e
  42acbd:	sbb    ecx,DWORD PTR [edx-0x79]
  42acc0:	(bad)  
  42acc2:	pop    ecx
  42acc3:	dec    eax
  42acc4:	cli    
  42acc5:	shl    edx,0x7
  42acc8:	dec    esi
  42acc9:	mov    esi,ebx
  42accb:	pop    esi
  42accc:	or     al,0x72
  42acce:	out    dx,eax
  42accf:	and    al,0x5
  42acd1:	hlt    
  42acd2:	jg     0x42ac81
  42acd4:	(bad)  
  42acd5:	out    0x48,eax
  42acd7:	jmp    0xa3b1a7e8
  42acdc:	mul    bh
  42acde:	add    BYTE PTR [eax],al
  42ace0:	add    bh,dl
  42ace2:	out    dx,al
  42ace3:	(bad)  
  42ace4:	jmp    DWORD PTR [ebp-0xdf81d57]
  42acea:	and    al,0x5
  42acec:	jo     0x42ad56
  42acee:	lods   eax,DWORD PTR ds:[esi]
  42acef:	(bad)  
  42acf0:	jae    0x42acdf
  42acf2:	mov    bl,0x16
  42acf4:	pusha  
  42acf5:	call   0xadc9b8fd
  42acfa:	fwait
  42acfb:	inc    eax
  42acfc:	add    al,0xf3
  42acfe:	push   0xa0ef23bb
  42ad03:	mov    ah,0xe7
  42ad05:	mov    BYTE PTR [edi],bh
  42ad07:	push   es
  42ad08:	sti    
  42ad09:	jo     0x42acf0
  42ad0b:	push   es
  42ad0c:	je     0x42acc3
  42ad0e:	push   0x44
  42ad10:	je     0x42acc3
  42ad12:	int3   
  42ad13:	(bad)  
  42ad14:	and    edi,edi
  42ad16:	aad    0x9b
  42ad18:	push   edx
  42ad19:	inc    ebp
  42ad1a:	mov    esp,0x9876d87a
  42ad1f:	(bad)  
  42ad20:	mov    al,cs:0x7bf0ac
  42ad26:	cs add al,0x87
  42ad29:	lods   al,BYTE PTR ds:[esi]
  42ad2a:	std    
  42ad2b:	ja     0x42ad31
  42ad2d:	jbe    0x42ad18
  42ad2f:	(bad)  
  42ad30:	push   ebx
  42ad32:	pop    edx
  42ad33:	(bad)  
  42ad34:	or     esp,DWORD PTR [ebx+0x5166395]
  42ad3a:	jl     0x42acbc
  42ad3c:	rol    BYTE PTR [edi-0x1cbc861c],0x68
  42ad43:	test   BYTE PTR [eax+0xf000000],0x7
  42ad4a:	push   0x9917300b
  42ad4f:	add    eax,0x1bb60fd4
  42ad54:	out    dx,eax
  42ad55:	sbb    eax,0xc71d0b4b
  42ad5a:	mov    ds:0xe90386ae,al
  42ad5f:	dec    ebx
  42ad60:	rcl    DWORD PTR [edi],1
  42ad62:	sub    ebx,DWORD PTR [eax+0x74]
  42ad65:	push   esp
  42ad66:	pop    esi
  42ad67:	sbb    BYTE PTR [ebx+eiz*8],ch
  42ad6a:	and    BYTE PTR [edi+0x43d62397],al
  42ad70:	sub    al,0x51
  42ad72:	pop    esi
  42ad73:	adc    eax,0xefc5436a
  42ad78:	jnp    0x42adbd
  42ad7a:	int    0xeb
  42ad7c:	jnp    0x42adc1
  42ad7e:	(bad)
  42ad81:	inc    ebx
  42ad82:	int    0xdb
  42ad84:	ins    DWORD PTR es:[edi],dx
  42ad85:	inc    ecx
  42ad86:	in     eax,0xb2
  42ad88:	jnp    0x42adcd
  42ad8a:	or     eax,0xedbeccf0
  42ad8f:	add    esi,ebx
  42ad91:	mov    esi,0xfa54f358
  42ad96:	mov    eax,ds:0xe51710bf
  42ad9b:	js     0x42ad50
  42ad9d:	push   es
  42ad9e:	jo     0x42ad2f
  42ada0:	adc    BYTE PTR [ebx],dl
  42ada2:	shl    DWORD PTR [esp+esi*2-0x6],0xa9
  42ada7:	jle    0x42ad97
  42ada9:	push   ss
  42adaa:	test   bl,0x0
  42adad:	add    BYTE PTR [eax],al
  42adaf:	and    al,0x4a
  42adb1:	call   0x1804:0x25b518d0
  42adb8:	ror    BYTE PTR [ebp+0x5],cl
  42adbb:	repnz push es
  42adbd:	jmp    0x2ad073e0
  42adc2:	add    BYTE PTR [eax+ecx*1+0x0],dh
  42adc6:	fs inc esp
  42adc8:	sbb    BYTE PTR es:[ebx],bl
  42adcb:	clc    
  42adcc:	push   ss
  42adcd:	test   BYTE PTR [ecx],ch
  42adcf:	je     0x42ae07
  42add1:	sti    
  42add2:	aad    0xbc
  42add4:	sbb    eax,0x9b4ad8d
  42add9:	lea    ebx,[ebp-0x5276e254]
  42addf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ade0:	sbb    eax,0xf9c34ce8
  42ade5:	cli    
  42ade6:	shr    DWORD PTR [eax],0x2
  42ade9:	add    cl,ch
  42adeb:	cmp    BYTE PTR [edi+0x13],dh
  42adee:	jmp    0x2a859ce3
  42adf3:	jmp    0xc358fdf5
  42adf8:	std    
  42adf9:	lods   eax,DWORD PTR ds:[esi]
  42adfa:	stos   BYTE PTR es:[edi],al
  42adfb:	lock std 
  42adfd:	rol    dl,cl
  42adff:	sub    eax,0x4a9ebb73
  42ae04:	push   eax
  42ae05:	xchg   DWORD PTR [ebx+ecx*2],ecx
  42ae08:	mov    eax,0xc6076251
  42ae0d:	add    ecx,ebp
  42ae0f:	fld    QWORD PTR [esi+0x0]
  42ae12:	rol    DWORD PTR [eax],1
  42ae14:	add    BYTE PTR [eax],al
  42ae16:	addr16 stc 
  42ae18:	cli    
  42ae19:	jmp    0xa6472309
  42ae1e:	icebp  
  42ae1f:	push   ss
  42ae20:	lea    ebp,[ecx]
  42ae22:	out    dx,eax
  42ae23:	out    dx,al
  42ae24:	ss jecxz 0x42ae11
  42ae27:	std    
  42ae28:	pop    ecx
  42ae29:	stos   BYTE PTR es:[edi],al
  42ae2a:	add    DWORD PTR [eax+0xd7969f0],0x54151d00
  42ae34:	das    
  42ae35:	sahf   
  42ae36:	sub    BYTE PTR [edi+0x8],bh
  42ae39:	pop    ds
  42ae3a:	and    BYTE PTR [eax+0x32fbe541],al
  42ae40:	mov    eax,0x14e16200
  42ae45:	(bad)  
  42ae46:	jge    0x42ae0f
  42ae48:	xor    DWORD PTR [esi+0x12],edi
  42ae4b:	xchg   ebx,eax
  42ae4c:	in     eax,0x5f
  42ae4e:	pop    ebp
  42ae4f:	xchg   ebp,eax
  42ae50:	(bad)  
  42ae51:	out    0xdc,eax
  42ae53:	jmp    0xfffe:0xa549fff8
  42ae5a:	dec    ecx
  42ae5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae5c:	add    al,BYTE PTR [eax]
  42ae5e:	pushf  
  42ae5f:	inc    ebx
  42ae60:	dec    esi
  42ae61:	mov    ecx,DWORD PTR [ebx]
  42ae63:	xor    DWORD PTR [ebp+0xc],0xffffffca
  42ae67:	mov    bh,0x81
  42ae69:	jl     0x42ae51
  42ae6b:	(bad)  
  42ae6c:	outs   dx,BYTE PTR ds:[esi]
  42ae6d:	adc    dl,BYTE PTR [ecx]
  42ae6f:	(bad)  
  42ae72:	(bad)  
  42ae73:	dec    esp
  42ae74:	call   0xf74fa264
  42ae79:	mov    eax,DWORD PTR [eax]
  42ae7b:	add    BYTE PTR [eax],al
  42ae7d:	inc    esp
  42ae7e:	clc    
  42ae7f:	jns    0x42aea5
  42ae81:	and    al,BYTE PTR [ebx]
  42ae83:	dec    edi
  42ae84:	mov    edi,DWORD PTR [edx+ebx*1+0x48a0005]
  42ae8b:	push   edi
  42ae8c:	pop    esi
  42ae8d:	enter  0x6,0x8b
  42ae91:	xchg   esi,eax
  42ae92:	fdivr  st,st(6)
  42ae94:	push   ebp
  42ae95:	and    eax,0xc58df97a
  42ae9a:	push   es
  42ae9b:	or     DWORD PTR [esi],0xffffffcf
  42ae9e:	out    0x7f,eax
  42aea0:	mov    edx,DWORD PTR ds:0xdb048bfb
  42aea6:	retf   0x72cf
  42aea9:	inc    ecx
  42aeaa:	jno    0x42aeee
  42aeac:	add    al,0xd8
  42aeae:	sbb    dh,ch
  42aeb0:	sbb    bl,BYTE PTR [edi+ecx*1-0x1d]
  42aeb4:	add    cl,BYTE PTR [eax+0x44]
  42aeb7:	test   al,al
  42aeb9:	push   es
  42aeba:	(bad)  
  42aebb:	cmc    
  42aebc:	dec    edi
  42aebd:	repz in eax,0x7b
  42aec0:	inc    ebx
  42aec1:	sti    
  42aec2:	scas   al,BYTE PTR es:[edi]
  42aec3:	push   ds
  42aec4:	(bad)  
  42aec5:	mov    ah,0x95
  42aec7:	ficomp WORD PTR [eax]
  42aec9:	std    
  42aeca:	js     0x42ae74
  42aecc:	pop    ecx
  42aecd:	xor    edx,ebp
  42aecf:	(bad)  
  42aed0:	push   ecx
  42aed1:	js     0x42af51
  42aed3:	pop    ss
  42aed4:	cmp    esp,esp
  42aed6:	pusha  
  42aed7:	or     dl,dh
  42aed9:	aaa    
  42aeda:	add    bh,ah
  42aedc:	add    BYTE PTR [edi-0x18],bl
  42aedf:	mov    al,0xe7
  42aee1:	add    BYTE PTR [eax],al
  42aee3:	add    BYTE PTR [eax-0xa],dh
  42aee6:	or     bl,bh
  42aee8:	js     0x42af11
  42aeea:	test   eax,0xa9edf7bd
  42aeef:	xchg   bh,al
  42aef1:	sahf   
  42aef2:	mov    bl,0x52
  42aef4:	lods   al,BYTE PTR ds:[esi]
  42aef5:	mov    dl,0xf6
  42aef7:	cs enter 0x96bc,0x75
  42aefc:	imul   ebp
  42aefe:	inc    BYTE PTR [edi+0x15081136]
  42af04:	(bad)  
  42af06:	mov    esi,0xcc0579ff
  42af0b:	test   BYTE PTR [edi],0x8e
  42af0e:	mov    al,0x4e
  42af10:	je     0x42af8c
  42af12:	repz out 0xc,eax
  42af15:	ror    DWORD PTR [eax],0xfb
  42af18:	js     0x42aef7
  42af1a:	(bad)  
  42af1b:	out    dx,al
  42af1c:	out    0x35,eax
  42af1e:	xlat   BYTE PTR ds:[ebx]
  42af1f:	add    al,0x1f
  42af21:	cmp    BYTE PTR [esi-0x50c35e01],0x4
  42af28:	mov    cl,0x7c
  42af2a:	(bad)  
  42af2b:	jmp    FWORD PTR [esp+ebx*1-0x25cbad51]
  42af32:	cmp    dl,BYTE PTR [ecx]
  42af34:	mov    bl,0xed
  42af36:	jnp    0x42af7d
  42af38:	sti    
  42af39:	push   es
  42af3a:	fiadd  WORD PTR [edx-0x59]
  42af3d:	sbb    edx,DWORD PTR [ecx]
  42af3f:	hlt    
  42af40:	rol    DWORD PTR [esi],1
  42af42:	jmp    0xf953b8fa
  42af47:	repnz add BYTE PTR [eax],al
  42af4a:	add    ah,al
  42af4c:	push   es
  42af4d:	adc    BYTE PTR [ecx+0x63d3f7f4],0xe5
  42af54:	inc    esi
  42af55:	jmp    0xe838e597
  42af5a:	sbb    bh,cl
  42af5c:	pop    esi
  42af5d:	jmp    0xb649a2e5
  42af62:	lods   eax,DWORD PTR ds:[esi]
  42af63:	inc    ecx
  42af64:	idiv   bl
  42af66:	aaa    
  42af67:	std    
  42af68:	inc    esi
  42af69:	jmp    0x895f791c
  42af6e:	repnz cld 
  42af70:	push   es
  42af71:	fwait
  42af72:	jns    0x42afa2
  42af74:	not    BYTE PTR [ecx-0x1f364456]
  42af7a:	add    edi,DWORD PTR [esi]
  42af7c:	adc    BYTE PTR [eax*4+0x3e7578f],0xf3
  42af84:	pop    ecx
  42af85:	pop    esi
  42af86:	jmp    0x3ebc8f7
  42af8b:	and    DWORD PTR [esi-0x4a],ebx
  42af8e:	push   es
  42af8f:	mov    cl,0x4c
  42af91:	cli    
  42af92:	add    ebp,DWORD PTR [edx+0x74]
  42af95:	std    
  42af96:	jl     0x42af86
  42af98:	out    dx,al
  42af99:	xchg   ecx,eax
  42af9a:	cdq    
  42af9b:	data16 cmc 
  42af9d:	sti    
  42af9e:	retf   
  42af9f:	add    eax,DWORD PTR [edi-0x17]
  42afa2:	jl     0x42af52
  42afa4:	neg    BYTE PTR [edi-0x78]
  42afa7:	pop    eax
  42afa8:	mov    dl,al
  42afaa:	push   es
  42afab:	clc    
  42afac:	mov    bh,ah
  42afae:	add    al,0x0
  42afb0:	add    BYTE PTR [eax],al
  42afb2:	repz push es
  42afb4:	ins    BYTE PTR es:[edi],dx
  42afb5:	add    BYTE PTR [ebx-0xa4a000c],0x56
  42afbc:	sti    
  42afbd:	xor    al,0xff
  42afbf:	leave  
  42afc0:	test   BYTE PTR [ecx-0x15],bl
  42afc3:	icebp  
  42afc4:	cli    
  42afc5:	int    0xf2
  42afc7:	push   es
  42afc8:	add    BYTE PTR [esi+0x2910ce03],dl
  42afce:	out    dx,eax
  42afcf:	(bad)  
  42afd1:	jmp    0x6cc9b6c6
  42afd6:	test   al,0xf3
  42afd8:	cli    
  42afd9:	jbe    0x42af94
  42afdb:	ror    BYTE PTR [edx],0x67
  42afde:	sysret 
  42afe0:	add    cl,ch
  42afe2:	test   eax,0xb1999402
  42afe7:	cmc    
  42afe8:	or     DWORD PTR [ebp+0x3],ebp
  42afeb:	pop    es
  42afec:	add    cl,ch
  42afee:	mov    eax,ds:0xe8c438b5
  42aff3:	js     0x42b003
  42aff5:	jb     0x42af7a
  42aff7:	stc    
  42aff8:	cmp    ch,ah
  42affa:	jb     0x42affd
  42affc:	test   BYTE PTR [ebx],ch
  42affe:	lock push es
  42b000:	add    BYTE PTR [ecx-0x6407b557],ch
  42b006:	(bad)  
  42b007:	push   edi
  42b008:	call   0xfb32440b
  42b00d:	pusha  
  42b00e:	mov    bl,0xed
  42b010:	ss test DWORD PTR cs:[ecx+0xe9a6],ecx
  42b018:	add    al,dh
  42b01a:	push   es
  42b01b:	sti    
  42b01c:	cmp    al,0xb8
  42b01e:	repz cli 
  42b020:	out    dx,al
  42b021:	xchg   esi,eax
  42b022:	ins    DWORD PTR es:[edi],dx
  42b023:	add    ch,ch
  42b025:	lock push es
  42b027:	sti    
  42b028:	hlt    
  42b029:	cmp    al,0x16
  42b02b:	inc    eax
  42b02c:	jmp    0xd679a6fc
  42b031:	mov    DWORD PTR ds:[ebp+0x94a00],eax
  42b038:	lea    ecx,[edi]
  42b03a:	daa    
  42b03b:	push   eax
  42b03c:	push   esi
  42b03d:	xor    dl,BYTE PTR [esi+0xe]
  42b040:	call   DWORD PTR [ebp-0x5c]
  42b043:	cmp    eax,0xff853755
  42b049:	inc    BYTE PTR [ebp-0x4081ba7f]
  42b04f:	add    esi,DWORD PTR [eax]
  42b051:	mov    bh,0xfa
  42b054:	je     0x42b044
  42b056:	or     ebp,DWORD PTR [edi]
  42b058:	call   FWORD PTR [edi]
  42b05a:	mov    DWORD PTR [edi],ecx
  42b05c:	inc    eax
  42b05d:	fidivr DWORD PTR [edi-0x39d9d7fd]
  42b063:	cli    
  42b064:	je     0x42b004
  42b066:	outs   dx,DWORD PTR ds:[esi]
  42b067:	pop    es
  42b068:	push   eax
  42b069:	imul   esp,edi,0xffffffa6
  42b06c:	inc    ebx
  42b06d:	fisubr DWORD PTR [edi+0x0]
  42b070:	call   0x3b9382
  42b075:	dec    edi
  42b076:	dec    ebx
  42b077:	jne    0x42b0ba
  42b079:	inc    ecx
  42b07a:	mov    esp,0x8df2
  42b07f:	add    BYTE PTR [esi-0x65fffb83],dl
  42b085:	or     BYTE PTR [ebp+0x2212fe75],cl
  42b08b:	pop    ss
  42b08c:	hlt    
  42b08d:	or     DWORD PTR [eax+eax*8+0x5581cf6e],eax
  42b094:	loop   0x42b103
  42b096:	test   DWORD PTR [eax-0x7408f609],edi
  42b09c:	inc    edi
  42b09d:	add    al,0xf7
  42b09f:	jne    0x42b093
  42b0a1:	or     DWORD PTR [ebp-0x8],eax
  42b0a4:	push   ebp
  42b0a5:	mov    ch,0xe6
  42b0a7:	mov    DWORD PTR [esi+0x79],ecx
  42b0aa:	div    DWORD PTR [ebp-0x8f26e]
  42b0b0:	repz lds esi,FWORD PTR [esi+0x7ac544f9]
  42b0b7:	rol    bh,0xe1
  42b0ba:	cmp    al,0x45
  42b0bc:	xor    al,0xdf
  42b0be:	stos   DWORD PTR es:[edi],eax
  42b0bf:	out    0x64,eax
  42b0c1:	aad    0x4
  42b0c3:	sti    
  42b0c4:	loopne 0x42b06a
  42b0c6:	add    esi,DWORD PTR [ebp+0xb]
  42b0c9:	lods   eax,DWORD PTR ds:[esi]
  42b0ca:	das    
  42b0cb:	lea    ebp,[esi+0x4e]
  42b0ce:	add    bh,bl
  42b0d0:	or     al,0x2e
  42b0d2:	add    eax,0xe9850375
  42b0d7:	retf   
  42b0d8:	loop   0x42b0f7
  42b0da:	add    al,0x85
  42b0dc:	xor    esp,ebp
  42b0de:	jns    0x42b0d9
  42b0e0:	in     eax,dx
  42b0e1:	jl     0x42b0e7
  42b0e3:	sti    
  42b0e4:	add    BYTE PTR [eax],al
  42b0e6:	add    BYTE PTR [esi+0x6e],bl
  42b0e9:	add    al,0xcf
  42b0eb:	sbb    ch,bl
  42b0ed:	adc    cl,BYTE PTR [ebx]
  42b0ef:	outs   dx,BYTE PTR ds:[esi]
  42b0f0:	cdq    
  42b0f1:	add    al,0xfb
  42b0f3:	int3   
  42b0f4:	pop    esp
  42b0f5:	mov    dh,bl
  42b0f7:	fistp  DWORD PTR [edi-0x14]
  42b0fa:	stc    
  42b0fb:	mov    esp,0x14faba77
  42b100:	xchg   esp,eax
  42b101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b102:	enter  0x92b0,0x77
  42b106:	in     al,dx
  42b107:	inc    edx
  42b108:	xchg   ecx,eax
  42b109:	lods   al,BYTE PTR ds:[esi]
  42b10a:	mov    WORD PTR [esi],gs
  42b10c:	sub    ch,BYTE PTR [esi-0x1680d9b]
  42b112:	cli    
  42b113:	push   es
  42b114:	out    0x75,al
  42b116:	inc    ebp
  42b117:	xchg   DWORD PTR [ebp-0x31fceafd],ebp
  42b11d:	mov    esi,0x8a1d6fff
  42b122:	sbb    bl,bl
  42b124:	in     eax,0x0
  42b126:	add    bl,dh
  42b128:	pushf  
  42b129:	jno    0x42b170
  42b12b:	jmp    0x42b133
  42b12d:	cmp    DWORD PTR [ebx],eax
  42b12f:	fiadd  WORD PTR [edx]
  42b131:	ins    BYTE PTR es:[edi],dx
  42b132:	jns    0x42b183
  42b134:	fidiv  WORD PTR [eax+0x5e06f304]
  42b13a:	fcom   QWORD PTR [ebp+0x7]
  42b13d:	iretw  
  42b13f:	cmp    DWORD PTR [edi+0x76a703bd],eax
  42b145:	mov    ebx,0x3e79f3c7
  42b14a:	xchg   DWORD PTR [eax],eax
  42b14c:	add    BYTE PTR [eax],al
  42b14e:	lahf   
  42b14f:	(bad)  
  42b150:	out    0x77,eax
  42b152:	icebp  
  42b153:	xchg   DWORD PTR [ebx],ebx
  42b155:	or     al,0xd
  42b157:	jp     0x42b18b
  42b159:	mov    DWORD PTR ds:0x3336e279,ebx
  42b15f:	ins    BYTE PTR es:[edi],dx
  42b160:	jo     0x42b16d
  42b162:	or     al,0x56
  42b164:	cwde   
  42b165:	out    dx,eax
  42b166:	jg     0x42b1ae
  42b168:	jb     0x42b1d4
  42b16a:	xor    esp,DWORD PTR fs:[edx]
  42b16d:	add    al,0x66
  42b16f:	push   es
  42b170:	scas   al,BYTE PTR es:[edi]
  42b171:	out    dx,al
  42b172:	in     al,0x46
  42b174:	sbb    al,0x8
  42b176:	repnz push es
  42b178:	jmp    0x2078b7f3
  42b17d:	push   0x6a
  42b17f:	add    ebp,DWORD PTR [edx+0x40869c8e]
  42b185:	push   es
  42b186:	and    DWORD PTR [ebx],esp
  42b188:	cmp    bx,0xb404
  42b18d:	sub    DWORD PTR [eax-0x21],eax
  42b190:	call   DWORD PTR [esi-0x67]
  42b193:	repnz ins DWORD PTR es:[edi],dx
  42b195:	hlt    
  42b196:	ja     0x42b191
  42b198:	pushf  
  42b199:	adc    al,0x1b
  42b19b:	or     ebp,eax
  42b19d:	add    esi,ebx
  42b19f:	pop    ecx
  42b1a0:	fwait
  42b1a1:	add    bl,dh
  42b1a3:	dec    edx
  42b1a4:	fadd   DWORD PTR [ebx-0xd]
  42b1a7:	mov    edi,edi
  42b1a9:	sub    dl,ch
  42b1ab:	icebp  
  42b1ac:	jge    0x42b1d0
  42b1ae:	lock push esp
  42b1b0:	call   0x42b26c
  42b1b5:	cli    
  42b1b6:	in     al,dx
  42b1b7:	cli    
  42b1b8:	jb     0x42b1ef
  42b1ba:	jmp    0xed7b1bbd
  42b1bf:	pop    ecx
  42b1c0:	xor    ch,BYTE PTR [esi]
  42b1c2:	mov    ah,0x7
  42b1c4:	jmp    0x192e3b64
  42b1c9:	(bad)  
  42b1ca:	jno    0x42b231
  42b1cc:	mov    ch,0xf0
  42b1ce:	or     DWORD PTR [ecx+esi*4-0x39],0x68
  42b1d3:	add    DWORD PTR [ebx],edx
  42b1d5:	out    dx,eax
  42b1d6:	in     eax,dx
  42b1d7:	je     0x42b1ca
  42b1d9:	jg     0x42b226
  42b1db:	clc    
  42b1dc:	cmp    eax,esi
  42b1de:	sbb    esi,DWORD PTR [eax-0x7]
  42b1e1:	mov    al,0x6
  42b1e3:	test   DWORD PTR [ecx+0x13520f7b],ebp
  42b1e9:	sti    
  42b1ea:	add    DWORD PTR [ebp+esi*2+0x40],0xffffff84
  42b1ef:	inc    esp
  42b1f0:	loope  0x42b232
  42b1f2:	out    dx,al
  42b1f3:	je     0x42b1ea
  42b1f5:	cmp    DWORD PTR [edx-0x8],0x51
  42b1f9:	in     eax,dx
  42b1fa:	push   es
  42b1fb:	add    cl,ch
  42b1fd:	push   edx
  42b1fe:	jmp    0x417e:0xeca869fe
  42b205:	in     al,dx
  42b206:	jnp    0x42b20d
  42b208:	add    BYTE PTR [edx],bh
  42b20a:	push   DWORD PTR [ebx-0x13]
  42b20d:	ins    DWORD PTR es:[edi],dx
  42b20e:	push   0xfffffffc
  42b210:	jmp    0x313efc82
  42b215:	scas   al,BYTE PTR es:[edi]
  42b216:	or     DWORD PTR [eax],eax
  42b218:	mov    ah,0x0
  42b21a:	add    BYTE PTR [eax],al
  42b21c:	jge    0x42b1fb
  42b21e:	push   edx
  42b21f:	cmp    ebx,DWORD PTR fs:[ebx]
  42b222:	push   eax
  42b223:	push   cs
  42b224:	sti    
  42b225:	push   ss
  42b226:	jg     0x42b228
  42b228:	mov    ebp,0x5e75f704
  42b22d:	arpl   WORD PTR [eax],ax
  42b22f:	jmp    edi
  42b231:	std    
  42b232:	div    BYTE PTR [esi]
  42b234:	dec    ebp
  42b235:	sbb    DWORD PTR [eax+edx*1+0xa],ebp
  42b239:	or     esi,edi
  42b23b:	xlat   BYTE PTR ss:[ebx]
  42b23d:	retf   0x4405
  42b240:	lahf   
  42b241:	push   cs
  42b242:	not    DWORD PTR ds:0x401aa6
  42b248:	sar    DWORD PTR [edi+0x1a585d55],0x0
  42b24f:	push   ebp
  42b250:	xchg   ecx,eax
  42b251:	test   BYTE PTR [edi+0x53],0x19
  42b255:	ror    BYTE PTR [ecx-0x73],cl
  42b258:	fild   WORD PTR [esi]
  42b25a:	push   ecx
  42b25b:	push   ebx
  42b25c:	loopne 0x42b266
  42b25e:	dec    ebx
  42b25f:	push   ebx
  42b260:	leave  
  42b261:	pop    es
  42b262:	jne    0x42b26c
  42b264:	mov    ds:0x8a000005,al
  42b269:	pop    edx
  42b26a:	mov    DWORD PTR [ebp+0x6e],eax
  42b26d:	push   es
  42b26e:	adc    eax,0x44ca68
  42b273:	test   DWORD PTR [edx-0x4800da88],ecx
  42b279:	or     al,0xf7
  42b27b:	jne    0x42b243
  42b27d:	pop    es
  42b27e:	jne    0x42b290
  42b280:	add    BYTE PTR [eax],al
  42b282:	add    BYTE PTR [ecx+0x2d0c7507],cl
  42b288:	js     0x42b286
  42b28a:	call   DWORD PTR [edi-0x65bfef94]
  42b290:	mov    DWORD PTR [edx-0x44678b],edi
  42b296:	(bad)  
  42b297:	addr16 lock cmc 
  42b29a:	adc    eax,0x401476
  42b29f:	add    dl,cl
  42b2a1:	push   ecx
  42b2a2:	leave  
  42b2a3:	repz sbb ebx,DWORD PTR [eax]
  42b2a6:	add    BYTE PTR [esi],ah
  42b2a8:	gs lock jle 0x42b233
  42b2ac:	cli    
  42b2ad:	or     DWORD PTR [ebx+ebp*2-0xf],0x53
  42b2b2:	push   edx
  42b2b3:	js     0x42b268
  42b2b5:	push   0x10
  42b2b7:	mov    bl,0xdd
  42b2b9:	mov    DWORD PTR [edi+edx*2+0x2e],eax
  42b2bd:	xor    eax,0x71d0a0d7
  42b2c2:	or     al,0x7a
  42b2c4:	cmp    eax,DWORD PTR [eax]
  42b2c6:	dec    edi
  42b2c7:	cmp    al,0x5b
  42b2c9:	or     al,0xfb
  42b2cb:	cld    
  42b2cc:	enter  0x84d8,0x33
  42b2d0:	cmp    ecx,DWORD PTR [ebp-0x79]
  42b2d3:	scas   al,BYTE PTR es:[edi]
  42b2d4:	mov    ecx,0xeaa6bf3b
  42b2d9:	test   DWORD PTR [ebx+ebx*1-0x6b],ebx
  42b2dd:	aas    
  42b2de:	jg     0x42b313
  42b2e0:	jmp    0x70e6:0xd57fbf3b
  42b2e7:	add    BYTE PTR [eax],al
  42b2e9:	add    dh,ah
  42b2eb:	jg     0x42b2ec
  42b2ed:	mov    BYTE PTR [esi+0x67bf3c71],ch
  42b2f3:	ret    0x4c89
  42b2f6:	out    0xe,eax
  42b2f8:	push   esp
  42b2f9:	sti    
  42b2fa:	data16 rcl BYTE PTR [ebx-0x5],cl
  42b2fe:	pop    esi
  42b2ff:	idiv   bh
  42b301:	xor    cl,ah
  42b303:	aaa    
  42b304:	cmp    BYTE PTR [edi+0x448bee3e],0xe3
  42b30b:	fs dec edx
  42b30d:	hlt    
  42b30e:	push   0xfffffff5
  42b310:	mov    eax,DWORD PTR [edi+ebp*4+0x76]
  42b314:	inc    edx
  42b315:	clc    
  42b316:	cwde   
  42b317:	in     eax,0xff
  42b319:	je     0x42b2c2
  42b31b:	inc    ebp
  42b31c:	outs   dx,BYTE PTR ds:[esi]
  42b31d:	adc    eax,0x220695
  42b322:	shr    bh,0xf3
  42b325:	ja     0x42b30a
  42b327:	inc    esi
  42b328:	jmp    0xab31eab9
  42b32d:	pop    esp
  42b32e:	stos   BYTE PTR es:[edi],al
  42b32f:	(bad)  
  42b330:	hlt    
  42b331:	add    edi,DWORD PTR [ebx+esi*1+0x56c35329]
  42b338:	cdq    
  42b339:	add    bh,ah
  42b33b:	sub    dl,cl
  42b33d:	add    BYTE PTR [ecx],ah
  42b33f:	lock sti 
  42b341:	outs   dx,DWORD PTR ds:[esi]
  42b342:	jecxz  0x42b38a
  42b344:	jmp    0xb0beb647
  42b349:	mul    DWORD PTR ds:0xfeae0c
  42b34f:	add    BYTE PTR [eax],al
  42b351:	jne    0x42b342
  42b353:	(bad)  [edi+0x3]
  42b356:	inc    edi
  42b357:	jmp    0xa78e18e5
  42b35c:	or     bl,dh
  42b35e:	pop    ecx
  42b35f:	pop    esi
  42b360:	lock xchg ebp,eax
  42b362:	loop   0x42b39c
  42b364:	push   ebx
  42b365:	mov    eax,ds:0x8cdad657
  42b36a:	xor    ah,BYTE PTR [ebp+0x44]
  42b36d:	repz jge 0x42b39b
  42b370:	in     al,dx
  42b371:	stc    
  42b372:	sbb    ch,ah
  42b374:	adc    al,0x33
  42b376:	pop    es
  42b377:	jo     0x42b3c2
  42b379:	mov    edi,0x770fa632
  42b37e:	jbe    0x42b368
  42b380:	add    esi,ebx
  42b382:	pop    esi
  42b383:	mov    cl,0x8f
  42b385:	or     al,0x7
  42b387:	mov    ecx,0xf6aadffe
  42b38c:	inc    ebx
  42b38d:	repz lds esp,FWORD PTR [ebx-0x16f90c39]
  42b394:	add    edi,DWORD PTR [edx+0x4c]
  42b397:	xor    DWORD PTR [ebp+0x5fffbb47],ecx
  42b39d:	adc    dl,bh
  42b39f:	ss sub ah,ah
  42b3a2:	add    BYTE PTR [ebp-0x18],0xf0
  42b3a6:	push   es
  42b3a7:	dec    edi
  42b3a8:	ins    BYTE PTR es:[edi],dx
  42b3a9:	and    al,bl
  42b3ab:	push   eax
  42b3ac:	fs and cl,bh
  42b3af:	push   eax
  42b3b0:	push   cs
  42b3b1:	lahf   
  42b3b2:	cmp    DWORD PTR [edi+0xf6],0x7b
  42b3b9:	cmp    DWORD PTR [ecx],eax
  42b3bb:	jmp    0x9a91f1b0
  42b3c0:	enter  0x8d1e,0xa9
  42b3c4:	lock icebp 
  42b3c6:	adc    al,0xa5
  42b3c8:	loopne 0x42b410
  42b3ca:	add    BYTE PTR [edx+0x48],dh
  42b3cd:	jg     0x42b44b
  42b3cf:	leave  
  42b3d0:	stc    
  42b3d1:	cmc    
  42b3d2:	or     ah,BYTE PTR [ebp-0x10]
  42b3d5:	pop    es
  42b3d6:	add    cl,ch
  42b3d8:	vunpcklpd xmm7,xmm1,XMMWORD PTR [ecx+0x0]
  42b3dd:	inc    edi
  42b3de:	add    BYTE PTR [eax-0x55],ah
  42b3e1:	out    dx,al
  42b3e2:	ss stos BYTE PTR es:[edi],al
  42b3e4:	in     eax,0x82
  42b3e6:	loop   0x42b3d1
  42b3e8:	lock push es
  42b3ea:	push   0xfaee6f29
  42b3ef:	cmp    ah,BYTE PTR [eax-0x10ff019c]
  42b3f5:	jno    0x42b3f7
  42b3f7:	jmp    0x7557a63d
  42b3fc:	add    DWORD PTR [edi+0x0],eax
  42b3ff:	pusha  
  42b400:	sub    esi,ebx
  42b402:	ss stos BYTE PTR es:[edi],al
  42b404:	pop    esp
  42b405:	daa    
  42b406:	lea    esi,[eax+eax*4-0x14a1afaa]
  42b40d:	adc    BYTE PTR [ebx],0xa9
  42b410:	lock cmp DWORD PTR [edi+0x447be6d5],0x0
  42b418:	out    0x59,al
  42b41a:	not    DWORD PTR ds:0xf2000000
  42b420:	cmovo  eax,DWORD PTR [eax]
  42b423:	bswap  edx
  42b425:	jae    0x42b42a
  42b427:	adc    esp,DWORD PTR [edi-0xc]
  42b42a:	mov    ebp,DWORD PTR [edi-0x65bff52f]
  42b430:	pop    edi
  42b431:	or     BYTE PTR [edi-0x1b],dl
  42b434:	shl    DWORD PTR [edx+ecx*1+0x3d],cl
  42b438:	jp     0x42b47d
  42b43a:	lock cmc 
  42b43c:	ror    DWORD PTR [edx-0x1],cl
  42b43f:	(bad)  
  42b441:	xchg   DWORD PTR [ebp-0x12],eax
  42b444:	push   esp
  42b445:	not    DWORD PTR ds:0x401a1e
  42b44b:	ret    
  42b44c:	inc    ebp
  42b44d:	in     al,dx
  42b44e:	cmp    ebx,DWORD PTR [ecx-0x20748d92]
  42b454:	loop   0x42b460
  42b456:	inc    eax
  42b457:	dec    edx
  42b458:	pop    ecx
  42b459:	div    DWORD PTR [ebp+0x32]
  42b45c:	jmp    0x42b42e
  42b45e:	mov    edi,ecx
  42b460:	out    0x31,al
  42b462:	ret    
  42b463:	fimul  WORD PTR [eax+ebp*2+0x20]
  42b467:	or     bh,BYTE PTR [ebp+0x53c9533a]
  42b46d:	div    DWORD PTR [ebp+0x6e]
  42b470:	jmp    0x42b4e5
  42b472:	lock mov ecx,0x6275f757
  42b478:	jmp    0x42b48d
  42b47a:	mov    eax,0x850048ca
  42b47f:	call   0x0:0x39396f
  42b486:	pop    es
  42b487:	out    dx,eax
  42b488:	outs   dx,BYTE PTR ds:[esi]
  42b489:	and    BYTE PTR [ecx+0x3c],dl
  42b48c:	int3   
  42b48d:	sub    eax,DWORD PTR [edi+0xa4581b4]
  42b493:	jmp    0xc746:0xe4f3f473
  42b49a:	or     BYTE PTR [ebx+0x213b0ab6],ah
  42b4a0:	push   esp
  42b4a1:	push   ecx
  42b4a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4a3:	mov    bl,0xf6
  42b4a5:	cli    
  42b4a6:	push   es
  42b4a7:	pop    esi
  42b4a8:	sbb    BYTE PTR [eax-0xd],al
  42b4ab:	sbb    al,0x73
  42b4ad:	or     BYTE PTR [esi-0x5d],bh
  42b4b0:	sar    dl,cl
  42b4b2:	(bad)  
  42b4b3:	stc    
  42b4b4:	jmp    0x42b489
  42b4b6:	xchg   BYTE PTR ds:0xfdf686fd,dl
  42b4bc:	xchg   BYTE PTR [ebx+ebx*2+0x5],al
  42b4c0:	jae    0x42b49e
  42b4c2:	fs jae 0x42b4bc
  42b4c5:	cli    
  42b4c6:	inc    ebp
  42b4c7:	cmc    
  42b4c8:	jno    0x42b4b6
  42b4ca:	push   esp
  42b4cb:	shl    edx,cl
  42b4cd:	btr    ebp,ebx
  42b4d0:	sti    
  42b4d1:	je     0x42b51e
  42b4d3:	int    0x11
  42b4d5:	aam    0xe3
  42b4d7:	sbb    eax,0xf3345304
  42b4dc:	ror    BYTE PTR [edi],cl
  42b4de:	mov    bl,0xdd
  42b4e0:	xor    eax,0x24323f5d
  42b4e5:	push   0x3f61bb
  42b4ea:	add    BYTE PTR [eax],al
  42b4ec:	add    BYTE PTR [ebx+esi*1],dl
  42b4ef:	fdivr  st,st(2)
  42b4f1:	out    0x61,al
  42b4f3:	adc    DWORD PTR [eax-0xd],eax
  42b4f6:	call   0x953928ba
  42b4fb:	jno    0x42b4d5
  42b4fd:	hlt    
  42b4fe:	lods   eax,DWORD PTR ds:[esi]
  42b4ff:	sti    
  42b500:	je     0x42b4c9
  42b502:	test   BYTE PTR [ecx],dl
  42b504:	pop    esp
  42b505:	add    DWORD PTR [esi],ebx
  42b507:	add    al,0x87
  42b509:	xchg   BYTE PTR ss:[ebx+0x5a],bl
  42b50d:	cmp    BYTE PTR [edi+0x6f303c0],ah
  42b513:	mov    esp,0xd4ec2055
  42b518:	daa    
  42b519:	jecxz  0x42b506
  42b51b:	sti    
  42b51c:	and    esi,0x46
  42b51f:	jmp    0x50ec59ac
  42b524:	add    bl,dh
  42b526:	push   es
  42b527:	(bad)  
  42b528:	(bad)  
  42b529:	sbb    bh,BYTE PTR [ecx]
  42b52b:	jae    0x42b590
  42b52d:	scas   al,BYTE PTR es:[edi]
  42b52e:	inc    edi
  42b52f:	jmp    0x15543d89
  42b534:	adc    DWORD PTR [ebx],esi
  42b536:	pop    es
  42b537:	sbb    dh,BYTE PTR [esi]
  42b539:	daa    
  42b53a:	ret    0x3a5
  42b53d:	mov    esp,DWORD PTR [edi-0xa]
  42b540:	std    
  42b541:	imul   eax,DWORD PTR [edi+0x472e57cb],0xc70c03e9
  42b54b:	call   0x40:0x244a7465
  42b552:	add    BYTE PTR [eax],al
  42b554:	repz jmp 0x42b552
  42b557:	repz test BYTE PTR [esi-0x17],0xec
  42b55c:	xchg   edx,eax
  42b55d:	push   es
  42b55e:	jmp    0x49a15966
  42b563:	shr    ebp,0x6
  42b566:	ret    0x1711
  42b569:	sbb    BYTE PTR [ecx],ch
  42b56b:	add    al,0xe8
  42b56d:	mov    bl,0xd3
  42b56f:	push   edi
  42b570:	cs inc edi
  42b572:	jmp    0x3ceedd7d
  42b577:	rol    ebp,0x6
  42b57a:	(bad)  
  42b57c:	cmp    BYTE PTR [edi],0x50
  42b57f:	aam    0xf1
  42b581:	push   es
  42b582:	jmp    0x83580072
  42b587:	sti    
  42b588:	jo     0x42b551
  42b58a:	hlt    
  42b58b:	imul   ebp,eax,0x3ce3ffb1
  42b591:	les    edi,FWORD PTR [esi]
  42b593:	jmp    0x2e697915
  42b598:	adc    al,0xbf
  42b59a:	mov    ebp,?
  42b59c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b59e:	push   ebx
  42b59f:	sub    al,0x2c
  42b5a1:	pop    es
  42b5a2:	dec    esi
  42b5a3:	pop    esp
  42b5a4:	sti    
  42b5a5:	ds push ecx
  42b5a7:	cdq    
  42b5a8:	cwde   
  42b5a9:	xor    cl,BYTE PTR [edi]
  42b5ab:	aas    
  42b5ac:	cwde   
  42b5ad:	jmp    0x29f652c5
  42b5b2:	add    BYTE PTR [ebx+esi*8+0x2d],bl
  42b5b6:	push   eax
  42b5b7:	add    BYTE PTR es:[eax],al
  42b5ba:	add    BYTE PTR [ebx],al
  42b5bc:	and    ebx,DWORD PTR [eax]
  42b5be:	mov    ebx,0x170f2688
  42b5c3:	js     0x42b62d
  42b5c5:	mov    DWORD PTR [esp+eax*8+0x55e93ec3],edi
  42b5cc:	aaa    
  42b5cd:	(bad)  
  42b5ce:	in     eax,dx
  42b5cf:	std    
  42b5d0:	ficom  WORD PTR [ebx+ebx*8]
  42b5d3:	pop    edx
  42b5d4:	in     eax,dx
  42b5d5:	sub    DWORD PTR [ecx],0xffffffc3
  42b5d8:	and    eax,DWORD PTR [edi+0x3ec3b4f4]
  42b5de:	jmp    0x397dbc4e
  42b5e3:	call   0x326fba9d
  42b5e8:	sub    DWORD PTR [eax],eax
  42b5ea:	(bad)  
  42b5eb:	xchg   esp,eax
  42b5ec:	and    bl,BYTE PTR [eax]
  42b5ee:	ins    BYTE PTR es:[edi],dx
  42b5ef:	sbb    al,0x47
  42b5f1:	push   eax
  42b5f2:	rcr    DWORD PTR [edi],0xfc
  42b5f5:	stc    
  42b5f6:	scas   al,BYTE PTR es:[edi]
  42b5f7:	xchg   edx,eax
  42b5f8:	jg     0x42b616
  42b5fa:	inc    ebp
  42b5fb:	xor    ch,BYTE PTR [ecx]
  42b5fd:	add    BYTE PTR [ecx],dl
  42b5ff:	xchg   edi,eax
  42b600:	ret    
  42b601:	ds jmp 0xfc32c900
  42b607:	xor    BYTE PTR [edi],al
  42b609:	push   edi
  42b60a:	add    BYTE PTR ds:0xd6c25d4d,cl
  42b610:	add    eax,0xc7eabe4e
  42b615:	cmp    DWORD PTR [eax],eax
  42b617:	in     al,0xed
  42b619:	adc    ebp,esp
  42b61b:	enter  0x45,0x6a
  42b61f:	add    BYTE PTR [eax],al
  42b621:	add    dh,al
  42b623:	dec    ebp
  42b624:	div    DWORD PTR ds:0x39c6ee
  42b62a:	mov    ah,0xa0
  42b62c:	push   edx
  42b62d:	lds    ebx,FWORD PTR [ecx+0x5]
  42b630:	call   0xf6326eb0
  42b635:	xor    ecx,edx
  42b637:	sub    al,BYTE PTR [esp-0x6e]
  42b63b:	pop    ecx
  42b63c:	or     eax,0x80966ff
  42b641:	push   eax
  42b642:	or     DWORD PTR [esi+0x41f2e8f5],edi
  42b648:	idiv   bh
  42b64a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b64b:	mov    al,ds:0x599c426
  42b650:	not    DWORD PTR ds:0x40125a
  42b656:	jl     0x42b61b
  42b658:	(bad)  
  42b659:	jmp    DWORD PTR [edi+0x78]
  42b65c:	out    0x83,al
  42b65e:	ss jmp 0x0:0x3a6ec7f
  42b666:	stc    
  42b667:	push   esp
  42b668:	dec    edi
  42b669:	mov    edi,DWORD PTR [edi+0x1dff84fa]
  42b66f:	imul   esi,DWORD PTR [esi],0xe8050a01
  42b675:	out    dx,eax
  42b676:	jmp    0x83ff:0x5a84f5ec
  42b67d:	xor    bl,BYTE PTR [ebx]
  42b67f:	add    eax,0x6d58b00
  42b684:	cmp    eax,0x1
  42b689:	repz (bad) 
  42b68c:	(bad)  
  42b68d:	cld    
  42b68e:	bound  esi,QWORD PTR [ebp+0x66dee4ff]
  42b694:	pusha  
  42b695:	mov    dh,0x1d
  42b697:	add    al,0xfb
  42b699:	inc    BYTE PTR [ecx-0xcbfef]
  42b69f:	test   BYTE PTR [ebx+ebp*1],bh
  42b6a2:	sbb    eax,DWORD PTR [ebp+0x0]
  42b6a5:	repz fadd DWORD PTR [eax-0x1220c74]
  42b6ac:	mov    bh,0xac
  42b6ae:	cmp    DWORD PTR [eax+eax*1],eax
  42b6b1:	or     eax,0xb657f9df
  42b6b6:	popf   
  42b6b7:	dec    BYTE PTR [edi+ebx*1+0x68b81ffa]
  42b6be:	fdivp  st(6),st
  42b6c0:	call   FWORD PTR [ebx+0x7cfb65d6]
  42b6c6:	jne    0x42b686
  42b6c8:	dec    edi
  42b6c9:	mov    eax,DWORD PTR [ecx-0x8]
  42b6cc:	cli    
  42b6cd:	ins    BYTE PTR es:[edi],dx
  42b6ce:	addr16 inc eax
  42b6d0:	and    al,0xf7
  42b6d2:	pop    edx
  42b6d3:	les    esi,FWORD PTR [ebx-0x30]
  42b6d6:	pop    edx
  42b6d7:	jo     0x42b6fd
  42b6d9:	pop    ss
  42b6da:	ss xchg edi,eax
  42b6dc:	dec    DWORD PTR [esi+ebx*8-0x1a]
  42b6e0:	add    eax,0x8cf7e0da
  42b6e5:	mov    DWORD PTR [ecx],0xde59b814
  42b6eb:	(bad)  
  42b6ec:	inc    DWORD PTR [eax]
  42b6ee:	add    BYTE PTR [eax],al
  42b6f0:	sbb    edi,DWORD PTR [edx+0x7f24fb66]
  42b6f6:	and    al,ah
  42b6f8:	mov    al,0xdd
  42b6fa:	jns    0x42b6bb
  42b6fc:	lahf   
  42b6fd:	fisttp DWORD PTR [ebx+0x2d30cef]
  42b703:	btr    DWORD PTR [esi],eax
  42b706:	jmp    0x7574af5e
  42b70b:	mov    bl,0xb5
  42b70d:	push   es
  42b70e:	fs aas 
  42b710:	pop    ss
  42b711:	inc    ebx
  42b712:	xor    edx,DWORD PTR [esp+ebx*4+0x2]
  42b716:	call   0x3cbcaa1e
  42b71b:	pop    ds
  42b71c:	imul   eax,DWORD PTR ds:0x76db03e9,0x14
  42b723:	cli    
  42b724:	leave  
  42b725:	jnp    0x42b703
  42b727:	pop    ds
  42b728:	fild   WORD PTR [ebx-0x4093ecdc]
  42b72e:	mov    eax,0x4a73ddeb
  42b733:	clc    
  42b734:	ins    DWORD PTR es:[edi],dx
  42b735:	add    BYTE PTR [ebx+0x6dff2cf8],bl
  42b73b:	jbe    0x42b728
  42b73d:	pop    esi
  42b73e:	leave  
  42b73f:	mov    esi,0xe2a06cd
  42b744:	adc    DWORD PTR [ecx+ebp*4],0x3
  42b748:	xchg   esp,eax
  42b749:	jne    0x42b727
  42b74b:	add    esi,edx
  42b74d:	push   es
  42b74e:	jmp    0x89c68cc1
  42b753:	or     eax,DWORD PTR [eax]
  42b755:	add    BYTE PTR [eax],al
  42b757:	cld    
  42b758:	jb     0x42b6e7
  42b75a:	xchg   BYTE PTR [eax+0x58538122],dh
  42b760:	adc    DWORD PTR [ecx+0xf],edi
  42b763:	mov    bl,0x6
  42b765:	fs ret 
  42b767:	rcl    BYTE PTR [ecx+0x4f],0x4
  42b76b:	aad    0xfd
  42b76d:	imul   eax,DWORD PTR [eax+0xf],0xf
  42b771:	cmp    DWORD PTR [ecx+0x4652270],ecx
  42b777:	repz push es
  42b779:	sbb    DWORD PTR [edi],eax
  42b77b:	pop    eax
  42b77c:	aas    
  42b77d:	jmp    0x42b79f
  42b77f:	sbb    BYTE PTR [esi],al
  42b781:	add    cl,ch
  42b783:	lock push esi
  42b785:	sti    
  42b786:	ss imul ebx
  42b789:	adc    al,0x25
  42b78b:	jecxz  0x42b7d3
  42b78d:	add    BYTE PTR [edi+ebp*1+0x6d],ah
  42b791:	sub    eax,0x7507ef6a
  42b796:	fdiv   QWORD PTR [ecx+0x61]
  42b799:	or     cl,dh
  42b79b:	arpl   WORD PTR [eax],dx
  42b79d:	push   0x266bc1
  42b7a2:	cmp    ch,0x61
  42b7a5:	or     BYTE PTR [edi],al
  42b7a7:	jo     0x42b80b
  42b7a9:	and    al,0xf9
  42b7ab:	adc    BYTE PTR [ebp+0x11],dh
  42b7ae:	sbb    ah,BYTE PTR [esi-0x135a7698]
  42b7b4:	test   BYTE PTR [ebp+eiz*4+0x514ff704],0x0
  42b7bc:	add    BYTE PTR [eax],al
  42b7be:	or     ah,ah
  42b7c0:	cli    
  42b7c1:	ds and al,0xe2
  42b7c4:	adc    al,0x39
  42b7c6:	jecxz  0x42b80e
  42b7c8:	add    BYTE PTR [esi+0xc873e1e],cl
  42b7ce:	sbb    ah,BYTE PTR [ebp-0x71dc16fd]
  42b7d4:	jmp    0x42b795
  42b7d6:	jns    0x42b833
  42b7d8:	or     BYTE PTR [esi+0x514e1b6],dh
  42b7de:	add    eax,DWORD PTR [edi+0x0]
  42b7e1:	jb     0x42b83a
  42b7e3:	(bad)  
  42b7e4:	jl     0x42b7c7
  42b7e6:	pop    eax
  42b7e7:	xchg   edx,eax
  42b7e8:	sbb    ch,bh
  42b7ea:	cmp    eax,0x3c5cbf8a
  42b7ef:	(bad)  
  42b7f0:	ret    0x6bd0
  42b7f3:	out    0xfa,al
  42b7f5:	jmp    0x654d996d
  42b7fa:	jb     0x42b7e2
  42b7fc:	cli    
  42b7fd:	add    BYTE PTR [edx],cl
  42b7ff:	mov    eax,edi
  42b801:	add    esi,ebx
  42b803:	adc    BYTE PTR [ebx-0x2],bh
  42b806:	pop    ss
  42b807:	jbe    0x42b80e
  42b809:	adc    DWORD PTR [ebp+eiz*8+0x73],0x73
  42b80e:	mov    ecx,0x3a15f755
  42b813:	sti    
  42b814:	aas    
  42b815:	add    BYTE PTR [ecx-0x3e],dl
  42b818:	sbb    ebx,0xfffffffe
  42b81b:	add    si,0x22
  42b81f:	push   edi
  42b820:	sbb    eax,0x83
  42b825:	and    bl,0x6e
  42b828:	or     DWORD PTR [ecx-0xe],ebx
  42b82b:	add    BYTE PTR [ebp-0x5e],dh
  42b82e:	nop
  42b82f:	icebp  
  42b830:	jmp    0x42b7ef
  42b832:	cmp    BYTE PTR [edx+0x1],ah
  42b835:	dec    ecx
  42b836:	shl    ch,cl
  42b838:	call   0x3908cf
  42b83d:	adc    edx,esp
  42b83f:	loope  0x42b849
  42b841:	jns    0x42b8b2
  42b843:	add    bl,ch
  42b845:	and    eax,0x1f087b91
  42b84a:	(bad)  [esi+0x2d]
  42b84d:	adc    al,0x6a
  42b84f:	lds    eax,FWORD PTR [ebx-0x76]
  42b852:	push   ebx
  42b853:	not    DWORD PTR ds:0x3ff7e6
  42b859:	jb     0x42b878
  42b85b:	lea    eax,[eax+0x5a]
  42b85e:	icebp  
  42b85f:	enter  0xf5fc,0xdc
  42b863:	dec    ebp
  42b864:	call   0x38968b
  42b869:	ins    BYTE PTR es:[edi],dx
  42b86a:	fcom   QWORD PTR [ebx]
  42b86c:	lock sub BYTE PTR [ecx+0x0],cl
  42b870:	cmp    edx,DWORD PTR [ecx+0x56]
  42b873:	(bad)  
  42b874:	push   esi
  42b875:	and    dl,BYTE PTR [ecx+0x10]
  42b878:	(bad)  
  42b879:	repz mov esp,0xd4fb74f4
  42b87f:	or     dl,ah
  42b881:	add    dh,BYTE PTR [eax]
  42b883:	add    al,0x57
  42b885:	push   0x5b0c2a
  42b88a:	add    BYTE PTR [eax],al
  42b88c:	lods   eax,DWORD PTR ds:[esi]
  42b88d:	cli    
  42b88e:	mov    ebp,0x3a68f303
  42b893:	add    al,0x76
  42b895:	scas   eax,DWORD PTR es:[edi]
  42b896:	outs   dx,DWORD PTR ds:[esi]
  42b897:	pop    es
  42b898:	mov    ds:0x3f40a84,eax
  42b89d:	cs add al,0x7f
  42b8a0:	dec    ebp
  42b8a1:	jmp    0x73c4:0x72f586fe
  42b8a8:	jmp    0x9357adaa
  42b8ad:	sar    BYTE PTR [esi],0x0
  42b8b0:	jo     0x42b87e
  42b8b2:	(bad)  
  42b8b3:	mov    esi,0xffffde4b
  42b8b8:	repz mov ch,0x96
  42b8bb:	dec    edi
  42b8bc:	xor    dh,ch
  42b8be:	out    0xb1,al
  42b8c0:	fs out dx,al
  42b8c2:	(bad)  
  42b8c3:	cs pushf 
  42b8c5:	push   edi
  42b8c6:	jae    0x42b8a8
  42b8c8:	push   0xffffffa3
  42b8ca:	shl    BYTE PTR [ebp-0xf],cl
  42b8cd:	test   BYTE PTR [ebx-0x73],cl
  42b8d0:	cs dec esi
  42b8d2:	push   esp
  42b8d3:	sti    
  42b8d4:	push   es
  42b8d5:	(bad)  
  42b8d7:	xor    al,0x77
  42b8d9:	inc    eax
  42b8da:	inc    ecx
  42b8db:	add    cl,bl
  42b8dd:	cld    
  42b8de:	mov    BYTE PTR [edi+ecx*4],dh
  42b8e1:	loopne 0x42b921
  42b8e3:	add    BYTE PTR [esp+eax*1+0x7b],bl
  42b8e7:	mov    edi,0xc030ecde
  42b8ec:	pop    edx
  42b8ed:	or     BYTE PTR [eax+eax*1],al
  42b8f0:	add    BYTE PTR [eax],al
  42b8f2:	add    bl,dh
  42b8f4:	xchg   DWORD PTR [eax],eax
  42b8f6:	push   ebx
  42b8f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b8f8:	push   es
  42b8f9:	je     0x42b939
  42b8fb:	pop    ss
  42b8fc:	aaa    
  42b8fd:	fisubr DWORD PTR [esi-0x1]
  42b900:	jecxz  0x42b91d
  42b902:	add    al,0x54
  42b904:	dec    eax
  42b905:	jmp    0x9b26d173
  42b90a:	jle    0x42b960
  42b90c:	pop    ebx
  42b90d:	leave  
  42b90e:	imul   eax,edi,0xe
  42b911:	jmp    0xaa514619
  42b916:	adc    esi,DWORD PTR cs:[eax-0x607fbdb]
  42b91d:	in     al,0x10
  42b91f:	xor    eax,DWORD PTR [edi]
  42b921:	pop    esi
  42b922:	fstp   TBYTE PTR [ebx+0x41]
  42b925:	mov    cl,0x38
  42b927:	mov    eax,0xf269ad5a
  42b92c:	sahf   
  42b92d:	jns    0x42b932
  42b92f:	repz push es
  42b931:	xor    DWORD PTR [edx-0x75],0xbd8b69e3
  42b938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b939:	sbb    BYTE PTR [ebx+esi*8],cl
  42b93c:	push   es
  42b93d:	jo     0x42b9b7
  42b93f:	test   ebx,0x70607a5
  42b945:	jmp    0xd98a274d
  42b94a:	push   ebx
  42b94b:	mov    esi,DWORD PTR [ebx+0x7f]
  42b94e:	cmc    
  42b94f:	mov    DWORD PTR [edi+0x477be3ab],ecx
  42b955:	in     eax,dx
  42b956:	mov    BYTE PTR [eax],al
  42b958:	add    BYTE PTR [eax],al
  42b95a:	aaa    
  42b95b:	ret    
  42b95c:	outs   dx,DWORD PTR ds:[esi]
  42b95d:	inc    eax
  42b95e:	xor    edx,DWORD PTR [edx-0x1c971ead]
  42b964:	adc    ebx,ebp
  42b966:	sbb    bh,BYTE PTR [edx]
  42b968:	or     dh,ah
  42b96a:	lods   al,BYTE PTR ds:[esi]
  42b96b:	out    dx,al
  42b96c:	xor    DWORD PTR [ebp+0x58],ecx
  42b96f:	jecxz  0x42b9b0
  42b971:	in     eax,0xf3
  42b973:	push   es
  42b974:	add    cl,ch
  42b976:	jnp    0x42b93d
  42b978:	shr    ecx,0xf0
  42b97b:	inc    esi
  42b97c:	dec    ecx
  42b97d:	pop    esp
  42b97e:	inc    esi
  42b97f:	enter  0xb984,0x21
  42b983:	loopne 0x42b97f
  42b985:	in     eax,dx
  42b986:	lock push es
  42b988:	add    BYTE PTR [edx+0x38],ah
  42b98b:	mov    esi,gs
  42b98d:	je     0x42b9f9
  42b98f:	sar    ecx,cl
  42b991:	mov    esi,0x3fb4eb00
  42b996:	add    al,ah
  42b998:	shl    DWORD PTR [eax+esi*8],0x5
  42b99c:	jg     0x42b9aa
  42b99e:	add    esp,ebx
  42b9a0:	test   DWORD PTR [edi+ebp*8],edx
  42b9a3:	fnsave [ecx-0x1f]
  42b9a6:	inc    esi
  42b9a7:	pop    es
  42b9a8:	sti    
  42b9a9:	pop    ss
  42b9aa:	jmp    0x42b989
  42b9ac:	adc    al,0xbd
  42b9ae:	cli    
  42b9af:	inc    esi
  42b9b0:	add    BYTE PTR [edx-0x45],ch
  42b9b3:	push   cs
  42b9b4:	push   ebx
  42b9b5:	sbb    al,al
  42b9b7:	pop    eax
  42b9b8:	add    al,0x6e
  42b9ba:	ficom  DWORD PTR [esi]
  42b9bc:	adc    ch,BYTE PTR [ecx-0x10000000]
  42b9c2:	popa   
  42b9c3:	(bad)  
  42b9c4:	in     eax,dx
  42b9c5:	jne    0x42ba1a
  42b9c7:	cld    
  42b9c8:	push   esi
  42b9c9:	les    edx,FWORD PTR [edi+ebp*1]
  42b9cc:	sub    DWORD PTR [edi],esi
  42b9ce:	mov    ds:0xc8b8cc86,al
  42b9d3:	inc    esp
  42b9d4:	out    dx,al
  42b9d5:	lock popa 
  42b9d7:	dec    ebp
  42b9d8:	xor    eax,0x115c8980
  42b9dd:	and    al,0xef
  42b9df:	jmp    0xf1a4:0x85dd82f7
  42b9e6:	out    dx,al
  42b9e7:	rcl    DWORD PTR [edi-0x11],cl
  42b9ea:	push   es
  42b9eb:	mov    esi,0x873bf0e1
  42b9f0:	add    dh,bh
  42b9f2:	mov    esp,esi
  42b9f4:	mov    BYTE PTR [edi+0x6],dl
  42b9f7:	add    BYTE PTR [esi+0x65],dl
  42b9fa:	xchg   DWORD PTR [ebx-0xa2abf88],edi
  42ba00:	call   0x38afef
  42ba05:	mov    eax,ds:0x3dfa929e
  42ba0a:	aad    0x62
  42ba0c:	mov    BYTE PTR [edi],dl
  42ba0e:	push   es
  42ba0f:	add    BYTE PTR [ebx+0x50004445],cl
  42ba15:	dec    ebp
  42ba16:	push   DWORD PTR [ebx]
  42ba18:	push   ss
  42ba19:	fimul  DWORD PTR [edx]
  42ba1b:	jnp    0x42b9e1
  42ba1d:	push   ds
  42ba1e:	(bad)  
  42ba1f:	shl    DWORD PTR [eax+ecx*1+0x63],1
  42ba23:	sub    dh,BYTE PTR [ebx]
  42ba25:	add    BYTE PTR [eax],al
  42ba27:	add    BYTE PTR [edx-0x32a00f72],bl
  42ba2d:	jns    0x42b9e9
  42ba2f:	pop    esi
  42ba30:	xchg   ebx,eax
  42ba31:	enter  0x2462,0xcb
  42ba35:	add    eax,0x36426800
  42ba3a:	cmp    eax,DWORD PTR [eax]
  42ba3c:	jb     0x42ba8a
  42ba3e:	mov    dh,0x0
  42ba40:	retf   0xd318
  42ba43:	mov    DWORD PTR [edi-0x19ba741b],ebp
  42ba49:	xor    eax,0xfc3a15f7
  42ba4e:	aas    
  42ba4f:	add    BYTE PTR [edx-0x2c],bl
  42ba52:	adc    ecx,DWORD PTR [ecx+edi*4+0x45]
  42ba56:	add    BYTE PTR [ecx-0x3cce2ea9],cl
  42ba5c:	lea    ecx,[ecx+0x58a010a]
  42ba62:	cmp    DWORD PTR [ebp-0x4a],ebx
  42ba65:	push   edi
  42ba66:	cmp    eax,0x81d1978b
  42ba6b:	xor    al,0xf3
  42ba6d:	push   edi
  42ba6e:	mov    cl,dh
  42ba70:	out    0xc7,eax
  42ba72:	pop    esp
  42ba73:	dec    ah
  42ba75:	scas   eax,DWORD PTR es:[edi]
  42ba76:	jg     0x42bab7
  42ba78:	repz jns 0x42ba68
  42ba7b:	adc    al,0xc3
  42ba7d:	mov    esp,0x2f76003e
  42ba82:	js     0x42ba96
  42ba84:	and    WORD PTR [eax],cx
  42ba87:	lea    ebp,[esi+0x30dbc7]
  42ba8d:	add    BYTE PTR [eax],al
  42ba8f:	mov    al,ds:0x3384f0b9
  42ba94:	cmp    cl,BYTE PTR [ecx]
  42ba96:	xchg   DWORD PTR [esi-0x79407d59],ebp
  42ba9c:	xlat   BYTE PTR ds:[ebx]
  42ba9d:	inc    ebx
  42ba9e:	aaa    
  42ba9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42baa0:	sub    DWORD PTR [edi-0x38],0x8
  42baa4:	in     al,dx
  42baa5:	jne    0x42baeb
  42baa7:	adc    ebp,DWORD PTR [eax-0x2413238e]
  42baad:	xchg   BYTE PTR ds:0x7c83ee33,cl
  42bab3:	shr    esi,cl
  42bab5:	inc    DWORD PTR [ebx-0x11168]
  42babb:	jo     0x42baa0
  42babd:	fdivp  st(2),st
  42babf:	hlt    
  42bac0:	jno    0x42ba71
  42bac2:	(bad)  
  42bac3:	mov    esp,0xe4ffb0ee
  42bac8:	in     eax,dx
  42bac9:	(bad)  
  42baca:	push   ecx
  42bacb:	fwait
  42bacc:	xor    al,0xfb
  42bace:	stc    
  42bacf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bad0:	gs in  al,dx
  42bad2:	mov    BYTE PTR [esi],bl
  42bad4:	push   ss
  42bad5:	cmp    edx,0xffffffe4
  42bad8:	jno    0x42ba61
  42bada:	dec    DWORD PTR [esi+ebp*8-0x3c0c99a8]
  42bae1:	(bad)  
  42bae2:	div    DWORD PTR gs:[ebx+edx*2-0x5]
  42bae7:	inc    BYTE PTR [esi]
  42bae9:	or     ecx,esi
  42baeb:	pop    es
  42baec:	xchg   edi,esi
  42baee:	inc    ebx
  42baef:	repz lea ebp,[ebx+0xcf]
  42baf6:	ja     0x42babf
  42baf8:	xchg   esp,eax
  42baf9:	inc    ebp
  42bafa:	aam    0x69
  42bafc:	add    eax,0x9236a104
  42bb01:	lock fist WORD PTR [esi]
  42bb04:	fild   DWORD PTR [ebx-0xd]
  42bb07:	and    DWORD PTR [eax+eax*1],0x6a
  42bb0b:	xor    BYTE PTR [ecx+esi*8-0x26921fd7],0x6d
  42bb13:	shl    BYTE PTR [ebx-0x7a],1
  42bb16:	sub    cl,ah
  42bb18:	leave  
  42bb19:	lock or al,0x19
  42bb1c:	cmp    esi,ecx
  42bb1e:	or     DWORD PTR [ebx+ebp*1-0x1d13f610],eax
  42bb25:	xor    al,0x33
  42bb27:	inc    edi
  42bb28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb29:	jl     0x42baba
  42bb2b:	out    dx,al
  42bb2c:	gs ds out dx,eax
  42bb2f:	fild   QWORD PTR [ebp+0x6e]
  42bb32:	retf   
  42bb33:	fistp  WORD PTR [ebx]
  42bb35:	rcr    cl,1
  42bb37:	stc    
  42bb38:	xchg   esp,eax
  42bb39:	adc    esi,DWORD PTR [ebx]
  42bb3b:	pop    es
  42bb3c:	inc    ecx
  42bb3d:	xor    edi,ebx
  42bb3f:	push   es
  42bb40:	jmp    0xfd4deb6f
  42bb45:	(bad)  
  42bb46:	and    DWORD PTR [ebx+ecx*1-0x19c73304],ecx
  42bb4d:	add    esi,ebx
  42bb4f:	mov    WORD PTR [eax-0x24],es
  42bb52:	hlt    
  42bb53:	ss mov edx,0x4a0f27f0
  42bb59:	push   ss
  42bb5a:	add    BYTE PTR [eax],al
  42bb5c:	add    bl,ah
  42bb5e:	clc    
  42bb5f:	test   al,0x3
  42bb61:	or     al,0xcb
  42bb63:	in     al,dx
  42bb64:	mov    ah,0xf3
  42bb66:	aaa    
  42bb67:	add    BYTE PTR [ecx+0x5],al
  42bb6a:	adc    bh,dl
  42bb6c:	cs ins BYTE PTR es:[edi],dx
  42bb6e:	mov    eax,0x5a63f473
  42bb73:	loopne 0x42bb93
  42bb75:	std    
  42bb76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb77:	or     eax,0x96f0a9
  42bb7c:	add    ch,dh
  42bb7e:	xor    al,al
  42bb80:	adc    DWORD PTR [esi],ecx
  42bb82:	mov    ds:0x32ee8ff,al
  42bb87:	add    BYTE PTR [edi+0x6bc0ec3],bl
  42bb8d:	xor    al,0x6a
  42bb8f:	iret   
  42bb90:	push   cs
  42bb91:	and    eax,0x51393ae3
  42bb96:	mov    al,0xb
  42bb98:	mov    cl,0xa2
  42bb9a:	xchg   esi,eax
  42bb9b:	push   ss
  42bb9c:	cli    
  42bb9d:	test   DWORD PTR [ecx],eax
  42bb9f:	shl    DWORD PTR [eax],cl
  42bba1:	or     eax,edi
  42bba3:	mov    edi,0x3775cb66
  42bba8:	clc    
  42bba9:	les    edx,FWORD PTR [ecx]
  42bbab:	(bad)  
  42bbac:	jmp    0xe3e3:0x27bae2fc
  42bbb3:	inc    ebp
  42bbb4:	in     al,0x5d
  42bbb6:	jbe    0x42bbe6
  42bbb8:	div    DWORD PTR [edx-0x44]
  42bbbb:	mov    ebx,0x4bdfc70d
  42bbc0:	lea    eax,[eax]
  42bbc2:	add    BYTE PTR [eax],al
  42bbc4:	pop    esp
  42bbc5:	jle    0x42bbc5
  42bbc7:	or     si,WORD PTR [edi+0x37]
  42bbcb:	sbb    bh,BYTE PTR [eax+0x7cd8e6d7]
  42bbd1:	jmp    0xd6fb:0x6764adb3
  42bbd8:	call   0x54eb:0x7755c369
  42bbdf:	dec    ebp
  42bbe0:	dec    ebx
  42bbe1:	cmc    
  42bbe2:	and    eax,0x9ee5a900
  42bbe7:	aas    
  42bbe8:	add    cl,BYTE PTR [edx]
  42bbea:	imul   esp,DWORD PTR [ebx-0x13],0x5abd069e
  42bbf1:	loope  0x42bc04
  42bbf3:	push   ebp
  42bbf4:	ins    DWORD PTR es:[edi],dx
  42bbf5:	imul   esp,DWORD PTR [eax+0x1b],0x1f
  42bbf9:	loopne 0x42bbd9
  42bbfb:	aas    
  42bbfc:	cdq    
  42bbfd:	lds    esi,FWORD PTR ds:0xba82b46c
  42bc03:	sbb    ebx,edx
  42bc05:	push   ss
  42bc06:	adc    edx,edi
  42bc08:	cmp    BYTE PTR [ecx+0x5f07c014],bl
  42bc0e:	dec    eax
  42bc0f:	jl     0x42bc5a
  42bc11:	push   ebx
  42bc12:	and    al,0x41
  42bc14:	icebp  
  42bc15:	imul   esp,DWORD PTR [eax-0x53510ee5],0xffffffc0
  42bc1c:	mov    ebp,0xfdd7f6b2
  42bc21:	rcr    esi,cl
  42bc23:	aas    
  42bc24:	pushf  
  42bc25:	adc    eax,0xaae3
  42bc2a:	add    BYTE PTR [ecx-0x64],bl
  42bc2d:	sbb    eax,0xa86d104a
  42bc32:	sbb    ebx,DWORD PTR [ecx]
  42bc34:	lds    ebx,FWORD PTR [esi]
  42bc36:	pop    ecx
  42bc37:	pusha  
  42bc38:	fbld   TBYTE PTR [edi+0x7b]
  42bc3b:	lods   eax,DWORD PTR ds:[esi]
  42bc3c:	xchg   ebp,eax
  42bc3d:	scas   al,BYTE PTR es:[edi]
  42bc3e:	xlat   BYTE PTR ds:[ebx]
  42bc3f:	adc    eax,0xf3c011a4
  42bc44:	fist   WORD PTR [ecx]
  42bc46:	dec    ebx
  42bc47:	mov    ebp,0xad7b67e9
  42bc4c:	lods   eax,DWORD PTR ds:[esi]
  42bc4d:	scas   al,BYTE PTR es:[edi]
  42bc4e:	xlat   BYTE PTR ds:[ebx]
  42bc4f:	sub    al,0x28
  42bc51:	adc    eax,eax
  42bc53:	dec    ebp
  42bc54:	push   ss
  42bc55:	xchg   ecx,eax
  42bc56:	sub    edx,DWORD PTR [eax+0xf]
  42bc59:	in     eax,0x3f
  42bc5b:	cdq    
  42bc5c:	push   0xffffffa0
  42bc5e:	sbb    esi,ebx
  42bc60:	mov    al,0x6a
  42bc62:	cld    
  42bc63:	adc    al,0xaa
  42bc65:	sbb    DWORD PTR [ecx],0xffffffa5
  42bc68:	lods   al,BYTE PTR ds:[esi]
  42bc69:	cmc    
  42bc6a:	push   ss
  42bc6b:	mov    bl,0x6d
  42bc6d:	scas   eax,DWORD PTR es:[edi]
  42bc6e:	mov    edi,0xba080cc
  42bc73:	or     BYTE PTR [eax+edi*8+0x7f30a816],dl
  42bc7a:	icebp  
  42bc7b:	mov    eax,ds:0xccf3cea4
  42bc80:	jno    0x42bcb0
  42bc82:	cmp    BYTE PTR ds:0xdaaef2f1,dl
  42bc88:	clc    
  42bc89:	mov    edx,DWORD PTR [ebx+esi*1-0x25]
  42bc8d:	aaa    
  42bc8e:	push   es
  42bc8f:	add    BYTE PTR [eax],al
  42bc91:	add    ch,bh
  42bc93:	lock repnz lods eax,DWORD PTR ds:[esi]
  42bc96:	and    DWORD PTR [esi+ecx*8+0x50389c9f],0xf7f0a754
  42bca1:	lock in al,dx
  42bca3:	fidiv  DWORD PTR [edx-0x145ba81d]
  42bca9:	push   0x6bb80c88
  42bcae:	int3   
  42bcaf:	xor    BYTE PTR [esi-0xc9fc970],ah
  42bcb5:	mov    dh,0x92
  42bcb7:	imul   DWORD PTR [ecx+eax*1+0x51]
  42bcbb:	mov    al,0x7
  42bcbd:	add    BYTE PTR [esi],bh
  42bcbf:	pop    ecx
  42bcc0:	loopne 0x42bc42
  42bcc2:	iret   
  42bcc3:	inc    edx
  42bcc4:	add    al,0x0
  42bcc6:	repz and BYTE PTR [edx+0x53],dl
  42bcca:	pop    ecx
  42bccb:	sar    BYTE PTR [ecx+0x44],cl
  42bcce:	stos   DWORD PTR es:[edi],eax
  42bccf:	test   BYTE PTR [ebx-0x54],0x30
  42bcd3:	out    dx,al
  42bcd4:	das    
  42bcd5:	xlat   BYTE PTR ds:[ebx]
  42bcd6:	jne    0x42bcc6
  42bcd8:	push   cs
  42bcd9:	add    bl,dh
  42bcdb:	push   es
  42bcdc:	mov    ecx,0x6fdf477a
  42bce1:	ja     0x42bc82
  42bce3:	fdiv   st(3),st
  42bce5:	xor    eax,DWORD PTR [ecx]
  42bce7:	inc    edi
  42bce8:	jmp    0x964e6d6d
  42bced:	push   ebp
  42bcee:	xor    al,0x6f
  42bcf0:	in     eax,0x3
  42bcf2:	repz push cs
  42bcf4:	fs inc edi
  42bcf6:	add    BYTE PTR [eax],al
  42bcf8:	add    BYTE PTR [ebx+0x31ecbf37],bl
  42bcfe:	inc    edx
  42bcff:	or     DWORD PTR [ebx],eax
  42bd01:	repz push es
  42bd03:	jmp    0xf921c4f4
  42bd08:	inc    ebx
  42bd09:	repz (bad) 
  42bd0b:	adc    BYTE PTR [ebx-0x31],bh
  42bd0e:	sar    BYTE PTR [ebp-0x6d003f18],cl
  42bd14:	push   eax
  42bd15:	lods   al,BYTE PTR ds:[esi]
  42bd16:	jo     0x42bd03
  42bd18:	push   esp
  42bd19:	cmp    dl,dh
  42bd1b:	push   0x7006b313
  42bd20:	inc    esi
  42bd21:	sub    esp,DWORD PTR [eax]
  42bd23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd24:	jbe    0x42bd20
  42bd26:	mov    DWORD PTR [ebx-0x8],ebx
  42bd29:	or     al,0x8a
  42bd2b:	int    0xec
  42bd2d:	or     DWORD PTR [edx-0x7df307c5],ecx
  42bd33:	mov    ebp,0xa918f9ec
  42bd38:	dec    esp
  42bd39:	cdq    
  42bd3a:	aas    
  42bd3b:	mov    al,ds:0x6106f4c1
  42bd40:	cmp    esi,DWORD PTR [esi+0x46]
  42bd43:	jmp    0x1c4dfb73
  42bd48:	pop    es
  42bd49:	fwait
  42bd4a:	dec    esi
  42bd4b:	adc    al,0x44
  42bd4d:	repz sbb bl,BYTE PTR ss:[ebx+eiz*1-0x76]
  42bd53:	sub    BYTE PTR [esp+ebp*1],al
  42bd56:	mov    bh,bh
  42bd58:	imul   ebx,DWORD PTR [eax+eiz*8],0xfffffffa
  42bd5c:	outs   dx,BYTE PTR ds:[esi]
  42bd5d:	add    BYTE PTR [eax],al
  42bd5f:	add    BYTE PTR [eax+0x65],al
  42bd62:	sbb    al,al
  42bd64:	enter  0x3eb8,0x5f
  42bd68:	(bad)  
  42bd69:	pop    esp
  42bd6a:	(bad)  
  42bd6b:	std    
  42bd6c:	ins    DWORD PTR es:[edi],dx
  42bd6d:	fwait
  42bd6e:	je     0x42bd9b
  42bd70:	sub    al,BYTE PTR [edi-0x73]
  42bd73:	lods   al,BYTE PTR ds:[esi]
  42bd74:	pop    esp
  42bd75:	dec    esp
  42bd76:	push   eax
  42bd77:	push   ecx
  42bd78:	ja     0x42bddb
  42bd7a:	add    cl,ch
  42bd7c:	ret    
  42bd7d:	(bad)  
  42bd7e:	mov    BYTE PTR [esp+edx*2-0x74ee8376],cl
  42bd85:	pop    esp
  42bd86:	(bad)  
  42bd87:	in     eax,dx
  42bd88:	jnp    0x42bd2e
  42bd8a:	mov    WORD PTR [esp+ecx*2+0x60a48d4b],gs
  42bd91:	dec    ebx
  42bd92:	dec    edi
  42bd93:	call   0x4ba3:0xe86602aa
  42bd9a:	lea    ebp,[esp+ebx*4-0x21]
  42bd9e:	cli    
  42bd9f:	out    dx,al
  42bda0:	rcr    edi,0x74
  42bda3:	icebp  
  42bda4:	xor    DWORD PTR [edx-0x70],eax
  42bda7:	and    eax,0xd60006f7
  42bdac:	add    ch,BYTE PTR [edi]
  42bdae:	adc    DWORD PTR [ecx],ebp
  42bdb0:	test   DWORD PTR [ecx-0x75f7c341],0xd91fb574
  42bdba:	cmc    
  42bdbb:	mov    dh,0x8
  42bdbd:	cmp    DWORD PTR [esi-0x521a040],0xa6
  42bdc7:	fcom   DWORD PTR [ebx-0x1c]
  42bdca:	ins    BYTE PTR es:[edi],dx
  42bdcb:	xor    dl,bl
  42bdcd:	dec    edi
  42bdce:	cmp    ebp,0x738efad1
  42bdd4:	call   0xe873:0xedaa0073
  42bddb:	cmp    eax,0xa11d7f8
  42bde0:	add    edi,DWORD PTR [ebx-0x8]
  42bde3:	sbb    eax,0x9bb2fa57
  42bde8:	in     eax,dx
  42bde9:	jae    0x42bdcf
  42bdeb:	and    DWORD PTR [eax],ebx
  42bded:	mov    al,ds:0xf7064a12
  42bdf2:	(bad)  
  42bdf3:	cmp    eax,0xe4ffe858
  42bdf8:	mov    ecx,0xbf0155b5
  42bdfd:	or     DWORD PTR [ebp-0x6e],0x580ce683
  42be04:	push   es
  42be05:	add    BYTE PTR [ebx-0x5c],dl
  42be08:	xor    eax,0xd839c02b
  42be0d:	loop   0x42be47
  42be0f:	xchg   DWORD PTR [esi],eax
  42be11:	add    BYTE PTR [ebp-0x8dda8e6],al
  42be17:	call   0x73f6:0x4afffada
  42be1e:	adc    ecx,edx
  42be20:	fidivr DWORD PTR [ecx-0x7]
  42be23:	aas    
  42be24:	push   esp
  42be25:	add    al,BYTE PTR [ebp+0x3b046a44]
  42be2b:	add    BYTE PTR [eax],al
  42be2d:	add    BYTE PTR [eax+ebx*2],cl
  42be30:	cli    
  42be31:	mov    bh,BYTE PTR [edx]
  42be33:	pop    ecx
  42be34:	dec    esp
  42be35:	or     BYTE PTR [edx],dh
  42be37:	hlt    
  42be38:	inc    esp
  42be39:	add    BYTE PTR [edx],bl
  42be3b:	xchg   DWORD PTR [edx-0xf78af8b],edi
  42be41:	jne    0x42be49
  42be43:	adc    al,0xc0
  42be45:	jmp    0x42be6e
  42be47:	cmp    DWORD PTR [ebx+0xc],0xffffffda
  42be4b:	push   esi
  42be4c:	add    eax,0x740ebc83
  42be51:	icebp  
  42be52:	repz jo 0x42bec4
  42be55:	or     BYTE PTR [eax+0x9],bh
  42be58:	clc    
  42be59:	out    0x22,eax
  42be5b:	sub    eax,DWORD PTR [eax+eax*1]
  42be5e:	push   0x3fd67fa7
  42be63:	nop
  42be64:	ja     0x42bdea
  42be66:	stos   DWORD PTR es:[edi],eax
  42be67:	push   0xffffffe6
  42be69:	cli    
  42be6a:	inc    ebx
  42be6b:	mov    eax,0xf0338d5e
  42be70:	rol    BYTE PTR [esp+eiz*8-0x11],0xd6
  42be75:	or     bh,dl
  42be77:	out    dx,eax
  42be78:	inc    BYTE PTR [ebx+0x532d9bb3]
  42be7e:	and    BYTE PTR [ebx-0x80],ch
  42be81:	div    DWORD PTR [esi+0x10]
  42be84:	out    0x4f,al
  42be86:	pop    ebx
  42be87:	repnz std 
  42be89:	push   ebx
  42be8b:	imul   edi,DWORD PTR [edi+0x296d1673],0x1d
  42be92:	add    BYTE PTR [eax],al
  42be94:	add    ah,ah
  42be96:	pop    ebx
  42be97:	mov    edi,0x4f2f850a
  42be9c:	lea    ebp,[esi+0x7]
  42be9f:	call   0xd6c1fb9e
  42bea4:	sub    BYTE PTR ds:0xb687e8d0,dh
  42beaa:	mov    eax,0xe22b8477
  42beaf:	call   0x17fa82ae
  42beb4:	jb     0x42becb
  42beb6:	mov    al,0x54
  42beb8:	call   0xfb2ba46d
  42bebd:	jns    0x42bee9
  42bebf:	stc    
  42bec0:	pop    edx
  42bec1:	popf   
  42bec2:	and    al,0xb7
  42bec4:	mov    ebp,0x8749efeb
  42bec9:	fild   QWORD PTR [edi-0x28]
  42becc:	repz repnz push es
  42becf:	jmp    0x13ceffd7
  42bed4:	cld    
  42bed5:	jae    0x42bf30
  42bed7:	call   0xe949b9ee
  42bedc:	push   eax
  42bedd:	aas    
  42bede:	add    BYTE PTR [edi-0x179b343d],dh
  42bee4:	add    esi,ebx
  42bee6:	xchg   edi,eax
  42bee7:	mov    eax,0x11d8acfb
  42beec:	pop    esi
  42beed:	repz xor esp,DWORD PTR [edx+0xf]
  42bef1:	out    0xf0,eax
  42bef3:	test   al,0x3
  42bef5:	push   0x5c
  42bef7:	in     eax,dx
  42bef8:	jl     0x42befa
  42befa:	add    BYTE PTR [eax],al
  42befc:	xor    cl,BYTE PTR [esi]
  42befe:	data16 sar al,0x8d
  42bf02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf03:	imul   DWORD PTR [edi+0x41]
  42bf06:	in     al,dx
  42bf07:	push   ebx
  42bf08:	or     eax,0xb57691f2
  42bf0d:	neg    BYTE PTR [ebp-0x3f]
  42bf10:	dec    esp
  42bf11:	retf   0xe9a7
  42bf14:	pop    ecx
  42bf15:	mov    WORD PTR [edx-0x2abb95d0],fs
  42bf1b:	jl     0x42becf
  42bf1d:	sbb    esp,DWORD PTR [eax+0x45]
  42bf20:	mov    bl,0x89
  42bf22:	stos   BYTE PTR es:[edi],al
  42bf23:	inc    eax
  42bf24:	mov    ds:0x6648bd6c,eax
  42bf29:	dec    esp
  42bf2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf2b:	jl     0x42bf5e
  42bf2d:	out    dx,eax
  42bf2e:	cmp    BYTE PTR [ebx+0x29],al
  42bf31:	fsubr  DWORD PTR [ebp-0x7f]
  42bf34:	pop    ecx
  42bf35:	pop    es
  42bf36:	jmp    0x195d2b3e
  42bf3b:	adc    dh,BYTE PTR [ebx+0x30846006]
  42bf41:	pop    es
  42bf42:	jmp    0x6c39544a
  42bf47:	xor    DWORD PTR ds:0xf0e90007,0xa86a8d36
  42bf51:	xlat   BYTE PTR ds:[ebx]
  42bf52:	cli    
  42bf53:	jmp    0x6b159b98
  42bf58:	xchg   esp,eax
  42bf59:	or     ebp,DWORD PTR [eax-0x15]
  42bf5c:	icebp  
  42bf5d:	push   es
  42bf5e:	add    BYTE PTR [eax+eax*1+0x0],bl
  42bf62:	add    BYTE PTR [edx-0x38],dh
  42bf65:	(bad)  
  42bf66:	call   0x6acff65b
  42bf6b:	test   al,0xd7
  42bf6d:	cli    
  42bf6e:	jmp    0x6b159bb3
  42bf73:	or     edi,DWORD PTR fs:[ebx+0x6f1ed]
  42bf7a:	push   0xe900b2b2
  42bf7f:	lock xor al,0x8d
  42bf82:	bound  ebp,QWORD PTR [esi+eax*1-0x3b001700]
  42bf89:	out    0xa1,eax
  42bf8b:	xor    ebp,ebx
  42bf8d:	cli    
  42bf8e:	ins    BYTE PTR es:[edi],dx
  42bf8f:	xor    BYTE PTR [eax*4-0x523a467],cl
  42bf96:	xchg   ebx,eax
  42bf97:	icebp  
  42bf98:	mov    DWORD PTR [ecx+edi*8+0x1fadc4a],esi
  42bf9f:	add    al,0x4c
  42bfa1:	sti    
  42bfa2:	push   cs
  42bfa3:	mov    ebp,0x6b30114f
  42bfa9:	sti    
  42bfaa:	(bad)  
  42bfab:	mov    ch,0x97
  42bfad:	je     0x42bf89
  42bfaf:	pop    ecx
  42bfb0:	in     eax,dx
  42bfb1:	add    cl,ch
  42bfb3:	lock jg 0x42bf77
  42bfb6:	scas   eax,DWORD PTR es:[edi]
  42bfb7:	test   DWORD PTR [esi],0xdda23040
  42bfbd:	call   0xfb1ed3cf
  42bfc2:	mov    al,BYTE PTR ss:[edx-0x42]
  42bfc6:	add    BYTE PTR [eax],al
  42bfc8:	add    BYTE PTR [eax],al
  42bfca:	ficomp DWORD PTR [ebp-0x56]
  42bfcd:	clc    
  42bfce:	or     DWORD PTR [ebx],eax
  42bfd0:	add    BYTE PTR [edx-0x26],ch
  42bfd3:	mov    edx,eax
  42bfd5:	push   DWORD PTR [edx-0x6a01c49d]
  42bfdb:	mov    BYTE PTR [edx-0x175c2281],bh
  42bfe1:	add    edx,ebx
  42bfe3:	or     cl,BYTE PTR [ebp-0xa13357b]
  42bfe9:	dec    DWORD PTR [ebx+ecx*1+0x58034000]
  42bff0:	stc    
  42bff1:	jmp    0x38ad24
  42bff6:	adc    DWORD PTR [eax-0x2a],ecx
  42bff9:	mov    DWORD PTR [ecx],ecx
  42bffb:	rol    DWORD PTR [eax],cl
  42bffd:	add    BYTE PTR [edx+0x5f8d0830],cl
  42c003:	les    ecx,FWORD PTR [edx-0x73]
  42c006:	sbb    DWORD PTR [ebx],ecx
  42c008:	(bad)  
  42c009:	dec    DWORD PTR [edx+0x7a15f73a]
  42c00f:	add    al,0x40
  42c011:	add    cl,bl
  42c013:	mov    BYTE PTR [esi],0xb9
  42c016:	and    al,0xc
  42c018:	add    BYTE PTR [eax],al
  42c01a:	out    0x87,eax
  42c01c:	or     bh,dh
  42c01e:	cmc    
  42c01f:	in     eax,dx
  42c020:	rol    BYTE PTR [eax],0x5a
  42c023:	dec    edx
  42c024:	dec    ecx
  42c025:	jne    0x42c00a
  42c027:	push   ecx
  42c028:	je     0x42c032
  42c02a:	(bad)  
  42c02b:	push   esp
  42c02c:	in     al,0x5
  42c02e:	add    BYTE PTR [eax],al
  42c030:	add    BYTE PTR [edx+0xa],cl
  42c033:	push   eax
  42c034:	lea    edx,[ecx+0x1afffdf6]
  42c03a:	push   ecx
  42c03b:	mov    esi,0xf64a86e8
  42c040:	dec    DWORD PTR [edi-0xc7afa37]
  42c046:	and    esp,0xfffffffa
  42c049:	add    al,0x69
  42c04b:	jge    0x42c049
  42c04d:	hlt    
  42c04e:	(bad)  
  42c050:	mov    BYTE PTR [eax-0x4c],dh
  42c053:	idiv   bh
  42c055:	in     al,dx
  42c056:	dec    edi
  42c057:	add    al,0x5b
  42c059:	inc    ebp
  42c05a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c05b:	rol    BYTE PTR [ebx],0xf3
  42c05e:	adc    dh,BYTE PTR [edi-0x15]
  42c061:	inc    eax
  42c062:	mov    cl,0xc5
  42c064:	push   ecx
  42c065:	and    al,0xb8
  42c067:	pop    es
  42c068:	mov    al,ds:0x750420ae
  42c06d:	or     eax,0x30c4c74e
  42c072:	loopne 0x42c0c0
  42c074:	sti    
  42c075:	push   es
  42c076:	mov    WORD PTR [eax],ss
  42c078:	inc    eax
  42c079:	repz xchg edi,eax
  42c07b:	pop    es
  42c07c:	mov    al,ds:0x74fea0b6
  42c081:	add    BYTE PTR [edi+0x8],dl
  42c084:	js     0x42c03c
  42c086:	mov    al,ds:0x8be688fe
  42c08b:	mov    edi,0x25f33e
  42c090:	mov    al,ds:0xfea0ae
  42c095:	add    BYTE PTR [eax],al
  42c097:	add    ch,al
  42c099:	sbb    al,0x10
  42c09b:	lock add DWORD PTR [eax-0x28497902],esp
  42c0a2:	adc    eax,0x36badfbf
  42c0a7:	dec    eax
  42c0a8:	mov    edi,0xa7e77436
  42c0ae:	push   0x10
  42c0b0:	stos   DWORD PTR es:[edi],eax
  42c0b1:	fdivr  QWORD PTR [edi-0x3c]
  42c0b4:	repz (bad) 
  42c0b7:	mov    edx,0x3eb543
  42c0bc:	cdq    
  42c0bd:	retf   
  42c0be:	aad    0x1d
  42c0c0:	pop    esp
  42c0c1:	push   es
  42c0c2:	test   eax,0x4f06b30e
  42c0c7:	pop    ds
  42c0c8:	adc    al,0xef
  42c0ca:	xchg   ecx,eax
  42c0cb:	in     al,0xe2
  42c0cd:	inc    esi
  42c0ce:	jmp    0xd9248c2c
  42c0d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c0d4:	inc    esp
  42c0d5:	cld    
  42c0d6:	sub    BYTE PTR [edx*2-0x5602420d],al
  42c0dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0de:	rol    BYTE PTR [ebx-0xd],cl
  42c0e1:	pusha  
  42c0e2:	jmp    DWORD PTR [edx+0x425ca5c]
  42c0e8:	sub    DWORD PTR [eax],edx
  42c0ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0eb:	outs   dx,DWORD PTR ds:[esi]
  42c0ec:	adc    al,0x5f
  42c0ee:	jmp    0x8249f45e
  42c0f3:	bt     ecx,edi
  42c0f6:	sub    BYTE PTR [esp+eiz*8],al
  42c0f9:	(bad)  
  42c0fa:	cld    
  42c0fb:	add    al,0x0
  42c0fd:	add    BYTE PTR [eax],al
  42c0ff:	sbb    ebx,DWORD PTR [edi+0x5c]
  42c102:	inc    esp
  42c103:	repz bound ecx,QWORD PTR ss:[edi]
  42c107:	push   edi
  42c108:	stc    
  42c109:	test   al,0x3
  42c10b:	ins    BYTE PTR es:[edi],dx
  42c10c:	dec    edi
  42c10d:	sub    al,0x41
  42c10f:	repz (bad) 
  42c112:	outs   dx,DWORD PTR ds:[esi]
  42c113:	call   0x5627f19f
  42c118:	dec    edi
  42c119:	and    al,0x41
  42c11b:	repz fucomip st,st(3)
  42c11e:	mov    ds:0x3a5c9dc,al
  42c123:	fmul   st(6),st
  42c125:	and    DWORD PTR [eax-0x4e],esi
  42c128:	(bad)  
  42c12a:	jo     0x42c13a
  42c12c:	and    BYTE PTR [ebx-0x7ec85c05],0x3
  42c133:	jecxz  0x42c13b
  42c135:	jmp    0x63f9f986
  42c13a:	les    esp,FWORD PTR [edi-0x4b9dffb9]
  42c140:	inc    BYTE PTR [esi+0x46c249c]
  42c146:	call   0x402ac83b
  42c14b:	(bad)  
  42c14c:	sar    dl,1
  42c14e:	(bad)  
  42c14f:	xchg   ebp,eax
  42c150:	inc    BYTE PTR [esi+0x73fb17d9]
  42c156:	fbstp  TBYTE PTR [eax+0x5dba3706]
  42c15c:	sub    edi,ebx
  42c15e:	cmp    al,0xeb
  42c160:	rcl    BYTE PTR [ebp*1+0x2000000],1
  42c167:	inc    edi
  42c168:	add    BYTE PTR [ecx-0xf],bl
  42c16b:	jmp    0x42c185
  42c16d:	sahf   
  42c16e:	pop    ebp
  42c16f:	add    eax,DWORD PTR [ecx+0x16f0a7]
  42c175:	jmp    0x1a95059d
  42c17a:	into   
  42c17b:	cli    
  42c17c:	dec    edi
  42c17d:	fidiv  DWORD PTR [eax]
  42c17f:	pop    es
  42c180:	test   DWORD PTR [ecx-0x56d24635],ebp
  42c186:	aaa    
  42c187:	xor    DWORD PTR [edi-0x3c],edx
  42c18a:	mov    dl,0xb
  42c18c:	add    BYTE PTR [ebx+ecx*1+0xd6a50e0],dh
  42c193:	idiv   edi
  42c195:	aam    0x85
  42c197:	mov    WORD PTR [ecx+ebx*8+0x16],es
  42c19b:	push   esp
  42c19c:	cmp    BYTE PTR [ebp-0x5380f523],bl
  42c1a2:	add    ch,dl
  42c1a4:	dec    ebp
  42c1a5:	xchg   edi,eax
  42c1a6:	fistp  DWORD PTR [edx+0x8]
  42c1a9:	mov    esi,0x650ad5d5
  42c1ae:	das    
  42c1af:	sar    edx,cl
  42c1b1:	jmp    0x14f0481
  42c1b6:	gs or  eax,0x4eed00fa
  42c1bc:	repz sub DWORD PTR ds:0x68405e7,0x8
  42c1c4:	add    BYTE PTR [eax],al
  42c1c6:	loope  0x42c19b
  42c1c8:	(bad)  
  42c1c9:	inc    DWORD PTR [eax]
  42c1cb:	add    BYTE PTR [eax],al
  42c1cd:	or     dh,ah
  42c1cf:	repnz setns BYTE PTR [edi-0x7be50006]
  42c1d7:	dec    ebx
  42c1d8:	adc    BYTE PTR [edx],dh
  42c1da:	jne    0x42c214
  42c1dc:	(bad)  
  42c1dd:	sub    eax,0x59fc4381
  42c1e2:	mov    bl,0xf5
  42c1e4:	orps   xmm7,XMMWORD PTR [edx-0x6]
  42c1e8:	dec    edx
  42c1ea:	icebp  
  42c1eb:	mov    edx,0xfaa2490f
  42c1f0:	(bad)  
  42c1f1:	fidivr DWORD PTR [edi-0xb]
  42c1f4:	jne    0x42c1c8
  42c1f6:	jg     0x42c1b2
  42c1f8:	orps   xmm0,XMMWORD PTR [esi+0x7fcafffa]
  42c1ff:	mov    edx,0x74f1c075
  42c204:	or     al,0xa6
  42c206:	fmul   QWORD PTR [ebx+0x500c4d44]
  42c20c:	push   DWORD PTR [edi-0x7800b1fe]
  42c212:	test   BYTE PTR ds:0xbe899a40,0xc
  42c219:	inc    esp
  42c21a:	in     eax,0x13
  42c21c:	jl     0x42c1b7
  42c21e:	inc    esi
  42c21f:	add    BYTE PTR [ebx+0x3e3ee31c],cl
  42c225:	sbb    al,0xe6
  42c227:	mov    eax,DWORD PTR [esp+edx*4]
  42c22a:	loope  0x42c295
  42c22c:	test   DWORD PTR ds:0x8b4d2f,ecx
  42c232:	add    BYTE PTR [eax],al
  42c234:	lahf   
  42c235:	add    cl,BYTE PTR [ebp+0x68b8f334]
  42c23b:	jg     0x42c1fc
  42c23d:	mov    cl,0xe0
  42c23f:	pop    ebx
  42c240:	in     al,0x32
  42c242:	dec    ecx
  42c243:	or     esp,eax
  42c245:	pop    ds
  42c246:	sbb    al,0x45
  42c248:	hlt    
  42c249:	call   0xab3381c5
  42c24e:	(bad)  
  42c250:	sub    eax,0xbf6ec325
  42c255:	es push ecx
  42c257:	or     BYTE PTR [edi-0x17],bh
  42c25a:	cmp    BYTE PTR [ecx-0x4],dl
  42c25d:	cmp    cl,BYTE PTR [ebx+edi*8]
  42c260:	fmulp  st(7),st
  42c262:	clc    
  42c263:	aas    
  42c264:	repz pop esp
  42c266:	ret    
  42c267:	or     esi,edx
  42c269:	adc    cl,BYTE PTR [eax+eax*4]
  42c26c:	pop    esi
  42c26d:	mov    cl,0xfe
  42c26f:	jae    0x42c257
  42c271:	push   esp
  42c272:	push   eax
  42c273:	or     BYTE PTR [eax+0x2a],dh
  42c276:	or     al,0xfe
  42c278:	pop    edx
  42c279:	sbb    al,0x3c
  42c27b:	bound  ebp,QWORD PTR [edx-0x22]
  42c27e:	mov    DWORD PTR [ebx+ebp*8+0x54],esi
  42c282:	dec    eax
  42c283:	cld    
  42c284:	jle    0x42c2b1
  42c286:	add    al,0xfe
  42c288:	xor    al,0x59
  42c28a:	pop    eax
  42c28b:	adc    BYTE PTR [ebp+0x61],al
  42c28e:	clc    
  42c28f:	das    
  42c290:	std    
  42c291:	lahf   
  42c292:	(bad)  
  42c293:	jle    0x42c24c
  42c295:	jecxz  0x42c2cf
  42c297:	sti    
  42c298:	add    BYTE PTR [eax],al
  42c29a:	add    dh,bl
  42c29c:	mov    ebx,0x64f33ff1
  42c2a1:	leave  
  42c2a2:	out    0xf1,al
  42c2a4:	int3   
  42c2a5:	mov    esi,0xcba4cd5a
  42c2aa:	mov    ebp,0x418fdff7
  42c2af:	out    dx,eax
  42c2b0:	outs   dx,DWORD PTR ds:[esi]
  42c2b1:	fst    QWORD PTR [edi+ebx*2]
  42c2b4:	push   es
  42c2b5:	test   DWORD PTR [ebx-0xd],0xf28c2915
  42c2bc:	jg     0x42c268
  42c2be:	pop    es
  42c2bf:	push   0x48
  42c2c1:	loope  0x42c251
  42c2c3:	xor    al,ch
  42c2c5:	call   0xebe2:0xb5d6743a
  42c2cc:	adc    BYTE PTR [ebx-0xc],bh
  42c2cf:	jne    0x42c319
  42c2d1:	in     eax,0xe2
  42c2d3:	loopne 0x42c263
  42c2d5:	loope  0x42c2ce
  42c2d7:	ins    BYTE PTR es:[edi],dx
  42c2d8:	hlt    
  42c2d9:	sub    BYTE PTR [eax+esi*4],al
  42c2dc:	or     eax,0xd1085613
  42c2e1:	push   edx
  42c2e2:	or     BYTE PTR [ebx],cl
  42c2e4:	adc    ebx,ebp
  42c2e6:	loope  0x42c2d1
  42c2e8:	test   BYTE PTR [edx-0x242fbef0],ah
  42c2ee:	jmp    0x42c2de
  42c2f0:	inc    esi
  42c2f1:	jmp    0x3806fc36
  42c2f6:	xor    eax,0x8f987c21
  42c2fb:	xor    al,BYTE PTR [ebx]
  42c2fd:	cmp    DWORD PTR [ebx+0x30000000],ecx
  42c303:	sub    ebx,ebp
  42c305:	loopne 0x42c2e6
  42c307:	loop   0x42c2df
  42c309:	inc    ebx
  42c30a:	repz adc ebx,DWORD PTR [esi-0x400b6e5]
  42c311:	aaa    
  42c312:	inc    esi
  42c313:	adc    al,0x7c
  42c315:	sbb    edi,ecx
  42c317:	pop    eax
  42c318:	and    al,0x39
  42c31a:	je     0x42c365
  42c31c:	in     eax,0x8c
  42c31e:	xchg   DWORD PTR [esp+edx*1-0x1ab8364],eax
  42c325:	ins    DWORD PTR es:[edi],dx
  42c326:	repz iret 
  42c328:	cld    
  42c329:	fwait
  42c32a:	imul   edi,edx,0x724f4d8
  42c330:	add    BYTE PTR [edi+esi*1-0x77],ch
  42c334:	inc    ecx
  42c335:	in     eax,0xbd
  42c337:	add    bl,bh
  42c339:	(bad)  [eax-0x33]
  42c33c:	adc    al,0x49
  42c33e:	cmp    eax,0xa9620010
  42c343:	or     bh,BYTE PTR [edi-0x3b]
  42c346:	pop    eax
  42c347:	shl    ch,1
  42c349:	out    dx,al
  42c34a:	jg     0x42c348
  42c34c:	mov    bh,0x70
  42c34e:	add    ebp,DWORD PTR [edi+0x3e]
  42c351:	lods   al,BYTE PTR ds:[esi]
  42c352:	call   FWORD PTR [esi+ebp*2]
  42c355:	and    al,0xb2
  42c357:	jge    0x42c372
  42c359:	jb     0x42c39a
  42c35b:	(bad)  
  42c35c:	loopne 0x42c349
  42c35e:	outs   dx,DWORD PTR ds:[esi]
  42c35f:	mov    BYTE PTR [ebx],0xc1
  42c362:	test   DWORD PTR [ecx],0xcefa
  42c368:	add    BYTE PTR [ebp-0xf28c35],dh
  42c36e:	retf   
  42c36f:	adc    al,0xb9
  42c371:	fimul  WORD PTR [edi]
  42c373:	add    BYTE PTR [edi],dl
  42c375:	push   ds
  42c376:	cs mov edi,0x50db6614
  42c37c:	cmp    BYTE PTR [esi],al
  42c37e:	add    BYTE PTR [edx-0x13],0xa
  42c382:	aaa    
  42c383:	mov    DWORD PTR [edi+ebx*4],ebp
  42c386:	int3   
  42c387:	adc    al,0x7d
  42c389:	mov    esi,0x6fba000f
  42c38e:	push   cs
  42c38f:	pop    ebx
  42c390:	icebp  
  42c391:	add    ecx,DWORD PTR [edx+0x6f0e989]
  42c397:	cmp    DWORD PTR [ebx+eax*1],ecx
  42c39a:	cld    
  42c39b:	sub    DWORD PTR [eax+esi*8+0x6],0x0
  42c3a0:	jb     0x42c385
  42c3a2:	xor    DWORD PTR [edx-0x13],0xe58cfb6d
  42c3a9:	lock push es
  42c3ab:	add    BYTE PTR [eax],al
  42c3ad:	jecxz  0x42c3e7
  42c3af:	cld    
  42c3b0:	call   0x38cb27
  42c3b5:	into   
  42c3b6:	ret    
  42c3b7:	outs   dx,BYTE PTR ds:[esi]
  42c3b8:	ins    DWORD PTR es:[edi],dx
  42c3b9:	jns    0x42c41c
  42c3bb:	add    al,0xff
  42c3bd:	outs   dx,DWORD PTR ds:[esi]
  42c3be:	shl    ebp,cl
  42c3c0:	jne    0x42c418
  42c3c2:	out    0x73,al
  42c3c4:	or     BYTE PTR [ecx-0x1a],bh
  42c3c7:	adc    edx,DWORD PTR [eax+0x38]
  42c3ca:	inc    ebx
  42c3cb:	add    BYTE PTR [ebx+0x2a000000],cl
  42c3d1:	jmp    0x42c3bd
  42c3d3:	je     0x42c43f
  42c3d5:	in     al,dx
  42c3d6:	pop    esp
  42c3d7:	adc    al,0x9e
  42c3d9:	icebp  
  42c3da:	popa   
  42c3db:	add    bh,BYTE PTR [ecx+0x1a]
  42c3de:	div    DWORD PTR [ebp+0xe]
  42c3e1:	pop    ebp
  42c3e2:	not    DWORD PTR [esi-0x60]
  42c3e5:	scas   eax,DWORD PTR es:[edi]
  42c3e6:	cmc    
  42c3e7:	adc    eax,0x3ad46e
  42c3ec:	(bad)
  42c3f0:	mov    ch,0xd0
  42c3f2:	adc    dl,BYTE PTR [ecx]
  42c3f4:	sbb    al,BYTE PTR [ebx]
  42c3f6:	push   eax
  42c3f7:	push   esi
  42c3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c3f9:	ror    BYTE PTR [esi+0x12],1
  42c3fc:	or     al,BYTE PTR [ebx]
  42c3fe:	dec    esi
  42c3ff:	dec    edi
  42c401:	stos   BYTE PTR es:[edi],al
  42c402:	or     al,0x40
  42c404:	fiadd  DWORD PTR [ecx-0x192074fb]
  42c40a:	mov    edi,0x58e2c8e1
  42c40f:	add    al,0x74
  42c411:	scas   al,BYTE PTR es:[edi]
  42c412:	loope  0x42c429
  42c414:	and    DWORD PTR [esi],eax
  42c416:	or     DWORD PTR [ebp+0x26],0xffffff82
  42c41a:	pop    es
  42c41b:	mov    DWORD PTR [esi-0x7d],ebx
  42c41e:	cmc    
  42c41f:	pop    es
  42c420:	dec    esp
  42c421:	lods   eax,DWORD PTR ds:[esi]
  42c422:	adc    ebx,eax
  42c424:	mov    ecx,DWORD PTR [edx+0x0]
  42c427:	mov    bl,0xf3
  42c429:	fcompp 
  42c42b:	je     0x42c4a8
  42c42d:	cmp    eax,0xa001eff9
  42c432:	(bad)  
  42c433:	pop    ecx
  42c434:	add    BYTE PTR [eax],al
  42c436:	add    BYTE PTR [ecx+0x21],bh
  42c439:	aaa    
  42c43a:	leave  
  42c43b:	xor    DWORD PTR [eax+0x68c050fe],esi
  42c441:	add    esp,ebp
  42c443:	loope  0x42c3e4
  42c445:	(bad)  
  42c446:	push   esp
  42c447:	pushf  
  42c448:	pop    edx
  42c449:	pop    edx
  42c44a:	or     al,0xa4
  42c44c:	hlt    
  42c44d:	scas   al,BYTE PTR es:[edi]
  42c44e:	cli    
  42c44f:	lods   eax,DWORD PTR ds:[esi]
  42c450:	out    0x31,eax
  42c452:	sti    
  42c453:	push   es
  42c454:	shl    al,1
  42c456:	aas    
  42c457:	pause  
  42c459:	out    dx,eax
  42c45a:	shl    DWORD PTR [edi-0x25fef645],0x8d
  42c461:	push   esp
  42c462:	xor    BYTE PTR [eax-0x22],bh
  42c465:	and    eax,0x3ee870c5
  42c46a:	outs   dx,BYTE PTR ds:[esi]
  42c46b:	lock dec ecx
  42c46d:	inc    esp
  42c46e:	pop    eax
  42c46f:	push   0xec6607ee
  42c474:	cmp    DWORD PTR ds:0x3376f78d,eax
  42c47a:	push   eax
  42c47b:	fsubr  QWORD PTR [edx-0x1fccf26e]
  42c481:	xchg   DWORD PTR [edi-0x3b8228ba],edi
  42c487:	xor    ebp,ecx
  42c489:	sub    al,0x6e
  42c48b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c48c:	mov    BYTE PTR [edi],al
  42c48e:	ret    0xc42f
  42c491:	or     DWORD PTR [eax],eax
  42c493:	inc    esp
  42c494:	test   DWORD PTR [ebp+0x31d835fa],ebp
  42c49a:	sti    
  42c49b:	add    BYTE PTR [eax],al
  42c49d:	add    BYTE PTR [esi],al
  42c49f:	push   eax
  42c4a0:	icebp  
  42c4a1:	aas    
  42c4a2:	repz imul eax,DWORD PTR [ebx+0x24],0x40c206fc
  42c4aa:	sbb    al,0x30
  42c4ac:	cmp    BYTE PTR es:[edx+ebx*8+0x67],dh
  42c4b1:	out    dx,eax
  42c4b2:	adc    al,0x3
  42c4b4:	jmp    0xa3c480bc
  42c4b9:	or     eax,ecx
  42c4bb:	xor    eax,0x466f83d1
  42c4c0:	jmp    0x84c62af7
  42c4c5:	fimul  DWORD PTR [ecx-0x33]
  42c4c8:	mov    eax,0x3cde438a
  42c4cd:	fistp  QWORD PTR [ecx]
  42c4cf:	int    0x6b
  42c4d1:	ret    
  42c4d2:	mov    edi,0xcb027efe
  42c4d7:	fistp  WORD PTR [esp+eax*1-0x7793f90d]
  42c4de:	dec    eax
  42c4df:	retf   
  42c4e0:	icebp  
  42c4e1:	frstor [ebx+edi*2-0x32fa589d]
  42c4e8:	loope  0x42c51e
  42c4ea:	or     bl,dh
  42c4ec:	jo     0x42c4e1
  42c4ee:	mov    esp,0xeb476006
  42c4f3:	mov    eax,edx
  42c4f5:	frstor [edi+0x3]
  42c4f8:	dec    edi
  42c4f9:	or     ah,cl
  42c4fb:	mov    cl,0xf5
  42c4fd:	fsubr  QWORD PTR [edi-0x7e]
  42c500:	nop
  42c501:	fild   WORD PTR [eax]
  42c503:	add    BYTE PTR [eax],al
  42c505:	fxch   st(4)
  42c507:	shr    dl,0xcd
  42c50a:	int3   
  42c50b:	call   0x643f4997
  42c510:	mov    eax,0x88e8ccbc
  42c515:	jmp    0x839b:0x878ee77f
  42c51c:	(bad)  [ecx-0x1322e9c7]
  42c522:	cmp    edi,0x7eff3ba8
  42c528:	jno    0x42c51a
  42c52a:	fnsave [edi-0xdf90f17]
  42c530:	fs inc ebx
  42c532:	retf   
  42c533:	cli    
  42c534:	push   esi
  42c535:	jg     0x42c538
  42c537:	test   BYTE PTR [ebp-0x9],ah
  42c53a:	push   es
  42c53b:	add    BYTE PTR [edi],bh
  42c53d:	lods   eax,DWORD PTR ds:[esi]
  42c53e:	(bad)  
  42c53f:	std    
  42c540:	mov    ah,0x13
  42c542:	jp     0x42c4c8
  42c544:	adc    DWORD PTR [ecx+edx*8],esi
  42c547:	cli    
  42c548:	cdq    
  42c549:	pop    eax
  42c54a:	(bad)  
  42c54c:	call   0x96024841
  42c551:	inc    ebx
  42c552:	test   DWORD PTR [ecx],ecx
  42c554:	(bad)  
  42c555:	lock jns 0x42c4ec
  42c558:	cmp    eax,0x9bfad14c
  42c55d:	jecxz  0x42c52e
  42c55f:	dec    edi
  42c560:	in     eax,0x75
  42c562:	mov    WORD PTR [ebx+ebp*1+0x3d],?
  42c566:	inc    esi
  42c567:	or     al,ch
  42c569:	add    BYTE PTR [eax],al
  42c56b:	add    BYTE PTR [eax+edx*2-0x34b79373],ah
  42c572:	cli    
  42c573:	faddp  st(0),st
  42c575:	cmp    ecx,DWORD PTR [ebp-0x52ab394]
  42c57b:	into   
  42c57c:	and    bh,bl
  42c57e:	xor    ch,al
  42c580:	(bad)  
  42c581:	rol    BYTE PTR [ecx+ebp*4-0x1599fdbb],1
  42c588:	pop    ss
  42c589:	in     al,0x19
  42c58b:	pop    esp
  42c58c:	jne    0x42c535
  42c58e:	mul    BYTE PTR [esi-0x5078c459]
  42c594:	enter  0xfaf4,0x96
  42c598:	xchg   edi,eax
  42c599:	test   bh,dh
  42c59b:	fs iret 
  42c59d:	push   edi
  42c59e:	dec    ebp
  42c59f:	add    BYTE PTR [ecx],bl
  42c5a1:	stos   DWORD PTR es:[edi],eax
  42c5a2:	push   DWORD PTR [ebx-0x11]
  42c5a5:	test   ebp,esi
  42c5a7:	add    dl,BYTE PTR [esi+0x110e835f]
  42c5ad:	or     DWORD PTR [edi-0x73],ecx
  42c5b0:	pop    es
  42c5b1:	pushf  
  42c5b2:	sti    
  42c5b3:	call   FWORD PTR ds:0x3aff4b16
  42c5b9:	(bad)  
  42c5ba:	jp     0x42c5b4
  42c5bc:	pop    ecx
  42c5bd:	xor    esi,DWORD PTR [eax-0xa55ca17]
  42c5c3:	jmp    DWORD PTR [edx+eax*2]
  42c5c6:	or     BYTE PTR [esi+edx*4],al
  42c5c9:	lea    eax,es:[ebp-0xa531e]
  42c5d0:	add    BYTE PTR [eax],al
  42c5d2:	add    BYTE PTR [edx+0x4a0067df],cl
  42c5d8:	pop    es
  42c5d9:	test   al,al
  42c5db:	push   esi
  42c5dc:	(bad)  
  42c5dd:	or     DWORD PTR [esi],0x958d0891
  42c5e3:	mov    esi,0x78fff5ac
  42c5e8:	push   ss
  42c5e9:	not    DWORD PTR [eax+0x6]
  42c5ec:	test   BYTE PTR [edx-0x7c83df8b],bh
  42c5f2:	lods   al,BYTE PTR ds:[esi]
  42c5f3:	imul   esi,ebp
  42c5f6:	push   eax
  42c5f7:	sbb    eax,0xf7ff0835
  42c5fc:	push   esi
  42c5fd:	adc    BYTE PTR [eax-0x26],al
  42c600:	xchg   DWORD PTR [edx-0x8fba8f1],edi
  42c606:	call   FWORD PTR [ebp-0x6cccfe26]
  42c60c:	xor    dl,0x2
  42c60f:	lods   eax,DWORD PTR ds:[esi]
  42c610:	push   edi
  42c611:	ror    BYTE PTR [ebp+0x15f70413],0xf2
  42c618:	sar    DWORD PTR [edx],cl
  42c61a:	add    bl,dh
  42c61c:	fs aam 0x84
  42c61f:	lods   al,BYTE PTR ds:[esi]
  42c620:	repz or edi,DWORD PTR [edi-0x5b]
  42c624:	scas   al,BYTE PTR es:[edi]
  42c625:	dec    edx
  42c626:	dec    DWORD PTR [edx]
  42c628:	in     al,0x35
  42c62a:	sti    
  42c62b:	push   ds
  42c62c:	call   0xafc1db06
  42c631:	add    BYTE PTR ds:0x23f161,bl
  42c638:	add    BYTE PTR [eax],al
  42c63a:	loope  0x42c5db
  42c63c:	inc    BYTE PTR [esi+0x573891ac]
  42c642:	cmp    bl,BYTE PTR [esi]
  42c644:	add    BYTE PTR [eax],al
  42c646:	mov    esp,0xdf38d5cc
  42c64b:	add    ecx,DWORD PTR [esi*2-0x19413211]
  42c652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c653:	fs ds adc al,0x18
  42c657:	sbb    DWORD PTR [eax+0x4c],edx
  42c65a:	stos   DWORD PTR es:[edi],eax
  42c65b:	jae    0x42c677
  42c65d:	dec    eax
  42c65e:	mov    esi,0x37a1d00
  42c663:	jb     0x42c651
  42c665:	xchg   BYTE PTR [ebp+0x5b33d5d3],ch
  42c66b:	leave  
  42c66c:	dec    edx
  42c66d:	and    al,0xe7
  42c66f:	shr    bh,1
  42c671:	imul   esp,eax,0xffffff9f
  42c674:	inc    BYTE PTR [ebx+esi*1-0x47bcd6d5]
  42c67b:	sub    esp,esi
  42c67d:	ins    DWORD PTR es:[edi],dx
  42c67e:	or     eax,0x3586c8c5
  42c683:	lods   al,BYTE PTR ds:[esi]
  42c684:	mov    esi,DWORD PTR [edi-0x9]
  42c687:	mov    ah,0x5
  42c689:	push   eax
  42c68a:	fcom   QWORD PTR [ebx]
  42c68c:	and    BYTE PTR [esp+edx*8],cl
  42c68f:	stos   BYTE PTR es:[edi],al
  42c690:	bound  ecx,QWORD PTR [edi]
  42c692:	xor    esp,eax
  42c694:	jg     0x42c655
  42c696:	ds pop es
  42c698:	repz mov ?,WORD PTR [edx]
  42c69b:	sti    
  42c69c:	nop
  42c69d:	inc    edx
  42c69e:	add    BYTE PTR [eax],al
  42c6a0:	add    BYTE PTR [ebp-0x4fe16e37],bl
  42c6a6:	push   ebx
  42c6a7:	test   dh,ch
  42c6a9:	pop    ebx
  42c6aa:	xchg   esi,eax
  42c6ab:	out    0x3a,eax
  42c6ad:	pop    ebp
  42c6ae:	add    ch,cl
  42c6b0:	xor    BYTE PTR [edx+ebx*8+0x15],ch
  42c6b4:	xor    bl,ah
  42c6b6:	lods   eax,DWORD PTR ds:[esi]
  42c6b7:	adc    eax,0xe906736c
  42c6bc:	add    edx,DWORD PTR ds:0xf26db605
  42c6c2:	pop    esi
  42c6c3:	jmp    0x4a89b9cb
  42c6c8:	push   eax
  42c6c9:	sti    
  42c6ca:	leave  
  42c6cb:	fist   DWORD PTR [ebx]
  42c6cd:	in     eax,dx
  42c6ce:	inc    esi
  42c6cf:	jmp    0x32c80b62
  42c6d4:	fcmovb st,st(0)
  42c6d6:	adc    al,dh
  42c6d8:	cmp    bh,dh
  42c6da:	push   edx
  42c6db:	(bad)  
  42c6dc:	sbb    al,0x9e
  42c6de:	not    BYTE PTR [ecx+esi*8-0xc54845b]
  42c6e5:	mov    esp,0x29f393c9
  42c6ea:	push   ebx
  42c6eb:	cmc    
  42c6ec:	xor    DWORD PTR [eax],ebx
  42c6ee:	repz mov esp,0x6c06d4f5
  42c6f4:	ret    
  42c6f5:	add    BYTE PTR [esi+esi*1],0x4
  42c6f9:	mov    eax,ds:0xeea3fbc9
  42c6fe:	inc    esi
  42c6ff:	jmp    0x5d49c487
  42c704:	or     al,0x0
  42c706:	add    BYTE PTR [eax],al
  42c708:	call   0x62ea85f
  42c70d:	pop    ecx
  42c70e:	ret    
  42c70f:	fnstcw WORD PTR [edx]
  42c711:	jge    0x42c6b8
  42c713:	cmp    eax,0xe4ffc536
  42c718:	lock xor DWORD PTR [edi+0x533600bd],eax
  42c71f:	ficomp DWORD PTR [ebx-0x11ecaccb]
  42c725:	xor    esp,DWORD PTR [esi-0x18]
  42c728:	sbb    BYTE PTR [edi],al
  42c72a:	add    cl,ch
  42c72c:	jo     0x42c6fb
  42c72e:	je     0x42c721
  42c730:	mov    ebx,0x30db2ff3
  42c735:	pop    es
  42c736:	mov    DWORD PTR [edi],ebp
  42c738:	inc    DWORD PTR [edi-0x8]
  42c73b:	outs   dx,BYTE PTR ds:[esi]
  42c73c:	and    edx,DWORD PTR [edi-0x73]
  42c73f:	mov    ah,0x98
  42c741:	aaa    
  42c742:	push   eax
  42c743:	pop    esi
  42c744:	test   BYTE PTR [eax],ah
  42c746:	push   cs
  42c747:	test   eax,0xd5bf81f0
  42c74c:	sub    BYTE PTR [esi],cl
  42c74e:	jge    0x42c795
  42c750:	lods   al,BYTE PTR ds:[esi]
  42c751:	aaa    
  42c752:	xchg   DWORD PTR [eax+edi*1-0x1012be81],esp
  42c759:	ret    
  42c75a:	je     0x42c741
  42c75c:	jns    0x42c76c
  42c75e:	out    0xda,eax
  42c760:	into   
  42c761:	add    ch,BYTE PTR [eax-0x17]
  42c764:	loopne 0x42c76c
  42c766:	add    BYTE PTR [ecx+0x514cbe3],bh
  42c76c:	add    BYTE PTR [eax],al
  42c76e:	add    BYTE PTR [eax],ah
  42c770:	or     BYTE PTR [eax],al
  42c772:	jo     0x42c765
  42c774:	movnti DWORD PTR [ebp+0x0],esi
  42c778:	xor    al,0x8d
  42c77a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c77b:	clc    
  42c77c:	xor    eax,0x380477fb
  42c781:	sti    
  42c782:	pop    edi
  42c783:	out    dx,eax
  42c784:	retf   
  42c785:	adc    al,0x15
  42c787:	std    
  42c788:	pop    es
  42c789:	add    BYTE PTR [eax+esi*4+0x53],ch
  42c78d:	or     al,0x62
  42c78f:	and    eax,0xc0036ff
  42c794:	pop    es
  42c795:	jne    0x42c79b
  42c797:	pop    edx
  42c798:	add    eax,0x33219e3
  42c79d:	add    BYTE PTR [eax],0xda
  42c7a0:	push   ss
  42c7a1:	div    DWORD PTR [esi]
  42c7a3:	xchg   ebp,eax
  42c7a4:	fcomp  st(2)
  42c7a6:	adc    DWORD PTR [edx],ecx
  42c7a8:	add    esi,edi
  42c7aa:	jbe    0x42c73e
  42c7ac:	scas   al,BYTE PTR es:[edi]
  42c7ad:	adc    esp,DWORD PTR [eax+0x320043a8]
  42c7b3:	dec    edx
  42c7b4:	push   cs
  42c7b5:	leave  
  42c7b6:	ret    0x38e
  42c7b9:	dec    esi
  42c7ba:	mov    ecx,DWORD PTR [edx]
  42c7bc:	jnp    0x42c7be
  42c7be:	test   DWORD PTR [edx+0x37],ebx
  42c7c1:	push   es
  42c7c2:	push   0xfffa838a
  42c7c7:	mov    al,ds:0x6fff5003
  42c7cc:	jecxz  0x42c7dd
  42c7ce:	inc    eax
  42c7cf:	pop    edx
  42c7d0:	jp     0x42c842
  42c7d2:	or     BYTE PTR [eax],al
  42c7d4:	add    BYTE PTR [eax],al
  42c7d6:	iret   
  42c7d7:	mov    ch,0x6e
  42c7d9:	pop    es
  42c7da:	jl     0x42c78a
  42c7dc:	adc    esp,DWORD PTR [eax+0x5e004328]
  42c7e2:	sbb    DWORD PTR [ecx],ebx
  42c7e4:	sub    esp,0xffffffcb
  42c7e7:	fisttp WORD PTR [edx]
  42c7e9:	add    al,0x4a
  42c7eb:	add    ecx,DWORD PTR [ebx+0x56]
  42c7ee:	ins    DWORD PTR es:[edi],dx
  42c7ef:	add    BYTE PTR [ebx-0xa50fe10],0x50
  42c7f6:	xor    BYTE PTR [ebp-0x51f50006],0x13
  42c7fd:	sbb    BYTE PTR [ecx],ch
  42c7ff:	inc    ebx
  42c800:	add    BYTE PTR [eax+0x57],cl
  42c803:	mov    eax,0x380afffa
  42c808:	ins    BYTE PTR es:[edi],dx
  42c809:	xor    ebx,DWORD PTR [edi+ebp*4]
  42c80c:	jae    0x42c816
  42c80e:	repz (bad) 
  42c810:	mov    esi,0x33d5e4a8
  42c815:	push   0x443b53
  42c81a:	dec    ebx
  42c81b:	sub    al,0x89
  42c81d:	aas    
  42c81e:	repz cmp BYTE PTR [eax],al
  42c821:	add    ebx,esi
  42c823:	scas   eax,DWORD PTR es:[edi]
  42c824:	xchg   DWORD PTR [ebx+edi*4-0x34052d95],edi
  42c82b:	lods   eax,DWORD PTR ds:[esi]
  42c82c:	aas    
  42c82d:	cli    
  42c82e:	lods   al,BYTE PTR ds:[esi]
  42c82f:	xor    eax,eax
  42c831:	pshufw mm3,QWORD PTR [eax+0x38dc73d2],0xbb
  42c839:	dec    edi
  42c83a:	add    BYTE PTR [eax],al
  42c83c:	add    BYTE PTR [esi+0x2b],ah
  42c83f:	aam    0xf6
  42c841:	mov    WORD PTR ds:0xe3fefb34,?
  42c847:	out    0x7d,al
  42c849:	jp     0x42c878
  42c84b:	rol    DWORD PTR [ebx+esi*4-0xc99e124],cl
  42c852:	(bad)  
  42c853:	jle    0x42c854
  42c855:	fs mov al,0x68
  42c858:	add    ecx,ecx
  42c85a:	scas   eax,DWORD PTR es:[edi]
  42c85b:	push   0xfeafcb01
  42c860:	push   DWORD PTR [ebx]
  42c862:	std    
  42c863:	push   eax
  42c864:	or     al,0x44
  42c866:	fisttp DWORD PTR [esi]
  42c868:	push   cs
  42c869:	mov    bl,0xaf
  42c86b:	jge    0x42c864
  42c86d:	xor    al,0x9b
  42c86f:	lock inc ecx
  42c871:	jb     0x42c891
  42c873:	int3   
  42c874:	jmp    DWORD PTR [eax+esi*4]
  42c877:	push   eax
  42c878:	xchg   edx,eax
  42c879:	loope  0x42c86a
  42c87b:	xor    bl,BYTE PTR [edx-0x48]
  42c87e:	idiv   BYTE PTR [ebp-0x2e600cf9]
  42c884:	adc    al,0x53
  42c886:	loop   0x42c8c6
  42c888:	add    BYTE PTR [ebx+0x7],al
  42c88b:	call   0x6e9ed37a
  42c890:	out    0x73,eax
  42c892:	mov    dl,0xf8
  42c894:	jmp    esp
  42c896:	lds    esi,FWORD PTR ds:0x6b94402e
  42c89c:	rcr    ebp,cl
  42c89e:	lds    edi,FWORD PTR [ecx+0x33]
  42c8a4:	pop    ebx
  42c8a5:	mov    ebp,0xc5f303e8
  42c8aa:	sar    ebx,cl
  42c8ac:	in     eax,dx
  42c8ad:	inc    esi
  42c8ae:	jmp    0xe8febefe
  42c8b3:	add    esi,ebx
  42c8b5:	cmp    eax,0xaea1133c
  42c8ba:	enter  0x99ac,0xc5
  42c8be:	sbb    BYTE PTR [ebx+edx*1-0x6c],ch
  42c8c2:	sub    BYTE PTR [ebx+ebx*1],al
  42c8c5:	lahf   
  42c8c6:	arpl   WORD PTR [ebx-0xd],ax
  42c8c9:	and    esp,0x7406f304
  42c8cf:	cwde   
  42c8d0:	jl     0x42c895
  42c8d2:	pop    ecx
  42c8d3:	(bad)  
  42c8d4:	push   esp
  42c8d5:	sub    ch,BYTE PTR [ebp+0x248969d5]
  42c8db:	pop    es
  42c8dc:	fdivr  QWORD PTR [esi-0x6df3b0bf]
  42c8e2:	and    DWORD PTR [ebx],esi
  42c8e4:	jle    0x42c871
  42c8e6:	cmp    dl,bl
  42c8e8:	dec    ecx
  42c8e9:	lds    ebx,FWORD PTR [eax+0x110ec7d6]
  42c8ef:	mov    dh,0x3c
  42c8f1:	lds    ebx,FWORD PTR [ecx]
  42c8f3:	sub    BYTE PTR [edx+edi*1-0x1e],0x69
  42c8f8:	repz lds edx,FWORD PTR [ebx+0x251b180b]
  42c8ff:	hlt    
  42c900:	aam    0x6
  42c902:	fs ret 
  42c904:	xchg   DWORD PTR ds:0xaf00,edx
  42c90a:	add    BYTE PTR [ecx-0x41],dh
  42c90d:	arpl   WORD PTR [ebx+0x4b],di
  42c910:	repz mov edi,0xc95dbd46
  42c916:	stos   DWORD PTR es:[edi],eax
  42c917:	repz push es
  42c919:	mov    al,0xe8
  42c91b:	fstp   TBYTE PTR [ebx+0x2043a984]
  42c921:	bound  ebp,QWORD PTR [edx-0x9]
  42c924:	lock je 0x42c907
  42c927:	div    DWORD PTR [edi+0x47]
  42c92a:	jmp    0x42c952
  42c92c:	mov    cl,al
  42c92e:	xor    eax,0xd7f943eb
  42c933:	and    eax,0x4f6a620c
  42c938:	or     eax,DWORD PTR [eax]
  42c93a:	sbb    al,0xf3
  42c93c:	repz mov edi,0xbff5b229
  42c942:	stos   BYTE PTR es:[edi],al
  42c943:	loop   0x42c99e
  42c945:	xchg   DWORD PTR ds:0x1e5212d3,ecx
  42c94b:	aam    0xf4
  42c94d:	(bad)  
  42c94e:	outs   dx,BYTE PTR ds:[esi]
  42c94f:	mov    WORD PTR [edi+ecx*1],gs
  42c952:	test   eax,0x64ef8bf0
  42c957:	cmp    eax,0x3461fe3b
  42c95c:	adc    DWORD PTR [ebx+0x5bbc73e7],esi
  42c962:	mov    ebp,0xef843ea
  42c967:	mov    ds:0x2f6c6209,eax
  42c96c:	cmp    ebp,DWORD PTR [edx+eiz*2]
  42c96f:	add    BYTE PTR [eax],al
  42c971:	add    BYTE PTR [edi],bl
  42c973:	cmc    
  42c974:	mov    edi,0x18d96bc
  42c979:	push   ds
  42c97a:	sbb    al,0xfc
  42c97c:	or     eax,0xf843f0a9
  42c981:	push   cs
  42c982:	lods   al,BYTE PTR ds:[esi]
  42c983:	adc    DWORD PTR [esi+0x0],esp
  42c986:	or     dh,ch
  42c988:	not    BYTE PTR ds:0x3ab7ee
  42c98e:	xchg   edi,eax
  42c98f:	retf   0x2e1
  42c992:	mov    dl,0xba
  42c994:	outs   dx,BYTE PTR ds:[esi]
  42c995:	shld   DWORD PTR [ebx-0xa],eax,0x74
  42c99a:	loop   0x42c9fd
  42c99c:	mov    DWORD PTR [esi],edi
  42c99e:	pop    ecx
  42c99f:	cmp    ah,0xea
  42c9a2:	outs   dx,DWORD PTR ds:[esi]
  42c9a3:	xchg   esi,eax
  42c9a4:	call   FWORD PTR [esi+0xc]
  42c9a7:	cld    
  42c9a8:	add    ebx,0xfffec911
  42c9ae:	out    0x8d,eax
  42c9b0:	out    0x83,al
  42c9b2:	mov    dh,0xdf
  42c9b4:	jg     0x42c9a2
  42c9b6:	xor    al,BYTE PTR [edi]
  42c9b8:	add    BYTE PTR [eax],al
  42c9ba:	in     al,0xf1
  42c9bc:	or     BYTE PTR [bx],0x48
  42c9c0:	add    BYTE PTR [ebx+0x448cf283],cl
  42c9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9c7:	mov    bh,0x4a
  42c9c9:	call   0x38a96c
  42c9ce:	pop    ss
  42c9cf:	enter  0x7a6e,0x1f
  42c9d3:	inc    esp
  42c9d4:	pop    ds
  42c9d5:	adc    BYTE PTR [eax],al
  42c9d7:	add    BYTE PTR [eax],al
  42c9d9:	mov    BYTE PTR [edi],al
  42c9db:	add    BYTE PTR [eax-0x21],dl
  42c9de:	add    esp,DWORD PTR [esp+ecx*1]
  42c9e1:	stos   BYTE PTR es:[edi],al
  42c9e2:	ficom  DWORD PTR [ebx]
  42c9e4:	mov    BYTE PTR [ebx+0x47],bl
  42c9e7:	add    BYTE PTR [ebx-0x778e6],cl
  42c9ed:	xchg   BYTE PTR [edi],ah
  42c9ef:	lea    eax,[esi+esi*8+0x4afffa1e]
  42c9f6:	scas   eax,DWORD PTR es:[edi]
  42c9f7:	daa    
  42c9f8:	dec    DWORD PTR ds:0x87c07edb
  42c9fe:	adc    DWORD PTR [ebp+0x12d1f384],ecx
  42ca04:	(bad)  
  42ca05:	sbb    al,0xad
  42ca07:	cs push ebx
  42ca09:	data16 jno 0x42ca26
  42ca0c:	adc    BYTE PTR [ebx+0x4f2c815],ah
  42ca12:	mov    esp,0xd487bf7c
  42ca17:	int3   
  42ca18:	or     edi,0xffffffbd
  42ca1b:	add    al,0x0
  42ca1d:	repz mov edi,0xec760752
  42ca23:	daa    
  42ca24:	or     bl,cl
  42ca26:	sub    bh,cl
  42ca28:	cli    
  42ca29:	aam    0xd5
  42ca2b:	stc    
  42ca2c:	mov    WORD PTR [edi],?
  42ca2e:	or     al,0xfc
  42ca30:	dec    edi
  42ca31:	fcmovnbe st,st(7)
  42ca33:	pop    ecx
  42ca34:	cli    
  42ca35:	mov    esp,0xe3238863
  42ca3a:	lods   eax,DWORD PTR ds:[esi]
  42ca3b:	(bad)  
  42ca3c:	inc    DWORD PTR [eax]
  42ca3e:	add    BYTE PTR [eax],al
  42ca40:	inc    ebx
  42ca41:	cli    
  42ca42:	into   
  42ca43:	adc    al,0x83
  42ca45:	mov    edi,0x7076003e
  42ca4a:	pop    eax
  42ca4b:	mov    ds:0x8bf8893d,eax
  42ca50:	loop   0x42ca41
  42ca52:	add    ebp,DWORD PTR [eax+0x73]
  42ca55:	mov    al,0xfe
  42ca57:	jmp    DWORD PTR [ecx+esi*1]
  42ca5a:	stc    
  42ca5b:	psraw  mm5,QWORD PTR [edi-0x2]
  42ca5f:	push   edx
  42ca60:	ins    BYTE PTR es:[edi],dx
  42ca61:	mov    ebx,0xafb310d6
  42ca66:	xchg   DWORD PTR [edi-0x40881f44],edi
  42ca6c:	mov    ch,0x34
  42ca6e:	jmp    0x4877facf
  42ca73:	and    al,0xfb
  42ca75:	test   al,0x9d
  42ca77:	inc    ebx
  42ca78:	pop    ss
  42ca79:	in     al,0x2e
  42ca7b:	call   0xd165d1a4
  42ca80:	sub    esi,eax
  42ca82:	sbb    DWORD PTR [eax-0x31],ebx
  42ca85:	push   cs
  42ca86:	add    ecx,ebp
  42ca88:	sbb    al,ah
  42ca8a:	or     edi,eax
  42ca8c:	mov    es,WORD PTR [edx]
  42ca8e:	(bad)  
  42ca8f:	sti    
  42ca90:	or     esp,edi
  42ca92:	or     BYTE PTR [edi-0x70df93b],bl
  42ca98:	lock adc eax,0xc76e03a9
  42ca9e:	pop    esp
  42ca9f:	stc    
  42caa0:	mov    cl,0x46
  42caa2:	or     DWORD PTR [eax+0x0],esp
  42caa5:	add    BYTE PTR [eax],al
  42caa7:	xchg   ebx,eax
  42caa8:	inc    esp
  42caa9:	jmp    0x4d2de778
  42caae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42caaf:	push   ss
  42cab0:	pop    es
  42cab1:	stos   BYTE PTR es:[edi],al
  42cab2:	inc    ebx
  42cab3:	sbb    ecx,DWORD PTR [esi]
  42cab5:	jmp    0x5e08bdbd
  42caba:	or     DWORD PTR [esi-0x3a],esi
  42cabd:	xor    al,0x29
  42cabf:	ins    BYTE PTR es:[edi],dx
  42cac0:	push   eax
  42cac1:	in     eax,dx
  42cac2:	cmp    al,0x27
  42cac4:	push   cs
  42cac5:	xor    BYTE PTR [ecx-0x7],bl
  42cac8:	push   esi
  42cac9:	sub    DWORD PTR [esi+0x1d],0xf2dee907
  42cad0:	push   esi
  42cad1:	xchg   ecx,eax
  42cad2:	xchg   BYTE PTR [ebx],dl
  42cad4:	pop    es
  42cad5:	jmp    0x5af18dac
  42cada:	sar    DWORD PTR [edi-0x3f],1
  42cadd:	gs sub ebx,esi
  42cae0:	test   edx,ecx
  42cae2:	pop    es
  42cae3:	repz lds esi,FWORD PTR [ebx+0x4485587e]
  42caea:	(bad)  
  42caeb:	(bad)  [ebx]
  42caed:	push   ebp
  42caee:	add    edx,esp
  42caf0:	sub    eax,DWORD PTR [ecx+0x3]
  42caf3:	mov    eax,ds:0x4ccb6e59
  42caf8:	xchg   ebp,eax
  42caf9:	push   DWORD PTR ds:0x3986bc21
  42caff:	imul   esi,DWORD PTR [edi-0x1314c8d],0x67
  42cb06:	push   ecx
  42cb07:	jae    0x42cb0a
  42cb09:	add    BYTE PTR [ebx+0x47000000],al
  42cb0f:	push   edi
  42cb10:	call   0x497f46
  42cb15:	ins    BYTE PTR es:[edi],dx
  42cb16:	xor    BYTE PTR [edx],bh
  42cb18:	xor    DWORD PTR [edx-0x45],esi
  42cb1b:	push   cs
  42cb1c:	mov    edi,ebp
  42cb1e:	jge    0x42cb6a
  42cb20:	or     al,0x60
  42cb22:	stos   BYTE PTR es:[edi],al
  42cb23:	or     al,BYTE PTR [edi+0x418fe72c]
  42cb29:	in     eax,dx
  42cb2a:	addr16 add eax,0x8e1aed66
  42cb30:	je     0x42cb07
  42cb32:	stos   BYTE PTR es:[edi],al
  42cb33:	dec    ebx
  42cb34:	clc    
  42cb35:	jmp    0x42cb27
  42cb37:	push   es
  42cb38:	add    BYTE PTR [eax+0x39],dh
  42cb3b:	pop    ss
  42cb3c:	call   0x4a1ca6
  42cb41:	bound  esi,QWORD PTR [ecx]
  42cb43:	sbb    ecx,DWORD PTR [ecx-0x1947d00a]
  42cb49:	lock jmp 0x65bd:0xac9722ae
  42cb51:	(bad)  
  42cb52:	loop   0x42cae5
  42cb54:	je     0x42cbd3
  42cb56:	scas   eax,DWORD PTR es:[edi]
  42cb57:	(bad)  
  42cb58:	sti    
  42cb59:	jle    0x42cafd
  42cb5b:	mov    edx,eax
  42cb5d:	push   ss
  42cb5e:	ror    ebp,0xbd
  42cb61:	(bad)  
  42cb63:	pop    ecx
  42cb64:	xchg   DWORD PTR [ebp+0x76],edx
  42cb67:	lods   al,BYTE PTR ds:[esi]
  42cb68:	pop    ss
  42cb69:	mov    edx,0xba51d7ff
  42cb6e:	daa    
  42cb6f:	push   eax
  42cb70:	xchg   DWORD PTR [esi],esp
  42cb72:	add    BYTE PTR [eax],al
  42cb74:	add    al,bl
  42cb76:	pop    esp
  42cb77:	and    BYTE PTR [eax],al
  42cb79:	ret    
  42cb7a:	cmc    
  42cb7b:	and    ecx,DWORD PTR [ecx-0x3317e39b]
  42cb81:	sub    al,0xd6
  42cb83:	cmc    
  42cb84:	test   BYTE PTR [edx],cl
  42cb86:	push   es
  42cb87:	test   BYTE PTR [eax+0x5700041a],bh
  42cb8d:	xchg   edi,eax
  42cb8e:	push   edi
  42cb8f:	call   0xf671227c
  42cb94:	dec    DWORD PTR [esi-0x427bfa36]
  42cb9a:	or     al,BYTE PTR [eax]
  42cb9c:	add    BYTE PTR [ebx+0x6789efef],al
  42cba2:	fsub   st,st(1)
  42cba4:	add    bh,BYTE PTR [ecx]
  42cba6:	jae    0x42cc0c
  42cba8:	add    eax,0x50f84967
  42cbad:	sbb    eax,0xc466b6e3
  42cbb2:	(bad)  
  42cbb3:	xor    ebx,eax
  42cbb5:	mov    ch,0x87
  42cbb7:	add    DWORD PTR [eax],0xffffffda
  42cbba:	add    edi,DWORD PTR [ebx-0x8]
  42cbbd:	iret   
  42cbbe:	pop    eax
  42cbbf:	pop    edx
  42cbc0:	mov    ecx,DWORD PTR [edi]
  42cbc2:	shr    DWORD PTR [ecx],cl
  42cbc4:	inc    edi
  42cbc5:	mov    ds:0xca184641,al
  42cbca:	add    ah,bh
  42cbcc:	xor    edi,DWORD PTR [edx+eax*2-0x2d]
  42cbd0:	add    esp,edi
  42cbd2:	fiadd  DWORD PTR [edi+0x73ba8245]
  42cbd8:	hlt    
  42cbd9:	add    BYTE PTR [eax],al
  42cbdb:	add    BYTE PTR [ecx],bl
  42cbdd:	retf   
  42cbde:	add    eax,DWORD PTR [ebx+0x7533035c]
  42cbe4:	jbe    0x42cc44
  42cbe6:	cmp    al,0x72
  42cbe8:	(bad)  
  42cbe9:	adc    bl,BYTE PTR [ebp-0x18]
  42cbec:	dec    ebp
  42cbed:	sbb    BYTE PTR ds:0xfa635a00,bh
  42cbf3:	jbe    0x42cbe8
  42cbf5:	pop    es
  42cbf6:	pop    edx
  42cbf7:	add    BYTE PTR [ebp+0x5bc27b7c],bh
  42cbfd:	pushf  
  42cbfe:	push   0xbf2944fa
  42cc03:	jae    0x42cbb5
  42cc05:	sub    al,0x48
  42cc07:	and    dl,dh
  42cc09:	es sub dh,al
  42cc0c:	jp     0x42cbb0
  42cc0e:	sar    BYTE PTR [esi-0x44],cl
  42cc11:	leave  
  42cc12:	(bad)  
  42cc13:	icebp  
  42cc14:	mov    dh,0x19
  42cc16:	(bad)  
  42cc17:	je     0x42cb9c
  42cc19:	sub    al,0x4a
  42cc1b:	clc    
  42cc1c:	repz aas 
  42cc1e:	jge    0x42cc1a
  42cc20:	lods   al,BYTE PTR ds:[esi]
  42cc21:	aad    0xdb
  42cc23:	test   al,al
  42cc25:	adc    al,0x34
  42cc27:	sti    
  42cc28:	jle    0x42cbe3
  42cc2a:	jbe    0x42cbee
  42cc2c:	in     al,dx
  42cc2d:	pop    ebx
  42cc2e:	aam    0xe7
  42cc30:	adc    eax,DWORD PTR [esi-0x36]
  42cc33:	cli    
  42cc34:	ja     0x42cca6
  42cc36:	push   edi
  42cc37:	adc    ah,dl
  42cc39:	adc    eax,0xe23b14cb
  42cc3e:	add    BYTE PTR ds:[eax],al
  42cc41:	add    BYTE PTR [eax],al
  42cc43:	outs   dx,BYTE PTR ds:[esi]
  42cc44:	jo     0x42cc9d
  42cc46:	add    al,0x83
  42cc48:	scas   eax,DWORD PTR es:[edi]
  42cc49:	aad    0xfd
  42cc4b:	add    dh,BYTE PTR [eax+0x29]
  42cc4e:	push   edi
  42cc4f:	mov    edx,0x3c523471
  42cc54:	sbb    dl,BYTE PTR [eax+ebp*8]
  42cc57:	hlt    
  42cc58:	xchg   edx,eax
  42cc59:	sar    dl,1
  42cc5b:	outs   dx,BYTE PTR ds:[esi]
  42cc5c:	jo     0x42ccb5
  42cc5e:	sbb    bh,BYTE PTR [eax-0xc]
  42cc61:	daa    
  42cc62:	adc    al,0x70
  42cc64:	mov    eax,0xa82b7ec9
  42cc69:	leave  
  42cc6a:	jle    0x42cc97
  42cc6c:	fmul   st(1),st
  42cc6e:	jle    0x42cc43
  42cc70:	push   es
  42cc71:	stc    
  42cc72:	add    esp,esp
  42cc74:	es cmc 
  42cc76:	add    ebp,DWORD PTR [edx+0x4f]
  42cc79:	icebp  
  42cc7a:	jp     0x42ccc0
  42cc7c:	mov    dl,0xe6
  42cc7e:	adc    al,BYTE PTR [ecx-0x7c]
  42cc81:	cmp    bl,BYTE PTR [ecx-0x11]
  42cc84:	stc    
  42cc85:	sub    bl,bl
  42cc87:	out    0x91,al
  42cc89:	lods   al,BYTE PTR ds:[esi]
  42cc8a:	daa    
  42cc8b:	jecxz  0x42cc1e
  42cc8d:	sub    bh,BYTE PTR [ebp-0xe]
  42cc90:	scas   al,BYTE PTR es:[edi]
  42cc91:	ds into 
  42cc93:	sub    DWORD PTR [esi+0x5a7c464],edi
  42cc99:	add    DWORD PTR [esi],esi
  42cc9b:	mov    ebp,0x10db09bd
  42cca0:	xchg   edx,eax
  42cca1:	sub    ch,BYTE PTR [edi]
  42cca3:	test   eax,0xfc275f
  42cca8:	add    BYTE PTR [eax],al
  42ccaa:	cld    
  42ccab:	push   edx
  42ccac:	pop    esi
  42ccad:	loopne 0x42cd24
  42ccaf:	stos   BYTE PTR es:[edi],al
  42ccb0:	shl    BYTE PTR [edx],1
  42ccb2:	inc    ecx
  42ccb3:	mov    WORD PTR [ebx],gs
  42ccb5:	add    BYTE PTR [ebx-0x42],al
  42ccb8:	push   ebx
  42ccb9:	add    BYTE PTR [edx+eiz*8],cl
  42ccbc:	xor    eax,0xc10f5fcf
  42ccc1:	cmp    DWORD PTR [ebx],ecx
  42ccc3:	pop    es
  42ccc4:	jmp    0xfe51fc45
  42ccc9:	ret    0x82e9
  42cccc:	mov    eax,DWORD PTR [ebx]
  42ccce:	repz push es
  42ccd0:	aas    
  42ccd1:	add    bh,BYTE PTR [edx+ebx*2]
  42ccd4:	outs   dx,BYTE PTR ds:[esi]
  42ccd5:	(bad)  
  42ccd6:	mov    WORD PTR [esi-0x7d6631fd],es
  42ccdc:	test   al,0xfe
  42ccde:	jo     0x42cc70
  42cce0:	call   0x7498bfe8
  42cce5:	pop    eax
  42cce6:	fwait
  42cce7:	scas   al,BYTE PTR es:[edi]
  42cce8:	retf   
  42cce9:	push   0x6cffbd79
  42ccee:	mov    al,0x39
  42ccf0:	jge    0x42cd54
  42ccf2:	mov    ch,0x1e
  42ccf4:	das    
  42ccf5:	lods   al,BYTE PTR ds:[esi]
  42ccf6:	push   0x611d3484
  42ccfb:	std    
  42ccfc:	call   FWORD PTR [edi-0x55]
  42ccff:	mov    dl,0x85
  42cd01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd02:	pop    eax
  42cd03:	dec    esp
  42cd04:	mov    BYTE PTR [eax+edi*1+0x3d448a],ch
  42cd0b:	and    eax,0x6405
  42cd10:	add    BYTE PTR [ebx+0x52e4fb2],ch
  42cd16:	ret    0x6cd1
  42cd19:	xor    BYTE PTR [ecx],bh
  42cd1b:	cmp    ebp,DWORD PTR [edx-0x3d]
  42cd1e:	mov    edx,0x4de79c04
  42cd23:	lea    esp,[esp+edi*1+0x87cfb4d]
  42cd2a:	shl    BYTE PTR [ebp+ebp*8+0x2d],0xf8
  42cd2f:	cli    
  42cd30:	pop    ds
  42cd31:	imul   edi,DWORD PTR [ebp+0x73],0xffffffc7
  42cd35:	imul   eax,DWORD PTR [ebx+0x8],0x74bb2c20
  42cd3c:	push   DWORD PTR [ebx+0x49]
  42cd3f:	and    al,ch
  42cd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd42:	stc    
  42cd43:	adc    BYTE PTR [esi],ch
  42cd45:	sbb    eax,eax
  42cd47:	inc    edx
  42cd48:	adc    DWORD PTR [esi+0x30db2c13],esi
  42cd4e:	pop    es
  42cd4f:	sti    
  42cd50:	cmp    al,0xf3
  42cd52:	scas   al,BYTE PTR es:[edi]
  42cd53:	lods   eax,DWORD PTR cs:[esi]
  42cd55:	mov    esp,0xcbe8afc1
  42cd5a:	sbb    al,0x4f
  42cd5c:	sahf   
  42cd5d:	inc    esp
  42cd5e:	stos   DWORD PTR es:[edi],eax
  42cd5f:	xchg   BYTE PTR [esi-0x7e17cc5a],ch
  42cd65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd66:	sub    dl,bh
  42cd68:	add    BYTE PTR [ebp-0x36],ch
  42cd6b:	sub    eax,0xa00a7ff
  42cd70:	inc    eax
  42cd71:	mov    cl,bl
  42cd73:	jae    0x42cd81
  42cd75:	add    BYTE PTR [eax],al
  42cd77:	add    BYTE PTR [edx-0x48],dh
  42cd7a:	idiv   ch
  42cd7c:	int    0x18
  42cd7e:	rcr    BYTE PTR [esi+0x31],0x81
  42cd82:	mov    esp,0x82f54a08
  42cd87:	in     al,dx
  42cd88:	fldenv [esi-0x133eacf6]
  42cd8e:	adc    edx,DWORD PTR [edi-0x3f]
  42cd91:	dec    esp
  42cd92:	adc    bl,ch
  42cd94:	inc    eax
  42cd95:	pop    esi
  42cd96:	add    eax,0x4ad0578d
  42cd9b:	push   esi
  42cd9c:	add    ch,BYTE PTR [eax-0x7a0201a2]
  42cda2:	repnz add eax,0x45831077
  42cda8:	loop   0x42cdbf
  42cdaa:	sbb    BYTE PTR ds:[eax+0x4c32fbfb],al
  42cdb1:	mov    al,0x8b
  42cdb3:	push   eax
  42cdb4:	pop    es
  42cdb5:	inc    ecx
  42cdb6:	jl     0x42cda8
  42cdb8:	fxch   st(5)
  42cdba:	xchg   DWORD PTR [ebp-0x3a],ebx
  42cdbd:	xchg   cl,cl
  42cdbf:	add    BYTE PTR [ebx+0x45],ah
  42cdc2:	clc    
  42cdc3:	mov    BYTE PTR [edi],cl
  42cdc5:	xlat   BYTE PTR ds:[ebx]
  42cdc6:	lock rcr ebx,0x54
  42cdca:	add    al,0x85
  42cdcc:	call   0x4ef6:0xca6a1554
  42cdd3:	mov    eax,DWORD PTR [edi+ebx*8-0x35a39b79]
  42cdda:	jle    0x42cd9c
  42cddc:	add    BYTE PTR [eax],al
  42cdde:	add    BYTE PTR [edi],al
  42cde0:	xchg   edx,eax
  42cde1:	sub    al,0xc0
  42cde3:	fucomp st(5)
  42cde5:	enter  0xf3c3,0x28
  42cde9:	inc    edx
  42cdea:	lock jp 0x42cdd0
  42cded:	sti    
  42cdee:	xchg   BYTE PTR [esi],ch
  42cdf0:	cmp    dh,BYTE PTR [esi+0x41]
  42cdf3:	out    dx,eax
  42cdf4:	ss dec ebp
  42cdf6:	adc    BYTE PTR [edx+0x13],ch
  42cdf9:	clc    
  42cdfa:	scas   eax,DWORD PTR es:[edi]
  42cdfb:	repnz mov ah,ah
  42cdfe:	push   eax
  42cdff:	js     0x42ce6d
  42ce01:	test   BYTE PTR [esi-0x30885654],0x10
  42ce08:	jmp    FWORD PTR [edi]
  42ce0a:	push   edx
  42ce0b:	jo     0x42ce64
  42ce0d:	int3   
  42ce0e:	jae    0x42cde9
  42ce10:	xor    BYTE PTR [edi+0x7fadc904],bh
  42ce16:	shl    bl,1
  42ce18:	sahf   
  42ce19:	xchg   DWORD PTR cs:[eax*2-0x1bda9bbb],esi
  42ce21:	cmp    BYTE PTR [edi+0x727772a7],0x3
  42ce28:	leave  
  42ce29:	push   ebx
  42ce2a:	or     BYTE PTR [eax-0x45],dh
  42ce2d:	add    al,0x52
  42ce2f:	sbb    eax,ebx
  42ce31:	(bad)  
  42ce32:	cld    
  42ce33:	cld    
  42ce34:	aaa    
  42ce35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce36:	test   BYTE PTR [eax],bl
  42ce38:	cmp    DWORD PTR [edi],edi
  42ce3a:	test   ebp,esp
  42ce3c:	aaa    
  42ce3d:	cli    
  42ce3e:	gs cmp al,0xa1
  42ce41:	lock and eax,DWORD PTR [eax]
  42ce44:	add    BYTE PTR [eax],al
  42ce46:	add    eax,esi
  42ce48:	add    edi,DWORD PTR [edi-0x55]
  42ce4b:	rcr    edx,1
  42ce4d:	pop    es
  42ce4e:	and    eax,0xe82efd
  42ce53:	dec    esp
  42ce54:	(bad)  
  42ce55:	cli    
  42ce56:	clc    
  42ce57:	popa   
  42ce58:	push   eax
  42ce59:	sbb    eax,0x73c5af49
  42ce5e:	xlat   BYTE PTR ds:[ebx]
  42ce5f:	xlat   BYTE PTR ds:[ebx]
  42ce60:	jns    0x42ce23
  42ce62:	js     0x42ce6b
  42ce64:	scas   al,BYTE PTR es:[edi]
  42ce65:	fmul   QWORD PTR [eax+0x6c03e8ff]
  42ce6b:	dec    ebx
  42ce6c:	int    0xf3
  42ce6e:	jnp    0x42ce78
  42ce70:	les    eax,FWORD PTR fs:[eax]
  42ce73:	add    edi,DWORD PTR [ecx]
  42ce75:	add    eax,0xdc160f94
  42ce7a:	fdivr  QWORD PTR [ebp-0x38e1348d]
  42ce80:	or     ch,BYTE PTR [edi]
  42ce82:	retf   0xf0c4
  42ce85:	add    eax,esi
  42ce87:	lea    ecx,[edi+edi*2-0x51]
  42ce8b:	push   cs
  42ce8c:	data16 fdivr st,st(4)
  42ce8f:	push   ebp
  42ce90:	pop    esi
  42ce91:	sub    edi,esi
  42ce93:	in     eax,0x25
  42ce95:	xor    bh,BYTE PTR [esi+edi*4-0x6f8f04c7]
  42ce9c:	call   0x5c94c1a4
  42cea1:	push   ecx
  42cea2:	and    ebp,DWORD PTR [edi-0x45e69944]
  42cea8:	les    eax,FWORD PTR fs:[eax]
  42ceab:	add    BYTE PTR [eax],al
  42cead:	mov    al,ds:0x728ce3a
  42ceb2:	xor    dl,BYTE PTR [edx-0x547204ab]
  42ceb8:	sti    
  42ceb9:	lds    eax,FWORD PTR [ebx-0x7]
  42cebc:	push   esi
  42cebd:	xchg   BYTE PTR [ebp-0x7b132c75],al
  42cec3:	or     edi,0xffffffe4
  42cec6:	das    
  42cec7:	jmp    0x6df63696
  42cecc:	ret    0x33d9
  42cecf:	(bad)  
  42ced1:	imul   esp,DWORD PTR ds:0xc670cacb,0x3c
  42ced8:	ss push ebp
  42ceda:	add    al,0x6c
  42cedc:	inc    eax
  42cedd:	mov    ebx,0xcf1e0056
  42cee2:	popa   
  42cee3:	pop    esi
  42cee4:	scas   eax,DWORD PTR es:[edi]
  42cee5:	mov    ecx,0x43ecf838
  42ceea:	dec    eax
  42ceeb:	xchg   DWORD PTR [edi+eiz*4],edx
  42ceee:	call   0x4551c065
  42cef3:	sbb    cl,bl
  42cef5:	xor    edi,DWORD PTR [ebx-0x1780e37a]
  42cefb:	mov    edi,0x4bb83a72
  42cf00:	jns    0x42cef1
  42cf02:	xor    bh,al
  42cf04:	fidiv  DWORD PTR [ebx-0xcd7814e]
  42cf0a:	cmp    eax,edx
  42cf0c:	jmp    0xdd3322f8
  42cf11:	add    BYTE PTR [eax],al
  42cf13:	add    BYTE PTR [eax-0x80],cl
  42cf16:	push   esp
  42cf17:	push   ebp
  42cf18:	cmc    
  42cf19:	push   ebx
  42cf1a:	or     al,0xbd
  42cf1c:	dec    esi
  42cf1d:	mov    cs,WORD PTR [ecx+edi*1-0x49]
  42cf21:	inc    edx
  42cf22:	hlt    
  42cf23:	repnz mov bl,0xa
  42cf26:	jae    0x42cf0e
  42cf28:	mov    esi,0x18b43666
  42cf2d:	aaa    
  42cf2e:	xchg   edi,eax
  42cf2f:	(bad)  [eax]
  42cf31:	pop    edi
  42cf32:	push   edi
  42cf33:	and    BYTE PTR [esi],dh
  42cf35:	add    DWORD PTR [eax],eax
  42cf37:	pop    ss
  42cf38:	mov    bl,0xba
  42cf3a:	add    BYTE PTR [esi+eiz*1-0x7e],bh
  42cf3e:	icebp  
  42cf3f:	jne    0x42cf5b
  42cf41:	xor    BYTE PTR [ecx+edi*8+0x68],0x45
  42cf46:	adc    al,0x60
  42cf48:	inc    ecx
  42cf49:	jns    0x4ad2aa8d
  42cf4f:	stc    
  42cf50:	add    BYTE PTR [edi],0xe7
  42cf53:	mov    ah,0x1c
  42cf55:	sub    bl,0x62
  42cf58:	xor    DWORD PTR [edi],ecx
  42cf5a:	xchg   DWORD PTR [eax],eax
  42cf5c:	add    al,0xbf
  42cf5e:	adc    eax,0xec7973e9
  42cf64:	retf   0xf483
  42cf67:	(bad)  
  42cf68:	ficom  WORD PTR [ebp+0x62]
  42cf6b:	add    bl,bl
  42cf6d:	repnz add dh,0x82
  42cf71:	int    0x5c
  42cf73:	(bad)  
  42cf74:	xchg   DWORD PTR gs:[edx+0x74],edi
  42cf7b:	repnz pop eax
  42cf7d:	add    eax,0x4ad6cf8d
  42cf82:	push   esi
  42cf83:	bound  esi,QWORD PTR [eax-0x7e1a01a7]
  42cf89:	repnz add eax,0x4e82f75f
  42cf8f:	repnz adc ecx,DWORD PTR [ebp-0xc]
  42cf93:	sti    
  42cf94:	out    dx,eax
  42cf95:	repz mov cl,BYTE PTR [ebx]
  42cf98:	cmp    eax,eax
  42cf9a:	xor    cl,BYTE PTR [edi-0x4aff9b34]
  42cfa0:	push   esp
  42cfa1:	or     al,0xc
  42cfa3:	dec    ebx
  42cfa4:	iret   
  42cfa5:	jo     0x42cfaf
  42cfa7:	sub    dl,al
  42cfa9:	add    BYTE PTR [ebp-0x1e],0x39
  42cfad:	shr    eax,0xc9
  42cfb0:	and    dh,dh
  42cfb2:	dec    DWORD PTR [esi+0x702d6ec2]
  42cfb8:	add    al,0x8d
  42cfba:	inc    ebp
  42cfbb:	div    dl
  42cfbd:	popa   
  42cfbe:	add    eax,0x50f3f787
  42cfc3:	cmc    
  42cfc4:	adc    eax,0xb1a615f7
  42cfc9:	cmp    al,BYTE PTR [eax]
  42cfcb:	dec    edi
  42cfcc:	ret    
  42cfcd:	outs   dx,BYTE PTR ds:[esi]
  42cfce:	adc    eax,0x5fc4149
  42cfd3:	aas    
  42cfd4:	mov    esi,0xd0f336f5
  42cfd9:	cmp    BYTE PTR [eax],ch
  42cfdb:	les    esi,FWORD PTR [edx+0xe12]
  42cfe1:	add    BYTE PTR [ebx],dh
  42cfe3:	scas   al,BYTE PTR es:[edi]
  42cfe4:	mov    es,WORD PTR [eax]
  42cfe6:	stos   BYTE PTR es:[edi],al
  42cfe7:	ins    BYTE PTR es:[edi],dx
  42cfe8:	adc    al,0xc0
  42cfea:	mov    edx,0x964f716c
  42cfef:	sub    al,0xcd
  42cff1:	or     ch,ah
  42cff3:	sub    BYTE PTR [edx],bh
  42cff5:	add    ebx,esi
  42cff7:	lods   eax,DWORD PTR ds:[esi]
  42cff8:	(bad)  
  42cff9:	and    esp,DWORD PTR [esi-0x16]
  42cffc:	mov    al,ds:0xc62df33d
  42d001:	sub    al,BYTE PTR [edi]
  42d003:	mov    al,ds:0xb1c9f87e
  42d008:	in     eax,0x7f
  42d00a:	cmp    cl,ch
  42d00c:	jle    0x42d006
  42d00e:	rcr    al,cl
  42d010:	test   BYTE PTR [edi],ah
  42d012:	repnz lods eax,DWORD PTR ds:[esi]
  42d014:	(bad)  
  42d015:	jg     0x42d071
  42d017:	mov    ds:0xaeec82f7,eax
  42d01c:	(bad)  
  42d01d:	(bad)  
  42d01e:	fnstenv [ecx-0x60350225]
  42d024:	es mov edi,0xc57f1e69
  42d02a:	shr    DWORD PTR ds:0xa6a160cd,cl
  42d030:	jle    0x42d027
  42d032:	cdq    
  42d033:	mov    al,0x80
  42d035:	add    dh,dl
  42d037:	lods   eax,DWORD PTR ds:[esi]
  42d038:	(bad)  
  42d039:	jg     0x42d045
  42d03b:	shl    edi,cl
  42d03d:	test   BYTE PTR [eax],cl
  42d03f:	lods   eax,DWORD PTR ds:[esi]
  42d040:	(bad)  
  42d041:	dec    DWORD PTR [ecx+0xbf26da]
  42d047:	add    BYTE PTR [eax],al
  42d049:	jae    0x42d051
  42d04b:	sbb    BYTE PTR [ebx],cl
  42d04d:	jbe    0x42d05d
  42d04f:	(bad)  
  42d050:	push   ebx
  42d052:	mov    eax,esi
  42d054:	push   edi
  42d055:	mov    al,0x7
  42d057:	imul   ecx,ebp,0xe5640609
  42d05d:	int3   
  42d05e:	mov    dh,0xe8
  42d060:	pop    ecx
  42d061:	loopne 0x42d0b1
  42d063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d064:	test   BYTE PTR [ebx+0x4d003c52],bh
  42d06a:	mov    ebx,db0
  42d06d:	jbe    0x42d037
  42d06f:	in     al,0x23
  42d071:	out    0x27,eax
  42d073:	aaa    
  42d074:	add    bh,bl
  42d076:	xor    BYTE PTR [ebx],bl
  42d078:	in     al,dx
  42d079:	adc    al,0xb0
  42d07b:	fadd   DWORD PTR [edi-0xa]
  42d07e:	xchg   BYTE PTR [edi+0x6905090d],cl
  42d084:	int    0xca
  42d086:	cmp    dh,al
  42d088:	cmp    DWORD PTR [ebx-0x1c],0xffffffe9
  42d08c:	sbb    BYTE PTR [edi+eax*1+0x11cd03e9],0x11
  42d094:	ret    
  42d095:	jbe    0x42d05f
  42d097:	hlt    
  42d098:	and    edx,DWORD PTR [edi]
  42d09a:	sub    bh,dl
  42d09c:	dec    DWORD PTR [eax]
  42d09e:	xor    ebx,ebx
  42d0a0:	rol    esp,cl
  42d0a2:	scas   eax,DWORD PTR es:[edi]
  42d0a3:	sbb    BYTE PTR [eax-0xa],cl
  42d0a6:	xchg   BYTE PTR [edi],bh
  42d0a8:	or     eax,0xcd68acb9
  42d0ad:	add    BYTE PTR [eax],al
  42d0af:	add    dl,bl
  42d0b1:	cmp    cl,BYTE PTR [eax-0x7c]
  42d0b4:	sub    esp,esp
  42d0b6:	mov    ah,0xa7
  42d0b8:	pushf  
  42d0b9:	scas   eax,DWORD PTR es:[edi]
  42d0ba:	shl    esi,1
  42d0bc:	jo     0x42d0dd
  42d0be:	sbb    al,bh
  42d0c0:	or     DWORD PTR [edi-0x80f5f1],eax
  42d0c6:	push   0x803bb9cd
  42d0cb:	pop    ecx
  42d0cc:	fmul   DWORD PTR [esi+0x26]
  42d0cf:	pop    edx
  42d0d0:	cmovg  eax,DWORD PTR [eax]
  42d0d3:	sub    ch,BYTE PTR [edi-0x52]
  42d0d6:	pop    esp
  42d0d7:	je     0x42d0b5
  42d0d9:	sub    edx,DWORD PTR [esi]
  42d0db:	inc    ecx
  42d0dc:	mov    al,0x35
  42d0de:	stc    
  42d0df:	sbb    DWORD PTR [ebx],edi
  42d0e1:	or     al,0x80
  42d0e3:	shl    bh,1
  42d0e5:	xor    BYTE PTR [ecx],dl
  42d0e7:	arpl   WORD PTR [edi+0x4e052001],si
  42d0ed:	and    eax,0x394efd04
  42d0f2:	add    eax,0x74fbb769
  42d0f7:	sbb    al,0x39
  42d0f9:	adc    BYTE PTR [eax-0x56],bl
  42d0fc:	jo     0x42d0ac
  42d0fe:	sub    ch,dh
  42d100:	or     al,0xeb
  42d102:	cli    
  42d103:	xchg   esi,eax
  42d104:	lods   eax,DWORD PTR ds:[esi]
  42d105:	xor    eax,0x752ccef9
  42d10a:	jg     0x42d09c
  42d10c:	loopne 0x42d094
  42d10e:	clc    
  42d10f:	lock mov ebp,0xd465e5
  42d115:	add    BYTE PTR [eax],al
  42d117:	sbb    BYTE PTR [esi+0xa],dh
  42d11a:	aaa    
  42d11b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d11c:	xor    eax,0x46d0f1b6
  42d121:	add    cl,ch
  42d123:	mov    ds:0x11507fe8,eax
  42d128:	cmp    al,0xa0
  42d12a:	ret    
  42d12b:	pop    ss
  42d12c:	dec    edi
  42d12d:	mov    edi,0x7fd666f6
  42d132:	sub    DWORD PTR [eax],0x55
  42d135:	inc    eax
  42d136:	jmp    0xc3470c2b
  42d13b:	ror    BYTE PTR [esi-0x41],1
  42d13e:	imul   esp,DWORD PTR [edi],0x70067414
  42d144:	scas   al,BYTE PTR es:[edi]
  42d145:	cmp    bl,BYTE PTR [ebp-0x56401a0f]
  42d14b:	xor    DWORD PTR [eax],eax
  42d14d:	mov    dl,0x0
  42d14f:	fisttp DWORD PTR [ecx+0x487a08b4]
  42d155:	add    BYTE PTR [eax],al
  42d157:	addr16 fabs 
  42d15a:	in     al,0xbd
  42d15c:	or     bh,0x80
  42d15f:	nop
  42d160:	mov    bl,0x5a
  42d162:	inc    eax
  42d163:	fimul  DWORD PTR [eax]
  42d165:	je     0x42d16b
  42d167:	xor    cl,ch
  42d169:	push   edi
  42d16a:	ret    
  42d16b:	dec    edx
  42d16c:	rcr    BYTE PTR [ecx],0x74
  42d16f:	mov    cs,WORD PTR [ebx+0x76e73ff7]
  42d175:	loope  0x42d167
  42d177:	lea    eax,[edx+0x80cf]
  42d17d:	add    BYTE PTR [eax],ah
  42d17f:	mov    bl,0x5a
  42d181:	inc    eax
  42d182:	mov    cl,BYTE PTR [eax]
  42d184:	jne    0x42d14f
  42d186:	sbb    al,al
  42d188:	sbb    DWORD PTR [esi+edx*2-0x32],esi
  42d18c:	mov    ah,0x8b
  42d18e:	ins    DWORD PTR es:[edi],dx
  42d18f:	(bad)  
  42d190:	mov    ds:0xa3cf8a42,eax
  42d195:	inc    edx
  42d196:	pop    edx
  42d197:	scas   eax,DWORD PTR es:[edi]
  42d198:	mov    al,ds:0xa0a05a42
  42d19d:	inc    edx
  42d19e:	dec    edx
  42d19f:	adc    eax,0x1e4a429e
  42d1a4:	mov    eax,ds:0xa1395a42
  42d1a9:	inc    edx
  42d1aa:	pop    edx
  42d1ab:	inc    edx
  42d1ac:	sahf   
  42d1ad:	inc    edx
  42d1ae:	dec    edx
  42d1af:	loop   0x42d14e
  42d1b1:	inc    edx
  42d1b2:	dec    edx
  42d1b3:	jae    0x42d155
  42d1b5:	inc    edx
  42d1b6:	sbb    al,BYTE PTR [ecx+0x771a42a0]
  42d1bc:	mov    al,ds:0xa0d00a42
  42d1c1:	inc    edx
  42d1c2:	or     dh,BYTE PTR [edx-0x5be5bd63]
  42d1c8:	popf   
  42d1c9:	inc    edx
  42d1ca:	repz popf 
  42d1cc:	push   cs
  42d1cd:	mov    ds:0x87299db1,eax
  42d1d2:	pop    es
  42d1d3:	and    eax,esp
  42d1d5:	div    DWORD PTR [eax+0x1]
  42d1d8:	sbb    BYTE PTR [edi-0x78d031ca],al
  42d1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1e0:	sub    al,0x87
  42d1e2:	add    BYTE PTR [eax],al
  42d1e4:	add    bl,ah
  42d1e6:	adc    ah,al
  42d1e8:	mov    BYTE PTR [edi],dh
  42d1ea:	or     ch,ah
  42d1ec:	mov    BYTE PTR [edi],ch
  42d1ee:	add    dh,ah
  42d1f0:	mov    BYTE PTR [edi],dh
  42d1f2:	or     ch,al
  42d1f4:	mov    BYTE PTR [edi],ch
  42d1f6:	add    dh,al
  42d1f8:	test   DWORD PTR ds:0xcf4376dd,esi
  42d1fe:	test   al,0x7e
  42d200:	arpl   di,dx
  42d202:	test   al,0x43
  42d204:	push   ebx
  42d205:	push   0xf473f7ea
  42d20a:	sar    BYTE PTR [esi-0x150c518],1
  42d210:	push   DWORD PTR [esi+0x66]
  42d213:	dec    ecx
  42d214:	inc    ebp
  42d215:	imul   edi,ebx,0xb93a83fe
  42d21b:	adc    eax,DWORD PTR [eax-0x16b36096]
  42d221:	jae    0x42d259
  42d223:	sti    
  42d224:	jae    0x42d275
  42d226:	sbb    eax,0xf4c710c6
  42d22b:	jle    0x42d225
  42d22d:	push   es
  42d22e:	shl    edi,cl
  42d230:	xchg   BYTE PTR [eax-0x4040864b],dh
  42d236:	adc    BYTE PTR [eax-0x37],bh
  42d239:	sub    al,0xd
  42d23b:	jp     0x42d1fc
  42d23d:	lahf   
  42d23e:	call   0xa4713bb
  42d243:	jge    0x42d250
  42d245:	in     al,dx
  42d246:	push   es
  42d247:	jno    0x42d286
  42d249:	add    BYTE PTR [eax],al
  42d24b:	add    al,ah
  42d24d:	lahf   
  42d24e:	pop    ecx
  42d24f:	pop    ds
  42d250:	jnp    0x42d254
  42d252:	loope  0x42d2cf
  42d254:	mov    dl,0x1b
  42d256:	(bad)  
  42d257:	ret    
  42d258:	mov    ah,0x9d
  42d25a:	call   0x6ef5bf51
  42d25f:	cmp    eax,0x4ec2f2f2
  42d264:	idiv   DWORD PTR [edi+0x6c]
  42d267:	pop    ds
  42d268:	div    edx
  42d26a:	sbb    BYTE PTR [ecx],bh
  42d26c:	idiv   DWORD PTR [edi+0x5c]
  42d26f:	call   0x3fb554
  42d274:	jmp    0x8eb:0x388ce539
  42d27b:	xchg   ecx,eax
  42d27c:	lock add DWORD PTR [eax+0x40],esi
  42d280:	iret   
  42d281:	push   ss
  42d282:	pusha  
  42d283:	dec    eax
  42d284:	xlat   BYTE PTR ds:[ebx]
  42d285:	jmp    0x12e4:0x8ae9bbed
  42d28c:	repz push es
  42d28e:	imul   eax,DWORD PTR [edx-0xe],0x235eee
  42d295:	pop    ss
  42d296:	mov    cl,BYTE PTR [edx-0x11]
  42d299:	xchg   DWORD PTR [edx],eax
  42d29b:	or     bl,dh
  42d29d:	inc    esi
  42d29e:	call   0xcccaa6
  42d2a3:	adc    esi,ebx
  42d2a5:	push   es
  42d2a6:	pop    esi
  42d2a7:	inc    ecx
  42d2a8:	jmp    0x42d2ab
  42d2aa:	fwait
  42d2ab:	dec    edx
  42d2ac:	repnz ds mov sp,0x0
  42d2b2:	add    BYTE PTR [edi],al
  42d2b4:	add    ch,BYTE PTR [edx-0x50]
  42d2b7:	jmp    0x1105bbc2
  42d2bc:	mov    ebx,ds
  42d2be:	jl     0x42d2ae
  42d2c0:	push   es
  42d2c1:	imul   edi,DWORD PTR [edi+0x6d0001f7],0xe9000063
  42d2cb:	jo     0x42d286
  42d2cd:	add    eax,0x9d174f6
  42d2d2:	jmp    0xea6459c7
  42d2d7:	jne    0x42d319
  42d2d9:	or     BYTE PTR [esi],cl
  42d2db:	ins    BYTE PTR es:[edi],dx
  42d2dc:	inc    eax
  42d2dd:	or     al,0x6
  42d2df:	jge    0x42d2e8
  42d2e1:	add    BYTE PTR [edx],0x37
  42d2e4:	inc    BYTE PTR [ebx+0x6f61a]
  42d2ea:	lds    edx,FWORD PTR [ecx+ecx*4+0x83aaf01]
  42d2f1:	adc    edx,edx
  42d2f3:	inc    edi
  42d2f4:	xor    dh,bh
  42d2f6:	in     al,0xe1
  42d2f8:	mov    dl,BYTE PTR [esi-0x7ff90f1a]
  42d2fe:	ret    0xfdfe
  42d301:	test   BYTE PTR [edx-0x7],ah
  42d304:	push   es
  42d305:	add    BYTE PTR [edi-0x3dccf7d6],ch
  42d30b:	rdmsr  
  42d30d:	div    esp
  42d30f:	loope  0x42d29b
  42d311:	mov    ebx,esi
  42d313:	lock push es
  42d315:	adc    BYTE PTR [edx-0x12000000],0xfd
  42d31c:	test   BYTE PTR [edi-0x1a],ch
  42d31f:	push   es
  42d320:	add    BYTE PTR [edx+0x2c],ch
  42d323:	jmp    0x42d338
  42d325:	jmp    0xbb441a64
  42d32a:	and    al,0x8b
  42d32c:	xchg   BYTE PTR [esi],ah
  42d32e:	add    ecx,DWORD PTR [edi+edi*4+0x53885cdd]
  42d335:	add    eax,0xd4b89eb
  42d33a:	out    0xe9,eax
  42d33c:	lds    edi,FWORD PTR [eax+0xfabf65]
  42d342:	or     bh,BYTE PTR [edi-0x46]
  42d345:	je     0x42d367
  42d347:	add    DWORD PTR [eax+0x17],0xffffffee
  42d34b:	jle    0x42d353
  42d34d:	add    al,0x92
  42d34f:	aas    
  42d350:	jp     0x7f66dfb2
  42d356:	or     BYTE PTR [ecx+0x24],0xf
  42d35a:	adc    eax,0xa00797e
  42d35f:	add    eax,0x18be647b
  42d364:	add    cl,ch
  42d366:	(bad)  
  42d367:	(bad)
  42d36a:	dec    edx
  42d36b:	jno    0x42d387
  42d36d:	cmovle ebx,eax
  42d370:	add    DWORD PTR [eax],eax
  42d372:	fiadd  DWORD PTR [ecx+esi*8-0x3e772af7]
  42d379:	or     ecx,edx
  42d37b:	add    al,0xbe
  42d37d:	inc    esi
  42d37e:	add    BYTE PTR [eax],al
  42d380:	add    bl,cl
  42d382:	mov    eax,ds:0xc6b52ce7
  42d387:	cmc    
  42d388:	xor    BYTE PTR [ecx-0x27af8ff],0x9
  42d38f:	add    BYTE PTR [eax],al
  42d391:	adc    ch,bh
  42d393:	mov    edi,0x31c98e8
  42d398:	(bad)  
  42d399:	phaddd mm0,QWORD PTR [eax]
  42d39d:	mov    bh,BYTE PTR [esi+0x1ca20140]
  42d3a3:	or     esi,DWORD PTR [ebp+0x60]
  42d3a6:	test   BYTE PTR [eax+0x16],bh
  42d3a9:	dec    edi
  42d3aa:	clc    
  42d3ab:	add    esi,DWORD PTR [ebx]
  42d3ad:	mov    ah,BYTE PTR [edx-0x7]
  42d3b0:	xor    cl,BYTE PTR [edx+0x5de0c04b]
  42d3b6:	add    al,BYTE PTR [esp+0x55]
  42d3ba:	jl     0x42d3fc
  42d3bc:	pop    ss
  42d3bd:	repz and al,0x49
  42d3c0:	adc    BYTE PTR [esi-0x22],ch
  42d3c3:	aaa    
  42d3c4:	vmread eax,edi
  42d3c7:	ror    bh,0x70
  42d3ca:	push   esi
  42d3cb:	add    al,0x74
  42d3cd:	jmp    0x9bc7e337
  42d3d2:	iret   
  42d3d3:	(bad)  
  42d3d4:	push   DWORD PTR [ebx-0x48]
  42d3d7:	jle    0x42d35e
  42d3d9:	lods   eax,DWORD PTR ds:[esi]
  42d3da:	mov    eax,0x626b7ae2
  42d3df:	loop   0x42d3eb
  42d3e1:	in     al,0x29
  42d3e3:	into   
  42d3e4:	stc    
  42d3e5:	add    BYTE PTR [eax],al
  42d3e7:	add    ah,ch
  42d3e9:	or     BYTE PTR [ebp-0x1431f0bd],cl
  42d3ef:	inc    esp
  42d3f0:	out    dx,eax
  42d3f1:	push   es
  42d3f2:	cmp    DWORD PTR [ebx],ecx
  42d3f4:	repz popf 
  42d3f6:	mov    eax,DWORD PTR [edi+edi*8+0x14]
  42d3fa:	dec    eax
  42d3fb:	and    al,0xe3
  42d3fd:	xor    al,0x51
  42d3ff:	or     al,0xf0
  42d401:	loop   0x42d416
  42d403:	cdq    
  42d404:	push   0xd74385d3
  42d409:	adc    eax,0x4fb418d
  42d40e:	shl    DWORD PTR [edx+0x3],1
  42d411:	in     al,dx
  42d412:	add    eax,0xec0a2f37
  42d417:	outs   dx,BYTE PTR ds:[esi]
  42d418:	sti    
  42d419:	xor    al,0xcf
  42d41b:	mov    BYTE PTR [edi],dh
  42d41d:	retf   0xe6f2
  42d420:	jmp    0x42d446
  42d422:	push   ebx
  42d423:	and    al,0xcb
  42d425:	cmp    esp,DWORD PTR es:[edi+eiz*1]
  42d429:	sbb    eax,0x9e0b243b
  42d42e:	xor    DWORD PTR [eax],ecx
  42d430:	push   0x6a0fe2b9
  42d435:	mov    eax,ds:0x71817e2
  42d43a:	daa    
  42d43b:	sbb    al,0xb7
  42d43d:	jmp    0x475d:0xfeb28b14
  42d444:	movhps QWORD PTR [edi+eax*2+0x3],xmm3
  42d449:	mov    al,0x6f
  42d44b:	inc    edi
  42d44c:	add    BYTE PTR [eax],al
  42d44e:	add    bh,cl
  42d450:	push   ss
  42d451:	outs   dx,BYTE PTR ds:[esi]
  42d452:	dec    ecx
  42d453:	jmp    0x42d450
  42d455:	daa    
  42d456:	mov    ch,BYTE PTR [edx-0x6e7925fe]
  42d45c:	add    ecx,ebp
  42d45e:	add    esi,DWORD PTR [ecx]
  42d460:	dec    eax
  42d461:	call   0xcd8d8e67
  42d466:	sbb    ebp,eax
  42d468:	mov    bl,BYTE PTR [ecx+eax*8+0x3e6daee9]
  42d46f:	sti    
  42d470:	and    DWORD PTR [ecx+0x7cc77617],0xc5536dee
  42d47a:	sbb    esi,DWORD PTR [ebx+edi*1+0xd]
  42d47e:	adc    al,0xc
  42d480:	shl    DWORD PTR [edi],0x55
  42d483:	je     0x42d442
  42d485:	rcl    esp,1
  42d487:	outs   dx,DWORD PTR ds:[esi]
  42d488:	(bad)  
  42d489:	push   esp
  42d48a:	or     dh,BYTE PTR [ebp+0x45]
  42d48d:	(bad)  
  42d48f:	jb     0x42d48c
  42d491:	loop   0x42d41e
  42d493:	xor    dl,BYTE PTR [esi]
  42d495:	pop    edi
  42d496:	inc    esi
  42d497:	add    bl,ah
  42d499:	sub    DWORD PTR [eax+esi*1+0x6e0ef1e3],ecx
  42d4a0:	inc    ecx
  42d4a1:	call   0xdce8:0xc8a79bf
  42d4a8:	push   es
  42d4a9:	or     BYTE PTR [esi],0x69
  42d4ac:	scas   al,BYTE PTR es:[edi]
  42d4ad:	add    DWORD PTR [ebp+ebx*2+0x87e9fc],0xfbe90000
  42d4b8:	(bad)  
  42d4b9:	call   0xe4395bae
  42d4be:	std    
  42d4bf:	add    BYTE PTR [ecx],0xf4
  42d4c2:	lock push es
  42d4c4:	xchg   BYTE PTR [edi-0x1a7a1d1b],ah
  42d4ca:	jmp    0xc206:0xf0dcf09f
  42d4d1:	scas   eax,DWORD PTR es:[edi]
  42d4d2:	out    dx,eax
  42d4d3:	lods   eax,DWORD PTR ds:[esi]
  42d4d4:	test   esi,edi
  42d4d6:	imul   esi,DWORD PTR [ecx+0x2636d0a],0x0
  42d4dd:	jmp    0x3f3d955b
  42d4e2:	jp     0x42d552
  42d4e4:	jae    0x42d4d9
  42d4e6:	push   0x48
  42d4e8:	adc    ecx,ebp
  42d4ea:	outs   dx,DWORD PTR ds:[esi]
  42d4eb:	add    al,BYTE PTR [ecx]
  42d4ed:	popa   
  42d4ee:	xor    eax,0xfdaf861a
  42d4f3:	loop   0x42d56f
  42d4f5:	jno    0x42d522
  42d4f7:	jecxz  0x42d503
  42d4f9:	out    0x6c,al
  42d4fb:	les    ecx,FWORD PTR [ebx]
  42d4fd:	jmp    0xd865af2
  42d502:	(bad)  
  42d504:	inc    esp
  42d505:	in     eax,dx
  42d506:	xor    BYTE PTR [eax+0x6f0e768],ah
  42d50c:	adc    dl,0x44
  42d50f:	xor    al,0x6
  42d511:	jae    0x42d501
  42d513:	loop   0x42d511
  42d515:	in     eax,dx
  42d516:	idiv   DWORD PTR [esi+0x1]
  42d519:	ret    0x0
  42d51c:	add    BYTE PTR [ebx-0x79],al
  42d51f:	mul    BYTE PTR [esp+edi*8]
  42d522:	or     DWORD PTR [esp+esi*8],0xfffffff0
  42d526:	push   es
  42d527:	add    bh,0x3c
  42d52a:	mov    DWORD PTR [ecx-0x1],0xea41c8f2
  42d531:	repnz enter 0x41,0x5b
  42d536:	pop    ss
  42d537:	jmp    0x4c23ce
  42d53c:	and    BYTE PTR [eax+ecx*1],0x7b
  42d540:	dec    esi
  42d541:	push   edx
  42d542:	ins    BYTE PTR es:[edi],dx
  42d543:	jns    0x42d593
  42d545:	ds ins BYTE PTR es:[edi],dx
  42d547:	jp     0x42d544
  42d549:	inc    eax
  42d54a:	cmc    
  42d54b:	mov    eax,DWORD PTR [eax-0x788be95f]
  42d551:	call   0x6d0:0x970f4270
  42d558:	add    BYTE PTR [edx],cl
  42d55a:	ret    
  42d55b:	inc    eax
  42d55c:	add    DWORD PTR [edi],eax
  42d55e:	pop    edx
  42d55f:	jae    0x42d560
  42d561:	(bad)  [edx+edi*2-0x5]
  42d565:	inc    esi
  42d566:	cld    
  42d567:	test   BYTE PTR [ebx+ecx*1+0x44c60009],cl
  42d56e:	add    bh,dh
  42d570:	call   0x42d218
  42d575:	pop    edx
  42d576:	jno    0x42d5c6
  42d578:	xorps  xmm5,xmm6
  42d57b:	add    BYTE PTR [eax],al
  42d57d:	retf   0x40c2
  42d580:	add    DWORD PTR [eax],eax
  42d582:	add    BYTE PTR [eax],al
  42d584:	aad    0x5b
  42d586:	cmp    eax,0x8008da0c
  42d58b:	sti    
  42d58c:	cli    
  42d58d:	stc    
  42d58e:	test   BYTE PTR [eax-0x35],ch
  42d591:	or     BYTE PTR [eax],al
  42d593:	(bad)  
  42d594:	aam    0x7
  42d596:	or     cl,ch
  42d598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d599:	cld    
  42d59a:	(bad)  
  42d59b:	dec    DWORD PTR [edx]
  42d59d:	outs   dx,BYTE PTR ds:[esi]
  42d59e:	and    eax,0x155070f
  42d5a3:	add    BYTE PTR [edx-0x7cfebf3e],bl
  42d5a9:	popa   
  42d5aa:	sbb    DWORD PTR [edx+ecx*4],ecx
  42d5ad:	or     BYTE PTR [ebp-0x920cbd],cl
  42d5b3:	or     ah,ah
  42d5b5:	out    dx,eax
  42d5b6:	and    DWORD PTR [ebx],ecx
  42d5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5b9:	popa   
  42d5ba:	and    DWORD PTR [edi+0x4b],edi
  42d5bd:	outs   dx,BYTE PTR ds:[esi]
  42d5be:	and    al,0x89
  42d5c0:	lods   eax,DWORD PTR ds:[esi]
  42d5c1:	int    0xc4
  42d5c3:	inc    ecx
  42d5c4:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5c7:	add    dh,bh
  42d5c9:	popf   
  42d5ca:	(bad)  
  42d5cb:	jg     0x42d605
  42d5cd:	cld    
  42d5ce:	xor    cl,BYTE PTR [ecx]
  42d5d0:	sub    eax,0x1a06fd5c
  42d5d5:	push   edi
  42d5d6:	or     DWORD PTR [eax],eax
  42d5d8:	repz sbb eax,0x179f2fb9
  42d5de:	test   dh,dh
  42d5e0:	fidiv  DWORD PTR [ecx+eiz*8+0x61]
  42d5e4:	js     0x42d64a
  42d5e6:	push   cs
  42d5e7:	bound  eax,QWORD PTR [eax]
  42d5e9:	add    BYTE PTR [eax],al
  42d5eb:	cwde   
  42d5ec:	fld    QWORD PTR ds:0xc94bec62
  42d5f2:	popa   
  42d5f3:	lock fisub WORD PTR [ecx]
  42d5f6:	jg     0x42d5d3
  42d5f8:	int    0x24
  42d5fa:	mov    DWORD PTR ds:0xf0e275ce,ebp
  42d600:	popf   
  42d601:	(bad)  
  42d602:	popa   
  42d603:	sbb    bh,bl
  42d605:	or     al,0x82
  42d607:	mov    ecx,0x79fffea8
  42d60c:	fist   DWORD PTR [esp]
  42d60f:	push   0x7ee90799
  42d614:	mov    eax,ds:0xe07efffe
  42d619:	sar    DWORD PTR [ebx],cl
  42d61b:	cli    
  42d61c:	in     al,dx
  42d61d:	stos   BYTE PTR es:[edi],al
  42d61e:	popa   
  42d61f:	in     al,dx
  42d620:	sub    eax,eax
  42d622:	popa   
  42d623:	jo     0x42d5ea
  42d625:	out    dx,al
  42d626:	popa   
  42d627:	jp     0x42d60c
  42d629:	or     eax,0xe8072dc2
  42d62e:	jp     0xf346c39c
  42d634:	xchg   BYTE PTR [ebp-0x5d02181d],cl
  42d63a:	inc    ebp
  42d63b:	repnz stc 
  42d63d:	(bad)  
  42d63e:	xchg   edi,eax
  42d63f:	cmc    
  42d640:	push   es
  42d641:	jmp    0xf53933c9
  42d646:	(bad)  
  42d647:	int3   
  42d648:	scas   eax,DWORD PTR es:[edi]
  42d649:	scas   eax,DWORD PTR es:[edi]
  42d64a:	cmp    al,0x33
  42d64c:	and    al,0x6e
  42d64e:	inc    ebp
  42d64f:	add    BYTE PTR [eax],al
  42d651:	add    ch,ch
  42d653:	and    al,0xce
  42d655:	ret    
  42d656:	out    dx,al
  42d657:	and    al,0xe2
  42d659:	jge    0x42d690
  42d65b:	and    al,0xe6
  42d65d:	ret    0x8792
  42d660:	push   eax
  42d661:	repz xchg edx,eax
  42d663:	jge    0x42d607
  42d665:	adc    DWORD PTR [ecx*4-0x15dcbf9d],ecx
  42d66c:	fbstp  TBYTE PTR [esi+ebx*8]
  42d66f:	and    al,0xf2
  42d671:	jge    0x42d6b0
  42d673:	and    al,0x66
  42d675:	stos   DWORD PTR es:[edi],eax
  42d676:	les    esp,FWORD PTR [eax+eiz*2]
  42d679:	inc    ebp
  42d67a:	pop    es
  42d67b:	shl    DWORD PTR [edx-0x646006fe],0x8
  42d682:	repz push es
  42d684:	imul   edi,DWORD PTR [eax+0x4f6cf9f4],0x89e906f4
  42d68e:	xor    dl,BYTE PTR [edx]
  42d690:	or     eax,0xcffae888
  42d695:	repz call 0xedcbbfa1
  42d69b:	(bad)  
  42d69c:	or     al,0xd
  42d69e:	and    cl,ah
  42d6a0:	dec    edx
  42d6a1:	(bad)  
  42d6a2:	xor    dl,BYTE PTR [ebx]
  42d6a4:	inc    ebx
  42d6a5:	das    
  42d6a6:	mov    bl,0xfd
  42d6a8:	dec    DWORD PTR [esi-0x8]
  42d6ab:	ins    BYTE PTR es:[edi],dx
  42d6ac:	mov    BYTE PTR [edi-0x14],0xc7
  42d6b0:	popa   
  42d6b1:	push   0x4f
  42d6b3:	fidivr DWORD PTR [eax+0x86]
  42d6b9:	in     al,dx
  42d6ba:	push   es
  42d6bb:	add    BYTE PTR [edi],cl
  42d6bd:	jle    0x42d707
  42d6bf:	adc    al,0x7
  42d6c1:	fs (bad) 
  42d6c3:	jb     0x42d67a
  42d6c5:	mov    ?,ecx
  42d6c7:	push   es
  42d6c8:	jmp    0xe4395dbd
  42d6cd:	sbb    al,0xe1
  42d6cf:	jg     0x42d743
  42d6d1:	cli    
  42d6d2:	xor    cl,BYTE PTR [edi]
  42d6d4:	imul   edi,DWORD PTR [edx+ecx*1+0x75],0x14831a1
  42d6dc:	out    0x5f,al
  42d6de:	mov    cl,0x5
  42d6e0:	jmp    0xf5395dd5
  42d6e5:	jecxz  0x42d6e6
  42d6e7:	shl    DWORD PTR [edi+0x44e916ef],0xfd
  42d6ee:	push   es
  42d6ef:	add    BYTE PTR [ecx+0x44],ch
  42d6f2:	add    al,0xb
  42d6f4:	ins    BYTE PTR es:[edi],dx
  42d6f5:	push   ebx
  42d6f6:	add    al,0x0
  42d6f8:	jmp    0xc4441f2f
  42d6fd:	lahf   
  42d6fe:	rol    BYTE PTR ds:0xf686f0e9,1
  42d704:	repz or al,0x99
  42d707:	test   DWORD PTR [edi-0x1a6a1cff],esp
  42d70d:	out    dx,al
  42d70e:	lahf   
  42d70f:	shl    dl,0xf0
  42d712:	push   es
  42d713:	and    dl,0xeb
  42d716:	std    
  42d717:	sub    DWORD PTR [eax+0x690006e6],0x0
  42d71e:	add    BYTE PTR [eax],al
  42d720:	ins    DWORD PTR es:[edi],dx
  42d721:	add    ecx,DWORD PTR [ebx]
  42d723:	sub    BYTE PTR gs:[eax+eax*1],al
  42d727:	add    BYTE PTR [edx+0x9032085],cl
  42d72d:	inc    eax
  42d72e:	or     bh,bh
  42d730:	sbb    DWORD PTR [eax+0xc],eax
  42d733:	call   DWORD PTR [eax]
  42d735:	rol    DWORD PTR [esi],0x20
  42d738:	xchg   esi,eax
  42d739:	loop   0x42d741
  42d73b:	cmp    BYTE PTR [esi-0x8],0xff
  42d73f:	inc    DWORD PTR [esi-0x15]
  42d742:	push   es
  42d743:	xchg   DWORD PTR [esi-0x8],eax
  42d746:	(bad)  
  42d747:	jmp    DWORD PTR [ebp+0x2f]
  42d74a:	mov    edx,0x150cc6
  42d74f:	(bad)  
  42d750:	sbb    al,0x2
  42d752:	add    DWORD PTR [ebx+0x48773fc2],eax
  42d758:	push   ds
  42d759:	inc    ebp
  42d75a:	jnp    0x42d744
  42d75c:	mov    ecx,ebx
  42d75e:	xor    al,0x48
  42d760:	dec    esi
  42d761:	mov    eax,ds:0xd919e879
  42d766:	and    BYTE PTR [eax+0x5e],cl
  42d769:	or     eax,0xd90ee87b
  42d76e:	or     al,0x48
  42d770:	adc    eax,0x1a0ad886
  42d775:	add    eax,0xfafc46be
  42d77a:	loop   0x42d7db
  42d77c:	int3   
  42d77d:	inc    edi
  42d77e:	push   cs
  42d77f:	or     ecx,esi
  42d781:	dec    edx
  42d782:	mov    esi,0x46
  42d787:	fadd   QWORD PTR [edx]
  42d789:	jecxz  0x42d7de
  42d78b:	or     al,0x46
  42d78d:	push   cs
  42d78e:	add    DWORD PTR [ecx],eax
  42d790:	aas    
  42d791:	mov    esi,0xe304ac46
  42d796:	inc    edi
  42d797:	or     al,0x46
  42d799:	push   cs
  42d79a:	add    eax,0x46be44a1
  42d79f:	mov    esp,0xf33be2f8
  42d7a4:	sbb    al,0xac
  42d7a6:	dec    edx
  42d7a7:	pop    ds
  42d7a8:	or     al,0x4c
  42d7aa:	je     0x42d776
  42d7ac:	cmc    
  42d7ad:	dec    ebx
  42d7ae:	je     0x42d7a4
  42d7b0:	cmc    
  42d7b1:	das    
  42d7b2:	adc    bh,BYTE PTR [ebx]
  42d7b4:	jmp    0x59d:0x22f44802
  42d7bb:	repz popf 
  42d7bd:	rol    BYTE PTR [ecx-0x23],0x97
  42d7c1:	stos   DWORD PTR es:[edi],eax
  42d7c2:	sbb    esi,DWORD PTR ds:0x58030dd8
  42d7c8:	mov    al,0xc0
  42d7ca:	inc    ecx
  42d7cb:	add    eax,0x2d0fabcb
  42d7d0:	loopne 0x42d7df
  42d7d2:	or     ebx,DWORD PTR [eax-0x5c]
  42d7d5:	rol    BYTE PTR [ecx-0x23],0x9c
  42d7d9:	stos   DWORD PTR es:[edi],eax
  42d7da:	add    esi,DWORD PTR ds:0x2d021058
  42d7e0:	pusha  
  42d7e1:	std    
  42d7e2:	or     eax,0xfab1991a
  42d7e7:	and    al,0x22
  42d7e9:	fisttp QWORD PTR [edx]
  42d7eb:	add    BYTE PTR [eax],al
  42d7ed:	add    BYTE PTR [edi-0x2a],dh
  42d7f0:	or     al,0x0
  42d7f2:	repz xor ecx,DWORD PTR [esi+0x12]
  42d7f6:	cld    
  42d7f7:	daa    
  42d7f8:	ret    0xef86
  42d7fb:	and    bl,BYTE PTR [edi+ebx*4-0x50]
  42d7ff:	popf   
  42d800:	jle    0x42d7f8
  42d802:	rcl    DWORD PTR [edx-0x62c279f7],cl
  42d808:	pop    es
  42d809:	mov    dl,0xea
  42d80b:	sbb    eax,0x2af302f8
  42d810:	push   es
  42d811:	ret    0x9f2d
  42d814:	adc    ebp,ecx
  42d816:	retf   
  42d817:	popf   
  42d818:	(bad)  
  42d819:	(bad)  
  42d81a:	jns    0x42d7a3
  42d81c:	add    ecx,DWORD PTR [ebx]
  42d81e:	test   DWORD PTR [esi],eax
  42d820:	loopne 0x42d81f
  42d822:	fdivr  st,st(7)
  42d824:	jmp    0xe94973a8
  42d829:	add    esi,DWORD PTR [ebx-0x54]
  42d82c:	jecxz  0x42d85c
  42d82e:	leave  
  42d82f:	xchg   BYTE PTR [edi+0x68f91e02],bh
  42d835:	mov    esp,0xc1e03234
  42d83a:	xor    dl,BYTE PTR [ecx]
  42d83c:	fsubr  DWORD PTR [edx+0x3e906a3]
  42d842:	jae    0x42d7f1
  42d844:	out    0x8,al
  42d846:	jbe    0x42d7d6
  42d848:	fiadd  WORD PTR [ebx]
  42d84a:	xrelease xchg BYTE PTR [ebp+0x7181e853],cl
  42d851:	or     eax,0xf3000000
  42d856:	push   es
  42d857:	mov    ds:0x7ffee141,eax
  42d85c:	jno    0x42d8a2
  42d85e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d85f:	call   0xdc3f1ee7
  42d864:	dec    ecx
  42d865:	jae    0x42d814
  42d867:	out    0x2e,eax
  42d869:	loop   0x42d7f1
  42d86b:	dec    ebp
  42d86c:	dec    eax
  42d86d:	sahf   
  42d86e:	std    
  42d86f:	and    al,BYTE PTR [ecx+0x1]
  42d872:	cld    
  42d873:	dec    edi
  42d874:	cdq    
  42d875:	adc    al,0xa7
  42d877:	call   0xbc47e3ff
  42d87c:	sbb    DWORD PTR [ebx-0x55],esi
  42d87f:	mov    ds:0xaac0ea2e,eax
  42d884:	adc    ebp,esp
  42d886:	popf   
  42d887:	ins    DWORD PTR es:[edi],dx
  42d888:	add    esi,ebx
  42d88a:	push   es
  42d88b:	imul   edi,DWORD PTR [edx-0x7c21e40d],0x17bf4e5
  42d895:	mov    cl,0x4d
  42d897:	rcl    DWORD PTR [esp+edx*8],cl
  42d89a:	and    al,BYTE PTR [eax]
  42d89c:	imul   ecx,DWORD PTR [ecx+0x366409a4],0x70e9000d
  42d8a6:	popf   
  42d8a7:	inc    eax
  42d8a8:	out    dx,al
  42d8a9:	jae    0x42d88a
  42d8ab:	add    eax,0x41c8f0e9
  42d8b0:	test   DWORD PTR [eax],0x56695eae
  42d8b6:	pop    es
  42d8b7:	jne    0x42d8cc
  42d8b9:	add    BYTE PTR [eax],al
  42d8bb:	add    BYTE PTR [edi-0x64],dh
  42d8be:	(bad)  
  42d8bf:	cmp    edx,DWORD PTR [edx-0x3de408da]
  42d8c5:	or     dl,al
  42d8c7:	das    
  42d8c8:	in     eax,0x12
  42d8ca:	out    0x2f,eax
  42d8cc:	ja     0x42d86b
  42d8ce:	push   esp
  42d8cf:	sbb    al,0x65
  42d8d1:	enter  0xf741,0x5c
  42d8d5:	lods   eax,DWORD PTR ds:[esi]
  42d8d6:	imul   ebx,DWORD PTR ds:[eax-0x69bf4b9],0x86e9000c
  42d8e1:	dec    eax
  42d8e2:	adc    dl,dh
  42d8e4:	mov    edx,ebx
  42d8e6:	jg     0x42d948
  42d8e8:	icebp  
  42d8e9:	sbb    edx,DWORD PTR [eax]
  42d8eb:	imul   ebp,DWORD PTR [ecx+0x10],0x9d70e275
  42d8f2:	dec    esi
  42d8f3:	aam    0x1e
  42d8f5:	enter  0xdf41,0xe6
  42d8f9:	lods   eax,DWORD PTR ds:[esi]
  42d8fa:	sbb    ch,BYTE PTR [ecx+0x4e]
  42d8fd:	or     cl,BYTE PTR [ebx]
  42d8ff:	ins    BYTE PTR es:[edi],dx
  42d900:	pushf  
  42d901:	verw   cx
  42d904:	jo     0x42d8a2
  42d906:	or     esi,esi
  42d908:	jae    0x42d942
  42d90a:	or     ecx,ebp
  42d90c:	lock xchg dh,dh
  42d90f:	mov    ecx,0xe04c8bed
  42d914:	lock push es
  42d916:	ret    0x8400
  42d919:	adc    ecx,DWORD PTR ds:0x48931bfe
  42d91f:	add    eax,DWORD PTR [eax]
  42d921:	add    BYTE PTR [eax],al
  42d923:	repz into 
  42d925:	add    al,BYTE PTR [eax]
  42d927:	retf   0xf189
  42d92a:	and    BYTE PTR [ebp-0x65f745db],bh
  42d930:	or     DWORD PTR [ebx+0x7c],edi
  42d933:	imul   BYTE PTR [edx-0x6f6d8b06]
  42d939:	ds and al,0xba
  42d93c:	xchg   edx,eax
  42d93d:	ds and al,0xfa
  42d940:	mov    bh,BYTE PTR [eax+0x16]
  42d943:	xchg   edi,eax
  42d944:	(bad)  
  42d945:	add    eax,esi
  42d947:	aam    0xb
  42d949:	(bad)  
  42d94a:	unpcklps xmm4,xmm4
  42d94d:	add    BYTE PTR [edx-0x91a8e5f],cl
  42d953:	jge    0x42d9b1
  42d955:	add    BYTE PTR [esi+0x4b],0x9d
  42d959:	dec    DWORD PTR [esi]
  42d95b:	(bad)  
  42d95c:	xchg   ebp,eax
  42d95d:	add    al,BYTE PTR [eax]
  42d95f:	pop    edx
  42d960:	pop    DWORD PTR [eax+0x17]
  42d963:	mov    eax,DWORD PTR ss:[esi]
  42d966:	push   cs
  42d967:	jae    0x42d945
  42d969:	or     BYTE PTR [eax],al
  42d96b:	dec    edx
  42d96c:	mov    ecx,esi
  42d96e:	or     al,BYTE PTR [esi+0x6c]
  42d971:	jp     0x42d96e
  42d973:	pmaddwd mm4,mm1
  42d976:	add    cl,0xa9
  42d979:	outs   dx,BYTE PTR ds:[esi]
  42d97a:	in     eax,0xc1
  42d97c:	into   
  42d97d:	jp     0x42d97a
  42d97f:	add    ch,dh
  42d981:	jo     0xbb6e848
  42d987:	add    BYTE PTR [eax],al
  42d989:	add    BYTE PTR [edx-0x738ae5a0],cl
  42d98f:	arpl   WORD PTR [eax+0x1],ax
  42d992:	mov    ecx,0xf3331271
  42d997:	in     eax,dx
  42d998:	sbb    al,0x89
  42d99a:	xor    eax,0x3b09289e
  42d99f:	cs mov dh,0xc
  42d9a2:	push   ebp
  42d9a3:	pop    ss
  42d9a4:	cmp    eax,0xbf42f40e
  42d9a9:	add    ecx,DWORD PTR [edi]
  42d9ab:	es cmp eax,0xdfe26801
  42d9b1:	pop    ds
  42d9b2:	jbe    0x42da14
  42d9b4:	add    al,0x84
  42d9b6:	in     eax,0xa5
  42d9b8:	(bad)  
  42d9b9:	jmp    FWORD PTR [eax+0x55]
  42d9bc:	add    BYTE PTR [ebp-0x79141d6c],al
  42d9c2:	aaa    
  42d9c3:	or     dl,BYTE PTR [edi+eiz*1]
  42d9c6:	mov    cl,0xfe
  42d9c8:	mov    cl,cl
  42d9ca:	jl     0x42da49
  42d9cc:	jp     0x42d98d
  42d9ce:	call   DWORD PTR [edi-0x35fbbe78]
  42d9d4:	or     BYTE PTR [ebx],0xf1
  42d9d7:	and    eax,0xec69133a
  42d9dc:	or     al,0x24
  42d9de:	aam    0x15
  42d9e0:	inc    eax
  42d9e1:	and    al,0xfc
  42d9e3:	mov    ah,0x79
  42d9e5:	inc    ebx
  42d9e6:	dec    eax
  42d9e7:	sbb    eax,0xc9d77eb5
  42d9ec:	fdivp  st(7),st
  42d9ee:	add    BYTE PTR [eax],al
  42d9f0:	add    BYTE PTR [ebx-0x4d],cl
  42d9f3:	push   es
  42d9f4:	add    bl,dh
  42d9f6:	sub    eax,0x31f41fb9
  42d9fb:	mov    eax,0x7eadf302
  42da00:	imul   BYTE PTR [ebx-0x4aa8664]
  42da06:	lods   eax,DWORD PTR ds:[esi]
  42da07:	inc    cl
  42da09:	lods   eax,DWORD PTR ds:[esi]
  42da0a:	scas   al,BYTE PTR es:[edi]
  42da0b:	(bad)  
  42da0d:	or     DWORD PTR [ebp+0x773fffe],ebp
  42da13:	push   ds
  42da14:	push   eax
  42da15:	clc    
  42da16:	mov    ebp,ebp
  42da18:	mov    dh,0xe9
  42da1a:	mov    ds:0xe9f23e2a,eax
  42da1f:	(bad)  
  42da20:	fcomi  st,st(1)
  42da22:	push   es
  42da23:	jmp    0xea7d9fab
  42da28:	jle    0x42d9f5
  42da2a:	mov    ds:0x4cb2b4f1,al
  42da2f:	call   0xea0fa611
  42da34:	add    esi,ebx
  42da36:	xchg   ch,bl
  42da38:	push   ebx
  42da39:	clc    
  42da3a:	mov    ecx,ecx
  42da3c:	mov    bh,0x99
  42da3e:	mov    ds:0xebf23da2,eax
  42da43:	iret   
  42da44:	outs   dx,DWORD PTR ds:[esi]
  42da45:	icebp  
  42da46:	push   es
  42da47:	jmp    0xe23657cf
  42da4c:	jle    0x42d9f5
  42da4e:	mov    ds:0x4cb2b4a9,al
  42da53:	call   0x42db43
  42da58:	pop    ebx
  42da59:	push   0x91f303e1
  42da5e:	and    eax,0xda0f18c5
  42da63:	jl     0x42da8c
  42da65:	lahf   
  42da66:	xor    DWORD PTR [edx+edx*8-0x2d3fc4ed],0xd2f38087
  42da71:	lea    esp,[edx]
  42da73:	adc    al,0x31
  42da75:	dec    esp
  42da76:	call   0xe1caf665
  42da7b:	add    esi,ebx
  42da7d:	xchg   BYTE PTR [ebp-0x1b],cl
  42da80:	jmp    0x19fb430e
  42da85:	mov    ds:0xf0f23d2a,eax
  42da8a:	dec    edi
  42da8b:	xor    esi,eax
  42da8d:	push   es
  42da8e:	add    cl,ch
  42da90:	jne    0x42da76
  42da92:	iret   
  42da93:	in     eax,dx
  42da94:	jmp    0xabc55da8
  42da99:	popf   
  42da9a:	cli    
  42da9b:	xchg   edi,ebp
  42da9d:	pop    esp
  42da9e:	mov    esi,0x2faa738f
  42daa3:	xchg   DWORD PTR [ecx+0x48],ebp
  42daa6:	push   cs
  42daa7:	das    
  42daa8:	push   cs
  42daa9:	or     BYTE PTR [edi],ah
  42daab:	adc    BYTE PTR [eax],ah
  42daad:	push   es
  42daae:	add    cl,ch
  42dab0:	jo     0x42da4b
  42dab2:	or     al,0x74
  42dab4:	jmp    0xcd2b1c7d
  42dab9:	scas   eax,DWORD PTR es:[edi]
  42daba:	cmp    eax,0xe6
  42dabf:	lock push es
  42dac1:	adc    dl,0x9d
  42dac4:	or     eax,0x9d633484
  42dac9:	cli    
  42daca:	rcl    BYTE PTR [edi],1
  42dacc:	cdq    
  42dacd:	cli    
  42dace:	mov    esi,0xe605996f
  42dad3:	je     0x42db1a
  42dad5:	cld    
  42dad6:	scas   al,BYTE PTR es:[edi]
  42dad7:	inc    eax
  42dad8:	mov    WORD PTR [ecx-0x2],es
  42dadb:	push   esp
  42dadc:	jbe    0x42dae9
  42dade:	cmc    
  42dadf:	xchg   eax,edi
  42dae1:	pop    es
  42dae2:	jmp    0xe8849fd7
  42dae7:	pop    ecx
  42dae8:	scas   eax,DWORD PTR es:[edi]
  42dae9:	adc    esi,ebp
  42daeb:	lock push es
  42daed:	or     esi,DWORD PTR [edi]
  42daef:	sub    al,0x8c
  42daf1:	jg     0x42dad4
  42daf3:	mov    ds:0x2f650046,al
  42daf8:	or     eax,0x6f86884
  42dafd:	add    BYTE PTR [edx-0x1d],ch
  42db00:	jmp    0x9d87:0xedbe91b
  42db07:	or     al,0x12
  42db09:	mov    DWORD PTR [eax],eax
  42db0b:	inc    esi
  42db0c:	stos   BYTE PTR es:[edi],al
  42db0d:	push   ss
  42db0e:	je     0x2a2b54de
  42db14:	rol    BYTE PTR [eax+0x3],1
  42db17:	or     dl,al
  42db19:	inc    eax
  42db1a:	add    esp,eax
  42db1c:	fldcw  WORD PTR [ebx]
  42db1e:	add    DWORD PTR [edx],0x8
  42db21:	je     0x42db41
  42db23:	add    BYTE PTR [eax],al
  42db25:	add    BYTE PTR [ecx-0x7d],cl
  42db28:	(bad)  
  42db29:	jae    0x42db05
  42db2b:	fld    QWORD PTR [esi]
  42db2d:	test   DWORD PTR [edx+ecx*1+0x4d0c0000],edx
  42db34:	cli    
  42db35:	pop    es
  42db36:	xrelease mov BYTE PTR [eax],0x0
  42db3a:	retf   0x40cf
  42db3d:	add    bl,BYTE PTR [ebp-0x65f9467e]
  42db43:	add    eax,0xe8846be
  42db48:	jmp    0x486807
  42db4d:	(bad)  
  42db4e:	fmul   QWORD PTR [eax]
  42db50:	add    ecx,ebp
  42db52:	or     edx,DWORD PTR [eax]
  42db54:	add    BYTE PTR [eax],al
  42db56:	xchg   ebp,eax
  42db57:	pop    ds
  42db58:	mov    edx,0x589e0a8a
  42db5d:	inc    eax
  42db5e:	pop    edx
  42db5f:	mov    DWORD PTR [edx-0x6431f1],edi
  42db65:	dec    DWORD PTR [edx+0x4]
  42db68:	scas   al,BYTE PTR es:[edi]
  42db69:	dec    esi
  42db6a:	dec    eax
  42db6b:	loop   0x42dbe7
  42db6d:	stc    
  42db6e:	inc    ecx
  42db6f:	add    al,0x7f
  42db71:	xchg   edx,eax
  42db72:	dec    esp
  42db73:	add    eax,0x862eff00
  42db78:	or     edi,DWORD PTR [edx+0x46f60b08]
  42db7e:	sbb    DWORD PTR [ecx-0x3a60f09b],esi
  42db84:	clc    
  42db85:	enter  0x13f3,0x2
  42db89:	jmp    0xb542db8e
  42db8e:	lods   eax,DWORD PTR ds:[esi]
  42db8f:	(bad)  
  42db90:	dec    DWORD PTR ds:0x953c0171
  42db96:	mov    al,0x97
  42db98:	mov    edi,0xfee2e6fd
  42db9d:	or     eax,DWORD PTR [edx-0x180cfffc]
  42dba3:	dec    eax
  42dba4:	jmp    FWORD PTR [eax]
  42dba6:	nop
  42dba7:	xor    cl,BYTE PTR [edx]
  42dba9:	pop    ds
  42dbaa:	cmp    ch,0x94
  42dbad:	mov    bl,0x10
  42dbaf:	mov    bh,0x23
  42dbb1:	cmc    
  42dbb2:	mul    dh
  42dbb4:	std    
  42dbb5:	les    ebp,FWORD PTR [esi-0x4e0ebe38]
  42dbbb:	fwait
  42dbbc:	inc    esi
  42dbbd:	in     eax,dx
  42dbbe:	lods   eax,DWORD PTR ds:[esi]
  42dbbf:	(bad)  
  42dbc0:	stc    
  42dbc1:	xor    eax,0xf0497cad
  42dbc6:	sub    eax,0x30ec05a7
  42dbcb:	ret    
  42dbcc:	call   DWORD PTR [esi+ebp*4+0x4a2b1ff]
  42dbd3:	adc    BYTE PTR [ebx],0x5f
  42dbd6:	out    dx,al
  42dbd7:	add    ecx,DWORD PTR [ebx]
  42dbd9:	jbe    0x42dbfb
  42dbdb:	add    al,0x0
  42dbdd:	repz sub eax,0x32fc08a7
  42dbe3:	call   0xc8f0cee9
  42dbe8:	inc    ecx
  42dbe9:	icebp  
  42dbea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbeb:	xchg   ebp,eax
  42dbec:	push   ss
  42dbed:	in     eax,dx
  42dbee:	lods   eax,DWORD PTR ds:[esi]
  42dbef:	(bad)  
  42dbf0:	stc    
  42dbf1:	add    BYTE PTR [eax],al
  42dbf3:	add    BYTE PTR [ebp-0xfb68354],dh
  42dbf9:	sub    eax,0x30ec0fa7
  42dbfe:	xchg   ebx,eax
  42dbff:	push   DWORD PTR [esi+ebp*4]
  42dc02:	push   DWORD PTR [ecx-0x79e0f8be]
  42dc08:	add    al,0x7b
  42dc0a:	test   al,0x3
  42dc0c:	call   0xf347469a
  42dc11:	push   es
  42dc12:	imul   ebp,DWORD PTR [ebx-0x4dcd5407],0x426f03b2
  42dc1c:	cld    
  42dc1d:	pop    ds
  42dc1e:	xor    BYTE PTR [edx],al
  42dc20:	sbb    BYTE PTR [eax],0xda
  42dc23:	jns    0x42dbe8
  42dc25:	fsub   QWORD PTR [esi-0x8]
  42dc28:	add    BYTE PTR [esi-0x17],0x36
  42dc2c:	push   esp
  42dc2d:	xchg   DWORD PTR [edi],ecx
  42dc2f:	(bad)  
  42dc30:	jmp    0xf34a0bbe
  42dc35:	push   es
  42dc36:	sub    ecx,DWORD PTR [edx-0x3b]
  42dc39:	or     eax,0x6f7d410
  42dc3e:	jmp    0x5f470ef4
  42dc43:	inc    edx
  42dc44:	lods   al,BYTE PTR ds:[esi]
  42dc45:	pop    ds
  42dc46:	loopne 0x42dc5a
  42dc48:	and    BYTE PTR [ecx-0x16],dl
  42dc4b:	jns    0x42dc10
  42dc4d:	fsub   QWORD PTR [esi+0x47]
  42dc50:	jg     0x42dc98
  42dc52:	jmp    0xbfc9a88d
  42dc57:	adc    eax,DWORD PTR [eax]
  42dc59:	add    BYTE PTR [eax],al
  42dc5b:	clc    
  42dc5c:	mov    DWORD PTR [edi+0x6],esi
  42dc5f:	repz push es
  42dc61:	stos   DWORD PTR es:[edi],eax
  42dc62:	dec    ecx
  42dc63:	jne    0x42dc71
  42dc65:	rcr    BYTE PTR [ebx-0x9],0x6
  42dc69:	jmp    0x6f468f1f
  42dc6e:	inc    ecx
  42dc6f:	pop    esp
  42dc70:	pop    ds
  42dc71:	nop
  42dc72:	or     al,ah
  42dc74:	call   0xdc665652
  42dc79:	dec    bx
  42dc7b:	pop    edi
  42dc7c:	inc    esi
  42dc7d:	jmp    0xffc9c0b8
  42dc82:	outs   dx,DWORD PTR ds:[esi]
  42dc83:	jmp    0x6:0xf560850b
  42dc8a:	das    
  42dc8b:	mov    edx,0x705006a0
  42dc90:	or     al,BYTE PTR [eax]
  42dc92:	jmp    0xde627507
  42dc97:	je     0x42dcad
  42dc99:	add    eax,0x41c4f0e9
  42dc9e:	jmp    0x42dc90
  42dca0:	lods   eax,DWORD PTR ds:[esi]
  42dca1:	imul   ebp,esp,0x328006f0
  42dca7:	ficom  WORD PTR [ebx]
  42dca9:	dec    ecx
  42dcaa:	das    
  42dcab:	cmp    cl,BYTE PTR [eax]
  42dcad:	sub    esi,DWORD PTR [edx+0x44]
  42dcb0:	jecxz  0x42dccd
  42dcb2:	ins    BYTE PTR es:[edi],dx
  42dcb3:	mov    esi,0xf5b08411
  42dcb8:	push   es
  42dcb9:	add    BYTE PTR [edx+0x3],dh
  42dcbc:	jne    0x42ddc0
  42dcc2:	add    eax,0xccad86ef
  42dcc7:	push   cs
  42dcc8:	daa    
  42dcc9:	sub    eax,DWORD PTR [eax-0x7a]
  42dccc:	leave  
  42dccd:	out    0xbc,al
  42dccf:	cmp    DWORD PTR [edi+0x41849955],0xfffffffe
  42dcd6:	mov    WORD PTR ds:0x4808ea0c,ds
  42dcdc:	adc    esi,DWORD PTR [ebx+0x2d]
  42dcdf:	cli    
  42dce0:	and    edi,DWORD PTR [esi]
  42dce2:	dec    DWORD PTR [ecx+0x24]
  42dce5:	out    0x75,al
  42dce7:	sbb    DWORD PTR [edx-0x4f],0xffffff9c
  42dceb:	mov    eax,ds:0x25b0d7e
  42dcf0:	add    BYTE PTR [eax-0x16fffca9],dl
  42dcf6:	jo     0x42dc8d
  42dcf8:	or     al,0x14
  42dcfa:	cmc    
  42dcfb:	enter  0x41,0x5b
  42dcff:	cwde   
  42dd00:	loope  0x42dcb2
  42dd02:	retf   0x471
  42dd05:	xrstors [edx]
  42dd08:	add    al,0x0
  42dd0a:	sbb    al,ah
  42dd0c:	inc    eax
  42dd0d:	add    edi,edi
  42dd0f:	sbb    DWORD PTR [edi+0x5a29180],0xebf84
  42dd19:	add    BYTE PTR [edx-0x69f0f88f],bl
  42dd1f:	pop    esi
  42dd20:	(bad)  
  42dd21:	dec    DWORD PTR [edx]
  42dd23:	cdq    
  42dd24:	mov    edx,0x39
  42dd29:	inc    esi
  42dd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd2b:	push   cs
  42dd2c:	jne    0x42dd00
  42dd2e:	and    BYTE PTR [edi+0x24],al
  42dd31:	jmp    0x40c3:0xe624471a
  42dd38:	add    DWORD PTR [edx+0x5a034121],edi
  42dd3e:	jb     0x42dd4b
  42dd40:	jne    0x42ddc1
  42dd42:	jecxz  0x42dd02
  42dd44:	inc    esi
  42dd45:	retf   
  42dd46:	xchg   edi,eax
  42dd47:	cli    
  42dd48:	cmp    BYTE PTR [esi+0x160f0ea5],al
  42dd4e:	pop    ebx
  42dd4f:	(bad)  
  42dd50:	call   FWORD PTR [edx-0x2ef389e0]
  42dd56:	push   0x6e
  42dd58:	sub    al,0x11
  42dd5a:	ss and al,0x14
  42dd5d:	adc    DWORD PTR [esi+0x24],eax
  42dd60:	adc    cl,ah
  42dd62:	enter  0x8b4a,0x4c
  42dd66:	ins    BYTE PTR es:[edi],dx
  42dd67:	int    0x85
  42dd69:	dec    edx
  42dd6a:	aad    0x1
  42dd6c:	mov    dl,BYTE PTR [esi+esi*8]
  42dd6f:	and    eax,DWORD PTR [esi+ebx*2+0x65468805]
  42dd76:	pop    ds
  42dd77:	inc    ecx
  42dd78:	pop    ss
  42dd79:	repz retf 
  42dd7b:	sub    DWORD PTR [eax+0xaf9c3b7],ecx
  42dd81:	outs   dx,BYTE PTR ds:[esi]
  42dd82:	pop    ecx
  42dd83:	mov    cl,0xfa
  42dd85:	cmp    al,0x30
  42dd87:	and    esp,DWORD PTR [edi+ebx*8]
  42dd8a:	scas   eax,DWORD PTR es:[edi]
  42dd8b:	fwait
  42dd8c:	xchg   BYTE PTR [eax],al
  42dd8e:	add    BYTE PTR [eax],al
  42dd90:	imul   DWORD PTR [edi-0x66d78002]
  42dd96:	aaa    
  42dd97:	add    dh,BYTE PTR ds:0x82d0365
  42dd9d:	test   ecx,edi
  42dd9f:	mov    cl,0xbd
  42dda1:	mov    cl,0x78
  42dda3:	mov    esi,0xe87f0ff7
  42dda8:	jmp    0x3d0e:0x7f494353
  42ddaf:	je     0x42ddb1
  42ddb1:	les    eax,FWORD PTR [bx+di-0xf]
  42ddb5:	lods   eax,DWORD PTR ds:[esi]
  42ddb6:	stc    
  42ddb7:	test   BYTE PTR [ecx-0x5e],dl
  42ddba:	(bad)  
  42ddbb:	push   DWORD PTR [ebx-0x5c]
  42ddbe:	ds jmp 0x417fed
  42ddc4:	pop    es
  42ddc5:	xchg   ecx,eax
  42ddc6:	stc    
  42ddc7:	xchg   esp,eax
  42ddc8:	mov    bl,0x9c
  42ddca:	mov    ch,0x23
  42ddcc:	out    0x8,al
  42ddce:	out    dx,al
  42ddcf:	mov    WORD PTR [eax],?
  42ddd1:	(bad)  
  42ddd2:	jmp    0xf303:0xb72cf408
  42ddd9:	lods   eax,DWORD PTR ds:[esi]
  42ddda:	sti    
  42dddb:	mov    ecx,0x2f9c31b0
  42dde0:	push   0x27
  42dde2:	inc    edx
  42dde3:	or     BYTE PTR [edx-0x4],bh
  42dde6:	(bad)  
  42dde7:	call   0x417fad
  42ddec:	mov    bh,0x48
  42ddee:	xor    ecx,DWORD PTR [ecx]
  42ddf0:	xor    eax,0x9fde4
  42ddf5:	add    BYTE PTR [eax],al
  42ddf7:	pop    edx
  42ddf8:	pop    es
  42ddf9:	int3   
  42ddfa:	pop    es
  42ddfb:	repz push es
  42ddfd:	frstor [eax]
  42ddff:	call   0x34f18675
  42de04:	jecxz  0x42dddf
  42de06:	jnp    0x42ddba
  42de08:	or     BYTE PTR [eax-0x16f908e8],dl
  42de0e:	cmp    BYTE PTR [eax+0x3103dce2],0x45
  42de15:	call   0xebc5d80b
  42de1a:	pop    es
  42de1b:	repz push es
  42de1d:	outs   dx,BYTE PTR ds:[esi]
  42de1e:	sub    eax,0x9b5181e7
  42de23:	les    ebx,FWORD PTR [ebx+0x54f9ad49]
  42de29:	mov    dl,0x1
  42de2b:	jne    0x42ddf5
  42de2d:	in     al,dx
  42de2e:	jecxz  0x42dea5
  42de30:	popf   
  42de31:	jecxz  0x42de2f
  42de33:	jns    0x42de8e
  42de35:	call   0x6d4ed13d
  42de3a:	test   esp,ebx
  42de3c:	fwait
  42de3d:	call   0xe249a9c2
  42de42:	xchg   DWORD PTR [ebp+0x4403e907],esp
  42de48:	scas   al,BYTE PTR es:[edi]
  42de49:	out    dx,eax
  42de4a:	cld    
  42de4b:	jo     0x42de05
  42de4d:	in     eax,0x3
  42de4f:	repz dec ebp
  42de51:	jge    0x42de52
  42de53:	cmp    ecx,DWORD PTR [eiz*2-0x17645a44]
  42de5a:	call   0xe906:0x48000000
  42de61:	add    esi,DWORD PTR [ebx-0x61]
  42de64:	or     ch,bh
  42de66:	jo     0x42dec8
  42de68:	in     eax,0x3
  42de6a:	xrelease xchg BYTE PTR [ebp-0xd75160d],bh
  42de71:	pop    es
  42de72:	repz push es
  42de74:	add    BYTE PTR [ecx-0x65],ch
  42de77:	fimul  WORD PTR [edx]
  42de79:	pop    esi
  42de7a:	inc    ebp
  42de7b:	pop    es
  42de7c:	add    cl,ch
  42de7e:	fisttp DWORD PTR [ebp+0x8]
  42de81:	adc    ebp,edi
  42de83:	bts    DWORD PTR [edx+0x17fb04ea],0xf3
  42de8b:	sbb    ebp,eax
  42de8d:	mov    ecx,0x81873669
  42de92:	mov    ebx,0xec05e7b1
  42de97:	push   es
  42de98:	add    dl,ch
  42de9a:	pop    eax
  42de9b:	or     al,0xd6
  42de9d:	and    ch,BYTE PTR [ebp-0x1294f4f6]
  42dea3:	add    al,BYTE PTR [eax]
  42dea5:	jmp    0xcf79ec71
  42deaa:	or     BYTE PTR [eax],dl
  42deac:	jle    0x42def1
  42deae:	repz push es
  42deb0:	add    BYTE PTR [edx+0x2f],dh
  42deb3:	cld    
  42deb4:	mov    esi,0xa9d986a
  42deb9:	test   DWORD PTR gs:[ecx+0x2059e9fa],ebx
  42dec0:	or     BYTE PTR [eax+0x0],dh
  42dec3:	add    BYTE PTR [eax],al
  42dec5:	es or  ebp,ecx
  42dec8:	mov    ah,0xf3
  42deca:	push   es
  42decb:	add    BYTE PTR [edi],cl
  42decd:	cs call 0xe6f8:0x86f3b788
  42ded5:	mov    bh,0x85
  42ded7:	shl    ah,cl
  42ded9:	pop    eax
  42deda:	popf   
  42dedb:	or     dh,BYTE PTR [edi]
  42dedd:	rcl    esp,0x7d
  42dee0:	dec    ecx
  42dee1:	sbb    edx,0xffffffff
  42dee4:	in     eax,dx
  42dee5:	jae    0x42dea9
  42dee7:	cld    
  42dee8:	(bad)  
  42dee9:	pop    eax
  42deea:	sbb    bh,cl
  42deec:	out    0x89,eax
  42deee:	xor    DWORD PTR [ecx],0x0
  42def1:	mov    DWORD PTR [esi],eax
  42def3:	add    dh,al
  42def5:	int3   
  42def6:	add    BYTE PTR [eax],dl
  42def8:	jmp    0x42e0f4
  42defd:	fldcw  WORD PTR [ebx+0x8]
  42df00:	je     0x42df28
  42df02:	xor    bh,0xf
  42df05:	(bad)  
  42df06:	cmc    
  42df07:	jp     0x42deca
  42df09:	push   0xffffff82
  42df0b:	test   DWORD PTR [edx],0xfd8d8825
  42df11:	jne    0x42df81
  42df13:	pusha  
  42df14:	(bad)  
  42df15:	or     al,0x4
  42df17:	xor    BYTE PTR [eax],al
  42df19:	jae    0x42deba
  42df1b:	stc    
  42df1c:	call   FWORD PTR [edx]
  42df1e:	jo     0x42df60
  42df20:	add    esp,DWORD PTR [eax-0x6c800524]
  42df26:	pop    es
  42df27:	pop    es
  42df28:	xchg   DWORD PTR [eax],eax
  42df2a:	add    BYTE PTR [eax],al
  42df2c:	pushf  
  42df2d:	outs   dx,DWORD PTR ds:[esi]
  42df2e:	cmc    
  42df2f:	jmp    DWORD PTR ds:0x883ad018
  42df35:	(bad)  
  42df36:	xchg   ebx,eax
  42df37:	inc    eax
  42df38:	or     bl,BYTE PTR [ebp+0x6e277783]
  42df3e:	cmc    
  42df3f:	and    BYTE PTR [ebx],0x7
  42df42:	pop    es
  42df43:	test   edi,ebp
  42df45:	add    BYTE PTR [eax],al
  42df47:	add    BYTE PTR [eax*2-0x310cee06],cl
  42df4e:	cld    
  42df4f:	(bad)  
  42df50:	fisubr DWORD PTR [edi+0x40]
  42df53:	add    eax,DWORD PTR [eax-0x23]
  42df56:	cli    
  42df57:	jg     0x42df4c
  42df59:	cwde   
  42df5a:	add    eax,0xf56e8c87
  42df5f:	inc    ebp
  42df61:	pop    ss
  42df62:	sar    BYTE PTR [edx],1
  42df64:	or     dh,bh
  42df66:	xchg   ebx,eax
  42df67:	inc    eax
  42df68:	mov    bl,BYTE PTR [ebx+eax*4-0x5a4d0cb9]
  42df6f:	cli    
  42df70:	jae    0x42df28
  42df72:	sti    
  42df73:	or     dh,BYTE PTR [esi+0x1a]
  42df76:	add    eax,0x4061f300
  42df7b:	inc    BYTE PTR [ebx]
  42df7d:	(bad)  
  42df7e:	push   edx
  42df7f:	std    
  42df80:	fs scas eax,DWORD PTR es:[edi]
  42df82:	jle    0x42df7a
  42df84:	jmp    0x5d0f5f19
  42df89:	js     0x42df30
  42df8b:	or     al,BYTE PTR [ebp+0x7f01e9]
  42df91:	add    BYTE PTR [eax],al
  42df93:	pop    ebx
  42df94:	lahf   
  42df95:	rol    BYTE PTR [ecx-0xe],0x5e
  42df99:	sub    dl,BYTE PTR [esi]
  42df9b:	stos   DWORD PTR es:[edi],eax
  42df9c:	xchg   ebx,eax
  42df9d:	cmc    
  42df9e:	inc    edi
  42df9f:	cld    
  42dfa0:	sub    dh,BYTE PTR [ebx-0x3]
  42dfa3:	and    al,0xaf
  42dfa5:	jle    0x42dfb0
  42dfa7:	add    esi,DWORD PTR [edi]
  42dfa9:	jnp    0x42dfa8
  42dfab:	adc    al,0xaf
  42dfad:	jle    0x42dfb8
  42dfaf:	sti    
  42dfb0:	inc    esi
  42dfb1:	and    edi,esi
  42dfb3:	add    al,0xaf
  42dfb5:	jle    0x42dfc0
  42dfb7:	div    DWORD PTR [esi]
  42dfb9:	sub    edi,esi
  42dfbb:	hlt    
  42dfbc:	scas   al,BYTE PTR es:[edi]
  42dfbd:	rol    BYTE PTR [ecx-0xe],0x0
  42dfc1:	popf   
  42dfc2:	data16 icebp 
  42dfc4:	lods   eax,DWORD PTR ds:[esi]
  42dfc5:	inc    BYTE PTR [esi+0x478f6b5]
  42dfcb:	rep lods eax,DWORD PTR ds:[esi]
  42dfcd:	jg     0x42df8e
  42dfcf:	inc    edi
  42dfd0:	popf   
  42dfd1:	jl     0x42dfd4
  42dfd3:	shrd   ebp,esi,cl
  42dfd6:	mov    cl,0xb3
  42dfd8:	cdq    
  42dfd9:	lds    edx,FWORD PTR [esi]
  42dfdb:	mov    bl,0x2d
  42dfdd:	lahf   
  42dfde:	out    dx,al
  42dfdf:	jo     0x42dfcf
  42dfe1:	adc    esp,edi
  42dfe3:	lock pop esp
  42dfe5:	mov    esi,0x2b076b3f
  42dfea:	add    ebp,DWORD PTR [eax+ebx*1+0x1]
  42dfee:	jg     0x42df79
  42dff0:	or     BYTE PTR [ebp-0x18],ch
  42dff3:	xchg   BYTE PTR [eax+0x7ce8],bl
  42dff9:	add    BYTE PTR [edx+0x347f9998],ch
  42dfff:	or     BYTE PTR [ebp+0x52],ah
  42e002:	cbw    
  42e004:	mov    cl,0x7e
  42e006:	mov    dl,0xef
  42e008:	add    al,0x81
  42e00a:	call   0x5e84700e
  42e00f:	cwde   
  42e010:	cdq    
  42e011:	test   BYTE PTR [ebp+0xd],al
  42e014:	loop   0x42e094
  42e016:	scas   eax,DWORD PTR es:[edi]
  42e017:	(bad)
  42e01b:	and    ch,ch
  42e01d:	add    eax,DWORD PTR [ecx+0x41]
  42e020:	rol    BYTE PTR [ebx+0x63e81f9],cl
  42e026:	repz push es
  42e028:	pop    edi
  42e029:	or     dh,BYTE PTR [ebp-0x3c]
  42e02c:	sub    BYTE PTR [esi+edx*1-0x18d0f7a0],bl
  42e033:	outs   dx,BYTE PTR ds:[esi]
  42e034:	out    0xf8,eax
  42e036:	outs   dx,DWORD PTR ds:[esi]
  42e037:	xchg   ecx,eax
  42e038:	out    0x3,eax
  42e03a:	repz mov ebp,DWORD PTR [edx-0x12b69205]
  42e041:	jl     0x42dfff
  42e043:	or     ebx,DWORD PTR [eax]
  42e045:	das    
  42e046:	hlt    
  42e047:	mov    esp,DWORD PTR [edx]
  42e049:	pushf  
  42e04a:	add    eax,DWORD PTR [edx]
  42e04c:	jmp    0x95094e54
  42e051:	xchg   ecx,eax
  42e052:	dec    esp
  42e053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e054:	in     eax,0xf8
  42e056:	add    bl,0xfd
  42e059:	test   ebp,ebx
  42e05b:	lds    esp,FWORD PTR [ebp-0x54]
  42e05e:	add    BYTE PTR [eax],al
  42e060:	add    BYTE PTR [ecx+0x32c1f012],bh
  42e066:	push   es
  42e067:	add    BYTE PTR [ebp-0x16ff3f77],dh
  42e06d:	lock xchg dh,bl
  42e070:	jmp    0x978c:0x7ce808c4
  42e077:	cli    
  42e078:	ins    BYTE PTR es:[edi],dx
  42e079:	mov    al,0x13
  42e07b:	or     DWORD PTR [edi-0x2fc2f9ce],esp
  42e081:	add    al,0x7
  42e083:	add    cl,ch
  42e085:	out    dx,eax
  42e086:	(bad)
  42e089:	fs xchg edi,eax
  42e08b:	cli    
  42e08c:	xor    BYTE PTR fs:[esp+eax*4],cl
  42e090:	inc    ecx
  42e091:	mov    bl,BYTE PTR [edx+edi*8-0x297ccf26]
  42e098:	out    0x75,al
  42e09a:	push   edi
  42e09b:	inc    edi
  42e09c:	push   0xffffff90
  42e09e:	or     bh,BYTE PTR [edi-0x57]
  42e0a1:	xor    al,0xae
  42e0a3:	inc    edi
  42e0a4:	jle    0x42e101
  42e0a6:	pushf  
  42e0a7:	jle    0x42e09e
  42e0a9:	inc    esp
  42e0aa:	out    dx,eax
  42e0ab:	push   ebx
  42e0ad:	sbb    BYTE PTR [eax-0x7200f2bd],al
  42e0b3:	inc    ebx
  42e0b4:	add    eax,0xd437fff
  42e0b9:	adc    edi,DWORD PTR [edi]
  42e0bb:	mov    DWORD PTR [ebp-0x4316f8e4],esp
  42e0c1:	icebp  
  42e0c2:	push   es
  42e0c3:	add    dh,ch
  42e0c5:	add    BYTE PTR [eax],al
  42e0c7:	add    BYTE PTR [edx+0x55],ah
  42e0ca:	test   DWORD PTR [ecx-0x18],ebp
  42e0cd:	xor    DWORD PTR [eax-0x17],eax
  42e0d0:	aam    0x91
  42e0d2:	or     ch,BYTE PTR [ebp+0x17]
  42e0d5:	xchg   ebp,eax
  42e0d6:	cli    
  42e0d7:	jmp    0x710231a7
  42e0dc:	dec    ecx
  42e0dd:	dec    eax
  42e0de:	or     BYTE PTR [eax+0x22],ah
  42e0e1:	add    eax,edx
  42e0e3:	add    BYTE PTR [ecx+ecx*1+0x98be934],al
  42e0ea:	add    BYTE PTR [eax],al
  42e0ec:	sbb    ah,BYTE PTR [ebx+0xb]
  42e0ef:	jne    0x42e084
  42e0f1:	enter  0x140,0xf4
  42e0f5:	jae    0x42e130
  42e0f7:	add    DWORD PTR [edx+0x59b6070a],ebx
  42e0fd:	adc    DWORD PTR [ebx+0x4acd08],ecx
  42e103:	xor    BYTE PTR [eax-0x25e88c92],0x61
  42e10a:	xor    DWORD PTR [ebx+edx*2-0x76],esi
  42e10e:	icebp  
  42e10f:	and    BYTE PTR ds:0x4a020887,bh
  42e115:	or     bh,BYTE PTR [esi-0x1868a4ba]
  42e11b:	push   ds
  42e11c:	pop    ebx
  42e11d:	or     al,BYTE PTR [eax]
  42e11f:	mov    ebp,esp
  42e121:	mov    es,WORD PTR [ecx-0x39eebdba]
  42e127:	movzx  ecx,bl
  42e12a:	inc    al
  42e12c:	add    BYTE PTR [eax],al
  42e12e:	add    BYTE PTR [edx+0x7],bh
  42e131:	sbb    eax,0x3d
  42e134:	sub    al,0xbd
  42e136:	cdq    
  42e137:	or     edx,eax
  42e139:	or     edx,ecx
  42e13b:	rcr    DWORD PTR [ebp+0x5],1
  42e13e:	sbb    BYTE PTR [eax+0x2500000b],0x93
  42e145:	xor    DWORD PTR [esi+0x2],ebx
  42e148:	popf   
  42e149:	jl     0x42e1c2
  42e14b:	fisttp DWORD PTR [ecx]
  42e14d:	add    BYTE PTR [ebx-0x7c4055e7],cl
  42e153:	and    ch,BYTE PTR [esi+0x5]
  42e156:	test   BYTE PTR [eax+0x4300000a],al
  42e15c:	dec    ebp
  42e15d:	or     BYTE PTR [ecx-0x170d920d],cl
  42e163:	cdq    
  42e164:	lahf   
  42e165:	(bad)  
  42e166:	push   DWORD PTR [ebx+0x8]
  42e169:	stc    
  42e16a:	or     dh,BYTE PTR [esi-0x12]
  42e16d:	add    eax,DWORD PTR [eax]
  42e16f:	repz or BYTE PTR [edi+0x7f],bh
  42e173:	cwde   
  42e174:	test   eax,0xb2a384f1
  42e179:	mov    eax,ds:0xfbed78fa
  42e17e:	jle    0x42e18d
  42e180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e181:	inc    BYTE PTR [esi]
  42e183:	xor    eax,0x73082fb4
  42e188:	popf   
  42e189:	fsubp  st(0),st
  42e18b:	cmp    eax,0x2dfaa15a
  42e190:	in     eax,0x4
  42e192:	cmp    DWORD PTR [eax],eax
  42e194:	add    BYTE PTR [eax],al
  42e196:	dec    edx
  42e197:	xchg   dh,bh
  42e199:	push   ebx
  42e19b:	sbb    BYTE PTR [eax+0xc],al
  42e19e:	js     0x42e193
  42e1a0:	fisttp WORD PTR [edi]
  42e1a2:	js     0x42e191
  42e1a4:	test   DWORD PTR [esi-0x3d2a5863],0x9913e2f0
  42e1ae:	call   0xa1490b0c
  42e1b3:	mov    ds:0xaba0d7e5,eax
  42e1b8:	jne    0x42e178
  42e1ba:	push   0xd77b7dce
  42e1bf:	pop    es
  42e1c0:	add    al,0x75
  42e1c2:	out    dx,eax
  42e1c3:	and    esp,DWORD PTR es:[ebx+ebx*8]
  42e1c7:	or     ah,cl
  42e1c9:	mov    WORD PTR [edi+0x3788a1a4],gs
  42e1cf:	or     dl,BYTE PTR [edi+edx*1]
  42e1d2:	mov    ecx,0xb206be29
  42e1d7:	daa    
  42e1d8:	inc    ebp
  42e1d9:	or     BYTE PTR [edx+0x7],ch
  42e1dc:	mov    bl,0xf7
  42e1de:	inc    edi
  42e1df:	sub    ah,BYTE PTR [ebx]
  42e1e1:	cmp    eax,0x45fdd0f2
  42e1e6:	jae    0x42e178
  42e1e8:	fcomi  st,st(6)
  42e1ea:	outs   dx,DWORD PTR ds:[esi]
  42e1eb:	xchg   ebx,edi
  42e1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1ee:	test   eax,0xfcdf7c88
  42e1f3:	push   es
  42e1f4:	sub    edi,DWORD PTR ds:0x3a74cff2
  42e1fa:	add    BYTE PTR [eax],al
  42e1fc:	add    BYTE PTR [esp+edx*1-0x3],ch
  42e200:	jle    0x42e18b
  42e202:	sbb    ecx,DWORD PTR ds:0xf0eb2079
  42e208:	js     0x42e23a
  42e20a:	jmp    0x42e204
  42e20c:	fdiv   DWORD PTR [esi]
  42e20e:	aaa    
  42e20f:	outs   dx,BYTE PTR ds:[esi]
  42e210:	mov    dh,0x69
  42e212:	mov    esp,0xe0c463
  42e217:	pop    edi
  42e218:	ds add bl,ch
  42e21b:	(bad)  
  42e21c:	clc    
  42e21d:	bnd jle 0x42e24a
  42e220:	or     eax,0xdff24d75
  42e225:	leave  
  42e226:	jle    0x42e254
  42e228:	loopne 0x42e213
  42e22a:	add    esp,DWORD PTR [edi+esi*1+0x44]
  42e22e:	xchg   esp,eax
  42e22f:	add    DWORD PTR [ecx+0x3e0ea90],0xa968f60c
  42e239:	test   BYTE PTR [ebx],0x64
  42e23c:	repnz pop ds
  42e23e:	xchg   esp,eax
  42e23f:	popa   
  42e240:	adc    DWORD PTR [edx-0x4d4216f6],0xb0a51605
  42e24a:	jmp    0x78d8:0xeab078f8
  42e251:	in     al,0xcf
  42e253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e254:	fist   WORD PTR [eax]
  42e256:	add    al,0x0
  42e258:	ins    BYTE PTR es:[edi],dx
  42e259:	sahf   
  42e25a:	mov    ds:0x335a2efa,eax
  42e25f:	or     BYTE PTR [edx+0x0],ch
  42e262:	add    BYTE PTR [eax],al
  42e264:	sbb    ebp,ebx
  42e266:	sbb    ebp,ecx
  42e268:	mov    edi,0xf0e9e887
  42e26d:	push   es
  42e26e:	xchg   DWORD PTR [edx-0x9407548],ebp
  42e274:	sub    al,0xae
  42e276:	(bad)  
  42e277:	call   0xcd966e6c
  42e27c:	hlt    
  42e27d:	mov    ecx,edx
  42e27f:	ret    0xeadc
  42e282:	sbb    edi,DWORD PTR [eax]
  42e284:	or     bh,BYTE PTR [esi+0x5405b9fa]
  42e28a:	jae    0x42e26f
  42e28c:	cli    
  42e28d:	inc    ebp
  42e28e:	adc    eax,DWORD PTR ds:0x70feff72
  42e294:	cs clc 
  42e296:	icebp  
  42e297:	daa    
  42e298:	test   BYTE PTR [edi],0xb
  42e29b:	ins    DWORD PTR es:[edi],dx
  42e29c:	iret   
  42e29d:	xchg   ebx,eax
  42e29e:	cli    
  42e29f:	jmp    0xb92bab7f
  42e2a4:	adc    DWORD PTR [eax-0x7f98c06],0xfe446023
  42e2ae:	call   0x49d32c
  42e2b3:	jae    0x42e2a3
  42e2b5:	mul    DWORD PTR [ebx]
  42e2b7:	popa   
  42e2b8:	sbb    al,0xfb
  42e2ba:	call   0x49d32c
  42e2bf:	arpl   si,dx
  42e2c1:	mul    DWORD PTR [ebx]
  42e2c3:	je     0x42e2c9
  42e2c5:	add    ah,bh
  42e2c7:	loop   0x42e2c9
  42e2c9:	add    BYTE PTR [eax],al
  42e2cb:	mov    al,BYTE PTR [ebp+0x13]
  42e2ce:	or     eax,0x4214ff6c
  42e2d3:	ret    0x418c
  42e2d6:	add    ch,cl
  42e2d8:	mov    dl,0x90
  42e2da:	or     al,0xbc
  42e2dc:	outs   dx,DWORD PTR ds:[esi]
  42e2dd:	mov    cl,BYTE PTR [si+0x2403]
  42e2e2:	test   DWORD PTR [esi-0x32b97d6f],esi
  42e2e8:	ins    DWORD PTR es:[edi],dx
  42e2e9:	xor    ecx,0xc6816ae5
  42e2ef:	repnz adc edi,ebp
  42e2f2:	dec    edx
  42e2f4:	adc    DWORD PTR [ebx+0x110c974],edi
  42e2fa:	and    al,0x99
  42e2fc:	fwait
  42e2fd:	mov    al,0xc0
  42e2ff:	popf   
  42e300:	mov    ebp,0x6609c011
  42e305:	jmp    0xe1df3d8d
  42e30a:	add    ebp,ecx
  42e30c:	retf   0x883a
  42e30f:	int3   
  42e310:	or     eax,DWORD PTR [ebx-0xa807d81]
  42e316:	pmaxub mm4,mm3
  42e319:	jmp    0xc8c5891d
  42e31e:	(bad)  
  42e31f:	jge    0x42e2a1
  42e321:	mov    edx,0xea47ce0f
  42e326:	call   DWORD PTR [ebp+0x2e174081]
  42e32c:	jge    0x42e334
  42e32e:	pop    es
  42e32f:	add    BYTE PTR [eax],al
  42e331:	add    dl,dl
  42e333:	cmp    al,0xf
  42e335:	jmp    0x385c0e
  42e33a:	mov    al,ds:0xbd240f3c
  42e33f:	test   BYTE PTR [esi],0xeb
  42e342:	or     eax,0x2e174084
  42e347:	adc    eax,DWORD PTR [edi]
  42e349:	sbb    DWORD PTR [edx+0x4c8a0f3c],eax
  42e34f:	lea    esp,[edx-0x78570c81]
  42e355:	push   ds
  42e356:	add    al,BYTE PTR [ecx-0x61]
  42e359:	and    ecx,DWORD PTR [edi+0x79e6fa9b]
  42e35f:	sbb    al,0x20
  42e361:	and    al,0x7
  42e363:	mov    al,ds:0x5c682a12
  42e368:	or     al,BYTE PTR [ebp-0x791a8c4d]
  42e36e:	pop    ds
  42e36f:	int3   
  42e370:	xacquire xchg BYTE PTR [esp+eax*8+0x4edf244a],ch
  42e378:	mov    ecx,ecx
  42e37a:	lods   al,BYTE PTR ds:[esi]
  42e37b:	out    dx,eax
  42e37c:	mov    BYTE PTR [edi+0x418c961f],bh
  42e382:	add    al,0xc4
  42e384:	or     BYTE PTR [ebx],0xef
  42e387:	daa    
  42e388:	inc    esi
  42e389:	adc    eax,DWORD PTR [ebp-0xb85091f]
  42e38f:	sub    dh,bl
  42e391:	cli    
  42e392:	jl     0x42e34c
  42e394:	cmp    DWORD PTR [ebx+0x0],0xffcf0000
  42e39b:	add    esi,DWORD PTR [ebp+ebx*1+0x15]
  42e39f:	inc    edx
  42e3a0:	add    al,0x6e
  42e3a2:	pop    edi
  42e3a3:	adc    ah,BYTE PTR [ebx]
  42e3a5:	push   0x681fe7f3
  42e3aa:	jo     0x42e395
  42e3ac:	dec    ebx
  42e3ad:	pop    ss
  42e3ae:	shl    BYTE PTR [ebx],0x87
  42e3b1:	xor    eax,0x3384ae70
  42e3b6:	repz or DWORD PTR [esi+0x7de298ad],eax
  42e3bd:	call   FWORD PTR [ebp+0x19fc4186]
  42e3c3:	dec    ecx
  42e3c4:	adc    ebx,DWORD PTR [eax+ebp*4+0x2015da87]
  42e3cb:	sahf   
  42e3cc:	jle    0x42e35d
  42e3ce:	push   es
  42e3cf:	or     eax,0xd1504fc
  42e3d4:	(bad)  
  42e3d5:	mov    ebp,0x80c36bfa
  42e3da:	jmp    0x42e439
  42e3dc:	aaa    
  42e3dd:	pop    ss
  42e3de:	out    dx,eax
  42e3df:	ins    DWORD PTR es:[edi],dx
  42e3e0:	ror    BYTE PTR ds:0xaa8e97bd,cl
  42e3e6:	nop
  42e3e7:	sbb    BYTE PTR [eax-0x7220e46c],cl
  42e3ed:	xor    bh,al
  42e3ef:	int3   
  42e3f0:	mov    eax,edi
  42e3f2:	or     BYTE PTR [ecx+0x49],dh
  42e3f5:	loopne 0x42e38f
  42e3f7:	stos   BYTE PTR es:[edi],al
  42e3f8:	cli    
  42e3f9:	cmp    DWORD PTR [eax],eax
  42e3fb:	outs   dx,DWORD PTR fs:[esi]
  42e3fd:	add    BYTE PTR [eax],al
  42e3ff:	add    BYTE PTR [edx+0x2f8e0190],ch
  42e405:	neg    DWORD PTR [ecx+0xb7c4441]
  42e40b:	inc    eax
  42e40c:	push   ebp
  42e40d:	add    ebp,ecx
  42e40f:	dec    esp
  42e410:	push   ebp
  42e411:	inc    ebp
  42e412:	jmp    0xe9883f46
  42e417:	fs push esi
  42e419:	inc    ebp
  42e41a:	jmp    0xe98832ef
  42e41f:	cdq    
  42e420:	xchg   esi,eax
  42e421:	inc    ebp
  42e422:	jmp    0xe9887032
  42e427:	std    
  42e428:	xchg   ebp,eax
  42e429:	inc    ebp
  42e42a:	jmp    0xe988721e
  42e42f:	loope  0x42e3c6
  42e431:	inc    ebp
  42e432:	jmp    0xe9887074
  42e437:	fs xchg ebp,eax
  42e439:	inc    ebp
  42e43a:	jmp    0xe988719f
  42e43f:	xchg   ebx,eax
  42e440:	push   ebp
  42e441:	inc    ebp
  42e442:	jmp    0xe9883d29
  42e447:	sub    DWORD PTR [edi+0x45],ecx
  42e44a:	add    cl,ch
  42e44c:	push   0x5c
  42e44e:	cmp    eax,0x3d5b8be9
  42e453:	jmp    0xe9804624
  42e458:	test   DWORD PTR [ebp+0x3d],ebx
  42e45b:	jmp    0xe9804299
  42e460:	test   eax,0xe93d5d
  42e465:	add    BYTE PTR [eax],al
  42e467:	test   eax,0x99e93d5d
  42e46c:	pop    ebp
  42e46d:	cmp    eax,0x3d5d99e9
  42e472:	jmp    0xe9804200
  42e477:	xchg   esi,eax
  42e478:	pop    ebp
  42e479:	cmp    eax,0x3d5d8ee9
  42e47e:	jmp    0xe98041fc
  42e483:	pop    esi
  42e484:	pop    ebp
  42e485:	cmp    eax,0x3d5d56e9
  42e48a:	jmp    0xe98041dd
  42e48f:	inc    esi
  42e490:	pop    ebp
  42e491:	cmp    eax,0x3d5d5ee9
  42e496:	jmp    0xe98041f1
  42e49b:	mov    esp,0xdbe93d5b
  42e4a0:	pop    ebx
  42e4a1:	cmp    eax,0x3d5c79e9
  42e4a6:	jmp    0xe9804192
  42e4ab:	int    0x5c
  42e4ad:	cmp    eax,0x3d5cd3e9
  42e4b2:	jmp    0xe98040ea
  42e4b7:	popa   
  42e4b8:	pop    esp
  42e4b9:	cmp    eax,0x3d5f41e9
  42e4be:	jmp    0xe9804408
  42e4c3:	jb     0x42e52c
  42e4c5:	cmp    eax,0xab331a00
  42e4ca:	inc    edx
  42e4cb:	add    BYTE PTR [eax],al
  42e4cd:	add    BYTE PTR [edx],cl
  42e4cf:	shr    BYTE PTR [ecx-0x5cd2f5be],cl
  42e4d5:	inc    edx
  42e4d6:	sbb    dl,BYTE PTR [ebx+0x381a42a7]
  42e4dc:	scas   eax,DWORD PTR es:[edi]
  42e4dd:	inc    edx
  42e4de:	or     bl,BYTE PTR [edi-0x4d]
  42e4e1:	inc    edx
  42e4e2:	or     dl,BYTE PTR [ebx+0x7fda42b0]
  42e4e8:	mov    al,0x42
  42e4ea:	ficom  DWORD PTR [ecx+esi*4]
  42e4ed:	inc    edx
  42e4ee:	retf   0xa79b
  42e4f1:	inc    edx
  42e4f2:	retf   0xb3ad
  42e4f5:	inc    edx
  42e4f6:	fidiv  DWORD PTR [edx]
  42e4f8:	mov    cl,0x42
  42e4fa:	fiadd  DWORD PTR [edi+ebp*4]
  42e4fd:	inc    edx
  42e4fe:	retf   0xaeda
  42e501:	inc    edx
  42e502:	retf   0xa815
  42e505:	inc    edx
  42e506:	call   0xae70:0x9a42b3b7
  42e50d:	inc    edx
  42e50e:	mov    dl,BYTE PTR [eax-0x56]
  42e511:	inc    edx
  42e512:	mov    bl,BYTE PTR [edi-0x56]
  42e515:	inc    edx
  42e516:	call   0xaf94:0x9a42aa72
  42e51d:	inc    edx
  42e51e:	mov    al,BYTE PTR [ecx+esi*4+0x42]
  42e522:	mov    bl,bl
  42e524:	mov    al,0x42
  42e526:	pop    edx
  42e527:	adc    esi,DWORD PTR [eax-0x4fd4a5be]
  42e52d:	inc    edx
  42e52e:	dec    edx
  42e52f:	arpl   WORD PTR [edi+0x42],bp
  42e535:	dec    edx
  42e536:	arpl   WORD PTR [edi-0x509ca5be],bp
  42e53c:	inc    edx
  42e53d:	pop    edx
  42e53e:	arpl   WORD PTR [edi-0x7e26b5be],bp
  42e544:	push   ds
  42e545:	rep ins DWORD PTR es:[edi],dx
  42e547:	mov    esi,0xae1a0fe
  42e54c:	mov    bl,0xb5
  42e54e:	stos   DWORD PTR es:[edi],eax
  42e54f:	xor    DWORD PTR [edi-0x66d805ce],eax
  42e555:	mov    ah,0xc
  42e557:	fwait
  42e558:	pop    edx
  42e559:	jo     0x42e573
  42e55b:	add    eax,0xcf67d474
  42e560:	(bad)  
  42e561:	cld    
  42e562:	lahf   
  42e563:	and    al,0x37
  42e565:	sub    ebp,DWORD PTR [edi+eiz*8+0x24c3b37e]
  42e56c:	aaa    
  42e56d:	mov    ebx,0xb085ff4b
  42e572:	fild   QWORD PTR [ebx+0x18ff8cfd]
  42e578:	adc    al,0x9b
  42e57a:	sahf   
  42e57b:	pop    ss
  42e57c:	adc    BYTE PTR [eax+0x5d],bh
  42e57f:	push   es
  42e580:	pop    ds
  42e581:	xor    eax,0xb4f77d9c
  42e586:	push   0x7
  42e588:	das    
  42e589:	mov    bl,0x5f
  42e58b:	xor    eax,0x36dfe0bf
  42e590:	mov    edi,0x61941945
  42e595:	jo     0x42e5ac
  42e597:	out    dx,eax
  42e598:	inc    DWORD PTR [eax]
  42e59a:	add    BYTE PTR [eax],al
  42e59c:	push   es
  42e59d:	mov    al,0x24
  42e59f:	jg     0x42e5a6
  42e5a1:	xchg   edx,eax
  42e5a2:	(bad)  
  42e5a3:	jno    0x42e58f
  42e5a5:	mov    ch,0x4
  42e5a7:	adc    bh,bh
  42e5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e5aa:	int    0xbf
  42e5ac:	int    0x60
  42e5ae:	xchg   esp,eax
  42e5af:	add    ebx,edi
  42e5b1:	retf   
  42e5b2:	xchg   edx,eax
  42e5b3:	out    0x6d,eax
  42e5b5:	dec    esp
  42e5b6:	cdq    
  42e5b7:	cli    
  42e5b8:	pop    esp
  42e5b9:	ja     0x42e5b0
  42e5bb:	mov    edi,0x52befdb3
  42e5c0:	js     0x42e5c8
  42e5c2:	and    edi,esp
  42e5c4:	(bad)  
  42e5c5:	out    0xe,al
  42e5c7:	add    al,0xa1
  42e5c9:	(bad)  
  42e5ca:	sti    
  42e5cb:	xlat   BYTE PTR ds:[ebx]
  42e5cc:	add    al,BYTE PTR [edi-0x17]
  42e5cf:	mov    edx,esi
  42e5d1:	fsubr  DWORD PTR [eax+ebp*8]
  42e5d4:	add    BYTE PTR [edx+0x9cf0fa4],cl
  42e5da:	mov    ecx,0xc50a8c05
  42e5df:	or     esi,ebx
  42e5e1:	jg     0x42e5c5
  42e5e3:	sti    
  42e5e4:	cdq    
  42e5e5:	adc    esp,esp
  42e5e7:	sub    edx,esp
  42e5e9:	cs ds or eax,0x1f65c71c
  42e5f0:	lsl    ebp,ax
  42e5f3:	push   cs
  42e5f4:	xchg   edi,eax
  42e5f6:	imul   eax,DWORD PTR [edi-0xd],0x8
  42e5fa:	imul   esp,DWORD PTR ds:0x456086e0,0xf2000000
  42e604:	enter  0x3ec,0x75
  42e608:	inc    esi
  42e609:	repnz mov DWORD PTR [edi+eax*4+0x2271e06],esp
  42e611:	imul   ebx,DWORD PTR [ecx-0x7d25ee03],0x3e4e318
  42e61b:	call   0xb6e00c92
  42e620:	xchg   DWORD PTR [esi],eax
  42e622:	cli    
  42e623:	(bad)  
  42e624:	mov    dh,0x68
  42e626:	mov    ds:0x8cb8d8f9,al
  42e62b:	and    esi,esp
  42e62d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e62e:	or     bl,dh
  42e630:	xlat   BYTE PTR ds:[ebx]
  42e631:	test   al,0x2a
  42e633:	pop    ss
  42e634:	aaa    
  42e635:	jo     0x42e67d
  42e637:	jmp    0x42e6b6
  42e639:	and    dl,BYTE PTR [eax]
  42e63b:	push   0x45
  42e63d:	add    cl,bl
  42e63f:	jge    0x42e687
  42e641:	adc    bh,dl
  42e643:	cmp    DWORD PTR [ebx+eax*8],edi
  42e646:	das    
  42e647:	jmp    0x42e64e
  42e649:	add    cl,ch
  42e64b:	lock mov DWORD PTR [ecx],0xffcbab15
  42e652:	push   es
  42e653:	js     0x42e693
  42e655:	adc    al,0x86
  42e657:	and    al,0xd8
  42e659:	adc    DWORD PTR [ecx],ebp
  42e65b:	out    dx,eax
  42e65c:	or     eax,esp
  42e65e:	in     eax,0x7b
  42e660:	(bad)  
  42e661:	mov    esi,0xe7977a17
  42e666:	cli    
  42e667:	add    BYTE PTR [eax],al
  42e669:	add    al,dh
  42e66b:	push   es
  42e66c:	add    BYTE PTR [edi-0x55],dl
  42e66f:	loop   0x42e678
  42e671:	call   0x4194ef7a
  42e676:	lock mov ds:0xc56a46fc,al
  42e67c:	pop    ecx
  42e67d:	sub    ebp,ebx
  42e67f:	push   es
  42e680:	xchg   DWORD PTR [edi-0x52fe3808],ebp
  42e686:	cmp    al,0xcc
  42e688:	jmp    FWORD PTR [ebx-0x49]
  42e68b:	pop    ss
  42e68c:	add    edi,DWORD PTR [ecx-0x4600da9]
  42e692:	xor    BYTE PTR [edi],al
  42e694:	sti    
  42e695:	xchg   edi,eax
  42e696:	mov    al,ds:0x7c0adaa3
  42e69b:	nop
  42e69c:	ret    0x14e7
  42e69f:	ds inc eax
  42e6a1:	jmp    0xe1bcf359
  42e6a6:	lock adc DWORD PTR [edx],edx
  42e6a9:	push   ebx
  42e6aa:	mul    DWORD PTR [eax+eax*1]
  42e6ad:	push   ebx
  42e6ae:	lock and al,0x0
  42e6b1:	(bad)  
  42e6b2:	gs push ebx
  42e6b4:	or     eax,0x417def29
  42e6b9:	add    BYTE PTR [edx-0x7c],ah
  42e6bc:	mov    edx,0x29c64b75
  42e6c1:	rcr    BYTE PTR [edx],0xc6
  42e6c4:	add    eax,0x798f1bb7
  42e6c9:	clc    
  42e6ca:	es repnz cli 
  42e6cd:	xor    al,BYTE PTR [eax]
  42e6cf:	add    BYTE PTR [eax],al
  42e6d1:	mov    al,dh
  42e6d3:	add    eax,0x798ad3b6
  42e6d8:	rcr    BYTE PTR [esi-0x62],0xbf
  42e6dc:	ret    
  42e6dd:	(bad)  
  42e6de:	jge    0x42e6c6
  42e6e0:	and    DWORD PTR [esi-0x59],0x50
  42e6e4:	push   edi
  42e6e5:	xchg   ecx,eax
  42e6e6:	outs   dx,DWORD PTR ds:[esi]
  42e6e7:	sub    eax,eax
  42e6e9:	fidivr DWORD PTR [ebx+0x73]
  42e6ec:	in     al,0xa2
  42e6ee:	aam    0xff
  42e6f0:	std    
  42e6f1:	xchg   ebp,eax
  42e6f2:	pop    edi
  42e6f3:	add    BYTE PTR [ebp+eax*2+0x3645876b],cl
  42e6fa:	jns    0x42e73f
  42e6fc:	lock jp 0x42e76a
  42e6ff:	adc    edx,DWORD PTR [ebx+edi*4+0x1a850046]
  42e706:	icebp  
  42e707:	or     esp,DWORD PTR [ecx]
  42e709:	(bad)  
  42e70a:	jb     0x42e701
  42e70c:	adc    eax,0x3a97c6
  42e711:	inc    ebx
  42e712:	inc    ecx
  42e713:	lock push 0xffffffae
  42e716:	pop    esi
  42e717:	cmp    al,0x16
  42e719:	hlt    
  42e71a:	push   0x4a
  42e71c:	lea    ecx,[edi+0x62]
  42e71f:	loop   0x42e6c1
  42e721:	mov    ch,BYTE PTR [ebp+esi*8-0x7c]
  42e725:	(bad)  
  42e727:	das    
  42e728:	push   0xffffff92
  42e72a:	jns    0x42e76f
  42e72c:	lock mov edx,0xa2e4437f
  42e732:	jge    0x42e72e
  42e734:	std    
  42e735:	add    BYTE PTR [eax],al
  42e737:	add    bl,dh
  42e739:	mov    al,0x7f
  42e73b:	mov    edi,0x42c99df
  42e740:	outs   dx,BYTE PTR ds:[esi]
  42e741:	fist   DWORD PTR [edi-0x601c99b1]
  42e747:	out    0xcf,eax
  42e749:	lahf   
  42e74a:	cwde   
  42e74b:	cli    
  42e74c:	outs   dx,DWORD PTR ds:[esi]
  42e74d:	pusha  
  42e74e:	(bad)  
  42e750:	outs   dx,BYTE PTR ds:[esi]
  42e751:	fistp  DWORD PTR [edi-0x67611e19]
  42e757:	cli    
  42e758:	ja     0x42e7ba
  42e75a:	adc    BYTE PTR [edx],bl
  42e75c:	cdq    
  42e75d:	xchg   ebx,eax
  42e75e:	sub    al,0x0
  42e760:	les    eax,FWORD PTR [eax-0x2002cc10]
  42e766:	add    esp,DWORD PTR [esi-0x5]
  42e769:	and    al,BYTE PTR [ecx-0x10]
  42e76c:	mov    ds:0xa40bbf1c,eax
  42e771:	and    cl,dh
  42e773:	das    
  42e774:	fstp   QWORD PTR [edi-0x2]
  42e777:	jle    0x42e730
  42e779:	xchg   edi,eax
  42e77a:	xchg   DWORD PTR [edi+ecx*8+0x47],eax
  42e77e:	stc    
  42e77f:	(bad)  
  42e780:	fiadd  WORD PTR [eax+0x37]
  42e783:	pop    edx
  42e784:	stos   BYTE PTR es:[edi],al
  42e785:	fsubr  QWORD PTR ds:0xabcf7853
  42e78b:	ins    DWORD PTR es:[edi],dx
  42e78c:	js     0x42e766
  42e78e:	xchg   esi,eax
  42e78f:	or     al,BYTE PTR [ebp-0x4b458321]
  42e795:	lahf   
  42e796:	(bad)  
  42e797:	(bad)  
  42e798:	js     0x42e77a
  42e79a:	mov    ?,eax
  42e79c:	add    BYTE PTR [eax],al
  42e79e:	add    BYTE PTR [ebp-0x74ee7423],ah
  42e7a4:	arpl   WORD PTR [ecx+0x509894fa],cx
  42e7aa:	mov    edi,0x8595886a
  42e7af:	das    
  42e7b0:	les    eax,FWORD PTR [edx]
  42e7b2:	xchg   DWORD PTR [esi-0x4b0de6fa],edi
  42e7b8:	push   es
  42e7b9:	jno    0x42e7fc
  42e7bb:	ins    DWORD PTR es:[edi],dx
  42e7bc:	jg     0x42e7ea
  42e7be:	loopne 0x42e7b4
  42e7c0:	jle    0x42e7e4
  42e7c2:	pop    es
  42e7c3:	outs   dx,BYTE PTR ds:[esi]
  42e7c4:	inc    eax
  42e7c5:	in     eax,dx
  42e7c6:	cdq    
  42e7c7:	xchg   esi,eax
  42e7c8:	test   DWORD PTR [eax+eiz*8],edi
  42e7cb:	loopne 0x42e7d3
  42e7cd:	popa   
  42e7ce:	xor    edx,esi
  42e7d0:	adc    bl,bl
  42e7d2:	sub    eax,0xe01c89e7
  42e7d7:	fdiv   QWORD PTR [esi]
  42e7d9:	call   0xefae:0xe4c2adb2
  42e7e0:	sahf   
  42e7e1:	call   0xecc0180
  42e7e6:	lock or al,0xf
  42e7e9:	aam    0x99
  42e7eb:	or     DWORD PTR [esi],esi
  42e7ed:	rcr    sp,0x30
  42e7f1:	push   0xffffffb2
  42e7f3:	jge    0x42e7b7
  42e7f5:	hlt    
  42e7f6:	cmp    bl,BYTE PTR [ecx+0x4103ecc4]
  42e7fc:	xor    BYTE PTR [esi-0x65],bl
  42e7ff:	outs   dx,DWORD PTR ds:[esi]
  42e800:	mov    bl,dl
  42e802:	or     eax,DWORD PTR [eax]
  42e804:	add    BYTE PTR [eax],al
  42e806:	jbe    0x42e7b4
  42e808:	mov    esp,0x4e0413dd
  42e80d:	shl    DWORD PTR [edi-0x54],1
  42e810:	mov    esp,0xe74077d1
  42e815:	cmp    BYTE PTR [ebx+edx*1-0x2e],0xab
  42e81a:	sti    
  42e81b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e81c:	sbb    ebx,DWORD PTR [edx-0x6e94688b]
  42e822:	and    bl,ah
  42e824:	adc    bl,0x27
  42e827:	pop    es
  42e828:	jmp    0xc54e545f
  42e82d:	out    dx,eax
  42e82e:	and    bl,BYTE PTR [edi-0x724f1c01]
  42e834:	cli    
  42e835:	gs mov al,0x13
  42e838:	push   es
  42e839:	aas    
  42e83a:	inc    edi
  42e83b:	cmp    al,0xde
  42e83d:	fmul   QWORD PTR [edx+0x4fc2bfda]
  42e843:	jg     0x42e873
  42e845:	cdq    
  42e846:	lock lahf 
  42e848:	adc    eax,0x133f51
  42e84d:	jmp    0xdb67455
  42e852:	inc    ebx
  42e853:	mov    al,ds:0x8d5aa977
  42e858:	test   dl,al
  42e85a:	ror    BYTE PTR gs:[edx],0x74
  42e85e:	aaa    
  42e85f:	mov    es,edi
  42e861:	retf   
  42e862:	xor    DWORD PTR ds:0x6f3ab5a,ebp
  42e868:	push   ebp
  42e869:	jb     0x42e86b
  42e86b:	add    BYTE PTR [eax],al
  42e86d:	dec    ebx
  42e86e:	or     esp,ebp
  42e870:	loope  0x42e8e9
  42e872:	or     ecx,DWORD PTR [ecx+ebp*8]
  42e875:	sar    BYTE PTR [ebp+0x74],cl
  42e878:	sub    DWORD PTR [edi+0x43],0xffffffec
  42e87c:	fsubr  st(6),st
  42e87e:	and    BYTE PTR ds:0x447e12c1,al
  42e884:	inc    ecx
  42e885:	pop    ds
  42e886:	mov    al,ds:0x2fcdc312
  42e88b:	data16 fnstcw WORD PTR [ebx+0x12]
  42e88f:	or     al,0xc7
  42e891:	jns    0x42e8d5
  42e893:	call   0x4fdcecfc
  42e898:	inc    ecx
  42e899:	aam    0xa9
  42e89b:	cld    
  42e89c:	es add eax,0x58a48cf2
  42e8a2:	aaa    
  42e8a3:	sti    
  42e8a4:	pushf  
  42e8a5:	clc    
  42e8a6:	sahf   
  42e8a7:	push   edi
  42e8a8:	sub    DWORD PTR [edx-0x74],edi
  42e8ab:	add    DWORD PTR [eax],0xffffffca
  42e8ae:	neg    BYTE PTR [esi+eiz*2]
  42e8b1:	pop    ss
  42e8b2:	jne    0x42e922
  42e8b4:	adc    ecx,DWORD PTR [ebp-0x72af3eca]
  42e8ba:	clc    
  42e8bb:	ud0    edx,DWORD PTR [edi]
  42e8be:	sti    
  42e8bf:	out    0x40,eax
  42e8c1:	call   0x4f7:0x9a84f56e
  42e8c8:	xor    ecx,DWORD PTR [edx+0x5902e343]
  42e8ce:	ret    
  42e8cf:	mov    edx,0x5e000000
  42e8d5:	add    ecx,DWORD PTR [ebx-0x39]
  42e8d8:	push   ebp
  42e8d9:	or     DWORD PTR [esi-0x2e4db5c0],0x56
  42e8e0:	ret    
  42e8e1:	into   
  42e8e2:	pop    es
  42e8e3:	mov    ebp,ebp
  42e8e5:	(bad)  
  42e8e6:	mov    esi,0x8e7b1647
  42e8eb:	inc    eax
  42e8ec:	or     bl,bl
  42e8ee:	out    0x8b,eax
  42e8f0:	retf   0x8d02
  42e8f3:	inc    edi
  42e8f4:	es jnp 0x42e94c
  42e8f7:	sbb    al,0x93
  42e8f9:	into   
  42e8fa:	pop    ds
  42e8fb:	mov    ebp,ebp
  42e8fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e8fe:	xchg   DWORD PTR [edi-0x1e],ebx
  42e901:	sar    BYTE PTR [ebp-0xa6015b9],cl
  42e907:	adc    eax,0x3a79d2
  42e90c:	aas    
  42e90d:	pop    ss
  42e90e:	sub    al,0xb8
  42e910:	or     BYTE PTR [edx],0x0
  42e913:	add    BYTE PTR [edx],ah
  42e915:	(bad)  [edx]
  42e917:	(bad)  
  42e918:	std    
  42e919:	nop
  42e91a:	ins    DWORD PTR es:[edi],dx
  42e91b:	and    al,0x6c
  42e91d:	xchg   ecx,eax
  42e91e:	push   ebp
  42e91f:	sub    BYTE PTR [edi+eax*8],al
  42e922:	sbb    eax,DWORD PTR [ecx]
  42e924:	aad    0xc6
  42e926:	pop    ds
  42e927:	cmp    dh,bl
  42e929:	outs   dx,DWORD PTR ds:[esi]
  42e92a:	(bad)  
  42e92b:	jmp    FWORD PTR [eax+0x2d]
  42e92e:	cmp    al,0xbf
  42e930:	ds stc 
  42e932:	mov    ds:0x83783e86,al
  42e937:	jmp    0x42e939
  42e939:	add    BYTE PTR [eax],al
  42e93b:	out    0xa5,eax
  42e93d:	das    
  42e93e:	call   0xfadb419f
  42e943:	push   0xfcf18060
  42e948:	cmc    
  42e949:	dec    esi
  42e94a:	jmp    DWORD PTR [eax+esi*2+0x7d]
  42e94e:	stc    
  42e94f:	pop    esp
  42e950:	gs jp  0x42e8f8
  42e953:	rep outs dx,DWORD PTR ds:[esi]
  42e955:	(bad)  
  42e956:	jle    0x42e92e
  42e958:	dec    ebx
  42e959:	add    edi,ebx
  42e95b:	mov    esi,0x6ebfcd67
  42e960:	xor    ebp,DWORD PTR [esi+eiz*4-0x59992678]
  42e967:	js     0x42e917
  42e969:	stos   DWORD PTR es:[edi],eax
  42e96a:	dec    esi
  42e96b:	push   es
  42e96c:	sahf   
  42e96d:	xchg   edx,eax
  42e96e:	cs sbb al,0xe7
  42e971:	inc    eax
  42e972:	in     al,0xd8
  42e974:	mov    ah,0x2
  42e976:	test   BYTE PTR [esi+0x70],dh
  42e979:	(bad)  
  42e97a:	push   DWORD PTR [esi+0x74]
  42e97d:	int3   
  42e97e:	mov    BYTE PTR [esi+0x3448887],dh
  42e984:	shr    BYTE PTR [ebx+edi*8],0x66
  42e988:	js     0x42e9b3
  42e98a:	call   0xfad4f0a5
  42e98f:	push   0xffffffaa
  42e991:	mov    ds:0xfdc2ac36,al
  42e996:	mov    BYTE PTR [esi+0x40],cl
  42e999:	mov    DWORD PTR [ebx+ecx*8-0x61],eax
  42e99d:	sub    al,0xfb
  42e99f:	add    BYTE PTR [eax],al
  42e9a1:	add    BYTE PTR [esi+0x68],al
  42e9a4:	es jmp 0x42bf060
  42e9aa:	fwait
  42e9ab:	pop    ss
  42e9ac:	rcl    BYTE PTR [ebp-0x70547057],1
  42e9b2:	in     eax,0x4d
  42e9b4:	xchg   ebx,eax
  42e9b5:	add    ch,BYTE PTR [edx+0x3]
  42e9b8:	add    DWORD PTR [ebx+0x2aa912cd],ecx
  42e9be:	mov    bl,0x1e
  42e9c0:	fs adc ebp,ebx
  42e9c3:	(bad)  
  42e9c4:	add    BYTE PTR [eax],dh
  42e9c6:	xchg   ebx,eax
  42e9c7:	and    ecx,0x7f
  42e9ca:	lods   al,BYTE PTR ds:[esi]
  42e9cb:	cli    
  42e9cc:	stc    
  42e9cd:	sub    DWORD PTR [ebx],ecx
  42e9cf:	xchg   esp,eax
  42e9d0:	sub    esp,DWORD PTR [eax+0x82591ac]
  42e9d6:	int3   
  42e9d7:	inc    esi
  42e9d8:	loopne 0x42e9dc
  42e9da:	icebp  
  42e9db:	(bad)  
  42e9dc:	mov    ecx,0x291d14f0
  42e9e1:	add    al,0xbc
  42e9e3:	dec    edx
  42e9e4:	fcom   QWORD PTR [esi+0x45912f5]
  42e9ea:	adc    al,0x20
  42e9ec:	call   0x1fa3:0x4a6e0f10
  42e9f3:	test   DWORD PTR [ecx+0x626e0710],ecx
  42e9f9:	mov    ds:0x1079850f,eax
  42e9fe:	jmp    FWORD PTR [ebp+0x5a]
  42ea01:	mov    ds:0xc3b684ff,eax
  42ea06:	add    BYTE PTR [eax],al
  42ea08:	add    BYTE PTR [ecx-0xf3ed01c],bl
  42ea0e:	push   es
  42ea0f:	iret   
  42ea10:	pop    es
  42ea11:	pop    ebx
  42ea12:	out    dx,eax
  42ea13:	mov    eax,0x146ef342
  42ea18:	je     0x42e9ee
  42ea1a:	test   BYTE PTR [ebp-0x64],ch
  42ea1d:	dec    ebp
  42ea1e:	jmp    0x4cff:0xea44033c
  42ea25:	lock xchg ecx,eax
  42ea27:	dec    edx
  42ea28:	in     eax,0x69
  42ea2a:	pop    es
  42ea2b:	sti    
  42ea2c:	mov    ecx,0x5748dac
  42ea31:	leave  
  42ea32:	je     0x42eaa2
  42ea34:	(bad)  
  42ea35:	leave  
  42ea36:	js     0x42ea4f
  42ea38:	jmp    0x8b8c:0xa7870ee5
  42ea3f:	(bad)  
  42ea40:	jg     0x42eac1
  42ea42:	xor    DWORD PTR [ecx],0x8712ecf6
  42ea48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ea49:	call   0x850b3fbc
  42ea4e:	add    DWORD PTR [ecx+ebp*4+0x378734f4],0x4fd689eb
  42ea59:	popa   
  42ea5a:	xor    DWORD PTR [ecx-0xf],0x720bfb67
  42ea61:	add    al,0xf
  42ea63:	call   0xfac67a90
  42ea68:	fs das 
  42ea6a:	sti    
  42ea6b:	sbb    BYTE PTR [edx+0x0],dh
  42ea6e:	add    BYTE PTR [eax],al
  42ea70:	in     eax,0x1a
  42ea72:	test   edx,eax
  42ea74:	std    
  42ea75:	sbb    al,0xfb
  42ea77:	pop    ds
  42ea78:	daa    
  42ea79:	xor    DWORD PTR [ebp+ebx*8+0x6b],0x1f9107cb
  42ea81:	addr16 cld 
  42ea83:	jle    0x42ea09
  42ea85:	ret    
  42ea86:	jae    0x42ea69
  42ea88:	jae    0x42ea5d
  42ea8a:	sti    
  42ea8b:	outs   dx,BYTE PTR ds:[esi]
  42ea8c:	lahf   
  42ea8d:	push   es
  42ea8e:	out    0xfb,eax
  42ea90:	xchg   edx,ecx
  42ea92:	jecxz  0x42eae6
  42ea94:	arpl   WORD PTR ds:0x8cb3a9c0,si
  42ea9a:	fs inc ecx
  42ea9c:	jb     0x42ea70
  42ea9e:	sti    
  42ea9f:	add    BYTE PTR ds:0x2de8ba59,dh
  42eaa5:	mov    bh,dl
  42eaa7:	dec    DWORD PTR [eax]
  42eaa9:	adc    eax,DWORD PTR [eax]
  42eaab:	push   esi
  42eaac:	pop    ebp
  42eaad:	mov    gs,edi
  42eaaf:	jmp    FWORD PTR [edi-0x65bff011]
  42eab5:	mov    ?,edx
  42eab7:	jmp    0x42ea71
  42eab9:	push   esi
  42eaba:	mov    edx,0x83aad940
  42eabf:	(bad)  
  42eac0:	push   cs
  42eac1:	jno    0x42eb23
  42eac3:	pinsrw mm1,WORD PTR [edi-0x75],0x46
  42eac8:	cwde   
  42eac9:	and    DWORD PTR [ebx-0x3f],edi
  42eacc:	dec    ebx
  42eacd:	aaa    
  42eace:	pop    esi
  42eacf:	mov    DWORD PTR [edx-0x66],esp
  42ead2:	adc    esp,DWORD PTR [eax+0x6b000000]
  42ead8:	(bad)  
  42ead9:	inc    DWORD PTR [edx+0x21740642]
  42eadf:	leave  
  42eae0:	lahf   
  42eae1:	(bad)  
  42eae2:	jae    0x42eb3a
  42eae4:	xchg   dl,dh
  42eae6:	add    bh,bh
  42eae8:	xor    DWORD PTR [edx],0x46
  42eaeb:	sbb    bl,BYTE PTR [edx+ecx*1]
  42eaee:	dec    BYTE PTR [ebx+edi*2]
  42eaf1:	test   BYTE PTR [esi+0x2a],cl
  42eaf4:	xchg   edi,esi
  42eaf6:	sbb    al,BYTE PTR [esi]
  42eaf8:	inc    esi
  42eaf9:	sub    al,0xc0
  42eafb:	in     eax,0x3c
  42eafd:	mov    edx,0x3e8e0a04
  42eb02:	and    al,0x6
  42eb04:	mov    WORD PTR [eax+0x12],cs
  42eb07:	or     edi,0x3
  42eb0a:	(bad)  
  42eb0b:	aam    0x7e
  42eb0d:	sub    esi,esi
  42eb0f:	dec    ebp
  42eb10:	mov    DWORD PTR [edi],0x6da05
  42eb16:	cmp    edx,DWORD PTR [ecx+edx*1]
  42eb19:	add    eax,0xea5ff389
  42eb1e:	out    0xc,al
  42eb20:	out    0x46,eax
  42eb22:	or     al,0x78
  42eb24:	mov    bh,0x6
  42eb26:	das    
  42eb27:	mov    eax,ds:0xe273c205
  42eb2c:	push   ecx
  42eb2d:	aad    0x30
  42eb2f:	imul   eax,DWORD PTR ds:[eax+0x62],0x74009eea
  42eb37:	out    dx,al
  42eb38:	in     al,dx
  42eb39:	mov    ebp,0xfd
  42eb3e:	mov    DWORD PTR [ecx],ecx
  42eb40:	xchg   BYTE PTR [edi+0x3],cl
  42eb43:	sub    DWORD PTR [edi],edi
  42eb45:	adc    al,0xf2
  42eb47:	outs   dx,DWORD PTR ds:[esi]
  42eb48:	(bad)  
  42eb49:	inc    DWORD PTR [ebx+0x6f]
  42eb4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb4d:	mov    al,0x26
  42eb4f:	in     eax,0xa2
  42eb51:	jle    0x42eae2
  42eb53:	js     0x42ead5
  42eb55:	jmp    0x42eb66
  42eb57:	outs   dx,BYTE PTR ds:[esi]
  42eb58:	(bad)  
  42eb59:	inc    eax
  42eb5b:	cmp    DWORD PTR [ebx+0x74],edi
  42eb5e:	out    dx,eax
  42eb5f:	inc    eax
  42eb60:	sar    edx,cl
  42eb62:	push   0x24
  42eb64:	call   0xf00cf584
  42eb69:	or     ch,BYTE PTR [esi+0x7a]
  42eb6c:	add    eax,DWORD PTR [eax]
  42eb6e:	repz in al,0x45
  42eb71:	and    dh,dh
  42eb73:	outs   dx,DWORD PTR ds:[esi]
  42eb74:	(bad)  
  42eb75:	lahf   
  42eb76:	repz js 0x42eafe
  42eb79:	daa    
  42eb7a:	repnz outs dx,DWORD PTR ds:[esi]
  42eb7c:	(bad)  
  42eb7d:	cmp    al,0xf3
  42eb7f:	outs   dx,BYTE PTR ds:[esi]
  42eb80:	(bad)  
  42eb81:	jmp    esp
  42eb83:	in     eax,dx
  42eb84:	lock add bl,dh
  42eb87:	outs   dx,DWORD PTR ds:[esi]
  42eb88:	jg     0x42ebcb
  42eb8a:	xlat   BYTE PTR ds:[ebx]
  42eb8b:	pop    ds
  42eb8c:	(bad)  
  42eb8d:	je     0x42eb7a
  42eb8f:	out    0x47,al
  42eb91:	and    al,0xd3
  42eb93:	loop   0x42ebdc
  42eb95:	and    al,0x1b
  42eb97:	pop    es
  42eb98:	mov    ecx,0x12b687c
  42eb9d:	jge    0x42ebf7
  42eb9f:	sub    esi,ebp
  42eba1:	jl     0x42eba3
  42eba3:	add    BYTE PTR [eax],al
  42eba5:	pop    eax
  42eba6:	sub    ecx,DWORD PTR [ecx]
  42eba8:	pushf  
  42eba9:	pop    esi
  42ebaa:	pop    edx
  42ebab:	inc    ecx
  42ebac:	xchg   ebx,eax
  42ebad:	outs   dx,DWORD PTR ds:[esi]
  42ebae:	inc    esi
  42ebaf:	jmp    0xe949ac3b
  42ebb4:	add    esp,DWORD PTR [eax]
  42ebb6:	fidivr DWORD PTR [esi-0x1612bffa]
  42ebbc:	sbb    esi,ebx
  42ebbe:	push   es
  42ebbf:	jmp    0xcd0d5b47
  42ebc4:	retf   
  42ebc5:	and    al,0x82
  42ebc7:	repz sar esi,cl
  42ebca:	(bad)  
  42ebcb:	call   0xed6e1c4c
  42ebd0:	xchg   BYTE PTR [ecx+eax*4+0x63b87e1],al
  42ebd7:	jmp    0x2cd6aedf
  42ebdc:	call   0xcf13c2d5
  42ebe1:	rol    DWORD PTR [eax-0x46b782f],1
  42ebe7:	or     BYTE PTR [ebx-0x6d0ad540],dl
  42ebed:	fbld   TBYTE PTR [esi+0x3ff343d6]
  42ebf3:	xor    eax,0x6511e0e8
  42ebf8:	mov    DWORD PTR [ecx+eax*4],ebp
  42ebfb:	call   0xf56d8c92
  42ec00:	xchg   edx,eax
  42ec01:	pop    es
  42ec02:	jnp    0x42ebfc
  42ec04:	inc    ebx
  42ec05:	rep ins DWORD PTR es:[edi],dx
  42ec07:	push   cs
  42ec08:	int    0x0
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	mov    BYTE PTR [edx],ch
  42ec0e:	fnstsw WORD PTR [esi-0x56]
  42ec11:	outs   dx,BYTE PTR es:[esi]
  42ec13:	rol    BYTE PTR [eax],1
  42ec15:	push   ss
  42ec16:	add    BYTE PTR [ecx],ch
  42ec18:	out    dx,eax
  42ec19:	cli    
  42ec1a:	add    DWORD PTR [esi+0x4],ebp
  42ec1d:	sub    edx,DWORD PTR [esi+eiz*2]
  42ec20:	test   eax,0xfee965d1
  42ec25:	push   es
  42ec26:	in     ax,dx
  42ec28:	xor    esp,0x1b600923
  42ec2e:	sbb    al,0x30
  42ec31:	pop    es
  42ec32:	xchg   DWORD PTR [ecx],esp
  42ec34:	imul   ebx,DWORD PTR [ecx+0x73],0xffffffa5
  42ec38:	popa   
  42ec39:	neg    BYTE PTR [edi]
  42ec3b:	(bad)  
  42ec3c:	in     al,dx
  42ec3d:	sub    ah,BYTE PTR [eax]
  42ec3f:	mov    edx,0x1efc5e88
  42ec44:	add    DWORD PTR [edi+edi*4+0x737bf19d],0x439398c5
  42ec4f:	int    0x8c
  42ec51:	ror    BYTE PTR [edi+0x11],1
  42ec54:	dec    edx
  42ec55:	inc    eax
  42ec56:	sti    
  42ec57:	idiv   BYTE PTR [esi-0x3952d85]
  42ec5d:	sub    dl,BYTE PTR [eax]
  42ec5f:	jmp    0xfbe3274b
  42ec64:	mov    al,0x6
  42ec66:	je     0x42ec57
  42ec68:	xor    esp,0x23
  42ec6b:	stc    
  42ec6c:	arpl   WORD PTR [esi+0x7e],dx
  42ec6f:	inc    ebp
  42ec70:	add    BYTE PTR [eax],al
  42ec72:	add    BYTE PTR [ebx+0xc],bl
  42ec75:	add    BYTE PTR ds:0xd7c012f,dh
  42ec7b:	repz jnp 0x42ecf1
  42ec7e:	clc    
  42ec7f:	xor    esp,0x23
  42ec82:	cmc    
  42ec83:	adc    DWORD PTR [esi-0x1a],0xffffffd0
  42ec87:	inc    edi
  42ec88:	jge    0x42ecc2
  42ec8a:	adc    eax,0xe374100b
  42ec8f:	arpl   sp,si
  42ec91:	and    eax,DWORD PTR [eax]
  42ec93:	sub    dl,BYTE PTR [edi-0x3be75fed]
  42ec99:	(bad)  
  42ec9a:	cmp    dh,bh
  42ec9c:	addr16 push es
  42ec9e:	je     0x42ec6b
  42eca0:	mov    dh,BYTE PTR [esi+0x24]
  42eca3:	ficom  WORD PTR [esi+0x1f3d0a6e]
  42eca9:	and    al,0xc
  42ecab:	cmp    eax,0x9a129a78
  42ecb0:	add    edx,DWORD PTR [edi+0x5e]
  42ecb3:	dec    edx
  42ecb4:	add    al,0x53
  42ecb6:	mov    esi,DWORD PTR [edi]
  42ecb8:	xor    BYTE PTR [edx-0x7cc235f8],bh
  42ecbe:	icebp  
  42ecbf:	fstp   QWORD PTR [esp+eax*1]
  42ecc2:	call   0x3e9cc3
  42ecc7:	or     DWORD PTR ds:0x2d090004,ebp
  42eccd:	or     BYTE PTR [eax],al
  42eccf:	pop    esp
  42ecd0:	dec    edx
  42ecd1:	add    DWORD PTR [ecx-0x7e],0x54814a
  42ecd8:	add    BYTE PTR [eax],al
  42ecda:	mov    dh,0x7
  42ecdc:	dec    esi
  42ecdd:	imul   ebx,eax,0x72
  42ece0:	dec    ebp
  42ece1:	mov    esp,DWORD PTR [ebx+0x2]
  42ece4:	ds or  cl,al
  42ece7:	dec    edx
  42ece8:	adc    cl,BYTE PTR [ebp+0xe830ec5]
  42ecee:	dec    ecx
  42ecef:	mov    ah,0xf9
  42ecf1:	shl    cl,0xb3
  42ecf4:	ins    BYTE PTR es:[edi],dx
  42ecf5:	or     edi,DWORD PTR [edi+0x22521841]
  42ecfb:	xchg   ecx,eax
  42ecfc:	fdivr  st,st(5)
  42ecfe:	jge    0x42eca2
  42ed00:	cld    
  42ed01:	xor    DWORD PTR [edx-0x79],ebx
  42ed04:	mov    edx,0x45961d74
  42ed09:	or     BYTE PTR [ecx-0xc94f7ea],ah
  42ed0f:	cwde   
  42ed10:	out    0x52,al
  42ed12:	sbb    ecx,DWORD PTR [edx-0x57]
  42ed15:	cld    
  42ed16:	add    al,0x28
  42ed18:	cs mov esi,0x87316df7
  42ed1e:	pop    es
  42ed1f:	in     al,dx
  42ed20:	mov    ds:0x361340f7,al
  42ed25:	push   ebx
  42ed26:	pop    ecx
  42ed27:	outs   dx,DWORD PTR ds:[esi]
  42ed28:	push   ss
  42ed29:	add    BYTE PTR [edi+0x16],ah
  42ed2c:	out    0xe7,eax
  42ed2e:	repz enter 0xfa89,0x78
  42ed33:	enter  0xec81,0x3e
  42ed37:	jno    0x42ed77
  42ed39:	out    0x2e,eax
  42ed3b:	fmul   st,st(5)
  42ed3d:	jmp    0x42ed3f
  42ed3f:	add    BYTE PTR [eax],al
  42ed41:	mov    dh,0x35
  42ed43:	cmp    DWORD PTR [edi-0xee393d9],0xffffffa4
  42ed4a:	jnp    0x42ecd6
  42ed4c:	rdpmc  
  42ed4e:	jo     0x42ed7e
  42ed50:	sti    
  42ed51:	(bad)  
  42ed52:	outs   dx,DWORD PTR ds:[esi]
  42ed53:	in     eax,dx
  42ed54:	aas    
  42ed55:	repz call 0xb022fd2c
  42ed5b:	(bad)  
  42ed5c:	mov    dh,0x6b
  42ed5e:	popa   
  42ed5f:	(bad)  
  42ed60:	jmp    DWORD PTR [eax]
  42ed62:	jne    0x42ed38
  42ed64:	sti    
  42ed65:	mov    eax,ds:0x3dfafeb1
  42ed6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed6b:	std    
  42ed6c:	add    bl,dh
  42ed6e:	outs   dx,DWORD PTR ds:[esi]
  42ed6f:	xchg   ebp,eax
  42ed70:	or     DWORD PTR [ebx+0x42],ecx
  42ed73:	enter  0x4cfa,0x41
  42ed77:	mov    esi,DWORD PTR [edi+eax*2]
  42ed7a:	add    bh,BYTE PTR [edi]
  42ed7c:	add    BYTE PTR [esi+edx*4],bh
  42ed7f:	mov    dl,0xbf
  42ed82:	inc    ebp
  42ed83:	cmp    al,ch
  42ed85:	cwde   
  42ed86:	pop    ebp
  42ed87:	(bad)  
  42ed88:	jmp    eax
  42ed8a:	push   es
  42ed8b:	test   eax,0x3ddbb92f
  42ed90:	jnp    0x42eda1
  42ed92:	fsub   QWORD PTR [esi+0x5bd3f308]
  42ed98:	and    bh,cl
  42ed9a:	mov    ah,BYTE PTR [edi-0x60]
  42ed9d:	adc    al,0x3
  42ed9f:	jmp    0x8e7c91a7
  42eda4:	xor    eax,DWORD PTR [eax]
  42eda6:	add    BYTE PTR [eax],al
  42eda8:	call   0x25375ac0
  42edad:	pop    es
  42edae:	mov    ecx,0xf807078e
  42edb3:	inc    ebx
  42edb4:	repz lock out 0x1b,eax
  42edb8:	repnz repnz adc ch,ch
  42edbc:	int3   
  42edbd:	dec    BYTE PTR [esi-0x6f]
  42edc0:	mov    ecx,0xfc1fa38f
  42edc5:	dec    ecx
  42edc6:	mov    ebx,0xa846ddfb
  42edcb:	pushf  
  42edcc:	lahf   
  42edcd:	push   es
  42edce:	jmp    0x6c1d2ed6
  42edd3:	dec    ecx
  42edd4:	outs   dx,DWORD PTR ds:[esi]
  42edd5:	(bad)  
  42edd6:	and    dl,0xf4
  42edd9:	sub    BYTE PTR [edx],cl
  42eddb:	pushf  
  42eddc:	fnsave [eax+0x3]
  42eddf:	(bad)  
  42ede0:	outs   dx,DWORD PTR ds:[esi]
  42ede1:	mov    bl,0x6a
  42ede3:	mov    edi,DWORD PTR [ecx+0x7d]
  42ede6:	add    BYTE PTR [edi+0xe],ch
  42ede9:	jle    0x42edd4
  42edeb:	or     BYTE PTR [ebp+0x7],dh
  42edee:	jmp    0x3955c2f6
  42edf3:	xor    esp,DWORD PTR [esi-0xd]
  42edf6:	sub    al,0x83
  42edf8:	xor    al,0x7d
  42edfa:	sar    bl,0xe1
  42edfd:	jl     0x42edc0
  42edff:	mov    BYTE PTR [esp+edi*8-0x25],bh
  42ee03:	jp     0x42ee37
  42ee05:	(bad)  
  42ee06:	inc    DWORD PTR [eax+0x77]
  42ee09:	mov    cl,0x3e
  42ee0b:	jmp    0x7342ee10
  42ee10:	cmp    BYTE PTR [ebx-0x5c],0x6d
  42ee14:	or     BYTE PTR [edi-0x6f],0x9
  42ee18:	push   edx
  42ee19:	cli    
  42ee1a:	xchg   esi,eax
  42ee1b:	jnp    0x42edda
  42ee1d:	or     dh,BYTE PTR [eax+esi*1+0x33]
  42ee21:	mov    edi,0xc02bfffc
  42ee26:	pop    es
  42ee27:	jbe    0x42edab
  42ee29:	jnp    0x42ee9f
  42ee2b:	jge    0x42edae
  42ee2d:	mov    eax,0x6ef7f
  42ee32:	je     0x42ee9f
  42ee34:	mov    ?,esi
  42ee36:	pop    esi
  42ee37:	test   BYTE PTR gs:[edi],dl
  42ee3a:	test   eax,0x5cf5f20f
  42ee3f:	jnp    0x42ee41
  42ee41:	std    
  42ee42:	inc    esi
  42ee43:	ins    DWORD PTR es:[edi],dx
  42ee44:	int3   
  42ee45:	cli    
  42ee46:	aam    0x10
  42ee48:	or     al,0x40
  42ee4a:	jmp    0x2cbe71c2
  42ee4f:	jne    0x42edd2
  42ee51:	dec    edi
  42ee52:	es fwait
  42ee54:	cld    
  42ee55:	or     eax,0x448df0a9
  42ee5a:	cdq    
  42ee5b:	push   0x750ce720
  42ee60:	mov    BYTE PTR [edi-0x73283583],bh
  42ee66:	je     0x42eec0
  42ee68:	mov    ah,0xa8
  42ee6a:	jmp    0x5e2af55f
  42ee6f:	inc    ecx
  42ee70:	cmp    edx,0x72
  42ee76:	inc    esp
  42ee77:	or     al,0xf
  42ee79:	sub    edi,ebp
  42ee7b:	mov    bl,0xc7
  42ee7d:	jmp    0xce91f572
  42ee82:	sbb    al,0x80
  42ee84:	lods   eax,DWORD PTR ds:[esi]
  42ee85:	add    BYTE PTR [ecx],cl
  42ee87:	add    esi,edi
  42ee89:	(bad)  
  42ee8a:	(bad)  
  42ee8b:	or     eax,0x145d3b32
  42ee90:	xor    BYTE PTR [ebx+0x448d12cf],cl
  42ee96:	or     al,BYTE PTR [esi]
  42ee98:	mov    DWORD PTR [ebp-0x6],eax
  42ee9b:	mov    DWORD PTR [ebx+0x70],esi
  42ee9e:	xchg   edi,eax
  42ee9f:	xor    DWORD PTR [esi-0x3],0x75
  42eea3:	mov    cl,BYTE PTR [edx+0x6a]
  42eea6:	or     edi,ebp
  42eea8:	inc    ebx
  42eea9:	test   dl,bl
  42eeab:	sti    
  42eeac:	inc    ebx
  42eead:	call   0xc61a89bc
  42eeb2:	push   ebp
  42eeb3:	mov    cl,BYTE PTR [ecx-0x1]
  42eeb6:	call   DWORD PTR [esi-0x7535bc54]
  42eebc:	sar    BYTE PTR [ebx],1
  42eebe:	sbb    eax,0x355fd21f
  42eec3:	adc    al,0x6c
  42eec5:	call   0x3d6b86
  42eeca:	mov    ecx,0x195b5847
  42eecf:	inc    esp
  42eed0:	outs   dx,BYTE PTR ds:[esi]
  42eed1:	leave  
  42eed2:	fmul   DWORD PTR [esi]
  42eed4:	add    BYTE PTR [ebp+0x21],dl
  42eed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eed8:	dec    edi
  42eed9:	push   ebx
  42eeda:	add    BYTE PTR [eax],al
  42eedc:	add    BYTE PTR [ebp+0x56],bl
  42eedf:	rcl    DWORD PTR [ebx+0x49],1
  42eee2:	pop    ds
  42eee3:	int    0xc1
  42eee5:	pop    eax
  42eee6:	pop    es
  42eee7:	cmp    ecx,0x59
  42eeea:	lahf   
  42eeeb:	and    dh,dl
  42eeed:	jne    0x42ee79
  42eeef:	dec    ecx
  42eef0:	push   ebx
  42eef1:	jb     0x42eeb9
  42eef3:	mov    ecx,0x88365a42
  42eef8:	inc    ebp
  42eef9:	push   ebp
  42eefa:	lahf   
  42eefb:	adc    dh,dl
  42eefd:	xor    eax,0xf35d328a
  42ef02:	push   esp
  42ef03:	adc    DWORD PTR [eax],ecx
  42ef05:	or     DWORD PTR [ecx-0x51fffbef],esi
  42ef0b:	xchg   edi,eax
  42ef0c:	inc    BYTE PTR [ecx]
  42ef0e:	scas   al,BYTE PTR es:[edi]
  42ef0f:	ds pop ebx
  42ef11:	enter  0xbfa6,0x54
  42ef15:	js     0x42eed0
  42ef17:	jge    0x42ef04
  42ef19:	inc    ebx
  42ef1a:	ins    DWORD PTR es:[edi],dx
  42ef1b:	(bad)  
  42ef1c:	inc    eax
  42ef1e:	xor    esi,DWORD PTR ds:0x81e2f366
  42ef24:	das    
  42ef25:	add    al,0x8c
  42ef27:	mov    ecx,DWORD PTR [edi-0x75]
  42ef2a:	push   eax
  42ef2b:	neg    BYTE PTR ds:0xe7b294f4
  42ef31:	out    dx,al
  42ef32:	icebp  
  42ef33:	jns    0x42efa9
  42ef35:	mov    edi,DWORD PTR [eax]
  42ef37:	push   esi
  42ef38:	(bad)  
  42ef39:	fdiv   QWORD PTR [eax-0x6a]
  42ef3c:	shl    DWORD PTR [ecx],0xd9
  42ef3f:	mov    ebp,DWORD PTR ds:0xa8000000
  42ef45:	xchg   ecx,eax
  42ef46:	std    
  42ef47:	push   ebx
  42ef49:	out    dx,eax
  42ef4a:	jns    0x42eed0
  42ef4c:	add    eax,ecx
  42ef4e:	mov    edi,edx
  42ef50:	and    ebp,ebx
  42ef52:	inc    ecx
  42ef53:	cwde   
  42ef54:	inc    ebx
  42ef55:	cdq    
  42ef56:	mov    edx,DWORD PTR [ebx+ebp*1]
  42ef59:	pop    ebp
  42ef5a:	add    BYTE PTR ds:[esi+0x30],dh
  42ef5e:	adc    bh,BYTE PTR [edi]
  42ef60:	or     edx,DWORD PTR [esi+edi*8]
  42ef63:	push   ebx
  42ef65:	adc    dl,dh
  42ef67:	(bad)  
  42ef68:	loope  0x42ef19
  42ef6a:	dec    BYTE PTR [esi+esi*1-0xd99d0fc]
  42ef71:	xchg   ebp,eax
  42ef72:	dec    BYTE PTR [esi+esi*4+0x7a532ed7]
  42ef79:	jmp    0x42ef05
  42ef7b:	cli    
  42ef7c:	push   es
  42ef7d:	pop    es
  42ef7e:	pop    ecx
  42ef7f:	hlt    
  42ef80:	adc    al,0x7
  42ef82:	fs (bad) 
  42ef84:	(bad)  
  42ef85:	pop    ss
  42ef86:	adc    DWORD PTR fs:[edx+edi*2],0x8bac8bc9
  42ef8e:	cmp    ecx,DWORD PTR [eax-0x745ca1b4]
  42ef94:	sub    DWORD PTR [esi-0x1a],ebp
  42ef97:	aad    0x64
  42ef99:	sub    DWORD PTR [eax-0x5a8716f0],0xffffff84
  42efa0:	sbb    eax,0xde631704
  42efa5:	inc    esi
  42efa6:	xor    DWORD PTR [edx],ebp
  42efa8:	add    BYTE PTR [eax],al
  42efaa:	add    BYTE PTR [edi+ecx*2+0x6df354a5],bl
  42efb1:	jns    0x42f032
  42efb3:	xor    ecx,DWORD PTR [esi+0x16d6c597]
  42efb9:	int3   
  42efba:	add    esi,ebx
  42efbc:	jns    0x42efa6
  42efbe:	(bad)  
  42efbf:	sahf   
  42efc0:	lea    esi,[edi]
  42efc2:	test   DWORD PTR [esi-0xcfba5fa],esi
  42efc8:	inc    edi
  42efc9:	inc    edi
  42efca:	hlt    
  42efcb:	in     eax,dx
  42efcc:	push   edi
  42efcd:	daa    
  42efce:	pushf  
  42efcf:	hlt    
  42efd0:	inc    edi
  42efd1:	inc    esi
  42efd2:	cld    
  42efd3:	in     eax,dx
  42efd4:	inc    esp
  42efd5:	and    eax,0x956a7431
  42efda:	jle    0x42ef98
  42efdc:	(bad)  
  42efdd:	fstp   QWORD PTR [ebx-0x74de8657]
  42efe3:	xlat   BYTE PTR ds:[ebx]
  42efe4:	ret    
  42efe5:	mov    dh,0x46
  42efe7:	and    esi,ebx
  42efe9:	jmp    0xe4b234c4
  42efee:	add    al,0xf3
  42eff0:	push   es
  42eff1:	fwait
  42eff2:	xor    ch,BYTE PTR [ebx+edi*8-0x10]
  42eff6:	sbb    eax,0x61ffdff5
  42effb:	jl     0x42f065
  42effd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42effe:	bound  ebx,QWORD PTR [ebx+eax*1]
  42f001:	call   0xfabf599a
  42f006:	jb     0x42efeb
  42f008:	push   cs
  42f009:	mov    DWORD PTR [edi],ebp
  42f00b:	repz add DWORD PTR [esi-0x1f],0x58000000
  42f013:	pushf  
  42f014:	cli    
  42f015:	(bad)  
  42f016:	imul   ecx,DWORD PTR [esi-0x4bd60ebf],0x56a5e546
  42f020:	rol    bl,0x18
  42f023:	inc    esi
  42f024:	loopne 0x42f017
  42f026:	test   al,0x7c
  42f028:	(bad)  
  42f029:	call   0xe3130a1e
  42f02e:	aas    
  42f02f:	out    0x88,eax
  42f031:	aaa    
  42f032:	sti    
  42f033:	or     esi,DWORD PTR [ebx-0x2f8000ce]
  42f039:	test   al,0x8e
  42f03b:	add    BYTE PTR [edi],bl
  42f03d:	cdq    
  42f03e:	scas   eax,DWORD PTR es:[edi]
  42f03f:	addr16 pop es
  42f041:	loop   0x42efea
  42f043:	out    0x88,al
  42f045:	mov    edi,0xb2b30de0
  42f04a:	mov    BYTE PTR [ecx+0x6628d0],0x1f
  42f051:	cmp    DWORD PTR [edi+0x7ff20767],esi
  42f057:	out    0x88,al
  42f059:	xchg   edi,eax
  42f05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f05b:	or     eax,0x8194a2b3
  42f060:	shr    BYTE PTR [eax],1
  42f062:	jle    0x42f064
  42f064:	pop    ds
  42f065:	cmp    DWORD PTR [edi+0x47f20767],ebp
  42f06b:	out    0x88,al
  42f06d:	mov    edi,0xa2b30d94
  42f072:	add    BYTE PTR [ecx+0xd0],0x0
  42f079:	retf   
  42f07a:	cdq    
  42f07b:	add    ah,BYTE PTR [ebx]
  42f07d:	or     al,BYTE PTR [ebx-0x21]
  42f080:	or     BYTE PTR [ecx-0x4d],dl
  42f083:	pusha  
  42f084:	mov    DWORD PTR [esi+esi*2+0x6b21b705],eax
  42f08b:	adc    ecx,0x2302999b
  42f091:	mov    al,BYTE PTR [edi+ebx*8+0x8]
  42f095:	push   ecx
  42f096:	mov    ch,0x60
  42f098:	mov    esp,edx
  42f09a:	push   0x5
  42f09c:	mov    bh,0xe1
  42f09e:	push   0x995bd181
  42f0a3:	add    ah,BYTE PTR [ebx]
  42f0a5:	jp     0x42f0eb
  42f0a7:	fisttp WORD PTR [eax]
  42f0a9:	and    DWORD PTR [ebp+0x68c48960],esi
  42f0af:	add    eax,0x816ed1b7
  42f0b4:	pop    ebp
  42f0b5:	push   ds
  42f0b6:	sti    
  42f0b7:	iret   
  42f0b8:	shl    DWORD PTR [eax+0x7b],0x19
  42f0bc:	rcr    BYTE PTR [ebx-0x74f4fd5d],1
  42f0c2:	and    al,0x89
  42f0c4:	push   esi
  42f0c5:	scas   al,BYTE PTR es:[edi]
  42f0c6:	clc    
  42f0c7:	shl    DWORD PTR [ebp+edi*8-0x7],1
  42f0cb:	jnp    0x42f0dd
  42f0cd:	mov    al,ds:0x298b577a
  42f0d2:	xchg   edx,eax
  42f0d3:	mov    ds:0xd59bd18b,eax
  42f0d8:	(bad)  
  42f0d9:	sub    eax,0x75818e
  42f0de:	add    BYTE PTR [eax],al
  42f0e0:	retf   0xfc
  42f0e3:	mov    edx,DWORD PTR [ecx+0x77]
  42f0e6:	loop   0x42f0ba
  42f0e8:	int3   
  42f0e9:	(bad)  
  42f0ea:	cmc    
  42f0eb:	mov    DWORD PTR [edi+esi*2-0x7f],eax
  42f0ef:	dec    ebx
  42f0f0:	mov    ds:0xf3febd9b,al
  42f0f5:	adc    BYTE PTR [ecx+0x7b463588],cl
  42f0fb:	je     0x42f0e8
  42f0fd:	mov    al,ds:0xa4cdc17b
  42f102:	and    DWORD PTR [esi+0x662f6df7],edi
  42f108:	pop    esp
  42f109:	push   0x7a541410
  42f10e:	out    dx,al
  42f10f:	push   cs
  42f110:	mov    bl,0x6d
  42f112:	jnp    0x42f155
  42f114:	jecxz  0x42f0fa
  42f116:	inc    esi
  42f117:	pop    es
  42f118:	repnz ins DWORD PTR es:[edi],dx
  42f11a:	inc    BYTE PTR [esi-0x7703f659]
  42f120:	jnp    0x42f18b
  42f122:	std    
  42f123:	push   ebx
  42f125:	in     al,0x40
  42f127:	adc    BYTE PTR [ebp-0x18dbcd1c],dl
  42f12d:	mul    BYTE PTR [esi+0x7]
  42f130:	repnz ins DWORD PTR es:[edi],dx
  42f132:	inc    BYTE PTR [esi-0x76df8253]
  42f138:	imul   edi,DWORD PTR [ebp-0x3],0xffffffff
  42f13c:	repz adc BYTE PTR [eax],0x14
  42f140:	in     al,dx
  42f141:	pop    ebx
  42f142:	jmp    0x6033:0xd
  42f149:	das    
  42f14a:	sti    
  42f14b:	push   es
  42f14c:	or     al,dh
  42f14e:	aas    
  42f14f:	repz loop 0x42f110
  42f152:	jae    0x42f141
  42f154:	mov    al,0xd3
  42f156:	mov    edi,0xfde94823
  42f15b:	mov    esp,0x2f382f60
  42f160:	add    al,0xe4
  42f162:	jae    0x42f15f
  42f164:	xor    al,0xea
  42f166:	cmp    edi,edi
  42f168:	lahf   
  42f169:	(bad)  
  42f16a:	out    0xf5,al
  42f16c:	and    al,0xea
  42f16e:	fild   DWORD PTR [eax]
  42f170:	pop    es
  42f171:	test   eax,0xb94e7403
  42f176:	(bad)  
  42f179:	mov    esp,0xfc8a887c
  42f17e:	out    0x25,al
  42f180:	fstp   QWORD PTR [ecx-0x61ea184]
  42f186:	xchg   edx,esp
  42f188:	sbb    bl,BYTE PTR [esi-0x55]
  42f18b:	jne    0x42f1fd
  42f18d:	jmp    0x295cd67f
  42f192:	add    al,0x74
  42f194:	int    0xf8
  42f196:	jp     0x42f204
  42f198:	jmp    edi
  42f19a:	add    esi,ebx
  42f19c:	add    eax,0x7e48492
  42f1a1:	jmp    0xd54019a9
  42f1a6:	jl     0x42f15f
  42f1a8:	jb     0x42f209
  42f1aa:	inc    ecx
  42f1ab:	add    BYTE PTR [eax],al
  42f1ad:	add    BYTE PTR [ebx],bl
  42f1af:	jbe    0x42f184
  42f1b1:	out    dx,eax
  42f1b2:	out    0xc6,al
  42f1b4:	call   0x38a1a931
  42f1b9:	xchg   DWORD PTR [edi+0x72],edi
  42f1bc:	xchg   ecx,eax
  42f1bd:	icebp  
  42f1be:	mov    al,ds:0x6e04291a
  42f1c3:	inc    edi
  42f1c4:	icebp  
  42f1c5:	jg     0x42f181
  42f1c7:	push   es
  42f1c8:	jmp    0xf3cd42d0
  42f1cd:	mov    ebx,esi
  42f1cf:	cli    
  42f1d0:	retf   
  42f1d1:	jp     0x42f235
  42f1d3:	pop    ss
  42f1d4:	push   cs
  42f1d5:	inc    esi
  42f1d6:	int3   
  42f1d7:	push   es
  42f1d8:	jmp    0xecd7fde0
  42f1dd:	add    al,0xf3
  42f1df:	push   es
  42f1e0:	call   0xa44abced
  42f1e5:	xchg   edi,eax
  42f1e6:	repz repz cmp BYTE PTR ds:0x41ff7b46,al
  42f1ee:	in     eax,0x1
  42f1f0:	mov    bl,0xa4
  42f1f2:	push   0xf5f4f7f4
  42f1f7:	adc    dh,BYTE PTR [esp+esi*8-0x38]
  42f1fb:	mov    esi,0xbeb8f873
  42f200:	jae    0x42f1cb
  42f202:	jno    0x42f271
  42f204:	add    DWORD PTR [ebp+0x4e],edi
  42f207:	int    0x73
  42f209:	loop   0x42f233
  42f20b:	cld    
  42f20c:	das    
  42f20d:	add    bh,BYTE PTR [eax]
  42f20f:	jle    0x42f28d
  42f211:	add    DWORD PTR [eax],eax
  42f213:	add    BYTE PTR [eax],al
  42f215:	js     0x42f23e
  42f217:	jg     0x42f1ea
  42f219:	inc    esi
  42f21a:	stc    
  42f21b:	sbb    DWORD PTR [ecx],esi
  42f21d:	jecxz  0x42f237
  42f21f:	dec    eax
  42f220:	pop    ebp
  42f221:	cmp    ch,cl
  42f223:	je     0x42f217
  42f225:	mov    bh,0xd2
  42f227:	repz jo 0x42f225
  42f22a:	jbe    0x42f212
  42f22c:	fisub  DWORD PTR [edi-0x149f0c2e]
  42f232:	pop    esi
  42f233:	out    0xe2,al
  42f235:	xchg   edi,eax
  42f236:	shl    bl,cl
  42f238:	xchg   edx,eax
  42f239:	push   cs
  42f23a:	jle    0x42f2b8
  42f23c:	cdq    
  42f23d:	xchg   edx,edx
  42f23f:	jmp    0x42f2a5
  42f241:	mov    bl,0x5e
  42f243:	dec    edi
  42f244:	mov    es,WORD PTR [ebx]
  42f246:	sub    DWORD PTR [ecx+ebp*1],edx
  42f249:	test   DWORD PTR [ecx-0x12e10b41],0x730376ef
  42f253:	cli    
  42f254:	aam    0x6c
  42f256:	add    eax,0x742fe940
  42f25b:	cli    
  42f25c:	jmp    0xc35aed91
  42f261:	repnz add DWORD PTR [ecx+eax*2+0x0],0x36007470
  42f26a:	lea    edx,[ebx]
  42f26c:	pop    eax
  42f26d:	mov    esi,0xb04fffc8
  42f272:	or     bh,dh
  42f274:	adc    eax,0x3a6456
  42f279:	add    BYTE PTR [eax],al
  42f27b:	add    BYTE PTR [ecx],al
  42f27d:	(bad)  
  42f27e:	repz sub ecx,DWORD PTR [edi-0x64]
  42f282:	bound  ecx,QWORD PTR [ecx+ebp*2]
  42f285:	or     BYTE PTR [eax],al
  42f287:	push   eax
  42f288:	adc    edi,eax
  42f28a:	out    dx,eax
  42f28b:	sub    ebx,DWORD PTR [edi-0x2000b570]
  42f291:	fwait
  42f292:	cmc    
  42f293:	jne    0x42f287
  42f295:	or     eax,0x8bdfff00
  42f29a:	cmc    
  42f29b:	adc    eax,0x3a76be
  42f2a0:	add    eax,0x89c9532d
  42f2a5:	and    al,0x83
  42f2a7:	in     al,dx
  42f2a8:	sti    
  42f2a9:	in     eax,dx
  42f2aa:	inc    ebx
  42f2ab:	or     al,0x7
  42f2ad:	call   0x375df2ac
  42f2b2:	dec    edi
  42f2b3:	je     0x42f28c
  42f2b5:	adc    bl,bh
  42f2b7:	pop    eax
  42f2b8:	icebp  
  42f2b9:	inc    edi
  42f2ba:	outs   dx,BYTE PTR ds:[esi]
  42f2bb:	cmp    eax,0x306e4921
  42f2c0:	aaa    
  42f2c1:	push   ds
  42f2c2:	add    DWORD PTR [eax],eax
  42f2c4:	or     al,BYTE PTR [eax+eiz*1]
  42f2c7:	sub    ecx,DWORD PTR [ebx+0x17]
  42f2ca:	or     ebp,DWORD PTR [ebx]
  42f2cc:	fwait
  42f2cd:	jns    0x42f252
  42f2cf:	test   al,0xda
  42f2d1:	pop    es
  42f2d2:	add    bh,al
  42f2d4:	movq   QWORD PTR [edi],mm0
  42f2d7:	add    cl,dl
  42f2d9:	pop    es
  42f2da:	sub    bl,bl
  42f2dc:	and    DWORD PTR [ebp+edi*4+0x45],ebx
  42f2e0:	add    BYTE PTR [eax],al
  42f2e2:	add    BYTE PTR [esi],ah
  42f2e4:	jne    0x42f2e2
  42f2e6:	push   ebx
  42f2e8:	pop    ebp
  42f2e9:	xchg   edi,eax
  42f2ea:	out    dx,al
  42f2eb:	lods   al,BYTE PTR ds:[esi]
  42f2ec:	stos   BYTE PTR es:[edi],al
  42f2ed:	cmp    dh,0xf2
  42f2f0:	pop    ebp
  42f2f1:	(bad)  
  42f2f2:	out    0x99,al
  42f2f4:	sub    al,0x3b
  42f2f6:	cld    
  42f2f7:	dec    edx
  42f2f8:	pop    ebp
  42f2f9:	(bad)  
  42f2fa:	dec    DWORD PTR [eax-0x70bb44b3]
  42f300:	ret    
  42f301:	add    eax,DWORD PTR [eax]
  42f303:	repz sbb ch,bh
  42f306:	ret    0x1a36
  42f309:	popa   
  42f30a:	push   DWORD PTR [ebp+ebx*2+0x4f]
  42f30e:	add    BYTE PTR [edx+edx*2-0xe],ch
  42f312:	push   cs
  42f313:	mov    bl,0x5d
  42f315:	ja     0x42f30e
  42f317:	push   0x6d38f6a2
  42f31c:	icebp  
  42f31d:	std    
  42f31e:	push   ebx
  42f320:	sar    BYTE PTR [ebx],cl
  42f322:	xchg   DWORD PTR [ebp-0x2b],esi
  42f325:	(bad)  
  42f326:	push   ebx
  42f328:	sbb    BYTE PTR [ebx],dh
  42f32a:	or     al,0xbe
  42f32c:	add    bh,BYTE PTR [ecx-0x36]
  42f32f:	fdivr  st,st(3)
  42f331:	sbb    al,BYTE PTR [ecx]
  42f333:	repz pop ebp
  42f335:	jge    0x42f32f
  42f337:	or     esp,DWORD PTR [eax-0x2]
  42f33a:	call   FWORD PTR [edx+esi*2+0x7a86d67a]
  42f341:	sbb    dl,ah
  42f343:	mov    ds:0x5be994,eax
  42f348:	add    BYTE PTR [eax],al
  42f34a:	out    0x1d,eax
  42f34c:	add    al,0xa8
  42f34e:	jmp    0x42f369
  42f350:	out    0x2e,eax
  42f352:	mov    bl,0xf7
  42f354:	jl     0x42f3bd
  42f356:	repnz pop edi
  42f358:	dec    BYTE PTR [eax-0xfb8b]
  42f35e:	repz out 0x7c,al
  42f361:	imul   esi,edx,0x6
  42f364:	jmp    0x5d0f5f6c
  42f369:	cwde   
  42f36a:	in     eax,0x7d
  42f36c:	stos   DWORD PTR es:[edi],eax
  42f36d:	sti    
  42f36e:	ins    DWORD PTR es:[edi],dx
  42f36f:	(bad)  
  42f370:	fdivr  QWORD PTR [edx+0x7a]
  42f373:	(bad)  
  42f375:	add    esi,ebx
  42f377:	jg     0x42f3f3
  42f379:	pop    ds
  42f37a:	repnz push es
  42f37c:	jmp    0xe82665fb
  42f381:	add    esi,ebx
  42f383:	jge    0x42f330
  42f385:	imul   DWORD PTR [ecx]
  42f387:	into   
  42f388:	das    
  42f389:	shl    esp,0x6
  42f38c:	mov    esp,0xb5d88878
  42f391:	sub    eax,0xef837dc0
  42f396:	ins    DWORD PTR es:[edi],dx
  42f397:	ja     0x42f400
  42f399:	test   bl,dh
  42f39b:	add    al,0xe9
  42f39d:	add    ebx,edi
  42f39f:	push   ss
  42f3a0:	push   0xe904f184
  42f3a5:	add    edi,DWORD PTR [edi-0xf7c9802]
  42f3ab:	add    al,0xe9
  42f3ad:	add    eax,DWORD PTR [eax]
  42f3af:	add    BYTE PTR [eax],al
  42f3b1:	mov    esi,0x28063eda
  42f3b6:	cld    
  42f3b7:	lock cmp bh,0xe6
  42f3bb:	aam    0xc3
  42f3bd:	sbb    al,0x7d
  42f3bf:	nop
  42f3c0:	aas    
  42f3c1:	jns    0x42f3ba
  42f3c3:	out    0x3,eax
  42f3c5:	repz cli 
  42f3c7:	loope  0x42f3db
  42f3c9:	inc    eax
  42f3ca:	(bad)  
  42f3cb:	clc    
  42f3cc:	nop
  42f3cd:	mov    bh,0x72
  42f3cf:	cmp    dh,ch
  42f3d1:	nop
  42f3d2:	add    DWORD PTR [edx+0x4b],edx
  42f3d5:	push   esi
  42f3d6:	add    eax,0xfdf464a8
  42f3db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3dc:	aam    0x2d
  42f3de:	(bad)  
  42f3e0:	(bad)  
  42f3e1:	jno    0x42f3dd
  42f3e3:	pop    es
  42f3e4:	outs   dx,BYTE PTR ds:[esi]
  42f3e5:	jmp    0xbf8b:0xf0a9140a
  42f3ec:	aad    0xe4
  42f3ee:	icebp  
  42f3ef:	jl     0x42f446
  42f3f1:	in     eax,dx
  42f3f2:	std    
  42f3f3:	xor    eax,0xfffffff7
  42f3f6:	push   es
  42f3f7:	add    BYTE PTR [edx-0xe],ch
  42f3fa:	jb     0x42f3ff
  42f3fc:	out    dx,al
  42f3fd:	je     0x42f3fb
  42f3ff:	add    cl,ch
  42f401:	lock jg 0x42f39d
  42f404:	mov    ecx,0xf60006f7
  42f409:	dec    ecx
  42f40a:	ror    BYTE PTR [edi],cl
  42f40c:	out    dx,al
  42f40d:	cmp    DWORD PTR [esi+eax*4-0x2c],eax
  42f411:	mov    ah,0x1a
  42f413:	inc    eax
  42f414:	jmp    0xb742f419
  42f419:	push   ecx
  42f41a:	pslld  mm5,QWORD PTR [ebp-0x178b053f]
  42f421:	jg     0x42f47f
  42f423:	cmc    
  42f424:	inc    esi
  42f425:	adc    ebx,edi
  42f427:	je     0x42f421
  42f429:	ins    DWORD PTR es:[edi],dx
  42f42a:	ror    BYTE PTR [edi+0x6c],cl
  42f42d:	repnz (bad)
  42f430:	cmp    edx,DWORD PTR [eax]
  42f432:	jmpw   0x3b34
  42f436:	xchg   BYTE PTR [edi-0x39dc1368],bl
  42f43c:	jno    0x42f4aa
  42f43e:	je     0x42f41d
  42f440:	add    DWORD PTR [esi-0x58fe641],esi
  42f446:	adc    ebp,DWORD PTR [esi+0xce8090b]
  42f44c:	jno    0x42f4ba
  42f44e:	cli    
  42f44f:	cmp    DWORD PTR [esi-0xf170045],ecx
  42f455:	ins    DWORD PTR es:[edi],dx
  42f456:	je     0x42f449
  42f458:	jno    0x42f455
  42f45a:	pop    es
  42f45b:	add    BYTE PTR [edx+0x5dfff858],al
  42f461:	add    DWORD PTR [ebx+0x18],0x49
  42f465:	icebp  
  42f466:	add    cl,BYTE PTR [edi]
  42f468:	sub    eax,0xda00011b
  42f46d:	adc    eax,0x4caed84
  42f472:	add    BYTE PTR [ebx-0x7bf8f5df],al
  42f478:	mov    BYTE PTR [eax+eax*1],al
  42f47b:	add    BYTE PTR [eax],al
  42f47d:	add    BYTE PTR [eax],al
  42f47f:	sbb    ecx,esi
  42f481:	stc    
  42f482:	jae    0x42f4e9
  42f484:	mov    ecx,esi
  42f486:	add    eax,0x4b8b4f56
  42f48b:	ror    BYTE PTR [eax+0x486501f7],0x3b
  42f492:	mov    eax,ds:0x7400048a
  42f497:	stos   DWORD PTR es:[edi],eax
  42f498:	(bad)  
  42f499:	cdq    
  42f49a:	add    BYTE PTR [edx+0x4],bl
  42f49d:	je     0x42f4d5
  42f49f:	das    
  42f4a0:	test   eax,0x784afffa
  42f4a5:	and    eax,0x3aa3d
  42f4aa:	add    dh,al
  42f4ac:	sbb    edi,DWORD PTR ds:0x45aa5
  42f4b2:	jne    0x42f46a
  42f4b4:	fist   DWORD PTR [ebp+0x1]
  42f4b7:	dec    edx
  42f4b8:	add    al,0x83
  42f4ba:	pop    ebp
  42f4bb:	adc    ah,BYTE PTR [edx-0x1]
  42f4be:	imul   ebx,DWORD PTR [edx],0x5d52fa62
  42f4c4:	sbb    ah,ah
  42f4c6:	adc    ecx,edx
  42f4c8:	or     dl,BYTE PTR [eax-0x18]
  42f4cb:	jecxz  0x42f453
  42f4cd:	cmc    
  42f4ce:	inc    DWORD PTR [ecx-0x4074edb9]
  42f4d4:	xchg   ch,dh
  42f4d6:	jne    0x42f4cb
  42f4d8:	cmp    eax,0x8166e8d3
  42f4dd:	cmp    dl,0x26
  42f4e0:	mov    edi,0x3
  42f4e5:	add    bl,dh
  42f4e7:	jp     0x42f4ee
  42f4e9:	repz add ax,WORD PTR [ecx+0x6b6645fa]
  42f4f1:	and    al,0x6
  42f4f3:	jle    0x42f4f8
  42f4f5:	add    bl,dh
  42f4f7:	pop    edx
  42f4f8:	and    esp,DWORD PTR [esi-0xd]
  42f4fb:	inc    ebx
  42f4fc:	and    dh,0x9d
  42f4ff:	add    ah,BYTE PTR [ebp-0xea25b01]
  42f505:	sbb    al,0x5b
  42f507:	cmp    eax,0x3894ff6e
  42f50c:	repz pop ds
  42f50e:	cld    
  42f50f:	clc    
  42f510:	inc    ebx
  42f511:	dec    edi
  42f512:	sbb    ebp,DWORD PTR [ebp+edi*8-0x1]
  42f516:	repz adc bl,dh
  42f519:	pop    es
  42f51a:	je     0x42f54c
  42f51c:	loope  0x42f577
  42f51e:	enter  0x4226,0x1b
  42f522:	repz dec edx
  42f524:	mov    eax,ds:0xf5d5cff
  42f529:	test   BYTE PTR [ebp+0x5d],al
  42f52c:	(bad)  
  42f52d:	dec    DWORD PTR [esi]
  42f52f:	mov    edi,0x54f30003
  42f534:	jge    0x42f572
  42f536:	nop
  42f537:	pop    ebp
  42f538:	(bad)  
  42f539:	(bad)  
  42f53a:	mov    edi,0xf3a539fa
  42f53f:	pop    ebp
  42f540:	dec    BYTE PTR [edx]
  42f542:	outs   dx,DWORD PTR ds:[esi]
  42f543:	xchg   edx,eax
  42f544:	(bad)  
  42f545:	push   ebx
  42f547:	jb     0x42f4e6
  42f549:	inc    DWORD PTR [eax]
  42f54b:	add    BYTE PTR [eax],al
  42f54d:	adc    al,0x5d
  42f54f:	icebp  
  42f550:	leave  
  42f551:	js     0x42f555
  42f553:	or     al,0x66
  42f555:	repnz push es
  42f557:	mov    ds:0xe8dcecf6,al
  42f55c:	aam    0xf9
  42f55e:	sbb    BYTE PTR [ebp+0x39073314],cl
  42f564:	ins    BYTE PTR es:[edi],dx
  42f565:	mov    cl,0x72
  42f567:	add    DWORD PTR [eax-0x5a444b2b],0x10e86ed4
  42f571:	jbe    0x42f5a1
  42f573:	push   0xffffff80
  42f575:	leave  
  42f576:	sub    BYTE PTR [ebx+0x4c7c00f],0x4
  42f57d:	repz or cl,ch
  42f580:	test   DWORD PTR [edx-0x5b8bf751],0x1d894d6e
  42f58a:	jb     0x42f57b
  42f58c:	neg    edx
  42f58e:	std    
  42f58f:	(bad)  
  42f590:	retf   0x6e89
  42f593:	sub    DWORD PTR [ebp+edi*2-0x24a5ce8],eax
  42f59a:	jno    0x42f590
  42f59c:	neg    edx
  42f59e:	mov    DWORD PTR ds:0xd283f816,ecx
  42f5a4:	sub    BYTE PTR [ecx+0x6e],0xc3
  42f5a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5a9:	pop    esp
  42f5aa:	outs   dx,BYTE PTR ds:[esi]
  42f5ab:	call   0xf24d63c0
  42f5b0:	jg     0x42f5b2
  42f5b2:	add    BYTE PTR [eax],al
  42f5b4:	dec    ecx
  42f5b5:	scas   eax,DWORD PTR es:[edi]
  42f5b6:	push   0xcf6e4472
  42f5bb:	sar    DWORD PTR [ecx],cl
  42f5bd:	outs   dx,BYTE PTR ds:[esi]
  42f5be:	fld    DWORD PTR [ecx+0x55]
  42f5c1:	pop    es
  42f5c2:	jmp    0xbac6edca
  42f5c7:	jle    0x42f5f2
  42f5c9:	outs   dx,BYTE PTR ds:[esi]
  42f5ca:	iret   
  42f5cb:	sbb    BYTE PTR ds:[esi-0x47],ch
  42f5cf:	mov    ebp,0xe8ff6e19
  42f5d4:	lock sub ebx,DWORD PTR [esi+0x7506f0e9]
  42f5db:	shr    BYTE PTR [ecx-0x3d],1
  42f5de:	or     esi,DWORD PTR [edx+0x2f]
  42f5e1:	sub    ch,BYTE PTR [ecx+0x7f0e9]
  42f5e7:	fisubr WORD PTR [eax+edi*1-0x5]
  42f5eb:	xchg   BYTE PTR [ebx+eiz*1+0x0],bl
  42f5ef:	jmp    0x9235fde4
  42f5f4:	call   0xefbc1a3f
  42f5f9:	push   es
  42f5fa:	add    ah,ch
  42f5fc:	add    BYTE PTR [edi-0x1],dh
  42f5ff:	call   0x4302afe9
  42f604:	add    ch,BYTE PTR [eiz*4+0xb06f0e9]
  42f60b:	ins    BYTE PTR es:[edi],dx
  42f60c:	sti    
  42f60d:	jno    0x42f609
  42f60f:	ds push 0x376c6146
  42f615:	add    DWORD PTR [eax+eiz*8+0x5000000],eax
  42f61c:	jno    0x42f618
  42f61e:	(bad)  
  42f61f:	mov    ecx,0x4640a47
  42f624:	jo     0x42f620
  42f626:	push   ss
  42f627:	in     al,dx
  42f628:	repnz pop ds
  42f62a:	push   cs
  42f62b:	push   0x5
  42f62d:	data16 or bh,0x5f
  42f631:	stc    
  42f632:	(bad)  
  42f633:	aad    0xd2
  42f635:	xchg   BYTE PTR ds:0x9a5b6170,al
  42f63b:	push   ds
  42f63c:	test   bh,ch
  42f63e:	jb     0x42f676
  42f640:	std    
  42f641:	push   edx
  42f642:	sbb    dh,BYTE PTR [esi+edi*2+0x2e16dd7c]
  42f649:	mov    eax,0x6eff9
  42f64e:	add    dh,bl
  42f650:	and    dh,ch
  42f652:	inc    ebp
  42f653:	and    al,BYTE PTR [edx]
  42f655:	je     0x42f668
  42f657:	xchg   ecx,eax
  42f658:	or     cl,BYTE PTR ds:[ebx-0x297ce919]
  42f65f:	bound  ecx,QWORD PTR [eax-0xf]
  42f662:	call   DWORD PTR [ebp-0x78]
  42f665:	arpl   WORD PTR [eax],cx
  42f667:	test   dl,dh
  42f669:	inc    ebx
  42f66a:	or     dh,cl
  42f66c:	je     0x42f693
  42f66e:	push   0xffffffcb
  42f670:	push   ebp
  42f671:	dec    ebp
  42f672:	xor    edx,DWORD PTR [ecx+0x45fab5e0]
  42f678:	in     eax,dx
  42f679:	loope  0x42f69d
  42f67b:	push   ecx
  42f67c:	mov    BYTE PTR [edx],al
  42f67e:	add    DWORD PTR [eax],eax
  42f680:	add    BYTE PTR [eax],al
  42f682:	retf   0x8908
  42f685:	inc    ebp
  42f686:	push   ds
  42f687:	xor    DWORD PTR [edi+0x7b7b9f75],edi
  42f68d:	in     al,0x31
  42f68f:	sbb    BYTE PTR [edi+0x32],cl
  42f692:	retf   0xc880
  42f695:	call   0x3a1f8d
  42f69a:	xchg   ebp,eax
  42f69b:	mov    ch,0xba
  42f69d:	mov    DWORD PTR [edi-0x1c],ecx
  42f6a0:	add    DWORD PTR [esi+0x7a],0x10c4b81
  42f6a7:	add    cl,BYTE PTR [bx+di+0x7d2]
  42f6ac:	add    DWORD PTR [eax],eax
  42f6ae:	pop    edx
  42f6af:	add    DWORD PTR [eax+0x10],0x890a56e1
  42f6b6:	loop   0x42f6bb
  42f6b8:	add    DWORD PTR [eax],eax
  42f6ba:	pop    edx
  42f6bb:	xor    edi,edx
  42f6bd:	bswap  esi
  42f6bf:	imul   edi,esp,0x5b814aff
  42f6c5:	lock leave 
  42f6c7:	arpl   dx,bp
  42f6c9:	add    dh,bl
  42f6cb:	leave  
  42f6cc:	pop    es
  42f6cd:	repnz dec ax
  42f6d0:	add    edx,esi
  42f6d2:	xor    BYTE PTR [edx-0xe],bl
  42f6d5:	add    eax,0x86feedbc
  42f6da:	cmp    eax,0x4207746
  42f6df:	popf   
  42f6e0:	xchg   BYTE PTR [edi+ecx*1-0x1f],bl
  42f6e4:	loop   0x42f6d1
  42f6e6:	add    BYTE PTR [eax],al
  42f6e8:	add    bl,dl
  42f6ea:	adc    DWORD PTR [eax],ecx
  42f6ec:	data16 repnz mov BYTE PTR [ecx],al
  42f6f0:	repnz mov al,0x1d
  42f6f3:	clc    
  42f6f4:	add    eax,0x87082e44
  42f6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6fa:	xchg   ebp,eax
  42f6fb:	pop    ebx
  42f6fc:	and    ah,cl
  42f6fe:	hlt    
  42f6ff:	xchg   BYTE PTR [ebx+ebx*8-0x20],bl
  42f703:	loop   0x42f6ec
  42f705:	jmp    0x42f750
  42f707:	add    ah,BYTE PTR [esi-0xe]
  42f70a:	fadd   DWORD PTR [ecx]
  42f70c:	repnz mov al,0x6d
  42f70f:	repnz add eax,0x86fd8e3c
  42f715:	lods   eax,DWORD PTR ds:[esi]
  42f716:	aad    0xbf
  42f718:	and    BYTE PTR [esp+ebp*1+0x34e34189],dl
  42f71f:	mov    ah,0x3
  42f721:	repnz pop ebp
  42f723:	dec    BYTE PTR [esi+eiz*1-0xc5082da]
  42f72a:	pop    esi
  42f72b:	(bad)  
  42f72c:	(bad)  
  42f72d:	fnstcw WORD PTR [ecx-0x2b]
  42f730:	out    0x81,eax
  42f732:	xchg   esp,eax
  42f733:	jl     0x42f72f
  42f735:	push   0x5b448905
  42f73a:	loopne 0x42f77f
  42f73c:	icebp  
  42f73d:	jp     0x42f731
  42f73f:	jp     0x42f7bf
  42f741:	dec    ebx
  42f742:	fs repz xor ecx,ecx
  42f746:	push   es
  42f747:	(bad)  
  42f749:	cmp    DWORD PTR [ecx],edx
  42f74b:	fst    QWORD PTR [eax]
  42f74d:	add    BYTE PTR [eax],al
  42f74f:	add    BYTE PTR [ebx-0xcfc7ffa],dh
  42f755:	push   es
  42f756:	sub    eax,edi
  42f758:	shr    BYTE PTR [ebp+0x63303e8],1
  42f75e:	outs   dx,BYTE PTR ds:[esi]
  42f75f:	push   ebx
  42f760:	in     eax,dx
  42f761:	push   ebp
  42f762:	in     eax,dx
  42f763:	push   edx
  42f764:	adc    BYTE PTR [ebx],0x80
  42f767:	add    esi,ebx
  42f769:	add    ch,BYTE PTR [ecx-0xa]
  42f76c:	in     al,0xd3
  42f76e:	cdq    
  42f76f:	push   ss
  42f770:	dec    ebx
  42f771:	adc    ebp,DWORD PTR [ecx]
  42f773:	add    al,0x6e
  42f775:	inc    edi
  42f776:	adc    al,0x7
  42f778:	push   0xffffffc4
  42f77a:	test   BYTE PTR [eax-0x8867b24],cl
  42f780:	pop    ds
  42f781:	rol    BYTE PTR [eax+0x6969e799],cl
  42f787:	stos   DWORD PTR es:[edi],eax
  42f788:	cld    
  42f789:	repnz add eax,0xd4733639
  42f78f:	push   ss
  42f790:	adc    eax,0xff7cba07
  42f795:	(bad)  
  42f796:	cmc    
  42f797:	ret    
  42f798:	pushf  
  42f799:	loopne 0x42f782
  42f79b:	jmp    0x5cb0b234
  42f7a0:	xchg   esp,eax
  42f7a1:	mov    DWORD PTR [edi],ebp
  42f7a3:	jl     0x42f72e
  42f7a5:	inc    edx
  42f7a6:	mov    ds:0xe906f37b,eax
  42f7ab:	add    ecx,DWORD PTR [ebx+eax*8-0x7b9f2193]
  42f7b2:	sub    eax,0xf7
  42f7b7:	daa    
  42f7b8:	(bad)  
  42f7b9:	or     DWORD PTR [esi],edx
  42f7bb:	retf   
  42f7bc:	adc    ch,BYTE PTR [ecx+0x74476e03]
  42f7c2:	pop    ds
  42f7c3:	jbe    0x42f82f
  42f7c5:	(bad)  
  42f7c6:	jl     0x42f7c2
  42f7c8:	xor    ebx,ebx
  42f7ca:	jne    0x42f7c2
  42f7cc:	je     0x42f812
  42f7ce:	int    0xf0
  42f7d0:	repnz or DWORD PTR [eax+0x4a],esi
  42f7d4:	outs   dx,BYTE PTR ds:[esi]
  42f7d5:	ret    0xa72c
  42f7d8:	push   es
  42f7d9:	add    cl,ch
  42f7db:	lock xor esi,0x7c8801d2
  42f7e2:	icebp  
  42f7e3:	test   DWORD PTR [esi-0x4eb1701],0x6a0ee865
  42f7ed:	push   0xe751bde9
  42f7f2:	cmp    BYTE PTR [esi+0x6d],ch
  42f7f5:	cli    
  42f7f6:	ins    BYTE PTR es:[edi],dx
  42f7f7:	push   0xf61e83fd
  42f7fc:	push   es
  42f7fd:	add    BYTE PTR [edx+esi*4-0x5f],dh
  42f801:	dec    edi
  42f802:	push   ss
  42f803:	xor    bl,al
  42f805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f806:	mov    ch,0xf0
  42f808:	push   es
  42f809:	add    BYTE PTR [esi-0x1e],ch
  42f80c:	cs adc al,0xa9
  42f80f:	lock cmp DWORD PTR [edi+0x1332cee],0xffffffe9
  42f817:	lock std 
  42f819:	mov    dl,0xac
  42f81b:	add    BYTE PTR [eax],al
  42f81d:	add    BYTE PTR [eax],al
  42f81f:	(bad)  
  42f820:	mov    dl,0xac
  42f822:	in     al,dx
  42f823:	inc    edi
  42f824:	fcompp 
  42f826:	std    
  42f827:	dec    esi
  42f828:	jle    0x42f7de
  42f82a:	or     BYTE PTR [edi],al
  42f82c:	jne    0x42f834
  42f82e:	mov    al,ds:0xf805f361
  42f833:	ins    BYTE PTR es:[edi],dx
  42f834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f835:	leave  
  42f836:	pop    esp
  42f837:	add    eax,0xdd41287
  42f83c:	xchg   DWORD PTR [eax+eax*1+0xa004522],esp
  42f843:	(bad)  
  42f844:	scas   al,BYTE PTR es:[edi]
  42f845:	clc    
  42f846:	rol    DWORD PTR [edi+0x6],0x2b
  42f84a:	xchg   edi,eax
  42f84b:	mov    cl,0xbf
  42f84d:	out    0x1a,eax
  42f84f:	cld    
  42f850:	scas   al,BYTE PTR es:[edi]
  42f851:	rol    BYTE PTR [ecx-0x13],0xe1
  42f855:	add    esp,DWORD PTR [ecx-0x407cfd92]
  42f85b:	repnz cli 
  42f85d:	jae    0x42f89b
  42f85f:	push   eax
  42f860:	dec    ebp
  42f861:	push   0x56b
  42f866:	mov    ds:0x1afffa03,al
  42f86b:	fmul   DWORD PTR [esi+esi*8]
  42f86e:	xlat   BYTE PTR ds:[ebx]
  42f86f:	cli    
  42f870:	add    esi,DWORD PTR [edi+ebp*8+0x51]
  42f874:	dec    ebp
  42f875:	push   0x438
  42f87a:	repnz add dl,bh
  42f87d:	dec    edx
  42f87f:	in     eax,dx
  42f880:	jae    0x42f87a
  42f882:	add    BYTE PTR [eax],al
  42f884:	add    BYTE PTR [edi+0x47],bl
  42f887:	mov    ds:0xf6774d50,al
  42f88c:	mov    edx,DWORD PTR [esp+ebx*8-0x12b204dc]
  42f893:	jns    0x42f912
  42f895:	push   ds
  42f896:	add    al,0x74
  42f898:	push   cs
  42f899:	imul   edx,DWORD PTR [ebp+0x62],0x49aa7
  42f8a0:	push   0x295
  42f8a5:	inc    ecx
  42f8a6:	adc    ch,dh
  42f8a8:	inc    ebp
  42f8a9:	add    BYTE PTR [esi+ebp*2+0x1d],0x69
  42f8ae:	push   ebp
  42f8af:	bound  ebp,QWORD PTR [eax+0x6800048a]
  42f8b5:	add    BYTE PTR [edx],0x0
  42f8b8:	add    BYTE PTR ds:0xf38df277,cl
  42f8be:	call   0x8672:0x935c4fa6
  42f8c5:	sub    eax,0x4cf57216
  42f8ca:	imul   eax,DWORD PTR [esp+edi*2+0x9ea5e5b],0xa3e690a0
  42f8d5:	repz pop ebp
  42f8d7:	(bad)  
  42f8d8:	neg    DWORD PTR [bp+di-0x2]
  42f8dc:	call   FWORD PTR [eax]
  42f8de:	ins    BYTE PTR es:[edi],dx
  42f8df:	jo     0x42f925
  42f8e1:	jmp    0x42f950
  42f8e3:	jmp    0xa4:0xec08c01c
  42f8ea:	add    BYTE PTR [eax],al
  42f8ec:	repz pop ebp
  42f8ee:	(bad)  
  42f8ef:	addr16 out dx,al
  42f8f1:	pop    ebx
  42f8f2:	(bad)  
  42f8f3:	(bad)  
  42f8f4:	cld    
  42f8f5:	xor    bh,BYTE PTR [esp+ecx*4-0x52]
  42f8f9:	aad    0xd3
  42f8fb:	cli    
  42f8fc:	data16 mov cl,BYTE PTR [ecx+eax*8-0x5862e25]
  42f904:	fmul   QWORD PTR [edi+0x69f207ba]
  42f90a:	adc    DWORD PTR [edi+0x24],ecx
  42f90d:	push   ss
  42f90e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f90f:	inc    esp
  42f911:	pop    ebp
  42f912:	out    0xff,al
  42f914:	repnz pop ebp
  42f916:	(bad)  
  42f917:	cli    
  42f918:	ds out 0x82,al
  42f91b:	inc    esp
  42f91c:	pop    ebx
  42f91d:	lods   eax,DWORD PTR ds:[esi]
  42f91e:	ja     0x42f994
  42f920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f921:	in     al,0x3d
  42f923:	out    0x7a,eax
  42f925:	sar    DWORD PTR [eax-0x6],cl
  42f928:	pushf  
  42f929:	call   0x73fe:0x5dfb0006
  42f930:	int3   
  42f931:	inc    ebx
  42f932:	(bad)  
  42f933:	sub    eax,0xe745e4b3
  42f938:	inc    ebp
  42f939:	push   es
  42f93a:	add    bh,BYTE PTR [ecx+0x69]
  42f93d:	not    DWORD PTR [ecx-0x39]
  42f940:	add    al,bh
  42f942:	pop    ecx
  42f943:	inc    esp
  42f944:	lods   eax,DWORD PTR ds:[esi]
  42f945:	inc    ebp
  42f946:	pop    es
  42f947:	adc    al,0xec
  42f949:	ds xchg edi,eax
  42f94b:	jmp    0x42f943
  42f94d:	add    al,0xe9
  42f94f:	add    eax,DWORD PTR [eax]
  42f951:	add    BYTE PTR [eax],al
  42f953:	dec    eax
  42f954:	icebp  
  42f955:	hlt    
  42f956:	js     0x42f93f
  42f958:	sub    dl,ch
  42f95a:	ret    
  42f95b:	xor    al,0xc8
  42f95d:	inc    edx
  42f95e:	fnstsw WORD PTR [ebx]
  42f960:	inc    esp
  42f961:	clc    
  42f962:	add    esp,DWORD PTR [ecx]
  42f964:	add    DWORD PTR [ecx],ecx
  42f966:	test   al,0xdd
  42f968:	push   es
  42f969:	in     eax,0xef
  42f96b:	cmc    
  42f96c:	pop    esi
  42f96d:	cmp    ah,BYTE PTR [edi+ecx*1+0x67]
  42f971:	fs inc ebx
  42f973:	or     BYTE PTR [esi+ebx*2],0x6
  42f977:	mov    ebp,DWORD PTR [esi-0x5017fbdb]
  42f97d:	addr16 push ebx
  42f980:	push   es
  42f981:	jmp    0xe8d3998e
  42f986:	add    dh,bl
  42f988:	push   es
  42f989:	test   al,0x63
  42f98b:	in     al,0x11
  42f98d:	test   al,0x44
  42f98f:	leave  
  42f990:	sub    al,0x49
  42f992:	rdpmc  
  42f994:	pop    es
  42f995:	jnp    0x42f995
  42f997:	fdiv   QWORD PTR [edx-0x2510fbdb]
  42f99d:	and    BYTE PTR [eax+esi*1+0x67],ch
  42f9a1:	pop    ebx
  42f9a2:	js     0x42fa14
  42f9a4:	inc    edi
  42f9a5:	fsubr  QWORD PTR [eax]
  42f9a7:	je     0x42f974
  42f9a9:	add    al,0x0
  42f9ab:	outs   dx,BYTE PTR ds:[esi]
  42f9ac:	inc    edi
  42f9ad:	mov    esp,0xd1147424
  42f9b2:	mov    ebx,0x620006c5
  42f9b7:	add    BYTE PTR [eax],al
  42f9b9:	add    BYTE PTR [ecx+0x66],ch
  42f9bc:	(bad)  
  42f9bd:	call   0x724a89b2
  42f9c2:	cmc    
  42f9c3:	out    dx,al
  42f9c4:	mov    bh,0xaa
  42f9c6:	lock lea ecx,[eax+0x6f1ed]
  42f9cd:	pusha  
  42f9ce:	sub    BYTE PTR [edx],cl
  42f9d0:	das    
  42f9d1:	sub    DWORD PTR [eax],esi
  42f9d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d4:	add    ebp,ecx
  42f9d6:	inc    DWORD PTR [esi-0x1a]
  42f9d9:	lock les ebp,FWORD PTR [edx]
  42f9dc:	cmp    ah,dl
  42f9de:	xor    BYTE PTR [esi-0xc],ah
  42f9e1:	in     al,dx
  42f9e2:	shl    BYTE PTR [edx-0x25db16c2],1
  42f9e8:	sub    ecx,eax
  42f9ea:	call   0x73a6:0x73cefc40
  42f9f1:	or     al,0x56
  42f9f3:	out    dx,al
  42f9f4:	mov    bh,0x2a
  42f9f6:	out    dx,eax
  42f9f7:	lea    ecx,[ebx+0xd]
  42f9fa:	repz pop DWORD PTR [edi+0x6efe9]
  42fa01:	jb     0x42f9b6
  42fa03:	sub    DWORD PTR [eax],ecx
  42fa05:	jb     0x42fa01
  42fa07:	out    dx,al
  42fa08:	mov    bh,0x2a
  42fa0a:	test   DWORD PTR [edi+0x6efe580],0x2630ba00
  42fa14:	mov    esi,0x2461f0f1
  42fa19:	jno    0x42f9fe
  42fa1b:	(bad)  
  42fa1c:	push   DWORD PTR [esi+0x0]
  42fa1f:	add    BYTE PTR [eax],al
  42fa21:	repnz lods al,BYTE PTR es:[esi]
  42fa24:	stos   BYTE PTR es:[edi],al
  42fa25:	lock or cl,BYTE PTR [edi-0x49]
  42fa29:	mov    ch,0xd9
  42fa2b:	inc    esp
  42fa2c:	inc    ecx
  42fa2d:	pop    edx
  42fa2e:	inc    eax
  42fa2f:	cld    
  42fa30:	dec    esi
  42fa31:	jae    0x42f9d8
  42fa33:	jae    0x42fa35
  42fa35:	not    BYTE PTR [ecx+0x18aa2456]
  42fa3b:	out    dx,al
  42fa3c:	cmp    esp,esp
  42fa3e:	push   edi
  42fa3f:	adc    edx,DWORD PTR [esi+0x5c]
  42fa42:	push   ebx
  42fa43:	sub    ebx,ebx
  42fa45:	aam    0x42
  42fa47:	mov    dl,0x43
  42fa49:	pop    edx
  42fa4a:	icebp  
  42fa4b:	add    eax,0x55de05f7
  42fa50:	pop    esi
  42fa51:	mov    eax,ds:0xf5fffec7
  42fa56:	neg    DWORD PTR [ebx+0x11]
  42fa59:	call   0xf5e2:0xd1534e09
  42fa60:	adc    eax,0x3ff9ee
  42fa65:	shl    edx,1
  42fa67:	jae    0x42fa6e
  42fa69:	fcom   QWORD PTR [ebp+ecx*2-0x15]
  42fa6d:	pop    ebp
  42fa6e:	sbb    al,al
  42fa70:	jmp    0x42fab9
  42fa72:	cmp    al,0x58
  42fa74:	pop    ebx
  42fa75:	xor    eax,0xda14d026
  42fa7a:	or     ch,dh
  42fa7c:	add    eax,0x39aeea
  42fa81:	push   cs
  42fa82:	jne    0x42fac3
  42fa84:	call   0xfc42fa89
  42fa89:	mov    ebx,0xc84efffb
  42fa8e:	outs   dx,BYTE PTR ds:[esi]
  42fa8f:	cmp    BYTE PTR [ebp+0xa115bf7],al
  42fa95:	or     eax,DWORD PTR [ebx+0x39a2e20d]
  42fa9b:	add    BYTE PTR [ebx-0x35fef975],dh
  42faa1:	or     BYTE PTR [ebp+0x19],dh
  42faa4:	fst    DWORD PTR [ecx+ebp*1-0x40]
  42faa8:	push   0x38
  42faaa:	dec    edx
  42faab:	xor    esi,DWORD PTR [ecx]
  42faad:	call   0xe7fe:0xb0f3b852
  42fab4:	dec    ecx
  42fab5:	mov    esp,0x2dc0fa71
  42faba:	aad    0x3f
  42fabc:	sub    BYTE PTR [ecx],dh
  42fabe:	jmp    0x1a8676c7
  42fac3:	push   cs
  42fac4:	xor    ebp,DWORD PTR [esi+0x2d]
  42fac7:	shl    BYTE PTR [eax],0x2d
  42faca:	and    BYTE PTR [esi+edi*8-0x53],cl
  42face:	(bad)  
  42facf:	icebp  
  42fad0:	test   BYTE PTR [ebp-0x5e],0x3e
  42fad4:	repz imul ecx,esp,0xff5b873
  42fadb:	fild   DWORD PTR [esi+0x65]
  42fade:	jns    0x42fa9f
  42fae0:	(bad)  
  42fae1:	scas   eax,DWORD PTR es:[edi]
  42fae2:	jno    0x42faf8
  42fae4:	xchg   edi,eax
  42fae5:	ds mov esi,0xe65b79ff
  42faeb:	mov    bh,0x0
  42faed:	add    BYTE PTR [eax],al
  42faef:	mov    al,0x6d
  42faf1:	xor    eax,0xfe6eef81
  42faf6:	call   FWORD PTR [esi-0x44f76f5]
  42fafc:	outs   dx,BYTE PTR ds:[esi]
  42fafd:	(bad)  
  42fafe:	jmp    FWORD PTR [esi-0x64]
  42fb01:	out    dx,eax
  42fb02:	pop    ds
  42fb03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb04:	pushf  
  42fb05:	or     ch,BYTE PTR [eax-0x21]
  42fb08:	sub    eax,0x2b38504
  42fb0d:	or     ecx,DWORD PTR [edi+0x43]
  42fb10:	push   ds
  42fb11:	aam    0x2e
  42fb13:	mov    eax,0x30b7dbbb
  42fb18:	outs   dx,BYTE PTR ds:[esi]
  42fb19:	inc    dx
  42fb1b:	lds    ecx,FWORD PTR [esp+esi*2-0x2e51ffaa]
  42fb22:	mov    esi,0xbed1b368
  42fb27:	adc    eax,0x7ec1af5
  42fb2c:	pop    es
  42fb2d:	test   eax,0x4e32403
  42fb32:	add    bl,dh
  42fb34:	fimul  DWORD PTR [edi]
  42fb36:	sbb    DWORD PTR [eax],0x74e52b
  42fb3c:	sbb    DWORD PTR [esi+ebp*2+0x0],ebp
  42fb40:	xor    eax,0xb2dcff33
  42fb45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb46:	add    ebp,edi
  42fb48:	fiadd  DWORD PTR [ebx]
  42fb4a:	ins    BYTE PTR es:[edi],dx
  42fb4b:	xchg   esp,eax
  42fb4c:	inc    esp
  42fb4d:	and    esi,DWORD PTR [ebp+0x70]
  42fb50:	inc    esi
  42fb51:	xchg   esp,eax
  42fb52:	pop    ss
  42fb53:	add    BYTE PTR [eax],al
  42fb55:	add    BYTE PTR [edx+0x54c150ee],dl
  42fb5b:	nop
  42fb5c:	push   0xe906f204
  42fb61:	mov    dh,BYTE PTR [edx-0x7b13b806]
  42fb67:	(bad)  
  42fb68:	call   0xe84daff5
  42fb6d:	add    esi,ebx
  42fb6f:	lea    ebp,[edx]
  42fb71:	sbb    al,0x65
  42fb73:	or     ch,cl
  42fb75:	int    0x75
  42fb77:	fimul  DWORD PTR [esp+ecx*1]
  42fb7a:	shl    BYTE PTR [ebx+0x54],0x20
  42fb7e:	jmp    0x42fbe3
  42fb80:	cmp    al,0x20
  42fb82:	jmp    0x42fbe7
  42fb84:	xor    al,0x20
  42fb86:	fstp   TBYTE PTR [ecx+esi*4+0x28fa2f0e]
  42fb8d:	add    al,0x74
  42fb8f:	pop    edi
  42fb90:	cmp    DWORD PTR [eax+ecx*4+0x62],ebp
  42fb94:	cdq    
  42fb95:	je     0x42fc0c
  42fb97:	dec    edx
  42fb98:	xor    esi,edx
  42fb9a:	xchg   esi,eax
  42fb9b:	imul   eax
  42fb9d:	int    0x75
  42fb9f:	fcmovne st,st(4)
  42fba1:	or     esp,DWORD PTR [eax]
  42fba3:	(bad)  
  42fba4:	hlt    
  42fba5:	pop    ds
  42fba6:	(bad)  [ecx-0x1]
  42fba9:	cld    
  42fbaa:	aam    0xfe
  42fbac:	cli    
  42fbad:	cmc    
  42fbae:	or     al,0xff
  42fbb0:	push   ecx
  42fbb1:	data16 cmc 
  42fbb3:	mov    ds:0x89f0a913,al
  42fbb8:	idiv   DWORD PTR [esi+0x8000000]
  42fbbe:	(bad)  
  42fbbf:	cli    
  42fbc0:	dec    esi
  42fbc1:	pop    es
  42fbc2:	mov    edx,eax
  42fbc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbc5:	sahf   
  42fbc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbc7:	psubsw mm5,QWORD PTR [ebp+0x6b9feb89]
  42fbce:	fild   DWORD PTR [edi]
  42fbd0:	xchg   esi,eax
  42fbd1:	out    0xda,eax
  42fbd3:	pop    ss
  42fbd4:	es push ebp
  42fbd6:	idiv   dl
  42fbd8:	xchg   esp,eax
  42fbd9:	add    BYTE PTR [esi+0x74],bl
  42fbdc:	in     eax,0x26
  42fbde:	pop    ebp
  42fbdf:	adc    al,0xe9
  42fbe1:	std    
  42fbe2:	(bad)  
  42fbe3:	push   DWORD PTR [ecx-0x38]
  42fbe6:	mov    ah,0xe7
  42fbe8:	mov    bl,0xc7
  42fbea:	pop    esp
  42fbeb:	cli    
  42fbec:	(bad)  
  42fbed:	idiv   DWORD PTR [ecx+ebx*2-0xa4d74]
  42fbf4:	cmp    esp,DWORD PTR [ebp+ebp*2+0xa1a7251]
  42fbfb:	push   ebx
  42fbfc:	(bad)  
  42fbfd:	sbb    bh,dl
  42fbff:	cli    
  42fc00:	push   esp
  42fc01:	jmp    0x42fc60
  42fc03:	je     0x42fbde
  42fc05:	sbb    edx,0xfa80170b
  42fc0b:	inc    ebx
  42fc0c:	fdiv   QWORD PTR [eax]
  42fc0e:	bound  eax,QWORD PTR [ebp+0x1a69c8b1]
  42fc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc15:	pusha  
  42fc16:	pop    ebp
  42fc17:	xchg   BYTE PTR [esi-0x54a34040],ah
  42fc1d:	sti    
  42fc1e:	push   es
  42fc1f:	push   ebp
  42fc20:	bound  eax,QWORD PTR [eax]
  42fc22:	add    BYTE PTR [eax],al
  42fc24:	push   ebx
  42fc25:	loope  0x42fc12
  42fc27:	add    BYTE PTR [edx+0x7f8b4d3f],bh
  42fc2d:	add    eax,0x18ca4015
  42fc32:	out    dx,al
  42fc33:	push   0xf1d
  42fc38:	rcl    ah,0x50
  42fc3b:	inc    edi
  42fc3d:	pop    ebp
  42fc3e:	add    DWORD PTR fs:0x5a144c00,edi
  42fc45:	add    eax,0x8a2e4589
  42fc4a:	repnz add DWORD PTR [esi+0x28],eax
  42fc4e:	add    DWORD PTR [ebp-0x42],0x35
  42fc52:	pop    eax
  42fc53:	leave  
  42fc54:	sbb    BYTE PTR [edi],cl
  42fc56:	add    BYTE PTR [ebx+0x740ce98f],al
  42fc5c:	sti    
  42fc5d:	xchg   DWORD PTR [ebx-0x20],eax
  42fc60:	call   0xfa45:0x46f013d4
  42fc67:	mov    WORD PTR [edi+0x27ff4ae5],ss
  42fc6d:	xor    eax,0x434a400e
  42fc72:	call   DWORD PTR [ebp-0x7c]
  42fc75:	aas    
  42fc76:	mov    eax,DWORD PTR [ebp+0x3a]
  42fc79:	xor    eax,0xc597d7f5
  42fc7e:	jae    0x42fc57
  42fc80:	xor    DWORD PTR [edx+0xef674f5],ebx
  42fc86:	not    DWORD PTR ds:0x26000000
  42fc8c:	sti    
  42fc8d:	aas    
  42fc8e:	add    BYTE PTR ds:0xca12a02e,bh
  42fc94:	or     dh,bh
  42fc96:	je     0x42fc8e
  42fc98:	push   cs
  42fc99:	bound  eax,QWORD PTR [eax]
  42fc9b:	add    cl,BYTE PTR [ebx]
  42fc9d:	add    BYTE PTR [eax],dl
  42fc9f:	retf   0x13d5
  42fca2:	in     al,dx
  42fca3:	repz pop esi
  42fca5:	mov    esi,0xf2ae77ff
  42fcaa:	push   es
  42fcab:	and    ecx,DWORD PTR [ecx+0x2de1a017]
  42fcb1:	add    al,0xb0
  42fcb3:	repnz test BYTE PTR [esi+ebp*1],al
  42fcb7:	mov    bl,0xac
  42fcb9:	add    al,BYTE PTR [eax]
  42fcbb:	ds aad 0x5a
  42fcbe:	jle    0x42fc4f
  42fcc0:	pop    esi
  42fcc1:	rcl    DWORD PTR [ecx+0x68],1
  42fcc4:	add    ebx,esp
  42fcc6:	rdpmc  
  42fcc8:	outs   dx,BYTE PTR ds:[esi]
  42fcc9:	xor    edi,edx
  42fccb:	and    bl,bl
  42fccd:	(bad)  
  42fcce:	mul    DWORD PTR [ebx]
  42fcd0:	jge    0x42fcae
  42fcd2:	add    esp,DWORD PTR [eax]
  42fcd4:	jge    0x42fca7
  42fcd6:	cli    
  42fcd7:	out    0x65,al
  42fcd9:	jbe    0x42fd37
  42fcdb:	fs jbe 0x42fce1
  42fcde:	add    bl,dh
  42fce0:	in     eax,dx
  42fce1:	ins    DWORD PTR es:[edi],dx
  42fce2:	shr    DWORD PTR [esi+0x2e],1
  42fce5:	clc    
  42fce6:	dec    esi
  42fce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fce8:	in     al,0x2f
  42fcea:	je     0x42fccf
  42fcec:	lods   eax,DWORD PTR ds:[esi]
  42fced:	dec    BYTE PTR [eax-0x62000000]
  42fcf3:	push   ebp
  42fcf4:	fadd   QWORD PTR [ebx]
  42fcf6:	xor    al,0xe3
  42fcf8:	cli    
  42fcf9:	test   DWORD PTR gs:[ebx-0x17e4a7f8],0xf31cfaf8
  42fd04:	ret    0xc3ef
  42fd07:	jmp    0xfeda:0x1ca3f3c2
  42fd0e:	mov    eax,ds:0x86fad4fc
  42fd13:	jno    0x42fd84
  42fd15:	je     0x42fd12
  42fd17:	cwde   
  42fd18:	push   ebp
  42fd19:	test   BYTE PTR [ebx+0x5efafd1a],dh
  42fd1f:	pop    es
  42fd20:	popf   
  42fd21:	jno    0x42fce4
  42fd23:	sbb    DWORD PTR [ebx],0x74
  42fd26:	repz fcmovu st,st(5)
  42fd29:	jo     0x42fd62
  42fd2b:	pcmpgtd mm5,mm7
  42fd2e:	in     al,dx
  42fd2f:	jmp    0xc7a3:0xad544f6
  42fd36:	mov    ecx,0xa4f77205
  42fd3b:	pop    edi
  42fd3c:	xchg   ecx,eax
  42fd3d:	shr    DWORD PTR [esi-0x37],1
  42fd40:	popa   
  42fd41:	rol    BYTE PTR [ebp+0x4e],cl
  42fd44:	es cld 
  42fd46:	xchg   esp,eax
  42fd47:	mov    edx,0x92d0e063
  42fd4c:	addr16 pusha 
  42fd4e:	mov    ah,0x4
  42fd50:	jmp    0x91fc2958
  42fd55:	xor    al,0x0
  42fd57:	add    BYTE PTR [eax],al
  42fd59:	mov    bl,0x91
  42fd5b:	arpl   WORD PTR [eax-0x2cd6a091],bp
  42fd61:	mov    ah,0xb6
  42fd63:	mov    fs,WORD PTR [edi]
  42fd65:	ret    
  42fd66:	adc    al,0x3e
  42fd68:	jno    0x42fd69
  42fd6a:	mov    dh,0xf5
  42fd6c:	ret    
  42fd6d:	dec    esp
  42fd6e:	mov    ch,BYTE PTR [eax]
  42fd70:	not    ebp
  42fd72:	mov    edi,DWORD PTR [ebx-0x17391231]
  42fd78:	jle    0x42fde9
  42fd7a:	stos   BYTE PTR es:[edi],al
  42fd7b:	repz jo 0x42fda7
  42fd7e:	mov    dh,0xe9
  42fd80:	pop    ecx
  42fd81:	ins    DWORD PTR es:[edi],dx
  42fd82:	and    ecx,ebx
  42fd84:	adc    dh,BYTE PTR [ebx+0x6628ce06]
  42fd8a:	mov    DWORD PTR [esi+ebp*2+0x71385f09],ecx
  42fd91:	(bad)  
  42fd93:	aad    0xc3
  42fd95:	cld    
  42fd96:	xchg   ecx,eax
  42fd97:	arpl   WORD PTR [edi-0x4a00a109],sp
  42fd9d:	shl    BYTE PTR [ecx+0x14],0x59
  42fda1:	inc    esi
  42fda3:	jmp    FWORD PTR [ebx+0x30]
  42fda6:	fidivr DWORD PTR [ecx]
  42fda8:	ins    BYTE PTR es:[edi],dx
  42fda9:	ins    DWORD PTR es:[edi],dx
  42fdaa:	stos   BYTE PTR es:[edi],al
  42fdab:	cld    
  42fdac:	xchg   esi,eax
  42fdad:	inc    ebx
  42fdae:	into   
  42fdaf:	cli    
  42fdb0:	mov    bh,0xa6
  42fdb2:	jmp    0x648c:0xce932c8c
  42fdb9:	mov    WORD PTR [ebx-0x6],ds
  42fdbc:	jbe    0x42fdbe
  42fdbe:	add    BYTE PTR [eax],al
  42fdc0:	shl    BYTE PTR [ecx-0x2e],0x64
  42fdc4:	xor    dl,bl
  42fdc6:	ror    edi,0x77
  42fdc9:	fstp   TBYTE PTR [edi-0x50a621e]
  42fdcf:	fcomp  QWORD PTR [ebp+ebp*1-0x3cf63840]
  42fdd6:	or     esi,DWORD PTR [ebp+esi*4-0x62]
  42fdda:	dec    edi
  42fddb:	ds fstp st(6)
  42fdde:	adc    DWORD PTR [ecx-0x4b407c10],ebp
  42fde4:	in     al,dx
  42fde5:	lods   eax,DWORD PTR ds:[esi]
  42fde6:	add    BYTE PTR [edx],dl
  42fde8:	pop    esi
  42fde9:	in     al,0xf
  42fdeb:	push   ds
  42fdec:	pop    ebp
  42fded:	loop   0x42fdd6
  42fdef:	mov    dl,0xb2
  42fdf1:	pop    edx
  42fdf2:	cli    
  42fdf3:	scas   al,BYTE PTR es:[edi]
  42fdf4:	and    al,BYTE PTR [esi+edi*4+0x734377a2]
  42fdfb:	xor    BYTE PTR [esi-0x5063fff7],ch
  42fe01:	jno    0x42fd83
  42fe03:	std    
  42fe04:	cmc    
  42fe05:	pop    es
  42fe06:	add    cl,ch
  42fe08:	inc    ecx
  42fe09:	mov    eax,0x61ff5352
  42fe0e:	je     0x42fdf1
  42fe10:	mov    DWORD PTR [esi],edi
  42fe12:	mov    WORD PTR [edi+edi*2],ds
  42fe15:	mov    dh,0xe7
  42fe17:	add    BYTE PTR [eax-0x4000439],dh
  42fe1d:	dec    esi
  42fe1e:	jmp    0xc1:0xee4eeb66
  42fe25:	add    BYTE PTR [eax],al
  42fe27:	mov    dl,0xf2
  42fe29:	pop    ebp
  42fe2a:	xor    DWORD PTR [edi],ecx
  42fe2c:	aad    0x29
  42fe2e:	(bad)  
  42fe2f:	mov    ecx,0x50c02a1a
  42fe34:	aas    
  42fe35:	add    ecx,DWORD PTR [edx+ebp*4]
  42fe38:	xor    eax,0x8a0af80b
  42fe3d:	repnz add al,0xc5
  42fe40:	inc    ebp
  42fe41:	mov    ebp,0x2ec1941
  42fe46:	jb     0x42feb9
  42fe48:	sub    edi,DWORD PTR [ebp+0x10]
  42fe4b:	mov    esi,0x9a75f72e
  42fe50:	xchg   BYTE PTR [ebx-0xa11db18],al
  42fe56:	mov    DWORD PTR [edi-0x46],esi
  42fe59:	clc    
  42fe5a:	push   DWORD PTR ds:0xb53426bb
  42fe60:	in     eax,dx
  42fe61:	adc    BYTE PTR fs:[eax-0x380f8c7a],al
  42fe68:	(bad)  
  42fe69:	loop   0x42fe69
  42fe6b:	adc    eax,0x3e69e2ee
  42fe70:	in     al,dx
  42fe71:	cmc    
  42fe72:	shrd   DWORD PTR [edi+0xe],ecx,0x2b
  42fe77:	or     eax,0xbe481e5f
  42fe7c:	pop    ebp
  42fe7d:	inc    edx
  42fe7e:	jne    0x42fe94
  42fe80:	mov    cl,0x8e
  42fe82:	xchg   esp,eax
  42fe83:	pop    edx
  42fe84:	or     DWORD PTR [edx+0x7],esp
  42fe87:	icebp  
  42fe88:	add    eax,0xa4b8
  42fe8d:	add    BYTE PTR [esi+0xc69fa49],bl
  42fe93:	dec    esp
  42fe94:	dec    edx
  42fe95:	mov    esi,ebx
  42fe97:	lods   al,BYTE PTR ds:[esi]
  42fe98:	jne    0x42fe88
  42fe9a:	sbb    eax,DWORD PTR [esi+esi*8+0xad1fcf9]
  42fea1:	ja     0x42fe2c
  42fea3:	test   esi,0xce9e368c
  42fea9:	cli    
  42feaa:	(bad)  
  42feab:	sub    DWORD PTR [edx],edx
  42fead:	inc    eax
  42feae:	repz (bad) 
  42feb0:	leave  
  42feb1:	push   esi
  42feb2:	stos   BYTE PTR es:[edi],al
  42feb3:	mov    al,0xe
  42feb5:	add    BYTE PTR [ecx+0x62],bl
  42feb8:	(bad)  
  42feb9:	daa    
  42feba:	and    esi,DWORD PTR [ecx]
  42febc:	add    al,0xe8
  42febe:	and    al,BYTE PTR [edx]
  42fec0:	add    al,0x0
  42fec2:	add    ah,dl
  42fec4:	and    esi,DWORD PTR [ebp-0x51]
  42fec7:	jmp    0xb0333a8c
  42fecc:	stc    
  42fecd:	mov    dl,0x2b
  42fecf:	pop    edx
  42fed0:	jg     0x42ff1d
  42fed2:	repnz add eax,0x6c33b2fb
  42fed8:	in     al,0x84
  42feda:	mov    bl,0x32
  42fedc:	sbb    eax,0xe4a4f166
  42fee1:	ss jnp 0x42fe85
  42fee4:	add    eax,0xfd71e287
  42fee9:	in     eax,dx
  42feea:	jp     0x42fe7f
  42feec:	(bad)  
  42feed:	cli    
  42feee:	loop   0x42ff35
  42fef0:	aam    0xfa
  42fef2:	add    BYTE PTR [eax],al
  42fef4:	add    dh,bh
  42fef6:	icebp  
  42fef7:	adc    eax,DWORD PTR [eax-0xd]
  42fefa:	jmp    0x8874:0x40ee733e
  42ff01:	(bad)  
  42ff02:	or     DWORD PTR [esi+0x4c],edi
  42ff05:	aaa    
  42ff06:	pop    ebp
  42ff07:	js     0x42feca
  42ff09:	sbb    BYTE PTR [ebx+0x2d],ah
  42ff0c:	shl    BYTE PTR [ebx+0xb647630],0x7
  42ff13:	mov    di,0x5c18
  42ff17:	adc    eax,0x55131444
  42ff1c:	add    al,0xf3
  42ff1e:	inc    edi
  42ff1f:	ds adc al,0x8b
  42ff22:	(bad)  
  42ff23:	sbb    cl,al
  42ff25:	hlt    
  42ff26:	arpl   sp,cx
  42ff28:	jmp    0xc7a05b19
  42ff2d:	hlt    
  42ff2e:	(bad)  
  42ff2f:	mov    dh,0x79
  42ff31:	pop    edi
  42ff32:	pcmpgtd mm4,mm7
  42ff35:	fadd   DWORD PTR [esi]
  42ff37:	outs   dx,BYTE PTR ds:[esi]
  42ff38:	ror    DWORD PTR [eax],cl
  42ff3a:	mov    BYTE PTR [edx+edi*8-0x70],dl
  42ff3e:	push   es
  42ff3f:	jmp    0x6d4ef247
  42ff44:	mov    ?,WORD PTR [ebx+ebx*2+0x108878e8]
  42ff4b:	dec    ecx
  42ff4c:	add    al,0xf3
  42ff4e:	push   es
  42ff4f:	pusha  
  42ff50:	iret   
  42ff51:	in     al,dx
  42ff52:	cmp    DWORD PTR ds:0xe88a70fd,0x3
  42ff5c:	repz (bad) 
  42ff5e:	mov    bl,0xff
  42ff60:	test   DWORD PTR [esi],edi
  42ff62:	pop    edi
  42ff63:	iret   
  42ff64:	hlt    
  42ff65:	mov    esp,esp
  42ff67:	add    al,BYTE PTR [eax+0xd43dd3e]
  42ff6d:	dec    eax
  42ff6e:	pop    ebp
  42ff6f:	fsubr  st,st(6)
  42ff71:	adc    bh,dh
  42ff73:	jno    0x42ff8a
  42ff75:	popa   
  42ff76:	outs   dx,DWORD PTR ds:[esi]
  42ff77:	out    dx,eax
  42ff78:	call   0x4c56bb0c
  42ff7d:	ds pop edi
  42ff7f:	iret   
  42ff80:	and    al,0x87
  42ff82:	int    0x3
  42ff84:	(bad)  
  42ff85:	mov    dl,0x6d
  42ff87:	shl    eax,1
  42ff89:	xchg   esi,edi
  42ff8b:	sti    
  42ff8c:	sahf   
  42ff8d:	ret    
  42ff8e:	jmp    DWORD PTR [ebx+0x19]
  42ff91:	push   ebx
  42ff92:	sar    dh,1
  42ff94:	cdq    
  42ff95:	fimul  DWORD PTR [edi]
  42ff97:	push   0xd
  42ff99:	push   DWORD PTR [bx+di+0x25]
  42ff9d:	addr16 ss mov esi,0x960b1703
  42ffa4:	and    al,0xcc
  42ffa6:	pop    es
  42ffa7:	dec    edi
  42ffa8:	ins    BYTE PTR es:[edi],dx
  42ffa9:	dec    ecx
  42ffaa:	jae    0x42ffb0
  42ffac:	jo     0x42ffea
  42ffae:	cli    
  42ffaf:	out    0xf0,al
  42ffb1:	push   es
  42ffb2:	(bad)  
  42ffb3:	fpatan 
  42ffb5:	aaa    
  42ffb6:	ss cmp al,0xd7
  42ffb9:	in     al,dx
  42ffba:	adc    DWORD PTR [eax+esi*1-0x2a],esp
  42ffbe:	add    edx,edx
  42ffc0:	add    BYTE PTR [eax],al
  42ffc2:	add    BYTE PTR [eax],ah
  42ffc4:	aad    0x9
  42ffc6:	(bad)  
  42ffc7:	int    0xe
  42ffc9:	sub    ebx,eax
  42ffcb:	cmp    edx,DWORD PTR [edi+edi*8]
  42ffce:	jle    0x42fff9
  42ffd0:	adc    al,0x87
  42ffd2:	hlt    
  42ffd3:	add    BYTE PTR [esi+0x44],bl
  42ffd6:	test   DWORD PTR [ebx],edi
  42ffd8:	inc    ebx
  42ffd9:	inc    cl
  42ffdb:	in     al,dx
  42ffdc:	popa   
  42ffdd:	mov    ds:0xfa5e4d6a,eax
  42ffe2:	cdq    
  42ffe3:	icebp  
  42ffe4:	popa   
  42ffe5:	or     al,0x1a
  42ffe7:	aaa    
  42ffe8:	sbb    bh,BYTE PTR [edi+0x7e628d72]
  42ffee:	lods   al,BYTE PTR ds:[esi]
  42ffef:	fcomp  QWORD PTR [ebp+ebp*1+0x29]
  42fff3:	enter  0x76e6,0xe9
  42fff7:	lock cwde 
  42fff9:	or     ebp,ecx
  42fffb:	cmp    dh,dh
  42fffd:	addr16 mov eax,ds:0x1920
  430001:	add    BYTE PTR [ecx],al
  430003:	(bad)  
  430005:	(bad)  
  430006:	call   0x7156c6
  43000b:	adc    ebp,ebx
  43000d:	pop    ebx
  43000e:	cld    
  43000f:	mov    eax,ds:0x9e8b3643
  430014:	adc    eax,0xe36f8850
  430019:	fs inc eax
  43001b:	ret    0x3002
  43001e:	add    BYTE PTR [edx],bl
  430020:	xor    eax,0x5aa7ff49
  430025:	cmc    
  430026:	adc    eax,0xaa000000
  43002b:	lock aas 
  43002d:	add    BYTE PTR [ebx-0x66c425b9],al
  430033:	push   esi
  430034:	push   ecx
  430035:	push   edi
  430036:	add    al,0xbb
  430038:	pushf  
  430039:	retf   
  43003a:	(bad)  
  43003b:	in     eax,dx
  43003c:	or     eax,0x3bd6a063
  430042:	adc    DWORD PTR [esi+0x2f],0x81350953
  430049:	push   ebp
  43004a:	push   0xffffffba
  43004c:	aam    0xfe
  43004e:	ins    DWORD PTR es:[edi],dx
  43004f:	in     eax,dx
  430050:	jle    0x430012
  430052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430053:	or     ecx,DWORD PTR [ebx+0x57]
  430056:	sbb    eax,0xa7ffd658
  43005b:	in     eax,0xf5
  43005d:	jne    0x430001
  43005f:	in     al,dx
  430060:	adc    edx,DWORD PTR [eax+ecx*4-0x3d0905bb]
  430067:	or     eax,eax
  430069:	test   edx,0x2de743da
  43006f:	pop    eax
  430070:	(bad)  
  430071:	call   0x3f1926
  430076:	bound  ecx,QWORD PTR [esi-0x23]
  430079:	jne    0x4300c2
  43007b:	cmp    eax,0x54a7ffa
  430080:	dec    ebx
  430081:	jmp    DWORD PTR [edi-0x1b]
  430084:	cmc    
  430085:	jne    0x43007a
  430087:	addr16 gs adc al,0x2f
  43008b:	pop    ebp
  43008c:	mov    esi,0xff
  430091:	imul   esp,DWORD PTR [edx+0x5bbe7e5e],0x65
  430098:	xchg   BYTE PTR [esi-0x1ff3a4f1],ch
  43009e:	das    
  43009f:	les    edi,FWORD PTR [esi+0x7e5bca68]
  4300a5:	mov    esi,0x332e653b
  4300aa:	inc    edi
  4300ab:	mov    ah,0x75
  4300ad:	rep outs dx,DWORD PTR ds:[esi]
  4300af:	inc    esp
  4300b0:	add    esi,ebx
  4300b2:	mov    ch,0xb
  4300b4:	push   0xffc2fdfb
  4300b9:	int3   
  4300ba:	(bad)  
  4300bb:	jmp    0x6c28ddbf
  4300c0:	jle    0x430110
  4300c2:	mov    ds:0x3a3486fe,al
  4300c7:	add    ebx,eax
  4300c9:	jo     0x430051
  4300cb:	jle    0x430053
  4300cd:	add    esp,ebx
  4300cf:	jo     0x430144
  4300d1:	push   edx
  4300d2:	in     eax,dx
  4300d3:	out    0x3,al
  4300d5:	pop    es
  4300d6:	push   eax
  4300d7:	leave  
  4300d8:	(bad)  
  4300d9:	popf   
  4300da:	out    0xef,eax
  4300dc:	xlat   BYTE PTR ds:[ebx]
  4300dd:	jo     0x430087
  4300df:	(bad)  
  4300e0:	jae    0x430124
  4300e2:	aad    0xc0
  4300e4:	or     esi,eax
  4300e6:	and    bh,cl
  4300e8:	cli    
  4300e9:	push   ds
  4300ea:	data16 jnp 0x430131
  4300ed:	xchg   ebx,eax
  4300ee:	jecxz  0x43012e
  4300f0:	jae    0x430115
  4300f2:	aad    0x8
  4300f4:	inc    DWORD PTR [eax]
  4300f6:	add    BYTE PTR [eax],al
  4300f8:	dec    ebp
  4300f9:	aad    0xc0
  4300fb:	(bad)  
  4300fd:	sub    BYTE PTR [esp+eax*2+0x57],bh
  430101:	out    0xc7,eax
  430103:	fld    TBYTE PTR [eax+0x7]
  430106:	out    0x80,al
  430108:	mov    ebx,ss
  43010a:	shr    esp,0xf1
  43010d:	and    DWORD PTR [edx],edx
  43010f:	push   0x3c
  430111:	pop    eax
  430112:	std    
  430113:	push   DWORD PTR [ecx+eax*2]
  430116:	gs inc ebx
  430118:	cs enter 0xeff9,0x44
  43011d:	pop    eax
  43011e:	fwait
  43011f:	div    DWORD PTR [edi+0x47]
  430122:	je     0x430149
  430124:	ins    BYTE PTR es:[edi],dx
  430125:	retf   0x7bcc
  430128:	repz and DWORD PTR [ebp-0x333e7c00],0x0
  430130:	adc    al,0x37
  430132:	gs inc edx
  430134:	loopne 0x4301a1
  430136:	mov    DWORD PTR [ebp-0x4b46a4c1],eax
  43013c:	repz imul esp,ebx,0x34
  430140:	mov    bl,0xc6
  430142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430143:	jge    0x430194
  430145:	outs   dx,DWORD PTR ds:[esi]
  430146:	gs mov bh,0xc8
  430149:	push   edi
  43014a:	(bad)  
  43014b:	inc    ebx
  43014c:	int3   
  43014d:	repnz push cs
  43014f:	add    al,0xf3
  430151:	inc    esp
  430152:	loopne 0x430157
  430154:	dec    ebp
  430155:	call   DWORD PTR [eax]
  430157:	ins    BYTE PTR es:[edi],dx
  430158:	cmp    esp,eax
  43015a:	call   0x4301ba
  43015f:	scas   al,BYTE PTR es:[edi]
  430160:	fucomp st(0)
  430162:	add    ecx,esp
  430164:	cmp    esp,DWORD PTR [eax-0x39]
  430167:	xchg   ecx,eax
  430168:	(bad)  
  430169:	ret    
  43016a:	addr16 jne 0x430132
  43016d:	sbb    al,0x7d
  43016f:	pusha  
  430170:	push   cs
  430171:	imul   eax,DWORD PTR [ebx+esi*8],0x2550e06
  430178:	mov    bh,0x65
  43017a:	test   al,0xf4
  43017c:	sub    al,0x3
  43017f:	repz repnz (bad) 
  430182:	mov    esi,0xe3338a32
  430187:	(bad)  
  430189:	xlat   BYTE PTR ds:[ebx]
  43018a:	jb     0x43017d
  43018c:	movsx  edx,WORD PTR [ebp-0x1ec475ea]
  430193:	mov    edi,0xb1ea0fc5
  430198:	mov    es,WORD PTR [ebp+eiz*1-0x58]
  43019c:	fcmovu st,st(7)
  43019e:	sar    bl,0xd2
  4301a1:	pop    ss
  4301a2:	bound  ebp,QWORD PTR [edi+edi*8]
  4301a5:	fld    DWORD PTR ss:0xb3c870e
  4301ac:	mov    cs,WORD PTR [edi]
  4301ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301af:	inc    ebp
  4301b0:	add    BYTE PTR fs:[edx-0x4d],ch
  4301b4:	add    edi,DWORD PTR [edi-0x57]
  4301b7:	hlt    
  4301b8:	pop    edi
  4301b9:	fldcw  WORD PTR [edx+0x32]
  4301bc:	cli    
  4301bd:	out    0xb1,al
  4301bf:	pop    ds
  4301c0:	inc    edi
  4301c1:	aas    
  4301c2:	stos   BYTE PTR es:[edi],al
  4301c3:	add    BYTE PTR [eax],al
  4301c5:	add    BYTE PTR [edi-0x15],bl
  4301c8:	out    0xa7,eax
  4301ca:	xchg   ebp,eax
  4301cb:	imul   edi,edi,0xfa528569
  4301d1:	jae    0x430158
  4301d3:	imul   esp,edi,0xfa56c97a
  4301d9:	stos   DWORD PTR es:[edi],eax
  4301da:	mov    eax,0x44725356
  4301df:	aad    0xeb
  4301e1:	mov    ecx,0xa8800e26
  4301e6:	loopne 0x430266
  4301e8:	dec    esp
  4301e9:	jns    0x430201
  4301eb:	into   
  4301ec:	std    
  4301ed:	cmc    
  4301ee:	inc    ebx
  4301ef:	push   ss
  4301f0:	add    dh,BYTE PTR [esi+0x6102ec79]
  4301f6:	inc    ebp
  4301f7:	push   edi
  4301f8:	pop    eax
  4301f9:	push   esi
  4301fa:	or     DWORD PTR [eax+ecx*8-0x72f8c000],ecx
  430201:	jge    0x43020d
  430203:	fsub   st,st(7)
  430205:	mov    BYTE PTR [edi+0x524581dc],cl
  43020b:	rol    DWORD PTR [ebx-0xd],1
  43020e:	(bad)  
  43020f:	xchg   esp,eax
  430210:	jmp    0xedab:0xe2ca2950
  430217:	in     al,dx
  430218:	cmc    
  430219:	test   BYTE PTR [edx],cl
  43021b:	dec    edi
  43021c:	jle    0x430205
  43021e:	sbb    cl,BYTE PTR [edx]
  430220:	add    BYTE PTR [ebp+0x3249ba4f],cl
  430226:	add    ecx,edx
  430228:	inc    ebx
  430229:	clc    
  43022a:	add    BYTE PTR [eax],al
  43022c:	add    ch,cl
  43022e:	xchg   esp,eax
  43022f:	jmp    0xcf8b:0xa1a10
  430236:	loop   0x4301bc
  430238:	add    BYTE PTR [eax+0xee8bb12],dl
  43023e:	push   esi
  43023f:	outs   dx,DWORD PTR ds:[esi]
  430240:	cmp    BYTE PTR [ebx-0x5aba7da3],0x8a
  430247:	mov    edi,0x7ac9d861
  43024c:	jge    0x4301d3
  43024e:	pusha  
  43024f:	jo     0x430261
  430251:	pop    edx
  430252:	dec    eax
  430253:	cmc    
  430254:	mov    dh,0xd5
  430256:	mov    ds:0x50f099bf,eax
  43025b:	push   ebp
  43025c:	mul    DWORD PTR [ebp-0x31]
  43025f:	cmp    al,0x30
  430261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430262:	mov    ds:0xd259fec9,eax
  430267:	push   es
  430268:	xor    dl,BYTE PTR [eax]
  43026a:	cmp    ch,dh
  43026c:	paddusb mm2,QWORD PTR [ecx]
  43026f:	stc    
  430270:	ret    
  430271:	add    dh,bh
  430273:	xor    BYTE PTR [edx+ebx*8-0xcf0fdaa],al
  43027a:	jne    0x4302b2
  43027c:	xchg   edi,ebp
  43027e:	out    dx,al
  43027f:	popa   
  430280:	mov    esi,0xfa66a26c
  430285:	mov    dh,0xf
  430287:	icebp  
  430288:	stos   DWORD PTR es:[edi],eax
  430289:	in     al,dx
  43028a:	aad    0x3e
  43028c:	shr    edi,0x4f
  43028f:	adc    al,0x87
  430291:	add    BYTE PTR [eax],al
  430293:	add    BYTE PTR [esi+0x1d857],dh
  430299:	adc    al,bl
  43029b:	repnz inc esp
  43029d:	std    
  43029e:	or     bh,BYTE PTR ds:[ebp+0x28]
  4302a2:	dec    ecx
  4302a4:	jbe    0x430297
  4302a6:	lock push es
  4302a8:	sub    al,0x5e
  4302aa:	lock je 0x4302a0
  4302ad:	pop    edi
  4302ae:	jle    0x43026e
  4302b0:	icebp  
  4302b1:	or     dh,cl
  4302b3:	xchg   BYTE PTR [esi-0x3ffb27a9],dh
  4302b9:	xchg   ecx,eax
  4302ba:	shl    edx,0x4
  4302bd:	loop   0x43030f
  4302bf:	je     0x4302ac
  4302c1:	lods   al,BYTE PTR ds:[esi]
  4302c2:	add    ebx,DWORD PTR [esi+0x5a]
  4302c5:	enter  0xe703,0x2a
  4302c9:	fnstcw WORD PTR [edi-0x109e74f9]
  4302cf:	push   es
  4302d0:	lods   al,BYTE PTR ds:[esi]
  4302d1:	pop    edi
  4302d2:	fld    TBYTE PTR [ecx+0x55]
  4302d5:	std    
  4302d6:	cmp    DWORD PTR [esi+0x661878ef],0xfffffff0
  4302dd:	xor    BYTE PTR [eax+0x5a],dl
  4302e0:	mov    esp,0x26cd7f7d
  4302e5:	push   esi
  4302e6:	cmp    DWORD PTR [eax],eax
  4302e8:	adc    al,0x50
  4302ea:	fcos   
  4302ec:	mov    DWORD PTR [edx],esi
  4302ee:	ins    BYTE PTR es:[edi],dx
  4302ef:	inc    esp
  4302f0:	jmp    0x430350
  4302f2:	out    dx,eax
  4302f3:	pop    es
  4302f4:	mov    ah,0x7
  4302f6:	call   0x4303d0
  4302fb:	pand   mm5,mm0
  4302fe:	pop    edx
  4302ff:	repnz dec ebx
  430301:	out    0xe2,eax
  430303:	or     edx,esp
  430305:	call   0xf24bb08d
  43030a:	lods   eax,DWORD PTR ds:[esi]
  43030b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43030c:	dec    ebp
  43030d:	in     al,0x33
  43030f:	repz and BYTE PTR ds:0x263db9ca,0xff
  430317:	dec    esp
  430318:	mov    ebx,0x62c5576d
  43031d:	mov    eax,0xab81a1cd
  430322:	pop    ebx
  430323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430324:	pop    esi
  430325:	ins    BYTE PTR es:[edi],dx
  430326:	(bad)  
  430327:	sub    al,0x54
  430329:	ins    BYTE PTR es:[edi],dx
  43032a:	inc    ebx
  43032b:	mov    al,ds:0xf14a40ff
  430330:	push   es
  430331:	jmp    0x10cdf13
  430336:	repnz test BYTE PTR [ecx+0x53b45c2b],0xf3
  43033e:	jg     0x43032e
  430340:	(bad)  
  430341:	call   0xca1a39a1
  430346:	gs ins DWORD PTR es:[edi],dx
  430348:	jmp    0xa5bc:0xc97a04c0
  43034f:	mov    eax,0x5403e909
  430354:	shl    al,cl
  430356:	add    esp,DWORD PTR [eax]
  430358:	(bad)  
  43035a:	fistp  QWORD PTR fs:[esi]
  43035d:	test   bl,0x0
  430360:	add    BYTE PTR [eax],al
  430362:	mov    esp,0x3f64f860
  430367:	dec    DWORD PTR [ecx+0x28f8030f]
  43036d:	add    al,0xe6
  43036f:	or     al,ch
  430371:	add    esi,ebx
  430373:	fcos   
  430375:	mov    dh,0x1b
  430377:	retf   
  430378:	sti    
  430379:	mov    edx,0xeae78f22
  43037e:	lock push es
  430380:	repz pop eax
  430382:	add    al,0xcb
  430384:	out    0x64,eax
  430386:	test   BYTE PTR [ebx+0x4d35414d],ah
  43038c:	cli    
  43038d:	inc    esi
  43038e:	into   
  43038f:	retf   0x65fb
  430392:	mov    bh,0xd7
  430394:	sbb    ah,BYTE PTR [edx+0x24]
  430397:	inc    DWORD PTR [esi-0x45aa50e1]
  43039d:	and    al,0xce
  43039f:	aam    0xe7
  4303a1:	jmp    0xa18afef2
  4303a6:	inc    esp
  4303a7:	(bad)  
  4303a8:	cli    
  4303a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4303aa:	cwde   
  4303ab:	xchg   BYTE PTR [ecx+eax*1-0x39],bh
  4303af:	push   esp
  4303b0:	cli    
  4303b1:	jmp    0x297077d8
  4303b6:	lods   eax,DWORD PTR cs:[esi]
  4303b8:	enter  0xf2b,0x53
  4303bc:	stos   BYTE PTR es:[edi],al
  4303bd:	call   0x7297596d
  4303c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4303c3:	mov    dh,0x4e
  4303c5:	aas    
  4303c6:	add    BYTE PTR [eax],al
  4303c8:	add    BYTE PTR [esi],ah
  4303ca:	jmp    0x4303f7
  4303cc:	in     eax,0xf0
  4303ce:	push   es
  4303cf:	data16 icebp 
  4303d1:	dec    edi
  4303d2:	sbb    esp,eax
  4303d4:	xchg   edx,eax
  4303d5:	mov    bl,0x52
  4303d7:	sub    eax,0xfbb35992
  4303dc:	scas   al,BYTE PTR es:[edi]
  4303dd:	std    
  4303de:	or     cl,BYTE PTR [edi]
  4303e0:	sub    edi,ebp
  4303e2:	mov    edi,ebp
  4303e4:	loop   0x430429
  4303e6:	std    
  4303e7:	sub    DWORD PTR [eax+esi*8-0x2a9dfffa],0xffffffa2
  4303ef:	ltr    dx
  4303f2:	or     cl,BYTE PTR [ebx+0x56]
  4303f5:	stc    
  4303f6:	sub    al,0xff
  4303f8:	push   edx
  4303f9:	sbb    eax,0x94c71661
  4303fe:	out    dx,al
  4303ff:	(bad)  
  430400:	call   FWORD PTR [edx+0x1d0873eb]
  430406:	ret    
  430407:	add    eax,0xffffff8d
  43040a:	rcr    BYTE PTR [ebx+0x4b065a00],cl
  430410:	push   esi
  430411:	mov    DWORD PTR [eax],esi
  430413:	call   DWORD PTR [edx+0x1d]
  430416:	popa   
  430417:	push   ss
  430418:	call   DWORD PTR [edi-0x28280ab2]
  43041e:	lds    eax,FWORD PTR ds:0x5d584
  430424:	add    ch,bl
  430426:	pusha  
  430427:	push   ss
  430428:	push   DWORD PTR [edi]
  43042a:	mov    dl,0xa
  43042c:	inc    eax
  43042d:	add    BYTE PTR [eax],al
  43042f:	add    BYTE PTR [edx],bl
  430431:	jmp    0x4304a3
  430433:	or     BYTE PTR [ecx+0x4a166028],ah
  430439:	push   es
  43043a:	mov    DWORD PTR [ebp+0x3e],ebx
  43043d:	jmp    0x43040c
  43043f:	pop    ecx
  430440:	xchg   ecx,eax
  430441:	or     eax,0xf4d4b706
  430446:	out    dx,al
  430447:	fld    st(2)
  430449:	or     DWORD PTR [eax+0x8],0xffffff96
  43044d:	hlt    
  43044e:	jp     0x430438
  430450:	fnstcw WORD PTR [ecx]
  430452:	pop    es
  430453:	add    edx,0x4e
  430456:	jae    0x430469
  430458:	inc    eax
  430459:	sub    esp,ebx
  43045b:	or     BYTE PTR [ebx+0x45],dl
  43045e:	sbb    ch,BYTE PTR [edx-0x2e]
  430461:	sbb    BYTE PTR [eax+0x24],0x32
  430465:	pop    ebp
  430466:	xchg   DWORD PTR [esi-0x34],eax
  430469:	hlt    
  43046a:	scas   al,BYTE PTR es:[edi]
  43046b:	inc    esi
  43046c:	repz imul ecx,DWORD PTR ds:0xd6c35ab,0x82e6b2ab
  430477:	(bad)  
  430479:	pop    esp
  43047a:	inc    esp
  43047b:	rcr    BYTE PTR [ebx-0x5b0551a4],0xe4
  430482:	loopne 0x43048f
  430484:	sub    dl,bh
  430486:	lds    edx,FWORD PTR [ebx]
  430488:	push   0xffffff91
  43048a:	out    dx,al
  43048b:	ss js  0x4304c1
  43048e:	add    al,0x89
  430490:	and    al,0xc1
  430492:	fcom   DWORD PTR [edi]
  430494:	add    BYTE PTR [eax],al
  430496:	add    BYTE PTR [edx+edx*4-0xe],ah
  43049a:	cli    
  43049b:	out    0x2f,al
  43049d:	mov    cl,0x51
  43049f:	push   esp
  4304a0:	xchg   edx,eax
  4304a1:	push   es
  4304a2:	sti    
  4304a3:	out    0x3,al
  4304a5:	hlt    
  4304a6:	aas    
  4304a7:	repz (bad) 
  4304a9:	enter  0xf8fb,0x1c
  4304ad:	fadd   DWORD PTR [ebx]
  4304af:	clc    
  4304b0:	hlt    
  4304b1:	fcom   DWORD PTR [ebx]
  4304b3:	lds    eax,FWORD PTR [edi]
  4304b5:	shl    DWORD PTR gs:[esi],0x8
  4304b9:	sbb    eax,0xbdbff5d
  4304be:	sti    
  4304bf:	sahf   
  4304c0:	cmp    ebx,DWORD PTR [ebp+0x14]
  4304c3:	pop    ss
  4304c4:	das    
  4304c5:	mov    esi,0x602279ff
  4304ca:	pop    edx
  4304cb:	popf   
  4304cc:	les    ecx,FWORD PTR [ebp+edi*4-0x25]
  4304d0:	pop    edi
  4304d1:	mov    bh,0x86
  4304d3:	(bad)  
  4304d5:	push   0xb
  4304d7:	repnz pop ebp
  4304d9:	(bad)  
  4304da:	push   ecx
  4304db:	push   0x2eb30d8e
  4304e0:	push   0xffffff89
  4304e2:	leave  
  4304e3:	mov    dl,0x3f
  4304e5:	out    dx,al
  4304e6:	push   es
  4304e7:	mov    dl,0x7
  4304e9:	outs   dx,BYTE PTR ds:[esi]
  4304ea:	shl    ah,1
  4304ec:	jnp    0x4304dd
  4304ee:	mov    WORD PTR [edi],gs
  4304f0:	add    ebx,DWORD PTR [esi-0x34]
  4304f3:	or     BYTE PTR [esi-0x79],al
  4304f6:	or     ebp,esp
  4304f8:	inc    ebp
  4304f9:	outs   dx,DWORD PTR ds:[esi]
  4304fa:	enter  0x0,0x0
  4304fe:	call   0x6a532884
  430503:	mov    dh,BYTE PTR [ecx+eiz*2-0x77]
  430507:	push   eax
  430508:	pop    ebx
  430509:	mov    BYTE PTR [ecx+edx*2+0x61],bh
  43050d:	bound  esi,QWORD PTR [ecx+0x7961608a]
  430513:	push   eax
  430514:	out    0x3,eax
  430516:	repz push es
  430518:	and    cl,BYTE PTR [eax+0x62415164]
  43051e:	lock push es
  430520:	jmp    0x3575028
  430525:	arpl   WORD PTR [ecx-0x4f],cx
  430528:	pop    ds
  430529:	inc    ebp
  43052a:	in     al,dx
  43052b:	push   es
  43052c:	mov    esp,0x484488e
  430531:	pop    ebx
  430532:	mov    ds:0xf30f9383,eax
  430537:	mov    bl,0xb2
  430539:	mov    edx,0xc06de9a0
  43053e:	add    BYTE PTR [esi+0x701942fd],al
  430544:	call   0x6bbeac23
  430549:	or     ebp,DWORD PTR [eax+ecx*1+0x6e]
  43054d:	(bad)  
  43054e:	loopne 0x4304d1
  430550:	sub    al,0xfc
  430552:	in     al,0x7b
  430554:	fldcw  WORD PTR [esi+ebp*2+0x4a]
  430558:	retf   
  430559:	popa   
  43055a:	jo     0x4305a2
  43055c:	cmp    al,0xc5
  43055e:	jne    0x430567
  430560:	outs   dx,BYTE PTR ds:[esi]
  430561:	aam    0x0
  430563:	add    BYTE PTR [eax],al
  430565:	add    BYTE PTR [eax+eax*1],al
  430568:	mov    ecx,0x6407ad78
  43056d:	push   es
  43056e:	aam    0x12
  430570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430572:	sti    
  430573:	xchg   BYTE PTR [edx+0x3e0fb266],ch
  430579:	jl     0x430548
  43057b:	jno    0x873d51e8
  430581:	outs   dx,BYTE PTR ds:[esi]
  430582:	mov    dl,0x13
  430584:	jb     0x43053a
  430586:	pop    es
  430587:	xchg   DWORD PTR [ebx+eiz*8],ebp
  43058a:	xchg   DWORD PTR [ecx-0x1f],ecx
  43058d:	jns    0x430594
  43058f:	ret    
  430590:	scas   eax,DWORD PTR es:[edi]
  430591:	hlt    
  430592:	push   es
  430593:	add    bl,ch
  430595:	lock jge 0x4305f1
  430598:	in     eax,0x7f
  43059a:	add    al,0x7f
  43059c:	sub    BYTE PTR [edi+0x6],bl
  43059f:	dec    eax
  4305a0:	fld    QWORD PTR [eax-0x11418fa]
  4305a6:	inc    esi
  4305a7:	pop    edx
  4305a8:	xchg   edi,eax
  4305a9:	(bad)
  4305ad:	scas   al,BYTE PTR es:[edi]
  4305ae:	(bad)  
  4305af:	(bad)  
  4305b0:	mov    ebx,0xd7e5b6f
  4305b5:	jecxz  0x430576
  4305b7:	cli    
  4305b8:	pushf  
  4305b9:	and    BYTE PTR [edx+0x37fe1544],al
  4305bf:	dec    edi
  4305c0:	jo     0x43061e
  4305c2:	push   ebx
  4305c3:	mov    BYTE PTR [esp+esi*4+0xc86967],bl
  4305ca:	add    BYTE PTR [eax],al
  4305cc:	xchg   ebx,eax
  4305cd:	dec    esp
  4305ce:	sub    DWORD PTR [ecx],0x1c
  4305d1:	cld    
  4305d2:	cli    
  4305d3:	pop    esp
  4305d4:	fwait
  4305d5:	addr16 (bad) 
  4305d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305d8:	xchg   ebp,eax
  4305d9:	dec    esp
  4305da:	test   DWORD PTR [edx-0x2242c051],ebp
  4305e0:	lock push ecx
  4305e2:	je     0x4305e4
  4305e4:	mov    dh,0xe7
  4305e6:	jae    0x4305dc
  4305e8:	xchg   ebp,eax
  4305e9:	xor    eax,0xfb0fff06
  4305ee:	out    0x41,eax
  4305f0:	xchg   ebp,eax
  4305f1:	out    0xf5,eax
  4305f3:	mov    dh,BYTE PTR [edx-0x757a2925]
  4305f9:	xor    eax,0x839b8b0b
  4305fe:	jb     0x430614
  430600:	fidiv  DWORD PTR [ebx*1-0x1d05b57d]
  430607:	pop    es
  430608:	and    DWORD PTR [edx+0x4de8d02],ebx
  43060e:	adc    BYTE PTR [ebx+0x2bc27bab],cl
  430614:	sar    BYTE PTR [edx+0x4c],0x14
  430618:	or     ecx,ecx
  43061a:	or     bh,BYTE PTR [ebx]
  43061c:	adc    BYTE PTR [edi],ch
  43061e:	add    DWORD PTR [esi-0x2f],edx
  430621:	cmp    DWORD PTR [edx],eax
  430623:	add    ebx,DWORD PTR [ebx]
  430625:	jmp    0x430610
  430627:	pop    esi
  430628:	pushf  
  430629:	add    al,0x2b
  43062b:	rcr    BYTE PTR [ecx],0xf3
  43062e:	mov    edi,0xeb
  430633:	sbb    eax,0x863b027b
  430638:	or     BYTE PTR es:[ebp+0x45],dh
  43063c:	jnp    0x430680
  43063e:	add    al,0x9b
  430640:	call   0x3a5e063f
  430645:	aaa    
  430646:	dec    esp
  430647:	cs (bad) 
  430649:	jae    0x430658
  43064b:	mov    eax,ds:0xf2041e3d
  430650:	lahf   
  430651:	cmc    
  430652:	call   DWORD PTR ds:0x3675ba84
  430658:	leave  
  430659:	push   es
  43065a:	add    BYTE PTR [edi-0xcae197f],bh
  430660:	call   0x15831226
  430665:	mov    DWORD PTR [edi-0x40814599],edi
  43066b:	icebp  
  43066c:	out    dx,eax
  43066d:	imul   edx,DWORD PTR [edi],0xffffffb6
  430670:	xchg   edx,eax
  430671:	pop    edx
  430672:	xchg   bl,cl
  430674:	out    0xe0,al
  430676:	sti    
  430677:	jbe    0x43061d
  430679:	xlat   BYTE PTR ds:[ebx]
  43067a:	push   edi
  43067b:	mov    ebp,0x7e010825
  430680:	adc    eax,0x7ce473f4
  430685:	rol    DWORD PTR [edi],1
  430687:	mov    eax,DWORD PTR [ebp-0x276b03b9]
  43068d:	pop    ebx
  43068e:	test   BYTE PTR [ebx+ecx*2-0x174204e5],cl
  430695:	rol    DWORD PTR [edi],0x0
  430698:	add    BYTE PTR [eax],al
  43069a:	jl     0x4306c6
  43069c:	push   es
  43069d:	call   0xfa9db4d3
  4306a2:	ins    BYTE PTR es:[edi],dx
  4306a3:	sub    bl,BYTE PTR [edx-0x7a]
  4306a6:	lods   eax,DWORD PTR ds:[esi]
  4306a7:	sub    ebx,DWORD PTR [ecx+0x71]
  4306aa:	jmp    0x430682
  4306ac:	enter  0xbc07,0xda
  4306b0:	enter  0x5b07,0x47
  4306b4:	inc    esp
  4306b5:	cli    
  4306b6:	inc    esp
  4306b7:	je     0x43063e
  4306b9:	xlat   BYTE PTR ds:[ebx]
  4306ba:	dec    ebx
  4306bb:	cmc    
  4306bc:	inc    edi
  4306bd:	cld    
  4306be:	xor    al,0xe0
  4306c0:	push   esi
  4306c1:	add    BYTE PTR [esi+0x781d6569],ah
  4306c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4306c8:	push   es
  4306c9:	cmp    DWORD PTR [ebp+0x140fd253],esi
  4306cf:	rcr    BYTE PTR [edx-0x19],cl
  4306d2:	and    al,0x1b
  4306d4:	popa   
  4306d5:	cli    
  4306d6:	rcr    BYTE PTR [edi],0xbb
  4306d9:	push   esi
  4306da:	sub    al,BYTE PTR [esi]
  4306dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4306dd:	pop    es
  4306de:	repz dec ebp
  4306e0:	adc    bl,BYTE PTR [edi+0x67]
  4306e3:	inc    eax
  4306e5:	pop    edi
  4306e6:	out    0x4c,eax
  4306e8:	leave  
  4306e9:	mov    ch,BYTE PTR [edx]
  4306eb:	sti    
  4306ec:	ins    DWORD PTR es:[edi],dx
  4306ed:	enter  0x45d8,0xe4
  4306f1:	or     esi,ebx
  4306f3:	jg     0x430717
  4306f5:	adc    BYTE PTR [ecx-0xcfb1f3d],dh
  4306fb:	pop    edi
  4306fc:	les    esi,FWORD PTR [ebp+0x21000000]
  430702:	dec    esp
  430703:	adc    al,0x28
  430705:	pop    es
  430706:	sbb    BYTE PTR [edx-0xadcdfa2],dl
  43070c:	pop    esi
  43070d:	and    BYTE PTR [ebx],ah
  43070f:	(bad)  [ebx-0xb]
  430712:	dec    ebx
  430713:	jns    0x430773
  430715:	jne    0x43076e
  430717:	imul   edx,DWORD PTR [ebp+0x0],0xffffffef
  43071b:	imul   edx,edi,0x1e50fad0
  430721:	js     0x43076f
  430723:	pop    ecx
  430724:	mov    ah,BYTE PTR [edx+eax*4+0x51]
  430728:	xlat   BYTE PTR ds:[ebx]
  430729:	sti    
  43072a:	sub    DWORD PTR ds:0xaa7ff7d7,0x6e086a0f
  430734:	inc    esi
  430735:	test   eax,0xf30f26ac
  43073a:	mov    cl,0x5d
  43073c:	outs   dx,DWORD PTR ds:[esi]
  43073d:	jae    0x43079a
  43073f:	hlt    
  430740:	add    al,0xf3
  430742:	push   es
  430743:	adc    ecx,eax
  430745:	clc    
  430746:	add    eax,0x7fc1b5b6
  43074b:	mov    ecx,DWORD PTR [ebx]
  43074d:	call   0xf3467ad4
  430752:	push   es
  430753:	mov    dh,0x43
  430755:	jne    0x430793
  430757:	inc    DWORD PTR [eax]
  430759:	dec    esi
  43075a:	dec    esi
  43075b:	cli    
  43075c:	out    dx,al
  43075d:	push   0x5c
  43075f:	test   bh,bl
  430761:	sbb    ecx,esi
  430763:	mov    dh,0xe9
  430765:	add    BYTE PTR [eax],al
  430767:	add    al,dh
  430769:	push   es
  43076a:	jo     0x4307d6
  43076c:	add    eax,0x6a4b7407
  430771:	lds    eax,FWORD PTR [ebx]
  430773:	nop
  430774:	out    dx,eax
  430775:	push   es
  430776:	or     al,0xe9
  430778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430779:	mov    bl,0x24
  43077b:	mov    dh,0x26
  43077d:	pop    esp
  43077e:	cli    
  43077f:	pusha  
  430780:	mov    ch,0x7
  430782:	pop    ds
  430783:	stos   BYTE PTR es:[edi],al
  430784:	push   0x35720bc2
  430789:	sbb    esp,DWORD PTR gs:[edx-0x9]
  43078d:	adc    ecx,DWORD PTR [edx]
  43078f:	adc    al,0xa5
  430791:	test   BYTE PTR [edi-0x13],al
  430794:	rol    DWORD PTR [ebx+0x36],cl
  430797:	sub    al,0xe3
  430799:	ror    DWORD PTR [ebx],1
  43079b:	jle    0x43074c
  43079d:	pop    es
  43079e:	add    cl,ch
  4307a0:	out    dx,al
  4307a1:	push   es
  4307a2:	jne    0x43079d
  4307a4:	jae    0x430791
  4307a6:	push   DWORD PTR [ecx-0x42]
  4307a9:	arpl   WORD PTR [edi+0x57],dx
  4307ac:	(bad)  
  4307ad:	push   eax
  4307ae:	test   BYTE PTR [ecx],ch
  4307b0:	inc    esp
  4307b1:	cs out 0x8,al
  4307b4:	jb     0x4307db
  4307b6:	add    BYTE PTR [edx+0x3f],dh
  4307b9:	pop    es
  4307ba:	repz sub bh,ch
  4307bd:	push   es
  4307be:	or     cl,ch
  4307c0:	and    al,0x2
  4307c2:	jg     0x43078d
  4307c4:	lock arpl WORD PTR [ecx],cx
  4307c7:	push   0x19fa5090
  4307cc:	add    BYTE PTR [eax],al
  4307ce:	add    dh,al
  4307d0:	jle    0x430819
  4307d2:	in     eax,0x8b
  4307d4:	dec    esp
  4307d5:	jge    0x4307d7
  4307d7:	and    al,0x7
  4307d9:	add    esi,0xffffff81
  4307dc:	mov    ecx,0xa9fc28e2
  4307e1:	cmc    
  4307e2:	mov    edi,edx
  4307e4:	xor    eax,0x75
  4307e7:	test   DWORD PTR [ebp+0x2e],ebx
  4307ea:	push   0xffffffe2
  4307ec:	stos   DWORD PTR es:[edi],eax
  4307ed:	xor    esp,eax
  4307ef:	jno    0x430838
  4307f1:	cli    
  4307f2:	(bad)  
  4307f3:	out    0x2,eax
  4307f5:	or     eax,DWORD PTR [eax-0x36]
  4307f8:	jg     0x4307cc
  4307fa:	mov    edi,ebp
  4307fc:	test   BYTE PTR [eax+eax*8+0x11082cd],0xca
  430804:	push   es
  430805:	lea    esi,[eax-0x4a]
  430808:	ret    
  430809:	add    BYTE PTR [eax],dh
  43080b:	call   0x477f:0x8d8b0006
  430812:	sbb    BYTE PTR [ebx],dl
  430814:	adc    cl,BYTE PTR ds:[ebx+0x1c477f9d]
  43081b:	add    edi,DWORD PTR [esi]
  43081d:	push   ss
  43081e:	xor    ebx,DWORD PTR [edx+0x7f]
  430821:	(bad)
  430824:	xchg   DWORD PTR ds:0x818f9600,esi
  43082a:	inc    edi
  43082b:	bound  edi,QWORD PTR [edi+0x8]
  43082e:	sbb    DWORD PTR [edx],0x56
  430831:	stc    
  430832:	mov    DWORD PTR [eax],0x30bf0000
  430838:	push   es
  430839:	mov    DWORD PTR [edi+0x18b9e2aa],eax
  43083f:	test   eax,0xfa5f8bf5
  430844:	add    eax,0x1d
  430847:	add    dh,0x0
  43084a:	dec    edx
  43084b:	push   es
  43084c:	or     DWORD PTR [edi],0xffffff9f
  43084f:	ss push cs
  430851:	mov    esi,ebx
  430853:	pop    ecx
  430854:	(bad)  
  430855:	mov    esi,0x4a87686a
  43085a:	out    dx,eax
  43085b:	(bad)  
  43085c:	mov    BYTE PTR [ebx],0x78
  43085f:	cdq    
  430860:	push   es
  430861:	mov    DWORD PTR [ebx-0x10b57899],edi
  430867:	out    0xc6,al
  430869:	or     ebp,DWORD PTR [eax+0x18]
  43086c:	or     al,0x85
  43086e:	mov    edx,0x7650f1b3
  430873:	and    ah,dh
  430875:	push   eax
  430876:	jo     0x430817
  430878:	repz dec edi
  43087a:	aam    0x2a
  43087c:	push   cs
  43087d:	adc    dh,BYTE PTR [ebx]
  43087f:	pusha  
  430880:	add    ebx,0xfbc0e4f7
  430886:	repnz popa 
  430888:	mov    DWORD PTR [ebx+ebp*8-0x2c],ecx
  43088c:	ds out 0x2f,eax
  43088f:	imul   edx,DWORD PTR [esi-0x6],0x78
  430893:	ja     0x430815
  430895:	cli    
  430896:	ror    BYTE PTR es:[edx+0x3e],1
  43089d:	inc    DWORD PTR [edx-0x2]
  4308a0:	call   DWORD PTR [ebx+0x5f]
  4308a3:	int    0x72
  4308a5:	jo     0x430846
  4308a7:	xor    ecx,DWORD PTR [edi+0x6e]
  4308aa:	sbb    al,0x14
  4308ac:	push   eax
  4308ad:	fs pushw ds
  4308b0:	das    
  4308b1:	xor    esi,DWORD PTR [edi-0x4f991f38]
  4308b7:	jg     0x430878
  4308b9:	out    0x3e,eax
  4308bb:	in     al,dx
  4308bc:	dec    edx
  4308be:	sub    esi,DWORD PTR [ecx+0x55344de7]
  4308c4:	cli    
  4308c5:	jo     0x430859
  4308c7:	out    dx,al
  4308c8:	jmp    FWORD PTR [ecx-0x6c]
  4308cb:	jmp    0x2081:0x2a06ae73
  4308d2:	dec    eax
  4308d3:	sbb    DWORD PTR [ebx-0x10],ebx
  4308d6:	push   es
  4308d7:	jmp    0x948c7edf
  4308dc:	or     ch,BYTE PTR [ecx+esi*1+0x6d]
  4308e0:	push   edi
  4308e1:	jg     0x430866
  4308e3:	hlt    
  4308e4:	pop    ecx
  4308e5:	or     DWORD PTR [ecx+0x0],ecx
  4308e8:	mov    bh,0xd6
  4308ea:	dec    ecx
  4308eb:	jmp    0x6639884a
  4308f0:	mov    al,ds:0x5ad949e0
  4308f5:	in     al,0x7b
  4308f7:	imul   ecx,DWORD PTR [edi-0x26],0x48
  4308fb:	leave  
  4308fc:	imul   eax,esp,0x1e
  4308ff:	ret    0x5a
  430902:	add    BYTE PTR [eax],al
  430904:	ja     0x43094e
  430906:	xor    al,0xb
  430908:	ins    BYTE PTR es:[edi],dx
  430909:	xor    BYTE PTR [ebp+0x56],bl
  43090c:	outs   dx,DWORD PTR ds:[esi]
  43090d:	xor    BYTE PTR [ecx+ebx*2+0x2e9048b9],0xd5
  430915:	inc    edi
  430916:	cdq    
  430917:	mov    gs,WORD PTR [edi]
  430919:	repz pop edi
  43091b:	sti    
  43091c:	jne    0x43095e
  43091e:	jge    0x43092b
  430920:	and    al,0x5f
  430922:	bound  eax,QWORD PTR [ebp-0x71]
  430925:	dec    eax
  430926:	mov    ch,0x43
  430928:	sub    DWORD PTR [ecx-0x8c1b2f3],ebp
  43092e:	call   0x514617e4
  430933:	call   0x809c53e6
  430938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430939:	shr    ecx,cl
  43093b:	xchg   ah,bh
  43093d:	push   es
  43093e:	pop    esi
  43093f:	push   ebx
  430940:	dec    ebp
  430941:	add    eax,0x517751f6
  430946:	mov    ah,0x11
  430948:	int    0x12
  43094a:	add    bl,al
  43094c:	call   0x858c3d9c
  430951:	or     DWORD PTR [eax],eax
  430953:	and    eax,DWORD PTR es:[edi+ecx*1]
  430957:	test   eax,0x6c017df0
  43095c:	mov    al,0xd3
  43095e:	adc    esp,DWORD PTR [edx+0x2c]
  430961:	and    al,0x8
  430963:	cs xor ah,dh
  430966:	das    
  430967:	jmp    0xf043096c
  43096c:	push   es
  43096d:	xchg   edi,ebp
  43096f:	outs   dx,DWORD PTR ds:[esi]
  430970:	rcr    BYTE PTR [ebx],0x62
  430973:	mov    dl,0x60
  430975:	or     DWORD PTR [ecx],edi
  430977:	pop    edi
  430978:	mov    esp,0xb64adcbd
  43097d:	out    0x2f,eax
  43097f:	xor    eax,0x2f1afa4b
  430984:	scas   al,BYTE PTR es:[edi]
  430985:	mov    ebp,0x86b1f0ed
  43098a:	int    0x70
  43098c:	pop    ebx
  43098d:	pop    ss
  43098e:	call   0x62951083
  430993:	and    BYTE PTR [ebp+0x562ca186],dh
  430999:	or     ah,BYTE PTR [ebp+0x39]
  43099c:	dec    eax
  43099d:	cli    
  43099e:	jmp    0xcd12ce18
  4309a3:	loopne 0x4309f1
  4309a5:	call   0xf0e9:0xbf83fbe9
  4309ac:	push   es
  4309ad:	xchg   DWORD PTR [ebx+ebp*8],ebp
  4309b0:	(bad)  
  4309b1:	fucomip st,st(0)
  4309b3:	imul   eax,edx,0xb461dc0b
  4309b9:	push   ecx
  4309ba:	push   ecx
  4309bb:	inc    edx
  4309bc:	mov    esp,edi
  4309be:	push   esi
  4309bf:	outs   dx,BYTE PTR ds:[esi]
  4309c0:	push   edi
  4309c1:	test   BYTE PTR [edi-0x16],dl
  4309c4:	and    BYTE PTR [ebx+0x35a00],0x83
  4309cb:	xchg   ebx,edi
  4309cd:	push   DWORD PTR [ebx+0x0]
  4309d0:	add    BYTE PTR [eax],al
  4309d2:	(bad)  
  4309d3:	scas   al,BYTE PTR es:[edi]
  4309d4:	jae    0x4309de
  4309d6:	leave  
  4309d7:	addr16 loop 0x4309d8
  4309da:	aad    0xad
  4309dc:	cli    
  4309dd:	mov    WORD PTR [edi+0x5fff8da],cs
  4309e3:	fisttp DWORD PTR [esi]
  4309e5:	sub    ebp,esp
  4309e7:	lods   eax,DWORD PTR ds:[esi]
  4309e8:	cmp    edi,0xffffff8e
  4309eb:	inc    BYTE PTR [edx-0x74437e29]
  4309f1:	test   edx,esi
  4309f3:	lods   al,BYTE PTR ds:[esi]
  4309f4:	cmc    
  4309f5:	push   edx
  4309f7:	cmp    ah,BYTE PTR [edi+edi*8]
  4309fa:	aad    0xc7
  4309fc:	sub    eax,0xffffffc4
  4309ff:	fcomip st,st(5)
  430a01:	add    al,0xca
  430a03:	or     al,BYTE PTR [eax]
  430a05:	test   DWORD PTR [ebp+0x6d8b0556],esp
  430a0b:	xchg   ebx,eax
  430a0c:	enter  0x4f8d,0xb2
  430a10:	clc    
  430a11:	inc    DWORD PTR [ebp-0x7ad5de4e]
  430a17:	fild   WORD PTR [ecx-0x40dc51ba]
  430a1d:	jne    0x4309eb
  430a1f:	mov    edi,DWORD PTR [edx+0x408ddad0]
  430a25:	xor    dl,bl
  430a27:	lea    edi,[ebx-0x10]
  430a2a:	dec    ecx
  430a2b:	retf   0xdfe2
  430a2e:	gs (bad) 
  430a31:	test   BYTE PTR [edx+0x56],cl
  430a34:	sub    ch,BYTE PTR [edx+0x0]
  430a37:	add    BYTE PTR [eax],al
  430a39:	call   0xbd93:0xaa20408d
  430a40:	push   eax
  430a41:	lds    esi,FWORD PTR [esi+esi*1]
  430a44:	push   ss
  430a45:	rep outs dx,DWORD PTR ds:[esi]
  430a47:	(bad)  
  430a48:	jle    0x430a79
  430a4a:	fs jns 0x430a0c
  430a4d:	(bad)  
  430a4e:	sub    esp,ebp
  430a50:	add    ebx,DWORD PTR [ebx+0x6a]
  430a53:	cmp    eax,0x3eb33cfc
  430a58:	jae    0x430a48
  430a5a:	mov    al,0x1e
  430a5c:	add    BYTE PTR [eax],bl
  430a5e:	xor    dl,BYTE PTR [ebx]
  430a60:	shr    BYTE PTR [esi-0x10],0xca
  430a64:	add    ebp,DWORD PTR [edx+0x60]
  430a67:	imul   ecx,DWORD PTR [ecx],0x70
  430a6a:	xchg   ebx,eax
  430a6b:	add    al,BYTE PTR [eax]
  430a6d:	xchg   BYTE PTR ds:0xeea8e7b0,dh
  430a73:	push   ecx
  430a74:	cli    
  430a75:	shr    bh,0xb7
  430a78:	pop    ecx
  430a79:	sub    dh,dl
  430a7b:	push   es
  430a7c:	add    BYTE PTR [esi-0x47],al
  430a7f:	addr16 jle 0x430a59
  430a82:	aas    
  430a83:	lods   eax,DWORD PTR ds:[esi]
  430a84:	cs mov eax,0xa31d1c05
  430a8a:	push   0xffffffbe
  430a8c:	inc    DWORD PTR [edi+0x7]
  430a8f:	xchg   edx,eax
  430a90:	xlat   BYTE PTR ds:[ebx]
  430a91:	scas   al,BYTE PTR es:[edi]
  430a92:	lock add edx,DWORD PTR [edx-0x44]
  430a96:	bound  esp,QWORD PTR [edx+0xd]
  430a99:	xor    esi,DWORD PTR [eax]
  430a9b:	push   ss
  430a9c:	sbb    eax,0x63000000
  430aa1:	jb     0x430a61
  430aa3:	call   FWORD PTR [edi]
  430aa5:	inc    esi
  430aa6:	cmp    al,0x4
  430aa8:	xchg   ebp,eax
  430aa9:	enter  0xffbe,0x95
  430aad:	ins    BYTE PTR es:[edi],dx
  430aae:	add    BYTE PTR [esi+esi*4-0x10],bh
  430ab2:	add    esp,esp
  430ab4:	pop    edi
  430ab5:	out    dx,eax
  430ab6:	add    ecx,DWORD PTR [ecx+0x3e4103de]
  430abc:	rep ins DWORD PTR es:[edi],dx
  430abe:	add    BYTE PTR [eax+0x3a60636],dh
  430ac4:	repnz fcomp QWORD PTR [ecx-0xf]
  430ac8:	dec    esp
  430ac9:	sbb    BYTE PTR [ecx+0x58e36a03],ch
  430acf:	lea    ebp,[edi+0x3cb96f3a]
  430ad5:	mov    ds,WORD PTR [ebx-0x548316aa]
  430adb:	push   esi
  430adc:	ins    DWORD PTR es:[edi],dx
  430add:	adc    ebp,DWORD PTR [ebp-0x49f912c0]
  430ae3:	push   esi
  430ae4:	loopne 0x430a6d
  430ae6:	imul   eax,ecx,0xc
  430ae9:	(bad)  
  430aea:	add    bl,bl
  430aec:	mov    ds:0x4c800944,al
  430af1:	mov    ebx,0x45af55ed
  430af6:	push   0x7707f9d9
  430afb:	aaa    
  430afc:	or     eax,0x7e053608
  430b01:	retf   0x6bd8
  430b04:	add    BYTE PTR [eax],al
  430b06:	add    BYTE PTR ds:0x3a56dab8,al
  430b0c:	xchg   ecx,eax
  430b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430b0e:	mov    edx,0x8b3348ab
  430b13:	fmul   DWORD PTR [eax-0x7ca102c]
  430b19:	popf   
  430b1a:	lods   eax,DWORD PTR ds:[esi]
  430b1b:	add    al,0x22
  430b1d:	jns    0x430b5f
  430b1f:	cmc    
  430b20:	push   es
  430b21:	xor    al,0x1d
  430b23:	imul   ebx,DWORD PTR [edi-0x55],0x99daa4c2
  430b2a:	lock mov BYTE PTR [ecx],bl
  430b2d:	sub    DWORD PTR [ebx+ebx*8],eax
  430b30:	and    DWORD PTR [ecx+0x40],ebx
  430b33:	int    0x6
  430b35:	cld    
  430b36:	cmc    
  430b37:	mov    dl,0xa
  430b39:	sub    DWORD PTR [edx+0x760006bd],0xffffffb5
  430b40:	or     bh,BYTE PTR [esp+eiz*4+0x31]
  430b44:	inc    esp
  430b45:	fidivr WORD PTR [ebp+0x30]
  430b48:	inc    esp
  430b49:	xchg   esp,edi
  430b4b:	ins    BYTE PTR es:[edi],dx
  430b4c:	dec    ebx
  430b4d:	ds jmp 0x24f31669
  430b53:	xor    DWORD PTR [edi+edi*8-0x62],eax
  430b57:	popf   
  430b58:	sbb    dh,al
  430b5a:	(bad)  [eax]
  430b5c:	inc    esp
  430b5d:	push   0xebe367d9
  430b62:	pusha  
  430b63:	imul   esi,DWORD PTR [eax+ecx*4],0xffffffc4
  430b67:	mov    ah,0x8b
  430b69:	pop    esp
  430b6a:	push   ds
  430b6b:	add    BYTE PTR [eax],al
  430b6d:	add    BYTE PTR [esi+0x11],ah
  430b70:	mov    dl,0xac
  430b72:	mov    ebp,0xb38d0c8c
  430b77:	add    al,0x0
  430b79:	call   0x3033:0x6c80f79d
  430b80:	dec    edi
  430b81:	add    DWORD PTR [ecx+0x6deef9ba],ecx
  430b87:	test   BYTE PTR [ebx+0x7],dh
  430b8a:	mov    ds:0xa7e14492,al
  430b8f:	inc    eax
  430b90:	je     0x430b73
  430b92:	imul   edi,DWORD PTR [edx+0x6f841f7],0xbb1e2900
  430b9c:	repz mov esi,0x291467cc
  430ba2:	out    dx,eax
  430ba3:	ret    
  430ba4:	imul   eax
  430ba6:	mov    esp,0x3e2cfa1e
  430bab:	les    edi,FWORD PTR [esi+ebx*4-0xf]
  430baf:	mov    ah,0xb9
  430bb1:	aas    
  430bb2:	bound  eax,QWORD PTR [eax+0x74]
  430bb5:	loope  0x430bde
  430bb7:	sbb    esi,DWORD PTR [eax+eax*1]
  430bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430bbb:	inc    edi
  430bbc:	cli    
  430bbd:	adc    BYTE PTR [esi+0xe],0xe3
  430bc1:	add    bh,BYTE PTR [ecx-0x11ba72f9]
  430bc7:	mov    dl,0x5d
  430bc9:	jb     0x430b97
  430bcb:	fstp   DWORD PTR [eax-0x76]
  430bce:	or     DWORD PTR [esi-0x39],edi
  430bd1:	ret    0x0
  430bd4:	add    BYTE PTR [esi+0x7],al
  430bd7:	push   ebp
  430bd8:	mov    ecx,DWORD PTR [esi]
  430bda:	mov    dh,ah
  430bdc:	or     BYTE PTR [eax+0x7],bl
  430bdf:	add    BYTE PTR [ebp-0x41d29],cl
  430be5:	std    
  430be6:	jp     0x430c4a
  430be8:	sbb    BYTE PTR [edx],0x7
  430beb:	add    al,0x6a
  430bed:	sbb    bl,dl
  430bef:	jae    0x430bf9
  430bf1:	add    BYTE PTR [ebx-0x1e],0xc7
  430bf5:	push   0xda85f5da
  430bfa:	push   esi
  430bfb:	or     DWORD PTR [edx+0x1a],ebp
  430bfe:	mov    WORD PTR [ebx-0xa260008],es
  430c04:	push   eax
  430c05:	std    
  430c06:	xor    edx,esi
  430c08:	adc    DWORD PTR [edx+0x47c08506],ebx
  430c0e:	pop    es
  430c0f:	sub    al,al
  430c11:	shl    esi,0xf6
  430c14:	jne    0x430be4
  430c16:	mov    DWORD PTR [ebx-0xa244008],eax
  430c1c:	push   0x65a
  430c21:	and    cl,BYTE PTR [edi]
  430c23:	xchg   ebp,eax
  430c24:	inc    eax
  430c25:	retf   0x6476
  430c28:	add    BYTE PTR [edx+0x4dff5cb5],dh
  430c2e:	sar    DWORD PTR [edx-0x3839d8f1],0xc2
  430c35:	repz daa 
  430c37:	(bad)  
  430c38:	push   esp
  430c39:	add    BYTE PTR [eax],al
  430c3b:	add    BYTE PTR [eax-0x3c],bh
  430c3e:	add    DWORD PTR [edi+esi*8+0x1f],0xc0ef7455
  430c46:	test   eax,0xca706e07
  430c4b:	pop    ebx
  430c4c:	les    esi,FWORD PTR [eax+0x6b5b0bc9]
  430c52:	dec    esi
  430c53:	stc    
  430c54:	pop    esp
  430c55:	mov    ch,0x56
  430c57:	test   BYTE PTR [esp+eiz*2-0x41],dl
  430c5b:	cli    
  430c5c:	(bad)  
  430c5d:	aas    
  430c5e:	push   ebx
  430c5f:	xor    al,BYTE PTR [ebx+eiz*2-0x2e]
  430c63:	btr    DWORD PTR [edi],ebp
  430c66:	jns    0x430c27
  430c68:	mov    edi,0xa6faaa09
  430c6d:	pop    ebx
  430c6e:	xchg   DWORD PTR [edi+esi*8-0x46],esi
  430c72:	mov    ecx,0xcbd78b07
  430c77:	aas    
  430c78:	repz jg 0x430ce1
  430c7b:	(bad)  
  430c7c:	lock adc DWORD PTR [esi+edi*2+0x2f],edx
  430c81:	cmp    al,0x79
  430c83:	mov    edi,0x74535e7d
  430c88:	jmp    0x430c2b
  430c8a:	out    0xb3,ax
  430c8d:	xor    DWORD PTR [esi-0x6],ecx
  430c90:	pop    esi
  430c91:	cmp    BYTE PTR [esi+0x4b],dl
  430c94:	pushf  
  430c95:	bound  ecx,QWORD PTR [esi+0x59]
  430c98:	cmp    al,0x48
  430c9a:	enter  0xceba,0x50
  430c9e:	dec    esi
  430c9f:	je     0x430ca1
  430ca1:	add    BYTE PTR [eax],al
  430ca3:	test   DWORD PTR [eax-0x8],0x3efe19f
  430caa:	pop    ebx
  430cab:	push   ss
  430cac:	outs   dx,BYTE PTR ds:[esi]
  430cad:	repz inc DWORD PTR [edi-0x5b]
  430cb1:	pop    edi
  430cb2:	jle    0x430c4b
  430cb4:	push   es
  430cb5:	adc    eax,0x74bb6fba
  430cba:	mov    WORD PTR [ebx+0x6],ds
  430cbd:	jmp    0xf326a7c5
  430cc2:	push   edx
  430cc3:	mov    DWORD PTR [ebp+0x1b79b4aa],ecx
  430cc9:	and    esi,esi
  430ccb:	mov    ah,0x6
  430ccd:	pusha  
  430cce:	leave  
  430ccf:	push   0x6f03a88b
  430cd4:	pop    ebp
  430cd5:	call   0xb218ffdd
  430cda:	adc    bh,0x76
  430cdd:	nop
  430cde:	mov    cs,WORD PTR [ecx+eax*2-0x18]
  430ce2:	pop    ebx
  430ce3:	lock sbb BYTE PTR [edx+0x53],al
  430ce7:	jne    0x430ce4
  430ce9:	jl     0x430ce1
  430ceb:	hlt    
  430cec:	push   es
  430ced:	pop    esi
  430cee:	dec    ebx
  430cef:	mov    esp,0x294fb341
  430cf4:	pop    eax
  430cf5:	ins    DWORD PTR es:[edi],dx
  430cf6:	sub    al,0x6f
  430cf8:	ret    
  430cf9:	cmp    al,0x8c
  430cfb:	pop    ebp
  430cfc:	push   es
  430cfd:	jmp    0xf36c2805
  430d02:	push   edx
  430d03:	or     DWORD PTR [ebp+0xb429],ecx
  430d09:	add    cl,bh
  430d0b:	mov    edx,0x8f2252fc
  430d10:	stos   DWORD PTR es:[edi],eax
  430d11:	push   ebx
  430d12:	jg     0x430cd6
  430d14:	and    BYTE PTR [eax+ebp*4-0x34fc16f9],cl
  430d1b:	push   eax
  430d1c:	repz push edx
  430d1e:	(bad)  [ecx+ebp*4-0x3345364d]
  430d25:	push   edx
  430d26:	mov    ds:0xc47ebaf4,al
  430d2b:	cld    
  430d2c:	call   0x473b:0xfffe38d7
  430d33:	mov    ah,0x72
  430d35:	repnz inc edx
  430d37:	mov    ah,0x6e
  430d39:	adc    DWORD PTR [ebx],edx
  430d3b:	xchg   esp,eax
  430d3c:	aas    
  430d3d:	jmp    0x97ff697a
  430d42:	and    DWORD PTR ds:0x7f9114,edi
  430d48:	add    BYTE PTR [eax-0x55],dh
  430d4b:	sub    al,0x7e
  430d4d:	and    DWORD PTR [ecx],0x4b760cb4
  430d53:	or     al,0xfb
  430d55:	hlt    
  430d56:	push   0xcb5152d0
  430d5b:	cmp    eax,0xcb735efa
  430d60:	idiv   DWORD PTR [ecx-0x460c348d]
  430d66:	es pop es
  430d68:	push   edx
  430d69:	lahf   
  430d6a:	mov    eax,ds:0x298450
  430d6f:	add    BYTE PTR [eax],al
  430d71:	sbb    al,0xfc
  430d73:	cs adc bh,bh
  430d76:	mov    ecx,0x87d1b7f7
  430d7b:	inc    esp
  430d7c:	sbb    eax,0x72020c73
  430d81:	das    
  430d82:	or     BYTE PTR [ebp+0x7f0b2429],al
  430d88:	adc    esp,ebp
  430d8a:	mov    ecx,0xf7f77213
  430d8f:	inc    esp
  430d90:	or     eax,0x7cfb131c
  430d95:	in     al,dx
  430d96:	cmp    al,0x74
  430d98:	loope  0x430d3a
  430d9a:	aam    0xe7
  430d9c:	pop    DWORD PTR [ecx+0x3d]
  430d9f:	cli    
  430da0:	sub    ch,BYTE PTR [esi+0x45]
  430da3:	or     edx,DWORD PTR [edx]
  430da5:	pushf  
  430da6:	aaa    
  430da7:	ins    DWORD PTR es:[edi],dx
  430da8:	mov    eax,0xf3bb22
  430dad:	mov    ch,0x77
  430daf:	jmp    0x615:0xf5d6ffff
  430db6:	cmp    DWORD PTR [edx],edi
  430db8:	add    ch,dh
  430dba:	jno    0x430e14
  430dbc:	leave  
  430dbd:	dec    eax
  430dbe:	inc    edx
  430dbf:	cli    
  430dc0:	push   ebp
  430dc1:	cmc    
  430dc2:	inc    edx
  430dc3:	mov    dh,0xe7
  430dc5:	xchg   esi,eax
  430dc6:	sub    cl,cl
  430dc8:	push   edi
  430dc9:	push   0xffffffae
  430dcb:	xor    eax,0xac9a2850
  430dd0:	pop    edi
  430dd1:	pop    edx
  430dd2:	fidiv  WORD PTR [eax+0x4f]
  430dd8:	mov    dl,dh
  430dda:	int    0x2c
  430ddc:	add    DWORD PTR [edx],esi
  430dde:	mov    edx,0x32bafe87
  430de3:	xor    esi,edi
  430de5:	aas    
  430de6:	sub    al,BYTE PTR [edx]
  430de8:	scas   al,BYTE PTR es:[edi]
  430de9:	scas   al,BYTE PTR es:[edi]
  430dea:	lods   al,BYTE PTR ds:[esi]
  430deb:	ja     0x430df7
  430ded:	outs   dx,DWORD PTR ds:[esi]
  430dee:	jge    0x430da4
  430df0:	(bad)  
  430df1:	scas   al,BYTE PTR es:[edi]
  430df2:	xor    eax,0x2acabac5
  430df7:	add    eax,DWORD PTR [esi+0x2]
  430dfa:	and    eax,0xb15c11fc
  430dff:	daa    
  430e00:	(bad)  
  430e01:	lods   al,BYTE PTR ds:[esi]
  430e02:	xor    eax,0xb575ae03
  430e07:	scas   eax,DWORD PTR es:[edi]
  430e08:	lods   eax,DWORD PTR ds:[esi]
  430e09:	scas   al,BYTE PTR es:[edi]
  430e0a:	data16 jmp 0x430e51
  430e0d:	sub    al,0xba
  430e0f:	cld    
  430e10:	jp     0x430df9
  430e12:	das    
  430e13:	xchg   DWORD PTR [ebx],esp
  430e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430e16:	xor    eax,0x116a6303
  430e1b:	das    
  430e1c:	cs sub bh,dh
  430e1f:	push   ebx
  430e20:	idiv   al
  430e22:	retf   0xe1fc
  430e25:	sub    dh,ch
  430e27:	or     al,0xf3
  430e29:	fistp  WORD PTR [edi]
  430e2b:	cmp    esi,eax
  430e2d:	push   ebx
  430e2e:	out    0x56,eax
  430e30:	adc    al,0x58
  430e32:	bound  ecx,QWORD PTR [ebx]
  430e34:	mov    al,0xc7
  430e36:	imul   edx,DWORD PTR [esi],0xffffffd0
  430e39:	mov    WORD PTR [edi+0xbf],?
  430e3f:	std    
  430e40:	repz push ebp
  430e42:	jp     0x430e34
  430e44:	cmp    BYTE PTR [esi+0x16],ch
  430e47:	add    bh,ah
  430e49:	stos   DWORD PTR es:[edi],eax
  430e4a:	jbe    0x430e7a
  430e4c:	sahf   
  430e4d:	bound  edi,QWORD PTR [edx]
  430e4f:	jne    0x430e01
  430e51:	ds dec esi
  430e53:	imul   edi,DWORD PTR [eax+0x3388223e],0xd46fbf67
  430e5d:	loop   0x430e99
  430e5f:	lock mov bl,0xd5
  430e62:	jbe    0x430e78
  430e64:	cld    
  430e65:	xchg   edx,eax
  430e66:	imul   edi,DWORD PTR [bp+si],0xfffffffa
  430e6a:	inc    ebp
  430e6b:	imul   BYTE PTR [eax]
  430e6d:	jmp    0x430e1c
  430e6f:	lods   al,BYTE PTR ds:[esi]
  430e70:	push   DWORD PTR [esi]
  430e72:	push   0x6b
  430e74:	inc    edx
  430e75:	cli    
  430e76:	add    edi,ebp
  430e78:	cmp    bl,ch
  430e7a:	mov    bl,0x36
  430e7c:	mov    edx,?
  430e7e:	out    0xd0,eax
  430e80:	sub    bl,ch
  430e82:	mov    bl,0x36
  430e84:	int3   
  430e85:	cli    
  430e86:	sub    al,0xee
  430e88:	cmp    bl,ch
  430e8a:	push   esp
  430e8b:	lock xchg esi,eax
  430e8d:	ficom  WORD PTR [esi]
  430e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430e90:	adc    eax,0x84a03a63
  430e95:	and    al,0x6b
  430e97:	or     bl,bl
  430e99:	jecxz  0x430e5a
  430e9b:	out    dx,eax
  430e9c:	imul   edi,esp,0xdd33f039
  430ea2:	cli    
  430ea3:	add    BYTE PTR [eax],al
  430ea5:	add    BYTE PTR [edi+eax*1-0x5c],ah
  430ea9:	fstp   QWORD PTR [ebp-0x1a]
  430eac:	mov    eax,0xb5325898
  430eb1:	inc    eax
  430eb2:	mov    bl,0x3a
  430eb4:	pop    eax
  430eb5:	sub    BYTE PTR [ebx+ecx*1],dh
  430eb8:	inc    eax
  430eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430eba:	fucom  st(5)
  430ebc:	test   bl,ch
  430ebe:	xor    eax,0xc197c4e6
  430ec3:	(bad)  
  430ec4:	push   edx
  430ec5:	jmp    0x430f23
  430ec7:	rcr    DWORD PTR [edi],cl
  430ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430eca:	std    
  430ecb:	lods   eax,DWORD PTR ds:[esi]
  430ecc:	inc    esp
  430ecd:	and    BYTE PTR [ecx+0x79],0x59
  430ed1:	push   0x52a51444
  430ed6:	stc    
  430ed7:	or     edx,edi
  430ed9:	and    eax,esp
  430edb:	mov    eax,?
  430edd:	inc    ebx
  430ede:	rol    DWORD PTR [edi],1
  430ee0:	jge    0x430f4a
  430ee2:	fnstcw WORD PTR [edx]
  430ee4:	push   0x473afd44
  430ee9:	pusha  
  430eea:	or     cl,dl
  430eec:	push   esp
  430eed:	and    al,ah
  430eef:	in     eax,0x4d
  430ef1:	imul   edx,DWORD PTR [esi+0x3b8038c5],0xc3a83d09
  430efb:	mov    ah,0xeb
  430efd:	frstor [ebp-0x6c74d21b]
  430f03:	fisubr WORD PTR [ecx-0x44b642fc]
  430f09:	jp     0x430f0b
  430f0b:	add    BYTE PTR [eax],al
  430f0d:	or     BYTE PTR [edi+0x6f7280c],al
  430f13:	jmp    0xfac0b0cd
  430f18:	add    al,0xf3
  430f1a:	push   es
  430f1b:	call   0x9c9b:0x910e7f4e
  430f22:	enter  0xe8ff,0x35
  430f26:	adc    esi,DWORD PTR [eax]
  430f28:	xlat   BYTE PTR ds:[ebx]
  430f29:	mov    al,0x3c
  430f2b:	jge    0x430eda
  430f2d:	aam    0x8b
  430f2f:	mov    ah,0xc5
  430f31:	and    eax,DWORD PTR [ecx-0x6]
  430f34:	rol    DWORD PTR [ebp+0x3a],0xf9
  430f38:	into   
  430f39:	call   0xfa3e:0xcc6c8d0c
  430f40:	mov    esi,0x2aaf947f
  430f45:	out    dx,eax
  430f46:	cs ja  0x430fb5
  430f49:	inc    ebx
  430f4a:	inc    ecx
  430f4b:	test   BYTE PTR [ecx-0x5878f444],ch
  430f51:	ss cmp al,0xfa
  430f54:	sub    DWORD PTR [ebx+esi*4-0x8],eax
  430f58:	(bad)  [eax]
  430f5a:	and    eax,0x8b7b136a
  430f5f:	test   bh,dh
  430f61:	mov    ebp,0x4919fa40
  430f66:	cmp    al,0x8b
  430f68:	hlt    
  430f69:	and    al,0xbd
  430f6b:	(bad)  
  430f6c:	mov    ax,0xf14c
  430f70:	pop    esp
  430f71:	add    BYTE PTR [eax],al
  430f73:	add    BYTE PTR [ebp+0x43d7bf82],bh
  430f79:	test   ecx,eax
  430f7b:	mov    ecx,0xaaabbc18
  430f80:	lock mov DWORD PTR [ebp+ebx*1-0x6605bf47],eax
  430f88:	enter  0xb325,0x2e
  430f8c:	lods   eax,DWORD PTR ds:[esi]
  430f8d:	cmp    BYTE PTR [edi-0x7c84640a],0x29
  430f94:	sub    ecx,DWORD PTR [edi]
  430f96:	das    
  430f97:	sub    DWORD PTR [esi],ecx
  430f99:	pop    DWORD PTR [ebp+ebp*1+0xfa40a9]
  430fa0:	in     eax,dx
  430fa1:	push   ds
  430fa2:	jl     0x430f50
  430fa4:	cdq    
  430fa5:	pop    es
  430fa6:	lea    eax,[ebp-0xa2f02]
  430fac:	jp     0x430f7a
  430fae:	adc    esi,DWORD PTR [eax-0x7b05b828]
  430fb4:	call   0xf5c9:0x9fe483bb
  430fbb:	je     0x430f90
  430fbd:	sar    edx,0xff
  430fc0:	or     bh,BYTE PTR [edx+0x73]
  430fc3:	stc    
  430fc4:	shl    DWORD PTR [eax+eax*8+0x45479a00],0x75
  430fcc:	arpl   WORD PTR [edx+0x2c5eff],dx
  430fd2:	mov    ebp,0x81749a04
  430fd7:	in     al,dx
  430fd8:	add    BYTE PTR [eax],al
  430fda:	add    BYTE PTR [ebx],bl
  430fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430fdd:	outs   dx,BYTE PTR ds:[esi]
  430fde:	push   es
  430fdf:	mov    al,BYTE PTR [edi]
  430fe1:	dec    ebx
  430fe2:	push   esi
  430fe3:	cmp    esi,ebp
  430fe5:	dec    ebp
  430fe6:	lea    esp,[edi-0x5]
  430fe9:	mov    dl,0xbd
  430feb:	pop    edx
  430fec:	pop    es
  430fed:	add    BYTE PTR [eax+0x49e2c9ef],cl
  430ff3:	pop    ecx
  430ff4:	retf   0x8bf5
  430ff7:	adc    al,0x73
  430ff9:	cmc    
  430ffa:	adc    eax,0x3a3582
  430fff:	rol    DWORD PTR [ebx-0x12],cl
  431002:	cmp    ecx,DWORD PTR [ecx]
  431004:	cmp    bh,BYTE PTR [esi-0x5e]
  431007:	sbb    al,BYTE PTR [edi]
  431009:	add    BYTE PTR [ebp-0x414d64a1],cl
  43100f:	or     al,BYTE PTR [edi]
  431011:	add    al,ch
  431013:	clc    
  431014:	cmp    ch,dh
  431016:	inc    DWORD PTR [ecx-0xc00b53f]
  43101c:	call   0x3fed:0xc9e6fa52
  431023:	repz dec eax
  431025:	aas    
  431026:	jae    0x43108c
  431028:	stos   DWORD PTR es:[edi],eax
  431029:	mov    edx,0x7aa342f7
  43102e:	lahf   
  43102f:	fisubr WORD PTR [ecx]
  431031:	dec    ebx
  431032:	push   eax
  431033:	lods   al,BYTE PTR ds:[esi]
  431034:	jmp    0x431081
  431036:	add    esi,edx
  431038:	das    
  431039:	(bad)  
  43103a:	cli    
  43103b:	mov    ds:0x46ad,eax
  431040:	add    BYTE PTR [eax],al
  431042:	inc    esi
  431043:	jmp    0xfa4b:0x455b847a
  43104a:	inc    ebx
  43104b:	(bad)  
  43104c:	(bad)  
  43104d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  43104f:	mov    BYTE PTR [edi+ecx*2],0x9c
  431053:	push   ebx
  431054:	scas   al,BYTE PTR es:[edi]
  431055:	push   cs
  431056:	xor    esi,DWORD PTR [eax]
  431058:	cmp    DWORD PTR [edi-0x7b851dfa],0xfa4b9353
  431062:	and    ecx,DWORD PTR [ecx-0x101e800f]
  431068:	add    edx,DWORD PTR [eax+0x7a]
  43106b:	jecxz  0x4310b8
  43106d:	mov    WORD PTR [esi-0x28],gs
  431070:	inc    edi
  431071:	cli    
  431072:	pop    esp
  431073:	and    BYTE PTR [ebx-0x7c],bh
  431076:	xchg   ebx,eax
  431077:	mov    ds:0xd8a3fa4b,eax
  43107c:	icebp  
  43107d:	push   edi
  43107e:	loopne 0x4310ef
  431080:	inc    BYTE PTR [ebx+esi*1-0x517916ad]
  431087:	(bad)  
  431088:	jns    0x43100d
  43108a:	mov    dh,0xa7
  43108c:	inc    edi
  43108d:	cli    
  43108e:	and    al,0xa0
  431090:	jg     0x431059
  431092:	sbb    al,0xdb
  431094:	xchg   ecx,eax
  431095:	xchg   edi,eax
  431096:	sbb    BYTE PTR [edi],al
  431098:	and    cl,BYTE PTR [esp+edx*1-0x29]
  43109c:	adc    DWORD PTR [esi+0x9],ecx
  43109f:	inc    ecx
  4310a0:	stos   DWORD PTR es:[edi],eax
  4310a1:	dec    esp
  4310a2:	repz cmp DWORD PTR [ebx+0x57],edx
  4310a9:	stc    
  4310aa:	adc    esp,DWORD PTR [ebp-0x3ef8d30f]
  4310b0:	scas   al,BYTE PTR es:[edi]
  4310b1:	jmp    0xb354fa69
  4310b6:	das    
  4310b7:	jbe    0x4310bb
  4310b9:	repz push es
  4310bb:	jno    0x431066
  4310bd:	leave  
  4310be:	(bad)  
  4310bf:	cmp    ebx,DWORD PTR [ecx+ecx*4+0xa]
  4310c3:	jl     0x431089
  4310c5:	mov    esp,0x245c238a
  4310ca:	mov    WORD PTR [ebx],gs
  4310cc:	pusha  
  4310cd:	cmp    al,0x8c
  4310cf:	and    edx,DWORD PTR [esp+esi*1-0x53]
  4310d3:	mov    cl,0x79
  4310d5:	aaa    
  4310d6:	aas    
  4310d7:	sbb    dh,bl
  4310d9:	xchg   esi,eax
  4310da:	aam    0x35
  4310dc:	jge    0x43110d
  4310de:	aas    
  4310df:	cdq    
  4310e0:	icebp  
  4310e1:	rcl    BYTE PTR ds:0xc36a0429,1
  4310e7:	jl     0x4310f8
  4310e9:	xor    al,0xb2
  4310eb:	in     eax,dx
  4310ec:	or     BYTE PTR [ebp+0x6],dl
  4310ef:	jmp    0x8cc708f7
  4310f4:	add    al,0xf3
  4310f6:	push   es
  4310f7:	mov    al,0xa8
  4310f9:	pop    esp
  4310fa:	or     DWORD PTR [ebp+0x3a],ebp
  4310fd:	dec    esp
  4310fe:	cmp    eax,ebp
  431100:	push   ss
  431101:	inc    ecx
  431102:	push   DWORD PTR [ebx-0x717f16ad]
  431108:	add    al,0xf3
  43110a:	push   es
  43110b:	je     0x4310ce
  43110d:	add    BYTE PTR [eax],al
  43110f:	add    BYTE PTR [eax],ah
  431111:	(bad)  
  431112:	ins    DWORD PTR es:[edi],dx
  431113:	rcr    DWORD PTR [esp+ebp*4],0xff
  431117:	(bad)  [ecx-0x5665500b]
  43111d:	adc    ch,BYTE PTR [edx+edi*8]
  431120:	xor    BYTE PTR [ecx],bh
  431122:	sub    DWORD PTR [ecx],0x8
  431125:	adc    BYTE PTR [ecx+ebp*8-0x5b78f910],0xa4
  43112d:	lock mov esi,0xff826cf6
  431133:	call   0x49cf9b28
  431138:	sub    bh,BYTE PTR ds:0xa82998fa
  43113e:	psrlw  mm7,QWORD PTR [edx+0x4b]
  431142:	cld    
  431143:	fiadd  WORD PTR [eax+edi*2+0x73]
  431147:	inc    edi
  431148:	cmp    al,BYTE PTR [ebx+0x3d29d297]
  43114e:	dec    edi
  43114f:	je     0x4311c4
  431151:	cwde   
  431152:	cld    
  431153:	mov    esi,0xc14fc839
  431158:	shl    DWORD PTR [edi-0x6],1
  43115b:	scas   al,BYTE PTR es:[edi]
  43115c:	jae    0x4311d6
  43115e:	jae    0x43119f
  431160:	or     al,BYTE PTR [ebx+0x3d399c9f]
  431166:	dec    edi
  431167:	cmp    esp,0xf48efa71
  43116d:	ja     0x4311e2
  43116f:	das    
  431170:	jmp    0x0:0x808f82
  431177:	mov    ecx,0x77014f3c
  43117c:	cmp    dl,bh
  43117e:	in     eax,0xa1
  431180:	mov    eax,DWORD PTR [ecx+ecx*4-0x4605c345]
  431187:	jge    0x4311a9
  431189:	bound  esi,QWORD PTR [ecx+ebp*4+0x2429843c]
  431190:	loopne 0x4311e0
  431192:	add    BYTE PTR [edi-0x1a06757a],ah
  431198:	int3   
  431199:	dec    edx
  43119a:	push   ebx
  43119b:	mov    dl,0xb7
  43119d:	jle    0x43119e
  43119f:	lds    esi,FWORD PTR [edi-0x40f38b46]
  4311a5:	adc    DWORD PTR [eax+0x50f5ccd3],0xffffff91
  4311ac:	inc    esi
  4311ad:	out    dx,al
  4311ae:	call   FWORD PTR [edx+0x34]
  4311b1:	rol    BYTE PTR [ebp-0xb],0x2
  4311b5:	call   0xf61002de
  4311ba:	call   FWORD PTR [edi-0x38]
  4311bd:	cmc    
  4311be:	adc    eax,0x3a30b2
  4311c3:	sbb    al,0xa
  4311c5:	jne    0x4311b7
  4311c7:	aad    0x81
  4311c9:	inc    eax
  4311ca:	jmp    DWORD PTR [ebp-0x5d8a0a33]
  4311d0:	int    0x13
  4311d2:	sub    cl,cl
  4311d4:	inc    ebx
  4311d5:	cli    
  4311d6:	and    bh,0xde
  4311d9:	in     al,0x0
  4311db:	add    BYTE PTR [eax],al
  4311dd:	add    BYTE PTR [edx-0x4e7bf8fd],cl
  4311e3:	int3   
  4311e4:	cmc    
  4311e5:	inc    DWORD PTR [edi]
  4311e7:	mov    eax,0xcd65fb92
  4311ec:	dec    edx
  4311ed:	push   0xffffff8b
  4311ef:	pop    ecx
  4311f0:	cmc    
  4311f1:	push   0xfffa838d
  4311f6:	or     esi,ecx
  4311f8:	adc    edx,DWORD PTR [eax+0x49]
  4311fb:	inc    ebx
  4311fc:	cli    
  4311fd:	test   BYTE PTR [edx-0x3072d1b9],cl
  431203:	mov    dl,0xf7
  431205:	call   ebp
  431207:	jb     0x43126b
  431209:	sbb    BYTE PTR [edx+0x3],0x4
  43120d:	push   edi
  43120e:	repz mov ds:0xc838977a,al
  431214:	dec    eax
  431215:	dec    edi
  431216:	rcl    ch,0x22
  431219:	pop    ebx
  43121a:	and    al,0xf8
  43121c:	jp     0x4311dd
  43121e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43121f:	push   edi
  431220:	mov    bl,0x8c
  431222:	outs   dx,BYTE PTR ds:[esi]
  431223:	fld    QWORD PTR [esi-0x6]
  431226:	or     al,0x7d
  431228:	mov    bl,0xe7
  43122a:	or     DWORD PTR [eax+ecx*2-0x30128806],ebp
  431231:	add    ebp,DWORD PTR ds:0x79004762
  431237:	arpl   WORD PTR [edi+0x5a],ax
  43123a:	inc    ebp
  43123b:	imul   esi,DWORD PTR ds:0x57a946be,0x80
  431245:	(bad)  
  431246:	lods   al,BYTE PTR ds:[esi]
  431247:	clc    
  431248:	dec    esp
  43124a:	icebp  
  43124b:	lods   eax,DWORD PTR ds:[esi]
  43124c:	push   edx
  43124d:	jbe    0x4311ea
  43124f:	(bad)  
  431250:	repnz mov esp,0xb489565d
  431256:	inc    esi
  431257:	inc    edi
  431258:	gs pop es
  43125a:	mov    ebx,0x75ab8d79
  43125f:	inc    edi
  431260:	dec    edi
  431261:	jo     0x4312cc
  431263:	inc    edi
  431264:	repz ror BYTE PTR gs:[ecx+0x476d8c5f],cl
  43126c:	xchg   BYTE PTR [eax+0x7eee4e98],dh
  431272:	popf   
  431273:	jns    0x431234
  431275:	cmc    
  431276:	and    bh,BYTE PTR [ebx-0x3f]
  431279:	ret    
  43127a:	pop    ss
  43127b:	test   BYTE PTR [ebx-0x7b8ee050],ch
  431281:	repz mov ebx,0x87c3fa47
  431287:	add    ebp,DWORD PTR [esi+0x7e62074c]
  43128d:	test   BYTE PTR [esi],al
  43128f:	je     0x4312d4
  431291:	jo     0x4312da
  431293:	(bad)  
  431295:	add    eax,0x777ac247
  43129a:	pop    es
  43129b:	inc    ebp
  43129c:	dec    eax
  43129d:	sub    DWORD PTR [edx-0x39128c05],eax
  4312a3:	call   0x2d4a821e
  4312a8:	dec    eax
  4312a9:	add    BYTE PTR [eax],al
  4312ab:	add    BYTE PTR [ecx],cl
  4312ad:	xlat   BYTE PTR ds:[ebx]
  4312ae:	and    DWORD PTR [eax],esi
  4312b0:	mov    ds,WORD PTR [edx]
  4312b2:	ins    BYTE PTR es:[edi],dx
  4312b3:	jle    0x431303
  4312b5:	das    
  4312b6:	adc    DWORD PTR [eax-0x5c],ecx
  4312b9:	mov    al,ds:0x776776e8
  4312be:	ins    DWORD PTR es:[edi],dx
  4312bf:	inc    esp
  4312c0:	int3   
  4312c1:	push   0x8bd945f5
  4312c6:	sub    cl,cl
  4312c8:	test   DWORD PTR [ecx+0x7f54b322],0x82c4c392
  4312d2:	arpl   WORD PTR [ebx+edi*4+0x35],cx
  4312d6:	shl    DWORD PTR [esp+ecx*8-0x56b86885],1
  4312dd:	mov    ebp,DWORD PTR [eax+0x64467ff7]
  4312e3:	inc    esp
  4312e4:	daa    
  4312e5:	add    dh,dh
  4312e7:	inc    ebx
  4312e8:	adc    al,BYTE PTR [eax+0x358b4c63]
  4312ee:	mov    eax,ds:0x9f2e6f79
  4312f3:	inc    edi
  4312f4:	jns    0x4312cc
  4312f6:	xchg   ecx,eax
  4312f7:	das    
  4312f8:	jns    0x4312f5
  4312fa:	mov    WORD PTR [edx-0x699f8d3],ss
  431300:	add    al,0x63
  431302:	and    eax,0xff345d04
  431307:	fild   DWORD PTR [esp+eax*1]
  43130a:	inc    eax
  43130b:	jmp    0xaaf048a7
  431310:	add    BYTE PTR [eax],al
  431312:	add    al,dh
  431314:	std    
  431315:	mov    esi,0x4fc438d5
  43131a:	push   esi
  43131b:	inc    edx
  43131c:	add    eax,0x1ef0a90f
  431321:	inc    edx
  431322:	and    al,0xac
  431324:	xor    BYTE PTR [esp+ebp*2+0x36fa32f7],cl
  43132b:	mov    bh,0xfb
  43132d:	mov    eax,0x8c82b42e
  431332:	and    DWORD PTR [esi-0x1bee05d0],esi
  431338:	outs   dx,DWORD PTR ds:[esi]
  431339:	cli    
  43133a:	push   ss
  43133b:	sbb    DWORD PTR [ecx],ebx
  43133d:	lea    esp,[ecx+eiz*1+0x3c]
  431341:	cli    
  431342:	push   es
  431343:	lahf   
  431344:	stos   BYTE PTR es:[edi],al
  431345:	jmp    FWORD PTR [ebx-0x3e]
  431348:	mov    WORD PTR [esi-0x10e2c8d6],es
  43134e:	in     al,dx
  43134f:	xor    eax,0xe667bf8b
  431354:	xor    DWORD PTR [ecx+eax*8+0x68],0xf0e8ff79
  43135c:	push   ds
  43135d:	cld    
  43135e:	fidiv  WORD PTR ds:0x272c8c31
  431364:	les    eax,FWORD PTR [esi-0x7b7c9f59]
  43136a:	mov    cl,0x24
  43136c:	xor    edx,edi
  43136e:	sbb    DWORD PTR [edi],ebp
  431370:	adc    dh,BYTE PTR [ecx-0x4074d25a]
  431376:	out    dx,al
  431377:	add    BYTE PTR [eax],al
  431379:	add    BYTE PTR [ebx],al
  43137b:	je     0x431300
  43137d:	test   eax,0xa92effa3
  431382:	dec    esi
  431383:	jg     0x431309
  431385:	add    BYTE PTR [edx-0x3c],dh
  431388:	cmc    
  431389:	dec    edi
  43138b:	xchg   dl,dh
  43138d:	hlt    
  43138e:	(bad)  
  431390:	dec    edx
  431391:	push   0x8000085b
  431396:	int    0x36
  431398:	outs   dx,BYTE PTR ds:[esi]
  431399:	adc    ecx,DWORD PTR [edx-0x51ca7cf8]
  43139f:	cmp    BYTE PTR [edx],bh
  4313a1:	add    bh,cl
  4313a3:	xchg   dl,ch
  4313a5:	clc    
  4313a6:	lods   eax,DWORD PTR ds:[esi]
  4313a7:	int3   
  4313a8:	dec    edx
  4313a9:	lea    edx,[edi-0x220003f9]
  4313af:	ja     0x4313a6
  4313b1:	(bad)  
  4313b2:	scas   eax,DWORD PTR es:[edi]
  4313b3:	xchg   BYTE PTR [edx],al
  4313b5:	dec    ch
  4313b7:	int3   
  4313b8:	dec    edx
  4313b9:	lea    edx,[edi-0x22000841]
  4313bf:	ja     0x4313b6
  4313c1:	(bad)  
  4313c2:	dec    edi
  4313c3:	jg     0x4313cf
  4313c5:	(bad)  
  4313c6:	in     eax,dx
  4313c7:	int3   
  4313c8:	mov    dl,0x9c
  4313ca:	retf   0x7
  4313cd:	call   0x385052
  4313d2:	das    
  4313d3:	xchg   DWORD PTR [edx],eax
  4313d5:	dec    ch
  4313d7:	leave  
  4313d8:	dec    edx
  4313d9:	lea    edx,[edi-0x25]
  4313dc:	repnz inc DWORD PTR [eax]
  4313df:	add    BYTE PTR [eax],al
  4313e1:	popf   
  4313e2:	jp     0x43136f
  4313e4:	test   DWORD PTR [edx+0xafff5c9],edx
  4313ea:	mov    esp,0xc9b2f083
  4313ef:	cmc    
  4313f0:	push   eax
  4313f1:	adc    edx,esi
  4313f3:	dec    edx
  4313f4:	mov    edi,0x6c6
  4313f9:	inc    DWORD PTR [ebx-0x36a20f86]
  4313ff:	loop   0x431450
  431401:	repz cdq 
  431403:	inc    edx
  431404:	cli    
  431405:	jo     0x431470
  431407:	out    dx,eax
  431408:	test   BYTE PTR [ebx],dh
  43140a:	or     edi,esp
  43140c:	xchg   BYTE PTR ds:0x98455c0d,dh
  431412:	mov    ebx,0x1dee3844
  431417:	(bad)  
  431418:	ds repz push edx
  43141b:	mul    BYTE PTR [ebp-0xd]
  43141e:	aam    0xea
  431420:	jecxz  0x431403
  431422:	pop    ebp
  431423:	(bad)  
  431424:	mov    eax,0xfffe1e1d
  431429:	jbe    0x4313cd
  43142b:	add    esi,ebx
  43142d:	sbb    al,0xf4
  43142f:	cmp    edi,edi
  431431:	adc    al,0x5d
  431433:	mov    ch,0x74
  431435:	or     al,BYTE PTR [esp+eiz*4+0x3548f2af]
  43143c:	mov    esi,0x7e57b8a6
  431441:	pop    es
  431442:	inc    ecx
  431443:	jg     0x4314a9
  431445:	add    BYTE PTR [eax],al
  431447:	add    bh,ch
  431449:	and    BYTE PTR [edi-0x53c3b97a],ch
  43144f:	mov    WORD PTR [eax],?
  431451:	js     0x431446
  431453:	mov    dl,0x23
  431455:	xchg   ecx,eax
  431456:	dec    ebx
  431457:	fld1   
  431459:	cmp    eax,ebx
  43145b:	add    BYTE PTR [eax],dl
  43145d:	push   eax
  43145e:	fcom   DWORD PTR [ecx]
  431460:	outs   dx,BYTE PTR ds:[esi]
  431461:	jmp    0x43148a
  431463:	dec    edi
  431464:	push   0xffffffd3
  431466:	dec    edi
  431467:	out    0xb5,eax
  431469:	rol    BYTE PTR [edx+edi*8+0x78],0x75
  43146e:	push   esi
  43146f:	add    eax,edi
  431471:	jno    0x4314b6
  431473:	popa   
  431474:	jo     0x4314ee
  431476:	imul   BYTE PTR [ebp-0x1f]
  431479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43147a:	mov    edi,0xa9076e0f
  43147f:	into   
  431480:	mul    edi
  431482:	and    ecx,DWORD PTR [eax-0x73]
  431485:	or     DWORD PTR [esi+0x43],esp
  431488:	sbb    BYTE PTR [eax-0x4b92b7dd],al
  43148e:	lock jbe 0x431442
  431491:	neg    BYTE PTR [eax]
  431493:	inc    ebp
  431494:	jmp    DWORD PTR [edx]
  431496:	(bad)  
  431497:	ret    
  431498:	dec    esp
  431499:	jge    0x4314bc
  43149b:	hlt    
  43149c:	jnp    0x43146a
  43149e:	dec    eax
  43149f:	js     0x431452
  4314a1:	out    0x6f,al
  4314a3:	mov    esi,0x13a98418
  4314a8:	ret    
  4314a9:	xor    ebx,esi
  4314ab:	push   ebx
  4314ac:	add    BYTE PTR [eax],al
  4314ae:	add    dh,dh
  4314b0:	(bad)  
  4314b1:	call   0xb14c76aa
  4314b6:	mov    ebx,0x5b661aa0
  4314bb:	out    0xba,eax
  4314bd:	in     al,0x10
  4314bf:	xor    ebx,DWORD PTR [esi]
  4314c1:	cld    
  4314c2:	js     0x4314b5
  4314c4:	test   al,0x6d
  4314c6:	sbb    edx,0x7
  4314c9:	jmp    0x5e42e8d1
  4314ce:	cld    
  4314cf:	push   edx
  4314d0:	jle    0x43153a
  4314d2:	out    0xf3,eax
  4314d4:	push   es
  4314d5:	jmp    0xd0e80b7
  4314da:	js     0x4314e9
  4314dc:	pop    ss
  4314dd:	repnz sub dh,BYTE PTR [edi-0x43]
  4314e1:	cli    
  4314e2:	push   ds
  4314e3:	mov    bl,0xe5
  4314e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4314e6:	lea    esp,[edi]
  4314e8:	das    
  4314e9:	sbb    bh,BYTE PTR ds:[esi-0x3d]
  4314ed:	lods   al,BYTE PTR ds:[esi]
  4314ee:	aad    0x25
  4314f0:	inc    edi
  4314f1:	in     al,dx
  4314f2:	rcl    DWORD PTR [esi],cl
  4314f4:	or     BYTE PTR [esi+0x52],ch
  4314f7:	mov    WORD PTR [edi+edi*8-0x78f90f1d],fs
  4314fe:	mov    ecx,0xed74377a
  431503:	xchg   BYTE PTR [ecx-0x1a],dh
  431506:	sub    esp,DWORD PTR [esp+ebp*8-0x7a]
  43150a:	mov    bh,0x1f
  43150c:	in     eax,0xf0
  43150e:	(bad)  
  43150f:	mov    al,0x8b
  431511:	xlat   BYTE PTR ds:[ebx]
  431512:	xchg   ecx,eax
  431513:	add    BYTE PTR [eax],al
  431515:	add    BYTE PTR [eax+0x647efc5f],dh
  43151b:	retf   0x6cfb
  43151e:	mov    bh,0xb5
  431520:	sub    BYTE PTR [edi-0x11],dh
  431523:	pop    es
  431524:	je     0x431533
  431526:	ins    BYTE PTR es:[edi],dx
  431527:	retf   0x720b
  43152a:	das    
  43152b:	add    ebx,esi
  43152d:	xor    DWORD PTR [edi+eax*2],ecx
  431530:	push   ds
  431531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431532:	call   0x4124d4e7
  431537:	sub    al,0x74
  431539:	xor    eax,0x6207ca64
  43153e:	imul   DWORD PTR ds:0x6ee61af
  431544:	add    BYTE PTR [ecx],dl
  431546:	pushw  es
  431548:	cli    
  431549:	push   ds
  43154a:	gs jo  0x4315a7
  43154d:	mov    bh,0xcd
  43154f:	aas    
  431550:	mov    ebp,0x86d9f0e1
  431555:	adc    eax,0xe46f1c76
  43155a:	lock push es
  43155c:	dec    edi
  43155d:	lahf   
  43155e:	jge    0x4315b8
  431560:	push   edx
  431561:	bound  esi,QWORD PTR [eax+ebp*1]
  431564:	adc    bh,BYTE PTR [edx+0x6a612d31]
  43156a:	clc    
  43156b:	or     cl,BYTE PTR [ebx]
  43156d:	imul   esi,DWORD PTR [edx+0x30],0xfffffffa
  431571:	jmp    0x47e6ce
  431576:	mov    al,BYTE PTR [ecx*4+0x85]
  43157d:	cmp    esi,edx
  43157f:	cmc    
  431580:	push   DWORD PTR [eax]
  431582:	or     edx,DWORD PTR [eax-0x3a]
  431585:	sete   ah
  431588:	call   DWORD PTR [ebp+0x4]
  43158b:	call   0x479549
  431590:	mov    ebx,DWORD PTR [ecx]
  431592:	sbb    edi,DWORD PTR [ebx-0x3c]
  431595:	inc    esi
  431596:	jg     0x431552
  431598:	je     0x4315e3
  43159a:	mov    DWORD PTR [edx+0x42ad452c],edi
  4315a0:	add    eax,DWORD PTR [esp+eiz*2]
  4315a3:	add    eax,DWORD PTR [eax]
  4315a5:	pop    edx
  4315a6:	xor    DWORD PTR [ebx-0x4],0x2c
  4315aa:	xor    eax,ecx
  4315ac:	bswap  ebp
  4315ae:	mov    edx,edi
  4315b0:	call   FWORD PTR [edx]
  4315b2:	pop    esi
  4315b3:	or     ecx,0x3e
  4315b6:	inc    edi
  4315b7:	test   BYTE PTR [eax],cl
  4315b9:	mov    ah,0xc2
  4315bb:	jp     0x4315b6
  4315bd:	or     ebp,DWORD PTR [ebp+0x6e]
  4315c0:	mov    ebp,DWORD PTR [edi-0x4]
  4315c3:	mov    WORD PTR [ebp-0xa0e62],cs
  4315c9:	cmp    edx,DWORD PTR [edi-0x3b2f6f75]
  4315cf:	cmc    
  4315d0:	push   ecx
  4315d1:	pop    ecx
  4315d2:	retf   0x8d02
  4315d5:	ja     0x4315c6
  4315d7:	loop   0x43164c
  4315d9:	jb     0x43159f
  4315db:	cmc    
  4315dc:	test   BYTE PTR [edx],cl
  4315de:	js     0x43162e
  4315e0:	mov    eax,DWORD PTR [eax]
  4315e2:	add    BYTE PTR [eax],al
  4315e4:	outs   dx,DWORD PTR ds:[esi]
  4315e5:	out    dx,eax
  4315e6:	xor    esi,edx
  4315e8:	cmp    eax,0xba438157
  4315ed:	out    dx,al
  4315ee:	rcr    BYTE PTR [ebx],cl
  4315f0:	mov    bh,BYTE PTR [edi+0x41]
  4315f3:	push   ss
  4315f4:	repz cld 
  4315f6:	ds jle 0x4315a9
  4315f9:	in     eax,0x10
  4315fb:	mov    bl,0xe8
  4315fd:	jo     0x431655
  4315ff:	push   ss
  431600:	stos   BYTE PTR es:[edi],al
  431601:	pushf  
  431602:	inc    ecx
  431603:	add    esp,DWORD PTR [ecx]
  431605:	stos   DWORD PTR es:[edi],eax
  431606:	xchg   edx,eax
  431607:	(bad)
  43160b:	dec    ebp
  43160c:	jo     0x43166b
  43160e:	pop    es
  43160f:	push   eax
  431610:	shl    BYTE PTR [ecx+ebp*4+0x4],1
  431614:	pop    ebx
  431615:	out    dx,al
  431616:	(bad)  
  431618:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43161a:	pop    ebx
  43161b:	test   BYTE PTR [eax],bh
  43161d:	xor    DWORD PTR ds:0x8b35ae87,edx
  431623:	aaa    
  431624:	pop    ebx
  431625:	push   esi
  431626:	cs stc 
  431628:	inc    esp
  431629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43162a:	xor    al,0x87
  43162c:	mov    dh,0x34
  43162e:	es jmp 0x8583e8ba
  431634:	mov    dh,0x24
  431636:	sub    edi,ebp
  431638:	loop   0x431617
  43163a:	loopne 0x431695
  43163c:	mov    eax,0xf30341f6
  431641:	call   0x37:0xc972eb8b
  431648:	add    BYTE PTR [eax],al
  43164a:	add    bl,dh
  43164c:	sbb    eax,0x399e86d3
  431651:	mov    edi,DWORD PTR [esi]
  431653:	jecxz  0x43166d
  431655:	pop    esp
  431656:	push   ecx
  431657:	or     al,ah
  431659:	fmul   DWORD PTR [eax+ebp*2-0x133d1cca]
  431660:	in     eax,dx
  431661:	ret    
  431662:	(bad)  
  431663:	jno    0x43167d
  431665:	add    al,0x89
  431667:	dec    esi
  431668:	adc    al,0x11
  43166a:	test   bl,bh
  43166c:	and    esi,edi
  43166e:	jmp    FWORD PTR [ebx]
  431670:	pop    es
  431671:	xor    DWORD PTR [eax-0x47cf4102],edi
  431677:	sar    DWORD PTR [esi-0x760747e0],1
  43167d:	shr    bh,0x20
  431680:	push   es
  431681:	test   DWORD PTR [ebx-0x75],0xf303e730
  431688:	sub    DWORD PTR [ebx],0xaa076c0c
  43168e:	jae    0x431704
  431690:	or     cl,ch
  431692:	add    ebp,DWORD PTR [edx+ebx*2-0x70]
  431696:	pop    esi
  431697:	ins    BYTE PTR es:[edi],dx
  431698:	sub    al,0x91
  43169a:	sub    al,BYTE PTR [esi+0x8]
  43169d:	jmp    0xf0f76ea5
  4316a2:	mov    WORD PTR [ebp+0x4941321f],ss
  4316a8:	cs jg  0x4316ff
  4316ab:	repz push es
  4316ad:	jmp    0x43173e
  4316b2:	xor    eax,0x39523a1f
  4316b7:	cs ret 0x2484
  4316bb:	or     edx,edi
  4316bd:	dec    ecx
  4316be:	or     al,0xf7
  4316c0:	inc    esi
  4316c1:	sbb    DWORD PTR ds:[edx+0x16d58c38],eax
  4316c8:	not    BYTE PTR [ebp+0x7b]
  4316cb:	mov    ah,0x34
  4316cd:	cld    
  4316ce:	push   ss
  4316cf:	mov    ah,0xeb
  4316d1:	cmp    BYTE PTR [edx+edx*1],ah
  4316d4:	sub    DWORD PTR [ebp+esi*1-0xa871641],eax
  4316db:	jmp    0xd90e4f09
  4316e0:	in     eax,dx
  4316e1:	dec    edx
  4316e2:	mov    ch,BYTE PTR cs:[eax]
  4316e5:	pop    es
  4316e6:	inc    ebx
  4316e7:	jmp    0x67ff:0x25cdad2d
  4316ee:	test   DWORD PTR [esi],0x83006200
  4316f4:	icebp  
  4316f5:	pop    ebp
  4316f6:	test   BYTE PTR gs:[ecx+esi*8+0x79],al
  4316fb:	cmc    
  4316fc:	xchg   BYTE PTR [edi-0x30153729],dh
  431702:	fadd   QWORD PTR [ebx+0x5bf4d1d7]
  431708:	cld    
  431709:	mov    esi,0xe9009ede
  43170e:	lock cmc 
  431710:	mov    ebp,0x547fea34
  431715:	mov    eax,ds:0xc8000000
  43171a:	pop    es
  43171b:	jg     0x4316c6
  43171d:	arpl   WORD PTR [esi+0x44],di
  431720:	xchg   ecx,eax
  431721:	pusha  
  431722:	xor    BYTE PTR [edi-0x55],ah
  431725:	test   BYTE PTR [esi],0x0
  431728:	je     0x431794
  43172a:	std    
  43172b:	stc    
  43172c:	jle    0x43173a
  43172e:	(bad)  [edi+0x60]
  431731:	sub    bl,BYTE PTR ds:0x3104ec88
  431737:	adc    al,0x1d
  431739:	ffree  st(6)
  43173b:	call   FWORD PTR [ecx]
  43173d:	mov    bh,0xac
  43173f:	ret    
  431740:	in     eax,0x77
  431742:	ret    0x10eb
  431745:	xor    eax,0x67cf7a09
  43174a:	ret    0x72e7
  43174d:	add    eax,0x6241732c
  431752:	mov    DWORD PTR [edi],0xdfb26f99
  431758:	jo     0x431784
  43175a:	sub    edi,esp
  43175c:	in     eax,dx
  43175d:	sbb    BYTE PTR [ebx],ch
  43175f:	cli    
  431760:	ins    DWORD PTR es:[edi],dx
  431761:	das    
  431762:	mov    bl,0x32
  431764:	push   0x1c
  431766:	add    ch,BYTE PTR [edi+0x0]
  431769:	fcomp  QWORD PTR [esi-0x1]
  43176c:	mov    dl,BYTE PTR [esi+edx*4]
  43176f:	dec    ebx
  431770:	lock repnz adc esp,esp
  431774:	std    
  431775:	int    0xe1
  431777:	pop    ds
  431778:	call   DWORD PTR [edi]
  43177a:	jmp    0x4316fd
  43177c:	inc    ebp
  43177d:	add    BYTE PTR [eax],al
  43177f:	add    BYTE PTR [esi-0x4d0f8c69],dh
  431785:	mov    esp,0x81adfde3
  43178a:	ret    0x6385
  43178d:	jo     0x431799
  43178f:	mov    edx,edi
  431791:	loop   0x431714
  431793:	fidiv  WORD PTR [edx+0x4dfdde77]
  431799:	sbb    DWORD PTR [ebx+0xc],0xffee4701
  4317a0:	pop    ss
  4317a1:	test   DWORD PTR [ecx+0x4b817e45],0xe23ec9ec
  4317ab:	cmp    cl,ah
  4317ad:	div    DWORD PTR [ecx]
  4317af:	dec    eax
  4317b0:	push   esi
  4317b1:	ins    BYTE PTR es:[edi],dx
  4317b2:	fwait
  4317b3:	inc    DWORD PTR [eax+eiz*8-0x13304b72]
  4317ba:	push   eax
  4317bb:	call   0x3ecb7c
  4317c0:	xchg   edi,eax
  4317c1:	in     al,dx
  4317c2:	js     0x431825
  4317c4:	xchg   ecx,eax
  4317c5:	ds jmp 0xe785:0x8bec5789
  4317cd:	in     al,dx
  4317ce:	cmc    
  4317cf:	inc    DWORD PTR [ebx+0x3f89063e]
  4317d5:	lock xor DWORD PTR [ebp+0x1e],0x89fc7b81
  4317dd:	shl    ecx,0xe8
  4317e0:	(bad)  
  4317e1:	(bad)  
  4317e3:	inc    DWORD PTR [eax]
  4317e5:	add    BYTE PTR [eax],al
  4317e7:	repz test al,0xbf
  4317ea:	or     edx,DWORD PTR [ebp-0x5f]
  4317ed:	mov    ecx,0x8aaf303
  4317f2:	repnz xchg di,ax
  4317f5:	add    dl,BYTE PTR [ebx-0x25]
  4317f8:	xchg   esi,eax
  4317f9:	(bad)  
  4317fb:	mov    esp,0x3ffe0333
  431800:	sub    al,0xa8
  431802:	add    BYTE PTR [ecx],bl
  431804:	mov    DWORD PTR cs:[edx-0x13],eax
  431808:	in     eax,dx
  431809:	sub    eax,DWORD PTR [edx+0x3e]
  43180c:	cmp    eax,0xe156e73c
  431811:	cmp    al,0xfa
  431813:	adc    eax,0x7011c4b7
  431818:	fidivr DWORD PTR [edi]
  43181a:	aaa    
  43181b:	jo     0x431881
  43181d:	jmp    0xff7c:0x866626fa
  431824:	adc    bh,BYTE PTR [eax-0x7a]
  431827:	out    0x89,al
  431829:	mov    BYTE PTR [esi],bh
  43182b:	add    edx,DWORD PTR [ebp+0x4033165b]
  431831:	rcr    ebx,0x70
  431834:	pusha  
  431835:	retf   
  431836:	or     bh,BYTE PTR [eax+ebp*1+0x33]
  43183a:	fcomp  st(0)
  43183c:	data16 test al,0xfa
  43183f:	push   es
  431840:	ins    DWORD PTR es:[edi],dx
  431841:	mov    DWORD PTR [ebx+eax*1-0x3e05c334],edx
  431848:	mov    al,ds:0x343
  43184d:	add    bl,al
  43184f:	add    BYTE PTR [ecx+0x65],cl
  431852:	lock aad 0xeb
  431855:	add    eax,0xef871df3
  43185a:	outs   dx,BYTE PTR ds:[esi]
  43185b:	jmp    0x43180f
  43185d:	or     al,0xfc
  43185f:	jno    0x43188f
  431861:	out    0x4,eax
  431863:	push   es
  431864:	push   esi
  431865:	aas    
  431866:	jmp    0xe980e88b
  43186b:	sub    bl,BYTE PTR [ebp-0x39]
  43186e:	hlt    
  43186f:	jge    0x431841
  431871:	mov    BYTE PTR [edx-0x35d0f8e1],bh
  431877:	sub    ch,BYTE PTR [esi+0x5c]
  43187a:	int3   
  43187b:	jo     0x4318ba
  43187d:	aas    
  43187e:	mov    ecx,0xcc33732a
  431883:	cmp    dl,BYTE PTR [ebp-0x5a8256c2]
  431889:	sub    bl,bh
  43188b:	aad    0xd1
  43188d:	mov    dh,0xf4
  43188f:	push   ds
  431890:	mov    ch,0x38
  431892:	cdq    
  431893:	sub    ah,BYTE PTR [ecx]
  431895:	fisub  WORD PTR ds:0xf30ba640
  43189b:	rcr    DWORD PTR [ebp+0x2f],cl
  43189e:	jae    0x4318bb
  4318a0:	nop
  4318a1:	add    dh,bl
  4318a3:	push   es
  4318a4:	ss (bad) 
  4318a6:	sar    DWORD PTR [ebp+0x1b],0xc
  4318aa:	ins    BYTE PTR es:[edi],dx
  4318ab:	aaa    
  4318ac:	pop    ebp
  4318ad:	add    al,0x58
  4318af:	ja     0x43190d
  4318b1:	add    al,BYTE PTR [eax]
  4318b3:	add    BYTE PTR [eax],al
  4318b5:	repz push es
  4318b7:	je     0x43188f
  4318b9:	inc    eax
  4318ba:	popf   
  4318bb:	jecxz  0x431898
  4318bd:	ins    DWORD PTR es:[edi],dx
  4318be:	cmp    DWORD PTR [eax+0x6928acb5],eax
  4318c4:	xchg   DWORD PTR [edx+edi*8+0x6c],esi
  4318c8:	pop    ecx
  4318c9:	repz push es
  4318cb:	jmp    0xfb2e2058
  4318d0:	ret    
  4318d1:	sbb    al,0xa0
  4318d3:	in     al,0x8e
  4318d5:	scas   eax,DWORD PTR es:[edi]
  4318d6:	xor    dl,al
  4318d8:	jmp    0x43185b
  4318da:	(bad)  
  4318db:	call   0xff9922b3
  4318e0:	imul   esi,DWORD PTR [ebp+edi*8+0x123c2984],0xc27dec66
  4318eb:	repz xchg ecx,eax
  4318ed:	loopne 0x4318a3
  4318ef:	aas    
  4318f0:	jmp    0x6b1145b5
  4318f5:	sub    al,0xfe
  4318f7:	test   BYTE PTR [ecx],ch
  4318f9:	inc    DWORD PTR [ebx+0x6f0e991]
  4318ff:	lea    ebp,[esp+eax*8+0x2c]
  431903:	cli    
  431904:	out    dx,al
  431905:	mov    eax,ds:0xe9343321
  43190a:	sub    al,0x83
  43190c:	test   eax,0x6a61b363
  431911:	sbb    dh,dh
  431913:	cli    
  431914:	into   
  431915:	fsubr  DWORD PTR [ebx]
  431917:	jae    0x43190e
  431919:	add    BYTE PTR [eax],al
  43191b:	add    BYTE PTR [eax+0x6a],dh
  43191e:	aaa    
  43191f:	mov    esi,0xe67a2cc8
  431924:	ins    BYTE PTR es:[edi],dx
  431925:	imul   esp,esi,0xbca85106
  43192b:	(bad)  [ecx]
  43192d:	sub    eax,0x10a3f6fa
  431932:	data16 stc 
  431934:	imul   eax,DWORD PTR [edx+0x2d188e3b],0x4f
  43193b:	adc    DWORD PTR [edi-0x49],esp
  43193e:	aas    
  43193f:	jmp    0xadc1524d
  431944:	jmp    0x43197b
  431946:	xlat   BYTE PTR ds:[ebx]
  431947:	shl    DWORD PTR [eax-0xaad40d1],cl
  43194d:	fdivr  DWORD PTR [edi+0x38b5af65]
  431953:	(bad)  
  431954:	lock cmp DWORD PTR [edi+0x61],0x6ee
  43195c:	xchg   DWORD PTR [edi],edi
  43195e:	out    dx,al
  43195f:	mov    DWORD PTR [edi-0x23],edx
  431962:	or     DWORD PTR [eax],0x4cde47cd
  431968:	aas    
  431969:	inc    ebp
  43196a:	cli    
  43196b:	mov    BYTE PTR [edi-0x2a367c20],cl
  431971:	test   al,0x33
  431973:	add    edx,ecx
  431975:	add    al,0xf7
  431977:	mov    cl,0x36
  431979:	add    al,BYTE PTR [eax]
  43197b:	add    BYTE PTR [edi+0x3e],al
  43197e:	fisubr WORD PTR [edx+0x0]
  431981:	add    BYTE PTR [eax],al
  431983:	fist   DWORD PTR [ebx+0x4a]
  431986:	call   0x3f06aa
  43198b:	repz or al,0x1
  43198e:	add    BYTE PTR [edx-0x230bbc81],bl
  431994:	push   edx
  431995:	add    DWORD PTR [edi],0xfffaa9b3
  43199b:	mov    bh,BYTE PTR [ecx-0x3]
  43199e:	dec    BYTE PTR [edx]
  4319a0:	cmp    bh,0xff
  4319a3:	call   0x5224:0x30bd537f
  4319aa:	mov    edx,DWORD PTR [esp+ebx*8-0x71]
  4319ae:	dec    edi
  4319af:	xchg   esp,eax
  4319b0:	in     eax,dx
  4319b1:	jle    0x431973
  4319b3:	push   ebp
  4319b4:	test   al,0xf3
  4319b6:	add    BYTE PTR [edx+0x4],cl
  4319b9:	bound  eax,QWORD PTR ds:0x50ee46b7
  4319bf:	mov    DWORD PTR [esi-0x4e],0x3016c550
  4319c6:	push   ss
  4319c7:	or     al,BYTE PTR [ebx]
  4319c9:	add    DWORD PTR [edi],0xffffffc9
  4319cc:	ret    
  4319cd:	inc    BYTE PTR [edx+0x334fffde]
  4319d3:	mov    cl,0x7e
  4319d5:	sub    DWORD PTR [ebx+esi*8],0xffffffcf
  4319d9:	xor    eax,0xe29b6afa
  4319de:	stc    
  4319df:	or     al,0xc1
  4319e1:	es stos DWORD PTR es:[edi],eax
  4319e3:	jmp    0x0:0x6535e8
  4319ea:	iret   
  4319eb:	xchg   ebx,eax
  4319ec:	xchg   DWORD PTR [ebx+edi*1-0x35],ecx
  4319f0:	jg     0x431a1d
  4319f2:	in     eax,dx
  4319f3:	loopne 0x431a2a
  4319f5:	out    0xd1,eax
  4319f7:	add    esi,DWORD PTR [edi]
  4319f9:	cli    
  4319fa:	sbb    esi,DWORD PTR [ebx+0x76]
  4319fd:	or     ch,BYTE PTR [edi-0x18]
  431a00:	(bad)  
  431a01:	push   ebx
  431a03:	inc    ebp
  431a04:	xlat   BYTE PTR ds:[ebx]
  431a05:	mov    ch,0xf4
  431a07:	mov    al,ds:0x1dbcff60
  431a0c:	sar    DWORD PTR [esi],1
  431a0e:	data16 mov cl,BYTE PTR [esi-0x7a]
  431a12:	lods   eax,DWORD PTR ds:[esi]
  431a13:	push   ebp
  431a14:	(bad)  
  431a15:	xor    al,0xa4
  431a17:	dec    eax
  431a18:	add    BYTE PTR [ebx+eiz*8+0x43fa384f],0xcb
  431a20:	mov    ebp,0x16cf9b13
  431a25:	sti    
  431a26:	test   BYTE PTR [eax],bl
  431a28:	jo     0x431a76
  431a2a:	cmp    bl,al
  431a2c:	add    DWORD PTR [esi-0x16],edx
  431a2f:	iret   
  431a30:	jmp    0x431a2f
  431a32:	ins    BYTE PTR es:[edi],dx
  431a33:	sbb    eax,0x9570c08b
  431a38:	lahf   
  431a39:	jae    0x4319ff
  431a3b:	inc    esp
  431a3c:	inc    esp
  431a3d:	jae    0x4319ff
  431a3f:	inc    esp
  431a40:	inc    esp
  431a41:	jae    0x431a50
  431a43:	push   ebp
  431a44:	inc    esp
  431a45:	jae    0x431a50
  431a47:	popf   
  431a48:	sub    ebx,DWORD PTR [ecx-0x39]
  431a4b:	push   ecx
  431a4c:	jmp    0x431a0b
  431a4e:	add    BYTE PTR [eax],al
  431a50:	add    BYTE PTR [edi-0x59421305],bh
  431a56:	push   es
  431a57:	ret    
  431a58:	shl    DWORD PTR [ebx+edi*2+0x6740ba3],1
  431a5f:	push   edx
  431a60:	je     0x431ad2
  431a62:	add    eax,0xbc1b03e9
  431a67:	sar    DWORD PTR [ecx],1
  431a69:	or     DWORD PTR [ebx],ebx
  431a6b:	scas   al,BYTE PTR es:[edi]
  431a6c:	cmp    DWORD PTR [edi+0x6d],0xffffffe5
  431a70:	scas   al,BYTE PTR es:[edi]
  431a71:	mov    al,0x7b
  431a73:	mov    ds:0xbb07740b,eax
  431a78:	mov    WORD PTR [ebx+ecx*4+0x2ef303e7],ss
  431a7f:	jmp    0x431a33
  431a81:	fisub  DWORD PTR [esi]
  431a83:	std    
  431a84:	bnd jne 0x431a53
  431a87:	lock rol DWORD PTR [ebp+0x47],1
  431a8b:	lock xchg BYTE PTR [edi],ch
  431a8e:	pop    edi
  431a8f:	add    dh,cl
  431a91:	inc    eax
  431a92:	es jmp 0xcfcd26c4
  431a98:	lahf   
  431a99:	and    BYTE PTR [eax],dl
  431a9b:	push   cs
  431a9c:	dec    esi
  431a9d:	daa    
  431a9e:	(bad)  
  431a9f:	pusha  
  431aa0:	into   
  431aa1:	test   BYTE PTR [edx],dh
  431aa3:	in     eax,0x8b
  431aa5:	das    
  431aa6:	pop    ss
  431aa7:	shr    DWORD PTR [esi-0x5192426c],0xf4
  431aae:	mov    DWORD PTR [edx+0x37908b0b],ebp
  431ab4:	cmp    DWORD PTR [eax],eax
  431ab6:	add    BYTE PTR [eax],al
  431ab8:	imul   eax,esi,0x493bdd42
  431abe:	in     al,0x3
  431ac0:	(bad)  
  431ac1:	xchg   ecx,eax
  431ac2:	test   BYTE PTR [eax+edx*2+0x27671f],al
  431ac9:	or     ch,cl
  431acb:	add    esp,DWORD PTR [ecx+0x3cade8b0]
  431ad1:	xchg   ebx,eax
  431ad2:	jmp    FWORD PTR [ebx+edx*2]
  431ad5:	push   ss
  431ad6:	call   0xfa644264
  431adb:	jb     0x431b32
  431add:	push   cs
  431ade:	xchg   edi,esp
  431ae0:	outs   dx,DWORD PTR ds:[esi]
  431ae1:	into   
  431ae2:	add    esp,DWORD PTR [eax+0x2c]
  431ae5:	jmp    0xb17f:0xe38620b
  431aec:	add    al,0x21
  431aee:	mov    BYTE PTR [ebp-0x5e79e9e4],ch
  431af4:	in     al,dx
  431af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431af6:	pop    edi
  431af7:	loope  0x431ae9
  431af9:	mov    cs,WORD PTR [ebx-0x33]
  431afc:	hlt    
  431afd:	mov    WORD PTR [edi-0x14],es
  431b00:	push   0x67fc23d1
  431b05:	ja     0x43d2fbb4
  431b0b:	int    0xe8
  431b0d:	mov    ecx,eax
  431b0f:	jne    0x431b03
  431b11:	lea    eax,[eax]
  431b13:	xor    ecx,0x21
  431b16:	pmaxsw mm4,QWORD PTR [ebx+0x9]
  431b1a:	lea    ebp,ds:0x93000000
  431b20:	adc    eax,ebp
  431b22:	outs   dx,BYTE PTR ds:[esi]
  431b23:	fisub  DWORD PTR [eax]
  431b25:	cli    
  431b26:	aas    
  431b27:	(bad)  
  431b28:	leave  
  431b29:	mov    al,0xcc
  431b2b:	les    edx,FWORD PTR [edx+0x2ef70d73]
  431b31:	sar    dl,cl
  431b33:	lds    esp,FWORD PTR [eax]
  431b35:	cs test eax,0xce48c9d
  431b3b:	mov    cl,0x9
  431b3d:	add    BYTE PTR [eax+edi*2],bh
  431b40:	xor    DWORD PTR [eax+0x3a],edx
  431b43:	sub    eax,0x689186b8
  431b48:	enter  0x8103,0x14
  431b4c:	ins    BYTE PTR es:[edi],dx
  431b4d:	cli    
  431b4e:	add    BYTE PTR [ebp-0x6f],ch
  431b51:	ins    DWORD PTR es:[edi],dx
  431b52:	add    al,0xc9
  431b54:	test   BYTE PTR [bx+si],0xcf
  431b58:	cmp    al,0x6
  431b5a:	push   ebx
  431b5b:	popf   
  431b5c:	imul   ebx
  431b5e:	adc    bl,BYTE PTR [edx+0x9]
  431b61:	add    DWORD PTR [esi],0xffffff97
  431b64:	retf   0x116e
  431b67:	xchg   ecx,eax
  431b68:	je     0x431b68
  431b6a:	cmp    ah,0xa
  431b6d:	je     0x431b72
  431b6f:	lods   eax,DWORD PTR ds:[esi]
  431b70:	inc    edi
  431b71:	test   BYTE PTR [ebx+0x754806d4],0xb8
  431b78:	cmp    ebp,esi
  431b7a:	adc    eax,0x3ff92a
  431b7f:	pop    ebx
  431b80:	pop    esi
  431b81:	test   dl,0x0
  431b84:	add    BYTE PTR [eax],al
  431b86:	retf   
  431b87:	or     BYTE PTR [eax],al
  431b89:	jbe    0x431b5c
  431b8b:	xchg   ecx,eax
  431b8c:	dec    ebx
  431b8d:	or     BYTE PTR [edi-0x2e],dl
  431b90:	outs   dx,BYTE PTR ds:[esi]
  431b91:	inc    esp
  431b92:	inc    ecx
  431b93:	or     ah,bl
  431b95:	cmp    al,0x60
  431b97:	adc    al,ch
  431b99:	mov    bh,0xfa
  431b9b:	(bad)  
  431b9d:	mov    edi,DWORD PTR [edi+0x10]
  431ba0:	xor    eax,0x17
  431ba3:	repnz outs dx,BYTE PTR ds:[esi]
  431ba5:	and    al,0x40
  431ba7:	or     ecx,DWORD PTR [esi+0x68]
  431baa:	jl     0x431b9b
  431bac:	cmp    al,0x0
  431bae:	adc    edi,edx
  431bb0:	mov    BYTE PTR [esi-0x6a],bh
  431bb3:	xchg   ecx,eax
  431bb4:	jne    0x431bba
  431bb6:	and    cl,BYTE PTR [ebx]
  431bb8:	add    BYTE PTR [eax],cl
  431bba:	mov    dh,al
  431bbc:	clc    
  431bbd:	stos   BYTE PTR es:[edi],al
  431bbe:	popf   
  431bbf:	fnstsw WORD PTR [esi-0x40]
  431bc2:	pop    es
  431bc3:	stc    
  431bc4:	dec    ebp
  431bc5:	call   0x3eb38a
  431bca:	repz mov dl,0x55
  431bcd:	jae    0x431bca
  431bcf:	test   al,0xfd
  431bd1:	xchg   BYTE PTR [eax],bh
  431bd3:	clc    
  431bd4:	add    al,0xfb
  431bd6:	jecxz  0x431bdc
  431bd8:	rcl    BYTE PTR [esi+0x2a],cl
  431bdb:	jo     0x431bd7
  431bdd:	inc    edi
  431bdf:	test   al,0x22
  431be1:	jle    0x431bfa
  431be3:	sbb    cl,ch
  431be5:	cmp    BYTE PTR cs:[ecx+ecx*8-0x7a],bl
  431bea:	add    BYTE PTR [eax],al
  431bec:	add    BYTE PTR [edx],ah
  431bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431bef:	xlat   BYTE PTR ds:[ebx]
  431bf0:	sti    
  431bf1:	enter  0xaaf0,0x14
  431bf5:	jp     0x431c6a
  431bf7:	sub    ah,bh
  431bf9:	cli    
  431bfa:	gs xor edx,edi
  431bfd:	mov    DWORD PTR [esi],ebp
  431bff:	mov    eax,DWORD PTR [ebx+ebp*8+0x47]
  431c03:	push   es
  431c04:	lea    ebp,[esi]
  431c06:	add    cl,bh
  431c08:	out    0xf7,al
  431c0a:	ja     0x431c0f
  431c0c:	dec    edi
  431c0d:	inc    eax
  431c0e:	test   eax,0x612007bf
  431c13:	int    0xe7
  431c15:	pushf  
  431c16:	xor    bh,dh
  431c18:	jmp    FWORD PTR [eax+0x5]
  431c1b:	div    dh
  431c1d:	aas    
  431c1e:	xchg   ebp,eax
  431c1f:	es int 0x4b
  431c22:	xor    eax,0x66c12e34
  431c27:	mov    ecx,DWORD PTR [esi]
  431c29:	repz sub eax,0x7468f02b
  431c2f:	jle    0x431bee
  431c31:	imul   esi,edi,0x3
  431c34:	add    BYTE PTR [ecx],ah
  431c36:	dec    ebp
  431c37:	jmp    0x3194f123
  431c3c:	cli    
  431c3d:	push   0xfffffff2
  431c3f:	aaa    
  431c40:	ss xor bl,dh
  431c43:	clc    
  431c44:	aaa    
  431c45:	mov    BYTE PTR [esi],0xf5
  431c48:	scas   eax,DWORD PTR es:[edi]
  431c49:	and    dl,BYTE PTR [eax+0x506db431]
  431c4f:	and    BYTE PTR [edi+0x38000000],0x23
  431c56:	mov    DWORD PTR [esi-0x4e25e13b],ebx
  431c5c:	adc    dl,BYTE PTR [eax+0x47fc1426]
  431c62:	cld    
  431c63:	add    BYTE PTR [esi-0x42],bh
  431c66:	mov    esp,0x740aa234
  431c6b:	ret    0x13b4
  431c6e:	xchg   edx,eax
  431c6f:	or     al,0x20
  431c71:	cmp    eax,0xe7bd4aed
  431c76:	and    bl,dl
  431c78:	or     DWORD PTR [ecx+0xeb286f0],ebx
  431c7e:	push   ecx
  431c7f:	lock test DWORD PTR [ebx],esp
  431c82:	xor    DWORD PTR [ecx+0x5d142fe1],ecx
  431c88:	out    0x22,eax
  431c8a:	ins    DWORD PTR es:[edi],dx
  431c8b:	mov    edi,0xd8bac2d8
  431c90:	stos   DWORD PTR es:[edi],eax
  431c91:	inc    ebp
  431c92:	loopne 0x431c97
  431c94:	es mov ?,esp
  431c97:	adc    al,0x1f
  431c9a:	gs sub al,bl
  431c9d:	mov    fs,WORD PTR [edi+ebx*8-0x2ed72a20]
  431ca4:	adc    dl,BYTE PTR [eax-0x29f4205c]
  431caa:	mov    ebp,0xe3b764cd
  431caf:	add    esi,ebx
  431cb1:	mov    ecx,0xeb308b4a
  431cb6:	add    eax,0x3e
  431cbb:	xor    bl,ch
  431cbd:	repnz add ebp,DWORD PTR [edx-0x3d]
  431cc1:	add    al,0x14
  431cc3:	push   0xffffffc3
  431cc5:	dec    DWORD PTR [ebx+eax*1]
  431cc8:	inc    ebp
  431cc9:	inc    ebx
  431cca:	add    eax,0x248706ee
  431ccf:	out    dx,eax
  431cd0:	mov    DWORD PTR [edx],eax
  431cd2:	xchg   ecx,eax
  431cd3:	dec    esi
  431cd4:	sub    eax,0x61cc96f9
  431cd9:	or     ah,BYTE PTR [ebp+0x70]
  431cdc:	and    bh,dl
  431cde:	jmp    0xe4a9246d
  431ce3:	ins    DWORD PTR es:[edi],dx
  431ce4:	(bad)  
  431ce5:	and    eax,ecx
  431ce7:	inc    eax
  431ce8:	mov    DWORD PTR [ebp+ebx*8+0x5a],eax
  431cec:	and    ch,BYTE PTR [eax-0x17]
  431cef:	dec    edx
  431cf0:	push   es
  431cf1:	call   0xfa6532e1
  431cf6:	(bad)  
  431cf7:	ror    BYTE PTR [edx+0x1084def1],0x1
  431cfe:	jmp    0xdacacbf3
  431d03:	lock push es
  431d05:	sti    
  431d06:	(bad)  
  431d07:	sbb    dl,al
  431d09:	out    0x2f,al
  431d0b:	pop    ds
  431d0c:	mov    edi,esi
  431d0e:	push   0x27
  431d10:	pop    es
  431d11:	jge    0x431d03
  431d13:	or     ah,cl
  431d15:	mov    ds:0xc2890714,al
  431d1a:	add    bl,dl
  431d1c:	mov    BYTE PTR [ecx+0x79],bh
  431d1f:	add    BYTE PTR [eax],al
  431d21:	add    BYTE PTR [ebx+0x4c],ch
  431d24:	out    0x4b,eax
  431d26:	sub    ebx,DWORD PTR ds:0x19738ffa
  431d2c:	add    ebx,esi
  431d2e:	jb     0x431d6f
  431d30:	(bad)  
  431d31:	call   0xe585b126
  431d36:	rcr    BYTE PTR [esp+edx*1],0xf5
  431d3a:	in     eax,0xc6
  431d3c:	inc    eax
  431d3e:	mov    WORD PTR [esp+edi*8+0x0],fs
  431d42:	mov    ch,0x19
  431d44:	mov    edx,0x162eb689
  431d49:	inc    eax
  431d4a:	fptan  
  431d4c:	cmc    
  431d4d:	jne    0x431d8b
  431d4f:	xlat   BYTE PTR ds:[ebx]
  431d50:	ds and al,0x65
  431d53:	test   DWORD PTR [esi+0x24],esi
  431d56:	inc    ebp
  431d57:	or     BYTE PTR [edi],al
  431d59:	sub    cl,0xd5
  431d5c:	cmc    
  431d5d:	push   DWORD PTR [ebx-0x62]
  431d60:	cli    
  431d61:	dec    DWORD PTR [edx+0x18]
  431d64:	mov    edx,0x70b7283
  431d69:	mov    WORD PTR [ebx-0x6efffff6],?
  431d6f:	inc    esi
  431d70:	push   ds
  431d71:	sbb    al,0xa1
  431d73:	pop    ebx
  431d74:	or     al,BYTE PTR [ebp-0x7d06a144]
  431d7a:	fsub   QWORD PTR [esi]
  431d7c:	mov    edx,DWORD PTR [esi+0xe]
  431d7f:	std    
  431d80:	inc    edx
  431d81:	retf   
  431d82:	mov    ch,0xd5
  431d84:	pusha  
  431d85:	add    DWORD PTR [eax],0x0
  431d88:	add    BYTE PTR [edx+0x22b7070e],ah
  431d8e:	mov    ds:0x8fc22476,al
  431d93:	shl    DWORD PTR [esi+ecx*8+0x33],1
  431d97:	sbb    BYTE PTR [ebp-0x43],dh
  431d9a:	mov    DWORD PTR [eax],edi
  431d9c:	add    BYTE PTR [esi+0x1a],ch
  431d9f:	pusha  
  431da0:	cmp    esi,DWORD PTR [esi+0x28]
  431da3:	sbb    DWORD PTR [edi-0x5f],esi
  431da6:	mov    eax,ds:0x59e243e
  431dab:	scas   eax,DWORD PTR es:[edi]
  431dac:	fistp  WORD PTR [ecx-0x71ffc437]
  431db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431db3:	cli    
  431db4:	jbe    0x431da7
  431db6:	ins    BYTE PTR es:[edi],dx
  431db7:	cmp    edi,0x3e
  431dba:	adc    BYTE PTR [edx-0x73],cl
  431dbd:	repz mov ecx,0xea7617e7
  431dc3:	out    0x13,eax
  431dc5:	mov    eax,DWORD PTR [edx]
  431dc7:	pop    edi
  431dc8:	cld    
  431dc9:	je     0x431d60
  431dcb:	stos   BYTE PTR es:[edi],al
  431dcc:	and    ecx,DWORD PTR [ebx]
  431dce:	mov    bl,0x3e
  431dd0:	je     0x431dc0
  431dd2:	addr16 ret 0xed23
  431dd6:	cs jns 0x431df2
  431dd9:	push   0x5b1be7fa
  431dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431ddf:	push   0x2f0844fc
  431de4:	inc    ebx
  431de5:	pop    ss
  431de6:	dec    edi
  431de7:	jle    0x431e64
  431de9:	wrmsr  
  431deb:	(bad)  
  431dec:	je     0x431dee
  431dee:	add    BYTE PTR [eax],al
  431df0:	fimul  WORD PTR [edi]
  431df2:	jmp    0x431e6f
  431df4:	iret   
  431df5:	dec    esp
  431df6:	std    
  431df7:	add    DWORD PTR [eax+ebp*4+0x2d],0xfffffffa
  431dfc:	push   0x780fe26a
  431e01:	imul   ecx,DWORD PTR [esi],0xffffff89
  431e04:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431e06:	(bad)  
  431e07:	adc    ebp,DWORD PTR [eax+0x5a]
  431e0a:	loop   0x431e1f
  431e0c:	push   0x16
  431e0e:	outs   dx,BYTE PTR ds:[esi]
  431e0f:	add    BYTE PTR [eax+edi*2-0x37],cl
  431e13:	xchg   dh,cl
  431e15:	xchg   edx,eax
  431e16:	inc    esp
  431e17:	psllq  mm6,mm5
  431e1a:	mov    ebp,0x2e00d6a1
  431e1f:	jae    0x431e38
  431e21:	push   ds
  431e22:	push   ss
  431e23:	arpl   WORD PTR [ebp-0x4cd2d1ee],dx
  431e29:	hlt    
  431e2a:	daa    
  431e2b:	push   esp
  431e2c:	push   0x784ed411
  431e31:	cmc    
  431e32:	jns    0x431e78
  431e34:	test   DWORD PTR [eax+0x75],0xdc0694ff
  431e3b:	leave  
  431e3c:	call   0xa88a:0x88c7701f
  431e43:	mov    bh,0xf0
  431e45:	shr    DWORD PTR [eax+0x50b7ff1d],cl
  431e4b:	hlt    
  431e4c:	jne    0x431e6d
  431e4e:	call   0xb3b4226e
  431e53:	xor    DWORD PTR [eax],eax
  431e55:	add    BYTE PTR [eax],al
  431e57:	outs   dx,DWORD PTR ds:[esi]
  431e58:	inc    esi
  431e59:	xor    al,0x2
  431e5b:	aad    0x5
  431e5d:	mov    ds:0x202e58b7,al
  431e62:	hlt    
  431e63:	dec    ecx
  431e64:	pop    ds
  431e65:	pop    ebp
  431e66:	sub    al,0x4d
  431e68:	add    al,0xd6
  431e6a:	xor    BYTE PTR [edi+0x1f],dh
  431e6d:	sti    
  431e6e:	pop    es
  431e6f:	add    al,0x47
  431e71:	(bad)  
  431e72:	xlat   BYTE PTR ds:[ebx]
  431e73:	jne    0x431e78
  431e75:	pop    esi
  431e76:	test   BYTE PTR [eax+0x5],bh
  431e79:	jmp    0x6ff9df81
  431e7e:	(bad)  
  431e7f:	sbb    BYTE PTR [ebx-0x29b5005d],cl
  431e85:	fild   DWORD PTR [ebx]
  431e87:	repz mov eax,0xae14415d
  431e8d:	mov    al,0x31
  431e8f:	stc    
  431e90:	mov    DWORD PTR [eax],ebp
  431e92:	mov    eax,0x7cf51e17
  431e97:	aaa    
  431e98:	movsx  eax,WORD PTR [esp+ebx*2]
  431e9c:	dec    eax
  431e9d:	lock int3 
  431e9f:	int3   
  431ea0:	jle    0x431e7a
  431ea2:	xor    cl,cl
  431ea4:	push   ds
  431ea5:	fwait
  431ea6:	das    
  431ea7:	ins    DWORD PTR es:[edi],dx
  431ea8:	mov    ah,0xf8
  431eaa:	fst    DWORD PTR [esi-0x15]
  431ead:	mov    al,ds:0x6d2fa97c
  431eb2:	mov    ebp,0x6cff1eaa
  431eb7:	das    
  431eb8:	xchg   ebx,eax
  431eb9:	or     esp,DWORD PTR [edx+0x0]
  431ebc:	add    BYTE PTR [eax],al
  431ebe:	jmp    0xf21:0x337200a4
  431ec5:	sbb    dh,BYTE PTR [edi]
  431ec7:	and    eax,0xc03b61fd
  431ecc:	pop    edx
  431ecd:	xor    bh,BYTE PTR [eax-0x6216f4a5]
  431ed3:	test   ebx,ebp
  431ed5:	sbb    dh,ch
  431ed7:	sbb    eax,0xb8672485
  431edc:	push   edx
  431edd:	(bad)  
  431ede:	enter  0x91,0xe9
  431ee2:	lock mov ecx,0x8b38e565
  431ee8:	push   esp
  431ee9:	xchg   ebp,eax
  431eea:	call   0x3d26471
  431eef:	mov    bh,BYTE PTR [edi+0x7c9d3dfd]
  431ef5:	jge    0x431ee7
  431ef7:	xchg   edx,eax
  431ef8:	sub    ch,BYTE PTR [eax+0x55]
  431efb:	and    bh,bh
  431efd:	in     al,0x90
  431eff:	sbb    eax,0x92e20f71
  431f04:	sti    
  431f05:	push   ecx
  431f06:	imul   ebp,DWORD PTR [ebx-0x4],0x842d8756
  431f0d:	push   edi
  431f0e:	inc    esp
  431f0f:	test   BYTE PTR [esi+0x4c84c4ac],0xf1
  431f16:	retf   
  431f17:	test   cl,dl
  431f19:	inc    ecx
  431f1a:	retf   0xf9c3
  431f1d:	cs je  0x431f7d
  431f20:	je     0x431f19
  431f22:	add    BYTE PTR [eax],al
  431f24:	add    BYTE PTR [edx+0x1d4c6625],bh
  431f2a:	and    DWORD PTR ds:0xc8bfa329,ebp
  431f30:	sub    esi,esp
  431f32:	push   es
  431f33:	xchg   DWORD PTR [eax],eax
  431f35:	xchg   ebp,ebp
  431f37:	xchg   DWORD PTR [ebx-0x6a],eax
  431f3a:	mov    al,ds:0xfa9bb029
  431f3f:	call   0xab19a9cf
  431f44:	mov    WORD PTR [ebx-0x3972fff7],cs
  431f4a:	add    ch,BYTE PTR cs:[eax-0x16]
  431f4e:	pop    edi
  431f4f:	cli    
  431f50:	push   DWORD PTR [eax]
  431f52:	addps  xmm5,xmm0
  431f55:	popf   
  431f56:	pusha  
  431f57:	clc    
  431f58:	call   esi
  431f5a:	ret    0x9505
  431f5d:	call   0xe6a2:0x7fffec8
  431f64:	cmp    DWORD PTR [esi+0x4a],0xffffff83
  431f68:	rcr    BYTE PTR [ebp-0x7b],0xc6
  431f6c:	add    BYTE PTR [edx+0x9],bl
  431f6f:	test   esi,esi
  431f71:	sbb    eax,0x4a00be85
  431f76:	or     DWORD PTR [ecx+0x3938d738],eax
  431f7c:	push   eax
  431f7d:	es jge 0x6476fdd1
  431f84:	add    BYTE PTR [edi+0x51d247],bl
  431f8a:	add    BYTE PTR [eax],al
  431f8c:	mov    ds:0x9dffca06,al
  431f91:	(bad)  
  431f92:	mov    edx,0xf67f1575
  431f97:	jmp    0x432202
  431f9c:	pop    ecx
  431f9d:	lock add eax,0xfa7e550f
  431fa3:	dec    edx
  431fa5:	in     eax,dx
  431fa6:	push   ds
  431fa7:	popf   
  431fa8:	(bad)  
  431fa9:	fnstcw WORD PTR [eax+eax*1]
  431fac:	inc    ecx
  431fad:	inc    ebx
  431fae:	add    ah,BYTE PTR ds:0xfba874f3
  431fb4:	adc    BYTE PTR [ecx],cl
  431fb6:	stos   BYTE PTR es:[edi],al
  431fb7:	xchg   BYTE PTR [ebx],dh
  431fb9:	sub    dl,BYTE PTR ds:0xfe447078
  431fbf:	out    0x1d,al
  431fc1:	and    eax,0x9033f71
  431fc6:	call   0x1be7:0xdee5c0a
  431fcd:	sub    eax,0x3bf74771
  431fd2:	inc    ebx
  431fd3:	std    
  431fd4:	add    BYTE PTR [ecx+edi*8],ah
  431fd7:	mov    dl,0x33
  431fd9:	cmp    dl,BYTE PTR ds:0x436f7858
  431fdf:	out    0xf0,eax
  431fe1:	mov    al,0x36
  431fe3:	stc    
  431fe4:	dec    eax
  431fe5:	std    
  431fe6:	jle    0x431ff1
  431fe8:	push   esp
  431fe9:	jns    0x431fa5
  431feb:	icebp  
  431fec:	mov    bl,0x29
  431fee:	add    dh,BYTE PTR [eax+eax*1+0x0]
  431ff2:	add    ch,ch
  431ff4:	and    al,0x71
  431ff6:	aas    
  431ff7:	in     eax,0x88
  431ff9:	in     al,dx
  431ffa:	jle    0x432027
  431ffc:	test   DWORD PTR ds:0xbed4fc38,edx
  432002:	adc    eax,0xb2f96118
  432007:	mov    bl,0x49
  432009:	adc    eax,0xb67ce42c
  43200e:	pop    ss
  43200f:	lock aad 0x7b
  432012:	or     DWORD PTR [eax],ebx
  432014:	or     eax,DWORD PTR [ebx+0x1]
  432017:	fistp  DWORD PTR [ebx-0x42]
  43201a:	dec    DWORD PTR [ecx]
  43201c:	and    edi,ecx
  43201e:	mov    dl,0x33
  432020:	sub    dh,BYTE PTR [ecx]
  432022:	iret   
  432023:	fdivr  DWORD PTR ds:0x3a33b2f9
  432029:	inc    ebx
  43202a:	out    0xef,eax
  43202c:	push   es
  43202d:	push   cs
  43202e:	push   es
  43202f:	clc    
  432030:	push   ebx
  432031:	test   al,0xff
  432033:	mov    bl,0x2e
  432035:	jmp    0x431fb9
  432037:	pushf  
  432038:	add    eax,0x47040560
  43203d:	das    
  43203e:	inc    edx
  43203f:	push   ss
  432040:	sbb    cl,BYTE PTR ds:0x901d0d01
  432046:	cmp    al,0x5d
  432048:	jbe    0x4320b6
  43204a:	xor    esi,edx
  43204c:	push   es
  43204d:	imul   esi,DWORD PTR [edx],0xffffffce
  432050:	push   es
  432051:	jns    0x432085
  432053:	mov    BYTE PTR [esi],0x7b
  432056:	xor    al,BYTE PTR [eax]
  432058:	add    BYTE PTR [eax],al
  43205a:	mov    esi,0xb6326d06
  43205f:	push   es
  432060:	outs   dx,BYTE PTR ds:[esi]
  432061:	xor    ch,BYTE PTR [esi]
  432063:	pop    es
  432064:	jg     0x432098
  432066:	es pop es
  432068:	sahf   
  432069:	xor    bl,BYTE PTR [esi]
  43206b:	pop    es
  43206c:	cwde   
  43206d:	xor    dl,BYTE PTR [esi]
  43206f:	pop    es
  432070:	mov    edx,0x6e070e32
  432075:	xor    al,BYTE PTR [esi]
  432077:	pop    es
  432078:	mov    BYTE PTR [edx],dh
  43207a:	inc    BYTE PTR [esi]
  43207c:	xor    BYTE PTR [edx],0xf6
  43207f:	push   es
  432080:	js     0x4320b4
  432082:	out    dx,al
  432083:	push   es
  432084:	jg     0x4320b8
  432086:	out    0x6,al
  432088:	cmp    al,0x32
  43208a:	fiadd  WORD PTR [esi]
  43208c:	sub    ax,0x98f4
  432090:	jmp    0x432012
  432092:	or     DWORD PTR [edx+edx*8-0x377c8808],ebx
  432099:	sub    al,0xf9
  43209b:	sbb    ah,BYTE PTR [ebp+0x2c]
  43209e:	cdq    
  43209f:	xchg   ebx,eax
  4320a0:	in     al,dx
  4320a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4320a2:	jne    0x4320e6
  4320a4:	and    eax,0xffe4b179
  4320a9:	call   0xed3e279e
  4320ae:	lock push es
  4320b0:	add    al,ch
  4320b2:	test   BYTE PTR [eax],dh
  4320b4:	push   ecx
  4320b5:	(bad)  
  4320b7:	pop    esi
  4320b8:	add    ch,dl
  4320ba:	lock push es
  4320bc:	(bad)  
  4320bd:	in     eax,0x0
  4320bf:	add    BYTE PTR [eax],al
  4320c1:	sar    DWORD PTR [edi+0x26],0x2b
  4320c5:	inc    eax
  4320c6:	adc    cl,BYTE PTR [edx]
  4320c8:	or     eax,DWORD PTR ss:[edi+ebp*4+0x351ab0a7]
  4320d0:	push   ss
  4320d1:	bound  eax,QWORD PTR [ebx]
  4320d3:	lea    ebx,[ecx-0x10]
  4320d6:	and    DWORD PTR [edi+edx*2],eax
  4320d9:	mov    cl,BYTE PTR [ebx+0x508bd647]
  4320df:	jl     0x432090
  4320e1:	sbb    DWORD PTR [edx+0x59],0xffffffaa
  4320e5:	xchg   esi,eax
  4320e6:	add    DWORD PTR [ebx],0x3fcfe264
  4320ec:	jmp    0x62977a1f
  4320f1:	hlt    
  4320f2:	mov    dh,0x4e
  4320f4:	ds retf 0x2e11
  4320f8:	test   eax,0xe60bc358
  4320fd:	gs pop edx
  4320ff:	inc    edi
  432100:	(bad)  
  432101:	lock push es
  432103:	add    BYTE PTR [ecx-0x44043d57],ch
  432109:	mov    al,0xc
  43210b:	mov    dl,0xa1
  43210d:	or     esi,ebx
  43210f:	int3   
  432110:	cdq    
  432111:	sub    bl,dl
  432113:	(bad)  
  432114:	fmul   QWORD PTR [ecx+0x20]
  432117:	mov    edi,0xe9ac371d
  43211c:	sbb    ch,BYTE PTR [edx-0x8cd7b59]
  432122:	test   DWORD PTR [edi+0x0],ecx
  432128:	fiadd  DWORD PTR ds:0x199fff00
  43212e:	test   bl,al
  432130:	push   ecx
  432131:	fsubr  st(2),st
  432133:	xor    ah,BYTE PTR [ebx]
  432135:	in     al,dx
  432136:	cmc    
  432137:	cvttps2pi mm5,xmm7
  43213a:	add    BYTE PTR fs:[ebp-0x16],bh
  43213e:	adc    ecx,DWORD PTR [eax-0x42]
  432141:	inc    ebp
  432142:	cli    
  432143:	test   BYTE PTR [edx],cl
  432145:	push   edx
  432146:	pop    es
  432147:	paddsb mm0,mm5
  43214a:	mov    edi,0x431ccae0
  43214f:	cld    
  432150:	adc    DWORD PTR [edx+ecx*1-0xa],eax
  432154:	dec    edx
  432155:	idiv   DWORD PTR [edi+0x74]
  432158:	jecxz  0x43212e
  43215a:	cmp    dl,BYTE PTR [ecx]
  43215c:	sbb    bl,BYTE PTR [eax+0x19]
  43215f:	mov    al,0x8b
  432161:	clc    
  432162:	pop    ds
  432163:	subps  xmm0,xmm2
  432166:	add    eax,0xd3c666b6
  43216b:	pop    edx
  43216c:	sbb    al,BYTE PTR [ebx]
  43216e:	pop    es
  43216f:	mov    dh,0x4e
  432171:	(bad)  
  432172:	into   
  432173:	pop    edx
  432174:	or     al,BYTE PTR [ebx]
  432176:	pop    esi
  432177:	sar    DWORD PTR [ebx+0x1a],0x60
  43217b:	or     eax,DWORD PTR [edx+0x71d9ad1d]
  432181:	mov    ds:0xda19c02c,al
  432186:	xor    cl,BYTE PTR [ebp+0x26]
  432189:	imul   ecx,DWORD PTR [eax],0x84
  43218f:	pop    edx
  432190:	sbb    eax,0x697c193
  432195:	lea    eax,[eax]
  432197:	or     eax,DWORD PTR ds:0x9906eb00
  43219d:	mov    edx,0x8bc37f0f
  4321a2:	add    al,0xf3
  4321a4:	mov    ds:0x2ff30104,al
  4321a9:	and    eax,0xce79ef74
  4321ae:	cli    
  4321af:	pop    esi
  4321b0:	push   ss
  4321b1:	and    eax,0xbe3a1f14
  4321b6:	(bad)  
  4321b7:	(bad)  
  4321b9:	or     al,al
  4321bb:	(bad)  
  4321bc:	(bad)  
  4321bd:	sbb    ch,BYTE PTR [edi]
  4321bf:	jae    0x43223c
  4321c1:	repnz inc DWORD PTR [eax+0x46]
  4321c5:	push   ss
  4321c6:	leave  
  4321c7:	mov    ch,0x9
  4321c9:	daa    
  4321ca:	or     ah,BYTE PTR [esi+ebp*8-0x63]
  4321ce:	test   BYTE PTR [ebx+0x2d870992],dh
  4321d4:	xor    BYTE PTR ds:[eax+0x1],al
  4321d8:	scas   al,BYTE PTR es:[edi]
  4321d9:	scas   eax,DWORD PTR es:[edi]
  4321da:	add    dh,BYTE PTR [edx-0x2d]
  4321dd:	daa    
  4321de:	inc    DWORD PTR [esi+ebp*1+0x3206fade]
  4321e5:	into   
  4321e6:	addr16 icebp 
  4321e8:	cs (bad) 
  4321ea:	call   FWORD PTR [eax+0x6f]
  4321ed:	hlt    
  4321ee:	mov    edi,0xbd3ce4c4
  4321f3:	add    BYTE PTR [eax],al
  4321f5:	add    bl,ch
  4321f7:	sub    eax,0x576852d0
  4321fc:	jns    0x432270
  4321fe:	ret    
  4321ff:	push   0xee5e17fd
  432204:	add    eax,DWORD PTR [ebp-0x17ff05bb]
  43220a:	outs   dx,BYTE PTR ds:[esi]
  43220b:	int3   
  43220c:	daa    
  43220d:	cli    
  43220e:	js     0x4321a9
  432210:	push   ss
  432211:	mov    al,ds:0xf125992d
  432216:	mov    bh,0x49
  432218:	repnz add BYTE PTR [edi+0x7ce7cd1f],bl
  43221f:	pop    es
  432220:	(bad)
  432224:	and    edx,ecx
  432226:	call   0x3c8b:0x9e03ec44
  43222d:	aam    0x3d
  43222f:	mov    cl,0x99
  432231:	sub    bl,BYTE PTR [edi-0x5]
  432234:	cmc    
  432235:	dec    esi
  432236:	fst    DWORD PTR [ecx+0x17dc7ed0]
  43223c:	mov    bl,0xf
  43223e:	enter  0xf891,0x2a
  432242:	aas    
  432243:	or     ebx,DWORD PTR [edx]
  432245:	mov    al,0xf4
  432247:	mov    bl,0xb5
  432249:	sbb    ebp,DWORD PTR [edx+0x7403e906]
  43224f:	push   ss
  432250:	mov    ebp,0x82982036
  432255:	in     al,dx
  432256:	cmp    edi,esp
  432258:	jl     0x43224d
  43225a:	add    BYTE PTR [eax],al
  43225c:	add    BYTE PTR [esi],cl
  43225e:	neg    DWORD PTR [ebx-0x3f]
  432261:	xor    BYTE PTR [eax+edi*1-0xd2d20d7],dh
  432268:	ret    
  432269:	jl     0x4321ef
  43226b:	lods   al,BYTE PTR ds:[esi]
  43226c:	clc    
  43226d:	push   cs
  43226e:	add    eax,0xc07ba231
  432273:	sub    al,0xf9
  432275:	mov    ds:0x75a207bf,al
  43227a:	(bad)  
  43227b:	or     BYTE PTR [edx-0x5e1fdacd],ah
  432281:	cmc    
  432282:	inc    ebp
  432283:	or     bh,BYTE PTR [ebx-0x4e]
  432286:	shr    BYTE PTR [ebp-0x3f],0xd8
  43228a:	lea    ebp,[edx]
  43228c:	mov    esp,0xf029ddd2
  432291:	mov    al,ds:0x76080ec3
  432296:	rcl    BYTE PTR [edx*8-0x2400e854],0x4
  43229e:	cmc    
  43229f:	aas    
  4322a0:	jmp    0xd34e661c
  4322a5:	jecxz  0x432265
  4322a7:	popa   
  4322a8:	jo     0x4322db
  4322aa:	mov    bl,0xa
  4322ac:	lahf   
  4322ad:	xor    dl,dl
  4322af:	popa   
  4322b0:	bound  ebp,QWORD PTR [edx+0x102861da]
  4322b6:	push   cs
  4322b7:	(bad)  
  4322b9:	xor    DWORD PTR [edi+ecx*1+0x51c859cf],ebp
  4322c0:	push   0x0
  4322c2:	add    BYTE PTR [eax],al
  4322c4:	xor    ch,dl
  4322c6:	mov    WORD PTR [edi+0x704fb9ac],gs
  4322cc:	test   eax,0xc0fcfabe
  4322d1:	clc    
  4322d2:	aas    
  4322d3:	jmp    0x704e6d4f
  4322d8:	mov    ecx,0x31725aa2
  4322dd:	mov    al,0x56
  4322df:	nop
  4322e0:	lods   eax,DWORD PTR ds:[esi]
  4322e1:	push   esp
  4322e2:	pop    ss
  4322e3:	jmp    0x392eb0a5
  4322e8:	mov    al,ds:0x87e8b301
  4322ed:	inc    esp
  4322ee:	jle    0x4322c1
  4322f0:	out    dx,al
  4322f1:	fwait
  4322f2:	pop    es
  4322f3:	pusha  
  4322f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4322f5:	push   ds
  4322f6:	mov    BYTE PTR [ebx+ebx*1],bl
  4322f9:	sub    eax,0xf9086a06
  4322fe:	je     0x4322ef
  432300:	fnstcw WORD PTR [edx+0x128560f7]
  432306:	dec    ebp
  432307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432308:	xchg   ebp,eax
  432309:	cli    
  43230a:	cli    
  43230b:	adc    al,0xe7
  43230d:	(bad)  
  43230e:	cli    
  43230f:	sbb    al,0x3b
  432311:	adc    DWORD PTR [ecx+eiz*8-0x25],esi
  432315:	call   0xe8f2:0x656d00fb
  43231c:	push   ss
  43231d:	or     al,BYTE PTR [eax]
  43231f:	add    BYTE PTR [ebx-0x34],dl
  432322:	or     al,BYTE PTR [eax]
  432324:	out    0x93,eax
  432326:	out    0x81,al
  432328:	add    BYTE PTR [eax],al
  43232a:	add    BYTE PTR [esi+0xaffff1d],bl
  432330:	cmp    esi,DWORD PTR [ecx+0xa0764]
  432336:	push   esi
  432337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432338:	and    BYTE PTR [ebx+0x20],bl
  43233b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43233c:	pop    edi
  43233d:	fs je  0x432382
  432340:	inc    ecx
  432341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432342:	std    
  432343:	sbb    eax,0x1d33ea93
  432348:	and    ebp,ebp
  43234a:	je     0x43233c
  43234c:	repnz and eax,ebp
  43234f:	fstp   st(6)
  432351:	sub    eax,eax
  432353:	push   ebx
  432354:	pusha  
  432355:	push   0xffffffc7
  432357:	xchg   esp,eax
  432358:	add    DWORD PTR [ebp-0x789865c0],edx
  43235e:	inc    esi
  43235f:	push   esi
  432360:	xchg   DWORD PTR [bp+0x76],eax
  432364:	xchg   edx,eax
  432365:	clc    
  432366:	test   DWORD PTR [ebp+0xf804f64],ebx
  43236c:	daa    
  43236d:	cli    
  43236e:	jae    0x432336
  432370:	jb     0x432334
  432372:	add    BYTE PTR [edx+0x7323e809],cl
  432378:	fcomip st,st(5)
  43237a:	mov    ebp,DWORD PTR [edx+0x3974f087]
  432380:	icebp  
  432381:	out    dx,eax
  432382:	les    ebx,FWORD PTR [ebp-0x6a3fd613]
  432388:	adc    al,0x92
  43238a:	dec    esi
  43238b:	sbb    cl,BYTE PTR [ebx]
  43238d:	pop    esi
  43238e:	mov    DWORD PTR [eax],eax
  432390:	add    BYTE PTR [eax],al
  432392:	adc    al,0x53
  432394:	loope  0x432398
  432396:	repz xor BYTE PTR [eax+ecx*4],ch
  43239a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43239b:	out    dx,eax
  43239c:	xor    cl,0x9f
  43239f:	xor    al,0x75
  4323a1:	repnz or esp,ecx
  4323a4:	inc    eax
  4323a5:	cli    
  4323a6:	adc    al,0xa3
  4323a8:	inc    ebx
  4323a9:	jae    0x4323aa
  4323ab:	test   al,0xaa
  4323ad:	outs   dx,DWORD PTR ds:[esi]
  4323ae:	sbb    esi,ebp
  4323b0:	inc    eax
  4323b1:	cli    
  4323b2:	cld    
  4323b3:	stos   BYTE PTR es:[edi],al
  4323b4:	inc    ebx
  4323b5:	je     0x432399
  4323b7:	test   al,0xfa
  4323b9:	gs repnz test al,0x32
  4323bd:	cli    
  4323be:	add    edx,DWORD PTR [ecx]
  4323c0:	ds pop edx
  4323c2:	cmp    eax,0x13bd3b69
  4323c7:	push   ds
  4323c8:	jne    0x432416
  4323ca:	adc    edx,DWORD PTR [esi+0x1df30053]
  4323d0:	in     eax,0xc7
  4323d2:	inc    edi
  4323d3:	cmp    eax,0x313fc6e5
  4323d8:	ja     0x43236a
  4323da:	mov    ebx,0xf4fffe1e
  4323df:	aam    0x2d
  4323e1:	ss stos DWORD PTR es:[edi],eax
  4323e3:	xchg   ebx,eax
  4323e4:	sti    
  4323e5:	popa   
  4323e6:	fmul   DWORD PTR ds:0xec780cad
  4323ec:	push   ss
  4323ed:	or     BYTE PTR [eax+0x64],bh
  4323f0:	pushf  
  4323f1:	xor    BYTE PTR ss:[eax+0x86fd],0x0
  4323f9:	mov    al,0x8
  4323fb:	inc    ebp
  4323fc:	or     ah,BYTE PTR [ebp+0x5b00985e]
  432402:	test   al,0xd3
  432404:	cli    
  432405:	pop    esp
  432406:	cdq    
  432407:	mov    bh,0x1f
  432409:	imul   esp,ebx,0xffffffdf
  43240c:	out    0xf7,al
  43240e:	imul   edi,DWORD PTR [edi-0xdf90cdd],0x6d
  432415:	mov    bh,0xea
  432417:	add    al,BYTE PTR [ebx]
  432419:	xor    ch,BYTE PTR [ebp-0x5327bc9b]
  43241f:	pop    edi
  432420:	mov    esi,0x433a0400
  432425:	lods   al,BYTE PTR ds:[esi]
  432426:	push   ds
  432427:	(bad)  
  432428:	pop    ebx
  432429:	pop    ss
  43242a:	adc    al,0x5f
  43242c:	mov    esi,0xafa889fc
  432431:	jnp    0x4323bb
  432433:	jecxz  0x432430
  432435:	cld    
  432436:	cmp    bl,0xf3
  432439:	loop   0x432401
  43243b:	call   0xf8e41eef
  432440:	es pop edi
  432442:	push   DWORD PTR [ebx-0x42]
  432445:	xor    BYTE PTR [edi+0x4b555239],dh
  43244b:	in     al,0x82
  43244d:	dec    edi
  43244e:	add    ebp,ecx
  432450:	scas   eax,DWORD PTR es:[edi]
  432451:	cli    
  432452:	mov    al,ds:0x3472704
  432457:	ins    BYTE PTR es:[edi],dx
  432458:	mov    esi,0x5211b720
  43245d:	add    BYTE PTR [eax],al
  43245f:	add    BYTE PTR ds:0x1f26dc4b,ch
  432465:	sti    
  432466:	outs   dx,BYTE PTR ds:[esi]
  432467:	shr    ah,0x13
  43246a:	jae    0x43247f
  43246c:	(bad)  
  43246d:	fdiv   st,st(1)
  43246f:	scas   eax,DWORD PTR es:[edi]
  432470:	rol    BYTE PTR [ecx-0x1101f25f],1
  432476:	rcl    ah,1
  432478:	mov    bh,0x13
  43247a:	fld    DWORD PTR [edi+esi*8-0xf521312]
  432481:	xlat   BYTE PTR ds:[ebx]
  432482:	test   al,0x19
  432484:	lock add edi,DWORD PTR [ebx-0x41]
  432488:	add    al,0x7f
  43248a:	and    DWORD PTR ds:0xc100094c,ecx
  432490:	pop    edi
  432491:	dec    edx
  432492:	cli    
  432493:	scas   al,BYTE PTR es:[edi]
  432494:	retf   0xf98
  432497:	adc    ebx,DWORD PTR [ebx]
  432499:	add    BYTE PTR [edx-0x9],0x20
  43249d:	mov    ch,0xfa
  43249f:	mov    edx,0x6a1f9ad6
  4324a4:	in     eax,0xdf
  4324a6:	cli    
  4324a7:	cld    
  4324a8:	hlt    
  4324a9:	mov    eax,0x551e9afa
  4324ae:	inc    esp
  4324af:	int    0xf3
  4324b1:	cdq    
  4324b2:	pop    ds
  4324b3:	push   0xffffffb3
  4324b5:	sti    
  4324b6:	gs call 0xed2ad9dc
  4324bc:	and    DWORD PTR [eax],edx
  4324be:	cli    
  4324bf:	out    0x5f,al
  4324c1:	mov    ch,0x13
  4324c3:	add    BYTE PTR es:[eax],al
  4324c6:	add    BYTE PTR [edx+ebx*1-0x7],ah
  4324ca:	inc    esi
  4324cb:	push   ss
  4324cc:	push   es
  4324cd:	add    cl,ch
  4324cf:	lock mov ecx,ebp
  4324d2:	mov    ebp,0xd97289c6
  4324d7:	cmp    eax,0x1627f78b
  4324dc:	or     eax,0xdbf91e7
  4324e1:	cli    
  4324e2:	(bad)  
  4324e3:	out    dx,al
  4324e4:	push   ds
  4324e5:	fimul  WORD PTR [edi]
  4324e7:	into   
  4324e8:	or     al,0x86
  4324ea:	push   es
  4324eb:	lods   al,BYTE PTR ds:[esi]
  4324ec:	mov    ebx,ebp
  4324ee:	push   0xe8fd41fb
  4324f3:	lock dec DWORD PTR [bx+si-0x4e]
  4324f8:	adc    ch,BYTE PTR ds:0xfbcaf9ac
  4324fe:	jo     0x4324f5
  432500:	xor    esp,edi
  432502:	(bad)  
  432503:	pop    ss
  432504:	jg     0x432492
  432506:	lods   eax,DWORD PTR ds:[esi]
  432507:	or     eax,0xe300fa0d
  43250c:	adc    dl,0xfd
  43250f:	xchg   ebp,eax
  432510:	jmp    0x432499
  432512:	popf   
  432513:	outs   dx,BYTE PTR ds:[esi]
  432514:	jmp    0xa117250e
  432519:	retf   0x95fd
  43251c:	jmp    0x4324a5
  43251e:	mov    ebp,0xfff5e986
  432523:	cld    
  432524:	mov    ss,WORD PTR [ebx-0xa148808]
  43252a:	data16 add BYTE PTR [eax],al
  43252d:	add    BYTE PTR [esi-0x6a021968],ah
  432533:	jmp    0xfffb:0xcda78c60
  43253a:	xchg   ebp,eax
  43253b:	jae    0x4324c3
  43253d:	test   esi,ecx
  43253f:	call   0x9a702539
  432544:	mov    ds:0xf5eb47c0,eax
  432549:	inc    si
  43254b:	mov    ecx,0xeb35fdb6
  432550:	xchg   esi,eax
  432551:	(bad)  
  432552:	dec    edi
  432553:	(bad)  
  432554:	sti    
  432555:	inc    DWORD PTR ds:0x5304438f
  43255b:	xchg   ecx,eax
  43255c:	loop   0x43255b
  43255e:	adc    eax,0xce458beb
  432563:	rol    BYTE PTR [ebx-0xa14f8d0],cl
  432569:	add    DWORD PTR [edx+0xf890004],ebx
  43256f:	loop   0x43256c
  432571:	call   DWORD PTR [ebp+0x72fc3a99]
  432577:	push   ebp
  432578:	pop    ss
  432579:	inc    eax
  43257a:	call   0xf5e5:0x97e4838c
  432581:	(bad)  
  432582:	jg     0x432585
  432584:	or     al,BYTE PTR [eax-0xd]
  432587:	pop    ds
  432588:	mov    DWORD PTR [edi+eiz*2-0x14],ecx
  43258c:	push   eax
  43258d:	out    0x6,eax
  43258f:	and    dh,bh
  432591:	inc    DWORD PTR [eax]
  432593:	add    BYTE PTR [eax],al
  432595:	sub    bl,BYTE PTR [edx+ecx*4-0x6]
  432599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43259a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43259b:	das    
  43259c:	pop    esp
  43259d:	pop    edx
  43259e:	lock push ds
  4325a0:	cli    
  4325a1:	cmp    al,0x5b
  4325a3:	dec    edi
  4325a4:	retf   
  4325a5:	daa    
  4325a6:	arpl   WORD PTR [edi-0x35],cx
  4325a9:	aas    
  4325aa:	xor    al,0xf
  4325ac:	add    BYTE PTR [ebx-0x24],dl
  4325af:	add    esi,DWORD PTR [ebp-0x10]
  4325b2:	pop    ebp
  4325b3:	add    eax,DWORD PTR [eax]
  4325b5:	or     bl,BYTE PTR [ebx+0x8]
  4325b8:	add    bl,dh
  4325ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325bb:	push   ds
  4325bc:	push   ecx
  4325bd:	js     0x43254c
  4325bf:	fcmovb st,st(0)
  4325c1:	xchg   DWORD PTR [eax],edx
  4325c3:	xchg   ecx,esi
  4325c5:	jg     0x4325d3
  4325c7:	mov    cl,0x86
  4325c9:	in     al,dx
  4325ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325cb:	cld    
  4325cc:	test   DWORD PTR [ebx],eax
  4325ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4325cf:	sti    
  4325d0:	dec    ecx
  4325d1:	imul   ebp,DWORD PTR [edi],0xffffffbe
  4325d4:	inc    eax
  4325d5:	outs   dx,BYTE PTR ds:[esi]
  4325d6:	fcomp  DWORD PTR [eax+0x417828f0]
  4325dc:	retf   
  4325dd:	mov    bh,0xf2
  4325df:	dec    edi
  4325e0:	retf   
  4325e1:	scas   eax,DWORD PTR es:[edi]
  4325e2:	fimul  DWORD PTR [edi-0x35]
  4325e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4325e6:	loop   0x432637
  4325e8:	retf   
  4325e9:	mov    edi,0x78541ea5
  4325ee:	adc    dh,BYTE PTR [ebx-0x4ae9b97a]
  4325f4:	xchg   BYTE PTR [ebx+0x711c45],bl
  4325fa:	add    BYTE PTR [eax],al
  4325fc:	sbb    eax,0x760bd0a5
  432601:	sub    cl,BYTE PTR [edi+ecx*2]
  432604:	push   0x7
  432606:	sub    al,0x20
  432608:	and    bl,BYTE PTR [eiz*8+0x5e06bb90]
  43260f:	cwde   
  432610:	push   0x61deae7c
  432615:	cwde   
  432616:	or     dl,BYTE PTR [ecx+0x3e8eb90]
  43261c:	repz push es
  43261e:	pop    esi
  43261f:	shl    al,1
  432621:	mov    bl,0x12
  432623:	mov    ch,0x39
  432625:	mov    edx,0x33086f8
  43262a:	fs inc ebx
  43262c:	stos   BYTE PTR es:[edi],al
  43262d:	add    al,0x5e
  43262f:	inc    ecx
  432630:	and    eax,0x21dedc9b
  432635:	cdq    
  432636:	mov    DWORD PTR [esi-0x4791fd59],ecx
  43263c:	hlt    
  43263d:	jnp    0x4326b6
  43263f:	mov    ?,WORD PTR [ecx]
  432641:	int3   
  432642:	mov    DWORD PTR [edi-0x68d07627],edx
  432648:	fnstsw WORD PTR [ebx+0x2d]
  43264b:	out    dx,al
  43264c:	mov    ecx,0x6efb5e76
  432651:	cli    
  432652:	out    0x8b,eax
  432654:	clc    
  432655:	add    eax,0xc6e48bb3
  43265a:	arpl   WORD PTR [ecx],bx
  43265c:	inc    edi
  43265d:	pop    ss
  43265e:	pop    ebp
  43265f:	rol    BYTE PTR [eax],1
  432661:	add    BYTE PTR [eax],al
  432663:	clc    
  432664:	jnp    0x4325f9
  432666:	or     edx,DWORD PTR [esi+ecx*1]
  432669:	fstp   QWORD PTR ds:0xbeba6b41
  43266f:	dec    ecx
  432670:	jl     0x43267d
  432672:	shl    BYTE PTR [ebp+0x42],0x1c
  432676:	dec    edi
  432677:	test   al,0x42
  432679:	xor    al,0x4f
  43267b:	test   al,0x42
  43267d:	sub    al,0x4f
  43267f:	mov    eax,0xd161ff42
  432684:	mov    edx,0x1b70fd86
  432689:	jmp    edi
  43268b:	lock push es
  43268d:	dec    edi
  43268e:	jb     0x43263c
  432690:	pop    es
  432691:	push   ebx
  432692:	bound  eax,QWORD PTR [ebx+edi*8-0x187b4d7c]
  432699:	test   dh,al
  43269b:	jnp    0x432680
  43269d:	cli    
  43269e:	aam    0x5c
  4326a0:	cmc    
  4326a1:	aas    
  4326a2:	jmp    0xe9ab363d
  4326a7:	mov    cs,WORD PTR [edi]
  4326a9:	push   0xc10f86e9
  4326ae:	jmp    0xea3d35dd
  4326b3:	fsub   DWORD PTR [ecx+edi*8]
  4326b6:	mov    ss,edx
  4326b8:	nop
  4326b9:	ret    
  4326ba:	fnsave [ebx]
  4326bc:	mov    eax,0x504c8486
  4326c1:	push   ecx
  4326c2:	bound  ebx,QWORD PTR [edi+edi*8-0x7c]
  4326c6:	ja     0x4326c8
  4326c8:	add    BYTE PTR [eax],al
  4326ca:	pop    ecx
  4326cb:	add    eax,0xefce47f
  4326d0:	jae    0x4326d6
  4326d2:	adc    dh,bl
  4326d4:	sub    edi,edi
  4326d6:	mov    al,0xe
  4326d8:	push   0x680e8ee9
  4326dd:	jmp    0xe9ab3568
  4326e2:	cmp    ecx,DWORD PTR [esi]
  4326e4:	adc    al,0xe9
  4326e6:	lock push es
  4326e8:	call   0xfa543861
  4326ed:	push   0x2b
  4326ef:	cli    
  4326f0:	pop    ecx
  4326f1:	mov    esi,0xb4e4856f
  4326f6:	das    
  4326f7:	(bad)  
  4326f8:	cli    
  4326f9:	jmp    0x432681
  4326fb:	sbb    cl,BYTE PTR [edx+0x0]
  4326fe:	popf   
  4326ff:	xchg   edi,eax
  432700:	clc    
  432701:	add    esi,ecx
  432703:	mov    edi,0xa9af443
  432708:	add    BYTE PTR [eax],al
  43270a:	adc    ecx,DWORD PTR [esi-0xa]
  43270d:	mov    DWORD PTR [edi],ecx
  43270f:	jmp    0x43269c
  432711:	fwait
  432712:	pop    edx
  432713:	or     al,BYTE PTR [eax]
  432715:	add    cl,dl
  432717:	mov    esi,0xd4f9c321
  43271c:	in     eax,dx
  43271d:	test   BYTE PTR [edx],0x84
  432720:	repnz or BYTE PTR ds:0x22458112,al
  432727:	jnp    0x432774
  432729:	adc    al,0xda
  43272b:	pop    ecx
  43272c:	push   eax
  43272d:	push   ebx
  43272e:	add    BYTE PTR [eax],al
  432730:	add    cl,al
  432732:	mov    esi,0xe78cc1e2
  432737:	cmc    
  432738:	adc    DWORD PTR [esi+0x1a],0xffffffe7
  43273c:	sahf   
  43273d:	or     ecx,DWORD PTR [edx]
  43273f:	add    BYTE PTR [ebx-0x1730f509],cl
  432745:	sbb    eax,0x5903c097
  43274a:	jnp    0x432736
  43274c:	push   esi
  43274d:	fst    DWORD PTR [ebp+esi*8+0x55]
  432751:	test   BYTE PTR [edx-0x35a8f342],0x78
  432758:	or     al,0x51
  43275a:	push   ebp
  43275b:	or     cl,BYTE PTR [ebx-0x17468504]
  432761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432762:	out    0xf5,eax
  432764:	inc    DWORD PTR [ecx+0x45]
  432767:	adc    dl,BYTE PTR [edi+0x69]
  43276a:	pop    ecx
  43276b:	cmc    
  43276c:	push   ebp
  43276d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43276e:	cmp    BYTE PTR [esi+0x78ca470c],0xc
  432775:	and    DWORD PTR [ebp+0xa],edx
  432778:	mov    esi,ebx
  43277a:	in     al,0x8b
  43277c:	mov    esi,0xfa20678b
  432781:	xchg   esp,eax
  432782:	cwde   
  432783:	leave  
  432784:	pop    ss
  432785:	and    al,0x76
  432787:	lods   eax,DWORD PTR ds:[esi]
  432788:	cli    
  432789:	push   ds
  43278a:	sub    al,0x83
  43278c:	ret    
  43278d:	out    dx,eax
  43278e:	mov    ds:0x98e7793e,al
  432793:	mov    eax,0xf
  432798:	js     0x4327f6
  43279a:	xchg   cl,al
  43279c:	pop    ebx
  43279d:	add    ebx,DWORD PTR [edx]
  43279f:	cli    
  4327a0:	pop    esp
  4327a1:	clc    
  4327a2:	push   cs
  4327a3:	jno    0x43279d
  4327a5:	and    BYTE PTR [edi-0x7191f7f1],bh
  4327ab:	adc    edi,DWORD PTR [eax-0x16]
  4327ae:	sti    
  4327af:	push   ecx
  4327b0:	mov    al,ds:0xdf541af1
  4327b5:	mov    al,ds:0x5f760b47
  4327ba:	cdq    
  4327bb:	call   0x1cd598a8
  4327c0:	lock (bad) 
  4327c3:	ss mov dh,0x87
  4327c6:	xchg   edx,eax
  4327c7:	adc    al,0x78
  4327c9:	loop   0x4327c6
  4327cb:	push   ecx
  4327cc:	mov    al,ds:0xe7541aef
  4327d1:	mov    al,ds:0xdf6e0b47
  4327d6:	cdq    
  4327d7:	out    0xd8,eax
  4327d9:	and    DWORD PTR [edi-0x5ef70cb8],ecx
  4327df:	nop/reserved BYTE PTR [ecx+edx*4-0x9ac97f1]
  4327e7:	push   ecx
  4327e8:	and    al,0x6f
  4327ea:	sbb    DWORD PTR [edi+ebx*8-0x60],edx
  4327ee:	inc    edi
  4327ef:	or     esi,DWORD PTR [esi-0x22]
  4327f2:	call   0xeb97:0x4206f8e8
  4327f9:	jg     0x4327ae
  4327fb:	repz add BYTE PTR [eax],al
  4327fe:	add    BYTE PTR [ebp+0x44],ch
  432801:	pushf  
  432802:	loop   0x432879
  432804:	inc    eax
  432805:	mov    ebp,0x9b7e2e4e
  43280a:	adc    edi,ecx
  43280c:	push   esp
  43280d:	aam    0x4
  43280f:	jnp    0x4327c3
  432811:	fisttp QWORD PTR [esi]
  432813:	inc    ecx
  432814:	mul    DWORD PTR [eax-0x8]
  432817:	repz sti 
  432819:	call   0xbf8a:0xf87ef5b8
  432820:	push   ss
  432821:	sub    BYTE PTR [ecx-0x25386dd2],cl
  432827:	popa   
  432828:	cld    
  432829:	imul   edx,DWORD PTR [esi-0x7546f3b7],0x55
  432830:	push   ds
  432831:	cmp    BYTE PTR [edi],bl
  432833:	cmp    DWORD PTR [eiz*8-0x66301b60],ecx
  43283a:	xchg   edx,eax
  43283b:	xlat   BYTE PTR ds:[ebx]
  43283c:	pop    ds
  43283d:	in     eax,0x90
  43283f:	mov    ebx,0xeca0be06
  432844:	iret   
  432845:	mov    dl,BYTE PTR [ebp-0x3d48005]
  43284b:	mov    ds:0x9f1f18b3,al
  432850:	repnz gs inc edi
  432853:	call   0xbdad0d9
  432858:	rcr    BYTE PTR [ecx-0x6f],1
  43285b:	or     DWORD PTR [eax],esp
  43285d:	in     eax,0x90
  43285f:	cmp    eax,DWORD PTR [edi]
  432861:	(bad)  
  432862:	mov    al,ds:0xec000000
  432867:	jg     0x43280c
  432869:	pop    ds
  43286a:	sbb    eax,0x75f2ba0f
  43286f:	mov    ecx,0xb621b5e0
  432874:	push   DWORD PTR ds:0x257ef77b
  43287a:	in     al,0x81
  43287c:	mov    edi,0x4484d69d
  432881:	sbb    eax,0x62f7b279
  432886:	sub    al,BYTE PTR [ebp-0x1ad63d0e]
  43288c:	out    dx,eax
  43288d:	ret    0x8fe7
  432890:	es ret 0x9d2d
  432894:	adc    al,0x62
  432896:	mov    ds:0x63658817,eax
  43289b:	xchg   ebx,eax
  43289c:	cli    
  43289d:	out    0xe,al
  43289f:	jg     0x43285c
  4328a1:	ins    BYTE PTR es:[edi],dx
  4328a2:	out    dx,eax
  4328a3:	psubd  mm2,mm6
  4328a6:	xor    BYTE PTR [esi+0x4c],bh
  4328a9:	aad    0x3a
  4328ab:	xor    DWORD PTR [esi+0x0],ebp
  4328ae:	jp     0x43283a
  4328b0:	div    DWORD PTR [edx+0x5c]
  4328b3:	sti    
  4328b4:	mov    BYTE PTR [ebx+edx*1],dl
  4328b7:	pop    ds
  4328b8:	push   0x3610d6af
  4328bd:	ret    
  4328be:	xor    dl,0x86
  4328c1:	sub    al,0xb
  4328c3:	jg     0x432860
  4328c5:	fs jg  0x4328d8
  4328c8:	cli    
  4328c9:	mov    es,WORD PTR [eax]
  4328cb:	add    BYTE PTR [eax],al
  4328cd:	push   0xefe98c77
  4328d2:	adc    dl,bh
  4328d4:	sub    BYTE PTR [eax-0x46],bh
  4328d7:	repz mov dl,0xb7
  4328da:	pushf  
  4328db:	or     DWORD PTR [edx+0x34],esp
  4328de:	jbe    0x7cc309c0
  4328e4:	popa   
  4328e5:	sbb    al,dl
  4328e7:	stc    
  4328e8:	push   esi
  4328e9:	inc    BYTE PTR [eax-0x3c94068c]
  4328ef:	repz add BYTE PTR [ecx-0x25],bl
  4328f3:	dec    DWORD PTR [eax-0x77fa0d71]
  4328f9:	int    0xec
  4328fb:	cmc    
  4328fc:	call   DWORD PTR [ecx-0x71]
  4328ff:	cmp    DWORD PTR [eax-0x2b],0xffffffeb
  432903:	cmc    
  432904:	mov    ecx,DWORD PTR [esi]
  432906:	cmp    dl,0xfe
  432909:	add    eax,0xe65587ec
  43290e:	jge    0x432953
  432910:	clc    
  432911:	add    ebp,ecx
  432913:	cmp    eax,0xfff5fbe3
  432919:	test   DWORD PTR [edx+0x5459ccc6],edi
  43291f:	dec    ebp
  432920:	mov    ebp,DWORD PTR [esi]
  432922:	pop    ds
  432923:	or     cl,BYTE PTR [ebx-0x74f1e0f2]
  432929:	push   ss
  43292a:	pop    ds
  43292b:	adc    dl,BYTE PTR [ebp+0x18]
  43292e:	push   ebx
  43292f:	dec    edi
  432930:	push   ecx
  432931:	add    BYTE PTR [eax],al
  432933:	add    BYTE PTR [edx+0x5a42f61e],ah
  432939:	(bad)  
  43293a:	cmc    
  43293b:	xor    eax,0x64a
  432940:	imul   eax,DWORD PTR [esi],0xffffffa0
  432943:	inc    ebx
  432944:	sbb    dh,BYTE PTR [edi]
  432946:	mov    esi,0x21ece89
  43294b:	fs xchg ebx,eax
  43294d:	and    dl,bh
  43294f:	dec    DWORD PTR [edx]
  432951:	push   es
  432952:	add    DWORD PTR [esi+edi*1+0x36],0xffffff81
  432957:	pop    eax
  432958:	add    bh,BYTE PTR [edi+0x46]
  43295b:	and    al,0x36
  43295d:	aaa    
  43295e:	pop    ss
  43295f:	mov    edi,edx
  432961:	stc    
  432962:	jp     0x432962
  432964:	push   esp
  432965:	jb     0x432998
  432967:	mov    ebx,DWORD PTR [esi-0xc7cd1df]
  43296d:	mov    ch,0x1c
  43296f:	jae    0x432960
  432971:	hlt    
  432972:	or     eax,0xd2931d71
  432977:	jno    0x4329ef
  432979:	imul   ecx,DWORD PTR [edi+0xf],0x68
  43297d:	and    al,0x85
  43297f:	inc    edi
  432980:	out    0x9c,eax
  432982:	xchg   edi,eax
  432983:	add    esi,ebx
  432985:	push   0x4a
  432987:	addr16 repnz push ds
  43298a:	(bad)  
  43298b:	jmp    FWORD PTR [eax+0x5c]
  43298e:	push   es
  43298f:	call   0x414d7d
  432994:	dec    edx
  432995:	push   ds
  432996:	(bad)  
  432997:	inc    DWORD PTR [eax]
  432999:	add    BYTE PTR [eax],al
  43299b:	repz xchg esp,eax
  43299d:	mov    edi,0x2338b07
  4329a2:	add    bl,dh
  4329a4:	add    al,0x4f
  4329a6:	arpl   WORD PTR [edx+ebx*1-0x2],di
  4329aa:	push   ebx
  4329ac:	pop    ds
  4329ad:	add    ebx,0x56b5d0fb
  4329b3:	xor    BYTE PTR [edi+eax*8-0x3bb708dd],ah
  4329ba:	add    ebp,ebp
  4329bc:	pop    ds
  4329bd:	(bad)  
  4329be:	(bad)  
  4329bf:	jnp    0x4329df
  4329c1:	(bad)  
  4329c2:	push   ebx
  4329c4:	rcl    edx,cl
  4329c6:	xchg   BYTE PTR [edi-0x4478f9c5],dh
  4329cc:	pop    ss
  4329cd:	rol    edi,1
  4329cf:	or     esi,DWORD PTR [ebx+0x1a]
  4329d2:	cli    
  4329d3:	adc    al,0xd2
  4329d5:	mov    ah,BYTE PTR [edi-0x15]
  4329d8:	adc    BYTE PTR [ebx-0x11f0fbf5],0xfa
  4329df:	sub    DWORD PTR [ebx],0x26
  4329e2:	cmp    esp,esi
  4329e4:	xchg   edi,eax
  4329e5:	push   ss
  4329e6:	jle    0x43299f
  4329e8:	pop    es
  4329e9:	cmc    
  4329ea:	mov    eax,0xc04c36d
  4329ef:	je     0x4329a4
  4329f1:	or     al,0xf4
  4329f3:	imul   eax,DWORD PTR ds:0x6f30791,0xffffffe9
  4329fa:	inc    esi
  4329fb:	pop    ds
  4329fc:	jl     0x4329aa
  4329fe:	fild   WORD PTR [eax]
  432a00:	add    BYTE PTR [eax],al
  432a02:	hlt    
  432a03:	jnp    0x432a04
  432a05:	sbb    al,BYTE PTR [ebx-0x15]
  432a08:	sub    DWORD PTR [ebp-0x1468f7fc],edx
  432a0e:	mov    edx,?
  432a10:	sbb    DWORD PTR [ebx],ebx
  432a12:	cdq    
  432a13:	test   BYTE PTR [eax+ecx*1],ch
  432a16:	ss inc ebp
  432a18:	in     al,0x3
  432a1a:	es mov cl,0x99
  432a1d:	mov    dh,0x6d
  432a1f:	sbb    eax,0x2bcd43b5
  432a24:	mov    ch,0x35
  432a26:	lds    edx,FWORD PTR [eax]
  432a28:	mov    ch,0x1a
  432a2a:	imul   esi,DWORD PTR [esi],0xa9cabb3d
  432a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432a31:	mov    ss,WORD PTR [esi+0x7c]
  432a34:	xlat   BYTE PTR ds:[ebx]
  432a35:	mov    ?,WORD PTR [ebx]
  432a37:	popf   
  432a38:	out    0x2b,eax
  432a3a:	rol    DWORD PTR [ebx],1
  432a3c:	jmp    0xf58a3e44
  432a41:	ds or  eax,0x535f53e
  432a47:	or     BYTE PTR [ecx-0x6b8438df],ch
  432a4d:	mov    dh,0xc2
  432a4f:	scas   eax,DWORD PTR es:[edi]
  432a50:	push   cs
  432a51:	add    al,0x95
  432a53:	push   es
  432a54:	add    DWORD PTR [edi+0x18],ecx
  432a57:	(bad)
  432a5a:	adc    al,0xc2
  432a5c:	push   ss
  432a5d:	add    al,0xf3
  432a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432a60:	sbb    bh,BYTE PTR [edi+0x1bff439f]
  432a66:	add    BYTE PTR [eax],al
  432a68:	add    BYTE PTR [esp+ebx*4+0x23],ah
  432a6c:	loope  0x432a14
  432a6e:	mov    dh,0xfa
  432a70:	ffree  st(4)
  432a72:	repz out 0x95,eax
  432a75:	cli    
  432a76:	or     al,0xfa
  432a78:	push   0x14
  432a7a:	cld    
  432a7b:	pop    esp
  432a7c:	sub    edi,eax
  432a7e:	push   es
  432a7f:	int3   
  432a80:	xor    eax,0x2dcb3c2c
  432a85:	xor    al,0x3c
  432a87:	retf   
  432a88:	(bad)  
  432a89:	fnstenv [edx+0x1b753d86]
  432a8f:	pop    ss
  432a90:	jb     0x432a45
  432a92:	dec    DWORD PTR [esi+0x72]
  432a95:	pop    ebx
  432a96:	repz push ecx
  432a98:	bound  edi,QWORD PTR [ebp-0x1]
  432a9b:	fld    DWORD PTR cs:[ecx-0x80]
  432a9f:	add    DWORD PTR [edi],ebp
  432aa1:	mov    bl,0xc
  432aa3:	jmp    DWORD PTR ds:0xe90013b3
  432aa9:	lock push es
  432aab:	lea    esi,[edx+0x60]
  432aae:	mov    bh,dh
  432ab0:	out    0x83,eax
  432ab2:	add    BYTE PTR [edi-0x36f80cd1],al
  432ab8:	sbb    ch,bl
  432aba:	into   
  432abb:	cli    
  432abc:	xor    al,0xfb
  432abe:	jg     0x432b09
  432ac0:	cmc    
  432ac1:	ja     0x432a78
  432ac3:	pop    es
  432ac4:	jmp    0xb2db:0xf30bd8ab
  432acb:	or     esp,DWORD PTR [edx+0x0]
  432ace:	add    BYTE PTR [eax],al
  432ad0:	ins    BYTE PTR es:[edi],dx
  432ad1:	div    ecx
  432ad3:	sub    ebx,esi
  432ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432ad6:	or     ah,BYTE PTR [ebp+eiz*1+0x6]
  432ada:	add    cl,ch
  432adc:	ins    DWORD PTR es:[edi],dx
  432add:	mov    edx,0xb3e60e7
  432ae2:	xchg   BYTE PTR [eax],al
  432ae4:	sar    esi,1
  432ae6:	mov    BYTE PTR [ebp+0x62],al
  432ae9:	jns    0x432b2e
  432aeb:	sbb    BYTE PTR [ebx+0x6183e647],dl
  432af1:	and    DWORD PTR [ebp+0x60],ebp
  432af4:	inc    ecx
  432af5:	or     DWORD PTR [ebx+0xaca9b],ecx
  432afb:	add    BYTE PTR [edi-0x9],cl
  432afe:	push   edx
  432aff:	mov    ebp,DWORD PTR [esi+0x78]
  432b02:	or     eax,0x978968d
  432b07:	mov    DWORD PTR [edi+0x5300821a],edx
  432b0d:	(bad)  
  432b0e:	icebp  
  432b0f:	test   ebx,edx
  432b11:	xchg   esi,eax
  432b12:	or     eax,0x132e58b
  432b17:	(bad)  
  432b18:	std    
  432b19:	pop    ds
  432b1a:	mov    edi,0x8309fd45
  432b1f:	sar    BYTE PTR [esi-0x22],0x76
  432b23:	inc    ebx
  432b24:	add    esi,eax
  432b26:	icebp  
  432b27:	mov    edx,edx
  432b29:	mov    esi,ecx
  432b2b:	(bad)  
  432b2c:	test   DWORD PTR [edi+0x79],0x740a5d7d
  432b33:	and    BYTE PTR [eax],al
  432b35:	add    BYTE PTR [eax],al
  432b37:	loope  0x432b40
  432b39:	jns    0x432b33
  432b3b:	cmp    al,0x96
  432b3d:	add    cl,BYTE PTR [ebx-0x3106f8f4]
  432b43:	jmp    0xe8426356
  432b48:	push   cs
  432b49:	or     DWORD PTR [esi+0x4e],0x49084f93
  432b50:	dec    edi
  432b51:	sub    cl,BYTE PTR [eax+eiz*1]
  432b54:	pop    ds
  432b55:	push   esp
  432b56:	or     al,0xa1
  432b58:	(bad)  
  432b59:	in     eax,dx
  432b5a:	pop    edi
  432b5b:	fadd   st(3),st
  432b5d:	and    ch,0xf3
  432b60:	cmp    al,BYTE PTR [ebx-0x3e]
  432b63:	mov    dh,0x9b
  432b65:	std    
  432b66:	push   ebx
  432b68:	out    dx,eax
  432b69:	sub    al,0xcc
  432b6b:	push   0xbb80f42b
  432b70:	adc    BYTE PTR [ebx-0x19052c94],dl
  432b76:	jle    0x432b9e
  432b78:	mov    ah,0x3f
  432b7a:	ds repz out dx,eax
  432b7d:	mov    DWORD PTR [edi],ebx
  432b7f:	dec    ebx
  432b80:	mov    ah,0x3f
  432b82:	ds repz inc edi
  432b85:	cmp    al,0xfd
  432b87:	(bad)  
  432b88:	out    dx,eax
  432b89:	test   bl,al
  432b8b:	imul   DWORD PTR [edx+0x3d]
  432b8e:	jae    0x432b74
  432b90:	push   0xef190fc2
  432b95:	scas   al,BYTE PTR es:[edi]
  432b96:	cli    
  432b97:	(bad)  
  432b98:	mov    bl,0x3f
  432b9a:	add    BYTE PTR ds:[eax],al
  432b9d:	add    bl,dh
  432b9f:	jo     0x432bda
  432ba1:	pop    es
  432ba2:	push   0x5ce7e9aa
  432ba7:	adc    eax,0xb278fa18
  432bac:	jmp    0x8a3746e9
  432bb1:	adc    BYTE PTR [eax-0x5e],ch
  432bb4:	add    eax,0x3468c44e
  432bb9:	xchg   BYTE PTR [ebx],bh
  432bbb:	xlat   BYTE PTR ds:[ebx]
  432bbc:	dec    ebp
  432bbd:	stc    
  432bbe:	pop    esp
  432bbf:	in     al,0x85
  432bc1:	inc    esp
  432bc2:	jmp    FWORD PTR [eax-0x39]
  432bc5:	idiv   DWORD PTR [edx+0x27]
  432bc8:	or     BYTE PTR [edi-0x6e38f13],al
  432bce:	xbegin 0xf132755a
  432bd4:	inc    edx
  432bd5:	cs push edi
  432bd8:	adc    dl,BYTE PTR [edi+esi*8+0x6]
  432bdc:	outs   dx,BYTE PTR ds:[esi]
  432bdd:	(bad)  
  432bde:	call   0x144f5d74
  432be3:	aam    0xd6
  432be5:	pop    es
  432be6:	lds    eax,FWORD PTR ds:0x4b6c0835
  432bec:	ja     0x432b79
  432bee:	mov    ah,0xe
  432bf0:	outs   dx,BYTE PTR ds:[esi]
  432bf1:	das    
  432bf2:	or     al,0x50
  432bf4:	jno    0x432c0d
  432bf6:	jmp    0xe95a95bc
  432bfb:	add    al,0x21
  432bfd:	mov    bl,0xe8
  432bff:	adc    esp,DWORD PTR [ebx-0x51]
  432c02:	add    BYTE PTR [eax],al
  432c04:	add    cl,bl
  432c06:	add    al,0x53
  432c08:	mov    edi,DWORD PTR [edi]
  432c0a:	(bad)  
  432c0c:	scas   al,BYTE PTR es:[edi]
  432c0d:	ins    DWORD PTR es:[edi],dx
  432c0e:	ror    BYTE PTR [edi-0x5d],1
  432c11:	mov    edx,0x122d3b04
  432c16:	add    al,0x33
  432c18:	pop    ss
  432c19:	test   eax,0xe4edf72a
  432c1e:	push   es
  432c1f:	and    ah,cl
  432c21:	loopne 0x432c3f
  432c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c24:	add    ebx,DWORD PTR [eax-0x33124cd6]
  432c2a:	push   es
  432c2b:	pop    esi
  432c2c:	pop    ss
  432c2d:	pop    ds
  432c2e:	nop
  432c2f:	adc    eax,DWORD PTR [ebp+0x3e62f88]
  432c35:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c37:	daa    
  432c38:	ins    DWORD PTR es:[edi],dx
  432c39:	sub    eax,0xa7096007
  432c3e:	scas   al,BYTE PTR es:[edi]
  432c3f:	es add al,0x6a
  432c42:	sbb    bl,BYTE PTR [edi+0x6007156c]
  432c48:	clc    
  432c49:	sub    BYTE PTR [esi+0x3a7a0426],0x77
  432c50:	ins    BYTE PTR es:[edi],dx
  432c51:	std    
  432c52:	push   es
  432c53:	jo     0x432c2d
  432c55:	mov    BYTE PTR [esi+0x68f72a00],ch
  432c5b:	mov    esp,ss
  432c5d:	call   0x7f2c6a10
  432c62:	nop
  432c63:	or     ebp,DWORD PTR [ebp+0xf004487]
  432c69:	add    BYTE PTR [eax],al
  432c6b:	add    BYTE PTR [ebx+0x23],bh
  432c6e:	test   al,0x40
  432c70:	xor    DWORD PTR [esp+eiz*2],eax
  432c73:	jne    0x432c68
  432c75:	stos   BYTE PTR es:[edi],al
  432c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c77:	sub    ch,bh
  432c79:	push   0xaf50cc8c
  432c7e:	cmp    eax,0x2b8f86e9
  432c83:	test   DWORD PTR [edi+0x45],ecx
  432c86:	add    BYTE PTR [ebp+0x6d],bh
  432c89:	or     dl,al
  432c8b:	xor    BYTE PTR [ecx-0xf5b78fd],0xa3
  432c92:	les    edx,FWORD PTR [eax-0x5b78fc4f]
  432c98:	mov    ah,0xa4
  432c9a:	enter  0xb180,0x3
  432c9e:	lea    esp,[eax+edi*8-0x4eaf2b5d]
  432ca5:	add    eax,DWORD PTR [edi-0x6002f9c]
  432cab:	push   ss
  432cac:	int    0xa
  432cae:	adc    BYTE PTR [eax-0x4f],al
  432cb1:	add    eax,DWORD PTR [ecx]
  432cb3:	jmp    0x31e233af
  432cb8:	pop    es
  432cb9:	inc    ebp
  432cba:	add    BYTE PTR [edx-0x4c],cl
  432cbd:	stos   DWORD PTR es:[edi],eax
  432cbe:	cmp    eax,0xc00b25e9
  432cc3:	xchg   ecx,eax
  432cc4:	xor    al,BYTE PTR [ebx]
  432cc6:	or     ebp,esp
  432cc8:	lock mov cl,0xec
  432ccc:	or     al,0xac
  432cce:	cmp    eax,0xe9
  432cd3:	icebp  
  432cd4:	push   es
  432cd5:	add    BYTE PTR [eax],al
  432cd7:	dec    edx
  432cd8:	push   0xb099ff9
  432cdd:	xchg   DWORD PTR [ebp-0x9e17e],eax
  432ce3:	jnp    0x432ceb
  432ce5:	mov    al,ds:0x84900a43
  432cea:	fdiv   QWORD PTR [esi+0x19]
  432ced:	imul   BYTE PTR [edx+0x1a]
  432cf0:	sbb    dl,BYTE PTR [esp+edi*8]
  432cf3:	or     eax,edi
  432cf5:	stc    
  432cf6:	scas   al,BYTE PTR es:[di]
  432cf8:	(bad)  
  432cf9:	cmp    DWORD PTR [eax],eax
  432cfb:	jne    0x432cf0
  432cfd:	stc    
  432cfe:	adc    DWORD PTR [edx],ebx
  432d00:	or     ebp,DWORD PTR [eax+0x9]
  432d03:	into   
  432d04:	push   es
  432d05:	sar    bh,0xdf
  432d08:	add    cl,BYTE PTR [eax+eax*2]
  432d0b:	retf   0xf6b6
  432d0e:	adc    eax,0x39f5aa
  432d13:	adc    ecx,DWORD PTR [eax-0x3b]
  432d16:	int3   
  432d17:	push   es
  432d18:	dec    edi
  432d19:	(bad)
  432d1c:	dec    edi
  432d1d:	(bad)
  432d20:	(bad)  
  432d21:	cmp    eax,0xc00fbe24
  432d26:	jne    0x432cea
  432d28:	pop    DWORD PTR [ebp+0x24]
  432d2b:	call   0xcbd7:0x96243d8f
  432d32:	imul   ebx
  432d34:	(bad)  
  432d35:	ror    DWORD PTR [ebx+0x4e000000],1
  432d3b:	loop   0x432d3e
  432d3d:	idiv   DWORD PTR [ebx-0x71]
  432d40:	jmp    0x5d5746d0
  432d45:	and    al,0x4a
  432d47:	pop    ecx
  432d49:	mov    ecx,DWORD PTR [ebx+edx*1+0x75a245d]
  432d50:	iret   
  432d51:	jmp    0x432d46
  432d53:	xor    BYTE PTR [edi-0x1fcb8739],al
  432d59:	punpckhbw mm4,QWORD PTR [eax+eiz*8]
  432d5d:	or     ebp,DWORD PTR [eax+0x2c]
  432d60:	loopne 0x432d69
  432d62:	inc    edx
  432d63:	(bad)  
  432d64:	cs (bad) 
  432d66:	inc    edx
  432d67:	(bad)  
  432d68:	xlat   BYTE PTR cs:[ebx]
  432d6a:	call   0x1d36b825
  432d6f:	popf   
  432d70:	mov    bh,ch
  432d72:	add    al,0x14
  432d74:	loopne 0x432d89
  432d76:	js     0x432d20
  432d78:	mov    BYTE PTR [ebx-0x29],al
  432d7b:	fisttp WORD PTR [ecx+eiz*8]
  432d7e:	lock sahf 
  432d80:	(bad)
  432d84:	loopne 0x432d91
  432d86:	pop    esp
  432d87:	call   0xb45b381b
  432d8c:	fld    DWORD PTR [edi]
  432d8e:	pop    ebp
  432d8f:	test   ebx,0xf4143726
  432d95:	push   ss
  432d96:	pop    ds
  432d97:	or     al,0xf0
  432d99:	cs cwde 
  432d9b:	adc    al,0xc0
  432d9d:	and    eax,DWORD PTR [eax]
  432d9f:	add    BYTE PTR [eax],al
  432da1:	jmp    0x432d87
  432da3:	test   eax,0x3740ff23
  432da8:	repnz retf 
  432daa:	ins    BYTE PTR es:[edi],dx
  432dab:	aaa    
  432dac:	jmp    FWORD PTR [ecx+0x35]
  432daf:	mov    dh,cl
  432db1:	push   0x78c78846
  432db6:	xor    DWORD PTR [ebx+0x41efe3bd],esi
  432dbc:	retf   
  432dbd:	scas   eax,DWORD PTR es:[edi]
  432dbe:	pushf  
  432dbf:	scas   al,BYTE PTR es:[edi]
  432dc0:	mov    dh,0xe3
  432dc2:	dec    edi
  432dc3:	sar    bh,0x59
  432dc6:	in     al,0xb0
  432dc8:	push   eax
  432dc9:	test   al,0xdf
  432dcb:	pop    ebp
  432dcc:	ds repz push es
  432dcf:	outs   dx,BYTE PTR ds:[esi]
  432dd0:	rcl    BYTE PTR [eax],0x13
  432dd3:	jo     0x432d94
  432dd5:	hlt    
  432dd6:	(bad)  
  432dd7:	or     BYTE PTR es:[edx+0x6d],bh
  432ddb:	fstp   TBYTE PTR [eax-0x52e0a95d]
  432de1:	xchg   edi,eax
  432de2:	pop    edi
  432de3:	push   ds
  432de4:	inc    esi
  432de5:	lock push es
  432de7:	mov    dl,0x34
  432de9:	rcr    BYTE PTR gs:[ebx-0x4c2dd7c0],cl
  432df0:	inc    eax
  432df1:	sub    dl,dl
  432df3:	stos   DWORD PTR es:[edi],eax
  432df4:	inc    eax
  432df5:	cmp    dl,dl
  432df7:	pop    esi
  432df8:	adc    ebx,DWORD PTR [edi-0x50808473]
  432dfe:	push   cs
  432dff:	aas    
  432e00:	rcr    DWORD PTR [esi+0xa9e706],0x0
  432e07:	add    BYTE PTR [ebx],ch
  432e09:	push   es
  432e0a:	sti    
  432e0b:	pop    es
  432e0c:	adc    al,0xc7
  432e0e:	or     al,0x47
  432e10:	jne    0x432e58
  432e12:	and    eax,DWORD PTR [edi]
  432e14:	mov    dl,0x86
  432e16:	pop    ds
  432e17:	mov    ah,0x37
  432e19:	pop    es
  432e1a:	out    0x98,eax
  432e1c:	fnstenv [esi*1-0x18fa0ab3]
  432e23:	add    edx,DWORD PTR [ecx+0x3e]
  432e26:	scas   eax,DWORD PTR es:[edi]
  432e27:	jmp    0x432e22
  432e29:	call   0x4026:0x62667f25
  432e30:	test   al,0xd3
  432e32:	xor    eax,DWORD PTR [eax-0x58]
  432e35:	shr    DWORD PTR [ebx],cl
  432e37:	inc    eax
  432e38:	mov    eax,0x1f135ed3
  432e3d:	mov    ebx,?
  432e3f:	jle    0x432e78
  432e41:	movd   mm7,DWORD PTR [eax+edi*4-0x5ffcd0fd]
  432e49:	inc    esi
  432e4a:	add    ch,bl
  432e4c:	popf   
  432e4d:	push   esi
  432e4e:	or     DWORD PTR [esi],esi
  432e50:	xchg   BYTE PTR [esi],al
  432e52:	sub    eax,0x449399bb
  432e57:	icebp  
  432e58:	pop    eax
  432e59:	mov    esi,edx
  432e5b:	pop    edi
  432e5c:	push   esp
  432e5d:	mov    DWORD PTR [ebx-0x23],edi
  432e60:	mov    ebp,0xe6020c47
  432e65:	jno    0x432e6e
  432e67:	jb     0x432ec1
  432e69:	or     ch,bh
  432e6b:	pop    DWORD PTR [eax]
  432e6d:	add    BYTE PTR [eax],al
  432e6f:	xor    eax,0x36e36ef9
  432e74:	add    eax,0x6ed625d1
  432e7a:	xchg   ecx,eax
  432e7b:	and    eax,0x543759c0
  432e80:	arpl   WORD PTR [ebp-0x279800fd],di
  432e86:	ss sub al,0x0
  432e89:	loop   0x432ed0
  432e8b:	lock push es
  432e8d:	add    BYTE PTR [edx-0x65],ch
  432e90:	sti    
  432e91:	add    BYTE PTR [edi],ch
  432e93:	lock push es
  432e95:	inc    eax
  432e96:	jmp    0x5ea31635
  432e9b:	loope  0x432e99
  432e9d:	push   edi
  432e9e:	ins    BYTE PTR es:[edi],dx
  432e9f:	xor    BYTE PTR [ebx+edi*1+0x62],dh
  432ea3:	stos   DWORD PTR es:[edi],eax
  432ea4:	pop    es
  432ea5:	and    eax,0xe855802f
  432eaa:	pop    ecx
  432eab:	add    ebp,edi
  432ead:	stc    
  432eae:	nop
  432eaf:	push   edi
  432eb0:	mov    al,al
  432eb2:	mov    ch,0xbd
  432eb4:	mov    BYTE PTR [eax-0x33],al
  432eb7:	das    
  432eb8:	call   0x810344d6
  432ebd:	loopne 0x432ea7
  432ebf:	cmp    DWORD PTR [ebx-0x4],ecx
  432ec2:	psraw  mm7,mm4
  432ec5:	stc    
  432ec6:	add    cl,ah
  432ec8:	jecxz  0x432e4c
  432eca:	inc    ebp
  432ecb:	inc    BYTE PTR [eax-0x27a57507]
  432ed1:	enter  0x3d,0x0
  432ed5:	add    BYTE PTR [edi+0x3],dl
  432ed8:	add    al,al
  432eda:	pop    ebp
  432edb:	ja     0x432e9d
  432edd:	mov    ebx,DWORD PTR [ebx+0x32658249]
  432ee3:	dec    ebp
  432ee4:	inc    esp
  432ee5:	cld    
  432ee6:	sub    al,0x15
  432ee8:	idiv   bh
  432eea:	cmp    DWORD PTR [ebx-0x1f],eax
  432eed:	mov    bl,BYTE PTR [edx]
  432eef:	add    eax,DWORD PTR [eax]
  432ef1:	ret    
  432ef2:	pop    ebp
  432ef3:	out    0x5d,eax
  432ef5:	push   ss
  432ef6:	retf   0xcc0a
  432ef9:	int3   
  432efa:	pop    esi
  432efb:	inc    esi
  432efc:	vdivps ymm0,ymm6,YMMWORD PTR [esi-0x3b]
  432f01:	int3   
  432f02:	xchg   ecx,eax
  432f03:	into   
  432f04:	sbb    eax,0x1dc69108
  432f09:	adc    BYTE PTR [ecx],al
  432f0b:	cmp    eax,DWORD PTR [edx+0x74feb64c]
  432f11:	or     DWORD PTR [ecx-0x31],edx
  432f14:	sbb    eax,0xbb2a6504
  432f19:	adc    dl,cl
  432f1b:	mov    bl,0xee
  432f1d:	loope  0x432f60
  432f1f:	sub    eax,DWORD PTR [edx-0x110509bc]
  432f25:	fs idiv dh
  432f28:	cli    
  432f29:	xlat   BYTE PTR ds:[ebx]
  432f2a:	inc    ecx
  432f2b:	iret   
  432f2c:	sbb    eax,0xfa29e508
  432f31:	rol    BYTE PTR [ecx-0x4dfff6bc],cl
  432f37:	cmp    eax,0x4300
  432f3c:	add    BYTE PTR [edx-0x65ca095a],cl
  432f42:	or     al,BYTE PTR [eax]
  432f44:	add    bl,dh
  432f46:	push   0x66e323c8
  432f4b:	mov    al,ds:0xa072e323
  432f50:	and    eax,DWORD PTR [ebx]
  432f52:	fstp   DWORD PTR ds:0x5e9cbd4e
  432f58:	(bad)  
  432f59:	jl     0x432f0c
  432f5b:	std    
  432f5c:	xor    BYTE PTR [esi-0x5c3b2b1d],ch
  432f62:	jbe    0x432f06
  432f64:	out    0x44,eax
  432f66:	pop    ebx
  432f67:	or     al,0x86
  432f69:	mov    dh,0xcb
  432f6b:	dec    eax
  432f6c:	inc    esp
  432f6d:	aaa    
  432f6e:	(bad)  
  432f6f:	adc    dl,bh
  432f71:	sub    al,0x77
  432f73:	ret    0x76f7
  432f76:	sub    edx,DWORD PTR [ebx+eiz*2]
  432f79:	push   eax
  432f7a:	lock std 
  432f7c:	push   ebx
  432f7e:	mov    al,0x7c
  432f80:	dec    esp
  432f81:	add    eax,DWORD PTR [esi*2-0x2100cf4]
  432f88:	call   FWORD PTR [edx-0x67a650d4]
  432f8e:	js     0x432fb2
  432f90:	pop    esp
  432f91:	inc    edx
  432f92:	mov    cl,0x7c
  432f94:	cli    
  432f95:	imul   ebx,DWORD PTR ds:[ecx],0x10d466fa
  432f9c:	je     0x432fa1
  432f9e:	gs xchg edx,eax
  432fa0:	or     eax,DWORD PTR [eax]
  432fa2:	add    BYTE PTR [eax],al
  432fa4:	int3   
  432fa5:	shl    ch,cl
  432fa7:	xor    ebx,DWORD PTR [bx+si-0x3d]
  432fab:	call   DWORD PTR [eax+esi*8+0x5d]
  432faf:	ds repz push edi
  432fb2:	add    al,0xf7
  432fb4:	lods   al,BYTE PTR ds:[esi]
  432fb5:	cmp    al,0x84
  432fb7:	ret    
  432fb8:	or     edx,DWORD PTR [ebx-0x442905bc]
  432fbe:	idiv   DWORD PTR [edi]
  432fc0:	repz push es
  432fc2:	xor    edi,DWORD PTR [edi]
  432fc4:	mov    eax,0xb83f2bca
  432fc9:	retf   0x7cb9
  432fcc:	mov    WORD PTR [ecx+0x4c6defa1],ss
  432fd2:	xlat   BYTE PTR ds:[ebx]
  432fd3:	mov    eax,0xccd37e75
  432fd8:	imul   esi,DWORD PTR [ebp+eiz*8+0x7c],0x5b
  432fdd:	sub    edx,0xffffff96
  432fe0:	pop    ds
  432fe1:	xchg   edx,eax
  432fe2:	daa    
  432fe3:	hlt    
  432fe4:	jne    0x433032
  432fe6:	jmp    0x432f9e
  432fe8:	mov    ah,0x57
  432fea:	mov    edi,0xcafd38c1
  432fef:	jnp    0x432fa3
  432ff1:	sbb    ch,al
  432ff3:	(bad)  
  432ff4:	clc    
  432ff5:	pop    es
  432ff6:	aas    
  432ff7:	hlt    
  432ff8:	repz jl 0x432fd6
  432ffb:	fcomp  QWORD PTR [edx-0x739a1ea]
  433001:	das    
  433002:	pop    ds
  433003:	clc    
  433004:	jne    0x43307a
  433006:	sti    
  433007:	add    BYTE PTR [eax],0x0
  43300a:	add    BYTE PTR [eax],dh
  43300c:	or     ah,BYTE PTR [esi-0x72]
  43300f:	loopne 0x433017
  433011:	adc    al,0x6
  433013:	ins    BYTE PTR es:[edi],dx
  433014:	push   esp
  433015:	out    dx,eax
  433016:	jl     0x43305a
  433018:	pop    ss
  433019:	sbb    ch,BYTE PTR [esi+0x7b1ccba5]
  43301f:	enter  0x5e55,0x99
  433023:	in     al,dx
  433024:	sbb    DWORD PTR [ecx-0x1],0x3e7c970
  43302b:	(bad)
  433030:	(bad)  
  433031:	fiadd  DWORD PTR [edi+0x3e70781]
  433037:	inc    eax
  433038:	nop
  433039:	mov    edi,0xfc2407
  43303e:	add    edi,DWORD PTR [ebx+0x30]
  433041:	jge    0x433071
  433043:	stos   BYTE PTR es:[edi],al
  433044:	js     0x433067
  433046:	push   0xfffffffc
  433048:	dec    esi
  433049:	je     0x433016
  43304b:	jno    0x43304e
  43304d:	push   esi
  43304e:	popf   
  43304f:	cmp    DWORD PTR [ebp-0x7],0xffffff86
  433053:	pop    esp
  433054:	adc    al,0x7d
  433056:	push   es
  433057:	xchg   BYTE PTR [eax+0xd],bh
  43305a:	push   0xe8fe91f4
  43305f:	lock jb 0x433067
  433062:	mov    gs,WORD PTR [eax-0x2190603]
  433068:	pop    ebp
  433069:	pop    ebx
  43306a:	stos   DWORD PTR es:[edi],eax
  43306b:	in     al,dx
  43306c:	push   es
  43306d:	test   DWORD PTR [ecx],ebp
  43306f:	add    BYTE PTR [eax],al
  433071:	add    BYTE PTR [edi],bh
  433073:	add    eax,0x55
  433076:	repnz or DWORD PTR [edx+0xd],0x67
  43307b:	test   DWORD PTR [edx+0x11],eax
  43307e:	pop    edi
  43307f:	add    eax,edx
  433081:	push   0xffffffb4
  433083:	add    eax,DWORD PTR [ebp+0x3e852317]
  433089:	sub    eax,0xec74bc7a
  43308e:	mov    DWORD PTR [ebp+0x24],ecx
  433091:	cmp    DWORD PTR [eax+0x45],edi
  433094:	sub    BYTE PTR [ecx],bh
  433096:	in     al,0xd6
  433098:	jge    0x433047
  43309a:	call   0x6a208323
  43309f:	cmp    al,BYTE PTR [eax+0x6c]
  4330a2:	xor    BYTE PTR [eax+0xb],bh
  4330a5:	bound  edx,QWORD PTR [esi-0x498dafd9]
  4330ab:	and    edx,DWORD PTR [eax+0x5e]
  4330ae:	(bad)  
  4330af:	jl     0x433075
  4330b1:	loope  0x4330ec
  4330b3:	push   esi
  4330b4:	sbb    al,0x62
  4330b6:	mov    dl,0x33
  4330b8:	add    DWORD PTR [eax],0xffffffda
  4330bb:	xchg   ebx,eax
  4330bc:	or     al,0x8b
  4330be:	push   esp
  4330bf:	jecxz  0x43310a
  4330c1:	mov    ecx,DWORD PTR [edi+ebx*8+0x49]
  4330c5:	(bad)  
  4330c6:	sti    
  4330c7:	mov    BYTE PTR [ebp+0x15b20108],bh
  4330cd:	mov    ecx,DWORD PTR [edi+ebx*8-0x7e]
  4330d1:	dec    esi
  4330d2:	scas   al,BYTE PTR es:[edi]
  4330d3:	mov    ch,0x49
  4330d5:	inc    DWORD PTR [eax]
  4330d7:	add    BYTE PTR [eax],al
  4330d9:	mov    ebx,0xa908bd88
  4330de:	inc    edi
  4330df:	jp     0x4330e0
  4330e1:	jmp    0x4330df
  4330e3:	xchg   esp,eax
  4330e4:	rol    BYTE PTR [ebp+0x4a1c3f44],0x7
  4330eb:	add    BYTE PTR [eax],al
  4330ed:	mov    ah,0xba
  4330ef:	jp     0x4330d1
  4330f1:	daa    
  4330f2:	stos   DWORD PTR es:[edi],eax
  4330f3:	mov    ebx,0xf74f4a04
  4330f8:	jmp    DWORD PTR ds:0x585d5709
  4330fe:	push   cs
  4330ff:	add    ah,cl
  433101:	push   esi
  433102:	inc    esi
  433103:	(bad)
  433106:	jge    0x4330ed
  433108:	mov    ecx,esp
  43310a:	push   cs
  43310b:	dec    ebp
  43310c:	mov    edx,DWORD PTR [edx-0x33]
  43310f:	clc    
  433110:	jbe    0x43312a
  433112:	jle    0x43310c
  433114:	test   DWORD PTR [ebp-0x6d],esp
  433117:	add    al,0x33
  433119:	dec    edx
  43311a:	test   eax,0x43c1c35c
  43311f:	mov    BYTE PTR [esi-0x32],al
  433122:	jg     0x433163
  433124:	sbb    al,0x51
  433126:	ret    
  433127:	adc    DWORD PTR [ebx+0xf730662],eax
  43312d:	inc    ecx
  43312e:	stc    
  43312f:	adc    BYTE PTR [esi-0x16],0xb3
  433133:	push   eax
  433134:	push   edx
  433135:	repz inc edi
  433137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433138:	and    bl,dh
  43313a:	out    dx,eax
  43313b:	sbb    BYTE PTR ds:0x70000000,cl
  433141:	dec    eax
  433142:	(bad)  
  433143:	je     0x433148
  433145:	jne    0x433149
  433147:	xchg   DWORD PTR ds:0x424fb500,ebp
  43314d:	dec    eax
  43314e:	xchg   ebx,eax
  43314f:	and    ebx,esi
  433151:	out    dx,eax
  433152:	jbe    0x433195
  433154:	ret    
  433155:	je     0x433149
  433157:	xchg   BYTE PTR [esi],dh
  433159:	call   0x8667f12
  43315e:	adc    eax,0xfd016cf5
  433163:	cmp    DWORD PTR [eax+0x24],esi
  433166:	add    BYTE PTR [ecx],al
  433168:	fucom  st(7)
  43316a:	js     0x43312e
  43316c:	mov    ah,0x8a
  43316e:	inc    eax
  43316f:	retf   
  433170:	aas    
  433171:	mov    ah,0x39
  433173:	retf   
  433174:	aaa    
  433175:	lods   al,BYTE PTR ds:[esi]
  433176:	cmp    ebx,ecx
  433178:	das    
  433179:	cmp    eax,0x32075a77
  43317e:	ja     0x4331f2
  433180:	out    dx,eax
  433181:	adc    al,0x93
  433183:	jae    0x4331fd
  433185:	and    DWORD PTR [eax+0x7903ac86],esp
  43318b:	xchg   ebx,eax
  43318c:	call   0xd3d3d46
  433191:	aad    0xd
  433193:	xor    DWORD PTR ss:[esi],ebx
  433196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433197:	xchg   BYTE PTR [edi+edx*8-0x8187350],dh
  43319e:	scas   al,BYTE PTR es:[edi]
  43319f:	dec    edi
  4331a0:	fisttp DWORD PTR [ecx+0x7]
  4331a3:	cli    
  4331a4:	add    BYTE PTR [eax],al
  4331a6:	add    ah,ah
  4331a8:	je     0x43315e
  4331aa:	dec    ebx
  4331ab:	push   0x3428c828
  4331b0:	add    bh,dl
  4331b2:	pop    edx
  4331b3:	pop    edi
  4331b4:	pop    es
  4331b5:	inc    di
  4331b7:	clc    
  4331b8:	das    
  4331b9:	mov    edx,0xb70a6faf
  4331be:	cld    
  4331bf:	add    DWORD PTR [edi+0x49],0xfe049b80
  4331c6:	inc    eax
  4331c7:	push   ss
  4331c8:	add    ecx,DWORD PTR [esi]
  4331ca:	inc    ecx
  4331cb:	xchg   ebp,eax
  4331cc:	add    al,0xf6
  4331ce:	inc    ebx
  4331cf:	cs popa 
  4331d1:	pusha  
  4331d2:	add    al,BYTE PTR [esi]
  4331d4:	lock outs dx,BYTE PTR ds:[esi]
  4331d6:	mov    esp,0x7e368dc4
  4331db:	call   0x3398143f
  4331e0:	stc    
  4331e1:	data16 sbb ch,BYTE PTR [esi+0x3c]
  4331e5:	es xchg ecx,eax
  4331e7:	lock sub eax,0x345e1826
  4331ed:	daa    
  4331ee:	mov    ecx,0x96e88fd2
  4331f3:	pop    ebx
  4331f4:	add    eax,0x85f17fd6
  4331f9:	pop    edi
  4331fa:	add    bl,dh
  4331fc:	or     DWORD PTR [ebx+0x42],ebp
  4331ff:	xor    al,0xf9
  433201:	out    0x7e,eax
  433203:	shl    DWORD PTR [edx-0x1a],0xb2
  433207:	cwde   
  433208:	lea    ebp,[ecx+0x7]
  43320e:	sar    BYTE PTR [esi],0x5e
  433211:	adc    al,0xa6
  433213:	out    dx,al
  433214:	scas   eax,DWORD PTR es:[edi]
  433215:	or     cl,BYTE PTR [ecx]
  433217:	stc    
  433218:	call   0x32d0b2df
  43321d:	nop
  43321e:	jge    0x4331e2
  433220:	jmp    0x4331a8
  433222:	inc    BYTE PTR [edx*1+0x137075e9]
  433229:	pop    es
  43322a:	pusha  
  43322b:	aas    
  43322c:	outs   dx,BYTE PTR ds:[esi]
  43322d:	mov    ebx,0x3f000844
  433232:	icebp  
  433233:	lea    eax,[ecx+0x21]
  433236:	add    al,0xd8
  433238:	or     DWORD PTR [edi+0x282d0789],ebx
  43323e:	aam    0x45
  433240:	push   esp
  433241:	pusha  
  433242:	mov    al,0x40
  433244:	jg     0x433299
  433246:	icebp  
  433247:	add    eax,0xc7de900
  43324c:	test   esi,esp
  43324e:	jne    0x4332c0
  433250:	add    al,0xe9
  433252:	cdq    
  433253:	sub    DWORD PTR [edx],0x2e
  433256:	clc    
  433257:	cld    
  433258:	test   DWORD PTR [esi+0x2f],ebp
  43325b:	push   ss
  43325c:	add    cl,ch
  43325e:	std    
  43325f:	dec    esp
  433260:	cmp    al,0xd2
  433262:	das    
  433263:	imul   esp,DWORD PTR [ecx+0x62],0xfafd6c80
  43326a:	xor    eax,0x3dcc6dc6
  43326f:	into   
  433270:	test   DWORD PTR [eax],edx
  433272:	add    BYTE PTR [eax],al
  433274:	add    BYTE PTR [esi-0xf],ch
  433277:	(bad)  
  433278:	out    0xf0,eax
  43327a:	push   es
  43327b:	jb     0x433269
  43327d:	mov    ch,0xf9
  43327f:	add    cl,ch
  433281:	lock jg 0x4332cd
  433284:	adc    DWORD PTR [ecx+edi*8-0x35],edi
  433288:	inc    ebx
  433289:	not    DWORD PTR [ebp-0x18]
  43328c:	mov    ch,0xf7
  43328e:	cld    
  43328f:	stc    
  433290:	push   0xffffffdc
  433292:	or     edi,ebp
  433294:	xchg   esi,eax
  433295:	dec    edx
  433296:	(bad)  
  433297:	cdq    
  433298:	test   eax,0x42f9f802
  43329d:	lods   al,BYTE PTR ds:[esi]
  43329e:	mov    dl,BYTE PTR [edx+0x6f7eb]
  4332a4:	shr    BYTE PTR [esi+0xc22168],cl
  4332aa:	xchg   edx,eax
  4332ac:	add    al,bl
  4332ae:	add    al,BYTE PTR [eax]
  4332b0:	add    cl,al
  4332b2:	cmp    esi,DWORD PTR [edx]
  4332b4:	icebp  
  4332b5:	aam    0x1
  4332b7:	xor    ecx,0x5631bd51
  4332bd:	fnstcw WORD PTR [ebx]
  4332bf:	arpl   WORD PTR [eax],ax
  4332c1:	jnp    0x4332de
  4332c3:	(bad)  
  4332c4:	stc    
  4332c5:	sbb    eax,0xcec47a0d
  4332ca:	add    ch,BYTE PTR [ebp+0x3c4c0]
  4332d0:	pop    esi
  4332d1:	push   ecx
  4332d2:	inc    eax
  4332d3:	(bad)
  4332d6:	js     0x4332bd
  4332d8:	push   esi
  4332d9:	add    BYTE PTR [eax],al
  4332db:	add    BYTE PTR [ebp+0x78],ah
  4332de:	jl     0x4332e8
  4332e0:	add    ebp,eax
  4332e2:	add    eax,0xf90cddbe
  4332e7:	dec    DWORD PTR [ecx]
  4332e9:	inc    esp
  4332ea:	repnz cmp edx,DWORD PTR [ecx+edx*4]
  4332ee:	or     BYTE PTR [ebx+0x249d6f6a],cl
  4332f4:	dec    edx
  4332f5:	add    eax,DWORD PTR [eax]
  4332f7:	add    cl,dl
  4332f9:	les    ebp,FWORD PTR [ebp-0x7d]
  4332fc:	inc    edx
  4332fd:	add    ebp,DWORD PTR [ebp+0x10]
  433300:	and    al,BYTE PTR [ecx+0x791dfff7]
  433306:	ds je  0x4332d0
  433309:	inc    edx
  43330a:	push   es
  43330b:	test   BYTE PTR [ebp+0x1b000002],bl
  433311:	(bad)  
  433312:	gs mov ecx,ebp
  433315:	scas   al,BYTE PTR es:[edi]
  433316:	adc    BYTE PTR [edi-0x52],0x45
  43331a:	ds je  0x433337
  43331d:	add    eax,DWORD PTR [eax]
  43331f:	add    BYTE PTR [edi+0x6],bh
  433322:	das    
  433323:	je     0x43333b
  433325:	retf   0x72c9
  433328:	repz (bad) 
  43332a:	fmul   st(7),st
  43332c:	jp     0x43336b
  43332e:	nop
  43332f:	mov    BYTE PTR [esp+ebx*1],ch
  433332:	jns    0x4332fc
  433334:	pop    ebx
  433335:	in     eax,dx
  433336:	jl     0x43338a
  433338:	sbb    esp,ecx
  43333a:	cs out 0xf1,al
  43333d:	mov    al,0x33
  43333f:	add    BYTE PTR gs:[eax],al
  433342:	add    bl,dh
  433344:	sbb    BYTE PTR ds:0x15bd214f,bh
  43334a:	sbb    edi,esi
  43334c:	(bad)  
  43334e:	xchg   BYTE PTR [esp+esi*4],dh
  433351:	jbe    0x433395
  433353:	inc    edi
  433354:	jns    0x433355
  433356:	jle    0x43330f
  433358:	rcl    BYTE PTR ds:0x73d9789,1
  43335e:	xchg   ah,bh
  433360:	pusha  
  433361:	test   DWORD PTR [edi],ecx
  433363:	repz xchg ebx,eax
  433365:	rol    BYTE PTR [esi+0x527cb42c],0x7
  43336c:	imul   edi,DWORD PTR [edi-0x2ed0e7d5],0xfddff201
  433376:	ss inc ebx
  433378:	jb     0x4332fd
  43337a:	test   BYTE PTR [edx],ch
  43337c:	js     0x43337e
  43337e:	xchg   DWORD PTR [edi+esi*4-0x1da73efc],esi
  433385:	aam    0xbf
  433387:	leave  
  433388:	fbstp  TBYTE PTR [ebx+0x2cc79c4f]
  43338e:	repz fistp QWORD PTR ss:[edx+ecx*2-0x69]
  433394:	js     0x433396
  433396:	jg     0x4333cf
  433398:	shl    BYTE PTR [esi+0x4a],1
  43339b:	mov    bh,0xc7
  43339d:	mov    esp,0x7ca50cfb
  4333a2:	adc    dh,BYTE PTR [eax+0x7]
  4333a5:	sbb    eax,0xf4
  4333aa:	cld    
  4333ab:	add    al,0x64
  4333ad:	mov    eax,0xa892f5f9
  4333b2:	sbb    eax,0xa5a729c7
  4333b7:	cmp    esp,0xf3fc77f7
  4333bd:	adc    al,0x6d
  4333bf:	inc    ebp
  4333c0:	adc    edi,DWORD PTR [edi-0x45]
  4333c3:	outs   dx,BYTE PTR ds:[esi]
  4333c4:	loop   0x433442
  4333c6:	xor    DWORD PTR [edi],ebp
  4333c8:	out    0x42,al
  4333ca:	aad    0x8
  4333cc:	push   ss
  4333cd:	inc    esp
  4333ce:	add    eax,0xf00966d9
  4333d3:	add    eax,0x82364573
  4333d8:	call   0x41b3:0x95d7d597
  4333df:	fbld   TBYTE PTR [ebx-0x34]
  4333e2:	mov    ebp,?
  4333e4:	pop    esi
  4333e5:	rcr    BYTE PTR [eax],0x80
  4333e8:	stos   BYTE PTR es:[edi],al
  4333e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4333ea:	jne    0x4333f9
  4333ec:	data16 aas 
  4333ee:	in     al,0xde
  4333f0:	adc    ecx,DWORD PTR [ecx+ebp*2]
  4333f3:	cmc    
  4333f4:	pop    esi
  4333f5:	clc    
  4333f6:	adc    eax,0xecc2c0c7
  4333fb:	jnp    0x4333e6
  4333fd:	test   BYTE PTR [edx+0xa],bl
  433400:	loop   0x433470
  433402:	mov    WORD PTR [ebp-0x77],ss
  433405:	mov    ebx,0xa8e5e6c5
  43340a:	jge    0x433395
  43340c:	fld    DWORD PTR [eax]
  43340e:	add    BYTE PTR [eax],al
  433410:	add    al,ch
  433412:	call   0x423:0x83caa7a7
  433419:	repnz push ebx
  43341b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43341c:	cmp    BYTE PTR [eax],ch
  43341e:	ret    0x38ab
  433421:	sub    dl,al
  433423:	add    BYTE PTR [eax+ecx*4],bl
  433426:	loope  0x433475
  433428:	pop    ss
  433429:	push   esp
  43342a:	mov    WORD PTR [ebx-0xf],?
  43342d:	test   eax,0xf0e90006
  433432:	(bad)  
  433433:	stc    
  433434:	bound  ebp,QWORD PTR [eax+edi*2+0x6efe73b]
  43343b:	add    dl,bh
  43343d:	shr    ah,cl
  43343f:	dec    edi
  433440:	jl     0x43342e
  433442:	lock test DWORD PTR [esi],ebp
  433445:	arpl   WORD PTR [ebp+0x6bbdd73],cx
  43344b:	(bad)  
  43344c:	call   0x644b9841
  433451:	in     eax,0x0
  433453:	test   BYTE PTR [ecx+0x640006f2],ah
  433459:	das    
  43345a:	add    DWORD PTR [esi+ebp*4+0x6a0006f2],eax
  433461:	out    0xf4,eax
  433463:	outs   dx,DWORD PTR ds:[esi]
  433464:	lds    ecx,FWORD PTR [ecx]
  433466:	dec    ecx
  433467:	dec    eax
  433468:	bound  edi,QWORD PTR [esp+ebx*2]
  43346b:	test   DWORD PTR [esi-0x2a8e729c],edi
  433471:	rcl    ebx,0x85
  433474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433475:	add    BYTE PTR [eax],al
  433477:	add    BYTE PTR [eax],bh
  433479:	add    DWORD PTR [edx+0x2ef25f9d],esi
  43347f:	sub    BYTE PTR [eax+0x49],dl
  433482:	push   esp
  433483:	jb     0x433421
  433485:	dec    eax
  433486:	sbb    eax,0x4058c9fb
  43348b:	pusha  
  43348c:	test   BYTE PTR [edx+eiz*2+0x72],cl
  433490:	cmp    al,0x47
  433492:	bound  esi,QWORD PTR [eax+0x34]
  433495:	bound  eax,QWORD PTR [ebp+0x49158b26]
  43349b:	adc    eax,0x4058a8
  4334a0:	and    eax,0xa149fd45
  4334a5:	mov    esp,0xc6ed8b41
  4334aa:	pop    edi
  4334ab:	mov    edi,DWORD PTR [ebp+0x1e895f8e]
  4334b1:	scas   al,BYTE PTR es:[edi]
  4334b2:	test   al,al
  4334b4:	fsubp  st(3),st
  4334b6:	or     BYTE PTR [edi-0xa],0x6f
  4334ba:	dec    esi
  4334bb:	sub    al,0xb1
  4334bd:	das    
  4334be:	sub    dl,0xcc
  4334c1:	or     al,BYTE PTR [eax]
  4334c3:	add    BYTE PTR [ecx-0x15f291d3],dh
  4334c9:	mov    ds:0x7b939e1,eax
  4334ce:	add    BYTE PTR [ebx+0x4788f00e],al
  4334d4:	stos   BYTE PTR es:[edi],al
  4334d5:	mov    BYTE PTR [esi+0x60],dh
  4334d8:	cdq    
  4334d9:	cld    
  4334da:	jnp    0x433501
  4334dc:	add    BYTE PTR [eax],al
  4334de:	add    BYTE PTR [ebx+0x21660007],bl
  4334e4:	mov    ebp,0xbc016665
  4334e9:	imul   ecx,DWORD PTR [ebx+0xf682d],0x603e6d9a
  4334f3:	add    DWORD PTR [ebp-0x63],eax
  4334f6:	push   ss
  4334f7:	mov    al,BYTE PTR [edi]
  4334f9:	add    eax,0x889213b7
  4334fe:	or     al,0x9c
  433500:	jo     0x433490
  433502:	cwde   
  433503:	cmp    al,0x7
  433505:	add    BYTE PTR [ebx+0xf681d],cl
  43350b:	pop    edx
  43350c:	(bad)  
  43350e:	xchg   DWORD PTR [esi-0x2b],ecx
  433511:	add    BYTE PTR [edi-0x61b96],bl
  433517:	inc    ebp
  433518:	inc    ecx
  433519:	mov    ecx,0x7493f30f
  43351e:	jg     0x4334d8
  433520:	sbb    eax,0x69f26204
  433525:	imul   edx,DWORD PTR [edi-0x73022211],0x77
  43352c:	push   esp
  43352d:	ins    BYTE PTR es:[edi],dx
  43352e:	add    esi,ebx
  433530:	fnstsw WORD PTR [esi-0x40]
  433533:	cld    
  433534:	stos   DWORD PTR es:[edi],eax
  433535:	add    al,0x0
  433537:	cmp    ebx,ebp
  433539:	(bad)  
  43353a:	push   ebx
  43353c:	add    edi,eax
  43353e:	(bad)  
  43353f:	pusha  
  433540:	aam    0xf4
  433542:	mov    dl,0x0
  433544:	add    BYTE PTR [eax],al
  433546:	stos   BYTE PTR es:[edi],al
  433547:	stc    
  433548:	dec    ebx
  433549:	xor    BYTE PTR [ebx+0x37],0xc4
  43354d:	(bad)  
  43354e:	fldpi  
  433550:	hlt    
  433551:	mov    dl,0xa2
  433553:	lahf   
  433554:	push   ss
  433555:	add    ch,ah
  433557:	xchg   ecx,eax
  433558:	jle    0x4335d9
  43355a:	sub    DWORD PTR [eax+0x7bf261fd],esp
  433560:	jnp    0x4334e9
  433562:	cli    
  433563:	(bad)  
  433565:	xchg   BYTE PTR [esp+ebp*2-0x16],dh
  433569:	call   DWORD PTR [ebp+ebp*8-0x84fd9ca]
  433570:	jl     0x433511
  433572:	fstp   st(7)
  433574:	std    
  433575:	xchg   BYTE PTR [eax+eax*4],dh
  433578:	hlt    
  433579:	xchg   ebx,eax
  43357a:	mov    dl,0xd7
  43357c:	mov    esp,0x770f7873
  433581:	dec    edx
  433582:	(bad)  
  433584:	jl     0x433605
  433586:	repz (bad) 
  433589:	jb     0x433547
  43358b:	pop    esp
  43358c:	add    eax,0xb58dc2fe
  433591:	mov    BYTE PTR [edi+edi*2+0x6cf5afe],ch
  433598:	outs   dx,BYTE PTR ds:[esi]
  433599:	lods   al,BYTE PTR ds:[esi]
  43359a:	enter  0x3a7d,0xbc
  43359e:	jne    0x4335e2
  4335a0:	das    
  4335a1:	jns    0x433554
  4335a3:	fimul  DWORD PTR cs:[ebp-0x50]
  4335a7:	add    al,0xe5
  4335a9:	xor    BYTE PTR [eax],al
  4335ab:	add    BYTE PTR [eax],al
  4335ad:	xor    eax,0xddc02a7e
  4335b2:	lds    eax,FWORD PTR [esi]
  4335b4:	mov    ebp,0xd00a7da0
  4335b9:	imul   ecx,DWORD PTR [edx+0x2f],0xfffffff5
  4335bd:	inc    ecx
  4335be:	or     ebp,DWORD PTR [eax]
  4335c0:	loope  0x433588
  4335c2:	jge    0x4335fe
  4335c4:	les    edx,FWORD PTR [edx-0x80]
  4335c7:	jecxz  0x433572
  4335c9:	jmp    0x6ddb6087
  4335ce:	inc    ecx
  4335cf:	das    
  4335d0:	jns    0x4335f3
  4335d2:	dec    ebx
  4335d3:	or     DWORD PTR [ebx-0x10],edi
  4335d6:	cmp    al,0x6a
  4335d8:	mov    ah,0x1c
  4335da:	scas   al,BYTE PTR es:[edi]
  4335db:	call   0xd44a28e3
  4335e0:	dec    esp
  4335e1:	fwait
  4335e2:	test   edi,esp
  4335e4:	add    esi,ebx
  4335e6:	pop    es
  4335e7:	mov    ds:0xff597597,al
  4335ec:	add    BYTE PTR [eax+0x63],al
  4335ef:	outs   dx,BYTE PTR ds:[esi]
  4335f0:	mov    ah,0x24
  4335f2:	retf   0xa3aa
  4335f5:	test   cl,dh
  4335f7:	out    0x3,eax
  4335f9:	call   0x31be1bb6
  4335fe:	aas    
  4335ff:	ss and edi,ecx
  433602:	mov    eax,0xc814029d
  433607:	(bad)  
  433608:	mov    esp,0xbbaa7fc0
  43360d:	dec    ebp
  43360e:	push   ebx
  43360f:	outs   dx,BYTE PTR ds:[esi]
  433610:	lods   al,BYTE PTR ds:[esi]
  433611:	add    BYTE PTR [eax],al
  433613:	add    al,bl
  433615:	jge    0x433617
  433617:	scas   al,BYTE PTR es:[edi]
  433618:	cmp    BYTE PTR [ebx+0x7cbbeb04],cl
  43361e:	mov    al,ds:0x8506f0ff
  433623:	jbe    0x433680
  433625:	adc    al,0x0
  433627:	jmp    0x60a62b09
  43362c:	fisttp DWORD PTR [eax-0x7b]
  43362f:	pop    esi
  433630:	dec    edi
  433631:	adc    al,0x0
  433633:	jmp    0xdfdbb5b5
  433638:	lock push es
  43363a:	mov    ch,ah
  43363c:	out    0xf1,eax
  43363e:	call   0xaaee:0x6d949
  433645:	(bad)  
  433646:	(bad)  
  433647:	call   0xe9d7bcd0
  43364c:	lock push es
  43364e:	test   DWORD PTR [esi-0x6d],esi
  433651:	adc    eax,0x8b63e900
  433656:	sbb    DWORD PTR [ebp-0x11],0xa6ba0006
  43365d:	sub    al,ch
  43365f:	and    BYTE PTR [eax-0x59],ah
  433662:	adc    ch,cl
  433664:	lock std 
  433666:	xchg   ebx,eax
  433667:	sub    esi,eax
  433669:	cmp    al,0x74
  43366b:	bound  esp,QWORD PTR [ebp+0x6bd55af0]
  433671:	cmc    
  433672:	or     DWORD PTR [ebp-0x60],esp
  433675:	in     al,dx
  433676:	stc    
  433677:	add    BYTE PTR ss:[eax],al
  43367a:	add    BYTE PTR [esi+edi*1+0x5c],dh
  43367e:	fs scas al,BYTE PTR es:[edi]
  433680:	outs   dx,DWORD PTR ds:[esi]
  433681:	add    DWORD PTR [edx+0x28],esi
  433684:	das    
  433685:	std    
  433686:	daa    
  433687:	pop    esp
  433688:	icebp  
  433689:	sub    DWORD PTR cs:[esi+edx*2+0x6c],esi
  43368e:	xor    eax,0x29
  433691:	iret   
  433692:	add    BYTE PTR [eax+0x54],bh
  433695:	dec    edi
  433696:	call   0x4362e5
  43369b:	sar    DWORD PTR [ebx],1
  43369d:	ins    BYTE PTR es:[edi],dx
  43369e:	mov    DWORD PTR [ebp-0x36f87cb0],edx
  4336a4:	(bad)  
  4336a5:	adc    al,ch
  4336a7:	mov    edx,0x91fff7f1
  4336ac:	adc    al,0x7b
  4336ae:	jns    0x4336ca
  4336b0:	add    al,0x7
  4336b2:	test   DWORD PTR [esi-0x120009fa],esi
  4336b8:	fs sub eax,eax
  4336bb:	loope  0x433722
  4336bd:	mov    ebx,0x7d66dd8b
  4336c2:	leave  
  4336c3:	sar    bl,cl
  4336c5:	add    BYTE PTR [edi-0x2e],0x8
  4336c9:	mov    ecx,0xc038d8eb
  4336ce:	xor    ebx,DWORD PTR [eax-0x22fb0978]
  4336d4:	xchg   edi,eax
  4336d5:	mov    edx,0x6c4d4152
  4336da:	sub    ebp,DWORD PTR [ebx+0x59]
  4336dd:	push   eax
  4336de:	push   edi
  4336df:	add    BYTE PTR [eax],al
  4336e1:	add    BYTE PTR [edx-0x64],dh
  4336e4:	cmp    BYTE PTR [eax],al
  4336e6:	retf   0x3f80
  4336e9:	ins    BYTE PTR es:[edi],dx
  4336ea:	and    edi,DWORD PTR ds:0x88958b5c
  4336f0:	les    edx,FWORD PTR [eax]
  4336f2:	xor    cl,BYTE PTR ds:0x812dfff1
  4336f8:	pop    es
  4336f9:	xor    ebx,edx
  4336fb:	xor    bh,BYTE PTR [ecx]
  4336fd:	adc    BYTE PTR [edi+0x14],al
  433700:	jnp    0x433700
  433702:	xchg   esi,eax
  433703:	adc    al,0x8d
  433705:	shr    BYTE PTR [ebp-0x26b7ac9b],0xe3
  43370c:	cli    
  43370d:	pop    esp
  43370e:	repz sbb al,0x82
  433711:	cli    
  433712:	not    eax
  433714:	xchg   ecx,eax
  433715:	shl    BYTE PTR [edi+eiz*4-0x224874a6],0x4
  43371d:	pop    ebx
  43371e:	xor    BYTE PTR [edx-0x685f1376],dl
  433724:	push   esi
  433725:	test   DWORD PTR [esi+0x2cffbcf5],esi
  43372b:	(bad)  
  43372d:	test   BYTE PTR [esp+eiz*2],ah
  433730:	dec    edi
  433731:	je     0x4337a5
  433733:	(bad)  
  433734:	push   es
  433735:	call   DWORD PTR [ebx*8+0x2d1b1e74]
  43373c:	cli    
  43373d:	stc    
  43373e:	add    al,0x64
  433740:	dec    edi
  433741:	je     0x4337b5
  433743:	mov    dh,0x6
  433745:	inc    DWORD PTR [eax]
  433747:	add    BYTE PTR [eax],al
  433749:	hlt    
  43374a:	fdiv   QWORD PTR [esi+eax*1+0x70]
  43374e:	or     edx,DWORD PTR [eax]
  433750:	add    ah,dh
  433752:	pop    ebx
  433753:	cs (bad) 
  433755:	fsubr  st(0),st
  433757:	add    bh,0xe4
  43375a:	pop    ebx
  43375b:	xlat   BYTE PTR ds:[ebx]
  43375c:	dec    ah
  43375e:	loopne 0x433794
  433760:	shl    BYTE PTR [eax+0x77],0x3
  433764:	outs   dx,BYTE PTR ds:[esi]
  433765:	sub    ch,BYTE PTR [ecx+0x47]
  433768:	dec    eax
  433769:	push   0x448555b5
  43376e:	mov    esp,0x30df718c
  433773:	in     al,0x85
  433775:	sub    al,0x18
  433777:	lss    esp,FWORD PTR [edi]
  43377a:	iret   
  43377b:	add    ebp,DWORD PTR ds:0x544701b2
  433781:	js     0x433728
  433783:	inc    ecx
  433784:	sbb    eax,0x40576981
  433789:	push   0x7
  43378b:	stos   BYTE PTR es:[edi],al
  43378c:	dec    ebx
  43378d:	rol    DWORD PTR [ecx+0x7fd142e3],1
  433793:	jmp    0x43380a
  433795:	jbe    0x4337d5
  433797:	jnp    0x4337bd
  433799:	stos   BYTE PTR es:[edi],al
  43379a:	xor    ch,BYTE PTR [esi+0x59]
  43379d:	mov    bl,0xfd
  43379f:	xor    DWORD PTR [eax],ecx
  4337a1:	lods   eax,DWORD PTR ds:[esi]
  4337a2:	and    DWORD PTR [edx-0x5ca989b5],0x53766e69
  4337ac:	push   0x0
  4337ae:	add    BYTE PTR [eax],al
  4337b0:	je     0x4337e5
  4337b2:	sub    eax,0x5e66ba8d
  4337b7:	pop    eax
  4337b8:	mov    ds:0xf303e5ac,eax
  4337bd:	push   es
  4337be:	jo     0x433810
  4337c0:	mov    edi,DWORD PTR [edi+0x12]
  4337c3:	push   0x8747766c
  4337c8:	xor    esi,DWORD PTR [ebx+0x1d]
  4337cb:	cmp    eax,0x3e7876a
  4337d0:	repz jns 0x4337f8
  4337d3:	lea    eax,[edx+0x5b]
  4337d6:	pop    esi
  4337d7:	push   eax
  4337d8:	mov    cr6,edi
  4337db:	or     ah,0x4
  4337de:	call   0x98752ae6
  4337e3:	js     0x4337e8
  4337e5:	push   edi
  4337e6:	sbb    ch,ah
  4337e8:	add    eax,0x3603e727
  4337ed:	ret    
  4337ee:	out    dx,eax
  4337ef:	mov    dh,BYTE PTR [edx]
  4337f1:	addr16 data16 sti 
  4337f4:	lock jne 0x4337e8
  4337f7:	cmp    bh,BYTE PTR [edx+0x7e]
  4337fa:	out    0x3,eax
  4337fc:	repz jb 0x4337d5
  4337ff:	test   BYTE PTR [ebx+0x6e12b409],cl
  433805:	push   ebp
  433806:	add    ch,al
  433808:	iret   
  433809:	push   edi
  43380a:	jo     0x433874
  43380c:	jbe    0x433814
  43380e:	adc    cl,ch
  433810:	lock js 0x433810
  433813:	outs   dx,DWORD PTR ds:[esi]
  433814:	add    BYTE PTR [eax],al
  433816:	add    bl,ch
  433818:	test   WORD PTR [esi-0x15079428],bp
  43381f:	add    ebp,DWORD PTR [ebp+0x69]
  433822:	call   0xa67a3f17
  433827:	sar    bh,1
  433829:	or     BYTE PTR [edi-0x78fff90f],0x67
  433830:	push   edi
  433831:	ins    BYTE PTR es:[edi],dx
  433832:	dec    edi
  433833:	fcom   DWORD PTR [edi+0x64]
  433836:	jb     0x4337e4
  433838:	pop    edx
  433839:	test   DWORD PTR [esi],esp
  43383b:	fwait
  43383c:	push   0x8f68ba25
  433841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433842:	fcomip st,st(0)
  433844:	push   es
  433845:	mov    esi,DWORD PTR ds:0x2e86f1f7
  43384b:	jg     0x43384c
  43384d:	mov    al,0xa3
  43384f:	push   0xf0ffa097
  433854:	push   es
  433855:	bound  esi,QWORD PTR [eax+0x3]
  433858:	cmp    al,BYTE PTR [ebp+0x199776]
  43385e:	jmp    0xdfdbcecc
  433863:	lock push es
  433865:	sub    al,0xea
  433867:	js     0x43386c
  433869:	push   ss
  43386a:	out    0x86,al
  43386c:	(bad)  
  43386d:	mov    ch,0xe8
  43386f:	lock push es
  433871:	add    al,ch
  433873:	lea    esp,[edi-0x20f16ee]
  433879:	mov    cl,0x79
  43387b:	add    BYTE PTR [eax],al
  43387d:	add    BYTE PTR [edi+0x42],dh
  433880:	inc    eax
  433881:	jmp    0xd92494
  433886:	sub    eax,0x9a00048b
  43388b:	xchg   edi,eax
  43388c:	test   BYTE PTR [edi-0xde],dl
  433892:	or     eax,edx
  433894:	idiv   edi
  433896:	pop    edx
  433897:	or     BYTE PTR [eax+0x85b00],bh
  43389d:	inc    cx
  43389f:	shr    BYTE PTR [ebx+0xc],0x35
  4338a3:	mov    ch,0xc1
  4338a5:	(bad)  
  4338a7:	add    BYTE PTR [eax-0x1cf765b7],0xd
  4338ae:	push   ebp
  4338af:	mov    ch,0xc9
  4338b1:	shl    eax,0x3
  4338b4:	pop    es
  4338b5:	mov    dh,0x98
  4338b7:	xchg   DWORD PTR [edx+0x40],eax
  4338ba:	sbb    ah,BYTE PTR [edx-0x7]
  4338bd:	fwait
  4338be:	lea    edi,[edi+0x1]
  4338c1:	add    BYTE PTR [edx],cl
  4338c3:	cmp    DWORD PTR [edi-0x64],0x2b00082c
  4338ca:	pop    ecx
  4338cb:	cmp    ecx,eax
  4338cd:	cmp    DWORD PTR [ebp+0xa000ea7],ecx
  4338d3:	cmp    DWORD PTR [edi],0xb993e578
  4338d9:	mov    ebp,DWORD PTR [ecx+0x1d01d020]
  4338df:	outs   dx,DWORD PTR ds:[esi]
  4338e0:	jnp    0x4338a2
  4338e2:	add    BYTE PTR [eax],al
  4338e4:	add    BYTE PTR [edx+edi*2+0x3f],ah
  4338e8:	js     0x43392d
  4338ea:	push   edi
  4338eb:	or     bl,ch
  4338ed:	fst    DWORD PTR [esi+0x4ccb0041]
  4338f3:	ins    BYTE PTR es:[edi],dx
  4338f4:	mov    ebx,ebp
  4338f6:	jbe    0x43392b
  4338f8:	(bad)  
  4338f9:	int    0x29
  4338fb:	add    DWORD PTR [edi+0x62],0xffffff80
  4338ff:	inc    edi
  433900:	pop    eax
  433901:	repz push 0x3dc0345a
  433907:	xchg   BYTE PTR [ecx-0x35],cl
  43390a:	hlt    
  43390b:	mov    bl,0x4c
  43390d:	loop   0x4338ee
  43390f:	cs mov edi,0x85519cd0
  433915:	and    al,0xa2
  433917:	mov    WORD PTR [ecx-0x45],es
  43391a:	hlt    
  43391b:	mov    dl,0x4
  43391d:	mov    dl,0xc0
  43391f:	xlat   BYTE PTR ds:[ebx]
  433920:	test   esp,eax
  433922:	popf   
  433923:	arpl   WORD PTR [edi-0x4ef54811],ax
  433929:	mov    ah,0x91
  43392b:	xchg   BYTE PTR [ecx-0x45],cl
  43392e:	js     0x433982
  433930:	inc    esp
  433931:	aad    0x66
  433933:	add    DWORD PTR [esi+0x78],eax
  433936:	fdivp  st(5),st
  433938:	push   ebx
  43393a:	in     al,0x4b
  43393c:	js     0x4338dc
  43393e:	nop
  43393f:	std    
  433940:	pop    eax
  433941:	(bad)  
  433942:	pusha  
  433943:	jns    0x43394d
  433945:	repz push 0x6c43
  43394b:	add    BYTE PTR [esp+ebx*1],dh
  43394e:	ins    BYTE PTR es:[edi],dx
  43394f:	add    bl,dh
  433951:	(bad)  
  433953:	shl    BYTE PTR [ebp+edi*1-0x220c0002],0xc
  43395b:	test   dh,dl
  43395d:	mov    ds:0x3178f9fb,eax
  433962:	pusha  
  433963:	add    ecx,0x18
  433966:	add    eax,DWORD PTR [ebp-0x39ff27dc]
  43396c:	fcomp  st(6)
  43396e:	xor    bh,al
  433970:	pop    ecx
  433971:	loopne 0x43399b
  433973:	mov    esi,0xe8530f23
  433978:	or     dh,BYTE PTR [edx+0x778fffd]
  43397e:	mov    dl,0x6f
  433980:	outs   dx,BYTE PTR ds:[esi]
  433981:	add    ah,BYTE PTR [esi-0x38]
  433984:	add    eax,DWORD PTR [eax-0x6f74a05e]
  43398a:	push   ecx
  43398b:	std    
  43398c:	mov    bh,BYTE PTR [esi-0x26]
  43398f:	cmp    ch,0x16
  433992:	out    0xc,eax
  433994:	jo     0x433932
  433996:	xor    al,0xfd
  433998:	jp     0x4339e4
  43399a:	mov    DWORD PTR [eax],esi
  43399c:	xor    ecx,DWORD PTR [esi-0x3c]
  43399f:	shl    dh,0x69
  4339a2:	pop    DWORD PTR [ebx]
  4339a4:	jmp    0x5e06:0xf3047582
  4339ab:	inc    ebp
  4339ac:	fistp  QWORD PTR [ebp-0x4e]
  4339af:	cmp    eax,DWORD PTR [eax]
  4339b1:	add    BYTE PTR [eax],al
  4339b3:	ins    DWORD PTR es:[edi],dx
  4339b4:	inc    ebx
  4339b5:	out    dx,eax
  4339b6:	cld    
  4339b7:	jbe    0x43394b
  4339b9:	inc    edi
  4339ba:	push   ss
  4339bb:	repz push es
  4339bd:	pop    esi
  4339be:	lea    edx,[edi+0x11]
  4339c1:	out    0x3,eax
  4339c3:	(bad)  
  4339c4:	lock inc ecx
  4339c6:	mov    esp,edi
  4339c8:	push   edi
  4339c9:	pop    esi
  4339ca:	xchg   esp,eax
  4339cb:	jnp    0x4339de
  4339cd:	out    0x3,eax
  4339cf:	jbe    0x433a4b
  4339d1:	xchg   DWORD PTR ds:0x76f06f3,edx
  4339d7:	cmc    
  4339d8:	pop    es
  4339d9:	push   edx
  4339da:	mov    ds:0xce706e1,eax
  4339df:	mov    eax,ds:0x870309d6
  4339e4:	xchg   ecx,eax
  4339e5:	jae    0x4339ea
  4339e7:	repz push es
  4339e9:	xchg   DWORD PTR fs:[edx-0xcfc186e],eax
  4339f0:	jge    0x433a5c
  4339f2:	lahf   
  4339f3:	loope  0x4339fb
  4339f5:	out    0x28,eax
  4339f7:	jle    0x433a28
  4339f9:	add    BYTE PTR [esi-0x70],ch
  4339fc:	adc    al,0x0
  4339fe:	jmp    0xb6c85a28
  433a03:	inc    esp
  433a04:	xchg   bh,al
  433a06:	loope  0x4339ff
  433a08:	add    DWORD PTR [ecx+0x11],0xfffffff2
  433a0c:	test   eax,0xc6c3ebe5
  433a11:	test   DWORD PTR [esi+0x12006114],ebx
  433a17:	add    BYTE PTR [eax],al
  433a19:	add    BYTE PTR [eax-0x7761afc8],ah
  433a1f:	xor    BYTE PTR [ebx],0xe9
  433a22:	lock add DWORD PTR [ecx-0x6b],0x79
  433a27:	inc    edi
  433a28:	pop    esp
  433a29:	jb     0x433a22
  433a2b:	imul   eax,esp,0xfffffff9
  433a2e:	dec    eax
  433a2f:	lock repz push cs
  433a32:	dec    edi
  433a33:	or     DWORD PTR [ecx],0xffffffe8
  433a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433a37:	pop    edx
  433a38:	stc    
  433a39:	scas   al,BYTE PTR es:[edi]
  433a3a:	les    esi,FWORD PTR [ecx]
  433a3c:	outs   dx,DWORD PTR ds:[esi]
  433a3d:	(bad)  [ecx+0x57]
  433a40:	stc    
  433a41:	out    dx,al
  433a42:	sub    cl,ch
  433a44:	pop    edx
  433a45:	push   ebp
  433a46:	sub    BYTE PTR [edi],bh
  433a48:	je     0x433aba
  433a4a:	mov    eax,0x1bd5e75e
  433a4f:	out    dx,eax
  433a50:	stc    
  433a51:	push   0xffffff88
  433a53:	pop    esi
  433a54:	add    BYTE PTR ds:0x4d5183b1,bh
  433a5a:	ins    BYTE PTR es:[edi],dx
  433a5b:	inc    edi
  433a5c:	cmp    BYTE PTR [ebx-0x4d],ah
  433a5f:	call   0xa7bb9d5e
  433a64:	adc    ch,cl
  433a66:	lock adc DWORD PTR [ecx+0x70145],0x8765e2da
  433a71:	aad    0x3e
  433a73:	adc    BYTE PTR [ecx+0x153a00],0x0
  433a7a:	inc    ecx
  433a7b:	jl     0x433a15
  433a7d:	push   ss
  433a7e:	add    BYTE PTR [eax],al
  433a80:	add    dl,cl
  433a82:	add    al,0x88
  433a84:	add    al,0xcb
  433a86:	add    edx,DWORD PTR [edi+0x4a4a0]
  433a8c:	je     0x1e449955
  433a92:	test   BYTE PTR [eax+eax*1-0x7b7afb66],dl
  433a99:	adc    eax,0x8a000097
  433a9e:	jnp    0x433b0f
  433aa0:	push   0x855c3c11
  433aa5:	adc    ebp,DWORD PTR [ebx-0x1]
  433aa8:	mov    dl,BYTE PTR [ebp+0x1c0fb2c]
  433aae:	add    DWORD PTR [ebx],ebp
  433ab0:	rcl    cl,0x75
  433ab3:	or     al,0x33
  433ab5:	or     BYTE PTR [eax+0x783d04f6],al
  433abb:	mov    edx,0x6c53c152
  433ac0:	sub    ebx,ebx
  433ac2:	push   eax
  433ac3:	push   eax
  433ac4:	push   edi
  433ac5:	repnz jecxz 0x433afc
  433ac8:	add    BYTE PTR [edx],bl
  433aca:	jns    0x433b0b
  433acc:	ins    BYTE PTR es:[edi],dx
  433acd:	mov    ds:0x58b5c44,eax
  433ad2:	add    esp,0xed553210
  433ad8:	jmp    FWORD PTR ds:0x4a330779
  433ade:	sub    edi,DWORD PTR [ecx]
  433ae0:	adc    BYTE PTR [edi+0xfe7afb],dh
  433ae6:	add    BYTE PTR [eax],al
  433ae8:	(bad)  
  433ae9:	cld    
  433aea:	mov    eax,es
  433aec:	sub    eax,0x4948534d
  433af1:	in     al,0xfa
  433af3:	pop    esp
  433af4:	repz pushf 
  433af6:	cmp    dl,0xf7
  433af9:	enter  0xc089,0x24
  433afd:	and    BYTE PTR [ecx-0x75],bl
  433b00:	aaa    
  433b01:	fiadd  WORD PTR [ebx+ebx*2]
  433b04:	mov    al,0xa
  433b06:	mov    esp,ebp
  433b08:	js     0x433b1c
  433b0a:	or     al,0x2d
  433b0c:	mov    edx,0x1774d324
  433b11:	jne    0x433b56
  433b13:	sbb    al,0xd8
  433b15:	push   ds
  433b16:	imul   ebx,DWORD PTR [ebx+0x7a],0x398711a5
  433b1d:	retf   0x468c
  433b20:	jmp    0x433b98
  433b22:	dec    ebx
  433b23:	sbb    BYTE PTR [ebx+ebx*4-0x229300d3],ch
  433b2a:	std    
  433b2b:	xchg   bl,bh
  433b2d:	jbe    0x433b74
  433b2f:	add    al,0x6a
  433b31:	mov    ch,0x1
  433b33:	xchg   DWORD PTR [ebx+0x1b488cbd],ebp
  433b39:	addr16 inc ebp
  433b3b:	sub    al,0x7a
  433b3d:	mov    ch,0x2d
  433b3f:	xchg   DWORD PTR [ebx-0x8b7733b],ebp
  433b45:	bound  eax,QWORD PTR [ebp-0x22209d0]
  433b4b:	rol    BYTE PTR [eax],0x0
  433b4e:	add    BYTE PTR [ebx-0xc800217],dh
  433b54:	fld    QWORD PTR [esi+0x4c668748]
  433b5a:	push   eax
  433b5b:	jp     0x433b82
  433b5d:	dec    eax
  433b5e:	shl    DWORD PTR [ebx-0x63],0x1b
  433b62:	add    bl,dh
  433b64:	fdivp  st(5),st
  433b66:	push   ebx
  433b68:	cwde   
  433b69:	test   ah,al
  433b6b:	or     al,dh
  433b6d:	std    
  433b6e:	clc    
  433b6f:	in     al,0x7
  433b71:	mov    ds:0x3cc70ef9,al
  433b76:	(bad)  
  433b77:	out    dx,eax
  433b78:	push   es
  433b79:	dec    edi
  433b7a:	cli    
  433b7b:	retf   0x8ae6
  433b7e:	push   edi
  433b7f:	test   DWORD PTR [ebx],ecx
  433b81:	out    0xc7,eax
  433b83:	scas   eax,DWORD PTR es:[edi]
  433b84:	shr    DWORD PTR [ebx+0x1cd3a7c8],cl
  433b8a:	lea    ebx,[edi+0x420c1c92]
  433b90:	mov    WORD PTR [eax],?
  433b92:	jo     0x433bbb
  433b94:	xchg   edx,eax
  433b95:	loopne 0x433bae
  433b97:	jo     0x433b7f
  433b99:	(bad)  [esi+0x3e]
  433b9c:	cmp    eax,0x8bf76f5e
  433ba1:	cmp    DWORD PTR [ebx-0xf],edi
  433ba4:	sbb    DWORD PTR [esi],ebx
  433ba6:	icebp  
  433ba7:	cdq    
  433ba8:	repnz loope 0x433b37
  433bab:	dec    ecx
  433bac:	enter  0x2e,0x26
  433bb0:	mov    ah,BYTE PTR [ecx]
  433bb2:	xor    al,0x0
  433bb4:	add    BYTE PTR [eax],al
  433bb6:	fmul   DWORD PTR [ecx]
  433bb8:	data16 loop 0x433ba5
  433bbb:	mov    ebx,DWORD PTR [ecx]
  433bbd:	jo     0x433ba0
  433bbf:	mov    DWORD PTR [ecx],ecx
  433bc1:	or     al,0xc7
  433bc3:	or     esp,DWORD PTR [esi-0x6]
  433bc6:	jmp    0xf19e:0x9e59eb64
  433bcd:	clc    
  433bce:	sub    ah,dh
  433bd0:	mov    dl,BYTE PTR [esi+0x65]
  433bd3:	movntq QWORD PTR [edx+esi*4-0x603c9be6],mm1
  433bdb:	add    dl,BYTE PTR [eax]
  433bdd:	jno    0x433bb6
  433bdf:	pop    edx
  433be0:	repnz push ebx
  433be2:	outs   dx,BYTE PTR ds:[esi]
  433be3:	dec    eax
  433be4:	jge    0xf95a669e
  433bea:	and    al,0x92
  433bec:	add    BYTE PTR [edi+edi*8],ah
  433bef:	arpl   sp,ax
  433bf1:	loope  0x433ba6
  433bf3:	inc    edi
  433bf4:	xor    al,0xe9
  433bf6:	lock push es
  433bf8:	add    BYTE PTR [eax],bh
  433bfa:	push   0x4360083f
  433bff:	sub    ebp,eax
  433c01:	loope  0x433bce
  433c03:	(bad)  
  433c05:	daa    
  433c06:	push   ds
  433c07:	inc    eax
  433c08:	pop    ebx
  433c09:	stos   DWORD PTR es:[edi],eax
  433c0a:	call   0xabbaf415
  433c0f:	(bad)  
  433c11:	push   cs
  433c12:	cmp    al,0xa5
  433c14:	or     cl,ch
  433c16:	mov    ah,0xd2
  433c18:	int3   
  433c19:	sub    eax,0xac000000
  433c1e:	ror    ah,cl
  433c20:	mov    esp,0xa485f27f
  433c25:	loopne 0x433c7a
  433c27:	sub    eax,0x9a3bf22
  433c2c:	gs push edi
  433c2e:	push   es
  433c2f:	add    cl,ch
  433c31:	jo     0x433c51
  433c33:	das    
  433c34:	fsubrp st(5),st
  433c36:	xchg   esp,eax
  433c37:	add    cl,ch
  433c39:	lock arpl WORD PTR [ebx-0xb],di
  433c3d:	sbb    BYTE PTR [eax],dl
  433c3f:	and    DWORD PTR [ecx-0x10],0x6
  433c43:	add    BYTE PTR [edi-0x3df7a689],dh
  433c49:	inc    edi
  433c4a:	pop    ecx
  433c4b:	pop    es
  433c4c:	lahf   
  433c4d:	ins    DWORD PTR es:[edi],dx
  433c4e:	and    edi,edx
  433c50:	xchg   edx,eax
  433c51:	lds    esp,FWORD PTR [eax+edx*1+0x184079e9]
  433c58:	and    ch,al
  433c5a:	es jae 0x433c50
  433c5d:	push   ebp
  433c5e:	dec    eax
  433c5f:	and    BYTE PTR [ecx-0x50],ch
  433c62:	and    eax,DWORD PTR [eax]
  433c64:	pusha  
  433c65:	popf   
  433c66:	cs aaa 
  433c68:	add    ah,dl
  433c6a:	es ins DWORD PTR es:[edi],dx
  433c6c:	pop    es
  433c6d:	dec    ebp
  433c6e:	and    al,0x24
  433c70:	mov    al,ds:0x8b004819
  433c75:	or     al,0x33
  433c77:	or     DWORD PTR [esi-0x56],0x55
  433c7b:	push   0xaf1cc
  433c80:	push   0x0
  433c82:	add    BYTE PTR [eax],al
  433c84:	fstp   TBYTE PTR [eax]
  433c86:	not    ecx
  433c88:	push   ecx
  433c89:	jecxz  0x433d06
  433c8b:	(bad)  
  433c8c:	(bad)  
  433c8d:	and    ebx,esi
  433c8f:	jne    0x433c57
  433c91:	cmp    eax,0xdc26b856
  433c96:	idiv   edi
  433c98:	add    DWORD PTR [esi],edi
  433c9a:	mov    edx,0x4d918a10
  433c9f:	or     al,0x58
  433ca1:	xchg   ebx,eax
  433ca2:	jbe    0x433cc0
  433ca4:	dec    esp
  433ca5:	xchg   ebx,eax
  433ca6:	push   edi
  433ca7:	xor    al,0x32
  433ca9:	(bad)  
  433caa:	idiv   bh
  433cac:	xor    eax,0xd185d890
  433cb1:	push   esi
  433cb2:	adc    al,0x8b
  433cb4:	pushf  
  433cb5:	xor    BYTE PTR [ebx+0x5053ee4e],al
  433cbb:	call   FWORD PTR [ebx]
  433cbd:	mov    ah,al
  433cbf:	or     BYTE PTR ds:0x5a001c25,cl
  433cc5:	or     BYTE PTR [eax],al
  433cc7:	pop    edi
  433cc8:	xchg   esp,eax
  433cc9:	xchg   ecx,eax
  433cca:	mov    ebx,0x10c6975b
  433ccf:	add    BYTE PTR [edx+0x25fff7e0],dh
  433cd5:	inc    ecx
  433cd6:	push   ebp
  433cd7:	ret    0x84a
  433cda:	int3   
  433cdb:	int3   
  433cdc:	data16 int3 
  433cde:	int3   
  433cdf:	int3   
  433ce0:	inc    esi
  433ce1:	int3   
  433ce2:	int3   
  433ce3:	int3   
  433ce4:	repz mov ah,0x3d
  433ce7:	dec    esp
  433ce8:	add    BYTE PTR [eax],al
  433cea:	add    BYTE PTR [ebx-0x28],ah
  433ced:	cmp    eax,0x502e3400
  433cf2:	pop    es
  433cf3:	repz in eax,dx
  433cf5:	std    
  433cf6:	shl    BYTE PTR [ebx],0xfe
  433cf9:	xchg   ebx,eax
  433cfa:	push   ds
  433cfb:	xor    ebp,esi
  433cfd:	mov    edx,0xfdf33b40
  433d02:	push   ebx
  433d04:	mov    al,0xc1
  433d06:	int3   
  433d07:	mov    edi,0x22ec8522
  433d0c:	sbb    al,0x85
  433d0e:	ins    DWORD PTR es:[edi],dx
  433d0f:	fbstp  TBYTE PTR [eax+0x73]
  433d12:	xor    al,0xf3
  433d14:	cld    
  433d15:	test   al,bh
  433d17:	es leave 
  433d19:	xchg   BYTE PTR [edx-0x31],cl
  433d1c:	push   0xee5b204e
  433d21:	std    
  433d22:	push   ebx
  433d24:	and    ch,bl
  433d26:	test   DWORD PTR [eax],edi
  433d28:	push   es
  433d29:	push   WORD PTR [edi+ebx*4]
  433d2d:	repnz into 
  433d2f:	jo     0x433d62
  433d31:	add    DWORD PTR [edi-0x3f7f25d3],eax
  433d37:	out    0xe8,al
  433d39:	push   edx
  433d3a:	mov    eax,0xfffdedf2
  433d3f:	mov    ebp,0x305be058
  433d44:	sar    BYTE PTR [ebp+0x70c5b537],0xd
  433d4b:	js     0x433cd0
  433d4d:	sbb    DWORD PTR [esi-0xe000000],esi
  433d53:	in     eax,dx
  433d54:	std    
  433d55:	jmp    DWORD PTR [eax]
  433d57:	jl     0x3baa209f
  433d5d:	sub    al,0x7a
  433d5f:	jnp    0x433d86
  433d61:	and    eax,0x88f70698
  433d66:	mov    cl,0x2e
  433d68:	push   ds
  433d69:	cld    
  433d6a:	popf   
  433d6b:	cs pop esi
  433d6d:	dec    ecx
  433d6e:	test   DWORD PTR [edi+0x2fa33031],0xeea553af
  433d78:	and    eax,0x5ee2eae5
  433d7d:	sbb    eax,DWORD PTR ds:[esi+0x497408a3]
  433d84:	rcl    DWORD PTR [edx+esi*4+0x49],cl
  433d88:	xlat   BYTE PTR ds:[ebx]
  433d89:	add    esi,ebx
  433d8b:	push   es
  433d8c:	out    0x30,eax
  433d8e:	mov    bl,0x41
  433d90:	pop    esi
  433d91:	fistp  WORD PTR [eax]
  433d93:	(bad)  
  433d94:	into   
  433d95:	cmp    eax,0xf8249003
  433d9a:	out    0xc9,al
  433d9c:	stc    
  433d9d:	(bad)  
  433d9e:	ins    DWORD PTR es:[edi],dx
  433d9f:	imul   ecx,DWORD PTR fs:[ecx+0x7ae8eb2],0x6e
  433da7:	cmp    DWORD PTR [ebx],edx
  433da9:	add    DWORD PTR [ecx],esp
  433dab:	pop    ss
  433dac:	mov    bh,0x28
  433dae:	mov    edx,0xebebb538
  433db3:	icebp  
  433db4:	inc    edx
  433db5:	cmc    
  433db6:	add    BYTE PTR [eax],al
  433db8:	add    BYTE PTR [esi+0x54],ch
  433dbb:	cmp    eax,DWORD PTR [ecx-0x501ecc9]
  433dc1:	fild   QWORD PTR [edx]
  433dc3:	pop    esi
  433dc4:	inc    ecx
  433dc5:	out    dx,eax
  433dc6:	lea    esi,[ecx+0x222dc22f]
  433dcc:	push   esp
  433dcd:	mov    esp,0x4ae601ee
  433dd2:	loop   0x433e32
  433dd4:	dec    esi
  433dd5:	or     eax,DWORD PTR [esi+0x616c082b]
  433ddb:	mov    bh,0x54
  433ddd:	je     0x433e18
  433ddf:	add    ch,al
  433de1:	jecxz  0x433da9
  433de3:	pop    edx
  433de4:	bound  edi,QWORD PTR [esi+edi*1]
  433de7:	mov    ebp,0xff2ed672
  433dec:	cs (bad) 
  433dee:	sbb    DWORD PTR [edx+0x19],eax
  433df1:	xchg   esp,eax
  433df2:	pop    es
  433df3:	shl    DWORD PTR [edi],0xc7
  433df6:	push   es
  433df7:	add    cl,ch
  433df9:	lock mov edx,DWORD PTR [edx+0xd]
  433dfd:	sub    dh,BYTE PTR [edi-0x2e0c1393]
  433e03:	xchg   DWORD PTR [edi],edx
  433e05:	or     eax,DWORD PTR [eax+0x2d]
  433e08:	test   eax,0x3ce38c3e
  433e0d:	mov    dl,0xd2
  433e0f:	int3   
  433e10:	cmp    al,0x7a
  433e12:	repnz test DWORD PTR [edi+ebp*8],esp
  433e16:	arpl   sp,bp
  433e18:	mov    ecx,0xeec08627
  433e1d:	add    BYTE PTR [eax],al
  433e1f:	add    BYTE PTR [ebx+ebx*8],ch
  433e22:	or     eax,0x788bf0e9
  433e27:	int    0x1d
  433e29:	loopne 0x433e34
  433e2b:	ins    DWORD PTR es:[edi],dx
  433e2c:	mov    DWORD PTR [ebx],edx
  433e2e:	add    cl,ch
  433e30:	jae    0x433e90
  433e32:	or     al,0xe9
  433e34:	out    dx,eax
  433e35:	mov    bl,cl
  433e37:	cli    
  433e38:	lock push es
  433e3a:	jge    0x433e3d
  433e3c:	out    dx,eax
  433e3d:	push   ebp
  433e3e:	push   es
  433e3f:	push   0xffffffe8
  433e41:	or     al,BYTE PTR [eax]
  433e43:	out    0xe5,al
  433e45:	mov    dh,0xd
  433e47:	jmp    0xf27ca23c
  433e4c:	lds    eax,FWORD PTR [ecx+eax*8]
  433e4f:	out    0xf4,al
  433e51:	push   es
  433e52:	add    cl,ch
  433e54:	jnp    0x433ea4
  433e56:	or     al,0x62
  433e58:	loopne 0x433de3
  433e5a:	dec    ebx
  433e5b:	add    dl,ah
  433e5d:	mov    cs,WORD PTR [eax+0x10]
  433e60:	mov    eax,ds:0x91530445
  433e65:	cmp    bh,BYTE PTR [eax]
  433e67:	mov    DWORD PTR [edi-0x27],edx
  433e6a:	add    DWORD PTR [ebp+0x5a],0x8155ff61
  433e71:	pop    ebp
  433e72:	cmp    al,0x89
  433e74:	iret   
  433e75:	fiadd  DWORD PTR [ecx+0x45632255]
  433e7b:	loopne 0x433ec2
  433e7d:	dec    edi
  433e7e:	fadd   DWORD PTR [eax]
  433e80:	fiadd  DWORD PTR [eax+eax*1]
  433e83:	add    DWORD PTR [eax],0x0
  433e86:	add    BYTE PTR [edx-0x1578f90b],ah
  433e8c:	clc    
  433e8d:	(bad)  
  433e8e:	dec    DWORD PTR [ebp-0x462b82d1]
  433e94:	dec    ecx
  433e95:	add    BYTE PTR [ebx-0x3f811ceb],cl
  433e9b:	out    0xdf,eax
  433e9d:	rol    BYTE PTR [edi],0xbe
  433ea0:	add    al,0x0
  433ea2:	add    BYTE PTR [ebx-0x65fff629],al
  433ea8:	mov    esi,esi
  433eaa:	adc    BYTE PTR [ecx+0xe7d7b2a],bl
  433eb0:	or     eax,DWORD PTR [edi]
  433eb2:	test   BYTE PTR [ecx-0x6],al
  433eb5:	(bad)  
  433eb6:	dec    DWORD PTR [ebp+0x5ffefa9e]
  433ebc:	lock or esi,0xffffffd9
  433ec0:	jmp    0x5582:0xe314833a
  433ec7:	and    cl,BYTE PTR [eax]
  433ec9:	fadd   DWORD PTR [ebx-0x219604f4]
  433ecf:	hlt    
  433ed0:	dec    ebx
  433ed1:	or     BYTE PTR [edx],al
  433ed3:	pushw  ss
  433ed5:	jns    0x433ed2
  433ed7:	repz fdivr DWORD PTR [edx+0x0]
  433edb:	repz jp 0x433f15
  433ede:	data16 repz jae 0x433edf
  433ee2:	gs repz cmc 
  433ee5:	dec    esp
  433ee6:	pop    ss
  433ee7:	repz in eax,dx
  433ee9:	jl     0x433f2c
  433eeb:	add    BYTE PTR [eax],al
  433eed:	add    bl,bh
  433eef:	add    DWORD PTR [ebx],0xffffff8b
  433ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433ef3:	mov    ecx,0xd1ae8767
  433ef8:	jp     0x433f4b
  433efa:	jmp    0x433f1a
  433efc:	push   edx
  433efd:	call   0x4115ac
  433f02:	push   0xc82dec03
  433f07:	push   esi
  433f08:	inc    esi
  433f09:	sbb    BYTE PTR [eax],ah
  433f0b:	mov    al,ds:0xedf201c6
  433f10:	std    
  433f11:	dec    edx
  433f13:	pop    esi
  433f14:	adc    al,0x0
  433f16:	repz push esp
  433f18:	inc    esi
  433f19:	and    BYTE PTR [eax+esi*1-0x120cffec],ch
  433f20:	std    
  433f21:	xor    BYTE PTR [ebx+0x33c106e1],0x9e
  433f28:	out    dx,al
  433f29:	stc    
  433f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433f2b:	pop    eax
  433f2c:	test   DWORD PTR [ecx-0x15],0x8283feee
  433f33:	in     eax,dx
  433f34:	std    
  433f35:	(bad)  
  433f36:	cld    
  433f37:	ja     0x433efb
  433f39:	mov    edi,0xc57ae593
  433f3e:	mov    dl,0x46
  433f40:	cmc    
  433f41:	cld    
  433f42:	mov    bl,0xdc
  433f44:	shl    DWORD PTR [edi-0x211f4],cl
  433f4a:	pop    esp
  433f4b:	push   ds
  433f4c:	mov    dh,cl
  433f4e:	out    0x98,al
  433f50:	jp     0x433f1f
  433f52:	add    BYTE PTR [eax],al
  433f54:	add    BYTE PTR [ebx+0x6],dh
  433f57:	add    eax,0xefdc7302
  433f5c:	ja     0x433f53
  433f5e:	mov    ebp,DWORD PTR [ebx+edi*8-0x35f0c689]
  433f65:	mov    bl,0xfe
  433f67:	stos   BYTE PTR es:[edi],al
  433f68:	js     0x433f1d
  433f6a:	push   es
  433f6b:	adc    BYTE PTR [ecx],bh
  433f6d:	hlt    
  433f6e:	push   es
  433f6f:	out    0x7e,eax
  433f71:	mov    dl,0x2a
  433f73:	sub    dh,bl
  433f75:	out    dx,eax
  433f76:	mov    ebp,DWORD PTR [esi+0x660f2c85]
  433f7c:	loop   0x433f6d
  433f7e:	sub    DWORD PTR [eax+0x54c671fc],0x2e
  433f85:	ins    BYTE PTR es:[edi],dx
  433f86:	dec    edi
  433f87:	or     ebp,DWORD PTR [esi+0x3e7deec]
  433f8d:	dec    ebp
  433f8e:	pop    es
  433f8f:	xchg   esi,eax
  433f90:	out    0x55,al
  433f92:	pop    es
  433f93:	cmp    eax,0xfb366c04
  433f98:	fisttp DWORD PTR [ebp-0x6]
  433f9b:	out    0x3,al
  433f9d:	outs   dx,BYTE PTR ds:[esi]
  433f9e:	dec    esp
  433f9f:	fistp  QWORD PTR [eax+eiz*1-0x21]
  433fa3:	test   al,0xdd
  433fa5:	jmp    0x433f7c
  433fa7:	xchg   esi,eax
  433fa8:	test   esi,ecx
  433faa:	or     DWORD PTR [esi-0x43],esp
  433fad:	in     al,dx
  433fae:	(bad)
  433fb2:	dec    eax
  433fb3:	mov    bh,0x7a
  433fb5:	cli    
  433fb6:	sbb    DWORD PTR [esi],edi
  433fb8:	xor    eax,0x81000000
  433fbd:	lock dec esp
  433fbf:	adc    al,0xf3
  433fc1:	push   es
  433fc2:	push   cs
  433fc3:	mov    esp,0x575ec401
  433fc8:	jnp    0x433fba
  433fca:	sbb    BYTE PTR [ebx+esi*8],dl
  433fcd:	push   es
  433fce:	outs   dx,BYTE PTR ds:[esi]
  433fcf:	push   edi
  433fd0:	sti    
  433fd1:	lds    eax,FWORD PTR [eax]
  433fd3:	stos   DWORD PTR es:[edi],eax
  433fd4:	call   0xf0ecb31b
  433fd9:	adc    DWORD PTR [ebx+0x21],0x28
  433fdd:	(bad)  
  433fde:	adc    cl,ch
  433fe0:	lock pop ebx
  433fe2:	cli    
  433fe3:	stc    
  433fe4:	(bad)  
  433fe5:	cld    
  433fe6:	jl     0x433f74
  433fe8:	inc    esp
  433fe9:	pop    es
  433fea:	or     DWORD PTR [ebp+0x1],ebp
  433fed:	push   cs
  433fee:	add    cl,ch
  433ff0:	repz cwde 
  433ff2:	(bad)  
  433ff3:	cmc    
  433ff4:	fstp   st(2)
  433ff6:	test   DWORD PTR [edi],ebx
  433ff8:	ds out 0x3e,eax
  433ffb:	push   0x3a
  433ffd:	ja     0xd21f5737
  434003:	push   0x2
  434005:	imul   DWORD PTR [ebp-0x51]
  434008:	jns    0x434049
  43400a:	adc    BYTE PTR [ecx-0x21],ch
  43400d:	push   cs
  43400e:	or     DWORD PTR [esp+eiz*2-0x9],esp
  434012:	(bad)  
  434013:	call   0xc943dbf3
  434018:	lock push es
  43401a:	je     0x434012
  43401c:	dec    edi
  43401d:	dec    edx
  43401e:	or     BYTE PTR [esi+0x30000000],ah
  434024:	inc    DWORD PTR [ebx+0x1c]
  434027:	aaa    
  434028:	pop    es
  434029:	out    0xe,eax
  43402b:	fild   WORD PTR [esi]
  43402d:	add    BYTE PTR [edx+0x3b],dh
  434030:	daa    
  434031:	sub    DWORD PTR [ecx-0x5d7afae4],0xffffffb1
  434038:	in     eax,0x8
  43403a:	push   0xffffff91
  43403c:	fisttp QWORD PTR [eax+0x10478bf1]
  434042:	jmp    0xdd434735
  434047:	loop   0x433fd7
  434049:	pop    ebx
  43404a:	cmp    eax,0x8e3b1
  43404f:	inc    eax
  434050:	add    eax,DWORD PTR [ebp+0x5561b655]
  434056:	in     eax,dx
  434057:	ror    DWORD PTR [esi+0x18],1
  43405a:	push   edx
  43405b:	jp     0x43401e
  43405d:	out    dx,al
  43405e:	pop    ss
  43405f:	pop    edx
  434060:	or     DWORD PTR [ebx+0x3f611255],eax
  434066:	sbb    BYTE PTR [ecx],bl
  434068:	retf   0xf62b
  43406b:	or     eax,0x1afffa0f
  434070:	or     ebx,esp
  434072:	add    eax,0x7320d799
  434077:	sub    BYTE PTR [edx+0x60afc75],al
  43407d:	test   BYTE PTR [eax+0xf00090a],dl
  434083:	pop    esp
  434084:	or     bh,dh
  434086:	dec    ebp
  434087:	add    BYTE PTR [eax],al
  434089:	add    BYTE PTR [esi],ah
  43408b:	popa   
  43408c:	(bad)  
  43408d:	shr    DWORD PTR [edx],cl
  43408f:	dec    eax
  434090:	jnp    0x434058
  434092:	loop   0x4340ef
  434094:	dec    ebp
  434095:	clc    
  434096:	fnop   
  434098:	jnp    0x434098
  43409a:	jmp    0x7d23:0xd8bd658
  4340a1:	shr    dh,0x7
  4340a4:	sbb    DWORD PTR [eax-0x32],0xca103fd5
  4340ab:	push   es
  4340ac:	add    BYTE PTR [eax],al
  4340ae:	fdivp  st(4),st
  4340b0:	xchg   DWORD PTR [ebp-0x7a],ebx
  4340b3:	pusha  
  4340b4:	ret    
  4340b5:	mov    ecx,DWORD PTR [ecx+0x4b08e1c2]
  4340bb:	rcl    DWORD PTR [eax],0xc1
  4340be:	jno    0x4340cb
  4340c0:	bound  eax,QWORD PTR [edi+eax*1]
  4340c3:	dec    esi
  4340c4:	in     al,dx
  4340c5:	mov    BYTE PTR [edi-0x19],dl
  4340c8:	mov    BYTE PTR [ebp-0xd],dl
  4340cb:	inc    ebx
  4340cc:	jl     0x434129
  4340ce:	test   BYTE PTR [ecx+0x39],ch
  4340d1:	sbb    bl,al
  4340d3:	jle    0x4340aa
  4340d5:	jle    0x4340d3
  4340d7:	in     eax,dx
  4340d8:	std    
  4340d9:	test   dh,al
  4340db:	adc    eax,0xe0fb417b
  4340e0:	(bad)  
  4340e1:	sub    eax,0xfd012d45
  4340e6:	inc    esp
  4340e7:	out    dx,al
  4340e8:	std    
  4340e9:	in     al,0xf6
  4340eb:	jo     0x4340d7
  4340ed:	adc    BYTE PTR [eax],al
  4340ef:	add    BYTE PTR [eax],al
  4340f1:	ror    bh,0x7e
  4340f4:	jnp    0x434125
  4340f6:	out    dx,al
  4340f7:	cli    
  4340f8:	add    DWORD PTR [edi],0xffffffbe
  4340fb:	std    
  4340fc:	(bad)  
  4340fd:	in     al,dx
  4340fe:	sbb    edi,esi
  434100:	clc    
  434101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434102:	jmp    0xce640b7d
  434107:	aas    
  434108:	jge    0x434137
  43410a:	(bad)  
  43410b:	jl     0x434160
  43410d:	sti    
  43410e:	lock lds edi,FWORD PTR [ebp-0xb]
  434112:	(bad)  [edi-0x26]
  434115:	js     0x434143
  434117:	and    al,0x83
  434119:	mov    bl,0x11
  43411b:	adc    al,BYTE PTR [ebp-0x61b9158]
  434121:	repz in eax,dx
  434123:	std    
  434124:	xchg   BYTE PTR [ebx],bh
  434126:	(bad)  
  434127:	jbe    0x434172
  434129:	adc    ebx,DWORD PTR [ecx-0x42]
  43412c:	mov    edi,0x3f7ce5cb
  434131:	out    0x74,eax
  434133:	inc    edx
  434134:	adc    bl,dh
  434136:	out    dx,eax
  434137:	std    
  434138:	call   FWORD PTR [edi]
  43413a:	mov    esp,0xae8f5b75
  43413f:	(bad)  
  434140:	or     BYTE PTR [ecx],cl
  434142:	lock adc BYTE PTR [ebx-0x61],0x6
  434147:	outs   dx,DWORD PTR ds:[esi]
  434148:	push   eax
  434149:	cwde   
  43414a:	(bad)  
  43414b:	mov    ds:0x3f372d0b,al
  434150:	cli    
  434151:	jecxz  0x434159
  434153:	out    0x7a,eax
  434155:	add    BYTE PTR [eax],al
  434157:	add    al,al
  434159:	fidiv  WORD PTR [eax+0x46]
  43415c:	or     ebx,DWORD PTR [eax]
  43415e:	push   ds
  43415f:	xor    ah,BYTE PTR [ecx-0x3d]
  434162:	jmp    0xb2f6:0xe706f307
  434169:	mul    dh
  43416b:	pop    es
  43416c:	repz push es
  43416e:	xchg   ebx,eax
  43416f:	fs mov esi,0xd572f7dc
  434175:	xchg   DWORD PTR [edi+ebp*8-0x7294f40d],ecx
  43417c:	cli    
  43417d:	push   es
  43417e:	out    0xfe,eax
  434180:	bound  ecx,QWORD PTR [eax]
  434182:	repnz aas 
  434184:	pop    ss
  434185:	(bad)  
  434186:	sbb    edx,edx
  434188:	adc    ecx,DWORD PTR [eax+0x66]
  43418b:	(bad)  
  43418c:	sti    
  43418d:	lea    esi,[esp+ebp*8]
  434190:	(bad)  
  434191:	mov    dl,0x66
  434193:	out    dx,al
  434194:	jecxz  0x4341ee
  434196:	test   eax,0x70273279
  43419b:	dec    ebp
  43419c:	xor    eax,DWORD PTR [edi+eiz*4+0xf8fde78]
  4341a3:	sbb    dl,ah
  4341a5:	inc    edx
  4341a6:	xlat   BYTE PTR ds:[ebx]
  4341a7:	add    ecx,ebp
  4341a9:	(bad)  
  4341ab:	ja     0x434196
  4341ad:	mov    ?,WORD PTR [eax+eiz*8]
  4341b0:	jl     0x4341a0
  4341b2:	fistp  WORD PTR [ecx-0x4b]
  4341b5:	mov    ebx,DWORD PTR [eax+eiz*8]
  4341b8:	jnp    0x4341f6
  4341ba:	xchg   esp,eax
  4341bb:	jns    0x4341bd
  4341bd:	add    BYTE PTR [eax],al
  4341bf:	inc    edx
  4341c0:	call   DWORD PTR [edi]
  4341c2:	push   edx
  4341c3:	mov    edi,DWORD PTR [eax+eax*1-0x21]
  4341c7:	lock push es
  4341c9:	test   DWORD PTR [edi+ebx*4],edx
  4341cc:	add    BYTE PTR [ecx+0x1],0xc2
  4341d0:	mov    bl,0x2d
  4341d2:	push   edi
  4341d3:	call   0xc085:0xd0ae850d
  4341da:	aad    0xf7
  4341dc:	mov    DWORD PTR [eax-0x27],0xe90006f0
  4341e3:	aaa    
  4341e4:	or     BYTE PTR [ebx],al
  4341e6:	jmp    0xa73448db
  4341eb:	loopne 0x4341f3
  4341ed:	add    al,0xe9
  4341ef:	lock je 0x4a396c
  4341f6:	bound  ebp,QWORD PTR [esi+0x1c9c8546]
  4341fc:	add    BYTE PTR [ebx-0x3],0xdb
  434200:	cdq    
  434201:	jb     0x4341e7
  434203:	fwait
  434204:	cdq    
  434205:	xchg   DWORD PTR [esp+ebx*1+0x74dec086],esp
  43420c:	ins    BYTE PTR es:[edi],dx
  43420d:	add    cl,ch
  43420f:	lock or DWORD PTR [ecx+0x9],0x74
  434214:	ret    0x1774
  434217:	jp     0x43425a
  434219:	adc    BYTE PTR [eax+0x2d],ah
  43421c:	mov    bl,0x83
  43421e:	mov    al,0x5c
  434220:	adc    eax,DWORD PTR [ebp+0x16]
  434226:	pop    ss
  434227:	test   BYTE PTR [esi-0x23],al
  43422a:	sti    
  43422b:	dec    edi
  43422c:	inc    eax
  43422d:	bound  esp,QWORD PTR [edx]
  43422f:	inc    DWORD PTR [esi-0x3e2424cc]
  434235:	loop   0x4342b1
  434237:	push   esp
  434238:	add    eax,edx
  43423a:	sbb    eax,0x2bab85e3
  43423f:	ss clc 
  434241:	add    BYTE PTR [edx],cl
  434243:	pusha  
  434244:	cmp    eax,0xe44089d4
  434249:	push   edx
  43424a:	cli    
  43424b:	mov    edx,0xeb1dea9c
  434250:	add    DWORD PTR [ebp+0x26],0x5f
  434254:	dec    ebp
  434255:	clc    
  434256:	or     edx,eax
  434258:	or     al,0xf7
  43425a:	inc    ebp
  43425b:	cmc    
  43425c:	inc    DWORD PTR [ecx]
  43425e:	pop    edx
  43425f:	add    eax,0x30e11a74
  434264:	hlt    
  434265:	mov    edx,DWORD PTR [edi+0x424f83ed]
  43426b:	aaa    
  43426c:	push   eax
  43426d:	push   ecx
  43426e:	mov    dl,0xd2
  434270:	or     eax,0x4d5e5a00
  434275:	clc    
  434276:	ret    
  434277:	inc    edx
  434278:	sbb    BYTE PTR [ebx+0x4521d187],cl
  43427e:	inc    BYTE PTR [esi]
  434280:	shr    BYTE PTR [ecx],1
  434282:	push   ebp
  434283:	inc    ebp
  434284:	adc    DWORD PTR [ebp-0xe],0x407786
  43428b:	add    BYTE PTR [eax],al
  43428d:	or     bl,dl
  43428f:	jle    0x434225
  434291:	sub    al,0x5
  434293:	add    bh,al
  434295:	aad    0x42
  434297:	add    BYTE PTR [eax],al
  434299:	or     al,BYTE PTR ds:0x50407bf
  43429f:	add    BYTE PTR [eax],al
  4342a1:	lds    eax,FWORD PTR [eax+edx*1+0x0]
  4342a5:	loop   0x4342ab
  4342a7:	add    BYTE PTR [edi],cl
  4342a9:	push   esi
  4342aa:	test   BYTE PTR [eax],al
  4342ac:	add    dl,cl
  4342ae:	xor    DWORD PTR [ebp-0x4],0x707dddda
  4342b5:	mov    esp,0x8a330004
  4342ba:	pop    esi
  4342bb:	inc    ecx
  4342bc:	add    bl,dh
  4342be:	loopne 0x43426f
  4342c0:	or     al,0x3
  4342c2:	cs jnp 0x434308
  4342c5:	lahf   
  4342c6:	push   ebp
  4342c7:	cmp    eax,0xe02b6a20
  4342cc:	xor    DWORD PTR [ebx+0x3b8524da],0xffffffca
  4342d3:	jl     0x434320
  4342d5:	lahf   
  4342d6:	imul   edi,DWORD PTR [ebx+0x3554e474],0x40
  4342dd:	mov    eax,0xfc6d1da5
  4342e2:	fs dec edi
  4342e4:	aam    0x79
  4342e6:	stos   DWORD PTR es:[edi],eax
  4342e7:	(bad)  [eax+0x41e6d3f7]
  4342ed:	mov    bl,0x64
  4342ef:	dec    edi
  4342f0:	clc    
  4342f1:	add    BYTE PTR [eax],al
  4342f3:	add    BYTE PTR [eax-0x55],dh
  4342f6:	fld    DWORD PTR [eax]
  4342f8:	mov    edi,0x47437ad5
  4342fd:	in     eax,0x40
  4342ff:	cld    
  434300:	shl    DWORD PTR [eax],0xed
  434303:	inc    ecx
  434304:	add    ebp,esi
  434306:	add    eax,DWORD PTR [eax]
  434308:	repz pop ecx
  43430a:	push   cs
  43430b:	test   DWORD PTR [esi+0x1b537ad1],ebp
  434311:	gs cmp eax,0x4d7ba218
  434317:	call   0x411dba
  43431c:	push   0xac87ec13
  434321:	aad    0x7a
  434323:	inc    ebx
  434324:	out    0x6,eax
  434326:	aas    
  434327:	cld    
  434328:	lock jge 0x4342ad
  43432b:	jnp    0x434304
  43432d:	in     eax,dx
  43432e:	jl     0x434383
  434330:	fneni(8087 only) 
  434332:	xor    bl,0xfe
  434335:	in     eax,dx
  434336:	std    
  434337:	in     al,0xf5
  434339:	push   es
  43433a:	outs   dx,BYTE PTR ds:[esi]
  43433b:	inc    edx
  43433c:	adc    eax,DWORD PTR [edx-0x400d9059]
  434342:	daa    
  434343:	or     bl,dh
  434345:	push   es
  434346:	out    0x3,eax
  434348:	mov    dl,0x3f
  43434a:	daa    
  43434b:	add    al,0xf3
  43434d:	push   es
  43434e:	out    0xc2,eax
  434350:	bnd jmp esi
  434353:	add    esi,ebx
  434355:	iret   
  434356:	and    dl,BYTE PTR [eax+eax*1]
  434359:	add    BYTE PTR [eax],al
  43435b:	repz mul dh
  43435e:	add    ebp,edx
  434360:	sub    BYTE PTR [edi+0x3],0xf3
  434364:	push   es
  434365:	pushw  0x66f
  434369:	fidivr DWORD PTR [edi-0x5c]
  43436c:	or     edi,esp
  43436e:	add    ecx,DWORD PTR [esi]
  434370:	(bad)  
  434371:	ins    BYTE PTR es:[edi],dx
  434372:	pop    edi
  434373:	sysret 
  434375:	loop   0x434328
  434377:	push   esi
  434379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43437a:	jl     0x43432c
  43437c:	shr    BYTE PTR [esi+0x42],cl
  43437f:	adc    ecx,DWORD PTR [esi-0x398f2054]
  434385:	fwait
  434386:	and    al,0x76
  434388:	dec    esi
  434389:	ret    
  43438a:	jl     0x434344
  43438c:	mov    dl,0x6c
  43438e:	mov    esp,0x3a6defa7
  434393:	mov    bl,0x1b
  434395:	lahf   
  434396:	sbb    ebx,DWORD PTR [esi+0x1f505e07]
  43439c:	mov    WORD PTR [eax+eiz*8],gs
  43439f:	imul   eax,DWORD PTR [edx],0xffffffed
  4343a2:	call   0x4fa18a59
  4343a7:	jmp    0x434333
  4343a9:	dec    esp
  4343aa:	loopne 0x43439f
  4343ac:	pop    edx
  4343ad:	out    dx,eax
  4343ae:	jl     0x4343e0
  4343b0:	(bad)  
  4343b2:	xlat   BYTE PTR ds:[ebx]
  4343b4:	pop    ecx
  4343b5:	add    BYTE PTR [esi-0x3e],dh
  4343b8:	dec    eax
  4343b9:	adc    cl,ch
  4343bb:	out    dx,al
  4343bc:	push   es
  4343bd:	add    BYTE PTR ds:0xe2000000,bl
  4343c3:	mov    ecx,DWORD PTR [ebx-0x6b]
  4343c6:	ss cmp bh,al
  4343c9:	bound  esi,QWORD PTR [edx]
  4343cb:	out    dx,eax
  4343cc:	dec    esi
  4343cd:	cmp    edi,DWORD PTR [edi]
  4343cf:	fbld   TBYTE PTR [ebx-0x7af90f23]
  4343d5:	adc    al,0x87
  4343d7:	mov    es,WORD PTR [ecx-0x2f]
  4343da:	cmovp  esi,esp
  4343dd:	rol    ch,0xd2
  4343e0:	std    
  4343e1:	cmp    BYTE PTR [esi+0x52],dh
  4343e4:	in     al,0xe9
  4343e6:	stc    
  4343e7:	cmp    eax,edi
  4343e9:	out    0xed,al
  4343eb:	dec    ecx
  4343ec:	or     ebp,ecx
  4343ee:	lock jmp 0x4343fb
  4343f1:	jb     0x4343a5
  4343f3:	sub    DWORD PTR es:[ecx],0xffffffe3
  4343f7:	pop    es
  4343f8:	shr    DWORD PTR [ecx-0x16fff914],0xf0
  4343ff:	mov    DWORD PTR [ecx],0x6f0f1
  434405:	push   ss
  434406:	mov    dl,0xf6
  434408:	(bad)  
  434409:	jmp    0xd16f:0xcc7406f0
  434410:	adc    BYTE PTR [edx-0x8],bh
  434413:	adc    DWORD PTR [ebp+0x6f0e9],0xd2946a
  43441d:	fiadd  WORD PTR [ebp+eax*1-0xf16f5]
  434424:	mov    cl,0xeb
  434426:	add    BYTE PTR [eax],al
  434428:	add    BYTE PTR [ebx],cl
  43442a:	inc    edx
  43442b:	cld    
  43442c:	bound  ebp,QWORD PTR [edx+0x6e2be0c3]
  434432:	enter  0x8,0x63
  434436:	inc    ebp
  434437:	clc    
  434438:	add    edx,DWORD PTR [edx+0x810f68a]
  43443e:	rol    DWORD PTR [edi],0xb7
  434441:	in     eax,0x2
  434443:	xor    ebx,ecx
  434445:	lds    edx,FWORD PTR [ebx+esi*8-0x5]
  434449:	push   ebp
  43444a:	fisubr WORD PTR [ebx]
  43444c:	fcmovne st,st(1)
  43444e:	xlat   BYTE PTR ds:[ebx]
  43444f:	add    DWORD PTR [edi-0x46],0x54
  434453:	shl    BYTE PTR [esp+edi*4+0x52],0x47
  434458:	adc    BYTE PTR [ebx-0x20],cl
  43445b:	add    DWORD PTR [ebx+0x4881087b],eax
  434461:	inc    esi
  434462:	push   edx
  434463:	dec    edi
  434464:	and    ch,cl
  434466:	dec    ebx
  434467:	xor    BYTE PTR [ecx],al
  434469:	mov    cl,BYTE PTR [ecx]
  43446b:	add    BYTE PTR [edx+0x5a],ch
  43446e:	xor    eax,DWORD PTR [eax]
  434470:	push   0x5a
  434472:	mov    cl,0xfe
  434474:	adc    ecx,DWORD PTR [edx+0x9]
  434477:	or     DWORD PTR [ebp+0x62],0x52
  43447b:	dec    ebp
  43447c:	clc    
  43447d:	rol    DWORD PTR [esi+0x18],cl
  434480:	mov    DWORD PTR [ebx+0x4107bf19],ebx
  434486:	or     DWORD PTR [eax],eax
  434488:	add    bl,ah
  43448a:	sbb    eax,0xc
  43448f:	add    BYTE PTR [edx],bl
  434491:	mov    dh,dh
  434493:	and    BYTE PTR [ecx-0x98284d5],cl
  434499:	or     DWORD PTR [edi],eax
  43449b:	test   BYTE PTR [ecx+0x15fff9dd],dl
  4344a1:	xchg   edi,eax
  4344a2:	cli    
  4344a3:	(bad)  
  4344a4:	addr16 in eax,dx
  4344a6:	or     esi,0x39
  4344a9:	jmp    0x5582:0xd24c833a
  4344b0:	repz mov ch,0xfd
  4344b3:	xlat   BYTE PTR ds:[ebx]
  4344b4:	jo     0x43447a
  4344b6:	and    al,0x6e
  4344b8:	mov    ebp,0xb085b559
  4344bd:	lahf   
  4344be:	in     al,0x10
  4344c0:	jb     0x434481
  4344c2:	add    al,0xf9
  4344c4:	repz (bad) 
  4344c7:	(bad)  
  4344c8:	push   0xebe8c3a1
  4344cd:	sahf   
  4344ce:	jecxz  0x4344d8
  4344d0:	(bad)  
  4344d1:	fucom  st(2)
  4344d3:	add    bl,dh
  4344d5:	loopne 0x43449b
  4344d7:	test   DWORD PTR [esi],ebp
  4344d9:	(bad)  
  4344da:	(bad)  
  4344db:	in     eax,0xfb
  4344dd:	loopne 0x43449d
  4344df:	xchg   DWORD PTR [esi+esi*4],esi
  4344e2:	jl     0x434523
  4344e4:	ret    
  4344e5:	nop
  4344e6:	(bad)  
  4344e7:	sub    eax,0x5f92585
  4344ec:	repz (bad) 
  4344ef:	jl     0x4344dd
  4344f1:	jmp    0x434df3
  4344f6:	add    BYTE PTR [edi+0x44],ch
  4344f9:	cmc    
  4344fa:	call   FWORD PTR [eax+edi*4-0x3]
  4344fe:	gs repz mov bh,0xfd
  434502:	out    0xbe,eax
  434504:	jmp    0x434503
  434506:	(bad)  
  434507:	js     0x434584
  434509:	cmc    
  43450a:	xchg   BYTE PTR [ebp+eax*1+0x59033e7b],dh
  434511:	dec    edi
  434512:	clc    
  434513:	xor    al,0xe5
  434515:	idiv   bh
  434517:	and    al,0xde
  434519:	jle    0x434596
  43451b:	out    dx,eax
  43451c:	loop   0x434510
  43451e:	xor    edi,0xffffffe1
  434521:	std    
  434522:	push   DWORD PTR [eax+0x5b]
  434525:	icebp  
  434526:	add    esp,esi
  434528:	imul   ecx,DWORD PTR [esi],0xe706f30c
  43452e:	cmp    BYTE PTR [edx+0xa],0xe7
  434532:	outs   dx,DWORD PTR ds:[esi]
  434533:	pop    es
  434534:	and    BYTE PTR [ecx-0x49f43b7e],0xda
  43453b:	push   ss
  43453c:	(bad)  
  43453d:	stos   BYTE PTR es:[edi],al
  43453e:	(bad)  
  43453f:	inc    BYTE PTR [esi]
  434541:	out    0x3,eax
  434543:	aam    0x70
  434545:	fiadd  WORD PTR [ebx]
  434547:	xrelease xchg DWORD PTR [ecx-0x71deb1fe],ebp
  43454e:	std    
  43454f:	imul   ebp,DWORD PTR [edi-0x19],0x6606f303
  434556:	push   0x7fda06a7
  43455b:	add    BYTE PTR [eax],al
  43455d:	add    BYTE PTR [edi+edi*8-0x6315fc1a],bh
  434564:	in     eax,0xe6
  434566:	cmp    bl,dl
  434568:	pop    esi
  434569:	mov    ch,0xb6
  43456b:	out    0x25,al
  43456d:	xor    DWORD PTR [ecx+0x7b506ffe],0x7
  434574:	aas    
  434575:	sub    BYTE PTR [ecx+0x7],0xd5
  434579:	lds    ebp,FWORD PTR [esi-0x41]
  43457c:	cmp    dl,bl
  43457e:	jbe    0x434547
  434580:	data16 in al,0x54
  434583:	mov    BYTE PTR [edi+0x2],al
  434586:	je     0x4345cb
  434588:	jmp    0x43450c
  43458a:	dec    ebx
  43458b:	pop    es
  43458c:	mov    dl,0x4e
  43458e:	cmp    ch,BYTE PTR [edx]
  434590:	ins    BYTE PTR es:[edi],dx
  434591:	push   ebx
  434592:	cmovs  esp,edi
  434595:	les    edx,FWORD PTR [esi]
  434597:	or     BYTE PTR [edx],ch
  434599:	(bad)  
  43459a:	stc    
  43459b:	push   es
  43459c:	out    0x3,eax
  43459e:	sahf   
  43459f:	in     al,0xe6
  4345a1:	(bad)  
  4345a3:	jmp    esi
  4345a5:	add    esi,DWORD PTR [esi-0x35]
  4345a8:	add    BYTE PTR [ecx],al
  4345aa:	mov    ebp,edx
  4345ac:	stc    
  4345ad:	out    dx,al
  4345ae:	jb     0x4345ff
  4345b0:	or     al,0xef
  4345b2:	aaa    
  4345b3:	add    eax,0x6f0e90d
  4345b8:	jae    0x4345bf
  4345ba:	mov    al,0xec
  4345bc:	(bad)  
  4345bd:	imul   eax,ebp,0x46e8d4
  4345c3:	add    BYTE PTR [eax],al
  4345c5:	fcmovbe st,st(2)
  4345c7:	stc    
  4345c8:	test   al,0xaa
  4345ca:	rol    edx,1
  4345cc:	out    dx,al
  4345cd:	loopne 0x4345d5
  4345cf:	add    cl,ch
  4345d1:	jae    0x4345b0
  4345d3:	std    
  4345d4:	(bad)  
  4345d5:	fisttp WORD PTR [ebx]
  4345d7:	add    cl,ch
  4345d9:	sub    eax,DWORD PTR [esi+0x8]
  4345dc:	scas   al,BYTE PTR es:[edi]
  4345dd:	das    
  4345de:	out    dx,eax
  4345df:	inc    ebx
  4345e0:	adc    al,0x37
  4345e2:	pop    es
  4345e3:	shr    esi,0xed
  4345e6:	push   es
  4345e7:	add    cl,ch
  4345e9:	mov    cl,0xec
  4345eb:	(bad)  
  4345ec:	imul   ebx,DWORD PTR [ebp+0x7974e8d4],0x3d72f9d2
  4345f6:	push   esp
  4345f7:	(bad)  
  4345f9:	or     esp,edx
  4345fb:	int    0x42
  4345fd:	jb     0x4345cc
  4345ff:	and    dl,bl
  434601:	adc    dl,BYTE PTR [ebx+edi*2+0x45]
  434605:	out    dx,eax
  434606:	inc    DWORD PTR [ebx-0x62db5fe]
  43460c:	out    0x96,al
  43460e:	sar    edx,1
  434610:	pushf  
  434611:	push   esp
  434612:	mov    edx,cs
  434614:	cmp    cl,BYTE PTR [edi+0x11]
  434617:	jge    0x434640
  434619:	das    
  43461a:	mov    DWORD PTR [ebx+0x11],edx
  43461d:	repnz scas al,BYTE PTR es:[edi]
  43461f:	jge    0x434630
  434621:	xlat   BYTE PTR ds:[ebx]
  434622:	pusha  
  434623:	fiadd  DWORD PTR [eax]
  434625:	mov    eax,ds:0xc3838f
  43462a:	add    BYTE PTR [eax],al
  43462c:	add    eax,0xfdff1db5
  434631:	add    eax,0xfaf3c100
  434636:	xor    al,cl
  434638:	std    
  434639:	push   eax
  43463a:	adc    edi,edx
  43463c:	int    0xea
  43463e:	sub    ebx,ebx
  434640:	or     ecx,esp
  434642:	jnp    0x4346c1
  434644:	mov    esi,0xa4782d3
  434649:	xchg   esp,eax
  43464a:	dec    DWORD PTR ds:0xf0005da
  434650:	push   esi
  434651:	in     al,0x2
  434653:	add    dl,cl
  434655:	xchg   edx,eax
  434656:	dec    DWORD PTR [esi]
  434658:	retf   0x5
  43465b:	mov    edx,ebp
  43465d:	dec    edx
  43465e:	add    DWORD PTR [ebp-0x7a],0x160fc050
  434665:	ds (bad) 
  434667:	dec    DWORD PTR [edx-0x4e03bab2]
  43466d:	les    ebp,FWORD PTR [esi+0x5]
  434670:	adc    ebp,eax
  434672:	or     DWORD PTR [ebp+0x6],0xd1f0454f
  434679:	lds    ebp,FWORD PTR [esi+0x5]
  43467c:	loope  0x434642
  43467e:	add    DWORD PTR [ebp-0x3a],0xd60fc050
  434685:	mov    DWORD PTR [edx],0x454e4a00
  43468b:	hlt    
  43468c:	rol    DWORD PTR [eax-0x8],0x8b
  434690:	add    BYTE PTR [eax],al
  434692:	add    BYTE PTR [edi+0x5a5249ad],dl
  434698:	lods   eax,DWORD PTR ds:[esi]
  434699:	js     0x434681
  43469b:	or     eax,0x64583eb
  4346a0:	add    eax,0xc6f3f83d
  4346a5:	cmp    bh,ah
  4346a7:	retf   0xedaa
  4346aa:	jmp    FWORD PTR [edi+0xb5377f7]
  4346b0:	pop    esp
  4346b1:	mov    ecx,0x3da0da0c
  4346b6:	out    0xc5,eax
  4346b8:	in     eax,0xfd
  4346ba:	push   DWORD PTR [eax-0x17]
  4346bd:	push   cs
  4346be:	ins    DWORD PTR es:[edi],dx
  4346bf:	adc    eax,0xf3246863
  4346c4:	pop    esp
  4346c5:	pop    edi
  4346c6:	cld    
  4346c7:	repz mov al,0x81
  4346ca:	jg     0x4346b5
  4346cc:	(bad)  
  4346ce:	or     BYTE PTR [ebp-0x38b42124],al
  4346d4:	gs into 
  4346d6:	int    0xd3
  4346d8:	sbb    al,0x81
  4346da:	ret    0x56eb
  4346dd:	aaa    
  4346de:	clc    
  4346df:	lock lds eax,FWORD PTR [ecx-0x42140a06]
  4346e6:	test   DWORD PTR [eax-0x4de61ca3],ebp
  4346ec:	jne    0x4346f5
  4346ee:	jg     0x4346a2
  4346f0:	fild   WORD PTR [eax+eax*1]
  4346f3:	repz rol DWORD PTR fs:[edi+0x2c000000],0xfe
  4346fc:	ret    0xeee5
  4346ff:	push   esp
  434700:	leave  
  434701:	jge    0x434756
  434703:	rol    DWORD PTR [edx-0x7d620b21],1
  434709:	mov    edi,0x4e91ef7
  43470e:	jo     0x434748
  434710:	push   cs
  434711:	jg     0x4346df
  434713:	mov    ebp,0xde44feff
  434718:	mov    WORD PTR [ecx-0x29],es
  43471b:	dec    bp
  43471d:	pop    esp
  43471e:	in     al,0x6
  434720:	push   0x20
  434722:	and    al,0xd0
  434724:	sbb    al,BYTE PTR [edi-0x751e0ed5]
  43472a:	into   
  43472b:	int    0xa
  43472d:	jecxz  0x434761
  43472f:	dec    eax
  434730:	pop    DWORD PTR [ebx]
  434732:	repz push es
  434734:	out    0xca,eax
  434736:	repnz cmc 
  434738:	out    0x3,al
  43473a:	repz jnp 0x4346d7
  43473d:	imul   edi,DWORD PTR [esi+0x3d57433f],0xffffffdc
  434744:	out    0x90,al
  434746:	sub    al,0x7
  434748:	data16 loope 0x434729
  43474b:	push   esp
  43474c:	add    eax,0xe7d35887
  434751:	adc    dh,BYTE PTR [edi-0x2e]
  434754:	lock add esi,ebx
  434757:	(bad)  
  434758:	js     0x43475f
  43475a:	mov    edx,0x8eab41
  43475f:	add    BYTE PTR [eax],al
  434761:	test   eax,0x2e4587b3
  434766:	leave  
  434767:	out    dx,eax
  434768:	mov    WORD PTR [eax-0x31],es
  43476b:	out    0xbb,al
  43476d:	push   ds
  43476e:	shl    esi,1
  434770:	push   ebp
  434771:	mov    ecx,0xfa6c2a7b
  434776:	xchg   edi,eax
  434777:	jecxz  0x4347c1
  434779:	jecxz  0x43479e
  43477b:	daa    
  43477c:	add    al,0x76
  43477e:	mov    ebx,0x68f2e466
  434783:	jo     0x4347d4
  434785:	mov    dl,0x56
  434787:	pop    edx
  434788:	dec    edx
  434789:	fstp   TBYTE PTR [ebx-0x5e]
  43478c:	imul   ebx,DWORD PTR [ebx+ebx*8+0x34986e6],0xfffffffe
  434794:	push   edx
  434795:	scas   eax,DWORD PTR es:[edi]
  434796:	push   esp
  434797:	jbe    0x434734
  434799:	test   BYTE PTR [esi],0x0
  43479c:	jmp    0xc1845f91
  4347a1:	popf   
  4347a2:	icebp  
  4347a3:	in     al,0xee
  4347a5:	sub    DWORD PTR [edx+0x6f0e924],0x0
  4347ac:	(bad)  
  4347ad:	fstp   DWORD PTR [esi+0x9]
  4347b0:	push   esi
  4347b1:	in     al,0x33
  4347b3:	adc    dl,cl
  4347b5:	mov    al,0x6
  4347b7:	sub    eax,0x54879a1b
  4347bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347bd:	mov    al,ds:0xd78141cd
  4347c2:	inc    ebp
  4347c3:	push   0x5b
  4347c8:	fld    DWORD PTR [edx+0x6ec1981]
  4347ce:	add    BYTE PTR [edx+eax*2+0x5b],ah
  4347d2:	xchg   eax,ebp
  4347d4:	imul   ecx,DWORD PTR [eax+0x4c],0xfed74a74
  4347db:	call   0x2ece84d0
  4347e0:	sti    
  4347e1:	ss dec edi
  4347e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347e4:	out    dx,eax
  4347e5:	pop    es
  4347e6:	add    cl,ch
  4347e8:	lock fs or eax,0x50573a6c
  4347ef:	add    esi,edi
  4347f1:	fisub  WORD PTR [edi-0x7af90f28]
  4347f7:	sbb    al,0xaf
  4347f9:	dec    esp
  4347fa:	(bad)  
  4347fe:	fsubr  DWORD PTR [edi+esi*4+0x0]
  434802:	add    DWORD PTR [edi+eiz*8-0x458ffffa],0x5e
  43480a:	shl    esi,0x5e
  43480d:	into   
  43480e:	stc    
  43480f:	jmp    0xeaa79083
  434814:	stos   DWORD PTR es:[edi],eax
  434815:	data16 aaa 
  434817:	add    BYTE PTR [ebp-0x67cf89e],bl
  43481d:	add    al,0x0
  43481f:	add    cl,dl
  434821:	aaa    
  434822:	push   esp
  434823:	mov    eax,0xa4b
  434828:	jmp    0x92cc0f
  43482d:	add    BYTE PTR [eax],al
  43482f:	push   esi
  434830:	inc    edx
  434831:	sbb    eax,ebx
  434833:	xchg   ecx,eax
  434834:	(bad)  
  434835:	js     0x4347c2
  434837:	ror    cl,cl
  434839:	loope  0x434843
  43483b:	add    eax,0x4f89c170
  434840:	mov    dh,0x33
  434842:	into   
  434843:	jl     0x43486b
  434845:	jnp    0x4348c4
  434847:	push   es
  434848:	or     al,BYTE PTR [edi]
  43484a:	test   ch,ah
  43484c:	add    BYTE PTR [eax],al
  43484e:	add    ch,dl
  434850:	outs   dx,DWORD PTR ds:[esi]
  434851:	cli    
  434852:	(bad)  
  434853:	pop    ss
  434854:	out    0x83,eax
  434856:	into   
  434857:	cdq    
  434858:	jmp    0x453197e0
  43485d:	jnp    0x434825
  43485f:	ret    0xd802
  434862:	mov    eax,0x9cb
  434867:	pop    ecx
  434868:	jmp    0x822997f0
  43486d:	dec    ebp
  43486e:	clc    
  43486f:	loop   0x434894
  434871:	mov    ebx,0x83888e8b
  434876:	enter  0xe04b,0x8
  43487a:	bswap  esp
  43487c:	rol    BYTE PTR [ecx-0x3a1501bb],0x77
  434883:	dec    ebx
  434884:	jp     0x43484e
  434886:	shl    DWORD PTR [ebx-0x27],0x7c
  43488a:	stc    
  43488b:	push   0x32
  43488d:	dec    edi
  43488e:	mov    esp,DWORD PTR [edx]
  434890:	leave  
  434891:	loope  0x43489b
  434893:	add    BYTE PTR [eax],al
  434895:	add    bl,dh
  434897:	in     al,0x97
  434899:	(bad)  
  43489a:	sbb    BYTE PTR [edi],ch
  43489c:	push   esp
  43489d:	xor    BYTE PTR [eax-0x24],bl
  4348a0:	mov    ah,BYTE PTR [edi+ecx*1-0xc000220]
  4348a7:	pusha  
  4348a8:	pop    edx
  4348a9:	cld    
  4348aa:	rep lods al,BYTE PTR ds:[esi]
  4348ac:	sub    DWORD PTR [edi+0x8fddffb],0x4be0e15d
  4348b6:	pop    ds
  4348b7:	push   0xa113cdcf
  4348bc:	test   dl,al
  4348be:	sti    
  4348bf:	push   esi
  4348c0:	xor    bh,al
  4348c2:	lock daa 
  4348c4:	mov    WORD PTR [ebx+0x7],es
  4348c7:	in     al,0x97
  4348c9:	int3   
  4348ca:	mov    eax,0xfcd754ce
  4348cf:	imul   edx,eax,0xffffff85
  4348d2:	sub    al,0x36
  4348d4:	lods   eax,DWORD PTR ds:[esi]
  4348d5:	in     eax,0x8
  4348d7:	scas   eax,DWORD PTR es:[edi]
  4348d8:	bound  eax,QWORD PTR [ebp-0x789d4bda]
  4348de:	aas    
  4348df:	sbb    eax,0x362cf954
  4348e4:	jmp    0x434934
  4348e6:	repnz (bad) 
  4348e9:	popa   
  4348ea:	push   0x7062d1eb
  4348ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4348f0:	hlt    
  4348f1:	jb     0x43490e
  4348f3:	fst    QWORD PTR [ebx-0x1e09134]
  4348f9:	xchg   BYTE PTR [eax],al
  4348fb:	add    BYTE PTR [eax],al
  4348fd:	es call 0xa490:0xb400f015
  434905:	iret   
  434906:	(bad)  
  434908:	push   ebx
  43490a:	pusha  
  43490b:	pop    edi
  43490c:	cld    
  43490d:	rep lods al,BYTE PTR ds:[esi]
  43490f:	or     DWORD PTR [edi-0x5],0xfa03e706
  434916:	xchg   esp,eax
  434917:	in     eax,0xde
  434919:	test   al,0xca
  43491b:	pop    esi
  43491c:	into   
  43491d:	es out 0x5e,eax
  434920:	push   ecx
  434921:	das    
  434922:	dec    ecx
  434923:	data16 (bad) 
  434925:	sti    
  434926:	pop    es
  434927:	pop    ds
  434928:	xchg   ecx,eax
  434929:	cld    
  43492a:	or     BYTE PTR [eax+0x39],ah
  43492d:	cmp    edx,DWORD PTR [eax]
  43492f:	aaa    
  434930:	push   edx
  434931:	inc    esp
  434932:	sub    BYTE PTR [edx-0x311fc995],0xd4
  434939:	jo     0x434902
  43493b:	loop   0x4348c4
  43493d:	bound  eax,QWORD PTR [edi+eiz*8]
  434940:	add    edi,edx
  434942:	xchg   ebx,eax
  434943:	mov    bl,0x46
  434945:	cdq    
  434946:	jg     0x43496e
  434948:	adc    DWORD PTR [ebx],0x8
  43494b:	data16 (bad) 
  43494d:	test   dh,0xfe
  434950:	add    DWORD PTR [ecx+edi*1-0x35],esi
  434954:	mov    WORD PTR [eax],?
  434956:	shl    DWORD PTR [esi-0x13],cl
  434959:	fstp   st(6)
  43495b:	jle    0x434960
  43495d:	repz push es
  43495f:	inc    ecx
  434960:	add    DWORD PTR [eax],0x0
  434963:	add    ah,al
  434965:	cmc    
  434966:	icebp  
  434967:	xchg   ebp,eax
  434968:	mov    bh,0x7d
  43496a:	sub    al,0xc0
  43496c:	inc    eax
  43496d:	cmp    eax,0x10b64464
  434972:	mov    bh,0x52
  434974:	jecxz  0x434955
  434976:	jmp    0xf303:0xe7224f90
  43497d:	push   es
  43497e:	pushaw 
  434980:	xchg   edi,eax
  434981:	push   es
  434982:	fiadd  DWORD PTR [edi+0x3e703ac]
  434988:	cli    
  434989:	xchg   esp,eax
  43498a:	in     eax,0xde
  43498c:	sub    bl,cl
  43498e:	add    BYTE PTR [edx-0x5a],ah
  434991:	mov    ecx,0xaac362e0
  434996:	ds push 0x2e
  434999:	(bad)  
  43499a:	cld    
  43499b:	inc    eax
  43499c:	or     DWORD PTR [ebx],0xfffffffd
  43499f:	pop    edi
  4349a0:	sbb    ecx,edi
  4349a2:	xor    eax,0xcdb3a259
  4349a7:	push   edx
  4349a8:	jns    0x434933
  4349aa:	jge    0x4349f5
  4349ac:	cmc    
  4349ad:	dec    ecx
  4349ae:	shr    dl,0x67
  4349b1:	inc    edi
  4349b2:	hlt    
  4349b3:	sub    BYTE PTR [ecx],bl
  4349b5:	leave  
  4349b6:	mov    cl,0x24
  4349b8:	inc    ebp
  4349b9:	int    0xf9
  4349bb:	adc    dh,BYTE PTR [ecx-0x611c081]
  4349c1:	(bad)  
  4349c2:	ins    DWORD PTR es:[edi],dx
  4349c3:	(bad)  
  4349c4:	jno    0x434a15
  4349c6:	cld    
  4349c7:	jmp    0xf54349cc
  4349cc:	sbb    BYTE PTR [esi+eiz*8+0x3f0906f0],0xf2
  4349d4:	int    0x4b
  4349d6:	in     eax,dx
  4349d7:	jp     0x434996
  4349d9:	int    0xc9
  4349db:	jp     0x434a1b
  4349dd:	fsubr  QWORD PTR [ebx]
  4349df:	jb     0x4349a6
  4349e1:	or     dl,ch
  4349e3:	cwde   
  4349e4:	jle    0x434a25
  4349e6:	out    0x79,al
  4349e8:	ss clc 
  4349ea:	add    bl,BYTE PTR [edi-0x356528a7]
  4349f0:	test   BYTE PTR [ebp+0x7d50cf6a],bh
  4349f6:	test   eax,0x9d4381fa
  4349fb:	mov    al,0xe4
  4349fd:	add    DWORD PTR [ecx-0x48],esp
  434a00:	sar    cl,1
  434a02:	xchg   esi,eax
  434a03:	retf   0xfd89
  434a06:	cwde   
  434a07:	jp     0x434a4f
  434a09:	hlt    
  434a0a:	add    BYTE PTR [ebp+0x42],dl
  434a0d:	in     al,0x0
  434a0f:	mov    al,BYTE PTR [esi]
  434a11:	add    BYTE PTR [ebx-0x3804a533],cl
  434a17:	rol    DWORD PTR [ebx+0x64],1
  434a1a:	add    edx,DWORD PTR [ebp+0x4dc83366]
  434a20:	add    esi,0x2
  434a23:	dec    edx
  434a24:	push   es
  434a25:	jnp    0x434aa4
  434a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434a28:	add    dh,BYTE PTR [esp+ebx*1-0x3f]
  434a2c:	inc    ecx
  434a2d:	in     al,0xeb
  434a2f:	add    BYTE PTR [eax],al
  434a31:	add    BYTE PTR [ecx+0x79],cl
  434a34:	inc    ecx
  434a35:	add    cl,dl
  434a37:	cmp    ebp,DWORD PTR [eax-0x1]
  434a3a:	(bad)  
  434a3b:	mov    dl,0x5e
  434a3d:	mov    DWORD PTR [esi+0x3b],edx
  434a40:	jo     0x434a41
  434a42:	push   ebp
  434a43:	pop    esi
  434a44:	jnp    0x434ac3
  434a46:	test   BYTE PTR [edx],0x6d
  434a49:	in     al,dx
  434a4a:	xchg   ecx,eax
  434a4b:	inc    ebx
  434a4c:	add    edx,DWORD PTR fs:[ebp+0x66]
  434a50:	xor    DWORD PTR [edi+0x62],eax
  434a53:	sti    
  434a54:	jns    0x434a33
  434a56:	jmp    FWORD PTR [edx-0x37627c09]
  434a5c:	or     BYTE PTR [ebx+ecx*4+0x34000003],al
  434a63:	mov    BYTE PTR [edi+0x5c870],dh
  434a69:	add    BYTE PTR [ebp-0x25f9747f],ch
  434a6f:	add    eax,0xba8785
  434a74:	add    BYTE PTR [eax],al
  434a76:	dec    edi
  434a77:	cmp    ebp,DWORD PTR [ecx+ecx*4-0x65]
  434a7b:	jl     0x434abc
  434a7d:	dec    esp
  434a7e:	pop    ds
  434a7f:	push   ebx
  434a80:	lock add cl,BYTE PTR [edx-0xc74b5fb]
  434a87:	or     BYTE PTR [ebx+ecx*4+0x34],ah
  434a8b:	adc    al,0x34
  434a8d:	dec    edi
  434a8e:	lods   al,BYTE PTR ds:[esi]
  434a8f:	fild   WORD PTR [esi]
  434a91:	add    bl,dh
  434a93:	fild   QWORD PTR [edi]
  434a95:	mov    eax,DWORD PTR [eax]
  434a97:	add    BYTE PTR [eax],al
  434a99:	sub    al,0xd0
  434a9b:	sub    eax,0xf487f266
  434aa0:	sub    bl,dh
  434aa2:	fild   WORD PTR [eax+0x4256fbc4]
  434aa8:	fsubr  DWORD PTR [esi+0x1f]
  434aab:	or     al,0x83
  434aad:	into   
  434aae:	xor    bl,ah
  434ab0:	stc    
  434ab1:	js     0x434b1b
  434ab3:	imul   ecx,DWORD PTR [ebx+0x5186bbac],0xf07462a3
  434abd:	icebp  
  434abe:	(bad)  
  434ac0:	dec    ebp
  434ac1:	jbe    0x434a5b
  434ac3:	xor    eax,0x4c54c250
  434ac8:	pusha  
  434ac9:	sub    al,0xdf
  434acb:	add    eax,DWORD PTR [eax]
  434acd:	repz fisttp WORD PTR [eax-0x759070bf]
  434ad4:	push   esp
  434ad5:	lods   al,BYTE PTR ds:[esi]
  434ad6:	dec    edi
  434ad7:	das    
  434ad8:	data16 icebp 
  434ada:	pop    es
  434adb:	mov    eax,0x80ddf32a
  434ae0:	les    ecx,FWORD PTR [ebx]
  434ae2:	push   edi
  434ae3:	aas    
  434ae4:	fdiv   DWORD PTR [esi-0x62]
  434ae7:	add    eax,0xd5aab783
  434aec:	stc    
  434aed:	jo     0x434b2a
  434aef:	or     BYTE PTR [edx],al
  434af1:	js     0x434ade
  434af3:	fcmovnb st,st(1)
  434af5:	hlt    
  434af6:	lods   al,BYTE PTR ds:[esi]
  434af7:	std    
  434af8:	push   ebx
  434afa:	loopne 0x434b75
  434afc:	jae    0x434afe
  434afe:	add    BYTE PTR [eax],al
  434b00:	cmc    
  434b01:	(bad)  
  434b03:	shr    ah,0x6
  434b06:	sti    
  434b07:	add    esi,ebx
  434b09:	push   es
  434b0a:	pop    cx
  434b0c:	xchg   edi,eax
  434b0d:	add    DWORD PTR ds:0x974a0c6a,edx
  434b13:	push   es
  434b14:	test   al,cl
  434b16:	out    0x55,eax
  434b18:	adc    BYTE PTR [esp+0xc],bh
  434b1c:	outs   dx,BYTE PTR ds:[esi]
  434b1d:	cmp    bh,BYTE PTR [edi-0x71]
  434b20:	rcl    dh,0x60
  434b23:	dec    esp
  434b24:	idiv   DWORD PTR [ebx-0x4c]
  434b27:	(bad)  [edi+edi*8+0x6d]
  434b2b:	dec    ecx
  434b2c:	push   ebx
  434b2d:	jle    0x434ae6
  434b2f:	repz ja 0x434b64
  434b32:	dec    ebx
  434b33:	xor    eax,0x33eb376c
  434b38:	je     0x434b62
  434b3a:	dec    DWORD PTR [edx+eax*8-0x2db0c0f6]
  434b41:	push   es
  434b42:	out    0x8e,eax
  434b44:	mov    al,0xfe
  434b46:	ins    DWORD PTR es:[edi],dx
  434b47:	xor    al,0xef
  434b49:	jnp    0x434afa
  434b4b:	rep outs dx,DWORD PTR ds:[esi]
  434b4d:	sub    bh,cl
  434b4f:	mov    es,WORD PTR [edx+0x1b31600a]
  434b55:	jl     0x434b2e
  434b57:	mov    ?,WORD PTR [ebx-0x143f99fe]
  434b5d:	xor    DWORD PTR [edx-0x8c68bf2],0xffffff8c
  434b64:	add    BYTE PTR [eax],al
  434b66:	add    BYTE PTR [eax-0x31],al
  434b69:	jo     0x434bab
  434b6b:	fcomip st,st(7)
  434b6d:	arpl   WORD PTR [edi-0x3d18f910],sp
  434b73:	jb     0x434b37
  434b75:	out    dx,al
  434b76:	add    esi,ebx
  434b78:	mov    edx,0x5cddbada
  434b7e:	add    bl,dh
  434b80:	push   es
  434b81:	add    BYTE PTR [edx+0x39],ah
  434b84:	xor    edi,DWORD PTR [eax+0x6f0e8]
  434b8a:	mov    edx,0xa581c590
  434b8f:	xchg   ebp,eax
  434b90:	(bad)  
  434b91:	stc    
  434b92:	jmp    0x21435287
  434b97:	int3   
  434b98:	mov    DWORD PTR [ebp+0x4c456db1],eax
  434b9e:	jb     0x434c14
  434ba0:	jg     0x434b27
  434ba2:	mov    eax,ds:0xde08df37
  434ba7:	cmp    BYTE PTR [edi+0x112cac87],0xca
  434bae:	xlat   BYTE PTR ds:[ebx]
  434baf:	scas   eax,DWORD PTR es:[edi]
  434bb0:	cmp    ecx,0xcaab6a
  434bb6:	faddp  st(4),st
  434bb8:	xchg   DWORD PTR [ebx],eax
  434bba:	jmp    0xebf549af
  434bbf:	sbb    DWORD PTR [ebx],edi
  434bc1:	cld    
  434bc2:	bound  edi,QWORD PTR [edx]
  434bc4:	mov    ecx,0x32b962e0
  434bc9:	ds push 0x0
  434bcc:	add    BYTE PTR [eax],al
  434bce:	xor    bh,dh
  434bd0:	cld    
  434bd1:	inc    eax
  434bd2:	js     0x434b9b
  434bd4:	stc    
  434bd5:	jmp    0x632405ca
  434bda:	mov    ecx,0x189c873a
  434bdf:	ds sbb eax,0x7f02652a
  434be5:	bound  edi,QWORD PTR [eax-0x61e187a]
  434beb:	js     0x434bb4
  434bed:	jo     0x434c0b
  434bef:	mov    ebx,0x8642af35
  434bf4:	test   BYTE PTR [ecx-0x163f7506],ch
  434bfa:	lock push es
  434bfc:	test   al,0x0
  434bfe:	jp     0x434c10
  434c00:	jge    0x434bba
  434c02:	retf   0xa
  434c05:	mov    edx,DWORD PTR [edx-0x36]
  434c08:	loope  0x434c12
  434c0a:	adc    ecx,DWORD PTR [esi-0x2c]
  434c0d:	(bad)  
  434c0f:	rol    BYTE PTR [ecx-0x51ef91b3],cl
  434c15:	enter  0x4d99,0xe4
  434c19:	mov    edi,ecx
  434c1b:	jle    0x434bd5
  434c1d:	add    DWORD PTR [edx+0x6ad3000a],ecx
  434c23:	xchg   esp,eax
  434c24:	inc    ebp
  434c25:	in     al,0x12
  434c27:	in     al,dx
  434c28:	mov    edx,0x459472d3
  434c2d:	hlt    
  434c2e:	or     esi,DWORD PTR [edx+0x310]
  434c34:	add    BYTE PTR [ebx],cl
  434c36:	xchg   esp,eax
  434c37:	enter  0x9d8b,0x4e
  434c3b:	add    DWORD PTR [edx+edx*8],0xf
  434c3f:	scas   al,BYTE PTR es:[edi]
  434c40:	dec    ebp
  434c41:	ficom  WORD PTR [ecx-0x4cf40bc3]
  434c47:	or     BYTE PTR [edi],cl
  434c49:	lods   al,BYTE PTR ds:[esi]
  434c4a:	retf   0xc0fb
  434c4d:	and    eax,ecx
  434c4f:	outs   dx,BYTE PTR ds:[esi]
  434c50:	pop    esi
  434c51:	add    DWORD PTR [ecx],ecx
  434c53:	test   DWORD PTR [ebx+0xa0a],ebx
  434c59:	cdq    
  434c5a:	pop    ebp
  434c5b:	cld    
  434c5c:	add    BYTE PTR ds:0xa051946,ah
  434c62:	or     al,BYTE PTR [edi]
  434c64:	mov    dh,0x8
  434c66:	xchg   ebx,eax
  434c67:	(bad)  
  434c68:	sar    edx,cl
  434c6a:	xchg   ebx,eax
  434c6b:	inc    ebp
  434c6c:	(bad)  
  434c6e:	dec    esp
  434c6f:	cld    
  434c70:	inc    edx
  434c71:	leave  
  434c72:	add    DWORD PTR [edi],0x3d908fb6
  434c78:	in     al,0xf3
  434c7a:	lods   al,BYTE PTR ds:[esi]
  434c7b:	pop    edi
  434c7d:	lock addr16 xchg ebp,eax
  434c80:	(bad)  
  434c81:	mov    esp,0xd3ccfdaf
  434c86:	cmp    BYTE PTR [edx-0x1c],al
  434c89:	jo     0x434d00
  434c8b:	add    eax,0x45783e87
  434c90:	sbb    eax,0x9e580b0
  434c95:	pop    esp
  434c96:	repnz mov ch,0xfd
  434c99:	add    BYTE PTR [eax],al
  434c9b:	add    BYTE PTR [ebx+0x784c4828],dh
  434ca1:	stos   DWORD PTR es:[edi],eax
  434ca2:	jle    0x434c2b
  434ca4:	ss inc esp
  434ca6:	mov    esi,0x8fb4ebe8
  434cab:	shl    al,0xf2
  434cae:	fbstp  TBYTE PTR ds:0x9abbc2d
  434cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434cb5:	jp     0x434c69
  434cb7:	test   DWORD PTR [esi+0x18e5b45b],ebp
  434cbd:	pop    edi
  434cbe:	xchg   BYTE PTR [ecx-0x247d1],cl
  434cc4:	push   0xebe7bdf7
  434cc9:	mov    ah,0x8f
  434ccb:	(bad)  
  434ccc:	repnz sub al,0xb9
  434ccf:	adc    eax,0xe5b4aff3
  434cd4:	enter  0x861e,0x4b
  434cd8:	(bad)  
  434cdb:	mov    edi,0x4986bf1a
  434ce0:	mov    bl,0x2b
  434ce2:	mov    ebp,0xfff4e873
  434ce7:	push   ss
  434ce8:	repz scas eax,DWORD PTR es:[edi]
  434cea:	std    
  434ceb:	out    0x29,al
  434ced:	mov    dl,0xfd
  434cef:	call   FWORD PTR [ebx-0x4becb632]
  434cf5:	pop    es
  434cf6:	push   0xffffffc0
  434cf8:	inc    BYTE PTR [esi]
  434cfa:	out    0xd6,eax
  434cfc:	retf   0xd2c4
  434cff:	mov    edi,0xf2000000
  434d04:	movntq QWORD PTR [ebx],mm0
  434d07:	rep lods eax,DWORD PTR ds:[esi]
  434d09:	or     BYTE PTR [eax],al
  434d0b:	repz push es
  434d0d:	pop    DWORD PTR [edi+eiz*1+0x14]
  434d11:	pop    esi
  434d12:	inc    ecx
  434d13:	sti    
  434d14:	retf   
  434d15:	daa    
  434d16:	cld    
  434d17:	xor    BYTE PTR [edx],bh
  434d19:	daa    
  434d1a:	add    al,0x8c
  434d1c:	pavgw  mm0,QWORD PTR [ebx]
  434d1f:	repz adc ebx,DWORD PTR [ecx-0x34]
  434d23:	push   es
  434d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434d25:	fimul  DWORD PTR [edx+ebp*1-0x1e0055b1]
  434d2c:	push   es
  434d2d:	out    0x3,eax
  434d2f:	jbe    0x434d7d
  434d31:	pop    ds
  434d32:	xor    DWORD PTR [ebx],0x631b223b
  434d38:	cmp    BYTE PTR [eax],dl
  434d3a:	mov    DWORD PTR [edi-0xcfc1915],ecx
  434d40:	push   es
  434d41:	pop    cx
  434d43:	inc    edi
  434d44:	pop    es
  434d45:	fidivr DWORD PTR [edi-0x4]
  434d48:	or     ah,bh
  434d4a:	add    ebp,edx
  434d4c:	jl     0x434d33
  434d4e:	(bad)  
  434d4f:	mov    eax,0x36c65ec2
  434d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434d56:	xor    BYTE PTR [ecx],0xf
  434d59:	jo     0x434d8c
  434d5b:	sbb    ecx,DWORD PTR [eax]
  434d5d:	aas    
  434d5e:	sbb    eax,DWORD PTR [edx+0x6eb5954e]
  434d64:	push   esp
  434d65:	lahf   
  434d66:	fwait
  434d67:	add    BYTE PTR [eax],al
  434d69:	add    ah,bh
  434d6b:	ret    
  434d6c:	out    0x3,eax
  434d6e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  434d70:	into   
  434d71:	aam    0x3b
  434d73:	call   0x46317777
  434d78:	inc    eax
  434d79:	sbb    cl,al
  434d7b:	ret    
  434d7c:	mov    ch,BYTE PTR [ebp+0x72f9c3d9]
  434d82:	xor    eax,0xb8668747
  434d87:	sbb    DWORD PTR [eax],eax
  434d89:	jmp    0xe955530b
  434d8e:	lock push es
  434d90:	test   DWORD PTR [esi],ebp
  434d92:	out    dx,eax
  434d93:	jle    0x434d94
  434d95:	call   0xca10548a
  434d9a:	sub    BYTE PTR [edx],ah
  434d9c:	mov    ebp,0x4189a872
  434da1:	cmp    DWORD PTR [eax+0xa],edi
  434da4:	mov    BYTE PTR [edx-0x48],ah
  434da7:	and    edi,0xffffffe1
  434daa:	cmc    
  434dab:	js     0x434d74
  434dad:	jo     0x434de2
  434daf:	mov    ebx,0x46beaf35
  434db4:	nop
  434db5:	push   0xffffffcb
  434db7:	ret    0xde00
  434dba:	(bad)  
  434dbc:	std    
  434dbd:	call   0xebf55bb2
  434dc2:	and    eax,0x2e62fc4f
  434dc7:	shl    eax,1
  434dc9:	bound  esi,QWORD PTR [ebp+0x6a3e5e]
  434dcf:	add    BYTE PTR [eax],al
  434dd1:	jbe    0x434de1
  434dd3:	std    
  434dd4:	and    BYTE PTR [eax-0xf16063d],cl
  434dda:	shl    eax,1
  434ddc:	bound  esi,QWORD PTR [ebp+0x38bc8756]
  434de2:	dec    esi
  434de3:	sbb    eax,0x7f0a792a
  434de8:	bound  edi,QWORD PTR [eax]
  434dea:	and    edi,0xffffffe1
  434ded:	cmc    
  434dee:	js     0x434db7
  434df0:	add    BYTE PTR [ebx+0x1c3bf446],al
  434df6:	push   ecx
  434df7:	mov    ecx,0x7d0ceaa8
  434dfc:	mov    al,0xca
  434dfe:	push   es
  434dff:	add    BYTE PTR [ebx+0x8e1c6a2],cl
  434e05:	inc    ebx
  434e06:	dec    edx
  434e07:	aam    0xf
  434e09:	fs into 
  434e0b:	or     DWORD PTR [ebp-0x4a],0xc9c8ae0c
  434e12:	dec    ecx
  434e13:	in     al,0x89
  434e15:	xlat   BYTE PTR ds:[ebx]
  434e16:	jle    0x434dd0
  434e18:	add    DWORD PTR [edx-0x552cfffa],ebx
  434e1e:	nop
  434e1f:	inc    ebp
  434e20:	in     al,0xe2
  434e22:	out    0xba,eax
  434e24:	shl    DWORD PTR [edx-0x70],cl
  434e27:	inc    ebp
  434e28:	hlt    
  434e29:	pop    ebx
  434e2a:	scas   al,BYTE PTR es:[edi]
  434e2b:	adc    BYTE PTR [ebx],al
  434e2d:	dec    ebx
  434e2e:	nop
  434e2f:	enter  0xc58b,0xfa
  434e33:	add    BYTE PTR [eax+eax*1],0x0
  434e37:	add    dl,ah
  434e39:	or     ebp,DWORD PTR [esi+0x3d8e864d]
  434e3f:	hlt    
  434e40:	mov    esi,DWORD PTR [ebx-0x348bf0f8]
  434e46:	sti    
  434e47:	rcl    BYTE PTR [ecx],0x81
  434e4a:	outs   dx,BYTE PTR ds:[esi]
  434e4b:	push   esi
  434e4c:	fstp   DWORD PTR [ecx-0x4]
  434e4f:	add    BYTE PTR ds:0x4a033942,bl
  434e55:	push   es
  434e56:	pop    es
  434e57:	mov    dh,0x18
  434e59:	pop    esi
  434e5b:	sar    DWORD PTR [edx-0x3223ba71],cl
  434e61:	dec    ecx
  434e62:	cld    
  434e63:	inc    edx
  434e64:	or     DWORD PTR [esi+0x7],edi
  434e67:	mov    dh,0xd7
  434e69:	lea    edi,ds:0x8ba8f3e4
  434e6f:	(bad)  
  434e70:	lock out 0x9b,eax
  434e73:	push   esp
  434e75:	scas   eax,DWORD PTR es:[edi]
  434e76:	std    
  434e77:	int3   
  434e78:	shl    DWORD PTR [ecx+eax*2],cl
  434e7b:	in     al,0x70
  434e7d:	icebp  
  434e7e:	or     eax,DWORD PTR [edi+0x1d45b846]
  434e84:	mov    al,0x7c
  434e86:	in     eax,0x9
  434e88:	test   dl,dh
  434e8a:	mov    cl,0xfd
  434e8c:	mov    bl,0x24
  434e8e:	inc    esp
  434e8f:	push   eax
  434e90:	push   0x2e877eab
  434e95:	test   BYTE PTR [esi-0x744f0418],bh
  434e9b:	rol    BYTE PTR [eax],0x0
  434e9e:	add    al,dh
  434ea0:	repnz fbstp TBYTE PTR ds:0x9a5f8b5
  434ea7:	pop    ebp
  434ea8:	cli    
  434ea9:	mov    al,0x85
  434eab:	ss pushf 
  434ead:	mov    al,0xe5
  434eaf:	fcomp  DWORD PTR [esi-0x4b487702]
  434eb5:	std    
  434eb6:	jmp    FWORD PTR [eax+0x77]
  434eb9:	mov    esi,0x8bb0fbe7
  434ebe:	(bad)  
  434ebf:	repnz sub BYTE PTR [ecx-0x4f500ceb],bh
  434ec6:	in     eax,0x8
  434ec8:	pop    edi
  434ec9:	xchg   BYTE PTR [ebx+0x57],cl
  434ecc:	xchg   edi,eax
  434ecd:	cmp    eax,0x3a24f474
  434ed2:	or     BYTE PTR [edi+ebp*2],dh
  434ed5:	cmc    
  434ed6:	inc    ebx
  434ed7:	mov    esi,0xcbe6fd6f
  434edc:	lods   eax,DWORD PTR ds:[esi]
  434edd:	std    
  434ede:	(bad)  
  434edf:	js     0x434ec8
  434ee1:	add    esi,DWORD PTR [edx+0x10e5ee33]
  434ee7:	jo     0x434eef
  434ee9:	pop    es
  434eea:	add    al,0x74
  434eec:	push   ecx
  434eed:	mov    ds:0x2a4eb28a,eax
  434ef2:	cld    
  434ef3:	jecxz  0x434efb
  434ef5:	out    0x3,eax
  434ef7:	outs   dx,BYTE PTR ds:[esi]
  434ef8:	dec    ecx
  434ef9:	scas   eax,DWORD PTR es:[edi]
  434efa:	jle    0x434eaf
  434efc:	cmp    esp,DWORD PTR [edi-0x3acb1ce8]
  434f02:	add    BYTE PTR [eax],0x0
  434f05:	add    BYTE PTR [eax-0x3d],bl
  434f08:	out    0x4,eax
  434f0a:	outs   dx,DWORD PTR ds:[esi]
  434f0b:	xchg   edi,eax
  434f0c:	in     eax,0x3
  434f0e:	repz setno BYTE PTR [esi]
  434f12:	retf   0xd352
  434f15:	jg     0x434ec0
  434f17:	aam    0xc7
  434f19:	inc    esi
  434f1a:	ss leave 
  434f1c:	out    dx,eax
  434f1d:	jl     0x434f5f
  434f1f:	mov    edi,0x37deabe6
  434f24:	pop    ds
  434f25:	push   esi
  434f26:	mov    ecx,0x5b3c1a8c
  434f2b:	push   es
  434f2c:	out    0x3,eax
  434f2e:	repz rol DWORD PTR [edi-0x39b06be1],cl
  434f35:	(bad)  
  434f36:	jl     0x434f81
  434f38:	and    esi,DWORD PTR [edi-0x378df972]
  434f3e:	push   es
  434f3f:	pop    es
  434f40:	out    0xca,eax
  434f42:	repnz push ds
  434f44:	out    0x3,eax
  434f46:	repz sub esp,0xffffffd3
  434f4a:	repz (bad)
  434f4d:	inc    edx
  434f4e:	dec    ebp
  434f4f:	shl    bh,0x7e
  434f52:	mov    eax,0x4340fea6
  434f57:	mov    WORD PTR [edx-0x463a01b9],fs
  434f5d:	cmp    al,0xd6
  434f5f:	lds    esi,FWORD PTR [eax+0x49]
  434f62:	pop    ds
  434f63:	cld    
  434f64:	jmp    FWORD PTR [ebp+0x6a0b34fc]
  434f6a:	add    BYTE PTR [eax],al
  434f6c:	add    BYTE PTR [eax-0xf16ea39],al
  434f72:	push   es
  434f73:	or     DWORD PTR [ebx+eiz*2-0x40],esp
  434f77:	stc    
  434f78:	jmp    0xd2739cfa
  434f7d:	das    
  434f7e:	xor    eax,0x89b7d209
  434f83:	dec    ecx
  434f84:	mov    ch,0xed
  434f86:	dec    ebp
  434f87:	sub    BYTE PTR [eax+0x2a],ah
  434f8a:	mov    ebx,0x9b42125
  434f8f:	test   DWORD PTR [esi],esi
  434f91:	jmp    0x434f7c
  434f93:	(bad)  
  434f94:	jmp    0x879b:0x2c84f731
  434f9b:	dec    ebx
  434f9c:	mov    ch,0x35
  434f9e:	dec    esi
  434f9f:	inc    eax
  434fa0:	jo     0x434fd5
  434fa2:	jecxz  0x434fd9
  434fa4:	test   al,0x4a
  434fa6:	adc    al,0x85
  434fa8:	test   al,0xbd
  434faa:	or     al,0x85
  434fac:	sbb    al,0xb7
  434fae:	jmp    0x477cc27a
  434fb3:	xchg   DWORD PTR [ebx+ecx*2],ebp
  434fb6:	xchg   DWORD PTR [ebx-0x4b],eax
  434fb9:	inc    DWORD PTR [ebx-0xc]
  434fbc:	bound  esi,QWORD PTR [ebx]
  434fbe:	mov    bh,0x35
  434fc0:	test   al,0xca
  434fc2:	add    eax,DWORD PTR [ebp-0xbbc1858]
  434fc8:	ret    0x8798
  434fcb:	dec    ebx
  434fcc:	jns    0x434fa3
  434fce:	dec    ebx
  434fcf:	fcom   QWORD PTR [edx]
  434fd1:	add    BYTE PTR [eax],al
  434fd3:	add    BYTE PTR [edi-0x38aebc77],cl
  434fd9:	dec    ebp
  434fda:	inc    eax
  434fdb:	bound  esi,QWORD PTR [ebx+0x189c25da]
  434fe1:	xchg   DWORD PTR [ebx+0x0],ecx
  434fe4:	push   cs
  434fe5:	loope  0x434fef
  434fe7:	jmp    0x435002
  434fe9:	xchg   BYTE PTR [ecx+0x0],al
  434fec:	xchg   ecx,eax
  434fed:	inc    esi
  434fee:	aam    0x8a
  434ff0:	or     al,BYTE PTR ss:[ebx+0x83be245]
  434ff7:	inc    eax
  434ff8:	in     eax,0x46
  434ffa:	hlt    
  434ffb:	mov    DWORD PTR [edi-0x25],ecx
  434ffe:	ins    DWORD PTR es:[edi],dx
  434fff:	in     al,dx
  435000:	mov    DWORD PTR [eax+eax*2+0x0],edx
  435004:	in     eax,0x8f
  435006:	aaa    
  435007:	add    edx,ebx
  435009:	or     bh,BYTE PTR [edi+0xabe07]
  43500f:	add    bl,dh
  435011:	adc    eax,0x83dafff9
  435016:	jne    0x435008
  435018:	fiadd  DWORD PTR [edi]
  43501a:	test   BYTE PTR [eax-0x74fff535],cl
  435020:	pand   mm0,QWORD PTR [edx+0x83ada4f]
  435027:	inc    eax
  435028:	gs (bad) 
  43502a:	out    dx,eax
  43502b:	mov    edi,ecx
  43502d:	fidivr DWORD PTR [edi+0xabe07]
  435033:	add    BYTE PTR [ebx-0x4d],ah
  435036:	cli    
  435037:	inc    DWORD PTR [eax]
  435039:	add    BYTE PTR [eax],al
  43503b:	call   0x8407:0x8a087783
  435042:	mov    al,0x8a
  435044:	or     al,BYTE PTR [eax]
  435046:	xor    DWORD PTR [ebx+eiz*8+0x6a],0x26
  43504b:	xlat   BYTE PTR ds:[ebx]
  43504c:	cs and al,0x0
  43504f:	leave  
  435050:	dec    ebp
  435051:	cld    
  435052:	add    BYTE PTR ds:0x5a014986,dh
  435058:	or     al,BYTE PTR [edi]
  43505a:	mov    dh,0x58
  43505c:	xlat   BYTE PTR ds:[ebx]
  43505d:	inc    ebp
  43505e:	cld    
  43505f:	repz sub BYTE PTR [esi-0x7b8dac33],bh
  435066:	ret    0x36fb
  435069:	xor    eax,edi
  43506b:	lock out 0x82,eax
  43506e:	cli    
  43506f:	rol    DWORD PTR [ecx+0x4fae85af],cl
  435075:	sbb    eax,DWORD PTR [ebx+0x3]
  435078:	cmp    DWORD PTR [ecx],edi
  43507a:	or     dl,dh
  43507c:	outs   dx,BYTE PTR ds:[esi]
  43507d:	icebp  
  43507e:	(bad)  
  43507f:	mov    ch,0xb3
  435081:	jbe    0x4350c6
  435083:	adc    esp,DWORD PTR [ebx]
  435085:	les    esi,FWORD PTR [edx+ebx*1+0x39]
  435089:	cmp    eax,ebp
  43508b:	js     0x435021
  43508d:	in     eax,0x4f
  43508f:	or     al,ch
  435091:	cmp    BYTE PTR [ecx+0x3],0xb0
  435095:	cs dec esi
  435097:	inc    edi
  435098:	lods   eax,DWORD PTR ds:[esi]
  435099:	aad    0x4e
  43509b:	sti    
  43509c:	scas   eax,DWORD PTR es:[edi]
  43509d:	std    
  43509e:	in     al,0x0
  4350a0:	add    BYTE PTR [eax],al
  4350a2:	test   bh,0xec
  4350a5:	cld    
  4350a6:	mov    ah,0xaf
  4350a8:	jl     0x4350f5
  4350aa:	sti    
  4350ab:	cmp    BYTE PTR [edx],dh
  4350ad:	clc    
  4350ae:	jp     0x435094
  4350b0:	jmp    0x435038
  4350b2:	xor    al,al
  4350b4:	test   BYTE PTR [ecx+0x3],bh
  4350b7:	mov    al,0x7c
  4350b9:	inc    ebx
  4350ba:	xor    DWORD PTR [esi],0x42
  4350bd:	loopne 0x435137
  4350bf:	jo     0x435113
  4350c1:	sbb    eax,0xd0afd6
  4350c6:	repz sub BYTE PTR [edi+edi*4-0x40fb20ae],bh
  4350ce:	js     0x435148
  4350d0:	mov    esi,0xde2eebe7
  4350d5:	add    BYTE PTR [edi+ebp*4-0x3],dl
  4350d9:	mov    esi,0x4ef0653
  4350de:	test   BYTE PTR [ecx+0x1e54c22e],dl
  4350e4:	out    0xc2,al
  4350e6:	inc    BYTE PTR [ebp-0x11]
  4350e9:	push   edi
  4350ea:	call   DWORD PTR [ecx+0x4633fbac]
  4350f0:	fild   WORD PTR [edi-0x60]
  4350f3:	inc    esi
  4350f4:	out    0xdc,eax
  4350f6:	mov    edi,0x1140df9
  4350fb:	(bad)
  4350fe:	add    al,0xbd
  435100:	out    0x84,eax
  435102:	jp     0x435112
  435104:	out    0x0,eax
  435106:	add    BYTE PTR [eax],al
  435108:	add    BYTE PTR [edi-0x74],ch
  43510b:	out    0x3,eax
  43510d:	xrelease xchg DWORD PTR [edx+0x630de4f3],eax
  435114:	xchg   ebx,esi
  435116:	push   es
  435117:	out    0x84,eax
  435119:	(bad)  
  43511b:	jne    0x435142
  43511d:	dec    esi
  43511e:	cmp    ah,bl
  435120:	add    al,0xfa
  435122:	sub    BYTE PTR [esi+0x4],0xf3
  435126:	push   es
  435127:	loop   0x4350be
  435129:	mov    ch,0xbd
  43512b:	sbb    al,0xd0
  43512d:	jbe    0x4350fc
  43512f:	xchg   esi,eax
  435130:	in     al,0xe5
  435132:	xchg   DWORD PTR [ecx-0x50ad8a04],esp
  435138:	add    edi,DWORD PTR [ebx+0x1d24a988]
  43513e:	fstp   st(6)
  435140:	cs out 0x32,eax
  435143:	xor    edi,DWORD PTR [ebx+0x28]
  435146:	rsm    
  435148:	inc    ebp
  435149:	fild   DWORD PTR [edx+0x14]
  43514c:	inc    esp
  43514d:	repz ret 
  43514f:	jmp    0xf27a:0xe7bc64f0
  435156:	xchg   DWORD PTR [eax],eax
  435158:	jno    0x43519f
  43515a:	jb     0xfa01a3e9
  435160:	mov    eax,ds:0x5ef9be35
  435165:	or     eax,0x4a625952
  43516a:	pusha  
  43516b:	mov    esi,0xe1
  435170:	lock add DWORD PTR [ebx-0xf],0x70e84fa9
  435178:	fisttp WORD PTR [edx]
  43517a:	test   DWORD PTR [eax+eax*2-0x359def7c],esp
  435181:	mov    edx,0x8500b187
  435186:	push   eax
  435187:	in     eax,0x7f
  435189:	xor    eax,0x5d77b73c
  43518e:	cmp    BYTE PTR [edx-0x16064388],dh
  435194:	lock pop ebp
  435196:	test   DWORD PTR [edx+eiz*1],eax
  435199:	jge    0x4351a3
  43519b:	jmp    0xf77123a1
  4351a0:	mov    ch,0x5
  4351a2:	sbb    al,0xe9
  4351a4:	lock push es
  4351a6:	shl    DWORD PTR [edi+ecx*4],0xbb
  4351aa:	stc    
  4351ab:	jmp    0xa644f3a0
  4351b0:	cmp    ebx,edi
  4351b2:	sti    
  4351b3:	(bad)  
  4351b4:	mov    ch,0xbd
  4351b6:	test   DWORD PTR [edi+ebx*4],esp
  4351b9:	or     BYTE PTR [ebx-0x3f],0x17
  4351bd:	dec    edi
  4351be:	or     al,0x62
  4351c0:	xor    esi,DWORD PTR [edi+0x5809f987]
  4351c6:	cld    
  4351c7:	jo     0x435181
  4351c9:	push   ss
  4351ca:	xchg   DWORD PTR [ecx],edi
  4351cc:	jmp    0x435207
  4351ce:	jns    0x435191
  4351d0:	lock sbb DWORD PTR [ecx+0x0],0x0
  4351d5:	add    BYTE PTR [eax],al
  4351d7:	xor    bh,BYTE PTR [edx]
  4351d9:	outs   dx,DWORD PTR ds:[esi]
  4351da:	cmp    al,0x67
  4351dc:	mov    bh,0x7c
  4351de:	aas    
  4351df:	inc    eax
  4351e0:	push   esi
  4351e1:	mov    edx,DWORD PTR es:[edi]
  4351e4:	mov    ds:0x10424d83,eax
  4351e9:	cmp    DWORD PTR [eax],edx
  4351eb:	es call 0x40ed9773
  4351f1:	push   ebp
  4351f2:	or     BYTE PTR [edx-0x52001c8c],dh
  4351f8:	mov    es,eax
  4351fa:	je     0x435242
  4351fc:	(bad)  
  4351fd:	call   FWORD PTR ds:0x5e00070a
  435203:	popa   
  435204:	(bad)  
  435205:	cld    
  435206:	dec    ebp
  435208:	int3   
  435209:	push   edi
  43520a:	mov    esi,edi
  43520c:	idiv   BYTE PTR [ecx+0x6d400a08]
  435212:	or     BYTE PTR [ecx+0x4f],dl
  435215:	shr    BYTE PTR [ebx],1
  435217:	xchg   esp,eax
  435218:	add    al,BYTE PTR [ebx+0x561cea5d]
  43521e:	adc    bl,cl
  435220:	inc    esp
  435221:	or     BYTE PTR [ecx],al
  435223:	jl     0x4351d7
  435225:	cli    
  435226:	pop    esi
  435227:	out    dx,al
  435228:	xchg   DWORD PTR [edi+0x8],esi
  43522b:	retf   0x3d3d
  43522e:	rcl    BYTE PTR [esi],1
  435230:	push   ss
  435231:	jge    0x43520e
  435233:	inc    esi
  435234:	sbb    bh,BYTE PTR [ebx+0x7f]
  435237:	retf   0x4b06
  43523a:	je     0x43523c
  43523c:	add    BYTE PTR [eax],al
  43523e:	mov    ebx,0x110c4e3f
  435243:	inc    esp
  435244:	sbb    BYTE PTR [ebx],ch
  435246:	imul   esi,ebp,0x126e84f
  43524c:	add    BYTE PTR [eax],al
  43524e:	popa   
  43524f:	mov    esp,0xa3f34e84
  435254:	js     0x4352a7
  435256:	or     eax,ebp
  435258:	mov    eax,0x4f97c14f
  43525d:	call   FWORD PTR [eax+esi*4+0x76]
  435261:	inc    ecx
  435262:	sti    
  435263:	es inc edx
  435265:	xor    BYTE PTR [eax-0x5f],bh
  435268:	cmp    al,0xe0
  43526b:	(bad)  
  43526d:	shl    BYTE PTR [esi-0xc000249],0xaf
  435274:	cmp    al,0xfd
  435277:	rol    BYTE PTR [ecx+eax*8],cl
  43527a:	scas   al,BYTE PTR es:[edi]
  43527b:	mov    bh,0xfd
  43527d:	(bad)  
  43527e:	sbb    al,0xb0
  435280:	js     0x4352cb
  435282:	out    dx,eax
  435283:	clc    
  435284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435285:	adc    eax,0x7dafbd3a
  43528a:	adc    dh,BYTE PTR [eax-0x80]
  43528d:	clc    
  43528e:	call   0xf101c53b
  435293:	(bad)  
  435294:	cmc    
  435295:	inc    ebp
  435296:	jb     0x4352a5
  435298:	test   BYTE PTR [eax],al
  43529a:	repz scas eax,DWORD PTR es:[edi]
  43529c:	add    bh,cl
  43529e:	lock nop
  4352a0:	or     DWORD PTR [ebp+0x0],edi
  4352a3:	add    BYTE PTR [eax],al
  4352a5:	push   esi
  4352a6:	and    BYTE PTR [edi+eax*4],al
  4352a9:	and    eax,0x6e04527c
  4352ae:	les    edx,FWORD PTR [ecx+0x2]
  4352b1:	jo     0x43530d
  4352b3:	add    BYTE PTR [esi+edi*1],al
  4352b6:	mov    bh,0x78
  4352b8:	inc    ebx
  4352b9:	retf   
  4352ba:	and    bh,BYTE PTR [ebp-0x34c191f7]
  4352c0:	stc    
  4352c1:	pushf  
  4352c2:	sbb    DWORD PTR [edi],esp
  4352c4:	mov    eax,0xf9cc7098
  4352c9:	sub    al,0x25
  4352cb:	loop   0x435328
  4352cd:	mov    cl,0x6
  4352cf:	out    dx,eax
  4352d0:	add    esi,DWORD PTR [esi+0x43]
  4352d3:	mov    edi,0x5e5a1e2d
  4352d8:	out    0xc8,al
  4352da:	(bad)  
  4352db:	fild   WORD PTR [ebx]
  4352dd:	stos   DWORD PTR es:[edi],eax
  4352de:	mov    eax,0x595acc82
  4352e3:	outs   dx,BYTE PTR ds:[esi]
  4352e4:	out    0xb8,al
  4352e6:	(bad)  
  4352e7:	fild   WORD PTR [ebx]
  4352e9:	jbe    0x4352a4
  4352eb:	stos   BYTE PTR es:[edi],al
  4352ec:	repz pop es
  4352ee:	pop    es
  4352ef:	loope  0x4352e3
  4352f1:	inc    DWORD PTR [esi]
  4352f3:	jmp    0x4352e6
  4352f5:	test   DWORD PTR [esi],0x6eff167
  4352fb:	push   esp
  4352fc:	icebp  
  4352fd:	out    0x6,eax
  4352ff:	mov    dh,0xf0
  435301:	fild   WORD PTR [esi]
  435303:	add    edi,eax
  435305:	xlat   BYTE PTR ds:[ebx]
  435306:	push   es
  435307:	push   ss
  435308:	test   DWORD PTR [eax],0x6cf0000
  43530e:	stos   DWORD PTR es:[edi],eax
  43530f:	test   bh,0x6
  435312:	call   0xb94a130c
  435317:	cmc    
  435318:	mov    bh,0x6
  43531a:	ins    BYTE PTR es:[edi],dx
  43531b:	cmc    
  43531c:	das    
  43531d:	pop    es
  43531e:	jo     0x435315
  435320:	daa    
  435321:	pop    es
  435322:	lahf   
  435323:	hlt    
  435324:	pop    ds
  435325:	pop    es
  435326:	xor    al,0xf4
  435328:	pop    ss
  435329:	pop    es
  43532a:	cs hlt 
  43532c:	sysret 
  43532e:	shr    bl,cl
  435330:	pop    es
  435331:	pop    es
  435332:	jbe    0x435320
  435334:	inc    DWORD PTR [esi]
  435336:	dec    eax
  435337:	in     eax,dx
  435338:	test   DWORD PTR [esi],0x6efe819
  43533e:	or     ebp,eax
  435340:	out    0x6,eax
  435342:	xor    edx,ebp
  435344:	fild   WORD PTR [esi]
  435346:	mov    gs,edx
  435348:	xlat   BYTE PTR ds:[ebx]
  435349:	push   es
  43534a:	add    bh,ch
  43534c:	sar    cl,1
  43534e:	call   FWORD PTR [ecx]
  435350:	iret   
  435351:	stc    
  435352:	(bad)  
  435353:	call   esi
  435355:	stc    
  435356:	(bad)  
  435357:	fcmovne st,st(7)
  435359:	stc    
  43535a:	call   DWORD PTR [ebx+0x71fffa16]
  435360:	or     eax,0x154cfffa
  435365:	cli    
  435366:	(bad)  
  435367:	jns    0x435376
  435369:	cli    
  43536a:	push   DWORD PTR [ebx+0x41]
  43536d:	sti    
  43536e:	(bad)  
  43536f:	fiadd  WORD PTR [eax]
  435371:	add    BYTE PTR [eax],al
  435373:	inc    ecx
  435374:	sti    
  435375:	call   DWORD PTR [eax+eax*2]
  435378:	sti    
  435379:	call   FWORD PTR [ebx]
  43537b:	inc    eax
  43537c:	sti    
  43537d:	(bad)  
  43537e:	mov    ebx,0x6252aaad
  435383:	ret    0x830e
  435386:	aas    
  435387:	ret    
  435388:	sti    
  435389:	test   BYTE PTR [edi-0x423f7af4],ah
  43538f:	loop   0x435312
  435391:	dec    edx
  435392:	add    eax,0xd674c072
  435397:	jge    0x4353df
  435399:	xor    al,0x64
  43539b:	das    
  43539c:	xor    eax,DWORD PTR [esi]
  43539e:	mov    ecx,0xb928456d
  4353a3:	mov    ecx,0xdf2d7dc7
  4353a8:	or     BYTE PTR [edx-0x23],0x55
  4353ac:	push   ebp
  4353ad:	sub    BYTE PTR [edx+0x31],ah
  4353b0:	jecxz  0x435400
  4353b2:	fwait
  4353b3:	mov    ecx,0xb8ad7dd6
  4353b8:	mov    BYTE PTR [edx-0x3],0xf0
  4353bc:	push   es
  4353bd:	add    cl,ch
  4353bf:	add    eax,0xad2c5ac7
  4353c4:	add    al,BYTE PTR [eax]
  4353c6:	add    BYTE PTR [edx-0x33],dh
  4353c9:	idiv   edi
  4353cb:	push   ebp
  4353cc:	in     eax,dx
  4353cd:	push   esp
  4353ce:	ret    0x39e
  4353d1:	int3   
  4353d2:	int3   
  4353d3:	outs   dx,WORD PTR ds:[esi]
  4353d5:	int3   
  4353d6:	int3   
  4353d7:	add    BYTE PTR [eax],al
  4353d9:	add    BYTE PTR [esi+0x6f],al
  4353dc:	int3   
  4353dd:	int3   
  4353de:	inc    esi
  4353df:	outs   dx,DWORD PTR ds:[esi]
  4353e0:	int3   
  4353e1:	int3   
  4353e2:	das    
  4353e3:	cmp    ah,ch
  4353e5:	mov    eax,DWORD PTR [edi]
  4353e7:	mov    ebx,0xb3178b4c
  4353ec:	push   eax
  4353ed:	mov    esi,DWORD PTR [ebx-0x3e]
  4353f0:	out    0x10,eax
  4353f2:	(bad)  [edx+0x35afff7]
  4353f8:	jnp    0x4353f5
  4353fa:	dec    ebx
  4353fb:	push   esi
  4353fc:	sub    ecx,DWORD PTR [ebx-0x49f75071]
  435402:	sub    al,BYTE PTR [eax]
  435404:	ret    0xc381
  435407:	shl    bh,cl
  435409:	add    BYTE PTR [edx],cl
  43540b:	push   ecx
  43540c:	inc    BYTE PTR [eax+0xf7d2c3]
  435412:	sbb    al,BYTE PTR [eax]
  435414:	icebp  
  435415:	adc    ebp,0xa00f7d2
  43541b:	push   ecx
  43541c:	inc    BYTE PTR [eax+0xf7d2e5]
  435422:	fidiv  DWORD PTR ds:0xb9fac1bf
  435428:	pop    eax
  435429:	or     ecx,DWORD PTR [ebx]
  43542b:	in     eax,0x54
  43542d:	ret    0xac6
  435430:	dec    esi
  435431:	mov    ecx,DWORD PTR [edi-0x42]
  435434:	jle    0x43542c
  435436:	aas    
  435437:	mov    ah,0x86
  435439:	inc    esi
  43543a:	retf   
  43543b:	loopne 0x435493
  43543d:	pop    ebx
  43543e:	add    BYTE PTR [eax],al
  435440:	add    bh,dh
  435442:	int3   
  435443:	or     al,0x0
  435445:	repz and bl,cl
  435448:	adc    BYTE PTR [eax],ah
  43544a:	loope  0x4354c4
  43544c:	aad    0x27
  43544e:	shl    BYTE PTR [edx-0x5c],cl
  435451:	iret   
  435452:	lahf   
  435453:	std    
  435454:	push   ebx
  435456:	lods   al,BYTE PTR ds:[esi]
  435457:	pop    DWORD PTR [edx]
  435459:	lock addr16 ds std 
  43545d:	jnp    0x435458
  43545f:	dec    eax
  435460:	repz jb 0x4354ca
  435463:	int    0xf9
  435465:	repz lahf 
  435467:	push   ebx
  435468:	add    dh,BYTE PTR [edx-0x79]
  43546b:	int    0xf9
  43546d:	repz lahf 
  43546f:	test   DWORD PTR [edi+0x73],ebp
  435472:	lods   eax,DWORD PTR ds:[esi]
  435473:	jge    0x435466
  435475:	push   esp
  435476:	pop    edi
  435477:	fimul  DWORD PTR [ecx]
  435479:	js     0x4354dd
  43547b:	mov    ebp,0xc218f7e0
  435480:	std    
  435481:	sub    eax,0x3e0be76
  435486:	jge    0x435484
  435488:	mov    esi,0xcc362c8
  43548d:	repz push ds
  43548f:	retf   
  435490:	mov    al,0xfe
  435492:	lahf   
  435493:	std    
  435494:	or     BYTE PTR [ecx+0x12],dh
  435497:	add    al,0x0
  435499:	repz aaa 
  43549b:	xchg   edi,eax
  43549c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43549d:	(bad)  
  43549e:	int    0xd0
  4354a0:	fnsave [edx]
  4354a2:	sbb    bh,bl
  4354a4:	xchg   BYTE PTR [eax],al
  4354a6:	add    BYTE PTR [eax],al
  4354a8:	inc    esi
  4354a9:	lods   al,BYTE PTR ds:[esi]
  4354aa:	jle    0x435491
  4354ac:	mov    ds:0x9bfffdba,eax
  4354b1:	push   0x22f3fffe
  4354b6:	pusha  
  4354b7:	and    al,0xf3
  4354b9:	lods   al,BYTE PTR ds:[esi]
  4354ba:	(bad)  
  4354bb:	adc    dh,al
  4354bd:	jmp    0x76906b8
  4354c2:	call   0xad4d10cb
  4354c7:	clc    
  4354c8:	bound  ebx,QWORD PTR [ebp+eiz*8+0x4]
  4354cc:	pushf  
  4354cd:	or     DWORD PTR [ebp-0x19a39d08],ebx
  4354d3:	add    al,0x9c
  4354d5:	or     DWORD PTR [ebp-0x14a3bd08],ebp
  4354db:	add    al,0x7c
  4354dd:	or     DWORD PTR [ebp-0x13a3bd08],ebx
  4354e3:	add    al,0x7c
  4354e5:	or     DWORD PTR [ebp-0x16a35d08],ebp
  4354eb:	add    al,0x5c
  4354ed:	or     DWORD PTR [ebp-0x15a35d08],ebx
  4354f3:	add    al,0x5c
  4354f5:	or     DWORD PTR [ebp-0x20a37d08],ebp
  4354fb:	add    al,0x3c
  4354fd:	or     DWORD PTR [ebp-0xfa37d08],ebx
  435503:	add    al,0x3c
  435505:	or     DWORD PTR ds:0xdd5c62f8,ebp
  43550b:	add    al,0x0
  43550d:	add    BYTE PTR [eax],al
  43550f:	sbb    al,0x9
  435511:	sbb    eax,0xee5c62f8
  435516:	add    al,0x1c
  435518:	or     DWORD PTR ds:0xe35c42f8,ebp
  43551e:	add    al,0xfc
  435520:	or     BYTE PTR ds:0xf45c42f8,bl
  435526:	add    al,0xfc
  435528:	or     BYTE PTR ds:0xe15da2f8,ch
  43552e:	add    al,0xdc
  435530:	or     BYTE PTR ds:0xf25da2f8,bl
  435536:	add    al,0xdc
  435538:	or     BYTE PTR ds:0x88c404,ch
  43553e:	das    
  43553f:	ror    BYTE PTR [ecx+ecx*1+0x64],0x23
  435544:	scas   al,BYTE PTR es:[edi]
  435545:	stc    
  435546:	out    0x67,al
  435548:	and    al,0x80
  43554a:	out    0x70,al
  43554c:	mov    dh,0xdf
  43554e:	test   al,0xc9
  435550:	(bad)  
  435551:	mov    bx,0xb4a4
  435555:	cli    
  435556:	(bad)  
  435557:	lock int3 
  435559:	mov    eax,0x80067738
  43555e:	mov    esi,0xdee674a4
  435563:	pop    ds
  435564:	lds    ecx,FWORD PTR [ecx]
  435566:	jmp    0xa3410418
  43556b:	xor    al,0x40
  43556d:	or     al,0xe6
  43556f:	jae    0x43556b
  435571:	clc    
  435572:	mov    es,WORD PTR [eax]
  435574:	add    BYTE PTR [eax],al
  435576:	xor    al,0x88
  435578:	aad    0xf6
  43557a:	aam    0xc3
  43557c:	add    cl,ch
  43557e:	lock xor ebp,esi
  435581:	fnstcw WORD PTR ds:0xf0e99332
  435587:	push   es
  435588:	test   DWORD PTR [edx],ebp
  43558a:	cs lahf 
  43558c:	add    al,0x6c
  43558e:	xchg   ebx,eax
  43558f:	jmp    0x22fd:0x1976e5ff
  435596:	and    al,0x76
  435598:	push   edx
  435599:	call   0x3341118f
  43559e:	add    al,0x76
  4355a0:	push   edx
  4355a1:	jmp    0x435594
  4355a3:	mov    ebx,0x760422fd
  4355a8:	push   edx
  4355a9:	jmp    0x75e4:0x32fdbbf1
  4355b0:	push   edx
  4355b1:	in     eax,dx
  4355b2:	icebp  
  4355b3:	mov    ebx,0x75e422fd
  4355b8:	push   edx
  4355b9:	add    bh,al
  4355bb:	or     cl,dh
  4355bd:	add    eax,DWORD PTR [eax]
  4355bf:	mov    esp,0x8d456af
  4355c4:	icebp  
  4355c5:	add    edx,DWORD PTR [eax]
  4355c7:	mov    esp,0x8c556af
  4355cc:	icebp  
  4355cd:	add    esp,DWORD PTR [eax-0x44]
  4355d0:	scas   eax,DWORD PTR es:[edi]
  4355d1:	push   esi
  4355d2:	xchg   edx,eax
  4355d3:	or     cl,dh
  4355d5:	add    edx,DWORD PTR [eax-0x44]
  4355d8:	scas   eax,DWORD PTR es:[edi]
  4355d9:	push   esi
  4355da:	add    BYTE PTR [eax],al
  4355dc:	add    BYTE PTR [ebx+0x4003f108],ah
  4355e2:	mov    esp,0x89056af
  4355e7:	icebp  
  4355e8:	add    edx,DWORD PTR [eax-0x44]
  4355eb:	scas   eax,DWORD PTR es:[edi]
  4355ec:	push   esi
  4355ed:	or     DWORD PTR [eax],0xbca003f1
  4355f3:	scas   eax,DWORD PTR es:[edi]
  4355f4:	push   esi
  4355f5:	dec    esi
  4355f6:	or     cl,dh
  4355f8:	add    edx,DWORD PTR [eax+0x5f56afbc]
  4355fe:	or     cl,dh
  435600:	add    eax,DWORD PTR [eax+0x4c56afbc]
  435606:	or     cl,dh
  435608:	add    edx,DWORD PTR [eax+0x3d56afbc]
  43560e:	or     cl,dh
  435610:	add    esp,eax
  435612:	mov    bl,ah
  435614:	adc    BYTE PTR [ecx],bl
  435616:	ret    0xc67b
  435619:	sbb    ch,bh
  43561b:	push   es
  43561c:	test   DWORD PTR [esi-0x34],edx
  43561f:	idiv   edi
  435621:	xchg   edi,eax
  435622:	pusha  
  435623:	je     0x435630
  435625:	or     eax,0xd202fe81
  43562a:	icebp  
  43562b:	cli    
  43562c:	clc    
  43562d:	inc    ecx
  43562e:	push   esi
  43562f:	in     eax,dx
  435630:	mov    eax,0x7fff868b
  435635:	repz adc ah,ah
  435638:	mov    edi,0xce5cd1c9
  43563d:	in     al,0x9f
  43563f:	ret    0xf9
  435642:	add    BYTE PTR [eax],al
  435644:	lock cmc 
  435646:	test   BYTE PTR [edi+0x73],ch
  435649:	mov    eax,ds:0xdfd4f17d
  43564e:	(bad)  
  43564f:	or     DWORD PTR [edx+0x6e],ecx
  435652:	repz jmp FWORD PTR [ebp+0x78f5ffd1]
  435659:	popa   
  43565a:	and    bh,BYTE PTR [edi+0x524b093]
  435660:	mov    dl,0xe5
  435662:	and    BYTE PTR [esi-0x334e6001],bh
  435668:	mov    bh,0x12
  43566a:	ja     0x43565a
  43566c:	test   BYTE PTR [eax-0x3d000d87],dl
  435672:	jb     0x435618
  435674:	pop    ss
  435675:	mov    al,ds:0x91f3fffd
  43567a:	mov    ebp,0xf4b6e0fd
  43567f:	mov    cl,0x2
  435681:	ins    DWORD PTR es:[edi],dx
  435682:	lods   eax,DWORD PTR ds:[esi]
  435683:	jg     0x4356d6
  435685:	xor    DWORD PTR [eax+eax*1],eax
  435688:	repz pop esi
  43568a:	fmul   QWORD PTR [eax]
  43568c:	add    BYTE PTR [edx+ebp*2-0x29fefc8],ch
  435693:	ds mov ebp,0xbc4ddfda
  435699:	sbb    al,0xc2
  43569b:	and    ah,ch
  43569d:	sbb    eax,0xa014fdf7
  4356a2:	js     0x43569e
  4356a4:	xor    al,BYTE PTR [ecx-0x7]
  4356a7:	test   BYTE PTR [eax],al
  4356a9:	add    BYTE PTR [eax],al
  4356ab:	add    al,0xad
  4356ad:	inc    BYTE PTR [ebx+eiz*1+0x6810d5df]
  4356b4:	pop    es
  4356b5:	aas    
  4356b6:	ret    
  4356b7:	(bad)  
  4356b8:	(bad)  
  4356b9:	addr16 loope 0x4356a6
  4356bc:	push   es
  4356bd:	out    0x3,eax
  4356bf:	pop    esp
  4356c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4356c1:	or     al,BYTE PTR [ebx+esi*8]
  4356c4:	push   es
  4356c5:	outs   dx,BYTE PTR ds:[esi]
  4356c6:	lock popa 
  4356c8:	out    dx,al
  4356c9:	rol    DWORD PTR [ebx-0xd],0xf5
  4356cd:	fisub  DWORD PTR [esi-0x5]
  4356d0:	frstor [esi-0x573191fd]
  4356d6:	fmul   DWORD PTR [ebx]
  4356d8:	div    dl
  4356da:	data16 jmp 0x4356c2
  4356dd:	es add al,0xd0
  4356e0:	mov    cl,0xe7
  4356e2:	add    esi,ebx
  4356e4:	cmc    
  4356e5:	fidivr DWORD PTR [esi-0x35]
  4356e8:	loope  0x435710
  4356ea:	add    al,0xd6
  4356ec:	push   edi
  4356ed:	jmp    0x435767
  4356ef:	cmp    eax,0xd1f3bfc7
  4356f4:	mov    cl,0xe7
  4356f6:	add    esi,ebx
  4356f8:	jge    0x4356dd
  4356fa:	jle    0x435727
  4356fc:	jmp    0xd8a8:0xcc760426
  435703:	jmp    0x43568c
  435705:	xchg   ah,al
  435707:	repz push es
  435709:	out    0x10,eax
  43570b:	out    dx,eax
  43570c:	xchg   ebx,eax
  43570d:	scas   eax,DWORD PTR es:[edi]
  43570e:	sbb    BYTE PTR [eax],al
  435710:	add    BYTE PTR [eax],al
  435712:	mov    bl,0x6
  435714:	pop    esi
  435715:	test   eax,0x10ff9d74
  43571a:	not    DWORD PTR [ebx+0x6b3211f]
  435720:	push   0xe7061ae1
  435725:	add    eax,esi
  435727:	or     bl,BYTE PTR [ebx+ecx*1-0x26]
  43572b:	inc    esi
  43572c:	out    0x10,eax
  43572e:	(bad)  
  43572f:	(bad)  
  435730:	jmp    DWORD PTR [ecx+0x40]
  435733:	jno    0x43571b
  435735:	fnstcw WORD PTR [ebx-0x32]
  435738:	mov    edi,0xdd31e812
  43573d:	push   ds
  43573e:	lock push es
  435740:	add    BYTE PTR [eax-0x2e],ch
  435743:	scas   al,BYTE PTR es:[edi]
  435744:	add    cl,ch
  435746:	lock mov DWORD PTR [esp+ebx*2],edx
  43574a:	clc    
  43574b:	in     eax,0x3f
  43574d:	jmp    0xb1de7235
  435752:	fild   DWORD PTR [esi+0x0]
  435755:	bound  ecx,QWORD PTR [eax-0x5bfe1a90]
  43575b:	adc    al,0x9b
  43575d:	and    DWORD PTR [eax+esi*8+0x7b00bff],ecx
  435764:	add    cl,ch
  435766:	popf   
  435767:	adc    al,0x83
  435769:	add    DWORD PTR [eax+0x1ff9fff0],eax
  43576f:	add    eax,DWORD PTR [ebp+0x109fb6ab]
  435775:	add    al,0x0
  435777:	add    BYTE PTR [eax],al
  435779:	mov    al,0x7
  43577b:	add    cl,ch
  43577d:	jge    0x43578a
  43577f:	and    ecx,0x59
  435782:	lock jmp DWORD PTR [ecx+0x3d]
  435786:	jo     0x43576d
  435788:	loope  0x4357f9
  43578a:	sar    cl,cl
  43578c:	jmp    0xe5705e81
  435791:	xchg   ebx,eax
  435792:	out    dx,eax
  435793:	and    al,0x29
  435795:	test   DWORD PTR [ecx+0xf84a8d6],0xef53ed2d
  43579f:	sbb    al,0xa9
  4357a1:	lock das 
  4357a3:	ficom  WORD PTR [esi-0x9]
  4357a6:	push   es
  4357a7:	add    BYTE PTR [edx],bl
  4357a9:	jmp    0x43573e
  4357ab:	cmp    BYTE PTR [eax],al
  4357ad:	in     eax,0x4a
  4357af:	add    BYTE PTR [ebx],dh
  4357b1:	pop    ebx
  4357b2:	adc    al,0x83
  4357b4:	ror    bl,1
  4357b6:	pusha  
  4357b7:	adc    BYTE PTR [ebx+0x8e3c9e2],cl
  4357bd:	pop    ebx
  4357be:	imul   esi,edi,0x8303da00
  4357c4:	adc    al,0x5f
  4357c6:	mov    bl,0x20
  4357c8:	inc    eax
  4357c9:	retf   0xdb8a
  4357cc:	(bad)  
  4357cd:	fiadd  DWORD PTR [ebx]
  4357cf:	add    BYTE PTR [ebx],dh
  4357d1:	sahf   
  4357d2:	data16 cmp BYTE PTR [ebx],ch
  4357d5:	mov    al,BYTE PTR [ebx]
  4357d7:	sbb    eax,0xb
  4357da:	pusha  
  4357db:	sbb    BYTE PTR [ebx],dh
  4357dd:	add    BYTE PTR [eax],al
  4357df:	add    BYTE PTR [esi-0x25dcc79a],ch
  4357e5:	or     bl,BYTE PTR ds:0x38aff
  4357eb:	xor    ebx,DWORD PTR [esi-0x25d0c782]
  4357f1:	or     ch,BYTE PTR [ebx]
  4357f3:	push   ecx
  4357f4:	sahf   
  4357f5:	cmp    BYTE PTR [edx+0x1d13b2c1],0xff
  4357fc:	mov    al,BYTE PTR [ebx]
  4357fe:	add    BYTE PTR [ebx+0x27387e5e],cl
  435804:	sbb    cl,BYTE PTR [ebx]
  435806:	sbb    edx,0xffffff8b
  435809:	pusha  
  43580a:	or     BYTE PTR [ecx+0xc469],al
  435810:	pop    edx
  435811:	mov    eax,0xa0329cfd
  435816:	cmp    DWORD PTR [eax],eax
  435818:	rcl    ecx,1
  43581a:	mov    ecx,0xfdb822eb
  43581f:	pushf  
  435820:	shl    BYTE PTR [edi+0x699b0039],cl
  435826:	test   DWORD PTR [eax],0x2cfd9df3
  43582c:	out    dx,eax
  43582d:	cmp    dh,ch
  43582f:	sub    BYTE PTR [ebx-0x2c407d63],dh
  435835:	lods   al,BYTE PTR ds:[esi]
  435836:	inc    esp
  435837:	clc    
  435838:	jo     0x435881
  43583a:	fld    QWORD PTR [ebx+eiz*1-0x26402adc]
  435841:	mov    al,0xc4
  435843:	in     eax,0x0
  435845:	add    BYTE PTR [eax],al
  435847:	sti    
  435848:	push   ds
  435849:	mov    ds:0xfd9ff3f9,eax
  43584e:	test   bh,bh
  435850:	xor    dh,ch
  435852:	and    BYTE PTR [ebx],dh
  435854:	mov    al,ds:0xa0c4dd84
  435859:	std    
  43585a:	inc    DWORD PTR [eax]
  43585c:	int3   
  43585d:	mov    al,ds:0xfd600838
  435862:	test   bl,cl
  435864:	pop    edi
  435865:	stos   DWORD PTR es:[edi],eax
  435866:	sbb    al,ah
  435868:	mov    bl,0x9a
  43586a:	cmp    al,dl
  43586c:	fild   WORD PTR [ebx]
  43586e:	and    edx,DWORD PTR [eax+eiz*4-0x343f0003]
  435875:	cmp    BYTE PTR [eax],0xd4
  435878:	fild   WORD PTR [ebx]
  43587a:	sub    eax,0xbe8b7422
  43587f:	mov    dl,0xc8
  435881:	adc    al,0x23
  435883:	ins    BYTE PTR es:[edi],dx
  435884:	mov    al,ds:0xa478fffd
  435889:	cmp    BYTE PTR [eax],0x14
  43588c:	loopne 0x435891
  43588e:	test   DWORD PTR [ecx],edi
  435890:	pop    edi
  435891:	stos   DWORD PTR es:[edi],eax
  435892:	or     BYTE PTR [edx-0x7f],dh
  435895:	mov    edi,0xf49ff300
  43589a:	add    ebx,DWORD PTR [esi+0x78]
  43589d:	in     al,dx
  43589e:	aas    
  43589f:	repz sub dl,bl
  4358a2:	mov    edi,0xf4ff0718
  4358a7:	lock mov ebx,DWORD PTR [edi]
  4358aa:	in     eax,0x0
  4358ac:	add    BYTE PTR [eax],al
  4358ae:	fadd   QWORD PTR [esi]
  4358b0:	push   0xe7071aa6
  4358b5:	add    ebx,esi
  4358b7:	add    bl,BYTE PTR [esp+edi*8-0x25]
  4358bb:	inc    esi
  4358bc:	out    0x50,eax
  4358be:	jmp    0x66ad:0xfabf3383
  4358c5:	ret    0x38f7
  4358c8:	mov    bh,0x8c
  4358ca:	rol    edi,0xd
  4358cd:	push   es
  4358ce:	jbe    0x43587d
  4358d0:	(bad)  
  4358d1:	add    dl,BYTE PTR [esi-0x38]
  4358d4:	jecxz  0x435862
  4358d6:	retf   
  4358d7:	(bad)  
  4358d8:	adc    dl,BYTE PTR [esp+eax*2]
  4358db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4358dc:	cli    
  4358dd:	add    esi,ebx
  4358df:	push   es
  4358e0:	pop    esi
  4358e1:	add    BYTE PTR [eax-0x12],bh
  4358e4:	rol    DWORD PTR [ebx-0xd],0x81
  4358e8:	mov    edi,0x67fe8ec2
  4358ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4358ee:	call   0x6bea:0xc603e706
  4358f5:	sti    
  4358f6:	xlat   BYTE PTR ds:[ebx]
  4358f7:	inc    esi
  4358f8:	out    0x8c,eax
  4358fa:	stos   DWORD PTR es:[edi],eax
  4358fb:	(bad)  
  4358fc:	into   
  4358fd:	sbb    ecx,esi
  4358ff:	jmp    0xe6e7:0x46d7fb53
  435906:	imul   eax,DWORD PTR [esi],0xffffffe7
  435909:	add    edx,DWORD PTR [esi]
  43590b:	jmp    0x435970
  43590d:	sti    
  43590e:	or     eax,DWORD PTR [edi-0x19]
  435911:	test   BYTE PTR [eax],al
  435913:	add    BYTE PTR [eax],al
  435915:	dec    ecx
  435916:	add    bl,BYTE PTR ds:0x3a33328d
  43591c:	pusha  
  43591d:	sahf   
  43591e:	xor    DWORD PTR [ecx+0x37],0xffffffe5
  435922:	xchg   esi,eax
  435923:	add    dh,ah
  435925:	mov    edx,0x71992cfd
  43592a:	int3   
  43592b:	stc    
  43592c:	jmp    0x52026021
  435931:	call   0x18bf5d11
  435936:	or     al,BYTE PTR [eax-0x17]
  435939:	mov    cl,0x40
  43593b:	jae    0x43598b
  43593d:	dec    ebx
  43593e:	(bad)  
  43593f:	pop    edx
  435940:	sub    ch,BYTE PTR [edx+edi*4]
  435943:	int3   
  435944:	pushf  
  435945:	addr16 call 0x9cc7:0x87fc9c85
  43594d:	cli    
  43594e:	fnstcw WORD PTR [edi-0x44944]
  435954:	popa   
  435955:	cmp    eax,0xf8a48517
  43595a:	sahf   
  43595b:	and    eax,DWORD PTR [ebx+esi*4]
  43595e:	scas   al,BYTE PTR es:[edi]
  43595f:	pop    ebx
  435960:	sub    ebp,esp
  435962:	push   es
  435963:	int3   
  435964:	pushf  
  435965:	sbb    ebx,DWORD PTR [ecx+0x4d]
  435968:	push   0x5c
  43596a:	jecxz  0x4358f0
  43596c:	cmp    eax,0x2d84f49b
  435971:	mov    esi,eax
  435973:	test   BYTE PTR [ebx],ch
  435975:	xlat   BYTE PTR ds:[ebx]
  435976:	adc    DWORD PTR [esi+0x5d],0x20006f7
  435980:	mov    al,0x82
  435982:	ds cmc 
  435984:	imul   edx,DWORD PTR [ebp+0x7c],0xe56bf035
  43598b:	jmp    0x435946
  43598d:	imul   ebx,ebp,0xfffffff9
  435990:	stc    
  435991:	into   
  435992:	xchg   ebp,edi
  435994:	push   esp
  435995:	cmp    DWORD PTR [esi+0x79],0xffffffef
  435999:	push   es
  43599a:	add    BYTE PTR [edx-0x57],ah
  43599d:	xor    dh,BYTE PTR ds:0xfa479200
  4359a3:	mov    dl,BYTE PTR [edx+0x22245c7a]
  4359a9:	sub    DWORD PTR [edx+0x38],0x423ee93
  4359b0:	mov    eax,ds:0x3e8d6be0
  4359b5:	scas   eax,DWORD PTR es:[edi]
  4359b6:	stc    
  4359b7:	mov    BYTE PTR [esi],bh
  4359b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4359ba:	sbb    DWORD PTR [ebx-0x7c278c2b],ecx
  4359c0:	mov    edx,0xf6448107
  4359c5:	push   cs
  4359c6:	add    DWORD PTR [edx-0x12],0xffffffb5
  4359ca:	inc    DWORD PTR [eax]
  4359cc:	fiadd  DWORD PTR [edi]
  4359ce:	and    ebp,eax
  4359d0:	lea    eax,ds:0x4961ed2b
  4359d6:	js     0x435961
  4359d8:	xchg   BYTE PTR [ebx+0x79ea0315],ah
  4359de:	je     0x435a04
  4359e0:	add    BYTE PTR [eax],al
  4359e2:	add    dl,al
  4359e4:	cld    
  4359e5:	scas   al,BYTE PTR es:[edi]
  4359e6:	pop    ds
  4359e7:	inc    ebx
  4359e8:	daa    
  4359e9:	and    al,0x10
  4359eb:	int    0x34
  4359ed:	pop    esp
  4359ee:	cmp    BYTE PTR [ebp-0x61dba386],bl
  4359f4:	xor    BYTE PTR [edx+0x40],0x21
  4359f8:	adc    al,0x24
  4359fa:	jmp    0x43599b
  4359fc:	xchg   esi,eax
  4359fd:	inc    ecx
  4359fe:	add    cl,bh
  435a00:	rol    BYTE PTR [edi],0xb7
  435a03:	jle    0x435a41
  435a05:	xor    ecx,ebp
  435a07:	lea    eax,[ecx+0x78a00e0]
  435a0d:	jns    0x4359f9
  435a0f:	pop    edx
  435a10:	pop    es
  435a11:	stc    
  435a12:	call   FWORD PTR [ebp+0x7f]
  435a15:	aam    0x0
  435a17:	dec    edx
  435a18:	pop    es
  435a19:	pop    es
  435a1a:	mov    bh,0xf3
  435a1c:	fptan  
  435a1e:	clc    
  435a1f:	or     BYTE PTR [ecx+0x38],ah
  435a22:	fstp   TBYTE PTR [eax-0x27]
  435a25:	out    0x3,eax
  435a27:	in     al,dx
  435a28:	hlt    
  435a29:	add    bh,bh
  435a2b:	stc    
  435a2c:	(bad)  
  435a2e:	xsha1  (bad)
  435a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435a30:	mov    WORD PTR [esp+edx*1+0x243138cf],cs
  435a37:	idiv   DWORD PTR [eax]
  435a39:	cmp    DWORD PTR [ebx+edx*8],esp
  435a3c:	mov    al,ds:0x1b785b4
  435a41:	sbb    BYTE PTR [esi-0x645bcf5],dh
  435a47:	add    BYTE PTR [eax],al
  435a49:	add    BYTE PTR [esi+0x29],ch
  435a4c:	cmc    
  435a4d:	pop    es
  435a4e:	repnz popf 
  435a50:	std    
  435a51:	mov    ah,BYTE PTR [edi-0x1b00fa50]
  435a57:	mov    al,ds:0xcd210486
  435a5c:	add    DWORD PTR [esi],esi
  435a5e:	pop    esi
  435a5f:	lods   al,BYTE PTR ds:[esi]
  435a60:	xchg   BYTE PTR [ecx+eax*1-0x5c],al
  435a64:	out    dx,al
  435a65:	inc    ebx
  435a66:	or     DWORD PTR [eax+edi*1+0x4de7001],ebx
  435a6d:	jae    0x435a39
  435a6f:	add    eax,0xa4b17d34
  435a74:	ins    BYTE PTR es:[edi],dx
  435a75:	stc    
  435a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435a77:	mov    al,ds:0x1cf572fd
  435a7c:	mov    esi,0x14c8b3fe
  435a81:	sub    al,0xf2
  435a83:	sbb    al,0xce
  435a85:	add    BYTE PTR [esi-0x64],dh
  435a88:	test   DWORD PTR [edi+edi*8-0x53db1bfd],0x6cfeffb3
  435a93:	mov    al,ds:0x7784c3a
  435a98:	cmp    ebp,eax
  435a9a:	and    al,0x7e
  435a9c:	cmp    ebp,eax
  435a9e:	clc    
  435a9f:	in     eax,dx
  435aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435aa1:	cmp    eax,0xe8137dfe
  435aa6:	in     al,dx
  435aa7:	jge    0x435aa6
  435aa9:	inc    ebx
  435aaa:	jbe    0x435af7
  435aac:	ret    
  435aad:	sldt   WORD PTR [eax]
  435ab0:	add    BYTE PTR [esi+0x13],ch
  435ab3:	retf   
  435ab4:	stos   BYTE PTR es:[edi],al
  435ab5:	mov    ecx,0x6ebd6aa9
  435aba:	dec    ebx
  435abb:	or     ebx,DWORD PTR [esp+esi*2]
  435abe:	inc    ebx
  435abf:	add    esp,DWORD PTR [eax]
  435ac1:	ins    BYTE PTR es:[edi],dx
  435ac2:	cmp    eax,0x2c4ff8d7
  435ac7:	cld    
  435ac8:	mov    BYTE PTR [edi-0x1e],bh
  435acb:	jmp    0xece7:0xb3800300
  435ad2:	stc    
  435ad3:	jns    0x435b35
  435ad5:	sub    ebp,DWORD PTR [edx-0x7fccc5a2]
  435adb:	ret    
  435adc:	out    0xe8,eax
  435ade:	jge    0x435ad3
  435ae0:	out    0xcd,eax
  435ae2:	out    0x11,eax
  435ae4:	mov    ebp,0xe7b37dca
  435ae9:	cld    
  435aea:	shr    DWORD PTR [ebx-0x17fb2719],0x3
  435af1:	repz jg 0x435a91
  435af4:	xor    esi,DWORD PTR [esi+0x52]
  435af7:	ret    
  435af8:	sti    
  435af9:	outs   dx,DWORD PTR ds:[esi]
  435afa:	dec    edx
  435afb:	or     esp,DWORD PTR [eax]
  435afd:	jbe    0x435b43
  435aff:	push   ebx
  435b00:	stc    
  435b01:	mov    esp,0x4e88e529
  435b06:	test   DWORD PTR [ebx+0x22491fe7],esp
  435b0c:	pop    edi
  435b0d:	ds sti 
  435b0f:	in     al,dx
  435b10:	and    al,BYTE PTR [esi]
  435b12:	sbb    al,0x0
  435b14:	inc    DWORD PTR [eax]
  435b16:	add    BYTE PTR [eax],al
  435b18:	push   0x18361ff7
  435b1d:	xor    ebp,DWORD PTR [eax-0x37]
  435b20:	or     eax,0x630c6d4a
  435b25:	or     DWORD PTR [ecx+0x19],ebp
  435b28:	or     esp,DWORD PTR [edx]
  435b2a:	imul   eax,DWORD PTR [eax],0x2
  435b2d:	es fs leave 
  435b30:	adc    DWORD PTR [ebp*2+0x6c490404],ebx
  435b37:	lock adc BYTE PTR [edx+0x69],cl
  435b3b:	add    eax,0xdb61e6cc
  435b40:	iret   
  435b41:	sbb    eax,0x21e2ab20
  435b46:	pop    edi
  435b47:	(bad)  
  435b48:	adc    BYTE PTR [ebx],bh
  435b4a:	pop    edi
  435b4b:	sar    BYTE PTR [ebp+eiz*1+0x3617156e],0x6e
  435b53:	sar    BYTE PTR [edx+esi*1-0x262f389d],1
  435b5a:	ss lock call 0xac6d615e
  435b61:	mov    ebx,0xbba42dcc
  435b66:	int3   
  435b67:	fs jb  0x435afd
  435b6a:	add    cl,ch
  435b6c:	lock outs dx,DWORD PTR ds:[esi]
  435b6e:	sbb    ch,al
  435b70:	lock push es
  435b72:	push   edx
  435b73:	ins    BYTE PTR es:[edi],dx
  435b74:	or     al,0xe3
  435b76:	(bad)  
  435b77:	mov    ecx,0xb9872566
  435b7c:	add    BYTE PTR [eax],al
  435b7e:	add    BYTE PTR [ebx-0x39],dh
  435b81:	add    al,0x30
  435b83:	loop   0x435b38
  435b85:	mov    ebp,DWORD PTR [ebx+0x67]
  435b88:	add    BYTE PTR [eax],al
  435b8a:	jmp    0xe943689e
  435b8f:	lock fyl2x 
  435b92:	add    BYTE PTR [edx+edi*2],ch
  435b95:	xor    BYTE PTR [ebx+0x7541074a],al
  435b9b:	scas   eax,DWORD PTR es:[edi]
  435b9c:	jle    0x435c18
  435b9e:	jl     0x435bf0
  435ba0:	add    al,0x0
  435ba2:	mov    ecx,0x459
  435ba7:	(bad)  
  435ba8:	out    0x23,al
  435baa:	add    BYTE PTR [ecx],ch
  435bac:	jbe    0x435c0c
  435bae:	mov    DWORD PTR [edx],ebp
  435bb0:	add    eax,0xecf60304
  435bb6:	mov    eax,0x44b
  435bbb:	cld    
  435bbc:	jns    0x435c38
  435bbe:	xchg   esp,eax
  435bbf:	push   cs
  435bc0:	add    al,0x0
  435bc2:	xor    ecx,edx
  435bc4:	jns    0x435c40
  435bc6:	lods   al,BYTE PTR ds:[esi]
  435bc7:	sbb    al,0x4
  435bc9:	add    BYTE PTR [ecx+0xe1a98],cl
  435bcf:	sbb    bh,BYTE PTR [ebx+0x7a]
  435bd2:	mov    al,0x1c
  435bd4:	add    al,0x0
  435bd6:	mov    DWORD PTR [eax-0x25fff1de],ecx
  435bdc:	dec    ebp
  435bdd:	mov    ebx,0xccbf06cc
  435be2:	int3   
  435be3:	add    BYTE PTR [eax],al
  435be5:	add    BYTE PTR [esi],ah
  435be7:	mov    edi,0xbf06cccc
  435bec:	int3   
  435bed:	int3   
  435bee:	(bad)  
  435bef:	js     0x435bdd
  435bf1:	push   ecx
  435bf2:	push   ecx
  435bf3:	xchg   ebx,eax
  435bf4:	push   eax
  435bf5:	adc    al,0xca
  435bf7:	add    ecx,DWORD PTR [ebx+0x56]
  435bfa:	inc    ecx
  435bfb:	test   BYTE PTR [edi],0x8b
  435bfe:	inc    esi
  435bff:	xor    ebx,DWORD PTR [ebx+ecx*1-0x66]
  435c03:	add    eax,DWORD PTR [ebp+0x5579fc0c]
  435c09:	cld    
  435c0a:	sar    DWORD PTR [eax+0x7ef38f07],1
  435c10:	std    
  435c11:	push   ebx
  435c13:	cmp    ch,bh
  435c15:	test   BYTE PTR [edi+0x35],al
  435c18:	sbb    eax,0x8a9df305
  435c1d:	pushf  
  435c1e:	jnp    0x435c31
  435c20:	or     DWORD PTR [eax],eax
  435c22:	repz enter 0x146e,0xa4
  435c27:	mov    al,0x6e
  435c29:	sbb    al,0x74
  435c2b:	(bad)  
  435c2c:	clc    
  435c2d:	int3   
  435c2e:	shl    DWORD PTR [esi+0x31791830],0xff
  435c35:	push   edi
  435c36:	out    0x9d,eax
  435c38:	std    
  435c39:	test   BYTE PTR [edi+0x35],bh
  435c3c:	push   ecx
  435c3d:	add    eax,0x93fb9df3
  435c42:	in     eax,dx
  435c43:	adc    eax,0xc8f30010
  435c48:	add    al,0x3f
  435c4a:	add    BYTE PTR [eax],al
  435c4c:	add    BYTE PTR [eax-0x6f],ch
  435c4f:	test   DWORD PTR [eax+edi*8-0x63],ebx
  435c53:	std    
  435c54:	test   BYTE PTR [esi-0x184ef9c7],bl
  435c5a:	dec    eax
  435c5b:	push   es
  435c5c:	mov    cl,0xd7
  435c5e:	xor    BYTE PTR [edi],bl
  435c60:	xor    eax,0x733d62c0
  435c65:	add    BYTE PTR [ecx],ch
  435c67:	push   eax
  435c68:	cld    
  435c69:	imul   ecx,DWORD PTR [ebx+eax*1-0x25000a8],0x55b66f35
  435c74:	adc    al,0xf3
  435c76:	scas   eax,DWORD PTR es:[edi]
  435c77:	das    
  435c78:	sub    ch,BYTE PTR [eax-0x7d]
  435c7b:	add    eax,0x51407f87
  435c80:	add    eax,0x908aaff3
  435c85:	inc    ebx
  435c86:	mov    esp,0x768fffd
  435c8b:	fadd   DWORD PTR ds:0xc5490ac
  435c91:	(bad)  
  435c92:	rcl    BYTE PTR [ecx-0x7a],1
  435c95:	outs   dx,BYTE PTR ds:[esi]
  435c96:	push   esp
  435c97:	retf   
  435c98:	mov    ebp,DWORD PTR [edi+0x57]
  435c9b:	and    ecx,DWORD PTR ds:0x5d1906f3
  435ca1:	jbe    0x435c4f
  435ca3:	adc    al,0xc5
  435ca5:	outs   dx,BYTE PTR ds:[esi]
  435ca6:	cmp    al,0xab
  435ca8:	lea    ebp,[eax+0x7f8b410e]
  435cae:	(bad)  
  435caf:	cmp    ecx,DWORD PTR ds:0xf3000000
  435cb5:	push   es
  435cb6:	lea    edx,cs:[eax+0x44]
  435cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435cbb:	mov    ebx,DWORD PTR [edi+0x57]
  435cbe:	and    ecx,DWORD PTR ds:0x5d1906f3
  435cc4:	jbe    0x435c72
  435cc6:	adc    al,0xc5
  435cc8:	aaa    
  435cc9:	rcr    DWORD PTR [ebx+0x33d32fc8],cl
  435ccf:	enter  0xd327,0x2b
  435cd3:	enter  0xd33f,0xbc
  435cd7:	mov    WORD PTR [edi],ss
  435cd9:	mov    bh,BYTE PTR [ebx]
  435cdb:	in     al,dx
  435cdc:	ja     0x435d16
  435cde:	jmp    0x435d34
  435ce0:	outs   dx,BYTE PTR ds:[esi]
  435ce1:	add    BYTE PTR [esi+0x4b],ch
  435ce4:	sti    
  435ce5:	(bad)  
  435ce6:	pushf  
  435ce7:	stos   DWORD PTR es:[edi],eax
  435ce8:	outs   dx,BYTE PTR ds:[esi]
  435ce9:	neg    DWORD PTR [edi+0x4f]
  435cec:	mov    edi,0x42ffb891
  435cf1:	nop
  435cf2:	mov    ah,0xa3
  435cf4:	jbe    0x435d2d
  435cf6:	fist   WORD PTR [eax+0x6e]
  435cf9:	pop    ds
  435cfa:	div    esp
  435cfc:	mov    ch,0x8f
  435cfe:	pushf  
  435cff:	lahf   
  435d00:	jmp    0xc7:0xb58d185d
  435d07:	or     edi,edi
  435d09:	or     eax,esi
  435d0b:	pusha  
  435d0c:	outs   dx,DWORD PTR ds:[esi]
  435d0d:	loop   0x435d13
  435d0f:	jmp    0x29cbeb04
  435d14:	inc    BYTE PTR [esi]
  435d16:	add    BYTE PTR [eax+0x0],ah
  435d19:	add    BYTE PTR [eax],al
  435d1b:	js     0x435d67
  435d1d:	add    eax,0x888df0e9
  435d22:	xor    esi,esp
  435d24:	push   es
  435d25:	add    BYTE PTR [eax+0x78],dh
  435d28:	push   edx
  435d29:	add    eax,0x888df0e9
  435d2e:	sbb    esi,ebp
  435d30:	push   es
  435d31:	add    BYTE PTR [eax+0x68],dh
  435d34:	cmp    al,BYTE PTR ds:0x888df0e9
  435d3a:	xor    esi,esi
  435d3c:	push   es
  435d3d:	add    BYTE PTR [edx+0x68],ah
  435d40:	cmp    dl,BYTE PTR [ecx+ebp*8]
  435d43:	lock mov edx,DWORD PTR [ecx+esi*2-0x16fff43c]
  435d4b:	pop    ds
  435d4c:	int3   
  435d4d:	bound  esp,QWORD PTR [eax-0x4c]
  435d50:	xchg   ebx,eax
  435d51:	(bad)  
  435d52:	jno    0x435dbc
  435d54:	cmp    dl,BYTE PTR [ecx+ebp*8]
  435d57:	lock repz icebp 
  435d5a:	test   al,0x79
  435d5c:	inc    ecx
  435d5d:	fsub   DWORD PTR [eax-0x3b]
  435d60:	mov    ds:0x2538bc87,al
  435d65:	idiv   esp
  435d67:	test   BYTE PTR [esi],0x0
  435d6a:	out    0x6d,al
  435d6c:	cmp    eax,0x8ff0e8ff
  435d71:	xchg   esp,eax
  435d72:	jno    0x435db0
  435d74:	or     al,BYTE PTR [eax]
  435d76:	jmp    0x543795f4
  435d7b:	mov    ebp,0xe9f9a2
  435d80:	add    BYTE PTR [eax],al
  435d82:	iret   
  435d83:	aad    0xfd
  435d85:	inc    DWORD PTR [eax]
  435d87:	xchg   ecx,eax
  435d88:	dec    ebp
  435d89:	in     al,dx
  435d8a:	and    ecx,DWORD PTR [ebp-0x10]
  435d8d:	nop
  435d8e:	adc    DWORD PTR [ebp-0xc],ecx
  435d91:	mov    edi,DWORD PTR [ebx+0x194caf0f]
  435d97:	or     DWORD PTR [edi],eax
  435d99:	mov    bh,0xde
  435d9b:	(bad)  
  435d9c:	cli    
  435d9d:	inc    eax
  435d9e:	loope  0x435d6b
  435da0:	jbe    0x435da8
  435da2:	aam    0x8f
  435da4:	(bad)  
  435da5:	mov    DWORD PTR [edi+0x1e895e62],esi
  435dab:	js     0x435da7
  435dad:	cmp    al,BYTE PTR [edi]
  435daf:	jae    0x435e28
  435db1:	inc    edi
  435db2:	rcr    ebp,1
  435db4:	jecxz  0x435e1c
  435db6:	lea    eax,[edi+0x8413c48]
  435dbc:	add    BYTE PTR [ebx],dh
  435dbe:	mov    al,fs:0x91507cd0
  435dc4:	jmp    0xa1e0:0x758fb52b
  435dcb:	xchg   esi,eax
  435dcc:	mov    al,0xf
  435dce:	in     eax,0x9e
  435dd0:	mov    WORD PTR [ebx],es
  435dd2:	jl     0x435de0
  435dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435dd5:	iret   
  435dd6:	or     edx,DWORD PTR [eax+0x81a16a8]
  435ddc:	or     DWORD PTR [ebp-0x42],0xffffff85
  435de0:	shl    DWORD PTR [edx+edi*8+0xc],0xaf
  435de5:	push   esp
  435de6:	add    BYTE PTR [eax],al
  435de8:	add    BYTE PTR [ebx-0x222a04f8],bl
  435dee:	sub    al,0xcf
  435df0:	add    DWORD PTR [edx+0x2f],ecx
  435df3:	push   cs
  435df4:	add    dl,cl
  435df6:	nop
  435df7:	jne    0x435df5
  435df9:	popa   
  435dfa:	(bad)  
  435dfb:	test   DWORD PTR [ebx-0xfb8c69],0x73a16af3
  435e05:	outs   dx,DWORD PTR ds:[esi]
  435e06:	sub    ch,BYTE PTR [edx+0x3f16f09]
  435e0c:	add    bl,dh
  435e0e:	xor    bh,BYTE PTR [eax+0x78]
  435e11:	out    0xa8,eax
  435e13:	std    
  435e14:	jmp    FWORD PTR [eax-0x7e]
  435e17:	mov    cl,0x47
  435e19:	or     eax,0xcf487131
  435e1e:	cwde   
  435e1f:	std    
  435e20:	push   ebx
  435e22:	sub    cl,BYTE PTR [ecx-0x25740b8]
  435e28:	(bad)  
  435e29:	(bad)  
  435e2a:	mov    esi,0xae17a488
  435e2f:	std    
  435e30:	push   ebx
  435e32:	xor    BYTE PTR [edi+0x7d4babfe],ah
  435e38:	repz add DWORD PTR ss:[edx+0x45297062],ebp
  435e40:	cmp    bh,al
  435e42:	lods   eax,DWORD PTR ds:[esi]
  435e43:	std    
  435e44:	std    
  435e45:	jp     0x435ddb
  435e47:	mov    dl,0x0
  435e49:	repz adc eax,DWORD PTR [ebx]
  435e4c:	xchg   esp,eax
  435e4d:	add    BYTE PTR [eax],al
  435e4f:	add    BYTE PTR [ebx-0xcfff99f],bh
  435e55:	sub    bh,al
  435e57:	(bad)
  435e5c:	icebp  
  435e5d:	xor    ch,BYTE PTR [ebx+0x50184479]
  435e63:	cld    
  435e64:	outs   dx,BYTE PTR ds:[esi]
  435e65:	fild   QWORD PTR [eax]
  435e67:	imul   ebp,DWORD PTR [edx-0x2e],0xffffffa1
  435e6b:	or     DWORD PTR [esp+ecx*1],edi
  435e6e:	mov    edi,DWORD PTR [ebx-0x19]
  435e71:	sub    esi,DWORD PTR [edx+0x48253f74]
  435e77:	lock outs dx,BYTE PTR ds:[esi]
  435e79:	sbb    al,0x85
  435e7b:	pop    esp
  435e7c:	call   0x78474587
  435e81:	jle    0x435e6a
  435e83:	add    esi,ebx
  435e85:	push   es
  435e86:	pop    esi
  435e87:	inc    ebp
  435e88:	mov    edi,0x36b39ca2
  435e8d:	mov    cl,0xeb
  435e8f:	mov    WORD PTR [eax],fs
  435e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435e92:	mov    esi,0xc2229b48
  435e97:	push   es
  435e98:	bound  esp,QWORD PTR [ebx]
  435e9a:	pop    esi
  435e9b:	add    DWORD PTR [eax+0x1b],ebp
  435e9e:	outs   dx,BYTE PTR ds:[esi]
  435e9f:	add    al,dh
  435ea1:	pushf  
  435ea2:	push   ebx
  435ea3:	sbb    ebp,DWORD PTR [esi-0x43]
  435ea6:	(bad)  
  435ea7:	aam    0x76
  435ea9:	sahf   
  435eaa:	pop    esi
  435eab:	push   edi
  435eac:	fwait
  435ead:	adc    bh,BYTE PTR [edx+0x8]
  435eb0:	jbe    0x435ec4
  435eb2:	mov    bh,BYTE PTR [ebx+0x64000000]
  435eb8:	pop    edx
  435eb9:	jg     0x435ec9
  435ebb:	repz push es
  435ebd:	inc    ecx
  435ebe:	mov    eax,DWORD PTR [ecx]
  435ec0:	mov    ds:0x2476b034,al
  435ec5:	xchg   ebx,eax
  435ec6:	mov    eax,eax
  435ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435ec9:	ins    BYTE PTR es:[edi],dx
  435eca:	mov    ch,0xc0
  435ecc:	bound  ebx,QWORD PTR [esi+0x37]
  435ecf:	inc    edi
  435ed0:	xchg   BYTE PTR [edx-0x3704afe],dl
  435ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435ed7:	mov    al,ds:0xc6561278
  435edc:	lea    eax,[edi+edx*2-0x37cc2caa]
  435ee3:	aas    
  435ee4:	shr    DWORD PTR [ebx],cl
  435ee6:	enter  0xd337,0xbc
  435eea:	mov    BYTE PTR [edi],cl
  435eec:	xchg   BYTE PTR [ebx],bh
  435eee:	adc    al,0xa6
  435ef0:	cmp    BYTE PTR [edx+0x1f8de488],bl
  435ef6:	add    eax,0xeb0049a2
  435efb:	jecxz  0x435ed0
  435efd:	shl    DWORD PTR [eax+ebx*4-0x79d90661],0x89
  435f05:	inc    ebx
  435f06:	sbb    DWORD PTR [eax+ecx*2+0x1],ebp
  435f0a:	add    DWORD PTR fs:[ebx],ecx
  435f0d:	sub    DWORD PTR [ecx],0x4
  435f10:	movzx  esi,WORD PTR [ebx-0x9]
  435f14:	push   es
  435f15:	add    BYTE PTR [edi+ebx*8-0x5d],ch
  435f19:	mov    cl,0xf6
  435f1b:	add    BYTE PTR [eax],al
  435f1d:	add    BYTE PTR [edi+0x6],ah
  435f20:	add    BYTE PTR [edi-0x1066b597],al
  435f26:	or     eax,0x607109bc
  435f2b:	push   es
  435f2c:	add    cl,ch
  435f2e:	jae    0x435ef7
  435f30:	add    ch,BYTE PTR [edx]
  435f32:	push   0x2572fc1d
  435f37:	ja     0x5bcf0259
  435f3d:	mov    ecx,0xc85636b
  435f42:	fwait
  435f43:	cmpxchg DWORD PTR [edx],eax
  435f46:	mov    cl,0xdb
  435f48:	into   
  435f49:	sbb    al,0xf3
  435f4b:	fstp   TBYTE PTR [ebp+ebx*1+0xcd1dbdd]
  435f52:	jmp    0xafa05e7b
  435f57:	and    al,BYTE PTR [esi]
  435f59:	jmp    0x6c6d0b4e
  435f5e:	xor    BYTE PTR [edx],bl
  435f60:	adc    dh,BYTE PTR [edx-0xe8b612b]
  435f66:	out    dx,al
  435f67:	lahf   
  435f68:	test   BYTE PTR [esi-0x44],ah
  435f6b:	or     BYTE PTR [eax],al
  435f6d:	jmp    0x8dc4ff50
  435f72:	jmp    0x7b11:0x41000006
  435f79:	cli    
  435f7a:	loopne 0x435f57
  435f7c:	add    BYTE PTR [esi+0x25],ah
  435f7f:	and    eax,eax
  435f81:	or     al,BYTE PTR [eax]
  435f83:	add    BYTE PTR [eax],al
  435f85:	retf   0xe304
  435f88:	pop    es
  435f89:	jl     0x435fe6
  435f8b:	jg     0x435f51
  435f8d:	rol    BYTE PTR [eax+eax*1],0x33
  435f91:	clc    
  435f92:	mov    WORD PTR ds:0x6dbf4ff8,?
  435f98:	or     dh,BYTE PTR [ebx]
  435f9a:	mov    es,WORD PTR [eax]
  435f9c:	add    BYTE PTR [edx-0xefc9577],bl
  435fa2:	adc    DWORD PTR [ebx],esi
  435fa4:	ret    
  435fa5:	pop    ds
  435fa6:	push   cs
  435fa7:	mov    cl,0x6
  435fa9:	call   0xe356:0x2b8d0004
  435fb0:	or     BYTE PTR [ebx+0xc],ah
  435fb3:	add    BYTE PTR [eax],al
  435fb5:	mov    al,BYTE PTR [edi+0x4dd9fd69]
  435fbb:	cld    
  435fbc:	add    al,0xa5
  435fbe:	inc    esi
  435fbf:	hlt    
  435fc0:	jne    0x435f8c
  435fc2:	xor    edx,DWORD PTR [esi+0x5b]
  435fc5:	shr    DWORD PTR [ebp+0x55],1
  435fc8:	ret    
  435fc9:	xchg   bh,al
  435fcb:	int3   
  435fcc:	int3   
  435fcd:	xchg   esi,eax
  435fce:	(bad)  
  435fcf:	int3   
  435fd0:	int3   
  435fd1:	call   FWORD PTR [edi]
  435fd3:	in     al,dx
  435fd4:	xor    DWORD PTR [esi-0x5ea9b50a],0x58
  435fdb:	pop    es
  435fdc:	mov    bh,0x4
  435fde:	or     DWORD PTR [ebx],ebp
  435fe0:	sar    ch,cl
  435fe2:	pop    ds
  435fe3:	icebp  
  435fe4:	(bad)  
  435fe5:	iret   
  435fe6:	idiv   di
  435fe9:	add    BYTE PTR [eax],al
  435feb:	add    BYTE PTR [ebp-0x61a27ead],dl
  435ff1:	test   DWORD PTR [edx+0x7],eax
  435ff4:	repz lock inc esi
  435ff7:	clc    
  435ff8:	out    dx,eax
  435ff9:	lods   eax,DWORD PTR ds:[esi]
  435ffa:	std    
  435ffb:	push   DWORD PTR [esi-0x1c]
  435ffe:	ss or  al,0xaa
  436001:	adc    eax,DWORD PTR [eax+eax*1]
  436004:	repz lock inc esi
  436007:	clc    
  436008:	lock lods eax,DWORD PTR ds:[esi]
  43600a:	std    
  43600b:	push   DWORD PTR [esi-0x18]
  43600e:	cld    
  43600f:	xchg   esi,edi
  436011:	stos   BYTE PTR es:[edi],al
  436012:	std    
  436013:	push   DWORD PTR [eax-0x11]
  436016:	add    eax,0xad7a6a41
  43601b:	xchg   DWORD PTR [esi],ebp
  43601d:	imul   BYTE PTR [eax-0x1]
  436020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436021:	lods   eax,DWORD PTR ds:[esi]
  436022:	std    
  436023:	test   BYTE PTR [esp-0x271b0fd1],bl
  43602a:	in     al,dx
  43602b:	test   BYTE PTR [esi],al
  43602d:	ret    0xcd02
  436030:	jp     0x43606c
  436032:	test   al,0x87
  436034:	inc    cl
  436036:	jl     0x43608b
  436038:	ja     0x43602e
  43603a:	sar    BYTE PTR [ebx-0x5],cl
  43603d:	add    al,0xb5
  43603f:	or     DWORD PTR [edi+0x58],ebp
  436042:	add    DWORD PTR [eax],eax
  436044:	repz xchg esp,eax
  436046:	pop    eax
  436047:	clc    
  436048:	in     al,0x42
  43604a:	push   0x80adf300
  43604f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436050:	add    BYTE PTR [eax],al
  436052:	add    BYTE PTR [edi],cl
  436054:	scas   al,BYTE PTR es:[edi]
  436055:	std    
  436056:	push   ebx
  436058:	test   al,0x76
  43605a:	mov    esp,0xfffa0f83
  43605f:	sub    al,0x14
  436061:	jne    0x43601f
  436063:	std    
  436064:	lods   eax,DWORD PTR ds:[esi]
  436065:	std    
  436066:	mov    ch,0x3
  436068:	scas   al,BYTE PTR es:[edi]
  436069:	std    
  43606a:	dec    eax
  43606c:	js     0x436058
  43606e:	lds    ecx,FWORD PTR [ebp+0x4202c406]
  436074:	pop    edx
  436075:	xchg   edi,eax
  436076:	das    
  436077:	cmc    
  436078:	push   es
  436079:	out    0x29,eax
  43607b:	outs   dx,BYTE PTR ds:[esi]
  43607c:	mov    eax,0x92cdd6c1
  436081:	scas   eax,DWORD PTR es:[edi]
  436082:	sti    
  436083:	push   edx
  436084:	adc    BYTE PTR [edi+0x6b],dl
  436087:	add    DWORD PTR [edi],eax
  436089:	out    0x2,eax
  43608b:	mov    eax,ds:0xf3196f7f
  436090:	push   es
  436091:	outs   dx,BYTE PTR ds:[esi]
  436092:	push   ebx
  436093:	fisttp WORD PTR [esi+0x47ba14fb]
  436099:	sti    
  43609a:	add    al,BYTE PTR [ecx-0xce6af81]
  4360a0:	push   es
  4360a1:	outs   dx,BYTE PTR ds:[esi]
  4360a2:	cmp    edi,edi
  4360a4:	xchg   ecx,eax
  4360a5:	xchg   edi,eax
  4360a6:	sti    
  4360a7:	je     0x4360a4
  4360a9:	xlat   BYTE PTR ds:[ebx]
  4360aa:	jle    0x43602f
  4360ac:	pop    ebx
  4360ad:	rol    DWORD PTR [ebx],1
  4360af:	repz push edi
  4360b1:	imul   DWORD PTR [esp+eax*4-0x62]
  4360b5:	out    0x3,eax
  4360b7:	add    BYTE PTR [eax],al
  4360b9:	add    BYTE PTR [esi+esi*1-0x5],bh
  4360bd:	(bad)  [esi+0x78a2b625]
  4360c3:	dec    ebx
  4360c4:	std    
  4360c5:	mov    bl,0xd1
  4360c7:	(bad)  
  4360c8:	ja     0x436136
  4360ca:	add    DWORD PTR [edi],eax
  4360cc:	out    0x7c,eax
  4360ce:	loopne 0x436072
  4360d0:	mov    esi,0x7b91d118
  4360d5:	je     0x43609e
  4360d7:	adc    bh,ah
  4360d9:	add    edx,ecx
  4360db:	mov    ecx,0x76ec2a85
  4360e0:	dec    edi
  4360e1:	sbb    dh,bl
  4360e3:	push   es
  4360e4:	out    0xc0,al
  4360e6:	int3   
  4360e7:	cmp    edi,DWORD PTR [ebx+0x7b]
  4360ea:	imul   ebx,DWORD PTR [ebx+0x0],0xffffffdf
  4360ee:	lock push es
  4360f0:	or     DWORD PTR [edx+ebx*8-0x61],esp
  4360f4:	stc    
  4360f5:	pushw  0x40e
  4360f9:	jmp    0xe735eaee
  4360fe:	ins    BYTE PTR es:[edi],dx
  4360ff:	(bad)  
  436100:	(bad)  
  436101:	call   0x55b634f6
  436106:	repnz and BYTE PTR [esi+0x906f0e9],0x7e
  43610e:	jae    0x436166
  436110:	jp     0x4360f5
  436112:	lock push es
  436114:	mov    ecx,0x6f0f9
  436119:	ror    BYTE PTR [ecx+0x114b85],cl
  43611f:	add    BYTE PTR [eax],al
  436121:	ss (bad) 
  436123:	mov    esp,0x3506f0f7
  436128:	ss loope 0x436159
  43612b:	or     DWORD PTR [esi],esi
  43612d:	jnp    0x436185
  43612f:	jl     0x436114
  436131:	lock push es
  436133:	xchg   DWORD PTR [esp+ebp*2+0x7cbcd28],edx
  43613a:	dec    edi
  43613b:	or     BYTE PTR [eax+0x35],dh
  43613e:	mov    ds:0x5e60e062,eax
  436143:	adc    ch,cl
  436145:	lock adc DWORD PTR [eax-0x23],0xffffffe6
  43614a:	xchg   BYTE PTR [eax-0x77f90f29],bh
  436150:	in     eax,dx
  436151:	add    DWORD PTR [ebx+eax*2+0x143ef1c5],eax
  436158:	jb     0x436172
  43615a:	repz test BYTE PTR [ecx],dh
  43615d:	aas    
  43615e:	adc    DWORD PTR [eax+0x6da50],0x61
  436165:	add    al,0x10
  436167:	test   DWORD PTR [eax],eax
  436169:	retf   0xe2d
  43616c:	add    BYTE PTR [edx],cl
  43616e:	sbb    dh,BYTE PTR [ebp-0x14]
  436171:	or     edx,DWORD PTR [ecx+0x14]
  436174:	mov    cl,0x2a
  436176:	mov    ebx,0x66c966c3
  43617b:	or     DWORD PTR [ebp-0x6e],0x1c
  43617f:	push   esp
  436180:	or     bl,BYTE PTR [edx+0xbc9020]
  436186:	add    BYTE PTR [eax],al
  436188:	in     al,0x8
  43618a:	add    BYTE PTR [ebx-0x76a19379],cl
  436190:	jb     0x4361c2
  436192:	push   cs
  436193:	add    dl,cl
  436195:	jnp    0x4361b0
  436197:	push   cx
  436199:	sub    al,0xb0
  43619b:	jl     0x43615d
  43619d:	or     BYTE PTR [eax],al
  43619f:	data16 stc 
  4361a1:	outs   dx,BYTE PTR ds:[esi]
  4361a2:	or     DWORD PTR [eax-0x1e2],0x74
  4361a9:	mov    eax,ds:0x8c4b8b1
  4361ae:	add    BYTE PTR [ebx],al
  4361b0:	dec    edi
  4361b1:	jo     0x436134
  4361b3:	mov    dh,bl
  4361b5:	std    
  4361b6:	(bad)  
  4361b7:	push   DWORD PTR [ecx-0x71aa7e4d]
  4361bd:	pushf  
  4361be:	mov    al,0x88
  4361c0:	pop    esp
  4361c1:	mov    eax,ds:0xf35dfff9
  4361c6:	(bad)  
  4361c7:	call   FWORD PTR [edx-0x3f]
  4361ca:	repnz mov DWORD PTR [edi],ebx
  4361cd:	imul   eax,DWORD PTR [ebx-0xb2178],0xffffffff
  4361d4:	popa   
  4361d5:	pop    ebp
  4361d6:	jbe    0x43623f
  4361d8:	sub    eax,0x40bc9015
  4361dd:	or     BYTE PTR [eax],al
  4361df:	mov    DWORD PTR [edi],eax
  4361e1:	addr16 pop esi
  4361e3:	shl    ebx,cl
  4361e5:	(bad)  
  4361e6:	jne    0x436230
  4361e8:	sti    
  4361e9:	es inc edi
  4361eb:	in     al,0x0
  4361ed:	add    BYTE PTR [eax],al
  4361ef:	lea    edx,[esi-0x51fa4773]
  4361f5:	std    
  4361f6:	test   bl,al
  4361f8:	mov    ecx,0xb44b8077
  4361fd:	std    
  4361fe:	(bad)  
  4361ff:	jnp    0x4361ab
  436201:	adc    al,0x85
  436203:	mov    dh,0x41
  436205:	add    ebx,DWORD PTR [eax-0x21]
  436208:	sub    BYTE PTR [esp+edx*1],ch
  43620b:	js     0x436272
  43620d:	cmc    
  43620e:	test   DWORD PTR [ebx-0xcffed7a],eax
  436214:	adc    eax,0x3d680918
  436219:	jo     0x43622d
  43621b:	rep lods eax,DWORD PTR ds:[esi]
  43621d:	jbe    0x43629a
  43621f:	xlat   BYTE PTR ds:[ebx]
  436220:	scas   al,BYTE PTR es:[edi]
  436221:	inc    ebp
  436222:	adc    al,0x82
  436224:	popf   
  436225:	xlat   BYTE PTR ds:[ebx]
  436226:	lds    ecx,FWORD PTR [ebp-0x1f]
  436229:	cwde   
  43622a:	test   DWORD PTR [esi],edi
  43622c:	idiv   BYTE PTR [esi+0x54]
  43622f:	stc    
  436230:	popf   
  436231:	jl     0x4361c3
  436233:	pop    edi
  436234:	mov    bl,0xfd
  436236:	jmp    FWORD PTR [eax+0x7a]
  436239:	test   eax,0x6bd57a62
  43623e:	adc    dh,bl
  436240:	lods   eax,DWORD PTR ds:[esi]
  436241:	xchg   esi,eax
  436242:	push   ss
  436243:	adc    eax,0xe9bc6519
  436248:	lods   eax,DWORD PTR ds:[esi]
  436249:	std    
  43624a:	popa   
  43624b:	inc    eax
  43624c:	les    esp,FWORD PTR [ebx]
  43624e:	pop    es
  43624f:	stos   DWORD PTR es:[edi],eax
  436250:	test   DWORD PTR [ebx],edx
  436252:	add    BYTE PTR [eax],al
  436254:	add    BYTE PTR [eax],al
  436256:	repz mov al,0x40
  436259:	clc    
  43625a:	push   0x25
  43625c:	imul   edx,DWORD PTR [edx],0x8876adf3
  436262:	xchg   DWORD PTR [esi],eax
  436264:	stc    
  436265:	add    esi,ebx
  436267:	xchg   DWORD PTR [ebp-0x1e624950],esp
  43626d:	sub    eax,0xa0348dcf
  436272:	xchg   ecx,eax
  436273:	mov    bh,0x85
  436275:	jp     0x436222
  436277:	push   cs
  436278:	jo     0x4362c2
  43627a:	mov    eax,tr4
  43627d:	xchg   ebx,eax
  43627e:	dec    ebx
  43627f:	hlt    
  436280:	out    0x3,al
  436282:	outs   dx,BYTE PTR ds:[esi]
  436283:	ss sti 
  436285:	jns    0x4362fa
  436287:	pop    esi
  436288:	icebp  
  436289:	add    esi,ebx
  43628b:	mov    gs,ebx
  43628d:	adc    al,0x76
  43628f:	inc    esp
  436290:	inc    ebx
  436291:	add    al,0x4b
  436293:	rep ins DWORD PTR es:[edi],dx
  436295:	sub    eax,DWORD PTR [edi]
  436297:	lea    edx,[edi+0x6c]
  43629a:	add    DWORD PTR [edi],eax
  43629c:	out    0x7a,eax
  43629e:	cmp    ecx,DWORD PTR [edi]
  4362a0:	pop    edi
  4362a1:	pop    ss
  4362a2:	cli    
  4362a3:	lea    esi,[edi+0x6f]
  4362a6:	loope  0x4362ae
  4362a8:	out    0x7a,eax
  4362aa:	cmp    BYTE PTR [ebx+0x58074be8],ch
  4362b0:	neg    ecx
  4362b2:	scas   al,BYTE PTR es:[edi]
  4362b3:	and    DWORD PTR [esi],edx
  4362b5:	sahf   
  4362b6:	push   ds
  4362b7:	(bad)
  4362ba:	add    BYTE PTR [eax],al
  4362bc:	add    BYTE PTR [ebx-0xcfc26a5],al
  4362c2:	and    BYTE PTR [eax+0x6b],ah
  4362c5:	dec    ebx
  4362c6:	icebp  
  4362c7:	out    0x3,al
  4362c9:	xchg   esp,eax
  4362ca:	aaa    
  4362cb:	in     eax,0x3
  4362cd:	repz and BYTE PTR [esi+0x770fd1a2],dh
  4362d4:	ins    BYTE PTR es:[edi],dx
  4362d5:	add    DWORD PTR [edi],eax
  4362d7:	out    0x80,eax
  4362d9:	pushf  
  4362da:	add    eax,0x9a56ecd0
  4362df:	add    cl,ch
  4362e1:	fcomip st,st(6)
  4362e3:	(bad)  
  4362e4:	call   0xf4397ed9
  4362e9:	aas    
  4362ea:	(bad)  
  4362eb:	pop    ss
  4362ec:	call   0x5e4c69e1
  4362f1:	scas   eax,DWORD PTR es:[edi]
  4362f2:	pop    eax
  4362f3:	push   es
  4362f4:	jmp    0x713a46e9
  4362f9:	fcomp  QWORD PTR [esi-0xb5c8e7b]
  4362ff:	(bad)  
  436300:	call   0x6be3220
  436305:	push   es
  436306:	push   edi
  436307:	nop
  436308:	sub    ecx,edi
  43630a:	cdq    
  43630b:	stc    
  43630c:	jo     0x4362aa
  43630e:	stos   BYTE PTR es:[edi],al
  43630f:	bound  edi,QWORD PTR [edx]
  436311:	xchg   ecx,eax
  436312:	or     DWORD PTR [eax-0x1f],0x69
  436316:	inc    esi
  436317:	in     al,0xcf
  436319:	(bad)  [ecx+0x6f0d7b8]
  43631f:	test   DWORD PTR [ecx-0x1c000000],ebx
  436325:	add    BYTE PTR [eax+0x6dd71],0x71
  43632c:	jmp    0x436337
  43632e:	test   DWORD PTR [esp+ecx*4+0x2bfd5199],esp
  436335:	pop    ds
  436336:	adc    al,0x62
  436338:	out    0xe,eax
  43633a:	xchg   BYTE PTR [ecx+0x8],bl
  43633d:	cmc    
  43633e:	(bad)  
  43633f:	call   0x624c565c
  436344:	addr16 pop edx
  436346:	adc    ch,cl
  436348:	lock cmp DWORD PTR [ebx-0x2b],0xfffffff1
  43634d:	ds adc al,0x98
  436350:	loopne 0x436332
  436352:	lds    ecx,FWORD PTR [edi+0x42]
  436355:	scas   eax,DWORD PTR es:[edi]
  436356:	test   DWORD PTR [edi+edx*4],ebx
  436359:	lea    edx,[eax+eax*1+0x60]
  43635d:	push   ebp
  43635e:	adc    DWORD PTR [eax-0xc2a],0x66fc30d1
  436368:	shr    DWORD PTR ds:0x54a16b8,cl
  43636e:	jecxz  0x436390
  436370:	in     al,dx
  436371:	pop    ds
  436372:	mov    eax,0x510c0
  436377:	imul   sp,WORD PTR [edx-0x7d],0xb688
  43637d:	repz (bad) 
  43637f:	(bad)  
  436380:	in     al,dx
  436381:	popf   
  436382:	mov    cl,0xb8
  436384:	sub    al,0x5
  436386:	add    BYTE PTR [ebx],al
  436388:	add    BYTE PTR [eax],al
  43638a:	add    bh,ah
  43638c:	push   0xffffff81
  43638e:	mov    BYTE PTR [esi-0xd],dl
  436391:	(bad)  
  436392:	inc    DWORD PTR [ecx-0x25e943e3]
  436398:	add    al,0x7b
  43639a:	ret    0x8737
  43639d:	icebp  
  43639e:	or     eax,0x558148b4
  4363a3:	es loop 0x436370
  4363a6:	loop   0x4363f9
  4363a8:	fadd   QWORD PTR [edi]
  4363aa:	mov    DWORD PTR [edi+0x3a095e60],ecx
  4363b0:	sub    al,0xe
  4363b2:	add    dl,cl
  4363b4:	pop    ds
  4363b5:	push   eax
  4363b6:	adc    al,0x10
  4363b8:	test   BYTE PTR [eax-0x77fb65ea],bh
  4363be:	add    al,0xbb
  4363c0:	pop    ds
  4363c1:	cmp    eax,0x144c8be4
  4363c6:	mov    eax,DWORD PTR [edx]
  4363c8:	lock adc DWORD PTR [eax-0xe3d],0x8807db01
  4363d3:	jle    0x436372
  4363d5:	test   BYTE PTR [eax+0xe71f3],dl
  4363db:	repz and al,0x27
  4363de:	in     al,dx
  4363df:	repnz in eax,0xf
  4363e2:	scas   eax,DWORD PTR es:[edi]
  4363e3:	add    esi,esp
  4363e5:	mov    ecx,0x81c12062
  4363ea:	mov    esi,0xbc942740
  4363ef:	add    BYTE PTR [eax],al
  4363f1:	add    ch,ah
  4363f3:	lods   eax,DWORD PTR ds:[esi]
  4363f4:	std    
  4363f5:	popa   
  4363f6:	push   0x26
  4363f8:	ins    BYTE PTR es:[edi],dx
  4363f9:	adc    dh,bl
  4363fb:	lods   eax,DWORD PTR ds:[esi]
  4363fc:	pushf  
  4363fd:	daa    
  4363fe:	repnz lods eax,DWORD PTR ds:[esi]
  436400:	std    
  436401:	popa   
  436402:	inc    eax
  436403:	mov    WORD PTR [esi],ds
  436405:	pop    es
  436406:	add    DWORD PTR [esi+0xe],0x0
  43640a:	repz sub al,0xc3
  43640d:	std    
  43640e:	sbb    edi,DWORD PTR [edi-0x6f0cfffc]
  436414:	outs   dx,BYTE PTR ds:[esi]
  436415:	mov    BYTE PTR ds:0x18fffd94,ch
  43641b:	aaa    
  43641c:	jnp    0x436469
  43641e:	jmp    0x436444
  436420:	jl     0x4363de
  436422:	add    eax,0xa434fdae
  436427:	push   edi
  436428:	push   ds
  436429:	or     DWORD PTR [ebp+edi*1-0x520cf940],eax
  436430:	jl     0x436485
  436432:	iret   
  436433:	xchg   edx,edx
  436435:	fisubr WORD PTR [eax+0x55]
  436438:	cmc    
  436439:	xchg   BYTE PTR [esi],dh
  43643b:	or     bl,BYTE PTR [esi]
  43643d:	pop    es
  43643e:	xor    DWORD PTR ds:0x14f3000e,0x54
  436445:	adc    al,0x69
  436447:	sub    eax,0xadf3126c
  43644c:	jne    0x436452
  43644e:	loop   0x436474
  436450:	aas    
  436451:	in     al,0xf2
  436453:	push   es
  436454:	aas    
  436455:	adc    BYTE PTR [eax],al
  436457:	add    BYTE PTR [eax],al
  436459:	outs   dx,BYTE PTR ds:[esi]
  43645a:	push   ds
  43645b:	repz jle 0x436419
  43645e:	push   cs
  43645f:	pop    ebp
  436460:	xchg   ebx,eax
  436461:	pushf  
  436462:	lock out 0x3,al
  436465:	imul   esi,edx,0xfffffff1
  436468:	jle    0x4363ed
  43646a:	pop    edx
  43646b:	rol    DWORD PTR [ebx],1
  43646d:	repz mov esi,DWORD PTR [eax+ebx*4]
  436471:	inc    esp
  436472:	das    
  436473:	shl    DWORD PTR [ebx+eiz*8-0x14],cl
  436477:	lods   al,BYTE PTR ds:[esi]
  436478:	and    DWORD PTR [esi],esp
  43647a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43647b:	outs   dx,BYTE PTR ds:[esi]
  43647c:	cmp    BYTE PTR [ebx],ch
  43647e:	mov    DWORD PTR [ebx],edi
  436480:	(bad)  
  436481:	adc    al,0x8d
  436483:	ja     0x4364ec
  436485:	add    DWORD PTR [edi],eax
  436487:	out    0x7e,eax
  436489:	rcr    BYTE PTR [edx+0x5e4b7d01],0xd9
  436490:	add    esi,ebx
  436492:	stos   DWORD PTR es:[edi],eax
  436493:	(bad)  
  436494:	and    DWORD PTR [esi+0x5e],esi
  436497:	sub    edi,ebp
  436499:	hlt    
  43649a:	xchg   esi,eax
  43649b:	rcl    esi,0xd2
  43649e:	sbb    BYTE PTR [edi+0x67],0x1
  4364a2:	pop    es
  4364a3:	out    0x21,eax
  4364a5:	hlt    
  4364a6:	dec    esi
  4364a7:	jg     0x4364ba
  4364a9:	repz push es
  4364ab:	out    0x38,al
  4364ad:	retf   
  4364ae:	sbb    BYTE PTR [edi+0x67],0xe1
  4364b2:	push   es
  4364b3:	out    0x7e,eax
  4364b5:	imul   edx,DWORD PTR [ebx-0x7],0x3
  4364b9:	xrelease mov DWORD PTR ds:0xb0,esp
  4364c0:	cs nop
  4364c2:	loopne 0x4364ed
  4364c4:	cmp    al,0x80
  4364c6:	mov    ah,0x97
  4364c8:	adc    DWORD PTR [edx-0xd481fb],edi
  4364ce:	outs   dx,DWORD PTR ds:[esi]
  4364cf:	inc    eax
  4364d0:	xchg   edi,eax
  4364d1:	sub    eax,0x4f60e000
  4364d6:	adc    ch,cl
  4364d8:	lock mov edx,DWORD PTR [eax-0x3]
  4364dc:	test   BYTE PTR [esi+0x6f0f7b8],0x88
  4364e3:	in     eax,dx
  4364e4:	add    DWORD PTR [ebx+eax*2+0x142ef0c5],ecx
  4364eb:	jb     0x4364f4
  4364ed:	sti    
  4364ee:	test   DWORD PTR [ecx-0x28],ebx
  4364f1:	clc    
  4364f2:	(bad)  
  4364f3:	call   0x614ba3bf
  4364f8:	jecxz  0x4364f9
  4364fa:	test   BYTE PTR [ecx-0x35],bh
  4364fd:	clc    
  4364fe:	(bad)  
  4364ff:	call   0xe92f76b3
  436504:	mov    eax,0x3ef9aefa
  436509:	int3   
  43650a:	bound  ebx,QWORD PTR [edx+0x76be147a]
  436510:	mov    BYTE PTR [esi-0x44],dh
  436513:	fcomip st,st(0)
  436515:	push   es
  436516:	bound  esp,QWORD PTR [eax-0x71]
  436519:	dec    esi
  43651a:	adc    ch,cl
  43651c:	lock stos DWORD PTR es:[edi],eax
  43651e:	or     eax,0x62b4c7c7
  436523:	loopne 0x436525
  436525:	add    BYTE PTR [eax],al
  436527:	or     BYTE PTR [esi+0x12],0xe9
  43652b:	lock adc edi,DWORD PTR [edi-0x4380a612]
  436532:	xlat   BYTE PTR ds:[ebx]
  436533:	lock push es
  436535:	test   DWORD PTR [esp+edx*4+0xc60cde3],esp
  43653c:	mov    ds:0x1043083,eax
  436541:	mov    bh,0x73
  436543:	test   DWORD PTR [esi],0x8ee42e00
  436549:	std    
  43654a:	call   0x1286c3f
  43654f:	mov    WORD PTR [edx+0x209c75ea],fs
  436555:	(bad)  
  436556:	call   FWORD PTR [edx-0x7dba40f7]
  43655c:	or     al,BYTE PTR [eax]
  43655e:	add    BYTE PTR [edx+0x55b90c72],cl
  436564:	or     DWORD PTR [eax],eax
  436566:	add    BYTE PTR [ebp+0x4a04f7d4],dl
  43656c:	or     DWORD PTR [eax],eax
  43656e:	add    DWORD PTR [edi],0x5b
  436571:	add    al,0x29
  436573:	out    dx,eax
  436574:	jb     0x43657d
  436576:	test   DWORD PTR [esi+0x63],ebx
  436579:	idiv   edi
  43657b:	in     eax,dx
  43657c:	inc    eax
  43657d:	push   ebx
  43657e:	mov    esp,DWORD PTR [edi+0x4c]
  436581:	mov    ebx,0xcc5d5ecc
  436586:	int3   
  436587:	out    0x13,eax
  436589:	in     al,dx
  43658a:	push   ecx
  43658b:	add    BYTE PTR [eax],al
  43658d:	add    BYTE PTR [ecx-0x6374f82c],dl
  436593:	sub    eax,0x3a1a000e
  436598:	std    
  436599:	(bad)  
  43659a:	jl     0x4365fa
  43659c:	not    DWORD PTR [edi-0x3f]
  43659f:	or     BYTE PTR [eax],al
  4365a1:	add    BYTE PTR [edx],cl
  4365a3:	mov    dh,cl
  4365a5:	or     ecx,esp
  4365a7:	ss pop esi
  4365a9:	mov    ebp,DWORD PTR [edx]
  4365ab:	out    0xca,al
  4365ad:	loop   0x436600
  4365af:	into   
  4365b0:	adc    ecx,DWORD PTR [ecx+0x95e6c87]
  4365b6:	and    al,0x20
  4365b8:	push   cs
  4365b9:	add    dl,bl
  4365bb:	adc    ecx,DWORD PTR [esi+0x8]
  4365be:	push   eax
  4365bf:	xchg   BYTE PTR [eax-0x77f735ea],bh
  4365c5:	add    al,0xab
  4365c7:	or     DWORD PTR [esi+0x14],edx
  4365ca:	repz daa 
  4365cc:	(bad)  
  4365cd:	mov    bh,0x5
  4365cf:	sahf   
  4365d0:	std    
  4365d1:	test   BYTE PTR ds:0xfb4a7cb2,dl
  4365d7:	sbb    BYTE PTR [edx],bh
  4365d9:	cld    
  4365da:	jnp    0x43658e
  4365dc:	clc    
  4365dd:	test   BYTE PTR [ebp-0x1e],ah
  4365e0:	push   cs
  4365e1:	add    bl,dh
  4365e3:	sahf   
  4365e4:	inc    ebx
  4365e5:	adc    al,0xa2
  4365e7:	mov    ss,edi
  4365e9:	(bad)
  4365ec:	pushf  
  4365ed:	jge    0x436620
  4365ef:	mov    ebx,0x927b
  4365f4:	add    BYTE PTR [edi-0x2a00024c],dl
  4365fa:	push   ss
  4365fb:	jp     0x4365b5
  4365fd:	fstp   QWORD PTR [ebp+0x4be0e4fd]
  436603:	int    0xe0
  436605:	int    0x96
  436607:	jnp    0x4365c1
  436609:	add    eax,0x327cfd9e
  43660e:	mov    ds:0x9c5f8a7c,eax
  436613:	std    
  436614:	jmp    FWORD PTR [eax-0x1d]
  436617:	test   DWORD PTR [ebp+edi*2-0xcfff62e],0xe8f77ce5
  436622:	mov    ds:0xce68624b,eax
  436627:	sbb    ebp,ecx
  436629:	rcr    DWORD PTR [eax],1
  43662b:	xor    dl,BYTE PTR [edx+edi*2]
  43662e:	bound  esp,QWORD PTR [ecx+0x6c1bea62]
  436634:	adc    dh,bl
  436636:	popf   
  436637:	jbe    0x43668b
  436639:	sti    
  43663a:	pop    ss
  43663b:	jp     0x4365f5
  43663d:	fstp   QWORD PTR [ebp-0x51087803]
  436643:	add    al,0x5a
  436645:	fild   WORD PTR [esi]
  436647:	ins    DWORD PTR es:[edi],dx
  436648:	mov    fs,WORD PTR [esp+edi*8-0x1a]
  43664c:	add    ebp,DWORD PTR [esi+0x14]
  43664f:	sti    
  436650:	jp     0x43667b
  436652:	call   FWORD PTR [ebp+0x41]
  436655:	xchg   edi,eax
  436656:	jle    0x436633
  436658:	test   BYTE PTR [eax],0x0
  43665b:	add    BYTE PTR [edi+0x7c],dh
  43665e:	cmp    ecx,DWORD PTR [esi]
  436660:	repz push es
  436662:	call   0xd7994dac
  436667:	fldcw  WORD PTR [esi-0x116449d4]
  43666d:	enter  0x7cd4,0x81
  436671:	push   edx
  436672:	stc    
  436673:	add    esi,ebx
  436675:	sub    al,0x60
  436677:	jge    0x436614
  436679:	cld    
  43667a:	out    0x3,al
  43667c:	push   esi
  43667d:	test   DWORD PTR [eax-0x2d],0x7de02c53
  436684:	jnp    0x436682
  436686:	out    0x3,al
  436688:	mov    dh,0xc5
  43668a:	in     al,dx
  43668b:	jl     0x436706
  43668d:	push   edx
  43668e:	icebp  
  43668f:	add    esi,ebx
  436691:	jg     0x4366bf
  436693:	adc    al,0x76
  436695:	test   BYTE PTR [ebx+0xd],cl
  436698:	repz push es
  43669a:	retw   
  43669c:	ja     0x3cce5e22
  4366a2:	or     DWORD PTR [ebx+0x23],edi
  4366a5:	sub    al,0x96
  4366a7:	mov    eax,ds:0x7cfb446e
  4366ac:	xor    BYTE PTR [ebx+0x4f82fcc1],dl
  4366b2:	stc    
  4366b3:	add    esi,ebx
  4366b5:	jge    0x436668
  4366b7:	sti    
  4366b8:	outs   dx,BYTE PTR ds:[esi]
  4366b9:	mov    DWORD PTR [edi+0xd],edi
  4366bc:	repz push es
  4366be:	outs   dx,DWORD PTR ds:[esi]
  4366bf:	inc    DWORD PTR [eax]
  4366c1:	add    BYTE PTR [eax],al
  4366c3:	cmc    
  4366c4:	pop    es
  4366c5:	add    BYTE PTR [edi+0x709288ec],dl
  4366cb:	out    0x6,al
  4366cd:	add    BYTE PTR [edx-0x2a],dh
  4366d0:	cli    
  4366d1:	test   BYTE PTR [edi+0x15438ba8],ch
  4366d7:	sbb    bl,bh
  4366d9:	or     BYTE PTR [edx+0x66],ah
  4366dc:	push   ebx
  4366dd:	adc    ch,cl
  4366df:	lock xchg ecx,eax
  4366e1:	pop    ebx
  4366e2:	aad    0xff
  4366e4:	mul    BYTE PTR ds:0xe8c3de23
  4366ea:	push   0xffffffb2
  4366ec:	fwait
  4366ed:	xchg   DWORD PTR [edi-0x25],edi
  4366f0:	hlt    
  4366f1:	(bad)  
  4366f2:	call   0x91c5f0fd
  4366f7:	in     eax,dx
  4366f8:	push   es
  4366f9:	add    dl,al
  4366fb:	add    ah,BYTE PTR ds:0x9edc9cd
  436701:	add    BYTE PTR [ecx+0x6a0006f5],0x30
  436708:	or     eax,DWORD PTR [edi-0xb34a1]
  43670e:	call   0x1c7af636
  436713:	(bad)  
  436714:	dec    DWORD PTR [ecx+0x6f777]
  43671a:	bound  ebx,QWORD PTR [ebp-0xf16edae]
  436720:	adc    esi,edi
  436722:	in     al,dx
  436723:	into   
  436724:	and    al,0x9
  436726:	aas    
  436727:	add    BYTE PTR [eax],al
  436729:	add    BYTE PTR [esi+0x63],ch
  43672c:	cmp    eax,0xb0ffef29
  436731:	ins    DWORD PTR es:[edi],dx
  436732:	jge    0x436740
  436734:	push   es
  436735:	jmp    0x39c88c2a
  43673a:	std    
  43673b:	ret    
  43673c:	fisub  WORD PTR [edx+0x1d]
  43673f:	sti    
  436740:	popa   
  436741:	add    bl,al
  436743:	cmp    DWORD PTR [eax+0x705da16],0xffffffb6
  43674a:	and    al,0x23
  43674c:	push   cs
  43674d:	add    dl,cl
  43674f:	push   cs
  436750:	dec    esi
  436751:	or     BYTE PTR [edx],ah
  436753:	dec    DWORD PTR [eax]
  436755:	dec    DWORD PTR [ecx+eax*1+0x7]
  436759:	mov    dh,0x24
  43675b:	push   ds
  43675c:	push   cs
  43675d:	add    BYTE PTR [edx+0x114460e],cl
  436763:	inc    ecx
  436764:	or     BYTE PTR [eax-0x697d0b5a],cl
  43676a:	mov    BYTE PTR [eax],0x0
  43676d:	add    BYTE PTR [ebx-0x4335de06],bh
  436773:	mov    bh,0xe8
  436775:	mov    ebx,0x55b
  43677a:	dec    ebx
  43677b:	dec    ebx
  43677c:	adc    al,0x83
  43677e:	mov    BYTE PTR [esi+0x5e],dl
  436781:	mov    esp,ebx
  436783:	sbb    eax,0xc5a000e
  436788:	mov    ?,WORD PTR [esp+ebx*1+0xeb0005]
  43678f:	add    BYTE PTR [eax],al
  436791:	call   0xc6cb1731
  436796:	inc    esi
  436797:	inc    eax
  436798:	add    ah,ch
  43679a:	sete   BYTE PTR [esi-0x672fc]
  4367a1:	in     al,dx
  4367a2:	mov    bh,0xda
  4367a4:	add    ax,WORD PTR [ebx+0x51a16b8]
  4367ab:	jnp    0x43676e
  4367ad:	or     DWORD PTR [esi+eax*4],ecx
  4367b0:	mov    esp,0x300051c
  4367b5:	push   ecx
  4367b6:	lahf   
  4367b7:	jbe    0x4367c9
  4367b9:	aad    0x18
  4367bb:	pop    edx
  4367bc:	push   ebx
  4367be:	cmp    BYTE PTR [ebp+eax*4-0x74c959da],ah
  4367c5:	gs xor bh,ch
  4367c8:	push   ebx
  4367ca:	adc    al,0xbb
  4367cc:	call   0xf9e73dff
  4367d1:	push   0x7e46f173
  4367d6:	adc    BYTE PTR [ebp+0x7],dh
  4367d9:	repz popf 
  4367db:	js     0x43679f
  4367dd:	mov    edi,DWORD PTR [edx+0x6194f9a5]
  4367e3:	dec    eax
  4367e4:	test   DWORD PTR [esi-0x48333f95],edx
  4367ea:	loop   0x43679c
  4367ec:	int3   
  4367ed:	scas   eax,DWORD PTR es:[edi]
  4367ee:	jae    0x436868
  4367f0:	in     al,dx
  4367f1:	jo     0x436785
  4367f3:	push   cs
  4367f4:	dec    ebp
  4367f5:	add    BYTE PTR [eax],al
  4367f7:	add    BYTE PTR [eax+0x4b],bh
  4367fa:	or     al,0x2d
  4367fc:	inc    ecx
  4367fd:	fdiv   DWORD PTR [edi+esi*1]
  436800:	cmp    DWORD PTR [esi-0xa],0xffffffff
  436804:	push   esp
  436805:	mov    cl,0x81
  436807:	aaa    
  436808:	lock popf 
  43680a:	std    
  43680b:	in     al,0xec
  43680d:	and    ch,BYTE PTR [eax]
  43680f:	and    al,0xf3
  436811:	and    al,0x37
  436813:	hlt    
  436814:	push   0xf3126826
  436819:	popf   
  43681a:	push   cs
  43681b:	mov    cl,0xf7
  43681d:	into   
  43681e:	mov    BYTE PTR [eax-0x26f85],dh
  436824:	in     al,0x37
  436826:	fsubr  DWORD PTR ds:0xfc4f16b1
  43682c:	outs   dx,BYTE PTR ds:[esi]
  43682d:	push   edi
  43682e:	mov    DWORD PTR [eax-0x24fc1],ecx
  436834:	push   0xfffffffb
  436836:	xchg   edi,eax
  436837:	or     DWORD PTR [esi+0x6],esi
  43683a:	jo     0x436840
  43683c:	repz push es
  43683e:	jmp    0x362:0xe554475a
  436845:	pop    es
  436846:	out    0x3,eax
  436848:	push   ss
  436849:	lea    esi,[eax+0x39]
  43684c:	retf   
  43684d:	retf   
  43684e:	sub    DWORD PTR [edx],esp
  436850:	sbb    al,0x0
  436852:	jp     0x43682c
  436854:	xchg   DWORD PTR [eax],ebp
  436856:	pop    esi
  436857:	mov    edx,0x8f05b411
  43685c:	add    BYTE PTR [eax],al
  43685e:	add    BYTE PTR [ebx],bh
  436860:	jmp    FWORD PTR [edi+0x41]
  436863:	lahf   
  436864:	sub    al,ah
  436866:	jae    0x4368c3
  436868:	clc    
  436869:	out    0x3,al
  43686b:	jbe    0x4368a3
  43686d:	fisttp DWORD PTR [ebp+0x3d14e6b]
  436873:	repz jle 0x436849
  436876:	hlt    
  436877:	jnp    0x4368bf
  436879:	ror    DWORD PTR [esi+0x736cfebb],cl
  43687f:	pushf  
  436880:	clc    
  436881:	out    0x3,al
  436883:	jbe    0x436893
  436885:	sti    
  436886:	mov    ?,WORD PTR [eax-0x408a06e]
  43688c:	jnp    0x4368e5
  43688e:	pop    edi
  43688f:	loope  0x436897
  436891:	out    0xa2,eax
  436893:	mov    bl,0xfa
  436895:	ja     0x43688a
  436897:	push   cs
  436898:	mov    ebp,0x7b19b741
  43689d:	xor    al,0x9c
  43689f:	js     0x4368db
  4368a1:	in     eax,dx
  4368a2:	xchg   ebx,eax
  4368a3:	je     0x43691b
  4368a5:	push   ebx
  4368a6:	stc    
  4368a7:	adc    al,0x8f
  4368a9:	add    DWORD PTR [ebp+0x3d94e43],ecx
  4368af:	repz popf 
  4368b1:	arpl   WORD PTR ds:0xf0006f3,ax
  4368b7:	fisubr DWORD PTR fs:[edi+eax*1-0xf9d565c]
  4368bf:	inc    eax
  4368c0:	dec    edi
  4368c1:	adc    ch,cl
  4368c3:	add    BYTE PTR [eax],al
  4368c5:	add    al,dh
  4368c7:	mov    eax,edi
  4368c9:	inc    eax
  4368ca:	pop    es
  4368cb:	(bad)  
  4368cc:	stc    
  4368cd:	jmp    0x69fdc1b3
  4368d2:	xor    eax,0x19ee0047
  4368d7:	jae    0x43688e
  4368d9:	out    dx,eax
  4368da:	in     al,dx
  4368db:	push   es
  4368dc:	add    BYTE PTR [edx-0x60],dh
  4368df:	mov    ?,ecx
  4368e1:	jmp    0xb4cb1d7b
  4368e6:	js     0x43686c
  4368e8:	push   ebx
  4368e9:	loope  0x4368a0
  4368eb:	ret    
  4368ec:	jp     0x436876
  4368ee:	loope  0x436947
  4368f0:	xchg   esp,eax
  4368f1:	inc    ebx
  4368f2:	in     al,dx
  4368f3:	add    al,BYTE PTR [eax]
  4368f5:	jmp    0x9033a369
  4368fa:	cmp    eax,0xf8a185ad
  4368ff:	sub    BYTE PTR [edi],al
  436901:	jns    0x4368ca
  436903:	clc    
  436904:	(bad)  
  436905:	call   0x91dbc20d
  43690a:	pop    ecx
  43690b:	mov    ?,ecx
  43690d:	bound  eax,QWORD PTR [edi]
  43690f:	repz xchg ebp,esp
  436912:	inc    ecx
  436913:	pop    DWORD PTR [eax-0x2b]
  436916:	jecxz  0x436970
  436918:	cwde   
  436919:	jo     0x436954
  43691b:	mov    ?,ecx
  43691d:	bound  edi,QWORD PTR [edi-0x8c67b0e]
  436923:	jle    0x436941
  436925:	clc    
  436926:	outs   dx,DWORD PTR ds:[esi]
  436927:	ja     0x4368e5
  436929:	inc    DWORD PTR [eax]
  43692b:	add    BYTE PTR [eax],al
  43692d:	lock push es
  43692f:	test   DWORD PTR [edi+eiz*2],ebp
  436932:	nop
  436933:	inc    eax
  436934:	add    BYTE PTR [esi],ah
  436936:	cmp    DWORD PTR [eax],edx
  436938:	sub    al,BYTE PTR [eax-0x1f]
  43693b:	retf   0x91eb
  43693e:	cmp    eax,0xfd068df8
  436943:	out    dx,eax
  436944:	mov    DWORD PTR [edx+0x27],ebp
  436947:	push   cs
  436948:	add    dl,cl
  43694a:	fild   WORD PTR [eax-0x66f7d68]
  436950:	push   DWORD PTR [ecx]
  436952:	mov    WORD PTR [edi-0x75],ds
  436955:	es sub eax,0x9ca0404
  43695b:	pop    esi
  43695c:	shr    DWORD PTR [eax],cl
  43695e:	loope  0x436960
  436960:	nop
  436961:	and    dl,BYTE PTR [ecx+0x3c99fff9]
  436967:	clc    
  436968:	mov    DWORD PTR [edx],esp
  43696a:	daa    
  43696b:	push   cs
  43696c:	add    BYTE PTR [edx-0x5d42e386],cl
  436972:	inc    edx
  436973:	inc    eax
  436974:	add    BYTE PTR [ecx],al
  436976:	(bad)  
  436977:	sti    
  436978:	mov    DWORD PTR [edi+0x79],ebx
  43697b:	jge    0x436958
  43697d:	imul   bl
  43697f:	and    dh,BYTE PTR [edi+ebx*1]
  436982:	or     DWORD PTR [eax+eax*2+0x5a],0x7a
  436987:	mov    BYTE PTR [esp+eiz*2+0x5abf0009],bh
  43698e:	or     DWORD PTR [eax],eax
  436990:	add    BYTE PTR [eax],al
  436992:	add    BYTE PTR [eax],al
  436994:	icebp  
  436995:	imul   esi,DWORD PTR [ebx],0xffffffcf
  436998:	lods   al,BYTE PTR ds:[esi]
  436999:	rcr    BYTE PTR [ebp-0x75],cl
  43699c:	jl     0x43697d
  43699e:	retf   0xd1e7
  4369a1:	inc    ecx
  4369a2:	or     BYTE PTR [esi+0x13],ah
  4369a5:	xor    DWORD PTR [eax+0x7091a16],edi
  4369ab:	mov    dh,0x72
  4369ad:	xor    DWORD PTR [esi],ecx
  4369af:	add    bl,dh
  4369b1:	lahf   
  4369b2:	mov    WORD PTR [eax-0x19],?
  4369b5:	daa    
  4369b6:	stc    
  4369b7:	ss add al,0xdf
  4369ba:	test   DWORD PTR [eax],0x12562745
  4369c0:	repz lahf 
  4369c2:	mov    WORD PTR [eax-0x5],cs
  4369c5:	sub    BYTE PTR ds:0xf027b14,dl
  4369cb:	test   DWORD PTR [ebx+0x6a],edi
  4369ce:	idiv   edi
  4369d0:	aam    0x35
  4369d2:	cmp    eax,0xeb8e8214
  4369d7:	les    ecx,FWORD PTR [ebp-0xf]
  4369da:	scas   al,BYTE PTR es:[edi]
  4369db:	test   DWORD PTR [esi],ebp
  4369dd:	into   
  4369de:	mov    DWORD PTR [eax+ebp*8-0x33],ecx
  4369e2:	xchg   DWORD PTR es:[ebx+0x16],esp
  4369e6:	idiv   edi
  4369e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4369e9:	stc    
  4369ea:	or     BYTE PTR [edx-0x40],ah
  4369ed:	add    al,0x27
  4369ef:	pop    es
  4369f0:	arpl   WORD PTR [esi],si
  4369f2:	idiv   edi
  4369f4:	mov    WORD PTR [ecx+0x87cc],fs
  4369fa:	add    BYTE PTR [ebx+0x42],bh
  4369fd:	idiv   edi
  4369ff:	jl     0x436a59
  436a01:	xchg   BYTE PTR [ebx+0x77],dl
  436a04:	pop    ds
  436a05:	fwait
  436a06:	add    dl,dh
  436a08:	popf   
  436a09:	std    
  436a0a:	ins    BYTE PTR es:[edi],dx
  436a0b:	cli    
  436a0c:	xchg   esp,eax
  436a0d:	push   ebx
  436a0e:	scas   al,BYTE PTR es:[edi]
  436a0f:	jae    0x4369e8
  436a11:	inc    ebx
  436a12:	add    BYTE PTR [eax-0x5e],cl
  436a15:	xchg   dh,al
  436a17:	xor    al,bh
  436a19:	add    DWORD PTR [ecx],ecx
  436a1b:	jge    0x436a2c
  436a1d:	test   BYTE PTR [esi-0x4d],al
  436a20:	popf   
  436a21:	xchg   BYTE PTR [ebx-0x19],cl
  436a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a25:	push   edx
  436a26:	jl     0x436a8a
  436a28:	mov    al,ds:0x7678886
  436a2d:	stc    
  436a2e:	add    esi,ebx
  436a30:	dec    edi
  436a31:	test   DWORD PTR [ebx],0xbebe06f3
  436a37:	je     0x436a43
  436a39:	xchg   edi,eax
  436a3a:	fld    TBYTE PTR [edi]
  436a3c:	or     eax,0xfaa08b07
  436a41:	jmp    0x99c219c
  436a46:	mov    eax,edx
  436a48:	and    al,0x96
  436a4a:	mov    ds:0x25ef3e6e,al
  436a4f:	hlt    
  436a50:	jbe    0x4369f1
  436a52:	not    ah
  436a54:	mov    esp,edx
  436a56:	push   ebp
  436a57:	imul   ecx,DWORD PTR [esi-0xf],0x3
  436a5b:	repz jg 0x4369f5
  436a5e:	test   DWORD PTR [eax],0xea740000
  436a64:	xlat   BYTE PTR ds:[ebx]
  436a65:	sahf   
  436a66:	xor    esi,ebx
  436a68:	pop    ebp
  436a69:	dec    esp
  436a6a:	pop    es
  436a6b:	cld    
  436a6c:	jo     0x436aea
  436a6e:	pop    esp
  436a6f:	hlt    
  436a70:	out    0x3,al
  436a72:	jbe    0x436aaa
  436a74:	out    dx,eax
  436a75:	mov    esi,edi
  436a77:	cmc    
  436a78:	pop    ebp
  436a79:	je     0x436aca
  436a7b:	hlt    
  436a7c:	out    0x3,al
  436a7e:	mov    al,BYTE PTR [esi-0x25]
  436a81:	push   esp
  436a82:	jecxz  0x436a64
  436a84:	sub    al,0x26
  436a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436a87:	fwait
  436a88:	pop    esi
  436a89:	push   ecx
  436a8a:	arpl   WORD PTR [ecx-0x6d],di
  436a8d:	or     DWORD PTR [ebx+0x7d],esp
  436a90:	ja     0x436af1
  436a92:	add    DWORD PTR [edi],eax
  436a94:	out    0x8a,eax
  436a96:	ror    BYTE PTR [edx+0x4e8b8d49],0xf1
  436a9d:	add    esi,ebx
  436a9f:	lahf   
  436aa0:	loopne 0x436a2c
  436aa2:	cwde   
  436aa3:	cli    
  436aa4:	inc    eax
  436aa5:	mov    edx,edi
  436aa7:	push   edi
  436aa8:	add    BYTE PTR [edi+0x60],cl
  436aab:	test   eax,0x4ea8e062
  436ab0:	adc    ch,cl
  436ab2:	lock mov edx,ecx
  436ab5:	jo     0x436b1f
  436ab7:	dec    edx
  436ab8:	adc    ch,cl
  436aba:	lock cmp DWORD PTR [esp+edx*2],0xe93fc930
  436ac2:	imul   ebp,DWORD PTR [edi],0x6408
  436ac8:	add    BYTE PTR [ebp-0x3],dl
  436acb:	sub    DWORD PTR [ecx-0x10],0x6
  436acf:	add    dl,al
  436ad1:	fcom   QWORD PTR [ebp-0x8]
  436ad4:	mov    ch,0x30
  436ad6:	pop    es
  436ad7:	test   DWORD PTR [ecx+0x34],esi
  436ada:	cmc    
  436adb:	(bad)  
  436adc:	call   0xe943620f
  436ae1:	lock jecxz 0x436ad4
  436ae4:	add    ch,BYTE PTR [ebp+0x69c7520d]
  436aea:	cdq    
  436aeb:	bound  ebx,QWORD PTR [edx]
  436aed:	push   esi
  436aee:	test   BYTE PTR [eax-0x1f],cl
  436af1:	into   
  436af2:	add    DWORD PTR [eax-0x675599f],esi
  436af8:	out    dx,al
  436af9:	outs   dx,DWORD PTR ds:[esi]
  436afb:	mov    eax,0x8506f0ff
  436b00:	cdq    
  436b01:	jl     0x436a85
  436b03:	sbb    al,0xb8
  436b05:	pop    ebp
  436b06:	inc    edi
  436b07:	adc    al,0xee
  436b09:	push   ds
  436b0a:	outs   dx,DWORD PTR ds:[esi]
  436b0b:	mov    bh,0xdf
  436b0d:	lock push es
  436b0f:	test   DWORD PTR [ecx+0x5c],edi
  436b12:	or     DWORD PTR [eax-0xf],0x68
  436b16:	jmp    0x436b21
  436b18:	jb     0x436af1
  436b1a:	dec    edx
  436b1b:	adc    ch,cl
  436b1d:	lock pop DWORD PTR [eax-0xb]
  436b21:	mov    eax,ds:0x810025f6
  436b26:	loope  0x436af2
  436b28:	jmp    0x0:0xb8907dac
  436b2f:	add    BYTE PTR [esi+eax*1+0x0],cl
  436b33:	(bad)  
  436b34:	(bad)  
  436b35:	scas   eax,DWORD PTR es:[edi]
  436b36:	jmp    0x813e22c6
  436b3b:	nop
  436b3c:	mov    dh,0x90
  436b3e:	stc    
  436b3f:	push   DWORD PTR [ecx-0x6b]
  436b42:	pop    edi
  436b43:	sar    DWORD PTR [eax-0x1f],cl
  436b46:	add    BYTE PTR [eax-0x66f4e],dl
  436b4c:	or     DWORD PTR [ebx-0x6ed9777f],edi
  436b52:	stc    
  436b53:	call   DWORD PTR [ecx+0x3a]
  436b56:	hlt    
  436b57:	cmp    esp,DWORD PTR [edx+0x23]
  436b5a:	push   cs
  436b5b:	add    dl,cl
  436b5d:	cli    
  436b5e:	jns    0x436b2d
  436b60:	es ins BYTE PTR es:[edi],dx
  436b62:	test   DWORD PTR [edi],0x3fa175d
  436b68:	retf   0x8305
  436b6b:	mov    BYTE PTR [esi],dh
  436b6d:	xchg   ecx,eax
  436b6e:	stc    
  436b6f:	jmp    DWORD PTR [ebx+edx*4]
  436b72:	stc    
  436b73:	call   FWORD PTR [edx+0x5f89eb9e]
  436b79:	std    
  436b7a:	xor    cl,dh
  436b7c:	je     0x436b74
  436b7e:	push   es
  436b7f:	mov    bh,0x29
  436b81:	add    eax,DWORD PTR [eax+eax*1]
  436b84:	call   0xda56:0x6cd682e3
  436b8b:	mov    eax,DWORD PTR [edx-0x3]
  436b8e:	sbb    BYTE PTR [ebp+0x6a],0xe3
  436b92:	add    BYTE PTR [eax+0x22000000],dl
  436b98:	xchg   ecx,eax
  436b99:	stc    
  436b9a:	jmp    ecx
  436b9c:	aad    0x13
  436b9e:	mov    dh,BYTE PTR [edx+0x2d]
  436ba1:	push   cs
  436ba2:	add    bl,dh
  436ba4:	lahf   
  436ba5:	test   DWORD PTR [edx+eiz*8],ebx
  436ba8:	mov    eax,0x4768143d
  436bad:	clc    
  436bae:	test   BYTE PTR [ebx+0x6a908797],ch
  436bb4:	test   eax,0xfa78fffd
  436bb9:	xchg   ebx,eax
  436bba:	mov    BYTE PTR [edi],al
  436bbc:	xchg   ecx,eax
  436bbd:	mov    BYTE PTR [eax-0x26ea9],dl
  436bc3:	or     al,0xdf
  436bc5:	imul   DWORD PTR [esi+0x62c7c5e3]
  436bcb:	and    BYTE PTR [ecx-0x78],dh
  436bce:	dec    ebx
  436bcf:	jmp    0x436beb
  436bd1:	xor    DWORD PTR [esi],eax
  436bd3:	jecxz  0x436bfc
  436bd5:	ins    DWORD PTR es:[edi],dx
  436bd6:	mov    esp,0x61fd9dfd
  436bdb:	push   0x6e
  436bdd:	push   ebp
  436bde:	adc    dh,bl
  436be0:	popf   
  436be1:	or     al,0xb1
  436be3:	js     0x436b81
  436be5:	add    DWORD PTR [eax],eax
  436be7:	repz pop eax
  436be9:	cmp    eax,DWORD PTR [edi-0xcf595]
  436bef:	mov    ah,0x65
  436bf1:	mov    bl,ah
  436bf3:	dec    esi
  436bf4:	frstor [edx]
  436bf6:	test   DWORD PTR [eax-0x62],esp
  436bf9:	add    DWORD PTR [eax],eax
  436bfb:	add    BYTE PTR [eax],al
  436bfd:	add    bl,dh
  436bff:	ja     0x436bb1
  436c01:	loop   0x436c37
  436c03:	add    BYTE PTR [esi],0xb0
  436c06:	dec    ebx
  436c07:	mov    ch,bh
  436c09:	push   eax
  436c0b:	jecxz  0x436b92
  436c0d:	mov    BYTE PTR [edi],bh
  436c0f:	test   al,0xfd
  436c11:	jmp    esp
  436c13:	shr    BYTE PTR [edi-0x2],1
  436c16:	lock popf 
  436c18:	std    
  436c19:	pop    ecx
  436c1a:	jp     0x436c4a
  436c1c:	push   ecx
  436c1d:	adc    dh,bl
  436c1f:	push   es
  436c20:	out    0x3e,eax
  436c22:	outs   dx,BYTE PTR ds:[esi]
  436c23:	mov    ds:0xbb3fc73c,al
  436c28:	lea    ebx,[ebx]
  436c2a:	xor    ecx,DWORD PTR [eax+0x7a7cd7d6]
  436c30:	jno    0x436ca2
  436c32:	repz push es
  436c34:	out    0x88,eax
  436c36:	mov    ah,0x6
  436c38:	mov    ecx,0xe11424c6
  436c3d:	and    DWORD PTR [esi-0x4eef1933],ebx
  436c43:	inc    esi
  436c44:	(bad)
  436c48:	jge    0x436bd1
  436c4a:	or     ebp,eax
  436c4c:	or     BYTE PTR [esi+0x5c418391],ch
  436c52:	repz push es
  436c54:	out    0x3,eax
  436c56:	pusha  
  436c57:	ror    DWORD PTR [eax],cl
  436c59:	xchg   DWORD PTR [ecx-0xcfc18b6],ebp
  436c5f:	push   es
  436c60:	fsub   st(5),st
  436c62:	add    BYTE PTR [eax],al
  436c64:	add    BYTE PTR [edx-0x7c],dl
  436c67:	cdq    
  436c68:	int3   
  436c69:	repz push es
  436c6b:	out    0x3,eax
  436c6d:	inc    eax
  436c6e:	out    0x8e,eax
  436c70:	in     al,0xbc
  436c72:	xchg   edi,esp
  436c74:	mov    BYTE PTR [ecx-0xe],ch
  436c77:	out    0x3,eax
  436c79:	repz jbe 0x436c45
  436c7c:	xchg   ah,bl
  436c7e:	push   es
  436c7f:	mov    ah,0x9
  436c81:	xor    eax,DWORD PTR [eax+ebp*1-0x17f92800]
  436c88:	add    esi,ebx
  436c8a:	or     al,BYTE PTR [edx]
  436c8c:	xlat   BYTE PTR ds:[ebx]
  436c8d:	inc    esp
  436c8e:	ret    
  436c8f:	dec    edi
  436c90:	add    eax,0xc6e706f3
  436c95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436c96:	mov    edx,0xba3fc82b
  436c9b:	add    BYTE PTR [edx-0x77acbd0],bh
  436ca1:	jne    0x436c47
  436ca3:	push   ecx
  436ca5:	xor    al,BYTE PTR [eax-0x31]
  436ca8:	shl    ch,1
  436caa:	mov    BYTE PTR [ebx-0x30691645],0xc1
  436cb1:	cli    
  436cb2:	dec    ecx
  436cb3:	int3   
  436cb4:	mov    ch,0x2c
  436cb6:	mov    edx,0xba34adcc
  436cbb:	int3   
  436cbc:	bound  edi,QWORD PTR [eax+0x4a]
  436cbf:	adc    ch,cl
  436cc1:	lock cmp DWORD PTR [ebp-0x60],edi
  436cc5:	call   0x1318ad6
  436cca:	add    BYTE PTR [eax],al
  436ccc:	mov    ds:0xf0ffb86e,al
  436cd1:	push   es
  436cd2:	test   DWORD PTR [ecx],edi
  436cd4:	add    eax,DWORD PTR [edx-0x15970eb8]
  436cda:	push   cs
  436cdb:	jle    0x436d0d
  436cdd:	sbb    eax,DWORD PTR [ebp+0x508be321]
  436ce3:	loope  0x436cce
  436ce5:	mov    eax,0x86e2a098
  436cea:	stc    
  436ceb:	push   edx
  436cec:	ror    BYTE PTR [ecx-0x74412839],0x48
  436cf3:	loope  0x436d62
  436cf5:	xlat   BYTE PTR ds:[ebx]
  436cf6:	adc    esi,DWORD PTR [ebx+0x38]
  436cf9:	mov    edi,0x8ef0e912
  436cfe:	sbb    al,0xd8
  436d00:	mov    edi,eax
  436d02:	adc    edi,edx
  436d04:	scas   eax,DWORD PTR es:[edi]
  436d05:	jmp    0x197bde90
  436d0a:	add    cl,ch
  436d0c:	jg     0x436c9d
  436d0e:	mov    esp,0x5506f0ff
  436d13:	sub    dh,BYTE PTR [ebx+edx*2+0x4dbe00cc]
  436d1a:	int3   
  436d1b:	int3   
  436d1c:	push   ds
  436d1d:	dec    esi
  436d1e:	int3   
  436d1f:	int3   
  436d20:	xchg   DWORD PTR [ebp-0x6a7bac14],edx
  436d26:	ror    DWORD PTR [ebx-0x754cc8],1
  436d2c:	sub    eax,0x7d7ba0
  436d31:	add    BYTE PTR [eax],al
  436d33:	push   edx
  436d34:	or     bh,BYTE PTR [edi-0x6869980]
  436d3a:	inc    DWORD PTR [edx+0xa]
  436d3d:	add    BYTE PTR [eax],al
  436d3f:	out    0xcc,al
  436d41:	or     BYTE PTR [eax+0x46],0x93
  436d45:	push   eax
  436d46:	or     BYTE PTR [edx-0x3500f582],dl
  436d4c:	jbe    0x436cd2
  436d4e:	push   eax
  436d4f:	add    dh,BYTE PTR [edi]
  436d51:	cmp    DWORD PTR [eax+0x6],0xffffff93
  436d55:	ret    
  436d56:	shl    DWORD PTR [ebx+0x13],0x88
  436d5a:	or     al,0x15
  436d5c:	lahf   
  436d5d:	inc    eax
  436d5e:	adc    al,0x61
  436d60:	and    edx,DWORD PTR [ebx+ecx*4]
  436d63:	or     dl,BYTE PTR [ebx]
  436d65:	or     bl,0x64
  436d68:	mov    edx,0x9ed50c88
  436d6d:	inc    eax
  436d6e:	adc    al,0x41
  436d70:	and    edx,DWORD PTR [ebx+ecx*4]
  436d73:	mov    dl,BYTE PTR [ecx]
  436d75:	or     ebx,0x25
  436d78:	mov    edx,0x91c2e9b9
  436d7d:	or     al,0x17
  436d7f:	in     eax,dx
  436d80:	retf   0x5f13
  436d83:	pop    ss
  436d84:	les    esi,FWORD PTR [edx+ebx*1+0x11]
  436d88:	rcl    DWORD PTR [ebx],cl
  436d8a:	mov    ebx,DWORD PTR [edx+0x11]
  436d8d:	inc    ebx
  436d8e:	mov    DWORD PTR [edi+0x11],ecx
  436d91:	sbb    BYTE PTR [esi],0xf3
  436d94:	out    0xf7,eax
  436d96:	push   cs
  436d97:	add    BYTE PTR [eax],al
  436d99:	add    BYTE PTR [eax-0x4e],ch
  436d9c:	add    eax,0x3f6433f9
  436da1:	or     DWORD PTR [eax-0x6],0xffffff9e
  436da5:	pop    edx
  436da6:	enter  0xc49a,0xcc
  436daa:	das    
  436dab:	and    ecx,eax
  436dad:	int3   
  436dae:	daa    
  436daf:	mov    ebx,0xb33fccc1
  436db4:	ror    esp,0x37
  436db7:	inc    edx
  436db8:	mov    ebp,esp
  436dba:	jo     0x436d7f
  436dbc:	fst    QWORD PTR [ecx+0x66]
  436dbf:	inc    edx
  436dc0:	mov    ds:0xfe873a2d,al
  436dc5:	push   ebx
  436dc7:	outs   dx,DWORD PTR ds:[esi]
  436dc8:	in     al,dx
  436dc9:	shr    DWORD PTR [esi+0x7b],1
  436dcc:	inc    ebx
  436dcd:	bound  ebp,QWORD PTR [eax+0x23]
  436dd0:	leave  
  436dd1:	fist   WORD PTR [ebp-0xf9d7190]
  436dd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436dd8:	or     BYTE PTR [ecx+0x4c850d2d],dh
  436dde:	scas   al,BYTE PTR es:[edi]
  436ddf:	(bad)  
  436de0:	cmp    eax,0x1775eb7d
  436de5:	in     al,0x20
  436de7:	add    al,0x7a
  436de9:	aad    0x5b
  436deb:	dec    edx
  436dec:	or     BYTE PTR [ecx-0x7cfc5ac1],dh
  436df2:	mov    eax,ds:0x7c08ef5a
  436df7:	mov    dl,0x2a
  436df9:	loopne 0x436e63
  436dfb:	es cmp eax,0x62
  436e01:	push   0xffffffb2
  436e03:	sub    ah,al
  436e05:	fwait
  436e06:	mov    ss,WORD PTR [edi-0x79ab5b07]
  436e0c:	add    al,0x64
  436e0e:	lods   al,BYTE PTR ds:[esi]
  436e0f:	fsub   st(4),st
  436e11:	adc    eax,0x76394307
  436e16:	push   0xffffffbc
  436e18:	les    esi,FWORD PTR [edi-0x707343ad]
  436e1e:	mov    bl,bh
  436e20:	or     ch,BYTE PTR [esi-0x36]
  436e23:	out    dx,al
  436e24:	xor    al,0xc2
  436e26:	(bad)  
  436e27:	mov    edi,0x5e0eb38c
  436e2c:	xor    ebp,edi
  436e2e:	(bad)  
  436e2f:	iret   
  436e30:	test   BYTE PTR [esp+eax*4],ch
  436e33:	push   ss
  436e34:	les    esi,FWORD PTR [edx+ebx*8-0x22]
  436e38:	lea    edi,[eax-0x5c81557e]
  436e3e:	sbb    ah,bh
  436e40:	add    esi,ebx
  436e42:	push   es
  436e43:	out    0x3,eax
  436e45:	xor    cl,BYTE PTR [ebp-0x7bdb0fed]
  436e4b:	hlt    
  436e4c:	add    ebx,esi
  436e4e:	push   es
  436e4f:	fs mov dl,0x99
  436e52:	cmp    al,0x9
  436e54:	or     edi,0xffffff8b
  436e57:	out    0xf,eax
  436e59:	in     eax,0x83
  436e5b:	imul   esi,DWORD PTR [edi+eiz*8],0x618ae706
  436e62:	xlat   BYTE PTR ds:[ebx]
  436e63:	fiadd  DWORD PTR [ebx]
  436e65:	add    BYTE PTR [eax],al
  436e67:	add    bl,dh
  436e69:	lea    esp,[ebx+0x6e]
  436e6c:	inc    edi
  436e6d:	adc    bh,ah
  436e6f:	add    esi,DWORD PTR [ecx+ecx*8+0x6a]
  436e73:	mov    esi,0xefbf366f
  436e78:	int3   
  436e79:	and    edi,0xffffff8a
  436e7c:	mov    ebx,0xaed2ea6f
  436e81:	in     al,dx
  436e82:	pop    edi
  436e83:	xor    BYTE PTR [edx+0x8],dh
  436e86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436e87:	fidiv  DWORD PTR [ecx]
  436e89:	jg     0x436e46
  436e8b:	leave  
  436e8c:	lds    eax,FWORD PTR es:[eax]
  436e8f:	cdq    
  436e90:	mov    WORD PTR [ebx-0x2c041407],es
  436e96:	jl     0x436eb8
  436e98:	icebp  
  436e99:	inc    DWORD PTR [edx]
  436e9b:	test   al,0x79
  436e9d:	ret    
  436e9e:	in     eax,0xeb
  436ea0:	mov    eax,ds:0xbf67f9c3
  436ea5:	sbb    al,BYTE PTR [eax]
  436ea7:	jmp    0xd5940725
  436eac:	lock push es
  436eae:	xchg   DWORD PTR [ebp-0x33],ebp
  436eb1:	loop   0x436eb7
  436eb3:	jmp    0xe9432ba8
  436eb8:	lock push es
  436eba:	bound  esi,QWORD PTR [eax+0x54]
  436ebd:	xchg   dl,al
  436ebf:	ins    DWORD PTR es:[edi],dx
  436ec0:	fist   DWORD PTR ds:[ebx]
  436ec3:	jmp    0x783c75b8
  436ec8:	cwde   
  436ec9:	sbb    BYTE PTR [eax],al
  436ecb:	jmp    0x73436ed0
  436ed0:	pop    ecx
  436ed1:	je     0x436eb5
  436ed3:	cmc    
  436ed4:	mov    ch,0x44
  436ed6:	push   0xfffffff2
  436ed8:	sub    eax,DWORD PTR [edx-0x67ce1ab]
  436ede:	push   0xffffff9e
  436ee0:	(bad)  
  436ee1:	adc    ebp,ecx
  436ee3:	lock test BYTE PTR [ebp+0x5b],dh
  436ee7:	addr16 iret 
  436ee9:	sti    
  436eea:	jb     0x436f0f
  436eec:	ja     0x82cf6225
  436ef2:	sbb    ebx,esp
  436ef4:	cmp    cl,0x50
  436ef7:	leave  
  436ef8:	les    eax,FWORD PTR [ebp+0x7d7c8741]
  436efe:	(bad)  
  436eff:	out    dx,eax
  436f00:	add    cl,BYTE PTR [edi]
  436f02:	mov    edx,0x71e84569
  436f07:	mov    eax,DWORD PTR [eax-0x7a9eff07]
  436f0d:	les    eax,FWORD PTR [ecx+ebx*1]
  436f10:	popf   
  436f11:	stc    
  436f12:	jl     0x436f49
  436f14:	lea    edi,ds:0xf7c713f8
  436f1a:	jmp    0x436eb9
  436f1c:	(bad)  
  436f1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436f1e:	and    al,0x9a
  436f20:	push   es
  436f21:	add    BYTE PTR [eax],al
  436f23:	adc    DWORD PTR [eax+edx*2],eax
  436f26:	adc    al,0x8a
  436f28:	push   es
  436f29:	or     DWORD PTR [esp+ebx*8+0x5a000339],0xffffff8d
  436f31:	xchg   esi,eax
  436f32:	pusha  
  436f33:	add    BYTE PTR [eax],al
  436f35:	add    BYTE PTR [ecx+0x6],dl
  436f38:	add    BYTE PTR [eax-0x2d],cl
  436f3b:	add    edx,DWORD PTR [eax+0x14]
  436f3e:	pop    edx
  436f3f:	push   es
  436f40:	bound  eax,QWORD PTR [ecx]
  436f42:	rol    eax,0x81
  436f45:	mov    gs,WORD PTR [edx+0x3200000f]
  436f4b:	xor    al,0xe5
  436f4d:	push   DWORD PTR ds:0x21607e90
  436f53:	push   es
  436f54:	add    BYTE PTR [ebx-0x6a0663b0],al
  436f5a:	(bad)  
  436f5b:	jbe    0x436f56
  436f5d:	inc    DWORD PTR [ecx+0x1a145488]
  436f63:	push   es
  436f64:	sbb    DWORD PTR [esp+edx*4+0xa00033e],0xce548e05
  436f6f:	add    eax,0x37548b00
  436f74:	adc    al,0x0
  436f76:	retf   0x848c
  436f79:	mov    fs,esi
  436f7b:	sldt   WORD PTR [eax]
  436f7e:	mov    esp,0xac87148e
  436f83:	push   es
  436f84:	adc    al,0x9f
  436f86:	repz in al,0x40
  436f89:	clc    
  436f8a:	dec    ebp
  436f8b:	out    0xef,eax
  436f8d:	mov    BYTE PTR [ecx-0x1d],bh
  436f90:	icebp  
  436f91:	push   edi
  436f92:	jmp    FWORD PTR [edi-0x3]
  436f95:	test   DWORD PTR [edi+0x71],ebp
  436f98:	xor    eax,0x14
  436f9d:	rep outs dx,DWORD PTR ds:[esi]
  436f9f:	add    ah,0xf7
  436fa2:	gs scas al,BYTE PTR es:[edi]
  436fa4:	or     DWORD PTR ds:0xedfd0f3d,edi
  436faa:	loope  0x436f58
  436fac:	test   DWORD PTR [esi],esp
  436fae:	sbb    BYTE PTR [edx+0x1e37bbe],dl
  436fb4:	pop    eax
  436fb5:	jmp    FWORD PTR [edi-0x3]
  436fb8:	or     BYTE PTR [esi+ebx*1-0x174078e6],ah
  436fbf:	std    
  436fc0:	popa   
  436fc1:	jp     0x437006
  436fc3:	jae    0x436fc3
  436fc5:	jnp    0x436fb8
  436fc7:	sbb    al,0x5
  436fc9:	rep outs dx,DWORD PTR ds:[esi]
  436fcb:	ds data16 repnz in al,0xba
  436fd0:	xchg   DWORD PTR [esi+0x17cea547],edi
  436fd6:	rcl    BYTE PTR [ebp+edi*2-0x457f8cc9],0xc3
  436fde:	pop    ebx
  436fdf:	std    
  436fe0:	push   ecx
  436fe2:	js     0x436f66
  436fe4:	ds add al,0xa0
  436fe7:	xchg   esp,eax
  436fe8:	stc    
  436fe9:	ins    DWORD PTR es:[edi],dx
  436fea:	inc    ebx
  436feb:	lock push esp
  436fee:	jecxz  0x43706a
  436ff0:	push   esp
  436ff1:	pop    es
  436ff2:	outs   dx,BYTE PTR ds:[esi]
  436ff3:	std    
  436ff4:	test   BYTE PTR [ebp+0xe],bh
  436ff7:	pop    es
  436ff8:	add    bl,dh
  436ffa:	in     al,0x41
  436ffc:	or     BYTE PTR [edx-0x26],ch
  436fff:	jp     0x43705d
  437001:	add    BYTE PTR [eax],al
  437003:	add    al,bh
  437005:	push   es
  437006:	out    0x3,eax
  437008:	outs   dx,BYTE PTR ds:[esi]
  437009:	dec    ecx
  43700a:	dec    edi
  43700b:	adc    al,0xc8
  43700d:	adc    BYTE PTR [edx-0x78],0x18
  437011:	sbb    DWORD PTR [ebp+ebp*2-0x11],0xb
  437016:	out    0x3,eax
  437018:	fwait
  437019:	mov    dh,0x3c
  43701b:	xchg   esp,eax
  43701c:	call   0x25e2:0x90888de0
  437023:	(bad)  
  437024:	mov    edi,0xb7c73353
  437029:	push   ebx
  43702a:	sub    eax,edi
  43702c:	scas   eax,DWORD PTR es:[edi]
  43702d:	push   ebx
  43702e:	mov    ecx,0x618c8388
  437033:	div    edi
  437035:	push   es
  437036:	out    0x86,eax
  437038:	jns    0x436fd5
  43703a:	out    0x3,eax
  43703c:	repz fdivr st,st(6)
  43703f:	inc    edi
  437040:	dec    edx
  437041:	sub    dl,0x87
  437044:	jno    0x437075
  437046:	out    dx,al
  437047:	add    esi,ebx
  437049:	xchg   ecx,eax
  43704a:	imul   edi,DWORD PTR [esp+esi*8+0x6],0x3e4b39e7
  437052:	mov    edx,0x69922a93
  437057:	aam    0xef
  437059:	push   es
  43705a:	out    0x33,eax
  43705c:	or     edx,DWORD PTR [edx-0x4c]
  43705f:	xchg   ebx,eax
  437060:	sbb    al,BYTE PTR [ebx+eiz*4-0x18eab500]
  437067:	add    eax,DWORD PTR [eax]
  437069:	add    BYTE PTR [eax],al
  43706b:	repz imul esp,esi,0xffffff80
  43706f:	mov    ah,0x6
  437071:	loop   0x4370cc
  437073:	imul   esi,DWORD PTR [ebx-0x170cbbda],0x65
  43707a:	push   eax
  43707b:	jns    0x43707d
  43707d:	in     eax,dx
  43707e:	add    esi,ebx
  437080:	push   es
  437081:	add    ah,bh
  437083:	test   DWORD PTR ds:0x422c59b2,0x21ae940
  43708d:	mov    esp,0x8e177
  437092:	jmp    0xde7b6487
  437097:	dec    edx
  437098:	(bad)  
  437099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43709a:	stos   BYTE PTR es:[edi],al
  43709b:	xor    BYTE PTR [edi],al
  43709d:	bound  ebp,QWORD PTR [edx+0x43]
  4370a0:	lea    edi,[edx-0x1d]
  4370a3:	lock push es
  4370a5:	add    BYTE PTR [ebp+eiz*4+0x2679b20e],dh
  4370ac:	inc    edx
  4370ad:	inc    eax
  4370ae:	jmp    0x7fff727d
  4370b3:	loope  0x4370bd
  4370b5:	add    cl,ch
  4370b7:	lock repz das 
  4370ba:	push   0xffffff87
  4370bc:	or     bh,BYTE PTR [ebp+0x1]
  4370bf:	hlt    
  4370c0:	sti    
  4370c1:	scas   eax,DWORD PTR es:[edi]
  4370c2:	fs mov bl,0xc6
  4370c5:	push   cs
  4370c6:	call   0xe9561f3d
  4370cb:	lock fdivr QWORD PTR [ecx+esi*1+0x72000000]
  4370d3:	sar    BYTE PTR [edi],cl
  4370d5:	clc    
  4370d6:	out    dx,eax
  4370d7:	mov    WORD PTR [eax+0x5a06f0f7],gs
  4370dd:	stos   BYTE PTR es:[edi],al
  4370de:	ins    DWORD PTR es:[edi],dx
  4370df:	outs   dx,BYTE PTR ds:[esi]
  4370e0:	(bad)  
  4370e1:	imul   ebx,esp,0xffffffc6
  4370e4:	push   cs
  4370e5:	call   0xe9561f5c
  4370ea:	lock fdivr QWORD PTR [edx+ebp*2+0x2d8c8168]
  4370f2:	mov    bh,0xf
  4370f4:	jmp    DWORD PTR [esi-0x68]
  4370f7:	adc    al,0x0
  4370f9:	jmp    0x1102d20
  4370fe:	sahf   
  4370ff:	mov    esi,0xbe8ecccc
  437104:	int3   
  437105:	int3   
  437106:	idiv   ebp
  437108:	jmp    0x437095
  43710a:	pop    ss
  43710b:	jnp    0x437091
  43710d:	mov    BYTE PTR [esi+0x49fff980],cl
  437113:	mov    eax,DWORD PTR ds:0x4e35b37e
  437119:	mov    eax,edi
  43711b:	jbe    0x43717c
  43711d:	mov    eax,DWORD PTR [eax+esi*1]
  437120:	retf   
  437121:	loop   0x437144
  437123:	inc    edx
  437124:	or     BYTE PTR [esi-0x6d],ah
  437127:	cli    
  437128:	mov    bh,0x16
  43712a:	call   0xdd2:0x72b6070a
  437131:	add    BYTE PTR [edx+0x144ffd],cl
  437137:	add    BYTE PTR [eax],al
  437139:	adc    ch,BYTE PTR [esi+0xa]
  43713c:	pinsrw mm6,ecx,0xb0
  437140:	push   ss
  437141:	pop    edx
  437142:	or     dh,bh
  437144:	inc    eax
  437145:	inc    esi
  437146:	std    
  437147:	inc    edi
  437148:	adc    al,0xd1
  43714a:	cmp    DWORD PTR [eax],ecx
  43714c:	mov    BYTE PTR [esi],bh
  43714e:	jae    0x4370d4
  437150:	nop
  437151:	mov    es,WORD PTR [ecx-0x3ce20007]
  437157:	adc    esi,DWORD PTR [ecx+0x66c35c3a]
  43715d:	imul   ebp,DWORD PTR [ecx-0x7cb5b27d],0xf2a3f3ba
  437167:	mov    ebx,0x830a0a16
  43716c:	push   ebp
  43716d:	xor    BYTE PTR cs:[ecx-0x67f6d50],al
  437174:	(bad)  
  437175:	mov    esp,0xf301622b
  43717a:	xchg   DWORD PTR [ebx-0x7c73130b],edi
  437180:	(bad)  
  437181:	out    dx,eax
  437182:	and    al,bl
  437184:	bound  ebp,QWORD PTR [eax+0x12]
  437187:	clc    
  437188:	popa   
  437189:	rcl    BYTE PTR [ecx-0x190f407d],0x7b
  437190:	mov    esp,0x84fd6fdd
  437195:	and    BYTE PTR cs:[edi],0x7
  437199:	arpl   WORD PTR [edi+0xfff6],dx
  43719f:	add    BYTE PTR [eax+ebp*8+0x6f190c30],ch
  4371a6:	xchg   ebp,eax
  4371a7:	sahf   
  4371a8:	cwde   
  4371a9:	cmp    al,0x8f
  4371ab:	jge    0x43715c
  4371ad:	imul   ebp,DWORD PTR [edx],0xffffffbd
  4371b0:	mov    edi,0xb7ccc01b
  4371b5:	xor    eax,eax
  4371b7:	int3   
  4371b8:	scas   eax,DWORD PTR es:[edi]
  4371b9:	sub    eax,eax
  4371bb:	int3   
  4371bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4371bd:	mov    edx,0xc0c2ec7c
  4371c2:	jl     0x43721f
  4371c4:	add    ebx,DWORD PTR [esi-0xf148c84]
  4371ca:	dec    ebp
  4371cb:	test   bl,dh
  4371cd:	outs   dx,DWORD PTR ds:[esi]
  4371ce:	std    
  4371cf:	jmp    DWORD PTR [esp+0x6ff3fc41]
  4371d6:	std    
  4371d7:	(bad)  
  4371d8:	mov    ebp,0x703a7b40
  4371dd:	aam    0xdf
  4371df:	std    
  4371e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4371e1:	addr16 xchg ebp,eax
  4371e3:	jb     0x43720e
  4371e5:	inc    esp
  4371e6:	nop
  4371e7:	xchg   DWORD PTR [ebx+ecx*1+0x68fb8279],esi
  4371ee:	std    
  4371ef:	jmp    DWORD PTR [ebx+0x4fc4847]
  4371f5:	push   es
  4371f6:	mov    ds:0xee22697e,al
  4371fb:	add    esi,ebx
  4371fd:	xlat   BYTE PTR ds:[ebx]
  4371fe:	jle    0x4371cc
  437200:	call   0xc7fc81
  437205:	add    BYTE PTR [eax],al
  437207:	scas   eax,DWORD PTR es:[edi]
  437208:	movd   mm1,ecx
  43720b:	retf   
  43720c:	ss jns 0x43719f
  43720f:	ficom  DWORD PTR [eax+0x6e15b59]
  437215:	out    0x7c,eax
  437217:	jns    0x4371c4
  437219:	stc    
  43721a:	add    esi,ebx
  43721c:	xchg   DWORD PTR ds:0xdd4637fd,esp
  437222:	ret    0x895
  437225:	sub    BYTE PTR [edx-0x7053705a],bl
  43722b:	out    0x50,al
  43722d:	mov    dl,0x8
  43722f:	mov    cs,WORD PTR [eax]
  437231:	fs cmp al,0xf0
  437234:	(bad)  
  437235:	sbb    BYTE PTR [esi-0x3a],bh
  437238:	add    bl,dh
  43723a:	lds    eax,FWORD PTR [edx]
  43723c:	and    BYTE PTR [esi+0x46],ch
  43723f:	out    0x81,eax
  437241:	daa    
  437242:	pop    ss
  437243:	pop    es
  437244:	nop
  437245:	mov    edi,?
  437247:	ret    
  437248:	xlat   BYTE PTR ds:[ebx]
  437249:	xchg   esi,eax
  43724a:	cmp    DWORD PTR [ebx+0x46],ecx
  43724d:	stc    
  43724e:	(bad)  
  43724f:	pop    edx
  437250:	mov    BYTE PTR [ebx],ch
  437252:	repz push ebp
  437254:	retf   
  437255:	out    0x3,eax
  437257:	xrelease xchg DWORD PTR [ecx-0x18f90c84],esp
  43725e:	pop    es
  43725f:	jmp    0xe06:0xf3049c82
  437266:	mov    edx,0x49482fa
  43726b:	add    BYTE PTR [eax],al
  43726d:	add    bl,dh
  43726f:	push   es
  437270:	outs   dx,BYTE PTR ds:[esi]
  437271:	jle    0x4372ca
  437273:	adc    eax,0x81f0e900
  437278:	jnp    0x43724f
  43727a:	jae    0x437252
  43727c:	add    ebp,DWORD PTR [edx+0x6e]
  43727f:	adc    BYTE PTR [edx+0x3b],bh
  437282:	int    0x81
  437284:	mov    esi,0x8566a00f
  437289:	pop    ds
  43728a:	jmp    0x437271
  43728c:	push   es
  43728d:	outs   dx,DWORD PTR ds:[esi]
  43728e:	das    
  43728f:	sbb    DWORD PTR [eax],eax
  437291:	jmp    0x31de286b
  437296:	lds    edi,FWORD PTR [ebx-0x7]
  437299:	bound  ebp,QWORD PTR ds:0xf605880f
  43729f:	jge    0x4372e3
  4372a1:	cmc    
  4372a2:	mov    ch,0xb5
  4372a4:	call   0x2d62:0xf97ba590
  4372ab:	adc    eax,DWORD PTR [ebp+0x1c8398b7]
  4372b1:	icebp  
  4372b2:	sbb    DWORD PTR [ecx+0x6f0dfbc],ecx
  4372b8:	stc    
  4372b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4372ba:	jl     0x437268
  4372bc:	adc    bl,dl
  4372be:	cmp    al,ch
  4372c0:	int3   
  4372c1:	adc    esi,DWORD PTR [eax+0x46]
  4372c4:	in     eax,dx
  4372c5:	pusha  
  4372c6:	jne    0x437282
  4372c8:	adc    ch,cl
  4372ca:	lock call 0x18f2d256
  4372d0:	add    cl,ch
  4372d2:	add    BYTE PTR [eax],al
  4372d4:	add    BYTE PTR [ecx+0x9],bh
  4372d7:	bound  ebx,QWORD PTR [edx]
  4372d9:	xchg   ecx,eax
  4372da:	call   0x18fac9e5
  4372df:	add    cl,ch
  4372e1:	jno    0x43729e
  4372e3:	std    
  4372e4:	outs   dx,DWORD PTR ds:[esi]
  4372e5:	mov    dh,0xba
  4372e7:	adc    ch,cl
  4372e9:	lock add DWORD PTR [ebx-0x33],0x2890a9
  4372f1:	and    DWORD PTR [edi],eax
  4372f3:	add    BYTE PTR [ebx+0x46bbc],cl
  4372f9:	sbb    al,bh
  4372fb:	dec    edi
  4372fc:	inc    ecx
  4372fd:	jmp    0x4372c7
  4372ff:	dec    ecx
  437300:	call   0x3b0b13
  437305:	xchg   DWORD PTR [ecx+0x6da0988],eax
  43730b:	push   eax
  43730c:	lea    eax,[edx+esi*8-0x1]
  437310:	dec    edx
  437312:	xor    eax,DWORD PTR [ebx-0x11b67d3a]
  437318:	inc    DWORD PTR [ebp-0x7b]
  43731b:	les    edx,FWORD PTR [ebx+esi*2]
  43731e:	add    BYTE PTR [eax],al
  437320:	add    dl,cl
  437322:	std    
  437323:	test   DWORD PTR [esp+edi*4-0x3874fffa],edi
  43732a:	jb     0x4372b2
  43732c:	inc    edi
  43732d:	cwde   
  43732e:	test   ecx,esi
  437330:	or     eax,0x8b5e38b4
  437335:	cli    
  437336:	and    ecx,ebx
  437338:	loop   0x43733a
  43733a:	add    BYTE PTR [eax],al
  43733c:	adc    DWORD PTR [esp+edx*1],edi
  43733f:	xchg   bx,ax
  437341:	hlt    
  437342:	mov    bh,0x16
  437344:	mov    al,BYTE PTR [esi]
  437346:	pop    es
  437347:	mov    dh,0xf4
  437349:	int    0xd
  43734b:	add    BYTE PTR [edx-0x3],bl
  43734e:	dec    ebp
  43734f:	or     dl,dl
  437351:	imul   ecx,DWORD PTR [edx],0x8728cff
  437357:	mov    dh,0xb4
  437359:	retf   0xd
  43735c:	pop    edx
  43735d:	std    
  43735e:	inc    ebp
  43735f:	adc    al,0xd1
  437361:	xor    ecx,DWORD PTR [eax]
  437363:	mov    dh,dh
  437365:	jne    0x4372eb
  437367:	xchg   esi,eax
  437368:	push   esi
  437369:	jno    0x437364
  43736b:	push   ebx
  43736d:	push   eax
  43736e:	inc    edx
  43736f:	adc    al,0x62
  437371:	adc    bh,0xc5
  437374:	xchg   ebp,eax
  437375:	pushf  
  437376:	pushf  
  437377:	jge    0x4373aa
  437379:	mov    ebp,0x5a4f9275
  43737e:	std    
  43737f:	dec    DWORD PTR [ebp-0x1a477e1a]
  437385:	outs   dx,DWORD PTR ds:[esi]
  437386:	std    
  437387:	in     al,0xe0
  437389:	add    DWORD PTR [edi-0x7c98aa20],ebp
  43738f:	mov    eax,0x7cfd6ffd
  437394:	mov    dl,0x6c
  437396:	jbe    0x437322
  437398:	xchg   edi,eax
  437399:	push   ecx
  43739a:	std    
  43739b:	call   FWORD PTR [ebx+0x68]
  43739e:	ss inc eax
  4373a0:	add    BYTE PTR [eax],al
  4373a2:	add    bl,dh
  4373a4:	pop    es
  4373a5:	jl     0x4373eb
  4373a7:	xor    esi,DWORD PTR [eax+0x78]
  4373aa:	ret    0x9fcb
  4373ad:	cwde   
  4373ae:	stc    
  4373af:	lods   al,BYTE PTR ds:[esi]
  4373b0:	in     al,dx
  4373b1:	(bad)  
  4373b2:	or     BYTE PTR [eax+0x31],bh
  4373b5:	pushf  
  4373b6:	xchg   edx,eax
  4373b7:	mov    eax,eax
  4373b9:	mov    al,BYTE PTR [ebx-0x7afb4c6c]
  4373bf:	mov    ch,0xc7
  4373c1:	(bad)  
  4373c2:	test   BYTE PTR [eax+ebp*1-0xae7a5d5],0xa0
  4373ca:	pop    ebx
  4373cb:	mov    al,0x2b
  4373cd:	ror    ah,0x3f
  4373d0:	mov    edx,0xa278ec78
  4373d5:	stc    
  4373d6:	or     BYTE PTR [edx+ebp*4-0x72b4b013],cl
  4373dd:	dec    ebx
  4373de:	stc    
  4373df:	dec    esp
  4373e0:	in     al,dx
  4373e1:	mov    DWORD PTR [esi+eiz*4],0x2fccc02c
  4373e8:	push   es
  4373e9:	mov    bl,0xbf
  4373eb:	daa    
  4373ec:	dec    edx
  4373ed:	stos   DWORD PTR es:[edi],eax
  4373ee:	mov    edi,0x793c4a3f
  4373f3:	pop    ss
  4373f4:	lea    esp,[eax+eax*1]
  4373f7:	ret    
  4373f8:	outs   dx,BYTE PTR ds:[esi]
  4373f9:	imul   ecx,DWORD PTR [esi+0x1a],0x79
  4373fd:	data16 (bad) 
  4373ff:	neg    ebx
  437401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437402:	mov    edi,0xbf9b4a37
  437407:	add    BYTE PTR [eax],al
  437409:	add    BYTE PTR [edi],ch
  43740b:	dec    edx
  43740c:	mov    bl,0xbf
  43740e:	daa    
  43740f:	dec    edx
  437410:	stos   DWORD PTR es:[edi],eax
  437411:	mov    edi,0x74804bbf
  437416:	repz push es
  437418:	out    0x7e,eax
  43741a:	xor    al,0x7
  43741c:	out    0x7e,eax
  43741e:	sub    al,0x7
  437420:	out    0x7e,eax
  437422:	xor    al,0x7
  437424:	out    0x7e,eax
  437426:	sub    al,0x7
  437428:	out    0x7e,eax
  43742a:	xor    al,0x7
  43742c:	out    0x3,eax
  43742e:	repz push es
  437430:	call   0xe64a6738
  437435:	add    esi,ebx
  437437:	push   es
  437438:	loop   0x43743d
  43743a:	repz push es
  43743c:	repnz add esi,ebx
  43743f:	push   es
  437440:	fiadd  DWORD PTR [ebx]
  437442:	repz push es
  437444:	repnz add esi,ebx
  437447:	push   es
  437448:	stos   BYTE PTR es:[edi],al
  437449:	add    esi,ebx
  43744b:	push   es
  43744c:	and    al,BYTE PTR [ebx]
  43744e:	repz push es
  437450:	sbb    al,BYTE PTR [edx]
  437452:	repz push es
  437454:	adc    al,BYTE PTR [eax]
  437456:	repz push es
  437458:	or     al,BYTE PTR [ebx+esi*8]
  43745b:	push   es
  43745c:	add    bh,ah
  43745e:	push   esp
  43745f:	js     0x43745b
  437461:	jmp    0x4374af
  437463:	js     0x437465
  437465:	idiv   BYTE PTR [eax]
  437467:	js     0x437462
  437469:	out    dx,al
  43746a:	call   0x1297475
  43746f:	add    BYTE PTR [eax],al
  437471:	push   0x78de0007
  437476:	js     0x437471
  437478:	(bad)  
  437479:	js     0x4374f5
  43747b:	stc    
  43747c:	into   
  43747d:	push   0x68c60006
  437482:	push   cs
  437483:	add    BYTE PTR [esi-0x49ffe188],bh
  437489:	js     0x4374c9
  43748b:	add    BYTE PTR [esi-0x5a000198],ch
  437491:	push   0x789e007e
  437496:	jge    0x437497
  437498:	xchg   ebp,eax
  437499:	js     0x437518
  43749b:	std    
  43749c:	lea    ebp,[eax+0x7d]
  43749f:	add    DWORD PTR [esi+0x7e097d68],eax
  4374a5:	js     0x437524
  4374a7:	sbb    DWORD PTR [esi+0x78],esi
  4374aa:	jge    0x4374e5
  4374ac:	outs   dx,BYTE PTR ds:[esi]
  4374ad:	push   0x6866797d
  4374b2:	jge    0x4374ad
  4374b4:	mov    dh,0xe2
  4374b6:	ror    DWORD PTR [ebp+esi*2+0x6c],cl
  4374ba:	push   0x40
  4374bc:	dec    ebp
  4374bd:	sbb    al,0xf3
  4374bf:	and    esp,DWORD PTR [ecx+0x721bfd15]
  4374c5:	rol    DWORD PTR [edx],0x85
  4374c8:	out    dx,eax
  4374c9:	in     eax,dx
  4374ca:	push   esi
  4374cb:	jge    0x437510
  4374cd:	jl     0x43744f
  4374cf:	inc    esp
  4374d0:	int    0x9c
  4374d2:	adc    BYTE PTR [ebp+eax*8+0x0],0x0
  4374d7:	add    BYTE PTR [edx+eax*4+0x6c],bl
  4374db:	int    0xc
  4374dd:	or     BYTE PTR [edx-0x7],0xdd
  4374e1:	fmul   QWORD PTR [ebx]
  4374e3:	add    BYTE PTR [ecx-0x66],al
  4374e6:	out    dx,eax
  4374e7:	fstp   QWORD PTR [ecx-0x68]
  4374ea:	jns    0x4374d5
  4374ec:	pop    ebx
  4374ed:	add    al,BYTE PTR [eax]
  4374ef:	add    BYTE PTR [ecx-0x48],cl
  4374f2:	sbb    DWORD PTR [esi+eiz*8+0x4e],0x5af66c82
  4374fa:	or     BYTE PTR [esi+esi*8+0x72],0x84
  4374ff:	inc    edi
  437500:	(bad)  
  437501:	test   DWORD PTR [esi+0x50],0x82437a3
  437508:	sub    DWORD PTR [edi],0x24
  43750b:	or     al,0x82
  43750d:	add    al,BYTE PTR [eax]
  43750f:	add    BYTE PTR [edx],cl
  437511:	clc    
  437512:	inc    esi
  437513:	push   esp
  437514:	cmp    DWORD PTR [ebx+0x56d68948],esp
  43751a:	mov    cl,0x1
  43751c:	fimul  DWORD PTR [edx]
  43751e:	add    BYTE PTR [ebx-0x1f34dd03],cl
  437524:	and    dh,ah
  437526:	inc    ebx
  437527:	and    al,0xd6
  437529:	cmc    
  43752a:	sub    BYTE PTR ds:[ecx+0x31],dl
  43752e:	xor    BYTE PTR [ebx+0x448256e5],cl
  437534:	out    0x56,al
  437536:	or     BYTE PTR [esi+esi*8+0x5a],0x82
  43753b:	push   esp
  43753c:	add    BYTE PTR [eax],al
  43753e:	add    dh,dh
  437540:	inc    edx
  437541:	test   BYTE PTR [edi+0x2],ch
  437544:	not    BYTE PTR [esi+0x3c]
  437547:	and    DWORD PTR [esi],eax
  437549:	and    al,0x2c
  43754b:	add    DWORD PTR [esi],edi
  43754d:	and    al,0x14
  43754f:	xor    DWORD PTR [eax+0x4b09226f],0xc1bc2b03
  437559:	or     eax,DWORD PTR [eax]
  43755b:	pop    edx
  43755c:	or     ah,BYTE PTR [ebx]
  43755e:	shl    ebx,0xea
  437561:	add    BYTE PTR [edi+edi*8],ah
  437564:	adc    BYTE PTR [ecx-0x7b],bl
  437567:	sub    esi,DWORD PTR [ecx-0x1c661243]
  43756d:	or     BYTE PTR [edi+eiz*8],ah
  437570:	out    0x8,al
  437572:	and    al,0xe7
  437574:	or     ch,ah
  437576:	lock sub eax,0xf3fffd61
  43757c:	fcomi  st,st(3)
  43757e:	sub    al,0x33
  437580:	jmp    0xbd83:0xa96841fd
  437587:	jmp    0x437519
  437589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43758a:	add    eax,0x859c591b
  43758f:	xchg   DWORD PTR [ebx],eax
  437591:	enter  0xbe7c,0xf
  437595:	arpl   WORD PTR ds:0x83f861f3,di
  43759b:	jp     0x4375fe
  43759d:	std    
  43759e:	call   FWORD PTR [ecx+ecx*1+0x34]
  4375a2:	dec    ebp
  4375a3:	add    BYTE PTR [eax],al
  4375a5:	add    BYTE PTR [edx+0x32],al
  4375a8:	push   0x7e43ef85
  4375ad:	xor    al,0x17
  4375af:	pusha  
  4375b0:	std    
  4375b1:	pop    ds
  4375b2:	repz fisub DWORD PTR [edi+0x56]
  4375b6:	add    BYTE PTR [eax+0x20004410],dl
  4375bc:	neg    DWORD PTR [ebp+0x633ee872]
  4375c2:	adc    eax,0x72380a53
  4375c7:	(bad)  
  4375c8:	adc    eax,0xa5c0e74
  4375cd:	xor    BYTE PTR [edx-0x37],dh
  4375d0:	adc    al,0x6a
  4375d2:	push   cs
  4375d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4375d4:	or     ch,BYTE PTR [eax]
  4375d6:	cmp    ebx,DWORD PTR [esi-0x3]
  4375d9:	push   ebx
  4375db:	push   es
  4375dc:	repnz lods al,BYTE PTR gs:[esi]
  4375df:	pop    esi
  4375e0:	out    dx,eax
  4375e1:	test   BYTE PTR [ebx+0x5],dl
  4375e4:	mov    cx,?
  4375e7:	sti    
  4375e8:	lock nop
  4375ea:	xchg   ebp,eax
  4375eb:	push   es
  4375ec:	out    0x83,eax
  4375ee:	repz sti 
  4375f0:	in     al,0x9c
  4375f2:	test   DWORD PTR [ebp-0x14],0xe6c95e33
  4375f9:	add    eax,0x9ce706f3
  4375fe:	cmc    
  4375ff:	dec    ebp
  437600:	in     al,0x33
  437602:	xchg   cl,cl
  437604:	out    0x4,al
  437606:	repz push es
  437608:	out    0x2d,eax
  43760a:	add    BYTE PTR [eax],al
  43760c:	add    BYTE PTR [ecx+edx*8-0x698d62e2],bh
  437613:	addr16 mov edx,?
  437616:	std    
  437617:	jecxz  0x4375ed
  437619:	cmp    al,0xec
  43761b:	jnp    0x43769a
  43761d:	xchg   BYTE PTR cs:[esi-0x1198400d],ah
  437624:	fwait
  437625:	outs   dx,BYTE PTR ds:[esi]
  437626:	sbb    ecx,ebx
  437628:	jl     0x437659
  43762a:	sub    ebx,edi
  43762c:	in     al,0xc1
  43762e:	sub    bl,0x72
  437631:	jne    0x437676
  437633:	int    0xa7
  437635:	mov    dh,0x62
  437637:	imul   eax,ebx,0x40
  43763a:	push   cs
  43763b:	test   al,0x9b
  43763d:	jecxz  0x4375df
  43763f:	and    BYTE PTR [eax],cl
  437641:	xlat   BYTE PTR ds:[ebx]
  437642:	push   ss
  437643:	jmp    0xe403:0xe70b4581
  43764a:	cli    
  43764b:	add    dh,al
  43764d:	and    ecx,DWORD PTR [ebx+0x50]
  437650:	xor    bh,dh
  437652:	push   es
  437653:	out    0x7c,eax
  437655:	mov    ds:0x80430046,eax
  43765a:	mov    cl,al
  43765c:	add    DWORD PTR [eax-0xfe27c01],0x91690006
  437666:	(bad)  
  437667:	jae    0x437635
  437669:	cs pop ebp
  43766b:	ins    DWORD PTR es:[edi],dx
  43766c:	clc    
  43766d:	(bad)  
  43766e:	imul   ebp,DWORD PTR ds:0x29,0x12
  437675:	mov    al,ds:0xb2703286
  43767a:	adc    BYTE PTR [edx],bl
  43767c:	nop
  43767d:	or     ch,al
  43767f:	arpl   WORD PTR [ebp-0x51],di
  437682:	(bad)  
  437683:	call   0xca107d78
  437688:	out    0x2c,eax
  43768a:	xlat   BYTE PTR ds:[ebx]
  43768b:	or     dh,BYTE PTR [edx]
  43768d:	inc    edx
  43768e:	jmp    0x43767a
  437690:	pusha  
  437691:	mov    WORD PTR [ebp+ecx*1+0x1f],ss
  437695:	hlt    
  437696:	hlt    
  437697:	out    dx,al
  437698:	cmc    
  437699:	jmp    FWORD PTR [ecx+ebp*4]
  43769c:	fstp   QWORD PTR [edi-0x4d905d7a]
  4376a2:	adc    BYTE PTR [edx+0x72e80997],bh
  4376a8:	and    ebp,DWORD PTR [ebx]
  4376aa:	add    al,0x62
  4376ac:	sbb    ebp,DWORD PTR [ebx]
  4376ae:	or     al,0xca
  4376b0:	mov    ds:0x48580489,eax
  4376b5:	push   edi
  4376b6:	mov    edi,0xcc89bf93
  4376bb:	ret    
  4376bc:	xchg   esp,eax
  4376bd:	inc    ecx
  4376be:	jmp    0x437723
  4376c0:	ja     0x437660
  4376c2:	adc    dh,dh
  4376c4:	sub    al,0xa5
  4376c6:	add    cl,ch
  4376c8:	lock xchg bh,bl
  4376cb:	out    0xec,al
  4376cd:	out    0x35,eax
  4376cf:	xor    BYTE PTR [eax],al
  4376d1:	add    al,0x86
  4376d3:	add    BYTE PTR [ebx],ah
  4376d5:	pop    eax
  4376d6:	mov    ecx,0x66
  4376db:	ja     0x4376cd
  4376dd:	ret    0xc980
  4376e0:	jp     0x4376ae
  4376e2:	loopne 0x437675
  4376e4:	pop    DWORD PTR [edx+0x9d2cd]
  4376ea:	add    BYTE PTR [edx-0x48],bl
  4376ed:	loopne 0x437737
  4376ef:	xor    BYTE PTR [edx-0x71e63ae5],ah
  4376f5:	sti    
  4376f6:	iret   
  4376f7:	loope  0x437703
  4376f9:	xor    DWORD PTR [esi+ebp*1+0x5b],0x3331c784
  437701:	and    al,0x28
  437703:	add    DWORD PTR [ebp+0x7],0x7ae82
  43770a:	add    BYTE PTR [ecx-0x6ee7dbc5],ah
  437710:	test   BYTE PTR [ebx],ah
  437712:	repnz mov DWORD PTR [edx-0x10e37605],edx
  437719:	dec    BYTE PTR [ecx+0x568209cc]
  43771f:	or     BYTE PTR [eax+0x349203be],cl
  437725:	stc    
  437726:	xchg   DWORD PTR ds:0xd9c77b05,ebp
  43772c:	xchg   ebp,eax
  43772d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43772e:	mov    edi,esi
  437730:	and    ax,0xdae9
  437734:	mov    edi,esi
  437736:	call   FWORD PTR [ecx-0x80]
  437739:	stc    
  43773a:	je     0x437743
  43773c:	inc    ebx
  43773d:	jne    0x437763
  43773f:	add    BYTE PTR [eax],al
  437741:	add    BYTE PTR [edx+0x514faf02],dh
  437747:	cmp    ah,BYTE PTR [eax+ebx*1]
  43774a:	and    BYTE PTR [ecx+0x7c],dh
  43774d:	jmp    0x18265eb
  437752:	repz out 0x39,eax
  437755:	(bad)  
  437756:	ins    BYTE PTR es:[edi],dx
  437757:	test   eax,0x64b47cfe
  43775c:	mov    fs,WORD PTR [esi-0x67d2766]
  437762:	jl     0x4376ec
  437764:	cmp    eax,0xfe526e09
  437769:	push   ebx
  43776b:	out    0x3,eax
  43776d:	add    bl,dh
  43776f:	pop    edi
  437770:	scas   al,BYTE PTR es:[edi]
  437771:	loopne 0x43771e
  437773:	cmp    al,0xc0
  437775:	std    
  437776:	xor    ah,ch
  437778:	sub    BYTE PTR [ebx+edi*8],ah
  43777b:	hlt    
  43777c:	clc    
  43777d:	jge    0x4377d9
  43777f:	mov    BYTE PTR [edx+0x3cc83cf9],0x9
  437786:	outs   dx,BYTE PTR ds:[esi]
  437787:	(bad)  
  437788:	(bad)  
  437789:	push   ebx
  43778b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43778c:	std    
  43778d:	push   ebx
  43778f:	pop    edi
  437790:	mov    al,0xe0
  437792:	stos   DWORD PTR es:[edi],eax
  437793:	cld    
  437794:	mov    eax,0x2fe532fd
  437799:	and    al,0xff
  43779b:	hlt    
  43779c:	(bad)  
  43779d:	jge    0x4377b9
  43779f:	addr16 test cl,bh
  4377a2:	cld    
  4377a3:	in     al,0xbb
  4377a5:	test   DWORD PTR [eax],eax
  4377a7:	add    BYTE PTR [eax],al
  4377a9:	scas   eax,DWORD PTR es:[edi]
  4377aa:	or     edx,eax
  4377ac:	lock retf 0xff4
  4377b0:	and    al,0x2b
  4377b2:	gs mov edi,0xfeb97109
  4377b8:	push   ebx
  4377ba:	pop    esp
  4377bb:	mov    bh,0x7d
  4377bd:	dec    edi
  4377be:	inc    esp
  4377bf:	int    0xff
  4377c1:	aas    
  4377c2:	dec    esp
  4377c3:	fdivr  DWORD PTR [esi+0x4476eff0]
  4377c9:	addps  xmm1,xmm0
  4377cc:	mov    esi,0xd8c70725
  4377d1:	gs jne 0x437757
  4377d4:	jns    0x437778
  4377d6:	sbb    eax,0x2e419955
  4377db:	sub    BYTE PTR [esi],cl
  4377dd:	cmp    eax,0x4f91281e
  4377e2:	jge    0x437816
  4377e4:	(bad)  [esi+0x2f789f5d]
  4377ea:	sub    esi,edi
  4377ec:	enter  0xf834,0xd2
  4377f0:	add    bh,bl
  4377f2:	sub    dl,bl
  4377f4:	add    BYTE PTR [ebx+0x1d],ah
  4377f7:	sbb    cl,bl
  4377f9:	sub    al,0x7d
  4377fb:	mov    ds:0x282de4df,eax
  437800:	push   cs
  437801:	sbb    DWORD PTR [esi],ebx
  437803:	sub    BYTE PTR [ecx-0x20848269],dl
  437809:	cld    
  43780a:	jge    0x4377a7
  43780c:	fild   WORD PTR [eax]
  43780e:	add    BYTE PTR [eax],al
  437810:	fsubr  QWORD PTR ds:0x1e090da8
  437816:	test   al,0x90
  437818:	push   edi
  437819:	jge    0x4377f5
  43781b:	fadd   DWORD PTR [esi]
  43781d:	pop    ebp
  43781e:	repz add BYTE PTR [ebx],al
  437821:	sbb    eax,0x2aaf78b8
  437826:	(bad)  
  437828:	cmp    eax,0x35d8def8
  43782d:	jne    0x4377b2
  43782f:	js     0x437813
  437831:	sbb    al,0x95
  437833:	js     0x4377f0
  437835:	je     0x43787a
  437837:	js     0x4378a0
  437839:	sub    eax,ebx
  43783b:	call   0x7076:0x848a70e5
  437842:	repnz or al,0xfa
  437845:	loopne 0x4377ea
  437847:	js     0x43781f
  437849:	add    BYTE PTR [eax],al
  43784b:	pop    es
  43784c:	shl    DWORD PTR [ecx+ecx*1],cl
  43784f:	out    dx,al
  437850:	push   ebx
  437851:	(bad)  
  437852:	imul   edx,ebp,0xde0904c4
  437858:	jp     0x437858
  43785a:	call   0x2416937f
  43785f:	loope  0x4378cc
  437861:	jo     0x4377ec
  437863:	test   BYTE PTR [ebx-0x50],0x7d
  437867:	cmp    al,0x90
  437869:	test   DWORD PTR ds:0x973dee6,0xc1f336bf
  437873:	in     eax,dx
  437874:	add    BYTE PTR [eax],al
  437876:	add    BYTE PTR [edi+0x63],bl
  437879:	cli    
  43787a:	push   0xffffff9d
  43787c:	daa    
  43787d:	or     DWORD PTR [edx],eax
  43787f:	xchg   edi,eax
  437880:	(bad)  
  437881:	aam    0x9
  437883:	inc    edi
  437884:	out    dx,al
  437885:	fcomip st,st(6)
  437887:	out    dx,eax
  437888:	push   edx
  437889:	test   ebp,esp
  43788b:	jae    0x43788b
  43788d:	mov    cl,0x25
  43788f:	aas    
  437890:	faddp  st(6),st
  437892:	ret    0x8b89
  437895:	rcr    BYTE PTR [esi+eax*1-0x50],0xe8
  43789a:	stc    
  43789b:	dec    esi
  43789c:	cmp    BYTE PTR [ebp+ecx*1-0x1],bh
  4378a0:	std    
  4378a1:	sub    ebp,0x6f6
  4378a7:	or     esp,DWORD PTR [esp+edx*1]
  4378aa:	ss cmp eax,0xf0eb0f68
  4378b0:	push   es
  4378b1:	test   DWORD PTR [ecx+0x51106936],ebx
  4378b7:	(bad)  
  4378b8:	std    
  4378b9:	or     DWORD PTR [ecx+0x6a0006f7],0x4f
  4378c0:	(bad)  
  4378c1:	jae    0x4378b8
  4378c3:	loope  0x437906
  4378c5:	mov    edi,0xc175bd00
  4378ca:	bsf    ecx,edx
  4378cd:	and    ch,al
  4378cf:	test   eax,0xd9d87cff
  4378d4:	inc    edi
  4378d5:	stc    
  4378d6:	add    ch,bl
  4378d8:	adc    ecx,ebx
  4378da:	rol    DWORD PTR [eax],0x0
  4378dd:	add    BYTE PTR [ecx],cl
  4378df:	xchg   BYTE PTR [eax],ah
  4378e1:	ja     0x43787b
  4378e3:	adc    al,0x66
  4378e5:	cmc    
  4378e6:	lods   eax,DWORD PTR ds:[esi]
  4378e7:	jne    0x437920
  4378e9:	adc    esp,0xfffffffe
  4378ec:	push   es
  4378ed:	repz mov esp,0x8d20bd87
  4378f3:	loopne 0x4378b3
  4378f5:	mov    edi,DWORD PTR [esi+0x27]
  4378f8:	or     al,0xf
  4378fa:	mov    cl,0xe2
  4378fc:	push   es
  4378fd:	jle    0x437901
  4378ff:	adc    al,0x77
  437901:	aad    0xd1
  437903:	(bad)  
  437904:	jp     0x437915
  437906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437907:	(bad)  
  437908:	sbb    al,0x1b
  43790b:	loopne 0x43791c
  43790d:	sub    esp,ebx
  43790f:	adc    esp,DWORD PTR [esi-0x37]
  437912:	mov    dl,0x1a
  437914:	pop    es
  437915:	test   dh,ch
  437917:	or     al,BYTE PTR [eax]
  437919:	add    BYTE PTR [ecx-0x1a8bf91d],bl
  43791f:	adc    ecx,ebx
  437921:	ror    DWORD PTR ds:0xbc0fc175,0xc9
  437928:	and    ch,al
  43792a:	stc    
  43792b:	push   ss
  43792c:	jge    0x437906
  43792e:	leave  
  43792f:	inc    edi
  437930:	stc    
  437931:	add    ah,BYTE PTR [ebx-0x7e]
  437934:	je     0x43795a
  437936:	out    dx,al
  437937:	jge    0x4378f8
  437939:	sub    edx,DWORD PTR [esi]
  43793b:	pop    ds
  43793c:	sub    BYTE PTR [ebx],bh
  43793e:	mov    DWORD PTR [ecx],ebx
  437940:	jp     0x4378eb
  437942:	add    BYTE PTR [eax],al
  437944:	add    bl,dh
  437946:	pop    edi
  437947:	std    
  437948:	(bad)  
  437949:	js     0x4378f5
  43794b:	mov    dh,cl
  43794d:	sbb    cl,dh
  43794f:	and    edi,0x8806f9f0
  437955:	in     al,dx
  437956:	jmp    0x16be7821
  43795b:	add    bh,BYTE PTR [ebp-0x53]
  43795e:	popa   
  43795f:	test   DWORD PTR [ecx-0xe],eax
  437962:	not    ebp
  437964:	std    
  437965:	jno    0x437984
  437967:	add    ch,ch
  437969:	push   edi
  43796a:	jmp    0xf91a9d5f
  43796f:	fsub   DWORD PTR [ebx]
  437971:	jmp    0x437949
  437973:	das    
  437974:	stc    
  437975:	je     0x4379ac
  437977:	nop
  437978:	inc    edi
  437979:	repz loopne 0x4379f5
  43797c:	(bad)  
  43797d:	(bad)  
  43797f:	cmp    edi,DWORD PTR [edi+edx*1+0x58]
  437983:	icebp  
  437984:	lods   eax,DWORD PTR ds:[esi]
  437985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437986:	call   0xe137ffd5
  43798b:	imul   edi,ebp,0x6c
  43798e:	popf   
  43798f:	add    al,0x88
  437991:	mov    ah,0x61
  437993:	test   DWORD PTR [ecx-0x10],eax
  437996:	loopne 0x4379dd
  437998:	add    al,0x20
  43799a:	retf   0x5c89
  43799d:	iret   
  43799e:	ja     0x437a06
  4379a0:	add    BYTE PTR [ecx*2-0x77eb7a81],bl
  4379a7:	les    ecx,FWORD PTR [eax]
  4379a9:	add    BYTE PTR [eax],al
  4379ab:	add    BYTE PTR [esi-0x62],dh
  4379ae:	add    al,0x0
  4379b0:	repz loopne 0x437a16
  4379b3:	or     esp,ebp
  4379b5:	nop
  4379b6:	cmp    eax,0x239e7509
  4379bb:	or     al,0x76
  4379bd:	xchg   edi,eax
  4379be:	ret    
  4379bf:	cmp    al,0xf3
  4379c1:	push   es
  4379c2:	out    0x4d,al
  4379c4:	jbe    0x4379c8
  4379c6:	outs   dx,BYTE PTR ds:[esi]
  4379c7:	imul   esp,DWORD PTR [edi+0x7681926c],0x6d
  4379ce:	aas    
  4379cf:	(bad)  
  4379d0:	sti    
  4379d1:	adc    DWORD PTR [ecx+0x4],0xfffffff3
  4379d5:	push   es
  4379d6:	fs jmp 0xfa43:0x95fd
  4379dd:	in     al,dx
  4379de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4379df:	and    eax,0xc53f83f7
  4379e4:	fild   WORD PTR [esi]
  4379e6:	outs   dx,BYTE PTR ds:[esi]
  4379e7:	enter  0xfad0,0xe5
  4379eb:	dec    esp
  4379ec:	jbe    0x4379f0
  4379ee:	pop    edi
  4379ef:	imul   ebx,esp,0x6d
  4379f2:	inc    edx
  4379f3:	xor    DWORD PTR [esi+0x6d],0xc26e4c6e
  4379fa:	or     bh,BYTE PTR [eax]
  4379fc:	bound  ecx,QWORD PTR [edi+0x5e]
  4379ff:	clc    
  437a00:	adc    BYTE PTR [edi],ch
  437a02:	fiadd  WORD PTR [edx+ebp*8-0x78]
  437a06:	inc    ebp
  437a07:	add    al,0xf3
  437a09:	push   es
  437a0a:	out    0x4c,al
  437a0c:	into   
  437a0d:	jmp    0xf300:0x33c2
  437a14:	repz (bad) 
  437a16:	sub    al,0x7c
  437a18:	or     edi,esi
  437a1a:	cmp    al,0x24
  437a1c:	hlt    
  437a1d:	mov    gs,WORD PTR [esp+edi*1]
  437a20:	jns    0x437a65
  437a22:	lea    esp,[edx]
  437a24:	and    esi,edx
  437a26:	ins    BYTE PTR es:[edi],dx
  437a27:	test   eax,0xaef9b831
  437a2c:	and    DWORD PTR [eax-0x2d7ea88c],edi
  437a32:	sub    al,0x16
  437a34:	popa   
  437a35:	daa    
  437a36:	lea    esi,[edi+0x2b3cf722]
  437a3c:	hlt    
  437a3d:	inc    DWORD PTR [eax]
  437a3f:	div    dl
  437a41:	and    esi,ebp
  437a43:	out    dx,eax
  437a44:	jbe    0x437a6b
  437a46:	cwde   
  437a47:	(bad)  
  437a49:	xor    eax,0x2522dab8
  437a4e:	mov    eax,0x1585a347
  437a53:	sbb    ebp,DWORD PTR [edi]
  437a55:	test   DWORD PTR ds:0x9835370b,esi
  437a5b:	mov    edx,0x27982512
  437a60:	mov    ds:0x59d77685,eax
  437a65:	in     eax,0xf9
  437a67:	div    DWORD PTR [esi+0x25]
  437a6a:	pop    eax
  437a6b:	xlat   BYTE PTR ds:[ebx]
  437a6c:	cmp    esi,DWORD PTR [edx-0x1f]
  437a6f:	fistp  QWORD PTR [ebx]
  437a71:	in     eax,dx
  437a72:	test   DWORD PTR [edi+0x76],esi
  437a75:	and    eax,0x3a
  437a7a:	outs   dx,DWORD PTR ds:[esi]
  437a7b:	inc    ebp
  437a7c:	in     eax,dx
  437a7d:	test   DWORD PTR [edi-0xd],esp
  437a80:	and    eax,DWORD PTR ds:0xe123cb7e
  437a86:	fldenv [edx]
  437a88:	cli    
  437a89:	es jae 0x437a40
  437a8c:	shr    BYTE PTR [edx-0xc4893d1],1
  437a92:	lock push es
  437a94:	add    BYTE PTR [edx],al
  437a96:	adc    al,0x9f
  437a98:	and    BYTE PTR [ebp-0x14],bh
  437a9b:	mov    bl,0x0
  437a9d:	jmp    0xe2f98192
  437aa2:	lock push es
  437aa4:	add    BYTE PTR [edx],al
  437aa6:	add    al,0xb4
  437aa8:	int3   
  437aa9:	sub    dh,BYTE PTR [eax]
  437aab:	ins    BYTE PTR es:[edi],dx
  437aac:	mov    bh,0x3
  437aae:	out    dx,eax
  437aaf:	push   es
  437ab0:	add    dl,al
  437ab2:	out    0x81,eax
  437ab4:	je     0x437abb
  437ab6:	ret    
  437ab7:	mov    bl,0xd4
  437ab9:	add    cl,cl
  437abb:	inc    edi
  437abc:	stc    
  437abd:	mov    ecx,0x810
  437ac2:	mov    cl,0x2
  437ac4:	add    DWORD PTR [esi+ebp*8+0x4a],0x7e
  437ac9:	leave  
  437aca:	inc    BYTE PTR [edi]
  437acc:	or     DWORD PTR [eax-0xe],0x531c407f
  437ad3:	adc    esp,ebx
  437ad5:	add    BYTE PTR [ecx-0x3a],bl
  437ad8:	dec    edi
  437ad9:	mov    ds:0x74fa0309,eax
  437ade:	add    BYTE PTR [eax],al
  437ae0:	add    al,cl
  437ae2:	adc    ch,0x8b
  437ae5:	ficomp WORD PTR [esi]
  437ae7:	pop    eax
  437ae8:	mov    edx,DWORD PTR [ecx+0x7f]
  437aeb:	push   eax
  437aec:	sbb    al,0xcb
  437aee:	fsqrt  
  437af0:	sub    bh,BYTE PTR [ebx]
  437af2:	ret    0x3d8
  437af5:	icebp  
  437af6:	leave  
  437af7:	cmp    BYTE PTR [eax-0x5a],0x7a
  437afb:	push   edx
  437afc:	cmp    al,0x1
  437afe:	rol    BYTE PTR [esp+ebx*2+0x5c3126ee],0xfe
  437b06:	push   cs
  437b07:	ins    DWORD PTR es:[edi],dx
  437b08:	adc    al,0xf1
  437b0a:	test   DWORD PTR [edx+0x1d66e318],0x82f84914
  437b14:	pop    eax
  437b15:	pop    esi
  437b16:	mov    bl,ah
  437b18:	or     ebx,DWORD PTR [ebx+0x4b]
  437b1b:	sbb    eax,0xb332c314
  437b20:	add    DWORD PTR [edx+0x7],ecx
  437b23:	add    bl,dl
  437b25:	stc    
  437b26:	aas    
  437b27:	jl     0x437b66
  437b29:	mov    ch,BYTE PTR [eax+0x6e08003b]
  437b2f:	add    DWORD PTR [edi],ecx
  437b31:	pop    ecx
  437b32:	ret    0x7e06
  437b35:	repz call 0x668c:0x48d0710a
  437b3d:	mov    ebx,0xdf23d8f8
  437b42:	or     BYTE PTR [edx+0x72],bl
  437b45:	add    BYTE PTR [eax],al
  437b47:	add    cl,bh
  437b49:	add    al,0x5a
  437b4b:	jge    0x437afd
  437b4d:	mov    WORD PTR gs:[eax-0x9],ds
  437b51:	xchg   esp,eax
  437b52:	pop    es
  437b53:	and    eax,0x7d5b91e0
  437b58:	mov    ch,0x65
  437b5a:	mov    WORD PTR [eax-0x11],?
  437b5d:	in     al,0xd8
  437b5f:	and    esp,ebx
  437b61:	inc    esp
  437b62:	pop    edx
  437b63:	jb     0x437b4b
  437b65:	push   esp
  437b66:	pop    edx
  437b67:	jg     0x437b19
  437b69:	pop    edi
  437b6a:	add    al,0x0
  437b6c:	repz out 0xd4,al
  437b6f:	js     0x9d38a1e8
  437b75:	sub    DWORD PTR [ecx+eax*8-0x2a10e],eax
  437b7c:	jp     0x437bd6
  437b7e:	or     eax,0xa0a0b77d
  437b83:	push   ebp
  437b84:	push   ss
  437b85:	mov    bl,dl
  437b87:	mov    esp,0xec868b3f
  437b8c:	jo     0x437bba
  437b8e:	stc    
  437b8f:	test   dh,al
  437b91:	outs   dx,DWORD PTR ds:[esi]
  437b92:	cs shl ah,0xd0
  437b96:	inc    esp
  437b97:	test   DWORD PTR [edx],esi
  437b99:	pop    ds
  437b9a:	fs adc al,bh
  437b9d:	push   ds
  437b9e:	into   
  437b9f:	test   BYTE PTR [esi-0x70bc738d],bl
  437ba5:	test   edi,0xa99b7aa7
  437bab:	xchg   DWORD PTR [eax],eax
  437bad:	add    BYTE PTR [eax],al
  437baf:	scas   al,BYTE PTR es:[edi]
  437bb0:	das    
  437bb1:	mov    WORD PTR [ebx+0x67],es
  437bb4:	pop    es
  437bb5:	jo     0x437b7e
  437bb7:	pop    esp
  437bb8:	and    BYTE PTR [eax+eax*8],0x74
  437bbc:	les    esp,FWORD PTR [esi+0x63d13331]
  437bc2:	push   edx
  437bc3:	xchg   DWORD PTR [esi+ecx*8],ecx
  437bc6:	push   es
  437bc7:	push   0xf303e78e
  437bcc:	push   es
  437bcd:	loop   0x437b83
  437bcf:	test   ebp,0xbc377d40
  437bd5:	dec    edx
  437bd6:	(bad)  
  437bd7:	daa    
  437bd8:	mov    esp,0x4507c442
  437bdd:	adc    eax,0xeef36e6e
  437be2:	mov    cl,ch
  437be4:	jg     0x437c1a
  437be6:	cmp    BYTE PTR [ebx-0x7],0xe6
  437bea:	add    esi,ebx
  437bec:	xchg   esi,eax
  437bed:	or     DWORD PTR [ecx+0x442c427],eax
  437bf3:	and    BYTE PTR [ecx],al
  437bf5:	scas   eax,DWORD PTR es:[edi]
  437bf6:	sbb    BYTE PTR [ebx+0x7471d607],0xc3
  437bfd:	pop    edx
  437bfe:	cmp    DWORD PTR [ebx+0x308ae3f0],edi
  437c04:	imul   ebp,DWORD PTR [esi+0x4c],0x70
  437c08:	inc    esi
  437c09:	mov    ah,0x2a
  437c0b:	jbe    0x437bd0
  437c0d:	fimul  DWORD PTR [eax+0x13a44203]
  437c13:	add    BYTE PTR [eax],al
  437c15:	add    BYTE PTR [ebx+0x6e03e707],dh
  437c1b:	mov    ebx,0x85f58af6
  437c20:	out    0x7,eax
  437c22:	outs   dx,BYTE PTR ds:[esi]
  437c23:	push   ss
  437c24:	pusha  
  437c25:	or     bh,BYTE PTR [esi-0xebb14fa]
  437c2b:	pop    es
  437c2c:	out    0x3,eax
  437c2e:	repz enter 0xb9ff,0xb0
  437c33:	rol    DWORD PTR [esp+eax*1-0x59ae55c4],cl
  437c3a:	icebp  
  437c3b:	push   es
  437c3c:	add    cl,ch
  437c3e:	retf   
  437c3f:	inc    edi
  437c40:	jb     0x437c26
  437c42:	push   cs
  437c43:	jmp    0xec73:0x64b4c7b
  437c4a:	das    
  437c4b:	xor    bh,al
  437c4d:	cmp    esp,DWORD PTR [edx+0x32]
  437c50:	leave  
  437c51:	cmp    dh,dl
  437c53:	jg     0x437cd0
  437c55:	lods   eax,DWORD PTR ds:[esi]
  437c56:	sahf   
  437c57:	push   0x81f0e9f9
  437c5c:	shr    BYTE PTR [esp+edx*8+0x24],cl
  437c60:	add    dh,ah
  437c62:	jg     0x437c1f
  437c64:	push   edx
  437c65:	inc    ebp
  437c66:	repz je 0x437c8e
  437c69:	js     0x437c23
  437c6b:	push   ss
  437c6c:	ds push 0x2a
  437c6f:	(bad)  
  437c70:	jno    0x437bf8
  437c72:	jnp    0x437c48
  437c74:	pop    es
  437c75:	fs es in eax,dx
  437c78:	or     al,0x6c
  437c7a:	add    BYTE PTR [eax],al
  437c7c:	add    BYTE PTR [edx-0xd],al
  437c7f:	add    ch,BYTE PTR [edx+0x8]
  437c82:	push   0xcea7e36d
  437c87:	jl     0x437caa
  437c89:	call   ecx
  437c8b:	test   BYTE PTR [ebp+edx*4-0x55],cl
  437c8f:	sub    eax,0x43815629
  437c94:	outs   dx,DWORD PTR ds:[esi]
  437c95:	test   al,0x69
  437c97:	stc    
  437c98:	jmp    0x744bde8d
  437c9d:	mov    WORD PTR [ebx],fs
  437c9f:	add    cl,ch
  437ca1:	lock push es
  437ca3:	nop
  437ca4:	(bad)  
  437ca5:	jnp    0x437c62
  437ca7:	add    ah,BYTE PTR [ebp+0x56]
  437caa:	imul   eax,DWORD PTR [ebp+0x0],0x47
  437cae:	mov    al,ds:0x6218c07b
  437cb3:	or     BYTE PTR [edi+edx*1-0x80],0x7b
  437cb8:	clc    
  437cb9:	sub    al,0x76
  437cbb:	loop   0x437c48
  437cbd:	fist   WORD PTR [edx]
  437cbf:	xor    DWORD PTR [ebp+0xe],0x31
  437cc3:	rol    BYTE PTR [ebp+0x66227753],0x89
  437cca:	cmp    eax,DWORD PTR cs:[eax]
  437ccd:	mov    dh,0xd
  437ccf:	pop    es
  437cd0:	mov    bh,0xc6
  437cd2:	inc    eax
  437cd3:	or     BYTE PTR [edi+0x667d5606],dh
  437cd9:	push   ebx
  437cda:	pop    es
  437cdb:	dec    esi
  437cdc:	sysexit 
  437cde:	pop    ss
  437cdf:	cmp    esp,DWORD PTR [esi+0x0]
  437ce2:	add    BYTE PTR [eax],al
  437ce4:	ins    DWORD PTR es:[edi],dx
  437ce5:	inc    esi
  437ce6:	dec    esi
  437ce7:	test   BYTE PTR [edi+0x57],cl
  437cea:	dec    esi
  437ceb:	test   BYTE PTR [ecx+0x56],dl
  437cee:	add    DWORD PTR [eax-0x4f],eax
  437cf1:	ret    0xd769
  437cf4:	and    ecx,eax
  437cf6:	jp     0x437ce0
  437cf8:	call   0x73ec:0xdfff7aa
  437cff:	cmp    DWORD PTR [edx+0x57],esp
  437d02:	or     al,0xc7
  437d04:	push   edi
  437d05:	iret   
  437d06:	pop    ss
  437d07:	dec    esi
  437d08:	pop    edx
  437d09:	add    edi,DWORD PTR [edi+0x474b2a45]
  437d0f:	inc    eax
  437d10:	mov    bh,BYTE PTR [edx+0x45]
  437d13:	in     al,0xc1
  437d15:	xor    bh,BYTE PTR [eax-0x6bc7068]
  437d1b:	sub    al,0x48
  437d1d:	add    DWORD PTR [eax],eax
  437d1f:	add    bl,ah
  437d21:	inc    ebp
  437d22:	aad    0xb8
  437d24:	mov    dl,0x3d
  437d26:	cmp    DWORD PTR [eax],eax
  437d28:	repz inc edx
  437d2a:	add    edi,esi
  437d2c:	cmp    al,0x5d
  437d2e:	mov    WORD PTR [ebx+0x53],es
  437d31:	sbb    BYTE PTR [edi-0x2a10c1d],bh
  437d37:	call   FWORD PTR [eax]
  437d39:	bound  ecx,QWORD PTR [ebx+esi*2-0x241119ed]
  437d40:	sub    al,0x1a
  437d42:	pusha  
  437d43:	or     eax,0x84fd5df3
  437d48:	add    BYTE PTR [eax],al
  437d4a:	add    BYTE PTR [esi+0x6a008a69],ch
  437d50:	and    dh,BYTE PTR [edi+eax*4-0x5a]
  437d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437d55:	mov    cl,BYTE PTR [ebx-0x11]
  437d58:	mov    BYTE PTR [eax+eax*1],al
  437d5b:	rep outs dx,DWORD PTR ds:[esi]
  437d5d:	push   edx
  437d5e:	loopne 0x437d80
  437d60:	jns    0x437cee
  437d62:	jnp    0x437d3f
  437d64:	xlat   BYTE PTR ds:[ebx]
  437d65:	xlat   BYTE PTR ds:[ebx]
  437d66:	jmp    0x437de0
  437d68:	test   al,0x88
  437d6a:	dec    eax
  437d6b:	(bad)  
  437d6c:	out    0xf7,eax
  437d6e:	iret   
  437d6f:	push   0x2b
  437d71:	push   eax
  437d72:	xchg   DWORD PTR [esi],esp
  437d74:	pushf  
  437d75:	xor    dh,0xf2
  437d78:	pop    edx
  437d79:	(bad)  
  437d7a:	cmp    bh,BYTE PTR [edi]
  437d7c:	jno    0x437d7b
  437d7e:	dec    DWORD PTR [eax-0xe097d96]
  437d84:	inc    edx
  437d85:	or     bh,BYTE PTR [ebx]
  437d87:	and    esi,DWORD PTR [edx-0x3]
  437d8a:	push   esp
  437d8c:	lock push ss
  437d8e:	(bad)  
  437d8f:	jl     0x437e01
  437d91:	mov    WORD PTR [ebx-0x75],?
  437d94:	mov    ecx,0x70888b0b
  437d99:	std    
  437d9a:	push   ebx
  437d9c:	call   0x7bad4d98
  437da1:	jne    0x437d28
  437da3:	fiadd  WORD PTR [esi]
  437da5:	or     ebp,DWORD PTR ds:0x14b48f3e
  437dab:	outs   dx,BYTE PTR ds:[esi]
  437dac:	mov    esp,0x9fe
  437db1:	add    BYTE PTR [edx-0x1b4a1f7],al
  437db7:	push   esp
  437db8:	test   BYTE PTR [ecx],al
  437dba:	xor    esp,ecx
  437dbc:	(bad)  
  437dbd:	add    ecx,DWORD PTR [esi]
  437dbf:	sub    dh,BYTE PTR [ecx+0x1e]
  437dc2:	jmp    0xe666:0xa88ee59d
  437dc9:	inc    ebx
  437dca:	jne    0x437dc7
  437dcc:	out    dx,al
  437dcd:	mov    WORD PTR [eax-0x1330a0be],?
  437dd3:	in     al,dx
  437dd4:	pop    ebp
  437dd5:	adc    bl,ch
  437dd7:	in     al,dx
  437dd8:	outs   dx,DWORD PTR ds:[esi]
  437dd9:	iret   
  437dda:	(bad)  
  437ddb:	jno    0x437dca
  437ddd:	inc    ecx
  437dde:	xor    bh,dh
  437de0:	inc    esi
  437de1:	xor    eax,0xbf5fecb3
  437de6:	out    0x91,al
  437de8:	xor    al,0x7c
  437dea:	push   ss
  437deb:	push   edx
  437dec:	outs   dx,BYTE PTR ds:[esi]
  437ded:	inc    ecx
  437dee:	outs   dx,BYTE PTR ds:[esi]
  437def:	jecxz  0x437d73
  437df1:	mov    esi,0x3e765bc
  437df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437df7:	push   0x75be4d6e
  437dfc:	outs   dx,BYTE PTR ds:[esi]
  437dfd:	(bad)  
  437dfe:	xchg   esp,eax
  437dff:	(bad)  
  437e00:	sub    al,0x4c
  437e02:	push   0xf304541a
  437e07:	push   es
  437e08:	out    0x4,eax
  437e0a:	mov    edx,DWORD PTR [ebx-0x1c914515]
  437e10:	imul   BYTE PTR [ecx+ebp*4]
  437e13:	xor    DWORD PTR ds:0x8b,esp
  437e19:	mov    esp,0xc08d3edb
  437e1e:	pop    esi
  437e1f:	ins    BYTE PTR es:[edi],dx
  437e20:	into   
  437e21:	imul   ebx,DWORD PTR [esi+0x6f0e800],0x0
  437e28:	sbb    cl,bh
  437e2a:	mov    ecx,DWORD PTR [ebx+0x15]
  437e2d:	int3   
  437e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437e2f:	je     0x437e21
  437e31:	ins    DWORD PTR es:[edi],dx
  437e32:	int    0xff
  437e34:	aaa    
  437e35:	iret   
  437e36:	mov    DWORD PTR [edi-0x3f76496c],edi
  437e3c:	jge    0x437e37
  437e3e:	xchg   ecx,eax
  437e3f:	js     0x437e3f
  437e41:	iret   
  437e42:	pop    ebp
  437e43:	std    
  437e44:	lock (bad) 
  437e46:	fs cs out dx,al
  437e49:	outs   dx,DWORD PTR ds:[esi]
  437e4a:	leave  
  437e4b:	out    0xeb,eax
  437e4d:	dec    eax
  437e4e:	pop    edi
  437e4f:	stc    
  437e50:	jmp    0x2d426745
  437e55:	sub    al,0xa9
  437e57:	xchg   DWORD PTR [ebx+ecx*4-0x27],ecx
  437e5b:	adc    al,0x2
  437e5d:	mov    esp,0x2c650958
  437e62:	pop    es
  437e63:	add    cl,ch
  437e65:	outs   dx,DWORD PTR ds:[esi]
  437e66:	shl    bh,1
  437e68:	fisub  WORD PTR [ebx-0x4d37aec]
  437e6e:	or     eax,0x8da0edb1
  437e73:	dec    ebx
  437e74:	xchg   ecx,eax
  437e75:	outs   dx,DWORD PTR ds:[esi]
  437e76:	push   esp
  437e77:	xor    eax,0x820e3b34
  437e7c:	int    0x0
  437e7e:	add    BYTE PTR [eax],al
  437e80:	sub    ebx,DWORD PTR [esi-0x7]
  437e83:	jb     0x437e1a
  437e85:	push   eax
  437e86:	sbb    eax,0xc3d8697e
  437e8b:	mov    dl,0x85
  437e8d:	cmp    al,0x9
  437e8f:	ins    DWORD PTR es:[edi],dx
  437e90:	out    0x5d,eax
  437e92:	stc    
  437e93:	pop    esi
  437e94:	add    eax,0x6fea733a
  437e99:	sar    bl,0x62
  437e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437e9d:	je     0x437e24
  437e9f:	add    BYTE PTR [edi-0x27f37b30],bl
  437ea5:	nop
  437ea6:	inc    ebp
  437ea7:	lock ror DWORD PTR [ecx+esi*8+0x2b],1
  437eac:	adc    DWORD PTR [eax+0x85afff9],esp
  437eb2:	test   DWORD PTR [ecx+eax*2],edx
  437eb5:	mov    ebx,0xf47f3bdf
  437eba:	push   0x1c
  437ebc:	xchg   edi,eax
  437ebd:	jae    0x437f0d
  437ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437ec0:	and    eax,0xcd2b3697
  437ec5:	in     al,0xbf
  437ec7:	jle    0x437edf
  437ec9:	dec    edx
  437eca:	cmp    al,BYTE PTR [ebx-0x4004f634]
  437ed0:	shl    DWORD PTR ds:0x902172ed,1
  437ed6:	ins    DWORD PTR es:[edi],dx
  437ed7:	les    edx,FWORD PTR [ecx-0x307432cb]
  437edd:	adc    dh,BYTE PTR [edi+0x7da01]
  437ee3:	rol    DWORD PTR [eax],cl
  437ee5:	add    BYTE PTR [eax],al
  437ee7:	lods   eax,DWORD PTR ds:[esi]
  437ee8:	pop    es
  437ee9:	iret   
  437eea:	mov    DWORD PTR [edi],esp
  437eec:	mov    ebx,0x877e5580
  437ef1:	clc    
  437ef2:	add    edi,ebp
  437ef4:	adc    bh,BYTE PTR [ecx-0x6]
  437ef7:	inc    BYTE PTR [edi]
  437ef9:	add    BYTE PTR [eax],al
  437efb:	jno    0x437f0c
  437efd:	jnp    0x437ef7
  437eff:	enter  0x556,0x81
  437f03:	jo     0x437f3f
  437f05:	sti    
  437f06:	call   FWORD PTR [edx-0x754f84f4]
  437f0c:	pop    es
  437f0d:	add    BYTE PTR [ebx+0x146d8f4c],cl
  437f13:	add    DWORD PTR ds:0x90180c88,edx
  437f19:	push   es
  437f1a:	mov    dh,bl
  437f1c:	mov    ds:0xef1f8871,al
  437f21:	add    al,BYTE PTR [ebp-0x103926db]
  437f27:	sbb    BYTE PTR [ebx+eax*2],dh
  437f2a:	div    ecx
  437f2c:	out    0xbe,al
  437f2e:	xlat   BYTE PTR ds:[ebx]
  437f2f:	int    0xe6
  437f31:	mov    DWORD PTR [ecx-0x616090f],0xbe860444
  437f3b:	or     DWORD PTR [ecx],esi
  437f3d:	sub    eax,0xdaa2dc7
  437f42:	inc    eax
  437f43:	jnp    0x437ef7
  437f45:	adc    al,0x62
  437f47:	jp     0x437efb
  437f49:	jae    0x1c437f4f
  437f4f:	loope  0x437f24
  437f51:	test   BYTE PTR [esi-0x782a7fa3],bl
  437f57:	or     DWORD PTR [ebp+0x39103743],eax
  437f5d:	xor    eax,0xde995b6
  437f62:	push   0x3e85782a
  437f67:	inc    esp
  437f68:	xchg   BYTE PTR [edi],ch
  437f6a:	and    BYTE PTR [ebp-0x1724bc74],ah
  437f70:	mov    edi,0x8680680e
  437f75:	lds    edi,FWORD PTR [eax-0x4f]
  437f78:	dec    esi
  437f79:	call   0x8757b2f6
  437f7e:	out    dx,eax
  437f7f:	icebp  
  437f80:	xchg   DWORD PTR [esi-0x4c],eax
  437f83:	mov    eax,0x6ff30003
  437f88:	dec    esi
  437f89:	loopne 0x437ff9
  437f8b:	test   eax,0x7f8300e9
  437f90:	sub    DWORD PTR gs:[ebx+ebx*2+0x7b38377],0xffffffdb
  437f99:	or     al,0x78
  437f9b:	iret   
  437f9c:	pop    ecx
  437f9d:	and    al,BYTE PTR [esi+eax*1-0x71b90fb1]
  437fa4:	mov    ah,0x4f
  437fa6:	jbe    0x437f74
  437fa8:	fimul  DWORD PTR [eax+0x3e77bf7]
  437fae:	repz push es
  437fb0:	call   0x437fc0
  437fb5:	outs   dx,BYTE PTR ds:[esi]
  437fb6:	int3   
  437fb7:	sub    cl,BYTE PTR [edx-0x2a3e0160]
  437fbd:	ins    DWORD PTR es:[edi],dx
  437fbe:	add    eax,0x8da643d6
  437fc3:	or     al,0xd8
  437fc5:	ja     0x437f89
  437fc7:	test   al,0xbb
  437fc9:	sub    al,0x62
  437fcb:	out    0x3,eax
  437fcd:	mov    esi,0x5fd8048d
  437fd2:	push   ebx
  437fd3:	repnz pop ds
  437fd5:	jmp    0x437fcb
  437fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437fd8:	add    edi,DWORD PTR [edi]
  437fda:	push   ebx
  437fdb:	outs   dx,BYTE PTR ds:[esi]
  437fdc:	inc    edx
  437fdd:	inc    esi
  437fde:	ja     0x43802f
  437fe0:	in     al,dx
  437fe1:	stos   DWORD PTR es:[edi],eax
  437fe2:	(bad)
  437fe5:	push   ebp
  437fe6:	pop    es
  437fe7:	out    0x3,eax
  437fe9:	repz mov dh,0x6d
  437fec:	rcl    BYTE PTR [eax],0xf7
  437fef:	outs   dx,DWORD PTR ds:[esi]
  437ff0:	call   0xe8a77705
  437ff5:	adc    bh,dh
  437ff7:	std    
  437ff8:	arpl   WORD PTR [esi],di
  437ffa:	mov    ecx,0x5f308939
  437fff:	jo     0x437fe0
  438001:	aam    0xb6
  438003:	pop    ebp
  438004:	mov    edi,0x782449b8
  438009:	stos   BYTE PTR es:[edi],al
  43800a:	popa   
  43800b:	xor    BYTE PTR [ebp+0x6c],0xcb
  43800f:	jle    0x437f98
  438011:	xor    BYTE PTR [edi+0x0],dl
  438014:	or     eax,0xe9000652
  438019:	add    BYTE PTR [eax],al
  43801b:	add    al,dh
  43801d:	mov    ds:0xeb00b485,eax
  438022:	xchg   ah,ch
  438024:	lock push es
  438026:	add    cl,ch
  438028:	cdq    
  438029:	mov    esi,0xd1b9b259
  43802e:	mov    esp,0x11ef0446
  438033:	test   eax,0x9acc52f0
  438038:	mov    al,BYTE PTR es:[ebp+eax*1-0x11]
  43803d:	or     eax,eax
  43803f:	pushf  
  438040:	call   0xed08ccd0
  438045:	mov    eax,DWORD PTR [ebp+ecx*8-0x20]
  438049:	xor    ecx,esi
  43804b:	push   ss
  43804c:	mov    al,ds:0x3372d88b
  438051:	and    eax,0x8ba1f60c
  438056:	int    0x2
  438058:	xor    BYTE PTR [edx+0x252b62c8],cl
  43805e:	adc    al,0x72
  438060:	xor    al,0x25
  438062:	adc    BYTE PTR [edx+0x3c],dh
  438065:	and    eax,0x5189b80c
  43806a:	aad    0xb8
  43806c:	pop    edx
  43806d:	push   eax
  43806e:	fdiv   st,st(2)
  438070:	cmp    esp,edx
  438072:	repz mov dh,0x63
  438075:	mov    dh,al
  438077:	mov    esi,0x621824b4
  43807c:	cmp    BYTE PTR [edx+0xcd44],cl
  438082:	add    ah,dh
  438084:	push   ebp
  438085:	loop   0x438071
  438087:	and    ecx,esi
  438089:	or     edx,edx
  43808b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43808c:	and    al,0x10
  43808e:	push   ss
  43808f:	push   eax
  438091:	add    BYTE PTR [eax],al
  438093:	mov    cl,0xa0
  438095:	sbb    eax,0x4605a40c
  43809a:	xor    edi,DWORD PTR [eax-0x71]
  43809d:	mov    esi,0xfc4e15e
  4380a2:	add    BYTE PTR [ebx+ebx*8],cl
  4380a5:	idiv   bh
  4380a7:	mov    al,BYTE PTR [eax+eax*1]
  4380aa:	add    dl,al
  4380ac:	(bad)  
  4380ae:	call   FWORD PTR [edx+0x4]
  4380b1:	add    BYTE PTR [eax],al
  4380b3:	lods   al,BYTE PTR ds:[esi]
  4380b4:	(bad)  
  4380b6:	jmp    DWORD PTR [eax+0x5]
  4380b9:	cmp    eax,DWORD PTR [eax]
  4380bb:	cmp    al,0x5
  4380bd:	cmp    eax,DWORD PTR [eax]
  4380bf:	pop    edx
  4380c0:	add    al,0x0
  4380c2:	add    BYTE PTR ds:0xaffff6db,cl
  4380c8:	sar    BYTE PTR [ecx],1
  4380ca:	add    BYTE PTR [ebx+0x1a0039d0],bl
  4380d0:	add    al,0x0
  4380d2:	add    ch,ch
  4380d4:	(bad)  
  4380d6:	call   FWORD PTR [ebx-0x2f]
  4380d9:	cmp    DWORD PTR [eax],eax
  4380db:	push   edi
  4380dc:	sar    DWORD PTR [ecx],1
  4380de:	add    BYTE PTR [edx],bl
  4380e0:	add    al,0x0
  4380e2:	add    BYTE PTR ds:0xfff6d4,cl
  4380e8:	add    BYTE PTR [eax],al
  4380ea:	ss mov eax,0xb8320039
  4380f0:	cmp    DWORD PTR [eax],eax
  4380f2:	fiadd  DWORD PTR [ebx]
  4380f4:	add    BYTE PTR [eax],al
  4380f6:	lods   eax,DWORD PTR ds:[esi]
  4380f7:	shl    esi,cl
  4380f9:	(bad)  
  4380fa:	mov    ebx,0xb70039b8
  4380ff:	mov    eax,0x3da0039
  438104:	add    BYTE PTR [eax],al
  438106:	(bad)  
  438107:	shl    esi,cl
  438109:	call   FWORD PTR [edx]
  43810b:	inc    esp
  43810c:	cmp    al,BYTE PTR [eax]
  43810e:	repz sar DWORD PTR [esi+edi*1-0x2920d],0xf3
  438117:	mov    BYTE PTR [ebp-0x7],ch
  43811a:	pushf  
  43811b:	ror    DWORD PTR [edx+0x40],0xf3
  43811f:	int    0x4a
  438121:	inc    eax
  438122:	rep ins DWORD PTR es:[edi],dx
  438124:	std    
  438125:	push   ebx
  438127:	call   0x43c07a98
  43812c:	dec    esp
  43812d:	inc    eax
  43812e:	repz xchg edi,eax
  438130:	dec    esp
  438131:	inc    eax
  438132:	rep ins DWORD PTR es:[edi],dx
  438134:	std    
  438135:	push   ebx
  438137:	enter  0xf96c,0x5c
  43813b:	jg     0x4380eb
  43813d:	ds repz dec ebx
  438140:	scas   al,BYTE PTR es:[edi]
  438141:	ds rep ins DWORD PTR es:[edi],dx
  438144:	std    
  438145:	push   ebx
  438147:	sub    BYTE PTR [ebp-0x7],ch
  43814a:	cmp    al,0xdc
  43814c:	push   edi
  43814d:	add    BYTE PTR ds:[eax],al
  438150:	add    bl,dh
  438152:	loopne 0x4381ab
  438154:	ds rep ins DWORD PTR es:[edi],dx
  438157:	std    
  438158:	push   ebx
  43815a:	or     BYTE PTR [ebp-0x7],ch
  43815d:	sbb    al,0x1e
  43815f:	xchg   ebx,eax
  438160:	repz and dl,BYTE PTR ds:[ebx-0x2920cc2]
  438168:	push   ebx
  43816a:	push   0xcbfcf96e
  43816f:	xchg   ebx,eax
  438170:	repz rcl BYTE PTR ds:[ebx-0x2900cc2],1
  438178:	push   ebx
  43817a:	outs   dx,DWORD PTR ds:[esi]
  43817b:	std    
  43817c:	push   ebx
  43817e:	outs   dx,DWORD PTR ds:[esi]
  43817f:	std    
  438180:	push   ebx
  438182:	cli    
  438183:	sub    ah,0x14
  438186:	out    0x67,eax
  438188:	dec    edi
  438189:	and    DWORD PTR [edi],eax
  43818b:	cmp    DWORD PTR [ebx+esi*2-0x9],ebx
  43818f:	out    0x3,al
  438191:	push   ebx
  438192:	clc    
  438193:	out    0x3,al
  438195:	dec    edi
  438196:	clc    
  438197:	out    0x3,al
  438199:	dec    ebx
  43819a:	clc    
  43819b:	out    0x3,al
  43819d:	inc    edi
  43819e:	clc    
  43819f:	out    0x3,al
  4381a1:	psubb  mm4,mm6
  4381a4:	add    ebp,DWORD PTR [edi-0x8]
  4381a7:	out    0x3,al
  4381a9:	jnp    0x4381a3
  4381ab:	out    0x3,al
  4381ad:	ja     0x4381a7
  4381af:	out    0x3,al
  4381b1:	xor    edi,eax
  4381b3:	out    0x3,al
  4381b5:	add    BYTE PTR [eax],al
  4381b7:	add    BYTE PTR [edi],ch
  4381b9:	clc    
  4381ba:	out    0x3,al
  4381bc:	sub    edi,eax
  4381be:	out    0x3,al
  4381c0:	daa    
  4381c1:	clc    
  4381c2:	out    0x3,al
  4381c4:	scas   eax,DWORD PTR es:[edi]
  4381c5:	mul    esi
  4381c7:	add    ecx,edi
  4381c9:	mul    esi
  4381cb:	add    ebx,ebx
  4381cd:	mul    esi
  4381cf:	add    eax,DWORD PTR [ecx+eax*1]
  4381d2:	out    0x3,eax
  4381d4:	adc    edi,eax
  4381d6:	out    0x3,al
  4381d8:	psubb  mm4,mm6
  4381db:	add    ecx,DWORD PTR [ebx]
  4381dd:	clc    
  4381de:	out    0x3,al
  4381e0:	pop    es
  4381e1:	clc    
  4381e2:	out    0x3,al
  4381e4:	iret   
  4381e5:	mul    esi
  4381e7:	add    ebp,DWORD PTR [edi-0x44fc1909]
  4381ed:	mul    esi
  4381ef:	add    esi,DWORD PTR [edi-0xcfc1909]
  4381f5:	mul    esi
  4381f7:	add    ebp,edi
  4381f9:	mul    dh
  4381fb:	add    ebp,ebx
  4381fd:	mul    dh
  4381ff:	add    esp,edi
  438201:	mul    dh
  438203:	add    ebp,edi
  438205:	idiv   edi
  438207:	call   0xe9529cfc
  43820c:	lock cs psubsw mm6,mm0
  438211:	and    cl,BYTE PTR [edi]
  438213:	jmp    0xe953e908
  438218:	lock cmp dl,BYTE PTR [eax]
  43821b:	jmp    0xf0438220
  438220:	ds adc cl,ch
  438223:	lock xor dl,BYTE PTR [eax]
  438226:	jmp    0xe953e51b
  43822b:	lock cli 
  43822d:	push   cs
  43822e:	jmp    0xe9532b23
  438233:	lock add cl,BYTE PTR [edi]
  438236:	jmp    0xe953c92b
  43823b:	lock call 0xe910:0x9ef0e910
  438243:	lock xchg edx,eax
  438245:	adc    cl,ch
  438247:	lock inc edx
  438249:	adc    cl,ch
  43824b:	lock pop edx
  43824d:	adc    cl,ch
  43824f:	lock mov BYTE PTR [edi],cl
  438252:	jmp    0xe953e547
  438257:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438259:	adc    cl,ch
  43825b:	lock jp 0x43826e
  43825e:	jmp    0xe9540153
  438263:	lock jb 0x438276
  438266:	jmp    0xe954255b
  43826b:	lock cmp dl,BYTE PTR [eax]
  43826e:	jmp    0xe9526b63
  438273:	lock inc edx
  438275:	adc    cl,ch
  438277:	lock xchg BYTE PTR [eax],dl
  43827a:	jmp    0xe9535d6f
  43827f:	lock fimul WORD PTR [edi]
  438282:	add    BYTE PTR [eax],al
  438284:	add    BYTE PTR [eax],al
  438286:	retf   0x7408
  438289:	adc    dl,cl
  43828b:	or     BYTE PTR [eax+edx*1+0x10bc08da],al
  438292:	fimul  DWORD PTR [eax]
  438294:	ds adc edx,ecx
  438297:	or     BYTE PTR [eax+edx*1+0x111008ca],ah
  43829e:	call   0x808:0x9a110c08
  4382a5:	adc    DWORD PTR [edx-0x75eefbf8],ecx
  4382ab:	or     BYTE PTR [eax],al
  4382ad:	adc    DWORD PTR [edx-0x65ef03f8],ebx
  4382b3:	or     al,bh
  4382b5:	adc    BYTE PTR [edx-0x75ef0bf8],cl
  4382bb:	or     ah,al
  4382bd:	adc    BYTE PTR [edx+0x8],bl
  4382c0:	rcl    BYTE PTR [eax],0x5a
  4382c3:	or     BYTE PTR [eax+edx*1+0x10b8084a],bh
  4382ca:	dec    edx
  4382cb:	or     BYTE PTR [eax+edx*1+0x10b0085a],dh
  4382d2:	pop    edx
  4382d3:	or     BYTE PTR [eax+edx*1+0x10a8084a],ch
  4382da:	dec    edx
  4382db:	or     BYTE PTR [eax],dh
  4382dd:	adc    BYTE PTR [edx],bl
  4382df:	or     BYTE PTR [eax+edx*1],ch
  4382e2:	sbb    cl,BYTE PTR [eax]
  4382e4:	sub    BYTE PTR [eax],dl
  4382e6:	or     cl,BYTE PTR [eax]
  4382e8:	and    al,0x10
  4382ea:	add    BYTE PTR [eax],al
  4382ec:	add    BYTE PTR [edx],cl
  4382ee:	or     BYTE PTR [eax],ah
  4382f0:	adc    BYTE PTR [edx],bl
  4382f2:	or     BYTE PTR [eax+edx*1],bl
  4382f5:	sbb    cl,BYTE PTR [eax]
  4382f7:	sbb    BYTE PTR [eax],dl
  4382f9:	or     cl,BYTE PTR [eax]
  4382fb:	adc    al,0x10
  4382fd:	or     cl,BYTE PTR [eax]
  4382ff:	adc    BYTE PTR [eax],dl
  438301:	rep ins DWORD PTR es:[edi],dx
  438303:	std    
  438304:	or     eax,DWORD PTR [ebx]
  438306:	outs   dx,BYTE PTR ds:[esi]
  438307:	std    
  438308:	pop    es
  438309:	add    ebp,DWORD PTR [esi-0x3]
  43830c:	add    eax,DWORD PTR [ebx]
  43830e:	outs   dx,BYTE PTR ds:[esi]
  43830f:	std    
  438310:	jmp    ebx
  438312:	ins    DWORD PTR es:[edi],dx
  438313:	std    
  438314:	sti    
  438315:	hlt    
  438316:	ins    DWORD PTR es:[edi],dx
  438317:	std    
  438318:	imul   esp
  43831a:	ins    DWORD PTR es:[edi],dx
  43831b:	std    
  43831c:	repz in al,0x6d
  43831f:	std    
  438320:	out    dx,eax
  438321:	cld    
  438322:	ins    DWORD PTR es:[edi],dx
  438323:	std    
  438324:	jmp    0x43831a
  438326:	ins    DWORD PTR es:[edi],dx
  438327:	std    
  438328:	or     DWORD PTR [edx],eax
  43832a:	outs   dx,BYTE PTR ds:[esi]
  43832b:	std    
  43832c:	shl    esp,cl
  43832e:	ins    DWORD PTR es:[edi],dx
  43832f:	std    
  438330:	test   eax,0xa5fd6de3
  438335:	jecxz  0x4383a4
  438337:	std    
  438338:	mov    eax,0xebfd6de4
  43833d:	fsubr  QWORD PTR [ebp-0x3]
  438340:	inc    BYTE PTR [edx]
  438342:	outs   dx,BYTE PTR ds:[esi]
  438343:	std    
  438344:	mov    ds:0xcbfd6e02,eax
  438349:	in     al,dx
  43834a:	ins    DWORD PTR es:[edi],dx
  43834b:	std    
  43834c:	sub    BYTE PTR [ebx],al
  43834e:	outs   dx,BYTE PTR ds:[esi]
  43834f:	std    
  438350:	mov    edi,0xfc000000
  438355:	ins    DWORD PTR es:[edi],dx
  438356:	std    
  438357:	mov    ebx,0xb7fd6df4
  43835c:	in     al,dx
  43835d:	ins    DWORD PTR es:[edi],dx
  43835e:	std    
  43835f:	mov    bl,0xe4
  438361:	ins    DWORD PTR es:[edi],dx
  438362:	std    
  438363:	mov    bl,0xfc
  438365:	ins    DWORD PTR es:[edi],dx
  438366:	std    
  438367:	scas   eax,DWORD PTR es:[edi]
  438368:	hlt    
  438369:	ins    DWORD PTR es:[edi],dx
  43836a:	std    
  43836b:	stos   DWORD PTR es:[edi],eax
  43836c:	in     al,dx
  43836d:	ins    DWORD PTR es:[edi],dx
  43836e:	std    
  43836f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438370:	in     al,0x6d
  438372:	std    
  438373:	mov    ds:0x9ffd6dfc,eax
  438378:	hlt    
  438379:	ins    DWORD PTR es:[edi],dx
  43837a:	std    
  43837b:	fwait
  43837c:	in     al,dx
  43837d:	push   es
  43837e:	out    0x3,eax
  438380:	pop    ebx
  438381:	or     esp,edi
  438383:	add    eax,DWORD PTR [edi-0x7cfc18f6]
  438389:	or     ah,bh
  43838b:	add    ebp,DWORD PTR [edi+0xa]
  43838e:	out    0x3,eax
  438390:	imul   ecx,DWORD PTR [edx],0xffffffe7
  438393:	add    esi,DWORD PTR [edi+0xa]
  438396:	out    0x3,eax
  438398:	jae    0x4383a4
  43839a:	out    0x3,eax
  43839c:	aas    
  43839d:	or     ah,bh
  43839f:	add    edi,DWORD PTR [ebx]
  4383a1:	or     ah,bh
  4383a3:	add    eax,esi
  4383a5:	or     ah,bh
  4383a7:	add    edx,DWORD PTR [ecx-0x50fc1908]
  4383ad:	clc    
  4383ae:	out    0x3,al
  4383b0:	stos   BYTE PTR es:[edi],al
  4383b1:	or     ah,bh
  4383b3:	add    esp,DWORD PTR [ebx]
  4383b5:	or     ah,bh
  4383b7:	add    eax,DWORD PTR [eax]
  4383b9:	add    BYTE PTR [eax],al
  4383bb:	aaa    
  4383bc:	or     ah,bh
  4383be:	add    ebp,DWORD PTR [ebx]
  4383c0:	or     ah,bh
  4383c2:	add    ebp,DWORD PTR [edi]
  4383c4:	or     ah,bh
  4383c6:	add    esi,DWORD PTR [ebx+0x2703e709]
  4383cc:	or     ah,bh
  4383ce:	add    ebx,DWORD PTR [ebx]
  4383d0:	or     ah,bh
  4383d2:	add    ebx,DWORD PTR [edi]
  4383d4:	or     ah,bh
  4383d6:	add    eax,DWORD PTR [ebx]
  4383d8:	or     ah,bh
  4383da:	add    edx,DWORD PTR [edi]
  4383dc:	or     ah,bh
  4383de:	add    ecx,DWORD PTR [ebx]
  4383e0:	or     ah,bh
  4383e2:	add    ebp,DWORD PTR [ecx-0x1cfc1909]
  4383e8:	or     edi,esp
  4383ea:	add    edx,edi
  4383ec:	or     edi,esp
  4383ee:	add    ecx,ebx
  4383f0:	or     edi,esp
  4383f2:	add    ecx,edi
  4383f4:	or     edi,esp
  4383f6:	add    edx,ebx
  4383f8:	or     DWORD PTR [eax],eax
  4383fa:	jmp    0xe94c7eef
  4383ff:	lock dec BYTE PTR [eax]
  438402:	jmp    0xe94c76f7
  438407:	lock test BYTE PTR [eax],0xe9
  43840b:	lock or cl,BYTE PTR [ecx]
  43840e:	jmp    0xe9542003
  438413:	lock add cl,BYTE PTR [ecx]
  438416:	jmp    0xe94c8b0b
  43841b:	lock pop edx
  43841d:	or     ch,cl
  43841f:	add    BYTE PTR [eax],al
  438421:	add    al,dh
  438423:	pop    esi
  438424:	or     ch,cl
  438426:	lock push edx
  438428:	or     ch,cl
  43842a:	lock ret 0xe90f
  43842e:	lock mov dh,0xf
  438431:	jmp    0xe9539f26
  438436:	lock into 
  438438:	psubsw mm6,mm0
  43843b:	data16 or ch,cl
  43843e:	lock cmp cl,BYTE PTR [edx]
  438441:	jmp    0xe94dc336
  438446:	lock xor cl,BYTE PTR [edx]
  438449:	jmp    0xe94db73e
  43844e:	lock or cl,BYTE PTR [ecx]
  438451:	jmp    0xe94dd346
  438456:	lock inc edx
  438458:	or     ch,cl
  43845a:	lock inc esi
  43845c:	or     ch,cl
  43845e:	lock call 0xe90a:0x9ef0e90a
  438466:	lock xchg edx,eax
  438468:	or     ch,cl
  43846a:	lock xchg edx,eax
  43846c:	or     ch,cl
  43846e:	lock xchg esi,eax
  438470:	or     ch,cl
  438472:	lock stos BYTE PTR es:[edi],al
  438474:	or     al,BYTE PTR [eax]
  438476:	or     al,BYTE PTR ds:0x51a0ea8
  43847c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43847d:	push   cs
  43847e:	sbb    al,BYTE PTR ds:0x50a0ea0
  438484:	pushf  
  438485:	push   cs
  438486:	add    BYTE PTR [eax],al
  438488:	add    BYTE PTR [edx],cl
  43848a:	add    eax,0x4da0e98
  43848f:	loopne 0x43849f
  438491:	fiadd  DWORD PTR [esp+ebx*8]
  438494:	push   cs
  438495:	retf   0xd804
  438498:	push   cs
  438499:	retf   0xd404
  43849c:	push   cs
  43849d:	fiadd  DWORD PTR [eax+edx*8]
  4384a0:	push   cs
  4384a1:	fiadd  DWORD PTR [esp+ecx*8]
  4384a4:	push   cs
  4384a5:	retf   0xc804
  4384a8:	push   cs
  4384a9:	retf   0xc404
  4384ac:	push   cs
  4384ad:	call   0xcf04:0x9a0ed304
  4384b4:	push   cs
  4384b5:	mov    al,BYTE PTR [edi+ebp*4]
  4384b8:	jp     0x9a51e8c2
  4384be:	add    al,0x7e
  4384c0:	setp   BYTE PTR [edx+edi*2]
  4384c4:	jp     0x8a523fce
  4384ca:	add    al,0x3d
  4384cc:	cvtps2pd xmm0,QWORD PTR [esp+ebp*2]
  4384d0:	cvtps2pd xmm0,QWORD PTR [esp+ecx*2]
  4384d4:	push   cs
  4384d5:	dec    edx
  4384d6:	add    al,0x8f
  4384d8:	cmovp  eax,DWORD PTR [esp+eax*2]
  4384dc:	push   cs
  4384dd:	pop    edx
  4384de:	add    al,0x40
  4384e0:	push   cs
  4384e1:	pop    edx
  4384e2:	add    al,0x40
  4384e4:	push   cs
  4384e5:	dec    edx
  4384e6:	add    al,0x68
  4384e8:	push   cs
  4384e9:	dec    edx
  4384ea:	add    al,0x34
  4384ec:	push   cs
  4384ed:	add    BYTE PTR [eax],al
  4384ef:	add    BYTE PTR [edx],bl
  4384f1:	add    al,0x20
  4384f3:	push   cs
  4384f4:	rep ins DWORD PTR es:[edi],dx
  4384f6:	std    
  4384f7:	sbb    ebp,ebp
  4384f9:	ins    DWORD PTR es:[edi],dx
  4384fa:	std    
  4384fb:	pop    ss
  4384fc:	in     eax,0x6d
  4384fe:	std    
  4384ff:	adc    edi,ebp
  438501:	ins    DWORD PTR es:[edi],dx
  438502:	std    
  438503:	and    al,0xf4
  438505:	ins    DWORD PTR es:[edi],dx
  438506:	std    
  438507:	and    ah,ch
  438509:	ins    DWORD PTR es:[edi],dx
  43850a:	std    
  43850b:	pop    ss
  43850c:	in     eax,0x6d
  43850e:	std    
  43850f:	adc    edi,ebp
  438511:	ins    DWORD PTR es:[edi],dx
  438512:	std    
  438513:	test   esp,edi
  438515:	ins    DWORD PTR es:[edi],dx
  438516:	std    
  438517:	mov    ebx,0x4efd6e04
  43851c:	sti    
  43851d:	ins    DWORD PTR es:[edi],dx
  43851e:	std    
  43851f:	test   al,0xeb
  438521:	ins    DWORD PTR es:[edi],dx
  438522:	std    
  438523:	and    eax,0x77fd6dea
  438528:	fisubr DWORD PTR [ebp-0x3]
  43852b:	(bad)  
  43852d:	ins    DWORD PTR es:[edi],dx
  43852e:	std    
  43852f:	or     DWORD PTR cs:[esi-0x3],ebp
  438533:	repz imul BYTE PTR [ebp-0x3]
  438537:	out    dx,eax
  438538:	out    dx,al
  438539:	ins    DWORD PTR es:[edi],dx
  43853a:	std    
  43853b:	jmp    0x438523
  43853d:	ins    DWORD PTR es:[edi],dx
  43853e:	std    
  43853f:	out    0xfe,eax
  438541:	ins    DWORD PTR es:[edi],dx
  438542:	std    
  438543:	jecxz  0x43853b
  438545:	ins    DWORD PTR es:[edi],dx
  438546:	std    
  438547:	fucomip st,st(6)
  438549:	ins    DWORD PTR es:[edi],dx
  43854a:	std    
  43854b:	(bad)  
  43854d:	ins    DWORD PTR es:[edi],dx
  43854e:	std    
  43854f:	xlat   BYTE PTR ds:[ebx]
  438550:	(bad)  
  438551:	ins    DWORD PTR es:[edi],dx
  438552:	std    
  438553:	sldt   WORD PTR [eax]
  438556:	add    ch,dh
  438558:	ins    DWORD PTR es:[edi],dx
  438559:	std    
  43855a:	or     ebp,ebp
  43855c:	ins    DWORD PTR es:[edi],dx
  43855d:	std    
  43855e:	shl    esp,0x6d
  438561:	std    
  438562:	(bad)  
  438563:	(bad)  
  438564:	ins    DWORD PTR es:[edi],dx
  438565:	std    
  438566:	mov    edi,0xbbfd6df6
  43856b:	out    dx,al
  43856c:	ins    DWORD PTR es:[edi],dx
  43856d:	std    
  43856e:	mov    bh,0xe6
  438570:	push   es
  438571:	out    0x3,eax
  438573:	addr16 or edi,esp
  438576:	add    ebp,DWORD PTR [ecx+0x4f03e708]
  43857c:	or     edi,esp
  43857e:	add    eax,DWORD PTR [esi]
  438580:	icebp  
  438581:	out    0x3,al
  438583:	shl    eax,0xe6
  438586:	add    edx,DWORD PTR [ebx+0x9]
  438589:	out    0x3,eax
  43858b:	pop    edi
  43858c:	or     edi,esp
  43858e:	add    eax,edi
  438590:	mul    dh
  438592:	add    eax,DWORD PTR [ebp-0x9]
  438595:	out    0x3,al
  438597:	add    DWORD PTR [edi+eiz*8],0x3
  43859b:	outs   dx,DWORD PTR ds:[esi]
  43859c:	add    al,0xe7
  43859e:	add    ebp,DWORD PTR [ebx+0x4]
  4385a1:	out    0x3,eax
  4385a3:	ja     0x4385a9
  4385a5:	out    0x3,eax
  4385a7:	jae    0x4385ad
  4385a9:	out    0x3,eax
  4385ab:	aas    
  4385ac:	add    al,0xe7
  4385ae:	add    ecx,DWORD PTR [ebx-0x4ffc1909]
  4385b4:	mul    esi
  4385b6:	add    eax,ebp
  4385b8:	mul    esi
  4385ba:	add    eax,DWORD PTR [eax]
  4385bc:	add    BYTE PTR [eax],al
  4385be:	call   0xe704:0x3b03e6f7
  4385c5:	add    esp,DWORD PTR [edi]
  4385c7:	add    al,0xe7
  4385c9:	add    ecx,DWORD PTR [ecx+0x6]
  4385cc:	out    0x3,eax
  4385ce:	pop    ds
  4385cf:	add    al,0xe7
  4385d1:	add    ebx,DWORD PTR [ebx]
  4385d3:	add    al,0xe7
  4385d5:	add    eax,edi
  4385d7:	add    esp,edi
  4385d9:	add    eax,ebx
  4385db:	add    esp,edi
  4385dd:	add    ebp,DWORD PTR [edi-0x6efc18fd]
  4385e3:	push   es
  4385e4:	out    0x3,eax
  4385e6:	mov    bh,0x3
  4385e8:	out    0x3,eax
  4385ea:	imul   eax,DWORD PTR [esi],0x22f0e900
  4385f0:	or     ebp,ecx
  4385f2:	lock push cs
  4385f4:	or     ebp,ecx
  4385f6:	lock test BYTE PTR [ecx],cl
  4385f9:	jmp    0xe94eacee
  4385fe:	lock repnz or ch,cl
  438602:	lock out dx,al
  438604:	or     ch,cl
  438606:	lock cli 
  438608:	or     ch,cl
  43860a:	lock test BYTE PTR [edx],0xe9
  43860e:	lock add cl,BYTE PTR [ebx]
  438611:	jmp    0xe94e8506
  438616:	lock or cl,BYTE PTR [ebx]
  438619:	jmp    0xe958100e
  43861e:	lock push edx
  438620:	or     al,0xe9
  438622:	add    BYTE PTR [eax],al
  438624:	add    al,dh
  438626:	dec    esi
  438627:	or     al,0xe9
  438629:	lock pop edx
  43862b:	or     al,0xe9
  43862d:	lock push esi
  43862f:	or     al,0xe9
  438631:	lock bound ecx,QWORD PTR [ecx+ebp*8]
  438635:	lock pop esi
  438637:	or     al,0xe9
  438639:	lock push 0xc
  43863c:	jmp    0xe94da531
  438641:	lock sub cl,BYTE PTR [edx]
  438644:	jmp    0xe94dad39
  438649:	lock repnz or ecx,ebp
  43864d:	lock adc BYTE PTR [ecx],cl
  438650:	jmp    0xe94ca345
  438655:	lock sbb BYTE PTR [ecx],cl
  438658:	jmp    0xe94cab4d
  43865d:	lock inc esi
  43865f:	or     al,0xe9
  438661:	lock xchg edx,eax
  438663:	or     al,0xe9
  438665:	lock mov cs,WORD PTR [eax+eax*1]
  438669:	pop    edx
  43866a:	or     DWORD PTR [esp+ecx*1+0xcb0095a],esi
  438671:	dec    edx
  438672:	or     DWORD PTR [esp+ecx*1+0xca8094a],ebp
  438679:	sbb    cl,BYTE PTR [ecx]
  43867b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43867c:	or     al,0x1a
  43867e:	or     DWORD PTR [eax-0x53f6f5f4],esi
  438684:	or     al,0xa
  438686:	or     DWORD PTR [eax+0xc],ebp
  43868c:	sbb    cl,BYTE PTR [ecx]
  43868e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43868f:	or     al,0x1a
  438691:	or     DWORD PTR [eax-0x63f6f5f4],esp
  438697:	or     al,0xa
  438699:	or     esi,ebp
  43869b:	push   cs
  43869c:	fimul  DWORD PTR [eax]
  43869e:	jmp    0xca15:0xbc08da0e
  4386a5:	or     dl,ah
  4386a7:	push   cs
  4386a8:	retf   0xd308
  4386ab:	adc    eax,0xeda08da
  4386b0:	fimul  DWORD PTR [eax]
  4386b2:	(bad)  
  4386b3:	push   cs
  4386b4:	retf   0xd208
  4386b7:	push   cs
  4386b8:	retf   0xce08
  4386bb:	push   cs
  4386bc:	call   0x6008:0x9a0eca08
  4386c3:	or     al,0x8a
  4386c5:	or     BYTE PTR [esp+ecx*1-0x76],bl
  4386c9:	or     BYTE PTR [eax+0xc],bl
  4386cc:	call   0x5008:0x9a0c5408
  4386d3:	or     al,0x8a
  4386d5:	or     BYTE PTR [esp+ecx*1-0x76],cl
  4386d9:	or     BYTE PTR [eax+0xc],cl
  4386dc:	pop    edx
  4386dd:	or     BYTE PTR [esp+ecx*1+0x5a],al
  4386e1:	or     BYTE PTR [eax+0xc],al
  4386e4:	repz pop ebp
  4386e6:	std    
  4386e7:	cmp    esp,edi
  4386e9:	pop    ebp
  4386ea:	std    
  4386eb:	aaa    
  4386ec:	call   FWORD PTR [ebp-0x3]
  4386ef:	xor    eax,DWORD PTR [eax]
  4386f1:	add    BYTE PTR [eax],al
  4386f3:	neg    DWORD PTR [ebp-0x3]
  4386f6:	das    
  4386f7:	out    dx,eax
  4386f8:	pop    ebp
  4386f9:	std    
  4386fa:	sub    esp,edi
  4386fc:	pop    ebp
  4386fd:	std    
  4386fe:	daa    
  4386ff:	call   FWORD PTR [ebp-0x3]
  438702:	and    esi,edi
  438704:	pop    ebp
  438705:	std    
  438706:	pop    ds
  438707:	out    dx,eax
  438708:	pop    ebp
  438709:	std    
  43870a:	sbb    esp,edi
  43870c:	pop    ebp
  43870d:	std    
  43870e:	pop    ss
  43870f:	call   FWORD PTR [ebp-0x3]
  438712:	adc    esi,edi
  438714:	pop    ebp
  438715:	std    
  438716:	pxor   mm3,QWORD PTR [ebp-0x3]
  43871a:	or     esp,edi
  43871c:	pop    ebp
  43871d:	std    
  43871e:	pop    es
  43871f:	call   FWORD PTR [ebp-0x3]
  438722:	add    esi,edi
  438724:	pop    ebp
  438725:	std    
  438726:	(bad)  
  438727:	out    dx,eax
  438728:	pop    ebp
  438729:	std    
  43872a:	sti    
  43872b:	call   0xf93b848d
  438730:	pop    ebp
  438731:	std    
  438732:	repz clc 
  438734:	pop    ebp
  438735:	std    
  438736:	out    dx,eax
  438737:	call   0xe92f8499
  43873c:	pop    ebp
  43873d:	std    
  43873e:	out    0xf8,eax
  438740:	pop    ebp
  438741:	std    
  438742:	jecxz  0x43873c
  438744:	pop    ebp
  438745:	std    
  438746:	fucomip st,st(0)
  438748:	pop    ebp
  438749:	std    
  43874a:	fucomi st,st(0)
  43874c:	pop    ebp
  43874d:	std    
  43874e:	xlat   BYTE PTR ds:[ebx]
  43874f:	clc    
  438750:	pop    ebp
  438751:	std    
  438752:	sar    eax,cl
  438754:	pop    ebp
  438755:	std    
  438756:	iret   
  438757:	add    BYTE PTR [eax],al
  438759:	add    al,ch
  43875b:	pop    ebp
  43875c:	std    
  43875d:	retf   
  43875e:	call   0xf90b84c0
  438763:	push   es
  438764:	out    0x3,eax
  438766:	das    
  438767:	jmp    esi
  438769:	add    esi,DWORD PTR [ebx]
  43876b:	jmp    esi
  43876d:	add    edx,DWORD PTR [edi-0x74fc1901]
  438773:	jmp    esi
  438775:	add    edi,DWORD PTR [edi-0x1]
  438778:	out    0x3,al
  43877a:	xor    al,0xff
  43877c:	out    0x3,al
  43877e:	xor    bh,bh
  438780:	out    0x3,al
  438782:	pop    ebx
  438783:	jmp    esi
  438785:	add    ecx,DWORD PTR [edi-0x1]
  438788:	out    0x3,al
  43878a:	push   ebx
  43878b:	jmp    esi
  43878d:	add    ebp,DWORD PTR [ecx-0xa]
  438790:	out    0x3,al
  438792:	loopne 0x438789
  438794:	out    0x3,al
  438796:	addr16 cmc 
  438798:	out    0x3,al
  43879a:	arpl   di,di
  43879c:	out    0x3,al
  43879e:	addr16 jmp esi
  4387a1:	add    edi,DWORD PTR [ebx-0x2]
  4387a4:	out    0x3,al
  4387a6:	jg     0x4387a6
  4387a8:	out    0x3,al
  4387aa:	jae    0x4387aa
  4387ac:	out    0x3,al
  4387ae:	push   edi
  4387af:	(bad)  
  4387b0:	out    0x3,al
  4387b2:	rol    DWORD PTR [edi+eiz*8],1
  4387b5:	add    esp,DWORD PTR [ebp+0x4303e704]
  4387bb:	(bad)  
  4387bc:	out    0x3,al
  4387be:	add    BYTE PTR [eax],al
  4387c0:	add    BYTE PTR [edi-0x2],al
  4387c3:	out    0x3,al
  4387c5:	sbb    edi,esi
  4387c7:	out    0x3,al
  4387c9:	paddd  mm4,mm6
  4387cc:	add    esp,DWORD PTR [ebx-0x2]
  4387cf:	out    0x3,al
  4387d1:	inc    edi
  4387d2:	(bad)  
  4387d3:	out    0x3,al
  4387d5:	je     0x4387da
  4387d7:	out    0x3,eax
  4387d9:	jo     0x4387de
  4387db:	out    0x3,eax
  4387dd:	cld    
  4387de:	add    al,BYTE PTR [eax]
  4387e0:	jmp    0xe94f55d5
  4387e5:	lock outs dx,BYTE PTR ds:[esi]
  4387e7:	add    eax,0x57af0e9
  4387ec:	jmp    0xe948fee1
  4387f1:	lock add BYTE PTR ds:0x57ef0e9,0xe9
  4387f9:	lock mov al,BYTE PTR ds:0x586f0e9
  438800:	jmp    0xe9485af5
  438805:	lock into 
  438807:	add    al,0xe9
  438809:	lock fiadd DWORD PTR [ecx+ebp*8]
  43880d:	lock es add eax,0x4f2f0e9
  438814:	jmp    0xe9487709
  438819:	lock cli 
  43881b:	add    al,0xe9
  43881d:	lock test BYTE PTR [ecx+ebp*8],0xf0
  438822:	add    al,BYTE PTR ds:0xe9
  438828:	lock inc BYTE PTR [ecx+ebp*8]
  43882c:	lock or al,BYTE PTR ds:0x506f0e9
  438833:	jmp    0xe949db28
  438838:	lock dec esi
  43883a:	push   es
  43883b:	jmp    0xe949e330
  438840:	lock push esi
  438842:	push   es
  438843:	jmp    0xe949eb38
  438848:	lock pop esi
  43884a:	push   es
  43884b:	jmp    0xe949f340
  438850:	lock push esi
  438852:	push   es
  438853:	jmp    0xe949eb48
  438858:	lock pop esi
  43885a:	push   es
  43885b:	add    BYTE PTR [edx-0x75f52bfb],bl
  438861:	add    eax,0x58a0b43
  438866:	int3   
  438867:	or     bl,BYTE PTR [edx+0x5]
  43886a:	cs or  eax,0xd2a055a
  438870:	dec    edx
  438871:	add    eax,0x54a0ad0
  438876:	int3   
  438877:	or     bl,BYTE PTR [edx+0x5]
  43887a:	enter  0x5a0a,0x5
  43887e:	mov    ah,0xa
  438880:	dec    edx
  438881:	add    eax,0x54a0b23
  438886:	lods   al,BYTE PTR ds:[esi]
  438887:	or     bl,BYTE PTR [edx]
  438889:	add    eax,0x1168
  43888e:	add    BYTE PTR [edx],bl
  438890:	add    eax,0x50a0aa4
  438895:	mov    al,ds:0x9c050a0a
  43889a:	or     bl,BYTE PTR [edx]
  43889c:	add    eax,0x51a0a98
  4388a1:	xchg   esp,eax
  4388a2:	or     cl,BYTE PTR [edx]
  4388a4:	add    eax,0x50a0a90
  4388a9:	mov    WORD PTR [edx],cs
  4388ab:	fiadd  DWORD PTR [eax+ecx*4]
  4388ae:	or     bl,dl
  4388b0:	add    al,0x84
  4388b2:	or     cl,dl
  4388b4:	add    al,0x80
  4388b6:	or     cl,dl
  4388b8:	add    al,0x8c
  4388ba:	or     bl,dl
  4388bc:	add    al,0xec
  4388be:	push   cs
  4388bf:	fiadd  DWORD PTR [esp+esi*2]
  4388c2:	or     cl,dl
  4388c4:	add    al,0x70
  4388c6:	or     cl,dl
  4388c8:	add    al,0x6c
  4388ca:	or     bl,BYTE PTR [edx-0x65f597fc]
  4388d0:	add    al,0x64
  4388d2:	or     cl,BYTE PTR [edx-0xcf59ffc]
  4388d8:	pop    ebp
  4388d9:	std    
  4388da:	pop    ebx
  4388db:	stc    
  4388dc:	pop    ebp
  4388dd:	std    
  4388de:	push   edi
  4388df:	stc    
  4388e0:	pop    ebp
  4388e1:	std    
  4388e2:	push   ebx
  4388e3:	jmp    0xe9938645
  4388e8:	pop    ebp
  4388e9:	std    
  4388ea:	dec    ebx
  4388eb:	stc    
  4388ec:	pop    ebp
  4388ed:	std    
  4388ee:	inc    edi
  4388ef:	stc    
  4388f0:	pop    ebp
  4388f1:	std    
  4388f2:	(bad)  
  4388f3:	add    BYTE PTR [eax],al
  4388f5:	add    ch,ch
  4388f7:	pop    ebp
  4388f8:	std    
  4388f9:	dec    edi
  4388fa:	jmp    0xf98f865c
  4388ff:	pop    ebp
  438900:	std    
  438901:	inc    edi
  438902:	stc    
  438903:	pop    ebp
  438904:	std    
  438905:	inc    ebx
  438906:	jmp    0xe9838668
  43890b:	pop    ebp
  43890c:	std    
  43890d:	cmp    edi,ecx
  43890f:	pop    ebp
  438910:	std    
  438911:	aaa    
  438912:	stc    
  438913:	pop    ebp
  438914:	std    
  438915:	xor    ebp,ecx
  438917:	pop    ebp
  438918:	std    
  438919:	pop    ds
  43891a:	jmp    0xf95f867c
  43891f:	pop    ebp
  438920:	std    
  438921:	pop    ss
  438922:	stc    
  438923:	pop    ebp
  438924:	std    
  438925:	adc    ebp,ecx
  438927:	pop    ebp
  438928:	std    
  438929:	psubsw mm3,QWORD PTR [ebp-0x3]
  43892d:	or     edi,ecx
  43892f:	pop    ebp
  438930:	std    
  438931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438932:	clc    
  438933:	pop    ebp
  438934:	std    
  438935:	add    ebp,ecx
  438937:	pop    ebp
  438938:	std    
  438939:	(bad)  
  43893a:	jmp    0xfb3f869c
  43893f:	pop    ebp
  438940:	std    
  438941:	idiv   edx
  438943:	pop    ebp
  438944:	std    
  438945:	repz jmp 0xfd5d:0xeaeffd5d
  43894d:	jmp    0x438949
  43894f:	pop    ebp
  438950:	std    
  438951:	out    0xfa,eax
  438953:	push   es
  438954:	out    0x3,eax
  438956:	xchg   edi,eax
  438957:	std    
  438958:	out    0x3,al
  43895a:	add    BYTE PTR [eax],al
  43895c:	add    BYTE PTR [ebx-0x50fc1903],dl
  438962:	std    
  438963:	out    0x3,al
  438965:	stos   DWORD PTR es:[edi],eax
  438966:	std    
  438967:	out    0x3,al
  438969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43896a:	std    
  43896b:	out    0x3,al
  43896d:	mov    ds:0x3f03e6fd,eax
  438972:	std    
  438973:	out    0x3,al
  438975:	int3   
  438976:	sti    
  438977:	out    0x3,al
  438979:	aaa    
  43897a:	std    
  43897b:	out    0x3,al
  43897d:	xor    edi,ebp
  43897f:	out    0x3,al
  438981:	(bad)  
  438982:	std    
  438983:	out    0x3,al
  438985:	mov    edi,ebp
  438987:	out    0x3,al
  438989:	xchg   ebp,edi
  43898b:	out    0x3,al
  43898d:	cmp    ebp,0xffffffe6
  438990:	add    ebx,DWORD PTR [edi-0x3]
  438993:	out    0x3,al
  438995:	pop    ebx
  438996:	std    
  438997:	out    0x3,al
  438999:	push   edi
  43899a:	std    
  43899b:	out    0x3,al
  43899d:	pop    ss
  43899e:	sti    
  43899f:	out    0x3,al
  4389a1:	outs   dx,DWORD PTR ds:[esi]
  4389a2:	std    
  4389a3:	out    0x3,al
  4389a5:	imul   edi,ebp,0xffffffe6
  4389a8:	add    esp,DWORD PTR [edi-0x3]
  4389ab:	out    0x3,al
  4389ad:	arpl   bp,di
  4389af:	out    0x3,al
  4389b1:	jg     0x4389b3
  4389b3:	out    0x3,eax
  4389b5:	jnp    0x4389b7
  4389b7:	out    0x3,eax
  4389b9:	ja     0x4389bb
  4389bb:	out    0x3,eax
  4389bd:	jae    0x4389bf
  4389bf:	out    0x3,eax
  4389c1:	add    BYTE PTR [eax],al
  4389c3:	add    BYTE PTR [edi+0x0],cl
  4389c6:	out    0x3,eax
  4389c8:	dec    ebx
  4389c9:	add    bh,ah
  4389cb:	add    eax,DWORD PTR [edi+0x0]
  4389ce:	out    0x3,eax
  4389d0:	inc    ebx
  4389d1:	add    BYTE PTR [eax],al
  4389d3:	jmp    0xe94a64c8
  4389d8:	lock fiadd WORD PTR [esi]
  4389db:	jmp    0xe948c6d0
  4389e0:	lock out 0x6,al
  4389e3:	jmp    0xe94a34d8
  4389e8:	lock scas al,BYTE PTR es:[edi]
  4389ea:	push   es
  4389eb:	jmp    0xe94a3ce0
  4389f0:	lock mov dh,0x6
  4389f3:	jmp    0xe94a44e8
  4389f8:	lock mov esi,0xc2f0e906
  4389fe:	push   es
  4389ff:	jmp    0xe94a50f4
  438a04:	lock or al,BYTE PTR [edi]
  438a07:	jmp    0xe94a98fc
  438a0c:	lock adc al,BYTE PTR [edi]
  438a0f:	jmp    0xe948fb04
  438a14:	lock je 0x438a1c
  438a17:	jmp    0xe949030c
  438a1c:	lock jl 0x438a24
  438a1f:	jmp    0xe94aa014
  438a24:	lock test BYTE PTR ds:0xe9,al
  438a2b:	lock mov BYTE PTR ds:0x4ccf0e9,al
  438a32:	jmp    0xe94ab027
  438a37:	lock sub DWORD PTR [edi],eax
  438a3a:	jmp    0xe948632f
  438a3f:	lock icebp 
  438a41:	push   es
  438a42:	jmp    0xe9486b37
  438a47:	lock in al,0x4
  438a4a:	jmp    0x48733f
  438a4f:	retf   0x5a09
  438a52:	or     ecx,edx
  438a54:	or     eax,esi
  438a56:	or     BYTE PTR [edx-0x65f713f7],bl
  438a5c:	or     eax,ebp
  438a5e:	or     BYTE PTR [edx-0x75f4b5f7],cl
  438a64:	or     ecx,esi
  438a66:	or     BYTE PTR [edx-0x65f712f7],bl
  438a6c:	or     ecx,ebp
  438a6e:	or     BYTE PTR [edx-0x75f71af7],cl
  438a74:	or     ecx,esp
  438a76:	or     BYTE PTR [edx+0x9],bl
  438a79:	fisttp QWORD PTR [eax]
  438a7b:	pop    edx
  438a7c:	or     DWORD PTR [esi],ebp
  438a7e:	or     ecx,DWORD PTR [edx+0x9]
  438a81:	sub    cl,BYTE PTR [ebx]
  438a83:	dec    edx
  438a84:	or     ecx,edx
  438a86:	or     BYTE PTR [edx+0x9],bl
  438a89:	int    0x8
  438a8b:	pop    edx
  438a8c:	or     ecx,ecx
  438a8e:	or     BYTE PTR [eax],al
  438a90:	add    BYTE PTR [eax],al
  438a92:	dec    edx
  438a93:	or     ebp,eax
  438a95:	or     BYTE PTR [edx+0x9],cl
  438a98:	push   ss
  438a99:	or     ebx,DWORD PTR [edx]
  438a9b:	or     DWORD PTR [edx],edx
  438a9d:	or     ebx,DWORD PTR [edx]
  438a9f:	or     DWORD PTR [esi],ecx
  438aa1:	or     ecx,DWORD PTR [edx]
  438aa3:	or     DWORD PTR [edx],ecx
  438aa5:	or     ecx,DWORD PTR [edx]
  438aa7:	or     DWORD PTR [ecx-0x52f6e5f8],esi
  438aad:	or     BYTE PTR [edx],bl
  438aaf:	or     DWORD PTR [ecx-0x5af6f5f8],ebp
  438ab5:	or     BYTE PTR [edx],cl
  438ab7:	or     DWORD PTR [ecx-0x62f725f8],esp
  438abd:	or     dl,bl
  438abf:	or     dh,ch
  438ac1:	or     cl,dl
  438ac3:	or     BYTE PTR [ebp-0x6ef735f8],dl
  438ac9:	or     bl,dh
  438acb:	pop    ebp
  438acc:	std    
  438acd:	xchg   edx,eax
  438ace:	sti    
  438acf:	pop    ebp
  438ad0:	std    
  438ad1:	mov    gs,ebx
  438ad3:	pop    ebp
  438ad4:	std    
  438ad5:	mov    ch,bl
  438ad7:	pop    ebp
  438ad8:	std    
  438ad9:	xchg   bl,bh
  438adb:	pop    ebp
  438adc:	std    
  438add:	cmp    bl,0x5d
  438ae0:	std    
  438ae1:	jle    0x438ace
  438ae3:	pop    ebp
  438ae4:	std    
  438ae5:	jp     0x438ad2
  438ae7:	pop    ebp
  438ae8:	std    
  438ae9:	jbe    0x438ae6
  438aeb:	pop    ebp
  438aec:	std    
  438aed:	jb     0x438aea
  438aef:	pop    ebp
  438af0:	std    
  438af1:	shr    ecx,0x5d
  438af4:	std    
  438af5:	mov    ebp,0xe9000000
  438afa:	pop    ebp
  438afb:	std    
  438afc:	mov    ecx,0xb5fd5df9
  438b01:	stc    
  438b02:	pop    ebp
  438b03:	std    
  438b04:	mov    cl,0xe9
  438b06:	pop    ebp
  438b07:	std    
  438b08:	lods   eax,DWORD PTR ds:[esi]
  438b09:	jmp    0xf9ed886b
  438b0e:	pop    ebp
  438b0f:	std    
  438b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438b11:	stc    
  438b12:	pop    ebp
  438b13:	std    
  438b14:	mov    eax,ds:0x9dfd5de9
  438b19:	jmp    0xf9dd887b
  438b1e:	pop    ebp
  438b1f:	std    
  438b20:	xchg   ebp,eax
  438b21:	stc    
  438b22:	pop    ebp
  438b23:	std    
  438b24:	xchg   ecx,eax
  438b25:	jmp    0xe9d18887
  438b2a:	pop    ebp
  438b2b:	std    
  438b2c:	mov    ecx,edi
  438b2e:	pop    ebp
  438b2f:	std    
  438b30:	test   ecx,edi
  438b32:	pop    ebp
  438b33:	std    
  438b34:	sub    ecx,0xe97dfd5d
  438b3a:	pop    ebp
  438b3b:	std    
  438b3c:	jns    0x438b37
  438b3e:	pop    ebp
  438b3f:	std    
  438b40:	jne    0x438b3b
  438b42:	pop    ebp
  438b43:	std    
  438b44:	jno    0x438b2f
  438b46:	push   es
  438b47:	out    0x3,eax
  438b49:	inc    ebp
  438b4a:	add    edi,esp
  438b4c:	add    ebx,DWORD PTR [ecx+0x1]
  438b4f:	out    0x3,eax
  438b51:	dec    ebp
  438b52:	add    edi,esp
  438b54:	add    edx,DWORD PTR [ecx+0x1]
  438b57:	out    0x3,eax
  438b59:	adc    eax,0x3e701
  438b5e:	add    BYTE PTR [eax],al
  438b60:	dec    ecx
  438b61:	add    edi,esp
  438b63:	add    edi,DWORD PTR ds:0x4103e701
  438b69:	add    edi,esp
  438b6b:	add    esp,DWORD PTR ds:0x3903e701
  438b71:	add    edi,esp
  438b73:	add    ebp,DWORD PTR ds:0x3103e701
  438b79:	add    edi,esp
  438b7b:	add    esi,DWORD PTR [ebp+0x2903e700]
  438b81:	add    edi,esp
  438b83:	add    ebx,DWORD PTR ds:0x2103e701
  438b89:	add    edi,esp
  438b8b:	add    eax,DWORD PTR ds:0x1903e701
  438b91:	add    edi,esp
  438b93:	add    ecx,DWORD PTR ds:0x1103e701
  438b99:	add    edi,esp
  438b9b:	add    edx,ebp
  438b9d:	add    bh,ah
  438b9f:	add    ecx,DWORD PTR [ecx]
  438ba1:	add    edi,esp
  438ba3:	add    edi,ebp
  438ba5:	add    bh,ah
  438ba7:	add    eax,DWORD PTR [ecx]
  438ba9:	add    edi,esp
  438bab:	add    esp,ebp
  438bad:	add    bh,ah
  438baf:	add    edi,ecx
  438bb1:	add    bh,ah
  438bb3:	add    ebp,ebp
  438bb5:	add    bh,ah
  438bb7:	add    esi,ecx
  438bb9:	add    bh,ah
  438bbb:	add    esi,ebp
  438bbd:	cld    
  438bbe:	out    0x3,al
  438bc0:	jmp    0x12c8bc5
  438bc5:	add    BYTE PTR [eax],al
  438bc7:	lock push eax
  438bc9:	pop    es
  438bca:	jmp    0xe94ae0bf
  438bcf:	lock pop eax
  438bd1:	pop    es
  438bd2:	jmp    0xe94ae8c7
  438bd7:	lock pusha 
  438bd9:	pop    es
  438bda:	jmp    0xe94af0cf
  438bdf:	lock sub BYTE PTR [edi],al
  438be2:	jmp    0xe94ab8d7
  438be7:	lock xor BYTE PTR [edi],al
  438bea:	jmp    0xe94ac0df
  438bef:	lock cmp BYTE PTR [edi],al
  438bf2:	jmp    0xe94ac8e7
  438bf7:	lock inc eax
  438bf9:	pop    es
  438bfa:	jmp    0xe94ad0ef
  438bff:	lock mov BYTE PTR [edi],al
  438c02:	jmp    0xe94b18f7
  438c07:	lock nop
  438c09:	pop    es
  438c0a:	jmp    0xe94b20ff
  438c0f:	lock cwde 
  438c11:	pop    es
  438c12:	jmp    0xe94b2907
  438c17:	lock mov al,ds:0xa4f0e907
  438c1d:	pop    es
  438c1e:	jmp    0xe94af513
  438c23:	lock ins BYTE PTR es:[edi],dx
  438c25:	pop    es
  438c26:	jmp    0xe94afd1b
  438c2b:	add    BYTE PTR [eax],al
  438c2d:	add    al,dh
  438c2f:	je     0x438c38
  438c31:	jmp    0xe94b0526
  438c36:	lock jl 0x438c40
  438c39:	jmp    0xe94b0d2e
  438c3e:	lock test BYTE PTR [edi],al
  438c41:	add    BYTE PTR [edx],cl
  438c43:	push   es
  438c44:	jp     0x438c4f
  438c46:	fiadd  DWORD PTR ds:0x5da0976
  438c4c:	jb     0x438c57
  438c4e:	retf   0x6e05
  438c51:	or     edx,ecx
  438c53:	add    eax,0x5da096a
  438c58:	or     dx,bx
  438c5b:	add    eax,0x5ca0962
  438c60:	pop    esi
  438c61:	or     edx,ecx
  438c63:	add    eax,0x59a095a
  438c68:	push   esi
  438c69:	or     DWORD PTR [edx-0x75f6adfb],ebx
  438c6f:	add    eax,0x58a094e
  438c74:	dec    edx
  438c75:	or     DWORD PTR [edx-0x65f6b9fb],ebx
  438c7b:	add    eax,0x58a0942
  438c80:	or     DWORD PTR ds:[edx+0x5a093a05],ecx
  438c87:	add    eax,0x55a0936
  438c8c:	xor    cl,BYTE PTR [ecx]
  438c8e:	dec    edx
  438c8f:	add    eax,0x92e
  438c94:	add    BYTE PTR [edx+0x5],cl
  438c97:	sub    cl,BYTE PTR [ecx]
  438c99:	pop    edx
  438c9a:	add    eax,0x55a0926
  438c9f:	and    cl,BYTE PTR [ecx]
  438ca1:	dec    edx
  438ca2:	add    eax,0x54a091e
  438ca7:	sbb    cl,BYTE PTR [ecx]
  438ca9:	sbb    al,BYTE PTR ds:0x51a0916
  438caf:	adc    cl,BYTE PTR [ecx]
  438cb1:	or     al,BYTE PTR ds:0x50a090e
  438cb7:	or     cl,BYTE PTR [ecx]
  438cb9:	sbb    al,BYTE PTR ds:0x5ff30906
  438cbf:	std    
  438cc0:	add    eax,0x1fd5fea
  438cc5:	jmp    0xfd5d:0xfbfdfd5f
  438ccc:	stc    
  438ccd:	sti    
  438cce:	pop    ebp
  438ccf:	std    
  438cd0:	cmc    
  438cd1:	jmp    0x438d30
  438cd3:	std    
  438cd4:	icebp  
  438cd5:	jmp    0x438d34
  438cd7:	std    
  438cd8:	in     eax,dx
  438cd9:	sti    
  438cda:	pop    ebp
  438cdb:	std    
  438cdc:	jmp    0xe640eadc
  438ce1:	jmp    0x438d40
  438ce3:	std    
  438ce4:	loope  0x438cd1
  438ce6:	pop    ebp
  438ce7:	std    
  438ce8:	(bad)  
  438cea:	pop    ebp
  438ceb:	std    
  438cec:	fsincos 
  438cee:	pop    ebp
  438cef:	std    
  438cf0:	aad    0xeb
  438cf2:	pop    ebp
  438cf3:	std    
  438cf4:	shr    ebx,1
  438cf6:	pop    ebp
  438cf7:	std    
  438cf8:	int    0x0
  438cfa:	add    BYTE PTR [eax],al
  438cfc:	sti    
  438cfd:	pop    ebp
  438cfe:	std    
  438cff:	leave  
  438d00:	sti    
  438d01:	pop    ebp
  438d02:	std    
  438d03:	vminsd xmm7,xmm2,xmm5
  438d07:	shr    ebx,0x5d
  438d0a:	std    
  438d0b:	mov    ebp,0xb9fd5dfb
  438d10:	sti    
  438d11:	pop    ebp
  438d12:	std    
  438d13:	mov    ch,0xeb
  438d15:	pop    ebp
  438d16:	std    
  438d17:	mov    cl,0xeb
  438d19:	pop    ebp
  438d1a:	std    
  438d1b:	lods   eax,DWORD PTR ds:[esi]
  438d1c:	sti    
  438d1d:	pop    ebp
  438d1e:	std    
  438d1f:	test   eax,0xa5fd5dfb
  438d24:	jmp    0x438d83
  438d26:	std    
  438d27:	mov    eax,ds:0x9dfd5deb
  438d2c:	sti    
  438d2d:	pop    ebp
  438d2e:	std    
  438d2f:	cdq    
  438d30:	sti    
  438d31:	pop    ebp
  438d32:	std    
  438d33:	xchg   ebp,eax
  438d34:	jmp    0x438d93
  438d36:	std    
  438d37:	xchg   ecx,eax
  438d38:	jmp    0x438d40
  438d3a:	out    0x3,eax
  438d3c:	jge    0x438d3d
  438d3e:	out    0x3,al
  438d40:	jns    0x438d41
  438d42:	out    0x3,al
  438d44:	jne    0x438d45
  438d46:	out    0x3,al
  438d48:	jno    0x438d49
  438d4a:	out    0x3,al
  438d4c:	ins    DWORD PTR es:[edi],dx
  438d4d:	jmp    esi
  438d4f:	add    ebp,DWORD PTR [ecx-0x1]
  438d52:	out    0x3,al
  438d54:	gs jmp esi
  438d57:	add    esp,DWORD PTR [ecx-0x1]
  438d5a:	out    0x3,al
  438d5c:	pop    ebp
  438d5d:	jmp    esi
  438d5f:	add    eax,DWORD PTR [eax]
  438d61:	add    BYTE PTR [eax],al
  438d63:	pop    ecx
  438d64:	jmp    esi
  438d66:	add    edx,DWORD PTR [ebp-0x1]
  438d69:	out    0x3,al
  438d6b:	push   ecx
  438d6c:	jmp    esi
  438d6e:	add    ecx,DWORD PTR [ebp-0x1]
  438d71:	out    0x3,al
  438d73:	dec    ecx
  438d74:	jmp    esi
  438d76:	add    eax,DWORD PTR [ebp-0x1]
  438d79:	out    0x3,al
  438d7b:	inc    ecx
  438d7c:	jmp    esi
  438d7e:	add    edi,DWORD PTR ds:0x3903e6ff
  438d84:	jmp    esi
  438d86:	add    esi,DWORD PTR ds:0x3103e6ff
  438d8c:	jmp    esi
  438d8e:	add    ebp,DWORD PTR ds:0x2903e6ff
  438d94:	jmp    esi
  438d96:	add    esp,DWORD PTR ds:0x2103e6ff
  438d9c:	jmp    esi
  438d9e:	add    ebx,DWORD PTR ds:0x1903e6ff
  438da4:	jmp    esi
  438da6:	add    edx,DWORD PTR ds:0x1103e6ff
  438dac:	jmp    esi
  438dae:	add    ecx,DWORD PTR ds:0x903e6ff
  438db4:	(bad)  
  438db5:	(bad)  
  438db6:	call   0xe94b7eab
  438dbb:	lock hlt 
  438dbd:	pop    es
  438dbe:	jmp    0xe94b86b3
  438dc3:	lock sbb eax,0xe901
  438dc9:	add    al,dh
  438dcb:	and    DWORD PTR [ecx],eax
  438dcd:	jmp    0xe94b92c2
  438dd2:	lock inc esp
  438dd4:	add    ecx,ebp
  438dd6:	lock inc eax
  438dd8:	add    ecx,ebp
  438dda:	lock cmp al,0x1
  438ddd:	jmp    0xe944c6d2
  438de2:	lock xor al,0x1
  438de5:	jmp    0xe944beda
  438dea:	lock sub al,0x1
  438ded:	jmp    0xe944b6e2
  438df2:	lock fs add ecx,ebp
  438df6:	lock pusha 
  438df8:	add    ecx,ebp
  438dfa:	lock pop esp
  438dfc:	add    ecx,ebp
  438dfe:	lock pop eax
  438e00:	add    ecx,ebp
  438e02:	lock push esp
  438e04:	add    ecx,ebp
  438e06:	lock push eax
  438e08:	add    ecx,ebp
  438e0a:	lock dec esp
  438e0c:	add    ecx,ebp
  438e0e:	lock dec eax
  438e10:	add    ecx,ebp
  438e12:	lock test BYTE PTR [ecx],al
  438e15:	jmp    0xe9450f0a
  438e1a:	lock jl 0x438e1e
  438e1d:	jmp    0xe9450712
  438e22:	lock je 0x438e26
  438e25:	jmp    0xe9463a1a
  438e2a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438e2c:	add    ch,cl
  438e2e:	add    BYTE PTR [eax],al
  438e30:	add    al,dh
  438e32:	jecxz  0x438e36
  438e34:	add    BYTE PTR [edx],bl
  438e36:	or     dl,BYTE PTR [edi+0x5]
  438e39:	sbb    cl,BYTE PTR [edx]
  438e3b:	push   ebx
  438e3c:	add    eax,0x54f0a0a
  438e41:	or     cl,BYTE PTR [edx]
  438e43:	dec    ebx
  438e44:	add    eax,0x5240a1a
  438e49:	sbb    cl,BYTE PTR [edx]
  438e4b:	xchg   BYTE PTR [edi],al
  438e4d:	or     cl,BYTE PTR [edx]
  438e4f:	add    BYTE PTR [edi],0xa
  438e52:	or     bh,BYTE PTR [esi+0x7]
  438e55:	fimul  DWORD PTR [ecx]
  438e57:	jp     0x438e60
  438e59:	fimul  DWORD PTR [ecx]
  438e5b:	xor    eax,DWORD PTR ds:0x52f09ca
  438e61:	retf   0x2b09
  438e64:	add    eax,0x52709da
  438e69:	fimul  DWORD PTR [ecx]
  438e6b:	popw   es
  438e6d:	retf   0x6209
  438e70:	pop    es
  438e71:	retf   0x5e09
  438e74:	pop    es
  438e75:	call   0x5609:0x9a075a09
  438e7c:	pop    es
  438e7d:	mov    cl,BYTE PTR [ecx]
  438e7f:	push   edx
  438e80:	pop    es
  438e81:	mov    cl,BYTE PTR [ecx]
  438e83:	dec    esi
  438e84:	pop    es
  438e85:	call   0x309:0x9a074a09
  438e8c:	add    eax,0x4ff098a
  438e91:	mov    cl,BYTE PTR [ecx]
  438e93:	sti    
  438e94:	add    al,0x0
  438e96:	add    BYTE PTR [eax],al
  438e98:	pop    edx
  438e99:	or     DWORD PTR [edx],edi
  438e9b:	pop    es
  438e9c:	pop    edx
  438e9d:	or     DWORD PTR [esi],esi
  438e9f:	pop    es
  438ea0:	dec    edx
  438ea1:	or     DWORD PTR [edx],esi
  438ea3:	pop    es
  438ea4:	dec    edx
  438ea5:	or     DWORD PTR [esi],ebp
  438ea7:	pop    es
  438ea8:	pop    edx
  438ea9:	or     DWORD PTR [edx],ebp
  438eab:	pop    es
  438eac:	pop    edx
  438ead:	or     DWORD PTR [esi],esp
  438eaf:	pop    es
  438eb0:	repz das 
  438eb2:	std    
  438eb3:	and    eax,0x21fd2fec
  438eb8:	hlt    
  438eb9:	das    
  438eba:	std    
  438ebb:	sbb    eax,0x19fd2fec
  438ec0:	hlt    
  438ec1:	das    
  438ec2:	std    
  438ec3:	adc    eax,0x11fd2fec
  438ec8:	hlt    
  438ec9:	das    
  438eca:	std    
  438ecb:	or     eax,0x9fd2fec
  438ed0:	hlt    
  438ed1:	das    
  438ed2:	std    
  438ed3:	add    eax,0x1fd2fec
  438ed8:	hlt    
  438ed9:	sub    eax,0x2dedfdfd
  438ede:	std    
  438edf:	stc    
  438ee0:	cmc    
  438ee1:	sub    eax,0x2dedf5fd
  438ee6:	std    
  438ee7:	icebp  
  438ee8:	cmc    
  438ee9:	sub    eax,0x2dededfd
  438eee:	std    
  438eef:	jmp    0xe640bce9
  438ef4:	in     eax,dx
  438ef5:	sub    eax,0x2df5e1fd
  438efa:	std    
  438efb:	fld    QWORD PTR [eax]
  438efd:	add    BYTE PTR [eax],al
  438eff:	in     eax,dx
  438f00:	sub    eax,0x2df5d9fd
  438f05:	std    
  438f06:	aad    0xed
  438f08:	sub    eax,0x2df5d1fd
  438f0d:	std    
  438f0e:	int    0xed
  438f10:	sub    eax,0x2df784fd
  438f15:	std    
  438f16:	sub    bh,0x2d
  438f19:	std    
  438f1a:	jl     0x438f13
  438f1c:	sub    eax,0x2dedbdfd
  438f21:	std    
  438f22:	mov    ecx,0xb5fd2df5
  438f27:	in     eax,dx
  438f28:	sub    eax,0x6f5b1fd
  438f2d:	out    0x3,eax
  438f2f:	xchg   ebp,eax
  438f30:	or     eax,0xd8903e7
  438f35:	out    0x3,eax
  438f37:	lea    ecx,ds:0xd5103e7
  438f3d:	out    0x3,eax
  438f3f:	test   DWORD PTR ds:0xd7903e7,ecx
  438f45:	out    0x3,eax
  438f47:	jge    0x438f56
  438f49:	out    0x3,eax
  438f4b:	popa   
  438f4c:	or     eax,0xd7503e7
  438f51:	out    0x3,eax
  438f53:	imul   ecx,DWORD PTR ds:0xd6d03e7,0xc7103e7
  438f5d:	out    0x3,eax
  438f5f:	gs or  eax,0x3e7
  438f65:	add    BYTE PTR [ecx+0xd],bl
  438f68:	out    0x3,eax
  438f6a:	pop    ebp
  438f6b:	or     eax,0xd4103e7
  438f70:	out    0x3,eax
  438f72:	push   ebp
  438f73:	or     eax,0xd4903e7
  438f78:	out    0x3,eax
  438f7a:	dec    ebp
  438f7b:	or     eax,0xd1103e7
  438f80:	out    0x3,eax
  438f82:	inc    ebp
  438f83:	or     eax,0xd3903e7
  438f88:	out    0x3,eax
  438f8a:	cmp    eax,0x2103e70d
  438f8f:	or     eax,0xd3503e7
  438f94:	out    0x3,eax
  438f96:	test   BYTE PTR [edx],0xe7
  438f99:	add    esi,edx
  438f9b:	or     ah,bh
  438f9d:	add    ebp,DWORD PTR [esi+0x7]
  438fa0:	out    0x3,eax
  438fa2:	push   0x7
  438fa4:	out    0x3,eax
  438fa6:	sbb    DWORD PTR ds:0xfcf0e900,ecx
  438fac:	add    ecx,ebp
  438fae:	lock clc 
  438fb0:	add    ecx,ebp
  438fb2:	lock hlt 
  438fb4:	add    ecx,ebp
  438fb6:	lock lock add ecx,ebp
  438fba:	lock in al,dx
  438fbc:	add    ecx,ebp
  438fbe:	lock call 0x253478c5
  438fc4:	add    ch,cl
  438fc6:	lock and BYTE PTR [edx],al
  438fc9:	jmp    0xf0438fce
  438fce:	sbb    al,0x2
  438fd0:	jmp    0xe945a8c5
  438fd5:	lock adc al,0x2
  438fd8:	jmp    0xe945a0cd
  438fdd:	lock or al,0x2
  438fe0:	jmp    0xe94594d5
  438fe5:	lock inc eax
  438fe7:	add    ebp,ecx
  438fe9:	lock cmp al,0x3
  438fec:	jmp    0xe946c8e1
  438ff1:	lock xor al,0x3
  438ff4:	jmp    0xe946c0e9
  438ff9:	lock sub al,0x3
  438ffc:	jmp    0xe946b8f1
  439001:	lock and al,0x3
  439004:	jmp    0xe946f0f9
  439009:	lock pop esp
  43900b:	add    ebp,ecx
  43900d:	lock pop eax
  43900f:	add    ebp,ecx
  439011:	lock push esp
  439013:	add    ebp,ecx
  439015:	lock push eax
  439017:	add    ebp,ecx
  439019:	lock dec esp
  43901b:	add    ebp,ecx
  43901d:	lock dec eax
  43901f:	add    ebp,ecx
  439021:	lock inc esp
  439023:	add    eax,DWORD PTR [eax]
  439025:	pop    edx
  439026:	push   es
  439027:	mov    edx,0xb6064a05
  43902c:	add    eax,0x5b2064a
  439031:	add    BYTE PTR [eax],al
  439033:	add    BYTE PTR [edx+0x6],bl
  439036:	scas   al,BYTE PTR es:[edi]
  439037:	add    eax,0x5aa065a
  43903c:	dec    edx
  43903d:	push   es
  43903e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43903f:	add    eax,0x5a2064a
  439044:	sbb    al,BYTE PTR [esi]
  439046:	sahf   
  439047:	add    eax,0x59a061a
  43904c:	or     al,BYTE PTR [esi]
  43904e:	xchg   esi,eax
  43904f:	add    eax,0x592060a
  439054:	sbb    al,BYTE PTR [esi]
  439056:	mov    es,WORD PTR ds:0x58a061a
  43905c:	or     al,BYTE PTR [esi]
  43905e:	xchg   BYTE PTR ds:0x582060a,al
  439064:	fiadd  DWORD PTR ds:0x5da057e
  43906a:	jp     0x439071
  43906c:	retf   0x7605
  43906f:	add    eax,0x57205ca
  439074:	fiadd  DWORD PTR ds:0x5da056e
  43907a:	push   0x5
  43907c:	retf   0x6605
  43907f:	add    eax,0x56205ca
  439084:	call   0x5a05:0x9a055e05
  43908b:	add    eax,0x556058a
  439090:	mov    al,BYTE PTR ds:0x59a0552
  439096:	dec    esi
  439097:	add    eax,0x9a000000
  43909c:	add    eax,0x58a054a
  4390a1:	inc    esi
  4390a2:	add    eax,0x45fd2ff3
  4390a7:	imul   BYTE PTR [edi]
  4390a9:	std    
  4390aa:	inc    ecx
  4390ab:	out    dx,al
  4390ac:	das    
  4390ad:	std    
  4390ae:	cmp    eax,0x39fd2ff6
  4390b3:	out    dx,al
  4390b4:	das    
  4390b5:	std    
  4390b6:	xor    eax,0x31fd2ff6
  4390bb:	out    dx,al
  4390bc:	das    
  4390bd:	std    
  4390be:	sub    eax,0x29fd2ff6
  4390c3:	out    dx,al
  4390c4:	das    
  4390c5:	std    
  4390c6:	and    eax,0x21fd2ff6
  4390cb:	out    dx,al
  4390cc:	das    
  4390cd:	std    
  4390ce:	sbb    eax,0x19fd2ff6
  4390d3:	out    dx,al
  4390d4:	das    
  4390d5:	std    
  4390d6:	adc    eax,0x11fd2ff6
  4390db:	out    dx,al
  4390dc:	das    
  4390dd:	std    
  4390de:	or     eax,0x9fd2ff6
  4390e3:	out    dx,al
  4390e4:	das    
  4390e5:	std    
  4390e6:	add    eax,0x1fd2df6
  4390eb:	out    dx,al
  4390ec:	sub    eax,0x2df7fdfd
  4390f1:	std    
  4390f2:	stc    
  4390f3:	out    dx,eax
  4390f4:	sub    eax,0x2df7f5fd
  4390f9:	std    
  4390fa:	icebp  
  4390fb:	out    dx,eax
  4390fc:	sub    eax,0xedfd
  439101:	add    bh,dh
  439103:	sub    eax,0x2defe9fd
  439108:	std    
  439109:	in     eax,0xf7
  43910b:	sub    eax,0x2defe1fd
  439110:	std    
  439111:	(bad)  
  439113:	sub    eax,0x2defd9fd
  439118:	std    
  439119:	aad    0xf7
  43911b:	sub    eax,0x6efd1fd
  439120:	out    0x3,eax
  439122:	lods   eax,DWORD PTR ds:[esi]
  439123:	or     esp,edi
  439125:	add    ebp,DWORD PTR [ecx+0x3503e70b]
  43912b:	or     esp,edi
  43912d:	add    esi,DWORD PTR [ecx]
  43912f:	or     esp,edi
  439131:	add    ebx,DWORD PTR [ebp-0x66fc18f5]
  439137:	or     esp,edi
  439139:	add    eax,DWORD PTR [ebp-0x7efc18f5]
  43913f:	or     esp,edi
  439141:	add    ecx,DWORD PTR [ebp-0x76fc18f5]
  439147:	or     esp,edi
  439149:	add    edx,DWORD PTR [ebp+0xb]
  43914c:	out    0x3,eax
  43914e:	push   ecx
  43914f:	or     esp,edi
  439151:	add    edi,DWORD PTR [ebp+0xb]
  439154:	out    0x3,eax
  439156:	jns    0x439163
  439158:	out    0x3,eax
  43915a:	gs or  esp,edi
  43915d:	add    esp,DWORD PTR [ecx+0xb]
  439160:	out    0x3,eax
  439162:	ins    DWORD PTR es:[edi],dx
  439163:	or     esp,edi
  439165:	add    eax,DWORD PTR [eax]
  439167:	add    BYTE PTR [eax],al
  439169:	imul   ecx,DWORD PTR [ebx],0xa7503e7
  43916f:	out    0x3,eax
  439171:	jno    0x43917d
  439173:	out    0x3,eax
  439175:	pop    ebp
  439176:	or     esp,edi
  439178:	add    ebx,DWORD PTR [ecx+0xb]
  43917b:	out    0x3,eax
  43917d:	inc    ebp
  43917e:	or     esp,edi
  439180:	add    eax,DWORD PTR [ecx+0xb]
  439183:	out    0x3,eax
  439185:	dec    ebp
  439186:	or     esp,edi
  439188:	add    ecx,DWORD PTR [ecx+0xb]
  43918b:	out    0x3,eax
  43918d:	adc    eax,0x1103e70b
  439192:	or     esp,edi
  439194:	add    edi,DWORD PTR ds:0x3903e70b
  43919a:	or     eax,DWORD PTR [eax]
  43919c:	jmp    0xe9476a91
  4391a1:	lock aam 0x3
  4391a4:	jmp    0xe9476299
  4391a9:	lock int3 
  4391ab:	add    ebp,ecx
  4391ad:	lock enter 0xe903,0xf0
  4391b2:	les    eax,FWORD PTR [ebx]
  4391b4:	jmp    0xe94792a9
  4391b9:	lock cld 
  4391bb:	add    ebp,ecx
  4391bd:	lock clc 
  4391bf:	add    ebp,ecx
  4391c1:	lock hlt 
  4391c3:	add    ebp,ecx
  4391c5:	lock lock add ebp,ecx
  4391c9:	lock in al,dx
  4391cb:	add    ebp,ecx
  4391cd:	add    BYTE PTR [eax],al
  4391cf:	add    al,dh
  4391d1:	call   0xe5347ad9
  4391d6:	add    ebp,ecx
  4391d8:	lock and BYTE PTR [ecx+ebp*8],al
  4391dc:	lock sbb al,0x4
  4391df:	jmp    0xe947aad4
  4391e4:	lock adc al,0x4
  4391e7:	jmp    0xe947a2dc
  4391ec:	lock or al,0x4
  4391ef:	jmp    0xe94796e4
  4391f4:	lock or BYTE PTR [ecx+ebp*8],al
  4391f8:	lock cmp al,0xfd
  4391fb:	call   0xe940d2f0
  439200:	lock xor al,0xfd
  439203:	call   0xe940caf8
  439208:	lock sub al,0xfd
  43920b:	call   0xe940c300
  439210:	lock and al,0xfd
  439213:	call   0x40bb08
  439218:	mov    cl,BYTE PTR [edx]
  43921a:	fiadd  DWORD PTR [ebx]
  43921c:	mov    cl,BYTE PTR [edx]
  43921e:	(bad)  
  43921f:	add    ebx,DWORD PTR [edx-0x65fc2df6]
  439225:	or     cl,dh
  439227:	add    ecx,DWORD PTR [edx-0x75fc35f6]
  43922d:	or     bl,BYTE PTR [ecx]
  43922f:	add    DWORD PTR [edx+0xa],ebx
  439232:	adc    eax,0x1
  439237:	pop    edx
  439238:	or     dl,BYTE PTR [ecx]
  43923a:	add    DWORD PTR [edx+0xa],ecx
  43923d:	or     eax,0xa0a4a01
  439242:	add    DWORD PTR [edx+0xa],ebx
  439245:	add    DWORD PTR cs:[edx+0xa],ebx
  439249:	xor    eax,0xfd0a4a01
  43924e:	add    BYTE PTR [edx+0xa],cl
  439251:	stc    
  439252:	add    BYTE PTR [edx],bl
  439254:	or     dh,ch
  439256:	add    BYTE PTR [edx],bl
  439258:	or     dh,cl
  43925a:	add    BYTE PTR [edx],cl
  43925c:	or     ch,ch
  43925e:	add    BYTE PTR [edx],cl
  439260:	or     ch,dl
  439262:	add    BYTE PTR [edx],bl
  439264:	or     ah,ch
  439266:	add    BYTE PTR [edx],bl
  439268:	or     ah,cl
  43926a:	add    BYTE PTR [edx],cl
  43926c:	or     bl,ch
  43926e:	add    BYTE PTR [edx],cl
  439270:	or     bl,cl
  439272:	add    dl,bl
  439274:	or     ebp,edx
  439276:	add    dl,bl
  439278:	or     ecx,edx
  43927a:	add    dl,cl
  43927c:	or     ebp,ecx
  43927e:	add    dl,cl
  439280:	or     edx,ecx
  439282:	add    dl,bl
  439284:	or     ebp,eax
  439286:	add    dl,bl
  439288:	or     ecx,eax
  43928a:	add    dl,cl
  43928c:	or     DWORD PTR [ebp-0x46f63600],edi
  439292:	add    bl,dh
  439294:	das    
  439295:	std    
  439296:	mov    edx,0xb6fd2ff3
  43929b:	add    BYTE PTR [eax],al
  43929d:	add    bl,dh
  43929f:	das    
  4392a0:	std    
  4392a1:	mov    dl,0xf3
  4392a3:	das    
  4392a4:	std    
  4392a5:	scas   al,BYTE PTR es:[edi]
  4392a6:	repz das 
  4392a8:	std    
  4392a9:	stos   BYTE PTR es:[edi],al
  4392aa:	repz das 
  4392ac:	std    
  4392ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4392ae:	repz das 
  4392b0:	std    
  4392b1:	mov    ds:0x59fd2ff3,al
  4392b6:	ins    BYTE PTR es:[edi],dx
  4392b7:	sbb    bl,BYTE PTR [edi]
  4392b9:	mov    DWORD PTR [esi+0x11434750],ebp
  4392bf:	xor    BYTE PTR [eax+0x43],cl
  4392c2:	icebp  
  4392c3:	dec    edi
  4392c4:	std    
  4392c5:	push   ebx
  4392c7:	ins    BYTE PTR es:[edi],dx
  4392c8:	rol    DWORD PTR [ecx],0x13
  4392cb:	xor    ch,bh
  4392cd:	push   DWORD PTR [eax+0x22]
  4392d0:	adc    al,0x40
  4392d2:	mov    esi,0xf5434824
  4392d7:	outs   dx,DWORD PTR ds:[esi]
  4392d8:	std    
  4392d9:	push   ebx
  4392db:	test   al,0xc0
  4392dd:	sbb    al,0xec
  4392df:	mov    ebp,0xadef8afb
  4392e4:	add    al,BYTE PTR [eax]
  4392e6:	jo     0x4392d7
  4392e8:	pop    es
  4392e9:	stc    
  4392ea:	and    esi,DWORD PTR [eax+0x2d87f94b]
  4392f0:	jl     0x439335
  4392f2:	rcr    BYTE PTR [eax-0x3e],1
  4392f5:	sub    BYTE PTR [ebp+0x78],cl
  4392f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4392f9:	jl     0x4392aa
  4392fb:	inc    ebp
  4392fc:	stos   BYTE PTR es:[edi],al
  4392fd:	mov    ebp,0x43482deb
  439302:	add    BYTE PTR [eax],al
  439304:	add    cl,bh
  439306:	sub    eax,0xa8f3fffd
  43930b:	rcr    BYTE PTR [esp+esi*8],0xf3
  43930f:	ret    
  439310:	(bad)  
  439311:	pop    ss
  439312:	pop    es
  439313:	stos   BYTE PTR es:[edi],al
  439314:	add    esi,ebx
  439316:	push   es
  439317:	mov    al,ds:0xe73cacc3
  43931c:	adc    dh,BYTE PTR [ebp+0x307ad834]
  439322:	adc    DWORD PTR [esi+0x4b],esp
  439325:	xchg   esp,eax
  439326:	mov    bl,0xe2
  439328:	test   BYTE PTR [eax],dh
  43932a:	and    eax,ebp
  43932c:	test   BYTE PTR [ebx-0x1f7cbf7],cl
  439332:	sar    esp,0x7
  439335:	ins    BYTE PTR es:[edi],dx
  439336:	shr    al,cl
  439338:	inc    edx
  439339:	push   ebx
  43933a:	add    ch,al
  43933c:	push   ebx
  43933d:	lock push es
  43933f:	test   DWORD PTR [ebx],0x73eb89f3
  439345:	push   esi
  439346:	cmp    al,0x66
  439348:	inc    ebx
  439349:	idiv   DWORD PTR [ebx]
  43934b:	xchg   edi,eax
  43934c:	inc    esp
  43934d:	outs   dx,BYTE PTR ds:[esi]
  43934e:	ret    0xc5
  439351:	add    edi,0xff5384e7
  439357:	daa    
  439358:	pop    ebx
  439359:	cs (bad) 
  43935b:	lods   al,BYTE PTR ds:[esi]
  43935c:	stc    
  43935d:	addr16 dec eax
  43935f:	data16 into 
  439361:	repnz out 0xc2,al
  439364:	and    dl,BYTE PTR [esi+0x2dcc1]
  43936a:	add    BYTE PTR [eax],al
  43936c:	jbe    0x439330
  43936e:	add    eax,0xe4c74101
  439373:	test   BYTE PTR [ebx],dl
  439375:	add    al,0x70
  439377:	(bad)  
  439378:	out    0x87,al
  43937a:	pushf  
  43937b:	cmc    
  43937c:	icebp  
  43937d:	mov    cl,0xdc
  43937f:	test   BYTE PTR [eax+0x11],ch
  439382:	out    0xd6,eax
  439384:	lock xchg DWORD PTR [ebp+ebp*8-0x3199b810],ebp
  43938c:	repnz out 0xff,al
  43938f:	je     0x43937d
  439391:	mov    ecx,0x79f4d342
  439396:	jge    0x4393fc
  439398:	in     eax,dx
  439399:	push   ss
  43939a:	jae    0x439381
  43939c:	jno    0x439365
  43939e:	adc    eax,0x5e2f31eb
  4393a3:	into   
  4393a4:	sub    al,0x3e
  4393a6:	test   DWORD PTR [ecx+ecx*4],ebp
  4393a9:	cmp    al,0x44
  4393ab:	or     dh,BYTE PTR [eax-0x39]
  4393ae:	sbb    al,0xeb
  4393b0:	xor    DWORD PTR [esi],edi
  4393b2:	inc    ebx
  4393b3:	or     dh,BYTE PTR [eax]
  4393b5:	mov    edx,0x79f2ca42
  4393ba:	jge    0x4393d8
  4393bc:	icebp  
  4393bd:	push   ss
  4393be:	jae    0x4393af
  4393c0:	enter  0xf95a,0x8e
  4393c4:	lods   al,BYTE PTR ds:[esi]
  4393c5:	jns    0x4393af
  4393c7:	sub    eax,0xaa0006f1
  4393cc:	jo     0x43938d
  4393ce:	std    
  4393cf:	fadd   DWORD PTR [eax]
  4393d1:	add    BYTE PTR [eax],al
  4393d3:	sub    eax,DWORD PTR [eax+ebp*8]
  4393d6:	mov    ds:0x66f93dac,eax
  4393db:	sub    bl,BYTE PTR [edx]
  4393dd:	mov    ebp,0xf93d0c51
  4393e2:	jmp    0x1abe4d98
  4393e7:	aaa    
  4393e8:	mov    eax,0x3cd05101
  4393ed:	stc    
  4393ee:	jmp    0xa86d1a4
  4393f3:	mov    al,0xb9
  4393f5:	jp     0x4393e2
  4393f7:	sar    BYTE PTR [edx+0x1a2a6a02],1
  4393fd:	add    ebp,DWORD PTR [edx]
  4393ff:	jo     0x4393c7
  439401:	sbb    al,0xea
  439403:	xor    DWORD PTR [edx+edi*2+0x2b5b0eb],edi
  43940a:	add    BYTE PTR [ecx+0x50],cl
  43940d:	sbb    al,0x9
  43940f:	sbb    DWORD PTR [esi+0x5fba0275],eax
  439415:	inc    BYTE PTR [edx-0x3d031a69]
  43941b:	dec    ecx
  43941c:	dec    edi
  43941d:	sbb    al,0x3
  43941f:	pop    ecx
  439420:	fidivr WORD PTR [edi-0x1]
  439423:	mov    ebp,0xe945f6c9
  439428:	lds    edi,FWORD PTR [edx+0x7d]
  43942b:	cdq    
  43942c:	inc    esi
  43942d:	outs   dx,BYTE PTR ds:[esi]
  43942e:	and    dl,BYTE PTR [ebp+0x4f]
  439431:	sti    
  439432:	aas    
  439433:	call   0x0:0xff0006
  43943a:	xlat   BYTE PTR ds:[ebx]
  43943b:	in     eax,0x82
  43943d:	inc    ebp
  43943e:	test   eax,0xdf08af39
  439443:	add    DWORD PTR [esi-0x3f7aa5fd],eax
  439449:	add    al,0x6d
  43944b:	idiv   BYTE PTR [esi-0x19b7bb]
  439451:	call   FWORD PTR [edx-0x3b]
  439454:	test   BYTE PTR [ebp+0x39],0xc5
  439458:	jp     0x4394d7
  43945a:	jns    0x4394a2
  43945c:	outs   dx,BYTE PTR ds:[esi]
  43945d:	and    ecx,ebp
  43945f:	dec    esi
  439460:	sbb    al,0xfe
  439462:	push   edi
  439463:	call   0x3a3c11e7
  439468:	outs   dx,BYTE PTR ds:[esi]
  439469:	push   es
  43946a:	mov    dl,0x60
  43946c:	stc    
  43946d:	dec    DWORD PTR [edx]
  43946f:	lds    eax,FWORD PTR [edx-0x50c606bb]
  439475:	or     BYTE PTR [edi+0xa038601],cl
  43947b:	test   eax,eax
  43947d:	add    al,0xcd
  43947f:	cmc    
  439480:	mov    edx,0xf8e49783
  439485:	ret    0x10f3
  439488:	enter  0xdd1c,0x62
  43948c:	pop    ds
  43948d:	adc    BYTE PTR [esi+0x4e],0xfa
  439491:	jb     0x439488
  439493:	pop    ss
  439494:	retf   0xc4fe
  439497:	das    
  439498:	test   DWORD PTR ds:[esi],esi
  43949b:	dec    ebp
  43949c:	cli    
  43949d:	mov    cl,0x0
  43949f:	add    BYTE PTR [eax],al
  4394a1:	jmp    0x439455
  4394a3:	pop    es
  4394a4:	mov    dh,al
  4394a6:	das    
  4394a7:	add    al,0xef
  4394aa:	push   eax
  4394ab:	xor    al,0xbd
  4394ad:	jo     0x439479
  4394af:	std    
  4394b0:	pop    ds
  4394b1:	pop    ss
  4394b2:	ss push ebp
  4394b4:	hlt    
  4394b5:	lea    edi,[eax+0x4b]
  4394b8:	jge    0x4394e8
  4394ba:	or     eax,0x458bbd08
  4394bf:	dec    edx
  4394c0:	stc    
  4394c1:	je     0x43946f
  4394c3:	rcr    BYTE PTR [ecx+esi*8],0x6c
  4394c7:	jg     0x439544
  4394c9:	and    al,dh
  4394cb:	rol    BYTE PTR [ecx],1
  4394cd:	dec    ebx
  4394ce:	out    0xfc,eax
  4394d0:	push   ebx
  4394d2:	ins    BYTE PTR es:[edi],dx
  4394d3:	jg     0x439518
  4394d5:	adc    BYTE PTR [esi],ch
  4394d7:	inc    eax
  4394d8:	jge    0x439488
  4394da:	dec    esp
  4394db:	add    DWORD PTR [ebp+0x31ee270],edi
  4394e1:	xor    BYTE PTR [eax+ecx*8+0x352b32c],ch
  4394e8:	call   0x40c3c3
  4394ed:	xor    bh,al
  4394ef:	test   dl,bh
  4394f1:	adc    al,0xc0
  4394f3:	ds call 0xf98e8ee2
  4394f9:	jo     0x43956d
  4394fb:	idiv   esp
  4394fd:	xchg   DWORD PTR [ecx],esp
  4394ff:	push   ebp
  439500:	test   al,0xf5
  439502:	add    eax,0x4d22
  439507:	add    BYTE PTR [esi-0xcfd08d1],ch
  43950d:	push   es
  43950e:	xor    DWORD PTR es:[eax],0x5640e5e4
  439515:	mov    edx,0x241c3e8
  43951a:	data16 (bad) 
  43951c:	out    0xd,eax
  43951e:	xor    DWORD PTR es:[eax],0x3640e3e4
  439525:	mov    edx,0x221f3e8
  43952a:	data16 mov BYTE PTR [edi],0x4
  43952e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43952f:	sbb    BYTE PTR [eax],0x1
  439532:	pop    es
  439533:	xlat   BYTE PTR ds:[ebx]
  439534:	icebp  
  439535:	sub    DWORD PTR [ecx+eiz*1],0xfffffff0
  439539:	inc    ebx
  43953a:	data16 (bad) 
  43953c:	out    0xd,eax
  43953e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43953f:	cmp    eax,0x6
  439542:	call   0x972881d
  439547:	dec    esi
  439548:	push   0x38
  43954a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43954b:	pop    ebx
  43954c:	cmp    DWORD PTR [edi],eax
  43954e:	out    0x3,eax
  439550:	sahf   
  439551:	xchg   DWORD PTR [esp+eax*1],ecx
  439554:	push   esp
  439555:	mov    bl,0xe8
  439557:	pop    ebx
  439558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439559:	cmp    BYTE PTR [edx+0x4c],bh
  43955c:	xchg   BYTE PTR [edi-0x4cc3fd0c],al
  439562:	loopne 0x4395bf
  439564:	stos   DWORD PTR es:[edi],eax
  439565:	cmp    BYTE PTR [edx+0x4c],ah
  439568:	outs   dx,BYTE PTR ds:[esi]
  439569:	test   ah,bl
  43956b:	add    DWORD PTR [eax],eax
  43956d:	add    BYTE PTR [eax],al
  43956f:	add    esi,DWORD PTR [edx+0x38df5be8]
  439575:	dec    edx
  439576:	dec    esp
  439577:	push   esi
  439578:	das    
  439579:	mov    eax,DWORD PTR [ebx]
  43957b:	repz push es
  43957d:	or     BYTE PTR es:[eax+0x25a8fff3],0x6
  439585:	call   0x4a85db
  43958a:	sub    dh,BYTE PTR [ebx-0x45]
  43958d:	std    
  43958e:	enter  0x4bd,0x7d
  439592:	lods   al,BYTE PTR ds:[esi]
  439593:	adc    eax,DWORD PTR [esi]
  439595:	mov    ebp,0x31aad6a
  43959a:	sub    dh,BYTE PTR [ebx]
  43959c:	mov    edx,0xb3c0eb7a
  4395a1:	smsw   WORD PTR [esp+edi*1-0x3bc31107]
  4395a9:	adc    eax,0x7d1ab3e8
  4395ae:	and    al,0xcc
  4395b0:	add    al,0xbd
  4395b2:	rcl    DWORD PTR [ebx+0x14cef93c],0xc4
  4395b9:	adc    eax,0x7d1ab3e8
  4395be:	and    al,0xcc
  4395c0:	add    bh,BYTE PTR [ebp+0x3feaaa6a]
  4395c6:	xor    al,0xf1
  4395c8:	cs push ebx
  4395ca:	jmp    0x6b009cbf
  4395cf:	cmp    bh,BYTE PTR [ecx]
  4395d1:	sbb    DWORD PTR [eax+eax*1],ebx
  4395d4:	add    BYTE PTR [eax],al
  4395d6:	repnz mov ecx,0x79f1ca42
  4395dc:	jge    0x43960a
  4395de:	adc    al,0x4
  4395e0:	mov    ebp,0xf93b6e91
  4395e5:	jbe    0x43965b
  4395e7:	mov    ebx,0x523e911
  4395ec:	call   0xf9815020
  4395f1:	sub    al,bh
  4395f3:	in     al,dx
  4395f4:	(bad)  
  4395f5:	call   0xccc10fea
  4395fa:	std    
  4395fb:	(bad)  
  4395fc:	jb     0x4395fe
  4395fe:	pop    ds
  4395ff:	cmp    BYTE PTR ds:0x7ac00f23,0x7d
  439606:	or     bl,ah
  439608:	ins    BYTE PTR es:[edi],dx
  439609:	add    eax,0x51c4589
  43960e:	sbb    DWORD PTR [esi-0x3226dcc3],ecx
  439614:	jg     0x439693
  439616:	retf   0x6d0b
  439619:	push   es
  43961a:	repnz mov ds:0xcdf5fff4,eax
  439620:	out    0x1,eax
  439622:	fimul  DWORD PTR [edx]
  439624:	add    bl,al
  439626:	add    al,dl
  439628:	idiv   bh
  43962a:	(bad)
  43962d:	jge    0x439638
  43962f:	dec    ebx
  439630:	outs   dx,BYTE PTR ds:[esi]
  439631:	push   es
  439632:	ret    0xf6d1
  439635:	inc    ebp
  439637:	int    0xe7
  439639:	jnp    0x43963b
  43963b:	add    BYTE PTR [eax],al
  43963d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43963e:	shl    esi,0x83
  439641:	fucomip st,st(5)
  439643:	clc    
  439644:	ret    0x3f19
  439647:	sti    
  439648:	pop    ds
  439649:	(bad)  
  43964a:	xor    al,0xe1
  43964c:	imul   eax,DWORD PTR [edi-0x3f],0xfffffff6
  439650:	sbb    DWORD PTR [edi],0xffffffee
  439653:	add    eax,ebx
  439655:	sub    BYTE PTR [ebx],0xf6
  439658:	inc    DWORD PTR [ebp+0x48233d8d]
  43965e:	int    0xe7
  439660:	mov    esi,0xe8f6c176
  439665:	pop    eax
  439666:	mov    edi,0x3ec9fff6
  43966b:	(bad)  
  43966d:	aas    
  43966e:	xor    eax,0xbf04584
  439673:	cmp    eax,0x1c469923
  439678:	add    esi,ebx
  43967a:	loopne 0x4395fd
  43967c:	jnp    0x43967b
  43967e:	push   ds
  43967f:	rol    BYTE PTR [ecx],1
  439681:	sbb    eax,DWORD PTR [esi+eax*2+0x79e104f9]
  439688:	inc    ebx
  439689:	fstp   DWORD PTR [esi]
  43968b:	rcr    BYTE PTR [eax+esi*2],0x6b
  43968f:	and    bh,dh
  439691:	mov    cl,0xa0
  439693:	(bad)  
  439694:	std    
  439695:	add    al,0x94
  439697:	adc    ebp,eax
  439699:	jne    0x4396b6
  43969b:	inc    esi
  43969c:	stc    
  43969d:	retf   
  43969e:	jmp    0x448fe3
  4396a3:	add    ah,cl
  4396a5:	mov    al,ds:0xbaf311c7
  4396aa:	stc    
  4396ab:	test   BYTE PTR [esi],dh
  4396ad:	pop    edx
  4396ae:	add    al,0x43
  4396b0:	adc    BYTE PTR [ecx+0x60f51cbf],ah
  4396b6:	cmp    DWORD PTR [ebx-0x3],0x1e
  4396ba:	retf   0x8b01
  4396bd:	retf   
  4396be:	inc    esi
  4396bf:	stc    
  4396c0:	xchg   esp,eax
  4396c1:	pusha  
  4396c2:	jnp    0x439707
  4396c4:	jmp    0x706050e7
  4396c9:	jmp    0xfbb0:0x47b1fe22
  4396d0:	je     0x439736
  4396d2:	pop    esp
  4396d3:	cwde   
  4396d4:	outs   dx,DWORD PTR ds:[esi]
  4396d5:	ins    BYTE PTR es:[edi],dx
  4396d6:	inc    edi
  4396d7:	jge    0x4396bf
  4396d9:	cmp    eax,0xa8e872fd
  4396de:	mov    eax,0x22eaf215
  4396e3:	jge    0x43969b
  4396e5:	inc    eax
  4396e6:	stc    
  4396e7:	mov    esp,0xfeef3270
  4396ec:	(bad)  
  4396ed:	and    eax,0xa4343655
  4396f2:	inc    esi
  4396f3:	mov    ebp,0xedac0678
  4396f8:	and    eax,0xb08505ca
  4396fd:	jmp    0xe84edbe6
  439702:	dec    edx
  439703:	dec    ecx
  439704:	or     bl,BYTE PTR [esi]
  439706:	leave  
  439707:	inc    edi
  439708:	add    BYTE PTR [eax],al
  43970a:	add    BYTE PTR [edx],cl
  43970c:	xor    eax,0x7e2c766
  439711:	mov    cl,0x1
  439713:	or     ecx,DWORD PTR [edi]
  439715:	sub    cl,BYTE PTR [ecx-0x16]
  439718:	dec    eax
  439719:	outs   dx,BYTE PTR ds:[esi]
  43971a:	mov    edi,0x24a405fe
  43971f:	pop    esi
  439720:	retf   0x5c5
  439723:	xchg   esi,eax
  439724:	pop    ds
  439725:	popf   
  439726:	inc    edi
  439727:	retf   0x6634
  43972a:	(bad)  
  43972b:	loop   0x439739
  43972d:	jns    0x439730
  43972f:	retf   
  439730:	xor    dh,cl
  439732:	dec    eax
  439733:	mov    edx,0xa653ff48
  439738:	xor    al,0xe2
  43973a:	jl     0x43976c
  43973c:	adc    eax,ebp
  43973e:	mov    esi,0x252c87ff
  439743:	xchg   ebp,eax
  439744:	dec    ecx
  439745:	mov    edi,0xc2348663
  43974a:	pop    ebx
  43974b:	iret   
  43974c:	xor    bh,BYTE PTR [edx-0x274e01b8]
  439752:	(bad)  
  439753:	cli    
  439754:	or     al,0xbf
  439756:	xor    BYTE PTR [ecx+0x34],ch
  439759:	mov    ds:0xfcca6e44,al
  43975e:	add    dh,BYTE PTR [eax-0x8419a19]
  439764:	or     BYTE PTR [esi-0x7dcf75a5],ah
  43976a:	dec    eax
  43976b:	pop    ebx
  43976c:	or     BYTE PTR [ebx+0x48],bh
  43976f:	add    BYTE PTR [eax],al
  439771:	add    BYTE PTR [edx],bh
  439773:	mov    BYTE PTR [eax],al
  439775:	hlt    
  439776:	inc    edx
  439777:	xor    al,0x74
  439779:	shl    DWORD PTR [edi-0x50],cl
  43977c:	add    eax,0xac892bea
  439781:	jmp    0xd4c09e76
  439786:	sbb    cl,BYTE PTR [eax]
  439788:	or     DWORD PTR [edi+0x56],ebx
  43978b:	pop    es
  43978c:	add    cl,ch
  43978e:	test   al,0x94
  439790:	cli    
  439791:	ds stos DWORD PTR es:[edi],eax
  439793:	jno    0x439812
  439795:	mov    ah,0x2
  439797:	xor    eax,0xaf77d374
  43979c:	add    eax,0x8c88ebea
  4397a1:	jmp    0x94c09e96
  4397a6:	fidiv  DWORD PTR [edx+ecx*1]
  4397a9:	pop    edi
  4397aa:	jbe    0x4397b2
  4397ac:	add    cl,ch
  4397ae:	sub    BYTE PTR [ebp+0x7234fef9],dh
  4397b4:	jge    0x43982a
  4397b6:	ret    0x7431
  4397b9:	fnstenv [edi-0x51]
  4397bc:	add    eax,0x6c889dea
  4397c1:	jmp    0x462b9eb6
  4397c6:	sub    eax,0x70aaf92e
  4397cb:	scas   eax,DWORD PTR es:[edi]
  4397cc:	adc    edx,ebp
  4397ce:	mov    ds:0x793c7cff,eax
  4397d3:	xor    dh,BYTE PTR [ebx+edx*1+0x0]
  4397d7:	add    BYTE PTR [eax],al
  4397d9:	pop    ss
  4397da:	(bad)  
  4397dc:	scas   al,BYTE PTR es:[edi]
  4397dd:	mov    ah,0x71
  4397df:	jge    0x439805
  4397e1:	push   ebp
  4397e2:	pop    es
  4397e3:	jae    0x4397d2
  4397e5:	jno    0x439796
  4397e7:	add    eax,0xe7cb43ea
  4397ec:	and    DWORD PTR [ebp-0x66ff06d3],esi
  4397f2:	xchg   DWORD PTR [ebp+0x16],esi
  4397f5:	push   edi
  4397f6:	push   esi
  4397f7:	jmp    edi
  4397f9:	jle    0x4397c4
  4397fb:	idiv   bh
  4397fd:	pop    ecx
  4397fe:	xchg   DWORD PTR [ebp+0x16],esi
  439801:	adc    al,0x56
  439803:	add    eax,0xfc2d3f83
  439808:	je     0x4397fa
  43980a:	shl    BYTE PTR [ecx],cl
  43980c:	(bad)  
  43980d:	mov    ebp,0x2f83bacb
  439812:	and    DWORD PTR [eax],eax
  439814:	jne    0x439832
  439816:	mov    BYTE PTR [ebp+0xa],dh
  439819:	or     DWORD PTR [esi+0x11],edx
  43981c:	sbb    DWORD PTR [edi-0x218abfeb],0xffffff85
  439823:	jne    0x439833
  439825:	retf   0x542
  439828:	call   0x3a64fb
  43982d:	sbb    ebx,edx
  43982f:	std    
  439830:	std    
  439831:	in     eax,dx
  439832:	leave  
  439833:	mov    edx,0xfa20978b
  439838:	inc    esp
  439839:	test   eax,0x233d85
  43983e:	add    BYTE PTR [eax],al
  439840:	cwde   
  439841:	(bad)
  439844:	nop
  439845:	leave  
  439846:	imul   al
  439848:	clc    
  439849:	mov    ebp,0x3f09fff6
  43984e:	(bad)  
  439850:	aas    
  439851:	xor    ecx,esp
  439853:	in     eax,0xaf
  439855:	leave  
  439856:	test   bl,0x1
  439859:	inc    edi
  43985a:	adc    eax,DWORD PTR [ecx]
  43985c:	(bad)  
  43985d:	in     eax,0x7a
  43985f:	inc    ebp
  439860:	stc    
  439861:	add    eax,0xc09fe8bb
  439866:	idiv   bh
  439868:	cmp    BYTE PTR [ebx],0xf4
  43986b:	push   ebx
  43986d:	cwde   
  43986e:	jle    0x4398eb
  439870:	in     eax,0x1f
  439872:	rol    BYTE PTR [ecx],1
  439874:	pop    ebx
  439875:	fs dec eax
  439877:	stc    
  439878:	cmp    al,0x5d
  43987a:	jle    0x4398f7
  43987c:	fstp   QWORD PTR ds:0xf81b01d0
  439882:	inc    edi
  439883:	stc    
  439884:	and    al,0xdd
  439886:	jge    0x439903
  439888:	add    eax,0xb01d01d
  43988d:	mov    WORD PTR [eax-0x7],cs
  439890:	or     al,0xdd
  439892:	jge    0x43990f
  439894:	frstor [ebx]
  439896:	rol    BYTE PTR [ecx],1
  439898:	or     eax,DWORD PTR [eax-0x230b06b8]
  43989e:	jge    0x43991b
  4398a0:	add    eax,0x1d02b
  4398a5:	add    BYTE PTR [eax],al
  4398a7:	(bad)  [ebx-0x232306b9]
  4398ad:	jge    0x43992a
  4398af:	std    
  4398b0:	and    bl,al
  4398b2:	add    ebx,ebx
  4398b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4398b5:	inc    edi
  4398b6:	stc    
  4398b7:	(bad)  
  4398b8:	fdiv   QWORD PTR [ebp+0x43]
  4398bb:	fstp   DWORD PTR [esi]
  4398bd:	rcr    BYTE PTR [eax+esi*2],0x62
  4398c1:	push   ds
  4398c2:	(bad)  
  4398c3:	mov    cl,0x7
  4398c5:	mov    esi,?
  4398c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4398c8:	sub    BYTE PTR [edi+0x7b],bh
  4398cb:	add    eax,0x8b01ca20
  4398d0:	retf   
  4398d1:	inc    eax
  4398d2:	stc    
  4398d3:	mov    WORD PTR [edi+edi*2+0x7b],ds
  4398d7:	fstp   QWORD PTR [esi]
  4398d9:	retf   0x8b01
  4398dc:	mov    edi,0x5c74f940
  4398e1:	jg     0x43995e
  4398e3:	add    eax,0x5b0eca1e
  4398e8:	push   es
  4398e9:	xor    al,0x4a
  4398eb:	pop    edx
  4398ec:	xor    DWORD PTR [esi-0x39],esp
  4398ef:	out    dx,al
  4398f0:	add    eax,0xbf54b21b
  4398f5:	mov    eax,DWORD PTR [ebp+0x4a]
  4398f8:	inc    ebp
  4398f9:	data16 (bad) 
  4398fb:	loop   0x439902
  4398fd:	hlt    
  4398fe:	std    
  4398ff:	dec    esp
  439900:	repz jae 0x439948
  439903:	sub    al,BYTE PTR [ebp+0x66]
  439906:	mov    DWORD PTR [edx],0xf2dc0b
  43990c:	add    BYTE PTR [eax],al
  43990e:	adc    al,0xdc
  439910:	pop    esp
  439911:	inc    ebp
  439912:	sbb    al,BYTE PTR [ebp-0x4af0062c]
  439918:	stc    
  439919:	pop    ebx
  43991a:	shl    DWORD PTR [ebx],1
  43991c:	inc    edx
  43991d:	inc    ebp
  43991e:	test   DWORD PTR ds:[ebp+ebp*8+0x5be8bbf1],edi
  439926:	add    eax,0xa6452a32
  43992b:	test   BYTE PTR [ebp+ebp*8+0x5bf7b9f2],ah
  439932:	repnz sub al,0x12
  439935:	inc    ebp
  439936:	dec    esi
  439937:	mov    dl,0xdc
  439939:	add    BYTE PTR [edi],bh
  43993b:	add    ecx,DWORD PTR [edi]
  43993d:	add    DWORD PTR [eax-0x34bf05d0],edi
  439943:	xor    dh,bl
  439945:	inc    esp
  439946:	stos   BYTE PTR es:[edi],al
  439947:	inc    esp
  439948:	pop    esi
  439949:	mov    edi,0x212c05fe
  43994e:	push   ds
  43994f:	retf   0x105
  439952:	push   esi
  439953:	pop    ds
  439954:	add    DWORD PTR [edx-0x76],ecx
  439957:	xor    BYTE PTR [esi-0x3a],ah
  43995a:	loop   0x439962
  43995c:	cmp    al,0xfe
  43995e:	xchg   esp,eax
  43995f:	es mov ebx,0x447a44
  439965:	push   0x35
  439967:	push   ss
  439968:	push   DWORD PTR [ebx]
  43996a:	gs sub bl,dl
  43996d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43996e:	mov    bh,0x2d
  439970:	mov    ebp,0x6a
  439975:	sub    eax,0x401bfe16
  43997a:	sub    BYTE PTR [esi+0x7d2daf90],bh
  439980:	add    al,0x39
  439982:	xor    ebp,DWORD PTR [ebp+0x1b]
  439985:	xchg   edi,eax
  439986:	ins    BYTE PTR es:[edi],dx
  439987:	cld    
  439988:	jbe    0x439941
  43998a:	jno    0x439a09
  43998c:	in     al,dx
  43998d:	push   ss
  43998e:	xor    esi,DWORD PTR [edi+ebp*8-0x48]
  439992:	pusha  
  439993:	cld    
  439994:	pop    esi
  439995:	scas   eax,DWORD PTR es:[edi]
  439996:	jno    0x439a15
  439998:	aam    0x1e
  43999a:	add    al,0x73
  43999c:	clc    
  43999d:	test   al,0x8d
  43999f:	test   DWORD PTR [esi-0x49],0xf3f37ab1
  4399a6:	mov    edx,0x335b4128
  4399ab:	stc    
  4399ac:	xor    esi,DWORD PTR cs:[edx-0x4b220086]
  4399b3:	add    DWORD PTR [ecx],edx
  4399b5:	pop    edi
  4399b6:	xor    edi,ecx
  4399b8:	push   ss
  4399b9:	xor    esi,DWORD PTR [edx-0x4b390886]
  4399bf:	push   cs
  4399c0:	adc    DWORD PTR [eax+edi*1-0x53cb0107],esi
  4399c7:	add    eax,0xe7fbbcea
  4399cc:	jno    0x4399fa
  4399ce:	cs stc 
  4399d0:	stos   BYTE PTR es:[edi],al
  4399d1:	iret   
  4399d2:	mov    al,ds:0x7230defb
  4399d7:	test   DWORD PTR [eax+eax*1],ebp
  4399da:	add    BYTE PTR [eax],al
  4399dc:	in     eax,dx
  4399dd:	das    
  4399de:	inc    esp
  4399df:	or     ch,BYTE PTR [ebx+eax*8+0x1c]
  4399e3:	add    BYTE PTR [ecx-0x4c5c1838],cl
  4399e9:	ret    
  4399ea:	test   BYTE PTR [ebx+0x75000d27],0x4c
  4399f1:	fisttp DWORD PTR [ebp-0x4]
  4399f4:	xchg   ebp,eax
  4399f5:	ret    
  4399f6:	mov    edx,0xf90cf783
  4399fb:	je     0x439a59
  4399fd:	fild   DWORD PTR [ecx-0x4]
  439a00:	jne    0x4399c5
  439a02:	mov    edx,0xfa0cf783
  439a07:	je     0x439a28
  439a09:	fld    TBYTE PTR [esi]
  439a0b:	stc    
  439a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a0d:	ret    
  439a0e:	jp     0x439a8d
  439a10:	adc    BYTE PTR [eax],cl
  439a12:	pop    es
  439a13:	test   BYTE PTR [ecx],dl
  439a15:	add    eax,DWORD PTR [eax]
  439a17:	add    dl,al
  439a19:	xor    esi,ebp
  439a1b:	jmp    DWORD PTR [ebp-0x3828539]
  439a21:	pop    es
  439a22:	ins    DWORD PTR es:[edi],dx
  439a23:	sbb    eax,0xffb4589
  439a28:	aas    
  439a29:	sbb    ch,al
  439a2b:	push   ss
  439a2c:	and    ecx,edx
  439a2e:	test   BYTE PTR [ebx+0x73fafc97],0xb4
  439a35:	loop   0x439a40
  439a37:	cld    
  439a38:	cmc    
  439a39:	leave  
  439a3a:	mov    edx,0xf6eed6e8
  439a3f:	inc    DWORD PTR [eax]
  439a41:	add    BYTE PTR [eax],al
  439a43:	sbb    DWORD PTR [esi+0x6fce1675],eax
  439a49:	jmp    edi
  439a4b:	retf   0xf6ee
  439a4e:	(bad)  
  439a4f:	fld    DWORD PTR [ebp+0x6f8f1675]
  439a55:	jmp    edi
  439a57:	mov    esi,0x49fff6ed
  439a5c:	test   DWORD PTR [ebp+0x16],esi
  439a5f:	repz sbb eax,0x3f9b0eb8
  439a65:	xor    eax,0xbfa17cf9
  439a6a:	add    eax,0xe7eaf3f0
  439a6f:	dec    esi
  439a70:	jns    0x439ab0
  439a72:	stc    
  439a73:	xor    BYTE PTR [ecx+0xaf411bf],ah
  439a79:	adc    eax,0xd21d67d
  439a7e:	jae    0x439a62
  439a80:	xchg   DWORD PTR [ecx-0x8],eax
  439a83:	inc    esp
  439a84:	jge    0x439a08
  439a86:	jnp    0x439a71
  439a88:	and    BYTE PTR [ecx+0x3a604b0b],dh
  439a8e:	stc    
  439a8f:	sub    al,0x61
  439a91:	and    eax,0x3d9d28b6
  439a96:	mov    ebp,0xff1b5b68
  439a9b:	scas   eax,DWORD PTR es:[edi]
  439a9c:	add    BYTE PTR [ecx+0x4220d043],al
  439aa2:	call   0xf98172bf
  439aa7:	add    BYTE PTR [eax],al
  439aa9:	add    BYTE PTR [eax+0x43],dh
  439aac:	pop    ss
  439aad:	add    BYTE PTR [esi+0x52],bh
  439ab0:	and    eax,0x3df4eb91
  439ab5:	jge    0x439b1d
  439ab7:	sub    al,BYTE PTR [edx]
  439ab9:	or     DWORD PTR [esi-0x41],esi
  439abc:	cld    
  439abd:	push   ebx
  439abf:	pop    ss
  439ac0:	mov    ?,ebp
  439ac2:	int3   
  439ac3:	adc    al,0x42
  439ac5:	jge    0x439b0d
  439ac7:	ss add al,0x73
  439aca:	out    0x17,al
  439acc:	mov    ecx,0x832cb4f7
  439ad1:	jnp    0x439acc
  439ad3:	and    BYTE PTR [esi],cl
  439ad5:	sub    DWORD PTR [esi+0x1f],0xfffffffd
  439ad9:	dec    DWORD PTR [ebx-0x65c2a4fa]
  439adf:	sub    eax,0x150885a6
  439ae4:	in     eax,0xb6
  439ae6:	loope  0x439b06
  439ae8:	dec    eax
  439ae9:	cmp    al,0x7a
  439aeb:	sub    eax,0x9eebf66
  439af0:	jmp    0x5b03:0xe706d586
  439af7:	iret   
  439af8:	lods   eax,DWORD PTR ds:[esi]
  439af9:	inc    ecx
  439afa:	pop    edx
  439afb:	dec    ecx
  439afc:	mov    di,0xa02
  439b00:	adc    al,0x13
  439b02:	pop    ebx
  439b03:	les    ecx,FWORD PTR [esi+0xc894a41]
  439b09:	push   cs
  439b0a:	ds mov dl,0x15
  439b0d:	sub    al,0x0
  439b0f:	add    BYTE PTR [eax],al
  439b11:	cmc    
  439b12:	xor    DWORD PTR [edx+0x41],edi
  439b15:	outs   dx,BYTE PTR ds:[esi]
  439b16:	mov    esp,esi
  439b18:	sbb    edi,ebp
  439b1a:	mov    bl,0xe0
  439b1c:	sub    esp,ecx
  439b1e:	xor    DWORD PTR [edx+0x41],esp
  439b21:	push   esi
  439b22:	mov    esp,ebx
  439b24:	sbb    eax,esi
  439b26:	mov    bl,0xf7
  439b28:	sub    esp,esi
  439b2a:	cs dec edx
  439b2c:	inc    ecx
  439b2d:	jle    0x439ada
  439b2f:	in     al,dx
  439b30:	add    al,0x80
  439b32:	test   BYTE PTR [esi+0x21],0xe6
  439b36:	sub    al,0x32
  439b38:	inc    ebp
  439b39:	data16 stos BYTE PTR es:[edi],al
  439b3b:	ror    BYTE PTR [ecx],1
  439b3d:	pusha  
  439b3e:	push   ss
  439b3f:	movups xmm3,xmm3
  439b42:	sub    al,0x1a
  439b44:	test   DWORD PTR [eax+0x1],ecx
  439b47:	out    0xb6,al
  439b49:	fstp   QWORD PTR [esi]
  439b4b:	fistp  QWORD PTR [edx+edi*4]
  439b4e:	sub    al,0x26
  439b50:	test   DWORD PTR [eax],edi
  439b52:	adc    eax,0x1ef3c0e2
  439b57:	add    ah,bh
  439b59:	jmp    0x439b88
  439b5b:	stc    
  439b5c:	add    ch,cl
  439b5e:	push   ds
  439b5f:	repz jecxz 0x439b95
  439b62:	cs mov ebp,0xff12b572
  439b68:	sub    ecx,DWORD PTR [esi-0xaf5bd55]
  439b6e:	imul   ebp,eax,0xf92db70f
  439b74:	push   0x0
  439b76:	add    BYTE PTR [eax],al
  439b78:	lods   eax,DWORD PTR ds:[esi]
  439b79:	push   ss
  439b7a:	add    BYTE PTR [eax+eax*1],bh
  439b7d:	pop    ds
  439b7e:	into   
  439b7f:	mov    dh,0xb3
  439b81:	sub    eax,0x29e5247d
  439b86:	je     0x439bc0
  439b88:	pop    ds
  439b89:	inc    ecx
  439b8a:	not    BYTE PTR [esi+0xc7d69b3]
  439b90:	fldcw  WORD PTR [ebx]
  439b92:	je     0x439b6c
  439b94:	or     BYTE PTR [edx-0xf],dh
  439b97:	jle    0x439b4c
  439b99:	test   eax,0xb7efe37a
  439b9e:	xor    eax,0xf9349b81
  439ba3:	scas   ax,WORD PTR es:[edi]
  439ba5:	test   eax,0xb7f6f77a
  439baa:	push   cs
  439bab:	inc    ecx
  439bac:	mov    WORD PTR ds:0xb0774ef9,?
  439bb2:	add    eax,0xe80b3dea
  439bb7:	mov    DWORD PTR [esi],ebp
  439bb9:	cs stc 
  439bbb:	sub    ch,BYTE PTR [edi-0x51]
  439bbe:	adc    edx,ebp
  439bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439bc1:	cld    
  439bc2:	out    0x74,eax
  439bc4:	sbb    ebp,DWORD PTR [esi]
  439bc6:	stc    
  439bc7:	push   0xffffff8d
  439bc9:	add    ebp,edi
  439bcb:	fwait
  439bcc:	hlt    
  439bcd:	push   ds
  439bce:	xchg   DWORD PTR [ebx],edx
  439bd0:	xor    ebp,DWORD PTR [esi]
  439bd2:	mov    ebp,0xf282e200
  439bd7:	jmp    FWORD PTR [ebp+0x4582c7]
  439bdd:	add    BYTE PTR [eax],al
  439bdf:	ror    BYTE PTR [eax],0x3d
  439be2:	and    ecx,DWORD PTR [ecx]
  439be4:	inc    ebp
  439be5:	sbb    al,0x2
  439be7:	dec    ecx
  439be8:	jmp    0x439c26
  439bea:	and    edx,DWORD PTR [ebp+0x3d]
  439bed:	sti    
  439bee:	setp   BYTE PTR [edi]
  439bf1:	add    dh,bh
  439bf3:	xlat   BYTE PTR ds:[ebx]
  439bf4:	sub    BYTE PTR [ecx+0x7d],bh
  439bf7:	call   0x424a08f7
  439bfc:	dec    ebx
  439bfd:	repz call FWORD PTR [ebp-0x16ba7d39]
  439c04:	sti    
  439c05:	lods   eax,DWORD PTR ds:[esi]
  439c06:	or     bh,bl
  439c08:	inc    BYTE PTR [ebp-0x3f77a5fd]
  439c0e:	add    al,0x5d
  439c10:	sar    BYTE PTR [esi-0x6d8b7bb],cl
  439c16:	dec    DWORD PTR [edx-0x38]
  439c19:	test   BYTE PTR [ebp+0x39],0xe9
  439c1d:	cmp    al,0x22
  439c1f:	call   0xe801:0x270f1b45
  439c26:	xor    eax,0xc3f6eb90
  439c2b:	adc    DWORD PTR [ebp-0x1],0x5579b3d0
  439c32:	push   es
  439c33:	xchg   ecx,eax
  439c34:	cmp    eax,0xfa740f1c
  439c39:	test   BYTE PTR [esp+ebx*2],al
  439c3c:	push   es
  439c3d:	add    BYTE PTR [ebx-0x2f0900e6],al
  439c43:	add    BYTE PTR [eax],al
  439c45:	add    BYTE PTR [ecx+0x28],dl
  439c48:	call   eax
  439c4a:	jmp    0x439cc7
  439c4c:	inc    ebp
  439c4d:	push   es
  439c4e:	sbb    edx,ebp
  439c50:	cmp    al,0x23
  439c52:	repz adc edi,eax
  439c55:	sbb    eax,0x8df7b73
  439c5a:	sbb    ah,BYTE PTR ds:0x3a29aafe
  439c61:	mov    ebp,0x8de5b78
  439c66:	gs and cl,bh
  439c69:	mov    ds:0xa0f92e1f,eax
  439c6e:	pop    es
  439c6f:	sbb    bh,cl
  439c71:	test   eax,0xa8f925ff
  439c76:	pop    es
  439c77:	and    bh,cl
  439c79:	or     bh,bh
  439c7b:	sbb    eax,0xe3350426
  439c80:	add    edi,edi
  439c82:	jns    0x439c5f
  439c84:	fmul   QWORD PTR [eax]
  439c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439c87:	sub    BYTE PTR [eax-0x2e29afc],dl
  439c8d:	jl     0x439cc2
  439c8f:	and    al,0x3a
  439c91:	shr    BYTE PTR ds:0x300003db,1
  439c97:	jns    0x439c61
  439c99:	sbb    al,0x35
  439c9b:	fcmovnu st,st(5)
  439c9d:	jg     0x439c4d
  439c9f:	cmp    eax,0x87ed730a
  439ca4:	jbe    0x439c9d
  439ca6:	sbb    al,0x99
  439ca8:	cmp    eax,0x85
  439cad:	scas   al,BYTE PTR es:[edi]
  439cae:	cld    
  439caf:	or     BYTE PTR [edx+0x74940bf3],dh
  439cb5:	lds    edx,FWORD PTR [ebx]
  439cb7:	push   0x66fbb974
  439cbc:	je     0x439c7b
  439cbe:	add    esp,DWORD PTR [edx+0x74]
  439cc1:	and    DWORD PTR [edx+eiz*2],ebp
  439cc4:	je     0x439cdb
  439cc6:	xor    al,0x67
  439cc8:	je     0x439cd3
  439cca:	sbb    al,0x66
  439ccc:	je     0x439cdb
  439cce:	pop    es
  439ccf:	jecxz  0x439d40
  439cd1:	inc    edi
  439cd2:	in     eax,0xda
  439cd4:	jo     0x439d15
  439cd6:	or     ebx,edx
  439cd8:	ins    DWORD PTR es:[edi],dx
  439cd9:	inc    edi
  439cda:	or     eax,0x113f6ecb
  439cdf:	ret    
  439ce0:	scas   eax,DWORD PTR es:[edi]
  439ce1:	and    BYTE PTR ds:0xf920b0bb,dl
  439ce7:	mov    dl,0xad
  439ce9:	and    ch,bh
  439ceb:	stos   BYTE PTR es:[edi],al
  439cec:	scas   al,BYTE PTR es:[edi]
  439ced:	and    BYTE PTR [ecx],al
  439cef:	and    ecx,DWORD PTR ds:0x8ce0507
  439cf5:	mov    cl,0xc3
  439cf7:	out    0x2,eax
  439cf9:	jbe    0x439cbe
  439cfb:	add    eax,0x73fe410d
  439d00:	or     BYTE PTR [ecx+0x5],bh
  439d03:	out    0x80,eax
  439d05:	xor    eax,DWORD PTR [edx]
  439d07:	mov    dl,0x54
  439d09:	xor    ebx,eax
  439d0b:	out    0x3,eax
  439d0d:	xchg   esi,eax
  439d0e:	sub    DWORD PTR [ecx+eiz*8],ebp
  439d11:	add    BYTE PTR [eax],al
  439d13:	add    BYTE PTR [edx-0x3d],cl
  439d16:	les    eax,FWORD PTR [ebx-0x491e1b38]
  439d1c:	repnz push ds
  439d1e:	pop    ds
  439d1f:	cmp    edi,DWORD PTR [edx]
  439d21:	sub    DWORD PTR [esi-0x161a4f77],esp
  439d27:	jne    0x439d24
  439d29:	jnp    0x439d96
  439d2b:	mov    ?,ebx
  439d2d:	add    ah,bh
  439d2f:	add    edx,DWORD PTR [esi]
  439d31:	sub    DWORD PTR [esi+0x44],esp
  439d34:	imul   DWORD PTR [ecx]
  439d36:	aaa    
  439d37:	inc    ecx
  439d38:	or     al,bl
  439d3a:	add    eax,0x66e4b03e
  439d3f:	mov    edi,0x5bbf9d6
  439d44:	(bad)  
  439d46:	aas    
  439d47:	cmp    eax,0x620044ea
  439d4c:	mov    ah,0xb
  439d4e:	or     DWORD PTR [edi-0x19],esi
  439d51:	jnp    0x439cd7
  439d53:	ja     0x439d4c
  439d55:	(bad)  
  439d56:	(bad)  
  439d57:	call   0x29c0a44f
  439d5c:	jmp    0x439d8b
  439d5e:	shr    BYTE PTR [edx],1
  439d60:	test   bl,0x1c
  439d63:	pop    es
  439d64:	mov    ah,0xa
  439d66:	cmp    BYTE PTR [edx+edx*4-0x1],0x72
  439d6b:	out    dx,eax
  439d6c:	enter  0xf830,0xee
  439d70:	xlat   BYTE PTR ds:[ebx]
  439d71:	imul   eax,DWORD PTR [ebp-0x4e006dd4],0xf1
  439d7b:	jne    0x439d00
  439d7d:	mov    ch,cl
  439d7f:	in     al,dx
  439d80:	push   es
  439d81:	add    dl,ch
  439d83:	lock test eax,0x572fedbf
  439d89:	mov    ebp,0x122da6
  439d8e:	jmp    0x24c8a483
  439d93:	push   edx
  439d94:	push   DWORD PTR [ecx-0x47140fd7]
  439d9a:	jmp    0xf8bca48f
  439d9f:	or     bl,bh
  439da1:	icebp  
  439da2:	mov    ?,edi
  439da4:	test   eax,0xacf7df7a
  439da9:	add    DWORD PTR [ecx+0x76f92ea7],edx
  439daf:	mov    bl,0x1e
  439db1:	scas   al,BYTE PTR es:[edi]
  439db2:	je     0x439d8b
  439db4:	sub    eax,0x27eaac85
  439db9:	inc    esp
  439dba:	or     dh,BYTE PTR [edx-0x3c]
  439dbd:	sbb    al,0xeb
  439dbf:	mov    bl,0x45
  439dc1:	inc    ebx
  439dc2:	repz lock push es
  439dc5:	add    BYTE PTR [eax],al
  439dc7:	fidivr DWORD PTR [esi+0x3d]
  439dca:	and    edx,ebp
  439dcc:	mov    cl,0x3f
  439dce:	add    edi,esp
  439dd0:	stos   BYTE PTR es:[edi],al
  439dd1:	(bad)  
  439dd2:	dec    edx
  439dd4:	push   0x10
  439dd6:	call   0x3a8ee7
  439ddb:	pop    ecx
  439ddc:	imul   ecx,DWORD PTR [edi],0x1
  439de2:	pop    edi
  439de3:	pop    esp
  439de4:	jl     0x439e63
  439de6:	mov    esp,0x2637602
  439deb:	xchg   eax,edi
  439ded:	jmp    DWORD PTR [ebp-0x753fcb19]
  439df3:	add    eax,DWORD PTR [eax]
  439df5:	jl     0x439e73
  439df7:	jl     0x439db3
  439df9:	shl    DWORD PTR [eax+0x19c18106],0xe2
  439e00:	push   es
  439e01:	and    DWORD PTR [eax+0x90b6cfd],0xffffffea
  439e08:	push   DWORD PTR [ebx+0x18]
  439e0b:	fistp  DWORD PTR [ecx-0x8]
  439e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439e0f:	jmp    0x439dcb
  439e11:	and    DWORD PTR [eax-0x36c89304],0xffffffe9
  439e18:	stc    
  439e19:	je     0x439e77
  439e1b:	fisttp DWORD PTR [ecx-0x8]
  439e1e:	gs jmp 0x439ddb
  439e21:	and    DWORD PTR [ebx-0x1],0x6c
  439e25:	push   es
  439e26:	jb     0x439e6b
  439e28:	icebp  
  439e29:	push   DWORD PTR [ebp-0x41]
  439e2c:	jp     0x439e27
  439e2e:	or     al,0x76
  439e30:	jmp    edi
  439e32:	data16 jmp 0x439e2b
  439e35:	dec    DWORD PTR [ecx+0x7f]
  439e38:	icebp  
  439e39:	pop    es
  439e3a:	das    
  439e3b:	add    eax,0xeb9231e8
  439e40:	test   bl,0xf3
  439e43:	pushf  
  439e44:	cmp    cl,BYTE PTR [ecx]
  439e46:	add    BYTE PTR [eax],al
  439e48:	add    BYTE PTR [esi+0x1f],bh
  439e4b:	and    eax,0x34cdeb22
  439e50:	mov    ebp,0xf93027db
  439e55:	fsubr  QWORD PTR [ecx+0x6af215be]
  439e5b:	loop   0x439ed9
  439e5d:	ss push ecx
  439e5f:	add    edi,DWORD PTR [ebp+0x1b6bac]
  439e65:	repz das 
  439e67:	std    
  439e68:	test   BYTE PTR [esi],ch
  439e6a:	push   ecx
  439e6b:	push   es
  439e6c:	mov    dl,0x33
  439e6e:	das    
  439e6f:	clc    
  439e70:	mov    eax,0x78fd2ff3
  439e75:	add    cl,BYTE PTR [eax]
  439e77:	div    edx
  439e79:	xchg   esp,eax
  439e7a:	xor    eax,0x34e57b82
  439e7f:	mov    bh,0x2d
  439e81:	fwait
  439e82:	inc    eax
  439e83:	cs stc 
  439e85:	jl     0x439ef8
  439e87:	clc    
  439e88:	mov    edi,0x7bfd2ff3
  439e8d:	push   ss
  439e8e:	xchg   edi,eax
  439e8f:	inc    edx
  439e90:	mov    edi,0xbf8c2c59
  439e95:	jo     0x439ee6
  439e97:	push   es
  439e98:	jge    0x439ef3
  439e9a:	inc    esi
  439e9b:	mov    al,0x4
  439e9d:	jo     0x439f06
  439e9f:	or     al,0x74
  439ea1:	loop   0x439f1a
  439ea3:	inc    esi
  439ea4:	icebp  
  439ea5:	cmp    al,0x7d
  439ea7:	inc    edx
  439ea8:	jge    0x439ee3
  439eaa:	inc    ebp
  439eab:	mov    al,0x1
  439ead:	add    BYTE PTR [eax],al
  439eaf:	add    BYTE PTR [ebx],bl
  439eb1:	je     0x439ee1
  439eb3:	stc    
  439eb4:	and    al,0x71
  439eb6:	and    eax,0x359d27b1
  439ebb:	test   DWORD PTR [esi-0x2fbcfbc7],ebp
  439ec1:	push   es
  439ec2:	data16 shl bh,0x8
  439ec6:	es inc edx
  439ec8:	mov    al,0x0
  439eca:	out    0x3,eax
  439ecc:	repz push es
  439ece:	pop    esi
  439ecf:	ror    BYTE PTR [edi],0x16
  439ed2:	jns    0x439e97
  439ed4:	in     eax,0xe2
  439ed6:	jns    0x439edb
  439ed8:	repz push es
  439eda:	mov    dl,0x1a
  439edc:	retf   
  439edd:	inc    ecx
  439ede:	xor    edi,DWORD PTR [edx]
  439ee0:	retf   0xa489
  439ee3:	adc    edi,ebp
  439ee5:	call   0xafe8:0xfd3886e8
  439eec:	in     al,dx
  439eed:	mov    DWORD PTR [ecx+edx*1+0x2ee4a5f2],ecx
  439ef4:	in     al,0x2e
  439ef6:	xor    bl,BYTE PTR [bp+si+0x2625]
  439efb:	clc    
  439efc:	push   esp
  439efd:	push   es
  439efe:	out    0x3,eax
  439f00:	pand   mm5,QWORD PTR [edi+0x46]
  439f04:	inc    esp
  439f05:	xor    bl,ah
  439f07:	mov    bh,BYTE PTR [ecx+ecx*4]
  439f0a:	enter  0xf609,0x20
  439f0e:	fldcw  WORD PTR [esi+0xcc08a01]
  439f14:	add    BYTE PTR [eax],al
  439f16:	add    al,ch
  439f18:	out    0x65,al
  439f1a:	cmp    ebx,DWORD PTR [esi-0x67]
  439f1d:	int    0x84
  439f1f:	pop    esp
  439f20:	or     BYTE PTR [ebx],dh
  439f22:	adc    bl,BYTE PTR [ebx-0x45]
  439f25:	cdq    
  439f26:	cmp    DWORD PTR [edx+0x49],ecx
  439f29:	ds jmp 0x3c84:0xdd9b
  439f30:	push   cs
  439f31:	or     eax,DWORD PTR [edx]
  439f33:	sbb    ecx,ebx
  439f35:	jns    0x439f70
  439f37:	sub    cl,BYTE PTR [ecx-0x71]
  439f3a:	cld    
  439f3b:	and    BYTE PTR ds:0xc9667600,ah
  439f41:	adc    eax,0x7d024de8
  439f46:	lods   al,BYTE PTR ds:[esi]
  439f47:	mov    db7,esi
  439f4a:	es cmp al,0xfb
  439f4d:	(bad)  
  439f4e:	call   0xa4c8a643
  439f53:	xlat   BYTE PTR ds:[ebx]
  439f54:	lss    ebp,FWORD PTR [ecx-0x1647200f]
  439f5b:	lock push es
  439f5d:	jns    0x439f37
  439f5f:	or     bl,al
  439f61:	repz or ah,BYTE PTR cs:[edx-0x5f0c0086]
  439f69:	sbb    eax,0xf915ea11
  439f6e:	push   ss
  439f6f:	cs loopne 0x439f31
  439f72:	jmp    0xdcbfa667
  439f77:	jns    0x439fde
  439f79:	mov    edi,0x13
  439f7e:	repz mov edi,DWORD PTR [edi+0x7d0dd06a]
  439f85:	repz cmc 
  439f87:	xchg   edi,eax
  439f88:	add    ecx,edx
  439f8a:	mov    edi,0x37def918
  439f8f:	das    
  439f90:	loop   0x439f6c
  439f92:	mov    ebx,0xd24851d
  439f97:	and    al,0x44
  439f99:	or     ch,BYTE PTR [esi-0x38]
  439f9c:	sbb    al,0xeb
  439f9e:	mov    bh,0x45
  439fa0:	inc    ebx
  439fa1:	shl    eax,cl
  439fa3:	push   es
  439fa4:	add    cl,ch
  439fa6:	jg     0x439f70
  439fa8:	sbb    al,0xf6
  439faa:	ret    0xfec6
  439fad:	fstp   TBYTE PTR [ebx+0x7be90006]
  439fb3:	std    
  439fb4:	out    0xe3,eax
  439fb6:	fcomp  QWORD PTR ds:0x5c9900f9
  439fbc:	syscall 
  439fbe:	adc    BYTE PTR es:[ebx+0x7d],bh
  439fc2:	xor    al,0x7
  439fc4:	ja     0x439fc8
  439fc6:	jno    0x439fe2
  439fc8:	loope  0x439f7f
  439fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439fcb:	fdivrp st(6),st
  439fcd:	ret    
  439fce:	(bad)  
  439fd0:	(bad)  
  439fd1:	dec    DWORD PTR [edx]
  439fd3:	pop    esp
  439fd4:	push   ds
  439fd5:	mov    DWORD PTR [eax],ebx
  439fd7:	leave  
  439fd8:	loope  0x439fde
  439fda:	arpl   cx,cx
  439fdc:	jp     0x439fbf
  439fde:	int    0x8a
  439fe0:	repnz or al,0x0
  439fe3:	add    BYTE PTR [eax],al
  439fe5:	xchg   edi,eax
  439fe6:	adc    bh,BYTE PTR [ebx-0x7]
  439fe9:	rcr    BYTE PTR [ebx+0xa],cl
  439fec:	call   0x3a7637
  439ff1:	or     DWORD PTR [ebx+0x5570ff2],ecx
  439ff7:	call   0xf722a485
  439ffc:	ret    
  439ffd:	add    bl,BYTE PTR [esp+ebp*8-0x1]
  43a001:	popf   
  43a002:	(bad)  
  43a003:	cmp    eax,0x1c648b1a
  43a008:	adc    DWORD PTR [edi+0x2a],0xfffffffb
  43a00c:	ret    0x4555
  43a00f:	adc    eax,DWORD PTR [eax]
  43a011:	mov    al,BYTE PTR [edi]
  43a013:	add    BYTE PTR [ebx-0x49f7d839],cl
  43a019:	sbb    cl,BYTE PTR [edx]
  43a01b:	xor    eax,0x75abf
  43a020:	jg     0x43a05d
  43a022:	out    dx,eax
  43a023:	lahf   
  43a024:	repz popf 
  43a026:	fstp   TBYTE PTR [edx+0x7d]
  43a029:	and    al,0x24
  43a02b:	ja     0x43a054
  43a02d:	bound  esi,QWORD PTR [edi]
  43a02f:	out    dx,eax
  43a030:	call   FWORD PTR [ebp-0x39]
  43a033:	xor    al,0xc0
  43a035:	repz sub eax,0x17affffd
  43a03b:	mov    WORD PTR [esi-0x78ff88ce],?
  43a041:	xor    dh,BYTE PTR [eax-0x688ff6de]
  43a047:	push   es
  43a048:	jae    0x43a04a
  43a04a:	add    BYTE PTR [eax],al
  43a04c:	clc    
  43a04d:	mov    al,0x3a
  43a04f:	pop    es
  43a050:	jg     0x43a085
  43a052:	and    eax,0x30c4052e
  43a057:	mov    ebp,0xf92d120b
  43a05c:	in     al,dx
  43a05d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a05e:	mov    esi,0xde72f215
  43a063:	jl     0x43a09b
  43a065:	or     eax,0x73acbcfe
  43a06a:	pop    ss
  43a06b:	add    bl,dh
  43a06d:	das    
  43a06e:	std    
  43a06f:	test   BYTE PTR [esi],ch
  43a071:	dec    ebp
  43a072:	add    dh,BYTE PTR [edx-0x4707d0cd]
  43a078:	repz das 
  43a07a:	std    
  43a07b:	js     0x43a07f
  43a07d:	or     bl,cl
  43a07f:	in     al,dx
  43a080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a081:	or     DWORD PTR [ebp+0x7b],edi
  43a084:	add    eax,0x8b4db329
  43a089:	sbb    al,0x30
  43a08b:	stc    
  43a08c:	mov    ebp,gs
  43a08e:	idiv   BYTE PTR [edi+0x7bfd2ff3]
  43a094:	ss xchg edi,eax
  43a096:	ds mov edi,0xbf8c3489
  43a09c:	jo     0x43a0ed
  43a09e:	add    bh,BYTE PTR [ebp+0x69]
  43a0a1:	sbb    al,0xb0
  43a0a3:	add    DWORD PTR [ebx+0x50],ecx
  43a0a6:	xor    cl,bh
  43a0a8:	push   esp
  43a0a9:	ins    DWORD PTR es:[edi],dx
  43a0aa:	jle    0x43a0a2
  43a0ac:	(bad)  
  43a0ad:	(bad)  
  43a0af:	out    0x0,eax
  43a0b1:	add    BYTE PTR [eax],al
  43a0b3:	push   ds
  43a0b4:	pop    es
  43a0b5:	pushf  
  43a0b6:	cmp    al,BYTE PTR ss:[esi+0x66]
  43a0ba:	cmp    ecx,ebp
  43a0bc:	fwait
  43a0bd:	test   BYTE PTR [edx+0x1b130724],0xa6
  43a0c4:	pop    ds
  43a0c5:	out    dx,eax
  43a0c6:	mov    eax,0x30a72f02
  43a0cb:	sbb    ah,BYTE PTR [edx]
  43a0cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a0ce:	add    BYTE PTR ds:0x860af412,0x1f
  43a0d5:	out    dx,eax
  43a0d6:	mov    bh,0xf2
  43a0d8:	cs xchg edi,eax
  43a0da:	xor    dl,bh
  43a0dc:	and    DWORD PTR [esi],esp
  43a0de:	sub    ecx,DWORD PTR [esi+0x6e364a14]
  43a0e4:	retf   
  43a0e5:	fadd   QWORD PTR [eax+esi*1]
  43a0e8:	out    0x65,al
  43a0ea:	shl    bh,0x4
  43a0ed:	es inc edi
  43a0ef:	mov    edi,0xc7b4ff52
  43a0f4:	and    edi,esp
  43a0f6:	add    esi,ebx
  43a0f8:	push   es
  43a0f9:	out    0x3,eax
  43a0fb:	repz push es
  43a0fd:	xchg   edi,eax
  43a0fe:	sub    DWORD PTR [esi-0xcececdf],0x6
  43a105:	div    DWORD PTR [ecx+0x3e7219f]
  43a10b:	repz push es
  43a10d:	out    0x3,eax
  43a10f:	repz push es
  43a111:	mov    cl,0x7e
  43a113:	xchg   BYTE PTR [ecx],ah
  43a115:	mov    ds:0x11,eax
  43a11a:	repz push es
  43a11c:	adc    esi,DWORD PTR [edi+esi*2-0xcfc18df]
  43a123:	push   es
  43a124:	out    0x3,eax
  43a126:	repz push es
  43a128:	or     ecx,DWORD PTR [edx+0x13e7215e]
  43a12e:	repz push es
  43a130:	add    BYTE PTR [ebp-0x7e],ah
  43a133:	and    bh,cl
  43a135:	jmp    0xe943a82a
  43a13a:	lock push es
  43a13c:	add    BYTE PTR [edi+0x6a],bh
  43a13f:	and    edi,ecx
  43a141:	xor    DWORD PTR [edx],eax
  43a143:	pop    es
  43a144:	add    BYTE PTR ds:0xe9f92262,cl
  43a14a:	lock push es
  43a14c:	add    cl,ch
  43a14e:	lock push es
  43a150:	add    BYTE PTR [ebp+0x21f9237a],cl
  43a156:	loop   0x43a15e
  43a158:	add    BYTE PTR [ecx+0x42],dl
  43a15b:	and    bh,cl
  43a15d:	jmp    0xe943a852
  43a162:	lock push es
  43a164:	add    bl,ch
  43a166:	ins    BYTE PTR es:[edi],dx
  43a167:	and    bh,cl
  43a169:	jge    0x43a16d
  43a16b:	pop    es
  43a16c:	add    BYTE PTR [ecx-0x1606dc7b],dl
  43a172:	lock push es
  43a174:	add    cl,ch
  43a176:	lock push es
  43a178:	add    BYTE PTR [edi+0x6b],ah
  43a17b:	and    bh,cl
  43a17d:	xchg   ebp,eax
  43a17e:	add    BYTE PTR [eax],al
  43a180:	add    dh,ah
  43a182:	push   es
  43a183:	add    BYTE PTR [ecx],cl
  43a185:	addr16 and edi,ecx
  43a188:	jmp    0xe943a87d
  43a18d:	lock push es
  43a18f:	add    BYTE PTR [edi+0x6c],cl
  43a192:	and    bh,cl
  43a194:	inc    ebp
  43a195:	out    0x6,eax
  43a197:	add    BYTE PTR ds:0xe9f92354,al
  43a19d:	lock push es
  43a19f:	add    cl,ch
  43a1a1:	lock push es
  43a1a3:	add    BYTE PTR [ecx],dh
  43a1a5:	jne    0x43a1c9
  43a1a7:	stc    
  43a1a8:	cdq    
  43a1a9:	cmc    
  43a1aa:	push   es
  43a1ab:	add    BYTE PTR [eax],al
  43a1ad:	jbe    0x43a203
  43a1af:	cld    
  43a1b0:	dec    DWORD PTR [edx+0x4]
  43a1b3:	add    BYTE PTR [eax],al
  43a1b5:	pop    edx
  43a1b6:	add    al,0x0
  43a1b8:	add    BYTE PTR [esi],bh
  43a1ba:	mov    edi,ebx
  43a1bc:	inc    edx
  43a1be:	repz (bad) 
  43a1c0:	inc    edx
  43a1c2:	jo     0x43a1c0
  43a1c4:	call   FWORD PTR [edx]
  43a1c6:	add    al,0x0
  43a1c8:	add    BYTE PTR [edx],bl
  43a1ca:	add    al,0x0
  43a1cc:	add    BYTE PTR [esi+0x75],bl
  43a1cf:	sti    
  43a1d0:	(bad)  
  43a1d1:	dec    BYTE PTR [edi]
  43a1d3:	add    BYTE PTR [eax],al
  43a1d5:	repnz push ebp
  43a1d7:	cld    
  43a1d8:	call   FWORD PTR [edx]
  43a1da:	add    al,0x0
  43a1dc:	add    BYTE PTR [edx],cl
  43a1de:	add    al,0x0
  43a1e0:	add    BYTE PTR [edx+0x75],cl
  43a1e3:	sti    
  43a1e4:	inc    DWORD PTR [eax]
  43a1e6:	add    BYTE PTR [eax],al
  43a1e8:	push   cs
  43a1e9:	idiv   bh
  43a1eb:	jmp    DWORD PTR [edx-0x350003aa]
  43a1f1:	add    eax,DWORD PTR [eax]
  43a1f3:	add    dl,cl
  43a1f5:	add    eax,DWORD PTR [eax]
  43a1f7:	add    BYTE PTR [eax+0x75],bl
  43a1fa:	sti    
  43a1fb:	(bad)  
  43a1fc:	out    dx,al
  43a1fd:	cmc    
  43a1fe:	(bad)  
  43a1ff:	jmp    FWORD PTR [edx-0x350003ac]
  43a205:	add    eax,DWORD PTR [eax]
  43a207:	add    BYTE PTR [edx+0x32000003],bl
  43a20d:	jne    0x43a20a
  43a20f:	inc    DWORD PTR [esi]
  43a211:	hlt    
  43a212:	(bad)  
  43a213:	jmp    FWORD PTR [edx+0x71]
  43a216:	cld    
  43a217:	call   FWORD PTR [edx-0x65fffffd]
  43a21d:	add    eax,DWORD PTR [eax]
  43a21f:	add    ah,cl
  43a221:	js     0x43a21e
  43a223:	jmp    esi
  43a225:	cld    
  43a226:	(bad)  
  43a227:	push   ebx
  43a229:	sub    eax,0x2df3fffd
  43a22e:	std    
  43a22f:	push   ebx
  43a231:	sub    eax,0x2df3fffd
  43a236:	std    
  43a237:	push   ebx
  43a239:	sub    eax,0xebf3fffd
  43a23e:	test   ch,bh
  43a240:	cmp    al,0x11
  43a242:	test   ebp,edi
  43a244:	xor    al,0xff
  43a246:	test   ch,bh
  43a248:	sub    al,0x9b
  43a24a:	test   ch,bh
  43a24c:	add    BYTE PTR [eax],al
  43a24e:	add    BYTE PTR [ebx+eax*8],ah
  43a251:	test   ch,bh
  43a253:	sbb    al,0x6d
  43a255:	test   ebp,edi
  43a257:	adc    al,0x7b
  43a259:	test   ebp,edi
  43a25b:	or     al,0x8f
  43a25d:	test   ebp,edi
  43a25f:	add    al,0x97
  43a261:	test   ch,bh
  43a263:	cld    
  43a264:	adc    dh,BYTE PTR [ebp-0x3]
  43a267:	hlt    
  43a268:	or     al,0x7c
  43a26a:	std    
  43a26b:	in     al,dx
  43a26c:	add    bh,BYTE PTR [ebp+edi*8-0x1c]
  43a270:	jl     0x43a2e7
  43a272:	std    
  43a273:	fcom   QWORD PTR [edx+0x75]
  43a276:	std    
  43a277:	aam    0x4a
  43a279:	jne    0x43a278
  43a27b:	int3   
  43a27c:	ret    0xfd7b
  43a27f:	les    ecx,FWORD PTR [edx-0xd430284]
  43a285:	jnp    0x43a284
  43a287:	mov    ah,0xd6
  43a289:	jnp    0x43a288
  43a28b:	lods   al,BYTE PTR ds:[esi]
  43a28c:	or     BYTE PTR [ebp+edi*8-0x5c],bh
  43a290:	cli    
  43a291:	jnp    0x43a290
  43a293:	pushf  
  43a294:	ds jl  0x43a294
  43a297:	xchg   esp,eax
  43a298:	push   esi
  43a299:	jl     0x43a298
  43a29b:	mov    WORD PTR [edx-0x557b0284],es
  43a2a1:	jp     0x43a2a0
  43a2a3:	jl     0x43a2ac
  43a2a5:	mov    DWORD PTR [esi+esi*2+0x1e],edi
  43a2a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a2aa:	jl     0x43a31a
  43a2ac:	push   ds
  43a2ad:	mov    ebx,0xbf1e667c
  43a2b2:	jl     0x43a2b4
  43a2b4:	add    BYTE PTR [eax],al
  43a2b6:	pop    esi
  43a2b7:	push   ds
  43a2b8:	mov    edi,0xe11e567c
  43a2bd:	jge    0x43a30d
  43a2bf:	push   ds
  43a2c0:	iret   
  43a2c1:	jge    0x43a309
  43a2c3:	push   ds
  43a2c4:	adc    ecx,DWORD PTR [ebx+0x3e71e3e]
  43a2ca:	repz push es
  43a2cc:	popf   
  43a2cd:	sub    DWORD PTR [esi],0x2681b31e
  43a2d3:	push   ds
  43a2d4:	popf   
  43a2d5:	sbb    DWORD PTR [esi],0x1681351e
  43a2db:	push   ds
  43a2dc:	push   edi
  43a2dd:	or     DWORD PTR [esi],0x681ed1e
  43a2e3:	push   ds
  43a2e4:	add    eax,DWORD PTR [edx-0x7cfce202]
  43a2ea:	neg    BYTE PTR ds:0x6f303e7
  43a2f0:	popa   
  43a2f1:	and    dh,0x1d
  43a2f4:	cmc    
  43a2f5:	sbb    dh,0x1d
  43a2f8:	aas    
  43a2f9:	jg     0x43a2d1
  43a2fb:	sbb    eax,0x1dce8063
  43a300:	scas   eax,DWORD PTR es:[edi]
  43a301:	add    dh,0x1d
  43a304:	ret    
  43a305:	cmp    BYTE PTR [esi-0x497f40e3],0x1d
  43a30c:	lods   eax,DWORD PTR ds:[esi]
  43a30d:	sub    BYTE PTR [esi-0x597f58e3],0x1d
  43a314:	rol    DWORD PTR [eax-0x7f30e262],cl
  43a31a:	add    BYTE PTR [eax],al
  43a31c:	add    BYTE PTR [esi-0x7180f0e3],dl
  43a322:	sbb    eax,0x1b735300
  43a327:	stc    
  43a328:	and    esp,edi
  43a32a:	sbb    edi,ecx
  43a32c:	shl    DWORD PTR [ebx+0x1b],0xf9
  43a330:	jmp    0x7943aa25
  43a335:	sbb    BYTE PTR [ebx],0xf9
  43a338:	jmp    0x4743aa2d
  43a33d:	xchg   BYTE PTR [edx],bl
  43a33f:	stc    
  43a340:	pop    ecx
  43a341:	sahf   
  43a342:	sbb    bh,cl
  43a344:	(bad)  
  43a345:	xchg   esi,eax
  43a346:	sbb    bh,cl
  43a348:	jae    0x43a2d8
  43a34a:	sbb    bh,cl
  43a34c:	mov    bh,0x86
  43a34e:	sbb    bh,cl
  43a350:	xchg   DWORD PTR [esi+0x1a],ebx
  43a353:	stc    
  43a354:	fwait
  43a355:	push   esi
  43a356:	sbb    bh,cl
  43a358:	(bad)  
  43a359:	dec    esi
  43a35a:	sbb    bh,cl
  43a35c:	repz inc esp
  43a35e:	sbb    bh,cl
  43a360:	xlat   BYTE PTR ds:[ebx]
  43a361:	pop    esp
  43a362:	sbb    bh,cl
  43a364:	iret   
  43a365:	push   esp
  43a366:	sbb    bh,cl
  43a368:	mov    bh,0x4c
  43a36a:	sbb    bh,cl
  43a36c:	mov    bl,0x44
  43a36e:	sbb    bh,cl
  43a370:	lds    ebx,FWORD PTR [ebx+ebx*1+0x1b94dff9]
  43a377:	stc    
  43a378:	mov    gs:0xa35df91b,eax
  43a37e:	sbb    edi,ecx
  43a380:	test   DWORD PTR [eax],eax
  43a382:	add    BYTE PTR [eax],al
  43a384:	sbb    DWORD PTR [ebx],0xfffffff9
  43a387:	sub    DWORD PTR [ebx-0x7cf206e5],eax
  43a38d:	sbb    edi,ecx
  43a38f:	sbb    eax,0xf9f91b83
  43a394:	pop    ebp
  43a395:	sbb    edi,ecx
  43a397:	ret    
  43a398:	push   ebp
  43a399:	sbb    edi,ecx
  43a39b:	iret   
  43a39c:	dec    ebp
  43a39d:	sbb    edi,ecx
  43a39f:	add    BYTE PTR [eax+0x6d],bh
  43a3a2:	cld    
  43a3a3:	(bad)  
  43a3a4:	js     0x43a413
  43a3a6:	cld    
  43a3a7:	dec    DWORD PTR [eax]
  43a3a9:	ins    DWORD PTR es:[edi],dx
  43a3aa:	cld    
  43a3ab:	call   DWORD PTR [edx]
  43a3ad:	ins    BYTE PTR es:[edi],dx
  43a3ae:	cld    
  43a3af:	push   esi
  43a3b1:	ins    BYTE PTR es:[edi],dx
  43a3b2:	cld    
  43a3b3:	(bad)  
  43a3b4:	in     al,dx
  43a3b5:	ins    BYTE PTR es:[edi],dx
  43a3b6:	cld    
  43a3b7:	jmp    FWORD PTR [esi+0x6d]
  43a3ba:	cld    
  43a3bb:	inc    DWORD PTR [eax-0x63000393]
  43a3c1:	ins    DWORD PTR es:[edi],dx
  43a3c2:	cld    
  43a3c3:	jmp    FWORD PTR [esi+0x6d]
  43a3c6:	cld    
  43a3c7:	inc    DWORD PTR [esi-0x3000393]
  43a3cd:	imul   edi,esp,0xfc58f2ff
  43a3d3:	dec    DWORD PTR [eax+0x56]
  43a3d6:	cld    
  43a3d7:	call   esi
  43a3d9:	pop    eax
  43a3da:	cld    
  43a3db:	(bad)  
  43a3dc:	ficomp DWORD PTR [eax-0x4]
  43a3df:	(bad)  
  43a3e0:	jmp    0xfc58:0xf0fffc58
  43a3e7:	inc    DWORD PTR [eax]
  43a3e9:	add    BYTE PTR [eax],al
  43a3eb:	xchg   edx,eax
  43a3ec:	push   ebp
  43a3ed:	cld    
  43a3ee:	jmp    FWORD PTR [ebp+edx*2+0x565cfffc]
  43a3f5:	cld    
  43a3f6:	call   FWORD PTR [esi]
  43a3f8:	push   esi
  43a3f9:	cld    
  43a3fa:	(bad)  
  43a3fb:	cmp    dl,BYTE PTR [esi-0x4]
  43a3fe:	(bad)  
  43a3ff:	cmp    BYTE PTR [esi-0x4],dl
  43a402:	jmp    FWORD PTR [esi+edx*2]
  43a405:	cld    
  43a406:	jmp    DWORD PTR [esi+edx*2+0x56c8fffc]
  43a40d:	cld    
  43a40e:	call   DWORD PTR [edx+0x6afffc56]
  43a414:	push   esi
  43a415:	cld    
  43a416:	inc    DWORD PTR [esi+edx*2-0x5a0c0004]
  43a41d:	scas   eax,DWORD PTR es:[edi]
  43a41e:	cld    
  43a41f:	pushf  
  43a420:	xchg   edi,eax
  43a421:	scas   eax,DWORD PTR es:[edi]
  43a422:	cld    
  43a423:	xchg   esp,eax
  43a424:	mov    ch,0xaf
  43a426:	cld    
  43a427:	mov    ebp,es
  43a429:	scas   eax,DWORD PTR es:[edi]
  43a42a:	cld    
  43a42b:	test   ch,ah
  43a42d:	scas   eax,DWORD PTR es:[edi]
  43a42e:	cld    
  43a42f:	jl     0x43a43a
  43a431:	mov    al,0xfc
  43a433:	je     0x43a46c
  43a435:	test   eax,0xa9276cfc
  43a43a:	cld    
  43a43b:	and    edi,DWORD PTR fs:[ebp-0x3]
  43a43f:	pop    esp
  43a440:	sub    DWORD PTR [ebp-0x3],edi
  43a443:	push   esp
  43a444:	in     eax,dx
  43a445:	cmp    ebp,0x4c
  43a448:	std    
  43a449:	cmp    ebp,0x44
  43a44c:	fwait
  43a44d:	(bad)  
  43a44e:	std    
  43a44f:	add    BYTE PTR [eax],al
  43a451:	add    BYTE PTR [edi+esi*4],bh
  43a454:	(bad)  
  43a455:	std    
  43a456:	xor    al,0xab
  43a458:	(bad)  
  43a459:	std    
  43a45a:	sub    al,0xe7
  43a45c:	(bad)  
  43a45d:	std    
  43a45e:	and    al,0x9
  43a460:	mov    ?,ebp
  43a462:	sbb    al,0xe5
  43a464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a465:	cld    
  43a466:	adc    al,0xe3
  43a468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a469:	cld    
  43a46a:	or     al,0x37
  43a46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a46d:	cld    
  43a46e:	add    al,0x31
  43a470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a471:	cld    
  43a472:	cld    
  43a473:	cmp    ah,BYTE PTR [esi-0x5a5d0b04]
  43a479:	cld    
  43a47a:	in     al,dx
  43a47b:	retf   0xfca5
  43a47e:	in     al,0xd6
  43a480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a481:	cld    
  43a482:	fdiv   st(4),st
  43a484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a485:	cld    
  43a486:	aam    0xf0
  43a488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a489:	cld    
  43a48a:	int3   
  43a48b:	jbe    0x43a433
  43a48d:	cld    
  43a48e:	les    esi,FWORD PTR [edx-0x3f43035b]
  43a494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a495:	cld    
  43a496:	mov    ah,0x7
  43a498:	mov    ds:0x8b1aafa9,eax
  43a49d:	test   eax,0xa9ad1aa7
  43a4a2:	lahf   
  43a4a3:	sbb    bl,BYTE PTR [ebp-0x40e56857]
  43a4a9:	test   eax,0xa9cf1a8f
  43a4ae:	xchg   DWORD PTR [edx],ebx
  43a4b0:	int    0xa9
  43a4b2:	jg     0x43a4ce
  43a4b4:	fild   QWORD PTR [ecx+0x77000000]
  43a4ba:	sbb    bl,bl
  43a4bc:	lods   al,BYTE PTR ds:[esi]
  43a4bd:	outs   dx,DWORD PTR ds:[esi]
  43a4be:	sbb    al,bh
  43a4c0:	lods   al,BYTE PTR ds:[esi]
  43a4c1:	sbb    ah,BYTE PTR [bx+di+0x5fac]
  43a4c6:	sbb    cl,BYTE PTR [edi-0x7ae5a854]
  43a4cc:	lods   al,BYTE PTR ds:[esi]
  43a4cd:	dec    edi
  43a4ce:	sbb    dl,BYTE PTR [ecx-0x54]
  43a4d1:	inc    edi
  43a4d2:	sbb    bl,BYTE PTR [ebp-0x54]
  43a4d5:	aas    
  43a4d6:	sbb    ch,BYTE PTR [ecx]
  43a4d8:	lods   eax,DWORD PTR ds:[esi]
  43a4d9:	aaa    
  43a4da:	sbb    dl,BYTE PTR [ecx]
  43a4dc:	lods   eax,DWORD PTR ds:[esi]
  43a4dd:	das    
  43a4de:	sbb    bh,BYTE PTR [ecx]
  43a4e0:	lods   eax,DWORD PTR ds:[esi]
  43a4e1:	daa    
  43a4e2:	sbb    al,bl
  43a4e4:	lods   al,BYTE PTR ds:[esi]
  43a4e5:	pop    ds
  43a4e6:	sbb    ah,BYTE PTR [ebx]
  43a4e8:	lods   eax,DWORD PTR ds:[esi]
  43a4e9:	pop    ss
  43a4ea:	sbb    bl,cl
  43a4ec:	lods   al,BYTE PTR ds:[esi]
  43a4ed:	nop    ebp
  43a4f0:	lods   al,BYTE PTR ds:[esi]
  43a4f1:	pop    es
  43a4f2:	sbb    bh,BYTE PTR [ebx-0x55]
  43a4f5:	call   FWORD PTR [ecx]
  43a4f7:	sub    DWORD PTR [ebx-0x54c4e609],0xab2119ef
  43a501:	out    0x19,eax
  43a503:	lea    ebp,[ebx-0x5486e621]
  43a509:	xlat   BYTE PTR ds:[ebx]
  43a50a:	sbb    DWORD PTR [ebx-0x55],ebx
  43a50d:	iret   
  43a50e:	sbb    DWORD PTR [ebx-0x55],esp
  43a511:	(bad)  
  43a512:	sbb    DWORD PTR [eax],eax
  43a514:	mov    ebx,0x8df91a88
  43a519:	mov    BYTE PTR [edx],bl
  43a51b:	stc    
  43a51c:	mov    ch,0x0
  43a51e:	add    BYTE PTR [eax],al
  43a520:	pop    eax
  43a521:	sbb    bh,cl
  43a523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a524:	pop    eax
  43a525:	sbb    bh,cl
  43a527:	fisttp QWORD PTR [eax+0x1a]
  43a52a:	stc    
  43a52b:	leave  
  43a52c:	dec    eax
  43a52d:	sbb    bh,cl
  43a52f:	fstp   QWORD PTR [eax+0x1a]
  43a532:	stc    
  43a533:	jmp    0xfa3cbf90
  43a538:	inc    esi
  43a539:	sbb    bh,cl
  43a53b:	(bad)  
  43a53d:	sbb    bh,cl
  43a53f:	mov    ecx,0xa1f91aa6
  43a544:	sahf   
  43a545:	sbb    bh,cl
  43a547:	mov    DWORD PTR [esi-0x619e06e6],esp
  43a54d:	sbb    bh,cl
  43a54f:	push   ebp
  43a550:	xchg   BYTE PTR [edx],bl
  43a552:	stc    
  43a553:	pop    ds
  43a554:	jle    0x43a570
  43a556:	stc    
  43a557:	and    eax,0x29f91a86
  43a55c:	jle    0x43a578
  43a55e:	stc    
  43a55f:	frstor [edi+0x1a]
  43a562:	stc    
  43a563:	(bad)  
  43a564:	pop    edi
  43a565:	sbb    bh,cl
  43a567:	jmp    DWORD PTR [edi+0x1a]
  43a56a:	stc    
  43a56b:	jmp    0x923cbfcf
  43a570:	inc    ebp
  43a571:	sbb    bh,cl
  43a573:	icebp  
  43a574:	push   esi
  43a575:	sbb    bh,cl
  43a577:	cdq    
  43a578:	inc    ebp
  43a579:	sbb    bh,cl
  43a57b:	jmp    0xdd43ac70
  43a580:	sbb    DWORD PTR [edx],0xc9f9
  43a586:	add    BYTE PTR [ecx-0x7e5806e6],al
  43a58c:	sbb    bh,cl
  43a58e:	jmp    0x43ac83
  43a593:	ret    0x4
  43a596:	add    bl,0x4
  43a599:	add    BYTE PTR [eax-0x7ffffb38],al
  43a59f:	int3   
  43a5a0:	add    al,0x0
  43a5a2:	sbb    BYTE PTR [edx-0x21fffffc],0x9d
  43a5a9:	cli    
  43a5aa:	inc    DWORD PTR [esi+ebx*4-0x6]
  43a5ae:	push   DWORD PTR [eax]
  43a5b0:	sahf   
  43a5b1:	cli    
  43a5b2:	call   FWORD PTR [edx+0x28000004]
  43a5b8:	sahf   
  43a5b9:	cli    
  43a5ba:	inc    DWORD PTR [edi+ebx*4]
  43a5bd:	cli    
  43a5be:	push   DWORD PTR [eax-0x61]
  43a5c1:	cli    
  43a5c2:	jmp    FWORD PTR [esi]
  43a5c4:	sahf   
  43a5c5:	cli    
  43a5c6:	dec    DWORD PTR [esi]
  43a5c8:	sahf   
  43a5c9:	cli    
  43a5ca:	(bad)  
  43a5cb:	clc    
  43a5cc:	popf   
  43a5cd:	cli    
  43a5ce:	(bad)  
  43a5cf:	in     al,dx
  43a5d0:	popf   
  43a5d1:	cli    
  43a5d2:	jmp    FWORD PTR [edi+ebx*4]
  43a5d5:	cli    
  43a5d6:	dec    DWORD PTR [esi-0x61]
  43a5d9:	cli    
  43a5da:	push   DWORD PTR [esi]
  43a5dc:	sahf   
  43a5dd:	cli    
  43a5de:	call   FWORD PTR [esi+ebx*4-0x6]
  43a5e2:	call   FWORD PTR [eax-0x62]
  43a5e5:	cli    
  43a5e6:	push   DWORD PTR [ebp+ebx*4+0xfffa]
  43a5ed:	add    BYTE PTR [eax-0x49000563],ch
  43a5f3:	popf   
  43a5f4:	cli    
  43a5f5:	push   edx
  43a5f7:	pushf  
  43a5f8:	cli    
  43a5f9:	jmp    eax
  43a5fb:	pushf  
  43a5fc:	cli    
  43a5fd:	jmp    esp
  43a5ff:	pushf  
  43a600:	cli    
  43a601:	call   esp
  43a603:	pushf  
  43a604:	cli    
  43a605:	jmp    esp
  43a607:	add    eax,DWORD PTR [eax]
  43a609:	sbb    BYTE PTR [edx-0xc000563],0xfb
  43a610:	jne    0x43a60f
  43a612:	aam    0x2d
  43a614:	std    
  43a615:	push   ebx
  43a617:	fnsave [edi-0x3]
  43a61a:	les    ebp,FWORD PTR ds:0x7df3fffd
  43a620:	cmp    ebp,0xfd8115b4
  43a626:	lods   al,BYTE PTR ds:[esi]
  43a627:	xor    eax,0x5a4fd81
  43a62c:	mov    ch,bh
  43a62e:	pushf  
  43a62f:	sub    DWORD PTR [ecx+0x791794fd],eax
  43a635:	std    
  43a636:	mov    ecx,fs
  43a638:	jg     0x43a637
  43a63a:	test   ch,ch
  43a63c:	jg     0x43a63b
  43a63e:	jl     0x43a61d
  43a640:	jg     0x43a63f
  43a642:	je     0x43a603
  43a644:	jg     0x43a643
  43a646:	ins    BYTE PTR es:[edi],dx
  43a647:	xchg   ebx,eax
  43a648:	cmp    ch,0x64
  43a64b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a64c:	cmp    ch,0x5c
  43a64f:	ret    
  43a650:	cmp    ch,0x0
  43a653:	add    BYTE PTR [eax],al
  43a655:	push   esp
  43a656:	rol    DWORD PTR [eax-0x7f2eb303],cl
  43a65c:	std    
  43a65d:	inc    esp
  43a65e:	add    eax,DWORD PTR [ecx-0x7efac303]
  43a664:	std    
  43a665:	xor    al,0x2f
  43a667:	cmp    ch,0x2c
  43a66a:	sub    eax,0xad24fd82
  43a66f:	jg     0x43a66e
  43a671:	sbb    al,0x99
  43a673:	jg     0x43a672
  43a675:	adc    al,0xc1
  43a677:	jg     0x43a676
  43a679:	or     al,0x9
  43a67b:	cmp    ch,0x4
  43a67e:	pop    edi
  43a67f:	cmp    ch,0xfc
  43a682:	jbe    0x43a604
  43a684:	std    
  43a685:	hlt    
  43a686:	add    BYTE PTR [eax-0x14f81303],0x80
  43a68d:	out    0x16,al
  43a68f:	cmc    
  43a690:	sbb    dh,0x16
  43a693:	pop    es
  43a694:	adc    esi,0xce80fb16
  43a69a:	push   ss
  43a69b:	add    eax,DWORD PTR [ecx-0x7f50e93a]
  43a6a1:	mov    esi,0xb6808f16
  43a6a6:	push   ss
  43a6a7:	mov    edi,0x9b16ae80
  43a6ac:	and    BYTE PTR [esi-0x617d3cea],0x16
  43a6b3:	fild   WORD PTR [edx-0x7dece96a]
  43a6b9:	add    BYTE PTR [eax],al
  43a6bb:	add    BYTE PTR [esi-0x797df4ea],cl
  43a6c1:	push   ss
  43a6c2:	pop    ds
  43a6c3:	cmp    BYTE PTR [esi+0x16],0x1f
  43a6c7:	xor    BYTE PTR [esi+0x16],0x2d
  43a6cb:	sub    BYTE PTR [esi+0x16],0x8d
  43a6cf:	and    DWORD PTR [esi+0x16],0x165e8179
  43a6d6:	arpl   WORD PTR [ecx-0x7db0e9aa],ax
  43a6dc:	dec    esi
  43a6dd:	push   ss
  43a6de:	jne    0x43a75f
  43a6e0:	inc    esi
  43a6e1:	push   ss
  43a6e2:	xor    DWORD PTR [eax-0x7dbce9c2],eax
  43a6e8:	ss push ss
  43a6ea:	inc    edi
  43a6eb:	sub    BYTE PTR [esi],0x16
  43a6ee:	xor    eax,0x23162682
  43a6f3:	sbb    BYTE PTR [esi],0x16
  43a6f6:	adc    DWORD PTR [esi+edx*1+0xe835916],eax
  43a6fd:	push   ss
  43a6fe:	arpl   WORD PTR [ebx-0x7cc8e9fa],ax
  43a704:	(bad)  
  43a705:	adc    eax,0x1470ab00
  43a70a:	stc    
  43a70b:	fwait
  43a70c:	jo     0x43a721
  43a70e:	stc    
  43a70f:	dec    ebx
  43a710:	jo     0x43a725
  43a712:	stc    
  43a713:	push   ebp
  43a714:	jo     0x43a729
  43a716:	stc    
  43a717:	out    dx,eax
  43a718:	outs   dx,DWORD PTR ds:[esi]
  43a719:	adc    edi,ecx
  43a71b:	icebp  
  43a71c:	ja     0x43a731
  43a71e:	stc    
  43a71f:	cmp    eax,0x6e000000
  43a724:	adc    edi,ecx
  43a726:	push   ecx
  43a727:	jbe    0x43a73c
  43a729:	stc    
  43a72a:	adc    ebp,DWORD PTR [esi+0x13]
  43a72d:	stc    
  43a72e:	and    esi,DWORD PTR [esi+0x13]
  43a731:	stc    
  43a732:	outs   dx,BYTE PTR gs:[esi]
  43a734:	adc    edi,ecx
  43a736:	push   ecx
  43a737:	jbe    0x43a74c
  43a739:	stc    
  43a73a:	jae    0x43a7aa
  43a73c:	adc    edi,ecx
  43a73e:	pop    ebp
  43a73f:	jbe    0x43a754
  43a741:	stc    
  43a742:	xchg   DWORD PTR [esi+0x13],ebp
  43a745:	stc    
  43a746:	(bad)  
  43a747:	jbe    0x43a75c
  43a749:	stc    
  43a74a:	xchg   ebx,eax
  43a74b:	outs   dx,BYTE PTR ds:[esi]
  43a74c:	adc    edi,ecx
  43a74e:	popf   
  43a74f:	jbe    0x43a764
  43a751:	stc    
  43a752:	and    eax,0x15f9136d
  43a757:	jne    0x43a76c
  43a759:	stc    
  43a75a:	(bad)  
  43a75c:	adc    edi,ecx
  43a75e:	sti    
  43a75f:	jbe    0x43a774
  43a761:	stc    
  43a762:	(bad)  
  43a763:	jo     0x43a778
  43a765:	stc    
  43a766:	iret   
  43a767:	jo     0x43a77c
  43a769:	stc    
  43a76a:	xchg   ebx,eax
  43a76b:	jo     0x43a780
  43a76d:	stc    
  43a76e:	mov    ds:0xd9f91370,eax
  43a773:	jb     0x43a788
  43a775:	stc    
  43a776:	retf   
  43a777:	jb     0x43a78c
  43a779:	stc    
  43a77a:	stc    
  43a77b:	jb     0x43a790
  43a77d:	stc    
  43a77e:	xchg   edi,eax
  43a77f:	mov    WORD PTR [ebx],ss
  43a781:	stc    
  43a782:	add    BYTE PTR [edx-0x6b],bh
  43a785:	cli    
  43a786:	inc    DWORD PTR [eax]
  43a788:	add    BYTE PTR [eax],al
  43a78a:	inc    edx
  43a78b:	xchg   ebp,eax
  43a78c:	cli    
  43a78d:	jmp    FWORD PTR [ebp+edx*4-0x6bc30006]
  43a794:	cli    
  43a795:	jmp    DWORD PTR [eax-0x6c]
  43a798:	cli    
  43a799:	(bad)  
  43a79a:	inc    BYTE PTR [edi-0x76650005]
  43a7a0:	sti    
  43a7a1:	call   FWORD PTR [ecx+ecx*4-0x76630005]
  43a7a8:	sti    
  43a7a9:	dec    DWORD PTR [eax-0x78]
  43a7ac:	sti    
  43a7ad:	call   FWORD PTR [eax]
  43a7af:	mov    bl,bh
  43a7b1:	push   DWORD PTR [esi-0x78]
  43a7b4:	sti    
  43a7b5:	dec    DWORD PTR [edx-0x78]
  43a7b8:	sti    
  43a7b9:	dec    edx
  43a7bb:	xchg   ebx,edi
  43a7bd:	push   DWORD PTR [eax-0x65000477]
  43a7c3:	or     BYTE PTR [eax],al
  43a7c5:	add    BYTE PTR [eax-0x77000487],dl
  43a7cb:	jns    0x43a7c8
  43a7cd:	(bad)  
  43a7ce:	out    dx,al
  43a7cf:	jp     0x43a7cc
  43a7d1:	inc    DWORD PTR [edx]
  43a7d3:	jnp    0x43a7d0
  43a7d5:	call   FWORD PTR [edx+0x7afffb78]
  43a7db:	js     0x43a7d8
  43a7dd:	call   esp
  43a7df:	ja     0x43a7dc
  43a7e1:	(bad)  
  43a7e2:	fdiv   DWORD PTR [edi-0x5]
  43a7e5:	jmp    DWORD PTR [eax-0x1b000486]
  43a7eb:	jp     0x43a7e8
  43a7ed:	inc    DWORD PTR [eax]
  43a7ef:	add    BYTE PTR [eax],al
  43a7f1:	or     bh,BYTE PTR [ebx-0x5]
  43a7f4:	jmp    FWORD PTR [esi]
  43a7f6:	js     0x43a7f3
  43a7f8:	call   FWORD PTR [eax+edi*2]
  43a7fb:	sti    
  43a7fc:	call   DWORD PTR [eax-0x71]
  43a7ff:	cli    
  43a800:	push   ebx
  43a802:	cmp    DWORD PTR [eax-0x3],0xfd784e0c
  43a809:	add    al,0xc8
  43a80b:	ja     0x43a80a
  43a80d:	cld    
  43a80e:	mov    cl,0x77
  43a810:	std    
  43a811:	hlt    
  43a812:	sbb    edi,DWORD PTR [eax-0x3]
  43a815:	in     al,dx
  43a816:	add    eax,0x53e4fd77
  43a81b:	js     0x43a81a
  43a81d:	fcomp  QWORD PTR [ebp+0x78]
  43a820:	std    
  43a821:	aam    0x1d
  43a823:	std    
  43a824:	push   ebx
  43a826:	paddw  mm7,mm7
  43a829:	jae    0x43a814
  43a82b:	jno    0x43a82a
  43a82d:	mov    esp,0x73fffd2e
  43a832:	and    bh,ch
  43a834:	push   DWORD PTR [ebx+0x1e]
  43a837:	std    
  43a838:	push   DWORD PTR [ebx-0x9]
  43a83b:	jno    0x43a83a
  43a83d:	pushf  
  43a83e:	and    bh,ch
  43a840:	push   DWORD PTR [ebx+0x24]
  43a843:	std    
  43a844:	push   DWORD PTR [ebx+0x65]
  43a847:	ja     0x43a846
  43a849:	test   BYTE PTR [ecx+0x77],cl
  43a84c:	std    
  43a84d:	jl     0x43a878
  43a84f:	std    
  43a850:	push   DWORD PTR [ebx-0x70]
  43a853:	cld    
  43a854:	inc    DWORD PTR [eax]
  43a856:	add    BYTE PTR [eax],al
  43a858:	jae    0x43a8a3
  43a85a:	ja     0x43a859
  43a85c:	fs (bad) 
  43a85f:	std    
  43a860:	pop    esp
  43a861:	sbb    edi,ebp
  43a863:	push   DWORD PTR [ebx+0x12]
  43a866:	std    
  43a867:	push   DWORD PTR [ebx-0x47]
  43a86a:	add    eax,DWORD PTR [eax]
  43a86c:	jae    0x43a88d
  43a86e:	std    
  43a86f:	push   DWORD PTR [ebx+0x3c]
  43a872:	std    
  43a873:	push   DWORD PTR [ebx+0x1d]
  43a876:	jae    0x43a875
  43a878:	sub    al,0x2b
  43a87a:	std    
  43a87b:	push   DWORD PTR [ebx+0x6]
  43a87e:	sti    
  43a87f:	add    esi,ebx
  43a881:	xchg   BYTE PTR [ebx-0x5aece987],ch
  43a887:	jns    0x43a897
  43a889:	adc    ecx,DWORD PTR [edi+0x79]
  43a88c:	push   es
  43a88d:	adc    edx,DWORD PTR [edx]
  43a88f:	add    al,0xf3
  43a891:	xchg   bh,dl
  43a893:	add    esi,ebx
  43a895:	xchg   dh,ah
  43a897:	add    esi,ebx
  43a899:	xchg   dh,dl
  43a89b:	add    esi,ebx
  43a89d:	xchg   bh,dl
  43a89f:	add    esi,ebx
  43a8a1:	xchg   bh,ah
  43a8a3:	add    esi,ebx
  43a8a5:	push   es
  43a8a6:	cdq    
  43a8a7:	xchg   ebp,eax
  43a8a8:	into   
  43a8a9:	adc    ah,BYTE PTR [edi]
  43a8ab:	xchg   ebp,eax
  43a8ac:	(bad)  
  43a8ad:	adc    ch,BYTE PTR ds:0x1312be95
  43a8b3:	xchg   ebp,eax
  43a8b4:	mov    dh,0x12
  43a8b6:	adc    DWORD PTR [ebp-0x6ac0ed52],edx
  43a8bc:	add    BYTE PTR [eax],al
  43a8be:	add    BYTE PTR [esi-0x616ae8ee],ah
  43a8c4:	adc    bl,BYTE PTR [ecx]
  43a8c6:	xchg   ebp,eax
  43a8c7:	xchg   esi,eax
  43a8c8:	adc    ah,bl
  43a8ca:	xchg   ecx,eax
  43a8cb:	mov    ss,WORD PTR [edx]
  43a8cd:	icebp  
  43a8ce:	xchg   ecx,eax
  43a8cf:	xchg   BYTE PTR [edx],dl
  43a8d1:	(bad)  
  43a8d2:	xchg   ecx,eax
  43a8d3:	jle    0x43a8e7
  43a8d5:	int    0x91
  43a8d7:	jbe    0x43a8eb
  43a8d9:	mov    ebx,0xa7126e91
  43a8de:	xchg   ecx,eax
  43a8df:	data16 adc dh,BYTE PTR ds:0xb3125e92
  43a8e6:	xchg   ecx,eax
  43a8e7:	push   esi
  43a8e8:	adc    ch,BYTE PTR ds:0xe7124e92
  43a8ee:	add    esi,ebx
  43a8f0:	push   es
  43a8f1:	ins    DWORD PTR es:[edi],dx
  43a8f2:	ja     0x43a932
  43a8f4:	adc    bl,BYTE PTR [ebp+0x77]
  43a8f7:	adc    al,BYTE PTR ss:[eax]
  43a8fa:	test   DWORD PTR [ebx+edx*1+0x13ab3bf9],esp
  43a901:	stc    
  43a902:	inc    edi
  43a903:	fwait
  43a904:	adc    edi,ecx
  43a906:	sub    eax,0xddf9139b
  43a90b:	test   BYTE PTR [ebx],dl
  43a90d:	stc    
  43a90e:	retf   
  43a90f:	jl     0x43a924
  43a911:	stc    
  43a912:	test   DWORD PTR [ebx+edx*1+0x6f0e9f9],0xc9f28600
  43a91d:	imul   esi,ebp,0xd66ba393
  43a923:	add    BYTE PTR [eax],al
  43a925:	add    BYTE PTR [ecx-0x683a9d56],dl
  43a92b:	lahf   
  43a92c:	pop    esp
  43a92d:	fist   DWORD PTR [ebx-0x6b409d64]
  43a933:	adc    ecx,edi
  43a935:	push   edx
  43a936:	repnz leave 
  43a938:	imul   esi,DWORD PTR [ebp-0x39945c6d],0xc562aa51
  43a942:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  43a944:	pop    esp
  43a945:	fwait
  43a946:	push   ebx
  43a947:	pushf  
  43a948:	bound  ecx,QWORD PTR [edi+0x10f91144]
  43a94e:	mov    WORD PTR [esi-0x38ab7fa2],?
  43a954:	push   0x69a8a17b
  43a959:	xchg   BYTE PTR [esp+eiz*4+0x48],bl
  43a95d:	mov    ecx,DWORD PTR [edx-0xf8aa35c]
  43a963:	cmp    esi,0x2d
  43a966:	jl     0x43a8fd
  43a968:	push   ebx
  43a969:	push   eax
  43a96a:	xchg   edx,eax
  43a96b:	stos   BYTE PTR es:[edi],al
  43a96c:	cmp    al,0x46
  43a96e:	pushf  
  43a96f:	lahf   
  43a970:	jae    0x43a95b
  43a972:	lock inc eax
  43a974:	(bad)  
  43a975:	inc    DWORD PTR [edx]
  43a977:	jb     0x43a9d3
  43a979:	jo     0x43a953
  43a97b:	jno    0x43a9b7
  43a97d:	ins    BYTE PTR es:[edi],dx
  43a97e:	mov    dh,0x7b
  43a980:	pop    esp
  43a981:	add    BYTE PTR [ecx+0x4],dl
  43a984:	dec    eax
  43a985:	gs jmp 0x43a9e2
  43a988:	cmp    ch,BYTE PTR [eax+eax*1+0x0]
  43a98c:	add    dh,ah
  43a98e:	jnp    0x43a9ec
  43a990:	add    BYTE PTR [ebp+0x4],dl
  43a993:	dec    eax
  43a994:	gs sti 
  43a996:	pop    edx
  43a997:	aas    
  43a998:	jb     0x43a989
  43a99a:	jno    0x43a995
  43a99c:	inc    eax
  43a99e:	add    al,0x3f
  43a9a0:	gs out dx,al
  43a9a2:	xor    al,0x6b
  43a9a4:	outs   dx,DWORD PTR ds:[esi]
  43a9a5:	stc    
  43a9a6:	outs   dx,DWORD PTR ds:[esi]
  43a9a7:	ins    BYTE PTR es:[edi],dx
  43a9a8:	jae    0x43a94c
  43a9aa:	jno    0x43aa06
  43a9ac:	jo     0x43a978
  43a9ae:	add    al,0xc5
  43a9b0:	add    dl,BYTE PTR [edx-0x668fa58f]
  43a9b6:	push   esi
  43a9b7:	pop    esi
  43a9b8:	popa   
  43a9b9:	jle    0x43aa2c
  43a9bb:	stc    
  43a9bc:	jmp    FWORD PTR [eax]
  43a9be:	add    eax,0x60b36e41
  43a9c3:	bound  esp,QWORD PTR [ecx+0x66]
  43a9c6:	ins    DWORD PTR es:[edi],dx
  43a9c7:	jae    0x43aa2e
  43a9c9:	dec    ecx
  43a9ca:	push   esi
  43a9cb:	bound  esi,QWORD PTR [ebx+eax*4+0x67]
  43a9cf:	pop    edx
  43a9d0:	ins    BYTE PTR es:[edi],dx
  43a9d1:	dec    ecx
  43a9d2:	jno    0x43aa30
  43a9d4:	je     0x43aa49
  43a9d6:	jnp    0x43aa3f
  43a9d8:	add    BYTE PTR [ebx+0x6b654c07],dh
  43a9de:	bound  ebx,QWORD PTR [esi+0x43]
  43a9e1:	call   0x79ad1752
  43a9e6:	gs gs push ebx
  43a9e9:	scas   eax,DWORD PTR es:[edi]
  43a9ea:	gs ins DWORD PTR es:[edi],dx
  43a9ec:	imul   esp,DWORD PTR [ebp+0xfff978],0x47f30000
  43a9f6:	std    
  43a9f7:	inc    edx
  43a9f8:	aad    0xb9
  43a9fa:	cwde   
  43a9fb:	ins    DWORD PTR es:[edi],dx
  43a9fc:	mov    al,0xcb
  43a9fe:	xchg   esp,eax
  43a9ff:	jae    0x43a9cb
  43aa01:	mov    esp,0xc2c06b9c
  43aa06:	sahf   
  43aa07:	jae    0x43a9a3
  43aa09:	rcl    BYTE PTR [ecx-0x2b0e301],1
  43aa0f:	inc    ebx
  43aa10:	mov    es,WORD PTR [ecx]
  43aa12:	cdq    
  43aa13:	jae    0x43a9ab
  43aa15:	fsubr  QWORD PTR [ebp-0x60f9809a]
  43aa1b:	pop    esi
  43aa1c:	(bad)  
  43aa1d:	in     al,dx
  43aa1e:	cwde   
  43aa1f:	pop    esp
  43aa20:	jg     0x43aa18
  43aa22:	xchg   edx,eax
  43aa23:	imul   esi,ebx,0x6b42fe36
  43aa29:	pop    es
  43aa2a:	mov    al,0x4f
  43aa2c:	popa   
  43aa2d:	cmp    DWORD PTR [eax-0x2d29f9e],esp
  43aa33:	xor    dl,0x60
  43aa36:	call   0x526a:0x92513073
  43aa3d:	cmp    BYTE PTR [ecx-0x65bfb5b5],bl
  43aa43:	push   eax
  43aa44:	repz jne 0x43aa40
  43aa47:	dec    esp
  43aa48:	push   cs
  43aa49:	pop    edx
  43aa4a:	mov    edx,0xaf79216d
  43aa4f:	dec    edx
  43aa50:	add    al,0x8a
  43aa52:	call   0x40:0xfda88cff
  43aa59:	add    BYTE PTR [eax],al
  43aa5b:	push   cs
  43aa5c:	jp     0x43aa1e
  43aa5e:	push   0x73a98e0e
  43aa63:	push   cs
  43aa64:	mov    WORD PTR [edx-0x337d21a2],?
  43aa6a:	jmp    DWORD PTR [esi+esi*2-0x7]
  43aa6e:	dec    esp
  43aa6f:	(bad)  
  43aa70:	push   es
  43aa71:	pop    ebx
  43aa72:	leave  
  43aa73:	loop   0x43aa1e
  43aa75:	dec    eax
  43aa76:	cwde   
  43aa77:	dec    esp
  43aa78:	pxor   mm0,QWORD PTR ds:0xd152a9b2
  43aa7f:	retf   
  43aa80:	stos   BYTE PTR es:[edi],al
  43aa81:	cmp    esi,DWORD PTR [eax-0x4db8412f]
  43aa87:	nop
  43aa88:	mov    ds:0xf24bb4b,al
  43aa8d:	mov    esp,0x149dc108
  43aa92:	cwde   
  43aa93:	mov    eax,ds:0x9eca0aa5
  43aa98:	test   eax,0x67cc90b
  43aa9d:	push   ebp
  43aa9e:	or     BYTE PTR [esi-0x7b56f45e],ch
  43aaa4:	push   es
  43aaa5:	inc    ebx
  43aaa6:	push   es
  43aaa7:	xor    ah,BYTE PTR [edx+edi*8-0xa66ae47]
  43aaae:	lods   al,BYTE PTR ds:[esi]
  43aaaf:	dec    ebx
  43aab0:	popf   
  43aab1:	stos   DWORD PTR es:[edi],eax
  43aab2:	fwait
  43aab3:	inc    ebx
  43aab4:	pop    es
  43aab5:	repz add eax,0xd0daa432
  43aabb:	pop    ebx
  43aabc:	mov    ds:0xafd3,eax
  43aac1:	add    BYTE PTR [ecx-0x3b],dl
  43aac4:	iret   
  43aac5:	scas   eax,DWORD PTR es:[edi]
  43aac6:	push   ecx
  43aac7:	mov    ebp,0xb611b0c7
  43aacc:	out    0x3,al
  43aace:	xor    BYTE PTR [ecx],cl
  43aad0:	mov    ds:0x94b720a8,al
  43aad5:	mov    dl,0x37
  43aad7:	enter  0xa782,0x1e
  43aadb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aadc:	xchg   ebp,eax
  43aadd:	xchg   esi,eax
  43aade:	test   BYTE PTR [esi],cl
  43aae0:	fs add al,0xbe
  43aae3:	cwde   
  43aae4:	mov    esp,DWORD PTR [eax+eax*1-0x2e665c5c]
  43aaeb:	pushf  
  43aaec:	(bad)  
  43aaed:	jl     0x43aa98
  43aaef:	push   cs
  43aaf0:	stc    
  43aaf1:	div    ah
  43aaf3:	mov    bh,0x5e
  43aaf5:	push   eax
  43aaf6:	jnp    0x43aac0
  43aaf8:	push   0x6b99225b
  43aafd:	pop    ebp
  43aafe:	xchg   esi,eax
  43aaff:	sahf   
  43ab00:	imul   eax,DWORD PTR [eax+eiz*1-0x54],0x65
  43ab05:	dec    esp
  43ab06:	mov    WORD PTR [edx-0x360f1694],ds
  43ab0c:	add    al,BYTE PTR [ebp+0x7c]
  43ab0f:	call   0x3e66:0x9e624a6d
  43ab16:	out    dx,eax
  43ab17:	iret   
  43ab18:	add    cl,BYTE PTR ds:0xa6d9a64
  43ab1e:	dec    esi
  43ab1f:	call   0x35fc:0x99f0e950
  43ab26:	add    BYTE PTR [eax],al
  43ab28:	add    BYTE PTR [edi-0x57],bl
  43ab2b:	imul   esp,DWORD PTR [ecx+ecx*4],0xa9fd69a8
  43ab32:	or     eax,0xc2f081f9
  43ab37:	jb     0x43ab12
  43ab39:	test   BYTE PTR [esp+ebx*2+0x47a864c8],ah
  43ab40:	enter  0xa982,0x6b
  43ab44:	(bad)  
  43ab45:	lock mov esp,0x9e84a9ff
  43ab4b:	ins    BYTE PTR es:[edi],dx
  43ab4c:	les    edi,FWORD PTR [eax+0x54cd69ac]
  43ab52:	test   al,0xff
  43ab54:	daa    
  43ab55:	test   edi,0x98ad9d62
  43ab5b:	ins    DWORD PTR es:[edi],dx
  43ab5c:	fwait
  43ab5d:	pop    ebx
  43ab5e:	lahf   
  43ab5f:	jae    0x43ab1a
  43ab61:	pop    esi
  43ab62:	sahf   
  43ab63:	pop    esp
  43ab64:	test   BYTE PTR [ebp-0x66],ah
  43ab67:	inc    esi
  43ab68:	add    BYTE PTR [esi+0x9],ah
  43ab6b:	dec    eax
  43ab6c:	add    ebx,DWORD PTR [esi+0x6e615c58]
  43ab72:	aas    
  43ab73:	imul   esp,DWORD PTR [ebp+0x77],0x9
  43ab77:	es add eax,0x74627515
  43ab7d:	mov    bh,0x52
  43ab7f:	imul   ebp,DWORD PTR [edi-0x47],0x65
  43ab83:	ins    BYTE PTR es:[edi],dx
  43ab84:	jae    0x43ab65
  43ab86:	outs   dx,WORD PTR gs:[esi]
  43ab89:	clc    
  43ab8a:	jno    0x43ab85
  43ab8c:	inc    DWORD PTR [eax]
  43ab8e:	add    BYTE PTR [eax],al
  43ab90:	scas   eax,DWORD PTR es:[edi]
  43ab91:	dec    BYTE PTR [edx+0x79]
  43ab94:	jmp    0x6b10a07
  43ab99:	bound  esp,QWORD PTR [esi+0x65]
  43ab9c:	(bad)  
  43ab9d:	push   edi
  43ab9e:	aas    
  43ab9f:	imul   edi,esi,0xef694d65
  43aba5:	gs stc 
  43aba7:	inc    DWORD PTR [edx-0x99ac0fc]
  43abad:	push   esp
  43abae:	bound  ebp,QWORD PTR [ebp-0x9]
  43abb1:	dec    esp
  43abb2:	push   0x673ff76e
  43abb7:	fnsavew [edx+0x66]
  43abbb:	popa   
  43abbc:	mov    dh,0x61
  43abbe:	push   0xfb08da6e
  43abc3:	add    DWORD PTR [ebp+0x7d4c6d65],edx
  43abc9:	arpl   WORD PTR [edx+0x6c],bx
  43abcc:	push   esi
  43abcd:	popa   
  43abce:	gs call 0x5502:0x6f08
  43abd5:	gs ins DWORD PTR es:[edi],dx
  43abd7:	push   ebx
  43abd8:	arpl   WORD PTR [ebx+0x6d],si
  43abdb:	gs jg  0x43ac32
  43abde:	bound  ebp,QWORD PTR [ebp+0x77]
  43abe1:	or     BYTE PTR [esi+0x5],al
  43abe4:	repz adc DWORD PTR [ebx+esi*2+0x69a18a01],0x43fd1e1c
  43abf0:	idiv   BYTE PTR [ecx-0x6c]
  43abf3:	jae    0x43abf5
  43abf5:	add    BYTE PTR [eax],al
  43abf7:	loope  0x43ab79
  43abf9:	stos   BYTE PTR es:[edi],al
  43abfa:	outs   dx,DWORD PTR ds:[esi]
  43abfb:	retf   0xfd5e
  43abfe:	dec    edx
  43abff:	out    dx,al
  43ac00:	mov    cl,0x92
  43ac02:	jae    0x43abc5
  43ac04:	mov    ecx,0x1db269a0
  43ac09:	std    
  43ac0a:	pusha  
  43ac0b:	lock jmp 0x76c1:0xb6bf6b90
  43ac13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ac14:	ret    0x68b7
  43ac17:	mov    esp,0xb062a7c6
  43ac1c:	lds    ebx,FWORD PTR [ebp+ebp*2+0x51020ef3]
  43ac23:	call   0x91fe:0x9b3ca101
  43ac2a:	push   ebx
  43ac2b:	mov    edx,gs
  43ac2d:	nop
  43ac2e:	imul   edi,DWORD PTR [edi-0xa],0xffffffc1
  43ac32:	jbe    0x43ac9b
  43ac34:	add    eax,DWORD PTR [esi+ebp*8]
  43ac37:	out    dx,eax
  43ac38:	jmp    0x43abde
  43ac3a:	ins    DWORD PTR es:[edi],dx
  43ac3b:	adc    ebx,DWORD PTR [bp+0x426b]
  43ac40:	sub    esp,DWORD PTR [edx-0x6a9cb593]
  43ac46:	inc    esp
  43ac48:	loopne 0x43ac4d
  43ac4a:	dec    esi
  43ac4b:	push   esi
  43ac4c:	aas    
  43ac4d:	mov    eax,ds:0xa435414f
  43ac52:	bound  esp,QWORD PTR [eax]
  43ac54:	push   ecx
  43ac55:	retf   0x1662
  43ac58:	inc    ebp
  43ac59:	xchg   ebx,eax
  43ac5a:	jbe    0x43ac5c
  43ac5c:	add    BYTE PTR [eax],al
  43ac5e:	repz int 0x0
  43ac61:	push   edx
  43ac62:	or     al,BYTE PTR [edi]
  43ac64:	xchg   ebp,eax
  43ac65:	xchg   edi,eax
  43ac66:	add    DWORD PTR [esi-0x63e94c76],esp
  43ac6c:	call   0x749b:0xa3931fa6
  43ac73:	or     ecx,DWORD PTR ds:0x749dc107
  43ac79:	xchg   edi,eax
  43ac7a:	loope  0x43ac21
  43ac7c:	add    dl,0xc8
  43ac7f:	call   0x3e6:0x8eb1a479
  43ac86:	lods   eax,DWORD PTR ds:[esi]
  43ac87:	add    eax,0xa1d19221
  43ac8c:	and    ch,BYTE PTR [ebp-0x6db86762]
  43ac92:	mov    ebp,0xbf030206
  43ac97:	fwait
  43ac98:	inc    edi
  43ac99:	test   al,0xb8
  43ac9b:	popf   
  43ac9c:	inc    esp
  43ac9d:	xchg   edx,eax
  43ac9e:	mov    ebp,0x14b72f98
  43aca3:	or     ebp,DWORD PTR [eax+0x14a1a708]
  43aca9:	mov    cl,0x8d
  43acab:	pushf  
  43acac:	pop    es
  43acad:	cwde   
  43acae:	xchg   ecx,eax
  43acaf:	mov    dl,0xfe
  43acb1:	xchg   ecx,eax
  43acb2:	xchg   ecx,eax
  43acb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43acb4:	or     al,BYTE PTR [eax+eiz*4]
  43acb7:	pop    es
  43acb8:	es xchg edx,eax
  43acba:	push   ecx
  43acbb:	test   al,0xfa
  43acbd:	test   al,0x40
  43acbf:	lahf   
  43acc0:	hlt    
  43acc1:	test   al,0x0
  43acc3:	add    BYTE PTR [eax],al
  43acc5:	xor    eax,0xda03e6a3
  43acca:	add    esi,DWORD PTR [ecx-0x246ca954]
  43acd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43acd1:	dec    eax
  43acd2:	mov    bh,0xd4
  43acd4:	scas   al,BYTE PTR es:[edi]
  43acd5:	inc    eax
  43acd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43acd7:	lds    edx,FWORD PTR [edi+0x7960aac]
  43acdd:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  43acdf:	(bad)  
  43ace0:	mov    esp,0x9e63a0ab
  43ace5:	dec    esi
  43ace6:	enter  0x9566,0x5b
  43acea:	or     bh,cl
  43acec:	xchg   ah,ch
  43acee:	mov    ebx,0xa1b69d62
  43acf3:	imul   eax,DWORD PTR [eax+eax*2-0x7b689961],0xffffffa5
  43acfb:	ins    DWORD PTR es:[edi],dx
  43acfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43acfd:	mov    BYTE PTR [edx],cl
  43acff:	stc    
  43ad00:	xor    esp,0xffffffbb
  43ad03:	bound  esi,QWORD PTR [ebp+0x2e]
  43ad06:	mov    eax,ds:0xa18b4c6b
  43ad0b:	push   0x44
  43ad0d:	out    dx,eax
  43ad0e:	in     eax,0x2
  43ad10:	ds popa 
  43ad12:	mov    eax,ds:0xa12d4473
  43ad17:	imul   ecx,DWORD PTR [edi+esi*8+0x20],0xffffffff
  43ad1c:	and    eax,0x4041965a
  43ad21:	arpl   WORD PTR [ebp-0x6384cac2],sp
  43ad27:	or     ax,WORD PTR [eax]
  43ad2a:	add    BYTE PTR [eax],al
  43ad2c:	push   0xffffff96
  43ad2e:	bound  ebx,QWORD PTR [edx]
  43ad30:	cmp    al,0xa
  43ad32:	stc    
  43ad33:	test   eax,0x862b8f1
  43ad38:	dec    ebx
  43ad39:	enter  0x1566,0x9a
  43ad3d:	or     ecx,edi
  43ad3f:	outs   dx,BYTE PTR ds:[esi]
  43ad40:	lock retf 
  43ad42:	ins    DWORD PTR es:[edi],dx
  43ad43:	or     al,0x96
  43ad45:	xchg   ebp,eax
  43ad46:	bound  esp,QWORD PTR [edi]
  43ad48:	xchg   BYTE PTR [ebp-0x480f419e],bl
  43ad4e:	(bad)  
  43ad4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad50:	xchg   esp,eax
  43ad51:	xchg   esp,eax
  43ad52:	ins    BYTE PTR es:[edi],dx
  43ad53:	shl    DWORD PTR [esi-0x4d3b9460],0x94
  43ad5a:	popa   
  43ad5b:	add    BYTE PTR [esi+ebx*2+0x59a736b],bh
  43ad62:	jmp    0x6da1fa68
  43ad67:	inc    esi
  43ad68:	mov    bl,0x59
  43ad6a:	pop    esi
  43ad6b:	push   ebx
  43ad6c:	arpl   WORD PTR [edi+0x5e],bp
  43ad6f:	inc    ebp
  43ad70:	push   edx
  43ad71:	add    eax,0x5e39046b
  43ad76:	ins    DWORD PTR es:[edi],dx
  43ad77:	dec    esp
  43ad78:	imul   esi,DWORD PTR [ebp+ebp*2+0x45],0xffffffe8
  43ad7d:	ja     0x43ade7
  43ad7f:	jb     0x43addb
  43ad81:	add    eax,0x5e8d01ea
  43ad86:	ins    DWORD PTR es:[edi],dx
  43ad87:	inc    esi
  43ad88:	jae    0x43ade3
  43ad8a:	pop    esi
  43ad8b:	push   esp
  43ad8c:	mov    ds:0x5e59,eax
  43ad91:	add    BYTE PTR [eax],al
  43ad93:	jl     0x43ad97
  43ad95:	inc    esp
  43ad96:	gs mov dh,0x61
  43ad99:	ins    DWORD PTR es:[edi],dx
  43ad9a:	gs or  al,0x5e
  43ad9d:	gs gs or eax,0xcd01ec03
  43ada4:	popa   
  43ada5:	ins    DWORD PTR es:[edi],dx
  43ada6:	inc    esi
  43ada7:	mov    bl,0x56
  43ada9:	pop    esi
  43adaa:	dec    ecx
  43adab:	aam    0x60
  43adad:	push   0x6d65e772
  43adb2:	imul   esi,ebp,0xd2793b58
  43adb8:	gs neg BYTE PTR fs:[bx-0x7]
  43adbe:	(bad)  
  43adbf:	sti    
  43adc0:	dec    BYTE PTR [edx+0x65]
  43adc3:	fiadd  WORD PTR [edx+0x62]
  43adc6:	ins    BYTE PTR es:[edi],dx
  43adc7:	out    dx,eax
  43adc8:	inc    ebx
  43adc9:	ins    DWORD PTR es:[edi],dx
  43adca:	je     0x43ada4
  43adcc:	pop    ebp
  43adcd:	pop    ebx
  43adce:	jne    0x43ad7e
  43add0:	popa   
  43add1:	ins    BYTE PTR es:[edi],dx
  43add2:	push   edi
  43add3:	fiadd  DWORD PTR [edx+esi*8]
  43add6:	add    esi,ebx
  43add8:	dec    ebx
  43add9:	mov    ds:0x903f4e6b,al
  43adde:	bound  edi,QWORD PTR [esi]
  43ade0:	dec    ebx
  43ade1:	xchg   ecx,eax
  43ade2:	bound  ebp,QWORD PTR [ebx]
  43ade4:	push   ds
  43ade5:	std    
  43ade6:	push   eax
  43ade7:	lock bound ebx,QWORD PTR [esi-0x5db8c291]
  43adee:	jo     0x43ae2c
  43adf0:	js     0x43adb5
  43adf2:	popw   ss
  43adf4:	cmp    ebp,0xffffffd1
  43adf7:	add    BYTE PTR [eax],al
  43adf9:	add    bh,dh
  43adfb:	dec    edx
  43adfc:	stos   DWORD PTR es:[edi],eax
  43adfd:	push   0x12
  43adff:	outs   dx,BYTE PTR ds:[esi]
  43ae00:	mov    bl,0x66
  43ae02:	(bad)  
  43ae03:	mov    bl,cl
  43ae05:	popa   
  43ae06:	lods   eax,DWORD PTR ds:[esi]
  43ae07:	jbe    0x43adb2
  43ae09:	(bad)  
  43ae0b:	mov    eax,ds:0x82e13d03
  43ae10:	sahf   
  43ae11:	jae    0x43ade9
  43ae13:	xlat   BYTE PTR ds:[ebx]
  43ae14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ae15:	imul   ecx,esi,0xffffffda
  43ae18:	pushf  
  43ae19:	outs   dx,DWORD PTR ds:[esi]
  43ae1a:	ret    
  43ae1b:	(bad)  
  43ae1c:	test   eax,0xfd1d9c60
  43ae21:	ret    
  43ae22:	repnz fsub DWORD PTR [eax-0x722d4f8d]
  43ae29:	ins    DWORD PTR es:[edi],dx
  43ae2a:	xchg   esi,eax
  43ae2b:	mov    edi,0xcb8b5397
  43ae30:	mov    al,ds:0xfd1d975e
  43ae35:	xchg   esi,eax
  43ae36:	out    dx,eax
  43ae37:	int3   
  43ae38:	mov    al,ds:0x8e05a773
  43ae3d:	bound  edx,QWORD PTR [edx+0x5a6db401]
  43ae43:	icebp  
  43ae44:	lea    esp,[esi+0x5f]
  43ae47:	pop    es
  43ae48:	add    al,0xf9
  43ae4a:	repnz fsub DWORD PTR [eax-0x5600d48d]
  43ae51:	arpl   WORD PTR [edi+0x7],bx
  43ae54:	int3   
  43ae55:	retf   0xa15a
  43ae58:	leave  
  43ae59:	xchg   ecx,eax
  43ae5a:	dec    ecx
  43ae5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ae5c:	fisubr DWORD PTR [edx+0x4b000000]
  43ae62:	cdq    
  43ae63:	out    0x3,al
  43ae65:	cmp    eax,DWORD PTR [edx]
  43ae67:	rcl    DWORD PTR [eax-0x6c3a6ae0],cl
  43ae6d:	and    eax,0x3203e6b0
  43ae72:	add    bh,BYTE PTR [ebx-0x7a6aff70]
  43ae78:	xchg   ebx,eax
  43ae79:	std    
  43ae7a:	(bad)
  43ae7d:	mov    esp,0x908301
  43ae82:	xchg   ebp,eax
  43ae83:	test   DWORD PTR [esi+0x3e6c5dc],ebp
  43ae89:	lods   eax,DWORD PTR ds:[esi]
  43ae8a:	add    DWORD PTR [ebx-0x7a6b1f70],ecx
  43ae90:	xchg   ebx,eax
  43ae91:	fstp   QWORD PTR [eax+0x54d03a7]
  43ae97:	sub    ah,BYTE PTR [ecx-0x68b84540]
  43ae9d:	rol    cl,0x54
  43aea0:	xchg   esi,eax
  43aea1:	retf   
  43aea2:	xchg   esp,eax
  43aea3:	out    0x3,al
  43aea5:	out    dx,eax
  43aea6:	add    esi,DWORD PTR [ebx]
  43aea8:	stos   DWORD PTR es:[edi],eax
  43aea9:	lds    esp,FWORD PTR [edx-0x6b4152d6]
  43aeaf:	inc    edi
  43aeb0:	xchg   esi,eax
  43aeb1:	popf   
  43aeb2:	(bad)
  43aeb5:	adc    eax,DWORD PTR ds:0xc180a12a
  43aebb:	push   ds
  43aebc:	lods   eax,DWORD PTR ds:[esi]
  43aebd:	add    bl,0x1
  43aec0:	mov    al,ds:0x95feb291
  43aec5:	add    BYTE PTR [eax],al
  43aec7:	add    BYTE PTR [ecx+0x68],dl
  43aeca:	or     eax,DWORD PTR [edi+eax*8]
  43aecd:	or     BYTE PTR [edx],ah
  43aecf:	mov    eax,ds:0x7004c60
  43aed4:	sub    DWORD PTR [ebp+0x6e],0x63719afe
  43aedb:	xlat   BYTE PTR ds:[ebx]
  43aedc:	je     0x43af36
  43aede:	pop    edi
  43aedf:	fisttp DWORD PTR [edi-0x6c3aa19b]
  43aee5:	push   edi
  43aee6:	add    BYTE PTR [ecx-0x3391bc09],al
  43aeec:	dec    edi
  43aeed:	jp     0x43af52
  43aeef:	cdq    
  43aef0:	xchg   BYTE PTR [edi+0x5d],ch
  43aef3:	int3   
  43aef4:	jge    0x43af69
  43aef6:	push   ecx
  43aef7:	jmp    0xb64035ec
  43aefc:	pusha  
  43aefd:	imul   ebp,DWORD PTR [edx-0x47],0x8c5d6f66
  43af04:	pop    ebp
  43af05:	jae    0x43af07
  43af07:	sub    dh,bl
  43af09:	pop    edx
  43af0a:	push   0x6465937b
  43af0f:	mov    edx,0x7b674846
  43af14:	jge    0x43af90
  43af16:	add    BYTE PTR ds:0x5b685af3,ah
  43af1c:	xchg   edx,eax
  43af1d:	gs sbb ah,BYTE PTR fs:0x63516350
  43af25:	push   es
  43af26:	stc    
  43af27:	(bad)  
  43af28:	lock inc ebx
  43af2a:	outs   dx,BYTE PTR ds:[esi]
  43af2b:	dec    esp
  43af2c:	add    BYTE PTR [eax],al
  43af2e:	add    BYTE PTR [esi+0x7a],cl
  43af31:	arpl   WORD PTR ds:0x416c6f48,dx
  43af37:	push   edx
  43af38:	jb     0x43afaa
  43af3a:	cli    
  43af3b:	es push ebx
  43af3d:	push   0x8
  43af3f:	pop    edi
  43af40:	jae    0x43afaa
  43af42:	push   cs
  43af43:	arpl   WORD PTR [esi],ax
  43af45:	stc    
  43af46:	sub    ebp,ebp
  43af48:	inc    edi
  43af49:	arpl   WORD PTR ds:0x6773a7,dx
  43af4f:	in     al,0xaa
  43af51:	ins    BYTE PTR es:[edi],dx
  43af52:	gs cli 
  43af54:	pushf  
  43af55:	data16 repz scas al,BYTE PTR es:[di]
  43af59:	pop    ebp
  43af5a:	push   ebx
  43af5b:	(bad)  
  43af5c:	fwait
  43af5d:	popa   
  43af5e:	outs   dx,BYTE PTR ds:[esi]
  43af5f:	mov    ch,0xb8
  43af61:	clc    
  43af62:	(bad)  
  43af63:	fimul  WORD PTR [edi+edi*1]
  43af66:	gs xchg esi,eax
  43af68:	mov    ecx,0xaac4696a
  43af6d:	ins    BYTE PTR es:[edi],dx
  43af6e:	mov    bl,BYTE PTR gs:[ebx-0x523c9999]
  43af75:	pop    ebp
  43af76:	dec    ecx
  43af77:	lods   al,BYTE PTR ds:[esi]
  43af78:	xchg   ebp,eax
  43af79:	dec    edi
  43af7a:	add    BYTE PTR [edi+0x6a783d0a],bh
  43af80:	stos   BYTE PTR es:[edi],al
  43af81:	fs push di
  43af84:	scas   eax,DWORD PTR es:[edi]
  43af85:	outs   dx,BYTE PTR ds:[esi]
  43af86:	imul   ebx,DWORD PTR [eax-0x50],0xaf776d66
  43af8d:	ins    BYTE PTR es:[edi],dx
  43af8e:	push   ebx
  43af8f:	out    0x9b,al
  43af91:	popa   
  43af92:	outs   dx,BYTE PTR ds:[esi]
  43af93:	add    BYTE PTR [eax],al
  43af95:	add    BYTE PTR [ebp-0x64],dh
  43af98:	dec    edi
  43af99:	add    BYTE PTR [esi+eax*1],cl
  43af9c:	dec    ebp
  43af9d:	jb     0x43af62
  43af9f:	(bad)  
  43afa0:	data16 je 0x43af5a
  43afa3:	pushf  
  43afa4:	cmp    esi,DWORD PTR [edx-0x5d]
  43afa7:	xchg   esi,eax
  43afa8:	popa   
  43afa9:	arpl   WORD PTR [ebx-0x469ab452],bp
  43afaf:	xchg   esi,eax
  43afb0:	popa   
  43afb1:	outs   dx,DWORD PTR ds:[esi]
  43afb2:	mov    esp,0xd5027e0a
  43afb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43afb8:	ins    BYTE PTR es:[edi],dx
  43afb9:	push   esp
  43afba:	mov    dl,0x9c
  43afbc:	pop    ebp
  43afbd:	popa   
  43afbe:	mov    dh,0xcb
  43afc0:	outs   dx,BYTE PTR ds:[si]
  43afc2:	out    0xa5,al
  43afc4:	jo     0x43b03a
  43afc6:	or     cl,BYTE PTR [ecx]
  43afc8:	mov    DWORD PTR [ebx+esi*8],eax
  43afcb:	inc    eax
  43afcc:	cdq    
  43afcd:	jae    0x43b016
  43afcf:	push   es
  43afd0:	xchg   edx,eax
  43afd1:	bound  edx,QWORD PTR [edx+0x12]
  43afd4:	ret    
  43afd5:	push   0x7799fa4d
  43afda:	pop    edi
  43afdb:	out    dx,al
  43afdc:	cld    
  43afdd:	dec    ebx
  43afde:	icebp  
  43afdf:	sub    al,0x99
  43afe1:	jae    0x43b006
  43afe3:	loopne 0x43af8c
  43afe5:	pop    esp
  43afe6:	push   esi
  43afe7:	loope  0x43af7c
  43afe9:	inc    esi
  43afea:	dec    edi
  43afeb:	out    dx,al
  43afec:	cld    
  43afed:	cdq    
  43afee:	repz mov al,0x92
  43aff1:	bound  edx,QWORD PTR [edx]
  43aff3:	ret    0x4a99
  43aff6:	es mov edx,0x7799
  43affc:	add    BYTE PTR [esi+ebp*8],bh
  43afff:	cld    
  43b000:	ret    0xacf2
  43b003:	cdq    
  43b004:	jae    0x43b036
  43b006:	mov    ds:0x94166d92,eax
  43b00b:	mov    BYTE PTR [ebx+0xb],dl
  43b00e:	mov    al,ds:0xa6d75e99
  43b013:	cwde   
  43b014:	jmp    DWORD PTR [ebx+esi*1+0x0]
  43b018:	push   esp
  43b019:	iret   
  43b01a:	cmp    BYTE PTR [esi-0x5c733895],0xff
  43b021:	dec    esp
  43b022:	sub    al,0x0
  43b024:	push   esp
  43b025:	xlat   BYTE PTR ds:[ebx]
  43b026:	pusha  
  43b027:	mov    esi,0x44ad66d
  43b02c:	shr    edi,0x41
  43b02f:	test   al,0x6c
  43b031:	mov    ah,0x4a
  43b033:	nop
  43b034:	push   ecx
  43b035:	xchg   edx,eax
  43b036:	pop    ecx
  43b037:	mov    DWORD PTR [edx-0xd],esp
  43b03a:	mov    ch,0xf8
  43b03c:	push   ebx
  43b03d:	xchg   DWORD PTR [eax-0x4d],eax
  43b040:	bound  eax,QWORD PTR [edi+0x7e6b9d1b]
  43b046:	push   es
  43b047:	or     al,0x4
  43b049:	xor    ecx,DWORD PTR [ebx]
  43b04b:	xor    ebx,DWORD PTR [edi-0x55ff8e7a]
  43b051:	dec    ebp
  43b052:	jnp    0x43b058
  43b054:	mov    ah,0x56
  43b056:	je     0x43b05e
  43b058:	lahf   
  43b059:	dec    edi
  43b05a:	js     0x43b043
  43b05c:	add    ebp,edx
  43b05e:	or     dl,BYTE PTR ds:0x9f
  43b064:	pop    edi
  43b065:	push   0xfffffff3
  43b067:	mov    esi,0x8fd16a42
  43b06c:	mov    esp,0x31030603
  43b071:	outs   dx,BYTE PTR ds:[esi]
  43b072:	ret    
  43b073:	sahf   
  43b074:	inc    eax
  43b075:	outs   dx,BYTE PTR ds:[esi]
  43b076:	mov    esp,0xab74409e
  43b07b:	test   al,0xf
  43b07d:	dec    ebx
  43b07e:	enter  0x118f,0x5b
  43b082:	shl    BYTE PTR [esi+0x5660711],0x32
  43b089:	push   0xffffff9b
  43b08b:	scas   eax,DWORD PTR es:[edi]
  43b08c:	adc    DWORD PTR [edx-0x69],esi
  43b08f:	ror    DWORD PTR ds:0xcdc98c73,0x71
  43b096:	test   BYTE PTR [eax+0x56c0364],dh
  43b09c:	mov    dl,0x69
  43b09e:	jae    0x43b04f
  43b0a0:	shl    DWORD PTR [ecx+0x77],1
  43b0a3:	mov    bl,0xad
  43b0a5:	jp     0x43b126
  43b0a7:	mov    al,0x44
  43b0a9:	add    ecx,DWORD PTR [ebx]
  43b0ab:	add    eax,0xa14b6db1
  43b0b0:	mov    al,ds:0xc0a1446d
  43b0b5:	jae    0x43b0d2
  43b0b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b0b8:	(bad)  
  43b0b9:	gs push ebx
  43b0bb:	mov    esi,0xb0447295
  43b0c0:	lea    esi,[ecx+0x0]
  43b0c3:	dec    esp
  43b0c4:	idiv   DWORD PTR [ebx]
  43b0c6:	jmp    DWORD PTR [esi]
  43b0c8:	add    BYTE PTR [eax],al
  43b0ca:	add    BYTE PTR [esi+0x6d],dl
  43b0cd:	fs das 
  43b0cf:	dec    esi
  43b0d0:	jno    0x43b13f
  43b0d2:	adc    eax,0xc6c6c35
  43b0d7:	pushf  
  43b0d8:	add    bh,cl
  43b0da:	mov    edi,0x176744ef
  43b0df:	xchg   ebx,eax
  43b0e0:	inc    ebx
  43b0e1:	ins    BYTE PTR es:[edi],dx
  43b0e2:	push   cs
  43b0e3:	and    BYTE PTR [ebp+0x0],0x2c
  43b0e7:	test   BYTE PTR [edi+eiz*2-0x1],0x64
  43b0ec:	push   eax
  43b0ed:	arpl   cx,sp
  43b0ef:	ins    BYTE PTR es:[edi],dx
  43b0f0:	dec    eax
  43b0f1:	addr16 int 0x93
  43b0f4:	push   edi
  43b0f5:	add    BYTE PTR [esi-0x3b8cae10],cl
  43b0fb:	cmp    BYTE PTR [ecx+0x50],0xcc
  43b0ff:	sub    BYTE PTR [eax+0x69],0xbb
  43b103:	dec    ebx
  43b104:	popa   
  43b105:	push   0xffffffca
  43b107:	push   ebx
  43b108:	inc    ebx
  43b109:	imul   esi,DWORD PTR [esi+ecx*2-0xf649c8a],0x4dabfd66
  43b114:	js     0x43b179
  43b116:	scas   eax,DWORD PTR es:[edi]
  43b117:	lahf   
  43b118:	outs   dx,BYTE PTR ds:[esi]
  43b119:	arpl   WORD PTR [eax+ecx*4-0xd33ffa9],sp
  43b120:	inc    edi
  43b121:	arpl   WORD PTR [ebp+0x2e],si
  43b124:	popa   
  43b125:	je     0x43b0a7
  43b127:	jle    0x43b18e
  43b129:	dec    ebp
  43b12a:	jo     0x43b18d
  43b12c:	jbe    0x43b191
  43b12e:	push   esp
  43b12f:	add    BYTE PTR [eax],al
  43b131:	add    BYTE PTR [esi],ch
  43b133:	jo     0x43b197
  43b135:	dec    esi
  43b136:	out    dx,eax
  43b137:	sar    esi,cl
  43b139:	sub    eax,0x5b447652
  43b13e:	push   esi
  43b13f:	js     0x43b1a4
  43b141:	add    dh,bh
  43b143:	mov    ds:0xafd6568,eax
  43b148:	data16 add bl,ch
  43b14b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b14c:	ins    BYTE PTR es:[edi],dx
  43b14d:	push   ebx
  43b14e:	ret    
  43b14f:	xchg   ebp,eax
  43b150:	ins    BYTE PTR es:[edi],dx
  43b151:	gs out 0xc6,eax
  43b154:	pop    ebp
  43b155:	data16 jmp 0x43b0ef
  43b158:	fs je  0x43b18a
  43b15b:	aam    0x44
  43b15d:	popa   
  43b15e:	in     al,0xa0
  43b160:	ins    DWORD PTR es:[edi],dx
  43b161:	popa   
  43b162:	in     eax,dx
  43b163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b164:	clc    
  43b165:	jmp    ebx
  43b167:	pop    es
  43b168:	aas    
  43b169:	gs into 
  43b16b:	leave  
  43b16c:	addr16 rep movs DWORD PTR es:[di],DWORD PTR ds:[si]
  43b170:	pop    ecx
  43b171:	ins    BYTE PTR es:[edi],dx
  43b172:	mov    ss,WORD PTR [edi-0x6b50899f]
  43b178:	clc    
  43b179:	jmp    FWORD PTR [eax+0x7]
  43b17c:	aas    
  43b17d:	gs mov esi,0xa96f6ab5
  43b183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b184:	imul   esi,DWORD PTR [ebx+0x7e],0xffffffb2
  43b188:	gs gs dec ecx
  43b18b:	add    eax,0x9446053a
  43b190:	ins    BYTE PTR es:[edi],dx
  43b191:	jb     0x43b1fc
  43b193:	scas   al,BYTE PTR es:[edi]
  43b194:	push   0x57
  43b199:	mov    al,BYTE PTR ds:0xa99d02c0
  43b19f:	bound  edi,QWORD PTR [bp+di-0x57]
  43b1a3:	inc    ebp
  43b1a4:	xchg   DWORD PTR gs:[eax-0x6e868696],ebp
  43b1ab:	pop    ecx
  43b1ac:	je     0x43b17d
  43b1ae:	xchg   esp,eax
  43b1af:	cmp    eax,0x96055a78
  43b1b4:	add    cl,BYTE PTR ds:0x99556ca2
  43b1ba:	mov    eax,ds:0x52f3446a
  43b1bf:	call   0xaa52:0x90439e5e
  43b1c6:	cmp    ebx,DWORD PTR [ebp-0x62c57397]
  43b1cc:	pusha  
  43b1cd:	xchg   esi,eax
  43b1ce:	out    dx,eax
  43b1cf:	cld    
  43b1d0:	leave  
  43b1d1:	repnz sub BYTE PTR [ecx-0x70e9488d],bl
  43b1d8:	lods   eax,DWORD PTR fs:[esi]
  43b1da:	sbb    eax,0x1e406299
  43b1df:	popf   
  43b1e0:	pop    esp
  43b1e1:	dec    esi
  43b1e2:	sub    ebx,DWORD PTR [eax+edx*2+0x40fe50f3]
  43b1e9:	dec    esi
  43b1ea:	cli    
  43b1eb:	stos   BYTE PTR es:[edi],al
  43b1ec:	push   0x62a2035f
  43b1f1:	cmp    al,BYTE PTR [eax]
  43b1f3:	fwait
  43b1f4:	push   0x739ddb41
  43b1f9:	dec    edx
  43b1fa:	shl    DWORD PTR [edx+0x50],1
  43b200:	xrelease xchg BYTE PTR [ebx],al
  43b203:	cmp    eax,0x739dcb21
  43b208:	push   ss
  43b209:	pushf  
  43b20a:	cdq    
  43b20b:	push   0x4
  43b20d:	mov    edx,0xbc1b5399
  43b212:	cdq    
  43b213:	pop    esi
  43b214:	pmaxsw mm7,mm4
  43b217:	xchg   ecx,eax
  43b218:	lock mov ebp,0x8b10688e
  43b21e:	(bad)  
  43b21f:	ins    BYTE PTR es:[edi],dx
  43b220:	and    ah,bl
  43b222:	mov    edx,0x889ce166
  43b227:	push   eax
  43b228:	repz dec DWORD PTR gs:[edi-0x1f]
  43b22d:	nop
  43b22e:	lahf   
  43b22f:	(bad)  
  43b230:	sar    BYTE PTR [eax+edx*8+0x2d],0xb5
  43b235:	mov    dl,BYTE PTR [ebx+esi*2+0x3e706a4]
  43b23c:	jns    0x43b243
  43b23e:	and    ch,BYTE PTR [eax-0x57b79b65]
  43b244:	mov    eax,0x1ca9466f
  43b249:	add    BYTE PTR [ecx+eax*1-0x5db58d4e],ch
  43b250:	lods   eax,DWORD PTR ds:[esi]
  43b251:	jb     0x43b26f
  43b253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b254:	cwde   
  43b255:	outs   dx,DWORD PTR ds:[esi]
  43b256:	inc    esi
  43b257:	test   eax,0xfff5fffc
  43b25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b25d:	imul   edx,DWORD PTR [esi],0x3b6a598f
  43b263:	lods   al,BYTE PTR ds:[esi]
  43b264:	add    BYTE PTR [eax],al
  43b266:	add    BYTE PTR [esi+0x6a],dl
  43b269:	or     BYTE PTR [eax+0x367ffdc],ah
  43b26f:	push   ss
  43b270:	jne    0x43b276
  43b272:	mov    ds:0xab2b6a40,eax
  43b277:	push   esi
  43b278:	push   0x6
  43b27a:	nop
  43b27b:	dec    ebx
  43b27c:	jne    0x43b25e
  43b27e:	lods   al,BYTE PTR ds:[esi]
  43b27f:	mov    ah,0xff
  43b281:	dec    edx
  43b282:	inc    DWORD PTR [edx+0x6e]
  43b285:	aad    0x8f
  43b287:	and    DWORD PTR [esi-0x45],esp
  43b28a:	mov    ebp,0x3cc6a0e
  43b28f:	mov    WORD PTR [edx],cs
  43b291:	xchg   ecx,eax
  43b292:	stos   BYTE PTR es:[edi],al
  43b293:	push   ds
  43b294:	jnp    0x43b252
  43b296:	mov    ds:0xa7bb4618,al
  43b29b:	or     esp,DWORD PTR [edi+eiz*8+0x3]
  43b29f:	jbe    0x43b2a4
  43b2a1:	mov    ch,0x9e
  43b2a3:	fldcw  WORD PTR [edi-0x67]
  43b2a6:	sahf   
  43b2a7:	mov    al,0x6d
  43b2a9:	xchg   ebp,eax
  43b2aa:	sahf   
  43b2ab:	mov    edi,0xdd91927a
  43b2b0:	push   edi
  43b2b1:	out    0x3,eax
  43b2b3:	enter  0x3,0xa6
  43b2b7:	pusha  
  43b2b8:	fs push 0xffffff9c
  43b2bb:	ins    DWORD PTR es:[edi],dx
  43b2bc:	jae    0x43b321
  43b2be:	popa   
  43b2bf:	js     0x43b2c0
  43b2c1:	clc    
  43b2c2:	nop
  43b2c3:	cmc    
  43b2c4:	inc    ebp
  43b2c5:	arpl   WORD PTR [ebp+0x69],bx
  43b2c8:	outs   dx,BYTE PTR ds:[esi]
  43b2c9:	ins    BYTE PTR es:[edi],dx
  43b2ca:	push   esp
  43b2cb:	add    BYTE PTR [eax],al
  43b2cd:	add    BYTE PTR [edx+0x64],dl
  43b2d0:	dec    edx
  43b2d1:	dec    eax
  43b2d2:	push   edx
  43b2d3:	fs inc edx
  43b2d5:	dec    esi
  43b2d6:	gs push ebp
  43b2d8:	imul   eax,DWORD PTR [ebp+0x6a],0x501c636c
  43b2df:	je     0x43b34b
  43b2e1:	sbb    eax,0xf676e3f
  43b2e6:	mov    edx,DWORD PTR [edi+0x0]
  43b2e9:	sahf   
  43b2ea:	in     eax,dx
  43b2eb:	inc    ebp
  43b2ec:	ins    DWORD PTR es:[edi],dx
  43b2ed:	sub    edx,DWORD PTR [esi-0x71f3b196]
  43b2f3:	push   0x50
  43b2f5:	cmc    
  43b2f6:	data16 (bad) 
  43b2f8:	clc    
  43b2f9:	jge    0x43b2f6
  43b2fb:	push   edi
  43b2fc:	push   esp
  43b2fd:	sbb    ch,BYTE PTR [eax-0x72578b97]
  43b303:	jp     0x43b36c
  43b305:	xlat   BYTE PTR ds:[ebx]
  43b306:	pop    ebx
  43b307:	cmp    ebp,DWORD PTR [ecx-0x39]
  43b30a:	jge    0x43b37b
  43b30c:	ins    BYTE PTR es:[edi],dx
  43b30d:	les    esp,FWORD PTR [ebp+0x69]
  43b310:	ins    DWORD PTR es:[edi],dx
  43b311:	mov    edx,0xb06a6f77
  43b316:	push   esp
  43b317:	(bad)  
  43b318:	clc    
  43b319:	mov    ds:0xa44a4cbb,al
  43b31e:	cmp    al,0x2b
  43b320:	xlat   BYTE PTR cs:[ebx]
  43b322:	dec    esp
  43b323:	jb     0x43b391
  43b325:	jmp    0xac43ad1a
  43b32a:	js     0x43b391
  43b32c:	je     0x43b2e4
  43b32e:	jg     0x43b3a0
  43b330:	add    BYTE PTR fs:[eax],al
  43b333:	add    BYTE PTR [eax],al
  43b335:	jge    0x43b2d8
  43b337:	imul   eax,DWORD PTR [ebp+0x72],0xa
  43b33b:	and    eax,DWORD PTR [eax]
  43b33d:	cdq    
  43b33e:	mov    ds:0xa95e7259,al
  43b343:	outs   dx,DWORD PTR ds:[esi]
  43b344:	gs cwde 
  43b346:	ret    
  43b347:	clc    
  43b348:	dec    esp
  43b34a:	add    edi,DWORD PTR [edi]
  43b34c:	gs (bad) 
  43b34e:	mov    ch,0x71
  43b350:	jae    0x43b318
  43b352:	scas   eax,DWORD PTR es:[edi]
  43b353:	gs dec ebp
  43b355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b356:	sahf   
  43b357:	push   0x69
  43b359:	mov    ecx,0xd1fff895
  43b35e:	add    al,0x4a
  43b360:	gs mov ch,0x9b
  43b363:	imul   esi,DWORD PTR [edi+eiz*8-0x6c],0x3b
  43b368:	ins    BYTE PTR es:[edi],dx
  43b369:	sti    
  43b36a:	xchg   ebp,eax
  43b36b:	imul   eax,DWORD PTR [ecx-0x26],0x9
  43b36f:	pop    DWORD PTR [eax]
  43b371:	push   ss
  43b372:	mov    al,0x5e
  43b374:	inc    esi
  43b375:	fsub   DWORD PTR [edx-0x6b159a9b]
  43b37b:	addr16 arpl bp,sp
  43b37e:	add    dl,BYTE PTR [ebx+0x1]
  43b381:	adc    eax,0xa74d6cb0
  43b386:	xchg   esp,eax
  43b387:	imul   esp,DWORD PTR [ecx-0x4b],0xffffffae
  43b38b:	dec    eax
  43b38c:	outs   dx,DWORD PTR ds:[esi]
  43b38d:	leave  
  43b38e:	or     DWORD PTR [eax+eax*1+0x575eae56],ebx
  43b395:	ret    
  43b396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b397:	pop    esp
  43b398:	outs   dx,DWORD PTR ds:[esi]
  43b399:	add    BYTE PTR [eax],al
  43b39b:	add    BYTE PTR [ebp-0x47],al
  43b39e:	push   0x6f
  43b3a0:	mov    ecx,0xacfff8c0
  43b3a5:	or     DWORD PTR [ebx],edi
  43b3a7:	popa   
  43b3a8:	pop    esi
  43b3a9:	popf   
  43b3aa:	dec    edi
  43b3ab:	imul   edi,DWORD PTR [ebp+eiz*4+0x67],0x92bff377
  43b3b3:	push   0x1afcb4d0
  43b3b8:	repz mov al,0xa3
  43b3bb:	imul   ebx,edi,0xffffff94
  43b3be:	fwait
  43b3bf:	imul   ecx,edi,0xc14f9584
  43b3c5:	jl     0x43b369
  43b3c7:	ds repz xor eax,0x44964e02
  43b3ce:	xchg   ebp,eax
  43b3cf:	ins    BYTE PTR es:[edi],dx
  43b3d0:	lahf   
  43b3d1:	dec    edx
  43b3d2:	xchg   edx,eax
  43b3d3:	cmp    al,0x8f
  43b3d5:	dec    esi
  43b3d6:	xchg   ebx,eax
  43b3d7:	ins    BYTE PTR es:[edi],dx
  43b3d8:	mov    esp,0xf163fcef
  43b3dd:	and    DWORD PTR [ecx-0x6cb17195],esp
  43b3e3:	bound  esi,QWORD PTR [eax+0x7e73944e]
  43b3e9:	and    DWORD PTR [ecx+0x386ecff],esp
  43b3ef:	inc    esp
  43b3f0:	dec    esi
  43b3f1:	or     al,0xb9
  43b3f3:	inc    ebx
  43b3f4:	sub    dh,BYTE PTR [ecx]
  43b3f6:	pushf  
  43b3f7:	inc    di
  43b3f9:	or     dh,BYTE PTR [ebp+ebp*2-0x42eea4]
  43b400:	add    BYTE PTR [eax],al
  43b402:	add    ah,al
  43b404:	pop    edx
  43b405:	add    al,0x44
  43b407:	push   esi
  43b408:	add    al,0xc8
  43b40a:	imul   ecx,DWORD PTR [esi+edi*4-0x6e],0x68
  43b40f:	adc    BYTE PTR [edi-0x3f0e1804],ch
  43b415:	xchg   edi,eax
  43b416:	data16 daa 
  43b418:	rcl    DWORD PTR [ebx+eax*2+0x739bc10e],1
  43b41f:	sbb    al,0xbe
  43b421:	cld    
  43b422:	xchg   esi,eax
  43b423:	repz test eax,0xa22e61a1
  43b429:	mov    ch,0x3c
  43b42b:	or     eax,DWORD PTR [edi]
  43b42d:	nop
  43b42e:	lahf   
  43b42f:	rcl    BYTE PTR [esi-0x6b],1
  43b432:	mov    al,ds:0x3e753c7
  43b437:	adc    eax,DWORD PTR [esi]
  43b439:	mov    ds:0x7c47e0a6,al
  43b43e:	xchg   ebp,eax
  43b43f:	fild   QWORD PTR [ebx+0x75]
  43b442:	mov    bl,0xdb
  43b444:	ja     0x43b42d
  43b446:	add    esp,DWORD PTR [esi+0x7]
  43b449:	mov    ds:0x5053d2a6,eax
  43b44e:	mov    ds:0xb4526b90,al
  43b453:	xchg   esi,eax
  43b454:	imul   eax,DWORD PTR [esi-0x3d],0x1c
  43b458:	cld    
  43b459:	inc    ebx
  43b45a:	push   es
  43b45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b45c:	popa   
  43b45d:	push   ebx
  43b45e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b45f:	lods   eax,DWORD PTR ds:[esi]
  43b460:	ja     0x43b4a6
  43b462:	enter  0x6c7,0xf5
  43b466:	add    eax,0xa3000000
  43b46b:	popa   
  43b46c:	inc    esp
  43b46d:	popf   
  43b46e:	test   eax,0x4d951661
  43b473:	fs add al,0xc3
  43b476:	in     al,0xfb
  43b478:	les    eax,FWORD PTR [edx]
  43b47a:	xor    ah,BYTE PTR [edx+0x13]
  43b47d:	enter  0x4217,0xff
  43b481:	add    ebx,DWORD PTR [esi]
  43b483:	or     DWORD PTR [edi],edx
  43b485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b486:	push   ecx
  43b487:	jo     0x43b4ad
  43b489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b48a:	dec    edi
  43b48b:	js     0x43b495
  43b48d:	test   eax,0x3e75451
  43b492:	add    DWORD PTR [esi],eax
  43b494:	mov    ds:0xc34820a6,al
  43b499:	call   0x6306:0xa2ba690c
  43b4a0:	stos   DWORD PTR es:[edi],eax
  43b4a1:	mov    ds:0x3e76600,al
  43b4a6:	ins    DWORD PTR es:[edi],dx
  43b4a7:	or     BYTE PTR [eax],al
  43b4a9:	call   0x6a5e:0xb43d7755
  43b4b0:	imul   ebx,DWORD PTR [ebx-0x16929160],0xbafe4ff0
  43b4ba:	xchg   ebp,eax
  43b4bb:	addr16 call 0xaa6e:0x687c
  43b4c2:	ins    BYTE PTR es:[edi],dx
  43b4c3:	pop    esp
  43b4c4:	ins    DWORD PTR es:[edi],dx
  43b4c5:	jp     0x43b4f4
  43b4c7:	jae    0x43b51a
  43b4c9:	jmp    0x9541afbe
  43b4ce:	add    BYTE PTR [eax],al
  43b4d0:	add    BYTE PTR [esi+0x5c],bl
  43b4d3:	push   0x5a
  43b4d5:	push   ebx
  43b4d6:	pop    esp
  43b4d7:	je     0x43b51d
  43b4d9:	xor    ch,BYTE PTR [eax+0x6d]
  43b4dc:	pop    edx
  43b4dd:	push   esi
  43b4de:	data16 arpl cx,bp
  43b4e1:	lock push cs
  43b4e3:	jmp    FWORD PTR ds:0x483d775a
  43b4e9:	pop    edi
  43b4ea:	ja     0x43b55f
  43b4ec:	cmp    ecx,DWORD PTR [edx-0x5]
  43b4ef:	clc    
  43b4f0:	or     dh,ch
  43b4f2:	inc    ebp
  43b4f3:	arpl   WORD PTR ds:0x66003bbb,bx
  43b4f9:	out    dx,al
  43b4fa:	inc    edi
  43b4fb:	arpl   WORD PTR ds:0x8646a9a,bx
  43b501:	jnp    0x43b568
  43b503:	dec    esi
  43b504:	or     al,0x90
  43b506:	jbe    0x43b508
  43b508:	out    dx,eax
  43b509:	lock cmp BYTE PTR [ebx+0xe],ah
  43b50d:	pop    esi
  43b50e:	jo     0x43b560
  43b510:	or     BYTE PTR [esi+0x70],dl
  43b513:	je     0x43b4fe
  43b515:	lock and dh,bh
  43b518:	lods   eax,DWORD PTR ds:[esi]
  43b519:	and    BYTE PTR [ebp+0x6a],0xa0
  43b51d:	jle    0x43b589
  43b51f:	jae    0x43b4f6
  43b521:	lods   al,BYTE PTR ds:[esi]
  43b522:	gs ins DWORD PTR es:[edi],dx
  43b524:	add    BYTE PTR [ecx-0x658f986e],ah
  43b52a:	push   es
  43b52b:	mov    es,WORD PTR [eax]
  43b52d:	dec    esi
  43b52e:	scas   eax,DWORD PTR es:[edi]
  43b52f:	pop    esi
  43b530:	inc    esi
  43b531:	cmp    BYTE PTR [ebx+0x6565],ah
  43b537:	add    BYTE PTR [edx-0x649c9868],ch
  43b53d:	push   es
  43b53e:	lea    eax,[eax]
  43b540:	mov    gs,WORD PTR [edi-0x5f29bba2]
  43b546:	dec    eax
  43b547:	jb     0x43b5ae
  43b549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b54a:	dec    edi
  43b54b:	add    dl,bl
  43b54d:	add    al,0x4b
  43b54f:	gs mov esi,0xbe7059c4
  43b555:	sahf   
  43b556:	push   0x65
  43b558:	sbb    al,BYTE PTR [esi]
  43b55a:	mov    al,BYTE PTR [ecx]
  43b55c:	int    0xaf
  43b55e:	ins    BYTE PTR es:[edi],dx
  43b55f:	push   edi
  43b560:	mov    bl,0x98
  43b562:	pop    esp
  43b563:	outs   dx,DWORD PTR ds:[esi]
  43b564:	mov    ebp,0xc6003bce
  43b569:	add    al,0x4a
  43b56b:	lods   eax,DWORD PTR gs:[esi]
  43b56d:	fwait
  43b56e:	imul   esi,DWORD PTR [edi+ebp*4-0x6c],0x3b
  43b573:	ins    BYTE PTR es:[edi],dx
  43b574:	stos   DWORD PTR es:[edi],eax
  43b575:	xchg   ebp,eax
  43b576:	imul   eax,DWORD PTR [ebp+0x12],0xffffffc4
  43b57a:	clc    
  43b57b:	jmp    DWORD PTR [edi]
  43b57d:	add    al,0x3f
  43b57f:	gs inc bh
  43b582:	pop    ebp
  43b583:	jae    0x43b57e
  43b585:	mov    ds:0x2ed655f,eax
  43b58a:	mov    BYTE PTR [ecx],al
  43b58c:	or     eax,0xba556cb0
  43b591:	mov    eax,ds:0xb4ef7459
  43b596:	pop    edi
  43b597:	outs   dx,BYTE PTR ds:[esi]
  43b598:	call   0x0:0x15105
  43b59f:	dec    ebp
  43b5a0:	scas   al,BYTE PTR es:[edi]
  43b5a1:	ins    BYTE PTR es:[edi],dx
  43b5a2:	dec    ebp
  43b5a3:	repz retf 0x6c8d
  43b5a7:	adc    al,cl
  43b5a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b5aa:	ds repz and edi,ebp
  43b5ae:	inc    edx
  43b5af:	adc    eax,0xa5eacc4
  43b5b4:	ret    0xff90
  43b5b7:	je     0x43b612
  43b5b9:	add    al,0x41
  43b5bb:	(bad)  
  43b5bc:	fwait
  43b5bd:	mov    cl,0x66
  43b5bf:	aad    0x83
  43b5c1:	cdq    
  43b5c2:	jo     0x43b5b7
  43b5c4:	xchg   esp,eax
  43b5c5:	dec    BYTE PTR [esi+ecx*8+0x79]
  43b5c9:	mov    eax,ds:0x8e7cd64a
  43b5ce:	pop    esi
  43b5cf:	int3   
  43b5d0:	xor    BYTE PTR [eax-0x6675319a],0x72
  43b5d7:	mov    edi,0xf1c3fc90
  43b5dc:	cmp    al,0xa1
  43b5de:	jae    0x43b59c
  43b5e0:	push   esi
  43b5e1:	call   0x8568:0xc0588c63
  43b5e8:	inc    eax
  43b5e9:	mov    bl,0xff
  43b5eb:	or     al,0x59
  43b5ed:	std    
  43b5ee:	inc    eax
  43b5ef:	mov    ?,WORD PTR [ebx]
  43b5f1:	mov    bl,0x66
  43b5f3:	lea    ecx,[ebx-0x65]
  43b5f6:	jo     0x43b59f
  43b5f8:	cmp    BYTE PTR [edx-0x311bba0],bl
  43b5fe:	sub    esi,eax
  43b600:	xor    BYTE PTR [ebp+0x69],dl
  43b606:	push   edi
  43b607:	add    DWORD PTR [ebx-0x66069ebf],edx
  43b60d:	dec    edi
  43b60e:	pop    esp
  43b60f:	pop    ss
  43b610:	call   0x4c4b:0xfc88f373
  43b617:	push   gs
  43b619:	inc    esi
  43b61a:	inc    esi
  43b61b:	bt     DWORD PTR [edx+0x44],esp
  43b61f:	pop    es
  43b620:	out    0x3,eax
  43b622:	jo     0x43b62a
  43b624:	mov    ds:0xc25320a6,al
  43b629:	xchg   ebx,eax
  43b62a:	inc    ebx
  43b62b:	outs   dx,BYTE PTR ds:[esi]
  43b62c:	mov    ecx,0xe7701ba7
  43b631:	add    ecx,ebx
  43b633:	push   es
  43b634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b635:	fwait
  43b636:	sbb    eax,0x2b9c9b75
  43b63b:	bound  edi,QWORD PTR [esp+esi*4+0x29ff86c]
  43b642:	mov    dl,0x61
  43b644:	xchg   ebx,eax
  43b645:	mov    al,0xd4
  43b647:	popa   
  43b648:	sbb    DWORD PTR [edi-0x5886923d],0xffffffdb
  43b64f:	outs   dx,DWORD PTR ds:[esi]
  43b650:	out    0x3,eax
  43b652:	pop    DWORD PTR [esi]
  43b654:	mov    ds:0x804fc0a6,al
  43b659:	popf   
  43b65a:	shl    BYTE PTR [edi+0x72],1
  43b65d:	mov    bh,0x94
  43b65f:	je     0x43b6ad
  43b661:	mov    ds:0x9d555690,eax
  43b666:	mov    edi,0x915661
  43b66b:	add    BYTE PTR [eax],al
  43b66d:	lods   eax,DWORD PTR ds:[esi]
  43b66e:	(bad)  
  43b66f:	out    0x3,eax
  43b671:	es pop es
  43b673:	sub    al,0x9e
  43b675:	nop
  43b676:	dec    ecx
  43b677:	inc    esp
  43b678:	sahf   
  43b679:	add    DWORD PTR [esi],0x61a60233
  43b67f:	cmp    DWORD PTR [eax-0x6ee99dc7],ebp
  43b685:	inc    ebp
  43b686:	pusha  
  43b687:	add    al,0xb5
  43b689:	fdivr  st(7),st
  43b68b:	pop    ebp
  43b68c:	add    dh,BYTE PTR [edx]
  43b68e:	bound  edx,QWORD PTR [ebx]
  43b690:	mov    bh,0x5f
  43b692:	(bad)  
  43b693:	cmc    
  43b694:	mov    esp,0xa1046d26
  43b699:	inc    eax
  43b69a:	dec    esi
  43b69b:	add    BYTE PTR [edi],al
  43b69d:	lea    ebp,[esi+0x6e]
  43b6a0:	cld    
  43b6a1:	push   ecx
  43b6a2:	jae    0x43b70b
  43b6a4:	(bad)  
  43b6a5:	xchg   BYTE PTR [esi+0x0],dl
  43b6a8:	xchg   ebx,eax
  43b6a9:	icebp  
  43b6aa:	dec    esi
  43b6ab:	lds    edi,FWORD PTR [bx+di+0x73]
  43b6af:	arpl   WORD PTR [ebp+edx*2+0x5cb0736d],bx
  43b6b6:	fs imul ebp,ecx,0xfffffff0
  43b6ba:	das    
  43b6bb:	(bad)  
  43b6bc:	cwde   
  43b6bd:	push   edi
  43b6be:	push   0x74
  43b6c0:	xchg   ebp,eax
  43b6c1:	mov    BYTE PTR [ecx+0x63],ch
  43b6c4:	mov    BYTE PTR [esp+ecx*2+0x58839a63],cl
  43b6cb:	popa   
  43b6cc:	mov    WORD PTR [edi+0xb8f8f7],ds
  43b6d2:	add    BYTE PTR [eax],al
  43b6d4:	icebp  
  43b6d5:	inc    ebp
  43b6d6:	arpl   WORD PTR [ebp-0x7b],di
  43b6d9:	fs push 0x74
  43b6dc:	jns    0x43b751
  43b6de:	arpl   WORD PTR [ebx+esi*1-0x7b808c92],ax
  43b6e5:	idiv   eax
  43b6e7:	aas    
  43b6e8:	out    dx,al
  43b6e9:	inc    ebp
  43b6ea:	arpl   WORD PTR [ebp+0x5a],dx
  43b6ed:	fs push 0x5c
  43b6f0:	pop    esp
  43b6f1:	jae    0x43b752
  43b6f3:	push   ebp
  43b6f4:	push   edx
  43b6f5:	idiv   eax
  43b6f7:	fucomi st,st(7)
  43b6f9:	inc    ebp
  43b6fa:	arpl   WORD PTR ds:0x3a5f6b34,si
  43b700:	pop    esp
  43b701:	dec    ebp
  43b702:	pop    edi
  43b703:	cmp    al,0x92
  43b705:	push   edi
  43b706:	add    BYTE PTR [ebp+0x1a7743ed],dl
  43b70c:	sub    DWORD PTR [ecx+0x6b],0x39
  43b710:	mov    fs,WORD PTR [edi+ebx*2-0x4]
  43b714:	xchg   ebx,eax
  43b715:	jp     0x43b77a
  43b717:	add    al,cl
  43b719:	popf   
  43b71a:	inc    ecx
  43b71b:	outs   dx,BYTE PTR ds:[esi]
  43b71c:	hlt    
  43b71d:	xchg   ecx,eax
  43b71e:	dec    edi
  43b71f:	add    BYTE PTR ds:0xfb72540d,dh
  43b725:	lods   eax,DWORD PTR ds:[esi]
  43b726:	arpl   WORD PTR [eax-0x43],dx
  43b729:	call   0x7566:0xa74f706d
  43b730:	inc    edi
  43b731:	cmp    al,0xff
  43b734:	inc    edi
  43b735:	or     edi,DWORD PTR [edi]
  43b737:	add    BYTE PTR gs:[eax],al
  43b73a:	add    BYTE PTR [esi-0x51],al
  43b73d:	pop    ebp
  43b73e:	outs   dx,BYTE PTR ds:[esi]
  43b73f:	inc    edi
  43b740:	mov    bl,0x6c
  43b742:	gs scas eax,DWORD PTR es:[edi]
  43b744:	mov    esp,0xaa6635d
  43b749:	inc    ebx
  43b74a:	add    DWORD PTR [ebp+0x774d6ca7],edx
  43b750:	nop
  43b751:	ins    DWORD PTR es:[edi],dx
  43b752:	add    BYTE PTR [eax+0xc],dl
  43b755:	inc    ebp
  43b756:	gs int3 
  43b758:	xchg   esi,eax
  43b759:	inc    ecx
  43b75a:	je     0x43b7d3
  43b75c:	(bad)  
  43b75d:	ds jb  0x43b7cd
  43b760:	(bad)
  43b764:	nop
  43b765:	ins    BYTE PTR es:[edi],dx
  43b766:	add    BYTE PTR [edx],dh
  43b768:	or     al,0x47
  43b76a:	jo     0x43b723
  43b76c:	nop
  43b76d:	cmp    al,0x65
  43b76f:	mov    ecx,0xba6f6c95
  43b774:	mov    ecx,0xba0fff8
  43b779:	aas    
  43b77a:	gs (bad) 
  43b77c:	mov    ebp,0xa7cf626d
  43b781:	data16 jne 0x43b78e
  43b784:	or     cl,BYTE PTR [esi+0x6ca80902]
  43b78a:	dec    ebx
  43b78b:	test   DWORD PTR [ebx-0x631490a6],0x13f3535c
  43b795:	mov    ds:0xfce05673,eax
  43b79a:	dec    ebp
  43b79b:	repnz and al,0x9f
  43b79e:	jae    0x43b7a0
  43b7a0:	add    BYTE PTR [eax],al
  43b7a2:	or     edx,DWORD PTR cs:[esi-0x600bd58e]
  43b7a9:	push   0x3a
  43b7ab:	sub    al,0x4
  43b7ad:	jle    0x43b7a1
  43b7af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b7b0:	lahf   
  43b7b1:	jae    0x43b7fa
  43b7b3:	fcom   DWORD PTR [edx-0x473bed9e]
  43b7b9:	bound  eax,QWORD PTR [eax]
  43b7bb:	leave  
  43b7bc:	mov    BYTE PTR [eax+0x3],ch
  43b7bf:	loopne 0x43b7bd
  43b7c1:	pop    esp
  43b7c2:	icebp  
  43b7c3:	xchg   ecx,eax
  43b7c4:	lahf   
  43b7c5:	pusha  
  43b7c6:	or     dh,BYTE PTR [ecx-0x631e9d78]
  43b7cc:	fwait
  43b7cd:	imul   ecx,edi,0xd64a8d9c
  43b7d3:	nop
  43b7d4:	xchg   ecx,eax
  43b7d5:	pop    esi
  43b7d6:	int3   
  43b7d7:	sub    BYTE PTR [ebp+0x43b4cff],0x47
  43b7de:	rcl    BYTE PTR [ecx-0x5538a361],0x97
  43b7e5:	outs   dx,DWORD PTR ds:[esi]
  43b7e6:	mov    edi,0xf135fd76
  43b7eb:	(bad)  
  43b7ec:	xchg   edx,eax
  43b7ed:	xchg   bp,ax
  43b7ef:	push   ebx
  43b7f0:	scas   eax,DWORD PTR es:[edi]
  43b7f1:	lea    cx,[ebx-0x69]
  43b7f5:	jo     0x43b7ea
  43b7f7:	rol    BYTE PTR [ebx],1
  43b7f9:	inc    ebx
  43b7fa:	sbb    BYTE PTR [edx-0x63],0x6b
  43b7fe:	mov    eax,ds:0xf373a342
  43b803:	jb     0x43b802
  43b805:	inc    esi
  43b806:	add    BYTE PTR [eax],al
  43b808:	add    BYTE PTR [ebp+0x606d9933],al
  43b80e:	dec    ebx
  43b80f:	mov    ds:0xc074173,eax
  43b814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b815:	pusha  
  43b816:	pop    es
  43b817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b818:	add    al,0x2f
  43b81a:	jns    0x43b824
  43b81c:	xchg   ecx,eax
  43b81d:	xor    DWORD PTR [ebx+0x2],ebp
  43b820:	lahf   
  43b821:	(bad)  
  43b822:	hlt    
  43b823:	pop    edx
  43b824:	add    esi,DWORD PTR [edx]
  43b826:	push   0xfffffff3
  43b828:	mov    al,0x4d
  43b82a:	or     ebx,DWORD PTR gs:[ecx-0x5e06c1dd]
  43b831:	sbb    eax,DWORD PTR [edi]
  43b833:	sbb    DWORD PTR [esi],eax
  43b835:	inc    ebx
  43b836:	fs (bad) 
  43b838:	(bad)
  43b83c:	xchg   esp,eax
  43b83d:	sub    eax,0x84b0c46c
  43b842:	hlt    
  43b843:	cmp    BYTE PTR [ecx+esi*1],al
  43b846:	pop    esi
  43b847:	retf   
  43b848:	xchg   edi,eax
  43b849:	es push 0xffffffc6
  43b84c:	(bad)  
  43b84d:	ins    BYTE PTR es:[edi],dx
  43b84e:	hlt    
  43b84f:	sti    
  43b850:	add    eax,0x998c76ba
  43b855:	ret    
  43b856:	pop    ebp
  43b857:	mov    DWORD PTR [edi-0x70498435],ebx
  43b85d:	lods   eax,DWORD PTR ds:[esi]
  43b85e:	jp     0x43b7e0
  43b860:	cwde   
  43b861:	ficomp DWORD PTR [ebx-0x19]
  43b864:	add    eax,DWORD PTR [ebp-0x3f6169f7]
  43b86a:	pop    edx
  43b86b:	jg     0x43b802
  43b86d:	add    BYTE PTR [eax],al
  43b86f:	add    BYTE PTR [ecx-0x6e407c9b],dl
  43b875:	ja     0x43b8c5
  43b877:	nop
  43b878:	mov    esi,DWORD PTR [esi-0x19]
  43b87b:	add    ebp,DWORD PTR [ebp-0x6467d9fa]
  43b881:	ja     0x43b8c7
  43b883:	rcl    BYTE PTR [ecx-0x746fb189],0x76
  43b88a:	out    0x3,eax
  43b88c:	mov    eax,DWORD PTR ds:0x778c2e00
  43b892:	push   eax
  43b893:	cmp    ecx,DWORD PTR [edx-0x79e59cae]
  43b899:	push   esi
  43b89a:	setae  BYTE PTR [bp+0x71]
  43b89f:	cmp    ah,BYTE PTR [ebx+0x54]
  43b8a2:	je     0x43b8a4
  43b8a4:	push   0x5d
  43b8a6:	add    cl,bh
  43b8a8:	lock xor DWORD PTR [esi+0x4],ebp
  43b8ac:	nop
  43b8ad:	ja     0x43b912
  43b8af:	push   ds
  43b8b0:	mov    BYTE PTR [ebp+0x64],bl
  43b8b3:	inc    BYTE PTR [ebx+0x6cc87442]
  43b8b9:	ins    BYTE PTR es:[edi],dx
  43b8ba:	imul   ecx,edi,0xa7f8f363
  43b8c0:	lock xor DWORD PTR [esi+edi*4+0x5f],ebp
  43b8c5:	push   0x675ad051
  43b8ca:	imul   esi,DWORD PTR [esi-0x42a088c1],0xe96a5e89
  43b8d4:	add    BYTE PTR [eax],al
  43b8d6:	add    al,dh
  43b8d8:	lods   al,BYTE PTR ds:[esi]
  43b8d9:	std    
  43b8da:	mov    ecx,0x9b50777d
  43b8df:	jnp    0x43b933
  43b8e1:	arpl   WORD PTR [edx+0x7f675667],bx
  43b8e7:	fs pop esi
  43b8e9:	jno    0x43b885
  43b8eb:	ins    BYTE PTR es:[edi],dx
  43b8ec:	push   esp
  43b8ed:	je     0x43b87f
  43b8ef:	pop    ebx
  43b8f0:	pop    ebp
  43b8f1:	add    BYTE PTR [edi-0x7b91ce10],dl
  43b8f7:	push   ecx
  43b8f8:	ja     0x43b95d
  43b8fa:	sub    eax,0x55656252
  43b8ff:	jl     0x43b964
  43b901:	push   ecx
  43b902:	jmp    0x2a43d9f7
  43b907:	addr16 push esp
  43b909:	outs   dx,BYTE PTR ds:[esi]
  43b90a:	add    dh,al
  43b90c:	fwait
  43b90d:	outs   dx,DWORD PTR ds:[esi]
  43b90e:	gs mov eax,0x1ffff8a3
  43b914:	or     al,0x3f
  43b916:	gs push ds
  43b918:	scas   eax,DWORD PTR es:[edi]
  43b919:	pop    ecx
  43b91a:	jae    0x43b91a
  43b91c:	mov    bl,0x66
  43b91e:	jo     0x43b91f
  43b920:	xchg   esi,eax
  43b921:	inc    ecx
  43b922:	outs   dx,BYTE PTR ds:[esi]
  43b923:	cld    
  43b924:	cdq    
  43b925:	clc    
  43b926:	push   DWORD PTR [esi-0x1497c4fa]
  43b92c:	xchg   esp,eax
  43b92d:	dec    ebp
  43b92e:	jo     0x43b8ea
  43b930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b931:	push   0x57
  43b933:	call   0x6ca7:0xcd012b06
  43b93a:	dec    ecx
  43b93b:	add    BYTE PTR [eax],al
  43b93d:	add    BYTE PTR [ecx-0x5bb69967],ch
  43b943:	xchg   esp,eax
  43b944:	addr16 add ch,bl
  43b947:	or     al,BYTE PTR [edx+esi*2-0x45]
  43b94b:	add    DWORD PTR [ecx+0x63],0xfff89ca5
  43b952:	mov    ecx,0x8f6f5404
  43b957:	pushf  
  43b958:	popa   
  43b959:	arpl   WORD PTR [ebp-0x77ffa26e],sp
  43b95f:	or     edi,DWORD PTR [edi]
  43b961:	gs jle 0x43b911
  43b964:	pop    ebp
  43b965:	jns    0x43b9df
  43b967:	cdq    
  43b968:	pop    ecx
  43b969:	jb     0x43b9d9
  43b96b:	mov    ch,0x6c
  43b96d:	popa   
  43b96e:	mov    esi,0x43fff8a6
  43b973:	or     BYTE PTR [ebp+0x61],al
  43b976:	stos   BYTE PTR es:[edi],al
  43b977:	mov    al,ds:0x996e6e61
  43b97c:	outs   dx,DWORD PTR ds:[esi]
  43b97d:	push   eax
  43b97e:	lds    edx,FWORD PTR [ebx+0xab97466]
  43b984:	rol    DWORD PTR [ecx],cl
  43b986:	repz lea edx,es:[eax-0x66]
  43b98b:	xor    DWORD PTR [eax-0x3207b98],esp
  43b991:	shl    ecx,0xc
  43b994:	lahf   
  43b995:	jae    0x43b9db
  43b997:	inc    edi
  43b998:	xchg   edx,eax
  43b999:	arpl   WORD PTR [ecx+edi*1-0x4c],dx
  43b99d:	push   0x3fce060
  43b9a2:	add    BYTE PTR [eax],al
  43b9a4:	add    dl,dh
  43b9a6:	sub    BYTE PTR [edi-0x62f5cd8d],bl
  43b9ac:	bound  eax,QWORD PTR [eax+0x1c]
  43b9af:	xchg   ecx,eax
  43b9b0:	ins    DWORD PTR es:[edi],dx
  43b9b1:	repz iret 
  43b9b3:	add    eax,DWORD PTR [ecx+0x4e]
  43b9b6:	cld    
  43b9b7:	mov    ebp,0x8ded126b
  43b9bc:	dec    ebx
  43b9bd:	adc    al,0xf2
  43b9bf:	cdq    
  43b9c0:	push   eax
  43b9c1:	repz ret 
  43b9c3:	add    eax,DWORD PTR [ecx+0xe]
  43b9c6:	fsubr  QWORD PTR [esi+ebx*2+0x7392c301]
  43b9cd:	repz arpl WORD PTR [ecx+eax*2],ax
  43b9d1:	push   ss
  43b9d2:	mov    ah,0xa9
  43b9d4:	add    ax,0x91cc
  43b9d8:	jo     0x43b99b
  43b9da:	ret    0x739d
  43b9dd:	repz jo 0x43b9dd
  43b9e0:	inc    ebx
  43b9e1:	retf   0x8c8c
  43b9e4:	pop    esi
  43b9e5:	fistp  QWORD PTR [esp+edx*4+0x4a]
  43b9e9:	(bad)  
  43b9ea:	mov    WORD PTR [ebp-0x567533a2],cs
  43b9f0:	(bad)  
  43b9f1:	cmp    al,0xeb
  43b9f3:	dec    BYTE PTR [edx-0x40]
  43b9f6:	mov    BYTE PTR [ecx-0x448c65a2],ch
  43b9fc:	push   0x6b8f92a1
  43ba01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ba02:	push   es
  43ba03:	push   eax
  43ba04:	xchg   esp,eax
  43ba05:	mov    BYTE PTR [ebx+0x2a],ch
  43ba08:	mov    ds:0x96000000,al
  43ba0d:	imul   eax,DWORD PTR [esi-0x70],0xffffff97
  43ba11:	push   es
  43ba12:	fild   WORD PTR [ecx]
  43ba14:	test   al,0x67
  43ba16:	aaa    
  43ba17:	scas   al,BYTE PTR es:[edi]
  43ba18:	lea    esi,[ebx+esi*1-0x71]
  43ba1c:	dec    ebp
  43ba1d:	arpl   WORD PTR [esi],bx
  43ba1f:	lahf   
  43ba20:	pop    ebp
  43ba21:	pop    eax
  43ba22:	out    0x3,eax
  43ba24:	inc    eax
  43ba25:	push   esp
  43ba26:	sub    al,0xb2
  43ba28:	pop    es
  43ba29:	xor    eax,0x63589fc9
  43ba2e:	out    0x3,eax
  43ba30:	jb     0x43ba38
  43ba32:	and    BYTE PTR [ecx-0x67ec95dd],dl
  43ba38:	das    
  43ba39:	popa   
  43ba3a:	or     cl,BYTE PTR [ebp-0x5fffabe6]
  43ba40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ba41:	lock mov al,0x2
  43ba44:	xor    ch,BYTE PTR [edx-0x25]
  43ba47:	mov    bh,0x11
  43ba49:	popa   
  43ba4a:	ret    0x148f
  43ba4d:	push   esp
  43ba4e:	rcr    BYTE PTR [edi+0x3baf084],0xbe
  43ba55:	pop    edi
  43ba56:	ror    DWORD PTR [ebp-0x4f4c8aef],1
  43ba5c:	aad    0x6a
  43ba5e:	fwait
  43ba5f:	xchg   esp,eax
  43ba60:	mov    bh,0x7a
  43ba62:	mov    ch,0x9a
  43ba64:	retf   0xb667
  43ba67:	call   0x737:0x3e757d0
  43ba6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ba6f:	xchg   ecx,eax
  43ba70:	add    BYTE PTR [eax],al
  43ba72:	add    BYTE PTR [ebp-0x2e436c8a],bh
  43ba78:	jp     0x43ba29
  43ba7a:	mov    ds:0xa2975ec7,al
  43ba7f:	sahf   
  43ba80:	add    BYTE PTR gs:[eax+esi*8-0x7d560061],al
  43ba88:	jns    0x43bafa
  43ba8a:	pop    ebp
  43ba8b:	xor    BYTE PTR [ebx+0x6f],dl
  43ba8e:	push   esp
  43ba8f:	push   0x5e2a6362
  43ba94:	pop    esi
  43ba95:	je     0x43badb
  43ba97:	outs   dx,DWORD PTR ds:[esi]
  43ba98:	je     0x43baeb
  43ba9a:	jmp    0x2a43848f
  43ba9f:	cmp    DWORD PTR [eax+0x70],0x6c64a13d
  43baa6:	inc    esp
  43baa7:	nop
  43baa8:	bound  esp,QWORD PTR [ebx+0x2a]
  43baab:	jle    0x43bb0a
  43baad:	je     0x43bab3
  43baaf:	jg     0x43bb24
  43bab1:	add    BYTE PTR [edx-0x10],bl
  43bab4:	xor    DWORD PTR [esi+0x10],ebp
  43bab7:	addr16 jae 0x43baf7
  43baba:	sti    
  43babb:	push   ebp
  43babc:	push   eax
  43babd:	je     0x43bac3
  43babf:	outs   dx,DWORD PTR ds:[esi]
  43bac0:	push   eax
  43bac1:	ins    DWORD PTR es:[edi],dx
  43bac2:	add    edi,ebp
  43bac4:	mov    ah,0xff
  43bac6:	sub    DWORD PTR [ecx+0x54dd7078],eax
  43bacc:	fs ins DWORD PTR es:[edi],dx
  43bace:	aad    0x62
  43bad0:	pop    esi
  43bad1:	ja     0x43ba74
  43bad3:	push   ecx
  43bad4:	bound  ebp,QWORD PTR [eax-0x17]
  43bad7:	add    BYTE PTR [eax],al
  43bad9:	add    al,dh
  43badb:	mov    esi,0x7862a9ff
  43bae0:	jo     0x43ba97
  43bae2:	test   al,0x50
  43bae4:	ins    DWORD PTR es:[edi],dx
  43bae5:	shl    DWORD PTR [eax+edx*2-0xa0f378c],0xfe
  43baed:	mov    ch,0x80
  43baef:	fs push 0xffffffb9
  43baf2:	bound  ebx,QWORD PTR [esi+0x5d]
  43baf5:	mov    WORD PTR [ebx+0x62],fs
  43baf8:	push   esp
  43baf9:	jle    0x43bb56
  43bafb:	fs push 0x0
  43bafe:	dec    edx
  43baff:	add    ecx,DWORD PTR [edi+0x1]
  43bb02:	push   ebp
  43bb03:	nop
  43bb04:	ins    BYTE PTR es:[edi],dx
  43bb05:	push   ebx
  43bb06:	jae    0x43ba97
  43bb08:	dec    ebx
  43bb09:	jne    0x43bb73
  43bb0b:	les    ebp,FWORD PTR [ebp+0x74]
  43bb0e:	ret    0x6a73
  43bb11:	imul   esp,DWORD PTR [esi+0x1e000071],0xb7704709
  43bb1b:	je     0x43bb71
  43bb1d:	push   0x64595db8
  43bb22:	push   es
  43bb23:	jp     0x43bb88
  43bb25:	gs sub al,0x3
  43bb28:	pop    eax
  43bb29:	add    DWORD PTR ds:0x3537460,edx
  43bb2f:	pop    edi
  43bb30:	dec    ebx
  43bb31:	jne    0x43bb2b
  43bb33:	inc    ebx
  43bb34:	ins    DWORD PTR es:[edi],dx
  43bb35:	je     0x43bb29
  43bb37:	jns    0x43bba3
  43bb39:	imul   esp,esi,0x6f3b6b
  43bb3f:	add    BYTE PTR [eax],al
  43bb41:	mov    bh,0x78
  43bb43:	je     0x43bb45
  43bb45:	rol    BYTE PTR [ebx],1
  43bb47:	aas    
  43bb48:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  43bb4a:	push   esi
  43bb4b:	addr16 imul esi,edi,0x78
  43bb4f:	inc    ecx
  43bb50:	outs   dx,BYTE PTR ds:[esi]
  43bb51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bb52:	jns    0x43bbbe
  43bb54:	ins    DWORD PTR es:[edi],dx
  43bb55:	mov    ebx,0xac6f6176
  43bb5a:	or     bh,BYTE PTR [eax+eax*1+0x49]
  43bb5e:	je     0x43bbbd
  43bb60:	popa   
  43bb61:	ss pop edi
  43bb63:	push   eax
  43bb64:	jb     0x43bba3
  43bb66:	gs pop ebp
  43bb68:	jae    0x43bb13
  43bb6a:	inc    ebx
  43bb6b:	imul   edx,DWORD PTR [ebp-0x67],0x5f
  43bb6f:	push   0x57
  43bb71:	dec    edx
  43bb72:	or     cl,BYTE PTR [edi+0x67799e01]
  43bb78:	imul   esi,ebx,0xffffff8a
  43bb7b:	ins    BYTE PTR es:[edi],dx
  43bb7c:	push   eax
  43bb7d:	rol    DWORD PTR [esi+0x7ac76776],0x65
  43bb84:	arpl   bp,ax
  43bb86:	jle    0x43bbf0
  43bb88:	jae    0x43bb18
  43bb8a:	mov    esp,?
  43bb8c:	sbb    bl,dh
  43bb8e:	sahf   
  43bb8f:	pusha  
  43bb90:	data16 sahf 
  43bb92:	push   eax
  43bb93:	js     0x43bbe9
  43bb95:	pushf  
  43bb96:	pop    eax
  43bb97:	addr16 push 0xffffffa3
  43bb9a:	push   ecx
  43bb9b:	imul   esi,DWORD PTR [edx-0x76],0x2b
  43bb9f:	addr16 popa 
  43bba1:	mov    ?,WORD PTR [eax]
  43bba3:	add    al,0xd2
  43bba5:	add    BYTE PTR [eax],al
  43bba7:	add    bl,dh
  43bba9:	and    BYTE PTR [edx+0x77],dh
  43bbac:	arpl   WORD PTR [esi+edx*2],bp
  43bbaf:	arpl   WORD PTR [ecx+0x47],sp
  43bbb2:	data16 ja 0x43bbf5
  43bbb5:	pop    ss
  43bbb6:	gs push 0x52
  43bbb9:	adc    al,0x77
  43bbbb:	outs   dx,BYTE PTR ds:[esi]
  43bbbc:	dec    esi
  43bbbd:	sub    eax,0x20f3c304
  43bbc2:	jb     0x43bc3b
  43bbc4:	inc    ebx
  43bbc5:	in     al,dx
  43bbc6:	inc    ebp
  43bbc7:	arpl   WORD PTR [edi],sp
  43bbc9:	cmp    DWORD PTR [edi+0x77],esp
  43bbcc:	inc    ebx
  43bbcd:	push   DWORD PTR [ecx+0x5f]
  43bbd0:	push   cs
  43bbd1:	loopne 0x43bbcf
  43bbd3:	(bad)
  43bbd6:	jb     0x43bc4f
  43bbd8:	add    edx,esp
  43bbda:	dec    ebx
  43bbdb:	imul   eax,DWORD PTR [ebx],0xffffffc5
  43bbde:	jb     0x43bc54
  43bbe0:	sub    bl,al
  43bbe2:	jnp    0x43bbe4
  43bbe4:	rep ins BYTE PTR es:[edi],dx
  43bbe6:	std    
  43bbe7:	cmp    al,0xe1
  43bbe9:	(bad)  
  43bbea:	ins    BYTE PTR es:[edi],dx
  43bbeb:	je     0x43bb9c
  43bbed:	mov    edx,0xace17471
  43bbf2:	jnp    0x43bc39
  43bbf4:	into   
  43bbf5:	push   es
  43bbf6:	mov    al,ds:0xb007c803
  43bbfb:	jno    0x43bbc9
  43bbfd:	jb     0x43bb7f
  43bbff:	fs (bad) 
  43bc01:	arpl   WORD PTR [esi-0x738d3984],si
  43bc07:	jo     0x43bbc7
  43bc09:	pop    esi
  43bc0a:	je     0x43bc83
  43bc0c:	add    BYTE PTR [eax],al
  43bc0e:	add    BYTE PTR [edi-0x4f8e85a3],cl
  43bc14:	outs   dx,BYTE PTR ds:[esi]
  43bc15:	xchg   edx,eax
  43bc16:	add    esp,DWORD PTR [edx-0x6b8dcff9]
  43bc1c:	jb     0x43bc6e
  43bc1e:	arpl   WORD PTR [edi-0x5198b2a1],dx
  43bc24:	arpl   WORD PTR [esi+0x77],ax
  43bc27:	test   DWORD PTR [edi+0x3b],ebx
  43bc2a:	jnp    0x43bc63
  43bc2c:	bound  esi,QWORD PTR [esi]
  43bc2e:	gs push ebp
  43bc30:	pop    esi
  43bc31:	aaa    
  43bc32:	js     0x43bc7e
  43bc34:	jns    0x43bc1d
  43bc36:	add    esp,DWORD PTR [ecx+0x47673609]
  43bc3c:	pop    eax
  43bc3d:	add    al,0x65
  43bc3f:	inc    eax
  43bc40:	jns    0x43bc42
  43bc42:	js     0x43bc88
  43bc44:	inc    ebx
  43bc45:	add    al,0x75
  43bc47:	push   ss
  43bc48:	jns    0x43bc5a
  43bc4a:	je     0x43bc73
  43bc4c:	pop    esp
  43bc4d:	cmc    
  43bc4e:	inc    edi
  43bc4f:	inc    esp
  43bc50:	push   0x70d0403
  43bc55:	es jno 0x43bc61
  43bc58:	jne    0x43bc26
  43bc5a:	jne    0x43bc63
  43bc5c:	pop    eax
  43bc5d:	shl    DWORD PTR [ebp+0xc],cl
  43bc60:	pop    ebp
  43bc61:	retf   0x1054
  43bc64:	push   0x730c75d4
  43bc69:	rol    BYTE PTR [edi-0x30],0x77
  43bc6d:	(bad)  
  43bc6e:	jne    0x43bc3c
  43bc70:	jbe    0x43bc72
  43bc72:	mov    ebp,0xe3000000
  43bc77:	pop    esp
  43bc78:	push   esp
  43bc79:	mov    esi,0x9c5d67bf
  43bc7e:	(bad)  
  43bc7f:	arpl   WORD PTR [eax+eiz*4-0x54],si
  43bc83:	ins    DWORD PTR es:[di],dx
  43bc85:	mov    al,dh
  43bc87:	arpl   WORD PTR [eax-0x6b],si
  43bc8a:	ret    
  43bc8b:	pop    esp
  43bc8c:	push   ecx
  43bc8d:	jmp    0xa642fc82
  43bc92:	lea    esi,[edx+0x4d]
  43bc95:	mov    WORD PTR [edi-0x637f9189],ss
  43bc9b:	jae    0x43bce1
  43bc9d:	dec    esp
  43bc9e:	xchg   BYTE PTR [ecx+0x6e],cl
  43bca1:	push   eax
  43bca2:	jg     0x43bd16
  43bca4:	imul   ebx,DWORD PTR [ebx-0x5a],0xef3d5d4b
  43bcab:	mov    ah,0xfd
  43bcad:	sbb    DWORD PTR [ebx+esi*2+0x4d],edx
  43bcb1:	inc    esp
  43bcb2:	dec    esi
  43bcb3:	js     0x43bd23
  43bcb5:	inc    eax
  43bcb6:	pop    ebx
  43bcb7:	je     0x43bcfd
  43bcb9:	inc    esp
  43bcba:	pop    esi
  43bcbb:	dec    edx
  43bcbc:	outs   dx,BYTE PTR ds:[esi]
  43bcbd:	adc    BYTE PTR [edi+0x73],al
  43bcc0:	imul   ebx,DWORD PTR [ebx],0x55d4c1e
  43bcc6:	div    DWORD PTR [ebx]
  43bcc8:	(bad)  
  43bcc9:	cmp    cl,BYTE PTR [esi+eiz*2+0x3d]
  43bccd:	sti    
  43bcce:	adc    eax,0x3604744c
  43bcd3:	push   0x561f2c77
  43bcd8:	add    bh,bh
  43bcda:	add    BYTE PTR [eax],al
  43bcdc:	add    dh,ch
  43bcde:	cmp    al,0x63
  43bce0:	into   
  43bce1:	and    DWORD PTR [eax+0x63],edi
  43bce4:	fisttp DWORD PTR [ecx]
  43bce6:	pop    ecx
  43bce7:	pop    edi
  43bce8:	lds    eax,FWORD PTR ds:0x1bd14368
  43bcee:	pop    es
  43bcef:	add    BYTE PTR [eax],al
  43bcf1:	cmp    eax,DWORD PTR [ecx]
  43bcf3:	dec    edx
  43bcf4:	gs sub eax,0x34657056
  43bcfa:	cmp    bl,BYTE PTR [ebp+0x79]
  43bcfd:	(bad)  
  43bcfe:	outs   dx,DWORD PTR ds:[esi]
  43bcff:	dec    edi
  43bd00:	add    BYTE PTR [edx],ch
  43bd02:	add    DWORD PTR [edx+0x65],ecx
  43bd05:	ins    DWORD PTR es:[edi],dx
  43bd06:	inc    edx
  43bd07:	ins    BYTE PTR es:[edi],dx
  43bd08:	outs   dx,DWORD PTR ds:[esi]
  43bd09:	pop    ecx
  43bd0a:	fs inc ebx
  43bd0c:	arpl   WORD PTR gs:[edi],ax
  43bd0f:	jbe    0x43bd13
  43bd11:	mov    BYTE PTR [edi+ebx*2+0x53],ah
  43bd15:	outs   dx,DWORD PTR ds:[esi]
  43bd16:	jae    0x43bd66
  43bd18:	popa   
  43bd19:	jbe    0x43bd8f
  43bd1b:	pop    ebp
  43bd1c:	inc    ebp
  43bd1d:	mov    ds:0x1d00004e,al
  43bd22:	add    bh,BYTE PTR ds:0x6c619f71
  43bd28:	push   ebx
  43bd29:	mov    bl,0x5e
  43bd2b:	add    BYTE PTR [eax],al
  43bd2d:	retf   
  43bd2e:	ds dec esi
  43bd30:	inc    ecx
  43bd31:	or     bh,BYTE PTR [ebx+ebp*1]
  43bd34:	xor    dh,ah
  43bd36:	pop    esi
  43bd37:	ins    BYTE PTR es:[edi],dx
  43bd38:	ins    BYTE PTR es:[edi],dx
  43bd39:	retf   0x7006
  43bd3c:	add    DWORD PTR ds:0x736671,ebx
  43bd42:	add    BYTE PTR [eax],al
  43bd44:	jmp    0x4f60:0xde6e6174
  43bd4b:	add    ch,dh
  43bd4d:	add    ebp,DWORD PTR [edi+0x76]
  43bd50:	mov    ah,0x75
  43bd52:	jo     0x43bdc6
  43bd54:	add    ebx,DWORD PTR [ecx+0x74]
  43bd57:	data16 fild DWORD PTR [edx]
  43bd5a:	bound  eax,QWORD PTR [ecx]
  43bd5c:	push   DWORD PTR [esp+ebp*2+0x55]
  43bd60:	xchg   esp,eax
  43bd61:	pop    edi
  43bd62:	imul   esp,DWORD PTR [ebx-0x45],0x76
  43bd66:	pop    ebp
  43bd67:	inc    ecx
  43bd68:	call   0x70ac:0xf3011606
  43bd6f:	outs   dx,BYTE PTR ds:[esi]
  43bd70:	xor    BYTE PTR [ebx-0x6145b594],ch
  43bd76:	cld    
  43bd77:	ins    BYTE PTR es:[edi],dx
  43bd78:	repz (bad) 
  43bd7a:	arpl   WORD PTR [ebx+ecx*8-0x5a],si
  43bd7e:	ins    DWORD PTR es:[edi],dx
  43bd7f:	push   ebx
  43bd80:	ror    DWORD PTR [ebx-0x490cffaf],0xfc
  43bd87:	dec    edi
  43bd88:	rcl    BYTE PTR [ebx-0x7e35bd9c],cl
  43bd8e:	pusha  
  43bd8f:	inc    edx
  43bd90:	retf   0x686b
  43bd93:	dec    edx
  43bd94:	xchg   edx,eax
  43bd95:	xchg   edx,eax
  43bd96:	addr16 push ecx
  43bd98:	repz je 0x43bd9f
  43bd9b:	push   eax
  43bd9c:	xchg   edx,eax
  43bd9d:	imul   esp,DWORD PTR [ebp+0x4e],0xffffff8e
  43bda1:	push   0x6a
  43bda3:	jb     0x43bd3b
  43bda5:	sbb    DWORD PTR [ebx+0x6c],ebp
  43bda8:	add    BYTE PTR [eax],al
  43bdaa:	add    BYTE PTR [esi-0x6f9c8bd4],cl
  43bdb0:	sub    BYTE PTR [edx*1+0x6e782cf2],al
  43bdb7:	xor    BYTE PTR [ebx+0x74],dl
  43bdba:	dec    edx
  43bdbb:	xor    ah,al
  43bdbd:	cld    
  43bdbe:	push   esp
  43bdbf:	repz (bad)
  43bdc2:	je     0x43be0f
  43bdc4:	daa    
  43bdc5:	ins    DWORD PTR es:[edi],dx
  43bdc6:	inc    esp
  43bdc7:	pop    edx
  43bdc8:	push   cs
  43bdc9:	addr16 pop ebp
  43bdcb:	aas    
  43bdcc:	stc    
  43bdcd:	ins    DWORD PTR es:[edi],dx
  43bdce:	ja     0x43bdf4
  43bdd0:	loopne 0x43bdce
  43bdd2:	sub    eax,0x74632ff3
  43bdd7:	sbb    ebx,DWORD PTR [edi]
  43bdd9:	push   0x78082e64
  43bdde:	arpl   WORD PTR ds:0x5696bed,cx
  43bde4:	adc    DWORD PTR [ebx+edx*2],eax
  43bde7:	repz push es
  43bde9:	mov    bh,0x64
  43bdeb:	call   FWORD PTR [esi-0x5e]
  43bdee:	push   0x6cd54307
  43bdf3:	add    DWORD PTR [ecx+ebx*4+0x78],esp
  43bdf7:	fsub   DWORD PTR [esp+ecx*8+0x71]
  43bdfb:	ret    0x6406
  43bdfe:	add    eax,ebx
  43be00:	addr16 mov ebx,0xbc63a56b
  43be06:	outs   dx,BYTE PTR ds:[esi]
  43be07:	shl    DWORD PTR [ebx-0x5b],0x64
  43be0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43be0c:	pop    ebp
  43be0d:	xchg   esi,eax
  43be0e:	outs   dx,DWORD PTR ds:[esi]
  43be0f:	add    BYTE PTR [eax],al
  43be11:	add    BYTE PTR [ebp+esi*2+0x6f3567f],bl
  43be18:	push   edx
  43be19:	add    edi,DWORD PTR [esi-0x689754c2]
  43be1f:	arpl   WORD PTR [ebx+0x68],si
  43be22:	shl    DWORD PTR [edi-0x7d],0x78
  43be26:	nop
  43be27:	push   ecx
  43be28:	out    0x3,eax
  43be2a:	pop    esi
  43be2b:	push   es
  43be2c:	ss dec esp
  43be2e:	scas   eax,DWORD PTR es:[edi]
  43be2f:	arpl   WORD PTR [ebx+0x67],cx
  43be32:	xchg   DWORD PTR [ebx+0x1e],esp
  43be35:	addr16 jl 0x43be89
  43be38:	out    0x3,eax
  43be3a:	or     eax,0x55781606
  43be3f:	inc    esp
  43be40:	dec    esp
  43be41:	je     0x43be6c
  43be43:	push   eax
  43be44:	out    0x3,eax
  43be46:	pop    esi
  43be47:	pop    es
  43be48:	pop    ss
  43be49:	arpl   WORD PTR [edi+0x5f],ax
  43be4c:	xor    al,0x63
  43be4e:	aas    
  43be4f:	sqrtps xmm0,XMMWORD PTR fs:[ebx+0x62]
  43be54:	push   es
  43be55:	push   ebp
  43be56:	repz push es
  43be58:	jbe    0x43be5e
  43be5a:	inc    ebx
  43be5b:	data16 sti 
  43be5d:	imul   esi,DWORD PTR [esi],0x5c
  43be60:	adc    BYTE PTR [ebp+ebp*1+0x58],dh
  43be64:	add    BYTE PTR [esi],al
  43be66:	sbb    edx,DWORD PTR [esi+0x0]
  43be69:	dec    esi
  43be6a:	not    DWORD PTR [esi+0x5f]
  43be6d:	fstp   QWORD PTR [eax]
  43be6f:	push   esp
  43be70:	push   0xffffffd8
  43be72:	add    eax,0xcc745e
  43be77:	add    BYTE PTR [eax],al
  43be79:	and    esi,DWORD PTR [edi+0x5f]
  43be7c:	retf   0x59d5
  43be7f:	push   ecx
  43be80:	jmp    0x99442c75
  43be85:	shl    DWORD PTR [edx+0x68],1
  43be88:	cwde   
  43be89:	fstp   QWORD PTR [ebp+0x74]
  43be8c:	les    esp,FWORD PTR [ebx-0x3275a08a]
  43be92:	pop    ecx
  43be93:	push   ecx
  43be94:	jmp    0xb943f589
  43be99:	shl    DWORD PTR [edx+0x68],1
  43be9c:	test   al,0x94
  43be9e:	bound  edi,QWORD PTR [esi]
  43bea0:	mov    BYTE PTR [ebx-0x6e72929f],dl
  43bea6:	pop    ecx
  43bea7:	push   0xff07f09e
  43beac:	cdq    
  43bead:	test   BYTE PTR [eax+0x3d],bl
  43beb0:	push   esp
  43beb1:	jg     0x43beef
  43beb3:	inc    edi
  43beb4:	idiv   DWORD PTR ss:[ecx]
  43beb7:	dec    eax
  43beb8:	and    eax,0x2050279e
  43bebd:	sbb    eax,0xef556c63
  43bec2:	test   eax,0x462f19ff
  43bec7:	arpl   WORD PTR ds:0x456c5e2d,di
  43becd:	push   esp
  43bece:	pop    ecx
  43becf:	push   eax
  43bed0:	or     BYTE PTR [ebx+0x5f],cl
  43bed3:	push   ecx
  43bed4:	jmp    0x2a43c3c9
  43bed9:	inc    esi
  43beda:	pop    esp
  43bedb:	imul   ecx,DWORD PTR [eax],0x0
  43bede:	add    BYTE PTR [eax],al
  43bee0:	sbb    eax,0x3004c63
  43bee5:	pop    ecx
  43bee6:	pop    ebp
  43bee7:	push   esp
  43bee8:	in     eax,dx
  43bee9:	inc    ebx
  43beea:	push   0x67
  43beec:	xchg   esp,eax
  43beed:	push   edx
  43beee:	add    BYTE PTR [eax],al
  43bef0:	mov    eax,0xb7684b04
  43bef5:	push   edi
  43bef6:	ins    BYTE PTR es:[edi],dx
  43bef7:	inc    ebp
  43bef8:	xchg   edx,eax
  43bef9:	pusha  
  43befa:	pop    ebx
  43befb:	jne    0x43be93
  43befd:	pusha  
  43befe:	dec    edi
  43beff:	add    BYTE PTR [ecx-0x61b3c2c5],ch
  43bf05:	sub    ch,BYTE PTR ss:[esi]
  43bf08:	ss push edi
  43bf0a:	ins    BYTE PTR es:[edi],dx
  43bf0b:	add    BYTE PTR [ebx+eax*1],bh
  43bf0e:	aas    
  43bf0f:	xchg   BYTE PTR gs:[eax+0x6b],dl
  43bf13:	gs push 0x776d5939
  43bf19:	inc    eax
  43bf1a:	js     0x43bf73
  43bf1c:	dec    edx
  43bf1d:	add    ecx,DWORD PTR [ebx+0x65]
  43bf20:	jns    0x43bf92
  43bf22:	push   0x33
  43bf24:	push   0x6e6c6419
  43bf29:	add    edx,DWORD PTR [eax]
  43bf2b:	add    BYTE PTR [ecx+0x5a],cl
  43bf2e:	cmp    esi,DWORD PTR [edx+0x77]
  43bf31:	fs je  0x43bf99
  43bf34:	ret    
  43bf35:	pop    esp
  43bf36:	imul   esi,DWORD PTR [ebx+ebp*4+0x5c],0x5b
  43bf3b:	or     al,BYTE PTR gs:[ebx]
  43bf3e:	ins    BYTE PTR es:[edi],dx
  43bf3f:	add    BYTE PTR [ecx],bl
  43bf41:	jb     0x43bf90
  43bf43:	outs   dx,BYTE PTR ds:[esi]
  43bf44:	add    BYTE PTR [eax],al
  43bf46:	add    BYTE PTR [ebx+0x71],al
  43bf49:	popa   
  43bf4a:	je     0x43bf8f
  43bf4c:	ins    BYTE PTR es:[edi],dx
  43bf4d:	ins    BYTE PTR es:[edi],dx
  43bf4e:	imul   esp,DWORD PTR [eax],0x1a000068
  43bf54:	or     edi,DWORD PTR [ebx]
  43bf56:	outs   dx,DWORD PTR ds:[esi]
  43bf57:	add    esi,DWORD PTR [ecx+0x61]
  43bf5a:	je     0x43bf3f
  43bf5c:	imul   ebp,DWORD PTR [ecx+ebp*2-0xd],0xfffffff9
  43bf61:	pop    esi
  43bf62:	dec    ebp
  43bf63:	push   ss
  43bf64:	adc    DWORD PTR [edi+0x6e],ebp
  43bf67:	sbb    ah,ah
  43bf69:	jnp    0x43bf6b
  43bf6b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bf6d:	cld    
  43bf6e:	cmp    al,0x4
  43bf70:	daa    
  43bf71:	addr16 popw es
  43bf74:	pop    es
  43bf75:	arpl   WORD PTR [edx+ebx*1-0x16],bp
  43bf79:	pop    edi
  43bf7a:	inc    ebx
  43bf7b:	sti    
  43bf7c:	out    dx,eax
  43bf7d:	cld    
  43bf7e:	pop    esp
  43bf7f:	repz mov al,0x65
  43bf82:	dec    ebp
  43bf83:	(bad)  
  43bf84:	mov    ebx,0xc7d46e4c
  43bf89:	jnp    0x43bfc9
  43bf8b:	iret   
  43bf8c:	into   
  43bf8d:	data16 gs into 
  43bf90:	mov    ds:0xb0f381fc,eax
  43bf95:	jb     0x43bffa
  43bf97:	rol    BYTE PTR [ebx-0x7e38b2a1],cl
  43bf9d:	pop    edi
  43bf9e:	pop    edi
  43bf9f:	(bad)  
  43bfa0:	lods   al,BYTE PTR ds:[esi]
  43bfa1:	dec    ax
  43bfa3:	mov    ah,0x63
  43bfa5:	pop    si
  43bfa7:	xchg   edx,eax
  43bfa8:	jnp    0x43bfa6
  43bfaa:	add    BYTE PTR [bx+si],al
  43bfad:	add    bl,dh
  43bfaf:	mov    al,0x65
  43bfb1:	push   esp
  43bfb2:	xchg   edx,eax
  43bfb3:	pusha  
  43bfb4:	push   0x4b
  43bfb6:	xchg   esi,eax
  43bfb7:	bound  edi,QWORD PTR [edi]
  43bfb9:	outs   dx,BYTE PTR ds:[esi]
  43bfba:	mov    ss,WORD PTR [edx+0x4]
  43bfbd:	or     bl,dh
  43bfbf:	xor    BYTE PTR [eax+0x4d],cl
  43bfc2:	stos   BYTE PTR es:[edi],al
  43bfc3:	xor    edi,DWORD PTR [esi]
  43bfc5:	outs   dx,BYTE PTR ds:[esi]
  43bfc6:	pop    esp
  43bfc7:	and    edx,DWORD PTR [ecx+0x74]
  43bfca:	popa   
  43bfcb:	aaa    
  43bfcc:	popaw  
  43bfce:	repz inc esi
  43bfd0:	add    ecx,DWORD PTR [ebp+0x5f]
  43bfd3:	and    ch,BYTE PTR [ebx+0x6a]
  43bfd6:	push   esp
  43bfd7:	cs jb  0x43c043
  43bfda:	push   esi
  43bfdb:	pop    es
  43bfdc:	sub    dl,BYTE PTR [ecx+0x34]
  43bfdf:	dec    ebx
  43bfe0:	aad    0x3
  43bfe2:	dec    edx
  43bfe3:	jae    0x43bff1
  43bfe5:	aaa    
  43bfe6:	fnsave [ebx+eax*1]
  43bfe9:	push   0x5fa0717
  43bfee:	cs ins BYTE PTR es:[edi],dx
  43bff0:	or     esp,DWORD PTR [ecx+0x36]
  43bff3:	pop    ebx
  43bff4:	and    ah,BYTE PTR [esi+0x15]
  43bff7:	ins    BYTE PTR es:[edi],dx
  43bff8:	push   es
  43bff9:	jo     0x43bfee
  43bffb:	push   es
  43bffc:	dec    ecx
  43bffd:	add    esi,DWORD PTR [edi]
  43bfff:	ins    BYTE PTR es:[edi],dx
  43c000:	retf   
  43c001:	pusha  
  43c002:	jmp    FWORD PTR [ebx-0x5e]
  43c005:	gs aad 0x6b
  43c008:	(bad)  
  43c009:	outs   dx,DWORD PTR ds:[esi]
  43c00a:	repz push es
  43c00c:	cs add al,0xb2
  43c00f:	imul   esi,DWORD PTR [ebx+0x3f],0xffffffd0
  43c016:	pop    esp
  43c017:	shl    BYTE PTR [esi-0x30],0x49
  43c01b:	enter  0xd673,0x6
  43c01f:	rol    BYTE PTR [ebx],cl
  43c021:	(bad)  
  43c022:	pop    eax
  43c023:	test   BYTE PTR [edi+edi*4+0x6b],ah
  43c027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c028:	push   0xffffff98
  43c02a:	push   esi
  43c02b:	mov    BYTE PTR [edi-0x74],ch
  43c02e:	push   0x6fdd6093
  43c033:	jae    0x43c09d
  43c035:	mov    ah,0x56
  43c037:	out    0x3,eax
  43c039:	ret    
  43c03a:	push   es
  43c03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c03c:	jne    0x43bfce
  43c03e:	addr16 pop ebx
  43c040:	pop    edi
  43c041:	mov    esi,0x94744c75
  43c046:	pop    edx
  43c047:	inc    eax
  43c048:	pop    di
  43c04a:	push   0x23
  43c04c:	inc    ebp
  43c04d:	repz push es
  43c04f:	mov    BYTE PTR [edi+esi*1],0x6a
  43c053:	dec    ebx
  43c054:	pop    edi
  43c055:	pop    edi
  43c056:	push   0x0
  43c058:	sub    eax,0x40000736
  43c05d:	in     eax,dx
  43c05e:	push   esp
  43c05f:	arpl   WORD PTR [edx],bx
  43c061:	inc    ebx
  43c062:	outs   dx,BYTE PTR ds:[esi]
  43c063:	outs   dx,BYTE PTR ds:[esi]
  43c064:	add    al,0x33
  43c066:	and    al,BYTE PTR [eax]
  43c068:	sbb    ebp,esi
  43c06a:	push   ecx
  43c06b:	pop    edi
  43c06c:	pop    ss
  43c06d:	inc    esp
  43c06e:	dec    ebx
  43c06f:	cmp    eax,0xfda6f0e9
  43c074:	sbb    DWORD PTR [ebx+ebx*2],esi
  43c077:	dec    esi
  43c078:	or     al,0x0
  43c07a:	add    BYTE PTR [eax],al
  43c07c:	push   ss
  43c07d:	pop    ebx
  43c07e:	dec    esi
  43c07f:	push   es
  43c080:	sbb    DWORD PTR [edi],eax
  43c082:	add    ah,bl
  43c084:	icebp  
  43c085:	inc    ebp
  43c086:	shl    BYTE PTR fs:[edx],1
  43c089:	jae    0x43c0fe
  43c08b:	fcmovu st,st(0)
  43c08d:	push   es
  43c08e:	add    BYTE PTR [eax-0x429cae13],al
  43c094:	ret    0x636b
  43c097:	mov    dh,0xe0
  43c099:	ins    DWORD PTR es:[edi],dx
  43c09a:	outs   dx,BYTE PTR ds:[esi]
  43c09b:	mov    ebp,0xa46174bb
  43c0a0:	enter  0x6,0xdb
  43c0a4:	lock and DWORD PTR [esi-0x7c],ebp
  43c0a8:	rcr    DWORD PTR [edx+0x63],1
  43c0ab:	lods   eax,DWORD PTR ds:[esi]
  43c0ac:	mov    bh,0x35
  43c0ae:	add    dl,bh
  43c0b0:	lock and al,0x67
  43c0b3:	jge    0x43c06b
  43c0b5:	jb     0x43c12b
  43c0b7:	jmp    0xae428dac
  43c0bc:	lods   eax,DWORD PTR ds:[esi]
  43c0bd:	pop    edx
  43c0be:	inc    esp
  43c0bf:	mov    al,ds:0x5a746bae
  43c0c4:	not    DWORD PTR [edi]
  43c0c6:	add    BYTE PTR [edx],ch
  43c0c8:	jge    0x43c131
  43c0ca:	pop    edi
  43c0cb:	pop    ebp
  43c0cc:	dec    esp
  43c0cd:	dec    ebx
  43c0ce:	inc    edi
  43c0cf:	sub    edi,DWORD PTR [esi]
  43c0d1:	push   0x701e005d
  43c0d6:	outs   dx,BYTE PTR ds:[si]
  43c0d8:	retf   0x3f07
  43c0db:	inc    esp
  43c0dc:	adc    ebx,DWORD PTR [edx]
  43c0de:	sub    ch,BYTE PTR [esi]
  43c0e0:	add    BYTE PTR [eax],al
  43c0e2:	add    BYTE PTR [esi],ch
  43c0e4:	outs   dx,DWORD PTR ds:[esi]
  43c0e5:	ins    BYTE PTR es:[edi],dx
  43c0e6:	add    BYTE PTR [ebx],al
  43c0e8:	or     ecx,DWORD PTR [edi+0x53]
  43c0eb:	or     edi,DWORD PTR [edx]
  43c0ed:	pop    ebp
  43c0ee:	outs   dx,BYTE PTR ds:[esi]
  43c0ef:	dec    BYTE PTR [edx]
  43c0f1:	inc    esp
  43c0f2:	add    ch,bl
  43c0f4:	cmp    DWORD PTR [ecx],edi
  43c0f6:	push   edx
  43c0f7:	out    dx,eax
  43c0f8:	imul   ebp,DWORD PTR [esi+0x0],0x725e0822
  43c0ff:	inc    DWORD PTR [ebx+0x59]
  43c102:	fs out dx,al
  43c104:	pop    esp
  43c105:	popa   
  43c106:	outs   dx,BYTE PTR ds:[esi]
  43c107:	lods   al,BYTE PTR ds:[esi]
  43c108:	outs   dx,BYTE PTR ds:[esi]
  43c109:	add    BYTE PTR [eax],al
  43c10b:	add    ecx,DWORD PTR [eax]
  43c10d:	pop    edi
  43c10e:	gs dec esi
  43c110:	push   0x70486464
  43c115:	data16 inc bp
  43c118:	pop    es
  43c119:	push   es
  43c11a:	add    BYTE PTR [ebp+0x3a],bh
  43c11d:	cmp    DWORD PTR [ecx+0x3e],eax
  43c120:	inc    ebx
  43c121:	push   0x65
  43c123:	mov    DWORD PTR [edx+0x54],ebx
  43c126:	outs   dx,DWORD PTR ds:[esi]
  43c127:	jns    0x43c19c
  43c129:	push   0x69
  43c12b:	cmp    WORD PTR fs:[eax],ax
  43c12f:	cmp    al,BYTE PTR [edi]
  43c131:	dec    edi
  43c132:	push   ebx
  43c133:	pop    ebx
  43c134:	dec    edx
  43c135:	push   0x65
  43c137:	imul   esi,DWORD PTR [ebx+0x5d],0x45
  43c13b:	pushf  
  43c13c:	inc    esp
  43c13d:	data16 je 0x43c15a
  43c140:	pop    es
  43c141:	and    al,BYTE PTR [eax]
  43c143:	pop    ebp
  43c144:	cmp    bh,BYTE PTR [ecx]
  43c146:	inc    ebp
  43c147:	add    BYTE PTR [eax],al
  43c149:	add    BYTE PTR [ebp+eiz*2+0x65b97466],bl
  43c150:	ins    BYTE PTR es:[edi],dx
  43c151:	gs repz dec esp
  43c154:	jo     0x43c156
  43c156:	repz or BYTE PTR [ecx+edx*2],al
  43c15a:	inc    eax
  43c15b:	das    
  43c15c:	aas    
  43c15d:	push   0x5e
  43c15f:	push   ebx
  43c160:	inc    edx
  43c161:	arpl   WORD PTR [edi+0x21],ax
  43c164:	popa   
  43c165:	outs   dx,BYTE PTR ds:[esi]
  43c166:	pop    eax
  43c167:	sub    ebp,DWORD PTR [edx+0x63]
  43c16a:	dec    ebp
  43c16b:	add    al,0x6d
  43c16d:	add    bl,dh
  43c16f:	mov    ecx,0x2f4050fc
  43c174:	dec    ebx
  43c175:	imul   edx,DWORD PTR [eax],0xf30067fc
  43c17b:	in     al,0xfc
  43c17d:	push   eax
  43c17e:	inc    eax
  43c17f:	das    
  43c180:	cmp    eax,0x5fdd1c6c
  43c185:	inc    ebx
  43c186:	std    
  43c187:	or     ah,BYTE PTR [edx+0x74]
  43c18a:	repz mov al,ds:0xfd142e4d
  43c190:	sub    eax,0x60cbd72a
  43c195:	add    bl,dh
  43c197:	adc    al,0x4
  43c199:	cmp    eax,0x746cc6e1
  43c19e:	mov    esi,0xdc6e6cd1
  43c1a3:	mov    ds:0xabbf5d5f,eax
  43c1a8:	arpl   WORD PTR [edx+edx*8-0x11],si
  43c1ac:	cld    
  43c1ad:	adc    BYTE PTR [eax],al
  43c1af:	add    BYTE PTR [eax],al
  43c1b1:	repnz lahf 
  43c1b3:	cmp    bl,BYTE PTR [eax-0x46]
  43c1b6:	mov    ch,BYTE PTR [ecx+ebp*2-0x5f]
  43c1ba:	jnp    0x43c1f9
  43c1bc:	arpl   WORD PTR [ecx-0x7b8bb19d],sp
  43c1c2:	pop    ebp
  43c1c3:	pusha  
  43c1c4:	add    bl,dh
  43c1c6:	into   
  43c1c7:	cld    
  43c1c8:	cmp    al,0x8e
  43c1ca:	pop    ebp
  43c1cb:	imul   eax,DWORD PTR [esi+edx*4+0x6],0x6b7f6153
  43c1d3:	es popa 
  43c1d5:	pop    ebp
  43c1d6:	pop    ebx
  43c1d7:	inc    eax
  43c1d8:	pop    esi
  43c1d9:	dec    esp
  43c1da:	dec    ax
  43c1dc:	jo     0x43c22e
  43c1de:	dec    ecx
  43c1df:	xor    eax,0x33364867
  43c1e4:	addr16 pop ebp
  43c1e6:	ins    BYTE PTR es:[edi],dx
  43c1e7:	out    0x3,eax
  43c1e9:	sbb    al,0x7
  43c1eb:	es popa 
  43c1ed:	dec    ebp
  43c1ee:	pop    ebx
  43c1ef:	xor    dh,BYTE PTR [eax+edx*2+0x71]
  43c1f3:	ss jge 0x43c214
  43c1f6:	pop    ebx
  43c1f7:	or     al,0x69
  43c1f9:	ss pop ebx
  43c1fb:	cli    
  43c1fc:	jno    0x43c20e
  43c1fe:	cmp    ah,bh
  43c200:	add    esp,ebp
  43c202:	push   es
  43c203:	es popa 
  43c205:	sbb    eax,0x1a68265b
  43c20a:	push   esi
  43c20b:	add    al,0x53
  43c20d:	pop    es
  43c20e:	jb     0x43c1e5
  43c210:	pusha  
  43c211:	repz push es
  43c213:	or     eax,DWORD PTR [eax+eax*1]
  43c216:	add    BYTE PTR [eax],al
  43c218:	cs ins BYTE PTR es:[edi],dx
  43c21a:	aad    0x6f
  43c21c:	mov    al,0x70
  43c21e:	aam    0x68
  43c220:	push   ds
  43c221:	ins    BYTE PTR es:[edi],dx
  43c222:	mov    ch,0x6f
  43c224:	int3   
  43c225:	push   0x5aac62d0
  43c22a:	int3   
  43c22b:	jb     0x43c1d9
  43c22d:	jo     0x43c1c5
  43c22f:	outs   dx,DWORD PTR ds:[esi]
  43c230:	retf   0x8c54
  43c233:	add    edx,DWORD PTR [eax]
  43c235:	pop    es
  43c236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c237:	pusha  
  43c238:	popf   
  43c239:	pop    edx
  43c23a:	stos   DWORD PTR es:[edi],eax
  43c23b:	jo     0x43c1e0
  43c23d:	jb     0x43c1bf
  43c23f:	bound  edi,QWORD PTR [edx+ebx*2+0x5490428c]
  43c246:	jae    0x43c2b4
  43c248:	xchg   ecx,eax
  43c249:	outs   dx,DWORD PTR ds:[esi]
  43c24a:	add    BYTE PTR [edx-0x559ca571],cl
  43c250:	xchg   ebp,eax
  43c251:	ins    BYTE PTR es:[edi],dx
  43c252:	je     0x43c2a0
  43c254:	ja     0x43c2b0
  43c256:	add    bh,dh
  43c258:	icebp  
  43c259:	ss inc edx
  43c25b:	xor    DWORD PTR [edi+ebx*2],esp
  43c25e:	jo     0x43c29e
  43c260:	popa   
  43c261:	pop    ebx
  43c262:	cmp    eax,0x4d5b614c
  43c267:	xor    eax,0x2c637156
  43c26c:	inc    edi
  43c26d:	pop    es
  43c26e:	add    BYTE PTR [edx],ch
  43c270:	and    DWORD PTR [eax],edi
  43c272:	push   eax
  43c273:	cmp    eax,0x52a3102
  43c278:	sbb    esi,DWORD PTR [ebx+0x0]
  43c27b:	xor    eax,0xef000000
  43c280:	dec    esi
  43c281:	je     0x43c298
  43c283:	daa    
  43c284:	push   edx
  43c285:	arpl   WORD PTR [edi],dx
  43c287:	adc    edx,DWORD PTR [ecx+0x63]
  43c28a:	clc    
  43c28b:	sbb    eax,0xc5fd6d64
  43c290:	pop    esi
  43c291:	aas    
  43c292:	jmp    0xb143fa87
  43c297:	add    al,0x5b
  43c299:	jo     0x43c253
  43c29b:	frstor [ebx+0x6e]
  43c29e:	sar    BYTE PTR [ecx-0x4e419d94],1
  43c2a4:	push   es
  43c2a5:	add    BYTE PTR [eax+esi*8-0x3f4a8bb2],ah
  43c2ac:	push   ecx
  43c2ad:	arpl   di,ax
  43c2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c2b0:	push   eax
  43c2b1:	arpl   WORD PTR [eax-0x62929c33],di
  43c2b7:	cmc    
  43c2b8:	pop    esi
  43c2b9:	push   ecx
  43c2ba:	jmp    0xa04374af
  43c2bf:	mov    ds,WORD PTR [edx+0x63]
  43c2c2:	fwait
  43c2c3:	xchg   esi,eax
  43c2c4:	arpl   WORD PTR [eax+eax*1+0x79],si
  43c2c8:	inc    ecx
  43c2c9:	je     0x43c31e
  43c2cb:	xchg   BYTE PTR [esp+esi*2+0x75],ah
  43c2cf:	mov    DWORD PTR [esi+0x59],eax
  43c2d2:	ins    BYTE PTR es:[edi],dx
  43c2d3:	jle    0x43c33a
  43c2d5:	pop    ecx
  43c2d6:	arpl   WORD PTR [ecx+0x71000043],sp
  43c2dc:	add    eax,DWORD PTR [ecx+0x6e]
  43c2df:	inc    esi
  43c2e0:	inc    eax
  43c2e1:	push   0x6e
  43c2e3:	add    BYTE PTR [eax],al
  43c2e5:	add    BYTE PTR [edi],dh
  43c2e7:	push   edi
  43c2e8:	dec    ecx
  43c2e9:	jne    0x43c312
  43c2eb:	push   ebp
  43c2ec:	jno    0x43c332
  43c2ee:	cmp    edx,DWORD PTR [edi+0x59]
  43c2f1:	inc    ecx
  43c2f2:	add    al,0x64
  43c2f4:	popa   
  43c2f5:	ins    BYTE PTR es:[edi],dx
  43c2f6:	sub    esp,DWORD PTR [ebp+0x6c]
  43c2f9:	gs retf 0xa003
  43c2fd:	add    bl,ah
  43c2ff:	push   0x69086574
  43c304:	pop    ebp
  43c305:	je     0x43c2df
  43c307:	aas    
  43c308:	pop    ecx
  43c309:	les    ebp,FWORD PTR fs:[ebx+0x6c]
  43c30d:	xlat   BYTE PTR gs:[ebx]
  43c30f:	bound  edi,QWORD PTR [ecx]
  43c311:	add    BYTE PTR ds:0x866e4104,bl
  43c317:	inc    eax
  43c318:	push   0x6e
  43c31a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c31b:	outs   dx,DWORD PTR ds:[esi]
  43c31c:	dec    edx
  43c31d:	cmp    edi,DWORD PTR gs:[edi]
  43c320:	imul   ebp,DWORD PTR ds:[esi],0xde000040
  43c327:	add    eax,DWORD PTR [ecx+0x6e]
  43c32a:	xchg   esi,eax
  43c32b:	inc    eax
  43c32c:	push   0x6e
  43c32e:	aaa    
  43c32f:	outs   dx,DWORD PTR ds:[esi]
  43c330:	dec    ebx
  43c331:	xchg   BYTE PTR gs:[edx+0x70],cl
  43c335:	je     0x43c36a
  43c337:	push   0x66
  43c339:	inc    ecx
  43c33a:	dec    edx
  43c33b:	add    edx,DWORD PTR [esi+0x0]
  43c33e:	bound  ebp,QWORD PTR [edi+0x74]
  43c341:	jo     0x43c336
  43c343:	pushf  
  43c344:	pop    ecx
  43c345:	push   0xffffff97
  43c347:	fwait
  43c348:	pop    ecx
  43c349:	outs   dx,DWORD PTR ds:[esi]
  43c34a:	add    BYTE PTR [eax],al
  43c34c:	add    BYTE PTR [esi-0x5b8b906e],bl
  43c352:	in     eax,dx
  43c353:	cld    
  43c354:	mov    bl,0xf3
  43c356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c357:	bound  esi,QWORD PTR [esi+edx*4+0x5b]
  43c35b:	arpl   WORD PTR [ebx+0x7f],sp
  43c35e:	sbb    al,0x67
  43c360:	je     0x43c3a2
  43c362:	xor    al,0x63
  43c364:	je     0x43c3c4
  43c366:	inc    ecx
  43c367:	inc    ecx
  43c368:	pop    edi
  43c369:	dec    edi
  43c36a:	sbb    al,0x62
  43c36c:	pop    edi
  43c36d:	push   eax
  43c36e:	cmp    DWORD PTR [ebp+0x0],edx
  43c371:	repz sub BYTE PTR [eax+ecx*2],al
  43c375:	aas    
  43c376:	sbb    al,0x74
  43c378:	dec    ebp
  43c379:	push   esi
  43c37a:	push   ds
  43c37b:	push   0x76ff4e4e
  43c380:	arpl   WORD PTR [eax],sp
  43c382:	hlt    
  43c383:	inc    edx
  43c384:	add    bl,dh
  43c386:	or     BYTE PTR [edi+eax*2],al
  43c389:	or     eax,0x56e66f4
  43c38e:	or     edi,DWORD PTR [eax+0x3d]
  43c391:	pop    ds
  43c392:	or     eax,0xf3b6371
  43c397:	pop    esi
  43c398:	lsl    eax,WORD PTR fs:[edi+ebp*2]
  43c39d:	repz xchg esi,eax
  43c39f:	pop    esi
  43c3a0:	je     0x43c378
  43c3a2:	rcr    DWORD PTR [esi+0x63],0xdf
  43c3a6:	mov    al,0x5d
  43c3a8:	push   0xffffffcd
  43c3aa:	ret    0x7461
  43c3ad:	mov    dl,0xef
  43c3af:	cld    
  43c3b0:	cdq    
  43c3b1:	add    BYTE PTR [eax],al
  43c3b3:	add    bl,dh
  43c3b5:	xchg   esi,eax
  43c3b6:	pop    esi
  43c3b7:	je     0x43c387
  43c3b9:	mov    eax,ds:0x7ec7635e
  43c3be:	ja     0x43c423
  43c3c0:	rol    DWORD PTR [esi],0xa0
  43c3c3:	inc    edx
  43c3c4:	mov    ds:0x99629052,eax
  43c3c9:	xor    eax,0x6c203e7
  43c3ce:	lahf   
  43c3cf:	ja     0x43c370
  43c3d1:	push   esi
  43c3d2:	mov    dl,0x73
  43c3d4:	nop
  43c3d5:	ins    BYTE PTR es:[edi],dx
  43c3d6:	xchg   ebp,eax
  43c3d7:	push   0x768c5394
  43c3dc:	xchg   DWORD PTR [edi-0x19],eax
  43c3df:	add    esp,DWORD PTR [ebp+0x67782f06]
  43c3e5:	push   edi
  43c3e6:	sub    BYTE PTR [eax+0x4f],ch
  43c3e9:	cmp    DWORD PTR [ebp+esi*2+0x60],ecx
  43c3ed:	fs push esi
  43c3ef:	js     0x43c41c
  43c3f1:	fs dec eax
  43c3f3:	push   0x45365950
  43c3f8:	repz push es
  43c3fa:	pop    edx
  43c3fb:	add    esi,DWORD PTR [ebp*2+0x6d456933]
  43c402:	or     al,0x78
  43c404:	cmp    dl,BYTE PTR [edi+0x4]
  43c407:	(bad)  
  43c408:	in     al,0x6
  43c40a:	je     0x43c40f
  43c40c:	xor    al,0x6d
  43c40e:	adc    ebp,DWORD PTR [ecx+0x5]
  43c411:	ins    DWORD PTR es:[edi],dx
  43c412:	or     al,0x78
  43c414:	cmp    al,0x54
  43c416:	add    al,0x76
  43c418:	add    BYTE PTR [eax],al
  43c41a:	add    ah,bh
  43c41c:	dec    ebp
  43c41d:	div    DWORD PTR [edi+0x14]
  43c420:	outs   dx,BYTE PTR ds:[esi]
  43c421:	stc    
  43c422:	inc    esp
  43c423:	repz push es
  43c425:	(bad)  
  43c426:	add    esi,DWORD PTR [esp+ebp*2+0x6cd568d3]
  43c42d:	int3   
  43c42e:	ja     0x43c44e
  43c430:	pop    ecx
  43c431:	enter  0xce66,0x33
  43c435:	mov    ch,0x5f
  43c437:	or     al,0x7
  43c439:	add    DWORD PTR [ebx],0xffffffac
  43c43c:	ins    BYTE PTR es:[edi],dx
  43c43d:	add    BYTE PTR [ebp-0x3b959335],bh
  43c443:	mov    esp,0xb59d634b
  43c448:	outs   dx,DWORD PTR ds:[esi]
  43c449:	imul   edx,DWORD PTR [edx-0x16c09639],0xa60042f0
  43c453:	mov    edx,DWORD PTR [edx+0x53]
  43c456:	jnp    0x43c404
  43c458:	sbb    ebx,DWORD PTR [edi-0x76]
  43c45b:	test   al,0x69
  43c45d:	inc    ebx
  43c45e:	xchg   DWORD PTR [esp+ebp*2+0x6892a077],eax
  43c465:	imul   edi,DWORD PTR [esi],0x310049f7
  43c46b:	imul   edx,DWORD PTR [ebx+0x70],0x28
  43c46f:	dec    ebx
  43c470:	arpl   WORD PTR [esi+0x44],cx
  43c473:	pusha  
  43c474:	pop    eax
  43c475:	arpl   WORD PTR [edx],di
  43c477:	dec    ebx
  43c478:	dec    edi
  43c479:	arpl   WORD PTR [eax+0x5b],cx
  43c47c:	push   0x3a6e
  43c481:	add    BYTE PTR [edx],bl
  43c483:	pop    es
  43c484:	add    BYTE PTR [esi],dl
  43c486:	clc    
  43c487:	push   eax
  43c488:	inc    edi
  43c489:	aaa    
  43c48a:	xor    al,0x33
  43c48c:	sub    al,BYTE PTR ds:0x26006b13
  43c492:	xor    ecx,DWORD PTR [eax+0x3f]
  43c495:	xor    al,0x3b
  43c497:	sub    ch,BYTE PTR [esi]
  43c499:	xlat   BYTE PTR ds:[ebx]
  43c49a:	adc    al,0x6b
  43c49c:	ins    BYTE PTR es:[edi],dx
  43c49d:	jmp    0x2743a292
  43c4a2:	adc    al,0x53
  43c4a4:	push   ebx
  43c4a5:	cli    
  43c4a6:	or     eax,0xe4cc416d
  43c4ab:	inc    ebx
  43c4ac:	push   0xffffffc7
  43c4ae:	rol    DWORD PTR [esi],cl
  43c4b0:	add    ah,cl
  43c4b2:	lock push eax
  43c4b4:	arpl   bp,dx
  43c4b6:	mov    cl,0x56
  43c4b8:	add    BYTE PTR [bx+si+0x5e55],bl
  43c4bd:	data16 das 
  43c4bf:	push   edx
  43c4c0:	ds jb  0x43c4f2
  43c4c3:	add    BYTE PTR gs:[eax],al
  43c4c6:	pop    es
  43c4c7:	add    eax,DWORD PTR [esi+0x65]
  43c4ca:	mov    ?,WORD PTR ds:0x4588656b
  43c4d0:	data16 jne 0x43c54a
  43c4d3:	or     BYTE PTR [esi+0x45],al
  43c4d6:	pop    esi
  43c4d7:	dec    ecx
  43c4d8:	push   eax
  43c4d9:	dec    ecx
  43c4da:	dec    ecx
  43c4db:	adc    ah,BYTE PTR [esi]
  43c4dd:	fs jbe 0x43c51c
  43c4e0:	add    BYTE PTR [eax],al
  43c4e2:	inc    esp
  43c4e3:	or     BYTE PTR [edi],bh
  43c4e5:	add    BYTE PTR gs:[eax],al
  43c4e8:	add    BYTE PTR [esi+0x48],bh
  43c4eb:	fs popa 
  43c4ed:	dec    edx
  43c4ee:	pop    edi
  43c4ef:	pop    ebp
  43c4f0:	jb     0x43c53b
  43c4f2:	dec    eax
  43c4f3:	fs cmp BYTE PTR fs:[ebx+ebp*2+0x73],ah
  43c4f9:	das    
  43c4fa:	push   edx
  43c4fb:	add    BYTE PTR [eax],al
  43c4fd:	add    esi,DWORD PTR [ebx]
  43c4ff:	dec    eax
  43c500:	dec    esp
  43c501:	jmp    0x4c4e:0xf4495047
  43c508:	dec    esp
  43c509:	retf   0x4e07
  43c50c:	add    DWORD PTR ds:0xf4726a64,esi
  43c512:	add    BYTE PTR gs:[eax],al
  43c515:	jo     0x43c51a
  43c517:	gs gs xchg edi,eax
  43c51a:	bound  esi,QWORD PTR [eax+0x79]
  43c51d:	call   0x6563:0xf704e607
  43c524:	jae    0x43c515
  43c526:	pop    esi
  43c527:	add    BYTE PTR [eax],al
  43c529:	sahf   
  43c52a:	add    al,0x6b
  43c52c:	je     0x43c576
  43c52e:	bound  esp,QWORD PTR [ebp+0x70]
  43c531:	pop    edx
  43c532:	pop    es
  43c533:	loope  0x43c539
  43c535:	repz ret 0x6b61
  43c539:	rcr    BYTE PTR [edx-0x490cff94],1
  43c53f:	add    BYTE PTR [ecx-0x44],bl
  43c542:	xchg   ecx,eax
  43c543:	pop    edi
  43c544:	repz and eax,DWORD PTR [si]
  43c548:	pop    ecx
  43c549:	mov    ebp,0x715ea0
  43c54e:	add    BYTE PTR [eax],al
  43c550:	mov    ds:0x9f6a557f,eax
  43c555:	cmp    esp,0xffffffc7
  43c558:	lock xchg esp,eax
  43c55a:	jbe    0x43c5c9
  43c55c:	test   DWORD PTR [ebp+0x72],edi
  43c55f:	addr16 popf 
  43c561:	pop    ecx
  43c562:	addr16 add bl,dh
  43c565:	cmp    eax,DWORD PTR [ecx+ebx*2]
  43c568:	xchg   BYTE PTR [ecx-0x12839690],al
  43c56e:	cld    
  43c56f:	jmp    0x43c568
  43c571:	xor    ah,BYTE PTR [edi+0x6b]
  43c574:	push   esi
  43c575:	dec    ecx
  43c576:	jb     0x43c5db
  43c578:	xrelease mov DWORD PTR [edi],0x5d1b4e6b
  43c57f:	push   0x9bfcf041
  43c584:	lock clc 
  43c586:	jbe    0x43c5f4
  43c588:	inc    edi
  43c589:	inc    ecx
  43c58a:	arpl   WORD PTR [eax],ax
  43c58c:	rep stos DWORD PTR es:[edi],eax
  43c58e:	std    
  43c58f:	pop    eax
  43c590:	and    edi,ebx
  43c592:	ins    DWORD PTR es:[edi],dx
  43c593:	arpl   WORD PTR [eax],dx
  43c595:	punpcklbw mm5,DWORD PTR [ebx+esi*8-0x8]
  43c59a:	pop    es
  43c59b:	pop    edi
  43c59c:	adc    ebp,edi
  43c59e:	add    ebp,DWORD PTR [ebx+0x0]
  43c5a1:	ficomp DWORD PTR [ebp+0x6e]
  43c5a4:	dec    ecx
  43c5a6:	pusha  
  43c5a7:	ins    BYTE PTR es:[edi],dx
  43c5a8:	(bad)  
  43c5aa:	cld    
  43c5ab:	mov    eax,ds:0x636e01ef
  43c5b0:	(bad)  
  43c5b1:	push   es
  43c5b2:	out    0x3,eax
  43c5b4:	add    BYTE PTR [eax],al
  43c5b6:	add    BYTE PTR [ecx+0x3],cl
  43c5b9:	int3   
  43c5ba:	fs iret 
  43c5bc:	push   0xffffffc2
  43c5be:	(bad)
  43c5c3:	mov    edx,0xc073bb53
  43c5c8:	push   edx
  43c5c9:	mov    ds:0xca539d68,eax
  43c5ce:	push   edx
  43c5cf:	mov    edi,0x925dc054
  43c5d4:	inc    edi
  43c5d5:	out    0x3,eax
  43c5d7:	or     eax,DWORD PTR [ebx]
  43c5d9:	mov    ch,0x77
  43c5db:	(bad)  
  43c5dc:	xor    eax,DWORD PTR [ecx-0x7c97738a]
  43c5e2:	add    esi,DWORD PTR [ebx]
  43c5e4:	or     BYTE PTR [edx+0x74457f68],ch
  43c5ea:	jno    0x43c579
  43c5ec:	arpl   WORD PTR [ecx+0x7a54a377],ax
  43c5f2:	bound  edx,QWORD PTR [eax+0x56]
  43c5f5:	push   esi
  43c5f6:	add    al,0xb6
  43c5f8:	add    dh,BYTE PTR [esi+ebx*2]
  43c5fb:	dec    ebx
  43c5fc:	push   0x64476841
  43c601:	inc    ebx
  43c602:	dec    ecx
  43c603:	dec    ebx
  43c604:	dec    sp
  43c606:	je     0x43c647
  43c608:	jo     0x43c654
  43c60a:	pop    esi
  43c60b:	xor    DWORD PTR [eax+0x43],esi
  43c60e:	js     0x43c660
  43c610:	push   ebp
  43c611:	out    0x3,eax
  43c613:	push   eax
  43c614:	add    dh,BYTE PTR [esi]
  43c616:	imul   ebx,DWORD PTR [edi],0x5c0934
  43c61c:	add    BYTE PTR [eax],al
  43c61e:	cmp    al,0x69
  43c620:	or     esp,DWORD PTR [eax+0x10]
  43c623:	arpl   WORD PTR [esp+ebp*2],sp
  43c626:	cs div DWORD PTR fs:[edi+0xc]
  43c62b:	push   0x9
  43c62d:	inc    esi
  43c62e:	adc    al,0x6b
  43c630:	add    ch,bh
  43c632:	or     ebp,DWORD PTR [ecx+0x0]
  43c635:	adc    esi,esi
  43c637:	aas    
  43c638:	arpl   cx,sp
  43c63a:	shl    DWORD PTR [ebp+0x70],1
  43c63d:	aad    0xad
  43c63f:	outs   dx,BYTE PTR ds:[esi]
  43c640:	pop    edi
  43c641:	(bad)  
  43c642:	int3   
  43c643:	push   0x63
  43c645:	fild   DWORD PTR [ecx]
  43c647:	pop    es
  43c648:	add    cl,ch
  43c64a:	lock push es
  43c64c:	add    cl,ch
  43c64e:	lock push es
  43c650:	add    cl,ch
  43c652:	lock push es
  43c654:	add    cl,ch
  43c656:	lock push es
  43c658:	add    cl,ch
  43c65a:	lock push es
  43c65c:	add    cl,ch
  43c65e:	lock push es
  43c660:	add    cl,ch
  43c662:	lock push es
  43c664:	add    cl,ch
  43c666:	lock push es
  43c668:	add    cl,ch
  43c66a:	lock push es
  43c66c:	add    cl,ch
  43c66e:	lock push es
  43c670:	add    cl,ch
  43c672:	lock push es
  43c674:	add    cl,ch
  43c676:	lock push es
  43c678:	add    cl,ch
  43c67a:	lock push es
  43c67c:	add    cl,ch
  43c67e:	lock push es
  43c680:	add    cl,ch
  43c682:	add    BYTE PTR [eax],al
  43c684:	add    al,dh
  43c686:	push   es
  43c687:	add    cl,ch
  43c689:	lock push es
  43c68b:	add    cl,ch
  43c68d:	lock push es
  43c68f:	add    cl,ch
  43c691:	lock push es
  43c693:	add    cl,ch
  43c695:	lock push es
  43c697:	add    cl,ch
  43c699:	lock push es
  43c69b:	add    cl,ch
  43c69d:	lock push es
  43c69f:	add    cl,ch
  43c6a1:	lock push es
  43c6a3:	add    cl,ch
  43c6a5:	lock push es
  43c6a7:	add    cl,ch
  43c6a9:	lock push es
  43c6ab:	add    BYTE PTR [eax],al
  43c6ad:	call   0x4:0x8a000004
  43c6b4:	add    BYTE PTR [edx+0x5a000004],cl
  43c6ba:	add    al,0x0
  43c6bc:	add    BYTE PTR [edx+0x4],bl
  43c6bf:	add    BYTE PTR [eax],al
  43c6c1:	dec    edx
  43c6c2:	add    al,0x0
  43c6c4:	add    BYTE PTR [edx+0x4],cl
  43c6c7:	add    BYTE PTR [eax],al
  43c6c9:	pop    edx
  43c6ca:	add    al,0x0
  43c6cc:	add    BYTE PTR [edx+0x4],bl
  43c6cf:	add    BYTE PTR [eax],al
  43c6d1:	dec    edx
  43c6d2:	add    al,0x0
  43c6d4:	add    BYTE PTR [edx+0x4],cl
  43c6d7:	add    BYTE PTR [eax],al
  43c6d9:	sbb    al,BYTE PTR [eax+eax*1]
  43c6dc:	add    BYTE PTR [edx],bl
  43c6de:	add    al,0x0
  43c6e0:	add    BYTE PTR [edx],cl
  43c6e2:	add    al,0x0
  43c6e4:	add    BYTE PTR [edx],cl
  43c6e6:	add    al,0x0
  43c6e8:	add    BYTE PTR [eax],al
  43c6ea:	add    BYTE PTR [eax],al
  43c6ec:	sbb    al,BYTE PTR [eax+eax*1]
  43c6ef:	add    BYTE PTR [edx],bl
  43c6f1:	add    al,0x0
  43c6f3:	add    BYTE PTR [edx],cl
  43c6f5:	add    al,0x0
  43c6f7:	add    BYTE PTR [edx],cl
  43c6f9:	add    al,0x0
  43c6fb:	add    dl,bl
  43c6fd:	add    eax,DWORD PTR [eax]
  43c6ff:	add    dl,bl
  43c701:	add    eax,DWORD PTR [eax]
  43c703:	add    dl,cl
  43c705:	add    eax,DWORD PTR [eax]
  43c707:	add    dl,cl
  43c709:	add    eax,DWORD PTR [eax]
  43c70b:	add    dl,bl
  43c70d:	add    eax,DWORD PTR [eax]
  43c70f:	add    dl,bl
  43c711:	add    eax,DWORD PTR [eax]
  43c713:	add    dl,cl
  43c715:	add    eax,DWORD PTR [eax]
  43c717:	add    dl,cl
  43c719:	add    eax,DWORD PTR [eax]
  43c71b:	add    BYTE PTR [edx-0x65fffffd],bl
  43c721:	add    eax,DWORD PTR [eax]
  43c723:	add    BYTE PTR [edx-0xcfffffd],cl
  43c729:	in     eax,dx
  43c72a:	cld    
  43c72b:	push   ebx
  43c72d:	in     eax,dx
  43c72e:	cld    
  43c72f:	push   ebx
  43c731:	in     eax,dx
  43c732:	cld    
  43c733:	push   ebx
  43c735:	in     eax,dx
  43c736:	cld    
  43c737:	push   ebx
  43c739:	in     eax,dx
  43c73a:	cld    
  43c73b:	push   ebx
  43c73d:	in     eax,dx
  43c73e:	cld    
  43c73f:	push   ebx
  43c741:	in     eax,dx
  43c742:	cld    
  43c743:	push   ebx
  43c745:	in     eax,dx
  43c746:	cld    
  43c747:	push   ebx
  43c749:	in     eax,dx
  43c74a:	cld    
  43c74b:	push   ebx
  43c74d:	in     eax,dx
  43c74e:	cld    
  43c74f:	inc    DWORD PTR [eax]
  43c751:	add    BYTE PTR [eax],al
  43c753:	repz in eax,dx
  43c755:	cld    
  43c756:	push   ebx
  43c758:	in     eax,dx
  43c759:	cld    
  43c75a:	push   ebx
  43c75c:	in     eax,dx
  43c75d:	cld    
  43c75e:	push   ebx
  43c760:	in     eax,dx
  43c761:	cld    
  43c762:	push   ebx
  43c764:	in     eax,dx
  43c765:	cld    
  43c766:	push   ebx
  43c768:	in     eax,dx
  43c769:	cld    
  43c76a:	push   ebx
  43c76c:	lahf   
  43c76d:	loop   0x43c7ae
  43c76f:	dec    eax
  43c770:	ds push es
  43c772:	mov    ecx,0xfffcedaf
  43c777:	repz in eax,dx
  43c779:	cld    
  43c77a:	push   ebx
  43c77c:	int    0x1
  43c77e:	lea    ecx,[edx]
  43c780:	loopne 0x43c77e
  43c782:	push   ebx
  43c784:	(bad)  
  43c786:	push   ebx
  43c788:	(bad)  
  43c78a:	push   ebx
  43c78c:	(bad)  
  43c78e:	dec    esp
  43c790:	fnstsw ax
  43c792:	clc    
  43c793:	(bad)  
  43c794:	sar    esp,cl
  43c796:	push   ebx
  43c798:	fdivr  st,st(4)
  43c79a:	push   ebx
  43c79c:	pop    ds
  43c79d:	add    al,0x0
  43c79f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c7a1:	add    BYTE PTR [eax],al
  43c7a3:	repz push es
  43c7a5:	addr16 add al,0xf3
  43c7a8:	push   es
  43c7a9:	push   0xeed69beb
  43c7ae:	add    esi,ebx
  43c7b0:	push   es
  43c7b1:	fild   WORD PTR [ebx]
  43c7b3:	repz push es
  43c7b5:	mov    DWORD PTR [ebx],0xf3000000
  43c7bb:	push   es
  43c7bc:	cli    
  43c7bd:	add    esi,ebx
  43c7bf:	push   es
  43c7c0:	out    0x3,eax
  43c7c2:	repz push es
  43c7c4:	out    0x3,eax
  43c7c6:	repz push es
  43c7c8:	out    0xa3,eax
  43c7ca:	pop    esi
  43c7cb:	push   ss
  43c7cc:	out    0x3,eax
  43c7ce:	repz push es
  43c7d0:	out    0x3,eax
  43c7d2:	repz push es
  43c7d4:	out    0xbb,eax
  43c7d6:	icebp  
  43c7d7:	inc    esi
  43c7d8:	out    0x3,eax
  43c7da:	repz push es
  43c7dc:	out    0x3,eax
  43c7de:	repz push es
  43c7e0:	out    0xed,eax
  43c7e2:	hlt    
  43c7e3:	inc    esi
  43c7e4:	out    0x3,eax
  43c7e6:	repz push es
  43c7e8:	out    0x3,eax
  43c7ea:	repz push es
  43c7ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c7ed:	xchg   eax,ebp
  43c7ef:	inc    esi
  43c7f0:	out    0x3,eax
  43c7f2:	repz push es
  43c7f4:	out    0x3,eax
  43c7f6:	repz push es
  43c7f8:	xchg   edi,eax
  43c7f9:	(bad)  
  43c7fa:	jmp    0x43c842
  43c7fc:	out    0x3,eax
  43c7fe:	repz push es
  43c800:	out    0x3,eax
  43c802:	repz push es
  43c804:	ret    
  43c805:	out    dx,eax
  43c806:	test   BYTE PTR [esi-0x19],0x3
  43c80a:	repz push es
  43c80c:	out    0x3,eax
  43c80e:	xrelease xchg BYTE PTR [eax-0x75],bh
  43c812:	loop   0x43c85a
  43c814:	out    0x3,eax
  43c816:	repz push es
  43c818:	out    0x3,eax
  43c81a:	repz es jnp 0x43c7c7
  43c81e:	add    BYTE PTR [eax],al
  43c820:	add    ch,bl
  43c822:	inc    esi
  43c823:	add    cl,ch
  43c825:	lock push es
  43c827:	add    cl,ch
  43c829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c82a:	mov    es,esi
  43c82c:	add    bl,BYTE PTR [ecx]
  43c82e:	sbb    al,BYTE PTR [eax-0x17]
  43c831:	lock push es
  43c833:	lahf   
  43c834:	test   BYTE PTR [edi+edi*4+0x14],al
  43c838:	stos   DWORD PTR es:[edi],eax
  43c839:	popf   
  43c83a:	aas    
  43c83b:	inc    eax
  43c83c:	leave  
  43c83d:	sub    BYTE PTR [edi-0x4e],0xf9
  43c841:	aad    0x9e
  43c843:	stos   BYTE PTR es:[edi],al
  43c844:	lods   al,BYTE PTR ds:[esi]
  43c845:	jnp    0x43c8b3
  43c847:	inc    eax
  43c848:	cdq    
  43c849:	mov    ebx,0xee4c22d1
  43c84e:	or     BYTE PTR [eax+0x0],0x34
  43c852:	push   edx
  43c853:	inc    eax
  43c854:	fsub   DWORD PTR [edx-0x4a]
  43c857:	xchg   edx,eax
  43c858:	stos   BYTE PTR es:[edi],al
  43c859:	dec    edx
  43c85a:	or     BYTE PTR [ebx+0x3f6f5810],cl
  43c860:	inc    eax
  43c861:	mov    DWORD PTR [ebp+0x43],esi
  43c864:	inc    esp
  43c865:	ja     0x43c86a
  43c867:	mov    DWORD PTR [eax+0x6e],ebp
  43c86a:	pushf  
  43c86b:	aas    
  43c86c:	data16 aam 0xb9
  43c86f:	mov    eax,ds:0x194c092e
  43c874:	xchg   ecx,eax
  43c875:	ss ret 0x7e3f
  43c879:	xor    dh,BYTE PTR [ebp-0x338fef75]
  43c87f:	inc    eax
  43c880:	inc    ebx
  43c881:	pop    ebp
  43c882:	lods   eax,DWORD PTR ds:[esi]
  43c883:	ds xor eax,0x73000000
  43c889:	imul   edx,DWORD PTR [ebx-0x3a],0x17
  43c88d:	xor    al,0x59
  43c890:	xlat   BYTE PTR ds:[ebx]
  43c891:	push   eax
  43c892:	ds popf 
  43c894:	lods   al,BYTE PTR ds:[esi]
  43c895:	jle    0x43c870
  43c897:	shl    BYTE PTR [ebx+ebx*8-0x1c],1
  43c89b:	dec    edi
  43c89c:	gs inc ebp
  43c89e:	cmp    eax,0x6ee96b00
  43c8a3:	jecxz  0x43c82b
  43c8a5:	frstor [ecx]
  43c8a7:	das    
  43c8a8:	push   ds
  43c8a9:	mov    BYTE PTR [esi],bl
  43c8ab:	inc    esp
  43c8ac:	repnz cli 
  43c8ae:	push   cs
  43c8af:	stos   BYTE PTR es:[edi],al
  43c8b0:	push   edx
  43c8b1:	jno    0x43c8bb
  43c8b3:	jecxz  0x43c904
  43c8b5:	(bad)  
  43c8b6:	repnz inc esp
  43c8b8:	jno    0x43c860
  43c8ba:	int3   
  43c8bb:	repz pop ebp
  43c8bd:	mov    dl,0xd9
  43c8bf:	dec    edx
  43c8c0:	lock add edi,0x45
  43c8c4:	out    dx,eax
  43c8c5:	mov    ?,WORD PTR [edi-0x5959ab6f]
  43c8cb:	mov    al,ds:0x469beb43
  43c8d0:	addr16 xor eax,0x893f0c0f
  43c8d6:	jle    0x43c94d
  43c8d8:	sub    al,0x91
  43c8da:	inc    eax
  43c8db:	dec    ebp
  43c8dc:	or     BYTE PTR [edx-0x1c],0xa7
  43c8e0:	cdq    
  43c8e1:	pop    ds
  43c8e2:	xor    esi,DWORD PTR ds:0x53e59d72
  43c8e8:	push   edi
  43c8e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c8ea:	fstp   QWORD PTR [ebp+0x0]
  43c8ed:	add    BYTE PTR [eax],al
  43c8ef:	pop    ss
  43c8f0:	xchg   ebp,eax
  43c8f1:	push   ebp
  43c8f2:	cmp    esp,DWORD PTR [ecx-0xaa57580]
  43c8f8:	dec    ebx
  43c8f9:	sahf   
  43c8fa:	lock mov ebx,0xaf54c02a
  43c900:	dec    esi
  43c901:	xor    BYTE PTR [ecx-0x25],ah
  43c904:	jmp    0x43c889
  43c906:	pop    edx
  43c907:	add    edx,0xe0535d1d
  43c90d:	shl    DWORD PTR [edi+0x30],cl
  43c910:	test   al,dh
  43c912:	repz in eax,dx
  43c914:	popf   
  43c915:	call   0xf36e:0x78cc17c8
  43c91c:	sub    DWORD PTR [ebp+0x79fd5c94],esi
  43c922:	std    
  43c923:	and    bh,BYTE PTR [esi]
  43c925:	shl    BYTE PTR [edx],0x3e
  43c928:	fdivp  st(4),st
  43c92a:	push   ebx
  43c92c:	stos   BYTE PTR es:[edi],al
  43c92d:	mov    al,0xca
  43c92f:	mov    bh,0x71
  43c931:	mov    al,0xcb
  43c933:	scas   eax,DWORD PTR es:[edi]
  43c934:	cdq    
  43c935:	mov    al,0xf4
  43c937:	aam    0xee
  43c939:	and    BYTE PTR [esi],al
  43c93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c93c:	inc    eax
  43c93d:	ins    DWORD PTR es:[edi],dx
  43c93e:	cmp    edi,ecx
  43c940:	pushf  
  43c941:	mov    ds:0x6027bcf7,eax
  43c946:	xor    eax,0x90712494
  43c94b:	(bad)  [edi-0x5edb0d7d]
  43c951:	shr    DWORD PTR [ebx],cl
  43c953:	add    BYTE PTR [eax],al
  43c955:	add    dh,dl
  43c957:	push   es
  43c958:	loop   0x43c9b1
  43c95a:	cld    
  43c95b:	jl     0x43c92a
  43c95d:	out    dx,al
  43c95e:	or     al,0xe
  43c960:	clc    
  43c961:	sbb    al,0x6f
  43c963:	lods   al,BYTE PTR ds:[esi]
  43c964:	or     eax,DWORD PTR [ecx-0x71]
  43c967:	and    ah,BYTE PTR [eax-0x61620b17]
  43c96d:	mov    cl,0x9a
  43c96f:	leave  
  43c970:	xchg   edi,eax
  43c971:	add    ah,BYTE PTR [esi-0x24]
  43c974:	jle    0x43c95a
  43c976:	fdiv   QWORD PTR [eax-0x584e43df]
  43c97c:	(bad)  
  43c97e:	addr16 cmp al,0xcf
  43c981:	loopne 0x43c947
  43c983:	pop    ds
  43c984:	loop   0x43c980
  43c986:	sub    eax,0x7c0e787e
  43c98b:	and    DWORD PTR [ebx+eiz*8+0x5530c92c],ebx
  43c992:	shl    BYTE PTR [ebx-0x48],cl
  43c995:	mov    ecx,0xde7c0787
  43c99a:	lods   eax,DWORD PTR ds:[esi]
  43c99b:	adc    dh,BYTE PTR [ebp-0x40]
  43c99e:	aas    
  43c99f:	push   cs
  43c9a0:	pop    esp
  43c9a1:	inc    eax
  43c9a2:	mov    eax,0x8b8a88fb
  43c9a7:	adc    ah,BYTE PTR [ecx-0x8482a1]
  43c9ad:	inc    eax
  43c9ae:	pop    eax
  43c9af:	icebp  
  43c9b0:	ja     0x43c969
  43c9b2:	adc    BYTE PTR [edx],0x3
  43c9b5:	and    esi,DWORD PTR [ecx+0xaa62e5]
  43c9bb:	add    BYTE PTR [eax],al
  43c9bd:	fist   WORD PTR [edi]
  43c9bf:	or     BYTE PTR [ebx+0x6],bh
  43c9c2:	adc    cl,BYTE PTR [eax]
  43c9c4:	push   ecx
  43c9c5:	sbb    al,0xc8
  43c9c7:	or     BYTE PTR [ebp-0x552aacd1],dh
  43c9cd:	sbb    edx,DWORD PTR [edx]
  43c9cf:	xchg   edx,eax
  43c9d0:	(bad)  
  43c9d1:	sbb    eax,DWORD PTR [eax+ebp*8-0x2c73895b]
  43c9d8:	jmp    0xe090:0x270b11b0
  43c9df:	pop    ds
  43c9e0:	mov    eax,ds:0x9bd1dd13
  43c9e5:	push   cs
  43c9e6:	adc    cl,ah
  43c9e8:	xchg   edi,eax
  43c9e9:	pop    ebp
  43c9ea:	jmp    0x43c96e
  43c9ec:	pusha  
  43c9ed:	mov    bh,0x48
  43c9ef:	pop    ss
  43c9f0:	leave  
  43c9f1:	rcl    DWORD PTR [eax],0xc6
  43c9f4:	push   0xfffffff1
  43c9f6:	ret    0x5005
  43c9f9:	mov    ds:0x95952185,al
  43c9fe:	adc    edi,DWORD PTR [eax-0x16]
  43ca01:	(bad)  
  43ca02:	out    dx,eax
  43ca03:	mov    WORD PTR [edx-0x30],fs
  43ca06:	inc    ebp
  43ca07:	fadd   st,st(3)
  43ca09:	dec    eax
  43ca0a:	adc    ecx,eax
  43ca0c:	jl     0x43ca33
  43ca0e:	pcmpgtw mm7,QWORD PTR [edi]
  43ca11:	or     BYTE PTR [esi-0x49241701],0x34
  43ca18:	or     eax,0x2083a5f
  43ca1d:	sahf   
  43ca1e:	jmp    0x4431ff
  43ca23:	add    BYTE PTR [esi-0x2e],ch
  43ca26:	xor    eax,0x3e4544af
  43ca2b:	out    0x8e,al
  43ca2d:	js     0x43caa1
  43ca2f:	(bad)  
  43ca30:	test   eax,0x27fa361f
  43ca35:	repz int 0xa
  43ca38:	mov    eax,0x8720ea23
  43ca3d:	cmp    esi,DWORD PTR [edi]
  43ca3f:	dec    edi
  43ca40:	adc    eax,0xb936bf90
  43ca45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ca46:	jge    0x43ca97
  43ca48:	push   edx
  43ca49:	xchg   esp,eax
  43ca4a:	sub    eax,0xea1188b
  43ca4f:	dec    esi
  43ca50:	and    dh,BYTE PTR [eax+0x43]
  43ca53:	and    BYTE PTR [ecx+eax*1-0x14d833d4],bl
  43ca5a:	sub    dh,BYTE PTR [edi-0x68b2bff4]
  43ca60:	sahf   
  43ca61:	push   0x23
  43ca63:	outs   dx,BYTE PTR ds:[esi]
  43ca64:	mov    edi,0x2e29a40a
  43ca69:	xchg   ebx,eax
  43ca6a:	jp     0x43cabe
  43ca6c:	sbb    bh,al
  43ca6e:	sbb    DWORD PTR [edi+0x15],esp
  43ca71:	mov    DWORD PTR [ebp-0x6a],edx
  43ca74:	xchg   DWORD PTR ds:0xf37199b9,ecx
  43ca7a:	pop    ss
  43ca7b:	lahf   
  43ca7c:	fldenv [ebp+0x5e]
  43ca7f:	and    al,0x71
  43ca81:	jle    0x43ca2b
  43ca83:	out    0x7c,eax
  43ca85:	dec    esp
  43ca86:	prefetch BYTE PTR [eax]
  43ca89:	add    BYTE PTR [eax],al
  43ca8b:	jmp    0x43ca39
  43ca8d:	cwde   
  43ca8e:	pop    ds
  43ca8f:	and    cl,cl
  43ca91:	add    eax,DWORD PTR [eax]
  43ca93:	iret   
  43ca94:	jae    0x43ca66
  43ca96:	or     bl,dl
  43ca98:	add    al,0x0
  43ca9a:	add    BYTE PTR [edx+0x10],dl
  43ca9d:	inc    eax
  43ca9e:	add    BYTE PTR [edx-0x34ffbfbb],ah
  43caa4:	add    eax,0x5cc0000
  43caa9:	add    BYTE PTR [eax],al
  43caab:	int    0x4
  43caad:	add    BYTE PTR [eax],al
  43caaf:	ror    BYTE PTR ds:0x468a0040,cl
  43cab5:	inc    eax
  43cab6:	add    BYTE PTR [edx-0x43fffffc],bl
  43cabc:	add    al,0x0
  43cabe:	add    BYTE PTR [ebp-0x75fffffc],bh
  43cac4:	add    al,0x0
  43cac6:	add    BYTE PTR [edx-0x65ffbff0],dl
  43cacc:	add    al,0x0
  43cace:	add    BYTE PTR [ecx+0x4],bh
  43cad1:	add    BYTE PTR [eax],al
  43cad3:	test   DWORD PTR [eax+eax*1],eax
  43cad6:	add    BYTE PTR [edx+0x4],bl
  43cad9:	add    BYTE PTR [eax],al
  43cadb:	pop    ebx
  43cadc:	add    al,0x0
  43cade:	add    BYTE PTR [edx+0x4],cl
  43cae1:	add    BYTE PTR [eax],al
  43cae3:	pop    esi
  43cae4:	cmp    BYTE PTR [eax],0x0
  43cae7:	push   ds
  43cae8:	popa   
  43cae9:	inc    eax
  43caea:	add    BYTE PTR [esi-0x80],dl
  43caed:	cmp    BYTE PTR [eax],al
  43caef:	add    BYTE PTR [eax],al
  43caf1:	add    BYTE PTR [esi],dl
  43caf3:	popa   
  43caf4:	inc    eax
  43caf5:	add    BYTE PTR [edx-0x80],cl
  43caf8:	cmp    BYTE PTR [eax],al
  43cafa:	mov    dl,0x75
  43cafc:	cmp    BYTE PTR [eax],al
  43cafe:	jmp    0x3875:0xb2003875
  43cb05:	add    dl,ch
  43cb07:	jne    0x43cb41
  43cb09:	add    BYTE PTR [edx-0xcffc78b],dh
  43cb0f:	or     eax,0x25f33f8f
  43cb14:	(bad)  
  43cb15:	aas    
  43cb16:	repz dec ecx
  43cb18:	(bad)  
  43cb19:	aas    
  43cb1a:	repz or eax,0x45f33f8f
  43cb20:	(bad)  
  43cb21:	aas    
  43cb22:	repz cmp eax,0x51f33f8f
  43cb28:	nop
  43cb29:	aas    
  43cb2a:	repz push ebp
  43cb2c:	nop
  43cb2d:	aas    
  43cb2e:	repz pop ebp
  43cb30:	nop
  43cb31:	aas    
  43cb32:	repz cmp DWORD PTR [edi-0x70c60cc1],ecx
  43cb39:	aas    
  43cb3a:	repz cmp eax,0xf1f33f8f
  43cb40:	mov    ?,WORD PTR [edi]
  43cb42:	repz icebp 
  43cb44:	mov    ?,WORD PTR [edi]
  43cb46:	repz and DWORD PTR [edi-0x704e0cc1],ecx
  43cb4d:	aas    
  43cb4e:	repz ror DWORD PTR [edi-0x717e0cc1],0x3f
  43cb56:	add    BYTE PTR [eax],al
  43cb58:	add    bl,dh
  43cb5a:	dec    ebp
  43cb5b:	(bad)  
  43cb5c:	aas    
  43cb5d:	repz jns 0x43caee
  43cb60:	aas    
  43cb61:	repz popf 
  43cb63:	mov    ?,WORD PTR [edi]
  43cb65:	repz inc ecx
  43cb67:	(bad)  
  43cb68:	aas    
  43cb69:	repz push ebp
  43cb6b:	(bad)  
  43cb6c:	aas    
  43cb6d:	repz leave 
  43cb6f:	mov    ?,WORD PTR [edi]
  43cb71:	repz test eax,0x9f33f8e
  43cb77:	mov    ?,WORD PTR [edi]
  43cb79:	repz in eax,0x8e
  43cb7c:	aas    
  43cb7d:	repz adc DWORD PTR [esi-0x71be0cc1],ecx
  43cb84:	aas    
  43cb85:	repz popa 
  43cb87:	mov    ?,WORD PTR [edi]
  43cb89:	repz push es
  43cb8b:	dec    ebx
  43cb8c:	xchg   edx,eax
  43cb8d:	int3   
  43cb8e:	push   es
  43cb8f:	addr16 xchg edx,eax
  43cb91:	les    eax,FWORD PTR [esi]
  43cb93:	adc    DWORD PTR [edx-0x6d34f944],0xffffffb4
  43cb9a:	push   es
  43cb9b:	retf   
  43cb9c:	xchg   edx,eax
  43cb9d:	sub    al,0x7
  43cb9f:	or     edx,DWORD PTR [ebx-0x6cf0f8dc]
  43cba5:	sbb    al,0x7
  43cba7:	daa    
  43cba8:	xchg   ebx,eax
  43cba9:	adc    al,0x7
  43cbab:	xchg   ebx,eax
  43cbac:	je     0x43cbba
  43cbae:	pop    es
  43cbaf:	ja     0x43cc25
  43cbb1:	add    al,0x7
  43cbb3:	push   ebx
  43cbb4:	je     0x43cbb2
  43cbb6:	push   es
  43cbb7:	aas    
  43cbb8:	je     0x43cbae
  43cbba:	push   es
  43cbbb:	pop    ds
  43cbbc:	je     0x43cbbe
  43cbbe:	add    BYTE PTR [eax],al
  43cbc0:	in     al,dx
  43cbc1:	push   es
  43cbc2:	sub    esi,DWORD PTR [esp+eiz*8+0x6]
  43cbc6:	out    dx,eax
  43cbc7:	jae    0x43cba5
  43cbc9:	push   es
  43cbca:	push   DWORD PTR [ebx-0x2c]
  43cbcd:	push   es
  43cbce:	sti    
  43cbcf:	jae    0x43cb9d
  43cbd1:	push   es
  43cbd2:	jecxz  0x43cc47
  43cbd4:	les    eax,FWORD PTR [esi]
  43cbd6:	xchg   edi,eax
  43cbd7:	xchg   ebx,eax
  43cbd8:	mov    esp,0xb4938706
  43cbdd:	push   es
  43cbde:	stos   DWORD PTR es:[edi],eax
  43cbdf:	xchg   ebx,eax
  43cbe0:	sub    al,0x7
  43cbe2:	dec    ebx
  43cbe3:	xchg   ebx,eax
  43cbe4:	and    al,0x7
  43cbe6:	pop    ebx
  43cbe7:	xchg   ebx,eax
  43cbe8:	sbb    al,0x7
  43cbea:	addr16 xchg ebx,eax
  43cbec:	adc    al,0x7
  43cbee:	xlat   BYTE PTR ds:[ebx]
  43cbef:	xchg   edx,eax
  43cbf0:	or     al,0x7
  43cbf2:	mov    edi,0x13070492
  43cbf7:	xchg   ebx,eax
  43cbf8:	cld    
  43cbf9:	push   es
  43cbfa:	pop    es
  43cbfb:	xchg   ebx,eax
  43cbfc:	hlt    
  43cbfd:	push   es
  43cbfe:	jmp    0x43cb92
  43cc00:	in     al,dx
  43cc01:	push   es
  43cc02:	pop    ds
  43cc03:	xchg   edx,eax
  43cc04:	in     al,0x6
  43cc06:	add    BYTE PTR [ecx],ch
  43cc08:	or     DWORD PTR [esi],0xe815100
  43cc0e:	add    BYTE PTR [ecx+0x61],ch
  43cc11:	push   cs
  43cc12:	add    BYTE PTR [ecx-0x5afff19e],dl
  43cc18:	bound  ecx,QWORD PTR [esi]
  43cc1a:	add    ch,al
  43cc1c:	bound  ecx,QWORD PTR [esi]
  43cc1e:	add    cl,ah
  43cc20:	or     BYTE PTR ds:0x100,0x0
  43cc27:	or     BYTE PTR ds:0xd820500,0x0
  43cc2e:	adc    DWORD PTR [edx+0x63b5000d],eax
  43cc34:	or     eax,0xd639900
  43cc39:	add    cl,ch
  43cc3b:	lock push es
  43cc3d:	add    cl,ch
  43cc3f:	lock push es
  43cc41:	add    cl,ch
  43cc43:	lock push es
  43cc45:	add    cl,ch
  43cc47:	lock push es
  43cc49:	add    cl,ch
  43cc4b:	lock push es
  43cc4d:	add    BYTE PTR [esi-0x74],dl
  43cc50:	or     al,0x0
  43cc52:	jmp    0xe943d347
  43cc57:	lock push es
  43cc59:	add    cl,ch
  43cc5b:	lock push es
  43cc5d:	add    BYTE PTR [esi],bl
  43cc5f:	mov    ch,0xc
  43cc61:	add    cl,ch
  43cc63:	lock push es
  43cc65:	add    cl,ch
  43cc67:	lock push es
  43cc69:	add    cl,ch
  43cc6b:	lock push es
  43cc6d:	add    BYTE PTR [edi+0x16],al
  43cc70:	or     eax,0x6f0e900
  43cc75:	add    cl,ch
  43cc77:	lock push es
  43cc79:	add    cl,ch
  43cc7b:	lock push es
  43cc7d:	add    BYTE PTR [esi+esi*8+0xc],cl
  43cc81:	add    BYTE PTR [eax],al
  43cc83:	sbb    cl,BYTE PTR [ecx]
  43cc85:	add    BYTE PTR [eax],al
  43cc87:	sbb    cl,BYTE PTR [ecx]
  43cc89:	add    BYTE PTR [eax],al
  43cc8b:	add    BYTE PTR [eax],al
  43cc8d:	add    BYTE PTR [edx],cl
  43cc8f:	or     DWORD PTR [eax],eax
  43cc91:	add    BYTE PTR [eax+0xc],ch
  43cc94:	cmp    al,BYTE PTR [eax]
  43cc96:	sbb    cl,BYTE PTR [ecx]
  43cc98:	add    BYTE PTR [eax],al
  43cc9a:	sbb    cl,BYTE PTR [ecx]
  43cc9c:	add    BYTE PTR [eax],al
  43cc9e:	or     cl,BYTE PTR [ecx]
  43cca0:	add    BYTE PTR [eax],al
  43cca2:	dec    ebp
  43cca3:	or     eax,0x8da003a
  43cca8:	add    BYTE PTR [eax],al
  43ccaa:	fimul  DWORD PTR [eax]
  43ccac:	add    BYTE PTR [eax],al
  43ccae:	retf   0x8
  43ccb1:	add    BYTE PTR [eax+0xc],dl
  43ccb4:	cmp    al,BYTE PTR [eax]
  43ccb6:	fimul  DWORD PTR [eax]
  43ccb8:	add    BYTE PTR [eax],al
  43ccba:	fimul  DWORD PTR [eax]
  43ccbc:	add    BYTE PTR [eax],al
  43ccbe:	retf   0x8
  43ccc1:	add    BYTE PTR [eax-0x65ffc5b9],dl
  43ccc7:	or     BYTE PTR [eax],al
  43ccc9:	add    BYTE PTR [edx-0x75fffff8],bl
  43cccf:	or     BYTE PTR [eax],al
  43ccd1:	add    dl,al
  43ccd3:	or     eax,0x89a003a
  43ccd8:	add    BYTE PTR [eax],al
  43ccda:	call   0x8:0x8a000008
  43cce1:	add    dl,dl
  43cce3:	or     edi,DWORD PTR [edx]
  43cce5:	add    BYTE PTR [edx+0x8],bl
  43cce8:	add    BYTE PTR [eax],al
  43ccea:	pop    edx
  43cceb:	or     BYTE PTR [eax],al
  43cced:	add    BYTE PTR [edx+0x8],cl
  43ccf0:	add    BYTE PTR [eax],al
  43ccf2:	add    BYTE PTR [eax],al
  43ccf4:	add    BYTE PTR [edi+0x5a003a0b],ah
  43ccfa:	or     BYTE PTR [eax],al
  43ccfc:	add    BYTE PTR [edx+0x8],bl
  43ccff:	add    BYTE PTR [eax],al
  43cd01:	repz (bad) 
  43cd04:	push   ebx
  43cd06:	jb     0x43cd40
  43cd08:	ds repz (bad) 
  43cd0c:	push   ebx
  43cd0e:	(bad)  
  43cd10:	push   ebx
  43cd12:	(bad)  
  43cd14:	push   ebx
  43cd16:	jmp    0xfffc:0xddf33e38
  43cd1d:	repz (bad) 
  43cd20:	push   ebx
  43cd22:	(bad)  
  43cd24:	push   ebx
  43cd26:	mov    bl,0xa3
  43cd28:	aas    
  43cd29:	repz (bad) 
  43cd2c:	push   ebx
  43cd2e:	(bad)  
  43cd30:	push   ebx
  43cd32:	(bad)  
  43cd34:	push   ebx
  43cd36:	mov    gs:0xfcddf33f,eax
  43cd3c:	push   ebx
  43cd3e:	(bad)  
  43cd40:	push   ebx
  43cd42:	(bad)  
  43cd44:	push   ebx
  43cd46:	lahf   
  43cd47:	mov    ds:0xfcddf33f,eax
  43cd4c:	push   ebx
  43cd4e:	(bad)  
  43cd50:	push   ebx
  43cd52:	(bad)  
  43cd54:	push   ebx
  43cd56:	shl    DWORD PTR [eax+0x3f],1
  43cd5c:	repz (bad) 
  43cd5f:	push   ebx
  43cd61:	(bad)  
  43cd63:	push   ebx
  43cd65:	(bad)  
  43cd67:	push   ebx
  43cd69:	stc    
  43cd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cd6b:	aas    
  43cd6c:	repz (bad) 
  43cd6f:	push   ebx
  43cd71:	(bad)  
  43cd73:	push   ebx
  43cd75:	(bad)  
  43cd77:	push   ebx
  43cd79:	mov    ds:0x6f33ecc,al
  43cd7e:	out    0x3,eax
  43cd80:	repz push es
  43cd82:	out    0x3,eax
  43cd84:	repz push es
  43cd86:	out    0x3,eax
  43cd88:	repz push es
  43cd8a:	hlt    
  43cd8b:	shr    ch,cl
  43cd8d:	push   es
  43cd8e:	out    0x3,eax
  43cd90:	repz push es
  43cd92:	out    0x3,eax
  43cd94:	repz push es
  43cd96:	out    0x3,eax
  43cd98:	repz push es
  43cd9a:	not    dl
  43cd9c:	int    0x6
  43cd9e:	out    0x3,eax
  43cda0:	repz push es
  43cda2:	out    0x3,eax
  43cda4:	repz push es
  43cda6:	out    0x3,eax
  43cda8:	repz push es
  43cdaa:	nop
  43cdab:	shr    BYTE PTR ds:0xf303e707,cl
  43cdb1:	push   es
  43cdb2:	out    0x3,eax
  43cdb4:	repz push es
  43cdb6:	out    0x3,eax
  43cdb8:	repz push es
  43cdba:	sub    dl,dl
  43cdbc:	or     eax,0x3e707
  43cdc1:	add    BYTE PTR [eax],al
  43cdc3:	repz push es
  43cdc5:	out    0x3,eax
  43cdc7:	repz push es
  43cdc9:	out    0x3,eax
  43cdcb:	repz push es
  43cdcd:	in     al,0xd1
  43cdcf:	in     eax,dx
  43cdd0:	push   es
  43cdd1:	out    0x3,eax
  43cdd3:	repz push es
  43cdd5:	out    0x3,eax
  43cdd7:	repz push es
  43cdd9:	out    0x3,eax
  43cddb:	repz push es
  43cddd:	push   ds
  43cdde:	ror    ch,cl
  43cde0:	push   es
  43cde1:	out    0x3,eax
  43cde3:	repz push es
  43cde5:	out    0x3,eax
  43cde7:	repz push es
  43cde9:	out    0x3,eax
  43cdeb:	repz push es
  43cded:	jae    0x43cdc1
  43cdef:	sub    eax,0xf303e707
  43cdf4:	push   es
  43cdf5:	out    0x3,eax
  43cdf7:	repz push es
  43cdf9:	add    cl,ch
  43cdfb:	lock push es
  43cdfd:	add    BYTE PTR [ecx+eiz*1-0xf16fff7],cl
  43ce04:	push   es
  43ce05:	add    cl,ch
  43ce07:	lock push es
  43ce09:	add    cl,ch
  43ce0b:	lock push es
  43ce0d:	add    BYTE PTR [edx],cl
  43ce0f:	inc    eax
  43ce10:	or     DWORD PTR [eax],eax
  43ce12:	jmp    0xe943d507
  43ce17:	lock push es
  43ce19:	add    cl,ch
  43ce1b:	lock push es
  43ce1d:	add    al,al
  43ce1f:	and    DWORD PTR [ecx],ecx
  43ce21:	add    cl,ch
  43ce23:	lock push es
  43ce25:	add    cl,ch
  43ce27:	add    BYTE PTR [eax],al
  43ce29:	add    al,dh
  43ce2b:	push   es
  43ce2c:	add    cl,ch
  43ce2e:	lock push es
  43ce30:	add    BYTE PTR [ebx-0x40],bl
  43ce33:	or     BYTE PTR [eax],al
  43ce35:	jmp    0xe943d52a
  43ce3a:	lock push es
  43ce3c:	add    cl,ch
  43ce3e:	lock push es
  43ce40:	add    BYTE PTR [esi-0x16fff75c],dh
  43ce46:	lock push es
  43ce48:	add    cl,ch
  43ce4a:	lock push es
  43ce4c:	add    cl,ch
  43ce4e:	lock push es
  43ce50:	add    BYTE PTR [ebp-0x3c],ah
  43ce53:	or     BYTE PTR [eax],al
  43ce55:	jmp    0xe943d54a
  43ce5a:	lock push es
  43ce5c:	add    cl,ch
  43ce5e:	lock push es
  43ce60:	add    BYTE PTR [eax-0x16fff75c],bl
  43ce66:	lock push es
  43ce68:	add    cl,ch
  43ce6a:	lock push es
  43ce6c:	add    cl,ch
  43ce6e:	lock push es
  43ce70:	add    dl,cl
  43ce72:	dec    ebx
  43ce73:	or     BYTE PTR [eax],al
  43ce75:	add    BYTE PTR [edx+0x5],bl
  43ce78:	add    BYTE PTR [eax],al
  43ce7a:	dec    edx
  43ce7b:	add    eax,0x54a0000
  43ce80:	add    BYTE PTR [eax],al
  43ce82:	pop    es
  43ce83:	push   ds
  43ce84:	cmp    al,BYTE PTR [eax]
  43ce86:	pop    edx
  43ce87:	add    eax,0x54a0000
  43ce8c:	add    BYTE PTR [eax],al
  43ce8e:	add    BYTE PTR [eax],al
  43ce90:	add    BYTE PTR [edx+0x5],cl
  43ce93:	add    BYTE PTR [eax],al
  43ce95:	neg    DWORD PTR [ebx]
  43ce97:	cmp    al,BYTE PTR [eax]
  43ce99:	sbb    al,BYTE PTR ds:0x50a0000
  43ce9f:	add    BYTE PTR [eax],al
  43cea1:	or     al,BYTE PTR ds:0x1a370000
  43cea7:	cmp    al,BYTE PTR [eax]
  43cea9:	sbb    al,BYTE PTR ds:0x50a0000
  43ceaf:	add    BYTE PTR [eax],al
  43ceb1:	or     al,BYTE PTR ds:0x1b1a0000
  43ceb7:	cmp    al,BYTE PTR [eax]
  43ceb9:	fiadd  DWORD PTR [eax+eax*1]
  43cebc:	add    dl,cl
  43cebe:	add    al,0x0
  43cec0:	add    dl,cl
  43cec2:	add    al,0x0
  43cec4:	add    ch,bl
  43cec6:	sbb    al,0x3a
  43cec8:	add    dl,bl
  43ceca:	add    al,0x0
  43cecc:	add    dl,cl
  43cece:	add    al,0x0
  43ced0:	add    dl,cl
  43ced2:	add    al,0x0
  43ced4:	add    ah,bh
  43ced6:	sbb    al,0x3a
  43ced8:	add    BYTE PTR [edx-0x75fffffc],bl
  43cede:	add    al,0x0
  43cee0:	add    BYTE PTR [edx-0x23fffffc],cl
  43cee6:	sbb    al,0x3a
  43cee8:	add    BYTE PTR [edx-0x75fffffc],bl
  43ceee:	add    al,0x0
  43cef0:	add    bl,dh
  43cef2:	(bad)  
  43cef4:	inc    DWORD PTR [eax]
  43cef6:	add    BYTE PTR [eax],al
  43cef8:	repz into 
  43cefa:	daa    
  43cefb:	ds repz (bad) 
  43ceff:	push   ebx
  43cf01:	(bad)  
  43cf03:	push   ebx
  43cf05:	(bad)  
  43cf07:	push   ebx
  43cf09:	aaa    
  43cf0a:	leave  
  43cf0b:	cmp    eax,0xfffcddf3
  43cf10:	repz (bad) 
  43cf13:	push   ebx
  43cf15:	(bad)  
  43cf17:	push   ebx
  43cf19:	or     eax,0xddf33dc9
  43cf1e:	cld    
  43cf1f:	push   ebx
  43cf21:	(bad)  
  43cf23:	push   ebx
  43cf25:	(bad)  
  43cf27:	push   ebx
  43cf29:	mov    al,0xca
  43cf2b:	cmp    eax,0xfffcddf3
  43cf30:	repz (bad) 
  43cf33:	push   ebx
  43cf35:	(bad)  
  43cf37:	push   ebx
  43cf39:	xchg   ecx,eax
  43cf3a:	retf   0xf33d
  43cf3d:	(bad)  
  43cf3f:	push   ebx
  43cf41:	(bad)  
  43cf43:	push   ebx
  43cf45:	(bad)  
  43cf47:	push   ebx
  43cf49:	pop    es
  43cf4a:	retf   0xf33d
  43cf4d:	(bad)  
  43cf4f:	push   ebx
  43cf51:	(bad)  
  43cf53:	push   ebx
  43cf55:	(bad)  
  43cf57:	push   ebx
  43cf59:	mov    bh,0xca
  43cf5b:	cmp    eax,0xf3000000
  43cf60:	(bad)  
  43cf62:	push   ebx
  43cf64:	(bad)  
  43cf66:	push   ebx
  43cf68:	(bad)  
  43cf6a:	push   ebx
  43cf6c:	cmp    cl,ah
  43cf6e:	cmp    eax,0x3e706f3
  43cf73:	repz push es
  43cf75:	out    0x3,eax
  43cf77:	repz push es
  43cf79:	out    0x3,eax
  43cf7b:	repz push es
  43cf7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cf7e:	int3   
  43cf7f:	es pop es
  43cf81:	out    0x3,eax
  43cf83:	repz push es
  43cf85:	out    0x3,eax
  43cf87:	repz push es
  43cf89:	out    0x3,eax
  43cf8b:	repz push es
  43cf8d:	jl     0x43cf5b
  43cf8f:	push   es
  43cf90:	pop    es
  43cf91:	out    0x3,eax
  43cf93:	repz push es
  43cf95:	out    0x3,eax
  43cf97:	repz push es
  43cf99:	out    0x3,eax
  43cf9b:	repz push es
  43cf9d:	out    dx,eax
  43cf9e:	mov    bl,0xe6
  43cfa0:	push   es
  43cfa1:	out    0x3,eax
  43cfa3:	repz push es
  43cfa5:	out    0x3,eax
  43cfa7:	repz push es
  43cfa9:	out    0x3,eax
  43cfab:	repz push es
  43cfad:	ror    DWORD PTR [esi+0x3e706c6],cl
  43cfb3:	repz push es
  43cfb5:	out    0x3,eax
  43cfb7:	repz push es
  43cfb9:	out    0x3,eax
  43cfbb:	repz push es
  43cfbd:	mov    WORD PTR [ebp+0x3e70726],cs
  43cfc3:	add    BYTE PTR [eax],al
  43cfc5:	add    bl,dh
  43cfc7:	push   es
  43cfc8:	out    0x3,eax
  43cfca:	repz push es
  43cfcc:	out    0x3,eax
  43cfce:	repz push es
  43cfd0:	pop    ss
  43cfd1:	add    ax,0xe707
  43cfd5:	add    esi,ebx
  43cfd7:	push   es
  43cfd8:	out    0x3,eax
  43cfda:	repz push es
  43cfdc:	out    0x3,eax
  43cfde:	repz push es
  43cfe0:	xchg   edx,eax
  43cfe1:	xchg   esp,eax
  43cfe2:	in     eax,0x6
  43cfe4:	out    0x3,eax
  43cfe6:	repz push es
  43cfe8:	out    0x3,eax
  43cfea:	repz push es
  43cfec:	add    cl,ch
  43cfee:	lock push es
  43cff0:	add    BYTE PTR [ebx-0x16fffaa1],dh
  43cff6:	lock push es
  43cff8:	add    cl,ch
  43cffa:	lock push es
  43cffc:	add    cl,ch
  43cffe:	lock push es
  43d000:	add    BYTE PTR [ebx],ah
  43d002:	mov    BYTE PTR ds:0x6f0e900,al
  43d008:	add    cl,ch
  43d00a:	lock push es
  43d00c:	add    cl,ch
  43d00e:	lock push es
  43d010:	add    ah,bl
  43d012:	popa   
  43d013:	add    eax,0x6f0e900
  43d018:	add    cl,ch
  43d01a:	lock push es
  43d01c:	add    cl,ch
  43d01e:	lock push es
  43d020:	add    BYTE PTR [edx-0x7c],bl
  43d023:	add    eax,0x6f0e900
  43d028:	add    cl,ch
  43d02a:	add    BYTE PTR [eax],al
  43d02c:	add    al,dh
  43d02e:	push   es
  43d02f:	add    BYTE PTR [ecx],bh
  43d031:	push   0x6
  43d033:	add    BYTE PTR [esi],dh
  43d035:	push   0x6
  43d037:	add    BYTE PTR [ecx],ch
  43d039:	mov    eax,ds:0xf0e90046
  43d03e:	push   es
  43d03f:	add    BYTE PTR [ebp-0x76ffb8bf],cl
  43d045:	inc    ecx
  43d046:	inc    edi
  43d047:	add    BYTE PTR [ebp-0x5effb8bf],ah
  43d04d:	inc    ecx
  43d04e:	inc    edi
  43d04f:	add    BYTE PTR [ebp-0x66ffb8df],bl
  43d055:	and    DWORD PTR [edi+0x0],eax
  43d058:	xor    eax,0x31004720
  43d05d:	and    BYTE PTR [edi+0x0],al
  43d060:	sub    eax,0x29004740
  43d065:	inc    eax
  43d066:	inc    edi
  43d067:	add    BYTE PTR [eax],al
  43d069:	neg    BYTE PTR [ecx+0x40]
  43d06c:	add    dl,dh
  43d06e:	pop    ecx
  43d06f:	inc    eax
  43d070:	add    BYTE PTR [edx+0x75000009],bl
  43d076:	cdq    
  43d077:	add    BYTE PTR [ecx+0x98a],bl
  43d07d:	mov    cl,BYTE PTR [ecx]
  43d07f:	add    BYTE PTR [eax],al
  43d081:	pop    edx
  43d082:	or     DWORD PTR [eax],eax
  43d084:	add    BYTE PTR [edx+0x9],bl
  43d087:	add    BYTE PTR [eax],al
  43d089:	dec    edx
  43d08a:	or     DWORD PTR [eax],eax
  43d08c:	add    BYTE PTR [edx+0x9],cl
  43d08f:	add    BYTE PTR [eax],al
  43d091:	add    BYTE PTR [eax],al
  43d093:	add    BYTE PTR [edx+0x9],bl
  43d096:	add    BYTE PTR [eax],al
  43d098:	pop    edx
  43d099:	or     DWORD PTR [eax],eax
  43d09b:	add    BYTE PTR [edx+0x9],cl
  43d09e:	add    BYTE PTR [eax],al
  43d0a0:	dec    edx
  43d0a1:	or     DWORD PTR [eax],eax
  43d0a3:	add    BYTE PTR [edx],bl
  43d0a5:	or     DWORD PTR [eax],eax
  43d0a7:	add    BYTE PTR [edx],bl
  43d0a9:	or     DWORD PTR [eax],eax
  43d0ab:	add    BYTE PTR [edx],cl
  43d0ad:	or     DWORD PTR [eax],eax
  43d0af:	add    BYTE PTR [edx],cl
  43d0b1:	or     DWORD PTR [eax],eax
  43d0b3:	add    BYTE PTR [edx],bl
  43d0b5:	or     DWORD PTR [eax],eax
  43d0b7:	add    BYTE PTR [edx],bl
  43d0b9:	or     DWORD PTR [eax],eax
  43d0bb:	add    BYTE PTR [edx],cl
  43d0bd:	or     DWORD PTR [eax],eax
  43d0bf:	add    BYTE PTR [edx],cl
  43d0c1:	or     DWORD PTR [eax],eax
  43d0c3:	add    dl,bl
  43d0c5:	or     BYTE PTR [eax],al
  43d0c7:	add    dl,bl
  43d0c9:	or     BYTE PTR [eax],al
  43d0cb:	add    dl,cl
  43d0cd:	or     BYTE PTR [eax],al
  43d0cf:	add    dl,cl
  43d0d1:	or     BYTE PTR [eax],al
  43d0d3:	add    dl,bl
  43d0d5:	or     BYTE PTR [eax],al
  43d0d7:	add    dl,bl
  43d0d9:	or     BYTE PTR [eax],al
  43d0db:	add    dl,cl
  43d0dd:	or     BYTE PTR [eax],al
  43d0df:	add    dl,cl
  43d0e1:	or     BYTE PTR [eax],al
  43d0e3:	add    bl,dh
  43d0e5:	lods   eax,DWORD PTR ds:[esi]
  43d0e6:	cld    
  43d0e7:	push   ebx
  43d0e9:	lods   eax,DWORD PTR ds:[esi]
  43d0ea:	cld    
  43d0eb:	push   ebx
  43d0ed:	lods   eax,DWORD PTR ds:[esi]
  43d0ee:	cld    
  43d0ef:	push   ebx
  43d0f1:	lods   eax,DWORD PTR ds:[esi]
  43d0f2:	cld    
  43d0f3:	push   ebx
  43d0f5:	lods   eax,DWORD PTR ds:[esi]
  43d0f6:	cld    
  43d0f7:	inc    DWORD PTR [eax]
  43d0f9:	add    BYTE PTR [eax],al
  43d0fb:	rep lods eax,DWORD PTR ds:[esi]
  43d0fd:	cld    
  43d0fe:	push   ebx
  43d100:	lods   eax,DWORD PTR ds:[esi]
  43d101:	cld    
  43d102:	push   ebx
  43d104:	lods   eax,DWORD PTR ds:[esi]
  43d105:	cld    
  43d106:	push   ebx
  43d108:	lods   eax,DWORD PTR ds:[esi]
  43d109:	cld    
  43d10a:	push   ebx
  43d10c:	lods   eax,DWORD PTR ds:[esi]
  43d10d:	cld    
  43d10e:	push   ebx
  43d110:	lods   eax,DWORD PTR ds:[esi]
  43d111:	cld    
  43d112:	push   ebx
  43d114:	lods   eax,DWORD PTR ds:[esi]
  43d115:	cld    
  43d116:	push   ebx
  43d118:	lods   eax,DWORD PTR ds:[esi]
  43d119:	cld    
  43d11a:	push   ebx
  43d11c:	lods   eax,DWORD PTR ds:[esi]
  43d11d:	cld    
  43d11e:	push   ebx
  43d120:	lods   eax,DWORD PTR ds:[esi]
  43d121:	cld    
  43d122:	push   ebx
  43d124:	lods   eax,DWORD PTR ds:[esi]
  43d125:	cld    
  43d126:	push   ebx
  43d128:	lods   eax,DWORD PTR ds:[esi]
  43d129:	cld    
  43d12a:	push   ebx
  43d12c:	lods   eax,DWORD PTR ds:[esi]
  43d12d:	cld    
  43d12e:	push   ebx
  43d130:	lods   eax,DWORD PTR ds:[esi]
  43d131:	cld    
  43d132:	push   ebx
  43d134:	lods   eax,DWORD PTR ds:[esi]
  43d135:	cld    
  43d136:	push   ebx
  43d138:	lods   eax,DWORD PTR ds:[esi]
  43d139:	cld    
  43d13a:	push   ebx
  43d13c:	lods   eax,DWORD PTR ds:[esi]
  43d13d:	cld    
  43d13e:	push   ebx
  43d140:	lods   eax,DWORD PTR ds:[esi]
  43d141:	cld    
  43d142:	push   ebx
  43d144:	lods   eax,DWORD PTR ds:[esi]
  43d145:	cld    
  43d146:	push   ebx
  43d148:	lods   eax,DWORD PTR ds:[esi]
  43d149:	cld    
  43d14a:	push   ebx
  43d14c:	lods   eax,DWORD PTR ds:[esi]
  43d14d:	cld    
  43d14e:	push   ebx
  43d150:	lods   eax,DWORD PTR ds:[esi]
  43d151:	cld    
  43d152:	push   ebx
  43d154:	lods   eax,DWORD PTR ds:[esi]
  43d155:	cld    
  43d156:	push   ebx
  43d158:	lods   eax,DWORD PTR ds:[esi]
  43d159:	cld    
  43d15a:	push   ebx
  43d15c:	lods   eax,DWORD PTR ds:[esi]
  43d15d:	cld    
  43d15e:	inc    DWORD PTR [eax]
  43d160:	add    BYTE PTR [eax],al
  43d162:	repz push es
  43d164:	out    0x3,eax
  43d166:	repz push es
  43d168:	out    0x3,eax
  43d16a:	repz push es
  43d16c:	out    0x3,eax
  43d16e:	repz push es
  43d170:	out    0x3,eax
  43d172:	repz push es
  43d174:	out    0x3,eax
  43d176:	repz push es
  43d178:	out    0x3,eax
  43d17a:	repz push es
  43d17c:	out    0x3,eax
  43d17e:	repz push es
  43d180:	out    0x3,eax
  43d182:	repz push es
  43d184:	out    0x3,eax
  43d186:	repz push es
  43d188:	out    0x3,eax
  43d18a:	repz push es
  43d18c:	out    0x3,eax
  43d18e:	repz push es
  43d190:	out    0x3,eax
  43d192:	repz push es
  43d194:	out    0x3,eax
  43d196:	repz push es
  43d198:	out    0x3,eax
  43d19a:	repz push es
  43d19c:	out    0x3,eax
  43d19e:	repz push es
  43d1a0:	out    0x3,eax
  43d1a2:	repz push es
  43d1a4:	out    0x3,eax
  43d1a6:	repz push es
  43d1a8:	out    0x3,eax
  43d1aa:	repz push es
  43d1ac:	out    0x3,eax
  43d1ae:	repz push es
  43d1b0:	out    0x3,eax
  43d1b2:	repz push es
  43d1b4:	out    0x3,eax
  43d1b6:	repz push es
  43d1b8:	out    0x3,eax
  43d1ba:	repz push es
  43d1bc:	out    0x3,eax
  43d1be:	repz push es
  43d1c0:	out    0x3,eax
  43d1c2:	repz push es
  43d1c4:	out    0x3,eax
  43d1c6:	add    BYTE PTR [eax],al
  43d1c8:	add    bl,dh
  43d1ca:	push   es
  43d1cb:	out    0x3,eax
  43d1cd:	repz push es
  43d1cf:	out    0xf3,eax
  43d1d1:	in     al,0xc2
  43d1d3:	mov    BYTE PTR [ebx],0xf3
  43d1d6:	push   es
  43d1d7:	dec    ebx
  43d1d8:	sbb    cl,BYTE PTR [ebx+0x171ddf00]
  43d1de:	std    
  43d1df:	(bad)  
  43d1e0:	mov    eax,0xa13602e6
  43d1e5:	ficomp WORD PTR [edx+0x36]
  43d1e8:	dec    ecx
  43d1e9:	fnstenv [edx]
  43d1eb:	ss popa 
  43d1ed:	or     DWORD PTR [ebx+0x730e935],ecx
  43d1f3:	add    BYTE PTR [ecx],al
  43d1f5:	test   DWORD PTR [esi],0x3afa3900
  43d1fb:	cmp    eax,DWORD PTR [ecx-0x16]
  43d1fe:	inc    edx
  43d1ff:	cmp    ebp,DWORD PTR [ecx-0x16]
  43d202:	mov    bh,BYTE PTR [edx]
  43d204:	popa   
  43d205:	ficom  DWORD PTR [edx-0x652586c6]
  43d20b:	cmp    al,BYTE PTR [ecx+0x4939a305]
  43d211:	std    
  43d212:	push   0x39
  43d214:	inc    ecx
  43d215:	add    eax,0xd0e90007
  43d21a:	push   es
  43d21b:	add    BYTE PTR [ecx+0x590006f6],bl
  43d221:	cmc    
  43d222:	mov    ds:0x6eed4931,al
  43d227:	xor    DWORD PTR [ebp-0x62ce851b],edx
  43d22d:	add    BYTE PTR [eax],al
  43d22f:	add    ch,bh
  43d231:	retf   0x2531
  43d234:	cmc    
  43d235:	fidiv  DWORD PTR [ecx]
  43d237:	sub    eax,0x5531aaed
  43d23c:	in     eax,0xba
  43d23e:	xor    DWORD PTR ds:0xe5310afd,edi
  43d244:	cmc    
  43d245:	sbb    dh,BYTE PTR [ecx]
  43d247:	int    0xed
  43d249:	jmp    0xdd30:0xfae5d530
  43d250:	std    
  43d251:	dec    edx
  43d252:	xor    DWORD PTR [ebp-0x52cea50b],esp
  43d258:	in     eax,dx
  43d259:	sub    dh,BYTE PTR [ecx]
  43d25b:	add    BYTE PTR [esi+0x10],bh
  43d25e:	je     0x43d297
  43d260:	dec    esi
  43d261:	adc    DWORD PTR [edi+esi*1+0x3794124e],eax
  43d268:	adc    ah,BYTE PTR cs:[edi+esi*1+0x37b4105e]
  43d270:	mov    ss,WORD PTR [eax]
  43d272:	les    esi,FWORD PTR [edi]
  43d274:	dec    esi
  43d275:	adc    ah,dl
  43d277:	aaa    
  43d278:	dec    esi
  43d279:	adc    ah,ah
  43d27b:	aaa    
  43d27c:	mov    esi,0x4e37f410
  43d281:	adc    BYTE PTR [eax+edi*1],al
  43d284:	mov    ds,WORD PTR ds:0x1dae3814
  43d28a:	and    al,0x38
  43d28c:	sahf   
  43d28d:	sbb    eax,0x1d4e3834
  43d292:	inc    esp
  43d293:	cmp    BYTE PTR [eax],al
  43d295:	add    BYTE PTR [eax],al
  43d297:	push   cs
  43d298:	and    edx,DWORD PTR [eax+edi*1+0xe]
  43d29c:	and    esp,DWORD PTR [eax+edi*1-0x2]
  43d2a0:	and    dh,BYTE PTR [eax+edi*1+0x4e]
  43d2a4:	sbb    eax,0x1dce3884
  43d2a9:	xchg   esp,eax
  43d2aa:	cmp    BYTE PTR [esi+0x5e38a41d],ch
  43d2b0:	sbb    eax,0x1d8e38b4
  43d2b5:	les    edi,FWORD PTR [eax]
  43d2b7:	into   
  43d2b8:	sbb    eax,0x1dce38d4
  43d2bd:	in     al,0x38
  43d2bf:	mov    esi,0xce38f41d
  43d2c4:	sbb    eax,0x220e3904
  43d2c9:	adc    al,0x39
  43d2cb:	and    ah,BYTE PTR cs:[ecx+edi*1]
  43d2cf:	push   ds
  43d2d0:	and    dh,BYTE PTR [ecx+edi*1]
  43d2d3:	into   
  43d2d4:	and    eax,DWORD PTR [ecx+edi*1-0xd]
  43d2d8:	imul   ebx,DWORD PTR [ebx],0x1b721a54
  43d2de:	sbb    bl,BYTE PTR fs:[edx+0x420a741b]
  43d2e5:	sbb    al,0x84
  43d2e7:	or     ch,BYTE PTR [edx]
  43d2e9:	sbb    al,0x94
  43d2eb:	cli    
  43d2ec:	push   ecx
  43d2ed:	sbb    al,0xa4
  43d2ef:	cli    
  43d2f0:	cdq    
  43d2f1:	adc    al,0xb4
  43d2f3:	jmp    0x1469:0xeac414a1
  43d2fa:	aam    0x0
  43d2fc:	add    BYTE PTR [eax],al
  43d2fe:	fidiv  DWORD PTR [ecx+0x14]
  43d301:	in     al,0xda
  43d303:	fst    DWORD PTR [esp+esi*8]
  43d306:	retf   0x1481
  43d309:	add    al,0xc9
  43d30b:	test   eax,0xd1b91416
  43d310:	push   ss
  43d311:	and    al,0xb9
  43d313:	fst    DWORD PTR [esi]
  43d315:	xor    al,0x29
  43d317:	loop   0x43d32f
  43d319:	inc    esp
  43d31a:	sub    edx,ebp
  43d31c:	adc    eax,0x15f21954
  43d321:	sbb    DWORD PTR fs:[edx],ebx
  43d324:	push   ss
  43d325:	je     0x43d330
  43d327:	ret    0x8416
  43d32a:	or     DWORD PTR [edx],ebp
  43d32c:	push   ss
  43d32d:	xchg   esp,eax
  43d32e:	stc    
  43d32f:	push   ecx
  43d330:	push   ss
  43d331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d332:	stc    
  43d333:	cdq    
  43d334:	adc    eax,0x15a1e9b4
  43d339:	(bad)  
  43d33a:	jmp    0xda17e928
  43d33f:	icebp  
  43d340:	adc    eax,0x1659d9e4
  43d345:	hlt    
  43d346:	leave  
  43d347:	add    DWORD PTR [esi],edx
  43d349:	add    al,0xc8
  43d34b:	test   eax,0xd1b81417
  43d350:	pop    ss
  43d351:	and    al,0xb8
  43d353:	push   es
  43d354:	rcr    DWORD PTR [eax],cl
  43d356:	daa    
  43d357:	cld    
  43d358:	ficomp DWORD PTR [eax]
  43d35a:	das    
  43d35b:	cld    
  43d35c:	mov    ds:0xaafc4718,al
  43d361:	sbb    BYTE PTR [eax],al
  43d363:	add    BYTE PTR [eax],al
  43d365:	dec    edi
  43d366:	cld    
  43d367:	xchg   edx,eax
  43d368:	sbb    BYTE PTR [edi-0x4],al
  43d36b:	jp     0x43d385
  43d36d:	outs   dx,DWORD PTR ds:[esi]
  43d36e:	sti    
  43d36f:	bound  ebx,QWORD PTR [ecx]
  43d371:	addr16 sti 
  43d373:	dec    edx
  43d374:	sbb    DWORD PTR [edi+0x671892fb],ecx
  43d37a:	sti    
  43d37b:	call   0xc718:0xa2fbaf18
  43d382:	sti    
  43d383:	stos   BYTE PTR es:[edi],al
  43d384:	sbb    BYTE PTR [edi-0x78e72d05],cl
  43d38a:	sti    
  43d38b:	mov    edx,0xe302ef18
  43d390:	pop    ss
  43d391:	out    0x2,eax
  43d393:	retf   
  43d394:	pop    ss
  43d395:	iret   
  43d396:	add    dl,bl
  43d398:	pop    ss
  43d399:	daa    
  43d39a:	add    ebx,ebx
  43d39c:	pop    ss
  43d39d:	scas   eax,DWORD PTR es:[edi]
  43d39e:	add    ah,BYTE PTR [ebx]
  43d3a0:	sbb    bh,al
  43d3a2:	add    ch,BYTE PTR [ebx]
  43d3a4:	sbb    bh,cl
  43d3a6:	add    dl,BYTE PTR [ebx]
  43d3a8:	sbb    bh,al
  43d3aa:	add    bh,bl
  43d3ac:	pop    ss
  43d3ad:	outs   dx,DWORD PTR ds:[esi]
  43d3ae:	add    ah,BYTE PTR [ebx+0x17]
  43d3b1:	add    cl,BYTE PTR [bp+di+0x17]
  43d3b5:	pop    DWORD PTR [edx]
  43d3b7:	xchg   ebx,eax
  43d3b8:	pop    ss
  43d3b9:	add    ah,BYTE PTR [bx]
  43d3bc:	pop    ss
  43d3bd:	aaa    
  43d3be:	add    ch,BYTE PTR [edi]
  43d3c0:	pop    ss
  43d3c1:	pop    ss
  43d3c2:	add    dl,BYTE PTR [edi+0x17]
  43d3c5:	pop    ss
  43d3c6:	add    dl,BYTE PTR [ebx]
  43d3c8:	pop    ss
  43d3c9:	add    BYTE PTR [eax],al
  43d3cb:	add    bh,al
  43d3cd:	add    ebx,edi
  43d3cf:	push   ss
  43d3d0:	scas   eax,DWORD PTR es:[edi]
  43d3d1:	add    DWORD PTR [eax],eax
  43d3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d3d4:	in     eax,0x5a
  43d3d6:	cmp    ecx,DWORD PTR [ebp-0x6ac4d523]
  43d3dc:	add    eax,0xfd9d3b33
  43d3e1:	cmp    BYTE PTR [edx],0x65
  43d3e4:	add    eax,0xfd6d3a93
  43d3e9:	bound  edi,QWORD PTR [edx]
  43d3eb:	push   ebp
  43d3ec:	in     eax,0x72
  43d3ee:	cmp    bh,BYTE PTR ds:0x253ac2dd
  43d3f4:	in     eax,0xd2
  43d3f6:	cmp    cl,BYTE PTR ds:0xe93aa2dd
  43d3fc:	inc    eax
  43d3fd:	pop    es
  43d3fe:	add    BYTE PTR [ecx],ah
  43d400:	out    dx,eax
  43d401:	push   es
  43d402:	add    ch,dh
  43d404:	sti    
  43d405:	out    0x32,al
  43d407:	add    eax,0x1532eefa
  43d40c:	jmp    0x32fe:0xebf532f6
  43d413:	cmc    
  43d414:	fild   DWORD PTR [esi+0x33]
  43d417:	sbb    eax,0xb132c2da
  43d41c:	or     cl,bl
  43d41e:	xor    al,BYTE PTR [ebp+0x9]
  43d421:	outs   dx,DWORD PTR ds:[esi]
  43d422:	xor    DWORD PTR [ebp-0x7],eax
  43d425:	jbe    0x43d458
  43d427:	push   ebp
  43d428:	stc    
  43d429:	ret    0xb137
  43d42c:	push   DWORD PTR [edx+0x8137]
  43d432:	add    bh,dh
  43d434:	mov    edx,0xbe70e937
  43d439:	clc    
  43d43a:	cmc    
  43d43b:	lock push es
  43d43d:	add    BYTE PTR [ebp-0x2],dl
  43d440:	mov    dh,0x36
  43d442:	push   ebp
  43d443:	idiv   BYTE PTR [esi+0x6ee5536]
  43d449:	ss in  eax,0xe6
  43d44c:	push   cs
  43d44d:	add    BYTE PTR ss:[esi],al
  43d450:	or     al,0xd4
  43d452:	cmp    dl,dl
  43d454:	or     al,0xdc
  43d456:	cmp    ch,BYTE PTR [edx-0x45c51bf4]
  43d45c:	or     al,0xf4
  43d45e:	cmp    dl,BYTE PTR [edx]
  43d460:	or     eax,0xcda3afc
  43d465:	add    al,0x3b
  43d467:	ror    BYTE PTR [esp+eiz*2],cl
  43d46a:	cmp    esi,DWORD PTR [edx+0xc]
  43d46d:	ins    BYTE PTR es:[edi],dx
  43d46e:	cmp    ecx,DWORD PTR [edx+0xd]
  43d471:	je     0x43d4ae
  43d473:	jb     0x43d481
  43d475:	jl     0x43d4b2
  43d477:	dec    edx
  43d478:	push   cs
  43d479:	test   BYTE PTR [ebx],bh
  43d47b:	push   edx
  43d47c:	push   cs
  43d47d:	mov    WORD PTR [ebx],?
  43d47f:	sub    cl,BYTE PTR ds:0xc723b94
  43d485:	mov    eax,0xc00c863b
  43d48a:	cmp    esp,DWORD PTR [edx+0xc]
  43d48d:	in     al,0x3b
  43d48f:	cli    
  43d490:	push   ss
  43d491:	hlt    
  43d492:	cmp    al,0xb2
  43d494:	or     eax,0x3cfc
  43d499:	add    BYTE PTR [edx-0x6dc2fbea],cl
  43d49f:	push   ss
  43d4a0:	or     al,0x3d
  43d4a2:	push   0x16
  43d4a4:	adc    al,0x3d
  43d4a6:	repnz pop ss
  43d4a8:	sbb    al,0x3d
  43d4aa:	sub    dl,BYTE PTR [esi]
  43d4ac:	and    al,0x3d
  43d4ae:	dec    edx
  43d4af:	cmp    ecx,edi
  43d4b1:	jmp    esi
  43d4b3:	add    al,BYTE PTR [eax]
  43d4b5:	add    BYTE PTR [esi+0x15],al
  43d4b8:	xor    BYTE PTR [esi+ecx*8],0x15
  43d4bc:	mov    BYTE PTR [esi+edx*4],dh
  43d4bf:	adc    eax,0x15be3490
  43d4c4:	call   0x1d63c6fd
  43d4c9:	xor    eax,0xf817eef3
  43d4ce:	(bad)  
  43d4d0:	push   ss
  43d4d1:	dec    ebx
  43d4d2:	lds    esi,FWORD PTR [edi+edx*1]
  43d4d5:	stc    
  43d4d6:	mov    ebp,0xc44d1509
  43d4db:	mov    eax,0xb7bae70b
  43d4e0:	or     dh,BYTE PTR [ebx+0x6409e429]
  43d4e6:	daa    
  43d4e7:	or     BYTE PTR [bp+si-0x11e1],dh
  43d4ec:	or     BYTE PTR [ecx+0x16],bl
  43d4ef:	or     eax,0x9b0d3310
  43d4f4:	push   cs
  43d4f5:	add    ax,0xf2e
  43d4f9:	xchg   edx,eax
  43d4fa:	std    
  43d4fb:	jmp    0x43d50b
  43d4fd:	int3   
  43d4fe:	add    BYTE PTR [eax],al
  43d500:	add    ch,dh
  43d502:	adc    al,0xf
  43d504:	fucomi st,st(5)
  43d506:	mov    dl,0xf
  43d508:	or     eax,0x240fbbe4
  43d50d:	fcom   QWORD PTR [edi+ecx*1]
  43d510:	inc    ebx
  43d511:	aam    0xea
  43d513:	push   cs
  43d514:	pop    ebp
  43d515:	int3   
  43d516:	inc    esi
  43d517:	vmwrite eax,esp
  43d51a:	or     BYTE PTR [esi],0x0
  43d51d:	rep lods eax,DWORD PTR ds:[esi]
  43d51f:	pushf  
  43d520:	push   DWORD PTR [esi+eax*2-0x3]
  43d524:	push   ebx
  43d526:	add    DWORD PTR [eiz*2-0x40ebd4dd],edx
  43d52d:	and    eax,DWORD PTR [ecx-0x3fdc20ed]
  43d533:	or     eax,0xcf4021e
  43d538:	pop    ebx
  43d539:	add    dl,BYTE PTR [edi]
  43d53b:	or     eax,0xd310269
  43d540:	nop
  43d541:	add    ch,ch
  43d543:	or     al,0xc6
  43d545:	loop   0x43d54d
  43d547:	cmp    DWORD PTR [ebx],edx
  43d549:	dec    eax
  43d54a:	not    BYTE PTR [ebp+0x2bf96516]
  43d550:	push   ss
  43d551:	push   ss
  43d552:	stc    
  43d553:	fcom   QWORD PTR [ecx+ebx*8]
  43d556:	mul    DWORD PTR [esp+edx*1+0x14baf7ac]
  43d55d:	ja     0x43d557
  43d55f:	dec    esp
  43d560:	adc    eax,0x17a0f813
  43d565:	add    BYTE PTR [eax],al
  43d567:	add    BYTE PTR [esi+0x571813f2],al
  43d56d:	repnz xchg edx,eax
  43d56f:	push   ss
  43d570:	jle    0x43d563
  43d572:	loop   0x43d58d
  43d574:	cmc    
  43d575:	hlt    
  43d576:	mov    eax,0xaaf50219
  43d57b:	sbb    DWORD PTR ds:0x731993f5,ebp
  43d581:	hlt    
  43d582:	pusha  
  43d583:	sbb    ah,BYTE PTR [esi-0xc]
  43d586:	dec    ebp
  43d587:	sbb    cl,BYTE PTR [esp+esi*8-0xba7e678]
  43d58e:	xchg   ebp,eax
  43d58f:	sbb    DWORD PTR [ebx-0xc],ebx
  43d592:	xchg   ecx,eax
  43d593:	sbb    DWORD PTR [eax-0x43e6630c],esi
  43d599:	hlt    
  43d59a:	cdq    
  43d59b:	sbb    DWORD PTR [edi-0x6be63a0c],esp
  43d5a1:	hlt    
  43d5a2:	rcr    BYTE PTR [ecx],0x80
  43d5a5:	hlt    
  43d5a6:	lods   eax,DWORD PTR ds:[esi]
  43d5a7:	sbb    DWORD PTR [esi-0xc],ebp
  43d5aa:	in     eax,dx
  43d5ab:	sbb    dh,dh
  43d5ad:	repz fistp DWORD PTR [eax]
  43d5b0:	mov    al,0xf3
  43d5b2:	sbb    al,0x19
  43d5b4:	shl    bl,0x1
  43d5b7:	sbb    edx,ecx
  43d5b9:	repz push ebp
  43d5bb:	sbb    BYTE PTR [edi+0x781836f3],cl
  43d5c1:	repz jmp FWORD PTR [ecx-0x61cf3125]
  43d5c8:	or     ebp,DWORD PTR [ebp+0xef30]
  43d5ce:	add    al,bh
  43d5d0:	out    0x37,eax
  43d5d2:	and    edi,ebp
  43d5d4:	push   ecx
  43d5d5:	cmp    ah,al
  43d5d7:	call   0xf8bd0d5f
  43d5dc:	jo     0x43d615
  43d5de:	cmp    al,0xc9
  43d5e1:	aaa    
  43d5e2:	and    al,ch
  43d5e4:	(bad)  [edi]
  43d5e6:	inc    ebx
  43d5e7:	call   0xfa230cef
  43d5ec:	sbb    dh,BYTE PTR [edi]
  43d5ee:	retf   0xe1f9
  43d5f1:	ss into 
  43d5f3:	jmp    0xea160ced
  43d5f8:	push   edx
  43d5f9:	aaa    
  43d5fa:	pop    ebp
  43d5fb:	stc    
  43d5fc:	(bad)  
  43d5fd:	ss xor al,0xf9
  43d600:	test   eax,0x1feeef36
  43d605:	ss popf 
  43d607:	out    0x50,al
  43d609:	ss mov esi,edi
  43d60c:	sub    dh,BYTE PTR [esi]
  43d60e:	pop    ebx
  43d60f:	stc    
  43d610:	xor    DWORD PTR ds:0x357de994,0xffffffb4
  43d617:	jmp    0xfa010bf4
  43d61c:	test   eax,0xbff9be35
  43d621:	xor    eax,0x3514e9e6
  43d626:	shr    cl,cl
  43d628:	sbb    BYTE PTR ds:0x34f0f9f5,dh
  43d62e:	cmp    bh,al
  43d630:	push   ecx
  43d631:	xor    eax,0x3e
  43d636:	call   0xe8bd0b60
  43d63b:	xchg   ebp,eax
  43d63c:	xor    al,0x6e
  43d63e:	clc    
  43d63f:	push   0xe050034
  43d644:	into   
  43d645:	cmp    edx,DWORD PTR [ecx-0x2bc41ff2]
  43d64b:	push   ss
  43d64c:	ins    DWORD PTR es:[edi],dx
  43d64d:	cmp    al,0x21
  43d64f:	or     bh,BYTE PTR [edi+0x3c]
  43d652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d653:	push   ss
  43d654:	ret    
  43d655:	cmp    al,0xd9
  43d657:	push   ss
  43d658:	add    BYTE PTR ds:0x3d0d1704,bh
  43d65e:	cmc    
  43d65f:	pop    ss
  43d660:	xor    eax,0x7817213d
  43d665:	cmp    eax,0x3d831797
  43d66a:	fwait
  43d66b:	pop    ss
  43d66c:	mov    ds:0xcc186b3d,eax
  43d671:	cmp    eax,0x3ddf182b
  43d676:	out    dx,al
  43d677:	pop    ss
  43d678:	or     DWORD PTR [esi],edi
  43d67a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d67b:	or     ebp,DWORD PTR [esi+edi*1]
  43d67e:	xchg   BYTE PTR [ebx],cl
  43d680:	arpl   WORD PTR [esi],di
  43d682:	daa    
  43d683:	or     DWORD PTR [esi],eax
  43d685:	aas    
  43d686:	push   ss
  43d687:	or     al,bl
  43d689:	aas    
  43d68a:	fisttp DWORD PTR [ecx]
  43d68c:	iret   
  43d68d:	aas    
  43d68e:	lahf   
  43d68f:	or     BYTE PTR [eax],al
  43d691:	add    BYTE PTR [edx+0x4afff895],bl
  43d697:	add    eax,0x0
  43d69c:	add    BYTE PTR [ebx],ch
  43d69e:	adc    eax,DWORD PTR [edi]
  43d6a0:	xor    esi,edx
  43d6a2:	adc    ecx,DWORD PTR [ecx+0x31]
  43d6a5:	lds    edx,FWORD PTR [ebx]
  43d6a7:	xor    DWORD PTR [ecx],0x31a81326
  43d6ad:	not    BYTE PTR [edx]
  43d6af:	mov    bl,0x31
  43d6b1:	xchg   ebp,eax
  43d6b2:	adc    cl,dh
  43d6b4:	xor    DWORD PTR [edi+0x12],edi
  43d6b7:	or     DWORD PTR [edx],esi
  43d6b9:	pop    esi
  43d6ba:	pop    ss
  43d6bb:	sbb    eax,0xedaf332
  43d6c0:	cmp    DWORD PTR [ecx],eax
  43d6c2:	pop    ds
  43d6c3:	push   cs
  43d6c4:	test   BYTE PTR [ecx],al
  43d6c6:	movzx  eax,WORD PTR es:[ecx]
  43d6ca:	bound  ecx,QWORD PTR [esi]
  43d6cc:	fadd   QWORD PTR [ecx]
  43d6ce:	ror    DWORD PTR ds:0xdf3e05e,cl
  43d6d4:	das    
  43d6d5:	fistp  WORD PTR [eax]
  43d6d7:	sbb    BYTE PTR [ecx-0x19],al
  43d6da:	push   0x10
  43d6dc:	jo     0x43d6bd
  43d6de:	cdq    
  43d6df:	adc    bl,dl
  43d6e1:	mov    DWORD PTR [edx+0x11],0x17ddbe03
  43d6e8:	data16 (bad) 
  43d6ea:	jae    0x43d703
  43d6ec:	xchg   ebx,eax
  43d6ed:	mov    esi,0x26c91853
  43d6f2:	adc    DWORD PTR [eax],ebx
  43d6f4:	call   FWORD PTR [esi]
  43d6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d6f7:	adc    al,BYTE PTR [eax+0x25]
  43d6fa:	(bad)  
  43d6fb:	adc    ah,BYTE PTR [edi+0x1d]
  43d6fe:	adc    DWORD PTR [edx],0x9b
  43d704:	add    eax,0xfde312f7
  43d709:	adc    DWORD PTR [ebx],edx
  43d70b:	sub    DWORD PTR [ebx+esi*2],eax
  43d70e:	adc    DWORD PTR [esp+edi*8-0x75],ecx
  43d712:	adc    DWORD PTR [edx-0x1c],ebp
  43d715:	dec    edx
  43d716:	adc    ch,BYTE PTR [eax-0x7ced9c24]
  43d71c:	fild   DWORD PTR [eax+0x22da490b]
  43d722:	add    eax,0x611caef
  43d727:	inc    ebx
  43d728:	leave  
  43d729:	hlt    
  43d72a:	add    eax,0x575b9bf
  43d72f:	fdivr  QWORD PTR [ecx+0x28990705]
  43d735:	sub    al,BYTE PTR [edi]
  43d737:	stc    
  43d738:	sub    BYTE PTR [edi],al
  43d73a:	lds    ecx,FWORD PTR [edi]
  43d73c:	mov    dl,0xfa
  43d73e:	ss adc dl,al
  43d741:	cli    
  43d742:	xor    edx,DWORD PTR [eax]
  43d744:	(bad)  
  43d746:	adc    BYTE PTR [eax],dl
  43d748:	leave  
  43d749:	cli    
  43d74a:	pop    esp
  43d74b:	adc    BYTE PTR [ebx+edi*8-0x61cef81],dl
  43d752:	mov    dl,0xe
  43d754:	js     0x43d750
  43d756:	push   ecx
  43d757:	push   cs
  43d758:	dec    esp
  43d759:	stc    
  43d75a:	out    0xc3,al
  43d75c:	sbb    al,0xb8
  43d75e:	mov    dh,0x3
  43d760:	repz push es
  43d762:	into   
  43d763:	adc    ebx,DWORD PTR [esi-0x9]
  43d766:	pop    ss
  43d767:	adc    eax,DWORD PTR [eax]
  43d769:	add    BYTE PTR [eax],al
  43d76b:	cdq    
  43d76c:	cmc    
  43d76d:	jne    0x43d782
  43d76f:	test   eax,0x4411cef4
  43d774:	cmc    
  43d775:	jns    0x43d789
  43d777:	push   ds
  43d778:	hlt    
  43d779:	mov    ch,0x10
  43d77b:	sbb    dh,bl
  43d77d:	sbb    BYTE PTR cs:[edx],cl
  43d780:	repnz outs dx,BYTE PTR ds:[esi]
  43d782:	pop    ss
  43d783:	fdivr  st(1),st
  43d785:	rcl    DWORD PTR ds:0x14e6f08a,1
  43d78b:	ins    BYTE PTR es:[edi],dx
  43d78c:	(bad)  
  43d78d:	pop    esi
  43d78e:	or     al,0x91
  43d790:	std    
  43d791:	sbb    DWORD PTR [ebx],ecx
  43d793:	mov    edx,0x9c0945fd
  43d798:	cli    
  43d799:	scas   eax,DWORD PTR es:[edi]
  43d79a:	push   cs
  43d79b:	dec    edi
  43d79c:	stc    
  43d79d:	sbb    cl,BYTE PTR [esi]
  43d79f:	or     ecx,edi
  43d7a1:	ror    BYTE PTR ds:0xd4ff831,cl
  43d7a7:	pop    ebx
  43d7a8:	imul   DWORD PTR [eax-0x18f90cf4]
  43d7ae:	mov    bl,0x7c
  43d7b0:	mov    bh,0x4a
  43d7b2:	add    al,0xf3
  43d7b4:	push   es
  43d7b5:	add    ah,ah
  43d7b7:	add    BYTE PTR [ecx+0x2f],ah
  43d7ba:	les    eax,FWORD PTR [eax]
  43d7bc:	xor    ch,BYTE PTR [edi]
  43d7be:	pop    ecx
  43d7bf:	add    ebp,eax
  43d7c1:	cs clc 
  43d7c3:	add    bl,BYTE PTR [eax]
  43d7c5:	cs and esp,ecx
  43d7c8:	dec    ecx
  43d7c9:	cs xor esp,ecx
  43d7cc:	es cs sti 
  43d7cf:	add    BYTE PTR [eax],al
  43d7d1:	add    dl,ah
  43d7d3:	das    
  43d7d4:	cs push 0x532d85e2
  43d7da:	add    ch,BYTE PTR [ebx+0x2d]
  43d7dd:	jge    0x43d7e1
  43d7df:	jecxz  0x43d80d
  43d7e1:	and    DWORD PTR [edx],eax
  43d7e3:	dec    esp
  43d7e4:	sub    eax,0x2c7a03a3
  43d7e9:	mov    edx,0x303439e4
  43d7ee:	fadd   QWORD PTR ds:0x9e53933
  43d7f4:	xor    ebp,edi
  43d7f6:	jmp    0xf9f70f42
  43d7fb:	jg     0x43d833
  43d7fd:	outs   dx,DWORD PTR ds:[esi]
  43d7fe:	stc    
  43d7ff:	lds    esi,FWORD PTR [esi]
  43d801:	daa    
  43d802:	jmp    0xeac40e64
  43d807:	int3   
  43d808:	xor    eax,0x355cfa1e
  43d80d:	mov    ?,ebx
  43d80f:	imul   esi,DWORD PTR [edx+edx*1],0xffffffeb
  43d813:	adc    DWORD PTR [edx+edi*2],edi
  43d816:	in     al,0x79
  43d818:	cmp    edi,DWORD PTR [ecx-0x16c6e102]
  43d81e:	nop
  43d81f:	mov    dh,0xf8
  43d821:	cmp    edi,esi
  43d823:	push   es
  43d824:	add    BYTE PTR [edi+edi*8+0x1a],dl
  43d828:	das    
  43d829:	mov    ds:0x592d7ee6,eax
  43d82e:	fmul   QWORD PTR [edx+0x1dfb002c]
  43d834:	mov    edx,0x33
  43d839:	adc    DWORD PTR [edi],edx
  43d83b:	mov    edx,0x2f18f034
  43d840:	ss mov cl,0x19
  43d843:	sbb    edi,DWORD PTR [eax]
  43d845:	and    al,0x3
  43d847:	push   ebx
  43d848:	cmp    dl,bl
  43d84a:	add    dl,dl
  43d84c:	cmp    dl,ah
  43d84e:	add    ebx,DWORD PTR [edx+0x7b047d39]
  43d854:	cmp    edx,esp
  43d856:	add    eax,0xfeca3bbd
  43d85b:	inc    esp
  43d85c:	cmp    eax,0x3e820040
  43d861:	ret    
  43d862:	add    BYTE PTR [edx+0x17e3e],ah
  43d868:	aas    
  43d869:	dec    ebp
  43d86a:	add    DWORD PTR [edx+0x3f],edx
  43d86d:	add    DWORD PTR ds:[eax],eax
  43d870:	add    BYTE PTR [edx],bl
  43d872:	(bad)  
  43d874:	call   FWORD PTR [esi+0xa]
  43d877:	add    BYTE PTR [eax],al
  43d879:	dec    esi
  43d87a:	sbb    dl,BYTE PTR [eax+0x31]
  43d87d:	jge    0x43d89a
  43d87f:	mov    ch,0x31
  43d881:	or     bl,BYTE PTR [eax+eax*2]
  43d884:	xor    ah,BYTE PTR [esi+0x1d]
  43d887:	(bad)  
  43d888:	xor    edx,DWORD PTR [esi+ebx*1]
  43d88b:	fidiv  WORD PTR [ebx]
  43d88d:	loop   0x43d8ac
  43d88f:	add    al,0x34
  43d891:	rol    DWORD PTR ds:0x1851351f,1
  43d897:	jl     0x43d8cf
  43d899:	dec    ebx
  43d89a:	sbb    DWORD PTR [edi+0x36],ebp
  43d8a0:	out    0x18,al
  43d8a2:	(bad)  
  43d8a3:	aaa    
  43d8a4:	push   esp
  43d8a5:	add    DWORD PTR [eax+0x38],edi
  43d8a8:	pop    ss
  43d8a9:	add    ecx,DWORD PTR [ebx+0x39]
  43d8ac:	ds add al,0x7a
  43d8af:	cmp    ebx,esi
  43d8b1:	or     DWORD PTR [ecx],0xb7c8fc
  43d8b7:	inc    edx
  43d8b8:	mov    edi,0xb640013b
  43d8bd:	addr16 pop es
  43d8bf:	icebp  
  43d8c0:	cs into 
  43d8c2:	push   es
  43d8c3:	push   edi
  43d8c4:	and    al,0x27
  43d8c6:	push   es
  43d8c7:	add    bl,dh
  43d8c9:	lahf   
  43d8ca:	cld    
  43d8cb:	(bad)  
  43d8cc:	push   esp
  43d8cd:	out    0x3,eax
  43d8cf:	add    bl,dh
  43d8d1:	aam    0xc
  43d8d3:	push   edi
  43d8d4:	add    eax,DWORD PTR [edx+0x14]
  43d8d7:	das    
  43d8d8:	add    ebp,esp
  43d8da:	adc    DWORD PTR [ecx+eax*1+0x67],ecx
  43d8de:	adc    bh,BYTE PTR [edi-0x20]
  43d8e1:	lahf   
  43d8e2:	or     eax,0xd08dc3e
  43d8e7:	xchg   ecx,eax
  43d8e8:	in     al,0x3f
  43d8ea:	push   cs
  43d8eb:	pop    ds
  43d8ec:	fld    TBYTE PTR [esi+0x4]
  43d8ef:	je     0x43d8bc
  43d8f1:	sub    al,BYTE PTR ds:0x523cb93
  43d8f7:	sahf   
  43d8f8:	mov    ebx,0xbbb00499
  43d8fd:	cmp    eax,0xe22bbc05
  43d902:	add    al,0xc6
  43d904:	add    BYTE PTR [eax],al
  43d906:	add    BYTE PTR [ebx],ch
  43d908:	adc    DWORD PTR ds:0x5001bd7,eax
  43d90e:	out    0x1b,eax
  43d910:	add    al,0x5
  43d912:	sbb    BYTE PTR [edx],cl
  43d914:	mov    esi,0x730a210b
  43d919:	or     esi,DWORD PTR [ebx]
  43d91b:	cli    
  43d91c:	enter  0x3f0b,0xfa
  43d920:	ins    BYTE PTR es:[edi],dx
  43d921:	or     ecx,DWORD PTR [ecx-0x16]
  43d924:	xchg   edx,eax
  43d925:	or     ebx,DWORD PTR [edx-0x16]
  43d928:	mov    DWORD PTR [ebx],ecx
  43d92a:	imul   ebx,edx,0x6
  43d92d:	pop    ebx
  43d92e:	or     ebx,DWORD PTR [esi+ebp*8]
  43d931:	mov    dh,0xb
  43d933:	shl    eax,1
  43d935:	adc    cl,BYTE PTR [esi]
  43d937:	and    cl,dh
  43d939:	lods   eax,DWORD PTR ds:[esi]
  43d93a:	push   cs
  43d93b:	mov    ecx,0x150d1eef
  43d940:	lock fwait
  43d942:	or     eax,0xf3e706f3
  43d947:	gs mov ah,0x6
  43d94a:	add    al,0xf3
  43d94c:	push   es
  43d94d:	dec    esi
  43d94e:	or     ecx,DWORD PTR [eax+esi*8-0xdf8f934]
  43d955:	cld    
  43d956:	push   es
  43d957:	jae    0x43d94e
  43d959:	inc    esi
  43d95a:	or     bh,BYTE PTR [edi-0xb]
  43d95d:	stos   DWORD PTR es:[edi],eax
  43d95e:	or     al,BYTE PTR [ebp-0xb]
  43d961:	add    cl,BYTE PTR [ecx]
  43d963:	xor    ah,0xe6
  43d966:	and    esp,DWORD PTR [esp+esi*4]
  43d969:	or     al,BYTE PTR [ebx]
  43d96b:	add    BYTE PTR [eax],al
  43d96d:	add    bl,dh
  43d96f:	push   es
  43d970:	pushf  
  43d971:	adc    al,0xa6
  43d973:	cmc    
  43d974:	sahf   
  43d975:	adc    esp,DWORD PTR [edi]
  43d977:	idiv   BYTE PTR [ebp+0x5bf87715]
  43d97d:	adc    ch,BYTE PTR [esi-0x3]
  43d980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d981:	adc    BYTE PTR [edi],al
  43d983:	cld    
  43d984:	mov    ds:0xbbef460b,eax
  43d989:	or     edi,DWORD PTR [esi-0x12]
  43d98c:	jl     0x43d99a
  43d98e:	(bad)  
  43d98f:	out    dx,al
  43d990:	and    ecx,DWORD PTR [ebx+edi*8]
  43d993:	in     eax,dx
  43d994:	xchg   BYTE PTR [edx],cl
  43d996:	push   ebp
  43d997:	out    dx,al
  43d998:	or     BYTE PTR [edx],0x40
  43d99b:	out    dx,al
  43d99c:	lea    ecx,[edx]
  43d99e:	cmp    ch,dh
  43d9a0:	push   0xb
  43d9a2:	ins    BYTE PTR es:[edi],dx
  43d9a3:	in     eax,dx
  43d9a4:	push   0xffed7e0b
  43d9a9:	push   eax
  43d9aa:	clc    
  43d9ab:	(bad)  
  43d9ac:	ss dec ebx
  43d9ae:	call   0xe9d91018
  43d9b3:	arpl   WORD PTR [esi],si
  43d9b5:	xchg   edi,eax
  43d9b6:	stc    
  43d9b7:	jns    0x43d9ef
  43d9b9:	test   eax,0xa336c7f9
  43d9be:	jmp    0xe9e11080
  43d9c3:	(bad)  [esi]
  43d9c5:	lahf   
  43d9c6:	stc    
  43d9c7:	shl    DWORD PTR [esi],1
  43d9c9:	sar    ecx,0x9f
  43d9cc:	ss mov ebx,0xa536b5e9
  43d9d2:	add    BYTE PTR [eax],al
  43d9d4:	add    cl,ch
  43d9d6:	mov    bl,0x36
  43d9d8:	out    0xfe,eax
  43d9da:	or     DWORD PTR [esi],esi
  43d9dc:	stc    
  43d9dd:	not    BYTE PTR [edi]
  43d9df:	ss repz out dx,al
  43d9e2:	or     eax,0xebe6cd36
  43d9e7:	xor    eax,0x35e1fecf
  43d9ec:	mov    cl,0xf6
  43d9ee:	out    dx,eax
  43d9ef:	xor    eax,0x3645ed2b
  43d9f4:	mov    ch,0xe6
  43d9f6:	inc    ebx
  43d9f7:	ss mov bh,0xfe
  43d9fa:	pop    ecx
  43d9fb:	ss leave 
  43d9fd:	mul    BYTE PTR [edi]
  43d9ff:	ss ret 
  43da01:	out    dx,al
  43da02:	sbb    eax,0x3be6bd36
  43da07:	ss mov edi,0x613633fe
  43da0d:	idiv   BYTE PTR [ebp+0x35]
  43da10:	pop    ebx
  43da11:	out    dx,al
  43da12:	xchg   edi,eax
  43da13:	xor    eax,0x3591e685
  43da18:	inc    edi
  43da19:	(bad)  
  43da1a:	imul   esi,DWORD PTR ds:0x3575f659,0x53
  43da21:	out    dx,al
  43da22:	outs   dx,DWORD PTR ds:[esi]
  43da23:	xor    eax,0xc1040600
  43da28:	cmp    bl,ah
  43da2a:	add    ecx,ebx
  43da2c:	cmp    al,BYTE PTR [edx]
  43da2e:	add    al,0xd5
  43da30:	cmp    ch,al
  43da32:	add    ebx,edi
  43da34:	cmp    bh,BYTE PTR [esi+0x3ae8fd]
  43da3a:	add    BYTE PTR [eax],al
  43da3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43da3d:	std    
  43da3e:	repnz cmp bl,BYTE PTR [edx-0x6fc50303]
  43da45:	std    
  43da46:	push   es
  43da47:	cmp    edx,DWORD PTR [esi+0x4c3b10fd]
  43da4d:	std    
  43da4e:	sbb    bh,BYTE PTR [ebx]
  43da50:	repnz std 
  43da52:	and    al,0x3b
  43da54:	pop    eax
  43da55:	std    
  43da56:	cmp    ecx,DWORD PTR cs:[esi-0x3]
  43da5a:	cmp    BYTE PTR [ebx],bh
  43da5c:	adc    al,0xfe
  43da5e:	inc    edx
  43da5f:	cmp    ecx,DWORD PTR [edx]
  43da61:	dec    BYTE PTR [ebx+edi*1+0x0]
  43da65:	(bad)  
  43da66:	push   esi
  43da67:	cmp    esp,esi
  43da69:	std    
  43da6a:	pusha  
  43da6b:	cmp    edi,esp
  43da6d:	std    
  43da6e:	push   0x3b
  43da70:	and    bh,ch
  43da72:	je     0x43daaf
  43da74:	mov    ch,bh
  43da76:	jle    0x43dab3
  43da78:	sahf   
  43da79:	std    
  43da7a:	mov    BYTE PTR [ebx],bh
  43da7c:	test   ch,bh
  43da7e:	xchg   edx,eax
  43da7f:	cmp    edi,DWORD PTR [edx-0x2]
  43da82:	pushf  
  43da83:	cmp    edi,DWORD PTR [esi-0x3]
  43da86:	test   al,0x3b
  43da88:	ins    DWORD PTR es:[edi],dx
  43da89:	inc    bl
  43da8b:	cmp    ebx,DWORD PTR [esi]
  43da8d:	dec    cl
  43da8f:	cmp    eax,DWORD PTR [ebx]
  43da91:	(bad)  
  43da92:	(bad)  
  43da93:	cmp    esi,DWORD PTR [esi+edi*8]
  43da96:	jmp    0x43dad3
  43da98:	stc    
  43da99:	std    
  43da9a:	lock cmp ebx,eax
  43da9d:	or     edi,edi
  43da9f:	cmp    eax,DWORD PTR [eax]
  43daa1:	add    BYTE PTR [eax],al
  43daa3:	repz mov bh,0x0
  43daa6:	and    bh,bh
  43daa8:	leave  
  43daa9:	add    BYTE PTR [edi+esi*8],ch
  43daac:	ins    DWORD PTR es:[edi],dx
  43daad:	add    BYTE PTR [edi+0x590840ef],dl
  43dab3:	in     eax,0x81
  43dab5:	add    ah,BYTE PTR [ebp+0x40019ddd]
  43dabb:	aam    0xf5
  43dabd:	add    BYTE PTR [ebx-0x34],ah
  43dac0:	cmp    DWORD PTR [edx],eax
  43dac2:	call   0x99bc:0xaa0181c4
  43dac9:	add    DWORD PTR [edx+0x161b4],edi
  43dacf:	repz lahf 
  43dad1:	or     al,0xff
  43dad3:	fs fwait
  43dad5:	cld    
  43dad6:	push   ebx
  43dad8:	sbb    dl,BYTE PTR [edx*2+0x5712ed23]
  43dadf:	add    al,BYTE PTR [edx]
  43dae1:	adc    edx,DWORD PTR [ecx+eax*1]
  43dae4:	sti    
  43dae5:	or     eax,0xe1c015d
  43daea:	test   BYTE PTR [ecx],al
  43daec:	sub    BYTE PTR [edi],cl
  43daee:	call   0xdfe1:0xe70f55e1
  43daf5:	or     al,0x41
  43daf7:	loopne 0x43db3c
  43daf9:	push   cs
  43dafa:	popa   
  43dafb:	fbstp  TBYTE PTR [ecx+ecx*1]
  43dafe:	pop    edi
  43db00:	xor    cl,BYTE PTR [ebx]
  43db02:	lods   al,BYTE PTR ds:[esi]
  43db03:	mov    ebp,0xb80a8d
  43db08:	add    BYTE PTR [eax],al
  43db0a:	(bad)
  43db0d:	enter  0xf9bd,0xa
  43db11:	loopne 0x43db38
  43db13:	dec    edx
  43db14:	or     esp,esi
  43db16:	sbb    eax,0x24380aec
  43db1b:	mov    al,ds:0x71c4109
  43db20:	mov    cl,0xe
  43db22:	daa    
  43db23:	clc    
  43db24:	or     BYTE PTR [esi],0x4d
  43db27:	clc    
  43db28:	xchg   esi,eax
  43db29:	push   cs
  43db2a:	cmp    edi,eax
  43db2c:	push   0x3f8850e
  43db31:	push   cs
  43db32:	jmp    0x43db22
  43db34:	xchg   ecx,eax
  43db35:	or     ecx,DWORD PTR [edi+ebp*8]
  43db38:	jb     0x43db45
  43db3a:	xchg   edi,ebp
  43db3c:	dec    ebx
  43db3d:	or     ecx,DWORD PTR [edx-0x11]
  43db40:	les    ecx,FWORD PTR [eax+edx*1]
  43db43:	out    dx,al
  43db44:	pop    esi
  43db45:	or     ebx,DWORD PTR [esi-0x12]
  43db48:	or     BYTE PTR [ebx],0xb2
  43db4b:	out    dx,al
  43db4c:	icebp  
  43db4d:	or     esp,edx
  43db4f:	in     al,dx
  43db50:	add    ecx,DWORD PTR [edx]
  43db52:	loopne 0x43db40
  43db54:	stos   BYTE PTR es:[edi],al
  43db55:	or     al,BYTE PTR [ebp+ebp*8-0x3f]
  43db59:	or     bl,BYTE PTR [eax-0x13]
  43db5c:	cmp    BYTE PTR [ecx],cl
  43db5e:	xchg   edi,eax
  43db5f:	in     al,dx
  43db60:	mov    dl,0x9
  43db62:	cmc    
  43db63:	repnz test DWORD PTR [edi],0x7bcf2dc
  43db6a:	mov    bh,0xf2
  43db6c:	adc    eax,0x8
  43db71:	xor    esi,ebx
  43db73:	or     DWORD PTR [eax],0x7
  43db76:	repnz sub eax,DWORD PTR [edi]
  43db79:	jns    0x43db6d
  43db7b:	inc    ecx
  43db7c:	pop    es
  43db7d:	sub    dh,dl
  43db7f:	fadd   DWORD PTR ds:0x691f089
  43db85:	daa    
  43db86:	icebp  
  43db87:	dec    edi
  43db88:	push   es
  43db89:	adc    eax,0xfa064ff1
  43db8e:	lock test DWORD PTR [eax+eiz*8],0xd04ddef
  43db96:	lock test DWORD PTR [ecx+eax*2],0xf7bbfff0
  43db9e:	xor    bh,BYTE PTR [ecx]
  43dba0:	push   0xffffffee
  43dba2:	xchg   DWORD PTR [eax],edi
  43dba4:	xor    esi,0xffffff8c
  43dba7:	cmp    BYTE PTR [ebp-0x12],al
  43dbaa:	bound  edi,QWORD PTR [eax]
  43dbac:	push   edi
  43dbad:	not    dh
  43dbaf:	cmp    BYTE PTR [ecx],dl
  43dbb1:	out    dx,al
  43dbb2:	push   es
  43dbb3:	add    cl,ch
  43dbb5:	xor    BYTE PTR [eax+0x6ef65f8],dh
  43dbbb:	add    BYTE PTR [edi+0x3a2f8a00],dh
  43dbc1:	dec    edx
  43dbc3:	das    
  43dbc4:	mov    ah,0xe0
  43dbc6:	fisubr DWORD PTR [edi]
  43dbc8:	ret    
  43dbc9:	loopne 0x43db6d
  43dbcb:	das    
  43dbcc:	fchs   
  43dbce:	mov    ah,0x2f
  43dbd0:	iret   
  43dbd1:	loopne 0x43dbe2
  43dbd3:	das    
  43dbd4:	adc    eax,DWORD PTR [eax]
  43dbd6:	add    BYTE PTR [eax],al
  43dbd8:	add    dl,ah
  43dbda:	cs sbb eax,0x272ecf00
  43dbe0:	add    DWORD PTR [eax],esp
  43dbe2:	cs push edi
  43dbe4:	add    cl,dh
  43dbe6:	sub    eax,0x2cf5e294
  43dbeb:	adc    edx,esp
  43dbed:	sub    eax,0x37e3672d
  43dbf2:	xor    edi,DWORD PTR [ecx-0x77cd2a1b]
  43dbf8:	std    
  43dbf9:	clc    
  43dbfa:	xor    DWORD PTR [ecx],edx
  43dbfc:	cmc    
  43dbfd:	pop    ds
  43dbfe:	xor    dh,cl
  43dc00:	out    dx,al
  43dc01:	sub    al,0x32
  43dc03:	pop    ecx
  43dc04:	out    0x95,al
  43dc06:	xor    DWORD PTR [esi-0x6dce9502],eax
  43dc0c:	neg    BYTE PTR [edi+0x31]
  43dc0f:	sub    esi,ebp
  43dc11:	shl    BYTE PTR [ecx],0x51
  43dc14:	out    0xb0,al
  43dc16:	xor    DWORD PTR [eax],eax
  43dc18:	jecxz  0x43dc15
  43dc1a:	push   es
  43dc1b:	aaa    
  43dc1c:	sti    
  43dc1d:	sti    
  43dc1e:	daa    
  43dc1f:	aaa    
  43dc20:	(bad)  
  43dc22:	ins    BYTE PTR es:[edi],dx
  43dc23:	aaa    
  43dc24:	ds sti 
  43dc26:	shl    DWORD PTR [edi],0xf
  43dc29:	sti    
  43dc2a:	cmp    BYTE PTR [eax],bh
  43dc2c:	dec    eax
  43dc2d:	add    dh,dh
  43dc2f:	cmp    bh,dl
  43dc31:	add    DWORD PTR [ebx+0x4ffff23a],ebx
  43dc37:	cmp    al,0xd9
  43dc39:	add    eax,0x3f69
  43dc3e:	add    BYTE PTR [edx+0x36fff8fa],bl
  43dc44:	or     al,BYTE PTR [eax]
  43dc46:	add    BYTE PTR [ebp+0x1a],cl
  43dc49:	ins    DWORD PTR es:[edi],dx
  43dc4a:	xor    BYTE PTR [edi-0x4d],bh
  43dc4d:	out    dx,al
  43dc4e:	xor    BYTE PTR [ebx+0x183155b3],cl
  43dc54:	mov    ah,0x81
  43dc56:	xor    DWORD PTR [edi-0x4c],ebp
  43dc59:	(bad)  
  43dc5a:	xor    DWORD PTR [ebp+0x5f3224b4],ebp
  43dc60:	mov    ah,0x3a
  43dc62:	xor    dl,BYTE PTR [ebx]
  43dc64:	mov    ch,0x4e
  43dc66:	xor    bl,BYTE PTR ds:0xaa327ab5
  43dc6c:	mov    ah,0xcd
  43dc6e:	xor    ah,BYTE PTR [ebx-0x4b]
  43dc71:	call   0x1f93da8
  43dc76:	xor    esi,DWORD PTR [ecx]
  43dc78:	mov    ch,0x3c
  43dc7a:	xor    ebp,DWORD PTR [esi]
  43dc7c:	mov    ch,0x99
  43dc7e:	xor    esp,edi
  43dc80:	mov    ch,0xee
  43dc82:	xor    edx,ecx
  43dc84:	scas   al,BYTE PTR es:[edi]
  43dc85:	jae    0x43dcbb
  43dc87:	mov    esp,0xc834b5ae
  43dc8c:	scas   al,BYTE PTR es:[edi]
  43dc8d:	fnsave [esi*1-0xcca9251]
  43dc94:	sbb    dh,bh
  43dc96:	mov    DWORD PTR [esi+0x26a0f67e],edi
  43dc9c:	aas    
  43dc9d:	div    ecx
  43dc9f:	push   ds
  43dca0:	shl    esi,1
  43dca2:	pusha  
  43dca3:	add    BYTE PTR [eax],al
  43dca5:	add    BYTE PTR ds:0x1dd1f61b,ah
  43dcab:	std    
  43dcac:	cmc    
  43dcad:	cli    
  43dcae:	add    eax,0xfc65f5bb
  43dcb3:	and    eax,0xf04d2f5
  43dcb8:	cmc    
  43dcb9:	cmp    edi,edx
  43dcbb:	xchg   ecx,eax
  43dcbc:	sti    
  43dcbd:	jl     0x43dca9
  43dcbf:	cmp    edi,ebx
  43dcc1:	mov    bh,0xea
  43dcc3:	(bad)  
  43dcc5:	fcmovu st,st(2)
  43dcc7:	push   0xfffffffa
  43dcc9:	data16 fnstcw WORD PTR [edi]
  43dccc:	cli    
  43dccd:	stos   DWORD PTR es:[edi],eax
  43dcce:	leave  
  43dccf:	mov    edx,?
  43dcd1:	into   
  43dcd2:	leave  
  43dcd3:	mov    edi,0x51b806fa
  43dcd8:	stc    
  43dcd9:	stos   DWORD PTR es:[edi],eax
  43dcda:	mov    eax,0x2f0bf971
  43dcdf:	out    dx,al
  43dce0:	jmp    FWORD PTR [edx+0x30ffd127]
  43dce6:	push   ds
  43dce7:	cmp    edi,0xff561576
  43dced:	int    0xc
  43dcef:	mov    al,ds:0xc344ff1c
  43dcf4:	cld    
  43dcf5:	push   ebx
  43dcf7:	ret    0x8bec
  43dcfa:	add    edx,DWORD PTR [esi]
  43dcfc:	repz jp 0x43dce1
  43dcff:	and    dh,ah
  43dd01:	adc    al,0xe1
  43dd03:	push   0xfffffff1
  43dd05:	cwde   
  43dd06:	loopne 0x43dd71
  43dd08:	lock and al,0x0
  43dd0b:	add    BYTE PTR [eax],al
  43dd0d:	fmulp  st(5),st
  43dd0f:	idiv   BYTE PTR [eax-0x3c]
  43dd12:	push   es
  43dd13:	cmc    
  43dd14:	sti    
  43dd15:	cmp    al,0xf0
  43dd17:	out    0x33,al
  43dd19:	cld    
  43dd1a:	lods   al,BYTE PTR ds:[esi]
  43dd1b:	or     al,BYTE PTR [ebx+esi*8]
  43dd1e:	push   es
  43dd1f:	fdivrp st(4),st
  43dd21:	(bad)  
  43dd22:	cmc    
  43dd23:	icebp  
  43dd24:	cmc    
  43dd25:	add    bh,cl
  43dd27:	scas   eax,DWORD PTR es:[edi]
  43dd28:	imul   BYTE PTR [eax+edi*8]
  43dd2b:	inc    esi
  43dd2c:	clc    
  43dd2d:	shl    edx,cl
  43dd2f:	xchg   esi,eax
  43dd30:	sti    
  43dd31:	and    ebp,edi
  43dd33:	jb     0x43dd30
  43dd35:	out    dx,eax
  43dd36:	jmp    0x83e7:0x6f30240
  43dd3d:	mov    ch,0xac
  43dd3f:	mov    esi,0xe806f304
  43dd44:	repz mov esi,edi
  43dd47:	daa    
  43dd48:	repz pushf 
  43dd4a:	div    DWORD PTR [ebx+0x20f61af4]
  43dd50:	hlt    
  43dd51:	idiv   al
  43dd53:	xor    esi,esi
  43dd55:	je     0x43dd50
  43dd57:	(bad)  
  43dd58:	hlt    
  43dd59:	dec    edx
  43dd5a:	clc    
  43dd5b:	pop    ebp
  43dd5c:	clc    
  43dd5d:	dec    eax
  43dd5e:	repz scas al,BYTE PTR es:[edi]
  43dd60:	clc    
  43dd61:	sbb    eax,0x6ff735f2
  43dd66:	repnz mov edi,esi
  43dd69:	in     eax,dx
  43dd6a:	lock std 
  43dd6c:	cld    
  43dd6d:	or     esi,eax
  43dd6f:	cmc    
  43dd70:	cld    
  43dd71:	add    BYTE PTR [eax],al
  43dd73:	add    BYTE PTR [ebx],al
  43dd75:	lock (bad) 
  43dd78:	or     esi,eax
  43dd7a:	and    eax,0x1defb3fd
  43dd7f:	std    
  43dd80:	stos   DWORD PTR es:[edi],eax
  43dd81:	out    dx,eax
  43dd82:	xor    eax,0x1defc3fd
  43dd87:	std    
  43dd88:	retf   
  43dd89:	out    dx,eax
  43dd8a:	add    eax,0xffef93fd
  43dd8f:	add    DWORD PTR [esi],edx
  43dd91:	pop    ds
  43dd92:	xor    eax,0x35370ffa
  43dd97:	loop   0x43dda0
  43dd99:	das    
  43dd9a:	xor    eax,0x3486fe6a
  43dd9f:	(bad)  
  43dda0:	idiv   BYTE PTR [esi+0x34]
  43dda3:	jp     0x43dd93
  43dda5:	xchg   esi,eax
  43dda6:	xor    al,0x62
  43dda8:	out    0x8e,al
  43ddaa:	xor    al,0x8a
  43ddac:	fisub  WORD PTR [esi+0x34]
  43ddaf:	adc    dh,0x5e
  43ddb2:	xor    al,0x7a
  43ddb4:	into   
  43ddb5:	jbe    0x43ddeb
  43ddb7:	(bad)  
  43ddb8:	(bad)  
  43ddb9:	outs   dx,BYTE PTR ds:[esi]
  43ddba:	xor    al,0x2a
  43ddbc:	mov    esi,0xb62234c6
  43ddc1:	mov    esi,0xd6ae3a34
  43ddc6:	xor    al,0x22
  43ddc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ddc9:	into   
  43ddca:	xor    al,0xa
  43ddcc:	sahf   
  43ddcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ddce:	xor    al,0x2
  43ddd0:	xchg   esi,eax
  43ddd1:	sahf   
  43ddd2:	xor    al,0xfa
  43ddd4:	(bad)  
  43ddd5:	mov    dh,0x34
  43ddd7:	loop   0x43ddd9
  43ddd9:	add    BYTE PTR [eax],al
  43dddb:	xchg   DWORD PTR [esi+0x67cea34],ebp
  43dde1:	cmp    al,0xe2
  43dde3:	je     0x43dde3
  43dde5:	cmp    edi,edx
  43dde7:	ins    BYTE PTR es:[edi],dx
  43dde8:	push   ss
  43dde9:	cmp    al,0xe2
  43ddeb:	fs push cs
  43dded:	cmp    al,0xa
  43ddef:	repz in eax,0x3b
  43ddf2:	add    dh,bl
  43ddf4:	fnstsw WORD PTR [ebx]
  43ddf6:	cli    
  43ddf7:	dec    esp
  43ddf8:	idiv   BYTE PTR [ebx]
  43ddfa:	loop   0x43de40
  43ddfc:	out    dx,al
  43ddfd:	cmp    ebp,DWORD PTR [edx]
  43ddff:	repz inc ebp
  43de01:	cmp    al,0x22
  43de03:	repz cmp eax,0xbe2ca23c
  43de09:	cmp    eax,DWORD PTR [eax]
  43de0b:	mov    DWORD PTR [ebx-0x54aec331],ebp
  43de11:	xlat   BYTE PTR ds:[ebx]
  43de12:	cmp    al,0x69
  43de14:	stos   DWORD PTR es:[edi],eax
  43de15:	fistp  QWORD PTR [ecx+esi*2]
  43de18:	stos   DWORD PTR es:[edi],eax
  43de19:	out    0x3c,eax
  43de1b:	test   eax,0x913cefab
  43de20:	stos   DWORD PTR es:[edi],eax
  43de21:	idiv   DWORD PTR [ecx+ecx*1]
  43de24:	lods   al,BYTE PTR ds:[esi]
  43de25:	(bad)  
  43de26:	cmp    al,0xd1
  43de28:	test   eax,0xa9c93d07
  43de2d:	(bad)  
  43de2f:	shr    DWORD PTR [ecx-0x5616c2e9],1
  43de35:	pop    ds
  43de36:	cmp    eax,0x3d27a9f1
  43de3b:	test   eax,0x3d2fa9
  43de40:	add    BYTE PTR [eax],al
  43de42:	shr    DWORD PTR [ecx-0x5676c2c9],1
  43de48:	aas    
  43de49:	cmp    eax,0x3d47a951
  43de4e:	mov    DWORD PTR [ecx-0x56aec2b1],ebp
  43de54:	push   edi
  43de55:	cmp    eax,0x3d5fa969
  43de5a:	jno    0x43de05
  43de5c:	addr16 cmp eax,0x3d6f0829
  43de62:	adc    DWORD PTR [eax],ecx
  43de64:	ja     0x43dea3
  43de66:	or     DWORD PTR [eax],ecx
  43de68:	jg     0x43dea7
  43de6a:	outs   dx,BYTE PTR ds:[esi]
  43de6b:	lods   al,BYTE PTR ds:[esi]
  43de6c:	lock aas 
  43de6e:	pop    edx
  43de6f:	xchg   esi,eax
  43de70:	stc    
  43de71:	call   FWORD PTR [edx]
  43de73:	add    eax,DWORD PTR [eax]
  43de75:	add    BYTE PTR [ebx-0x4e],bl
  43de78:	xchg   ebx,eax
  43de79:	xor    al,0xc7
  43de7b:	scas   al,BYTE PTR es:[edi]
  43de7c:	sti    
  43de7d:	xor    al,0xe9
  43de7f:	scas   eax,DWORD PTR es:[edi]
  43de80:	cdq    
  43de81:	xor    eax,0x36e5b088
  43de86:	repz aad 0xf1
  43de89:	fnsetpm(287 only) 
  43de8b:	popf   
  43de8c:	hlt    
  43de8d:	sbb    al,0xeb
  43de8f:	shl    esp,1
  43de91:	dec    esp
  43de92:	fistp  DWORD PTR [esi]
  43de94:	cld    
  43de95:	mov    ebx,ebx
  43de97:	inc    ebp
  43de98:	sti    
  43de99:	add    cl,cl
  43de9b:	pusha  
  43de9c:	cmc    
  43de9d:	loope  0x43de68
  43de9f:	clc    
  43dea0:	hlt    
  43dea1:	ss mov eax,0xacf5d6
  43dea7:	add    BYTE PTR [eax],al
  43dea9:	mov    eax,0x2fe7f85b
  43deae:	jg     0x43deae
  43deb0:	hlt    
  43deb1:	es stc 
  43deb3:	stc    
  43deb4:	cmp    ebx,DWORD PTR ds:0x156efa92
  43deba:	sbb    edx,edi
  43debc:	lea    ecx,ds:0x5b0fa30
  43dec2:	idiv   ecx
  43dec4:	jmp    0xb4f4:0xbf99dfd
  43decb:	stc    
  43decc:	aaa    
  43decd:	in     al,dx
  43dece:	pusha  
  43decf:	stc    
  43ded0:	pop    ecx
  43ded1:	in     al,0x4e
  43ded3:	stc    
  43ded4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ded5:	fmul   QWORD PTR [ecx+edi*8]
  43ded8:	loope  0x43deae
  43deda:	add    edi,ecx
  43dedc:	repnz int3 
  43dede:	fwait
  43dedf:	stc    
  43dee0:	inc    DWORD PTR [edi+ebx*4-0x708301a4]
  43dee7:	cld    
  43dee8:	push   ebx
  43deea:	push   ss
  43deeb:	hlt    
  43deec:	and    ecx,DWORD PTR gs:[ebp+ebp*8-0x4e]
  43def1:	and    esi,DWORD PTR [ebp-0x14]
  43def4:	pop    es
  43def5:	and    cl,bh
  43def7:	repz and esp,DWORD PTR [edx]
  43defa:	pop    es
  43defb:	repz cs add dh,ah
  43deff:	repnz scas al,BYTE PTR es:[edi]
  43df01:	add    al,BYTE PTR [edi]
  43df03:	popa   
  43df04:	hlt    
  43df05:	sbb    esi,edi
  43df07:	xchg   ebp,eax
  43df08:	hlt    
  43df09:	adc    esi,ebp
  43df0b:	aam    0xf1
  43df0d:	add    BYTE PTR [eax],al
  43df0f:	add    ah,al
  43df11:	hlt    
  43df12:	add    esi,edx
  43df14:	pop    ebx
  43df15:	hlt    
  43df16:	xchg   esi,eax
  43df17:	icebp  
  43df18:	ds hlt 
  43df1a:	(bad)  
  43df1b:	repnz scas al,BYTE PTR es:[edi]
  43df1d:	cmc    
  43df1e:	push   ss
  43df1f:	repz xchg ebx,eax
  43df21:	cmc    
  43df22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43df23:	repnz adc ebp,esi
  43df26:	in     al,0xf7
  43df28:	(bad)
  43df2b:	idiv   DWORD PTR [ebp+0x14f8c9f3]
  43df31:	icebp  
  43df32:	adc    dh,dh
  43df34:	cmp    ecx,esi
  43df36:	retf   
  43df37:	cmc    
  43df38:	imul   esi,ecx,0x58
  43df3b:	cmc    
  43df3c:	nop
  43df3d:	icebp  
  43df3e:	je     0x43df35
  43df40:	mov    esp,0xe6fbd0f0
  43df45:	out    dx,al
  43df46:	mov    ch,0xfb
  43df48:	push   ds
  43df49:	out    dx,eax
  43df4a:	mov    edi,ebx
  43df4c:	retf   0xb5ef
  43df4f:	cld    
  43df50:	cs out dx,al
  43df52:	call   0xb3f9:0x60ed14f9
  43df59:	in     eax,dx
  43df5a:	push   ss
  43df5b:	stc    
  43df5c:	xchg   ebp,ebp
  43df5e:	jmp    0x54fa:0xc5ebf6fa
  43df65:	in     al,dx
  43df66:	sahf   
  43df67:	stc    
  43df68:	cmp    ch,ah
  43df6a:	mov    ds:0xbaeca8f9,al
  43df6f:	stc    
  43df70:	dec    eax
  43df71:	in     al,dx
  43df72:	ret    0xf9
  43df75:	add    BYTE PTR [eax],al
  43df77:	pop    edx
  43df78:	in     al,dx
  43df79:	mov    esi,0xd6eaf3f9
  43df7e:	push   esi
  43df80:	jmp    0x273b:0xebf301ff
  43df87:	repz dec esi
  43df89:	cmp    al,0x46
  43df8b:	repz and edi,DWORD PTR [esp+ecx*1]
  43df8f:	repz xor edi,DWORD PTR [esp+edx*1]
  43df93:	repz jle 0x43dfd1
  43df96:	xchg   esi,eax
  43df97:	and    al,0xa8
  43df99:	clc    
  43df9a:	jmp    0x523c883f
  43df9f:	out    dx,eax
  43dfa0:	push   es
  43dfa1:	add    bl,ah
  43dfa3:	add    BYTE PTR [edi],dl
  43dfa5:	xor    BYTE PTR [eax-0x1],cl
  43dfa8:	ins    DWORD PTR es:[edi],dx
  43dfa9:	das    
  43dfaa:	xor    al,BYTE PTR [edi]
  43dfac:	int    0x2f
  43dfae:	inc    ebp
  43dfaf:	call   FWORD PTR [eax+0x13e1ea2f]
  43dfb5:	das    
  43dfb6:	add    al,0xe0
  43dfb8:	fld    TBYTE PTR [esi]
  43dfba:	stos   DWORD PTR es:[edi],eax
  43dfbb:	loope  0x43dfe5
  43dfbd:	das    
  43dfbe:	data16 loopne 0x43e032
  43dfc1:	cs sub eax,eax
  43dfc4:	add    ch,BYTE PTR [esi]
  43dfc6:	jg     0x43df89
  43dfc8:	int3   
  43dfc9:	sub    eax,0x337ec39c
  43dfce:	push   ss
  43dfcf:	mov    ebx,0xa5c632fe
  43dfd4:	loope  0x43e007
  43dfd6:	lea    ebx,[esi+0x9e3114]
  43dfdc:	add    BYTE PTR [eax],al
  43dfde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dfdf:	dec    ebx
  43dfe0:	xor    DWORD PTR [ebp-0x61],edi
  43dfe3:	call   0x56cc811f
  43dfe8:	cmp    BYTE PTR [esi-0x79],ah
  43dfeb:	ins    DWORD PTR es:[edi],dx
  43dfec:	aaa    
  43dfed:	add    DWORD PTR [ecx+0x19],edi
  43dff0:	ss popa 
  43dff2:	jns    0x43e01c
  43dff4:	outs   dx,BYTE PTR ss:[esi]
  43dff6:	push   0xffffff93
  43dff8:	xor    eax,0x35586a8b
  43dffd:	add    BYTE PTR [ecx+0x293acead],ah
  43e003:	lods   eax,DWORD PTR ds:[esi]
  43e004:	in     al,dx
  43e005:	cmp    dl,BYTE PTR [edi-0x52]
  43e008:	adc    eax,0x6eae123b
  43e00d:	cmp    edx,DWORD PTR [esi]
  43e00f:	scas   al,BYTE PTR es:[edi]
  43e010:	jl     0x43e04d
  43e012:	shr    DWORD PTR [esi-0x5131c465],0xc5
  43e019:	cmp    edx,DWORD PTR [edi-0x52]
  43e01c:	fistp  QWORD PTR [ebx]
  43e01e:	or     al,0xa7
  43e020:	cmp    DWORD PTR [edx+eiz*8],edi
  43e023:	push   es
  43e024:	fs cmp al,0xc4
  43e027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e028:	lds    edi,FWORD PTR [edx+edx*1]
  43e02b:	test   al,0xc
  43e02d:	cmp    eax,0x3da1a87c
  43e032:	inc    ebp
  43e033:	stos   BYTE PTR es:[edi],al
  43e034:	imul   edi,DWORD PTR [edi],0x3f94a3cd
  43e03a:	sbb    DWORD PTR [ebx-0x5d03c03f],esp
  43e040:	fstp   TBYTE PTR [edi]
  43e042:	add    BYTE PTR [eax],al
  43e044:	add    BYTE PTR [ebx-0x5d],al
  43e047:	clc    
  43e048:	(bad)  
  43e049:	fcmove st,st(2)
  43e04b:	stc    
  43e04c:	(bad)  
  43e04d:	jle    0x43e059
  43e04f:	add    BYTE PTR [eax],al
  43e051:	inc    ebx
  43e052:	call   0x31f2:0x98da31e1
  43e059:	test   eax,0x38331e97
  43e05e:	sahf   
  43e05f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e060:	xor    al,0xe8
  43e062:	popf   
  43e063:	loop   0x43e099
  43e065:	lea    ebx,[ebp-0x62facad8]
  43e06b:	xchg   ecx,eax
  43e06c:	xor    eax,0x35d19d39
  43e071:	ret    0x8098
  43e074:	ss inc esp
  43e076:	cdq    
  43e077:	sbb    esi,DWORD PTR [edi]
  43e079:	repz or ch,ch
  43e07c:	xor    eax,0x4eecee1c
  43e081:	and    al,0x53
  43e083:	in     eax,dx
  43e084:	mov    edi,0xfdec5b1c
  43e089:	add    al,0xb8
  43e08b:	hlt    
  43e08c:	sbb    BYTE PTR [edx],cl
  43e08e:	dec    ebp
  43e08f:	sti    
  43e090:	mov    bh,0xfa
  43e092:	push   eax
  43e093:	cli    
  43e094:	loopne 0x43e08f
  43e096:	push   ebp
  43e097:	stc    
  43e098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e099:	out    dx,eax
  43e09a:	pusha  
  43e09b:	imul   ebx
  43e09d:	out    0xb0,eax
  43e09f:	mul    DWORD PTR [ecx-0x3a098e22]
  43e0a5:	(bad)  
  43e0a6:	mov    al,ds:0xadf6
  43e0ab:	add    ch,cl
  43e0ad:	and    esi,esi
  43e0af:	add    eax,esp
  43e0b1:	shl    ch,cl
  43e0b3:	and    DWORD PTR [edi+edi*8-0x394bbe0c],edi
  43e0ba:	cmc    
  43e0bb:	push   0xd9f5c32c
  43e0c0:	and    al,0xb0
  43e0c2:	int3   
  43e0c3:	(bad)  
  43e0c4:	fadd   st(7),st
  43e0c6:	cld    
  43e0c7:	push   ebx
  43e0c9:	shr    ah,0x23
  43e0cc:	add    esp,DWORD PTR [esp+ebp*8-0x1381fccb]
  43e0d3:	add    eax,DWORD PTR gs:[ebp+0x2a039fec]
  43e0da:	hlt    
  43e0db:	dec    edi
  43e0dc:	loop   0x43e05f
  43e0de:	repz scas eax,DWORD PTR es:[edi]
  43e0e0:	loop   0x43e0d0
  43e0e2:	repnz dec eax
  43e0e4:	out    0x34,eax
  43e0e6:	lock int3 
  43e0e8:	fistp  WORD PTR [ecx-0xb397c11]
  43e0ee:	out    dx,al
  43e0ef:	dec    ecx
  43e0f0:	mov    ebp,0xc5afef1f
  43e0f5:	push   es
  43e0f6:	(bad)  
  43e0f7:	icebp  
  43e0f8:	jmp    0xe5370dda
  43e0fd:	fucom  st(6)
  43e0ff:	sti    
  43e100:	hlt    
  43e101:	fidiv  WORD PTR [ecx]
  43e103:	cld    
  43e104:	inc    ebp
  43e105:	fsubrp st(0),st
  43e107:	cld    
  43e108:	pop    ss
  43e109:	loopne 0x43e14c
  43e10b:	std    
  43e10c:	into   
  43e10d:	fbstp  TBYTE PTR [ebx-0x4]
  43e110:	add    BYTE PTR [eax],al
  43e112:	add    BYTE PTR [esi],bl
  43e114:	fistp  QWORD PTR [esi+0x3be0e7fc]
  43e11a:	(bad)  
  43e11b:	pop    ebx
  43e11c:	loopne 0x43e180
  43e11e:	inc    cl
  43e120:	loop   0x43e108
  43e122:	clc    
  43e123:	shl    ebx,cl
  43e125:	jne    0x43e11f
  43e127:	gs jecxz 0x43e11b
  43e12a:	stc    
  43e12b:	(bad)  
  43e12c:	in     al,0x2
  43e12e:	cli    
  43e12f:	and    ah,ah
  43e131:	outs   dx,DWORD PTR ds:[esi]
  43e132:	stc    
  43e133:	ret    
  43e134:	in     eax,0x51
  43e136:	cli    
  43e137:	ds in  eax,0x37
  43e13a:	cli    
  43e13b:	hlt    
  43e13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e13d:	out    0xa3,al
  43e13f:	in     eax,dx
  43e140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e141:	es add esi,ebx
  43e144:	push   es
  43e145:	adc    al,0xf4
  43e147:	xchg   ebx,eax
  43e148:	xlat   BYTE PTR ds:[ebx]
  43e149:	inc    ebp
  43e14a:	repz push edi
  43e14c:	(bad)  
  43e14d:	popf   
  43e14e:	cmc    
  43e14f:	push   edi
  43e150:	(bad)  ds:0x6d7dff5
  43e156:	not    DWORD PTR [edx]
  43e158:	fsub   DWORD PTR [esi+esi*8-0x98127e6]
  43e15f:	rcr    al,0xde
  43e162:	out    dx,eax
  43e163:	(bad)  
  43e164:	fidivr DWORD PTR [edi+ebp*8-0x105b251a]
  43e16b:	push   cs
  43e16c:	(bad)  [esi-0x11]
  43e16f:	jne    0x43e14c
  43e171:	dec    DWORD PTR [esi-0x6c]
  43e174:	pop    ebx
  43e175:	xor    ebx,DWORD PTR [eax+eax*1]
  43e178:	add    BYTE PTR [eax],al
  43e17a:	mov    WORD PTR [ebx-0x637c24cd],gs
  43e180:	xor    ebp,ecx
  43e182:	pop    ebp
  43e183:	push   es
  43e184:	xor    esi,esi
  43e186:	push   ebp
  43e187:	out    0x32,eax
  43e189:	adc    ecx,DWORD PTR [ebp+eiz*8+0x32]
  43e18d:	dec    ebp
  43e18e:	inc    esp
  43e18f:	or     eax,0x9c411232
  43e194:	xor    DWORD PTR [edi+eax*2],esi
  43e197:	xor    DWORD PTR [edi],0xffffffc4
  43e19a:	aas    
  43e19b:	or     esi,DWORD PTR [edi]
  43e19d:	xor    al,0x38
  43e19f:	nop
  43e1a0:	ss jge 0x43e1cb
  43e1a3:	xor    BYTE PTR [esi],0xb9
  43e1a6:	sub    BYTE PTR [esi-0x24e10eca],ch
  43e1ac:	xor    eax,0x3629152b
  43e1b1:	pop    ecx
  43e1b2:	or     eax,0x5ad3566
  43e1b7:	mov    ecx,0x2fd7235
  43e1bc:	xor    eax,0x34b6f7e2
  43e1c1:	cmp    al,0xee
  43e1c3:	mov    cl,0x34
  43e1c5:	push   esi
  43e1c6:	out    0xf7,al
  43e1c8:	cmp    eax,DWORD PTR [edx]
  43e1ca:	fnsetpm(287 only) 
  43e1cc:	cmp    ebx,DWORD PTR [eax-0x40c3d424]
  43e1d2:	les    esi,FWORD PTR [ebp+0x3b]
  43e1d5:	je     0x43e1a2
  43e1d7:	mov    edx,0xf7bb323b
  43e1dc:	cmp    cl,BYTE PTR ds:0xbc000000
  43e1e2:	stos   BYTE PTR es:[edi],al
  43e1e3:	cmp    ah,ch
  43e1e5:	stos   BYTE PTR es:[edi],al
  43e1e6:	fdivr  QWORD PTR [ecx]
  43e1e8:	mov    eax,ds:0x3d3a42aa
  43e1ed:	cdq    
  43e1ee:	push   edi
  43e1ef:	cmp    DWORD PTR [eax],eax
  43e1f1:	dec    ecx
  43e1f2:	sahf   
  43e1f3:	push   ecx
  43e1f4:	aas    
  43e1f5:	or     ebx,DWORD PTR [edi-0x61d4c087]
  43e1fb:	lahf   
  43e1fc:	aas    
  43e1fd:	rcr    DWORD PTR [ebp-0x614ec03d],0xf7
  43e204:	aas    
  43e205:	pop    edx
  43e206:	push   edi
  43e207:	stc    
  43e208:	jmp    esi
  43e20a:	pop    es
  43e20b:	add    BYTE PTR [eax],al
  43e20d:	arpl   WORD PTR [edi-0x6507cfce],dx
  43e213:	arpl   WORD PTR [eax],si
  43e215:	rcl    DWORD PTR [edi-0x688fcf64],0xa8
  43e21c:	xor    ah,al
  43e21e:	xchg   edi,eax
  43e21f:	lds    esi,FWORD PTR [eax]
  43e221:	mov    ss,WORD PTR [edi-0x67dacefb]
  43e227:	daa    
  43e228:	xor    DWORD PTR [edx-0x68],eax
  43e22b:	inc    esi
  43e22c:	xor    edx,edi
  43e22e:	xchg   edi,eax
  43e22f:	jbe    0x43e262
  43e231:	mov    dh,0x98
  43e233:	scas   al,BYTE PTR es:[edi]
  43e234:	xor    DWORD PTR [esi-0x68],edx
  43e237:	shl    BYTE PTR [ecx],cl
  43e239:	jle    0x43e1d3
  43e23b:	add    dh,BYTE PTR [edx]
  43e23d:	sub    bl,BYTE PTR [ecx-0x66c5cdc6]
  43e243:	pop    esi
  43e244:	xor    al,BYTE PTR [eax]
  43e246:	add    BYTE PTR [eax],al
  43e248:	popa   
  43e249:	pushf  
  43e24a:	xchg   ecx,eax
  43e24b:	xor    ch,BYTE PTR [ebp-0x64]
  43e24e:	int3   
  43e24f:	xor    ch,BYTE PTR [eax]
  43e251:	pushf  
  43e252:	lock xor dl,al
  43e255:	fwait
  43e256:	and    BYTE PTR [ebx],dh
  43e258:	int3   
  43e259:	fwait
  43e25a:	pop    eax
  43e25b:	xor    ebp,DWORD PTR [ebx+ebx*4-0x648ccc84]
  43e262:	scas   eax,DWORD PTR es:[edi]
  43e263:	xor    edi,edi
  43e265:	call   0x33fc:0x9b0f33ea
  43e26c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e26e:	call   0xe8dac980
  43e273:	pop    ds
  43e274:	(bad)  
  43e276:	call   0xe8a4a9a8
  43e27b:	je     0x43e23c
  43e27d:	sub    ebp,ecx
  43e27f:	mov    edi,0xbe15e8f6
  43e285:	hlt    
  43e286:	out    dx,al
  43e287:	imul   esp,DWORD PTR [esi],0x3c
  43e28a:	jmp    0x246d:0xe8fb1da5
  43e291:	(bad)  
  43e293:	xchg   ecx,eax
  43e294:	sbb    DWORD PTR [eax-0xc],esi
  43e297:	out    0xf,al
  43e299:	add    eax,0xb044fff7
  43e29e:	cld    
  43e29f:	std    
  43e2a0:	cmp    al,0xb4
  43e2a2:	cld    
  43e2a3:	push   ebx
  43e2a5:	mov    ah,0xec
  43e2a7:	push   ebp
  43e2a8:	loope  0x43e2ba
  43e2aa:	out    dx,al
  43e2ab:	jnp    0x43e2ad
  43e2ad:	add    BYTE PTR [eax],al
  43e2af:	loope  0x43e26f
  43e2b1:	in     eax,dx
  43e2b2:	pop    eax
  43e2b3:	loopne 0x43e2b0
  43e2b5:	out    dx,eax
  43e2b6:	test   bh,bl
  43e2b8:	cmp    esi,eax
  43e2ba:	mov    esp,0x1aeee4c7
  43e2bf:	mov    ebp,0xc5bdea46
  43e2c4:	cmp    bl,0xd6
  43e2c7:	mov    ebx,0x2bdcfc49
  43e2cc:	repnz cli 
  43e2ce:	dec    eax
  43e2cf:	sub    dl,cl
  43e2d1:	lock pop eax
  43e2d3:	push   ds
  43e2d4:	shl    edi,cl
  43e2d6:	mov    edx,DWORD PTR [esi]
  43e2d8:	and    esi,ecx
  43e2da:	dec    esp
  43e2dc:	scas   eax,DWORD PTR es:[edi]
  43e2dd:	or     al,0xfe
  43e2df:	les    edx,FWORD PTR [edi-0x4]
  43e2e2:	push   ebx
  43e2e4:	and    esi,esp
  43e2e6:	call   0xf5b6e9ee
  43e2eb:	adc    bh,0x7d
  43e2ee:	cmc    
  43e2ef:	test   edi,edx
  43e2f1:	std    
  43e2f2:	hlt    
  43e2f3:	(bad)  
  43e2f4:	xlat   BYTE PTR ds:[ebx]
  43e2f5:	arpl   bx,si
  43e2f7:	xchg   ebp,edx
  43e2f9:	scas   eax,DWORD PTR es:[edi]
  43e2fa:	out    dx,eax
  43e2fb:	or     ebx,ebx
  43e2fd:	ds lock push edx
  43e300:	(bad)  [ecx]
  43e302:	icebp  
  43e303:	std    
  43e304:	fcomp  DWORD PTR [esi-0x12]
  43e307:	push   0xffffffd8
  43e309:	jg     0x43e2f8
  43e30b:	popf   
  43e30c:	fsubr  DWORD PTR [ecx-0x1427c013]
  43e312:	out    dx,al
  43e313:	add    BYTE PTR [eax],al
  43e315:	add    bh,bh
  43e317:	fnstenv ds:0xf9d9d3ef
  43e31d:	cld    
  43e31e:	jp     0x43e2ff
  43e320:	jecxz  0x43e31b
  43e322:	loopne 0x43e300
  43e324:	std    
  43e325:	stc    
  43e326:	in     al,0xdd
  43e328:	cmp    al,0xfb
  43e32a:	mov    ebx,0xf6fa44dd
  43e32f:	loop   0x43e34e
  43e331:	stc    
  43e332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e333:	jecxz  0x43e382
  43e335:	clc    
  43e336:	pop    esi
  43e337:	jecxz  0x43e2ee
  43e339:	clc    
  43e33a:	cmp    eax,0x18f887e3
  43e33f:	jecxz  0x43e328
  43e341:	cmc    
  43e342:	repz loopne 0x43e3b2
  43e345:	cmc    
  43e346:	shl    ecx,cl
  43e348:	daa    
  43e349:	imul   DWORD PTR [ecx+eiz*8-0x1f9a0934]
  43e350:	xchg   dh,dh
  43e352:	(bad)
  43e355:	neg    ah
  43e357:	mov    al,ds:0xa0d6e3e6
  43e35c:	dec    esi
  43e35d:	add    esi,ebx
  43e35f:	push   es
  43e360:	push   es
  43e361:	hlt    
  43e362:	std    
  43e363:	(bad)  
  43e364:	jmp    FWORD PTR [ecx+0xe304dc0]
  43e36a:	shl    bl,0x2e
  43e36d:	lea    esp,[edi-0x60b2d0d4]
  43e373:	int3   
  43e374:	cs out 0xa2,eax
  43e377:	jge    0x43e3ac
  43e379:	jne    0x43e37b
  43e37b:	add    BYTE PTR [eax],al
  43e37d:	mov    ds:0x9e983265,eax
  43e382:	inc    edx
  43e383:	xor    cl,BYTE PTR [ebp+0x66322196]
  43e389:	mov    cs,esi
  43e38b:	xor    DWORD PTR [ebx],edx
  43e38d:	xchg   BYTE PTR [ecx+esi*1+0x319f5ddd],ah
  43e394:	add    edx,DWORD PTR [esi+0x4c]
  43e397:	xor    DWORD PTR [edx+0x4e],ecx
  43e39a:	test   DWORD PTR [eax],esi
  43e39c:	jb     0x43e3e4
  43e39e:	bound  esi,QWORD PTR [eax]
  43e3a0:	pushf  
  43e3a1:	pop    esi
  43e3a2:	xchg   edi,eax
  43e3a3:	xor    dl,dh
  43e3a5:	dec    eax
  43e3a6:	adc    DWORD PTR [eax],edi
  43e3a8:	clc    
  43e3a9:	cmp    BYTE PTR [ebp+0x38],cl
  43e3ac:	dec    edx
  43e3ad:	aaa    
  43e3ae:	sub    bh,BYTE PTR [eax]
  43e3b0:	jnp    0x43e3e1
  43e3b2:	push   0xb8275637
  43e3b7:	aaa    
  43e3b8:	mov    bh,0x1f
  43e3ba:	sti    
  43e3bb:	ss (bad) 
  43e3bd:	sbb    esi,ebx
  43e3bf:	ss sub eax,0x13373d08
  43e3c5:	or     BYTE PTR [ecx],ah
  43e3c7:	aaa    
  43e3c8:	outs   dx,BYTE PTR ds:[esi]
  43e3c9:	clc    
  43e3ca:	xor    BYTE PTR [esi],0x37
  43e3cd:	clc    
  43e3ce:	popa   
  43e3cf:	ss inc eax
  43e3d1:	call   0xe89a1a94
  43e3d6:	mov    al,ds:0xfddaf136
  43e3db:	xor    eax,0x35dfd917
  43e3e0:	add    BYTE PTR [eax],al
  43e3e2:	add    BYTE PTR [eax],al
  43e3e4:	ins    DWORD PTR es:[edi],dx
  43e3e5:	popf   
  43e3e6:	push   ebp
  43e3e7:	cmp    bh,BYTE PTR [ebp+ebx*4+0x7b]
  43e3eb:	cmp    ah,BYTE PTR [eax]
  43e3ed:	popf   
  43e3ee:	cwde   
  43e3ef:	cmp    bl,dl
  43e3f1:	pushf  
  43e3f2:	fdivr  DWORD PTR [edx]
  43e3f4:	or     BYTE PTR [ebp-0x6163c501],bl
  43e3fa:	and    eax,0x4b9eb93b
  43e3ff:	cmp    ebp,DWORD PTR [ecx-0x62]
  43e402:	imul   edi,DWORD PTR [ebx],0x1f
  43e405:	sahf   
  43e406:	xchg   ebx,eax
  43e407:	cmp    eax,ebp
  43e409:	popf   
  43e40a:	sti    
  43e40b:	cmp    ebx,DWORD PTR [edi-0x69]
  43e40e:	gs cmp al,0x6
  43e411:	cwde   
  43e412:	mov    ds:0xd297923c,al
  43e417:	cmp    al,0x3b
  43e419:	xchg   edi,eax
  43e41a:	fistp  QWORD PTR [edi+esi*1]
  43e41d:	xchg   edi,eax
  43e41e:	in     eax,dx
  43e41f:	cmp    al,0x4f
  43e421:	cwde   
  43e422:	or     edi,DWORD PTR ds:0x3d2697f9
  43e428:	lock xchg edi,eax
  43e42a:	cmp    DWORD PTR ds:0x3df59893,0x16
  43e431:	cdq    
  43e432:	aas    
  43e433:	ds mov bl,0x98
  43e436:	jbe    0x43e476
  43e438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e439:	cdq    
  43e43a:	test   al,0x3e
  43e43c:	dec    esi
  43e43d:	cdq    
  43e43e:	jmp    0x39dde981
  43e443:	aas    
  43e444:	sbb    BYTE PTR [edx+0xfff8],0x0
  43e44b:	sbb    dl,BYTE PTR [ebx+0x3c6fffa]
  43e451:	add    BYTE PTR [eax],al
  43e453:	mov    bh,0x94
  43e455:	mov    al,0x31
  43e457:	daa    
  43e458:	cdq    
  43e459:	out    dx,eax
  43e45a:	xor    ecx,ebp
  43e45c:	cwde   
  43e45d:	es xor dh,bl
  43e460:	clc    
  43e461:	in     eax,dx
  43e462:	push   esi
  43e463:	and    DWORD PTR [ebp-0x12],ebp
  43e466:	jb     0x43e469
  43e468:	cmp    al,0xef
  43e46a:	or     al,BYTE PTR [eax]
  43e46c:	lahf   
  43e46d:	out    dx,eax
  43e46e:	inc    edx
  43e46f:	add    BYTE PTR [edx-0x11],bl
  43e472:	mov    al,BYTE PTR [eax]
  43e474:	dec    esi
  43e475:	lock (bad) 
  43e477:	loopne 0x43e46b
  43e479:	out    dx,eax
  43e47a:	mul    al
  43e47c:	scas   eax,DWORD PTR es:[edi]
  43e47d:	call   0xe90fcb8f
  43e482:	cmp    bh,bl
  43e484:	test   cl,ch
  43e486:	stos   BYTE PTR es:[edi],al
  43e487:	(bad)  
  43e488:	fsubr  st,st(1)
  43e48a:	push   ss
  43e48b:	mov    ebp,0xc5a3eacc
  43e490:	shl    ah,1
  43e492:	xor    edi,DWORD PTR [ebx+0x2b81f486]
  43e498:	adc    eax,0xa82bd6ec
  43e49d:	jmp    0x43e4aa
  43e49f:	sbb    ch,dl
  43e4a1:	jmp    0xa6c:0xeb4a1a4e
  43e4a8:	pop    ss
  43e4a9:	jmp    0x43e43a
  43e4ab:	or     cl,bh
  43e4ad:	jmp    0x55fa:0xe0
  43e4b4:	jmp    0xe910:0xeac1f903
  43e4bb:	shr    dl,1
  43e4bd:	sub    eax,0x78e9eee9
  43e4c2:	fstp   DWORD PTR [eax]
  43e4c4:	jmp    0xc834:0xe9bed822
  43e4cb:	in     al,dx
  43e4cc:	call   0xe93fad21
  43e4d1:	pop    esi
  43e4d2:	mov    eax,0xb864e90d
  43e4d7:	lahf   
  43e4d8:	jmp    0xdd4b0d4f
  43e4dd:	out    dx,al
  43e4de:	imul   esp,edx,0x61
  43e4e1:	out    dx,eax
  43e4e2:	lods   eax,DWORD PTR ds:[esi]
  43e4e3:	loope  0x43e48e
  43e4e5:	out    dx,eax
  43e4e6:	sub    bl,bl
  43e4e8:	mov    bh,0xef
  43e4ea:	and    al,0xdb
  43e4ec:	inc    edx
  43e4ed:	lock adc al,0xdc
  43e4f0:	cli    
  43e4f1:	lock push edi
  43e4f3:	fdiv   QWORD PTR [esi+0x11db8ff0]
  43e4f9:	icebp  
  43e4fa:	cmp    ch,bl
  43e4fc:	shl    cl,0xc6
  43e4ff:	fsub   st(3),st
  43e501:	repnz xchg ch,bl
  43e504:	dec    ecx
  43e505:	repz test eax,0x97f302dd
  43e50b:	fucom  st(6)
  43e50d:	inc    ebx
  43e50e:	test   DWORD PTR [ebp+0x6f303fa],ebx
  43e514:	mov    ?,ebx
  43e516:	add    BYTE PTR [eax],al
  43e518:	add    BYTE PTR [edx-0x2a],dh
  43e51b:	add    ah,dh
  43e51d:	ja     0x43e4f6
  43e51f:	mov    eax,ds:0xf2d755f4
  43e524:	cmc    
  43e525:	sbb    eax,0xd2b9f58c
  43e52b:	mov    edi,esi
  43e52d:	in     al,0xd3
  43e52f:	stc    
  43e530:	clc    
  43e531:	pop    es
  43e532:	aam    0xdf
  43e534:	stc    
  43e535:	pop    ss
  43e536:	aad    0xf4
  43e538:	stc    
  43e539:	std    
  43e53a:	aam    0x26
  43e53c:	cli    
  43e53d:	mov    bl,0xd4
  43e53f:	xor    dl,bh
  43e541:	rcl    esp,0x1
  43e544:	cli    
  43e545:	jo     0x43e51b
  43e547:	pop    esp
  43e548:	stc    
  43e549:	dec    esp
  43e54a:	aam    0x56
  43e54c:	stc    
  43e54d:	inc    ebx
  43e54e:	aam    0x9a
  43e550:	stc    
  43e551:	pop    ds
  43e552:	aam    0x82
  43e554:	stc    
  43e555:	push   cs
  43e556:	aam    0xff
  43e558:	outs   dx,DWORD PTR ds:[esi]
  43e559:	cli    
  43e55a:	fwait
  43e55b:	xor    ecx,edx
  43e55d:	jmp    0xe9ef1653
  43e562:	inc    edx
  43e563:	xor    DWORD PTR [esi-0x3ccec427],ebp
  43e569:	fldcw  WORD PTR [ecx+esi*1]
  43e56c:	ror    cl,1
  43e56e:	pop    ds
  43e56f:	xor    DWORD PTR [ecx-0x37],edi
  43e572:	push   esi
  43e573:	xor    BYTE PTR [ecx],ch
  43e575:	mov    ecx,0xb91430c2
  43e57a:	mov    ebx,0x4330
  43e57f:	add    BYTE PTR [ecx-0x56dccf56],ch
  43e585:	popf   
  43e586:	xor    bl,dh
  43e588:	mov    BYTE PTR [eax],al
  43e58a:	cmp    cl,cl
  43e58c:	mov    dh,ah
  43e58e:	aaa    
  43e58f:	mov    esi,0x2d376198
  43e594:	cwde   
  43e595:	shl    DWORD PTR [edi],1
  43e597:	adc    eax,0xe6370488
  43e59c:	xchg   esp,esi
  43e59e:	ss into 
  43e5a0:	pop    edi
  43e5a1:	imul   esi,DWORD PTR [esi],0x363f553a
  43e5a7:	jb     0x43e5f6
  43e5a9:	je     0x43e5e0
  43e5ab:	xchg   ebp,eax
  43e5ac:	inc    ebp
  43e5ad:	ret    
  43e5ae:	xor    eax,0x35c05db8
  43e5b3:	aam    0x55
  43e5b5:	repz xor al,0x11
  43e5b8:	dec    esi
  43e5b9:	cmp    DWORD PTR ds:0x34854648,esi
  43e5bf:	push   esp
  43e5c0:	push   ds
  43e5c1:	jl     0x43e5f7
  43e5c3:	push   edi
  43e5c4:	push   ss
  43e5c5:	add    eax,0xfa0cf93c
  43e5ca:	cmp    ebx,esp
  43e5cc:	add    al,0xde
  43e5ce:	cmp    edx,DWORD PTR [edi]
  43e5d0:	add    esp,DWORD PTR [eax]
  43e5d2:	cmp    al,0x0
  43e5d4:	xchg   ebp,eax
  43e5d5:	xchg   esi,eax
  43e5d6:	mov    ?,WORD PTR [ecx+edx*4]
  43e5d9:	xchg   esi,eax
  43e5da:	mov    eax,ds:0xc896b73c
  43e5df:	cmp    al,0x78
  43e5e1:	xchg   esi,eax
  43e5e2:	loopne 0x43e620
  43e5e4:	add    BYTE PTR [eax],al
  43e5e6:	add    BYTE PTR [edi+edx*4],bh
  43e5e9:	repnz cmp al,0xcb
  43e5ec:	lods   al,BYTE PTR ds:[esi]
  43e5ed:	or     bh,BYTE PTR ds:0x3d2dacdc
  43e5f3:	sub    DWORD PTR [esp+ebx*2+0x6bac9e3d],0x3d
  43e5fb:	mov    bl,0xac
  43e5fd:	xchg   DWORD PTR ds:0x3df6abf4,edi
  43e603:	xchg   esp,eax
  43e604:	xchg   ebp,eax
  43e605:	add    al,0x3e
  43e607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e608:	xchg   ebp,eax
  43e609:	adc    eax,0x4f95c33e
  43e60e:	mov    DWORD PTR ds:[esi+0x379afff8],edx
  43e615:	cli    
  43e616:	jmp    DWORD PTR [esi]
  43e618:	add    eax,DWORD PTR [eax]
  43e61a:	add    BYTE PTR [edx],dl
  43e61c:	cwde   
  43e61d:	mov    bl,0x31
  43e61f:	xchg   ebp,eax
  43e620:	xchg   ecx,eax
  43e621:	and    DWORD PTR [edx],esi
  43e623:	mov    ds:0x25333692,al
  43e628:	xchg   edx,eax
  43e629:	arpl   WORD PTR [ebx],si
  43e62b:	ficom  DWORD PTR [edx-0x6d84cc61]
  43e631:	or     al,0x34
  43e633:	inc    ecx
  43e634:	xchg   ebx,eax
  43e635:	sub    eax,0x809eaf34
  43e63a:	xor    al,0x8d
  43e63c:	xchg   ebx,eax
  43e63d:	xor    BYTE PTR ds:0x36329d36,0xbb
  43e644:	mov    al,ds:0x9dec3671
  43e649:	cmp    BYTE PTR ss:[eax],al
  43e64c:	add    BYTE PTR [eax],al
  43e64e:	jno    0x43e5ff
  43e650:	lds    edi,FWORD PTR [eax]
  43e652:	repz fwait
  43e654:	in     eax,0x1a
  43e656:	retf   0xe4e2
  43e659:	push   ebp
  43e65a:	retf   0xe4f5
  43e65d:	ins    DWORD PTR es:[edi],dx
  43e65e:	mov    edx,0xba82e599
  43e663:	aas    
  43e664:	out    0x98,al
  43e666:	sub    al,BYTE PTR [eax+0x392ad0e5]
  43e66c:	out    0x13,al
  43e66e:	sbb    esi,esi
  43e670:	jmp    0xeafbffa7
  43e675:	cdq    
  43e676:	or     ecx,edi
  43e678:	jmp    0xf856:0xeb0f09f2
  43e67f:	xor    ah,ch
  43e681:	sar    eax,0xd1
  43e684:	jmp    0x43e6c1
  43e686:	out    dx,eax
  43e687:	jg     0x43e671
  43e689:	pop    esi
  43e68a:	out    0x77,eax
  43e68c:	call   0xe931c60a
  43e691:	or     dh,dl
  43e693:	outs   dx,DWORD PTR ds:[esi]
  43e694:	jmp    0xe9adb4e9
  43e699:	jae    0x43e661
  43e69b:	aas    
  43e69c:	jmp    0xb6c6:0xe9debe96
  43e6a3:	lahf   
  43e6a4:	jmp    0x2410:0xef0e2d07
  43e6ab:	mov    al,0x1c
  43e6ad:	(bad)  
  43e6ae:	pop    esp
  43e6af:	jo     0x43e6b4
  43e6b1:	add    BYTE PTR [eax],al
  43e6b3:	add    BYTE PTR [eax],al
  43e6b5:	repz cmp ah,dh
  43e6b8:	in     eax,0x3
  43e6ba:	mov    cl,0xf3
  43e6bc:	data16 add bl,cl
  43e6bf:	repnz retf 0xb302
  43e6c3:	out    dx,al
  43e6c4:	xor    al,BYTE PTR [ecx]
  43e6c6:	push   ss
  43e6c7:	out    dx,al
  43e6c8:	fabs   
  43e6ca:	pop    esi
  43e6cb:	in     eax,dx
  43e6cc:	or     eax,0xf30106e0
  43e6d1:	jecxz  0x43e6a8
  43e6d3:	cmp    eax,0xb4d647f3
  43e6d8:	repz cld 
  43e6da:	rol    BYTE PTR [ecx],cl
  43e6dc:	clc    
  43e6dd:	xchg   esi,eax
  43e6de:	shr    BYTE PTR [edx-0x8],cl
  43e6e1:	xor    edx,ebx
  43e6e3:	fdivp  st(0),st
  43e6e5:	leave  
  43e6e6:	shr    DWORD PTR [esi-0x582c7808],cl
  43e6ec:	stc    
  43e6ed:	iret   
  43e6ee:	rcr    DWORD PTR [ecx],cl
  43e6f0:	div    BYTE PTR [edx-0x409d430]
  43e6f6:	ror    DWORD PTR [ebx],1
  43e6f8:	idiv   DWORD PTR [esi]
  43e6fa:	rol    bh,cl
  43e6fc:	mul    BYTE PTR [ecx+edx*8+0x1b]
  43e700:	test   eax,0xd4ebedd1
  43e706:	fimul  WORD PTR [ebx]
  43e708:	in     al,dx
  43e709:	jmp    0x62de:0x7bebb4de
  43e710:	in     al,dx
  43e711:	mov    ds:0xc5ecfbde,eax
  43e716:	fild   WORD PTR [esp+ebp*8+0x73000000]
  43e71d:	fild   WORD PTR ds:0x1fdcb2ed
  43e723:	jmp    0xde33:0xead4dc85
  43e72a:	fucomi st,st(7)
  43e72c:	pop    es
  43e72d:	fistp  DWORD PTR [esi+0x6cdab5ef]
  43e733:	out    dx,eax
  43e734:	xor    eax,0xef104da
  43e739:	fcomp  QWORD PTR [eax]
  43e73b:	icebp  
  43e73c:	mov    bl,0xdb
  43e73e:	popf   
  43e73f:	lock and ebx,ebx
  43e742:	popf   
  43e743:	lock push edx
  43e745:	(bad)  [ecx-0x24c610]
  43e74b:	jmp    0x43e76b
  43e74d:	add    bh,BYTE PTR [edx]
  43e74f:	int3   
  43e750:	push   ss
  43e751:	loope  0x43e78c
  43e753:	loopne 0x43e763
  43e755:	fidivr WORD PTR [ecx]
  43e757:	es add eax,0x1d363a4c
  43e75d:	sbb    eax,0x6116733a
  43e762:	cmp    DWORD PTR [edx-0x78c643f2],esi
  43e768:	push   es
  43e769:	test   al,0x39
  43e76b:	or     ebx,esp
  43e76d:	push   edi
  43e76e:	cmp    BYTE PTR [esi-0x16c76e2b],dl
  43e774:	and    BYTE PTR [ecx+0x6f045f8],bl
  43e77a:	add    cl,cl
  43e77c:	ror    BYTE PTR [edi+ebp*1-0x4c],0x0
  43e781:	add    BYTE PTR [eax],al
  43e783:	shr    DWORD PTR [ebp*1+0x2cb9c164],0xd3
  43e78b:	mov    esp,0xa4483351
  43e790:	pop    es
  43e791:	xor    ebx,DWORD PTR [esi+0x323274ab]
  43e797:	fwait
  43e798:	or     esi,DWORD PTR [edx]
  43e79a:	gs sahf 
  43e79c:	xor    DWORD PTR ss:[ebp+eax*4+0x7d913127],esi
  43e7a4:	sbb    esi,DWORD PTR [ecx]
  43e7a6:	ja     0x43e72d
  43e7a8:	jo     0x43e7da
  43e7aa:	dec    ebx
  43e7ab:	jge    0x43e801
  43e7ad:	xor    BYTE PTR [ecx],ch
  43e7af:	gs ret 0x1130
  43e7b3:	pop    ebp
  43e7b4:	mov    al,ds:0x9366da30
  43e7b9:	xor    cl,dh
  43e7bb:	dec    eax
  43e7bc:	or     bh,BYTE PTR [eax]
  43e7be:	or     DWORD PTR [edi-0x1a],ebx
  43e7c1:	aaa    
  43e7c2:	push   cs
  43e7c3:	push   edi
  43e7c4:	inc    esi
  43e7c5:	cmp    BYTE PTR [eax],al
  43e7c7:	add    eax,0x11384eab
  43e7cc:	stos   DWORD PTR es:[edi],eax
  43e7cd:	pop    ebx
  43e7ce:	cmp    BYTE PTR [edi-0x6fc79056],dh
  43e7d4:	stos   BYTE PTR es:[edi],al
  43e7d5:	(bad)  
  43e7d6:	cmp    BYTE PTR [edi-0x55],dh
  43e7d9:	fwait
  43e7da:	cmp    bl,al
  43e7dc:	stos   BYTE PTR es:[edi],al
  43e7dd:	scas   eax,DWORD PTR es:[edi]
  43e7de:	cmp    BYTE PTR [edx-0x55],bl
  43e7e1:	mov    edi,0xd7ab6738
  43e7e6:	cmp    BYTE PTR [eax],al
  43e7e8:	add    BYTE PTR [eax],al
  43e7ea:	ins    BYTE PTR es:[edi],dx
  43e7eb:	stos   DWORD PTR es:[edi],eax
  43e7ec:	out    0x38,al
  43e7ee:	jle    0x43e79a
  43e7f0:	repz cmp dh,bl
  43e7f3:	lods   al,BYTE PTR ds:[esi]
  43e7f4:	add    edi,DWORD PTR [ecx]
  43e7f6:	retf   
  43e7f7:	lods   al,BYTE PTR ds:[esi]
  43e7f8:	sbb    edi,DWORD PTR [ecx]
  43e7fa:	add    BYTE PTR [edx+ebp*1+0x3eac1239],ch
  43e801:	cmp    DWORD PTR [esp+ebp*4-0x537ec6b3],edx
  43e808:	cmp    DWORD PTR fs:[eax-0x54],edi
  43e80c:	jb     0x43e847
  43e80e:	dec    edx
  43e80f:	lods   al,BYTE PTR ds:[esi]
  43e810:	cmp    DWORD PTR [ecx],0x3991ac48
  43e816:	jb     0x43e7c3
  43e818:	test   al,0x39
  43e81a:	cmp    eax,0xfa39b5ac
  43e81f:	stos   DWORD PTR es:[edi],eax
  43e820:	push   ss
  43e821:	cmp    bh,BYTE PTR [ecx+0x2c3a99ad]
  43e827:	lods   eax,DWORD PTR ds:[esi]
  43e828:	mov    ah,0x3a
  43e82a:	mov    WORD PTR [esi-0x523dc445],gs
  43e830:	add    DWORD PTR [eax+eax*2],edi
  43e833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e834:	xor    al,0x3c
  43e836:	fsub   QWORD PTR [edi-0x586ac382]
  43e83c:	jo     0x43e87b
  43e83e:	loope  0x43e7e8
  43e840:	out    0x3d,eax
  43e842:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e844:	jmp    0xfd58:0xe9fd0527
  43e84b:	jno    0x43e837
  43e84d:	add    al,BYTE PTR [eax]
  43e84f:	add    BYTE PTR [eax],al
  43e851:	hlt    
  43e852:	add    ch,bl
  43e854:	sub    eax,0x42eb91ec
  43e859:	in     al,0xf9
  43e85b:	jmp    0xd4ba:0xec4cdc60
  43e862:	lods   eax,DWORD PTR ds:[esi]
  43e863:	jl     0x43e862
  43e865:	or     al,0x99
  43e867:	std    
  43e868:	push   ebx
  43e86a:	cmp    ch,ch
  43e86c:	fwait
  43e86d:	ret    
  43e86e:	sbb    ch,ch
  43e870:	push   es
  43e871:	ret    0xedbd
  43e874:	pop    ds
  43e875:	and    ah,al
  43e877:	in     al,dx
  43e878:	inc    esp
  43e879:	and    al,BYTE PTR ds:0xbb2263ed
  43e87f:	in     eax,dx
  43e880:	mov    ebx,0xd3edec22
  43e885:	add    bl,ch
  43e887:	in     eax,dx
  43e888:	pop    esp
  43e889:	add    DWORD PTR [ebp+0x2e01b8ee],ecx
  43e88f:	lock mov ds:0xf9f04e00,eax
  43e895:	loopne 0x43e82c
  43e897:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e899:	fistp  WORD PTR [ecx+esi*8]
  43e89c:	mov    ecx,0x17f1a1e7
  43e8a1:	fmulp  st(5),st
  43e8a3:	icebp  
  43e8a4:	cld    
  43e8a5:	(bad)  
  43e8a6:	pushf  
  43e8a7:	repnz and BYTE PTR [ebp-0x3abc0d52],bh
  43e8ae:	pop    edx
  43e8af:	repnz pop esi
  43e8b1:	mov    ebp,0x7df277
  43e8b6:	add    BYTE PTR [eax],al
  43e8b8:	and    eax,0x1dbdf337
  43e8bd:	stc    
  43e8be:	repnz sbb ah,BYTE PTR [edi+eax*1]
  43e8c2:	es repz test eax,0xa9f335dd
  43e8c9:	(bad)  [eax+0x5dcef3f3]
  43e8cf:	in     al,dx
  43e8d0:	jg     0x43e8a1
  43e8d2:	fsubr  st,st(4)
  43e8d4:	adc    al,dl
  43e8d6:	sub    ebp,ebp
  43e8d8:	xchg   ebp,eax
  43e8d9:	iret   
  43e8da:	cs in  eax,dx
  43e8dc:	jne    0x43e8ae
  43e8de:	stos   DWORD PTR es:[edi],eax
  43e8df:	in     eax,dx
  43e8e0:	add    eax,0xdbedcfd1
  43e8e5:	shr    BYTE PTR [esi],1
  43e8e7:	out    dx,al
  43e8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e8e9:	shl    BYTE PTR [ecx],1
  43e8eb:	out    dx,al
  43e8ec:	jbe    0x43e8bf
  43e8ee:	outs   dx,BYTE PTR ds:[esi]
  43e8ef:	out    dx,al
  43e8f0:	dec    eax
  43e8f1:	shl    DWORD PTR [edx-0x752ee512],1
  43e8f7:	out    dx,al
  43e8f8:	in     eax,0xd0
  43e8fa:	(bad)  
  43e8fc:	add    eax,0x4cef21d2
  43e901:	sar    BYTE PTR [ebx-0x11],cl
  43e904:	jp     0x43e8d7
  43e906:	sub    edi,0xffffff9b
  43e909:	ror    DWORD PTR [esi+0x47d1aeef],1
  43e90f:	out    dx,eax
  43e910:	int    0xd1
  43e912:	ds out dx,eax
  43e914:	mov    edx,0xffe7efd1
  43e919:	ror    bh,cl
  43e91b:	out    0x0,eax
  43e91d:	add    BYTE PTR [eax],al
  43e91f:	rcl    dl,1
  43e921:	cld    
  43e922:	out    0xcd,eax
  43e924:	rcr    dh,cl
  43e926:	out    0x25,eax
  43e928:	sar    DWORD PTR [ecx+0x6bd31ce7],cl
  43e92e:	call   0xe886bb90
  43e933:	inc    esp
  43e934:	rol    BYTE PTR [ebx-0x18],cl
  43e937:	aaa    
  43e938:	rcl    BYTE PTR [esi],cl
  43e93a:	call   0x943bb82
  43e93f:	pop    ebx
  43e940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e941:	cmp    esp,edi
  43e943:	dec    ebx
  43e944:	add    DWORD PTR [ebx],edi
  43e946:	xor    ecx,DWORD PTR [edx+0x45]
  43e949:	cmp    esi,DWORD PTR [esi]
  43e94b:	pop    edx
  43e94c:	sub    edi,DWORD PTR [ebx]
  43e94e:	sbb    BYTE PTR [ebx+0x58],0x3a
  43e952:	lea    ecx,[ebx-0x5b]
  43e955:	cmp    bh,BYTE PTR [edi+0x13a054b]
  43e95b:	sbb    DWORD PTR [ecx+0x3a],eax
  43e95e:	cmp    DWORD PTR [ecx],ebx
  43e960:	lea    edi,[ecx]
  43e962:	ins    DWORD PTR es:[edi],dx
  43e963:	or     bl,BYTE PTR [eax-0x6bf55ac7]
  43e969:	cmp    edx,edi
  43e96b:	sbb    edi,esp
  43e96d:	cmp    bh,dl
  43e96f:	sbb    DWORD PTR [esi],edi
  43e971:	cmp    DWORD PTR [eax+ecx*1],ebp
  43e974:	sbb    bh,BYTE PTR [ecx]
  43e976:	push   0x9
  43e978:	je     0x43e9b2
  43e97a:	aaa    
  43e97b:	fst    DWORD PTR [eax+0x38]
  43e97e:	jmp    0x7e3c7c03
  43e983:	add    BYTE PTR [eax],al
  43e985:	add    al,dh
  43e987:	push   es
  43e988:	add    BYTE PTR [ecx-0x70cfc920],dh
  43e98e:	rol    al,0x2f
  43e991:	dec    ecx
  43e992:	shl    BYTE PTR [edi-0x381ed1],0x2e
  43e999:	add    al,0xbe
  43e99b:	sbb    ebp,DWORD PTR [edi]
  43e99d:	outs   dx,BYTE PTR ds:[esi]
  43e99e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e99f:	enter  0x4f2e,0x9f
  43e9a3:	mov    gs,WORD PTR [esi]
  43e9a5:	call   0xfd9e:0x782e2ca6
  43e9ac:	sub    al,0xfe
  43e9ae:	test   DWORD PTR [ecx+0x2d],eax
  43e9b1:	mov    BYTE PTR [ebp+0xf],bh
  43e9b4:	sub    eax,0x2c5d8575
  43e9b9:	add    cl,cl
  43e9bb:	pushf  
  43e9bc:	ret    0x3833
  43e9bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e9c0:	inc    esi
  43e9c1:	xor    al,0x7c
  43e9c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e9c4:	shl    DWORD PTR [eax+eax*4],1
  43e9c7:	xchg   edi,eax
  43e9c8:	cwde   
  43e9c9:	xor    eax,0x36ba98be
  43e9ce:	sbb    DWORD PTR [ecx-0x667bc938],0xffffffd6
  43e9d5:	ss ss cdq 
  43e9d8:	loop   0x43ea10
  43e9da:	js     0x43e975
  43e9dc:	pop    es
  43e9dd:	aaa    
  43e9de:	adc    dl,BYTE PTR [edi-0x6a0fc8e7]
  43e9e4:	sub    esi,DWORD PTR [edi]
  43e9e6:	and    BYTE PTR [edi+0x373c],dl
  43e9ec:	add    al,ah
  43e9ee:	xchg   ebp,eax
  43e9ef:	dec    ebx
  43e9f0:	aaa    
  43e9f1:	mov    al,0x95
  43e9f3:	push   edi
  43e9f4:	aaa    
  43e9f5:	icebp  
  43e9f6:	xchg   ebp,eax
  43e9f7:	push   0x37
  43e9f9:	mov    ch,0x95
  43e9fb:	lods   al,BYTE PTR ds:[esi]
  43e9fc:	aaa    
  43e9fd:	inc    ecx
  43e9fe:	xchg   esi,eax
  43e9ff:	push   ebp
  43ea00:	cmp    ch,dh
  43ea02:	mov    ds:0xa28438a0,al
  43ea07:	fdivr  DWORD PTR [eax]
  43ea09:	mov    gs:0x9ffb3912,eax
  43ea0f:	aas    
  43ea10:	cmp    DWORD PTR [esi+0x6e3974a0],edi
  43ea16:	lahf   
  43ea17:	mov    esp,0x18a1c939
  43ea1c:	cmp    ah,al
  43ea1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ea1f:	sub    bh,BYTE PTR [edx]
  43ea21:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ea23:	push   ebx
  43ea24:	cmp    dh,BYTE PTR [ecx+eiz*4-0x5aedc592]
  43ea2b:	test   eax,0xe5a4da3a
  43ea30:	cmp    cl,BYTE PTR [esi-0xcc3e65e]
  43ea36:	mov    ecx,0x57bf4ce0
  43ea3b:	loopne 0x43e9ca
  43ea3d:	mov    bh,0xce
  43ea3f:	out    0xe6,eax
  43ea41:	das    
  43ea42:	mov    ds:0x692616e1,al
  43ea47:	loope  0x43eaa2
  43ea49:	push   ds
  43ea4a:	sub    ah,cl
  43ea4c:	fwait
  43ea4d:	push   ss
  43ea4e:	push   0xbce1
  43ea53:	add    BYTE PTR [esi],cl
  43ea55:	mov    edi,0xad06e8e1
  43ea5a:	out    0x20,al
  43ea5c:	std    
  43ea5d:	xchg   ecx,eax
  43ea5e:	out    0x72,al
  43ea60:	cmc    
  43ea61:	xor    bh,ah
  43ea63:	mov    dl,0xed
  43ea65:	push   edi
  43ea66:	out    0xc8,al
  43ea68:	in     eax,0xa5
  43ea6a:	out    0x51,eax
  43ea6c:	fsubr  st(3),st
  43ea6e:	out    0x8b,al
  43ea70:	aam    0x2c
  43ea72:	call   0x5ce1b753
  43ea77:	std    
  43ea78:	add    al,0xd5
  43ea7a:	add    eax,DWORD PTR [eax]
  43ea7c:	repz (bad) 
  43ea7e:	in     al,dx
  43ea7f:	inc    ebp
  43ea80:	ret    
  43ea81:	repz repz pop edx
  43ea84:	and    esp,DWORD PTR [ebp*8-0x12c4dc73]
  43ea8b:	mov    ds:0x20ed2423,eax
  43ea90:	and    DWORD PTR [ebx+esi*8+0x24],ecx
  43ea94:	add    BYTE PTR [ebx-0xd],ah
  43ea97:	adc    eax,0xa2ea0fff
  43ea9c:	push   es
  43ea9d:	loopne 0x43ea88
  43ea9f:	xlat   BYTE PTR ds:[ebx]
  43eaa0:	std    
  43eaa1:	cmp    ch,bh
  43eaa3:	add    al,0xe4
  43eaa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eaa6:	out    dx,eax
  43eaa7:	xor    bl,ah
  43eaa9:	(bad)  
  43eaaa:	out    dx,eax
  43eaab:	inc    esi
  43eaac:	in     al,0x72
  43eaae:	out    dx,eax
  43eaaf:	dec    esi
  43eab0:	fadd   QWORD PTR [esi]
  43eab2:	mov    esp,0xbbda25f0
  43eab7:	lock add BYTE PTR [eax],al
  43eaba:	add    BYTE PTR ds:0x15f08bda,ah
  43eac0:	fidivr DWORD PTR [ebx-0x10]
  43eac3:	add    eax,0xe5f07bda
  43eac8:	fnstcw WORD PTR [ebx-0x10]
  43eacb:	in     eax,0xd9
  43eacd:	jle    0x43eaba
  43eacf:	loope  0x43eaa4
  43ead1:	out    0x73,al
  43ead3:	push   esi
  43ead4:	xchg   edx,eax
  43ead5:	mov    BYTE PTR [ebx+esi*8],0x6
  43ead9:	aaa    
  43eada:	hlt    
  43eadb:	adc    edi,0xd816f4b4
  43eae1:	sub    al,0xf5
  43eae3:	mov    ebp,0x35f587d7
  43eae8:	fcomp  st(6)
  43eaea:	out    dx,eax
  43eaeb:	(bad)  
  43eaec:	fimul  DWORD PTR [edi-0x10]
  43eaef:	or     eax,0x1ee05dc
  43eaf4:	sar    bh,1
  43eaf6:	in     al,dx
  43eaf7:	jmp    0xd230b2cb
  43eafc:	iret   
  43eafd:	mov    edi,0xd7cfc9ec
  43eb02:	in     al,dx
  43eb03:	ror    edi,0xbf
  43eb06:	in     al,dx
  43eb07:	sub    eax,edx
  43eb09:	daa    
  43eb0a:	in     eax,dx
  43eb0b:	xor    eax,edx
  43eb0d:	pop    ds
  43eb0e:	in     eax,dx
  43eb0f:	sub    eax,edx
  43eb11:	pop    ss
  43eb12:	in     eax,dx
  43eb13:	inc    ecx
  43eb14:	sar    BYTE PTR [edi-0x382fd614],1
  43eb1a:	in     al,dx
  43eb1b:	push   ecx
  43eb1c:	sar    BYTE PTR [edi+0xec],1
  43eb22:	dec    ecx
  43eb23:	rcl    bh,1
  43eb25:	in     al,dx
  43eb26:	inc    ecx
  43eb27:	sar    BYTE PTR [edi+0x67d029ec],1
  43eb2d:	in     eax,dx
  43eb2e:	jno    0x43eaff
  43eb30:	call   FWORD PTR [edi-0x72]
  43eb33:	jl     0x43eb6b
  43eb35:	pop    eax
  43eb36:	xchg   BYTE PTR [esi+esi*1-0x80],dh
  43eb3a:	sahf   
  43eb3b:	ins    BYTE PTR es:[edi],dx
  43eb3c:	ss dec eax
  43eb3e:	xchg   esi,eax
  43eb3f:	fs ss inc eax
  43eb42:	mov    ds,WORD PTR [esi+esi*1+0x58]
  43eb46:	xchg   BYTE PTR [esi+esi*1+0x40],dl
  43eb4a:	pop    esi
  43eb4b:	dec    esp
  43eb4c:	sub    BYTE PTR ss:[esi-0x3c],dl
  43eb50:	and    BYTE PTR ss:[esi-0x44],cl
  43eb54:	sbb    BYTE PTR ss:[esi-0x4c],al
  43eb58:	rcr    BYTE PTR ss:[edi-0x54],0x36
  43eb5d:	enter  0xa457,0x36
  43eb61:	ror    BYTE PTR [edi-0x64],0x36
  43eb65:	fadd   DWORD PTR [edi-0x6c]
  43eb68:	rcr    BYTE PTR ss:[edi],0x8c
  43eb6c:	ss call 0xe079ef8c
  43eb72:	or     bh,ah
  43eb74:	xor    eax,0x35f40ad8
  43eb79:	add    BYTE PTR [ecx],bl
  43eb7b:	in     al,dx
  43eb7c:	xor    eax,0x35e41ac8
  43eb81:	ror    BYTE PTR [edx],0xdc
  43eb84:	xor    eax,0xd8
  43eb89:	or     dl,ah
  43eb8b:	xor    eax,0x3551dac0
  43eb90:	sub    eax,ebx
  43eb92:	dec    edx
  43eb93:	xor    eax,0x350fc9fd
  43eb98:	pop    esp
  43eb99:	leave  
  43eb9a:	jb     0x43ebd0
  43eb9c:	push   edx
  43eb9d:	fstp   DWORD PTR [eax+0x3accb334]
  43eba3:	cmp    al,0x71
  43eba5:	aam    0x61
  43eba7:	cmp    ch,BYTE PTR [eax]
  43eba9:	retf   
  43ebaa:	(bad)  
  43ebab:	cmp    al,BYTE PTR [eax]
  43ebad:	cmp    bl,BYTE PTR [edi-0x55fac15a]
  43ebb3:	jno    0x43ebf4
  43ebb5:	inc    ecx
  43ebb6:	test   eax,0xc48afff8
  43ebbb:	cli    
  43ebbc:	jmp    FWORD PTR [esi]
  43ebbe:	add    al,0x0
  43ebc0:	add    BYTE PTR [edi],cl
  43ebc2:	xchg   esp,eax
  43ebc3:	mov    ds:0xc6942530,eax
  43ebc8:	xor    ch,ch
  43ebca:	xchg   ebx,eax
  43ebcb:	adc    esi,DWORD PTR [ecx]
  43ebcd:	mov    eax,ds:0xf3315a9b
  43ebd2:	call   0x320a:0x964c31f8
  43ebd9:	sub    eax,0xb1324c96
  43ebde:	xchg   esp,eax
  43ebdf:	test   eax,0xf2953732
  43ebe4:	xor    al,BYTE PTR [eax-0x69]
  43ebe7:	push   ds
  43ebe8:	xor    eax,DWORD PTR [ebx]
  43ebea:	xchg   esi,eax
  43ebeb:	jp     0x43ec20
  43ebed:	add    BYTE PTR [eax],al
  43ebef:	add    bl,cl
  43ebf1:	xchg   ebp,eax
  43ebf2:	jmp    0x43ec27
  43ebf4:	sbb    BYTE PTR [eax-0x603ccbf0],ah
  43ebfa:	lds    esi,FWORD PTR ds:0x35e6a07e
  43ec00:	ins    BYTE PTR es:[edi],dx
  43ec01:	mov    al,ds:0xa21f360e
  43ec06:	cmp    dh,BYTE PTR [esi]
  43ec08:	dec    esp
  43ec09:	mov    eax,ds:0xa17136cd
  43ec0e:	in     al,dx
  43ec0f:	shl    BYTE PTR ss:[edx-0x5ddbc87f],cl
  43ec16:	and    edi,DWORD PTR [eax]
  43ec18:	cld    
  43ec19:	mov    ds:0x9c943879,al
  43ec1e:	mov    eax,0xb69d7639
  43ec23:	cmp    edi,DWORD PTR [ecx]
  43ec25:	sahf   
  43ec26:	(bad)  
  43ec27:	cmp    esi,ebx
  43ec29:	dec    edi
  43ec2a:	loopne 0x43ebb8
  43ec2c:	idiv   BYTE PTR [ebp-0x20]
  43ec2f:	lods   eax,DWORD PTR ds:[esi]
  43ec30:	out    dx,al
  43ec31:	fchs   
  43ec33:	int    0xe6
  43ec35:	inc    ecx
  43ec36:	loope  0x43ec2d
  43ec38:	fisubr WORD PTR [edx+eiz*8-0x1dfc2aea]
  43ec3f:	cmp    ebp,ecx
  43ec41:	dec    ebp
  43ec42:	loop   0x43ec95
  43ec44:	lds    esp,FWORD PTR [esi-0x1e]
  43ec47:	test   DWORD PTR [ebp-0x4a5a1def],edi
  43ec4d:	sub    eax,0xd62dbde2
  43ec52:	loope  0x43ec2d
  43ec54:	add    BYTE PTR [eax],al
  43ec56:	add    BYTE PTR ds:0x1df5e28f,ah
  43ec5c:	sahf   
  43ec5d:	jecxz  0x43ec6b
  43ec5f:	adc    al,0xb7
  43ec61:	jecxz  0x43ec90
  43ec63:	or     al,0xdf
  43ec65:	loop   0x43ecb8
  43ec67:	add    al,0x40
  43ec69:	jecxz  0x43ece3
  43ec6b:	cld    
  43ec6c:	sub    ah,ah
  43ec6e:	lods   eax,DWORD PTR ds:[esi]
  43ec6f:	hlt    
  43ec70:	push   ebx
  43ec71:	jecxz  0x43ec72
  43ec73:	sub    al,0x9d
  43ec75:	int3   
  43ec76:	std    
  43ec77:	and    al,0x31
  43ec79:	std    
  43ec7a:	push   ebx
  43ec7c:	mov    eax,ds:0xf2e328ec
  43ec81:	repz pop ebp
  43ec83:	ret    
  43ec84:	sbb    al,0xed
  43ec86:	mov    al,bl
  43ec88:	xor    eax,0x38c3a9ed
  43ec8d:	in     eax,dx
  43ec8e:	(bad)
  43ec91:	in     al,dx
  43ec92:	add    DWORD PTR [edx],esp
  43ec94:	add    eax,0x282286ed
  43ec99:	out    dx,al
  43ec9a:	mov    al,ds:0xe9edcc22
  43ec9f:	and    ch,BYTE PTR [esi]
  43eca1:	out    dx,eax
  43eca2:	nop
  43eca3:	add    DWORD PTR [edi],eax
  43eca5:	fwait
  43eca6:	icebp  
  43eca7:	xchg   cl,bl
  43eca9:	pop    edx
  43ecaa:	icebp  
  43ecab:	adc    ebx,edx
  43ecad:	push   edx
  43ecae:	lock adc bl,dl
  43ecb1:	lods   eax,DWORD PTR ds:[esi]
  43ecb2:	out    dx,eax
  43ecb3:	das    
  43ecb4:	ror    DWORD PTR [ebp-0x242bd211],cl
  43ecba:	in     al,dx
  43ecbb:	add    BYTE PTR [eax],al
  43ecbd:	add    bh,ah
  43ecbf:	aad    0xa8
  43ecc1:	in     al,dx
  43ecc2:	dec    edi
  43ecc3:	(bad)  
  43ecc4:	jo     0x43ecb2
  43ecc6:	mov    dl,0xd6
  43ecc8:	out    0xeb,eax
  43ecca:	out    dx,al
  43eccb:	into   
  43eccc:	xchg   edx,eax
  43eccd:	jmp    0x43ed3e
  43eccf:	iret   
  43ecd0:	jno    0x43ecba
  43ecd2:	push   ecx
  43ecd3:	sar    BYTE PTR [edi-0x3349f19],cl
  43ecd9:	out    0x4a,al
  43ecdb:	int3   
  43ecdc:	(bad)
  43ecdf:	int    0xb7
  43ece1:	in     eax,0x23
  43ece3:	int    0xa9
  43ece5:	in     eax,0xb2
  43ece7:	int3   
  43ece8:	sub    al,0xe2
  43ecea:	mov    ah,0xcc
  43ecec:	xor    dl,ah
  43ecee:	call   0x91cd:0x84e25acc
  43ecf5:	loop   0x43ed61
  43ecf7:	int    0xaa
  43ecf9:	loop   0x43ed33
  43ecfb:	int    0x95
  43ecfd:	loop   0x43ed42
  43ecff:	int    0x93
  43ed01:	loop   0x43ed3a
  43ed03:	int    0xbd
  43ed05:	loop   0x43ecf7
  43ed07:	int    0xd0
  43ed09:	loop   0x43ecbe
  43ed0b:	int    0x74
  43ed0d:	jecxz  0x43ed58
  43ed0f:	into   
  43ed10:	jg     0x43ecf5
  43ed12:	clc    
  43ed13:	int    0xe6
  43ed15:	mov    ds:0x3fa8dee,eax
  43ed1a:	repz push es
  43ed1c:	int    0xd3
  43ed1e:	sub    bh,dl
  43ed20:	inc    DWORD PTR [eax+eax*1]
  43ed23:	add    BYTE PTR [eax],al
  43ed25:	mov    edi,0xa7a52f54
  43ed2a:	(bad)  [esi]
  43ed2c:	out    0x9f,eax
  43ed2e:	pop    ecx
  43ed2f:	cs pop ds
  43ed31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ed32:	dec    ecx
  43ed33:	cs mov al,0x9e
  43ed36:	sub    BYTE PTR ds:0x2d5fc57a,0x4f
  43ed3d:	mov    ebp,0xc5d62d03
  43ed42:	sub    eax,0x58bc6d2d
  43ed47:	sub    al,0x27
  43ed49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ed4a:	scas   eax,DWORD PTR es:[edi]
  43ed4b:	sub    al,0xf1
  43ed4d:	pushf  
  43ed4e:	out    dx,al
  43ed4f:	xor    ebx,edi
  43ed51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ed52:	push   ss
  43ed53:	xor    al,0xfd
  43ed55:	fwait
  43ed56:	out    0x32,al
  43ed58:	mov    ds:0x1432c44b,al
  43ed5d:	dec    edx
  43ed5e:	div    BYTE PTR [ecx]
  43ed60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ed61:	cmp    al,BYTE PTR [ebx+0x32]
  43ed64:	cwde   
  43ed65:	cmp    dh,BYTE PTR [edi]
  43ed67:	xor    cl,BYTE PTR [ebx-0x36ce4cd6]
  43ed6d:	sub    bh,BYTE PTR [ecx]
  43ed6f:	xor    DWORD PTR [edi],edi
  43ed71:	sbb    BYTE PTR [esi+0x3519cc30],bh
  43ed77:	ss scas al,BYTE PTR es:[edi]
  43ed79:	dec    ebp
  43ed7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ed7b:	xor    al,0xc4
  43ed7d:	inc    ebp
  43ed7e:	inc    esp
  43ed7f:	cmp    al,0x3a
  43ed81:	adc    edi,DWORD PTR [edi+0x19111f3b]
  43ed87:	cmp    cl,BYTE PTR [ecx+0x12000000]
  43ed8d:	(bad)  
  43ed8e:	clc    
  43ed8f:	jmp    0x4a3c78f4
  43ed94:	lock push es
  43ed96:	add    cl,cl
  43ed98:	and    BYTE PTR ds:0xf8c68a2e,dl
  43ed9e:	sub    al,0x0
  43eda0:	shl    BYTE PTR [ebp-0x4a55ccec],cl
  43eda6:	sbb    al,0x33
  43eda8:	mov    dl,0xb5
  43edaa:	and    al,0x33
  43edac:	mov    dh,BYTE PTR [ebp-0x4bedccd4]
  43edb2:	xor    al,0x33
  43edb4:	mov    dh,BYTE PTR [ebp-0x4a6dccc4]
  43edba:	inc    esp
  43edbb:	xor    ebp,DWORD PTR [edx-0x4b]
  43edbe:	xchg   DWORD PTR [ebx],esi
  43edc0:	jg     0x43ed77
  43edc2:	int3   
  43edc3:	xor    ebx,ebp
  43edc5:	mov    ah,0x22
  43edc7:	xor    al,0x98
  43edc9:	mov    ah,0x67
  43edcb:	xor    al,0x0
  43edcd:	mov    ah,0x13
  43edcf:	xor    eax,0x3579af4b
  43edd4:	xchg   edi,eax
  43edd5:	scas   al,BYTE PTR es:[edi]
  43edd6:	cs ss mov edi,0x6b378bad
  43eddd:	mov    al,0x15
  43eddf:	cmp    BYTE PTR [eax+0x7d3925b0],bl
  43ede5:	stos   DWORD PTR es:[edi],eax
  43ede6:	mov    eax,ds:0xb9ad173b
  43edeb:	cmp    al,0xe2
  43eded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43edee:	fdivr  DWORD PTR ds:0x52000000
  43edf4:	lods   al,BYTE PTR ds:[esi]
  43edf5:	ins    BYTE PTR es:[edi],dx
  43edf6:	shr    BYTE PTR ds:[eax-0x5745c188],1
  43edfd:	mov    ?,WORD PTR [esi]
  43edff:	sahf   
  43ee00:	test   al,0x9a
  43ee02:	sub    BYTE PTR ds:[ecx-0x5758c15a],0xb4
  43ee0a:	ds dec ecx
  43ee0c:	test   eax,0xa96b3ec2
  43ee11:	sar    BYTE PTR [esi],1
  43ee13:	sub    eax,0x6d3edfa9
  43ee18:	test   eax,0xa0f33eef
  43ee1d:	fisttp WORD PTR [ebx]
  43ee1f:	sub    al,0x8f
  43ee21:	fist   WORD PTR [eax]
  43ee23:	and    al,0xbf
  43ee25:	fbld   TBYTE PTR ds:0x3cdf531c
  43ee2b:	adc    al,0xe6
  43ee2d:	fimul  WORD PTR [ecx+0xc]
  43ee30:	neg    esi
  43ee32:	pop    edi
  43ee33:	add    al,0x9e
  43ee35:	cld    
  43ee36:	cld    
  43ee37:	mov    esp,0xf30003ed
  43ee3c:	test   al,0xcc
  43ee3e:	adc    esp,ebx
  43ee40:	in     al,0xd3
  43ee42:	shl    bl,cl
  43ee44:	(bad)  
  43ee45:	int    0x72
  43ee47:	loop   0x43ee78
  43ee49:	int    0xd8
  43ee4b:	loop   0x43ee86
  43ee4d:	int    0xf3
  43ee4f:	ret    0xd6ff
  43ee52:	inc    esp
  43ee53:	mov    esp,0x5ed7c7
  43ee58:	add    BYTE PTR [eax],al
  43ee5a:	mov    ecx,0xb996da17
  43ee5f:	mov    ebp,0x412d28de
  43ee64:	fisubr WORD PTR [esi-0x31361db]
  43ee6a:	pop    esp
  43ee6b:	test   eax,0x58f3fffc
  43ee70:	int3   
  43ee71:	pop    es
  43ee72:	add    dl,BYTE PTR [eax]
  43ee74:	into   
  43ee75:	mov    eax,0x3cd6a702
  43ee7a:	add    al,0x5c
  43ee7c:	aam    0x0
  43ee7e:	cli    
  43ee7f:	jmp    0x43ee5e
  43ee81:	loope  0x43ee6f
  43ee83:	popf   
  43ee84:	fdiv   st(4),st
  43ee86:	and    al,0x7d
  43ee88:	cld    
  43ee89:	push   ebx
  43ee8b:	mov    edx,0x69e13ccd
  43ee90:	rcl    edi,cl
  43ee92:	sar    BYTE PTR [ecx-0x2d],0xdf
  43ee96:	rol    BYTE PTR [esi],0x8b
  43ee99:	aam    0x14
  43ee9b:	xlat   BYTE PTR ds:[ebx]
  43ee9c:	mov    dl,ah
  43ee9e:	add    al,0xd7
  43eea0:	call   0xe4d4:0x8ad6e4d4
  43eea7:	(bad)  
  43eea8:	jmp    0xe4d7:0xead2f4d7
  43eeaf:	rcr    dl,cl
  43eeb1:	xlat   BYTE PTR ds:[ebx]
  43eeb2:	in     al,0xd2
  43eeb4:	retf   0xe4d7
  43eeb7:	ror    BYTE PTR [edx],cl
  43eeb9:	fcom   DWORD PTR [ebx+edx*8]
  43eebc:	or     bl,al
  43eebe:	add    BYTE PTR [eax],al
  43eec0:	add    BYTE PTR [ebx+edx*8],al
  43eec3:	sbb    bl,al
  43eec5:	in     al,0xd2
  43eec7:	or     bl,al
  43eec9:	in     al,0xd2
  43eecb:	stos   BYTE PTR es:[edi],al
  43eecc:	xlat   BYTE PTR ds:[ebx]
  43eecd:	xor    al,0xd3
  43eecf:	stos   BYTE PTR es:[edi],al
  43eed0:	xlat   BYTE PTR ds:[ebx]
  43eed1:	and    al,0xd3
  43eed3:	call   0x22d7:0x8ad324d7
  43eeda:	shr    BYTE PTR [ebp-0x28],cl
  43eedd:	outs   dx,BYTE PTR ds:[esi]
  43eede:	sar    BYTE PTR [eax-0x28],cl
  43eee1:	dec    esi
  43eee2:	rcl    BYTE PTR [eax-0x28],cl
  43eee5:	cmp    al,0xd2
  43eee7:	sub    bl,al
  43eee9:	dec    ebp
  43eeea:	shr    bh,cl
  43eeec:	fucomi st,st(4)
  43eeee:	into   
  43eeef:	fcmovu st,st(3)
  43eef1:	or     al,0xcf
  43eef3:	mov    dl,0xdb
  43eef5:	mov    edx,0xd3db8cce
  43eefa:	into   
  43eefb:	fsubr  QWORD PTR [bp+si-0x31]
  43eeff:	jl     0x43eedd
  43ef01:	xchg   edx,eax
  43ef02:	iret   
  43ef03:	mov    esp,ds
  43ef05:	cmp    bh,cl
  43ef07:	scas   al,BYTE PTR es:[edi]
  43ef08:	fcom   QWORD PTR [ecx]
  43ef0a:	iret   
  43ef0b:	jmp    0x43eee9
  43ef0d:	out    dx,al
  43ef0e:	iret   
  43ef0f:	fcomp  st(4)
  43ef11:	into   
  43ef12:	iret   
  43ef13:	push   esi
  43ef15:	das    
  43ef16:	cmp    dh,BYTE PTR [edi]
  43ef18:	or     eax,0x7a372126
  43ef1d:	push   ds
  43ef1e:	gs ss pop eax
  43ef21:	push   ss
  43ef22:	dec    ebp
  43ef23:	mov    BYTE PTR ss:[eax],al
  43ef26:	add    BYTE PTR [eax],al
  43ef28:	into   
  43ef29:	mov    eax,edi
  43ef2b:	jmp    0xe63c79f0
  43ef30:	lock push es
  43ef32:	add    BYTE PTR [ebx],bl
  43ef34:	mov    esp,0xaf813051
  43ef39:	test   DWORD PTR [esi],esi
  43ef3b:	push   esp
  43ef3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ef3d:	repnz xor eax,0x35c49910
  43ef43:	ss cdq 
  43ef45:	mov    eax,edi
  43ef47:	jmp    0xaa3c7b7c
  43ef4c:	lock push es
  43ef4e:	add    BYTE PTR [edx-0x39cfcb40],ch
  43ef54:	rcl    BYTE PTR [eax],0x30
  43ef57:	cdq    
  43ef58:	mov    eax,ds:0xabf52d34
  43ef5d:	js     0x43ef91
  43ef5f:	test   BYTE PTR [edx-0x68adc7c6],bl
  43ef65:	aad    0x36
  43ef67:	mov    cl,0x4f
  43ef69:	xchg   edx,eax
  43ef6a:	test   BYTE PTR ss:[edx-0x1a],0x35
  43ef6f:	scas   eax,DWORD PTR es:[edi]
  43ef70:	cmp    dh,BYTE PTR [ebp+0x35]
  43ef73:	lahf   
  43ef74:	xor    al,0x24
  43ef76:	cmp    al,0x86
  43ef78:	sub    al,0xd
  43ef7a:	cmp    al,0xdb
  43ef7c:	and    eax,0x1c5338ec
  43ef81:	popf   
  43ef82:	cmp    cl,bl
  43ef84:	adc    eax,0xe0e9388d
  43ef89:	mov    edi,eax
  43ef8b:	adc    eax,0xef000000
  43ef90:	push   es
  43ef91:	add    BYTE PTR [eax],al
  43ef93:	or     dh,BYTE PTR [ebp-0x4ac5cffc]
  43ef99:	adc    al,0x30
  43ef9b:	cli    
  43ef9c:	mov    dl,0x24
  43ef9e:	xor    BYTE PTR [edx],cl
  43efa0:	mov    ch,0x34
  43efa2:	xor    dl,cl
  43efa4:	mov    dl,0x44
  43efa6:	xor    BYTE PTR [edx-0x5cfab4e],bh
  43efac:	mov    dl,0x64
  43efae:	xor    BYTE PTR [edx],cl
  43efb0:	mov    bl,0x74
  43efb2:	xor    BYTE PTR [edx-0x4c],cl
  43efb5:	test   BYTE PTR [eax],dh
  43efb7:	cmp    dh,BYTE PTR [esp+edx*4-0x74bc5d0]
  43efbe:	(bad)  
  43efbf:	fisub  DWORD PTR [esp+edi*8]
  43efc2:	inc    DWORD PTR [esi-0x45fffffd]
  43efc8:	mov    ch,0xc
  43efca:	xor    edi,esi
  43efcc:	mov    bl,0x20
  43efce:	xor    esi,esi
  43efd0:	mov    bl,0x50
  43efd2:	xor    edx,DWORD PTR [esi-0x4b]
  43efd5:	pop    eax
  43efd6:	xor    ebp,DWORD PTR [esi-0x49cc9f4b]
  43efdc:	mov    ch,0x68
  43efde:	xor    edi,DWORD PTR [esi]
  43efe0:	mov    ch,0x70
  43efe2:	xor    edx,DWORD PTR [esi-0x4b]
  43efe5:	js     0x43f01a
  43efe7:	push   cs
  43efe8:	mov    ch,0x80
  43efea:	xor    edx,esi
  43efec:	mov    ah,0x88
  43efee:	xor    ebx,esi
  43eff0:	mov    ah,0x90
  43eff2:	xor    eax,DWORD PTR [eax]
  43eff4:	add    BYTE PTR [eax],al
  43eff6:	(bad)  
  43eff7:	mov    ah,0x98
  43eff9:	xor    ebp,DWORD PTR [esi-0x49cc5f4c]
  43efff:	mov    ah,0xa8
  43f001:	xor    edi,esi
  43f003:	mov    ah,0xb0
  43f005:	xor    edx,DWORD PTR [esi-0x71cc474a]
  43f00b:	mov    dh,0xc0
  43f00d:	xor    esi,ebx
  43f00f:	popa   
  43f010:	into   
  43f011:	iret   
  43f012:	loopne 0x43f065
  43f014:	into   
  43f015:	xlat   BYTE PTR ds:[ebx]
  43f016:	loopne 0x43f079
  43f018:	into   
  43f019:	fnstsw ax
  43f01b:	ror    esi,0xe7
  43f01e:	rol    cl,0xce
  43f021:	out    dx,eax
  43f022:	rcl    BYTE PTR [ecx-0x32],0xf7
  43f026:	shl    BYTE PTR [ecx-0x32],0xff
  43f02a:	shl    BYTE PTR [ecx-0x5dd8f830],0xd0
  43f031:	nop    DWORD PTR [edx-0x5dd8e830]
  43f038:	rcr    BYTE PTR [edi],1
  43f03a:	pop    ds
  43f03b:	ret    0x27d0
  43f03e:	pop    es
  43f03f:	ret    0x2fd0
  43f042:	call   DWORD PTR [ecx-0x30]
  43f045:	aaa    
  43f046:	pop    es
  43f047:	loop   0x43f020
  43f049:	aas    
  43f04a:	jmp    DWORD PTR [ecx-0x30]
  43f04d:	inc    edi
  43f04e:	out    0x61,eax
  43f050:	ror    BYTE PTR [edi-0x21],1
  43f053:	push   ecx
  43f054:	rcl    BYTE PTR [edi-0x19],1
  43f057:	popa   
  43f058:	rcr    BYTE PTR [edi+0x0],1
  43f05b:	add    BYTE PTR [eax],al
  43f05d:	ffreep st(1)
  43f05f:	shl    BYTE PTR [edi-0x39],1
  43f062:	rcl    eax,0x6f
  43f065:	mov    edi,0xc777d051
  43f06a:	popa   
  43f06b:	sar    BYTE PTR [edi-0x41],1
  43f06e:	and    eax,ebx
  43f070:	xchg   DWORD PTR [edi],esp
  43f072:	and    bl,al
  43f074:	(bad)  
  43f075:	pop    ds
  43f076:	adc    bl,al
  43f078:	xchg   edi,eax
  43f079:	daa    
  43f07a:	and    bl,al
  43f07c:	mov    bl,0x1f
  43f07e:	loop   0x43f057
  43f080:	rol    DWORD PTR [edi],cl
  43f082:	cli    
  43f083:	xlat   BYTE PTR ds:[ebx]
  43f084:	repz jmp DWORD PTR [ecx+0x70613d1]
  43f08b:	or     edx,edi
  43f08d:	add    dl,dl
  43f08f:	and    dl,bh
  43f091:	rcl    cl,0x4a
  43f094:	xlat   BYTE PTR ds:[ebx]
  43f095:	mov    al,ds:0x80d662d1
  43f09a:	ror    DWORD PTR [edx-0x5d2e9f2a],1
  43f0a0:	(bad)  
  43f0a1:	and    cl,dl
  43f0a3:	retf   0xd6
  43f0a6:	shl    edx,1
  43f0a8:	aad    0xe0
  43f0aa:	ror    dl,1
  43f0ac:	aad    0xc0
  43f0ae:	shl    BYTE PTR [edx],1
  43f0b0:	(bad)  
  43f0b1:	inc    eax
  43f0b2:	cmp    eax,0x3d60d60b
  43f0b7:	arpl   bp,dx
  43f0b9:	cmp    BYTE PTR ds:0x3da0d54b,0xa3
  43f0c0:	aad    0x0
  43f0c2:	add    BYTE PTR [eax],al
  43f0c4:	mov    al,ds:0xc0d58b3d
  43f0c9:	cmp    eax,0x3de0d4e3
  43f0ce:	or     edx,ebp
  43f0d0:	add    BYTE PTR [esi],bh
  43f0d2:	mov    ds:0xcb3e40d4,eax
  43f0d7:	aam    0x20
  43f0d9:	ds arpl sp,dx
  43f0dc:	cmp    BYTE PTR [esi],0x8b
  43f0df:	aam    0x60
  43f0e1:	ds and edx,esp
  43f0e4:	mov    al,ds:0x80d44b3e
  43f0e9:	ds jecxz 0x43f0c7
  43f0ec:	loopne 0x43f12c
  43f0ee:	retf   
  43f0ef:	fcmovnb st,st(0)
  43f0f1:	mov    ds:0x8b3ec0db,eax
  43f0f7:	fcmovnbe st,st(4)
  43f0f9:	ds xchg ebx,eax
  43f0fb:	fnsetpm(287 only) 
  43f0fd:	(bad)  ds:[bx+si+0x3f]
  43f102:	outs   dx,DWORD PTR ds:[esi]
  43f103:	fstp   TBYTE PTR [eax+0x3f]
  43f106:	add    BYTE PTR [ecx+0x28],bl
  43f109:	call   0x8937:0xa2185137
  43f110:	pop    ss
  43f111:	stos   BYTE PTR es:[edi],al
  43f112:	aaa    
  43f113:	xchg   ecx,eax
  43f114:	dec    edi
  43f115:	mov    dl,0x37
  43f117:	jmp    0xe943f80c
  43f11c:	lock push es
  43f11e:	add    cl,ch
  43f120:	lock push es
  43f122:	add    cl,ch
  43f124:	lock push es
  43f126:	add    cl,ch
  43f128:	add    BYTE PTR [eax],al
  43f12a:	add    al,dh
  43f12c:	push   es
  43f12d:	add    cl,ch
  43f12f:	lock push es
  43f131:	add    cl,ch
  43f133:	lock push es
  43f135:	add    cl,ch
  43f137:	lock push es
  43f139:	add    cl,ch
  43f13b:	lock push es
  43f13d:	add    cl,ch
  43f13f:	lock push es
  43f141:	add    cl,ch
  43f143:	lock push es
  43f145:	add    cl,ch
  43f147:	lock push es
  43f149:	add    cl,ch
  43f14b:	lock push es
  43f14d:	add    cl,ch
  43f14f:	lock push es
  43f151:	add    cl,ch
  43f153:	lock push es
  43f155:	add    cl,ch
  43f157:	lock push es
  43f159:	add    cl,ch
  43f15b:	lock push es
  43f15d:	add    cl,ch
  43f15f:	lock push es
  43f161:	add    cl,ch
  43f163:	lock push es
  43f165:	add    cl,ch
  43f167:	lock push es
  43f169:	add    cl,ch
  43f16b:	lock push es
  43f16d:	add    cl,ch
  43f16f:	lock push es
  43f171:	add    cl,ch
  43f173:	lock push es
  43f175:	add    cl,ch
  43f177:	lock push es
  43f179:	add    cl,ch
  43f17b:	lock push es
  43f17d:	add    cl,ch
  43f17f:	lock push es
  43f181:	add    BYTE PTR [eax],al
  43f183:	dec    edx
  43f184:	or     DWORD PTR [eax],eax
  43f186:	add    BYTE PTR [edx+0x9],bl
  43f189:	add    BYTE PTR [eax],al
  43f18b:	pop    edx
  43f18c:	or     DWORD PTR [eax],eax
  43f18e:	add    BYTE PTR [eax],al
  43f190:	add    BYTE PTR [eax],al
  43f192:	dec    edx
  43f193:	or     DWORD PTR [eax],eax
  43f195:	add    BYTE PTR [edx+0x9],cl
  43f198:	add    BYTE PTR [eax],al
  43f19a:	sbb    cl,BYTE PTR [ecx]
  43f19c:	add    BYTE PTR [eax],al
  43f19e:	sbb    cl,BYTE PTR [ecx]
  43f1a0:	add    BYTE PTR [eax],al
  43f1a2:	or     cl,BYTE PTR [ecx]
  43f1a4:	add    BYTE PTR [eax],al
  43f1a6:	or     cl,BYTE PTR [ecx]
  43f1a8:	add    BYTE PTR [eax],al
  43f1aa:	sbb    cl,BYTE PTR [ecx]
  43f1ac:	add    BYTE PTR [eax],al
  43f1ae:	sbb    cl,BYTE PTR [ecx]
  43f1b0:	add    BYTE PTR [eax],al
  43f1b2:	or     cl,BYTE PTR [ecx]
  43f1b4:	add    BYTE PTR [eax],al
  43f1b6:	or     cl,BYTE PTR [ecx]
  43f1b8:	add    BYTE PTR [eax],al
  43f1ba:	fimul  DWORD PTR [eax]
  43f1bc:	add    BYTE PTR [eax],al
  43f1be:	fimul  DWORD PTR [eax]
  43f1c0:	add    BYTE PTR [eax],al
  43f1c2:	retf   0x8
  43f1c5:	add    dl,cl
  43f1c7:	or     BYTE PTR [eax],al
  43f1c9:	add    dl,bl
  43f1cb:	or     BYTE PTR [eax],al
  43f1cd:	add    dl,bl
  43f1cf:	or     BYTE PTR [eax],al
  43f1d1:	add    dl,cl
  43f1d3:	or     BYTE PTR [eax],al
  43f1d5:	add    dl,cl
  43f1d7:	or     BYTE PTR [eax],al
  43f1d9:	add    BYTE PTR [edx-0x65fffff8],bl
  43f1df:	or     BYTE PTR [eax],al
  43f1e1:	add    BYTE PTR [edx-0x75fffff8],cl
  43f1e7:	or     BYTE PTR [eax],al
  43f1e9:	add    BYTE PTR [edx-0x65fffff8],bl
  43f1ef:	or     BYTE PTR [eax],al
  43f1f1:	add    BYTE PTR [edx+0x8],cl
  43f1f7:	add    BYTE PTR [eax],al
  43f1f9:	mov    cl,BYTE PTR [eax]
  43f1fb:	add    BYTE PTR [eax],al
  43f1fd:	pop    edx
  43f1fe:	or     BYTE PTR [eax],al
  43f200:	add    bl,dh
  43f202:	ins    DWORD PTR es:[edi],dx
  43f203:	cld    
  43f204:	push   ebx
  43f206:	ins    DWORD PTR es:[edi],dx
  43f207:	cld    
  43f208:	push   ebx
  43f20a:	ins    DWORD PTR es:[edi],dx
  43f20b:	cld    
  43f20c:	push   ebx
  43f20e:	ins    DWORD PTR es:[edi],dx
  43f20f:	cld    
  43f210:	push   ebx
  43f212:	ins    DWORD PTR es:[edi],dx
  43f213:	cld    
  43f214:	push   ebx
  43f216:	ins    DWORD PTR es:[edi],dx
  43f217:	cld    
  43f218:	push   ebx
  43f21a:	ins    DWORD PTR es:[edi],dx
  43f21b:	cld    
  43f21c:	push   ebx
  43f21e:	ins    DWORD PTR es:[edi],dx
  43f21f:	cld    
  43f220:	push   ebx
  43f222:	ins    DWORD PTR es:[edi],dx
  43f223:	cld    
  43f224:	push   ebx
  43f226:	ins    DWORD PTR es:[edi],dx
  43f227:	cld    
  43f228:	push   ebx
  43f22a:	ins    DWORD PTR es:[edi],dx
  43f22b:	cld    
  43f22c:	push   ebx
  43f22e:	ins    DWORD PTR es:[edi],dx
  43f22f:	cld    
  43f230:	push   ebx
  43f232:	ins    DWORD PTR es:[edi],dx
  43f233:	cld    
  43f234:	push   ebx
  43f236:	ins    DWORD PTR es:[edi],dx
  43f237:	cld    
  43f238:	push   ebx
  43f23a:	ins    DWORD PTR es:[edi],dx
  43f23b:	cld    
  43f23c:	push   ebx
  43f23e:	ins    DWORD PTR es:[edi],dx
  43f23f:	cld    
  43f240:	push   ebx
  43f242:	ins    DWORD PTR es:[edi],dx
  43f243:	cld    
  43f244:	push   ebx
  43f246:	ins    DWORD PTR es:[edi],dx
  43f247:	cld    
  43f248:	push   ebx
  43f24a:	ins    DWORD PTR es:[edi],dx
  43f24b:	cld    
  43f24c:	push   ebx
  43f24e:	ins    DWORD PTR es:[edi],dx
  43f24f:	cld    
  43f250:	push   ebx
  43f252:	ins    DWORD PTR es:[edi],dx
  43f253:	cld    
  43f254:	push   ebx
  43f256:	ins    DWORD PTR es:[edi],dx
  43f257:	cld    
  43f258:	push   ebx
  43f25a:	ins    DWORD PTR es:[edi],dx
  43f25b:	cld    
  43f25c:	inc    DWORD PTR [eax]
  43f25e:	add    BYTE PTR [eax],al
  43f260:	rep ins DWORD PTR es:[edi],dx
  43f262:	cld    
  43f263:	push   ebx
  43f265:	ins    DWORD PTR es:[edi],dx
  43f266:	cld    
  43f267:	push   ebx
  43f269:	ins    DWORD PTR es:[edi],dx
  43f26a:	cld    
  43f26b:	push   ebx
  43f26d:	ins    DWORD PTR es:[edi],dx
  43f26e:	cld    
  43f26f:	push   ebx
  43f271:	ins    DWORD PTR es:[edi],dx
  43f272:	cld    
  43f273:	push   ebx
  43f275:	ins    DWORD PTR es:[edi],dx
  43f276:	cld    
  43f277:	push   ebx
  43f279:	ins    DWORD PTR es:[edi],dx
  43f27a:	cld    
  43f27b:	push   ebx
  43f27d:	push   es
  43f27e:	out    0x3,eax
  43f280:	repz push es
  43f282:	out    0x3,eax
  43f284:	repz push es
  43f286:	out    0x3,eax
  43f288:	repz push es
  43f28a:	out    0x3,eax
  43f28c:	repz push es
  43f28e:	out    0x3,eax
  43f290:	repz push es
  43f292:	out    0x3,eax
  43f294:	repz push es
  43f296:	out    0x3,eax
  43f298:	repz push es
  43f29a:	out    0x3,eax
  43f29c:	repz push es
  43f29e:	out    0x3,eax
  43f2a0:	repz push es
  43f2a2:	out    0x3,eax
  43f2a4:	repz push es
  43f2a6:	out    0x3,eax
  43f2a8:	repz push es
  43f2aa:	out    0x3,eax
  43f2ac:	repz push es
  43f2ae:	out    0x3,eax
  43f2b0:	repz push es
  43f2b2:	out    0x3,eax
  43f2b4:	repz push es
  43f2b6:	out    0x3,eax
  43f2b8:	repz push es
  43f2ba:	out    0x3,eax
  43f2bc:	repz push es
  43f2be:	out    0x3,eax
  43f2c0:	repz push es
  43f2c2:	out    0x3,eax
  43f2c4:	add    BYTE PTR [eax],al
  43f2c6:	add    bl,dh
  43f2c8:	push   es
  43f2c9:	out    0x3,eax
  43f2cb:	repz push es
  43f2cd:	out    0x3,eax
  43f2cf:	repz push es
  43f2d1:	out    0x3,eax
  43f2d3:	repz push es
  43f2d5:	out    0x3,eax
  43f2d7:	repz push es
  43f2d9:	out    0x3,eax
  43f2db:	repz push es
  43f2dd:	out    0x3,eax
  43f2df:	repz push es
  43f2e1:	out    0x3,eax
  43f2e3:	repz push es
  43f2e5:	out    0x3,eax
  43f2e7:	repz push es
  43f2e9:	out    0x3,eax
  43f2eb:	repz push es
  43f2ed:	out    0x3,eax
  43f2ef:	repz push es
  43f2f1:	out    0x3,eax
  43f2f3:	repz push es
  43f2f5:	out    0x3,eax
  43f2f7:	repz push es
  43f2f9:	add    cl,ch
  43f2fb:	lock push es
  43f2fd:	add    cl,ch
  43f2ff:	lock push es
  43f301:	add    cl,ch
  43f303:	lock push es
  43f305:	add    cl,ch
  43f307:	lock push es
  43f309:	add    cl,ch
  43f30b:	lock push es
  43f30d:	add    cl,ch
  43f30f:	lock push es
  43f311:	add    cl,ch
  43f313:	lock push es
  43f315:	add    cl,ch
  43f317:	lock push es
  43f319:	add    cl,ch
  43f31b:	lock push es
  43f31d:	add    cl,ch
  43f31f:	lock push es
  43f321:	add    cl,ch
  43f323:	lock push es
  43f325:	add    cl,ch
  43f327:	lock push es
  43f329:	add    cl,ch
  43f32b:	add    BYTE PTR [eax],al
  43f32d:	add    al,dh
  43f32f:	push   es
  43f330:	add    cl,ch
  43f332:	lock push es
  43f334:	add    cl,ch
  43f336:	lock push es
  43f338:	add    cl,ch
  43f33a:	lock push es
  43f33c:	add    cl,ch
  43f33e:	lock push es
  43f340:	add    cl,ch
  43f342:	lock push es
  43f344:	add    cl,ch
  43f346:	lock push es
  43f348:	add    cl,ch
  43f34a:	lock push es
  43f34c:	add    cl,ch
  43f34e:	lock push es
  43f350:	add    cl,ch
  43f352:	lock push es
  43f354:	add    cl,ch
  43f356:	lock push es
  43f358:	add    cl,ch
  43f35a:	lock push es
  43f35c:	add    cl,ch
  43f35e:	lock push es
  43f360:	add    cl,ch
  43f362:	lock push es
  43f364:	add    cl,ch
  43f366:	lock push es
  43f368:	add    cl,ch
  43f36a:	lock push es
  43f36c:	add    cl,ch
  43f36e:	lock push es
  43f370:	add    cl,ch
  43f372:	lock push es
  43f374:	add    BYTE PTR [eax],al
  43f376:	call   0x5:0x9a000005
  43f37d:	add    BYTE PTR [edx-0x75fffffb],cl
  43f383:	add    eax,0x55a0000
  43f388:	add    BYTE PTR [eax],al
  43f38a:	pop    edx
  43f38b:	add    eax,0x54a0000
  43f390:	add    BYTE PTR [eax],al
  43f392:	add    BYTE PTR [eax],al
  43f394:	add    BYTE PTR [edx+0x5],cl
  43f397:	add    BYTE PTR [eax],al
  43f399:	pop    edx
  43f39a:	add    eax,0x55a0000
  43f39f:	add    BYTE PTR [eax],al
  43f3a1:	dec    edx
  43f3a2:	add    eax,0x54a0000
  43f3a7:	add    BYTE PTR [eax],al
  43f3a9:	sbb    al,BYTE PTR ds:0x51a0000
  43f3af:	add    BYTE PTR [eax],al
  43f3b1:	or     al,BYTE PTR ds:0x50a0000
  43f3b7:	add    BYTE PTR [eax],al
  43f3b9:	sbb    al,BYTE PTR ds:0x51a0000
  43f3bf:	add    BYTE PTR [eax],al
  43f3c1:	or     al,BYTE PTR ds:0x50a0000
  43f3c7:	add    BYTE PTR [eax],al
  43f3c9:	fiadd  DWORD PTR [eax+eax*1]
  43f3cc:	add    dl,bl
  43f3ce:	add    al,0x0
  43f3d0:	add    dl,cl
  43f3d2:	add    al,0x0
  43f3d4:	add    dl,cl
  43f3d6:	add    al,0x0
  43f3d8:	add    dl,bl
  43f3da:	add    al,0x0
  43f3dc:	add    dl,bl
  43f3de:	add    al,0x0
  43f3e0:	add    dl,cl
  43f3e2:	add    al,0x0
  43f3e4:	add    dl,cl
  43f3e6:	add    al,0x0
  43f3e8:	add    BYTE PTR [edx-0x65fffffc],bl
  43f3ee:	add    al,0x0
  43f3f0:	add    bl,dh
  43f3f2:	ins    DWORD PTR es:[edi],dx
  43f3f3:	cld    
  43f3f4:	push   ebx
  43f3f6:	ins    DWORD PTR es:[edi],dx
  43f3f7:	cld    
  43f3f8:	inc    DWORD PTR [eax]
  43f3fa:	add    BYTE PTR [eax],al
  43f3fc:	rep ins DWORD PTR es:[edi],dx
  43f3fe:	cld    
  43f3ff:	push   ebx
  43f401:	ins    DWORD PTR es:[edi],dx
  43f402:	cld    
  43f403:	push   ebx
  43f405:	ins    DWORD PTR es:[edi],dx
  43f406:	cld    
  43f407:	push   ebx
  43f409:	ins    DWORD PTR es:[edi],dx
  43f40a:	cld    
  43f40b:	push   ebx
  43f40d:	ins    DWORD PTR es:[edi],dx
  43f40e:	cld    
  43f40f:	push   ebx
  43f411:	ins    DWORD PTR es:[edi],dx
  43f412:	cld    
  43f413:	push   ebx
  43f415:	ins    DWORD PTR es:[edi],dx
  43f416:	cld    
  43f417:	push   ebx
  43f419:	ins    DWORD PTR es:[edi],dx
  43f41a:	cld    
  43f41b:	push   ebx
  43f41d:	ins    DWORD PTR es:[edi],dx
  43f41e:	cld    
  43f41f:	push   ebx
  43f421:	ins    DWORD PTR es:[edi],dx
  43f422:	cld    
  43f423:	push   ebx
  43f425:	ins    DWORD PTR es:[edi],dx
  43f426:	cld    
  43f427:	push   ebx
  43f429:	ins    DWORD PTR es:[edi],dx
  43f42a:	cld    
  43f42b:	push   ebx
  43f42d:	ins    DWORD PTR es:[edi],dx
  43f42e:	cld    
  43f42f:	push   ebx
  43f431:	ins    DWORD PTR es:[edi],dx
  43f432:	cld    
  43f433:	push   ebx
  43f435:	ins    DWORD PTR es:[edi],dx
  43f436:	cld    
  43f437:	push   ebx
  43f439:	ins    DWORD PTR es:[edi],dx
  43f43a:	cld    
  43f43b:	push   ebx
  43f43d:	ins    DWORD PTR es:[edi],dx
  43f43e:	cld    
  43f43f:	push   ebx
  43f441:	ins    DWORD PTR es:[edi],dx
  43f442:	cld    
  43f443:	push   ebx
  43f445:	ins    DWORD PTR es:[edi],dx
  43f446:	cld    
  43f447:	push   ebx
  43f449:	ins    DWORD PTR es:[edi],dx
  43f44a:	cld    
  43f44b:	push   ebx
  43f44d:	ins    DWORD PTR es:[edi],dx
  43f44e:	cld    
  43f44f:	push   ebx
  43f451:	ins    DWORD PTR es:[edi],dx
  43f452:	cld    
  43f453:	push   ebx
  43f455:	ins    DWORD PTR es:[edi],dx
  43f456:	cld    
  43f457:	push   ebx
  43f459:	ins    DWORD PTR es:[edi],dx
  43f45a:	cld    
  43f45b:	push   ebx
  43f45d:	ins    DWORD PTR es:[edi],dx
  43f45e:	cld    
  43f45f:	inc    DWORD PTR [eax]
  43f461:	add    BYTE PTR [eax],al
  43f463:	rep ins DWORD PTR es:[edi],dx
  43f465:	cld    
  43f466:	push   ebx
  43f468:	ins    DWORD PTR es:[edi],dx
  43f469:	cld    
  43f46a:	push   ebx
  43f46c:	ins    DWORD PTR es:[edi],dx
  43f46d:	cld    
  43f46e:	push   ebx
  43f470:	push   es
  43f471:	out    0x3,eax
  43f473:	repz push es
  43f475:	out    0x3,eax
  43f477:	repz push es
  43f479:	out    0x3,eax
  43f47b:	repz push es
  43f47d:	out    0x3,eax
  43f47f:	repz push es
  43f481:	out    0x3,eax
  43f483:	repz push es
  43f485:	out    0x3,eax
  43f487:	repz push es
  43f489:	out    0x3,eax
  43f48b:	repz push es
  43f48d:	out    0x3,eax
  43f48f:	repz push es
  43f491:	out    0x3,eax
  43f493:	repz push es
  43f495:	out    0x3,eax
  43f497:	repz push es
  43f499:	out    0x3,eax
  43f49b:	repz push es
  43f49d:	out    0x3,eax
  43f49f:	repz push es
  43f4a1:	out    0x3,eax
  43f4a3:	repz push es
  43f4a5:	out    0x3,eax
  43f4a7:	repz push es
  43f4a9:	out    0x3,eax
  43f4ab:	repz push es
  43f4ad:	out    0x3,eax
  43f4af:	repz push es
  43f4b1:	out    0x3,eax
  43f4b3:	repz push es
  43f4b5:	out    0x3,eax
  43f4b7:	repz push es
  43f4b9:	out    0x3,eax
  43f4bb:	repz push es
  43f4bd:	out    0x3,eax
  43f4bf:	repz push es
  43f4c1:	out    0x3,eax
  43f4c3:	repz push es
  43f4c5:	out    0x3,eax
  43f4c7:	add    BYTE PTR [eax],al
  43f4c9:	add    bl,dh
  43f4cb:	push   es
  43f4cc:	out    0x3,eax
  43f4ce:	repz push es
  43f4d0:	out    0x3,eax
  43f4d2:	repz push es
  43f4d4:	out    0x3,eax
  43f4d6:	repz push es
  43f4d8:	out    0x3,eax
  43f4da:	repz push es
  43f4dc:	out    0x3,eax
  43f4de:	repz push es
  43f4e0:	out    0x3,eax
  43f4e2:	repz push es
  43f4e4:	out    0x3,eax
  43f4e6:	repz push es
  43f4e8:	out    0x3,eax
  43f4ea:	repz push es
  43f4ec:	add    cl,ch
  43f4ee:	lock push es
  43f4f0:	add    cl,ch
  43f4f2:	lock push es
  43f4f4:	add    cl,ch
  43f4f6:	lock push es
  43f4f8:	add    cl,ch
  43f4fa:	lock push es
  43f4fc:	add    cl,ch
  43f4fe:	lock push es
  43f500:	add    cl,ch
  43f502:	lock push es
  43f504:	add    cl,ch
  43f506:	lock push es
  43f508:	add    cl,ch
  43f50a:	lock push es
  43f50c:	add    cl,ch
  43f50e:	lock push es
  43f510:	add    cl,ch
  43f512:	lock push es
  43f514:	add    cl,ch
  43f516:	lock push es
  43f518:	add    cl,ch
  43f51a:	lock push es
  43f51c:	add    cl,ch
  43f51e:	lock push es
  43f520:	add    cl,ch
  43f522:	lock push es
  43f524:	add    cl,ch
  43f526:	lock push es
  43f528:	add    cl,ch
  43f52a:	lock push es
  43f52c:	add    cl,ch
  43f52e:	add    BYTE PTR [eax],al
  43f530:	add    al,dh
  43f532:	push   es
  43f533:	add    cl,ch
  43f535:	lock push es
  43f537:	add    cl,ch
  43f539:	lock push es
  43f53b:	add    cl,ch
  43f53d:	lock push es
  43f53f:	add    cl,ch
  43f541:	lock push es
  43f543:	add    cl,ch
  43f545:	lock push es
  43f547:	add    cl,ch
  43f549:	lock push es
  43f54b:	add    cl,ch
  43f54d:	lock push es
  43f54f:	add    cl,ch
  43f551:	lock push es
  43f553:	add    cl,ch
  43f555:	lock push es
  43f557:	add    cl,ch
  43f559:	lock push es
  43f55b:	add    cl,ch
  43f55d:	lock push es
  43f55f:	add    cl,ch
  43f561:	lock push es
  43f563:	add    cl,ch
  43f565:	lock push es
  43f567:	add    BYTE PTR [eax],al
  43f569:	fimul  DWORD PTR [ecx]
  43f56b:	add    BYTE PTR [eax],al
  43f56d:	retf   0x9
  43f570:	add    dl,cl
  43f572:	or     DWORD PTR [eax],eax
  43f574:	add    BYTE PTR [edx-0x65fffff7],bl
  43f57a:	or     DWORD PTR [eax],eax
  43f57c:	add    BYTE PTR [edx-0x75fffff7],cl
  43f582:	or     DWORD PTR [eax],eax
  43f584:	add    BYTE PTR [edx-0x65fffff7],bl
  43f58a:	or     DWORD PTR [eax],eax
  43f58c:	add    BYTE PTR [edx-0x75fffff7],cl
  43f592:	or     DWORD PTR [eax],eax
  43f594:	add    BYTE PTR [eax],al
  43f596:	add    BYTE PTR [eax],al
  43f598:	pop    edx
  43f599:	or     DWORD PTR [eax],eax
  43f59b:	add    BYTE PTR [edx+0x9],bl
  43f59e:	add    BYTE PTR [eax],al
  43f5a0:	dec    edx
  43f5a1:	or     DWORD PTR [eax],eax
  43f5a3:	add    BYTE PTR [edx+0x9],cl
  43f5a6:	add    BYTE PTR [eax],al
  43f5a8:	pop    edx
  43f5a9:	or     DWORD PTR [eax],eax
  43f5ab:	add    BYTE PTR [edx+0x9],bl
  43f5ae:	add    BYTE PTR [eax],al
  43f5b0:	dec    edx
  43f5b1:	or     DWORD PTR [eax],eax
  43f5b3:	add    BYTE PTR [edx+0x9],cl
  43f5b6:	add    BYTE PTR [eax],al
  43f5b8:	sbb    cl,BYTE PTR [ecx]
  43f5ba:	add    BYTE PTR [eax],al
  43f5bc:	sbb    cl,BYTE PTR [ecx]
  43f5be:	add    BYTE PTR [eax],al
  43f5c0:	or     cl,BYTE PTR [ecx]
  43f5c2:	add    BYTE PTR [eax],al
  43f5c4:	or     cl,BYTE PTR [ecx]
  43f5c6:	add    BYTE PTR [eax],al
  43f5c8:	sbb    cl,BYTE PTR [ecx]
  43f5ca:	add    BYTE PTR [eax],al
  43f5cc:	sbb    cl,BYTE PTR [ecx]
  43f5ce:	add    BYTE PTR [eax],al
  43f5d0:	or     cl,BYTE PTR [ecx]
  43f5d2:	add    BYTE PTR [eax],al
  43f5d4:	or     cl,BYTE PTR [ecx]
  43f5d6:	add    BYTE PTR [eax],al
  43f5d8:	fimul  DWORD PTR [eax]
  43f5da:	add    BYTE PTR [eax],al
  43f5dc:	fimul  DWORD PTR [eax]
  43f5de:	add    BYTE PTR [eax],al
  43f5e0:	retf   0x8
  43f5e3:	add    bl,dh
  43f5e5:	ins    DWORD PTR es:[edi],dx
  43f5e6:	cld    
  43f5e7:	push   ebx
  43f5e9:	ins    DWORD PTR es:[edi],dx
  43f5ea:	cld    
  43f5eb:	push   ebx
  43f5ed:	ins    DWORD PTR es:[edi],dx
  43f5ee:	cld    
  43f5ef:	push   ebx
  43f5f1:	ins    DWORD PTR es:[edi],dx
  43f5f2:	cld    
  43f5f3:	push   ebx
  43f5f5:	ins    DWORD PTR es:[edi],dx
  43f5f6:	cld    
  43f5f7:	push   ebx
  43f5f9:	ins    DWORD PTR es:[edi],dx
  43f5fa:	cld    
  43f5fb:	inc    DWORD PTR [eax]
  43f5fd:	add    BYTE PTR [eax],al
  43f5ff:	rep ins DWORD PTR es:[edi],dx
  43f601:	cld    
  43f602:	push   ebx
  43f604:	ins    DWORD PTR es:[edi],dx
  43f605:	cld    
  43f606:	push   ebx
  43f608:	ins    DWORD PTR es:[edi],dx
  43f609:	cld    
  43f60a:	push   ebx
  43f60c:	ins    DWORD PTR es:[edi],dx
  43f60d:	cld    
  43f60e:	push   ebx
  43f610:	ins    DWORD PTR es:[edi],dx
  43f611:	cld    
  43f612:	push   ebx
  43f614:	ins    DWORD PTR es:[edi],dx
  43f615:	cld    
  43f616:	push   ebx
  43f618:	ins    DWORD PTR es:[edi],dx
  43f619:	cld    
  43f61a:	push   ebx
  43f61c:	ins    DWORD PTR es:[edi],dx
  43f61d:	cld    
  43f61e:	push   ebx
  43f620:	ins    DWORD PTR es:[edi],dx
  43f621:	cld    
  43f622:	push   ebx
  43f624:	ins    DWORD PTR es:[edi],dx
  43f625:	cld    
  43f626:	push   ebx
  43f628:	ins    DWORD PTR es:[edi],dx
  43f629:	cld    
  43f62a:	push   ebx
  43f62c:	ins    DWORD PTR es:[edi],dx
  43f62d:	cld    
  43f62e:	push   ebx
  43f630:	ins    DWORD PTR es:[edi],dx
  43f631:	cld    
  43f632:	push   ebx
  43f634:	ins    DWORD PTR es:[edi],dx
  43f635:	cld    
  43f636:	push   ebx
  43f638:	ins    DWORD PTR es:[edi],dx
  43f639:	cld    
  43f63a:	push   ebx
  43f63c:	ins    DWORD PTR es:[edi],dx
  43f63d:	cld    
  43f63e:	push   ebx
  43f640:	ins    DWORD PTR es:[edi],dx
  43f641:	cld    
  43f642:	push   ebx
  43f644:	ins    DWORD PTR es:[edi],dx
  43f645:	cld    
  43f646:	push   ebx
  43f648:	ins    DWORD PTR es:[edi],dx
  43f649:	cld    
  43f64a:	push   ebx
  43f64c:	ins    DWORD PTR es:[edi],dx
  43f64d:	cld    
  43f64e:	push   ebx
  43f650:	ins    DWORD PTR es:[edi],dx
  43f651:	cld    
  43f652:	push   ebx
  43f654:	ins    DWORD PTR es:[edi],dx
  43f655:	cld    
  43f656:	push   ebx
  43f658:	ins    DWORD PTR es:[edi],dx
  43f659:	cld    
  43f65a:	push   ebx
  43f65c:	ins    DWORD PTR es:[edi],dx
  43f65d:	cld    
  43f65e:	push   ebx
  43f660:	push   es
  43f661:	out    0x3,eax
  43f663:	add    BYTE PTR [eax],al
  43f665:	add    bl,dh
  43f667:	push   es
  43f668:	out    0x3,eax
  43f66a:	repz push es
  43f66c:	out    0x3,eax
  43f66e:	repz push es
  43f670:	out    0x3,eax
  43f672:	repz push es
  43f674:	out    0x3,eax
  43f676:	repz push es
  43f678:	out    0x3,eax
  43f67a:	repz push es
  43f67c:	out    0x3,eax
  43f67e:	repz push es
  43f680:	out    0x3,eax
  43f682:	repz push es
  43f684:	out    0x3,eax
  43f686:	repz push es
  43f688:	out    0x3,eax
  43f68a:	repz push es
  43f68c:	out    0x3,eax
  43f68e:	repz push es
  43f690:	out    0x3,eax
  43f692:	repz push es
  43f694:	out    0x3,eax
  43f696:	repz push es
  43f698:	out    0x3,eax
  43f69a:	repz push es
  43f69c:	out    0x3,eax
  43f69e:	repz push es
  43f6a0:	out    0x3,eax
  43f6a2:	repz push es
  43f6a4:	out    0x3,eax
  43f6a6:	repz push es
  43f6a8:	out    0x3,eax
  43f6aa:	repz push es
  43f6ac:	out    0x3,eax
  43f6ae:	repz push es
  43f6b0:	out    0x3,eax
  43f6b2:	repz push es
  43f6b4:	out    0x3,eax
  43f6b6:	repz push es
  43f6b8:	out    0x3,eax
  43f6ba:	repz push es
  43f6bc:	out    0x3,eax
  43f6be:	repz push es
  43f6c0:	out    0x3,eax
  43f6c2:	repz push es
  43f6c4:	out    0x3,eax
  43f6c6:	repz push es
  43f6c8:	out    0x3,eax
  43f6ca:	add    BYTE PTR [eax],al
  43f6cc:	add    bl,dh
  43f6ce:	push   es
  43f6cf:	out    0x3,eax
  43f6d1:	repz push es
  43f6d3:	out    0x3,eax
  43f6d5:	repz push es
  43f6d7:	out    0x3,eax
  43f6d9:	repz push es
  43f6db:	out    0x3,eax
  43f6dd:	repz push es
  43f6df:	add    cl,ch
  43f6e1:	lock push es
  43f6e3:	add    cl,ch
  43f6e5:	lock push es
  43f6e7:	add    cl,ch
  43f6e9:	lock push es
  43f6eb:	add    cl,ch
  43f6ed:	lock push es
  43f6ef:	add    cl,ch
  43f6f1:	lock push es
  43f6f3:	add    cl,ch
  43f6f5:	lock push es
  43f6f7:	add    cl,ch
  43f6f9:	lock push es
  43f6fb:	add    cl,ch
  43f6fd:	lock push es
  43f6ff:	add    cl,ch
  43f701:	lock push es
  43f703:	add    cl,ch
  43f705:	lock push es
  43f707:	add    cl,ch
  43f709:	lock push es
  43f70b:	add    cl,ch
  43f70d:	lock push es
  43f70f:	add    cl,ch
  43f711:	lock push es
  43f713:	add    cl,ch
  43f715:	lock push es
  43f717:	add    cl,ch
  43f719:	lock push es
  43f71b:	add    cl,ch
  43f71d:	lock push es
  43f71f:	add    cl,ch
  43f721:	lock push es
  43f723:	add    cl,ch
  43f725:	lock push es
  43f727:	add    cl,ch
  43f729:	lock push es
  43f72b:	add    cl,ch
  43f72d:	lock push es
  43f72f:	add    cl,ch
  43f731:	add    BYTE PTR [eax],al
  43f733:	add    al,dh
  43f735:	push   es
  43f736:	add    cl,ch
  43f738:	lock push es
  43f73a:	add    cl,ch
  43f73c:	lock push es
  43f73e:	add    cl,ch
  43f740:	lock push es
  43f742:	add    cl,ch
  43f744:	lock push es
  43f746:	add    cl,ch
  43f748:	lock push es
  43f74a:	add    cl,ch
  43f74c:	lock push es
  43f74e:	add    cl,ch
  43f750:	lock push es
  43f752:	add    cl,ch
  43f754:	lock push es
  43f756:	add    cl,ch
  43f758:	lock push es
  43f75a:	add    BYTE PTR [eax],al
  43f75c:	or     al,BYTE PTR [esi]
  43f75e:	add    BYTE PTR [eax],al
  43f760:	or     al,BYTE PTR [esi]
  43f762:	add    BYTE PTR [eax],al
  43f764:	fiadd  DWORD PTR ds:0x5da0000
  43f76a:	add    BYTE PTR [eax],al
  43f76c:	retf   0x5
  43f76f:	add    dl,cl
  43f771:	add    eax,0x5da0000
  43f776:	add    BYTE PTR [eax],al
  43f778:	fiadd  DWORD PTR ds:0x5ca0000
  43f77e:	add    BYTE PTR [eax],al
  43f780:	retf   0x5
  43f783:	add    BYTE PTR [edx-0x65fffffb],bl
  43f789:	add    eax,0x58a0000
  43f78e:	add    BYTE PTR [eax],al
  43f790:	mov    al,BYTE PTR ds:0x59a0000
  43f796:	add    BYTE PTR [eax],al
  43f798:	add    BYTE PTR [eax],al
  43f79a:	add    BYTE PTR [edx-0x75fffffb],bl
  43f7a0:	add    eax,0x58a0000
  43f7a5:	add    BYTE PTR [eax],al
  43f7a7:	pop    edx
  43f7a8:	add    eax,0x55a0000
  43f7ad:	add    BYTE PTR [eax],al
  43f7af:	dec    edx
  43f7b0:	add    eax,0x54a0000
  43f7b5:	add    BYTE PTR [eax],al
  43f7b7:	pop    edx
  43f7b8:	add    eax,0x55a0000
  43f7bd:	add    BYTE PTR [eax],al
  43f7bf:	dec    edx
  43f7c0:	add    eax,0x54a0000
  43f7c5:	add    BYTE PTR [eax],al
  43f7c7:	sbb    al,BYTE PTR ds:0x51a0000
  43f7cd:	add    BYTE PTR [eax],al
  43f7cf:	or     al,BYTE PTR ds:0x50a0000
  43f7d5:	add    BYTE PTR [eax],al
  43f7d7:	rep outs dx,DWORD PTR ds:[esi]
  43f7d9:	cld    
  43f7da:	push   ebx
  43f7dc:	outs   dx,DWORD PTR ds:[esi]
  43f7dd:	cld    
  43f7de:	push   ebx
  43f7e0:	outs   dx,DWORD PTR ds:[esi]
  43f7e1:	cld    
  43f7e2:	push   ebx
  43f7e4:	outs   dx,DWORD PTR ds:[esi]
  43f7e5:	cld    
  43f7e6:	push   ebx
  43f7e8:	ins    DWORD PTR es:[edi],dx
  43f7e9:	cld    
  43f7ea:	push   ebx
  43f7ec:	ins    DWORD PTR es:[edi],dx
  43f7ed:	cld    
  43f7ee:	push   ebx
  43f7f0:	ins    DWORD PTR es:[edi],dx
  43f7f1:	cld    
  43f7f2:	push   ebx
  43f7f4:	ins    DWORD PTR es:[edi],dx
  43f7f5:	cld    
  43f7f6:	push   ebx
  43f7f8:	ins    DWORD PTR es:[edi],dx
  43f7f9:	cld    
  43f7fa:	push   ebx
  43f7fc:	ins    DWORD PTR es:[edi],dx
  43f7fd:	cld    
  43f7fe:	inc    DWORD PTR [eax]
  43f800:	add    BYTE PTR [eax],al
  43f802:	rep ins DWORD PTR es:[edi],dx
  43f804:	cld    
  43f805:	push   ebx
  43f807:	ins    DWORD PTR es:[edi],dx
  43f808:	cld    
  43f809:	push   ebx
  43f80b:	ins    DWORD PTR es:[edi],dx
  43f80c:	cld    
  43f80d:	push   ebx
  43f80f:	ins    DWORD PTR es:[edi],dx
  43f810:	cld    
  43f811:	push   ebx
  43f813:	ins    DWORD PTR es:[edi],dx
  43f814:	cld    
  43f815:	push   ebx
  43f817:	ins    DWORD PTR es:[edi],dx
  43f818:	cld    
  43f819:	push   ebx
  43f81b:	ins    DWORD PTR es:[edi],dx
  43f81c:	cld    
  43f81d:	push   ebx
  43f81f:	ins    DWORD PTR es:[edi],dx
  43f820:	cld    
  43f821:	push   ebx
  43f823:	ins    DWORD PTR es:[edi],dx
  43f824:	cld    
  43f825:	push   ebx
  43f827:	ins    DWORD PTR es:[edi],dx
  43f828:	cld    
  43f829:	push   ebx
  43f82b:	ins    DWORD PTR es:[edi],dx
  43f82c:	cld    
  43f82d:	push   ebx
  43f82f:	ins    DWORD PTR es:[edi],dx
  43f830:	cld    
  43f831:	push   ebx
  43f833:	ins    DWORD PTR es:[edi],dx
  43f834:	cld    
  43f835:	push   ebx
  43f837:	ins    DWORD PTR es:[edi],dx
  43f838:	cld    
  43f839:	push   ebx
  43f83b:	ins    DWORD PTR es:[edi],dx
  43f83c:	cld    
  43f83d:	push   ebx
  43f83f:	ins    DWORD PTR es:[edi],dx
  43f840:	cld    
  43f841:	push   ebx
  43f843:	ins    DWORD PTR es:[edi],dx
  43f844:	cld    
  43f845:	push   ebx
  43f847:	ins    DWORD PTR es:[edi],dx
  43f848:	cld    
  43f849:	push   ebx
  43f84b:	ins    DWORD PTR es:[edi],dx
  43f84c:	cld    
  43f84d:	push   ebx
  43f84f:	ins    DWORD PTR es:[edi],dx
  43f850:	cld    
  43f851:	push   ebx
  43f853:	push   es
  43f854:	out    0x3,eax
  43f856:	repz push es
  43f858:	out    0x3,eax
  43f85a:	repz push es
  43f85c:	out    0x3,eax
  43f85e:	repz push es
  43f860:	out    0x3,eax
  43f862:	repz push es
  43f864:	out    0x3,eax
  43f866:	add    BYTE PTR [eax],al
  43f868:	add    bl,dh
  43f86a:	push   es
  43f86b:	out    0x3,eax
  43f86d:	repz push es
  43f86f:	out    0x3,eax
  43f871:	repz push es
  43f873:	out    0x3,eax
  43f875:	repz push es
  43f877:	out    0x3,eax
  43f879:	repz push es
  43f87b:	out    0x3,eax
  43f87d:	repz push es
  43f87f:	out    0x3,eax
  43f881:	repz push es
  43f883:	out    0x3,eax
  43f885:	repz push es
  43f887:	out    0x3,eax
  43f889:	repz push es
  43f88b:	out    0x3,eax
  43f88d:	repz push es
  43f88f:	out    0x3,eax
  43f891:	repz push es
  43f893:	out    0x3,eax
  43f895:	repz push es
  43f897:	out    0x3,eax
  43f899:	repz push es
  43f89b:	out    0x3,eax
  43f89d:	repz push es
  43f89f:	out    0x3,eax
  43f8a1:	repz push es
  43f8a3:	out    0x3,eax
  43f8a5:	repz push es
  43f8a7:	out    0x3,eax
  43f8a9:	repz push es
  43f8ab:	out    0x3,eax
  43f8ad:	repz push es
  43f8af:	out    0x3,eax
  43f8b1:	repz push es
  43f8b3:	out    0x3,eax
  43f8b5:	repz push es
  43f8b7:	out    0x3,eax
  43f8b9:	repz push es
  43f8bb:	out    0x3,eax
  43f8bd:	repz push es
  43f8bf:	out    0x3,eax
  43f8c1:	repz push es
  43f8c3:	out    0x3,eax
  43f8c5:	repz push es
  43f8c7:	out    0x3,eax
  43f8c9:	repz push es
  43f8cb:	out    0x3,eax
  43f8cd:	add    BYTE PTR [eax],al
  43f8cf:	add    bl,dh
  43f8d1:	push   es
  43f8d2:	add    cl,ch
  43f8d4:	lock push es
  43f8d6:	add    cl,ch
  43f8d8:	lock push es
  43f8da:	add    cl,ch
  43f8dc:	lock push es
  43f8de:	add    cl,ch
  43f8e0:	lock push es
  43f8e2:	add    cl,ch
  43f8e4:	lock push es
  43f8e6:	add    cl,ch
  43f8e8:	lock push es
  43f8ea:	add    cl,ch
  43f8ec:	lock push es
  43f8ee:	add    cl,ch
  43f8f0:	lock push es
  43f8f2:	add    cl,ch
  43f8f4:	lock push es
  43f8f6:	add    cl,ch
  43f8f8:	lock push es
  43f8fa:	add    cl,ch
  43f8fc:	lock push es
  43f8fe:	add    cl,ch
  43f900:	lock push es
  43f902:	add    cl,ch
  43f904:	lock push es
  43f906:	add    cl,ch
  43f908:	lock push es
  43f90a:	add    cl,ch
  43f90c:	lock push es
  43f90e:	add    cl,ch
  43f910:	lock push es
  43f912:	add    cl,ch
  43f914:	lock push es
  43f916:	add    cl,ch
  43f918:	lock push es
  43f91a:	add    cl,ch
  43f91c:	lock push es
  43f91e:	add    cl,ch
  43f920:	lock push es
  43f922:	add    cl,ch
  43f924:	lock push es
  43f926:	add    cl,ch
  43f928:	lock push es
  43f92a:	add    cl,ch
  43f92c:	lock push es
  43f92e:	add    cl,ch
  43f930:	lock push es
  43f932:	add    cl,ch
  43f934:	add    BYTE PTR [eax],al
  43f936:	add    al,dh
  43f938:	push   es
  43f939:	add    cl,ch
  43f93b:	lock push es
  43f93d:	add    cl,ch
  43f93f:	lock push es
  43f941:	add    cl,ch
  43f943:	lock push es
  43f945:	add    cl,ch
  43f947:	lock push es
  43f949:	add    cl,ch
  43f94b:	lock push es
  43f94d:	add    BYTE PTR [eax],al
  43f94f:	dec    edx
  43f950:	or     al,BYTE PTR [eax]
  43f952:	add    BYTE PTR [edx],bl
  43f954:	or     al,BYTE PTR [eax]
  43f956:	add    BYTE PTR [edx],bl
  43f958:	or     al,BYTE PTR [eax]
  43f95a:	add    BYTE PTR [edx],cl
  43f95c:	or     al,BYTE PTR [eax]
  43f95e:	add    BYTE PTR [edx],cl
  43f960:	or     al,BYTE PTR [eax]
  43f962:	add    BYTE PTR [edx],bl
  43f964:	or     al,BYTE PTR [eax]
  43f966:	add    BYTE PTR [edx],bl
  43f968:	or     al,BYTE PTR [eax]
  43f96a:	add    BYTE PTR [edx],cl
  43f96c:	or     al,BYTE PTR [eax]
  43f96e:	add    BYTE PTR [edx],cl
  43f970:	or     al,BYTE PTR [eax]
  43f972:	add    dl,bl
  43f974:	or     DWORD PTR [eax],eax
  43f976:	add    dl,bl
  43f978:	or     DWORD PTR [eax],eax
  43f97a:	add    dl,cl
  43f97c:	or     DWORD PTR [eax],eax
  43f97e:	add    dl,cl
  43f980:	or     DWORD PTR [eax],eax
  43f982:	add    dl,bl
  43f984:	or     DWORD PTR [eax],eax
  43f986:	add    dl,bl
  43f988:	or     DWORD PTR [eax],eax
  43f98a:	add    dl,cl
  43f98c:	or     DWORD PTR [eax],eax
  43f98e:	add    dl,cl
  43f990:	or     DWORD PTR [eax],eax
  43f992:	add    BYTE PTR [edx-0x65fffff7],bl
  43f998:	or     DWORD PTR [eax],eax
  43f99a:	add    BYTE PTR [eax],al
  43f99c:	add    BYTE PTR [eax],al
  43f99e:	mov    cl,BYTE PTR [ecx]
  43f9a0:	add    BYTE PTR [eax],al
  43f9a2:	mov    cl,BYTE PTR [ecx]
  43f9a4:	add    BYTE PTR [eax],al
  43f9a6:	call   0x9:0x9a000009
  43f9ad:	add    BYTE PTR [edx-0x75fffff7],cl
  43f9b3:	or     DWORD PTR [eax],eax
  43f9b5:	add    BYTE PTR [edx+0x9],bl
  43f9b8:	add    BYTE PTR [eax],al
  43f9ba:	pop    edx
  43f9bb:	or     DWORD PTR [eax],eax
  43f9bd:	add    BYTE PTR [edx+0x9],cl
  43f9c0:	add    BYTE PTR [eax],al
  43f9c2:	dec    edx
  43f9c3:	or     DWORD PTR [eax],eax
  43f9c5:	add    BYTE PTR [edx+0x9],bl
  43f9c8:	add    BYTE PTR [eax],al
  43f9ca:	repz pop edi
  43f9cc:	cld    
  43f9cd:	push   ebx
  43f9cf:	pop    edi
  43f9d0:	cld    
  43f9d1:	push   ebx
  43f9d3:	pop    edi
  43f9d4:	cld    
  43f9d5:	push   ebx
  43f9d7:	pop    edi
  43f9d8:	cld    
  43f9d9:	push   ebx
  43f9db:	pop    edi
  43f9dc:	cld    
  43f9dd:	push   ebx
  43f9df:	pop    edi
  43f9e0:	cld    
  43f9e1:	push   ebx
  43f9e3:	pop    edi
  43f9e4:	cld    
  43f9e5:	push   ebx
  43f9e7:	pop    edi
  43f9e8:	cld    
  43f9e9:	push   ebx
  43f9eb:	pop    edi
  43f9ec:	cld    
  43f9ed:	push   ebx
  43f9ef:	pop    edi
  43f9f0:	cld    
  43f9f1:	push   ebx
  43f9f3:	pop    edi
  43f9f4:	cld    
  43f9f5:	push   ebx
  43f9f7:	pop    ebp
  43f9f8:	cld    
  43f9f9:	push   ebx
  43f9fb:	pop    ebp
  43f9fc:	cld    
  43f9fd:	push   ebx
  43f9ff:	pop    ebp
  43fa00:	cld    
  43fa01:	inc    DWORD PTR [eax]
  43fa03:	add    BYTE PTR [eax],al
  43fa05:	repz pop ebp
  43fa07:	cld    
  43fa08:	push   ebx
  43fa0a:	pop    ebp
  43fa0b:	cld    
  43fa0c:	push   ebx
  43fa0e:	pop    ebp
  43fa0f:	cld    
  43fa10:	push   ebx
  43fa12:	pop    ebp
  43fa13:	cld    
  43fa14:	push   ebx
  43fa16:	pop    ebp
  43fa17:	cld    
  43fa18:	push   ebx
  43fa1a:	pop    ebp
  43fa1b:	cld    
  43fa1c:	push   ebx
  43fa1e:	pop    ebp
  43fa1f:	cld    
  43fa20:	push   ebx
  43fa22:	pop    ebp
  43fa23:	cld    
  43fa24:	push   ebx
  43fa26:	pop    ebp
  43fa27:	cld    
  43fa28:	push   ebx
  43fa2a:	pop    ebp
  43fa2b:	cld    
  43fa2c:	push   ebx
  43fa2e:	pop    ebp
  43fa2f:	cld    
  43fa30:	push   ebx
  43fa32:	pop    ebp
  43fa33:	cld    
  43fa34:	push   ebx
  43fa36:	pop    ebp
  43fa37:	cld    
  43fa38:	push   ebx
  43fa3a:	pop    ebp
  43fa3b:	cld    
  43fa3c:	push   ebx
  43fa3e:	pop    ebp
  43fa3f:	cld    
  43fa40:	push   ebx
  43fa42:	pop    ebp
  43fa43:	cld    
  43fa44:	push   ebx
  43fa46:	push   es
  43fa47:	out    0x3,eax
  43fa49:	repz push es
  43fa4b:	out    0x3,eax
  43fa4d:	repz push es
  43fa4f:	out    0x3,eax
  43fa51:	repz push es
  43fa53:	out    0x3,eax
  43fa55:	repz push es
  43fa57:	out    0x3,eax
  43fa59:	repz push es
  43fa5b:	out    0x3,eax
  43fa5d:	repz push es
  43fa5f:	out    0x3,eax
  43fa61:	repz push es
  43fa63:	out    0x3,eax
  43fa65:	repz push es
  43fa67:	out    0x3,eax
  43fa69:	add    BYTE PTR [eax],al
  43fa6b:	add    bl,dh
  43fa6d:	push   es
  43fa6e:	out    0x3,eax
  43fa70:	repz push es
  43fa72:	out    0x3,eax
  43fa74:	repz push es
  43fa76:	out    0x3,eax
  43fa78:	repz push es
  43fa7a:	out    0x3,eax
  43fa7c:	repz push es
  43fa7e:	out    0x3,eax
  43fa80:	repz push es
  43fa82:	out    0x3,eax
  43fa84:	repz push es
  43fa86:	out    0x3,eax
  43fa88:	repz push es
  43fa8a:	out    0x3,eax
  43fa8c:	repz push es
  43fa8e:	out    0x3,eax
  43fa90:	repz push es
  43fa92:	out    0x3,eax
  43fa94:	repz push es
  43fa96:	out    0x3,eax
  43fa98:	repz push es
  43fa9a:	out    0x3,eax
  43fa9c:	repz push es
  43fa9e:	out    0x3,eax
  43faa0:	repz push es
  43faa2:	out    0x3,eax
  43faa4:	repz push es
  43faa6:	out    0x3,eax
  43faa8:	repz push es
  43faaa:	out    0x3,eax
  43faac:	repz push es
  43faae:	out    0x3,eax
  43fab0:	repz push es
  43fab2:	out    0x3,eax
  43fab4:	repz push es
  43fab6:	out    0x3,eax
  43fab8:	repz push es
  43faba:	out    0x3,eax
  43fabc:	repz push es
  43fabe:	out    0x3,eax
  43fac0:	repz push es
  43fac2:	add    cl,ch
  43fac4:	lock push es
  43fac6:	add    cl,ch
  43fac8:	lock push es
  43faca:	add    cl,ch
  43facc:	lock push es
  43face:	add    cl,ch
  43fad0:	add    BYTE PTR [eax],al
  43fad2:	add    al,dh
  43fad4:	push   es
  43fad5:	add    cl,ch
  43fad7:	lock push es
  43fad9:	add    cl,ch
  43fadb:	lock push es
  43fadd:	add    cl,ch
  43fadf:	lock push es
  43fae1:	add    cl,ch
  43fae3:	lock push es
  43fae5:	add    cl,ch
  43fae7:	lock push es
  43fae9:	add    cl,ch
  43faeb:	lock push es
  43faed:	add    cl,ch
  43faef:	lock push es
  43faf1:	add    cl,ch
  43faf3:	lock push es
  43faf5:	add    cl,ch
  43faf7:	lock push es
  43faf9:	add    cl,ch
  43fafb:	lock push es
  43fafd:	add    cl,ch
  43faff:	lock push es
  43fb01:	add    cl,ch
  43fb03:	lock push es
  43fb05:	add    cl,ch
  43fb07:	lock push es
  43fb09:	add    cl,ch
  43fb0b:	lock push es
  43fb0d:	add    cl,ch
  43fb0f:	lock push es
  43fb11:	add    cl,ch
  43fb13:	lock push es
  43fb15:	add    cl,ch
  43fb17:	lock push es
  43fb19:	add    cl,ch
  43fb1b:	lock push es
  43fb1d:	add    cl,ch
  43fb1f:	lock push es
  43fb21:	add    cl,ch
  43fb23:	lock push es
  43fb25:	add    cl,ch
  43fb27:	lock push es
  43fb29:	add    cl,ch
  43fb2b:	lock push es
  43fb2d:	add    cl,ch
  43fb2f:	lock push es
  43fb31:	add    cl,ch
  43fb33:	lock push es
  43fb35:	add    cl,ch
  43fb37:	add    BYTE PTR [eax],al
  43fb39:	add    al,dh
  43fb3b:	push   es
  43fb3c:	add    cl,ch
  43fb3e:	lock push es
  43fb40:	add    BYTE PTR [eax],al
  43fb42:	pop    edx
  43fb43:	push   es
  43fb44:	add    BYTE PTR [eax],al
  43fb46:	pop    edx
  43fb47:	push   es
  43fb48:	add    BYTE PTR [eax],al
  43fb4a:	dec    edx
  43fb4b:	push   es
  43fb4c:	add    BYTE PTR [eax],al
  43fb4e:	dec    edx
  43fb4f:	push   es
  43fb50:	add    BYTE PTR [eax],al
  43fb52:	pop    edx
  43fb53:	push   es
  43fb54:	add    BYTE PTR [eax],al
  43fb56:	pop    edx
  43fb57:	push   es
  43fb58:	add    BYTE PTR [eax],al
  43fb5a:	push   0x6f6b70c7
  43fb5f:	imul   edx,esp,0x49de3d42
  43fb65:	shl    DWORD PTR [ebx],1
  43fb67:	push   ecx
  43fb68:	xchg   edx,eax
  43fb69:	shl    BYTE PTR [ebp-0x68],cl
  43fb6c:	aaa    
  43fb6d:	retf   0xaef3
  43fb70:	adc    esp,0x77aa13c3
  43fb76:	in     eax,dx
  43fb77:	outs   dx,DWORD PTR ds:[esi]
  43fb78:	jns    0x43fb0d
  43fb7a:	add    DWORD PTR [edi-0x3c789ee1],edi
  43fb80:	dec    ebp
  43fb81:	mov    esi,0x2f7032cd
  43fb86:	mov    eax,ds:0xda680d24
  43fb8b:	mov    fs:0x5f1997c9,al
  43fb91:	pop    ebp
  43fb92:	out    dx,al
  43fb93:	shr    BYTE PTR [ecx+ecx*8],cl
  43fb96:	sub    ch,ch
  43fb98:	or     DWORD PTR [ebx+0x33],esi
  43fb9b:	lds    ebp,FWORD PTR ds:0x9b
  43fba1:	add    eax,0xf87eb7be
  43fba6:	leave  
  43fba7:	cdq    
  43fba8:	scas   eax,DWORD PTR es:[edi]
  43fba9:	sbb    DWORD PTR [ebx+edx*4],edi
  43fbac:	popa   
  43fbad:	fistp  WORD PTR [esi+ebx*4]
  43fbb0:	sti    
  43fbb1:	mov    ds:0x1c2f623a,eax
  43fbb6:	inc    edx
  43fbb7:	push   ebp
  43fbb8:	lock fild DWORD PTR [eax+0x5d]
  43fbbc:	mov    ecx,0x3bc692f3
  43fbc1:	rcl    DWORD PTR [ebx+ebx*8+0x5e511328],1
  43fbc8:	mov    WORD PTR [ebx],ss
  43fbca:	and    eax,0x491fcae2
  43fbcf:	sub    BYTE PTR [eax],dl
  43fbd1:	dec    esp
  43fbd2:	nop
  43fbd3:	mov    edi,0xe3214a4a
  43fbd8:	push   edi
  43fbd9:	inc    ebx
  43fbda:	loop   0x43fb95
  43fbdc:	xor    DWORD PTR ds:[edx],0xffffff8e
  43fbe0:	popf   
  43fbe1:	add    ecx,ebx
  43fbe3:	cmc    
  43fbe4:	push   eax
  43fbe5:	xchg   esi,eax
  43fbe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fbe7:	dec    esi
  43fbe8:	pop    edx
  43fbe9:	add    BYTE PTR [eax+0x1918c666],dl
  43fbef:	aad    0x61
  43fbf1:	rcl    DWORD PTR [esi],1
  43fbf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fbf4:	mov    dl,BYTE PTR fs:[esi+0x8caf850]
  43fbfb:	bswap  esp
  43fbfd:	inc    esi
  43fbfe:	lods   eax,DWORD PTR ds:[esi]
  43fbff:	hlt    
  43fc00:	rcr    BYTE PTR [ecx-0x73],cl
  43fc03:	or     esp,DWORD PTR [esi]
  43fc05:	add    BYTE PTR [eax],al
  43fc07:	add    BYTE PTR [ecx+ecx*1],dl
  43fc0a:	cs add al,0x8f
  43fc0d:	mov    ah,0x8d
  43fc0f:	out    dx,eax
  43fc10:	add    al,0x82
  43fc12:	fsubr  DWORD PTR [eax]
  43fc14:	jle    0x43fc80
  43fc16:	cmp    DWORD PTR [edi],edx
  43fc18:	push   esi
  43fc19:	push   es
  43fc1a:	icebp  
  43fc1b:	out    0x23,eax
  43fc1d:	out    0xec,eax
  43fc1f:	jmp    DWORD PTR [edx]
  43fc21:	jge    0x43fc7e
  43fc23:	lds    esp,FWORD PTR [edx-0x43e30512]
  43fc29:	dec    eax
  43fc2a:	sbb    BYTE PTR [esi-0x626816ac],ah
  43fc30:	sub    ch,al
  43fc32:	scas   ax,WORD PTR es:[edi]
  43fc34:	mov    esp,0x77a110c7
  43fc39:	pop    es
  43fc3a:	enter  0x7bd9,0x5a
  43fc3e:	add    DWORD PTR [esi+0x24],edx
  43fc41:	mov    ebp,0x36de1e3d
  43fc46:	inc    ebp
  43fc47:	dec    esi
  43fc48:	scas   al,BYTE PTR es:[edi]
  43fc49:	fwait
  43fc4a:	aad    0xa9
  43fc4c:	loopne 0x43fc2c
  43fc4e:	xchg   esp,eax
  43fc4f:	jns    0x43fc2a
  43fc51:	lds    ebp,FWORD PTR [edi]
  43fc53:	cs push ds
  43fc55:	push   esi
  43fc56:	mov    al,ds:0x4dc2831f
  43fc5b:	ja     0x43fc9e
  43fc5d:	in     eax,0xe1
  43fc5f:	sub    eax,0x93ca6602
  43fc64:	cmc    
  43fc65:	scas   al,BYTE PTR es:[edi]
  43fc66:	inc    eax
  43fc67:	add    BYTE PTR [edi],bh
  43fc69:	(bad)  
  43fc6a:	jmp    0x43fd0f
  43fc6f:	sub    eax,0x75f1ac83
  43fc74:	inc    esi
  43fc75:	test   al,0xdd
  43fc77:	dec    ebx
  43fc78:	enter  0xffc8,0x98
  43fc7c:	add    ecx,DWORD PTR [ecx]
  43fc7e:	pusha  
  43fc7f:	out    0x89,eax
  43fc81:	jp     0x43fcb7
  43fc83:	pusha  
  43fc84:	sar    BYTE PTR [esi+0x7a],0xe3
  43fc88:	and    BYTE PTR [edx],0xe8
  43fc8b:	and    DWORD PTR [ebp-0x6f580d37],0x900c2291
  43fc95:	daa    
  43fc96:	dec    edx
  43fc97:	jne    0x43fc45
  43fc99:	add    ch,BYTE PTR [esi]
  43fc9b:	inc    eax
  43fc9c:	adc    ebx,DWORD PTR [esi+0x19]
  43fc9f:	aam    0xec
  43fca1:	outs   dx,DWORD PTR ds:[esi]
  43fca2:	add    bh,ch
  43fca4:	push   edx
  43fca5:	fs mov ebx,0x88149eb
  43fcab:	es inc ebx
  43fcad:	or     bl,BYTE PTR [ebx-0x441e0baa]
  43fcb3:	idiv   DWORD PTR [ebx-0x1]
  43fcb6:	icebp  
  43fcb7:	mov    bh,0x4d
  43fcb9:	ficom  DWORD PTR [ebx-0x2aa817bc]
  43fcbf:	fs clc 
  43fcc1:	jmp    0x1669e094
  43fcc6:	out    0xa1,al
  43fcc8:	inc    ecx
  43fcc9:	xchg   esp,eax
  43fcca:	and    al,0x68
  43fccc:	sbb    al,0x70
  43fcce:	dec    edi
  43fccf:	dec    ecx
  43fcd0:	repz sar ebx,0x0
  43fcd4:	add    BYTE PTR [eax],al
  43fcd6:	jns    0x43fd00
  43fcd8:	xchg   ecx,eax
  43fcd9:	push   ecx
  43fcda:	sub    BYTE PTR [ebx+0x57],0x4e
  43fcde:	icebp  
  43fcdf:	sub    BYTE PTR [ebx],bl
  43fce1:	test   eax,0x51d4c025
  43fce6:	daa    
  43fce7:	std    
  43fce8:	adc    DWORD PTR [esi+0x58ab4194],0xffffffb3
  43fcef:	jnp    0x43fcf6
  43fcf1:	(bad)  
  43fcf5:	jbe    0x43fc9e
  43fcf7:	add    ebx,edx
  43fcf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fcfa:	jnp    0x43fd6f
  43fcfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fcfd:	mov    esp,0x9e87418a
  43fd02:	or     ebp,ecx
  43fd04:	repnz into 
  43fd06:	dec    edi
  43fd07:	pop    esp
  43fd08:	loop   0x43fd4b
  43fd0a:	xchg   BYTE PTR [edx-0x32],al
  43fd0d:	adc    DWORD PTR [edx+0x2a],eax
  43fd10:	pusha  
  43fd11:	out    dx,eax
  43fd12:	pop    eax
  43fd13:	test   eax,0xfe9be57b
  43fd18:	(bad)  
  43fd1a:	inc    ecx
  43fd1b:	mov    WORD PTR [ecx-0x27159e09],ss
  43fd21:	mov    DWORD PTR [ebx-0x26],esp
  43fd24:	xor    al,0xe
  43fd26:	enter  0x6ef7,0xc7
  43fd2a:	out    dx,al
  43fd2b:	mov    eax,0x525c6866
  43fd30:	nop
  43fd31:	add    BYTE PTR [eax+0x73],dh
  43fd34:	inc    eax
  43fd35:	sub    dh,BYTE PTR [eax+0x7ecea6]
  43fd3b:	add    BYTE PTR [eax],al
  43fd3d:	push   cs
  43fd3e:	mov    cl,bl
  43fd40:	js     0x43fd04
  43fd42:	mov    al,ds:0x2db3a0dd
  43fd47:	adc    esp,edx
  43fd49:	mov    ebx,0x1fde4bb2
  43fd4e:	jmp    0xb359d38e
  43fd53:	mov    ch,BYTE PTR [edx]
  43fd55:	aaa    
  43fd56:	add    BYTE PTR [ecx],cl
  43fd58:	cmovge esp,DWORD PTR [ecx+0x1b44989c]
  43fd5f:	fistp  DWORD PTR [ebp+0x3bdda820]
  43fd65:	adc    BYTE PTR [edx+0x5c],dl
  43fd68:	push   ds
  43fd69:	cmc    
  43fd6a:	mov    cl,ch
  43fd6c:	dec    edi
  43fd6d:	daa    
  43fd6e:	cmp    ecx,ebx
  43fd70:	int3   
  43fd71:	mov    BYTE PTR [ecx-0x3b87ae15],0x7
  43fd78:	mov    ch,bl
  43fd7a:	jle    0x43fdc6
  43fd7c:	jmp    FWORD PTR [eax+0x64]
  43fd7f:	pop    edx
  43fd80:	ret    
  43fd81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fd82:	sub    ebx,0x2cd59d51
  43fd88:	leave  
  43fd89:	xchg   edi,eax
  43fd8a:	sub    DWORD PTR [esi+0x30],0x8b0bf568
  43fd91:	or     eax,DWORD PTR gs:[ebp+0x427ffb46]
  43fd98:	cld    
  43fd99:	push   0x1d8b1fec
  43fd9e:	xchg   DWORD PTR [eax],edi
  43fda0:	imul   eax,DWORD PTR [eax],0x0
  43fda3:	add    BYTE PTR [edi+0x6],al
  43fda6:	cmp    BYTE PTR [edi],0x38
  43fda9:	repz std 
  43fdab:	jmp    0xcbce:0x8b59cdca
  43fdb2:	mov    esp,0xeb8246cc
  43fdb7:	adc    DWORD PTR [edi-0x14ba7ade],0x7f
  43fdbe:	inc    edx
  43fdbf:	loopne 0x43fe29
  43fdc1:	mov    ebx,0x67268bdf
  43fdc6:	cld    
  43fdc7:	push   eax
  43fdc8:	(bad)  
  43fdc9:	jg     0x43fe1d
  43fdcb:	in     al,0x68
  43fdcd:	ret    
  43fdce:	jecxz  0x43fd5b
  43fdd0:	sub    ebp,edi
  43fdd2:	cld    
  43fdd3:	dec    esp
  43fdd4:	sti    
  43fdd5:	jg     0x43fe21
  43fdd7:	clc    
  43fdd8:	js     0x43fdad
  43fdda:	test   DWORD PTR [ebx+0x44fd22b1],0xe8427feb
  43fde4:	js     0x43fda1
  43fde6:	test   DWORD PTR [ebx+0x54fd26a2],0xf0527feb
  43fdf0:	push   0xbb8bf7c3
  43fdf5:	or     bh,ch
  43fdf7:	dec    esp
  43fdf8:	sti    
  43fdf9:	jg     0x43fe45
  43fdfb:	cld    
  43fdfc:	xor    al,0xc3
  43fdfe:	repz add bl,dh
  43fe01:	push   es
  43fe02:	add    bl,ch
  43fe04:	cli    
  43fe05:	adc    DWORD PTR [edx-0xc],0x70000000
  43fe0c:	dec    eax
  43fe0d:	dec    BYTE PTR [eax+0x458472a6]
  43fe13:	sti    
  43fe14:	or     BYTE PTR [edx-0xc],0x28
  43fe18:	mov    edi,0x803b7317
  43fe1d:	push   edx
  43fe1e:	lock push 0xeb44fd09
  43fe24:	jge    0x43fe68
  43fe26:	fcomp  QWORD PTR [ecx-0x3]
  43fe29:	lods   al,BYTE PTR ds:[si]
  43fe2b:	lock (bad) 
  43fe2d:	dec    DWORD PTR [edx-0x17b1b4d2]
  43fe33:	and    eax,DWORD PTR [esi]
  43fe35:	add    BYTE PTR [eax],al
  43fe37:	jo     0x43fe7c
  43fe39:	or     eax,DWORD PTR [ebp-0x74eb0d4d]
  43fe3f:	inc    esi
  43fe40:	jae    0x43fdc6
  43fe42:	inc    ebp
  43fe43:	mov    edi,esp
  43fe45:	mov    al,0xc
  43fe47:	and    edi,DWORD PTR [esi+0x4a]
  43fe4a:	in     al,dx
  43fe4b:	js     0x43fe1f
  43fe4d:	jmp    0x43fdda
  43fe4f:	imul   eax,DWORD PTR ss:[esp+eax*1+0x8430863],0x58
  43fe58:	cli    
  43fe59:	test   BYTE PTR [ebp+0x63],cl
  43fe5c:	mov    BYTE PTR [esi-0x104595fc],bh
  43fe62:	jmp    0x43fdf3
  43fe64:	cmp    al,al
  43fe66:	mov    edx,DWORD PTR [esi-0x36]
  43fe69:	mov    esp,0xcb3b37cc
  43fe6e:	int3   
  43fe6f:	add    BYTE PTR [eax],al
  43fe71:	add    BYTE PTR [edi],ch
  43fe73:	cmp    ecx,ebx
  43fe75:	int3   
  43fe76:	daa    
  43fe77:	cmp    ecx,ebx
  43fe79:	int3   
  43fe7a:	(bad)  
  43fe7b:	jg     0x43fe68
  43fe7d:	adc    DWORD PTR [edi],0xf
  43fe80:	call   0xf8b01a8a
  43fe85:	mov    DWORD PTR [esi+0x1b45845e],ebp
  43fe8b:	xlat   BYTE PTR ds:[ebx]
  43fe8c:	out    0x29,eax
  43fe8e:	add    al,0x6c
  43fe90:	clc    
  43fe91:	xor    DWORD PTR [edi],0x3
  43fe94:	popf   
  43fe95:	hlt    
  43fe96:	and    al,cl
  43fe98:	jmp    DWORD PTR [edi-0x51]
  43fe9b:	pop    es
  43fe9c:	inc    eax
  43fe9d:	add    BYTE PTR [eax-0x47],bh
  43fea0:	out    0x51,eax
  43fea2:	fcom   QWORD PTR [ecx]
  43fea4:	hlt    
  43fea5:	shl    DWORD PTR [eax],cl
  43fea7:	pop    es
  43fea8:	popf   
  43fea9:	clc    
  43feaa:	mov    al,ds:0xf369ffc7
  43feaf:	loopne 0x43feb0
  43feb1:	scas   eax,DWORD PTR es:[di]
  43feb3:	pop    es
  43feb4:	inc    eax
  43feb5:	add    BYTE PTR [ecx+edx*1+0x730d3f8],dh
  43febc:	xchg   DWORD PTR [ebp-0x65],eax
  43febf:	inc    ebx
  43fec0:	inc    edx
  43fec1:	cld    
  43fec2:	repz push es
  43fec4:	add    BYTE PTR [eax],al
  43fec6:	mov    ch,bh
  43fec8:	test   BYTE PTR [ebp-0x71],dl
  43fecb:	xchg   DWORD PTR [ebp-0x42e85ff],edi
  43fed1:	cmp    esi,0x6a
  43fed4:	pop    es
  43fed5:	jae    0x43fed7
  43fed7:	add    BYTE PTR [eax],al
  43fed9:	sar    BYTE PTR [edi+0x42],cl
  43fedc:	cld    
  43fedd:	js     0x43fed9
  43fedf:	or     BYTE PTR [eax+esi*8+0x6850ffc6],0xd1
  43fee7:	out    0x52,eax
  43fee9:	push   esp
  43feea:	adc    esp,esi
  43feec:	shl    DWORD PTR [eax+0x474d8506],cl
  43fef2:	jge    0x43fef7
  43fef4:	lea    eax,[edi+0x57]
  43fef7:	cmp    al,0x0
  43fef9:	dec    eax
  43fefa:	push   esi
  43fefb:	test   ch,ah
  43fefd:	into   
  43fefe:	inc    edi
  43feff:	retf   
  43ff00:	int3   
  43ff01:	aaa    
  43ff02:	cmp    cl,bl
  43ff04:	int3   
  43ff05:	das    
  43ff06:	cmp    cl,bl
  43ff08:	int3   
  43ff09:	daa    
  43ff0a:	cmp    cl,bl
  43ff0c:	int3   
  43ff0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ff0e:	jg     0x43fefb
  43ff10:	mov    eax,ds:0x3c52a3
  43ff15:	mov    ebp,0x68303f7f
  43ff1a:	mov    ecx,0xbf7a3e07
  43ff1f:	pop    es
  43ff20:	pop    ebp
  43ff21:	mov    al,0x3b
  43ff23:	retf   
  43ff24:	int3   
  43ff25:	scas   eax,DWORD PTR es:[edi]
  43ff26:	cmp    ecx,ebx
  43ff28:	int3   
  43ff29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ff2a:	cmp    ecx,ebx
  43ff2c:	int3   
  43ff2d:	es jle 0x43ff1b
  43ff30:	mov    ebp,DWORD PTR [esi]
  43ff32:	sti    
  43ff33:	dec    edi
  43ff34:	mov    ebp,DWORD PTR [esi]
  43ff36:	dec    DWORD PTR [esi-0x1]
  43ff39:	fidiv  WORD PTR [edx-0x34]
  43ff3c:	inc    ebx
  43ff3d:	add    BYTE PTR [eax],al
  43ff3f:	add    bl,dh
  43ff41:	retf   
  43ff42:	mov    esp,0xcb3bb7cc
  43ff47:	int3   
  43ff48:	scas   eax,DWORD PTR es:[edi]
  43ff49:	cmp    ecx,ebx
  43ff4b:	int3   
  43ff4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ff4d:	cmp    ecx,ebx
  43ff4f:	int3   
  43ff50:	es jle 0x43ff3e
  43ff53:	adc    DWORD PTR [edi+0x90065ff],0x7
  43ff5a:	push   0xffc6f0dc
  43ff5f:	inc    BYTE PTR [esi]
  43ff61:	outs   dx,DWORD PTR ds:[esi]
  43ff62:	int3   
  43ff63:	inc    ebx
  43ff64:	repz jg 0x43ffa9
  43ff67:	clc    
  43ff68:	retf   
  43ff69:	pop    esi
  43ff6a:	cld    
  43ff6b:	aas    
  43ff6c:	repz jge 0x43ffb1
  43ff6f:	clc    
  43ff70:	mov    ds:0x44ffb55e,eax
  43ff75:	push   0x7c
  43ff77:	(bad)  
  43ff78:	jmp    0x43fff9
  43ff7a:	inc    edx
  43ff7b:	cld    
  43ff7c:	push   0x78510fbc
  43ff81:	aam    0xb
  43ff83:	push   edx
  43ff84:	js     0x43ff4a
  43ff86:	pop    es
  43ff87:	push   eax
  43ff88:	sbb    al,0xd4
  43ff8a:	sti    
  43ff8b:	mov    ecx,DWORD PTR [esi]
  43ff8d:	int3   
  43ff8e:	mov    esp,0xeb7da6cc
  43ff93:	push   ecx
  43ff94:	sub    al,0xc4
  43ff96:	sti    
  43ff97:	add    bl,dh
  43ff99:	push   es
  43ff9a:	add    bl,ch
  43ff9c:	jmp    0xfe46:0x70fc427d
  43ffa3:	mov    BYTE PTR [eax],al
  43ffa5:	add    BYTE PTR [eax],al
  43ffa7:	imul   eax,DWORD PTR cs:[ebp+ecx*2+0x104b2ddf],0x60
  43ffb0:	or     al,BYTE PTR [ebp+0x5305fb55]
  43ffb6:	cld    
  43ffb7:	hlt    
  43ffb8:	mov    al,0xfd
  43ffba:	mov    ch,BYTE PTR [esi]
  43ffbc:	sti    
  43ffbd:	cld    
  43ffbe:	dec    esp
  43ffbf:	mov    bh,0xf9
  43ffc1:	mov    cl,0x11
  43ffc3:	call   0x6b4b730c
  43ffc8:	pop    es
  43ffc9:	add    BYTE PTR [eax],al
  43ffcb:	repz pop ebp
  43ffcd:	add    ebp,ebx
  43ffcf:	ret    
  43ffd0:	xor    eax,0xcb968bc0
  43ffd5:	mov    esp,0xcb3ab7cc
  43ffda:	int3   
  43ffdb:	scas   eax,DWORD PTR es:[edi]
  43ffdc:	cmp    cl,bl
  43ffde:	int3   
  43ffdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ffe0:	cmp    cl,bl
  43ffe2:	int3   
  43ffe3:	(bad)  
  43ffe4:	jge    0x43ffd1
  43ffe6:	mov    ecx,0x70b
  43ffeb:	xlat   BYTE PTR ds:[ebx]
  43ffec:	jge    0x43fff4
  43ffee:	mov    esi,esp
  43fff0:	(bad)  
  43fff1:	rol    DWORD PTR [ebx-0xd],cl
  43fff4:	retf   
  43fff5:	mov    esp,0xcb3a37cc
  43fffa:	int3   
  43fffb:	das    
  43fffc:	cmp    cl,bl
  43fffe:	int3   
  43ffff:	daa    
  440000:	cmp    cl,bl
  440002:	int3   
  440003:	(bad)  
  440004:	jge    0x43fff1
  440006:	adc    DWORD PTR [edi],0x16
  440009:	test   DWORD PTR [ebp+0x0],eax
  44000c:	add    BYTE PTR [eax],al
  44000e:	jmp    0x43ff95
  440010:	ja     0x440016
  440012:	repz stc 
  440014:	or     DWORD PTR [eax-0x74fff90d],0xffffffb6
  44001b:	inc    BYTE PTR [ecx+edx*2+0x8e585f7]
  440022:	and    bl,BYTE PTR [esi+eax*4+0x55]
  440026:	out    0x7c,eax
  440028:	inc    edx
  440029:	or     BYTE PTR [eax+0x47],dh
  44002c:	pop    es
  44002d:	mov    DWORD PTR [esi],esi
  44002f:	ja     0x43fff1
  440031:	inc    ebp
  440032:	xlat   BYTE PTR ds:[ebx]
  440033:	pop    es
  440034:	add    BYTE PTR [eax],al
  440036:	repz pop ebx
  440038:	push   es
  440039:	mov    esi,DWORD PTR [esi]
  44003b:	imul   edi,DWORD PTR [ecx+eax*8-0xe],0x7d
  440040:	dec    edx
  440041:	cld    
  440042:	push   0x463bfbd2
  440047:	jae    0x4400b5
  440049:	inc    esi
  44004a:	js     0x44000e
  44004c:	sti    
  44004d:	mov    ebp,DWORD PTR [esi]
  44004f:	ja     0x440059
  440051:	mov    bh,0xff
  440053:	lds    edi,FWORD PTR [esi-0xa7c0006]
  440059:	add    edi,esi
  44005b:	xor    al,0x85
  44005d:	inc    ebp
  44005e:	jg     0x4400dc
  440060:	dec    edx
  440061:	lock in al,0xaf
  440064:	adc    eax,DWORD PTR [ecx+0x72]
  440067:	gs clc 
  440069:	psllq  mm0,QWORD PTR [esi]
  44006c:	xchg   DWORD PTR [ebp+0x5b],edx
  44006f:	jl     0x4400b3
  440071:	or     BYTE PTR [eax],al
  440073:	add    BYTE PTR [eax],al
  440075:	push   0xfb030bba
  44007a:	jnp    0x4400ce
  44007c:	clc    
  44007d:	js     0x440082
  44007f:	lsl    esi,WORD PTR [esi-0x14b27aea]
  440086:	jnp    0x4400da
  440088:	or     al,0xf0
  44008a:	adc    eax,0x7e2b4d85
  44008f:	add    ecx,DWORD PTR [edx]
  440091:	or     BYTE PTR [esi+0x7beb5584],bl
  440097:	inc    edx
  440098:	or     al,dh
  44009a:	les    eax,FWORD PTR [ebx]
  44009c:	mov    DWORD PTR [esi-0x3941902],ebp
  4400a2:	addr16 clc 
  4400a4:	mov    ecx,DWORD PTR [esi]
  4400a6:	retf   0xccbc
  4400a9:	inc    esi
  4400aa:	jl     0x440097
  4400ac:	adc    edi,0x22
  4400af:	test   DWORD PTR [ebp-0x15],eax
  4400b2:	jge    0x4400f6
  4400b4:	in     al,0x68
  4400b6:	mov    ecx,0x63268be3
  4400bb:	cld    
  4400bc:	push   eax
  4400bd:	pop    es
  4400be:	jle    0x440112
  4400c0:	call   0x8c2bc22d
  4400c5:	imul   eax,DWORD PTR [esi+0x7df3ffff],0x4a
  4400cc:	lock jo 0x4400b8
  4400cf:	out    dx,eax
  4400d0:	add    ah,ch
  4400d2:	xor    ah,0x0
  4400d5:	repz push es
  4400d7:	test   DWORD PTR [ebp+0x0],edx
  4400da:	add    BYTE PTR [eax],al
  4400dc:	sti    
  4400dd:	add    edx,DWORD PTR [ebx-0x10]
  4400e0:	jp     0x4400b3
  4400e2:	fisttp WORD PTR [ebx+0x787c6736]
  4400e8:	jecxz  0x4400f0
  4400ea:	or     DWORD PTR [esi+edx*2-0x26fffffa],eax
  4400f1:	push   es
  4400f2:	data16 add BYTE PTR [eax-0x47],ch
  4400f6:	fisttp WORD PTR [ebx+0x50fcfebe]
  4400fc:	call   esp
  4400fe:	clc    
  4400ff:	adc    eax,0x3c534b
  440104:	push   0xffffffc1
  440106:	sti    
  440107:	mov    ebp,DWORD PTR [esi-0xcc7839a]
  44010d:	repnz push ss
  44010f:	mov    esi,DWORD PTR [esi-0x14aa7b9a]
  440115:	add    ecx,DWORD PTR [edi]
  440117:	mov    DWORD PTR [esi+0x13458472],edi
  44011d:	jnp    0x440169
  44011f:	or     al,dh
  440121:	mov    esi,0x5aae890f
  440126:	in     al,0x17
  440128:	push   0x368bdfd1
  44012d:	paddw  mm0,QWORD PTR [ecx+0x3]
  440131:	nop
  440132:	inc    edx
  440133:	hlt    
  440134:	push   0x3e8bdfd4
  440139:	paddw  mm2,QWORD PTR [eax]
  44013c:	jp     0x4400fa
  44013e:	jmp    0x440107
  440140:	add    BYTE PTR [eax],al
  440142:	add    BYTE PTR [esi],ch
  440144:	pop    edi
  440145:	(bad)  
  440146:	push   ebx
  440148:	push   es
  440149:	test   DWORD PTR [ebp-0x2d],eax
  44014c:	mov    dh,BYTE PTR [edi+0x10]
  44014f:	repz fimul DWORD PTR [eax]
  440152:	mov    esi,DWORD PTR [esi]
  440154:	addr16 jl 0x440190
  440157:	repz fiadd DWORD PTR [eax]
  44015a:	(bad)  
  44015b:	cs pop edi
  44015d:	(bad)  
  44015e:	push   ebx
  440160:	push   es
  440161:	test   DWORD PTR [ebp+0x7f],edx
  440164:	mov    dh,BYTE PTR ds:0x84e80700
  44016a:	inc    ebp
  44016b:	jg     0x4400ff
  44016d:	pop    es
  44016e:	adc    DWORD PTR [edx+0x7],0xdb730000
  440175:	sbb    ecx,DWORD PTR [ebx+0x2845ac6]
  44017b:	push   cs
  44017c:	data16 clc 
  44017e:	dec    esp
  440180:	mov    dh,0x84
  440182:	dec    ebp
  440183:	inc    edi
  440184:	mov    eax,0x663eb5e7
  440189:	clc    
  44018a:	sub    DWORD PTR [edi],0xf
  44018d:	xchg   DWORD PTR [ebp+0x4f],eax
  440190:	jb     0x4401ad
  440192:	mov    edi,DWORD PTR [esi+0x6802845a]
  440198:	aam    0x7
  44019a:	lea    edi,[edi+0x7851fe0e]
  4401a0:	int3   
  4401a1:	sti    
  4401a2:	push   eax
  4401a3:	sbb    edi,DWORD PTR [esi-0x6]
  4401a6:	inc    DWORD PTR [eax]
  4401a8:	add    BYTE PTR [eax],al
  4401aa:	cld    
  4401ab:	mov    ebx,eax
  4401ad:	or     BYTE PTR [edx-0x34],ch
  4401b0:	fisttp DWORD PTR [ebx+0x5584733e]
  4401b6:	(bad)  
  4401b7:	(bad)  
  4401b8:	push   cs
  4401b9:	mov    esi,DWORD PTR [esi]
  4401bb:	pop    ebx
  4401bc:	jl     0x44017e
  4401be:	out    dx,eax
  4401bf:	pop    DWORD PTR [edx-0xc]
  4401c2:	js     0x440197
  4401c4:	jmp    0x440149
  4401c6:	mov    dl,0xa
  4401c8:	xchg   DWORD PTR [ebp-0x31],ecx
  4401cb:	jno    0x44015d
  4401cd:	mov    ebx,DWORD PTR [esi]
  4401cf:	addr16 jl 0x440194
  4401d2:	pop    es
  4401d3:	nop
  4401d4:	push   edx
  4401d5:	loopne 0x440171
  4401d7:	adc    al,0xf9
  4401d9:	call   FWORD PTR [ecx+edx*4+0x52b05de2]
  4401e0:	retf   
  4401e1:	int3   
  4401e2:	es xchg edx,eax
  4401e4:	jmp    0x440169
  4401e6:	xchg   edi,eax
  4401e7:	push   cs
  4401e8:	push   0xffc6f0f0
  4401ed:	(bad)  
  4401ee:	fiadd  WORD PTR [esi]
  4401f0:	aam    0x43
  4401f2:	repz pop DWORD PTR [edx-0x8]
  4401f6:	(bad)  [edx-0x4]
  4401f9:	aas    
  4401fa:	repz xchg ecx,eax
  4401fc:	inc    edx
  4401fd:	clc    
  4401fe:	ret    
  4401ff:	outs   dx,BYTE PTR ds:[esi]
  440200:	cmp    ebp,edi
  440202:	dec    esp
  440203:	gs jl  0x4401ca
  440206:	sti    
  440207:	pop    DWORD PTR [edx-0x4]
  44020a:	push   0x510fd3
  44020f:	add    BYTE PTR [eax],al
  440211:	push   0x78520bbb
  440216:	retf   
  440217:	pop    es
  440218:	push   eax
  440219:	and    al,0xbb
  44021b:	sti    
  44021c:	mov    edx,DWORD PTR [esi]
  44021e:	ret    
  44021f:	mov    esp,0xcb5227cc
  440224:	int3   
  440225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440226:	xchg   ecx,eax
  440227:	jmp    0x4401ca
  440229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44022a:	cmp    bh,BYTE PTR [eax+eax*1]
  44022d:	xor    eax,0xde8b6806
  440232:	mov    edx,0x8df343d3
  440237:	dec    edi
  440238:	add    DWORD PTR [ecx-0x9af78b8],esp
  44023e:	sar    DWORD PTR [esp+ecx*8-0x3334ac59],0x26
  440246:	nop
  440247:	jmp    0x4401cc
  440249:	xlat   BYTE PTR ds:[ebx]
  44024a:	adc    ebx,DWORD PTR [edi-0x3758b0]
  440250:	mov    ah,BYTE PTR [ecx+0x783ec718]
  440256:	(bad)  
  440257:	das    
  440258:	mov    eax,ecx
  44025a:	nop
  44025b:	int    0x3e
  44025d:	push   0xc18b0bcf
  440262:	mov    cs,WORD PTR [edx-0xc]
  440265:	js     0x440231
  440267:	repz mov edi,DWORD PTR [ebx]
  44026a:	adc    eax,DWORD PTR [edi+0x52907b4d]
  440270:	clc    
  440271:	push   0xffffffba
  440273:	sti    
  440274:	mov    eax,0xf2000000
  440279:	push   es
  44027a:	add    BYTE PTR [eax],al
  44027c:	outs   dx,BYTE PTR ds:[esi]
  44027d:	inc    edi
  44027e:	jae    0x4402c4
  440280:	jo     0x440264
  440282:	test   DWORD PTR [eax],0xc02d0ade
  440288:	pop    eax
  440289:	and    eax,DWORD PTR [ebp+0x4e904b4d]
  44028f:	sbb    al,bh
  440291:	mov    ecx,0x8fda7507
  440296:	inc    edx
  440297:	clc    
  440298:	js     0x44026c
  44029a:	or     ecx,DWORD PTR [ecx+0x558502bb]
  4402a0:	sbb    edx,DWORD PTR [eax-0x3695efbe]
  4402a6:	pop    ss
  4402a7:	mov    eax,0x6f2
  4402ac:	sbb    bh,bh
  4402ae:	test   BYTE PTR [ebp-0x5],cl
  4402b1:	(bad)  
  4402b2:	push   cs
  4402b3:	mov    DWORD PTR [esi-0x14ba7ba2],ebx
  4402b9:	pop    ds
  4402ba:	inc    ebx
  4402bb:	cld    
  4402bc:	pop    esi
  4402bd:	or     ebp,DWORD PTR ds:0xe50ac8c0
  4402c3:	mov    bl,0x20
  4402c5:	inc    edi
  4402c6:	test   ch,ah
  4402c8:	cs dec eax
  4402ca:	retf   
  4402cb:	int3   
  4402cc:	mov    bh,0x52
  4402ce:	retf   
  4402cf:	int3   
  4402d0:	scas   eax,DWORD PTR es:[edi]
  4402d1:	push   edx
  4402d2:	retf   
  4402d3:	int3   
  4402d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4402d5:	push   edx
  4402d6:	retf   
  4402d7:	int3   
  4402d8:	inc    esi
  4402d9:	nop
  4402da:	jmp    0x44025f
  4402dc:	add    BYTE PTR [eax],al
  4402de:	add    BYTE PTR [edi-0x64ba3f02],dl
  4402e4:	push   es
  4402e5:	xor    BYTE PTR [eax],al
  4402e7:	repz out dx,al
  4402e9:	add    eax,DWORD PTR [ebx+esi*1]
  4402ec:	pop    es
  4402ed:	lahf   
  4402ee:	cmp    al,0x9f
  4402f0:	(bad)  
  4402f1:	dec    DWORD PTR [edi-0x75]
  4402f4:	mov    bh,0xfb
  4402f6:	push   DWORD PTR [edi+eax*4-0x3d]
  4402fa:	or     BYTE PTR [edx-0x37],bh
  4402fd:	repz push 0xffffffb3
  440300:	(bad)  
  440304:	(bad)  
  440305:	adc    bl,BYTE PTR [edi+edi*1]
  440308:	(bad)  
  440309:	dec    DWORD PTR [edx+0x6a4fb6b1]
  44030f:	repz arpl WORD PTR [edx-0xc],dx
  440313:	nop
  440314:	cli    
  440315:	rol    DWORD PTR [ebx-0xd],cl
  440318:	xchg   DWORD PTR [edx],edi
  44031a:	adc    al,0x47
  44031c:	(bad)  
  44031d:	(bad)  
  44031e:	call   FWORD PTR [esi-0xcfd47f5]
  440324:	push   es
  440325:	add    bl,ch
  440327:	mov    DWORD PTR [edi-0x390ffff6],ecx
  44032d:	dec    DWORD PTR [eax+0x6756b6]
  440333:	and    DWORD PTR [edi],eax
  440335:	add    BYTE PTR [eax-0xd],ch
  440338:	pop    es
  440339:	inc    eax
  44033a:	add    BYTE PTR [eax-0x4],bh
  44033d:	adc    edx,esp
  44033f:	xor    BYTE PTR [edi],al
  440341:	jg     0x440305
  440343:	add    BYTE PTR [eax],al
  440345:	add    bl,dh
  440347:	add    eax,0x6f410000
  44034c:	cdq    
  44034d:	dec    ah
  44034f:	bound  edi,QWORD PTR [esp+eax*8-0x9]
  440353:	sahf   
  440354:	inc    DWORD PTR [edx]
  440356:	xor    eax,DWORD PTR [edi]
  440358:	sub    eax,DWORD PTR [eax]
  44035a:	lock push es
  44035c:	add    BYTE PTR [ebx+0x43d3fafe],cl
  440362:	repz sub eax,0xcaee89c8
  440368:	rol    DWORD PTR [ebx-0xd],cl
  44036b:	lea    edx,[edx]
  44036d:	inc    esp
  44036e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44036f:	(bad)  
  440370:	call   DWORD PTR [ecx+0x52]
  440373:	sti    
  440374:	rol    DWORD PTR [ebx-0xd],cl
  440377:	mov    dh,0x84
  440379:	dec    ebp
  44037a:	cmp    DWORD PTR [eax+0x626f9de7],0xfffffff8
  440381:	sub    DWORD PTR [edi],0x13
  440384:	test   DWORD PTR ds:0x3c3b07,edx
  44038a:	lock mov ebx,0x6ea68907
  440390:	test   BYTE PTR [ebp+0x5b],dl
  440393:	(bad)  
  440394:	fisttp QWORD PTR [ebx-0x33433baa]
  44039a:	daa    
  44039b:	push   ebx
  44039c:	retf   
  44039d:	int3   
  44039e:	(bad)  
  44039f:	(bad)  
  4403a0:	jmp    0x44032d
  4403a2:	scas   al,BYTE PTR es:[edi]
  4403a3:	push   cs
  4403a4:	xor    eax,0xd5ef45
  4403a9:	mov    eax,DWORD PTR [eax]
  4403ab:	add    BYTE PTR [eax],al
  4403ad:	scas   al,BYTE PTR es:[edi]
  4403ae:	push   cs
  4403af:	in     eax,0x5
  4403b1:	sbb    BYTE PTR [esi],al
  4403b3:	test   DWORD PTR [ebp-0x9],eax
  4403b6:	ret    
  4403b7:	mov    esp,0xcb532fcc
  4403bc:	int3   
  4403bd:	daa    
  4403be:	push   ebx
  4403bf:	retf   
  4403c0:	int3   
  4403c1:	inc    esi
  4403c2:	mov    gs,ebx
  4403c4:	adc    edi,0x32
  4403c7:	rol    DWORD PTR [ebp-0x21],0x6
  4403cb:	add    BYTE PTR [ebx+esi*8],al
  4403ce:	lea    eax,[edx+0x8]
  4403d1:	jp     0x44039e
  4403d3:	xlat   BYTE PTR ds:[ebx]
  4403d4:	mov    esi,DWORD PTR [esi]
  4403d6:	aas    
  4403d7:	test   BYTE PTR [ebp-0x15],dl
  4403da:	add    eax,0xbb6a3c4f
  4403df:	fisttp WORD PTR [ebx-0x48f798ca]
  4403e5:	cmp    edi,ebx
  4403e7:	test   BYTE PTR [ebp-0x6d],dl
  4403ea:	xchg   ebx,eax
  4403eb:	inc    ebx
  4403ec:	or     bh,bl
  4403ee:	pop    DWORD PTR [edx-0x18]
  4403f1:	sbb    edi,ebx
  4403f3:	add    eax,DWORD PTR [eax-0xd]
  4403f6:	lea    ecx,[edx]
  4403f8:	cmp    al,0xa7
  4403fa:	(bad)  
  4403fd:	mov    edx,ecx
  4403ff:	hlt    
  440400:	jmp    FWORD PTR [ebp+eax*4-0x3d]
  440404:	or     BYTE PTR [edx-0x35],bh
  440407:	out    dx,eax
  440408:	push   0xffffffb3
  44040a:	out    dx,al
  44040b:	jmp    FWORD PTR [edi]
  44040d:	repz push es
  44040f:	push   0x0
  440414:	repz or al,BYTE PTR [eax]
  440417:	push   0xfffffff3
  440419:	popa   
  44041a:	push   edx
  44041b:	lock push 0xffffffcb
  44041e:	jecxz  0x4403ab
  440420:	sahf   
  440421:	data16 test BYTE PTR [edx-0x39],al
  440425:	mov    dh,0x84
  440427:	dec    ebp
  440428:	sti    
  440429:	mov    bh,0x84
  44042b:	push   ebp
  44042c:	pop    ss
  44042d:	mov    ah,0xe7
  44042f:	rcl    DWORD PTR [esi],0x61
  440432:	clc    
  440433:	xor    DWORD PTR [edi],0x12
  440436:	rol    DWORD PTR [ebp-0x1],0x5
  44043a:	add    BYTE PTR [eax],al
  44043c:	rep ins DWORD PTR es:[edi],dx
  44043e:	push   es
  44043f:	mov    ebp,DWORD PTR [esi-0xd3f83a6]
  440445:	lea    eax,[edx-0xc]
  440448:	js     0x44041c
  44044a:	fisttp WORD PTR [edi]
  44044c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44044d:	mov    dh,0x1
  44044f:	cmp    DWORD PTR [esi],edi
  440451:	pop    ebx
  440452:	ins    BYTE PTR es:[edi],dx
  440453:	pop    ecx
  440454:	js     0x440420
  440456:	out    0x83,eax
  440458:	dec    ebx
  440459:	sti    
  44045a:	push   DWORD PTR [ebx+0x36]
  44045d:	mov    WORD PTR [edx-0x18],cs
  440460:	jo     0x440440
  440462:	verr   WORD PTR [edi]
  440465:	and    eax,DWORD PTR [ebp+0x3d8c9b55]
  44046b:	adc    BYTE PTR [eax-0x2e],ch
  44046e:	fisttp WORD PTR [ebx+0x448b2342]
  440474:	jecxz  0x4404d5
  440476:	test   BYTE PTR [ebp+0x0],cl
  440479:	add    BYTE PTR [eax],al
  44047b:	xchg   ebx,eax
  44047c:	adc    al,0xce
  44047e:	test   DWORD PTR [edx],0x93558523
  440484:	adc    BYTE PTR [ecx-0x7b48d0be],ch
  44048a:	inc    ebp
  44048b:	pop    ebx
  44048c:	mov    WORD PTR [edx+0x8],cs
  44048f:	lock into 
  440491:	adc    edx,DWORD PTR [ecx+0x68]
  440494:	mov    edx,0x6ab68be7
  440499:	cld    
  44049a:	inc    ecx
  44049b:	div    DWORD PTR [esi+0x603e55e7]
  4404a1:	clc    
  4404a2:	sub    DWORD PTR [edi],0x13
  4404a5:	test   DWORD PTR [ebp+0x1b],ecx
  4404a8:	test   BYTE PTR [esi-0x182d85d8],bh
  4404ae:	jmp    0x440431
  4404b0:	mov    WORD PTR [edx-0x1c],ss
  4404b3:	shr    DWORD PTR [esi+0x9],0xfc
  4404b7:	or     al,0x60
  4404b9:	jl     0x44047f
  4404bb:	out    dx,eax
  4404bc:	out    dx,al
  4404bd:	and    eax,DWORD PTR [ebx+esi*4]
  4404c0:	push   es
  4404c1:	lahf   
  4404c2:	cmp    al,0x1f
  4404c4:	(bad)  
  4404c5:	dec    DWORD PTR [edi-0x25]
  4404c8:	mov    esi,ebp
  4404ca:	jmp    esp
  4404cc:	add    ebx,0x8
  4404cf:	push   0xffffffc9
  4404d1:	fild   DWORD PTR [ebx+0x43d41f16]
  4404d7:	repz push es
  4404d9:	jae    0x4404e5
  4404db:	js     0x4404ee
  4404dd:	xor    ah,dl
  4404df:	add    BYTE PTR [eax],al
  4404e1:	add    BYTE PTR [eax],dh
  4404e3:	pop    es
  4404e4:	dec    edi
  4404e5:	call   FWORD PTR [esi]
  4404e7:	inc    ebx
  4404e8:	jl     0x440527
  4404ea:	jmp    0x440526
  4404ec:	cmp    al,0x0
  4404ee:	repz fstp DWORD PTR [ebx]
  4404f1:	push   0x33
  4404f3:	out    dx,eax
  4404f4:	jmp    FWORD PTR [edi]
  4404f6:	repz push es
  4404f8:	test   DWORD PTR [ebp-0x71],edx
  4404fb:	mov    ah,0x84
  4404fd:	inc    ebp
  4404fe:	xchg   ebx,eax
  4404ff:	mov    eax,DWORD PTR [edi+0x34]
  440502:	and    ah,BYTE PTR [eax+0x52]
  440505:	lock push eax
  440507:	cli    
  440508:	rol    DWORD PTR [ebx-0xd],cl
  44050b:	imul   edx,DWORD PTR [edx],0x6a
  44050e:	mov    bl,0xee
  440510:	jmp    FWORD PTR [edi]
  440512:	repz push es
  440514:	test   DWORD PTR [ebp+0x57],edx
  440517:	mov    ah,0x65
  440519:	add    BYTE PTR [ecx+edi*4-0x11],cl
  44051d:	mov    ds:0x3c3adf,eax
  440522:	jo     0x440545
  440524:	adc    al,0xd4
  440526:	mov    al,0x6
  440528:	add    BYTE PTR [ebp+0x6],dh
  44052b:	in     eax,dx
  44052c:	aas    
  44052d:	push   0x16f3
  440532:	push   0x8950fbc9
  440537:	push   es
  440538:	stc    
  440539:	push   ebp
  44053a:	add    esp,DWORD PTR [ebx+0x6b0d413]
  440540:	test   DWORD PTR [ebp+0x17],ecx
  440543:	lea    ecx,[edx-0x28]
  440546:	add    BYTE PTR [eax],al
  440548:	add    BYTE PTR [eax-0x47],ch
  44054b:	xlat   BYTE PTR ds:[ebx]
  44054c:	mov    esi,DWORD PTR [esi]
  44054e:	aas    
  44054f:	cld    
  440550:	inc    ecx
  440551:	daa    
  440552:	nop
  440553:	inc    edx
  440554:	loopne 0x4405be
  440556:	int3   
  440557:	fisttp WORD PTR [ebx-0x74b248be]
  44055d:	arpl   WORD PTR ss:[edi-0x75],cx
  440561:	div    dl
  440563:	rol    DWORD PTR [ebx-0xd],cl
  440566:	mov    bh,0xe7
  440568:	xchg   ecx,eax
  440569:	mov    bh,0x5e
  44056b:	clc    
  44056c:	xor    DWORD PTR [edi-0x6caa7af5],0xffffff8a
  440573:	mov    ch,0xa4
  440575:	repz push es
  440577:	add    BYTE PTR [eax],al
  440579:	pop    ds
  44057a:	and    BYTE PTR [ebp+0x4a929345],al
  440580:	fdiv   st,st(0)
  440582:	mov    ds,WORD PTR [edi-0x78f90d00]
  440588:	dec    ebp
  440589:	xchg   DWORD PTR [edx-0xc6d1fae],edx
  44058f:	rol    DWORD PTR [ebx-0xd],cl
  440592:	xor    DWORD PTR [esi],edi
  440594:	xor    al,0x90
  440596:	ret    
  440597:	rol    DWORD PTR [ebx-0xd],cl
  44059a:	xchg   ecx,eax
  44059b:	or     al,BYTE PTR [edi+eiz*1-0x36]
  44059f:	call   DWORD PTR [eax+0x78]
  4405a2:	hlt    
  4405a3:	adc    edx,esp
  4405a5:	mov    al,0x6
  4405a7:	dec    esi
  4405a8:	mov    ebp,DWORD PTR [esi+0xe84f6a]
  4405ae:	add    BYTE PTR [eax],al
  4405b0:	scas   eax,DWORD PTR es:[edi]
  4405b1:	pusha  
  4405b2:	clc    
  4405b3:	push   DWORD PTR [eax+0x43]
  4405b6:	or     ecx,DWORD PTR [ebx+0x158466ae]
  4405bc:	push   DWORD PTR [edx]
  4405be:	cmp    al,0x0
  4405c0:	lock mov bh,0x27
  4405c3:	mov    esi,ebx
  4405c5:	mov    dl,0xd3
  4405c7:	inc    ebx
  4405c8:	xrelease mov DWORD PTR [edx],edi
  4405cb:	cmp    BYTE PTR [edi],bl
  4405cd:	retf   0xffff
  4405d0:	sub    bx,WORD PTR [edi-0x3640ec]
  4405d7:	dec    edi
  4405d8:	push   0x30d4540b
  4405dd:	pop    es
  4405de:	dec    edi
  4405df:	mov    esp,esi
  4405e1:	push   ss
  4405e2:	aam    0x43
  4405e4:	repz mov eax,0x5dbf75e7
  4405ea:	clc    
  4405eb:	sub    DWORD PTR [edi-0x38eb60f6],0xffffffc9
  4405f2:	dec    DWORD PTR [edi-0x65]
  4405f5:	(bad)
  4405f8:	pushf  
  4405f9:	mov    ebx,eax
  4405fb:	add    al,0x88
  4405fd:	out    0x67,al
  4405ff:	xor    al,0xf7
  440601:	(bad)  
  440602:	dec    DWORD PTR [edx+0x43d41af6]
  440608:	repz mov bh,0xe7
  44060b:	push   ecx
  44060c:	jp     0x44066b
  44060e:	clc    
  44060f:	xor    DWORD PTR [edi],0xe
  440612:	xchg   DWORD PTR [ebp+0x0],eax
  440615:	add    BYTE PTR [eax],al
  440617:	aas    
  440618:	xchg   ecx,eax
  440619:	adc    dl,BYTE PTR [edi+eax*2]
  44061c:	leave  
  44061d:	call   DWORD PTR [ecx+0x68]
  440620:	ret    
  440621:	fisttp WORD PTR [ebx+0x43d3f2fe]
  440627:	repz or DWORD PTR [eax+0x28],ecx
  44062b:	mov    ds:0x1f301291,al
  440630:	leave  
  440631:	call   DWORD PTR [ecx+0x1b]
  440634:	xor    esp,edi
  440636:	jmp    DWORD PTR [ecx+ecx*4]
  440639:	ret    
  44063a:	or     al,0x52
  44063c:	push   ss
  44063d:	aam    0x43
  44063f:	repz add edx,DWORD PTR [eax-0x62f90f2f]
  440646:	pop    esp
  440647:	pop    ds
  440648:	leave  
  440649:	dec    DWORD PTR [esi+ebp*4-0x4c95b1a2]
  440650:	lock add DWORD PTR [ebx+0x43d3bb06],ecx
  440657:	repz mov eax,0x6fc755f8
  44065d:	(bad)  
  44065f:	aam    0x5c
  440661:	mov    bh,0x1
  440663:	repz push es
  440665:	add    BYTE PTR [ebx+0x4bdbace],cl
  44066b:	repz dec edx
  44066d:	retf   
  44066e:	int3   
  44066f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440670:	dec    ebx
  440671:	retf   
  440672:	int3   
  440673:	inc    esi
  440674:	nop
  440675:	jmp    0x440602
  440677:	cs jne 0x4406be
  44067e:	lahf   
  44067f:	mov    edx,0x4ba7ccbc
  440684:	retf   
  440685:	int3   
  440686:	es nop
  440688:	jmp    0x4406dd
  44068a:	sbb    eax,0xd33d84b4
  44068f:	xor    bh,BYTE PTR [eax+eax*1]
  440692:	push   0xb0d42bfa
  440697:	push   es
  440698:	test   DWORD PTR ds:0x3c330b,esi
  44069e:	mov    esp,0x305d54bc
  4406a3:	dec    ebx
  4406a4:	retf   
  4406a5:	int3   
  4406a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4406a7:	(bad)  
  4406a8:	jmp    0x4406fb
  4406aa:	fcmovnb st,st(2)
  4406ac:	add    eax,DWORD PTR [eax-0xd]
  4406af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4406b0:	cmp    edx,esp
  4406b2:	mov    al,0x6
  4406b4:	push   eax
  4406b5:	call   0x3c6619
  4406ba:	jo     0x4406ff
  4406bc:	pop    es
  4406bd:	mov    DWORD PTR [esi-0x14b27ba6],esi
  4406c3:	mov    ch,0x65
  4406c5:	add    BYTE PTR [eax-0xe],bh
  4406c8:	push   edi
  4406c9:	aam    0xb0
  4406cb:	push   es
  4406cc:	dec    esi
  4406cd:	jmp    DWORD PTR [esi-0x691a7ba6]
  4406d3:	inc    edi
  4406d4:	retf   
  4406d5:	int3   
  4406d6:	inc    esi
  4406d7:	nop
  4406d8:	jmp    0x44065d
  4406da:	xlat   BYTE PTR ds:[ebx]
  4406db:	and    al,cl
  4406dd:	inc    ebp
  4406de:	fild   DWORD PTR [esi]
  4406e0:	add    BYTE PTR [eax],al
  4406e2:	add    BYTE PTR [eax],al
  4406e4:	add    bl,dh
  4406e6:	inc    ebx
  4406e7:	inc    edx
  4406e8:	fmul   QWORD PTR [ebx+0x7]
  4406eb:	add    BYTE PTR [eax],al
  4406ed:	lods   al,BYTE PTR ds:[esi]
  4406ee:	shl    ebx,0x1
  4406f1:	repz push es
  4406f3:	add    bh,al
  4406f5:	cs pop ebx
  4406f7:	(bad)  
  4406f8:	push   ebx
  4406fa:	push   es
  4406fb:	rol    DWORD PTR [ebp-0x71],0x6
  4406ff:	add    BYTE PTR [eax],al
  440701:	(bad)
  440706:	or     DWORD PTR [eax],esi
  440708:	aam    0x30
  44070a:	pop    es
  44070b:	call   0xf89f83b9
  440710:	mov    eax,ds:0x3c32c3
  440715:	into   
  440716:	pop    ebx
  440717:	clc    
  440718:	add    bl,dh
  44071a:	ror    BYTE PTR [ebx],cl
  44071c:	(bad)  
  44071d:	out    dx,al
  44071e:	push   ds
  44071f:	aam    0x43
  440721:	repz push es
  440723:	add    BYTE PTR [eax],al
  440725:	rep outs dx,DWORD PTR ds:[esi]
  440727:	add    eax,0xd41ef6c7
  44072c:	inc    ebx
  44072d:	repz add eax,0x87f30000
  440733:	cmp    dh,BYTE PTR [eax]
  440735:	pop    ds
  440736:	(bad)  
  440737:	(bad)  
  440738:	jmp    DWORD PTR [esi-0x14fa3ef0]
  44073e:	xor    bh,BYTE PTR [eax+eax*1]
  440741:	repz push es
  440743:	add    BYTE PTR [eax],al
  440745:	jo     0x440760
  440747:	cmp    ah,dl
  440749:	add    BYTE PTR [eax],al
  44074b:	add    BYTE PTR [eax-0x98afffa],dh
  440751:	lock (bad) 
  440753:	(bad)  
  440754:	out    0x6,al
  440756:	aam    0x43
  440758:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44075a:	das    
  44075b:	aam    0x30
  44075d:	pop    es
  44075e:	test   DWORD PTR ds:0x3c3323,ecx
  440764:	push   0xffffffcc
  440766:	out    0x8b,eax
  440768:	(bad)  
  440769:	push   ss
  44076a:	aam    0x43
  44076c:	repz lea eax,[edx-0x18]
  440770:	lock les edi,FWORD PTR [ebx]
  440773:	mov    DWORD PTR [esi],esi
  440775:	outs   dx,DWORD PTR ds:[esi]
  440776:	test   BYTE PTR [ebp-0x35],cl
  440779:	nop
  44077a:	or     bl,BYTE PTR [edi+eax*8]
  44077d:	(bad)  
  44077e:	jmp    DWORD PTR [edi+0x43]
  440781:	add    eax,DWORD PTR [eax+0x0]
  440784:	pushf  
  440785:	hlt    
  440786:	call   ebx
  440788:	xor    BYTE PTR [edi],al
  44078a:	popf   
  44078b:	cmp    al,0xa7
  44078d:	(bad)  
  44078e:	inc    esi
  440790:	out    dx,al
  440791:	retf   0x43d3
  440794:	repz rol DWORD PTR [ebx],cl
  440797:	inc    eax
  440798:	repz out dx,al
  44079a:	pop    edi
  44079b:	add    al,0xb3
  44079d:	push   es
  44079e:	test   DWORD PTR ds:0x3c3327,edx
  4407a4:	shr    DWORD PTR [esi-0x43],0xf7
  4407a8:	push   esp
  4407a9:	pop    edx
  4407aa:	jl     0x440770
  4407ac:	sti    
  4407ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4407ae:	inc    edi
  4407af:	aam    0x0
  4407b1:	add    BYTE PTR [eax],al
  4407b3:	mov    al,0x6
  4407b5:	stc    
  4407b6:	adc    eax,0x3c32ab
  4407bb:	nop
  4407bc:	mov    edi,0xa7f343d3
  4407c1:	dec    ebx
  4407c2:	aam    0xb0
  4407c4:	push   es
  4407c5:	push   eax
  4407c6:	call   0x3c6132
  4407cb:	jo     0x440810
  4407cd:	add    ecx,DWORD PTR [ecx+0x4d8456b6]
  4407d3:	add    edi,DWORD PTR [eax+0x59fdd5e7]
  4407d9:	clc    
  4407da:	sub    DWORD PTR [edi],0x3
  4407dd:	popf   
  4407de:	xor    al,0xc7
  4407e0:	(bad)  
  4407e3:	ds push edi
  4407e5:	dec    ebp
  4407e6:	push   0xfffffff3
  4407e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4407e9:	xor    edx,esp
  4407eb:	xor    BYTE PTR [edi],al
  4407ed:	push   eax
  4407ee:	call   0x3c5962
  4407f3:	jo     0x440837
  4407f5:	or     ecx,DWORD PTR [ebx+0x4d86572e]
  4407fb:	ror    DWORD PTR [ebp-0x4c1703ae],cl
  440801:	out    dx,eax
  440802:	jae    0x44084d
  440804:	mov    es,WORD PTR [edx-0x20]
  440807:	inc    ebx
  440808:	mov    cs,WORD PTR [edx-0x24]
  44080b:	inc    edx
  44080c:	outs   dx,DWORD PTR ds:[esi]
  44080d:	test   eax,0x7c598cfb
  440812:	(bad)  
  440813:	sti    
  440814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440815:	aas    
  440816:	aam    0x0
  440818:	add    BYTE PTR [eax],al
  44081a:	xor    BYTE PTR [edi],al
  44081c:	test   DWORD PTR ds:0x3c3333,edx
  440822:	shl    DWORD PTR [edi+0x6b0d44b],0xfd
  440829:	inc    esp
  44082a:	push   edi
  44082b:	mov    dh,0x84
  44082d:	or     eax,0x3c331f
  440832:	lock retf 
  440834:	sti    
  440835:	push   ecx
  440836:	pop    ebx
  440837:	xor    esi,esi
  440839:	(bad)  
  44083a:	cmp    al,0x85
  44083c:	ret    
  44083d:	or     al,0x68
  44083f:	mov    bl,0xf3
  440841:	add    eax,esi
  440843:	cmp    bh,ah
  440845:	push   esp
  440846:	jg     0xc3acec9e
  44084c:	sti    
  44084d:	add    ebp,DWORD PTR [esi+0xf45863a]
  440853:	lea    ecx,[edx-0x20]
  440856:	fmul   DWORD PTR [ebx]
  440858:	inc    eax
  440859:	aam    0xb0
  44085b:	push   es
  44085c:	xchg   DWORD PTR [ebp+0x13],ecx
  44085f:	ins    DWORD PTR es:[edi],dx
  440860:	cdq    
  440861:	(bad)  
  440862:	ss pop edi
  440864:	(bad)  
  440865:	push   ebx
  440867:	push   es
  440868:	in     eax,0x9
  44086a:	push   0xb183f7b2
  44086f:	add    eax,DWORD PTR [edi+0x428ccb55]
  440875:	clc    
  440876:	or     dl,al
  440878:	out    dx,eax
  440879:	jae    0x440876
  44087b:	mov    ecx,DWORD PTR [edx]
  44087d:	xor    al,0x0
  44087f:	add    BYTE PTR [eax],al
  440881:	lahf   
  440882:	(bad)  
  440883:	inc    DWORD PTR [edx]
  440885:	ds pop edi
  440887:	test   BYTE PTR [ecx],dl
  440889:	lock mov cl,0xf7
  44088c:	mov    eax,ds:0x3c32e7
  440891:	lock shl edi,0x89
  440895:	jecxz  0x440822
  440897:	dec    edx
  440898:	clc    
  440899:	jb     0x4408e1
  44089b:	out    0x3,al
  44089d:	repz push es
  44089f:	test   DWORD PTR ds:0x3c32bf,edx
  4408a5:	lock mov cl,0xf7
  4408a8:	xor    edi,ecx
  4408aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4408ab:	xor    edx,esp
  4408ad:	mov    al,0x6
  4408af:	std    
  4408b0:	inc    esp
  4408b1:	pop    ebx
  4408b2:	mov    es,WORD PTR [edi]
  4408b4:	jmp    0x44083a
  4408b6:	mov    gs,WORD PTR [edx]
  4408b8:	and    al,0x1f
  4408ba:	(bad)  
  4408bb:	dec    DWORD PTR [eax+0x43d426fe]
  4408c1:	repz adc eax,edi
  4408c4:	mov    esi,esp
  4408c6:	(bad)  
  4408c7:	rol    DWORD PTR [ebx-0xd],cl
  4408ca:	adc    eax,edi
  4408cc:	mov    esi,edi
  4408ce:	sub    dl,ah
  4408d0:	inc    ebx
  4408d1:	rep outs dx,BYTE PTR ds:[esi]
  4408d3:	dec    ecx
  4408d4:	test   DWORD PTR [eax+ebx*2],0x34540d8a
  4408db:	cmp    al,0x0
  4408dd:	push   0xffffffca
  4408df:	idiv   DWORD PTR [ecx+0x4003f3]
  4408e5:	add    BYTE PTR [eax],al
  4408e7:	add    BYTE PTR [edx+0x6d],dh
  4408ea:	inc    DWORD PTR [edx]
  4408ec:	repz push es
  4408ee:	test   DWORD PTR [ebp-0x25],edx
  4408f1:	sub    ecx,edi
  4408f3:	mov    esi,edi
  4408f5:	cs aam 0x43
  4408f8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4408fa:	daa    
  4408fb:	aam    0x30
  4408fd:	pop    es
  4408fe:	push   eax
  4408ff:	call   0x3c65fb
  440904:	jo     0x440948
  440906:	add    ecx,DWORD PTR [ebx+0x43d412fe]
  44090c:	repz mov ch,0xe7
  44090f:	aad    0x99
  440911:	push   edi
  440912:	clc    
  440913:	test   DWORD PTR [ebx-0x4cccfc2f],esi
  440919:	imul   esp,DWORD PTR ds:0xd422ce8b,0x43
  440920:	repz add ebx,0x4
  440924:	jo     0x44093f
  440926:	cmp    ah,dl
  440928:	mov    al,0x6
  44092a:	add    BYTE PTR [edx+edi*8-0x5b],dh
  44092e:	adc    edx,esp
  440930:	mov    al,0x6
  440932:	xchg   DWORD PTR [edi+ecx*1+0x3],eax
  440936:	call   0xf89b5798
  44093b:	mov    ebx,esi
  44093d:	mov    dl,0xd3
  44093f:	inc    ebx
  440940:	repz mov ah,0xbc
  440943:	xor    esi,DWORD PTR [ebx]
  440945:	mov    esp,edx
  440947:	pop    ebp
  440948:	xor    BYTE PTR [edx-0x35],cl
  44094b:	int3   
  44094c:	add    BYTE PTR [eax],al
  44094e:	add    bl,dh
  440950:	push   es
  440951:	add    BYTE PTR [eax],al
  440953:	repz push es
  440955:	add    BYTE PTR [eax],al
  440957:	repz push es
  440959:	add    BYTE PTR [eax],al
  44095b:	repz push es
  44095d:	add    BYTE PTR [eax],al
  44095f:	repz push es
  440961:	add    BYTE PTR [eax],al
  440963:	repz push es
  440965:	add    BYTE PTR [eax],al
  440967:	repz push es
  440969:	add    BYTE PTR [eax],al
  44096b:	repz push es
  44096d:	add    BYTE PTR [eax],al
  44096f:	repz push es
  440971:	add    BYTE PTR [eax],al
  440973:	repz push es
  440975:	add    BYTE PTR [eax],al
  440977:	repz push es
  440979:	add    BYTE PTR [eax],al
  44097b:	repz push es
  44097d:	add    BYTE PTR [eax],al
  44097f:	repz push es
  440981:	add    BYTE PTR [eax],al
  440983:	repz push es
  440985:	add    BYTE PTR [eax],al
  440987:	repz push es
  440989:	add    BYTE PTR [eax],al
  44098b:	repz push es
  44098d:	add    BYTE PTR [eax],al
  44098f:	repz push es
  440991:	add    BYTE PTR [eax],al
  440993:	repz push es
  440995:	add    BYTE PTR [eax],al
  440997:	repz push es
  440999:	add    BYTE PTR [eax],al
  44099b:	repz push es
  44099d:	add    BYTE PTR [eax],al
  44099f:	repz push es
  4409a1:	add    BYTE PTR [eax],al
  4409a3:	repz push es
  4409a5:	add    BYTE PTR [eax],al
  4409a7:	repz push es
  4409a9:	add    BYTE PTR [eax],al
  4409ab:	repz push es
  4409ad:	add    BYTE PTR [eax],al
  4409af:	repz push es
  4409b1:	add    BYTE PTR [eax],al
  4409b3:	add    BYTE PTR [eax],al
  4409b5:	add    bl,dh
  4409b7:	push   es
  4409b8:	add    BYTE PTR [eax],al
  4409ba:	repz push es
  4409bc:	add    BYTE PTR [eax],al
  4409be:	repz push es
  4409c0:	add    BYTE PTR [eax],al
  4409c2:	repz push es
  4409c4:	add    BYTE PTR [eax],al
  4409c6:	repz push es
  4409c8:	add    BYTE PTR [eax],al
  4409ca:	repz push es
  4409cc:	add    BYTE PTR [eax],al
  4409ce:	repz push es
  4409d0:	add    BYTE PTR [eax],al
  4409d2:	repz push es
  4409d4:	add    BYTE PTR [eax],al
  4409d6:	repz push es
  4409d8:	add    BYTE PTR [eax],al
  4409da:	repz push es
  4409dc:	add    BYTE PTR [eax],al
  4409de:	repz push es
  4409e0:	add    BYTE PTR [eax],al
  4409e2:	repz push es
  4409e4:	add    BYTE PTR [eax],al
  4409e6:	repz push es
  4409e8:	add    BYTE PTR [eax],al
  4409ea:	repz push es
  4409ec:	add    BYTE PTR [eax],al
  4409ee:	repz push es
  4409f0:	add    BYTE PTR [eax],al
  4409f2:	repz push es
  4409f4:	add    BYTE PTR [eax],al
  4409f6:	repz push es
  4409f8:	add    BYTE PTR [eax],al
  4409fa:	repz push es
  4409fc:	add    BYTE PTR [eax],al
  4409fe:	repz push es
  440a00:	add    BYTE PTR [eax],al
  440a02:	repz push es
  440a04:	add    BYTE PTR [eax],al
  440a06:	repz push es
  440a08:	add    BYTE PTR [eax],al
  440a0a:	repz push es
  440a0c:	add    BYTE PTR [eax],al
  440a0e:	repz push es
  440a10:	add    BYTE PTR [eax],al
  440a12:	repz push es
  440a14:	add    BYTE PTR [eax],al
  440a16:	repz push es
  440a18:	add    BYTE PTR [eax],al
  440a1a:	add    BYTE PTR [eax],al
  440a1c:	add    bl,dh
  440a1e:	push   es
  440a1f:	add    BYTE PTR [eax],al
  440a21:	repz push es
  440a23:	add    BYTE PTR [eax],al
  440a25:	repz push es
  440a27:	add    BYTE PTR [eax],al
  440a29:	repz push es
  440a2b:	add    BYTE PTR [eax],al
  440a2d:	repz push es
  440a2f:	add    BYTE PTR [eax],al
  440a31:	repz push es
  440a33:	add    BYTE PTR [eax],al
  440a35:	repz push es
  440a37:	add    BYTE PTR [eax],al
  440a39:	repz push es
  440a3b:	add    BYTE PTR [eax],al
  440a3d:	repz push es
  440a3f:	add    BYTE PTR [eax],al
  440a41:	repz push es
  440a43:	add    BYTE PTR [eax],al
  440a45:	repz push es
  440a47:	add    BYTE PTR [eax],al
  440a49:	repz push es
  440a4b:	add    BYTE PTR [eax],al
  440a4d:	repz push es
  440a4f:	add    BYTE PTR [eax],al
  440a51:	repz push es
  440a53:	add    BYTE PTR [eax],al
  440a55:	repz push es
  440a57:	add    BYTE PTR [eax],al
  440a59:	repz push es
  440a5b:	add    BYTE PTR [eax],al
  440a5d:	repz push es
  440a5f:	add    BYTE PTR [eax],al
  440a61:	add    BYTE PTR [eax+eax*1],al
  440a64:	add    bl,dh
  440a66:	push   es
  440a67:	add    BYTE PTR [eax],al
  440a69:	jmp    0x440a71
  440a6b:	add    BYTE PTR [eax],al
  440a6d:	outs   dx,DWORD PTR ds:[esi]
  440a6e:	xor    eax,0x355f3390
  440a73:	cwde   
  440a74:	xor    ecx,DWORD PTR [edi-0x70cc5fcc]
  440a7a:	xor    al,0xa8
  440a7c:	xor    esi,ebx
  440a7e:	mov    BYTE PTR [ebx],0x0
  440a81:	dec    ebx
  440a82:	pop    es
  440a83:	add    BYTE PTR [eax],al
  440a85:	adc    BYTE PTR [esi],bh
  440a87:	mov    edi,DWORD PTR [ecx]
  440a89:	arpl   WORD PTR [esi],di
  440a8b:	call   0x8539:0xa83e5c39
  440a92:	sar    DWORD PTR ds:[ecx],cl
  440a95:	int    0x3e
  440a97:	call   0x2d80f9d5
  440a9c:	cmp    ch,BYTE PTR [eax]
  440a9e:	cmp    eax,0x3d3a3a51
  440aa3:	fnstsw WORD PTR [edx]
  440aa5:	xchg   edi,eax
  440aa6:	cmp    al,0xc7
  440aa8:	cmp    al,0xb6
  440aaa:	cmp    edx,ebp
  440aac:	cmp    al,0xf7
  440aae:	cmp    DWORD PTR ds:0xbe39cc3d,ecx
  440ab4:	cmp    eax,0x3ddb3a30
  440ab9:	pop    edx
  440aba:	cmp    ch,bh
  440abc:	cmp    eax,0x3e0c3a5c
  440ac1:	add    DWORD PTR [ecx],edi
  440ac3:	es add bh,BYTE PTR ds:[ecx]
  440ac7:	cmp    DWORD PTR [esi],edi
  440ac9:	add    BYTE PTR [eax],al
  440acb:	add    BYTE PTR [ecx+edi*1],al
  440ace:	inc    ebp
  440acf:	ds fwait
  440ad1:	cmp    cl,al
  440ad3:	ds sub al,0x39
  440ad6:	xchg   BYTE PTR [edi],bh
  440ad8:	js     0x440b12
  440ada:	popf   
  440adb:	aas    
  440adc:	dec    ebp
  440add:	cmp    BYTE PTR [eax-0x1bc7d1c1],dh
  440ae3:	aas    
  440ae4:	or     DWORD PTR [eax],edi
  440ae6:	add    BYTE PTR [eax],al
  440ae8:	repz (bad) 
  440aea:	add    eax,DWORD PTR [eax]
  440aec:	addr16 pop es
  440aee:	add    BYTE PTR [eax],al
  440af0:	icebp  
  440af1:	ss and eax,0x5936a230
  440af7:	xor    BYTE PTR [edi+esi*1+0x66],cl
  440afb:	xor    BYTE PTR [edi+0x37],ah
  440afe:	test   DWORD PTR [eax],esi
  440b00:	push   0x79309336
  440b05:	mov    eax,ss:0xbf369c30
  440b0b:	xor    BYTE PTR [esi-0x2dcf28ca],ch
  440b11:	ss jmp 0x440b44
  440b14:	mov    edx,0x2310336
  440b19:	ss dec eax
  440b1b:	xor    DWORD PTR ds:0x16315436,esi
  440b21:	ss push 0x31
  440b24:	jno    0x440b5b
  440b26:	mov    esi,0xd535bb31
  440b2b:	xor    DWORD PTR [edx+0x31eb35],edx
  440b31:	add    BYTE PTR [eax],al
  440b33:	xchg   DWORD PTR ds:0x34ea31fe,esi
  440b39:	push   cs
  440b3a:	xor    al,BYTE PTR [edi]
  440b3c:	xor    eax,0x3514321d
  440b41:	xor    al,0x32
  440b43:	sbb    DWORD PTR ds:0x34ae323f,esi
  440b49:	dec    ecx
  440b4a:	xor    bh,BYTE PTR [ebp-0x2ecdabcc]
  440b50:	xor    al,0x68
  440b52:	xor    cl,dh
  440b54:	xor    al,0x72
  440b56:	xor    ah,BYTE PTR [esp+esi*1-0x66]
  440b5a:	xor    dh,BYTE PTR ds:0x4132cc34
  440b60:	xor    al,0xdc
  440b62:	xor    dh,ch
  440b64:	xor    ebp,DWORD PTR [ebx]
  440b66:	xor    ebx,ebx
  440b68:	xor    ecx,DWORD PTR [ebx+esi*1-0x5b]
  440b6c:	xor    esp,DWORD PTR [ebx+0x33]
  440b6f:	call   0x8433:0x7a337133
  440b76:	xor    esp,DWORD PTR [edi+0x33]
  440b79:	popf   
  440b7a:	xor    edx,DWORD PTR [ecx-0x51cc4ec6]
  440b80:	cmp    cl,dh
  440b82:	xor    eax,ebp
  440b84:	cmp    ah,ch
  440b86:	xor    esi,ebx
  440b88:	push   es
  440b89:	add    BYTE PTR [eax],al
  440b8b:	repz push es
  440b8d:	add    BYTE PTR [eax],al
  440b8f:	repz push es
  440b91:	add    BYTE PTR [eax],al
  440b93:	repz push es
  440b95:	add    BYTE PTR [eax],al
  440b97:	add    BYTE PTR [eax],al
  440b99:	add    bl,dh
  440b9b:	push   es
  440b9c:	add    BYTE PTR [eax],al
  440b9e:	repz push es
  440ba0:	add    BYTE PTR [eax],al
  440ba2:	repz push es
  440ba4:	add    BYTE PTR [eax],al
  440ba6:	repz push es
  440ba8:	add    BYTE PTR [eax],al
  440baa:	repz push es
  440bac:	add    BYTE PTR [eax],al
  440bae:	repz push es
  440bb0:	add    BYTE PTR [eax],al
  440bb2:	repz push es
  440bb4:	add    BYTE PTR [eax],al
  440bb6:	repz push es
  440bb8:	add    BYTE PTR [eax],al
  440bba:	repz push es
  440bbc:	add    BYTE PTR [eax],al
  440bbe:	repz push es
  440bc0:	add    BYTE PTR [eax],al
  440bc2:	repz push es
  440bc4:	add    BYTE PTR [eax],al
  440bc6:	repz push es
  440bc8:	add    BYTE PTR [eax],al
  440bca:	repz push es
  440bcc:	add    BYTE PTR [eax],al
  440bce:	repz push es
  440bd0:	add    BYTE PTR [eax],al
  440bd2:	repz push es
  440bd4:	add    BYTE PTR [eax],al
  440bd6:	repz push es
  440bd8:	add    BYTE PTR [eax],al
  440bda:	repz push es
  440bdc:	add    BYTE PTR [eax],al
  440bde:	repz push es
  440be0:	add    BYTE PTR [eax],al
  440be2:	repz push es
  440be4:	add    BYTE PTR [eax],al
  440be6:	repz push es
  440be8:	add    BYTE PTR [eax],al
  440bea:	repz push es
  440bec:	add    BYTE PTR [eax],al
  440bee:	repz push es
  440bf0:	add    BYTE PTR [eax],al
  440bf2:	repz push es
  440bf4:	add    BYTE PTR [eax],al
  440bf6:	repz push es
  440bf8:	add    BYTE PTR [eax],al
  440bfa:	repz push es
  440bfc:	add    BYTE PTR [eax],al
  440bfe:	add    BYTE PTR [eax],al
  440c00:	add    bl,dh
  440c02:	push   es
  440c03:	add    BYTE PTR [eax],al
  440c05:	repz push es
  440c07:	add    BYTE PTR [eax],al
  440c09:	repz push es
  440c0b:	add    BYTE PTR [eax],al
  440c0d:	repz push es
  440c0f:	add    BYTE PTR [eax],al
  440c11:	repz push es
  440c13:	add    BYTE PTR [eax],al
  440c15:	repz push es
  440c17:	add    BYTE PTR [eax],al
  440c19:	repz push es
  440c1b:	add    BYTE PTR [eax],al
  440c1d:	repz push es
  440c1f:	add    BYTE PTR [eax],al
  440c21:	repz push es
  440c23:	add    BYTE PTR [eax],al
  440c25:	repz push es
  440c27:	add    BYTE PTR [eax],al
  440c29:	repz push es
  440c2b:	add    BYTE PTR [eax],al
  440c2d:	repz push es
  440c2f:	add    BYTE PTR [eax],al
  440c31:	repz push es
  440c33:	add    BYTE PTR [eax],al
  440c35:	repz push es
  440c37:	add    BYTE PTR [eax],al
  440c39:	repz push es
  440c3b:	add    BYTE PTR [eax],al
  440c3d:	repz push es
  440c3f:	add    BYTE PTR [eax],al
  440c41:	repz push es
  440c43:	add    BYTE PTR [eax],al
  440c45:	repz push es
  440c47:	add    BYTE PTR [eax],al
  440c49:	repz push es
  440c4b:	add    BYTE PTR [eax],al
  440c4d:	repz push es
  440c4f:	add    BYTE PTR [eax],al
  440c51:	repz push es
  440c53:	add    BYTE PTR [eax],al
  440c55:	repz push es
  440c57:	add    BYTE PTR [eax],al
  440c59:	repz push es
  440c5b:	add    BYTE PTR [eax],al
  440c5d:	repz push es
  440c5f:	add    BYTE PTR [eax],al
  440c61:	repz push es
  440c63:	add    BYTE PTR [eax],al
  440c65:	add    BYTE PTR [eax],al
  440c67:	add    bl,dh
  440c69:	push   es
  440c6a:	add    BYTE PTR [eax],al
  440c6c:	repz push es
  440c6e:	add    BYTE PTR [eax],al
  440c70:	repz push es
  440c72:	add    BYTE PTR [eax],al
  440c74:	repz push es
  440c76:	add    BYTE PTR [eax],al
  440c78:	repz push es
  440c7a:	add    BYTE PTR [eax],al
  440c7c:	repz push es
  440c7e:	add    BYTE PTR [eax],al
  440c80:	repz push es
  440c82:	add    BYTE PTR [eax],al
  440c84:	repz push es
  440c86:	add    BYTE PTR [eax],al
  440c88:	repz push es
  440c8a:	add    BYTE PTR [eax],al
  440c8c:	repz push es
  440c8e:	add    BYTE PTR [eax],al
  440c90:	repz push es
  440c92:	add    BYTE PTR [eax],al
  440c94:	repz push es
  440c96:	add    BYTE PTR [eax],al
  440c98:	repz push es
  440c9a:	add    BYTE PTR [eax],al
  440c9c:	repz push es
  440c9e:	add    BYTE PTR [eax],al
  440ca0:	repz push es
  440ca2:	add    BYTE PTR [eax],al
  440ca4:	repz push es
  440ca6:	add    BYTE PTR [eax],al
  440ca8:	repz push es
  440caa:	add    BYTE PTR [eax],al
  440cac:	repz push es
  440cae:	add    BYTE PTR [eax],al
  440cb0:	repz push es
  440cb2:	add    BYTE PTR [eax],al
  440cb4:	repz push es
  440cb6:	add    BYTE PTR [eax],al
  440cb8:	repz push es
  440cba:	add    BYTE PTR [eax],al
  440cbc:	repz push es
  440cbe:	add    BYTE PTR [eax],al
  440cc0:	repz push es
  440cc2:	add    BYTE PTR [eax],al
  440cc4:	repz push es
  440cc6:	add    BYTE PTR [eax],al
  440cc8:	repz push es
  440cca:	add    BYTE PTR [eax],al
  440ccc:	add    BYTE PTR [eax],al
  440cce:	add    bl,dh
  440cd0:	push   es
  440cd1:	add    BYTE PTR [eax],al
  440cd3:	repz push es
  440cd5:	add    BYTE PTR [eax],al
  440cd7:	repz push es
  440cd9:	add    BYTE PTR [eax],al
  440cdb:	repz push es
  440cdd:	add    BYTE PTR [eax],al
  440cdf:	repz push es
  440ce1:	add    BYTE PTR [eax],al
  440ce3:	repz push es
  440ce5:	add    BYTE PTR [eax],al
  440ce7:	repz push es
  440ce9:	add    BYTE PTR [eax],al
  440ceb:	repz push es
  440ced:	add    BYTE PTR [eax],al
  440cef:	repz push es
  440cf1:	add    BYTE PTR [eax],al
  440cf3:	repz push es
  440cf5:	add    BYTE PTR [eax],al
  440cf7:	repz push es
  440cf9:	add    BYTE PTR [eax],al
  440cfb:	repz push es
  440cfd:	add    BYTE PTR [eax],al
  440cff:	repz push es
  440d01:	add    BYTE PTR [eax],al
  440d03:	repz push es
  440d05:	add    BYTE PTR [eax],al
  440d07:	repz push es
  440d09:	add    BYTE PTR [eax],al
  440d0b:	repz push es
  440d0d:	add    BYTE PTR [eax],al
  440d0f:	repz push es
  440d11:	add    BYTE PTR [eax],al
  440d13:	repz push es
  440d15:	add    BYTE PTR [eax],al
  440d17:	repz push es
  440d19:	add    BYTE PTR [eax],al
  440d1b:	repz push es
  440d1d:	add    BYTE PTR [eax],al
  440d1f:	repz push es
  440d21:	add    BYTE PTR [eax],al
  440d23:	repz push es
  440d25:	add    BYTE PTR [eax],al
  440d27:	repz push es
  440d29:	add    BYTE PTR [eax],al
  440d2b:	repz push es
  440d2d:	add    BYTE PTR [eax],al
  440d2f:	repz push es
  440d31:	add    BYTE PTR [eax],al
  440d33:	add    BYTE PTR [eax],al
  440d35:	add    bl,dh
  440d37:	push   es
  440d38:	add    BYTE PTR [eax],al
  440d3a:	repz push es
  440d3c:	add    BYTE PTR [eax],al
  440d3e:	repz push es
  440d40:	add    BYTE PTR [eax],al
  440d42:	repz push es
  440d44:	add    BYTE PTR [eax],al
  440d46:	repz push es
  440d48:	add    BYTE PTR [eax],al
  440d4a:	repz push es
  440d4c:	add    BYTE PTR [eax],al
  440d4e:	repz push es
  440d50:	add    BYTE PTR [eax],al
  440d52:	repz push es
  440d54:	add    BYTE PTR [eax],al
  440d56:	repz push es
  440d58:	add    BYTE PTR [eax],al
  440d5a:	repz push es
  440d5c:	add    BYTE PTR [eax],al
  440d5e:	repz push es
  440d60:	add    BYTE PTR [eax],al
  440d62:	repz push es
  440d64:	add    BYTE PTR [eax],al
  440d66:	repz push es
  440d68:	add    BYTE PTR [eax],al
  440d6a:	repz push es
  440d6c:	add    BYTE PTR [eax],al
  440d6e:	repz push es
  440d70:	add    BYTE PTR [eax],al
  440d72:	repz push es
  440d74:	add    BYTE PTR [eax],al
  440d76:	repz push es
  440d78:	add    BYTE PTR [eax],al
  440d7a:	repz push es
  440d7c:	add    BYTE PTR [eax],al
  440d7e:	repz push es
  440d80:	add    BYTE PTR [eax],al
  440d82:	repz push es
  440d84:	add    BYTE PTR [eax],al
  440d86:	repz push es
  440d88:	add    BYTE PTR [eax],al
  440d8a:	repz push es
  440d8c:	add    BYTE PTR [eax],al
  440d8e:	repz push es
  440d90:	add    BYTE PTR [eax],al
  440d92:	repz push es
  440d94:	add    BYTE PTR [eax],al
  440d96:	repz push es
  440d98:	add    BYTE PTR [eax],al
  440d9a:	add    BYTE PTR [eax],al
  440d9c:	add    bl,dh
  440d9e:	push   es
  440d9f:	add    BYTE PTR [eax],al
  440da1:	repz push es
  440da3:	add    BYTE PTR [eax],al
  440da5:	repz push es
  440da7:	add    BYTE PTR [eax],al
  440da9:	repz push es
  440dab:	add    BYTE PTR [eax],al
  440dad:	repz push es
  440daf:	add    BYTE PTR [eax],al
  440db1:	repz push es
  440db3:	add    BYTE PTR [eax],al
  440db5:	repz push es
  440db7:	add    BYTE PTR [eax],al
  440db9:	repz push es
  440dbb:	add    BYTE PTR [eax],al
  440dbd:	repz push es
  440dbf:	add    BYTE PTR [eax],al
  440dc1:	repz push es
  440dc3:	add    BYTE PTR [eax],al
  440dc5:	repz push es
  440dc7:	add    BYTE PTR [eax],al
  440dc9:	repz push es
  440dcb:	add    BYTE PTR [eax],al
  440dcd:	repz push es
  440dcf:	add    BYTE PTR [eax],al
  440dd1:	repz push es
  440dd3:	add    BYTE PTR [eax],al
  440dd5:	repz push es
  440dd7:	add    BYTE PTR [eax],al
  440dd9:	repz push es
  440ddb:	add    BYTE PTR [eax],al
  440ddd:	repz push es
  440ddf:	add    BYTE PTR [eax],al
  440de1:	repz push es
  440de3:	add    BYTE PTR [eax],al
  440de5:	repz push es
  440de7:	add    BYTE PTR [eax],al
  440de9:	repz push es
  440deb:	add    BYTE PTR [eax],al
  440ded:	repz push es
  440def:	add    BYTE PTR [eax],al
  440df1:	repz push es
  440df3:	add    BYTE PTR [eax],al
  440df5:	repz push es
  440df7:	add    BYTE PTR [eax],al
  440df9:	repz push es
  440dfb:	add    BYTE PTR [eax],al
  440dfd:	repz push es
  440dff:	add    BYTE PTR [eax],al
  440e01:	add    BYTE PTR [eax],al
  440e03:	add    bl,dh
  440e05:	push   es
  440e06:	add    BYTE PTR [eax],al
  440e08:	repz push es
  440e0a:	add    BYTE PTR [eax],al
  440e0c:	repz push es
  440e0e:	add    BYTE PTR [eax],al
  440e10:	repz push es
  440e12:	add    BYTE PTR [eax],al
  440e14:	repz push es
  440e16:	add    BYTE PTR [eax],al
  440e18:	repz push es
  440e1a:	add    BYTE PTR [eax],al
  440e1c:	repz push es
  440e1e:	add    BYTE PTR [eax],al
  440e20:	repz push es
  440e22:	add    BYTE PTR [eax],al
  440e24:	repz push es
  440e26:	add    BYTE PTR [eax],al
  440e28:	repz push es
  440e2a:	add    BYTE PTR [eax],al
  440e2c:	repz push es
  440e2e:	add    BYTE PTR [eax],al
  440e30:	repz push es
  440e32:	add    BYTE PTR [eax],al
  440e34:	repz push es
  440e36:	add    BYTE PTR [eax],al
  440e38:	repz push es
  440e3a:	add    BYTE PTR [eax],al
  440e3c:	repz push es
  440e3e:	add    BYTE PTR [eax],al
  440e40:	repz push es
  440e42:	add    BYTE PTR [eax],al
  440e44:	repz push es
  440e46:	add    BYTE PTR [eax],al
  440e48:	repz push es
  440e4a:	add    BYTE PTR [eax],al
  440e4c:	repz push es
  440e4e:	add    BYTE PTR [eax],al
  440e50:	repz push es
  440e52:	add    BYTE PTR [eax],al
  440e54:	repz push es
  440e56:	add    BYTE PTR [eax],al
  440e58:	repz push es
  440e5a:	add    BYTE PTR [eax],al
  440e5c:	repz push es
  440e5e:	add    BYTE PTR [eax],al
  440e60:	repz push es
  440e62:	add    BYTE PTR [eax],al
  440e64:	repz push es
  440e66:	add    BYTE PTR [eax],al
  440e68:	add    BYTE PTR [eax],al
  440e6a:	add    bl,dh
  440e6c:	push   es
  440e6d:	add    BYTE PTR [eax],al
  440e6f:	repz push es
  440e71:	add    BYTE PTR [eax],al
  440e73:	repz push es
  440e75:	add    BYTE PTR [eax],al
  440e77:	repz push es
  440e79:	add    BYTE PTR [eax],al
  440e7b:	repz push es
  440e7d:	add    BYTE PTR [eax],al
  440e7f:	repz push es
  440e81:	add    BYTE PTR [eax],al
  440e83:	clc    
  440e84:	dec    ebp
  440e85:	inc    esp
  440e86:	add    ah,bh
  440e88:	dec    ebp
  440e89:	inc    esp
  440e8a:	add    BYTE PTR [eax],al
  440e8c:	dec    esi
  440e8d:	inc    esp
  440e8e:	add    BYTE PTR [esi+ecx*2],al
  440e91:	inc    esp
  440e92:	add    BYTE PTR [eax],cl
  440e94:	dec    esi
  440e95:	inc    esp
  440e96:	add    BYTE PTR [esi+ecx*2],cl
  440e99:	inc    esp
  440e9a:	add    BYTE PTR [eax],dl
  440e9c:	dec    esi
  440e9d:	inc    esp
  440e9e:	add    BYTE PTR [esi+ecx*2],dl
  440ea1:	inc    esp
  440ea2:	add    BYTE PTR [eax],bl
  440ea4:	dec    esi
  440ea5:	inc    esp
  440ea6:	add    BYTE PTR [esi+ecx*2],bl
  440ea9:	inc    esp
  440eaa:	add    BYTE PTR [eax],ah
  440eac:	dec    esi
  440ead:	inc    esp
  440eae:	add    BYTE PTR [esi+ecx*2],ah
  440eb1:	inc    esp
  440eb2:	add    BYTE PTR [eax],ch
  440eb4:	dec    esi
  440eb5:	inc    esp
  440eb6:	add    ah,ah
  440eb8:	dec    ebp
  440eb9:	inc    esp
  440eba:	add    BYTE PTR [esi+ecx*2],ch
  440ebd:	inc    esp
  440ebe:	add    BYTE PTR [eax],dh
  440ec0:	dec    esi
  440ec1:	inc    esp
  440ec2:	add    BYTE PTR [esi+ecx*2],dh
  440ec5:	inc    esp
  440ec6:	add    BYTE PTR [eax],bh
  440ec8:	dec    esi
  440ec9:	inc    esp
  440eca:	add    BYTE PTR [esi+ecx*2],bh
  440ecd:	inc    esp
  440ece:	add    BYTE PTR [eax+0x4e],al
  440ed1:	inc    esp
  440ed2:	add    BYTE PTR [esi+ecx*2+0x44],al
  440ed6:	add    BYTE PTR [eax+0x4e],cl
  440ed9:	inc    esp
  440eda:	add    BYTE PTR [esi+ecx*2+0x44],cl
  440ede:	add    BYTE PTR [eax+0x4e],dl
  440ee1:	inc    esp
  440ee2:	add    BYTE PTR [esi+ecx*2+0x44],dl
  440ee6:	add    BYTE PTR [eax+0x4e],bl
  440ee9:	inc    esp
  440eea:	add    BYTE PTR [esi+ecx*2+0x44],bl
  440eee:	add    BYTE PTR [eax+0x4e],ah
  440ef1:	inc    esp
  440ef2:	add    BYTE PTR [esi+ecx*2+0x44],ah
  440ef6:	add    BYTE PTR [eax+0x4e],ch
  440ef9:	inc    esp
  440efa:	add    BYTE PTR [esi+ecx*2+0x44],ch
  440efe:	add    BYTE PTR [eax+0x4e],dh
  440f01:	inc    esp
  440f02:	add    BYTE PTR [esi+ecx*2+0x44],dh
  440f06:	add    BYTE PTR [eax+0x4e],bh
  440f09:	inc    esp
  440f0a:	add    BYTE PTR [esi+ecx*2+0x44],bh
  440f0e:	add    BYTE PTR [eax-0x7bffbbb2],al
  440f14:	dec    esi
  440f15:	inc    esp
  440f16:	add    BYTE PTR [eax-0x73ffbbb2],cl
  440f1c:	dec    esi
  440f1d:	inc    esp
  440f1e:	add    BYTE PTR [esi+ecx*2],bl
  440f21:	inc    esp
  440f22:	add    BYTE PTR [eax-0x6bffbbb2],dl
  440f28:	dec    esi
  440f29:	inc    esp
  440f2a:	add    BYTE PTR [eax-0x63ffbbb2],bl
  440f30:	dec    esi
  440f31:	inc    esp
  440f32:	add    BYTE PTR [eax-0x5bffbbb2],ah
  440f38:	dec    esi
  440f39:	inc    esp
  440f3a:	add    BYTE PTR [eax-0x53ffbbb2],ch
  440f40:	dec    esi
  440f41:	inc    esp
  440f42:	add    BYTE PTR [eax-0x4bffbbb2],dh
  440f48:	dec    esi
  440f49:	inc    esp
  440f4a:	add    BYTE PTR [eax-0x43ffbbb2],bh
  440f50:	dec    esi
  440f51:	inc    esp
  440f52:	add    al,al
  440f54:	dec    esi
  440f55:	inc    esp
  440f56:	add    ah,al
  440f58:	dec    esi
  440f59:	inc    esp
  440f5a:	add    al,cl
  440f5c:	dec    esi
  440f5d:	inc    esp
  440f5e:	add    ah,cl
  440f60:	dec    esi
  440f61:	inc    esp
  440f62:	add    al,dl
  440f64:	dec    esi
  440f65:	inc    esp
  440f66:	add    ah,dl
  440f68:	dec    esi
  440f69:	inc    esp
  440f6a:	add    al,bl
  440f6c:	dec    esi
  440f6d:	inc    esp
  440f6e:	add    ah,bl
  440f70:	dec    esi
  440f71:	inc    esp
  440f72:	add    al,ah
  440f74:	dec    esi
  440f75:	inc    esp
  440f76:	add    ah,ah
  440f78:	dec    esi
  440f79:	inc    esp
  440f7a:	add    al,ch
  440f7c:	dec    esi
  440f7d:	inc    esp
  440f7e:	add    ah,ch
  440f80:	dec    esi
  440f81:	inc    esp
  440f82:	add    al,dh
  440f84:	dec    esi
  440f85:	inc    esp
  440f86:	add    ah,dh
  440f88:	dec    esi
  440f89:	inc    esp
  440f8a:	add    al,bh
  440f8c:	dec    esi
  440f8d:	inc    esp
  440f8e:	add    ah,bh
  440f90:	dec    esi
  440f91:	inc    esp
  440f92:	add    BYTE PTR [eax],al
  440f94:	dec    edi
  440f95:	inc    esp
  440f96:	add    BYTE PTR [edi+ecx*2],al
  440f99:	inc    esp
  440f9a:	add    BYTE PTR [eax],cl
  440f9c:	dec    edi
  440f9d:	inc    esp
  440f9e:	add    BYTE PTR [edi+ecx*2],cl
  440fa1:	inc    esp
  440fa2:	add    BYTE PTR [eax],dl
  440fa4:	dec    edi
  440fa5:	inc    esp
  440fa6:	add    BYTE PTR [edi+ecx*2],dl
  440fa9:	inc    esp
  440faa:	add    BYTE PTR [eax],bl
  440fac:	dec    edi
  440fad:	inc    esp
  440fae:	add    BYTE PTR [edi+ecx*2],bl
  440fb1:	inc    esp
  440fb2:	add    BYTE PTR [eax],ah
  440fb4:	dec    edi
  440fb5:	inc    esp
  440fb6:	add    BYTE PTR [edi+ecx*2],ah
  440fb9:	inc    esp
  440fba:	add    BYTE PTR [eax],ch
  440fbc:	dec    edi
  440fbd:	inc    esp
  440fbe:	add    BYTE PTR [edi+ecx*2],ch
  440fc1:	inc    esp
  440fc2:	add    BYTE PTR [eax],al
  440fc4:	dec    edi
  440fc5:	inc    esp
  440fc6:	add    BYTE PTR [eax],dh
  440fc8:	dec    edi
  440fc9:	inc    esp
  440fca:	add    BYTE PTR [edi+ecx*2],dh
  440fcd:	inc    esp
  440fce:	add    BYTE PTR [eax],bh
  440fd0:	dec    edi
  440fd1:	inc    esp
  440fd2:	add    BYTE PTR [edi+ecx*2],bh
  440fd5:	inc    esp
  440fd6:	add    al,ch
  440fd8:	dec    ebp
  440fd9:	inc    esp
  440fda:	add    BYTE PTR [eax+0x4f],al
  440fdd:	inc    esp
  440fde:	add    BYTE PTR [edi+ecx*2+0x44],al
  440fe2:	add    BYTE PTR [eax+0x4f],cl
  440fe5:	inc    esp
  440fe6:	add    BYTE PTR [edi+ecx*2+0x44],cl
  440fea:	add    BYTE PTR [eax+0x4f],dl
  440fed:	inc    esp
  440fee:	add    BYTE PTR [edi+ecx*2+0x44],dl
  440ff2:	add    al,cl
  440ff4:	dec    esi
  440ff5:	inc    esp
  440ff6:	add    BYTE PTR [eax+0x4f],bl
  440ff9:	inc    esp
  440ffa:	add    BYTE PTR [edi+ecx*2+0x44],bl
  440ffe:	add    BYTE PTR [eax+0x4f],ah
  441001:	inc    esp
  441002:	add    BYTE PTR [edi+ecx*2+0x44],ah
  441006:	add    BYTE PTR [eax+0x4f],ch
  441009:	inc    esp
  44100a:	add    BYTE PTR [edi+ecx*2+0x44],ch
  44100e:	add    BYTE PTR [eax+0x4f],dh
  441011:	inc    esp
  441012:	add    ah,ch
  441014:	dec    esi
  441015:	inc    esp
  441016:	add    BYTE PTR [esi+ecx*2+0x44],bh
  44101a:	add    BYTE PTR [edi+ecx*2+0x44],dh
  44101e:	add    BYTE PTR [eax+0x4f],bh
  441021:	inc    esp
  441022:	add    BYTE PTR [edi+ecx*2+0x44],bh
  441026:	add    BYTE PTR [eax-0x7bffbbb1],al
  44102c:	dec    edi
  44102d:	inc    esp
  44102e:	add    BYTE PTR [eax-0x73ffbbb1],cl
  441034:	dec    edi
  441035:	inc    esp
  441036:	add    BYTE PTR [eax-0x6bffbbb1],dl
  44103c:	dec    edi
  44103d:	inc    esp
  44103e:	add    BYTE PTR [eax-0x63ffbbb1],bl
  441044:	dec    edi
  441045:	inc    esp
  441046:	add    BYTE PTR [eax],ch
  441048:	dec    edi
  441049:	inc    esp
  44104a:	add    BYTE PTR [eax-0x5bffbbb1],ah
  441050:	dec    edi
  441051:	inc    esp
  441052:	add    BYTE PTR [eax-0x53ffbbb1],ch
  441058:	dec    edi
  441059:	inc    esp
  44105a:	add    BYTE PTR [eax+0x3c00444f],dh
  441060:	dec    edi
  441061:	inc    esp
  441062:	add    BYTE PTR [edi+ecx*2+0x4fb80044],dh
  441069:	inc    esp
  44106a:	add    BYTE PTR [edi+ecx*2+0x4ebc0044],bh
  441071:	inc    esp
  441072:	add    al,al
  441074:	dec    edi
  441075:	inc    esp
  441076:	add    ah,al
  441078:	dec    edi
  441079:	inc    esp
  44107a:	add    BYTE PTR [eax],ah
  44107c:	dec    edi
  44107d:	inc    esp
  44107e:	add    al,cl
  441080:	dec    edi
  441081:	inc    esp
  441082:	add    ah,cl
  441084:	dec    edi
  441085:	inc    esp
  441086:	add    BYTE PTR [edi+ecx*2+0x44],ch
  44108a:	add    al,dl
  44108c:	dec    edi
  44108d:	inc    esp
  44108e:	add    ah,dl
  441090:	dec    edi
  441091:	inc    esp
  441092:	add    al,bl
  441094:	dec    edi
  441095:	inc    esp
  441096:	add    ah,bl
  441098:	dec    edi
  441099:	inc    esp
  44109a:	add    al,ah
  44109c:	dec    edi
  44109d:	inc    esp
  44109e:	add    ah,ah
  4410a0:	dec    edi
  4410a1:	inc    esp
  4410a2:	add    al,ch
  4410a4:	dec    edi
  4410a5:	inc    esp
  4410a6:	add    ah,ch
  4410a8:	dec    edi
  4410a9:	inc    esp
  4410aa:	add    al,dh
  4410ac:	dec    edi
  4410ad:	inc    esp
  4410ae:	add    ah,dh
  4410b0:	dec    edi
  4410b1:	inc    esp
  4410b2:	add    al,bh
  4410b4:	dec    edi
  4410b5:	inc    esp
  4410b6:	add    ah,bh
  4410b8:	dec    edi
  4410b9:	inc    esp
  4410ba:	add    ah,ah
  4410bc:	dec    edi
  4410bd:	inc    esp
  4410be:	add    BYTE PTR [eax],al
  4410c0:	push   eax
  4410c1:	inc    esp
  4410c2:	add    BYTE PTR [eax+edx*2],al
  4410c5:	inc    esp
  4410c6:	add    BYTE PTR [eax],cl
  4410c8:	push   eax
  4410c9:	inc    esp
  4410ca:	add    BYTE PTR [eax+edx*2],cl
  4410cd:	inc    esp
  4410ce:	add    BYTE PTR [eax],dl
  4410d0:	push   eax
  4410d1:	inc    esp
  4410d2:	add    BYTE PTR [eax],al
  4410d4:	dec    esi
  4410d5:	inc    esp
  4410d6:	add    BYTE PTR [eax+edx*2],dl
  4410d9:	inc    esp
  4410da:	add    al,al
  4410dc:	dec    esi
  4410dd:	inc    esp
  4410de:	add    BYTE PTR [eax],bl
  4410e0:	push   eax
  4410e1:	inc    esp
  4410e2:	add    BYTE PTR [eax+edx*2],bl
  4410e5:	inc    esp
  4410e6:	add    BYTE PTR [eax],ah
  4410e8:	push   eax
  4410e9:	inc    esp
  4410ea:	add    BYTE PTR [eax+edx*2],ah
  4410ed:	inc    esp
  4410ee:	add    BYTE PTR [eax],ch
  4410f0:	push   eax
  4410f1:	inc    esp
  4410f2:	add    BYTE PTR [eax+edx*2],cl
  4410f5:	inc    esp
  4410f6:	add    BYTE PTR [eax+edx*2],ch
  4410f9:	inc    esp
  4410fa:	add    BYTE PTR [eax],dh
  4410fc:	push   eax
  4410fd:	inc    esp
  4410fe:	add    BYTE PTR [eax+edx*2],dh
  441101:	inc    esp
  441102:	add    BYTE PTR [eax],bh
  441104:	push   eax
  441105:	inc    esp
  441106:	add    BYTE PTR [eax+edx*2],bh
  441109:	inc    esp
  44110a:	add    BYTE PTR [eax+0x50],al
  44110d:	inc    esp
  44110e:	add    BYTE PTR [eax+edx*2+0x44],al
  441112:	add    BYTE PTR [esi+ecx*2+0x4f780044],ch
  441119:	inc    esp
  44111a:	add    BYTE PTR [eax+0x50],cl
  44111d:	inc    esp
  44111e:	add    BYTE PTR [eax+edx*2+0x44],cl
  441122:	add    BYTE PTR [eax+0x50],dl
  441125:	inc    esp
  441126:	add    BYTE PTR [eax+edx*2+0x44],dl
  44112a:	add    al,ah
  44112c:	dec    ebp
  44112d:	inc    esp
  44112e:	add    BYTE PTR [eax+0x50],bl
  441131:	inc    esp
  441132:	add    BYTE PTR [eax+edx*2+0x44],bl
  441136:	add    BYTE PTR [eax+0x50],ah
  441139:	inc    esp
  44113a:	add    ah,dh
  44113c:	dec    ebp
  44113d:	inc    esp
  44113e:	add    BYTE PTR [eax+edx*2+0x44],ah
  441142:	add    BYTE PTR [eax+0x50],ch
  441145:	inc    esp
  441146:	add    BYTE PTR [esi+ecx*2+0x506c0044],ah
  44114d:	inc    esp
  44114e:	add    BYTE PTR [eax+0x50],dh
  441151:	inc    esp
  441152:	add    ah,ah
  441154:	dec    esi
  441155:	inc    esp
  441156:	add    BYTE PTR [eax+edx*2+0x44],dh
  44115a:	add    BYTE PTR [eax+0x50],bh
  44115d:	inc    esp
  44115e:	add    BYTE PTR [eax+edx*2+0x44],bh
  441162:	add    al,ah
  441164:	dec    esi
  441165:	inc    esp
  441166:	add    al,ah
  441168:	dec    ebp
  441169:	inc    esp
  44116a:	add    BYTE PTR [eax+0x4f],dl
  44116d:	inc    esp
  44116e:	add    BYTE PTR [eax+0x14004450],al
  441174:	push   eax
  441175:	inc    esp
  441176:	add    BYTE PTR [eax],al
  441178:	push   eax
  441179:	inc    esp
  44117a:	add    BYTE PTR [eax+edx*2+0x50880044],al
  441181:	inc    esp
  441182:	add    BYTE PTR [eax+edx*2+0x4e8c0044],cl
  441189:	inc    esp
  44118a:	add    BYTE PTR [eax-0x6bffbbb0],dl
  441190:	push   eax
  441191:	inc    esp
  441192:	add    BYTE PTR [eax-0x63ffbbb0],bl
  441198:	push   eax
  441199:	inc    esp
  44119a:	add    BYTE PTR [eax+edx*2],bh
  44119d:	inc    esp
  44119e:	add    BYTE PTR [eax-0x33ffbbb0],ah
  4411a4:	push   eax
  4411a5:	inc    esp
  4411a6:	add    al,dl
  4411a8:	push   eax
  4411a9:	inc    esp
  4411aa:	add    ah,dl
  4411ac:	push   eax
  4411ad:	inc    esp
  4411ae:	add    al,bl
  4411b0:	push   eax
  4411b1:	inc    esp
  4411b2:	add    ah,cl
  4411b4:	push   eax
  4411b5:	inc    esp
  4411b6:	add    ah,bl
  4411b8:	push   eax
  4411b9:	inc    esp
  4411ba:	add    al,ah
  4411bc:	push   eax
  4411bd:	inc    esp
  4411be:	add    ah,ah
  4411c0:	push   eax
  4411c1:	inc    esp
  4411c2:	add    al,ch
  4411c4:	push   eax
  4411c5:	inc    esp
  4411c6:	add    ah,ch
  4411c8:	push   eax
  4411c9:	inc    esp
  4411ca:	add    al,dh
  4411cc:	push   eax
  4411cd:	inc    esp
  4411ce:	add    ah,dh
  4411d0:	push   eax
  4411d1:	inc    esp
  4411d2:	add    al,bh
  4411d4:	push   eax
  4411d5:	inc    esp
  4411d6:	add    ah,bh
  4411d8:	push   eax
  4411d9:	inc    esp
  4411da:	add    BYTE PTR [eax],al
  4411dc:	push   ecx
  4411dd:	inc    esp
  4411de:	add    BYTE PTR [ecx+edx*2],al
  4411e1:	inc    esp
  4411e2:	add    BYTE PTR [eax],cl
  4411e4:	push   ecx
  4411e5:	inc    esp
  4411e6:	add    BYTE PTR [ecx+edx*2],cl
  4411e9:	inc    esp
  4411ea:	add    BYTE PTR [eax],dl
  4411ec:	push   ecx
  4411ed:	inc    esp
  4411ee:	add    BYTE PTR [ecx+edx*2],dl
  4411f1:	inc    esp
  4411f2:	add    BYTE PTR [eax],bl
  4411f4:	push   ecx
  4411f5:	inc    esp
  4411f6:	add    BYTE PTR [ecx+edx*2],bl
  4411f9:	inc    esp
  4411fa:	add    BYTE PTR [eax],ah
  4411fc:	push   ecx
  4411fd:	inc    esp
  4411fe:	add    BYTE PTR [ecx+edx*2],ah
  441201:	inc    esp
  441202:	add    BYTE PTR [eax],ch
  441204:	push   ecx
  441205:	inc    esp
  441206:	add    BYTE PTR [ecx+edx*2],ch
  441209:	inc    esp
  44120a:	add    BYTE PTR [eax],dh
  44120c:	push   ecx
  44120d:	inc    esp
  44120e:	add    BYTE PTR [ecx+edx*2],dh
  441211:	inc    esp
  441212:	add    BYTE PTR [eax],bh
  441214:	push   ecx
  441215:	inc    esp
  441216:	add    BYTE PTR [ecx+edx*2],bh
  441219:	inc    esp
  44121a:	add    BYTE PTR [eax+0x51],al
  44121d:	inc    esp
  44121e:	add    BYTE PTR [ecx+edx*2+0x44],al
  441222:	add    BYTE PTR [eax+0x51],cl
  441225:	inc    esp
  441226:	add    BYTE PTR [ecx+edx*2+0x44],cl
  44122a:	add    BYTE PTR [eax+0x51],dl
  44122d:	inc    esp
  44122e:	add    al,ch
  441230:	push   eax
  441231:	inc    esp
  441232:	add    BYTE PTR [ecx+edx*2+0x44],dl
  441236:	add    BYTE PTR [eax+0x51],bl
  441239:	inc    esp
  44123a:	add    al,bh
  44123c:	push   eax
  44123d:	inc    esp
  44123e:	add    BYTE PTR [ecx+edx*2+0x44],bl
  441242:	add    BYTE PTR [eax+0x51],ah
  441245:	inc    esp
  441246:	add    BYTE PTR [ecx+edx*2+0x44],ah
  44124a:	add    BYTE PTR [eax+0x51],ch
  44124d:	inc    esp
  44124e:	add    BYTE PTR [ecx+edx*2+0x44],ch
  441252:	add    BYTE PTR [eax+0x51],dh
  441255:	inc    esp
  441256:	add    BYTE PTR [ecx+edx*2+0x44],dh
  44125a:	add    BYTE PTR [eax+0x51],bh
  44125d:	inc    esp
  44125e:	add    BYTE PTR [ecx+edx*2+0x44],bh
  441262:	add    BYTE PTR [eax-0x7bffbbaf],al
  441268:	push   ecx
  441269:	inc    esp
  44126a:	add    BYTE PTR [eax-0x73ffbbaf],cl
  441270:	push   ecx
  441271:	inc    esp
  441272:	add    BYTE PTR [eax+0x4451],dl
  441278:	push   ecx
  441279:	inc    esp
  44127a:	add    BYTE PTR [ecx+edx*2+0x51980044],dl
  441281:	inc    esp
  441282:	add    BYTE PTR [ecx+edx*2+0x51a00044],bl
  441289:	inc    esp
  44128a:	add    BYTE PTR [ecx+edx*2+0x44],cl
  44128e:	add    BYTE PTR [eax-0x5bffbbb0],bh
  441294:	push   ecx
  441295:	inc    esp
  441296:	add    BYTE PTR [eax-0x53ffbbaf],ch
  44129c:	push   ecx
  44129d:	inc    esp
  44129e:	add    ah,ch
  4412a0:	push   eax
  4412a1:	inc    esp
  4412a2:	add    BYTE PTR [eax-0x4bffbbaf],dh
  4412a8:	push   ecx
  4412a9:	inc    esp
  4412aa:	add    BYTE PTR [eax-0x47ffbbb0],dh
  4412b0:	push   ecx
  4412b1:	inc    esp
  4412b2:	add    BYTE PTR [ecx+edx*2+0x50cc0044],bh
  4412b9:	inc    esp
  4412ba:	add    al,al
  4412bc:	push   ecx
  4412bd:	inc    esp
  4412be:	add    BYTE PTR [ecx+edx*2+0x44],dl
  4412c2:	add    BYTE PTR [ecx+edx*2],bh
  4412c5:	inc    esp
  4412c6:	add    BYTE PTR [eax+0x51],dh
  4412c9:	inc    esp
  4412ca:	add    ah,al
  4412cc:	push   ecx
  4412cd:	inc    esp
  4412ce:	add    al,bh
  4412d0:	push   eax
  4412d1:	inc    esp
  4412d2:	add    al,cl
  4412d4:	push   ecx
  4412d5:	inc    esp
  4412d6:	add    BYTE PTR [ecx+edx*2+0x51cc0044],cl
  4412dd:	inc    esp
  4412de:	add    al,dl
  4412e0:	push   ecx
  4412e1:	inc    esp
  4412e2:	add    ah,dl
  4412e4:	push   ecx
  4412e5:	inc    esp
  4412e6:	add    BYTE PTR [ecx+edx*2+0x51540044],cl
  4412ed:	inc    esp
  4412ee:	add    al,bl
  4412f0:	push   ecx
  4412f1:	inc    esp
  4412f2:	add    ah,bl
  4412f4:	push   ecx
  4412f5:	inc    esp
  4412f6:	add    al,ah
  4412f8:	push   ecx
  4412f9:	inc    esp
  4412fa:	add    ah,ah
  4412fc:	push   ecx
  4412fd:	inc    esp
  4412fe:	add    al,ch
  441300:	push   ecx
  441301:	inc    esp
  441302:	add    ah,ch
  441304:	push   ecx
  441305:	inc    esp
  441306:	add    al,dh
  441308:	push   ecx
  441309:	inc    esp
  44130a:	add    ah,dh
  44130c:	push   ecx
  44130d:	inc    esp
  44130e:	add    BYTE PTR [ecx+edx*2+0x50b40044],al
  441315:	inc    esp
  441316:	add    al,bh
  441318:	push   ecx
  441319:	inc    esp
  44131a:	add    ah,bh
  44131c:	push   ecx
  44131d:	inc    esp
  44131e:	add    BYTE PTR [eax],al
  441320:	push   edx
  441321:	inc    esp
  441322:	add    BYTE PTR [edx+edx*2],al
  441325:	inc    esp
  441326:	add    BYTE PTR [eax],cl
  441328:	push   edx
  441329:	inc    esp
  44132a:	add    BYTE PTR [edx+edx*2],cl
  44132d:	inc    esp
  44132e:	add    ah,bl
  441330:	push   ecx
  441331:	inc    esp
  441332:	add    BYTE PTR [eax],dl
  441334:	push   edx
  441335:	inc    esp
  441336:	add    BYTE PTR [edx+edx*2],dl
  441339:	inc    esp
  44133a:	add    BYTE PTR [eax],bl
  44133c:	push   edx
  44133d:	inc    esp
  44133e:	add    BYTE PTR [edx+edx*2],bl
  441341:	inc    esp
  441342:	add    BYTE PTR [eax],ah
  441344:	push   edx
  441345:	inc    esp
  441346:	add    BYTE PTR [edx+edx*2],ah
  441349:	inc    esp
  44134a:	add    BYTE PTR [eax],ch
  44134c:	push   edx
  44134d:	inc    esp
  44134e:	add    BYTE PTR [edx+edx*2],ch
  441351:	inc    esp
  441352:	add    BYTE PTR [ecx+edx*2+0x44],dh
  441356:	add    BYTE PTR [eax],dh
  441358:	push   edx
  441359:	inc    esp
  44135a:	add    BYTE PTR [edx+edx*2],dh
  44135d:	inc    esp
  44135e:	add    BYTE PTR [eax],bh
  441360:	push   edx
  441361:	inc    esp
  441362:	add    BYTE PTR [edx+edx*2],bh
  441365:	inc    esp
  441366:	add    BYTE PTR [eax+0x51],ah
  441369:	inc    esp
  44136a:	add    BYTE PTR [eax+0x52],al
  44136d:	inc    esp
  44136e:	add    BYTE PTR [edx+edx*2+0x44],al
  441372:	add    BYTE PTR [eax+0x52],cl
  441375:	inc    esp
  441376:	add    BYTE PTR [eax+0x1c004451],dl
  44137c:	push   ecx
  44137d:	inc    esp
  44137e:	add    BYTE PTR [eax],dh
  441380:	push   edx
  441381:	inc    esp
  441382:	add    BYTE PTR [edx+edx*2+0x44],cl
  441386:	add    BYTE PTR [eax+0x52],dl
  441389:	inc    esp
  44138a:	add    BYTE PTR [edx+edx*2+0x44],dl
  44138e:	add    BYTE PTR [eax+0x52],bl
  441391:	inc    esp
  441392:	add    BYTE PTR [edx+edx*2+0x44],bl
  441396:	add    BYTE PTR [eax+0x52],ah
  441399:	inc    esp
  44139a:	add    BYTE PTR [eax],cl
  44139c:	push   edx
  44139d:	inc    esp
  44139e:	add    BYTE PTR [edx+edx*2+0x44],ah
  4413a2:	add    BYTE PTR [eax+0x52],ch
  4413a5:	inc    esp
  4413a6:	add    BYTE PTR [edx+edx*2+0x44],ch
  4413aa:	add    BYTE PTR [eax+0x52],dh
  4413ad:	inc    esp
  4413ae:	add    BYTE PTR [edx+edx*2+0x44],dh
  4413b2:	add    BYTE PTR [eax+0x52],bh
  4413b5:	inc    esp
  4413b6:	add    BYTE PTR [edx+edx*2+0x44],bh
  4413ba:	add    BYTE PTR [eax-0x7bffbbae],al
  4413c0:	push   edx
  4413c1:	inc    esp
  4413c2:	add    BYTE PTR [eax-0x73ffbbae],cl
  4413c8:	push   edx
  4413c9:	inc    esp
  4413ca:	add    BYTE PTR [eax-0x6bffbbae],dl
  4413d0:	push   edx
  4413d1:	inc    esp
  4413d2:	add    BYTE PTR [ecx+edx*2],bl
  4413d5:	inc    esp
  4413d6:	add    BYTE PTR [eax+0x52],dh
  4413d9:	inc    esp
  4413da:	add    BYTE PTR [eax-0x63ffbbae],bl
  4413e0:	push   edx
  4413e1:	inc    esp
  4413e2:	add    BYTE PTR [eax-0x5bffbbae],ah
  4413e8:	push   edx
  4413e9:	inc    esp
  4413ea:	add    BYTE PTR [eax+0x24004452],ch
  4413f0:	push   ecx
  4413f1:	inc    esp
  4413f2:	add    BYTE PTR [edx+edx*2+0x52b00044],ch
  4413f9:	inc    esp
  4413fa:	add    BYTE PTR [edx+edx*2+0x52b80044],dh
  441401:	inc    esp
  441402:	add    BYTE PTR [edx+edx*2+0x50ac0044],bh
  441409:	inc    esp
  44140a:	add    al,al
  44140c:	push   edx
  44140d:	inc    esp
  44140e:	add    ah,al
  441410:	push   edx
  441411:	inc    esp
  441412:	add    al,cl
  441414:	push   edx
  441415:	inc    esp
  441416:	add    BYTE PTR [eax+0x52],dl
  441419:	inc    esp
  44141a:	add    ah,cl
  44141c:	push   edx
  44141d:	inc    esp
  44141e:	add    BYTE PTR [edx+edx*2+0x44],ah
  441422:	add    al,dl
  441424:	push   edx
  441425:	inc    esp
  441426:	add    ah,dl
  441428:	push   edx
  441429:	inc    esp
  44142a:	add    al,bl
  44142c:	push   edx
  44142d:	inc    esp
  44142e:	add    ah,bl
  441430:	push   edx
  441431:	inc    esp
  441432:	add    al,ah
  441434:	push   edx
  441435:	inc    esp
  441436:	add    BYTE PTR [edx+edx*2],dl
  441439:	inc    esp
  44143a:	add    ah,bl
  44143c:	push   eax
  44143d:	inc    esp
  44143e:	add    BYTE PTR [eax],ch
  441440:	push   edx
  441441:	inc    esp
  441442:	add    ah,ah
  441444:	push   edx
  441445:	inc    esp
  441446:	add    al,ch
  441448:	push   edx
  441449:	inc    esp
  44144a:	add    ah,ch
  44144c:	push   edx
  44144d:	inc    esp
  44144e:	add    BYTE PTR [edx+edx*2],ah
  441451:	inc    esp
  441452:	add    al,dh
  441454:	push   edx
  441455:	inc    esp
  441456:	add    BYTE PTR [eax+0x52],cl
  441459:	inc    esp
  44145a:	add    ah,dh
  44145c:	push   edx
  44145d:	inc    esp
  44145e:	add    al,bh
  441460:	push   edx
  441461:	inc    esp
  441462:	add    ah,bh
  441464:	push   edx
  441465:	inc    esp
  441466:	add    BYTE PTR [eax],al
  441468:	push   ebx
  441469:	inc    esp
  44146a:	add    BYTE PTR [ebx+edx*2],al
  44146d:	inc    esp
  44146e:	add    BYTE PTR [eax],cl
  441470:	push   ebx
  441471:	inc    esp
  441472:	add    BYTE PTR [ebx+edx*2],cl
  441475:	inc    esp
  441476:	add    BYTE PTR [eax],dl
  441478:	push   ebx
  441479:	inc    esp
  44147a:	add    BYTE PTR [ebx+edx*2],dl
  44147d:	inc    esp
  44147e:	add    BYTE PTR [eax],bl
  441480:	push   ebx
  441481:	inc    esp
  441482:	add    BYTE PTR [ebx+edx*2],bl
  441485:	inc    esp
  441486:	add    BYTE PTR [eax],ah
  441488:	push   ebx
  441489:	inc    esp
  44148a:	add    BYTE PTR [ebx+edx*2],ah
  44148d:	inc    esp
  44148e:	add    BYTE PTR [eax],ch
  441490:	push   ebx
  441491:	inc    esp
  441492:	add    BYTE PTR [ecx+edx*2],al
  441495:	inc    esp
  441496:	add    BYTE PTR [ebx+edx*2],ch
  441499:	inc    esp
  44149a:	add    BYTE PTR [eax],dh
  44149c:	push   ebx
  44149d:	inc    esp
  44149e:	add    BYTE PTR [ebx+edx*2],dh
  4414a1:	inc    esp
  4414a2:	add    BYTE PTR [eax],bh
  4414a4:	push   ebx
  4414a5:	inc    esp
  4414a6:	add    BYTE PTR [ebx+edx*2],bh
  4414a9:	inc    esp
  4414aa:	add    BYTE PTR [eax+0x53],al
  4414ad:	inc    esp
  4414ae:	add    BYTE PTR [eax-0x4bffbbaf],bl
  4414b4:	push   ecx
  4414b5:	inc    esp
  4414b6:	add    BYTE PTR [ebx+edx*2+0x44],al
  4414ba:	add    BYTE PTR [eax+0x53],cl
  4414bd:	inc    esp
  4414be:	add    BYTE PTR [ebx+edx*2+0x44],cl
  4414c2:	add    al,ah
  4414c4:	push   ebx
  4414c5:	inc    esp
  4414c6:	add    ah,ah
  4414c8:	push   ebx
  4414c9:	inc    esp
  4414ca:	add    al,ch
  4414cc:	push   ebx
  4414cd:	inc    esp
  4414ce:	add    ah,ch
  4414d0:	push   ebx
  4414d1:	inc    esp
  4414d2:	add    al,dh
  4414d4:	push   ebx
  4414d5:	inc    esp
  4414d6:	add    ah,dh
  4414d8:	push   ebx
  4414d9:	inc    esp
  4414da:	add    al,bh
  4414dc:	push   ebx
  4414dd:	inc    esp
  4414de:	add    ah,bh
  4414e0:	push   ebx
  4414e1:	inc    esp
  4414e2:	add    BYTE PTR [eax],al
  4414e4:	push   esp
  4414e5:	inc    esp
  4414e6:	add    BYTE PTR [esp+edx*2],al
  4414e9:	inc    esp
  4414ea:	add    BYTE PTR [eax],cl
  4414ec:	push   esp
  4414ed:	inc    esp
  4414ee:	add    BYTE PTR [esp+edx*2],cl
  4414f1:	inc    esp
  4414f2:	add    BYTE PTR [eax],dl
  4414f4:	push   esp
  4414f5:	inc    esp
  4414f6:	add    BYTE PTR [esp+edx*2],dl
  4414f9:	inc    esp
  4414fa:	add    BYTE PTR [eax],bl
  4414fc:	push   esp
  4414fd:	inc    esp
  4414fe:	add    BYTE PTR [esp+edx*2],bl
  441501:	inc    esp
  441502:	add    BYTE PTR [eax],ah
  441504:	push   esp
  441505:	inc    esp
  441506:	add    BYTE PTR [esp+edx*2],ah
  441509:	inc    esp
  44150a:	add    BYTE PTR [eax],ch
  44150c:	push   esp
  44150d:	inc    esp
  44150e:	add    BYTE PTR [esp+edx*2],ch
  441511:	inc    esp
  441512:	add    BYTE PTR [eax],dh
  441514:	push   esp
  441515:	inc    esp
  441516:	add    BYTE PTR [esp+edx*2],dh
  441519:	inc    esp
  44151a:	add    BYTE PTR [eax],bh
  44151c:	push   esp
  44151d:	inc    esp
  44151e:	add    BYTE PTR [esp+edx*2],bh
  441521:	inc    esp
  441522:	add    BYTE PTR [eax+0x54],al
  441525:	inc    esp
  441526:	add    BYTE PTR [esp+edx*2+0x44],al
  44152a:	add    BYTE PTR [esp+edx*2],cl
  44152d:	inc    esp
  44152e:	add    BYTE PTR [eax+0x54],cl
  441531:	inc    esp
  441532:	add    BYTE PTR [esp+edx*2+0x44],cl
  441536:	add    BYTE PTR [eax+0x54],dl
  441539:	inc    esp
  44153a:	add    BYTE PTR [esp+edx*2+0x44],dl
  44153e:	add    BYTE PTR [eax+0x54],bl
  441541:	inc    esp
  441542:	add    BYTE PTR [esp+edx*2+0x44],bl
  441546:	add    ah,ch
  441548:	push   ebx
  441549:	inc    esp
  44154a:	add    BYTE PTR [eax+0x54],ah
  44154d:	inc    esp
  44154e:	add    BYTE PTR [esp+edx*2+0x44],ah
  441552:	add    BYTE PTR [eax+0x54],ah
  441555:	inc    esp
  441556:	add    BYTE PTR [eax+0x54],ch
  441559:	inc    esp
  44155a:	add    BYTE PTR [esp+edx*2+0x44],ch
  44155e:	add    BYTE PTR [eax+0x54],dh
  441561:	inc    esp
  441562:	add    BYTE PTR [esp+edx*2+0x44],dh
  441566:	add    BYTE PTR [eax+0x54],bh
  441569:	inc    esp
  44156a:	add    BYTE PTR [esp+edx*2+0x44],bh
  44156e:	add    BYTE PTR [eax-0x7bffbbac],al
  441574:	push   esp
  441575:	inc    esp
  441576:	add    BYTE PTR [esp+edx*2+0x44],bl
  44157a:	add    BYTE PTR [eax+0x2c004454],cl
  441580:	push   esp
  441581:	inc    esp
  441582:	add    BYTE PTR [esp+edx*2+0x54900044],cl
  441589:	inc    esp
  44158a:	add    BYTE PTR [esp+edx*2+0x54980044],dl
  441591:	inc    esp
  441592:	add    BYTE PTR [esp+edx*2+0x54a00044],bl
  441599:	inc    esp
  44159a:	add    BYTE PTR [esp+edx*2+0x54a80044],ah
  4415a1:	inc    esp
  4415a2:	add    BYTE PTR [esp+edx*2+0x54b00044],ch
  4415a9:	inc    esp
  4415aa:	add    BYTE PTR [esp+edx*2+0x54b80044],dh
  4415b1:	inc    esp
  4415b2:	add    BYTE PTR [esp+edx*2],bh
  4415b5:	inc    esp
  4415b6:	add    BYTE PTR [esp+edx*2+0x54c00044],bh
  4415bd:	inc    esp
  4415be:	add    ah,al
  4415c0:	push   esp
  4415c1:	inc    esp
  4415c2:	add    al,cl
  4415c4:	push   esp
  4415c5:	inc    esp
  4415c6:	add    ah,cl
  4415c8:	push   esp
  4415c9:	inc    esp
  4415ca:	add    al,dl
  4415cc:	push   esp
  4415cd:	inc    esp
  4415ce:	add    BYTE PTR [eax+0x54],ah
  4415d1:	inc    esp
  4415d2:	add    ah,dl
  4415d4:	push   esp
  4415d5:	inc    esp
  4415d6:	add    al,bl
  4415d8:	push   esp
  4415d9:	inc    esp
  4415da:	add    BYTE PTR [eax+0x54],al
  4415dd:	inc    esp
  4415de:	add    BYTE PTR [esp+edx*2],ch
  4415e1:	inc    esp
  4415e2:	add    BYTE PTR [esp+edx*2],dl
  4415e5:	inc    esp
  4415e6:	add    ah,bl
  4415e8:	push   esp
  4415e9:	inc    esp
  4415ea:	add    BYTE PTR [esp+edx*2+0x44],al
  4415ee:	add    al,ah
  4415f0:	push   esp
  4415f1:	inc    esp
  4415f2:	add    BYTE PTR [esp+edx*2+0x44],dl
  4415f6:	add    ah,ah
  4415f8:	push   esp
  4415f9:	inc    esp
  4415fa:	add    al,ch
  4415fc:	push   esp
  4415fd:	inc    esp
  4415fe:	add    ah,ch
  441600:	push   esp
  441601:	inc    esp
  441602:	add    al,dh
  441604:	push   esp
  441605:	inc    esp
  441606:	add    ah,dh
  441608:	push   esp
  441609:	inc    esp
  44160a:	add    al,bh
  44160c:	push   esp
  44160d:	inc    esp
  44160e:	add    ah,cl
  441610:	push   esp
  441611:	inc    esp
  441612:	add    ah,bh
  441614:	push   esp
  441615:	inc    esp
  441616:	add    BYTE PTR [esp+edx*2],al
  441619:	inc    esp
  44161a:	add    ah,dh
  44161c:	push   esp
  44161d:	inc    esp
  44161e:	add    BYTE PTR [eax],al
  441620:	push   ebp
  441621:	inc    esp
  441622:	add    BYTE PTR [edx*2+0x53f80044],al
  441629:	inc    esp
  44162a:	add    BYTE PTR [eax],cl
  44162c:	push   ebp
  44162d:	inc    esp
  44162e:	add    BYTE PTR [edx*2+0x55100044],cl
  441635:	inc    esp
  441636:	add    BYTE PTR [esp+edx*2],cl
  441639:	inc    esp
  44163a:	add    BYTE PTR [edx*2+0x55180044],dl
  441641:	inc    esp
  441642:	add    al,dl
  441644:	push   esp
  441645:	inc    esp
  441646:	add    BYTE PTR [eax+0x7c004454],al
  44164c:	push   esp
  44164d:	inc    esp
  44164e:	add    BYTE PTR [edx*2+0x55200044],bl
  441655:	inc    esp
  441656:	add    BYTE PTR [edx*2+0x54e80044],ah
  44165d:	inc    esp
  44165e:	add    ah,ah
  441660:	push   esp
  441661:	inc    esp
  441662:	add    BYTE PTR [eax],ch
  441664:	push   ebp
  441665:	inc    esp
  441666:	add    BYTE PTR [edx*2+0x55300044],ch
  44166d:	inc    esp
  44166e:	add    BYTE PTR [esp+edx*2+0x44],dh
  441672:	add    BYTE PTR [edx*2+0x55240044],dh
  441679:	inc    esp
  44167a:	add    BYTE PTR [eax],bh
  44167c:	push   ebp
  44167d:	inc    esp
  44167e:	add    BYTE PTR [esp+edx*2],ch
  441681:	inc    esp
  441682:	add    BYTE PTR [esp+edx*2],dl
  441685:	inc    esp
  441686:	add    BYTE PTR [edx*2+0x55000044],bh
  44168d:	inc    esp
  44168e:	add    BYTE PTR [esp+edx*2+0x44],cl
  441692:	add    BYTE PTR [eax+0x55],al
  441695:	inc    esp
  441696:	add    BYTE PTR [eax],dh
  441698:	push   esp
  441699:	inc    esp
  44169a:	add    BYTE PTR [ebp+edx*2+0x44],al
  44169e:	add    BYTE PTR [eax+0x55],cl
  4416a1:	inc    esp
  4416a2:	add    BYTE PTR [ebp+edx*2+0x44],cl
  4416a6:	add    BYTE PTR [eax+0x55],dl
  4416a9:	inc    esp
  4416aa:	add    BYTE PTR [ebp+edx*2+0x44],dl
  4416ae:	add    BYTE PTR [eax+0x55],bl
  4416b1:	inc    esp
  4416b2:	add    BYTE PTR [ebp+edx*2+0x44],bl
  4416b6:	add    BYTE PTR [eax+0x55],ah
  4416b9:	inc    esp
  4416ba:	add    BYTE PTR [ebp+edx*2+0x44],ah
  4416be:	add    BYTE PTR [eax+0x55],ch
  4416c1:	inc    esp
  4416c2:	add    BYTE PTR [ebp+edx*2+0x44],ch
  4416c6:	add    BYTE PTR [eax],bh
  4416c8:	push   esp
  4416c9:	inc    esp
  4416ca:	add    BYTE PTR [eax+0x55],dh
  4416cd:	inc    esp
  4416ce:	add    BYTE PTR [ebp+edx*2+0x44],dh
  4416d2:	add    BYTE PTR [eax+0x54],dh
  4416d5:	inc    esp
  4416d6:	add    BYTE PTR [eax+0x55],bh
  4416d9:	inc    esp
  4416da:	add    BYTE PTR [ebp+edx*2+0x44],bh
  4416de:	add    BYTE PTR [eax-0x7bffbbab],al
  4416e4:	push   ebp
  4416e5:	inc    esp
  4416e6:	add    BYTE PTR [eax-0x73ffbbab],cl
  4416ec:	push   ebp
  4416ed:	inc    esp
  4416ee:	add    BYTE PTR [eax-0x17ffbbab],dl
  4416f4:	push   esp
  4416f5:	inc    esp
  4416f6:	add    BYTE PTR [eax],bh
  4416f8:	push   ebp
  4416f9:	inc    esp
  4416fa:	add    BYTE PTR [ebp+edx*2+0x55980044],dl
  441701:	inc    esp
  441702:	add    BYTE PTR [esp+edx*2],cl
  441705:	inc    esp
  441706:	add    BYTE PTR [eax],bh
  441708:	push   ebp
  441709:	inc    esp
  44170a:	add    BYTE PTR [ebp+edx*2+0x44],bl
  44170e:	add    BYTE PTR [esp+edx*2],bh
  441711:	inc    esp
  441712:	add    BYTE PTR [ebp+edx*2+0x54400044],bl
  441719:	inc    esp
  44171a:	add    BYTE PTR [eax-0x5bffbbab],ah
  441720:	push   ebp
  441721:	inc    esp
  441722:	add    BYTE PTR [eax-0x53ffbbab],ch
  441728:	push   ebp
  441729:	inc    esp
  44172a:	add    BYTE PTR [ebp+edx*2+0x44],cl
  44172e:	add    BYTE PTR [eax-0x4bffbbab],dh
  441734:	push   ebp
  441735:	inc    esp
  441736:	add    ah,bh
  441738:	push   esp
  441739:	inc    esp
  44173a:	add    BYTE PTR [eax+0x55],cl
  44173d:	inc    esp
  44173e:	add    BYTE PTR [eax+0x7c004455],bh
  441744:	push   ebp
  441745:	inc    esp
  441746:	add    BYTE PTR [edx*2+0x55980044],bh
  44174d:	inc    esp
  44174e:	add    BYTE PTR [eax+0x54],bh
  441751:	inc    esp
  441752:	add    BYTE PTR [ebp+edx*2+0x55880044],bh
  441759:	inc    esp
  44175a:	add    al,al
  44175c:	push   ebp
  44175d:	inc    esp
  44175e:	add    ah,al
  441760:	push   ebp
  441761:	inc    esp
  441762:	add    al,cl
  441764:	push   ebp
  441765:	inc    esp
  441766:	add    ah,cl
  441768:	push   ebp
  441769:	inc    esp
  44176a:	add    BYTE PTR [edx*2+0x54080044],bh
  441771:	inc    esp
  441772:	add    BYTE PTR [esp+edx*2+0x55d00044],cl
  441779:	inc    esp
  44177a:	add    BYTE PTR [esp+edx*2],dh
  44177d:	inc    esp
  44177e:	add    BYTE PTR [eax+0x54],al
  441781:	inc    esp
  441782:	add    BYTE PTR [ebp+edx*2+0x54900044],bh
  441789:	inc    esp
  44178a:	add    ah,dl
  44178c:	push   ebp
  44178d:	inc    esp
  44178e:	add    BYTE PTR [esp+edx*2],bh
  441791:	inc    esp
  441792:	add    al,bl
  441794:	push   ebp
  441795:	inc    esp
  441796:	add    ah,bl
  441798:	push   ebp
  441799:	inc    esp
  44179a:	add    BYTE PTR [eax+0x34004455],dl
  4417a0:	push   ebp
  4417a1:	inc    esp
  4417a2:	add    al,ah
  4417a4:	push   ebp
  4417a5:	inc    esp
  4417a6:	add    ah,dl
  4417a8:	push   ebp
  4417a9:	inc    esp
  4417aa:	add    BYTE PTR [eax],al
  4417ac:	push   ebp
  4417ad:	inc    esp
  4417ae:	add    ah,ah
  4417b0:	push   ebp
  4417b1:	inc    esp
  4417b2:	add    al,cl
  4417b4:	push   esp
  4417b5:	inc    esp
  4417b6:	add    al,ch
  4417b8:	push   ebp
  4417b9:	inc    esp
  4417ba:	add    ah,ch
  4417bc:	push   ebp
  4417bd:	inc    esp
  4417be:	add    BYTE PTR [eax],ah
  4417c0:	push   esp
  4417c1:	inc    esp
  4417c2:	add    BYTE PTR [esp+edx*2+0x55f00044],bh
  4417c9:	inc    esp
  4417ca:	add    ah,dh
  4417cc:	push   ebp
  4417cd:	inc    esp
  4417ce:	add    BYTE PTR [edx*2+0x55f80044],cl
  4417d5:	inc    esp
  4417d6:	add    ah,bh
  4417d8:	push   ebp
  4417d9:	inc    esp
  4417da:	add    al,ch
  4417dc:	push   ebp
  4417dd:	inc    esp
  4417de:	add    BYTE PTR [eax],al
  4417e0:	push   esi
  4417e1:	inc    esp
  4417e2:	add    BYTE PTR [eax],cl
  4417e4:	push   esi
  4417e5:	inc    esp
  4417e6:	add    BYTE PTR [esi+edx*2],cl
  4417e9:	inc    esp
  4417ea:	add    BYTE PTR [eax],dl
  4417ec:	push   esi
  4417ed:	inc    esp
  4417ee:	add    BYTE PTR [esi+edx*2],dl
  4417f1:	inc    esp
  4417f2:	add    BYTE PTR [eax],bl
  4417f4:	push   esi
  4417f5:	inc    esp
  4417f6:	add    BYTE PTR [esi+edx*2],bl
  4417f9:	inc    esp
  4417fa:	add    BYTE PTR [eax],dl
  4417fc:	push   esi
  4417fd:	inc    esp
  4417fe:	add    BYTE PTR [eax],ah
  441800:	push   esi
  441801:	inc    esp
  441802:	add    BYTE PTR [esi+edx*2],ah
  441805:	inc    esp
  441806:	add    BYTE PTR [eax],ch
  441808:	push   esi
  441809:	inc    esp
  44180a:	add    BYTE PTR [esi+edx*2],ch
  44180d:	inc    esp
  44180e:	add    BYTE PTR [eax],dh
  441810:	push   esi
  441811:	inc    esp
  441812:	add    BYTE PTR [esi+edx*2],dh
  441815:	inc    esp
  441816:	add    BYTE PTR [eax],bh
  441818:	push   esi
  441819:	inc    esp
  44181a:	add    BYTE PTR [esi+edx*2],bh
  44181d:	inc    esp
  44181e:	add    BYTE PTR [eax+0x56],al
  441821:	inc    esp
  441822:	add    BYTE PTR [esi+edx*2+0x44],al
  441826:	add    BYTE PTR [eax+0x56],cl
  441829:	inc    esp
  44182a:	add    BYTE PTR [esi+edx*2+0x44],cl
  44182e:	add    BYTE PTR [eax+0x56],dl
  441831:	inc    esp
  441832:	add    BYTE PTR [esi+edx*2+0x44],dl
  441836:	add    BYTE PTR [eax+0x56],bl
  441839:	inc    esp
  44183a:	add    BYTE PTR [esi+edx*2+0x44],bl
  44183e:	add    BYTE PTR [eax+0x56],ah
  441841:	inc    esp
  441842:	add    BYTE PTR [esi+edx*2+0x44],ah
  441846:	add    BYTE PTR [eax+0x56],ch
  441849:	inc    esp
  44184a:	add    BYTE PTR [esi+edx*2+0x44],ch
  44184e:	add    BYTE PTR [eax+0x56],dh
  441851:	inc    esp
  441852:	add    BYTE PTR [esi+edx*2+0x44],dh
  441856:	add    BYTE PTR [eax+0x56],bh
  441859:	inc    esp
  44185a:	add    BYTE PTR [esi+edx*2+0x44],bh
  44185e:	add    BYTE PTR [eax+0x34004456],al
  441864:	push   esi
  441865:	inc    esp
  441866:	add    BYTE PTR [esi+edx*2+0x56880044],al
  44186d:	inc    esp
  44186e:	add    BYTE PTR [esi+edx*2+0x56900044],cl
  441875:	inc    esp
  441876:	add    BYTE PTR [esi+edx*2+0x56980044],dl
  44187d:	inc    esp
  44187e:	add    BYTE PTR [esi+edx*2+0x56a00044],bl
  441885:	inc    esp
  441886:	add    BYTE PTR [esi+edx*2+0x56a80044],ah
  44188d:	inc    esp
  44188e:	add    BYTE PTR [esi+edx*2+0x56a40044],ch
  441895:	inc    esp
  441896:	add    BYTE PTR [eax-0x4bffbbaa],dh
  44189c:	push   esi
  44189d:	inc    esp
  44189e:	add    BYTE PTR [eax-0x43ffbbaa],bh
  4418a4:	push   esi
  4418a5:	inc    esp
  4418a6:	add    al,al
  4418a8:	push   esi
  4418a9:	inc    esp
  4418aa:	add    ah,al
  4418ac:	push   esi
  4418ad:	inc    esp
  4418ae:	add    BYTE PTR [esi+edx*2],cl
  4418b1:	inc    esp
  4418b2:	add    al,cl
  4418b4:	push   esi
  4418b5:	inc    esp
  4418b6:	add    ah,cl
  4418b8:	push   esi
  4418b9:	inc    esp
  4418ba:	add    al,dl
  4418bc:	push   esi
  4418bd:	inc    esp
  4418be:	add    ah,dl
  4418c0:	push   esi
  4418c1:	inc    esp
  4418c2:	add    al,bl
  4418c4:	push   esi
  4418c5:	inc    esp
  4418c6:	add    ah,bl
  4418c8:	push   esi
  4418c9:	inc    esp
  4418ca:	add    al,ah
  4418cc:	push   esi
  4418cd:	inc    esp
  4418ce:	add    ah,ah
  4418d0:	push   esi
  4418d1:	inc    esp
  4418d2:	add    BYTE PTR [eax],dh
  4418d4:	push   esi
  4418d5:	inc    esp
  4418d6:	add    al,ch
  4418d8:	push   esi
  4418d9:	inc    esp
  4418da:	add    ah,ch
  4418dc:	push   esi
  4418dd:	inc    esp
  4418de:	add    al,dh
  4418e0:	push   esi
  4418e1:	inc    esp
  4418e2:	add    ah,dh
  4418e4:	push   esi
  4418e5:	inc    esp
  4418e6:	add    al,bh
  4418e8:	push   esi
  4418e9:	inc    esp
  4418ea:	add    ah,bh
  4418ec:	push   esi
  4418ed:	inc    esp
  4418ee:	add    BYTE PTR [eax],al
  4418f0:	push   edi
  4418f1:	inc    esp
  4418f2:	add    BYTE PTR [edi+edx*2],al
  4418f5:	inc    esp
  4418f6:	add    BYTE PTR [eax],cl
  4418f8:	push   edi
  4418f9:	inc    esp
  4418fa:	add    BYTE PTR [edi+edx*2],cl
  4418fd:	inc    esp
  4418fe:	add    BYTE PTR [eax],dl
  441900:	push   edi
  441901:	inc    esp
  441902:	add    BYTE PTR [edi+edx*2],dl
  441905:	inc    esp
  441906:	add    BYTE PTR [eax],bl
  441908:	push   edi
  441909:	inc    esp
  44190a:	add    BYTE PTR [edi+edx*2],bl
  44190d:	inc    esp
  44190e:	add    ah,bh
  441910:	push   esi
  441911:	inc    esp
  441912:	add    BYTE PTR [eax],bh
  441914:	push   esi
  441915:	inc    esp
  441916:	add    BYTE PTR [eax],ah
  441918:	push   edi
  441919:	inc    esp
  44191a:	add    BYTE PTR [edi+edx*2],ah
  44191d:	inc    esp
  44191e:	add    BYTE PTR [eax],ch
  441920:	push   edi
  441921:	inc    esp
  441922:	add    BYTE PTR [edi+edx*2],ch
  441925:	inc    esp
  441926:	add    BYTE PTR [eax+0x30004456],al
  44192c:	push   edi
  44192d:	inc    esp
  44192e:	add    BYTE PTR [esi+edx*2],bh
  441931:	inc    esp
  441932:	add    BYTE PTR [edi+edx*2],dh
  441935:	inc    esp
  441936:	add    BYTE PTR [eax],bh
  441938:	push   edi
  441939:	inc    esp
  44193a:	add    BYTE PTR [edi+edx*2],bh
  44193d:	inc    esp
  44193e:	add    BYTE PTR [eax+0x57],al
  441941:	inc    esp
  441942:	add    BYTE PTR [edi+edx*2+0x44],al
  441946:	add    BYTE PTR [eax+0x57],cl
  441949:	inc    esp
  44194a:	add    BYTE PTR [edi+edx*2+0x44],cl
  44194e:	add    BYTE PTR [eax+0x57],dl
  441951:	inc    esp
  441952:	add    BYTE PTR [esi+edx*2+0x44],dl
  441956:	add    BYTE PTR [edi+edx*2+0x44],dl
  44195a:	add    al,ch
  44195c:	push   esi
  44195d:	inc    esp
  44195e:	add    BYTE PTR [eax+0x57],bl
  441961:	inc    esp
  441962:	add    BYTE PTR [edi+edx*2+0x44],bl
  441966:	add    BYTE PTR [eax+0x57],ah
  441969:	inc    esp
  44196a:	add    BYTE PTR [eax+0x56],cl
  44196d:	inc    esp
  44196e:	add    BYTE PTR [edi+edx*2+0x44],ah
  441972:	add    BYTE PTR [eax+0x56],ah
  441975:	inc    esp
  441976:	add    BYTE PTR [esi+edx*2+0x44],dl
  44197a:	add    BYTE PTR [edi+edx*2],bh
  44197d:	inc    esp
  44197e:	add    BYTE PTR [eax+0x57],ch
  441981:	inc    esp
  441982:	add    BYTE PTR [edi+edx*2+0x44],ch
  441986:	add    BYTE PTR [esi+edx*2+0x44],bh
  44198a:	add    BYTE PTR [eax+0x57],dh
  44198d:	inc    esp
  44198e:	add    BYTE PTR [edi+edx*2+0x44],dh
  441992:	add    BYTE PTR [eax+0x57],bh
  441995:	inc    esp
  441996:	add    BYTE PTR [edi+edx*2+0x44],bh
  44199a:	add    BYTE PTR [eax-0x7bffbba9],al
  4419a0:	push   edi
  4419a1:	inc    esp
  4419a2:	add    BYTE PTR [esi+edx*2+0x57040044],ch
  4419a9:	inc    esp
  4419aa:	add    BYTE PTR [eax+0x5c004457],cl
  4419b0:	push   esi
  4419b1:	inc    esp
  4419b2:	add    ah,dl
  4419b4:	push   esi
  4419b5:	inc    esp
  4419b6:	add    BYTE PTR [edi+edx*2+0x44],bh
  4419ba:	add    BYTE PTR [edi+edx*2+0x57900044],cl
  4419c1:	inc    esp
  4419c2:	add    BYTE PTR [edi+edx*2+0x57980044],dl
  4419c9:	inc    esp
  4419ca:	add    BYTE PTR [edi+edx*2+0x57a00044],bl
  4419d1:	inc    esp
  4419d2:	add    BYTE PTR [edi+edx*2+0x57a80044],ah
  4419d9:	inc    esp
  4419da:	add    BYTE PTR [edi+edx*2+0x57b00044],ch
  4419e1:	inc    esp
  4419e2:	add    BYTE PTR [edi+edx*2+0x57940044],dh
  4419e9:	inc    esp
  4419ea:	add    BYTE PTR [eax-0x43ffbba9],bh
  4419f0:	push   edi
  4419f1:	inc    esp
  4419f2:	add    ah,bh
  4419f4:	push   esi
  4419f5:	inc    esp
  4419f6:	add    BYTE PTR [eax-0x3fffbba9],cl
  4419fc:	push   edi
  4419fd:	inc    esp
  4419fe:	add    ah,cl
  441a00:	push   esi
  441a01:	inc    esp
  441a02:	add    ah,al
  441a04:	push   edi
  441a05:	inc    esp
  441a06:	add    BYTE PTR [edi+edx*2+0x44],ch
  441a0a:	add    al,cl
  441a0c:	push   edi
  441a0d:	inc    esp
  441a0e:	add    ah,cl
  441a10:	push   edi
  441a11:	inc    esp
  441a12:	add    al,dl
  441a14:	push   edi
  441a15:	inc    esp
  441a16:	add    ah,dl
  441a18:	push   edi
  441a19:	inc    esp
  441a1a:	add    al,bl
  441a1c:	push   edi
  441a1d:	inc    esp
  441a1e:	add    BYTE PTR [edi+edx*2+0x44],ah
  441a22:	add    BYTE PTR [eax],dl
  441a24:	push   esi
  441a25:	inc    esp
  441a26:	add    BYTE PTR [esi+edx*2+0x56380044],cl
  441a2d:	inc    esp
  441a2e:	add    ah,bl
  441a30:	push   edi
  441a31:	inc    esp
  441a32:	add    al,ah
  441a34:	push   edi
  441a35:	inc    esp
  441a36:	add    al,bl
  441a38:	push   esi
  441a39:	inc    esp
  441a3a:	add    ah,ah
  441a3c:	push   edi
  441a3d:	inc    esp
  441a3e:	add    al,ch
  441a40:	push   edi
  441a41:	inc    esp
  441a42:	add    ah,ch
  441a44:	push   edi
  441a45:	inc    esp
  441a46:	add    al,dh
  441a48:	push   edi
  441a49:	inc    esp
  441a4a:	add    ah,dh
  441a4c:	push   edi
  441a4d:	inc    esp
  441a4e:	add    BYTE PTR [esi+edx*2+0x44],al
  441a52:	add    ah,dl
  441a54:	push   esi
  441a55:	inc    esp
  441a56:	add    al,bh
  441a58:	push   edi
  441a59:	inc    esp
  441a5a:	add    BYTE PTR [eax-0x3ffbba9],ah
  441a60:	push   edi
  441a61:	inc    esp
  441a62:	add    BYTE PTR [eax],al
  441a64:	pop    eax
  441a65:	inc    esp
  441a66:	add    BYTE PTR [eax+ebx*2],al
  441a69:	inc    esp
  441a6a:	add    BYTE PTR [eax],dl
  441a6c:	push   edi
  441a6d:	inc    esp
  441a6e:	add    BYTE PTR [eax+0x56],ah
  441a71:	inc    esp
  441a72:	add    BYTE PTR [eax+0x57],ah
  441a75:	inc    esp
  441a76:	add    BYTE PTR [eax],cl
  441a78:	pop    eax
  441a79:	inc    esp
  441a7a:	add    BYTE PTR [eax+ebx*2],cl
  441a7d:	inc    esp
  441a7e:	add    BYTE PTR [eax],dl
  441a80:	pop    eax
  441a81:	inc    esp
  441a82:	add    al,ah
  441a84:	push   esi
  441a85:	inc    esp
  441a86:	add    BYTE PTR [eax+ebx*2],dl
  441a89:	inc    esp
  441a8a:	add    BYTE PTR [eax+0x18004456],dh
  441a90:	pop    eax
  441a91:	inc    esp
  441a92:	add    BYTE PTR [eax+0x1c004457],dh
  441a98:	pop    eax
  441a99:	inc    esp
  441a9a:	add    BYTE PTR [eax],ah
  441a9c:	pop    eax
  441a9d:	inc    esp
  441a9e:	add    BYTE PTR [edi+edx*2+0x44],dl
  441aa2:	add    ah,dh
  441aa4:	push   edi
  441aa5:	inc    esp
  441aa6:	add    BYTE PTR [eax+ebx*2],ah
  441aa9:	inc    esp
  441aaa:	add    BYTE PTR [eax],ch
  441aac:	pop    eax
  441aad:	inc    esp
  441aae:	add    BYTE PTR [eax+ebx*2],ch
  441ab1:	inc    esp
  441ab2:	add    BYTE PTR [eax],dh
  441ab4:	pop    eax
  441ab5:	inc    esp
  441ab6:	add    BYTE PTR [eax+ebx*2],dh
  441ab9:	inc    esp
  441aba:	add    BYTE PTR [eax],bh
  441abc:	pop    eax
  441abd:	inc    esp
  441abe:	add    BYTE PTR [eax+ebx*2],bh
  441ac1:	inc    esp
  441ac2:	add    BYTE PTR [eax+0x58],al
  441ac5:	inc    esp
  441ac6:	add    BYTE PTR [edi+edx*2],al
  441ac9:	inc    esp
  441aca:	add    BYTE PTR [eax+ebx*2+0x44],al
  441ace:	add    al,dh
  441ad0:	push   edi
  441ad1:	inc    esp
  441ad2:	add    BYTE PTR [eax+0x58],cl
  441ad5:	inc    esp
  441ad6:	add    BYTE PTR [eax],cl
  441ad8:	push   esi
  441ad9:	inc    esp
  441ada:	add    BYTE PTR [eax+ebx*2+0x44],cl
  441ade:	add    BYTE PTR [eax+0x58],dl
  441ae1:	inc    esp
  441ae2:	add    BYTE PTR [eax+ebx*2+0x44],dl
  441ae6:	add    BYTE PTR [eax+0x58],bl
  441ae9:	inc    esp
  441aea:	add    BYTE PTR [eax],bh
  441aec:	push   edi
  441aed:	inc    esp
  441aee:	add    BYTE PTR [eax-0x63ffbba9],ah
  441af4:	push   esi
  441af5:	inc    esp
  441af6:	add    BYTE PTR [eax+ebx*2+0x44],bl
  441afa:	add    BYTE PTR [eax+0x58],ah
  441afd:	inc    esp
  441afe:	add    BYTE PTR [eax+ebx*2+0x44],ah
  441b02:	add    BYTE PTR [eax-0x7bffbbad],al
  441b08:	push   ebx
  441b09:	inc    esp
  441b0a:	add    BYTE PTR [eax-0x73ffbbad],cl
  441b10:	push   ebx
  441b11:	inc    esp
  441b12:	add    BYTE PTR [eax-0x6bffbbad],dl
  441b18:	push   ebx
  441b19:	inc    esp
  441b1a:	add    BYTE PTR [eax-0x67ffbbad],bl
  441b20:	push   ebx
  441b21:	inc    esp
  441b22:	add    BYTE PTR [ebx+edx*2+0x539c0044],al
  441b29:	inc    esp
  441b2a:	add    BYTE PTR [eax-0x5fffbbad],bl
  441b30:	push   ebx
  441b31:	inc    esp
  441b32:	add    BYTE PTR [ebx+edx*2+0x53a80044],ah
  441b39:	inc    esp
  441b3a:	add    BYTE PTR [ebx+edx*2+0x53ac0044],cl
  441b41:	inc    esp
  441b42:	add    BYTE PTR [eax-0x4fffbbad],ch
  441b48:	push   ebx
  441b49:	inc    esp
  441b4a:	add    BYTE PTR [ebx+edx*2+0x53800044],ah
  441b51:	inc    esp
  441b52:	add    BYTE PTR [ebx+edx*2+0x53b80044],dh
  441b59:	inc    esp
  441b5a:	add    BYTE PTR [eax-0x73ffbbad],cl
  441b60:	push   ebx
  441b61:	inc    esp
  441b62:	add    BYTE PTR [ebx+edx*2+0x53800044],ch
  441b69:	inc    esp
  441b6a:	add    BYTE PTR [eax-0x6fffbbad],bh
  441b70:	push   ebx
  441b71:	inc    esp
  441b72:	add    BYTE PTR [ebx+edx*2+0x53bc0044],ch
  441b79:	inc    esp
  441b7a:	add    BYTE PTR [ebx+edx*2+0x53a00044],cl
  441b81:	inc    esp
  441b82:	add    al,al
  441b84:	push   ebx
  441b85:	inc    esp
  441b86:	add    BYTE PTR [ebx+edx*2+0x53940044],bh
  441b8d:	inc    esp
  441b8e:	add    ah,al
  441b90:	push   ebx
  441b91:	inc    esp
  441b92:	add    BYTE PTR [eax-0x3bffbbad],dh
  441b98:	push   ebx
  441b99:	inc    esp
  441b9a:	add    BYTE PTR [eax-0x5fffbbad],cl
  441ba0:	push   ebx
  441ba1:	inc    esp
  441ba2:	add    BYTE PTR [eax-0x7fffbbad],ch
  441ba8:	push   ebx
  441ba9:	inc    esp
  441baa:	add    BYTE PTR [ebx+edx*2+0x538c0044],cl
  441bb1:	inc    esp
  441bb2:	add    BYTE PTR [eax-0x77ffbbad],ch
  441bb8:	push   ebx
  441bb9:	inc    esp
  441bba:	add    BYTE PTR [ebx+edx*2+0x538c0044],dh
  441bc1:	inc    esp
  441bc2:	add    BYTE PTR [eax-0x4bffbbad],bh
  441bc8:	push   ebx
  441bc9:	inc    esp
  441bca:	add    BYTE PTR [ebx+edx*2+0x53c40044],ch
  441bd1:	inc    esp
  441bd2:	add    BYTE PTR [ebx+edx*2+0x53ac0044],bl
  441bd9:	inc    esp
  441bda:	add    al,cl
  441bdc:	push   ebx
  441bdd:	inc    esp
  441bde:	add    BYTE PTR [ebx+edx*2+0x539c0044],bh
  441be5:	inc    esp
  441be6:	add    BYTE PTR [ebx+edx*2+0x53a80044],bh
  441bed:	inc    esp
  441bee:	add    BYTE PTR [ebx+edx*2+0x53cc0044],ah
  441bf5:	inc    esp
  441bf6:	add    BYTE PTR [eax-0x63ffbbad],dl
  441bfc:	push   ebx
  441bfd:	inc    esp
  441bfe:	add    BYTE PTR [ebx+edx*2+0x53b00044],cl
  441c05:	inc    esp
  441c06:	add    BYTE PTR [ebx+edx*2+0x53840044],dh
  441c0d:	inc    esp
  441c0e:	add    BYTE PTR [eax-0x3fffbbad],al
  441c14:	push   ebx
  441c15:	inc    esp
  441c16:	add    al,cl
  441c18:	push   ebx
  441c19:	inc    esp
  441c1a:	add    BYTE PTR [eax-0x43ffbbad],al
  441c20:	push   ebx
  441c21:	inc    esp
  441c22:	add    BYTE PTR [ebx+edx*2+0x53a80044],dl
  441c29:	inc    esp
  441c2a:	add    al,dl
  441c2c:	push   ebx
  441c2d:	inc    esp
  441c2e:	add    al,cl
  441c30:	push   ebx
  441c31:	inc    esp
  441c32:	add    BYTE PTR [eax-0x6bffbbad],ah
  441c38:	push   ebx
  441c39:	inc    esp
  441c3a:	add    BYTE PTR [ebx+edx*2+0x53980044],bh
  441c41:	inc    esp
  441c42:	add    BYTE PTR [eax-0x4bffbbad],cl
  441c48:	push   ebx
  441c49:	inc    esp
  441c4a:	add    BYTE PTR [eax-0x7bffbbad],dh
  441c50:	push   ebx
  441c51:	inc    esp
  441c52:	add    BYTE PTR [ebx+edx*2+0x53800044],dl
  441c59:	inc    esp
  441c5a:	add    al,dl
  441c5c:	push   ebx
  441c5d:	inc    esp
  441c5e:	add    BYTE PTR [eax-0x77ffbbad],dh
  441c64:	push   ebx
  441c65:	inc    esp
  441c66:	add    BYTE PTR [eax-0x6bffbbad],bl
  441c6c:	push   ebx
  441c6d:	inc    esp
  441c6e:	add    BYTE PTR [eax-0x4fffbbad],dh
  441c74:	push   ebx
  441c75:	inc    esp
  441c76:	add    BYTE PTR [eax-0x37ffbbad],bh
  441c7c:	push   ebx
  441c7d:	inc    esp
  441c7e:	add    al,dl
  441c80:	push   ebx
  441c81:	inc    esp
  441c82:	add    BYTE PTR [eax-0x63ffbbad],al
  441c88:	push   ebx
  441c89:	inc    esp
  441c8a:	add    ah,cl
  441c8c:	push   ebx
  441c8d:	inc    esp
  441c8e:	add    BYTE PTR [eax-0x77ffbbad],dl
  441c94:	push   ebx
  441c95:	inc    esp
  441c96:	add    BYTE PTR [ebx+edx*2+0x53cc0044],dl
  441c9d:	inc    esp
  441c9e:	add    BYTE PTR [eax-0x7bffbbad],bh
  441ca4:	push   ebx
  441ca5:	inc    esp
  441ca6:	add    BYTE PTR [eax-0x37ffbbad],dl
  441cac:	push   ebx
  441cad:	inc    esp
  441cae:	add    BYTE PTR [ebx+edx*2+0x53940044],cl
  441cb5:	inc    esp
  441cb6:	add    BYTE PTR [eax-0x33ffbbad],dl
  441cbc:	push   ebx
  441cbd:	inc    esp
  441cbe:	add    BYTE PTR [ebx+edx*2+0x53980044],al
  441cc5:	inc    esp
  441cc6:	add    BYTE PTR [ebx+edx*2+0x53840044],dl
  441ccd:	inc    esp
  441cce:	add    BYTE PTR [eax-0x63ffbbad],ch
  441cd4:	push   ebx
  441cd5:	inc    esp
  441cd6:	add    al,dl
  441cd8:	push   ebx
  441cd9:	inc    esp
  441cda:	add    BYTE PTR [ebx+edx*2+0x53c40044],bh
  441ce1:	inc    esp
  441ce2:	add    ah,cl
  441ce4:	push   ebx
  441ce5:	inc    esp
  441ce6:	add    BYTE PTR [eax-0x43ffbbad],dh
  441cec:	push   ebx
  441ced:	inc    esp
  441cee:	add    BYTE PTR [eax-0x43ffbbad],cl
  441cf4:	push   ebx
  441cf5:	inc    esp
  441cf6:	add    BYTE PTR [ebx+edx*2+0x53ac0044],ah
  441cfd:	inc    esp
  441cfe:	add    al,dl
  441d00:	push   ebx
  441d01:	inc    esp
  441d02:	add    BYTE PTR [eax-0x37ffbbad],dh
  441d08:	push   ebx
  441d09:	inc    esp
  441d0a:	add    ah,cl
  441d0c:	push   ebx
  441d0d:	inc    esp
  441d0e:	add    BYTE PTR [ebx+edx*2+0x53c00044],cl
  441d15:	inc    esp
  441d16:	add    BYTE PTR [ebx+edx*2+0x53900044],dl
  441d1d:	inc    esp
  441d1e:	add    ah,cl
  441d20:	push   ebx
  441d21:	inc    esp
  441d22:	add    BYTE PTR [ebx+edx*2+0x53a00044],cl
  441d29:	inc    esp
  441d2a:	add    BYTE PTR [ebx+edx*2+0x53900044],cl
  441d31:	inc    esp
  441d32:	add    BYTE PTR [eax-0x4bffbbad],cl
  441d38:	push   ebx
  441d39:	inc    esp
  441d3a:	add    ah,al
  441d3c:	push   ebx
  441d3d:	inc    esp
  441d3e:	add    BYTE PTR [eax-0x6bffbbad],cl
  441d44:	push   ebx
  441d45:	inc    esp
  441d46:	add    BYTE PTR [eax-0x7fffbbad],ch
  441d4c:	push   ebx
  441d4d:	inc    esp
  441d4e:	add    BYTE PTR [eax-0x43ffbbad],bh
  441d54:	push   ebx
  441d55:	inc    esp
  441d56:	add    ah,cl
  441d58:	push   ebx
  441d59:	inc    esp
  441d5a:	add    al,dl
  441d5c:	push   ebx
  441d5d:	inc    esp
  441d5e:	add    BYTE PTR [ebx+edx*2+0x53c80044],dl
  441d65:	inc    esp
  441d66:	add    BYTE PTR [ebx+edx*2+0x53880044],dh
  441d6d:	inc    esp
  441d6e:	add    BYTE PTR [ebx+edx*2+0x53bc0044],dh
  441d75:	inc    esp
  441d76:	add    BYTE PTR [eax-0x43ffbbad],dh
  441d7c:	push   ebx
  441d7d:	inc    esp
  441d7e:	add    al,dl
  441d80:	push   ebx
  441d81:	inc    esp
  441d82:	add    BYTE PTR [ebx+edx*2+0x53980044],ch
  441d89:	inc    esp
  441d8a:	add    BYTE PTR [ebx+edx*2+0x53d00044],bh
  441d91:	inc    esp
  441d92:	add    ah,cl
  441d94:	push   ebx
  441d95:	inc    esp
  441d96:	add    al,al
  441d98:	push   ebx
  441d99:	inc    esp
  441d9a:	add    BYTE PTR [ebx+edx*2+0x53880044],bl
  441da1:	inc    esp
  441da2:	add    BYTE PTR [ebx+edx*2+0x53940044],cl
  441da9:	inc    esp
  441daa:	add    ah,al
  441dac:	push   ebx
  441dad:	inc    esp
  441dae:	add    BYTE PTR [ebx+edx*2+0x53c00044],bl
  441db5:	inc    esp
  441db6:	add    BYTE PTR [eax-0x43ffbbad],ch
  441dbc:	push   ebx
  441dbd:	inc    esp
  441dbe:	add    BYTE PTR [eax-0x5bffbbad],dl
  441dc4:	push   ebx
  441dc5:	inc    esp
  441dc6:	add    BYTE PTR [eax-0x4bffbbad],dl
  441dcc:	push   ebx
  441dcd:	inc    esp
  441dce:	add    BYTE PTR [eax-0x7bffbbad],dl
  441dd4:	push   ebx
  441dd5:	inc    esp
  441dd6:	add    ah,cl
  441dd8:	push   ebx
  441dd9:	inc    esp
  441dda:	add    BYTE PTR [ebx+edx*2+0x53800044],ah
  441de1:	inc    esp
  441de2:	add    BYTE PTR [eax-0x5fffbbad],dh
  441de8:	push   ebx
  441de9:	inc    esp
  441dea:	add    BYTE PTR [ebx+edx*2+0x53980044],ch
  441df1:	inc    esp
  441df2:	add    ah,al
  441df4:	push   ebx
  441df5:	inc    esp
  441df6:	add    BYTE PTR [ebx+edx*2+0x53d00044],bh
  441dfd:	inc    esp
  441dfe:	add    al,dl
  441e00:	push   ebx
  441e01:	inc    esp
  441e02:	add    BYTE PTR [eax-0x43ffbbad],dh
  441e08:	push   ebx
  441e09:	inc    esp
  441e0a:	add    BYTE PTR [eax-0x53ffbbad],cl
  441e10:	push   ebx
  441e11:	inc    esp
  441e12:	add    BYTE PTR [eax-0x7fffbbad],dl
  441e18:	push   ebx
  441e19:	inc    esp
  441e1a:	add    al,dl
  441e1c:	push   ebx
  441e1d:	inc    esp
  441e1e:	add    al,dl
  441e20:	push   ebx
  441e21:	inc    esp
  441e22:	add    BYTE PTR [eax+ebx*2+0x44],ch
  441e26:	add    BYTE PTR [eax+0x58],dh
  441e29:	inc    esp
  441e2a:	add    BYTE PTR [eax+ebx*2+0x44],dh
  441e2e:	add    BYTE PTR [eax+0x58],bh
  441e31:	inc    esp
  441e32:	add    BYTE PTR [eax+ebx*2+0x44],bh
  441e36:	add    BYTE PTR [eax-0x7bffbba8],al
  441e3c:	pop    eax
  441e3d:	inc    esp
  441e3e:	add    BYTE PTR [eax-0x73ffbba8],cl
  441e44:	pop    eax
  441e45:	inc    esp
  441e46:	add    BYTE PTR [eax-0x6fffbba8],dl
  441e4c:	pop    eax
  441e4d:	inc    esp
  441e4e:	add    BYTE PTR [eax+ebx*2+0x58940044],dl
  441e55:	inc    esp
  441e56:	add    BYTE PTR [eax-0x63ffbba8],bl
  441e5c:	pop    eax
  441e5d:	inc    esp
  441e5e:	add    BYTE PTR [eax-0x5bffbba8],ah
  441e64:	pop    eax
  441e65:	inc    esp
  441e66:	add    BYTE PTR [eax-0x53ffbba8],ch
  441e6c:	pop    eax
  441e6d:	inc    esp
  441e6e:	add    BYTE PTR [eax-0x4bffbba8],dh
  441e74:	pop    eax
  441e75:	inc    esp
  441e76:	add    BYTE PTR [eax-0x43ffbba8],bh
  441e7c:	pop    eax
  441e7d:	inc    esp
  441e7e:	add    BYTE PTR [eax+ebx*2+0x58c00044],ah
  441e85:	inc    esp
  441e86:	add    ah,al
  441e88:	pop    eax
  441e89:	inc    esp
  441e8a:	add    al,cl
  441e8c:	pop    eax
  441e8d:	inc    esp
  441e8e:	add    ah,cl
  441e90:	pop    eax
  441e91:	inc    esp
  441e92:	add    al,dl
  441e94:	pop    eax
  441e95:	inc    esp
  441e96:	add    ah,dl
  441e98:	pop    eax
  441e99:	inc    esp
  441e9a:	add    al,bl
  441e9c:	pop    eax
  441e9d:	inc    esp
  441e9e:	add    ah,bl
  441ea0:	pop    eax
  441ea1:	inc    esp
  441ea2:	add    al,ah
  441ea4:	pop    eax
  441ea5:	inc    esp
  441ea6:	add    ah,ah
  441ea8:	pop    eax
  441ea9:	inc    esp
  441eaa:	add    al,ch
  441eac:	pop    eax
  441ead:	inc    esp
  441eae:	add    BYTE PTR [eax+0x78004458],bh
  441eb4:	pop    eax
  441eb5:	inc    esp
  441eb6:	add    ah,ch
  441eb8:	pop    eax
  441eb9:	inc    esp
  441eba:	add    al,cl
  441ebc:	pop    eax
  441ebd:	inc    esp
  441ebe:	add    al,al
  441ec0:	pop    eax
  441ec1:	inc    esp
  441ec2:	add    al,dh
  441ec4:	pop    eax
  441ec5:	inc    esp
  441ec6:	add    ah,dh
  441ec8:	pop    eax
  441ec9:	inc    esp
  441eca:	add    al,bh
  441ecc:	pop    eax
  441ecd:	inc    esp
  441ece:	add    ah,bh
  441ed0:	pop    eax
  441ed1:	inc    esp
  441ed2:	add    BYTE PTR [eax],al
  441ed4:	pop    ecx
  441ed5:	inc    esp
  441ed6:	add    BYTE PTR [ecx+ebx*2],al
  441ed9:	inc    esp
  441eda:	add    al,ah
  441edc:	pop    eax
  441edd:	inc    esp
  441ede:	add    BYTE PTR [eax],cl
  441ee0:	pop    ecx
  441ee1:	inc    esp
  441ee2:	add    BYTE PTR [eax+0x58],dh
  441ee5:	inc    esp
  441ee6:	add    BYTE PTR [eax+0x7c004458],cl
  441eec:	pop    eax
  441eed:	inc    esp
  441eee:	add    ah,ah
  441ef0:	pop    eax
  441ef1:	inc    esp
  441ef2:	add    BYTE PTR [eax+ebx*2+0x590c0044],bl
  441ef9:	inc    esp
  441efa:	add    al,dh
  441efc:	pop    eax
  441efd:	inc    esp
  441efe:	add    BYTE PTR [eax],dl
  441f00:	pop    ecx
  441f01:	inc    esp
  441f02:	add    BYTE PTR [eax+ebx*2+0x58c00044],ah
  441f09:	inc    esp
  441f0a:	add    BYTE PTR [ecx+ebx*2],dl
  441f0d:	inc    esp
  441f0e:	add    BYTE PTR [eax+0x58],dh
  441f11:	inc    esp
  441f12:	add    BYTE PTR [eax],bl
  441f14:	pop    ecx
  441f15:	inc    esp
  441f16:	add    BYTE PTR [ecx+ebx*2],bl
  441f19:	inc    esp
  441f1a:	add    BYTE PTR [eax],ah
  441f1c:	pop    ecx
  441f1d:	inc    esp
  441f1e:	add    BYTE PTR [ecx+ebx*2],ah
  441f21:	inc    esp
  441f22:	add    BYTE PTR [eax],bl
  441f24:	pop    ecx
  441f25:	inc    esp
  441f26:	add    ah,ah
  441f28:	pop    eax
  441f29:	inc    esp
  441f2a:	add    BYTE PTR [eax],ch
  441f2c:	pop    ecx
  441f2d:	inc    esp
  441f2e:	add    ah,bh
  441f30:	pop    eax
  441f31:	inc    esp
  441f32:	add    BYTE PTR [eax+ebx*2+0x44],dh
  441f36:	add    BYTE PTR [eax+ebx*2+0x592c0044],dh
  441f3d:	inc    esp
  441f3e:	add    BYTE PTR [eax],dh
  441f40:	pop    ecx
  441f41:	inc    esp
  441f42:	add    BYTE PTR [ecx+ebx*2],ch
  441f45:	inc    esp
  441f46:	add    BYTE PTR [ecx+ebx*2],dl
  441f49:	inc    esp
  441f4a:	add    BYTE PTR [ecx+ebx*2],dh
  441f4d:	inc    esp
  441f4e:	add    BYTE PTR [ecx+ebx*2],ch
  441f51:	inc    esp
  441f52:	add    BYTE PTR [eax+ebx*2+0x58740044],ch
  441f59:	inc    esp
  441f5a:	add    BYTE PTR [eax+ebx*2+0x59380044],dh
  441f61:	inc    esp
  441f62:	add    BYTE PTR [eax],bl
  441f64:	pop    ecx
  441f65:	inc    esp
  441f66:	add    BYTE PTR [eax],al
  441f68:	pop    ecx
  441f69:	inc    esp
  441f6a:	add    BYTE PTR [eax-0x53ffbba8],ah
  441f70:	pop    eax
  441f71:	inc    esp
  441f72:	add    BYTE PTR [ecx+ebx*2],bh
  441f75:	inc    esp
  441f76:	add    al,cl
  441f78:	pop    eax
  441f79:	inc    esp
  441f7a:	add    BYTE PTR [eax+ebx*2+0x58f40044],ch
  441f81:	inc    esp
  441f82:	add    ah,ch
  441f84:	pop    eax
  441f85:	inc    esp
  441f86:	add    BYTE PTR [ecx+ebx*2],ch
  441f89:	inc    esp
  441f8a:	add    BYTE PTR [eax+0x59],al
  441f8d:	inc    esp
  441f8e:	add    BYTE PTR [ecx+ebx*2+0x44],al
  441f92:	add    BYTE PTR [eax+0x59],cl
  441f95:	inc    esp
  441f96:	add    BYTE PTR [ecx+ebx*2+0x44],cl
  441f9a:	add    BYTE PTR [eax],ah
  441f9c:	pop    ecx
  441f9d:	inc    esp
  441f9e:	add    BYTE PTR [eax+ebx*2+0x58ac0044],ah
  441fa5:	inc    esp
  441fa6:	add    al,bl
  441fa8:	pop    eax
  441fa9:	inc    esp
  441faa:	add    BYTE PTR [eax+0x59],dl
  441fad:	inc    esp
  441fae:	add    BYTE PTR [ecx+ebx*2+0x44],dl
  441fb2:	add    BYTE PTR [eax],cl
  441fb4:	pop    ecx
  441fb5:	inc    esp
  441fb6:	add    BYTE PTR [eax+0x7c004458],bh
  441fbc:	pop    eax
  441fbd:	inc    esp
  441fbe:	add    al,bh
  441fc0:	pop    eax
  441fc1:	inc    esp
  441fc2:	add    BYTE PTR [eax],ah
  441fc4:	pop    ecx
  441fc5:	inc    esp
  441fc6:	add    al,cl
  441fc8:	pop    eax
  441fc9:	inc    esp
  441fca:	add    BYTE PTR [ecx+ebx*2],al
  441fcd:	inc    esp
  441fce:	add    BYTE PTR [eax+ebx*2+0x590c0044],ah
  441fd5:	inc    esp
  441fd6:	add    BYTE PTR [eax+ebx*2+0x58940044],ch
  441fdd:	inc    esp
  441fde:	add    BYTE PTR [ecx+ebx*2+0x44],dl
  441fe2:	add    BYTE PTR [eax],cl
  441fe4:	pop    ecx
  441fe5:	inc    esp
  441fe6:	add    ah,al
  441fe8:	pop    eax
  441fe9:	inc    esp
  441fea:	add    ah,al
  441fec:	pop    eax
  441fed:	inc    esp
  441fee:	add    ah,dh
  441ff0:	pop    eax
  441ff1:	inc    esp
  441ff2:	add    al,al
  441ff4:	pop    eax
  441ff5:	inc    esp
  441ff6:	add    BYTE PTR [eax+0x58],dh
  441ff9:	inc    esp
  441ffa:	add    BYTE PTR [eax+ebx*2+0x58740044],ah
  442001:	inc    esp
  442002:	add    BYTE PTR [ecx+ebx*2+0x44],dl
  442006:	add    BYTE PTR [eax+0x59],bl
  442009:	inc    esp
  44200a:	add    BYTE PTR [eax+0x58],dh
  44200d:	inc    esp
  44200e:	add    BYTE PTR [eax+ebx*2+0x58b00044],ch
  442015:	inc    esp
  442016:	add    BYTE PTR [eax+ebx*2+0x59480044],dl
  44201d:	inc    esp
  44201e:	add    BYTE PTR [eax+ebx*2+0x44],ch
  442022:	add    BYTE PTR [ecx+ebx*2+0x44],bl
  442026:	add    BYTE PTR [eax+0x59],ah
  442029:	inc    esp
  44202a:	add    BYTE PTR [eax+0x24004458],cl
  442030:	pop    ecx
  442031:	inc    esp
  442032:	add    ah,ah
  442034:	pop    eax
  442035:	inc    esp
  442036:	add    BYTE PTR [eax+ebx*2+0x59640044],bl
  44203d:	inc    esp
  44203e:	add    BYTE PTR [eax+ebx*2+0x44],dh
  442042:	add    BYTE PTR [eax+0x74004458],cl
  442048:	pop    eax
  442049:	inc    esp
  44204a:	add    BYTE PTR [eax+ebx*2+0x58fc0044],al
  442051:	inc    esp
  442052:	add    BYTE PTR [ecx+ebx*2+0x44],cl
  442056:	add    al,cl
  442058:	pop    eax
  442059:	inc    esp
  44205a:	add    al,al
  44205c:	pop    eax
  44205d:	inc    esp
  44205e:	add    al,bl
  442060:	pop    eax
  442061:	inc    esp
  442062:	add    BYTE PTR [ecx+ebx*2],bh
  442065:	inc    esp
  442066:	add    BYTE PTR [eax+ebx*2+0x58a00044],ch
  44206d:	inc    esp
  44206e:	add    BYTE PTR [eax+0x68004458],cl
  442074:	pop    ecx
  442075:	inc    esp
  442076:	add    al,bh
  442078:	pop    eax
  442079:	inc    esp
  44207a:	add    ah,bh
  44207c:	pop    eax
  44207d:	inc    esp
  44207e:	add    BYTE PTR [eax+ebx*2+0x58b00044],bh
  442085:	inc    esp
  442086:	add    ah,ah
  442088:	pop    eax
  442089:	inc    esp
  44208a:	add    BYTE PTR [eax],dh
  44208c:	pop    ecx
  44208d:	inc    esp
  44208e:	add    BYTE PTR [eax+0x6c004458],al
  442094:	pop    ecx
  442095:	inc    esp
  442096:	add    BYTE PTR [ecx+ebx*2],al
  442099:	inc    esp
  44209a:	add    BYTE PTR [eax+0x59],dh
  44209d:	inc    esp
  44209e:	add    ah,ah
  4420a0:	pop    eax
  4420a1:	inc    esp
  4420a2:	add    BYTE PTR [eax],bh
  4420a4:	pop    ecx
  4420a5:	inc    esp
  4420a6:	add    BYTE PTR [eax+ebx*2+0x58fc0044],dl
  4420ad:	inc    esp
  4420ae:	add    ah,bh
  4420b0:	pop    eax
  4420b1:	inc    esp
  4420b2:	add    BYTE PTR [eax-0x43ffbba8],al
  4420b8:	pop    eax
  4420b9:	inc    esp
  4420ba:	add    BYTE PTR [ecx+ebx*2+0x44],dh
  4420be:	add    BYTE PTR [eax+ebx*2+0x44],ch
  4420c2:	add    BYTE PTR [eax+0x59],bh
  4420c5:	inc    esp
  4420c6:	add    BYTE PTR [ecx+ebx*2],bl
  4420c9:	inc    esp
  4420ca:	add    ah,ch
  4420cc:	pop    eax
  4420cd:	inc    esp
  4420ce:	add    BYTE PTR [eax+0x59],cl
  4420d1:	inc    esp
  4420d2:	add    BYTE PTR [ecx+ebx*2+0x44],al
  4420d6:	add    BYTE PTR [ecx+ebx*2+0x44],dl
  4420da:	add    BYTE PTR [ecx+ebx*2+0x44],cl
  4420de:	add    BYTE PTR [ecx+ebx*2],dh
  4420e1:	inc    esp
  4420e2:	add    al,ah
  4420e4:	pop    eax
  4420e5:	inc    esp
  4420e6:	add    BYTE PTR [eax+0x59],bl
  4420e9:	inc    esp
  4420ea:	add    BYTE PTR [eax-0x3ffbba8],ch
  4420f0:	pop    eax
  4420f1:	inc    esp
  4420f2:	add    BYTE PTR [ecx+ebx*2+0x44],bh
  4420f6:	add    BYTE PTR [eax-0x3bffbba8],bl
  4420fc:	pop    eax
  4420fd:	inc    esp
  4420fe:	add    BYTE PTR [eax+0x14004458],bl
  442104:	pop    ecx
  442105:	inc    esp
  442106:	add    BYTE PTR [eax+ebx*2+0x44],bh
  44210a:	add    BYTE PTR [eax+0x59],al
  44210d:	inc    esp
  44210e:	add    al,ch
  442110:	pop    eax
  442111:	inc    esp
  442112:	add    BYTE PTR [eax+0x58],dh
  442115:	inc    esp
  442116:	add    BYTE PTR [eax+0x4c004459],al
  44211c:	pop    ecx
  44211d:	inc    esp
  44211e:	add    ah,al
  442120:	pop    eax
  442121:	inc    esp
  442122:	add    BYTE PTR [ecx+ebx*2+0x44],ah
  442126:	add    BYTE PTR [ecx+ebx*2],bh
  442129:	inc    esp
  44212a:	add    BYTE PTR [ecx+ebx*2],cl
  44212d:	inc    esp
  44212e:	add    BYTE PTR [eax-0x53ffbba8],cl
  442134:	pop    eax
  442135:	inc    esp
  442136:	add    ah,dh
  442138:	pop    eax
  442139:	inc    esp
  44213a:	add    ah,ch
  44213c:	pop    eax
  44213d:	inc    esp
  44213e:	add    BYTE PTR [eax+0x59],ah
  442141:	inc    esp
  442142:	add    BYTE PTR [edx+0x47],ah
  442145:	jns    0x4421b2
  442147:	gs sbb eax,0x982742dc
  44214d:	push   ecx
  44214e:	ror    DWORD PTR [ecx],1
  442150:	and    eax,0xf66fd29a
  442155:	aas    
  442156:	retf   0xcfe9
  442159:	mov    esp,edx
  44215b:	dec    ecx
  44215c:	imul   esi,DWORD PTR [edx-0x7ef2d889],0x27bd1b93
  442166:	popa   
  442167:	popf   
  442168:	mov    ecx,0x4917be55
  44216d:	jo     0x44219e
  44216f:	retf   
  442170:	bound  edx,QWORD PTR ds:0xaa233068
  442176:	leave  
  442177:	in     eax,dx
  442178:	outs   dx,DWORD PTR ds:[esi]
  442179:	addr16 pop ebp
  44217b:	je     0x442125
  44217d:	xor    al,0xc9
  44217f:	mov    al,0x8a
  442181:	adc    DWORD PTR [ebx-0x57],esi
  442184:	inc    edx
  442185:	ss fwait
  442187:	pop    edi
  442188:	mov    ebx,0xbf627ebf
  44218d:	mov    eax,ds:0x9b5183af
  442192:	popa   
  442193:	mov    ch,0x5a
  442195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442196:	sti    
  442197:	jns    0x4421ea
  442199:	push   0x2f
  44219b:	xchg   BYTE PTR [edi],dh
  44219d:	pop    ebp
  44219e:	lock shl DWORD PTR [esi],0x65
  4421a2:	mov    ecx,0x223c3db5
  4421a7:	mov    ebx,0x17202f28
  4421ac:	mov    ds:0x1edb2093,al
  4421b1:	int    0x3c
  4421b3:	outs   dx,DWORD PTR ds:[esi]
  4421b4:	push   esp
  4421b5:	adc    bh,ah
  4421b7:	dec    edi
  4421b8:	lds    ecx,FWORD PTR [ebp-0x7]
  4421bb:	(bad)  
  4421bc:	and    DWORD PTR [eax-0x10],ebx
  4421bf:	(bad)  
  4421c0:	mov    BYTE PTR [ecx-0x50],0xd5
  4421c4:	repnz mov ds:0x570ab732,al
  4421ca:	gs pop eax
  4421cc:	mov    dl,0x5d
  4421ce:	adc    edx,DWORD PTR [eax-0x66]
  4421d1:	leave  
  4421d2:	sti    
  4421d3:	fisubr WORD PTR [ebx]
  4421d5:	data16 and bl,cl
  4421d8:	loopne 0x442245
  4421da:	jns    0x442185
  4421dc:	lods   al,BYTE PTR ds:[esi]
  4421dd:	(bad)  
  4421de:	cmp    DWORD PTR [edi],esp
  4421e0:	jne    0x4421ae
  4421e2:	mov    ch,0xd2
  4421e4:	or     ch,dl
  4421e6:	call   0x523f:0x272a79b2
  4421ed:	add    al,0xa4
  4421ef:	retf   0xf0f3
  4421f2:	pop    ss
  4421f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4421f4:	and    al,0x2f
  4421f6:	xchg   ebp,eax
  4421f7:	add    al,0x47
  4421f9:	sbb    DWORD PTR [ebp+0x18],esp
  4421fc:	psubsb mm2,QWORD PTR [eax-0x47]
  442200:	adc    BYTE PTR [eax],al
  442202:	push   edx
  442203:	jecxz  0x4421ae
  442205:	retf   0x90d1
  442208:	push   es
  442209:	and    ecx,edi
  44220b:	ds fs stos BYTE PTR es:[edi],al
  44220e:	scas   eax,DWORD PTR es:[edi]
  44220f:	xchg   ebp,ebp
  442211:	mov    ds:0xb09a8e49,al
  442216:	xlat   BYTE PTR ds:[ebx]
  442217:	test   eax,0x6184a76c
  44221c:	sub    cl,BYTE PTR [edi+0x58ae27d5]
  442222:	dec    edx
  442223:	jmp    0x44228c
  442225:	sbb    esi,DWORD PTR [eax]
  442227:	loop   0x4421e0
  442229:	ret    0x1394
  44222c:	fidiv  DWORD PTR [eax+ebp*2+0x52]
  442230:	mov    bh,BYTE PTR [ebp+0x41]
  442233:	stc    
  442234:	push   edi
  442235:	cmp    edx,ecx
  442237:	inc    esi
  442238:	fs mov al,0x4d
  44223b:	stos   DWORD PTR es:[edi],eax
  44223c:	mov    ebp,?
  44223e:	bound  eax,QWORD PTR [edi]
  442240:	push   esi
  442241:	aaa    
  442242:	loope  0x442268
  442244:	lock inc ecx
  442246:	mov    eax,0xedcc05a6
  44224b:	pop    es
  44224c:	in     eax,0xc9
  44224e:	mov    WORD PTR [edx+0x12],cs
  442251:	mov    ecx,eax
  442253:	inc    esi
  442254:	es scas eax,DWORD PTR es:[edi]
  442256:	inc    edi
  442257:	push   ds
  442258:	add    al,0x6c
  44225a:	add    esp,DWORD PTR [esi]
  44225c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44225d:	and    eax,DWORD PTR [ebp+0x4f95509c]
  442263:	test   al,0x8a
  442265:	pop    ss
  442266:	mov    WORD PTR [esp+ebx*1-0x6b],es
  44226a:	mov    eax,ds:0x9ec312e7
  44226f:	xlat   BYTE PTR ds:[ebx]
  442270:	bound  esi,QWORD PTR [ecx]
  442272:	lahf   
  442273:	inc    ecx
  442274:	mov    edx,0x5624baa1
  442279:	jne    0x442297
  44227b:	mov    ebx,0x897af16b
  442280:	add    al,0xc
  442282:	fadd   QWORD PTR [edx-0x183af037]
  442288:	jl     0x442305
  44228a:	int3   
  44228b:	fs jmp 0xc84b9543
  442291:	or     ecx,DWORD PTR [ebx-0x2221d885]
  442297:	fcmove st,st(5)
  442299:	imul   ebx,DWORD PTR [eax+0x6c],0x6fee79e4
  4422a0:	jae    0x4422c9
  4422a2:	sbb    cl,BYTE PTR [edi]
  4422a4:	xor    edx,edx
  4422a6:	fwait
  4422a7:	lds    ecx,FWORD PTR [ecx]
  4422a9:	sub    eax,0x742ae670
  4422ae:	(bad)  
  4422af:	xor    ch,cl
  4422b1:	sub    DWORD PTR [edi+0x58fcf398],edx
  4422b7:	lahf   
  4422b8:	add    ch,BYTE PTR [edx]
  4422ba:	sbb    eax,0xdb512540
  4422bf:	test   al,0x30
  4422c1:	push   cs
  4422c2:	test   BYTE PTR [edi-0x5c],bh
  4422c5:	shr    BYTE PTR [ecx+esi*4+0x3d0a8d44],cl
  4422cc:	push   ebx
  4422cd:	lea    esp,[eax+0x77]
  4422d0:	(bad)  
  4422d1:	adc    dl,ch
  4422d3:	dec    esp
  4422d4:	jmp    0x4422ca
  4422d6:	test   eax,0x88d28a2d
  4422db:	mov    bh,0xb
  4422dd:	push   0xfffffff5
  4422df:	out    dx,eax
  4422e0:	xlat   BYTE PTR ds:[ebx]
  4422e1:	in     eax,dx
  4422e2:	in     eax,0x68
  4422e4:	xchg   edi,eax
  4422e5:	rcl    ecx,cl
  4422e7:	cmp    BYTE PTR [ebx-0x67f99fdc],dh
  4422ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4422ee:	jl     0x4422f4
  4422f0:	retf   
  4422f1:	adc    ch,bl
  4422f3:	cmpxchg DWORD PTR [edx+0x64f13696],esp
  4422fa:	fnstsw ax
  4422fc:	repz push esp
  4422fe:	cmp    ebp,DWORD PTR [edi+0x19]
  442301:	ja     0x442374
  442303:	cs jle 0x4422bc
  442306:	imul   eax,DWORD PTR [ecx-0x568232c],0x3a2a480f
  442310:	(bad)  
  442312:	jle    0x4422a0
  442314:	adc    bl,0x78
  442317:	mov    eax,0x59a0e5d9
  44231c:	inc    ebp
  44231d:	sbb    esp,edx
  44231f:	ror    edi,1
  442321:	push   ebx
  442322:	fdivp  st(5),st
  442324:	mov    eax,ds:0xcfc7d643
  442329:	xchg   edx,eax
  44232a:	sub    ah,BYTE PTR [ebp+0x7a]
  44232d:	adc    DWORD PTR [edi],ecx
  44232f:	psubusw mm4,QWORD PTR [eax+ebx*4-0x621ca8fa]
  442337:	sbb    ah,dl
  442339:	in     eax,0x3b
  44233b:	cli    
  44233c:	sub    BYTE PTR [esi+ebx*1-0x19],ah
  442340:	xor    ecx,0xdc25ff4f
  442346:	dec    ebp
  442347:	inc    esp
  442348:	add    bh,bh
  44234a:	and    eax,0x444de0
  44234f:	jmp    DWORD PTR ds:0x444de4
  442355:	jmp    DWORD PTR ds:0x444de8
  44235b:	jmp    DWORD PTR ds:0x444dec
  442361:	jmp    DWORD PTR ds:0x444df0
  442367:	jmp    DWORD PTR ds:0x444df4
  44236d:	jmp    DWORD PTR ds:0x444df8
  442373:	jmp    DWORD PTR ds:0x444dfc
  442379:	jmp    DWORD PTR ds:0x444e00
  44237f:	jmp    DWORD PTR ds:0x444e04
  442385:	jmp    DWORD PTR ds:0x444e08
  44238b:	jmp    DWORD PTR ds:0x444e0c
  442391:	jmp    DWORD PTR ds:0x444e10
  442397:	jmp    DWORD PTR ds:0x444e14
  44239d:	jmp    DWORD PTR ds:0x444e18
  4423a3:	jmp    DWORD PTR ds:0x444e1c
  4423a9:	jmp    DWORD PTR ds:0x444e20
  4423af:	jmp    DWORD PTR ds:0x444e24
  4423b5:	jmp    DWORD PTR ds:0x444e28
  4423bb:	jmp    DWORD PTR ds:0x444e2c
  4423c1:	jmp    DWORD PTR ds:0x444e30
  4423c7:	jmp    DWORD PTR ds:0x444e34
  4423cd:	jmp    DWORD PTR ds:0x444e38
  4423d3:	jmp    DWORD PTR ds:0x444e3c
  4423d9:	jmp    DWORD PTR ds:0x444e40
  4423df:	jmp    DWORD PTR ds:0x444e44
  4423e5:	jmp    DWORD PTR ds:0x444e48
  4423eb:	jmp    DWORD PTR ds:0x444e4c
  4423f1:	jmp    DWORD PTR ds:0x444e50
  4423f7:	jmp    DWORD PTR ds:0x444e54
  4423fd:	jmp    DWORD PTR ds:0x444e58
  442403:	jmp    DWORD PTR ds:0x444e5c
  442409:	jmp    DWORD PTR ds:0x444e60
  44240f:	jmp    DWORD PTR ds:0x444e64
  442415:	jmp    DWORD PTR ds:0x444e68
  44241b:	jmp    DWORD PTR ds:0x444e6c
  442421:	jmp    DWORD PTR ds:0x444e70
  442427:	jmp    DWORD PTR ds:0x444e74
  44242d:	jmp    DWORD PTR ds:0x444e78
  442433:	jmp    DWORD PTR ds:0x444e7c
  442439:	jmp    DWORD PTR ds:0x444e80
  44243f:	jmp    DWORD PTR ds:0x444e84
  442445:	jmp    DWORD PTR ds:0x444e88
  44244b:	jmp    DWORD PTR ds:0x444e8c
  442451:	jmp    DWORD PTR ds:0x444e90
  442457:	jmp    DWORD PTR ds:0x444e94
  44245d:	jmp    DWORD PTR ds:0x444e98
  442463:	jmp    DWORD PTR ds:0x444e9c
  442469:	jmp    DWORD PTR ds:0x444ea0
  44246f:	jmp    DWORD PTR ds:0x444ea4
  442475:	jmp    DWORD PTR ds:0x444ea8
  44247b:	jmp    DWORD PTR ds:0x444eac
  442481:	jmp    DWORD PTR ds:0x444eb0
  442487:	jmp    DWORD PTR ds:0x444eb4
  44248d:	jmp    DWORD PTR ds:0x444eb8
  442493:	jmp    DWORD PTR ds:0x444ebc
  442499:	jmp    DWORD PTR ds:0x444ec0
  44249f:	jmp    DWORD PTR ds:0x444ec4
  4424a5:	jmp    DWORD PTR ds:0x444ec8
  4424ab:	jmp    DWORD PTR ds:0x444ecc
  4424b1:	jmp    DWORD PTR ds:0x444ed0
  4424b7:	jmp    DWORD PTR ds:0x444ed4
  4424bd:	jmp    DWORD PTR ds:0x444ed8
  4424c3:	jmp    DWORD PTR ds:0x444edc
  4424c9:	jmp    DWORD PTR ds:0x444ee0
  4424cf:	jmp    DWORD PTR ds:0x444ee4
  4424d5:	jmp    DWORD PTR ds:0x444ee8
  4424db:	jmp    DWORD PTR ds:0x444eec
  4424e1:	jmp    DWORD PTR ds:0x444ef0
  4424e7:	jmp    DWORD PTR ds:0x444ef4
  4424ed:	jmp    DWORD PTR ds:0x444ef8
  4424f3:	jmp    DWORD PTR ds:0x444efc
  4424f9:	jmp    DWORD PTR ds:0x444f00
  4424ff:	jmp    DWORD PTR ds:0x444f04
  442505:	jmp    DWORD PTR ds:0x444f08
  44250b:	jmp    DWORD PTR ds:0x444f0c
  442511:	jmp    DWORD PTR ds:0x444f10
  442517:	jmp    DWORD PTR ds:0x444f14
  44251d:	jmp    DWORD PTR ds:0x444f18
  442523:	jmp    DWORD PTR ds:0x444f1c
  442529:	jmp    DWORD PTR ds:0x444f20
  44252f:	jmp    DWORD PTR ds:0x444f24
  442535:	jmp    DWORD PTR ds:0x444f28
  44253b:	jmp    DWORD PTR ds:0x444f2c
  442541:	jmp    DWORD PTR ds:0x444f30
  442547:	jmp    DWORD PTR ds:0x444f34
  44254d:	jmp    DWORD PTR ds:0x444f38
  442553:	jmp    DWORD PTR ds:0x444f3c
  442559:	jmp    DWORD PTR ds:0x444f40
  44255f:	jmp    DWORD PTR ds:0x444f44
  442565:	jmp    DWORD PTR ds:0x444f48
  44256b:	jmp    DWORD PTR ds:0x444f4c
  442571:	jmp    DWORD PTR ds:0x444f50
  442577:	jmp    DWORD PTR ds:0x444f54
  44257d:	jmp    DWORD PTR ds:0x444f58
  442583:	jmp    DWORD PTR ds:0x444f5c
  442589:	jmp    DWORD PTR ds:0x444f60
  44258f:	jmp    DWORD PTR ds:0x444f64
  442595:	jmp    DWORD PTR ds:0x444f68
  44259b:	jmp    DWORD PTR ds:0x444f6c
  4425a1:	jmp    DWORD PTR ds:0x444f70
  4425a7:	jmp    DWORD PTR ds:0x444f74
  4425ad:	jmp    DWORD PTR ds:0x444f78
  4425b3:	jmp    DWORD PTR ds:0x444f7c
  4425b9:	jmp    DWORD PTR ds:0x444f80
  4425bf:	jmp    DWORD PTR ds:0x444f84
  4425c5:	jmp    DWORD PTR ds:0x444f88
  4425cb:	jmp    DWORD PTR ds:0x444f8c
  4425d1:	jmp    DWORD PTR ds:0x444f90
  4425d7:	jmp    DWORD PTR ds:0x444f94
  4425dd:	jmp    DWORD PTR ds:0x444f98
  4425e3:	jmp    DWORD PTR ds:0x444f9c
  4425e9:	jmp    DWORD PTR ds:0x444fa0
  4425ef:	jmp    DWORD PTR ds:0x444fa4
  4425f5:	jmp    DWORD PTR ds:0x444fa8
  4425fb:	jmp    DWORD PTR ds:0x444fac
  442601:	jmp    DWORD PTR ds:0x444fb0
  442607:	jmp    DWORD PTR ds:0x444fb4
  44260d:	jmp    DWORD PTR ds:0x444fb8
  442613:	jmp    DWORD PTR ds:0x444fbc
  442619:	jmp    DWORD PTR ds:0x444fc0
  44261f:	jmp    DWORD PTR ds:0x444fc4
  442625:	jmp    DWORD PTR ds:0x444fc8
  44262b:	jmp    DWORD PTR ds:0x444fcc
  442631:	jmp    DWORD PTR ds:0x444fd0
  442637:	jmp    DWORD PTR ds:0x444fd4
  44263d:	jmp    DWORD PTR ds:0x444fd8
  442643:	jmp    DWORD PTR ds:0x444fdc
  442649:	jmp    DWORD PTR ds:0x444fe0
  44264f:	jmp    DWORD PTR ds:0x444fe4
  442655:	jmp    DWORD PTR ds:0x444fe8
  44265b:	jmp    DWORD PTR ds:0x444fec
  442661:	jmp    DWORD PTR ds:0x444ff0
  442667:	jmp    DWORD PTR ds:0x444ff4
  44266d:	jmp    DWORD PTR ds:0x444ff8
  442673:	jmp    DWORD PTR ds:0x444ffc
  442679:	jmp    DWORD PTR ds:0x445000
  44267f:	jmp    DWORD PTR ds:0x445004
  442685:	jmp    DWORD PTR ds:0x445008
  44268b:	jmp    DWORD PTR ds:0x44500c
  442691:	jmp    DWORD PTR ds:0x445010
  442697:	jmp    DWORD PTR ds:0x445014
  44269d:	jmp    DWORD PTR ds:0x445018
  4426a3:	jmp    DWORD PTR ds:0x44501c
  4426a9:	jmp    DWORD PTR ds:0x445020
  4426af:	jmp    DWORD PTR ds:0x445024
  4426b5:	jmp    DWORD PTR ds:0x445028
  4426bb:	jmp    DWORD PTR ds:0x44502c
  4426c1:	jmp    DWORD PTR ds:0x445030
  4426c7:	jmp    DWORD PTR ds:0x445034
  4426cd:	jmp    DWORD PTR ds:0x445038
  4426d3:	jmp    DWORD PTR ds:0x44503c
  4426d9:	jmp    DWORD PTR ds:0x445040
  4426df:	jmp    DWORD PTR ds:0x445044
  4426e5:	jmp    DWORD PTR ds:0x445048
  4426eb:	jmp    DWORD PTR ds:0x44504c
  4426f1:	jmp    DWORD PTR ds:0x445050
  4426f7:	jmp    DWORD PTR ds:0x445054
  4426fd:	jmp    DWORD PTR ds:0x445058
  442703:	jmp    DWORD PTR ds:0x44505c
  442709:	jmp    DWORD PTR ds:0x445060
  44270f:	jmp    DWORD PTR ds:0x445064
  442715:	jmp    DWORD PTR ds:0x445068
  44271b:	jmp    DWORD PTR ds:0x44506c
  442721:	jmp    DWORD PTR ds:0x445070
  442727:	jmp    DWORD PTR ds:0x445074
  44272d:	jmp    DWORD PTR ds:0x445078
  442733:	jmp    DWORD PTR ds:0x44507c
  442739:	jmp    DWORD PTR ds:0x445080
  44273f:	jmp    DWORD PTR ds:0x445084
  442745:	jmp    DWORD PTR ds:0x445088
  44274b:	jmp    DWORD PTR ds:0x44508c
  442751:	jmp    DWORD PTR ds:0x445090
  442757:	jmp    DWORD PTR ds:0x445094
  44275d:	jmp    DWORD PTR ds:0x445098
  442763:	jmp    DWORD PTR ds:0x44509c
  442769:	jmp    DWORD PTR ds:0x4450a0
  44276f:	jmp    DWORD PTR ds:0x4450a8
  442775:	jmp    DWORD PTR ds:0x4450ac
  44277b:	jmp    DWORD PTR ds:0x4450b0
  442781:	jmp    DWORD PTR ds:0x4450b4
  442787:	jmp    DWORD PTR ds:0x4450b8
  44278d:	jmp    DWORD PTR ds:0x4450bc
  442793:	jmp    DWORD PTR ds:0x4450c0
  442799:	jmp    DWORD PTR ds:0x4450c4
  44279f:	jmp    DWORD PTR ds:0x4450c8
  4427a5:	jmp    DWORD PTR ds:0x4450cc
  4427ab:	jmp    DWORD PTR ds:0x4450d0
  4427b1:	jmp    DWORD PTR ds:0x4450d4
  4427b7:	jmp    DWORD PTR ds:0x4450d8
  4427bd:	jmp    DWORD PTR ds:0x4450dc
  4427c3:	jmp    DWORD PTR ds:0x4450e0
  4427c9:	jmp    DWORD PTR ds:0x4450e4
  4427cf:	jmp    DWORD PTR ds:0x4450e8
  4427d5:	jmp    DWORD PTR ds:0x4450ec
  4427db:	jmp    DWORD PTR ds:0x4450f0
  4427e1:	jmp    DWORD PTR ds:0x4450f4
  4427e7:	jmp    DWORD PTR ds:0x4450f8
  4427ed:	jmp    DWORD PTR ds:0x4450fc
  4427f3:	jmp    DWORD PTR ds:0x445100
  4427f9:	jmp    DWORD PTR ds:0x445104
  4427ff:	jmp    DWORD PTR ds:0x445108
  442805:	jmp    DWORD PTR ds:0x44510c
  44280b:	jmp    DWORD PTR ds:0x445110
  442811:	jmp    DWORD PTR ds:0x445114
  442817:	jmp    DWORD PTR ds:0x445118
  44281d:	jmp    DWORD PTR ds:0x44511c
  442823:	jmp    DWORD PTR ds:0x445120
  442829:	jmp    DWORD PTR ds:0x445124
  44282f:	jmp    DWORD PTR ds:0x445128
  442835:	jmp    DWORD PTR ds:0x44512c
  44283b:	jmp    DWORD PTR ds:0x445130
  442841:	jmp    DWORD PTR ds:0x445134
  442847:	jmp    DWORD PTR ds:0x445138
  44284d:	jmp    DWORD PTR ds:0x44513c
  442853:	jmp    DWORD PTR ds:0x445140
  442859:	jmp    DWORD PTR ds:0x445144
  44285f:	jmp    DWORD PTR ds:0x445148
  442865:	jmp    DWORD PTR ds:0x44514c
  44286b:	jmp    DWORD PTR ds:0x445150
  442871:	jmp    DWORD PTR ds:0x445154
  442877:	jmp    DWORD PTR ds:0x445158
  44287d:	jmp    DWORD PTR ds:0x44515c
  442883:	jmp    DWORD PTR ds:0x445160
  442889:	jmp    DWORD PTR ds:0x445164
  44288f:	jmp    DWORD PTR ds:0x445168
  442895:	jmp    DWORD PTR ds:0x44516c
  44289b:	jmp    DWORD PTR ds:0x445170
  4428a1:	jmp    DWORD PTR ds:0x445174
  4428a7:	jmp    DWORD PTR ds:0x445178
  4428ad:	jmp    DWORD PTR ds:0x44517c
  4428b3:	jmp    DWORD PTR ds:0x445180
  4428b9:	jmp    DWORD PTR ds:0x445184
  4428bf:	jmp    DWORD PTR ds:0x445188
  4428c5:	jmp    DWORD PTR ds:0x44518c
  4428cb:	jmp    DWORD PTR ds:0x445190
  4428d1:	jmp    DWORD PTR ds:0x445194
  4428d7:	jmp    DWORD PTR ds:0x445198
  4428dd:	jmp    DWORD PTR ds:0x44519c
  4428e3:	jmp    DWORD PTR ds:0x4451a0
  4428e9:	jmp    DWORD PTR ds:0x4451a4
  4428ef:	jmp    DWORD PTR ds:0x4451a8
  4428f5:	jmp    DWORD PTR ds:0x4451ac
  4428fb:	jmp    DWORD PTR ds:0x4451b0
  442901:	jmp    DWORD PTR ds:0x4451b4
  442907:	jmp    DWORD PTR ds:0x4451b8
  44290d:	jmp    DWORD PTR ds:0x4451bc
  442913:	jmp    DWORD PTR ds:0x4451c0
  442919:	jmp    DWORD PTR ds:0x4451c4
  44291f:	jmp    DWORD PTR ds:0x4451c8
  442925:	jmp    DWORD PTR ds:0x4451cc
  44292b:	jmp    DWORD PTR ds:0x4451d0
  442931:	jmp    DWORD PTR ds:0x4451d4
  442937:	jmp    DWORD PTR ds:0x4451d8
  44293d:	jmp    DWORD PTR ds:0x4451dc
  442943:	jmp    DWORD PTR ds:0x4451e0
  442949:	jmp    DWORD PTR ds:0x4451e4
  44294f:	jmp    DWORD PTR ds:0x4451e8
  442955:	jmp    DWORD PTR ds:0x4451ec
  44295b:	jmp    DWORD PTR ds:0x4451f0
  442961:	jmp    DWORD PTR ds:0x4451f4
  442967:	jmp    DWORD PTR ds:0x4451f8
  44296d:	jmp    DWORD PTR ds:0x4451fc
  442973:	jmp    DWORD PTR ds:0x445200
  442979:	jmp    DWORD PTR ds:0x445204
  44297f:	jmp    DWORD PTR ds:0x445208
  442985:	jmp    DWORD PTR ds:0x44520c
  44298b:	jmp    DWORD PTR ds:0x445210
  442991:	jmp    DWORD PTR ds:0x445214
  442997:	jmp    DWORD PTR ds:0x445218
  44299d:	jmp    DWORD PTR ds:0x44521c
  4429a3:	jmp    DWORD PTR ds:0x445220
  4429a9:	jmp    DWORD PTR ds:0x445224
  4429af:	jmp    DWORD PTR ds:0x445228
  4429b5:	jmp    DWORD PTR ds:0x44522c
  4429bb:	jmp    DWORD PTR ds:0x445230
  4429c1:	jmp    DWORD PTR ds:0x445234
  4429c7:	jmp    DWORD PTR ds:0x445238
  4429cd:	jmp    DWORD PTR ds:0x44523c
  4429d3:	jmp    DWORD PTR ds:0x445240
  4429d9:	jmp    DWORD PTR ds:0x445244
  4429df:	jmp    DWORD PTR ds:0x445248
  4429e5:	jmp    DWORD PTR ds:0x44524c
  4429eb:	jmp    DWORD PTR ds:0x445250
  4429f1:	jmp    DWORD PTR ds:0x445254
  4429f7:	jmp    DWORD PTR ds:0x445258
  4429fd:	jmp    DWORD PTR ds:0x44525c
  442a03:	jmp    DWORD PTR ds:0x445260
  442a09:	jmp    DWORD PTR ds:0x445264
  442a0f:	jmp    DWORD PTR ds:0x445268
  442a15:	jmp    DWORD PTR ds:0x44526c
  442a1b:	jmp    DWORD PTR ds:0x445270
  442a21:	jmp    DWORD PTR ds:0x445274
  442a27:	jmp    DWORD PTR ds:0x445278
  442a2d:	jmp    DWORD PTR ds:0x44527c
  442a33:	jmp    DWORD PTR ds:0x445280
  442a39:	jmp    DWORD PTR ds:0x445284
  442a3f:	jmp    DWORD PTR ds:0x445288
  442a45:	jmp    DWORD PTR ds:0x44528c
  442a4b:	jmp    DWORD PTR ds:0x445290
  442a51:	jmp    DWORD PTR ds:0x445294
  442a57:	jmp    DWORD PTR ds:0x445298
  442a5d:	jmp    DWORD PTR ds:0x44529c
  442a63:	jmp    DWORD PTR ds:0x4452a0
  442a69:	jmp    DWORD PTR ds:0x4452a4
  442a6f:	jmp    DWORD PTR ds:0x4452a8
  442a75:	jmp    DWORD PTR ds:0x4452ac
  442a7b:	jmp    DWORD PTR ds:0x4452b0
  442a81:	jmp    DWORD PTR ds:0x4452b4
  442a87:	jmp    DWORD PTR ds:0x4452b8
  442a8d:	jmp    DWORD PTR ds:0x4452bc
  442a93:	jmp    DWORD PTR ds:0x4452c0
  442a99:	jmp    DWORD PTR ds:0x4452c4
  442a9f:	jmp    DWORD PTR ds:0x4452c8
  442aa5:	jmp    DWORD PTR ds:0x4452cc
  442aab:	jmp    DWORD PTR ds:0x4452d0
  442ab1:	jmp    DWORD PTR ds:0x4452d4
  442ab7:	jmp    DWORD PTR ds:0x4452d8
  442abd:	jmp    DWORD PTR ds:0x4452dc
  442ac3:	jmp    DWORD PTR ds:0x4452e0
  442ac9:	jmp    DWORD PTR ds:0x4452e4
  442acf:	jmp    DWORD PTR ds:0x4452e8
  442ad5:	jmp    DWORD PTR ds:0x4452ec
  442adb:	jmp    DWORD PTR ds:0x4452f0
  442ae1:	jmp    DWORD PTR ds:0x4452f4
  442ae7:	jmp    DWORD PTR ds:0x4452f8
  442aed:	jmp    DWORD PTR ds:0x4452fc
  442af3:	jmp    DWORD PTR ds:0x445300
  442af9:	jmp    DWORD PTR ds:0x445304
  442aff:	jmp    DWORD PTR ds:0x445308
  442b05:	jmp    DWORD PTR ds:0x44530c
  442b0b:	jmp    DWORD PTR ds:0x445310
  442b11:	jmp    DWORD PTR ds:0x445314
  442b17:	jmp    DWORD PTR ds:0x445318
  442b1d:	jmp    DWORD PTR ds:0x44531c
  442b23:	jmp    DWORD PTR ds:0x445320
  442b29:	jmp    DWORD PTR ds:0x445324
  442b2f:	jmp    DWORD PTR ds:0x445328
  442b35:	jmp    DWORD PTR ds:0x44532c
  442b3b:	jmp    DWORD PTR ds:0x445330
  442b41:	jmp    DWORD PTR ds:0x445334
  442b47:	jmp    DWORD PTR ds:0x445338
  442b4d:	jmp    DWORD PTR ds:0x44533c
  442b53:	jmp    DWORD PTR ds:0x445340
  442b59:	jmp    DWORD PTR ds:0x445344
  442b5f:	jmp    DWORD PTR ds:0x445348
  442b65:	jmp    DWORD PTR ds:0x44534c
  442b6b:	jmp    DWORD PTR ds:0x445354
  442b71:	jmp    DWORD PTR ds:0x445358
  442b77:	jmp    DWORD PTR ds:0x44535c
  442b7d:	jmp    DWORD PTR ds:0x445360
  442b83:	jmp    DWORD PTR ds:0x445364
  442b89:	jmp    DWORD PTR ds:0x445368
  442b8f:	jmp    DWORD PTR ds:0x44536c
  442b95:	jmp    DWORD PTR ds:0x445370
  442b9b:	int3   
  442b9c:	jmp    DWORD PTR ds:0x445378
  442ba2:	jmp    DWORD PTR ds:0x445380
  442ba8:	jmp    DWORD PTR ds:0x445384
  442bae:	jmp    DWORD PTR ds:0x445388
  442bb4:	jmp    DWORD PTR ds:0x44538c
  442bba:	jmp    DWORD PTR ds:0x445390
  442bc0:	jmp    DWORD PTR ds:0x445394
  442bc6:	jmp    DWORD PTR ds:0x445398
  442bcc:	jmp    DWORD PTR ds:0x44539c
  442bd2:	jmp    DWORD PTR ds:0x4453a0
  442bd8:	jmp    DWORD PTR ds:0x4453a4
  442bde:	jmp    DWORD PTR ds:0x4453a8
  442be4:	jmp    DWORD PTR ds:0x4453ac
  442bea:	jmp    DWORD PTR ds:0x4453b0
  442bf0:	jmp    DWORD PTR ds:0x4453b4
  442bf6:	jmp    DWORD PTR ds:0x4453b8
  442bfc:	jmp    DWORD PTR ds:0x4453bc
  442c02:	jmp    DWORD PTR ds:0x4453c0
  442c08:	jmp    DWORD PTR ds:0x4453c4
  442c0e:	jmp    DWORD PTR ds:0x4453c8
  442c14:	jmp    DWORD PTR ds:0x4453cc
  442c1a:	jmp    DWORD PTR ds:0x4453d0
  442c20:	jmp    DWORD PTR ds:0x4453d8
  442c26:	jmp    DWORD PTR ds:0x4453e0
  442c2c:	jmp    DWORD PTR ds:0x4453e4
  442c32:	jmp    DWORD PTR ds:0x4453e8
  442c38:	jmp    DWORD PTR ds:0x4453ec
  442c3e:	jmp    DWORD PTR ds:0x4453f0
  442c44:	jmp    DWORD PTR ds:0x4453f4
  442c4a:	jmp    DWORD PTR ds:0x4453f8
  442c50:	jmp    DWORD PTR ds:0x4453fc
  442c56:	jmp    DWORD PTR ds:0x445400
  442c5c:	jmp    DWORD PTR ds:0x445404
  442c62:	jmp    DWORD PTR ds:0x445408
  442c68:	jmp    DWORD PTR ds:0x44540c
  442c6e:	jmp    DWORD PTR ds:0x445410
  442c74:	jmp    DWORD PTR ds:0x445414
  442c7a:	jmp    DWORD PTR ds:0x445418
  442c80:	jmp    DWORD PTR ds:0x44541c
  442c86:	jmp    DWORD PTR ds:0x445420
  442c8c:	jmp    DWORD PTR ds:0x445424
  442c92:	jmp    DWORD PTR ds:0x445428
  442c98:	jmp    DWORD PTR ds:0x44542c
  442c9e:	jmp    DWORD PTR ds:0x445430
  442ca4:	jmp    DWORD PTR ds:0x445434
  442caa:	jmp    DWORD PTR ds:0x445438
  442cb0:	jmp    DWORD PTR ds:0x44543c
  442cb6:	jmp    DWORD PTR ds:0x445440
  442cbc:	jmp    DWORD PTR ds:0x445444
  442cc2:	jmp    DWORD PTR ds:0x445448
  442cc8:	jmp    DWORD PTR ds:0x44544c
  442cce:	jmp    DWORD PTR ds:0x445450
  442cd4:	jmp    DWORD PTR ds:0x445454
  442cda:	jmp    DWORD PTR ds:0x445458
  442ce0:	jmp    DWORD PTR ds:0x44545c
  442ce6:	jmp    DWORD PTR ds:0x445460
  442cec:	jmp    DWORD PTR ds:0x445464
  442cf2:	jmp    DWORD PTR ds:0x445468
  442cf8:	jmp    DWORD PTR ds:0x44546c
  442cfe:	jmp    DWORD PTR ds:0x445470
  442d04:	jmp    DWORD PTR ds:0x445474
  442d0a:	jmp    DWORD PTR ds:0x445478
  442d10:	jmp    DWORD PTR ds:0x44547c
  442d16:	jmp    DWORD PTR ds:0x445480
  442d1c:	jmp    DWORD PTR ds:0x445484
  442d22:	jmp    DWORD PTR ds:0x445488
  442d28:	jmp    DWORD PTR ds:0x44548c
  442d2e:	jmp    DWORD PTR ds:0x445490
  442d34:	jmp    DWORD PTR ds:0x445494
  442d3a:	jmp    DWORD PTR ds:0x445498
  442d40:	jmp    DWORD PTR ds:0x44549c
  442d46:	jmp    DWORD PTR ds:0x4454a0
  442d4c:	jmp    DWORD PTR ds:0x4454a4
  442d52:	jmp    DWORD PTR ds:0x4454a8
  442d58:	jmp    DWORD PTR ds:0x4454ac
  442d5e:	jmp    DWORD PTR ds:0x4454b0
  442d64:	jmp    DWORD PTR ds:0x4454b4
  442d6a:	jmp    DWORD PTR ds:0x4454b8
  442d70:	jmp    DWORD PTR ds:0x4454bc
  442d76:	jmp    DWORD PTR ds:0x4454c0
  442d7c:	jmp    DWORD PTR ds:0x4454c4
  442d82:	jmp    DWORD PTR ds:0x4454c8
  442d88:	jmp    DWORD PTR ds:0x4454cc
  442d8e:	jmp    DWORD PTR ds:0x4454d0
  442d94:	jmp    DWORD PTR ds:0x4454d4
  442d9a:	jmp    DWORD PTR ds:0x4454d8
  442da0:	jmp    DWORD PTR ds:0x4454dc
  442da6:	jmp    DWORD PTR ds:0x4454e0
  442dac:	jmp    DWORD PTR ds:0x4454e4
  442db2:	jmp    DWORD PTR ds:0x4454e8
  442db8:	jmp    DWORD PTR ds:0x4454ec
  442dbe:	jmp    DWORD PTR ds:0x4454f0
  442dc4:	jmp    DWORD PTR ds:0x4454f4
  442dca:	jmp    DWORD PTR ds:0x4454f8
  442dd0:	jmp    DWORD PTR ds:0x4454fc
  442dd6:	jmp    DWORD PTR ds:0x445500
  442ddc:	jmp    DWORD PTR ds:0x445504
  442de2:	jmp    DWORD PTR ds:0x445508
  442de8:	jmp    DWORD PTR ds:0x44550c
  442dee:	jmp    DWORD PTR ds:0x445510
  442df4:	jmp    DWORD PTR ds:0x445514
  442dfa:	jmp    DWORD PTR ds:0x445518
  442e00:	jmp    DWORD PTR ds:0x44551c
  442e06:	jmp    DWORD PTR ds:0x445520
  442e0c:	jmp    DWORD PTR ds:0x445524
  442e12:	jmp    DWORD PTR ds:0x445528
  442e18:	jmp    DWORD PTR ds:0x44552c
  442e1e:	jmp    DWORD PTR ds:0x445530
  442e24:	jmp    DWORD PTR ds:0x445534
  442e2a:	jmp    DWORD PTR ds:0x445538
  442e30:	jmp    DWORD PTR ds:0x44553c
  442e36:	jmp    DWORD PTR ds:0x445540
  442e3c:	jmp    DWORD PTR ds:0x445544
  442e42:	jmp    DWORD PTR ds:0x445548
  442e48:	jmp    DWORD PTR ds:0x44554c
  442e4e:	jmp    DWORD PTR ds:0x445550
  442e54:	jmp    DWORD PTR ds:0x445554
  442e5a:	jmp    DWORD PTR ds:0x445558
  442e60:	jmp    DWORD PTR ds:0x44555c
  442e66:	jmp    DWORD PTR ds:0x445560
  442e6c:	jmp    DWORD PTR ds:0x445564
  442e72:	jmp    DWORD PTR ds:0x445568
  442e78:	jmp    DWORD PTR ds:0x44556c
  442e7e:	jmp    DWORD PTR ds:0x445570
  442e84:	jmp    DWORD PTR ds:0x445574
  442e8a:	jmp    DWORD PTR ds:0x445578
  442e90:	jmp    DWORD PTR ds:0x44557c
  442e96:	jmp    DWORD PTR ds:0x445580
  442e9c:	jmp    DWORD PTR ds:0x445584
  442ea2:	jmp    DWORD PTR ds:0x445588
  442ea8:	jmp    DWORD PTR ds:0x44558c
  442eae:	jmp    DWORD PTR ds:0x445590
  442eb4:	jmp    DWORD PTR ds:0x445594
  442eba:	jmp    DWORD PTR ds:0x445598
  442ec0:	jmp    DWORD PTR ds:0x44559c
  442ec6:	jmp    DWORD PTR ds:0x4455a0
  442ecc:	jmp    DWORD PTR ds:0x4455a4
  442ed2:	jmp    DWORD PTR ds:0x4455a8
  442ed8:	jmp    DWORD PTR ds:0x4455ac
  442ede:	jmp    DWORD PTR ds:0x4455b0
  442ee4:	jmp    DWORD PTR ds:0x4455b4
  442eea:	jmp    DWORD PTR ds:0x4455b8
  442ef0:	jmp    DWORD PTR ds:0x4455bc
  442ef6:	jmp    DWORD PTR ds:0x4455c0
  442efc:	jmp    DWORD PTR ds:0x4455c4
  442f02:	jmp    DWORD PTR ds:0x4455c8
  442f08:	jmp    DWORD PTR ds:0x4455cc
  442f0e:	jmp    DWORD PTR ds:0x4455d0
  442f14:	jmp    DWORD PTR ds:0x4455d4
  442f1a:	jmp    DWORD PTR ds:0x4455d8
  442f20:	jmp    DWORD PTR ds:0x4455dc
  442f26:	jmp    DWORD PTR ds:0x4455e0
  442f2c:	jmp    DWORD PTR ds:0x4455e4
  442f32:	jmp    DWORD PTR ds:0x4455e8
  442f38:	jmp    DWORD PTR ds:0x4455ec
  442f3e:	jmp    DWORD PTR ds:0x4455f0
  442f44:	jmp    DWORD PTR ds:0x4455f4
  442f4a:	jmp    DWORD PTR ds:0x4455f8
  442f50:	jmp    DWORD PTR ds:0x4455fc
  442f56:	jmp    DWORD PTR ds:0x445600
  442f5c:	jmp    DWORD PTR ds:0x445608
  442f62:	jmp    DWORD PTR ds:0x44560c
  442f68:	jmp    DWORD PTR ds:0x445610
  442f6e:	jmp    DWORD PTR ds:0x445614
  442f74:	jmp    DWORD PTR ds:0x445618
  442f7a:	jmp    DWORD PTR ds:0x44561c
  442f80:	jmp    DWORD PTR ds:0x445620
  442f86:	jmp    DWORD PTR ds:0x445624
  442f8c:	jmp    DWORD PTR ds:0x445628
  442f92:	jmp    DWORD PTR ds:0x44562c
  442f98:	jmp    DWORD PTR ds:0x445630
  442f9e:	jmp    DWORD PTR ds:0x445634
  442fa4:	jmp    DWORD PTR ds:0x445638
  442faa:	jmp    DWORD PTR ds:0x44563c
  442fb0:	jmp    DWORD PTR ds:0x445640
  442fb6:	jmp    DWORD PTR ds:0x445644
  442fbc:	jmp    DWORD PTR ds:0x445648
  442fc2:	jmp    DWORD PTR ds:0x44564c
  442fc8:	jmp    DWORD PTR ds:0x445650
  442fce:	jmp    DWORD PTR ds:0x445654
  442fd4:	jmp    DWORD PTR ds:0x445658
  442fda:	jmp    DWORD PTR ds:0x44565c
  442fe0:	jmp    DWORD PTR ds:0x445660
  442fe6:	jmp    DWORD PTR ds:0x445664
  442fec:	jmp    DWORD PTR ds:0x445668
  442ff2:	jmp    DWORD PTR ds:0x44566c
  442ff8:	jmp    DWORD PTR ds:0x445670
  442ffe:	jmp    DWORD PTR ds:0x445674
  443004:	jmp    DWORD PTR ds:0x445678
  44300a:	jmp    DWORD PTR ds:0x44567c
  443010:	jmp    DWORD PTR ds:0x445680
  443016:	jmp    DWORD PTR ds:0x445684
  44301c:	jmp    DWORD PTR ds:0x445688
  443022:	jmp    DWORD PTR ds:0x44568c
  443028:	jmp    DWORD PTR ds:0x445690
  44302e:	jmp    DWORD PTR ds:0x445694
  443034:	jmp    DWORD PTR ds:0x445698
  44303a:	jmp    DWORD PTR ds:0x44569c
  443040:	jmp    DWORD PTR ds:0x4456a0
  443046:	jmp    DWORD PTR ds:0x4456a4
  44304c:	jmp    DWORD PTR ds:0x4456a8
  443052:	jmp    DWORD PTR ds:0x4456ac
  443058:	jmp    DWORD PTR ds:0x4456b0
  44305e:	jmp    DWORD PTR ds:0x4456b4
  443064:	jmp    DWORD PTR ds:0x4456b8
  44306a:	jmp    DWORD PTR ds:0x4456bc
  443070:	jmp    DWORD PTR ds:0x4456c0
  443076:	jmp    DWORD PTR ds:0x4456c4
  44307c:	jmp    DWORD PTR ds:0x4456c8
  443082:	jmp    DWORD PTR ds:0x4456cc
  443088:	jmp    DWORD PTR ds:0x4456d0
  44308e:	jmp    DWORD PTR ds:0x4456d4
  443094:	jmp    DWORD PTR ds:0x4456d8
  44309a:	jmp    DWORD PTR ds:0x4456dc
  4430a0:	jmp    DWORD PTR ds:0x4456e0
  4430a6:	jmp    DWORD PTR ds:0x4456e4
  4430ac:	jmp    DWORD PTR ds:0x4456e8
  4430b2:	jmp    DWORD PTR ds:0x4456ec
  4430b8:	jmp    DWORD PTR ds:0x4456f0
  4430be:	jmp    DWORD PTR ds:0x4456f4
  4430c4:	jmp    DWORD PTR ds:0x4456f8
  4430ca:	jmp    DWORD PTR ds:0x4456fc
  4430d0:	jmp    DWORD PTR ds:0x445700
  4430d6:	jmp    DWORD PTR ds:0x445704
  4430dc:	jmp    DWORD PTR ds:0x445708
  4430e2:	jmp    DWORD PTR ds:0x44570c
  4430e8:	jmp    DWORD PTR ds:0x445710
  4430ee:	jmp    DWORD PTR ds:0x445714
  4430f4:	jmp    DWORD PTR ds:0x445718
  4430fa:	jmp    DWORD PTR ds:0x44571c
  443100:	jmp    DWORD PTR ds:0x445720
  443106:	jmp    DWORD PTR ds:0x445724
  44310c:	jmp    DWORD PTR ds:0x445728
  443112:	jmp    DWORD PTR ds:0x44572c
  443118:	jmp    DWORD PTR ds:0x445730
  44311e:	jmp    DWORD PTR ds:0x445734
  443124:	jmp    DWORD PTR ds:0x445738
  44312a:	jmp    DWORD PTR ds:0x44573c
  443130:	jmp    DWORD PTR ds:0x445740
  443136:	jmp    DWORD PTR ds:0x445744
  44313c:	jmp    DWORD PTR ds:0x445748
  443142:	jmp    DWORD PTR ds:0x44574c
  443148:	jmp    DWORD PTR ds:0x445750
  44314e:	jmp    DWORD PTR ds:0x445754
  443154:	jmp    DWORD PTR ds:0x445758
  44315a:	jmp    DWORD PTR ds:0x44575c
  443160:	jmp    DWORD PTR ds:0x445760
  443166:	jmp    DWORD PTR ds:0x445764
  44316c:	jmp    DWORD PTR ds:0x445768
  443172:	jmp    DWORD PTR ds:0x44576c
  443178:	jmp    DWORD PTR ds:0x445770
  44317e:	jmp    DWORD PTR ds:0x445774
  443184:	jmp    DWORD PTR ds:0x445778
  44318a:	jmp    DWORD PTR ds:0x44577c
  443190:	jmp    DWORD PTR ds:0x445780
  443196:	jmp    DWORD PTR ds:0x445784
  44319c:	jmp    DWORD PTR ds:0x445788
  4431a2:	jmp    DWORD PTR ds:0x44578c
  4431a8:	jmp    DWORD PTR ds:0x445790
  4431ae:	jmp    DWORD PTR ds:0x445794
  4431b4:	jmp    DWORD PTR ds:0x445798
  4431ba:	jmp    DWORD PTR ds:0x44579c
  4431c0:	jmp    DWORD PTR ds:0x4457a0
  4431c6:	jmp    DWORD PTR ds:0x4457a4
  4431cc:	jmp    DWORD PTR ds:0x4457a8
  4431d2:	jmp    DWORD PTR ds:0x4457ac
  4431d8:	jmp    DWORD PTR ds:0x4457b0
  4431de:	jmp    DWORD PTR ds:0x4457b4
  4431e4:	jmp    DWORD PTR ds:0x4457b8
  4431ea:	jmp    DWORD PTR ds:0x4457bc
  4431f0:	jmp    DWORD PTR ds:0x4457c0
  4431f6:	jmp    DWORD PTR ds:0x4457c4
  4431fc:	jmp    DWORD PTR ds:0x4457c8
  443202:	jmp    DWORD PTR ds:0x4457cc
  443208:	jmp    DWORD PTR ds:0x4457d0
  44320e:	jmp    DWORD PTR ds:0x4457d4
  443214:	jmp    DWORD PTR ds:0x4457d8
  44321a:	jmp    DWORD PTR ds:0x4457dc
  443220:	jmp    DWORD PTR ds:0x4457e0
  443226:	jmp    DWORD PTR ds:0x4457e4
  44322c:	jmp    DWORD PTR ds:0x4457e8
  443232:	jmp    DWORD PTR ds:0x4457ec
  443238:	jmp    DWORD PTR ds:0x4457f0
  44323e:	jmp    DWORD PTR ds:0x4457f4
  443244:	jmp    DWORD PTR ds:0x4457f8
  44324a:	jmp    DWORD PTR ds:0x4457fc
  443250:	jmp    DWORD PTR ds:0x445800
  443256:	jmp    DWORD PTR ds:0x445804
  44325c:	jmp    DWORD PTR ds:0x445808
  443262:	jmp    DWORD PTR ds:0x44580c
  443268:	jmp    DWORD PTR ds:0x445810
  44326e:	jmp    DWORD PTR ds:0x445814
  443274:	jmp    DWORD PTR ds:0x445818
  44327a:	jmp    DWORD PTR ds:0x44581c
  443280:	jmp    DWORD PTR ds:0x445820
  443286:	jmp    DWORD PTR ds:0x445824
  44328c:	jmp    DWORD PTR ds:0x445828
  443292:	jmp    DWORD PTR ds:0x44582c
  443298:	jmp    DWORD PTR ds:0x445830
  44329e:	jmp    DWORD PTR ds:0x445834
  4432a4:	jmp    DWORD PTR ds:0x445838
  4432aa:	jmp    DWORD PTR ds:0x44583c
  4432b0:	jmp    DWORD PTR ds:0x445840
  4432b6:	jmp    DWORD PTR ds:0x445844
  4432bc:	jmp    DWORD PTR ds:0x445848
  4432c2:	jmp    DWORD PTR ds:0x44584c
  4432c8:	jmp    DWORD PTR ds:0x445850
  4432ce:	jmp    DWORD PTR ds:0x445854
  4432d4:	jmp    DWORD PTR ds:0x445858
  4432da:	jmp    DWORD PTR ds:0x44585c
  4432e0:	jmp    DWORD PTR ds:0x445860
  4432e6:	jmp    DWORD PTR ds:0x445864
  4432ec:	jmp    DWORD PTR ds:0x44586c
  4432f2:	jmp    DWORD PTR ds:0x445870
  4432f8:	jmp    DWORD PTR ds:0x445874
  4432fe:	jmp    DWORD PTR ds:0x445878
  443304:	jmp    DWORD PTR ds:0x44587c
  44330a:	jmp    DWORD PTR ds:0x445880
  443310:	jmp    DWORD PTR ds:0x445884
  443316:	jmp    DWORD PTR ds:0x445888
  44331c:	jmp    DWORD PTR ds:0x44588c
  443322:	jmp    DWORD PTR ds:0x445890
  443328:	jmp    DWORD PTR ds:0x445894
  44332e:	jmp    DWORD PTR ds:0x445898
  443334:	jmp    DWORD PTR ds:0x44589c
  44333a:	jmp    DWORD PTR ds:0x4458a0
  443340:	jmp    DWORD PTR ds:0x4458a4
  443346:	jmp    DWORD PTR ds:0x4458a8
  44334c:	jmp    DWORD PTR ds:0x4458ac
  443352:	jmp    DWORD PTR ds:0x4458b0
  443358:	jmp    DWORD PTR ds:0x4458b4
  44335e:	jmp    DWORD PTR ds:0x4458b8
  443364:	jmp    DWORD PTR ds:0x4458bc
  44336a:	jmp    DWORD PTR ds:0x4458c0
  443370:	jmp    DWORD PTR ds:0x4458c4
  443376:	jmp    DWORD PTR ds:0x4458c8
  44337c:	jmp    DWORD PTR ds:0x4458cc
  443382:	jmp    DWORD PTR ds:0x4458d0
  443388:	jmp    DWORD PTR ds:0x4458d4
  44338e:	jmp    DWORD PTR ds:0x4458d8
  443394:	jmp    DWORD PTR ds:0x4458dc
  44339a:	jmp    DWORD PTR ds:0x4458e0
  4433a0:	jmp    DWORD PTR ds:0x4458e4
  4433a6:	jmp    DWORD PTR ds:0x4458e8
  4433ac:	jmp    DWORD PTR ds:0x4458ec
  4433b2:	jmp    DWORD PTR ds:0x4458f0
  4433b8:	jmp    DWORD PTR ds:0x4458f4
  4433be:	jmp    DWORD PTR ds:0x4458f8
  4433c4:	jmp    DWORD PTR ds:0x4458fc
  4433ca:	jmp    DWORD PTR ds:0x445900
  4433d0:	jmp    DWORD PTR ds:0x445904
  4433d6:	jmp    DWORD PTR ds:0x445908
  4433dc:	jmp    DWORD PTR ds:0x44590c
  4433e2:	jmp    DWORD PTR ds:0x445910
  4433e8:	jmp    DWORD PTR ds:0x445914
  4433ee:	jmp    DWORD PTR ds:0x445918
  4433f4:	jmp    DWORD PTR ds:0x44591c
  4433fa:	jmp    DWORD PTR ds:0x445920
  443400:	jmp    DWORD PTR ds:0x445924
  443406:	jmp    DWORD PTR ds:0x445928
  44340c:	jmp    DWORD PTR ds:0x44592c
  443412:	jmp    DWORD PTR ds:0x445930
  443418:	jmp    DWORD PTR ds:0x445934
  44341e:	jmp    DWORD PTR ds:0x445938
  443424:	jmp    DWORD PTR ds:0x44593c
  44342a:	jmp    DWORD PTR ds:0x445940
  443430:	jmp    DWORD PTR ds:0x445944
  443436:	jmp    DWORD PTR ds:0x445948
  44343c:	jmp    DWORD PTR ds:0x44594c
  443442:	jmp    DWORD PTR ds:0x445950
  443448:	jmp    DWORD PTR ds:0x445954
  44344e:	jmp    DWORD PTR ds:0x445958
  443454:	jmp    DWORD PTR ds:0x44595c
  44345a:	jmp    DWORD PTR ds:0x445960
  443460:	jmp    DWORD PTR ds:0x445964
  443466:	jmp    DWORD PTR ds:0x445968
  44346c:	jmp    DWORD PTR ds:0x44596c
  443472:	jmp    DWORD PTR ds:0x445970
  443478:	jmp    DWORD PTR ds:0x445974
  44347e:	jmp    DWORD PTR ds:0x445978
  443484:	jmp    DWORD PTR ds:0x44597c
  44348a:	jmp    DWORD PTR ds:0x445980
