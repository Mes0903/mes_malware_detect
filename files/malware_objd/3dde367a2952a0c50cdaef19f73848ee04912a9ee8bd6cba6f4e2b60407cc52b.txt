
3dde367a2952a0c50cdaef19f73848ee04912a9ee8bd6cba6f4e2b60407cc52b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	xchg   esp,eax
  4018d8:	push   edi
  4018d9:	cld    
  4018da:	repnz add DWORD PTR [ebx+0x5e4b8383],0xffffff83
  4018e2:	sub    DWORD PTR [eax],0x31
  4018e5:	es cmp al,0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	jl     0x401961
  4018f1:	jo     0x401966
  4018f3:	jo     0x401940
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	and    DWORD PTR [ebp+0x2cba21bd],ebp
  40198c:	xchg   ebp,eax
  40198d:	inc    esp
  40198e:	mov    ch,0x19
  401990:	scas   eax,DWORD PTR es:[edi]
  401991:	jmp    0x3ecf:0xa2525054
  401998:	mul    BYTE PTR [ecx]
  40199a:	mov    ah,BYTE PTR [esi]
  40199c:	ds call 0x5196fd0d
  4019a2:	pop    ss
  4019a3:	test   eax,0x979fa60d
  4019a8:	stos   BYTE PTR es:[edi],al
  4019a9:	lock in al,dx
  4019ab:	push   ss
  4019ac:	pop    es
  4019ad:	fadd   QWORD PTR [edi+0x6cd5f996]
  4019b3:	out    0xf7,eax
  4019b5:	imul   edx,DWORD PTR [ebp-0x4c],0xffffffe9
  4019b9:	mov    ebp,0x4bee9117
  4019be:	gs retf 0x7d1c
  4019c2:	mov    dh,0xc9
  4019c4:	(bad)  
  4019c5:	loop   0x4019d8
  4019c7:	and    al,BYTE PTR [ecx+0x52]
  4019ca:	lock mov cs,ecx
  4019cd:	sar    BYTE PTR [eax+0x4736f5ed],0x12
  4019d4:	and    al,0xd1
  4019d6:	and    ah,BYTE PTR [ecx]
  4019d8:	(bad)  
  4019d9:	(bad)  
  4019da:	stos   BYTE PTR es:[edi],al
  4019db:	mov    ebp,0x38771a15
  4019e0:	xchg   ebx,eax
  4019e1:	inc    edi
  4019e2:	sub    DWORD PTR [edi-0x34b4ca9b],0x9
  4019e9:	ret    0x959b
  4019ec:	pop    ss
  4019ed:	push   ebp
  4019ee:	test   BYTE PTR [edi+0x2ffea14a],cl
  4019f4:	and    BYTE PTR [eax+esi*2],dh
  4019f7:	in     al,dx
  4019f8:	adc    BYTE PTR [esp+edi*4+0x55],ah
  4019fc:	ror    BYTE PTR [esi+0x1570dff8],0x69
  401a03:	pop    esi
  401a04:	inc    ebx
  401a05:	push   ds
  401a06:	loop   0x4019b3
  401a08:	call   0xf82312b5
  401a0d:	mov    dl,0x9c
  401a0f:	call   0xfa38dce4
  401a14:	ret    0xd609
  401a17:	fcom   QWORD PTR [ebx-0x71]
  401a1a:	in     eax,dx
  401a1b:	int3   
  401a1c:	or     eax,0x5e8cbde0
  401a21:	outs   dx,DWORD PTR ds:[esi]
  401a22:	push   cs
  401a23:	into   
  401a24:	inc    edi
  401a25:	and    ecx,DWORD PTR [ecx-0x462c7618]
  401a2b:	in     al,dx
  401a2c:	ret    0x4dc1
  401a2f:	pusha  
  401a30:	popf   
  401a31:	dec    eax
  401a32:	fild   DWORD PTR [esi]
  401a34:	inc    ebp
  401a35:	cmp    DWORD PTR [ebx],edi
  401a37:	and    esp,DWORD PTR [edi+0x3c]
  401a3a:	pop    ecx
  401a3b:	rcl    DWORD PTR [esi+eax*8],cl
  401a3e:	jo     0x401a08
  401a40:	addr16 xchg ebp,eax
  401a42:	mov    ecx,0x517472c4
  401a47:	stos   BYTE PTR es:[edi],al
  401a48:	or     BYTE PTR [ebp-0x60dbd25a],dh
  401a4e:	or     al,0x60
  401a50:	sbb    al,BYTE PTR [edx]
  401a52:	aas    
  401a53:	mov    edi,0xed78fb13
  401a58:	test   al,0xf8
  401a5a:	or     eax,0x1c5bb18f
  401a5f:	inc    eax
  401a60:	sub    eax,0x5e670069
  401a65:	cwde   
  401a66:	scas   al,BYTE PTR es:[edi]
  401a67:	cwde   
  401a68:	fadd   DWORD PTR [ebx+0x4534ce97]
  401a6e:	and    ebx,DWORD PTR [eax]
  401a70:	mov    edi,0xaa22dc7a
  401a75:	adc    eax,DWORD PTR [ebx]
  401a77:	jge    0x401ab4
  401a79:	inc    ebp
  401a7a:	mov    ecx,0xc8c3422a
  401a7f:	sbb    ecx,esp
  401a81:	add    ebp,DWORD PTR [edi+0x66]
  401a84:	mov    ch,0xe6
  401a86:	shr    DWORD PTR ds:0x138b7d2c,cl
  401a8c:	call   0xd357d4e8
  401a91:	or     BYTE PTR [eax-0x3fc69d1c],0xd
  401a98:	dec    ebp
  401a99:	mov    esp,0xcaeff693
  401a9e:	xchg   edi,eax
  401a9f:	or     bl,0x70
  401aa2:	xchg   ebp,eax
  401aa3:	dec    edi
  401aa4:	cdq    
  401aa5:	mov    edx,0xcf188652
  401aaa:	adc    al,0xa8
  401aac:	jmp    0x401a4e
  401aae:	sub    al,0x43
  401ab0:	imul   edi,DWORD PTR [eax+0x4e],0x6f8b728a
  401ab7:	pusha  
  401ab8:	mov    BYTE PTR [ebp+ebp*1-0x61],dh
  401abc:	in     al,0xfa
  401abe:	add    al,0x77
  401ac0:	and    al,0x22
  401ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ac3:	test   DWORD PTR [esi],esp
  401ac5:	xlat   BYTE PTR ds:[ebx]
  401ac6:	dec    bp
  401ac8:	popa   
  401ac9:	mov    ah,0x26
  401acb:	aas    
  401acc:	or     eax,0x9a20ec40
  401ad1:	adc    eax,0x97760f64
  401ad6:	push   ebx
  401ad7:	lds    eax,FWORD PTR [eax+0x75541060]
  401add:	sahf   
  401ade:	retf   
  401adf:	mov    dl,0x85
  401ae1:	pop    ebp
  401ae2:	mov    eax,0x1d544e82
  401ae7:	mov    bh,0xd2
  401ae9:	push   ebp
  401aea:	(bad)  
  401aeb:	pop    esp
  401aec:	fisubr WORD PTR [eax]
  401aee:	xor    esi,edi
  401af0:	cli    
  401af1:	scas   eax,DWORD PTR es:[edi]
  401af2:	jmp    0x7378d8ec
  401af7:	enterw 0xa670,0x1b
  401afc:	jp     0x401aa3
  401afe:	jae    0x401ac1
  401b00:	pop    edx
  401b01:	fimul  DWORD PTR [edi+0x5f299b3b]
  401b07:	arpl   WORD PTR [edi+ecx*2+0x72],di
  401b0b:	xor    esi,DWORD PTR [eax]
  401b0d:	pop    esi
  401b0f:	jo     0x401b23
  401b11:	repz mov al,BYTE PTR [ecx-0x6b]
  401b15:	push   0x7f19edc8
  401b1a:	out    0xf9,eax
  401b1c:	push   es
  401b1d:	fsubr  DWORD PTR [edi-0x18]
  401b20:	test   eax,0xb8472404
  401b25:	dec    edx
  401b26:	pop    ebx
  401b27:	sbb    cl,BYTE PTR [edi-0x46]
  401b2a:	sbb    al,0x70
  401b2c:	lea    edi,[edx]
  401b2e:	out    0x3f,al
  401b30:	xchg   ebx,eax
  401b31:	sub    esi,DWORD PTR [ecx-0x1636828]
  401b37:	addr16 loope 0x401b5e
  401b3a:	dec    esi
  401b3b:	retf   0xf458
  401b3e:	pop    edx
  401b3f:	rcl    BYTE PTR [eax-0x469ed1e],cl
  401b45:	les    eax,FWORD PTR [edi]
  401b47:	test   BYTE PTR [esp+esi*4+0x3d],cl
  401b4b:	mov    edx,DWORD PTR [ebp*1+0x237afc4e]
  401b52:	lds    ebx,FWORD PTR [eax+0x2b]
  401b55:	das    
  401b56:	adc    al,0x3c
  401b58:	pop    ecx
  401b59:	test   eax,0x7b50a663
  401b5e:	adc    BYTE PTR [eax-0x35],bl
  401b61:	push   es
  401b62:	mov    BYTE PTR [eax+0x0],0xb0
  401b66:	push   ss
  401b67:	fwait
  401b68:	push   eax
  401b69:	in     eax,0x3d
  401b6b:	stc    
  401b6c:	mov    dh,0x9d
  401b6e:	repz add al,0xe7
  401b71:	dec    ebx
  401b72:	mov    ecx,0x4192764b
  401b77:	loope  0x401b4f
  401b79:	jge    0x401ba5
  401b7b:	mov    esi,edi
  401b7d:	stos   BYTE PTR es:[edi],al
  401b7e:	xchg   edi,eax
  401b7f:	inc    ecx
  401b80:	mov    edi,0x6111d1d
  401b85:	mov    cl,0x87
  401b87:	xchg   edx,eax
  401b88:	sbb    al,0x30
  401b8a:	shl    BYTE PTR [ecx-0x47],cl
  401b8d:	push   edx
  401b8e:	mov    ds:0x73efe77c,eax
  401b93:	jns    0x401b92
  401b95:	jnp    0x401c09
  401b97:	cli    
  401b98:	ror    BYTE PTR [edx+0x1661cc8d],0x19
  401b9f:	push   ds
  401ba0:	je     0x401c1f
  401ba2:	fcomp  DWORD PTR [esi+0x35]
  401ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ba6:	in     al,dx
  401ba7:	inc    ebp
  401ba8:	pop    ss
  401ba9:	mov    al,ds:0x13d41909
  401bae:	xchg   edx,eax
  401baf:	mov    eax,ds:0xf948cf63
  401bb4:	ret    0x8c6a
  401bb7:	sbb    al,0xa1
  401bb9:	pop    edi
  401bba:	pop    dx
  401bbc:	push   es
  401bbd:	out    dx,al
  401bbe:	clc    
  401bbf:	shl    BYTE PTR [ebx+0x8],0x92
  401bc3:	inc    eax
  401bc4:	mov    esi,0xa48d9616
  401bc9:	sbb    BYTE PTR [esi],al
  401bcb:	inc    eax
  401bcc:	mov    esp,0xf0d390fa
  401bd1:	and    edx,DWORD PTR [esi]
  401bd3:	das    
  401bd4:	aaa    
  401bd5:	cdq    
  401bd6:	rcl    BYTE PTR [edx-0x4cfc0596],0x55
  401bdd:	push   edx
  401bde:	in     eax,dx
  401bdf:	push   esi
  401be0:	jno    0x401bfe
  401be2:	mov    eax,0x69d03345
  401be7:	scas   eax,DWORD PTR es:[edi]
  401be8:	hlt    
  401be9:	repnz (bad)
  401bec:	mov    ebx,0x314552cd
  401bf1:	inc    ebx
  401bf2:	push   ss
  401bf3:	xor    BYTE PTR [ebx],cl
  401bf5:	(bad)  
  401bf6:	jge    0x401bf1
  401bf8:	or     eax,0xe5690825
  401bfd:	mov    ebx,DWORD PTR [ebx]
  401bff:	(bad)  
  401c00:	jmp    0x92229e5c
  401c05:	xlat   BYTE PTR ds:[ebx]
  401c06:	sbb    edx,DWORD PTR [eax+0x322d7e1b]
  401c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c0d:	xchg   esp,eax
  401c0e:	sub    ecx,DWORD PTR [esp+edx*2+0x2926c7f3]
  401c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c16:	(bad)  
  401c17:	pop    esi
  401c18:	fcomi  st,st(3)
  401c1a:	cmc    
  401c1b:	jno    0x401c2a
  401c1d:	pop    si
  401c1f:	das    
  401c20:	int    0x4b
  401c22:	jb     0x401c28
  401c24:	mov    ebx,0x6d28a89a
  401c29:	cli    
  401c2a:	mov    al,0xce
  401c2c:	push   esp
  401c2d:	mov    al,ds:0xb1308835
  401c32:	inc    esi
  401c33:	mov    ecx,0xa28d8d0a
  401c38:	repnz (bad) 
  401c3a:	test   eax,ebx
  401c3c:	stc    
  401c3d:	sar    BYTE PTR [ecx],cl
  401c3f:	or     ebp,DWORD PTR [ecx]
  401c41:	cmp    eax,0xbef8836e
  401c47:	push   ecx
  401c48:	mov    eax,0x6f382cad
  401c4d:	dec    esi
  401c4e:	out    dx,eax
  401c4f:	pusha  
  401c50:	nop
  401c51:	(bad)  
  401c53:	shl    eax,0x7d
  401c56:	(bad)  
  401c57:	sub    ah,BYTE PTR [eax-0x16]
  401c5a:	mov    edi,0x16b6985a
  401c5f:	and    dl,ah
  401c61:	xor    esp,DWORD PTR ds:[ebx+0x28]
  401c65:	or     BYTE PTR [ebp+0x70],0x48
  401c69:	push   esp
  401c6a:	mov    ds:0xe9af43c4,eax
  401c6f:	pusha  
  401c70:	dec    ebx
  401c71:	sbb    BYTE PTR [edi+0x1b],0xe9
  401c75:	sub    eax,0xa31cb0f4
  401c7a:	mov    eax,0x9526a0a
  401c7f:	xchg   ebp,eax
  401c80:	sbb    al,0x52
  401c82:	int    0x2d
  401c84:	(bad)  
  401c85:	out    0xdd,al
  401c87:	xchg   ecx,ecx
  401c89:	cmp    ch,cl
  401c8b:	or     al,0xd2
  401c8d:	push   ebx
  401c8e:	and    dl,BYTE PTR [edi-0x27]
  401c91:	stos   BYTE PTR es:[edi],al
  401c92:	xor    eax,0x8fa296ed
  401c97:	xor    al,0xd0
  401c99:	ss jle 0x401cbf
  401c9c:	cmp    eax,0xbd0be9d7
  401ca1:	retf   
  401ca2:	jne    0x401d08
  401ca4:	inc    esi
  401ca5:	mov    ah,0x7a
  401ca7:	in     eax,0x2c
  401ca9:	jb     0x401d1f
  401cab:	lahf   
  401cac:	or     al,0x98
  401cae:	fisubr DWORD PTR [ebp+0x84a14ba]
  401cb4:	pop    ecx
  401cb5:	lahf   
  401cb6:	add    al,0xb0
  401cb8:	mov    ecx,fs
  401cba:	icebp  
  401cbb:	mov    ebx,0xc8f0bdce
  401cc0:	adc    al,0x7e
  401cc2:	sbb    al,0x87
  401cc4:	xchg   ebp,eax
  401cc5:	and    BYTE PTR ds:0x38eca92e,bh
  401ccb:	iret   
  401ccc:	dec    edi
  401ccd:	cmp    eax,0xe0d4d243
  401cd2:	and    BYTE PTR [edi-0x19],dl
  401cd5:	test   eax,0x9e86656d
  401cda:	xchg   DWORD PTR [ebx+0x56],esp
  401cdd:	cmp    DWORD PTR [esi],ecx
  401cdf:	mov    al,ds:0xc481ab2b
  401ce4:	cld    
  401ce5:	inc    ebp
  401ce6:	repnz scas al,BYTE PTR es:[edi]
  401ce8:	ret    0xbfb6
  401ceb:	test   DWORD PTR [eax+0x0],ecx
  401cee:	mov    WORD PTR [ecx+0x6d96dc8],ds
  401cf4:	and    al,BYTE PTR [ecx-0x24]
  401cf7:	or     BYTE PTR [ebp+0x38e0ae1a],dh
  401cfd:	cmp    DWORD PTR [esi+ebp*1],esi
  401d00:	jge    0x401d08
  401d02:	xchg   ecx,eax
  401d03:	pushf  
  401d04:	pop    ebp
  401d05:	add    ch,bh
  401d07:	pop    edx
  401d08:	cld    
  401d09:	adc    dh,0x64
  401d0c:	xchg   ebp,eax
  401d0d:	jbe    0x401d49
  401d0f:	mov    ebx,0xbd7d9c4a
  401d14:	in     eax,0x93
  401d16:	jge    0x401d95
  401d18:	xor    dl,bl
  401d1a:	(bad)  
  401d1b:	mov    esp,0xb48eec11
  401d20:	inc    edi
  401d21:	add    DWORD PTR [ebp-0xa],edx
  401d24:	int    0x7c
  401d26:	jle    0x401d35
  401d28:	(bad)  
  401d2a:	mov    WORD PTR [ecx],ds
  401d2c:	adc    esp,DWORD PTR [eax]
  401d2e:	mov    al,ds:0x663f2b91
  401d33:	push   ss
  401d34:	lds    edi,FWORD PTR [edx]
  401d36:	xchg   ebx,eax
  401d37:	mov    DWORD PTR [edi-0x4dd71f10],eax
  401d3d:	popa   
  401d3e:	xor    ebx,eax
  401d40:	xor    ah,cl
  401d42:	and    esi,DWORD PTR [ebp-0x5b]
  401d45:	in     al,0xc3
  401d47:	out    dx,al
  401d48:	(bad)  
  401d4b:	cdq    
  401d4c:	jno    0x401dab
  401d4e:	shr    BYTE PTR [ebp+0x1f],cl
  401d51:	(bad)  
  401d52:	pop    edx
  401d53:	das    
  401d54:	xor    ch,ah
  401d56:	cmp    DWORD PTR [ebp-0x4e],edi
  401d59:	fwait
  401d5a:	jmp    0x401d84
  401d5c:	in     al,dx
  401d5d:	ins    DWORD PTR es:[edi],dx
  401d5e:	xchg   ecx,eax
  401d5f:	jmp    0x401d70
  401d61:	add    al,0x71
  401d63:	retf   
  401d64:	retf   
  401d65:	mov    al,0xbd
  401d67:	jae    0x401d8a
  401d69:	adc    BYTE PTR ds:0xf8c79e59,al
  401d6f:	into   
  401d70:	dec    edi
  401d71:	sbb    DWORD PTR [ebx-0x4cf8973a],esp
  401d77:	mov    bp,0xdda5
  401d7b:	lods   al,BYTE PTR ds:[esi]
  401d7c:	out    0x1,eax
  401d7e:	out    0xdc,al
  401d80:	rol    BYTE PTR [ecx+0x24],1
  401d83:	ror    esi,1
  401d85:	mov    eax,ds:0x5af88cf8
  401d8a:	hlt    
  401d8b:	aad    0xa6
  401d8d:	pop    ss
  401d8e:	and    DWORD PTR [ebx-0x4f],0xffffff83
  401d92:	sbb    eax,0x4261c9bb
  401d97:	push   0x55
  401d99:	lock xor eax,0xaed0c53c
  401d9f:	push   ecx
  401da0:	lock sub bh,BYTE PTR [eax]
  401da3:	xchg   esp,eax
  401da4:	repnz or BYTE PTR [edi],ah
  401da7:	bound  ebx,QWORD PTR [edi+0x7a748e14]
  401dad:	jae    0x401d93
  401daf:	mov    eax,ds:0x28a0c28a
  401db4:	xlat   BYTE PTR ds:[ebx]
  401db5:	aad    0x43
  401db7:	fs fs jl 0x401d80
  401dbb:	inc    ebp
  401dbc:	rol    BYTE PTR [eax],1
  401dbe:	xchg   esi,eax
  401dbf:	inc    esp
  401dc0:	stos   DWORD PTR es:[edi],eax
  401dc1:	mov    edx,0xb6aeff15
  401dc6:	xchg   esi,eax
  401dc7:	(bad)
  401dca:	test   BYTE PTR [esi+0x9],cl
  401dcd:	in     al,0x4d
  401dcf:	test   BYTE PTR [ebp-0x3a9b4aa0],cl
  401dd5:	int3   
  401dd6:	mov    dl,BYTE PTR [eax]
  401dd8:	pop    esi
  401dd9:	inc    ecx
  401dda:	enter  0xfc23,0xe0
  401dde:	(bad)  
  401ddf:	jns    0x401d6b
  401de1:	jp     0x401e39
  401de3:	stos   BYTE PTR es:[edi],al
  401de4:	loop   0x401e1c
  401de6:	mov    edi,0x9a55516
  401deb:	jl     0x401dda
  401ded:	pop    edi
  401dee:	dec    ebp
  401def:	clc    
  401df0:	stc    
  401df1:	imul   ecx,DWORD PTR [edi+0xb751a99],0xe79bd59
  401dfb:	fcom   QWORD PTR [eax+0x317c05d8]
  401e01:	mov    esi,0x85ed9bac
  401e06:	dec    ebx
  401e07:	ja     0x401e34
  401e09:	push   es
  401e0a:	das    
  401e0b:	lahf   
  401e0c:	jp     0x401dd7
  401e0e:	adc    al,BYTE PTR [edi]
  401e10:	(bad)  
  401e11:	fdivr  st(2),st
  401e13:	mov    ss,WORD PTR [ecx+ebp*4]
  401e16:	call   0x17af:0xa8177779
  401e1d:	pop    ss
  401e1e:	sbb    ebx,ebx
  401e20:	push   ecx
  401e21:	icebp  
  401e22:	xchg   BYTE PTR [esi-0x7d2d3291],ch
  401e28:	jnp    0x401dab
  401e2a:	jmp    0xf6bf:0x658fb691
  401e31:	fstp   DWORD PTR [edx+0x3d87dc]
  401e37:	cmp    esi,DWORD PTR [ebx+eiz*4-0x78]
  401e3b:	stos   BYTE PTR es:[edi],al
  401e3c:	cmc    
  401e3d:	pop    esp
  401e3e:	fs mov bh,0x4a
  401e41:	rol    DWORD PTR [ecx+0x7d729e17],1
  401e47:	cmp    bh,BYTE PTR [eax+0x2f]
  401e4a:	pop    DWORD PTR [edi+0x79db8f1d]
  401e50:	mov    ebp,0x4cb2698
  401e55:	out    dx,eax
  401e56:	arpl   WORD PTR [eax+0x1b94dadd],ax
  401e5c:	mov    al,0x16
  401e5e:	popa   
  401e5f:	sub    BYTE PTR [eax-0x63],ch
  401e62:	mov    al,ds:0xda63c44a
  401e67:	add    bl,BYTE PTR [edx+ecx*2-0x60f44e43]
  401e6e:	jnp    0x401eb3
  401e70:	xor    eax,0xe990bc5e
  401e75:	(bad)  
  401e76:	push   DWORD PTR [eax-0x37]
  401e79:	sub    BYTE PTR [eax+eax*1+0xa17ffeb],ah
  401e80:	arpl   ax,si
  401e82:	or     eax,0x7edaf22a
  401e87:	xchg   BYTE PTR [eax-0xa],cl
  401e8a:	pop    es
  401e8b:	rcl    DWORD PTR [esi],0x26
  401e8e:	dec    esi
  401e8f:	dec    edi
  401e90:	pushf  
  401e91:	cmp    al,0xb8
  401e93:	mov    ds:0xa387e3ad,eax
  401e98:	fsave  [ecx-0x7572ec56]
  401e9f:	dec    eax
  401ea0:	jmp    0xa1b00a66
  401ea5:	jge    0x401e45
  401ea7:	push   esi
  401ea8:	jae    0x401f0c
  401eaa:	imul   esi,DWORD PTR [edi+ecx*8-0x997488a],0xf5beab6f
  401eb5:	in     eax,0xd4
  401eb7:	xchg   ebx,eax
  401eb8:	ret    
  401eb9:	xchg   edi,eax
  401eba:	repnz dec ebx
  401ebc:	aad    0x11
  401ebe:	inc    BYTE PTR [ebp+0x7379962b]
  401ec4:	jns    0x401ef1
  401ec6:	xchg   esi,eax
  401ec7:	jo     0x401edd
  401ec9:	arpl   WORD PTR [ebp+0x26532a13],ax
  401ecf:	mov    esi,0x631c72b0
  401ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ed5:	inc    ebx
  401ed6:	jg     0x401e68
  401ed8:	fist   DWORD PTR [ecx+eax*1-0x10]
  401edc:	fs loopne 0x401e5f
  401edf:	data16 mov bh,0xf1
  401ee2:	add    eax,edi
  401ee4:	jmp    0xe8cf9ce1
  401ee9:	ret    0xdb93
  401eec:	ret    0xe543
  401eef:	and    al,0x10
  401ef1:	push   0xfffffff2
  401ef3:	inc    edi
  401ef4:	pop    ebx
  401ef5:	mov    ah,0x22
  401ef7:	ret    
  401ef8:	sbb    DWORD PTR [esi+0x2b8f1b9f],eax
  401efe:	ret    
  401eff:	stc    
  401f00:	cmc    
  401f01:	outs   dx,DWORD PTR ds:[esi]
  401f02:	jl     0x401eab
  401f04:	ins    BYTE PTR es:[edi],dx
  401f05:	or     DWORD PTR [eax+0x4b],ebx
  401f08:	(bad)  
  401f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f0a:	jl     0x401ec0
  401f0c:	lods   al,BYTE PTR ds:[esi]
  401f0d:	loop   0x401ec0
  401f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f10:	(bad)  
  401f11:	or     eax,0xd87b3516
  401f16:	test   BYTE PTR [esi-0x2],cl
  401f19:	fisttp WORD PTR [edi-0x2a80f455]
  401f1f:	push   ebx
  401f20:	daa    
  401f21:	popa   
  401f22:	mov    dl,0x7e
  401f24:	mov    DWORD PTR [ecx+0x3e15133c],esi
  401f2a:	mov    ebx,0xa40a3902
  401f2f:	cmc    
  401f30:	dec    ecx
  401f31:	scas   al,BYTE PTR es:[edi]
  401f32:	jge    0x401f6f
  401f34:	scas   eax,DWORD PTR es:[edi]
  401f35:	mov    al,ds:0x8d351546
  401f3a:	hlt    
  401f3b:	sub    ebx,eax
  401f3d:	cwde   
  401f3e:	sbb    ebp,ebp
  401f40:	sub    ebp,0x22aeade5
  401f46:	push   ebx
  401f47:	xlat   BYTE PTR ds:[ebx]
  401f48:	jb     0x401ed6
  401f4a:	jecxz  0x401f61
  401f4c:	add    edx,DWORD PTR [eax+0x68]
  401f4f:	and    edx,DWORD PTR [eax-0x3e]
  401f52:	je     0x401fc0
  401f54:	jbe    0x401f62
  401f56:	pop    es
  401f57:	add    al,BYTE PTR [esi-0x431d8879]
  401f5d:	test   al,0x76
  401f5f:	mov    ecx,0x85817421
  401f64:	jb     0x401fcc
  401f66:	inc    edx
  401f67:	ins    BYTE PTR es:[edi],dx
  401f68:	(bad)  
  401f69:	ins    DWORD PTR es:[edi],dx
  401f6a:	jmp    0x7195ec80
  401f6f:	cmp    DWORD PTR [esi],ebp
  401f71:	mov    ch,al
  401f73:	mov    bh,0xcb
  401f75:	ret    
  401f76:	std    
  401f77:	shl    BYTE PTR [edx],cl
  401f79:	push   esi
  401f7a:	mov    esi,0xa5520feb
  401f7f:	add    edi,DWORD PTR [edi+edx*2]
  401f82:	inc    eax
  401f83:	inc    ebp
  401f84:	cld    
  401f85:	test   eax,0xb0ae7eed
  401f8a:	mov    ah,0x3e
  401f8c:	leave  
  401f8d:	adc    cl,BYTE PTR [edi-0x5f54a34e]
  401f93:	push   ebx
  401f94:	inc    eax
  401f95:	inc    BYTE PTR [ebx-0x6d]
  401f98:	nop
  401f99:	cmp    eax,0x153a5f29
  401f9e:	inc    esp
  401f9f:	call   0x33fac491
  401fa4:	out    0xf6,eax
  401fa6:	ss retf 
  401fa8:	pop    es
  401fa9:	mov    eax,fs
  401fab:	les    edi,FWORD PTR [ebx]
  401fad:	mov    ds:0x4064433f,al
  401fb2:	pop    ecx
  401fb3:	push   ebx
  401fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fb5:	dec    esp
  401fb6:	call   0xcdc94c6d
  401fbb:	push   ds
  401fbc:	ins    DWORD PTR es:[edi],dx
  401fbd:	xor    BYTE PTR [ebp+ebp*1-0x487f157d],ah
  401fc4:	cmc    
  401fc5:	pop    esi
  401fc6:	lods   eax,DWORD PTR ds:[esi]
  401fc7:	sub    eax,0xbad5f1cd
  401fcc:	outs   dx,DWORD PTR ds:[esi]
  401fcd:	push   cs
  401fce:	mov    dl,0x5
  401fd0:	sbb    DWORD PTR [edi],ebx
  401fd2:	mov    ah,al
  401fd4:	fadd   QWORD PTR [ebx-0x22fd5e90]
  401fda:	adc    BYTE PTR [esi],dh
  401fdc:	pop    esi
  401fdd:	mov    al,BYTE PTR [ecx]
  401fdf:	stos   BYTE PTR es:[edi],al
  401fe0:	or     al,0xa3
  401fe2:	cmp    esp,DWORD PTR [esp+ecx*2]
  401fe5:	ret    0x62ea
  401fe8:	gs aas 
  401fea:	scas   eax,DWORD PTR es:[edi]
  401feb:	pushf  
  401fec:	push   ds
  401fed:	test   BYTE PTR [edx+0x1a],dh
  401ff0:	in     eax,0x4a
  401ff2:	fwait
  401ff3:	dec    ebx
  401ff4:	test   al,0xb3
  401ff6:	outs   dx,BYTE PTR ds:[esi]
  401ff7:	jge    0x402011
  401ff9:	int    0xa7
  401ffb:	sub    dl,BYTE PTR [ebx+ebp*2-0x5b]
  401fff:	pop    ds
  402000:	(bad)  [eax+0x3284322b]
  402006:	popa   
  402007:	mov    ds:0x5bb89433,al
  40200c:	sub    edx,DWORD PTR [edi]
  40200e:	ins    DWORD PTR es:[edi],dx
  40200f:	data16 and BYTE PTR [ecx+0x2d],al
  402013:	and    eax,0x5acf37d
  402018:	fwait
  402019:	dec    esi
  40201a:	fidivr WORD PTR [ecx-0x6fde9b8]
  402020:	pusha  
  402021:	dec    esp
  402022:	jae    0x401ff2
  402024:	sbb    eax,0xf6e859bc
  402029:	stos   BYTE PTR es:[edi],al
  40202a:	pop    ds
  40202b:	inc    eax
  40202c:	jnp    0x40208c
  40202e:	push   ecx
  40202f:	inc    ebx
  402030:	or     BYTE PTR [eax+0x492b05a6],bh
  402036:	into   
  402037:	adc    DWORD PTR [esi],esp
  402039:	jl     0x40204c
  40203b:	retf   0x1ff7
  40203e:	fs ins BYTE PTR es:[edi],dx
  402040:	mov    ds:0x79be2173,al
  402045:	mov    edi,0xad3bada6
  40204a:	cmp    ebx,DWORD PTR [edx+ebp*1+0x1cfa218a]
  402051:	mov    edi,ebx
  402053:	stos   BYTE PTR es:[edi],al
  402054:	mov    WORD PTR [eax-0x601c56ef],gs
  40205a:	mov    ecx,esi
  40205c:	push   edi
  40205d:	leave  
  40205e:	(bad)
  402062:	cmp    DWORD PTR [ecx+0x60b4cd88],ebx
  402068:	out    dx,al
  402069:	in     eax,0x9a
  40206b:	mov    BYTE PTR [edi],bh
  40206d:	cdq    
  40206e:	mov    BYTE PTR [edx-0x48cc2c87],bl
  402074:	out    dx,al
  402075:	inc    ecx
  402076:	fwait
  402077:	or     ecx,DWORD PTR [eax]
  402079:	jl     0x402079
  40207b:	ret    0x1e4e
  40207e:	mov    eax,ds:0xcfb4a968
  402083:	idiv   BYTE PTR [eax+0x1263350b]
  402089:	fcom   DWORD PTR [edx+0x7d]
  40208c:	dec    esi
  40208d:	sbb    bl,0x9e
  402090:	or     ah,BYTE PTR [edx+0x7a978040]
  402096:	mov    edx,0x96a2ab88
  40209b:	ja     0x4020e5
  40209d:	test   DWORD PTR [esi-0x679e5712],0x15801769
  4020a7:	lock push 0x6060cd97
  4020ad:	daa    
  4020ae:	adc    DWORD PTR [edx+0x434fccac],0xdcb0882f
  4020b8:	das    
  4020b9:	cmp    BYTE PTR [edx-0x5e],cl
  4020bc:	cwde   
  4020bd:	inc    edx
  4020be:	mov    eax,ds:0xe3a931bf
  4020c3:	dec    esi
  4020c4:	in     eax,0x8e
  4020c6:	hlt    
  4020c7:	ret    
  4020c8:	lea    esp,[edx+ecx*8]
  4020cb:	inc    esp
  4020cc:	mov    dl,0xfb
  4020ce:	lods   eax,DWORD PTR ds:[esi]
  4020cf:	fiadd  WORD PTR [ebx+0x61]
  4020d2:	in     eax,0x87
  4020d4:	push   0xe173cd21
  4020d9:	mov    bl,al
  4020db:	fld    QWORD PTR [eax]
  4020dd:	jmp    0x40212d
  4020df:	xchg   esp,eax
  4020e0:	adc    cl,bl
  4020e2:	push   eax
  4020e3:	fcmovnb st,st(4)
  4020e5:	xor    esi,DWORD PTR [ebp-0x5]
  4020e8:	(bad)  
  4020e9:	aad    0x36
  4020eb:	ins    DWORD PTR es:[edi],dx
  4020ec:	retf   
  4020ed:	xchg   ebx,eax
  4020ee:	xor    BYTE PTR [edx-0x5a],dl
  4020f1:	dec    ebp
  4020f2:	mov    bl,0xe8
  4020f4:	xchg   ebx,eax
  4020f5:	outs   dx,BYTE PTR ds:[esi]
  4020f6:	int3   
  4020f7:	out    0xfd,al
  4020f9:	cmp    esp,DWORD PTR [edx+ebx*4+0x4e5aff9]
  402100:	test   eax,0x7dacc083
  402105:	add    ebp,esi
  402107:	xchg   edx,eax
  402108:	aaa    
  402109:	push   edi
  40210a:	cmp    al,0x28
  40210c:	inc    ebx
  40210d:	sub    DWORD PTR [esp+ecx*2+0x5788709c],ebp
  402114:	mov    dh,0x32
  402116:	fisub  WORD PTR [edx-0x4f0b96e0]
  40211c:	xor    BYTE PTR ds:0x74288439,dh
  402122:	push   ecx
  402123:	ret    0xab4d
  402126:	cld    
  402127:	inc    eax
  402128:	popa   
  402129:	cli    
  40212a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40212b:	inc    ecx
  40212c:	or     DWORD PTR [edx],eax
  40212e:	test   DWORD PTR [esi+0x6b],ecx
  402131:	(bad)  
  402132:	enter  0x78bc,0xa6
  402136:	neg    DWORD PTR [edx-0x39]
  402139:	cs dec ecx
  40213b:	clc    
  40213c:	jg     0x4021bb
  40213e:	stos   DWORD PTR es:[edi],eax
  40213f:	pop    ebp
  402140:	in     eax,0x79
  402142:	fst    QWORD PTR [eax]
  402144:	in     eax,dx
  402145:	or     BYTE PTR [ebp-0x78],0x5f
  402149:	sbb    BYTE PTR [edi],bl
  40214b:	push   edi
  40214c:	ret    
  40214d:	pusha  
  40214e:	call   0xbda0:0x694e665e
  402155:	adc    al,0x6e
  402157:	dec    esp
  402158:	int3   
  402159:	sbb    bh,cl
  40215b:	jp     0x4021a6
  40215d:	push   esi
  40215e:	and    BYTE PTR [esi+0xa],al
  402161:	and    cl,dh
  402163:	mov    ch,0xce
  402165:	ins    DWORD PTR es:[edi],dx
  402166:	xchg   ecx,eax
  402167:	push   esp
  402168:	popa   
  402169:	ins    DWORD PTR es:[edi],dx
  40216a:	lods   al,BYTE PTR ds:[esi]
  40216b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40216c:	xor    al,0xe
  40216e:	outs   dx,DWORD PTR ds:[esi]
  40216f:	gs repz inc ecx
  402172:	mul    BYTE PTR [esp+esi*4+0x513820aa]
  402179:	sbb    ebx,ebx
  40217b:	mov    eax,0xa9b500a9
  402180:	lea    esp,[edx+0x7c]
  402183:	mov    ebx,0x5dd4a970
  402188:	out    0x87,al
  40218a:	xchg   ecx,eax
  40218b:	mov    ch,0x3b
  40218d:	int3   
  40218e:	(bad)  
  40218f:	popa   
  402190:	jbe    0x40212d
  402192:	pushf  
  402193:	out    dx,eax
  402194:	jne    0x402196
  402196:	add    eax,0x4e53405f
  40219b:	lods   al,BYTE PTR ds:[esi]
  40219c:	std    
  40219d:	inc    ecx
  40219e:	(bad)  
  40219f:	cld    
  4021a0:	js     0x4021a3
  4021a2:	stos   BYTE PTR es:[edi],al
  4021a3:	jmp    0x181d:0x48aebd82
  4021aa:	shr    BYTE PTR [edx],1
  4021ac:	mov    bl,0xcf
  4021ae:	js     0x4021e9
  4021b0:	push   eax
  4021b1:	das    
  4021b2:	in     al,0x93
  4021b4:	push   edx
  4021b5:	cmc    
  4021b6:	pop    ecx
  4021b7:	popa   
  4021b8:	into   
  4021b9:	pop    ebx
  4021ba:	popa   
  4021bb:	out    dx,eax
  4021bc:	xchg   edi,eax
  4021bd:	ret    
  4021be:	sbb    BYTE PTR [edi+0x3ad6be51],dl
  4021c4:	retf   0x3753
  4021c7:	pusha  
  4021c8:	repz dec edx
  4021ca:	jecxz  0x40215d
  4021cc:	mov    BYTE PTR [ebx],bl
  4021ce:	hlt    
  4021cf:	cmp    DWORD PTR [edi+0x1b117e89],ecx
  4021d5:	gs xchg esi,eax
  4021d7:	stos   DWORD PTR es:[edi],eax
  4021d8:	and    BYTE PTR [edi+0x2c],cl
  4021db:	push   eax
  4021dc:	jl     0x4021e0
  4021de:	or     ch,BYTE PTR ds:0x3b514cc9
  4021e4:	and    eax,0x61c2bc5c
  4021e9:	ss icebp 
  4021eb:	push   es
  4021ec:	jp     0x4021a7
  4021ee:	cmc    
  4021ef:	push   ecx
  4021f0:	fwait
  4021f1:	and    edx,eax
  4021f3:	xor    DWORD PTR [edi-0x79],ecx
  4021f6:	mov    gs,WORD PTR [edi-0x5f]
  4021f9:	or     ebp,DWORD PTR [ebx-0x7f]
  4021fc:	jne    0x402236
  4021fe:	xchg   edi,eax
  4021ff:	lea    eax,[eax+0x6b7cc190]
  402205:	cmp    DWORD PTR [edi+0x3e314adc],edx
  40220b:	ins    BYTE PTR es:[edi],dx
  40220c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40220d:	addr16 mov ds:0xe6da,eax
  402211:	pop    ds
  402212:	test   DWORD PTR [edx+0x7b6aa8fd],0x9536fc31
  40221c:	pusha  
  40221d:	das    
  40221e:	out    dx,al
  40221f:	fnstcw WORD PTR [eax]
  402221:	jnp    0x4021c4
  402223:	popf   
  402224:	not    edx
  402226:	mov    ah,0x3
  402228:	inc    ecx
  402229:	mov    ecx,0xe96150b5
  40222e:	jns    0x4021de
  402230:	push   DWORD PTR [eax+0x3e]
  402233:	lds    ecx,FWORD PTR [edx+0x51]
  402236:	jno    0x402289
  402238:	cmp    BYTE PTR [ebx],ch
  40223a:	jne    0x40229f
  40223c:	push   0x498665bb
  402241:	dec    ebp
  402242:	mov    dl,0xe2
  402244:	jp     0x402207
  402246:	mov    bl,0x28
  402248:	pop    ebp
  402249:	sub    eax,0x1d25e06
  40224e:	es inc eax
  402250:	xchg   esp,eax
  402251:	(bad)  
  402252:	mov    al,0xe3
  402254:	push   ebp
  402255:	mov    WORD PTR [ebp+0x6c],?
  402258:	mov    esi,0x60b4fd90
  40225d:	loop   0x402276
  40225f:	mov    bl,0xf0
  402261:	repz pop ebx
  402263:	adc    BYTE PTR [eax-0x33],dl
  402266:	or     DWORD PTR [ecx+0x43],edi
  402269:	jmp    0x78cdb38e
  40226e:	mov    WORD PTR [esi+0x18c8aec1],es
  402274:	add    edx,DWORD PTR [ebx-0x3bd0c611]
  40227a:	sub    BYTE PTR [eax],al
  40227c:	sahf   
  40227d:	ss xchg esi,eax
  40227f:	(bad)  
  402280:	jns    0x4022e7
  402282:	add    dl,BYTE PTR [esi-0x26ef017a]
  402288:	sti    
  402289:	out    dx,eax
  40228a:	sub    BYTE PTR [esi],ah
  40228c:	adc    bh,BYTE PTR [ebp-0x48]
  40228f:	xlat   BYTE PTR ds:[ebx]
  402290:	push   edx
  402291:	jge    0x4022f1
  402293:	jns    0x4022b2
  402295:	and    esi,DWORD PTR [edi-0x2d595405]
  40229b:	out    dx,eax
  40229c:	pop    esi
  40229d:	xacquire xchg BYTE PTR [esi-0x57],ah
  4022a1:	lea    edx,[edx-0x3ddbb923]
  4022a7:	outs   dx,BYTE PTR ds:[esi]
  4022a8:	pop    ds
  4022a9:	dec    esp
  4022aa:	fs cli 
  4022ac:	ror    DWORD PTR [eax-0x7f],0x74
  4022b0:	je     0x4022c0
  4022b2:	test   DWORD PTR [eiz*4+0x5d4ea9c2],edx
  4022b9:	jno    0x4022ff
  4022bb:	sub    al,0x6f
  4022bd:	add    bh,BYTE PTR gs:[edx+0x13]
  4022c1:	sbb    al,0xcd
  4022c3:	pop    ss
  4022c4:	scas   al,BYTE PTR es:[edi]
  4022c5:	cmp    al,0x12
  4022c7:	retf   0x2b57
  4022ca:	cmp    DWORD PTR [ecx+0x6f],ecx
  4022cd:	cld    
  4022ce:	mov    edi,0xef8eca1
  4022d3:	push   ebp
  4022d4:	mov    bl,0x73
  4022d6:	test   BYTE PTR [eax],dh
  4022d8:	mov    ds:0x4bbdbbee,al
  4022dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022de:	retf   0x7886
  4022e1:	push   eax
  4022e2:	sub    al,dh
  4022e4:	shl    BYTE PTR [ecx-0x41],cl
  4022e7:	add    bl,BYTE PTR [edx+0x5e3af4d0]
  4022ed:	aas    
  4022ee:	aad    0xfc
  4022f0:	test   DWORD PTR [esi+0x38],ebx
  4022f3:	jns    0x402287
  4022f5:	dec    esp
  4022f6:	push   ecx
  4022f7:	(bad)  
  4022f8:	cmc    
  4022f9:	loope  0x402334
  4022fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022fc:	xchg   ecx,eax
  4022fd:	mov    cl,0x6b
  4022ff:	or     DWORD PTR [ebx+0x4f],ebx
  402302:	pop    ebx
  402303:	ins    DWORD PTR es:[di],dx
  402305:	push   es
  402306:	mov    DWORD PTR [eax+0xc],edx
  402309:	ja     0x402297
  40230b:	rcr    BYTE PTR [edx-0x4f],1
  40230e:	outs   dx,DWORD PTR ds:[esi]
  40230f:	dec    ecx
  402310:	mov    WORD PTR [ebp-0x27],es
  402313:	xchg   ecx,eax
  402314:	push   ebp
  402315:	xor    BYTE PTR [ecx+0xbd028dd],dl
  40231b:	xchg   DWORD PTR [ebx],esi
  40231d:	leave  
  40231e:	push   bp
  402320:	daa    
  402321:	out    0xaa,eax
  402323:	shl    dl,1
  402325:	add    BYTE PTR [esi-0x5b9f7891],dl
  40232b:	jne    0x4023a8
  40232d:	mov    dh,0x1e
  40232f:	xor    eax,0xcedf2b01
  402334:	sbb    ax,0xcc9f
  402338:	popf   
  402339:	int    0xcf
  40233b:	add    ebx,DWORD PTR [esp+ecx*1+0x14427704]
  402342:	lds    ecx,FWORD PTR [ebp+eiz*8+0x10]
  402346:	jnp    0x4023c2
  402348:	xor    al,0xe1
  40234a:	and    bh,dl
  40234c:	inc    eax
  40234d:	sbb    ecx,esi
  40234f:	nop
  402350:	pop    ds
  402351:	or     al,0x3a
  402353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402354:	xlat   BYTE PTR ds:[ebx]
  402355:	dec    edx
  402356:	xchg   ebp,eax
  402357:	mov    ds,eax
  402359:	icebp  
  40235a:	xchg   edx,eax
  40235b:	pushf  
  40235c:	xchg   esp,eax
  40235d:	mov    ds:0xf234f82a,eax
  402362:	inc    ecx
  402363:	mov    ds:0x523774ff,eax
  402368:	out    dx,eax
  402369:	mov    esp,DWORD PTR [ebx+eiz*8-0x5]
  40236d:	sub    al,BYTE PTR [edi+0x1]
  402370:	in     eax,0x5c
  402372:	inc    esi
  402373:	jecxz  0x402380
  402375:	scas   al,BYTE PTR es:[edi]
  402376:	in     al,dx
  402377:	xor    al,0x46
  402379:	sub    bh,BYTE PTR [ebx]
  40237b:	xor    ah,dl
  40237d:	pop    ecx
  40237e:	xor    ah,BYTE PTR [edi+eiz*8+0x53]
  402382:	sbb    DWORD PTR [esp+ecx*1-0x19],esp
  402386:	scas   al,BYTE PTR es:[edi]
  402387:	mov    ecx,0x60cbe5c1
  40238c:	inc    edx
  40238d:	dec    edx
  40238e:	sub    ecx,eax
  402390:	scas   al,BYTE PTR es:[edi]
  402391:	jmp    0xa4ad:0x416f8732
  402398:	xor    eax,0x5fb5a1ba
  40239d:	cs xchg ebx,eax
  40239f:	jg     0x4023ea
  4023a1:	addr16 in eax,dx
  4023a3:	das    
  4023a4:	fsubr  st,st(7)
  4023a6:	iret   
  4023a7:	dec    eax
  4023a8:	xor    eax,0x586b3532
  4023ad:	xor    al,0x3b
  4023af:	cdq    
  4023b0:	xchg   ebp,eax
  4023b1:	test   eax,0x2bf34974
  4023b6:	stos   DWORD PTR es:[edi],eax
  4023b7:	in     al,dx
  4023b8:	or     BYTE PTR [eax-0x56],cl
  4023bb:	rcl    DWORD PTR [edi],cl
  4023bd:	jnp    0x40234c
  4023bf:	xor    cl,BYTE PTR [edx+0x2072a65e]
  4023c5:	xchg   ebx,esi
  4023c7:	mov    al,0x58
  4023c9:	xchg   bp,ax
  4023cb:	lock inc ebp
  4023cd:	add    ecx,esi
  4023cf:	add    BYTE PTR [edx+0x38],cl
  4023d2:	inc    BYTE PTR [edi+0x5d]
  4023d5:	adc    al,0x9f
  4023d7:	and    al,0xa
  4023d9:	mov    ah,0xcd
  4023db:	push   eax
  4023dc:	inc    ecx
  4023dd:	ss ins BYTE PTR es:[edi],dx
  4023df:	jbe    0x402413
  4023e1:	rol    ah,0x57
  4023e4:	mov    edx,gs
  4023e6:	(bad)  
  4023e7:	outs   dx,DWORD PTR ds:[esi]
  4023e8:	or     DWORD PTR [edi],ebp
  4023ea:	or     ah,0xbc
  4023ed:	mov    cl,0xe5
  4023ef:	sub    ebx,DWORD PTR [edx+eiz*2]
  4023f2:	das    
  4023f3:	pusha  
  4023f4:	mov    ecx,0x89314835
  4023f9:	jg     0x402402
  4023fb:	loop   0x4023e0
  4023fd:	scas   al,BYTE PTR es:[edi]
  4023fe:	inc    edx
  4023ff:	clc    
  402400:	sbb    BYTE PTR [eax+0x7e69a511],ch
  402406:	jecxz  0x4023bb
  402408:	mov    ah,0x43
  40240a:	fwait
  40240b:	push   0xffffff83
  40240d:	sbb    eax,0x6e55d980
  402412:	cmp    al,0x64
  402414:	popf   
  402415:	jne    0x40245e
  402417:	or     al,0xc7
  402419:	aaa    
  40241a:	and    edx,esp
  40241c:	inc    ebp
  40241d:	arpl   WORD PTR [edi-0x42],dx
  402420:	push   es
  402421:	mov    edx,0x9be2a8a1
  402426:	jnp    0x40242d
  402428:	jg     0x4023df
  40242a:	push   ebx
  40242b:	inc    esi
  40242c:	popf   
  40242d:	push   esi
  40242e:	cmp    edx,ebp
  402430:	mov    bl,0xc4
  402432:	stos   BYTE PTR es:[edi],al
  402433:	scas   eax,DWORD PTR es:[edi]
  402434:	mov    ds:0xb69a000c,eax
  402439:	aad    0x10
  40243b:	mov    edx,0x88055930
  402440:	test   al,0x16
  402442:	sar    DWORD PTR [eax],0x57
  402445:	dec    edx
  402446:	push   edx
  402447:	pop    ecx
  402448:	out    0x84,al
  40244a:	mov    esi,0x26c810d8
  40244f:	loop   0x40248f
  402451:	add    DWORD PTR [eax+0xabd9259],esi
  402457:	sar    edi,cl
  402459:	mov    al,ds:0x7c909713
  40245e:	fwait
  40245f:	js     0x402477
  402461:	lock jge 0x40241c
  402464:	fild   QWORD PTR [edi+0x9]
  402467:	mov    bl,0x17
  402469:	imul   esi,DWORD PTR [eax-0x6168f2ff],0x67598906
  402473:	or     eax,0x271af4fc
  402478:	mul    BYTE PTR [esp+eax*1+0x141b94fd]
  40247f:	push   0x3ce0d2e2
  402484:	in     al,0x8d
  402486:	mov    cl,0x3f
  402488:	imul   edi,DWORD PTR [edx+0xe3db956],0x1514be9a
  402492:	pop    edx
  402493:	sbb    esp,0xfb8d776f
  402499:	push   ecx
  40249a:	(bad)  
  40249b:	pop    ebx
  40249c:	lea    edx,[ebx+0xfb20c71]
  4024a2:	pushf  
  4024a3:	inc    ebp
  4024a4:	jecxz  0x40248f
  4024a6:	jns    0x402492
  4024a8:	xchg   DWORD PTR fs:[eax-0x6a],edi
  4024ac:	sub    edi,eax
  4024ae:	sbb    eax,0x4f9d0f0f
  4024b3:	pusha  
  4024b4:	mov    ch,0x2b
  4024b6:	loop   0x402477
  4024b8:	fldcw  WORD PTR [ebx+eax*1+0x6fc402d8]
  4024bf:	jmp    0x2975:0x84c9a4cd
  4024c6:	shl    BYTE PTR [edi+0x3b],1
  4024c9:	test   BYTE PTR [esp+edi*1+0x6c7ce441],cl
  4024d0:	sbb    eax,0x99df7e72
  4024d5:	or     dl,BYTE PTR [edi]
  4024d7:	fdiv   DWORD PTR [esi]
  4024d9:	and    BYTE PTR [ecx],ch
  4024db:	add    ecx,DWORD PTR [edx]
  4024dd:	add    ah,BYTE PTR [ebx-0x2242dae4]
  4024e3:	mov    ebp,0xd50254e7
  4024e8:	push   DWORD PTR [eax]
  4024ea:	mov    al,ds:0x30c7d730
  4024ef:	sub    al,0xbd
  4024f1:	add    ebp,DWORD PTR [edx]
  4024f3:	push   esp
  4024f4:	or     eax,0xffba2a7a
  4024f9:	push   cs
  4024fa:	test   BYTE PTR [esi],dl
  4024fc:	cmp    cl,ah
  4024fe:	cmp    eax,0xef9a27f
  402503:	dec    ecx
  402504:	adc    edi,DWORD PTR [edx+edi*8-0x85ec907]
  40250b:	loope  0x40251c
  40250d:	cld    
  40250e:	or     ebp,DWORD PTR [edx+eax*8-0x2c]
  402512:	jecxz  0x4024c5
  402514:	mov    edx,0xbef6478a
  402519:	xor    BYTE PTR [eax-0x21],cl
  40251c:	pop    ebp
  40251d:	in     al,dx
  40251e:	xlat   BYTE PTR ds:[ebx]
  40251f:	sub    cl,dh
  402521:	data16 test BYTE PTR [edi-0x60],dh
  402525:	enter  0x11de,0x5d
  402529:	mov    edi,0x4ac6cbb8
  40252e:	cwde   
  40252f:	inc    eax
  402530:	enter  0x1267,0xf9
  402534:	jg     0x4024f5
  402536:	push   0x35
  402538:	fnstcw WORD PTR [ecx]
  40253a:	test   ebx,edi
  40253c:	mov    cl,0xba
  40253e:	(bad)  
  40253f:	and    eax,0x9ddc6adc
  402544:	and    ch,BYTE PTR [ebx+eiz*2]
  402547:	xchg   ecx,eax
  402548:	dec    ecx
  402549:	xchg   ebp,eax
  40254a:	sub    ecx,DWORD PTR [ebp-0x4]
  40254d:	sahf   
  40254e:	sbb    al,0x6e
  402550:	js     0x4025a4
  402552:	jl     0x402512
  402554:	sbb    al,0xbd
  402556:	aad    0xfd
  402558:	fcomp  DWORD PTR [edi+0x60]
  40255b:	or     eax,0x1ebdef38
  402560:	jns    0x402548
  402562:	mov    dh,0x38
  402564:	xchg   esp,eax
  402565:	adc    ah,BYTE PTR ds:0x5377a0f5
  40256b:	js     0x402551
  40256d:	ins    BYTE PTR es:[edi],dx
  40256e:	mov    edx,0x5a62fb81
  402573:	inc    esp
  402574:	jl     0x402503
  402576:	cmp    eax,0x77433a2b
  40257b:	mov    bl,0x3e
  40257d:	push   0x45fc1dac
  402582:	int    0x18
  402584:	stos   BYTE PTR es:[edi],al
  402585:	out    dx,eax
  402586:	fidiv  DWORD PTR [edx-0x22f976]
  40258c:	loopne 0x4025eb
  40258e:	(bad)  
  40258f:	gs stos DWORD PTR es:[edi],eax
  402591:	inc    edi
  402592:	xor    esi,DWORD PTR cs:[eax+0x2f]
  402596:	(bad)  
  402597:	push   ds
  402598:	mov    ch,0x83
  40259a:	lock adc bl,dh
  40259d:	hlt    
  40259e:	pop    edi
  40259f:	or     eax,0x782e8593
  4025a4:	mov    WORD PTR [edi+ebp*4-0x6ff56694],?
  4025ab:	(bad)  
  4025ac:	retf   0xbc5d
  4025af:	(bad)  [edi]
  4025b1:	jne    0x40256c
  4025b3:	stos   BYTE PTR es:[edi],al
  4025b4:	fwait
  4025b5:	daa    
  4025b6:	dec    ebx
  4025b7:	out    0xd3,al
  4025b9:	int3   
  4025ba:	call   0xe0b4:0x412b29b4
  4025c1:	push   eax
  4025c2:	inc    ebx
  4025c3:	xchg   edi,eax
  4025c4:	dec    ebp
  4025c5:	out    0xb7,al
  4025c7:	push   edi
  4025c8:	rol    BYTE PTR [ebx-0x2d],cl
  4025cb:	adc    BYTE PTR [ecx+0x67383c2b],cl
  4025d1:	bound  esi,QWORD PTR [eax+ebx*2]
  4025d4:	adc    al,0x33
  4025d6:	outs   dx,DWORD PTR ds:[esi]
  4025d7:	xlat   BYTE PTR ds:[ebx]
  4025d8:	cmp    DWORD PTR [eax+0x24],eax
  4025db:	shl    ah,1
  4025dd:	push   cs
  4025de:	fistp  WORD PTR [ecx+0x8]
  4025e1:	or     DWORD PTR [edi-0x16],0xf7f735e0
  4025e8:	inc    esp
  4025e9:	lahf   
  4025ea:	jne    0x40259e
  4025ec:	xchg   ebp,eax
  4025ed:	sbb    al,0xe
  4025ef:	cdq    
  4025f0:	cmp    BYTE PTR [ecx+0x43],bh
  4025f3:	ins    DWORD PTR es:[edi],dx
  4025f4:	and    eax,0x8cc7e1c8
  4025f9:	mov    ebp,eax
  4025fb:	fnstcw WORD PTR [ebp-0x44]
  4025fe:	push   ebp
  4025ff:	jmp    DWORD PTR [eax+0x6dbc7272]
  402605:	in     eax,dx
  402606:	and    eax,0x1afa5665
  40260b:	dec    edx
  40260c:	out    dx,eax
  40260d:	clc    
  40260e:	and    DWORD PTR [edx+0x3d],edx
  402611:	sbb    BYTE PTR [edx-0x75828c17],al
  402617:	push   ss
  402618:	loop   0x40265a
  40261a:	out    dx,al
  40261b:	jne    0x402634
  40261d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40261e:	fs cmc 
  402620:	out    dx,al
  402621:	out    0xa7,eax
  402623:	push   ebp
  402624:	sar    DWORD PTR [ebx-0x18],0x26
  402628:	nop
  402629:	adc    dh,dl
  40262b:	push   es
  40262c:	fbld   TBYTE PTR [ebx+0x223da0d6]
  402632:	int    0xcd
  402634:	push   esi
  402635:	push   esp
  402636:	lea    edi,[ebx+eiz*2]
  402639:	sti    
  40263a:	and    DWORD PTR [ebp-0x1f],ebp
  40263d:	adc    BYTE PTR fs:[ecx-0x4a20ecdb],0x61
  402645:	stc    
  402646:	leave  
  402647:	clc    
  402648:	dec    eax
  402649:	imul   esi,DWORD PTR [ebx-0x68485793],0x49
  402650:	out    0x20,eax
  402652:	fimul  WORD PTR [eax]
  402654:	jo     0x4026cc
  402656:	in     eax,0xc7
  402658:	mov    ds:0xb8589179,eax
  40265d:	mov    esi,0xe053c222
  402662:	jae    0x402637
  402664:	jbe    0x40267c
  402666:	mov    ebp,0x264c445f
  40266b:	pop    edi
  40266c:	sbb    al,ah
  40266e:	and    BYTE PTR [edi-0x56],ch
  402671:	dec    ebx
  402672:	dec    ecx
  402673:	cli    
  402674:	pop    esp
  402675:	mov    DWORD PTR [ecx+edi*2-0x3167baeb],ecx
  40267c:	es adc eax,0xfe957ef3
  402682:	loope  0x402642
  402684:	test   eax,0x59e6d0a9
  402689:	add    DWORD PTR [edx+eax*4-0x38],eax
  40268d:	mov    al,ds:0x5c7feecb
  402692:	mov    al,ds:0xfa852249
  402697:	and    BYTE PTR [ebx],bl
  402699:	repz jb 0x402652
  40269c:	pushf  
  40269d:	xchg   ebp,eax
  40269e:	lods   eax,DWORD PTR ds:[esi]
  40269f:	jbe    0x4026f2
  4026a1:	sti    
  4026a2:	xchg   DWORD PTR [edi],ebx
  4026a4:	cs inc ebx
  4026a6:	stc    
  4026a7:	out    dx,eax
  4026a8:	push   ds
  4026a9:	mov    ecx,0x1759f80e
  4026ae:	and    al,0x41
  4026b0:	mov    dl,0x76
  4026b2:	sbb    cl,0x60
  4026b5:	clc    
  4026b6:	rcr    DWORD PTR [eax-0x232e40],cl
  4026bc:	fptan  
  4026be:	iret   
  4026bf:	mov    esi,0xe3d4849b
  4026c4:	mov    eax,DWORD PTR [eax-0x50e8ce2]
  4026ca:	pop    eax
  4026cb:	or     eax,esi
  4026cd:	jb     0x402717
  4026cf:	dec    ebx
  4026d0:	xchg   ebx,eax
  4026d1:	add    DWORD PTR [ecx-0x6ace48d0],esi
  4026d7:	(bad)  
  4026d9:	js     0x40271e
  4026db:	outs   dx,DWORD PTR ds:[esi]
  4026dc:	addr16 dec ebx
  4026de:	fst    QWORD PTR [ebp+edi*8-0x4029fe2e]
  4026e5:	cli    
  4026e6:	mov    dl,bl
  4026e8:	test   ebx,ebx
  4026ea:	mov    bh,0x40
  4026ec:	pop    es
  4026ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026ee:	pop    edi
  4026ef:	jp     0x4026a5
  4026f1:	jmp    0x402697
  4026f3:	or     al,0x74
  4026f5:	dec    esi
  4026f6:	mov    al,0xe9
  4026f8:	sub    BYTE PTR [ecx],dh
  4026fa:	xchg   ebx,eax
  4026fb:	jbe    0x402704
  4026fd:	dec    eax
  4026fe:	and    DWORD PTR [ecx-0x56],0xf
  402702:	push   edi
  402703:	pop    ss
  402704:	sbb    eax,0x1209bf0f
  402709:	mov    edx,0x2ebe62d3
  40270e:	in     al,0x75
  402710:	icebp  
  402711:	in     al,dx
  402712:	mov    edx,0x42bd97ba
  402717:	xor    bh,BYTE PTR [edx]
  402719:	out    0x7a,eax
  40271b:	les    ebp,FWORD PTR [ebx]
  40271d:	push   0x108124a2
  402722:	lods   eax,DWORD PTR ds:[esi]
  402723:	hlt    
  402724:	arpl   WORD PTR [ecx-0x2f],sp
  402727:	ins    DWORD PTR es:[edi],dx
  402728:	push   ss
  402729:	lock call 0x449a989b
  40272f:	mov    al,ds:0x768c2fd
  402734:	rcr    edi,cl
  402736:	mov    ah,0xbe
  402738:	or     dl,BYTE PTR [ecx]
  40273a:	addr16 mov ds:0x9b7d,al
  40273e:	pop    ebp
  40273f:	loope  0x40277f
  402741:	shr    BYTE PTR [ecx-0x4d],0xbc
  402745:	xchg   ebx,eax
  402746:	jae    0x40276a
  402748:	jge    0x402796
  40274a:	mov    esi,ecx
  40274c:	daa    
  40274d:	push   ebp
  40274e:	enter  0xf7ab,0xaa
  402752:	xlat   BYTE PTR ds:[ebx]
  402753:	je     0x402799
  402755:	sub    al,0x59
  402757:	pop    esp
  402758:	out    dx,al
  402759:	test   BYTE PTR [edx-0x45],bl
  40275c:	arpl   WORD PTR [ebp+edi*4-0x15],bp
  402760:	adc    DWORD PTR [esi+0x6],esp
  402763:	stos   DWORD PTR es:[edi],eax
  402764:	mov    esp,0xaf55e79
  402769:	mov    ds:0x183c2904,al
  40276e:	add    dh,ch
  402770:	pusha  
  402771:	das    
  402772:	xchg   ebx,eax
  402773:	push   eax
  402774:	les    ebp,FWORD PTR [eax+edx*1-0x400f292d]
  40277b:	out    0x1f,al
  40277d:	dec    ecx
  40277e:	xchg   esi,eax
  40277f:	mov    ds:0x138bb902,eax
  402784:	xor    ebx,0x3db6bd1a
  40278a:	pop    ecx
  40278b:	pop    es
  40278c:	add    esi,DWORD PTR [edi-0x550668c6]
  402792:	je     0x402750
  402794:	ret    0x5008
  402797:	mov    esp,0x3ac9aa6c
  40279c:	dec    esp
  40279d:	mov    ecx,0xafcdadde
  4027a2:	data16 aas 
  4027a4:	pop    esi
  4027a5:	push   0x34b3ad87
  4027aa:	dec    esp
  4027ab:	fst    QWORD PTR [edx+ebx*1+0x587e0b49]
  4027b2:	push   ds
  4027b3:	div    bl
  4027b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027b6:	sbb    edi,DWORD PTR [ebx+0x5229729]
  4027bc:	je     0x40280c
  4027be:	ds repz int3 
  4027c1:	mov    al,ds:0x32691d9a
  4027c6:	aam    0x7c
  4027c8:	push   0x57
  4027ca:	and    eax,0x6a1f318e
  4027cf:	cdq    
  4027d0:	hlt    
  4027d1:	pop    ebp
  4027d2:	(bad)  
  4027d3:	xlat   BYTE PTR ds:[ebx]
  4027d4:	pop    edx
  4027d5:	pop    es
  4027d6:	daa    
  4027d7:	dec    esp
  4027d8:	dec    eax
  4027d9:	(bad)
  4027dc:	(bad)  
  4027dd:	addr16 mov eax,0xac772fa7
  4027e3:	call   0x84bf:0x267764bd
  4027ea:	imul   eax,DWORD PTR [ecx-0x54358650],0x5
  4027f1:	sbb    edi,ebx
  4027f3:	add    BYTE PTR [esi],ah
  4027f5:	pop    esp
  4027f6:	out    0x48,al
  4027f8:	sub    esi,DWORD PTR [eax]
  4027fa:	inc    ebx
  4027fb:	outs   dx,BYTE PTR ds:[esi]
  4027fc:	pop    edi
  4027fd:	in     eax,dx
  4027fe:	mov    ebp,0x3a0284b8
  402803:	test   al,0x42
  402805:	test   ax,0xa369
  402809:	xchg   edx,eax
  40280a:	xor    BYTE PTR [ecx-0x3d],dh
  40280d:	xchg   ebp,eax
  40280e:	mov    DWORD PTR [edi+0x62],esp
  402811:	sete   BYTE PTR [eax+0x7f42ed89]
  402818:	xchg   esp,eax
  402819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40281a:	xchg   esi,eax
  40281b:	out    0xe3,eax
  40281d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40281e:	xor    DWORD PTR [edi-0x50aa8908],edi
  402824:	xchg   edi,eax
  402825:	arpl   WORD PTR [ebx+0x59fcda38],di
  40282b:	pop    edx
  40282c:	cmp    ebp,DWORD PTR [edx]
  40282e:	imul   esi,DWORD PTR [eax+esi*4],0xaea70e03
  402835:	jne    0x4027db
  402837:	divps  xmm7,XMMWORD PTR [eax+0x635ad0bb]
  40283e:	and    bl,cl
  402840:	dec    edi
  402841:	adc    bl,0x42
  402844:	imul   ecx,DWORD PTR [ebp+0x39],0xffffffef
  402848:	rcr    esi,cl
  40284a:	fld    QWORD PTR [edx+0x65]
  40284d:	mov    eax,ds:0x7fce867c
  402852:	int3   
  402853:	or     esi,DWORD PTR [esi-0x42]
  402856:	inc    edx
  402857:	push   edx
  402858:	cmp    esi,DWORD PTR [ebx+eiz*2-0x5dbdde02]
  40285f:	(bad)  
  402860:	repnz adc bh,BYTE PTR [eax+ecx*1+0x6e]
  402865:	mov    al,0x6b
  402867:	push   esp
  402868:	cmc    
  402869:	push   0xb4bc9859
  40286e:	fld    DWORD PTR [ecx-0x53c5bd78]
  402874:	cmp    DWORD PTR [esi+esi*8+0x57c65ed4],ebx
  40287b:	add    BYTE PTR [ecx-0x510bd2f7],0xb2
  402882:	push   edx
  402883:	loope  0x4028c3
  402885:	cdq    
  402886:	xchg   BYTE PTR [ebx-0x51e8e363],bl
  40288c:	clc    
  40288d:	stos   DWORD PTR es:[edi],eax
  40288e:	pushf  
  40288f:	ins    BYTE PTR es:[edi],dx
  402890:	dec    eax
  402891:	add    BYTE PTR [ecx+0x13ba6035],0xf7
  402898:	sbb    BYTE PTR fs:[ebx-0x2ef039e8],al
  40289f:	jns    0x4028b6
  4028a1:	inc    esi
  4028a2:	not    DWORD PTR [edi]
  4028a4:	xchg   ebx,eax
  4028a5:	imul   esp,ebp,0x25
  4028a8:	test   BYTE PTR [eax+0x36615d5],0xca
  4028af:	pop    edi
  4028b0:	test   al,0x32
  4028b2:	fwait
  4028b3:	loopne 0x4028f7
  4028b5:	pop    esi
  4028b6:	les    esp,FWORD PTR [ebx+0x31]
  4028b9:	sbb    al,0xdf
  4028bb:	adc    eax,0x33fd1339
  4028c0:	mov    esi,eax
  4028c2:	sahf   
  4028c3:	arpl   WORD PTR [eax+edi*1-0x63121674],ax
  4028ca:	inc    ecx
  4028cb:	sbb    DWORD PTR [edx],ecx
  4028cd:	dec    ecx
  4028ce:	sub    DWORD PTR [eax-0x80],0x27d7eba4
  4028d5:	lds    ecx,FWORD PTR [ecx+0x51]
  4028d8:	push   eax
  4028d9:	fstp   QWORD PTR [esi+eiz*4]
  4028dc:	pop    ecx
  4028dd:	pop    ecx
  4028de:	jmp    0x7d10a107
  4028e3:	mov    esi,0x948207c1
  4028e8:	and    eax,0x3fabace6
  4028ed:	add    BYTE PTR [eax-0x51],dh
  4028f0:	pop    ebp
  4028f1:	push   ds
  4028f2:	ss (bad) 
  4028f4:	stos   DWORD PTR es:[edi],eax
  4028f5:	lods   eax,DWORD PTR ds:[esi]
  4028f6:	loop   0x4028b7
  4028f8:	mov    ah,0xd
  4028fa:	push   eax
  4028fb:	stos   DWORD PTR es:[edi],eax
  4028fc:	adc    eax,0xfdb76a7d
  402901:	jo     0x40294a
  402903:	aam    0xb3
  402905:	pop    es
  402906:	shl    BYTE PTR [eax+0x3b],cl
  402909:	push   ds
  40290a:	jmp    0x47a1a67
  40290f:	sub    esi,esp
  402911:	adc    eax,0x7d3f9df8
  402916:	cwde   
  402917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402918:	fwait
  402919:	cld    
  40291a:	addr16 inc esi
  40291c:	arpl   WORD PTR [ebp+0x2a],si
  40291f:	popf   
  402920:	in     eax,dx
  402921:	jno    0x402964
  402923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402924:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  402926:	loopne 0x40290c
  402928:	xlat   BYTE PTR ds:[ebx]
  402929:	loope  0x4028b1
  40292b:	sub    eax,0xe76e625f
  402930:	sbb    ebx,DWORD PTR [esp+edi*1]
  402933:	inc    ecx
  402934:	jmp    0x4c5:0x21e3f23f
  40293b:	cmp    eax,0x862b93df
  402940:	inc    ebx
  402941:	sbb    esi,DWORD PTR [edx+esi*8]
  402944:	push   cs
  402945:	xchg   ebx,eax
  402946:	lods   eax,DWORD PTR ds:[esi]
  402947:	and    edx,DWORD PTR [ebp-0x4b]
  40294a:	rcl    DWORD PTR [ebp-0xa],1
  40294d:	add    ecx,DWORD PTR [esi-0x158e27b2]
  402953:	jle    0x402918
  402955:	fsub   st,st(5)
  402957:	loope  0x40295e
  402959:	inc    eax
  40295a:	adc    esi,edx
  40295c:	inc    ecx
  40295d:	ja     0x402915
  40295f:	jne    0x40296a
  402961:	sub    ebx,esp
  402963:	push   esi
  402964:	xchg   ecx,eax
  402965:	xchg   DWORD PTR [ebp+0x57bd6018],esp
  40296b:	leave  
  40296c:	stos   BYTE PTR es:[edi],al
  40296d:	mov    ah,0x28
  40296f:	fs jecxz 0x402967
  402972:	mov    bh,0x7e
  402974:	add    al,BYTE PTR [ebp+eax*2+0xc]
  402978:	sbb    ch,ah
  40297a:	push   ebx
  40297b:	xor    al,0x12
  40297d:	inc    ecx
  40297e:	(bad)  
  40297f:	fcom   DWORD PTR [esi+0x6d4dfb7c]
  402985:	popa   
  402986:	jg     0x40295d
  402988:	pop    edi
  402989:	dec    edi
  40298a:	sub    BYTE PTR [ebx+eax*1+0x78975fbb],al
  402991:	mov    ch,BYTE PTR [esi]
  402993:	sar    BYTE PTR [eax-0x3f],cl
  402996:	loopne 0x402974
  402998:	mov    ah,0xfc
  40299a:	sbb    al,0xba
  40299c:	sbb    BYTE PTR [ecx+0x6b],0x2b
  4029a0:	pusha  
  4029a1:	mov    gs,WORD PTR [ebx-0x1d602438]
  4029a7:	dec    edi
  4029a8:	add    al,dh
  4029aa:	ret    
  4029ab:	or     BYTE PTR [edi+0x23],ch
  4029ae:	adc    esp,DWORD PTR [edx-0x66]
  4029b1:	cmp    al,BYTE PTR [ebx+ebx*8+0x3b]
  4029b5:	inc    ebx
  4029b6:	xchg   esp,eax
  4029b7:	fisubr DWORD PTR ds:0xfdab5e15
  4029bd:	push   0x6a
  4029bf:	jno    0x4029f0
  4029c1:	dec    BYTE PTR [edi+esi*1+0x3a]
  4029c5:	sub    al,0x2e
  4029c7:	dec    ebx
  4029c8:	jecxz  0x402a31
  4029ca:	sti    
  4029cb:	inc    ecx
  4029cc:	mov    ebx,0xe9dd903d
  4029d1:	push   0xc507c0ac
  4029d6:	mov    eax,ds:0x3d5bd673
  4029db:	fild   QWORD PTR [eax-0x53]
  4029de:	dec    eax
  4029df:	jmp    0x3b5c3e5b
  4029e4:	(bad)  
  4029e5:	mov    WORD PTR [ebx-0x8],gs
  4029e8:	mov    ds:0xfb5e59d5,al
  4029ed:	xchg   esp,eax
  4029ee:	inc    DWORD PTR [ecx]
  4029f0:	mov    bl,0x5b
  4029f2:	dec    edi
  4029f3:	call   0xaa40ae7e
  4029f8:	fsub   QWORD PTR [eax-0x77]
  4029fb:	cmp    BYTE PTR [edi],dl
  4029fd:	std    
  4029fe:	cdq    
  4029ff:	(bad)  
  402a00:	loopne 0x402a11
  402a02:	mov    eax,DWORD PTR [edi]
  402a04:	out    0xe6,eax
  402a06:	and    ebp,edi
  402a08:	cmp    al,0x9b
  402a0a:	out    0x80,al
  402a0c:	push   es
  402a0d:	dec    esp
  402a0e:	mov    edx,0x792199c2
  402a13:	sti    
  402a14:	push   eax
  402a15:	mov    dl,0x21
  402a17:	jp     0x4029b1
  402a19:	push   es
  402a1a:	push   0x5a
  402a1c:	inc    edx
  402a1d:	add    ebp,DWORD PTR [esi+0x8]
  402a20:	int3   
  402a21:	inc    ebx
  402a22:	mov    al,ds:0xe09694ca
  402a27:	sbb    ch,BYTE PTR [esi-0x55]
  402a2a:	stc    
  402a2b:	pop    ebp
  402a2c:	fs es loopne 0x4029fd
  402a30:	mov    eax,0x54437cdb
  402a35:	repz jge 0x402a64
  402a38:	mov    ch,BYTE PTR cs:[esi-0x3a]
  402a3c:	pop    es
  402a3d:	adc    DWORD PTR [ebp-0x33],esi
  402a40:	sub    BYTE PTR ds:0xb76e96c6,dh
  402a46:	mov    ebp,0x18822cd7
  402a4b:	jl     0x402a22
  402a4d:	sbb    esi,edx
  402a4f:	xchg   edi,eax
  402a50:	iret   
  402a51:	cdq    
  402a52:	xchg   edi,eax
  402a53:	jle    0x402a18
  402a55:	jecxz  0x4029f8
  402a57:	and    BYTE PTR [ebx-0x7f],ch
  402a5a:	pop    ss
  402a5b:	push   ds
  402a5c:	inc    edx
  402a5d:	or     dl,ch
  402a5f:	cmp    DWORD PTR [esi],ebx
  402a61:	(bad)  
  402a62:	js     0x402ab5
  402a64:	sub    BYTE PTR [ebx+0x75b3fb12],ch
  402a6a:	shl    edi,1
  402a6c:	adc    esi,DWORD PTR [eax]
  402a6e:	mov    gs,WORD PTR [ebx+0x2]
  402a71:	mov    ?,WORD PTR [ecx-0x6d]
  402a74:	fimul  DWORD PTR [edi]
  402a76:	test   al,0xb5
  402a78:	pop    eax
  402a79:	xchg   ebx,esp
  402a7b:	lds    edi,FWORD PTR [edx]
  402a7d:	xchg   DWORD PTR [ecx],edi
  402a7f:	sbb    bl,cl
  402a81:	cmc    
  402a82:	jl     0x402ab3
  402a84:	cmp    al,0x41
  402a86:	out    dx,eax
  402a87:	out    dx,al
  402a88:	cmp    DWORD PTR [ecx+edx*4],edi
  402a8b:	jo     0x402a3b
  402a8d:	idiv   BYTE PTR [esi]
  402a8f:	or     BYTE PTR [edx+ebp*8-0x74],0x7f
  402a94:	dec    eax
  402a95:	cs inc esp
  402a97:	xor    al,0x4f
  402a99:	pushf  
  402a9a:	xchg   dh,bh
  402a9c:	pop    ebx
  402a9d:	xor    BYTE PTR [edi-0x57],ah
  402aa0:	ja     0x402abd
  402aa2:	mov    BYTE PTR [eax+0x7a],dh
  402aa5:	mov    cs,WORD PTR [edi-0x65]
  402aa8:	(bad)  
  402aaa:	mov    BYTE PTR [esi+0x5e],ah
  402aad:	fwait
  402aae:	mov    eax,ds:0x72ff366f
  402ab3:	gs test ebx,0x4a7bae07
  402aba:	xor    eax,DWORD PTR [edi]
  402abc:	xchg   edi,eax
  402abd:	cmp    eax,0xf18a260b
  402ac2:	dec    edi
  402ac3:	adc    ebx,DWORD PTR [edx+0x68]
  402ac6:	xchg   edx,eax
  402ac7:	ds lahf 
  402ac9:	jo     0x402b37
  402acb:	das    
  402acc:	pushf  
  402acd:	dec    ebp
  402ace:	ficom  WORD PTR [esi]
  402ad0:	mov    edi,0xaba18366
  402ad5:	pop    esp
  402ad6:	cmc    
  402ad7:	nop
  402ad8:	mov    edi,eax
  402ada:	inc    esi
  402adb:	repz mov ?,ebp
  402ade:	cld    
  402adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae0:	mov    ebx,0x50387073
  402ae5:	outs   dx,DWORD PTR ds:[esi]
  402ae6:	dec    esi
  402ae7:	jecxz  0x402b65
  402ae9:	add    ch,BYTE PTR [edx+edi*8-0x71]
  402aed:	and    bl,BYTE PTR [ebp-0x29]
  402af0:	in     eax,dx
  402af1:	ja     0x402b50
  402af3:	and    al,0x38
  402af5:	add    DWORD PTR [ecx],esi
  402af7:	dec    edx
  402af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402afa:	jns    0x402b25
  402afc:	fisttp WORD PTR [esi+0x4a2a93e9]
  402b02:	ins    DWORD PTR es:[edi],dx
  402b03:	jno    0x402afa
  402b05:	sbb    DWORD PTR [edx],edx
  402b07:	repnz and cl,BYTE PTR [ebp+0x5f5482e9]
  402b0e:	fld    DWORD PTR [ecx+eax*8+0x766eb8f1]
  402b15:	(bad)  
  402b16:	data16 jmp 0x402b65
  402b19:	adc    BYTE PTR [edi-0x3018c89b],ah
  402b1f:	stc    
  402b20:	xor    ah,dh
  402b22:	xchg   esi,eax
  402b23:	out    0xb3,al
  402b25:	mov    ecx,0xebb9d92c
  402b2a:	push   cs
  402b2b:	jg     0x402b1f
  402b2d:	pop    eax
  402b2e:	lods   eax,DWORD PTR ds:[esi]
  402b2f:	push   0xffffffb1
  402b31:	popf   
  402b32:	mov    ebx,0x42c8dc92
  402b37:	mov    bh,BYTE PTR [ecx+0x7a]
  402b3a:	cmp    DWORD PTR [eax+0x27e90b0],0x21
  402b41:	lds    esi,FWORD PTR [ebx+0x43]
  402b44:	bound  esi,QWORD PTR [edx-0x35]
  402b47:	xchg   DWORD PTR [eax],edi
  402b49:	icebp  
  402b4a:	jecxz  0x402bb5
  402b4c:	clc    
  402b4d:	lock leave 
  402b4f:	push   0x38e4fdf7
  402b54:	int    0x22
  402b56:	cwde   
  402b57:	mov    DWORD PTR [edx-0x418914dd],eax
  402b5d:	mov    esp,0x1e2eb134
  402b62:	in     al,dx
  402b63:	shl    BYTE PTR [edx+0x64],cl
  402b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b67:	jno    0x402b3b
  402b69:	das    
  402b6a:	call   0xe0e2:0xfc3d4714
  402b71:	retf   0x4ed6
  402b74:	dec    edi
  402b75:	or     eax,0x35d2025f
  402b7a:	jne    0x402b2e
  402b7c:	mov    WORD PTR ds:0x559866d9,cs
  402b82:	pop    ebx
  402b83:	push   ebx
  402b84:	inc    edi
  402b85:	mov    eax,0x901e4eff
  402b8a:	lds    ecx,FWORD PTR [ebp+0x14]
  402b8d:	xor    al,0xe3
  402b8f:	and    esi,ebp
  402b91:	push   edi
  402b92:	sub    edx,DWORD PTR [eax-0x79b9889a]
  402b98:	cmp    esp,ecx
  402b9a:	inc    eax
  402b9b:	out    dx,al
  402b9c:	mov    bh,0xa9
  402b9e:	std    
  402b9f:	pop    es
  402ba0:	js     0x402bf3
  402ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba3:	mov    ecx,DWORD PTR [eax+0x3e7aa4e6]
  402ba9:	je     0x402c29
  402bab:	sbb    eax,0xd70caf28
  402bb0:	dec    ebx
  402bb1:	ds int 0x5b
  402bb4:	mov    bh,0x32
  402bb6:	pop    ss
  402bb7:	imul   esi,DWORD PTR [edx+0x62870a7f],0xffffffa8
  402bbe:	jae    0x402be9
  402bc0:	pop    eax
  402bc1:	popf   
  402bc2:	xchg   BYTE PTR [ebx+0x6a7dc30d],al
  402bc8:	jns    0x402b6d
  402bca:	pop    es
  402bcb:	aas    
  402bcc:	dec    BYTE PTR [ecx]
  402bce:	nop
  402bcf:	in     eax,dx
  402bd0:	pop    es
  402bd1:	adc    BYTE PTR [edi+edx*1],0xa7
  402bd5:	popa   
  402bd6:	scas   al,BYTE PTR es:[edi]
  402bd7:	adc    dh,dh
  402bd9:	addr16 jo 0x402c4b
  402bdc:	scas   al,BYTE PTR es:[edi]
  402bdd:	aas    
  402bde:	out    dx,al
  402bdf:	mov    ah,0x6d
  402be1:	adc    cl,ch
  402be3:	push   ebp
  402be4:	mov    dl,0x5d
  402be6:	in     al,dx
  402be7:	jo     0x402bfc
  402be9:	cs loope 0x402bdf
  402bec:	jg     0x402bea
  402bee:	sbb    edx,DWORD PTR [edi+0xa5d96ef]
  402bf4:	xor    ah,BYTE PTR [edx+0x73]
  402bf7:	mov    esi,0x397d7acd
  402bfc:	test   DWORD PTR [esi],eax
  402bfe:	pop    ecx
  402bff:	fwait
  402c00:	jg     0x402c55
  402c02:	(bad)  
  402c03:	xchg   ebx,eax
  402c04:	jb     0x402c74
  402c06:	or     BYTE PTR [ecx-0x73],cl
  402c09:	jmp    FWORD PTR [ebp-0x42]
  402c0c:	push   es
  402c0d:	push   ecx
  402c0e:	add    eax,0xfd8ee6ba
  402c13:	loopne 0x402c75
  402c15:	and    esp,DWORD PTR [ecx]
  402c17:	retf   0x8116
  402c1a:	mov    ch,0x65
  402c1c:	das    
  402c1d:	adc    DWORD PTR [esi],edi
  402c1f:	pop    esi
  402c20:	jmp    0x4b874408
  402c25:	or     ebx,ebx
  402c27:	hlt    
  402c28:	sar    BYTE PTR [eax],cl
  402c2a:	ss jbe 0x402c4e
  402c2d:	jle    0x402c5c
  402c2f:	das    
  402c30:	aad    0x2c
  402c32:	in     eax,dx
  402c33:	mov    cl,dh
  402c35:	test   eax,0xbffd0d12
  402c3a:	int    0x3b
  402c3c:	fisubr DWORD PTR [edx]
  402c3e:	add    al,0x2a
  402c40:	mov    eax,ds:0x408c20d3
  402c45:	push   0x43
  402c47:	mov    al,ds:0x1e2efd09
  402c4c:	mov    ah,0xdc
  402c4e:	in     al,0x42
  402c50:	jbe    0x402ca4
  402c52:	icebp  
  402c53:	and    al,0x99
  402c55:	push   ecx
  402c56:	xchg   edx,eax
  402c57:	in     al,0xdf
  402c59:	mov    eax,DWORD PTR [edi-0x3d3ecae9]
  402c5f:	add    eax,0xe6607f3a
  402c64:	cmp    DWORD PTR [ebx-0x309d72b1],ebx
  402c6a:	push   0xfffffff8
  402c6c:	cmovb  edx,DWORD PTR [esi+0x2a]
  402c70:	mov    cl,BYTE PTR [edx]
  402c72:	clc    
  402c73:	mov    ds:0x9c2363b7,al
  402c78:	mov    esi,0x49473fc2
  402c7d:	dec    esi
  402c7e:	add    ecx,ecx
  402c80:	xchg   ebp,eax
  402c81:	imul   ebx,DWORD PTR [ecx-0x18c9608a],0xfffffff1
  402c88:	data16 outs dx,BYTE PTR ds:[esi]
  402c8a:	sub    BYTE PTR [esi+0x7d],bl
  402c8d:	ins    DWORD PTR es:[edi],dx
  402c8e:	inc    ecx
  402c8f:	jecxz  0x402cf5
  402c91:	adc    BYTE PTR [ecx],0xec
  402c94:	loope  0x402c2e
  402c96:	rol    DWORD PTR [eax-0x6e],0xd7
  402c9a:	pop    esi
  402c9b:	aas    
  402c9c:	sbb    eax,0xe298dd15
  402ca1:	mov    ds:0x190a2119,eax
  402ca6:	jne    0x402c81
  402ca8:	in     eax,0xbb
  402caa:	daa    
  402cab:	mov    al,ds:0x1b55d128
  402cb0:	xlat   BYTE PTR ds:[ebx]
  402cb1:	in     al,0x3c
  402cb3:	sub    al,0x8e
  402cb5:	scas   eax,DWORD PTR es:[edi]
  402cb6:	mov    al,0xb8
  402cb8:	hlt    
  402cb9:	test   al,0xe9
  402cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cbc:	mov    al,ds:0x972a7c00
  402cc1:	and    al,0x24
  402cc3:	adc    ecx,0x14
  402cc6:	clc    
  402cc7:	xchg   esi,eax
  402cc8:	arpl   WORD PTR [eax],bx
  402cca:	inc    esp
  402ccb:	je     0x402c6e
  402ccd:	jbe    0x402c52
  402ccf:	fsub   DWORD PTR [eax]
  402cd1:	in     eax,dx
  402cd2:	ins    DWORD PTR es:[edi],dx
  402cd3:	push   ds
  402cd4:	lods   eax,DWORD PTR ds:[esi]
  402cd5:	xlat   BYTE PTR ds:[ebx]
  402cd6:	jecxz  0x402cae
  402cd8:	int3   
  402cd9:	push   cs
  402cda:	(bad)  
  402cdc:	or     ebx,DWORD PTR [ebp+0x2b5e7e95]
  402ce2:	xchg   bh,bl
  402ce4:	repnz nop
  402ce6:	or     al,0x86
  402ce8:	push   ecx
  402ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cea:	fdivr  QWORD PTR [edx+0x3d1c4b70]
  402cf0:	adc    ah,BYTE PTR [esp+ecx*1+0x6ee74313]
  402cf7:	or     al,0x75
  402cf9:	retf   
  402cfa:	adc    eax,0x48786915
  402cff:	loop   0x402cc2
  402d01:	cli    
  402d02:	sar    DWORD PTR [eax],cl
  402d04:	jnp    0x402d30
  402d06:	adc    ecx,ebx
  402d08:	aam    0x59
  402d0a:	push   ecx
  402d0b:	(bad)  
  402d0c:	mov    eax,ds:0xe92605fc
  402d11:	add    DWORD PTR [eax+0x67eb439e],esi
  402d17:	jge    0x402d75
  402d19:	int    0x15
  402d1b:	(bad)  
  402d1c:	das    
  402d1d:	lods   al,BYTE PTR ds:[esi]
  402d1e:	adc    ch,cl
  402d20:	enter  0xaee6,0x84
  402d24:	retf   0xe7f5
  402d27:	cmp    DWORD PTR [ebx+0x41eae325],ecx
  402d2d:	outs   dx,DWORD PTR ds:[esi]
  402d2e:	adc    DWORD PTR [edi-0x5e99a5f4],0x32
  402d35:	mov    eax,ds:0x24f8b624
  402d3a:	pop    eax
  402d3b:	popa   
  402d3c:	pushf  
  402d3d:	adc    BYTE PTR [ebx+0x42],bh
  402d40:	pop    ds
  402d41:	inc    ebp
  402d42:	inc    ecx
  402d43:	jno    0x402d8b
  402d45:	adc    DWORD PTR [edx*1+0x2aa27ddf],edx
  402d4c:	sahf   
  402d4d:	rol    DWORD PTR [edi-0x5937bb2f],0x59
  402d54:	pop    ds
  402d55:	push   0x6ef49dc3
  402d5a:	js     0x402dd9
  402d5c:	adc    cl,BYTE PTR [ebx]
  402d5e:	sbb    ah,BYTE PTR [eax]
  402d60:	imul   ebx,edx,0xffffffb2
  402d63:	les    ebx,FWORD PTR [esi+edi*4]
  402d66:	int3   
  402d67:	int    0x3d
  402d69:	arpl   WORD PTR [ecx+0x32],bp
  402d6c:	pop    ds
  402d6d:	pop    ecx
  402d6e:	in     eax,0xbf
  402d70:	pop    edx
  402d71:	cs addr16 cwde 
  402d74:	add    al,0xe1
  402d76:	or     DWORD PTR [edi+0x305f823a],ebx
  402d7c:	inc    esi
  402d7d:	fmul   DWORD PTR [edx-0x7e1aaa]
  402d83:	(bad)  
  402d84:	pop    edi
  402d85:	mov    ecx,0xfa24dc53
  402d8a:	sub    dh,dl
  402d8c:	cs xchg edx,eax
  402d8e:	cmp    al,0xbf
  402d90:	xchg   edx,eax
  402d91:	mov    al,ds:0x6e3cffc6
  402d96:	xchg   esi,eax
  402d97:	adc    al,0xff
  402d99:	int3   
  402d9a:	cli    
  402d9b:	push   ss
  402d9c:	mov    al,ds:0x8855313c
  402da1:	sbb    eax,0x957d1d6b
  402da6:	xor    DWORD PTR [bx+di],ebx
  402da9:	shr    eax,0xab
  402dac:	loope  0x402d38
  402dae:	pop    edi
  402daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db0:	sbb    eax,0x3d9a6eee
  402db5:	test   eax,0x3dc592e0
  402dba:	pop    ds
  402dbb:	pop    esp
  402dbc:	bound  ebp,QWORD PTR [esi-0x52ac5285]
  402dc2:	mov    al,0x94
  402dc4:	jne    0x402e12
  402dc6:	mov    ah,0xd6
  402dc8:	push   0x67
  402dca:	adc    ch,BYTE PTR [ebx-0x32d05ac6]
  402dd0:	mov    esp,0x93d85102
  402dd5:	jmp    0x402dae
  402dd7:	inc    ebp
  402dd8:	jg     0x402e44
  402dda:	and    DWORD PTR [ecx+0x373d99f5],esi
  402de0:	adc    cl,BYTE PTR [esp+eax*4]
  402de3:	fild   DWORD PTR [edx]
  402de5:	push   edi
  402de6:	push   ebp
  402de7:	cmp    eax,0x922a7f6a
  402dec:	inc    edi
  402ded:	cli    
  402dee:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  402df0:	test   eax,0xf5e99bc
  402df5:	loope  0x402df5
  402df7:	repnz cmc 
  402df9:	or     eax,0xfdf580cf
  402dfe:	mov    al,0x19
  402e00:	sub    ebp,DWORD PTR [eax-0x54]
  402e03:	pop    DWORD PTR [edx]
  402e05:	lock fwait
  402e07:	or     cl,BYTE PTR [ebx-0x73dda78f]
  402e0d:	not    ebp
  402e0f:	cmp    DWORD PTR cs:0x91f50c8f,eax
  402e16:	stc    
  402e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e18:	xor    DWORD PTR [ecx+0x5b],0x13
  402e1c:	icebp  
  402e1d:	xor    ch,dh
  402e1f:	test   bh,ch
  402e21:	(bad)  
  402e22:	stc    
  402e23:	xchg   ecx,eax
  402e24:	stos   BYTE PTR es:[edi],al
  402e25:	push   ebp
  402e26:	pusha  
  402e27:	sahf   
  402e28:	lods   eax,DWORD PTR ds:[esi]
  402e29:	std    
  402e2a:	cmc    
  402e2b:	adc    bh,BYTE PTR [eax+edi*4+0x16]
  402e2f:	repz or ebx,esi
  402e32:	pop    edx
  402e33:	mov    WORD PTR [esi],fs
  402e35:	dec    edx
  402e36:	adc    dl,0xd7
  402e39:	add    eax,0xae26cb5d
  402e3e:	sub    ch,al
  402e40:	outs   dx,BYTE PTR ds:[esi]
  402e41:	dec    edi
  402e42:	in     eax,dx
  402e43:	adc    al,0xc5
  402e45:	adc    bl,ch
  402e47:	faddp  st(3),st
  402e49:	mov    ds:0x2314e8aa,al
  402e4e:	(bad)  
  402e4f:	dec    BYTE PTR [ebp+0x5d59f348]
  402e55:	daa    
  402e56:	icebp  
  402e57:	std    
  402e58:	inc    ecx
  402e59:	adc    dl,BYTE PTR [ebx]
  402e5b:	pop    ecx
  402e5c:	push   ecx
  402e5d:	pop    ds
  402e5e:	(bad)
  402e61:	aas    
  402e62:	(bad)  
  402e63:	cld    
  402e64:	or     ecx,edx
  402e66:	sub    DWORD PTR [esi-0x1e],edi
  402e69:	adc    BYTE PTR [esi+0x52],0xb0
  402e6d:	(bad)  
  402e6e:	arpl   WORD PTR [esi+edi*4+0x632ef8d9],di
  402e75:	pop    edx
  402e76:	adc    ebp,eax
  402e78:	xchg   di,ax
  402e7a:	and    cl,BYTE PTR [eax+0x44]
  402e7d:	lahf   
  402e7e:	fisttp DWORD PTR ds:0xee2bf8cd
  402e84:	xchg   ebp,eax
  402e85:	push   ebp
  402e86:	add    al,cl
  402e88:	jb     0x402e67
  402e8a:	sub    ecx,esp
  402e8c:	mov    esp,0xe99d99ea
  402e91:	push   eax
  402e92:	xlat   BYTE PTR ds:[ebx]
  402e93:	inc    edx
  402e94:	jge    0x402e88
  402e96:	inc    DWORD PTR [ecx]
  402e98:	or     dh,BYTE PTR [ebp+0x5e]
  402e9b:	retf   
  402e9c:	jmp    0x543baaf6
  402ea1:	hlt    
  402ea2:	add    eax,0x94dc860f
  402ea7:	push   eax
  402ea8:	cdq    
  402ea9:	pop    ss
  402eaa:	cli    
  402eab:	push   ebx
  402eac:	rcr    DWORD PTR ds:0xee5ee3fa,0xc4
  402eb3:	sub    BYTE PTR [esi],bl
  402eb5:	in     al,dx
  402eb6:	xor    DWORD PTR [edi+0x48],ebx
  402eb9:	or     eax,0xa550fa2b
  402ebe:	add    eax,0x52f54641
  402ec3:	ret    
  402ec4:	iret   
  402ec5:	scas   eax,DWORD PTR es:[edi]
  402ec6:	test   DWORD PTR [esi+edi*8+0x79d9211c],edx
  402ecd:	icebp  
  402ece:	aaa    
  402ecf:	into   
  402ed0:	jb     0x402f19
  402ed2:	shl    DWORD PTR [edx],cl
  402ed4:	repz retf 
  402ed6:	mov    al,0xa2
  402ed8:	shl    BYTE PTR [edx],cl
  402eda:	ja     0x402e82
  402edc:	xchg   edi,esp
  402ede:	mov    eax,0xe917bc36
  402ee3:	das    
  402ee4:	or     BYTE PTR [eax+0x29273a25],dh
  402eea:	and    al,0x1
  402eec:	jb     0x402f5e
  402eee:	xchg   ebp,eax
  402eef:	jmp    0x402f62
  402ef1:	ss aad 0xe3
  402ef4:	or     al,0x35
  402ef6:	and    dl,BYTE PTR [eax+0x35]
  402ef9:	mov    ah,0x84
  402efb:	and    BYTE PTR [eax-0x2ba81a5b],0x98
  402f02:	(bad)  
  402f03:	pusha  
  402f04:	push   ds
  402f05:	repz in al,dx
  402f07:	jmp    0x2e55:0x7902d158
  402f0e:	pop    es
  402f0f:	xor    cl,ch
  402f11:	stc    
  402f12:	inc    eax
  402f13:	and    al,0xcc
  402f15:	mov    fs,WORD PTR [edi]
  402f17:	sub    edx,eax
  402f19:	sub    al,0x8a
  402f1b:	test   BYTE PTR [edi],0xba
  402f1e:	or     eax,0xc42bc10f
  402f23:	aas    
  402f24:	push   eax
  402f25:	repnz mov cs,WORD PTR [edi-0x52]
  402f29:	lds    esp,FWORD PTR [ebx]
  402f2b:	and    edx,DWORD PTR [ebx-0x3ba1afd1]
  402f31:	cs inc eax
  402f33:	mov    bl,0x10
  402f35:	scas   eax,DWORD PTR es:[edi]
  402f36:	xchg   ebx,eax
  402f37:	jae    0x402eba
  402f39:	add    ecx,edi
  402f3b:	pop    esp
  402f3c:	lahf   
  402f3d:	xchg   ebp,eax
  402f3e:	repz push ds
  402f40:	hlt    
  402f41:	lods   al,BYTE PTR ds:[esi]
  402f42:	popf   
  402f43:	xchg   DWORD PTR [edi+0x219a46a0],ebp
  402f49:	and    eax,0xf7dde3da
  402f4e:	fild   WORD PTR [ecx]
  402f50:	int3   
  402f51:	mov    WORD PTR [ebp-0x37],fs
  402f54:	jmp    0xfb16bcdb
  402f59:	xor    al,0xcb
  402f5b:	(bad)  
  402f5c:	jecxz  0x402fa5
  402f5e:	bound  edi,QWORD PTR [esi]
  402f60:	(bad)  
  402f61:	sahf   
  402f62:	aam    0xe3
  402f64:	retf   0xb1a2
  402f67:	test   DWORD PTR ds:0xf7f7d068,edi
  402f6d:	jo     0x402f63
  402f6f:	push   ds
  402f70:	push   ecx
  402f71:	(bad)  
  402f73:	ds cmp ecx,edi
  402f76:	shl    DWORD PTR [edx+0x24ecf1dc],cl
  402f7c:	repz test BYTE PTR [edi-0x77],cl
  402f80:	dec    ebx
  402f81:	icebp  
  402f82:	cmc    
  402f83:	mov    cl,0x54
  402f85:	loopne 0x402f5f
  402f87:	enter  0xc82f,0xdb
  402f8b:	sti    
  402f8c:	add    eax,0xc5d85895
  402f91:	xchg   esp,eax
  402f92:	sbb    edi,DWORD PTR ds:0x53db9d99
  402f98:	enter  0x2fa3,0xa6
  402f9c:	mov    al,ds:0x329d75d7
  402fa1:	mov    ch,0xce
  402fa3:	shr    bh,1
  402fa5:	mov    BYTE PTR [eax-0x653a8026],ah
  402fab:	or     BYTE PTR [ecx+0x34],bl
  402fae:	retf   
  402faf:	sar    BYTE PTR [ebp-0x17cc0ffb],cl
  402fb5:	es es or al,0x4a
  402fb9:	int    0x98
  402fbb:	fwait
  402fbc:	retf   0x2f77
  402fbf:	icebp  
  402fc0:	inc    ebp
  402fc1:	jmp    0x6352baff
  402fc6:	test   eax,0xda67f4a4
  402fcb:	ror    BYTE PTR [esi+0x7ca66499],0x21
  402fd2:	xchg   edi,eax
  402fd3:	push   es
  402fd4:	clc    
  402fd5:	mov    al,ds:0x96f60b9b
  402fda:	sub    cl,0x5b
  402fdd:	js     0x40305d
  402fdf:	and    DWORD PTR [ecx],ebx
  402fe1:	hlt    
  402fe2:	int3   
  402fe3:	out    dx,al
  402fe4:	mov    ah,0x3e
  402fe6:	xchg   edx,eax
  402fe7:	mov    esp,0x7e5b6ade
  402fec:	sbb    bh,BYTE PTR [edx+0x7011f29e]
  402ff2:	dec    DWORD PTR [esi+esi*1+0x6b]
  402ff6:	xor    DWORD PTR [ecx+0x6a],edx
  402ff9:	sar    DWORD PTR [ebx+0x46ed5474],cl
  402fff:	mov    ds:0x6df03b06,eax
  403004:	mov    dh,0xab
  403006:	lahf   
  403007:	arpl   si,ax
  403009:	out    dx,eax
  40300a:	mov    ebp,0x5a713813
  40300f:	stc    
  403010:	ror    DWORD PTR [ecx],1
  403012:	hlt    
  403013:	sub    esp,ebp
  403015:	(bad)  
  403016:	xchg   ebx,eax
  403017:	and    BYTE PTR [eax-0x6260d77c],0x49
  40301e:	(bad)  
  40301f:	push   ecx
  403020:	imul   ebp,DWORD PTR [eax+0x11],0x60
  403024:	aaa    
  403025:	sub    dh,dl
  403027:	lea    edx,[ebx-0x511436b3]
  40302d:	cs xor esp,edx
  403030:	icebp  
  403031:	jbe    0x402ffe
  403033:	push   esp
  403034:	adc    DWORD PTR [edi-0x2e],ecx
  403037:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  403039:	cld    
  40303a:	pop    eax
  40303b:	add    al,0x71
  40303d:	ins    BYTE PTR es:[edi],dx
  40303e:	jae    0x40308a
  403040:	ss fxch st(0)
  403043:	std    
  403044:	dec    eax
  403045:	dec    esi
  403046:	pushf  
  403047:	mov    esp,0x857b7a44
  40304c:	inc    esi
  40304d:	xchg   ebx,eax
  40304e:	jmp    0x390a:0x88fefbf6
  403055:	cmp    al,0xbe
  403057:	mov    cl,0xb9
  403059:	xchg   esp,eax
  40305a:	icebp  
  40305b:	(bad)
  40305e:	call   0x75a8:0x7dafc09c
  403065:	xchg   ebx,ebp
  403067:	mov    bl,0xb7
  403069:	test   DWORD PTR [esi+0x7d93c7a3],edx
  40306f:	mov    ecx,0x4cf677dd
  403074:	sbb    edx,edx
  403076:	push   cs
  403077:	xchg   ebx,eax
  403078:	add    al,0xef
  40307a:	xor    ebp,esp
  40307c:	push   esp
  40307d:	mov    edi,0x108fa091
  403082:	or     edx,esp
  403084:	push   0x50
  403086:	cli    
  403087:	sbb    BYTE PTR [eax],dh
  403089:	lahf   
  40308a:	pop    eax
  40308b:	aad    0x81
  40308d:	cs xchg edi,eax
  40308f:	jo     0x403100
  403091:	inc    edx
  403092:	sbb    dl,BYTE PTR [ebx-0x2bdcc39e]
  403098:	xchg   esi,eax
  403099:	jge    0x403116
  40309b:	mov    ch,0xf3
  40309d:	js     0x403116
  40309f:	or     al,0x31
  4030a1:	xor    al,0x2
  4030a3:	xor    al,0x70
  4030a5:	ds xchg edx,eax
  4030a7:	int    0xc3
  4030a9:	out    dx,eax
  4030aa:	arpl   WORD PTR [eax],dx
  4030ac:	push   ss
  4030ad:	test   eax,0x455284c0
  4030b2:	call   0xae402c60
  4030b7:	cli    
  4030b8:	push   cs
  4030b9:	lods   al,BYTE PTR ds:[esi]
  4030ba:	xor    dh,dl
  4030bc:	ins    DWORD PTR es:[edi],dx
  4030bd:	push   eax
  4030be:	push   edi
  4030bf:	stos   DWORD PTR es:[edi],eax
  4030c0:	dec    edi
  4030c1:	push   ss
  4030c2:	idiv   BYTE PTR [ebx]
  4030c4:	mov    cl,0x90
  4030c6:	scas   al,BYTE PTR es:[edi]
  4030c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030c8:	in     al,dx
  4030c9:	call   0xbc89:0x4f14baa3
  4030d0:	cmp    ebx,DWORD PTR [ebp+0x6bce9de0]
  4030d6:	mov    ecx,gs
  4030d8:	lods   eax,DWORD PTR ds:[esi]
  4030d9:	sub    eax,0xb3b81510
  4030de:	mov    edx,0x8a6778c2
  4030e3:	xor    ch,al
  4030e5:	repnz dec edi
  4030e7:	das    
  4030e8:	inc    ebx
  4030e9:	inc    ecx
  4030ea:	mov    edi,cs
  4030ec:	outs   dx,DWORD PTR ds:[esi]
  4030ed:	leave  
  4030ee:	sbb    ebx,edx
  4030f0:	add    ebx,DWORD PTR [ebp-0x7c049a9e]
  4030f6:	arpl   di,di
  4030f8:	push   ds
  4030f9:	mov    dl,0xee
  4030fb:	pop    es
  4030fc:	cmp    al,0xf3
  4030fe:	mov    ecx,0xc4638c91
  403103:	sbb    DWORD PTR [esi-0x19f5bc29],ecx
  403109:	cmp    al,0x31
  40310b:	ret    0x3811
  40310e:	jae    0x403110
  403110:	push   0x8c8bae5a
  403115:	ja     0x403181
  403117:	mov    ds:0x32e1b246,eax
  40311c:	mov    dl,0x4d
  40311e:	push   ds
  40311f:	arpl   WORD PTR [ebp+0x2dd2501f],cx
  403125:	loopne 0x403160
  403127:	pop    eax
  403128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403129:	stos   BYTE PTR es:[edi],al
  40312a:	mov    ebp,DWORD PTR [edi-0x7f]
  40312d:	jecxz  0x4030d6
  40312f:	pop    esi
  403130:	mov    eax,DWORD PTR [ebx]
  403132:	test   BYTE PTR [edi-0x25],cl
  403135:	in     eax,dx
  403136:	jae    0x40315d
  403138:	test   DWORD PTR [esi],ebp
  40313a:	mov    ds:0x15bca4b1,al
  40313f:	data16 outs dx,BYTE PTR ds:[esi]
  403141:	mov    BYTE PTR [ebx*8+0x45222f53],al
  403148:	mov    ch,0x4b
  40314a:	ds pop edx
  40314c:	sar    DWORD PTR [edx],1
  40314e:	mov    ds:0x1ca7fc98,eax
  403153:	not    BYTE PTR [edi+0x58cb9e04]
  403159:	and    al,dl
  40315b:	mov    bh,0xdd
  40315d:	scas   al,BYTE PTR es:[edi]
  40315e:	dec    edi
  40315f:	(bad)  
  403160:	xchg   ebx,eax
  403161:	inc    esp
  403162:	mov    ch,0x1
  403164:	cmp    dh,BYTE PTR [ebp-0x26]
  403167:	xor    eax,0xdf6bc9c1
  40316c:	retf   0x3eb3
  40316f:	dec    edx
  403170:	sbb    DWORD PTR [esi],edx
  403172:	push   cs
  403173:	popa   
  403174:	ds cdq 
  403176:	(bad)  
  403177:	arpl   WORD PTR [ebp+0x792b7df8],bp
  40317d:	sub    bh,bh
  40317f:	jns    0x40316e
  403181:	mov    cl,0xcf
  403183:	fcmovnb st,st(7)
  403185:	test   BYTE PTR [eax],bh
  403187:	jno    0x40317a
  403189:	dec    ebp
  40318a:	push   eax
  40318b:	cmp    dl,bh
  40318d:	pop    ecx
  40318e:	cmp    eax,0xe9810bde
  403193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403194:	mov    ecx,0x7bd24d1e
  403199:	mov    dh,0x4a
  40319b:	xor    eax,DWORD PTR [edi]
  40319d:	cmp    bl,bl
  40319f:	fwait
  4031a0:	jb     0x403170
  4031a2:	aas    
  4031a3:	ds pop esi
  4031a5:	sub    al,0x94
  4031a7:	jecxz  0x403177
  4031a9:	and    BYTE PTR [edi-0xb800d35],dl
  4031af:	sti    
  4031b0:	xor    edi,ebx
  4031b2:	cmp    DWORD PTR ds:0xd691b094,edi
  4031b8:	sub    eax,0x74ae2e7b
  4031bd:	mov    ebp,0xad5258e2
  4031c2:	sar    BYTE PTR [ebx+0xc],1
  4031c5:	test   al,0xf9
  4031c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c8:	push   cs
  4031c9:	cmp    DWORD PTR [esi-0x2b],esp
  4031cc:	jle    0x40321a
  4031ce:	cmp    cl,BYTE PTR [ecx-0x658a724]
  4031d4:	mov    ebp,0x8847805c
  4031d9:	mov    BYTE PTR [edx-0x40],bh
  4031dc:	xor    BYTE PTR [esi+0x59ac43d7],bh
  4031e2:	fmul   DWORD PTR [esi]
  4031e4:	fstp   TBYTE PTR [ecx]
  4031e6:	dec    ebx
  4031e7:	(bad)  
  4031e8:	std    
  4031e9:	push   eax
  4031ea:	push   eax
  4031eb:	mov    ecx,es
  4031ed:	or     edi,DWORD PTR [edx+0xa400bd4]
  4031f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031f4:	(bad)  
  4031f5:	xor    cl,BYTE PTR [edi+0x5bee4d7c]
  4031fb:	pop    es
  4031fc:	add    BYTE PTR [esi-0x12aa7d0e],0xd4
  403203:	aad    0x7c
  403205:	stc    
  403206:	mov    edi,0xb6ff7e5f
  40320b:	in     al,dx
  40320c:	mov    ?,edi
  40320e:	mov    edi,0x2f77990a
  403213:	enter  0x31b,0x1c
  403217:	and    eax,DWORD PTR ds:0xc2f7ad95
  40321d:	push   cs
  40321e:	fcmovne st,st(6)
  403220:	stos   DWORD PTR es:[edi],eax
  403221:	and    DWORD PTR [edi],esp
  403223:	or     BYTE PTR [ecx-0x442720ca],dh
  403229:	and    edi,DWORD PTR [esi+0x7c709b00]
  40322f:	and    BYTE PTR [eax],dl
  403231:	sahf   
  403232:	adc    eax,0xad0717fc
  403237:	out    dx,al
  403238:	jno    0x4031c8
  40323a:	outs   dx,DWORD PTR ds:[esi]
  40323b:	mov    ds:0x269e22a3,eax
  403240:	push   0xffffffdd
  403242:	imul   ebp,edi,0x631c50c6
  403248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403249:	in     eax,0xa7
  40324b:	jmp    0x9a0d098b
  403250:	jae    0x403250
  403252:	std    
  403253:	mov    ch,0x79
  403255:	adc    al,0x4e
  403257:	push   es
  403258:	cwde   
  403259:	and    BYTE PTR [edx-0x26e2f2e9],0x3
  403260:	mov    al,0xb2
  403262:	jge    0x40329c
  403264:	out    0xb3,al
  403266:	xchg   esi,eax
  403267:	xchg   ecx,eax
  403268:	loope  0x4032c7
  40326a:	cmp    al,0x90
  40326c:	and    al,0x6a
  40326e:	or     al,0x6f
  403270:	(bad)  
  403272:	in     al,0x97
  403274:	in     eax,0xee
  403276:	jbe    0x40322a
  403278:	popa   
  403279:	loopne 0x403225
  40327b:	lods   al,BYTE PTR ds:[esi]
  40327c:	retf   
  40327d:	adc    al,0x5b
  40327f:	pop    ebp
  403280:	cwde   
  403281:	sbb    bl,bl
  403283:	(bad)  
  403284:	xor    DWORD PTR [eax],0x4b
  403287:	add    edx,DWORD PTR [eax+0x74050d1c]
  40328d:	call   0x72a:0xcfadf745
  403294:	jbe    0x403284
  403296:	ror    BYTE PTR [ecx-0x67],1
  403299:	dec    esi
  40329a:	xlat   BYTE PTR ds:[ebx]
  40329b:	pop    eax
  40329c:	xchg   BYTE PTR [ebx-0x26],ch
  40329f:	mov    dh,0xf5
  4032a1:	mov    esp,0x853f2e06
  4032a6:	test   al,0x38
  4032a8:	and    al,0xee
  4032aa:	hlt    
  4032ab:	xor    DWORD PTR [edi],esp
  4032ad:	xchg   DWORD PTR [ecx+ecx*1],eax
  4032b0:	cwde   
  4032b1:	dec    esp
  4032b2:	popa   
  4032b3:	xor    al,0xeb
  4032b5:	jg     0x40327b
  4032b7:	push   ss
  4032b8:	js     0x40325c
  4032ba:	xchg   BYTE PTR [edx-0x48276588],bl
  4032c0:	out    0x9f,al
  4032c2:	fdivr  st,st(7)
  4032c4:	pop    edi
  4032c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032c6:	das    
  4032c7:	call   0x6728e67a
  4032cc:	inc    ebp
  4032cd:	idiv   esp
  4032cf:	push   0x5cf375f3
  4032d4:	jo     0x403278
  4032d6:	hlt    
  4032d7:	pop    esp
  4032d8:	fcmovne st,st(4)
  4032da:	mov    al,ds:0xf02a4ad5
  4032df:	push   esp
  4032e0:	aas    
  4032e1:	push   cs
  4032e2:	and    al,0x39
  4032e4:	xchg   ecx,eax
  4032e5:	dec    ebx
  4032e6:	jle    0x4032aa
  4032e8:	push   ebx
  4032e9:	cmp    eax,0xe093fb62
  4032ee:	xlat   BYTE PTR ds:[ebx]
  4032ef:	out    0x5c,eax
  4032f1:	inc    esi
  4032f2:	push   ecx
  4032f3:	enter  0xe49f,0x87
  4032f7:	in     al,0xeb
  4032f9:	xor    bh,BYTE PTR ds:0x821f5b57
  4032ff:	in     al,dx
  403300:	fsub   st(7),st
  403302:	sub    dl,al
  403304:	shl    DWORD PTR [ebx+0x3860225b],cl
  40330a:	scas   eax,DWORD PTR es:[edi]
  40330b:	inc    edx
  40330c:	jno    0x40333d
  40330e:	xchg   DWORD PTR [ebx+0x6339a308],esi
  403314:	pop    edx
  403315:	add    bh,BYTE PTR [ebx-0x728e122b]
  40331b:	test   BYTE PTR [esi+edx*2+0x7b],dh
  40331f:	outs   dx,DWORD PTR ds:[esi]
  403320:	jno    0x4032ee
  403322:	test   al,0xc
  403324:	fs push ebx
  403326:	and    bh,BYTE PTR [ebx-0x648e08e1]
  40332c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40332d:	xor    DWORD PTR [eax+esi*8+0x63],eax
  403331:	out    dx,eax
  403332:	imul   ecx,DWORD PTR ds:0x2c27ba2f,0x48
  403339:	ja     0x4032ec
  40333b:	(bad)  
  40333c:	fdivr  st,st(4)
  40333e:	add    dl,BYTE PTR [eax+0x52]
  403341:	stos   BYTE PTR es:[edi],al
  403342:	dec    esi
  403343:	pusha  
  403344:	fcomip st,st(5)
  403346:	(bad)  
  403347:	mov    dh,0x50
  403349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40334a:	ins    BYTE PTR es:[edi],dx
  40334b:	inc    esi
  40334c:	(bad)  
  40334d:	pop    ss
  40334e:	stos   DWORD PTR es:[edi],eax
  40334f:	add    dl,cl
  403351:	adc    DWORD PTR [ecx-0x68],0xffffffbb
  403355:	mov    esp,0xe8fc9dea
  40335a:	sti    
  40335b:	sbb    cl,BYTE PTR [esi+0x51a4534b]
  403361:	push   esi
  403362:	ret    
  403363:	mov    al,ds:0x4cb18c4b
  403368:	cmp    cl,BYTE PTR [edx+0x3]
  40336b:	xor    ah,ch
  40336d:	push   ds
  40336e:	adc    BYTE PTR [edi],0xac
  403371:	cli    
  403372:	nop
  403373:	out    0x8c,al
  403375:	aad    0x6e
  403377:	je     0x403328
  403379:	add    BYTE PTR ss:[eax-0x7ae983c7],bh
  403380:	ins    BYTE PTR es:[edi],dx
  403381:	test   BYTE PTR [esi+0x6b05a849],0x4f
  403388:	outs   dx,BYTE PTR ds:[esi]
  403389:	pop    ecx
  40338a:	xchg   cl,bl
  40338c:	add    DWORD PTR [ebx],ebp
  40338e:	cmp    al,0x3
  403390:	dec    edi
  403391:	hlt    
  403392:	bound  esp,QWORD PTR [edx-0x2fb57bcf]
  403398:	xchg   BYTE PTR [ebx-0x25b3d0dc],ch
  40339e:	mov    bh,0xdf
  4033a0:	xor    dh,BYTE PTR [esi-0x5b3fef93]
  4033a6:	cld    
  4033a7:	stos   DWORD PTR es:[di],eax
  4033a9:	mov    esi,0x60327a38
  4033ae:	in     eax,0x20
  4033b0:	lds    eax,FWORD PTR [ecx-0x6d7daf]
  4033b6:	sbb    eax,0xe2af7160
  4033bb:	enter  0xc6ac,0xba
  4033bf:	mov    ds:0x7eaf6aea,eax
  4033c4:	or     edx,DWORD PTR [ebp+eax*4-0x6ed418df]
  4033cb:	mov    edi,DWORD PTR [esi+0x75796f15]
  4033d1:	sti    
  4033d2:	mov    ebx,0xce35d222
  4033d7:	fidivr WORD PTR [ecx+0x3]
  4033da:	lock lds ecx,FWORD PTR [ebp-0x2812ab6e]
  4033e1:	(bad)  
  4033e2:	int    0x5a
  4033e4:	cmp    al,0xcb
  4033e6:	mov    esi,0xb49e9e44
  4033eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033ec:	outs   dx,BYTE PTR ds:[esi]
  4033ed:	fs sub eax,0x1160d388
  4033f3:	in     eax,dx
  4033f4:	jne    0x403408
  4033f6:	xchg   esp,ecx
  4033f8:	iret   
  4033f9:	sahf   
  4033fa:	in     eax,dx
  4033fb:	loopne 0x40346d
  4033fd:	xor    DWORD PTR [ebx-0x2fac70f4],ebx
  403403:	adc    DWORD PTR [edx+0x15],edx
  403406:	int3   
  403407:	das    
  403408:	push   edi
  403409:	mov    edi,DWORD PTR [esi]
  40340b:	cdq    
  40340c:	(bad)  
  40340e:	xchg   DWORD PTR [edx-0x2],ebx
  403411:	push   ebp
  403412:	(bad)  
  403413:	add    al,0x74
  403415:	pop    ss
  403416:	ret    0x15c5
  403419:	mov    eax,ds:0xe7c2a7f5
  40341e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40341f:	hlt    
  403420:	pop    ebx
  403421:	gs popa 
  403423:	xchg   esi,eax
  403424:	cmp    cl,BYTE PTR [ecx-0x1c]
  403427:	leave  
  403428:	mov    edx,0x7fbb8448
  40342d:	sub    eax,0x6094129
  403432:	push   0xffffff92
  403434:	clc    
  403435:	cmp    BYTE PTR [esi+0x79466deb],0x3
  40343c:	aam    0x87
  40343e:	mov    dl,0x5c
  403440:	sub    ebx,ebp
  403442:	lea    edi,[eax+ecx*1+0x75]
  403446:	inc    eax
  403447:	push   ds
  403448:	shl    BYTE PTR [edi+ebx*4+0x4a08d94e],1
  40344f:	in     eax,0xd9
  403451:	in     eax,0x84
  403453:	test   ah,dl
  403455:	xor    BYTE PTR [ebx+0x54],0xfc
  403459:	popf   
  40345a:	int3   
  40345b:	mov    WORD PTR [ecx+0x23],gs
  40345e:	xor    eax,0xa1d33353
  403463:	ret    0x4c2e
  403466:	add    cl,BYTE PTR [ecx-0x37]
  403469:	dec    eax
  40346a:	fucomip st,st(5)
  40346c:	xchg   esp,eax
  40346d:	mov    ds:0xba19cac1,al
  403472:	fs pop ebx
  403474:	cs jb  0x403447
  403477:	lds    esp,FWORD PTR [edi]
  403479:	mov    ch,0xae
  40347b:	xor    al,0x4e
  40347d:	lock and eax,0xbfa9a0dc
  403483:	inc    ecx
  403484:	and    al,0x5b
  403486:	mov    eax,0xfdf41815
  40348b:	popf   
  40348c:	dec    ebp
  40348d:	mov    ebx,0x26067566
  403492:	xor    bl,dl
  403494:	cmp    bh,BYTE PTR [edx]
  403496:	iret   
  403497:	inc    esi
  403498:	aaa    
  403499:	cs call 0x2fc73315
  40349f:	in     al,dx
  4034a0:	push   ebx
  4034a1:	jmp    0x40351e
  4034a3:	or     DWORD PTR [ebx+0x4d],0xffffffcd
  4034a7:	ret    0x2f93
  4034aa:	adc    al,0x62
  4034ac:	lea    esi,[eax]
  4034ae:	or     BYTE PTR [ecx+0x40],0x85
  4034b2:	inc    ebx
  4034b3:	sbb    al,0x11
  4034b5:	cli    
  4034b6:	inc    esp
  4034b7:	mov    ecx,0xba89c2df
  4034bc:	pop    ecx
  4034bd:	push   esp
  4034be:	retf   
  4034bf:	fidiv  WORD PTR [edi+edx*4-0x6a3e3b6d]
  4034c6:	mov    bh,0xd5
  4034c8:	js     0x403468
  4034ca:	sub    eax,0xa2013f4b
  4034cf:	xor    BYTE PTR [ebp+0x2e9c32fe],ch
  4034d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034d6:	push   ds
  4034d7:	sub    ch,bh
  4034d9:	and    eax,0x35e1d761
  4034de:	mov    ch,0x53
  4034e0:	xor    al,0x58
  4034e2:	mov    ds:0x1e0cce69,al
  4034e7:	sbb    DWORD PTR ds:0x840decb8,esi
  4034ed:	or     bh,BYTE PTR [edi]
  4034ef:	inc    esi
  4034f0:	xchg   ebx,eax
  4034f1:	jo     0x4034f8
  4034f3:	ret    
  4034f4:	scas   eax,DWORD PTR es:[edi]
  4034f5:	cmp    BYTE PTR [ecx+0x33],bh
  4034f8:	sub    bl,BYTE PTR [edi+0x3e93cb77]
  4034fe:	and    eax,0x5a3fda4
  403503:	mov    al,0xba
  403505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403506:	sbb    al,0xf3
  403508:	add    bl,BYTE PTR [ecx]
  40350a:	push   0xffffff87
  40350c:	push   0xd9ad3f72
  403511:	jge    0x403561
  403513:	and    bh,BYTE PTR [ecx]
  403515:	sbb    BYTE PTR [eax],0x74
  403518:	pop    ss
  403519:	pop    eax
  40351a:	add    DWORD PTR [eax+eax*2],esi
  40351d:	jo     0x4034f6
  40351f:	sub    DWORD PTR ds:[esi],0xa02f6ad1
  403526:	lds    ebx,FWORD PTR [ecx+0x44d12470]
  40352c:	out    dx,al
  40352d:	lahf   
  40352e:	test   bl,cl
  403530:	mov    ds:0x74f5f34c,eax
  403535:	pop    edi
  403536:	int3   
  403537:	retf   
  403538:	mov    WORD PTR [edx+0x41],fs
  40353b:	cli    
  40353c:	in     al,dx
  40353d:	je     0x4035be
  40353f:	leave  
  403540:	in     al,dx
  403541:	adc    esi,DWORD PTR [edx-0x4f90bd32]
  403547:	jbe    0x40358e
  403549:	int3   
  40354a:	pop    ebx
  40354b:	xchg   BYTE PTR ds:0xfba99173,bh
  403551:	sub    al,0xd9
  403553:	ret    0x6392
  403556:	mov    WORD PTR [edi+0x53],ss
  403559:	jo     0x4035a1
  40355b:	and    edx,edx
  40355d:	jle    0x4035d6
  40355f:	js     0x40352b
  403561:	scas   eax,DWORD PTR es:[edi]
  403562:	iret   
  403563:	fs into 
  403565:	sub    bl,BYTE PTR [ecx+0x48824e04]
  40356b:	inc    esi
  40356c:	fmul   QWORD PTR [esp+edi*2-0x43]
  403570:	mov    dl,0x37
  403572:	push   es
  403573:	sbb    al,0x81
  403575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403576:	mov    bh,0xf1
  403578:	es push ebx
  40357a:	xchg   DWORD PTR [ebp+ebx*2-0x344f525],ebp
  403581:	xchg   ecx,eax
  403582:	mov    ds:0xe5c5fa7e,al
  403587:	push   cs
  403588:	jle    0x403514
  40358a:	not    DWORD PTR [ebx+0x7969bb15]
  403590:	data16 loopne 0x403598
  403593:	cld    
  403594:	daa    
  403595:	cli    
  403596:	pop    esi
  403597:	sbb    esp,esi
  403599:	mov    edx,0x7b1c58bf
  40359e:	retf   0xf6a2
  4035a1:	sub    DWORD PTR [edx+0x3f8c9182],ecx
  4035a7:	ficomp WORD PTR [ebx]
  4035a9:	in     eax,0xa8
  4035ab:	mov    ds,WORD PTR [esi+0x4]
  4035ae:	ins    BYTE PTR es:[edi],dx
  4035af:	or     BYTE PTR [ecx],cl
  4035b1:	loop   0x4035d0
  4035b3:	inc    ebx
  4035b4:	mov    ds:0x57ef8fac,eax
  4035b9:	cwde   
  4035ba:	xchg   esi,eax
  4035bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035bc:	(bad)  
  4035bd:	int3   
  4035be:	sub    bh,BYTE PTR [eax+ecx*4]
  4035c1:	daa    
  4035c2:	adc    BYTE PTR [ebp+0x4adfe25d],al
  4035c8:	inc    esp
  4035c9:	bound  ebx,QWORD PTR [edx+0x3e7df3b7]
  4035cf:	mov    al,ds:0xc2dd75b8
  4035d4:	or     esp,eax
  4035d6:	jmp    0x4e4f20c4
  4035db:	daa    
  4035dc:	ins    DWORD PTR es:[edi],dx
  4035dd:	daa    
  4035de:	repnz push esp
  4035e0:	adc    eax,0x689fcc1c
  4035e5:	jno    0x403607
  4035e7:	idiv   al
  4035e9:	jae    0x403577
  4035eb:	add    BYTE PTR [ebp*1-0x13162cb7],al
  4035f2:	dec    ebx
  4035f3:	jmp    0xbbe8:0xe3df3e76
  4035fa:	push   eax
  4035fb:	outs   dx,BYTE PTR ds:[esi]
  4035fc:	jmp    0x1ffbc52a
  403601:	test   DWORD PTR [edx],esi
  403603:	mov    esp,0x9ef01815
  403608:	mov    esp,0xc57373aa
  40360d:	jae    0x403680
  40360f:	sub    al,al
  403611:	inc    edi
  403612:	mov    ch,0x83
  403614:	loope  0x403608
  403616:	mov    esi,0x3ed1b9fd
  40361b:	sub    dh,BYTE PTR [ebx-0x60d3faa0]
  403621:	push   eax
  403622:	mov    esp,0x960e220f
  403627:	push   es
  403628:	xchg   edi,eax
  403629:	shl    BYTE PTR [edx+0x38140be7],cl
  40362f:	pop    ecx
  403630:	hlt    
  403631:	add    dh,ch
  403633:	das    
  403634:	arpl   WORD PTR [ecx-0x68ce8d4d],cx
  40363a:	dec    eax
  40363b:	fadd   QWORD PTR [edi]
  40363d:	jl     0x403647
  40363f:	leave  
  403640:	lahf   
  403641:	xchg   ecx,eax
  403642:	dec    eax
  403643:	ror    BYTE PTR [edi],1
  403645:	ja     0x4035db
  403647:	or     ebp,DWORD PTR [esi-0x6b354d75]
  40364d:	jnp    0x403608
  40364f:	mov    al,ds:0x4d098afb
  403654:	inc    edx
  403655:	arpl   bp,bp
  403657:	adc    DWORD PTR [ebp-0x587cd958],edi
  40365d:	sub    ebp,DWORD PTR [ecx-0x4ec55a6d]
  403663:	mov    es,WORD PTR [edi]
  403665:	gs dec ebp
  403667:	dec    edi
  403668:	ss in  al,0x9c
  40366b:	or     eax,DWORD PTR [eax+0x679b1410]
  403671:	in     al,0xe7
  403673:	adc    eax,0x536d968
  403678:	push   ds
  403679:	seto   BYTE PTR [ecx+eiz*1-0x5]
  40367e:	and    al,0xb6
  403680:	ficom  WORD PTR ds:0x80abc11b
  403686:	les    eax,FWORD PTR [eax+0x61]
  403689:	cmc    
  40368a:	int    0x25
  40368c:	das    
  40368d:	jg     0x403678
  40368f:	mov    ds:0xad61a945,eax
  403694:	jb     0x4036b2
  403696:	pop    edi
  403697:	pop    ecx
  403698:	and    DWORD PTR [ecx-0x5b],eax
  40369b:	xchg   ebx,eax
  40369c:	mov    edx,0x4247b654
  4036a1:	rcl    BYTE PTR [eax],cl
  4036a3:	shl    ebp,1
  4036a5:	push   0xbda6d5c
  4036aa:	cmp    BYTE PTR [esp+ecx*8+0x5618b70e],dl
  4036b1:	jbe    0x403715
  4036b3:	stos   DWORD PTR es:[edi],eax
  4036b4:	dec    ebp
  4036b5:	sbb    eax,0xc73d4fb5
  4036ba:	stos   DWORD PTR es:[edi],eax
  4036bb:	xor    al,0x86
  4036bd:	popa   
  4036be:	lds    esp,FWORD PTR [edi]
  4036c0:	mov    al,0x6c
  4036c2:	rol    DWORD PTR [esp+ecx*8+0x1d],0x75
  4036c7:	shl    edx,1
  4036c9:	icebp  
  4036ca:	retf   
  4036cb:	pushf  
  4036cc:	push   es
  4036cd:	lea    edx,[edx-0x7d]
  4036d0:	or     ecx,DWORD PTR [eax+0x57]
  4036d3:	in     al,dx
  4036d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036d5:	jne    0x4036dc
  4036d7:	test   al,0xab
  4036d9:	ss leave 
  4036db:	lds    ebp,FWORD PTR [ebp-0x46]
  4036de:	ret    0x9e0d
  4036e1:	mov    dh,0xe5
  4036e3:	retf   0x3d55
  4036e6:	inc    edi
  4036e7:	cmc    
  4036e8:	push   es
  4036e9:	jp     0x4036e5
  4036eb:	pusha  
  4036ec:	cmp    esp,ebp
  4036ee:	adc    DWORD PTR [eax],esi
  4036f0:	push   edi
  4036f1:	sahf   
  4036f2:	jge    0x4036ce
  4036f4:	mov    bl,0x14
  4036f6:	and    BYTE PTR [edi-0x7b],ah
  4036f9:	mov    eax,0x45716a0a
  4036fe:	fdiv   QWORD PTR [eax-0xf]
  403701:	mov    ebp,0x2ba67e67
  403706:	scas   al,BYTE PTR es:[edi]
  403707:	cwde   
  403708:	cmp    ah,bh
  40370a:	(bad)  
  40370b:	mov    dh,0xf2
  40370d:	sub    ebp,esi
  40370f:	xchg   edx,eax
  403710:	jno    0x4036a8
  403712:	mov    dl,0x7b
  403714:	clc    
  403715:	push   ebx
  403716:	push   ss
  403717:	stos   BYTE PTR es:[edi],al
  403718:	cld    
  403719:	and    al,0x4e
  40371b:	popf   
  40371c:	inc    eax
  40371d:	dec    ebx
  40371e:	stos   BYTE PTR es:[edi],al
  40371f:	jnp    0x403712
  403721:	inc    eax
  403722:	imul   esp,DWORD PTR [ecx-0x3a6506d7],0xcdee69cb
  40372c:	fidiv  WORD PTR [edx-0x318d2191]
  403732:	das    
  403733:	push   esp
  403734:	fst    DWORD PTR [edi]
  403736:	rol    DWORD PTR [ebp-0x54],cl
  403739:	data16 int3 
  40373b:	sub    eax,0xf85c039
  403740:	dec    esp
  403741:	adc    eax,0x2509f4e7
  403746:	sahf   
  403747:	call   0xb9a09955
  40374c:	push   0x7e
  40374e:	cmp    DWORD PTR [ebx+ecx*8],0x8812a98c
  403755:	sub    eax,0x343e58ea
  40375a:	stos   BYTE PTR es:[edi],al
  40375b:	cmp    ebx,DWORD PTR [eax+0x3af4b21d]
  403761:	or     DWORD PTR [edx-0x5b],edx
  403764:	call   0x56c2:0xcbe00660
  40376b:	mov    gs,WORD PTR [ecx]
  40376d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40376e:	pushf  
  40376f:	ins    DWORD PTR es:[edi],dx
  403770:	sub    BYTE PTR [eax-0x2f80a23e],cl
  403776:	jbe    0x4037d3
  403778:	jne    0x403766
  40377a:	sbb    esp,DWORD PTR [eax-0x5e]
  40377d:	and    BYTE PTR ds:0xb393709a,0x11
  403784:	lock sbb DWORD PTR [edx+0x35],edx
  403788:	pop    esi
  403789:	dec    eax
  40378a:	stos   BYTE PTR es:[edi],al
  40378b:	loopne 0x40377a
  40378d:	pop    eax
  40378e:	mov    ah,0x24
  403790:	stc    
  403791:	jae    0x4037d5
  403793:	sbb    BYTE PTR [eax-0x659dd048],dh
  403799:	pop    ebp
  40379a:	add    bl,al
  40379c:	aad    0x91
  40379e:	add    BYTE PTR [ebx-0x380cca73],ah
  4037a4:	sbb    al,0x39
  4037a6:	mov    esp,0x6d401010
  4037ab:	push   edx
  4037ac:	loopne 0x4037ea
  4037ae:	leave  
  4037af:	pop    ebp
  4037b0:	ja     0x4037a0
  4037b2:	fstp   DWORD PTR [ebp-0x2]
  4037b5:	mov    edi,0x21d65584
  4037ba:	pop    ebx
  4037bb:	fsubr  QWORD PTR [ebp+0x6d1c1688]
  4037c1:	and    al,0x5c
  4037c3:	or     al,bh
  4037c5:	sbb    DWORD PTR [ebp-0x7],ebx
  4037c8:	jo     0x403763
  4037ca:	push   0x767239c6
  4037cf:	aaa    
  4037d0:	mov    gs,WORD PTR [edx+0x5f]
  4037d3:	nop
  4037d4:	xchg   esp,eax
  4037d5:	mov    eax,ds:0x47c45738
  4037da:	in     al,0x39
  4037dc:	test   DWORD PTR [edx+0x248e09d5],esi
  4037e2:	cwde   
  4037e3:	js     0x4037c3
  4037e5:	mov    ah,0xac
  4037e7:	aas    
  4037e8:	dec    eax
  4037e9:	int3   
  4037ea:	nop
  4037eb:	push   ebp
  4037ec:	jge    0x4037c6
  4037ee:	(bad)  
  4037ef:	in     al,dx
  4037f0:	xor    BYTE PTR [ecx+0x47096ae9],al
  4037f6:	lods   eax,DWORD PTR ds:[esi]
  4037f7:	add    ecx,DWORD PTR [ecx]
  4037f9:	jmp    DWORD PTR ds:0xbf9c50e6
  4037ff:	mov    ebp,DWORD PTR [esi]
  403801:	xor    ah,BYTE PTR [edx-0x39]
  403804:	push   ds
  403805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403806:	push   ebp
  403807:	fcom   st(6)
  403809:	adc    al,0xc3
  40380b:	out    0x31,eax
  40380d:	and    DWORD PTR [ebx+0x52],edx
  403810:	test   DWORD PTR [ebp+edi*1-0x39],ecx
  403814:	xor    ebx,DWORD PTR [edi-0x14b1feb]
  40381a:	xor    DWORD PTR [edi+0x6ff77a63],eax
  403820:	inc    esp
  403821:	and    DWORD PTR ds:0x2d512e17,edi
  403827:	setg   BYTE PTR [edi]
  40382a:	ret    0x1075
  40382d:	jns    0x4037b7
  40382f:	pop    eax
  403830:	mov    al,gs:0x7eca79cc
  403836:	das    
  403837:	icebp  
  403838:	test   al,0xaf
  40383a:	sub    ebp,ebx
  40383c:	(bad)  
  40383d:	popf   
  40383e:	sub    esp,DWORD PTR [si-0x4e]
  403842:	ins    DWORD PTR es:[edi],dx
  403843:	shl    DWORD PTR [esi],0x94
  403846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403847:	in     eax,0x6a
  403849:	out    dx,al
  40384a:	mov    al,ds:0xff2ce942
  40384f:	dec    esi
  403850:	xor    DWORD PTR [edx+0x39b5521a],edx
  403856:	imul   esp,DWORD PTR [ebx-0x501a05ce],0x37754326
  403860:	bound  ebx,QWORD PTR [esi]
  403862:	xchg   esp,eax
  403863:	mov    cl,0xb9
  403865:	jae    0x403813
  403867:	inc    esp
  403868:	mov    ds:0x97c9af5,eax
  40386d:	aaa    
  40386e:	rol    ah,0x93
  403871:	mov    eax,ds:0x9a103e3b
  403876:	adc    BYTE PTR cs:[eax-0x2e],ch
  40387a:	xchg   esi,eax
  40387b:	lods   eax,DWORD PTR ds:[esi]
  40387c:	jnp    0x403878
  40387e:	cmp    eax,DWORD PTR [ebx-0x3c]
  403881:	pop    esp
  403882:	enter  0x7d5,0xd4
  403886:	out    0xae,eax
  403888:	mov    ds:0x4e430e31,eax
  40388d:	push   eax
  40388e:	jle    0x4038b2
  403890:	xchg   edi,eax
  403891:	in     al,dx
  403892:	and    cl,BYTE PTR [eax]
  403894:	jmp    0xee2e:0x1e4aa170
  40389b:	or     eax,0xd2bf6662
  4038a0:	fwait
  4038a1:	js     0x4038f9
  4038a3:	shr    al,1
  4038a5:	jmp    0x40389d
  4038a7:	mov    eax,ds:0xba98cfe7
  4038ac:	xor    eax,0xbbf9a649
  4038b1:	lea    esp,[ebp+0x42]
  4038b4:	(bad)  
  4038b5:	pop    ecx
  4038b6:	pop    es
  4038b7:	aas    
  4038b8:	xchg   edx,eax
  4038b9:	(bad)  
  4038ba:	sbb    DWORD PTR [edx],edi
  4038bc:	xchg   DWORD PTR [ebx-0x48c63177],edi
  4038c2:	and    eax,0xc228a31c
  4038c7:	jmp    0x40390e
  4038c9:	pop    ebx
  4038ca:	js     0x40388a
  4038cc:	dec    ecx
  4038cd:	push   ebp
  4038ce:	lock and BYTE PTR [ecx+0x25],0xc7
  4038d3:	call   0xc592d9e9
  4038d8:	mov    ebp,0x49e8ba1b
  4038dd:	sbb    al,0xbb
  4038df:	outs   dx,BYTE PTR ds:[esi]
  4038e0:	ror    DWORD PTR [edi],1
  4038e2:	dec    ax
  4038e4:	mov    dl,BYTE PTR [ebp-0x67]
  4038e7:	test   eax,ebp
  4038e9:	push   esp
  4038ea:	hlt    
  4038eb:	scas   al,BYTE PTR es:[edi]
  4038ec:	adc    ebp,DWORD PTR [ebx+esi*1-0x2a]
  4038f0:	and    eax,0xa8a7c66c
  4038f5:	jo     0x403954
  4038f7:	scas   eax,DWORD PTR es:[edi]
  4038f8:	push   ebx
  4038f9:	sub    BYTE PTR ds:0x6d5c8b8f,dh
  4038ff:	neg    BYTE PTR [edx+0x1]
  403902:	loop   0x4038b5
  403904:	or     edx,edi
  403906:	mov    cl,0x29
  403908:	xchg   esi,eax
  403909:	pop    DWORD PTR [ebx+esi*8-0xacf3bef]
  403910:	jno    0x403919
  403912:	add    esp,DWORD PTR [eax-0x61]
  403915:	mov    al,0x12
  403917:	pop    eax
  403918:	sahf   
  403919:	adc    eax,0x4caa85a0
  40391e:	and    al,0x24
  403920:	out    0x9c,al
  403922:	xchg   ebx,eax
  403923:	fnsave [ecx+0x9]
  403926:	cmp    eax,0x65d9f4c1
  40392b:	mov    dh,0xc8
  40392d:	cmp    eax,0x80f708c5
  403932:	rol    DWORD PTR [eax+0x11],0x1c
  403936:	push   esi
  403937:	dec    eax
  403938:	out    dx,al
  403939:	or     ebp,DWORD PTR [ebx]
  40393b:	push   ecx
  40393c:	and    DWORD PTR [eax],eax
  40393e:	js     0x40398e
  403940:	aad    0x64
  403942:	and    al,dh
  403944:	mov    es,esi
  403946:	xor    BYTE PTR [edi-0x7b],0x8b
  40394a:	sbb    ebx,ebp
  40394c:	ret    0xab42
  40394f:	outs   dx,DWORD PTR ds:[esi]
  403950:	xchg   BYTE PTR [eax],ch
  403952:	adc    eax,DWORD PTR [edi-0x1a]
  403955:	jmp    0x4039b6
  403957:	in     al,0x13
  403959:	in     al,dx
  40395a:	pop    esi
  40395b:	push   ebx
  40395c:	push   edx
  40395d:	aaa    
  40395e:	sub    BYTE PTR [ebx+0x21],cl
  403961:	imul   edx,DWORD PTR [ebp+0x46],0xe3a343be
  403968:	daa    
  403969:	add    eax,0xbca762e0
  40396e:	mov    ah,0x4b
  403970:	xchg   ebx,eax
  403971:	xchg   edi,eax
  403972:	add    DWORD PTR [ebp-0x39a24f23],ebx
  403978:	add    BYTE PTR [eax+0x519a24a5],cl
  40397e:	loopne 0x403989
  403980:	repz sti 
  403982:	mov    al,0xc2
  403984:	enter  0xf434,0x15
  403988:	mov    ebp,0xfcfea143
  40398d:	(bad)  
  40398f:	dec    edi
  403990:	dec    ecx
  403991:	xchg   esi,eax
  403992:	xor    BYTE PTR [edx-0x3d],al
  403995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403996:	jne    0x4039af
  403998:	int3   
  403999:	repz mov ch,0xc1
  40399c:	pop    es
  40399d:	les    ebx,FWORD PTR [esi+eax*1]
  4039a0:	mov    eax,DWORD PTR [edi-0x35ed359a]
  4039a6:	sbb    DWORD PTR [eax],0xd86dc5b4
  4039ac:	mov    cl,0x4c
  4039ae:	adc    ecx,DWORD PTR [edi+ecx*4]
  4039b1:	pop    edx
  4039b2:	retf   
  4039b3:	imul   esi,DWORD PTR ds:[ebx],0xffffff83
  4039b7:	pop    esi
  4039b8:	sbb    ebx,ebx
  4039ba:	mov    al,ds:0x5b0d43fa
  4039bf:	dec    esi
  4039c0:	aas    
  4039c1:	mov    ebp,0x6051c5a7
  4039c6:	xchg   DWORD PTR [esi+eiz*4+0x67c2815d],esi
  4039cd:	call   0x99042555
  4039d2:	daa    
  4039d3:	xlat   BYTE PTR ds:[ebx]
  4039d4:	dec    edx
  4039d5:	fnsave [ebp-0x4]
  4039d8:	or     DWORD PTR [eax],edi
  4039da:	dec    edi
  4039db:	rol    DWORD PTR [ecx+0x1b],1
  4039de:	adc    eax,DWORD PTR [ebx+0x2d39c19e]
  4039e4:	xchg   DWORD PTR [ebx+0x1e5d22b8],esp
  4039ea:	xor    eax,DWORD PTR [eax+0x79]
  4039ed:	mov    dl,0x94
  4039ef:	loop   0x403a67
  4039f1:	pop    eax
  4039f2:	(bad)  
  4039f3:	in     eax,dx
  4039f4:	sbb    eax,0xde61501c
  4039f9:	pop    ecx
  4039fa:	rcl    BYTE PTR [ecx+edx*1],0x2a
  4039fe:	fisub  DWORD PTR [edi+0x7382d99f]
  403a04:	iret   
  403a05:	in     al,dx
  403a06:	hlt    
  403a07:	or     ebp,ecx
  403a09:	outs   dx,DWORD PTR ds:[esi]
  403a0a:	xchg   BYTE PTR [edi+0x6f986889],bh
  403a10:	into   
  403a11:	jmp    0x403a2a
  403a13:	das    
  403a14:	leave  
  403a15:	into   
  403a16:	test   eax,0x140aa31f
  403a1b:	in     al,0xcd
  403a1d:	jae    0x403a15
  403a1f:	dec    esi
  403a20:	mov    eax,0x1d5f6ec0
  403a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a26:	cmp    eax,0xb905e3
  403a2b:	in     eax,0x6d
  403a2d:	std    
  403a2e:	(bad)  
  403a2f:	mov    ds:0xaf34e54e,eax
  403a34:	cmp    al,0x71
  403a36:	jecxz  0x403a59
  403a38:	cs xor ebx,0x28dd327c
  403a3f:	dec    edi
  403a40:	iret   
  403a41:	adc    dl,BYTE PTR [esi+esi*2+0x32]
  403a45:	add    al,0x76
  403a47:	leave  
  403a48:	sbb    esi,DWORD PTR [ebp-0x37e1e940]
  403a4e:	shl    DWORD PTR [edi+0x18e7ab5],0xa0
  403a55:	push   esi
  403a56:	and    bh,BYTE PTR [eax]
  403a58:	cwde   
  403a59:	fidivr DWORD PTR [edx+0x74990cc5]
  403a5f:	adc    dh,BYTE PTR [edx-0x67]
  403a62:	mov    eax,0x5490decb
  403a67:	mov    dl,0x4b
  403a69:	and    DWORD PTR [esi],0xed0ca6d8
  403a6f:	push   ds
  403a70:	sbb    al,0x6
  403a72:	sub    DWORD PTR es:[ebx+ecx*4+0x1c],ebp
  403a77:	sar    DWORD PTR [edi-0x7eb8594b],cl
  403a7d:	xor    cl,dh
  403a7f:	jmp    0x597a:0x3f76e90f
  403a86:	pop    ss
  403a87:	ret    0x2b06
  403a8a:	repz or al,0x91
  403a8d:	(bad)  
  403a8e:	jo     0x403aa1
  403a90:	jb     0x403a26
  403a92:	mov    cl,BYTE PTR [ecx+0x48]
  403a95:	out    dx,al
  403a96:	dec    esp
  403a97:	sub    eax,0xa0f240c4
  403a9c:	cmp    BYTE PTR [eax+0x60f81195],bh
  403aa2:	sahf   
  403aa3:	adc    al,0x9b
  403aa5:	xchg   esi,eax
  403aa6:	mov    ebp,0x3556bab2
  403aab:	in     eax,dx
  403aac:	adc    ebx,DWORD PTR [eax]
  403aae:	pop    edi
  403aaf:	pop    edi
  403ab0:	ins    DWORD PTR es:[edi],dx
  403ab1:	test   BYTE PTR [edi+esi*8+0x23],ah
  403ab5:	mov    fs,WORD PTR [esi-0x499a1d83]
  403abb:	inc    edi
  403abc:	or     ecx,edx
  403abe:	push   0x29254dc0
  403ac3:	add    esp,DWORD PTR [ecx]
  403ac5:	jg     0x403af8
  403ac7:	test   eax,0x4b0ba834
  403acc:	in     eax,0xf3
  403ace:	fucomi st,st(5)
  403ad0:	pop    ebp
  403ad1:	push   ss
  403ad2:	or     DWORD PTR [ebx+ebx*1-0x64],0xe5e94423
  403ada:	js     0x403ab2
  403adc:	arpl   WORD PTR [eax-0x49],sp
  403adf:	cmp    BYTE PTR [ebp+0x30],bh
  403ae2:	repz aad 0x11
  403ae5:	add    bh,BYTE PTR [eax+0x4342f248]
  403aeb:	mov    ah,BYTE PTR [ebp+0x1a]
  403aee:	addr16 jp 0x403a98
  403af1:	loopne 0x403a81
  403af3:	test   BYTE PTR [edi+eiz*1],al
  403af6:	xor    DWORD PTR [edx],ecx
  403af8:	mov    esi,0x6d1ce3f3
  403afd:	retf   
  403afe:	outs   dx,DWORD PTR ds:[esi]
  403aff:	sub    al,0xc1
  403b01:	mov    ah,0x4a
  403b03:	xchg   ebp,eax
  403b04:	out    dx,al
  403b05:	cmp    eax,0x6e819367
  403b0a:	adc    dl,BYTE PTR [ecx+0xa65b51d]
  403b10:	dec    ecx
  403b11:	xchg   BYTE PTR [edi+0x39761f97],bh
  403b17:	out    dx,eax
  403b18:	sar    DWORD PTR [edx],0x3a
  403b1b:	ficom  DWORD PTR [ecx+eiz*4-0x56]
  403b1f:	cmp    bl,BYTE PTR [eax+0x2b1d97f5]
  403b25:	or     al,0x8a
  403b27:	inc    edi
  403b28:	dec    eax
  403b29:	in     al,dx
  403b2a:	and    al,0x4a
  403b2c:	dec    esi
  403b2d:	scas   eax,DWORD PTR es:[edi]
  403b2e:	mov    WORD PTR [ebx-0x2e],es
  403b31:	stos   DWORD PTR es:[edi],eax
  403b32:	xchg   ebp,eax
  403b33:	imul   ebx,esp,0xffffffcd
  403b36:	mov    bl,BYTE PTR [eax-0x559510e4]
  403b3c:	repnz push ebp
  403b3e:	fldenv [eax-0x25995949]
  403b44:	inc    esi
  403b45:	cwde   
  403b46:	pop    edx
  403b47:	test   eax,0xeabb194b
  403b4c:	add    DWORD PTR [ecx-0x55],edi
  403b4f:	pop    ecx
  403b50:	jecxz  0x403bc3
  403b52:	dec    ecx
  403b53:	fidivr DWORD PTR [eax+0x4a]
  403b56:	jbe    0x403bd2
  403b58:	or     al,0xcb
  403b5a:	std    
  403b5b:	mov    DWORD PTR [edx+edx*4],0xfff6474b
  403b62:	dec    eax
  403b63:	mov    dh,0x56
  403b65:	dec    ebp
  403b66:	inc    esp
  403b67:	sbb    ebp,esp
  403b69:	lock add DWORD PTR [edx-0x41],ebp
  403b6d:	adc    DWORD PTR [ecx-0x776880b1],edi
  403b73:	mov    bl,0x51
  403b75:	ret    
  403b76:	push   eax
  403b77:	out    0x5e,eax
  403b79:	out    0xee,eax
  403b7b:	jno    0x403ba9
  403b7d:	arpl   WORD PTR [edi+esi*2+0x3e],di
  403b81:	sbb    al,0x89
  403b83:	mov    al,0x45
  403b85:	mov    eax,ds:0xa0a1d200
  403b8a:	jns    0x403b23
  403b8c:	push   esi
  403b8d:	ins    DWORD PTR es:[edi],dx
  403b8e:	in     al,dx
  403b8f:	jle    0x403b86
  403b91:	(bad)  
  403b92:	arpl   WORD PTR [ebx-0x54],bp
  403b95:	jmp    0x403bd6
  403b97:	ds mov edx,0x51a35667
  403b9d:	adc    DWORD PTR [edx+ecx*2-0x76],0x1b
  403ba2:	cwde   
  403ba3:	xlat   BYTE PTR ds:[ebx]
  403ba4:	push   esi
  403ba5:	int    0x47
  403ba7:	inc    eax
  403ba8:	ins    DWORD PTR es:[edi],dx
  403ba9:	sub    BYTE PTR [edi+0x728d6caf],bh
  403baf:	mov    esp,0x400653e
  403bb4:	mov    dl,0x60
  403bb6:	or     al,0xfe
  403bb8:	pop    esi
  403bb9:	mov    bh,0x3
  403bbb:	stos   DWORD PTR es:[edi],eax
  403bbc:	pop    ebp
  403bbd:	and    al,0x6b
  403bbf:	adc    eax,0xba48c30f
  403bc4:	mov    edi,0x685ffebc
  403bc9:	mov    ah,0xce
  403bcb:	jmp    0xc8fc139f
  403bd0:	jg     0x403b91
  403bd2:	int3   
  403bd3:	fcmovnb st,st(2)
  403bd5:	jle    0x403b77
  403bd7:	ror    DWORD PTR [ebp-0x5a1e89b6],1
  403bdd:	js     0x403c04
  403bdf:	cmc    
  403be0:	in     al,dx
  403be1:	in     eax,dx
  403be2:	push   es
  403be3:	xor    DWORD PTR [ecx],edx
  403be5:	cmp    eax,0x8da88cdf
  403bea:	in     al,0xbd
  403bec:	enter  0x81a0,0x4d
  403bf0:	or     al,al
  403bf2:	cld    
  403bf3:	dec    DWORD PTR [eax+edx*2]
  403bf6:	xchg   edi,eax
  403bf7:	ja     0x403ba9
  403bf9:	push   ebx
  403bfa:	int3   
  403bfb:	pop    esi
  403bfc:	mov    esi,0x4fdca017
  403c01:	es mov esp,0x9523c48d
  403c07:	popf   
  403c08:	xchg   edi,eax
  403c09:	xchg   ebp,eax
  403c0a:	ret    0x214f
  403c0d:	sub    DWORD PTR [eax+0x32],esi
  403c10:	ins    DWORD PTR es:[edi],dx
  403c11:	dec    ebp
  403c12:	and    dh,BYTE PTR [ecx-0x14597339]
  403c18:	adc    al,0x51
  403c1a:	add    eax,0xbcbc45c7
  403c1f:	test   DWORD PTR [eax+edi*8-0x7437ba75],ebx
  403c26:	push   ebp
  403c27:	in     al,dx
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0x29dd8915
  403dc4:	xchg   ebp,eax
  403dc5:	fcom   QWORD PTR [ebx+0x4b]
  403dc8:	pop    esi
  403dc9:	add    DWORD PTR [ebx-0x7c7ca1b5],0xffffff94
  403dd0:	je     0x403db8
  403dd2:	xor    DWORD PTR [ecx+0x71ed8fed],esp
  403dd8:	mov    ah,0x64
  403dda:	sbb    DWORD PTR [ebp+edx*1-0x5ee6871f],ebp
  403de1:	clc    
  403de2:	imul   esi,DWORD PTR [edi+eax*4-0x37134b60],0x9318d2f6
  403ded:	xchg   esp,eax
  403dee:	test   eax,0x6f8b582a
  403df3:	mov    edx,0xcf73f49b
  403df8:	repnz lahf 
  403dfa:	jo     0x403dc9
  403dfc:	loopne 0x403df0
  403dfe:	scas   eax,DWORD PTR es:[edi]
  403dff:	mov    al,ds:0x14a8fa8f
  403e04:	rcr    BYTE PTR [esi],1
  403e06:	ret    0xd5e7
  403e09:	dec    eax
  403e0a:	js     0x403df3
  403e0c:	mov    ah,0xa0
  403e0e:	lods   eax,DWORD PTR gs:[esi]
  403e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e11:	jae    0x403de7
  403e13:	daa    
  403e14:	rep outs dx,DWORD PTR ds:[esi]
  403e16:	popa   
  403e17:	jmp    0x403e4e
  403e19:	clc    
  403e1a:	sub    al,0x41
  403e1c:	daa    
  403e1d:	xchg   edx,eax
  403e1e:	aam    0xc4
  403e20:	ret    
  403e21:	jnp    0x403de5
  403e23:	adc    edi,DWORD PTR [edi+edi*4]
  403e26:	cli    
  403e27:	mov    ah,0x7e
  403e29:	lods   eax,DWORD PTR ds:[esi]
  403e2a:	sub    esi,DWORD PTR [ebx-0x62]
  403e2d:	outs   dx,BYTE PTR ds:[esi]
  403e2e:	ins    DWORD PTR es:[edi],dx
  403e2f:	dec    ebp
  403e30:	pop    ss
  403e31:	aas    
  403e32:	stos   BYTE PTR es:[edi],al
  403e33:	sub    BYTE PTR [edi-0x3f],0x10
  403e37:	out    dx,eax
  403e38:	push   ebp
  403e39:	jmp    0xae56:0x9bc77c37
  403e40:	fcom   DWORD PTR [eax-0x4513818b]
  403e46:	jl     0x403dd3
  403e48:	ret    0xc77
  403e4b:	add    BYTE PTR [ecx],bl
  403e4d:	mov    ah,0x7e
  403e4f:	test   DWORD PTR [ebx+0x63e2357e],ebx
  403e55:	inc    edx
  403e56:	mov    ebp,0x249c3ed9
  403e5b:	shl    DWORD PTR [esi-0x1d],1
  403e5e:	pop    ss
  403e5f:	xchg   ebx,eax
  403e60:	dec    edi
  403e61:	add    DWORD PTR [edx+ebp*2+0x12],ebp
  403e65:	mov    eax,ds:0x5a049275
  403e6a:	inc    ebp
  403e6b:	mov    eax,ds:0x129c20c9
  403e70:	jbe    0x403e6e
  403e72:	aam    0xe4
  403e74:	pop    edi
  403e75:	and    dl,BYTE PTR [ecx]
  403e77:	into   
  403e78:	cmc    
  403e79:	aad    0xf0
  403e7b:	leave  
  403e7c:	sbb    BYTE PTR [edi+0x7b],al
  403e7f:	xor    eax,0x98125098
  403e84:	push   eax
  403e85:	sub    BYTE PTR [ebx+0x9dec916],dl
  403e8b:	add    esp,DWORD PTR [ebx+0x37]
  403e8e:	xchg   ebx,eax
  403e8f:	mov    BYTE PTR [ebx],ch
  403e91:	fst    DWORD PTR [edi-0x25]
  403e94:	mov    esp,0xdd049b0c
  403e99:	inc    ecx
  403e9a:	dec    ecx
  403e9b:	enter  0x4f10,0x71
  403e9f:	fwait
  403ea0:	dec    DWORD PTR [ecx]
  403ea2:	push   ds
  403ea3:	and    DWORD PTR [ecx+esi*1-0x59cf12c6],ebx
  403eaa:	jb     0x403e6c
  403eac:	sub    BYTE PTR [eax-0x7c],cl
  403eaf:	sub    bl,BYTE PTR [ebp+0x167671a4]
  403eb5:	fidiv  DWORD PTR [ebp+0x10b0dc9c]
  403ebb:	mov    BYTE PTR [ebp+0x2b97d025],ch
  403ec1:	xchg   esp,eax
  403ec2:	aaa    
  403ec3:	add    eax,0xd96d2108
  403ec8:	adc    DWORD PTR ds:0xe790595a,0x25829d75
  403ed2:	scas   eax,DWORD PTR es:[edi]
  403ed3:	dec    ecx
  403ed4:	shr    BYTE PTR [eax],cl
  403ed6:	sub    DWORD PTR [edi],esp
  403ed8:	adc    eax,0x2a455d26
  403edd:	sbb    BYTE PTR [ebx-0x2d],dl
  403ee0:	dec    ebx
  403ee1:	and    ebx,DWORD PTR [ebp-0x1876ef0d]
  403ee7:	outs   dx,DWORD PTR ds:[esi]
  403ee8:	sub    BYTE PTR [edx+0x72e353d4],dh
  403eee:	les    esp,FWORD PTR [eax-0x44]
  403ef1:	push   edi
  403ef2:	loop   0x403e7b
  403ef4:	call   0x4e5f:0xc62805b5
  403efb:	mov    ?,WORD PTR [edi-0x60]
  403efe:	call   0xc1f6:0x1276ef6
  403f05:	pop    ds
  403f06:	stos   BYTE PTR es:[edi],al
  403f07:	mov    ch,BYTE PTR [ebp+ebx*1-0x336224af]
  403f0e:	push   es
  403f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f10:	pop    esp
  403f11:	mov    al,ds:0xa0918817
  403f16:	xor    ch,bh
  403f18:	lds    ecx,FWORD PTR [ecx-0x2b5415bf]
  403f1e:	inc    ebx
  403f1f:	inc    edi
  403f20:	inc    esp
  403f21:	mov    bl,0xc6
  403f23:	inc    ecx
  403f24:	ror    DWORD PTR [edx+edi*4+0x78299130],1
  403f2b:	cmp    bl,BYTE PTR [edi-0x2e]
  403f2e:	(bad)  
  403f31:	cmp    BYTE PTR [ecx-0x2b],dl
  403f34:	push   ebp
  403f35:	fxch   st(7)
  403f37:	aaa    
  403f38:	and    eax,DWORD PTR [esi-0x59a3492c]
  403f3e:	test   eax,0xae0cae8e
  403f43:	mov    gs,WORD PTR [ebx+0x5bf2005f]
  403f49:	mov    ch,0xd
  403f4b:	ins    BYTE PTR es:[di],dx
  403f4d:	aas    
  403f4e:	pusha  
  403f4f:	cvtpi2ps xmm5,QWORD PTR [esi+edx*4]
  403f53:	push   ebp
  403f54:	xchg   ebx,eax
  403f55:	stos   BYTE PTR es:[edi],al
  403f56:	ss loop 0x403f02
  403f59:	ret    
  403f5a:	push   esp
  403f5b:	pop    ds
  403f5c:	imul   edx,DWORD PTR [edi],0x63
  403f5f:	xor    al,0xaa
  403f61:	pop    edi
  403f62:	out    dx,al
  403f63:	cmp    edx,ebp
  403f65:	mov    ds:0x6de5e653,al
  403f6a:	outs   dx,DWORD PTR ds:[esi]
  403f6b:	cmp    DWORD PTR [edi-0x7b],esi
  403f6e:	les    eax,FWORD PTR [ebp+0x79]
  403f71:	mov    esp,0x9b2f15d0
  403f76:	dec    ebp
  403f77:	pop    ds
  403f78:	mov    ?,WORD PTR [ecx+0xf]
  403f7b:	pop    ecx
  403f7c:	pop    eax
  403f7d:	push   ecx
  403f7e:	add    edi,DWORD PTR [eax+0x20]
  403f81:	leave  
  403f82:	inc    ebx
  403f83:	sahf   
  403f84:	mov    ebp,0x344c4098
  403f89:	loop   0x403fec
  403f8b:	push   ecx
  403f8c:	aad    0x42
  403f8e:	fidivr WORD PTR [ebx]
  403f90:	rol    ah,0xca
  403f93:	jns    0x403fbf
  403f95:	test   al,0xac
  403f97:	xor    al,0x17
  403f99:	or     eax,0x5d970285
  403f9e:	and    eax,0xc3fa9574
  403fa3:	lea    edi,[esi+0x4d341b19]
  403fa9:	mov    gs,WORD PTR [ecx+edx*2+0x5f]
  403fad:	mov    bh,0x1c
  403faf:	add    bh,bl
  403fb1:	pop    esi
  403fb2:	cwde   
  403fb3:	mov    cl,0xe8
  403fb5:	stc    
  403fb6:	xor    al,0x6e
  403fb8:	sbb    DWORD PTR [esi+0x7b],0x3135a920
  403fbf:	mov    BYTE PTR [edx],bl
  403fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fc2:	jg     0x403fad
  403fc4:	push   ebx
  403fc5:	or     cl,BYTE PTR [edi+0x1749676e]
  403fcb:	les    esp,FWORD PTR [ecx+0x44]
  403fce:	out    0xa,al
  403fd0:	hlt    
  403fd1:	rol    edx,cl
  403fd3:	(bad)  
  403fd4:	pop    edx
  403fd5:	or     edi,DWORD PTR [eax]
  403fd7:	or     ah,BYTE PTR [ecx-0x165d571d]
  403fdd:	es lahf 
  403fdf:	pop    es
  403fe0:	cmp    dh,ch
  403fe2:	repz push ss
  403fe4:	test   BYTE PTR [ebp-0x11],cl
  403fe7:	add    al,cl
  403fe9:	adc    dh,ch
  403feb:	lahf   
  403fec:	pop    ss
  403fed:	stos   DWORD PTR es:[edi],eax
  403fee:	in     eax,dx
  403fef:	push   esp
  403ff0:	hlt    
  403ff1:	push   es
  403ff2:	dec    esp
  403ff3:	ins    DWORD PTR es:[edi],dx
  403ff4:	sub    edi,DWORD PTR [eax-0x6c]
  403ff7:	inc    ebp
  403ff8:	lods   al,BYTE PTR ds:[esi]
  403ff9:	xchg   esi,eax
  403ffa:	ins    BYTE PTR es:[edi],dx
  403ffb:	arpl   ax,cx
  403ffd:	xor    al,0x97
  403fff:	mov    ebp,0x6f09e2ef
  404004:	in     eax,0x98
  404006:	int3   
  404007:	out    dx,al
  404008:	cli    
  404009:	mov    bh,0x8a
  40400b:	jle    0x403fe6
  40400d:	dec    edi
  40400e:	mov    dh,0x14
  404010:	aam    0xcd
  404012:	lock sahf 
  404014:	int    0x54
  404016:	inc    esp
  404017:	cli    
  404018:	(bad)  
  40401a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40401b:	mov    al,BYTE PTR [edx]
  40401d:	cld    
  40401e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40401f:	xor    cl,BYTE PTR [ecx]
  404021:	ins    BYTE PTR es:[edi],dx
  404022:	fidivr WORD PTR [ebp+0x39cedb94]
  404028:	cmp    BYTE PTR [edi+0x1a],bh
  40402b:	loopne 0x40409d
  40402d:	ret    0x2d3c
  404030:	mov    al,0x16
  404032:	cli    
  404033:	fcmovb st,st(7)
  404035:	mov    ch,0x91
  404037:	push   es
  404038:	or     eax,0x809bd991
  40403d:	jle    0x403ff6
  40403f:	rcr    DWORD PTR ds:0x749fa622,cl
  404045:	jnp    0x404042
  404047:	cli    
  404048:	in     eax,dx
  404049:	stc    
  40404a:	or     al,0x59
  40404c:	fdiv   QWORD PTR [esi+eiz*4]
  40404f:	sar    edi,0x26
  404052:	in     eax,dx
  404053:	ins    DWORD PTR es:[edi],dx
  404054:	inc    eax
  404055:	mov    ecx,0xbd4ccb96
  40405a:	mov    WORD PTR ds:0x8acc9bac,fs
  404060:	or     eax,0x588e585f
  404065:	aam    0xb4
  404067:	jmp    0x433ca8ed
  40406c:	mov    dl,0xc1
  40406e:	sub    BYTE PTR [ecx-0x78],0xad
  404072:	jbe    0x404099
  404074:	mov    ds:0xccc29471,eax
  404079:	adc    eax,0x7a2c83e2
  40407e:	fidivr WORD PTR es:[esi]
  404081:	in     eax,0x40
  404083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404084:	int    0xbf
  404086:	xor    dh,BYTE PTR [eax-0x2b]
  404089:	mov    esi,0x8ef346f
  40408e:	mov    ah,BYTE PTR [ebp+0x1]
  404091:	xchg   ebp,eax
  404092:	bound  esi,QWORD PTR [edi-0x11]
  404095:	mov    ebp,0x8135fe50
  40409a:	sub    ebx,DWORD PTR [eax+edx*2]
  40409d:	jb     0x40407f
  40409f:	lods   al,BYTE PTR ds:[esi]
  4040a0:	(bad)  [ecx]
  4040a2:	sub    BYTE PTR [ecx+0x68],ch
  4040a5:	rcr    BYTE PTR [ecx+0x23ffc40e],cl
  4040ab:	mov    esp,0xc3344bb4
  4040b0:	sbb    ah,BYTE PTR [ecx+edi*2-0x2b676a85]
  4040b7:	mov    cl,0x37
  4040b9:	in     al,0xd
  4040bb:	and    BYTE PTR [edi+ecx*2+0x58d2f70c],ah
  4040c2:	and    esp,edx
  4040c4:	sar    BYTE PTR [ecx+0x49],cl
  4040c7:	jbe    0x40410a
  4040c9:	inc    ebp
  4040ca:	imul   esp,DWORD PTR [eax+0x538f4bb6],0x39
  4040d1:	or     dl,dl
  4040d3:	pusha  
  4040d4:	xor    ecx,DWORD PTR ds:0x88337a00
  4040da:	lods   eax,DWORD PTR ds:[esi]
  4040db:	xlat   BYTE PTR ds:[ebx]
  4040dc:	push   ecx
  4040dd:	aam    0x82
  4040df:	in     eax,0x3e
  4040e1:	jno    0x404068
  4040e3:	out    dx,eax
  4040e4:	lock push ss
  4040e6:	xor    BYTE PTR [ebp-0x2d3a770a],ah
  4040ec:	(bad)
  4040f1:	int    0x1d
  4040f3:	jne    0x4040ed
  4040f5:	pop    ebp
  4040f6:	pop    ss
  4040f7:	clc    
  4040f8:	outs   dx,DWORD PTR ds:[esi]
  4040f9:	pop    ebx
  4040fa:	repnz push es
  4040fc:	push   esp
  4040fd:	xor    al,0x2f
  4040ff:	mov    ebx,0xcb739d94
  404104:	fwait
  404105:	repnz pop ds
  404107:	pop    esi
  404108:	add    BYTE PTR [edi+esi*2+0x6a248ef2],ch
  40410f:	inc    ebx
  404110:	popf   
  404111:	cmp    eax,0x54b973f5
  404116:	outs   dx,BYTE PTR ds:[esi]
  404117:	mov    edx,0x3ac66740
  40411c:	loop   0x40417f
  40411e:	gs pop ss
  404120:	dec    ebx
  404121:	mov    esp,0x29e89691
  404126:	enter  0x9809,0x5e
  40412a:	lds    ebx,FWORD PTR [ecx+esi*2+0x4733a7a0]
  404131:	enter  0x91fc,0x8a
  404135:	aam    0x3
  404137:	xchg   BYTE PTR ds:[edx],dl
  40413a:	not    al
  40413c:	jmp    0x454b7f1d
  404141:	call   0x57d4:0x9cd697a9
  404148:	pop    edx
  404149:	test   eax,0xe9f88
  40414e:	fucomi st,st(7)
  404150:	mov    al,ds:0x8f0685af
  404155:	retf   0xc03
  404158:	sub    esp,edi
  40415a:	jg     0x404156
  40415c:	jmp    0x404187
  40415e:	jb     0x404115
  404160:	ss call 0xbdaf:0xefbb4259
  404168:	xchg   edi,eax
  404169:	xchg   ebx,eax
  40416a:	div    DWORD PTR [ecx+0x49]
  40416d:	stos   BYTE PTR es:[edi],al
  40416e:	or     eax,DWORD PTR [edi-0x1b1de593]
  404174:	or     al,BYTE PTR [edi]
  404176:	jp     0x4041b3
  404178:	xchg   ebp,eax
  404179:	push   ebp
  40417a:	dec    edi
  40417b:	jnp    0x4041c2
  40417d:	jg     0x4041a3
  40417f:	test   eax,0x18581113
  404184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404185:	mov    al,ds:0xeaaf18de
  40418a:	xor    esi,ecx
  40418c:	leave  
  40418d:	jg     0x4041cb
  40418f:	call   0x9f7161a2
  404194:	sub    eax,0x9504b80e
  404199:	fucomi st,st(7)
  40419b:	jle    0x404208
  40419d:	mov    DWORD PTR [edx],esi
  40419f:	outs   dx,BYTE PTR ds:[esi]
  4041a0:	ins    DWORD PTR es:[edi],dx
  4041a1:	cmp    dh,dl
  4041a3:	out    0xa6,eax
  4041a5:	xor    eax,0xb137528d
  4041aa:	pushf  
  4041ab:	leave  
  4041ac:	mov    bl,0x9d
  4041ae:	mov    al,ds:0xb77d89a9
  4041b3:	adc    eax,0xb30e07d4
  4041b8:	(bad)  
  4041b9:	js     0x404194
  4041bb:	popf   
  4041bc:	std    
  4041bd:	lock xor ch,BYTE PTR [ebx]
  4041c0:	dec    esp
  4041c1:	mov    bh,BYTE PTR [edi+0x31c6ee66]
  4041c7:	mov    ah,0x19
  4041c9:	push   edi
  4041ca:	cmp    eax,0x19161713
  4041cf:	nop
  4041d0:	adc    ebp,ecx
  4041d2:	enter  0x3f7f,0xec
  4041d6:	cmp    al,0x2
  4041d8:	outs   dx,BYTE PTR ds:[esi]
  4041d9:	pusha  
  4041da:	push   ds
  4041db:	cmp    esi,esp
  4041dd:	jo     0x404196
  4041df:	aad    0x93
  4041e1:	jmp    0xc6ee:0x30fe1427
  4041e8:	fwait
  4041e9:	push   cs
  4041ea:	loope  0x4041f0
  4041ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ed:	xor    DWORD PTR [esi-0x5f],edi
  4041f0:	arpl   WORD PTR ds:0x43d10fa8,bx
  4041f6:	push   edi
  4041f7:	in     eax,dx
  4041f8:	xchg   DWORD PTR [ebx-0x5d],ebx
  4041fb:	out    dx,al
  4041fc:	add    eax,0x7ad49aea
  404201:	ja     0x40423e
  404203:	cmp    edi,DWORD PTR [ecx+edx*2]
  404206:	jb     0x4041f9
  404208:	mov    ds:0x99994aee,eax
  40420d:	aad    0x2a
  40420f:	lds    edx,FWORD PTR [edi]
  404211:	push   es
  404212:	stc    
  404213:	imul   edi,DWORD PTR [esi-0x2961a314],0x54
  40421a:	mov    DWORD PTR [esi+0xa293a89],ebx
  404220:	push   ebx
  404221:	retf   0xd439
  404224:	shl    ebx,cl
  404226:	add    DWORD PTR [edx-0x2e],0x7d6a0433
  40422d:	aas    
  40422e:	mov    ch,0xf0
  404230:	mov    esp,0x4d6e6317
  404235:	es mov edi,0x73bf7e2d
  40423b:	(bad)  
  40423c:	fdiv   QWORD PTR [ebx+0x78]
  40423f:	in     al,dx
  404240:	test   BYTE PTR [eax+0x49911d1e],al
  404246:	fnstcw WORD PTR [edi]
  404248:	jmp    0x3475e254
  40424d:	push   edx
  40424e:	scas   al,BYTE PTR es:[edi]
  40424f:	dec    ebx
  404250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404251:	xor    eax,edi
  404253:	jmp    FWORD PTR [ecx]
  404255:	xchg   ecx,eax
  404256:	(bad)  
  404257:	mov    ds:0xbab399ef,al
  40425c:	xlat   BYTE PTR ds:[ebx]
  40425d:	add    ch,ch
  40425f:	stos   DWORD PTR es:[edi],eax
  404260:	mov    edx,0xbe5c14d6
  404265:	out    dx,al
  404266:	mov    edi,0xcc5b2f19
  40426b:	in     eax,dx
  40426c:	pusha  
  40426d:	jne    0x404274
  40426f:	push   edi
  404270:	test   DWORD PTR [edi+ebp*4],ebx
  404273:	popf   
  404274:	mov    ?,edx
  404276:	pop    es
  404277:	sbb    eax,0xc8cce9dd
  40427c:	add    ebx,ebx
  40427e:	ja     0x4042ee
  404280:	in     al,dx
  404281:	cdq    
  404282:	sub    edi,DWORD PTR [ebx]
  404284:	es jo  0x404283
  404287:	cmp    edx,edi
  404289:	cmp    ebp,eax
  40428b:	pop    esi
  40428c:	push   cs
  40428d:	xor    al,BYTE PTR [esi-0x72]
  404290:	outs   dx,BYTE PTR ds:[esi]
  404291:	xor    BYTE PTR [ecx+0x399f73c3],0xdb
  404298:	mov    DWORD PTR [eax],ebp
  40429a:	inc    ebx
  40429b:	(bad)  
  40429c:	lea    edi,[ebx-0x36dfc94d]
  4042a2:	in     al,0xdf
  4042a4:	xor    DWORD PTR [edx],ecx
  4042a6:	adc    DWORD PTR [ecx+0x76a79ff1],esp
  4042ac:	sahf   
  4042ad:	or     eax,0x9b9d2010
  4042b2:	fmul   QWORD PTR [esi+0x39cb7815]
  4042b8:	ins    DWORD PTR es:[edi],dx
  4042b9:	sahf   
  4042ba:	pop    ss
  4042bb:	sub    esi,edi
  4042bd:	inc    ecx
  4042be:	mov    WORD PTR [eax+eax*8+0x54],?
  4042c2:	mov    edi,0x72c18b07
  4042c7:	sahf   
  4042c8:	jmp    0xc4a3:0x103c1784
  4042cf:	xor    eax,0x346e9a2a
  4042d4:	mov    eax,ds:0xae7bc8f1
  4042d9:	pop    edi
  4042da:	mov    ah,0xcf
  4042dc:	cdq    
  4042dd:	out    dx,al
  4042de:	pop    es
  4042df:	dec    ebx
  4042e0:	adc    edx,DWORD PTR [ebp-0x59]
  4042e3:	or     edi,DWORD PTR [edi+0x71]
  4042e6:	xchg   esp,eax
  4042e7:	imul   esp,DWORD PTR [esi+0x147bb394],0xffffffe6
  4042ee:	inc    edx
  4042ef:	test   eax,0x6837f475
  4042f4:	inc    ecx
  4042f5:	div    DWORD PTR [ebp+0x7c409c34]
  4042fb:	sbb    al,0x49
  4042fd:	or     eax,0x6b14b560
  404302:	stos   BYTE PTR es:[edi],al
  404303:	nop
  404304:	push   0x78f50eab
  404309:	dec    esp
  40430a:	mov    esp,esp
  40430c:	push   es
  40430d:	std    
  40430e:	aas    
  40430f:	nop
  404310:	sub    bh,dl
  404312:	iret   
  404313:	(bad)  
  404315:	jle    0x404373
  404317:	mov    dh,BYTE PTR [ebp-0x4]
  40431a:	xchg   ebp,eax
  40431b:	daa    
  40431c:	stos   BYTE PTR es:[edi],al
  40431d:	xchg   edx,eax
  40431e:	in     al,dx
  40431f:	xchg   ebp,eax
  404320:	sbb    dh,dl
  404322:	mov    dh,0xfd
  404324:	or     ebp,edx
  404326:	mov    ah,0xbc
  404328:	sbb    al,0xd5
  40432a:	das    
  40432b:	lahf   
  40432c:	inc    ebp
  40432d:	call   0x8983:0xac745af7
  404334:	and    al,0x21
  404336:	test   al,0xad
  404338:	enter  0xecda,0xd2
  40433c:	push   edi
  40433d:	dec    esi
  40433e:	(bad)  
  404340:	dec    esi
  404341:	mov    bh,0xa1
  404343:	or     al,dh
  404345:	aas    
  404346:	sub    BYTE PTR [eax],dh
  404348:	imul   edi,DWORD PTR [edx+0xe9e8029],0xc6c12274
  404352:	dec    eax
  404353:	in     eax,dx
  404354:	ins    DWORD PTR es:[edi],dx
  404355:	fisubr WORD PTR [ecx]
  404357:	jno    0x4043cf
  404359:	inc    esi
  40435a:	outs   dx,BYTE PTR ds:[esi]
  40435b:	push   es
  40435c:	mov    eax,ds:0x23afff35
  404361:	imul   esp,DWORD PTR [ebp+0xbc986aa],0x3b
  404368:	pop    ebp
  404369:	adc    BYTE PTR [eax+edi*8+0x6f3e198b],ch
  404370:	and    eax,0x1a4906d5
  404375:	jno    0x4043bf
  404377:	xchg   DWORD PTR [edx],ebp
  404379:	lea    ecx,[ebp-0x2924019d]
  40437f:	pop    edx
  404380:	into   
  404381:	push   eax
  404382:	xchg   ecx,eax
  404383:	outs   dx,DWORD PTR ds:[esi]
  404384:	add    DWORD PTR [edi+0x6c],esp
  404387:	jecxz  0x404347
  404389:	mov    esp,0x9845c096
  40438e:	mov    al,0x3b
  404390:	out    dx,al
  404391:	addr16 retf 0xddd
  404395:	push   cs
  404396:	dec    esp
  404397:	add    DWORD PTR [esi],ebx
  404399:	mov    al,ds:0x88553d7d
  40439e:	jecxz  0x4043fb
  4043a0:	xor    dl,dl
  4043a2:	sub    eax,0xcdf6e1c6
  4043a7:	lds    edi,FWORD PTR [edx]
  4043a9:	or     al,0xd2
  4043ab:	repnz mov dl,0xef
  4043ae:	(bad)  
  4043af:	shl    BYTE PTR [ecx-0x50],cl
  4043b2:	push   ebp
  4043b3:	retf   0xc6e5
  4043b6:	ja     0x4043a9
  4043b8:	add    bl,BYTE PTR [edi]
  4043ba:	(bad)  
  4043bc:	pop    ebx
  4043bd:	ret    
  4043be:	or     bh,BYTE PTR ds:0xf57e88f5
  4043c4:	adc    esp,edi
  4043c6:	mov    ebp,0x7a79682a
  4043cb:	retf   0xc6bb
  4043ce:	fld    TBYTE PTR [edi-0x5947629f]
  4043d4:	push   ss
  4043d5:	sbb    BYTE PTR [ebp+0x27],bl
  4043d8:	and    cl,dl
  4043da:	shr    edi,cl
  4043dc:	imul   eax,DWORD PTR [esi+eax*4+0x7a],0xffffff84
  4043e1:	push   esi
  4043e2:	stos   DWORD PTR es:[edi],eax
  4043e3:	cmp    edx,ebx
  4043e5:	inc    esi
  4043e6:	jg     0x40445d
  4043e8:	clc    
  4043e9:	mov    edx,0x6c37faff
  4043ee:	add    al,0x11
  4043f0:	std    
  4043f1:	nop
  4043f2:	jmp    0x50f9a589
  4043f7:	mov    eax,ds:0x80f543b1
  4043fc:	adc    eax,0x5edcc6fd
  404401:	(bad)  
  404402:	lock sub al,0xac
  404405:	mov    ecx,0xee7b0982
  40440a:	adc    esi,ebx
  40440c:	sahf   
  40440d:	pusha  
  40440e:	jp     0x4043fd
  404410:	jno    0x404412
  404412:	int3   
  404413:	pop    es
  404414:	mov    esi,0xbcca5dc2
  404419:	sbb    bh,BYTE PTR [ebp-0x66782617]
  40441f:	call   0x1794b67d
  404424:	jns    0x40444c
  404426:	dec    esi
  404427:	push   ds
  404428:	in     eax,0x46
  40442a:	jae    0x404426
  40442c:	sbb    ecx,DWORD PTR [esi]
  40442e:	or     eax,0xa5dbb542
  404433:	sbb    BYTE PTR [esi+0x63],al
  404436:	shl    edx,cl
  404438:	sub    eax,0xf76416c7
  40443d:	dec    ebx
  40443e:	lods   al,BYTE PTR ds:[esi]
  40443f:	sbb    ebx,esp
  404441:	or     edi,ebx
  404443:	(bad)  
  404444:	push   edi
  404445:	lahf   
  404446:	(bad)  
  404447:	mov    ah,ch
  404449:	mov    BYTE PTR [ecx],dl
  40444b:	dec    edx
  40444c:	xchg   ecx,eax
  40444d:	lock lea edi,[edx]
  404450:	mov    DWORD PTR [ebp+ecx*4-0x43],esp
  404454:	adc    dl,BYTE PTR ds:0xda4e7804
  40445a:	rcl    ch,cl
  40445c:	mov    ch,0xb0
  40445e:	scas   al,BYTE PTR es:[edi]
  40445f:	jle    0x4044d6
  404461:	and    edx,DWORD PTR [esi+0xd]
  404464:	inc    ecx
  404465:	leave  
  404466:	mov    BYTE PTR ds:0x2a391a7,al
  40446c:	in     eax,dx
  40446d:	cmp    BYTE PTR [edx],dl
  40446f:	je     0x40441e
  404471:	iret   
  404472:	sbb    edx,DWORD PTR [ecx+ebx*2+0x4dfe3f5b]
  404479:	xor    BYTE PTR [esi],al
  40447b:	add    DWORD PTR [ebx+ebp*8+0x18],ebp
  40447f:	cdq    
  404480:	inc    ecx
  404481:	fild   WORD PTR [edx-0xc]
  404484:	ror    DWORD PTR [eax],0x4d
  404487:	mov    ds:0x34012704,al
  40448c:	dec    edx
  40448d:	mov    edi,0x4712801d
  404492:	call   0x35ee:0xec1b5149
  404499:	mov    ds:0x8701ef40,eax
  40449e:	inc    ecx
  40449f:	inc    ebp
  4044a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044a1:	jl     0x404436
  4044a3:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044a5:	inc    esi
  4044a6:	inc    ebx
  4044a7:	(bad)  
  4044a8:	daa    
  4044a9:	or     BYTE PTR [edi-0x34d556cc],bl
  4044af:	xchg   edx,eax
  4044b0:	sub    al,0x69
  4044b2:	cmp    BYTE PTR [esi],al
  4044b4:	jle    0x4044a3
  4044b6:	int    0xc2
  4044b8:	mov    ah,0x32
  4044ba:	push   edi
  4044bb:	pop    ebx
  4044bc:	call   0x77a7:0x39552ffa
  4044c3:	retf   0x7a66
  4044c6:	mov    esi,0x6d6023fc
  4044cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044cc:	push   cs
  4044cd:	xchg   esi,eax
  4044ce:	cmp    BYTE PTR [ebx+eiz*1],ch
  4044d1:	cmp    BYTE PTR [edi],cl
  4044d3:	add    eax,0xa27975f5
  4044d8:	mov    ch,BYTE PTR [edx-0x31481995]
  4044de:	dec    ecx
  4044df:	rcl    DWORD PTR [edi+0x6f],0xd1
  4044e3:	fsubr  DWORD PTR [edi-0x4b]
  4044e6:	adc    esp,esp
  4044e8:	sub    dl,BYTE PTR [edx+0x3e]
  4044eb:	les    ebx,FWORD PTR [ebx]
  4044ed:	(bad)  
  4044ee:	out    0x21,al
  4044f0:	mov    BYTE PTR [esi+0x4eb74b2f],dl
  4044f6:	cmp    ah,BYTE PTR [esi+0x58]
  4044f9:	mov    ah,0xaf
  4044fb:	xor    BYTE PTR [ebx-0x7],0x46
  4044ff:	push   ds
  404500:	mov    ecx,0x446f7244
  404505:	addr16 repz aaa 
  404508:	jl     0x40452f
  40450a:	cmp    DWORD PTR [eax+0x55],esp
  40450d:	int    0x27
  40450f:	loopne 0x4044c5
  404511:	xchg   esp,eax
  404512:	shl    BYTE PTR [edx],cl
  404514:	xor    eax,0x64de5cba
  404519:	adc    eax,DWORD PTR [ebx]
  40451b:	jae    0x404594
  40451d:	fcmovnb st,st(3)
  40451f:	test   cl,cl
  404521:	jge    0x404589
  404523:	outs   dx,BYTE PTR ds:[esi]
  404524:	and    eax,0xc4223b17
  404529:	jle    0x4044e2
  40452b:	test   BYTE PTR [ebp+edx*1+0x748627dc],0x60
  404533:	jae    0x4044d0
  404535:	mov    ch,0x98
  404537:	sbb    al,0xa
  404539:	jp     0x4044c7
  40453b:	jl     0x404551
  40453d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40453e:	inc    esp
  40453f:	pushf  
  404540:	adc    DWORD PTR [ecx-0x12],esp
  404543:	fs jle 0x40459c
  404546:	inc    edx
  404547:	bound  ecx,QWORD PTR [edi+0x5dbadf15]
  40454d:	jo     0x4044fa
  40454f:	jp     0x4044e9
  404551:	stc    
  404552:	cmp    dl,BYTE PTR [ecx+0x45]
  404555:	add    al,0xb8
  404557:	fwait
  404558:	lods   al,BYTE PTR ds:[esi]
  404559:	out    0xeb,eax
  40455b:	rcr    BYTE PTR [ebx],0x4c
  40455e:	push   ecx
  40455f:	jns    0x4044fb
  404561:	sub    BYTE PTR [ebx],bl
  404563:	adc    eax,0xcf9627d5
  404568:	mov    dl,0xf3
  40456a:	sub    al,cl
  40456c:	add    al,0xf2
  40456e:	popa   
  40456f:	jecxz  0x404595
  404571:	das    
  404572:	inc    ebx
  404573:	icebp  
  404574:	xlat   BYTE PTR ds:[ebx]
  404575:	sar    DWORD PTR [ecx-0x22],cl
  404578:	fistp  QWORD PTR [edx]
  40457a:	in     eax,dx
  40457b:	iret   
  40457c:	scas   eax,DWORD PTR es:[edi]
  40457d:	ss pop ss
  40457f:	nop
  404580:	sbb    esi,esi
  404582:	xchg   esi,eax
  404583:	lds    ebp,FWORD PTR [edx-0x51642136]
  404589:	cld    
  40458a:	inc    ebp
  40458b:	sbb    edi,DWORD PTR [ebp+0x50be6584]
  404591:	dec    esi
  404592:	bound  edx,QWORD PTR [eax-0x4b]
  404595:	retf   
  404596:	call   0x243a5be2
  40459b:	test   BYTE PTR gs:[ecx-0x290ac2e5],0xff
  4045a3:	pop    es
  4045a4:	jmp    DWORD PTR [ebx]
  4045a6:	xor    ch,BYTE PTR [edi]
  4045a8:	ds std 
  4045aa:	jge    0x40453c
  4045ac:	or     DWORD PTR ds:0x2fa24213,esp
  4045b2:	icebp  
  4045b3:	test   ebp,0xb9d46314
  4045b9:	dec    ebx
  4045ba:	sub    ebx,ebx
  4045bc:	xor    eax,0xd18a7490
  4045c1:	int    0x93
  4045c3:	hlt    
  4045c4:	in     eax,0x65
  4045c6:	fadd   QWORD PTR [edi+0x259f961f]
  4045cc:	sbb    eax,0x28013181
  4045d1:	repz adc ebx,DWORD PTR [edx-0x48]
  4045d5:	mov    dl,0x98
  4045d7:	or     DWORD PTR [eax+ecx*8+0xc],esi
  4045db:	in     eax,0x5
  4045dd:	mul    BYTE PTR [edi+0x69]
  4045e0:	ret    
  4045e1:	fs sbb al,0xaa
  4045e4:	repz push esi
  4045e6:	bound  edi,QWORD PTR [eax+0x66d71f38]
  4045ec:	aas    
  4045ed:	repnz cs xchg edi,eax
  4045f0:	das    
  4045f1:	stc    
  4045f2:	jecxz  0x4045c0
  4045f4:	jp     0x4045bd
  4045f6:	jmp    0x2c60:0xc5513d80
  4045fd:	mov    edx,es
  4045ff:	data16 in al,dx
  404601:	test   DWORD PTR [eax+0x7b],ebp
  404604:	mov    al,ds:0x1cbc3f15
  404609:	test   eax,0xe5a692bb
  40460e:	add    esi,esp
  404610:	fldcw  WORD PTR [ecx]
  404612:	sub    DWORD PTR [ebx-0x6],esp
  404615:	inc    ebx
  404616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404617:	push   edx
  404618:	lahf   
  404619:	xchg   edi,eax
  40461a:	in     al,dx
  40461b:	and    bh,BYTE PTR [edx+ebp*2]
  40461e:	pop    esp
  40461f:	enter  0xdb4a,0x64
  404623:	add    bl,BYTE PTR ds:0xe9e18b9e
  404629:	pop    es
  40462a:	loop   0x404686
  40462c:	jns    0x404646
  40462e:	push   ss
  40462f:	aaa    
  404630:	popa   
  404631:	int3   
  404632:	dec    ecx
  404633:	adc    eax,0x808eb21f
  404638:	outs   dx,DWORD PTR ds:[esi]
  404639:	lahf   
  40463a:	(bad)
  40463d:	mov    cs,WORD PTR [esp+ecx*4-0x539a7880]
  404644:	push   ebx
  404645:	ror    ecx,cl
  404647:	pop    ebx
  404648:	std    
  404649:	push   0x58013241
  40464e:	inc    edx
  40464f:	dec    ebx
  404650:	fld    QWORD PTR [ecx+0x3419fc73]
  404656:	and    al,0x26
  404658:	mov    BYTE PTR [esi+ecx*1-0x54],al
  40465c:	in     al,0x7a
  40465e:	jl     0x404609
  404660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404661:	jle    0x40469b
  404663:	sub    eax,DWORD PTR [edx-0x80]
  404666:	mov    ecx,0x5422df33
  40466b:	jo     0x404675
  40466d:	and    DWORD PTR [edi],ecx
  40466f:	call   0x722b:0x1105f054
  404676:	xlat   BYTE PTR ds:[ebx]
  404677:	mov    dl,0x59
  404679:	cdq    
  40467a:	aam    0x32
  40467c:	push   es
  40467d:	add    eax,0xf8b3322e
  404682:	loopne 0x4046d4
  404684:	mov    eax,ds:0xf84a8f94
  404689:	(bad)  
  40468a:	retf   0x706a
  40468d:	xor    al,0xa9
  40468f:	dec    esp
  404690:	mov    ds:0x3cb3a18b,eax
  404695:	push   eax
  404696:	(bad)  
  404698:	sahf   
  404699:	rcr    DWORD PTR [edx-0x6a1312ec],1
  40469f:	or     al,0xcd
  4046a1:	lods   al,BYTE PTR es:[esi]
  4046a3:	xchg   ecx,eax
  4046a4:	icebp  
  4046a5:	and    al,0xf3
  4046a7:	sub    dl,ch
  4046a9:	xor    al,0x50
  4046ab:	stos   DWORD PTR es:[edi],eax
  4046ac:	loop   0x404701
  4046ae:	mov    bl,0x61
  4046b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046b1:	js     0x404676
  4046b3:	mov    esp,0x698a8dde
  4046b8:	jns    0x4046ad
  4046ba:	repnz cdq 
  4046bc:	(bad)  
  4046bd:	adc    ah,BYTE PTR [ebp-0x38]
  4046c0:	pop    ss
  4046c1:	loope  0x4046de
  4046c3:	xor    eax,DWORD PTR [edx+0x5c28cd77]
  4046c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046ca:	sub    al,0xa
  4046cc:	loop   0x404733
  4046ce:	or     ah,dh
  4046d0:	xchg   ebp,eax
  4046d1:	or     al,0xff
  4046d3:	pusha  
  4046d4:	cld    
  4046d5:	cdq    
  4046d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046d7:	rol    BYTE PTR [ebp+ebp*4-0x10],cl
  4046db:	repz jecxz 0x4046d3
  4046de:	arpl   WORD PTR [esi+0x559fcdee],sp
  4046e4:	shr    ecx,1
  4046e6:	or     esi,ecx
  4046e8:	xor    al,0xac
  4046ea:	push   ds
  4046eb:	ins    DWORD PTR es:[edi],dx
  4046ec:	or     al,0xd8
  4046ee:	push   esi
  4046ef:	ins    DWORD PTR es:[edi],dx
  4046f0:	mov    ah,0x48
  4046f2:	inc    eax
  4046f3:	sti    
  4046f4:	arpl   dx,si
  4046f6:	dec    ebp
  4046f7:	cli    
  4046f8:	add    esp,eax
  4046fa:	sti    
  4046fb:	sub    eax,0x6a82b73f
  404700:	ret    
  404701:	dec    edx
  404702:	loope  0x4046bd
  404704:	call   0x86ca6830
  404709:	xor    ecx,ebp
  40470b:	cmp    BYTE PTR [esp+eiz*8+0xf9ec078],dh
  404712:	fwait
  404713:	cdq    
  404714:	jmp    0xeb70ac0f
  404719:	xchg   ebp,eax
  40471a:	lds    edi,FWORD PTR [ecx-0x5743d506]
  404720:	pop    ss
  404721:	neg    BYTE PTR [edi-0x1043066e]
  404727:	out    0xab,eax
  404729:	mov    ch,0xef
  40472b:	stc    
  40472c:	xor    DWORD PTR [edx+eax*4+0x64],edi
  404730:	inc    edx
  404731:	ins    BYTE PTR es:[edi],dx
  404732:	add    BYTE PTR [ebp+0x38128b49],0x5a
  404739:	imul   eax,DWORD PTR [ecx],0x62
  40473c:	xor    ah,al
  40473e:	sti    
  40473f:	xchg   ecx,eax
  404740:	or     eax,DWORD PTR [eax+0x17]
  404743:	sub    al,BYTE PTR [ecx]
  404745:	retf   
  404746:	bound  eax,QWORD PTR [eax-0x79]
  404749:	mov    eax,ds:0xf978de40
  40474e:	xor    bh,BYTE PTR ds:0xe2e5077d
  404754:	push   es
  404755:	pop    ss
  404756:	hlt    
  404757:	sub    DWORD PTR [ebx-0x2f1f3372],0xae793779
  404761:	xchg   esp,eax
  404762:	inc    edi
  404763:	sbb    cl,ah
  404765:	repnz popa 
  404767:	or     eax,0xdb2c6c5b
  40476c:	out    0x4f,eax
  40476e:	inc    esi
  40476f:	fisubr DWORD PTR [edx]
  404771:	adc    BYTE PTR [eax+ecx*1],bl
  404774:	fistp  WORD PTR [edi]
  404776:	(bad)  
  404777:	in     eax,0x10
  404779:	ds xchg ecx,eax
  40477b:	inc    edi
  40477c:	mov    dh,0x24
  40477e:	xor    al,0xe5
  404780:	cld    
  404781:	adc    al,0x77
  404783:	sahf   
  404784:	fcomp  QWORD PTR [ecx+0x92b6cfd]
  40478a:	fdiv   st,st(0)
  40478c:	dec    edi
  40478d:	std    
  40478e:	mov    al,ds:0x63bbcc40
  404793:	xchg   esi,eax
  404794:	jecxz  0x404793
  404796:	add    eax,0x965b6783
  40479b:	ffreep st(2)
  40479d:	or     esp,ecx
  40479f:	adc    edx,DWORD PTR [edi]
  4047a1:	mov    esi,0xe3fda29a
  4047a6:	fdivr  QWORD PTR [ebp+0x77b616c5]
  4047ac:	and    eax,0x7fe1262e
  4047b1:	add    eax,0xd8ba53dc
  4047b6:	inc    edx
  4047b7:	sub    esp,DWORD PTR ds:0xeb4587c8
  4047bd:	mov    dh,BYTE PTR [edi+0x71]
  4047c0:	fs pop es
  4047c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047c3:	and    edi,esp
  4047c5:	ins    DWORD PTR es:[edi],dx
  4047c6:	and    edi,DWORD PTR [ebp-0x48]
  4047c9:	jp     0x4047b4
  4047cb:	mov    dh,0x6b
  4047cd:	retf   
  4047ce:	scas   eax,DWORD PTR es:[edi]
  4047cf:	or     ch,BYTE PTR [edi]
  4047d1:	cmp    eax,0xb9da6484
  4047d6:	popf   
  4047d7:	imul   esp,DWORD PTR [edx+ebp*4],0xe36f1cf1
  4047de:	(bad)  
  4047df:	std    
  4047e0:	pop    esp
  4047e1:	xchg   ecx,eax
  4047e2:	nop
  4047e3:	push   esi
  4047e4:	push   0xffffffd2
  4047e6:	mov    cl,BYTE PTR [ebx+ebx*8+0x1261515d]
  4047ed:	jne    0x40483e
  4047ef:	jns    0x40484e
  4047f1:	mov    DWORD PTR [esi+0x7edf888e],esi
  4047f7:	jnp    0x404834
  4047f9:	xor    eax,0xb1046f56
  4047fe:	mov    eax,0x76c70952
  404803:	inc    edx
  404804:	adc    esp,DWORD PTR [ebp+0xa]
  404807:	sbb    ah,dl
  404809:	add    BYTE PTR [ecx-0x35],ch
  40480c:	ins    DWORD PTR es:[edi],dx
  40480d:	add    al,0xea
  40480f:	xchg   ecx,eax
  404810:	mov    eax,ds:0x57364b60
  404815:	push   es
  404816:	lods   eax,DWORD PTR ds:[esi]
  404817:	push   ebp
  404818:	xlat   BYTE PTR ds:[ebx]
  404819:	xor    al,0x5
  40481b:	add    dh,BYTE PTR [ecx+0x6a]
  40481e:	push   0x78
  404820:	xchg   ebx,eax
  404821:	adc    ebx,DWORD PTR [ebx]
  404823:	adc    ebx,DWORD PTR [esi+0x3a]
  404826:	shl    BYTE PTR [edi],cl
  404828:	pop    esp
  404829:	pop    ecx
  40482a:	sub    bh,dh
  40482c:	sub    esi,DWORD PTR [edx+0x53]
  40482f:	shl    DWORD PTR [ebp-0x29],cl
  404832:	enter  0x4844,0x84
  404836:	jmp    0x404844
  404838:	mov    al,ds:0xd06e2a25
  40483d:	pop    ebx
  40483e:	rol    DWORD PTR [edx+eiz*1-0x5e],0x41
  404843:	popf   
  404844:	mov    edi,0x84f8fe
  404849:	pop    ecx
  40484a:	pop    eax
  40484b:	add    esi,DWORD PTR [edx]
  40484d:	ds ret 
  40484f:	push   0x76d827f1
  404854:	das    
  404855:	jmp    0x64ba:0xb8bb705b
  40485c:	mov    al,0x3b
  40485e:	dec    ecx
  40485f:	in     eax,dx
  404860:	dec    edi
  404861:	sbb    ch,BYTE PTR [edx+0x1c]
  404864:	ror    BYTE PTR [esi-0x3ed8b828],cl
  40486a:	or     bl,dh
  40486c:	cmp    al,0x9d
  40486e:	dec    esp
  40486f:	inc    edx
  404870:	fldenv [bx+si-0x2304]
  404875:	xor    ebp,edi
  404877:	bound  ecx,QWORD PTR [ecx-0x7b]
  40487a:	cmc    
  40487b:	retf   
  40487c:	mov    ch,0x34
  40487e:	test   al,0x42
  404880:	or     DWORD PTR [esi],esi
  404882:	out    dx,eax
  404883:	mov    dl,0xfe
  404885:	push   esp
  404887:	or     DWORD PTR [edi+eiz*1-0x73],ecx
  40488b:	test   BYTE PTR [eax+0x4a9c2614],ah
  404891:	cmp    edi,DWORD PTR [ebx-0x80]
  404894:	sbb    edx,DWORD PTR [edx]
  404896:	dec    ebx
  404897:	or     BYTE PTR [esp+edi*4+0x42],cl
  40489b:	cmp    bl,BYTE PTR ds:0xe7eb6a44
  4048a1:	in     eax,dx
  4048a2:	adc    al,0xb8
  4048a4:	adc    ebx,DWORD PTR [esi+0x5c37301b]
  4048aa:	jo     0x40488e
  4048ac:	leave  
  4048ad:	dec    ecx
  4048ae:	scas   al,BYTE PTR es:[edi]
  4048af:	sbb    eax,0xf954ba0a
  4048b4:	add    DWORD PTR [ebp+ebx*2-0x5408841a],esp
  4048bb:	fucomi st,st(2)
  4048bd:	pop    es
  4048be:	mov    cl,0x6a
  4048c0:	inc    edi
  4048c1:	mov    eax,ds:0x68ef0dda
  4048c6:	inc    ebp
  4048c7:	inc    eax
  4048c8:	ret    
  4048c9:	std    
  4048ca:	cli    
  4048cb:	test   al,0x8a
  4048cd:	fsub   st(0),st
  4048cf:	mov    al,ds:0x248d65a2
  4048d4:	in     al,0xbd
  4048d6:	dec    edx
  4048d7:	push   ecx
  4048d8:	dec    ecx
  4048d9:	pusha  
  4048da:	das    
  4048db:	fxam   
  4048dd:	sti    
  4048de:	and    bl,bl
  4048e0:	sbb    BYTE PTR [esi],ch
  4048e2:	pusha  
  4048e3:	jbe    0x404944
  4048e5:	ret    0x6da3
  4048e8:	xchg   esp,eax
  4048e9:	(bad)  
  4048ea:	dec    esi
  4048eb:	adc    DWORD PTR [edi-0x1d],edi
  4048ee:	sub    BYTE PTR [ebx-0x2],dh
  4048f1:	mov    al,0xa6
  4048f3:	jp     0x4048b2
  4048f5:	sbb    ecx,DWORD PTR [ebx+0x690997f1]
  4048fb:	les    ebx,FWORD PTR [ebp+0x1e164082]
  404901:	mov    al,0xbe
  404903:	sbb    al,0xf3
  404905:	adc    al,0xcc
  404907:	xchg   DWORD PTR [edi-0x1a4c32ba],edi
  40490d:	gs and eax,0x76eb0f1b
  404913:	cmc    
  404914:	scas   eax,DWORD PTR es:[edi]
  404915:	out    0xc7,al
  404917:	aam    0xd0
  404919:	pop    esi
  40491a:	add    al,0x29
  40491c:	or     esp,DWORD PTR [eax]
  40491e:	arpl   cx,ax
  404920:	inc    edx
  404921:	lods   al,BYTE PTR ds:[esi]
  404922:	fs push edx
  404924:	sbb    eax,0xce4756b9
  404929:	int    0x95
  40492b:	add    al,0x58
  40492d:	and    BYTE PTR [esi],dl
  40492f:	jae    0x962f1dce
  404935:	dec    edx
  404936:	mov    dl,0x83
  404938:	sbb    ch,ah
  40493a:	push   edi
  40493b:	rep stos BYTE PTR es:[edi],al
  40493d:	popa   
  40493e:	mov    DWORD PTR [edi+0x4f],edx
  404941:	loope  0x404945
  404943:	ret    
  404944:	fs scas eax,DWORD PTR es:[edi]
  404946:	pop    edx
  404947:	es inc eax
  404949:	push   edi
  40494a:	mov    cl,0xa1
  40494c:	aam    0x9
  40494e:	pop    es
  40494f:	test   al,0x7e
  404951:	(bad)
  404954:	push   edi
  404955:	dec    esp
  404956:	out    dx,eax
  404957:	test   BYTE PTR [edi-0x1920c440],cl
  40495d:	inc    esi
  40495e:	push   es
  40495f:	icebp  
  404960:	jo     0x40492f
  404962:	dec    DWORD PTR [esp+esi*4+0x4b]
  404966:	jg     0x4049d1
  404968:	fcomp  QWORD PTR [eax+0x62f438af]
  40496e:	adc    DWORD PTR [eax+0x349d5978],edx
  404974:	es xor ax,0xad69
  404979:	rol    DWORD PTR [ecx-0x105d6a82],cl
  40497f:	pop    ss
  404980:	pop    eax
  404981:	mov    WORD PTR [ecx+0x4be9f0b9],gs
  404987:	sbb    bl,0x15
  40498a:	xchg   esp,eax
  40498b:	sbb    eax,0xb99c92cb
  404990:	or     DWORD PTR [eax],esp
  404992:	fnstenv [edi]
  404994:	jo     0x404930
  404996:	xor    cl,ch
  404998:	mov    esi,0xeed01e10
  40499d:	pcmpgtb mm5,QWORD PTR [esi+edi*2]
  4049a1:	push   ebx
  4049a2:	sbb    bl,dl
  4049a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049a5:	ror    DWORD PTR [ebp+0xd],1
  4049a8:	jle    0x4049f6
  4049aa:	xor    eax,0xcb14cd72
  4049af:	daa    
  4049b0:	adc    BYTE PTR [ebx+0x2394ab78],0xa3
  4049b7:	xchg   BYTE PTR [eax-0x35],ah
  4049ba:	sbb    edx,DWORD PTR [edi+0x63]
  4049bd:	cwde   
  4049be:	dec    esp
  4049bf:	sbb    eax,0x5ed69a6a
  4049c4:	test   bh,bh
  4049c6:	jge    0x404972
  4049c8:	mov    ds:0xc03386b0,al
  4049cd:	sbb    DWORD PTR [edx-0x743fb49f],0xffffffb3
  4049d4:	dec    edi
  4049d5:	mov    ebp,0x20306f6f
  4049da:	pop    DWORD PTR [ecx]
  4049dc:	aas    
  4049dd:	lds    ebx,FWORD PTR [ebx+0x3c193679]
  4049e3:	inc    edx
  4049e4:	xlat   BYTE PTR ds:[ebx]
  4049e5:	add    ebx,DWORD PTR fs:[ebx+edi*8]
  4049e9:	lock pop eax
  4049eb:	adc    ch,al
  4049ed:	jo     0x4049b9
  4049ef:	repz or al,0xc3
  4049f2:	xor    dl,BYTE PTR [ebp+ebx*1-0x7a]
  4049f6:	push   ds
  4049f7:	loope  0x4049da
  4049f9:	xchg   edx,eax
  4049fa:	fdivp  st(0),st
  4049fc:	or     BYTE PTR ds:0xc4090b8f,cl
  404a02:	cmp    al,0x76
  404a04:	xchg   edi,eax
  404a05:	je     0x4049bd
  404a07:	ins    BYTE PTR es:[edi],dx
  404a08:	test   BYTE PTR [ecx+0x32],al
  404a0b:	jo     0x404a46
  404a0d:	dec    dx
  404a0f:	sbb    DWORD PTR [eax+eiz*4+0x445eb269],edx
  404a16:	repnz inc esp
  404a18:	xor    DWORD PTR [esi-0x6c],ecx
  404a1b:	inc    ecx
  404a1c:	aaa    
  404a1d:	mov    eax,ds:0x7ca470b2
  404a22:	bound  ebp,QWORD PTR [edx]
  404a24:	pop    esp
  404a25:	push   esi
  404a26:	sti    
  404a27:	enter  0xa277,0x38
  404a2b:	mov    DWORD PTR [ecx],ebx
  404a2d:	sar    BYTE PTR [edx+0x26],1
  404a30:	push   0x2b
  404a32:	inc    eax
  404a33:	clc    
  404a34:	outs   dx,DWORD PTR ds:[esi]
  404a35:	aam    0x98
  404a37:	dec    edi
  404a38:	cmp    al,0x56
  404a3a:	cmc    
  404a3b:	mov    ebx,DWORD PTR [edx]
  404a3d:	call   0x755c:0x5f9a33ee
  404a44:	sbb    BYTE PTR [ecx+0x45ed5c9a],bh
  404a4a:	pushf  
  404a4b:	(bad)  
  404a4c:	data16 add BYTE PTR [ecx+ebp*2-0x31144e41],cl
  404a54:	fucom  st(0)
  404a56:	ins    DWORD PTR es:[edi],dx
  404a57:	shl    BYTE PTR ds:0x67645ffe,0x26
  404a5e:	jmp    DWORD PTR [eax+0x24ce7c4]
  404a64:	adc    esp,0x19
  404a67:	psrlw  mm5,mm2
  404a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a6b:	lea    edx,[esi]
  404a6d:	inc    edi
  404a6e:	mov    edi,ds
  404a70:	call   0x97e37a
  404a75:	jle    0x404a11
  404a77:	inc    esp
  404a78:	mov    ecx,0x8b67e659
  404a7d:	neg    ecx
  404a7f:	inc    edi
  404a80:	or     al,BYTE PTR [esi+0x3a]
  404a83:	jge    0x404a20
  404a85:	loop   0x404af1
  404a87:	repnz adc edx,DWORD PTR [eax]
  404a8a:	enter  0x9eaa,0xa5
  404a8e:	add    dl,0x3a
  404a91:	jno    0x404a6e
  404a93:	lea    ecx,[edx+0x393eacf1]
  404a99:	int    0x43
  404a9b:	enter  0xeebf,0xc
  404a9f:	lods   eax,DWORD PTR ds:[esi]
  404aa0:	add    al,0xf4
  404aa2:	mov    edi,0xa467acd1
  404aa7:	(bad)  
  404aa8:	sti    
  404aa9:	push   es
  404aaa:	inc    esp
  404aab:	inc    ebp
  404aac:	hlt    
  404aad:	cwde   
  404aae:	cmp    al,0xc8
  404ab0:	fsub   DWORD PTR [esi+ebx*1-0x70]
  404ab4:	xor    al,BYTE PTR [ecx]
  404ab6:	jecxz  0x404aa1
  404ab8:	lea    esp,[ebp+0x14]
  404abb:	aas    
  404abc:	mov    esi,0xf2acfe8e
  404ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ac2:	inc    esp
  404ac3:	mov    esp,0xcb6d6b11
  404ac8:	es xchg ecx,edx
  404acb:	push   ebp
  404acc:	mov    eax,DWORD PTR [eax+0x6b6098bc]
  404ad2:	xchg   edi,eax
  404ad3:	sbb    eax,0x110442b5
  404ad8:	(bad)  
  404ad9:	cmp    eax,0xcd757f7b
  404ade:	(bad)  
  404adf:	out    0xc7,al
  404ae1:	fcomp  DWORD PTR [eax+0x224e06b7]
  404ae7:	push   esp
  404ae8:	xor    DWORD PTR [ebx+0x87dabf1],0xffffffa6
  404aef:	mov    ebx,0x89d9d292
  404af4:	sbb    al,0x36
  404af7:	cmp    cl,BYTE PTR [ecx+ebx*2]
  404afa:	rol    DWORD PTR [eax-0x41],0x4c
  404afe:	jecxz  0x404b12
  404b00:	or     al,0x3f
  404b02:	fiadd  DWORD PTR [esi+0x7]
  404b05:	iret   
  404b06:	pop    ss
  404b07:	ss dec eax
  404b09:	or     al,0x6a
  404b0b:	sub    DWORD PTR [eax+0x1],edx
  404b0e:	and    cl,BYTE PTR [edx-0x6b8c0fe9]
  404b14:	or     ecx,ebx
  404b16:	xchg   ebx,eax
  404b17:	pop    ds
  404b18:	xor    BYTE PTR [edx+0x49],dl
  404b1b:	jg     0x404b02
  404b1d:	neg    DWORD PTR [esi-0x5650b390]
  404b23:	jnp    0x404ba4
  404b25:	xlat   BYTE PTR ds:[ebx]
  404b26:	(bad)  
  404b27:	stos   DWORD PTR es:[edi],eax
  404b28:	xchg   DWORD PTR [edx],esp
  404b2a:	add    BYTE PTR [ebp-0xe],cl
  404b2d:	sub    BYTE PTR [eax],ah
  404b2f:	sub    edx,DWORD PTR [esi-0x59]
  404b32:	cmp    ch,BYTE PTR [esp+ebx*8]
  404b35:	inc    edx
  404b36:	pop    ebp
  404b37:	(bad)
  404b3a:	ret    
  404b3b:	or     eax,0x5a934338
  404b40:	das    
  404b41:	stc    
  404b42:	jo     0x404bc1
  404b44:	loope  0x404b0e
  404b46:	and    eax,0x455e8176
  404b4b:	add    DWORD PTR [ebp+ecx*8+0x69],eax
  404b4f:	jns    0x404ba3
  404b51:	mov    dh,BYTE PTR ds:0x3c79b7dd
  404b57:	add    eax,0x9ad50ca
  404b5c:	rcr    edx,cl
  404b5e:	popa   
  404b5f:	xchg   ebp,eax
  404b60:	inc    BYTE PTR [ebp+0x28]
  404b63:	imul   edx,DWORD PTR [esi+0x7c],0x3899a81a
  404b6a:	ins    BYTE PTR es:[edi],dx
  404b6b:	out    dx,eax
  404b6c:	push   ds
  404b6d:	mov    bl,0xf8
  404b6f:	call   0x404c:0x9f97499
  404b76:	mov    ds:0x2b63c775,eax
  404b7b:	scas   al,BYTE PTR es:[edi]
  404b7c:	es fwait
  404b7e:	in     al,dx
  404b7f:	adc    DWORD PTR [esi-0x60],eax
  404b82:	out    0xf3,al
  404b84:	and    eax,edi
  404b86:	dec    ebx
  404b87:	push   0x1e30da84
  404b8c:	adc    DWORD PTR [ebp-0x3febbe0e],esi
  404b92:	mov    ds:0xf7498aa7,eax
  404b97:	adc    eax,0xa4c9e7d8
  404b9c:	xchg   DWORD PTR [eax-0xf2b0605],esp
  404ba2:	dec    esp
  404ba3:	dec    ecx
  404ba4:	daa    
  404ba5:	and    ecx,ebp
  404ba7:	out    dx,eax
  404ba8:	sub    al,BYTE PTR [esp+esi*4]
  404bab:	in     al,0x37
  404bad:	data16 es (bad) 
  404bb0:	ror    bh,cl
  404bb2:	ffreep st(4)
  404bb4:	bound  ecx,QWORD PTR [esi+0x5b1d3760]
  404bba:	add    eax,0xaec5dbe7
  404bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc0:	mov    BYTE PTR [esi+edx*1+0x44e309a2],0xc6
  404bc8:	inc    esi
  404bc9:	fnstenv [eax]
  404bcb:	pop    esi
  404bcc:	mov    ds:0x25547b0e,al
  404bd1:	mov    esp,0x6912d507
  404bd6:	mov    dh,0xdb
  404bd8:	mov    dl,0x54
  404bda:	out    0x8,al
  404bdc:	sbb    ecx,DWORD PTR [edx+0x23e11657]
  404be2:	fstp   QWORD PTR ds:0x6df2
  404be7:	addr16 push cs
  404be9:	shl    dl,0x34
  404bec:	jmp    0x404bba
  404bee:	lods   eax,DWORD PTR ds:[esi]
  404bef:	mov    ecx,0x7ca6bcc5
  404bf4:	jl     0x404b7e
  404bf6:	fidiv  WORD PTR [ecx+0x68]
  404bf9:	sbb    al,0x3c
  404bfb:	add    ebp,DWORD PTR [edx-0x5d36637a]
  404c01:	ja     0x404bdd
  404c03:	or     al,0x46
  404c05:	inc    ecx
  404c06:	ja     0x404b9f
  404c08:	fsubr  QWORD PTR [ebp+0x71]
  404c0b:	push   cs
  404c0c:	inc    ebp
  404c0d:	xchg   edi,eax
  404c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c0f:	jnp    0x404c5f
  404c11:	nop
  404c12:	mov    edi,0x38ca8dd5
  404c17:	mov    ch,0x78
  404c19:	pop    ebx
  404c1a:	and    dl,BYTE PTR [eax+eax*1+0x58de49cf]
  404c21:	imul   esi,DWORD PTR [esi+0x4b62a732],0xffffffa0
  404c28:	enter  0x7c1d,0x3d
  404c2c:	inc    esp
  404c2d:	enter  0xf69d,0xb3
  404c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c32:	sub    al,0xc0
  404c34:	adc    DWORD PTR [ecx+eiz*2+0x15482942],edx
  404c3b:	lahf   
  404c3c:	mov    ds:0xb1990233,eax
  404c41:	out    dx,al
  404c42:	popf   
  404c43:	(bad)  
  404c45:	mov    ecx,0x22cf110
  404c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c4b:	adc    BYTE PTR [edi],bl
  404c4d:	xor    eax,0x3d532d62
  404c52:	loop   0x404c1c
  404c54:	push   esp
  404c55:	jl     0x404bee
  404c57:	call   0x1977:0xc1871ab9
  404c5e:	cs pop eax
  404c60:	nop
  404c61:	and    al,0x9a
  404c63:	repnz hlt 
  404c65:	push   esi
  404c66:	jle    0x404c0d
  404c68:	gs pop ds
  404c6a:	xor    DWORD PTR [eiz*1-0x34a1dfb8],edi
  404c71:	add    eax,0xb7fb9aa4
  404c76:	mov    esi,esi
  404c78:	inc    DWORD PTR ss:0x855ec533
  404c7f:	dec    ebx
  404c80:	in     al,0x6e
  404c82:	enter  0x1a6a,0x5a
  404c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c87:	and    dl,BYTE PTR [ecx-0x5549111d]
  404c8d:	test   dh,al
  404c8f:	pop    ebx
  404c90:	pop    edx
  404c91:	pop    ecx
  404c92:	out    dx,al
  404c93:	or     BYTE PTR [esi+0x71b2f35d],dh
  404c99:	sbb    ecx,DWORD PTR [eax+0x6b07f47c]
  404c9f:	jns    0x404d14
  404ca1:	push   edx
  404ca2:	jp     0x404c6d
  404ca4:	jnp    0x404ce4
  404ca6:	and    DWORD PTR ds:[esi+ebx*8],0x4d
  404cab:	xchg   BYTE PTR [ecx],bh
  404cad:	sub    WORD PTR [ebx+0x35],sp
  404cb1:	ins    DWORD PTR es:[edi],dx
  404cb2:	dec    esp
  404cb3:	inc    edx
  404cb4:	fs inc esp
  404cb6:	inc    esi
  404cb7:	push   eax
  404cb8:	inc    esp
  404cb9:	xchg   edx,eax
  404cba:	dec    esp
  404cbb:	daa    
  404cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cbd:	mov    ecx,0x7854834c
  404cc2:	sub    al,0x48
  404cc4:	repz shr ebp,cl
  404cc7:	imul   ecx,DWORD PTR [edi],0x5a
  404cca:	lds    ebx,FWORD PTR [ebx+0x586d6812]
  404cd0:	and    eax,0xdfe2bee9
  404cd5:	pushf  
  404cd6:	push   cs
  404cd7:	xor    DWORD PTR [edi+0x3c6402dc],esp
  404cdd:	xchg   ecx,eax
  404cde:	mov    ah,0x8e
  404ce0:	push   esi
  404ce1:	push   esi
  404ce2:	ja     0x404d55
  404ce4:	xor    al,0x68
  404ce6:	std    
  404ce7:	push   ss
  404ce8:	sbb    esp,esi
  404cea:	jmp    0x5ee8:0x7486e67
  404cf1:	sti    
  404cf2:	xor    BYTE PTR [ebx+0x641d4732],al
  404cf8:	shl    ecx,1
  404cfa:	loope  0x404cc5
  404cfc:	test   DWORD PTR [eax-0x4a],esi
  404cff:	stc    
  404d00:	push   0xfffffff9
  404d02:	(bad)  
  404d03:	in     eax,dx
  404d04:	out    dx,eax
  404d05:	jecxz  0x404d78
  404d07:	cmp    al,0x15
  404d09:	jne    0x404c97
  404d0b:	lds    esi,FWORD PTR [ebp+ecx*2-0x1c716981]
  404d12:	sbb    eax,0x46031910
  404d17:	rcl    DWORD PTR [eax+ebx*4-0x15],1
  404d1b:	jl     0x404cd8
  404d1d:	lods   al,BYTE PTR ds:[esi]
  404d1e:	pop    es
  404d1f:	bsr    esi,DWORD PTR [eax+0x7b]
  404d23:	and    al,0x4a
  404d25:	jne    0x404da0
  404d27:	inc    ecx
  404d28:	mov    dl,0x94
  404d2a:	jl     0x404da3
  404d2c:	lods   al,BYTE PTR ds:[esi]
  404d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d2e:	shl    BYTE PTR ds:0x89473966,1
  404d34:	dec    eax
  404d35:	xor    DWORD PTR [ebp+0x63485168],edx
  404d3b:	add    BYTE PTR [ebx+ecx*8-0x163a81a1],al
  404d42:	add    BYTE PTR [edx+0x52185116],0xd2
  404d49:	shl    BYTE PTR [edx-0x18],0xc0
  404d4d:	xor    BYTE PTR [eax],ch
  404d4f:	adc    al,0xb7
  404d51:	xchg   edi,eax
  404d52:	mov    al,ds:0x9f01c3db
  404d57:	xlat   BYTE PTR ds:[ebx]
  404d58:	push   ds
  404d59:	or     esi,DWORD PTR [eax+eax*1-0x39de7ed4]
  404d60:	jnp    0x404da9
  404d62:	jle    0x404d9b
  404d64:	lea    edi,[edx+0x466a1af1]
  404d6a:	and    DWORD PTR [ebp-0x2c],0x6f
  404d6e:	(bad)  
  404d6f:	mov    edx,0x78f44a3a
  404d74:	stc    
  404d75:	pop    ebx
  404d76:	and    BYTE PTR [ebx+ecx*8],ah
  404d79:	mov    dl,0x20
  404d7b:	mov    ds:0xfb3fac32,al
  404d80:	or     DWORD PTR [ebx-0x18],eax
  404d83:	jne    0x404d1c
  404d85:	inc    esi
  404d86:	sub    al,0xa8
  404d88:	shr    BYTE PTR [ecx+edi*4-0x1f],cl
  404d8c:	xor    DWORD PTR [ebp+0xce047d9],edi
  404d92:	mov    al,0x6a
  404d94:	clc    
  404d95:	jmp    0xa662a1c3
  404d9a:	mov    ecx,0x44fbcd71
  404d9f:	xchg   DWORD PTR [ebp+0x194a9991],edi
  404da5:	push   eax
  404da6:	jmp    0x404e03
  404da8:	pop    edi
  404da9:	out    dx,eax
  404daa:	fwait
  404dab:	shr    DWORD PTR [ebp+0x679ae5dd],cl
  404db1:	and    esp,DWORD PTR [edi-0x7243c818]
  404db7:	adc    cl,cl
  404db9:	shr    DWORD PTR [ebx-0x737979c8],1
  404dbf:	inc    edi
  404dc0:	and    BYTE PTR [ebx-0x16],dh
  404dc3:	mov    esp,0xdeffeb94
  404dc8:	cmp    DWORD PTR [ecx+0x689faf4a],ecx
  404dce:	in     al,0xe2
  404dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dd1:	inc    edx
  404dd2:	addr16 addr16 cld 
  404dd5:	and    ch,BYTE PTR [edi+edi*4+0x3ce8400c]
  404ddc:	xchg   esp,eax
  404ddd:	repz pop edx
  404ddf:	jecxz  0x404df9
  404de1:	gs sahf 
  404de3:	mov    cl,0xd9
  404de5:	(bad)  
  404de6:	mul    BYTE PTR [eax-0x76497c25]
  404dec:	bound  ebx,QWORD PTR [esi-0x27]
  404def:	jp     0x404dd7
  404df1:	inc    edi
  404df2:	cwde   
  404df3:	mov    DWORD PTR [eax+0x1a],eax
  404df6:	inc    ecx
  404df7:	or     BYTE PTR [edi-0x6c18e687],bl
  404dfd:	in     al,0x5f
  404dff:	aad    0xe9
  404e01:	(bad)  
  404e02:	out    dx,al
  404e03:	push   edx
  404e04:	mov    dl,0xc9
  404e06:	gs pop ebp
  404e08:	cld    
  404e09:	in     al,0x56
  404e0b:	clc    
  404e0c:	sbb    eax,0xc1d418dd
  404e11:	dec    ebx
  404e12:	xchg   edi,eax
  404e13:	mov    edi,0x6b907b8b
  404e18:	ret    0xbab9
  404e1b:	popa   
  404e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e1d:	xchg   edx,eax
  404e1e:	xor    al,0xe9
  404e20:	inc    ebp
  404e21:	xchg   edx,eax
  404e22:	into   
  404e23:	das    
  404e24:	in     eax,0x68
  404e26:	fwait
  404e27:	add    cl,BYTE PTR [ecx-0x41]
  404e2a:	xor    eax,0x8cf39c73
  404e2f:	test   eax,0x8076107
  404e34:	mov    ecx,0x55511d86
  404e39:	ins    DWORD PTR es:[edi],dx
  404e3a:	sbb    edx,DWORD PTR [ebx-0x7de08c3e]
  404e40:	dec    eax
  404e41:	fldcw  WORD PTR [eax+0x7a]
  404e44:	mov    bh,0x58
  404e46:	mov    bh,0x94
  404e48:	pop    esp
  404e49:	jae    0x404e34
  404e4b:	push   edx
  404e4c:	add    DWORD PTR [bp+si-0x4d],ebp
  404e50:	out    0xad,eax
  404e52:	test   al,0xdd
  404e54:	xor    eax,0x9605fcd4
  404e59:	xchg   esp,eax
  404e5a:	ins    BYTE PTR es:[edi],dx
  404e5b:	sti    
  404e5c:	fwait
  404e5d:	mov    ecx,ebp
  404e5f:	ss (bad) 
  404e61:	pop    esi
  404e62:	loope  0x404e76
  404e64:	fmulp  st(0),st
  404e66:	xor    dl,BYTE PTR [esi-0x585060c2]
  404e6c:	mov    al,0x69
  404e6e:	das    
  404e6f:	bound  edi,QWORD PTR [ebx]
  404e71:	std    
  404e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e73:	inc    esp
  404e74:	inc    edi
  404e75:	jo     0x404edc
  404e77:	mov    dh,BYTE PTR [esi+0x59c6f8c6]
  404e7d:	and    BYTE PTR [esi+0x7640c85b],bl
  404e83:	cmc    
  404e84:	mov    ds:0x48d8be44,eax
  404e89:	xchg   DWORD PTR ds:0xaa3c291,eax
  404e8f:	imul   ecx,ecx,0x452f677a
  404e95:	pop    esp
  404e96:	xor    eax,0x5694ce44
  404e9b:	in     al,dx
  404e9c:	mov    cl,0x5e
  404e9e:	sbb    DWORD PTR ds:0x77080a5,edx
  404ea4:	and    cl,ch
  404ea6:	cwde   
  404ea7:	sub    BYTE PTR [edx+0x4b99aca6],0xa5
  404eae:	dec    ebx
  404eaf:	mov    al,0x34
  404eb1:	sub    BYTE PTR [ecx-0x29f68059],al
  404eb7:	xor    DWORD PTR [ebp+0x35],ebp
  404eba:	pop    esp
  404ebb:	popa   
  404ebc:	imul   edi,DWORD PTR [esi+eax*1-0x6a95fe14],0x48
  404ec4:	leave  
  404ec5:	mov    edi,0x5bc71e1d
  404eca:	sbb    ecx,ebx
  404ecc:	add    BYTE PTR [bp+di],bh
  404ecf:	neg    DWORD PTR [esi]
  404ed1:	mov    edx,0x76ce5c7f
  404ed6:	inc    ebp
  404ed7:	fwait
  404ed8:	inc    eax
  404ed9:	jl     0x404e78
  404edb:	(bad)  
  404edc:	shr    ebp,cl
  404ede:	mov    ah,0xbe
  404ee0:	add    eax,0x9ce3e9
  404ee5:	lea    esi,[esp+esi*1-0x31d10bc0]
  404eec:	stc    
  404eed:	loop   0x404f1a
  404eef:	dec    ebx
  404ef0:	adc    al,0xd
  404ef2:	ficomp DWORD PTR [edx+0x41]
  404ef5:	retf   0xa1e0
  404ef8:	addr16 inc ebx
  404efa:	mov    eax,DWORD PTR [ebp-0x31]
  404efd:	mov    bl,0x8f
  404eff:	retf   
  404f00:	xchg   ecx,eax
  404f01:	push   eax
  404f02:	mov    cs,WORD PTR ds:0xdf5ba502
  404f08:	jne    0x404f4b
  404f0a:	outs   dx,DWORD PTR ds:[esi]
  404f0b:	in     eax,0x29
  404f0d:	and    eax,0x934a38b3
  404f12:	lock scas al,BYTE PTR es:[edi]
  404f14:	stos   BYTE PTR es:[edi],al
  404f15:	popa   
  404f16:	neg    BYTE PTR [eax+0xc]
  404f19:	xor    al,0x54
  404f1b:	adc    ah,BYTE PTR [ebx]
  404f1d:	jb     0x404ef7
  404f1f:	sub    DWORD PTR [eax+esi*4-0x3a],esp
  404f23:	mov    dh,0x86
  404f25:	fistp  WORD PTR [eax+0x19]
  404f28:	stos   DWORD PTR es:[edi],eax
  404f29:	test   DWORD PTR [eax],0xa41d6072
  404f2f:	enter  0x9bd4,0x39
  404f33:	fs and ah,ah
  404f36:	add    al,0x41
  404f38:	retf   
  404f39:	push   ds
  404f3a:	add    WORD PTR [esi+0x5e7749d2],bx
  404f41:	xor    al,BYTE PTR [edx+0xd83f283]
  404f47:	inc    esi
  404f48:	jo     0x404ef7
  404f4a:	pusha  
  404f4b:	cli    
  404f4c:	popf   
  404f4d:	aam    0xb
  404f4f:	pop    edx
  404f50:	pusha  
  404f51:	jae    0x404fac
  404f53:	or     dh,BYTE PTR [esi]
  404f55:	push   esi
  404f56:	inc    ebp
  404f57:	or     eax,0xf93e2144
  404f5c:	enter  0xcea7,0xb0
  404f60:	outs   dx,DWORD PTR ds:[esi]
  404f61:	jb     0x404f24
  404f63:	repz pop ds
  404f65:	jno    0x404fae
  404f67:	or     eax,0x12616da6
  404f6c:	mov    al,ds:0x25aea425
  404f71:	mov    al,0xec
  404f73:	add    al,0x3f
  404f75:	sub    al,BYTE PTR ss:[esi-0x53]
  404f79:	addr16 sbb eax,esi
  404f7c:	jae    0x404fdb
  404f7e:	jmp    0x404f0a
  404f80:	into   
  404f81:	leave  
  404f82:	loopne 0x404f58
  404f84:	adc    dl,bh
  404f86:	test   BYTE PTR [esi+0x6434cfae],bh
  404f8c:	mov    dh,0x9b
  404f8e:	fwait
  404f8f:	jae    0x404f5d
  404f91:	push   es
  404f92:	push   esi
  404f93:	fwait
  404f94:	dec    ecx
  404f95:	(bad)  
  404f96:	pop    edi
  404f97:	(bad)  
  404f98:	mov    ds:0x204b43b6,al
  404f9d:	mov    dh,0x51
  404f9f:	div    DWORD PTR [edx]
  404fa1:	fld    QWORD PTR [esi]
  404fa3:	ds icebp 
  404fa5:	call   0x5464a7ad
  404faa:	retf   
  404fab:	sbb    DWORD PTR [edx+0x1a],esp
  404fae:	cs push ds
  404fb0:	mov    edx,eax
  404fb2:	pop    ebx
  404fb3:	repnz adc ah,ch
  404fb6:	inc    esi
  404fb7:	nop
  404fb8:	push   ebx
  404fb9:	int    0x96
  404fbb:	push   0xffffffc3
  404fbd:	xchg   ebp,eax
  404fbe:	and    al,0xd7
  404fc0:	add    al,0xc5
  404fc2:	dec    ebx
  404fc3:	in     eax,0xb
  404fc5:	retf   0x3da7
  404fc8:	dec    ebx
  404fc9:	pop    edx
  404fca:	and    ch,cl
  404fcc:	cmp    eax,0xb1e7288c
  404fd1:	jne    0x404f7f
  404fd3:	mov    ds:0x291e087b,eax
  404fd8:	push   eax
  404fd9:	mov    ebx,0xaff8854c
  404fde:	lods   al,BYTE PTR ds:[esi]
  404fdf:	or     BYTE PTR [edi-0x6e],dh
  404fe2:	mov    ebp,0xb4f9e7bb
  404fe7:	xor    BYTE PTR [ebx-0x35],al
  404fea:	imul   eax,ebx,0x7ff169fd
  404ff0:	ins    BYTE PTR es:[edi],dx
  404ff1:	mov    ebp,DWORD PTR [edi+0x54]
  404ff4:	repz frstor [ebp+0x4541cbd5]
  404ffb:	push   es
  404ffc:	add    al,0x90
  404ffe:	pop    edi
  404fff:	adc    bh,BYTE PTR [ebp+0x2b8d4a9]
  405005:	xor    DWORD PTR [edx-0x3f],0x43e41f16
  40500c:	add    BYTE PTR [ebp+0x732ff6ac],al
  405012:	dec    ebp
  405013:	leave  
  405014:	mov    ds:0x734d82fd,eax
  405019:	mov    ebp,0x2da54a9f
  40501e:	fs gs iret 
  405021:	adc    ch,dl
  405023:	sbb    al,0x51
  405025:	pop    ss
  405026:	ficomp DWORD PTR [ebx+0x617def0]
  40502c:	outs   dx,BYTE PTR ds:[esi]
  40502d:	arpl   WORD PTR ds:0x956abd3d,di
  405033:	mov    al,0xaa
  405035:	fbld   TBYTE PTR [esi+ebx*4+0x79687438]
  40503c:	aaa    
  40503d:	imul   esi,DWORD PTR [esi-0x33378f9a],0x6c
  405044:	adc    esi,edx
  405046:	push   edi
  405047:	fisub  DWORD PTR [ebp-0x54]
  40504a:	fld    DWORD PTR [esi+0x15]
  40504d:	rcr    DWORD PTR [ebx],1
  40504f:	or     DWORD PTR [eax],esi
  405051:	call   0x6efa:0x12b62287
  405058:	inc    ebp
  405059:	and    eax,0xa4bdd653
  40505e:	rol    BYTE PTR [esp+0x32],1
  405062:	arpl   si,cx
  405064:	popa   
  405065:	hlt    
  405066:	push   ebx
  405067:	imul   ebp,DWORD PTR [ebx],0xee6776fc
  40506d:	nop
  40506e:	jb     0x40508c
  405070:	fmul   QWORD PTR [ebp-0x257064d7]
  405076:	clc    
  405077:	(bad)  
  405079:	shr    BYTE PTR [ecx-0x436cb793],0xd5
  405080:	sub    eax,0xc2f2a24e
  405085:	push   esi
  405086:	enter  0xdcf4,0xa1
  40508a:	out    dx,al
  40508b:	call   0x9f77:0x3e71aa4c
  405092:	nop
  405093:	ret    0xc09b
  405096:	(bad)  
  405097:	loopne 0x4050d8
  405099:	popa   
  40509a:	mov    eax,0x2aad63f9
  40509f:	adc    eax,0x82a4fc0
  4050a4:	jl     0x4050ff
  4050a6:	inc    ebp
  4050a7:	push   ebx
  4050a8:	dec    DWORD PTR [esi+0x4fd645d0]
  4050ae:	test   eax,0xa4d51cdd
  4050b3:	mov    edx,ebx
  4050b5:	mov    DWORD PTR [edi+0x8],ebp
  4050b8:	mov    ebx,0xee6045d4
  4050bd:	gs popf 
  4050bf:	rcl    DWORD PTR gs:[edi+0x50],cl
  4050c3:	cmp    esi,ebx
  4050c5:	clc    
  4050c6:	(bad)  
  4050c7:	cwde   
  4050c8:	or     edx,DWORD PTR [ecx+ebx*4+0x4512c09c]
  4050cf:	psubd  mm5,QWORD PTR [ecx+0x45]
  4050d3:	dec    ecx
  4050d4:	xchg   esp,eax
  4050d5:	mov    al,ds:0x6b3e56e3
  4050da:	and    al,0x39
  4050dc:	jmp    0x405073
  4050de:	jns    0x405129
  4050e0:	rcl    BYTE PTR [edi-0x78],cl
  4050e3:	out    dx,al
  4050e4:	pop    ebp
  4050e5:	js     0x4050c4
  4050e7:	adc    eax,0xc2253005
  4050ec:	sbb    eax,0xdf1847bf
  4050f1:	sbb    BYTE PTR [ebx*8+0x5e11f0d6],al
  4050f8:	xchg   esp,eax
  4050f9:	iret   
  4050fa:	js     0x4050a8
  4050fc:	enter  0xef6d,0x76
  405100:	test   al,0xfa
  405102:	mov    bh,BYTE PTR [esi+0x67]
  405105:	mov    ecx,gs
  405107:	loop   0x4050a1
  405109:	add    eax,0x3b0c53e5
  40510e:	and    cl,BYTE PTR [eax+0x5161490f]
  405114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405115:	mov    bl,0x55
  405117:	cdq    
  405118:	hlt    
  405119:	cmp    esp,DWORD PTR ds:0xf7de9756
  40511f:	sub    eax,0xabef8d83
  405124:	enter  0xd73b,0xc8
  405128:	sbb    BYTE PTR [ebx-0x2d25426b],cl
  40512e:	js     0x4050c8
  405130:	inc    ecx
  405131:	add    ebx,ecx
  405133:	ja     0x4050bd
  405135:	ficom  WORD PTR [ecx+esi*8+0x7badc25d]
  40513c:	mov    ds:0xb991e1e3,eax
  405141:	push   edi
  405142:	or     al,0xfd
  405144:	cwde   
  405145:	fdivr  st,st(2)
  405147:	out    0xd8,eax
  405149:	jae    0x405157
  40514b:	outs   dx,DWORD PTR ds:[esi]
  40514c:	cmc    
  40514d:	test   DWORD PTR [ecx+edi*1+0x415b9637],esi
  405154:	add    al,0x3f
  405156:	pop    ebx
  405157:	pushf  
  405158:	and    al,0xf5
  40515a:	aad    0xba
  40515c:	out    dx,eax
  40515d:	ss xchg edi,eax
  40515f:	add    DWORD PTR [esi],eax
  405161:	xchg   BYTE PTR [edi],dl
  405163:	and    al,bh
  405165:	(bad)  
  405166:	mov    ah,0x4b
  405168:	sahf   
  405169:	sub    al,0xd
  40516b:	in     eax,dx
  40516c:	cli    
  40516d:	stc    
  40516e:	cmp    dh,0x4f
  405171:	fldcw  WORD PTR ds:0x4811b68c
  405177:	rcl    BYTE PTR [ebx],0x2e
  40517a:	mov    al,0xcc
  40517c:	and    al,0xc0
  40517e:	xchg   ebp,eax
  40517f:	xor    dh,BYTE PTR [ebx-0x1ab1e602]
  405185:	es sub al,0xc4
  405188:	jns    0x40516b
  40518a:	pushf  
  40518b:	or     edi,DWORD PTR [esi]
  40518d:	dec    eax
  40518e:	mov    ecx,0xf8ef5b27
  405193:	sub    al,0x61
  405195:	jmp    0x4051ae
  405197:	lea    ebx,[eax+0xf1ac2f8]
  40519d:	push   ebx
  40519e:	test   eax,0x9e317cb2
  4051a3:	xor    al,0xee
  4051a5:	out    0xeb,eax
  4051a7:	push   edx
  4051a8:	ss mov edx,0x3a89d2db
  4051ae:	pop    ecx
  4051af:	or     ch,BYTE PTR [edi-0x28]
  4051b2:	mov    ds:0xe338888b,al
  4051b7:	cli    
  4051b8:	adc    eax,0x19eb7e4b
  4051bd:	adc    ch,al
  4051bf:	test   eax,0xcea30449
  4051c4:	add    DWORD PTR [eax-0x1c],ecx
  4051c7:	push   edx
  4051c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c9:	pusha  
  4051ca:	mov    ah,0x1b
  4051cc:	jbe    0x4051ba
  4051ce:	mov    edx,0xf8224f52
  4051d3:	pusha  
  4051d4:	inc    esp
  4051d5:	xchg   ebp,eax
  4051d6:	jp     0x405178
  4051d8:	and    DWORD PTR [edi-0x8a84e35],ebp
  4051de:	fstp   DWORD PTR [esi+0x1100a769]
  4051e4:	popa   
  4051e5:	add    BYTE PTR [ebp-0x41ec573],dh
  4051eb:	cmp    BYTE PTR [esi-0x676ba4de],bl
  4051f1:	cmc    
  4051f2:	dec    ebx
  4051f3:	mov    ecx,0x7a4348c3
  4051f8:	cmp    al,0xfc
  4051fa:	mov    bh,0xcd
  4051fc:	and    ebx,esp
  4051fe:	mov    eax,ds:0x6d85b8f0
  405203:	adc    eax,0xb44dcc5a
  405208:	clc    
  405209:	sub    cl,ch
  40520b:	mov    dl,0x82
  40520d:	(bad)  
  40520e:	(bad)
  405211:	cmp    al,0xa9
  405213:	leave  
  405214:	rcr    DWORD PTR [ebx-0x58],cl
  405217:	popf   
  405218:	ja     0x4051c6
  40521a:	repnz inc ecx
  40521c:	ja     0x4051ee
  40521e:	add    al,0x73
  405220:	xlat   BYTE PTR ds:[ebx]
  405221:	aam    0x56
  405223:	cmp    ebx,DWORD PTR [ebx+0x3a]
  405226:	inc    edi
  405227:	popf   
  405228:	cmp    BYTE PTR [ebx],cl
  40522a:	dec    eax
  40522b:	scas   eax,DWORD PTR es:[edi]
  40522c:	mov    al,ds:0x605aaac6
  405231:	test   DWORD PTR [edi],esp
  405233:	test   DWORD PTR [eax-0x1995a5da],eax
  405239:	sbb    ah,BYTE PTR [esi]
  40523b:	push   cs
  40523c:	mov    edi,0x31271e1c
  405241:	adc    BYTE PTR [esi-0x4ff9004],bl
  405247:	sub    eax,esp
  405249:	push   ebp
  40524a:	or     BYTE PTR [ebp-0x56],dl
  40524d:	lea    esp,[edi+0x18]
  405250:	cmc    
  405251:	shl    BYTE PTR [eax+0x231b638b],0xf4
  405258:	call   0xdda5:0x752c435d
  40525f:	fimul  WORD PTR [ebp+0x6fbdc71a]
  405265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405266:	pop    edx
  405267:	and    BYTE PTR [ecx+esi*1],bh
  40526a:	ficomp DWORD PTR [ebx-0x5826d0c8]
  405270:	js     0x4052d7
  405272:	push   eax
  405273:	sbb    BYTE PTR [ecx-0x69],dl
  405276:	retf   0x7c12
  405279:	jp     0x405290
  40527b:	aad    0xc6
  40527d:	xor    ch,bl
  40527f:	sub    bl,BYTE PTR [ebp+0x2]
  405282:	pusha  
  405283:	pop    ecx
  405284:	dec    edi
  405285:	jle    0x4052f0
  405287:	dec    esi
  405288:	aad    0xe2
  40528a:	jle    0x40528e
  40528c:	loopne 0x405236
  40528e:	stos   DWORD PTR es:[edi],eax
  40528f:	dec    esi
  405290:	push   ebp
  405291:	push   0x5e
  405293:	mov    dh,0x2a
  405295:	lock jns 0x4052a4
  405298:	rol    DWORD PTR [edx+0x27055bde],0x2e
  40529f:	adc    eax,0x52df5513
  4052a4:	int    0x3
  4052a6:	cwde   
  4052a7:	les    ebp,FWORD PTR [ebp-0x4b020b14]
  4052ad:	scas   al,BYTE PTR es:[edi]
  4052ae:	sub    DWORD PTR [ebp-0x6d],edx
  4052b1:	pusha  
  4052b2:	rcr    eax,cl
  4052b4:	sub    ah,dh
  4052b6:	nop
  4052b7:	(bad)  
  4052b8:	jne    0x40527e
  4052ba:	pop    edi
  4052bb:	les    ecx,FWORD PTR [eax-0x78]
  4052be:	in     eax,dx
  4052bf:	mov    ah,0x4c
  4052c1:	jo     0x4052e7
  4052c3:	xchg   DWORD PTR [edi-0x4d22a5ba],edi
  4052c9:	xor    dl,BYTE PTR [ebp-0x33]
  4052cc:	jo     0x4052a1
  4052ce:	stc    
  4052cf:	stos   DWORD PTR es:[edi],eax
  4052d0:	lea    ecx,[ecx+ecx*4]
  4052d3:	fld    st(2)
  4052d5:	neg    bh
  4052d7:	ret    0x4770
  4052da:	scas   eax,DWORD PTR es:[edi]
  4052db:	dec    esi
  4052dc:	lds    ebp,FWORD PTR [ebx]
  4052de:	xor    ch,BYTE PTR [ebp+0x1930959d]
  4052e4:	pop    ebx
  4052e5:	or     al,0x45
  4052e7:	iret   
  4052e8:	add    al,0x88
  4052ea:	cwde   
  4052eb:	sub    al,0x22
  4052ed:	inc    eax
  4052ee:	nop
  4052ef:	dec    esp
  4052f0:	aaa    
  4052f1:	or     al,0xdd
  4052f3:	mov    bh,0x6b
  4052f5:	addr16 sbb eax,0xc9fb171c
  4052fb:	daa    
  4052fc:	(bad)  
  4052fd:	push   0xd5337bcc
  405302:	(bad)  
  405303:	outs   dx,DWORD PTR ds:[esi]
  405304:	pop    edi
  405305:	mov    eax,0xffacd269
  40530a:	repz (bad) 
  40530c:	xchg   ecx,eax
  40530d:	loope  0x405363
  40530f:	or     al,BYTE PTR [ecx-0x6819c308]
  405315:	cdq    
  405316:	mov    ?,esp
  405318:	cmp    BYTE PTR [edi-0x102cb5fa],0x68
  40531f:	div    ah
  405321:	sar    BYTE PTR [ecx-0x1d],cl
  405324:	pop    esp
  405325:	add    al,0x5f
  405327:	fild   QWORD PTR [edi-0x4b]
  40532a:	mov    ch,0xd3
  40532c:	call   0xd7907853
  405331:	cmp    BYTE PTR [eax+0x4c],0xe0
  405335:	sub    edi,DWORD PTR [eax]
  405337:	push   ecx
  405338:	push   esp
  405339:	dec    edi
  40533a:	jbe    0x405327
  40533c:	dec    ebp
  40533d:	(bad)  
  40533e:	iret   
  40533f:	push   ebx
  405340:	arpl   WORD PTR [ebp+0x4d1fd0ba],di
  405346:	mov    ecx,DWORD PTR [ebp+0x666ee9e1]
  40534c:	(bad)  
  40534d:	repz scas al,BYTE PTR es:[edi]
  40534f:	scas   al,BYTE PTR es:[edi]
  405350:	test   BYTE PTR [edi],dl
  405352:	pop    edi
  405353:	ds xor al,0x6c
  405356:	mov    ds:0x2bd11b17,al
  40535b:	loopne 0x4052f7
  40535d:	repz icebp 
  40535f:	iret   
  405360:	add    al,BYTE PTR [ebp-0x37]
  405363:	scas   al,BYTE PTR es:[edi]
  405364:	jmp    0x1b28df4
  405369:	call   DWORD PTR [edx-0x73]
  40536c:	cmp    eax,0x445a79c2
  405371:	or     al,BYTE PTR [edx]
  405373:	into   
  405374:	lods   eax,DWORD PTR ds:[esi]
  405375:	sahf   
  405376:	imul   edi,DWORD PTR [ebx],0x85de270b
  40537c:	add    DWORD PTR [edi-0x2703da7a],ebx
  405382:	test   DWORD PTR [edx+0x79],edx
  405385:	inc    ecx
  405386:	cwde   
  405387:	sbb    DWORD PTR [ebp+0x6f],ecx
  40538a:	inc    edx
  40538b:	pop    ecx
  40538c:	xor    DWORD PTR [edx+edi*8-0x1e],edi
  405390:	enter  0x2de8,0x67
  405394:	rcr    DWORD PTR [esi],0x3f
  405397:	sahf   
  405398:	inc    edx
  405399:	ror    DWORD PTR [eax],cl
  40539b:	cmp    DWORD PTR [ebp+0x355ed50e],esp
  4053a1:	mov    edx,0x31fcb24e
  4053a6:	cmp    ebp,DWORD PTR [edi+0x6a]
  4053a9:	ds shr cl,cl
  4053ac:	jo     0x405334
  4053ae:	(bad)  
  4053af:	sti    
  4053b0:	fwait
  4053b1:	or     dh,BYTE PTR [ecx]
  4053b3:	xchg   edx,eax
  4053b4:	xor    BYTE PTR [ecx-0x5],dh
  4053b7:	lock int3 
  4053b9:	(bad)
  4053bd:	lea    edi,[edx-0x53c7c535]
  4053c3:	push   esi
  4053c4:	in     eax,dx
  4053c5:	call   DWORD PTR [edx+0x2f690772]
  4053cb:	aas    
  4053cc:	sbb    al,0xeb
  4053ce:	daa    
  4053cf:	or     BYTE PTR [ecx+0x7f803f59],dh
  4053d5:	aam    0x9e
  4053d7:	mov    ds:0x8dcd2e1d,al
  4053dc:	cmc    
  4053dd:	jle    0x4053f0
  4053df:	push   es
  4053e0:	inc    ecx
  4053e1:	retf   
  4053e2:	push   edi
  4053e3:	icebp  
  4053e4:	sub    eax,0x1df8b39f
  4053e9:	adc    al,0x18
  4053eb:	inc    ebp
  4053ec:	call   0x18f8:0x35427b3
  4053f3:	cmp    al,0x26
  4053f5:	mov    BYTE PTR [esi+eiz*2-0x6],ah
  4053f9:	dec    edx
  4053fa:	dec    ecx
  4053fb:	fsub   DWORD PTR [esi+0x5400a5cb]
  405401:	sub    al,0xb1
  405403:	mov    WORD PTR [ebx+0x5a],es
  405406:	ficom  DWORD PTR [eax]
  405408:	mov    dl,0xde
  40540a:	inc    edi
  40540b:	popa   
  40540c:	or     dl,BYTE PTR [eax-0x719c65d8]
  405412:	sbb    eax,edi
  405414:	scas   eax,DWORD PTR es:[edi]
  405415:	cmp    eax,DWORD PTR [edx+ebx*2]
  405418:	stc    
  405419:	or     BYTE PTR [edi+eax*1-0x626bc448],0x44
  405421:	xchg   ebp,eax
  405422:	mov    dh,0x55
  405424:	nop
  405425:	mov    esp,0xe9815308
  40542a:	pusha  
  40542b:	adc    BYTE PTR [ebx+edx*4-0x2b8e95dc],dh
  405432:	loope  0x405419
  405434:	mov    WORD PTR [edx-0x679a3492],fs
  40543a:	or     DWORD PTR [edi-0x1],ebx
  40543d:	psrld  mm3,QWORD PTR [esi]
  405440:	xchg   DWORD PTR [edx-0x36],edx
  405443:	add    ebp,DWORD PTR [ebx+ebp*4-0x5a]
  405447:	sbb    BYTE PTR [ebp-0x65b90f55],0xf0
  40544e:	outs   dx,BYTE PTR ds:[esi]
  40544f:	push   ebx
  405450:	push   esi
  405451:	adc    esi,edi
  405453:	nop
  405454:	jge    0x405487
  405456:	pop    edx
  405457:	dec    esi
  405458:	mov    edi,0xb628db8b
  40545d:	or     dl,bl
  40545f:	into   
  405460:	mov    al,ds:0xb80dafd
  405465:	and    al,0x43
  405467:	lods   eax,DWORD PTR ds:[esi]
  405468:	aad    0xb5
  40546a:	xor    ah,al
  40546c:	sbb    al,0x43
  40546e:	xchg   esp,eax
  40546f:	test   DWORD PTR [ecx+edi*8],ecx
  405472:	jmp    0x9599:0xad739dbf
  405479:	ret    0xadb9
  40547c:	add    esi,DWORD PTR [edx+eax*2+0x71aa984a]
  405483:	pop    es
  405484:	jmp    0x4054b5
  405486:	popf   
  405487:	add    BYTE PTR [ecx+0x8],ch
  40548a:	sub    eax,0x3688123a
  40548f:	dec    ebp
  405490:	dec    esi
  405491:	or     eax,0x73866664
  405496:	outs   dx,DWORD PTR ds:[esi]
  405497:	test   eax,0xffa83626
  40549c:	add    DWORD PTR [esi+edi*1],0x668b80a3
  4054a3:	dec    esi
  4054a4:	mov    ds:0xbc637361,eax
  4054a9:	sbb    ch,BYTE PTR [esi]
  4054ab:	lea    esi,[edi+0x79f13ee4]
  4054b1:	pop    edi
  4054b2:	xor    al,0xd0
  4054b4:	pop    ecx
  4054b5:	mov    dh,BYTE PTR [ebp-0x32c77d70]
  4054bb:	ror    DWORD PTR [edi+0x27f803e6],0x28
  4054c2:	jno    0x40545e
  4054c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054c5:	mov    ch,0x8d
  4054c7:	sar    DWORD PTR [ecx],cl
  4054c9:	sub    DWORD PTR [edx],edi
  4054cb:	sti    
  4054cc:	jmp    0x309072c1
  4054d1:	shr    BYTE PTR [eax+0x59e852b9],0x52
  4054d8:	pop    eax
  4054d9:	mov    eax,ds:0x3584fd9e
  4054de:	call   0x3950:0x8a2ba04b
  4054e5:	jecxz  0x40546e
  4054e7:	mov    eax,0xb3287b5d
  4054ec:	test   BYTE PTR es:[edi+0x2884f933],0xe7
  4054f4:	or     BYTE PTR [eax],dl
  4054f6:	mov    ah,0x4a
  4054f8:	xor    eax,0xca57df60
  4054fd:	inc    edx
  4054fe:	mov    eax,0x5d11f499
  405503:	or     eax,0x2ee9b0ac
  405508:	shl    DWORD PTR [esi+ebp*4+0x658b54c6],cl
  40550f:	mov    DWORD PTR ds:0xf2a205e,esp
  405515:	hlt    
  405516:	mov    esp,0x91c850cc
  40551b:	in     eax,dx
  40551c:	loop   0x40553b
  40551e:	aas    
  40551f:	loope  0x4054a4
  405521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405522:	rep stos BYTE PTR es:[edi],al
  405524:	add    al,0xf6
  405526:	daa    
  405527:	xchg   ebx,eax
  405528:	movzx  esi,BYTE PTR [eax+0x0]
  40552c:	nop
  40552d:	shr    BYTE PTR ds:0x9d618f6f,cl
  405533:	push   cs
  405534:	lods   eax,DWORD PTR ds:[esi]
  405535:	fist   WORD PTR [eax]
  405537:	(bad)  
  405538:	jns    0x405560
  40553a:	clc    
  40553b:	add    BYTE PTR [ebx-0x59],ah
  40553e:	add    eax,0x14166053
  405543:	das    
  405544:	push   edi
  405545:	mov    ds:0x57703d3f,al
  40554a:	scas   eax,DWORD PTR es:[edi]
  40554b:	repnz dec eax
  40554d:	and    esi,edx
  40554f:	addr16 push cs
  405551:	jmp    0xb7cc51b5
  405556:	mov    ah,0x71
  405558:	mov    bh,al
  40555a:	cmp    ch,BYTE PTR [ebp+0x6ab74393]
  405560:	adc    al,0x1a
  405562:	mov    al,ds:0xc5e2d881
  405567:	mov    eax,ds:0x4fa8848b
  40556c:	push   ecx
  40556d:	or     cl,al
  40556f:	pop    es
  405570:	cs xor al,0xe3
  405573:	out    0xef,eax
  405575:	mov    al,BYTE PTR [ebp-0x32]
  405578:	ins    BYTE PTR es:[edi],dx
  405579:	mov    dl,0xf3
  40557b:	(bad)  
  40557d:	lock lods eax,DWORD PTR ds:[esi]
  40557f:	jne    0x4055f2
  405581:	retf   
  405582:	fcom   QWORD PTR [ecx+eiz*1+0x5e20bd32]
  405589:	out    0x8f,eax
  40558b:	xchg   ecx,eax
  40558c:	mov    al,0x8b
  40558e:	mov    fs,WORD PTR [edx]
  405590:	mov    eax,DWORD PTR [edi+eax*8+0x1f]
  405594:	pusha  
  405595:	stc    
  405596:	mov    esp,0x7b8747b8
  40559b:	mov    ebp,0x6f4f2fb4
  4055a0:	fld    QWORD PTR [edx+0x3d7a299c]
  4055a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055a7:	in     al,dx
  4055a8:	jne    0x405556
  4055aa:	push   es
  4055ab:	outs   dx,BYTE PTR ds:[esi]
  4055ac:	aam    0xee
  4055ae:	ds dec edi
  4055b0:	jmp    0xda45:0x10a16741
  4055b7:	arpl   WORD PTR [ebx-0x1f6a3c8a],ax
  4055bd:	jno    0x40562c
  4055bf:	xchg   edx,eax
  4055c0:	mov    eax,0x5bdc6c73
  4055c5:	out    dx,al
  4055c6:	sub    esp,0x57c9f51a
  4055cc:	adc    DWORD PTR [esi-0x7e],esp
  4055cf:	push   0x1c
  4055d1:	mov    gs,WORD PTR [edx+0x3a470ea8]
  4055d7:	sub    DWORD PTR es:[eax-0x5e],ecx
  4055db:	repnz (bad) 
  4055dd:	test   eax,0xad35a820
  4055e2:	pop    esi
  4055e3:	outs   dx,DWORD PTR ds:[esi]
  4055e4:	jecxz  0x405618
  4055e6:	repz inc esi
  4055e8:	into   
  4055e9:	add    DWORD PTR [eax+esi*1],eax
  4055ec:	lods   al,BYTE PTR ds:[esi]
  4055ed:	ret    0x750
  4055f0:	std    
  4055f1:	push   eax
  4055f2:	int3   
  4055f3:	jl     0x4055fd
  4055f5:	mov    esi,0xe0cc8e7c
  4055fa:	call   0xa7df:0xf1e3eac3
  405601:	sub    DWORD PTR [edi+0x79],edi
  405604:	mov    cl,0x10
  405606:	daa    
  405607:	ins    BYTE PTR es:[edi],dx
  405608:	and    BYTE PTR [ecx-0x36],dl
  40560b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40560c:	aas    
  40560d:	das    
  40560e:	or     ebx,DWORD PTR [ebx+0x7649949c]
  405614:	in     al,0x37
  405616:	sbb    al,BYTE PTR [edx+esi*8-0x49]
  40561a:	inc    ebp
  40561b:	es sti 
  40561d:	into   
  40561e:	cmp    eax,0x675c67b3
  405623:	aaa    
  405624:	mov    ch,0xb6
  405626:	ret    0xb638
  405629:	pop    ds
  40562a:	and    eax,0x34ff3830
  40562f:	and    eax,0xa9d0a08e
  405634:	(bad)  
  405635:	push   eax
  405636:	into   
  405637:	cs test al,0xe2
  40563a:	push   esi
  40563b:	out    dx,eax
  40563c:	cli    
  40563d:	add    eax,0x7472aca7
  405642:	rol    DWORD PTR [edx-0x17],cl
  405645:	mov    ch,0x79
  405647:	loope  0x4055e5
  405649:	and    BYTE PTR [edi+0x60],cl
  40564c:	inc    eax
  40564d:	or     esi,DWORD PTR [ebp-0x7239f950]
  405653:	add    bl,al
  405655:	add    al,BYTE PTR [ebx]
  405657:	push   ebx
  405658:	gs aam 0x56
  40565b:	mov    ecx,0x683b1334
  405660:	(bad)  
  405662:	retf   
  405663:	jl     0x4056b5
  405665:	cs pop ebp
  405667:	cmp    bh,BYTE PTR [esi-0x16]
  40566a:	sbb    al,0xe0
  40566c:	stos   DWORD PTR es:[edi],eax
  40566d:	jmp    0x4056bb
  40566f:	enter  0x2254,0x8e
  405673:	mov    BYTE PTR [edi],cl
  405675:	push   esp
  405676:	test   al,0x8d
  405678:	or     ch,0x3b
  40567b:	mov    edi,0x34d7660d
  405680:	(bad)  
  405681:	mov    ecx,0xf420f481
  405686:	push   ebp
  405687:	push   ebp
  405688:	push   esi
  405689:	inc    ebx
  40568a:	sti    
  40568b:	repz out 0x64,eax
  40568e:	adc    ch,BYTE PTR [ebx]
  405690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405691:	ds inc ebp
  405693:	aas    
  405694:	mov    ch,0x46
  405696:	cmp    BYTE PTR [ebx+0x16],bl
  405699:	pop    esp
  40569a:	sub    ah,al
  40569c:	loopne 0x405698
  40569e:	or     eax,edx
  4056a0:	adc    ebp,ebp
  4056a2:	lds    edi,FWORD PTR [eax-0x3b2eb5d6]
  4056a8:	adc    dl,ch
  4056aa:	pop    esp
  4056ab:	rcl    DWORD PTR [ecx+0x3c4776c0],cl
  4056b1:	inc    edi
  4056b2:	les    ebx,FWORD PTR [esi]
  4056b4:	jmp    0x7983:0x6b5381a2
  4056bb:	fcomp  QWORD PTR [edi+0x7e]
  4056be:	mov    al,0x7
  4056c0:	or     ecx,DWORD PTR [eax+0xe]
  4056c3:	xchg   DWORD PTR [edi-0x60],esp
  4056c6:	or     DWORD PTR [ebp+0x19283f51],edi
  4056cc:	js     0x40567a
  4056ce:	retf   
  4056cf:	shl    dl,0x5b
  4056d2:	mul    BYTE PTR [esi-0x1715ef00]
  4056d8:	push   edx
  4056d9:	xor    eax,0x34822d43
  4056de:	push   edi
  4056df:	test   esp,0x67e6674b
  4056e5:	sbb    al,0x40
  4056e7:	or     eax,ebx
  4056e9:	int    0x83
  4056eb:	or     BYTE PTR [eax-0x34],0xa
  4056ef:	out    0xc4,eax
  4056f1:	lea    ecx,[eax-0x320961fc]
  4056f7:	cmp    eax,0x76cf4fb9
  4056fc:	and    esi,ebx
  4056fe:	test   eax,0xdbc48088
  405703:	stc    
  405704:	inc    esi
  405705:	les    ebp,FWORD PTR [edx-0x6f]
  405708:	cmc    
  405709:	mov    cl,dl
  40570b:	in     al,0x1e
  40570d:	xchg   ecx,eax
  40570e:	jge    0x405734
  405710:	dec    edx
  405711:	lods   eax,DWORD PTR ds:[esi]
  405712:	inc    ebx
  405713:	mov    edx,0x27ccb905
  405718:	mov    DWORD PTR [ebx-0x1e],esi
  40571b:	cmp    al,0xc6
  40571d:	fiadd  WORD PTR fs:[edx-0x40]
  405721:	out    0x1e,al
  405723:	xchg   ebp,eax
  405724:	mov    al,0xa6
  405726:	xchg   esi,eax
  405727:	in     eax,dx
  405728:	and    al,0x93
  40572a:	pop    esp
  40572b:	(bad)  
  40572c:	scas   al,BYTE PTR es:[edi]
  40572d:	jbe    0x4056bf
  40572f:	cwde   
  405730:	inc    ecx
  405731:	stc    
  405732:	sbb    ebp,DWORD PTR [edx+0x5cbaed2e]
  405738:	xor    DWORD PTR [eax],ebx
  40573a:	mov    ds:0x9f17a295,al
  40573f:	jg     0x4056f2
  405741:	leave  
  405742:	cmp    ebp,ebx
  405744:	test   BYTE PTR [eax-0x480706f2],cl
  40574a:	sub    eax,0xda626fb3
  40574f:	cli    
  405750:	clc    
  405751:	add    DWORD PTR [esi],ecx
  405753:	dec    esp
  405754:	mov    ebx,eax
  405756:	in     al,0x8a
  405758:	pop    ds
  405759:	daa    
  40575a:	test   eax,0x2695d388
  40575f:	sbb    al,0x6e
  405761:	lods   eax,DWORD PTR ds:[esi]
  405762:	repnz sbb edi,DWORD PTR [esi]
  405765:	dec    ecx
  405766:	inc    edi
  405767:	jbe    0x405718
  405769:	imul   edx,DWORD PTR [esi+0x453cfd91],0xe
  405770:	ror    DWORD PTR [edi],0x2b
  405773:	pop    ebx
  405774:	ret    0x3d9c
  405777:	or     eax,0x53ca491b
  40577c:	jg     0x4057c8
  40577e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40577f:	xchg   BYTE PTR ds:0x272bd4e,dh
  405785:	sub    eax,0x1d0ad991
  40578a:	dec    ecx
  40578b:	adc    BYTE PTR [edx+0x6d408a4b],al
  405791:	loop   0x4057d4
  405793:	push   cs
  405794:	cmp    al,0x77
  405796:	push   eax
  405797:	sbb    eax,0x8b03feef
  40579c:	ss mov ebp,0xd2fcd08e
  4057a2:	mov    WORD PTR [edi+0xdcee706],gs
  4057a8:	ins    DWORD PTR es:[edi],dx
  4057a9:	loop   0x405731
  4057ab:	cmp    DWORD PTR [edx+0x2e],ecx
  4057ae:	cmp    DWORD PTR [edx],eax
  4057b0:	xchg   edi,eax
  4057b1:	aad    0xee
  4057b3:	rcl    DWORD PTR [ecx+ebx*4-0x1cff7be1],1
  4057ba:	imul   esp,eax,0xfd55250f
  4057c0:	cli    
  4057c1:	pop    esp
  4057c2:	outs   dx,BYTE PTR ds:[esi]
  4057c3:	xchg   eax,esp
  4057c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c6:	scas   eax,DWORD PTR es:[edi]
  4057c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057c9:	bound  esp,QWORD PTR [edi]
  4057cb:	das    
  4057cc:	in     eax,dx
  4057cd:	test   BYTE PTR [edx-0x33cda059],dh
  4057d3:	push   esi
  4057d4:	cmp    edi,DWORD PTR [ebx-0x54]
  4057d7:	dec    BYTE PTR [esi+ebx*1]
  4057da:	jnp    0x4057b7
  4057dc:	ds mov ch,0x53
  4057df:	mov    ah,0x51
  4057e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057e2:	sbb    al,BYTE PTR [edi+edi*1]
  4057e5:	sbb    al,0x62
  4057e7:	or     edi,DWORD PTR [ebx+edx*1+0x63]
  4057eb:	es mov ecx,?
  4057ee:	pop    eax
  4057ef:	je     0x405826
  4057f1:	mov    dh,0x7
  4057f3:	mov    ch,0x6f
  4057f5:	and    DWORD PTR [edi-0x21],esi
  4057f8:	pop    es
  4057f9:	dec    eax
  4057fa:	mov    eax,ds:0xd3c720c3
  4057ff:	adc    eax,0x38cbe9ad
  405804:	ds std 
  405806:	leave  
  405807:	inc    ecx
  405808:	or     eax,0x570cfdec
  40580d:	imul   esi,DWORD PTR [edi+0x1589bbde],0x1c
  405814:	outs   dx,BYTE PTR ds:[esi]
  405815:	aad    0x9e
  405817:	fidivr DWORD PTR ds:0xa2059f9b
  40581d:	dec    ebp
  40581e:	jns    0x40586e
  405820:	dec    ecx
  405821:	in     al,dx
  405822:	and    DWORD PTR [edi-0x181c9eda],esi
  405828:	xor    ah,BYTE PTR [edx]
  40582a:	ffreep st(3)
  40582c:	jmp    0x40585e
  40582e:	jns    0x40587e
  405830:	jno    0x405815
  405832:	(bad)  
  405833:	out    dx,eax
  405834:	pop    ds
  405835:	add    cl,dl
  405837:	loope  0x40589c
  405839:	mov    ds:0xc326c488,eax
  40583e:	aaa    
  40583f:	gs fwait
  405841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405842:	sar    DWORD PTR [eax+0x7e],0x4
  405846:	lods   eax,DWORD PTR ds:[esi]
  405847:	(bad)  
  405848:	or     edi,edx
  40584a:	loop   0x405891
  40584c:	or     BYTE PTR [edi+0x64],cl
  40584f:	xor    DWORD PTR [edx],ebp
  405851:	test   eax,0xb32df58d
  405856:	out    dx,eax
  405857:	mov    eax,ds:0x323ca8ff
  40585c:	test   al,0x26
  40585e:	call   0xf8b981bb
  405863:	aas    
  405864:	leave  
  405865:	fst    QWORD PTR [ebx]
  405867:	out    0x8d,eax
  405869:	ins    DWORD PTR es:[edi],dx
  40586a:	sub    DWORD PTR [ecx],ebx
  40586c:	aad    0x45
  40586e:	hlt    
  40586f:	dec    ebp
  405870:	imul   edx,DWORD PTR [edi],0x67d5771c
  405876:	loope  0x40588f
  405878:	dec    eax
  405879:	(bad)  
  40587a:	sbb    eax,0x99aabc28
  40587f:	out    dx,eax
  405880:	push   edx
  405881:	shl    BYTE PTR [edx+0x30],cl
  405884:	mov    dh,BYTE PTR [ecx+0x1f]
  405887:	xor    bl,ah
  405889:	xchg   esi,eax
  40588a:	push   es
  40588b:	mov    al,fs:0x5f66d966
  405891:	scas   al,BYTE PTR es:[edi]
  405892:	sbb    ah,BYTE PTR [esi+0x7a28bd63]
  405898:	inc    edi
  405899:	imul   esi,DWORD PTR [ebp+0x2fe10a1f],0x42
  4058a0:	dec    ecx
  4058a1:	mov    ah,0x84
  4058a3:	and    dh,BYTE PTR [ecx+0xd]
  4058a6:	sahf   
  4058a7:	fdiv   DWORD PTR [ebx+esi*8-0x2610d92f]
  4058ae:	pop    ds
  4058af:	fstp   QWORD PTR [edi]
  4058b1:	mov    eax,0xcc7a23f4
  4058b6:	pop    DWORD PTR ds:0x27adadd1
  4058bc:	and    bh,bl
  4058be:	jp     0x405853
  4058c0:	dec    edx
  4058c1:	jo     0x405924
  4058c3:	mov    dl,0xcf
  4058c5:	add    eax,0xb9fb43b6
  4058ca:	ja     0x405854
  4058cc:	call   0x3cb8:0x8f97f345
  4058d3:	sub    BYTE PTR [edx+0x7d40187f],al
  4058d9:	xchg   ebx,eax
  4058da:	pop    ebp
  4058db:	mov    fs,WORD PTR [ebp-0x6f]
  4058de:	add    bl,bh
  4058e0:	mov    ebp,0xd9a72bc5
  4058e5:	sti    
  4058e6:	pop    ss
  4058e7:	loope  0x405902
  4058e9:	push   0xffffffe3
  4058eb:	ds clc 
  4058ed:	inc    esp
  4058ee:	fcomp  QWORD PTR [edx+ecx*8]
  4058f1:	add    DWORD PTR ds:0x84f9883d,0x984e3d56
  4058fb:	sti    
  4058fc:	(bad)  
  4058fd:	aad    0xb6
  4058ff:	push   0xad408251
  405904:	xchg   esp,eax
  405905:	shr    al,1
  405907:	xchg   ebp,eax
  405908:	pop    es
  405909:	dec    ebx
  40590a:	cmp    DWORD PTR [ebp+0x2e3871b7],ebx
  405910:	jno    0x4058b9
  405912:	mov    ecx,0xf3e9e8cd
  405917:	push   eax
  405918:	sub    dl,BYTE PTR [ebp-0x73]
  40591b:	inc    ebp
  40591c:	(bad)  
  40591d:	jp     0x405900
  40591f:	imul   edi,DWORD PTR [edi+0x64],0xbbf43617
  405926:	icebp  
  405927:	pop    ebx
  405928:	push   ebp
  405929:	mov    ah,0x86
  40592b:	imul   esp,DWORD PTR [edx],0x48380ab5
  405931:	test   DWORD PTR [ebx+0x77],esi
  405934:	scas   eax,DWORD PTR es:[edi]
  405935:	pusha  
  405936:	inc    eax
  405937:	mov    DWORD PTR [ebp+ebp*8-0x8],ebx
  40593b:	out    dx,al
  40593c:	shl    DWORD PTR [esi],1
  40593e:	add    al,0x64
  405940:	std    
  405941:	sub    BYTE PTR [esi],bl
  405943:	pusha  
  405944:	mov    dh,0x9a
  405946:	scas   al,BYTE PTR es:[edi]
  405947:	or     ebp,DWORD PTR [ebp+0x415b14a2]
  40594d:	fsub   st(6),st
  40594f:	call   DWORD PTR [esi+0x661de0b2]
  405955:	sub    DWORD PTR [esi-0x62],ecx
  405958:	ret    
  405959:	shl    BYTE PTR [ecx+0x5],0x6d
  40595d:	fsub   QWORD PTR [ecx]
  40595f:	xchg   esp,eax
  405960:	(bad)  
  405962:	pop    esp
  405963:	in     al,0x78
  405965:	mov    DWORD PTR [edi],ecx
  405967:	fdivr  st,st(3)
  405969:	sbb    ebx,DWORD PTR [esi+0x52]
  40596c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40596d:	sar    BYTE PTR [ebp-0xb],cl
  405970:	push   0x4fa312cb
  405975:	mov    cl,BYTE PTR [edi+0x1e]
  405978:	je     0x405993
  40597a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40597b:	jno    0x405999
  40597d:	pop    ds
  40597e:	jo     0x4059dd
  405980:	push   esi
  405981:	mov    dh,0xad
  405983:	jnp    0x405910
  405985:	hlt    
  405986:	pusha  
  405987:	gs daa 
  405989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40598a:	jg     0x40598a
  40598c:	fstp   TBYTE PTR [edi-0x4f33e22d]
  405992:	arpl   WORD PTR [edx+0x6a1de76a],sp
  405998:	jmp    0x8f212d66
  40599d:	out    0xfc,al
  40599f:	dec    esi
  4059a0:	aas    
  4059a1:	stos   DWORD PTR es:[edi],eax
  4059a2:	or     BYTE PTR [esi-0x4c],dl
  4059a5:	fs aam 0xb2
  4059a8:	stc    
  4059a9:	pop    edi
  4059aa:	and    eax,DWORD PTR [edi]
  4059ac:	sbb    esi,DWORD PTR [ecx+edx*8]
  4059af:	sbb    ch,dh
  4059b1:	sbb    DWORD PTR [esi-0x54],edx
  4059b4:	mov    esi,0x17b0d921
  4059b9:	mov    ah,0x40
  4059bb:	pop    ds
  4059bc:	or     DWORD PTR [esi+edx*8+0x3a309c1a],edi
  4059c3:	js     0x4059ee
  4059c5:	and    al,0x67
  4059c7:	jl     0x58677994
  4059cd:	and    ebx,eax
  4059cf:	cld    
  4059d0:	iret   
  4059d1:	jg     0x4059fd
  4059d3:	cld    
  4059d4:	dec    esi
  4059d5:	inc    ebp
  4059d6:	in     al,dx
  4059d7:	mov    dh,BYTE PTR [eax]
  4059d9:	push   esp
  4059da:	xchg   esp,eax
  4059db:	mov    dh,BYTE PTR ds:0xb5e1022d
  4059e1:	and    bh,BYTE PTR [ebx+0x1f]
  4059e4:	mov    eax,0x8464e245
  4059e9:	repz jmp 0x970d:0xcb0de474
  4059f1:	sbb    DWORD PTR [ebx+0x37],eax
  4059f4:	cdq    
  4059f5:	mov    eax,0x267c9e29
  4059fa:	and    edi,esp
  4059fc:	(bad)  
  4059fd:	fsubr  QWORD PTR [ebx+esi*8]
  405a00:	cs jge 0x4059ef
  405a03:	leave  
  405a04:	and    bh,BYTE PTR cs:[ebp-0x51]
  405a08:	pop    edi
  405a09:	jae    0x4059fd
  405a0b:	popa   
  405a0c:	into   
  405a0d:	sub    BYTE PTR [edi],cl
  405a0f:	or     al,0xfc
  405a11:	sub    esi,DWORD PTR [eax]
  405a13:	jecxz  0x4059e6
  405a15:	push   ebp
  405a16:	(bad)  
  405a17:	dec    edi
  405a18:	dec    ebx
  405a19:	sub    eax,0x8cefc521
  405a1e:	jno    0x4059bf
  405a20:	xor    bh,BYTE PTR [ebp+eax*4+0x615fdf38]
  405a27:	sti    
  405a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a29:	mov    WORD PTR [ebx+0x46],cs
  405a2c:	add    DWORD PTR [esi+edi*2-0x31],esi
  405a30:	and    esp,edi
  405a32:	test   eax,0x78b858c8
  405a37:	outs   dx,BYTE PTR ds:[esi]
  405a38:	imul   ebp,DWORD PTR [esi],0x6bbd1500
  405a3e:	scas   eax,DWORD PTR es:[edi]
  405a3f:	add    DWORD PTR [ebx],edi
  405a41:	fisub  WORD PTR [esi]
  405a43:	dec    esp
  405a44:	ds retf 
  405a46:	inc    ebp
  405a47:	cwde   
  405a48:	cmp    DWORD PTR [ecx-0x13],ebx
  405a4b:	pop    es
  405a4c:	and    BYTE PTR [ebp-0x54],cl
  405a4f:	fadd   QWORD PTR [eax]
  405a51:	xchg   esi,eax
  405a52:	inc    ebp
  405a53:	adc    bl,BYTE PTR [edi-0x59]
  405a56:	inc    ebx
  405a57:	and    cl,BYTE PTR [eax+ebx*8+0x48e6b60b]
  405a5e:	pop    ecx
  405a5f:	xor    BYTE PTR [ebx],bh
  405a61:	or     eax,0x208fdfb
  405a66:	mov    ah,0xc1
  405a68:	mov    ss,WORD PTR [ebx+0x65a13b1b]
  405a6e:	(bad)  
  405a6f:	adc    cl,BYTE PTR [edx]
  405a71:	xchg   esi,eax
  405a72:	ret    0x80be
  405a75:	cmc    
  405a76:	and    eax,DWORD PTR [ebx-0x17738133]
  405a7c:	dec    DWORD PTR [esp+esi*2-0x54]
  405a80:	push   ebx
  405a81:	(bad)  
  405a82:	bound  edx,QWORD PTR [ecx]
  405a84:	sub    DWORD PTR [ebx-0x58],ebx
  405a87:	js     0x405a90
  405a89:	dec    esi
  405a8a:	stos   DWORD PTR es:[edi],eax
  405a8b:	dec    esi
  405a8c:	add    DWORD PTR [edx+0x5b],esi
  405a8f:	pop    ebp
  405a90:	out    dx,eax
  405a91:	mov    bl,BYTE PTR [edx+0x6d]
  405a94:	rcl    DWORD PTR [ecx+ebx*8-0x575ba647],cl
  405a9b:	lea    ebx,[ebp-0x358aa66c]
  405aa1:	(bad)  
  405aa2:	mov    eax,0xe83cada3
  405aa7:	outs   dx,BYTE PTR ds:[esi]
  405aa8:	mul    BYTE PTR [ebx-0x3693ec25]
  405aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aaf:	inc    ebp
  405ab0:	fbld   TBYTE PTR [ecx+0x3ec9a815]
  405ab6:	(bad)  
  405ab8:	aam    0x39
  405aba:	xor    al,0xa3
  405abc:	lods   al,BYTE PTR ds:[esi]
  405abd:	pop    ebx
  405abe:	fs loope 0x405a50
  405ac1:	repnz dec ebx
  405ac3:	repz jb 0x405ae9
  405ac6:	shr    BYTE PTR [ebx],0x86
  405ac9:	out    dx,al
  405aca:	jo     0x405ac7
  405acc:	xor    eax,0x18990293
  405ad1:	bound  edi,QWORD PTR [ecx-0x25]
  405ad4:	sbb    al,0x4e
  405ad6:	mov    edi,0xe4e004eb
  405adb:	sub    al,0x3f
  405add:	scas   eax,DWORD PTR es:[edi]
  405ade:	dec    edi
  405adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ae0:	pop    ecx
  405ae1:	pop    es
  405ae2:	jns    0x405b57
  405ae4:	xchg   ecx,ecx
  405ae6:	mov    edx,0x723d9fd9
  405aeb:	jl     0x405a9b
  405aed:	shr    ebx,1
  405aef:	pop    edi
  405af0:	and    DWORD PTR [edx+0x15],ebx
  405af3:	pop    ss
  405af4:	imul   ecx,DWORD PTR es:[ecx+0x1b0a2d07],0xffffff87
  405afc:	jge    0x405b1a
  405afe:	mov    ebx,0xaaab2641
  405b03:	scas   eax,DWORD PTR es:[edi]
  405b04:	mov    ch,0x19
  405b06:	call   0x6737a4b
  405b0b:	push   esi
  405b0c:	and    esp,edx
  405b0e:	mov    ebx,0xb96595b1
  405b13:	into   
  405b14:	jae    0x405b58
  405b16:	sahf   
  405b17:	inc    ebp
  405b18:	mov    dl,0x42
  405b1a:	pop    es
  405b1b:	or     ch,cl
  405b1d:	jnp    0x405ac4
  405b1f:	ja     0x405aad
  405b21:	lea    esp,[eax+0x38]
  405b24:	std    
  405b25:	inc    ebp
  405b26:	out    dx,al
  405b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b28:	scas   eax,DWORD PTR es:[edi]
  405b29:	pop    esi
  405b2a:	fmul   DWORD PTR [eax]
  405b2c:	int3   
  405b2d:	fisttp WORD PTR [edi+0x5ad7ca9c]
  405b33:	sar    edi,1
  405b35:	lods   eax,DWORD PTR ds:[esi]
  405b36:	ja     0x405b5c
  405b38:	sub    eax,0x40f780b7
  405b3d:	aaa    
  405b3e:	mov    BYTE PTR [eax-0x6f5f4fd],0x90
  405b45:	neg    DWORD PTR [edi+ebx*1+0x28ab8e6a]
  405b4c:	mov    edi,0xfa3ca1bf
  405b51:	fbstp  TBYTE PTR [eax+0x32]
  405b54:	mov    al,0xb6
  405b56:	adc    DWORD PTR [edx-0x1],ecx
  405b59:	xor    edi,DWORD PTR [edx-0x7f]
  405b5c:	enter  0x72a5,0x11
  405b60:	out    0x3e,eax
  405b62:	loop   0x405baa
  405b64:	ss jnp 0x405ba5
  405b67:	iret   
  405b68:	fcomp  QWORD PTR [ebp+0x2d1a8999]
  405b6e:	jo     0x405bb3
  405b70:	add    eax,0xcc1d7ba2
  405b75:	pop    ebx
  405b76:	dec    edx
  405b77:	mov    ah,0x7b
  405b79:	push   esi
  405b7a:	hlt    
  405b7b:	mov    bh,0x75
  405b7d:	cdq    
  405b7e:	adc    eax,0x469c4f86
  405b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b84:	ret    
  405b85:	inc    ecx
  405b86:	push   ebx
  405b87:	loopne 0x405bd7
  405b89:	in     al,dx
  405b8a:	mov    edi,0xe8b90aec
  405b8f:	push   ecx
  405b90:	test   al,0xbe
  405b92:	ins    DWORD PTR es:[edi],dx
  405b93:	aam    0x54
  405b95:	sub    al,0x48
  405b97:	sbb    edi,ebx
  405b99:	ins    DWORD PTR es:[edi],dx
  405b9a:	inc    esp
  405b9b:	jp     0x405c1c
  405b9d:	in     al,dx
  405b9e:	ss daa 
  405ba0:	ins    DWORD PTR es:[edi],dx
  405ba1:	jp     0x405b30
  405ba3:	(bad)  
  405ba4:	out    0xcf,eax
  405ba6:	or     al,0x10
  405ba8:	push   ss
  405ba9:	adc    eax,edx
  405bab:	mov    eax,ds:0xe4ee3944
  405bb0:	shl    BYTE PTR [edx+0x7e],0xa9
  405bb4:	and    bl,BYTE PTR ds:0x3bdee3c5
  405bba:	popa   
  405bbb:	sub    bl,al
  405bbd:	cdq    
  405bbe:	adc    ecx,edi
  405bc0:	(bad)  
  405bc1:	push   DWORD PTR [esi+esi*1]
  405bc4:	daa    
  405bc5:	inc    ebp
  405bc6:	mov    ecx,DWORD PTR [edi]
  405bc8:	jb     0x405bf2
  405bca:	jns    0x405c42
  405bcc:	mov    edx,0x5595d6af
  405bd1:	div    BYTE PTR [edi]
  405bd3:	(bad)  
  405bd6:	jg     0x405bb2
  405bd8:	fisttp DWORD PTR ds:0xca3dc2c2
  405bde:	jb     0x405c16
  405be0:	xchg   DWORD PTR [ebx],edx
  405be2:	sub    dl,ch
  405be4:	and    eax,0x78c3709a
  405be9:	shl    DWORD PTR [ecx+0x51816d5a],1
  405bef:	mov    esp,0x1eec730f
  405bf4:	lock push edi
  405bf6:	push   edi
  405bf7:	ja     0x405b98
  405bf9:	into   
  405bfa:	jnp    0x405c07
  405bfc:	cs pop esp
  405bfe:	cmp    bl,BYTE PTR [eax+0x51]
  405c01:	jbe    0x405be8
  405c03:	les    ecx,FWORD PTR [ecx+0x46]
  405c06:	fisub  DWORD PTR [edx-0x1f2b93c3]
  405c0c:	and    al,0x92
  405c0e:	add    BYTE PTR [eax+0x71],dh
  405c11:	mov    eax,0x6de6a27f
  405c16:	lds    edx,FWORD PTR [edi-0x16]
  405c19:	pop    ecx
  405c1a:	mov    edx,0x1b511576
  405c1f:	out    0xfd,eax
  405c21:	sahf   
  405c22:	pusha  
  405c23:	out    0x38,eax
  405c25:	into   
  405c26:	aam    0xc9
  405c28:	dec    esi
  405c29:	lea    edx,ds:0x5291144c
  405c2f:	mov    ebx,0x5e47ee95
  405c34:	mov    dl,dl
  405c36:	jno    0x405c21
  405c38:	in     al,0x27
  405c3a:	sbb    BYTE PTR [edx],dh
  405c3c:	xchg   ecx,eax
  405c3d:	jns    0x405c9a
  405c3f:	sub    ebp,ebp
  405c41:	sub    al,0xec
  405c43:	mov    fs,WORD PTR [ebp+0x53a3d515]
  405c49:	mov    esp,0xf404ac12
  405c4e:	fld    st(5)
  405c50:	loop   0x405c84
  405c52:	mov    eax,ds:0x65c026f5
  405c57:	inc    ebp
  405c58:	inc    edx
  405c59:	jne    0x405bdd
  405c5b:	xchg   edx,eax
  405c5c:	cwde   
  405c5d:	pop    edx
  405c5e:	jae    0x405cc5
  405c60:	fstp   TBYTE PTR [eax+0x72d11806]
  405c66:	mov    edx,DWORD PTR [esi+0x60a3bc09]
  405c6c:	jle    0x405cd8
  405c6e:	mov    bl,0xef
  405c70:	fcmovnu st,st(4)
  405c72:	div    DWORD PTR [ebp-0x4dbbd537]
  405c78:	(bad)  
  405c79:	sbb    edi,esp
  405c7b:	sbb    ecx,ebp
  405c7d:	xor    BYTE PTR cs:[ecx+eax*8-0x4611c777],al
  405c85:	rcr    ecx,0x19
  405c88:	sahf   
  405c89:	mov    cl,0x7c
  405c8b:	mov    bl,0x40
  405c8d:	stos   BYTE PTR es:[edi],al
  405c8e:	cmp    DWORD PTR [ecx-0x7643ceaf],ebx
  405c94:	xchg   BYTE PTR [ebx+0x6bd4f92a],dh
  405c9a:	fld    QWORD PTR [esi-0x13]
  405c9d:	mov    eax,0x420f218b
  405ca2:	cwde   
  405ca3:	mov    edx,0x6be3400f
  405ca8:	and    eax,DWORD PTR [esi+0x28]
  405cab:	outs   dx,BYTE PTR ds:[esi]
  405cac:	inc    ebx
  405cad:	push   es
  405cae:	mov    ebp,0xb749224d
  405cb3:	int    0xe6
  405cb5:	xchg   al,bl
  405cb7:	es mov cl,0x9e
  405cba:	dec    esp
  405cbb:	pop    ds
  405cbc:	push   eax
  405cbd:	shl    DWORD PTR [edi+0x6],cl
  405cc0:	pop    edi
  405cc1:	pop    ss
  405cc2:	outs   dx,DWORD PTR ds:[esi]
  405cc3:	gs push esp
  405cc5:	inc    edx
  405cc6:	mov    BYTE PTR [eax-0x3656520],ah
  405ccc:	enter  0x6c05,0x41
  405cd0:	je     0x405c87
  405cd2:	and    BYTE PTR [edx],0x1a
  405cd5:	mov    ebx,0x7fdb8d83
  405cda:	test   al,0x87
  405cdc:	dec    ebx
  405cdd:	jmp    0xd7c5:0xf8bb0fd0
  405ce4:	sbb    ch,BYTE PTR [edx-0x44]
  405ce7:	push   eax
  405ce8:	imul   eax,DWORD PTR [edx],0xffffff8d
  405ceb:	nop
  405cec:	dec    edx
  405ced:	xchg   edx,eax
  405cee:	cmp    BYTE PTR [ebx+0x19f8a3a0],0x87
  405cf5:	ds int3 
  405cf7:	jl     0x405d0b
  405cf9:	sahf   
  405cfa:	sub    eax,DWORD PTR [ecx+0x51]
  405cfd:	dec    edx
  405cfe:	nop
  405cff:	ret    0xbf95
  405d02:	retf   0x6b53
  405d05:	les    edx,FWORD PTR [ecx+0x5ade693]
  405d0b:	daa    
  405d0c:	inc    ecx
  405d0d:	push   ss
  405d0e:	jb     0x405d37
  405d10:	mov    edi,0xf2093aee
  405d15:	test   BYTE PTR [edx-0x2d],cl
  405d18:	lds    ecx,FWORD PTR [edi+0x68]
  405d1b:	leave  
  405d1c:	xchg   esp,eax
  405d1d:	dec    edi
  405d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d1f:	cwde   
  405d20:	repnz mov eax,0xd8e6ee0c
  405d26:	je     0x405d18
  405d28:	mov    ah,0x4f
  405d2a:	das    
  405d2b:	inc    ebp
  405d2c:	cmp    bh,BYTE PTR [ebp-0x6a4411b7]
  405d32:	xchg   ebp,eax
  405d33:	mov    ebx,0x1c952e0e
  405d38:	call   0x9937f357
  405d3d:	mov    dh,0x70
  405d3f:	adc    eax,0xaf6559fc
  405d44:	mov    ds:0xfc000739,eax
  405d49:	push   0xac33de94
  405d4e:	div    DWORD PTR [edx+0x49]
  405d51:	sbb    bh,al
  405d53:	push   ds
  405d54:	ins    BYTE PTR es:[edi],dx
  405d55:	inc    bx
  405d57:	xchg   ebx,eax
  405d58:	call   0x7e8ba415
  405d5d:	cmp    BYTE PTR [edx],ch
  405d5f:	push   esi
  405d60:	push   edi
  405d61:	mov    esi,0x845c9f51
  405d66:	cmp    ebp,DWORD PTR [esp+ebx*8]
  405d69:	iret   
  405d6a:	add    bh,bl
  405d6c:	pop    esi
  405d6d:	test   bl,al
  405d6f:	in     eax,dx
  405d70:	test   DWORD PTR [esi],edi
  405d72:	fwait
  405d73:	inc    DWORD PTR [ebx+esi*1-0x109aadbd]
  405d7a:	or     eax,0x22cd2225
  405d7f:	out    dx,eax
  405d80:	outs   dx,DWORD PTR ds:[esi]
  405d81:	and    esp,esi
  405d83:	outs   dx,BYTE PTR ds:[esi]
  405d84:	sub    eax,0xaf139e47
  405d89:	pop    ebx
  405d8a:	mov    bl,0xea
  405d8c:	xchg   ecx,eax
  405d8d:	pusha  
  405d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d8f:	push   cs
  405d90:	jne    0x405dfa
  405d92:	in     al,0x13
  405d94:	inc    esi
  405d95:	mov    esi,0x527072ac
  405d9a:	nop
  405d9b:	out    0xf0,eax
  405d9d:	lds    esi,FWORD PTR [esp+edi*1+0x65]
  405da1:	add    BYTE PTR [ecx-0x7a],dl
  405da4:	dec    ebx
  405da5:	imul   ebx,DWORD PTR [eax+0x4c],0x77f17578
  405dac:	adc    edi,DWORD PTR es:[esi-0x58dd3ec9]
  405db3:	sbb    eax,0x3052797a
  405db8:	(bad)  
  405db9:	in     eax,0x40
  405dbb:	sbb    edi,DWORD PTR [edi+0x13]
  405dbe:	leave  
  405dbf:	xchg   esi,eax
  405dc0:	or     eax,0x62690404
  405dc5:	sar    BYTE PTR [eiz*8+0x4fc67b37],0xdb
  405dcd:	in     al,0x61
  405dcf:	ins    BYTE PTR es:[edi],dx
  405dd0:	jmp    0xc238cb50
  405dd5:	dec    BYTE PTR [eax]
  405dd7:	push   0xe29dcea7
  405ddc:	mov    ebx,0x8b236040
  405de1:	imul   ecx,esp,0x53
  405de4:	sbb    eax,DWORD PTR ds:0x61cfc935
  405dea:	(bad)  
  405deb:	imul   esi,DWORD PTR [eax+0x70],0x2c
  405def:	xor    BYTE PTR [edx-0x6],bl
  405df2:	dec    edi
  405df3:	out    dx,ax
  405df5:	cmc    
  405df6:	jg     0x405e3a
  405df8:	enter  0x4dd6,0x88
  405dfc:	xor    al,0xbc
  405dfe:	pusha  
  405dff:	xor    ch,0x34
  405e02:	pop    ds
  405e03:	inc    edx
  405e04:	mov    cl,0x9
  405e06:	mov    esp,0xb87aaeab
  405e0b:	push   edi
  405e0c:	xchg   DWORD PTR [edi-0x42],ebp
  405e0f:	mov    ebp,0xea56464d
  405e14:	outs   dx,DWORD PTR ds:[esi]
  405e15:	mov    bh,0xfe
  405e17:	jns    0x405def
  405e19:	das    
  405e1a:	arpl   WORD PTR [ecx+eax*1],dx
  405e1d:	inc    esp
  405e1e:	add    DWORD PTR [eax-0x1c],edi
  405e21:	test   al,0xd0
  405e23:	test   al,ah
  405e25:	mov    ch,0x0
  405e27:	aaa    
  405e28:	inc    DWORD PTR [esi+eax*8+0xb]
  405e2c:	inc    ebx
  405e2d:	lahf   
  405e2e:	fnsave [esi+0xacd9d5a]
  405e34:	xor    dl,BYTE PTR [esi+ebp*2-0xd]
  405e38:	cmp    edx,DWORD PTR [edi+0x4c6b41d9]
  405e3e:	add    al,0x3f
  405e40:	xchg   ecx,eax
  405e41:	cmp    DWORD PTR [edi],ebx
  405e43:	mov    ebx,0x511415dc
  405e48:	pop    ebx
  405e49:	cwde   
  405e4a:	inc    edi
  405e4b:	pop    esp
  405e4c:	jne    0x405ea1
  405e4e:	jne    0x405e7c
  405e50:	cmc    
  405e51:	out    dx,eax
  405e52:	pusha  
  405e53:	mov    ch,0x6b
  405e55:	in     al,0xe0
  405e57:	adc    edi,esp
  405e59:	lods   al,BYTE PTR ds:[esi]
  405e5a:	into   
  405e5b:	cwde   
  405e5c:	data16 hlt 
  405e5e:	sahf   
  405e5f:	xor    BYTE PTR [eax+0x2d51471c],bh
  405e65:	or     al,BYTE PTR [ebx+edx*4]
  405e68:	mov    bh,dh
  405e6a:	ds cwde 
  405e6c:	imul   eax,DWORD PTR [ebx+ecx*8-0x43],0x4a
  405e71:	or     BYTE PTR [eax-0x407c505a],dl
  405e77:	jmp    DWORD PTR [ebx]
  405e79:	push   ebx
  405e7a:	inc    eax
  405e7b:	and    eax,0x6d52dbd2
  405e80:	retf   0xf89f
  405e83:	int    0x19
  405e85:	int    0xa4
  405e87:	loopne 0x405edd
  405e89:	cmp    al,ch
  405e8b:	push   es
  405e8c:	int3   
  405e8d:	and    BYTE PTR [eax+0x50],0x46
  405e91:	mov    ch,0xa0
  405e93:	mov    dh,0x3d
  405e95:	cmp    DWORD PTR [ecx+edx*4],eax
  405e98:	pop    ebp
  405e99:	add    DWORD PTR [ecx-0x3e17ece7],esi
  405e9f:	push   esi
  405ea0:	mov    WORD PTR [ebp+0x1],ss
  405ea3:	fs jnp 0x405eea
  405ea6:	sub    BYTE PTR [eax-0x53c0f847],bl
  405eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ead:	mov    eax,ds:0x8ef979bd
  405eb2:	test   DWORD PTR [ebx],0x1dba0662
  405eb8:	not    bh
  405eba:	nop
  405ebb:	retf   0xd059
  405ebe:	xlat   BYTE PTR ds:[ebx]
  405ebf:	outs   dx,DWORD PTR ds:[esi]
  405ec0:	mov    dl,0x91
  405ec2:	(bad)  
  405ec3:	or     eax,0x4e8d44bb
  405ec8:	cmp    BYTE PTR [edi+ebx*1],bl
  405ecb:	or     eax,0xd93937ea
  405ed0:	(bad)  
  405ed1:	or     DWORD PTR [ebp-0x32],ebx
  405ed4:	cdq    
  405ed5:	out    0x8e,al
  405ed7:	mov    bl,0xf8
  405ed9:	xchg   esi,eax
  405eda:	bound  edx,QWORD PTR [ebx]
  405edc:	lds    edi,FWORD PTR [ebp-0x746a3ee0]
  405ee2:	adc    esp,DWORD PTR [ebp+ebp*4-0x188dd963]
  405ee9:	scas   eax,DWORD PTR es:[edi]
  405eea:	fidivr DWORD PTR [edx-0x183e617a]
  405ef0:	adc    al,0x5
  405ef2:	xchg   ebp,eax
  405ef3:	retf   0xb23
  405ef6:	cdq    
  405ef7:	into   
  405ef8:	int3   
  405ef9:	mov    fs,WORD PTR [eax-0x4c6ea178]
  405eff:	mov    esi,0x5936ab20
  405f04:	xor    BYTE PTR [edx],bh
  405f06:	mov    bh,0x69
  405f08:	push   ebp
  405f09:	pop    edi
  405f0a:	rcl    DWORD PTR [eax],1
  405f0c:	out    0x83,al
  405f0e:	enter  0xf32b,0x75
  405f12:	adc    BYTE PTR [ecx+0x7f],dl
  405f15:	sub    ebp,DWORD PTR [eax+0x78f621dd]
  405f1b:	rol    DWORD PTR [eax],1
  405f1d:	pushf  
  405f1e:	pusha  
  405f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f20:	xchg   edx,eax
  405f21:	in     al,dx
  405f22:	(bad)  
  405f23:	pop    eax
  405f24:	jo     0x405f6d
  405f26:	ja     0x405f61
  405f28:	lahf   
  405f29:	pop    edi
  405f2a:	push   edx
  405f2b:	or     DWORD PTR [edx],0xbd7e4c99
  405f31:	(bad)  ds:0x3eed049a
  405f37:	outs   dx,DWORD PTR ds:[esi]
  405f38:	shr    bh,0xdd
  405f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f3c:	xchg   DWORD PTR [ecx+0x6ee18169],ebx
  405f42:	or     BYTE PTR [ebx+0x42fe3f69],dl
  405f48:	mov    ah,BYTE PTR [ecx]
  405f4a:	arpl   WORD PTR [esi],si
  405f4c:	sbb    BYTE PTR [edi+0x1e110e],dl
  405f52:	mov    al,0x32
  405f54:	push   ecx
  405f55:	(bad)  
  405f56:	mov    al,0xd1
  405f58:	and    DWORD PTR [edi],ecx
  405f5a:	sbb    edx,DWORD PTR [bp+di-0x14f1]
  405f5f:	push   eax
  405f60:	mov    bh,0xd5
  405f62:	retf   0xfcb9
  405f65:	xchg   ecx,eax
  405f66:	xchg   edx,eax
  405f67:	xor    edx,0xffffff8e
  405f6a:	xchg   ebx,eax
  405f6b:	arpl   dx,cx
  405f6d:	lds    ecx,FWORD PTR [eax]
  405f6f:	cmp    DWORD PTR [eax+ebx*2-0x351fcc41],ebx
  405f76:	fsubp  st(2),st
  405f78:	cmp    DWORD PTR [esi+0x55],ecx
  405f7b:	adc    bl,BYTE PTR [eax-0x67]
  405f7e:	dec    esp
  405f7f:	jmp    0xb1df8df3
  405f84:	pop    ebx
  405f85:	icebp  
  405f86:	fistp  DWORD PTR [ecx-0x4810930a]
  405f8c:	fidiv  WORD PTR [eax-0x1d]
  405f8f:	push   eax
  405f90:	mov    WORD PTR [ecx],ss
  405f92:	xor    DWORD PTR [esi],ebp
  405f94:	(bad)  
  405f96:	cld    
  405f97:	aaa    
  405f98:	cmp    bh,BYTE PTR [ebx+0x36]
  405f9b:	neg    BYTE PTR [eax+0x43]
  405f9e:	repnz sbb ah,BYTE PTR es:[eax+0x6e1ce4c9]
  405fa6:	fdivr  st(4),st
  405fa8:	xchg   DWORD PTR [edx+0x3150990],eax
  405fae:	and    edi,edi
  405fb0:	xor    eax,0xcaca0d93
  405fb5:	aaa    
  405fb6:	xchg   edi,eax
  405fb7:	ins    BYTE PTR es:[edi],dx
  405fb8:	cld    
  405fb9:	sub    edi,DWORD PTR [eax+0x41d49cab]
  405fbf:	sub    al,0x4f
  405fc1:	inc    ebp
  405fc2:	add    ax,0x91d4
  405fc6:	(bad)  
  405fc7:	cmp    DWORD PTR [ecx-0x71],esi
  405fca:	pop    esi
  405fcb:	inc    eax
  405fcc:	sar    DWORD PTR [ecx],cl
  405fce:	mov    ds:0xe68cd533,al
  405fd3:	and    cl,BYTE PTR [ecx]
  405fd5:	inc    esi
  405fd6:	and    bl,BYTE PTR [ebp+0x61]
  405fd9:	inc    edx
  405fda:	rcl    BYTE PTR [edx],1
  405fdc:	mov    esi,0xfa6390d0
  405fe1:	pop    ds
  405fe2:	or     ebp,edi
  405fe4:	xchg   esp,eax
  405fe6:	in     al,0xd5
  405fe8:	xchg   DWORD PTR [edx],edx
  405fea:	inc    edx
  405feb:	or     ebp,ecx
  405fed:	fisttp DWORD PTR [eax+0x68fa1399]
  405ff3:	xor    DWORD PTR [ebp-0x2acbfc8c],ebp
  405ff9:	int    0x6d
  405ffb:	in     al,dx
  405ffc:	ds inc ebp
  405ffe:	mov    ecx,0xb8b6fed3
  406003:	sub    al,0x5e
  406005:	test   DWORD PTR [ebp+0x1200c110],esi
  40600b:	mov    WORD PTR [esi+0x5f],?
  40600e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40600f:	clc    
  406010:	prefetcht2 BYTE PTR [eax+0x7]
  406014:	and    DWORD PTR [eax-0x33],esi
  406017:	xchg   esp,eax
  406018:	add    DWORD PTR [esi+0x30],ecx
  40601b:	or     esi,DWORD PTR [edx]
  40601d:	pop    ds
  40601e:	enter  0x50d1,0x5c
  406022:	fmul   st,st(5)
  406024:	push   edx
  406025:	or     eax,0x36027e84
  40602a:	push   ebx
  40602b:	pushf  
  40602c:	mov    bl,0xfc
  40602e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40602f:	imul   esi,DWORD PTR [ebx+0x69],0xffffff9f
  406033:	loope  0x406061
  406035:	mov    BYTE PTR fs:[ebp-0x2f],0x9e
  40603a:	xor    BYTE PTR [ecx],dl
  40603c:	or     esp,ebp
  40603e:	add    eax,DWORD PTR [ebp-0x420ad6b3]
  406044:	push   ss
  406045:	mov    ds:0xee6a260a,eax
  40604a:	mov    ds:0xee73d635,al
  40604f:	mov    edx,0x620c1005
  406054:	dec    ebx
  406055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406056:	outs   dx,DWORD PTR ds:[esi]
  406057:	add    DWORD PTR [eax+0x7f551741],ebp
  40605d:	fdiv   DWORD PTR [ecx+0x3]
  406060:	push   cs
  406061:	out    dx,al
  406062:	xor    bl,BYTE PTR [edi]
  406064:	add    eax,0x76fde1ae
  406069:	sub    DWORD PTR [ebx],0x5abf24c4
  40606f:	jne    0x406077
  406071:	adc    bl,BYTE PTR [ecx+0x16a66497]
  406077:	ret    0x2829
  40607a:	and    eax,DWORD PTR [ebx+ebp*1+0x44f071fa]
  406081:	cmc    
  406082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406083:	mov    DWORD PTR [edi-0x3e72825c],ebp
  406089:	or     dh,BYTE PTR [edx+edx*4-0x1fca3bc1]
  406090:	hlt    
  406091:	adc    al,0x68
  406093:	nop
  406094:	add    DWORD PTR [ecx],ebx
  406096:	jecxz  0x406090
  406098:	dec    eax
  406099:	mov    DWORD PTR [esi-0x6072fbf5],esp
  40609f:	pop    ss
  4060a0:	in     eax,0xbe
  4060a2:	xor    bx,WORD PTR [edi+0x3]
  4060a6:	rcl    BYTE PTR [ebx-0x35b088b],0x42
  4060ad:	inc    ebp
  4060ae:	cdq    
  4060af:	jle    0x40606f
  4060b1:	(bad)  
  4060b2:	enter  0x8117,0xc2
  4060b6:	test   al,0xa0
  4060b8:	les    ebp,FWORD PTR [esi+0x42]
  4060bb:	stc    
  4060bc:	push   cs
  4060bd:	push   es
  4060be:	cwde   
  4060bf:	xor    ebp,DWORD PTR [edi-0x7cba707a]
  4060c5:	scas   al,BYTE PTR es:[edi]
  4060c6:	daa    
  4060c7:	jp     0x406093
  4060c9:	inc    esp
  4060ca:	retf   0x8399
  4060cd:	and    eax,0x33e756bf
  4060d2:	out    0x56,al
  4060d4:	push   0x38
  4060d6:	cmp    cl,BYTE PTR [ebp+ebp*4+0x65]
  4060da:	adc    al,0x55
  4060dc:	ins    DWORD PTR es:[edi],dx
  4060dd:	cmp    ebp,DWORD PTR [ebx+0x2c087ccd]
  4060e3:	rcl    DWORD PTR [ebp+eiz*1+0xc],0xc8
  4060e8:	xchg   esi,eax
  4060e9:	pusha  
  4060ea:	int3   
  4060eb:	(bad)  
  4060ec:	out    0x6f,eax
  4060ee:	xchg   DWORD PTR [edx+eax*2+0x1b43b3f5],esp
  4060f5:	(bad)  
  4060f6:	pop    esp
  4060f7:	rcl    edx,cl
  4060f9:	mov    WORD PTR ds:0xa54599f9,?
  4060ff:	cdq    
  406100:	push   esp
  406101:	(bad)  
  406102:	inc    BYTE PTR [edi-0x71]
  406105:	mov    eax,0x1a04887e
  40610a:	mov    eax,DWORD PTR [ebp-0x40]
  40610d:	mov    edx,DWORD PTR [ebp-0x28]
  406110:	xor    eax,esi
  406112:	xor    edx,esi
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	and    DWORD PTR [eax],0xffffff96
  40688f:	jl     0x4068a4
  406891:	cmp    eax,0x5e0c8383
  406896:	add    DWORD PTR [ebx+0x2dc23be2],0xfffffff1
  40689d:	fnstsw WORD PTR [eax]
  40689f:	int3   
  4068a0:	push   0xffffffeb
  4068a2:	inc    edi
  4068a3:	lods   eax,DWORD PTR ds:[esi]
  4068a4:	daa    
  4068a5:	push   ecx
  4068a6:	push   edx
  4068a7:	jnp    0x406874
  4068a9:	rol    DWORD PTR [ebx-0x3aae1453],cl
  4068af:	lods   al,BYTE PTR ds:[esi]
  4068b0:	outs   dx,DWORD PTR ds:[esi]
  4068b1:	push   0x55
  4068b3:	or     ecx,DWORD PTR [esi+ecx*8]
  4068b6:	fsub   DWORD PTR [edx+0x4a]
  4068b9:	mov    ?,edi
  4068bb:	ja     0x40687d
  4068bd:	in     al,dx
  4068be:	mov    ebp,0xe50c1f23
  4068c3:	sub    BYTE PTR [edi+eax*1],bh
  4068c6:	cmp    al,0xb9
  4068c8:	scas   al,BYTE PTR es:[edi]
  4068c9:	fnstcw WORD PTR [esi+ebx*4-0x1b]
  4068cd:	sar    DWORD PTR [edx-0x5327872f],0xad
  4068d4:	sub    BYTE PTR [edi-0x76e02903],cl
  4068da:	test   DWORD PTR [edi],ecx
  4068dc:	fidiv  WORD PTR [ecx]
  4068de:	lods   al,BYTE PTR ds:[esi]
  4068df:	fst    DWORD PTR [ecx-0x49a9cf03]
  4068e5:	sub    cl,ch
  4068e7:	into   
  4068e8:	dec    ebp
  4068e9:	and    BYTE PTR [esp+esi*1+0x682ebe23],al
  4068f0:	add    DWORD PTR [ecx-0x36],esi
  4068f3:	mov    ch,0xcf
  4068f5:	aas    
  4068f6:	js     0x406946
  4068f8:	lahf   
  4068f9:	ficom  DWORD PTR [edx]
  4068fb:	pop    esi
  4068fc:	scas   eax,DWORD PTR es:[edi]
  4068fd:	adc    eax,0x75a9ffe6
  406902:	rcl    BYTE PTR [esi],0xe8
  406905:	or     ebx,DWORD PTR [ecx+0x4a]
  406908:	pushf  
  406909:	mov    edi,0xabd19f9b
  40690e:	out    0xb3,eax
  406910:	repz adc dh,BYTE PTR [ebp+0x36]
  406914:	cmp    al,0x50
  406916:	mov    ch,0x1d
  406918:	jne    0x4068c2
  40691a:	inc    esp
  40691b:	push   0xffffff93
  40691d:	and    bl,BYTE PTR [eax]
  40691f:	xchg   ebx,eax
  406920:	jp     0x40690e
  406922:	mov    bh,BYTE PTR [edi]
  406924:	stos   BYTE PTR es:[edi],al
  406925:	test   eax,0xee94d8cf
  40692a:	mov    bh,0xa4
  40692c:	inc    edi
  40692d:	sub    eax,0x8b04eacf
  406932:	adc    ecx,DWORD PTR [esi+ebx*1-0x6]
  406936:	sar    BYTE PTR [edx-0x7],1
  406939:	bound  esp,QWORD PTR [esi]
  40693b:	push   ebp
  40693c:	mov    bh,0x50
  40693e:	pop    edi
  40693f:	int    0x7e
  406941:	xchg   esp,eax
  406942:	add    eax,0x6217e85e
  406947:	add    esi,DWORD PTR [ebp-0x671fd2b0]
  40694d:	and    ebx,ebp
  40694f:	sbb    bh,dh
  406951:	(bad)  
  406952:	sub    ebx,ebx
  406954:	ins    DWORD PTR es:[edi],dx
  406955:	mov    bl,0xf7
  406957:	adc    esp,DWORD PTR [eax+0x591f5694]
  40695d:	pop    es
  40695e:	mov    ds:0xd06b2d9,al
  406963:	mov    dl,0xb9
  406965:	js     0x406955
  406967:	shl    DWORD PTR [eax-0x70b102f2],0xda
  40696e:	xor    eax,0xedb6d581
  406973:	cmp    ch,al
  406975:	ins    DWORD PTR es:[edi],dx
  406976:	push   ecx
  406977:	or     edx,DWORD PTR [edi+0x35]
  40697a:	stos   BYTE PTR es:[edi],al
  40697b:	cdq    
  40697c:	int    0x57
  40697e:	add    BYTE PTR [eax-0x230a5181],bh
  406984:	stos   DWORD PTR es:[edi],eax
  406985:	mov    eax,ds:0x7fe69032
  40698a:	cmp    al,0xf1
  40698c:	push   es
  40698d:	fmul   QWORD PTR [ebx]
  40698f:	sahf   
  406990:	arpl   dx,bp
  406992:	mov    al,0xa1
  406994:	popa   
  406995:	and    eax,0x2f5fbb2a
  40699a:	push   ecx
  40699b:	jno    0x4069ba
  40699d:	dec    edi
  40699e:	pop    es
  40699f:	xlat   BYTE PTR ds:[ebx]
  4069a0:	icebp  
  4069a1:	adc    DWORD PTR [esi-0x7fb51fde],eax
  4069a7:	mov    bl,0x20
  4069a9:	xchg   BYTE PTR [esi],ch
  4069ab:	mov    ch,0x78
  4069ad:	clc    
  4069ae:	shr    ecx,1
  4069b0:	mov    DWORD PTR [eax-0x3d252b5a],esp
  4069b6:	add    al,BYTE PTR [ebx+eax*8]
  4069b9:	rcr    BYTE PTR [eax+0x1c8a5662],cl
  4069bf:	repnz (bad) 
  4069c1:	fld    DWORD PTR [eax-0x1cb65e23]
  4069c7:	popf   
  4069c8:	adc    al,0x42
  4069ca:	mov    edx,0xb7fd3fb8
  4069cf:	repz fdivr QWORD PTR [edx-0x55]
  4069d3:	mov    ss,esi
  4069d5:	inc    ebx
  4069d6:	int    0x3d
  4069d8:	xor    al,0xe5
  4069da:	call   0xcaee:0x7b838b33
  4069e1:	js     0x406a37
  4069e3:	outs   dx,DWORD PTR ds:[esi]
  4069e4:	mov    edx,DWORD PTR [eax+edx*2]
  4069e7:	sub    dh,dl
  4069e9:	sub    BYTE PTR [eax],bl
  4069eb:	adc    BYTE PTR [ecx+0x1ddc6fe1],0xf8
  4069f2:	xor    cl,BYTE PTR [edx]
  4069f4:	stos   BYTE PTR es:[edi],al
  4069f5:	sahf   
  4069f6:	jmp    0x4069df
  4069f8:	cwde   
  4069f9:	es mov ebx,0x50301909
  4069ff:	into   
  406a00:	enter  0xad3a,0x68
  406a04:	cmp    ah,BYTE PTR [ecx]
  406a06:	pop    edx
  406a07:	pmaxub mm0,QWORD PTR [eax]
  406a0a:	mov    bh,BYTE PTR [edx+0x284bcd40]
  406a10:	mov    WORD PTR [edi],ds
  406a12:	out    0x6d,al
  406a14:	cli    
  406a15:	and    ebx,DWORD PTR [edx+0x53b2c1fc]
  406a1b:	dec    esi
  406a1c:	retf   0xee55
  406a1f:	cmc    
  406a20:	xlat   BYTE PTR ds:[ebx]
  406a21:	in     eax,0xa0
  406a23:	dec    ecx
  406a24:	jmp    0xa36e124
  406a29:	xchg   ecx,eax
  406a2a:	scas   al,BYTE PTR es:[edi]
  406a2b:	xchg   ebp,eax
  406a2c:	jmp    0x598537ba
  406a31:	xor    eax,0xce0a76a4
  406a36:	or     DWORD PTR [esi+0x7],ebp
  406a39:	call   0xde85:0x4f78e44e
  406a40:	lds    edi,FWORD PTR [ecx+edx*2+0x3e708167]
  406a47:	and    eax,0x86eff030
  406a4c:	stos   DWORD PTR es:[edi],eax
  406a4d:	out    0xf8,al
  406a4f:	jae    0x406a14
  406a51:	popa   
  406a52:	dec    edi
  406a53:	cdq    
  406a54:	pop    ecx
  406a55:	pop    es
  406a56:	in     eax,dx
  406a57:	and    al,BYTE PTR [ecx-0x7e262362]
  406a5d:	or     al,0x43
  406a5f:	sub    eax,0x5efa825c
  406a64:	mov    al,0x43
  406a66:	inc    edx
  406a67:	ja     0x406ab0
  406a69:	xchg   ebp,eax
  406a6a:	cmp    BYTE PTR [edx+0x46],al
  406a6d:	mov    al,0x60
  406a6f:	cmp    eax,0xcb67905e
  406a74:	pmulhw mm5,QWORD PTR [edi]
  406a77:	aad    0xdc
  406a79:	mov    bh,0x70
  406a7b:	pop    esi
  406a7c:	and    dh,BYTE PTR [esi]
  406a7e:	ins    DWORD PTR es:[edi],dx
  406a7f:	jno    0x406a04
  406a81:	call   FWORD PTR [eax+0x16]
  406a84:	inc    ebp
  406a85:	loopne 0x406a31
  406a87:	lahf   
  406a88:	inc    esp
  406a89:	or     al,0x3b
  406a8b:	jmp    0x4723bc6
  406a90:	les    ebp,FWORD PTR [eax]
  406a92:	mov    eax,0x6d42de05
  406a97:	loop   0x406a76
  406a99:	pop    ebp
  406a9a:	sub    eax,0x48e4a0af
  406a9f:	in     al,0xd1
  406aa1:	lock test al,0xb6
  406aa4:	jbe    0x406a4d
  406aa6:	push   edx
  406aa7:	outs   dx,BYTE PTR ds:[esi]
  406aa8:	xor    ecx,DWORD PTR [edi-0x3abe2f6a]
  406aae:	aam    0x5f
  406ab0:	retf   0x3281
  406ab3:	in     eax,0xf3
  406ab5:	inc    ebx
  406ab6:	cdq    
  406ab7:	mov    al,ds:0x16d7d7fe
  406abc:	fadd   QWORD PTR [edi-0x3f5e4840]
  406ac2:	cdq    
  406ac3:	xchg   ebp,eax
  406ac4:	or     eax,0xdd855636
  406ac9:	int3   
  406aca:	or     DWORD PTR [edx-0x6e5916d9],edx
  406ad0:	es dec ecx
  406ad2:	sbb    dl,bh
  406ad4:	jp     0x406b10
  406ad6:	add    esp,esi
  406ad8:	mov    eax,ds:0x31ea3eda
  406add:	mov    edi,0x1c5985f0
  406ae2:	scas   eax,DWORD PTR es:[edi]
  406ae3:	cmp    al,BYTE PTR [edx]
  406ae5:	pop    ebx
  406ae6:	pop    esi
  406ae7:	aad    0xeb
  406ae9:	jmp    0x2f6985f1
  406aee:	jns    0x406b41
  406af0:	push   esi
  406af1:	mov    bl,0xc0
  406af3:	xor    bh,ch
  406af5:	adc    cl,BYTE PTR [ecx-0x65]
  406af8:	or     al,0xca
  406afa:	repz retf 0x83d5
  406afe:	adc    eax,0xc21a6fc0
  406b03:	mov    bl,0xb3
  406b05:	in     eax,dx
  406b06:	int    0x6
  406b08:	mov    esp,0xe7488c0b
  406b0d:	mov    al,0x88
  406b0f:	xor    BYTE PTR [eax],bh
  406b11:	in     al,dx
  406b12:	ss jo  0x406b5b
  406b15:	enter  0xf915,0xa2
  406b19:	xchg   ebp,eax
  406b1a:	mov    bl,0xa8
  406b1c:	popf   
  406b1d:	jbe    0x406b81
  406b1f:	test   al,0x7b
  406b21:	add    dl,BYTE PTR [edx]
  406b23:	push   es
  406b24:	dec    ebp
  406b25:	in     al,dx
  406b26:	in     eax,0x40
  406b28:	cdq    
  406b29:	pop    eax
  406b2a:	mov    cl,0x24
  406b2c:	adc    al,0x88
  406b2e:	ins    BYTE PTR es:[edi],dx
  406b2f:	mov    BYTE PTR [edx-0x353f61b1],0xb1
  406b36:	call   0x4c0854d8
  406b3b:	test   eax,0xb540ac31
  406b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b41:	adc    al,0xaf
  406b43:	sbb    ch,BYTE PTR ss:[esi-0x27]
  406b47:	les    esi,FWORD PTR [edi+0x12]
  406b4a:	stc    
  406b4b:	inc    ebx
  406b4c:	add    al,0x5
  406b4e:	int3   
  406b4f:	sbb    al,bh
  406b51:	clc    
  406b52:	das    
  406b53:	mov    esp,0x5299ed8
  406b58:	jne    0x406aed
  406b5a:	das    
  406b5b:	scas   eax,DWORD PTR es:[edi]
  406b5c:	out    0x2f,al
  406b5e:	jl     0x406bc1
  406b60:	fs sub al,0xb0
  406b63:	push   esi
  406b64:	dec    esp
  406b65:	adc    eax,0xf3a71648
  406b6a:	ror    BYTE PTR [eax-0x80],1
  406b6d:	fucomi st,st(5)
  406b6f:	rcl    ebx,0xf2
  406b72:	retf   0xb39a
  406b75:	pop    edi
  406b76:	xor    eax,DWORD PTR [eax+0x8]
  406b79:	mov    ch,0x0
  406b7b:	mov    dh,0xac
  406b7d:	test   ecx,esi
  406b7f:	jmp    0x406b55
  406b81:	mov    ecx,0x325558a9
  406b86:	fdivr  QWORD PTR [eax+0x2fdcd420]
  406b8c:	xchg   esi,ecx
  406b8e:	mov    edx,0xf1c8f920
  406b93:	shl    BYTE PTR [ebp-0x56],0x63
  406b97:	pop    ebp
  406b98:	sbb    eax,0xe42014f2
  406b9d:	or     al,0x50
  406b9f:	out    0xa6,eax
  406ba1:	push   ds
  406ba2:	push   ds
  406ba3:	imul   BYTE PTR [edi+0x8]
  406ba6:	add    BYTE PTR [esp+ecx*8+0x2],0x2b
  406bab:	mov    eax,0x86666ce2
  406bb0:	sub    al,0x54
  406bb2:	xor    al,0xdd
  406bb4:	rol    BYTE PTR ds:0x64c2644a,1
  406bba:	push   edx
  406bbb:	sub    al,0x5
  406bbd:	lea    edi,[ebp-0xa]
  406bc0:	mov    dh,0x52
  406bc2:	fisttp WORD PTR [eax-0x4a4d578e]
  406bc8:	idiv   DWORD PTR fs:[eax]
  406bcb:	xor    ah,cl
  406bcd:	mov    bh,0xa2
  406bcf:	add    eax,0xff36b3e5
  406bd4:	jno    0x406bf9
  406bd6:	dec    ebp
  406bd7:	fcmovb st,st(1)
  406bd9:	sbb    ch,al
  406bdb:	ins    BYTE PTR es:[edi],dx
  406bdc:	in     al,dx
  406bdd:	xchg   ebp,eax
  406bde:	mov    ebx,0xe1f229f8
  406be3:	ret    
  406be4:	jl     0x406c10
  406be6:	bswap  eax
  406be8:	lea    ecx,[edx]
  406bea:	dec    ebp
  406beb:	cmp    al,0x11
  406bed:	sar    DWORD PTR [eax+0x76],cl
  406bf0:	rol    BYTE PTR [edx-0x44134f3e],1
  406bf6:	call   0x410a:0x8698df1f
  406bfd:	iret   
  406bfe:	inc    ebx
  406bff:	jae    0x406b8a
  406c01:	add    ebp,DWORD PTR [edx+eax*1]
  406c04:	fimul  WORD PTR [edx]
  406c07:	inc    ecx
  406c08:	shl    DWORD PTR [ebp+0xba4f9d7],0xac
  406c0f:	pop    ebx
  406c10:	mov    al,ds:0xf9a365c6
  406c15:	xchg   ebp,eax
  406c16:	mov    eax,0xc8f46d2d
  406c1b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c1e:	dec    BYTE PTR [ecx+esi*1]
  406c21:	and    ch,cl
  406c23:	mov    cl,0x6b
  406c25:	mul    DWORD PTR [esi]
  406c27:	xor    DWORD PTR [edi+0x37],eax
  406c2a:	mov    al,0x8f
  406c2c:	call   0x2eca:0x558142f8
  406c33:	pop    ds
  406c34:	xor    BYTE PTR [esi-0x31891b75],al
  406c3a:	(bad)  
  406c3b:	scas   al,BYTE PTR es:[edi]
  406c3c:	or     eax,ebx
  406c3e:	jp     0x406bff
  406c40:	lods   al,BYTE PTR ds:[esi]
  406c41:	xchg   DWORD PTR [edi+esi*2],ecx
  406c44:	das    
  406c45:	and    esp,eax
  406c47:	lahf   
  406c48:	int3   
  406c49:	jle    0x406c02
  406c4b:	and    cl,BYTE PTR [ebx+0x50]
  406c4e:	ds pop ebp
  406c50:	rcl    BYTE PTR [ebx-0xf996e7],1
  406c56:	adc    DWORD PTR [edi-0x4c],ecx
  406c59:	push   esp
  406c5a:	pop    es
  406c5b:	pop    edx
  406c5c:	dec    ebx
  406c5d:	cs push esp
  406c5f:	pop    ebp
  406c60:	cmp    DWORD PTR [ecx+0x64],ebx
  406c63:	xchg   esp,eax
  406c64:	ret    0xda38
  406c67:	dec    ebx
  406c68:	adc    BYTE PTR [esi-0x62],bl
  406c6b:	jl     0x406bfd
  406c6d:	sbb    DWORD PTR [ebp-0x20eded86],0xffffffc9
  406c74:	call   0xd5b3:0xe7da06f
  406c7b:	jo     0x406ccb
  406c7d:	bound  ecx,QWORD PTR [ebx-0x5e]
  406c80:	inc    ecx
  406c82:	retf   0x222b
  406c85:	xchg   BYTE PTR [eax+ecx*2],dh
  406c88:	or     eax,0x98ffdecf
  406c8d:	shr    BYTE PTR [ecx],0x42
  406c90:	pop    es
  406c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c92:	dec    ebp
  406c93:	xchg   ebx,eax
  406c94:	iret   
  406c95:	xchg   ebx,eax
  406c96:	and    eax,0xb94443ec
  406c9b:	adc    BYTE PTR ds:0xdf4a02a0,dl
  406ca1:	gs xchg edx,eax
  406ca3:	out    dx,al
  406ca4:	nop
  406ca5:	and    eax,0xe963aa41
  406caa:	(bad)  
  406cab:	jmp    0x1d61f1b3
  406cb0:	sub    ch,BYTE PTR [ebx+0x368d5851]
  406cb6:	lea    ebx,[ebx+0x13f8a5c7]
  406cbc:	pop    ecx
  406cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cbe:	push   esi
  406cbf:	jle    0x406cbb
  406cc1:	jecxz  0x406cf5
  406cc3:	dec    ecx
  406cc4:	daa    
  406cc5:	jbe    0x406d29
  406cc7:	jae    0x406cee
  406cc9:	lods   eax,DWORD PTR ds:[esi]
  406cca:	mov    ah,0x7e
  406ccc:	push   edx
  406ccd:	call   0x62127bd9
  406cd2:	outs   dx,DWORD PTR ds:[esi]
  406cd3:	je     0x406cf8
  406cd5:	add    BYTE PTR [ebp-0x19],bh
  406cd8:	rcr    BYTE PTR [esi+0x7d0be8f8],1
  406cde:	mov    ch,0x49
  406ce0:	push   ebp
  406ce1:	mov    dl,0xd8
  406ce3:	lods   al,BYTE PTR ds:[esi]
  406ce4:	and    ebp,DWORD PTR [ecx+0x33ba5bef]
  406cea:	pop    esi
  406ceb:	repz and dh,BYTE PTR [ebx-0x79]
  406cef:	fmulp  st(6),st
  406cf1:	cmp    esi,DWORD PTR [edi]
  406cf3:	mov    eax,ds:0x533ef5a8
  406cf8:	and    al,0x90
  406cfa:	and    BYTE PTR [edi+0x16],dl
  406cfd:	jecxz  0x406d2b
  406cff:	mov    ds:0xaceb5c99,al
  406d04:	fsub   DWORD PTR es:[edi+0x27]
  406d08:	jbe    0x406d29
  406d0a:	outs   dx,BYTE PTR ds:[esi]
  406d0b:	and    eax,0xad903e63
  406d10:	mov    eax,ds:0xd3252c7d
  406d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d16:	push   cs
  406d17:	push   0x57058cc0
  406d1c:	(bad)  
  406d1d:	retf   0x38e3
  406d20:	out    0xf,eax
  406d22:	sub    al,0x36
  406d24:	retf   0xd015
  406d27:	and    ecx,esi
  406d29:	data16 jecxz 0x406d6b
  406d2c:	cdq    
  406d2d:	sbb    DWORD PTR [edx],edi
  406d2f:	dec    edx
  406d30:	xor    ch,BYTE PTR [ecx]
  406d32:	or     eax,0x89656823
  406d37:	aaa    
  406d38:	es xor eax,0x43c5131b
  406d3e:	pusha  
  406d3f:	fisub  DWORD PTR [ebp-0x5e]
  406d42:	mov    DWORD PTR [ebx-0x595c490a],edi
  406d48:	xchg   esi,eax
  406d49:	mov    ebp,0x8130458
  406d4e:	out    0x65,al
  406d50:	rcr    BYTE PTR [edx+ebx*1],1
  406d53:	(bad)  
  406d54:	daa    
  406d55:	iret   
  406d56:	xor    eax,0x82251e99
  406d5b:	je     0x406dbe
  406d5d:	arpl   WORD PTR [eax-0x50],dx
  406d60:	xor    DWORD PTR [edi+0xfedca39],ebx
  406d66:	jg     0x406d52
  406d68:	xor    DWORD PTR [esi],ecx
  406d6a:	dec    esp
  406d6b:	lea    ebx,[ebp+edi*8-0x336e9379]
  406d72:	xor    edx,edx
  406d74:	cwde   
  406d75:	mov    edi,0x6805fff0
  406d7a:	mov    ecx,0xc885f22e
  406d7f:	pushf  
  406d80:	dec    edx
  406d81:	loopne 0x406daa
  406d83:	xor    BYTE PTR [edi],bl
  406d85:	not    BYTE PTR [ecx+esi*4-0x4f18847a]
  406d8c:	pop    eax
  406d8d:	dec    eax
  406d8e:	aas    
  406d8f:	xchg   edi,eax
  406d90:	sbb    al,0xeb
  406d92:	ret    0xf736
  406d95:	call   0xc50e:0x557773c7
  406d9c:	(bad)  
  406d9d:	inc    esi
  406d9e:	xor    BYTE PTR [esi],cl
  406da0:	out    0x5,eax
  406da2:	sbb    eax,esi
  406da4:	ret    0x9d5f
  406da7:	sbb    DWORD PTR [eax-0x3a2a6202],ebx
  406dad:	pop    esp
  406dae:	sahf   
  406daf:	pop    esp
  406db0:	fstp   TBYTE PTR [ecx]
  406db2:	test   BYTE PTR ds:[ecx+0x2],al
  406db6:	mov    cl,BYTE PTR [eax-0x33]
  406db9:	sub    eax,0xd270c615
  406dbf:	sbb    bh,BYTE PTR [edi]
  406dc1:	adc    DWORD PTR [edi],esi
  406dc3:	inc    ebx
  406dc4:	mov    eax,DWORD PTR [eax-0x13]
  406dc7:	outs   dx,BYTE PTR ds:[esi]
  406dc8:	outs   dx,DWORD PTR ds:[esi]
  406dc9:	imul   esp,DWORD PTR [edx],0x48
  406dcc:	mov    eax,ds:0x87e14dc9
  406dd1:	cdq    
  406dd2:	inc    esp
  406dd3:	popa   
  406dd4:	cs scas al,BYTE PTR es:[edi]
  406dd6:	push   esp
  406dd7:	mov    ah,0xda
  406dd9:	test   BYTE PTR [eax],bh
  406ddb:	imul   edi,DWORD PTR [ecx-0x7a],0xffffffd3
  406ddf:	pop    esp
  406de0:	out    dx,eax
  406de1:	inc    eax
  406de2:	xchg   esi,eax
  406de3:	mov    eax,0x63368dd7
  406de8:	bnd ret 0x4feb
  406dec:	sub    dl,BYTE PTR [ebp-0x5fd713c5]
  406df2:	jmp    0x8cfe:0xbd5ec1f0
  406df9:	add    BYTE PTR ds:0xd0c78320,dl
  406dff:	jl     0x406e53
  406e01:	out    0x10,al
  406e03:	mov    cl,ch
  406e05:	adc    ebp,DWORD PTR [bp+si-0x3d]
  406e09:	ret    
  406e0a:	into   
  406e0b:	inc    ebx
  406e0c:	and    BYTE PTR [edi+edx*4-0x2da8071f],bh
  406e13:	xchg   ebx,eax
  406e14:	out    dx,eax
  406e15:	neg    dh
  406e17:	sbb    ah,dh
  406e19:	das    
  406e1a:	dec    ebp
  406e1b:	inc    edi
  406e1c:	repz mov WORD PTR [esi-0x5e],ds
  406e20:	jmp    0x406da9
  406e22:	arpl   WORD PTR [eax+0x37],di
  406e25:	arpl   WORD PTR es:[edi],sp
  406e28:	hlt    
  406e29:	mov    ebp,0x3e2934b0
  406e2e:	xor    esp,DWORD PTR [ebx+ebp*2-0x32fe30c4]
  406e35:	jg     0x406e50
  406e37:	xor    ah,BYTE PTR ds:0x56b14ec9
  406e3d:	dec    ebx
  406e3e:	mov    ds:0x65ff8899,al
  406e43:	outs   dx,BYTE PTR ds:[esi]
  406e44:	ror    BYTE PTR [ecx],0x61
  406e47:	inc    eax
  406e48:	pop    esp
  406e49:	lea    ecx,[esi]
  406e4b:	aad    0x54
  406e4d:	push   ds
  406e4e:	xor    eax,0xddde8084
  406e53:	call   0x45bd:0x6a357ffe
  406e5a:	xchg   BYTE PTR [ebx+0x65],al
  406e5d:	jecxz  0x406df3
  406e5f:	xchg   edx,eax
  406e60:	popa   
  406e61:	adc    esi,DWORD PTR [ecx-0x32b6638e]
  406e67:	and    ah,BYTE PTR [ebx-0x72]
  406e6a:	pop    ds
  406e6b:	and    eax,0x9d32d7db
  406e70:	call   0x9c3f:0xcaba67b7
  406e77:	shl    DWORD PTR [edx],cl
  406e79:	push   es
  406e7a:	xor    esp,ebp
  406e7c:	ret    0xeabd
  406e7f:	jnp    0x406e99
  406e81:	test   al,0x46
  406e83:	sar    BYTE PTR [esi-0x3ab233ec],cl
  406e89:	push   ds
  406e8a:	sbb    dh,BYTE PTR [esi]
  406e8c:	pop    ss
  406e8d:	adc    al,ch
  406e8f:	xor    eax,0x9f61381d
  406e94:	popf   
  406e95:	mov    eax,0x198f2dd4
  406e9a:	cmp    eax,0x44df1c09
  406e9f:	pop    es
  406ea0:	inc    esi
  406ea1:	adc    ebp,DWORD PTR ds:0x5dbab56e
  406ea7:	stos   DWORD PTR es:[edi],eax
  406ea8:	cld    
  406ea9:	addr16 jle 0x406ea8
  406eac:	inc    esp
  406ead:	bound  ebp,QWORD PTR [edx+0x76]
  406eb0:	aad    0x13
  406eb2:	add    DWORD PTR [edx+0x739a21ad],edx
  406eb8:	mov    ds:0x745cc7c7,al
  406ebd:	mov    esp,0x611eb8f8
  406ec2:	test   BYTE PTR [edx],0xe9
  406ec5:	xlat   BYTE PTR ds:[ebx]
  406ec6:	mov    cl,0x8a
  406ec8:	rcr    BYTE PTR [esi+0x3fa9326f],cl
  406ece:	inc    esp
  406ecf:	dec    esp
  406ed0:	sar    ch,1
  406ed2:	adc    eax,0x340be37d
  406ed7:	add    eax,0xba93955b
  406edc:	ret    
  406edd:	(bad)  
  406ede:	je     0x406e98
  406ee0:	ret    0x3e7
  406ee3:	mov    ah,0x2c
  406ee5:	clc    
  406ee6:	mov    ebp,0x8ff2e55
  406eeb:	inc    ecx
  406eec:	stos   DWORD PTR es:[edi],eax
  406eed:	loop   0x406ecc
  406eef:	cli    
  406ef0:	adc    DWORD PTR [ebx-0x647624bc],eax
  406ef6:	fidiv  WORD PTR [esi-0x7d899e90]
  406efc:	ds dec ebx
  406efe:	je     0x406ec5
  406f00:	into   
  406f01:	lods   al,BYTE PTR ds:[esi]
  406f02:	imul   ecx,DWORD PTR [eax-0x8],0x7a
  406f06:	pop    es
  406f07:	pop    esi
  406f08:	pop    edi
  406f09:	call   0x50d9f184
  406f0e:	adc    ebx,DWORD PTR [esp+edi*1]
  406f11:	jo     0x406eee
  406f13:	test   eax,0xf28c6d7e
  406f18:	xchg   edx,eax
  406f19:	sbb    ah,BYTE PTR [esi-0x5]
  406f1c:	push   si
  406f1e:	popf   
  406f1f:	pop    ds
  406f20:	push   es
  406f21:	xor    al,0x21
  406f23:	outs   dx,BYTE PTR ds:[esi]
  406f24:	lods   eax,DWORD PTR ds:[esi]
  406f25:	fsub   st,st(3)
  406f27:	test   DWORD PTR [edx],edx
  406f29:	retf   0x42e7
  406f2c:	jo     0x406edc
  406f2e:	dec    esp
  406f2f:	mov    WORD PTR [ecx],cs
  406f31:	mov    al,ds:0x597f3a02
  406f36:	imul   edx,DWORD PTR ds:0x5bd144f0,0x24
  406f3d:	outs   dx,DWORD PTR ds:[esi]
  406f3e:	(bad)  
  406f3f:	jecxz  0x406f27
  406f41:	sar    DWORD PTR [ecx],0xc0
  406f44:	pop    esp
  406f45:	(bad)  
  406f46:	push   esi
  406f47:	sub    eax,0x524dd54f
  406f4c:	shl    BYTE PTR [edx-0x4d],1
  406f4f:	inc    eax
  406f50:	test   al,0xdc
  406f52:	fst    DWORD PTR [esi+edi*2-0x30]
  406f56:	cmp    al,0xc
  406f58:	retf   
  406f59:	(bad)  
  406f5a:	push   ebp
  406f5b:	xlat   BYTE PTR ds:[ebx]
  406f5c:	dec    eax
  406f5d:	loop   0x406f17
  406f5f:	add    DWORD PTR [edi+0x32526ee4],0xc256c126
  406f69:	jmp    0xb6d5:0x8b930aa1
  406f70:	adc    bh,BYTE PTR [ebx+0x3bdb3971]
  406f76:	test   al,0x7
  406f78:	outs   dx,DWORD PTR ds:[esi]
  406f79:	jle    0x406f8f
  406f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f7c:	jb     0x406f6b
  406f7e:	popa   
  406f7f:	icebp  
  406f80:	ins    BYTE PTR es:[edi],dx
  406f81:	in     eax,dx
  406f82:	int    0x91
  406f84:	out    0x76,al
  406f86:	pop    ds
  406f87:	jns    0x406f8e
  406f89:	dec    ebp
  406f8a:	ficom  WORD PTR [esi]
  406f8c:	dec    edi
  406f8d:	dec    esi
  406f8e:	adc    DWORD PTR es:[ecx],ebp
  406f91:	mov    ecx,0x4ac78a5
  406f96:	add    esi,ebx
  406f98:	lds    ebx,FWORD PTR [eax]
  406f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f9b:	inc    ebp
  406f9c:	cmp    BYTE PTR [eax],al
  406f9e:	aad    0x83
  406fa0:	repnz scas eax,DWORD PTR es:[edi]
  406fa2:	xor    eax,0xbc0bb5ae
  406fa7:	jg     0x406fe8
  406fa9:	mov    ecx,0xaf9d4bfc
  406fae:	sub    ah,ah
  406fb0:	hlt    
  406fb1:	and    DWORD PTR [edi],edx
  406fb3:	outs   dx,BYTE PTR ds:[esi]
  406fb4:	gs ror ecx,cl
  406fb7:	adc    DWORD PTR [edx],ebp
  406fb9:	retf   
  406fba:	xchg   ecx,eax
  406fbb:	sub    DWORD PTR [edx-0x6c0ccc60],ebp
  406fc1:	popa   
  406fc2:	sbb    eax,0x3ed5107
  406fc7:	mov    ah,0x2f
  406fc9:	pop    edx
  406fca:	jbe    0x406ff5
  406fcc:	xor    esi,DWORD PTR [ebx-0x11]
  406fcf:	out    0xf4,al
  406fd1:	inc    eax
  406fd2:	aam    0xfe
  406fd4:	inc    eax
  406fd5:	in     al,dx
  406fd6:	mov    bl,0x7d
  406fd8:	adc    DWORD PTR [ebx-0x4b417f83],eax
  406fde:	(bad)  
  406fdf:	fistp  DWORD PTR [ebx+0x75]
  406fe2:	idiv   DWORD PTR [ebp+0x60594f27]
  406fe8:	(bad)  
  406fe9:	ins    BYTE PTR es:[edi],dx
  406fea:	xor    eax,0x70752e9e
  406fef:	push   0x42
  406ff1:	pop    edi
  406ff2:	inc    esp
  406ff3:	jl     0x406f95
  406ff5:	adc    edx,DWORD PTR [ecx+eiz*4]
  406ff8:	repnz mov al,0x80
  406ffb:	outs   dx,DWORD PTR ds:[esi]
  406ffc:	out    dx,al
  406ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ffe:	fadd   QWORD PTR [eax]
  407000:	jge    0x406fcd
  407002:	lahf   
  407003:	stos   BYTE PTR es:[edi],al
  407004:	(bad)  
  407005:	fdivr  st(2),st
  407007:	out    0xf6,eax
  407009:	mov    dh,0xa0
  40700b:	in     al,dx
  40700c:	and    ebx,0x8fc91cc8
  407012:	add    al,0xd4
  407014:	jo     0x407069
  407016:	stc    
  407017:	out    dx,eax
  407018:	pop    es
  407019:	push   esi
  40701a:	cmp    eax,ebp
  40701c:	adc    ebp,DWORD PTR [ebx-0x1e]
  40701f:	dec    esi
  407020:	daa    
  407021:	jb     0x407029
  407023:	inc    esp
  407024:	fisubr WORD PTR [esi-0x207dcaad]
  40702a:	pop    edi
  40702b:	int3   
  40702c:	cmc    
  40702d:	test   DWORD PTR [eax-0x33],0x9591c593
  407034:	push   es
  407035:	pop    eax
  407037:	xor    bh,BYTE PTR [ebx]
  407039:	aam    0xb3
  40703b:	fwait
  40703c:	inc    edi
  40703d:	fwait
  40703e:	mov    ecx,0xdd080b68
  407043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407044:	mov    al,ds:0x6301f113
  407049:	sbb    eax,0x3c375709
  40704e:	adc    al,0x1f
  407050:	test   eax,0x5ed24989
  407055:	jb     0x407095
  407057:	(bad)  
  407058:	dec    edx
  407059:	ss (bad) 
  40705b:	leave  
  40705c:	inc    edi
  40705d:	or     al,0x82
  40705f:	push   ds
  407060:	mov    bh,0x70
  407062:	idiv   esi
  407064:	les    ecx,FWORD PTR [edx+0x5d08b642]
  40706a:	ss ss cmc 
  40706d:	in     eax,0x1f
  40706f:	push   ebx
  407070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407071:	xor    edi,DWORD PTR [ebx]
  407073:	retf   
  407074:	pop    edx
  407075:	xchg   esi,eax
  407076:	sub    bl,cl
  407078:	push   esi
  407079:	dec    esp
  40707a:	push   ecx
  40707b:	lock scas eax,DWORD PTR es:[edi]
  40707d:	cmp    BYTE PTR [ebx+eiz*1+0x44],bl
  407081:	push   DWORD PTR [ecx-0x56c0f765]
  407087:	jmp    0x4070b7
  407089:	daa    
  40708a:	inc    edi
  40708b:	dec    esp
  40708c:	pop    DWORD PTR [ebp+0x62abf0b1]
  407092:	xlat   BYTE PTR ds:[ebx]
  407093:	inc    ecx
  407094:	dec    edi
  407095:	arpl   WORD PTR [edi],bx
  407097:	jne    0x407105
  407099:	dec    ecx
  40709a:	jle    0x407043
  40709c:	push   ecx
  40709d:	imul   DWORD PTR [esi-0x51]
  4070a0:	sti    
  4070a1:	loop   0x4070ff
  4070a3:	sub    eax,0x41ea1d24
  4070a8:	inc    ebp
  4070a9:	mov    dh,0x98
  4070ab:	rcl    bl,1
  4070ad:	inc    esi
  4070ae:	cwde   
  4070af:	test   al,0x58
  4070b1:	jmp    0x40704f
  4070b3:	dec    esp
  4070b4:	jmp    0x219e:0x8933c95c
  4070bb:	mov    ebp,0x9ce9e893
  4070c0:	and    bl,bl
  4070c2:	and    bl,BYTE PTR ds:0x681f14b0
  4070c8:	mov    eax,ds:0x1af936e5
  4070cd:	test   al,0xad
  4070cf:	nop
  4070d0:	ret    0xae4d
  4070d3:	repnz shl BYTE PTR [edx],1
  4070d6:	push   edi
  4070d7:	out    dx,eax
  4070d8:	aam    0xaa
  4070da:	mov    esi,0xea745239
  4070df:	push   0x6c
  4070e1:	ror    ecx,1
  4070e3:	jnp    0x407123
  4070e5:	add    edx,DWORD PTR [edi+0x37c5bcdc]
  4070eb:	mov    ebx,0x572c3404
  4070f0:	and    bh,BYTE PTR [ebp-0x5a]
  4070f3:	aad    0xcc
  4070f5:	inc    edi
  4070f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070f7:	shl    BYTE PTR [esi],0x9c
  4070fa:	jmp    0xc8027c9a
  4070ff:	jl     0x4070a9
  407101:	sbb    eax,DWORD PTR [edx+0x1d998a69]
  407107:	jp     0x40710e
  407109:	mov    bl,0x8f
  40710b:	and    esp,0x9f058551
  407111:	xchg   ebp,eax
  407112:	sub    al,cl
  407114:	mov    ds:0xb92b292f,eax
  407119:	aas    
  40711a:	popf   
  40711b:	xor    bl,bl
  40711d:	jmp    0x719c3e8d
  407122:	adc    BYTE PTR [esi],0x5c
  407125:	cmp    bl,BYTE PTR [eax+0x539bc025]
  40712b:	pop    ebx
  40712c:	and    BYTE PTR [eax+0x4c],cl
  40712f:	xchg   ebx,eax
  407130:	adc    ebp,ebx
  407132:	loope  0x4071ac
  407134:	rcl    cl,0x8b
  407137:	mov    ch,bh
  407139:	push   cs
  40713a:	nop
  40713b:	inc    eax
  40713c:	in     al,0xa1
  40713e:	pop    edi
  40713f:	push   edi
  407140:	loopne 0x4071ad
  407142:	dec    esi
  407143:	jae    0x4070c8
  407145:	add    ah,ah
  407147:	pop    edi
  407148:	mov    dh,0xea
  40714a:	adc    dh,BYTE PTR [edx+0x4b56e2ee]
  407150:	jo     0x4070eb
  407152:	cmp    esi,edi
  407154:	mov    ah,0x63
  407156:	shl    DWORD PTR [eax],0x73
  407159:	shl    BYTE PTR [ebx+ebx*1-0x19],0x72
  40715e:	and    bl,BYTE PTR [edi+0x7c]
  407161:	sub    BYTE PTR [esi],al
  407163:	push   edi
  407164:	(bad)  
  407165:	imul   ebp,DWORD PTR [edx-0x1c],0x3f9cf303
  40716c:	sub    al,0x49
  40716e:	neg    esp
  407170:	sti    
  407171:	jmp    0x40719a
  407173:	sub    eax,0xc3cf0039
  407178:	enter  0x6039,0x8d
  40717c:	not    ebp
  40717e:	jo     0x4071c5
  407180:	mov    esi,ecx
  407182:	or     eax,0x46d80bd0
  407187:	pop    ds
  407188:	jp     0x407154
  40718a:	retf   0xc316
  40718d:	xchg   ebp,eax
  40718e:	sbb    bh,BYTE PTR [esi]
  407190:	mov    esi,0xa951d1a0
  407195:	mov    bl,ah
  407197:	icebp  
  407198:	xchg   esp,eax
  407199:	pop    edx
  40719a:	add    ebx,0x44
  40719d:	dec    esi
  40719e:	fidiv  DWORD PTR [ebx+eiz*4+0x71]
  4071a2:	inc    eax
  4071a3:	retf   
  4071a4:	pop    ebx
  4071a5:	add    eax,0x9b966396
  4071aa:	int3   
  4071ab:	imul   esi,DWORD PTR [eax+0x79],0x1b10dc90
  4071b2:	arpl   WORD PTR [bx+0x4d],si
  4071b6:	in     al,0xea
  4071b8:	inc    esi
  4071b9:	ds dec ebp
  4071bb:	xor    eax,0xbd000c2f
  4071c0:	lds    esi,FWORD PTR [ebp+edi*8-0x3c]
  4071c4:	enter  0x2347,0x7f
  4071c8:	jb     0x4071a8
  4071ca:	and    cl,BYTE PTR [eax]
  4071cc:	push   edi
  4071cd:	fcom   DWORD PTR [esi+esi*2-0x162cfc4a]
  4071d4:	mov    dh,0x16
  4071d6:	push   ds
  4071d7:	xor    dl,BYTE PTR [esi-0x2261c2b5]
  4071dd:	push   ebp
  4071de:	add    ah,BYTE PTR [eax*4-0x37735051]
  4071e5:	xchg   ebx,eax
  4071e6:	push   ds
  4071e7:	js     0x407224
  4071e9:	sub    BYTE PTR [ebx-0x37],al
  4071ec:	dec    esi
  4071ed:	(bad)
  4071f0:	(bad)  
  4071f1:	and    DWORD PTR [ebp+0x2b],esi
  4071f4:	cli    
  4071f5:	jno    0x40721b
  4071f7:	or     esi,DWORD PTR [esi-0xb]
  4071fa:	data16 mov BYTE PTR [ecx-0xc6109e2],al
  407201:	mov    esp,0xddef2188
  407206:	mov    esi,0xb627a874
  40720b:	(bad)  
  40720c:	test   DWORD PTR [ebp-0x758a6620],0xd365cd79
  407216:	xlat   BYTE PTR ds:[ebx]
  407217:	sub    bh,ch
  407219:	mov    esi,0xe68ffabb
  40721e:	mov    ds:0xd6ec0c81,al
  407223:	xchg   esp,eax
  407224:	rcr    BYTE PTR [edi-0x7e],cl
  407227:	sub    edx,DWORD PTR [edi+eiz*4+0x72]
  40722b:	mov    ch,0x18
  40722d:	push   ds
  40722e:	add    DWORD PTR [edi+0x5e0a3bd7],esi
  407234:	les    esp,FWORD PTR [ebx-0x75]
  407237:	xchg   edx,eax
  407238:	stos   BYTE PTR es:[edi],al
  407239:	inc    edi
  40723a:	adc    eax,0x88594fa0
  40723f:	sbb    bl,BYTE PTR [edx+0x46b28349]
  407245:	(bad)  
  407247:	push   edi
  407248:	xor    BYTE PTR [ebp-0x5b],bh
  40724b:	outs   dx,BYTE PTR ds:[esi]
  40724c:	push   esp
  40724d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40724e:	out    dx,eax
  40724f:	mov    ebx,0xd1bbaf25
  407254:	sbb    DWORD PTR [edx+edx*4],esp
  407257:	inc    eax
  407258:	sbb    esi,esp
  40725a:	mov    ebp,0x8c15c3aa
  40725f:	or     eax,0xaede424c
  407264:	inc    ebx
  407265:	xchg   esp,eax
  407266:	test   al,0x7c
  407268:	int3   
  407269:	into   
  40726a:	sbb    al,0xec
  40726c:	push   ecx
  40726d:	or     esp,edx
  40726f:	rcl    DWORD PTR [ecx+0x59],1
  407272:	cwde   
  407273:	dec    esp
  407274:	shl    BYTE PTR [eax+0x6b58c08b],0x5c
  40727b:	hlt    
  40727c:	stos   BYTE PTR es:[edi],al
  40727d:	or     al,0x1e
  40727f:	xchg   ecx,eax
  407280:	mov    ch,0x83
  407282:	aas    
  407283:	clc    
  407284:	icebp  
  407285:	add    BYTE PTR [edi+0x3a],cl
  407288:	or     bh,BYTE PTR [ebx]
  40728a:	ror    DWORD PTR [edi+0x17],0xd8
  40728e:	inc    eax
  40728f:	aas    
  407290:	inc    ebp
  407291:	mov    DWORD PTR [ebp+0x77f08be3],0x338f4cc2
  40729b:	in     eax,dx
  40729c:	sub    DWORD PTR [edi+0x4b],ebx
  40729f:	call   0x17641bbe
  4072a4:	outs   dx,DWORD PTR ds:[esi]
  4072a5:	call   0xefda:0xbf5eaa29
  4072ac:	inc    edx
  4072ad:	cmp    eax,edx
  4072af:	jne    0x40726b
  4072b1:	call   0xe6c35f84
  4072b6:	adc    eax,0x8c99aef0
  4072bb:	jne    0x407308
  4072bd:	sbb    dl,BYTE PTR ds:0x354e22c5
  4072c3:	mov    ecx,esi
  4072c5:	mov    bl,ah
  4072c7:	jo     0x4072ff
  4072c9:	cli    
  4072ca:	adc    ebp,DWORD PTR [eax-0x775806b2]
  4072d0:	repz or eax,DWORD PTR [edx-0x4]
  4072d4:	add    BYTE PTR [eax],dh
  4072d6:	mov    esp,0xb2d4e9b1
  4072db:	jne    0x40735b
  4072dd:	mov    cs,WORD PTR [eax+0x7245e8ba]
  4072e3:	cmp    ecx,DWORD PTR [edx+0x3655d6ff]
  4072e9:	mov    esp,0x6e60d8c8
  4072ee:	in     eax,dx
  4072ef:	or     eax,esi
  4072f1:	test   al,0x72
  4072f3:	mov    eax,ds:0xfb705f8
  4072f8:	pop    ss
  4072f9:	and    bl,0x46
  4072fc:	jnp    0x407355
  4072fe:	dec    esp
  4072ff:	(bad)  
  407300:	mov    ebx,0x4836de11
  407305:	pusha  
  407306:	jo     0x4072d0
  407308:	leave  
  407309:	cmp    DWORD PTR [ebp+0x7d1f6a4c],0x1cffc78a
  407313:	and    DWORD PTR [esi+eiz*2+0x46],edi
  407317:	mov    ah,0x53
  407319:	ret    0x8d1b
  40731c:	sub    esp,DWORD PTR [ecx+0x252c993b]
  407322:	enter  0xff8a,0x78
  407326:	fadd   DWORD PTR ds:0x45cb5211
  40732c:	xor    bl,BYTE PTR [edx-0x2d]
  40732f:	pop    es
  407330:	adc    eax,0x99c6c2cd
  407335:	cs mov ecx,0x52eec233
  40733b:	sub    eax,0x1e5b4415
  407340:	mul    DWORD PTR [edi-0xa]
  407343:	bound  ecx,QWORD PTR [ecx+0x3b]
  407346:	out    0xb6,eax
  407348:	mov    cl,0x19
  40734a:	pushf  
  40734b:	sbb    al,BYTE PTR [edx+0x8]
  40734e:	mov    esi,0xf0dfcfd4
  407353:	scas   eax,DWORD PTR es:[edi]
  407354:	sub    DWORD PTR [edx+0x5dbf3496],edi
  40735a:	in     eax,0xf3
  40735c:	dec    esi
  40735d:	fist   DWORD PTR [esi]
  40735f:	add    bl,0x1e
  407362:	retf   0x6e0c
  407365:	stos   BYTE PTR es:[edi],al
  407366:	in     al,0x34
  407368:	xchg   DWORD PTR [edx],edx
  40736a:	fnstenv [edx]
  40736c:	in     eax,dx
  40736d:	dec    ecx
  40736e:	jge    0x407375
  407370:	mov    ax,0x9e94
  407374:	xor    al,0xb5
  407376:	dec    esi
  407377:	pop    es
  407378:	mov    cl,0x88
  40737a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40737b:	sar    DWORD PTR [eax+0x5fce3b18],cl
  407381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407382:	inc    ecx
  407383:	jnp    0x407384
  407385:	push   es
  407386:	jp     0x4073e8
  407388:	bound  edx,QWORD PTR ds:[ebx]
  40738b:	lahf   
  40738c:	adc    DWORD PTR [ecx+ebx*4+0x59],ecx
  407390:	dec    ecx
  407391:	xor    ah,ah
  407393:	out    dx,al
  407394:	bound  ecx,QWORD PTR [esi-0xd]
  407397:	jno    0x4073a5
  407399:	push   0x57
  40739b:	(bad)
  40739f:	mov    ebx,0x4a54f34a
  4073a4:	and    BYTE PTR [edi+0x3a],ch
  4073a7:	addr16 das 
  4073a9:	lahf   
  4073aa:	test   al,0x87
  4073ac:	push   es
  4073ad:	test   al,0x21
  4073af:	add    eax,0xd630dba6
  4073b4:	repnz sub DWORD PTR [ecx+ebp*1+0x7ee448a1],esp
  4073bc:	push   ebx
  4073bd:	cld    
  4073be:	mov    ah,0xff
  4073c0:	hlt    
  4073c1:	lahf   
  4073c2:	test   al,0x5d
  4073c4:	retf   0xa7fa
  4073c7:	xchg   edx,eax
  4073c8:	sub    al,BYTE PTR [ebx+0x2f]
  4073cb:	inc    BYTE PTR [ebx+0x45]
  4073ce:	inc    ecx
  4073cf:	mov    ebx,0x4bfb21fd
  4073d4:	jo     0x407378
  4073d6:	adc    DWORD PTR [ebx-0x50],0x56
  4073da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073db:	push   cs
  4073dc:	mov    esp,0xc145c42a
  4073e1:	cmp    al,0xe8
  4073e3:	lock out dx,eax
  4073e5:	add    dl,0xf6
  4073e8:	xor    BYTE PTR ds:0x2193b3d8,ah
  4073ee:	dec    BYTE PTR [esi]
  4073f0:	fst    DWORD PTR [eax+edx*4]
  4073f3:	loopne 0x407447
  4073f5:	and    edi,DWORD PTR [esi-0x78]
  4073f8:	aas    
  4073f9:	pop    ebp
  4073fa:	and    bl,dl
  4073fc:	or     eax,DWORD PTR [edi-0x6221f073]
  407402:	cdq    
  407403:	les    edi,FWORD PTR [edx-0x7063cdf0]
  407409:	cld    
  40740a:	mov    bh,0x14
  40740c:	pop    ebp
  40740d:	(bad)  
  40740e:	or     ecx,ecx
  407410:	adc    bh,0x44
  407413:	test   DWORD PTR [ecx+0x23],0xed0b27d1
  40741a:	ja     0x40744a
  40741c:	mov    edx,0xda60fc64
  407421:	dec    ecx
  407422:	popa   
  407423:	xchg   esi,eax
  407424:	push   edx
  407425:	xchg   BYTE PTR [edx],al
  407427:	add    al,0x6
  407429:	adc    ch,BYTE PTR [edi+0x8]
  40742c:	push   edi
  40742d:	test   DWORD PTR [ecx-0x6b],esp
  407430:	mov    ah,0x36
  407432:	jmpw   0x1036
  407436:	stc    
  407437:	lahf   
  407438:	outs   dx,BYTE PTR ds:[esi]
  407439:	shl    DWORD PTR [ebx+0x5d7c131e],0x10
  407440:	cmp    ebp,edx
  407442:	retf   
  407443:	hlt    
  407444:	xchg   esi,eax
  407445:	add    ebx,DWORD PTR [esi+0x67]
  407448:	mov    ch,0xc0
  40744a:	fadd   st,st(6)
  40744c:	sub    al,0x2d
  40744e:	inc    ebx
  40744f:	mov    bh,0xf0
  407451:	test   eax,0x17161a6f
  407456:	les    esp,FWORD PTR [edx-0x2b57a911]
  40745c:	push   edx
  40745d:	xor    eax,0xb9a1e2d6
  407462:	push   cs
  407463:	(bad)  
  407464:	(bad)  
  407465:	fnstsw WORD PTR [esp+ebp*1+0x6f]
  407469:	cmp    al,0x63
  40746b:	inc    esi
  40746c:	mov    ds:0x73547bfa,al
  407471:	out    dx,al
  407472:	and    eax,0x11ec78dc
  407477:	inc    ebx
  407478:	data16 repz loope 0x407462
  40747c:	adc    al,0x99
  40747e:	stos   BYTE PTR es:[edi],al
  40747f:	hlt    
  407480:	into   
  407481:	int    0xb6
  407483:	int3   
  407484:	cdq    
  407485:	inc    esi
  407486:	ror    dl,1
  407488:	shl    BYTE PTR [edi+0x5812695e],cl
  40748e:	popf   
  40748f:	mov    BYTE PTR [edx+0x4a2d69f4],al
  407495:	hlt    
  407496:	jmp    0x52743098
  40749b:	sub    DWORD PTR [ebx-0x7cab73e6],esp
  4074a1:	jns    0x407482
  4074a3:	ja     0x407432
  4074a5:	and    ecx,ecx
  4074a7:	aas    
  4074a8:	xchg   dl,ah
  4074aa:	jae    0x40751f
  4074ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074ad:	mov    esi,0x8ef5202a
  4074b2:	mov    cl,0xd7
  4074b4:	popf   
  4074b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b6:	xor    ecx,DWORD PTR [ecx-0x1b]
  4074b9:	cdq    
  4074ba:	stc    
  4074bb:	push   es
  4074bc:	stos   DWORD PTR es:[edi],eax
  4074bd:	or     DWORD PTR [ecx],0xffffffec
  4074c0:	or     BYTE PTR [edx+edx*8-0x53e90b3b],0xe5
  4074c8:	mov    al,0x1d
  4074ca:	retf   
  4074cb:	ins    BYTE PTR es:[edi],dx
  4074cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074cd:	sub    al,0x56
  4074cf:	push   cs
  4074d0:	xchg   ebx,eax
  4074d1:	loop   0x4074ad
  4074d3:	shl    BYTE PTR [edx+0x1b101d8c],cl
  4074d9:	addr16 xchg BYTE PTR ds:0x4cd3,bl
  4074df:	inc    ebp
  4074e0:	adc    cl,BYTE PTR [di+0x21]
  4074e4:	test   al,0xad
  4074e6:	push   ebp
  4074e7:	daa    
  4074e8:	addr16 int 0xc1
  4074eb:	imul   edi,DWORD PTR [edx-0x1a],0xebb7aff0
  4074f2:	inc    edi
  4074f3:	xor    BYTE PTR [ebp+0x10],ah
  4074f6:	and    eax,0x936c251d
  4074fb:	jmp    DWORD PTR [ebx-0x20]
  4074fe:	sub    al,0x84
  407500:	xchg   DWORD PTR [edi],edx
  407502:	inc    ebx
  407503:	test   BYTE PTR [edx-0x4c2fab2b],dl
  407509:	vcvtsd2ss xmm0,xmm0,QWORD PTR [ebx+0x18]
  40750e:	aad    0x85
  407510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407511:	in     eax,dx
  407512:	sbb    eax,0x6bd51e35
  407517:	sub    edx,edi
  407519:	sbb    BYTE PTR [edx],al
  40751b:	push   0x4a992ef9
  407520:	das    
  407521:	pop    ebx
  407522:	jne    0x40759f
  407524:	mov    edi,0xc8487fe5
  407529:	mov    al,0x69
  40752b:	mov    DWORD PTR [edi+0x4f3d5],eax
  407531:	leave  
  407532:	sbb    ebp,DWORD PTR [edx]
  407534:	jo     0x407537
  407536:	adc    al,0xbf
  407538:	sub    DWORD PTR [esi],ebx
  40753a:	(bad)  
  40753b:	lahf   
  40753c:	(bad)  
  40753e:	sbb    DWORD PTR [edx],0x4b
  407541:	lods   al,BYTE PTR ds:[esi]
  407542:	cmp    ch,BYTE PTR [esi+0x13]
  407545:	ins    DWORD PTR es:[edi],dx
  407546:	push   ecx
  407547:	mov    edi,0x2d368ee
  40754c:	sbb    al,0xd3
  40754e:	ds jns 0x4074d1
  407551:	repz xrelease mov BYTE PTR [esi-0x80],al
  407556:	sub    eax,0x78688cb1
  40755b:	call   0xad00:0x4fefef1d
  407562:	xor    eax,0x43e38ec8
  407567:	xchg   ebp,eax
  407568:	push   edi
  407569:	pop    ds
  40756a:	ret    
  40756b:	sahf   
  40756c:	pop    edi
  40756d:	adc    esp,DWORD PTR [ebp+ebx*2-0x1a1043db]
  407574:	ror    esi,0xfd
  407577:	fsubr  st(4),st
  407579:	in     eax,dx
  40757a:	(bad)  
  40757b:	stos   DWORD PTR es:[edi],eax
  40757c:	cmc    
  40757d:	faddp  st(3),st
  40757f:	fisub  DWORD PTR [edi]
  407581:	dec    edx
  407582:	sub    DWORD PTR [edx+0x56],esp
  407585:	fcom   DWORD PTR [eax]
  407587:	jecxz  0x407528
  407589:	xchg   ebx,eax
  40758a:	shl    BYTE PTR [esi-0x62f12d13],1
  407590:	mov    ah,BYTE PTR [ecx+0x60]
  407593:	sbb    eax,0xe951429f
  407598:	loop   0x4075f9
  40759a:	push   ebx
  40759b:	outs   dx,DWORD PTR ds:[esi]
  40759c:	mov    esi,0x8dc3c22f
  4075a1:	repz aam 0x23
  4075a4:	loop   0x407608
  4075a6:	repz fild WORD PTR [esi]
  4075a9:	dec    esi
  4075aa:	loop   0x4075c8
  4075ac:	pop    ds
  4075ad:	in     al,0xc2
  4075af:	xor    BYTE PTR [edx+0x2c],dh
  4075b2:	imul   ecx,ebx,0xb47f54dc
  4075b8:	inc    edx
  4075b9:	and    ah,BYTE PTR [eax+0x35d4830b]
  4075bf:	adc    BYTE PTR [ebp-0x7cdffb93],dh
  4075c5:	mov    ds:0x4255055d,al
  4075ca:	retf   
  4075cb:	xchg   edx,eax
  4075cc:	cs pop ebx
  4075ce:	iret   
  4075cf:	xor    al,dl
  4075d1:	pop    esp
  4075d2:	jno    0x40763c
  4075d4:	mov    ecx,0xca83f746
  4075d9:	sbb    edi,DWORD PTR [ebp+ecx*1-0x28]
  4075dd:	inc    edi
  4075de:	add    bh,BYTE PTR [eax]
  4075e0:	push   esp
  4075e1:	jbe    0x4075f7
  4075e3:	test   BYTE PTR [ebp-0x37],cl
  4075e6:	xor    BYTE PTR [edx-0x14],ah
  4075e9:	cmp    al,0xe1
  4075eb:	cmp    dl,0x38
  4075ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075ef:	cdq    
  4075f0:	stc    
  4075f1:	add    esi,0xffffff88
  4075f4:	icebp  
  4075f5:	sbb    al,0x8
  4075f7:	dec    edx
  4075f8:	or     DWORD PTR [eax*4+0x23976636],0x58
  407600:	js     0x407651
  407602:	std    
  407603:	aaa    
  407604:	lods   eax,DWORD PTR ds:[esi]
  407605:	pop    edi
  407606:	rcr    BYTE PTR [eax+0x6a57059f],1
  40760c:	xor    eax,0x59d89e50
  407611:	ins    BYTE PTR es:[edi],dx
  407612:	jne    0x407653
  407614:	rcl    DWORD PTR [eax+0x1c],0x1f
  407618:	call   FWORD PTR [eax+0x4a63ab97]
  40761e:	push   ebx
  40761f:	pop    ecx
  407620:	cli    
  407621:	in     eax,dx
  407622:	sahf   
  407623:	push   ss
  407624:	clc    
  407625:	cs pusha 
  407627:	sub    DWORD PTR [edi+0xb],ebx
  40762a:	add    edx,DWORD PTR [ecx-0x7c]
  40762d:	cmp    edi,edi
  40762f:	mov    ch,0xef
  407631:	daa    
  407632:	push   esi
  407633:	sti    
  407634:	xor    al,ch
  407636:	std    
  407637:	jbe    0x4075e4
  407639:	dec    ecx
  40763a:	leave  
  40763b:	cmp    ebx,DWORD PTR [edi+eiz*1-0x77]
  40763f:	and    esi,edx
  407641:	pop    ecx
  407643:	or     eax,0x217e2943
  407648:	out    dx,al
  407649:	out    dx,eax
  40764a:	mov    ch,0x19
  40764c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40764d:	jne    0x40767e
  40764f:	sahf   
  407650:	ins    DWORD PTR es:[edi],dx
  407651:	mov    ch,0xb5
  407653:	jo     0x4075f8
  407655:	pop    eax
  407656:	push   es
  407657:	dec    edi
  407658:	lahf   
  407659:	and    al,0x53
  40765b:	jmp    0x407677
  40765d:	and    DWORD PTR [ebp-0x116388c5],ecx
  407663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407664:	nop    DWORD PTR [esi-0x55]
  407668:	inc    ecx
  407669:	or     dl,al
  40766b:	pop    ss
  40766c:	jl     0x4076b5
  40766e:	aas    
  40766f:	xchg   esp,eax
  407670:	add    eax,0xbdc35623
  407675:	and    al,0xb4
  407677:	mov    gs,WORD PTR es:[esi+0x6b668d8e]
  40767e:	xor    ecx,edx
  407680:	add    BYTE PTR [eax+ebp*4+0x15c43c8b],al
  407687:	std    
  407688:	fsub   QWORD PTR [ebx-0x2c]
  40768b:	ins    BYTE PTR es:[edi],dx
  40768c:	in     eax,dx
  40768d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40768e:	inc    esi
  40768f:	adc    BYTE PTR [ecx+edi*8+0x66f8a815],cl
  407696:	cdq    
  407697:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  407699:	push   esp
  40769a:	std    
  40769b:	mov    esi,DWORD PTR [edx+0x14]
  40769e:	cmp    ax,0x8705
  4076a2:	(bad)  
  4076a3:	push   esp
  4076a4:	push   0xffffff95
  4076a6:	pop    esp
  4076a7:	dec    esp
  4076a8:	je     0x407635
  4076aa:	mov    edx,0x3cb2a645
  4076af:	mov    ebp,0xcaf36705
  4076b4:	in     eax,dx
  4076b5:	pushf  
  4076b6:	rol    dl,0x76
  4076b9:	inc    edi
  4076ba:	dec    edx
  4076bb:	aam    0x69
  4076bd:	fist   DWORD PTR [esi-0x23]
  4076c0:	shr    BYTE PTR ds:0xf21c83ba,0x6a
  4076c7:	mov    ds:0x5b50aa5c,al
  4076cc:	dec    BYTE PTR [eax+0x57]
  4076cf:	mov    al,0x23
  4076d1:	push   ss
  4076d2:	in     eax,0xe7
  4076d4:	sub    bl,bh
  4076d6:	push   ss
  4076d7:	pop    edi
  4076d8:	jl     0x4076dd
  4076da:	jns    0x40773b
  4076dc:	sbb    eax,0x6b88ecde
  4076e1:	dec    ebp
  4076e2:	jmp    0x70fd:0xb98745e8
  4076e9:	mov    esi,0xe643a03f
  4076ee:	dec    edi
  4076ef:	std    
  4076f0:	push   0x30
  4076f2:	pop    edx
  4076f3:	jne    0x40772f
  4076f5:	bswap  ebx
  4076f7:	jp     0x407748
  4076f9:	into   
  4076fa:	jns    0x4076dd
  4076fc:	inc    esi
  4076fd:	mov    eax,ds:0x376826b4
  407702:	jmp    0x47ab6635
  407707:	add    al,0xbd
  407709:	test   edi,edi
  40770b:	add    al,0xcf
  40770d:	dec    ebx
  40770e:	fsubp  st(0),st
  407710:	mov    dl,0x8
  407712:	and    eax,0x18104cee
  407717:	mov    eax,ds:0x9e3667c2
  40771c:	mov    al,cl
  40771e:	stos   DWORD PTR es:[edi],eax
  40771f:	sub    eax,0xa9db9d29
  407724:	dec    esi
  407725:	push   edi
  407726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407727:	mov    eax,ds:0x3e61c0c5
  40772c:	arpl   cx,cx
  40772e:	add    DWORD PTR [ecx],0xffffffca
  407731:	sti    
  407732:	cmp    al,0x19
  407734:	mov    edx,0xc601b671
  407739:	cli    
  40773a:	push   ss
  40773b:	test   BYTE PTR [ebp+0x7],cl
  40773e:	shl    BYTE PTR [ebx+ecx*8-0x57c8c56e],1
  407745:	adc    eax,0xad9e90e7
  40774a:	outs   dx,BYTE PTR ds:[esi]
  40774b:	mov    ah,0x6c
  40774d:	or     BYTE PTR [eax-0x48132381],ch
  407753:	xlat   BYTE PTR ds:[ebx]
  407754:	jb     0x407776
  407756:	aas    
  407757:	xor    BYTE PTR [ebx+0xb],0xab
  40775b:	jne    0x407727
  40775d:	sub    eax,0x552d783d
  407762:	jo     0x407786
  407764:	mov    edi,0xda42051d
  407769:	loop   0x40775a
  40776b:	sbb    DWORD PTR [eax],eax
  40776d:	(bad)  
  40776e:	mov    edi,0x61e0ed5b
  407773:	arpl   WORD PTR [edi+0x6c],di
  407776:	iret   
  407777:	or     esp,esp
  407779:	sbb    al,0x81
  40777b:	dec    esp
  40777c:	mov    ds:0xfee4b244,eax
  407781:	jmp    0xd9b47b4c
  407786:	xor    eax,DWORD PTR ds:0xf3e99d06
  40778c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40778d:	or     DWORD PTR [esi+0x42b7f98f],edi
  407793:	jge    0x4077f2
  407795:	test   eax,0xa1a9c257
  40779a:	(bad)  
  40779b:	(bad)  
  40779d:	in     al,dx
  40779e:	inc    ebp
  40779f:	sbb    al,0x30
  4077a1:	jle    0x40780a
  4077a3:	stc    
  4077a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077a5:	add    al,0xfe
  4077a7:	jno    0x407745
  4077a9:	loopne 0x40775e
  4077ab:	xchg   esi,eax
  4077ac:	and    al,0xdb
  4077ae:	cmp    cl,dh
  4077b0:	fadd   DWORD PTR [edx-0x6fcd2ebc]
  4077b6:	xchg   DWORD PTR [ebx+0x2f],esi
  4077b9:	adc    BYTE PTR [edi+ebp*1+0x57088c98],dh
  4077c0:	pop    ss
  4077c1:	vmwrite edx,esi
  4077c4:	retf   0x2330
  4077c7:	sbb    ebp,DWORD PTR [edx+0x29]
  4077ca:	jg     0x407753
  4077cc:	mov    edx,0xa4c64b32
  4077d1:	push   cs
  4077d2:	mov    eax,ds:0x10b09707
  4077d7:	pop    eax
  4077d8:	sbb    al,0x11
  4077da:	mov    bh,0x62
  4077dc:	xchg   ebp,eax
  4077dd:	pop    edx
  4077de:	adc    DWORD PTR [esi-0x5c],edx
  4077e1:	pop    ebx
  4077e2:	push   esi
  4077e3:	jno    0x407846
  4077e5:	sub    ch,BYTE PTR [ebx+0x50dee2d5]
  4077eb:	ret    0xe12e
  4077ee:	push   ebx
  4077ef:	in     eax,0x81
  4077f1:	push   edx
  4077f2:	jae    0x407804
  4077f4:	push   ebx
  4077f5:	sahf   
  4077f6:	leave  
  4077f7:	loop   0x4077c6
  4077f9:	dec    ebx
  4077fa:	xchg   edx,eax
  4077fb:	std    
  4077fc:	aaa    
  4077fd:	les    esp,FWORD PTR [ecx-0x1a74aaba]
  407803:	add    eax,DWORD PTR [ebx]
  407805:	jp     0x407846
  407807:	bound  ecx,QWORD PTR [edi+0x0]
  40780a:	dec    eax
  40780b:	sahf   
  40780c:	imul   esp,esi,0x2f
  40780f:	nop    DWORD PTR ds:0x391a7313
  407816:	mov    WORD PTR [eax+edx*8+0x5f],ds
  40781a:	adc    al,0x9f
  40781c:	aas    
  40781d:	aaa    
  40781e:	js     0x40783d
  407820:	cwde   
  407821:	adc    BYTE PTR [esi+0x61],dh
  407824:	mov    ebp,0x32c25722
  407829:	cmp    BYTE PTR [ecx-0x70],0x2
  40782d:	push   ss
  40782e:	aam    0x47
  407830:	popa   
  407831:	adc    eax,0xbc65479b
  407836:	mov    bh,0xbc
  407838:	cdq    
  407839:	imul   edx,DWORD PTR ds:0x52a49e38,0xcd71db97
  407843:	std    
  407844:	into   
  407845:	mov    eax,0xfefc344a
  40784a:	mul    BYTE PTR [edx-0x7ec05c96]
  407850:	adc    cl,ch
  407852:	ror    DWORD PTR [ecx+edi*1-0x3add9cd3],0x7e
  40785a:	aam    0xca
  40785c:	fisubr DWORD PTR [edi]
  40785e:	mov    ebx,0x21ac89ff
  407863:	mov    dh,0x54
  407865:	shl    BYTE PTR [esi],1
  407867:	pop    edi
  407868:	push   esp
  407869:	jo     0x407889
  40786b:	push   edi
  40786c:	mov    BYTE PTR [ebx-0x42],ah
  40786f:	inc    edx
  407870:	add    cl,BYTE PTR [edx+0x486e5553]
  407876:	xchg   BYTE PTR [edx+edx*1+0x18],al
  40787a:	xchg   esp,eax
  40787b:	sub    BYTE PTR [eax-0x595f5997],al
  407881:	inc    eax
  407882:	pop    ds
  407883:	cmp    dh,BYTE PTR [ebp+0x323a8ae3]
  407889:	push   eax
  40788a:	ins    BYTE PTR es:[edi],dx
  40788b:	sub    cl,BYTE PTR ds:0xc53cd800
  407891:	xchg   esi,eax
  407892:	jge    0x40790b
  407894:	or     al,0x8c
  407896:	and    ecx,DWORD PTR [esi]
  407898:	xor    edx,ebp
  40789a:	into   
  40789b:	push   edi
  40789c:	xchg   edx,eax
  40789d:	ins    DWORD PTR es:[edi],dx
  40789e:	ds cld 
  4078a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078a1:	pop    esp
  4078a2:	in     al,dx
  4078a3:	pop    ecx
  4078a4:	mov    cl,0xf4
  4078a6:	push   ebx
  4078a7:	fcmove st,st(2)
  4078a9:	mov    WORD PTR ds:[ebp-0x697d3ed3],fs
  4078b0:	scas   al,BYTE PTR es:[edi]
  4078b1:	mov    esp,0x31e1721a
  4078b6:	mov    ebp,0x7f825ab
  4078bb:	call   0x9195efdf
  4078c0:	in     al,0xd7
  4078c2:	pop    ebp
  4078c3:	xor    BYTE PTR ss:[esi*8+0x414a5d7d],bh
  4078cb:	iret   
  4078cc:	cmp    al,0xcb
  4078ce:	jo     0x407890
  4078d0:	les    edx,FWORD PTR [edi]
  4078d2:	and    eax,0x61485b02
  4078d7:	in     eax,dx
  4078d8:	jo     0x407905
  4078da:	mov    ecx,0x29120a89
  4078df:	pop    ebp
  4078e0:	popf   
  4078e1:	leave  
  4078e2:	pop    ecx
  4078e3:	mov    ah,0x82
  4078e5:	es out 0x4d,eax
  4078e8:	cdq    
  4078e9:	lds    ebp,FWORD PTR [ebx-0x3c1ca679]
  4078ef:	retf   0x8500
  4078f2:	hlt    
  4078f3:	cwde   
  4078f4:	shl    BYTE PTR ds:0x1ed69487,1
  4078fa:	sahf   
  4078fb:	mov    dh,0xd9
  4078fd:	lahf   
  4078fe:	pop    esp
  4078ff:	stos   DWORD PTR es:[edi],eax
  407900:	call   0x8a7e:0xc7f0975c
  407907:	lea    esp,[ebx-0x1a2682cb]
  40790d:	xchg   ah,ah
  40790f:	pop    DWORD PTR [edx-0xd]
  407912:	lods   eax,DWORD PTR ds:[esi]
  407913:	mov    edi,0xf18220e3
  407918:	ret    
  407919:	or     edx,ebp
  40791b:	(bad)  
  40791c:	loopne 0x4078ad
  40791e:	cwde   
  40791f:	inc    eax
  407920:	push   eax
  407921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407922:	cmc    
  407923:	ins    DWORD PTR es:[edi],dx
  407924:	jmp    0x3350:0x865128c
  40792b:	std    
  40792c:	lds    edx,FWORD PTR [ebp+0x24]
  40792f:	call   0x836f0e70
  407934:	les    ebx,FWORD PTR [ebx]
  407936:	lock xor esp,DWORD PTR [esi-0x2b74574b]
  40793d:	add    DWORD PTR [edx],edx
  40793f:	ins    BYTE PTR es:[edi],dx
  407940:	xor    ah,cl
  407942:	out    dx,al
  407943:	mov    fs:0x74d135f7,eax
  407949:	cwde   
  40794a:	enter  0xed7,0xea
  40794e:	mov    esp,DWORD PTR [esi+ebx*1]
  407951:	jmp    0x7562:0x1d318c1f
  407958:	lahf   
  407959:	data16 or BYTE PTR [esp+edx*1],al
  40795d:	stc    
  40795e:	mov    esp,0x71c5bc58
  407963:	jbe    0x407931
  407965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407966:	cdq    
  407967:	dec    ecx
  407968:	aaa    
  407969:	xor    DWORD PTR [edx],esp
  40796b:	sub    bl,dl
  40796d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40796e:	lds    ebx,FWORD PTR [esi-0x3]
  407971:	or     dh,BYTE PTR [ebx+eiz*4+0xd]
  407975:	push   ds
  407976:	nop
  407977:	jge    0x407986
  407979:	stos   BYTE PTR es:[edi],al
  40797a:	pushf  
  40797b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40797c:	adc    ebp,edx
  40797e:	lods   eax,DWORD PTR ds:[esi]
  40797f:	popa   
  407980:	sub    DWORD PTR [edi],0xb27df529
  407986:	and    BYTE PTR [edx-0x30],al
  407989:	jp     0x4079df
  40798b:	and    ch,cl
  40798d:	jle    0x40796e
  40798f:	pushf  
  407990:	inc    edx
  407991:	push   ss
  407992:	enter  0x81a8,0x6a
  407996:	test   BYTE PTR [ebx],bl
  407998:	pop    ebp
  407999:	sbb    DWORD PTR [edi+0xe4d6e3e],edx
  40799f:	push   esp
  4079a0:	test   eax,0xfd2d9210
  4079a5:	ds mov edx,0x1ead7484
  4079ab:	dec    esp
  4079ac:	fidiv  WORD PTR [esi]
  4079ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079af:	loope  0x40794d
  4079b1:	xchg   esi,eax
  4079b2:	or     edi,DWORD PTR [edi+0x6b60544]
  4079b8:	shl    DWORD PTR [eax-0x59],1
  4079bb:	inc    eax
  4079bc:	cmp    edi,ebp
  4079be:	or     eax,0xd9cdb576
  4079c3:	out    dx,al
  4079c4:	lods   al,BYTE PTR ds:[esi]
  4079c5:	add    esp,ecx
  4079c7:	loopne 0x4079f3
  4079c9:	jbe    0x407950
  4079cb:	sub    edi,DWORD PTR [ecx-0x7955a7dc]
  4079d1:	ret    
  4079d2:	add    eax,0x1e70fcb6
  4079d7:	sbb    DWORD PTR [edi-0x33cea8df],0xffffffc4
  4079de:	or     BYTE PTR [ecx+eiz*4],0xcf
  4079e2:	push   ebx
  4079e3:	dec    edx
  4079e4:	pushf  
  4079e5:	sahf   
  4079e6:	push   0x3e502155
  4079eb:	mov    eax,ds:0x1db6da9a
  4079f0:	cmp    al,0x93
  4079f2:	ret    
  4079f3:	out    dx,al
  4079f4:	addr16 mov ebx,0xc3259a8e
  4079fa:	pop    eax
  4079fb:	pop    edi
  4079fc:	xchg   ebp,edi
  4079fe:	pop    ss
  4079ff:	or     BYTE PTR [ecx-0x7c0be42b],dl
  407a05:	jge    0x407a77
  407a07:	loope  0x407a6e
  407a09:	popf   
  407a0a:	faddp  st(0),st
  407a0c:	fwait
  407a0d:	js     0x407a6a
  407a0f:	or     esp,DWORD PTR [ebx+0x6142a2ef]
  407a15:	inc    eax
  407a16:	in     eax,0xd5
  407a18:	loopne 0x407a25
  407a1a:	dec    edi
  407a1b:	or     al,0x53
  407a1d:	jg     0x4079de
  407a1f:	fucomi st,st(1)
  407a21:	sub    ah,BYTE PTR [edx-0x1a693e7c]
  407a27:	xor    bh,ah
  407a29:	push   edi
  407a2a:	(bad)  
  407a2b:	loop   0x407a7c
  407a2d:	scas   eax,DWORD PTR es:[edi]
  407a2e:	repnz shl DWORD PTR [eax+0x10],1
  407a32:	dec    ecx
  407a33:	loop   0x4079e9
  407a35:	aam    0x8c
  407a37:	cmp    ch,bh
  407a39:	ja     0x4079f6
  407a3b:	dec    ecx
  407a3c:	repnz mov ah,0x5f
  407a3f:	pop    ebp
  407a40:	mov    bl,0x6f
  407a42:	jl     0x4079e8
  407a44:	mov    dh,0x58
  407a46:	je     0x407ab0
  407a48:	sub    eax,0x475c0a95
  407a4d:	mov    DWORD PTR ds:0x7ccdc6d9,esi
  407a53:	scas   al,BYTE PTR es:[edi]
  407a54:	shl    BYTE PTR [eax-0x51],0x51
  407a58:	pop    esi
  407a59:	lahf   
  407a5a:	pop    ecx
  407a5b:	pop    esp
  407a5c:	mov    edx,0xecfc7887
  407a61:	cdq    
  407a62:	mov    cl,0x46
  407a64:	clc    
  407a65:	sar    DWORD PTR [esi-0x6c9b8ae4],cl
  407a6b:	mov    ecx,esp
  407a6d:	inc    eax
  407a6e:	neg    BYTE PTR [eax]
  407a70:	ret    
  407a71:	mov    esp,0x71fc82e3
  407a76:	outs   dx,BYTE PTR ds:[esi]
  407a77:	fsqrt  
  407a79:	out    dx,al
  407a7a:	mov    ebx,0xf8201951
  407a7f:	es ret 
  407a81:	pushf  
  407a82:	dec    ebx
  407a83:	jns    0x407af6
  407a85:	jno    0x407a41
  407a87:	test   dh,0x1c
  407a8a:	mov    bl,0xd3
  407a8c:	adc    edx,DWORD PTR [edx]
  407a8e:	mov    esp,0xef608b93
  407a93:	add    BYTE PTR [ecx+ebp*8],ch
  407a96:	mov    bh,0x7a
  407a98:	mov    ds:0xeaacf131,al
  407a9d:	dec    ecx
  407a9e:	jae    0x407a80
  407aa0:	xchg   ebx,eax
  407aa1:	push   ecx
  407aa2:	adc    al,0xeb
  407aa4:	dec    edi
  407aa5:	xchg   edi,eax
  407aa6:	xchg   edx,eax
  407aa7:	mov    bh,0x25
  407aa9:	mov    ds:0x8892e575,al
  407aae:	push   edx
  407aaf:	add    ecx,ebx
  407ab1:	push   esi
  407ab2:	es test eax,0x172c2c5f
  407ab8:	and    BYTE PTR [ecx+0xf],cl
  407abb:	sub    edi,edx
  407abd:	add    ecx,DWORD PTR [edi]
  407abf:	mov    BYTE PTR [edx],bh
  407ac1:	popf   
  407ac2:	in     al,dx
  407ac3:	jl     0x407a79
  407ac5:	pusha  
  407ac6:	dec    eax
  407ac7:	outs   dx,BYTE PTR ds:[esi]
  407ac8:	mov    al,0x31
  407aca:	inc    esi
  407acb:	fmul   DWORD PTR [eax+esi*4+0x16]
  407acf:	mov    esi,0x5f9c22d2
  407ad4:	rep ins DWORD PTR es:[edi],dx
  407ad6:	mov    al,ds:0x823ffcdc
  407adb:	pop    ds
  407adc:	lods   al,BYTE PTR ds:[esi]
  407add:	push   ss
  407ade:	pop    es
  407adf:	addr16 (bad) 
  407ae1:	loope  0x407b3e
  407ae3:	enter  0x456f,0xa9
  407ae7:	push   eax
  407ae8:	mov    ah,BYTE PTR [eax+ebp*2+0x58]
  407aec:	out    0x29,eax
  407aee:	push   edx
  407aef:	rcl    BYTE PTR [esi],1
  407af1:	ret    0xa64e
  407af4:	adc    eax,0xa513aad0
  407af9:	xchg   DWORD PTR [edi],ebp
  407afb:	adc    al,0x8e
  407afd:	push   ebx
  407afe:	and    al,bh
  407b00:	and    DWORD PTR [ebx],0xa98ee893
  407b06:	push   esi
  407b07:	lea    edx,[esi-0x55]
  407b0a:	ss nop
  407b0c:	inc    ebx
  407b0d:	sahf   
  407b0e:	mov    cl,ch
  407b10:	mov    ebp,DWORD PTR [ecx+0x48b43eba]
  407b16:	jmp    0x20b0e93b
  407b1b:	xor    ah,BYTE PTR ds:0x43acc9f3
  407b21:	lods   al,BYTE PTR ds:[esi]
  407b22:	gs test dl,0xf
  407b26:	(bad)
  407b2a:	(bad)  
  407b2b:	cmp    ch,dh
  407b2d:	push   ecx
  407b2e:	xlat   BYTE PTR ds:[ebx]
  407b2f:	das    
  407b30:	das    
  407b31:	xchg   ecx,eax
  407b32:	adc    al,0x4e
  407b34:	and    al,0xec
  407b36:	fidiv  DWORD PTR [edx+0x47]
  407b39:	inc    esi
  407b3a:	fs adc al,0xbc
  407b3d:	push   0x994b4ad0
  407b42:	jo     0x407afd
  407b44:	and    eax,0x77fd6db7
  407b49:	cmp    ebx,eax
  407b4b:	push   esi
  407b4c:	mov    ds:0x392ba852,al
  407b51:	fmul   QWORD PTR [ecx+0x6a]
  407b54:	aas    
  407b55:	pop    ds
  407b56:	je     0x407b3d
  407b58:	mov    bh,0xbd
  407b5a:	add    eax,0x8052617e
  407b5f:	fidivr DWORD PTR [eax]
  407b61:	dec    edi
  407b62:	jl     0x407b46
  407b64:	add    al,0xcd
  407b66:	ss sub al,0xb3
  407b69:	cdq    
  407b6a:	mov    dl,0x94
  407b6c:	mov    esi,0x497bb845
  407b71:	add    bl,BYTE PTR [eax+ebp*8]
  407b74:	mov    eax,ds:0x115e5883
  407b79:	mov    esp,0x12e1cf96
  407b7e:	jmp    0xd20d:0x66259e3b
  407b85:	push   edx
  407b86:	dec    ecx
  407b87:	sbb    eax,0x3f2f88ce
  407b8c:	pop    eax
  407b8d:	xchg   edx,eax
  407b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b8f:	fldcw  WORD PTR [bx+si]
  407b92:	push   edx
  407b93:	cmp    al,0x7d
  407b95:	mov    ebx,0x24efce3e
  407b9a:	jo     0x407b30
  407b9c:	sbb    ecx,DWORD PTR [ebx]
  407b9e:	arpl   bx,ax
  407ba0:	and    ebx,DWORD PTR [eax+0x62934e5f]
  407ba6:	pop    esp
  407ba7:	adc    dl,BYTE PTR [ebx+edi*1+0x55]
  407bab:	xor    al,0xe5
  407bad:	aam    0xd4
  407baf:	push   0x1a33a795
  407bb4:	imul   esi,DWORD PTR [edx+0x2a20a2cd],0xd1346d41
  407bbe:	sbb    al,0x55
  407bc0:	retf   
  407bc1:	adc    DWORD PTR ds:0xdfca0228,0x42
  407bc8:	xor    eax,0xc955bb51
  407bcd:	cmp    ebx,DWORD PTR [ecx-0x66cdd203]
  407bd3:	loopne 0x407b88
  407bd5:	dec    eax
  407bd6:	aas    
  407bd7:	jno    0x407b6e
  407bd9:	and    BYTE PTR [esi-0x1f13bffc],cl
  407bdf:	lods   al,BYTE PTR ds:[esi]
  407be0:	adc    DWORD PTR [eax],edx
  407be2:	and    eax,0xc9ead638
  407be7:	mov    esi,0x6efab39
  407bec:	xor    ecx,DWORD PTR [esi-0x3c46d408]
  407bf2:	aaa    
  407bf3:	cmp    DWORD PTR [ecx],ebp
  407bf5:	aas    
  407bf6:	or     ebx,ebp
  407bf8:	loopne 0x407be2
  407bfa:	and    BYTE PTR [ebp+0x7bbf102f],0x1f
  407c01:	inc    eax
  407c02:	add    bl,BYTE PTR [ecx+0x74b033c9]
  407c08:	xor    al,0x77
  407c0a:	dec    BYTE PTR [ecx]
  407c0c:	btc    DWORD PTR [ebp-0x7f],eax
  407c10:	cmp    DWORD PTR [ecx+ebx*4],esi
  407c13:	jb     0x407b9d
  407c15:	fwait
  407c16:	lahf   
  407c17:	imul   edi,DWORD PTR [edi-0x33c777f6],0x51
  407c1e:	in     eax,0x73
  407c20:	add    eax,0x4970496b
  407c25:	jp     0x407c56
  407c27:	push   esi
  407c28:	or     ecx,edi
  407c2a:	xchg   DWORD PTR [edx-0x18e5819b],ebx
  407c30:	cld    
  407c31:	lock sbb DWORD PTR [eax+ebx*8+0x6ed53fc8],ecx
  407c39:	aas    
  407c3a:	bound  ebx,QWORD PTR [edx+edx*4]
  407c3d:	mov    al,ds:0x542a043d
  407c42:	(bad)  
  407c43:	outs   dx,BYTE PTR ds:[esi]
  407c44:	loop   0x407c27
  407c46:	imul   eax,DWORD PTR [ebx-0x71ac359a],0xc9ced90
  407c50:	cmp    edx,ebp
  407c52:	inc    ecx
  407c53:	sub    dh,BYTE PTR [ebx+edi*1]
  407c56:	mov    eax,ds:0x1b9f0bf8
  407c5b:	lea    ebp,[ecx]
  407c5d:	sub    BYTE PTR [ebx+0x17],ch
  407c60:	xchg   esp,eax
  407c61:	in     eax,0x3e
  407c63:	sub    ebx,DWORD PTR [ecx+0x1d886002]
  407c69:	mov    al,0xe0
  407c6b:	daa    
  407c6c:	push   ss
  407c6d:	adc    BYTE PTR [ecx+0x706bcd3d],al
  407c73:	sub    edi,ebx
  407c75:	dec    DWORD PTR [edi]
  407c77:	(bad)  [ebx]
  407c79:	scas   al,BYTE PTR es:[edi]
  407c7a:	add    dl,BYTE PTR [ecx]
  407c7c:	ret    
  407c7d:	stos   DWORD PTR es:[edi],eax
  407c7e:	mov    bh,0x85
  407c80:	push   esp
  407c81:	pop    es
  407c82:	leave  
  407c83:	cmc    
  407c84:	je     0x407c3a
  407c86:	aad    0xcc
  407c88:	icebp  
  407c89:	xchg   esi,eax
  407c8a:	pop    esp
  407c8b:	mov    ebp,0xf58603bd
  407c90:	data16 mov al,gs:0xe86a90e5
  407c97:	(bad)  
  407c98:	pop    eax
  407c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c9a:	fistp  DWORD PTR [edx-0x5b]
  407c9d:	push   0xdd8ba5ca
  407ca2:	sti    
  407ca3:	push   edi
  407ca4:	push   ebp
  407ca5:	popf   
  407ca6:	lds    ecx,FWORD PTR [ebp+esi*4+0x7c]
  407caa:	dec    esp
  407cab:	fs jbe 0x407c8e
  407cae:	aad    0x8b
  407cb0:	mov    ecx,0xd2c6b27b
  407cb5:	pop    es
  407cb6:	pop    ecx
  407cb7:	fisub  WORD PTR [edx+0x7d]
  407cba:	dec    ebp
  407cbb:	mov    BYTE PTR [ebp+0x2d],cl
  407cbe:	neg    ebp
  407cc0:	js     0x407c68
  407cc2:	jb     0x407d3d
  407cc4:	pop    ebp
  407cc5:	xlat   BYTE PTR ds:[ebx]
  407cc6:	sbb    esp,edi
  407cc8:	jne    0x407d1c
  407cca:	pop    ds
  407ccb:	add    eax,0x8b671434
  407cd0:	sbb    eax,0xdb766bee
  407cd5:	sub    DWORD PTR [edi],ebp
  407cd7:	jb     0x407c87
  407cd9:	retf   
  407cda:	add    al,0x3d
  407cdc:	lods   eax,DWORD PTR ds:[esi]
  407cdd:	mov    al,0x4f
  407cdf:	sti    
  407ce0:	xchg   cl,bl
  407ce2:	shl    DWORD PTR [ebx-0x6d],cl
  407ce5:	jg     0x407cf1
  407ce7:	pop    es
  407ce8:	sahf   
  407ce9:	hlt    
  407cea:	push   ds
  407ceb:	test   eax,0x5bc0364c
  407cf0:	inc    ebp
  407cf1:	ins    DWORD PTR es:[edi],dx
  407cf2:	inc    esi
  407cf3:	and    edi,DWORD PTR [edi]
  407cf5:	cs ss jne 0x407d41
  407cf9:	cmp    al,0x9c
  407cfb:	es ins BYTE PTR es:[edi],dx
  407cfd:	inc    al
  407cff:	cmp    esp,DWORD PTR [edi-0x15]
  407d02:	dec    edx
  407d03:	(bad)  
  407d04:	in     eax,0x2d
  407d06:	jp     0x407cbb
  407d08:	or     BYTE PTR [edx+0x71],al
  407d0b:	loopne 0x407cd9
  407d0d:	dec    esp
  407d0e:	int    0xbd
  407d10:	adc    eax,0xec9eca1c
  407d15:	outs   dx,BYTE PTR ds:[esi]
  407d16:	popf   
  407d17:	pop    es
  407d18:	leave  
  407d19:	mov    ebp,0xaef70800
  407d1e:	(bad)  
  407d1f:	shl    DWORD PTR [esi+0x6d],1
  407d22:	mov    edx,0x9a5dafec
  407d27:	mov    ch,0x44
  407d29:	adc    eax,0xb57c762d
  407d2e:	mov    al,0x28
  407d30:	out    0x14,al
  407d32:	pop    ebx
  407d33:	xor    al,0xe6
  407d35:	sbb    DWORD PTR ds:0x8061dbc6,edx
  407d3b:	add    eax,0x781accb1
  407d40:	out    0x48,eax
  407d42:	inc    esi
  407d43:	jl     0x407ccd
  407d45:	or     al,cl
  407d47:	mov    ecx,0xaf3e04e6
  407d4c:	xor    DWORD PTR [ebp-0xd5929a3],edx
  407d52:	in     eax,dx
  407d53:	test   DWORD PTR [edx-0x64],edx
  407d56:	adc    DWORD PTR [edx+eax*2-0x2500523a],eax
  407d5d:	mul    BYTE PTR [edx-0x30]
  407d60:	jmp    0x2c58:0xe858ea58
  407d67:	dec    eax
  407d68:	pushf  
  407d69:	(bad)  
  407d6a:	cmp    esp,edx
  407d6c:	cmp    eax,0xcd35bf43
  407d71:	add    BYTE PTR [edi-0x42],ah
  407d74:	pop    ss
  407d75:	xor    al,0x6
  407d77:	pop    ss
  407d78:	mov    ebx,0x4cae4a7d
  407d7d:	and    eax,0x58d2142c
  407d82:	pop    edi
  407d83:	jne    0x407db5
  407d85:	fisttp QWORD PTR [eax-0x299535e1]
  407d8b:	push   ds
  407d8c:	fld    TBYTE PTR ds:0x763a1b57
  407d92:	hlt    
  407d93:	cli    
  407d94:	sbb    DWORD PTR [ebx-0x6a],edx
  407d97:	mov    ch,0x68
  407d99:	aaa    
  407d9a:	xchg   ebx,eax
  407d9b:	jmp    0xeb64:0x8eba432e
  407da2:	outs   dx,BYTE PTR ds:[esi]
  407da3:	(bad)
  407da7:	scas   al,BYTE PTR es:[edi]
  407da8:	inc    edi
  407da9:	pop    eax
  407daa:	mov    dl,0xe5
  407dac:	mov    eax,DWORD PTR [ebx-0x129b937e]
  407db2:	test   eax,0xf17a22a4
  407db7:	jg     0x407e2c
  407db9:	(bad)
  407dbd:	inc    edi
  407dbe:	push   ds
  407dbf:	outs   dx,BYTE PTR ds:[esi]
  407dc0:	and    BYTE PTR [ecx-0x80],ah
  407dc3:	jl     0x407dea
  407dc5:	push   ebp
  407dc6:	sub    DWORD PTR [ecx+0x23],ecx
  407dc9:	mov    ebp,0x4110aee0
  407dce:	or     DWORD PTR [ebp+0x6b2493e2],esp
  407dd4:	stc    
  407dd5:	sbb    al,0x3d
  407dd7:	retf   
  407dd8:	sbb    al,0x13
  407dda:	adc    al,0x86
  407ddc:	mov    ebp,0xe88c3857
  407de1:	sub    cl,dl
  407de3:	pop    esp
  407de4:	dec    ebx
  407de5:	bound  ebp,QWORD PTR [ecx]
  407de7:	in     eax,0x22
  407de9:	inc    esi
  407dea:	pop    esi
  407deb:	imul   eax,DWORD PTR [ebp-0x21],0xffffffd6
  407def:	int3   
  407df0:	repz adc BYTE PTR ds:[ecx],dh
  407df4:	aam    0x5f
  407df6:	mov    ebx,0x970f3815
  407dfb:	popa   
  407dfc:	fs fxch st(3)
  407dff:	push   eax
  407e00:	cli    
  407e01:	pushf  
  407e02:	push   edx
  407e03:	add    DWORD PTR [edi+0x36f623a4],eax
  407e09:	xchg   BYTE PTR [edx],al
  407e0b:	mov    cl,0x8c
  407e0d:	iret   
  407e0e:	rcl    BYTE PTR [esp+eax*4],1
  407e11:	mov    ah,0xe7
  407e13:	cli    
  407e14:	mov    al,0x7
  407e16:	xlat   BYTE PTR ds:[ebx]
  407e17:	pop    ebx
  407e18:	mov    dl,0x4f
  407e1a:	out    0xb9,eax
  407e1c:	push   eax
  407e1d:	jmp    0x407e55
  407e1f:	add    al,0xba
  407e21:	stc    
  407e22:	lock mov esi,0x186df09f
  407e28:	dec    esp
  407e29:	ss fcmovu st,st(5)
  407e2c:	adc    al,0xd7
  407e2e:	(bad)  [esi+0x6b]
  407e31:	shr    BYTE PTR [esi+0x1facf77a],0xde
  407e38:	daa    
  407e39:	out    0x75,eax
  407e3b:	lods   al,BYTE PTR ds:[esi]
  407e3c:	scas   al,BYTE PTR es:[edi]
  407e3d:	push   eax
  407e3e:	imul   esp,DWORD PTR [edx],0x45
  407e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e42:	mov    esp,0xaea22d32
  407e47:	loop   0x407de0
  407e49:	pop    eax
  407e4a:	jge    0x407e23
  407e4c:	nop
  407e4d:	in     eax,dx
  407e4e:	sbb    al,0x6c
  407e50:	inc    ebp
  407e51:	mov    al,BYTE PTR [ebx]
  407e53:	sbb    al,ch
  407e55:	sbb    DWORD PTR [edi+ebx*4-0x80],ebx
  407e59:	adc    cl,al
  407e5b:	scas   al,BYTE PTR es:[edi]
  407e5c:	cmp    al,0x32
  407e5e:	(bad)  
  407e5f:	bound  ebp,QWORD PTR [eax+0x471328ef]
  407e65:	(bad)  
  407e66:	sub    ebx,DWORD PTR [ebx+0x5881e339]
  407e6c:	add    al,0x20
  407e6e:	loopne 0x407e4f
  407e70:	call   0x4f0d:0x2be05dd5
  407e77:	imul   esp,DWORD PTR [esi+ecx*8],0xfffffff3
  407e7b:	repnz outs dx,DWORD PTR ds:[esi]
  407e7d:	pop    esp
  407e7e:	ja     0x407ebe
  407e80:	xchg   ebx,eax
  407e81:	xor    al,BYTE PTR [esi+ebx*8+0x36]
  407e85:	jecxz  0x407e19
  407e87:	adc    eax,0x9ec47be7
  407e8c:	in     eax,dx
  407e8d:	or     ebp,ebx
  407e8f:	xor    bl,bh
  407e91:	mov    bl,0xf
  407e93:	sub    bl,BYTE PTR [edx+0x3912476]
  407e99:	sbb    eax,0x795e0074
  407e9e:	rcl    BYTE PTR [ebx+0x61],0xe7
  407ea2:	out    0x8b,eax
  407ea4:	nop
  407ea5:	xor    BYTE PTR [eax+0x73bf4fd5],0xd
  407eac:	push   ebp
  407ead:	mov    ah,0x2e
  407eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407eb0:	sub    edi,eax
  407eb2:	pop    esi
  407eb3:	arpl   ax,di
  407eb5:	int3   
  407eb6:	jns    0x407e8d
  407eb8:	nop
  407eb9:	(bad)  
  407eba:	jne    0x407f17
  407ebc:	inc    ecx
  407ebd:	or     ecx,DWORD PTR [edx-0x1d]
  407ec0:	loopne 0x407e44
  407ec2:	repnz xor al,0x1a
  407ec5:	mov    bl,cl
  407ec7:	xchg   edi,eax
  407ec8:	scas   eax,DWORD PTR es:[edi]
  407ec9:	push   ds
  407eca:	js     0x407ed9
  407ecc:	xchg   DWORD PTR [ebx-0x68],esi
  407ecf:	mov    edi,0x79d5780f
  407ed4:	call   0x8da076b4
  407ed9:	sub    al,0xb5
  407edb:	fcomp  DWORD PTR [edi-0x73]
  407ede:	jae    0x407f41
  407ee0:	xchg   ebp,eax
  407ee1:	jg     0x407f57
  407ee3:	and    esp,DWORD PTR [edi+0x68]
  407ee6:	pop    ebp
  407ee7:	lahf   
  407ee8:	repnz arpl ax,cx
  407eeb:	push   esp
  407eec:	or     DWORD PTR [edi-0x77b09bde],0xa54c30bf
  407ef6:	inc    eax
  407ef7:	sar    ebp,cl
  407ef9:	push   es
  407efa:	(bad)  
  407efb:	jmp    FWORD PTR [ebx]
  407efd:	mov    al,ds:0x14c78e1c
  407f02:	lahf   
  407f03:	inc    edx
  407f04:	mov    ds:0x40abc42,eax
  407f09:	imul   esp,DWORD PTR ds:0x2a8adc8b,0xffffffcd
  407f10:	mov    DWORD PTR [esp+esi*8+0x68],edx
  407f14:	jns    0x407ee0
  407f16:	les    esi,FWORD PTR [ecx-0x5d06624e]
  407f1c:	xchg   BYTE PTR [esi-0x6e],dh
  407f1f:	ss inc ebp
  407f21:	in     eax,0x7d
  407f23:	leave  
  407f24:	stc    
  407f25:	or     al,0xce
  407f27:	test   eax,0x28841923
  407f2c:	push   eax
  407f2d:	outs   dx,DWORD PTR ds:[esi]
  407f2e:	test   ecx,esi
  407f30:	cs popf 
  407f32:	in     eax,dx
  407f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f34:	xchg   ebp,eax
  407f35:	imul   ebx,ebx,0xffffff89
  407f38:	mov    eax,ds:0x95471700
  407f3d:	mov    ch,0x56
  407f3f:	in     eax,dx
  407f40:	push   esp
  407f41:	mov    edi,0xf121fbcb
  407f46:	inc    ebx
  407f47:	shr    DWORD PTR [edi+0x18],1
  407f4a:	xchg   edi,eax
  407f4b:	ror    BYTE PTR ds:0x24a689ea,1
  407f51:	sbb    bh,ch
  407f53:	inc    edi
  407f54:	push   esp
  407f55:	jmp    0x407fbf
  407f57:	cmc    
  407f58:	je     0x407f48
  407f5a:	arpl   si,cx
  407f5c:	ss nop
  407f5e:	inc    ebp
  407f5f:	push   ebx
  407f60:	inc    ecx
  407f61:	adc    esi,eax
  407f63:	imul   ebp,edx,0x5b
  407f66:	call   0x2fb3:0x55c960e7
  407f6d:	adc    esp,DWORD PTR [ecx-0x80]
  407f70:	mov    ebp,0x661f9d0a
  407f75:	aaa    
  407f76:	push   0x31
  407f78:	cmp    eax,0x28a8d01
  407f7d:	or     eax,0xbea7ddbd
  407f82:	jbe    0x407f6b
  407f84:	jl     0x407f0f
  407f86:	push   eax
  407f87:	enter  0xdad9,0x83
  407f8b:	test   DWORD PTR ss:[ecx+0x43],0x4282156d
  407f93:	pusha  
  407f94:	inc    esi
  407f95:	out    0x7b,al
  407f97:	pushf  
  407f98:	pusha  
  407f99:	repnz cdq 
  407f9b:	and    eax,0x24ff73d4
  407fa0:	ds mov bl,0xb5
  407fa3:	cmp    DWORD PTR [ebx-0x3849a274],eax
  407fa9:	cmp    BYTE PTR [ebx+0xe],al
  407fac:	jnp    0x407ff8
  407fae:	sbb    BYTE PTR ds:0x3e38f1a7,bh
  407fb4:	call   0x6b5dcd5a
  407fb9:	fldenv [eax-0x22]
  407fbc:	mov    al,ds:0x989073ff
  407fc1:	iret   
  407fc2:	pop    ebx
  407fc3:	lea    edx,[ebx]
  407fc5:	fist   WORD PTR [edx+0x69da1f3f]
  407fcb:	aad    0x4f
  407fcd:	add    eax,0x2968c23c
  407fd2:	mov    ecx,0x4e04175f
  407fd7:	mov    bl,0xcf
  407fd9:	jp     0x407faa
  407fdb:	add    ecx,0xd5c1b88f
  407fe1:	ins    BYTE PTR es:[edi],dx
  407fe2:	push   es
  407fe3:	rcl    BYTE PTR [ecx],cl
  407fe5:	mov    DWORD PTR cs:[edx+0x7317a178],ecx
  407fec:	sub    ebp,esp
  407fee:	stos   BYTE PTR es:[edi],al
  407fef:	test   al,0x2f
  407ff1:	jb     0x408068
  407ff3:	retf   0xeac2
  407ff6:	loopne 0x407ff1
  407ff8:	inc    ebx
  407ff9:	mov    ebx,0xc3336fe1
  407ffe:	daa    
  407fff:	sar    DWORD PTR [edx+0x1c0f9c25],0xdd
  408006:	leave  
  408007:	or     esi,ecx
  408009:	xor    DWORD PTR [ebx+0x469b9138],ecx
  40800f:	sar    BYTE PTR ds:0x7ae10e6c,1
  408015:	push   DWORD PTR [ebx-0x4f]
  408018:	mov    bh,0x96
  40801a:	jl     0x408084
  40801c:	test   eax,0x2f6e9c97
  408021:	push   ecx
  408022:	scas   al,BYTE PTR es:[edi]
  408023:	dec    esi
  408024:	inc    edi
  408025:	cmp    ebx,DWORD PTR [ebp-0x2b946a06]
  40802b:	add    dh,BYTE PTR [ebx+0x79]
  40802e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40802f:	fidiv  DWORD PTR [ebp-0x17]
  408032:	stos   DWORD PTR es:[edi],eax
  408033:	pop    ss
  408034:	pusha  
  408035:	(bad)  
  408036:	arpl   WORD PTR [edi+0x43],dx
  408039:	js     0x408067
  40803b:	sahf   
  40803c:	jle    0x407fd6
  40803e:	xor    al,BYTE PTR [eax+0x59]
  408041:	(bad)  
  408042:	call   0x57e74257
  408047:	stos   DWORD PTR es:[edi],eax
  408048:	jmp    0x407ffb
  40804a:	jg     0x40805f
  40804c:	jecxz  0x4080cc
  40804e:	cmc    
  40804f:	or     BYTE PTR [ecx-0x15],0xb9
  408053:	sub    edx,eax
  408055:	jno    0x408095
  408057:	xlat   BYTE PTR ds:[ebx]
  408058:	lods   eax,DWORD PTR ds:[esi]
  408059:	inc    ebp
  40805a:	xor    al,0x4
  40805c:	ret    
  40805d:	in     eax,0x64
  40805f:	mul    bl
  408061:	in     eax,dx
  408062:	cmp    cl,BYTE PTR [ecx]
  408064:	outs   dx,DWORD PTR ds:[esi]
  408065:	bound  edi,QWORD PTR [edi+0x74]
  408068:	sbb    eax,0x9aff05f0
  40806d:	pop    edi
  40806e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40806f:	pushfw 
  408071:	fist   DWORD PTR [ebp-0x2ad89d11]
  408077:	(bad)  
  408078:	adc    edx,ecx
  40807a:	test   BYTE PTR [ebx-0xf],bh
  40807d:	mov    bl,0x57
  40807f:	pushw  0xffbc
  408082:	sar    esi,0x28
  408085:	popf   
  408086:	jge    0x408045
  408088:	mov    bl,0x95
  40808a:	shr    ebx,cl
  40808c:	test   eax,0x32994060
  408091:	xor    DWORD PTR [ecx-0x52087f51],edx
  408097:	ret    0x5d8f
  40809a:	mov    eax,ds:0xe1890857
  40809f:	or     DWORD PTR [eax],0x791e0600
  4080a5:	imul   DWORD PTR [esi-0x39bdbd9d]
  4080ab:	out    0x60,eax
  4080ad:	jmp    0x166bea05
  4080b2:	add    eax,ebx
  4080b4:	test   eax,0x40465429
  4080b9:	rcl    al,0xf0
  4080bc:	dec    esi
  4080bd:	cmp    al,0x24
  4080bf:	xor    al,0x35
  4080c1:	lds    ebx,FWORD PTR [ebx]
  4080c3:	mov    cl,al
  4080c5:	push   edi
  4080c6:	clc    
  4080c7:	xchg   BYTE PTR [esi-0x353650c9],cl
  4080cd:	inc    eax
  4080ce:	(bad)  [ebx-0x490b853d]
  4080d4:	retf   
  4080d5:	je     0x4080af
  4080d7:	jns    0x408140
  4080d9:	fdiv   QWORD PTR [edx]
  4080db:	mov    ah,0x26
  4080dd:	hlt    
  4080de:	push   0x11
  4080e0:	outs   dx,DWORD PTR ds:[esi]
  4080e1:	xor    BYTE PTR [eax-0x6f0e7b75],bh
  4080e7:	dec    edx
  4080e8:	or     edi,eax
  4080ea:	ins    BYTE PTR es:[edi],dx
  4080eb:	or     esi,esp
  4080ed:	sbb    DWORD PTR [ecx-0x56],eax
  4080f0:	xchg   ebp,eax
  4080f1:	mov    bl,0xf2
  4080f3:	cwde   
  4080f4:	out    dx,eax
  4080f5:	imul   edx,DWORD PTR [eax],0xffffff97
  4080f8:	ins    DWORD PTR es:[edi],dx
  4080f9:	xchg   esi,eax
  4080fa:	ret    0xac31
  4080fd:	dec    esi
  4080fe:	jae    0x4080c6
  408100:	scas   al,BYTE PTR es:[edi]
  408101:	jmp    0x4080f6
  408103:	fs jg  0x408174
  408106:	int    0x6a
  408108:	jns    0x40808c
  40810a:	add    ebp,DWORD PTR [ebp+0x2d]
  40810d:	add    eax,0x95e8c173
  408112:	stos   BYTE PTR es:[edi],al
  408113:	sbb    eax,0x7dcb2711
  408118:	pop    edx
  408119:	cmc    
  40811a:	cld    
  40811b:	sub    ch,ah
  40811d:	pop    edx
  40811e:	in     al,0xeb
  408120:	fwait
  408121:	and    eax,ebp
  408123:	loopne 0x408145
  408125:	push   eax
  408126:	pop    esi
  408127:	mov    ds:0x12eff399,al
  40812c:	fnstsw ax
  40812e:	(bad)  
  40812f:	jae    0x4080b2
  408131:	cmp    eax,0xcc31b02c
  408136:	or     ch,BYTE PTR [edi+0x19]
  408139:	out    dx,eax
  40813a:	lock xor dl,dl
  40813d:	sbb    BYTE PTR [ecx-0x45],dh
  408140:	pop    ds
  408141:	stos   BYTE PTR es:[edi],al
  408142:	pop    ss
  408143:	jecxz  0x40812c
  408145:	mov    ds:0x75f5faf1,eax
  40814a:	jne    0x40812c
  40814c:	aaa    
  40814d:	or     BYTE PTR [ebx-0x7bb164a9],bl
  408153:	les    ecx,FWORD PTR [ecx+ebp*4-0x10]
  408157:	je     0x4081a9
  408159:	mov    bh,BYTE PTR [edx+0x5c]
  40815c:	shl    BYTE PTR [esi+0x6a],0xa2
  408160:	test   DWORD PTR [ecx+0x4d14a48],esi
  408166:	repnz cmp dl,BYTE PTR [edx+0x7d0445c3]
  40816d:	test   eax,0x45a0bd09
  408172:	pop    edx
  408173:	repz push eax
  408175:	repz cdq 
  408177:	hlt    
  408178:	sub    bl,BYTE PTR [ebx]
  40817a:	aas    
  40817b:	pop    es
  40817c:	add    DWORD PTR [esi],0x2bd06640
  408182:	xchg   BYTE PTR [eax],bl
  408184:	dec    esi
  408185:	int    0x2a
  408187:	push   es
  408188:	aad    0xdf
  40818a:	dec    ebp
  40818b:	cmp    eax,0xebc9d870
  408190:	sbb    al,0x61
  408192:	ja     0x4081a6
  408194:	mov    ds:0x3c7e40fb,eax
  408199:	or     eax,0x3f8c67a3
  40819e:	scas   al,BYTE PTR es:[edi]
  40819f:	mov    edx,0xa5a9cd9f
  4081a4:	and    bh,BYTE PTR fs:[esi-0x28]
  4081a8:	mov    DWORD PTR [eax],esi
  4081aa:	lods   al,BYTE PTR ds:[esi]
  4081ab:	cmp    bh,BYTE PTR [eax-0x4e]
  4081ae:	and    BYTE PTR [edx+0x4a],dh
  4081b1:	nop
  4081b2:	mov    ch,bh
  4081b4:	in     al,dx
  4081b5:	xchg   edx,eax
  4081b6:	aam    0xde
  4081b8:	shl    eax,0xad
  4081bb:	mov    bl,0x28
  4081bd:	mov    ah,0x57
  4081bf:	popa   
  4081c0:	aad    0xbc
  4081c2:	mov    ?,ecx
  4081c4:	jg     0x408151
  4081c6:	dec    ebp
  4081c7:	dec    ebp
  4081c8:	or     dl,bl
  4081ca:	addr16 loope 0x4081e3
  4081cd:	cwde   
  4081ce:	mov    ebx,0x24cafc0
  4081d3:	das    
  4081d4:	stos   DWORD PTR es:[edi],eax
  4081d5:	dec    ebp
  4081d6:	aaa    
  4081d7:	xor    esi,edi
  4081d9:	jle    0x4081f4
  4081db:	xor    al,BYTE PTR [ebp+0x15]
  4081de:	or     DWORD PTR [edi+0x4],0x4c
  4081e2:	mov    edi,ds
  4081e4:	dec    edi
  4081e5:	dec    esp
  4081e6:	xchg   esp,eax
  4081e7:	sbb    eax,0xca30a34a
  4081ec:	stos   BYTE PTR es:[edi],al
  4081ed:	dec    esp
  4081ee:	fcomp  st(5)
  4081f0:	mov    ?,WORD PTR [esi-0x56a7535]
  4081f6:	cwde   
  4081f7:	jecxz  0x408183
  4081f9:	push   ebp
  4081fa:	push   cs
  4081fb:	or     al,bh
  4081fd:	leave  
  4081fe:	or     DWORD PTR [ebx-0x6c8c2c23],ecx
  408204:	mov    DWORD PTR [ebx],ecx
  408206:	pop    ebp
  408207:	mov    bl,0xf4
  408209:	adc    esp,edi
  40820b:	cwde   
  40820c:	sahf   
  40820d:	cmp    eax,0x7b28624d
  408212:	adc    cl,0x97
  408215:	out    dx,al
  408216:	mov    DWORD PTR ds:0xe312a94f,eax
  40821c:	mov    esi,0xf5c9e267
  408221:	inc    esp
  408222:	nop
  408223:	je     0x4081b2
  408225:	aaa    
  408226:	inc    ebp
  408227:	sahf   
  408228:	leave  
  408229:	cmp    DWORD PTR [eax+ecx*1-0x1d],esp
  40822d:	fstp   QWORD PTR [eax-0x5b790b9a]
  408233:	push   ebx
  408234:	adc    DWORD PTR [ebx],0x807071bd
  40823a:	pusha  
  40823b:	jecxz  0x4081d1
  40823d:	das    
  40823e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40823f:	int3   
  408240:	pop    edx
  408241:	pusha  
  408242:	adc    al,BYTE PTR [edi]
  408244:	mov    ds:0xfbc2b72f,al
  408249:	cmp    cl,BYTE PTR [ebp+ecx*8-0x2db8638a]
  408250:	sbb    DWORD PTR [eax],ebp
  408252:	mov    ebp,0xd53555ae
  408257:	jns    0x4082ba
  408259:	out    0x38,al
  40825b:	and    BYTE PTR [ecx+edx*2+0xf],0x1f
  408260:	mov    cl,0x3d
  408262:	pop    edx
  408263:	inc    ebx
  408264:	clc    
  408265:	add    al,0x28
  408267:	call   0x6da831a5
  40826c:	push   esi
  40826d:	shr    dh,cl
  40826f:	xlat   BYTE PTR ds:[ebx]
  408270:	mov    edi,DWORD PTR [eax+0x5b]
  408273:	or     DWORD PTR [eax-0x70c3b18c],esp
  408279:	mov    bh,0xf3
  40827b:	mov    ds,WORD PTR [ebx+0x42]
  40827e:	pushf  
  40827f:	(bad)  
  408280:	int    0xc1
  408282:	(bad)  
  408283:	ds xchg ebp,eax
  408285:	daa    
  408286:	test   DWORD PTR ds:0xa33a0c4,eax
  40828c:	outs   dx,BYTE PTR ds:[esi]
  40828d:	xlat   BYTE PTR ds:[ebx]
  40828e:	arpl   WORD PTR [ecx],bp
  408290:	mov    fs,WORD PTR [esi]
  408292:	test   al,0xeb
  408294:	add    DWORD PTR [ecx],eax
  408296:	dec    esp
  408297:	cmp    BYTE PTR [edx-0x60],al
  40829a:	xchg   ebx,eax
  40829b:	xchg   ecx,eax
  40829c:	mov    WORD PTR [eax+0x4c],?
  40829f:	pop    esp
  4082a0:	test   BYTE PTR [ecx+ebp*1-0x23362d66],bh
  4082a7:	and    eax,0x7e857fcf
  4082ac:	sahf   
  4082ad:	sub    al,bh
  4082af:	dec    ebx
  4082b0:	push   esi
  4082b1:	dec    esi
  4082b2:	xor    DWORD PTR [ecx-0x641308f4],ebp
  4082b8:	in     al,0xa6
  4082ba:	push   eax
  4082bb:	mov    dl,0xf6
  4082bd:	xchg   ecx,eax
  4082be:	mov    al,0xf5
  4082c0:	jg     0x408262
  4082c2:	mov    cl,0x3c
  4082c4:	pop    edx
  4082c5:	jecxz  0x4082ef
  4082c7:	jmp    0x40828c
  4082c9:	mov    cl,0x90
  4082cb:	jmp    0x6d6:0x21daed97
  4082d2:	iret   
  4082d3:	sub    al,0xfd
  4082d5:	mov    esp,?
  4082d7:	and    DWORD PTR [ebp+0x38],0x603c0cfc
  4082de:	push   esi
  4082df:	pushw  0x3e55
  4082e3:	ins    DWORD PTR es:[edi],dx
  4082e4:	fild   WORD PTR [eax]
  4082e6:	mov    cl,0xc7
  4082e8:	cld    
  4082e9:	inc    BYTE PTR [esp+eiz*2-0x37]
  4082ed:	loope  0x4082f7
  4082ef:	pop    edi
  4082f0:	jg     0x4082ae
  4082f2:	add    esi,DWORD PTR [edx]
  4082f4:	sahf   
  4082f5:	outs   dx,BYTE PTR ds:[esi]
  4082f6:	jae    0x40827d
  4082f8:	cmc    
  4082f9:	cdq    
  4082fa:	cmp    dh,ah
  4082fc:	scas   eax,DWORD PTR es:[edi]
  4082fd:	lods   al,BYTE PTR ds:[esi]
  4082fe:	dec    ebx
  4082ff:	push   ecx
  408300:	push   ebp
  408301:	push   esp
  408302:	test   al,0xcf
  408304:	out    dx,al
  408305:	(bad)  
  408306:	cwde   
  408307:	adc    DWORD PTR [edi-0x3e],esp
  40830a:	daa    
  40830b:	std    
  40830c:	xor    bh,BYTE PTR [edx-0x7]
  40830f:	and    al,0x33
  408311:	xor    esi,DWORD PTR [edi-0x3afc8397]
  408317:	adc    DWORD PTR [ebx+edx*8],edx
  40831a:	or     eax,0xf5a58469
  40831f:	sub    eax,0x37a65ad9
  408324:	lahf   
  408325:	daa    
  408326:	(bad)  
  408327:	clc    
  408328:	mov    esp,0x612d23db
  40832d:	cmp    edx,DWORD PTR [edx]
  40832f:	pop    ss
  408330:	or     esi,edi
  408332:	cmp    ch,BYTE PTR [edi+0x12]
  408335:	daa    
  408336:	cmc    
  408337:	pop    esi
  408338:	push   eax
  408339:	js     0x408380
  40833b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40833c:	inc    ebx
  40833d:	out    dx,eax
  40833e:	bound  edx,QWORD PTR [ebx+0x7a668628]
  408344:	hlt    
  408345:	ins    BYTE PTR es:[edi],dx
  408346:	popf   
  408347:	inc    edi
  408348:	push   ecx
  408349:	je     0x40831d
  40834b:	sahf   
  40834c:	aaa    
  40834d:	ins    BYTE PTR es:[edi],dx
  40834e:	mov    eax,ds:0x5a5eb9d8
  408353:	leave  
  408354:	loope  0x4083be
  408356:	cmp    eax,0x4e9318a1
  40835b:	(bad)  
  40835c:	push   edx
  40835d:	mov    edx,0x95e020a3
  408362:	lods   al,BYTE PTR ds:[esi]
  408363:	mov    edx,ebx
  408365:	jne    0x408326
  408367:	dec    ebp
  408368:	jbe    0x4083aa
  40836a:	mov    ebx,edx
  40836c:	aad    0x54
  40836e:	ss fwait
  408370:	int    0xa4
  408372:	ror    DWORD PTR [edi+0x4fed5d72],cl
  408378:	mov    ds:0xf2142c5,eax
  40837d:	add    al,cl
  40837f:	adc    bh,BYTE PTR [eax-0x3d]
  408382:	sbb    al,0x1d
  408384:	inc    ebx
  408385:	pop    edx
  408386:	lds    eax,FWORD PTR [edx+0x262298c3]
  40838c:	(bad)  
  40838e:	test   DWORD PTR [ebx],0xf33681a
  408394:	inc    ebp
  408395:	fisub  DWORD PTR [esi-0x5e]
  408398:	ret    
  408399:	sbb    eax,0x2fa07b35
  40839e:	sub    cl,dl
  4083a0:	dec    edx
  4083a1:	or     DWORD PTR [edi],edx
  4083a3:	push   es
  4083a4:	es push cs
  4083a6:	fisubr DWORD PTR [ebp+edi*2+0xbacb2c]
  4083ad:	mov    bh,0xfa
  4083af:	std    
  4083b0:	fcomp  DWORD PTR [edi+0x7d79af7e]
  4083b6:	ja     0x408415
  4083b8:	cld    
  4083b9:	mov    ecx,0x2eddbc97
  4083be:	cwde   
  4083bf:	cli    
  4083c0:	xchg   edi,eax
  4083c1:	leave  
  4083c2:	ds xor eax,0xb60daabc
  4083c8:	or     eax,0x4fc97746
  4083cd:	stc    
  4083ce:	mov    dh,0x5a
  4083d0:	lahf   
  4083d1:	ds hlt 
  4083d3:	mov    bh,0x34
  4083d5:	inc    edi
  4083d6:	stos   DWORD PTR es:[edi],eax
  4083d7:	hlt    
  4083d8:	pushf  
  4083d9:	hlt    
  4083da:	mov    cl,0x29
  4083dc:	mov    ecx,0x84849625
  4083e1:	mov    edi,DWORD PTR [edi+0xa]
  4083e4:	shr    DWORD PTR [edi-0x4d],1
  4083e7:	pushf  
  4083e8:	add    BYTE PTR ds:0x30865788,ah
  4083ee:	inc    edx
  4083ef:	and    DWORD PTR [ebx+0x4c],edx
  4083f2:	jl     0x4083b8
  4083f4:	inc    edi
  4083f5:	inc    esp
  4083f6:	dec    esi
  4083f7:	adc    DWORD PTR [ecx],ebp
  4083f9:	in     al,0x2c
  4083fb:	mov    ds:0x10e58c79,eax
  408400:	mov    dl,0x4c
  408402:	test   DWORD PTR [edi],ebp
  408404:	mov    al,0xf0
  408406:	test   DWORD PTR [eax+edx*1-0x1],ecx
  40840a:	xor    eax,ebx
  40840c:	les    edx,FWORD PTR [ecx+0x26]
  40840f:	mov    al,ds:0x593acba2
  408414:	pop    edx
  408415:	mov    edx,0x5120cbca
  40841a:	adc    eax,0xca0b5c67
  40841f:	pop    eax
  408420:	mov    dh,0x2d
  408422:	in     al,dx
  408423:	mov    edx,DWORD PTR [esi+0x7f9a7e96]
  408429:	das    
  40842a:	mov    ah,0x6f
  40842c:	dec    edx
  40842d:	outs   dx,BYTE PTR ds:[esi]
  40842e:	xor    DWORD PTR [eax-0x1eb494c5],esp
  408434:	add    al,0xc7
  408436:	and    al,0xcc
  408438:	enter  0xc1d9,0xb4
  40843c:	xchg   ebp,eax
  40843d:	jb     0x408406
  40843f:	clc    
  408440:	call   0xb886ef47
  408445:	loopne 0x40848e
  408447:	mov    ebx,0x94dc9c28
  40844c:	out    dx,al
  40844d:	add    DWORD PTR [ebx],esp
  40844f:	stos   BYTE PTR es:[edi],al
  408450:	js     0x40846e
  408452:	sbb    esp,edi
  408454:	test   eax,0x2c7846b6
  408459:	push   eax
  40845a:	daa    
  40845b:	xor    BYTE PTR [edx+0x6c],bl
  40845e:	mov    ds:0x2c83e8ee,al
  408463:	xchg   edi,ecx
  408465:	enter  0x3f36,0x9b
  408469:	jge    0x4084a2
  40846b:	cmp    DWORD PTR ds:0xbaf8c60a,edi
  408471:	sbb    eax,0x6a5aba8c
  408476:	int3   
  408477:	sub    al,0x93
  408479:	arpl   bx,si
  40847b:	(bad)  
  40847d:	cmp    DWORD PTR ss:[ecx],edx
  408480:	mov    bl,0x32
  408482:	jecxz  0x408495
  408484:	leave  
  408485:	inc    ebx
  408486:	shl    BYTE PTR [edx+0x5e],1
  408489:	lahf   
  40848a:	test   DWORD PTR [edi],edi
  40848c:	shl    BYTE PTR [ecx],1
  40848e:	pop    edi
  40848f:	aam    0xa8
  408491:	fcom   DWORD PTR [ecx+0x6d7c27b]
  408497:	xor    al,dl
  408499:	data16 adc BYTE PTR [edx-0x3f67fd99],dl
  4084a0:	pop    ecx
  4084a1:	(bad)  
  4084a2:	and    DWORD PTR [ebp+0x1bf2f216],eax
  4084a8:	(bad)  
  4084aa:	les    edi,FWORD PTR [ecx+eax*8+0x4b]
  4084ae:	xchg   esp,eax
  4084af:	(bad)  
  4084b0:	pushf  
  4084b1:	mov    bl,0x7b
  4084b3:	rcl    BYTE PTR [ecx-0x30da6dce],cl
  4084b9:	fsub   QWORD PTR [ebp+0xa]
  4084bc:	or     ecx,DWORD PTR [ecx]
  4084be:	dec    ebx
  4084bf:	arpl   WORD PTR [edx+0x839bf07],di
  4084c5:	jg     0x40845d
  4084c7:	sub    al,0x6c
  4084c9:	push   ecx
  4084ca:	inc    edi
  4084cb:	popf   
  4084cc:	sahf   
  4084cd:	dec    eax
  4084ce:	lods   al,BYTE PTR ds:[esi]
  4084cf:	push   es
  4084d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084d1:	dec    ebx
  4084d2:	inc    edx
  4084d3:	pop    ss
  4084d4:	imul   eax,DWORD PTR [ecx-0x25],0xa094e3aa
  4084db:	popf   
  4084dc:	dec    ecx
  4084dd:	mov    al,ds:0xa4f2e5c7
  4084e2:	adc    DWORD PTR [edx+0x5d],ebp
  4084e5:	mov    cl,0xd7
  4084e7:	outs   dx,DWORD PTR ds:[esi]
  4084e8:	iret   
  4084e9:	es aaa 
  4084eb:	add    ch,dl
  4084ed:	scas   al,BYTE PTR es:[edi]
  4084ee:	sbb    DWORD PTR [edi-0x64fdce2e],esi
  4084f4:	fcomip st,st(7)
  4084f6:	dec    eax
  4084f7:	cdq    
  4084f8:	(bad)  
  4084f9:	sbb    ebx,DWORD PTR [esp+edx*4-0x5aec57cb]
  408500:	jns    0x408543
  408502:	scas   al,BYTE PTR es:[edi]
  408503:	add    DWORD PTR gs:[eax],ecx
  408506:	jg     0x408548
  408508:	add    eax,0x6b876c3
  40850d:	pop    esi
  40850e:	dec    eax
  40850f:	outs   dx,DWORD PTR ds:[esi]
  408510:	jp     0x408577
  408512:	mov    esi,DWORD PTR [esp+ecx*1-0x273ae8b9]
  408519:	inc    esp
  40851a:	imul   esi,eax,0x9f1eeaa3
  408520:	mov    BYTE PTR [edx-0x6ba9e49a],0x3f
  408527:	jecxz  0x4085a0
  408529:	or     cl,0x76
  40852c:	dec    esp
  40852d:	adc    eax,DWORD PTR [esi+0x22]
  408530:	loopne 0x4085aa
  408532:	sub    al,0x1c
  408534:	adc    ebp,DWORD PTR [edx+0x60]
  408537:	call   0x8bc4b4a6
  40853c:	inc    eax
  40853d:	or     DWORD PTR [esi],edi
  40853f:	pop    ss
  408540:	pop    ebx
  408541:	xor    eax,0x28e385f
  408546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408547:	xor    eax,0x99afd3d4
  40854c:	cmp    ebp,esp
  40854e:	jnp    0x40855e
  408550:	lods   eax,DWORD PTR ds:[esi]
  408551:	ja     0x40855c
  408553:	fs sbb eax,0xb1b0a812
  408559:	cmp    cl,0xdf
  40855c:	sub    DWORD PTR [ebp-0x50],edi
  40855f:	scas   al,BYTE PTR es:[edi]
  408560:	test   ecx,esi
  408562:	out    0xd5,al
  408564:	cld    
  408565:	push   ecx
  408566:	dec    eax
  408567:	ss or  ah,bh
  40856a:	mov    eax,ds:0x3176d1a9
  40856f:	or     DWORD PTR [ebx],edx
  408571:	pop    ds
  408572:	sub    al,0x22
  408574:	or     al,0x59
  408576:	mov    DWORD PTR [edi],esi
  408578:	in     al,0xdb
  40857a:	jmp    0x40850b
  40857c:	outs   dx,DWORD PTR ds:[esi]
  40857d:	xchg   DWORD PTR [edi+0x1e],esi
  408580:	and    esp,DWORD PTR [ecx]
  408582:	mov    dl,0x51
  408584:	lods   eax,DWORD PTR ds:[esi]
  408585:	jbe    0x4085d5
  408587:	xchg   esp,eax
  408588:	aas    
  408589:	aas    
  40858a:	loope  0x40858e
  40858c:	daa    
  40858d:	out    dx,eax
  40858e:	xor    eax,0x862b8673
  408593:	push   cs
  408594:	sahf   
  408595:	push   ss
  408596:	out    dx,al
  408597:	adc    ebx,DWORD PTR [esi+edx*2]
  40859a:	test   edx,eax
  40859c:	inc    edi
  40859d:	das    
  40859e:	mov    ecx,0xe52a4c03
  4085a3:	pushf  
  4085a4:	out    dx,al
  4085a5:	inc    edi
  4085a6:	add    BYTE PTR [ebx-0x1ed5cd66],0x6f
  4085ad:	xchg   ecx,eax
  4085ae:	call   0xda44:0x46095213
  4085b5:	scas   eax,DWORD PTR es:[edi]
  4085b6:	cmp    BYTE PTR [ebx+0x326b0e05],bl
  4085bc:	les    eax,FWORD PTR [edi-0x390983eb]
  4085c2:	popa   
  4085c3:	daa    
  4085c4:	dec    eax
  4085c5:	call   0xc4abe979
  4085ca:	mov    edi,0x69a76cf2
  4085cf:	in     al,0x20
  4085d1:	inc    eax
  4085d2:	mov    bl,0xe1
  4085d4:	clc    
  4085d5:	mov    esp,0x63226eb2
  4085da:	in     al,dx
  4085db:	pop    ss
  4085dc:	add    al,0xe
  4085de:	clc    
  4085df:	fadd   st,st(3)
  4085e1:	xor    BYTE PTR [ecx+0x27],ch
  4085e4:	int    0x26
  4085e6:	ror    ebx,cl
  4085e8:	shl    BYTE PTR [eax+edi*2-0x127c1a6],0x58
  4085f0:	mov    bh,0x10
  4085f2:	popa   
  4085f3:	adc    eax,edi
  4085f5:	xor    eax,0xd1f0eeaf
  4085fa:	sub    BYTE PTR ds:0x2ce4924a,bl
  408600:	fwait
  408601:	pop    ss
  408602:	dec    esp
  408603:	in     al,0x47
  408605:	xor    DWORD PTR [esi+edx*2-0x4ddcce1d],esp
  40860c:	test   al,0x15
  40860e:	ss scas al,BYTE PTR es:[edi]
  408610:	jo     0x40866f
  408612:	int    0x7
  408614:	shl    BYTE PTR [ecx-0x80],0x44
  408618:	pop    esi
  408619:	sbb    BYTE PTR [ebx],cl
  40861b:	daa    
  40861c:	lods   eax,DWORD PTR ds:[esi]
  40861d:	nop
  40861e:	sub    eax,0x3ca0f4f0
  408623:	jecxz  0x4085a7
  408625:	xor    edx,esi
  408627:	pop    ds
  408628:	(bad)  
  408629:	in     eax,0xd0
  40862b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40862c:	dec    esp
  40862d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862e:	call   0x8ebdd48a
  408633:	nop
  408634:	sahf   
  408635:	push   ss
  408636:	lods   eax,DWORD PTR ds:[esi]
  408637:	(bad)  
  408638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408639:	dec    esp
  40863a:	jle    0x4085be
  40863c:	lods   al,BYTE PTR cs:[esi]
  40863e:	lock repz adc esi,edi
  408642:	mov    eax,ds:0x5fb4f1cb
  408647:	pop    esi
  408648:	sbb    DWORD PTR [edx-0x5582a750],ebp
  40864e:	inc    eax
  40864f:	sub    ecx,DWORD PTR [ebx]
  408651:	call   0x358d:0x1e59d9c
  408658:	mov    cl,0x8f
  40865a:	mov    esi,0xe5107887
  40865f:	mov    ebx,0x6ecb40f4
  408664:	in     al,0x15
  408666:	sbb    eax,0x2383468f
  40866b:	sbb    edx,DWORD PTR [edx-0x3e]
  40866e:	jmp    0x408688
  408670:	push   ebx
  408671:	or     BYTE PTR [ebx],ch
  408673:	pop    esp
  408674:	adc    al,0x89
  408676:	rol    al,0xda
  408679:	jmp    0x6578f9fa
  40867e:	into   
  40867f:	xchg   esi,eax
  408680:	xchg   edx,eax
  408681:	rcr    BYTE PTR [edi+ebx*8],1
  408684:	das    
  408685:	fst    st(0)
  408687:	or     eax,0x97ae5c6f
  40868c:	test   DWORD PTR [ecx-0x18],0xce1daa05
  408693:	jg     0x40870e
  408695:	dec    esi
  408696:	inc    eax
  408697:	jmp    0x408713
  408699:	repz jmp 0x37d779ba
  40869f:	sti    
  4086a0:	neg    ecx
  4086a2:	ficom  DWORD PTR [ecx-0x5324a080]
  4086a8:	cld    
  4086a9:	sbb    dl,cl
  4086ab:	push   ebp
  4086ac:	fdivrp st(7),st
  4086ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086af:	loopne 0x40863f
  4086b1:	je     0x40866f
  4086b3:	rcr    BYTE PTR [esi+edx*4+0x6269ad3d],cl
  4086ba:	out    dx,eax
  4086bb:	pushf  
  4086bc:	mov    ebp,0xbb319492
  4086c1:	mov    fs,esi
  4086c3:	or     BYTE PTR [ebx],ch
  4086c5:	test   BYTE PTR [edi],ch
  4086c7:	mov    WORD PTR [ecx+0x1],fs
  4086ca:	sub    DWORD PTR [esp+eax*1-0xa],esi
  4086ce:	add    dl,BYTE PTR [edx-0x34]
  4086d1:	enter  0xdd1d,0xae
  4086d5:	adc    eax,DWORD PTR [esi+0x730af217]
  4086db:	adc    eax,ebp
  4086dd:	sahf   
  4086de:	pop    es
  4086df:	frstor [edx-0x15a58cbd]
  4086e5:	imul   edx,DWORD PTR [edi+0x61d338df],0x70
  4086ec:	nop
  4086ed:	fisub  WORD PTR [eax]
  4086ef:	mov    WORD PTR [esi],ds
  4086f1:	mov    ebp,DWORD PTR [esi]
  4086f3:	ins    DWORD PTR es:[edi],dx
  4086f4:	cmc    
  4086f5:	sub    ah,BYTE PTR [ebp+0x18]
  4086f8:	sbb    ebx,DWORD PTR [ebx-0x30]
  4086fb:	adc    DWORD PTR [ebp+0x12],0xaa7466c8
  408702:	mov    al,0x7f
  408704:	adc    BYTE PTR [ebx+edx*2],dh
  408707:	sahf   
  408708:	xor    edi,esi
  40870a:	inc    ebp
  40870b:	test   al,0xb2
  40870d:	or     ebp,DWORD PTR [ecx+0x2e6a7d5c]
  408713:	retf   
  408714:	es push esp
  408716:	ins    DWORD PTR es:[edi],dx
  408717:	xor    esp,eax
  408719:	hlt    
  40871a:	scas   eax,DWORD PTR es:[edi]
  40871b:	add    eax,DWORD PTR [edi]
  40871d:	dec    ebx
  40871e:	xchg   BYTE PTR [edx+0x53],ah
  408721:	shr    eax,cl
  408723:	fcmovnu st,st(5)
  408725:	adc    bl,BYTE PTR [edi+eax*4+0x1f43ce20]
  40872c:	pop    esp
  40872d:	xor    dl,ah
  40872f:	popa   
  408730:	pop    ecx
  408731:	jmp    0xfb6bc6bc
  408736:	(bad)  
  408737:	pop    edx
  408738:	push   ebp
  408739:	xor    edi,edi
  40873b:	sbb    BYTE PTR [ebx+eiz*2+0x2142441],dh
  408742:	xor    dh,BYTE PTR [edi+eiz*8+0x2e]
  408746:	sbb    al,0x8e
  408748:	into   
  408749:	clc    
  40874a:	mov    edi,0x217e9cc9
  40874f:	xchg   ebp,eax
  408750:	adc    eax,0x910b2bab
  408755:	ds xor ch,dl
  408758:	xchg   ebp,eax
  408759:	xor    al,0x55
  40875b:	xchg   al,dh
  40875d:	fld    st(6)
  40875f:	jg     0x4087a5
  408761:	aaa    
  408762:	(bad)  
  408763:	jno    0x408750
  408765:	and    eax,0xb1866a49
  40876a:	cld    
  40876b:	(bad)  
  40876c:	aas    
  40876d:	xchg   esi,eax
  40876e:	cmp    ebx,DWORD PTR [eax]
  408770:	shr    BYTE PTR [ebp+0x52],cl
  408773:	stos   BYTE PTR es:[edi],al
  408774:	push   ebx
  408775:	fdivr  DWORD PTR [edi+0x53]
  408778:	add    ebx,ecx
  40877a:	sub    edi,DWORD PTR [edi-0x4c]
  40877d:	iret   
  40877e:	adc    dh,BYTE PTR [esi]
  408780:	(bad)  
  408782:	stos   BYTE PTR es:[edi],al
  408783:	jbe    0x4087ce
  408785:	add    BYTE PTR [ebp+0x434e5a7d],dl
  40878b:	jge    0x4087ee
  40878d:	dec    edx
  40878e:	mov    dl,0xfe
  408790:	stos   DWORD PTR es:[edi],eax
  408791:	adc    al,0xb2
  408793:	scas   eax,DWORD PTR es:[edi]
  408794:	(bad)  
  408795:	fcom   DWORD PTR [esi+ecx*1-0x37cfbac5]
  40879c:	ins    BYTE PTR es:[edi],dx
  40879d:	(bad)  
  40879e:	in     al,dx
  40879f:	into   
  4087a0:	push   ebp
  4087a1:	mov    WORD PTR [eax],cs
  4087a3:	mov    ch,0xd5
  4087a5:	pandn  mm5,QWORD PTR [esi+eax*2]
  4087a9:	jp     0x4087ae
  4087ab:	cmp    BYTE PTR [ecx-0x37],ch
  4087ae:	(bad)  [esp+ebx*2]
  4087b1:	(bad)  
  4087b2:	fcomi  st,st(2)
  4087b4:	adc    al,bl
  4087b6:	and    BYTE PTR [eax-0x3b3db5fd],bl
  4087bc:	xchg   edi,eax
  4087bd:	jae    0x4087b9
  4087bf:	and    DWORD PTR [edx],edx
  4087c1:	lahf   
  4087c2:	loopne 0x4087ad
  4087c4:	cmp    eax,ebx
  4087c6:	jmp    0x408764
  4087c8:	pop    edi
  4087c9:	cli    
  4087ca:	jmp    0xd00d:0x1e900d52
  4087d1:	pushf  
  4087d2:	sahf   
  4087d3:	add    BYTE PTR [ebx+ecx*8],al
  4087d6:	jo     0x40877a
  4087d8:	sar    ebp,0x27
  4087db:	sbb    ah,dh
  4087dd:	xchg   esp,eax
  4087de:	popa   
  4087df:	leave  
  4087e0:	xchg   edi,eax
  4087e1:	test   bh,0xe0
  4087e4:	jbe    0x40880e
  4087e6:	and    al,0x87
  4087e8:	xor    cl,BYTE PTR [esi-0x56]
  4087eb:	jl     0x408791
  4087ed:	mov    ecx,DWORD PTR [eax]
  4087ef:	lods   al,BYTE PTR ds:[esi]
  4087f0:	pop    ebx
  4087f1:	mov    ds:0xce2139f1,eax
  4087f6:	aam    0xc7
  4087f8:	loope  0x40885c
  4087fa:	mov    eax,0x5ca05ca1
  4087ff:	lods   al,BYTE PTR ds:[esi]
  408800:	enter  0xe370,0x96
  408804:	rcr    BYTE PTR [ebx-0x72],0x32
  408808:	(bad)  
  408809:	(bad)  
  40880a:	shr    ebx,1
  40880c:	push   esi
  40880d:	and    al,0x8b
  40880f:	jb     0x408791
  408811:	imul   ebx,DWORD PTR [ecx-0x1c4db6b2],0x38
  408818:	out    dx,eax
  408819:	sar    cl,1
  40881b:	ja     0x408824
  40881d:	mov    ah,0x91
  40881f:	out    0x55,al
  408821:	mov    cl,dh
  408823:	in     eax,dx
  408824:	rcr    DWORD PTR [edi+0x25],0x64
  408828:	mov    al,0xfd
  40882a:	or     ch,dl
  40882c:	sbb    ecx,ebx
  40882e:	jo     0x408843
  408830:	jns    0x4087c6
  408832:	cmp    ch,BYTE PTR [edx]
  408834:	sti    
  408835:	or     eax,0xd6519e82
  40883a:	push   esi
  40883b:	or     bl,cl
  40883d:	push   esi
  40883e:	sti    
  40883f:	(bad)  [ecx]
  408841:	cmp    edi,DWORD PTR [edx+0x18]
  408844:	addr16 leave 
  408846:	inc    esi
  408847:	leave  
  408848:	test   al,0xb0
  40884a:	in     al,0x38
  40884c:	retf   
  40884d:	xchg   ecx,eax
  40884e:	std    
  40884f:	jmp    0x78c9c599
  408854:	pop    ecx
  408855:	xchg   edi,eax
  408856:	icebp  
  408857:	loope  0x408842
  408859:	xchg   edi,eax
  40885a:	sub    eax,DWORD PTR [edx]
  40885c:	jnp    0x408873
  40885e:	into   
  40885f:	js     0x4087e4
  408861:	sub    al,0x83
  408863:	sub    ch,BYTE PTR ds:0x8106f67f
  408869:	lods   al,BYTE PTR ds:[esi]
  40886a:	xor    eax,0x129217f4
  40886f:	pop    ss
  408870:	int3   
  408871:	ins    DWORD PTR es:[edi],dx
  408872:	outs   dx,BYTE PTR ds:[esi]
  408873:	in     al,dx
  408874:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  408876:	repz sbb eax,0xd4ba2f24
  40887c:	psubw  mm3,QWORD PTR [eax]
  40887f:	rcr    BYTE PTR [ecx-0x6336a177],0x61
  408886:	inc    eax
  408887:	mov    dl,0xe4
  408889:	daa    
  40888a:	cmp    DWORD PTR [edx],eax
  40888c:	xchg   ecx,eax
  40888d:	shl    BYTE PTR [ecx-0x9],0x16
  408891:	mov    ds:0x17d6da38,al
  408896:	popa   
  408897:	mov    dh,0xfc
  408899:	(bad)  
  40889a:	jae    0x4088f0
  40889c:	mov    ebp,0x23e1bf7c
  4088a1:	outs   dx,BYTE PTR ds:[esi]
  4088a2:	and    ecx,0xffffffae
  4088a5:	mov    ecx,DWORD PTR [esi+0x3a141373]
  4088ab:	lahf   
  4088ac:	sub    DWORD PTR [ecx+0x2b],ebp
  4088af:	sbb    esi,DWORD PTR [edx]
  4088b1:	cdq    
  4088b2:	and    DWORD PTR [ebx+eax*4-0x14b700bf],esi
  4088b9:	push   ebx
  4088ba:	dec    ebp
  4088bb:	es xchg edx,eax
  4088bd:	lock sbb eax,0x98d60e3b
  4088c3:	mov    ds:0x9ac6ea43,eax
  4088c8:	add    DWORD PTR [ecx+0x74],esp
  4088cb:	popf   
  4088cc:	cmp    DWORD PTR es:[ebx+0x7ba2e6c0],ecx
  4088d3:	pop    es
  4088d4:	xchg   ebx,eax
  4088d5:	jne    0x408922
  4088d7:	add    al,0x4d
  4088d9:	ret    0x518d
  4088dc:	jb     0x4088d8
  4088de:	mov    cl,0x33
  4088e0:	jno    0x4088f7
  4088e2:	push   esp
  4088e3:	(bad)  [edx+eiz*2]
  4088e6:	pop    ss
  4088e7:	pop    edi
  4088e8:	or     eax,0xa387d621
  4088ed:	js     0x40887f
  4088ef:	sub    BYTE PTR [eax+0x40737117],dh
  4088f5:	jge    0x408974
  4088f7:	mov    al,ds:0xea7f3d7d
  4088fc:	cmp    esp,esi
  4088fe:	xlat   BYTE PTR ds:[ebx]
  4088ff:	ret    0x99bb
  408902:	fmul   DWORD PTR [ecx]
  408904:	aad    0x55
  408906:	mov    ah,0xd
  408908:	pop    ecx
  408909:	and    al,0xbd
  40890b:	push   0x65
  40890d:	bnd jp 0x40896a
  408910:	fidivr DWORD PTR gs:[edi+0x63]
  408914:	pushf  
  408915:	shr    BYTE PTR [eax-0x28],0x18
  408919:	fidiv  DWORD PTR [esi-0x6a]
  40891c:	adc    BYTE PTR [edx-0x39],bl
  40891f:	call   0xf47e:0x6447fcc8
  408926:	mov    eax,ds:0xf71f095
  40892b:	fidivr WORD PTR [edx+0x6b]
  40892e:	mov    ebp,0xbc1f17f7
  408933:	fld    TBYTE PTR [edi+0x21]
  408936:	ins    DWORD PTR es:[edi],dx
  408937:	call   0x62aee991
  40893c:	jle    0x408979
  40893e:	nop
  40893f:	mov    ebx,DWORD PTR [ebx]
  408941:	pop    ecx
  408942:	repz fs cli 
  408945:	loop   0x40895c
  408947:	mov    dl,0xa9
  408949:	and    DWORD PTR [eax+0x9],ebp
  40894c:	inc    esi
  40894d:	xchg   esi,eax
  40894e:	and    al,0x6f
  408950:	cmp    dl,BYTE PTR [ecx-0x39]
  408953:	dec    esi
  408954:	mov    al,0x1
  408956:	xchg   esp,eax
  408957:	lods   al,BYTE PTR ds:[esi]
  408958:	adc    edi,DWORD PTR [ebx-0x40]
  40895b:	jno    0x4089bb
  40895d:	sbb    bh,BYTE PTR [ecx+0x6a2c8713]
  408963:	cwde   
  408964:	add    DWORD PTR [ecx+edi*2+0x5],0x26
  408969:	popa   
  40896a:	(bad)  
  40896b:	es push es
  40896d:	ja     0x40890c
  40896f:	scas   al,BYTE PTR es:[edi]
  408970:	push   cs
  408971:	sbb    eax,DWORD PTR [esi]
  408973:	aad    0x9a
  408975:	sbb    dh,BYTE PTR [edx+ebp*2]
  408978:	cli    
  408979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40897a:	sbb    eax,0xf7e8b05d
  40897f:	cs test ax,0x7652
  408984:	loope  0x40895f
  408986:	iret   
  408987:	mov    al,ds:0xb1ed19ac
  40898c:	and    BYTE PTR [edi+0x2e0eb4d5],ch
  408992:	sbb    eax,0x5fd1ba7f
  408997:	pusha  
  408998:	xor    ch,BYTE PTR [ebx+0x6817f12b]
  40899e:	sub    ch,ah
  4089a0:	jbe    0x40893f
  4089a2:	jmp    0xcc11:0x39e34e52
  4089a9:	(bad)  [esi+0x768f36db]
  4089af:	inc    esi
  4089b0:	push   ss
  4089b1:	mov    eax,0xfc418d9c
  4089b6:	ins    BYTE PTR es:[edi],dx
  4089b7:	mov    ah,BYTE PTR [edx]
  4089b9:	call   0xe955:0xf3ec41fb
  4089c0:	xchg   esi,eax
  4089c1:	scas   al,BYTE PTR es:[edi]
  4089c2:	(bad)  
  4089c3:	fidiv  DWORD PTR cs:[edi]
  4089c6:	aad    0x6d
  4089c8:	or     cl,bl
  4089ca:	cmp    eax,0x66c49945
  4089cf:	nop
  4089d0:	shl    DWORD PTR [ecx+0x20223dbf],1
  4089d6:	push   ebp
  4089d7:	leave  
  4089d8:	and    eax,ecx
  4089da:	push   edx
  4089db:	jno    0x4089a8
  4089dd:	cmc    
  4089de:	add    eax,0xf6127c51
  4089e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089e4:	dec    ebp
  4089e5:	outs   dx,DWORD PTR ds:[esi]
  4089e6:	ss retf 
  4089e8:	imul   ecx,eax,0x77
  4089eb:	call   0x44e656f4
  4089f0:	push   esi
  4089f1:	inc    ebp
  4089f2:	stos   DWORD PTR es:[edi],eax
  4089f3:	adc    eax,0x3cdfc2ff
  4089f8:	jnp    0x4089cd
  4089fa:	pop    esp
  4089fb:	pusha  
  4089fc:	aam    0xe
  4089fe:	cmp    bh,dl
  408a00:	ins    BYTE PTR es:[edi],dx
  408a01:	loope  0x408a3b
  408a03:	xor    BYTE PTR [ebp-0x56],ch
  408a06:	cmp    dl,al
  408a08:	or     edi,DWORD PTR [eax+0x48cb2ed6]
  408a0e:	stos   BYTE PTR es:[edi],al
  408a0f:	xchg   esi,eax
  408a10:	shl    DWORD PTR [edi+0x21a845d0],1
  408a16:	push   edi
  408a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a18:	cmp    ch,BYTE PTR [ebp+ebp*4-0x5f]
  408a1c:	out    dx,eax
  408a1d:	leave  
  408a1e:	mov    eax,esp
  408a20:	cld    
  408a21:	cli    
  408a22:	ret    
  408a23:	aad    0x90
  408a25:	shl    edi,cl
  408a27:	cmp    BYTE PTR [ebx],ah
  408a29:	fild   QWORD PTR [edx]
  408a2b:	pop    eax
  408a2c:	loope  0x4089f6
  408a2e:	ss mov esi,0xa12501a6
  408a34:	pop    ecx
  408a35:	(bad)  
  408a36:	leave  
  408a37:	test   al,0x81
  408a39:	les    edx,FWORD PTR [edi-0x28]
  408a3c:	es retf 
  408a3e:	push   ss
  408a3f:	(bad)
  408a42:	sub    eax,0x27952e51
  408a47:	je     0x4089d0
  408a49:	mov    edi,0xe5299237
  408a4e:	scas   eax,DWORD PTR es:[edi]
  408a4f:	add    al,0x46
  408a51:	sahf   
  408a52:	pop    esp
  408a53:	add    edx,eax
  408a55:	dec    ebx
  408a56:	mov    ecx,0x2e7de889
  408a5b:	in     al,dx
  408a5c:	test   al,0x4e
  408a5e:	ins    BYTE PTR es:[edi],dx
  408a5f:	retf   
  408a60:	mov    dh,0x4b
  408a63:	daa    
  408a64:	jne    0x408a3c
  408a66:	jecxz  0x408a1a
  408a68:	aaa    
  408a69:	stos   DWORD PTR es:[edi],eax
  408a6a:	(bad)  [eax+edx*4]
  408a6d:	(bad)  
  408a6e:	sahf   
  408a6f:	cmp    ebp,esi
  408a71:	xchg   edi,eax
  408a72:	(bad)
  408a78:	mov    dh,cl
  408a7a:	stos   DWORD PTR es:[edi],eax
  408a7b:	enter  0x78fe,0x19
  408a7f:	push   ecx
  408a80:	mov    ebx,0xe8642f96
  408a85:	cmp    eax,0x95f2a0d6
  408a8a:	jecxz  0x408a3d
  408a8c:	fimul  WORD PTR [eax-0x6a]
  408a8f:	xor    bl,dh
  408a91:	push   ecx
  408a92:	jo     0x408abc
  408a94:	jo     0x408ad6
  408a96:	pop    ecx
  408a97:	aad    0xe8
  408a99:	outs   dx,BYTE PTR ds:[esi]
  408a9a:	mov    ds:0x6cd754f7,al
  408a9f:	pop    ss
  408aa0:	mov    eax,0xf71617f9
  408aa5:	push   cs
  408aa6:	sbb    dh,dh
  408aa8:	inc    edx
  408aa9:	lods   eax,DWORD PTR ds:[esi]
  408aaa:	jmp    0x9cebdcd2
  408aaf:	cmc    
  408ab0:	inc    esp
  408ab1:	shl    BYTE PTR [ecx-0x7243c401],1
  408ab7:	mov    ?,esi
  408ab9:	fdiv   DWORD PTR [ebx-0x36]
  408abc:	sub    DWORD PTR [eax],0xffffffb6
  408abf:	xor    al,0xb4
  408ac1:	dec    ebp
  408ac2:	aas    
  408ac3:	adc    eax,0xbd0a554e
  408ac8:	adc    DWORD PTR [ebx+0x5e],edx
  408acb:	add    eax,DWORD PTR [ebp+0x639aa959]
  408ad1:	xor    ch,BYTE PTR [ecx-0x8]
  408ad4:	les    ebx,FWORD PTR [edx+0x5c1d0b92]
  408ada:	mov    WORD PTR [ecx],?
  408adc:	loope  0x408af9
  408ade:	mov    ah,0xf
  408ae0:	popf   
  408ae1:	mov    cl,0x8e
  408ae3:	xchg   DWORD PTR [ecx],edx
  408ae5:	dec    edx
  408ae6:	mov    ecx,0x4a4cbb12
  408aeb:	add    eax,0x43cd6bc8
  408af0:	mov    edx,cs
  408af2:	bound  esp,QWORD PTR es:[esi-0x6c32db5e]
  408af9:	jg     0x408b66
  408afb:	adc    esi,DWORD PTR [edx+0x4390f5e9]
  408b01:	test   eax,0xdc297c49
  408b06:	add    eax,0x19f56bf3
  408b0b:	mov    cl,0xc7
  408b0d:	sub    ah,al
  408b0f:	cs pop edx
  408b11:	adc    ebx,0x12
  408b14:	test   al,0x78
  408b16:	aas    
  408b17:	call   0x819a741
  408b1c:	hlt    
  408b1d:	pop    DWORD PTR [ecx-0x7f]
  408b20:	add    al,0xad
  408b22:	pushf  
  408b23:	push   ecx
  408b24:	push   eax
  408b25:	mov    eax,ds:0x3fccf100
  408b2a:	dec    esp
  408b2b:	push   ecx
  408b2c:	xchg   esp,eax
  408b2d:	xchg   edx,eax
  408b2e:	aam    0x32
  408b30:	inc    esp
  408b31:	mov    ebp,0x2e4a6549
  408b36:	(bad)  
  408b37:	mov    ecx,0xbf6007cd
  408b3c:	pop    ds
  408b3d:	and    al,0x1c
  408b3f:	adc    al,0xff
  408b41:	fisubr WORD PTR [ecx+0x8]
  408b44:	mov    dh,0xc7
  408b46:	stos   DWORD PTR es:[edi],eax
  408b47:	mov    ecx,0x583b3559
  408b4c:	xchg   esi,eax
  408b4d:	sbb    eax,0xc688fdc5
  408b52:	jmp    0x408af0
  408b54:	ss dec edx
  408b56:	(bad)  
  408b57:	fadd   DWORD PTR [ebx]
  408b59:	(bad)  
  408b5a:	out    0xc1,al
  408b5c:	inc    eax
  408b5d:	xor    eax,0x3fc16bfb
  408b62:	je     0x408b76
  408b64:	mov    dl,0x1d
  408b66:	push   es
  408b67:	dec    ecx
  408b68:	jge    0x408b25
  408b6a:	or     esp,DWORD PTR [eax]
  408b6c:	neg    esi
  408b6e:	pop    ss
  408b6f:	add    ah,BYTE PTR [ecx]
  408b71:	dec    edx
  408b72:	ffree  st(3)
  408b74:	mov    ch,BYTE PTR [edx-0x45]
  408b77:	mov    ecx,0x58c76766
  408b7c:	das    
  408b7d:	inc    edi
  408b7e:	xor    DWORD PTR [edx],eax
  408b80:	out    dx,al
  408b81:	jns    0x408bb6
  408b83:	bound  esp,QWORD PTR [edi+0x37]
  408b86:	popf   
  408b87:	xchg   ch,ch
  408b89:	mov    ds:0xef2e0e63,al
  408b8e:	push   edi
  408b8f:	sub    BYTE PTR [eax],bl
  408b91:	mov    ebx,0xcd1461d6
  408b96:	sbb    eax,0x691e46db
  408b9b:	out    dx,al
  408b9c:	cdq    
  408b9d:	ret    
  408b9e:	push   ebp
  408b9f:	or     al,0x42
  408ba1:	adc    eax,0xc11d01ec
  408ba6:	in     al,0x79
  408ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ba9:	daa    
  408baa:	xor    BYTE PTR [edx-0x2771069b],dl
  408bb0:	sub    dl,BYTE PTR [ecx+0x20]
  408bb3:	(bad)  
  408bb4:	imul   ebx,DWORD PTR [ecx],0xc9406b77
  408bba:	daa    
  408bbb:	pop    esi
  408bbc:	mov    WORD PTR [eax],gs
  408bbe:	cmp    eax,0x7a26676b
  408bc3:	adc    DWORD PTR [edi],esi
  408bc5:	push   ebx
  408bc6:	dec    esi
  408bc7:	xor    DWORD PTR [ebp+0x1b],0xc342ea
  408bce:	fnstsw WORD PTR [edi]
  408bd0:	mov    BYTE PTR [ebx-0x7a],dl
  408bd3:	mov    ds:0x6e73fc5a,eax
  408bd8:	pop    esp
  408bd9:	inc    eax
  408bda:	or     edi,DWORD PTR [edi+eax*4]
  408bdd:	cli    
  408bde:	fisubr DWORD PTR [esi-0x40]
  408be1:	icebp  
  408be2:	dec    edi
  408be3:	or     eax,0x25438a7c
  408be8:	jl     0x408b88
  408bea:	rol    DWORD PTR [ecx+0x4e26362d],0x21
  408bf1:	and    eax,0xcff2bf9d
  408bf6:	arpl   WORD PTR [edi+0x9],si
  408bf9:	mov    ?,WORD PTR [ecx]
  408bfb:	push   ecx
  408bfc:	jns    0x408c02
  408bfe:	ret    
  408bff:	dec    edi
  408c00:	scas   eax,DWORD PTR es:[edi]
  408c01:	lahf   
  408c02:	fisttp WORD PTR [eax+0x680e5597]
  408c08:	xor    eax,0xb615f4bc
  408c0d:	lea    eax,[eax+ecx*1+0x3272f5]
  408c14:	mov    DWORD PTR [ebp+0x8],eax
  408c17:	mov    eax,DWORD PTR [ebp-0xc]
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0x54c332a
  408c4f:	add    ebx,DWORD PTR [eax+ebx*1+0x5e0c8383]
  408c56:	add    DWORD PTR [ebx-0x5c829e9e],0x65
  408c5d:	jo     0x408be8
  408c5f:	cdq    
  408c60:	sbb    ah,bl
  408c62:	sub    al,0x72
  408c64:	xor    ch,bl
  408c66:	sbb    ah,BYTE PTR [ebx+eiz*4+0x666f2e71]
  408c6d:	add    BYTE PTR [edi+0x7d2cd09f],0x2f
  408c74:	jo     0x408ccd
  408c76:	(bad)  
  408c77:	push   edi
  408c78:	mov    dh,0x32
  408c7a:	mov    DWORD PTR [edi-0x38],edi
  408c7d:	cmp    al,0x46
  408c7f:	xchg   ebp,eax
  408c80:	mov    WORD PTR [eax+0x54],?
  408c83:	ret    
  408c84:	dec    edi
  408c85:	fwait
  408c86:	dec    esi
  408c87:	ret    0xd7ae
  408c8a:	sbb    eax,0xc3f0f40f
  408c8f:	adc    eax,0x6a429757
  408c94:	xchg   BYTE PTR [ecx+ebx*2+0x3af7d28f],al
  408c9b:	sar    DWORD PTR [edx+edi*8+0x4d],0xd7
  408ca0:	les    eax,FWORD PTR [eax+0x6e394117]
  408ca6:	test   DWORD PTR [edi],ebx
  408ca8:	and    DWORD PTR [esi],esp
  408caa:	call   0x41e4:0xa7401ce8
  408cb1:	mov    edi,0x5dcc0b8a
  408cb6:	pusha  
  408cb7:	push   ss
  408cb8:	inc    edx
  408cb9:	sub    BYTE PTR [ebp+0x5da1d084],cl
  408cbf:	cmp    eax,0x51d789ee
  408cc4:	mov    esp,DWORD PTR [ebx]
  408cc6:	dec    edi
  408cc7:	sbb    DWORD PTR [edi-0x20b42401],ebp
  408ccd:	fcmovu st,st(0)
  408ccf:	rcr    BYTE PTR ds:0xec3be64c,0xf2
  408cd6:	xor    bh,BYTE PTR [esi+0x45]
  408cd9:	sbb    BYTE PTR [ecx],ch
  408cdb:	mov    ecx,0xe953fa16
  408ce0:	test   BYTE PTR [ecx-0x2f],dl
  408ce3:	pop    ss
  408ce4:	fld    TBYTE PTR [ebp-0x55b8da8a]
  408cea:	mov    DWORD PTR [ecx+0x44],esp
  408ced:	fadd   st(0),st
  408cef:	add    BYTE PTR [edi],al
  408cf1:	jp     0x408d67
  408cf3:	adc    cl,BYTE PTR [ebp+0x64d0a103]
  408cf9:	mov    eax,0x4d4ab223
  408cfe:	mov    ch,0x5d
  408d00:	pop    ebx
  408d01:	sbb    edx,ebp
  408d03:	sbb    BYTE PTR [eax+0x37],al
  408d06:	mov    WORD PTR [edx],fs
  408d08:	fistp  WORD PTR ds:0x90660796
  408d0e:	cmp    eax,0xff11fde3
  408d13:	add    esp,DWORD PTR [edx-0x398ed04e]
  408d19:	cmp    edi,ebp
  408d1b:	push   0x64
  408d1d:	aam    0xe3
  408d1f:	pop    ebp
  408d20:	fwait
  408d21:	mov    ebp,0x319497da
  408d26:	out    dx,eax
  408d27:	cmp    bh,0x90
  408d2a:	jne    0x408cd5
  408d2c:	into   
  408d2d:	mov    dh,0x7c
  408d2f:	push   edi
  408d30:	lods   eax,DWORD PTR ds:[esi]
  408d31:	jo     0x408d50
  408d33:	jmp    0x15b0bc33
  408d38:	(bad)
  408d3b:	mov    esp,0xebc58222
  408d40:	iret   
  408d41:	xchg   edx,eax
  408d42:	fcomp  QWORD PTR [ebx-0x28785005]
  408d48:	mov    esi,0x60e408d2
  408d4d:	and    ebx,ecx
  408d4f:	pop    eax
  408d50:	inc    eax
  408d51:	lods   eax,DWORD PTR ds:[esi]
  408d52:	add    ah,BYTE PTR [eax+eiz*8+0x9]
  408d56:	mov    ecx,0xad15527b
  408d5b:	adc    cl,BYTE PTR ds:[edx+0xea88ceb]
  408d62:	xchg   dh,ch
  408d64:	mov    al,0xe6
  408d66:	pop    edx
  408d67:	nop
  408d68:	sbb    BYTE PTR [esi+0x136b72db],bl
  408d6e:	je     0x408d63
  408d70:	ins    BYTE PTR es:[edi],dx
  408d71:	call   0xf863:0x61ce544
  408d78:	jb     0x408d71
  408d7a:	or     DWORD PTR [ebx],0x2
  408d7d:	mov    bh,0x8
  408d7f:	daa    
  408d80:	and    BYTE PTR [esi-0x62],bl
  408d83:	mov    bl,0xc6
  408d85:	and    DWORD PTR [esi],ebx
  408d87:	(bad)  
  408d88:	push   eax
  408d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d8a:	hlt    
  408d8b:	cmp    esi,DWORD PTR [eax]
  408d8d:	ret    0xc494
  408d90:	sbb    dl,BYTE PTR [eax-0x20cad17d]
  408d96:	dec    eax
  408d97:	xor    ecx,0x80e92ca0
  408d9d:	mov    ds:0xb3ccf152,al
  408da2:	push   0xffffffc9
  408da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408da5:	mov    ebp,0xc9d1fe09
  408daa:	test   eax,0x21b4c67f
  408daf:	mov    ebp,0x12271d2a
  408db4:	pushf  
  408db5:	shr    BYTE PTR [edx-0x4c43b3b2],1
  408dbb:	scas   al,BYTE PTR es:[edi]
  408dbc:	iret   
  408dbd:	scas   eax,DWORD PTR es:[edi]
  408dbe:	shr    BYTE PTR [edx+0x18],cl
  408dc1:	jmp    0x408dae
  408dc3:	shl    DWORD PTR [eax-0x6c7732fb],cl
  408dc9:	cmp    al,0x1a
  408dcb:	jnp    0x408dde
  408dcd:	adc    DWORD PTR [edi+0x5e],edi
  408dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dd1:	mov    ebp,0xc76b60a
  408dd6:	mov    dl,0x26
  408dd8:	in     eax,dx
  408dd9:	fadd   st(0),st
  408ddb:	xor    edx,esi
  408ddd:	das    
  408dde:	xor    esi,esi
  408de0:	jg     0x408da0
  408de2:	out    0x68,al
  408de4:	jmp    0x408dfe
  408de6:	mov    dl,0x37
  408de8:	sbb    ebx,DWORD PTR [edi+eax*8]
  408deb:	repz inc eax
  408ded:	mov    eax,0xcaad069f
  408df2:	test   BYTE PTR [eax+0x73d12c2e],0xf
  408df9:	pop    ebx
  408dfa:	jbe    0x408e0b
  408dfc:	pop    ecx
  408dfd:	adc    bh,BYTE PTR [edx+0x33e9b280]
  408e03:	jbe    0x408dda
  408e05:	cmp    al,0x59
  408e07:	dec    ecx
  408e08:	sbb    dh,BYTE PTR [ebp+0x1a]
  408e0b:	(bad)  
  408e0c:	jg     0x408da1
  408e0e:	sbb    BYTE PTR [ebx+0x55],al
  408e11:	jbe    0x408e61
  408e13:	pop    edx
  408e14:	add    eax,0xd67e878a
  408e19:	(bad)  
  408e1a:	arpl   WORD PTR [ecx],bp
  408e1c:	das    
  408e1d:	lock sbb al,BYTE PTR [edi+0x3ad062f4]
  408e24:	hlt    
  408e25:	outs   dx,DWORD PTR ds:[esi]
  408e26:	sub    DWORD PTR [ebx+ecx*2+0xb7691b8],edi
  408e2d:	push   edx
  408e2e:	sub    ah,cl
  408e30:	sbb    al,0x58
  408e32:	lock (bad) 
  408e34:	aad    0x6b
  408e36:	scas   al,BYTE PTR es:[edi]
  408e37:	xchg   edx,eax
  408e38:	ins    BYTE PTR es:[edi],dx
  408e39:	jmp    0xd5ab:0x9d9ce9f5
  408e40:	inc    ecx
  408e41:	sbb    esp,ebp
  408e43:	ins    DWORD PTR es:[edi],dx
  408e44:	enter  0x30ba,0x8d
  408e48:	cmp    bl,BYTE PTR [ebx]
  408e4a:	jne    0x408e74
  408e4c:	xor    bh,bh
  408e4e:	aaa    
  408e4f:	outs   dx,DWORD PTR ds:[esi]
  408e50:	xor    bh,BYTE PTR [ebx]
  408e52:	ror    DWORD PTR [ecx],0x4e
  408e55:	mov    eax,ds:0xf9e58a
  408e5a:	jp     0x408e4b
  408e5c:	mov    cs,WORD PTR [ebp-0x71]
  408e5f:	mov    bh,0x32
  408e61:	outs   dx,BYTE PTR ds:[esi]
  408e62:	fist   DWORD PTR [esi-0x62b66ce1]
  408e68:	iret   
  408e69:	dec    edi
  408e6a:	add    BYTE PTR [eax+edx*2-0x7d7370ae],0x7a
  408e72:	xor    BYTE PTR [ebx+0x10d236f7],ch
  408e78:	stos   DWORD PTR es:[edi],eax
  408e79:	shl    DWORD PTR [edi+ecx*1-0x46],1
  408e7d:	push   0x4
  408e7f:	add    eax,0x5e94c564
  408e84:	mov    ds:0x4d99104c,al
  408e89:	push   cs
  408e8a:	rcr    DWORD PTR [eax+esi*1+0x5a],1
  408e8e:	pop    es
  408e8f:	pusha  
  408e90:	jae    0x408efe
  408e92:	xchg   ebp,eax
  408e93:	jp     0x408ee1
  408e95:	xor    ebx,eax
  408e97:	aad    0x1
  408e99:	mov    BYTE PTR [ebx],0x85
  408e9c:	mov    dh,0x9f
  408e9e:	hlt    
  408e9f:	dec    eax
  408ea0:	mov    eax,0x8a37b764
  408ea5:	sub    ch,bh
  408ea7:	and    al,0x63
  408ea9:	std    
  408eaa:	push   esp
  408eab:	cmp    DWORD PTR [eax+esi*1+0x36173874],ebp
  408eb2:	(bad)  
  408eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eb5:	pusha  
  408eb6:	cmp    bh,0xa0
  408eb9:	mov    edi,0x74cbc2e3
  408ebe:	aam    0xe0
  408ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ec1:	retf   
  408ec2:	push   0x4a
  408ec4:	addr16 mov dh,0xa8
  408ec7:	ret    
  408ec8:	jbe    0x408e8a
  408eca:	jnp    0x408e5c
  408ecc:	gs and al,0x13
  408ecf:	test   eax,ebp
  408ed1:	shr    DWORD PTR [ebx-0x66],1
  408ed4:	sbb    eax,0x50d99c9a
  408ed9:	daa    
  408eda:	inc    edi
  408edb:	cmc    
  408edc:	xor    eax,0x73f35ff9
  408ee1:	inc    ecx
  408ee2:	sbb    BYTE PTR [edi-0x4ab45a51],ah
  408ee8:	jns    0x408f46
  408eea:	test   eax,esp
  408eec:	push   es
  408eed:	iret   
  408eee:	call   0x7c688d88
  408ef3:	lahf   
  408ef4:	or     eax,0xf24437bd
  408ef9:	dec    ebx
  408efa:	popa   
  408efb:	xchg   edi,eax
  408efc:	(bad)  
  408efd:	ja     0x408f35
  408eff:	fsubrp st(2),st
  408f01:	mov    ecx,0xa82ea971
  408f06:	push   ss
  408f07:	mov    ch,0xf6
  408f09:	mov    al,0x16
  408f0b:	mov    ebp,0xb1fac725
  408f10:	push   ecx
  408f11:	test   al,0x9e
  408f13:	xor    DWORD PTR [edx+0x8b86b6d],edx
  408f19:	push   edx
  408f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f1b:	pop    edx
  408f1c:	pop    ebp
  408f1d:	aas    
  408f1e:	scas   eax,DWORD PTR es:[edi]
  408f1f:	lods   eax,DWORD PTR ds:[esi]
  408f20:	test   al,0x1f
  408f22:	repz ds inc eax
  408f25:	push   esp
  408f26:	xor    BYTE PTR [edi],ah
  408f28:	xchg   ebp,eax
  408f29:	add    DWORD PTR [eax-0x64],ebx
  408f2c:	xchg   DWORD PTR [edi+ebp*1-0x3f48dbad],edi
  408f33:	jmp    0x2f69:0x34d1069e
  408f3a:	pusha  
  408f3b:	push   es
  408f3c:	cmp    edi,ecx
  408f3e:	add    BYTE PTR [esi+0x2c],ah
  408f41:	mov    ch,0xed
  408f43:	fwait
  408f44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f45:	int    0x13
  408f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f48:	inc    ebx
  408f49:	mov    dh,0xf0
  408f4b:	jle    0x408ed4
  408f4d:	or     al,0x8f
  408f4f:	lods   eax,DWORD PTR ds:[esi]
  408f50:	bnd jle 0x408fad
  408f53:	dec    edx
  408f54:	or     eax,0x6a0fad80
  408f59:	cmp    al,0x7a
  408f5b:	dec    ecx
  408f5c:	inc    edx
  408f5d:	and    ebx,0xe4cb757c
  408f63:	sbb    ecx,ecx
  408f65:	fld    st(5)
  408f67:	ret    0xd852
  408f6a:	xchg   ebx,eax
  408f6b:	js     0x408f0c
  408f6d:	pop    esp
  408f6e:	pop    esp
  408f6f:	jmp    0xa270c546
  408f74:	(bad)  
  408f75:	and    al,0x8b
  408f77:	mov    esp,0x78bc9dca
  408f7c:	dec    eax
  408f7d:	retf   0xdc31
  408f80:	pusha  
  408f81:	imul   ebp,DWORD PTR [eax+eax*2-0x3593b484],0x741b0f6b
  408f8c:	dec    eax
  408f8d:	mov    ds:0xf60d8c61,al
  408f92:	pushf  
  408f93:	jno    0x408f6b
  408f95:	cmp    al,0x3e
  408f97:	adc    edx,edx
  408f99:	scas   al,BYTE PTR es:[edi]
  408f9a:	push   edi
  408f9b:	fcmovnbe st,st(3)
  408f9d:	int    0x40
  408f9f:	and    BYTE PTR [eax],al
  408fa1:	repnz xchg ebx,eax
  408fa3:	jae    0x408f75
  408fa5:	mov    ebx,0xc91f3195
  408faa:	lea    eax,[ecx]
  408fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fad:	add    DWORD PTR [eax-0x34],edx
  408fb0:	cmc    
  408fb1:	repnz cmp al,0xdb
  408fb4:	xor    BYTE PTR [ebp-0x7b],ah
  408fb7:	mov    ch,0xe8
  408fb9:	jp     0x408fce
  408fbb:	xor    al,0x3
  408fbd:	(bad)  
  408fbe:	xor    BYTE PTR [edi-0x5dd2ab3],dl
  408fc4:	ins    DWORD PTR es:[edi],dx
  408fc5:	mov    al,ds:0x66b4a5fd
  408fca:	xor    al,0x6f
  408fcc:	push   esi
  408fcd:	retf   
  408fce:	add    eax,DWORD PTR ds:0xa686ab4d
  408fd4:	xor    BYTE PTR [ebp+ebx*8-0x3],0x8b
  408fd9:	dec    edi
  408fda:	out    dx,eax
  408fdb:	push   ecx
  408fdc:	in     al,0x9d
  408fde:	and    eax,0x8b622d66
  408fe3:	js     0x408ff0
  408fe5:	dec    ecx
  408fe6:	adc    edx,edi
  408fe8:	push   es
  408fe9:	push   edx
  408fea:	(bad)  
  408feb:	out    dx,eax
  408fec:	xchg   ebx,eax
  408fed:	mov    bh,cl
  408fef:	fsubr  DWORD PTR [esi]
  408ff1:	pop    esp
  408ff2:	shl    BYTE PTR [edx],cl
  408ff4:	(bad)
  408ff7:	rol    edi,0xc4
  408ffa:	xor    BYTE PTR [ecx-0x33],bh
  408ffd:	and    BYTE PTR [esi],ch
  408fff:	or     al,0xe3
  409001:	push   eax
  409002:	sbb    eax,0x4a2f92d4
  409007:	scas   eax,DWORD PTR es:[edi]
  409008:	inc    ebp
  409009:	sbb    eax,0x7e30b5dc
  40900e:	mov    ?,WORD PTR [ebx-0x45b59df6]
  409014:	cmp    DWORD PTR [edx],esp
  409016:	mov    al,0x5c
  409018:	and    eax,0x54432ca
  40901d:	iret   
  40901e:	dec    edx
  40901f:	into   
  409020:	sar    al,0x1e
  409023:	daa    
  409024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409025:	(bad)  
  409026:	stos   DWORD PTR es:[edi],eax
  409027:	into   
  409028:	lock cwde 
  40902a:	aad    0x9b
  40902c:	add    DWORD PTR [ecx-0x63],edi
  40902f:	pop    es
  409030:	outs   dx,DWORD PTR ds:[esi]
  409031:	inc    eax
  409032:	shl    BYTE PTR [esi+ecx*2],1
  409035:	mov    DWORD PTR ds:0xac2298ed,edx
  40903b:	pop    edx
  40903c:	and    DWORD PTR [esp+edx*1+0x6c],esi
  409040:	dec    ecx
  409041:	stc    
  409042:	add    ebp,DWORD PTR [ecx+0x10]
  409045:	xchg   DWORD PTR ds:0xd3e7cbe,edx
  40904b:	and    dl,cl
  40904d:	iret   
  40904e:	test   al,0xd8
  409050:	mov    ds:0x28a06fda,al
  409055:	push   es
  409056:	push   esi
  409057:	xor    eax,0x877d1744
  40905c:	pop    ds
  40905d:	sbb    al,0x2b
  40905f:	lods   eax,DWORD PTR ds:[esi]
  409060:	fs pop ecx
  409062:	popa   
  409063:	push   cs
  409064:	test   al,0x4c
  409066:	scas   al,BYTE PTR es:[edi]
  409067:	sti    
  409068:	cmp    eax,0x6f9855bb
  40906d:	sbb    BYTE PTR es:[esi+0x29],cl
  409071:	jnp    0x409059
  409073:	mov    ds:0xf046724c,eax
  409078:	(bad)  
  40907a:	push   ds
  40907b:	sbb    DWORD PTR [eax+0x50],0xffffffca
  40907f:	repz out dx,al
  409081:	sub    edi,esp
  409083:	dec    esp
  409084:	push   ebx
  409085:	push   ss
  409086:	cmp    dl,al
  409088:	into   
  409089:	(bad)  
  40908c:	(bad)  [ecx+edx*8]
  40908f:	add    al,0x8d
  409091:	lea    ebp,[eax]
  409093:	add    DWORD PTR [ecx],0x1a158c20
  409099:	jmp    0x83:0x9fd7f880
  4090a0:	mov    al,0x2f
  4090a2:	sbb    al,0x8f
  4090a4:	add    eax,0x17b74a7e
  4090a9:	outs   dx,BYTE PTR ds:[esi]
  4090aa:	sub    al,0x2d
  4090ac:	jmp    0x6086:0x1411fb7f
  4090b3:	gs xchg esp,eax
  4090b5:	adc    eax,0xb9909098
  4090ba:	test   al,0x43
  4090bc:	aam    0x3e
  4090be:	sub    al,0x59
  4090c0:	ret    
  4090c1:	lods   eax,DWORD PTR ds:[esi]
  4090c2:	cwde   
  4090c3:	adc    al,0x8d
  4090c5:	add    dl,BYTE PTR [esp+edx*8+0x64b7c5b2]
  4090cc:	scas   eax,DWORD PTR es:[edi]
  4090cd:	jle    0x4090ca
  4090cf:	xchg   edi,eax
  4090d0:	sub    dl,0x34
  4090d3:	lock js 0x409108
  4090d6:	test   eax,0x835e32ec
  4090db:	mov    edx,0x55b51ec5
  4090e0:	xlat   BYTE PTR ds:[ebx]
  4090e1:	jle    0x40908d
  4090e3:	mov    eax,ds:0x747cee4d
  4090e8:	fstp   DWORD PTR [ebx]
  4090ea:	mov    ecx,0x950bd115
  4090ef:	leave  
  4090f0:	pop    eax
  4090f1:	xor    al,0x35
  4090f3:	xor    al,0x9f
  4090f5:	cmc    
  4090f6:	js     0x409082
  4090f8:	adc    eax,0x500d506a
  4090fd:	dec    edi
  4090fe:	ret    0x8e72
  409101:	in     al,0xae
  409103:	jbe    0x409137
  409105:	fild   DWORD PTR [edx+0x6a0437cb]
  40910b:	push   edx
  40910c:	push   ds
  40910d:	pop    ebx
  40910e:	fbstp  TBYTE PTR [ecx+0x10]
  409111:	test   BYTE PTR [ebp-0x71],0x2d
  409115:	add    DWORD PTR [ecx+0x14],ebp
  409118:	jno    0x409164
  40911a:	push   ebx
  40911b:	arpl   si,dx
  40911d:	push   0x16f0427d
  409122:	xchg   ebx,eax
  409123:	dec    ecx
  409124:	push   esp
  409125:	cmc    
  409126:	bound  esp,QWORD PTR [ebp+0xa1b6c43]
  40912c:	mov    ecx,0x433cc495
  409131:	test   al,0x55
  409133:	xor    DWORD PTR [edx+0x22],esi
  409136:	ret    0xe796
  409139:	test   dh,al
  40913b:	clc    
  40913c:	add    al,bh
  40913e:	cmp    esi,0x4717d9ad
  409144:	jns    0x4090dd
  409146:	(bad)  
  409147:	push   ebx
  409148:	sbb    DWORD PTR [edi-0x4fa3963],edi
  40914e:	out    0xc1,eax
  409150:	cmp    eax,ecx
  409152:	int    0x91
  409154:	ja     0x4090db
  409156:	sbb    BYTE PTR [ebx],cl
  409158:	cmp    BYTE PTR [esi+0x2408538f],dh
  40915e:	xchg   ebx,eax
  40915f:	shl    BYTE PTR [ecx-0x45],0xc0
  409163:	xchg   edi,eax
  409164:	(bad)  
  409165:	icebp  
  409166:	popf   
  409167:	xchg   esi,eax
  409168:	cmp    DWORD PTR [edx+0x26],ecx
  40916b:	push   ecx
  40916c:	and    BYTE PTR [edi-0x54fab4fc],0xa5
  409173:	pushf  
  409174:	xchg   cl,bl
  409176:	mov    bl,0x68
  409178:	mov    eax,0x4f5b46e5
  40917d:	mov    bl,0x75
  40917f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409180:	jle    0x40917c
  409182:	cmp    BYTE PTR [edi],ch
  409184:	sub    bh,BYTE PTR [ebp+0x665db020]
  40918a:	push   es
  40918b:	sub    BYTE PTR [esi+edi*4-0x1b2b0b6f],ah
  409192:	adc    eax,0x5a1cb66a
  409197:	xchg   BYTE PTR [ecx-0x403c36e5],dl
  40919d:	push   esi
  40919e:	or     DWORD PTR [esi+0x3fa7dcd7],edi
  4091a4:	sbb    bh,ch
  4091a6:	adc    eax,DWORD PTR [eax]
  4091a8:	jae    0x409203
  4091aa:	mov    ecx,0x412f0b5
  4091af:	div    DWORD PTR [esi+0x3a]
  4091b2:	cmp    al,0x87
  4091b4:	jle    0x409218
  4091b6:	ins    DWORD PTR es:[edi],dx
  4091b7:	mov    eax,?
  4091b9:	aam    0xee
  4091bb:	stc    
  4091bc:	dec    ecx
  4091bd:	xchg   edi,eax
  4091be:	in     al,0x6f
  4091c0:	test   al,0xd
  4091c2:	pop    esp
  4091c3:	in     eax,dx
  4091c4:	enter  0xd98e,0xf6
  4091c8:	(bad)  
  4091c9:	in     eax,0x1b
  4091cb:	call   0xdc2038b4
  4091d0:	dec    ecx
  4091d1:	rol    BYTE PTR [eax-0x30],cl
  4091d4:	ins    BYTE PTR es:[edi],dx
  4091d5:	add    ecx,edx
  4091d7:	or     eax,0xe3357e2e
  4091dc:	mov    ebx,0x8583ad42
  4091e1:	lock les edx,FWORD PTR [eax]
  4091e4:	(bad)  
  4091e5:	mov    dl,0x98
  4091e7:	or     bh,dl
  4091e9:	mov    ds:0x7e2548c2,eax
  4091ee:	fisttp QWORD PTR [eax]
  4091f0:	xchg   BYTE PTR [ecx+0xe50ff61],cl
  4091f6:	inc    esi
  4091f7:	and    WORD PTR [ebx-0x38ffc3b9],sp
  4091fe:	xchg   ebp,eax
  4091ff:	popf   
  409200:	outs   dx,DWORD PTR ds:[esi]
  409201:	int3   
  409202:	rcr    esp,0x7b
  409205:	(bad)  
  409206:	in     al,0xb9
  409208:	adc    al,0x4e
  40920a:	jmp    0x6c2202e
  40920f:	jno    0x409206
  409211:	add    DWORD PTR [edx-0x66],ebx
  409214:	bound  edx,QWORD PTR [ebp-0x2639604b]
  40921a:	push   cs
  40921b:	mov    al,ds:0x20ad7c1d
  409220:	cld    
  409221:	mov    DWORD PTR [ecx],ebp
  409223:	xchg   edx,eax
  409224:	cmp    dh,dl
  409226:	pop    edx
  409227:	or     ebx,DWORD PTR [esi]
  409229:	sub    ah,al
  40922b:	mov    bl,0xb2
  40922d:	retf   
  40922e:	adc    ebp,esi
  409230:	loope  0x40921f
  409232:	xchg   ecx,eax
  409233:	lds    edx,FWORD PTR [eax]
  409235:	aas    
  409236:	dec    edx
  409237:	scas   eax,DWORD PTR es:[edi]
  409238:	add    eax,0x2055f291
  40923d:	jl     0x4091ec
  40923f:	out    dx,al
  409240:	mov    cs,WORD PTR [esi]
  409242:	cs out dx,eax
  409244:	daa    
  409245:	mov    ecx,0xb1be6924
  40924a:	pushf  
  40924b:	jbe    0x4091d2
  40924d:	les    edi,FWORD PTR [eax]
  40924f:	mov    ds:0x113a0fea,al
  409254:	push   edx
  409255:	mov    eax,0x6b6b6b2c
  40925a:	inc    ebx
  40925b:	mov    esp,0xc7136f1c
  409260:	xchg   BYTE PTR [ebp-0x57],dl
  409263:	xor    DWORD PTR [eax-0x1d],edi
  409266:	pushf  
  409267:	jmp    0xd2c06f5
  40926c:	mov    ds:0x57c26c00,eax
  409271:	lahf   
  409272:	inc    ebp
  409273:	jno    0x409223
  409275:	retf   0x20dc
  409278:	out    0xf7,al
  40927a:	sub    eax,0x5b57d109
  40927f:	pop    ecx
  409280:	popa   
  409281:	push   cs
  409282:	daa    
  409283:	bound  ecx,QWORD PTR [ecx]
  409285:	aas    
  409286:	push   edi
  409287:	dec    edi
  409288:	ds repnz pop ecx
  40928b:	sbb    BYTE PTR [esi+0x4fc22ea7],bh
  409291:	mov    DWORD PTR [ecx-0x51902a32],eax
  409297:	mov    ?,esi
  409299:	addr16 jg 0x409221
  40929c:	xor    eax,0x43ebb049
  4092a1:	sub    edx,DWORD PTR [eax+edx*2-0x5c]
  4092a5:	mov    ecx,0x514e6928
  4092aa:	sahf   
  4092ab:	cmp    esi,esi
  4092ad:	jne    0x4092a6
  4092af:	jb     0x409297
  4092b1:	sub    esi,DWORD PTR ds:0x26b6790f
  4092b7:	inc    esp
  4092b8:	ja     0x4092dd
  4092ba:	pop    edi
  4092bb:	lods   al,BYTE PTR ds:[esi]
  4092bc:	imul   edi,DWORD PTR [ecx+0x43],0xfffffff5
  4092c0:	pop    ecx
  4092c1:	fld    DWORD PTR [ebx+0x21f3f034]
  4092c7:	adc    bh,al
  4092c9:	cs int 0xef
  4092cc:	cli    
  4092cd:	mov    fs,WORD PTR [ecx]
  4092cf:	iret   
  4092d0:	rcl    DWORD PTR [eax+0x1e],cl
  4092d3:	fwait
  4092d4:	jecxz  0x4092cb
  4092d6:	sbb    DWORD PTR [edx],esp
  4092d8:	std    
  4092d9:	pop    ds
  4092da:	sub    DWORD PTR [edx],0xfffffff9
  4092dd:	xrelease xchg BYTE PTR [edx],ch
  4092e0:	shl    bl,0x37
  4092e3:	pop    esp
  4092e4:	mov    esp,0xaa6376c5
  4092e9:	cs scas eax,DWORD PTR es:[edi]
  4092eb:	dec    edx
  4092ec:	aas    
  4092ed:	cli    
  4092ee:	dec    edi
  4092ef:	jne    0x409285
  4092f1:	sbb    bl,BYTE PTR [esi-0x40]
  4092f4:	ins    DWORD PTR es:[edi],dx
  4092f5:	mov    BYTE PTR ds:0x77586cf8,bh
  4092fb:	push   ds
  4092fc:	add    DWORD PTR [esi-0x57],edx
  4092ff:	mov    ebx,esp
  409301:	mov    ebp,0xc3526ff
  409306:	sub    eax,edx
  409308:	in     eax,dx
  409309:	(bad)  
  40930a:	mov    ebx,0x84dfb2fa
  40930f:	adc    bl,dh
  409311:	mov    cl,0xcc
  409313:	dec    esi
  409314:	outs   dx,BYTE PTR ds:[esi]
  409315:	jmp    0x70ce:0xb2460fcb
  40931c:	inc    ecx
  40931d:	call   0xfe9b:0x2f1384b8
  409324:	inc    edi
  409325:	bound  ebx,QWORD PTR [esi-0x1c]
  409328:	stos   DWORD PTR es:[edi],eax
  409329:	pop    ds
  40932a:	pop    ds
  40932b:	test   bl,0xb1
  40932e:	lock es aam 0x45
  409332:	push   ebp
  409333:	fcomip st,st(0)
  409335:	inc    ecx
  409336:	inc    esi
  409337:	js     0x409345
  409339:	aad    0xf
  40933b:	jo     0x4092f2
  40933d:	or     eax,0xa43477bc
  409342:	pop    ecx
  409343:	cmp    esi,DWORD PTR [ecx]
  409345:	pop    eax
  409346:	and    dh,BYTE PTR [ebx-0x2]
  409349:	or     BYTE PTR [ecx+0x6b4af98c],bl
  40934f:	mov    dl,0x6b
  409351:	inc    edi
  409352:	je     0x4092ed
  409354:	sub    BYTE PTR [edx-0x2b],bh
  409357:	mov    ch,0x61
  409359:	das    
  40935a:	mov    ebx,0xa5d20342
  40935f:	and    ecx,ecx
  409361:	ds cmp al,0xd6
  409364:	test   eax,0xf68e54b3
  409369:	lahf   
  40936a:	push   cs
  40936b:	aad    0xc7
  40936d:	retf   
  40936e:	cli    
  40936f:	adc    eax,0xee41483e
  409374:	(bad)  
  409375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409376:	sar    DWORD PTR [eax+esi*8+0x3ae4b84d],cl
  40937d:	ret    0x7b34
  409380:	mov    ss:0x41ee4564,al
  409386:	inc    ecx
  409387:	test   esi,ebp
  409389:	dec    ebp
  40938a:	js     0x4093cc
  40938c:	fstp   QWORD PTR [ebx]
  40938e:	sub    BYTE PTR [edi-0x3],ah
  409391:	adc    edx,ecx
  409393:	(bad)  [edi]
  409395:	or     al,0x93
  409397:	cmp    eax,0x6c1b6fd7
  40939c:	mov    BYTE PTR [esp+eax*4+0xe],al
  4093a0:	dec    edx
  4093a1:	mov    cs:0x6a58a156,al
  4093a7:	popf   
  4093a8:	fs sbb eax,0x7d739752
  4093ae:	xchg   ebp,eax
  4093af:	push   0x43
  4093b1:	enter  0xb017,0x64
  4093b5:	mov    edx,0xbbecf89f
  4093ba:	cmp    al,0x3b
  4093bc:	adc    al,0x79
  4093be:	out    dx,eax
  4093bf:	jbe    0x409353
  4093c1:	mov    ch,0x69
  4093c3:	mov    ax,ds:0x437fad64
  4093c9:	ret    
  4093ca:	dec    esi
  4093cb:	fisubr WORD PTR [ecx+0x7d62e13f]
  4093d1:	stos   DWORD PTR es:[edi],eax
  4093d2:	add    BYTE PTR [esi+0x7a3dfe2c],ch
  4093d8:	xchg   edi,eax
  4093d9:	sub    esi,edi
  4093db:	mov    bl,0xa2
  4093dd:	imul   eax,DWORD PTR [ecx+0x19],0xffffffd7
  4093e1:	push   ebp
  4093e2:	sbb    eax,edx
  4093e4:	hlt    
  4093e5:	repnz pusha 
  4093e7:	stos   BYTE PTR es:[edi],al
  4093e8:	mov    al,0x7e
  4093ea:	aas    
  4093eb:	in     eax,dx
  4093ec:	inc    esp
  4093ed:	dec    ebx
  4093ee:	pop    ds
  4093ef:	(bad)  
  4093f0:	inc    eax
  4093f1:	loope  0x409378
  4093f3:	mov    eax,0x37778423
  4093f8:	ins    BYTE PTR es:[edi],dx
  4093f9:	js     0x40942a
  4093fb:	fldcw  WORD PTR [ebp-0x3e6fe33a]
  409401:	lock pusha 
  409403:	lea    eax,[eax+0x65ece8fa]
  409409:	pop    ss
  40940a:	test   eax,0x431a3d6
  40940f:	add    DWORD PTR [esi-0x3],eax
  409412:	jbe    0x409395
  409414:	(bad)  
  409415:	push   edi
  409416:	hlt    
  409417:	dec    edx
  409418:	and    DWORD PTR [esi-0x5a18bf12],ecx
  40941e:	sar    DWORD PTR [eax],1
  409420:	mov    bh,BYTE PTR [ecx+edi*1]
  409423:	sub    DWORD PTR [edi+0x61],0x72
  409427:	aas    
  409428:	and    cl,BYTE PTR [edi]
  40942a:	jno    0x409435
  40942c:	cmp    dh,BYTE PTR [ebx+0x4]
  40942f:	fild   DWORD PTR [edi+0x35]
  409432:	jl     0x40947d
  409434:	mov    ebp,0x49092810
  409439:	popa   
  40943a:	outs   dx,BYTE PTR ds:[esi]
  40943b:	and    esp,DWORD PTR [edi-0x6fe614c5]
  409441:	inc    ecx
  409442:	scas   al,BYTE PTR es:[edi]
  409443:	lds    esp,FWORD PTR [eax+0x5c63a758]
  409449:	push   ebp
  40944a:	scas   al,BYTE PTR es:[edi]
  40944b:	push   ds
  40944c:	cmp    ecx,ecx
  40944e:	rcr    DWORD PTR [eax+0x5a1ded95],0x63
  409455:	test   al,0xe6
  409457:	les    edi,FWORD PTR [ecx]
  409459:	fst    QWORD PTR [ebx+ebx*4]
  40945c:	aam    0x65
  40945e:	jge    0x40948c
  409460:	sbb    al,0xb0
  409462:	cwde   
  409463:	in     eax,dx
  409464:	cmp    dh,BYTE PTR [edx-0xf]
  409467:	call   DWORD PTR [ebx+0x14679aae]
  40946d:	xchg   esi,eax
  40946e:	ins    BYTE PTR es:[edi],dx
  40946f:	je     0x409478
  409471:	mov    esi,0x7c1c21d1
  409476:	add    bl,cl
  409478:	dec    edi
  409479:	ins    DWORD PTR es:[edi],dx
  40947a:	clc    
  40947b:	xchg   edx,eax
  40947c:	mov    ecx,0x1f027350
  409481:	and    dl,BYTE PTR [eax]
  409483:	sbb    al,0x4c
  409485:	push   esi
  409486:	dec    edx
  409487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409488:	fs push esp
  40948a:	add    eax,0x966d7aae
  40948f:	popf   
  409490:	lds    ecx,FWORD PTR [esi+ecx*2]
  409493:	jmp    0x40944a
  409495:	cmp    ecx,DWORD PTR ds:0x3e40c2b
  40949b:	popa   
  40949c:	loopne 0x4094b3
  40949e:	sar    dh,0xe7
  4094a1:	xor    ebp,eax
  4094a3:	xchg   edx,eax
  4094a4:	sub    al,0xe8
  4094a6:	rol    BYTE PTR [ebx-0xb3dd453],cl
  4094ac:	repz inc ecx
  4094ae:	scas   eax,DWORD PTR es:[edi]
  4094af:	out    dx,eax
  4094b0:	ins    BYTE PTR es:[edi],dx
  4094b1:	in     eax,dx
  4094b2:	dec    ebp
  4094b3:	(bad)  
  4094b4:	push   esi
  4094b5:	stos   DWORD PTR es:[edi],eax
  4094b6:	jae    0x4094cb
  4094b8:	push   0xf0417c7e
  4094bd:	lds    ebp,FWORD PTR [edi]
  4094bf:	sub    cl,BYTE PTR ds:0xe097f4e5
  4094c5:	xchg   edx,eax
  4094c6:	fdiv   st(3),st
  4094c8:	fcomi  st,st(2)
  4094ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094cb:	in     al,0xfa
  4094cd:	fdivrp st(2),st
  4094cf:	xor    al,0x3d
  4094d1:	les    ebx,FWORD PTR [esi-0x233ec73f]
  4094d7:	mov    ds:0xad984f55,eax
  4094dc:	push   cs
  4094dd:	mov    bh,bh
  4094df:	aaa    
  4094e0:	scas   eax,DWORD PTR es:[edi]
  4094e1:	(bad)  
  4094e3:	(bad)  
  4094e4:	popa   
  4094e5:	jno    0x4094b4
  4094e7:	push   es
  4094e8:	nop
  4094e9:	scas   al,BYTE PTR es:[edi]
  4094ea:	push   cs
  4094eb:	sti    
  4094ec:	aad    0xc3
  4094ee:	arpl   cx,cx
  4094f0:	inc    esp
  4094f1:	sbb    DWORD PTR [eax],esp
  4094f3:	idiv   BYTE PTR [eax-0x4a695b95]
  4094f9:	add    al,0xdf
  4094fb:	loopne 0x409562
  4094fd:	jg     0x4094a1
  4094ff:	fsub   QWORD PTR [esi+0x66]
  409502:	loope  0x409494
  409504:	loop   0x4094d2
  409506:	mov    eax,ds:0x1071527c
  40950b:	mov    ebx,DWORD PTR [edx-0x78]
  40950e:	outs   dx,DWORD PTR ds:[esi]
  40950f:	(bad)  
  409511:	inc    esp
  409512:	add    al,BYTE PTR [esi]
  409514:	test   al,0x4f
  409516:	(bad)  
  409517:	jecxz  0x4094c5
  409519:	jo     0x4094ed
  40951b:	push   cs
  40951c:	jb     0x40950d
  40951e:	lods   al,BYTE PTR ds:[esi]
  40951f:	outs   dx,DWORD PTR ds:[esi]
  409520:	fistp  DWORD PTR [ebx+eiz*8]
  409523:	add    al,0x9c
  409525:	sub    al,BYTE PTR [ecx+0x74f20b39]
  40952b:	(bad)  
  40952c:	and    al,0xf
  40952e:	(bad)  
  40952f:	cs jg  0x409588
  409532:	inc    edi
  409533:	dec    esi
  409534:	fild   QWORD PTR [edi-0xfbdd47b]
  40953a:	sub    al,BYTE PTR ds:0x46ad1280
  409540:	dec    edx
  409541:	add    eax,esi
  409543:	sub    eax,0x6a593764
  409548:	add    DWORD PTR [esi],edi
  40954a:	mov    eax,ds:0x2432e043
  40954f:	cld    
  409550:	pop    ecx
  409551:	fwait
  409552:	sub    bl,BYTE PTR [eax-0x46]
  409555:	jnp    0x40950a
  409557:	xchg   esp,eax
  409558:	mov    bh,0x27
  40955a:	mov    BYTE PTR [esi+0x51433162],ah
  409560:	inc    DWORD PTR [edx+ebp*8+0x3a]
  409564:	mov    esi,0xf849aac1
  409569:	fld    DWORD PTR [edi]
  40956b:	sub    al,0x51
  40956d:	inc    esp
  40956e:	loope  0x40950b
  409570:	mov    BYTE PTR [esp+ebp*1+0x527cbae1],dh
  409577:	mov    ds:0xb2fe6d49,eax
  40957c:	mov    ah,0xc0
  40957e:	test   BYTE PTR [ebx-0x4e],ch
  409581:	cmp    al,0x1e
  409583:	pop    edi
  409584:	adc    edx,DWORD PTR [ecx+0x2e]
  409587:	mov    eax,ds:0xc9463fe6
  40958c:	icebp  
  40958d:	fld    st(2)
  40958f:	jmp    0xdf97:0xd0db09ae
  409596:	sbb    DWORD PTR [ecx+0x4b2247d0],0x77ed4473
  4095a0:	pop    esi
  4095a1:	repnz imul ebx,DWORD PTR [esi-0x32],0xffffffd7
  4095a6:	lea    ebx,[edi-0x4603f138]
  4095ac:	jbe    0x4095f6
  4095ae:	std    
  4095af:	pop    ss
  4095b0:	out    dx,al
  4095b1:	push   ss
  4095b2:	call   0xe878:0xdf27d3c8
  4095b9:	pop    fs
  4095bb:	xor    bh,BYTE PTR [edx-0x25]
  4095be:	ficom  DWORD PTR [ecx*8-0x2e418a98]
  4095c5:	xchg   DWORD PTR [eax+0x11],edi
  4095c8:	inc    eax
  4095c9:	loop   0x4095bf
  4095cb:	(bad)  
  4095cc:	mov    dl,0x70
  4095ce:	mov    BYTE PTR [eax],0xc5
  4095d1:	aaa    
  4095d2:	push   edx
  4095d3:	mov    edi,0x8514b94e
  4095d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095d9:	(bad)  
  4095da:	jnp    0x40955e
  4095dc:	mov    bl,0xae
  4095de:	mov    ebp,0xe316ef56
  4095e3:	pop    edx
  4095e4:	mov    al,0x51
  4095e6:	and    BYTE PTR [ebx],bh
  4095e8:	mov    ecx,0x8c1b3203
  4095ed:	(bad)  [esi+eax*2]
  4095f0:	mov    ds:0xefa541c2,eax
  4095f5:	sbb    BYTE PTR [ecx+ebp*1+0x45],al
  4095f9:	and    eax,0x5a5dd1a
  4095fe:	inc    ebp
  4095ff:	sub    cl,0x37
  409602:	mov    ds:0x5026cacd,eax
  409607:	pop    esi
  409608:	icebp  
  409609:	enter  0x49f1,0xcd
  40960d:	cmp    DWORD PTR [edi],eax
  40960f:	mov    esp,0xe69b2f68
  409614:	and    al,ch
  409616:	and    cl,ch
  409618:	push   0x6
  40961a:	out    dx,eax
  40961b:	(bad)  
  40961c:	mov    cl,0x91
  40961e:	pop    esi
  40961f:	aam    0x9c
  409621:	jnp    0x409686
  409623:	cwde   
  409624:	jp     0x40963c
  409626:	test   al,0x29
  409628:	push   0xfffffff8
  40962a:	ffreep st(5)
  40962c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40962d:	in     eax,0x79
  40962f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409630:	dec    edx
  409631:	popf   
  409632:	xor    al,0x20
  409634:	xor    cl,0x51
  409637:	out    dx,eax
  409638:	xlat   BYTE PTR ds:[ebx]
  409639:	ds (bad) 
  40963b:	int3   
  40963c:	inc    ebx
  40963d:	and    al,0x77
  40963f:	sub    eax,0x2027aad5
  409644:	or     BYTE PTR [esp+ecx*8-0x7],dl
  409648:	xor    DWORD PTR [edx-0x33],eax
  40964b:	aad    0x6d
  40964d:	or     ch,BYTE PTR [edx+0x53]
  409650:	in     al,dx
  409651:	push   ecx
  409652:	ins    BYTE PTR es:[edi],dx
  409653:	xor    eax,0xb35e6b4
  409658:	retf   0x9ea0
  40965b:	mov    bl,0xb
  40965d:	sbb    bh,0xa
  409660:	xchg   edx,eax
  409661:	pop    edx
  409662:	mov    edx,0x298ef823
  409667:	jecxz  0x409621
  409669:	mov    es,WORD PTR [ecx]
  40966b:	mov    ds:0xaea1eaec,eax
  409670:	inc    ebp
  409671:	mov    esi,0x614b65a6
  409676:	ja     0x409668
  409678:	pop    ebx
  409679:	aam    0x42
  40967b:	cmp    dh,BYTE PTR [edi+0x44e2a3d4]
  409681:	adc    esp,ecx
  409683:	retf   0x6bac
  409686:	cmp    al,0x42
  409688:	jecxz  0x409633
  40968a:	and    dh,BYTE PTR [ebp+0x1644e126]
  409690:	ins    DWORD PTR es:[edi],dx
  409691:	in     al,0x97
  409693:	or     al,0x33
  409695:	pop    ss
  409696:	mov    ebp,0x14c720cc
  40969b:	adc    eax,0x4abd05f0
  4096a0:	leave  
  4096a1:	mov    esp,0xf88048cb
  4096a6:	icebp  
  4096a7:	jle    0x40970e
  4096a9:	mov    ebp,0xa6589605
  4096ae:	sbb    edi,DWORD PTR gs:0x1ac5cb88
  4096b5:	push   esp
  4096b6:	mov    esi,0x348083ab
  4096bb:	mov    ecx,0x66d717f1
  4096c0:	ret    0x9c8a
  4096c3:	pusha  
  4096c4:	mov    esp,0x1f570707
  4096c9:	jnp    0x409693
  4096cb:	jns    0x4096ba
  4096cd:	call   eax
  4096cf:	sub    eax,0xd85378b6
  4096d4:	fwait
  4096d5:	pop    ds
  4096d6:	test   BYTE PTR [edi],dh
  4096d8:	inc    ebx
  4096d9:	dec    edx
  4096da:	call   0x8e8a:0x2c746181
  4096e1:	not    BYTE PTR [edi]
  4096e3:	loop   0x4096ae
  4096e5:	add    dl,cl
  4096e7:	in     al,dx
  4096e8:	popf   
  4096e9:	pop    ecx
  4096ea:	or     al,0xb8
  4096ec:	push   ebp
  4096ed:	add    ah,dl
  4096ef:	jp     0x4096b4
  4096f1:	dec    edi
  4096f2:	sub    DWORD PTR [ebx-0x6702838a],ecx
  4096f8:	jmp    0xf14c5304
  4096fd:	pop    edx
  4096fe:	rol    BYTE PTR [ecx-0x61],cl
  409701:	push   esp
  409702:	es ret 
  409704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409705:	adc    BYTE PTR [ebp+0x1f],al
  409708:	pop    ecx
  409709:	adc    ebp,eax
  40970b:	cmp    esi,DWORD PTR [eax+0x9eddbf7]
  409711:	fisubr WORD PTR [edx-0x3e7ea7f4]
  409717:	les    edx,FWORD PTR [ecx]
  409719:	inc    ecx
  40971a:	js     0x4096b7
  40971c:	adc    edx,edi
  40971e:	sbb    BYTE PTR [eax+0x7b],bl
  409721:	les    ebx,FWORD PTR [eax]
  409723:	inc    ebx
  409724:	inc    edi
  409725:	dec    ecx
  409726:	es enter 0x60bf,0xbd
  40972b:	test   eax,0x34c2be1e
  409730:	jg     0x409797
  409732:	push   ds
  409733:	inc    edx
  409734:	inc    ebx
  409735:	imul   ebx,ecx,0x97dbdeed
  40973b:	nop
  40973c:	jle    0x4096d9
  40973e:	imul   eax,DWORD PTR [edx],0xffffffe6
  409741:	out    dx,eax
  409742:	(bad)  
  409744:	cmp    edx,DWORD PTR [esi+ecx*2]
  409747:	xor    cl,BYTE PTR [esi*2+0x2b2931b0]
  40974e:	push   eax
  40974f:	sbb    DWORD PTR [ebp+0x592d3b1d],ecx
  409755:	outs   dx,DWORD PTR ds:[esi]
  409756:	fucomp st(3)
  409758:	push   ecx
  409759:	mov    WORD PTR [ecx+0x1b],?
  40975c:	push   es
  40975d:	out    dx,eax
  40975e:	inc    esp
  40975f:	int    0xbf
  409761:	aas    
  409762:	xchg   BYTE PTR [ecx+0xbe9e8f9],dh
  409768:	sub    eax,0x529f214
  40976d:	xchg   ecx,eax
  40976e:	push   esi
  40976f:	(bad)  
  409770:	jne    0x409787
  409772:	adc    ch,BYTE PTR [eax-0x23dbe828]
  409778:	ss mov esp,0xa74753be
  40977e:	add    al,0x82
  409780:	es cmp al,0xd1
  409783:	dec    eax
  409784:	scas   al,BYTE PTR es:[edi]
  409785:	fcomp  DWORD PTR [edi+ebx*8-0x5338fc88]
  40978c:	ret    
  40978d:	mov    WORD PTR [esi+eiz*4-0x66952817],?
  409794:	push   ds
  409795:	and    eax,0x61dc2aa7
  40979a:	jmp    0x9235:0xa5dd14e3
  4097a1:	(bad)  
  4097a2:	icebp  
  4097a3:	push   es
  4097a4:	cmp    DWORD PTR [edi+0x27b57ee4],edi
  4097aa:	mov    ?,WORD PTR [ecx+0x4fcc5aac]
  4097b0:	push   ebx
  4097b1:	fwait
  4097b2:	jl     0x409802
  4097b4:	outs   dx,BYTE PTR ds:[esi]
  4097b5:	sti    
  4097b6:	push   eax
  4097b7:	iret   
  4097b8:	and    ebx,DWORD PTR ds:0x56d40c1b
  4097be:	adc    al,0xcf
  4097c0:	stc    
  4097c1:	inc    esi
  4097c2:	mov    esp,0x28ffa3af
  4097c7:	out    dx,eax
  4097c8:	pop    esp
  4097c9:	push   es
  4097ca:	clc    
  4097cb:	dec    edi
  4097cc:	sbb    DWORD PTR [edi+0x34],ebp
  4097cf:	sub    DWORD PTR [ebx+ebx*4],esp
  4097d2:	dec    ebx
  4097d3:	xor    dh,BYTE PTR [eax+ebp*8-0x80]
  4097d7:	sub    bl,bl
  4097d9:	call   FWORD PTR [edx-0x66063b1d]
  4097df:	jmp    0x409763
  4097e1:	adc    BYTE PTR [eiz*1-0x24269083],bh
  4097e8:	aad    0xa6
  4097ea:	nop
  4097eb:	nop
  4097ec:	pop    es
  4097ed:	sahf   
  4097ee:	fnstsw WORD PTR [eax-0x7687b7a9]
  4097f4:	je     0x40983a
  4097f6:	sub    BYTE PTR [edx-0x79],al
  4097f9:	mov    ebx,DWORD PTR [eax+0x2f654f56]
  4097ff:	fcmovb st,st(0)
  409801:	mov    cs,WORD PTR [ebx+esi*4]
  409804:	cmc    
  409805:	cdq    
  409806:	je     0x4097df
  409808:	(bad)  
  409809:	scas   al,BYTE PTR es:[edi]
  40980a:	push   ds
  40980b:	mov    eax,0x97a2c8fc
  409810:	aaa    
  409811:	enter  0xef65,0xc2
  409815:	stc    
  409816:	push   0xf9b55ef9
  40981b:	retf   
  40981c:	scas   eax,DWORD PTR es:[edi]
  40981d:	test   DWORD PTR ds:0xf5edeb78,ebp
  409823:	pop    ds
  409824:	mov    al,ds:0x7b6d2fe2
  409829:	mov    dl,0x8
  40982b:	and    BYTE PTR [ecx-0x22b8e112],al
  409831:	inc    esp
  409832:	cld    
  409833:	push   ebp
  409834:	mov    ch,0xe9
  409836:	mov    eax,ds:0xa41456da
  40983b:	xor    eax,0xbde290fa
  409840:	repnz ds pushf 
  409843:	call   0xa1a7b831
  409848:	sbb    al,0xf7
  40984a:	push   esi
  40984b:	not    DWORD PTR [edx]
  40984d:	scas   al,BYTE PTR es:[edi]
  40984e:	imul   edi,DWORD PTR [edx-0x4b],0xd70fa8c5
  409855:	xor    DWORD PTR [edi-0x4d],ebp
  409858:	pusha  
  409859:	pop    ecx
  40985a:	fdiv   QWORD PTR [ecx+0x5]
  40985d:	scas   eax,DWORD PTR es:[edi]
  40985e:	out    dx,eax
  40985f:	int3   
  409860:	ds jle 0x4097ff
  409863:	imul   BYTE PTR [edi-0x1d]
  409866:	mov    WORD PTR [ebp+ecx*4+0x56b830e],ss
  40986d:	sub    esi,DWORD PTR [edx-0x6cb9693c]
  409873:	shl    BYTE PTR [edi+0x76e184f5],0xb1
  40987a:	pusha  
  40987b:	data16 jae 0x40983e
  40987e:	in     eax,0xac
  409880:	pop    es
  409881:	(bad)  
  409882:	dec    dl
  409884:	push   esp
  409885:	andps  xmm2,XMMWORD PTR [ebp+edx*1+0x365b2284]
  40988d:	inc    ecx
  40988e:	pusha  
  40988f:	outs   dx,BYTE PTR ds:[esi]
  409890:	sbb    BYTE PTR [edi-0x21],ch
  409893:	or     DWORD PTR [edx+0x60],eax
  409896:	fistp  QWORD PTR [eax]
  409898:	xor    dh,cl
  40989a:	call   0x5a026b13
  40989f:	fwait
  4098a0:	movhlps xmm5,xmm5
  4098a3:	rcr    ebp,0xa4
  4098a6:	lods   al,BYTE PTR ds:[esi]
  4098a7:	sbb    ebx,DWORD PTR [eax-0x11db1263]
  4098ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098ae:	test   eax,0xf71acfa9
  4098b3:	hlt    
  4098b4:	or     BYTE PTR [edi],ch
  4098b6:	dec    eax
  4098b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098b8:	cmc    
  4098b9:	aas    
  4098ba:	retf   0xb26d
  4098bd:	(bad)  
  4098be:	das    
  4098bf:	stos   DWORD PTR es:[edi],eax
  4098c0:	fisub  WORD PTR [ebx+0x7c]
  4098c3:	sbb    BYTE PTR [eax],ah
  4098c5:	xchg   edx,eax
  4098c6:	hlt    
  4098c7:	mov    ds:0x15402d5f,al
  4098cc:	jb     0x40988e
  4098ce:	repz adc DWORD PTR [ebp+0x8],ecx
  4098d2:	push   esp
  4098d3:	inc    edi
  4098d4:	push   ebx
  4098d5:	out    0xec,eax
  4098d7:	lods   eax,DWORD PTR ds:[esi]
  4098d8:	(bad)  
  4098d9:	and    al,0x1a
  4098db:	sub    DWORD PTR [ebx-0x78],0x714ae4e6
  4098e2:	and    ch,dh
  4098e4:	and    eax,0xfe0f1af1
  4098e9:	(bad)
  4098ed:	mov    ds:0xddd81536,eax
  4098f2:	mov    ah,0xd4
  4098f4:	scas   eax,DWORD PTR es:[edi]
  4098f5:	dec    edi
  4098f6:	fs pop ebp
  4098f8:	clc    
  4098f9:	or     al,BYTE PTR [ebx]
  4098fb:	mov    ecx,0xa5af76a5
  409900:	shr    DWORD PTR [edx+0x10503566],0xdc
  409907:	fistp  QWORD PTR [esi-0x66]
  40990a:	ss rol edx,cl
  40990d:	cli    
  40990e:	pop    ds
  40990f:	cmp    eax,0x3d38c6c2
  409914:	lock add edi,DWORD PTR [eax+0x56633f87]
  40991b:	push   cs
  40991c:	xchg   DWORD PTR [edx],ebx
  40991e:	cld    
  40991f:	(bad)  
  409921:	sbb    al,0x13
  409923:	jmp    0x409984
  409925:	pop    ecx
  409926:	out    dx,eax
  409927:	inc    ebp
  409928:	xchg   ecx,eax
  409929:	inc    esp
  40992a:	shl    ecx,cl
  40992c:	(bad)  
  40992e:	sti    
  40992f:	sub    edi,0xffffffe0
  409932:	hlt    
  409933:	push   ds
  409934:	cdq    
  409935:	(bad)  
  409936:	cmp    BYTE PTR [edi+0x38],ch
  409939:	stos   DWORD PTR es:[edi],eax
  40993a:	in     eax,dx
  40993b:	push   ds
  40993c:	sbb    al,0xe6
  40993e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40993f:	jmp    0x4098eb
  409941:	pop    es
  409942:	sahf   
  409943:	cmp    DWORD PTR [esi],0x6
  409946:	adc    al,0x44
  409948:	call   DWORD PTR [esi+0xc]
  40994b:	mov    edi,esi
  40994d:	std    
  40994e:	xchg   edx,eax
  40994f:	sub    dl,bl
  409951:	leave  
  409952:	rcr    DWORD PTR [edx+0x7719be31],1
  409958:	sbb    BYTE PTR [esp+ebp*1],ah
  40995b:	adc    ch,bh
  40995d:	sti    
  40995e:	ret    
  40995f:	pop    esi
  409960:	mov    edi,0xd491ed4e
  409965:	test   DWORD PTR [esi-0x47142b15],esi
  40996b:	push   eax
  40996c:	out    dx,eax
  40996d:	sbb    DWORD PTR ds:0xf39a2bcc,edi
  409973:	call   0x95379dfc
  409978:	idiv   DWORD PTR [edi+0x52a2efbb]
  40997e:	inc    ebx
  40997f:	enter  0x855,0x77
  409983:	sub    esi,DWORD PTR [edi]
  409985:	xor    al,bh
  409987:	inc    eax
  409988:	dec    ecx
  409989:	cwde   
  40998a:	dec    ebp
  40998b:	mov    ds:0x8e73f0b8,eax
  409990:	add    eax,0xebe21199
  409995:	dec    edx
  409996:	sub    DWORD PTR [esi-0x3e1de619],edi
  40999c:	mov    dl,0x18
  40999e:	dec    esi
  40999f:	lods   al,BYTE PTR ds:[esi]
  4099a0:	xchg   edi,eax
  4099a1:	adc    DWORD PTR [eax],esi
  4099a3:	fiadd  DWORD PTR [ecx-0x5edd86f1]
  4099a9:	xor    DWORD PTR [edx+0x55],0x2e
  4099ad:	mov    ch,0x5
  4099af:	mov    esp,0x16581159
  4099b4:	test   al,0x2f
  4099b6:	nop
  4099b7:	(bad)  
  4099b8:	rcr    DWORD PTR [esi],cl
  4099ba:	push   es
  4099bb:	xchg   DWORD PTR [ecx+0x71],ecx
  4099be:	push   ss
  4099bf:	inc    edx
  4099c0:	mov    dl,0x3c
  4099c2:	(bad)  
  4099c3:	cmp    al,0x2b
  4099c5:	popa   
  4099c6:	dec    esp
  4099c7:	int    0x6e
  4099c9:	(bad)  
  4099ca:	cdq    
  4099cb:	outs   dx,BYTE PTR ds:[esi]
  4099cc:	cmp    ecx,DWORD PTR [ecx-0x2169e8dc]
  4099d2:	rcr    edi,1
  4099d4:	dec    ebx
  4099d5:	aaa    
  4099d6:	jp     0x409a16
  4099d8:	icebp  
  4099d9:	retf   0x3487
  4099dc:	pop    ebx
  4099dd:	fld    DWORD PTR [edi-0x43]
  4099e0:	dec    eax
  4099e1:	mov    cl,0xf3
  4099e3:	push   edi
  4099e4:	leave  
  4099e5:	dec    edi
  4099e6:	fcmovu st,st(6)
  4099e8:	dec    ebp
  4099e9:	sbb    al,0x68
  4099eb:	xchg   edx,eax
  4099ec:	call   0x3356:0x191fec97
  4099f3:	pop    ebx
  4099f4:	gs sbb al,0x81
  4099f7:	mov    eax,ds:0x5f139d41
  4099fc:	loop   0x409a49
  4099fe:	adc    edi,ebp
  409a00:	adc    DWORD PTR [ecx+ebx*8-0x35],eax
  409a04:	lds    ecx,FWORD PTR [ebp+0x6]
  409a07:	sbb    al,0x71
  409a09:	scas   eax,DWORD PTR es:[edi]
  409a0a:	stos   DWORD PTR es:[edi],eax
  409a0b:	mov    ebx,0x92583b96
  409a10:	mov    edx,0xbc961f73
  409a15:	(bad)  
  409a16:	mov    al,ds:0xfac62b14
  409a1b:	int    0xb6
  409a1d:	xchg   edx,eax
  409a1e:	sub    ebp,DWORD PTR [ecx+0x4b]
  409a21:	dec    eax
  409a22:	xchg   edi,eax
  409a23:	fild   WORD PTR [edx-0x64478d5f]
  409a29:	pop    ds
  409a2a:	add    eax,0x4d3d9dd4
  409a2f:	hlt    
  409a30:	addr16 xchg esi,eax
  409a32:	cmovb  ecx,DWORD PTR [esi]
  409a35:	pshufw mm6,QWORD PTR [edi],0x69
  409a39:	jno    0x4099db
  409a3b:	mov    edx,0x691db616
  409a40:	data16 test BYTE PTR [ebp+ebx*2+0x29],dh
  409a45:	sub    al,0x1
  409a47:	sbb    ebx,ecx
  409a49:	sub    BYTE PTR [ebx],0x43
  409a4c:	mov    dl,0x1d
  409a4e:	xchg   BYTE PTR [edi-0x53],cl
  409a51:	push   edi
  409a52:	sbb    ah,ch
  409a54:	dec    ebp
  409a55:	xor    BYTE PTR [ebp-0x5da618f1],al
  409a5b:	icebp  
  409a5c:	inc    esi
  409a5d:	xchg   esi,eax
  409a5e:	mov    ds:0x82ad9ffe,eax
  409a63:	mov    ah,0x1d
  409a65:	pop    es
  409a66:	es pop esp
  409a68:	add    BYTE PTR [ecx+0x7c],dl
  409a6b:	and    BYTE PTR [ebx],dh
  409a6d:	mov    esp,0xbcfb9815
  409a72:	mov    eax,0xf59fcd4f
  409a77:	jge    0x409ac8
  409a79:	jecxz  0x409a9d
  409a7b:	clc    
  409a7c:	add    BYTE PTR [ebx],dl
  409a7e:	scas   al,BYTE PTR es:[edi]
  409a7f:	inc    ecx
  409a80:	and    eax,0xb12e2ef8
  409a85:	jl     0x409af1
  409a87:	in     eax,0xdc
  409a89:	jnp    0x409a57
  409a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a8c:	les    edi,FWORD PTR [ecx]
  409a8e:	mov    bh,0x73
  409a90:	mov    ecx,0x31b40902
  409a95:	pop    ss
  409a96:	mov    ch,BYTE PTR [ebx]
  409a98:	xor    ebp,DWORD PTR [esi-0x108a4e4b]
  409a9e:	out    dx,eax
  409a9f:	adc    al,0x79
  409aa1:	popf   
  409aa2:	cmp    al,0xf0
  409aa4:	cmp    eax,0x7e4e48f1
  409aa9:	or     DWORD PTR [esi],ecx
  409aab:	(bad)  
  409aac:	xor    ax,0x6359
  409ab0:	in     eax,dx
  409ab1:	stos   DWORD PTR es:[edi],eax
  409ab2:	jmp    0x580cb163
  409ab7:	jae    0x409adc
  409ab9:	sub    BYTE PTR [edi+0x3fea8fa0],al
  409abf:	sub    esp,DWORD PTR [edi]
  409ac1:	mov    gs,WORD PTR [ecx+0x1a1aa246]
  409ac7:	dec    esi
  409ac8:	(bad)  
  409ac9:	aaa    
  409aca:	push   ds
  409acb:	jp     0x409b2f
  409acd:	iret   
  409ace:	stos   BYTE PTR es:[edi],al
  409acf:	ror    esp,cl
  409ad1:	sbb    ch,BYTE PTR ds:0x71980009
  409ad7:	xchg   ecx,ebp
  409ad9:	sbb    al,0xd7
  409adb:	xchg   edx,eax
  409adc:	clc    
  409add:	add    BYTE PTR [esi+0x6ca1c55d],dl
  409ae3:	pop    ecx
  409ae4:	retf   
  409ae5:	daa    
  409ae6:	lods   al,BYTE PTR ds:[esi]
  409ae7:	xlat   BYTE PTR ds:[ebx]
  409ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ae9:	push   edi
  409aea:	fild   DWORD PTR [edi-0x236ddbdb]
  409af0:	dec    esp
  409af1:	adc    ecx,esp
  409af3:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409af5:	outs   dx,DWORD PTR ds:[esi]
  409af6:	inc    esp
  409af7:	push   0xffffff87
  409af9:	popf   
  409afa:	fpatan 
  409afc:	mov    BYTE PTR [ebp+0x0],ah
  409aff:	xor    DWORD PTR [ebx+0x687c41d5],0xffffffc1
  409b06:	ins    DWORD PTR es:[edi],dx
  409b07:	mov    ch,0x5a
  409b09:	push   cs
  409b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b0b:	push   0x75
  409b0d:	lods   al,BYTE PTR ds:[esi]
  409b0e:	jnp    0x409ae2
  409b10:	mov    dl,0x14
  409b12:	icebp  
  409b13:	cmp    ah,al
  409b15:	sub    al,0x40
  409b17:	sahf   
  409b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b19:	mov    ebp,0x25d29902
  409b1e:	jne    0x409b8e
  409b20:	mov    al,ds:0x8f6ce9b0
  409b25:	and    ch,ch
  409b27:	xchg   ecx,eax
  409b28:	js     0x409b64
  409b2a:	mov    bl,0x46
  409b2c:	fild   QWORD PTR [ecx+0x4c]
  409b2f:	pop    ebx
  409b30:	rol    DWORD PTR [esi-0x23],0xd7
  409b34:	pop    esp
  409b35:	mov    al,0x4f
  409b37:	fcom   DWORD PTR [ebx-0x7c]
  409b3a:	in     al,dx
  409b3b:	xchg   ecx,eax
  409b3c:	push   ds
  409b3d:	inc    ebx
  409b3e:	mov    bh,0x2e
  409b40:	ja     0x409b08
  409b42:	out    0x9c,eax
  409b44:	xlat   BYTE PTR ds:[ebx]
  409b45:	push   ds
  409b46:	popf   
  409b47:	out    dx,al
  409b48:	cld    
  409b49:	fstp   QWORD PTR [edx-0x64]
  409b4c:	mov    cl,0x34
  409b4e:	xor    cl,BYTE PTR [ebx+0x36ffee93]
  409b54:	ret    0x79f3
  409b57:	pop    ds
  409b58:	xchg   ebx,eax
  409b59:	push   edx
  409b5a:	sbb    eax,0xe944303b
  409b5f:	cmp    al,0xed
  409b61:	adc    DWORD PTR [ecx-0x47],edi
  409b64:	inc    DWORD PTR [edi]
  409b66:	lods   al,BYTE PTR ds:[esi]
  409b67:	sbb    eax,0x20ef10ea
  409b6c:	dec    ebx
  409b6d:	mov    esp,0xe27b558b
  409b72:	out    dx,al
  409b73:	lods   al,BYTE PTR ds:[esi]
  409b74:	sti    
  409b75:	hlt    
  409b76:	xor    al,0xba
  409b78:	in     al,0x93
  409b7a:	cmp    eax,0x167e433
  409b7f:	sub    DWORD PTR [edx],esi
  409b81:	push   edi
  409b82:	sti    
  409b83:	fisub  DWORD PTR [ecx+0x49]
  409b86:	sub    ah,BYTE PTR [eax-0x74099445]
  409b8c:	outs   dx,DWORD PTR ds:[esi]
  409b8d:	aam    0x36
  409b8f:	cmp    esp,DWORD PTR [edx]
  409b91:	inc    edi
  409b92:	xchg   BYTE PTR [ecx+0x60],al
  409b95:	xor    eax,DWORD PTR [esi]
  409b97:	xor    al,0x9e
  409b99:	pushf  
  409b9a:	xor    DWORD PTR [eax-0x3d],eax
  409b9d:	mov    ds,esp
  409b9f:	cmp    eax,0x88f7277
  409ba4:	mov    edx,0x892677ce
  409ba9:	adc    ah,bh
  409bab:	js     0x409b9b
  409bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bae:	dec    edx
  409baf:	popa   
  409bb0:	sti    
  409bb1:	cmp    DWORD PTR [edi+0x12319ab7],0xa44bf34a
  409bbb:	ds jno 0x409b93
  409bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bbf:	jmp    0x409b76
  409bc1:	jmp    0x409b52
  409bc3:	arpl   WORD PTR ds:0x896a784d,sp
  409bc9:	adc    bl,bh
  409bcb:	les    ebx,FWORD PTR [edx-0x5d]
  409bce:	shr    DWORD PTR [ecx-0x3de281e3],cl
  409bd4:	and    bh,BYTE PTR [eax+ebx*1+0x5c5bad5b]
  409bdb:	aam    0x6c
  409bdd:	mov    bl,0x90
  409bdf:	xor    eax,0x60e74eef
  409be4:	pop    ecx
  409be5:	push   0xffffff8c
  409be7:	and    al,0xd
  409be9:	mov    bh,0xec
  409beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bec:	outs   dx,BYTE PTR ds:[esi]
  409bed:	enter  0x4b27,0x3d
  409bf1:	sub    dl,bl
  409bf3:	sbb    dl,BYTE PTR [ecx+0x5fb42f0d]
  409bf9:	aam    0x8
  409bfb:	ds push eax
  409bfd:	cld    
  409bfe:	retf   0x5860
  409c01:	xchg   edi,eax
  409c02:	mov    ah,dl
  409c04:	mov    dl,0x4c
  409c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c07:	add    ah,BYTE PTR [ecx+0x54195075]
  409c0d:	cmp    dh,BYTE PTR [eax]
  409c0f:	aas    
  409c10:	add    bl,BYTE PTR [ebx+eiz*4-0x3]
  409c14:	push   0xffffff86
  409c16:	add    eax,0x4e3711b5
  409c1b:	and    DWORD PTR [ebx-0x377fa519],esi
  409c21:	cdq    
  409c22:	dec    esi
  409c23:	cli    
  409c24:	pop    edx
  409c25:	or     al,0x6c
  409c27:	cwde   
  409c28:	jecxz  0x409c17
  409c2a:	xor    al,0xfd
  409c2c:	mov    ebx,0x90b540ed
  409c31:	adc    eax,0x3e299ef7
  409c36:	fnstsw WORD PTR [ebx+esi*1-0x47658ef6]
  409c3d:	adc    BYTE PTR [esi+0x71],dl
  409c40:	sbb    DWORD PTR [edx+0x17],edx
  409c43:	xchg   ebx,eax
  409c44:	icebp  
  409c45:	jp     0x409be9
  409c47:	adc    al,0x66
  409c49:	xor    BYTE PTR [ebp-0x686d1061],0x69
  409c50:	pcmpeqd mm1,QWORD PTR [esi-0x639cfb45]
  409c57:	inc    esp
  409c58:	out    0x23,al
  409c5a:	fdiv   QWORD PTR [ebp+0x47]
  409c5d:	and    DWORD PTR [edi-0x11],esi
  409c60:	and    DWORD PTR [edi-0x1338fdb2],edx
  409c66:	jmp    0x4e20202a
  409c6b:	imul   ebx,DWORD PTR [edi+0x46d7057f],0xfb39ee94
  409c75:	in     eax,0x72
  409c77:	adc    BYTE PTR [ecx+0x64],0xc6
  409c7b:	inc    ebp
  409c7c:	out    0x27,al
  409c7e:	mov    esp,0xda9f323e
  409c83:	or     al,0x99
  409c85:	lods   eax,DWORD PTR ds:[esi]
  409c86:	fisub  WORD PTR [edi-0x553b0b8d]
  409c8c:	fcomp  QWORD PTR ds:0x7f062921
  409c92:	fisubr WORD PTR [esi+0x38]
  409c95:	xor    esi,esp
  409c97:	outs   dx,DWORD PTR ds:[esi]
  409c98:	adc    al,0x36
  409c9a:	pusha  
  409c9b:	xchg   edx,eax
  409c9c:	xor    al,BYTE PTR [esi+0x7b]
  409c9f:	jne    0x409c9e
  409ca1:	gs repnz (bad) 
  409ca4:	mov    ds:0x7300472d,eax
  409ca9:	push   edx
  409caa:	lock jecxz 0x409d01
  409cad:	js     0x409ce7
  409caf:	out    dx,al
  409cb0:	jo     0x409c63
  409cb2:	cmp    ecx,DWORD PTR [edi+ebp*2]
  409cb5:	pop    ecx
  409cb6:	xlat   BYTE PTR ds:[ebx]
  409cb7:	push   ss
  409cb8:	and    esi,edi
  409cba:	loopne 0x409c79
  409cbc:	stc    
  409cbd:	clc    
  409cbe:	emms   
  409cc0:	test   eax,0xbd728e1c
  409cc5:	jecxz  0x409d09
  409cc7:	push   0xffffffc9
  409cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cca:	pop    esp
  409ccb:	adc    edi,DWORD PTR [ebp+0x20d2a10e]
  409cd1:	ret    
  409cd2:	cmp    BYTE PTR [esi-0x43],dl
  409cd5:	dec    dh
  409cd7:	repz cmp eax,0x8f354375
  409cdd:	gs sub eax,0x56629dd3
  409ce3:	jo     0x409c95
  409ce5:	sbb    al,0x55
  409ce7:	push   ebp
  409ce8:	xchg   ecx,eax
  409ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cea:	xchg   edx,eax
  409ceb:	push   ecx
  409cec:	repz mov ch,0x67
  409cef:	pop    edx
  409cf0:	mov    eax,0xb52de8a8
  409cf5:	jnp    0x409c8a
  409cf7:	ficomp DWORD PTR [edi]
  409cf9:	loopne 0x409cf8
  409cfb:	push   bx
  409cfd:	push   0x3686578
  409d02:	and    edi,ecx
  409d04:	shl    DWORD PTR [esi-0x2012856e],cl
  409d0a:	popf   
  409d0b:	mov    dh,0x5f
  409d0d:	or     al,0x5f
  409d0f:	push   esp
  409d10:	xor    eax,0xaebf248e
  409d15:	std    
  409d16:	dec    ebx
  409d17:	pop    esi
  409d18:	push   DWORD PTR [edi-0x4eb8c016]
  409d1e:	das    
  409d1f:	pop    ebx
  409d20:	cmp    bl,BYTE PTR [esi+0x3b]
  409d23:	push   ebx
  409d24:	mov    edi,0x9bbe7e20
  409d29:	fs pushw ds
  409d2c:	int3   
  409d2d:	inc    ebx
  409d2e:	sbb    dl,ch
  409d30:	and    DWORD PTR [ebp-0x364a06e1],ebp
  409d36:	sbb    eax,0x731b5b93
  409d3b:	adc    ecx,esp
  409d3d:	add    eax,0x2289df26
  409d42:	inc    edi
  409d43:	push   esi
  409d44:	or     eax,0xcd42ae79
  409d49:	fadd   DWORD PTR [esi-0x78b56c7c]
  409d4f:	cmp    al,0xfa
  409d51:	push   es
  409d52:	loope  0x409d01
  409d54:	in     al,dx
  409d55:	jno    0x409d30
  409d57:	xchg   ebx,eax
  409d58:	add    BYTE PTR [eax-0x4c352b99],ah
  409d5e:	not    ch
  409d60:	aas    
  409d61:	aaa    
  409d62:	jae    0x409d88
  409d64:	scas   al,BYTE PTR es:[edi]
  409d65:	out    dx,eax
  409d66:	sbb    DWORD PTR ds:0xddb3c4d7,ebx
  409d6c:	push   es
  409d6d:	int3   
  409d6e:	xor    al,0x92
  409d70:	scas   eax,DWORD PTR es:[edi]
  409d71:	mov    eax,ds:0xf8985f1b
  409d76:	add    DWORD PTR [edi-0x10],0x3e075498
  409d7d:	xchg   edi,eax
  409d7e:	adc    al,0xa0
  409d80:	sbb    BYTE PTR [ecx],0xc5
  409d83:	pop    ecx
  409d84:	fld    TBYTE PTR [ebx-0x76]
  409d87:	sbb    BYTE PTR [edi+ecx*4],ah
  409d8a:	lahf   
  409d8b:	mov    esp,0xd717faa8
  409d90:	push   esi
  409d91:	out    dx,al
  409d92:	shr    BYTE PTR [ebx-0x3191e956],0x31
  409d99:	dec    ecx
  409d9a:	xor    eax,0x976e1c3c
  409d9f:	jge    0x409dd5
  409da1:	lods   eax,DWORD PTR ds:[esi]
  409da2:	add    eax,0x49940c97
  409da7:	popa   
  409da8:	and    DWORD PTR [edi-0x29],edi
  409dab:	mov    edx,0xa143c1f7
  409db0:	rcl    esi,0xa
  409db3:	push   esp
  409db4:	and    BYTE PTR [esi-0x57],al
  409db7:	mov    ?,ebp
  409db9:	cmp    al,0x18
  409dbb:	add    dl,dh
  409dbd:	mov    dl,0x2a
  409dbf:	fld    TBYTE PTR ds:0x3ab954e0
  409dc5:	ficomp DWORD PTR [ecx+0x43]
  409dc8:	xor    esi,eax
  409dca:	cmc    
  409dcb:	mov    ds:0x48d17726,al
  409dd0:	xchg   edi,eax
  409dd1:	adc    al,0x33
  409dd3:	div    BYTE PTR [esi+eax*4-0x1af6251f]
  409dda:	mov    ebp,0x6d26e61a
  409ddf:	dec    esp
  409de0:	mov    al,0x7e
  409de2:	mov    bl,0x46
  409de4:	enter  0x4015,0x83
  409de8:	in     al,dx
  409de9:	je     0x409e54
  409deb:	paddsb mm1,mm0
  409dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409def:	arpl   WORD PTR [ecx+esi*2-0x76f5518b],ax
  409df6:	mov    bl,BYTE PTR [eax+0x10]
  409df9:	push   ebx
  409dfa:	dec    ecx
  409dfb:	xchg   edi,eax
  409dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dfd:	repz dec ecx
  409dff:	xchg   edx,eax
  409e00:	fadd   st,st(4)
  409e02:	or     cl,dh
  409e04:	imul   ebx,DWORD PTR [edx],0x20ceabc4
  409e0a:	test   al,0x7b
  409e0c:	inc    eax
  409e0d:	push   es
  409e0e:	mov    ch,0x51
  409e10:	mov    DWORD PTR [ebp+0x50],ecx
  409e13:	ins    DWORD PTR es:[edi],dx
  409e14:	sbb    bl,bh
  409e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e17:	adc    BYTE PTR [edi-0x7f47c43d],ah
  409e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e1e:	mov    cs,ebx
  409e20:	fisub  WORD PTR [edi-0x7bed433d]
  409e26:	sub    dl,BYTE PTR [ebx-0x61e34077]
  409e2c:	jge    0x409ddf
  409e2e:	mov    dh,0xaf
  409e30:	ret    
  409e31:	inc    ebx
  409e32:	cmp    bl,BYTE PTR ds:0x23b3da5f
  409e38:	bswap  ebp
  409e3a:	nop
  409e3b:	call   0x9129:0x21bb7afd
  409e42:	cli    
  409e43:	aas    
  409e44:	ficom  DWORD PTR [esi+0x3307c15b]
  409e4a:	cmp    DWORD PTR [eax],esp
  409e4c:	mov    ds:0xca69915e,eax
  409e51:	js     0x409dd7
  409e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e54:	xor    DWORD PTR [ecx+0x32],eax
  409e57:	xchg   DWORD PTR [ebp+0x1b],esi
  409e5a:	and    DWORD PTR [eax-0x68163321],0xcf96afbc
  409e64:	sbb    DWORD PTR [edx],esi
  409e66:	pop    ebx
  409e67:	stos   DWORD PTR es:[edi],eax
  409e68:	aaa    
  409e69:	or     eax,esi
  409e6b:	and    esp,DWORD PTR [ebx-0x49d9f3c4]
  409e71:	ret    
  409e72:	mov    edi,0xef778253
  409e77:	sbb    BYTE PTR [edx+0x6b],dl
  409e7a:	rcl    esi,1
  409e7c:	(bad)  
  409e7e:	lds    edi,FWORD PTR [edx]
  409e80:	fbstp  TBYTE PTR [edi+0x54cbfcb1]
  409e86:	xor    al,ch
  409e88:	dec    esi
  409e89:	jbe    0x409ed0
  409e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e8c:	test   eax,0x1e59f25f
  409e91:	and    bl,ah
  409e93:	std    
  409e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e95:	nop
  409e96:	pop    eax
  409e97:	jp     0x409e1f
  409e99:	shr    BYTE PTR [eax+0x31],0x6
  409e9d:	(bad)  
  409e9f:	sbb    bl,BYTE PTR [eax+edi*4+0x42]
  409ea3:	jge    0x409e62
  409ea5:	adc    esi,ebp
  409ea7:	test   ebx,0xb35c3c67
  409ead:	loope  0x409e9b
  409eaf:	sub    eax,0x1662bb3e
  409eb4:	(bad)  
  409eb5:	ror    ebx,1
  409eb7:	repz jnp 0x409ec7
  409eba:	dec    ebp
  409ebb:	clc    
  409ebc:	popf   
  409ebd:	(bad)  
  409ebe:	clc    
  409ebf:	push   ebp
  409ec0:	pushfw 
  409ec2:	sub    cl,al
  409ec4:	push   edx
  409ec5:	mov    bh,0x2f
  409ec7:	aas    
  409ec8:	push   ecx
  409ec9:	retf   
  409eca:	sbb    eax,0xf1304c65
  409ecf:	mov    eax,ds:0x905a399b
  409ed4:	adc    BYTE PTR [esi-0x12ab7f60],bl
  409eda:	outs   dx,BYTE PTR ds:[esi]
  409edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409edc:	add    BYTE PTR [esi+edx*4],dh
  409edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee0:	or     eax,0x19b05875
  409ee5:	sbb    al,0x83
  409ee7:	push   es
  409ee8:	fist   WORD PTR [edi-0x3a]
  409eeb:	cmp    al,0x3e
  409eed:	mov    ecx,0xfd546b1
  409ef2:	and    ebx,ebp
  409ef4:	adc    ecx,DWORD PTR [ecx-0x43622480]
  409efa:	stos   DWORD PTR es:[edi],eax
  409efb:	push   ss
  409efc:	push   es
  409efd:	and    eax,DWORD PTR ds:0x9216d27e
  409f03:	cmp    esp,DWORD PTR [ecx-0x3f]
  409f06:	xchg   ebp,eax
  409f07:	scas   eax,DWORD PTR es:[edi]
  409f08:	add    DWORD PTR gs:[edi+0x62],esi
  409f0c:	(bad)  
  409f0d:	sub    edi,DWORD PTR [edx]
  409f0f:	push   esp
  409f10:	mov    ebp,0xd1ae9fe1
  409f15:	adc    edi,DWORD PTR [eax-0x69ea6b33]
  409f1b:	rcr    DWORD PTR [edi-0x60f4420e],0x3c
  409f22:	pop    ebp
  409f23:	xor    ah,BYTE PTR [ebp*2+0x4ac8e039]
  409f2a:	push   ebp
  409f2b:	mov    ebx,0x6d3eb359
  409f30:	sub    dh,BYTE PTR [ebx]
  409f32:	add    ecx,esp
  409f34:	jne    0x409f3d
  409f36:	xlat   BYTE PTR ds:[ebx]
  409f37:	(bad)  
  409f38:	pop    es
  409f39:	add    BYTE PTR [ecx],bl
  409f3b:	cs jle 0x409f5b
  409f3e:	icebp  
  409f3f:	repnz test BYTE PTR [ebx-0x905a94e],0xc3
  409f47:	in     al,dx
  409f48:	nop
  409f49:	inc    esp
  409f4a:	mov    edx,DWORD PTR [esi+0x1b]
  409f4d:	js     0x409f68
  409f4f:	rcr    ah,0xc8
  409f52:	repz lea edi,[edx+0x7f]
  409f56:	outs   dx,DWORD PTR ds:[esi]
  409f57:	cmp    ah,al
  409f59:	(bad)  
  409f5a:	loope  0x409f8b
  409f5c:	es pop sp
  409f5f:	inc    ebx
  409f60:	xchg   DWORD PTR [edi+eax*2],ecx
  409f63:	jnp    0x409ef5
  409f65:	and    esi,DWORD PTR [edi+edx*2-0x12]
  409f69:	mov    eax,0xfedeaef5
  409f6e:	lods   eax,DWORD PTR ss:[esi]
  409f70:	pop    edi
  409f71:	jbe    0x409f5e
  409f73:	and    al,0xa2
  409f75:	push   edi
  409f76:	inc    edx
  409f77:	or     BYTE PTR [ebp*1-0x655e1c62],ch
  409f7e:	data16 test ah,ch
  409f81:	fisub  WORD PTR [edx-0x4a]
  409f84:	xchg   esi,eax
  409f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f86:	stc    
  409f87:	add    edi,DWORD PTR [edx+0x31fb13b6]
  409f8d:	xchg   BYTE PTR [ecx-0x5cf93fb],dl
  409f93:	imul   ebx,DWORD PTR [edx-0x63],0xba1c348d
  409f9a:	enter  0x7722,0xd9
  409f9e:	xor    al,0x6f
  409fa0:	mov    ah,0xef
  409fa2:	or     ch,ah
  409fa4:	imul   esp,DWORD PTR [esi+0x2f],0x21
  409fa8:	daa    
  409fa9:	jnp    0x409f57
  409fab:	ucomiss xmm5,xmm1
  409fae:	dec    edx
  409faf:	cs sbb bl,ah
  409fb2:	stc    
  409fb3:	xchg   DWORD PTR [edi-0x6e2d510d],edx
  409fb9:	rol    esp,1
  409fbb:	sub    eax,0x478e61ad
  409fc0:	inc    ebp
  409fc1:	fldenv [ebx+edi*4-0x7ad27ebe]
  409fc8:	dec    esi
  409fc9:	mov    al,0x3e
  409fcb:	scas   eax,DWORD PTR es:[edi]
  409fcc:	test   al,0xa
  409fce:	xchg   BYTE PTR [ecx],ch
  409fd0:	xchg   ecx,eax
  409fd1:	rol    DWORD PTR [esi+ebx*4+0x9],0xfd
  409fd6:	cld    
  409fd7:	mov    BYTE PTR [ebp-0x6d9dfeab],ch
  409fdd:	or     bl,bh
  409fdf:	dec    ecx
  409fe0:	data16 jne 0x409f8d
  409fe3:	mov    ebx,0x1efa5c79
  409fe8:	jp     0x40a013
  409fea:	das    
  409feb:	pushf  
  409fec:	lock push es
  409fee:	popa   
  409fef:	iret   
  409ff0:	inc    edx
  409ff1:	outs   dx,DWORD PTR ds:[esi]
  409ff2:	std    
  409ff3:	rcr    DWORD PTR [ebp+0x7172e5d9],cl
  409ff9:	pushf  
  409ffa:	xor    al,0x1f
  409ffc:	dec    esp
  409ffd:	adc    al,BYTE PTR [edi+0x5d]
  40a000:	xchg   esi,eax
  40a001:	cmp    eax,DWORD PTR [edi+0x2d67ae37]
  40a007:	dec    esi
  40a008:	test   eax,0xcc997eb9
  40a00d:	mov    BYTE PTR [esi-0x59e8d594],ch
  40a013:	inc    ecx
  40a014:	xchg   BYTE PTR [eax+ebx*1+0x765f020d],cl
  40a01b:	pop    edi
  40a01c:	xchg   ebp,eax
  40a01d:	cmovno esi,DWORD PTR [edx+0x73129069]
  40a024:	sub    eax,0x2f6a74ad
  40a029:	mov    ah,ah
  40a02b:	push   es
  40a02c:	data16 mov ds:0x73184809,al
  40a032:	or     eax,0xa4836a8c
  40a037:	call   0x5cba7005
  40a03c:	jne    0x40a016
  40a03e:	and    ch,BYTE PTR [ecx+0xf2c7e12]
  40a044:	stos   BYTE PTR es:[edi],al
  40a045:	mov    esp,0x1e233b60
  40a04a:	xor    ch,BYTE PTR [ebx+0x391e6a1c]
  40a050:	imul   esp,DWORD PTR [edi*1+0x39284b98],0x57
  40a058:	or     al,BYTE PTR [edx]
  40a05a:	push   esi
  40a05c:	sbb    eax,0x7cf86e83
  40a061:	xchg   BYTE PTR [ecx+edx*8+0x2c],dh
  40a065:	out    dx,eax
  40a066:	stos   DWORD PTR es:[edi],eax
  40a067:	push   edx
  40a068:	or     bl,BYTE PTR [esi+0x68]
  40a06b:	jmp    0x562d:0x891efc8
  40a072:	or     DWORD PTR [eax-0x1a7d3289],0xffffffd3
  40a079:	lods   eax,DWORD PTR ds:[esi]
  40a07a:	mov    ecx,0xfc696a0a
  40a07f:	test   al,0xae
  40a081:	xchg   esp,eax
  40a082:	and    eax,DWORD PTR [edx]
  40a084:	push   cs
  40a085:	cmp    ch,cl
  40a087:	ds pop es
  40a089:	add    ah,BYTE PTR [eax]
  40a08b:	dec    edx
  40a08c:	adc    BYTE PTR [edx+0x29],ah
  40a08f:	aad    0x62
  40a091:	push   edi
  40a092:	push   esp
  40a093:	test   al,0xb9
  40a095:	out    dx,al
  40a096:	call   0xd7d:0x5aeffcf4
  40a09d:	pop    edi
  40a09e:	xor    al,0x67
  40a0a0:	lahf   
  40a0a1:	push   0x51
  40a0a3:	dec    ebp
  40a0a4:	sbb    BYTE PTR [ebx-0x30b187dd],ah
  40a0aa:	stc    
  40a0ab:	add    BYTE PTR [ebx+0x73cc52b6],0x93
  40a0b2:	clc    
  40a0b3:	mov    ch,0x13
  40a0b5:	add    esi,DWORD PTR [ebp+0x6006c133]
  40a0bb:	mov    al,ds:0x6180c312
  40a0c0:	or     BYTE PTR [edi-0x11e38aa5],cl
  40a0c6:	push   esi
  40a0c7:	push   eax
  40a0c8:	xor    eax,0x83278e42
  40a0cd:	test   al,0x60
  40a0cf:	push   0xa0377dc9
  40a0d4:	in     al,0x6d
  40a0d6:	(bad)  
  40a0d7:	nop
  40a0d8:	add    eax,DWORD PTR ds:0x326cb0d7
  40a0de:	or     ebp,DWORD PTR [edx+0x3cd8ef30]
  40a0e4:	jmp    0x40a122
  40a0e6:	xchg   esp,eax
  40a0e7:	cli    
  40a0e8:	adc    ebp,esi
  40a0ea:	scas   al,BYTE PTR es:[edi]
  40a0eb:	es clc 
  40a0ed:	sar    BYTE PTR gs:[eax],0xb6
  40a0f1:	rcl    BYTE PTR [edi-0x3744b274],0x5b
  40a0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0f9:	push   ss
  40a0fa:	(bad)  
  40a0fb:	shl    esi,0x1
  40a0fe:	in     al,0x63
  40a100:	inc    edx
  40a101:	out    0xec,al
  40a103:	jecxz  0x40a158
  40a105:	pop    esi
  40a106:	cdq    
  40a107:	pop    esi
  40a108:	push   eax
  40a10a:	lock sub eax,0x3c70bed2
  40a110:	add    al,0x93
  40a112:	retf   0x8ffb
  40a115:	sbb    eax,DWORD PTR [esi+0x60b2ad88]
  40a11b:	xlat   BYTE PTR ds:[ebx]
  40a11c:	xor    esi,DWORD PTR [ebx-0x33]
  40a11f:	fld    TBYTE PTR ds:0xe2c08a25
  40a125:	hlt    
  40a126:	test   DWORD PTR [eax+0x72c74730],0xcc4fe6b4
  40a130:	fwait
  40a131:	or     al,bl
  40a133:	mov    eax,0x39b04141
  40a138:	out    0xf2,eax
  40a13a:	test   DWORD PTR [esi-0x92b680a],ebp
  40a140:	add    BYTE PTR [ecx-0x52],bl
  40a143:	xchg   edi,eax
  40a144:	int    0x48
  40a146:	fwait
  40a147:	push   esp
  40a148:	dec    esp
  40a149:	loopne 0x40a103
  40a14b:	jb     0x40a0e3
  40a14d:	out    dx,al
  40a14e:	gs pop ebp
  40a150:	cmp    al,0xed
  40a152:	jbe    0x40a1d1
  40a154:	jnp    0x40a136
  40a156:	nop
  40a157:	mov    ebx,0x3970c36f
  40a15c:	inc    ebx
  40a15d:	enter  0x64f,0x41
  40a161:	adc    edi,DWORD PTR [edx]
  40a163:	push   cs
  40a164:	fwait
  40a165:	sub    ebp,DWORD PTR ds:0x805d8607
  40a16b:	inc    esp
  40a16c:	and    eax,0x9bb5d015
  40a171:	das    
  40a172:	test   BYTE PTR [eax-0x56],al
  40a175:	fcompp 
  40a177:	std    
  40a178:	xchg   edi,eax
  40a179:	xchg   BYTE PTR [ebp+0x6d],al
  40a17c:	jmp    0x358:0x62d0e6dd
  40a183:	test   al,0x55
  40a185:	adc    eax,0x992c5b20
  40a18a:	stos   BYTE PTR es:[edi],al
  40a18b:	ffreep st(6)
  40a18d:	push   esi
  40a18e:	xor    eax,0x7dc716d8
  40a193:	inc    esp
  40a194:	(bad)  
  40a195:	sbb    eax,0x8f158abd
  40a19a:	adc    bl,BYTE PTR [eax+ebp*8-0xf698c51]
  40a1a1:	jb     0x40a174
  40a1a3:	sbb    BYTE PTR [eax-0x11ceb984],0x75
  40a1aa:	test   DWORD PTR [esi-0x39],ebx
  40a1ad:	sbb    DWORD PTR [esi],eax
  40a1af:	mov    bl,0x55
  40a1b1:	pop    esp
  40a1b2:	mov    ss,edx
  40a1b4:	pushf  
  40a1b5:	dec    esp
  40a1b6:	mov    ecx,0xd6d5b335
  40a1bb:	pop    esp
  40a1bc:	leave  
  40a1bd:	arpl   WORD PTR [eax-0x1c],ax
  40a1c0:	outs   dx,DWORD PTR cs:[esi]
  40a1c2:	xchg   edi,eax
  40a1c3:	pop    esi
  40a1c4:	ficomp DWORD PTR [esp+esi*4+0x28d7d542]
  40a1cb:	jbe    0x40a18a
  40a1cd:	call   0x7cd58f13
  40a1d2:	cwde   
  40a1d3:	pushf  
  40a1d4:	mov    WORD PTR [edi+0x29],ds
  40a1d7:	addr16 int 0x24
  40a1da:	push   ss
  40a1db:	(bad)  
  40a1dc:	mov    BYTE PTR [esi],0x9c
  40a1df:	(bad)  
  40a1e0:	and    ecx,esi
  40a1e2:	inc    edi
  40a1e3:	dec    esi
  40a1e4:	mov    esi,0x71272ddc
  40a1e9:	call   0xe4b1:0x567a6ff5
  40a1f0:	jns    0x40a1bf
  40a1f2:	jl     0x40a1e3
  40a1f4:	jmp    0x40a1f8
  40a1f6:	and    al,0x1b
  40a1f8:	inc    eax
  40a1f9:	imul   ebx,eax,0x7d
  40a1fc:	push   ebx
  40a1fd:	push   cs
  40a1fe:	mov    ah,BYTE PTR [eax+eax*4-0x74b8113b]
  40a205:	jno    0x40a279
  40a207:	sub    al,0x1e
  40a209:	mov    edx,0xdc20a256
  40a20e:	fsub   DWORD PTR [esi]
  40a210:	enter  0xb3e3,0x79
  40a214:	jb     0x40a20a
  40a216:	mov    ch,0x80
  40a218:	dec    ebp
  40a219:	xor    eax,0x8509f58d
  40a21e:	pop    ds
  40a21f:	jge    0x40a292
  40a221:	inc    ebp
  40a222:	cmp    al,0x26
  40a224:	loope  0x40a252
  40a226:	clc    
  40a227:	sbb    eax,0x393071f1
  40a22c:	in     al,dx
  40a22d:	and    BYTE PTR [ebx-0x7e],0xa5
  40a231:	xor    eax,0xb69c9f88
  40a236:	out    dx,al
  40a237:	jb     0x40a20d
  40a239:	js     0x40a20a
  40a23b:	mov    esp,0xdff24278
  40a240:	in     al,0x25
  40a242:	jae    0x40a23d
  40a244:	leave  
  40a245:	xchg   esi,eax
  40a246:	test   DWORD PTR [ecx-0x7fb12dfa],esp
  40a24c:	cmp    bl,BYTE PTR [ebx+0x7e1136b2]
  40a252:	cmp    al,0x93
  40a254:	test   ecx,ebp
  40a256:	loopne 0x40a1da
  40a258:	outs   dx,BYTE PTR ds:[esi]
  40a259:	fisttp DWORD PTR [ebp*1+0x661a6a4a]
  40a260:	sti    
  40a261:	jecxz  0x40a262
  40a263:	ins    DWORD PTR es:[edi],dx
  40a264:	rcr    DWORD PTR [esi-0x3f73fdf3],0xc2
  40a26b:	mov    dh,0x61
  40a26d:	sbb    eax,DWORD PTR [esi-0x2a]
  40a270:	xchg   BYTE PTR [edx],bh
  40a272:	mov    esp,0x82bbc006
  40a277:	test   BYTE PTR [eax+0x34514962],0xce
  40a27e:	xchg   ecx,eax
  40a27f:	mov    bl,0x12
  40a281:	pop    esp
  40a282:	mov    esp,0xfd4d8c53
  40a287:	std    
  40a288:	sub    bh,BYTE PTR [edi]
  40a28a:	stos   DWORD PTR es:[edi],eax
  40a28b:	test   al,0x5f
  40a28d:	out    0xa4,eax
  40a28f:	add    al,0x5d
  40a291:	jge    0x40a258
  40a293:	leave  
  40a294:	in     eax,dx
  40a295:	retf   
  40a296:	retf   
  40a297:	(bad)  
  40a298:	outs   dx,BYTE PTR ds:[esi]
  40a299:	sub    cl,BYTE PTR [eax+0x59]
  40a29c:	(bad)  
  40a29d:	fwait
  40a29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a29f:	je     0x40a243
  40a2a1:	call   0xbfa6:0xbeca807b
  40a2a8:	add    eax,0xd3e6d3b5
  40a2ad:	pop    ebp
  40a2ae:	ins    BYTE PTR es:[edi],dx
  40a2af:	ss pop ebx
  40a2b1:	inc    BYTE PTR [ecx]
  40a2b3:	jo     0x40a328
  40a2b5:	ss push esi
  40a2b7:	mov    esp,0xe6a28787
  40a2bc:	mov    ch,0x55
  40a2be:	in     eax,dx
  40a2bf:	ror    BYTE PTR [edx-0x1e9774cd],1
  40a2c5:	jg     0x40a2e9
  40a2c7:	sbb    ebp,ecx
  40a2c9:	sub    al,0xa9
  40a2cb:	les    edx,FWORD PTR [ecx+0x2dc84e20]
  40a2d1:	cmc    
  40a2d2:	cwde   
  40a2d3:	xchg   edi,eax
  40a2d4:	sbb    ah,BYTE PTR [esi-0x1d37494c]
  40a2da:	mov    esi,ds
  40a2dc:	add    ah,al
  40a2de:	or     al,0x1e
  40a2e0:	push   ebx
  40a2e1:	loopne 0x40a35c
  40a2e3:	xor    BYTE PTR [edx+0x19e0cc1b],ah
  40a2e9:	in     al,0x74
  40a2eb:	int3   
  40a2ec:	mov    ebp,0x50ca4f6d
  40a2f1:	fs sub edx,ebx
  40a2f4:	dec    ebx
  40a2f5:	jp     0x40a34f
  40a2f7:	leave  
  40a2f8:	mov    cl,0x49
  40a2fa:	(bad)
  40a2ff:	pop    eax
  40a300:	mov    esi,0x508accf6
  40a305:	push   ecx
  40a306:	mov    BYTE PTR [edi-0x72],ah
  40a309:	sbb    dh,BYTE PTR [edi+0x449baef0]
  40a30f:	mov    dl,0x64
  40a311:	fbstp  TBYTE PTR [edi]
  40a313:	mov    ebp,ecx
  40a315:	dec    eax
  40a316:	mov    DWORD PTR [ecx-0xe222954],esi
  40a31c:	fwait
  40a31d:	xchg   ebx,eax
  40a31e:	call   0x1c07:0x6681d49a
  40a325:	adc    BYTE PTR [eax+0x24],0x33
  40a329:	jmp    0x150be98e
  40a32e:	dec    esi
  40a32f:	(bad)  
  40a330:	inc    DWORD PTR [edi]
  40a332:	stos   DWORD PTR es:[edi],eax
  40a333:	pop    esi
  40a334:	mov    dl,0x65
  40a336:	sub    eax,0xaabcf704
  40a33b:	inc    edx
  40a33c:	sbb    DWORD PTR [ebx],edi
  40a33e:	push   ebp
  40a33f:	push   cs
  40a340:	xchg   ecx,eax
  40a341:	or     eax,0xdc5c72c5
  40a346:	mov    dl,0xf5
  40a348:	mov    ah,0x1b
  40a34a:	or     BYTE PTR [ebp+0x40],0x34
  40a34e:	push   esp
  40a34f:	push   eax
  40a350:	lods   al,BYTE PTR ds:[esi]
  40a351:	inc    edx
  40a352:	scas   eax,DWORD PTR es:[edi]
  40a353:	shl    BYTE PTR [esi+0x7a],cl
  40a356:	ja     0x40a381
  40a358:	or     BYTE PTR [eax+0x7ef2e6da],dh
  40a35e:	xor    BYTE PTR [ecx+0x1d4f51fc],al
  40a364:	push   ecx
  40a365:	pop    esp
  40a366:	xchg   ebp,eax
  40a367:	pop    esi
  40a368:	jae    0x40a3dc
  40a36a:	aaa    
  40a36b:	call   FWORD PTR [edx]
  40a36d:	push   edi
  40a36e:	rol    DWORD PTR [ecx-0x57],cl
  40a371:	lock dec esi
  40a373:	fild   QWORD PTR [eax+edi*8+0x56]
  40a377:	(bad)  
  40a379:	mov    ah,0x7f
  40a37b:	or     eax,0xa7ea9217
  40a380:	dec    ebp
  40a381:	or     eax,0xeea8ef0
  40a386:	jp     0x40a321
  40a388:	fdiv   QWORD PTR ds:0x3bcb184b
  40a38e:	push   ebp
  40a38f:	xlat   BYTE PTR ds:[ebx]
  40a390:	in     al,0x26
  40a392:	or     ecx,DWORD PTR [ebp+0x1f]
  40a395:	add    ebx,DWORD PTR [esi-0x3635e66f]
  40a39b:	into   
  40a39c:	out    dx,al
  40a39d:	fsub   QWORD PTR [eax-0x6]
  40a3a0:	das    
  40a3a1:	mov    cl,0x68
  40a3a3:	sub    esi,DWORD PTR [ebx-0x7c364b94]
  40a3a9:	fisubr WORD PTR [ebx+0x2]
  40a3ac:	and    al,0xfa
  40a3ae:	daa    
  40a3af:	fidiv  WORD PTR [ebp-0x74d22700]
  40a3b5:	inc    eax
  40a3b6:	daa    
  40a3b7:	cwde   
  40a3b8:	js     0x40a401
  40a3ba:	cli    
  40a3bb:	inc    ecx
  40a3bc:	push   ecx
  40a3bd:	sub    eax,0xfc88aa8e
  40a3c2:	sar    al,1
  40a3c4:	sub    ecx,DWORD PTR [edi]
  40a3c6:	mov    ds:0xf1906515,eax
  40a3cb:	je     0x40a3fe
  40a3cd:	cmp    bl,BYTE PTR [eax+edx*4+0x1f]
  40a3d1:	mov    BYTE PTR [ebp+ebx*1-0x3c],dl
  40a3d5:	mov    cl,0x4b
  40a3d7:	sti    
  40a3d8:	add    DWORD PTR [edx+0x56f744da],edx
  40a3de:	adc    DWORD PTR [ecx-0x7c099947],0xffffffce
  40a3e5:	xor    cl,BYTE PTR [edi-0x60]
  40a3e8:	cli    
  40a3e9:	dec    edx
  40a3ea:	adc    al,BYTE PTR [esi-0x1a]
  40a3ed:	pop    esi
  40a3ee:	inc    edi
  40a3ef:	sub    BYTE PTR [ecx+0x20],cl
  40a3f2:	out    dx,eax
  40a3f3:	mov    edi,0xfdbeea04
  40a3f8:	loope  0x40a3eb
  40a3fa:	sbb    DWORD PTR [ebp-0x30],ebp
  40a3fd:	pop    ecx
  40a3fe:	inc    esp
  40a3ff:	add    BYTE PTR [esi-0x35],dl
  40a402:	xchg   esi,eax
  40a403:	push   edx
  40a404:	fimul  WORD PTR gs:[edx+0x4416f93b]
  40a40b:	sti    
  40a40c:	cmp    ebx,DWORD PTR [ebp-0x14]
  40a40f:	and    al,0xd6
  40a411:	jmp    0xbf84:0xfa4dffed
  40a418:	pop    ebp
  40a419:	adc    al,0x3c
  40a41b:	outs   dx,DWORD PTR ds:[esi]
  40a41c:	inc    ebp
  40a41d:	sbb    dh,dh
  40a41f:	adc    ebx,DWORD PTR [edx-0x3e580d14]
  40a425:	jmp    0xff91:0xd9d13989
  40a42c:	test   bl,dl
  40a42e:	ficomp WORD PTR [eax+0x8]
  40a431:	enter  0xdb5a,0xf1
  40a435:	leave  
  40a436:	test   BYTE PTR [esi-0x29],0xa0
  40a43a:	int3   
  40a43b:	in     eax,0x46
  40a43d:	loopne 0x40a45a
  40a43f:	pop    ebx
  40a440:	jne    0x40a3ea
  40a442:	inc    ebx
  40a443:	sub    al,0x94
  40a445:	pop    ds
  40a446:	test   eax,0x3f1a1058
  40a44b:	rcr    BYTE PTR [esi],cl
  40a44d:	call   DWORD PTR [ebp-0x59]
  40a450:	(bad)
  40a453:	and    al,0x6c
  40a455:	push   ds
  40a456:	dec    ecx
  40a457:	ds in  eax,0x12
  40a45a:	shl    BYTE PTR [edi],1
  40a45c:	jle    0x40a473
  40a45e:	test   BYTE PTR [esi],cl
  40a460:	pop    ebx
  40a461:	cld    
  40a462:	ss std 
  40a464:	mov    dl,0x68
  40a466:	arpl   dx,cx
  40a468:	(bad)  
  40a469:	outs   dx,BYTE PTR ds:[esi]
  40a46a:	fsubr  st(2),st
  40a46c:	mov    bh,0x87
  40a46e:	sti    
  40a46f:	jne    0x40a4d4
  40a471:	out    dx,eax
  40a472:	test   BYTE PTR [ebx],cl
  40a474:	test   al,0xd0
  40a476:	rcr    ch,0x39
  40a479:	and    eax,0xbae5f395
  40a47e:	push   ds
  40a47f:	(bad)  
  40a480:	mov    cs,ecx
  40a482:	cmp    BYTE PTR [esp+edx*1+0x36],0x92
  40a487:	lock (bad) 
  40a48a:	cli    
  40a48b:	ja     0x40a4c5
  40a48d:	sahf   
  40a48e:	lods   eax,DWORD PTR ds:[esi]
  40a48f:	adc    DWORD PTR [eax-0x7dde5500],esi
  40a495:	sub    DWORD PTR [esi-0x3e],eax
  40a498:	inc    ebx
  40a499:	push   cs
  40a49a:	pop    ss
  40a49b:	jb     0x40a47b
  40a49d:	scas   eax,DWORD PTR es:[edi]
  40a49e:	dec    ecx
  40a49f:	(bad)  
  40a4a0:	js     0x40a494
  40a4a2:	outs   dx,DWORD PTR ds:[esi]
  40a4a3:	pushf  
  40a4a4:	pop    ebp
  40a4a5:	push   0x71468118
  40a4aa:	add    ecx,edi
  40a4ac:	pusha  
  40a4ad:	mov    DWORD PTR ds:[ebx+0x46],0x52ca400
  40a4b5:	clc    
  40a4b6:	add    eax,0x43776788
  40a4bb:	enter  0x1c86,0xea
  40a4bf:	sbb    BYTE PTR [edi+eiz*1+0x3ad02492],ch
  40a4c6:	sub    ecx,ebx
  40a4c8:	inc    ecx
  40a4c9:	rol    esp,cl
  40a4cb:	xor    eax,0xffffff93
  40a4ce:	ret    0x7167
  40a4d1:	mov    DWORD PTR [ebx-0x5e734a2],ebx
  40a4d7:	add    cl,BYTE PTR [eax]
  40a4d9:	pop    ecx
  40a4da:	fdivr  st(3),st
  40a4dc:	(bad)  
  40a4dd:	jg     0x40a487
  40a4df:	pop    ebp
  40a4e0:	or     esp,edx
  40a4e2:	test   al,0xc9
  40a4e4:	cwde   
  40a4e5:	clc    
  40a4e6:	xchg   BYTE PTR [edi+0x3b3d7ce7],dh
  40a4ec:	or     ebp,DWORD PTR [esi+ebp*4]
  40a4ef:	icebp  
  40a4f0:	aas    
  40a4f1:	mov    bl,0x85
  40a4f3:	in     eax,0xfe
  40a4f5:	push   0x6cf37520
  40a4fa:	scas   eax,DWORD PTR es:[edi]
  40a4fb:	out    dx,eax
  40a4fc:	jae    0x40a556
  40a4fe:	adc    dl,ch
  40a500:	in     eax,0xd1
  40a502:	test   ah,dl
  40a504:	xchg   DWORD PTR gs:[edx-0x72ec4609],ebp
  40a50b:	test   eax,0x7fd0c8b
  40a510:	mov    edx,0x18b1add2
  40a515:	outs   dx,BYTE PTR ds:[esi]
  40a516:	mov    ebp,DWORD PTR [esi]
  40a518:	sbb    BYTE PTR [eax],dl
  40a51a:	sub    ebx,DWORD PTR [esi+edx*4+0x66]
  40a51e:	push   edi
  40a51f:	ret    
  40a520:	or     esp,eax
  40a522:	cmp    al,0xb7
  40a524:	and    eax,0x8b135d17
  40a529:	in     al,dx
  40a52a:	leave  
  40a52b:	jle    0x40a596
  40a52d:	fst    DWORD PTR [eax]
  40a52f:	xor    bl,cl
  40a531:	leave  
  40a532:	arpl   WORD PTR [esi-0x143a02c4],cx
  40a538:	sbb    esi,0x3a
  40a53b:	pushf  
  40a53c:	out    dx,eax
  40a53d:	(bad)  ds:0x251772c0
  40a543:	dec    eax
  40a544:	ficomp WORD PTR [edi-0x76]
  40a547:	sub    al,0x24
  40a549:	xor    ch,al
  40a54b:	mov    DWORD PTR [eax+0x16],eax
  40a54e:	sbb    eax,DWORD PTR [eax]
  40a550:	repnz or bh,BYTE PTR [esp+ebp*8-0x78b135d9]
  40a558:	inc    edi
  40a559:	add    ah,bl
  40a55b:	xor    al,0x7c
  40a55d:	jne    0x40a5ca
  40a55f:	jb     0x40a521
  40a561:	je     0x40a5ca
  40a563:	push   0xffffffaf
  40a565:	sahf   
  40a566:	or     eax,eax
  40a568:	add    BYTE PTR [eax+0x2b6a0a47],dh
  40a56e:	xchg   esi,esp
  40a570:	sub    BYTE PTR [ebx-0x18],ch
  40a573:	xchg   DWORD PTR [ecx-0x2fd36db1],edi
  40a579:	ins    BYTE PTR es:[edi],dx
  40a57a:	jnp    0x40a5c7
  40a57c:	mov    dl,0x4d
  40a57e:	jne    0x40a513
  40a580:	lock stc 
  40a582:	lock jge 0x40a53b
  40a585:	sub    BYTE PTR [ebp-0x59a9ed3c],cl
  40a58b:	mov    esi,0xcc561cb9
  40a590:	cmp    DWORD PTR [ebx+0x40],0x13fab87b
  40a597:	ss pop esp
  40a599:	sbb    ebx,esp
  40a59b:	iret   
  40a59c:	outs   dx,BYTE PTR ds:[esi]
  40a59d:	lods   al,BYTE PTR ds:[esi]
  40a59e:	push   es
  40a59f:	xor    al,0x44
  40a5a1:	dec    ebp
  40a5a2:	push   edi
  40a5a3:	mov    esp,?
  40a5a5:	push   ebp
  40a5a6:	cwde   
  40a5a7:	push   ebx
  40a5a8:	addr16 dec ebx
  40a5aa:	daa    
  40a5ab:	pop    esp
  40a5ac:	pop    es
  40a5ad:	cmc    
  40a5ae:	push   0x5e
  40a5b0:	and    eax,0xef4913ac
  40a5b5:	adc    eax,esp
  40a5b7:	sub    DWORD PTR [eax-0x4316e567],ecx
  40a5bd:	push   ebx
  40a5be:	stos   BYTE PTR es:[edi],al
  40a5bf:	inc    ebp
  40a5c0:	out    0x45,al
  40a5c2:	mov    al,BYTE PTR [ebp+0x71cdb02e]
  40a5c8:	ja     0x40a610
  40a5ca:	mov    ah,0x7b
  40a5cc:	or     DWORD PTR [eax-0xf],ebx
  40a5cf:	push   ebp
  40a5d0:	push   ebp
  40a5d1:	stos   DWORD PTR es:[edi],eax
  40a5d2:	add    BYTE PTR [esi-0xf],ch
  40a5d5:	sub    DWORD PTR gs:[edx],eax
  40a5d8:	out    dx,eax
  40a5d9:	fsubr  DWORD PTR [ebp-0x28e9136d]
  40a5df:	clc    
  40a5e0:	pop    ss
  40a5e1:	test   al,0x61
  40a5e3:	in     al,0x5d
  40a5e5:	xchg   esi,eax
  40a5e6:	in     eax,dx
  40a5e7:	mov    bl,0xad
  40a5e9:	mov    ds:0x6152ece1,al
  40a5ee:	sbb    eax,0x2eaaa797
  40a5f3:	frstor [ecx+0x66]
  40a5f6:	mov    edi,0xd4052417
  40a5fb:	fs pushf 
  40a5fd:	leave  
  40a5fe:	xor    eax,0xfee2b7ae
  40a603:	xchg   esp,eax
  40a604:	mov    dh,0xd0
  40a606:	jnp    0x40a5c4
  40a608:	sbb    DWORD PTR [edi+0x36b5e9d6],edi
  40a60e:	and    eax,0x8587352e
  40a613:	adc    eax,DWORD PTR [eax-0x31]
  40a616:	mov    al,0x3f
  40a618:	dec    ebp
  40a619:	nop
  40a61a:	inc    edi
  40a61b:	sub    al,0xbf
  40a61d:	sar    esp,0x1c
  40a620:	pusha  
  40a621:	mov    ebp,0x455c80b5
  40a626:	cmp    BYTE PTR [edi],0x97
  40a629:	xchg   ebx,eax
  40a62a:	jne    0x40a5be
  40a62c:	cmp    BYTE PTR [edi-0x4],dh
  40a62f:	je     0x40a657
  40a631:	(bad)  ds:0xc95f6cfc
  40a637:	or     DWORD PTR [edi],edx
  40a639:	push   eax
  40a63a:	dec    eax
  40a63b:	pop    eax
  40a63c:	pop    ecx
  40a63d:	inc    edx
  40a63e:	jbe    0x40a649
  40a640:	push   ecx
  40a641:	pushf  
  40a642:	sub    bl,BYTE PTR [edx-0x6]
  40a645:	pushf  
  40a646:	sbb    cl,BYTE PTR [eax]
  40a648:	fwait
  40a649:	push   edx
  40a64a:	mov    dh,0x5f
  40a64c:	mov    ch,0xc6
  40a64e:	push   ss
  40a64f:	loop   0x40a634
  40a651:	xchg   esi,eax
  40a652:	push   0xffffff8a
  40a654:	sahf   
  40a655:	adc    ch,BYTE PTR [edi+edi*4-0x6206106f]
  40a65c:	mov    ds:0xdd609e14,eax
  40a661:	sub    BYTE PTR [eax-0x6b],dl
  40a664:	xchg   edi,eax
  40a665:	push   0x62
  40a667:	mov    cl,0xda
  40a669:	sub    dh,ch
  40a66b:	pop    ebx
  40a66c:	je     0x40a62b
  40a66e:	cmp    esi,ecx
  40a670:	cmp    eax,0x7cb08ef9
  40a675:	jae    0x40a6e1
  40a677:	push   ebp
  40a678:	cmc    
  40a679:	jecxz  0x40a6e0
  40a67b:	xor    al,0x67
  40a67d:	in     eax,dx
  40a67e:	cmp    eax,0x95fc47d3
  40a683:	repz jmp 0x40a61a
  40a686:	xor    BYTE PTR ds:0x46fdace3,ch
  40a68c:	out    0xc0,al
  40a68e:	sbb    al,BYTE PTR [ecx-0x29]
  40a691:	mov    eax,?
  40a693:	dec    ecx
  40a694:	pop    ds
  40a695:	fwait
  40a696:	int3   
  40a697:	mov    ebp,0x12747660
  40a69c:	add    BYTE PTR [edx+0x5fc9dacb],al
  40a6a2:	mov    eax,ds:0x167c4772
  40a6a7:	adc    BYTE PTR [ecx+0x15b87238],0x5
  40a6ae:	lahf   
  40a6af:	fwait
  40a6b0:	pop    ds
  40a6b1:	fist   WORD PTR [ecx-0x160b376a]
  40a6b7:	xchg   edi,eax
  40a6b8:	push   es
  40a6b9:	sbb    ebx,DWORD PTR [ebp-0x7b]
  40a6bc:	retf   0xfa3c
  40a6bf:	sbb    BYTE PTR [esi],0xc3
  40a6c2:	pop    ss
  40a6c3:	aaa    
  40a6c4:	daa    
  40a6c5:	mov    al,0xab
  40a6c7:	pop    esi
  40a6c8:	pop    eax
  40a6c9:	lds    esi,FWORD PTR [eax+eax*2-0x29]
  40a6cd:	cmp    BYTE PTR ds:0x9136dc92,ch
  40a6d3:	out    0xf4,al
  40a6d5:	add    bh,dh
  40a6d7:	add    DWORD PTR [ebx+0xc749579],ebp
  40a6dd:	sub    BYTE PTR [edi],bl
  40a6df:	mov    ah,BYTE PTR [eax-0x1f]
  40a6e2:	mov    ds:0x77bbe453,al
  40a6e7:	or     al,0x57
  40a6e9:	xor    bl,cl
  40a6eb:	push   0x4
  40a6ed:	cmp    esp,DWORD PTR [edx-0x2d]
  40a6f0:	ret    
  40a6f1:	inc    edx
  40a6f2:	sahf   
  40a6f3:	ret    
  40a6f4:	shl    BYTE PTR [ecx+edx*8],0x19
  40a6f8:	adc    eax,0xbd35015
  40a6fd:	mov    ah,0xb7
  40a6ff:	pop    edx
  40a700:	mov    BYTE PTR [edi],bh
  40a702:	jmp    0x336b6f63
  40a707:	(bad)  
  40a708:	(bad)  
  40a709:	mov    esi,0x8e9d9ccd
  40a70e:	add    DWORD PTR [ecx-0x12],edx
  40a711:	dec    ecx
  40a712:	gs jae 0x40a78a
  40a715:	out    0x2f,eax
  40a717:	adc    dl,bl
  40a719:	mov    edi,0x82500d49
  40a71e:	push   ebx
  40a71f:	sub    ecx,DWORD PTR [esi+0x3e]
  40a722:	xchg   esi,eax
  40a723:	fidivr DWORD PTR [edx]
  40a725:	pop    ebp
  40a726:	in     eax,dx
  40a727:	das    
  40a728:	aam    0x54
  40a72a:	ret    0xa09a
  40a72d:	(bad)  
  40a72e:	jmp    0x40a758
  40a730:	mov    ah,0x40
  40a732:	xchg   ecx,eax
  40a733:	fs inc ebx
  40a735:	cmc    
  40a736:	aas    
  40a737:	in     al,dx
  40a738:	add    BYTE PTR [ebp-0x9],dh
  40a73b:	push   esi
  40a73c:	push   es
  40a73d:	lods   al,BYTE PTR ds:[esi]
  40a73e:	rol    BYTE PTR [eax],0x3d
  40a741:	dec    edi
  40a742:	jo     0x40a763
  40a744:	mov    DWORD PTR [ebx-0x5a9931eb],esi
  40a74a:	push   ss
  40a74b:	dec    edi
  40a74c:	jge    0x40a7ba
  40a74e:	or     DWORD PTR [eax-0x36],esi
  40a751:	pop    ecx
  40a752:	push   cs
  40a753:	mov    ecx,0xdc134dc0
  40a758:	ins    BYTE PTR es:[edi],dx
  40a759:	jl     0x40a70c
  40a75b:	mov    eax,ds:0xa69b029b
  40a760:	add    esp,esp
  40a762:	aam    0x88
  40a764:	mov    ebx,DWORD PTR ds:0x3ac42b8d
  40a76a:	push   eax
  40a76b:	or     dl,bl
  40a76d:	mov    ch,0xdd
  40a76f:	outs   dx,WORD PTR ds:[esi]
  40a771:	in     eax,dx
  40a772:	pusha  
  40a773:	call   0x8399:0x1de1fd3d
  40a77a:	mov    ds:0xc3f4b2a9,al
  40a77f:	push   ds
  40a780:	in     eax,dx
  40a781:	cld    
  40a782:	or     DWORD PTR [ecx],esi
  40a784:	ss popa 
  40a786:	pop    eax
  40a787:	pusha  
  40a788:	rol    BYTE PTR [edi+0x7dafa483],0xa1
  40a78f:	enter  0xd815,0xd0
  40a793:	sub    edx,ebx
  40a795:	xor    esi,DWORD PTR [edx+0x4c14b00]
  40a79b:	out    dx,al
  40a79c:	rcl    DWORD PTR [ebp-0x61],1
  40a79f:	push   ebx
  40a7a0:	jno    0x40a774
  40a7a2:	cmp    al,0x42
  40a7a4:	sub    dl,dl
  40a7a6:	sub    eax,0x2420e61f
  40a7ab:	loopne 0x40a7c0
  40a7ad:	int3   
  40a7ae:	hlt    
  40a7af:	adc    dh,BYTE PTR [ecx-0x36d829b9]
  40a7b5:	jp     0x40a7f6
  40a7b7:	xchg   esi,eax
  40a7b8:	stc    
  40a7b9:	in     al,0x6b
  40a7bb:	nop
  40a7bc:	sbb    DWORD PTR [ebp-0x71fa5600],eax
  40a7c2:	je     0x40a7d6
  40a7c4:	lea    ebx,ds:0xf596eaa
  40a7ca:	jnp    0x40a7a3
  40a7cc:	sbb    al,0x44
  40a7ce:	and    ebp,DWORD PTR [esi]
  40a7d0:	push   eax
  40a7d1:	jnp    0x40a777
  40a7d3:	(bad)  
  40a7d4:	inc    edi
  40a7d5:	inc    ebx
  40a7d6:	gs aaa 
  40a7d8:	sahf   
  40a7d9:	sbb    eax,edi
  40a7db:	push   eax
  40a7dc:	mov    cl,al
  40a7de:	jae    0x40a7d6
  40a7e0:	stc    
  40a7e1:	(bad)  
  40a7e2:	mov    ah,0xce
  40a7e4:	add    edx,DWORD PTR [edi]
  40a7e6:	aaa    
  40a7e7:	cmp    eax,0xaa7d270e
  40a7ec:	mov    ds:0x7573d244,eax
  40a7f1:	(bad)  
  40a7f2:	es imul eax,ebx,0x2d4d821
  40a7f9:	inc    esp
  40a7fa:	xor    al,0x4d
  40a7fc:	or     al,0x69
  40a7fe:	inc    ebx
  40a7ff:	mov    WORD PTR [ecx+esi*8-0x32],cs
  40a803:	mov    dl,0x5c
  40a805:	cwde   
  40a806:	sub    eax,esp
  40a808:	aad    0xb2
  40a80a:	xchg   BYTE PTR [edx-0x45376258],dl
  40a810:	test   BYTE PTR [edi],dl
  40a812:	mov    al,ds:0xc634c739
  40a817:	ins    DWORD PTR es:[edi],dx
  40a818:	mov    bh,0xff
  40a81a:	jp     0x40a863
  40a81c:	div    ah
  40a81e:	jnp    0x40a88f
  40a820:	into   
  40a821:	dec    ebp
  40a822:	test   eax,0x3268f6c7
  40a827:	mov    esp,edi
  40a829:	jno    0x40a83a
  40a82b:	push   ebx
  40a82c:	gs xchg edx,eax
  40a82e:	jmp    0xc8d5ced3
  40a833:	mov    eax,0xf9d54939
  40a838:	mov    dl,0x6c
  40a83a:	leave  
  40a83b:	pop    ds
  40a83c:	push   esi
  40a83d:	xchg   ebp,eax
  40a83e:	pop    ds
  40a83f:	xchg   esi,eax
  40a840:	rcr    DWORD PTR [esi-0x7b9bbe4e],0xb5
  40a847:	cld    
  40a848:	jge    0x40a881
  40a84a:	push   ss
  40a84b:	xor    eax,edx
  40a84d:	sub    eax,0xa5108401
  40a852:	lea    eax,[eax-0x5cc76a0b]
  40a858:	sub    esp,DWORD PTR [eax]
  40a85a:	(bad)  
  40a85b:	int    0x6
  40a85d:	dec    edx
  40a85e:	cmp    dl,bl
  40a860:	sbb    BYTE PTR [ebp-0x7e3cddad],bl
  40a866:	xor    esi,ebx
  40a868:	inc    edi
  40a869:	inc    esp
  40a86a:	js     0x40a81d
  40a86c:	mov    ch,0x44
  40a86e:	mov    al,ds:0x62201540
  40a873:	push   edi
  40a874:	scas   eax,DWORD PTR es:[edi]
  40a875:	dec    esp
  40a876:	pop    ss
  40a877:	dec    ebx
  40a878:	aaa    
  40a879:	xlat   BYTE PTR ds:[ebx]
  40a87a:	(bad)
  40a87e:	mov    eax,DWORD PTR [ecx]
  40a880:	popf   
  40a881:	add    al,0x64
  40a883:	call   0x8d7feee1
  40a888:	mov    cl,0x11
  40a88a:	xor    edi,0xffffff90
  40a88d:	clc    
  40a88e:	aad    0x6c
  40a890:	jl     0x40a8e2
  40a892:	and    eax,0x6af50649
  40a897:	mov    ebp,0xe8328a4a
  40a89c:	sar    BYTE PTR [edi+ebp*1-0x5d],1
  40a8a0:	mov    edi,0xb64dd819
  40a8a5:	sub    al,0xe5
  40a8a7:	xor    DWORD PTR [ecx-0x1bf49f3],esi
  40a8ad:	ret    0x372a
  40a8b0:	add    ebp,DWORD PTR [eax-0x3c]
  40a8b3:	loope  0x40a8d1
  40a8b5:	jge    0x40a910
  40a8b7:	fst    DWORD PTR [ecx-0x3c93013d]
  40a8bd:	jnp    0x40a92e
  40a8bf:	mov    cl,0x4d
  40a8c1:	rcr    esp,0x60
  40a8c4:	jb     0x40a860
  40a8c6:	sar    DWORD PTR [ebp-0x630f1da0],0xab
  40a8cd:	mov    BYTE PTR [edx-0x7d],ah
  40a8d0:	cdq    
  40a8d1:	cmp    eax,0xedf577ed
  40a8d6:	adc    ecx,ecx
  40a8d8:	into   
  40a8d9:	adc    al,bh
  40a8db:	std    
  40a8dc:	hlt    
  40a8dd:	pop    esp
  40a8de:	xchg   al,ah
  40a8e0:	pushf  
  40a8e1:	and    dl,BYTE PTR [ebx]
  40a8e3:	cwde   
  40a8e4:	aad    0x56
  40a8e6:	dec    edx
  40a8e7:	or     al,0x5e
  40a8e9:	imul   esp,DWORD PTR [ecx],0xd
  40a8ec:	(bad)  
  40a8ed:	icebp  
  40a8ee:	add    ch,BYTE PTR [ebx+0x6f]
  40a8f1:	dec    esi
  40a8f2:	push   cs
  40a8f3:	adc    esi,eax
  40a8f5:	xor    DWORD PTR [eax],esp
  40a8f7:	jl     0x40a87c
  40a8f9:	inc    eax
  40a8fa:	popa   
  40a8fb:	adc    ch,dh
  40a8fd:	sbb    al,0x78
  40a8ff:	mov    ds:0x6090e08b,eax
  40a904:	call   0xd1e2:0x2f02ccb9
  40a90b:	pop    esi
  40a90c:	xor    esi,esp
  40a90e:	mov    DWORD PTR [edx],edi
  40a910:	popf   
  40a911:	sbb    DWORD PTR [eax-0x25],0x62
  40a915:	std    
  40a916:	cdq    
  40a917:	sbb    bl,BYTE PTR [esi+0x23]
  40a91a:	lods   eax,DWORD PTR ds:[esi]
  40a91b:	fisttp WORD PTR [ecx-0x18]
  40a91e:	aam    0xa7
  40a920:	sub    DWORD PTR ds:0x25a5b4f1,ebx
  40a926:	out    0x34,eax
  40a928:	mov    ah,BYTE PTR [edx]
  40a92a:	ret    0x73f
  40a92d:	add    DWORD PTR [ebx+0x6804e5a1],0x95aed918
  40a937:	das    
  40a938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a939:	xchg   ebx,eax
  40a93a:	mov    edi,DWORD PTR [ecx+0x42]
  40a93d:	push   ebp
  40a93e:	pop    ss
  40a93f:	sub    eax,0xc45d6ee4
  40a944:	adc    eax,0x8b2ae752
  40a949:	pop    edi
  40a94a:	or     al,0x12
  40a94c:	jmp    0x136405f8
  40a951:	ror    eax,cl
  40a953:	js     0x40a8d9
  40a955:	mov    cl,0xf8
  40a957:	sbb    DWORD PTR [eax+0x32446b00],edx
  40a95d:	sar    dl,cl
  40a95f:	or     al,0x43
  40a961:	les    ecx,FWORD PTR [edx]
  40a963:	inc    ecx
  40a964:	xchg   esi,eax
  40a965:	inc    ecx
  40a966:	mov    DWORD PTR [esi+0x5b0b3f0c],ecx
  40a96c:	mov    BYTE PTR [esi],0xe6
  40a96f:	test   al,0x42
  40a971:	or     BYTE PTR [ebp-0x62],dl
  40a974:	lahf   
  40a975:	repz jno 0x40a98d
  40a978:	xor    DWORD PTR [esi-0x14ff5c1],esp
  40a97e:	cli    
  40a97f:	ror    BYTE PTR [eax-0x144c9a35],1
  40a985:	cmp    eax,0x5482f64f
  40a98a:	xor    edi,DWORD PTR [ebx+0x7da30db4]
  40a990:	add    BYTE PTR [edx+0x676c90bb],bh
  40a996:	pusha  
  40a997:	out    dx,al
  40a998:	sbb    eax,0x4b3d65cb
  40a99d:	call   0xbed22707
  40a9a2:	push   edx
  40a9a3:	mov    esp,0xb2f1d96a
  40a9a8:	xor    DWORD PTR [edi+ebx*4-0x19],0xffffffa7
  40a9ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9ae:	fucompp 
  40a9b0:	pop    ebx
  40a9b1:	imul   edi,ebp,0xf
  40a9b4:	out    0x58,eax
  40a9b6:	mov    dl,0x48
  40a9b8:	xlat   BYTE PTR ds:[ebx]
  40a9b9:	pop    ebp
  40a9ba:	jmp    0x40a9ca
  40a9bc:	adc    al,0x16
  40a9be:	scas   eax,DWORD PTR es:[edi]
  40a9bf:	repz jo 0x40a9a9
  40a9c2:	aad    0x26
  40a9c4:	popf   
  40a9c5:	adc    al,0xdc
  40a9c7:	push   ebp
  40a9c8:	pop    ss
  40a9c9:	mov    al,0xd5
  40a9cb:	mov    bl,0x68
  40a9cd:	scas   al,BYTE PTR es:[edi]
  40a9ce:	stos   BYTE PTR es:[edi],al
  40a9cf:	into   
  40a9d0:	or     DWORD PTR [ebx-0x5e],eax
  40a9d3:	push   eax
  40a9d4:	enter  0x75b9,0x67
  40a9d8:	fwait
  40a9d9:	adc    BYTE PTR [eax+0x4e9c7ea4],ah
  40a9df:	add    BYTE PTR [ecx],al
  40a9e1:	inc    edi
  40a9e2:	dec    eax
  40a9e3:	test   al,0x87
  40a9e5:	jmp    0xa0c6:0xa9ea5bc6
  40a9ec:	imul   ebp,DWORD PTR [esi+edi*1],0x4f6beb7
  40a9f3:	push   ecx
  40a9f4:	test   al,0xd1
  40a9f6:	sbb    al,0x94
  40a9f8:	and    al,0xbf
  40a9fa:	inc    eax
  40a9fb:	jecxz  0x40a9a8
  40a9fd:	lea    ebx,[esi]
  40a9ff:	lahf   
  40aa00:	mov    ch,0xc
  40aa02:	es mov eax,0xd3907e48
  40aa08:	inc    edi
  40aa09:	pop    ss
  40aa0a:	push   edx
  40aa0b:	pop    ds
  40aa0c:	cwde   
  40aa0d:	xchg   ebp,eax
  40aa0e:	or     dh,BYTE PTR [ecx+eax*4]
  40aa11:	push   esi
  40aa12:	dec    esp
  40aa13:	(bad)  
  40aa14:	mov    ah,0x71
  40aa16:	or     DWORD PTR [edx+esi*8],ebx
  40aa19:	mov    bl,0x69
  40aa1b:	stos   BYTE PTR es:[edi],al
  40aa1c:	pop    ebx
  40aa1d:	mov    dl,0x4b
  40aa1f:	test   eax,0x9c474345
  40aa24:	in     eax,dx
  40aa25:	shl    BYTE PTR [esi-0x7],1
  40aa28:	mov    al,ds:0x2e8ceb8c
  40aa2d:	not    edx
  40aa2f:	(bad)  
  40aa30:	sbb    eax,0x5162fc83
  40aa35:	ss fdiv st,st(6)
  40aa38:	or     al,0x44
  40aa3a:	call   0x4f35:0x8460d58a
  40aa41:	jp     0x40aa03
  40aa43:	jl     0x40a9e1
  40aa45:	repnz mov dl,0x44
  40aa48:	jnp    0x40a9cf
  40aa4a:	or     al,0xd7
  40aa4c:	bound  eax,QWORD PTR [eax+0x1351dd9a]
  40aa52:	imul   edx,DWORD PTR [edx+0x76],0x48931411
  40aa59:	xchg   DWORD PTR [ecx],edi
  40aa5b:	push   ds
  40aa5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa5d:	jns    0x40aa98
  40aa5f:	ret    
  40aa60:	mov    edi,0xe9ec23e1
  40aa65:	xchg   esi,eax
  40aa66:	dec    ecx
  40aa67:	in     al,dx
  40aa68:	sbb    ah,BYTE PTR [ebx]
  40aa6a:	pop    ecx
  40aa6b:	mov    dl,BYTE PTR [ebx-0x51]
  40aa6e:	sbb    al,0x37
  40aa70:	(bad)  
  40aa71:	xor    eax,0x179d974e
  40aa76:	push   DWORD PTR [ebx]
  40aa78:	je     0x40aa53
  40aa7a:	jne    0x40aa9b
  40aa7c:	pop    esi
  40aa7d:	or     bl,bl
  40aa7f:	or     DWORD PTR [ecx+0x1d],ecx
  40aa82:	mov    edi,0x2ccbbddb
  40aa87:	pop    ebp
  40aa88:	xchg   DWORD PTR [edi],edx
  40aa8a:	mov    dh,BYTE PTR [eax-0x179a9e4e]
  40aa90:	add    al,0x74
  40aa92:	test   BYTE PTR [edi],dh
  40aa94:	jnp    0x40aada
  40aa96:	dec    ebx
  40aa97:	les    edx,FWORD PTR [edx+0x6afd5f1d]
  40aa9d:	aam    0xb6
  40aa9f:	jo     0x40aa40
  40aaa1:	sub    al,0x5
  40aaa3:	or     DWORD PTR [edi+0x46],ecx
  40aaa6:	xor    DWORD PTR [edx+0x51],ebp
  40aaa9:	cmp    eax,0x4954d2b4
  40aaae:	and    esp,ebp
  40aab0:	rcr    BYTE PTR [eax],0xf4
  40aab3:	inc    esi
  40aab4:	sbb    eax,0x379cd470
  40aab9:	test   eax,0x94a54f1e
  40aabe:	cmp    edx,ebp
  40aac0:	out    0x4c,al
  40aac2:	imul   esp,edi,0x57
  40aac5:	int3   
  40aac6:	pushf  
  40aac7:	and    al,0xe8
  40aac9:	jne    0x40aab3
  40aacb:	mov    dl,BYTE PTR [edx+ecx*1-0x16]
  40aacf:	inc    edx
  40aad0:	add    eax,edi
  40aad2:	(bad)  
  40aad4:	mov    ebp,0x347dcde2
  40aad9:	xchg   esi,eax
  40aada:	jp     0x40aa88
  40aadc:	or     edx,eax
  40aade:	xor    al,cl
  40aae0:	std    
  40aae1:	push   ds
  40aae2:	ficom  DWORD PTR [edx]
  40aae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aae5:	or     ecx,esp
  40aae7:	xchg   edx,eax
  40aae8:	xlat   BYTE PTR ds:[ebx]
  40aae9:	sub    BYTE PTR [esi+0x6940cda0],ch
  40aaef:	dec    eax
  40aaf0:	add    cl,BYTE PTR [edx+0x4f]
  40aaf3:	inc    ebp
  40aaf4:	scas   al,BYTE PTR es:[edi]
  40aaf5:	add    DWORD PTR [esi-0x243654e6],edi
  40aafb:	mov    cl,0x1b
  40aafd:	in     eax,0x41
  40aaff:	jge    0x40aab6
  40ab01:	scas   eax,DWORD PTR es:[edi]
  40ab02:	repz mov ch,ah
  40ab05:	retf   
  40ab06:	xchg   edx,eax
  40ab07:	inc    esp
  40ab08:	mov    edi,0xfbeedd37
  40ab0d:	pop    es
  40ab0e:	cmp    dl,BYTE PTR [ebp+0x7e]
  40ab11:	mov    esi,0x3d02981
  40ab16:	and    al,0x91
  40ab18:	xchg   ebp,eax
  40ab19:	and    al,0x98
  40ab1b:	inc    esi
  40ab1c:	in     eax,dx
  40ab1d:	ds pushf 
  40ab1f:	ret    0x94f3
  40ab22:	cmp    ebx,DWORD PTR ds:0xe3e4a651
  40ab28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab29:	jl     0x40aad8
  40ab2b:	je     0x40ab4c
  40ab2d:	mov    al,ds:0x1e3f3f94
  40ab32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab33:	in     eax,0x3b
  40ab35:	sbb    DWORD PTR [edi+0x20aed6e8],ecx
  40ab3b:	push   eax
  40ab3c:	jo     0x40ab38
  40ab3e:	neg    ch
  40ab40:	and    eax,0x1aea7505
  40ab45:	popa   
  40ab46:	fcomp  DWORD PTR ds:0xa18e635
  40ab4c:	ins    BYTE PTR es:[edi],dx
  40ab4d:	mov    al,0xf0
  40ab4f:	xchg   ebp,eax
  40ab50:	dec    edi
  40ab51:	popf   
  40ab52:	(bad)  
  40ab53:	pop    ecx
  40ab54:	rcr    DWORD PTR [edx],cl
  40ab56:	das    
  40ab57:	dec    eax
  40ab58:	bound  ebp,QWORD PTR [eax]
  40ab5a:	jae    0x40ab65
  40ab5c:	push   ebp
  40ab5d:	cmp    eax,0xf853d50c
  40ab62:	outs   dx,DWORD PTR ds:[esi]
  40ab63:	mov    ds:0x9129ca4b,al
  40ab68:	add    al,cl
  40ab6a:	outs   dx,BYTE PTR ds:[esi]
  40ab6b:	icebp  
  40ab6c:	je     0x40ab5a
  40ab6e:	outs   dx,BYTE PTR ds:[esi]
  40ab6f:	and    edi,edx
  40ab71:	test   eax,0x1d04f26
  40ab76:	xchg   BYTE PTR [edx],dh
  40ab78:	and    BYTE PTR [edi+0x3e],ch
  40ab7b:	mov    BYTE PTR [esi-0x3a],bl
  40ab7e:	jmp    0x8c64:0x6d304f3b
  40ab85:	sbb    eax,0xf757c1cd
  40ab8a:	repz imul ecx,DWORD PTR [ecx],0xcecdfef8
  40ab91:	xor    esp,DWORD PTR [ecx]
  40ab93:	adc    DWORD PTR [ebp-0x25dc4189],0xfffffffd
  40ab9a:	mov    al,0x7f
  40ab9c:	fwait
  40ab9d:	add    esi,ebx
  40ab9f:	xchg   ebp,eax
  40aba0:	mov    ecx,0xac57bced
  40aba5:	pop    ebx
  40aba6:	ror    DWORD PTR [edi],0xaf
  40aba9:	bound  ecx,QWORD PTR [edi+edi*8+0x4a]
  40abad:	arpl   WORD PTR [ebp-0x64],ax
  40abb0:	fist   WORD PTR [esi+0x65215bef]
  40abb6:	in     al,dx
  40abb7:	mov    dl,0xba
  40abb9:	sbb    BYTE PTR [esi],ah
  40abbb:	ins    BYTE PTR es:[edi],dx
  40abbc:	push   ebp
  40abbd:	or     BYTE PTR [ecx-0x256fdb9e],al
  40abc3:	sbb    eax,DWORD PTR [eax]
  40abc5:	call   0xc97e0019
  40abca:	sar    dh,cl
  40abcc:	stos   BYTE PTR es:[edi],al
  40abcd:	push   edi
  40abce:	ss into 
  40abd0:	(bad)  
  40abd2:	punpckhdq mm0,QWORD PTR ds:0x6a5a15a1
  40abd9:	aam    0xdd
  40abdb:	push   cs
  40abdc:	int3   
  40abdd:	idiv   BYTE PTR [ebx-0x2]
  40abe0:	push   ebp
  40abe1:	pop    ebp
  40abe2:	push   ecx
  40abe3:	cmp    BYTE PTR [eax+0x74f8e1c9],al
  40abe9:	mov    bh,0xbe
  40abeb:	ja     0x40ac69
  40abed:	out    0x51,al
  40abef:	call   FWORD PTR [ecx+eiz*2-0x3b25220]
  40abf6:	xchg   ebp,eax
  40abf7:	xchg   DWORD PTR [eax+ebp*2-0x6f8cdd13],ecx
  40abfe:	lods   eax,DWORD PTR ds:[esi]
  40abff:	ins    BYTE PTR es:[edi],dx
  40ac00:	pusha  
  40ac01:	push   es
  40ac02:	jge    0x40ac63
  40ac04:	int3   
  40ac05:	ss mov ch,0x26
  40ac08:	inc    ecx
  40ac09:	sbb    BYTE PTR [edx-0x311d524f],dh
  40ac0f:	inc    edi
  40ac10:	outs   dx,BYTE PTR ds:[esi]
  40ac11:	inc    edx
  40ac12:	or     ebp,DWORD PTR [edi+esi*1]
  40ac15:	(bad)
  40ac18:	inc    esi
  40ac19:	push   ebp
  40ac1a:	pop    ebp
  40ac1b:	aas    
  40ac1c:	mov    eax,0x674fd31f
  40ac21:	pop    edx
  40ac22:	jne    0x40abe2
  40ac24:	xchg   ecx,eax
  40ac25:	(bad)  [edx+eax*8]
  40ac28:	repnz inc edi
  40ac2a:	and    DWORD PTR [ebp+ebx*2+0xc9cdae4],esi
  40ac31:	jmp    0xe7bf:0xd7e24ff9
  40ac38:	dec    edi
  40ac39:	addr16 sub eax,0x2ab81d1
  40ac3f:	mov    esp,0x62dd6c1f
  40ac44:	shl    DWORD PTR [ebx-0x4e0687f5],cl
  40ac4a:	cdq    
  40ac4b:	add    dl,0xca
  40ac4e:	sbb    dh,BYTE PTR [esi+0x7b]
  40ac51:	xchg   esp,eax
  40ac52:	in     al,0x5b
  40ac54:	mov    bl,0x8e
  40ac56:	xchg   edx,eax
  40ac57:	mov    cl,0xed
  40ac59:	lods   al,BYTE PTR ds:[esi]
  40ac5a:	mov    edx,0xa6cddb90
  40ac5f:	mov    edi,0x2983e0a4
  40ac64:	int    0x18
  40ac66:	jp     0x40acde
  40ac68:	jne    0x40ac64
  40ac6a:	and    eax,0x7085b6e6
  40ac6f:	sub    cl,bl
  40ac71:	and    eax,0xac05cd
  40ac76:	jle    0x40ac38
  40ac78:	cld    
  40ac79:	inc    esp
  40ac7a:	lds    ecx,FWORD PTR [edx-0x488d89bf]
  40ac80:	pop    ebx
  40ac81:	ins    DWORD PTR es:[edi],dx
  40ac82:	sti    
  40ac83:	call   0xbb63:0x9d5f5708
  40ac8a:	je     0x40ac2a
  40ac8c:	jbe    0x40ac3c
  40ac8e:	adc    cl,al
  40ac90:	shld   DWORD PTR [ecx],ebp,0x2f
  40ac94:	scas   eax,DWORD PTR es:[edi]
  40ac95:	(bad)  
  40ac96:	loope  0x40ac40
  40ac98:	rcl    DWORD PTR [eax+0x44],1
  40ac9b:	aam    0x9c
  40ac9d:	std    
  40ac9e:	push   0xe0ddae23
  40aca3:	inc    eax
  40aca4:	xor    al,BYTE PTR [esi+0x2]
  40aca7:	inc    edi
  40aca8:	and    DWORD PTR [ebp-0x27],eax
  40acab:	leave  
  40acac:	ds stc 
  40acae:	jae    0x40acc0
  40acb0:	outs   dx,DWORD PTR ds:[esi]
  40acb1:	sahf   
  40acb2:	scas   al,BYTE PTR es:[edi]
  40acb3:	loope  0x40acb7
  40acb5:	push   0x91be1b22
  40acba:	clc    
  40acbb:	loope  0x40acfb
  40acbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acbe:	mov    edi,0xb2c98dff
  40acc3:	jae    0x40acce
  40acc5:	daa    
  40acc6:	add    BYTE PTR [esi-0x482b596f],ch
  40accc:	adc    DWORD PTR ds:0xc83f14cb,esi
  40acd2:	popa   
  40acd3:	and    al,0xe0
  40acd5:	inc    ebx
  40acd6:	mov    al,ds:0xd6ee60da
  40acdb:	std    
  40acdc:	aas    
  40acdd:	ins    DWORD PTR es:[edi],dx
  40acde:	dec    eax
  40acdf:	fidiv  DWORD PTR [edx]
  40ace1:	inc    esi
  40ace2:	jbe    0x40ac92
  40ace4:	pop    ecx
  40ace5:	repz xor ecx,DWORD PTR [ecx-0x52bab7a4]
  40acec:	sbb    DWORD PTR [ebx],edx
  40acee:	and    ch,BYTE PTR [ebp+0x16a6a62a]
  40acf4:	test   BYTE PTR [ebx+ebx*8-0x27],ah
  40acf8:	xchg   BYTE PTR [ebp+0x78657399],bh
  40acfe:	mov    bh,dh
  40ad00:	or     ebp,DWORD PTR [ebp+0x5127b47e]
  40ad06:	lea    ecx,[esi-0x3a]
  40ad09:	rcr    BYTE PTR [ebx+0x1],cl
  40ad0c:	(bad)  
  40ad0d:	dec    esp
  40ad0e:	(bad)  
  40ad0f:	xor    DWORD PTR [eax-0x26ea87a7],ecx
  40ad15:	mov    esp,0xb9a231ad
  40ad1a:	push   edi
  40ad1b:	fstp   DWORD PTR [ebx-0x23463184]
  40ad21:	fisttp QWORD PTR [eax]
  40ad23:	mov    ecx,0xa1cbaa85
  40ad28:	dec    esi
  40ad29:	sbb    eax,0xad82c0cd
  40ad2e:	xor    bh,dl
  40ad30:	sub    DWORD PTR [eax-0x33353bc],esp
  40ad36:	jmp    FWORD PTR [ebx]
  40ad38:	pushf  
  40ad39:	and    al,0xe3
  40ad3b:	xor    eax,0x4305302c
  40ad40:	pop    edi
  40ad41:	mov    ebp,0x3dff0778
  40ad46:	mov    edi,0xc235e5dc
  40ad4b:	xor    al,0xdc
  40ad4d:	std    
  40ad4e:	js     0x40adc2
  40ad50:	jmp    0x5c87:0x41f796cf
  40ad57:	mov    ch,0x36
  40ad59:	cmp    ebp,DWORD PTR [eax+0x626cb54f]
  40ad5f:	dec    edx
  40ad60:	addr16 mov esi,0x7e8175fe
  40ad66:	mov    esi,0x3dba405e
  40ad6b:	nop
  40ad6c:	cmc    
  40ad6d:	dec    eax
  40ad6e:	loopne 0x40ad91
  40ad70:	push   edi
  40ad71:	mov    eax,0x83d1ff32
  40ad76:	mov    dh,0xea
  40ad78:	cld    
  40ad79:	lods   eax,DWORD PTR ds:[esi]
  40ad7a:	call   0x40d3c38d
  40ad7f:	call   0xb5869698
  40ad84:	push   ebp
  40ad85:	(bad)  
  40ad86:	mov    ah,0xba
  40ad88:	popf   
  40ad89:	aam    0xc
  40ad8b:	inc    ebp
  40ad8c:	push   eax
  40ad8d:	aam    0x73
  40ad8f:	jle    0x40ad16
  40ad91:	jne    0x40ae0e
  40ad93:	cmp    BYTE PTR [ecx],bl
  40ad95:	inc    esi
  40ad96:	mov    ebp,0x6776fbfd
  40ad9b:	sbb    al,0x4d
  40ad9d:	lods   al,BYTE PTR ds:[esi]
  40ad9e:	test   al,0x73
  40ada0:	outs   dx,BYTE PTR ds:[esi]
  40ada1:	mov    ds,WORD PTR [ebp-0x54]
  40ada4:	ret    
  40ada5:	mov    ebx,0x829aae61
  40adaa:	pusha  
  40adab:	dec    ebx
  40adac:	add    ebx,ebx
  40adae:	inc    ebp
  40adaf:	and    DWORD PTR [edi],esi
  40adb1:	out    dx,eax
  40adb2:	fldcw  WORD PTR [esp+eax*4+0x58f32c57]
  40adb9:	adc    DWORD PTR [ecx],eax
  40adbb:	adc    esi,DWORD PTR [ecx]
  40adbd:	mov    edx,DWORD PTR [ecx+0x28]
  40adc0:	push   0x3503536f
  40adc5:	imul   edi,DWORD PTR [edx-0x37],0xd9bf3f51
  40adcc:	test   BYTE PTR [eax-0x3c],al
  40adcf:	mov    DWORD PTR [ebp-0x1b],eax
  40add2:	jne    0x40ad63
  40add4:	sbb    DWORD PTR [esi+0x458f3247],ebp
  40adda:	sbb    eax,0x61e2f46d
  40addf:	ret    
  40ade0:	sub    BYTE PTR [ecx+0x4e],0xe0
  40ade4:	push   ecx
  40ade5:	or     dl,bl
  40ade7:	aad    0xf7
  40ade9:	sar    DWORD PTR [esi-0x63],1
  40adec:	mov    ebx,ebx
  40adee:	in     al,0x95
  40adf0:	fmul   DWORD PTR ss:[ecx-0x2a]
  40adf4:	push   es
  40adf5:	push   ebx
  40adf6:	or     ebx,DWORD PTR [ebx]
  40adf8:	into   
  40adf9:	push   esp
  40adfa:	jecxz  0x40ae45
  40adfc:	popf   
  40adfd:	adc    bh,BYTE PTR [ecx+0x66303176]
  40ae03:	xchg   ecx,eax
  40ae04:	sub    ecx,DWORD PTR [edi-0x80]
  40ae07:	inc    esp
  40ae08:	into   
  40ae09:	int    0x50
  40ae0b:	loopne 0x40ae02
  40ae0d:	dec    esi
  40ae0e:	push   ss
  40ae0f:	scas   al,BYTE PTR es:[edi]
  40ae10:	push   edx
  40ae11:	dec    edi
  40ae12:	ret    
  40ae13:	sub    DWORD PTR [ecx+0x2b],edx
  40ae16:	fimul  WORD PTR [edx+0x1c2d3a46]
  40ae1c:	or     eax,0x677a2ab4
  40ae21:	arpl   WORD PTR [ebp+0x768a686a],ax
  40ae27:	ficomp WORD PTR [edx]
  40ae29:	popa   
  40ae2a:	test   ah,al
  40ae2c:	sub    BYTE PTR [edx],ah
  40ae2e:	xchg   edx,eax
  40ae2f:	enter  0x221c,0xa8
  40ae33:	test   al,0xfc
  40ae35:	cmp    eax,0xec51776b
  40ae3a:	mov    dl,0x4d
  40ae3c:	pop    ebx
  40ae3d:	push   eax
  40ae3e:	mov    eax,ds:0xe0ddbc05
  40ae43:	(bad)  
  40ae44:	leave  
  40ae45:	imul   eax,DWORD PTR [ecx+ebx*4+0x1a],0xbfb589e1
  40ae4d:	pop    eax
  40ae4e:	enter  0x8199,0x59
  40ae52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae53:	bnd jnp 0x40adf1
  40ae56:	lods   eax,DWORD PTR ds:[esi]
  40ae57:	jno    0x40aec1
  40ae59:	aam    0xa8
  40ae5b:	in     eax,dx
  40ae5c:	inc    ebp
  40ae5d:	cmp    ah,cl
  40ae5f:	dec    edx
  40ae60:	sbb    eax,esi
  40ae62:	iret   
  40ae63:	add    eax,0x626bc86f
  40ae68:	aaa    
  40ae69:	icebp  
  40ae6a:	jb     0x40ae55
  40ae6c:	rol    DWORD PTR [edx+0x8],cl
  40ae6f:	cwde   
  40ae70:	xor    al,0x67
  40ae72:	div    DWORD PTR [edi-0x4cf1d3a4]
  40ae78:	(bad)  
  40ae79:	inc    esp
  40ae7a:	loopne 0x40aec7
  40ae7c:	and    dl,BYTE PTR [eax+0x1b]
  40ae7f:	fucomip st,st(4)
  40ae81:	test   al,dh
  40ae83:	aam    0xb2
  40ae85:	(bad)  
  40ae86:	outs   dx,DWORD PTR ds:[esi]
  40ae87:	out    dx,eax
  40ae88:	xchg   edx,eax
  40ae89:	cs sbb edi,ecx
  40ae8c:	xor    DWORD PTR [edi+ebx*8+0x2c1ef3f4],ecx
  40ae93:	pop    es
  40ae94:	int3   
  40ae95:	mov    cl,0xc3
  40ae97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae98:	sti    
  40ae99:	mov    ebp,0x920b521
  40ae9e:	inc    edx
  40ae9f:	es in  eax,dx
  40aea1:	inc    ebx
  40aea2:	imul   edx,DWORD PTR [ebp+0x20],0x1c
  40aea6:	mov    al,ah
  40aea8:	pop    ecx
  40aea9:	lds    ecx,FWORD PTR [ebx+0x66]
  40aeac:	sbb    ch,BYTE PTR [edx]
  40aeae:	push   0xffffffe1
  40aeb0:	mov    bh,ch
  40aeb2:	mov    ds:0xddfbf32e,al
  40aeb7:	and    esi,DWORD PTR [ebx+0x2e1df127]
  40aebd:	pop    es
  40aebe:	push   eax
  40aebf:	lds    esp,FWORD PTR [ebx-0x3a]
  40aec2:	sub    al,0x43
  40aec4:	jnp    0x40aef4
  40aec6:	and    esp,DWORD PTR [eax+esi*2]
  40aec9:	pop    ds
  40aeca:	xor    al,0xd7
  40aecc:	inc    esp
  40aecd:	loop   0x40af12
  40aecf:	fistp  DWORD PTR [esi-0x21]
  40aed2:	lock jle 0x40af06
  40aed5:	inc    DWORD PTR [edx-0x3a]
  40aed8:	xlat   BYTE PTR ds:[ebx]
  40aed9:	sub    ah,BYTE PTR [edx+edi*2]
  40aedc:	and    BYTE PTR [eax+ecx*8],bh
  40aedf:	xor    bh,dh
  40aee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aee2:	mov    al,0xf3
  40aee4:	(bad)  
  40aee5:	int3   
  40aee6:	pop    esi
  40aee7:	and    BYTE PTR [edx-0x1e],al
  40aeea:	sbb    DWORD PTR [ecx-0x76],esi
  40aeed:	rol    BYTE PTR [ecx+0x15],cl
  40aef0:	int3   
  40aef1:	mov    ch,0xc2
  40aef3:	dec    esp
  40aef4:	cwde   
  40aef5:	adc    edx,DWORD PTR [edi+0x7c]
  40aef8:	pop    ds
  40aef9:	addr16 ret 
  40aefb:	scas   eax,DWORD PTR es:[edi]
  40aefc:	pop    esp
  40aefd:	pop    esp
  40aefe:	mov    al,ds:0xb3e74906
  40af03:	mov    bl,0x31
  40af05:	or     DWORD PTR [ecx],0xe42d10a7
  40af0b:	sahf   
  40af0c:	inc    ebx
  40af0d:	sub    al,0x4a
  40af0f:	push   ss
  40af10:	fisttp DWORD PTR [esi]
  40af12:	adc    eax,0x7c833dc6
  40af17:	xchg   edi,eax
  40af18:	shl    DWORD PTR [edx-0x13],cl
  40af1b:	xchg   edi,eax
  40af1c:	ss das 
  40af1e:	test   eax,0xe6d19e84
  40af23:	jnp    0x40af1a
  40af25:	adc    ah,dl
  40af27:	or     ebp,ebx
  40af29:	sub    DWORD PTR [ecx],0xffffffb7
  40af2c:	jecxz  0x40af8a
  40af2e:	sbb    BYTE PTR [ecx+edi*1-0x663d754c],al
  40af35:	pop    esp
  40af36:	rol    edx,cl
  40af38:	jb     0x40af78
  40af3a:	shl    BYTE PTR [edi],cl
  40af3c:	jecxz  0x40aedc
  40af3e:	in     al,dx
  40af3f:	dec    ebp
  40af40:	sahf   
  40af41:	jecxz  0x40aedd
  40af43:	ds xchg ebp,eax
  40af45:	xchg   esi,eax
  40af46:	inc    esp
  40af47:	cmp    al,0x74
  40af49:	mov    edx,0xa1f10d4c
  40af4e:	das    
  40af4f:	cmc    
  40af50:	adc    BYTE PTR [ebx],bl
  40af52:	jl     0x40af17
  40af54:	jp     0x40af44
  40af56:	xchg   edx,eax
  40af57:	mov    ah,0xe4
  40af59:	xchg   edx,eax
  40af5a:	popa   
  40af5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af5c:	dec    esp
  40af5d:	inc    edx
  40af5e:	pop    eax
  40af5f:	pop    ebp
  40af60:	je     0x40afd9
  40af62:	mov    ebp,0x2c8bc8bd
  40af67:	jge    0x40af61
  40af69:	fisub  DWORD PTR [edx]
  40af6b:	jmp    0x40af5e
  40af6d:	nop
  40af6e:	stos   BYTE PTR es:[edi],al
  40af6f:	adc    al,0xb3
  40af71:	in     al,dx
  40af72:	in     al,dx
  40af73:	aam    0x7c
  40af75:	stos   DWORD PTR es:[edi],eax
  40af76:	dec    eax
  40af77:	mov    ebx,ebp
  40af79:	pop    esp
  40af7a:	sbb    cl,BYTE PTR [edi-0x56]
  40af7d:	sti    
  40af7e:	es shl eax,cl
  40af81:	sub    DWORD PTR [edx+edi*1-0x256bfd6e],0x31
  40af89:	xor    ecx,ebx
  40af8b:	sub    dh,BYTE PTR [eax-0x1513cde]
  40af91:	push   ebx
  40af92:	outs   dx,DWORD PTR ds:[esi]
  40af93:	push   ds
  40af94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af95:	fwait
  40af96:	(bad)  
  40af97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af98:	(bad)  
  40af99:	sub    al,0x4a
  40af9b:	pop    ebx
  40af9c:	js     0x40afe6
  40af9e:	icebp  
  40af9f:	cwde   
  40afa0:	sbb    al,bl
  40afa2:	sbb    edx,ebx
  40afa4:	pop    ebx
  40afa5:	push   esi
  40afa6:	lea    edx,[edx]
  40afa8:	and    ecx,DWORD PTR [ecx-0x2b286e35]
  40afae:	cwde   
  40afaf:	sub    edi,ebx
  40afb1:	(bad)
  40afb5:	mov    al,0x1c
  40afb7:	adc    eax,0x21e7b1fd
  40afbc:	retf   0x1a36
  40afbf:	lds    eax,FWORD PTR [eax-0x5b]
  40afc2:	xor    al,0x38
  40afc4:	lods   eax,DWORD PTR ds:[esi]
  40afc5:	sar    DWORD PTR [ebx-0x4760451a],1
  40afcb:	aam    0xef
  40afcd:	mov    eax,DWORD PTR [ebp-0x4]
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0xc929b0d0,0x91
  40afff:	dec    ecx
  40b000:	adc    ebp,DWORD PTR [ecx]
  40b002:	hlt    
  40b003:	add    DWORD PTR [ebx-0x7c7ca1f4],0x4c
  40b00a:	in     al,0xab
  40b00c:	lods   eax,DWORD PTR ds:[esi]
  40b00d:	add    esp,esi
  40b00f:	ins    DWORD PTR es:[edi],dx
  40b010:	les    edx,FWORD PTR [eax]
  40b012:	inc    esi
  40b013:	leave  
  40b014:	xchg   ebp,eax
  40b015:	push   esp
  40b016:	lds    ebx,FWORD PTR [ebx+0x57]
  40b019:	or     edx,ecx
  40b01b:	ds sti 
  40b01d:	(bad)  
  40b01f:	xchg   ebx,eax
  40b020:	into   
  40b021:	dec    esi
  40b022:	dec    ecx
  40b023:	mov    ah,BYTE PTR [ecx]
  40b025:	and    DWORD PTR [ecx+0x35f4f995],0x1e
  40b02c:	mov    al,ds:0xa8c02a7
  40b031:	xchg   esp,eax
  40b032:	popf   
  40b033:	or     eax,0x2553c45c
  40b038:	pop    esp
  40b039:	retf   
  40b03a:	xlat   BYTE PTR ds:[ebx]
  40b03b:	sbb    eax,DWORD PTR [edx]
  40b03d:	dec    ecx
  40b03e:	(bad)  
  40b040:	push   ebx
  40b041:	and    ecx,esp
  40b043:	aaa    
  40b044:	test   eax,0x7425e226
  40b049:	xor    BYTE PTR [edi-0x6522e0d],bh
  40b04f:	mov    WORD PTR [eax],?
  40b051:	push   ebp
  40b052:	aas    
  40b053:	cmp    bh,BYTE PTR [ebx]
  40b055:	add    BYTE PTR [edx+edx*4],al
  40b058:	outs   dx,DWORD PTR ds:[esi]
  40b059:	(bad)  
  40b05a:	adc    DWORD PTR [ebx],ecx
  40b05c:	sti    
  40b05d:	add    esi,DWORD PTR [ebx]
  40b05f:	mov    al,ds:0xc5008e2e
  40b064:	sub    bh,0xc6
  40b067:	and    al,0x30
  40b069:	add    ebp,DWORD PTR [eax]
  40b06b:	int    0x3b
  40b06d:	cld    
  40b06e:	and    bl,bl
  40b070:	pop    esi
  40b071:	pop    esp
  40b072:	push   edi
  40b073:	adc    BYTE PTR [edi+0x1e],dh
  40b076:	addr16 sub eax,0x30e7e573
  40b07c:	lods   eax,DWORD PTR ds:[esi]
  40b07d:	push   esp
  40b07e:	mov    esp,0xeed9b0b4
  40b083:	dec    eax
  40b084:	jne    0x40b006
  40b086:	adc    ch,dl
  40b088:	and    DWORD PTR [eax+0x411c9cb0],ebx
  40b08e:	or     bp,bx
  40b091:	fst    DWORD PTR [esi+0x6f74a786]
  40b097:	mov    eax,0x3ca41c9f
  40b09c:	mov    DWORD PTR [eax],edx
  40b09e:	out    0x1e,eax
  40b0a0:	inc    ebp
  40b0a1:	inc    ebx
  40b0a2:	bound  edx,QWORD PTR [ebp+0x72]
  40b0a5:	add    ch,dl
  40b0a7:	cmp    DWORD PTR [ebp-0x35c79d66],esp
  40b0ad:	loope  0x40b0ee
  40b0af:	pop    ebx
  40b0b0:	(bad)  
  40b0b1:	fist   WORD PTR [ebx-0xa]
  40b0b4:	push   edi
  40b0b5:	push   ss
  40b0b6:	jp     0x40b0ba
  40b0b8:	in     al,dx
  40b0b9:	ss mov edi,0xf37556db
  40b0bf:	sahf   
  40b0c0:	fucomi st,st(0)
  40b0c2:	div    BYTE PTR [edx+0x2a25b7f2]
  40b0c8:	sti    
  40b0c9:	fadd   DWORD PTR [esi-0x58]
  40b0cc:	in     al,0xe3
  40b0ce:	sbb    eax,DWORD PTR [edi]
  40b0d0:	fs push ebp
  40b0d2:	fnsave [eax+0xb]
  40b0d5:	mov    DWORD PTR [ebx+0x39ca70dd],esi
  40b0db:	ret    
  40b0dc:	push   ecx
  40b0dd:	test   al,0x7b
  40b0df:	(bad)  
  40b0e0:	nop
  40b0e1:	jnp    0x40b0a2
  40b0e3:	test   BYTE PTR [ebx-0x7ad72740],ah
  40b0e9:	and    eax,0x4fbf2bed
  40b0ee:	and    BYTE PTR [ecx+0x4a],0xbb
  40b0f2:	psubw  mm2,mm0
  40b0f5:	stos   DWORD PTR es:[edi],eax
  40b0f6:	mov    ch,0xde
  40b0f8:	loope  0x40b14e
  40b0fa:	aas    
  40b0fb:	jne    0x40b0ee
  40b0fd:	xor    al,0xec
  40b0ff:	add    edi,eax
  40b101:	(bad)  
  40b102:	scas   eax,DWORD PTR es:[edi]
  40b103:	lahf   
  40b104:	mov    esi,0x6bd790cf
  40b109:	jns    0x40b103
  40b10b:	aaa    
  40b10c:	push   es
  40b10d:	dec    eax
  40b10e:	fwait
  40b10f:	into   
  40b110:	adc    ecx,edi
  40b112:	inc    edi
  40b113:	gs es push ds
  40b116:	std    
  40b117:	mov    bl,0x24
  40b119:	sti    
  40b11a:	or     ebx,DWORD PTR [esi+0x69b15952]
  40b120:	mov    gs,WORD PTR [esi]
  40b122:	lahf   
  40b123:	cld    
  40b124:	push   ebp
  40b125:	xchg   ecx,eax
  40b126:	pop    ecx
  40b127:	xor    cl,BYTE PTR [esi+0x10]
  40b12a:	cmovnp edx,DWORD PTR [ecx]
  40b12d:	xor    BYTE PTR [esi+0x5a],0xc8
  40b131:	shl    ecx,0x63
  40b134:	test   BYTE PTR [edi],al
  40b136:	push   ds
  40b137:	(bad)  
  40b138:	sub    BYTE PTR [ebx],ch
  40b13a:	fst    QWORD PTR [edi]
  40b13c:	xchg   ebx,eax
  40b13d:	in     eax,0x22
  40b13f:	mov    al,ds:0xd6c6e5ff
  40b144:	sub    DWORD PTR [ebx-0x29d48ae5],0xd
  40b14b:	mov    al,ds:0x6419e118
  40b150:	es std 
  40b152:	aam    0xc1
  40b154:	(bad)  
  40b155:	shl    eax,1
  40b157:	(bad)  
  40b158:	imul   edi,DWORD PTR [edi],0x5d
  40b15b:	stos   BYTE PTR es:[edi],al
  40b15c:	std    
  40b15d:	mov    ecx,0x47645c55
  40b162:	ins    DWORD PTR es:[edi],dx
  40b163:	or     al,0x6a
  40b165:	addr16 retf 0xcf5b
  40b169:	xchg   edi,eax
  40b16a:	adc    ah,BYTE PTR [edx-0x14]
  40b16d:	retf   0x14bc
  40b170:	or     BYTE PTR [ebx-0x41],ah
  40b173:	jo     0x40b1bc
  40b175:	or     al,0x6a
  40b177:	iret   
  40b178:	or     DWORD PTR [esi],0xffffffd0
  40b17b:	test   ebx,edx
  40b17d:	cmp    al,0x39
  40b17f:	into   
  40b180:	cmp    ecx,ebp
  40b182:	push   ebp
  40b183:	add    ah,BYTE PTR [edi]
  40b185:	jne    0x40b1b6
  40b187:	push   edx
  40b188:	cmp    edi,DWORD PTR [esi+0x1170ac50]
  40b18e:	xchg   ebx,eax
  40b18f:	dec    edi
  40b190:	inc    eax
  40b191:	enter  0xb357,0x81
  40b195:	xchg   edx,eax
  40b196:	dec    ebx
  40b197:	aad    0xe6
  40b199:	and    ecx,DWORD PTR [ebx-0x3b49acec]
  40b19f:	add    al,0x7e
  40b1a1:	pushf  
  40b1a2:	or     esi,esp
  40b1a4:	test   eax,0x1495617e
  40b1a9:	je     0x40b1ac
  40b1ab:	loop   0x40b180
  40b1ad:	push   esi
  40b1ae:	cmp    al,0xc
  40b1b0:	push   edx
  40b1b1:	fidivr DWORD PTR [edx]
  40b1b3:	fldenv [ecx+0x4f]
  40b1b6:	xor    DWORD PTR [esi],edi
  40b1b8:	pop    edi
  40b1b9:	shr    DWORD PTR ds:0xe469adde,0x82
  40b1c0:	push   edx
  40b1c1:	push   0xba1b6e3b
  40b1c6:	inc    ecx
  40b1c7:	cmp    ecx,edi
  40b1c9:	enter  0xb694,0x92
  40b1cd:	dec    esp
  40b1ce:	dec    esi
  40b1cf:	xor    al,0x55
  40b1d1:	adc    cl,dh
  40b1d3:	sub    al,0xa4
  40b1d5:	pop    es
  40b1d6:	inc    esp
  40b1d7:	inc    eax
  40b1d8:	xor    bl,ah
  40b1da:	loopne 0x40b194
  40b1dc:	aam    0xf
  40b1de:	pusha  
  40b1df:	add    DWORD PTR [ebp+eax*4+0x35],ebp
  40b1e3:	(bad)  
  40b1e4:	aad    0x97
  40b1e6:	push   eax
  40b1e7:	std    
  40b1e8:	mov    ds:0x443894ee,eax
  40b1ed:	xchg   esi,eax
  40b1ee:	lock call 0xd67883b9
  40b1f4:	push   0xffffffa6
  40b1f6:	mov    ah,0x14
  40b1f8:	addr16 pop edx
  40b1fa:	pop    ebx
  40b1fb:	mov    esp,0x5291c07f
  40b200:	jns    0x40b220
  40b202:	test   DWORD PTR [edi+0x1f],ebp
  40b205:	jbe    0x40b276
  40b207:	adc    eax,0x2a3cb827
  40b20c:	push   ss
  40b20d:	fs cmp esp,esp
  40b210:	jecxz  0x40b250
  40b212:	jns    0x40b234
  40b214:	pop    eax
  40b215:	rcr    ebx,cl
  40b217:	test   BYTE PTR [esi-0x272292b3],ch
  40b21d:	hlt    
  40b21e:	add    BYTE PTR [ebx-0x749bef45],dl
  40b224:	sub    BYTE PTR [ebp+0x3bd56563],ah
  40b22a:	ror    edi,cl
  40b22c:	push   ds
  40b22d:	jae    0x40b207
  40b22f:	pop    esp
  40b230:	dec    ebx
  40b231:	shl    bl,cl
  40b233:	mov    dh,0xcc
  40b235:	dec    esp
  40b236:	mov    dl,0xf8
  40b238:	jp     0x40b22a
  40b23a:	sub    esp,DWORD PTR [edi]
  40b23c:	lahf   
  40b23d:	sub    ebx,0xfffffffa
  40b240:	cld    
  40b241:	imul   BYTE PTR [eax+0x8]
  40b244:	mov    ds:0x3c106d4,al
  40b249:	fcomi  st,st(1)
  40b24b:	dec    edx
  40b24c:	xlat   BYTE PTR ds:[ebx]
  40b24d:	mov    dh,0x2d
  40b24f:	mov    ah,0x77
  40b251:	stos   DWORD PTR es:[edi],eax
  40b252:	cmp    esp,DWORD PTR [ecx+0x64]
  40b255:	imul   edx,DWORD PTR [edx+ecx*2+0xa],0x27
  40b25a:	jb     0x40b2d1
  40b25c:	test   DWORD PTR [eax-0x78],ebx
  40b25f:	sbb    eax,0xfd685d58
  40b264:	mov    dl,dl
  40b266:	sub    eax,0xb20e1051
  40b26b:	mov    ds:0x4f777c6e,eax
  40b270:	arpl   dx,ax
  40b272:	aad    0x91
  40b274:	mov    ?,esi
  40b276:	jge    0x40b22c
  40b278:	cs mov edi,ds
  40b27b:	outs   dx,BYTE PTR ds:[esi]
  40b27c:	test   dl,al
  40b27e:	cdq    
  40b27f:	repnz in al,dx
  40b281:	cld    
  40b282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b283:	lahf   
  40b284:	push   0x2725a4c1
  40b289:	and    al,0x49
  40b28b:	and    al,0xb8
  40b28d:	ds call 0x3cce1a2c
  40b293:	pop    es
  40b294:	push   0xdca070c3
  40b299:	xor    al,0x94
  40b29b:	ja     0x40b2b8
  40b29d:	pushf  
  40b29e:	jmp    0x2f5a:0x78d69976
  40b2a5:	push   ss
  40b2a6:	pop    ss
  40b2a7:	jmp    0x6be89d62
  40b2ac:	inc    edi
  40b2ad:	push   cs
  40b2ae:	mov    dh,0x61
  40b2b0:	fbld   TBYTE PTR [ebp+0x3e]
  40b2b3:	mov    ds,WORD PTR [ebx+eiz*1-0x12c18c3f]
  40b2ba:	iret   
  40b2bb:	sub    BYTE PTR [ebx-0x287df136],0xe8
  40b2c2:	inc    esi
  40b2c3:	cmp    DWORD PTR [esi],ebp
  40b2c5:	jle    0x40b32b
  40b2c7:	jmp    0x40b28d
  40b2c9:	rcr    dh,0xa6
  40b2cc:	icebp  
  40b2cd:	repnz (bad) 
  40b2cf:	mov    ds:0xecdd10ce,eax
  40b2d4:	dec    ecx
  40b2d5:	sbb    BYTE PTR [ecx-0x43],0xfc
  40b2d9:	push   eax
  40b2da:	fistp  WORD PTR [ebx-0x2567408d]
  40b2e0:	je     0x40b2af
  40b2e2:	pop    ebx
  40b2e3:	ins    BYTE PTR es:[edi],dx
  40b2e4:	pop    edi
  40b2e5:	mov    al,ds:0x35ff74f7
  40b2ea:	inc    esi
  40b2eb:	dec    ebp
  40b2ec:	pop    esp
  40b2ed:	in     eax,0x55
  40b2ef:	jg     0x40b2fb
  40b2f1:	stos   BYTE PTR es:[edi],al
  40b2f2:	adc    al,0x16
  40b2f4:	xor    ecx,edi
  40b2f6:	cmp    al,0x24
  40b2f8:	mov    ecx,0xcc345f7f
  40b2fd:	push   edx
  40b2fe:	sbb    BYTE PTR [ebx],cl
  40b300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b301:	jle    0x40b2de
  40b303:	mov    ds:0x324daf47,al
  40b308:	mov    ebx,0xb6c036f5
  40b30d:	leave  
  40b30e:	sub    DWORD PTR [edi+eiz*8-0x5d034efa],eax
  40b315:	in     al,0x9
  40b317:	xchg   bh,ah
  40b319:	data16 lahf 
  40b31b:	jns    0x40b2ad
  40b31d:	lods   eax,DWORD PTR ds:[esi]
  40b31e:	xor    eax,0x57574eb2
  40b323:	scas   al,BYTE PTR es:[edi]
  40b324:	mov    ds:0x90740105,eax
  40b329:	es dec edx
  40b32b:	jmp    0x12949820
  40b330:	push   ebx
  40b331:	jl     0x40b30e
  40b333:	mov    al,ds:0x1de33b32
  40b338:	and    eax,0x760b9766
  40b33d:	or     al,0x6e
  40b33f:	cld    
  40b340:	shl    BYTE PTR [eax],1
  40b342:	lods   al,BYTE PTR ds:[esi]
  40b343:	mov    ds:0xfec9c309,eax
  40b348:	jne    0x40b3a8
  40b34a:	iret   
  40b34b:	call   0x8b238024
  40b350:	jge    0x40b365
  40b352:	xchg   ebp,eax
  40b353:	fld    st(4)
  40b355:	call   FWORD PTR [ebx]
  40b357:	cmp    esp,esp
  40b359:	push   0x4b402d3c
  40b35e:	jnp    0x40b2f6
  40b360:	mov    cl,0xcf
  40b362:	adc    eax,0x588f85ed
  40b367:	cmc    
  40b368:	pop    esp
  40b369:	sub    ecx,DWORD PTR [ecx]
  40b36b:	jle    0x40b3c1
  40b36d:	cmp    al,0xf9
  40b36f:	aad    0x3c
  40b371:	add    cl,BYTE PTR [ebx+0x9]
  40b374:	cmp    BYTE PTR [edx+ebx*1-0xaf8eb6f],dl
  40b37b:	cmp    ebx,eax
  40b37d:	pop    ebx
  40b37e:	retf   0x95fe
  40b381:	dec    esp
  40b382:	outs   dx,DWORD PTR ds:[esi]
  40b383:	stos   BYTE PTR es:[edi],al
  40b384:	call   0x3c13:0x146c91f8
  40b38b:	and    BYTE PTR ds:0x8c20c732,cl
  40b391:	loopne 0x40b401
  40b393:	mov    ebx,edi
  40b395:	mov    DWORD PTR [edi+0x70],ebp
  40b398:	outs   dx,DWORD PTR ds:[esi]
  40b399:	pop    ebp
  40b39a:	mov    BYTE PTR [ebx+0xb355457],ah
  40b3a0:	jge    0x40b3e9
  40b3a2:	jecxz  0x40b397
  40b3a4:	pop    ecx
  40b3a5:	mov    ah,0x3c
  40b3a7:	or     DWORD PTR [eax],ebp
  40b3a9:	out    dx,eax
  40b3aa:	arpl   ax,di
  40b3ac:	xchg   esi,eax
  40b3ad:	mov    ch,0x16
  40b3af:	shl    BYTE PTR [eax-0x197b931a],1
  40b3b5:	mov    eax,eax
  40b3b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b8:	int    0xca
  40b3ba:	(bad)  
  40b3bb:	rcr    BYTE PTR [ebp+0x342dbcf7],1
  40b3c1:	mov    al,ds:0x12ed1b9f
  40b3c6:	inc    ebp
  40b3c7:	inc    eax
  40b3c8:	pop    eax
  40b3c9:	cdq    
  40b3ca:	shl    DWORD PTR [edx],0xe3
  40b3cd:	fsubr  st(0),st
  40b3cf:	xor    cl,BYTE PTR [edx-0x69f58479]
  40b3d5:	mov    eax,0x8d7ec136
  40b3da:	fstp   TBYTE PTR [edi+0x1c1c0e0a]
  40b3e0:	(bad)  
  40b3e1:	xor    bh,BYTE PTR [esp+ecx*8]
  40b3e4:	loopne 0x40b457
  40b3e6:	stc    
  40b3e7:	xor    ebx,DWORD PTR ds:0x8df993c2
  40b3ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3ee:	adc    al,0x47
  40b3f0:	hlt    
  40b3f1:	pop    ecx
  40b3f2:	mov    dh,0x61
  40b3f4:	pop    es
  40b3f5:	or     esp,DWORD PTR [ebp+esi*2-0x7007db48]
  40b3fc:	mov    ch,0x88
  40b3fe:	test   DWORD PTR [ebp-0x4b],0xbbc04fda
  40b405:	aad    0xe0
  40b407:	adc    dl,cl
  40b409:	je     0x40b38e
  40b40b:	pop    edi
  40b40c:	adc    eax,0x3719a9f7
  40b411:	adc    eax,0xd52475f3
  40b416:	sbb    DWORD PTR [esi+0x4f5bd9c],0xffffffdf
  40b41d:	std    
  40b41e:	repz mov WORD PTR [edx-0x4d],ds
  40b422:	(bad)  
  40b423:	outs   dx,DWORD PTR ds:[esi]
  40b424:	jp     0x40b432
  40b426:	nop
  40b427:	xor    DWORD PTR [edx-0x67e277dc],0x2
  40b42e:	and    bl,dl
  40b430:	mov    ds:0x366c28bb,eax
  40b435:	lds    ecx,FWORD PTR [ecx+eiz*4]
  40b438:	add    ch,BYTE PTR [edx-0x3c74c7bb]
  40b43e:	nop
  40b43f:	xor    BYTE PTR [ecx+0xba0c3d6],dh
  40b445:	lahf   
  40b446:	ds pop es
  40b448:	pop    esi
  40b449:	add    BYTE PTR [ecx],cl
  40b44b:	push   ebx
  40b44c:	out    0x3a,al
  40b44e:	fdiv   DWORD PTR [eax+ebx*2+0x0]
  40b452:	call   0x8963180e
  40b457:	fmul   st(0),st
  40b459:	dec    ebx
  40b45a:	lock or al,0xb2
  40b45d:	fistp  WORD PTR [edx+esi*4]
  40b460:	mov    ecx,DWORD PTR [ecx+0x1be749b]
  40b466:	mov    dh,0xb7
  40b468:	sbb    DWORD PTR [edx+ecx*1+0x69],esp
  40b46c:	pop    es
  40b46d:	adc    al,0x7b
  40b46f:	das    
  40b470:	pop    ss
  40b471:	xchg   esi,eax
  40b472:	xchg   BYTE PTR [edx],cl
  40b474:	or     DWORD PTR [esp+eax*1-0x53],esp
  40b478:	ss jecxz 0x40b48f
  40b47b:	add    bh,dh
  40b47d:	ror    DWORD PTR [edi+0x23271fda],cl
  40b483:	add    esi,DWORD PTR [esi-0xf]
  40b486:	fcom   DWORD PTR [esi-0x1f0332ed]
  40b48c:	fs lahf 
  40b48e:	push   ebp
  40b48f:	lea    eax,ds:0xf0cffb4c
  40b495:	repz fs scas al,BYTE PTR es:[edi]
  40b498:	fisubr DWORD PTR [edx]
  40b49a:	cmp    edi,DWORD PTR [edx]
  40b49c:	sbb    DWORD PTR [esi-0x64],0x1b
  40b4a0:	mul    DWORD PTR [esi-0x26]
  40b4a3:	jp     0x40b4a7
  40b4a5:	cmp    bl,BYTE PTR [ebp+0x10]
  40b4a8:	das    
  40b4a9:	pop    ebx
  40b4aa:	sbb    BYTE PTR [ecx-0x77],0x10
  40b4ae:	sub    eax,DWORD PTR ds:0xece3663b
  40b4b4:	mov    bh,0xb2
  40b4b6:	mov    ebx,0x456fb6e4
  40b4bb:	and    DWORD PTR [esi+ebx*2+0x6d],ebx
  40b4bf:	shl    DWORD PTR [ebp-0x6e953b8a],0xd5
  40b4c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4c7:	outs   dx,DWORD PTR ds:[esi]
  40b4c8:	aaa    
  40b4c9:	or     al,0x59
  40b4cb:	int3   
  40b4cc:	xor    bl,ch
  40b4ce:	xor    BYTE PTR [edi-0x873c2ba],bh
  40b4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d5:	mov    cl,0xeb
  40b4d7:	jo     0x40b529
  40b4d9:	iret   
  40b4da:	rcr    BYTE PTR [ecx+0x2c],1
  40b4dd:	sub    esp,DWORD PTR [ebx+0x503f2aaf]
  40b4e3:	aas    
  40b4e4:	imul   BYTE PTR [ebx-0x33f2925b]
  40b4ea:	(bad)  
  40b4eb:	xor    esp,esi
  40b4ed:	and    BYTE PTR [esp+eiz*2],ch
  40b4f0:	xchg   BYTE PTR [edx+0x7f8eb82b],al
  40b4f6:	and    eax,0x750e6648
  40b4fb:	data16 test BYTE PTR [esi+0x4c554e69],0x29
  40b503:	int3   
  40b504:	loope  0x40b4a3
  40b506:	das    
  40b507:	xor    eax,0xbe4c6b3
  40b50c:	dec    eax
  40b50d:	sub    eax,0x3ece4a7f
  40b512:	pop    esi
  40b513:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40b515:	cmp    al,0x80
  40b517:	jne    0x40b4e3
  40b519:	dec    esi
  40b51a:	aaa    
  40b51b:	mov    cs,WORD PTR [eax+0x4b785f54]
  40b521:	or     DWORD PTR [ebp-0xf73c505],esp
  40b527:	jo     0x40b519
  40b529:	pop    ebx
  40b52a:	mov    edi,0x2a721738
  40b52f:	pop    edi
  40b530:	or     al,0x76
  40b532:	xchg   bl,al
  40b534:	xor    BYTE PTR [edx+0x403b7d9b],ah
  40b53a:	frstor [eax+0x480747ab]
  40b540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b541:	inc    esi
  40b542:	cmp    al,0xd0
  40b544:	dec    esp
  40b545:	mov    ecx,DWORD PTR [edi]
  40b547:	test   al,0xac
  40b549:	mov    edx,0x309ab95f
  40b54e:	xchg   esp,eax
  40b54f:	adc    ecx,esp
  40b551:	mov    eax,ds:0xea8ab745
  40b556:	adc    BYTE PTR [esi],ch
  40b558:	add    edx,edx
  40b55a:	mov    edx,cs
  40b55c:	xor    BYTE PTR [edi-0x671aff84],cl
  40b562:	scas   eax,DWORD PTR es:[edi]
  40b563:	sbb    BYTE PTR [eax+0x37a12c33],ah
  40b569:	sub    BYTE PTR [edx+0x62d15d2],0xea
  40b570:	test   al,0x52
  40b572:	cdq    
  40b573:	push   edi
  40b574:	mov    cs,WORD PTR [edx+0xc]
  40b577:	or     ch,BYTE PTR [ecx+0x17fd502d]
  40b57d:	repz cmp edi,DWORD PTR [eax+0x43]
  40b581:	sub    BYTE PTR [ebx],dh
  40b583:	retf   0x780b
  40b586:	test   BYTE PTR [ebx],al
  40b588:	add    al,0x8b
  40b58a:	xor    al,0x87
  40b58c:	out    dx,eax
  40b58d:	mov    ds:0xe3d36e0d,al
  40b592:	pusha  
  40b593:	jge    0x40b565
  40b595:	fs retf 
  40b597:	push   0x57b14b1f
  40b59c:	or     DWORD PTR [ebp+0x31],esp
  40b59f:	adc    DWORD PTR [ebx-0x37],eax
  40b5a2:	fcmovb st,st(3)
  40b5a4:	and    BYTE PTR [edx+0x2d],0xa3
  40b5a8:	cmp    edi,DWORD PTR [ebp-0x7a8daa81]
  40b5ae:	int3   
  40b5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5b0:	sub    bl,dh
  40b5b2:	push   es
  40b5b3:	ret    0x648c
  40b5b6:	mov    cl,0xaa
  40b5b8:	push   edx
  40b5b9:	mov    cl,0xfb
  40b5bb:	aas    
  40b5bc:	inc    eax
  40b5bd:	inc    ebp
  40b5be:	call   0x389cf824
  40b5c3:	add    esi,DWORD PTR [ecx-0x5f]
  40b5c6:	in     eax,0xa4
  40b5c8:	xchg   ebx,eax
  40b5c9:	data16 jnp 0x40b5fb
  40b5cc:	stos   BYTE PTR es:[edi],al
  40b5cd:	shld   eax,ecx,cl
  40b5d0:	std    
  40b5d1:	out    dx,al
  40b5d2:	xlat   BYTE PTR ds:[ebx]
  40b5d3:	add    al,0x71
  40b5d5:	dec    ebp
  40b5d6:	iret   
  40b5d7:	lahf   
  40b5d8:	cmp    eax,0x7d9f10d7
  40b5dd:	bound  ebp,QWORD PTR [ebx+ecx*2-0x61788a9b]
  40b5e4:	mov    dl,0xb7
  40b5e6:	ins    DWORD PTR es:[edi],dx
  40b5e7:	loop   0x40b649
  40b5e9:	std    
  40b5ea:	sbb    ebp,DWORD PTR [ebp-0x3e8ade0e]
  40b5f0:	pop    ecx
  40b5f1:	(bad)  
  40b5f2:	addr16 pop edi
  40b5f4:	icebp  
  40b5f5:	les    edi,FWORD PTR [ebx]
  40b5f7:	lahf   
  40b5f8:	js     0x40b597
  40b5fa:	xchg   ebx,eax
  40b5fb:	lds    eax,FWORD PTR [edx+0xe]
  40b5fe:	stc    
  40b5ff:	mov    al,ds:0x9670eb63
  40b604:	dec    eax
  40b605:	dec    esi
  40b606:	iret   
  40b607:	arpl   WORD PTR [eax-0x34],bx
  40b60a:	jge    0x40b62f
  40b60c:	fsub   QWORD PTR [edx]
  40b60e:	mov    ebp,0xadd1862
  40b613:	xlat   BYTE PTR ds:[ebx]
  40b614:	or     eax,0x83a20bc8
  40b619:	xor    esp,0x3
  40b61c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b61d:	push   esi
  40b61e:	std    
  40b61f:	clc    
  40b620:	in     eax,dx
  40b621:	xchg   ebx,eax
  40b622:	sahf   
  40b623:	jl     0x40b5d9
  40b625:	push   ss
  40b626:	jns    0x40b65e
  40b628:	(bad)  
  40b629:	push   ebx
  40b62a:	retf   0x9bab
  40b62d:	adc    ecx,0xf
  40b630:	(bad)  
  40b631:	adc    al,0x43
  40b633:	inc    edi
  40b634:	pop    ebp
  40b635:	in     eax,dx
  40b636:	fld    TBYTE PTR [ebp+0x12]
  40b639:	mov    dh,0xb2
  40b63b:	cmp    bl,bl
  40b63d:	lea    esi,[ebp+0x7a]
  40b640:	jne    0x40b69a
  40b642:	inc    ah
  40b644:	daa    
  40b645:	xchg   edx,eax
  40b646:	mov    bh,0x3a
  40b648:	mov    ds:0xddccc2d4,eax
  40b64d:	add    eax,0x3cbe93e1
  40b652:	jmp    0x40b6a2
  40b654:	adc    ebp,esp
  40b656:	repz jo 0x40b645
  40b659:	mov    bh,0x82
  40b65b:	loope  0x40b682
  40b65d:	push   edi
  40b65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b65f:	stc    
  40b660:	ins    BYTE PTR es:[edi],dx
  40b661:	add    BYTE PTR [ecx+0x40],0x32
  40b665:	pop    edi
  40b666:	fiadd  WORD PTR [ebp-0x5f]
  40b669:	pop    edi
  40b66a:	cs popa 
  40b66c:	cmp    BYTE PTR [edx+0x56aaa23e],dl
  40b672:	ja     0x40b635
  40b674:	pushf  
  40b675:	jne    0x40b641
  40b677:	repnz mov eax,0x6811080a
  40b67d:	and    esi,edx
  40b67f:	dec    edx
  40b680:	dec    esi
  40b681:	sbb    ch,ah
  40b683:	imul   esp,DWORD PTR [ecx],0x2f
  40b686:	or     ebp,DWORD PTR [eax+0x1]
  40b689:	jle    0x40b655
  40b68b:	aas    
  40b68c:	dec    esi
  40b68d:	fsub   QWORD PTR [ecx]
  40b68f:	xor    DWORD PTR [ebx+0x273ffccd],ebx
  40b695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b696:	outs   dx,BYTE PTR ds:[esi]
  40b697:	mov    esp,0x3013910b
  40b69c:	xor    cl,bh
  40b69e:	shl    ebx,1
  40b6a0:	(bad)  
  40b6a1:	aas    
  40b6a2:	shr    DWORD PTR [edx-0x58d01e53],0xe0
  40b6a9:	fnstsw WORD PTR [ecx]
  40b6ab:	or     edi,DWORD PTR [edi-0x42131192]
  40b6b1:	sbb    esp,DWORD PTR [eax+esi*2+0x6d]
  40b6b5:	adc    eax,0x9c0a0956
  40b6ba:	jl     0x40b6c0
  40b6bc:	out    0x6d,eax
  40b6be:	jecxz  0x40b6ec
  40b6c0:	ins    DWORD PTR es:[edi],dx
  40b6c1:	fisubr DWORD PTR [ebp+0x859b823]
  40b6c7:	ror    ebp,1
  40b6c9:	jmp    0x40b72b
  40b6cb:	daa    
  40b6cc:	rcl    BYTE PTR [edi+0x6d],cl
  40b6cf:	jecxz  0x40b6af
  40b6d1:	ins    BYTE PTR es:[edi],dx
  40b6d2:	cs mov esp,0x977a68e8
  40b6d8:	pop    edi
  40b6d9:	call   0xfd20:0xdb9f8379
  40b6e0:	cwde   
  40b6e1:	pop    ebx
  40b6e2:	jnp    0x40b723
  40b6e4:	cmp    DWORD PTR [edx],ecx
  40b6e6:	sbb    dl,ah
  40b6e8:	arpl   WORD PTR [esi-0x6f2a31d1],bp
  40b6ee:	inc    BYTE PTR [ebx]
  40b6f0:	in     al,0x8d
  40b6f2:	ins    DWORD PTR es:[edi],dx
  40b6f3:	and    DWORD PTR [ecx+ebp*1-0x50],ebp
  40b6f7:	mov    cl,0x54
  40b6f9:	or     DWORD PTR [esi-0x3f8ef09c],esi
  40b6ff:	push   ds
  40b700:	jae    0x40b705
  40b702:	cwde   
  40b703:	jge    0x40b715
  40b705:	cmp    DWORD PTR [ecx+ecx*1-0x5402af28],ebp
  40b70c:	adc    bl,BYTE PTR [esi]
  40b70e:	(bad)  
  40b70f:	jmp    0xd209216
  40b714:	scas   eax,DWORD PTR es:[edi]
  40b715:	add    edi,DWORD PTR [ebx+0x69]
  40b718:	sub    al,0x46
  40b71a:	pop    ds
  40b71b:	aas    
  40b71c:	aas    
  40b71d:	mov    ch,0x40
  40b71f:	and    bl,BYTE PTR [eax]
  40b721:	paddd  mm7,QWORD PTR [eax-0x226bd6b4]
  40b728:	fnsetpm(287 only) 
  40b72a:	ss pop ecx
  40b72c:	jp     0x40b748
  40b72e:	adc    DWORD PTR [ecx-0x7b],edi
  40b731:	aas    
  40b732:	loopne 0x40b6bc
  40b734:	add    ecx,0x16a30058
  40b73a:	(bad)  
  40b73b:	xchg   edx,eax
  40b73c:	in     eax,0x46
  40b73e:	lds    edi,FWORD PTR [ebp-0x35]
  40b741:	xor    eax,0x3993a073
  40b746:	enter  0xdaa5,0xbf
  40b74a:	and    dh,BYTE PTR [ecx-0x3a0c6cf0]
  40b750:	icebp  
  40b751:	push   ecx
  40b752:	call   0xda88ce11
  40b757:	in     al,0x5c
  40b759:	iret   
  40b75a:	or     ebp,DWORD PTR [ebx]
  40b75c:	inc    eax
  40b75d:	jnp    0x40b712
  40b75f:	add    BYTE PTR [edi],ah
  40b761:	out    dx,eax
  40b762:	add    al,0x4f
  40b764:	shr    DWORD PTR [ebx+edx*4+0x38b8c439],cl
  40b76b:	cmc    
  40b76c:	sti    
  40b76d:	into   
  40b76e:	push   ebp
  40b76f:	arpl   WORD PTR [esi+0x75f0ff6e],di
  40b775:	aas    
  40b776:	aas    
  40b777:	inc    edi
  40b778:	sub    bl,bl
  40b77a:	ja     0x40b782
  40b77c:	and    DWORD PTR [ebx+0x1b],edi
  40b77f:	in     eax,0x5
  40b781:	inc    edi
  40b782:	mov    ebp,0xe334a195
  40b787:	cmp    BYTE PTR [edx+eax*2-0x34],dh
  40b78b:	int3   
  40b78c:	pop    gs
  40b78e:	scas   eax,DWORD PTR es:[edi]
  40b78f:	xchg   ecx,eax
  40b790:	push   edx
  40b791:	cmp    BYTE PTR ds:0xa148ea32,bh
  40b797:	sbb    BYTE PTR [ebp+0x29],dl
  40b79a:	add    al,BYTE PTR [ebp-0x360a5f35]
  40b7a0:	sbb    al,0x1c
  40b7a2:	mov    eax,ds:0x6e95dcb7
  40b7a7:	sbb    al,0x77
  40b7a9:	mov    bl,0x16
  40b7ab:	rcl    DWORD PTR [edx+0x65],cl
  40b7ae:	or     DWORD PTR [esi-0x2d],esp
  40b7b1:	out    dx,eax
  40b7b2:	mov    DWORD PTR [ebp+eiz*4+0x1],esi
  40b7b6:	mov    dh,0xff
  40b7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7b9:	sahf   
  40b7ba:	pop    ebx
  40b7bb:	stc    
  40b7bc:	xor    eax,0x3b2f7eed
  40b7c1:	fcmovnbe st,st(4)
  40b7c3:	lods   al,BYTE PTR ds:[esi]
  40b7c4:	dec    ecx
  40b7c5:	xchg   edi,eax
  40b7c6:	mov    dh,0x7a
  40b7c8:	or     eax,0x85138fe
  40b7cd:	xchg   ecx,eax
  40b7ce:	and    DWORD PTR [eax+eax*1-0x60ab2df2],esi
  40b7d5:	loop   0x40b7c7
  40b7d7:	ds mov bh,0x58
  40b7da:	ins    DWORD PTR es:[edi],dx
  40b7db:	or     edi,DWORD PTR [edx+0x4f22af88]
  40b7e1:	cmp    BYTE PTR [ebx+ecx*8-0x5c],dl
  40b7e5:	scas   eax,DWORD PTR es:[edi]
  40b7e6:	mov    BYTE PTR [edx-0x3b],0x68
  40b7ea:	xor    al,0x5c
  40b7ec:	out    dx,al
  40b7ed:	add    BYTE PTR [edx-0x7d],0x6c
  40b7f1:	fbstp  TBYTE PTR [esi+esi*2]
  40b7f4:	dec    edx
  40b7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7f6:	and    esi,edx
  40b7f8:	lods   al,BYTE PTR ds:[esi]
  40b7f9:	and    BYTE PTR [edx-0x5ccd7925],cl
  40b7ff:	jo     0x40b816
  40b801:	aaa    
  40b802:	aaa    
  40b803:	rol    BYTE PTR gs:[eax+0x209c9887],0xa1
  40b80b:	arpl   WORD PTR [eax-0x11],si
  40b80e:	ret    
  40b80f:	js     0x40b80e
  40b811:	je     0x40b871
  40b813:	mov    edx,0xa6b0e559
  40b818:	jp     0x40b852
  40b81a:	sbb    DWORD PTR [ecx],eax
  40b81c:	xchg   ecx,esp
  40b81e:	pop    edi
  40b81f:	stc    
  40b820:	arpl   WORD PTR [eax-0xd],bx
  40b823:	cmp    eax,0x91131e40
  40b828:	cmp    dl,BYTE PTR [edx-0x3f]
  40b82b:	fs test bl,bh
  40b82e:	sbb    BYTE PTR [esi],bh
  40b830:	dec    edx
  40b831:	js     0x40b7b9
  40b833:	add    al,0x8b
  40b835:	xor    DWORD PTR [edi+0x21],ebx
  40b838:	in     al,dx
  40b839:	jmp    0x40b876
  40b83b:	nop
  40b83c:	xor    al,0xe4
  40b83e:	out    dx,eax
  40b83f:	xor    al,BYTE PTR [ebx-0x637a9fac]
  40b845:	and    BYTE PTR [ebp+0x71],ah
  40b848:	xor    al,0xf7
  40b84a:	icebp  
  40b84b:	xchg   esp,eax
  40b84c:	xchg   DWORD PTR [edx-0x80],ecx
  40b84f:	sbb    al,0xbb
  40b851:	sahf   
  40b852:	std    
  40b853:	mov    ds:0x6ee58269,eax
  40b858:	out    dx,eax
  40b859:	mov    edx,0xb7490cb
  40b85e:	add    eax,DWORD PTR [ecx+eax*4]
  40b861:	jns    0x40b8a2
  40b863:	sub    DWORD PTR [esi],esp
  40b865:	scas   eax,DWORD PTR es:[edi]
  40b866:	popa   
  40b867:	mov    eax,ds:0x3db4e2d5
  40b86c:	addr16 std 
  40b86e:	sub    DWORD PTR ds:0x175285d7,esi
  40b874:	pushf  
  40b875:	mov    ds:0x22ec9f7,eax
  40b87a:	mov    ch,0x43
  40b87c:	push   ecx
  40b87d:	les    ebp,FWORD PTR [edx]
  40b87f:	fdiv   QWORD PTR [ebx+esi*8-0x56]
  40b883:	and    DWORD PTR [eax+0x5ad33e0c],edi
  40b889:	cmp    cl,bh
  40b88b:	push   es
  40b88c:	ret    0x2446
  40b88f:	add    ebp,DWORD PTR [ebp+ecx*8-0x66]
  40b893:	outs   dx,BYTE PTR ds:[esi]
  40b894:	jle    0x40b908
  40b896:	fidivr DWORD PTR [edx-0x2c]
  40b899:	adc    ebp,DWORD PTR [edx+0x3893fc9c]
  40b89f:	ja     0x40b8bf
  40b8a1:	enter  0x52bf,0x34
  40b8a5:	dec    esi
  40b8a6:	sbb    eax,0x71a7b391
  40b8ab:	pusha  
  40b8ac:	jno    0x40b83b
  40b8ae:	adc    DWORD PTR [ebp+0xf98a393],0x31260ee8
  40b8b8:	cli    
  40b8b9:	popa   
  40b8ba:	mov    ah,0xcf
  40b8bc:	lds    ecx,FWORD PTR [ebp-0x26]
  40b8bf:	mov    ds:0x6643e20d,eax
  40b8c4:	out    dx,al
  40b8c5:	inc    edx
  40b8c6:	pop    eax
  40b8c7:	and    cl,0x34
  40b8ca:	test   BYTE PTR [eax+0x43],ah
  40b8cd:	sbb    BYTE PTR [edi],cl
  40b8cf:	mov    es,WORD PTR [edx+edx*4+0x1f]
  40b8d3:	fcom   QWORD PTR [eax]
  40b8d5:	inc    ebx
  40b8d6:	pop    esp
  40b8d7:	push   ecx
  40b8d8:	ret    0x441f
  40b8db:	mov    es,WORD PTR [ebp-0x1cf91a17]
  40b8e1:	rcr    DWORD PTR [ebx],0xeb
  40b8e4:	pop    edx
  40b8e5:	or     dl,dh
  40b8e7:	xchg   BYTE PTR [ecx+ecx*2+0x42],dh
  40b8eb:	js     0x40b91c
  40b8ed:	(bad)  
  40b8ee:	xchg   edx,eax
  40b8ef:	add    al,0xb6
  40b8f1:	pop    esi
  40b8f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8f3:	aas    
  40b8f4:	rol    ebx,1
  40b8f6:	inc    esi
  40b8f7:	lods   al,BYTE PTR ds:[esi]
  40b8f8:	jae    0x40b92a
  40b8fa:	leave  
  40b8fb:	fist   DWORD PTR [ebp-0x3a246a25]
  40b901:	mov    DWORD PTR [ebp+0x6b],esi
  40b904:	arpl   WORD PTR [ebx-0xb],dx
  40b907:	and    bh,BYTE PTR [esi]
  40b909:	and    ah,BYTE PTR [ebx+0x21]
  40b90c:	ret    
  40b90d:	cmp    BYTE PTR [eax+0x71e5c9d9],cl
  40b913:	(bad)
  40b917:	ja     0x40b936
  40b919:	aam    0xb0
  40b91b:	dec    esp
  40b91c:	loope  0x40b8eb
  40b91e:	sub    eax,0xb8e10448
  40b923:	pause  
  40b925:	sahf   
  40b926:	not    DWORD PTR [ecx+0x0]
  40b929:	fs pop es
  40b92b:	rcl    DWORD PTR [esi-0x18],0x2e
  40b92f:	fmul   QWORD PTR [ecx+0x35f575c5]
  40b935:	inc    edx
  40b936:	addr16 lock mov al,ds:0x7952
  40b93b:	inc    esp
  40b93c:	call   0xe2b01b34
  40b941:	xor    eax,0xaa4c7d7e
  40b946:	dec    ebx
  40b947:	jmp    0x3cc7:0xdcadff28
  40b94e:	ins    DWORD PTR es:[edi],dx
  40b94f:	test   al,0x23
  40b951:	aad    0x14
  40b953:	in     al,0x85
  40b955:	nop
  40b956:	(bad)  
  40b957:	xor    dl,dh
  40b959:	push   ebp
  40b95a:	pop    eax
  40b95b:	xor    BYTE PTR [ebp-0x2b],bl
  40b95e:	jbe    0x40b944
  40b960:	pop    ecx
  40b961:	test   eax,0x3a5b9052
  40b966:	push   0xfffffff0
  40b968:	and    eax,DWORD PTR [esi+edi*4+0x18]
  40b96c:	or     al,0x9
  40b96e:	outs   dx,DWORD PTR ds:[esi]
  40b96f:	ret    0x789b
  40b972:	js     0x40b9a1
  40b974:	push   cs
  40b975:	addr16 mov bl,0xc8
  40b978:	retf   
  40b979:	fwait
  40b97a:	ja     0x40b925
  40b97c:	pop    ebx
  40b97d:	imul   esp,DWORD PTR [ebx+0x1b],0x72061152
  40b984:	popf   
  40b985:	scas   al,BYTE PTR es:[edi]
  40b986:	xchg   esi,eax
  40b987:	cmp    ebx,DWORD PTR [eax-0x56]
  40b98a:	xchg   esi,eax
  40b98b:	fucomp st(6)
  40b98d:	lea    eax,[edi-0x64e70ae]
  40b993:	mov    ebp,0x12a025bd
  40b998:	sbb    DWORD PTR [eax-0x77],edx
  40b99b:	sbb    DWORD PTR [ebx+ebx*8],esp
  40b99e:	dec    esp
  40b99f:	lahf   
  40b9a0:	push   0xa0b3f85c
  40b9a5:	out    0x59,eax
  40b9a7:	sbb    al,0xa8
  40b9a9:	cmp    ebp,DWORD PTR [ebx+0x605b58d5]
  40b9af:	imul   ebx,DWORD PTR [esi+0x71],0x4e
  40b9b3:	out    dx,eax
  40b9b4:	jb     0x40b9ab
  40b9b6:	push   edx
  40b9b7:	fcmovu st,st(0)
  40b9b9:	lock or esi,DWORD PTR [ebx-0x8]
  40b9bd:	push   ebp
  40b9be:	gs das 
  40b9c0:	jecxz  0x40b943
  40b9c2:	cmc    
  40b9c3:	fwait
  40b9c4:	pop    es
  40b9c5:	inc    ecx
  40b9c6:	sti    
  40b9c7:	mov    esp,0x3f34fde0
  40b9cc:	mov    cl,0x41
  40b9ce:	cmp    al,bh
  40b9d0:	push   ebp
  40b9d1:	scas   al,BYTE PTR es:[edi]
  40b9d2:	nop
  40b9d3:	pop    esp
  40b9d4:	lock pusha 
  40b9d6:	xor    al,0xa4
  40b9d8:	xchg   ah,al
  40b9da:	adc    al,0xe4
  40b9dc:	inc    ecx
  40b9dd:	mov    al,BYTE PTR [edi+0x302f2ee8]
  40b9e3:	or     edx,DWORD PTR [ecx+0x4]
  40b9e6:	xor    al,0x38
  40b9e8:	in     al,0xa9
  40b9ea:	jns    0x40ba24
  40b9ec:	retf   0x426b
  40b9ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9f0:	imul   edx,DWORD PTR [ecx-0x41],0xaba5f8ee
  40b9f7:	adc    al,bl
  40b9f9:	(bad)  
  40b9fa:	popf   
  40b9fb:	jmp    0x24f31cf4
  40ba00:	add    DWORD PTR [ebp+0x26],ebp
  40ba03:	sub    DWORD PTR [edx-0xe],ebx
  40ba06:	fst    st(5)
  40ba08:	cli    
  40ba09:	cld    
  40ba0a:	out    0x41,eax
  40ba0c:	cmc    
  40ba0d:	jnp    0x40ba21
  40ba0f:	jp     0x40ba2d
  40ba11:	retf   
  40ba12:	push   esp
  40ba13:	mov    ecx,esp
  40ba15:	in     eax,0x5d
  40ba17:	xchg   edx,eax
  40ba18:	jno    0x40ba6a
  40ba1a:	or     ebp,ebp
  40ba1c:	pushf  
  40ba1d:	out    0x9b,al
  40ba1f:	and    eax,0x78722ec8
  40ba24:	push   ebx
  40ba25:	jb     0x40ba3f
  40ba27:	fisub  DWORD PTR [edx+0x4a]
  40ba2a:	ins    BYTE PTR es:[edi],dx
  40ba2b:	std    
  40ba2c:	fst    DWORD PTR [eax+0x4]
  40ba2f:	sbb    ebx,ecx
  40ba31:	dec    ebp
  40ba32:	fwait
  40ba33:	push   eax
  40ba34:	dec    ebp
  40ba35:	iret   
  40ba36:	pop    esp
  40ba37:	and    BYTE PTR [edi+0x56],al
  40ba3a:	into   
  40ba3b:	imul   edi,DWORD PTR [ecx-0x3c220c92],0xffffff86
  40ba42:	inc    esi
  40ba43:	aad    0x95
  40ba45:	in     eax,0xb7
  40ba47:	xchg   edx,eax
  40ba48:	out    dx,eax
  40ba49:	xchg   BYTE PTR [ebx-0x24bc4fa2],dh
  40ba4f:	jg     0x40ba42
  40ba51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba52:	lea    esp,ds:[edi]
  40ba55:	imul   BYTE PTR [edi]
  40ba57:	loopne 0x40ba76
  40ba59:	cmp    dh,bl
  40ba5b:	ret    0xa332
  40ba5e:	sbb    ebp,esi
  40ba60:	lds    ecx,FWORD PTR [eax-0x12a15a0d]
  40ba66:	jecxz  0x40ba8f
  40ba68:	sar    DWORD PTR [edx],1
  40ba6a:	out    dx,al
  40ba6b:	jb     0x40ba6f
  40ba6d:	jno    0x40ba2a
  40ba6f:	jb     0x40bab3
  40ba71:	adc    ecx,esp
  40ba73:	mov    ds:0x15db1f12,al
  40ba78:	cmc    
  40ba79:	jecxz  0x40bae5
  40ba7b:	mov    ecx,0x31513ff4
  40ba80:	jl     0x40baf5
  40ba82:	cmp    BYTE PTR [ebx],dh
  40ba84:	loopne 0x40ba85
  40ba86:	loop   0x40ba14
  40ba88:	inc    ecx
  40ba89:	std    
  40ba8a:	arpl   WORD PTR [edx+0x2677cc87],bp
  40ba90:	jmp    FWORD PTR [eax-0x2ac55d6e]
  40ba96:	push   esi
  40ba97:	xchg   ecx,edi
  40ba99:	std    
  40ba9a:	lds    esp,FWORD PTR [eax+0x3d]
  40ba9d:	sub    al,0x49
  40ba9f:	enter  0x4141,0x3a
  40baa3:	cld    
  40baa4:	push   ss
  40baa5:	stc    
  40baa6:	inc    ecx
  40baa7:	push   0x76
  40baa9:	lods   al,BYTE PTR ds:[esi]
  40baaa:	cmp    BYTE PTR [ebp-0x41],dh
  40baad:	or     al,0xea
  40baaf:	ins    DWORD PTR es:[edi],dx
  40bab0:	in     al,dx
  40bab1:	pcmpgtb mm6,QWORD PTR [edx+0x53]
  40bab5:	sbb    ah,dh
  40bab7:	int    0x3a
  40bab9:	pop    ebp
  40baba:	into   
  40babb:	(bad)  
  40babc:	lods   eax,DWORD PTR ds:[esi]
  40babd:	adc    DWORD PTR [edx],esi
  40babf:	inc    ebx
  40bac0:	neg    ebp
  40bac2:	jl     0x40baae
  40bac4:	lods   al,BYTE PTR ds:[esi]
  40bac5:	out    dx,al
  40bac6:	int3   
  40bac7:	xchg   edx,eax
  40bac8:	mul    BYTE PTR [eax-0x5bcde180]
  40bace:	int3   
  40bacf:	shl    DWORD PTR [edi+0x4820603c],0x55
  40bad6:	dec    edx
  40bad7:	pop    ebx
  40bad8:	rcr    DWORD PTR [ebp+0x46],cl
  40badb:	and    eax,0x57caedf4
  40bae0:	lds    edx,FWORD PTR [esi]
  40bae2:	xchg   ebp,eax
  40bae3:	(bad)  
  40bae4:	and    eax,0xc4192aaf
  40bae9:	jae    0x40bb62
  40baeb:	inc    ecx
  40baec:	int3   
  40baed:	in     eax,dx
  40baee:	stc    
  40baef:	nop
  40baf0:	shl    cl,cl
  40baf2:	sahf   
  40baf3:	aad    0xc6
  40baf5:	fadd   st(7),st
  40baf7:	fmul   QWORD PTR [eax+0xed3758a]
  40bafd:	xchg   esi,eax
  40bafe:	xchg   BYTE PTR [ebx+esi*8],dh
  40bb01:	and    ebx,DWORD PTR [esi-0x36]
  40bb04:	mov    ch,ah
  40bb06:	out    dx,al
  40bb07:	mov    WORD PTR [ebx],es
  40bb09:	inc    ebp
  40bb0a:	(bad)  
  40bb0b:	pushf  
  40bb0c:	pop    es
  40bb0d:	fs jns 0x40babf
  40bb10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb11:	adc    al,0x95
  40bb13:	das    
  40bb14:	cs inc eax
  40bb16:	cwde   
  40bb17:	adc    eax,0x62c5633e
  40bb1c:	test   al,0x8d
  40bb1e:	enter  0xceb8,0x6e
  40bb22:	jp     0x40bb3a
  40bb24:	test   al,0x4e
  40bb26:	retf   0xeacf
  40bb29:	xchg   DWORD PTR [ebp+0x6890fa1e],eax
  40bb2f:	(bad)  
  40bb30:	rol    DWORD PTR [esi+0x4a],cl
  40bb33:	add    BYTE PTR ds:[ebp+0x50],al
  40bb37:	sub    ebx,DWORD PTR [ecx+0x534dad46]
  40bb3d:	ds mov esi,0xfea7873a
  40bb43:	(bad)  
  40bb46:	into   
  40bb47:	jmp    0xb01d:0xf094e961
  40bb4e:	sub    BYTE PTR [edi-0x63495e4e],al
  40bb54:	fnstsw WORD PTR [ebp-0x42a12e9c]
  40bb5a:	or     ebx,DWORD PTR [edi+0x61]
  40bb5d:	dec    ecx
  40bb5e:	pusha  
  40bb5f:	stos   BYTE PTR es:[edi],al
  40bb60:	test   DWORD PTR [eax-0x63],esp
  40bb63:	xchg   edi,eax
  40bb64:	xor    al,0x66
  40bb66:	cdq    
  40bb67:	loopne 0x40bb76
  40bb69:	mov    edi,0xbe36dc86
  40bb6e:	scas   al,BYTE PTR es:[edi]
  40bb6f:	enter  0xb6b1,0xeb
  40bb73:	jnp    0x40bb78
  40bb75:	cmp    al,0x43
  40bb77:	xor    edx,edx
  40bb79:	test   DWORD PTR ds:0x866bb2d2,ecx
  40bb7f:	inc    esp
  40bb80:	mov    edx,0xaf53879d
  40bb85:	push   cs
  40bb86:	ret    
  40bb87:	mov    cl,0xdf
  40bb89:	div    DWORD PTR [edx-0x6f]
  40bb8c:	mov    es,WORD PTR [edi+0x6274b866]
  40bb92:	jb     0x40bb61
  40bb94:	dec    edi
  40bb95:	jbe    0x40bbe8
  40bb97:	push   0x25
  40bb99:	div    ebp
  40bb9b:	(bad)  
  40bb9d:	xchg   DWORD PTR [edx],ecx
  40bb9f:	shl    ebx,cl
  40bba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba2:	loop   0x40bb76
  40bba4:	cld    
  40bba5:	das    
  40bba6:	aam    0x7e
  40bba8:	stos   BYTE PTR es:[edi],al
  40bba9:	(bad)  
  40bbaa:	rol    DWORD PTR [esp+edx*2-0x51],cl
  40bbae:	loopne 0x40bb49
  40bbb0:	inc    esi
  40bbb1:	leave  
  40bbb2:	jnp    0x40bc24
  40bbb4:	inc    ebp
  40bbb5:	or     BYTE PTR [edx+eax*1],ch
  40bbb8:	mov    bl,dh
  40bbba:	dec    esi
  40bbbb:	push   esp
  40bbbc:	xor    dl,BYTE PTR [ebp+0x58a9b715]
  40bbc2:	fcom   DWORD PTR [ecx]
  40bbc4:	inc    ecx
  40bbc5:	retf   0xba82
  40bbc8:	push   esi
  40bbc9:	inc    ebp
  40bbca:	ins    DWORD PTR es:[edi],dx
  40bbcb:	ror    BYTE PTR [edx+0x2a],cl
  40bbce:	dec    ecx
  40bbcf:	adc    eax,0x2e3fe36c
  40bbd4:	ret    0x66bd
  40bbd7:	sbb    ebp,DWORD PTR [edx]
  40bbd9:	test   eax,0x33e735c5
  40bbde:	push   edi
  40bbdf:	imul   eax,DWORD PTR [eax+0x3620d1b1],0xffffffd6
  40bbe6:	add    bl,BYTE PTR [ebx]
  40bbe8:	lock cmp DWORD PTR [esi-0x58799902],ebp
  40bbef:	fdivp  st(3),st
  40bbf1:	cmp    BYTE PTR [eax+0x9],bl
  40bbf4:	sbb    ebp,edi
  40bbf6:	rol    DWORD PTR [eax-0x368aa29b],0xd1
  40bbfd:	mov    DWORD PTR [ecx],0xd3efc5fc
  40bc03:	sub    dl,BYTE PTR [eax]
  40bc05:	pop    esi
  40bc06:	ins    DWORD PTR es:[edi],dx
  40bc07:	rcr    ebp,0xa4
  40bc0a:	dec    ebp
  40bc0b:	loop   0x40bbd1
  40bc0d:	and    cl,BYTE PTR [edx-0x520681f2]
  40bc13:	xchg   BYTE PTR [eax+0x66],bl
  40bc16:	inc    ecx
  40bc17:	stos   DWORD PTR es:[edi],eax
  40bc18:	inc    edi
  40bc19:	xchg   edx,eax
  40bc1a:	pop    edi
  40bc1b:	sbb    dl,BYTE PTR [esp+ecx*1+0x2ae004e7]
  40bc22:	cmp    ah,BYTE PTR [esi+0x21]
  40bc25:	rcr    DWORD PTR [edx-0x6b],1
  40bc28:	(bad)  
  40bc29:	(bad)  
  40bc2a:	repnz loop 0x40bbb8
  40bc2d:	mov    edx,0xb3fc1a6c
  40bc32:	inc    edi
  40bc33:	lock dec ebp
  40bc35:	adc    bh,dl
  40bc37:	dec    ebx
  40bc38:	fwait
  40bc39:	mov    edx,0xaa0830bc
  40bc3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc3f:	inc    edi
  40bc40:	stc    
  40bc41:	add    DWORD PTR [ecx+0x4b],eax
  40bc44:	stos   DWORD PTR es:[edi],eax
  40bc45:	fidiv  DWORD PTR [ebx+0x12]
  40bc48:	adc    esi,ebx
  40bc4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc4b:	fs pop es
  40bc4d:	ss retf 
  40bc4f:	pop    ecx
  40bc50:	jle    0x40bc12
  40bc52:	and    ah,dl
  40bc54:	adc    ecx,DWORD PTR [ebp+0x6f]
  40bc57:	sahf   
  40bc58:	push   edi
  40bc59:	sub    bh,dh
  40bc5b:	xor    BYTE PTR ds:0xf4422107,al
  40bc61:	adc    BYTE PTR [eax+0xad20adb],bh
  40bc67:	pop    ss
  40bc68:	outs   dx,BYTE PTR ds:[esi]
  40bc69:	sar    DWORD PTR [esi+edi*2],0x2a
  40bc6d:	call   0xb698:0x25aa2bb2
  40bc74:	arpl   WORD PTR [ebx],di
  40bc76:	shl    BYTE PTR [eax-0x72],1
  40bc79:	popf   
  40bc7a:	cmp    eax,0x40a84118
  40bc7f:	(bad)  
  40bc80:	mov    ecx,0x9a411578
  40bc85:	dec    eax
  40bc86:	popa   
  40bc87:	lods   eax,DWORD PTR ds:[esi]
  40bc88:	sbb    cl,BYTE PTR [ebp+0x6a]
  40bc8b:	out    dx,eax
  40bc8c:	aam    0x1e
  40bc8e:	sbb    DWORD PTR [esi-0x40f2914e],ecx
  40bc94:	mov    cl,0x71
  40bc96:	nop
  40bc97:	mov    fs,WORD PTR ds:0x82a9d780
  40bc9d:	push   ebp
  40bc9e:	mov    esi,0xeceff964
  40bca3:	daa    
  40bca4:	cwde   
  40bca5:	ffree  st(1)
  40bca7:	jb     0x40bcf0
  40bca9:	imul   eax,ebp,0x51c591ac
  40bcaf:	pop    ss
  40bcb0:	es pop ebp
  40bcb2:	dec    edx
  40bcb3:	sub    dl,bl
  40bcb5:	dec    ebp
  40bcb6:	into   
  40bcb7:	and    BYTE PTR [ebp+0x41],dh
  40bcba:	ret    
  40bcbb:	cli    
  40bcbc:	popf   
  40bcbd:	mov    ds:0x8ef70e40,eax
  40bcc2:	push   0x9445cf47
  40bcc7:	popa   
  40bcc8:	arpl   WORD PTR [ecx-0x14],bx
  40bccb:	sar    DWORD PTR [edi],1
  40bccd:	jns    0x40bc87
  40bccf:	test   ebx,edx
  40bcd1:	pop    ds
  40bcd2:	inc    edx
  40bcd3:	ja     0x40bc6a
  40bcd5:	xchg   edx,eax
  40bcd6:	push   edx
  40bcd7:	and    esp,DWORD PTR [ecx-0x6032d2e8]
  40bcdd:	mov    eax,0x7873fc08
  40bce2:	call   0xcb1fb96e
  40bce7:	or     BYTE PTR [esi-0x40],ch
  40bcea:	mov    al,0xb5
  40bcec:	inc    esi
  40bced:	lock nop
  40bcef:	(bad)  
  40bcf0:	cmp    DWORD PTR [eax-0xcdcb8d6],edx
  40bcf6:	aam    0x3d
  40bcf8:	or     bl,ah
  40bcfa:	jl     0x40bcef
  40bcfc:	sbb    al,0xa6
  40bcfe:	cmp    al,0xe8
  40bd00:	leave  
  40bd01:	push   edx
  40bd02:	fdivr  QWORD PTR [ebx]
  40bd04:	loop   0x40bcec
  40bd06:	rcl    DWORD PTR [ecx+eax*8],0xdc
  40bd0a:	js     0x40bcbc
  40bd0c:	dec    edi
  40bd0d:	adc    al,0xee
  40bd0f:	add    DWORD PTR [ebx],eax
  40bd11:	cld    
  40bd12:	iret   
  40bd13:	fcomp  QWORD PTR [ebp+0x7c3bd26a]
  40bd19:	ds mov al,0x3c
  40bd1c:	leave  
  40bd1d:	jp     0x40bcf9
  40bd1f:	ret    
  40bd20:	mov    bl,al
  40bd22:	jmp    0xc36990f0
  40bd27:	push   0xffffff89
  40bd29:	and    al,0x55
  40bd2b:	repnz xchg edx,eax
  40bd2e:	fild   DWORD PTR [ebx+0x1d]
  40bd31:	xor    esp,DWORD PTR [ecx-0x41]
  40bd34:	mov    esp,0xa6521e4d
  40bd39:	cmp    eax,0x9b9ff050
  40bd3e:	test   BYTE PTR [ebp-0x5ffd73],0x75
  40bd45:	icebp  
  40bd46:	test   esp,ecx
  40bd48:	lds    ebx,FWORD PTR [ebx+0x486c5258]
  40bd4e:	fst    QWORD PTR ds:0x9c665530
  40bd54:	scas   eax,DWORD PTR es:[edi]
  40bd55:	sahf   
  40bd56:	adc    BYTE PTR [ecx+ebp*1],bl
  40bd59:	adc    eax,0xfb923443
  40bd5e:	add    esi,DWORD PTR [eax-0x3a862cec]
  40bd64:	loop   0x40bd2a
  40bd66:	lods   eax,DWORD PTR ds:[esi]
  40bd67:	add    bh,BYTE PTR [ecx]
  40bd69:	jnp    0x40bdc0
  40bd6b:	stos   DWORD PTR es:[edi],eax
  40bd6c:	ss mov al,bh
  40bd6f:	test   eax,0x875e3c7a
  40bd74:	ins    DWORD PTR es:[edi],dx
  40bd75:	and    BYTE PTR [eax+0x627476e2],ch
  40bd7b:	lahf   
  40bd7c:	jno    0x40bd0b
  40bd7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd7f:	xchg   BYTE PTR [edx],bl
  40bd81:	sbb    ch,BYTE PTR [esi-0x29a2ad32]
  40bd87:	and    al,0x55
  40bd89:	pop    ecx
  40bd8a:	pop    eax
  40bd8b:	mov    ds:0x24fa94ba,al
  40bd90:	sbb    BYTE PTR [edi],dh
  40bd92:	arpl   di,bp
  40bd94:	xchg   edx,eax
  40bd95:	xor    ah,bl
  40bd97:	or     ebp,ebp
  40bd99:	xor    DWORD PTR [edx+0x6de85ccf],edi
  40bd9f:	lods   al,BYTE PTR ds:[esi]
  40bda0:	lds    ecx,FWORD PTR [esi+0x6e]
  40bda3:	into   
  40bda4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bda5:	out    dx,eax
  40bda6:	lods   eax,DWORD PTR ds:[esi]
  40bda7:	push   edx
  40bda8:	mov    al,ds:0xecd09de7
  40bdad:	cmp    al,BYTE PTR [eax+ebp*2]
  40bdb0:	push   cs
  40bdb1:	call   0xc2c1bad2
  40bdb6:	sbb    ebx,DWORD PTR [edi+0x23ac53a1]
  40bdbc:	inc    ecx
  40bdbd:	loope  0x40bd40
  40bdbf:	xchg   ebp,eax
  40bdc0:	pop    edx
  40bdc1:	fs ins BYTE PTR es:[edi],dx
  40bdc3:	mov    esp,0xa689f690
  40bdc8:	(bad)  
  40bdc9:	stos   BYTE PTR es:[edi],al
  40bdca:	pop    ebx
  40bdcb:	xor    dh,al
  40bdcd:	fsubr  st,st(6)
  40bdcf:	inc    edi
  40bdd0:	xchg   edx,eax
  40bdd1:	imul   edx,DWORD PTR [edx-0x57],0x52
  40bdd5:	repnz xchg edi,eax
  40bdd7:	mov    dl,0x8a
  40bdd9:	in     eax,0xa5
  40bddb:	cld    
  40bddc:	cli    
  40bddd:	mov    DWORD PTR [eax],ebp
  40bddf:	cmp    al,0x80
  40bde1:	leave  
  40bde2:	push   eax
  40bde3:	sbb    ch,dl
  40bde5:	mov    eax,0xe09767c5
  40bdea:	xor    dl,bl
  40bdec:	or     DWORD PTR [ecx+0x6c],ecx
  40bdef:	das    
  40bdf0:	jae    0x40bdc7
  40bdf2:	stos   BYTE PTR es:[edi],al
  40bdf3:	dec    DWORD PTR [edi-0x70df29e8]
  40bdf9:	ficom  DWORD PTR [eax]
  40bdfb:	mov    ch,0xe9
  40bdfd:	arpl   WORD PTR [esi-0x75d0b95],di
  40be03:	mov    cl,0x5f
  40be05:	mov    dl,BYTE PTR [edi-0x43]
  40be08:	cwde   
  40be09:	nop
  40be0a:	jg     0x40be5d
  40be0c:	je     0x40bdb1
  40be0e:	xchg   esp,eax
  40be0f:	push   ebx
  40be10:	push   eax
  40be11:	jmp    0xe51c7d1c
  40be16:	pop    edx
  40be17:	pop    es
  40be18:	cdq    
  40be19:	adc    BYTE PTR [edi+0x13],al
  40be1c:	rcr    BYTE PTR [esi-0x3f19b4b2],1
  40be22:	inc    esp
  40be23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be24:	les    edx,FWORD PTR [edi+0x67]
  40be27:	in     eax,0x2b
  40be29:	enter  0x9197,0xed
  40be2d:	push   edi
  40be2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be2f:	into   
  40be30:	dec    ebx
  40be31:	mul    BYTE PTR [edi]
  40be33:	mov    cl,0x69
  40be35:	mov    ecx,0xa35da9bd
  40be3a:	dec    ebp
  40be3b:	xchg   edx,eax
  40be3c:	sbb    BYTE PTR [edi-0x73],dl
  40be3f:	xchg   esi,eax
  40be40:	out    0xca,eax
  40be42:	mov    ds:0xa5c5c3a6,al
  40be47:	fadd   st(6),st
  40be49:	cmc    
  40be4a:	in     al,dx
  40be4b:	push   esi
  40be4c:	cmp    ah,0xf5
  40be4f:	mov    eax,0x23a4617c
  40be54:	xchg   edx,eax
  40be55:	mov    ecx,0xeff98e21
  40be5a:	and    esp,DWORD PTR [ebx]
  40be5c:	mov    bl,0x6b
  40be5e:	dec    esp
  40be5f:	lahf   
  40be60:	jle    0x40be89
  40be62:	stos   BYTE PTR es:[edi],al
  40be63:	push   es
  40be64:	test   DWORD PTR [esi],0x5191ca18
  40be6a:	inc    DWORD PTR [edi-0x5b4855ed]
  40be70:	lods   eax,DWORD PTR ds:[esi]
  40be71:	outs   dx,BYTE PTR ds:[esi]
  40be72:	jmp    0x524a:0xcf8a55f
  40be79:	pop    ecx
  40be7a:	or     dl,BYTE PTR ds:0x4e4dd97d
  40be80:	add    edi,ecx
  40be82:	pop    edi
  40be83:	fisub  DWORD PTR [ecx+edx*8]
  40be86:	pop    ebp
  40be87:	dec    ebx
  40be88:	xlat   BYTE PTR ds:[ebx]
  40be89:	jae    0x40be46
  40be8b:	ss add bh,dl
  40be8e:	jno    0x40be26
  40be90:	sbb    eax,0x30a25df1
  40be95:	out    0xb9,eax
  40be97:	in     eax,dx
  40be98:	jmp    0x4c7c8019
  40be9d:	jge    0x40be6c
  40be9f:	or     al,0x45
  40bea1:	mov    edx,0x1a3c8abd
  40bea6:	aaa    
  40bea7:	xchg   DWORD PTR [eax],edi
  40bea9:	xor    al,ch
  40beab:	sbb    esp,0x5d
  40beae:	inc    ebx
  40beaf:	lock dec esi
  40beb1:	mov    ebx,0x37921c06
  40beb6:	xchg   ebp,eax
  40beb7:	sti    
  40beb8:	xchg   dh,bh
  40beba:	jne    0x40be50
  40bebc:	mov    ds:0x8b5834b,eax
  40bec1:	cdq    
  40bec2:	mov    ah,0x6e
  40bec4:	sti    
  40bec5:	jo     0x40be72
  40bec7:	fucomip st,st(1)
  40bec9:	or     BYTE PTR [ecx-0x3d],al
  40becc:	stos   BYTE PTR es:[edi],al
  40becd:	or     eax,DWORD PTR ds:0x2d3c592c
  40bed3:	mov    ds:0xf8d840d3,eax
  40bed8:	mov    dl,0x65
  40beda:	jl     0x40bea4
  40bedc:	dec    ecx
  40bedd:	out    dx,al
  40bede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bedf:	xchg   esi,eax
  40bee0:	das    
  40bee1:	in     al,0x9d
  40bee3:	add    bh,BYTE PTR [esi-0x39]
  40bee6:	jmp    DWORD PTR [esi]
  40bee8:	cmp    al,0xb3
  40beea:	fbstp  TBYTE PTR [ebx-0x78]
  40beed:	outs   dx,DWORD PTR gs:[esi]
  40beef:	xchg   ebp,eax
  40bef0:	dec    eax
  40bef1:	dec    edx
  40bef2:	or     BYTE PTR [ebx+0x453e82e],bh
  40bef8:	ins    BYTE PTR es:[edi],dx
  40bef9:	sbb    bl,BYTE PTR [ebx+0xc]
  40befc:	loopne 0x40bf0c
  40befe:	ss sbb dl,dl
  40bf01:	scas   al,BYTE PTR es:[edi]
  40bf02:	sbb    edx,eax
  40bf04:	sbb    al,0x55
  40bf06:	dec    eax
  40bf07:	or     bl,BYTE PTR ds:0x51fce4cc
  40bf0d:	mov    cl,0x9a
  40bf0f:	daa    
  40bf10:	mov    fs,ecx
  40bf12:	leave  
  40bf13:	adc    dh,BYTE PTR [ecx-0x3eaedf67]
  40bf19:	stc    
  40bf1a:	stos   DWORD PTR es:[edi],eax
  40bf1b:	adc    DWORD PTR [edx-0x6d],edx
  40bf1e:	aam    0x78
  40bf20:	or     DWORD PTR [ebp+0x4],edi
  40bf23:	in     al,0x54
  40bf25:	fdiv   DWORD PTR [eax]
  40bf27:	push   cs
  40bf28:	or     ecx,DWORD PTR [edx-0x44]
  40bf2b:	add    eax,0xa66287da
  40bf30:	push   0xffffffbd
  40bf32:	sti    
  40bf33:	sti    
  40bf34:	retf   0xdb8
  40bf37:	mov    esp,0x8aaf4f91
  40bf3c:	js     0x40bf82
  40bf3e:	lods   eax,DWORD PTR ds:[esi]
  40bf3f:	aaa    
  40bf40:	pop    ss
  40bf41:	push   esp
  40bf42:	mov    eax,0xa260c35a
  40bf47:	js     0x40bf93
  40bf49:	jo     0x40befc
  40bf4b:	xor    dl,ah
  40bf4d:	js     0x40bf2d
  40bf4f:	sbb    eax,0x454260e6
  40bf54:	inc    ebx
  40bf55:	enter  0xc23,0xf7
  40bf59:	out    dx,eax
  40bf5a:	jmp    0xfd3e:0xec0e16b8
  40bf61:	ins    BYTE PTR es:[edi],dx
  40bf62:	or     DWORD PTR [ebp+0x3c],ebx
  40bf65:	out    0x9b,al
  40bf67:	(bad)  
  40bf68:	into   
  40bf69:	mov    eax,ds:0xcb820ba4
  40bf6e:	cmp    eax,0xba2ff49c
  40bf73:	and    ebx,DWORD PTR [ebx]
  40bf75:	cmp    BYTE PTR [esi],bl
  40bf77:	xchg   ecx,eax
  40bf78:	sub    cl,BYTE PTR [edi]
  40bf7a:	push   es
  40bf7b:	sub    BYTE PTR [edx+esi*1-0x6a31f98b],dl
  40bf82:	stos   DWORD PTR es:[edi],eax
  40bf83:	call   0x6d535569
  40bf88:	mov    ecx,0xc007d175
  40bf8d:	dec    edx
  40bf8e:	lds    eax,FWORD PTR [ebx-0x642a39cf]
  40bf94:	push   esi
  40bf95:	mov    eax,0x208b2fac
  40bf9a:	push   esp
  40bf9b:	(bad)  
  40bf9c:	xor    eax,edx
  40bf9e:	rol    ebp,1
  40bfa0:	sub    DWORD PTR [edi],edi
  40bfa2:	(bad)  
  40bfa4:	es aaa 
  40bfa6:	dec    edi
  40bfa7:	inc    eax
  40bfa8:	popf   
  40bfa9:	leave  
  40bfaa:	sub    esi,ebp
  40bfac:	iret   
  40bfad:	dec    ebx
  40bfae:	or     al,0xd7
  40bfb0:	pop    ds
  40bfb1:	(bad)  [esi]
  40bfb3:	mov    ch,0x75
  40bfb5:	xchg   ebp,eax
  40bfb6:	sub    ebx,ebx
  40bfb8:	shl    al,cl
  40bfba:	mov    cl,0x2b
  40bfbc:	mov    ebx,0x5c0a60e5
  40bfc1:	pusha  
  40bfc2:	xchg   BYTE PTR [edx-0x2a0e25fd],cl
  40bfc8:	sti    
  40bfc9:	scas   eax,DWORD PTR es:[edi]
  40bfca:	adc    ch,al
  40bfcc:	sub    al,0xb7
  40bfce:	inc    ecx
  40bfcf:	les    eax,FWORD PTR [ebp+0x31]
  40bfd2:	cmp    ebx,DWORD PTR [ebx+edi*2-0xfd17f27]
  40bfd9:	imul   ebp,DWORD PTR [ebx],0xeb8854b0
  40bfdf:	and    dh,BYTE PTR [edx+0x198f0a30]
  40bfe5:	mov    ch,0x2f
  40bfe7:	out    dx,al
  40bfe8:	or     bl,BYTE PTR [esi]
  40bfea:	xchg   ebx,eax
  40bfeb:	xchg   BYTE PTR [esi-0x5cc01f71],dh
  40bff1:	xor    dh,BYTE PTR [esi+esi*1-0x270c1ec4]
  40bff8:	cmp    ch,bl
  40bffa:	bound  eax,QWORD PTR [eax]
  40bffc:	cwde   
  40bffd:	es mov bl,0xdc
  40c000:	sbb    al,0x8d
  40c002:	mov    ebx,edi
  40c004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c005:	sub    BYTE PTR ds:0x54fb88cc,0x4e
  40c00c:	mov    ah,0xa7
  40c00e:	(bad)  ds:0xf2b00718
  40c014:	(bad)  
  40c015:	iret   
  40c016:	out    dx,al
  40c017:	inc    ebp
  40c018:	sbb    bl,ch
  40c01a:	out    0x77,eax
  40c01c:	rcl    ebp,0xa0
  40c01f:	ret    0xff59
  40c022:	xchg   edi,eax
  40c023:	adc    esp,DWORD PTR [edx-0x5fa36bc3]
  40c029:	mov    DWORD PTR [ebp-0x4b],edx
  40c02c:	shl    BYTE PTR [edi],1
  40c02e:	inc    eax
  40c02f:	pop    DWORD PTR [edx]
  40c031:	or     esp,DWORD PTR [ecx-0x12]
  40c034:	xchg   BYTE PTR [esi+0x22],bh
  40c037:	pop    edx
  40c038:	and    al,0x3e
  40c03a:	push   esp
  40c03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c03c:	test   eax,0x56615744
  40c041:	push   edi
  40c042:	sub    DWORD PTR [eax+0x59],ebp
  40c045:	das    
  40c046:	push   ebx
  40c047:	mov    esp,0x912c01db
  40c04c:	cmp    bl,BYTE PTR [esi-0x2df27fe2]
  40c052:	mov    al,0x20
  40c054:	pushf  
  40c055:	add    dl,BYTE PTR [ebx+edi*1-0x1f10096]
  40c05c:	cmp    eax,0x1fdfa796
  40c061:	mov    ds:0x6b9bca61,al
  40c066:	add    DWORD PTR [ecx+0x4ff2b287],0x6b20723c
  40c070:	adc    ebp,eax
  40c072:	ins    DWORD PTR es:[edi],dx
  40c073:	inc    esi
  40c074:	data16 sbb cl,cl
  40c077:	aaa    
  40c078:	aaa    
  40c079:	fbld   TBYTE PTR [edi]
  40c07b:	mov    ds:0xceb64206,al
  40c080:	dec    eax
  40c081:	es push ss
  40c083:	xlat   BYTE PTR ds:[ebx]
  40c084:	dec    ecx
  40c085:	call   0x35e81fdb
  40c08a:	jb     0x40c0c9
  40c08c:	jno    0x40c0e0
  40c08e:	jp     0x40c096
  40c090:	push   0x6477d2a2
  40c095:	int3   
  40c096:	sub    al,0xf4
  40c098:	inc    ecx
  40c099:	ficomp WORD PTR [ecx]
  40c09b:	div    ecx
  40c09d:	fs pop esi
  40c09f:	mov    ah,bl
  40c0a1:	jns    0x40c0b6
  40c0a3:	sbb    edx,DWORD PTR [ebx-0x79]
  40c0a6:	push   cs
  40c0a7:	outs   dx,DWORD PTR ds:[esi]
  40c0a8:	adc    BYTE PTR es:[ebx-0x43b0ed05],ah
  40c0af:	cmp    eax,0x542642
  40c0b4:	push   cs
  40c0b5:	arpl   WORD PTR [eax],sp
  40c0b7:	mov    ?,WORD PTR [edx-0x56]
  40c0ba:	jle    0x40c116
  40c0bc:	les    ebp,FWORD PTR [edx+0x58]
  40c0bf:	dec    esp
  40c0c0:	xchg   edi,eax
  40c0c1:	out    0xec,eax
  40c0c3:	sub    eax,0x1e6fd16e
  40c0c8:	aam    0xf9
  40c0ca:	push   ebp
  40c0cb:	(bad)  
  40c0cc:	push   ds
  40c0cd:	popf   
  40c0ce:	mov    edi,0x232d0394
  40c0d3:	pop    es
  40c0d4:	pop    ss
  40c0d5:	push   0x3929e5c3
  40c0da:	adc    eax,DWORD PTR [edx+0x54f55601]
  40c0e0:	xor    BYTE PTR [esp+ebx*1+0x7ee9f0d2],ch
  40c0e7:	xchg   edx,eax
  40c0e8:	repz xor BYTE PTR ds:0x98a4d5d9,dh
  40c0ef:	dec    edi
  40c0f0:	arpl   ax,bx
  40c0f2:	push   cs
  40c0f3:	fmul   st,st(4)
  40c0f5:	sbb    ch,BYTE PTR [edi+0x4c]
  40c0f8:	sbb    al,0xe1
  40c0fa:	adc    BYTE PTR [edi+0x73],0xa8
  40c0fe:	daa    
  40c0ff:	mov    bh,al
  40c101:	pop    edi
  40c102:	xchg   ebp,eax
  40c103:	ss add DWORD PTR ss:[esi],0xbe003500
  40c10b:	ret    
  40c10c:	lock or eax,0xad69a6bf
  40c112:	ds stos BYTE PTR es:[edi],al
  40c114:	ret    0x394b
  40c117:	xor    al,0x3d
  40c119:	repz mov ah,BYTE PTR [edx-0x71aeb57e]
  40c120:	or     al,0xe3
  40c122:	adc    eax,0xa6a4dfd7
  40c127:	loop   0x40c161
  40c129:	cs cmp al,0x78
  40c12c:	ret    
  40c12d:	sub    DWORD PTR [ebp+0x62],edx
  40c130:	cmc    
  40c131:	jbe    0x40c0ee
  40c133:	add    esi,eax
  40c135:	push   ds
  40c136:	cmp    DWORD PTR [esi-0x36],ebp
  40c139:	pop    ds
  40c13a:	out    dx,al
  40c13b:	sbb    eax,0xe6f04bd0
  40c140:	dec    edx
  40c141:	fld    QWORD PTR [eax+0x62]
  40c144:	int    0x9e
  40c146:	sub    al,0xa2
  40c148:	cmp    DWORD PTR [ebp-0x33428d05],ebx
  40c14e:	mov    ebp,0x20fbab37
  40c153:	ror    DWORD PTR ds:0x70b9027a,1
  40c159:	jmp    0x40c1c5
  40c15b:	into   
  40c15c:	mov    edi,0x7938d0de
  40c161:	(bad)  
  40c162:	scas   eax,DWORD PTR es:[edi]
  40c163:	or     bh,BYTE PTR [eax-0x24]
  40c166:	xchg   ecx,eax
  40c167:	mov    ebp,0x5ecb2db8
  40c16d:	repnz mov cl,BYTE PTR [ebx+eax*2]
  40c171:	shr    esi,1
  40c173:	mov    eax,esi
  40c175:	xchg   ebp,eax
  40c176:	(bad)  
  40c178:	ins    DWORD PTR es:[edi],dx
  40c179:	fcomp  DWORD PTR [edx+0x7b]
  40c17c:	lock sbb ch,0xcb
  40c180:	gs pop es
  40c182:	xchg   ebp,eax
  40c183:	mov    esp,0xb7c17dbf
  40c188:	lods   eax,DWORD PTR ds:[esi]
  40c189:	cdq    
  40c18a:	push   ds
  40c18b:	fs xchg ebx,eax
  40c18d:	loopne 0x40c1fc
  40c18f:	push   ss
  40c190:	lods   eax,DWORD PTR ds:[esi]
  40c191:	icebp  
  40c192:	push   esi
  40c193:	pop    edx
  40c194:	ret    0x7a0c
  40c197:	std    
  40c198:	sub    al,0x39
  40c19a:	xchg   eax,edx
  40c19c:	push   edi
  40c19d:	lock retf 
  40c19f:	fs cmp DWORD PTR gs:0x7bc34d02,edx
  40c1a7:	jb     0x40c142
  40c1a9:	gs pop edi
  40c1ab:	popf   
  40c1ac:	sti    
  40c1ad:	jne    0x40c158
  40c1af:	sub    BYTE PTR [eax-0x24eb49f9],0xdd
  40c1b6:	xchg   ebx,eax
  40c1b7:	fs dec ebp
  40c1b9:	jmp    0x40c1ef
  40c1bb:	push   ss
  40c1bc:	push   edx
  40c1bd:	mov    ds:0xc4a05b01,al
  40c1c2:	aam    0x45
  40c1c4:	jae    0x40c1fd
  40c1c6:	imul   edx,DWORD PTR [ecx-0x2d720087],0xffffffc5
  40c1cd:	mov    ebx,0x773865a5
  40c1d2:	jnp    0x40c17f
  40c1d4:	test   cl,0xeb
  40c1d7:	pop    esp
  40c1d8:	int    0xfb
  40c1da:	dec    ecx
  40c1db:	lds    edi,FWORD PTR [edi]
  40c1dd:	pop    esi
  40c1de:	lds    eax,FWORD PTR [esi+ebp*4]
  40c1e1:	or     al,0x27
  40c1e3:	dec    esp
  40c1e4:	pop    ebp
  40c1e5:	add    al,0x9a
  40c1e7:	or     BYTE PTR [ecx],0x13
  40c1ea:	stos   BYTE PTR es:[edi],al
  40c1eb:	fdivr  DWORD PTR [eax+0x3d02d16b]
  40c1f1:	mov    esp,0x1caf5984
  40c1f6:	ret    0x1835
  40c1f9:	cmp    esi,ebp
  40c1fb:	stos   DWORD PTR es:[edi],eax
  40c1fc:	fcom   QWORD PTR [ebx+ebx*2]
  40c1ff:	dec    ecx
  40c200:	faddp  st(6),st
  40c202:	cwde   
  40c203:	and    DWORD PTR [ecx+0x5a],ebx
  40c206:	(bad)  
  40c207:	sbb    ah,bh
  40c209:	hlt    
  40c20a:	int3   
  40c20b:	int    0x84
  40c20d:	stos   DWORD PTR es:[edi],eax
  40c20e:	jmp    0x40c1c3
  40c210:	or     DWORD PTR [ebp+0xa4cd443],esi
  40c216:	add    al,0x41
  40c218:	pop    edx
  40c219:	inc    edi
  40c21a:	rcl    BYTE PTR [edi+0x3088fc62],0xbe
  40c221:	repnz lock push edi
  40c224:	dec    edi
  40c225:	mov    WORD PTR [esi+eax*4-0x6c],gs
  40c229:	push   es
  40c22a:	mov    ds:0x144c4538,eax
  40c22f:	or     dl,dh
  40c231:	ret    
  40c232:	jne    0x40c220
  40c234:	or     esi,0x4c2cb964
  40c23a:	push   eax
  40c23b:	aas    
  40c23c:	cmc    
  40c23d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c23e:	(bad)  
  40c23f:	and    al,BYTE PTR [edi-0x7b5d6f48]
  40c245:	xchg   DWORD PTR [edx-0x2a700010],ebx
  40c24b:	in     al,dx
  40c24c:	push   0xc6bde9ff
  40c251:	sbb    edx,DWORD PTR [ebp-0x40]
  40c254:	vpmuludq xmm2,xmm1,XMMWORD PTR ds:0xf8f9d4f0
  40c25c:	lds    ecx,FWORD PTR [esi+0x0]
  40c25f:	mov    esi,0xa61ab5b3
  40c264:	and    al,BYTE PTR [esi]
  40c266:	call   0xa7c1:0xbda5376f
  40c26d:	pushf  
  40c26e:	xchg   ecx,eax
  40c26f:	mov    ebp,0x2d7a097b
  40c274:	add    esp,DWORD PTR [edx]
  40c276:	mov    WORD PTR [ecx+ecx*2+0x656cc38d],gs
  40c27d:	lods   al,BYTE PTR ds:[esi]
  40c27e:	mov    ds:0x729abbf3,al
  40c283:	mov    eax,0x5edf4679
  40c288:	sub    DWORD PTR [ebx+0x947c44f],0xffffffc3
  40c28f:	ret    0xd814
  40c292:	xor    eax,0xfbe9d502
  40c297:	(bad)  
  40c298:	fcom   DWORD PTR [eax-0x17703ec]
  40c29e:	cmc    
  40c29f:	jmp    0x493f:0xacbd8ba
  40c2a6:	(bad)  
  40c2a7:	loopne 0x40c2c1
  40c2a9:	in     al,dx
  40c2aa:	clc    
  40c2ab:	pop    esi
  40c2ac:	dec    ebx
  40c2ad:	pop    ebx
  40c2ae:	scas   eax,DWORD PTR es:[edi]
  40c2af:	cmp    DWORD PTR [eax+edi*4],0x3e
  40c2b3:	leave  
  40c2b4:	mov    DWORD PTR [eax-0x7498df60],0x338f6bed
  40c2be:	or     eax,0x51cfc17c
  40c2c3:	lock sbb DWORD PTR [esi+0x6],ecx
  40c2c7:	sbb    eax,0x76f39bf1
  40c2cc:	jg     0x40c319
  40c2ce:	adc    al,0x1b
  40c2d0:	xor    eax,DWORD PTR [esi]
  40c2d2:	push   0xc590028a
  40c2d7:	sti    
  40c2d8:	push   edi
  40c2d9:	data16 jo 0x40c2b2
  40c2dc:	std    
  40c2dd:	sbb    ecx,DWORD PTR [edx-0x20]
  40c2e0:	pop    eax
  40c2e1:	jmp    0xdd7d:0xa3afd231
  40c2e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2e9:	(bad)  
  40c2ea:	pop    ecx
  40c2eb:	jmp    DWORD PTR [eax-0x66]
  40c2ee:	cmp    al,0x3c
  40c2f0:	pop    ebx
  40c2f1:	cmp    al,0x13
  40c2f3:	cmp    DWORD PTR [eax-0x694ca11d],0x1f39bf9a
  40c2fd:	mov    ds:0xc85edd4d,eax
  40c302:	int3   
  40c303:	push   ebp
  40c304:	cmp    DWORD PTR [edi-0x5],esp
  40c307:	ja     0x40c34c
  40c309:	add    ebx,edi
  40c30b:	sub    al,0x32
  40c30d:	loopne 0x40c34e
  40c30f:	mov    bl,0xda
  40c311:	xor    esi,DWORD PTR [ebx-0x2a]
  40c314:	sbb    dh,BYTE PTR [edx+0x79]
  40c317:	ret    
  40c318:	loop   0x40c2b5
  40c31a:	ja     0x40c2a4
  40c31c:	inc    eax
  40c31d:	jecxz  0x40c2fc
  40c31f:	dec    ebx
  40c320:	push   0xffffffde
  40c322:	mov    eax,0x404a367c
  40c327:	loop   0x40c2b6
  40c329:	aad    0x43
  40c32b:	pushf  
  40c32c:	mov    al,ds:0x109c319a
  40c331:	retf   0x9d7
  40c334:	sahf   
  40c335:	retf   
  40c336:	mov    DWORD PTR [esi+0x48],esp
  40c339:	cmp    eax,0xb5649850
  40c33e:	mov    eax,ds:0x79b1bcb0
  40c343:	xchg   BYTE PTR [edi],bl
  40c345:	pusha  
  40c346:	adc    al,BYTE PTR [ebx+ebx*2-0x1e]
  40c34a:	aaa    
  40c34b:	into   
  40c34c:	cmp    DWORD PTR [eax+0x3b],ebp
  40c34f:	xor    al,ch
  40c351:	jp     0x40c397
  40c353:	mul    DWORD PTR [eax]
  40c355:	aaa    
  40c356:	ret    0xeda8
  40c359:	int    0xb6
  40c35b:	mov    dh,BYTE PTR [esi-0x53]
  40c35e:	sar    BYTE PTR [eax],0xad
  40c361:	loopne 0x40c3b9
  40c363:	in     al,dx
  40c364:	push   ds
  40c365:	pop    ss
  40c366:	retf   
  40c367:	(bad)  
  40c368:	test   BYTE PTR [ecx-0x20],0x84
  40c36c:	out    0xe,eax
  40c36e:	adc    eax,0x97a98c21
  40c373:	ds xchg edx,eax
  40c375:	fpatan 
  40c377:	rcl    DWORD PTR [eax+0x1e],0x85
  40c37b:	out    0xaa,eax
  40c37d:	test   dh,0x1
  40c380:	xchg   esi,eax
  40c381:	loopne 0x40c32a
  40c383:	rol    BYTE PTR [esi+0x6d],cl
  40c386:	xchg   BYTE PTR [ecx],bh
  40c388:	and    BYTE PTR [eax-0x7fa44a97],dl
  40c38e:	loope  0x40c392
  40c390:	in     eax,dx
  40c391:	lods   al,BYTE PTR ds:[esi]
  40c392:	dec    edx
  40c393:	or     al,0x9
  40c395:	push   ebx
  40c396:	fs inc esi
  40c398:	(bad)  
  40c39a:	ret    0xe763
  40c39d:	pop    esi
  40c39e:	xchg   BYTE PTR [esi-0x18],bl
  40c3a1:	arpl   WORD PTR ds:[edi+0xe],di
  40c3a5:	call   0x37d8fd76
  40c3aa:	ror    DWORD PTR [edx+0x4f788eac],1
  40c3b0:	xor    BYTE PTR [edi+0x6f],bh
  40c3b3:	cmp    DWORD PTR [ecx-0x7738eac7],edx
  40c3b9:	mul    DWORD PTR [edi+0x170b147a]
  40c3bf:	enter  0xd141,0xb1
  40c3c3:	mov    ecx,ebx
  40c3c5:	and    bh,bl
  40c3c7:	push   edi
  40c3c8:	or     al,0xbe
  40c3ca:	cmp    BYTE PTR [ebx-0x406ded3e],bl
  40c3d0:	add    esp,DWORD PTR [ecx]
  40c3d2:	imul   edi,DWORD PTR [eax],0x49
  40c3d5:	loop   0x40c438
  40c3d7:	dec    ebx
  40c3d8:	xor    bh,bh
  40c3da:	les    ebx,FWORD PTR [ebp+0x37]
  40c3dd:	in     eax,0xcf
  40c3df:	cwde   
  40c3e0:	imul   esi,DWORD PTR [eax+ecx*2+0x3b],0x1c
  40c3e5:	sub    BYTE PTR [eax+0x41f6c1d],ah
  40c3eb:	jp     0x40c45c
  40c3ed:	and    edx,edi
  40c3ef:	je     0x40c39a
  40c3f1:	ins    DWORD PTR es:[edi],dx
  40c3f2:	imul   eax,DWORD PTR [ebx+edi*1+0x4180e73c],0xc1349655
  40c3fd:	and    DWORD PTR [edx+0x40],esi
  40c400:	jnp    0x40c445
  40c402:	pop    ebx
  40c403:	je     0x40c409
  40c405:	dec    esp
  40c406:	jae    0x40c445
  40c408:	sahf   
  40c409:	nop
  40c40a:	jne    0x40c462
  40c40c:	pop    esp
  40c40d:	ins    BYTE PTR es:[edi],dx
  40c40e:	dec    edi
  40c40f:	jecxz  0x40c3a5
  40c411:	sar    BYTE PTR [edx],cl
  40c413:	xor    dh,BYTE PTR [ebp+0x2247c0bf]
  40c419:	adc    esp,edx
  40c41b:	mov    ah,0xb9
  40c41d:	add    eax,0xcc54b285
  40c422:	sbb    bh,cl
  40c424:	arpl   WORD PTR [edi],si
  40c426:	xchg   BYTE PTR [ecx-0x2c],ah
  40c429:	push   0xbe82454f
  40c42e:	pop    ecx
  40c42f:	mov    al,ds:0xaad4ebc4
  40c434:	in     eax,dx
  40c435:	nop
  40c436:	aas    
  40c437:	or     eax,0x44168c7e
  40c43c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c43d:	gs iret 
  40c43f:	mov    ebx,0xb92e777a
  40c444:	hlt    
  40c445:	out    0x73,eax
  40c447:	sbb    DWORD PTR [ebx],edx
  40c449:	adc    eax,0xfaf61c4d
  40c44e:	ret    
  40c44f:	clc    
  40c450:	outs   dx,DWORD PTR ds:[esi]
  40c451:	push   ss
  40c452:	jmp    0xed19:0x7b3149e4
  40c459:	in     eax,dx
  40c45a:	jb     0x40c498
  40c45c:	dec    ecx
  40c45d:	ficomp WORD PTR [esi+0x4340f0e3]
  40c463:	cmc    
  40c464:	sbb    eax,0x20f3de28
  40c469:	lea    esi,[ecx-0x6fb22201]
  40c46f:	mov    edi,0xc9bd9e33
  40c474:	(bad)  
  40c475:	mov    dh,0x65
  40c477:	dec    esp
  40c478:	pop    es
  40c479:	out    0x8f,eax
  40c47b:	add    cl,BYTE PTR [esi-0x13]
  40c47e:	fwait
  40c47f:	out    dx,al
  40c480:	(bad)  
  40c481:	cmp    ebx,DWORD PTR [ecx-0x8]
  40c484:	sahf   
  40c485:	mov    eax,0xdab21fc7
  40c48a:	js     0x40c48a
  40c48c:	fmul   DWORD PTR [esp+ebx*2-0x3f]
  40c490:	leave  
  40c491:	jmp    0xe814809e
  40c496:	ror    BYTE PTR [edi+0x29],1
  40c499:	mov    edx,0xe79d6791
  40c49e:	and    DWORD PTR [ecx],0x2f13602f
  40c4a4:	ja     0x40c44c
  40c4a6:	mov    al,ds:0xbf1cc973
  40c4ab:	out    dx,al
  40c4ac:	lea    ebp,[ebp-0x26dd2af4]
  40c4b2:	enter  0xd735,0xb
  40c4b6:	sbb    edi,DWORD PTR [ebx+0x7d27f937]
  40c4bc:	clc    
  40c4bd:	or     DWORD PTR [eax+0x793fe039],edx
  40c4c3:	xchg   esp,eax
  40c4c4:	pop    eax
  40c4c5:	fmul   QWORD PTR [eax]
  40c4c7:	call   0x30c1:0x554e89b
  40c4ce:	les    ebx,FWORD PTR [eax-0x5dd0e4d8]
  40c4d4:	push   0xffffffee
  40c4d6:	jl     0x40c534
  40c4d8:	loop   0x40c4e3
  40c4da:	lahf   
  40c4db:	add    esp,ebp
  40c4dd:	sub    BYTE PTR [eax],dl
  40c4df:	sar    BYTE PTR [edi-0x62aff88],cl
  40c4e5:	xor    DWORD PTR [ebx+0x4d],0x47fcba9e
  40c4ec:	imul   edx,DWORD PTR [edi],0xd30b344d
  40c4f2:	fisub  WORD PTR [ecx]
  40c4f4:	ja     0x40c55a
  40c4f6:	push   ecx
  40c4f7:	nop
  40c4f8:	into   
  40c4f9:	dec    edi
  40c4fa:	loopne 0x40c497
  40c4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4fd:	aam    0x7a
  40c4ff:	mov    ch,0x1d
  40c501:	sahf   
  40c502:	xor    al,0x5
  40c504:	dec    BYTE PTR [ebx]
  40c506:	sbb    eax,0xdfa7c2fc
  40c50b:	nop
  40c50c:	add    DWORD PTR [edi],ebx
  40c50e:	loopne 0x40c53d
  40c510:	leave  
  40c511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c512:	dec    ecx
  40c513:	and    DWORD PTR ds:0x7b90e224,edx
  40c519:	call   0x63ea:0x17df30d6
  40c520:	fcmovnu st,st(7)
  40c522:	aad    0xa9
  40c524:	aas    
  40c525:	mov    ds:0x5709a0e6,eax
  40c52a:	fprem  
  40c52c:	int    0x86
  40c52e:	mov    eax,0xeab68c5f
  40c533:	inc    ebx
  40c534:	jmp    0x40c4bb
  40c536:	inc    ebp
  40c537:	lock ja 0x40c4fb
  40c53a:	into   
  40c53b:	test   ecx,ebx
  40c53d:	mov    bl,0xcd
  40c53f:	jo     0x40c4d7
  40c541:	push   ds
  40c542:	jo     0x40c536
  40c544:	push   esi
  40c545:	pop    ecx
  40c546:	out    0x14,eax
  40c548:	scas   al,BYTE PTR es:[edi]
  40c549:	jecxz  0x40c54a
  40c54b:	jmp    0x4a8:0x3e8c024c
  40c552:	inc    ecx
  40c553:	xchg   ebp,edi
  40c555:	retf   0xbd5
  40c558:	dec    edi
  40c559:	pop    ebp
  40c55a:	imul   esp,DWORD PTR [ecx+0x76],0xd97eb8d8
  40c561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c562:	shr    BYTE PTR [esi+ecx*1+0x29c3be81],1
  40c569:	arpl   WORD PTR [ebx+esi*2+0x32],bp
  40c56d:	lock mov ah,0x65
  40c570:	scas   al,BYTE PTR es:[edi]
  40c571:	stos   DWORD PTR es:[edi],eax
  40c572:	jo     0x40c53c
  40c574:	test   BYTE PTR [eax-0x1bafc8a6],0x88
  40c57b:	out    dx,al
  40c57c:	daa    
  40c57d:	cli    
  40c57e:	imul   ebx,DWORD PTR [edi+eiz*4],0x10fbf051
  40c585:	xchg   cl,al
  40c587:	mov    dl,0xc8
  40c589:	mov    dl,0x35
  40c58b:	xor    edx,DWORD PTR ds:0x75e3b202
  40c591:	pusha  
  40c592:	and    ebx,edx
  40c594:	jbe    0x40c542
  40c596:	pop    edx
  40c597:	jb     0x40c5eb
  40c599:	sbb    BYTE PTR [edi],0xae
  40c59c:	inc    edx
  40c59d:	pop    ss
  40c59e:	popf   
  40c59f:	aaa    
  40c5a0:	sbb    al,BYTE PTR [ebx-0x33]
  40c5a3:	das    
  40c5a4:	cmp    al,0xb9
  40c5a6:	enter  0x758c,0x37
  40c5aa:	(bad)  
  40c5ab:	cmp    eax,0x443d5755
  40c5b0:	imul   edi,DWORD PTR [ecx+0x6],0x17
  40c5b4:	sub    BYTE PTR [esp+eiz*4-0x7e],cl
  40c5b8:	repnz cdq 
  40c5ba:	push   es
  40c5bb:	jl     0x40c5f8
  40c5bd:	dec    esi
  40c5be:	xchg   ebx,eax
  40c5bf:	inc    ecx
  40c5c0:	pushf  
  40c5c1:	xor    DWORD PTR [eax-0xcdabbf8],0x3
  40c5c8:	cmp    esp,ecx
  40c5ca:	out    0x90,eax
  40c5cc:	inc    esp
  40c5cd:	div    DWORD PTR [ebp+0x35]
  40c5d0:	pop    ebp
  40c5d1:	pop    edi
  40c5d2:	jge    0x40c5cf
  40c5d4:	mov    dh,0xd5
  40c5d6:	fs (bad) 
  40c5d8:	push   ebp
  40c5d9:	fdiv   QWORD PTR [eax+eiz*8]
  40c5dc:	rcr    DWORD PTR [ecx+0x6ad8dea2],0x23
  40c5e3:	sub    BYTE PTR [edi-0x48aa335],0x8b
  40c5ea:	mov    BYTE PTR [edi+0x74],dl
  40c5ed:	jno    0x40c611
  40c5ef:	hlt    
  40c5f0:	mov    ds:0x6b28d096,al
  40c5f5:	js     0x40c61b
  40c5f7:	mov    BYTE PTR [ebp-0x5ecde710],cl
  40c5fd:	xor    ebp,DWORD PTR [esi-0x4ef5c2ed]
  40c603:	rol    DWORD PTR [esi+eiz*8-0x62a80e4],0x8
  40c60b:	or     DWORD PTR [ecx+0x42],ebx
  40c60e:	cld    
  40c60f:	in     eax,dx
  40c610:	mov    esp,0xe11317db
  40c615:	inc    ebx
  40c616:	dec    eax
  40c617:	add    ebx,DWORD PTR [eax-0x144248a4]
  40c61d:	das    
  40c61e:	ds pop esi
  40c620:	mov    edx,DWORD PTR [ebp+0x5cbf7db0]
  40c626:	push   esp
  40c627:	dec    esp
  40c628:	or     al,0x17
  40c62a:	ret    0x4ad7
  40c62d:	dec    ebx
  40c62e:	add    eax,0xd18a7964
  40c633:	mov    ch,BYTE PTR [edi]
  40c635:	and    al,0xd4
  40c637:	shr    ebp,0x8c
  40c63a:	retf   0xe989
  40c63d:	out    dx,eax
  40c63e:	outs   dx,DWORD PTR ds:[esi]
  40c63f:	lds    esp,FWORD PTR [eax+edi*8-0x2b]
  40c643:	mov    DWORD PTR [esi],0x8b53497f
  40c649:	mov    esi,0xf87e86fe
  40c64e:	pushf  
  40c64f:	or     BYTE PTR [edi+eiz*1-0x1],ah
  40c653:	iret   
  40c654:	retf   
  40c655:	jmp    0x646feb7a
  40c65a:	clc    
  40c65b:	mov    esi,0x2ccc91cb
  40c660:	popa   
  40c661:	test   BYTE PTR [eax],bl
  40c663:	mov    ds,WORD PTR [ebx-0x6e]
  40c666:	cmc    
  40c667:	sub    BYTE PTR [ebp+eax*8+0x41],0x5e
  40c66c:	or     ebx,DWORD PTR [eax+0x28]
  40c66f:	mov    bh,0x9f
  40c671:	and    DWORD PTR [ecx+ebx*2+0x65],ebx
  40c675:	or     ebx,DWORD PTR ds:0x77bfa56d
  40c67b:	mov    eax,ds:0x93db2a96
  40c680:	sahf   
  40c681:	icebp  
  40c682:	mov    ds:0xf3b6e21b,eax
  40c687:	or     DWORD PTR [ebx+0x3b180b4a],0x952ec0e3
  40c691:	(bad)  
  40c692:	or     eax,0x5db7834b
  40c697:	sub    al,0xfd
  40c699:	inc    ebp
  40c69a:	fisttp DWORD PTR [edi]
  40c69c:	dec    esp
  40c69d:	cs add ecx,edi
  40c6a0:	pop    ss
  40c6a1:	adc    DWORD PTR [ebx-0x67],esi
  40c6a4:	gs aaa 
  40c6a6:	retf   0xa0ef
  40c6a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6aa:	int3   
  40c6ab:	and    esi,eax
  40c6ad:	pop    es
  40c6ae:	mov    eax,ds:0x174b7e57
  40c6b3:	scas   al,BYTE PTR es:[edi]
  40c6b4:	jae    0x40c6af
  40c6b6:	enter  0xda77,0x9a
  40c6ba:	es inc ebp
  40c6bc:	mov    ah,0x65
  40c6be:	scas   al,BYTE PTR es:[edi]
  40c6bf:	outs   dx,DWORD PTR ds:[esi]
  40c6c0:	jne    0x40c6b4
  40c6c2:	lahf   
  40c6c3:	adc    eax,0xf1847000
  40c6c8:	xchg   ecx,eax
  40c6c9:	adc    DWORD PTR [eax],esp
  40c6cb:	mov    bl,0x32
  40c6cd:	mov    WORD PTR [edi-0x1088fabf],fs
  40c6d3:	in     eax,dx
  40c6d4:	and    edx,DWORD PTR [esi-0x7de63e4c]
  40c6da:	adc    BYTE PTR [edi],0x39
  40c6dd:	mov    dh,0x71
  40c6df:	repz and edi,ebp
  40c6e2:	data16 test bl,bl
  40c6e5:	and    DWORD PTR [eax-0x167f7326],esi
  40c6eb:	in     eax,0xdd
  40c6ed:	rol    BYTE PTR [eax+0x15cb8794],1
  40c6f3:	adc    esi,DWORD PTR [eax+edx*1+0xf]
  40c6f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6f8:	cmp    DWORD PTR [ebp+0x348d1a9b],ebx
  40c6fe:	popa   
  40c6ff:	mov    edx,DWORD PTR [edi+0x3]
  40c702:	outs   dx,BYTE PTR ds:[esi]
  40c703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c704:	pop    edx
  40c705:	imul   edi,DWORD PTR [ebp+0x77e493d9],0xa6b1586b
  40c70f:	(bad)  
  40c710:	cli    
  40c711:	dec    edx
  40c712:	xchg   edi,eax
  40c713:	pushf  
  40c714:	adc    dh,BYTE PTR [edx-0x63d7e32a]
  40c71a:	add    dh,BYTE PTR [ecx+esi*1+0x76ec8299]
  40c721:	or     ecx,edx
  40c723:	cs ror DWORD PTR gs:[edi],1
  40c727:	mov    eax,0x5564062d
  40c72c:	mov    al,ds:0x593602a1
  40c731:	(bad)  
  40c732:	jo     0x40c79e
  40c734:	sub    bh,ch
  40c736:	aam    0xef
  40c738:	and    bh,bh
  40c73a:	mov    ch,0x8b
  40c73c:	out    0x72,al
  40c73e:	sbb    edx,esi
  40c740:	cwde   
  40c741:	sbb    eax,0x64c1fc4f
  40c746:	or     al,0x6f
  40c748:	scas   eax,DWORD PTR es:[edi]
  40c749:	dec    edi
  40c74a:	sbb    BYTE PTR [edi+0x78],0x19
  40c74e:	cmp    eax,0x5b639272
  40c753:	or     eax,0x51c22574
  40c758:	xor    dh,BYTE PTR [ecx-0x95be9e6]
  40c75e:	add    al,0xac
  40c760:	fsubp  st(4),st
  40c762:	inc    edx
  40c763:	jbe    0x40c7bf
  40c765:	rol    DWORD PTR [esi-0x3ae325fd],cl
  40c76b:	mov    edx,esp
  40c76d:	gs add al,0xcb
  40c770:	dec    ebx
  40c771:	fdiv   QWORD PTR [edx+eiz*2+0x4a]
  40c775:	mov    ds,WORD PTR [esi+0x26]
  40c778:	jecxz  0x40c7b2
  40c77a:	push   es
  40c77b:	lahf   
  40c77c:	les    esi,FWORD PTR [edi+0x2f]
  40c77f:	dec    BYTE PTR [edx]
  40c781:	stos   BYTE PTR es:[edi],al
  40c782:	rcl    DWORD PTR [ecx-0x50],0xe2
  40c786:	popf   
  40c787:	adc    cl,dh
  40c789:	push   esi
  40c78a:	fld    DWORD PTR [ecx-0x4f04cc82]
  40c790:	clc    
  40c791:	es jae 0x40c793
  40c794:	bound  ecx,QWORD PTR [edx-0x56efe8b7]
  40c79a:	outs   dx,BYTE PTR ds:[esi]
  40c79b:	sub    ah,dl
  40c79d:	mov    bl,0x13
  40c79f:	pop    ebp
  40c7a0:	(bad)  
  40c7a1:	cli    
  40c7a2:	frstor [esi]
  40c7a4:	inc    ebx
  40c7a5:	les    ebp,FWORD PTR [edi-0x34]
  40c7a8:	dec    ebp
  40c7a9:	jno    0x40c818
  40c7ab:	mov    edi,0x4493cbea
  40c7b0:	(bad)  
  40c7b2:	inc    edx
  40c7b3:	sub    ch,al
  40c7b5:	imul   ebp,DWORD PTR [esi+0x24a7a679],0x1d
  40c7bc:	add    DWORD PTR [edi+ebp*4],eax
  40c7bf:	jmp    0x40c788
  40c7c1:	dec    esp
  40c7c2:	retf   
  40c7c3:	pop    edx
  40c7c4:	addr16 and eax,0x2b922d53
  40c7ca:	popf   
  40c7cb:	outs   dx,DWORD PTR ds:[esi]
  40c7cc:	outs   dx,BYTE PTR ds:[esi]
  40c7cd:	and    al,0x3d
  40c7cf:	test   al,0xa
  40c7d1:	inc    ebp
  40c7d2:	mov    dl,0xb9
  40c7d4:	mov    al,0xd9
  40c7d6:	push   esi
  40c7d7:	and    eax,0xfa276b51
  40c7dc:	mov    ds:0xeb3a2cf4,al
  40c7e1:	or     eax,0x3dda0dd4
  40c7e6:	test   DWORD PTR [di],esi
  40c7e9:	inc    esi
  40c7ea:	jnp    0x40c839
  40c7ec:	xor    dl,BYTE PTR [ebx]
  40c7ee:	scas   eax,DWORD PTR es:[edi]
  40c7ef:	and    DWORD PTR [edi+0x6c],ecx
  40c7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7f3:	pop    esi
  40c7f5:	or     BYTE PTR [ecx-0x64],al
  40c7f8:	xchg   ebx,eax
  40c7f9:	imul   edi,DWORD PTR ss:[ecx],0xfffffffe
  40c7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7fe:	cwde   
  40c7ff:	push   esp
  40c800:	fisub  WORD PTR [edx+0x45]
  40c803:	dec    esp
  40c804:	into   
  40c805:	cli    
  40c806:	imul   ebx,eax,0x4e860908
  40c80c:	xchg   esp,eax
  40c80d:	in     al,dx
  40c80e:	mov    gs,WORD PTR [ecx]
  40c810:	or     ah,0xa4
  40c813:	leave  
  40c814:	fimul  DWORD PTR [esi]
  40c816:	xchg   ebp,eax
  40c817:	adc    BYTE PTR [ecx],dl
  40c819:	jl     0x40c7e8
  40c81b:	mov    ah,0xf4
  40c81d:	jmp    0x59a8:0x6bf3fb5
  40c824:	mov    ebp,0x5f50aac5
  40c829:	rcr    edx,0x60
  40c82c:	(bad)  
  40c82d:	push   eax
  40c82e:	sbb    bl,BYTE PTR [ecx-0x30fc67bd]
  40c834:	scas   eax,DWORD PTR es:[edi]
  40c835:	sbb    al,0xcf
  40c837:	mov    ebp,0x79a2a7f
  40c83c:	inc    edx
  40c83d:	ficomp WORD PTR [edi]
  40c83f:	inc    edx
  40c840:	inc    ebx
  40c841:	inc    esi
  40c842:	jg     0x40c86c
  40c844:	nop
  40c845:	jle    0x40c829
  40c847:	inc    bx
  40c849:	sbb    BYTE PTR [ebx],bh
  40c84b:	mov    bh,0x6c
  40c84d:	ret    
  40c84e:	retf   0xa30d
  40c851:	push   es
  40c852:	retf   
  40c853:	scas   eax,DWORD PTR es:[edi]
  40c854:	out    dx,eax
  40c855:	add    edx,ebx
  40c857:	cmp    dh,BYTE PTR [esi]
  40c859:	fimul  WORD PTR [eax+esi*2-0x14a455ff]
  40c860:	cmp    al,0xb7
  40c862:	xchg   ebx,eax
  40c863:	mov    cl,0xb1
  40c865:	lock arpl WORD PTR [edi+0x6918384b],sp
  40c86c:	jno    0x40c84b
  40c86e:	outs   dx,DWORD PTR ds:[esi]
  40c86f:	adc    al,0x4b
  40c871:	inc    ecx
  40c872:	push   ebp
  40c873:	in     al,0x73
  40c875:	imul   ebp,DWORD PTR [edi+0x24],0xffffffee
  40c879:	and    ecx,DWORD PTR [ebp-0x1e]
  40c87c:	cmp    dl,0x66
  40c87f:	mov    ds:0xab4fadac,al
  40c884:	shl    dl,0xe8
  40c887:	xor    BYTE PTR [edi+0x4e],0x6c
  40c88b:	stos   DWORD PTR es:[edi],eax
  40c88c:	fist   DWORD PTR [edi-0x63]
  40c88f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c890:	cwde   
  40c891:	sbb    DWORD PTR [edi],0x47
  40c894:	mov    edi,0x73373e49
  40c899:	mov    bl,0x86
  40c89b:	jae    0x40c835
  40c89d:	fisub  WORD PTR [esi]
  40c89f:	lods   eax,DWORD PTR ds:[esi]
  40c8a0:	lea    ecx,[edi+0x4b8cd774]
  40c8a6:	fadd   DWORD PTR [ecx-0x23]
  40c8a9:	cmp    eax,0x7e639e7d
  40c8ae:	push   edi
  40c8af:	mov    WORD PTR [ecx+edx*2],ds
  40c8b2:	pop    edx
  40c8b3:	mov    ?,WORD PTR [bx]
  40c8b6:	dec    ebp
  40c8b7:	jp     0x40c932
  40c8b9:	inc    esp
  40c8ba:	mov    cl,0xef
  40c8bc:	loop   0x40c871
  40c8be:	or     esp,edi
  40c8c0:	inc    ecx
  40c8c1:	in     al,dx
  40c8c2:	mov    BYTE PTR [edi+0x23a7f93f],0xec
  40c8c9:	ja     0x40c84e
  40c8cb:	out    0x1,eax
  40c8cd:	gs push 0xffffffac
  40c8d0:	xchg   ebp,eax
  40c8d1:	ret    
  40c8d2:	gs xor al,0x8f
  40c8d5:	push   ecx
  40c8d6:	sbb    al,0x8f
  40c8d8:	pop    esp
  40c8d9:	xchg   esi,eax
  40c8da:	cdq    
  40c8db:	inc    eax
  40c8dc:	imul   edi,esp,0xffffff8f
  40c8df:	test   DWORD PTR [ecx+eax*1+0x3a],edi
  40c8e3:	jmp    0x40c896
  40c8e5:	aaa    
  40c8e6:	sbb    esp,edi
  40c8e8:	jno    0x40c8c2
  40c8ea:	jle    0x40c89e
  40c8ec:	fisttp QWORD PTR [eax+0x5113c911]
  40c8f2:	push   esi
  40c8f3:	add    esi,esp
  40c8f5:	pop    ebx
  40c8f6:	jg     0x40c968
  40c8f8:	or     ecx,DWORD PTR [esp+ecx*2+0x6f]
  40c8fc:	inc    ecx
  40c8fd:	dec    ecx
  40c8fe:	jno    0x40c8a2
  40c900:	daa    
  40c901:	rcl    DWORD PTR [bp+di+0x78],cl
  40c905:	inc    edx
  40c906:	sahf   
  40c907:	icebp  
  40c908:	lock test al,0xe6
  40c90b:	das    
  40c90c:	add    ah,BYTE PTR [ebx+0x61e1e419]
  40c912:	ins    BYTE PTR es:[edi],dx
  40c913:	(bad)  
  40c914:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c916:	add    dh,BYTE PTR [ebp+0xf]
  40c919:	xchg   ebp,eax
  40c91a:	adc    eax,0xfc686433
  40c91f:	jmp    0x7f4c89be
  40c924:	gs jecxz 0x40c970
  40c927:	(bad)  
  40c928:	out    0x5b,al
  40c92a:	js     0x40c955
  40c92c:	adc    ebp,DWORD PTR [eax]
  40c92e:	dec    ebp
  40c92f:	lea    eax,[ebx+0x4929d7e7]
  40c935:	pop    es
  40c936:	mov    ebx,0xfccbe7cb
  40c93b:	jp     0x40c9a3
  40c93d:	lahf   
  40c93e:	fs icebp 
  40c940:	xor    ah,BYTE PTR [edx+0x6cf8f2fb]
  40c946:	shl    DWORD PTR [ecx+0x7],cl
  40c949:	stc    
  40c94a:	call   0x26d360f4
  40c94f:	aam    0xcc
  40c951:	ret    0x271b
  40c954:	(bad)  
  40c955:	sti    
  40c956:	sbb    ah,BYTE PTR [ebx]
  40c958:	out    0x1f,al
  40c95a:	inc    ecx
  40c95b:	out    0x65,al
  40c95d:	imul   ecx
  40c95f:	mov    ah,0x3a
  40c961:	push   ebp
  40c962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c963:	cdq    
  40c964:	dec    ecx
  40c965:	arpl   WORD PTR [ecx],si
  40c967:	xchg   DWORD PTR [ecx],ecx
  40c969:	mov    al,ds:0x17b7c91d
  40c96e:	(bad)  [ecx]
  40c970:	cmp    dl,BYTE PTR [ebx]
  40c972:	push   edi
  40c973:	out    dx,eax
  40c974:	nop
  40c975:	cmp    sp,0xe9e2
  40c97a:	sbb    bh,ah
  40c97c:	jge    0x40c916
  40c97e:	aam    0x4d
  40c980:	pop    ecx
  40c981:	or     edi,ebx
  40c983:	add    eax,0x66b546b1
  40c988:	or     eax,0xbfa3da04
  40c98d:	fnstenv [eax]
  40c98f:	adc    eax,0x5492a891
  40c994:	mov    edi,0x8f9cce4f
  40c999:	hlt    
  40c99a:	mov    esp,0x7780b9ef
  40c99f:	sub    al,0xa7
  40c9a1:	push   edi
  40c9a2:	sbb    al,0xa8
  40c9a4:	dec    BYTE PTR [esi-0xa6170bd]
  40c9aa:	xchg   esp,eax
  40c9ab:	arpl   WORD PTR [ebp-0x3e33d3da],sp
  40c9b1:	pop    ss
  40c9b2:	arpl   WORD PTR [edx],dx
  40c9b4:	adc    DWORD PTR [ebx+0x6f71e32f],eax
  40c9ba:	dec    ebp
  40c9bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9bc:	add    DWORD PTR [eax+edx*1],esp
  40c9bf:	pop    ss
  40c9c0:	ds dec ecx
  40c9c2:	mov    ebp,0x9d16d84c
  40c9c7:	mov    dh,0x20
  40c9c9:	hlt    
  40c9ca:	ins    BYTE PTR es:[edi],dx
  40c9cb:	mov    bh,0xc8
  40c9cd:	and    DWORD PTR [edx+0x70],ebx
  40c9d0:	mov    ebp,esi
  40c9d2:	jne    0x40c990
  40c9d4:	sti    
  40c9d5:	aaa    
  40c9d6:	fwait
  40c9d7:	xchg   ecx,eax
  40c9d8:	xor    bl,BYTE PTR [ebp+0xc4a4e44]
  40c9de:	xchg   ebx,eax
  40c9df:	stc    
  40c9e0:	sbb    DWORD PTR [ecx],esp
  40c9e2:	push   esp
  40c9e3:	mov    ds:0x270cf58b,al
  40c9e8:	in     eax,0x43
  40c9ea:	call   0x520b:0x28788194
  40c9f1:	sub    eax,0xdc15966a
  40c9f6:	mov    eax,ds:0x6ba10d0b
  40c9fb:	add    BYTE PTR [ebx+0x22d4fae5],dh
  40ca01:	mov    ch,0x8a
  40ca03:	std    
  40ca04:	mov    cl,0x51
  40ca06:	and    eax,0x1be10f73
  40ca0b:	leave  
  40ca0c:	inc    ebx
  40ca0d:	loop   0x40ca05
  40ca0f:	mov    esi,0x7dffd6b4
  40ca14:	mov    ebx,0xef05e12f
  40ca19:	icebp  
  40ca1a:	cmc    
  40ca1b:	xchg   ebx,eax
  40ca1c:	mov    dh,0x83
  40ca1e:	cs mov ch,0xad
  40ca21:	fwait
  40ca22:	mov    esp,0x5995b52
  40ca27:	jo     0x40ca59
  40ca29:	icebp  
  40ca2a:	(bad)  
  40ca2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca2c:	push   ebp
  40ca2d:	jo     0x40c9d4
  40ca2f:	mov    ?,WORD PTR [ecx]
  40ca31:	dec    ecx
  40ca32:	addr16 sub ebp,esp
  40ca35:	jecxz  0x40ca74
  40ca37:	shl    DWORD PTR [edi-0x4f8146d1],cl
  40ca3d:	push   ds
  40ca3e:	scas   al,BYTE PTR es:[edi]
  40ca3f:	or     DWORD PTR [esi],eax
  40ca41:	repnz mov ah,0xdb
  40ca44:	xor    ah,BYTE PTR [edx-0xc]
  40ca47:	in     al,dx
  40ca48:	inc    ebp
  40ca49:	clc    
  40ca4a:	dec    esp
  40ca4b:	mov    ds:0x8eb8a226,al
  40ca50:	cmp    esi,DWORD PTR [edx]
  40ca52:	call   0x651c7e92
  40ca57:	retf   0x3877
  40ca5a:	mov    ah,BYTE PTR [ebx]
  40ca5c:	mov    al,0x3d
  40ca5e:	jbe    0x40ca90
  40ca60:	cmp    eax,0x5beae58c
  40ca65:	cmp    al,0xb8
  40ca67:	ds jbe 0x40ca0b
  40ca6a:	sahf   
  40ca6b:	mov    ah,0x66
  40ca6d:	or     bl,dh
  40ca6f:	sub    DWORD PTR [edx-0x76],ebx
  40ca72:	cdq    
  40ca73:	inc    ebx
  40ca74:	xor    al,dl
  40ca76:	repz (bad) 
  40ca78:	(bad)  
  40ca7a:	pop    esp
  40ca7b:	xchg   ecx,eax
  40ca7c:	pop    ebx
  40ca7d:	call   0x41be20fe
  40ca82:	pop    ecx
  40ca83:	mov    esi,0x8f7e8863
  40ca88:	xor    al,0xbd
  40ca8a:	int3   
  40ca8b:	and    edi,DWORD PTR [esi-0xf]
  40ca8e:	dec    edx
  40ca8f:	cmp    BYTE PTR [esi],bh
  40ca91:	dec    ecx
  40ca92:	out    0xc,eax
  40ca94:	and    ebx,ebx
  40ca96:	lods   al,BYTE PTR ds:[esi]
  40ca97:	xchg   DWORD PTR [ecx+ebp*4],esp
  40ca9a:	test   al,0x24
  40ca9c:	fcomp  DWORD PTR [ebx]
  40ca9e:	fidiv  DWORD PTR [ebx+0x15]
  40caa1:	dec    esi
  40caa2:	xor    eax,0xd7097aef
  40caa7:	icebp  
  40caa8:	mov    es,WORD PTR [ebx]
  40caaa:	(bad)  
  40caab:	scas   al,BYTE PTR es:[edi]
  40caac:	popf   
  40caad:	jp     0x40cab3
  40caaf:	push   edi
  40cab0:	mov    bl,0xcf
  40cab2:	cmp    dl,BYTE PTR [edx-0x11891d62]
  40cab8:	add    esp,DWORD PTR [esp+edx*8+0x2e]
  40cabc:	cmp    al,0xf7
  40cabe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cabf:	sub    eax,0x76efddd
  40cac4:	sbb    esp,DWORD PTR [ecx+0xdafcc7]
  40caca:	lods   al,BYTE PTR ds:[si]
  40cacc:	jns    0x40cac8
  40cace:	dec    ecx
  40cacf:	push   esp
  40cad0:	pop    esi
  40cad1:	xor    eax,0x75f6f574
  40cad6:	adc    al,0x21
  40cad8:	inc    ebx
  40cad9:	mov    ebx,DWORD PTR [esi]
  40cadb:	add    eax,0xb6a2afba
  40cae0:	xor    edi,DWORD PTR [esp+esi*8+0x2f]
  40cae4:	stos   BYTE PTR es:[edi],al
  40cae5:	sbb    eax,0x1736216e
  40caea:	mov    edx,0xcce683c4
  40caef:	jl     0x40cb61
  40caf1:	and    esp,DWORD PTR [esi+eiz*2-0x19]
  40caf5:	mov    bh,0x38
  40caf7:	mov    ebx,0x876fa21c
  40cafc:	cwde   
  40cafd:	inc    ecx
  40cafe:	adc    ecx,DWORD PTR [ebx+0x5d]
  40cb01:	std    
  40cb02:	xchg   edx,eax
  40cb03:	(bad)  
  40cb04:	outs   dx,BYTE PTR ds:[esi]
  40cb05:	dec    edi
  40cb06:	or     BYTE PTR [ebx+0x474830d],0x26
  40cb0d:	mov    eax,0x59e201be
  40cb12:	sbb    bl,cl
  40cb14:	cmp    bh,cl
  40cb16:	pusha  
  40cb17:	sbb    al,0x37
  40cb19:	test   ebx,edi
  40cb1b:	dec    ecx
  40cb1c:	mov    al,ds:0x70c18bff
  40cb21:	and    eax,0x14218008
  40cb26:	sbb    esp,DWORD PTR [esi]
  40cb28:	(bad)  
  40cb29:	inc    ecx
  40cb2a:	imul   ecx,DWORD PTR [edx+ebx*1-0x47b73e98],0xf19a12ee
  40cb35:	loopne 0x40cb91
  40cb37:	aad    0x49
  40cb39:	xchg   esi,eax
  40cb3a:	int    0x2b
  40cb3c:	mov    dh,0xa6
  40cb3e:	call   0x5660a21e
  40cb43:	and    eax,0x69c2ee2e
  40cb48:	pushf  
  40cb49:	outs   dx,DWORD PTR ds:[esi]
  40cb4a:	iret   
  40cb4b:	sbb    BYTE PTR [edi+0x708cf282],cl
  40cb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb52:	push   ds
  40cb53:	sti    
  40cb54:	mov    dl,0x8
  40cb56:	sub    edx,DWORD PTR [edi-0x46]
  40cb59:	jle    0x40cb60
  40cb5b:	popa   
  40cb5c:	or     BYTE PTR [edx+0x70],ch
  40cb5f:	not    DWORD PTR [edi+0x55138646]
  40cb65:	mov    eax,ds:0xb62626cc
  40cb6a:	adc    al,0x68
  40cb6c:	cmp    DWORD PTR [edx+0x2c885cc9],esp
  40cb72:	in     eax,dx
  40cb73:	jo     0x40cbd6
  40cb75:	in     eax,dx
  40cb76:	ret    0x68ab
  40cb79:	mov    edx,0x2373b623
  40cb7e:	int3   
  40cb7f:	xchg   ebp,eax
  40cb80:	ds xchg edi,eax
  40cb82:	frstor [edx+0x72]
  40cb85:	out    dx,al
  40cb86:	adc    BYTE PTR [ebp+esi*8-0x42dbfb4f],bl
  40cb8d:	sbb    ch,cl
  40cb8f:	sbb    BYTE PTR [edx],0xf
  40cb92:	enter  0x4def,0xeb
  40cb96:	mov    edi,0x73100bb0
  40cb9b:	add    esp,DWORD PTR es:0x48548ace
  40cba2:	or     dh,cl
  40cba4:	daa    
  40cba5:	test   al,0x3a
  40cba7:	dec    esi
  40cba8:	sbb    dh,BYTE PTR ds:0x681a75ae
  40cbae:	or     DWORD PTR [esi+esi*1-0x3dcf8326],ebp
  40cbb5:	push   ss
  40cbb6:	inc    eax
  40cbb7:	in     eax,0xf9
  40cbb9:	(bad)  
  40cbba:	ins    DWORD PTR es:[edi],dx
  40cbbb:	outs   dx,DWORD PTR ds:[esi]
  40cbbc:	adc    esi,DWORD PTR [edi]
  40cbbe:	xor    ebp,DWORD PTR [eax+0x58182d86]
  40cbc4:	adc    edx,DWORD PTR [edx-0x3c]
  40cbc7:	loope  0x40cc28
  40cbc9:	lock add BYTE PTR ds:0xb522aa6e,dl
  40cbd0:	xchg   esi,eax
  40cbd1:	jno    0x40cc10
  40cbd3:	or     cl,BYTE PTR [ebp+eiz*2-0x45618d1c]
  40cbda:	push   ecx
  40cbdb:	loope  0x40cbb5
  40cbdd:	enter  0xd169,0x7f
  40cbe1:	stos   DWORD PTR es:[edi],eax
  40cbe2:	jo     0x40cc0a
  40cbe4:	rcl    ch,0xdb
  40cbe7:	mov    ds:0x2b30272e,eax
  40cbec:	es push ecx
  40cbee:	(bad)  
  40cbf0:	dec    edx
  40cbf1:	scas   eax,DWORD PTR es:[edi]
  40cbf2:	mov    dl,0x31
  40cbf4:	xor    dl,BYTE PTR [esi-0x44]
  40cbf7:	push   es
  40cbf8:	out    dx,eax
  40cbf9:	mov    dh,0xd5
  40cbfb:	dec    ebx
  40cbfc:	fstp   st(5)
  40cbfe:	mov    dh,0xa7
  40cc00:	imul   sp,WORD PTR [edx+esi*4-0xe8acef],0xb1fe
  40cc0a:	xor    DWORD PTR [edi-0x11],edx
  40cc0d:	(bad)  
  40cc0e:	div    BYTE PTR [ecx]
  40cc10:	and    DWORD PTR [edi-0x21408a22],edx
  40cc16:	and    al,0xe0
  40cc18:	fcomp  DWORD PTR [ebx]
  40cc1a:	rcl    ebx,1
  40cc1c:	retf   
  40cc1d:	adc    eax,DWORD PTR [ebx]
  40cc1f:	xchg   edx,eax
  40cc20:	pop    ss
  40cc21:	sub    BYTE PTR [edx],cl
  40cc23:	jl     0x40cbd7
  40cc25:	cmp    eax,0x3a6374fa
  40cc2a:	cli    
  40cc2b:	add    al,0xe2
  40cc2d:	sub    eax,DWORD PTR [ebx+edx*8-0x63a5a4b2]
  40cc34:	gs sbb al,0x58
  40cc37:	pop    ecx
  40cc38:	mov    al,0x59
  40cc3a:	and    bh,bl
  40cc3c:	fsubr  QWORD PTR [ebp-0x4a21ad35]
  40cc42:	add    BYTE PTR ds:[edx+ebp*4+0x74],al
  40cc47:	push   0x1
  40cc49:	je     0x40cc4e
  40cc4b:	mov    esp,0x736d14ac
  40cc50:	arpl   WORD PTR [esi-0x400823b3],sp
  40cc56:	push   ss
  40cc57:	sahf   
  40cc58:	or     edx,esp
  40cc5a:	retf   0x6fd3
  40cc5d:	loop   0x40cc50
  40cc5f:	push   ss
  40cc60:	dec    esp
  40cc61:	push   edi
  40cc62:	inc    esp
  40cc63:	rcr    cl,cl
  40cc65:	clc    
  40cc66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc67:	pop    ebx
  40cc68:	repnz adc DWORD PTR [edx],esp
  40cc6b:	push   cs
  40cc6c:	jecxz  0x40cc9e
  40cc6e:	ins    DWORD PTR es:[edi],dx
  40cc6f:	xchg   BYTE PTR [ecx+ebp*2+0x1e],al
  40cc73:	fmul   QWORD PTR [eax]
  40cc75:	icebp  
  40cc76:	fild   DWORD PTR [edx+0xe]
  40cc79:	pop    edx
  40cc7a:	cli    
  40cc7b:	scas   al,BYTE PTR es:[edi]
  40cc7c:	sti    
  40cc7d:	(bad)
  40cc82:	test   eax,0xe573e751
  40cc87:	sbb    bl,BYTE PTR [ebx+0x73]
  40cc8a:	mov    edx,0xcdf787c9
  40cc8f:	test   al,0x21
  40cc91:	or     ebx,DWORD PTR [edi-0x4f0d2225]
  40cc97:	mov    ch,BYTE PTR [ecx-0x174a31b3]
  40cc9d:	mov    eax,DWORD PTR [ecx+0x6d911107]
  40cca3:	int3   
  40cca4:	rol    DWORD PTR [ecx],1
  40cca6:	dec    ecx
  40cca7:	sbb    esi,DWORD PTR [esi]
  40cca9:	mov    edi,0xe1714227
  40ccae:	add    eax,0x979153ed
  40ccb3:	xchg   esp,eax
  40ccb4:	push   ds
  40ccb5:	cmp    edx,DWORD PTR [ecx]
  40ccb7:	and    edx,DWORD PTR [esi-0x244820cb]
  40ccbd:	aam    0x19
  40ccbf:	aad    0xca
  40ccc1:	test   eax,0xdb553c68
  40ccc6:	enter  0x85a2,0xbe
  40ccca:	xor    esp,DWORD PTR [ebp-0x12]
  40cccd:	xor    bh,BYTE PTR [esi+ecx*4+0xe7a994e]
  40ccd4:	inc    ebp
  40ccd5:	cmp    eax,0xb10042c0
  40ccda:	test   DWORD PTR [esi+edi*2-0x13bd118f],0xa9300c3f
  40cce5:	xor    al,0x9b
  40cce7:	je     0x40cd57
  40cce9:	loop   0x40ccc0
  40cceb:	stos   BYTE PTR es:[edi],al
  40ccec:	rcr    DWORD PTR [ebx],1
  40ccee:	xchg   BYTE PTR [ecx+0x3e8f53c9],dl
  40ccf4:	push   0xffffffb3
  40ccf6:	enter  0x4c94,0xe9
  40ccfa:	lods   al,BYTE PTR ds:[esi]
  40ccfb:	jo     0x40cc9f
  40ccfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccfe:	jecxz  0x40ccc4
  40cd00:	jmp    0x99d1:0xa0208171
  40cd07:	inc    ecx
  40cd08:	je     0x40ccc3
  40cd0a:	push   0x7e
  40cd0c:	mov    edx,0xdb7d1ae7
  40cd11:	fcom   DWORD PTR [edi-0x39f84f97]
  40cd17:	mov    bl,0xef
  40cd19:	scas   eax,DWORD PTR es:[edi]
  40cd1a:	(bad)  
  40cd1b:	in     al,0x14
  40cd1d:	dec    al
  40cd1f:	stos   BYTE PTR es:[edi],al
  40cd20:	mov    ecx,DWORD PTR [esi]
  40cd22:	jbe    0x40cd45
  40cd24:	and    esp,DWORD PTR [esi+0x249956a2]
  40cd2a:	cmp    al,0xd8
  40cd2c:	loopne 0x40cd71
  40cd2e:	adc    al,0x4d
  40cd30:	cli    
  40cd31:	ins    DWORD PTR es:[edi],dx
  40cd32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd33:	test   DWORD PTR [ebx-0x5c],esi
  40cd36:	add    ah,BYTE PTR [edi-0x8]
  40cd39:	and    BYTE PTR [edx-0x4d],ah
  40cd3c:	xchg   edx,esp
  40cd3e:	dec    ebp
  40cd3f:	inc    edx
  40cd40:	stos   BYTE PTR es:[edi],al
  40cd41:	pop    esi
  40cd42:	es xchg esi,eax
  40cd44:	gs xchg esp,eax
  40cd46:	ins    BYTE PTR es:[edi],dx
  40cd47:	sbb    eax,0x591e55c7
  40cd4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd4d:	sub    BYTE PTR [ecx+0x33e136dd],ch
  40cd53:	scas   al,BYTE PTR es:[edi]
  40cd54:	jge    0x40ccef
  40cd56:	inc    edi
  40cd57:	dec    esp
  40cd58:	adc    cl,dl
  40cd5a:	iret   
  40cd5b:	or     ah,BYTE PTR [edx]
  40cd5d:	jbe    0x40cd6e
  40cd5f:	mov    dh,0x8c
  40cd61:	pop    edx
  40cd62:	repz mov bh,0xae
  40cd65:	xchg   dh,dl
  40cd67:	das    
  40cd68:	sub    al,0xe
  40cd6a:	mov    dh,0xa7
  40cd6c:	pop    ds
  40cd6d:	mov    esp,0xe14cc62c
  40cd72:	jl     0x40cd1d
  40cd74:	stc    
  40cd75:	fwait
  40cd76:	mov    bl,0xba
  40cd78:	add    al,0x72
  40cd7a:	mov    ebx,0x931d5261
  40cd7f:	mov    dh,0x28
  40cd81:	out    0x46,al
  40cd83:	push   edi
  40cd84:	push   ds
  40cd85:	or     BYTE PTR [edi],ch
  40cd87:	test   al,0x91
  40cd89:	test   DWORD PTR [eax-0x2da6087e],edi
  40cd8f:	cld    
  40cd90:	push   eax
  40cd91:	push   ds
  40cd92:	aaa    
  40cd93:	iret   
  40cd94:	xchg   edx,eax
  40cd95:	adc    eax,0xdae9ed44
  40cd9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd9b:	fdiv   st(7),st
  40cd9d:	inc    ebx
  40cd9e:	shl    DWORD PTR [ebp+0x63d210d7],0x92
  40cda5:	(bad)  
  40cda6:	(bad)  
  40cda8:	jp     0x40cda2
  40cdaa:	and    eax,0x74ca987
  40cdaf:	outs   dx,DWORD PTR ds:[esi]
  40cdb0:	lea    esi,[edx+edi*1-0x225ea2ef]
  40cdb7:	int    0xa1
  40cdb9:	icebp  
  40cdba:	aas    
  40cdbb:	xchg   ecx,eax
  40cdbc:	popf   
  40cdbd:	inc    eax
  40cdbe:	mov    eax,ds:0x1c278e02
  40cdc3:	gs push ecx
  40cdc5:	add    eax,0xb6541ebb
  40cdca:	clc    
  40cdcb:	adc    BYTE PTR [ebp+0x2f68bb67],ch
  40cdd1:	xchg   ebx,eax
  40cdd2:	mov    dh,0xf
  40cdd4:	bound  esi,QWORD PTR [edx]
  40cdd6:	out    dx,eax
  40cdd7:	leave  
  40cdd8:	or     eax,0xdfba2cf8
  40cddd:	(bad)  
  40cdde:	leave  
  40cddf:	dec    edx
  40cde0:	jo     0x40ce0f
  40cde2:	pop    ss
  40cde3:	mov    esp,0x3f3d7a99
  40cde8:	adc    DWORD PTR [edx-0x5ff06a17],esp
  40cdee:	add    al,0xc3
  40cdf0:	jmp    0x40ce5d
  40cdf2:	xor    esi,DWORD PTR [ebp-0x4b]
  40cdf5:	jo     0x40cdab
  40cdf7:	push   ecx
  40cdf8:	mov    al,0x25
  40cdfa:	jns    0x40ce55
  40cdfc:	xor    eax,0xb3b636d2
  40ce01:	pop    ebx
  40ce02:	cdq    
  40ce03:	jo     0x40ce58
  40ce05:	lds    ecx,FWORD PTR [edi+0x13]
  40ce08:	shl    DWORD PTR [ebx+eax*1],cl
  40ce0b:	call   0xff04:0xacf7e3d0
  40ce12:	std    
  40ce13:	(bad)  
  40ce14:	xchg   edx,eax
  40ce15:	fdivr  DWORD PTR [edi-0x4a]
  40ce18:	dec    edi
  40ce19:	mov    esi,0xf0c9dfab
  40ce1e:	push   ss
  40ce1f:	push   0x87bd8fb3
  40ce24:	in     al,0xbd
  40ce26:	js     0x40ce47
  40ce28:	push   edx
  40ce29:	je     0x40ce15
  40ce2b:	lea    ebx,ds:0xec1109a9
  40ce31:	xchg   edi,eax
  40ce32:	push   ss
  40ce33:	push   0x752209aa
  40ce38:	in     eax,0x42
  40ce3a:	jecxz  0x40ce6d
  40ce3c:	scas   al,BYTE PTR es:[edi]
  40ce3d:	mov    al,0x59
  40ce3f:	retf   
  40ce40:	mov    BYTE PTR [ebx+0x18ac9ebc],ch
  40ce46:	jb     0x40cea4
  40ce48:	and    eax,0x84deb2f4
  40ce4d:	and    dh,ch
  40ce4f:	pop    ebp
  40ce50:	xchg   edi,eax
  40ce51:	or     dl,dh
  40ce53:	push   ebx
  40ce54:	(bad)  
  40ce55:	dec    edi
  40ce56:	lods   al,BYTE PTR ds:[esi]
  40ce57:	mov    al,ds:0x260f2dc0
  40ce5c:	es dec ebx
  40ce5e:	push   0x858669ee
  40ce63:	rcl    esp,cl
  40ce65:	into   
  40ce66:	cwde   
  40ce67:	int    0x51
  40ce69:	iret   
  40ce6a:	in     eax,0x8a
  40ce6c:	push   es
  40ce6d:	adc    DWORD PTR [esi-0x58],ecx
  40ce70:	nop
  40ce71:	out    dx,al
  40ce72:	(bad)  
  40ce73:	imul   eax,DWORD PTR [edi-0x52],0xfffffffc
  40ce77:	dec    ecx
  40ce78:	push   0xffffffad
  40ce7a:	mov    edi,0xeeab2833
  40ce7f:	call   FWORD PTR [ebx]
  40ce81:	scas   al,BYTE PTR es:[edi]
  40ce82:	aad    0x80
  40ce84:	xor    BYTE PTR [edx-0xf],al
  40ce87:	cdq    
  40ce88:	push   0x86827011
  40ce8d:	sub    bl,bh
  40ce8f:	sbb    al,ah
  40ce91:	and    eax,0x829dc53
  40ce96:	adc    BYTE PTR [ecx+0x2f6af3c1],dh
  40ce9c:	mov    eax,ds:0x47e52d33
  40cea1:	inc    edx
  40cea2:	xchg   esi,eax
  40cea3:	or     al,0xe8
  40cea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea6:	outs   dx,BYTE PTR ds:[esi]
  40cea7:	push   ecx
  40cea8:	sahf   
  40cea9:	call   0x8c03909f
  40ceae:	test   BYTE PTR [eax+0x21],bl
  40ceb1:	mov    ecx,0xeb8b627f
  40ceb6:	repnz and esi,eax
  40ceb9:	mov    esp,0x92688d41
  40cebe:	fstp   QWORD PTR ds:0x50d1b0a9
  40cec4:	(bad)  
  40cec5:	loop   0x40ce6a
  40cec7:	iret   
  40cec8:	retf   0x9688
  40cecb:	jecxz  0x40cecd
  40cecd:	cs pop es
  40cecf:	mov    bl,0x50
  40ced1:	jns    0x40ce90
  40ced3:	dec    ecx
  40ced4:	out    0x12,al
  40ced6:	sbb    DWORD PTR [ecx],0x78aaf59e
  40cedc:	mov    DWORD PTR [edx-0x1c04d7c5],0x76e92607
  40cee6:	(bad)  
  40cee7:	inc    esi
  40cee8:	arpl   WORD PTR [ebp-0x17],cx
  40ceeb:	outs   dx,BYTE PTR ds:[esi]
  40ceec:	(bad)  
  40ceed:	cmp    DWORD PTR [eax-0x44],ebx
  40cef0:	push   esp
  40cef1:	push   ds
  40cef2:	mov    ds:0x78e49faa,eax
  40cef7:	pop    ss
  40cef8:	pop    ebp
  40cef9:	and    DWORD PTR [ebp+0x3e],0x7f
  40cefd:	test   eax,0xe1397086
  40cf02:	xchg   bl,cl
  40cf04:	ror    BYTE PTR [edx-0x12],0xdc
  40cf08:	mov    ah,0x96
  40cf0a:	mov    dh,0xc0
  40cf0c:	sar    eax,0xbd
  40cf0f:	sbb    eax,0x89fe5c10
  40cf14:	dec    ebx
  40cf15:	dec    edx
  40cf16:	div    DWORD PTR [esp+ebp*4+0x5d]
  40cf1a:	mov    eax,ds:0xc5982b59
  40cf1f:	dec    esi
  40cf20:	adc    eax,0xa0a031de
  40cf25:	xchg   ebp,eax
  40cf26:	cli    
  40cf27:	xchg   edi,eax
  40cf28:	sahf   
  40cf29:	imul   ebp,ebx,0x75
  40cf2c:	mov    ch,0xb7
  40cf2e:	jne    0x40cecf
  40cf30:	push   ss
  40cf31:	out    0x4e,eax
  40cf33:	dec    esi
  40cf34:	xchg   ecx,eax
  40cf35:	xor    eax,0x6182f98b
  40cf3a:	and    edi,DWORD PTR [edi]
  40cf3c:	mov    cl,cl
  40cf3e:	sub    edx,0x13
  40cf41:	add    eax,0xca5d5ec7
  40cf46:	xlat   BYTE PTR ds:[ebx]
  40cf47:	fsub   QWORD PTR [ebp-0x68526337]
  40cf4d:	sahf   
  40cf4e:	xor    al,0xc8
  40cf50:	adc    eax,0xa6aee2cc
  40cf55:	ror    BYTE PTR [ecx+0x14],0x69
  40cf59:	stc    
  40cf5a:	dec    esi
  40cf5b:	loopne 0x40cfc7
  40cf5d:	add    ecx,DWORD PTR [edx-0xfd30344]
  40cf63:	sbb    DWORD PTR [ebx-0x60],edi
  40cf66:	jecxz  0x40cf0a
  40cf68:	into   
  40cf69:	cmp    BYTE PTR [eax-0x620f6405],al
  40cf6f:	xor    eax,0x27b6accb
  40cf74:	jg     0x40cf38
  40cf76:	ror    DWORD PTR [eax],cl
  40cf78:	adc    eax,0xa97c206f
  40cf7d:	ss scas eax,DWORD PTR es:[edi]
  40cf7f:	out    0xde,al
  40cf81:	retf   
  40cf82:	dec    eax
  40cf83:	sbb    dl,bh
  40cf85:	aad    0x47
  40cf87:	std    
  40cf88:	es ins DWORD PTR es:[edi],dx
  40cf8a:	pusha  
  40cf8b:	sub    bl,ch
  40cf8d:	pop    es
  40cf8e:	std    
  40cf8f:	gs jl  0x40d00d
  40cf92:	inc    dh
  40cf94:	xor    bl,cl
  40cf96:	xchg   ebx,eax
  40cf97:	mov    ebp,0x78dc3ae7
  40cf9c:	mov    ?,WORD PTR [edx+0x29]
  40cf9f:	push   ebp
  40cfa0:	pop    esp
  40cfa1:	mov    ds:0x782e52c2,al
  40cfa6:	test   BYTE PTR [eax-0x72],cl
  40cfa9:	ret    0xe576
  40cfac:	push   edx
  40cfad:	mov    DWORD PTR [edx],eax
  40cfaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfb0:	test   BYTE PTR [esi],dh
  40cfb2:	stos   BYTE PTR es:[edi],al
  40cfb3:	sti    
  40cfb4:	jns    0x40cf3f
  40cfb6:	add    ebx,DWORD PTR [ecx]
  40cfb8:	loop   0x40cfc5
  40cfba:	jmp    0xb824:0xb5d44c64
  40cfc1:	xchg   ebp,eax
  40cfc2:	mov    edx,DWORD PTR [ecx-0x10]
  40cfc5:	pusha  
  40cfc6:	outs   dx,BYTE PTR ds:[esi]
  40cfc7:	addr16 xchg di,ax
  40cfca:	mov    dl,0xef
  40cfcc:	ins    DWORD PTR es:[edi],dx
  40cfcd:	pop    ebp
  40cfce:	pusha  
  40cfcf:	fimul  DWORD PTR [eax]
  40cfd1:	and    eax,0x9f39c3a6
  40cfd6:	xor    esp,edi
  40cfd8:	icebp  
  40cfd9:	lahf   
  40cfda:	dec    ebx
  40cfdb:	scas   al,BYTE PTR es:[edi]
  40cfdc:	js     0x40cf73
  40cfde:	add    DWORD PTR [esi+0x1a7a1100],0xffffffeb
  40cfe5:	cmp    esi,edx
  40cfe7:	xchg   esi,eax
  40cfe8:	push   edx
  40cfe9:	jmp    0xa000dd0e
  40cfee:	lock popa 
  40cff0:	adc    cl,dh
  40cff2:	out    dx,eax
  40cff3:	add    al,0x5a
  40cff5:	test   DWORD PTR [edi-0x59fac3de],0x8746bcf6
  40cfff:	adc    bh,dh
  40d001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d002:	iret   
  40d003:	push   ecx
  40d004:	ffreep st(2)
  40d006:	mov    esi,0x51d1c8d9
  40d00b:	cmp    bh,dh
  40d00d:	mov    ecx,0x7c0a7840
  40d012:	punpckhdq mm3,QWORD PTR [edx]
  40d015:	test   BYTE PTR [ebx+0x36],ah
  40d018:	adc    BYTE PTR [edi],dl
  40d01a:	cmp    cl,BYTE PTR [edi]
  40d01c:	popf   
  40d01d:	fild   DWORD PTR [ecx]
  40d01f:	pop    ebx
  40d020:	dec    edx
  40d021:	sahf   
  40d022:	inc    edi
  40d023:	pusha  
  40d024:	imul   esi
  40d026:	and    BYTE PTR [eax+0x76a8491c],cl
  40d02c:	leave  
  40d02d:	fs pop ss
  40d02f:	sub    bl,dh
  40d031:	test   al,0xe4
  40d033:	pop    ss
  40d034:	sub    eax,0x2ffd120c
  40d039:	outs   dx,DWORD PTR ds:[esi]
  40d03a:	not    esi
  40d03c:	das    
  40d03d:	pop    edi
  40d03e:	dec    esi
  40d03f:	and    bh,BYTE PTR [edx-0x7a]
  40d042:	data16 jb 0x40cff5
  40d045:	stos   BYTE PTR es:[edi],al
  40d046:	pop    esi
  40d047:	mov    fs,ebp
  40d049:	cmp    al,0x50
  40d04b:	xor    eax,0x7ec062dc
  40d050:	xchg   ebp,eax
  40d051:	mov    ds:0xc59133e9,al
  40d056:	cs imul ecx,ebx,0x0
  40d05a:	xor    DWORD PTR [ebp+0xd],esi
  40d05d:	leave  
  40d05e:	xchg   ecx,eax
  40d05f:	pop    ss
  40d060:	test   edx,ebp
  40d062:	in     al,dx
  40d063:	fcom   st(0)
  40d065:	jb     0x40d000
  40d067:	ins    BYTE PTR es:[edi],dx
  40d068:	aaa    
  40d069:	leave  
  40d06a:	nop
  40d06b:	sbb    edi,edx
  40d06d:	and    BYTE PTR [edx+eax*8],dh
  40d070:	ror    BYTE PTR [eax+0x68e28ee],0x83
  40d077:	cwde   
  40d078:	pusha  
  40d079:	jp     0x40d040
  40d07b:	or     DWORD PTR [edi-0x1cdf3769],edi
  40d081:	mov    ah,0x1c
  40d083:	out    dx,al
  40d084:	sub    dh,BYTE PTR [eax+0x2c]
  40d087:	icebp  
  40d088:	es mov ah,0xbd
  40d08b:	shl    BYTE PTR [ebx],1
  40d08d:	fcomp  QWORD PTR [edx-0x2c]
  40d090:	dec    esi
  40d091:	xor    bl,BYTE PTR [esi+0x66]
  40d094:	js     0x40d094
  40d096:	js     0x40d05d
  40d098:	xchg   esi,eax
  40d099:	dec    edx
  40d09a:	adc    dh,dl
  40d09c:	in     al,dx
  40d09d:	and    al,0xbd
  40d09f:	push   ebp
  40d0a0:	mov    ecx,DWORD PTR [eax-0x63]
  40d0a3:	dec    edi
  40d0a4:	cmp    ecx,DWORD PTR [eax+0x2ad383e0]
  40d0aa:	sub    eax,0x6adc8ce3
  40d0af:	clc    
  40d0b0:	jae    0x40d034
  40d0b2:	fiadd  WORD PTR [ebx-0x63]
  40d0b5:	mov    bh,0x5c
  40d0b7:	jecxz  0x40d04c
  40d0b9:	pop    es
  40d0ba:	jno    0x40d063
  40d0bc:	add    eax,0xb6b66bbe
  40d0c1:	jns    0x40d130
  40d0c3:	xchg   ebp,eax
  40d0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0c5:	xor    DWORD PTR [edx+0x6a],ecx
  40d0c8:	cmp    esi,DWORD PTR [eax+0x2]
  40d0cb:	retf   
  40d0cc:	push   ds
  40d0cd:	inc    esi
  40d0ce:	sub    DWORD PTR ds:0x77c7db3,ebx
  40d0d4:	cmp    ecx,DWORD PTR [eax]
  40d0d6:	push   ebx
  40d0d7:	inc    ebx
  40d0d8:	and    DWORD PTR [edi-0x19],edx
  40d0db:	cmp    esi,DWORD PTR [esi+ebp*2+0x25]
  40d0df:	lods   al,BYTE PTR ds:[esi]
  40d0e0:	test   dh,ch
  40d0e2:	cwde   
  40d0e3:	mov    ebx,0x451a742b
  40d0e8:	xor    BYTE PTR [ebx+0x29],dl
  40d0eb:	or     DWORD PTR [ebp+0x4e],0x4df63141
  40d0f2:	or     ecx,DWORD PTR [eax]
  40d0f4:	pop    ebx
  40d0f5:	out    0xd5,al
  40d0f7:	adc    DWORD PTR [edx],esi
  40d0f9:	mov    ebx,0x65a8f7f7
  40d0fe:	jmp    0x7fdd:0x369207fb
  40d105:	lods   al,BYTE PTR ds:[esi]
  40d106:	add    BYTE PTR [eax+0x4772e560],ah
  40d10c:	jno    0x40d113
  40d10e:	fild   WORD PTR [esi]
  40d110:	xchg   ebx,eax
  40d111:	and    DWORD PTR [edx],0x10
  40d114:	add    edx,DWORD PTR [esi]
  40d116:	cld    
  40d117:	das    
  40d118:	inc    esp
  40d119:	pop    esp
  40d11a:	mov    cl,0xd4
  40d11c:	mov    eax,ds:0x3079e46e
  40d121:	daa    
  40d122:	inc    eax
  40d123:	cmp    BYTE PTR [ebp+0x6d856f88],bh
  40d129:	enter  0x369f,0x1
  40d12d:	sub    eax,0x26d82dae
  40d132:	cmp    BYTE PTR [ebx+0x23],bh
  40d135:	in     al,dx
  40d136:	push   0x614f4043
  40d13b:	out    0xc4,al
  40d13d:	ret    
  40d13e:	push   ds
  40d13f:	adc    edx,DWORD PTR [ebx+0x37545d30]
  40d145:	iret   
  40d146:	data16 sub dl,BYTE PTR [ebp+0x473b66dc]
  40d14d:	jl     0x40d0dc
  40d14f:	scas   al,BYTE PTR es:[edi]
  40d150:	out    0x3d,eax
  40d152:	jg     0x40d18a
  40d154:	int3   
  40d155:	addr16 mov bl,0xed
  40d158:	(bad)  
  40d159:	mov    esp,ss
  40d15b:	xchg   esi,eax
  40d15c:	sub    DWORD PTR [ebx],edx
  40d15e:	outs   dx,BYTE PTR ds:[esi]
  40d15f:	test   DWORD PTR [ebx+edx*8],0xca1b3250
  40d166:	scas   eax,DWORD PTR es:[edi]
  40d167:	xor    BYTE PTR [ebp+esi*2-0x55],0x44
  40d16c:	sub    BYTE PTR [esi+0x4d],dh
  40d16f:	dec    edx
  40d170:	js     0x40d0fb
  40d172:	add    cl,ah
  40d174:	mov    al,ds:0x6bc5d47e
  40d179:	sub    BYTE PTR [ebx],cl
  40d17b:	mov    eax,0x367f1036
  40d180:	loop   0x40d188
  40d182:	ror    dl,0x6c
  40d185:	psubw  mm1,QWORD PTR [edi-0x60]
  40d189:	jg     0x40d10e
  40d18b:	xchg   ebp,eax
  40d18c:	xchg   ebx,eax
  40d18d:	imul   cx,WORD PTR [esi-0x598e04a9],0xb017
  40d196:	mov    ebp,0xf6f905a4
  40d19b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d19c:	inc    edi
  40d19d:	ret    0x1562
  40d1a0:	rol    BYTE PTR [esi+0x6ac1f426],1
  40d1a6:	shl    DWORD PTR [edx-0x5fc540f6],1
  40d1ac:	ins    DWORD PTR es:[edi],dx
  40d1ad:	xlat   BYTE PTR ds:[ebx]
  40d1ae:	dec    eax
  40d1af:	xor    ch,cl
  40d1b1:	cld    
  40d1b2:	adc    DWORD PTR [edx+0x3],0x58
  40d1b6:	mov    edi,0xcf059254
  40d1bb:	call   FWORD PTR fs:[ecx+ecx*8]
  40d1bf:	xor    DWORD PTR [edi],eax
  40d1c1:	inc    esp
  40d1c2:	xchg   dh,cl
  40d1c4:	bound  eax,QWORD PTR [eax+0x3c]
  40d1c7:	xchg   esi,eax
  40d1c8:	retf   0x9748
  40d1cb:	xchg   ecx,eax
  40d1cc:	fmul   DWORD PTR [edi+0x44]
  40d1cf:	ins    BYTE PTR es:[edi],dx
  40d1d0:	xor    BYTE PTR ds:0x839e59c5,0x74
  40d1d7:	inc    edi
  40d1d8:	daa    
  40d1d9:	xlat   BYTE PTR ds:[ebx]
  40d1da:	rcr    DWORD PTR [ebx+0x484b4a8b],0xd8
  40d1e1:	cmp    bh,dl
  40d1e3:	mov    ds:0x5e7fe29b,al
  40d1e8:	loop   0x40d201
  40d1ea:	mov    ebx,0x60fd0d58
  40d1ef:	outs   dx,BYTE PTR ds:[esi]
  40d1f0:	retf   0xdd7e
  40d1f3:	loope  0x40d231
  40d1f5:	fstp   QWORD PTR [ebx+eax*8+0x2e]
  40d1f9:	push   0xc
  40d1fb:	out    0x39,al
  40d1fd:	push   edx
  40d1fe:	out    dx,eax
  40d1ff:	jmp    0x490f:0x4f38655f
  40d206:	sbb    eax,0x7cb4fe63
  40d20b:	cmc    
  40d20c:	jmp    0x40d217
  40d20e:	mov    al,0x68
  40d210:	shl    DWORD PTR [edi],cl
  40d212:	push   edi
  40d213:	stos   DWORD PTR es:[edi],eax
  40d214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d215:	iret   
  40d216:	or     al,0xb9
  40d218:	rol    ecx,0xef
  40d21b:	dec    eax
  40d21c:	or     BYTE PTR [ebp+0x4687c532],ah
  40d222:	inc    ecx
  40d223:	mov    eax,cs:0xdd3bd025
  40d229:	out    dx,al
  40d22a:	sbb    ecx,DWORD PTR [ebx]
  40d22c:	cmp    eax,0x1bb1cdd3
  40d231:	dec    ebp
  40d232:	and    eax,0xbcb573cf
  40d237:	shl    ah,0xb8
  40d23a:	jae    0x40d25d
  40d23c:	xchg   BYTE PTR [edx],bl
  40d23e:	or     al,0x7a
  40d240:	(bad)  [ebp+0x30]
  40d243:	add    DWORD PTR [eax+0x38d317cc],edx
  40d249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d24a:	inc    ecx
  40d24b:	sbb    edx,DWORD PTR [eax-0x994c61a]
  40d251:	xchg   DWORD PTR ds:[esi+0x36],ecx
  40d255:	push   ss
  40d256:	and    BYTE PTR [edx+0x1af19aee],ah
  40d25c:	scas   eax,DWORD PTR es:[edi]
  40d25d:	out    0x7d,eax
  40d25f:	inc    esp
  40d260:	cmp    eax,0x6f19fb79
  40d265:	mov    ecx,0x9cd9ae71
  40d26a:	xlat   BYTE PTR ds:[ebx]
  40d26b:	sbb    DWORD PTR [edi+0x633dc58a],ebp
  40d271:	sub    dl,BYTE PTR [esi]
  40d273:	(bad)  
  40d274:	mov    bl,0x7
  40d276:	stos   BYTE PTR es:[edi],al
  40d277:	pop    esi
  40d278:	sub    al,0x33
  40d27a:	xor    BYTE PTR [ebp+0x704cfd9d],cl
  40d280:	and    edx,ebp
  40d282:	jle    0x40d2f2
  40d284:	dec    eax
  40d285:	jae    0x40d2b3
  40d287:	pop    esi
  40d288:	push   esp
  40d289:	fnsave [edi+0x3f]
  40d28c:	je     0x40d30d
  40d28e:	(bad)
  40d292:	dec    edi
  40d293:	into   
  40d294:	xlat   BYTE PTR ds:[ebx]
  40d295:	bound  ebx,QWORD PTR [ebp+0x188e0d34]
  40d29b:	sbb    DWORD PTR [eax+0x486ca6e6],edx
  40d2a1:	mov    BYTE PTR [edx],ah
  40d2a3:	push   eax
  40d2a4:	and    ch,cl
  40d2a6:	das    
  40d2a7:	and    BYTE PTR [ecx-0x6cce1a68],0x2e
  40d2ae:	pop    es
  40d2af:	fisub  DWORD PTR [esi]
  40d2b1:	test   DWORD PTR [ebx+0x7a901aff],ecx
  40d2b7:	dec    eax
  40d2b8:	imul   ecx,edi,0x502328c3
  40d2be:	(bad)  
  40d2bf:	mov    bh,0xc6
  40d2c1:	mov    edi,0x62026ae4
  40d2c6:	scas   al,BYTE PTR es:[edi]
  40d2c7:	adc    ch,BYTE PTR [edx+0x31]
  40d2ca:	xlat   BYTE PTR ds:[ebx]
  40d2cb:	xchg   esi,eax
  40d2cc:	adc    ebp,DWORD PTR [eax]
  40d2ce:	pop    edi
  40d2cf:	add    eax,0x9d9676fd
  40d2d4:	aas    
  40d2d5:	pop    ecx
  40d2d6:	pop    esp
  40d2d7:	dec    ecx
  40d2d8:	scas   eax,DWORD PTR es:[edi]
  40d2d9:	mov    ch,0x33
  40d2db:	pop    edx
  40d2dc:	je     0x40d2f4
  40d2de:	dec    ecx
  40d2df:	jecxz  0x40d26e
  40d2e1:	xor    edx,edi
  40d2e3:	xor    BYTE PTR [edi-0x2bff8548],bl
  40d2e9:	inc    ebp
  40d2ea:	ins    DWORD PTR es:[edi],dx
  40d2eb:	add    eax,0x965fc81a
  40d2f0:	xchg   DWORD PTR [eax],edx
  40d2f2:	out    dx,al
  40d2f3:	daa    
  40d2f4:	sub    DWORD PTR [ebx],0x41
  40d2f7:	imul   ebx,edi,0x3e
  40d2fa:	inc    ebx
  40d2fb:	xchg   ebx,eax
  40d2fc:	mov    ebp,0x63d55d1e
  40d301:	dec    ecx
  40d302:	daa    
  40d303:	scas   al,BYTE PTR es:[edi]
  40d304:	xlat   BYTE PTR ds:[ebx]
  40d305:	movsx  edi,BYTE PTR [ebp-0x65b19f10]
  40d30c:	pop    edi
  40d30d:	jge    0x40d385
  40d30f:	addr16 aaa 
  40d311:	xor    al,0x5d
  40d313:	lds    esp,FWORD PTR [esp+0x3cc74f8]
  40d31a:	inc    esi
  40d31b:	leave  
  40d31c:	mov    ah,0xf0
  40d31e:	and    BYTE PTR [edx-0xccb49e5],bl
  40d324:	repz hlt 
  40d326:	inc    edx
  40d327:	fs jo  0x40d317
  40d32a:	pop    esp
  40d32b:	pop    ecx
  40d32c:	push   edi
  40d32d:	clc    
  40d32e:	sbb    ebx,DWORD PTR [edi-0x69]
  40d331:	ss push ebp
  40d333:	pop    edx
  40d334:	add    al,0xee
  40d336:	cmp    edx,ebp
  40d338:	ficomp DWORD PTR ds:0x175fe1df
  40d33e:	sahf   
  40d33f:	call   0x4f45888f
  40d344:	stc    
  40d345:	stos   DWORD PTR es:[edi],eax
  40d346:	stos   DWORD PTR es:[edi],eax
  40d347:	mov    al,0x88
  40d349:	pop    ebx
  40d34a:	lods   al,BYTE PTR ds:[esi]
  40d34b:	dec    ebp
  40d34c:	xchg   ecx,eax
  40d34d:	shl    ch,cl
  40d34f:	jns    0x40d380
  40d351:	clc    
  40d352:	loop   0x40d34c
  40d354:	mov    esi,esi
  40d356:	lock leave 
  40d358:	jbe    0x40d314
  40d35a:	iret   
  40d35b:	outs   dx,DWORD PTR ss:[esi]
  40d35d:	mov    dh,0xa9
  40d35f:	pop    esp
  40d360:	mov    WORD PTR [ebp-0x2f],es
  40d363:	arpl   WORD PTR [edx-0x30],di
  40d366:	leave  
  40d367:	fistp  QWORD PTR [esi]
  40d369:	in     al,0x96
  40d36b:	xchg   DWORD PTR [ecx+0x75],ecx
  40d36e:	mov    al,ds:0x1388f5f0
  40d373:	jmp    0x40d3f3
  40d375:	push   edi
  40d376:	push   ds
  40d377:	pop    edx
  40d378:	es aad 0x4
  40d37b:	and    eax,0xc38193a2
  40d380:	add    dl,BYTE PTR [eax]
  40d382:	add    BYTE PTR [eax],al
  40d384:	lea    eax,[ebp-0x18]
  40d387:	add    edx,eax
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	dec    eax
  40d3d1:	jle    0x40d424
  40d3d3:	and    DWORD PTR [edx+0xc8383d3],esi
  40d3d9:	pop    esi
  40d3da:	add    DWORD PTR [ebx+0x6aa647b],0xffffffe0
  40d3e1:	ins    DWORD PTR es:[edi],dx
  40d3e2:	in     eax,dx
  40d3e3:	sub    al,0xa9
  40d3e5:	ins    DWORD PTR es:[edi],dx
  40d3e6:	mov    ebp,0x439672d9
  40d3eb:	imul   edi,DWORD PTR [ebx],0x7080179f
  40d3f1:	shl    BYTE PTR [edi-0x770b2fe4],0x91
  40d3f8:	call   0x2de2:0xb4502c91
  40d3ff:	pop    ds
  40d400:	pop    ebx
  40d401:	(bad)  
  40d402:	add    ax,0xac16
  40d406:	xor    dl,cl
  40d408:	lods   al,BYTE PTR ds:[esi]
  40d409:	aad    0xd2
  40d40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d40c:	push   esp
  40d40d:	(bad)  
  40d40e:	mov    bh,BYTE PTR [esi]
  40d410:	in     eax,dx
  40d411:	jmp    0xc4e4:0xd53951e2
  40d418:	push   0x26e6395e
  40d41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d41e:	je     0x40d460
  40d420:	fs int 0x55
  40d423:	lea    ebx,ds:0xf5047691
  40d429:	icebp  
  40d42a:	jnp    0x40d493
  40d42c:	add    DWORD PTR [ecx],esp
  40d42e:	mov    al,0xc0
  40d430:	jo     0x40d443
  40d432:	xlat   BYTE PTR ds:[ebx]
  40d433:	in     al,0x40
  40d435:	sub    ecx,DWORD PTR [ebx]
  40d437:	ins    BYTE PTR es:[edi],dx
  40d438:	pop    edi
  40d439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d43b:	adc    al,0xa4
  40d43d:	xor    BYTE PTR [edi+0x28],cl
  40d440:	sbb    BYTE PTR [edi+0x1a235975],bh
  40d446:	lds    ebp,FWORD PTR [ecx]
  40d448:	xchg   edi,eax
  40d449:	jne    0x40d4ab
  40d44b:	test   eax,0x6d651447
  40d450:	jp     0x40d44e
  40d452:	(bad)  
  40d453:	cmp    eax,0x392b31da
  40d458:	ret    
  40d459:	jo     0x40d498
  40d45b:	and    esp,DWORD PTR [eax+0x5d7fec64]
  40d461:	into   
  40d462:	push   eax
  40d463:	(bad)  
  40d464:	fidiv  WORD PTR [ebp-0x4f]
  40d467:	jle    0x40d4c5
  40d469:	ja     0x40d4a5
  40d46b:	mov    ch,0x9a
  40d46d:	push   0x3f917c5
  40d472:	pop    edi
  40d473:	jecxz  0x40d45b
  40d475:	xchg   esp,eax
  40d476:	(bad)  
  40d477:	call   0x70e8ec57
  40d47c:	sbb    dh,BYTE PTR [edx+esi*2+0x65c6363c]
  40d483:	xchg   esi,eax
  40d484:	and    eax,0xf3c95b3
  40d489:	mov    eax,0x433b3f71
  40d48e:	mul    bh
  40d490:	stos   BYTE PTR es:[edi],al
  40d491:	sbb    eax,0xf8a0184d
  40d496:	mov    ebp,0x5da24f48
  40d49b:	mov    al,0xfb
  40d49d:	jo     0x40d4ee
  40d49f:	sti    
  40d4a0:	adc    DWORD PTR [edi+0x18000eea],0xc6db0b13
  40d4aa:	int    0x1
  40d4ac:	xor    ebx,ebp
  40d4ae:	jecxz  0x40d4c8
  40d4b0:	imul   ebx,DWORD PTR [bp+di],0x4b191941
  40d4b7:	and    edx,DWORD PTR ds:0x4bde3dcd
  40d4be:	stos   BYTE PTR es:[edi],al
  40d4bf:	inc    ebx
  40d4c0:	retf   0xa882
  40d4c3:	aam    0x9b
  40d4c5:	(bad)
  40d4c8:	dec    edi
  40d4c9:	jns    0x40d490
  40d4cb:	push   ebx
  40d4cc:	and    al,0x36
  40d4ce:	push   eax
  40d4cf:	pop    esp
  40d4d0:	push   ecx
  40d4d1:	outs   dx,DWORD PTR ds:[esi]
  40d4d2:	outs   dx,BYTE PTR ds:[esi]
  40d4d3:	shl    ebx,cl
  40d4d5:	aam    0x41
  40d4d7:	inc    ebx
  40d4d8:	xchg   ebx,eax
  40d4d9:	pop    ebx
  40d4da:	xlat   BYTE PTR ds:[ebx]
  40d4db:	pop    ebx
  40d4dc:	rol    BYTE PTR [ebx-0x501d8c62],1
  40d4e2:	xchg   ecx,eax
  40d4e3:	mov    eax,ds:0xacfdeb50
  40d4e8:	repz xchg esi,eax
  40d4ea:	jp     0x40d55b
  40d4ec:	pop    edx
  40d4ed:	sbb    DWORD PTR [ecx],ecx
  40d4ef:	and    eax,0x709cccb9
  40d4f4:	loop   0x40d563
  40d4f6:	popa   
  40d4f7:	jmp    edi
  40d4f9:	mov    edi,0xe21d5ac0
  40d4fe:	add    ah,BYTE PTR [edx]
  40d500:	adc    ah,ch
  40d502:	push   ebp
  40d503:	pushf  
  40d504:	adc    ecx,DWORD PTR [eax+0x52]
  40d507:	test   eax,0xeb4058e1
  40d50c:	cmp    BYTE PTR [esi],bh
  40d50e:	dec    esp
  40d50f:	aaa    
  40d510:	mov    bl,0xa0
  40d512:	aam    0x40
  40d514:	sbb    eax,0x58b96af6
  40d519:	aam    0xf3
  40d51b:	fsubr  QWORD PTR [edi+ecx*4+0x7e]
  40d51f:	mov    ebx,0xe708c38c
  40d524:	loopne 0x40d56f
  40d526:	fisubr WORD PTR [edx+0x53]
  40d529:	test   al,0x4c
  40d52b:	out    dx,al
  40d52c:	inc    edx
  40d52d:	in     eax,dx
  40d52e:	lods   al,BYTE PTR ds:[esi]
  40d52f:	xor    esi,ebp
  40d531:	mov    BYTE PTR [edx-0x1e],ch
  40d534:	cwde   
  40d535:	dec    ebx
  40d536:	xor    eax,0x506e27a8
  40d53b:	int3   
  40d53c:	xchg   esi,eax
  40d53d:	push   es
  40d53e:	mov    ebp,0x94f5ffc5
  40d543:	call   0x5d1c1430
  40d548:	add    bh,bh
  40d54a:	adc    DWORD PTR [edi+0x6],esp
  40d54d:	(bad)  
  40d54e:	fsubr  DWORD PTR ds:0x4df52c40
  40d554:	jg     0x40d506
  40d556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d557:	out    dx,al
  40d558:	adc    DWORD PTR ds:0x16d6974c,ebx
  40d55e:	sbb    DWORD PTR [ebx+edi*1],ebx
  40d561:	outs   dx,BYTE PTR ds:[esi]
  40d562:	out    0x8a,al
  40d564:	mov    bl,0x87
  40d566:	adc    edx,esp
  40d568:	push   esp
  40d569:	add    al,0xe7
  40d56b:	jns    0x40d5d1
  40d56d:	inc    ebp
  40d56e:	fisttp QWORD PTR [esi]
  40d570:	jbe    0x40d534
  40d572:	movd   mm7,esp
  40d575:	xchg   esi,eax
  40d576:	icebp  
  40d577:	inc    ebp
  40d578:	add    bh,BYTE PTR ss:[ebp-0x910e082]
  40d57f:	fs mov ebp,0x7528ac6f
  40d585:	pop    esi
  40d586:	jnp    0x40d58d
  40d588:	mov    BYTE PTR [esi],0xa7
  40d58b:	test   DWORD PTR [ebp+0x535144bd],ecx
  40d591:	sbb    edi,DWORD PTR [ebx]
  40d593:	sti    
  40d594:	jo     0x40d5a2
  40d596:	or     BYTE PTR [esi+0x2d],dl
  40d599:	cmc    
  40d59a:	retf   
  40d59b:	rol    dl,cl
  40d59d:	mov    ebx,0xa1ff65f9
  40d5a2:	fucomi st,st(6)
  40d5a4:	xchg   esp,eax
  40d5a5:	add    eax,0x2369becb
  40d5aa:	lods   eax,DWORD PTR ds:[esi]
  40d5ab:	jo     0x40d5ee
  40d5ad:	retf   0x7e1c
  40d5b0:	popa   
  40d5b1:	fs mov ebp,0x742d8f20
  40d5b7:	repz mov dh,0xd6
  40d5ba:	imul   esi,DWORD PTR [edi],0xffffff89
  40d5bd:	inc    ebx
  40d5be:	xor    ecx,DWORD PTR [edx+ecx*4]
  40d5c1:	xlat   BYTE PTR ds:[ebx]
  40d5c2:	push   es
  40d5c3:	mov    dh,0xc3
  40d5c5:	fstp   QWORD PTR [esi+ebp*1-0x206c4a73]
  40d5cc:	imul   BYTE PTR [eax-0x49]
  40d5cf:	sub    eax,0xb13171a
  40d5d4:	mov    edi,0x8dac61d4
  40d5d9:	cmp    eax,0x9563e579
  40d5df:	cmp    eax,0x8a8ed4ad
  40d5e4:	bound  edx,QWORD PTR [ecx+0x25]
  40d5e7:	fadd   st,st(7)
  40d5e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5ea:	pop    ebx
  40d5eb:	jmp    0xd8cd:0x75c4c4b5
  40d5f2:	fistp  QWORD PTR [eax+0xf]
  40d5f5:	xchg   edx,eax
  40d5f6:	xchg   BYTE PTR [esi],ah
  40d5f8:	mov    ebx,0xf10ddd22
  40d5fd:	sbb    dh,BYTE PTR [edi-0x2b7ed87a]
  40d603:	stos   DWORD PTR es:[edi],eax
  40d604:	push   ss
  40d605:	inc    eax
  40d606:	inc    edi
  40d607:	xor    eax,0x14c8a615
  40d60c:	call   FWORD PTR [eax+0x760d5227]
  40d612:	push   ebp
  40d613:	jp     0x40d5b6
  40d615:	fisubr DWORD PTR [edx+0x5940eafa]
  40d61b:	clc    
  40d61c:	jmp    0x45fe:0xa852c8a8
  40d623:	lods   al,BYTE PTR ds:[esi]
  40d624:	fistp  DWORD PTR [ecx+eiz*8]
  40d627:	mov    ah,0xaf
  40d629:	add    BYTE PTR [esi-0x42ad644],0xeb
  40d630:	sub    BYTE PTR [ebx-0x62],al
  40d633:	ss mov ecx,0xb7787e54
  40d639:	in     eax,0x65
  40d63b:	cmp    eax,0xf37fae8
  40d640:	sbb    BYTE PTR [esi-0x7d1227e8],0x6b
  40d647:	mov    esi,0xbe9bfc9b
  40d64c:	ja     0x40d6a0
  40d64e:	dec    edx
  40d64f:	jecxz  0x40d681
  40d651:	popf   
  40d652:	sbb    BYTE PTR [edx],bl
  40d654:	jle    0x40d6b8
  40d656:	imul   edi,DWORD PTR [ebp+0xf],0xffffff9d
  40d65a:	ss cli 
  40d65c:	fimul  DWORD PTR [ebx]
  40d65e:	push   ecx
  40d65f:	imul   esi,DWORD PTR [edi+edi*4],0xffffffcb
  40d663:	jge    0x40d684
  40d665:	sahf   
  40d666:	pop    edi
  40d667:	aad    0x40
  40d669:	mov    al,ds:0xde8e6d7d
  40d66e:	add    DWORD PTR [edi-0x175be41b],ebx
  40d674:	retf   
  40d675:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40d677:	mov    dh,0xf1
  40d679:	loope  0x40d657
  40d67b:	daa    
  40d67c:	push   ds
  40d67d:	popf   
  40d67e:	rcr    bh,0xe4
  40d681:	out    dx,al
  40d682:	mov    dh,0xc7
  40d684:	xor    ah,al
  40d686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d687:	loope  0x40d6ad
  40d689:	xor    edi,DWORD PTR [esi]
  40d68b:	lock jns 0x40d647
  40d68e:	sahf   
  40d68f:	mov    eax,ds:0xeb3ca4e2
  40d694:	mov    ch,0xe3
  40d696:	inc    ebp
  40d697:	sub    eax,0xb8aa5e1d
  40d69c:	xor    BYTE PTR [ebx-0x37],dl
  40d69f:	outs   dx,BYTE PTR ds:[esi]
  40d6a0:	retf   
  40d6a1:	or     BYTE PTR [eax+0x6f],dh
  40d6a4:	rol    BYTE PTR [edi],0x87
  40d6a7:	shl    DWORD PTR [edx-0x10],0x9
  40d6ab:	mov    edx,cs
  40d6ad:	(bad)  
  40d6ae:	jmp    0x40d6cc
  40d6b0:	sbb    DWORD PTR [esi-0x7b],ebx
  40d6b3:	rcl    BYTE PTR [edi+ecx*2],cl
  40d6b6:	adc    al,0xcd
  40d6b8:	test   esp,ebp
  40d6ba:	and    ebp,esp
  40d6bc:	pop    edi
  40d6bd:	inc    edx
  40d6be:	jnp    0x40d675
  40d6c0:	int    0xd2
  40d6c2:	dec    ebx
  40d6c3:	sbb    ah,dl
  40d6c5:	jl     0x40d684
  40d6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6c8:	push   ebp
  40d6c9:	out    dx,al
  40d6ca:	sbb    edx,ecx
  40d6cc:	sti    
  40d6cd:	fmul   st,st(0)
  40d6cf:	jbe    0x40d67c
  40d6d1:	aaa    
  40d6d2:	pop    eax
  40d6d3:	mov    DWORD PTR [ebp-0x73b0c88f],edx
  40d6d9:	adc    bh,BYTE PTR [ebp-0x59dab8f3]
  40d6df:	xor    eax,0xceff330
  40d6e4:	ror    dh,0xc7
  40d6e7:	shr    DWORD PTR [edx],1
  40d6e9:	pop    ebp
  40d6ea:	mov    eax,0x8df573a6
  40d6ef:	add    BYTE PTR [edi+ebx*8+0x55],bl
  40d6f3:	sahf   
  40d6f4:	rol    ebx,cl
  40d6f6:	int    0x69
  40d6f8:	arpl   ax,cx
  40d6fa:	pop    es
  40d6fb:	jnp    0x40d75f
  40d6fd:	popf   
  40d6fe:	mov    bl,0x70
  40d700:	nop
  40d701:	jmp    0x6d6c:0x15b35501
  40d708:	(bad)  
  40d709:	sbb    DWORD PTR [edx+0x15],esi
  40d70c:	cmp    ebx,esi
  40d70e:	xor    DWORD PTR [ebp+ebp*1+0x59902b32],edx
  40d715:	jg     0x40d74a
  40d717:	jmp    0x82dd:0x5f5ce6ba
  40d71e:	mov    ecx,0xb81e37ce
  40d723:	lds    esi,FWORD PTR [esi+0x4c061315]
  40d729:	mov    BYTE PTR [edx+0x17],dh
  40d72c:	mov    ah,BYTE PTR [ebx]
  40d72e:	mov    edx,0x4c007de4
  40d733:	sbb    BYTE PTR [esi],bl
  40d735:	and    bh,bl
  40d737:	mov    edi,0xd04a9f10
  40d73c:	std    
  40d73d:	je     0x40d704
  40d73f:	mov    ch,BYTE PTR [ecx+0x1d6984fa]
  40d745:	retf   
  40d746:	mov    bh,BYTE PTR [esi]
  40d748:	and    edi,DWORD PTR [ebp+0x3a17749e]
  40d74e:	ss dec edi
  40d750:	iret   
  40d751:	dec    ecx
  40d752:	mov    bl,0x4d
  40d754:	es or  esp,eax
  40d757:	and    DWORD PTR [edx],ebx
  40d759:	push   edx
  40d75a:	xchg   DWORD PTR [ebp+0x63],esp
  40d75d:	and    DWORD PTR [ebx],0x7100cb4c
  40d763:	dec    ebx
  40d764:	mov    esi,0xbae89207
  40d769:	and    DWORD PTR ds:0x1e61d0ee,0xffffff8c
  40d770:	mov    eax,ss
  40d772:	inc    edi
  40d773:	jecxz  0x40d782
  40d775:	mov    ah,0x93
  40d777:	and    cl,BYTE PTR [ebx-0x4e5cfb53]
  40d77d:	inc    esi
  40d77e:	sar    BYTE PTR [esi-0x3a],1
  40d781:	xchg   ecx,eax
  40d782:	push   edi
  40d783:	and    DWORD PTR [esi],eax
  40d785:	outs   dx,DWORD PTR ds:[esi]
  40d786:	xor    bh,BYTE PTR [ecx-0x3c967407]
  40d78c:	call   0x94f5:0x6ae5b4d8
  40d793:	inc    esi
  40d794:	stos   BYTE PTR es:[edi],al
  40d795:	sub    eax,0xa236f796
  40d79a:	imul   edx,DWORD PTR [edi+0x7020f98c],0xffffff99
  40d7a1:	arpl   WORD PTR [esi-0x20],di
  40d7a4:	rol    DWORD PTR [edi+0x70],cl
  40d7a7:	test   eax,0xaff4f6be
  40d7ac:	retf   0xed3f
  40d7af:	sbb    dl,al
  40d7b1:	xchg   ebx,eax
  40d7b2:	push   ss
  40d7b3:	ficom  DWORD PTR [esi+0x28]
  40d7b6:	dec    ebp
  40d7b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7b8:	sahf   
  40d7b9:	pop    ds
  40d7ba:	(bad)  
  40d7bb:	sti    
  40d7bc:	sti    
  40d7bd:	and    cl,BYTE PTR es:[ebx+0x2]
  40d7c1:	sub    al,0x19
  40d7c3:	retf   
  40d7c4:	repz loop 0x40d7af
  40d7c7:	add    dl,ah
  40d7c9:	call   0x7b05fd40
  40d7ce:	inc    ecx
  40d7cf:	mov    WORD PTR [edx],ss
  40d7d1:	retf   0x7cb2
  40d7d4:	pop    ebx
  40d7d5:	icebp  
  40d7d6:	call   0xd4c5:0x279dac4e
  40d7dd:	xor    DWORD PTR [edi+edi*1+0x6],ebp
  40d7e1:	dec    esp
  40d7e2:	ret    
  40d7e3:	call   0x41a22810
  40d7e8:	mov    ecx,DWORD PTR [edx]
  40d7ea:	mov    ebp,0xe8bceb0c
  40d7ef:	hlt    
  40d7f0:	push   ebp
  40d7f1:	xlat   BYTE PTR ds:[ebx]
  40d7f2:	adc    BYTE PTR [edi+edx*1+0x4d],bl
  40d7f6:	sub    ebx,DWORD PTR [ecx+0x57]
  40d7f9:	pop    es
  40d7fa:	pushf  
  40d7fb:	lods   eax,DWORD PTR ds:[esi]
  40d7fc:	mov    ch,0xa7
  40d7fe:	push   ds
  40d7ff:	je     0x40d792
  40d801:	sbb    esp,DWORD PTR [edx-0x2f]
  40d804:	retf   0xb999
  40d807:	jmp    0x1f017dc0
  40d80c:	inc    eax
  40d80d:	mov    ch,al
  40d80f:	sbb    ebp,esi
  40d811:	cld    
  40d812:	xchg   ebx,eax
  40d813:	ins    BYTE PTR es:[edi],dx
  40d814:	(bad)  
  40d815:	test   DWORD PTR [ecx+eax*1],esi
  40d818:	cdq    
  40d819:	lock sar DWORD PTR [ebx],cl
  40d81c:	or     BYTE PTR [esi],dh
  40d81e:	cmp    BYTE PTR [edi+0x2677c744],cl
  40d824:	fs addr16 das 
  40d827:	fsubr  DWORD PTR [esi+0x610ca5f6]
  40d82d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d82e:	cdq    
  40d82f:	aaa    
  40d830:	jmp    0xe468da6
  40d835:	mov    ch,0x79
  40d837:	xchg   edi,eax
  40d838:	repnz push esp
  40d83a:	les    edi,FWORD PTR [esi+0x61]
  40d83d:	ss jecxz 0x40d856
  40d840:	mov    ecx,DWORD PTR [esi+0x28]
  40d843:	mov    al,ch
  40d845:	mov    dh,0x8e
  40d847:	or     edx,DWORD PTR [esi]
  40d849:	out    dx,al
  40d84a:	inc    edi
  40d84b:	xchg   esp,eax
  40d84c:	sti    
  40d84d:	out    dx,eax
  40d84e:	outs   dx,BYTE PTR ds:[esi]
  40d84f:	(bad)  
  40d850:	aaa    
  40d851:	mov    esp,0x481b17d9
  40d856:	fnsave [eax]
  40d858:	cmp    BYTE PTR [esi],0xf6
  40d85b:	xchg   ebp,eax
  40d85c:	loopne 0x40d859
  40d85e:	fisubr WORD PTR [edx]
  40d860:	sbb    BYTE PTR [ebx+edx*2-0x7303548d],0x2a
  40d868:	push   ds
  40d869:	into   
  40d86a:	add    cl,dl
  40d86c:	mov    cl,0xdc
  40d86e:	sahf   
  40d86f:	sar    DWORD PTR [edx-0x7d],1
  40d872:	push   cs
  40d873:	test   BYTE PTR [ebx],dh
  40d875:	std    
  40d876:	pop    ebx
  40d877:	ds xor dh,cl
  40d87a:	pop    edi
  40d87b:	ins    BYTE PTR es:[edi],dx
  40d87c:	lods   al,BYTE PTR ds:[esi]
  40d87d:	out    0x61,al
  40d87f:	adc    edx,eax
  40d881:	jl     0x40d80b
  40d883:	je     0x40d85e
  40d885:	or     eax,0x566946c0
  40d88a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d88b:	ds cld 
  40d88d:	fdiv   DWORD PTR [esi-0x3421ebe2]
  40d893:	adc    esp,DWORD PTR [eax]
  40d895:	call   0x1b2d:0x2aa946de
  40d89c:	xchg   esp,eax
  40d89d:	scas   al,BYTE PTR es:[edi]
  40d89e:	add    BYTE PTR ss:[esi+esi*8+0x1403ee54],dh
  40d8a6:	mov    bh,bl
  40d8a8:	mov    ebp,0xcced0a9e
  40d8ad:	dec    ebp
  40d8ae:	xchg   DWORD PTR [eax+ebp*4],ebx
  40d8b1:	stos   BYTE PTR es:[edi],al
  40d8b2:	cmp    esi,DWORD PTR [eax+eax*1-0x5e]
  40d8b6:	js     0x40d8e9
  40d8b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8b9:	mov    dh,0x6f
  40d8bb:	ins    DWORD PTR es:[edi],dx
  40d8bc:	adc    edx,DWORD PTR [ecx]
  40d8be:	mov    ch,0x26
  40d8c0:	push   es
  40d8c1:	mov    eax,0x58cd25c0
  40d8c6:	test   al,0x7f
  40d8c8:	fsubr  QWORD PTR [ecx-0x1]
  40d8cb:	and    BYTE PTR [ebx-0x7cf3cb2b],0xdd
  40d8d2:	mov    dh,0xe3
  40d8d4:	cdq    
  40d8d5:	ins    BYTE PTR es:[edi],dx
  40d8d6:	pop    edx
  40d8d7:	pop    edi
  40d8d8:	icebp  
  40d8d9:	je     0x40d8e5
  40d8db:	xor    ah,cl
  40d8dd:	ror    DWORD PTR [eax],1
  40d8df:	push   edi
  40d8e0:	and    DWORD PTR [esi],esi
  40d8e2:	cmp    BYTE PTR [eax],ch
  40d8e4:	lds    edi,FWORD PTR [eax+eax*2]
  40d8e7:	not    DWORD PTR [ecx+0x79]
  40d8ea:	cmp    ebx,DWORD PTR [edx-0x48]
  40d8ed:	fcomp  DWORD PTR [ebp-0x150758b]
  40d8f3:	rcr    BYTE PTR [ebx+0x40004aa6],0x85
  40d8fa:	das    
  40d8fb:	sbb    bh,BYTE PTR [eax+ebp*8-0x295fe8ae]
  40d902:	cwde   
  40d903:	call   0xbadf:0x467a1644
  40d90a:	loopne 0x40d96b
  40d90c:	push   esp
  40d90d:	xor    BYTE PTR [esp+ebp*8-0x49],0x76
  40d912:	cmp    ebp,DWORD PTR [ebp+ecx*4+0x3b]
  40d916:	dec    edx
  40d917:	xor    dh,BYTE PTR [edx]
  40d919:	mov    dl,0x97
  40d91b:	repnz sbb cl,dl
  40d91e:	xchg   ebp,eax
  40d91f:	inc    edi
  40d920:	push   0xef796483
  40d925:	daa    
  40d926:	sub    DWORD PTR [eax-0x692da742],ebp
  40d92c:	in     eax,dx
  40d92d:	push   es
  40d92e:	or     al,0x7b
  40d930:	push   0xc
  40d932:	inc    edi
  40d933:	mov    ebp,0x22ecc21f
  40d938:	adc    BYTE PTR [eax],dh
  40d93a:	dec    edx
  40d93b:	pop    edi
  40d93c:	int    0x8a
  40d93e:	ret    
  40d93f:	retf   
  40d940:	mov    ah,0x8c
  40d942:	dec    ebp
  40d943:	test   WORD PTR [ecx+0x7c],di
  40d947:	or     ebx,edi
  40d949:	jno    0x40d9b3
  40d94b:	out    dx,eax
  40d94c:	in     al,0x9a
  40d94e:	xchg   edx,eax
  40d94f:	stos   DWORD PTR es:[edi],eax
  40d950:	nop
  40d951:	or     esp,DWORD PTR [esp+edx*8+0xc]
  40d955:	cdq    
  40d956:	mov    esi,0xe962ab0c
  40d95b:	outs   dx,DWORD PTR ds:[esi]
  40d95c:	mov    esp,0x343244a4
  40d961:	lods   eax,DWORD PTR ds:[esi]
  40d962:	push   0xb8b2fcc2
  40d967:	dec    ebx
  40d968:	xchg   ebx,eax
  40d969:	dec    edx
  40d96a:	in     eax,0xf4
  40d96c:	pop    esi
  40d96d:	jp     0x40d967
  40d96f:	cli    
  40d970:	aas    
  40d971:	mov    edi,DWORD PTR [edi]
  40d973:	arpl   WORD PTR [ecx],bx
  40d975:	(bad)  
  40d976:	sub    al,0xfe
  40d978:	in     eax,0x3e
  40d97a:	sub    BYTE PTR [edi+0x1db357bc],bh
  40d980:	adc    BYTE PTR [edx-0x56d200e4],dl
  40d986:	xor    BYTE PTR [ebp+0x6f],0x17
  40d98a:	loop   0x40d9ce
  40d98c:	rcl    BYTE PTR [edx],1
  40d98e:	fidivr WORD PTR [ecx+0x7ef906ba]
  40d994:	push   ecx
  40d995:	push   ebp
  40d996:	push   0xffffffac
  40d998:	jg     0x40d97d
  40d99a:	xor    BYTE PTR [edi+eax*8],bh
  40d99d:	mov    ds:0x31f2d34c,eax
  40d9a2:	stos   DWORD PTR es:[edi],eax
  40d9a3:	inc    eax
  40d9a4:	pop    ss
  40d9a5:	pop    eax
  40d9a6:	mov    ds:0xbd8cc698,eax
  40d9ab:	jnp    0x40d96d
  40d9ad:	lods   eax,DWORD PTR ds:[esi]
  40d9ae:	cld    
  40d9af:	cwde   
  40d9b0:	out    0x1a,al
  40d9b2:	jns    0x40d9d4
  40d9b4:	jb     0x40d9ef
  40d9b6:	jne    0x40da14
  40d9b8:	stos   BYTE PTR es:[edi],al
  40d9b9:	out    dx,eax
  40d9ba:	(bad)  
  40d9bb:	pop    ebx
  40d9bc:	mov    ds:0xc31b2028,eax
  40d9c1:	(bad)  
  40d9c2:	aam    0x5b
  40d9c4:	int3   
  40d9c5:	cmp    ebx,edi
  40d9c7:	mul    DWORD PTR [edx]
  40d9c9:	sahf   
  40d9ca:	ds popf 
  40d9cc:	pop    eax
  40d9cd:	or     ecx,DWORD PTR [esi]
  40d9cf:	fld    TBYTE PTR [edx-0x6d]
  40d9d2:	mov    al,0x89
  40d9d4:	leave  
  40d9d5:	add    DWORD PTR ds:0xb92b997,edx
  40d9db:	addr16 (bad) 
  40d9dd:	jnp    0x40d9f7
  40d9df:	inc    ebp
  40d9e0:	std    
  40d9e1:	mov    DWORD PTR [edi-0xf969114],esp
  40d9e7:	mov    al,ds:0xbf9facdc
  40d9ec:	fcomp  DWORD PTR [ecx]
  40d9ee:	push   ss
  40d9ef:	daa    
  40d9f0:	and    ecx,DWORD PTR [ecx]
  40d9f2:	xchg   DWORD PTR [ecx-0x6837536a],ecx
  40d9f8:	imul   edx,DWORD PTR [ebx+0x55],0xf1756fd6
  40d9ff:	ss xchg ecx,eax
  40da01:	mov    BYTE PTR [ebx+edx*2-0x7b34f78a],0xa4
  40da09:	dec    ebp
  40da0a:	mov    bh,0x28
  40da0c:	scas   eax,DWORD PTR es:[edi]
  40da0d:	pop    ebp
  40da0e:	push   es
  40da0f:	xchg   esi,eax
  40da10:	out    dx,al
  40da11:	push   esi
  40da12:	adc    BYTE PTR [ebp-0x66aede],dl
  40da18:	add    al,0xdb
  40da1a:	scas   al,BYTE PTR es:[edi]
  40da1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da1c:	pop    es
  40da1d:	nop
  40da1e:	jg     0x40da64
  40da20:	xchg   esi,eax
  40da21:	jo     0x40da31
  40da23:	outs   dx,BYTE PTR ds:[esi]
  40da24:	stos   DWORD PTR es:[edi],eax
  40da25:	mov    dl,dl
  40da27:	cmc    
  40da28:	add    ebx,edx
  40da2a:	stos   BYTE PTR es:[edi],al
  40da2b:	into   
  40da2c:	push   esi
  40da2d:	lods   al,BYTE PTR ds:[esi]
  40da2e:	call   0xfd34:0x30904a21
  40da35:	pop    edx
  40da36:	fimul  WORD PTR [eax]
  40da38:	pop    edx
  40da39:	pop    esp
  40da3a:	xchg   edx,eax
  40da3b:	out    dx,eax
  40da3c:	jns    0x40da2d
  40da3e:	cmp    al,0x6
  40da40:	shl    DWORD PTR [ebx],cl
  40da42:	jp     0x40da1c
  40da44:	mov    edx,0xdab127a2
  40da49:	inc    ecx
  40da4a:	imul   esp,DWORD PTR [ebp-0x50],0xffffffe4
  40da4e:	cmp    ebp,DWORD PTR [ebp-0x157639e0]
  40da54:	je     0x40da79
  40da56:	jge    0x40daa9
  40da58:	pop    ds
  40da59:	scas   eax,DWORD PTR es:[edi]
  40da5a:	mov    dl,0x61
  40da5c:	dec    ecx
  40da5d:	mov    esi,0x82f18aad
  40da62:	dec    esi
  40da63:	test   BYTE PTR [ecx+edi*1],bh
  40da66:	(bad)  
  40da67:	gs push edx
  40da69:	je     0x40da0a
  40da6b:	sti    
  40da6c:	popa   
  40da6d:	jmp    0x8246550c
  40da72:	mov    dh,BYTE PTR [edx+0x62]
  40da75:	imul   esi,ebx,0x77798b22
  40da7b:	sub    DWORD PTR [ecx+ebx*2-0xe],eax
  40da7f:	jp     0x40da55
  40da81:	in     al,dx
  40da82:	arpl   WORD PTR [esi],bx
  40da84:	fcmovnu st,st(1)
  40da86:	daa    
  40da87:	inc    ebx
  40da88:	push   esi
  40da89:	mov    dl,0x9
  40da8b:	nop
  40da8c:	push   edx
  40da8d:	mov    esi,0x1bef9d0a
  40da92:	pop    es
  40da93:	or     al,dl
  40da95:	pop    eax
  40da96:	push   0x4d3b46a9
  40da9b:	dec    edi
  40da9c:	sahf   
  40da9d:	fwait
  40da9e:	das    
  40da9f:	lahf   
  40daa0:	inc    esi
  40daa1:	pop    ds
  40daa2:	test   al,0x16
  40daa4:	and    edi,DWORD PTR [esi]
  40daa6:	shr    DWORD PTR [ecx],0x7a
  40daa9:	mov    DWORD PTR [esi+0x6919557d],ecx
  40daaf:	jae    0x40da36
  40dab1:	ret    0x207f
  40dab4:	jne    0x40da5f
  40dab6:	into   
  40dab7:	aam    0xc
  40dab9:	inc    esi
  40daba:	add    edx,DWORD PTR [ecx+0x7c]
  40dabd:	jmp    0x73ae:0x206a8b76
  40dac4:	ret    
  40dac5:	cli    
  40dac6:	add    ecx,DWORD PTR [esi+esi*2]
  40dac9:	jecxz  0x40dada
  40dacb:	rcl    cl,1
  40dacd:	xchg   esi,eax
  40dace:	lea    esp,[edi]
  40dad0:	cmp    edx,0x1531c2e5
  40dad6:	push   ebp
  40dad7:	and    ebx,ecx
  40dad9:	call   0xdae348ca
  40dade:	push   eax
  40dadf:	popa   
  40dae0:	jbe    0x40dae9
  40dae2:	sbb    eax,0x9d637d41
  40dae7:	and    eax,0xd6d9486e
  40daec:	sbb    BYTE PTR [ecx-0x7],ch
  40daef:	push   0xffffffb4
  40daf1:	ficom  DWORD PTR [eax]
  40daf3:	push   es
  40daf4:	add    ah,BYTE PTR [esi+0x74c99dd]
  40dafa:	mov    cl,0x63
  40dafc:	push   edi
  40dafd:	mov    ecx,0xf4214393
  40db02:	xor    al,BYTE PTR [ebx+0xac78f7]
  40db08:	add    BYTE PTR [eax],dh
  40db0a:	sbb    ch,BYTE PTR [ebx]
  40db0c:	jo     0x40db41
  40db0e:	mov    dl,0x2d
  40db10:	mov    al,ds:0xbf1830b5
  40db15:	inc    eax
  40db16:	in     al,0xd0
  40db18:	int3   
  40db19:	jl     0x40db22
  40db1b:	sbb    eax,0x176f2ad7
  40db20:	mov    dl,0xd5
  40db22:	enter  0x4425,0x3b
  40db26:	into   
  40db27:	xlat   BYTE PTR ds:[ebx]
  40db28:	fimul  WORD PTR [esi-0xe787882]
  40db2e:	push   ds
  40db2f:	mov    dl,0xc6
  40db31:	retf   0xa91b
  40db34:	mov    dl,0x10
  40db36:	clc    
  40db37:	cli    
  40db38:	les    esp,FWORD PTR [ebp-0x5bdd9934]
  40db3e:	jae    0x40dad2
  40db40:	call   0x8639:0xce54ee33
  40db47:	jne    0x40db6c
  40db49:	add    ch,BYTE PTR [esi-0x58]
  40db4c:	in     al,dx
  40db4d:	in     al,dx
  40db4e:	xor    cl,ah
  40db50:	pop    es
  40db51:	push   ds
  40db52:	mov    ds:0x16eaea2f,eax
  40db57:	jg     0xad106cc8
  40db5d:	dec    esi
  40db5e:	(bad)  
  40db5f:	sbb    al,0xa6
  40db61:	gs lahf 
  40db63:	or     al,0x3b
  40db65:	ja     0x40dbe1
  40db67:	jge    0x40dbdf
  40db69:	mov    DWORD PTR [ecx-0x2a],0x1e3b8a5b
  40db70:	dec    esi
  40db71:	and    ch,bh
  40db73:	nop
  40db74:	dec    esp
  40db75:	sbb    BYTE PTR [edi],dl
  40db77:	fisttp QWORD PTR [esi-0x515567c8]
  40db7d:	cdq    
  40db7e:	cli    
  40db7f:	loope  0x40dbb0
  40db81:	outs   dx,DWORD PTR ds:[esi]
  40db82:	popf   
  40db83:	mov    bh,BYTE PTR [edx]
  40db85:	mov    ds:0xcb2e8f59,eax
  40db8a:	push   0xe
  40db8c:	fcomp  DWORD PTR gs:[edi+eiz*2+0x1]
  40db91:	call   0xc6ee:0xdcd27945
  40db98:	data16 into 
  40db9a:	(bad)  
  40db9b:	iret   
  40db9c:	imul   esp,DWORD PTR [edi],0xffffffba
  40db9f:	loope  0x40db56
  40dba1:	sub    BYTE PTR [edx-0x73],al
  40dba4:	dec    edx
  40dba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dba6:	xchg   edx,eax
  40dba7:	stos   DWORD PTR es:[edi],eax
  40dba8:	shr    BYTE PTR [esi-0x22],cl
  40dbab:	adc    bl,dl
  40dbad:	cld    
  40dbae:	mov    eax,DWORD PTR [ebp-0x45]
  40dbb1:	sub    BYTE PTR [eax+0x3590d25],ch
  40dbb7:	mov    bh,0xc6
  40dbb9:	push   0x15
  40dbbb:	es push es
  40dbbd:	mov    al,0x6a
  40dbbf:	and    eax,0x791f09f6
  40dbc4:	sbb    BYTE PTR [ebx],ah
  40dbc6:	inc    eax
  40dbc7:	popf   
  40dbc8:	or     BYTE PTR [ecx+0x139603f5],dh
  40dbce:	stos   DWORD PTR es:[edi],eax
  40dbcf:	sub    bh,BYTE PTR [edx]
  40dbd1:	ins    DWORD PTR es:[edi],dx
  40dbd2:	jp     0x40dc32
  40dbd4:	cli    
  40dbd5:	retf   0xcea8
  40dbd8:	add    dl,BYTE PTR [edi+0xa06df1]
  40dbde:	mov    dh,0x59
  40dbe0:	xchg   ebp,eax
  40dbe1:	and    ebp,DWORD PTR [ebx+edx*2]
  40dbe4:	lea    ecx,[eax]
  40dbe6:	sbb    esp,DWORD PTR [edi]
  40dbe8:	arpl   sp,bx
  40dbea:	icebp  
  40dbeb:	push   ds
  40dbec:	sbb    eax,0xd242655a
  40dbf1:	cdq    
  40dbf2:	mov    dh,0x3f
  40dbf4:	mov    ecx,0x4ff74ffa
  40dbf9:	in     eax,0x59
  40dbfb:	sub    eax,0x7b28c6f9
  40dc00:	loope  0x40db8f
  40dc02:	sbb    BYTE PTR [edx+0x1c9c7343],dh
  40dc08:	mov    bh,0x73
  40dc0a:	pop    edi
  40dc0b:	les    edx,FWORD PTR [ecx+esi*4+0x1d]
  40dc0f:	cmp    ecx,DWORD PTR [edi-0x8759b91]
  40dc15:	inc    esi
  40dc16:	vmwrite ebp,DWORD PTR [ecx-0x68]
  40dc1a:	shl    cl,0xe4
  40dc1d:	mov    ebx,DWORD PTR [ebx]
  40dc1f:	fisttp DWORD PTR [ebp-0x3386517f]
  40dc25:	outs   dx,DWORD PTR ds:[esi]
  40dc26:	xor    bl,BYTE PTR [ecx-0x2316123c]
  40dc2c:	add    BYTE PTR [esp+eax*4+0x71d62edc],0x8e
  40dc34:	ja     0x40dc2a
  40dc36:	out    0x71,al
  40dc38:	addr16 rcl al,1
  40dc3b:	repnz push ss
  40dc3d:	pop    ebp
  40dc3e:	xor    ch,BYTE PTR [esi]
  40dc40:	mov    cl,0x25
  40dc42:	lods   al,BYTE PTR ds:[esi]
  40dc43:	jle    0x40dc95
  40dc45:	ret    0x442a
  40dc48:	imul   ebp,DWORD PTR [edx-0xf],0x5802c57e
  40dc4f:	add    BYTE PTR [esi+0x232c7745],al
  40dc55:	xchg   esp,eax
  40dc56:	rcl    dl,1
  40dc58:	mov    dh,0x8f
  40dc5a:	es scas eax,DWORD PTR es:[edi]
  40dc5c:	adc    al,0x82
  40dc5e:	(bad)  
  40dc5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc60:	fmul   st(1),st
  40dc62:	cmp    al,0x22
  40dc64:	les    esp,FWORD PTR [ecx-0x1cec493e]
  40dc6a:	lds    edx,FWORD PTR [ecx+0x16]
  40dc6d:	rcl    BYTE PTR [eax-0x46e11607],1
  40dc73:	mov    cl,BYTE PTR [esp+edx*2]
  40dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc77:	sub    BYTE PTR [ebx+0x3f],0x41
  40dc7b:	pop    ebp
  40dc7c:	into   
  40dc7d:	xchg   esi,eax
  40dc7e:	inc    edx
  40dc7f:	sbb    dl,BYTE PTR [ebx-0x22]
  40dc82:	inc    esp
  40dc83:	push   es
  40dc84:	add    edx,DWORD PTR [esi-0x7085cb2e]
  40dc8a:	fsub   DWORD PTR [ebp+0x55]
  40dc8d:	(bad)  
  40dc8e:	in     al,dx
  40dc8f:	adc    BYTE PTR [esi],ah
  40dc91:	cmp    BYTE PTR [edx+0x48d5f325],0xc0
  40dc98:	push   eax
  40dc99:	repnz fs cmc 
  40dc9c:	ja     0x40dc6f
  40dc9e:	dec    ebp
  40dc9f:	pop    edx
  40dca0:	cmp    DWORD PTR [esi-0x14e4ea1f],ecx
  40dca6:	mov    bh,0xfd
  40dca8:	fisub  DWORD PTR ds:0x76bb6d76
  40dcae:	mov    edi,0xfa1c9deb
  40dcb3:	inc    eax
  40dcb4:	xor    eax,0x68e15330
  40dcb9:	idiv   dl
  40dcbb:	retf   
  40dcbc:	iret   
  40dcbd:	imul   esi,DWORD PTR [edx+edi*1-0x6b66fdb1],0xd
  40dcc5:	add    al,BYTE PTR [ebp-0x6f]
  40dcc8:	in     eax,dx
  40dcc9:	cmp    DWORD PTR [ebx-0x79b5c5b3],0x25
  40dcd0:	cld    
  40dcd1:	add    eax,0xc9546bab
  40dcd6:	add    bl,BYTE PTR [ebx]
  40dcd8:	(bad)  
  40dcd9:	xlat   BYTE PTR ds:[ebx]
  40dcda:	test   al,0xb0
  40dcdc:	inc    esp
  40dcdd:	mov    cl,0xda
  40dcdf:	dec    eax
  40dce0:	jp     0x40dd07
  40dce2:	mov    esp,0x64ecf4c5
  40dce7:	and    eax,0xd51d245
  40dcec:	das    
  40dced:	(bad)  
  40dcee:	loop   0x40dd46
  40dcf0:	sub    cl,BYTE PTR [eax-0x6f]
  40dcf3:	jno    0x40dc85
  40dcf5:	gs pushf 
  40dcf7:	xchg   esi,eax
  40dcf8:	mov    ds:0x2b99b8d3,al
  40dcfd:	aas    
  40dcfe:	ds icebp 
  40dd00:	pop    edi
  40dd01:	int3   
  40dd02:	inc    esi
  40dd03:	push   esi
  40dd04:	out    0xd2,eax
  40dd06:	pop    esi
  40dd07:	out    dx,al
  40dd08:	in     eax,dx
  40dd09:	push   0x926eada7
  40dd0e:	test   eax,0x3f9da116
  40dd13:	mov    cl,0xd0
  40dd15:	retf   
  40dd16:	cs jno 0x40dd2b
  40dd19:	shr    DWORD PTR [esi-0x75],0x6d
  40dd1d:	enter  0xbba0,0x9b
  40dd21:	cmp    ebx,0x831bbb9f
  40dd27:	inc    eax
  40dd28:	push   esp
  40dd29:	lahf   
  40dd2a:	xor    esi,ebx
  40dd2c:	xchg   ebx,eax
  40dd2d:	fwait
  40dd2e:	mov    al,ch
  40dd30:	pop    ebx
  40dd31:	xor    eax,0x7c2d6b36
  40dd36:	or     BYTE PTR [edi+0x19587386],cl
  40dd3c:	(bad)  
  40dd3d:	outs   dx,DWORD PTR ds:[esi]
  40dd3e:	sbb    al,bh
  40dd40:	mov    edx,DWORD PTR [edi-0x6f]
  40dd43:	mov    al,fs:0xaff4af68
  40dd49:	lahf   
  40dd4a:	and    esp,DWORD PTR [ebp+0x3d7015ab]
  40dd50:	mov    esi,0x40d548cf
  40dd55:	mov    WORD PTR [edi],cs
  40dd57:	les    edi,FWORD PTR [ecx+0x4e264701]
  40dd5d:	es or  ch,dl
  40dd60:	push   eax
  40dd61:	nop
  40dd62:	and    eax,edx
  40dd64:	call   0x120a:0x4fa92613
  40dd6b:	and    ebp,DWORD PTR [edx+0xe]
  40dd6e:	(bad)  
  40dd6f:	iret   
  40dd70:	push   ebp
  40dd71:	rol    DWORD PTR [edi],0xb4
  40dd74:	jbe    0x40dda2
  40dd76:	test   BYTE PTR [esi-0x1894e6b7],0x4e
  40dd7d:	and    ch,ch
  40dd7f:	popf   
  40dd80:	iret   
  40dd81:	mov    ebx,0x4b9695f3
  40dd86:	mul    ah
  40dd88:	dec    edx
  40dd89:	sbb    DWORD PTR [bp+si],edx
  40dd8c:	adc    bh,BYTE PTR [esi+0x5e]
  40dd8f:	arpl   WORD PTR [ebx],dx
  40dd91:	fs dec esp
  40dd93:	stc    
  40dd94:	and    DWORD PTR [esp+edi*2+0x42],ebp
  40dd98:	push   0xc7e9b677
  40dd9d:	jo     0x40de12
  40dd9f:	xor    al,0xc8
  40dda1:	jmp    0x5bedb71c
  40dda6:	lods   eax,DWORD PTR gs:[esi]
  40dda8:	jp     0x40dd85
  40ddaa:	jmp    0x40ddfb
  40ddac:	and    al,0xa7
  40ddae:	retf   
  40ddaf:	cld    
  40ddb0:	iret   
  40ddb1:	mov    ds:0x6d541d53,eax
  40ddb6:	test   esi,esp
  40ddb8:	pop    ebp
  40ddb9:	(bad)  
  40ddba:	cmp    dh,bl
  40ddbc:	nop
  40ddbd:	aaa    
  40ddbe:	push   ss
  40ddbf:	push   cs
  40ddc0:	pushf  
  40ddc1:	ror    DWORD PTR [edi+0x63],cl
  40ddc4:	popf   
  40ddc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddc6:	retf   0x85b4
  40ddc9:	test   eax,0xff54e853
  40ddce:	mov    dl,0xb
  40ddd0:	mov    ds:0xc328f97d,al
  40ddd5:	sbb    al,0xdc
  40ddd7:	fwait
  40ddd8:	pop    edi
  40ddd9:	cmp    dh,BYTE PTR [edx-0x7a7be05]
  40dddf:	or     DWORD PTR [edx+0x5efcc97e],ebp
  40dde5:	sbb    al,0x4a
  40dde7:	inc    ecx
  40dde8:	xlat   BYTE PTR ds:[ebx]
  40dde9:	call   0xdac1b0b8
  40ddee:	pop    edx
  40ddef:	mov    al,0xff
  40ddf1:	sub    bh,dl
  40ddf3:	jne    0x40dda2
  40ddf5:	test   al,0xb2
  40ddf7:	inc    ebp
  40ddf8:	mov    ds:0x4a32008e,eax
  40ddfd:	push   edi
  40ddfe:	mov    ebp,0x76b6a85b
  40de03:	popf   
  40de04:	dec    edi
  40de05:	dec    edi
  40de06:	sbb    al,0x83
  40de08:	rcl    DWORD PTR ss:[edi+0x18844f6a],0x27
  40de10:	add    DWORD PTR [esi],ebp
  40de12:	xor    bl,BYTE PTR [esi+0x3efd450f]
  40de18:	bound  esi,QWORD PTR [ebp+0x46]
  40de1b:	mov    cl,0x19
  40de1d:	fs ins DWORD PTR es:[edi],dx
  40de1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de20:	jl     0x40ddbf
  40de22:	xlat   BYTE PTR ds:[ebx]
  40de23:	ss scas al,BYTE PTR es:[edi]
  40de25:	cmp    ch,dh
  40de27:	xchg   edi,eax
  40de28:	and    eax,0x8134f1ad
  40de2d:	push   ds
  40de2e:	imul   edi,DWORD PTR [ecx],0xffffffd0
  40de31:	dec    ebx
  40de32:	stos   DWORD PTR es:[edi],eax
  40de33:	inc    esp
  40de34:	and    BYTE PTR [ecx-0x4eb51b5d],bl
  40de3a:	imul   edx,edi,0xfffffffc
  40de3d:	imul   edi,DWORD PTR [edx-0x6d],0x3c
  40de41:	mov    ch,0x7b
  40de43:	pop    ebx
  40de44:	out    0x77,al
  40de46:	int    0x4d
  40de48:	test   BYTE PTR [edi+0x20],dl
  40de4b:	mov    esp,0xa4c84eac
  40de50:	xchg   edx,eax
  40de51:	sar    BYTE PTR [esi-0x6e],1
  40de54:	inc    ecx
  40de55:	sub    al,0xe1
  40de57:	addr16 mov dl,0xfa
  40de5a:	bound  edi,QWORD PTR [edi-0x30f487e9]
  40de60:	inc    edx
  40de61:	mov    esp,0x5e044203
  40de66:	cmp    eax,edx
  40de68:	retf   
  40de69:	xchg   edx,ecx
  40de6b:	sbb    eax,0x59d9302a
  40de70:	ins    BYTE PTR es:[edi],dx
  40de71:	sub    ch,ah
  40de73:	cmp    BYTE PTR [esi-0x51],0xa2
  40de77:	mov    bl,0x4b
  40de79:	xchg   esp,eax
  40de7a:	xor    al,0x23
  40de7c:	add    eax,0xda9f8c08
  40de81:	test   BYTE PTR [edi-0x75],bl
  40de84:	aaa    
  40de85:	mov    dh,0x40
  40de87:	lock mov ebp,0x20e138b8
  40de8d:	sub    BYTE PTR [esi+0x47],0x24
  40de91:	mov    eax,ds:0xa72bb10
  40de96:	mov    bl,0x8
  40de98:	gs mov ch,0xf5
  40de9b:	je     0x40de9c
  40de9d:	fcomip st,st(7)
  40de9f:	nop
  40dea0:	dec    ebp
  40dea1:	dec    edx
  40dea2:	inc    edi
  40dea3:	lds    edi,FWORD PTR ds:0x3d8958db
  40dea9:	sbb    al,BYTE PTR [eax]
  40deab:	dec    esp
  40deac:	sahf   
  40dead:	sub    esi,DWORD PTR [esi-0x2a]
  40deb0:	in     al,0xf
  40deb2:	inc    esi
  40deb3:	mov    ds:0xbea0d2d8,al
  40deb8:	ins    BYTE PTR es:[edi],dx
  40deb9:	mov    esp,0xba22823
  40debe:	cmp    di,WORD PTR [edx-0x6c4d8eee]
  40dec5:	xchg   DWORD PTR [edx+eax*1+0x285e76d4],ecx
  40decc:	stos   DWORD PTR es:[edi],eax
  40decd:	pop    ss
  40dece:	jl     0x40df00
  40ded0:	adc    ch,BYTE PTR [ebp-0x11]
  40ded3:	leave  
  40ded4:	cmp    edi,ebp
  40ded6:	push   ebx
  40ded7:	lahf   
  40ded8:	call   0xf6a6:0xf660449b
  40dedf:	iret   
  40dee0:	jae    0x40df51
  40dee2:	shl    BYTE PTR [esi-0x79],1
  40dee5:	jns    0x40df5d
  40dee7:	jg     0x40df40
  40dee9:	xchg   ebx,eax
  40deea:	popf   
  40deeb:	pop    ds
  40deec:	fistp  DWORD PTR [ebp+0x61]
  40deef:	inc    esi
  40def0:	mov    bh,0x2b
  40def2:	mov    edi,0xa5539276
  40def7:	jmp    0x4b55:0x1893d2af
  40defe:	stos   BYTE PTR es:[edi],al
  40deff:	idiv   DWORD PTR [ecx+0xa6cd501]
  40df05:	xchg   edi,eax
  40df06:	imul   esi,DWORD PTR [edx-0x37b97c5e],0xffffffc7
  40df0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df0e:	or     eax,0x60e9250f
  40df13:	out    dx,eax
  40df14:	xlat   BYTE PTR ss:[ebx]
  40df16:	inc    ecx
  40df17:	and    al,0xe3
  40df19:	out    dx,eax
  40df1a:	and    al,dl
  40df1c:	jp     0x40dec0
  40df1e:	cmp    DWORD PTR [esi-0x10990dd],0x8fecc9e2
  40df28:	xor    al,0x5
  40df2a:	mov    ch,0xbf
  40df2c:	pop    esp
  40df2d:	pushf  
  40df2e:	jo     0x40deff
  40df30:	out    0xe,al
  40df32:	popa   
  40df33:	aaa    
  40df34:	mov    ah,0xca
  40df36:	sbb    DWORD PTR [ebx-0x14],eax
  40df39:	pop    ecx
  40df3a:	ret    0xd2dd
  40df3d:	add    al,0xa2
  40df3f:	push   ds
  40df40:	retf   
  40df41:	dec    ebp
  40df42:	frstor [ebx-0x2ae61f53]
  40df48:	mov    ch,0xc4
  40df4a:	or     al,0x37
  40df4c:	xor    eax,0xcf585eb1
  40df51:	ficom  DWORD PTR [ebx+eax*8]
  40df54:	mov    ah,0xd4
  40df56:	dec    eax
  40df57:	push   esp
  40df58:	sub    BYTE PTR [edi],ah
  40df5a:	push   es
  40df5b:	xchg   ebp,eax
  40df5c:	in     al,0xa6
  40df5e:	inc    edi
  40df5f:	(bad)  
  40df60:	out    0x3,al
  40df62:	sub    DWORD PTR [edx-0x3d],0xbf279d7a
  40df69:	jo     0x40df72
  40df6b:	ret    
  40df6c:	data16 mov BYTE PTR [edx+0x621e1fc3],dh
  40df73:	jmp    0x40df39
  40df75:	mov    dh,0xb1
  40df77:	mov    es,WORD PTR ds:0x90c9
  40df7c:	add    BYTE PTR [edx+0x24],ah
  40df7f:	pop    eax
  40df80:	stc    
  40df81:	cmp    al,0xf0
  40df83:	pop    edx
  40df84:	cmp    esp,DWORD PTR [esi-0x4f]
  40df87:	gs icebp 
  40df89:	jns    0x40dfb9
  40df8b:	cs sub ecx,esp
  40df8e:	mov    bh,0xb1
  40df90:	ins    BYTE PTR es:[edi],dx
  40df91:	je     0x40df65
  40df93:	cli    
  40df94:	cmp    bl,BYTE PTR [edx]
  40df96:	fs mov al,0x11
  40df99:	cmp    bh,BYTE PTR [ebp-0x5dc2183e]
  40df9f:	mov    ecx,0x127b3e33
  40dfa4:	mov    cl,0xbc
  40dfa6:	(bad)  
  40dfa7:	int3   
  40dfa8:	or     BYTE PTR [edi],bl
  40dfaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfab:	pop    edi
  40dfac:	mov    eax,0xc05acc4e
  40dfb1:	mov    esi,0x47e63b07
  40dfb6:	pop    eax
  40dfb7:	mov    dl,0xe7
  40dfb9:	mov    ds:0x283859c3,al
  40dfbe:	in     eax,0x7
  40dfc0:	dec    eax
  40dfc1:	shr    BYTE PTR [eax-0x2b],1
  40dfc4:	and    cl,dl
  40dfc6:	jp     0x40dfab
  40dfc8:	push   ds
  40dfc9:	loopne 0x40e034
  40dfcb:	into   
  40dfcc:	push   edx
  40dfcd:	push   ebp
  40dfce:	sbb    al,0x87
  40dfd0:	ja     0x40e01d
  40dfd2:	cmp    ecx,ebx
  40dfd4:	mov    al,0x43
  40dfd6:	fisub  WORD PTR [edi-0x36b23217]
  40dfdc:	cmp    ecx,DWORD PTR ds:0xc2a1365c
  40dfe2:	lea    edi,[esi+0x3ea484ce]
  40dfe8:	bound  ebp,QWORD PTR [eax+esi*4+0x45]
  40dfec:	and    BYTE PTR [ebp-0xd240805],dh
  40dff2:	dec    ecx
  40dff3:	xlat   BYTE PTR ds:[ebx]
  40dff4:	xor    dh,BYTE PTR [edi]
  40dff6:	ja     0x40e035
  40dff8:	add    eax,0xa0f2a476
  40dffd:	mov    bh,bh
  40dfff:	(bad)  
  40e000:	out    dx,al
  40e001:	jge    0x40e06b
  40e003:	pushf  
  40e004:	pop    ecx
  40e005:	mov    eax,ds:0xf4f204d3
  40e00a:	jno    0x40e07d
  40e00c:	adc    BYTE PTR [edx-0x38],dh
  40e00f:	inc    ebx
  40e010:	xchg   esp,eax
  40e011:	dec    edi
  40e012:	dec    esi
  40e013:	pop    edi
  40e014:	aaa    
  40e015:	push   edi
  40e016:	jo     0x40e039
  40e018:	cmp    dl,dh
  40e01a:	pop    es
  40e01b:	push   0xa0817c26
  40e020:	dec    edx
  40e021:	sar    esp,1
  40e023:	test   DWORD PTR [eax-0x180ffc76],esp
  40e029:	jb     0x40e098
  40e02b:	aaa    
  40e02c:	loope  0x40e010
  40e02e:	stos   DWORD PTR es:[edi],eax
  40e02f:	mov    dh,0xfa
  40e031:	jbe    0x40e075
  40e033:	xchg   edx,eax
  40e034:	and    ebx,DWORD PTR [esi]
  40e036:	pop    es
  40e037:	mov    al,ch
  40e039:	repz dec ebp
  40e03b:	lock mov dl,0xa3
  40e03e:	jmp    0x40e082
  40e040:	push   edi
  40e041:	mov    ds:0xdbabbf38,eax
  40e046:	add    DWORD PTR [ebx-0x4e],esp
  40e049:	mov    dl,0xcd
  40e04b:	mov    ss,WORD PTR [edi+0x2d360ddb]
  40e051:	pop    ds
  40e052:	mov    bl,0x57
  40e054:	retf   
  40e055:	repnz cmp dh,BYTE PTR [ebx+0x49]
  40e059:	mov    al,ds:0x21a80b6e
  40e05e:	out    0xd1,al
  40e060:	mov    esp,0x7bbe53ea
  40e065:	lahf   
  40e066:	leave  
  40e067:	icebp  
  40e068:	cld    
  40e069:	mov    esp,0x19c7efee
  40e06e:	cdq    
  40e06f:	rol    BYTE PTR [ebx],1
  40e071:	fstp   QWORD PTR [edx]
  40e073:	into   
  40e074:	clc    
  40e075:	push   ebx
  40e076:	stos   DWORD PTR es:[edi],eax
  40e077:	and    dl,BYTE PTR [edi+esi*8+0x22a8cb18]
  40e07e:	pop    esp
  40e07f:	push   eax
  40e080:	sub    al,0x8d
  40e082:	cmp    eax,0xe5f8f218
  40e087:	ja     0x40e0d0
  40e089:	pop    ebp
  40e08a:	addr16 dec ebx
  40e08c:	dec    edi
  40e08d:	or     BYTE PTR [ebx-0x625431f9],dh
  40e093:	or     al,0xf5
  40e095:	jnp    0x40e06b
  40e097:	aam    0xa8
  40e099:	out    0xd0,al
  40e09b:	jae    0x40e058
  40e09d:	xchg   DWORD PTR [edx],ecx
  40e09f:	int3   
  40e0a0:	jmp    0x40e0b5
  40e0a2:	sub    dl,bh
  40e0a4:	daa    
  40e0a5:	inc    ecx
  40e0a6:	test   esi,0x1f1fb9c7
  40e0ac:	pop    ecx
  40e0ad:	or     al,0x5
  40e0af:	add    DWORD PTR [ecx-0x1ec5be5b],esp
  40e0b5:	inc    edx
  40e0b6:	mov    ebx,0xc8221463
  40e0bb:	push   eax
  40e0bc:	mov    dh,0xe8
  40e0be:	fdiv   QWORD PTR [ebp+0x60]
  40e0c1:	icebp  
  40e0c2:	into   
  40e0c3:	inc    esp
  40e0c4:	mov    al,ds:0xdafa2bad
  40e0c9:	mov    ds:0x36a9046a,eax
  40e0ce:	(bad)  
  40e0d0:	pop    ebp
  40e0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0d2:	sbb    BYTE PTR [esi+0x2f],0xbc
  40e0d6:	inc    eax
  40e0d7:	and    eax,0xc22861db
  40e0dc:	mov    al,0x50
  40e0de:	jecxz  0x40e12d
  40e0e0:	ficom  DWORD PTR [ebp-0x40]
  40e0e3:	sub    al,0xa7
  40e0e5:	into   
  40e0e6:	jne    0x40e129
  40e0e8:	inc    ebx
  40e0e9:	imul   esp,DWORD PTR [eax-0x7249706b],0xffffffa3
  40e0f0:	xchg   esi,eax
  40e0f1:	cmp    BYTE PTR [esi-0x63],bl
  40e0f4:	ret    
  40e0f5:	jl     0x40e0d6
  40e0f7:	and    BYTE PTR [eax-0x64],0x83
  40e0fb:	addr16 sbb ah,al
  40e0fe:	push   es
  40e0ff:	mov    cs,ebp
  40e101:	imul   ebp,DWORD PTR [eax+0x3e9f2726],0x32
  40e108:	aad    0x29
  40e10a:	inc    esp
  40e10b:	adc    eax,DWORD PTR [eax-0x7d]
  40e10e:	repnz (bad) 
  40e110:	(bad)  
  40e111:	jno    0x40e0d7
  40e113:	inc    edi
  40e114:	gs in  eax,dx
  40e116:	xchg   edi,eax
  40e117:	js     0x40e132
  40e119:	push   cs
  40e11a:	adc    eax,0xdcdbcfe9
  40e11f:	int    0x48
  40e121:	pop    edx
  40e122:	add    DWORD PTR [edi+0x60],ecx
  40e125:	push   esi
  40e126:	inc    esi
  40e127:	or     eax,0x800317a6
  40e12c:	js     0x40e169
  40e12e:	inc    ebp
  40e12f:	adc    ch,BYTE PTR [eax]
  40e131:	mov    dl,0x12
  40e133:	and    al,0x4e
  40e135:	out    dx,eax
  40e136:	jmp    0x40e10f
  40e138:	xchg   ecx,eax
  40e139:	inc    esp
  40e13a:	push   ebp
  40e13b:	addr16 xor esp,edi
  40e13e:	push   cs
  40e13f:	iret   
  40e140:	jmp    0xa4081d09
  40e145:	ret    0xaf31
  40e148:	ins    DWORD PTR es:[edi],dx
  40e149:	aad    0xbf
  40e14b:	or     eax,0x2e4ac359
  40e150:	mov    esi,0x69b2ac49
  40e155:	sti    
  40e156:	out    0x92,al
  40e158:	pop    eax
  40e159:	out    dx,eax
  40e15a:	mov    cl,0x16
  40e15c:	mov    esp,0xc982ac51
  40e161:	out    0x53,al
  40e163:	add    BYTE PTR [edi],ch
  40e165:	and    eax,0x7168a243
  40e16a:	repz pusha 
  40e16c:	imul   ecx,DWORD PTR [eax+0x7017c4f7],0xfffffffa
  40e173:	jnp    0x40e1bf
  40e175:	push   esi
  40e176:	dec    ebp
  40e177:	xor    edi,ecx
  40e179:	(bad)  
  40e17a:	fst    st(1)
  40e17c:	push   ebp
  40e17d:	xor    WORD PTR [esi-0x64],bp
  40e181:	test   BYTE PTR [ebp-0x4f],al
  40e184:	ja     0x40e132
  40e186:	(bad)  
  40e187:	in     eax,dx
  40e188:	push   0x55
  40e18a:	mov    esp,0x21b170d8
  40e18f:	mov    ah,0xcc
  40e191:	add    cl,al
  40e193:	(bad)  [edx]
  40e195:	in     al,dx
  40e196:	cmp    eax,0x15edd6a0
  40e19b:	inc    ecx
  40e19c:	pop    edi
  40e19d:	cmp    bh,bh
  40e19f:	bound  ecx,QWORD PTR [eax+0x74]
  40e1a2:	add    edi,DWORD PTR [ebp+eiz*1-0x179e80c]
  40e1a9:	fdivr  DWORD PTR [esi]
  40e1ab:	mov    esp,0x7e94b30a
  40e1b0:	scas   al,BYTE PTR es:[edi]
  40e1b1:	xlat   BYTE PTR ds:[ebx]
  40e1b2:	push   ebp
  40e1b3:	pop    eax
  40e1b4:	jg     0x40e1c6
  40e1b6:	jne    0x40e151
  40e1b8:	adc    BYTE PTR [ecx-0x38],bh
  40e1bb:	and    eax,ecx
  40e1bd:	mov    ah,0xb8
  40e1bf:	mov    eax,0xea184af2
  40e1c4:	arpl   dx,cx
  40e1c6:	jns    0x40e1c9
  40e1c8:	test   al,0xfb
  40e1ca:	test   al,0x17
  40e1cc:	mov    al,0x51
  40e1ce:	out    dx,eax
  40e1cf:	jge    0x40e16e
  40e1d1:	cmp    eax,0x88ce7f57
  40e1d6:	sahf   
  40e1d7:	jp     0x40e164
  40e1d9:	sahf   
  40e1da:	imul   esi,DWORD PTR [edi-0x7a],0x173e98f2
  40e1e1:	add    ch,BYTE PTR [edi+0x47]
  40e1e4:	mov    ds:0x55229368,eax
  40e1e9:	and    dl,BYTE PTR [edx-0xef7e9dd]
  40e1ef:	pop    edi
  40e1f0:	ret    
  40e1f1:	sti    
  40e1f2:	xchg   edx,eax
  40e1f3:	pop    eax
  40e1f4:	pop    edi
  40e1f5:	stc    
  40e1f6:	mov    cl,0x7c
  40e1f8:	clc    
  40e1f9:	js     0x40e23c
  40e1fb:	mov    WORD PTR [esi+0x31c3154d],fs
  40e201:	mov    ah,0xbf
  40e203:	out    dx,eax
  40e204:	pop    esi
  40e205:	div    bl
  40e207:	mov    eax,ds:0x83065258
  40e20c:	xlat   BYTE PTR ds:[ebx]
  40e20d:	(bad)  
  40e20e:	dec    edx
  40e20f:	imul   edx,esp,0xffffffc9
  40e212:	mov    ebx,0x41aa9ece
  40e217:	inc    esi
  40e218:	stos   DWORD PTR es:[edi],eax
  40e219:	inc    esi
  40e21a:	inc    ebx
  40e21b:	jo     0x40e263
  40e21d:	mov    ecx,0x7e9109a0
  40e222:	hlt    
  40e223:	add    BYTE PTR [ebx],ch
  40e225:	push   ss
  40e226:	sub    esp,DWORD PTR [ebp+esi*2-0x19a07dca]
  40e22d:	xchg   esp,eax
  40e22e:	rcl    BYTE PTR [edx-0x7b212936],cl
  40e234:	fucom  st(0)
  40e236:	cwde   
  40e237:	xor    BYTE PTR [edi-0x45],0x76
  40e23b:	add    BYTE PTR [ebp+ebp*1-0x59],al
  40e23f:	call   0x62312083
  40e244:	mov    al,0xe
  40e246:	test   DWORD PTR [eax+eax*1+0x4d3e6ac9],ecx
  40e24d:	jbe    0x40e1cf
  40e24f:	or     al,0xb0
  40e251:	inc    esp
  40e252:	ss hlt 
  40e254:	out    0xce,al
  40e256:	jb     0x40e2af
  40e258:	fcom   DWORD PTR [ebp-0x2d]
  40e25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e25c:	jmp    0xc173242d
  40e261:	frstor [ecx-0x7f42c97a]
  40e267:	mov    esi,0x780b5ba0
  40e26c:	dec    edi
  40e26d:	out    dx,eax
  40e26e:	mov    edi,0x871e6019
  40e273:	ret    0x2c15
  40e276:	and    BYTE PTR [ecx-0x66],ah
  40e279:	cdq    
  40e27a:	jg     0x40e227
  40e27c:	mov    dh,ah
  40e27e:	cmp    BYTE PTR [ebp+edi*4+0x41af61fc],dl
  40e285:	je     0x40e2e0
  40e287:	adc    eax,0x6d8bba8b
  40e28c:	mov    eax,ds:0x8f73adc3
  40e291:	cmp    edi,DWORD PTR [edx-0x25]
  40e294:	aas    
  40e295:	push   0x20195484
  40e29a:	jno    0x40e2e6
  40e29c:	sbb    DWORD PTR [ecx-0x71],0x96a9207b
  40e2a3:	mov    BYTE PTR ds:0x7586fb1e,dl
  40e2a9:	mov    cl,0xea
  40e2ab:	push   ds
  40e2ac:	call   0x4900:0x457a4d16
  40e2b3:	fsubr  DWORD PTR [ebx-0x6f8fa5b2]
  40e2b9:	or     al,0x26
  40e2bb:	inc    esi
  40e2bc:	daa    
  40e2bd:	dec    edx
  40e2be:	ficomp DWORD PTR [esi+0x1bb97fa4]
  40e2c4:	jl     0x40e327
  40e2c6:	pop    ebx
  40e2c7:	push   cs
  40e2c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2c9:	arpl   WORD PTR [edi+0x7f],cx
  40e2cc:	push   edi
  40e2cd:	(bad)
  40e2d2:	or     DWORD PTR [ebp-0x42],esi
  40e2d5:	retf   
  40e2d6:	push   eax
  40e2d7:	call   0x5f076c3e
  40e2dc:	cmp    BYTE PTR [ecx],bh
  40e2de:	scas   al,BYTE PTR es:[edi]
  40e2df:	(bad)  
  40e2e0:	outs   dx,BYTE PTR ds:[esi]
  40e2e1:	ror    ch,cl
  40e2e3:	jns    0x40e2ca
  40e2e5:	inc    edx
  40e2e6:	pop    eax
  40e2e7:	inc    ecx
  40e2e8:	ja     0x40e312
  40e2ea:	inc    edx
  40e2eb:	pushf  
  40e2ec:	fadd   DWORD PTR [ebp+0x56]
  40e2ef:	sahf   
  40e2f0:	cmp    ch,bl
  40e2f2:	mov    al,ds:0x54e4aa0d
  40e2f7:	scas   eax,DWORD PTR es:[edi]
  40e2f8:	push   0xfffffffd
  40e2fa:	add    eax,0xa9c5809d
  40e2ff:	mov    esp,0x29aae9d8
  40e304:	(bad)  
  40e305:	dec    eax
  40e306:	mov    bl,0x94
  40e308:	lahf   
  40e309:	lods   eax,DWORD PTR ds:[esi]
  40e30a:	xor    esp,ecx
  40e30c:	mov    dl,0x25
  40e30e:	out    0x6a,al
  40e310:	inc    esp
  40e311:	pop    ebx
  40e312:	jl     0x40e2dd
  40e314:	ret    
  40e315:	mov    ah,0x78
  40e317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e318:	das    
  40e319:	test   eax,0xb28f9835
  40e31e:	aam    0xea
  40e320:	cwde   
  40e321:	pop    ss
  40e322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e325:	stc    
  40e326:	inc    esp
  40e327:	mov    DWORD PTR [edx-0x43],ebp
  40e32a:	jbe    0x40e36f
  40e32c:	push   eax
  40e32d:	jb     0x40e2d5
  40e32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e330:	mov    al,ds:0x51dc1e
  40e335:	clc    
  40e336:	xchg   edx,eax
  40e337:	cmp    esi,DWORD PTR [edi+0x1a]
  40e33a:	mov    esi,0x5ea6af4a
  40e340:	xchg   edi,eax
  40e341:	jne    0x40e2cd
  40e343:	fwait
  40e344:	sub    BYTE PTR [edi],bh
  40e346:	sub    eax,DWORD PTR [esi+0xb176367]
  40e34c:	out    0xd5,eax
  40e34e:	pushf  
  40e34f:	cld    
  40e350:	cmp    al,0x8b
  40e352:	lea    esi,[ebp+ecx*8+0x3ba85d1a]
  40e359:	cmp    ecx,DWORD PTR [edx]
  40e35b:	push   eax
  40e35c:	rcr    DWORD PTR [edi-0xa2e5517],0x67
  40e363:	xchg   esp,eax
  40e364:	icebp  
  40e365:	lahf   
  40e366:	xchg   ebp,eax
  40e367:	adc    eax,0x430cd31a
  40e36c:	add    DWORD PTR [ebx-0x7],edx
  40e36f:	inc    ebx
  40e370:	inc    ecx
  40e371:	jb     0x40e3c3
  40e373:	add    ecx,eax
  40e375:	pop    edi
  40e376:	sahf   
  40e377:	jne    0x40e369
  40e379:	inc    esi
  40e37a:	xor    ebp,DWORD PTR [ecx-0xa]
  40e37d:	retf   
  40e37e:	push   0x16
  40e380:	jae    0x40e322
  40e382:	pop    ds
  40e383:	rol    edx,0x58
  40e386:	repnz add ch,BYTE PTR [ecx-0x648fa33b]
  40e38d:	ret    
  40e38e:	(bad)  
  40e38f:	mov    ds:0x39c30085,al
  40e394:	sbb    al,0x17
  40e396:	adc    al,0x7c
  40e398:	imul   esp,DWORD PTR [ecx+0x64cf7148],0xdaa22cbf
  40e3a2:	ret    
  40e3a3:	lea    edx,[eax+eiz*2]
  40e3a6:	add    edx,0x2b
  40e3a9:	ins    DWORD PTR es:[edi],dx
  40e3aa:	or     edx,DWORD PTR [edx]
  40e3ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3ad:	add    DWORD PTR [esi+0x3edfafc7],ebx
  40e3b3:	pop    ebx
  40e3b4:	ja     0x40e3a1
  40e3b6:	int    0x4d
  40e3b8:	pop    es
  40e3b9:	and    eax,0x23dbca12
  40e3be:	inc    esp
  40e3bf:	xchg   ecx,eax
  40e3c0:	(bad)  
  40e3c1:	lods   eax,DWORD PTR ds:[esi]
  40e3c2:	out    0x24,eax
  40e3c4:	loopne 0x40e3a6
  40e3c6:	or     esi,DWORD PTR [eax+0x22118c75]
  40e3cc:	cmp    bl,BYTE PTR [ebx-0x7f376986]
  40e3d2:	int3   
  40e3d3:	xor    ecx,eax
  40e3d5:	pop    eax
  40e3d6:	and    bl,ch
  40e3d8:	arpl   bp,dx
  40e3da:	mov    bh,0xf8
  40e3dc:	fist   DWORD PTR [ecx+0x176ca9c6]
  40e3e2:	lds    esp,FWORD PTR ds:0x6e1b1408
  40e3e8:	xor    ecx,DWORD PTR [ebp-0x7d2c156e]
  40e3ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3ef:	aaa    
  40e3f0:	mov    ebx,0xa8953824
  40e3f5:	add    eax,DWORD PTR [ecx-0xf]
  40e3f8:	add    eax,0x67b4889b
  40e3fd:	xchg   DWORD PTR [esi-0x2456775b],ebx
  40e403:	pop    ss
  40e404:	lds    eax,FWORD PTR [edx]
  40e406:	ficom  WORD PTR [eax]
  40e408:	test   eax,0xb03d5bbe
  40e40d:	lea    eax,[edi]
  40e40f:	and    esi,DWORD PTR [edx-0x51c74d27]
  40e415:	ja     0x40e454
  40e417:	lea    esp,[ebx+ecx*1+0x34]
  40e41b:	mov    ah,0x88
  40e41d:	push   edi
  40e41e:	in     eax,dx
  40e41f:	mov    ecx,0xb23653f1
  40e424:	inc    esi
  40e425:	loope  0x40e40d
  40e427:	fisttp QWORD PTR [ecx+0x5e34ff31]
  40e42d:	inc    esp
  40e42e:	ins    DWORD PTR es:[edi],dx
  40e42f:	fsub   DWORD PTR [ebx+0x72]
  40e432:	push   cs
  40e433:	mov    ds:0xcc85b7c9,al
  40e438:	das    
  40e439:	jns    0x40e463
  40e43b:	sbb    BYTE PTR [ebx-0x2a],al
  40e43e:	repz xchg ebp,eax
  40e440:	out    0x4,eax
  40e442:	cmp    DWORD PTR [edi],ecx
  40e444:	and    eax,0xccf447a8
  40e449:	arpl   WORD PTR [edi-0x7e55a96a],bp
  40e44f:	ret    
  40e450:	sbb    al,0xdd
  40e452:	xchg   ecx,eax
  40e453:	out    dx,eax
  40e454:	popf   
  40e455:	aaa    
  40e456:	es sbb al,0xa7
  40e459:	(bad)  
  40e45a:	jg     0x40e485
  40e45c:	push   ds
  40e45d:	(bad)  
  40e45e:	inc    eax
  40e45f:	(bad)  
  40e460:	fistp  QWORD PTR [ecx-0x6c9ab96b]
  40e466:	push   ss
  40e467:	imul   edx,DWORD PTR [esi+0x27],0x62194f05
  40e46e:	leave  
  40e46f:	push   edx
  40e470:	jbe    0x40e435
  40e472:	in     al,0xbe
  40e474:	addr16 int 0x74
  40e477:	fwait
  40e478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e479:	retf   0xeb79
  40e47c:	jo     0x40e4d6
  40e47e:	mov    ds:0x1acaee88,al
  40e483:	jle    0x40e455
  40e485:	add    bh,ch
  40e487:	xchg   BYTE PTR [edi],bl
  40e489:	outs   dx,DWORD PTR ds:[si]
  40e48b:	retf   
  40e48c:	inc    ebp
  40e48d:	and    cl,BYTE PTR [edx+0x7]
  40e490:	std    
  40e491:	or     dl,dl
  40e493:	rcr    DWORD PTR [ecx],1
  40e495:	pop    esi
  40e496:	ins    DWORD PTR es:[edi],dx
  40e497:	sahf   
  40e498:	adc    eax,0xcfeff54f
  40e49d:	mov    edx,0xab43d8e8
  40e4a2:	xor    al,BYTE PTR [edi-0x2c]
  40e4a5:	cmp    BYTE PTR [eax-0x540b4239],al
  40e4ab:	es ins BYTE PTR es:[edi],dx
  40e4ad:	sub    DWORD PTR [edi],0x1b44244f
  40e4b3:	imul   ecx,edi,0xffffffe8
  40e4b6:	(bad)  
  40e4b7:	pop    edi
  40e4b8:	pop    edi
  40e4b9:	gs cmp eax,0x4613ba5e
  40e4bf:	jae    0x40e47c
  40e4c1:	adc    DWORD PTR [eax-0x46],0x12f4d4c2
  40e4c8:	hlt    
  40e4c9:	push   edx
  40e4ca:	lods   al,BYTE PTR ds:[esi]
  40e4cb:	jne    0x40e4ef
  40e4cd:	lock inc edi
  40e4cf:	sar    ah,1
  40e4d1:	xor    DWORD PTR [eax+0x7c22672e],ebx
  40e4d7:	in     al,0x35
  40e4d9:	iret   
  40e4da:	call   0x6ec7:0x1a9ee9f3
  40e4e1:	pop    es
  40e4e2:	sbb    esi,esi
  40e4e4:	adc    cl,BYTE PTR [ecx]
  40e4e6:	ds stos DWORD PTR es:[edi],eax
  40e4e8:	not    DWORD PTR [esp+ebx*2-0x3f2a5fd4]
  40e4ef:	repz add DWORD PTR [ecx-0x7d],ebx
  40e4f3:	xchg   esi,eax
  40e4f4:	sub    edi,DWORD PTR [ebp*8-0xde58133]
  40e4fb:	(bad)  
  40e4fc:	pop    ss
  40e4fd:	mov    DWORD PTR [eax+eax*8+0x6e],edx
  40e501:	ret    0xa685
  40e504:	icebp  
  40e505:	xlat   BYTE PTR ds:[ebx]
  40e506:	dec    eax
  40e507:	cld    
  40e508:	and    al,0xcf
  40e50a:	push   ebp
  40e50b:	or     BYTE PTR [edx-0x64138167],bh
  40e511:	push   ebx
  40e512:	fcomp  QWORD PTR [ecx-0x6dc2a0e8]
  40e518:	sub    BYTE PTR [ecx],0xdd
  40e51b:	inc    edx
  40e51c:	xlat   BYTE PTR ds:[ebx]
  40e51d:	inc    eax
  40e51e:	mov    ebx,0x77b9d380
  40e523:	or     eax,DWORD PTR [ecx-0x20d0a326]
  40e529:	inc    ebx
  40e52a:	adc    edx,eax
  40e52c:	push   0x6300fd4c
  40e531:	mov    esi,0x6ee78dd0
  40e536:	cmp    al,0x7e
  40e538:	inc    esp
  40e539:	add    dh,ch
  40e53b:	adc    al,0xfd
  40e53d:	push   ebx
  40e53e:	inc    edi
  40e53f:	sahf   
  40e540:	mov    esp,0xde90d049
  40e545:	je     0x40e4da
  40e547:	jle    0x40e54b
  40e549:	dec    edx
  40e54a:	call   DWORD PTR [esi+0x6cb58ca7]
  40e550:	je     0x40e565
  40e552:	and    DWORD PTR [ebx],ebx
  40e554:	xor    BYTE PTR ds:0xe1fe5f70,ah
  40e55a:	imul   edi,ecx,0xffffffda
  40e55d:	shr    DWORD PTR [edi+0xd],cl
  40e560:	aam    0x42
  40e562:	iret   
  40e563:	xchg   esp,eax
  40e564:	inc    ebx
  40e565:	adc    dl,BYTE PTR [esi+0x754940af]
  40e56b:	cld    
  40e56c:	ja     0x40e521
  40e56e:	into   
  40e56f:	pop    esp
  40e570:	sar    DWORD PTR [edi-0x40],0x86
  40e574:	je     0x40e538
  40e576:	and    cl,BYTE PTR [ecx]
  40e578:	(bad)  
  40e57a:	pop    ecx
  40e57b:	test   al,0x20
  40e57d:	add    al,0x42
  40e57f:	cmp    ah,BYTE PTR [edx]
  40e581:	cmp    bl,ah
  40e583:	ds retf 
  40e585:	dec    edi
  40e586:	test   DWORD PTR ss:[ebx],ebp
  40e589:	or     al,0x35
  40e58b:	test   al,0x3e
  40e58d:	xchg   ecx,eax
  40e58e:	aad    0x24
  40e590:	es cmc 
  40e592:	add    al,0xeb
  40e594:	fmul   QWORD PTR fs:[edx+0x430aec62]
  40e59b:	sub    esp,0xfffffff7
  40e59e:	cwde   
  40e59f:	and    BYTE PTR [ebp-0x2b00cfb1],0x3d
  40e5a6:	ins    BYTE PTR es:[edi],dx
  40e5a7:	stc    
  40e5a8:	fbld   TBYTE PTR ds:0x8827cd3
  40e5ae:	inc    eax
  40e5af:	mov    ebp,0xf87480db
  40e5b4:	jg     0x40e5de
  40e5b6:	scas   eax,DWORD PTR es:[edi]
  40e5b7:	in     eax,0x51
  40e5b9:	sub    DWORD PTR [eax+0xb],0xbcb92d74
  40e5c0:	jbe    0x40e5fb
  40e5c2:	cli    
  40e5c3:	es push edi
  40e5c5:	cld    
  40e5c6:	pop    ds
  40e5c7:	xor    ch,BYTE PTR [ebp+0x36]
  40e5ca:	retf   0x3420
  40e5cd:	lods   eax,DWORD PTR ds:[esi]
  40e5ce:	adc    eax,0x8d770fd6
  40e5d3:	lahf   
  40e5d4:	dec    ebx
  40e5d5:	push   ebx
  40e5d6:	push   ds
  40e5d7:	dec    ebp
  40e5d8:	nop
  40e5d9:	in     al,0xa3
  40e5db:	and    ebx,DWORD PTR [ebp+0x55]
  40e5de:	push   ebp
  40e5df:	pop    ebx
  40e5e0:	ret    0xc5ca
  40e5e3:	leave  
  40e5e4:	inc    ecx
  40e5e5:	xor    DWORD PTR [edi-0x26],ecx
  40e5e8:	out    0x8f,al
  40e5ea:	mov    cs,WORD PTR [edi+0xa]
  40e5ed:	and    BYTE PTR ds:0x9aa2afad,al
  40e5f3:	xchg   esp,eax
  40e5f4:	in     al,dx
  40e5f5:	and    ecx,DWORD PTR [eax+edi*4+0x39]
  40e5f9:	xor    al,0xf8
  40e5fb:	adc    eax,0xa7aa7ae
  40e600:	and    al,0xeb
  40e602:	dec    edi
  40e603:	int3   
  40e604:	(bad)  
  40e605:	lock ss aas 
  40e608:	adc    dl,BYTE PTR [ecx+eiz*1]
  40e60b:	outs   dx,BYTE PTR ds:[esi]
  40e60c:	test   BYTE PTR [eax-0x1e599c6a],dh
  40e612:	retf   0x751
  40e615:	cmp    eax,DWORD PTR [esi]
  40e617:	sub    al,BYTE PTR [ecx+0x6b]
  40e61a:	rcr    DWORD PTR [esp+ebp*4+0x31],cl
  40e61e:	mov    ebx,0x16bf72a9
  40e623:	push   esp
  40e624:	(bad)  
  40e625:	or     BYTE PTR cs:[bp+si+0x25e3],dh
  40e62b:	adc    edx,esp
  40e62d:	add    BYTE PTR [edx+ecx*8],bl
  40e630:	inc    edx
  40e631:	movups XMMWORD PTR ds:0x4b18f5ac,xmm3
  40e638:	loop   0x40e668
  40e63a:	cmc    
  40e63b:	shl    BYTE PTR [edi-0x60],cl
  40e63e:	rcr    DWORD PTR [edi+0x2fda12d8],cl
  40e644:	cdq    
  40e645:	and    al,BYTE PTR [ebx]
  40e647:	or     esp,DWORD PTR [ecx+0x2a]
  40e64a:	cmp    cl,BYTE PTR [edi-0x20]
  40e64d:	aas    
  40e64e:	xor    DWORD PTR [ecx],esi
  40e650:	mov    ebx,0x473f817c
  40e655:	add    bl,BYTE PTR [esi]
  40e657:	jg     0x40e5f1
  40e659:	loopne 0x40e674
  40e65b:	daa    
  40e65c:	addr16 inc edx
  40e65e:	mov    DWORD PTR [edi],edi
  40e660:	iret   
  40e661:	pop    esi
  40e662:	aad    0xe1
  40e664:	js     0x40e699
  40e666:	xor    BYTE PTR [ecx-0x1aa2760e],0xbd
  40e66d:	sub    DWORD PTR [esi+0x19],0xffffff84
  40e671:	mov    bl,0x68
  40e673:	ds jno 0x40e6e2
  40e676:	add    al,0x96
  40e678:	push   ecx
  40e679:	(bad)  
  40e67a:	lea    esp,[edx+0x40]
  40e67d:	mov    esi,0x4888f2f5
  40e682:	iret   
  40e683:	sub    DWORD PTR [edi+edx*4],0xffffffff
  40e687:	popf   
  40e688:	test   eax,0xa7fdf021
  40e68d:	es jmp 0x40e67b
  40e690:	pop    es
  40e691:	test   BYTE PTR [edx-0x8ac1b54],bh
  40e697:	pop    edi
  40e698:	sti    
  40e699:	sbb    BYTE PTR [edi+ebx*2+0x57cb49ce],dh
  40e6a0:	out    dx,eax
  40e6a1:	xchg   esp,esi
  40e6a3:	cs jae 0x40e699
  40e6a6:	bound  ebx,QWORD PTR [esi+0xb]
  40e6a9:	jmp    0x1fd2:0x11b717d
  40e6b0:	or     BYTE PTR [edx],dh
  40e6b2:	pop    esp
  40e6b3:	iret   
  40e6b4:	(bad)  
  40e6b5:	or     eax,0x3f329ed7
  40e6ba:	add    ecx,esi
  40e6bc:	jge    0x40e6e9
  40e6be:	and    bh,BYTE PTR [esi-0x12]
  40e6c1:	div    edx
  40e6c3:	call   0xc8e8:0x7543a72a
  40e6ca:	(bad)  
  40e6cc:	pop    es
  40e6cd:	cld    
  40e6ce:	arpl   WORD PTR [eax-0x810f65f],cx
  40e6d4:	lds    edx,FWORD PTR ds:0xd01ee97
  40e6da:	lock imul eax,DWORD PTR [ebx],0xffffffcf
  40e6de:	inc    esi
  40e6df:	pop    ecx
  40e6e0:	ret    0xe271
  40e6e3:	arpl   WORD PTR [edi],cx
  40e6e5:	sub    al,0x75
  40e6e7:	jbe    0x40e74e
  40e6e9:	ins    BYTE PTR es:[edi],dx
  40e6ea:	cmp    dl,al
  40e6ec:	push   es
  40e6ed:	push   ebp
  40e6ee:	pop    eax
  40e6ef:	imul   ebp,DWORD PTR [esi],0xe6eaf43b
  40e6f5:	pop    esp
  40e6f6:	mov    BYTE PTR [eax-0x6b690a3e],bh
  40e6fc:	add    ah,cl
  40e6fe:	das    
  40e6ff:	sbb    ah,dh
  40e701:	jae    0x40e6c8
  40e703:	ja     0x40e723
  40e705:	into   
  40e706:	jmp    0x2ca3:0x630c3a3
  40e70d:	jge    0x40e753
  40e70f:	xor    eax,0xa782d0f2
  40e714:	sbb    eax,0x9a4261ef
  40e719:	cmp    BYTE PTR [ecx],ah
  40e71b:	add    edx,0xe3e9b382
  40e721:	jmp    0x40e748
  40e723:	and    dl,ch
  40e725:	jbe    0x40e6f7
  40e727:	repz dec esp
  40e729:	pop    ecx
  40e72a:	test   DWORD PTR [eax],ecx
  40e72c:	in     al,0x5b
  40e72e:	pop    ebx
  40e72f:	xor    al,ah
  40e731:	pop    esp
  40e732:	xor    DWORD PTR [ebp-0x14],ebp
  40e735:	lds    esp,FWORD PTR [edx+0x7e0b164d]
  40e73b:	sub    eax,0x438f56d0
  40e740:	add    al,0xaf
  40e742:	mov    ah,0x28
  40e744:	add    ebx,DWORD PTR [edx+0x7]
  40e747:	or     BYTE PTR [edi],0xbf
  40e74a:	sub    cl,BYTE PTR ss:[esp+eax*1-0x35e5db33]
  40e752:	cmp    ah,BYTE PTR [ecx+0x51bf737f]
  40e758:	dec    edi
  40e759:	jmp    0x2b4b4c0f
  40e75e:	push   ebx
  40e75f:	push   esi
  40e760:	cmp    ecx,ecx
  40e762:	xchg   ebp,eax
  40e763:	mov    edx,0x80ebf72c
  40e768:	ret    0x3e5d
  40e76b:	in     al,dx
  40e76c:	pop    esp
  40e76d:	mov    ecx,0xe076335a
  40e772:	jno    0x40e7ca
  40e774:	imul   esi,DWORD PTR [esi+0x45ee6666],0xbd32e455
  40e77e:	fiadd  DWORD PTR [edx+0x48417259]
  40e784:	(bad)  
  40e785:	ss pop eax
  40e787:	test   al,0x1c
  40e789:	ret    
  40e78a:	push   cs
  40e78b:	and    dh,BYTE PTR [esi-0x7c]
  40e78e:	cs pop eax
  40e790:	xor    eax,0x4b51dbf5
  40e795:	add    DWORD PTR [ebx+ebx*4-0x4d2f1c03],eax
  40e79c:	test   DWORD PTR [eax+0x1165038d],0x8ef3866
  40e7a6:	xchg   ebx,eax
  40e7a7:	xor    BYTE PTR [ebx+ebx*4],dh
  40e7aa:	fidiv  WORD PTR [edx+0x4b393cc3]
  40e7b0:	inc    edi
  40e7b1:	mov    gs,eax
  40e7b3:	mov    ah,0x37
  40e7b5:	sahf   
  40e7b6:	enter  0xaaef,0x47
  40e7ba:	cmp    bl,ch
  40e7bc:	or     al,0x6
  40e7be:	cld    
  40e7bf:	stc    
  40e7c0:	data16 mov bh,0xf6
  40e7c3:	cmp    DWORD PTR [edx+0x5a],ecx
  40e7c6:	sub    BYTE PTR [eax-0x5e],ch
  40e7c9:	rol    DWORD PTR [esi],0xe6
  40e7cc:	std    
  40e7cd:	mov    ecx,0x1d8ce1d9
  40e7d2:	add    ah,bl
  40e7d4:	fstp   TBYTE PTR [eax]
  40e7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7d7:	repnz outs dx,DWORD PTR ds:[esi]
  40e7d9:	imul   esi,DWORD PTR [esi],0xffffff8a
  40e7dc:	ret    0xbcda
  40e7df:	loop   0x40e7c5
  40e7e1:	add    DWORD PTR [edx+0x56],edx
  40e7e4:	adc    ch,0x91
  40e7e7:	out    dx,eax
  40e7e8:	imul   edx,DWORD PTR [edi-0xb811cd0],0xffffffae
  40e7ef:	pop    edx
  40e7f0:	(bad)  
  40e7f2:	inc    esp
  40e7f3:	sbb    ebx,DWORD PTR [ebp-0x21]
  40e7f6:	push   ebp
  40e7f7:	imul   edx,DWORD PTR ds:[ecx-0x7a],0x59
  40e7fc:	xor    eax,0xe9aaeca7
  40e801:	lock arpl sp,si
  40e804:	lock cmp DWORD PTR [edx-0x298d64e4],0xd89a7387
  40e80f:	in     eax,0x16
  40e811:	out    0x84,al
  40e813:	sbb    bh,BYTE PTR [ecx+0x16209f9d]
  40e819:	dec    ebp
  40e81a:	repz and ch,BYTE PTR [eax]
  40e81d:	fwait
  40e81e:	inc    esi
  40e81f:	call   0xf213:0x290e67dd
  40e826:	mov    BYTE PTR ds:0xbf90d7be,bh
  40e82c:	shr    DWORD PTR [edx+0x18b4daae],1
  40e832:	sub    DWORD PTR [ecx],ebp
  40e834:	push   ss
  40e835:	inc    edi
  40e836:	sbb    eax,0x7fdb24c1
  40e83b:	pop    ecx
  40e83c:	xchg   ebp,eax
  40e83d:	lahf   
  40e83e:	inc    edi
  40e83f:	das    
  40e840:	mov    dh,0x67
  40e842:	jne    0x40e7eb
  40e844:	mov    cl,ah
  40e846:	adc    ebx,esi
  40e848:	repnz shl BYTE PTR [ecx-0x26d47479],1
  40e84f:	(bad)  
  40e850:	xchg   DWORD PTR [edi+0x1d],esp
  40e853:	sbb    al,0x15
  40e855:	xor    eax,0x10c159d8
  40e85a:	and    al,0xe9
  40e85c:	jge    0x40e85e
  40e85e:	dec    eax
  40e85f:	mov    bl,ah
  40e861:	call   0xda798df3
  40e866:	and    eax,0x408e7fab
  40e86b:	mov    ecx,0xd31c286d
  40e870:	cdq    
  40e871:	and    al,0x4b
  40e873:	test   eax,0x6c332fd7
  40e878:	or     eax,0x9ba987d6
  40e87d:	fucom  st(0)
  40e87f:	les    ebx,FWORD PTR [eax-0x36]
  40e882:	push   ds
  40e883:	push   edx
  40e884:	xchg   ebx,ebx
  40e886:	push   esi
  40e887:	push   ds
  40e888:	inc    edi
  40e889:	das    
  40e88a:	rcr    DWORD PTR [edi-0x3a],1
  40e88d:	sub    eax,0x741715d2
  40e892:	jno    0x40e8b5
  40e894:	inc    esp
  40e895:	push   ebx
  40e896:	enter  0x27d0,0xcb
  40e89a:	cmp    ch,BYTE PTR [edx+edi*4-0x22045d94]
  40e8a1:	sbb    edi,esi
  40e8a3:	fdivr  QWORD PTR [esi]
  40e8a5:	popa   
  40e8a6:	shl    BYTE PTR [edx],1
  40e8a8:	ret    
  40e8a9:	push   ebx
  40e8aa:	lods   al,BYTE PTR ds:[esi]
  40e8ab:	push   esi
  40e8ac:	rcr    cx,0x58
  40e8b0:	pop    eax
  40e8b1:	ins    DWORD PTR es:[edi],dx
  40e8b2:	mov    eax,0x74d4d5e3
  40e8b7:	das    
  40e8b8:	xor    DWORD PTR [ecx-0x65],esp
  40e8bb:	push   ebp
  40e8bc:	in     eax,0xdc
  40e8be:	inc    esi
  40e8bf:	jbe    0x40e89f
  40e8c1:	mov    esp,DWORD PTR ds:[edi]
  40e8c4:	mov    cl,0x5b
  40e8c6:	imul   ebx,DWORD PTR [ebx-0x7cd13361],0x48
  40e8cd:	ds pushf 
  40e8cf:	jl     0x40e86f
  40e8d1:	fdivr  DWORD PTR [ecx+0x23]
  40e8d4:	xlat   BYTE PTR ds:[ebx]
  40e8d5:	cld    
  40e8d6:	adc    eax,0x53698796
  40e8db:	xchg   BYTE PTR [esi+edx*8-0x58],bl
  40e8df:	das    
  40e8e0:	or     eax,DWORD PTR [esi+0x4b]
  40e8e3:	mov    edx,fs
  40e8e5:	inc    esp
  40e8e6:	pop    edx
  40e8e7:	xor    al,0xeb
  40e8e9:	fld    DWORD PTR [ebx+ebx*8+0x7eac805e]
  40e8f0:	test   eax,0x28f8c0ad
  40e8f5:	mov    ds:0x1570c461,eax
  40e8fa:	jns    0x40e903
  40e8fc:	push   ss
  40e8fd:	out    0x91,al
  40e8ff:	fwait
  40e900:	pop    ecx
  40e901:	pushf  
  40e902:	cdq    
  40e903:	ror    BYTE PTR [edx],0x12
  40e906:	fldenv [ecx-0x6883e486]
  40e90c:	or     edi,DWORD PTR [ecx+0x1aeddb3d]
  40e912:	mov    ebp,0xc0d99b97
  40e917:	daa    
  40e918:	inc    ecx
  40e919:	leave  
  40e91a:	xchg   edx,eax
  40e91b:	adc    al,BYTE PTR [esi-0x1]
  40e91e:	test   al,0x8
  40e920:	jl     0x40e969
  40e922:	fiadd  DWORD PTR [esi-0x46587187]
  40e928:	push   0x53
  40e92a:	stos   BYTE PTR es:[edi],al
  40e92b:	xor    eax,0x6aaae9db
  40e930:	test   BYTE PTR [esi-0x27],dl
  40e933:	xchg   esi,eax
  40e934:	jnp    0x40e8ef
  40e936:	cs retf 0x54df
  40e93a:	aaa    
  40e93b:	pop    ebp
  40e93c:	adc    dh,BYTE PTR [esi]
  40e93e:	ror    BYTE PTR [edx+ebx*8],0xd5
  40e942:	xor    ch,bh
  40e944:	mov    edx,DWORD PTR [ecx+0x77]
  40e947:	pop    es
  40e948:	stos   DWORD PTR es:[edi],eax
  40e949:	jmp    0x40e977
  40e94b:	xlat   BYTE PTR ds:[ebx]
  40e94c:	int    0x3d
  40e94e:	or     eax,0xcd5472b8
  40e953:	sbb    BYTE PTR [eax-0x594ac0a2],cl
  40e959:	out    0x2a,eax
  40e95b:	xchg   ebp,eax
  40e95c:	cdq    
  40e95d:	int    0xf2
  40e95f:	push   ss
  40e960:	sub    eax,0x70131e80
  40e965:	je     0x40e8fc
  40e967:	in     al,dx
  40e968:	pop    eax
  40e969:	pushf  
  40e96a:	xor    al,0x30
  40e96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e96d:	scas   eax,DWORD PTR es:[edi]
  40e96e:	loop   0x40e92b
  40e970:	sub    dl,BYTE PTR [ebx]
  40e972:	ret    0x1223
  40e975:	pop    esi
  40e976:	mov    edx,0x64ec2156
  40e97b:	inc    edx
  40e97c:	cli    
  40e97d:	cwde   
  40e97e:	or     eax,0x7764ddfe
  40e983:	pop    ebx
  40e984:	adc    al,0x2
  40e986:	pushf  
  40e987:	fld    DWORD PTR [esp+edi*8]
  40e98a:	jl     0x40e9ec
  40e98c:	mov    dh,0xdc
  40e98e:	push   eax
  40e98f:	dec    esp
  40e990:	pop    eax
  40e991:	jb     0x40e973
  40e993:	xchg   ch,bh
  40e995:	mov    ch,0x8f
  40e997:	jecxz  0x40ea03
  40e999:	sbb    esp,edi
  40e99b:	les    edi,FWORD PTR [esi+edi*8]
  40e99e:	mov    ebx,0x35310d39
  40e9a3:	dec    edx
  40e9a4:	addr16 pushf 
  40e9a6:	aad    0x91
  40e9a8:	(bad)  
  40e9a9:	jp     0x40e950
  40e9ab:	pop    eax
  40e9ac:	dec    ebx
  40e9ad:	or     al,BYTE PTR [eax+0x6f26896e]
  40e9b3:	(bad)  
  40e9b4:	push   ss
  40e9b5:	repz xchg ebp,eax
  40e9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9b8:	fwait
  40e9b9:	pop    es
  40e9ba:	push   edi
  40e9bb:	ja     0x40e99d
  40e9bd:	adc    DWORD PTR [ecx+ebx*1+0xc],ebx
  40e9c1:	sbb    dl,BYTE PTR [ecx+0x74ca9d93]
  40e9c7:	imul   edx,DWORD PTR [edi-0xc],0x502ccb
  40e9ce:	inc    ebp
  40e9cf:	jp     0x40e9d9
  40e9d1:	test   DWORD PTR [ebx+0x7a9db717],esp
  40e9d7:	outs   dx,DWORD PTR ds:[esi]
  40e9d8:	imul   ebp,DWORD PTR [edx+0x38],0xd4440876
  40e9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9e0:	fisttp DWORD PTR [eax]
  40e9e2:	push   es
  40e9e3:	(bad)  [eax-0x3cf821bc]
  40e9e9:	pop    esp
  40e9ea:	inc    edx
  40e9eb:	xor    eax,0xf34af75
  40e9f0:	arpl   WORD PTR [ebx-0x38efa94f],ax
  40e9f6:	and    bh,BYTE PTR [eax+0x16]
  40e9f9:	lea    esi,[eax+0x47d351cd]
  40e9ff:	aad    0x63
  40ea01:	gs push ecx
  40ea03:	cmc    
  40ea04:	jmp    FWORD PTR [esi+edi*2-0x4a]
  40ea08:	fst    st(2)
  40ea0a:	mul    bl
  40ea0c:	xor    al,al
  40ea0e:	cmp    dl,0xf3
  40ea11:	push   ebx
  40ea12:	call   esi
  40ea14:	inc    esi
  40ea15:	fsub   DWORD PTR [ebx+esi*8]
  40ea18:	xor    ebp,DWORD PTR [edx]
  40ea1a:	cmp    al,0x77
  40ea1c:	in     al,0xe
  40ea1e:	or     DWORD PTR [esi-0x74a96094],edi
  40ea24:	inc    ebx
  40ea25:	add    esp,DWORD PTR [eax-0x484a1c79]
  40ea2b:	add    edi,ebp
  40ea2d:	push   ebx
  40ea2e:	or     esp,DWORD PTR [ebx+esi*2-0x662d18a2]
  40ea35:	inc    ebp
  40ea36:	inc    edx
  40ea37:	dec    ecx
  40ea38:	and    edi,DWORD PTR [ecx+0x37e4caae]
  40ea3e:	aaa    
  40ea3f:	imul   esi,DWORD PTR [esi],0xb3896c8a
  40ea45:	outs   dx,BYTE PTR ds:[esi]
  40ea46:	fmul   DWORD PTR [eax+ecx*1+0x52]
  40ea4a:	out    dx,al
  40ea4b:	inc    ebp
  40ea4c:	ja     0x40eac8
  40ea4e:	ret    0x32fd
  40ea51:	pop    ecx
  40ea52:	jmp    0xd60b:0x7cb1f4d4
  40ea59:	pop    ecx
  40ea5a:	push   ebx
  40ea5b:	pop    ecx
  40ea5c:	jle    0x40ea28
  40ea5e:	popf   
  40ea5f:	adc    bl,BYTE PTR [ecx]
  40ea61:	cmp    eax,0x5fa9eb8a
  40ea66:	rcl    BYTE PTR [edi-0x3a],1
  40ea69:	sbb    DWORD PTR [ebx+0x128a6a4],edx
  40ea6f:	out    0x97,al
  40ea71:	stc    
  40ea72:	les    eax,FWORD PTR [esp+eiz*2]
  40ea75:	ds in  eax,dx
  40ea77:	push   cs
  40ea78:	fidivr DWORD PTR [esi+0x516f58de]
  40ea7e:	cs out dx,eax
  40ea80:	iret   
  40ea81:	sub    BYTE PTR [edi+0x19],0xc1
  40ea85:	mov    eax,ds:0xdd1e0da9
  40ea8a:	jg     0x40ea84
  40ea8c:	mov    ebp,0x287d6d4d
  40ea91:	or     bl,dl
  40ea93:	xchg   esp,eax
  40ea94:	dec    ebx
  40ea95:	mov    gs,esp
  40ea97:	(bad)  
  40ea98:	arpl   bx,bp
  40ea9a:	call   0xb6eab91
  40ea9f:	pop    ds
  40eaa0:	push   ebx
  40eaa1:	or     al,0x67
  40eaa3:	sbb    eax,ebp
  40eaa5:	call   0xfe398bac
  40eaaa:	sbb    dl,bl
  40eaac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaad:	aam    0xd6
  40eaaf:	test   DWORD PTR [eax+0x13f7a14e],esp
  40eab5:	fs cli 
  40eab7:	(bad)  
  40eab8:	fs jb  0x40ea4a
  40eabb:	(bad)
  40eabe:	ins    BYTE PTR es:[edi],dx
  40eabf:	sbb    edx,0xbe52950a
  40eac5:	mov    bh,BYTE PTR [ecx+edi*2]
  40eac8:	cdq    
  40eac9:	push   ecx
  40eaca:	(bad)  
  40eacc:	pusha  
  40eacd:	cld    
  40eace:	aad    0xaa
  40ead0:	mov    esi,0x234b60c0
  40ead5:	lds    ecx,FWORD PTR [ecx-0x3f]
  40ead8:	xchg   ebx,eax
  40ead9:	mov    dl,0x2d
  40eadb:	mov    ?,WORD PTR [ebx]
  40eadd:	mov    ds:0xcf0f43d2,eax
  40eae2:	pop    ecx
  40eae3:	mov    esp,0xaa637c6
  40eae8:	mov    ebp,0x9abd3e5d
  40eaed:	fcomp  QWORD PTR [ebx+0x4c]
  40eaf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaf1:	xchg   edx,eax
  40eaf2:	mov    cl,0x3f
  40eaf4:	hlt    
  40eaf5:	nop
  40eaf6:	mov    dh,ah
  40eaf8:	(bad)  
  40eaf9:	clc    
  40eafa:	ins    BYTE PTR es:[edi],dx
  40eafb:	and    DWORD PTR [edi-0x14db6e93],0x33
  40eb02:	and    al,0x10
  40eb04:	shr    al,cl
  40eb06:	gs dec ebp
  40eb08:	fcmovne st,st(1)
  40eb0a:	aam    0x47
  40eb0c:	xchg   BYTE PTR [ebx-0x13],dh
  40eb0f:	data16 sbb BYTE PTR [ebx+eiz*4-0x33],dh
  40eb14:	pop    edx
  40eb15:	jmp    0x40ead1
  40eb17:	pop    ebp
  40eb18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb19:	or     BYTE PTR [edi-0x68],bl
  40eb1c:	popa   
  40eb1d:	adc    esi,DWORD PTR [edx]
  40eb1f:	loope  0x40eab5
  40eb21:	aas    
  40eb22:	mov    ebp,eax
  40eb24:	adc    bl,0xcd
  40eb27:	xor    esp,esp
  40eb29:	or     ecx,DWORD PTR [ecx-0x5]
  40eb2c:	mov    cl,0x34
  40eb2e:	adc    al,0x7a
  40eb30:	dec    ebx
  40eb31:	fs pop es
  40eb33:	xor    al,0xbb
  40eb35:	repnz mov ebx,0xddca62ab
  40eb3b:	sub    al,0x60
  40eb3d:	dec    DWORD PTR [ebx]
  40eb3f:	arpl   cx,bx
  40eb41:	ret    
  40eb42:	mov    eax,ds:0x7b90349e
  40eb47:	jecxz  0x40eb31
  40eb49:	pushf  
  40eb4a:	pop    esi
  40eb4b:	adc    BYTE PTR [ebx-0x4dd59a5d],dl
  40eb51:	retf   
  40eb52:	sub    dh,BYTE PTR ds:0xd80f3ee2
  40eb58:	sahf   
  40eb59:	mov    ebp,0x27e78cc7
  40eb5e:	push   ss
  40eb5f:	test   dl,ah
  40eb61:	xchg   ecx,eax
  40eb62:	mov    WORD PTR [ebp+eax*1+0x79324981],?
  40eb69:	cld    
  40eb6a:	pop    ebp
  40eb6b:	pop    ebx
  40eb6c:	adc    esi,ebp
  40eb6e:	mov    al,0xba
  40eb70:	xchg   edi,eax
  40eb71:	arpl   WORD PTR [ebp+0x7],ax
  40eb74:	sub    cl,BYTE PTR [ebx]
  40eb76:	cmp    BYTE PTR [eax+0x69],al
  40eb79:	and    cl,bl
  40eb7b:	icebp  
  40eb7c:	cli    
  40eb7d:	mov    bh,0x9
  40eb7f:	mov    esp,0x9320b028
  40eb84:	repz jo 0x40eb8c
  40eb87:	ret    
  40eb88:	jge    0x40eb7e
  40eb8a:	jl     0x40eb43
  40eb8c:	cmp    esp,DWORD PTR ds:0xe93c7c8a
  40eb92:	sbb    al,0x74
  40eb94:	(bad)  
  40eb95:	jmp    0xf3569e0b
  40eb9a:	push   edx
  40eb9b:	pop    esi
  40eb9c:	adc    DWORD PTR [edi],esp
  40eb9e:	icebp  
  40eb9f:	sbb    bh,dh
  40eba1:	inc    ebp
  40eba2:	aam    0x7a
  40eba4:	lods   eax,DWORD PTR ds:[esi]
  40eba5:	outs   dx,BYTE PTR ds:[esi]
  40eba6:	test   BYTE PTR [eax],dl
  40eba8:	in     al,dx
  40eba9:	xchg   DWORD PTR [ecx-0x322725cc],esp
  40ebaf:	shr    BYTE PTR [esi+0x16],1
  40ebb2:	push   ss
  40ebb3:	lea    ebx,[ecx]
  40ebb5:	sar    DWORD PTR [eax+eax*2-0x56],1
  40ebb9:	push   ebx
  40ebba:	jno    0x40eb6c
  40ebbc:	aad    0x43
  40ebbe:	cmp    eax,esi
  40ebc0:	xchg   ebx,eax
  40ebc1:	xor    ah,BYTE PTR [edi+0x64f56b07]
  40ebc7:	xor    eax,0x7d190363
  40ebcc:	repz push 0x2e
  40ebcf:	jle    0x40eb5e
  40ebd1:	bound  edi,QWORD PTR [edx-0x78ed5516]
  40ebd7:	ret    0xac87
  40ebda:	addr16 sub eax,edi
  40ebdd:	sbb    eax,0xae7507eb
  40ebe2:	inc    ebx
  40ebe3:	loopne 0x40ebfd
  40ebe5:	loopne 0x40ec55
  40ebe7:	adc    edi,DWORD PTR [edi-0x1a69f31c]
  40ebed:	fisttp DWORD PTR [ebp+0x47e2a683]
  40ebf3:	mov    DWORD PTR [edi],edx
  40ebf5:	imul   ecx,DWORD PTR [eax-0x7d],0xffffffce
  40ebf9:	test   al,0xed
  40ebfb:	dec    edx
  40ebfc:	aam    0x4b
  40ebfe:	and    al,0xc3
  40ec00:	dec    edx
  40ec01:	push   ebx
  40ec02:	push   ebx
  40ec03:	xchg   edi,eax
  40ec04:	pop    esp
  40ec06:	unpcklps xmm3,xmm0
  40ec09:	cwde   
  40ec0a:	or     BYTE PTR [edx+0x3b],0x5f
  40ec0e:	ins    DWORD PTR es:[edi],dx
  40ec0f:	ror    BYTE PTR [edi+eiz*2-0x39ace471],0x46
  40ec17:	cmc    
  40ec18:	fwait
  40ec19:	adc    ecx,DWORD PTR [edx+0x3c951ca0]
  40ec1f:	dec    edi
  40ec20:	je     0x40ec36
  40ec22:	inc    esp
  40ec23:	and    DWORD PTR [ebx-0x4a2fa36],0x6c0bf81b
  40ec2d:	(bad)  
  40ec2e:	mov    eax,ds:0xe154f15
  40ec33:	inc    ebp
  40ec34:	cmp    eax,0x881f23cd
  40ec39:	push   es
  40ec3a:	cdq    
  40ec3b:	mov    ds:0xb5676fe3,al
  40ec40:	and    DWORD PTR ds:0x7c73f8c6,ebp
  40ec46:	(bad)  
  40ec48:	mov    DWORD PTR [ebx+0x27b94657],ebx
  40ec4e:	pop    ebp
  40ec4f:	xor    esp,edx
  40ec51:	mov    DWORD PTR [edx-0x6a421714],eax
  40ec57:	pop    es
  40ec58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec59:	cmp    al,BYTE PTR [ebp-0x4970690d]
  40ec5f:	aam    0xe6
  40ec61:	loope  0x40ec60
  40ec63:	aad    0xc7
  40ec65:	xchg   ecx,eax
  40ec66:	clc    
  40ec67:	mov    edi,0xd357f798
  40ec6c:	adc    dl,0x65
  40ec6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec70:	cli    
  40ec71:	enter  0xdfd0,0xf3
  40ec75:	inc    esi
  40ec76:	mov    esi,0xe486e5f7
  40ec7b:	or     DWORD PTR [eax+0x1fc4433],edx
  40ec81:	loop   0x40ece6
  40ec83:	out    dx,eax
  40ec84:	mov    dh,0x9a
  40ec86:	pushf  
  40ec87:	repz sar ah,0xb7
  40ec8b:	jae    0x40ec62
  40ec8d:	xchg   esi,eax
  40ec8e:	push   ebp
  40ec8f:	cwde   
  40ec90:	add    DWORD PTR [ebx],ecx
  40ec92:	sub    ah,BYTE PTR [ebx]
  40ec94:	fstp   QWORD PTR [ecx+eax*8+0x4e963a22]
  40ec9b:	rcl    eax,0x79
  40ec9e:	jg     0x40ec66
  40eca0:	add    DWORD PTR [ecx+0x50],edi
  40eca3:	test   eax,0xfca253a1
  40eca8:	xlat   BYTE PTR ds:[ebx]
  40eca9:	cmp    BYTE PTR [edi-0x6a],0xa3
  40ecad:	mov    ch,0x5e
  40ecaf:	and    al,0xd1
  40ecb1:	and    ebx,DWORD PTR [edi]
  40ecb3:	popf   
  40ecb4:	adc    esi,esi
  40ecb6:	xchg   DWORD PTR [ebp+eiz*2+0x51],edx
  40ecba:	or     BYTE PTR ds:0xbcff2b35,ah
  40ecc0:	xor    dl,BYTE PTR [edx]
  40ecc2:	push   0xffffff87
  40ecc4:	cmp    al,0xce
  40ecc6:	xchg   edi,eax
  40ecc7:	je     0x40ec8c
  40ecc9:	adc    DWORD PTR ds:0xeee89660,edi
  40eccf:	xchg   ebp,eax
  40ecd0:	iret   
  40ecd1:	mov    bh,0x6a
  40ecd3:	add    bh,bh
  40ecd5:	mov    BYTE PTR [edx+edi*4],dl
  40ecd8:	jle    0x40ecfe
  40ecda:	xchg   cx,ax
  40ecdc:	mov    ch,0x9c
  40ecde:	repnz add al,0xd
  40ece1:	inc    ebp
  40ece2:	sbb    BYTE PTR [ebx-0x1758d6bf],0x8
  40ece9:	pop    ebx
  40ecea:	(bad)  
  40eceb:	mov    ah,0xa6
  40eced:	dec    eax
  40ecee:	rol    BYTE PTR [edx+0x89e4681],cl
  40ecf4:	inc    BYTE PTR [esi]
  40ecf6:	lahf   
  40ecf7:	out    dx,al
  40ecf8:	mov    bl,bh
  40ecfa:	imul   esp,DWORD PTR ds:0xe45dcd09,0x30
  40ed01:	inc    esi
  40ed02:	in     eax,0x15
  40ed04:	cmp    eax,DWORD PTR [edx+0x5e334148]
  40ed0a:	sahf   
  40ed0b:	jno    0x40ecf3
  40ed0d:	or     eax,0xaaa5ba0f
  40ed12:	retf   0xf38b
  40ed15:	cmp    eax,0x39422ad1
  40ed1a:	pop    esi
  40ed1b:	xor    BYTE PTR [eax],0x20
  40ed1e:	push   eax
  40ed1f:	or     bh,BYTE PTR [esp+edx*4]
  40ed22:	scas   eax,DWORD PTR es:[edi]
  40ed23:	mov    bl,0x1d
  40ed25:	(bad)  
  40ed26:	adc    BYTE PTR [ebp-0x60],cl
  40ed29:	xchg   ecx,eax
  40ed2a:	and    DWORD PTR [edi+0x614c7c60],esi
  40ed30:	bound  edi,QWORD PTR [edx+0x3c]
  40ed33:	sbb    al,0xb
  40ed35:	dec    ebp
  40ed36:	jl     0x40ecf3
  40ed38:	es mov dh,0x41
  40ed3b:	pushf  
  40ed3c:	xor    al,0x8b
  40ed3e:	ss loop 0x40edb9
  40ed41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed42:	neg    DWORD PTR [esi]
  40ed44:	xchg   ebp,eax
  40ed45:	xor    DWORD PTR ds:0x160f991d,ebx
  40ed4b:	pushf  
  40ed4c:	mov    eax,ds:0x5ad54cc2
  40ed51:	sub    dh,BYTE PTR [edi-0x792512d5]
  40ed57:	nop
  40ed58:	xor    BYTE PTR [ebx+edi*8],0xa1
  40ed5c:	xor    edx,DWORD PTR [ecx+0x7064158c]
  40ed62:	sub    al,0xd1
  40ed64:	inc    esi
  40ed65:	mov    ch,0x5d
  40ed67:	(bad)
  40ed6a:	(bad)  
  40ed6b:	adc    DWORD PTR [edx],0xffffff91
  40ed6e:	xchg   edi,eax
  40ed6f:	cwde   
  40ed70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed71:	into   
  40ed72:	out    0x26,al
  40ed74:	xor    ecx,DWORD PTR [ebp+0x14b9f094]
  40ed7a:	cmc    
  40ed7b:	test   bh,cl
  40ed7d:	dec    edi
  40ed7e:	push   edx
  40ed7f:	addr16 inc esp
  40ed81:	push   ebx
  40ed82:	push   ebp
  40ed83:	adc    cl,BYTE PTR [edx+0x6abb6c31]
  40ed89:	ret    0x2c39
  40ed8c:	es mov bh,0xae
  40ed8f:	shl    edi,0xd0
  40ed92:	sub    ax,0x5271
  40ed97:	pop    ds
  40ed98:	jg     0x40ed4e
  40ed9a:	xchg   DWORD PTR [edx-0x3a],esp
  40ed9d:	add    eax,0x414dbfb1
  40eda2:	mov    WORD PTR [edi+0x7d],?
  40eda5:	and    ah,0x76
  40eda8:	and    eax,0xe402932f
  40edad:	cli    
  40edae:	inc    eax
  40edaf:	jmp    0x2a851562
  40edb4:	cwde   
  40edb5:	push   edi
  40edb6:	adc    eax,0x78ed7865
  40edbb:	add    dh,bl
  40edbd:	cld    
  40edbe:	(bad)  
  40edbf:	adc    ecx,DWORD PTR gs:[edx]
  40edc2:	ret    0xe4f4
  40edc5:	push   ds
  40edc6:	popf   
  40edc7:	outs   dx,BYTE PTR ds:[esi]
  40edc8:	push   ds
  40edc9:	cs jp  0x40ed57
  40edcc:	and    al,BYTE PTR [ebx+0x23]
  40edcf:	data16 sub al,0x8e
  40edd2:	inc    esp
  40edd3:	gs loop 0x40ed84
  40edd6:	inc    ebp
  40edd7:	push   edi
  40edd8:	and    edi,esp
  40edda:	pop    ebx
  40eddb:	sar    DWORD PTR [edx-0x45],1
  40edde:	mov    al,ch
  40ede0:	inc    edx
  40ede1:	pusha  
  40ede2:	xchg   bh,al
  40ede4:	sti    
  40ede5:	sahf   
  40ede6:	sahf   
  40ede7:	xlat   BYTE PTR ds:[ebx]
  40ede8:	add    DWORD PTR [esi-0x2434346c],eax
  40edee:	leave  
  40edef:	out    dx,eax
  40edf0:	push   esi
  40edf1:	mov    ebp,0xa711a0a
  40edf6:	pop    ecx
  40edf7:	cmp    ah,dh
  40edf9:	inc    ebp
  40edfa:	fild   QWORD PTR [eax]
  40edfc:	adc    cl,BYTE PTR [ebx-0x66]
  40edff:	sti    
  40ee00:	mov    esi,0x49829fbd
  40ee05:	mov    al,ds:0xc8ceb45c
  40ee0a:	sub    cl,BYTE PTR [ebx+0x27]
  40ee0d:	aam    0x75
  40ee0f:	test   eax,0xbac6a136
  40ee14:	add    eax,DWORD PTR [edi+eax*8]
  40ee17:	cli    
  40ee18:	outs   dx,DWORD PTR ds:[esi]
  40ee19:	shl    DWORD PTR [ebx-0xc],cl
  40ee1c:	fstp   TBYTE PTR [ecx+0x3b]
  40ee1f:	push   esp
  40ee20:	jmp    0x40ee99
  40ee22:	sub    al,0xf1
  40ee24:	or     ah,dl
  40ee26:	mov    bh,0x62
  40ee28:	out    0xba,eax
  40ee2a:	mov    ds:0x4b8995a4,al
  40ee2f:	test   al,0xad
  40ee31:	xor    eax,0xe953e4d5
  40ee36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee37:	popa   
  40ee38:	adc    BYTE PTR [ebx],ah
  40ee3a:	mov    edx,0xd1f9f313
  40ee3f:	fld    QWORD PTR [ecx-0x44f64a44]
  40ee45:	std    
  40ee46:	rol    BYTE PTR [ebx-0x39],0xa0
  40ee4a:	mov    ebx,0x6f95fea9
  40ee4f:	jecxz  0x40ee9c
  40ee51:	xchg   ecx,eax
  40ee52:	pop    ebx
  40ee53:	dec    edi
  40ee54:	mov    dl,0x72
  40ee56:	call   0x313ed850
  40ee5b:	inc    ebp
  40ee5c:	dec    ecx
  40ee5d:	or     esp,esp
  40ee5f:	pusha  
  40ee60:	cmp    esi,DWORD PTR [eiz*1-0x661e9e77]
  40ee67:	sub    ah,BYTE PTR [eax+0x500e0a09]
  40ee6d:	cli    
  40ee6e:	jbe    0x40ee29
  40ee70:	fwait
  40ee71:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee73:	mov    al,ds:0x9d706d7d
  40ee78:	ret    0xd118
  40ee7b:	mov    al,0x6a
  40ee7d:	sbb    DWORD PTR [ebp+0x2476df70],ebx
  40ee83:	jp     0x40eed4
  40ee85:	popf   
  40ee86:	fstp   TBYTE PTR [edi+0x49]
  40ee89:	jne    0x40eef4
  40ee8b:	jne    0x40eeda
  40ee8d:	pop    ebp
  40ee8e:	xor    eax,0xea8d4562
  40ee93:	cmp    DWORD PTR [ecx+edx*2-0x705c8367],eax
  40ee9a:	jns    0x40ee85
  40ee9c:	add    BYTE PTR [edi-0x359f4a98],dl
  40eea2:	xchg   ecx,eax
  40eea3:	adc    bl,BYTE PTR [eax+0x2a15a595]
  40eea9:	gs loop 0x40eeda
  40eeac:	clc    
  40eead:	jne    0x40eefc
  40eeaf:	xor    al,0x6b
  40eeb1:	lods   eax,DWORD PTR ds:[esi]
  40eeb2:	scas   eax,DWORD PTR es:[edi]
  40eeb3:	mov    ah,ah
  40eeb5:	shl    BYTE PTR [ecx],cl
  40eeb7:	adc    BYTE PTR [ecx-0x1a100ee],dh
  40eebd:	xor    eax,0x25e91e1b
  40eec2:	mov    WORD PTR es:[eax],cs
  40eec5:	stc    
  40eec6:	sbb    al,cl
  40eec8:	not    al
  40eeca:	inc    ebx
  40eecb:	std    
  40eecc:	mov    cl,0x5d
  40eece:	out    0xbf,al
  40eed0:	adc    al,0x8f
  40eed2:	cli    
  40eed3:	sbb    dh,BYTE PTR [edi-0x6c42abd6]
  40eed9:	loopne 0x40eef6
  40eedb:	packssdw mm5,mm5
  40eede:	sbb    eax,0x23144d5c
  40eee3:	inc    ebp
  40eee4:	inc    esi
  40eee5:	push   esi
  40eee6:	imul   edx,DWORD PTR [esi-0x4d],0xffffff86
  40eeea:	ja     0x40eeb9
  40eeec:	add    dh,BYTE PTR [ebx+0x25]
  40eeef:	inc    edi
  40eef0:	aaa    
  40eef1:	loopne 0x40eed2
  40eef3:	popa   
  40eef4:	std    
  40eef5:	scas   al,BYTE PTR es:[edi]
  40eef6:	test   al,0xec
  40eef8:	or     BYTE PTR [eax],al
  40eefa:	enter  0xfded,0x69
  40eefe:	pop    ds
  40eeff:	jno    0x40ef26
  40ef01:	xchg   esp,eax
  40ef02:	addr16 push eax
  40ef04:	out    dx,al
  40ef05:	and    al,0xfc
  40ef07:	fwait
  40ef08:	jno    0x40eebc
  40ef0a:	pop    edi
  40ef0b:	xchg   ebx,eax
  40ef0c:	in     eax,dx
  40ef0d:	jge    0x40eea3
  40ef0f:	data16 add BYTE PTR [esi-0x7c],dh
  40ef13:	adc    ah,dl
  40ef15:	sbb    al,0xc8
  40ef17:	xlat   BYTE PTR ds:[ebx]
  40ef18:	pop    esp
  40ef19:	jmp    0x1171e5f6
  40ef1e:	fnstenv [eax+0x6b]
  40ef21:	mov    eax,ds:0xc91528f3
  40ef26:	loop   0x40eead
  40ef28:	adc    DWORD PTR [edi+0x1ae03e8],edx
  40ef2e:	aas    
  40ef2f:	pusha  
  40ef30:	in     al,0xea
  40ef32:	mov    al,0x39
  40ef34:	jecxz  0x40eef6
  40ef36:	adc    al,0xe6
  40ef38:	data16 in al,dx
  40ef3a:	cmp    al,0xd0
  40ef3c:	js     0x40ef07
  40ef3e:	lea    ebx,[ebx-0xb]
  40ef41:	dec    edi
  40ef42:	ds (bad) 
  40ef44:	mov    ebx,0x145142b0
  40ef49:	ss push edx
  40ef4b:	ins    BYTE PTR es:[edi],dx
  40ef4c:	out    dx,eax
  40ef4d:	xchg   edi,eax
  40ef4e:	ret    0xa9eb
  40ef51:	mov    es,WORD PTR [esi]
  40ef53:	popf   
  40ef54:	imul   ebp,DWORD PTR [ecx+0x4526a498],0x7d
  40ef5b:	xlat   BYTE PTR ds:[ebx]
  40ef5c:	push   ebx
  40ef5d:	fcmovnb st,st(3)
  40ef5f:	pop    edi
  40ef60:	push   edx
  40ef61:	add    al,0x2a
  40ef63:	test   bh,bl
  40ef65:	out    dx,al
  40ef66:	aaa    
  40ef67:	dec    edx
  40ef68:	pusha  
  40ef69:	cmp    edi,DWORD PTR [ebx+0x4f]
  40ef6c:	cli    
  40ef6d:	adc    bh,BYTE PTR [edi-0x7ede1a7d]
  40ef73:	adc    DWORD PTR [ebx+eiz*2+0x13],esi
  40ef77:	mov    cs:0xdc39e3e9,al
  40ef7d:	mov    ah,0x60
  40ef7f:	pop    edi
  40ef80:	outs   dx,DWORD PTR ds:[esi]
  40ef81:	push   cs
  40ef82:	or     BYTE PTR ds:0xe1bd8ef8,bl
  40ef88:	add    eax,0xa96d2355
  40ef8d:	mov    WORD PTR [edi],es
  40ef8f:	dec    edx
  40ef90:	mov    DWORD PTR [esp+ecx*8-0x12],esi
  40ef94:	pop    eax
  40ef95:	cwde   
  40ef96:	mov    BYTE PTR [ecx],cl
  40ef98:	mov    eax,ds:0xcdcec756
  40ef9d:	in     eax,dx
  40ef9e:	lods   eax,DWORD PTR ds:[esi]
  40ef9f:	pop    ecx
  40efa0:	inc    ax
  40efa2:	add    eax,DWORD PTR [esi+eiz*8+0x2a]
  40efa6:	bound  ecx,QWORD PTR ds:0x905723d6
  40efac:	jae    0x40efac
  40efae:	mov    ah,0x41
  40efb0:	call   0x30354cee
  40efb5:	xor    al,0x7
  40efb7:	pop    eax
  40efb8:	push   0xafac80e9
  40efbd:	jnp    0x40efc8
  40efbf:	mov    ah,0x3b
  40efc1:	lock fwait
  40efc3:	adc    edx,DWORD PTR [edi]
  40efc5:	pop    eax
  40efc6:	or     WORD PTR [edx+0x75adcc82],bp
  40efcd:	mov    eax,0xb5f5978d
  40efd2:	cli    
  40efd3:	test   DWORD PTR [edx+0x7d],ebx
  40efd6:	iret   
  40efd7:	mov    esi,0xc5cdf15c
  40efdc:	push   cs
  40efdd:	add    al,0x2b
  40efdf:	lods   eax,DWORD PTR gs:[esi]
  40efe1:	push   esp
  40efe2:	pop    esi
  40efe3:	lahf   
  40efe4:	and    eax,0x8bab6858
  40efe9:	in     al,dx
  40efea:	mov    dh,0xbd
  40efec:	add    DWORD PTR [edx],eax
  40efee:	inc    BYTE PTR [esi]
  40eff0:	add    eax,0x32b8f416
  40eff5:	pop    ebp
  40eff6:	jge    0x40efa6
  40eff8:	fidivr WORD PTR [esi]
  40effa:	pop    ss
  40effb:	icebp  
  40effc:	or     eax,0x4480d1b5
  40f001:	mov    BYTE PTR [edi-0x34],cl
  40f004:	dec    edx
  40f005:	ins    DWORD PTR es:[edi],dx
  40f006:	mov    edx,0xb7035260
  40f00b:	xchg   ecx,eax
  40f00c:	loop   0x40efbb
  40f00e:	(bad)  
  40f00f:	in     eax,0x3c
  40f011:	mov    dl,0x78
  40f013:	js     0x40f063
  40f015:	pop    edi
  40f016:	xor    DWORD PTR [esi+0x37],ebx
  40f019:	div    BYTE PTR [ecx-0x63b8ce72]
  40f01f:	loop   0x40efcd
  40f021:	iret   
  40f022:	enter  0xa5fa,0xeb
  40f026:	in     al,0xe4
  40f028:	icebp  
  40f029:	jns    0x40f06a
  40f02b:	addr16 out dx,eax
  40f02d:	scas   eax,DWORD PTR es:[edi]
  40f02e:	mov    ds:0x4754d80,eax
  40f033:	or     eax,0x64d6b90c
  40f038:	jmp    0x6fbe:0x638424d5
  40f03f:	jmp    0x40f079
  40f041:	ja     0x40f0ab
  40f043:	push   edi
  40f044:	pop    edx
  40f045:	jae    0x40f048
  40f047:	(bad)  
  40f048:	cld    
  40f049:	test   al,0x74
  40f04b:	stos   DWORD PTR es:[edi],eax
  40f04c:	retf   
  40f04d:	push   ebp
  40f04e:	xchg   ebp,eax
  40f04f:	push   ds
  40f050:	gs ins DWORD PTR es:[edi],dx
  40f052:	mov    ah,0x71
  40f054:	inc    ebp
  40f055:	jbe    0x40f003
  40f057:	xor    DWORD PTR [ebx],eax
  40f059:	loopne 0x40f0a3
  40f05b:	mov    eax,0xa819d4a7
  40f060:	mov    ah,0x9a
  40f062:	push   esi
  40f063:	mov    edx,0x1fdb3dee
  40f068:	ins    DWORD PTR es:[edi],dx
  40f069:	push   eax
  40f06a:	mov    ch,0x30
  40f06c:	mov    ebp,0xaef47a9
  40f071:	add    DWORD PTR [edi+0x5eb9af7a],esp
  40f077:	enter  0x1497,0xac
  40f07b:	push   ecx
  40f07c:	pop    DWORD PTR gs:[esi+ecx*1+0x6b379486]
  40f084:	mov    al,ds:0x2f58d0b
  40f089:	fiadd  DWORD PTR [ebx-0x9]
  40f08c:	ds call 0xe57ef7ea
  40f092:	jmp    0x8014:0x944383bc
  40f099:	jmp    0x2fe4:0x21377591
  40f0a0:	stos   DWORD PTR es:[edi],eax
  40f0a1:	jecxz  0x40f11f
  40f0a3:	inc    DWORD PTR [edx+0x2e]
  40f0a6:	dec    ecx
  40f0a7:	jle    0x40f0bf
  40f0a9:	lds    ebp,FWORD PTR [ecx+0x67]
  40f0ac:	and    esi,eax
  40f0ae:	add    DWORD PTR [ebx-0x2b],ebx
  40f0b1:	iret   
  40f0b2:	dec    esi
  40f0b3:	add    edx,esp
  40f0b5:	cmp    al,0x74
  40f0b7:	jo     0x40f0e8
  40f0b9:	imul   eax,DWORD PTR [eax],0x375ae5ea
  40f0bf:	adc    eax,0x5ab4a0ee
  40f0c4:	and    eax,0xa1182d10
  40f0c9:	adc    esp,ebp
  40f0cb:	sub    eax,DWORD PTR [ebx+0x3823c315]
  40f0d1:	into   
  40f0d2:	ins    BYTE PTR es:[edi],dx
  40f0d3:	push   ecx
  40f0d4:	jg     0x40f0e4
  40f0d6:	jle    0x40f12d
  40f0d8:	mov    esp,?
  40f0da:	adc    ecx,DWORD PTR [ecx+0x52b7183a]
  40f0e0:	shr    BYTE PTR [ebp-0x53],0x26
  40f0e4:	push   es
  40f0e5:	lds    esi,FWORD PTR [eax+0x76]
  40f0e8:	mov    esp,0x75b04183
  40f0ed:	pop    ss
  40f0ee:	retf   
  40f0ef:	adc    eax,0xbccf8ed2
  40f0f4:	mov    eax,0x97b093c6
  40f0f9:	push   esi
  40f0fa:	mov    dh,0x9c
  40f0fc:	dec    ebp
  40f0fd:	pop    esi
  40f0fe:	shl    BYTE PTR ds:0xb1bb6ef1,1
  40f104:	mov    edi,0x6c4f4a3c
  40f109:	(bad)  
  40f10b:	mov    al,ds:0x338340c7
  40f110:	aas    
  40f111:	lods   eax,DWORD PTR ds:[esi]
  40f112:	lds    edi,FWORD PTR ss:[edi+0x783265c7]
  40f119:	push   ebp
  40f11a:	or     esp,DWORD PTR [ebx+0x5dc91910]
  40f120:	lahf   
  40f121:	push   0xffffffec
  40f123:	xor    BYTE PTR [ecx+0x6f3f72e9],ch
  40f129:	xchg   edi,eax
  40f12a:	inc    ecx
  40f12b:	dec    esp
  40f12c:	xor    ah,BYTE PTR [edx-0x43ef791c]
  40f132:	push   esp
  40f133:	jl     0x40f17b
  40f135:	lock or esi,DWORD PTR [edi]
  40f138:	sbb    bl,dl
  40f13a:	clc    
  40f13b:	imul   ecx,DWORD PTR [ecx-0x4a],0xd2060b1a
  40f142:	push   esi
  40f143:	fcmovbe st,st(4)
  40f145:	ins    DWORD PTR es:[edi],dx
  40f146:	and    cl,BYTE PTR [edi-0x6b947808]
  40f14c:	cmp    DWORD PTR [ecx+edi*2-0x60c5427e],esi
  40f153:	ffree  st(3)
  40f155:	xor    esp,DWORD PTR [esi-0x5d2a7829]
  40f15b:	xor    al,0xca
  40f15d:	pop    ebp
  40f15e:	aaa    
  40f15f:	stos   BYTE PTR es:[edi],al
  40f160:	fisub  WORD PTR [esi+0x5f4c5268]
  40f166:	bound  esp,QWORD PTR ds:0x4d53ddb9
  40f16c:	mov    eax,0xfb15aa49
  40f171:	sub    edx,DWORD PTR [edi+0x77]
  40f174:	outs   dx,DWORD PTR ds:[esi]
  40f175:	jae    0x40f100
  40f177:	push   esi
  40f178:	mov    bh,cl
  40f17a:	xchg   esi,eax
  40f17b:	mov    ds:0x2eaec113,eax
  40f180:	hlt    
  40f181:	clc    
  40f182:	je     0x40f13b
  40f184:	and    edx,DWORD PTR [edi-0x45ee1eba]
  40f18a:	sbb    BYTE PTR [ebp-0xe],bh
  40f18d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f18e:	imul   ebx,DWORD PTR [esi],0x65d496c1
  40f194:	add    DWORD PTR [ebx],esi
  40f196:	sbb    BYTE PTR [eax],ch
  40f198:	or     dh,BYTE PTR [eax-0x66f25774]
  40f19e:	add    eax,0x587758b5
  40f1a3:	xchg   edi,eax
  40f1a4:	scas   al,BYTE PTR es:[edi]
  40f1a5:	lahf   
  40f1a6:	les    esp,FWORD PTR [ebx+edi*8+0x2641b54e]
  40f1ad:	jg     0x40f16a
  40f1af:	xor    BYTE PTR [edi],bl
  40f1b1:	lds    edx,FWORD PTR [esi]
  40f1b3:	je     0x40f182
  40f1b5:	add    BYTE PTR [esi],cl
  40f1b7:	pcmpgtw mm3,QWORD PTR [ecx-0x58]
  40f1bb:	inc    eax
  40f1bc:	mov    al,ds:0x943dd5b1
  40f1c1:	in     eax,0x21
  40f1c3:	lods   eax,DWORD PTR ds:[esi]
  40f1c4:	mov    ch,0x95
  40f1c6:	push   edx
  40f1c7:	add    al,0xc9
  40f1c9:	lods   al,BYTE PTR ds:[esi]
  40f1ca:	dec    edi
  40f1cb:	je     0x40f1e3
  40f1cd:	ja     0x40f245
  40f1cf:	push   0x4aa2d5b3
  40f1d4:	cmp    ebx,ecx
  40f1d6:	cmp    edx,DWORD PTR ss:[ebp+ebx*8+0x1204549f]
  40f1de:	mov    edx,ebx
  40f1e0:	pushf  
  40f1e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1e2:	inc    esp
  40f1e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1e4:	sbb    ecx,DWORD PTR [edx+0x28c36b56]
  40f1ea:	loope  0x40f186
  40f1ec:	out    dx,al
  40f1ed:	or     DWORD PTR ds:0xddf4c9f8,eax
  40f1f3:	inc    ebp
  40f1f4:	xchg   ecx,eax
  40f1f5:	das    
  40f1f6:	dec    eax
  40f1f7:	mov    ebx,0xace294ec
  40f1fc:	ss (bad) 
  40f1fe:	cmp    al,0x2
  40f200:	rcl    BYTE PTR [edi+0x28],1
  40f203:	xor    esi,ebp
  40f205:	dec    ecx
  40f206:	fdivr  QWORD PTR [edi+0x2b]
  40f209:	jecxz  0x40f1bb
  40f20b:	cmp    al,0x5b
  40f20d:	add    DWORD PTR [ebp+0x2e503575],edi
  40f213:	push   ecx
  40f214:	ss (bad) 
  40f216:	mov    edx,DWORD PTR [ecx-0x63]
  40f219:	idiv   BYTE PTR [ebx+0x44]
  40f21c:	mov    edx,0x504b5c99
  40f221:	sbb    ebx,DWORD PTR [ebp+0x4b]
  40f224:	js     0x40f273
  40f226:	push   cs
  40f227:	xchg   esp,eax
  40f228:	neg    BYTE PTR [ecx]
  40f22a:	ret    0xfbf2
  40f22d:	lea    esp,[esi+ebp*1+0x4a191edb]
  40f234:	rcl    esp,cl
  40f236:	lods   eax,DWORD PTR ds:[esi]
  40f237:	add    DWORD PTR [edx],edx
  40f239:	inc    eax
  40f23a:	leave  
  40f23b:	and    DWORD PTR [esi],0xffffffc4
  40f23e:	sbb    ecx,ecx
  40f240:	xchg   ecx,eax
  40f241:	mov    edi,0x1033f523
  40f246:	and    eax,0x60552324
  40f24b:	aad    0x32
  40f24d:	xchg   edi,eax
  40f24e:	jp     0x40f1d9
  40f250:	adc    edi,edx
  40f252:	cmp    BYTE PTR [esp+ebx*8+0x3a],ch
  40f256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f257:	std    
  40f258:	and    al,0xaa
  40f25a:	ret    
  40f25b:	sbb    ecx,eax
  40f25d:	ret    0x4d0a
  40f260:	mov    al,ds:0x7ed6c6c4
  40f265:	out    0xf9,eax
  40f267:	xchg   BYTE PTR [eax],dl
  40f269:	mov    al,0x7b
  40f26b:	jg     0x40f24d
  40f26d:	jno    0x40f1fe
  40f26f:	(bad)  
  40f270:	adc    eax,edi
  40f272:	mov    ds:0xddb62da3,eax
  40f277:	out    dx,eax
  40f278:	add    al,0x6e
  40f27a:	pop    ebx
  40f27b:	sbb    al,0xb2
  40f27d:	lods   al,BYTE PTR ds:[esi]
  40f27e:	popa   
  40f27f:	imul   BYTE PTR [ebp+0x48bef139]
  40f285:	not    DWORD PTR [ecx+0xebd88d0]
  40f28b:	repnz mov ebp,edi
  40f28e:	sbb    DWORD PTR [ebx-0x45],esi
  40f291:	jnp    0x40f24d
  40f293:	dec    ebp
  40f294:	ds out dx,al
  40f296:	icebp  
  40f297:	div    DWORD PTR ds:0x33d004df
  40f29d:	icebp  
  40f29e:	repnz cld 
  40f2a0:	push   es
  40f2a1:	and    al,0x89
  40f2a3:	mov    bh,0x72
  40f2a5:	test   al,0xd2
  40f2a7:	dec    esi
  40f2a8:	scas   al,BYTE PTR es:[edi]
  40f2a9:	mov    bl,0xb8
  40f2ab:	out    0xae,eax
  40f2ad:	(bad)  
  40f2ae:	push   edi
  40f2af:	stos   DWORD PTR es:[edi],eax
  40f2b0:	xchg   ecx,eax
  40f2b1:	jmp    0xb5de:0xf60611f6
  40f2b8:	lea    edi,[esi-0x2bb47189]
  40f2be:	mov    bh,0x8f
  40f2c0:	sbb    BYTE PTR [ebp+0x13],0xd8
  40f2c4:	data16 stc 
  40f2c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c7:	shl    BYTE PTR [ebp+0x15],1
  40f2ca:	ror    BYTE PTR [ebp-0x14],0x5a
  40f2ce:	cdq    
  40f2cf:	out    dx,al
  40f2d0:	xchg   ebp,eax
  40f2d1:	fwait
  40f2d2:	ins    DWORD PTR es:[edi],dx
  40f2d3:	mov    ch,0x1b
  40f2d5:	(bad)  
  40f2d7:	(bad)  
  40f2d8:	dec    ebp
  40f2d9:	adc    eax,0x32b15269
  40f2de:	sub    ebp,DWORD PTR [ebx]
  40f2e0:	test   DWORD PTR [edx+eiz*4+0x7a],eax
  40f2e4:	shl    DWORD PTR [ebx+0x51],1
  40f2e7:	dec    edx
  40f2e8:	push   edx
  40f2e9:	adc    eax,0x5faff23d
  40f2ee:	mov    edi,0xd422ac5f
  40f2f3:	fbld   TBYTE PTR [ecx+0x7c276fa2]
  40f2f9:	retf   0x4a02
  40f2fc:	cmc    
  40f2fd:	jle    0x40f324
  40f2ff:	bound  esp,QWORD PTR [ebx]
  40f301:	addr16 loop 0x40f2f2
  40f304:	or     ch,ah
  40f306:	inc    edx
  40f307:	pop    ss
  40f308:	jl     0x40f2cf
  40f30a:	(bad)  
  40f30b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f30c:	mov    ds:0xdd0f705c,al
  40f311:	dec    edi
  40f312:	addr16 xor al,0x97
  40f315:	cmp    ah,BYTE PTR [esi+0x35]
  40f318:	push   edx
  40f319:	cli    
  40f31a:	xchg   BYTE PTR [edi+0x42],cl
  40f31d:	fistp  QWORD PTR [eax-0x1d]
  40f320:	pop    edi
  40f321:	adc    al,0x60
  40f323:	(bad)  
  40f324:	or     al,0x10
  40f326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f327:	jp     0x40f37b
  40f329:	lods   eax,DWORD PTR ds:[esi]
  40f32a:	sbb    ebx,DWORD PTR [eax+0x12958e95]
  40f330:	bound  edx,QWORD PTR [ecx-0x27]
  40f333:	cmp    al,0xbe
  40f335:	lock (bad) 
  40f337:	mov    edx,0x2f42a5de
  40f33c:	in     eax,dx
  40f33d:	sahf   
  40f33e:	xchg   edi,eax
  40f33f:	stc    
  40f340:	inc    ecx
  40f341:	sub    edi,DWORD PTR es:[edx+0x5f387adb]
  40f348:	jnp    0x40f34c
  40f34a:	ror    DWORD PTR [ecx+edi*1+0x41faf31b],1
  40f351:	push   cs
  40f352:	mov    bl,0xc2
  40f354:	pop    eax
  40f355:	pop    edx
  40f356:	inc    edx
  40f357:	call   0xf7ae7648
  40f35c:	push   ebx
  40f35d:	leave  
  40f35e:	mov    eax,ds:0x1a6b4269
  40f363:	jne    0x40f3c2
  40f365:	and    ebx,DWORD PTR [esi]
  40f367:	call   0x514e3062
  40f36c:	push   cs
  40f36d:	push   0xffffff9a
  40f36f:	push   edx
  40f370:	cmp    esi,DWORD PTR [ebx+0x7689f694]
  40f376:	js     0x40f37e
  40f378:	jbe    0x40f307
  40f37a:	push   es
  40f37b:	scas   eax,DWORD PTR es:[edi]
  40f37c:	(bad)  
  40f37d:	outs   dx,BYTE PTR ds:[esi]
  40f37e:	sub    ah,dl
  40f380:	(bad)  
  40f381:	fdivr  st(6),st
  40f383:	fst    QWORD PTR [edx]
  40f385:	call   0x4ef7:0x3147b049
  40f38c:	retf   
  40f38d:	inc    eax
  40f38e:	pextrw eax,(bad),0xc5
  40f390:	test   bh,dl
  40f392:	push   edx
  40f393:	adc    ebx,ebx
  40f395:	push   ebx
  40f396:	adc    dl,BYTE PTR [ecx-0x71]
  40f399:	outs   dx,BYTE PTR ds:[esi]
  40f39a:	mul    BYTE PTR [ebx+0x1b]
  40f39d:	or     eax,0xd4263d22
  40f3a2:	into   
  40f3a3:	retf   0x76ad
  40f3a6:	call   0x9768:0x9b715286
  40f3ad:	nop
  40f3ae:	and    bh,BYTE PTR [ebx+0x1]
  40f3b1:	xor    al,0x69
  40f3b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3b4:	mov    ebp,0x8c7fbc8d
  40f3b9:	jne    0x40f3f6
  40f3bb:	mov    al,BYTE PTR [esi-0x16a25446]
  40f3c1:	mov    ch,0xfd
  40f3c3:	retf   
  40f3c4:	mov    al,0x30
  40f3c6:	imul   ecx,DWORD PTR [esi-0x58],0x571cb81f
  40f3cd:	in     al,dx
  40f3ce:	ins    DWORD PTR es:[edi],dx
  40f3cf:	inc    eax
  40f3d0:	inc    esp
  40f3d1:	bound  eax,QWORD PTR [edx+eiz*8+0x62c4169e]
  40f3d8:	pop    ecx
  40f3d9:	cmp    dh,0xbc
  40f3dc:	jo     0x40f38e
  40f3de:	sub    al,0x29
  40f3e0:	leave  
  40f3e1:	or     BYTE PTR [esi+ebx*2],ch
  40f3e4:	iret   
  40f3e5:	push   0xfffffff4
  40f3e7:	nop
  40f3e8:	push   esi
  40f3e9:	mov    DWORD PTR [edi],ecx
  40f3eb:	iret   
  40f3ec:	test   esi,esi
  40f3ee:	lods   al,BYTE PTR ds:[esi]
  40f3ef:	add    dh,BYTE PTR [edi-0x482e157e]
  40f3f5:	test   al,0x2b
  40f3f7:	xchg   BYTE PTR [edi],ah
  40f3f9:	xchg   ebp,eax
  40f3fa:	xor    DWORD PTR [eax+0x13],ebp
  40f3fd:	(bad)  
  40f3fe:	push   eax
  40f3ff:	add    BYTE PTR [ebx+0x45fe42e8],dh
  40f405:	cmp    cl,BYTE PTR [esi+ebp*1]
  40f408:	aad    0xc6
  40f40a:	xchg   edi,eax
  40f40b:	aas    
  40f40c:	or     BYTE PTR [edi+edx*4],ch
  40f40f:	clc    
  40f410:	loop   0x40f413
  40f412:	in     eax,dx
  40f413:	loope  0x40f3c2
  40f415:	rsqrtps xmm1,XMMWORD PTR [ecx-0x1b4d1de9]
  40f41c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40f41e:	aad    0x67
  40f420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f421:	xor    al,0xfa
  40f423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f424:	xchg   esi,eax
  40f425:	jmp    FWORD PTR [edx+0x5a47265e]
  40f42b:	inc    ebp
  40f42c:	in     al,0x3b
  40f42e:	scas   al,BYTE PTR es:[edi]
  40f42f:	icebp  
  40f430:	mov    ebx,0x62b86f9
  40f435:	(bad)  
  40f436:	or     ah,bh
  40f438:	push   eax
  40f439:	js     0x40f46c
  40f43b:	inc    ebp
  40f43c:	xor    edi,DWORD PTR [ecx+0x72]
  40f43f:	mov    ds:0x675b587,al
  40f444:	(bad)  
  40f445:	and    BYTE PTR [ebp+0xbe6e50e],cl
  40f44b:	je     0x40f3e8
  40f44d:	xchg   ecx,eax
  40f44e:	fs jg  0x40f3ed
  40f451:	pop    es
  40f452:	out    0x8,al
  40f454:	add    DWORD PTR [edi+0x7c],esp
  40f457:	xchg   esp,eax
  40f458:	fbstp  TBYTE PTR [ebp+ebx*2+0x14]
  40f45c:	dec    esp
  40f45d:	out    dx,eax
  40f45e:	or     cl,BYTE PTR [esi-0x12e05b46]
  40f464:	xchg   edi,eax
  40f465:	stc    
  40f466:	xchg   ebx,eax
  40f467:	mov    ah,0x49
  40f469:	sbb    DWORD PTR [ebp-0x70be8b25],ecx
  40f46f:	rcr    DWORD PTR [esi],0xeb
  40f472:	pop    ds
  40f473:	add    eax,0xeabdecf6
  40f478:	adc    eax,0x9138872f
  40f47d:	scas   al,BYTE PTR es:[edi]
  40f47e:	out    0xac,eax
  40f480:	shl    eax,cl
  40f482:	ror    BYTE PTR [edi],1
  40f484:	loope  0x40f422
  40f486:	add    dl,dl
  40f488:	adc    esi,DWORD PTR [eax*8-0x5c294c5e]
  40f48f:	call   FWORD PTR [ecx-0x445cd707]
  40f495:	data16 xchg BYTE PTR [ecx],ch
  40f498:	addr16 and esi,edx
  40f49b:	ret    
  40f49c:	mov    BYTE PTR [edx+0x768fe6c6],cl
  40f4a2:	stos   DWORD PTR es:[edi],eax
  40f4a3:	pop    ds
  40f4a4:	mov    esi,0x6371501a
  40f4a9:	not    esp
  40f4ab:	dec    ebx
  40f4ac:	popf   
  40f4ad:	push   es
  40f4ae:	add    bh,cl
  40f4b0:	jmp    0x5199:0x269f0e51
  40f4b7:	mov    al,0x72
  40f4b9:	mov    edx,DWORD PTR [edx]
  40f4bb:	aad    0x7
  40f4bd:	int    0x88
  40f4bf:	sar    DWORD PTR [ebx+0x101a9e4d],1
  40f4c5:	push   edx
  40f4c6:	or     dl,bl
  40f4c8:	ficom  DWORD PTR [edx+0x33cc3ab1]
  40f4ce:	mov    cl,0xd2
  40f4d0:	dec    edi
  40f4d1:	dec    edx
  40f4d2:	(bad)  
  40f4d3:	enter  0x7150,0x60
  40f4d7:	inc    esp
  40f4d8:	pop    es
  40f4d9:	jmp    0xcc37:0x6585cb37
  40f4e0:	(bad)  
  40f4e1:	mov    ebx,0xf867e9e2
  40f4e6:	in     eax,dx
  40f4e7:	or     ecx,DWORD PTR [edi+edi*1+0x7ba5dc6e]
  40f4ee:	test   DWORD PTR [esi-0x30],0x6bdc4aa3
  40f4f5:	jge    0x40f552
  40f4f7:	js     0x40f50e
  40f4f9:	leave  
  40f4fa:	mov    DWORD PTR [ebx],ecx
  40f4fc:	pop    edx
  40f4fd:	pop    ds
  40f4fe:	outs   dx,DWORD PTR ds:[esi]
  40f4ff:	jae    0x40f517
  40f501:	repnz popa 
  40f503:	loop   0x40f559
  40f505:	ins    DWORD PTR es:[edi],dx
  40f506:	add    esi,DWORD PTR [ecx]
  40f508:	mov    al,0x0
  40f50a:	mov    ebx,0xbd1bf944
  40f50f:	pop    ds
  40f510:	lahf   
  40f511:	jmp    0xbdaf558f
  40f516:	adc    eax,0xb4440e4f
  40f51b:	and    DWORD PTR [ebp+0x1d],0xaf513f92
  40f522:	dec    eax
  40f523:	je     0x40f4d7
  40f525:	inc    ecx
  40f526:	adc    al,0x9e
  40f528:	data16 jo 0x40f4ff
  40f52b:	or     eax,0xbdf082f9
  40f530:	(bad)  
  40f531:	call   0x53159bfb
  40f536:	pop    es
  40f537:	mov    eax,ds:0x9c4c2dc3
  40f53c:	pop    ecx
  40f53d:	fmul   QWORD PTR [edi+eiz*1+0x721f09b9]
  40f544:	dec    ebp
  40f545:	les    ecx,FWORD PTR [ecx]
  40f547:	or     ebp,ebp
  40f549:	mov    BYTE PTR [ecx+0x2b],ah
  40f54c:	bound  edx,QWORD PTR [edi-0x60faed36]
  40f552:	jle    0x40f5a8
  40f554:	dec    esp
  40f555:	repz jbe 0x40f586
  40f558:	jne    0x40f56a
  40f55a:	jl     0x40f5bd
  40f55c:	and    DWORD PTR [esi],esp
  40f55e:	dec    ebx
  40f55f:	push   esi
  40f560:	dec    ebp
  40f561:	sub    ebx,eax
  40f563:	or     DWORD PTR [ebx+0x2959812d],ecx
  40f569:	push   esi
  40f56a:	jno    0x40f4f9
  40f56c:	cmp    dl,BYTE PTR [edi+0x502fa09a]
  40f572:	jnp    0x40f51a
  40f574:	xor    dh,BYTE PTR [ebx+0x3e08eaa6]
  40f57a:	ins    DWORD PTR es:[edi],dx
  40f57b:	adc    cl,dl
  40f57d:	xchg   esi,eax
  40f57e:	mov    al,0xed
  40f580:	xor    ah,ah
  40f582:	push   edx
  40f583:	out    dx,eax
  40f584:	cs pusha 
  40f586:	push   edx
  40f587:	add    dh,cl
  40f589:	int    0x88
  40f58b:	leave  
  40f58c:	ins    BYTE PTR es:[edi],dx
  40f58d:	adc    cl,bl
  40f58f:	push   0xeccce107
  40f594:	call   0x233f:0xd7f2235e
  40f59b:	out    dx,al
  40f59c:	push   eax
  40f59d:	xchg   esp,eax
  40f59e:	shr    DWORD PTR [ecx-0x6b],0x82
  40f5a2:	push   ebx
  40f5a3:	push   edi
  40f5a4:	cmc    
  40f5a5:	stc    
  40f5a6:	nop
  40f5a7:	xchg   esp,eax
  40f5a8:	fst    DWORD PTR [eax+0x59ed6bff]
  40f5ae:	inc    ebp
  40f5af:	add    DWORD PTR [esi-0x6f8e6e09],esp
  40f5b5:	sahf   
  40f5b6:	popf   
  40f5b7:	outs   dx,DWORD PTR ds:[esi]
  40f5b8:	(bad)  
  40f5b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5bb:	(bad)  
  40f5bc:	retf   
  40f5bd:	and    BYTE PTR [edx+0x13077ab5],dl
  40f5c3:	pop    edx
  40f5c4:	mov    dl,0x67
  40f5c6:	push   es
  40f5c7:	mov    dl,0xa7
  40f5c9:	and    al,0xe9
  40f5cb:	xchg   edx,eax
  40f5cc:	dec    edx
  40f5cd:	mov    gs,WORD PTR [edi+eiz*1]
  40f5d0:	loopne 0x40f605
  40f5d2:	push   esp
  40f5d3:	mov    dl,0x1d
  40f5d5:	lock jmp 0xeb9cd7e0
  40f5db:	push   cs
  40f5dc:	into   
  40f5dd:	push   esi
  40f5de:	cwde   
  40f5df:	jp     0x40f5b6
  40f5e1:	shl    BYTE PTR [ebp+0x729d05dc],1
  40f5e7:	sbb    eax,0x49a233f3
  40f5ec:	fmul   DWORD PTR [ebx+0x57ebe3f4]
  40f5f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5f3:	retf   
  40f5f4:	dec    ebp
  40f5f5:	pop    edx
  40f5f6:	ja     0x40f623
  40f5f8:	inc    eax
  40f5f9:	in     al,0x79
  40f5fb:	mov    ebp,0xa789d2e2
  40f600:	shr    BYTE PTR [eax+0x1e],cl
  40f603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f605:	fwait
  40f606:	scas   eax,DWORD PTR es:[edi]
  40f607:	push   ss
  40f608:	retf   0x5447
  40f60b:	mov    dh,0x65
  40f60d:	lea    eax,[esi-0x616379f8]
  40f613:	mov    esp,ebx
  40f615:	push   0x8caf3e80
  40f61a:	add    al,0x26
  40f61c:	in     al,dx
  40f61d:	mov    esp,0xfe486eab
  40f622:	inc    edi
  40f623:	mov    DWORD PTR [ebx],ebp
  40f625:	push   bp
  40f627:	call   0xd4f8:0xc14b8610
  40f62e:	jecxz  0x40f5db
  40f630:	cwde   
  40f631:	mov    ecx,0x9db1959d
  40f636:	jo     0x40f61e
  40f638:	sub    eax,0x40f18af5
  40f63d:	scas   al,BYTE PTR es:[edi]
  40f63e:	aas    
  40f63f:	stos   BYTE PTR es:[edi],al
  40f640:	jns    0x40f5eb
  40f642:	or     ch,BYTE PTR [esi]
  40f644:	lds    esi,FWORD PTR [edx]
  40f646:	out    dx,eax
  40f647:	pop    es
  40f648:	shl    BYTE PTR [edx],1
  40f64a:	pop    eax
  40f64b:	xlat   BYTE PTR ds:[ebx]
  40f64c:	das    
  40f64d:	lock jno 0x40f684
  40f650:	stos   BYTE PTR es:[edi],al
  40f651:	shl    bh,1
  40f653:	pop    edx
  40f654:	add    al,0xfc
  40f656:	mov    ch,0x6e
  40f658:	fmul   st,st(3)
  40f65a:	imul   eax,esi,0xffffffc8
  40f65d:	xchg   edx,eax
  40f65e:	cmc    
  40f65f:	mov    ds:0x7759b370,eax
  40f664:	stc    
  40f665:	and    edi,DWORD PTR [edi-0x579b66ac]
  40f66b:	pop    edx
  40f66c:	xchg   esi,eax
  40f66d:	mov    ebx,0xf09c9c23
  40f672:	sbb    eax,DWORD PTR [eax]
  40f674:	mov    esp,0x5756071d
  40f679:	ins    BYTE PTR es:[edi],dx
  40f67a:	jbe    0x40f646
  40f67c:	les    ecx,FWORD PTR [edx+0x31590fab]
  40f682:	lock fld st(6)
  40f685:	sbb    eax,0xa3413ed1
  40f68a:	dec    esi
  40f68b:	or     BYTE PTR [ebx-0x61],ah
  40f68e:	pop    esp
  40f68f:	sbb    esi,eax
  40f691:	test   BYTE PTR [ebp+0x5d46a273],0xee
  40f698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f699:	fmul   DWORD PTR [ebx+0x55]
  40f69c:	test   al,0xa9
  40f69e:	fs ret 
  40f6a0:	leave  
  40f6a1:	in     eax,0xbf
  40f6a3:	outs   dx,DWORD PTR ds:[esi]
  40f6a4:	lahf   
  40f6a5:	ja     0x40f629
  40f6a7:	dec    eax
  40f6a8:	or     eax,DWORD PTR [ebx-0x455a899d]
  40f6ae:	dec    ebx
  40f6af:	jg     0x40f6d3
  40f6b1:	nop
  40f6b2:	xor    ebx,DWORD PTR [esi]
  40f6b4:	cmc    
  40f6b5:	mov    ebx,0xa4caaa1f
  40f6ba:	test   BYTE PTR [edx+0x336eb819],ah
  40f6c0:	add    eax,0xf8eda030
  40f6c5:	popf   
  40f6c6:	xchg   ebp,eax
  40f6c7:	xor    DWORD PTR [esi-0x28154418],esp
  40f6cd:	cmp    DWORD PTR [edi],ebx
  40f6cf:	inc    eax
  40f6d0:	push   ecx
  40f6d1:	add    eax,0x4206433b
  40f6d6:	stos   DWORD PTR es:[edi],eax
  40f6d7:	or     eax,0xee365b29
  40f6dc:	jne    0x40f6ac
  40f6de:	mov    esi,0x84d96172
  40f6e3:	mov    ebx,0x5f248bbf
  40f6e8:	jg     0x40f6ae
  40f6ea:	(bad)  
  40f6eb:	mov    eax,ds:0x706241ef
  40f6f0:	xchg   BYTE PTR [ebx],al
  40f6f2:	fwait
  40f6f3:	mov    ds:0x82caa5d4,al
  40f6f8:	cwde   
  40f6f9:	jbe    0x40f763
  40f6fb:	scas   al,BYTE PTR es:[edi]
  40f6fc:	lds    esi,FWORD PTR [edx-0x349aadcb]
  40f702:	adc    bl,ah
  40f704:	cmp    ch,cl
  40f706:	xchg   esi,eax
  40f707:	pop    esi
  40f708:	stos   DWORD PTR es:[edi],eax
  40f709:	sar    BYTE PTR [ebx+eax*1],cl
  40f70c:	or     dl,ch
  40f70e:	fwait
  40f70f:	cdq    
  40f710:	in     eax,dx
  40f711:	outs   dx,BYTE PTR ds:[esi]
  40f712:	cmp    esp,DWORD PTR [ebx]
  40f714:	fistp  QWORD PTR [ebx-0x11]
  40f717:	push   ebx
  40f718:	aaa    
  40f719:	or     BYTE PTR [ebx-0x237dbdfe],ch
  40f71f:	or     BYTE PTR [eax+0x6daa5525],cl
  40f725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f726:	mov    ch,0xe2
  40f728:	mov    cl,0x10
  40f72a:	sbb    edi,eax
  40f72c:	push   ss
  40f72d:	bound  edx,QWORD PTR [edx+0xf361c7b]
  40f733:	test   al,0x8c
  40f735:	in     eax,0x9a
  40f737:	loopne 0x40f700
  40f739:	mov    ds:0xb3b80379,al
  40f73e:	fnstenv [esi+eax*4-0x62adf962]
  40f745:	inc    esi
  40f746:	inc    esp
  40f747:	add    edi,ecx
  40f749:	inc    ebx
  40f74a:	mov    ds:0xed04db61,eax
  40f74f:	pop    esp
  40f750:	sub    eax,DWORD PTR [ebx]
  40f752:	loopne 0x40f6e6
  40f754:	push   eax
  40f755:	xor    ebx,ebx
  40f757:	mov    edx,esp
  40f759:	dec    edx
  40f75a:	inc    ebx
  40f75b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0xa75d
  41000c:	sbb    BYTE PTR [edi],ah
  41000e:	aas    
  41000f:	scas   eax,DWORD PTR es:[edi]
  410010:	add    DWORD PTR [ebx-0x7c7ca1c2],0x10
  410017:	jo     0x410004
  410019:	mov    ebx,0xc3008959
  41001e:	mov    dh,0x3c
  410020:	sub    edi,DWORD PTR [edi]
  410022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410023:	dec    eax
  410024:	sbb    esp,DWORD PTR [edi-0x64]
  410027:	jl     0x41001e
  410029:	sti    
  41002a:	sub    bh,dl
  41002c:	mov    esp,DWORD PTR [edi+0x14]
  41002f:	pop    esp
  410030:	xor    BYTE PTR [edi+ebp*2+0x7ef054c8],dl
  410037:	jbe    0x40ffe7
  410039:	or     al,0xef
  41003b:	lahf   
  41003c:	adc    DWORD PTR [ecx-0x65],esi
  41003f:	scas   eax,DWORD PTR es:[edi]
  410040:	sbb    al,0x81
  410042:	fs mov al,0x9
  410045:	rcl    DWORD PTR [eax+0x6c44f6ad],1
  41004b:	scas   eax,DWORD PTR es:[edi]
  41004c:	daa    
  41004d:	icebp  
  41004e:	cmp    dl,dh
  410050:	pop    ecx
  410051:	sub    ah,BYTE PTR [eax+0x30]
  410054:	add    DWORD PTR [esi+0x465be278],esi
  41005a:	and    eax,0x9bce8f0
  41005f:	pop    ss
  410060:	call   0xd122447c
  410065:	scas   al,BYTE PTR es:[edi]
  410066:	and    al,0x21
  410068:	out    dx,eax
  410069:	sub    eax,0x50241178
  41006e:	add    DWORD PTR [ebp-0xc],eax
  410071:	mov    ah,0xb5
  410073:	ret    0xafae
  410076:	icebp  
  410077:	cmc    
  410078:	adc    dh,BYTE PTR [esi+0xc]
  41007b:	xchg   edx,eax
  41007c:	stos   BYTE PTR es:[edi],al
  41007d:	ret    0xdda3
  410080:	outs   dx,BYTE PTR ds:[esi]
  410081:	and    eax,0xa69ab56b
  410086:	and    eax,0xcbc2e2ee
  41008b:	dec    ebx
  41008c:	jno    0x41002d
  41008e:	add    BYTE PTR [ecx+0x69249cdd],0xb5
  410095:	xchg   ebx,eax
  410096:	dec    edi
  410097:	xchg   ebp,eax
  410098:	jmp    0x4100b1
  41009a:	add    DWORD PTR [edx+0xee4bdc1],esi
  4100a0:	jnp    0x4100ef
  4100a2:	ss cmp ah,ch
  4100a5:	xchg   edx,eax
  4100a6:	push   0xffffff91
  4100a8:	sub    DWORD PTR [esi-0x73],0x37951417
  4100af:	add    eax,0xc46e9feb
  4100b4:	sbb    edi,0xe3a5a478
  4100ba:	outs   dx,DWORD PTR ds:[esi]
  4100bb:	dec    esi
  4100bc:	ins    DWORD PTR es:[edi],dx
  4100bd:	cli    
  4100be:	xchg   BYTE PTR [ebx-0x7d],cl
  4100c1:	push   0x2867f3ec
  4100c6:	inc    ecx
  4100c7:	mov    eax,0x753af7c9
  4100cc:	js     0x4100f3
  4100ce:	jnp    0x410118
  4100d0:	fcomp  DWORD PTR [esi-0x67175dc2]
  4100d6:	mov    edi,0xca9357b4
  4100db:	add    ch,BYTE PTR [eax-0x42be1320]
  4100e1:	dec    esp
  4100e2:	pop    edi
  4100e3:	sar    BYTE PTR [ecx+0x0],cl
  4100e6:	mov    bh,0xee
  4100e8:	out    0xb1,eax
  4100ea:	loope  0x4100bf
  4100ec:	inc    esp
  4100ed:	mov    al,0x40
  4100ef:	add    eax,0xc24258be
  4100f4:	jbe    0x410156
  4100f6:	and    al,0xca
  4100f8:	loopne 0x41010d
  4100fa:	sub    ecx,DWORD PTR [edx]
  4100fc:	sbb    esi,0x18
  4100ff:	dec    esi
  410100:	shr    DWORD PTR [esi-0x2],1
  410103:	mov    bl,0xa9
  410105:	inc    edi
  410106:	sub    DWORD PTR [ecx-0x22e06997],ecx
  41010c:	imul   ebx,DWORD PTR [edi],0xfffffff9
  41010f:	inc    ebx
  410110:	fwait
  410111:	mov    cl,BYTE PTR [esi+0x2163d86a]
  410117:	mov    ebx,0x619ae9bd
  41011c:	fst    DWORD PTR [edx]
  41011e:	push   ecx
  41011f:	scas   al,BYTE PTR es:[edi]
  410120:	push   ds
  410121:	or     edi,esi
  410123:	pop    ebp
  410124:	mov    al,ch
  410126:	loopne 0x4100c4
  410128:	in     al,0x91
  41012a:	sub    al,0x6e
  41012c:	mov    edx,DWORD PTR [ebp+0x20]
  41012f:	loopne 0x410128
  410131:	(bad)  
  410132:	out    dx,al
  410133:	inc    ecx
  410134:	iret   
  410135:	loop   0x410104
  410137:	pop    ds
  410138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410139:	inc    BYTE PTR ds:0x383169df
  41013f:	jo     0x41017e
  410141:	pop    edx
  410142:	repz in eax,dx
  410144:	xor    DWORD PTR [edi+0x61],ebp
  410147:	mov    ds:0x9f225911,al
  41014c:	push   esp
  41014d:	xor    dl,BYTE PTR [edi+0x20268d32]
  410153:	jmp    0xe8ed8fde
  410158:	cwde   
  410159:	imul   ecx,DWORD PTR [edx+0xcd0329d],0x56444dc1
  410163:	or     BYTE PTR [ecx+esi*1-0x71],bh
  410167:	retf   
  410168:	loope  0x410165
  41016a:	cmp    BYTE PTR [edx+0x6dc361a9],ch
  410170:	mov    DWORD PTR es:[ecx-0x41],ebx
  410174:	pop    esi
  410175:	jge    0x410135
  410177:	push   cs
  410178:	mov    esp,0xac08e653
  41017d:	mov    ah,0xdc
  41017f:	ds mov eax,0xddcde43c
  410185:	int    0xa7
  410187:	push   edi
  410188:	arpl   WORD PTR [ecx],cx
  41018a:	leave  
  41018b:	shr    DWORD PTR [edi+0xe6b83d4],0x15
  410192:	sub    esp,ecx
  410194:	jl     0x4101cc
  410196:	fidiv  WORD PTR [esi+ebx*2]
  410199:	call   0xe2b9:0x583bc6d6
  4101a0:	jmp    0x5615:0x1b88c6a1
  4101a7:	inc    ecx
  4101a8:	pop    es
  4101a9:	cs jns 0x410161
  4101ac:	jb     0x410189
  4101ae:	dec    ebp
  4101af:	inc    ebp
  4101b0:	pop    ds
  4101b1:	xor    bh,BYTE PTR ds:0x4d710e88
  4101b7:	sub    BYTE PTR [edx+ebx*1+0x122b5a13],al
  4101be:	imul   ebp,DWORD PTR [eax+0x276e9222],0x44b2db3e
  4101c8:	sub    eax,0xdf342def
  4101cd:	gs pop eax
  4101cf:	or     DWORD PTR [eax+eax*2+0x25],esi
  4101d3:	or     eax,0xbe270eef
  4101d8:	jmp    0x29defbd9
  4101dd:	or     BYTE PTR [ecx],ah
  4101df:	sar    BYTE PTR [ecx],cl
  4101e1:	pop    ebp
  4101e2:	fsub   DWORD PTR [edx+0x27]
  4101e5:	in     eax,dx
  4101e6:	retf   
  4101e7:	add    BYTE PTR [esi-0x3a],0x1c
  4101eb:	push   ecx
  4101ec:	sub    DWORD PTR [ecx],ebp
  4101ee:	pop    eax
  4101ef:	and    bl,BYTE PTR [eax+0x29]
  4101f2:	cdq    
  4101f3:	xchg   esp,eax
  4101f4:	mov    bl,0x49
  4101f6:	dec    esi
  4101f7:	mov    dl,0x7e
  4101f9:	mov    ebx,0x5100a999
  4101fe:	xchg   esp,eax
  4101ff:	inc    esi
  410200:	mov    ebx,0xff5ab461
  410205:	or     esi,DWORD PTR [edi+ecx*8-0x15]
  410209:	sbb    ebx,DWORD PTR [eax-0x36]
  41020c:	sub    BYTE PTR [edi+0x58929063],ah
  410212:	cmp    al,0xa8
  410214:	add    DWORD PTR [edi],0xffffffe9
  410217:	mov    bl,0x30
  410219:	jmp    0x4101b7
  41021b:	jno    0x4101f3
  41021d:	sub    ebp,ebx
  41021f:	sub    DWORD PTR [eax+0x2817e151],ebp
  410225:	shl    DWORD PTR [edx-0x49],0xef
  410229:	pusha  
  41022a:	pop    edi
  41022b:	outs   dx,DWORD PTR ds:[esi]
  41022c:	loopne 0x4101cb
  41022e:	xor    edi,ebp
  410230:	call   0xb30513b9
  410235:	mov    esp,ecx
  410237:	xlat   BYTE PTR ds:[ebx]
  410238:	outs   dx,DWORD PTR ds:[esi]
  410239:	loopne 0x4101e7
  41023b:	cs and esp,esp
  41023e:	pop    ebx
  41023f:	jmp    0xfad2:0xe3a39352
  410246:	or     ebx,DWORD PTR [edx]
  410248:	or     BYTE PTR [esi-0x434df397],bl
  41024e:	mov    dh,0x6b
  410250:	or     eax,DWORD PTR [esi]
  410252:	rcl    eax,1
  410254:	xlat   BYTE PTR ds:[ebx]
  410255:	or     al,0x43
  410257:	pop    eax
  410258:	xchg   edx,eax
  410259:	xor    eax,0x50e8031e
  41025e:	mov    ebx,0x83133cfd
  410263:	mov    ebx,0xb03dbffc
  410268:	xor    DWORD PTR [bx+si],esp
  41026b:	out    dx,eax
  41026c:	push   0xb11ef043
  410271:	lds    ebx,FWORD PTR [ebx-0x4b58f3d4]
  410277:	jp     0x4102c4
  410279:	add    eax,0x17ebb318
  41027e:	xor    DWORD PTR [edx],esp
  410280:	xor    bh,BYTE PTR [eax-0x34]
  410283:	call   FWORD PTR [esi]
  410285:	ror    BYTE PTR [esp+eiz*8],cl
  410288:	fst    QWORD PTR [eax+0x3d]
  41028b:	push   esp
  41028c:	jo     0x41023b
  41028e:	sbb    DWORD PTR [edx],esp
  410290:	jl     0x4102d3
  410292:	adc    BYTE PTR [esi-0x74],ah
  410295:	push   ss
  410296:	into   
  410297:	dec    esi
  410298:	sbb    DWORD PTR [ecx+0x27],eax
  41029b:	lock sub eax,0x71a2bedb
  4102a1:	addr16 jb 0x410318
  4102a4:	jbe    0x410310
  4102a6:	or     eax,ebp
  4102a8:	push   es
  4102a9:	cmp    ch,BYTE PTR [ebx]
  4102ab:	jbe    0x41025f
  4102ad:	inc    esp
  4102ae:	sbb    DWORD PTR [edx+0x59],ebp
  4102b1:	mov    al,ds:0x8f11e293
  4102b6:	or     cl,ah
  4102b8:	sub    ah,BYTE PTR ds:0x8ced22ba
  4102be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102bf:	lods   eax,DWORD PTR ds:[esi]
  4102c0:	push   edx
  4102c1:	add    edx,esi
  4102c3:	or     al,0x6b
  4102c5:	pop    ecx
  4102c6:	aas    
  4102c7:	adc    BYTE PTR [edx],cl
  4102c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ca:	popa   
  4102cb:	aaa    
  4102cc:	ins    BYTE PTR es:[edi],dx
  4102cd:	sbb    eax,DWORD PTR [esi+0x11]
  4102d0:	cmp    WORD PTR [esi+0x69f2c5ab],bx
  4102d7:	out    0x4e,eax
  4102d9:	aad    0x34
  4102db:	xchg   ecx,eax
  4102dc:	and    al,0xba
  4102de:	retf   
  4102df:	cmp    edx,edi
  4102e1:	outs   dx,BYTE PTR ds:[esi]
  4102e2:	int    0x27
  4102e4:	pop    es
  4102e5:	or     al,0x8a
  4102e7:	arpl   si,cx
  4102e9:	arpl   WORD PTR [ebx+ecx*8+0x2291282c],sp
  4102f0:	mov    cl,0x13
  4102f2:	dec    ecx
  4102f3:	adc    BYTE PTR [eax-0x67fc2254],cl
  4102f9:	jno    0x41036c
  4102fb:	pop    eax
  4102fc:	ss enter 0xee30,0x69
  410301:	sbb    cl,cl
  410303:	xor    bh,0x50
  410306:	fcomp  QWORD PTR [ebx-0x56]
  410309:	cdq    
  41030a:	add    BYTE PTR [edx+edx*2+0x60],0x25
  41030f:	aam    0x6f
  410311:	or     BYTE PTR [ebx+0x77],al
  410314:	sbb    eax,0x58c97784
  410319:	(bad)  
  41031a:	cmp    eax,0xb25b1a8e
  41031f:	and    DWORD PTR [esi-0x6f7ad2a1],esp
  410325:	fs fucomp st(2)
  410328:	mov    ds:0xe3d458b6,eax
  41032d:	cdq    
  41032e:	not    cl
  410330:	xor    bl,dh
  410332:	in     al,dx
  410333:	imul   edx,DWORD PTR [esi-0x31],0x57646ddc
  41033a:	add    BYTE PTR [ebx+ecx*2-0x56],cl
  41033e:	sub    ah,BYTE PTR [edx]
  410340:	sub    ecx,ebp
  410342:	dec    ebx
  410343:	push   esp
  410344:	fiadd  WORD PTR [esi]
  410346:	out    dx,al
  410347:	push   0xffffffdf
  410349:	loop   0x410334
  41034b:	loopne 0x41031f
  41034d:	mov    dl,0x9b
  41034f:	call   0x84aa9af9
  410354:	inc    esp
  410355:	ret    
  410356:	arpl   sp,sp
  410358:	sub    al,0x5f
  41035a:	xchg   BYTE PTR [ebx-0x3d],bh
  41035d:	pop    ebp
  41035e:	cwde   
  41035f:	adc    dl,cl
  410361:	cmp    DWORD PTR [esi+0x5120b483],edx
  410367:	xor    ch,al
  410369:	inc    esp
  41036a:	dec    esp
  41036b:	loopne 0x410300
  41036d:	sub    al,0x37
  41036f:	push   edx
  410370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410371:	or     edi,DWORD PTR [esi-0x66]
  410374:	inc    ecx
  410375:	ror    DWORD PTR [eax+0x60eb78ca],cl
  41037b:	and    al,BYTE PTR [eax]
  41037d:	cmp    edi,DWORD PTR [eax]
  41037f:	add    BYTE PTR [esi-0x573602b6],al
  410385:	sub    BYTE PTR ds:0x4b7c8b0c,0xb3
  41038d:	je     0x410361
  41038f:	mov    ds:0xd1998ce8,al
  410394:	ficom  WORD PTR [ecx+0x49beec7c]
  41039a:	cmp    eax,0x81058a9a
  41039f:	mov    ecx,0xe22f51fd
  4103a4:	mov    eax,ds:0x9c04b0e8
  4103a9:	mov    al,ds:0x8e141b23
  4103ae:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4103b0:	or     BYTE PTR [ebx],dh
  4103b2:	in     eax,dx
  4103b3:	fnstsw WORD PTR [edi+0x4e]
  4103b6:	loop   0x4103e2
  4103b8:	add    al,0xcb
  4103ba:	push   edx
  4103bb:	jne    0x410401
  4103bd:	outs   dx,DWORD PTR ds:[esi]
  4103be:	inc    esi
  4103bf:	ficomp WORD PTR [edi+0x5d]
  4103c2:	mov    edi,fs
  4103c4:	retf   
  4103c5:	mov    ebp,0x6d9b7644
  4103ca:	adc    edx,DWORD PTR [edx+eax*2+0x45]
  4103ce:	mov    BYTE PTR [edi-0x66],dl
  4103d1:	mov    ah,0xbb
  4103d3:	jmp    0x3a25d3de
  4103d8:	inc    esi
  4103d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103da:	imul   edi,DWORD PTR [ebx+edx*1+0x47],0xd8601734
  4103e2:	xor    bh,dh
  4103e4:	int3   
  4103e5:	sbb    ah,cl
  4103e7:	jecxz  0x4103b1
  4103e9:	adc    al,ch
  4103eb:	add    esp,DWORD PTR [eax-0x554f23ab]
  4103f1:	retf   
  4103f2:	aam    0x62
  4103f4:	push   cs
  4103f5:	mov    al,0xde
  4103f7:	in     al,dx
  4103f8:	out    0xba,eax
  4103fa:	int    0xe6
  4103fc:	add    DWORD PTR es:[eax-0x4e0c4e93],eax
  410403:	xor    eax,0xe21ddc84
  410408:	rol    BYTE PTR [edi+0x4f],0xfb
  41040c:	fs aam 0x84
  41040f:	test   dh,dh
  410411:	mov    ds:0x40153349,eax
  410416:	mov    cl,bl
  410418:	dec    BYTE PTR [esi-0x21]
  41041b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41041c:	mov    ebp,0xad0642c3
  410421:	ret    0xf10f
  410424:	jb     0x41045b
  410426:	and    ah,bh
  410428:	or     BYTE PTR es:[ebx],ch
  41042b:	push   esi
  41042c:	and    esi,ebx
  41042e:	mov    WORD PTR [ecx-0x59996399],es
  410434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410435:	repz out 0xe,eax
  410438:	stos   BYTE PTR es:[edi],al
  410439:	sti    
  41043a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41043b:	imul   esi,DWORD PTR [esi+esi*8],0xb6c23dc7
  410442:	cmc    
  410443:	js     0x410457
  410445:	pop    ebx
  410446:	cmc    
  410447:	lods   eax,DWORD PTR ds:[esi]
  410448:	retf   0x107
  41044b:	push   ebx
  41044c:	imul   ebp,DWORD PTR ds:0xb25bee72,0xb764cf9e
  410456:	hlt    
  410457:	jnp    0x4104bf
  410459:	adc    edx,0x57
  41045c:	rol    DWORD PTR [ebp-0x2255288a],0xc8
  410463:	mov    ah,0x4d
  410465:	retf   0xbb5
  410468:	scas   al,BYTE PTR es:[edi]
  410469:	ret    
  41046a:	jecxz  0x4104ba
  41046c:	add    BYTE PTR [edi],al
  41046e:	pushf  
  41046f:	adc    BYTE PTR [esi+0x6c6a2e6a],cl
  410475:	unpcklps xmm1,XMMWORD PTR [eax]
  410478:	loope  0x4104e7
  41047a:	fcmovne st,st(0)
  41047c:	add    bh,BYTE PTR [edi]
  41047e:	adc    ecx,DWORD PTR [ebp+edi*2+0x7fc7e3fc]
  410485:	cmp    BYTE PTR [esi+0x9],al
  410488:	xor    al,0x64
  41048a:	fdivr  QWORD PTR [ebx+0x69de1968]
  410490:	jecxz  0x410437
  410492:	dec    eax
  410494:	and    edi,DWORD PTR [ebx+0x721bdec1]
  41049a:	xchg   esi,eax
  41049b:	cmc    
  41049c:	out    dx,eax
  41049d:	(bad)  
  41049f:	(bad)  
  4104a0:	jo     0x41051f
  4104a2:	daa    
  4104a3:	add    ecx,ecx
  4104a5:	inc    ebx
  4104a6:	push   0x3e
  4104a8:	imul   edx,DWORD PTR [eax],0xffffffa2
  4104ab:	shl    BYTE PTR [eax-0x30],1
  4104ae:	int3   
  4104af:	xchg   BYTE PTR [esi-0x42],dh
  4104b2:	cmp    al,0x7b
  4104b4:	nop
  4104b5:	repz add BYTE PTR [esi+0x4c],dh
  4104b9:	aad    0x4d
  4104bb:	adc    eax,DWORD PTR [ecx]
  4104bd:	xchg   ebx,eax
  4104be:	mov    ds:0x350251cd,al
  4104c3:	mov    cl,0x5c
  4104c5:	outs   dx,BYTE PTR ds:[esi]
  4104c6:	mov    dl,0x8
  4104c8:	fwait
  4104c9:	out    dx,al
  4104ca:	sti    
  4104cb:	pop    ss
  4104cc:	call   0x3025:0x887b188
  4104d3:	sub    esp,0x230f267c
  4104d9:	mov    eax,ds:0xb313492f
  4104de:	mov    bl,0xb6
  4104e0:	jl     0x410514
  4104e2:	nop
  4104e3:	sbb    al,BYTE PTR [ebx+0x5dc3a0c2]
  4104e9:	scas   al,BYTE PTR es:[edi]
  4104ea:	test   BYTE PTR [edi+0x6d7299b3],0xa3
  4104f1:	in     eax,dx
  4104f2:	stos   BYTE PTR es:[edi],al
  4104f3:	and    DWORD PTR [esi+0x6b679dfc],edi
  4104f9:	xchg   ebp,eax
  4104fa:	repnz sti 
  4104fc:	mov    DWORD PTR [edi+ecx*8],ebx
  4104ff:	mov    al,ds:0x7c2887a8
  410504:	or     al,0x55
  410506:	out    0xef,al
  410508:	das    
  410509:	sbb    al,0x43
  41050b:	and    DWORD PTR [ebx],esp
  41050d:	popf   
  41050e:	test   al,0x20
  410510:	(bad)  
  410511:	bound  edx,QWORD PTR [ebp+0x78]
  410514:	lods   eax,DWORD PTR ds:[esi]
  410515:	jnp    0x4104cd
  410517:	cmp    BYTE PTR [eax],cl
  410519:	xchg   BYTE PTR [ebp+0xa148dbc],ah
  41051f:	pushf  
  410520:	jb     0x4104da
  410522:	cs dec ebp
  410524:	mov    bl,0x8e
  410526:	ds sti 
  410528:	retf   0x900e
  41052b:	iret   
  41052c:	aas    
  41052d:	mov    eax,ds:0xc19379f5
  410532:	jo     0x4104ef
  410534:	xchg   BYTE PTR [ebx+0x5b],al
  410537:	sbb    bh,BYTE PTR [edx-0x796bd534]
  41053d:	fdiv   QWORD PTR [eax]
  41053f:	(bad)  
  410540:	bound  edi,QWORD PTR ds:0x1676e5e8
  410546:	xor    ebx,ebx
  410548:	add    BYTE PTR [edx+ebp*1],ah
  41054b:	popa   
  41054c:	add    esp,DWORD PTR [edi]
  41054e:	jns    0x4105c1
  410550:	bound  esi,QWORD PTR [si]
  410553:	test   DWORD PTR [edx-0xb],0xfcbcbcb6
  41055a:	retf   0x2dc0
  41055d:	sahf   
  41055e:	fwait
  41055f:	mov    cs,WORD PTR [eax+0x35ee7146]
  410565:	cwde   
  410566:	bound  ebx,QWORD PTR [ebx]
  410568:	jmp    0xe5d42e70
  41056d:	out    0xb7,al
  41056f:	push   0xffffff94
  410571:	out    dx,eax
  410572:	fsubr  DWORD PTR [ecx]
  410574:	aad    0xaa
  410576:	pop    ebp
  410577:	xchg   ecx,eax
  410578:	xchg   bh,dl
  41057a:	mov    bl,0xa
  41057c:	xor    eax,0x9d81c201
  410581:	sbb    eax,0x9c4f1f71
  410586:	popa   
  410587:	daa    
  410588:	stos   BYTE PTR es:[edi],al
  410589:	mov    dl,0xcb
  41058b:	cdq    
  41058c:	fcmovnb st,st(5)
  41058e:	push   ss
  41058f:	cmp    cl,BYTE PTR [edx-0x50]
  410592:	and    DWORD PTR fs:[edx-0x24],0x7677eb7b
  41059a:	and    esp,DWORD PTR [ecx-0x45]
  41059d:	mov    eax,0xe6c6587d
  4105a2:	cli    
  4105a3:	icebp  
  4105a4:	imul   esi,DWORD PTR [edx+0x3a],0x3141d49b
  4105ab:	adc    eax,0x98108952
  4105b0:	mov    eax,ds:0x47925781
  4105b5:	xlat   BYTE PTR gs:[ebx]
  4105b7:	push   eax
  4105b8:	pop    esp
  4105b9:	add    cl,BYTE PTR [eax-0x9]
  4105bc:	(bad)  
  4105bd:	outs   dx,DWORD PTR ds:[esi]
  4105be:	fistp  QWORD PTR [ebx-0x73f90fc3]
  4105c4:	out    0xb1,al
  4105c6:	retf   0x820f
  4105c9:	pusha  
  4105ca:	es push 0x48
  4105cd:	pop    edi
  4105ce:	lods   al,BYTE PTR ds:[esi]
  4105cf:	mov    ds:0x23bbd180,al
  4105d4:	xor    eax,0x710df5ba
  4105d9:	pop    esp
  4105da:	test   BYTE PTR [eax],al
  4105dc:	mov    edi,0x497f79d
  4105e1:	mov    ds:0xc1ecb6d8,al
  4105e6:	aaa    
  4105e7:	sbb    dh,BYTE PTR [edx+0x34]
  4105ea:	rcl    DWORD PTR [esi+0x7],cl
  4105ed:	sbb    BYTE PTR [ebx+0x49cba9bc],0xdd
  4105f4:	mov    ah,0x9
  4105f6:	ret    0x6beb
  4105f9:	xchg   ecx,eax
  4105fa:	push   0xffffffc0
  4105fc:	(bad)  
  4105fd:	push   ds
  4105fe:	nop
  4105ff:	push   ecx
  410600:	push   es
  410601:	lods   eax,DWORD PTR ds:[esi]
  410602:	cs mov ebx,0x56e2c674
  410608:	pusha  
  410609:	(bad)  
  41060a:	sbb    DWORD PTR [ecx+eax*1-0x35],ebp
  41060e:	cmp    esp,edx
  410610:	icebp  
  410611:	(bad)  
  410612:	and    BYTE PTR [edx+ecx*2+0x32],ch
  410616:	dec    esi
  410617:	add    al,0x62
  410619:	mov    esi,0x99eb671b
  41061e:	ja     0x410691
  410620:	mov    ?,WORD PTR [ebx-0x6a76b5eb]
  410626:	mov    cl,0x5b
  410628:	call   0x16ef:0xd4f11acf
  41062f:	fcmovb st,st(7)
  410631:	fmul   QWORD PTR [edi-0x1e]
  410634:	ins    DWORD PTR es:[edi],dx
  410635:	not    ch
  410637:	push   eax
  410638:	adc    eax,0x375fe16e
  41063d:	jecxz  0x4105f3
  41063f:	(bad)  
  410640:	jl     0x76a98c5b
  410646:	inc    eax
  410647:	fist   DWORD PTR [edx]
  410649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41064a:	pop    ebp
  41064b:	pushf  
  41064c:	push   es
  41064d:	xor    esi,DWORD PTR [edi+0x59815f29]
  410653:	pop    eax
  410654:	jmp    0xd3ba4fde
  410659:	push   es
  41065a:	mov    bh,0x4f
  41065c:	and    BYTE PTR [eax-0x50],ch
  41065f:	push   ss
  410660:	retf   0xfc1e
  410663:	fwait
  410664:	jo     0x41068e
  410666:	cld    
  410667:	inc    esp
  410668:	out    dx,eax
  410669:	mov    edi,edi
  41066b:	std    
  41066c:	adc    eax,0x8ac2c345
  410671:	js     0x41061f
  410673:	push   ecx
  410674:	pop    ss
  410675:	or     BYTE PTR ds:0x8b735da0,cl
  41067b:	sahf   
  41067c:	add    esi,0x75fc9a82
  410682:	push   cs
  410683:	jmp    0x4106ef
  410685:	call   0xaaaaf62d
  41068a:	retf   0x7544
  41068d:	mov    eax,0x17b97f39
  410692:	loope  0x410669
  410694:	inc    edi
  410695:	sahf   
  410696:	dec    ecx
  410697:	out    0x48,al
  410699:	and    al,0xce
  41069b:	xchg   edx,eax
  41069c:	retf   
  41069d:	outs   dx,BYTE PTR ds:[esi]
  41069e:	(bad)  
  41069f:	sbb    ebx,DWORD PTR [edx+ebx*4+0x1a]
  4106a3:	cdq    
  4106a4:	retf   0xea3f
  4106a7:	pop    ebx
  4106a8:	mov    al,0xa1
  4106aa:	rcr    DWORD PTR [esi+0x7b3bbd59],1
  4106b0:	leave  
  4106b1:	sub    BYTE PTR [eax-0x28],cl
  4106b4:	int    0x23
  4106b6:	rol    DWORD PTR [edi],cl
  4106b8:	jecxz  0x4106d9
  4106ba:	ds leave 
  4106bc:	mov    eax,ds:0x58cfa0f6
  4106c1:	xor    dl,bh
  4106c3:	xor    bh,bh
  4106c5:	inc    ebx
  4106c6:	addr16 into 
  4106c8:	inc    ecx
  4106c9:	cmp    eax,0xaa1ba28d
  4106ce:	sub    al,dh
  4106d0:	inc    esp
  4106d1:	cli    
  4106d2:	mov    ah,0x35
  4106d4:	into   
  4106d5:	call   DWORD PTR [eax+0x6f]
  4106d8:	rcr    ebp,0x3e
  4106db:	xchg   BYTE PTR [ecx],ch
  4106dd:	loop   0x4106b4
  4106df:	dec    ecx
  4106e0:	cmp    eax,0xb9356959
  4106e5:	imul   edi,DWORD PTR [edx-0xfb542f2],0xb4f3c34f
  4106ef:	pusha  
  4106f0:	arpl   WORD PTR [ebx],bx
  4106f2:	mov    cs,esi
  4106f4:	sbb    al,0x90
  4106f6:	mov    ebp,0xd0a8bf17
  4106fb:	push   ds
  4106fc:	clc    
  4106fd:	(bad)  
  4106fe:	adc    DWORD PTR [edi],ebx
  410700:	and    cl,0x87
  410703:	add    al,0x62
  410705:	hlt    
  410706:	stos   DWORD PTR es:[edi],eax
  410707:	stos   BYTE PTR es:[edi],al
  410708:	mov    edx,0xd9ec9ba8
  41070d:	call   FWORD PTR [edx+ebp*4]
  410710:	sti    
  410711:	stos   BYTE PTR es:[edi],al
  410712:	test   BYTE PTR [edi],0x0
  410715:	fwait
  410716:	mov    edi,ecx
  410718:	test   BYTE PTR [edi-0x13],dl
  41071b:	dec    esi
  41071c:	mov    esp,eax
  41071e:	or     al,0x57
  410720:	push   es
  410721:	rcr    DWORD PTR [esi-0x5e6b08cb],cl
  410727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410728:	xchg   edx,eax
  410729:	push   0x6d534f0a
  41072e:	cdq    
  41072f:	scas   al,BYTE PTR es:[edi]
  410730:	mov    al,ds:0xe12fa0ae
  410735:	jae    0x4106c0
  410737:	jne    0x410785
  410739:	icebp  
  41073a:	lods   eax,DWORD PTR ds:[esi]
  41073b:	push   0xace6232f
  410740:	sub    ecx,DWORD PTR ss:[ecx]
  410743:	mov    edx,0x393c567f
  410748:	(bad)  
  410749:	out    dx,eax
  41074a:	loope  0x410732
  41074c:	out    dx,eax
  41074d:	clc    
  41074e:	jge    0x4107bb
  410750:	retf   
  410751:	xchg   ecx,eax
  410752:	jl     0x41071e
  410754:	mov    eax,ds:0x49c2d260
  410759:	fcomp  QWORD PTR [ecx-0x71]
  41075c:	cdq    
  41075d:	and    bh,BYTE PTR [edi+edi*4]
  410760:	mov    es,WORD PTR ds:0xac5f1f32
  410766:	adc    al,0x12
  410768:	xchg   edx,eax
  410769:	xchg   ecx,eax
  41076a:	jae    0x410784
  41076c:	pop    es
  41076d:	pop    ss
  41076e:	jge    0x410707
  410770:	rcl    BYTE PTR [edi+0x46],0x20
  410774:	ins    DWORD PTR es:[edi],dx
  410775:	xor    eax,0x9d15d2f0
  41077a:	jge    0x41077f
  41077c:	fidiv  DWORD PTR [edx+0x12]
  41077f:	jb     0x4107dd
  410781:	es jmp 0x41075b
  410784:	xor    eax,0xf145da55
  410789:	sahf   
  41078a:	fist   WORD PTR [ebx-0x28]
  41078d:	repnz loope 0x4107f2
  410790:	lahf   
  410791:	push   ss
  410792:	daa    
  410793:	and    al,0x17
  410795:	jg     0x41076c
  410797:	pushf  
  410798:	cmp    edx,DWORD PTR [esp+eax*2+0x248166f2]
  41079f:	inc    edi
  4107a0:	mov    esp,0x1b8ca067
  4107a5:	fild   WORD PTR [ebx]
  4107a7:	inc    esi
  4107a8:	fidiv  WORD PTR [eax+0x53]
  4107ab:	push   esi
  4107ac:	add    eax,0xbb00d223
  4107b1:	sub    eax,eax
  4107b3:	call   0xc73d7a70
  4107b8:	lock push cs
  4107ba:	icebp  
  4107bb:	sub    eax,0xc615699f
  4107c0:	je     0x410810
  4107c2:	(bad)
  4107c5:	stc    
  4107c6:	cli    
  4107c7:	popf   
  4107c8:	ins    BYTE PTR es:[edi],dx
  4107c9:	mov    esp,0x4f7bd646
  4107ce:	xchg   ebp,eax
  4107cf:	sar    esi,cl
  4107d1:	(bad)  
  4107d2:	cmp    dh,cl
  4107d4:	pop    ecx
  4107d5:	dec    edi
  4107d6:	in     eax,0xa9
  4107d8:	(bad)  
  4107d9:	test   al,0xae
  4107db:	aad    0xa2
  4107dd:	xchg   BYTE PTR [ecx],al
  4107df:	mov    eax,0xd214f1
  4107e4:	add    esi,DWORD PTR [esi]
  4107e6:	pop    esi
  4107e7:	js     0x4107fc
  4107e9:	xor    BYTE PTR [edx+ebp*1+0x30043282],al
  4107f0:	jge    0x410808
  4107f2:	int3   
  4107f3:	fbstp  TBYTE PTR [ebx-0x2031a966]
  4107f9:	retf   0x3ee4
  4107fc:	pop    ds
  4107fd:	pushf  
  4107fe:	sar    BYTE PTR [ecx-0x75],0x61
  410802:	sbb    eax,0x48473ce1
  410807:	out    dx,eax
  410808:	aad    0x2a
  41080a:	xchg   BYTE PTR [ecx+eax*4-0x3975b5a2],al
  410811:	js     0x410848
  410813:	iret   
  410814:	cli    
  410815:	dec    edi
  410816:	push   0x56
  410818:	sub    al,BYTE PTR [ecx+edi*1-0x12aa653b]
  41081f:	dec    ecx
  410820:	in     eax,dx
  410821:	push   esp
  410822:	loope  0x4107ac
  410824:	sbb    al,0x52
  410826:	in     eax,dx
  410827:	jae    0x410897
  410829:	cmp    BYTE PTR ds:0x7e874aba,ah
  41082f:	in     eax,dx
  410830:	ret    0xfc
  410833:	sub    dl,dl
  410835:	sahf   
  410836:	test   ebp,ebp
  410838:	bound  edi,QWORD PTR [esi+0x498f1ddb]
  41083e:	sbb    esp,DWORD PTR [eax+0x62]
  410841:	mov    eax,DWORD PTR [edx]
  410843:	mov    cl,0xdf
  410845:	mov    cl,ch
  410847:	mov    WORD PTR [edi-0x7259fed3],es
  41084d:	push   ebp
  41084e:	xchg   esi,eax
  41084f:	adc    BYTE PTR [ebp-0x45a0006e],dl
  410855:	xchg   ebx,eax
  410856:	sbb    ch,BYTE PTR [eax]
  410858:	mov    ch,0xa2
  41085a:	jecxz  0x410805
  41085c:	dec    edi
  41085d:	dec    edx
  41085e:	adc    ecx,DWORD PTR [eax+eax*2]
  410861:	inc    edi
  410862:	in     al,0x31
  410864:	xor    DWORD PTR [ecx],esp
  410866:	sbb    edx,DWORD PTR [edi+ebp*8+0x29]
  41086a:	sbb    eax,0xfb16310
  41086f:	sub    BYTE PTR [ecx+0x2489d0c2],0x5b
  410876:	xchg   edx,eax
  410877:	mov    dl,0x87
  410879:	ds ds or al,0xba
  41087d:	aas    
  41087e:	fwait
  41087f:	ds pop edi
  410881:	enter  0xed70,0xac
  410885:	test   dh,cl
  410887:	cmp    eax,DWORD PTR [esp+ecx*1+0x76289a51]
  41088e:	ret    0x3658
  410891:	mov    edi,0x70e071ab
  410896:	xor    al,0x61
  410898:	sub    al,al
  41089a:	js     0x410836
  41089c:	sub    al,0x4f
  41089e:	das    
  41089f:	dec    esi
  4108a0:	mul    DWORD PTR [eax-0x4297e21]
  4108a6:	lea    eax,[eax-0x4f]
  4108a9:	hlt    
  4108aa:	and    bl,BYTE PTR [eax+0x2aa26579]
  4108b0:	sub    al,BYTE PTR ss:[ecx+ecx*1-0xf]
  4108b5:	scas   eax,DWORD PTR es:[edi]
  4108b6:	lods   al,BYTE PTR ds:[esi]
  4108b7:	xor    al,0xd
  4108b9:	dec    edi
  4108ba:	dec    ecx
  4108bb:	cwde   
  4108bc:	jne    0x410933
  4108be:	jmp    0x9dc6955c
  4108c3:	loope  0x410901
  4108c5:	mov    edi,0xdf47c721
  4108ca:	xchg   ebx,eax
  4108cb:	cmp    ebx,DWORD PTR [ebp-0x2e]
  4108ce:	or     BYTE PTR [ebx-0x2967da8c],bh
  4108d4:	push   ss
  4108d5:	xchg   edx,eax
  4108d6:	pop    ss
  4108d7:	rcl    DWORD PTR [edi],1
  4108d9:	mov    al,0xea
  4108db:	test   eax,0xa2dceca2
  4108e0:	fs into 
  4108e2:	fsubr  DWORD PTR [edi-0xf]
  4108e5:	jbe    0x410952
  4108e7:	jecxz  0x410948
  4108e9:	mul    ebx
  4108eb:	nop
  4108ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108ed:	test   eax,0xf24d7f5e
  4108f2:	mov    bl,0xc3
  4108f4:	adc    DWORD PTR [ebx],esp
  4108f6:	daa    
  4108f7:	repz and eax,0x5122d953
  4108fd:	jno    0x410953
  4108ff:	or     bh,ah
  410901:	xor    cl,al
  410903:	outs   dx,DWORD PTR ds:[esi]
  410904:	test   al,0xc1
  410906:	cli    
  410907:	in     al,0xfc
  410909:	sub    ch,BYTE PTR ds:0xc8a47493
  41090f:	jp     0x41091f
  410911:	push   edx
  410912:	mov    dh,0xdf
  410914:	or     eax,ebx
  410916:	lods   al,BYTE PTR ds:[esi]
  410917:	shr    BYTE PTR [esi+0x79],1
  41091a:	pusha  
  41091b:	retf   
  41091c:	shr    edi,1
  41091e:	pop    ecx
  41091f:	jae    0x410957
  410921:	test   DWORD PTR [ebx+0x3e],esp
  410924:	inc    esi
  410925:	sub    bh,BYTE PTR [edi-0x2c239124]
  41092b:	or     DWORD PTR [ecx+0x51],ecx
  41092e:	xchg   edi,eax
  41092f:	dec    edi
  410930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410931:	jo     0x4108d3
  410933:	add    edi,DWORD PTR [esi-0x31]
  410936:	in     eax,0xda
  410938:	cli    
  410939:	fwait
  41093a:	or     al,0x2e
  41093c:	jl     0x41095c
  41093e:	out    dx,al
  41093f:	mov    dl,0xcc
  410941:	mov    dh,BYTE PTR [ebx]
  410943:	xor    al,0xc3
  410945:	nop
  410946:	add    DWORD PTR [ebx-0x61],esp
  410949:	neg    BYTE PTR [eax+0x5d]
  41094c:	add    eax,0xb94711e9
  410951:	outs   dx,DWORD PTR ds:[esi]
  410952:	jbe    0x410913
  410954:	or     edi,DWORD PTR [eax+ebp*2+0x5a831d09]
  41095b:	xchg   ecx,eax
  41095c:	xor    al,0xa9
  41095e:	popf   
  41095f:	cmp    DWORD PTR [esi-0x7f],esp
  410962:	add    BYTE PTR [eax],al
  410964:	mov    ebp,DWORD PTR [edx]
  410966:	mov    edi,0xbb2317ab
  41096b:	(bad)  
  41096c:	or     cl,dl
  41096e:	scas   eax,DWORD PTR es:[edi]
  41096f:	mov    eax,ds:0x25eef896
  410974:	jmp    0x188b:0xc8fb11ce
  41097b:	sti    
  41097c:	in     eax,dx
  41097d:	les    esp,FWORD PTR [ebx+edi*4+0x53]
  410981:	fwait
  410982:	stos   BYTE PTR es:[edi],al
  410983:	(bad)
  410986:	cwde   
  410987:	addr16 shl ebp,cl
  41098a:	fcmovb st,st(4)
  41098c:	(bad)
  410990:	xchg   ebx,eax
  410991:	pop    esi
  410992:	adc    edi,edx
  410994:	nop
  410995:	out    dx,eax
  410996:	mov    ds:0xd5f77eae,al
  41099b:	sar    edi,cl
  41099d:	cld    
  41099e:	fmul   DWORD PTR [eax+0x40]
  4109a1:	cmp    ebx,DWORD PTR [esi+0x15798cd5]
  4109a7:	mov    gs,WORD PTR cs:[ebx-0x5a]
  4109ab:	sub    bl,0x82
  4109ae:	stos   DWORD PTR es:[edi],eax
  4109af:	cmp    BYTE PTR [ebp-0x459a0507],al
  4109b5:	xchg   esp,eax
  4109b6:	pop    es
  4109b7:	inc    edi
  4109b8:	jo     0x410992
  4109ba:	das    
  4109bb:	add    esi,0xfc16fec6
  4109c1:	jae    0x410a0d
  4109c3:	jmp    0xfda61fea
  4109c8:	and    BYTE PTR [edi+0x285aca7f],0x18
  4109cf:	pop    esp
  4109d0:	jecxz  0x410a04
  4109d2:	adc    BYTE PTR ds:0x53418d02,ah
  4109d8:	inc    esi
  4109d9:	push   ebp
  4109da:	in     al,dx
  4109db:	pop    ss
  4109dc:	call   0x82f4:0x1e6c70ea
  4109e3:	aaa    
  4109e4:	and    BYTE PTR cs:[esp+edx*8],0xaa
  4109e9:	add    DWORD PTR [di+0x7dd5],ebx
  4109ee:	xlat   BYTE PTR ds:[ebx]
  4109ef:	push   edx
  4109f0:	cmp    al,0x9e
  4109f2:	(bad)  
  4109f3:	adc    BYTE PTR ds:0x23beff2b,dh
  4109f9:	das    
  4109fa:	(bad)  
  4109fb:	div    al
  4109fd:	stos   BYTE PTR es:[edi],al
  4109fe:	cmp    eax,0x5c866c2f
  410a03:	xor    DWORD PTR [edx+0x3a7d784],esp
  410a09:	fsave  [eax+0x7a]
  410a0d:	xchg   ebp,eax
  410a0e:	cmp    BYTE PTR [ebx-0x2],cl
  410a11:	lods   al,BYTE PTR ds:[esi]
  410a12:	push   ecx
  410a13:	loopne 0x4109da
  410a15:	call   0xa363:0x6915a838
  410a1c:	sbb    bh,dl
  410a1e:	jecxz  0x410a1d
  410a20:	sub    esi,esi
  410a22:	je     0x410a9a
  410a24:	loop   0x410a2c
  410a26:	add    al,0x5e
  410a28:	retf   
  410a29:	cwde   
  410a2a:	scas   eax,DWORD PTR es:[edi]
  410a2b:	out    dx,al
  410a2c:	lahf   
  410a2d:	es (bad) 
  410a2f:	lahf   
  410a30:	xchg   esi,eax
  410a31:	add    cl,ch
  410a33:	imul   dh
  410a35:	lods   eax,DWORD PTR ds:[esi]
  410a36:	jb     0x410a7b
  410a38:	mov    al,ds:0xec368791
  410a3d:	push   esi
  410a3e:	lock inc ebx
  410a40:	pop    ebx
  410a41:	xchg   edx,eax
  410a42:	retf   
  410a43:	out    dx,al
  410a44:	mov    ss,edi
  410a46:	mov    ebp,0xb5ffccf
  410a4b:	loop   0x4109d2
  410a4d:	loop   0x410a5c
  410a4f:	adc    BYTE PTR [eax-0x78102f8f],0x7a
  410a56:	arpl   WORD PTR [ebx-0x48a4a2b2],cx
  410a5c:	inc    ebx
  410a5d:	ja     0x410a31
  410a5f:	out    dx,al
  410a60:	retf   
  410a61:	cmp    BYTE PTR [edx+0xaf5c7d6],ah
  410a67:	loope  0x410a3d
  410a69:	xchg   edx,eax
  410a6a:	and    edx,DWORD PTR [ebx-0x5d]
  410a6d:	scas   al,BYTE PTR es:[edi]
  410a6e:	ja     0x410a85
  410a70:	out    0xaf,eax
  410a72:	test   dl,cl
  410a74:	(bad)
  410a78:	arpl   bp,si
  410a7a:	dec    edi
  410a7b:	inc    esi
  410a7c:	cdq    
  410a7d:	shl    esi,1
  410a7f:	int    0x2d
  410a81:	xchg   edx,eax
  410a82:	add    BYTE PTR [edx+eiz*4+0xd564f02],cl
  410a89:	mov    al,ds:0x759e6ab4
  410a8e:	push   ecx
  410a8f:	pop    esi
  410a90:	lea    edi,[edi+0x2d1d9a0]
  410a96:	(bad)  
  410a97:	cmp    DWORD PTR [ebx],edi
  410a99:	fs sbb al,0x35
  410a9c:	clc    
  410a9d:	xlat   BYTE PTR ds:[ebx]
  410a9e:	retf   
  410a9f:	and    bh,BYTE PTR [ebx-0x3a]
  410aa2:	dec    ebx
  410aa3:	mov    dh,0x2c
  410aa5:	push   ecx
  410aa6:	push   ebx
  410aa7:	jo     0x410add
  410aa9:	imul   ecx,DWORD PTR [esi-0x1d],0xffffff85
  410aad:	iret   
  410aae:	adc    BYTE PTR [eax+ecx*4],bl
  410ab1:	fwait
  410ab2:	sub    al,0x18
  410ab4:	ret    0xa2ed
  410ab7:	fwait
  410ab8:	cmp    eax,0x1368d074
  410abd:	hlt    
  410abe:	sub    DWORD PTR [ebp+0x61],0x3f0f1b6c
  410ac5:	ss js  0x410ab0
  410ac8:	hlt    
  410ac9:	bound  ebp,QWORD PTR [ebx+edx*1+0x2b]
  410acd:	jnp    0x410b2c
  410acf:	add    eax,0x7f2ea67c
  410ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad5:	xchg   ecx,eax
  410ad6:	push   ds
  410ad7:	inc    esp
  410ad8:	sub    al,0x14
  410ada:	in     al,0xdd
  410adc:	jbe    0x410b39
  410ade:	hlt    
  410adf:	push   ecx
  410ae0:	cld    
  410ae1:	mov    ss,ebp
  410ae3:	cmp    al,0xc7
  410ae5:	add    DWORD PTR [esi],ebx
  410ae7:	pop    eax
  410ae8:	clc    
  410ae9:	ret    
  410aea:	mov    dl,0x2d
  410aec:	cmp    eax,0xd54c6020
  410af1:	mov    ds:0xa24b7429,eax
  410af6:	fmul   DWORD PTR [eax-0x6]
  410af9:	inc    esp
  410afa:	dec    edx
  410afb:	fwait
  410afc:	imul   edx,esi,0x89447ca6
  410b02:	in     eax,dx
  410b03:	xchg   ecx,eax
  410b04:	add    edi,DWORD PTR [edx-0x620aab0d]
  410b0a:	jmpw   0xd99b
  410b0e:	pop    ebx
  410b0f:	push   ds
  410b10:	mov    dh,0xc7
  410b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b13:	jnp    0x410b12
  410b15:	mov    edx,0xe3ee4c8e
  410b1a:	xchg   ebp,eax
  410b1b:	mov    ch,0x6c
  410b1d:	jno    0x410b8c
  410b1f:	lock xor ecx,ebp
  410b22:	sbb    al,0xca
  410b24:	in     al,dx
  410b25:	in     eax,0xdb
  410b27:	ret    0x9292
  410b2a:	xor    eax,0xeb7a8977
  410b2f:	xchg   DWORD PTR [ecx+ebx*1+0x3],edx
  410b33:	repz cmp BYTE PTR [esi+0x53],dl
  410b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b38:	push   esp
  410b39:	mov    ds:0xae461103,eax
  410b3e:	mov    ds:0x55a0804a,eax
  410b43:	pop    es
  410b44:	xchg   edi,eax
  410b45:	push   ebx
  410b46:	mov    ebx,0x3c3ad057
  410b4b:	(bad)  
  410b4c:	sar    BYTE PTR [ebx-0x59],cl
  410b4f:	xor    eax,0xe93ac595
  410b54:	in     eax,dx
  410b55:	into   
  410b56:	dec    edx
  410b57:	or     al,0x23
  410b59:	dec    ecx
  410b5a:	lods   eax,DWORD PTR ds:[esi]
  410b5b:	fst    DWORD PTR fs:[edx-0x4d]
  410b5f:	das    
  410b60:	pushf  
  410b61:	jne    0x410af5
  410b63:	mov    bh,0x3d
  410b65:	and    DWORD PTR [edx],ebp
  410b67:	inc    edi
  410b68:	xor    edi,DWORD PTR [eax]
  410b6a:	(bad)  
  410b6c:	pop    ebp
  410b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b6e:	icebp  
  410b6f:	xor    DWORD PTR [ebx-0x22cc9f68],edi
  410b75:	out    dx,eax
  410b76:	jne    0x410ba4
  410b78:	mov    esi,0xdda7854f
  410b7d:	imul   edx,DWORD PTR [esi-0x40],0x8f7ebb03
  410b84:	and    al,BYTE PTR [ebx-0x18]
  410b87:	push   ds
  410b88:	inc    esi
  410b89:	(bad)  
  410b8b:	popf   
  410b8c:	or     al,0xf7
  410b8e:	jmp    0xce3db6c
  410b93:	sub    edx,DWORD PTR [ebp-0x15]
  410b96:	pop    esp
  410b97:	daa    
  410b98:	nop
  410b99:	cmp    BYTE PTR [eax],al
  410b9b:	mov    ch,BYTE PTR [eax-0x45]
  410b9e:	adc    ch,BYTE PTR [ebx-0x60]
  410ba1:	push   ecx
  410ba2:	adc    dl,dh
  410ba4:	dec    ebx
  410ba5:	sbb    eax,0x2fb95d5c
  410baa:	sbb    ch,cl
  410bac:	nop
  410bad:	xor    cl,BYTE PTR [ebp+0x2c]
  410bb0:	in     eax,dx
  410bb1:	pop    ds
  410bb2:	jnp    0x410b79
  410bb4:	repnz mov DWORD PTR [esi-0x3634e19d],esi
  410bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bbc:	test   eax,0xf67e60b1
  410bc1:	push   ecx
  410bc2:	mov    esi,0xdd903684
  410bc7:	pop    edi
  410bc8:	pop    ebp
  410bc9:	iret   
  410bca:	jg     0x410c2a
  410bcc:	and    BYTE PTR [ecx+0x56e5951],dh
  410bd2:	xor    al,0x67
  410bd4:	sub    ah,BYTE PTR [ebx]
  410bd6:	add    eax,0x19b098f5
  410bdb:	pop    ecx
  410bdc:	mov    esi,ebx
  410bde:	lods   eax,DWORD PTR ds:[esi]
  410bdf:	les    edx,FWORD PTR [ebp+0x7f]
  410be2:	push   eax
  410be3:	inc    esi
  410be4:	sar    BYTE PTR [esi+0x1ed98aeb],1
  410bea:	repz enter 0x3792,0x87
  410bef:	pop    eax
  410bf0:	outs   dx,DWORD PTR ds:[esi]
  410bf1:	cs pop ecx
  410bf3:	sti    
  410bf4:	imul   edx,eax,0x4891142b
  410bfa:	dec    ecx
  410bfb:	xchg   ecx,eax
  410bfc:	mov    eax,ds:0x1c8a3c84
  410c01:	lea    ebp,ds:0x705894b9
  410c07:	clc    
  410c08:	pusha  
  410c09:	adc    ebx,DWORD PTR [ecx-0x58]
  410c0c:	mov    bh,0xa6
  410c0e:	add    dl,BYTE PTR [eax+ebp*1-0x51028855]
  410c15:	jecxz  0x410bfc
  410c17:	inc    ebp
  410c18:	pop    ds
  410c19:	scas   al,BYTE PTR es:[edi]
  410c1a:	ins    BYTE PTR es:[edi],dx
  410c1b:	rol    DWORD PTR [ecx+0x62],1
  410c1e:	xor    dh,BYTE PTR [edx-0x509044fe]
  410c24:	das    
  410c25:	and    bh,cl
  410c27:	push   edx
  410c28:	xchg   edi,eax
  410c29:	mov    ebp,0xe6a5c273
  410c2e:	add    DWORD PTR [ebx],edx
  410c30:	ss pop edi
  410c32:	test   eax,0xf9bf590d
  410c37:	not    DWORD PTR [esi+0x29643ca3]
  410c3d:	pop    es
  410c3e:	add    eax,0xe4f42663
  410c43:	xchg   edi,eax
  410c44:	fldlg2 
  410c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c47:	mov    dl,0xe8
  410c49:	ins    DWORD PTR es:[edi],dx
  410c4a:	and    edi,DWORD PTR ss:[ebx+0x75]
  410c4e:	cmp    bl,BYTE PTR [ecx+0x2b]
  410c51:	fcmovnb st,st(4)
  410c53:	or     edx,esp
  410c55:	mov    WORD PTR [ebp-0x2bacab01],ss
  410c5b:	sbb    eax,0x5d1df541
  410c60:	inc    ecx
  410c61:	inc    edx
  410c62:	repnz or BYTE PTR [esi+0x4],ah
  410c66:	test   BYTE PTR [ecx+ecx*4-0x51],ch
  410c6a:	cli    
  410c6b:	retf   
  410c6c:	xor    al,BYTE PTR [ebp+0x4aeb735a]
  410c72:	and    eax,0xd3bc8eaa
  410c77:	addr16 into 
  410c79:	stc    
  410c7a:	lods   eax,DWORD PTR ds:[esi]
  410c7b:	imul   edx,DWORD PTR [ecx],0x2c
  410c7e:	lods   eax,DWORD PTR ds:[esi]
  410c7f:	popa   
  410c80:	and    ebp,esp
  410c82:	dec    edi
  410c83:	pop    eax
  410c84:	sub    eax,0x8f112f60
  410c89:	mov    esi,DWORD PTR ds:0x4c712b8e
  410c8f:	adc    al,0x14
  410c91:	push   0x5493df6b
  410c96:	pop    es
  410c97:	stos   BYTE PTR es:[edi],al
  410c98:	inc    ecx
  410c99:	jle    0x410c26
  410c9b:	inc    edi
  410c9c:	std    
  410c9d:	movzx  ecx,ax
  410ca0:	xor    al,BYTE PTR [eax-0x31afec56]
  410ca6:	mov    bl,0x75
  410ca8:	stos   BYTE PTR es:[edi],al
  410ca9:	in     al,0xee
  410cab:	test   BYTE PTR [esi-0x598f5a2b],dh
  410cb1:	sbb    eax,0x1d98de11
  410cb6:	aad    0x10
  410cb8:	mov    bl,BYTE PTR [ecx+0x6d55491]
  410cbe:	xchg   ebp,eax
  410cbf:	je     0x410ce7
  410cc1:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410cc3:	ins    BYTE PTR es:[edi],dx
  410cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cc5:	jmp    0x410c75
  410cc7:	xchg   esp,eax
  410cc8:	dec    edi
  410cc9:	in     eax,dx
  410cca:	jge    0x410c50
  410ccc:	into   
  410ccd:	mov    ebx,DWORD PTR [edi-0x4b563bee]
  410cd3:	jmp    FWORD PTR [edi]
  410cd5:	(bad)  
  410cd6:	push   edx
  410cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cd8:	push   ss
  410cd9:	cli    
  410cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cdb:	repnz mov esp,0x74a0496b
  410ce1:	lds    ebp,FWORD PTR [esi-0x27]
  410ce4:	lea    edi,[edi-0x69482a55]
  410cea:	fdivrp st(3),st
  410cec:	xlat   BYTE PTR ds:[ebx]
  410ced:	push   ebp
  410cee:	dec    ebx
  410cef:	sub    al,0xd6
  410cf1:	or     DWORD PTR [esi+0x57bb75d1],edi
  410cf7:	arpl   bx,di
  410cf9:	xchg   ecx,eax
  410cfa:	xchg   edx,eax
  410cfb:	sbb    eax,0xe6d87c7d
  410d00:	or     DWORD PTR [esi-0x1253ecd6],ebx
  410d06:	or     cl,cl
  410d08:	data16 mov WORD PTR [esi],ds
  410d0b:	adc    al,0x83
  410d0d:	or     bh,bl
  410d0f:	dec    ecx
  410d10:	xchg   ah,al
  410d12:	(bad)  [edi-0x6e]
  410d15:	push   esp
  410d16:	mov    ebx,0xf1acbc53
  410d1b:	popa   
  410d1c:	dec    DWORD PTR [edi]
  410d1e:	pop    edx
  410d1f:	stos   BYTE PTR es:[edi],al
  410d20:	adc    DWORD PTR [esp+ecx*8],ebx
  410d23:	pop    eax
  410d24:	adc    esp,ebx
  410d26:	sbb    eax,0x9a1053ff
  410d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d2c:	mov    WORD PTR [ecx-0x1],ds
  410d2f:	sub    BYTE PTR [bp+di+0x6d],cl
  410d33:	sbb    DWORD PTR [esi+0x35d24df8],ebp
  410d39:	outs   dx,BYTE PTR ds:[esi]
  410d3a:	lahf   
  410d3b:	cdq    
  410d3c:	sti    
  410d3d:	ins    DWORD PTR es:[edi],dx
  410d3e:	pop    esi
  410d3f:	jbe    0x410d74
  410d41:	(bad)  [ecx]
  410d43:	js     0x410d15
  410d45:	repz sbb bp,WORD PTR [edi]
  410d49:	(bad)  
  410d4a:	ret    0x2def
  410d4d:	stos   BYTE PTR es:[edi],al
  410d4e:	outs   dx,BYTE PTR ds:[esi]
  410d4f:	in     al,dx
  410d50:	ins    BYTE PTR es:[edi],dx
  410d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d52:	jle    0x410da3
  410d54:	call   0x4f87:0x43ae6517
  410d5b:	jmp    0xaa22:0x75301e18
  410d62:	inc    edi
  410d63:	aam    0x4f
  410d65:	pop    ebx
  410d66:	xlat   BYTE PTR ds:[ebx]
  410d67:	(bad)  
  410d68:	mov    WORD PTR [ecx-0x6a],?
  410d6b:	mov    al,ds:0xde5fb6aa
  410d70:	mov    bl,0x90
  410d72:	sbb    al,0x6
  410d74:	retf   0xaef4
  410d77:	inc    ecx
  410d78:	jmp    0xfb2d7ccc
  410d7d:	mov    cl,BYTE PTR [ebx]
  410d7f:	xchg   ebx,eax
  410d80:	pop    ebp
  410d81:	push   ss
  410d82:	pop    es
  410d83:	lahf   
  410d84:	js     0x410ddb
  410d86:	mov    bh,BYTE PTR [ebx+eax*4]
  410d89:	hlt    
  410d8a:	or     BYTE PTR [edx+0x6a],dl
  410d8d:	dec    eax
  410d8e:	rcl    DWORD PTR [esp+ecx*8-0x27],1
  410d92:	je     0x410e0d
  410d94:	mov    esp,0xd3e166a
  410d99:	(bad)  
  410d9a:	mov    eax,0x29d9d3c9
  410d9f:	into   
  410da0:	and    ebx,DWORD PTR [edi-0x3b]
  410da3:	pop    esi
  410da4:	jg     0x410d29
  410da6:	push   ecx
  410da7:	push   0x5fc0c3b7
  410dac:	mov    dh,0x55
  410dae:	inc    eax
  410daf:	inc    ebx
  410db0:	push   0xffffffcd
  410db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410db3:	jmp    0x410e18
  410db5:	sub    ebx,edx
  410db7:	adc    al,0xe5
  410db9:	lahf   
  410dba:	fs mov al,0xa0
  410dbd:	jmp    0x4b89dff4
  410dc2:	retf   
  410dc3:	inc    eax
  410dc4:	lahf   
  410dc5:	rcr    BYTE PTR [edx-0x3f4b703d],1
  410dcb:	rcr    DWORD PTR cs:[esi+0x5523f7f],cl
  410dd2:	jns    0x410dda
  410dd4:	xchg   edi,eax
  410dd5:	sub    esp,ecx
  410dd7:	or     ecx,DWORD PTR [eax+0x53]
  410dda:	aas    
  410ddb:	jmp    0xb04cd38
  410de0:	inc    ebx
  410de1:	jmp    0x410d6e
  410de3:	dec    edi
  410de4:	inc    ebx
  410de5:	(bad)  
  410de6:	hlt    
  410de7:	cmc    
  410de8:	int    0x2d
  410dea:	ins    DWORD PTR es:[edi],dx
  410deb:	(bad)  
  410dec:	pop    ebx
  410ded:	sub    dl,BYTE PTR [eax]
  410def:	and    bh,ch
  410df1:	lds    edx,FWORD PTR [ebx-0x34]
  410df4:	jmp    0x410dfd
  410df6:	out    0x18,al
  410df8:	je     0x410e18
  410dfa:	out    0xba,al
  410dfc:	mov    DWORD PTR [edx],0xa2620659
  410e02:	sbb    al,0x3a
  410e04:	mov    ebx,0xbcbdc699
  410e09:	push   0x1e4f2afb
  410e0e:	dec    edx
  410e0f:	cmp    ecx,edi
  410e11:	rcr    BYTE PTR [ebp+0x2e],1
  410e14:	inc    eax
  410e15:	pop    ebp
  410e16:	inc    ebp
  410e17:	jns    0x410e4c
  410e19:	sbb    bl,dh
  410e1b:	loope  0x410e85
  410e1d:	or     cl,BYTE PTR [ecx-0x6885bbdc]
  410e23:	fisub  WORD PTR cs:[ebp+ecx*1-0x2e]
  410e28:	inc    ebx
  410e29:	mov    bx,0x9891
  410e2d:	or     eax,0xffffff80
  410e30:	sbb    BYTE PTR [esp+ecx*2-0x6b],ch
  410e34:	dec    ebx
  410e35:	int3   
  410e36:	shr    DWORD PTR [ecx],1
  410e38:	mov    DWORD PTR [esi+0x2f],0x252f06ef
  410e3f:	addr16 mov ds:0xc599,eax
  410e43:	pop    ebp
  410e44:	xor    BYTE PTR [edi-0x7af4c9a0],0x3e
  410e4b:	in     al,0x12
  410e4d:	test   DWORD PTR [edx+ecx*2],eax
  410e50:	aas    
  410e51:	outs   dx,DWORD PTR ds:[esi]
  410e52:	mov    dl,0xa1
  410e54:	loope  0x410e8c
  410e56:	mov    ebx,0xf51c10d
  410e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e5c:	inc    edx
  410e5d:	adc    eax,0xb239a198
  410e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e63:	push   ebx
  410e64:	(bad)  
  410e65:	mov    esi,0x3c5a7f4d
  410e6a:	es test al,0xae
  410e6d:	cmp    BYTE PTR [edi-0x1bdac2cb],al
  410e73:	rcl    al,cl
  410e75:	out    0x89,al
  410e77:	pop    edx
  410e78:	bound  ecx,QWORD PTR [ebp-0x7e584a82]
  410e7e:	jmp    0x410e03
  410e80:	xchg   ecx,eax
  410e81:	inc    esi
  410e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e83:	mov    ebp,DWORD PTR [eax-0x233c341]
  410e89:	leave  
  410e8a:	shl    BYTE PTR [ecx-0x72],cl
  410e8d:	enter  0x4196,0xb8
  410e91:	push   eax
  410e92:	call   0x762278b1
  410e97:	call   0xad9:0x295b2c4a
  410e9e:	fidivr WORD PTR [ecx]
  410ea0:	cmp    ebx,DWORD PTR [esi+0x63]
  410ea3:	cld    
  410ea4:	fst    DWORD PTR [ecx]
  410ea6:	js     0x410e65
  410ea8:	int3   
  410ea9:	dec    esi
  410eaa:	call   0x129b:0x38830486
  410eb1:	aas    
  410eb2:	xor    bl,bh
  410eb4:	dec    esi
  410eb5:	mov    ss:0x96ecc70,al
  410ebb:	out    0xb2,al
  410ebd:	in     al,0x21
  410ebf:	out    dx,al
  410ec0:	lea    ecx,ds:0x9ecd6c9c
  410ec6:	jl     0x410e87
  410ec8:	xlat   BYTE PTR ds:[ebx]
  410ec9:	enter  0xf281,0xbe
  410ecd:	xor    ecx,DWORD PTR [esi-0x48]
  410ed0:	das    
  410ed1:	xchg   ebp,eax
  410ed2:	into   
  410ed3:	push   esi
  410ed4:	or     BYTE PTR [ebp-0x7ae7369d],bh
  410eda:	lods   eax,DWORD PTR ds:[esi]
  410edb:	repnz das 
  410edd:	mov    BYTE PTR [edx+0x71378a0e],al
  410ee3:	dec    BYTE PTR [ecx]
  410ee5:	jge    0x410e74
  410ee7:	rcl    BYTE PTR [ebp-0x55],1
  410eea:	iret   
  410eeb:	inc    esi
  410eec:	fst    QWORD PTR [ebx]
  410eee:	ja     0x410f34
  410ef0:	xor    edi,eax
  410ef2:	jg     0x410f5f
  410ef4:	mov    edi,ecx
  410ef6:	cwde   
  410ef7:	int3   
  410ef8:	mov    ebp,0x47a0610a
  410efd:	mov    esi,0xb096bf43
  410f02:	add    ah,BYTE PTR [ecx]
  410f04:	retf   
  410f05:	pop    esi
  410f06:	xchg   ebp,eax
  410f07:	mov    al,0x40
  410f09:	mov    ah,BYTE PTR fs:[ecx-0x1ca62b13]
  410f10:	(bad)
  410f13:	shl    esp,0x90
  410f16:	test   DWORD PTR ds:0xa3880664,esi
  410f1c:	nop
  410f1d:	mov    ch,0x74
  410f1f:	jnp    0x410f62
  410f21:	dec    eax
  410f22:	pop    edx
  410f23:	cmp    bl,0xdb
  410f26:	lahf   
  410f27:	push   cs
  410f28:	mov    ebx,0x2811c51
  410f2d:	mov    al,0x76
  410f2f:	mov    DWORD PTR [edx-0x7d],ecx
  410f32:	mov    bl,0x38
  410f34:	mov    al,0x76
  410f36:	(bad)  [ebp-0x27]
  410f39:	out    0xd6,eax
  410f3b:	ss popf 
  410f3d:	dec    ecx
  410f3e:	sbb    al,BYTE PTR [ecx]
  410f40:	fisttp WORD PTR [ecx+0x23]
  410f43:	xor    BYTE PTR [ebx-0x72eb4c57],ah
  410f49:	je     0x410f2d
  410f4b:	add    al,0xce
  410f4d:	stos   BYTE PTR es:[edi],al
  410f4e:	mov    bh,0xdf
  410f50:	jge    0x410f32
  410f52:	sub    DWORD PTR [edx-0x4f],edi
  410f55:	mov    dh,0xc1
  410f57:	sbb    BYTE PTR [esp+edx*4+0x2262775b],bl
  410f5e:	mov    dl,0x41
  410f60:	sub    ebp,esi
  410f62:	jne    0x410f69
  410f64:	(bad)  
  410f65:	repnz dec di
  410f68:	pushf  
  410f69:	add    al,0x93
  410f6b:	or     cl,BYTE PTR [ebp+0x8]
  410f6e:	add    dl,bh
  410f70:	sbb    eax,0xcb599dee
  410f75:	mov    ah,BYTE PTR [ebx+0x3]
  410f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f79:	int3   
  410f7a:	(bad)  
  410f7b:	sbb    DWORD PTR [ebp+edi*4+0x16b23f56],edi
  410f82:	adc    ah,BYTE PTR [edx-0x78082725]
  410f88:	arpl   WORD PTR [eax+0x33],ax
  410f8b:	cs fs xchg esp,eax
  410f8e:	mov    al,0x4e
  410f90:	mov    ebx,0x55f2acf4
  410f95:	call   0x91f4:0x33bbd4c1
  410f9c:	int    0x27
  410f9e:	push   edi
  410f9f:	lahf   
  410fa0:	mov    edi,0xd54906c
  410fa5:	mov    al,ds:0x92e40da6
  410faa:	(bad)  
  410fab:	sub    BYTE PTR [eax+0x32b757c5],al
  410fb1:	pop    ebp
  410fb2:	xor    eax,DWORD PTR [eax-0x216014ae]
  410fb8:	mov    cl,0xce
  410fba:	icebp  
  410fbb:	fld    DWORD PTR [edx]
  410fbd:	xchg   edi,eax
  410fbe:	mov    ah,0x52
  410fc0:	lds    edi,FWORD PTR [edi+0x6d]
  410fc3:	leave  
  410fc4:	(bad)  
  410fc5:	push   ds
  410fc6:	add    esp,edi
  410fc8:	(bad)
  410fcb:	call   0x86f5:0x8a6cc5d6
  410fd2:	das    
  410fd3:	dec    edi
  410fd4:	push   cs
  410fd5:	mov    al,ds:0x35c89dc6
  410fda:	call   0x9bcd:0xe27b4b3b
  410fe1:	mov    dx,0x4182
  410fe5:	xor    ah,BYTE PTR [ecx-0x2a8e8204]
  410feb:	xor    eax,ecx
  410fed:	mov    ecx,0xa94fb069
  410ff2:	add    ebp,DWORD PTR [eax+0x3935e194]
  410ff8:	ror    edi,cl
  410ffa:	cmp    DWORD PTR [ebp+ecx*1+0x7c5c9baf],esp
  411001:	mov    dl,0x26
  411003:	jmp    0x41102e
  411005:	cmp    DWORD PTR [edx],edi
  411007:	lods   al,BYTE PTR ds:[esi]
  411008:	jg     0x411033
  41100a:	adc    BYTE PTR [ecx],ch
  41100c:	imul   esp,DWORD PTR ds:0x65eb040b,0x64850ab4
  411016:	scas   al,BYTE PTR es:[edi]
  411017:	popa   
  411018:	pop    ss
  411019:	test   eax,0xd3bb8e8b
  41101e:	bound  ebx,QWORD PTR [esi-0x42]
  411021:	mov    bh,0xf
  411023:	mov    ss,edi
  411025:	ss xchg edx,eax
  411027:	cdq    
  411028:	xor    al,0x1e
  41102a:	push   0xfe76035
  41102f:	or     esi,DWORD PTR [ebp-0x2b]
  411032:	mov    ds:0xbcfc16a6,eax
  411037:	addr16 mov al,ds:0x7417
  41103b:	jecxz  0x4110a4
  41103d:	xor    DWORD PTR [edi-0x30489e35],0xfc093601
  411047:	mov    eax,ds:0xbb06e090
  41104c:	fmul   DWORD PTR [esi-0x70ec0cd0]
  411052:	jno    0x411012
  411054:	xor    dl,BYTE PTR [ebp+0x7332b941]
  41105a:	xchg   DWORD PTR [ebx+0x57],ebp
  41105d:	(bad)  
  41105e:	jge    0x4110d0
  411060:	fmul   st,st(7)
  411062:	xchg   ebp,eax
  411063:	cs jp  0x41102a
  411066:	jae    0x41105b
  411068:	enter  0xf2f3,0x90
  41106c:	push   eax
  41106d:	or     ch,BYTE PTR [ecx]
  41106f:	mov    ds:0xa471f22a,al
  411074:	sbb    bh,bh
  411076:	mov    ds:0x1ef908b1,eax
  41107b:	pop    ebx
  41107c:	inc    esi
  41107d:	mov    al,ds:0x45d2892e
  411082:	jne    0x4110cf
  411084:	(bad)  
  411086:	mov    WORD PTR [edx],cs
  411088:	adc    DWORD PTR [eax-0x34],ebx
  41108b:	in     eax,0xc7
  41108d:	dec    ebx
  41108e:	fsubr  st(0),st
  411090:	int3   
  411091:	cld    
  411092:	add    dl,BYTE PTR [ebp+0x634aef9c]
  411098:	xchg   ebp,eax
  411099:	mov    DWORD PTR [esi+0x931f69b],0x97f7eb47
  4110a3:	jnp    0x41106d
  4110a5:	dec    edx
  4110a6:	xor    BYTE PTR [ebx-0x318bf197],dl
  4110ac:	daa    
  4110ad:	ds fcmovnb st,st(2)
  4110b0:	sbb    eax,0x18740e04
  4110b5:	push   es
  4110b6:	pop    ecx
  4110b7:	sbb    BYTE PTR [edi+0x25],ch
  4110ba:	xor    al,0x53
  4110bc:	sahf   
  4110bd:	aad    0xb4
  4110bf:	(bad)  
  4110c0:	cli    
  4110c1:	pusha  
  4110c2:	mov    edi,0x3f14aa00
  4110c7:	mov    ah,0x98
  4110c9:	mov    esp,0x36801545
  4110ce:	add    eax,0x7249bcee
  4110d3:	push   esi
  4110d4:	dec    edi
  4110d5:	scas   eax,DWORD PTR es:[edi]
  4110d6:	or     DWORD PTR [edx],ebp
  4110d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110d9:	push   0x74
  4110db:	inc    ebx
  4110dc:	dec    esp
  4110dd:	adc    ebp,DWORD PTR [ebx+0x10d41ad0]
  4110e3:	or     dl,ch
  4110e5:	daa    
  4110e6:	ret    0x9d2b
  4110e9:	outs   dx,BYTE PTR ds:[esi]
  4110ea:	mov    dl,0xf3
  4110ec:	add    eax,0xde4b55ab
  4110f1:	idiv   DWORD PTR [esi]
  4110f3:	sahf   
  4110f4:	push   0xffffffbb
  4110f6:	adc    edx,DWORD PTR [ebp+eiz*8-0x48]
  4110fa:	mov    ah,0x73
  4110fc:	test   BYTE PTR [edx+0x2879aa24],dl
  411102:	test   BYTE PTR [esi-0x9],bl
  411105:	(bad)  
  411106:	adc    BYTE PTR [ecx+0x2d0d33c6],dl
  41110c:	pop    esp
  41110d:	dec    esp
  41110e:	aam    0x8f
  411110:	sub    eax,0x37
  411113:	inc    edi
  411114:	mul    DWORD PTR ds:0xd3e94075
  41111a:	sti    
  41111b:	fld    DWORD PTR [edi*8-0x96e5f55]
  411122:	or     eax,0xc379bb77
  411127:	xor    edx,ecx
  411129:	adc    dh,BYTE PTR [esp+edx*2+0x66]
  41112d:	cmp    edx,DWORD PTR gs:[ecx+0x731320a3]
  411134:	mov    ds:0x905c7331,eax
  411139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41113a:	fs (bad) 
  41113c:	sbb    eax,0x35c231fb
  411141:	call   0xa507:0x2cbcf128
  411148:	push   cs
  411149:	test   al,al
  41114b:	js     0x4111b3
  41114d:	dec    esp
  41114e:	retf   0xc22f
  411151:	xchg   edi,eax
  411152:	xchg   edi,eax
  411153:	das    
  411154:	mov    ebp,0x9430c95f
  411159:	ins    BYTE PTR es:[edi],dx
  41115a:	inc    ebp
  41115b:	js     0x41110b
  41115d:	retf   
  41115e:	addr16 push ss
  411160:	inc    edi
  411161:	das    
  411162:	rol    esp,1
  411164:	mov    esp,edx
  411166:	mov    ecx,0x13235db4
  41116b:	mov    al,ds:0xb6d90283
  411170:	xor    ch,BYTE PTR [ebx+0x4c49afa7]
  411176:	xchg   edi,eax
  411177:	call   0x8b95f16d
  41117c:	les    edx,FWORD PTR [edx]
  41117e:	clc    
  41117f:	jge    0x41113c
  411181:	jbe    0x4111b8
  411183:	test   BYTE PTR [ebx-0x14],0x21
  411187:	dec    edi
  411188:	add    DWORD PTR [ecx],esi
  41118a:	adc    ch,BYTE PTR [eax]
  41118c:	mov    al,0xcb
  41118e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411190:	es ret 0x9c33
  411194:	xchg   edx,eax
  411195:	neg    DWORD PTR [edi+0x7cc8f410]
  41119b:	push   esp
  41119c:	pop    edx
  41119d:	mov    ds:0x4aeff61b,al
  4111a2:	sub    bl,0xf
  4111a5:	mov    cl,0x9f
  4111a7:	dec    edx
  4111a8:	loopne 0x4111e7
  4111aa:	add    al,0x4
  4111ac:	or     dh,BYTE PTR [esi-0x293e40e1]
  4111b2:	ss push edx
  4111b4:	stos   BYTE PTR es:[edi],al
  4111b5:	gs scas al,BYTE PTR es:[edi]
  4111b7:	jno    0x411190
  4111b9:	outs   dx,DWORD PTR ds:[esi]
  4111ba:	(bad)  
  4111bb:	shl    BYTE PTR [edx-0x128369bc],1
  4111c1:	inc    edx
  4111c2:	bound  ecx,QWORD PTR es:[eax]
  4111c5:	xchg   esp,eax
  4111c6:	or     al,0xc9
  4111c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111c9:	or     edi,ecx
  4111cb:	pop    esi
  4111cc:	jmp    0x257a:0x856df272
  4111d3:	cli    
  4111d4:	les    esp,FWORD PTR [ecx+0x15]
  4111d7:	jp     0x411194
  4111d9:	lock adc eax,0xf70b049
  4111df:	sbb    al,0x18
  4111e1:	test   BYTE PTR [ecx-0x25dbfb88],bl
  4111e7:	push   ebp
  4111e8:	pop    edi
  4111e9:	xchg   esp,eax
  4111ea:	ss adc al,0x60
  4111ed:	test   eax,0xe38e6884
  4111f2:	hlt    
  4111f3:	mov    ds,WORD PTR [ebx]
  4111f5:	jnp    0x411187
  4111f7:	ficom  WORD PTR [ecx-0x69]
  4111fa:	js     0x411259
  4111fc:	call   0xaf27:0x9639c980
  411203:	jns    0x41125c
  411205:	add    eax,0xd0c487b2
  41120a:	or     eax,0x5cf14ac1
  41120f:	mov    ebp,0x29170594
  411214:	xor    DWORD PTR [edi+ebx*8+0x7d9ce1d7],edx
  41121b:	ja     0x41127b
  41121d:	xchg   ebx,eax
  41121e:	inc    edx
  41121f:	inc    ebp
  411220:	nop
  411221:	mov    ebp,0x9eff36bd
  411226:	adc    eax,0x3892c83
  41122b:	add    DWORD PTR [esi+0x7bfd7b49],esi
  411231:	push   ds
  411232:	or     BYTE PTR [edi+ebx*8],ch
  411235:	xor    esi,eax
  411237:	test   al,0xb4
  411239:	push   ebx
  41123a:	fdivr  QWORD PTR [eax+ebp*4+0x5b96baa6]
  411241:	mov    ebp,0x96f3831f
  411246:	push   esp
  411247:	arpl   WORD PTR [ebx],ax
  411249:	in     eax,dx
  41124a:	mov    ds:0x331323cc,al
  41124f:	jg     0x411237
  411251:	adc    al,0xf8
  411253:	fbstp  TBYTE PTR [esi]
  411255:	stos   DWORD PTR es:[edi],eax
  411256:	les    esi,FWORD PTR [eax+0x5a14e8e3]
  41125c:	mov    ds:0xf8623ff9,al
  411261:	call   0x302cc66b
  411266:	call   0x6369326a
  41126b:	cmp    ch,BYTE PTR [ebx-0x1d68798f]
  411271:	shr    BYTE PTR [edx+0x715dfdfb],1
  411277:	call   0x32f354b9
  41127c:	out    0x11,al
  41127e:	sub    BYTE PTR [ebp-0x5913f91d],ah
  411284:	test   BYTE PTR [ebx],dl
  411286:	or     ecx,esp
  411288:	or     al,0xa
  41128a:	hlt    
  41128b:	add    al,BYTE PTR [edx-0x17]
  41128e:	adc    BYTE PTR [edi-0x2],0x51
  411292:	jb     0x411301
  411294:	pop    es
  411295:	(bad)  
  411296:	js     0x4112b3
  411298:	xchg   ebp,eax
  411299:	lods   al,BYTE PTR ds:[esi]
  41129a:	jo     0x4112d9
  41129c:	js     0x411288
  41129e:	fs mov dh,0x33
  4112a1:	xor    DWORD PTR ds:0xc4974d8d,edi
  4112a7:	mov    ds:0xf6528aaf,al
  4112ac:	aas    
  4112ad:	rcl    BYTE PTR [edx-0x70],0xe2
  4112b1:	fistp  WORD PTR [ebp-0x5f0bc225]
  4112b7:	mov    ebx,ecx
  4112b9:	push   es
  4112ba:	icebp  
  4112bb:	jbe    0x4112ee
  4112bd:	push   esi
  4112be:	std    
  4112bf:	jmp    0xb845951a
  4112c4:	sti    
  4112c5:	shr    BYTE PTR [edx+0xa],0xc2
  4112c9:	mov    al,0x5b
  4112cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112cc:	pop    ebx
  4112cd:	lods   al,BYTE PTR ds:[esi]
  4112ce:	inc    edx
  4112cf:	mov    esi,0x95d086db
  4112d4:	inc    esp
  4112d5:	xor    al,0xf1
  4112d7:	rcl    DWORD PTR es:[edi-0x4d],cl
  4112db:	push   ebp
  4112dc:	test   al,0x95
  4112de:	js     0x41135d
  4112e0:	ins    BYTE PTR es:[edi],dx
  4112e1:	xchg   BYTE PTR [esi],dh
  4112e3:	mov    ds:0xd10041d9,al
  4112e8:	cmp    bl,BYTE PTR [ebx+0x67]
  4112eb:	xchg   BYTE PTR [edx+0x16],dl
  4112ee:	das    
  4112ef:	test   al,0xc2
  4112f1:	popa   
  4112f2:	je     0x411292
  4112f4:	fldenv [ebx]
  4112f6:	fnstsw WORD PTR [esi]
  4112f8:	push   ss
  4112f9:	je     0x411351
  4112fb:	ret    0x2b54
  4112fe:	cli    
  4112ff:	ret    0xc2e6
  411302:	sub    bh,BYTE PTR [eax-0x6bbdae20]
  411308:	push   ebx
  411309:	push   ebp
  41130a:	imul   DWORD PTR [esi]
  41130c:	fidivr WORD PTR [esi+0x2a32d95b]
  411312:	inc    ebp
  411313:	cmc    
  411314:	push   esp
  411315:	mov    WORD PTR [esi+0x221ad140],fs
  41131b:	mov    eax,ds:0x8d15c198
  411320:	push   esi
  411321:	test   BYTE PTR [ebx+0x6d],dl
  411324:	shl    BYTE PTR [edi-0x18de4c18],0x91
  41132b:	sar    DWORD PTR [edx],1
  41132d:	sbb    al,0x34
  41132f:	loopne 0x411384
  411331:	jnp    0x411352
  411333:	jmp    0x41135e
  411335:	adc    DWORD PTR [ecx-0x61a6a41a],esp
  41133b:	(bad)  
  41133c:	xchg   edi,eax
  41133d:	add    eax,0x825a2ce
  411342:	bswap  esi
  411344:	aam    0x7a
  411346:	add    esp,DWORD PTR [ecx]
  411348:	sub    eax,0x468835d0
  41134d:	add    dh,cl
  41134f:	fisub  DWORD PTR [edi]
  411351:	xlat   BYTE PTR ds:[ebx]
  411352:	inc    edx
  411353:	sbb    ch,BYTE PTR [ebx+0xe2aea1]
  411359:	adc    al,0x4f
  41135b:	or     al,BYTE PTR [esi]
  41135d:	retf   
  41135e:	fistp  DWORD PTR [edi-0x3f2671a6]
  411364:	jl     0x411354
  411366:	(bad)  
  411367:	loopne 0x4113e1
  411369:	jecxz  0x4112eb
  41136b:	mov    ch,al
  41136d:	outs   dx,BYTE PTR ds:[esi]
  41136e:	jl     0x4113c6
  411370:	idiv   cl
  411372:	pop    esi
  411373:	inc    esp
  411374:	mov    ds:0x82bad10d,eax
  411379:	pop    ecx
  41137a:	jae    0x41132b
  41137c:	in     al,0x8a
  41137e:	dec    esi
  41137f:	pop    ebp
  411380:	mov    DWORD PTR [ebx-0x47235e14],0xc5ec97ff
  41138a:	jge    0x411319
  41138c:	mov    dl,0xc4
  41138e:	sbb    ch,bl
  411390:	aad    0x8a
  411392:	ror    BYTE PTR [ebp-0x2a60b0fe],cl
  411398:	hlt    
  411399:	ficomp DWORD PTR [edx-0x63]
  41139c:	jl     0x4113e9
  41139e:	sub    eax,0xa76ea841
  4113a3:	and    al,0x55
  4113a5:	mov    edx,0x85ec3b99
  4113aa:	loope  0x411333
  4113ac:	sbb    BYTE PTR [ebx+edx*8-0x1bfbdc41],cl
  4113b3:	popf   
  4113b4:	les    eax,FWORD PTR [ebx+0x1a]
  4113b7:	stc    
  4113b8:	adc    edi,eax
  4113ba:	xchg   esp,eax
  4113bb:	loop   0x411357
  4113bd:	shr    bl,1
  4113bf:	std    
  4113c0:	mov    dl,0xa7
  4113c2:	xor    esp,DWORD PTR [ebx-0x6611dd7a]
  4113c8:	jbe    0x41140d
  4113ca:	cmc    
  4113cb:	cmp    edi,DWORD PTR [edi]
  4113cd:	jnp    0x411418
  4113cf:	sbb    eax,0x9fede616
  4113d4:	repz mov ebp,0xfe716154
  4113da:	ds out dx,al
  4113dc:	out    0x65,al
  4113de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113df:	daa    
  4113e0:	add    DWORD PTR [edx+0xd23ff00],ebx
  4113e6:	mul    DWORD PTR [ebp+0x69]
  4113e9:	sub    al,0x3d
  4113eb:	ret    
  4113ec:	aam    0x24
  4113ee:	mov    al,0xe9
  4113f0:	push   cs
  4113f1:	mov    esi,0xaa0dbe95
  4113f6:	repz out dx,eax
  4113f8:	cmp    esi,DWORD PTR [ebp+ecx*8-0x483eba92]
  4113ff:	scas   eax,DWORD PTR es:[edi]
  411400:	jmp    0x24d0:0xbafba8dc
  411407:	inc    edx
  411408:	or     esi,DWORD PTR [edx+0x4b]
  41140b:	jae    0x4113c5
  41140d:	sub    al,0x6c
  41140f:	fidiv  WORD PTR [eax-0x768a29b6]
  411415:	bnd js 0x41140c
  411418:	push   edi
  411419:	pop    eax
  41141a:	mov    cl,0x82
  41141c:	or     eax,0x46959199
  411421:	dec    eax
  411422:	mov    WORD PTR [edx],gs
  411424:	cmp    al,0x35
  411426:	jb     0x41145b
  411428:	or     ebx,DWORD PTR [edx]
  41142a:	pop    esp
  41142b:	fmul   QWORD PTR [ecx-0x3]
  41142e:	sbb    DWORD PTR [ebp+0x2757d47b],esp
  411434:	(bad)  
  411435:	(bad)  
  411436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411437:	pop    ecx
  411438:	dec    ebx
  411439:	xor    dl,BYTE PTR [eax+0x16]
  41143c:	adc    al,0x6f
  41143e:	das    
  41143f:	sti    
  411440:	stos   DWORD PTR es:[edi],eax
  411441:	add    dh,ah
  411443:	clc    
  411444:	cwde   
  411445:	cld    
  411446:	shl    DWORD PTR [ecx+0x1b],cl
  411449:	pusha  
  41144a:	loope  0x4114bf
  41144c:	leave  
  41144d:	inc    ebp
  41144e:	push   0x59b0193
  411453:	jmp    0x5fee3f
  411458:	ja     0x41143e
  41145a:	inc    edi
  41145b:	cwde   
  41145c:	cmp    DWORD PTR [esi-0x5ffe163d],edi
  411462:	inc    ebx
  411463:	pop    ss
  411464:	aam    0xe0
  411466:	push   0xce0fe4f1
  41146b:	xchg   edi,eax
  41146c:	sub    DWORD PTR [ebx],edx
  41146e:	push   ss
  41146f:	mov    dl,0xf0
  411471:	add    eax,0xca505a2f
  411476:	jg     0x4114f1
  411478:	pusha  
  411479:	xor    DWORD PTR [edi],ebp
  41147b:	test   DWORD PTR [ecx-0x8],0xec7ea14f
  411482:	fistp  QWORD PTR [ebp+ebp*4+0x34440c29]
  411489:	outs   dx,BYTE PTR ds:[esi]
  41148a:	out    dx,al
  41148b:	adc    BYTE PTR [ecx+0x17],al
  41148e:	mov    ds:0xd79ff5e9,al
  411493:	mov    ds:0x962bedd5,eax
  411498:	cli    
  411499:	int    0xea
  41149b:	mov    edx,0x9ae36c12
  4114a0:	cmp    ecx,DWORD PTR [edx+eiz*1+0x60]
  4114a4:	add    ah,ch
  4114a6:	or     BYTE PTR [esp+edx*8],dh
  4114a9:	pop    es
  4114aa:	jecxz  0x41148d
  4114ac:	mov    edx,0x8577e606
  4114b1:	scas   al,BYTE PTR es:[edi]
  4114b2:	sbb    al,0xb1
  4114b4:	sbb    esi,DWORD PTR [edx]
  4114b6:	mov    ch,0x4e
  4114b8:	mov    bh,0xda
  4114ba:	mov    dh,BYTE PTR [esp+ebx*2]
  4114bd:	repnz cld 
  4114bf:	cmp    eax,0x9e20a775
  4114c4:	mov    edx,0x4a7229cc
  4114c9:	dec    edi
  4114ca:	or     eax,0x34793d34
  4114cf:	push   ebx
  4114d0:	push   esp
  4114d1:	mov    gs,WORD PTR [eax]
  4114d3:	js     0x411462
  4114d5:	out    dx,al
  4114d6:	repnz in eax,0xbb
  4114d9:	pop    edx
  4114da:	cs inc esi
  4114dc:	in     al,dx
  4114dd:	test   BYTE PTR [ecx],ch
  4114df:	lahf   
  4114e0:	test   ah,ch
  4114e2:	out    dx,al
  4114e3:	stos   DWORD PTR es:[edi],eax
  4114e4:	jo     0x4114fb
  4114e6:	inc    edi
  4114e7:	sub    al,BYTE PTR [ebx]
  4114e9:	popf   
  4114ea:	push   es
  4114eb:	xchg   edx,eax
  4114ec:	(bad)  
  4114ed:	out    0xaa,al
  4114ef:	aad    0xad
  4114f1:	cmp    BYTE PTR [edx-0x39],ch
  4114f4:	inc    edx
  4114f5:	mov    ch,0x35
  4114f7:	fnstsw ax
  4114f9:	shl    dh,0xa7
  4114fc:	aam    0xe4
  4114fe:	es jp  0x41151b
  411501:	and    dl,BYTE PTR [ebx-0x20]
  411504:	loopne 0x4114ef
  411506:	ret    0x7534
  411509:	adc    bl,BYTE PTR [ecx]
  41150b:	aam    0xab
  41150d:	in     al,dx
  41150e:	imul   edx,DWORD PTR [esi+0x73c5b8cc],0x6a7be2d
  411518:	punpckhdq mm0,QWORD PTR [ebp+0x67a8bff4]
  41151f:	aad    0x9c
  411521:	(bad)  
  411522:	mov    dl,0x8
  411524:	dec    ebp
  411525:	cvtpi2ps xmm2,QWORD PTR cs:[edi-0x75]
  41152a:	adc    BYTE PTR [ebp+0x5f67de4c],al
  411530:	outs   dx,BYTE PTR ds:[esi]
  411531:	xor    al,BYTE PTR [eax-0x4f]
  411534:	and    DWORD PTR [edi+0x16a6a7e0],0x2228e101
  41153e:	mov    bh,0x16
  411540:	retf   0xb4b4
  411543:	jnp    0x4114cc
  411545:	std    
  411546:	out    dx,eax
  411547:	fwait
  411548:	rcr    DWORD PTR [edx-0xecc8ee8],1
  41154e:	pusha  
  41154f:	and    al,BYTE PTR [edi+0x2f7624e0]
  411555:	mov    ds:0x914eac9b,eax
  41155a:	mov    al,ds:0xf9fc269a
  41155f:	xchg   ecx,eax
  411560:	cs stos DWORD PTR es:[edi],eax
  411562:	sub    BYTE PTR [edx+0x3f143ce1],dl
  411568:	pop    edx
  411569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41156a:	push   edi
  41156b:	repnz pop ebx
  41156d:	add    BYTE PTR [eax],cl
  41156f:	pop    edi
  411570:	or     eax,0x3d3cd776
  411575:	in     eax,0xc2
  411577:	adc    bh,al
  411579:	out    0x78,al
  41157b:	xchg   DWORD PTR [ebp-0x25fcc143],edi
  411581:	mov    ebp,DWORD PTR [ebx]
  411583:	int3   
  411584:	or     esi,DWORD PTR [edx]
  411586:	push   esp
  411587:	mov    eax,ds:0x4c59e72c
  41158c:	clc    
  41158d:	sub    eax,0xfd11c58a
  411592:	scas   eax,DWORD PTR es:[edi]
  411593:	push   edi
  411594:	sub    dl,ch
  411596:	loop   0x411584
  411598:	mov    ebx,0xfcc5a410
  41159d:	and    DWORD PTR [edx-0x26],0x5ea75bb9
  4115a4:	jecxz  0x41157a
  4115a6:	adc    al,BYTE PTR [eax+0x39]
  4115a9:	inc    ebx
  4115aa:	jae    0x411593
  4115ac:	pop    es
  4115ad:	xchg   edx,eax
  4115ae:	lea    ebx,[ebx]
  4115b0:	loop   0x4115df
  4115b2:	lock outs dx,DWORD PTR es:[esi]
  4115b5:	fstp   TBYTE PTR [ebx+0x6a]
  4115b8:	jl     0x411620
  4115ba:	(bad)  [esi]
  4115bc:	pop    ds
  4115bd:	adc    BYTE PTR [ebx+0x5fe912e8],bh
  4115c3:	(bad)  
  4115c4:	fist   DWORD PTR [edx+esi*2-0x1fddb4b1]
  4115cb:	and    DWORD PTR gs:[edi-0x36],ebp
  4115cf:	shr    DWORD PTR [ebx],1
  4115d1:	dec    ecx
  4115d2:	jp     0x411639
  4115d4:	and    eax,0x9c5f5216
  4115d9:	mov    WORD PTR [edi],gs
  4115db:	pop    es
  4115dc:	push   edi
  4115dd:	rol    DWORD PTR [esi],1
  4115df:	into   
  4115e0:	aaa    
  4115e1:	fcom   QWORD PTR [eax+0x47167e76]
  4115e7:	retf   
  4115e8:	sub    DWORD PTR [edx-0x2c3a5bf3],ebx
  4115ee:	pop    ebp
  4115ef:	pop    ss
  4115f0:	jns    0x4115e7
  4115f2:	outs   dx,BYTE PTR ds:[esi]
  4115f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115f4:	fild   DWORD PTR [ebp+0x3c8fa13e]
  4115fa:	inc    esp
  4115fb:	or     eax,0x22f29c7b
  411600:	rcl    BYTE PTR [ebp+0x1b],1
  411603:	inc    edx
  411604:	in     al,dx
  411605:	in     eax,dx
  411606:	aas    
  411607:	(bad)  
  411608:	mov    ecx,0x6f8a2c3c
  41160d:	out    0x15,eax
  41160f:	add    DWORD PTR [esi+edi*1+0x5806696],esp
  411616:	imul   ecx,DWORD PTR [edx-0x5fa45f98],0xe4e2eb5a
  411620:	jmp    0x41164f
  411622:	int3   
  411623:	outs   dx,BYTE PTR ds:[esi]
  411624:	xchg   edi,eax
  411625:	iret   
  411626:	xor    BYTE PTR [eax-0x25f4e17b],dh
  41162c:	lds    esp,FWORD PTR [edx-0x6f331843]
  411632:	clc    
  411633:	mov    ebp,0x3f01d220
  411638:	mov    es,WORD PTR [ebp+0x30]
  41163b:	add    al,0xb2
  41163d:	ins    DWORD PTR es:[edi],dx
  41163e:	fwait
  41163f:	push   ecx
  411640:	sub    eax,0x5aae26e
  411645:	cwde   
  411646:	mov    BYTE PTR [ecx+0x4f87fe8f],al
  41164c:	push   ebx
  41164d:	inc    ecx
  41164e:	mov    ds:0x4faec44e,al
  411653:	xchg   esp,eax
  411654:	jae    0x4116a4
  411656:	ret    0xc732
  411659:	imul   edi,ecx,0xffffffa6
  41165c:	adc    BYTE PTR [edi+0x3702f2b5],ch
  411662:	data16 mov dl,0xfb
  411665:	push   eax
  411666:	not    DWORD PTR [eax]
  411668:	pop    ds
  411669:	sub    al,0xec
  41166b:	mov    ebp,0x78a8f423
  411670:	jge    0x411662
  411672:	add    BYTE PTR [edx+0x44097a3b],ch
  411678:	pop    ds
  411679:	mov    bl,0xcf
  41167b:	(bad)  
  41167c:	jno    0x4116ea
  41167e:	mov    ah,0x13
  411680:	or     BYTE PTR [edi],cl
  411682:	fwait
  411683:	sub    cl,BYTE PTR [ebx]
  411685:	mov    esi,0x2d917b7
  41168a:	lock fcmovne st,st(3)
  41168d:	dec    edi
  41168e:	rcl    ecx,1
  411690:	stos   DWORD PTR es:[edi],eax
  411691:	pop    esi
  411692:	mov    BYTE PTR [edi+0xab00069],bl
  411698:	sub    BYTE PTR [eax-0x32],0x48
  41169c:	inc    esp
  41169d:	int    0x56
  41169f:	cmp    eax,0x7acf6293
  4116a4:	mov    esi,0xb2a6741e
  4116a9:	pushf  
  4116aa:	push   0x5f
  4116ac:	pop    eax
  4116ad:	inc    eax
  4116ae:	sub    ah,cl
  4116b0:	(bad)  [ecx-0x2a]
  4116b3:	sub    edi,DWORD PTR [edi]
  4116b5:	adc    edi,DWORD PTR [esi+eiz*1+0x64]
  4116b9:	in     al,dx
  4116ba:	adc    BYTE PTR [ebx],cl
  4116bc:	scas   al,BYTE PTR es:[edi]
  4116bd:	ins    DWORD PTR es:[edi],dx
  4116be:	addr16 xchg esi,eax
  4116c0:	and    esi,DWORD PTR [ecx-0x7826d93e]
  4116c6:	xchg   ebp,eax
  4116c7:	inc    edi
  4116c8:	add    DWORD PTR [ebx],0x29
  4116cb:	outs   dx,BYTE PTR ds:[esi]
  4116cc:	fs mov ch,0x5b
  4116cf:	int3   
  4116d0:	aas    
  4116d1:	mov    esi,0x6372d87f
  4116d6:	xor    BYTE PTR [esi],cl
  4116d8:	xchg   ebp,eax
  4116d9:	adc    BYTE PTR [bx+si],0x28
  4116dd:	jae    0x4116b7
  4116df:	adc    BYTE PTR [ebp-0x67],0x56
  4116e3:	lock (bad) 
  4116e5:	lods   eax,DWORD PTR ds:[esi]
  4116e6:	add    BYTE PTR [ebp+0x208a21e1],0x61
  4116ed:	fld    st(2)
  4116ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116f0:	dec    edi
  4116f1:	xor    ecx,DWORD PTR [edx-0x40]
  4116f4:	cmp    al,0xe3
  4116f6:	xchg   BYTE PTR [ebp+0x4aafd944],ah
  4116fc:	adc    BYTE PTR [eax],ah
  4116fe:	sbb    DWORD PTR [eax],0x1372f08
  411704:	and    bl,BYTE PTR [edi]
  411706:	les    esp,FWORD PTR [ecx]
  411708:	mov    ss,WORD PTR [edi-0x66f4c443]
  41170e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41170f:	mov    ecx,0x14726ca9
  411714:	jl     0x4116ea
  411716:	loope  0x411772
  411718:	push   es
  411719:	mov    ebx,0x4da3ef2
  41171e:	scas   al,BYTE PTR es:[edi]
  41171f:	imul   ecx,DWORD PTR [edi+edi*1],0xfffffff2
  411723:	out    dx,al
  411724:	xor    BYTE PTR [eax-0x62],al
  411727:	inc    eax
  411728:	mov    gs,WORD PTR [eax+0x71]
  41172b:	and    al,ch
  41172d:	cmp    al,dl
  41172f:	sub    BYTE PTR [esi],ah
  411731:	xchg   esp,eax
  411732:	fwait
  411733:	mov    al,0x48
  411735:	int    0x50
  411737:	or     BYTE PTR [ebp-0x5c2b3849],bl
  41173d:	stos   DWORD PTR es:[edi],eax
  41173e:	sub    ebx,DWORD PTR [ebp+0x1a]
  411741:	mov    ch,0xf5
  411743:	test   al,0x62
  411745:	in     al,dx
  411746:	call   0xf1d:0x418daa5b
  41174d:	fs cmp al,0xa5
  411750:	xchg   DWORD PTR [esi],ebp
  411752:	sub    al,0xe4
  411754:	push   esi
  411755:	in     al,dx
  411756:	loope  0x411751
  411758:	mov    bh,0xb8
  41175a:	shr    BYTE PTR [eax-0x5cde6254],0x39
  411761:	aas    
  411762:	fldl2e 
  411764:	sbb    ebp,DWORD PTR [ecx]
  411766:	pusha  
  411767:	xlat   BYTE PTR ds:[ebx]
  411768:	clc    
  411769:	int3   
  41176a:	sti    
  41176b:	xchg   edi,eax
  41176c:	je     0x41174b
  41176e:	dec    edi
  41176f:	mov    ds:0xef479a2c,al
  411774:	clc    
  411775:	jmp    0x4117d7
  411777:	daa    
  411778:	pop    esi
  411779:	mov    eax,0x4ddcdc54
  41177e:	cmp    BYTE PTR [ecx-0x3f],dh
  411781:	clc    
  411782:	js     0x4117a9
  411784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411785:	mov    bl,0x86
  411787:	repnz inc edx
  411789:	inc    ebp
  41178a:	into   
  41178b:	ja     0xbfb22af4
  411791:	mov    eax,ecx
  411793:	sbb    dh,BYTE PTR ds:0xa9dfaccd
  411799:	ficom  DWORD PTR [eax+edi*4]
  41179c:	dec    esp
  41179d:	lock sub BYTE PTR [eax-0x6664ab0f],ch
  4117a4:	push   cs
  4117a5:	push   0x665681b2
  4117aa:	xor    al,0xa2
  4117ac:	cmp    eax,0x6ce4fd5
  4117b1:	cmp    DWORD PTR [esi+ebp*4],ebx
  4117b4:	mov    ebp,0x86c11c06
  4117b9:	jle    0x411743
  4117bb:	cmp    bh,cl
  4117bd:	jb     0x411781
  4117bf:	lods   eax,DWORD PTR ds:[esi]
  4117c0:	sub    al,0xcf
  4117c2:	push   edi
  4117c3:	cmp    ebp,ecx
  4117c5:	jb     0x411763
  4117c7:	mov    dl,0x7
  4117c9:	rol    eax,cl
  4117cb:	lods   eax,DWORD PTR ds:[esi]
  4117cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117cd:	mov    edi,0x6d4abdbd
  4117d2:	sbb    edx,DWORD PTR [edi]
  4117d4:	inc    esi
  4117d5:	jge    0x41177f
  4117d7:	add    ah,cl
  4117d9:	and    eax,0xc4916285
  4117de:	test   eax,0xd889262e
  4117e3:	dec    esi
  4117e4:	in     eax,dx
  4117e5:	les    esi,FWORD PTR [esi-0x747f0b5e]
  4117eb:	push   esp
  4117ec:	jp     0x411855
  4117ee:	fisub  DWORD PTR [esi+ecx*1-0x7580772a]
  4117f5:	aam    0x73
  4117f7:	popa   
  4117f8:	and    BYTE PTR [edi-0x15],cl
  4117fb:	fcmovb st,st(4)
  4117fd:	int3   
  4117fe:	mov    ebx,0xe01e830a
  411803:	loope  0x41185e
  411805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411806:	cdq    
  411807:	stc    
  411808:	pusha  
  411809:	add    ch,bl
  41180b:	mov    esi,0xf83bdf90
  411810:	imul   ecx
  411812:	jg     0x411803
  411814:	push   ebx
  411815:	icebp  
  411816:	in     al,dx
  411817:	jbe    0x4117c7
  411819:	(bad)  
  41181a:	sahf   
  41181b:	mov    edx,0x167f4a5a
  411820:	(bad)  
  411821:	sbb    eax,0x56b571b1
  411826:	mov    ch,0xa
  411828:	inc    ecx
  411829:	out    dx,eax
  41182a:	add    DWORD PTR [eax+ecx*1-0x3e],edi
  41182e:	mov    ch,0xbf
  411830:	addr16 push eax
  411832:	aas    
  411833:	in     al,0x28
  411835:	xlat   BYTE PTR ds:[ebx]
  411836:	push   0xb561d67c
  41183b:	std    
  41183c:	sahf   
  41183d:	data16 ja 0x41186e
  411840:	retf   
  411841:	cmovl  ecx,DWORD PTR [ebx-0x2a]
  411845:	xchg   DWORD PTR [edi-0x37409dc9],edi
  41184b:	xchg   DWORD PTR [esi+0x14],edx
  41184e:	mov    ds:0x2403e218,al
  411853:	ds pop esp
  411855:	dec    ebp
  411856:	setg   BYTE PTR [esi+0x1030a848]
  41185d:	bound  esi,QWORD PTR ss:[eax-0x3834a13e]
  411864:	sbb    esp,DWORD PTR [esi+0x4ce68d36]
  41186a:	pop    es
  41186b:	xchg   edi,eax
  41186c:	stos   DWORD PTR es:[edi],eax
  41186d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41186e:	sahf   
  41186f:	sbb    al,0xfc
  411871:	loop   0x411848
  411873:	xchg   ecx,eax
  411874:	adc    cl,BYTE PTR ds:0xcab71c70
  41187a:	dec    edx
  41187b:	(bad)  
  41187c:	out    0xef,eax
  41187e:	mov    ds:0x5993e9af,al
  411883:	and    DWORD PTR [ecx-0x64013a98],eax
  411889:	xor    esi,esi
  41188b:	mov    eax,0x9de25aa
  411890:	dec    ecx
  411892:	adc    ebp,ebx
  411894:	shr    BYTE PTR [ebx],1
  411896:	imul   eax,DWORD PTR [eax],0x48
  411899:	add    ebp,DWORD PTR [edx+0x5dda8fbe]
  41189f:	popa   
  4118a0:	adc    al,0x20
  4118a2:	jl     0x41185d
  4118a4:	xlat   BYTE PTR ds:[ebx]
  4118a5:	popf   
  4118a6:	pop    ds
  4118a7:	(bad)  
  4118a8:	fnclex 
  4118aa:	in     al,0xd0
  4118ac:	cld    
  4118ad:	es retf 0xdf5a
  4118b1:	xchg   BYTE PTR [edi],al
  4118b3:	fmul   QWORD PTR [esi]
  4118b5:	add    al,0x1b
  4118b7:	pop    esi
  4118b8:	mov    bl,0xfd
  4118ba:	pop    esp
  4118bb:	adc    eax,0x825e53d6
  4118c0:	dec    esp
  4118c1:	aad    0x4c
  4118c3:	inc    esi
  4118c4:	fdivr  QWORD PTR [esp+ecx*4+0x231611e7]
  4118cb:	iret   
  4118cc:	aad    0x60
  4118ce:	stos   BYTE PTR es:[edi],al
  4118cf:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d1:	pop    ebx
  4118d2:	push   eax
  4118d3:	call   0x78e9:0x4010b992
  4118da:	std    
  4118db:	pushf  
  4118dc:	inc    eax
  4118dd:	loope  0x41191e
  4118df:	js     0x4118aa
  4118e1:	cli    
  4118e2:	sbb    BYTE PTR [eax+0x2d],0x5c
  4118e6:	cdq    
  4118e7:	(bad)  
  4118e8:	and    esp,DWORD PTR [ecx+esi*4]
  4118eb:	sahf   
  4118ec:	and    eax,DWORD PTR [esp+eax*1-0x52b814e6]
  4118f3:	or     ecx,DWORD PTR [edi-0x69]
  4118f6:	jne    0x4118fe
  4118f8:	mov    ebx,0xadd388de
  4118fd:	mov    dh,0xc8
  4118ff:	into   
  411900:	test   DWORD PTR [ebx+0x52],edx
  411903:	sub    ebp,DWORD PTR [ebx-0x7fcd7c5f]
  411909:	sub    ebp,DWORD PTR [esi-0x589e3625]
  41190f:	data16 sahf 
  411911:	xlat   BYTE PTR ds:[ebx]
  411912:	or     ebx,ebp
  411914:	xabort 0xe1
  411917:	cs je  0x411947
  41191a:	mov    eax,0xe74639c1
  41191f:	adc    al,0x70
  411921:	jns    0x4118ca
  411923:	pushf  
  411924:	sub    BYTE PTR [ebp+0x1a73f974],dh
  41192a:	icebp  
  41192b:	mov    bh,0xfc
  41192d:	push   cs
  41192e:	jge    0x4119ab
  411930:	xor    edi,DWORD PTR [edx+ebx*1]
  411933:	ja     0x41193e
  411935:	popf   
  411936:	cli    
  411937:	data16 out 0x61,al
  41193a:	add    al,0x7d
  41193c:	xchg   edx,eax
  41193d:	jecxz  0x411922
  41193f:	in     al,dx
  411940:	nop    edi
  411943:	pop    edx
  411944:	stos   DWORD PTR es:[edi],eax
  411945:	and    eax,0x2cd0ea44
  41194a:	mul    DWORD PTR [eax+edi*8]
  41194d:	or     BYTE PTR ds:0xb8067b12,bl
  411953:	scas   eax,DWORD PTR es:[edi]
  411954:	jle    0x411902
  411956:	xchg   esi,eax
  411957:	sti    
  411958:	push   ebp
  411959:	out    dx,al
  41195a:	sub    eax,0xe2667ebb
  41195f:	lds    esp,FWORD PTR es:[ecx-0x73f71ee]
  411966:	pop    ebx
  411967:	ss (bad) 
  411969:	es aas 
  41196b:	add    ecx,ebx
  41196d:	mov    edi,0xe5526d33
  411972:	ja     0x4119ed
  411974:	add    BYTE PTR [ebp-0x27c539b],dl
  41197a:	jno    0x41197f
  41197c:	lock es loopne 0x41197b
  411980:	cdq    
  411981:	jl     0x41198d
  411983:	mov    dl,0x2c
  411985:	and    al,0x38
  411987:	fidiv  DWORD PTR [edx+0x5c]
  41198a:	cmp    dl,BYTE PTR [esi+ebx*8+0x5b]
  41198e:	push   eax
  41198f:	or     DWORD PTR [edx+0x4dd1964c],eax
  411995:	out    dx,al
  411996:	cmp    DWORD PTR [eax+0x17103080],esi
  41199c:	in     eax,dx
  41199d:	repz fiadd DWORD PTR [esi]
  4119a0:	fnsave [edx+0x71911665]
  4119a6:	mov    ds:0xe05424a,eax
  4119ab:	xor    edx,ecx
  4119ad:	fcom   QWORD PTR [edx+0x33]
  4119b0:	aad    0xb
  4119b2:	xchg   edi,eax
  4119b3:	mov    edx,0x5c286c18
  4119b8:	ss call 0xcaa663b4
  4119be:	pop    ebp
  4119bf:	xchg   ecx,eax
  4119c0:	fdivp  st(1),st
  4119c2:	and    eax,0x41f67e4a
  4119c7:	std    
  4119c8:	sub    eax,0xd2c099c3
  4119cd:	scas   eax,DWORD PTR es:[edi]
  4119ce:	clc    
  4119cf:	pop    ebp
  4119d0:	mov    ds:0x6d14a821,eax
  4119d5:	and    ecx,ebx
  4119d7:	push   ebx
  4119d8:	ins    BYTE PTR es:[edi],dx
  4119d9:	cmp    al,BYTE PTR [eax+0x39]
  4119dc:	in     al,0x6b
  4119de:	ins    DWORD PTR es:[edi],dx
  4119df:	(bad)  [ebx+0x10]
  4119e2:	ficom  DWORD PTR [edx+0x22]
  4119e5:	aas    
  4119e6:	jge    0x411a05
  4119e8:	lds    ebx,FWORD PTR [edx]
  4119ea:	mov    al,ds:0x1f91c27f
  4119ef:	sbb    dh,BYTE PTR [esi+ebp*1-0x59142165]
  4119f6:	dec    eax
  4119f7:	call   0x75690158
  4119fc:	loope  0x411a60
  4119fe:	sub    bh,BYTE PTR [edx]
  411a00:	das    
  411a01:	(bad)  
  411a02:	mov    bh,0x52
  411a04:	arpl   WORD PTR [ecx+0x5307638a],dx
  411a0a:	mov    fs,WORD PTR [edx-0x222189bb]
  411a10:	lea    edx,[ecx-0x1188f086]
  411a16:	pop    ebx
  411a17:	push   0xffffffa4
  411a19:	int3   
  411a1a:	retf   0xc043
  411a1d:	add    al,0x79
  411a1f:	jbe    0x4119c9
  411a21:	adc    esi,edx
  411a23:	mov    BYTE PTR [ecx+0x62a28cdc],ch
  411a29:	out    0x1c,al
  411a2b:	fwait
  411a2c:	rol    BYTE PTR [edi-0x4d7b259f],0xd9
  411a33:	push   ds
  411a34:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  411a36:	mov    ebp,0xb7b1d21e
  411a3b:	add    BYTE PTR [ecx+edi*4-0x21],al
  411a3f:	outs   dx,DWORD PTR ds:[esi]
  411a40:	inc    edx
  411a41:	out    dx,al
  411a42:	retfw  0x6d4b
  411a46:	or     dh,bl
  411a48:	shl    BYTE PTR [esi+esi*8-0x2f],0x42
  411a4d:	xor    al,0xd1
  411a4f:	rcl    BYTE PTR [ebx+0x44],cl
  411a52:	push   edx
  411a53:	push   edx
  411a54:	shl    DWORD PTR [eax-0x1b],1
  411a57:	int3   
  411a58:	jmp    0x1e25c92b
  411a5d:	icebp  
  411a5e:	sbb    eax,0xb9f4ed82
  411a63:	fimul  DWORD PTR [edx+ebp*8]
  411a66:	repnz mov dh,0x2d
  411a69:	mov    ecx,0x65e8e5be
  411a6e:	push   ecx
  411a6f:	mov    dh,0xec
  411a71:	data16 ins BYTE PTR es:[edi],dx
  411a73:	add    al,0xd
  411a75:	mov    esi,DWORD PTR [eax+0x53a20879]
  411a7b:	sub    eax,0x90219f3c
  411a80:	shl    BYTE PTR [eax],0x45
  411a83:	mov    eax,ds:0xd5278f62
  411a88:	push   ds
  411a89:	not    BYTE PTR [edi-0x2b34e6e1]
  411a8f:	jp     0x411a2b
  411a91:	popf   
  411a92:	push   edi
  411a93:	sbb    eax,0x61cc1f5a
  411a98:	sub    al,dh
  411a9a:	or     cl,BYTE PTR [ebp-0x3e]
  411a9d:	nop
  411a9e:	mov    al,0x1c
  411aa0:	fwait
  411aa1:	jo     0x411a8e
  411aa3:	(bad)  
  411aa5:	or     al,BYTE PTR [ebp+0x6af48dff]
  411aab:	sub    BYTE PTR [ebx-0x6e],bh
  411aae:	sbb    DWORD PTR [edi+0x6756b114],eax
  411ab4:	sub    eax,0x317e484c
  411ab9:	mov    bh,0xa7
  411abb:	mov    ecx,0xd8e8c76d
  411ac0:	iret   
  411ac1:	sub    bl,ch
  411ac3:	gs jo  0x411b2c
  411ac6:	lods   eax,DWORD PTR ds:[esi]
  411ac7:	ja     0x411a94
  411ac9:	xor    DWORD PTR ds:0x82b34d7a,edi
  411acf:	jl     0x411b0e
  411ad1:	add    BYTE PTR [ebp+0x0],al
  411ad4:	loope  0x411a96
  411ad6:	mov    ds:0x51aa0525,eax
  411adb:	aas    
  411adc:	clc    
  411add:	jmp    0x1f6b:0x58fc66b2
  411ae4:	scas   al,BYTE PTR es:[edi]
  411ae5:	and    ebp,esp
  411ae7:	add    dh,ch
  411ae9:	sub    DWORD PTR [ebp-0x6fb8cead],ecx
  411aef:	mov    esp,0x66b18a64
  411af4:	dec    edx
  411af5:	(bad)  
  411af6:	jmp    DWORD PTR [edi+0x685666f8]
  411afc:	jnp    0x411b4c
  411afe:	and    al,0x26
  411b00:	repz dec ebp
  411b02:	jno    0x411b05
  411b04:	or     al,0x81
  411b06:	arpl   WORD PTR [ebp-0x36abc1cc],si
  411b0c:	sbb    DWORD PTR [eax+0x1cd1d3c4],ebp
  411b12:	pop    eax
  411b13:	pop    esp
  411b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b15:	inc    ebp
  411b16:	and    ebx,DWORD PTR [esi]
  411b18:	xor    ebx,DWORD PTR [eax-0x15]
  411b1b:	push   eax
  411b1c:	cmp    al,0xc4
  411b1e:	cld    
  411b1f:	xchg   esi,eax
  411b20:	inc    eax
  411b21:	mov    ecx,0x8d23703a
  411b26:	loopne 0x411b37
  411b28:	(bad)
  411b2b:	call   0xf2623716
  411b30:	(bad)  
  411b31:	div    DWORD PTR [ebp+0x14e735c6]
  411b37:	jns    0x411b94
  411b39:	ret    0x68f3
  411b3c:	push   esp
  411b3d:	mov    ds:0xaaa9b3b0,al
  411b42:	mov    BYTE PTR [bp+si-0x77c0],cl
  411b47:	rcr    BYTE PTR [edx-0x69],1
  411b4a:	aas    
  411b4b:	xchg   ebp,eax
  411b4c:	retf   0x203c
  411b4f:	call   0xb07a63c0
  411b54:	xor    ecx,eax
  411b56:	jle    0x411bc2
  411b58:	cmc    
  411b59:	or     al,0x21
  411b5b:	int    0x62
  411b5d:	xchg   DWORD PTR [eax-0x5c],esi
  411b60:	xchg   ecx,eax
  411b61:	or     esi,edi
  411b63:	mov    ebx,0x56088e8
  411b68:	adc    eax,0xd9836f97
  411b6d:	aaa    
  411b6e:	pop    eax
  411b6f:	mov    ebp,DWORD PTR [eax+0x24]
  411b72:	and    eax,0xc4ea267
  411b77:	shl    BYTE PTR [edx+0x6b7c641f],cl
  411b7d:	aas    
  411b7e:	xchg   ebx,eax
  411b7f:	inc    edi
  411b80:	xchg   ecx,eax
  411b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b82:	dec    ebx
  411b83:	xor    eax,0x2936ae3f
  411b88:	mov    ah,0xf8
  411b8a:	mov    eax,ds:0xcc6b6059
  411b8f:	or     al,0x85
  411b91:	dec    edx
  411b92:	es in  eax,dx
  411b94:	sbb    eax,0x34c89f6c
  411b99:	xor    ch,al
  411b9b:	inc    esi
  411b9c:	loop   0x411b94
  411b9e:	pop    ss
  411b9f:	rcr    DWORD PTR gs:[esi+0x39],0xe6
  411ba4:	cwde   
  411ba5:	and    ecx,DWORD PTR [esi+0x72]
  411ba8:	out    dx,eax
  411ba9:	pop    eax
  411baa:	adc    bh,cl
  411bac:	mov    ch,0xfd
  411bae:	mov    dh,0x33
  411bb0:	pop    ebp
  411bb1:	lods   eax,DWORD PTR ds:[esi]
  411bb2:	shl    DWORD PTR [esi+0x697e0a4d],cl
  411bb8:	sbb    BYTE PTR [eax+0x3e],ch
  411bbb:	mov    ?,WORD PTR [edi]
  411bbd:	(bad)  
  411bbe:	mov    esp,0xc89dd2f5
  411bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bc4:	icebp  
  411bc5:	inc    esi
  411bc6:	(bad)  
  411bc7:	lock mov bh,0x20
  411bca:	sbb    DWORD PTR [edi+0x224961a9],edx
  411bd0:	jae    0x411bb0
  411bd2:	mov    al,ds:0x92a01397
  411bd7:	pop    ss
  411bd8:	xchg   esi,eax
  411bd9:	add    al,0xb8
  411bdb:	int    0x3a
  411bdd:	inc    esp
  411bde:	in     al,dx
  411bdf:	sub    cl,BYTE PTR [esi-0x18]
  411be2:	stos   DWORD PTR es:[edi],eax
  411be3:	mov    ah,0xd8
  411be5:	adc    BYTE PTR [ebx-0x5ebfd3ef],dh
  411beb:	jnp    0x411bab
  411bed:	shl    DWORD PTR [esi],0x8f
  411bf0:	in     eax,dx
  411bf1:	or     eax,0xf51ff4ba
  411bf6:	sbb    esi,ecx
  411bf8:	lahf   
  411bf9:	je     0x411bf6
  411bfb:	shr    esi,0xb0
  411bfe:	cmp    eax,0x4a6021da
  411c03:	mov    ebp,0xb795aa9d
  411c08:	xor    esi,DWORD PTR [ecx-0x4fb1bd49]
  411c0e:	dec    eax
  411c0f:	int3   
  411c10:	add    ah,dh
  411c12:	jecxz  0x411baa
  411c14:	out    dx,al
  411c15:	inc    eax
  411c16:	xchg   esi,eax
  411c17:	dec    edx
  411c18:	dec    eax
  411c1a:	adc    BYTE PTR [edx+edx*2+0x1e0bf95e],dh
  411c21:	test   DWORD PTR ds:0x2b395f9d,ebx
  411c27:	jmp    0x5ac71539
  411c2c:	push   ebx
  411c2d:	popf   
  411c2e:	jbe    0x411c6e
  411c30:	out    0x76,al
  411c32:	mov    al,0xde
  411c34:	mov    bh,bh
  411c36:	imul   esp,esp,0x67
  411c39:	xchg   esi,eax
  411c3a:	(bad)  
  411c3b:	mov    eax,0xd4eaa624
  411c40:	scas   al,BYTE PTR es:[edi]
  411c41:	push   ebp
  411c42:	inc    eax
  411c43:	or     al,0xcd
  411c45:	repz jmp 0x411ca8
  411c48:	stos   BYTE PTR es:[edi],al
  411c49:	out    0xe2,al
  411c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c4c:	shl    al,1
  411c4e:	imul   ebp,DWORD PTR [edi+edx*8+0x45],0xd
  411c53:	cmp    DWORD PTR [eax+0x4be90ddc],esp
  411c59:	gs cmp dh,al
  411c5c:	(bad)  
  411c5e:	nop
  411c5f:	in     al,dx
  411c60:	pushf  
  411c61:	fisubr DWORD PTR [eax-0x9]
  411c64:	jbe    0x411cdb
  411c66:	in     al,0x1f
  411c68:	mov    eax,0xbcc2763e
  411c6d:	or     bl,BYTE PTR [ebp+0x3999ded3]
  411c73:	mov    ch,BYTE PTR [ecx-0x39f1c8bb]
  411c79:	xchg   ecx,eax
  411c7a:	mov    al,BYTE PTR [ecx+edx*2-0x46d88827]
  411c81:	xchg   edx,eax
  411c82:	out    0xc6,eax
  411c84:	xor    ebp,esi
  411c86:	stos   BYTE PTR es:[edi],al
  411c87:	test   DWORD PTR [eax-0x789b0154],ebx
  411c8d:	clc    
  411c8e:	push   edi
  411c8f:	sub    DWORD PTR [ebx-0x4470b642],esi
  411c95:	push   ss
  411c96:	mov    cs:0x9db1c5f8,eax
  411c9c:	lahf   
  411c9d:	loopne 0x411cf0
  411c9f:	adc    eax,0x103af8f0
  411ca4:	loopne 0x411cb8
  411ca6:	retf   0x686e
  411ca9:	xchg   BYTE PTR [ebp+0x3ad7c259],ch
  411caf:	out    0x2,al
  411cb1:	cmp    DWORD PTR es:[eax-0x7],0x83461797
  411cb9:	test   DWORD PTR [ebp-0x1589a43e],esi
  411cbf:	rol    DWORD PTR [eax+eiz*1],1
  411cc2:	jns    0x411c9a
  411cc4:	push   ds
  411cc5:	sbb    DWORD PTR [edx+0x7304b49],eax
  411ccb:	nop
  411ccc:	jge    0x411d1f
  411cce:	cwde   
  411ccf:	mov    al,ds:0x3a529e67
  411cd4:	out    0xa,eax
  411cd6:	int    0x34
  411cd8:	and    esp,ebp
  411cda:	out    0x6,eax
  411cdc:	out    0x64,eax
  411cde:	jmp    0x411cfc
  411ce0:	sbb    eax,0x7e45b5c3
  411ce5:	icebp  
  411ce6:	arpl   sp,di
  411ce8:	iret   
  411ce9:	xchg   ebx,eax
  411cea:	mov    ebx,0x30719be1
  411cef:	out    dx,eax
  411cf0:	and    edi,DWORD PTR [eax-0x267d3acc]
  411cf6:	mov    ebx,0x95ee76a3
  411cfb:	int    0xa5
  411cfd:	push   cs
  411cfe:	xlat   BYTE PTR ds:[ebx]
  411cff:	rol    DWORD PTR [eax],cl
  411d01:	in     eax,0x21
  411d03:	inc    ebx
  411d04:	xchg   BYTE PTR [edi-0x36],bh
  411d07:	xchg   ebp,eax
  411d08:	mov    ch,0xc
  411d0a:	loope  0x411cfc
  411d0c:	aad    0x1b
  411d0e:	fs out dx,eax
  411d10:	jg     0x411d43
  411d12:	jns    0x411d32
  411d14:	(bad)  
  411d15:	xchg   ebx,eax
  411d16:	data16 mov es:0xd768f47f,al
  411d1d:	jecxz  0x411d19
  411d1f:	stos   DWORD PTR es:[edi],eax
  411d20:	ss aaa 
  411d22:	jle    0x411d0a
  411d24:	test   BYTE PTR [ebx],0x62
  411d27:	sub    al,0x6d
  411d29:	push   ecx
  411d2a:	aas    
  411d2b:	and    ebp,0xfffffff5
  411d2e:	neg    ecx
  411d30:	arpl   WORD PTR [edx+0x20],dx
  411d33:	(bad)  
  411d35:	test   DWORD PTR [eax],0xc1f504ce
  411d3b:	pop    esi
  411d3c:	push   ebp
  411d3d:	repnz out dx,al
  411d3f:	lods   al,BYTE PTR ds:[esi]
  411d40:	leave  
  411d41:	sar    BYTE PTR [esi-0x59f7071f],1
  411d47:	mov    ch,0x1d
  411d49:	inc    esi
  411d4a:	out    0xc7,al
  411d4c:	fs dec esp
  411d4e:	stos   BYTE PTR es:[edi],al
  411d4f:	enter  0x58b8,0x35
  411d53:	add    BYTE PTR [esi+0x65e0bfbf],cl
  411d59:	mov    esp,ebx
  411d5b:	xor    ebx,DWORD PTR [esi-0x3e]
  411d5e:	inc    ebx
  411d5f:	shr    DWORD PTR [edi+0x14],1
  411d62:	stc    
  411d63:	ja     0x411d87
  411d65:	push   es
  411d66:	test   BYTE PTR [edx+0x63a57ac8],ah
  411d6c:	add    DWORD PTR [esi+0xdde96f7],esi
  411d72:	sbb    eax,0xfd3a5b4e
  411d77:	scas   eax,DWORD PTR es:[edi]
  411d78:	ss jecxz 0x411d78
  411d7b:	cmp    BYTE PTR [eax-0x50],bh
  411d7e:	jl     0x411dbf
  411d80:	in     al,dx
  411d81:	or     al,0xf5
  411d83:	stc    
  411d84:	sub    DWORD PTR [edx],0x73
  411d87:	pop    edi
  411d88:	clc    
  411d89:	in     eax,dx
  411d8a:	lds    ecx,FWORD PTR [eax+0x78edbf18]
  411d90:	push   cs
  411d91:	inc    ebx
  411d92:	adc    BYTE PTR [ebx-0x37],0xb6
  411d96:	mov    esp,0x56b5c7df
  411d9b:	sub    esp,eax
  411d9d:	cmp    BYTE PTR [ebx+0x2df98875],al
  411da3:	mov    ecx,0x95b1911
  411da8:	fwait
  411da9:	icebp  
  411daa:	sub    cl,dl
  411dac:	mov    WORD PTR [edi],gs
  411dae:	and    BYTE PTR [ebp-0x57cef4f],dh
  411db4:	(bad)  
  411db5:	loopne 0x411da9
  411db7:	cmp    al,0x65
  411db9:	jle    0x411df8
  411dbb:	xchg   edi,eax
  411dbc:	pop    ecx
  411dbd:	and    BYTE PTR ds:0x5bbe52ce,bl
  411dc3:	inc    eax
  411dc4:	icebp  
  411dc5:	or     al,0x5f
  411dc7:	mov    ebx,0x959f329d
  411dcc:	sub    al,0xcd
  411dce:	xor    ah,al
  411dd0:	aad    0x6b
  411dd2:	mov    eax,ds:0xb3559f59
  411dd7:	std    
  411dd8:	add    dh,BYTE PTR [eax]
  411dda:	scas   al,BYTE PTR es:[edi]
  411ddb:	xor    ch,BYTE PTR ds:0x5d61d622
  411de1:	sbb    al,0x3f
  411de3:	mov    esi,0x8396e354
  411de8:	fs js  0x411d79
  411deb:	imul   edx,DWORD PTR [ebp-0x5493ca78],0x33
  411df2:	shl    DWORD PTR [ecx],cl
  411df4:	loop   0x411e5e
  411df6:	xor    ch,ah
  411df8:	loop   0x411de0
  411dfa:	sahf   
  411dfb:	call   0xfe46f417
  411e00:	sbb    BYTE PTR [edi-0x19],bl
  411e03:	retf   0xe697
  411e06:	dec    esi
  411e07:	out    dx,eax
  411e08:	jge    0x411dcc
  411e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e0b:	jmp    FWORD PTR [esi*1-0x5b44d58a]
  411e12:	jmp    0x411dde
  411e14:	mov    eax,ds:0x4e315ef0
  411e19:	pop    ss
  411e1a:	daa    
  411e1b:	sahf   
  411e1c:	sti    
  411e1d:	jae    0x411e6c
  411e1f:	mov    edx,0xc4deb38f
  411e24:	or     esp,DWORD PTR [ebx+ebp*4+0xe]
  411e28:	test   BYTE PTR [edx],ch
  411e2a:	or     esi,0xad3c64cf
  411e30:	loope  0x411de3
  411e32:	in     eax,dx
  411e33:	add    al,0x6
  411e35:	setne  BYTE PTR [ecx+0x5b45f67e]
  411e3c:	jne    0x411dcd
  411e3e:	pop    ecx
  411e3f:	push   ss
  411e40:	leave  
  411e41:	imul   edi,DWORD PTR [ecx],0x37
  411e44:	and    ecx,esp
  411e46:	shl    DWORD PTR [edi+0x46d9e17],cl
  411e4c:	xlat   BYTE PTR ds:[ebx]
  411e4d:	inc    ebx
  411e4e:	pop    esi
  411e4f:	and    DWORD PTR [ebp+0x4],edi
  411e52:	daa    
  411e53:	adc    eax,0x641491e0
  411e58:	push   ebp
  411e59:	and    eax,0x6fa115b0
  411e5e:	cmp    eax,0xce8b10fb
  411e63:	je     0x411e5f
  411e65:	inc    esi
  411e66:	xor    bl,al
  411e68:	mov    eax,0x9959d345
  411e6d:	in     al,dx
  411e6e:	inc    edi
  411e6f:	xor    BYTE PTR [esi-0xe3fd69],ah
  411e75:	or     DWORD PTR [ecx+0x6e],0xd7d8139f
  411e7c:	gs jmp 0x411e48
  411e7f:	adc    eax,0xf2778910
  411e84:	neg    DWORD PTR [edi]
  411e86:	out    0x2,eax
  411e88:	js     0x411e67
  411e8a:	jbe    0x411e8b
  411e8c:	or     BYTE PTR [eax],dl
  411e8e:	jmp    0x67b30270
  411e93:	pop    esi
  411e94:	jae    0x411e7e
  411e96:	add    edx,DWORD PTR [ecx]
  411e98:	mov    dh,0x3
  411e9a:	outs   dx,DWORD PTR ds:[esi]
  411e9b:	fwait
  411e9c:	scas   eax,DWORD PTR es:[edi]
  411e9d:	iret   
  411e9e:	fsub   st,st(6)
  411ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea1:	inc    esi
  411ea2:	cli    
  411ea3:	sbb    eax,0xdb4561a5
  411ea8:	xchg   edx,eax
  411ea9:	push   edx
  411eaa:	jnp    0x411e9f
  411eac:	xor    al,0xa4
  411eae:	sar    BYTE PTR [ecx+0x67],0xaf
  411eb2:	mov    BYTE PTR [edi+ecx*8-0x49e7cca4],0xfc
  411eba:	into   
  411ebb:	in     eax,dx
  411ebc:	add    ecx,eax
  411ebe:	mov    cl,BYTE PTR [eax+0x9]
  411ec1:	mov    al,ds:0x69dc8e2f
  411ec6:	xchg   edi,eax
  411ec7:	popf   
  411ec8:	sbb    DWORD PTR [esp+edi*2-0x58c96573],edx
  411ecf:	mov    ah,0x3
  411ed1:	icebp  
  411ed2:	and    eax,0x9431357d
  411ed7:	mov    cl,0xe2
  411ed9:	sbb    eax,0xc251d8dc
  411ede:	pop    es
  411edf:	int    0x97
  411ee1:	in     eax,0x74
  411ee3:	sub    dh,BYTE PTR [edi+0x733da6a3]
  411ee9:	adc    BYTE PTR [ecx],bh
  411eeb:	adc    BYTE PTR [esi+ebx*4-0x5e0a402d],ch
  411ef2:	dec    esi
  411ef3:	xchg   ebx,eax
  411ef4:	mov    WORD PTR [edx+0xb],ds
  411ef7:	dec    edi
  411ef8:	ds ja  0x411eee
  411efb:	mov    esi,0xe08659cb
  411f00:	ins    BYTE PTR es:[edi],dx
  411f01:	cld    
  411f02:	mov    ebx,0x89cd82e6
  411f07:	xor    DWORD PTR [ecx+0x6525e5ba],0x10c8a9b2
  411f11:	fadd   DWORD PTR ds:0x86817921
  411f17:	lea    ecx,[eax+ebp*2-0x24]
  411f1b:	js     0x411f38
  411f1d:	add    DWORD PTR [edi+0x51ff7158],0x6b
  411f24:	mov    esp,0xcf28942c
  411f29:	push   ds
  411f2a:	pop    es
  411f2b:	ret    0x665d
  411f2e:	push   es
  411f2f:	pop    esp
  411f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f31:	push   ebx
  411f32:	ss aam 0x8d
  411f35:	arpl   dx,dx
  411f37:	and    esi,eax
  411f39:	enter  0xb109,0xb6
  411f3d:	or     eax,eax
  411f3f:	sub    bl,BYTE PTR [edx]
  411f41:	lock jg 0x411f50
  411f44:	sar    DWORD PTR [ebp-0xc2c9f14],cl
  411f4a:	gs dec esp
  411f4c:	stos   DWORD PTR es:[edi],eax
  411f4d:	or     al,0x5b
  411f4f:	mov    esp,0xabfc8f44
  411f54:	jp     0x411f62
  411f56:	xor    al,0xe6
  411f58:	add    al,0xc0
  411f5a:	mov    ebx,0x8d4fe4fd
  411f5f:	inc    ecx
  411f60:	jg     0x411eea
  411f62:	jnp    0x411fb6
  411f64:	jno    0x411f10
  411f66:	mov    ebp,0x41bf7cc9
  411f6b:	mov    ch,0xd2
  411f6d:	or     dl,cl
  411f6f:	jl     0x411fca
  411f71:	dec    ecx
  411f72:	fs mov ah,0x8d
  411f75:	les    ecx,FWORD PTR [eax-0x6ddd8dff]
  411f7b:	mov    ah,0xb4
  411f7d:	mov    ch,0xe4
  411f7f:	(bad)  
  411f80:	frstor [ebx]
  411f82:	mov    ebx,0x4c1b9f61
  411f87:	sar    BYTE PTR [edi],0x44
  411f8a:	ret    0x9fcf
  411f8d:	dec    eax
  411f8e:	int3   
  411f8f:	cmp    bl,BYTE PTR [ebp-0x42]
  411f92:	dec    esp
  411f93:	aaa    
  411f94:	in     eax,0x5d
  411f96:	test   BYTE PTR [edi-0xb],bl
  411f99:	out    dx,eax
  411f9a:	dec    ebp
  411f9b:	(bad)  
  411f9c:	arpl   di,sp
  411f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f9f:	inc    esi
  411fa0:	popf   
  411fa1:	inc    edx
  411fa2:	pop    ebx
  411fa3:	adc    DWORD PTR [edx+0x5bbc1b94],ebp
  411fa9:	(bad)  
  411faa:	cmp    esi,ecx
  411fac:	jp     0x411fdf
  411fae:	ror    DWORD PTR [edx],cl
  411fb0:	push   edi
  411fb1:	xchg   ebx,eax
  411fb2:	push   edi
  411fb3:	push   cs
  411fb4:	pop    es
  411fb5:	mov    ch,0xde
  411fb7:	mov    cl,0xeb
  411fb9:	cmp    eax,0x479a46de
  411fbe:	lods   al,BYTE PTR ds:[esi]
  411fbf:	das    
  411fc0:	push   ebx
  411fc1:	imul   ebp,DWORD PTR [edi],0xa065d503
  411fc7:	pop    ss
  411fc8:	add    BYTE PTR [esi],bh
  411fca:	and    ecx,esp
  411fcc:	fucom  st(7)
  411fce:	rol    BYTE PTR ds:0xc062dbba,0x45
  411fd5:	mov    esp,0x760b4dc
  411fda:	and    al,0xf7
  411fdc:	jp     0x412052
  411fde:	fwait
  411fdf:	mov    ecx,0x508d1582
  411fe4:	inc    esi
  411fe5:	rcr    DWORD PTR [ecx],1
  411fe7:	addr16 pop es
  411fe9:	(bad)  
  411fea:	in     al,0x7a
  411fec:	ins    BYTE PTR es:[edi],dx
  411fed:	cmc    
  411fee:	jb     0x411f7e
  411ff0:	test   eax,0x3fd6426b
  411ff5:	dec    ebp
  411ff6:	push   ebx
  411ff7:	jae    0x412032
  411ff9:	ficom  WORD PTR [ecx-0x25]
  411ffc:	push   ds
  411ffd:	sbb    BYTE PTR [edi+0x59],ch
  412000:	mov    edx,0x11aeb4a7
  412005:	inc    ebp
  412006:	imul   edx,DWORD PTR [esi+ecx*2],0xffffff94
  41200a:	adc    al,BYTE PTR [eax+0x737037]
  412010:	add    ebp,DWORD PTR [edi]
  412012:	dec    edx
  412013:	sub    ebx,esi
  412015:	mov    ?,WORD PTR [ebx-0x2b]
  412018:	add    al,0x75
  41201a:	mov    eax,0xd8ccb45f
  41201f:	cmc    
  412020:	rsqrtps xmm1,xmm4
  412023:	das    
  412024:	sbb    BYTE PTR [eax+0xcd280a7],ah
  41202a:	lods   al,BYTE PTR ds:[esi]
  41202b:	sub    al,0x3f
  41202d:	jecxz  0x41208a
  41202f:	out    dx,eax
  412030:	dec    edx
  412031:	add    al,0xf0
  412033:	ss out 0xea,al
  412036:	lea    eax,[eax+0x5476a098]
  41203c:	repz ret 0x7b8a
  412040:	ins    BYTE PTR es:[edi],dx
  412041:	ins    BYTE PTR es:[edi],dx
  412042:	ffree  st(3)
  412044:	push   eax
  412045:	sbb    eax,0xe55c1e4d
  41204a:	add    ebp,ecx
  41204c:	mov    DWORD PTR [ecx],esp
  41204e:	sti    
  41204f:	push   ebx
  412050:	dec    esi
  412051:	cmp    eax,DWORD PTR [edi+0x7ba465d5]
  412057:	jbe    0x412091
  412059:	pop    ss
  41205a:	push   edi
  41205b:	or     al,0xc6
  41205d:	jg     0x41209a
  41205f:	cwde   
  412060:	(bad)  
  412061:	push   esp
  412062:	stos   BYTE PTR es:[edi],al
  412063:	(bad)  
  412064:	pop    esp
  412065:	mov    ebx,0x4c758294
  41206a:	int    0x9e
  41206c:	fs mov ecx,0x1a3f4050
  412072:	push   ebx
  412073:	ret    0x9b35
  412076:	jne    0x41205a
  412078:	cdq    
  412079:	pop    ecx
  41207a:	push   edi
  41207b:	fst    QWORD PTR [eax+0x2f0ad359]
  412081:	outs   dx,DWORD PTR ds:[esi]
  412082:	and    DWORD PTR ds:0xd142b68b,edx
  412088:	jae    0x412093
  41208a:	pop    edi
  41208b:	ins    DWORD PTR es:[edi],dx
  41208c:	jecxz  0x4120ac
  41208e:	jbe    0x41207a
  412090:	xor    BYTE PTR [edx-0x1f],0xf0
  412094:	xor    BYTE PTR [edi+0x7a],0x16
  412098:	sub    eax,0x8cdba8ca
  41209d:	xchg   esp,eax
  41209e:	not    DWORD PTR [ebp+0x3e42bfc8]
  4120a4:	jae    0x4120c0
  4120a6:	fstp   TBYTE PTR [esi+edi*1+0x63]
  4120aa:	cdq    
  4120ab:	jl     0x41209c
  4120ad:	cmp    BYTE PTR [ecx],dl
  4120af:	cdq    
  4120b0:	inc    ebx
  4120b1:	arpl   dx,cx
  4120b3:	mov    ecx,0x28e0e415
  4120b8:	sbb    ebx,edi
  4120ba:	mov    ebx,0x23b5945b
  4120bf:	push   edi
  4120c0:	add    al,0x29
  4120c2:	adc    ah,dh
  4120c4:	clc    
  4120c5:	lods   eax,DWORD PTR ds:[esi]
  4120c6:	mov    eax,0x7fc4c573
  4120cb:	mov    eax,edx
  4120cd:	cmp    eax,0x33278525
  4120d2:	sbb    al,0x0
  4120d4:	cmp    BYTE PTR [esi+0xacce1b1],bl
  4120da:	rol    BYTE PTR [ecx-0x7dc1e585],0x51
  4120e1:	xchg   edi,eax
  4120e2:	push   esp
  4120e3:	dec    ebx
  4120e4:	jbe    0x4120cf
  4120e6:	push   eax
  4120e7:	adc    DWORD PTR [edx-0x3583624c],0x7a
  4120ee:	ja     0x41212e
  4120f0:	into   
  4120f1:	mov    ch,dl
  4120f3:	add    eax,0x65f16e56
  4120f8:	(bad)  
  4120f9:	outs   dx,BYTE PTR ds:[esi]
  4120fa:	loopne 0x41208e
  4120fc:	loopne 0x4120b7
  4120fe:	pop    ebx
  4120ff:	or     esi,eax
  412101:	addr16 (bad) 
  412103:	mov    dh,0xe4
  412105:	dec    ecx
  412106:	arpl   WORD PTR ds:0xa311cdd8,dx
  41210c:	sub    DWORD PTR [ebx],esp
  41210e:	rcl    BYTE PTR [ecx+0x1a2b80e8],1
  412114:	xor    DWORD PTR [ebx],esp
  412116:	pop    ds
  412117:	mov    ebx,DWORD PTR [eiz*1-0x310df809]
  41211e:	sar    BYTE PTR [esi],cl
  412120:	mov    ah,ch
  412122:	(bad)  
  412124:	mov    ebp,0x119a2870
  412129:	dec    esp
  41212a:	fimul  WORD PTR [esi+0xf]
  41212d:	mov    ecx,0x8b341e7f
  412132:	out    dx,eax
  412133:	xchg   edi,eax
  412134:	cmp    ebx,DWORD PTR [esi+0x8]
  412137:	cli    
  412138:	inc    esp
  412139:	in     eax,dx
  41213a:	pop    esp
  41213b:	pop    ss
  41213c:	fwait
  41213d:	push   0xb6a10f64
  412142:	push   ecx
  412143:	sahf   
  412144:	mov    DWORD PTR [ecx],edi
  412146:	jnp    0x4121a0
  412148:	sub    DWORD PTR [eax],edi
  41214a:	pusha  
  41214b:	mov    esp,0x65cd876d
  412150:	push   es
  412151:	pop    ecx
  412152:	into   
  412153:	cld    
  412154:	into   
  412155:	xor    DWORD PTR [ecx-0x5f],ebx
  412158:	dec    DWORD PTR [esi-0x34eea373]
  41215e:	xor    eax,0x5fb85998
  412163:	retf   
  412164:	daa    
  412165:	in     eax,0x57
  412167:	(bad)  
  41216a:	mov    esi,0xf9726728
  41216f:	pop    ds
  412170:	push   0xffffff81
  412172:	and    al,0x5b
  412174:	add    eax,0x7cf20338
  412179:	test   al,0x65
  41217b:	push   ebx
  41217c:	pushf  
  41217d:	sbb    eax,esi
  41217f:	xchg   edi,eax
  412180:	adc    bl,BYTE PTR [ecx-0x3028ecc7]
  412186:	ret    
  412187:	jmp    0x782ccde4
  41218c:	xor    eax,0x5e8c9c8e
  412191:	popf   
  412192:	pop    ds
  412193:	xchg   esi,eax
  412194:	enter  0x4059,0xd8
  412198:	pop    esp
  412199:	adc    al,0xa1
  41219b:	xchg   ecx,eax
  41219c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41219d:	rcl    DWORD PTR [ebx],1
  41219f:	jns    0x4121ab
  4121a1:	xor    DWORD PTR [edi],0xffffffb2
  4121a4:	loope  0x412172
  4121a6:	jne    0x41214b
  4121a8:	pop    ds
  4121a9:	test   al,0x67
  4121ab:	mov    al,ds:0xc20a36a6
  4121b0:	mov    ds:0x8ad1d96d,eax
  4121b5:	test   eax,0x11647d7d
  4121ba:	je     0x412233
  4121bc:	(bad)  
  4121bd:	repz fwait
  4121bf:	xchg   BYTE PTR [ebp-0x11e5af68],cl
  4121c5:	xchg   edx,eax
  4121c6:	push   edx
  4121c7:	mov    bl,0x65
  4121c9:	pusha  
  4121ca:	pop    ebp
  4121cb:	mov    ebp,0xd32ea385
  4121d0:	adc    ebp,DWORD PTR [edx+0x251fbe30]
  4121d6:	cmp    DWORD PTR [ecx-0x4f0cd91e],esi
  4121dc:	dec    esi
  4121dd:	mov    dh,0x82
  4121df:	(bad)  
  4121e0:	cld    
  4121e1:	lock call 0x6063b88c
  4121e7:	xchg   BYTE PTR [edx],cl
  4121e9:	jo     0x412192
  4121eb:	(bad)  
  4121ed:	outs   dx,DWORD PTR ds:[esi]
  4121ee:	mov    WORD PTR [edi-0x5469659a],ds
  4121f4:	ror    BYTE PTR [ebx],cl
  4121f6:	sbb    al,0xe0
  4121f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121f9:	xchg   ebx,eax
  4121fa:	ficomp WORD PTR [eax+eax*8]
  4121fd:	test   DWORD PTR [esi-0x8282a0d],edi
  412203:	dec    edi
  412204:	outs   dx,BYTE PTR ds:[esi]
  412205:	and    ebp,ecx
  412207:	aam    0x1b
  412209:	ss jmp 0x412238
  41220c:	neg    BYTE PTR [eax-0x10aee398]
  412212:	out    dx,al
  412213:	mov    bh,0x86
  412215:	push   es
  412216:	nop
  412217:	sub    dh,dh
  412219:	ret    0x4325
  41221c:	inc    esp
  41221d:	mov    ebp,0x9644d63c
  412222:	xchg   edx,eax
  412223:	les    edx,FWORD PTR [edx+0x43]
  412226:	push   ss
  412227:	retf   
  412228:	sti    
  412229:	cmp    BYTE PTR [ebp-0x6544b1f4],dl
  41222f:	push   edx
  412230:	test   BYTE PTR [edx+0x76],dl
  412233:	inc    esp
  412234:	jle    0x412241
  412236:	add    ebx,DWORD PTR [ebx+0x47dec4b9]
  41223c:	inc    eax
  41223d:	jmp    0x8245:0x4e04630c
  412244:	in     al,0x4a
  412246:	jb     0x41224d
  412248:	sub    al,0xf3
  41224a:	arpl   WORD PTR [ecx+0x35],sp
  41224d:	shl    ah,cl
  41224f:	pushf  
  412250:	pushf  
  412251:	gs das 
  412253:	cmp    BYTE PTR [ecx],dh
  412255:	retf   
  412256:	les    ebp,FWORD PTR [edx+0x506a769]
  41225c:	rep ss stos DWORD PTR es:[edi],eax
  41225f:	xchg   esi,eax
  412260:	pop    ss
  412261:	inc    ebx
  412262:	mov    cl,0x5f
  412264:	or     al,0xd0
  412266:	dec    edi
  412267:	mov    bh,0x55
  412269:	xlat   BYTE PTR ds:[ebx]
  41226a:	and    eax,0xf1d59237
  41226f:	inc    edi
  412270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412271:	mov    edi,0x98754594
  412276:	(bad)  
  412278:	and    dl,bh
  41227a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41227b:	lods   eax,DWORD PTR ds:[esi]
  41227c:	or     edi,DWORD PTR [ebx-0x13]
  41227f:	inc    ebx
  412280:	repnz cwde 
  412282:	bound  esi,QWORD PTR [esi-0x72c9bdcc]
  412288:	pop    edx
  412289:	cmp    eax,0x806420fe
  41228e:	mov    WORD PTR [ebp+0x6777d0db],cs
  412294:	jnp    0x4122b9
  412296:	int    0xc1
  412298:	add    ebx,ebx
  41229a:	cmp    DWORD PTR [ebx+0x22413c9d],0x1056697f
  4122a4:	out    dx,eax
  4122a5:	test   al,0xde
  4122a7:	popa   
  4122a8:	xlat   BYTE PTR ds:[ebx]
  4122a9:	jp     0x412277
  4122ab:	aaa    
  4122ac:	fdivr  QWORD PTR [edi-0x7e]
  4122af:	jp     0x4122bc
  4122b1:	add    BYTE PTR [ebp+0x5936e9b8],ch
  4122b7:	aam    0xd3
  4122b9:	sbb    esi,DWORD PTR [eax+0x79]
  4122bc:	or     BYTE PTR ds:0xeed5c1e6,ah
  4122c2:	xchg   ebx,eax
  4122c3:	cmp    BYTE PTR [ecx],0x3d
  4122c6:	sbb    eax,0xbe843868
  4122cb:	sub    eax,0xf9f1a610
  4122d0:	push   es
  4122d1:	and    ch,bh
  4122d3:	ficom  DWORD PTR [ecx+edi*4-0x6c]
  4122d7:	xchg   ebx,eax
  4122d8:	mov    ah,0xaa
  4122da:	jns    0x41233f
  4122dc:	xor    al,0xe
  4122de:	sbb    DWORD PTR [ecx+ebp*4+0xf],eax
  4122e2:	es add esi,ebp
  4122e5:	pop    ecx
  4122e6:	jmp    0x5ebeb5a1
  4122eb:	mov    ebx,0x29c676e
  4122f0:	ja     0x412313
  4122f2:	pop    es
  4122f3:	into   
  4122f4:	sbb    DWORD PTR [edi+0x5d792332],edx
  4122fa:	repz inc ebp
  4122fc:	jmp    0xb1a4:0x146e2dea
  412303:	adc    BYTE PTR [ebx+0x72],0x37
  412307:	aam    0xcf
  412309:	in     eax,0x3f
  41230b:	mov    ecx,0x70310070
  412310:	out    0x61,al
  412312:	inc    eax
  412313:	inc    esp
  412314:	jno    0x41237c
  412316:	arpl   bx,si
  412318:	jecxz  0x412384
  41231a:	jmp    0x1bd4:0xdb90bb
  412321:	sbb    eax,0xae09e84b
  412326:	add    al,0xe4
  412328:	push   ecx
  412329:	mov    al,0x7a
  41232b:	xor    eax,0x7a2f796c
  412330:	lods   al,BYTE PTR ds:[esi]
  412331:	es mov ebx,0xc6810ee2
  412337:	call   FWORD PTR [eax]
  412339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41233a:	sbb    bh,BYTE PTR [ebp+0x55]
  41233d:	rcl    DWORD PTR [ebp-0x772351ed],1
  412343:	or     esi,ebp
  412345:	xchg   esp,eax
  412346:	xor    edx,DWORD PTR [ebx-0xf73f5e9]
  41234c:	(bad)  
  41234d:	mov    ch,0x10
  41234f:	mov    ebp,ds
  412351:	mov    edi,0xc4a45ca2
  412356:	sbb    eax,0x558bc49e
  41235b:	or     BYTE PTR [ecx+0x42b21a25],al
  412361:	add    BYTE PTR [eax],al
  412363:	add    BYTE PTR [eax],al
  412365:	add    cl,ch
  412367:	sldt   WORD PTR [eax]
  41236a:	add    BYTE PTR [ebx],dh
  41236c:	(bad)  [ebx]
  41236e:	sbb    eax,0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	test   BYTE PTR [ebx],0x8c
  412568:	and    BYTE PTR [ebp-0x7c7c7506],bh
  41256e:	ds pop esi
  412570:	add    DWORD PTR [ebx+0x76238ef7],0xffffffbb
  412577:	rcr    DWORD PTR [edi-0x11],cl
  41257a:	(bad)  
  41257b:	sub    eax,0x5e1fdf9d
  412580:	test   DWORD PTR [edi+0x19c68c06],ecx
  412586:	add    ebx,DWORD PTR ds:0x231966e3
  41258c:	test   DWORD PTR [esi+eax*2],esi
  41258f:	shl    BYTE PTR [ebp-0x7f],cl
  412592:	cmp    BYTE PTR [eax+ecx*4-0x1b89a16e],cl
  412599:	or     ah,BYTE PTR [ebx-0x53ac1b3a]
  41259f:	test   al,0x5d
  4125a1:	and    dl,BYTE PTR [edi-0x4b7de4a9]
  4125a7:	and    BYTE PTR [ebx+0x2d04f5a2],ch
  4125ad:	ins    BYTE PTR es:[edi],dx
  4125ae:	iret   
  4125af:	push   0xfffffff3
  4125b1:	pop    ecx
  4125b2:	xor    DWORD PTR [ecx+0x5c],ebx
  4125b5:	xor    BYTE PTR [esp+edi*8+0x67],ch
  4125b9:	repnz or al,0x6b
  4125bc:	or     edi,DWORD PTR [ecx]
  4125be:	(bad)  
  4125bf:	scas   al,BYTE PTR es:[edi]
  4125c0:	rcl    DWORD PTR [edx-0x29],cl
  4125c3:	idiv   BYTE PTR [edx+0x5037af5]
  4125c9:	mov    WORD PTR [edx+ebx*1+0x69],gs
  4125cd:	fsubr  st,st(0)
  4125cf:	or     ebp,ebx
  4125d1:	and    esp,ecx
  4125d3:	retf   
  4125d4:	inc    esi
  4125d5:	cmp    edx,DWORD PTR [edx-0x6c]
  4125d8:	or     eax,0x4facb64c
  4125dd:	in     eax,0x91
  4125df:	mov    ecx,edi
  4125e1:	mov    ebx,0xe8a694e5
  4125e6:	(bad)  
  4125e7:	mov    ch,0x38
  4125e9:	jecxz  0x4125a1
  4125eb:	cmp    BYTE PTR [ebp+0x4a15fa20],bh
  4125f1:	gs sar ecx,cl
  4125f4:	les    esp,FWORD PTR [edi+0x3474ef9d]
  4125fa:	pop    eax
  4125fb:	dec    edx
  4125fc:	idiv   BYTE PTR [edx-0x6b]
  4125ff:	ja     0x41261d
  412601:	jle    0x41259a
  412603:	aaa    
  412604:	pop    ds
  412605:	mov    ebx,0xfc69885b
  41260a:	xchg   ecx,eax
  41260b:	jnp    0x412655
  41260d:	jns    0x4125af
  41260f:	pop    edx
  412610:	ja     0x41259f
  412612:	ja     0x4125d6
  412614:	sbb    ch,bl
  412616:	mov    al,0xaf
  412618:	sub    eax,0xf55ac6e2
  41261d:	mov    al,cl
  41261f:	neg    bh
  412621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412622:	lds    ebp,FWORD PTR [edx*1+0x67cdf697]
  412629:	sbb    dh,al
  41262b:	sbb    DWORD PTR [esi],0x6a676851
  412631:	ret    
  412632:	pop    ss
  412633:	pop    ebp
  412634:	xchg   edx,eax
  412635:	loope  0x412642
  412637:	sahf   
  412638:	enter  0xbe60,0x96
  41263c:	imul   edx,DWORD PTR [edx+ebp*8+0x72440e84],0xa
  412644:	imul   edi,DWORD PTR [ecx-0x2e],0xffffffbd
  412648:	xchg   edi,eax
  412649:	cmp    al,0x6f
  41264b:	jmp    0xae87:0xef85a721
  412652:	cmp    DWORD PTR [eax-0x51],edx
  412655:	call   0x2bd5:0xa05502
  41265c:	ins    DWORD PTR es:[edi],dx
  41265d:	adc    eax,0x9c119428
  412662:	add    edi,ecx
  412664:	adc    ebx,DWORD PTR [ebx-0x72]
  412667:	mov    ebx,DWORD PTR [eax]
  412669:	fnsave [esi-0x74]
  41266c:	and    ch,BYTE PTR [edi-0x3]
  41266f:	xchg   BYTE PTR [ecx-0x18cb4cf4],ah
  412675:	mov    ecx,DWORD PTR [ebp+0x24]
  412678:	(bad)  
  412679:	cmp    BYTE PTR [ebx],ah
  41267b:	dec    ebx
  41267c:	jb     0x412644
  41267e:	adc    al,ch
  412680:	dec    eax
  412681:	add    esi,DWORD PTR [edi]
  412683:	dec    edx
  412684:	repz push 0x3d
  412687:	ds loope 0x412660
  41268a:	fild   QWORD PTR [ebp-0x5abb5b3]
  412690:	xchg   edx,eax
  412691:	pop    eax
  412692:	jbe    0x4126d6
  412694:	test   eax,0x2bfad208
  412699:	retf   
  41269a:	data16 fmul DWORD PTR [eax-0x6ad9cf17]
  4126a1:	dec    ecx
  4126a2:	je     0x412697
  4126a4:	add    al,0xb1
  4126a6:	mov    ebx,0x838c9539
  4126ab:	retf   
  4126ac:	push   ds
  4126ad:	xor    DWORD PTR [edx+0x5d0ee799],esi
  4126b3:	sbb    al,0x2e
  4126b6:	push   cs
  4126b7:	fld    QWORD PTR [ecx+0x7c]
  4126ba:	lea    ebx,[esi]
  4126bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126bd:	js     0x412641
  4126bf:	cmp    BYTE PTR [edx],ch
  4126c1:	cmp    BYTE PTR [ecx-0x293d5696],ch
  4126c7:	loopne 0x412696
  4126c9:	sub    eax,0xfb749892
  4126ce:	jl     0x41271b
  4126d0:	je     0x412749
  4126d2:	cmp    DWORD PTR [ecx],ebp
  4126d4:	pop    ebp
  4126d5:	jns    0x4126fe
  4126d7:	inc    ebp
  4126d8:	add    eax,DWORD PTR [eax+0x68]
  4126db:	sti    
  4126dc:	pop    edx
  4126dd:	push   esp
  4126de:	jle    0x41270e
  4126e0:	dec    esp
  4126e1:	push   0x2f
  4126e3:	mov    al,ds:0x358d2ec3
  4126e8:	icebp  
  4126e9:	cdq    
  4126ea:	popa   
  4126eb:	cmp    BYTE PTR [esi+ecx*8],bl
  4126ee:	xor    edi,DWORD PTR [ebp+edx*4-0x36]
  4126f2:	pusha  
  4126f3:	sbb    DWORD PTR [edi+0x3a],eax
  4126f6:	loopne 0x4126fd
  4126f8:	ret    0xa3a8
  4126fb:	ja     0x41271d
  4126fd:	stos   DWORD PTR es:[edi],eax
  4126fe:	sub    ah,ah
  412700:	jecxz  0x4126b2
  412702:	xchg   edx,eax
  412703:	es int3 
  412705:	mov    ch,0xb4
  412707:	stc    
  412708:	loope  0x41273f
  41270a:	xor    DWORD PTR [eax],edx
  41270c:	js     0x412774
  41270e:	lea    esi,[ebp-0x8]
  412711:	dec    esp
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	gs imul esp,esp,0xd5db1f8d
  41271a:	(bad)  
  41271b:	and    eax,0x54a2ce3a
  412720:	dec    ecx
  412721:	mov    cl,0xa3
  412723:	shl    BYTE PTR [ebp-0x44c8d6bf],0xa5
  41272a:	scas   al,BYTE PTR es:[edi]
  41272b:	ja     0x41279a
  41272d:	stc    
  41272e:	mov    ebp,0x4870272a
  412733:	push   es
  412734:	mov    edi,0xbe25087c
  412739:	mov    bl,0xf3
  41273b:	cld    
  41273c:	sbb    BYTE PTR [edi+ebp*1+0x2c],bh
  412740:	sar    BYTE PTR [edx-0x29],1
  412743:	lods   eax,DWORD PTR ds:[esi]
  412744:	inc    esi
  412745:	mov    eax,ds:0x9c7ecaf0
  41274a:	shl    BYTE PTR [edi],1
  41274c:	mov    bh,0x83
  41274e:	(bad)  
  412752:	shl    edi,1
  412754:	cdq    
  412755:	ins    BYTE PTR es:[edi],dx
  412756:	mov    edx,0xe41de857
  41275b:	jns    0x4126fb
  41275d:	mov    eax,ds:0x85e27bd9
  412762:	sbb    al,ah
  412764:	jb     0x4126ec
  412766:	(bad)  
  412767:	jge    0x412718
  412769:	cmc    
  41276a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41276b:	loop   0x4127e4
  41276d:	sub    al,0x39
  41276f:	or     BYTE PTR [esi],bl
  412771:	fistp  DWORD PTR [esi+0x56]
  412774:	mov    ds,edx
  412776:	test   BYTE PTR [esi+0x78],ch
  412779:	cmp    ecx,esp
  41277b:	sub    al,0x72
  41277d:	and    dh,dh
  41277f:	inc    edi
  412780:	adc    eax,0x14eb0e43
  412785:	sar    BYTE PTR [eax+0x3c],0xd
  412789:	es jns 0x4127b5
  41278c:	lods   al,BYTE PTR es:[esi]
  41278e:	pop    ebp
  41278f:	into   
  412790:	jmp    0x8d96:0x6b8962b0
  412797:	and    ecx,DWORD PTR [ebp+edi*1+0x53fdd28d]
  41279e:	das    
  41279f:	and    al,0xf3
  4127a1:	xchg   ebp,esp
  4127a3:	(bad)  
  4127a4:	mov    ss,WORD PTR [ebx+0x27]
  4127a7:	and    ebx,ecx
  4127a9:	cmp    ch,dh
  4127ab:	call   0xfa62709
  4127b0:	js     0x41276c
  4127b2:	jmp    0xdef4:0xae46ed0b
  4127b9:	inc    edx
  4127ba:	jns    0x41282a
  4127bc:	ss cmc 
  4127be:	mov    WORD PTR [edx],cs
  4127c0:	xchg   ecx,eax
  4127c1:	retf   
  4127c2:	popf   
  4127c3:	call   0x12a01db3
  4127c8:	ret    
  4127c9:	mov    ds:0xad547be0,al
  4127ce:	push   ebx
  4127cf:	lahf   
  4127d0:	mov    ch,0x9c
  4127d2:	test   al,0x7d
  4127d4:	stos   DWORD PTR es:[edi],eax
  4127d5:	push   eax
  4127d6:	adc    al,0xb6
  4127d8:	ds fsubr st,st(1)
  4127db:	pushf  
  4127dc:	dec    esi
  4127dd:	add    al,0x28
  4127df:	fisub  DWORD PTR [bx+di-0x3dfd]
  4127e4:	mov    cl,0xaa
  4127e6:	fsub   QWORD PTR [edi-0x80]
  4127e9:	xchg   esp,eax
  4127ea:	loope  0x412857
  4127ec:	je     0x412801
  4127ee:	xchg   DWORD PTR [esi+0x69],esp
  4127f1:	pop    edi
  4127f2:	jno    0x41286f
  4127f4:	jne    0x4127d3
  4127f6:	loope  0x41277c
  4127f8:	scas   al,BYTE PTR es:[edi]
  4127f9:	or     edi,DWORD PTR [ebx+0x10]
  4127fc:	xchg   ebp,eax
  4127fd:	jnp    0x412820
  4127ff:	xchg   ebx,eax
  412800:	cmp    DWORD PTR [eax],0xffffffa2
  412803:	popa   
  412804:	sbb    eax,0xbddbb48a
  412809:	sub    al,0x67
  41280b:	in     eax,dx
  41280c:	(bad)  [eax+0x793bff6]
  412812:	mov    ebx,0x87616afd
  412817:	and    edi,ecx
  412819:	pop    ebp
  41281a:	leave  
  41281b:	jno    0x412824
  41281d:	add    eax,0x1b63eb7
  412822:	sub    DWORD PTR [eax-0x79ef5abf],0xcf77416d
  41282c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41282d:	stos   DWORD PTR es:[edi],eax
  41282e:	add    al,0x1f
  412830:	nop
  412831:	sub    DWORD PTR ds:0xd5352c23,ebp
  412837:	sub    eax,0x70618119
  41283c:	or     al,0xd8
  41283e:	xchg   edi,eax
  41283f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412840:	dec    ecx
  412841:	push   esp
  412842:	outs   dx,DWORD PTR ds:[esi]
  412843:	xchg   esi,eax
  412844:	adc    al,0x29
  412846:	inc    edi
  412847:	inc    esp
  412848:	scas   eax,DWORD PTR es:[edi]
  412849:	adc    DWORD PTR [ecx],esi
  41284b:	and    al,0x3f
  41284d:	mov    edi,0x3e6d41f
  412852:	outs   dx,BYTE PTR ds:[esi]
  412853:	stos   DWORD PTR es:[edi],eax
  412854:	mov    ebp,0xcbba2f3c
  412859:	or     eax,0x1dd1134a
  41285e:	repz xor eax,0xc23b24c3
  412864:	out    dx,eax
  412865:	sub    DWORD PTR [ebp-0x2f],esi
  412868:	scas   eax,DWORD PTR es:[edi]
  412869:	cmp    DWORD PTR [edx],esp
  41286b:	arpl   WORD PTR [eax],bp
  41286d:	stos   DWORD PTR es:[edi],eax
  41286e:	std    
  41286f:	inc    ebx
  412870:	cmp    ah,BYTE PTR [ecx+0x3a]
  412873:	pop    ds
  412874:	pop    eax
  412875:	push   ds
  412876:	ss mov ebx,0xdb565abe
  41287c:	add    ah,ah
  41287e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41287f:	retf   
  412880:	ins    BYTE PTR es:[edi],dx
  412881:	lods   eax,DWORD PTR ds:[esi]
  412882:	jbe    0x4128f7
  412884:	fwait
  412885:	ja     0x4128d0
  412887:	pusha  
  412888:	mov    edx,ebp
  41288a:	pop    ss
  41288b:	pop    eax
  41288c:	mov    ebp,0x8f06d633
  412891:	add    BYTE PTR [ebp-0x29],dh
  412894:	test   BYTE PTR [esi+0x7487dbce],cl
  41289a:	push   esi
  41289b:	mov    cl,BYTE PTR [eax]
  41289d:	xchg   esp,eax
  41289e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41289f:	mov    ebx,0x84021b16
  4128a4:	sbb    eax,0x24a0a55b
  4128a9:	push   esp
  4128aa:	adc    ecx,DWORD PTR ds:0x354aacf0
  4128b0:	enter  0x2f4e,0xa6
  4128b4:	xor    edi,edi
  4128b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128b7:	(bad)  [edx+0x1e]
  4128ba:	out    0xee,eax
  4128bc:	and    DWORD PTR cs:[ecx+0x7f21cbad],ebx
  4128c3:	dec    ecx
  4128c4:	scas   al,BYTE PTR es:[edi]
  4128c5:	adc    al,0xd2
  4128c7:	out    0x72,eax
  4128c9:	ror    BYTE PTR [edi-0x27],1
  4128cc:	pop    ds
  4128cd:	stos   DWORD PTR es:[edi],eax
  4128ce:	sbb    cl,BYTE PTR [ecx-0x6]
  4128d1:	nop
  4128d2:	clc    
  4128d3:	mov    esi,0xf81f2eca
  4128d8:	or     bh,BYTE PTR [esi+ecx*1-0x459ef0de]
  4128df:	or     al,0x81
  4128e1:	sub    DWORD PTR [edx-0x7ac148ce],0x5ffa6c2e
  4128eb:	mov    eax,ds:0xcccc27ae
  4128f0:	mov    ecx,fs
  4128f2:	push   ds
  4128f3:	out    dx,eax
  4128f4:	ret    0x5a7b
  4128f7:	mov    fs,WORD PTR [ebx-0x14c0aace]
  4128fd:	mov    cl,0x41
  4128ff:	push   esp
  412900:	fwait
  412901:	stos   BYTE PTR es:[edi],al
  412902:	adc    DWORD PTR [ecx],edx
  412904:	lods   eax,DWORD PTR ds:[esi]
  412905:	cmp    al,0x31
  412907:	out    0x1e,eax
  412909:	lods   al,BYTE PTR ds:[esi]
  41290a:	mov    ebp,0x5a80ead1
  41290f:	sbb    BYTE PTR [ecx-0x6ca73565],ah
  412915:	jmp    0x66bc7b0b
  41291a:	sahf   
  41291b:	js     0x4128e8
  41291d:	add    esi,edi
  41291f:	fs call 0x2a8d:0xb28ec75d
  412927:	int    0x91
  412929:	data16 or dh,BYTE PTR [edi-0x160c7b70]
  412930:	fsub   DWORD PTR [edi-0x50b25e68]
  412936:	jmp    0xd7aa98c
  41293b:	outs   dx,BYTE PTR ds:[esi]
  41293c:	jg     0x41297a
  41293e:	ret    0xbbf1
  412941:	fs jg  0x412979
  412944:	dec    esi
  412945:	fwait
  412946:	loope  0x4128f0
  412948:	es push es
  41294a:	aam    0x98
  41294c:	rcl    BYTE PTR [ebp+0x36bf7ca0],0xb0
  412953:	jns    0x41293c
  412955:	outs   dx,DWORD PTR ds:[esi]
  412956:	les    eax,FWORD PTR [ebx]
  412958:	stos   DWORD PTR es:[edi],eax
  412959:	cmp    al,0x10
  41295b:	(bad)  
  41295f:	mov    esp,0xbd3bcc1b
  412964:	mov    dh,BYTE PTR [ecx-0x5b3c62a3]
  41296a:	add    al,0x10
  41296c:	inc    edi
  41296d:	jle    0x412986
  41296f:	ja     0x412946
  412971:	addr16 jmp edi
  412974:	inc    edi
  412975:	inc    ebp
  412976:	es loope 0x4129af
  412979:	(bad)  [ebx+0x31fecd1e]
  41297f:	cs (bad) 
  412982:	mov    esp,DWORD PTR [eax+0x79fada2a]
  412988:	jo     0x41297f
  41298a:	sub    bh,al
  41298c:	sub    esp,esi
  41298e:	call   0x99c4488c
  412993:	scas   eax,DWORD PTR es:[edi]
  412994:	jbe    0x4129cd
  412996:	jecxz  0x4129c1
  412998:	out    dx,al
  412999:	ins    BYTE PTR es:[edi],dx
  41299a:	lahf   
  41299b:	ret    0xa02d
  41299e:	jg     0x412981
  4129a0:	jecxz  0x412a0f
  4129a2:	xor    DWORD PTR [edi-0x1970ffcb],esi
  4129a8:	pusha  
  4129a9:	mov    cl,0x1e
  4129ab:	add    ch,bl
  4129ad:	sbb    DWORD PTR [ecx-0x7c],edx
  4129b0:	js     0x412a09
  4129b2:	call   0xe7e615b3
  4129b7:	lods   al,BYTE PTR ds:[esi]
  4129b8:	adc    eax,0xaa01e1eb
  4129bd:	data16 adc BYTE PTR [esi-0x46b2331f],ah
  4129c4:	fdiv   st(2),st
  4129c6:	pop    ebx
  4129c7:	jle    0x4129ce
  4129c9:	aaa    
  4129ca:	imul   edx,DWORD PTR [ebp+edx*2-0x49],0x5099a50d
  4129d2:	call   0x6d6e:0x4cc6d3b5
  4129d9:	xchg   ebx,eax
  4129da:	std    
  4129db:	pop    ds
  4129dc:	add    BYTE PTR [ecx+edi*1+0x5f],al
  4129e0:	daa    
  4129e1:	dec    edx
  4129e2:	sbb    BYTE PTR [edx-0x28e8d653],bl
  4129e8:	ss fstp DWORD PTR gs:[edx+0x8]
  4129ed:	stos   DWORD PTR es:[edi],eax
  4129ee:	(bad)  
  4129ef:	jmp    0xeff5:0x11a2b43f
  4129f6:	mov    WORD PTR [esi-0x4],es
  4129f9:	push   edx
  4129fa:	add    ebx,DWORD PTR [esi+0x3539c63c]
  412a00:	call   0x1c51099e
  412a05:	push   es
  412a06:	jmp    0xcac1ac7
  412a0b:	adc    BYTE PTR [edi+0x6b],cl
  412a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a0f:	or     eax,eax
  412a11:	cmc    
  412a12:	jbe    0x4129cc
  412a14:	xchg   esp,eax
  412a15:	imul   esi,DWORD PTR [ebx-0x36],0x9ee239bc
  412a1c:	call   0x104:0x15465904
  412a23:	cmc    
  412a24:	ins    DWORD PTR es:[edi],dx
  412a25:	push   edi
  412a26:	mov    bh,0xbd
  412a28:	dec    ecx
  412a29:	pop    es
  412a2a:	(bad)  
  412a2b:	fcom   st(0)
  412a2d:	pop    esp
  412a2e:	add    BYTE PTR [ebx],0xec
  412a31:	xchg   esp,eax
  412a32:	or     eax,0x49ca406f
  412a37:	inc    esp
  412a38:	pop    es
  412a39:	jg     0x4129d7
  412a3b:	sub    BYTE PTR ss:[ebx+0x7b],ah
  412a3f:	cmp    bl,al
  412a41:	test   al,0x8f
  412a43:	ret    
  412a44:	dec    ecx
  412a45:	dec    edx
  412a46:	es ss push esp
  412a49:	xchg   esp,eax
  412a4a:	xor    eax,0x3f2295fe
  412a4f:	(bad)  
  412a50:	(bad)  
  412a52:	xchg   DWORD PTR [ebx+0x4c],esi
  412a55:	std    
  412a56:	fst    DWORD PTR [esi+edx*2]
  412a59:	(bad)  
  412a5a:	aas    
  412a5b:	inc    edi
  412a5c:	ins    BYTE PTR es:[edi],dx
  412a5d:	xchg   edi,eax
  412a5e:	pusha  
  412a5f:	fdivr  DWORD PTR [eax-0x47494b8f]
  412a65:	sbb    DWORD PTR ds:[eax-0x57],0x62
  412a6a:	loope  0x4129fc
  412a6c:	sbb    al,0x48
  412a6e:	in     al,dx
  412a6f:	xchg   ebp,eax
  412a70:	dec    esi
  412a71:	add    ecx,edi
  412a73:	ret    
  412a74:	ins    BYTE PTR es:[edi],dx
  412a75:	inc    eax
  412a76:	bound  ecx,QWORD PTR [edx]
  412a78:	push   es
  412a79:	stos   BYTE PTR es:[edi],al
  412a7a:	hlt    
  412a7b:	rcl    DWORD PTR ds:0xaef21898,cl
  412a81:	inc    esp
  412a82:	pop    ecx
  412a83:	inc    ecx
  412a84:	dec    eax
  412a85:	xor    ebx,edi
  412a87:	sbb    BYTE PTR [ebp+0x1e],0xb8
  412a8b:	xchg   edx,eax
  412a8c:	out    dx,eax
  412a8d:	call   0xd71e:0xc787ab0
  412a94:	push   esp
  412a95:	sub    al,0xa9
  412a97:	out    0x14,eax
  412a99:	fs xor eax,0xabb6a3b8
  412a9f:	out    dx,al
  412aa0:	in     al,dx
  412aa1:	call   0x3358:0x3ec784fc
  412aa8:	popa   
  412aa9:	repnz mov ecx,ss
  412aac:	xor    ah,BYTE PTR [ebx+0x36]
  412aaf:	aam    0x83
  412ab1:	and    esi,DWORD PTR [ebx+0x42]
  412ab4:	xchg   esp,eax
  412ab5:	pusha  
  412ab6:	retf   
  412ab7:	mov    dh,0x1
  412ab9:	xchg   edx,eax
  412aba:	mov    al,ds:0x84440201
  412abf:	xor    DWORD PTR [eax-0x38],ebx
  412ac2:	jnp    0x412af3
  412ac4:	mov    ?,edx
  412ac6:	or     DWORD PTR [esi],ecx
  412ac8:	into   
  412ac9:	cmp    DWORD PTR [ecx],ebp
  412acb:	(bad)
  412ace:	dec    eax
  412acf:	sar    BYTE PTR [ecx+0x30],1
  412ad2:	xor    al,cl
  412ad4:	push   edi
  412ad5:	stos   BYTE PTR es:[edi],al
  412ad6:	cmp    esi,edx
  412ad8:	fcomp  DWORD PTR [edx-0x3c7f7c1e]
  412ade:	xchg   si,ax
  412ae0:	(bad)  
  412ae1:	int3   
  412ae2:	xchg   esi,eax
  412ae3:	mov    WORD PTR [edi+0xdc30296],fs
  412ae9:	cdq    
  412aea:	sbb    ebp,DWORD PTR [ecx+0x1d]
  412aed:	xchg   BYTE PTR [edi+0x63],dh
  412af0:	push   ebx
  412af1:	xor    BYTE PTR [ecx+0x3c],dh
  412af4:	ds pop ss
  412af6:	sti    
  412af7:	adc    dl,ch
  412af9:	test   BYTE PTR [eax+ecx*4],cl
  412afc:	and    bl,BYTE PTR [edx+eiz*8+0x5bf5850a]
  412b03:	xchg   esp,eax
  412b04:	rcl    BYTE PTR [edi],0x8c
  412b07:	and    eax,0x860c32bf
  412b0c:	dec    esi
  412b0d:	repz das 
  412b0f:	pushf  
  412b10:	sbb    edi,ebx
  412b12:	inc    edi
  412b13:	cli    
  412b14:	sub    BYTE PTR [esp+esi*8-0x1f],cl
  412b18:	inc    eax
  412b19:	dec    ecx
  412b1a:	out    0xa5,al
  412b1c:	jae    0x412b94
  412b1e:	lods   al,BYTE PTR ds:[esi]
  412b1f:	out    0x8d,al
  412b21:	dec    esi
  412b22:	push   edi
  412b23:	and    bl,BYTE PTR [edx+eiz*4+0x71c83484]
  412b2a:	pop    ebx
  412b2b:	je     0x412b53
  412b2d:	scas   al,BYTE PTR es:[edi]
  412b2e:	push   edx
  412b2f:	(bad)  
  412b30:	xor    al,0x9d
  412b32:	sar    DWORD PTR [edi],1
  412b34:	fwait
  412b35:	push   ds
  412b36:	mov    cl,0x44
  412b38:	pop    edx
  412b39:	pop    ss
  412b3a:	bound  edi,QWORD PTR gs:[edx-0x20d3a06f]
  412b41:	retf   
  412b42:	sub    ah,BYTE PTR [esi]
  412b44:	outs   dx,DWORD PTR ds:[esi]
  412b45:	sub    dh,BYTE PTR [eax-0x29]
  412b48:	xrelease mov DWORD PTR [esi+0xd859673],ebx
  412b4f:	xor    al,0x21
  412b51:	add    BYTE PTR [edx-0x19],bl
  412b54:	icebp  
  412b55:	push   esi
  412b56:	xchg   BYTE PTR [ebx-0x409c1e67],ah
  412b5c:	call   0x4e83f8f6
  412b61:	rcr    bl,0x5a
  412b64:	mov    DWORD PTR [ebp-0x7a],0x7c11832
  412b6b:	cmp    eax,DWORD PTR [ebp+0xf1586bd]
  412b71:	test   BYTE PTR [edx+eiz*4],dh
  412b74:	push   ecx
  412b75:	icebp  
  412b76:	inc    esi
  412b77:	adc    DWORD PTR [ebp+0x3c],0x5f
  412b7b:	es enter 0x15ec,0x41
  412b80:	cld    
  412b81:	pop    eax
  412b82:	cmp    edi,DWORD PTR [eax-0x51]
  412b85:	mov    edx,0x6b28fb74
  412b8a:	ins    DWORD PTR es:[edi],dx
  412b8b:	enter  0x7015,0xe9
  412b8f:	and    dh,bh
  412b91:	or     ebx,DWORD PTR [eax+0x77]
  412b94:	jle    0x412b1c
  412b96:	xchg   edi,eax
  412b97:	pop    esi
  412b98:	test   al,0xad
  412b9a:	scas   eax,DWORD PTR es:[edi]
  412b9b:	js     0x412b66
  412b9d:	mov    al,BYTE PTR [eax-0x6f]
  412ba0:	ins    BYTE PTR es:[edi],dx
  412ba1:	mov    al,0xdf
  412ba3:	sub    DWORD PTR [edx],edx
  412ba5:	mov    esp,0x949640a1
  412baa:	gs scas al,BYTE PTR es:[edi]
  412bac:	ret    
  412bad:	push   esi
  412bae:	or     dh,BYTE PTR [edi]
  412bb0:	add    BYTE PTR [esi],dh
  412bb2:	cmp    dl,BYTE PTR [ecx+0x5bab242a]
  412bb8:	xor    bl,BYTE PTR [edi]
  412bba:	pop    edi
  412bbb:	inc    edi
  412bbc:	and    DWORD PTR [ecx+eiz*4-0x2301d549],edi
  412bc3:	xchg   ebp,eax
  412bc4:	push   0x47
  412bc6:	or     esi,DWORD PTR [ebx-0x2ebba377]
  412bcc:	ja     0x412bb0
  412bce:	mov    al,0x5c
  412bd0:	add    al,0x97
  412bd2:	xor    DWORD PTR [esi+0x34489bf8],edi
  412bd8:	call   0xef69:0xa7a90b73
  412bdf:	icebp  
  412be0:	and    bh,bh
  412be2:	pop    ecx
  412be3:	mov    dl,0x70
  412be5:	and    dh,BYTE PTR [esi+eax*8-0x9]
  412be9:	jg     0x412bd6
  412beb:	dec    eax
  412bec:	mov    ebx,0x83ae280b
  412bf1:	ds push cs
  412bf3:	lods   eax,DWORD PTR ds:[esi]
  412bf4:	pop    esi
  412bf5:	cmp    BYTE PTR [ebp-0x24],dh
  412bf8:	cmp    eax,0x7865bbbe
  412bfd:	or     ah,bl
  412bff:	ins    DWORD PTR es:[edi],dx
  412c00:	and    al,0xf9
  412c02:	repnz xchg esi,eax
  412c04:	dec    edi
  412c05:	pop    ss
  412c06:	(bad)  
  412c07:	fadd   DWORD PTR [ebx+0x32870717]
  412c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c0e:	(bad)  
  412c0f:	jbe    0x412c21
  412c11:	sahf   
  412c12:	push   0x3d102b52
  412c17:	mov    ch,0xbe
  412c19:	je     0x412c15
  412c1b:	lea    esi,[eax]
  412c1d:	mov    ah,BYTE PTR [edx+0x5b046b24]
  412c23:	pop    edx
  412c24:	fld    QWORD PTR [ebx]
  412c26:	popf   
  412c27:	sbb    DWORD PTR [ebx+0x42661fbd],0xac92869b
  412c31:	and    DWORD PTR [ebx+0x4],ebp
  412c34:	aad    0x7e
  412c36:	les    ebp,FWORD PTR [ecx+0x471eb739]
  412c3c:	or     ah,BYTE PTR [ebx+0x3e2a160]
  412c42:	adc    al,0xbe
  412c44:	ins    BYTE PTR es:[edi],dx
  412c45:	sbb    DWORD PTR [esi],0xffffffa7
  412c48:	inc    ebp
  412c49:	fisubr DWORD PTR [edx-0x34]
  412c4c:	dec    ebp
  412c4d:	lock lds edi,FWORD PTR [edx]
  412c50:	jmp    0x68a0:0x2c899a0b
  412c57:	sub    edx,DWORD PTR [esi-0x1c]
  412c5a:	jp     0x412c9a
  412c5c:	mov    al,ds:0xf48ed4fb
  412c61:	sub    DWORD PTR [eax+0x8],esp
  412c64:	test   BYTE PTR [ecx-0x10535a34],al
  412c6a:	fnsave [eax]
  412c6c:	xchg   DWORD PTR [ebp+eiz*4-0x23],eax
  412c70:	xor    eax,0xca6b49f6
  412c75:	xor    eax,0x95c1146a
  412c7a:	retf   
  412c7b:	cmp    dh,BYTE PTR [edi+0x75e99cb]
  412c81:	and    ebx,ebx
  412c83:	mov    ah,0xbc
  412c85:	stos   BYTE PTR es:[edi],al
  412c86:	xchg   esi,ebx
  412c88:	jmp    DWORD PTR [eax-0x4a4b48cf]
  412c8e:	pop    eax
  412c8f:	lds    ebp,FWORD PTR [ecx-0x2b381178]
  412c95:	add    eax,0x33448f34
  412c9a:	adc    dl,cl
  412c9c:	push   esp
  412c9d:	push   ds
  412c9e:	push   ebx
  412c9f:	mov    esp,0xaf3ad888
  412ca4:	pop    esi
  412ca5:	nop
  412ca6:	neg    DWORD PTR [ebx*4-0x1b8b2f87]
  412cad:	loopne 0x412c69
  412caf:	cli    
  412cb0:	mov    ds:0x1c684115,eax
  412cb5:	adc    eax,0xc5b8ac54
  412cba:	jle    0x412d1b
  412cbc:	in     eax,dx
  412cbd:	xchg   ebp,eax
  412cbe:	or     bl,BYTE PTR [eax]
  412cc0:	dec    ebx
  412cc1:	mov    al,ds:0x5425bb12
  412cc6:	jmp    0x412d35
  412cc8:	dec    esi
  412cc9:	xchg   BYTE PTR [esi-0x75590203],dl
  412ccf:	fcomp  QWORD PTR [eax-0x24]
  412cd2:	fwait
  412cd3:	call   0xe235ef59
  412cd8:	xor    eax,0xf1aade6e
  412cdd:	fisttp WORD PTR [edx]
  412cdf:	cdq    
  412ce0:	enter  0x830f,0x3e
  412ce4:	imul   eax,DWORD PTR ds:0xb4d127d9,0xffffffc3
  412ceb:	pop    esp
  412cec:	pop    ss
  412ced:	jmp    0xb651ce94
  412cf2:	cmp    bh,ah
  412cf4:	dec    esi
  412cf5:	mov    esi,0x562a87f5
  412cfa:	enter  0xb118,0x92
  412cfe:	mov    esi,0x53f072c6
  412d03:	add    ebp,esp
  412d05:	cmp    ecx,DWORD PTR ds:0xdc2fc49a
  412d0b:	pushf  
  412d0c:	dec    edi
  412d0d:	pop    esi
  412d0e:	inc    eax
  412d0f:	pop    eax
  412d10:	add    DWORD PTR [ebx],eax
  412d12:	div    edx
  412d14:	sub    ebp,DWORD PTR [edi-0x10]
  412d17:	(bad)  
  412d18:	sbb    esp,DWORD PTR [ebp+0x229b7cea]
  412d1e:	cld    
  412d1f:	mov    WORD PTR [esi+0x62],es
  412d22:	and    eax,DWORD PTR [esi+0xe]
  412d25:	sbb    DWORD PTR [edx],edx
  412d27:	bound  eax,QWORD PTR [ebp+0x27]
  412d2a:	repz push esi
  412d2c:	mov    DWORD PTR [ebp+0x22],ebx
  412d2f:	js     0x412ce0
  412d31:	into   
  412d32:	out    0x18,al
  412d34:	or     al,BYTE PTR [ebx+0xc]
  412d37:	call   0x60e8d42b
  412d3c:	jmp    0x8df9:0xd8b4337a
  412d43:	sub    dh,BYTE PTR [eax+0x53]
  412d46:	gs xor al,0xd0
  412d49:	xchg   DWORD PTR [edi],ebp
  412d4b:	xlat   BYTE PTR ds:[ebx]
  412d4c:	xor    ch,BYTE PTR [ebp+ebx*2-0x4178fda0]
  412d53:	push   eax
  412d54:	aam    0xb0
  412d56:	cwde   
  412d57:	aas    
  412d58:	xor    esp,ebp
  412d5a:	lods   eax,DWORD PTR ds:[esi]
  412d5b:	aaa    
  412d5c:	je     0x412d93
  412d5e:	jno    0x412d1b
  412d60:	adc    al,0xfc
  412d62:	xor    al,0xb6
  412d64:	data16 loopne 0x412dbb
  412d67:	xchg   DWORD PTR [ecx-0x70f8948c],ebx
  412d6d:	enter  0x1ea2,0xbc
  412d71:	enter  0x2d79,0xd6
  412d75:	lock jle 0x412dd4
  412d78:	pop    ss
  412d79:	mov    ah,0xb4
  412d7b:	and    eax,0x8559223a
  412d80:	push   edi
  412d81:	and    esi,esp
  412d83:	cmp    eax,0x15e6249e
  412d88:	cmp    eax,0x1b26ad45
  412d8d:	scas   ax,WORD PTR es:[edi]
  412d8f:	mov    BYTE PTR [eax-0x32],al
  412d92:	stc    
  412d93:	retf   
  412d94:	fldenv [esi-0x2f]
  412d97:	and    edi,DWORD PTR [ecx]
  412d99:	(bad)  
  412d9a:	stos   DWORD PTR es:[edi],eax
  412d9b:	repz pop ebp
  412d9d:	inc    eax
  412d9e:	out    dx,al
  412d9f:	inc    edi
  412da0:	test   al,0x20
  412da2:	and    ebx,DWORD PTR [eax]
  412da4:	adc    DWORD PTR [esi-0x835b55a],eax
  412daa:	test   BYTE PTR [esi+0xd],cl
  412dad:	addr16 dec eax
  412daf:	push   ebp
  412db0:	ins    DWORD PTR es:[edi],dx
  412db1:	stc    
  412db2:	sub    eax,0x2367bcd3
  412db7:	pop    eax
  412db8:	fisttp QWORD PTR [ebx]
  412dba:	pop    ss
  412dbb:	leave  
  412dbc:	ror    edx,0x44
  412dbf:	xchg   edx,eax
  412dc0:	pop    eax
  412dc1:	(bad)  
  412dc2:	in     eax,dx
  412dc3:	aad    0xc7
  412dc5:	push   edi
  412dc6:	repnz stos DWORD PTR es:[edi],eax
  412dc8:	mov    ebp,0x890d44a9
  412dcd:	cdq    
  412dce:	sbb    dh,BYTE PTR [edi+0x3755429b]
  412dd4:	jle    0x412df8
  412dd6:	cwde   
  412dd7:	adc    DWORD PTR [eax-0x7],ebx
  412dda:	inc    eax
  412ddb:	sub    eax,DWORD PTR [edi-0x5a]
  412dde:	jns    0x412de7
  412de0:	sbb    eax,DWORD PTR [edi]
  412de2:	inc    edi
  412de3:	test   eax,0xb1e25374
  412de8:	shr    DWORD PTR [esp+edi*4-0x23ab66db],1
  412def:	adc    edx,DWORD PTR gs:0x53638644
  412df6:	or     eax,0x957496c5
  412dfb:	or     bh,cl
  412dfd:	adc    al,0x8
  412dff:	jmp    0xa560b265
  412e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e05:	mov    BYTE PTR [ebx+0x7aaf82c],cl
  412e0b:	jae    0x412e47
  412e0d:	cmp    eax,edx
  412e0f:	add    dl,bl
  412e11:	jmp    0x5b0b4ada
  412e16:	mov    dl,0x8c
  412e18:	je     0x412e99
  412e1a:	push   ecx
  412e1b:	mov    dl,0x88
  412e1d:	jecxz  0x412dee
  412e1f:	ja     0x412df2
  412e21:	xor    cl,BYTE PTR [ecx]
  412e23:	push   0xffffffc7
  412e25:	ins    DWORD PTR es:[edi],dx
  412e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e27:	add    BYTE PTR [edi],ch
  412e29:	inc    ebx
  412e2a:	jge    0x412df8
  412e2c:	mov    bh,0x9d
  412e2e:	rcr    DWORD PTR [eax],cl
  412e30:	popa   
  412e31:	es mov eax,0x8675a390
  412e37:	loop   0x412e97
  412e39:	test   al,0x17
  412e3b:	jns    0x412df9
  412e3d:	sbb    eax,0xd923700
  412e42:	icebp  
  412e43:	shr    BYTE PTR [eax-0x1e],1
  412e46:	and    al,BYTE PTR [edi]
  412e48:	jo     0x412e3c
  412e4a:	mov    ebx,0xc1c8c02a
  412e4f:	jnp    0x412e27
  412e51:	cdq    
  412e52:	out    0x77,eax
  412e54:	cmp    ecx,DWORD PTR [edi]
  412e56:	xor    eax,0x31285c99
  412e5b:	pop    ebp
  412e5c:	outs   dx,DWORD PTR ds:[esi]
  412e5d:	mov    esi,ds
  412e5f:	cli    
  412e60:	pop    ecx
  412e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e62:	retf   
  412e63:	fcmovb st,st(7)
  412e65:	test   BYTE PTR [eax+0x7c],cl
  412e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e69:	add    bh,BYTE PTR [edx-0x56cda03]
  412e6f:	jge    0x412ec1
  412e71:	call   0xddc9:0x9b88b580
  412e78:	push   0x42f16f47
  412e7d:	jns    0x412ecd
  412e7f:	xchg   ebp,eax
  412e80:	fimul  DWORD PTR [edi+0x79126bd2]
  412e86:	mov    cl,0x5
  412e88:	or     ebp,DWORD PTR [ebp-0x5f657c02]
  412e8e:	(bad)  
  412e8f:	fisttp WORD PTR [esi-0x3]
  412e92:	into   
  412e93:	pop    ss
  412e94:	mov    al,0xd4
  412e96:	out    0x27,al
  412e98:	mov    edx,0x61bc397b
  412e9d:	dec    eax
  412e9e:	adc    esp,DWORD PTR [eax+0x48]
  412ea1:	adc    BYTE PTR [ecx-0x1b5d6fd8],al
  412ea7:	mov    WORD PTR ds:0x32357920,cs
  412ead:	push   esi
  412eae:	adc    dh,BYTE PTR [esi-0x1]
  412eb1:	ins    BYTE PTR es:[edi],dx
  412eb2:	jae    0x412eff
  412eb4:	dec    ebp
  412eb5:	lahf   
  412eb6:	das    
  412eb7:	mov    esi,0xa89764d6
  412ebc:	xchg   DWORD PTR [esi+edx*4-0x38],ebx
  412ec0:	fst    DWORD PTR [ebp+0x3a]
  412ec3:	out    0xd2,eax
  412ec5:	stc    
  412ec6:	inc    esi
  412ec7:	fisub  DWORD PTR [ebx-0xcd76705]
  412ecd:	popf   
  412ece:	dec    edi
  412ecf:	pop    ebx
  412ed0:	in     eax,dx
  412ed1:	jmp    0x412e61
  412ed3:	add    al,0x5b
  412ed5:	cmp    DWORD PTR [eax],ebx
  412ed7:	cmc    
  412ed8:	popf   
  412ed9:	inc    edi
  412eda:	outs   dx,BYTE PTR ds:[esi]
  412edb:	repz mov esp,0x3463869c
  412ee1:	dec    esi
  412ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ee3:	inc    ecx
  412ee4:	mov    edi,0x56d34d13
  412ee9:	push   ds
  412eea:	aad    0x64
  412eec:	mov    eax,0xf365a188
  412ef1:	dec    esp
  412ef2:	scas   eax,DWORD PTR es:[edi]
  412ef3:	outs   dx,BYTE PTR ds:[esi]
  412ef4:	cmp    al,0x35
  412ef6:	sub    edx,ecx
  412ef8:	mov    edi,0xb15d7d16
  412efd:	addr16 leave 
  412eff:	xchg   ecx,eax
  412f00:	pushf  
  412f01:	pop    esp
  412f02:	ins    BYTE PTR es:[edi],dx
  412f03:	mov    ecx,0xd4fa9f4
  412f08:	or     al,0x45
  412f0a:	fidiv  DWORD PTR [ebp+0x25]
  412f0d:	xor    DWORD PTR [ebx+ebx*1-0x80],ebp
  412f11:	test   eax,0xf8a7576e
  412f16:	cmp    eax,0xc32b8a14
  412f1b:	mov    edx,0x4ed5cd39
  412f20:	rdtsc  
  412f22:	int3   
  412f23:	adc    dl,ch
  412f25:	cmc    
  412f26:	jg     0x412f8a
  412f28:	mov    ecx,DWORD PTR [edi]
  412f2a:	jbe    0x583c4639
  412f30:	inc    edi
  412f31:	mov    edi,0x4e092153
  412f36:	inc    ebx
  412f37:	adc    bh,BYTE PTR [eax+ecx*1-0x1edc0c2]
  412f3e:	lock aas 
  412f40:	or     al,0xd2
  412f42:	dec    edi
  412f43:	stos   BYTE PTR es:[edi],al
  412f44:	retf   0x37ee
  412f47:	pop    ds
  412f48:	mov    ebp,0xa8ce85f6
  412f4d:	(bad)  
  412f4e:	ds inc edi
  412f50:	(bad)  
  412f51:	ror    BYTE PTR [eax+0x30290aa3],0x31
  412f58:	ja     0x412f13
  412f5a:	push   esi
  412f5b:	mov    al,0x3f
  412f5d:	mov    ds:0x977e46df,al
  412f62:	jb     0x412ee8
  412f64:	fild   DWORD PTR [edx]
  412f66:	push   es
  412f67:	add    BYTE PTR [edx],0xb4
  412f6a:	sar    bh,0xc2
  412f6d:	mov    esp,0xa6e2fd47
  412f72:	aam    0x44
  412f74:	and    al,0x1
  412f76:	jecxz  0x412fdc
  412f78:	pushf  
  412f79:	shl    DWORD PTR [ebx+0x450b66f8],cl
  412f7f:	scas   eax,DWORD PTR es:[edi]
  412f80:	or     DWORD PTR [ebp-0x18afdece],esi
  412f86:	repnz xor al,0x84
  412f89:	mov    dh,0xc3
  412f8b:	test   al,0xe7
  412f8d:	add    esi,DWORD PTR [edx+0x66e58600]
  412f93:	shl    DWORD PTR [esi-0x5637e82a],1
  412f99:	cmp    DWORD PTR [edi+ebx*8],edi
  412f9c:	inc    edi
  412f9d:	xchg   esp,eax
  412f9e:	xor    esi,DWORD PTR [ebp-0x10]
  412fa1:	jo     0x412f77
  412fa3:	ja     0x412f71
  412fa5:	add    DWORD PTR [ebp-0x72ea918e],esp
  412fab:	cli    
  412fac:	push   cs
  412fad:	call   0xc95d:0x5cf78d19
  412fb4:	sbb    DWORD PTR [esi+0x102bbf3e],ecx
  412fba:	retf   0xbb60
  412fbd:	into   
  412fbe:	loope  0x412f7a
  412fc0:	call   0x8ccb07c0
  412fc5:	adc    DWORD PTR [ebx],eax
  412fc7:	xchg   edi,eax
  412fc8:	fsubr  QWORD PTR es:[edi-0x62]
  412fcc:	jmp    0xe626:0x5f571237
  412fd3:	and    bl,BYTE PTR [ecx-0x65997a7a]
  412fd9:	lss    ecx,FWORD PTR [ecx+0x43]
  412fdd:	pop    ebx
  412fde:	gs inc ecx
  412fe0:	xchg   ebp,eax
  412fe1:	xchg   ebx,eax
  412fe2:	push   ecx
  412fe3:	mov    dl,0xef
  412fe5:	xor    edx,edi
  412fe7:	sub    eax,0x687b1f83
  412fec:	stos   DWORD PTR es:[edi],eax
  412fed:	adc    bl,cl
  412fef:	sar    BYTE PTR [eax-0xb],1
  412ff2:	mov    ecx,0x5d14943
  412ff7:	adc    edi,ecx
  412ff9:	sbb    al,0x27
  412ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ffc:	sar    DWORD PTR [ebp+0x32],cl
  412fff:	ins    DWORD PTR es:[edi],dx
  413000:	push   ecx
  413001:	rdmsr  
  413003:	repnz aam 0x71
  413006:	ror    ch,cl
  413008:	fcom   QWORD PTR [edi+0x12]
  41300b:	and    al,BYTE PTR [edi+0x1e]
  41300e:	mov    bh,BYTE PTR ds:0x668eb216
  413014:	adc    eax,0xf607be09
  413019:	pop    eax
  41301a:	push   edi
  41301b:	out    0x3,eax
  41301d:	pop    edi
  41301e:	retf   0xf53e
  413021:	and    DWORD PTR [eax+0x2ae20c3d],eax
  413027:	cmp    ecx,DWORD PTR [ebx+ecx*2]
  41302a:	adc    ebx,DWORD PTR [eax-0x72]
  41302d:	fld    st(4)
  41302f:	mov    bl,0xa3
  413031:	sahf   
  413032:	mov    ecx,0xb1a6a359
  413037:	adc    DWORD PTR [edx-0x31],esi
  41303a:	jp     0x4130b2
  41303c:	sub    eax,0xca21e98c
  413041:	cdq    
  413042:	and    BYTE PTR [eax],0xbb
  413045:	loopne 0x4130b8
  413047:	or     al,0x27
  413049:	add    DWORD PTR [edx-0x13],edi
  41304c:	adc    DWORD PTR [ecx-0x7de34ee7],esp
  413052:	lods   eax,DWORD PTR ds:[esi]
  413053:	xchg   edi,eax
  413054:	pop    es
  413055:	pushf  
  413056:	jge    0x4130ab
  413058:	mov    bh,0x69
  41305a:	mov    ecx,0x80b1c864
  41305f:	mov    bh,BYTE PTR [edx+edi*2]
  413062:	adc    esi,DWORD PTR [edx]
  413064:	cmc    
  413065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413066:	jle    0x413011
  413068:	jl     0x412ff9
  41306a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41306b:	lods   al,BYTE PTR ds:[esi]
  41306c:	rcr    DWORD PTR [ebx+0x44],0x69
  413070:	sbb    DWORD PTR [edx+edi*2-0x53],ebp
  413074:	ins    DWORD PTR es:[edi],dx
  413075:	ss mov ecx,0xd59246da
  41307b:	sub    eax,0xf9d0ccac
  413080:	dec    edx
  413081:	leave  
  413082:	cmp    dl,BYTE PTR [esi]
  413084:	jne    0x413034
  413086:	nop
  413087:	mov    esp,0x3317bb52
  41308c:	std    
  41308d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41308e:	arpl   dx,cx
  413090:	push   0x7f6c9aea
  413095:	sahf   
  413096:	xor    BYTE PTR [eax-0x5a],bl
  413099:	sub    BYTE PTR [edx+0x2e],cl
  41309c:	add    al,0xed
  41309e:	shl    ecx,0x6c
  4130a1:	jb     0x413089
  4130a3:	and    eax,0xd23c6c14
  4130a8:	cmc    
  4130a9:	adc    al,0xb3
  4130ab:	fwait
  4130ac:	cmp    eax,0x2bda290b
  4130b1:	xor    dh,BYTE PTR [ecx]
  4130b3:	fst    DWORD PTR [esi-0x3aad2759]
  4130b9:	out    0x99,eax
  4130bb:	ret    
  4130bc:	pop    ss
  4130bd:	ficom  WORD PTR [edx+ecx*2-0x7a]
  4130c1:	cdq    
  4130c2:	stos   BYTE PTR es:[edi],al
  4130c3:	repz xor DWORD PTR [edx-0x5f],ebp
  4130c7:	xchg   ecx,eax
  4130c8:	pop    edi
  4130c9:	cmp    eax,0xfa082ffe
  4130ce:	push   0x2a
  4130d0:	lods   al,BYTE PTR ds:[esi]
  4130d1:	bound  edi,QWORD PTR [ecx+0x1ee0f19d]
  4130d7:	imul   edx,DWORD PTR [edx],0x2eed0c2a
  4130dd:	push   ebp
  4130de:	loop   0x41306a
  4130e0:	jmp    0x413094
  4130e2:	ret    0x6833
  4130e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e6:	(bad)  
  4130e7:	sbb    ah,BYTE PTR [ebp+0x337c9365]
  4130ed:	retf   0x852d
  4130f0:	out    dx,al
  4130f1:	stos   DWORD PTR es:[edi],eax
  4130f2:	jge    0x41315d
  4130f4:	dec    BYTE PTR [edx]
  4130f6:	pop    ss
  4130f7:	and    al,0x9c
  4130f9:	sbb    ch,BYTE PTR [edi+ebx*1+0x4b]
  4130fd:	xchg   esp,eax
  4130fe:	lea    eax,[esi+0x24]
  413101:	stos   DWORD PTR es:[edi],eax
  413102:	daa    
  413103:	lods   al,BYTE PTR ds:[esi]
  413104:	jl     0x4130c0
  413106:	mov    edi,ebp
  413108:	repnz mov al,0x4d
  41310b:	dec    edx
  41310c:	popa   
  41310d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41310f:	jnp    0x41311d
  413111:	fyl2xp1 
  413113:	daa    
  413114:	std    
  413115:	add    ch,BYTE PTR [esi]
  413117:	pushf  
  413118:	dec    ebx
  413119:	(bad)  [eax]
  41311b:	xchg   ecx,eax
  41311c:	xor    BYTE PTR [esi+edi*8-0xfb0014],bl
  413123:	cmp    BYTE PTR [esi],0x2a
  413126:	add    DWORD PTR [edx+0x7f],edi
  413129:	shl    BYTE PTR [eax+eax*8+0x6359a2fc],0x41
  413131:	inc    ebx
  413132:	data16 sti 
  413134:	lock fld QWORD PTR [ecx+0xf]
  413138:	jmp    0x3c83:0x5df93848
  41313f:	test   DWORD PTR [ebx+esi*8],edx
  413142:	fst    QWORD PTR [edx+0x75a8ab59]
  413148:	scas   al,BYTE PTR es:[edi]
  413149:	or     al,0x1
  41314b:	mul    BYTE PTR [esi-0x1aff10fa]
  413151:	pop    esp
  413152:	jl     0x4130ea
  413154:	and    ebx,DWORD PTR [ecx+0x6b]
  413157:	pop    ebp
  413158:	(bad)  
  413159:	int    0x20
  41315b:	and    DWORD PTR [ecx],ebx
  41315d:	push   edi
  41315e:	add    al,0xb2
  413160:	ja     0x4131c1
  413162:	das    
  413163:	mov    edx,0x4e4c51be
  413168:	inc    edx
  413169:	ret    0x51de
  41316c:	retf   0xecd2
  41316f:	imul   ebx,DWORD PTR [eax+0x6d],0x4963d8bd
  413176:	arpl   WORD PTR [eax-0x20bcd548],dx
  41317c:	push   es
  41317d:	ret    0x91e2
  413180:	inc    ebp
  413181:	imul   edx
  413183:	idiv   DWORD PTR [edx]
  413185:	bound  esi,QWORD PTR [ecx]
  413187:	ret    0x8636
  41318a:	dec    esi
  41318b:	or     BYTE PTR [eax+0x5701ed77],dl
  413191:	fld    DWORD PTR [ebx]
  413193:	cmp    al,0xc7
  413195:	add    ch,0xfb
  413198:	mov    ch,0xa9
  41319a:	iret   
  41319b:	into   
  41319c:	add    dl,BYTE PTR [eax+0x6b5e2a21]
  4131a2:	pop    es
  4131a3:	mov    ss,esp
  4131a5:	dec    ebx
  4131a6:	lods   al,BYTE PTR ds:[esi]
  4131a7:	sub    al,cl
  4131a9:	iret   
  4131aa:	fisubr DWORD PTR [edi+0x3]
  4131ad:	xchg   ecx,eax
  4131ae:	pop    esi
  4131af:	fistp  DWORD PTR [ebp+0x32]
  4131b2:	xor    DWORD PTR [esp+ebp*1+0x4c9be2bf],0xffffffba
  4131ba:	(bad)  
  4131bc:	daa    
  4131bd:	aad    0xd6
  4131bf:	mov    edx,eax
  4131c1:	js     0x413204
  4131c3:	pop    ebx
  4131c4:	js     0x4131ed
  4131c6:	fwait
  4131c7:	xor    eax,DWORD PTR [edx]
  4131c9:	(bad)  
  4131cb:	sbb    ebx,DWORD PTR [edx]
  4131cd:	sbb    al,0x9
  4131cf:	or     eax,0x9214b5e3
  4131d4:	pop    ecx
  4131d5:	push   edx
  4131d6:	sti    
  4131d7:	inc    eax
  4131d8:	xchg   edi,eax
  4131d9:	xchg   edx,eax
  4131da:	fst    QWORD PTR [ebx+0x2c9d68a8]
  4131e0:	or     eax,0x14f3986b
  4131e5:	loopne 0x413216
  4131e7:	mov    cs,WORD PTR [ecx-0x179c22d1]
  4131ed:	sahf   
  4131ee:	das    
  4131ef:	cmp    al,0x23
  4131f1:	mov    bh,BYTE PTR [edx+0x11]
  4131f4:	data16 mov bl,0x78
  4131f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131f8:	loop   0x413188
  4131fa:	mov    edi,0x10bb0a10
  4131ff:	clc    
  413200:	sub    eax,0x778f2fad
  413205:	mov    ah,0x61
  413207:	dec    edx
  413208:	lds    ebp,FWORD PTR ds:0xb1cabe51
  41320e:	daa    
  41320f:	xchg   DWORD PTR [eax],ecx
  413211:	xor    eax,0x945598d3
  413216:	cdq    
  413217:	cld    
  413218:	dec    edx
  413219:	sbb    eax,edx
  41321b:	rol    DWORD PTR [ecx-0x80],0xd8
  41321f:	push   edx
  413220:	dec    edi
  413221:	add    eax,0x5edab71f
  413226:	lock cmp DWORD PTR [eax+0x51f716e1],ebp
  41322d:	addr16 push ds
  41322f:	xor    DWORD PTR [eax-0x3f],edi
  413232:	sub    DWORD PTR [ecx],ebp
  413234:	and    BYTE PTR [esi],bh
  413236:	push   es
  413237:	add    bl,BYTE PTR [edi+0x199297e8]
  41323d:	pop    ds
  41323e:	cld    
  41323f:	shl    BYTE PTR [edx+0x1ba6311c],0xb9
  413246:	xchg   edi,eax
  413247:	call   0xbdbd:0xab2bf449
  41324e:	xor    eax,0x58c6bbdc
  413253:	not    ebx
  413255:	jge    0x413263
  413257:	pop    ebp
  413258:	sbb    BYTE PTR ds:0xdf47988e,0xd8
  41325f:	adc    DWORD PTR [edi-0x70],ebx
  413262:	mov    eax,0x589c2a7c
  413267:	jmp    0xb85e:0x191ff52a
  41326e:	dec    esp
  41326f:	adc    al,BYTE PTR [ebx]
  413271:	inc    ecx
  413272:	and    DWORD PTR [ecx-0x64],eax
  413275:	and    dh,bl
  413277:	fwait
  413278:	push   ebx
  413279:	sbb    BYTE PTR [esi+0x117879d6],bl
  41327f:	xor    BYTE PTR [edx+0x35ae0f03],bl
  413285:	adc    eax,0xe0970bbc
  41328a:	cmp    edx,eax
  41328c:	push   edx
  41328d:	adc    BYTE PTR [ebp+0x4b7c705c],bh
  413293:	fstp   DWORD PTR [edx+0x57]
  413296:	into   
  413297:	mov    esp,0xbbe49b55
  41329c:	jae    0x4132e9
  41329e:	inc    ebx
  41329f:	imul   ebx,ecx
  4132a2:	inc    eax
  4132a3:	adc    al,0x5a
  4132a5:	not    DWORD PTR [edi+0x7c]
  4132a8:	cmp    ebp,0xab2b8894
  4132ae:	jo     0x41332b
  4132b0:	ret    
  4132b1:	cmp    ebp,DWORD PTR [eax+0x1e]
  4132b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132b5:	or     bh,dl
  4132b7:	test   eax,0x29d04aaf
  4132bc:	jno    0x413252
  4132be:	arpl   WORD PTR [esi+ebx*8-0x616c79d9],cx
  4132c5:	mov    eax,ds:0xbdb4fbd7
  4132ca:	jae    0x413346
  4132cc:	ror    DWORD PTR [ebp+eax*2-0x7e],cl
  4132d0:	pop    ds
  4132d1:	adc    edi,DWORD PTR [eax+0x1d7f7d94]
  4132d7:	pop    es
  4132d8:	dec    edi
  4132d9:	xchg   DWORD PTR [edi+0x24736fab],edx
  4132df:	mov    ds:0x6141ffc6,eax
  4132e4:	int3   
  4132e5:	sub    eax,0x6021cd58
  4132ea:	sbb    ch,BYTE PTR [edi]
  4132ec:	jne    0x41334c
  4132ee:	fwait
  4132ef:	jae    0x41333d
  4132f1:	pop    esp
  4132f2:	ret    0x7847
  4132f5:	mov    cl,0xc1
  4132f7:	adc    DWORD PTR [edi+0x126680ec],ebp
  4132fd:	jl     0x4132b3
  4132ff:	or     DWORD PTR [esi+0x4c],0x8811b7ff
  413306:	fucomp st(3)
  413308:	daa    
  413309:	ret    
  41330a:	cmp    DWORD PTR [ecx],eax
  41330c:	lahf   
  41330d:	sbb    al,0xb7
  41330f:	lahf   
  413310:	jne    0x413363
  413312:	xchg   ebp,eax
  413313:	arpl   cx,dx
  413315:	push   esp
  413316:	pop    esi
  413317:	in     al,0x23
  413319:	(bad)  
  41331a:	popf   
  41331b:	xor    al,0x9e
  41331d:	mov    esp,0x3f225884
  413322:	mov    DWORD PTR [eax],esi
  413324:	repnz outs dx,BYTE PTR ds:[esi]
  413326:	nop
  413327:	ins    DWORD PTR es:[edi],dx
  413328:	arpl   WORD PTR [esi],di
  41332a:	rol    BYTE PTR [esi+0x20],1
  41332d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41332e:	mov    bl,0xe6
  413330:	repz pop ds
  413332:	xor    al,bh
  413334:	or     eax,esi
  413336:	cld    
  413337:	(bad)  
  413338:	test   eax,0xd4c23cff
  41333d:	pushf  
  41333e:	dec    eax
  41333f:	add    dh,BYTE PTR [ecx+0x297c5a3c]
  413345:	add    al,0xf0
  413347:	cmp    ecx,esi
  413349:	inc    esi
  41334a:	push   es
  41334b:	into   
  41334c:	mov    bh,0x4a
  41334e:	sub    eax,0xe9125202
  413353:	cdq    
  413354:	ins    DWORD PTR es:[edi],dx
  413355:	mov    esp,0x8b40707
  41335a:	in     al,0xe9
  41335c:	jge    0x413339
  41335e:	jmp    0xdefb:0xa54e5aa1
  413365:	mov    DWORD PTR [eax+0x11fe1c4a],ebx
  41336b:	out    dx,eax
  41336c:	jecxz  0x4133da
  41336e:	push   es
  41336f:	jno    0x4132f6
  413371:	imul   ecx,ecx,0xcd0d3e26
  413377:	add    ch,dl
  413379:	aam    0xdf
  41337b:	mov    ds:0xbb47345f,al
  413380:	dec    ecx
  413381:	pop    ds
  413382:	into   
  413383:	leave  
  413384:	repnz fs mov al,ah
  413388:	push   eax
  413389:	fdivr  QWORD PTR [eax-0x3feccff2]
  41338f:	inc    eax
  413390:	xlat   BYTE PTR ds:[ebx]
  413391:	add    BYTE PTR [edi-0x7b],dl
  413394:	mov    edx,0x550e2ab7
  413399:	jecxz  0x413352
  41339b:	and    DWORD PTR ds:0x312768f1,0xc0e07e7b
  4133a5:	js     0x413333
  4133a7:	jge    0x41334b
  4133a9:	scas   al,BYTE PTR es:[edi]
  4133aa:	ds or  al,0x84
  4133ad:	xor    al,0x9a
  4133af:	push   ds
  4133b0:	and    ebx,DWORD PTR [edx]
  4133b2:	fs xor eax,0x876971c2
  4133b8:	push   ss
  4133b9:	push   ebp
  4133ba:	cdq    
  4133bb:	inc    esp
  4133bc:	bound  ebp,QWORD PTR [edx]
  4133be:	pop    edi
  4133bf:	adc    ch,BYTE PTR [ecx-0x2c]
  4133c2:	jae    0x413388
  4133c4:	scas   eax,DWORD PTR es:[edi]
  4133c5:	int    0x3f
  4133c7:	add    BYTE PTR [edi+0x12050a10],al
  4133cd:	and    al,BYTE PTR [esi+0x39]
  4133d0:	nop
  4133d1:	mov    ebp,0x6bd4122
  4133d6:	inc    ebx
  4133d7:	lds    edx,FWORD PTR [ecx-0x1e]
  4133da:	rol    BYTE PTR [edx+0x488ca75c],0x8f
  4133e1:	les    eax,FWORD PTR [esi-0x438fa526]
  4133e7:	outs   dx,BYTE PTR ds:[esi]
  4133e8:	add    esi,DWORD PTR [ebx-0x5e4a0f2b]
  4133ee:	fldenv [edi+edx*1+0x7b168d04]
  4133f5:	jae    0x413425
  4133f7:	add    dh,BYTE PTR [esi+ebp*2-0x7d9da26a]
  4133fe:	aad    0x60
  413400:	js     0x413447
  413402:	popf   
  413403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413404:	sub    BYTE PTR [edx],bh
  413406:	sti    
  413407:	add    BYTE PTR [ecx+0x59],0xa4
  41340b:	push   0x36
  41340d:	shr    BYTE PTR [ecx-0x6a],0x1a
  413411:	into   
  413412:	sub    al,0xed
  413414:	and    esi,edi
  413416:	cmp    eax,0x8478007f
  41341b:	mov    BYTE PTR [ebx+0x309da25d],al
  413421:	call   0x65ae709d
  413426:	lds    ebp,FWORD PTR [edi-0x7b]
  413429:	out    dx,al
  41342a:	retf   
  41342b:	sbb    eax,0xf266bac1
  413430:	pop    ebp
  413431:	and    DWORD PTR [eax-0x5d],edi
  413434:	enter  0x89a5,0x3e
  413438:	push   esp
  413439:	cmp    eax,0x6316dad4
  41343e:	sub    DWORD PTR [esi+eax*1-0x57],eax
  413442:	dec    ebp
  413443:	push   es
  413444:	add    al,0xd6
  413446:	jge    0x41348b
  413448:	jge    0x413455
  41344a:	popf   
  41344b:	in     eax,dx
  41344c:	addr16 in al,dx
  41344e:	in     eax,dx
  41344f:	add    bl,al
  413451:	loop   0x4134ac
  413453:	retf   0x2494
  413456:	and    al,0x1d
  413458:	data16 into 
  41345a:	mov    edx,edx
  41345c:	nop
  41345d:	add    eax,0xbf43726e
  413462:	jmp    0x84e3e05e
  413467:	(bad)  
  413468:	push   ss
  413469:	(bad)  
  41346a:	mov    eax,0xe4fc960b
  41346f:	mov    dl,BYTE PTR [edx+0x4a]
  413472:	aam    0x4a
  413474:	adc    ch,0x2
  413477:	pop    ecx
  413478:	and    ebp,DWORD PTR [edi+0x5e5085d0]
  41347e:	inc    DWORD PTR [ebx-0x417d22eb]
  413484:	cwde   
  413485:	aaa    
  413486:	and    ebp,edi
  413488:	aas    
  413489:	imul   ecx,DWORD PTR [edi-0x3f],0x2810fd64
  413490:	nop
  413491:	mov    ebx,DWORD PTR [eax+eiz*4+0x119b5e25]
  413498:	pop    es
  413499:	pop    ds
  41349a:	and    esp,DWORD PTR [esi]
  41349c:	xchg   ebp,eax
  41349d:	mov    al,ds:0xb2b69d06
  4134a2:	int    0xa3
  4134a4:	xchg   ecx,eax
  4134a5:	xchg   edi,eax
  4134a6:	xchg   DWORD PTR [ecx+0x0],ebp
  4134a9:	xchg   ebp,eax
  4134aa:	cdq    
  4134ab:	into   
  4134ac:	mov    ds:0xda1fe0e7,eax
  4134b1:	sub    cx,di
  4134b4:	mov    ah,0x24
  4134b6:	jmp    0x413488
  4134b8:	mov    ebp,0x6df4a461
  4134bd:	cmp    eax,0x59826d96
  4134c2:	fistp  WORD PTR [esi+0x33e74a90]
  4134c8:	and    eax,0x1d789c42
  4134cd:	cmp    al,0xf6
  4134cf:	add    edx,DWORD PTR [eax+0x7b]
  4134d2:	xchg   DWORD PTR [ecx+edx*2+0x8af0753],esp
  4134d9:	xor    dl,BYTE PTR [esi-0x55]
  4134dc:	sbb    BYTE PTR [esi-0x7c],al
  4134df:	iret   
  4134e0:	xor    eax,0xd4a4121e
  4134e5:	jle    0x413563
  4134e7:	fwait
  4134e8:	(bad)  
  4134e9:	retf   0xbe39
  4134ec:	and    DWORD PTR [edx],edi
  4134ee:	fdivr  DWORD PTR [ebp+0x2645a87e]
  4134f4:	mov    edx,0x8b7f689f
  4134f9:	push   ds
  4134fa:	jmp    0x47ea:0x3fd12320
  413501:	sub    ebp,edi
  413503:	popf   
  413504:	inc    esp
  413505:	rol    DWORD PTR [edx+0x65207b4f],cl
  41350b:	ret    0x3461
  41350e:	sbb    eax,0xa84c0348
  413513:	stc    
  413514:	repz int 0x9a
  413517:	out    0xe5,al
  413519:	das    
  41351a:	dec    ebx
  41351b:	dec    edi
  41351c:	inc    ecx
  41351d:	scas   al,BYTE PTR es:[edi]
  41351e:	push   ds
  41351f:	pop    ecx
  413520:	imul   ebp,DWORD PTR [ebp+0x6cabd644],0x7669ea23
  41352a:	add    esi,0xb6b1449f
  413530:	iret   
  413531:	xor    edi,esi
  413533:	pop    ecx
  413534:	xor    BYTE PTR [ebx+ecx*4+0x3163d292],ch
  41353b:	std    
  41353c:	loopne 0x4134d1
  41353e:	mov    eax,ds:0xcb5924f3
  413543:	cmp    esp,DWORD PTR [ebx-0x1f423fa1]
  413549:	mov    ds:0xd5afc013,al
  41354e:	int3   
  41354f:	retf   0xb7ba
  413552:	sub    BYTE PTR ds:0xf267a643,dh
  413558:	outs   dx,DWORD PTR ds:[esi]
  413559:	push   eax
  41355a:	sahf   
  41355b:	test   eax,0x7eb95257
  413560:	dec    eax
  413561:	xor    eax,0x2a3683ed
  413566:	xchg   ah,dh
  413568:	fmul   QWORD PTR [ecx]
  41356a:	stos   BYTE PTR es:[edi],al
  41356b:	xchg   esi,eax
  41356c:	retf   0x5acd
  41356f:	push   ebp
  413570:	jb     0x413532
  413572:	jge    0x4135bf
  413574:	lds    edx,FWORD PTR [ebx+0x6c]
  413577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413578:	push   ecx
  413579:	sbb    DWORD PTR [esi],edx
  41357b:	mov    bl,BYTE PTR [edx-0x4f]
  41357e:	xchg   ecx,eax
  41357f:	and    al,0xfe
  413581:	push   ss
  413582:	inc    edx
  413583:	fist   DWORD PTR [edx]
  413585:	mov    bh,0xdc
  413587:	and    eax,0xcd5c70ac
  41358c:	xchg   esi,eax
  41358d:	adc    dh,BYTE PTR [ebp+0x5cc95efe]
  413593:	enter  0xa312,0xfb
  413597:	mov    esi,0xbb10e67f
  41359c:	adc    bh,dl
  41359e:	adc    eax,0x2e9cd152
  4135a3:	aas    
  4135a4:	data16 stos BYTE PTR es:[edi],al
  4135a6:	in     eax,dx
  4135a7:	mov    ds:0xf16198b2,al
  4135ac:	dec    ecx
  4135ad:	inc    ecx
  4135ae:	xor    al,0xd7
  4135b0:	push   es
  4135b1:	mov    edx,DWORD PTR [esi+0x20]
  4135b4:	mov    al,0xb9
  4135b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135b7:	mov    ds:0x4625fce7,al
  4135bc:	sahf   
  4135bd:	sbb    BYTE PTR [ebx],0xd5
  4135c0:	inc    esi
  4135c1:	add    al,0x4b
  4135c3:	ss sahf 
  4135c5:	pop    ss
  4135c6:	(bad)  
  4135c7:	lods   eax,DWORD PTR ds:[esi]
  4135c8:	sub    DWORD PTR [edi],0xda92f480
  4135ce:	xchg   BYTE PTR [edx],dh
  4135d0:	or     DWORD PTR [edi-0x12],edi
  4135d3:	and    al,0xbf
  4135d5:	fisubr DWORD PTR [edx+0x27]
  4135d8:	jecxz  0x413611
  4135da:	je     0x4135c7
  4135dc:	rcl    DWORD PTR [eax],1
  4135de:	inc    edx
  4135df:	xor    al,0x2e
  4135e1:	(bad)  
  4135e2:	rcl    DWORD PTR [edx+ebx*8+0x6c],1
  4135e6:	stos   DWORD PTR es:[edi],eax
  4135e7:	xchg   esi,eax
  4135e8:	xchg   DWORD PTR [ecx],eax
  4135ea:	jae    0x41363f
  4135ec:	call   0x708b:0x4e998871
  4135f3:	fucomi st,st(7)
  4135f5:	or     eax,0x4254a4d7
  4135fa:	pop    ecx
  4135fb:	stos   DWORD PTR es:[edi],eax
  4135fc:	sbb    al,0x3a
  4135fe:	xchg   ebp,eax
  4135ff:	push   es
  413600:	(bad)  
  413601:	sbb    eax,0xecbcbdb4
  413606:	retf   
  413607:	aas    
  413608:	xor    DWORD PTR ds:0x11d502a1,esp
  41360e:	inc    esp
  41360f:	repz ds xchg edx,eax
  413612:	clc    
  413613:	es sub eax,0x55b2acc7
  413619:	outs   dx,BYTE PTR ds:[esi]
  41361a:	xlat   BYTE PTR ds:[ebx]
  41361b:	std    
  41361c:	enter  0xbbba,0x2c
  413620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413621:	xor    al,0x1e
  413623:	test   al,0xb7
  413625:	mov    ch,0x15
  413627:	daa    
  413628:	pop    ss
  413629:	inc    edi
  41362a:	addr16 aas 
  41362c:	or     DWORD PTR [edi],edx
  41362e:	cmp    BYTE PTR [edi+0x44d84b7b],al
  413634:	add    eax,0x620bad73
  413639:	jnp    0x413643
  41363b:	and    eax,0x98e1a400
  413640:	sub    BYTE PTR [esi+0x43a0682a],0x1c
  413647:	daa    
  413648:	pop    edx
  413649:	pusha  
  41364a:	xor    BYTE PTR [edi-0x4f],cl
  41364d:	out    0x6d,al
  41364f:	fmul   QWORD PTR [eax+esi*2+0x9f70c19]
  413656:	cmp    BYTE PTR [esi*1+0x39f9db06],bh
  41365d:	add    ebx,DWORD PTR [eiz*2+0x5138c787]
  413664:	dec    ecx
  413665:	push   esi
  413666:	data16 jge 0x4136ab
  413669:	add    eax,0x321687d5
  41366e:	icebp  
  41366f:	xchg   edi,eax
  413670:	cmp    BYTE PTR [ecx],0x22
  413673:	and    ecx,edi
  413675:	cmp    esp,edx
  413677:	sub    al,0x1b
  413679:	shr    DWORD PTR [ebp+0x606329a5],0x4e
  413680:	pop    edx
  413681:	dec    esp
  413682:	inc    esi
  413683:	mov    BYTE PTR [edx],bl
  413685:	pop    esp
  413686:	retf   
  413687:	loop   0x41361b
  413689:	call   0x9e5b17d3
  41368e:	push   edi
  41368f:	xlat   BYTE PTR ds:[bx]
  413691:	xchg   ebp,eax
  413692:	lods   al,BYTE PTR ds:[esi]
  413693:	ins    BYTE PTR es:[edi],dx
  413694:	pop    edx
  413695:	loopne 0x413645
  413697:	sbb    eax,0xa65605ac
  41369c:	(bad)  
  41369d:	pop    edx
  41369e:	push   ss
  41369f:	pop    es
  4136a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136a1:	mov    ecx,0xbaf3d3f7
  4136a6:	ja     0x413691
  4136a8:	xlat   BYTE PTR ds:[ebx]
  4136a9:	rcl    BYTE PTR ds:0x32175e2c,1
  4136af:	dec    esp
  4136b0:	(bad)  
  4136b1:	fs aad 0xc9
  4136b4:	jge    0x4136fe
  4136b6:	adc    eax,0x97a0cf59
  4136bb:	stos   DWORD PTR es:[edi],eax
  4136bc:	test   BYTE PTR [esi-0x61308faf],ch
  4136c2:	scas   al,BYTE PTR es:[edi]
  4136c3:	shl    dh,cl
  4136c5:	pop    ebx
  4136c6:	pop    ds
  4136c7:	stc    
  4136c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136c9:	pusha  
  4136ca:	add    al,BYTE PTR [esi-0x4a]
  4136cd:	ret    0x3314
  4136d0:	stos   BYTE PTR es:[edi],al
  4136d1:	nop
  4136d2:	jo     0x4136e6
  4136d4:	inc    esp
  4136d5:	cmc    
  4136d6:	cli    
  4136d7:	and    al,0xa5
  4136d9:	outs   dx,BYTE PTR ds:[esi]
  4136da:	inc    esi
  4136db:	in     eax,dx
  4136dc:	jg     0x4136c1
  4136de:	retf   
  4136df:	dec    edx
  4136e0:	mov    dl,0x47
  4136e2:	dec    ebx
  4136e3:	pop    ecx
  4136e4:	scas   al,BYTE PTR es:[edi]
  4136e5:	jmp    0xcc4f:0x1f79e9cd
  4136ec:	sar    BYTE PTR [ebp-0x2e419831],1
  4136f2:	add    eax,0xcc783af2
  4136f7:	pop    edi
  4136f8:	or     eax,0x9bcbf8a7
  4136fd:	push   0x7dae92a4
  413702:	dec    edx
  413703:	fs popf 
  413705:	ds push esi
  413707:	mov    ebp,0xc997d0d
  41370c:	out    dx,eax
  41370d:	mov    ch,0xe9
  41370f:	xchg   DWORD PTR [ebx],edx
  413711:	or     BYTE PTR [ecx-0x10],cl
  413714:	inc    eax
  413715:	dec    ebp
  413716:	cmc    
  413717:	ins    DWORD PTR es:[edi],dx
  413718:	pop    ebp
  413719:	push   esi
  41371a:	jecxz  0x4136a3
  41371c:	xchg   edx,eax
  41371d:	cld    
  41371e:	xchg   esp,eax
  41371f:	cmp    ah,BYTE PTR [eax-0x78]
  413722:	add    al,0x8c
  413724:	fbstp  TBYTE PTR [ecx+0x1a27da1e]
  41372a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41372b:	add    BYTE PTR [eax-0x1f6465ba],0xb9
  413732:	mov    al,ds:0xc03e2775
  413737:	hlt    
  413738:	mov    ebx,0xb9861b0a
  41373d:	mov    eax,0x610f7c0f
  413742:	and    eax,DWORD PTR [eax]
  413744:	mov    DWORD PTR [ebx+0x22],edi
  413747:	cmp    bl,ch
  413749:	xor    al,0xbe
  41374b:	ret    
  41374c:	jb     0x4136da
  41374e:	ja     0x4137c8
  413750:	xor    al,0xfe
  413752:	je     0x413759
  413754:	test   BYTE PTR [edx],al
  413756:	jnp    0x413799
  413758:	sti    
  413759:	dec    edi
  41375a:	outs   dx,BYTE PTR ds:[esi]
  41375b:	push   esi
  41375c:	pushf  
  41375d:	and    al,0xb4
  41375f:	sub    DWORD PTR [esi-0x9],edx
  413762:	test   BYTE PTR [edx-0x1ad68b65],dl
  413768:	jnp    0x41370c
  41376a:	leave  
  41376b:	inc    ebx
  41376c:	test   al,0xb9
  41376e:	cld    
  41376f:	adc    BYTE PTR [edx-0x6cb6bde2],dh
  413775:	lock adc DWORD PTR [ebp-0x9],eax
  413779:	sbb    BYTE PTR ds:0x3b7be503,al
  41377f:	mov    DWORD PTR [esi+0x2eb57b27],ecx
  413785:	fadd   QWORD PTR [ebx]
  413787:	(bad)  
  413789:	idiv   DWORD PTR [edx+eiz*8+0xf]
  41378d:	cmp    esi,ecx
  41378f:	inc    edi
  413790:	xchg   DWORD PTR [ebx-0x2922a0fb],esi
  413796:	and    al,0xac
  413798:	cwde   
  413799:	outs   dx,DWORD PTR ds:[esi]
  41379a:	pop    edx
  41379b:	in     eax,dx
  41379c:	cmc    
  41379d:	sbb    cl,BYTE PTR [edi]
  41379f:	jnp    0x413801
  4137a1:	into   
  4137a2:	sbb    BYTE PTR [ecx+0xbad9008],ah
  4137a8:	int3   
  4137a9:	out    0xb3,al
  4137ab:	inc    eax
  4137ac:	fst    QWORD PTR [esi]
  4137ae:	jl     0x413736
  4137b0:	pop    ecx
  4137b1:	test   DWORD PTR [ebx+0x72],esp
  4137b4:	stos   BYTE PTR es:[edi],al
  4137b5:	aad    0xd2
  4137b7:	stos   BYTE PTR es:[edi],al
  4137b8:	or     eax,0xf75048d5
  4137bd:	in     eax,0x13
  4137bf:	push   eax
  4137c0:	push   0xffffff94
  4137c2:	pusha  
  4137c3:	sbb    BYTE PTR [esi],0xa5
  4137c6:	(bad)
  4137ca:	inc    edx
  4137cb:	call   0xdb96:0x6919de96
  4137d2:	add    esi,ebp
  4137d4:	mov    ebp,0x3f6e7b8d
  4137d9:	cmp    ch,BYTE PTR fs:[esi]
  4137dc:	hlt    
  4137dd:	call   0x6afc:0xe2c15c32
  4137e4:	dec    ecx
  4137e5:	xchg   esp,eax
  4137e6:	iret   
  4137e7:	pop    ss
  4137e8:	dec    esp
  4137e9:	mov    bl,0x12
  4137eb:	fidivr WORD PTR [ecx]
  4137ed:	fiadd  WORD PTR [edx-0x63ab927f]
  4137f3:	scas   eax,DWORD PTR es:[edi]
  4137f4:	test   DWORD PTR [ecx-0x39e82489],0x6d7c0b74
  4137fe:	xchg   edi,eax
  4137ff:	xchg   ebp,eax
  413800:	push   es
  413801:	dec    esi
  413802:	mov    DWORD PTR ds:0x497cd65c,esp
  413808:	mov    bh,0x69
  41380a:	xchg   esi,eax
  41380b:	js     0x413879
  41380d:	in     eax,0xc2
  41380f:	cs aas 
  413811:	xor    ebx,0x48
  413814:	shl    BYTE PTR [esi+ecx*4-0x795f119f],0x6
  41381c:	sub    eax,0x5191bd22
  413821:	mov    al,ds:0x14feacb5
  413826:	cwde   
  413827:	push   edx
  413828:	fnstcw WORD PTR [ebp+0x31]
  41382b:	les    edx,FWORD PTR [ecx+0x7e]
  41382e:	dec    ebp
  41382f:	or     DWORD PTR [edi-0x2a5fda44],ebp
  413835:	stos   BYTE PTR es:[edi],al
  413836:	aad    0xc8
  413838:	lea    ecx,[ecx+0x65]
  41383b:	dec    eax
  41383c:	mov    esi,0xc05c3171
  413841:	icebp  
  413842:	mov    ecx,0x985a34a6
  413847:	or     bh,BYTE PTR [edi+0x2f]
  41384a:	sbb    DWORD PTR [eax-0x4deb1447],eax
  413850:	sub    eax,0xa5aa5325
  413855:	push   eax
  413856:	mov    ebx,DWORD PTR [ecx+0x5f123066]
  41385c:	mov    al,ds:0x39dfe5e5
  413861:	ja     0x41384f
  413863:	pop    ds
  413864:	rcr    eax,1
  413866:	sub    eax,0x4efaedb7
  41386b:	jb     0x413872
  41386d:	cli    
  41386e:	cli    
  41386f:	mov    dl,0x0
  413871:	mov    cl,0x89
  413873:	neg    BYTE PTR [edx+0x74]
  413876:	(bad)  
  413878:	sahf   
  413879:	mov    WORD PTR [edi-0x67],cs
  41387c:	int3   
  41387d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41387e:	call   0x3283f1aa
  413883:	lock add ah,BYTE PTR [ebp+0x51f2810f]
  41388a:	enter  0x9077,0xef
  41388e:	shl    BYTE PTR [ebp-0x1a],1
  413891:	retf   
  413892:	sbb    al,0xdd
  413894:	xor    ebp,ecx
  413896:	fldenv [eax]
  413898:	fcomp  QWORD PTR [edx+edx*8-0x61]
  41389c:	and    bl,BYTE PTR [edi+0x628ae705]
  4138a2:	in     eax,dx
  4138a3:	bound  ebp,QWORD PTR [esi-0x74498a5c]
  4138a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138aa:	or     al,0xb3
  4138ac:	jae    0x4138cc
  4138ae:	fwait
  4138af:	leave  
  4138b0:	pushf  
  4138b1:	cmp    bh,BYTE PTR [ebp-0x19]
  4138b4:	loop   0x41388c
  4138b6:	dec    esp
  4138b7:	jbe    0x413882
  4138b9:	and    BYTE PTR [esi-0x669b3f65],bh
  4138bf:	sub    BYTE PTR [eax],bl
  4138c1:	lods   al,BYTE PTR ds:[esi]
  4138c2:	mov    dh,0x1f
  4138c4:	pop    edi
  4138c5:	xchg   esi,eax
  4138c6:	popa   
  4138c7:	dec    eax
  4138c8:	jmp    0x413930
  4138ca:	cdq    
  4138cb:	scas   al,BYTE PTR es:[di]
  4138cd:	daa    
  4138ce:	adc    bh,BYTE PTR [ebp+0x60abeeea]
  4138d4:	hlt    
  4138d5:	scas   al,BYTE PTR es:[edi]
  4138d6:	in     eax,dx
  4138d7:	push   0xb1f03214
  4138dc:	mov    ah,BYTE PTR [edx+0x3e1c605]
  4138e2:	cwde   
  4138e3:	dec    edi
  4138e4:	jecxz  0x413941
  4138e6:	adc    ebp,esi
  4138e8:	jl     0x41390c
  4138ea:	gs fwait
  4138ec:	xlat   BYTE PTR ds:[ebx]
  4138ed:	(bad)  
  4138ee:	out    dx,al
  4138ef:	lds    edi,FWORD PTR [edx-0x6bdbefdc]
  4138f5:	ins    DWORD PTR es:[edi],dx
  4138f6:	pop    eax
  4138f7:	es jbe 0x41387d
  4138fa:	(bad)  
  4138fb:	sbb    edx,eax
  4138fd:	dec    ebx
  4138fe:	xchg   ebp,eax
  4138ff:	pushf  
  413900:	movlps xmm4,QWORD PTR [edx-0x57]
  413904:	mov    ebx,0xe95e315c
  413909:	or     eax,0x5dfaf55
  41390e:	add    DWORD PTR [ebp*2+0x7daa64ad],0xffffffce
  413916:	inc    ebp
  413917:	ret    
  413918:	ror    BYTE PTR [eax+0x3b294d13],cl
  41391e:	pop    ebx
  41391f:	or     al,0xe0
  413921:	out    0x4c,eax
  413923:	imul   ecx,DWORD PTR [esi],0x69
  413926:	sbb    dh,BYTE PTR [eax]
  413928:	xchg   DWORD PTR [ecx-0x7d60d588],ecx
  41392e:	and    al,0xb5
  413930:	mov    ah,BYTE PTR [eax+0x35]
  413933:	ret    0xc1d3
  413936:	sbb    BYTE PTR [esi],ch
  413938:	and    dh,dh
  41393a:	rcl    BYTE PTR [eax-0x13],1
  41393d:	iret   
  41393e:	adc    BYTE PTR [ebp+0x6107b7c8],dh
  413944:	test   al,0xe9
  413946:	xor    ah,BYTE PTR [ecx]
  413948:	mov    edx,0xf2e1b47c
  41394d:	jmp    0x7b6cb963
  413952:	das    
  413953:	ss das 
  413955:	pop    edi
  413956:	or     esi,ecx
  413958:	mov    esp,0x6984e292
  41395d:	jne    0x413946
  41395f:	je     0x413945
  413961:	pop    ds
  413962:	xor    eax,ecx
  413964:	pop    ds
  413965:	test   eax,0x1b5e6f3f
  41396a:	mov    esp,0x26f8024f
  41396f:	mov    al,ds:0x5e9857ab
  413974:	push   es
  413975:	add    al,0x7b
  413977:	rol    DWORD PTR [edx-0x7a3e31c5],0x17
  41397e:	mov    ebp,0x99620d89
  413983:	pop    esp
  413984:	imul   edx,DWORD PTR [ebx],0x2b
  413987:	fdiv   QWORD PTR [ebx+ebp*2]
  41398a:	aam    0xf3
  41398c:	(bad)
  41398f:	sbb    dl,BYTE PTR [edi+0x48]
  413992:	xor    dl,al
  413994:	(bad)  
  413995:	and    esp,DWORD PTR gs:[edx-0x3366b93e]
  41399c:	sbb    al,0x5b
  41399e:	dec    eax
  41399f:	push   esp
  4139a0:	xchg   ecx,eax
  4139a1:	cmc    
  4139a2:	push   cs
  4139a3:	div    BYTE PTR [ecx+0x11]
  4139a6:	push   ebx
  4139a7:	and    dh,dl
  4139a9:	stos   DWORD PTR es:[edi],eax
  4139aa:	xor    eax,0x5f1e04b3
  4139af:	mov    ds:0x492170d0,al
  4139b4:	cmp    DWORD PTR [edi+0x3],eax
  4139b7:	sub    dh,BYTE PTR [ecx-0x551553ec]
  4139bd:	loopne 0x41398f
  4139bf:	sub    eax,0x46905509
  4139c4:	jb     0x4139e7
  4139c6:	jle    0x4139df
  4139c8:	mov    eax,0xb7be9d04
  4139cd:	std    
  4139ce:	jg     0x413960
  4139d0:	pop    es
  4139d1:	dec    edx
  4139d2:	or     eax,0x1a2e192f
  4139d7:	mov    edx,0x9d073a6b
  4139dc:	sbb    DWORD PTR [edx],0xffffff85
  4139df:	int3   
  4139e0:	scas   eax,DWORD PTR es:[edi]
  4139e1:	adc    ebp,DWORD PTR [ebx+ebx*8]
  4139e4:	cli    
  4139e5:	inc    ecx
  4139e6:	or     eax,0xfcd501b2
  4139eb:	push   0x992f5312
  4139f0:	pop    ebx
  4139f1:	jno    0x413989
  4139f3:	loopne 0x413a2f
  4139f5:	inc    esp
  4139f6:	test   esi,eax
  4139f8:	pop    esp
  4139f9:	mov    ss,WORD PTR [eax-0x16]
  4139fc:	pusha  
  4139fd:	rcl    ah,1
  4139ff:	xchg   bh,ch
  413a01:	int    0x6f
  413a03:	enter  0x49a9,0x4b
  413a07:	scas   al,BYTE PTR es:[edi]
  413a08:	aaa    
  413a09:	jae    0x41399a
  413a0b:	cli    
  413a0c:	xchg   esi,eax
  413a0d:	sbb    ch,0x74
  413a10:	outs   dx,DWORD PTR ds:[esi]
  413a11:	jno    0x413a4f
  413a13:	int3   
  413a14:	fmul   st,st(1)
  413a16:	sbb    dl,BYTE PTR [ecx+0x1d]
  413a19:	frstor [esi-0x14bc8bd3]
  413a1f:	sbb    al,0x8a
  413a21:	loope  0x413a6e
  413a23:	loope  0x413a0d
  413a25:	jns    0x413a1d
  413a27:	add    edx,DWORD PTR [ebp-0x209d55f7]
  413a2d:	enter  0xfd24,0x67
  413a31:	icebp  
  413a32:	ss dec edi
  413a34:	not    ah
  413a36:	mov    ds:0xd649c81d,eax
  413a3b:	mov    bl,0x7d
  413a3d:	mov    ch,0x25
  413a3f:	jno    0x413a01
  413a41:	mov    ecx,0x56f5664
  413a46:	shr    DWORD PTR [edi+0x76973807],1
  413a4c:	xchg   esi,eax
  413a4d:	dec    eax
  413a4e:	into   
  413a4f:	cmp    eax,0x5a502f2
  413a54:	aaa    
  413a55:	ss dec ebp
  413a57:	repz and BYTE PTR [esp+ecx*8+0x2a],cl
  413a5c:	nop
  413a5d:	imul   edi,ebx,0x52
  413a60:	lods   eax,DWORD PTR ds:[esi]
  413a61:	cwde   
  413a62:	shl    BYTE PTR [edx],1
  413a64:	addr16 mov al,0xd
  413a67:	dec    ecx
  413a68:	jae    0x413a53
  413a6a:	cmp    dh,BYTE PTR [edx+0x35]
  413a6d:	push   esp
  413a6e:	jb     0x413acb
  413a70:	push   ds
  413a71:	aam    0xe
  413a73:	mov    eax,ds:0x935985eb
  413a78:	adc    BYTE PTR [ebx],cl
  413a7a:	lods   eax,DWORD PTR ds:[esi]
  413a7b:	js     0x413a21
  413a7d:	loopne 0x413af0
  413a7f:	push   ebp
  413a80:	add    al,0x43
  413a82:	push   edi
  413a83:	cmp    al,0x95
  413a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a86:	sbb    bh,BYTE PTR [ecx+eiz*2]
  413a89:	mov    bh,0x5
  413a8b:	dec    edx
  413a8c:	jbe    0x413ad7
  413a8e:	out    0xa4,eax
  413a90:	fld    QWORD PTR [ecx]
  413a92:	shl    BYTE PTR [edi+0x3fffcd09],cl
  413a98:	xor    al,0x5a
  413a9a:	xchg   ecx,eax
  413a9b:	inc    edx
  413a9c:	cmp    al,0xe1
  413a9e:	pop    ecx
  413a9f:	push   edx
  413aa0:	fimul  WORD PTR [esi+0x2]
  413aa3:	(bad)  
  413aa4:	push   edx
  413aa5:	add    eax,0x6c3f2c4a
  413aaa:	mov    ebp,DWORD PTR [esi-0x379140e0]
  413ab0:	jecxz  0x413a56
  413ab2:	adc    DWORD PTR [ebx-0x3f],esi
  413ab5:	push   0xffffffd8
  413ab7:	inc    ebp
  413ab8:	cwde   
  413ab9:	lea    ebp,[ecx+0x4040a9e0]
  413abf:	jae    0x413ae1
  413ac1:	leave  
  413ac2:	and    eax,0x39c4b6b6
  413ac7:	lahf   
  413ac8:	xor    eax,0x313a4ff7
  413acd:	fiadd  DWORD PTR [eax+0x75]
  413ad0:	push   esi
  413ad1:	fnstsw WORD PTR [edi-0x52]
  413ad4:	test   BYTE PTR [edi],ah
  413ad6:	lods   eax,DWORD PTR ds:[esi]
  413ad7:	xchg   edx,eax
  413ad8:	lods   eax,DWORD PTR ds:[esi]
  413ad9:	sbb    bl,BYTE PTR [ebp+0x2d]
  413adc:	cmp    ebp,0xe67bd970
  413ae2:	clc    
  413ae3:	stos   BYTE PTR es:[edi],al
  413ae4:	adc    BYTE PTR [edi+0x36],al
  413ae7:	mov    fs,WORD PTR [edi-0x1dd9daf9]
  413aed:	ret    
  413aee:	rol    DWORD PTR [esi-0x62],0x1c
  413af2:	bound  edx,QWORD PTR [edi+0x5e77129a]
  413af8:	inc    edi
  413af9:	loopne 0x413b2c
  413afb:	mov    ebx,0x3209607a
  413b00:	mov    esi,0x89919f06
  413b05:	push   ss
  413b06:	push   ss
  413b07:	cmp    eax,0xc8e27f80
  413b0c:	add    eax,eax
  413b0e:	jle    0x413aee
  413b10:	js     0x413b8c
  413b12:	pop    ebx
  413b13:	data16 adc BYTE PTR [esp+edx*8-0x46831a57],al
  413b1b:	jp     0x413b27
  413b1d:	sub    DWORD PTR [esi],0xd9e3a905
  413b23:	retf   
  413b24:	lea    ebx,[eax]
  413b26:	repnz out dx,eax
  413b28:	mov    edi,0x8e241216
  413b2d:	pop    eax
  413b2e:	jb     0x413b9c
  413b30:	mov    ds:0x3d3f77c5,al
  413b35:	lods   al,BYTE PTR ds:[esi]
  413b36:	add    ecx,DWORD PTR [ecx+esi*8-0x5d]
  413b3a:	mov    esi,0xcb928076
  413b3f:	adc    eax,0xe18ac20f
  413b44:	sbb    eax,0xa46ebbcc
  413b49:	push   esp
  413b4a:	or     bh,BYTE PTR [edx-0x4cc18c94]
  413b50:	imul   edx,DWORD PTR [edx],0xffffffbf
  413b53:	adc    eax,DWORD PTR [eax-0x3dbc55d2]
  413b59:	xor    BYTE PTR [edi+edx*8-0x3e95c0b3],bl
  413b60:	xchg   cl,dh
  413b62:	rcl    BYTE PTR [edx],0x9c
  413b65:	ins    DWORD PTR es:[edi],dx
  413b66:	in     al,0x8e
  413b68:	addr16 shl bl,0x79
  413b6c:	mov    ds:0xb0565cd4,al
  413b71:	inc    eax
  413b72:	xchg   esi,eax
  413b73:	xchg   ebx,eax
  413b74:	test   BYTE PTR [ebp-0x1e],dh
  413b77:	mov    ebx,DWORD PTR [ebx]
  413b79:	inc    esp
  413b7a:	jge    0x413b63
  413b7c:	fsubr  DWORD PTR [eax+edx*8+0x61]
  413b80:	sub    DWORD PTR [esi-0x7e],eax
  413b83:	int3   
  413b84:	sbb    al,0xde
  413b86:	mov    eax,0xec5cc208
  413b8b:	std    
  413b8c:	sub    DWORD PTR [edx],ecx
  413b8e:	xchg   esp,eax
  413b8f:	sbb    al,0x8d
  413b91:	pushf  
  413b92:	cmp    dh,dh
  413b94:	in     al,dx
  413b95:	mov    ch,0x9b
  413b97:	repnz mov eax,es
  413b9a:	lock int3 
  413b9c:	(bad)  
  413b9d:	in     al,dx
  413b9e:	repz jbe 0x413bf9
  413ba1:	dec    esp
  413ba2:	lahf   
  413ba3:	sub    ecx,ebp
  413ba5:	jl     0x413b2f
  413ba7:	pop    ss
  413ba8:	adc    ebx,esi
  413baa:	xchg   ecx,eax
  413bab:	xor    bh,al
  413bad:	addr16 mov ds:0xf84f,al
  413bb1:	mov    ds:0x778423f8,eax
  413bb6:	hlt    
  413bb7:	jmp    0x413b64
  413bb9:	call   0x2f76:0xd0726af6
  413bc0:	cwde   
  413bc1:	inc    ebp
  413bc2:	sub    ch,BYTE PTR [ecx+0x7a4df8da]
  413bc8:	lea    edx,[edi-0x4]
  413bcb:	mov    esp,0xea73e193
  413bd0:	(bad)  
  413bd1:	popf   
  413bd2:	out    0xfb,eax
  413bd4:	dec    ecx
  413bd5:	scas   al,BYTE PTR es:[edi]
  413bd6:	push   esp
  413bd7:	call   0xebe6:0x27c194b1
  413bde:	inc    BYTE PTR [eax-0x2dc5a170]
  413be4:	pop    ds
  413be5:	ins    BYTE PTR es:[edi],dx
  413be6:	outs   dx,DWORD PTR ds:[esi]
  413be7:	xor    dh,ch
  413be9:	and    al,0xcb
  413beb:	outs   dx,BYTE PTR ds:[esi]
  413bec:	in     al,dx
  413bed:	imul   esi,DWORD PTR [eax+ecx*1+0x28a693d8],0xffffff87
  413bf5:	ds cmp eax,0xa7afcfee
  413bfb:	(bad)  
  413bfc:	mov    ds:0xe10708ba,al
  413c01:	push   ebp
  413c02:	or     DWORD PTR [edx],0x95a87981
  413c08:	pop    eax
  413c09:	hlt    
  413c0a:	sbb    BYTE PTR [edx-0x27],ch
  413c0d:	or     ebx,DWORD PTR [eax]
  413c0f:	mov    DWORD PTR [esi-0x30],edi
  413c12:	hlt    
  413c13:	test   DWORD PTR ss:[eax+0xbaa7773],0xb2b12bf9
  413c1e:	ficom  WORD PTR [ecx+0x543487bf]
  413c24:	or     ebx,DWORD PTR [edx+ecx*8]
  413c27:	stc    
  413c28:	sar    edi,0xf5
  413c2b:	add    ecx,DWORD PTR [edx]
  413c2d:	add    DWORD PTR [ecx-0x4b],ebp
  413c30:	mov    dl,0x63
  413c32:	daa    
  413c33:	imul   edi,DWORD PTR [ebx-0x18abe159],0x3804040f
  413c3d:	adc    edi,DWORD PTR [ebp+eiz*8-0x1c3e6dec]
  413c44:	add    ebx,edx
  413c46:	mov    edx,0xf598ee6e
  413c4b:	cwde   
  413c4c:	lock add al,0xdd
  413c4f:	outs   dx,BYTE PTR ds:[esi]
  413c50:	jbe    0x413bf1
  413c52:	mov    ecx,0x11149ce
  413c57:	jae    0x413cba
  413c59:	ss push 0x52
  413c5c:	mov    ebp,0x16e349cb
  413c61:	(bad)  
  413c62:	hlt    
  413c63:	in     al,0x30
  413c65:	fimul  DWORD PTR [esp+ebp*1+0x9]
  413c6a:	mov    al,ds:0x3bb91951
  413c6f:	(bad)  
  413c70:	loopne 0x413c43
  413c72:	arpl   WORD PTR [esp+eax*4-0x5dcd953d],cx
  413c79:	sbb    al,BYTE PTR [ecx+0x6d880af0]
  413c7f:	stc    
  413c80:	inc    ebx
  413c81:	mov    ?,WORD PTR [edx+0x3]
  413c84:	mov    ebx,0xc0d5e854
  413c89:	(bad)  
  413c8a:	ss pushf 
  413c8c:	dec    ebx
  413c8d:	lock cmp eax,0x1df1dec0
  413c93:	add    eax,0x2ce54857
  413c98:	push   edx
  413c99:	push   eax
  413c9a:	iret   
  413c9b:	leave  
  413c9c:	(bad)  
  413c9d:	leave  
  413c9e:	cmp    bh,dh
  413ca0:	cwde   
  413ca1:	shl    ecx,1
  413ca3:	jo     0x413ce4
  413ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ca6:	pextrw ecx,(bad),0xc5
  413ca8:	mov    es,WORD PTR [eax+eax*8]
  413cab:	dec    ebx
  413cac:	in     al,0x48
  413cae:	aam    0x1a
  413cb0:	call   0x3852:0xdfe50593
  413cb7:	scas   eax,DWORD PTR es:[edi]
  413cb8:	(bad)  [edx]
  413cba:	sub    DWORD PTR [edi+edi*8],eax
  413cbd:	int3   
  413cbe:	or     eax,0xb75c267c
  413cc3:	xor    eax,0xb4cb5d56
  413cc8:	jbe    0x413d24
  413cca:	and    BYTE PTR [esi+0x74],ch
  413ccd:	inc    ebx
  413cce:	(bad)  
  413cd0:	scas   al,BYTE PTR es:[edi]
  413cd1:	mov    fs,WORD PTR [ebx+0x37]
  413cd4:	pop    esi
  413cd5:	das    
  413cd6:	cmp    BYTE PTR [edi+0x5a],0x37
  413cda:	fyl2x  
  413cdc:	xchg   edx,eax
  413cdd:	retf   0x6c9e
  413ce0:	xchg   edx,eax
  413ce1:	std    
  413ce2:	sub    al,0x2e
  413ce4:	je     0x413cc6
  413ce6:	add    DWORD PTR [edx],ebp
  413ce8:	push   esp
  413ce9:	add    eax,esi
  413ceb:	jg     0x413d3c
  413ced:	ror    BYTE PTR [esi-0x1734f71e],cl
  413cf3:	xchg   ebx,eax
  413cf4:	push   es
  413cf5:	pop    edx
  413cf6:	js     0x413d53
  413cf8:	xor    DWORD PTR [ebp-0xd553],ecx
  413cfe:	mov    bh,0x28
  413d00:	adc    al,0x39
  413d02:	fld1   
  413d04:	jae    0x413d35
  413d06:	push   ss
  413d07:	aaa    
  413d08:	outs   dx,DWORD PTR ds:[esi]
  413d09:	out    dx,al
  413d0a:	add    BYTE PTR [eax],0x6e
  413d0d:	leave  
  413d0e:	sbb    al,0xa7
  413d10:	jg     0x413cf0
  413d12:	sub    edi,DWORD PTR [esi-0x3794c8fe]
  413d18:	sti    
  413d19:	mov    esi,0xb9e19266
  413d1e:	push   ecx
  413d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d20:	push   eax
  413d21:	mov    ch,0xdb
  413d23:	mov    WORD PTR [ebx],es
  413d25:	out    dx,al
  413d26:	aam    0x1e
  413d28:	pop    esi
  413d29:	dec    eax
  413d2a:	jnp    0x413d17
  413d2c:	popf   
  413d2d:	(bad)  
  413d2e:	nop
  413d2f:	and    BYTE PTR [esi+0x47],cl
  413d32:	iret   
  413d33:	(bad)  
  413d34:	lock jmp 0x74c0:0x1d204d92
  413d3c:	mov    ah,0x64
  413d3e:	imul   edi,DWORD PTR [ebx],0x29720a96
  413d44:	sbb    edx,DWORD PTR [eax+0x557ef769]
  413d4a:	pop    edx
  413d4b:	shl    BYTE PTR [ebp+0x1a9edb6e],0x46
  413d52:	pop    ebx
  413d53:	mov    bl,0x5f
  413d55:	push   ds
  413d56:	fsubr  DWORD PTR [ecx+0x5708fade]
  413d5c:	pusha  
  413d5d:	(bad)  
  413d5e:	test   al,0x11
  413d60:	pop    eax
  413d61:	ja     0x413d37
  413d63:	nop
  413d64:	jno    0x413d9e
  413d66:	fwait
  413d67:	xor    ecx,DWORD PTR [eax+0xf]
  413d6a:	imul   eax,DWORD PTR ds:0x751893d8,0xffffffe3
  413d71:	mov    ah,0x4b
  413d73:	lea    eax,ds:0x2e7142c6
  413d79:	ds mov bl,0x39
  413d7c:	push   ecx
  413d7d:	pop    ds
  413d7e:	xor    DWORD PTR [edx+esi*8+0x70f8c3ee],esi
  413d85:	shl    DWORD PTR [ebx+0x3cf800c4],0xc0
  413d8c:	jno    0x413df1
  413d8e:	sub    dh,dl
  413d90:	imul   DWORD PTR [ecx]
  413d92:	mov    ecx,0x2a0baafb
  413d97:	aaa    
  413d98:	lock inc esp
  413d9a:	aaa    
  413d9b:	xchg   ecx,eax
  413d9c:	mov    eax,ds:0xae80653f
  413da1:	or     eax,0x762b8975
  413da6:	ret    
  413da7:	mov    ah,0x1c
  413da9:	push   esi
  413daa:	adc    eax,0x5cd3960f
  413daf:	mov    edi,0xa10bed30
  413db4:	fisttp DWORD PTR [edi]
  413db6:	mov    dh,0x48
  413db8:	jo     0x413d47
  413dba:	rol    BYTE PTR ds:0x2415776d,1
  413dc0:	or     dl,BYTE PTR ss:[ebp+0x77554748]
  413dc7:	mov    dh,ch
  413dc9:	rcr    BYTE PTR [eax+0x726ad76a],1
  413dcf:	jb     0x413d63
  413dd1:	xchg   edx,eax
  413dd2:	push   ebx
  413dd3:	mov    DWORD PTR [eax],0x21b5dc83
  413dd9:	fst    QWORD PTR [ebp-0x62]
  413ddc:	fistp  QWORD PTR [edx]
  413dde:	mov    dh,0x7e
  413de0:	sub    al,0x19
  413de2:	xchg   DWORD PTR [edx+0x16a61ef9],ebp
  413de8:	sbb    ah,BYTE PTR [edi]
  413dea:	jae    0x413de5
  413dec:	ror    bl,1
  413dee:	sub    BYTE PTR [edx+0x5a653f73],bl
  413df4:	fisttp DWORD PTR [ebx]
  413df6:	inc    esp
  413df7:	stc    
  413df8:	mov    cl,0x72
  413dfa:	sahf   
  413dfb:	cdq    
  413dfc:	jge    0x413e62
  413dfe:	jg     0x413e25
  413e00:	outs   dx,DWORD PTR ds:[esi]
  413e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e02:	jecxz  0x413d9b
  413e04:	xchg   ebx,eax
  413e05:	dec    ebx
  413e06:	xor    eax,0xf80b2d2a
  413e0b:	xchg   ebp,eax
  413e0c:	(bad)  
  413e0d:	xchg   edi,eax
  413e0e:	mov    ds:0xc6c8ed96,al
  413e13:	push   esi
  413e14:	test   eax,0x4cf3f9ad
  413e19:	inc    ebp
  413e1a:	pop    ebp
  413e1b:	test   DWORD PTR [eax-0xf],eax
  413e1e:	inc    eax
  413e1f:	data16 add dl,BYTE PTR [edx-0x66ed6130]
  413e26:	xlat   BYTE PTR ds:[ebx]
  413e27:	mov    ecx,0x527618a9
  413e2c:	push   esp
  413e2d:	jb     0x413e2a
  413e2f:	sub    eax,0x3d6ec0fc
  413e34:	clc    
  413e35:	xor    eax,0x22f2bdba
  413e3a:	push   esi
  413e3b:	ja     0x413e76
  413e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e3e:	lock pop es
  413e40:	pop    eax
  413e41:	xchg   ebp,eax
  413e42:	int3   
  413e43:	jne    0x413e25
  413e45:	inc    eax
  413e46:	js     0x413e64
  413e48:	fwait
  413e49:	push   0xb0c9badc
  413e4e:	jle    0x413ddb
  413e50:	repnz pop edx
  413e52:	imul   BYTE PTR [edi+edx*2]
  413e55:	scas   eax,DWORD PTR es:[edi]
  413e56:	dec    edx
  413e57:	jmp    0x17364a24
  413e5c:	imul   edi,DWORD PTR [edx-0x46],0xfffffff5
  413e60:	call   0xdbf0b2c6
  413e65:	aad    0x3b
  413e67:	jmp    FWORD PTR [ebx]
  413e69:	shl    dl,1
  413e6b:	push   ds
  413e6c:	retf   
  413e6d:	cwde   
  413e6e:	inc    edi
  413e6f:	sub    eax,0xc19a0381
  413e74:	dec    eax
  413e75:	les    eax,FWORD PTR [edi+0x6bd9ef4c]
  413e7b:	add    al,0x9c
  413e7d:	xchg   edx,eax
  413e7e:	fcmovu st,st(7)
  413e80:	and    ch,BYTE PTR [ebx+0x3967e8a4]
  413e86:	xchg   edi,eax
  413e87:	xchg   ebp,eax
  413e88:	xchg   esp,eax
  413e89:	xor    ecx,DWORD PTR [edi-0x73dd39c2]
  413e8f:	loope  0x413e97
  413e91:	fldcw  WORD PTR [edi-0x6747a115]
  413e97:	pop    esi
  413e98:	rol    ebp,0x54
  413e9b:	pop    ebx
  413e9c:	inc    ebp
  413e9d:	shl    DWORD PTR [edi],1
  413e9f:	mov    es,WORD PTR [ebx]
  413ea1:	imul   ecx,esp,0xffffff8b
  413ea4:	inc    eax
  413ea5:	and    DWORD PTR [edi+0x75],edi
  413ea8:	xor    edi,DWORD PTR [edi+edx*4-0x29d47932]
  413eaf:	sahf   
  413eb0:	std    
  413eb1:	fcmovnu st,st(0)
  413eb3:	es inc ecx
  413eb5:	dec    edx
  413eb6:	inc    edi
  413eb7:	jmp    0x413ed6
  413eb9:	mov    esi,0x17734609
  413ebe:	repz sbb ah,ch
  413ec1:	xor    al,0x30
  413ec3:	pop    ds
  413ec4:	into   
  413ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ec6:	pusha  
  413ec7:	call   0xb135:0x7347
  413ecd:	jl     0x413f3f
  413ecf:	dec    ebx
  413ed0:	dec    ebx
  413ed1:	cwde   
  413ed2:	inc    esp
  413ed3:	imul   ebx,edi,0xaee56e1b
  413ed9:	or     al,dh
  413edb:	jge    0x413ef3
  413edd:	jg     0x413f47
  413edf:	ret    0x1c43
  413ee2:	ja     0x413ee4
  413ee4:	cmp    ecx,edi
  413ee6:	xchg   WORD PTR [edx+edx*8-0x310a9cf9],ax
  413eee:	(bad)  
  413eef:	stc    
  413ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ef2:	pop    esp
  413ef3:	jo     0x413f34
  413ef5:	mov    bl,0x23
  413ef7:	(bad)  
  413ef8:	(bad)  
  413efa:	jns    0x413f6b
  413efc:	adc    al,0xea
  413efe:	sar    DWORD PTR [ebp+0x25],1
  413f01:	xchg   esp,eax
  413f02:	scas   eax,DWORD PTR es:[edi]
  413f03:	repz dec esp
  413f05:	(bad)  
  413f06:	push   ebx
  413f07:	dec    edx
  413f08:	in     al,0xb1
  413f0a:	xor    dl,al
  413f0c:	fidiv  DWORD PTR [esi]
  413f0e:	pop    eax
  413f0f:	pop    es
  413f10:	cmp    BYTE PTR [ecx-0x566414af],0xa3
  413f17:	aad    0x4
  413f19:	inc    ebp
  413f1a:	xchg   ebp,eax
  413f1b:	push   ebp
  413f1c:	jmp    0xda7b:0x7ea00c52
  413f23:	push   ecx
  413f24:	out    dx,eax
  413f25:	inc    eax
  413f26:	icebp  
  413f27:	inc    esp
  413f28:	mov    edx,0x30c084f9
  413f2d:	dec    ebx
  413f2e:	jae    0x413f32
  413f30:	jge    0x413f4d
  413f32:	push   edx
  413f33:	test   BYTE PTR [ebx-0xf],dh
  413f36:	mov    al,0x8c
  413f38:	dec    edx
  413f39:	sbb    al,0x80
  413f3b:	jmp    0x9951:0x4488c302
  413f42:	jbe    0x413f6c
  413f44:	aas    
  413f45:	test   DWORD PTR [esi+ecx*1+0x2e],esi
  413f49:	fs hlt 
  413f4b:	add    DWORD PTR [esi-0x29f00b02],edi
  413f51:	jmp    0x1a8f:0x4973c0f6
  413f58:	outs   dx,BYTE PTR ds:[esi]
  413f59:	lds    esi,FWORD PTR [esi+0x6f]
  413f5c:	or     esi,esi
  413f5e:	das    
  413f5f:	iret   
  413f60:	mov    fs:0xeaf2cef2,al
  413f66:	rcl    DWORD PTR [ebp+ecx*4+0x25],cl
  413f6a:	push   ss
  413f6b:	add    DWORD PTR [ecx-0xc0fe1e0],0xa843f7b3
  413f75:	xchg   BYTE PTR [ecx+0x49],cl
  413f78:	jnp    0x413f39
  413f7a:	sub    al,0x3c
  413f7c:	xor    DWORD PTR [edx-0x7c],ebp
  413f7f:	into   
  413f80:	pop    ds
  413f81:	push   0x12
  413f83:	jmp    0x7ce3:0x9d289250
  413f8a:	jns    0x413f97
  413f8c:	(bad)  
  413f8d:	fdivr  DWORD PTR [ebp-0x51cf4fb5]
  413f93:	sbb    dl,bh
  413f95:	arpl   WORD PTR [ecx+0x6a],sp
  413f98:	popf   
  413f99:	aaa    
  413f9a:	jns    0x413f93
  413f9c:	loopne 0x414015
  413f9e:	fstp   TBYTE PTR [edi]
  413fa0:	push   ebx
  413fa1:	xor    al,0x82
  413fa3:	xor    BYTE PTR [edx],0xb0
  413fa6:	cmp    DWORD PTR [ebp-0x6a8e916f],ebp
  413fac:	cmc    
  413fad:	mov    edx,0x3e75087d
  413fb2:	jnp    0x413f45
  413fb4:	push   ebx
  413fb5:	retf   0x1782
  413fb8:	inc    edx
  413fb9:	lods   al,BYTE PTR ds:[esi]
  413fba:	inc    eax
  413fbb:	(bad)  
  413fbc:	in     eax,dx
  413fbd:	jmp    0xdc28d14c
  413fc2:	(bad)
  413fc7:	sub    al,BYTE PTR [edi+0x50]
  413fca:	(bad)  
  413fcb:	push   0x39
  413fcd:	imul   esi,esi,0xffffffd5
  413fd0:	sbb    ebx,DWORD PTR [esi+0x55459346]
  413fd6:	or     ebp,edx
  413fd8:	push   edx
  413fd9:	pop    ebp
  413fda:	push   edx
  413fdb:	inc    BYTE PTR [esi]
  413fdd:	pop    esi
  413fde:	xor    cl,BYTE PTR [ebx]
  413fe0:	mov    WORD PTR [edi+0x3],ds
  413fe3:	and    al,0x46
  413fe5:	ret    
  413fe6:	fs popa 
  413fe8:	sub    DWORD PTR [ebp-0x22],esi
  413feb:	mov    bh,0xdb
  413fed:	fadd   DWORD PTR [ebx-0x13]
  413ff0:	mov    edx,0x1289272d
  413ff5:	sbb    dh,BYTE PTR [ebp-0x1f8750c6]
  413ffb:	mul    BYTE PTR [ecx-0x78]
  413ffe:	add    eax,0xb0625a98
  414003:	test   DWORD PTR [esi],esi
  414005:	fnsetpm(287 only) 
  414007:	ret    0xc05a
  41400a:	lods   al,BYTE PTR ds:[esi]
  41400b:	mov    edi,0xa51c3387
  414010:	les    ebp,FWORD PTR [eax]
  414012:	loop   0x414020
  414014:	dec    edi
  414015:	out    dx,eax
  414016:	pop    ebx
  414017:	call   0x58a120ca
  41401c:	push   es
  41401d:	xor    al,0x44
  41401f:	pop    eax
  414020:	(bad)  
  414021:	and    esi,DWORD PTR [ecx]
  414023:	cdq    
  414024:	mov    eax,ds:0x44814aa6
  414029:	stc    
  41402a:	cli    
  41402b:	adc    eax,0xfffb9e95
  414030:	inc    edi
  414031:	mov    dh,0xc7
  414033:	sti    
  414034:	push   ebx
  414035:	mov    ecx,0xda418750
  41403a:	adc    esi,DWORD PTR [edx-0x5bf83dbf]
  414040:	jecxz  0x414099
  414042:	iret   
  414043:	into   
  414044:	mov    ch,0x72
  414046:	mov    esp,0x1975fc4a
  41404b:	(bad)  
  41404c:	aas    
  41404d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41404e:	adc    edx,esp
  414050:	aas    
  414051:	stos   DWORD PTR es:[edi],eax
  414052:	std    
  414053:	pop    ebx
  414054:	adc    ecx,DWORD PTR [edi+eax*1-0x5e]
  414058:	add    bl,BYTE PTR [ebp+edi*1-0x74]
  41405c:	retf   0xe987
  41405f:	scas   al,BYTE PTR es:[edi]
  414060:	shr    DWORD PTR [edx+edi*4+0x2178990f],cl
  414067:	sub    al,0xb3
  414069:	jbe    0x4140d9
  41406b:	sub    esp,DWORD PTR [edx+0x29]
  41406e:	cmp    eax,0x4d5edade
  414073:	and    bh,bh
  414075:	retf   0xf04a
  414078:	mov    esp,0xd8c6689a
  41407d:	das    
  41407e:	inc    ebx
  41407f:	mov    ebx,0x3d2e1258
  414084:	push   esi
  414085:	gs leave 
  414087:	clc    
  414088:	pop    ecx
  414089:	scas   al,BYTE PTR es:[edi]
  41408a:	xchg   esp,eax
  41408b:	xor    BYTE PTR [edx-0x1f],dl
  41408e:	jns    0x414093
  414090:	std    
  414091:	in     al,0xee
  414093:	pop    edi
  414094:	sub    cl,al
  414096:	adc    edx,DWORD PTR [ebx-0x4]
  414099:	in     al,dx
  41409a:	and    eax,esp
  41409c:	in     al,0xe7
  41409e:	inc    edx
  41409f:	lods   al,BYTE PTR ds:[esi]
  4140a0:	into   
  4140a1:	push   ss
  4140a2:	mov    bl,0x4c
  4140a4:	scas   al,BYTE PTR es:[edi]
  4140a5:	mov    edx,0x7ff22ef8
  4140aa:	ds (bad) 
  4140ad:	xor    DWORD PTR [edx],edx
  4140af:	sbb    ebp,DWORD PTR [edx]
  4140b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140b2:	push   0xffffffc4
  4140b4:	xchg   DWORD PTR [edx-0x10],esi
  4140b7:	add    cl,bl
  4140b9:	cld    
  4140ba:	fmul   st,st(3)
  4140bc:	bnd jp 0x41407b
  4140bf:	and    al,0xb2
  4140c1:	mov    al,0xf
  4140c3:	loope  0x414085
  4140c5:	add    al,0x93
  4140c7:	(bad)  
  4140c8:	sti    
  4140c9:	clc    
  4140ca:	fsubr  QWORD PTR [eax]
  4140cc:	inc    edx
  4140cd:	es scas al,BYTE PTR es:[edi]
  4140cf:	ins    BYTE PTR es:[edi],dx
  4140d0:	fstp   QWORD PTR [edx-0x6a]
  4140d3:	imul   ebp,DWORD PTR [ebx],0x796dd2af
  4140d9:	sbb    al,0xf6
  4140db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140dc:	jecxz  0x41408e
  4140de:	adc    DWORD PTR [ebx-0x2fe41b05],eax
  4140e4:	add    al,0x32
  4140e6:	sub    BYTE PTR [esi],0xca
  4140e9:	jmp    0xa49f81d0
  4140ee:	dec    esi
  4140ef:	jle    0x4140b8
  4140f1:	sub    al,0x57
  4140f3:	xlat   BYTE PTR ds:[ebx]
  4140f4:	mov    ebx,0xe38d69e5
  4140f9:	(bad)  
  4140fa:	(bad)  
  4140fb:	enter  0xd204,0xe3
  4140ff:	(bad)  
  414100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414101:	lods   eax,DWORD PTR ds:[esi]
  414102:	retf   0xb30e
  414105:	pushf  
  414106:	mov    ebx,0x991de1c4
  41410b:	jbe    0x4140b1
  41410d:	and    ecx,DWORD PTR [eax+ebx*8]
  414110:	cdq    
  414111:	addr16 jmp 0xc0be2792
  414117:	ins    DWORD PTR es:[edi],dx
  414118:	sbb    eax,0xbd9b130f
  41411d:	xchg   ebp,eax
  41411e:	jmp    0xf3a4dd08
  414123:	cli    
  414124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414125:	rol    BYTE PTR ds:0xc7203172,cl
  41412b:	sbb    edx,ecx
  41412d:	pop    edi
  41412e:	push   cs
  41412f:	xchg   DWORD PTR [esi+0x10],esp
  414132:	mov    esi,0x801a5256
  414137:	mov    ds:0x63679418,al
  41413c:	push   edx
  41413d:	aas    
  41413e:	push   0x96d458dd
  414143:	popa   
  414144:	imul   esp
  414146:	out    0xf1,al
  414148:	js     0x4141bf
  41414a:	sahf   
  41414b:	out    dx,al
  41414c:	push   esp
  41414d:	push   ecx
  41414e:	popf   
  41414f:	jnp    0x4140e5
  414151:	add    dh,BYTE PTR [ebp+0x48]
  414154:	sar    dh,cl
  414156:	lods   al,BYTE PTR ds:[esi]
  414157:	mov    dh,0x76
  414159:	pop    esi
  41415a:	and    eax,ebp
  41415c:	dec    ebp
  41415d:	inc    ebp
  41415e:	ja     0x41417f
  414160:	(bad)  
  414161:	jmp    0xe7d8:0xcdd52f20
  414168:	inc    ecx
  414169:	mov    ds:0x1a154b31,eax
  41416e:	rcr    BYTE PTR [esi-0x4aad68f6],0x29
  414175:	add    bl,BYTE PTR [ecx]
  414177:	sub    al,0xde
  414179:	inc    ebx
  41417a:	sbb    al,0x9a
  41417c:	xchg   esp,eax
  41417d:	cld    
  41417e:	add    eax,0xd3a14538
  414183:	jl     0x414179
  414185:	lahf   
  414186:	ret    
  414187:	loope  0x4141b8
  414189:	inc    ebx
  41418a:	ret    0x8333
  41418d:	popf   
  41418e:	popa   
  41418f:	jecxz  0x414207
  414191:	bound  ecx,QWORD PTR [edx]
  414193:	(bad)  
  414194:	and    esi,DWORD PTR [esi+edi*2+0x52]
  414198:	mov    ch,0x89
  41419a:	mov    dl,bh
  41419c:	adc    BYTE PTR [ebp-0x47b0e62d],dh
  4141a2:	xlat   BYTE PTR ds:[ebx]
  4141a3:	pop    es
  4141a4:	xchg   esi,eax
  4141a5:	xor    dl,dl
  4141a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141a8:	popf   
  4141a9:	gs icebp 
  4141ab:	out    0xc1,eax
  4141ad:	out    0x49,eax
  4141af:	xlat   BYTE PTR fs:[ebx]
  4141b1:	ficomp WORD PTR [ebx-0x37]
  4141b4:	sbb    DWORD PTR [esi],edx
  4141b6:	sbb    al,0x2a
  4141b8:	jecxz  0x4141f1
  4141ba:	imul   esp,DWORD PTR [edi],0x6d
  4141bd:	jae    0x4141e9
  4141bf:	jl     0x4141d8
  4141c1:	js     0x414207
  4141c3:	std    
  4141c4:	add    ch,BYTE PTR [ecx-0x2a3f6f2f]
  4141ca:	sahf   
  4141cb:	popf   
  4141cc:	nop
  4141cd:	imul   edi,eax,0xbd56e21e
  4141d3:	(bad)  
  4141d4:	fsub   QWORD PTR [edx+0xe]
  4141d7:	adc    BYTE PTR [esi+0x7942a44f],al
  4141dd:	out    0xac,al
  4141df:	push   cs
  4141e0:	sub    cl,BYTE PTR [eax]
  4141e2:	add    DWORD PTR [edi+0x5],esp
  4141e5:	mov    BYTE PTR [ecx],dh
  4141e7:	cmc    
  4141e8:	push   esp
  4141e9:	xor    al,0x29
  4141eb:	and    esp,eax
  4141ed:	pop    ss
  4141ee:	fcomp  DWORD PTR [ecx]
  4141f0:	lahf   
  4141f1:	cmp    ch,BYTE PTR [ecx+0x58]
  4141f4:	mov    DWORD PTR [esi-0x4f091e44],esi
  4141fa:	xchg   edi,eax
  4141fb:	popf   
  4141fc:	retf   0x5263
  4141ff:	cmp    DWORD PTR [esi+0x9],0xe67a434d
  414206:	lea    ecx,[ebx+0x14b09a75]
  41420c:	int    0x32
  41420e:	aam    0x86
  414210:	mov    edi,0xdca26ed4
  414215:	xor    al,0x7d
  414217:	js     0x4141e7
  414219:	rcr    DWORD PTR [edx+0x6e],1
  41421c:	adc    al,0x2a
  41421e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41421f:	and    ebp,DWORD PTR [eax-0x5c]
  414222:	jo     0x41428c
  414224:	call   0x228:0x23e23069
  41422b:	push   0xdcd50b17
  414230:	mov    gs,WORD PTR [ebp+0x42fa3cbd]
  414236:	(bad)  
  414237:	push   ecx
  414238:	in     eax,dx
  414239:	fcom   st(0)
  41423b:	mov    bh,0x19
  41423d:	xbegin 0x17b9552d
  414243:	inc    esp
  414244:	mov    WORD PTR [ecx],es
  414246:	das    
  414247:	gs loop 0x414214
  41424a:	dec    esp
  41424b:	int3   
  41424c:	add    DWORD PTR [eax+0x4f],edx
  41424f:	jae    0x4142c7
  414251:	shl    esp,0x8e
  414254:	jmp    0x4142b7
  414256:	jnp    0x4142d5
  414258:	jnp    0x41424f
  41425a:	lock and al,0x44
  41425d:	shl    BYTE PTR [edi],1
  41425f:	(bad)
  414263:	mov    esi,ebp
  414265:	inc    ecx
  414266:	sbb    DWORD PTR [edx+0x7f],ebx
  414269:	cmp    esp,DWORD PTR [ebx-0x3a]
  41426c:	leave  
  41426d:	js     0x414232
  41426f:	test   DWORD PTR [ebp+0x66],esp
  414272:	push   edx
  414273:	mov    bl,0x29
  414275:	mov    edi,0x5aa46fe6
  41427a:	add    DWORD PTR [edx+0x442a7415],ecx
  414280:	ss scas al,BYTE PTR es:[edi]
  414282:	sub    ah,BYTE PTR [ecx-0x3b]
  414285:	sub    al,0x57
  414287:	mov    ah,cl
  414289:	lock gs sbb eax,0x85b4254e
  414290:	push   edi
  414291:	fstp   QWORD PTR [eax-0x3ad56007]
  414297:	inc    eax
  414298:	or     bh,BYTE PTR [ecx-0x1ce54df5]
  41429e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41429f:	fmul   st,st(4)
  4142a1:	xchg   ebx,eax
  4142a2:	mov    bl,BYTE PTR [ecx+eax*1]
  4142a5:	dec    esi
  4142a6:	fs cmp bh,ah
  4142a9:	idiv   DWORD PTR [eax]
  4142ab:	push   ds
  4142ac:	and    edx,DWORD PTR [edi+0x20]
  4142af:	or     eax,eax
  4142b1:	mov    ds:0x8f095f76,eax
  4142b6:	das    
  4142b7:	aaa    
  4142b8:	cdq    
  4142b9:	mov    ecx,0xf0285004
  4142be:	stos   DWORD PTR es:[edi],eax
  4142bf:	sub    ebp,DWORD PTR [esi]
  4142c1:	lock loopne 0x41429f
  4142c4:	ja     0x414333
  4142c6:	ret    
  4142c7:	jge    0x41429f
  4142c9:	xchg   esp,ebp
  4142cb:	jo     0x41425b
  4142cd:	std    
  4142ce:	xchg   BYTE PTR [ebp+0x289dcae5],dh
  4142d4:	xor    al,0xde
  4142d6:	pop    ebp
  4142d7:	scas   al,BYTE PTR es:[edi]
  4142d8:	mov    ds:0x1f2cbd05,al
  4142dd:	(bad)
  4142e0:	xchg   ebp,eax
  4142e1:	cmovl  eax,DWORD PTR [ebp+0x7832ac19]
  4142e8:	sbb    BYTE PTR [ebx+0x2f],0x9e
  4142ec:	(bad)  
  4142ed:	outs   dx,DWORD PTR ds:[esi]
  4142ee:	jo     0x414340
  4142f0:	cmp    al,0x74
  4142f2:	jl     0x414355
  4142f4:	pop    ss
  4142f5:	sub    eax,0xe7e691cf
  4142fa:	fimul  DWORD PTR [edx+eax*2+0x11d7f0d7]
  414301:	into   
  414302:	xor    esp,DWORD PTR [ebp+0x4053d695]
  414308:	add    esp,DWORD PTR [esi]
  41430a:	aad    0xe0
  41430c:	add    eax,0x24113ead
  414311:	lock jp 0x4142fe
  414314:	inc    esi
  414315:	sub    DWORD PTR [ecx+0x61747360],esp
  41431b:	jecxz  0x4142b5
  41431d:	jmp    0x41430a
  41431f:	cs inc esi
  414321:	cdq    
  414322:	pop    edx
  414323:	popf   
  414324:	sar    BYTE PTR [eax+0x4c9c3cc0],0xf1
  41432b:	out    dx,eax
  41432c:	and    cl,BYTE PTR [ebx-0x44]
  41432f:	cmp    al,bl
  414331:	dec    edi
  414332:	jle    0x4142e4
  414334:	dec    eax
  414335:	push   eax
  414336:	adc    eax,0x25f3f8ff
  41433b:	xor    BYTE PTR ds:[edi+0x404ab57],0xb1
  414343:	leave  
  414344:	test   BYTE PTR [ebp+0x517d5994],dl
  41434a:	test   DWORD PTR [esi+0x5d],0xf47ff4ee
  414351:	mov    ds,WORD PTR [ecx]
  414353:	retf   0xefd1
  414356:	std    
  414357:	xor    DWORD PTR [ebp-0x8],0xf6e5ca79
  41435e:	daa    
  41435f:	pushf  
  414360:	mov    edi,0x92ef89f0
  414365:	(bad)  
  414366:	push   cs
  414367:	mov    ebp,0xc2d41331
  41436c:	jns    0x414311
  41436e:	adc    al,0x10
  414370:	arpl   bx,di
  414372:	xor    ecx,DWORD PTR [ebx]
  414374:	push   ecx
  414375:	xor    DWORD PTR ds:[edx],ebp
  414378:	in     eax,dx
  414379:	ins    DWORD PTR es:[edi],dx
  41437a:	jmp    0xcd1b503b
  41437f:	daa    
  414380:	neg    BYTE PTR [edx-0x631c0439]
  414386:	mov    ebx,0xfdc8db72
  41438b:	outs   dx,DWORD PTR ds:[esi]
  41438c:	pop    ebp
  41438d:	lds    ebx,FWORD PTR [edx+edi*4]
  414390:	push   es
  414391:	in     al,dx
  414392:	out    0x41,al
  414394:	out    dx,eax
  414395:	mov    esi,edi
  414397:	push   esp
  414398:	lods   al,BYTE PTR ds:[esi]
  414399:	fadd   st(0),st
  41439b:	push   0xffffff90
  41439d:	jmp    0x35692d80
  4143a2:	test   DWORD PTR [esi],ebx
  4143a4:	jne    0x41439d
  4143a6:	sbb    eax,0xb70dbd70
  4143ab:	test   al,0xc0
  4143ad:	xor    al,cl
  4143af:	sub    al,0x17
  4143b1:	test   eax,0x23f58aba
  4143b6:	mov    dl,0xc9
  4143b8:	(bad)  
  4143b9:	xchg   ebx,eax
  4143ba:	push   ebp
  4143bb:	inc    ebx
  4143bc:	mov    bl,0x95
  4143be:	and    DWORD PTR [ebx+eiz*4-0x4c],esp
  4143c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c3:	push   cs
  4143c4:	hlt    
  4143c5:	sbb    al,0x84
  4143c7:	popf   
  4143c8:	scas   al,BYTE PTR es:[edi]
  4143c9:	out    0x6,eax
  4143cb:	jmp    0xae6b4155
  4143d0:	jae    0x4143eb
  4143d2:	adc    eax,edi
  4143d4:	mov    ah,0x87
  4143d6:	xchg   ebx,eax
  4143d7:	ret    0xc043
  4143da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143db:	ret    
  4143dc:	aas    
  4143dd:	jmp    0x99a97804
  4143e2:	lahf   
  4143e3:	test   DWORD PTR [ecx-0x1e],esp
  4143e6:	mov    ah,0x68
  4143e8:	adc    BYTE PTR [edx-0x7e],dh
  4143eb:	mov    eax,0x2c85285f
  4143f0:	shl    DWORD PTR [esi+0x7606804f],0x96
  4143f7:	dec    eax
  4143f8:	xchg   ebp,eax
  4143f9:	int    0xc4
  4143fb:	icebp  
  4143fc:	adc    edx,eax
  4143fe:	(bad)  
  4143ff:	mov    esi,0xa47d4852
  414404:	and    ch,BYTE PTR [edx-0xa]
  414407:	jbe    0x414458
  414409:	call   0x3ae308ca
  41440e:	repz fwait
  414410:	psubusb mm4,mm2
  414413:	rcr    DWORD PTR [edi-0x5f],1
  414416:	pop    ebp
  414417:	or     eax,0x3bc29a8c
  41441c:	dec    ebx
  41441d:	pusha  
  41441e:	and    DWORD PTR [ecx],0x4f
  414421:	lds    ebp,FWORD PTR [ecx+0xd]
  414424:	adc    al,0xae
  414426:	gs sub esi,edi
  414429:	jl     0x414445
  41442b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41442c:	aad    0xda
  41442e:	or     BYTE PTR [ebx],0x64
  414431:	retf   0x7de2
  414434:	in     al,dx
  414435:	xor    esp,ebx
  414437:	dec    ebx
  414438:	adc    ecx,DWORD PTR [edi+0x7b02473b]
  41443e:	mov    ds:0x985b2e26,al
  414443:	push   eax
  414444:	and    BYTE PTR [ebx+ecx*2-0x2c91fe51],dh
  41444b:	(bad)  
  41444c:	int3   
  41444d:	(bad)  
  41444e:	into   
  41444f:	push   es
  414450:	imul   esi,DWORD PTR gs:[edi+0x664fe051],0xd04c4ad
  41445b:	or     edx,DWORD PTR [eax+0x5]
  41445e:	test   DWORD PTR [esi+ecx*2],ebx
  414461:	and    DWORD PTR [ecx],0xf92753f0
  414467:	ds jcxz 0x4143ef
  41446b:	das    
  41446c:	pop    ss
  41446d:	push   ebp
  41446e:	mov    eax,ds:0x532c7cda
  414473:	mov    dl,0xe4
  414475:	and    BYTE PTR [esi],0xd8
  414478:	mov    edx,0xf615f92b
  41447d:	dec    ebp
  41447e:	jbe    0x4144a1
  414480:	sti    
  414481:	xchg   ecx,eax
  414482:	scas   al,BYTE PTR es:[edi]
  414483:	lock int3 
  414485:	(bad)  
  414486:	push   ds
  414487:	mov    edx,0x4fe7922d
  41448c:	aas    
  41448d:	ret    0x746f
  414490:	adc    eax,0xbdd0497e
  414495:	pop    eax
  414496:	lea    esp,[ebx+edi*1+0x262e2e61]
  41449d:	xchg   edx,eax
  41449e:	call   0x5229:0x7387864
  4144a5:	cmp    eax,0xf174ddb9
  4144aa:	ret    0xa009
  4144ad:	mov    ch,0xfd
  4144af:	and    eax,0x8fed2f42
  4144b4:	lods   al,BYTE PTR ds:[esi]
  4144b5:	jl     0x414508
  4144b7:	dec    esi
  4144b8:	dec    esi
  4144b9:	test   BYTE PTR [edx+0x6bbc2320],ch
  4144bf:	xchg   esi,eax
  4144c0:	xchg   BYTE PTR [ebx],ch
  4144c2:	out    dx,eax
  4144c3:	rcl    ch,cl
  4144c5:	mov    al,0x7b
  4144c7:	sub    BYTE PTR [esi],0xae
  4144ca:	or     edi,eax
  4144cc:	sub    cl,dh
  4144ce:	cmp    al,0x21
  4144d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144d1:	cli    
  4144d2:	ja     0x4144f5
  4144d4:	test   ch,ah
  4144d6:	and    DWORD PTR [esi-0x21cee84e],edi
  4144dc:	es jnp 0x4144c8
  4144df:	rol    edi,cl
  4144e1:	cmp    cl,BYTE PTR [ebx]
  4144e3:	neg    DWORD PTR [ebx-0x7e5f3b91]
  4144e9:	mov    ebx,0xa3134beb
  4144ee:	loopne 0x4144d6
  4144f0:	out    0x68,al
  4144f2:	mov    esp,DWORD PTR ds:0x95bd7207
  4144f8:	fsubrp st(6),st
  4144fa:	(bad)  
  4144fb:	sub    ecx,DWORD PTR [edi+0xf]
  4144fe:	aam    0xbd
  414500:	xor    ebp,ebp
  414502:	jb     0x414576
  414504:	mov    ah,0xf3
  414506:	mov    bl,BYTE PTR [esi-0x76]
  414509:	sub    eax,edi
  41450b:	push   edx
  41450c:	add    al,bl
  41450e:	es mov al,0x8c
  414511:	cmc    
  414512:	xchg   BYTE PTR [ebx],ch
  414514:	or     BYTE PTR [esi],ch
  414516:	cmp    eax,esp
  414518:	mov    dl,0xc9
  41451a:	cmp    eax,0xf0e1aecf
  41451f:	jge    0x41452e
  414521:	pop    ebp
  414522:	dec    edi
  414523:	jns    0x4144e7
  414525:	ret    
  414526:	and    ecx,DWORD PTR [edx+ebp*8]
  414529:	mov    esp,0x3dba591b
  41452e:	sar    DWORD PTR [ebx-0x54],0xd9
  414532:	lock sub al,0xa4
  414535:	inc    esp
  414536:	das    
  414537:	ds mov eax,0xc9834cb6
  41453d:	daa    
  41453e:	push   0xffffffb9
  414540:	mov    dh,0x51
  414542:	ficom  WORD PTR [ebp+0x2e9e7128]
  414548:	sbb    dl,BYTE PTR ds:[edx]
  41454b:	rcl    BYTE PTR ds:0x2abc02e9,1
  414551:	mov    DWORD PTR [ecx+eiz*8+0x55],edi
  414555:	(bad)  
  414556:	mov    bl,0x18
  414558:	pushf  
  414559:	pop    es
  41455a:	cs pop ecx
  41455c:	mov    dh,0xcf
  41455e:	(bad)  
  41455f:	nop
  414560:	scas   al,BYTE PTR es:[edi]
  414561:	dec    BYTE PTR [ebp*8-0x5dfdca62]
  414568:	sahf   
  414569:	out    dx,eax
  41456a:	lahf   
  41456b:	xchg   ah,ch
  41456d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41456f:	inc    esi
  414570:	push   esi
  414571:	jmp    0x7233:0xb3e9f741
  414578:	sbb    al,0x9
  41457a:	fldcw  WORD PTR [edi-0x76260457]
  414580:	loopne 0x414601
  414582:	dec    eax
  414583:	fwait
  414584:	pop    eax
  414585:	mov    ebp,0xadb92728
  41458a:	jp     0x4145fd
  41458c:	stc    
  41458d:	(bad)  
  41458e:	icebp  
  41458f:	in     eax,dx
  414590:	dec    esp
  414591:	cmp    cl,ah
  414593:	in     eax,dx
  414594:	xchg   ecx,eax
  414595:	xor    DWORD PTR [ebp+0x56],edx
  414598:	inc    eax
  414599:	pop    ecx
  41459a:	pop    ebp
  41459b:	adc    bl,cl
  41459d:	mov    ch,bh
  41459f:	jnp    0x414611
  4145a1:	aam    0x41
  4145a3:	int3   
  4145a4:	icebp  
  4145a5:	test   eax,0xf7dfebc6
  4145aa:	ret    0x58d8
  4145ad:	in     eax,dx
  4145ae:	sar    ebp,1
  4145b0:	pop    ebp
  4145b1:	(bad)  
  4145b2:	test   BYTE PTR [edi+0xc],0x28
  4145b6:	dec    edx
  4145b7:	leave  
  4145b8:	test   DWORD PTR [eax+0x66],edx
  4145bb:	(bad)  
  4145bc:	out    0x19,al
  4145be:	mov    WORD PTR [ecx-0x72d6f797],?
  4145c4:	fs push ebp
  4145c6:	fs push cs
  4145c8:	jmp    DWORD PTR [ebx+0x31edd2ba]
  4145ce:	rcl    DWORD PTR [ebx-0x68acd0ec],1
  4145d4:	xor    al,BYTE PTR [esi+0x48]
  4145d7:	jle    0x41462b
  4145d9:	push   edi
  4145da:	push   edi
  4145db:	jnp    0x41461f
  4145dd:	sbb    al,BYTE PTR [ebx-0x236e56d4]
  4145e3:	push   ecx
  4145e4:	dec    ebp
  4145e5:	in     eax,0x2a
  4145e7:	mov    dl,0xe
  4145e9:	std    
  4145ea:	outs   dx,DWORD PTR ds:[esi]
  4145eb:	or     al,al
  4145ed:	mov    esi,0x15d05431
  4145f2:	mov    cs:0x958eeb99,eax
  4145f8:	sar    DWORD PTR [ebx],0xe0
  4145fb:	imul   esi,DWORD PTR [ecx+edx*4],0xfffffff6
  4145ff:	and    ecx,edi
  414601:	push   eax
  414602:	adc    eax,0xaba9ed7e
  414607:	je     0x414660
  414609:	les    eax,FWORD PTR [eax]
  41460b:	dec    ecx
  41460c:	inc    eax
  41460d:	or     DWORD PTR [edi-0x148bf50e],edi
  414613:	pop    edi
  414614:	lahf   
  414615:	pop    esi
  414616:	pop    eax
  414617:	sbb    DWORD PTR [edi+ebx*8-0x4be03dfe],0x25418a2e
  414622:	push   ss
  414623:	out    0x5b,eax
  414625:	ret    
  414626:	inc    edi
  414627:	jp     0x4145aa
  414629:	retf   
  41462a:	lahf   
  41462b:	lea    edi,[edx]
  41462d:	std    
  41462e:	out    dx,eax
  41462f:	adc    DWORD PTR [edx+0x6788dc56],esi
  414635:	sub    bl,BYTE PTR [ebx-0x12]
  414638:	jns    0x41468d
  41463a:	into   
  41463b:	xchg   DWORD PTR [edx-0x500021e4],eax
  414641:	xchg   edi,eax
  414642:	ins    BYTE PTR es:[edi],dx
  414643:	xchg   DWORD PTR [edi+0x13],esp
  414646:	rol    eax,1
  414648:	jle    0x41465e
  41464a:	mov    ds:0xf6338384,eax
  41464f:	mov    edx,0xd2cce6de
  414654:	pop    edi
  414655:	mov    dh,BYTE PTR [eax-0xf]
  414658:	adc    cl,BYTE PTR [esi]
  41465a:	adc    DWORD PTR [ecx*1+0x7a900354],0x63654f8b
  414665:	mov    ch,0x8b
  414667:	mov    bh,0xa4
  414669:	cdq    
  41466a:	mov    cl,BYTE PTR [edi]
  41466c:	push   0x7d
  41466e:	or     al,0x56
  414670:	out    0xd9,eax
  414672:	inc    ecx
  414673:	sbb    esi,DWORD PTR [edi-0x2c]
  414676:	rcl    BYTE PTR [ecx],0x85
  414679:	gs jge 0x4146a2
  41467c:	inc    ecx
  41467d:	add    edx,esi
  41467f:	jo     0x4146c9
  414681:	xchg   edx,eax
  414682:	mov    ah,0x64
  414684:	mov    al,0x73
  414686:	jne    0x4146be
  414688:	in     al,0xd3
  41468a:	xchg   edx,eax
  41468b:	push   ebx
  41468c:	cld    
  41468d:	push   edi
  41468e:	inc    edi
  41468f:	out    0xc3,al
  414691:	imul   ebx,DWORD PTR [ebx-0x67],0xffffffe2
  414695:	cmc    
  414696:	sbb    BYTE PTR [eax],cl
  414698:	pop    ebp
  414699:	ins    DWORD PTR es:[edi],dx
  41469a:	out    dx,eax
  41469b:	daa    
  41469c:	inc    BYTE PTR [ebx-0x7b]
  41469f:	dec    edi
  4146a0:	adc    cl,0x4
  4146a3:	lock xchg esi,eax
  4146a5:	scas   eax,DWORD PTR es:[edi]
  4146a6:	jle    0x414682
  4146a8:	jbe    0x414647
  4146aa:	sar    eax,0x26
  4146ad:	mov    al,0x59
  4146af:	lahf   
  4146b0:	addr16 test al,0x3c
  4146b3:	and    eax,0x8dd87208
  4146b8:	xchg   esi,eax
  4146b9:	out    dx,eax
  4146ba:	cmp    DWORD PTR [edi+0x7a],ebp
  4146bd:	or     eax,0x54210d86
  4146c2:	popa   
  4146c3:	sbb    DWORD PTR [esi],esp
  4146c5:	cli    
  4146c6:	das    
  4146c7:	sub    esp,DWORD PTR [esi-0x6528e293]
  4146cd:	mov    ecx,0x114bdc76
  4146d2:	xor    al,BYTE PTR [ecx]
  4146d4:	ret    
  4146d5:	pop    esp
  4146d6:	sti    
  4146d7:	jge    0x4146cc
  4146d9:	inc    edx
  4146da:	outs   dx,DWORD PTR ds:[esi]
  4146db:	jb     0x414714
  4146dd:	shl    BYTE PTR [ebx+0x24],cl
  4146e0:	jecxz  0x41467c
  4146e2:	data16 cs loopne 0x4146f7
  4146e6:	cs fsubrp st(0),st
  4146e9:	pop    ebx
  4146ea:	inc    esi
  4146eb:	mov    WORD PTR [esi+eiz*1+0x12c796e0],gs
  4146f2:	add    eax,0x1c40c92b
  4146f7:	pop    ss
  4146f8:	push   ecx
  4146f9:	sbb    esp,edx
  4146fb:	aas    
  4146fc:	(bad)  
  4146ff:	fidivr DWORD PTR [ebp-0x6a4efc80]
  414705:	cmp    al,BYTE PTR [eax+0x4dc0d251]
  41470b:	cmp    eax,DWORD PTR [edi+0x1e]
  41470e:	xor    DWORD PTR [edx+edx*8+0x58baad1],edi
  414715:	out    dx,eax
  414716:	dec    esp
  414717:	ret    0x7c2f
  41471a:	imul   ebp,DWORD PTR [ecx-0x5d73f995],0xac19534d
  414724:	inc    esp
  414725:	iret   
  414726:	das    
  414727:	popf   
  414728:	call   0x7158:0x41396d04
  41472f:	jne    0x4146d2
  414731:	inc    edx
  414732:	pop    edx
  414733:	clc    
  414734:	pop    esp
  414735:	test   eax,0x8760cac1
  41473a:	cdq    
  41473b:	push   ebp
  41473c:	mov    dh,0x20
  41473e:	fs inc esp
  414740:	punpcklbw mm0,DWORD PTR [ebp+0x26]
  414744:	inc    esi
  414745:	xchg   edx,eax
  414746:	jbe    0x414796
  414748:	push   edx
  414749:	jb     0x4146cd
  41474b:	xchg   DWORD PTR [ecx+edi*8+0x44b4913c],ecx
  414752:	jns    0x4147d2
  414754:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414756:	inc    edx
  414757:	fdivr  st,st(1)
  414759:	addr16 inc esi
  41475b:	pop    edx
  41475c:	push   ds
  41475d:	mov    esp,0x53205803
  414762:	add    DWORD PTR [eax+0x26],0xffffffdb
  414766:	imul   BYTE PTR [ecx+0x8e8aad5]
  41476c:	lahf   
  41476d:	jle    0x4147b4
  41476f:	xor    al,0x48
  414771:	mov    eax,ds:0x8aaf0132
  414776:	js     0x41474d
  414778:	cmp    al,0xa2
  41477a:	or     eax,0x85219e81
  41477f:	lods   al,BYTE PTR ds:[esi]
  414780:	cmp    edi,esi
  414782:	clts   
  414784:	sub    BYTE PTR [esi+0x11],al
  414787:	and    BYTE PTR [ebx-0x31],bh
  41478a:	lods   al,BYTE PTR ds:[esi]
  41478b:	push   cs
  41478c:	jg     0x414794
  41478e:	push   ebx
  41478f:	cwde   
  414790:	or     al,0xb5
  414792:	(bad)  
  414793:	fsubr  DWORD PTR [ebx-0x22]
  414796:	mov    ds:0xd691d7d1,eax
  41479b:	scas   eax,DWORD PTR es:[edi]
  41479c:	pusha  
  41479d:	adc    al,0xc9
  41479f:	mov    DWORD PTR [esi],eax
  4147a1:	fst    QWORD PTR [edi]
  4147a3:	pop    es
  4147a4:	adc    eax,0xd0946c1a
  4147a9:	mov    ds:0x6caf5036,eax
  4147ae:	sub    eax,0xe9f55ba9
  4147b3:	mov    esp,0xc4a4ba4f
  4147b8:	repnz cdq 
  4147ba:	(bad)  
  4147bb:	inc    DWORD PTR [ecx+ecx*2]
  4147be:	push   ds
  4147bf:	push   ebp
  4147c0:	add    edx,esp
  4147c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147c3:	inc    eax
  4147c4:	int    0x68
  4147c6:	push   ss
  4147c7:	out    0x83,al
  4147c9:	imul   edi,DWORD PTR [edi+esi*1],0xffffffb7
  4147cd:	xchg   esi,eax
  4147ce:	std    
  4147cf:	push   edx
  4147d0:	xchg   edx,eax
  4147d1:	pop    edi
  4147d2:	xchg   esi,eax
  4147d3:	pop    edi
  4147d4:	pop    ebx
  4147d5:	jl     0x4147c8
  4147d7:	inc    esi
  4147d8:	mov    ecx,DWORD PTR ds:[ecx]
  4147db:	mov    ch,0x59
  4147dd:	inc    ebp
  4147de:	sbb    DWORD PTR [edx+0x3d],ebx
  4147e1:	aam    0x3f
  4147e3:	mov    WORD PTR [edx+0x74],es
  4147e6:	ror    BYTE PTR [edx+0x62],1
  4147e9:	cmp    dh,ah
  4147eb:	push   ecx
  4147ec:	inc    esp
  4147ed:	xchg   BYTE PTR [eax],dh
  4147ef:	mov    al,ds:0x75f43810
  4147f4:	pop    ds
  4147f5:	daa    
  4147f6:	pop    ds
  4147f7:	scas   al,BYTE PTR es:[edi]
  4147f8:	push   ebp
  4147f9:	jns    0x414799
  4147fb:	adc    eax,0x83e11bf1
  414800:	adc    DWORD PTR [edx+0x5afe880],0x1d
  414807:	std    
  414808:	jbe    0x4147fe
  41480a:	shl    bh,1
  41480c:	(bad)  
  41480d:	mov    bl,0xee
  41480f:	jg     0x4147aa
  414811:	xchg   ecx,eax
  414812:	(bad)  
  414813:	push   esi
  414814:	inc    ebx
  414815:	add    BYTE PTR [esi],dl
  414817:	pop    esp
  414818:	add    BYTE PTR [ebx-0x45],0xa4
  41481c:	lods   al,BYTE PTR ds:[esi]
  41481d:	ret    
  41481e:	cmp    cl,dh
  414820:	loopne 0x4147bb
  414822:	cmp    DWORD PTR [edi+0x7fc9b29d],esp
  414828:	add    esp,DWORD PTR [ebp+0x51bbb3f]
  41482e:	test   DWORD PTR [edi],ecx
  414830:	jl     0x414847
  414832:	das    
  414833:	inc    eax
  414834:	or     BYTE PTR [edi+0x75e98b78],dh
  41483a:	inc    edi
  41483b:	into   
  41483c:	outs   dx,BYTE PTR ds:[esi]
  41483d:	push   edx
  41483e:	mov    ds:0x1255aa35,eax
  414843:	or     BYTE PTR [edi+0xcbe55e2],ah
  414849:	(bad)  
  41484a:	inc    eax
  41484b:	fmul   st,st(3)
  41484d:	arpl   WORD PTR [edi-0x4634b72c],bx
  414853:	mov    ds:0x52086193,eax
  414858:	shl    DWORD PTR [esi],1
  41485a:	push   es
  41485b:	outs   dx,DWORD PTR ds:[esi]
  41485c:	shl    bl,cl
  41485e:	icebp  
  41485f:	shl    BYTE PTR [esi-0x21],cl
  414862:	xchg   esi,eax
  414863:	or     esp,eax
  414865:	mov    ebp,0xd0c3ac5f
  41486a:	imul   eax,DWORD PTR [ecx],0xbf77e003
  414870:	loop   0x41489c
  414872:	pop    es
  414873:	in     al,dx
  414874:	xchg   BYTE PTR [ebp+0x5b912464],cl
  41487a:	call   0x4ed227e7
  41487f:	cmp    eax,0xca948281
  414884:	mov    ch,0x49
  414886:	xchg   DWORD PTR [ebx+0x34],eax
  414889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41488a:	mov    ebp,0x16a3397a
  41488f:	push   ds
  414890:	(bad)  
  414891:	dec    edi
  414892:	mov    ebx,0xc0f56094
  414897:	stos   BYTE PTR es:[edi],al
  414898:	inc    edi
  414899:	inc    esp
  41489a:	shr    DWORD PTR es:[eax],0x2a
  41489e:	rol    BYTE PTR [ebx+ecx*4-0x14a06626],1
  4148a5:	dec    esp
  4148a6:	outs   dx,DWORD PTR ds:[esi]
  4148a7:	sti    
  4148a8:	fmul   DWORD PTR [edi+0x42e12b12]
  4148ae:	enter  0xe79e,0x4b
  4148b2:	nop
  4148b3:	mov    dl,0xcc
  4148b5:	mov    edx,DWORD PTR [ebp+0x8]
  4148b8:	xor    edx,eax
  4148ba:	add    edx,esi
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0xa292ac2c
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx-0x2fc44ea9],0xfffffffe
  414952:	xlat   BYTE PTR ds:[ebx]
  414953:	xor    DWORD PTR [esi],esp
  414955:	or     al,0x30
  414957:	push   ss
  414958:	jl     0x41497c
  41495a:	push   esp
  41495b:	jge    0x4148f0
  41495d:	inc    edi
  41495e:	inc    edx
  41495f:	mov    dl,al
  414961:	pop    ss
  414962:	and    eax,0x15e25d53
  414967:	sub    BYTE PTR [eax-0x27a9866a],al
  41496d:	add    al,0xe6
  41496f:	adc    eax,0x283a5438
  414974:	lds    ebx,FWORD PTR [ebp+0x6cf60dd6]
  41497a:	aad    0x1a
  41497c:	mov    dl,0x6f
  41497e:	(bad)  
  41497f:	push   eax
  414980:	icebp  
  414981:	cmc    
  414982:	xor    DWORD PTR ds:0xe9d48cb6,edx
  414988:	out    0x7c,eax
  41498a:	je     0x414911
  41498c:	xchg   DWORD PTR [ecx],esp
  41498e:	adc    BYTE PTR [edx+0x3065ffe3],0x0
  414995:	and    ah,BYTE PTR [edi+esi*2-0x24]
  414999:	xchg   ebx,eax
  41499a:	adc    ebp,esi
  41499c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41499d:	aaa    
  41499e:	add    bh,bh
  4149a0:	nop
  4149a1:	sbb    BYTE PTR [eax-0x4494fcfc],al
  4149a7:	mov    cl,0xe5
  4149a9:	adc    cl,bh
  4149ab:	pop    ss
  4149ac:	fmul   st(4),st
  4149ae:	mov    eax,ds:0xe0c0cfee
  4149b3:	jg     0x4149be
  4149b5:	cld    
  4149b6:	int    0x17
  4149b8:	div    bh
  4149ba:	pusha  
  4149bb:	mov    edi,0x58735813
  4149c0:	leave  
  4149c1:	adc    eax,0x9f468bd3
  4149c6:	dec    eax
  4149c7:	pop    eax
  4149c8:	jne    0x4149c0
  4149ca:	and    ah,BYTE PTR [esi]
  4149cc:	ds (bad) 
  4149ce:	cmp    edi,DWORD PTR [edx-0x4a9c0d4]
  4149d4:	pop    edx
  4149d5:	jns    0x4149e5
  4149d7:	loopne 0x4149ef
  4149d9:	xor    ebp,DWORD PTR [eax]
  4149db:	sbb    eax,0x9a53c627
  4149e0:	sub    esp,DWORD PTR [eax]
  4149e2:	lock mov esi,0x391ac0da
  4149e8:	jl     0x4149f0
  4149ea:	or     bh,BYTE PTR [ebp-0x7e]
  4149ed:	xor    dh,BYTE PTR [ebp-0x33]
  4149f0:	cmp    BYTE PTR [ecx-0x40],cl
  4149f3:	mov    bl,0xa7
  4149f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149f7:	shl    eax,cl
  4149f9:	sbb    eax,0x6bb42690
  4149fe:	push   esp
  4149ff:	sbb    DWORD PTR [ebp+0x28],ebp
  414a02:	dec    edi
  414a03:	cs inc ecx
  414a05:	aaa    
  414a06:	mov    bl,bh
  414a08:	popa   
  414a09:	imul   edi,DWORD PTR [eax+0x31f20023],0xdb63a4be
  414a13:	imul   esp,esp,0xffffffe0
  414a16:	or     ah,BYTE PTR ds:0xeb169972
  414a1c:	cmp    BYTE PTR [edi+0x36],cl
  414a1f:	push   eax
  414a20:	mov    al,ds:0x2453ffdc
  414a25:	in     eax,dx
  414a26:	and    DWORD PTR [eax-0x55],edx
  414a29:	mov    ah,0xfc
  414a2b:	fstp   QWORD PTR [esp+ebp*8-0x55]
  414a2f:	push   esp
  414a30:	dec    ecx
  414a31:	inc    edi
  414a32:	lods   al,BYTE PTR ds:[esi]
  414a33:	les    ecx,FWORD PTR [esi+ebx*1]
  414a36:	in     al,dx
  414a37:	mov    ah,0x31
  414a39:	shl    BYTE PTR [ecx],1
  414a3b:	and    al,0x52
  414a3d:	hlt    
  414a3e:	dec    edx
  414a3f:	bound  edi,QWORD PTR [ecx+0x6e]
  414a42:	cdq    
  414a43:	or     ah,BYTE PTR es:[ecx-0x7fd9b137]
  414a4a:	xchg   esp,eax
  414a4b:	pop    ds
  414a4c:	mov    edx,0xbf2638ef
  414a51:	mov    edi,0x7330932d
  414a56:	dec    esp
  414a57:	fwait
  414a58:	enter  0xd015,0xf0
  414a5c:	mov    ds:0x11ded979,eax
  414a61:	ins    BYTE PTR es:[edi],dx
  414a62:	fisubr WORD PTR [edi+ecx*4]
  414a65:	daa    
  414a66:	sub    eax,0xaea28c10
  414a6b:	aam    0xdc
  414a6d:	icebp  
  414a6e:	lock adc eax,0xdcb54f1d
  414a74:	test   al,0xd5
  414a76:	pop    ebp
  414a77:	retf   
  414a78:	popa   
  414a79:	(bad)  
  414a7a:	pop    es
  414a7b:	outs   dx,DWORD PTR ds:[esi]
  414a7c:	ins    BYTE PTR es:[edi],dx
  414a7d:	sbb    ah,BYTE PTR [ebx-0x15e087c2]
  414a83:	cli    
  414a84:	outs   dx,DWORD PTR ds:[esi]
  414a85:	rcr    BYTE PTR [ecx-0xa0c4a9b],0xe5
  414a8c:	sbb    ax,0x6841
  414a90:	jnp    0x414ae0
  414a92:	xor    BYTE PTR [edx+0x47],0x31
  414a96:	test   al,0x59
  414a98:	mov    eax,0x633d23f
  414a9d:	sbb    esi,ecx
  414a9f:	(bad)  
  414aa0:	std    
  414aa1:	retf   
  414aa2:	sbb    eax,0xfd761e9c
  414aa7:	pop    ebp
  414aa8:	fstp   QWORD PTR [ebx+esi*1-0x40ac45a1]
  414aaf:	aam    0xd5
  414ab1:	popf   
  414ab2:	loop   0x414a3e
  414ab4:	lds    edi,FWORD PTR [eax+0x756fd0aa]
  414aba:	inc    edi
  414abb:	jb     0x414a56
  414abd:	adc    eax,0x9934b311
  414ac2:	cmp    DWORD PTR [edi+0x796aefb8],esi
  414ac8:	test   cl,bl
  414aca:	adc    BYTE PTR [ecx],dl
  414acc:	sub    bh,dh
  414ace:	mov    eax,0x6d3b5d82
  414ad3:	inc    ebx
  414ad4:	pop    DWORD PTR [ecx-0x1986e14b]
  414ada:	pop    eax
  414adb:	push   ecx
  414adc:	inc    ecx
  414add:	or     eax,0x4cf9fdaf
  414ae2:	mov    ds:0xff7de13d,al
  414ae7:	leave  
  414ae8:	aad    0x14
  414aea:	pop    edi
  414aeb:	jp     0x414ac3
  414aed:	jmp    0x414b1d
  414aef:	sub    eax,0xfe0fbdd9
  414af4:	jne    0x414b39
  414af6:	and    cl,BYTE PTR [ecx+esi*2+0x1c14ec14]
  414afd:	sbb    ecx,DWORD PTR [ebx-0xa]
  414b00:	dec    eax
  414b01:	mov    dl,BYTE PTR [ecx+ebx*1-0x71]
  414b05:	addr16 pop edx
  414b07:	mov    fs,esp
  414b09:	xchg   ebx,eax
  414b0a:	push   ecx
  414b0b:	and    al,dl
  414b0d:	bswap  eax
  414b0f:	in     eax,dx
  414b10:	sbb    bh,bl
  414b12:	shl    DWORD PTR [edi-0x279c82b7],cl
  414b18:	jb     0x414aa5
  414b1a:	cdq    
  414b1b:	inc    esi
  414b1c:	jae    0x414b00
  414b1e:	mov    ds:0x97eda092,al
  414b23:	lods   al,BYTE PTR ds:[esi]
  414b24:	imul   edi,edi,0x311dcd23
  414b2a:	or     cl,BYTE PTR ds:0x8c9f3e16
  414b30:	or     DWORD PTR [ebx+0x57f311a8],ebx
  414b36:	pop    es
  414b37:	stos   DWORD PTR es:[edi],eax
  414b38:	shl    DWORD PTR [eax],1
  414b3a:	cmp    BYTE PTR [eax+edi*1+0x1917e7d],cl
  414b41:	xlat   BYTE PTR ds:[ebx]
  414b42:	mov    edx,DWORD PTR [eax+0x7a]
  414b45:	jecxz  0x414b12
  414b47:	cmp    bh,ch
  414b49:	jno    0x414b27
  414b4b:	fdivr  QWORD PTR ds:0x4114655f
  414b52:	jbe    0x414ba6
  414b54:	je     0x414b0b
  414b56:	idiv   al
  414b58:	mov    ah,0xa2
  414b5a:	mov    ah,0xd7
  414b5c:	mov    ebp,0xe0e71f9d
  414b61:	arpl   WORD PTR [edx+0x13e875b3],cx
  414b67:	mov    al,ds:0xafe08cb2
  414b6c:	jae    0x414bde
  414b6e:	stc    
  414b6f:	or     bh,BYTE PTR [ebp+0x41]
  414b72:	or     bh,BYTE PTR [ebx+esi*2]
  414b75:	int3   
  414b76:	call   0x5831a75e
  414b7b:	test   dh,cl
  414b7d:	or     esi,DWORD PTR [ecx-0x634fda73]
  414b83:	dec    ebp
  414b84:	adc    BYTE PTR [edi+0x5f],cl
  414b87:	test   dl,ch
  414b89:	mov    cl,0x64
  414b8b:	retf   
  414b8c:	aam    0x1f
  414b8e:	xor    al,ah
  414b90:	rcr    DWORD PTR [esp+ebp*4-0x7a],cl
  414b94:	cli    
  414b95:	adc    ebp,DWORD PTR [esi-0x44d305e7]
  414b9b:	lods   al,BYTE PTR ds:[esi]
  414b9c:	mov    ah,0x75
  414b9e:	rcl    BYTE PTR [edx-0x74754f4],0xf1
  414ba5:	cmp    eax,0x3f825117
  414baa:	outs   dx,BYTE PTR ds:[esi]
  414bab:	icebp  
  414bac:	bound  edx,QWORD PTR [ebp-0x36]
  414baf:	cmp    ch,BYTE PTR [eax+0x7d]
  414bb2:	adc    al,0xbb
  414bb4:	pop    es
  414bb5:	popa   
  414bb6:	xlat   BYTE PTR ds:[ebx]
  414bb7:	ins    BYTE PTR es:[edi],dx
  414bb8:	cld    
  414bb9:	repnz repz in al,dx
  414bbc:	pushf  
  414bbd:	mov    ecx,ecx
  414bbf:	adc    ecx,DWORD PTR [ebp+0x51]
  414bc2:	iret   
  414bc3:	aam    0x74
  414bc5:	pop    ss
  414bc6:	push   edi
  414bc7:	mov    esp,0x59720cbb
  414bcc:	mov    eax,ds:0xe0a64624
  414bd1:	jne    0x414b94
  414bd3:	adc    BYTE PTR [ebp+eax*1-0x4],cl
  414bd7:	scas   eax,DWORD PTR es:[edi]
  414bd8:	cmp    bh,BYTE PTR ds:0x3f1dccd1
  414bde:	mov    BYTE PTR [edi+0x48],al
  414be1:	adc    BYTE PTR [edi+0x6d],bh
  414be4:	add    edi,edi
  414be6:	dec    esi
  414be7:	sub    ah,ah
  414be9:	dec    ebx
  414bea:	test   eax,0xd6aff845
  414bef:	pop    edx
  414bf0:	aaa    
  414bf1:	and    edi,DWORD PTR [edx-0x7de2736d]
  414bf7:	aam    0x28
  414bf9:	outs   dx,DWORD PTR ds:[esi]
  414bfa:	call   0x95b1:0xfa0d775a
  414c01:	jl     0x414c7e
  414c03:	sub    ah,BYTE PTR [edx+0x70]
  414c06:	adc    eax,0x55098961
  414c0b:	scas   eax,DWORD PTR es:[edi]
  414c0c:	test   ebp,esi
  414c0e:	dec    ebp
  414c0f:	pop    eax
  414c10:	rol    DWORD PTR [ebx-0x2e],0xb7
  414c14:	cmp    bh,cl
  414c16:	stos   DWORD PTR es:[edi],eax
  414c17:	or     eax,0xf10f278e
  414c1c:	cmp    esp,DWORD PTR [edx-0x67bfd1bf]
  414c22:	out    dx,al
  414c23:	lds    ecx,FWORD PTR [esi+edx*1]
  414c26:	pop    esp
  414c27:	inc    esp
  414c28:	daa    
  414c29:	pop    es
  414c2a:	inc    ecx
  414c2b:	mov    al,0xd4
  414c2d:	mov    dh,0xfd
  414c2f:	mov    al,0xa7
  414c31:	pop    ebx
  414c32:	mov    esi,ebx
  414c34:	inc    edi
  414c35:	and    esp,DWORD PTR [ecx-0x59c000c3]
  414c3b:	scas   al,BYTE PTR es:[edi]
  414c3c:	nop
  414c3d:	(bad)  
  414c3e:	jmp    0x3e1:0x577ff990
  414c45:	mov    al,0xef
  414c47:	jmp    0x209e:0xc23137e4
  414c4e:	pop    eax
  414c4f:	mov    edi,0x6de82b79
  414c54:	cmp    DWORD PTR [ebp+0x4a],0x30
  414c58:	cwde   
  414c59:	fsin   
  414c5b:	add    eax,0xd234c79e
  414c60:	jb     0x414c4b
  414c62:	sbb    esi,DWORD PTR [ebp-0x1c511c68]
  414c68:	mov    esi,DWORD PTR ds:0xcb75b77e
  414c6e:	xchg   ebp,eax
  414c6f:	dec    eax
  414c70:	fadd   DWORD PTR [edx-0x31541dbd]
  414c76:	retf   0x1253
  414c79:	fimul  DWORD PTR [ecx+0x66]
  414c7c:	out    0x77,eax
  414c7e:	sub    DWORD PTR [ebx+0x707ebe1a],eax
  414c84:	sahf   
  414c85:	hlt    
  414c86:	movntps XMMWORD PTR [esp+esi*1],xmm5
  414c8a:	jg     0x414c11
  414c8c:	mov    esp,0x910a693e
  414c91:	retf   0xe2de
  414c94:	push   edx
  414c95:	jg     0x414c71
  414c97:	hlt    
  414c98:	(bad)  
  414c99:	push   ds
  414c9a:	adc    DWORD PTR [edx-0x61],edx
  414c9d:	(bad)  
  414c9f:	dec    esi
  414ca0:	and    DWORD PTR [ecx-0x1b62f0f8],ecx
  414ca6:	test   BYTE PTR [edx+0xf],ah
  414ca9:	outs   dx,BYTE PTR ds:[esi]
  414caa:	fisubr WORD PTR [ebx+eax*4]
  414cad:	pop    ebp
  414cae:	cld    
  414caf:	leave  
  414cb0:	jecxz  0x414cda
  414cb2:	or     al,0xf4
  414cb4:	cld    
  414cb5:	jmp    0x30a3000a
  414cba:	sub    DWORD PTR ds:0x66745d1f,esi
  414cc0:	add    ah,dh
  414cc2:	out    0x20,al
  414cc4:	leave  
  414cc5:	xor    eax,0xac454b30
  414cca:	pop    ds
  414ccb:	(bad)  
  414ccc:	push   edx
  414ccd:	(bad)  
  414cce:	pop    edx
  414ccf:	jns    0x414ca1
  414cd1:	push   esi
  414cd2:	jmp    0x545d:0xf6ad3a16
  414cd9:	cmp    BYTE PTR [esi-0x1f],0xfd
  414cdd:	xor    eax,0x9602e727
  414ce2:	cmp    BYTE PTR [edi+0x2],al
  414ce5:	cmp    eax,0x710e11e6
  414cea:	outs   dx,DWORD PTR ds:[esi]
  414ceb:	sbb    DWORD PTR [ebx+0x3dc4751d],esi
  414cf1:	cmp    al,0x9c
  414cf3:	sub    al,0x93
  414cf5:	pushf  
  414cf6:	aam    0xb8
  414cf8:	xchg   DWORD PTR [eax],esp
  414cfa:	and    ebp,ebx
  414cfc:	stos   BYTE PTR es:[edi],al
  414cfd:	test   al,0x7a
  414cff:	ins    BYTE PTR es:[edi],dx
  414d00:	mov    DWORD PTR [esi],ecx
  414d02:	scas   al,BYTE PTR es:[edi]
  414d03:	dec    ebp
  414d04:	sbb    BYTE PTR [edi+ecx*1+0x5f],bl
  414d08:	adc    edi,esi
  414d0a:	clc    
  414d0b:	test   dh,bl
  414d0d:	xor    eax,0x6a8f6b5d
  414d12:	push   edx
  414d13:	and    bh,BYTE PTR [edx]
  414d15:	retf   
  414d16:	jl     0x414d00
  414d18:	inc    esp
  414d19:	rcr    BYTE PTR [edi-0x70d17269],cl
  414d1f:	sub    bl,BYTE PTR [ebp-0x175ef1f4]
  414d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d26:	test   BYTE PTR [edx],dl
  414d28:	leave  
  414d29:	xor    eax,0x29945fc7
  414d2e:	mov    DWORD PTR [esi+0x6a14283d],0x86cb5973
  414d38:	xchg   ecx,eax
  414d39:	(bad)  
  414d3a:	ja     0x414d49
  414d3c:	cmp    edi,edx
  414d3e:	xor    ebx,0xaad7035
  414d44:	leave  
  414d45:	lahf   
  414d46:	sti    
  414d47:	les    ecx,FWORD PTR [eax+0x74]
  414d4a:	mov    dh,0xb9
  414d4c:	rol    BYTE PTR [ebp-0x23c485be],0xfe
  414d53:	js     0x414d81
  414d55:	adc    al,0x20
  414d57:	std    
  414d58:	pop    ds
  414d59:	cmp    al,0xb3
  414d5b:	jmp    0x8f1a:0x27192488
  414d62:	pop    es
  414d63:	push   esi
  414d64:	idiv   edx
  414d66:	out    0xb7,eax
  414d68:	fidivr WORD PTR [esi+edx*2+0x3]
  414d6c:	aam    0xc
  414d6e:	or     dh,BYTE PTR [ecx]
  414d70:	fiadd  DWORD PTR [edx-0x2a2e1cc1]
  414d76:	add    eax,0x6d63b6cb
  414d7b:	clc    
  414d7c:	gs std 
  414d7e:	fiadd  WORD PTR [edx+0x7e0d7712]
  414d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d85:	mov    edi,0x18f0c9c8
  414d8a:	sbb    BYTE PTR [ecx],bh
  414d8c:	mov    eax,ecx
  414d8e:	enter  0x2716,0x6b
  414d92:	mov    dh,0xb0
  414d94:	sub    eax,0x743fef2
  414d99:	iret   
  414d9a:	out    0x96,al
  414d9c:	add    BYTE PTR [edi-0x3149295e],0xb9
  414da3:	mov    eax,0x9273829f
  414da8:	xchg   ebx,eax
  414da9:	mov    edx,0x9fd99029
  414dae:	cdq    
  414daf:	ret    
  414db0:	std    
  414db1:	(bad)  
  414db2:	hlt    
  414db3:	pop    ebx
  414db4:	sub    bl,cl
  414db6:	fxch   st(2)
  414db8:	dec    ecx
  414db9:	add    eax,0x59ad91c1
  414dbe:	js     0x414dd9
  414dc0:	xchg   DWORD PTR ds:0x8f4b9341,ecx
  414dc6:	dec    edi
  414dc7:	test   al,0x95
  414dc9:	fs jb  0x414d74
  414dcc:	mov    edi,0x1fa7db2d
  414dd1:	xor    esp,DWORD PTR gs:[edi+edx*1]
  414dd5:	fild   WORD PTR [edi-0x17]
  414dd8:	(bad)  
  414dd9:	xor    al,0xb2
  414ddb:	cmp    ch,al
  414ddd:	push   cs
  414dde:	std    
  414ddf:	push   es
  414de0:	xchg   edx,eax
  414de1:	test   eax,0x46ffd13e
  414de6:	cmpxchg BYTE PTR [esi+0x2c],bl
  414dea:	or     BYTE PTR cs:[esi+0x25],bl
  414dee:	mov    eax,ds:0xc8238adb
  414df3:	push   cs
  414df4:	leave  
  414df5:	jo     0x414d77
  414df7:	std    
  414df8:	cmp    al,0x7f
  414dfa:	lock xchg esp,eax
  414dfc:	mov    ebx,0x7182cfb2
  414e01:	push   es
  414e02:	pop    ebp
  414e03:	push   ds
  414e04:	jle    0x414e31
  414e06:	jge    0x414e0c
  414e08:	mov    eax,ds:0x6e5cb5f5
  414e0d:	arpl   WORD PTR [ecx+0x664e7af0],dx
  414e13:	aaa    
  414e14:	imul   ebx,eax,0x2ba8175d
  414e1a:	stos   BYTE PTR es:[edi],al
  414e1b:	dec    esp
  414e1c:	jbe    0x414df2
  414e1e:	xchg   ebp,eax
  414e1f:	mov    ah,0x91
  414e21:	push   edi
  414e22:	mov    cl,0x4a
  414e24:	inc    ebx
  414e25:	jo     0x414e3c
  414e27:	(bad)  
  414e28:	in     al,dx
  414e29:	inc    ebx
  414e2a:	sub    cl,ah
  414e2c:	mov    ecx,0x8d131c58
  414e31:	fmul   st,st(0)
  414e33:	ret    
  414e34:	sbb    eax,DWORD PTR ds:0x96b1ac3d
  414e3a:	xchg   edx,eax
  414e3b:	jne    0x414eb8
  414e3d:	push   ecx
  414e3e:	test   eax,0x6bd22cb8
  414e43:	mov    dl,0xe9
  414e45:	ins    BYTE PTR es:[edi],dx
  414e46:	repz aas 
  414e48:	cmp    al,BYTE PTR [ecx+0x46]
  414e4b:	ret    0x38ec
  414e4e:	fninit 
  414e50:	mov    al,0x40
  414e52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e53:	aas    
  414e54:	adc    eax,0xf9ff5be
  414e59:	adc    eax,0xe723b416
  414e5e:	dec    ecx
  414e5f:	popa   
  414e60:	sbb    DWORD PTR [edi+0x1c],eax
  414e63:	test   al,0x15
  414e65:	das    
  414e66:	dec    ecx
  414e67:	sbb    ah,cl
  414e69:	inc    bp
  414e6b:	jno    0x414e85
  414e6d:	fdivp  st(6),st
  414e6f:	ins    DWORD PTR es:[edi],dx
  414e70:	loop   0x414eab
  414e72:	jge    0x414e53
  414e74:	mov    dh,0x8a
  414e76:	sbb    DWORD PTR [edi-0x7910e67f],edi
  414e7c:	cmp    esi,DWORD PTR [ecx+0x4e]
  414e7f:	mov    ebx,es
  414e81:	(bad)  
  414e82:	sub    BYTE PTR [edx],0xab
  414e85:	pop    esp
  414e86:	ja     0x414e73
  414e88:	loope  0x414e2c
  414e8a:	(bad)  
  414e8b:	(bad)  
  414e8d:	inc    esp
  414e8e:	std    
  414e8f:	push   0xf881f29
  414e94:	(bad)  
  414e96:	dec    edx
  414e97:	imul   edx,DWORD PTR [edi+0x34],0xffffff8a
  414e9b:	(bad)  
  414e9c:	imul   edi,DWORD PTR [edx+0x3f84337c],0xa56d6a34
  414ea6:	mov    eax,0xac81ba4e
  414eab:	pop    ds
  414eac:	retf   
  414ead:	out    dx,al
  414eae:	int3   
  414eaf:	add    DWORD PTR [edx],0xa8215534
  414eb5:	push   ss
  414eb6:	dec    edi
  414eb7:	test   BYTE PTR [edi-0x180e3b5a],bh
  414ebd:	dec    ebp
  414ebe:	andps  xmm3,XMMWORD PTR [edi-0x24]
  414ec2:	or     ebx,edx
  414ec4:	inc    ecx
  414ec5:	retf   
  414ec6:	mov    ch,0x98
  414ec8:	cli    
  414ec9:	mov    ebx,0x4db4d60
  414ece:	adc    ebx,DWORD PTR [ebx+0x69]
  414ed1:	add    eax,DWORD PTR es:[edi]
  414ed4:	or     BYTE PTR [ebx],bh
  414ed6:	xchg   esi,eax
  414ed7:	dec    esp
  414ed8:	aaa    
  414ed9:	sbb    esp,DWORD PTR [ebx-0x77]
  414edc:	push   0xffffffe5
  414ede:	add    bl,BYTE PTR [eax+0xd44811a]
  414ee4:	jbe    0x414ebf
  414ee6:	neg    edx
  414ee8:	mov    edi,0xdcea384
  414eed:	mov    eax,0x5fc2600
  414ef2:	push   es
  414ef3:	and    esp,ecx
  414ef5:	pop    ds
  414ef6:	mov    bl,0xee
  414ef8:	or     edx,esp
  414efa:	fcomp  QWORD PTR [edi-0x7a]
  414efd:	cmp    edx,eax
  414eff:	jno    0x414f68
  414f01:	or     al,0xdf
  414f03:	inc    ebx
  414f04:	sbb    DWORD PTR [ebx],eax
  414f06:	sbb    esp,0xca3d1242
  414f0c:	and    ebx,DWORD PTR [esi+0x3b]
  414f0f:	icebp  
  414f10:	pusha  
  414f11:	inc    ebp
  414f12:	sbb    BYTE PTR [edx],0x16
  414f15:	mov    bl,0x19
  414f17:	mov    eax,ds:0x2a9b0125
  414f1c:	xchg   ebp,eax
  414f1d:	cwde   
  414f1e:	mov    ds:0x44474f1a,eax
  414f23:	test   eax,0x658e9135
  414f28:	popa   
  414f29:	pop    ebx
  414f2a:	popa   
  414f2b:	rcl    DWORD PTR [eax+0x17c994c6],cl
  414f31:	jae    0x414f7f
  414f33:	in     al,dx
  414f34:	out    0x1e,eax
  414f36:	sbb    al,0xed
  414f38:	jo     0x414f59
  414f3a:	loope  0x414f03
  414f3c:	clc    
  414f3d:	jb     0x414f4c
  414f3f:	clc    
  414f40:	test   BYTE PTR [ebx+eax*4-0x7b],bl
  414f44:	ins    DWORD PTR es:[edi],dx
  414f45:	adc    eax,0x7319500
  414f4a:	(bad)  
  414f4b:	ds push cs
  414f4d:	in     al,0x5d
  414f4f:	inc    edi
  414f50:	pop    esp
  414f51:	out    0xb,al
  414f53:	outs   dx,DWORD PTR ds:[esi]
  414f54:	sub    dl,BYTE PTR [ebx-0x7af620c4]
  414f5a:	jb     0x414f9b
  414f5c:	in     eax,0xa5
  414f5e:	rcr    DWORD PTR [edx],cl
  414f60:	cmp    BYTE PTR [esi],ch
  414f62:	js     0x414fbc
  414f64:	xchg   esi,eax
  414f65:	push   ecx
  414f66:	mov    ch,0x70
  414f68:	mov    bl,0x70
  414f6a:	inc    edi
  414f6b:	sbb    DWORD PTR [ecx],edi
  414f6d:	mov    ah,0xc0
  414f6f:	out    0xd7,eax
  414f71:	out    dx,al
  414f72:	dec    esi
  414f73:	repnz dec esi
  414f75:	mov    ah,0x98
  414f77:	or     DWORD PTR [eax-0x4dbba66e],edx
  414f7d:	jle    0x414fb6
  414f7f:	pop    es
  414f80:	push   ss
  414f81:	jns    0x414f08
  414f83:	jg     0x414f1c
  414f85:	jns    0x414f0e
  414f87:	loop   0x414f20
  414f89:	fcmovne st,st(2)
  414f8b:	lock xor BYTE PTR [eax],bl
  414f8e:	in     eax,0xd2
  414f90:	pop    esi
  414f91:	mov    al,ds:0x1ce14a5c
  414f96:	arpl   WORD PTR [ebp+0x45eba2ae],sp
  414f9c:	fdivr  QWORD PTR [ebx-0x69493911]
  414fa2:	push   es
  414fa3:	mov    ah,0xe5
  414fa5:	or     DWORD PTR [eax],esp
  414fa7:	popa   
  414fa8:	mov    al,ds:0x4be90690
  414fad:	jmp    0x7f00:0x7efdec18
  414fb4:	mov    eax,0x61668fcc
  414fb9:	sbb    eax,0xb0643061
  414fbe:	ja     0x414fb0
  414fc0:	inc    edi
  414fc1:	cmp    ebp,DWORD PTR [ebx+0x141dc80]
  414fc7:	je     0x414f77
  414fc9:	jns    0x414f75
  414fcb:	push   ebx
  414fcc:	adc    dl,bh
  414fce:	js     0x414fa1
  414fd0:	aam    0x9a
  414fd2:	sbb    edi,DWORD PTR [edx+0x7a822cd1]
  414fd8:	shl    esi,1
  414fda:	mov    ds:0xd493b2a5,eax
  414fdf:	retf   0x321c
  414fe2:	adc    al,0x6e
  414fe4:	outs   dx,DWORD PTR ds:[esi]
  414fe5:	sub    ecx,DWORD PTR [ebx+0x15]
  414fe8:	push   0x70
  414fea:	sub    DWORD PTR [ebp+ecx*8+0x33962cb6],eax
  414ff1:	leave  
  414ff2:	add    eax,DWORD PTR [eax-0x7d6ce65c]
  414ff8:	ins    DWORD PTR es:[edi],dx
  414ff9:	mov    eax,ds:0x97697b6e
  414ffe:	scas   eax,DWORD PTR es:[edi]
  414fff:	jno    0x41503e
  415001:	jle    0x414f86
  415003:	jb     0x415028
  415005:	xlat   BYTE PTR ds:[ebx]
  415006:	push   ecx
  415007:	iret   
  415008:	and    DWORD PTR [edx],eax
  41500a:	xor    edi,DWORD PTR [eax-0x5d63be43]
  415010:	dec    esp
  415011:	out    dx,al
  415012:	test   DWORD PTR [edi+0x4c7435bd],ebx
  415018:	enter  0xaafd,0x68
  41501c:	retf   0x234
  41501f:	setge  ah
  415022:	pop    ecx
  415023:	and    bh,BYTE PTR [ebp+0x22d7df8c]
  415029:	cmp    eax,eax
  41502b:	add    ebx,ecx
  41502d:	out    dx,eax
  41502e:	cmc    
  41502f:	inc    DWORD PTR [ebx-0x26bf0e53]
  415035:	sub    DWORD PTR [esi+0x1],eax
  415038:	ins    BYTE PTR es:[edi],dx
  415039:	xchg   ebp,eax
  41503a:	jb     0x41505c
  41503c:	or     edi,DWORD PTR [eax]
  41503e:	xchg   edi,eax
  41503f:	jne    0x414fc3
  415041:	add    eax,0xf4e6b4d9
  415046:	cld    
  415047:	cli    
  415048:	sub    DWORD PTR [ecx+0x3e98cc23],0x7f152805
  415052:	pop    ds
  415053:	and    eax,0x6d22bf5e
  415058:	adc    eax,0xc04d9a3c
  41505d:	mov    ch,0x97
  41505f:	jmp    0x33db9164
  415064:	daa    
  415065:	aaa    
  415066:	loop   0x415087
  415068:	sahf   
  415069:	xchg   ebx,eax
  41506a:	fbstp  TBYTE PTR [ebx]
  41506c:	mov    eax,ds:0x2fdb978e
  415071:	push   ds
  415072:	cmp    DWORD PTR [ecx],0xb
  415075:	cmp    ecx,ebx
  415077:	dec    ebx
  415078:	loopne 0x41507d
  41507a:	fs inc eax
  41507c:	imul   ebx,DWORD PTR [ebx-0x31a3ef5e],0xd
  415083:	sbb    dh,BYTE PTR [esi+0x74]
  415086:	jge    0x41504a
  415088:	push   0xfffffffd
  41508a:	cwde   
  41508b:	(bad)  
  41508d:	jp     0x415045
  41508f:	dec    ebp
  415090:	xchg   edx,eax
  415091:	adc    eax,0xd0973c83
  415096:	xchg   esi,eax
  415097:	lock imul ecx,DWORD PTR [edx+0x7b],0x4a0df223
  41509f:	and    al,0xac
  4150a1:	mov    eax,0xb6435a26
  4150a6:	jge    0x415036
  4150a8:	cld    
  4150a9:	imul   ebx,DWORD PTR [eax+eax*4],0x8d18848a
  4150b0:	xchg   edi,ecx
  4150b2:	shl    DWORD PTR [eax],1
  4150b4:	jmp    0x15a1:0x8278dbe6
  4150bb:	in     al,0x3c
  4150bd:	sub    edi,DWORD PTR [eax+0x52e1e541]
  4150c3:	xor    BYTE PTR [esp+ebp*1],bl
  4150c6:	jmp    0x9572:0x9730ec13
  4150cd:	js     0x4150d8
  4150cf:	xchg   ebx,eax
  4150d0:	out    0x2d,eax
  4150d2:	inc    esp
  4150d3:	loop   0x4150fb
  4150d5:	aam    0x9a
  4150d7:	lock or al,0x9d
  4150da:	popf   
  4150db:	retf   
  4150dc:	mov    eax,ds:0x6416cf6a
  4150e1:	adc    esp,0x1
  4150e4:	aas    
  4150e5:	or     DWORD PTR es:[edx+0x1],ecx
  4150e9:	push   cs
  4150ea:	int3   
  4150eb:	out    0x38,al
  4150ed:	jne    0x41507c
  4150ef:	push   ds
  4150f0:	jmp    0x4150b7
  4150f2:	js     0x415103
  4150f4:	leave  
  4150f5:	mov    eax,0xcf8efe74
  4150fa:	pop    esp
  4150fb:	sub    eax,0x87c8858d
  415100:	add    esp,ebx
  415102:	mov    dl,0xcb
  415104:	out    0x13,al
  415106:	in     eax,dx
  415107:	dec    ebx
  415108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415109:	jp     0x415127
  41510b:	out    dx,eax
  41510c:	into   
  41510d:	or     ebx,eax
  41510f:	das    
  415110:	xor    bl,BYTE PTR [ebx]
  415112:	xchg   eax,ebx
  415114:	or     DWORD PTR [esi-0x7145834a],0x20
  41511b:	or     DWORD PTR [ebx-0x461cb8b6],esi
  415121:	jae    0x415131
  415123:	adc    bl,BYTE PTR [eax]
  415125:	mov    ebx,0xbfced16a
  41512a:	jbe    0x415117
  41512c:	and    dl,BYTE PTR [edi+0x2e]
  41512f:	enter  0x9245,0xf4
  415133:	mov    DWORD PTR [ecx*2-0xf6c991e],esp
  41513a:	cmp    eax,0x36
  41513d:	push   edx
  41513e:	test   eax,esp
  415140:	mov    dh,0xd6
  415142:	popf   
  415143:	mov    DWORD PTR [eax+0x4d],ebx
  415146:	adc    ah,0xce
  415149:	bound  esi,QWORD PTR [ebp-0x23]
  41514c:	push   ebx
  41514d:	loopne 0x4150e7
  41514f:	dec    ebx
  415150:	ins    BYTE PTR es:[edi],dx
  415151:	or     BYTE PTR [edx+0x6af181df],bh
  415157:	and    dh,BYTE PTR [edi-0x2e005826]
  41515d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41515e:	dec    edi
  41515f:	mov    dh,0x88
  415161:	and    al,0x5c
  415163:	mov    esp,0xd0d9e69c
  415168:	add    edx,DWORD PTR [eax]
  41516a:	aaa    
  41516b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41516c:	push   ebx
  41516d:	xchg   edx,eax
  41516e:	imul   edx,DWORD PTR [edx+0x7],0xfffffffb
  415172:	add    eax,0xb0999ab8
  415177:	in     eax,dx
  415178:	inc    ebp
  415179:	inc    esi
  41517a:	or     BYTE PTR [ebx-0x31],cl
  41517d:	stos   DWORD PTR es:[edi],eax
  41517e:	js     0x415137
  415180:	mov    eax,0x2ced8965
  415185:	jns    0x415173
  415187:	leave  
  415188:	and    eax,0x4edcff4f
  41518d:	jb     0x4151fc
  41518f:	dec    eax
  415190:	ds test eax,0xe9e8395c
  415196:	cmp    esp,DWORD PTR [ebx-0x71]
  415199:	jp     0x4151d2
  41519b:	xchg   ebx,eax
  41519c:	or     al,BYTE PTR [ebx+0x22af26c5]
  4151a2:	sahf   
  4151a3:	mov    cl,0xbc
  4151a5:	pop    DWORD PTR [edi-0x15]
  4151a8:	fsubr  DWORD PTR [ecx+0xf]
  4151ab:	inc    ebp
  4151ac:	call   0xa2e96730
  4151b1:	(bad)  
  4151b3:	jno    0x41513d
  4151b5:	inc    ecx
  4151b6:	stos   DWORD PTR es:[edi],eax
  4151b7:	mov    bl,0xed
  4151b9:	jns    0x415238
  4151bb:	nop
  4151bc:	inc    ebx
  4151bd:	mov    dh,BYTE PTR [eax-0x65]
  4151c0:	dec    esp
  4151c1:	xchg   esp,eax
  4151c2:	mov    ebx,0x4499fb73
  4151c7:	int3   
  4151c8:	mov    dh,0xf1
  4151ca:	mov    edi,0x695603f3
  4151cf:	jl     0x41519e
  4151d1:	sbb    eax,0x3a654ebb
  4151d6:	jmp    0xd9de85a9
  4151db:	in     al,0x13
  4151dd:	loope  0x415209
  4151df:	fidiv  WORD PTR [esi-0x3ac995d6]
  4151e5:	jl     0x415175
  4151e7:	jmp    0x8183:0xc6f5f985
  4151ee:	xor    al,0x7
  4151f0:	pushf  
  4151f1:	mov    eax,ds:0x996154ea
  4151f6:	int    0xed
  4151f8:	xor    ebx,esp
  4151fa:	sub    al,0xe0
  4151fc:	sub    al,0x82
  4151fe:	cmp    ecx,DWORD PTR [edx+0x43]
  415201:	bound  edx,QWORD PTR [eax-0x5c]
  415204:	adc    ebx,DWORD PTR [edi*2-0x72c051ec]
  41520b:	lods   al,BYTE PTR ds:[esi]
  41520c:	mov    ?,WORD PTR [edx+0x4b336c86]
  415212:	pop    fs
  415214:	mov    bl,0x8a
  415216:	dec    ebp
  415217:	fist   WORD PTR [edi]
  415219:	test   al,0x24
  41521b:	out    0x38,eax
  41521d:	cld    
  41521e:	inc    ebx
  41521f:	lea    ebx,[esi+0x61df6bfd]
  415225:	sub    dh,ah
  415227:	add    BYTE PTR [edi+0x2e71eee7],dl
  41522d:	or     al,0x69
  41522f:	pop    eax
  415230:	fidivr WORD PTR [esi-0x10]
  415233:	loopne 0x41525e
  415235:	sub    ch,dl
  415237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415238:	adc    BYTE PTR [ebx+0x69],bl
  41523b:	mov    ds:0xabaced40,al
  415240:	or     DWORD PTR [edx+0x488c467d],ecx
  415246:	fwait
  415247:	jb     0x4151e3
  415249:	jae    0x415277
  41524b:	sbb    eax,0xdb23d3
  415250:	inc    esi
  415251:	jbe    0x41520f
  415253:	xor    eax,0xd0e9e880
  415258:	mov    ch,0xa6
  41525a:	inc    ebp
  41525b:	and    eax,0x56986c54
  415260:	push   0x60
  415262:	push   0xffffffe2
  415264:	sub    ah,BYTE PTR [esi+ebx*1+0x55]
  415268:	jmp    0x41520f
  41526a:	dec    ebp
  41526b:	xor    BYTE PTR [edx],dh
  41526d:	push   cs
  41526e:	pop    ds
  41526f:	push   eax
  415270:	pop    ebx
  415271:	test   al,0xf7
  415273:	cmp    dh,BYTE PTR [ebx+0xb]
  415276:	xchg   ecx,eax
  415277:	outs   dx,BYTE PTR ds:[esi]
  415278:	rep outs dx,DWORD PTR ds:[esi]
  41527a:	inc    edx
  41527b:	xlat   BYTE PTR ds:[ebx]
  41527c:	mov    BYTE PTR [eax],bh
  41527e:	pop    edx
  41527f:	xchg   ebx,eax
  415280:	stc    
  415281:	test   BYTE PTR [edi-0x2bc8e585],dh
  415287:	fdiv   QWORD PTR [edx]
  415289:	hlt    
  41528a:	jae    0x4152d1
  41528c:	mov    al,0x7c
  41528e:	in     al,dx
  41528f:	ror    DWORD PTR [edi-0x52c0ec],1
  415295:	xor    cl,dh
  415297:	out    0x6b,al
  415299:	outs   dx,BYTE PTR ds:[esi]
  41529a:	or     esi,eax
  41529c:	push   cs
  41529d:	les    edi,FWORD PTR [esi-0x4ec64ea3]
  4152a3:	dec    eax
  4152a4:	shl    BYTE PTR [esi-0x10],0x7a
  4152a8:	mov    ebx,0xa70159a7
  4152ad:	mov    al,ds:0xf14c6523
  4152b2:	(bad)  
  4152b4:	mov    al,ss:0xc8d9d689
  4152ba:	pop    ss
  4152bb:	sbb    ah,bh
  4152bd:	adc    BYTE PTR [ebx+0x16],cl
  4152c0:	ficom  WORD PTR [edi+0x22e79122]
  4152c6:	and    eax,0x549259b
  4152cb:	push   esp
  4152cc:	cmp    BYTE PTR [edx+ebx*4+0x4d],dl
  4152d0:	push   ds
  4152d1:	sub    ebp,ecx
  4152d3:	(bad)  
  4152d4:	mov    cl,0x8b
  4152d6:	jmp    0x7a2f:0x67f2aa46
  4152dd:	out    0xd3,al
  4152df:	xchg   ebp,eax
  4152e0:	loop   0x4152ce
  4152e2:	xor    ch,ch
  4152e4:	scas   eax,DWORD PTR es:[edi]
  4152e5:	jmp    0xe72a:0x54935b51
  4152ec:	rcr    DWORD PTR [edx+esi*8],cl
  4152ef:	pushf  
  4152f0:	pop    edx
  4152f1:	out    dx,al
  4152f2:	js     0x415291
  4152f4:	adc    eax,0x7e89691c
  4152f9:	fisttp WORD PTR [ecx-0x80]
  4152fc:	rcr    DWORD PTR [eax],1
  4152fe:	ret    
  4152ff:	jb     0x4152bf
  415301:	xchg   ebp,eax
  415302:	mov    ebp,0x6783fdc9
  415307:	push   ebp
  415308:	or     ah,BYTE PTR [edi+0x7b]
  41530b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530c:	xchg   esp,eax
  41530d:	and    eax,0x392026c0
  415312:	and    BYTE PTR [edx],bh
  415314:	xchg   ebp,eax
  415315:	cmp    al,0x35
  415317:	xor    ebp,ebx
  415319:	cmp    BYTE PTR [esi],0x66
  41531c:	mov    ah,BYTE PTR [edi+0x72393a8c]
  415322:	fwait
  415323:	lds    edx,FWORD PTR [eax+0x79]
  415326:	loope  0x415337
  415328:	arpl   WORD PTR ds:0x379c43a4,ax
  41532e:	xchg   ebp,eax
  41532f:	dec    esi
  415330:	daa    
  415331:	adc    al,0x69
  415333:	xchg   esi,eax
  415334:	mov    esp,0xd5953383
  415339:	mov    esp,0xb2ff14e3
  41533e:	mov    ds,WORD PTR [edi]
  415340:	push   ecx
  415341:	or     al,0x98
  415343:	mov    dh,0x7c
  415345:	mov    esi,0xc58c467f
  41534a:	lds    edi,FWORD PTR [eiz*2+0x7409fc7b]
  415351:	cld    
  415352:	mov    ebp,0x591ffda4
  415357:	out    0xe7,al
  415359:	ins    DWORD PTR es:[edi],dx
  41535a:	adc    al,0x82
  41535c:	outs   dx,BYTE PTR ds:[esi]
  41535d:	mov    cl,0xc7
  41535f:	push   ecx
  415360:	aam    0x4b
  415362:	cli    
  415363:	popa   
  415364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415365:	mov    eax,DWORD PTR [ebx+0x54]
  415368:	jb     0x415325
  41536a:	shl    DWORD PTR [edi],1
  41536c:	xlat   BYTE PTR ds:[ebx]
  41536d:	fdivp  st(2),st
  41536f:	adc    esi,DWORD PTR [ecx]
  415371:	sub    dl,BYTE PTR [edx-0x2b0efc61]
  415377:	jge    0x4153e8
  415379:	add    BYTE PTR [ebx],dl
  41537b:	hlt    
  41537c:	xor    DWORD PTR ds:[esp+ebx*8-0x2a3fb68a],0x3c14bfb5
  415388:	outs   dx,DWORD PTR ds:[esi]
  415389:	out    0x52,al
  41538b:	mov    eax,ds:0x9b90d68f
  415390:	iret   
  415391:	popa   
  415392:	(bad)  
  415393:	iret   
  415394:	jbe    0x41533e
  415396:	mov    BYTE PTR [di],bl
  415399:	sar    ah,cl
  41539b:	sub    eax,0x92406c59
  4153a0:	inc    eax
  4153a1:	adc    ch,BYTE PTR [ecx]
  4153a3:	fisubr DWORD PTR ds:0xef9c1609
  4153a9:	ficom  WORD PTR [ebx-0x6d284993]
  4153af:	and    eax,0x6057aacd
  4153b4:	jp     0x41537c
  4153b6:	call   0x3c2f:0x4f8674aa
  4153bd:	pop    edi
  4153be:	jo     0x4153bb
  4153c0:	loopne 0x415379
  4153c2:	add    ebx,DWORD PTR [esi-0x3cc52dbc]
  4153c8:	sti    
  4153c9:	push   edi
  4153ca:	clc    
  4153cb:	mov    dl,0x8b
  4153cd:	test   bh,bl
  4153cf:	push   ecx
  4153d0:	mov    bl,0xb3
  4153d2:	and    DWORD PTR [ebx+edx*2],esp
  4153d5:	sub    dl,BYTE PTR [eax-0x24f51c2b]
  4153db:	(bad)  
  4153dd:	mov    dh,0x6
  4153df:	mov    edx,0xab40916c
  4153e4:	outs   dx,BYTE PTR ds:[esi]
  4153e5:	das    
  4153e6:	adc    DWORD PTR [edx-0x6e],ebx
  4153e9:	shr    BYTE PTR [ebp+0x285fcd8e],1
  4153ef:	fmul   QWORD PTR [esi]
  4153f1:	mov    ecx,0x2647646f
  4153f6:	test   ebp,0x17e3dd90
  4153fc:	mov    dl,0x9d
  4153fe:	fmul   DWORD PTR [esi]
  415400:	fidivr DWORD PTR [edx+0x5b30e471]
  415406:	add    eax,DWORD PTR [ebx-0x56f9a70f]
  41540c:	icebp  
  41540d:	lds    esp,FWORD PTR [ebp+0x7bef5cd2]
  415413:	mov    BYTE PTR [edx-0xc15c37b],cl
  415419:	rol    BYTE PTR [edi+0x5b9224a7],0xa
  415420:	sbb    al,0x6b
  415422:	(bad)  
  415423:	mov    ah,0x73
  415425:	mov    edi,0xa2fa82bb
  41542a:	adc    al,0x1f
  41542c:	push   cs
  41542d:	addr16 pop ss
  41542f:	inc    esi
  415430:	test   bl,bh
  415432:	adc    al,bl
  415434:	lods   al,BYTE PTR ds:[esi]
  415435:	stos   BYTE PTR es:[edi],al
  415436:	out    0xd3,al
  415438:	ret    0x4fa1
  41543b:	fxam   
  41543d:	scas   al,BYTE PTR es:[edi]
  41543e:	sbb    DWORD PTR [ebx+ebp*2-0x48],esp
  415442:	loope  0x415470
  415444:	xchg   edx,eax
  415445:	adc    ebp,edx
  415447:	repnz jmp 0xee76:0xa33fe183
  41544f:	(bad)  
  415451:	xlat   BYTE PTR ds:[ebx]
  415452:	push   0xffffffbf
  415454:	jmp    0x50f34d3f
  415459:	bound  edx,QWORD PTR [edx+0xc]
  41545c:	adc    DWORD PTR [ebx+0x1b2d9cca],edi
  415462:	jl     0x415447
  415464:	xchg   ecx,eax
  415465:	cmp    al,0x9e
  415467:	mov    edi,0x6013a150
  41546c:	mov    ds:0xd6001ef,eax
  415471:	inc    ecx
  415472:	mov    eax,0x9b4f2504
  415477:	icebp  
  415478:	sti    
  415479:	daa    
  41547a:	sti    
  41547b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41547d:	ffree  st(3)
  41547f:	sub    eax,0x104c115b
  415484:	fxam   
  415486:	xlat   BYTE PTR ds:[ebx]
  415487:	mov    edi,0xa1f77738
  41548c:	shl    BYTE PTR [edi+0xd],cl
  41548f:	and    esi,esp
  415491:	jnp    0x41545e
  415493:	mov    ah,0xe7
  415495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415496:	ret    0x7356
  415499:	mov    eax,0xa1d31aca
  41549e:	xchg   edi,eax
  41549f:	stos   DWORD PTR es:[edi],eax
  4154a0:	sbb    eax,0x15d241c5
  4154a5:	mov    edi,0xd544c5f8
  4154aa:	call   0xa6aa2dda
  4154af:	rol    DWORD PTR [edi],cl
  4154b1:	jne    0x41547d
  4154b3:	sub    ch,0x28
  4154b6:	shl    eax,1
  4154b8:	js     0x4154a1
  4154ba:	std    
  4154bb:	add    BYTE PTR [esi],ah
  4154bd:	mov    DWORD PTR [esi-0x3e390ac7],esp
  4154c3:	xor    al,0xcf
  4154c5:	gs das 
  4154c7:	add    DWORD PTR [eax+0x1],ecx
  4154ca:	aaa    
  4154cb:	xchg   esi,eax
  4154cc:	xchg   edx,eax
  4154cd:	and    al,0x7b
  4154d0:	call   DWORD PTR [esi]
  4154d2:	mov    eax,0xf1d8e806
  4154d7:	fisttp QWORD PTR [esi+esi*8+0x4bf5c4a3]
  4154de:	loopne 0x41552f
  4154e0:	(bad)  
  4154e1:	mov    edi,0xda2429fb
  4154e6:	pop    esp
  4154e7:	push   es
  4154e8:	lods   eax,DWORD PTR ds:[esi]
  4154e9:	dec    eax
  4154ea:	mov    eax,ds:0xd63b42cb
  4154ef:	cs pushf 
  4154f1:	push   0x5a465b75
  4154f6:	sti    
  4154f7:	int3   
  4154f8:	scas   al,BYTE PTR es:[edi]
  4154f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154fa:	hlt    
  4154fb:	dec    ebx
  4154fc:	xchg   esp,eax
  4154fd:	and    edx,DWORD PTR [ecx+edi*2+0x1f]
  415501:	push   cs
  415502:	dec    edi
  415503:	mov    ah,0x7c
  415505:	push   eax
  415506:	gs inc ax
  415509:	outs   dx,BYTE PTR ds:[esi]
  41550a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41550b:	stos   BYTE PTR es:[edi],al
  41550c:	out    0xcb,eax
  41550e:	xor    bl,BYTE PTR [esi]
  415510:	imul   ecx,DWORD PTR [edx*1-0x71786272],0xa47e2367
  41551b:	(bad)  
  41551c:	mov    ah,0xd2
  41551e:	sbb    BYTE PTR [eax*4+0x78498ae],dl
  415525:	fsubr  DWORD PTR [edi+esi*4]
  415528:	inc    esp
  415529:	sub    edx,DWORD PTR [edx]
  41552b:	xor    DWORD PTR [ebx+0x65],0xb06c089a
  415532:	ret    0xeff5
  415535:	push   ebx
  415536:	ins    DWORD PTR es:[edi],dx
  415537:	push   esp
  415538:	stos   DWORD PTR es:[edi],eax
  415539:	(bad)  [eax-0x39b839ad]
  41553f:	sub    al,0x69
  415541:	jmp    0x7f127281
  415546:	push   ebx
  415547:	xchg   ebp,eax
  415548:	sub    esi,DWORD PTR [eax-0x2c]
  41554b:	loope  0x41553e
  41554d:	fadd   st(7),st
  41554f:	xchg   edi,eax
  415550:	sbb    esi,DWORD PTR [esi+0x14]
  415553:	retf   
  415554:	jl     0x41553b
  415556:	out    dx,eax
  415557:	push   esp
  415558:	retf   
  415559:	sbb    BYTE PTR [eax],cl
  41555b:	jmp    0x415500
  41555d:	and    DWORD PTR [esi+0x1f973803],esi
  415563:	les    eax,FWORD PTR [ebx+edx*1]
  415566:	mov    dl,0x2
  415568:	or     esp,eax
  41556a:	fwait
  41556b:	imul   esi,DWORD PTR [ecx],0x25
  41556e:	mov    edi,0xe8125566
  415573:	test   DWORD PTR [edx+0x5a],edi
  415576:	adc    esi,DWORD PTR gs:[edi]
  415579:	sub    ch,BYTE PTR [edi-0x4cf15cd]
  41557f:	or     eax,0x34dab96
  415584:	leave  
  415585:	data16 in al,0x9e
  415588:	jmp    0xd09e1cf7
  41558d:	neg    ch
  41558f:	outs   dx,BYTE PTR ds:[esi]
  415590:	imul   BYTE PTR [ecx]
  415592:	gs push esp
  415594:	out    dx,eax
  415595:	es pop esi
  415597:	mov    edi,0xf0f873cb
  41559c:	fimul  DWORD PTR [edi+0x7693a887]
  4155a2:	icebp  
  4155a3:	outs   dx,BYTE PTR ds:[esi]
  4155a4:	fs cdq 
  4155a6:	and    eax,0x5c657793
  4155ab:	sbb    al,0xd7
  4155ad:	push   ds
  4155ae:	bound  edi,QWORD PTR [ebx+0x67d3459]
  4155b4:	mov    ds:0xb858c26e,al
  4155b9:	sub    BYTE PTR [edx+0x73],ch
  4155bc:	add    DWORD PTR [esi],0xffffffb4
  4155bf:	xchg   edx,eax
  4155c0:	jno    0x415615
  4155c2:	sbb    BYTE PTR [eax-0x6a],bl
  4155c5:	hlt    
  4155c6:	adc    bl,BYTE PTR [ecx]
  4155c8:	lods   al,BYTE PTR ds:[esi]
  4155c9:	jecxz  0x415619
  4155cb:	cmp    ecx,ebx
  4155cd:	jo     0x4155bd
  4155cf:	and    eax,0xb3cf3ec7
  4155d4:	retf   0xf911
  4155d7:	jbe    0x41559f
  4155d9:	mov    al,ds:0x721215cc
  4155de:	outs   dx,DWORD PTR ds:[esi]
  4155df:	xchg   edx,eax
  4155e0:	xchg   esp,eax
  4155e1:	mov    ds:0xaf3384cb,al
  4155e6:	pop    edi
  4155e7:	leave  
  4155e8:	dec    ecx
  4155e9:	or     dh,BYTE PTR [eax+edi*8+0x77b0204]
  4155f0:	fist   WORD PTR [edi+0x7852ac0]
  4155f6:	pusha  
  4155f7:	cmp    al,0x11
  4155f9:	sahf   
  4155fa:	imul   esi,esp,0xdafbf548
  415600:	xchg   BYTE PTR [eax-0x7fe0dcd8],cl
  415606:	and    ecx,DWORD PTR [ecx+0x32f9a542]
  41560c:	ins    BYTE PTR es:[edi],dx
  41560d:	mov    ebp,0x17fad070
  415612:	mov    BYTE PTR [ebx+0x192f16c8],dh
  415618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415619:	cmp    dl,bl
  41561b:	lds    eax,FWORD PTR [edx+0x6b]
  41561e:	fwait
  41561f:	lea    ebx,[eax]
  415621:	xor    ecx,esp
  415623:	cmp    DWORD PTR [ebx],eax
  415625:	cmp    ch,BYTE PTR [edx]
  415627:	repnz xchg esp,eax
  415629:	adc    eax,0xeb56c611
  41562e:	add    eax,DWORD PTR [ebx+eax*2+0x280f596b]
  415635:	lahf   
  415636:	(bad)  
  415637:	fistp  WORD PTR [eax+0x18]
  41563a:	sub    BYTE PTR [eax],ch
  41563c:	lahf   
  41563d:	mov    edi,0x4d3cb109
  415642:	or     DWORD PTR [eax-0x2997f852],ebx
  415648:	push   0x4b64d2e3
  41564d:	xchg   esp,eax
  41564e:	adc    DWORD PTR [edi+esi*1+0x69],0x24078bf2
  415656:	cs inc edx
  415658:	dec    edx
  415659:	mov    bl,0x3b
  41565b:	mov    eax,0x9165778
  415660:	jne    0x4156b4
  415662:	retf   0x36f9
  415665:	mov    ds:0x3abaa851,al
  41566a:	pop    esp
  41566b:	cmp    eax,0x7b535406
  415670:	sti    
  415671:	sub    BYTE PTR [ecx-0x3],bl
  415674:	leave  
  415675:	mov    cl,0x5c
  415677:	not    BYTE PTR [si+0x18]
  41567b:	inc    edi
  41567c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41567d:	inc    eax
  41567e:	(bad)  
  41567f:	les    ebx,FWORD PTR [ebx+0x5e]
  415682:	leave  
  415683:	ins    BYTE PTR es:[edi],dx
  415684:	mov    ds:0xf2d66837,al
  415689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41568a:	bndldx bnd2,[ecx]
  41568d:	pop    cx
  41568f:	inc    esp
  415690:	stos   BYTE PTR es:[edi],al
  415691:	pop    eax
  415692:	sub    BYTE PTR [edi],0xc1
  415695:	outs   dx,BYTE PTR ds:[esi]
  415696:	pop    ecx
  415697:	adc    bl,BYTE PTR [edi+0x73adfdc8]
  41569d:	pop    ebp
  41569e:	cld    
  41569f:	adc    bl,BYTE PTR [eax-0x15]
  4156a2:	dec    BYTE PTR [esp+eiz*2-0x4f43a9ca]
  4156a9:	jg     0x4156cb
  4156ab:	xor    esp,esi
  4156ad:	cli    
  4156ae:	ficomp DWORD PTR [eax+0x4cc88a58]
  4156b4:	xchg   ebx,eax
  4156b5:	mov    ah,0xc6
  4156b7:	push   cs
  4156b8:	sub    bh,BYTE PTR [ecx+0x29]
  4156bb:	xor    eax,0x113045e1
  4156c0:	call   0xb5cb13b1
  4156c5:	stos   BYTE PTR es:[edi],al
  4156c6:	sahf   
  4156c7:	cdq    
  4156c8:	je     0x41573e
  4156ca:	dec    esi
  4156cb:	push   esp
  4156cc:	addr16 sub eax,0x32b0ac97
  4156d2:	imul   esp,DWORD PTR ds:0x9276cfc8,0xffffff8e
  4156d9:	int3   
  4156da:	inc    edx
  4156db:	pop    edx
  4156dc:	push   0x8bee1992
  4156e1:	dec    ebp
  4156e2:	mov    al,ds:0x2e7f2df2
  4156e7:	leave  
  4156e8:	popf   
  4156e9:	sub    DWORD PTR [esp+ebp*2+0x32d2744],edx
  4156f0:	jecxz  0x415691
  4156f2:	inc    ebx
  4156f3:	xor    BYTE PTR [edx+esi*2+0x1b],bh
  4156f7:	jb     0x415770
  4156f9:	push   ebx
  4156fa:	les    ebx,FWORD PTR [esp+esi*1-0x6d19bb53]
  415701:	cdq    
  415702:	sbb    DWORD PTR ds:0x3823d0cf,edi
  415708:	push   esp
  415709:	fmul   st,st(6)
  41570b:	(bad)  
  41570c:	sub    BYTE PTR [edi+ebx*2+0x5251f886],ch
  415713:	clc    
  415714:	lahf   
  415715:	sar    DWORD PTR [ebx+0x6760c243],1
  41571b:	out    dx,eax
  41571c:	repnz xor edx,DWORD PTR [edi-0x75]
  415720:	mov    BYTE PTR [eax+0x4d],dh
  415723:	arpl   sp,dx
  415725:	adc    al,0x40
  415727:	mov    fs,WORD PTR [eax+edi*2-0x1ebcc179]
  41572e:	mov    esp,0xd35ae829
  415733:	icebp  
  415734:	call   0x21ca:0xe3ef1caa
  41573b:	test   BYTE PTR [edi+ebx*8-0xcdbb947],0x1b
  415743:	mov    al,0x1
  415745:	pop    edi
  415746:	data16 mov ah,0x9c
  415749:	sbb    ebx,DWORD PTR [eax]
  41574b:	and    BYTE PTR [edx+0x52],al
  41574e:	out    0x2f,al
  415750:	or     al,0x0
  415752:	fmul   QWORD PTR [edi]
  415754:	inc    bh
  415756:	test   eax,0x9a5cf99
  41575b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41575c:	out    dx,al
  41575d:	push   esi
  41575e:	inc    edx
  41575f:	int    0x7c
  415761:	test   BYTE PTR [ebp+0x63],dl
  415764:	fbld   TBYTE PTR [edx+edx*8-0x3f3e40f4]
  41576b:	inc    esi
  41576c:	out    0xbf,eax
  41576e:	(bad)  
  41576f:	pop    ss
  415770:	pop    ecx
  415771:	scas   eax,DWORD PTR es:[edi]
  415772:	std    
  415773:	or     ecx,ebp
  415775:	push   cs
  415776:	or     BYTE PTR [edi+0x36],cl
  415779:	xchg   esp,eax
  41577a:	add    ah,BYTE PTR [eax-0x2b]
  41577d:	loope  0x415785
  41577f:	mov    esp,gs
  415781:	jne    0x41579b
  415783:	call   0xd730:0xc1e952aa
  41578a:	scas   al,BYTE PTR es:[edi]
  41578b:	and    al,0x46
  41578d:	cs xor eax,0x167196bd
  415793:	or     cl,BYTE PTR [eax]
  415795:	jo     0x41578d
  415797:	jge    0x41578e
  415799:	aaa    
  41579a:	fsub   st,st(7)
  41579c:	push   ss
  41579d:	mov    edx,0xbf7806fa
  4157a2:	sar    esp,0x24
  4157a5:	adc    al,0x54
  4157a7:	fbld   TBYTE PTR ds:0x62c7c9dc
  4157ad:	rcr    ebx,1
  4157af:	out    dx,eax
  4157b0:	in     eax,dx
  4157b1:	bnd jmp DWORD PTR [esi]
  4157b4:	sub    ah,bh
  4157b6:	mov    ah,bh
  4157b8:	mov    ch,0xc8
  4157ba:	cwde   
  4157bb:	xchg   ebp,eax
  4157bc:	inc    edi
  4157bd:	pop    es
  4157be:	les    edx,FWORD PTR [esi+0x45]
  4157c1:	dec    esp
  4157c2:	or     BYTE PTR [esi+0xc525f11],dh
  4157c8:	mov    ds:0xff231eaa,al
  4157cd:	cmp    BYTE PTR [edx-0x4edfc5e3],0x36
  4157d4:	or     BYTE PTR [eax+eiz*4-0x38ff13a7],al
  4157db:	mov    al,0x91
  4157dd:	jnp    0x4157f9
  4157df:	bound  ecx,QWORD PTR [ecx+ebx*8+0x53]
  4157e3:	shl    BYTE PTR [edx+edi*8],cl
  4157e6:	or     bh,cl
  4157e8:	xchg   ebx,eax
  4157e9:	mov    al,ds:0x9d080bfd
  4157ee:	or     ah,dh
  4157f0:	(bad)  
  4157f2:	mov    eax,ds:0xd5c71101
  4157f7:	mov    BYTE PTR [ebx+eiz*4+0x3aa0b70e],dl
  4157fe:	test   al,0x4d
  415800:	out    dx,al
  415801:	dec    ecx
  415802:	jbe    0x415837
  415804:	sub    esi,DWORD PTR [ecx+0x173f4549]
  41580a:	xchg   edx,eax
  41580b:	xchg   ecx,eax
  41580c:	xchg   ecx,ebx
  41580e:	ja     0x4157f6
  415810:	lods   al,BYTE PTR ds:[esi]
  415811:	dec    ch
  415813:	mov    ebp,0x4e420597
  415818:	mov    al,ds:0x8726049e
  41581d:	arpl   cx,di
  41581f:	xchg   ecx,eax
  415820:	mov    BYTE PTR [edi],0x77
  415823:	sbb    ecx,DWORD PTR [esi-0x26]
  415826:	add    BYTE PTR [edi+0x6d9229f3],cl
  41582c:	inc    eax
  41582d:	xor    DWORD PTR [ecx+ebx*2],ebp
  415830:	call   FWORD PTR [edi+ecx*1]
  415833:	cld    
  415834:	iret   
  415835:	cwde   
  415836:	push   ecx
  415837:	out    dx,al
  415838:	add    esp,DWORD PTR [esi-0x8]
  41583b:	mov    dl,0xb9
  41583d:	adc    BYTE PTR [edi-0x7c],cl
  415840:	mov    ds:0x94495ae4,al
  415845:	dec    ebp
  415846:	xor    DWORD PTR [eax-0x74],ecx
  415849:	pop    ebx
  41584a:	daa    
  41584b:	test   BYTE PTR [ebp+ecx*4+0x8f2f684],bl
  415852:	out    0xf2,eax
  415854:	push   cs
  415855:	pop    esp
  415856:	inc    ecx
  415857:	jo     0x415831
  415859:	(bad)  
  41585a:	imul   dh
  41585c:	jmp    DWORD PTR [esp+eax*1-0x1b21194a]
  415863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415864:	jo     0x4158c7
  415866:	repnz and DWORD PTR [esi+ebp*4-0x2],edx
  41586b:	mov    bh,0xc7
  41586d:	push   es
  41586e:	test   BYTE PTR [esi],dl
  415870:	cmp    eax,0xc69d9d0f
  415875:	and    al,0x71
  415877:	inc    edx
  415878:	pop    ds
  415879:	and    al,0xcc
  41587b:	pop    edi
  41587c:	dec    ecx
  41587d:	cmc    
  41587e:	(bad)  [ecx-0x2be7039b]
  415884:	jo     0x415834
  415886:	retf   
  415887:	mov    al,0xa7
  415889:	inc    eax
  41588a:	ret    0xb354
  41588d:	call   0x501f:0x20a7e623
  415894:	mov    cl,0xf5
  415896:	data16 cmp al,0x90
  415899:	inc    ebx
  41589a:	mov    eax,ecx
  41589c:	mov    dl,0x18
  41589e:	xor    esp,0xffffffc6
  4158a1:	and    BYTE PTR [esi-0x20ec4e6e],cl
  4158a7:	push   edx
  4158a8:	mov    ds:0xa98050b7,al
  4158ad:	lods   al,BYTE PTR ds:[esi]
  4158ae:	es lock into 
  4158b1:	out    0x31,al
  4158b3:	sbb    BYTE PTR [edx+0x312f8151],ah
  4158b9:	jecxz  0x415892
  4158bb:	imul   esp,DWORD PTR [ebx+eax*2-0x26],0x48801f60
  4158c3:	jb     0x41589c
  4158c5:	test   al,0x90
  4158c7:	fwait
  4158c8:	es mov edi,0x3b74bb74
  4158ce:	xchg   edi,eax
  4158cf:	sub    al,0x11
  4158d1:	js     0x415938
  4158d3:	jns    0x4158b3
  4158d5:	sbb    eax,0xf02c4716
  4158da:	xchg   edx,eax
  4158db:	(bad)  
  4158dd:	push   edi
  4158de:	mov    ecx,0x22598888
  4158e3:	hlt    
  4158e4:	sub    DWORD PTR [ebp+0x14b96bb1],esp
  4158ea:	mov    ecx,0xc6389248
  4158ef:	sub    al,0xd9
  4158f1:	outs   dx,BYTE PTR ds:[esi]
  4158f2:	les    edx,FWORD PTR [edx+0x1d]
  4158f5:	dec    edx
  4158f6:	mov    edi,0xea96c689
  4158fb:	lock mov al,0x9b
  4158fe:	les    edx,FWORD PTR [edi+0x5d3c1f4]
  415904:	inc    esp
  415905:	and    BYTE PTR [esi+edx*1],bh
  415908:	jmp    0x7fd1f961
  41590d:	add    BYTE PTR [edx-0xe],cl
  415910:	sub    eax,0x60640d13
  415915:	mov    ecx,0xba2d4fa2
  41591a:	mov    ?,WORD PTR [edx-0x42]
  41591d:	stos   BYTE PTR es:[edi],al
  41591e:	or     DWORD PTR [edx],ecx
  415920:	add    ch,BYTE PTR [edi-0x2cfb7309]
  415926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415927:	adc    esi,DWORD PTR [ebp+eax*8-0x60]
  41592b:	icebp  
  41592c:	fmul   st(7),st
  41592e:	cld    
  41592f:	jmp    0x303affcf
  415934:	shr    bh,cl
  415936:	mov    DWORD PTR [ebx-0x42],esi
  415939:	mov    ds,ecx
  41593b:	test   eax,0x9e84c1ab
  415940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415941:	leave  
  415942:	out    dx,eax
  415943:	mov    ebp,edx
  415945:	je     0x4159a9
  415947:	xchg   ecx,eax
  415948:	cmp    BYTE PTR [ebx-0x6da54d00],bl
  41594e:	out    dx,al
  41594f:	inc    ebp
  415950:	dec    ebx
  415951:	pop    esi
  415952:	popa   
  415953:	xchg   ebx,eax
  415954:	dec    eax
  415955:	nop
  415956:	fsub   DWORD PTR [ecx-0x31]
  415959:	jecxz  0x415993
  41595b:	inc    edx
  41595c:	repz inc esp
  41595e:	inc    esp
  41595f:	ins    BYTE PTR es:[edi],dx
  415960:	ficom  DWORD PTR [edx]
  415962:	jle    0x41594c
  415964:	in     eax,0x46
  415966:	dec    edx
  415967:	pop    ds
  415968:	sub    DWORD PTR [eax+0x5e],ecx
  41596b:	dec    edx
  41596c:	mov    WORD PTR [ebx+eax*4+0x7a102d86],fs
  415973:	pusha  
  415974:	aas    
  415975:	stc    
  415976:	xchg   esp,eax
  415977:	shl    DWORD PTR [eax+0x16],0xab
  41597b:	cmc    
  41597c:	pop    ecx
  41597d:	mov    bh,0x0
  41597f:	lds    esp,FWORD PTR [edx]
  415981:	test   DWORD PTR [eax+0x63],edx
  415984:	int3   
  415985:	sub    ebx,ebp
  415987:	xor    BYTE PTR [edi+esi*4],dh
  41598a:	inc    ebp
  41598b:	aaa    
  41598c:	jp     0x4159ac
  41598e:	das    
  41598f:	fbld   TBYTE PTR [ebp-0x7d107026]
  415995:	aad    0xa1
  415997:	mov    esi,0x6ac12633
  41599c:	scas   al,BYTE PTR es:[edi]
  41599d:	repz xchg ebp,eax
  41599f:	retf   
  4159a0:	fwait
  4159a1:	pop    esp
  4159a2:	iret   
  4159a3:	xchg   edi,eax
  4159a4:	push   ds
  4159a5:	aas    
  4159a6:	adc    eax,0x1d179346
  4159ab:	test   eax,0x77633744
  4159b0:	xlat   BYTE PTR ds:[ebx]
  4159b1:	clc    
  4159b2:	jge    0x41599a
  4159b4:	adc    dh,al
  4159b6:	inc    esi
  4159b7:	enter  0xff3c,0x94
  4159bb:	mov    esi,0x6a8ef69c
  4159c0:	ins    BYTE PTR es:[edi],dx
  4159c1:	loope  0x4159b4
  4159c3:	adc    al,0x53
  4159c5:	mov    ch,BYTE PTR [ebp+0x56]
  4159c8:	aad    0x97
  4159ca:	imul   ebp,DWORD PTR [eax-0x533f75aa],0x59
  4159d1:	(bad)  
  4159d2:	fdiv   QWORD PTR [ecx+0x4e]
  4159d5:	lods   eax,DWORD PTR ds:[esi]
  4159d6:	or     edi,DWORD PTR [edi-0x4bc7bb3e]
  4159dc:	pop    edx
  4159dd:	mov    ebx,0x4a92ffce
  4159e2:	xchg   ebp,eax
  4159e3:	jp     0x415984
  4159e5:	stos   BYTE PTR es:[edi],al
  4159e6:	shl    BYTE PTR [esi],0xe
  4159e9:	stos   BYTE PTR es:[edi],al
  4159ea:	mov    ah,0x63
  4159ec:	fimul  DWORD PTR [esi]
  4159ee:	or     esi,edi
  4159f0:	nop
  4159f1:	adc    eax,0xe65dc859
  4159f6:	fdiv   DWORD PTR [ebx-0x4da55bf0]
  4159fc:	dec    eax
  4159fd:	jnp    0x415a32
  4159ff:	fcmovnb st,st(7)
  415a01:	push   es
  415a02:	inc    ecx
  415a03:	das    
  415a04:	js     0x415a40
  415a06:	sub    BYTE PTR [esi],al
  415a08:	adc    eax,0x8474a5ff
  415a0d:	cmp    ch,BYTE PTR [ecx+0x449e007a]
  415a13:	pop    edi
  415a14:	mov    esi,0xa000e949
  415a19:	inc    ecx
  415a1a:	imul   ecx,esp,0xda921b6
  415a20:	das    
  415a21:	mov    eax,0x91270857
  415a26:	inc    ebp
  415a27:	and    eax,0x51319d11
  415a2c:	in     al,0x21
  415a2e:	test   al,0x3a
  415a30:	into   
  415a31:	ficomp WORD PTR [ecx+0x1a]
  415a34:	addr16 adc eax,0x4aee8e32
  415a3a:	pop    ds
  415a3b:	ror    ah,0x85
  415a3e:	sbb    dl,BYTE PTR [ecx-0x1038f47c]
  415a44:	daa    
  415a45:	xlat   BYTE PTR ds:[ebx]
  415a46:	in     al,0x59
  415a48:	pop    ds
  415a49:	or     al,0x4
  415a4b:	adc    esp,DWORD PTR [esp+ebx*8+0x60]
  415a4f:	icebp  
  415a50:	fst    DWORD PTR [eax+0x2311bd6d]
  415a56:	lock pop edx
  415a58:	fild   QWORD PTR [edx-0x70]
  415a5b:	xchg   ecx,eax
  415a5c:	push   ss
  415a5d:	inc    esp
  415a5e:	ficom  WORD PTR [eax]
  415a60:	inc    esp
  415a61:	jae    0x415a6a
  415a63:	xchg   esi,eax
  415a64:	adc    BYTE PTR [ebx+ecx*8],dh
  415a67:	lods   al,BYTE PTR ds:[esi]
  415a68:	mov    esi,edx
  415a6a:	cmp    dh,al
  415a6c:	xlat   BYTE PTR ds:[ebx]
  415a6d:	xor    al,0xdf
  415a6f:	in     al,0x40
  415a71:	inc    ebp
  415a73:	lahf   
  415a74:	fs dec ebx
  415a76:	lds    ebx,FWORD PTR es:[edi-0x45]
  415a7a:	sbb    al,BYTE PTR [edi+0x3]
  415a7d:	outs   dx,DWORD PTR ds:[esi]
  415a7e:	add    al,0xf7
  415a80:	jno    0x415a4e
  415a82:	mov    eax,0x656a5e11
  415a87:	stc    
  415a88:	pushf  
  415a89:	gs and eax,0x6a722fd0
  415a8f:	sti    
  415a90:	or     eax,esp
  415a92:	cmp    BYTE PTR [edx-0x5],bh
  415a95:	idiv   DWORD PTR [edx-0x2a]
  415a98:	mov    ah,0xe5
  415a9a:	sar    bl,cl
  415a9c:	push   esp
  415a9d:	jb     0x415ae7
  415a9f:	mov    ds:0x557834b1,al
  415aa4:	call   0x91e95558
  415aa9:	jo     0x415a61
  415aab:	ins    DWORD PTR es:[edi],dx
  415aac:	cmp    DWORD PTR [ebp+0x4c971cf8],esi
  415ab2:	js     0x415a93
  415ab4:	sub    al,0xea
  415ab6:	(bad)  
  415ab7:	mov    WORD PTR [eax],fs
  415ab9:	push   esi
  415aba:	sbb    dh,BYTE PTR [eax-0x1e4a7110]
  415ac0:	mov    bl,dh
  415ac2:	mov    esp,0xc8a50dc
  415ac7:	cdq    
  415ac8:	sub    BYTE PTR [esi+0x63],ch
  415acb:	dec    esi
  415acc:	out    dx,eax
  415acd:	push   es
  415ace:	jmp    0x6fa5dd76
  415ad3:	add    DWORD PTR [esi-0x25d7cb5a],ebp
  415ad9:	int3   
  415ada:	sub    BYTE PTR [edi+0x30],dh
  415add:	loope  0x415b49
  415adf:	neg    ecx
  415ae1:	call   0xff309e35
  415ae6:	adc    BYTE PTR [ecx+eiz*1+0x17c948ba],ch
  415aed:	xchg   ch,cl
  415aef:	stos   DWORD PTR es:[edi],eax
  415af0:	and    bh,0xab
  415af3:	pop    esi
  415af4:	neg    BYTE PTR [edx]
  415af6:	pop    ss
  415af7:	daa    
  415af8:	xchg   edi,eax
  415af9:	jno    0x415b32
  415afb:	add    al,0xfb
  415afd:	add    eax,DWORD PTR gs:0xd285b8f6
  415b04:	mov    ch,0x7b
  415b06:	push   ss
  415b07:	frstor [edx-0x1c]
  415b0a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415b0c:	mov    esp,0xf6399486
  415b11:	jg     0x415b61
  415b13:	dec    bl
  415b15:	ret    
  415b16:	pop    esp
  415b17:	mov    ecx,0xa3b0b218
  415b1c:	popa   
  415b1d:	sbb    eax,0xb7b2082a
  415b22:	xlat   BYTE PTR ds:[ebx]
  415b23:	xchg   ebx,eax
  415b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b25:	pop    eax
  415b26:	imul   ecx,DWORD PTR [eax+eiz*2+0x4f1207c8],0x52f8cd06
  415b31:	fsub   DWORD PTR [edx]
  415b33:	outs   dx,BYTE PTR ds:[esi]
  415b34:	in     al,dx
  415b35:	fldcw  WORD PTR ds:0xf6ec751f
  415b3b:	clc    
  415b3c:	xor    edx,DWORD PTR [edx+0xa]
  415b3f:	xchg   ecx,eax
  415b40:	jg     0x415b70
  415b42:	mov    ds:0x885f60ad,al
  415b47:	inc    ebx
  415b48:	(bad)  
  415b49:	in     al,dx
  415b4a:	cdq    
  415b4b:	lock sbb eax,0xbc8b8bb1
  415b51:	sbb    eax,0x7d35b4d4
  415b56:	sqrtps xmm6,XMMWORD PTR [ebx+0x1b]
  415b5a:	adc    al,0x7f
  415b5c:	pop    ecx
  415b5d:	inc    esi
  415b5e:	idiv   BYTE PTR [ecx+edx*4-0x56]
  415b62:	xchg   esi,eax
  415b63:	(bad)  
  415b64:	out    0x89,al
  415b66:	cmp    eax,0x9eb83117
  415b6b:	pop    edx
  415b6c:	fist   WORD PTR [ecx+0x3f]
  415b6f:	test   eax,0x5c523ab7
  415b74:	add    al,BYTE PTR [ebp+edx*8+0x3aa04e93]
  415b7b:	and    edx,DWORD PTR [eax+0x15207a56]
  415b81:	sbb    bh,BYTE PTR [eax+0xc]
  415b84:	jg     0x415b46
  415b86:	outs   dx,DWORD PTR ds:[esi]
  415b87:	lea    esp,[eax-0x6594f21c]
  415b8d:	pop    es
  415b8e:	mov    edx,0xe70b8138
  415b93:	cmp    BYTE PTR [ebx],dh
  415b95:	enter  0x193f,0x76
  415b99:	add    eax,0x3f55b638
  415b9e:	loop   0x415bc7
  415ba0:	in     eax,0x72
  415ba2:	loope  0x415bf9
  415ba4:	inc    edx
  415ba5:	mov    esi,0xa641e12d
  415baa:	sbb    al,0xa2
  415bac:	and    al,0xc9
  415bae:	jmp    0x5c32b549
  415bb3:	ja     0x415ba7
  415bb5:	mov    BYTE PTR [edi],al
  415bb7:	sub    eax,0x73d7eefc
  415bbc:	jge    0x415bd0
  415bbe:	clc    
  415bbf:	(bad)  
  415bc1:	mov    dl,0x84
  415bc3:	mov    al,ds:0x4f4698a1
  415bc8:	stos   BYTE PTR es:[edi],al
  415bc9:	pushf  
  415bca:	fs mov esp,0xbf44d7be
  415bd0:	test   BYTE PTR [edx+0x31],al
  415bd3:	cmp    BYTE PTR [edi+0x73],bl
  415bd6:	jbe    0x415b7d
  415bd8:	xor    eax,0x5e7d7a8
  415bdd:	clc    
  415bde:	stos   BYTE PTR es:[edi],al
  415bdf:	pushf  
  415be0:	mov    BYTE PTR [eax+eax*1-0x1a62e882],ch
  415be7:	add    bl,BYTE PTR [ebp-0x554dbc34]
  415bed:	pop    ebp
  415bee:	pushf  
  415bef:	dec    ebx
  415bf0:	pop    esp
  415bf1:	mov    WORD PTR [eax],cs
  415bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bf4:	ret    0xa855
  415bf7:	pop    ecx
  415bf8:	test   BYTE PTR [ebp+0x62],dl
  415bfb:	or     al,0x56
  415bfd:	mov    ch,0x2c
  415bff:	call   0xe033feb
  415c04:	arpl   si,si
  415c06:	xor    DWORD PTR [ebp+0x7d],ebp
  415c09:	jle    0x415c26
  415c0b:	cli    
  415c0c:	cmc    
  415c0d:	test   BYTE PTR [ecx-0x7f],ah
  415c10:	aaa    
  415c11:	sub    ch,BYTE PTR [esi-0x14546001]
  415c17:	cmp    esp,DWORD PTR [edi]
  415c19:	iret   
  415c1a:	sbb    eax,0x8290bd2
  415c1f:	aad    0xdf
  415c21:	ret    0x45b1
  415c24:	adc    cl,ch
  415c26:	push   ebx
  415c27:	xchg   ebx,eax
  415c28:	add    al,bh
  415c2a:	repnz or DWORD PTR [ebx-0x51348c92],esp
  415c31:	leave  
  415c32:	scas   eax,DWORD PTR es:[edi]
  415c33:	std    
  415c34:	mov    eax,ds:0x185b65a5
  415c39:	inc    edx
  415c3a:	fbld   TBYTE PTR [esi+0x30]
  415c3d:	and    DWORD PTR [ecx-0x65b81a8e],0xbef3424e
  415c47:	jmp    0x3d70:0x46116591
  415c4e:	stos   DWORD PTR es:[edi],eax
  415c4f:	fldenv [edx+0x1661648d]
  415c55:	gs add al,0x1f
  415c58:	int    0x59
  415c5a:	out    0x2e,al
  415c5c:	sub    bh,BYTE PTR [ebx+0x5147599]
  415c62:	pop    esp
  415c63:	mov    ebp,0xaaca0b03
  415c68:	xor    DWORD PTR [esi+0x35],eax
  415c6b:	or     eax,0x36ebe344
  415c70:	hlt    
  415c71:	sub    al,BYTE PTR [edx+0x7d]
  415c74:	jne    0x415cdc
  415c76:	dec    edi
  415c77:	cld    
  415c78:	xor    al,al
  415c7a:	rol    BYTE PTR [ebx+0x5c],cl
  415c7d:	outs   dx,BYTE PTR ds:[esi]
  415c7e:	in     eax,0x98
  415c80:	js     0x415c7f
  415c82:	pop    ecx
  415c83:	ret    0x274c
  415c86:	push   ebp
  415c87:	jo     0x415c95
  415c89:	jns    0x415c61
  415c8b:	fstp   DWORD PTR [ebx]
  415c8d:	in     eax,0x19
  415c8f:	ret    0xa98d
  415c92:	and    eax,0xa813ad89
  415c97:	jno    0x415cb4
  415c99:	bound  edi,QWORD PTR [esp+edx*4+0x39b9f199]
  415ca0:	(bad)  
  415ca1:	lods   eax,DWORD PTR ds:[esi]
  415ca2:	in     eax,0x1f
  415ca4:	dec    esi
  415ca5:	mov    cs,ecx
  415ca7:	inc    edi
  415ca8:	sub    eax,0x1acca127
  415cad:	pop    eax
  415cae:	xchg   ecx,eax
  415caf:	dec    eax
  415cb0:	pop    edx
  415cb1:	mov    edi,0x4205ff74
  415cb6:	inc    ecx
  415cb7:	int    0x2d
  415cb9:	jp     0x415cd7
  415cbb:	jp     0x415d11
  415cbd:	popf   
  415cbe:	mov    al,0x4e
  415cc0:	pop    ecx
  415cc1:	repnz cwde 
  415cc3:	(bad)  
  415cc4:	push   ebx
  415cc5:	add    cl,BYTE PTR [ebx+eiz*4]
  415cc8:	repz js 0x415cff
  415ccb:	ds inc esi
  415ccd:	mov    cl,0xb8
  415ccf:	call   0x44a8:0x6f445726
  415cd6:	hlt    
  415cd7:	test   esp,edi
  415cd9:	sbb    cl,bl
  415cdb:	push   ebp
  415cdc:	mov    DWORD PTR [edx+0x7],esp
  415cdf:	mov    eax,es
  415ce1:	dec    esi
  415ce2:	mov    ah,0x27
  415ce4:	mov    ah,0x6b
  415ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ce7:	sub    BYTE PTR ds:0xd3f75c33,cl
  415ced:	sub    cl,BYTE PTR [edi-0x5c55d377]
  415cf3:	cmp    edi,DWORD PTR [esi+0x1f]
  415cf6:	in     al,dx
  415cf7:	imul   ebx,edi,0xffffff85
  415cfa:	mov    ah,0x9f
  415cfc:	bound  edx,QWORD PTR [ebx+0x238a9b8e]
  415d02:	call   0xd42e:0xcea4659f
  415d09:	lods   al,BYTE PTR es:[esi]
  415d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d0c:	aad    0xe3
  415d0e:	call   0x2473:0x81e700c6
  415d15:	push   edi
  415d16:	test   BYTE PTR [ecx],ch
  415d18:	pusha  
  415d19:	aad    0x8
  415d1b:	cmp    ebp,ebx
  415d1d:	std    
  415d1e:	jbe    0x415cc3
  415d20:	pop    esp
  415d21:	popa   
  415d22:	call   0xe4a86b95
  415d27:	xchg   edx,eax
  415d28:	cdq    
  415d29:	mov    ds:0x956a7112,al
  415d2e:	mov    ecx,0xa047ba40
  415d33:	retf   0x9d92
  415d36:	adc    eax,0x6dacb65e
  415d3b:	in     al,0x44
  415d3d:	xchg   ebp,eax
  415d3e:	jns    0x415db1
  415d40:	pop    ss
  415d41:	int    0xfe
  415d43:	in     al,0xeb
  415d45:	mov    eax,ds:0xb8a5ed54
  415d4a:	and    BYTE PTR [edx+0x50],0xa2
  415d4e:	icebp  
  415d4f:	daa    
  415d50:	data16 fwait
  415d52:	xchg   ebp,eax
  415d53:	sti    
  415d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d55:	fist   WORD PTR [ecx]
  415d57:	cmp    edi,ebp
  415d59:	sub    esp,DWORD PTR [esi-0x165f54c8]
  415d5f:	aas    
  415d60:	push   ebx
  415d61:	pop    ebp
  415d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d63:	add    al,0xe9
  415d65:	adc    BYTE PTR [edx+eiz*1],ah
  415d68:	lea    edi,[eax-0x46ca97a2]
  415d6e:	sbb    al,0xad
  415d70:	add    al,0x93
  415d72:	cwde   
  415d73:	inc    edi
  415d74:	aam    0x68
  415d76:	jne    0x415df4
  415d78:	jnp    0x415dc3
  415d7a:	inc    eax
  415d7b:	fidiv  WORD PTR [esi+0x515a9442]
  415d81:	inc    eax
  415d82:	test   DWORD PTR [edi],esi
  415d84:	in     eax,0x87
  415d86:	div    DWORD PTR [ecx-0xb4a62d]
  415d8c:	or     eax,0x68b78b5b
  415d91:	inc    esi
  415d92:	lds    eax,FWORD PTR [esi+0x7d4a79ef]
  415d98:	call   0x93dd5611
  415d9d:	xor    eax,0x56b07e21
  415da2:	xor    BYTE PTR [ebp+ebp*2-0x63],bh
  415da6:	test   al,0x3d
  415da8:	lahf   
  415da9:	xor    al,0x4e
  415dab:	mov    ch,0x99
  415dad:	mov    ecx,0xe6e4fb81
  415db2:	ins    DWORD PTR es:[edi],dx
  415db3:	je     0x415dec
  415db5:	sbb    bl,ah
  415db7:	pop    esi
  415db8:	cmp    BYTE PTR [eax-0x70],0x73
  415dbc:	outs   dx,DWORD PTR ds:[esi]
  415dbd:	stc    
  415dbe:	and    eax,0xc5e4e98f
  415dc3:	jnp    0x415e19
  415dc5:	jg     0x415d81
  415dc7:	pop    edx
  415dc8:	es inc edx
  415dca:	pop    edx
  415dcb:	les    esp,FWORD PTR [esi]
  415dcd:	sub    ah,BYTE PTR [esi]
  415dcf:	ret    0x93f0
  415dd2:	ret    
  415dd3:	jg     0x415e05
  415dd5:	(bad)  
  415dd6:	sub    al,0x1a
  415dd8:	dec    ecx
  415dd9:	push   esp
  415dda:	aam    0x2
  415ddc:	dec    esi
  415ddd:	js     0x415d82
  415ddf:	jp     0x415de7
  415de1:	jbe    0x415dce
  415de3:	call   0xa8828b6e
  415de8:	je     0x415d89
  415dea:	jp     0x415dda
  415dec:	inc    ebx
  415ded:	enter  0x2c37,0x88
  415df1:	aaa    
  415df2:	lock push es
  415df4:	xchg   ecx,eax
  415df5:	pop    ss
  415df6:	jnp    0x415e12
  415df8:	push   0xffffffef
  415dfa:	popf   
  415dfb:	or     al,0x84
  415dfd:	xor    al,0xa6
  415dff:	sbb    al,0x24
  415e01:	mov    eax,ds:0xb0570439
  415e06:	xchg   esi,eax
  415e07:	pop    edi
  415e08:	jmp    0x415dfc
  415e0a:	mov    al,ds:0xb84deaab
  415e0f:	stos   BYTE PTR es:[edi],al
  415e10:	aad    0xe8
  415e12:	and    DWORD PTR [edi-0x2a2d0895],0xbeb21522
  415e1c:	dec    BYTE PTR [eax]
  415e1e:	mov    es,WORD PTR [eax+ecx*1+0x684c947b]
  415e25:	mov    BYTE PTR ds:0xf4532bb0,0xf8
  415e2c:	iret   
  415e2d:	mov    ebx,0xd5f25f0d
  415e32:	clc    
  415e33:	in     eax,dx
  415e34:	outs   dx,BYTE PTR ds:[esi]
  415e35:	push   ds
  415e36:	pop    ebx
  415e37:	stos   DWORD PTR es:[edi],eax
  415e38:	dec    ecx
  415e39:	sbb    eax,0x7f2a3bee
  415e3e:	inc    esi
  415e3f:	push   0xffffffbb
  415e41:	mov    ebx,DWORD PTR [edx+ebx*2]
  415e44:	cmp    al,0x24
  415e46:	call   FWORD PTR [eax-0x45]
  415e49:	adc    eax,0xcd35f732
  415e4e:	(bad)  [eax+0x40051c69]
  415e54:	jg     0x415ea2
  415e56:	push   cs
  415e57:	pop    ds
  415e58:	lods   eax,DWORD PTR ds:[esi]
  415e59:	sub    DWORD PTR [eax],0x9657d4e2
  415e5f:	push   ebx
  415e60:	in     al,dx
  415e61:	xchg   edi,eax
  415e62:	or     BYTE PTR es:0xb124f64c,ch
  415e69:	xor    ecx,DWORD PTR [ebp-0x3c]
  415e6c:	rcr    BYTE PTR [ecx-0x11],cl
  415e6f:	fidiv  WORD PTR [esi]
  415e71:	sub    DWORD PTR [ecx],edx
  415e73:	cld    
  415e74:	lods   al,BYTE PTR ds:[esi]
  415e75:	mov    eax,0x4e320d37
  415e7a:	inc    eax
  415e7b:	(bad)  
  415e7c:	ins    BYTE PTR es:[edi],dx
  415e7d:	inc    esi
  415e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e7f:	ficomp DWORD PTR fs:[eax+0x63]
  415e83:	mov    bh,BYTE PTR [edi+ecx*1-0x11]
  415e87:	arpl   WORD PTR [ecx-0x58],bx
  415e8a:	add    esi,esp
  415e8c:	xchg   edi,eax
  415e8d:	adc    edi,ecx
  415e8f:	call   0x25f720e2
  415e94:	cs pop ds
  415e96:	inc    edi
  415e97:	pop    esi
  415e98:	mov    esp,0x5e813bc3
  415e9d:	or     DWORD PTR [edi+0x20],ebx
  415ea0:	mov    ebp,0xa3eee328
  415ea5:	mov    eax,0x10042905
  415eaa:	and    edi,edx
  415eac:	in     al,dx
  415ead:	int3   
  415eae:	ret    0xbbf6
  415eb1:	test   eax,0x2d0b9c67
  415eb6:	inc    esi
  415eb7:	fadd   DWORD PTR [edi-0x7e]
  415eba:	push   esp
  415ebb:	inc    ebp
  415ebc:	dec    eax
  415ebd:	ror    BYTE PTR fs:0x4f3b0533,cl
  415ec4:	sub    al,0xf0
  415ec6:	jmp    0x6ff2:0xee76a3fc
  415ecd:	jns    0x415f30
  415ecf:	je     0x415e9a
  415ed1:	and    eax,0xe014e3ed
  415ed6:	in     eax,0x43
  415ed8:	mov    ebx,0x486530
  415edd:	cmc    
  415ede:	pop    edi
  415edf:	ins    DWORD PTR es:[edi],dx
  415ee0:	push   edi
  415ee1:	mov    ebx,0x76b05fdb
  415ee6:	mov    ?,WORD PTR [edi+0x4cf0159c]
  415eec:	add    dh,0xb7
  415eef:	and    eax,0x24d8aa31
  415ef4:	pop    es
  415ef5:	inc    esi
  415ef6:	add    ebp,DWORD PTR [edx]
  415ef8:	mov    al,ds:0xc33b1d4f
  415efd:	mov    ebx,0xf0dbbbd8
  415f02:	jae    0x415f1f
  415f04:	adc    DWORD PTR [edi+0x22],0xffffff87
  415f08:	test   eax,0x7821b67c
  415f0d:	arpl   cx,bx
  415f0f:	ja     0x415ea6
  415f11:	pop    ebp
  415f12:	pop    es
  415f13:	sbb    al,0xd7
  415f15:	or     BYTE PTR [esi+0x57909e1b],ah
  415f1b:	sub    eax,0xa31de68f
  415f20:	aaa    
  415f21:	pop    esi
  415f22:	jb     0x415f49
  415f24:	pop    es
  415f25:	pop    eax
  415f26:	stos   DWORD PTR es:[edi],eax
  415f27:	push   edi
  415f28:	test   al,dh
  415f2a:	pop    ecx
  415f2b:	and    eax,0x6ebbfc02
  415f30:	inc    esp
  415f31:	xchg   ebx,eax
  415f32:	or     cl,BYTE PTR [edi-0x40]
  415f35:	rol    BYTE PTR [edi+ebp*2-0x64458841],0x8a
  415f3d:	shl    ecx,1
  415f3f:	inc    esp
  415f40:	in     al,0x35
  415f42:	adc    al,0xd
  415f44:	fincstp 
  415f46:	cmp    BYTE PTR [esi-0x4d],ah
  415f49:	inc    ebp
  415f4a:	mul    BYTE PTR [esi-0x5f]
  415f4d:	mov    cl,0xaa
  415f4f:	inc    esp
  415f50:	nop
  415f51:	push   eax
  415f52:	adc    BYTE PTR [ebp-0x69c85a4f],dh
  415f58:	sbb    ebp,DWORD PTR [ecx+0x5b230c82]
  415f5e:	imul   esi,esi,0x3f
  415f61:	nop    esp
  415f64:	lods   eax,DWORD PTR ds:[esi]
  415f65:	inc    ecx
  415f66:	imul   esi,DWORD PTR [eax-0xf],0x6e
  415f6a:	add    eax,0x8a6d2da1
  415f6f:	mov    ebp,0xdd1cc8f4
  415f74:	xlat   BYTE PTR ds:[ebx]
  415f75:	(bad)  
  415f76:	sahf   
  415f77:	test   DWORD PTR ds:0xf5e02cbc,edi
  415f7d:	nop
  415f7e:	sub    dh,bh
  415f80:	rcr    dh,cl
  415f82:	lds    eax,FWORD PTR [ebp+ebp*8-0x55]
  415f86:	mov    al,0xe7
  415f88:	cwde   
  415f89:	mov    al,0xee
  415f8b:	pusha  
  415f8c:	cmp    DWORD PTR [ecx],ebp
  415f8e:	jp     0x415f96
  415f90:	mov    ah,0xc8
  415f92:	clc    
  415f93:	(bad)  
  415f95:	std    
  415f96:	dec    edx
  415f97:	jo     0x415fb8
  415f99:	aam    0x6e
  415f9b:	push   esp
  415f9c:	mov    ds:0xc9e6c474,eax
  415fa1:	mov    dl,0xf5
  415fa3:	or     BYTE PTR [edi+0x3b],dl
  415fa6:	xchg   ebp,eax
  415fa7:	add    BYTE PTR [esi-0x4a],ch
  415faa:	mov    al,0xc7
  415fac:	mov    al,BYTE PTR [ecx+0x6ca813a6]
  415fb2:	mov    ah,0xd3
  415fb4:	mov    esp,0x21b7c4b1
  415fb9:	pop    ss
  415fba:	loopne 0x415f53
  415fbc:	jbe    0x415fc9
  415fbe:	enter  0xa345,0x9c
  415fc2:	aam    0x56
  415fc4:	mov    ecx,0x2f153d31
  415fc9:	rol    DWORD PTR [ecx-0x68],1
  415fcc:	mov    edx,0x6fc16d68
  415fd1:	test   BYTE PTR [ebx],al
  415fd3:	inc    edi
  415fd4:	repnz push 0xffffffd5
  415fd7:	xor    ah,BYTE PTR [edi+0x50]
  415fda:	(bad)  
  415fdb:	mov    ebx,ebx
  415fdd:	in     eax,0x38
  415fdf:	and    eax,0x80cf176a
  415fe4:	dec    eax
  415fe5:	mov    eax,ds:0x92d9106
  415fea:	mov    ch,0xbb
  415fec:	add    ebx,DWORD PTR [edi]
  415fee:	loop   0x415f9b
  415ff0:	jp     0x415fa3
  415ff2:	mov    ds:0x2ffd20da,al
  415ff7:	jo     0x415ff2
  415ff9:	pop    ebx
  415ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ffb:	pop    edx
  415ffc:	lods   al,BYTE PTR ds:[esi]
  415ffd:	pop    esp
  415ffe:	enter  0x2c43,0x2c
  416002:	neg    BYTE PTR [ebx+0x608bace3]
  416008:	gs add eax,0xb24b29a1
  41600e:	lods   eax,DWORD PTR ds:[esi]
  41600f:	xor    DWORD PTR [eax-0x34],ebx
  416012:	in     al,dx
  416013:	mov    ebx,DWORD PTR [ecx+0x3c4995d0]
  416019:	neg    BYTE PTR [ecx-0x42f2b556]
  41601f:	es mov ah,0xe8
  416022:	push   ss
  416023:	pop    esp
  416024:	test   BYTE PTR [eax],dl
  416026:	test   BYTE PTR [esi+0x53],al
  416029:	call   0xdfd:0xf1499b81
  416030:	xor    eax,0x6217747a
  416035:	or     dh,bh
  416037:	sti    
  416038:	rcl    DWORD PTR [edi+0x7a],cl
  41603b:	dec    ebp
  41603c:	mov    edi,0xdfcb9381
  416041:	sub    bh,al
  416043:	and    esp,DWORD PTR [ecx+0x2fe543b8]
  416049:	fdiv   QWORD PTR [esi-0x230c2d1f]
  41604f:	fnstcw WORD PTR [edx+0x5934659d]
  416055:	xchg   esi,eax
  416056:	and    eax,0x7cdb07a5
  41605b:	pop    eax
  41605c:	popa   
  41605d:	cwde   
  41605e:	add    eax,0xefa09ced
  416063:	aas    
  416064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416065:	(bad)  
  416066:	cld    
  416067:	add    BYTE PTR [ebx+0x2f],al
  41606a:	lods   eax,DWORD PTR ds:[esi]
  41606b:	add    BYTE PTR [edi+0x57],bl
  41606e:	jmp    0x4683:0x4e76bc23
  416075:	mov    ecx,0x67d21e41
  41607a:	sahf   
  41607b:	in     al,0xaa
  41607d:	mov    WORD PTR [edx-0x7b498dce],ds
  416083:	retf   0x5ae6
  416086:	pop    eax
  416087:	xchg   ebx,eax
  416088:	mov    WORD PTR [ecx-0x51],?
  41608b:	mov    esi,0x1774f9ab
  416090:	out    dx,eax
  416091:	mov    dh,0xab
  416093:	sub    esp,ebp
  416095:	mov    ch,0x31
  416097:	dec    edx
  416098:	or     edi,edx
  41609a:	(bad)  
  41609b:	aam    0x87
  41609d:	cmp    eax,0xc62fd65f
  4160a2:	xchg   esp,eax
  4160a3:	fld    QWORD PTR [edi-0x2d]
  4160a6:	adc    al,0x5f
  4160a8:	xchg   edi,eax
  4160a9:	jb     0x416118
  4160ab:	sub    esi,DWORD PTR [edx]
  4160ad:	scas   eax,DWORD PTR es:[edi]
  4160ae:	sbb    dl,bl
  4160b0:	repz fsubr QWORD PTR [eax]
  4160b3:	or     eax,0x6d05125b
  4160b8:	call   0x9c9dbef4
  4160bd:	shl    ecx,1
  4160bf:	popf   
  4160c0:	cdq    
  4160c1:	add    al,BYTE PTR [edx-0x3b]
  4160c4:	jne    0x41605d
  4160c6:	mov    esi,eax
  4160c8:	mov    al,ds:0x63a5b6aa
  4160cd:	push   ss
  4160ce:	jns    0x416058
  4160d0:	(bad)  
  4160d1:	retf   0x3d06
  4160d4:	call   0x625a80ed
  4160d9:	scas   eax,DWORD PTR es:[edi]
  4160da:	sub    DWORD PTR [ecx],ebp
  4160dc:	inc    esi
  4160dd:	pop    DWORD PTR [edx+eiz*4]
  4160e0:	shl    BYTE PTR [edi],cl
  4160e2:	mov    ebp,DWORD PTR [edi-0x5f]
  4160e5:	retf   
  4160e6:	out    0x46,al
  4160e8:	mov    cl,0xd3
  4160ea:	jno    0x4160b6
  4160ec:	loope  0x4160a2
  4160ee:	push   ebx
  4160ef:	loope  0x4160c9
  4160f1:	(bad)  
  4160f2:	loope  0x41611c
  4160f4:	out    dx,eax
  4160f5:	ret    0x4ac9
  4160f8:	pushf  
  4160f9:	cld    
  4160fa:	out    0xba,al
  4160fc:	jp     0x416145
  4160fe:	push   eax
  4160ff:	jg     0x4160eb
  416101:	data16 sub dl,ah
  416104:	das    
  416105:	fcomp  st(6)
  416107:	data16 fimul DWORD PTR [edi-0x2cf3625]
  41610e:	call   0xac57858a
  416113:	ds loope 0x41611c
  416116:	stos   DWORD PTR es:[edi],eax
  416117:	adc    DWORD PTR [esi-0x32],0xfffffff4
  41611b:	xchg   esi,eax
  41611c:	cmp    eax,0xceca0404
  416121:	sbb    eax,0x145e7e04
  416126:	in     al,dx
  416127:	mov    ecx,0xf2495ebc
  41612c:	mov    dl,BYTE PTR [esp+ebx*2]
  41612f:	popf   
  416130:	inc    eax
  416131:	inc    esp
  416132:	mov    ?,WORD PTR [edi]
  416134:	aam    0xc5
  416136:	cmp    ecx,0x6ad0c332
  41613c:	in     al,0x5f
  41613e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41613f:	inc    ebx
  416140:	cmp    eax,DWORD PTR [edx-0x258d3d13]
  416146:	xchg   esi,eax
  416147:	pop    esi
  416148:	ret    
  416149:	outs   dx,BYTE PTR ds:[esi]
  41614a:	test   DWORD PTR [ecx],0x296cb136
  416150:	push   ebx
  416151:	out    dx,eax
  416152:	push   esi
  416153:	xor    ecx,DWORD PTR [esi+ecx*1-0x40]
  416157:	fstp   TBYTE PTR gs:[ebx]
  41615a:	sub    BYTE PTR [edi+0x10124c5a],al
  416160:	mov    dl,0x9d
  416162:	or     BYTE PTR [ecx+0x50],ch
  416165:	dec    eax
  416166:	adc    DWORD PTR [edi],edi
  416168:	sar    DWORD PTR ds:0x6e0461fc,cl
  41616e:	xor    al,BYTE PTR [ebx+eax*2-0x2bb9dfaa]
  416175:	test   DWORD PTR [edi],ecx
  416177:	test   al,0xa5
  416179:	imul   esi,DWORD PTR [ebx],0xffffff9c
  41617c:	repnz in eax,0x14
  41617f:	scas   al,BYTE PTR es:[edi]
  416180:	sbb    eax,0x24790edb
  416185:	shl    esp,0x68
  416188:	or     DWORD PTR [edx-0x15c9c709],ecx
  41618e:	sbb    bh,BYTE PTR [ebx+0x19]
  416191:	hlt    
  416192:	mov    edx,0x721e2c06
  416197:	jnp    0x416164
  416199:	add    eax,0xd3978999
  41619f:	in     eax,dx
  4161a0:	inc    esp
  4161a1:	inc    ebx
  4161a2:	iret   
  4161a3:	jl     0x4161e9
  4161a5:	mov    ecx,0xb1cfebf6
  4161aa:	js     0x41620f
  4161ac:	data16 jno 0x416226
  4161af:	test   BYTE PTR [esi-0x343545a4],dl
  4161b5:	mov    al,0x90
  4161b7:	and    BYTE PTR [edi+0x69],bl
  4161ba:	ins    DWORD PTR es:[edi],dx
  4161bb:	stos   DWORD PTR es:[edi],eax
  4161bc:	cmp    esi,esi
  4161be:	lea    ebx,[esi+0x49]
  4161c1:	sti    
  4161c2:	sub    DWORD PTR [eax-0x4e],ebx
  4161c5:	ret    
  4161c6:	mov    edx,0xa736398a
  4161cb:	mov    cs,WORD PTR [edx+0x5e]
  4161ce:	in     eax,0x81
  4161d0:	push   edx
  4161d1:	fs js  0x416251
  4161d4:	jno    0x41620b
  4161d6:	and    edi,ebx
  4161d8:	shl    DWORD PTR [eax+0x5d63a6b2],0x94
  4161df:	fstp   DWORD PTR [esi]
  4161e1:	mov    cl,0x72
  4161e3:	fld    st(0)
  4161e5:	fmul   QWORD PTR [esi+esi*1-0x11]
  4161e9:	push   0x21c39d10
  4161ee:	(bad)
  4161f1:	stos   DWORD PTR es:[edi],eax
  4161f2:	outs   dx,DWORD PTR ds:[esi]
  4161f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161f4:	push   ecx
  4161f5:	push   ebp
  4161f6:	aam    0x90
  4161f8:	jno    0x4161a7
  4161fa:	add    DWORD PTR [ebx-0x2db0e2de],edx
  416200:	cmp    BYTE PTR [ebp+0x588c369],0xc9
  416207:	icebp  
  416208:	in     al,0x68
  41620a:	or     eax,0xe6fbb478
  41620f:	cmp    al,0x5c
  416211:	bound  ebx,QWORD PTR [edi-0x472c8f9d]
  416217:	addr16 fwait
  416219:	in     eax,0x16
  41621b:	pusha  
  41621c:	inc    esp
  41621d:	add    ecx,DWORD PTR [ebx+0x39786ba7]
  416223:	jp     0x4161d5
  416225:	mov    WORD PTR [edi],fs
  416227:	or     al,0xf6
  416229:	outs   dx,DWORD PTR ds:[esi]
  41622a:	enter  0xf769,0x72
  41622e:	push   eax
  41622f:	jg     0x4161fa
  416231:	add    cl,BYTE PTR [ecx+0x76]
  416234:	and    bl,dl
  416236:	sub    al,0xd4
  416238:	mov    ah,BYTE PTR [eax]
  41623a:	mov    eax,ds:0x515a1383
  41623f:	mov    eax,0x163b7a93
  416244:	repz sbb esp,DWORD PTR [ebp-0x73]
  416248:	rcr    BYTE PTR [eax],0x9a
  41624b:	inc    esi
  41624c:	dec    eax
  41624d:	or     al,0x76
  41624f:	or     bh,BYTE PTR [edi]
  416251:	jo     0x4162ae
  416253:	dec    esi
  416254:	cmp    al,0x9f
  416256:	leave  
  416257:	pop    edx
  416258:	(bad)  
  416259:	jmp    0x6e75:0xf8f1f6ca
  416260:	loopne 0x4162a0
  416262:	pop    edx
  416263:	es push ds
  416265:	add    DWORD PTR [eax+eiz*2-0x5df6f6eb],esp
  41626c:	ins    BYTE PTR es:[edi],dx
  41626d:	jnp    0x67c803c6
  416273:	mov    eax,0x2ce02ca
  416278:	mov    cl,0x80
  41627a:	fadd   DWORD PTR [edi-0x6dc8d151]
  416280:	out    dx,al
  416281:	hlt    
  416282:	arpl   WORD PTR [eax-0x5530f0db],bp
  416288:	inc    edx
  416289:	fmul   QWORD PTR [edx]
  41628b:	and    eax,0x50bf90a1
  416290:	sub    eax,0x6c00b949
  416295:	dec    ebx
  416296:	sub    al,0x42
  416298:	lods   eax,DWORD PTR ds:[esi]
  416299:	mov    ds:0x744b5b50,eax
  41629e:	das    
  41629f:	pop    eax
  4162a0:	int    0xa4
  4162a2:	nop
  4162a3:	repz (bad) 
  4162a5:	mov    dh,0xde
  4162a7:	mov    edx,0x95233e4b
  4162ac:	in     eax,0x4c
  4162ae:	aad    0xfc
  4162b0:	mov    ch,0xd8
  4162b2:	add    ecx,esi
  4162b4:	es cmp eax,0xcf8b2617
  4162ba:	pop    ds
  4162bb:	mov    bl,0x66
  4162bd:	test   eax,0x60cb25a3
  4162c2:	dec    ebp
  4162c3:	jns    0x416333
  4162c5:	pusha  
  4162c6:	cdq    
  4162c7:	push   ds
  4162c8:	jne    0x416281
  4162ca:	mov    ds:0x1d17087a,eax
  4162cf:	daa    
  4162d0:	stc    
  4162d1:	loopne 0x416330
  4162d3:	xor    ebp,edx
  4162d5:	add    ebp,esi
  4162d7:	add    edi,esi
  4162d9:	loope  0x41628e
  4162db:	scas   eax,DWORD PTR es:[edi]
  4162dc:	aad    0x8d
  4162de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162df:	sbb    esi,esp
  4162e1:	(bad)  
  4162e2:	loope  0x41627c
  4162e4:	jmp    0xdbd:0xc8ed9e9f
  4162eb:	sbb    BYTE PTR [ecx+0x376577ae],bl
  4162f1:	leave  
  4162f2:	cs mov ch,0xa2
  4162f5:	test   al,0xa0
  4162f7:	ret    
  4162f8:	mov    ds:0xd977d114,eax
  4162fd:	out    0x63,eax
  4162ff:	mov    ch,0xcf
  416301:	push   ecx
  416302:	mov    esi,0x3c053eee
  416307:	push   ebp
  416308:	aas    
  416309:	enter  0x4f27,0x3d
  41630d:	push   eax
  41630e:	stos   DWORD PTR es:[edi],eax
  41630f:	aas    
  416310:	sbb    esi,DWORD PTR [eax]
  416312:	mov    ds:0x6f0bc28,al
  416317:	ds (bad) 
  416319:	mov    cl,0x61
  41631b:	mov    ch,0x91
  41631d:	enter  0x6d0e,0xac
  416321:	mov    esi,DWORD PTR [eax-0x2e5372b8]
  416327:	outs   dx,DWORD PTR ds:[esi]
  416328:	bound  esp,QWORD PTR [ecx]
  41632a:	into   
  41632b:	adc    cl,cl
  41632d:	stos   DWORD PTR es:[edi],eax
  41632e:	call   0x8e491fd8
  416333:	sbb    al,BYTE PTR [ebx-0x7c]
  416336:	add    ecx,DWORD PTR [ebx]
  416338:	mov    ebp,0xe24e643c
  41633d:	and    ebx,DWORD PTR [edi+0x23a046a3]
  416343:	pop    ss
  416344:	shl    ah,1
  416346:	inc    esp
  416347:	mov    edi,ebx
  416349:	addr16 daa 
  41634b:	mov    WORD PTR [edx],gs
  41634d:	add    BYTE PTR [ecx-0x28],ch
  416350:	jb     0x416352
  416352:	js     0x4162f5
  416354:	(bad)  
  416355:	mov    eax,0x36c2db30
  41635a:	add    ebp,esp
  41635c:	sti    
  41635d:	dec    edi
  41635e:	cwde   
  41635f:	fwait
  416360:	iret   
  416361:	test   DWORD PTR [esi-0x24],ebp
  416364:	xor    eax,edi
  416366:	xor    eax,0xb1108322
  41636b:	(bad)  
  41636d:	aas    
  41636e:	loope  0x416300
  416370:	cdq    
  416371:	inc    esp
  416372:	pop    ebx
  416373:	out    0x61,eax
  416375:	jns    0x4163d3
  416377:	imul   esp,DWORD PTR [ebx],0x9ab0610e
  41637d:	mov    eax,0xcc318f99
  416382:	scas   al,BYTE PTR es:[edi]
  416383:	ret    0xeb9a
  416386:	addr16 xchg esi,eax
  416388:	pop    ecx
  416389:	mov    ebp,0xf23d02eb
  41638e:	add    BYTE PTR gs:[edi+0xc21b11d],ch
  416395:	icebp  
  416396:	or     esp,DWORD PTR [ecx-0xdffc86e]
  41639c:	ds pop ss
  41639e:	int    0xf1
  4163a0:	mov    edi,0x55b0d14d
  4163a5:	out    dx,eax
  4163a6:	mov    al,0x41
  4163a8:	scas   eax,DWORD PTR es:[edi]
  4163a9:	leave  
  4163aa:	sbb    BYTE PTR [eax+0x1f4d35ac],0xce
  4163b1:	ja     0x416383
  4163b3:	sub    al,0x47
  4163b5:	push   edi
  4163b6:	mov    DWORD PTR [ebp+0x1e41b835],edi
  4163bc:	out    dx,al
  4163bd:	mov    ebp,0x3a45d18e
  4163c2:	sbb    BYTE PTR [esi+esi*8],bl
  4163c5:	xchg   esp,eax
  4163c6:	call   0x5b02:0xedb84354
  4163cd:	pop    edi
  4163ce:	push   0xdc8fbceb
  4163d3:	stos   BYTE PTR es:[edi],al
  4163d4:	xchg   ebx,eax
  4163d5:	cmp    eax,0xf80efb74
  4163da:	jp     0x4163f5
  4163dc:	stos   BYTE PTR es:[edi],al
  4163dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163de:	sub    dl,BYTE PTR [edi+0x47]
  4163e1:	daa    
  4163e2:	fsubr  DWORD PTR [ebx+0x65]
  4163e5:	in     eax,dx
  4163e6:	(bad)  
  4163e7:	or     DWORD PTR [edx-0x75],ebp
  4163ea:	imul   esi,DWORD PTR [ecx-0x28152d8a],0xb9a44fd3
  4163f4:	into   
  4163f5:	mov    DWORD PTR ds:0x7870817e,ebp
  4163fb:	pop    ebp
  4163fc:	retf   0x680f
  4163ff:	inc    esi
  416400:	or     eax,0x13bec84a
  416405:	push   esp
  416406:	leave  
  416407:	push   edi
  416408:	jmp    0xc6fa:0x805ef31b
  41640f:	adc    ch,bl
  416411:	dec    ecx
  416412:	sbb    ebp,DWORD PTR [esp+esi*2]
  416415:	stc    
  416416:	mov    cl,BYTE PTR [esi]
  416418:	imul   edi,DWORD PTR [ebx-0x6b],0xbb77a0f
  41641f:	push   0xc4d1082b
  416424:	mov    gs,WORD PTR [edi+0x4bb75be2]
  41642a:	adc    cl,bh
  41642c:	xchg   DWORD PTR [edi*2-0x62ca02ff],edx
  416433:	stc    
  416434:	scas   eax,DWORD PTR es:[edi]
  416435:	lock addr16 test al,0xdb
  416439:	pop    ds
  41643a:	adc    al,BYTE PTR [ebx*2+0xaace8cb]
  416441:	cmp    ah,ah
  416443:	jo     0x4163f9
  416445:	pop    es
  416446:	leave  
  416447:	mov    dl,0xa0
  416449:	jle    0x416414
  41644b:	jmp    0x416495
  41644d:	xor    ecx,eax
  41644f:	inc    edx
  416450:	adc    ebp,ebx
  416452:	inc    esp
  416453:	or     BYTE PTR [edi+0x39],al
  416456:	nop
  416457:	inc    edi
  416458:	pop    edx
  416459:	out    0x39,eax
  41645b:	cmp    al,0x7b
  41645d:	mov    dl,0x43
  41645f:	or     al,0xd1
  416461:	lods   al,BYTE PTR ds:[esi]
  416462:	mov    dh,0xb8
  416464:	mov    bl,0xa9
  416466:	cmc    
  416467:	push   esp
  416468:	inc    ebp
  416469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41646a:	cdq    
  41646b:	dec    ebx
  41646c:	out    0xae,al
  41646e:	int    0xff
  416470:	pop    eax
  416471:	test   DWORD PTR [ecx-0x78e8472d],edx
  416477:	loopne 0x41642c
  416479:	loop   0x4164af
  41647b:	sti    
  41647c:	dec    edi
  41647d:	imul   esp,ebp,0x86a5735b
  416483:	rcl    eax,cl
  416485:	and    ecx,DWORD PTR [esi+0xf]
  416488:	xchg   esp,eax
  416489:	xchg   edi,eax
  41648a:	imul   BYTE PTR ds:[ebp-0x19e850b2]
  416491:	inc    edi
  416492:	add    DWORD PTR fs:[ebx],ebp
  416495:	fs aad 0x4
  416498:	dec    ecx
  416499:	xchg   esp,eax
  41649a:	cmc    
  41649b:	xchg   ecx,eax
  41649c:	lods   al,BYTE PTR ds:[esi]
  41649d:	xchg   ebp,eax
  41649e:	mov    al,0x11
  4164a0:	scas   eax,DWORD PTR es:[edi]
  4164a1:	xor    BYTE PTR [ebx+esi*4-0x3252f2ef],dl
  4164a8:	(bad)  
  4164a9:	out    dx,al
  4164aa:	lock jecxz 0x416517
  4164ad:	push   eax
  4164ae:	stos   BYTE PTR es:[edi],al
  4164af:	div    DWORD PTR [edx-0x6e99820f]
  4164b5:	fldenv [ebx+0x5ccbb7db]
  4164bb:	dec    eax
  4164bc:	xchg   esp,eax
  4164bd:	mov    bh,0x39
  4164bf:	daa    
  4164c0:	push   cs
  4164c1:	out    dx,eax
  4164c2:	pop    edi
  4164c3:	or     ch,dh
  4164c5:	push   cs
  4164c6:	(bad)  
  4164c7:	xlat   BYTE PTR ds:[ebx]
  4164c8:	xchg   bl,dl
  4164ca:	xchg   ecx,eax
  4164cb:	fcomp  DWORD PTR [edi+0x2af36a65]
  4164d1:	sub    bh,0x5e
  4164d4:	pop    esi
  4164d5:	mov    cl,0x33
  4164d7:	adc    dl,BYTE PTR [esi+ecx*2]
  4164da:	jbe    0x41653e
  4164dc:	jnp    0x41649e
  4164de:	jnp    0x41646f
  4164e0:	ds xchg esi,eax
  4164e2:	(bad)  
  4164e3:	frstor [edx+0x31]
  4164e6:	inc    esp
  4164e7:	add    eax,0x1e4da436
  4164ec:	xchg   edx,eax
  4164ed:	(bad)  
  4164ee:	scas   eax,DWORD PTR es:[edi]
  4164ef:	xchg   DWORD PTR [edi+0x5ce2e3b7],esp
  4164f5:	inc    esp
  4164f6:	inc    edi
  4164f7:	pop    ebp
  4164f8:	(bad)  
  4164fa:	out    dx,al
  4164fb:	pop    ebp
  4164fc:	in     al,dx
  4164fd:	data16 xchg BYTE PTR [ebp-0x30956f4f],dl
  416504:	retf   
  416505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416506:	loop   0x4164aa
  416508:	aad    0xc3
  41650a:	jne    0x416564
  41650c:	neg    ah
  41650e:	mov    edx,DWORD PTR [ebx-0x162bbe3]
  416514:	dec    edx
  416515:	in     al,dx
  416516:	dec    esi
  416517:	or     al,0x3e
  416519:	mov    esp,0x4887c75e
  41651e:	dec    ebx
  41651f:	or     ah,BYTE PTR [ebp+0x40]
  416522:	sbb    ch,BYTE PTR [edi+0x22]
  416525:	and    eax,DWORD PTR [ebx-0x18f8922f]
  41652b:	dec    ebp
  41652c:	in     al,dx
  41652d:	(bad)  
  41652e:	xchg   ebx,eax
  41652f:	(bad)  
  416530:	xchg   esi,eax
  416531:	cs jns 0x4164d1
  416534:	icebp  
  416535:	xchg   BYTE PTR [edi],ah
  416537:	ins    BYTE PTR es:[edi],dx
  416538:	jmp    0x41652d
  41653a:	stos   BYTE PTR es:[edi],al
  41653b:	xor    al,0xc1
  41653d:	or     al,0x5a
  41653f:	jnp    0x416544
  416541:	retf   
  416542:	icebp  
  416543:	cmp    esp,ecx
  416545:	xchg   esi,eax
  416546:	addr16 push edx
  416548:	mov    bh,0xa4
  41654a:	nop
  41654b:	or     al,0x6e
  41654d:	data16 sti 
  41654f:	dec    edi
  416550:	shl    BYTE PTR [esi],1
  416552:	rcl    BYTE PTR [esi-0x5181bebe],cl
  416558:	or     eax,0x55891305
  41655d:	ret    0x288b
  416560:	xor    eax,DWORD PTR [ecx-0x5e]
  416563:	dec    esp
  416564:	ss dec edx
  416566:	test   eax,0x64a90f66
  41656b:	jbe    0x41658c
  41656d:	fcmovnb st,st(7)
  41656f:	imul   esi,DWORD PTR [ebp-0x324200ee],0x61
  416576:	or     BYTE PTR [edx],bh
  416578:	into   
  416579:	pusha  
  41657a:	inc    eax
  41657b:	ret    0xc049
  41657e:	jbe    0x416545
  416580:	shl    DWORD PTR [ebp-0x70],0x14
  416584:	jae    0x4165ab
  416586:	lea    ecx,[esi+0x3f]
  416589:	add    bl,0x62
  41658c:	fdivr  st(4),st
  41658e:	push   eax
  41658f:	jmp    0x29a8176d
  416594:	push   esp
  416595:	xchg   ebx,eax
  416596:	and    DWORD PTR [esp+ecx*2+0x55],esi
  41659a:	pusha  
  41659b:	adc    eax,0xe9bfa0cf
  4165a0:	sbb    DWORD PTR [esi],eax
  4165a2:	(bad)  
  4165a3:	cdq    
  4165a4:	dec    eax
  4165a5:	mov    edi,0xca84502f
  4165aa:	sbb    BYTE PTR [ecx+ebx*2+0x39],cl
  4165ae:	daa    
  4165af:	out    0x39,eax
  4165b1:	mov    esi,0x4e6e6928
  4165b6:	sar    DWORD PTR [eax+0x53],1
  4165b9:	jg     0x416590
  4165bb:	and    bl,BYTE PTR [eax+0x357fae02]
  4165c1:	stc    
  4165c2:	sub    BYTE PTR [ebp+0x40ec011f],bh
  4165c8:	jmp    0x4165a1
  4165ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165cb:	in     eax,dx
  4165cc:	repnz and al,0x3d
  4165cf:	test   BYTE PTR [eax+0x5c],al
  4165d2:	mov    cl,0x8e
  4165d4:	daa    
  4165d5:	pop    ebx
  4165d6:	aam    0xf2
  4165d8:	push   ebx
  4165d9:	push   es
  4165da:	repz les esi,FWORD PTR [edx+0x1d]
  4165de:	ror    BYTE PTR [edx+ebp*4],1
  4165e1:	outs   dx,BYTE PTR ds:[esi]
  4165e2:	sbb    eax,0x1e50a277
  4165e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165e8:	mov    BYTE PTR [ecx+esi*1],0x5d
  4165ec:	push   0x473feb8
  4165f1:	lds    ebx,FWORD PTR [edi]
  4165f3:	adc    BYTE PTR [ebx+0x19],ch
  4165f6:	pop    ebp
  4165f7:	in     al,dx
  4165f8:	pushf  
  4165f9:	aam    0xa4
  4165fb:	mov    edi,DWORD PTR [edi]
  4165fd:	adc    al,dl
  4165ff:	ins    BYTE PTR es:[edi],dx
  416600:	adc    esi,DWORD PTR [eax-0x5bebe251]
  416606:	xor    BYTE PTR ds:0xf2fcba74,dl
  41660c:	xchg   edi,eax
  41660d:	xchg   esi,eax
  41660e:	loopne 0x41668e
  416610:	dec    esi
  416611:	aas    
  416612:	mov    al,dh
  416614:	dec    ebp
  416615:	xchg   edx,eax
  416616:	pop    ss
  416617:	lods   eax,DWORD PTR ds:[esi]
  416618:	push   0xffffffbb
  41661a:	jo     0x4165a8
  41661c:	shr    BYTE PTR [esi],cl
  41661e:	mov    dh,0xcd
  416620:	cmp    bl,BYTE PTR [ebx+0x1bb7b622]
  416626:	pusha  
  416627:	xchg   ebx,eax
  416628:	mov    WORD PTR [esi-0x7adf4dcc],ss
  41662e:	fmul   QWORD PTR [edx+0x6]
  416631:	stos   BYTE PTR es:[edi],al
  416632:	jecxz  0x4165ca
  416634:	fist   DWORD PTR [ebx]
  416636:	xor    BYTE PTR [eax+0x677a9951],bl
  41663c:	fwait
  41663d:	inc    esi
  41663e:	ror    dh,0x80
  416641:	or     BYTE PTR [esi-0x23],al
  416644:	outs   dx,DWORD PTR ds:[esi]
  416645:	lock (bad) 
  416647:	rol    BYTE PTR [eax],cl
  416649:	mov    bl,0x4f
  41664c:	scas   al,BYTE PTR es:[edi]
  41664d:	push   ebp
  41664e:	sbb    ch,BYTE PTR [edi]
  416650:	test   DWORD PTR [eax-0x4c],eax
  416653:	jle    0x41660d
  416655:	or     al,BYTE PTR [esi+0x3a5f43]
  41665b:	xchg   BYTE PTR [ebx+0x5934d2ec],cl
  416661:	sub    al,0x95
  416663:	mov    ebx,0x74f83b19
  416668:	or     dl,ch
  41666a:	inc    ebx
  41666b:	jb     0x4166d4
  41666d:	stc    
  41666e:	and    cl,BYTE PTR [ebx]
  416670:	xchg   edi,eax
  416671:	and    ebx,eax
  416673:	adc    esp,DWORD PTR [edi-0x7c9ec4c8]
  416679:	add    DWORD PTR [edi],ecx
  41667b:	push   edx
  41667c:	test   edi,edx
  41667e:	sbb    eax,0x7d1ebfb1
  416683:	(bad)  
  416685:	jle    0x4166a7
  416687:	sahf   
  416688:	xchg   ecx,eax
  416689:	arpl   WORD PTR [eax],bp
  41668b:	imul   edi,DWORD PTR [edi+0xa],0x5401fc0f
  416692:	dec    ecx
  416693:	in     eax,0x2f
  416695:	lods   eax,DWORD PTR ds:[esi]
  416696:	and    ebx,eax
  416698:	loope  0x41670c
  41669a:	add    al,0x49
  41669c:	xor    BYTE PTR [ecx],dh
  41669e:	sar    DWORD PTR [ebx],0x3c
  4166a1:	test   eax,0x7d1e5518
  4166a6:	fwait
  4166a7:	sub    DWORD PTR [ebp+0x3e],0xffffffd2
  4166ab:	xor    ebp,edi
  4166ad:	lea    edi,[eax]
  4166af:	dec    ebx
  4166b0:	adc    eax,0xc74b6304
  4166b5:	mov    ss,WORD PTR [edx]
  4166b7:	push   edx
  4166b8:	mov    cs,WORD PTR [esi+0x39]
  4166bb:	add    DWORD PTR [ebx+0x542a7f42],0xd8aed128
  4166c5:	adc    al,0x8a
  4166c7:	into   
  4166c8:	sbb    al,0x7b
  4166ca:	mov    eax,0xcf675d6b
  4166cf:	cmp    ecx,DWORD PTR [edi-0x7e]
  4166d2:	jae    0x416716
  4166d4:	xor    al,0x1d
  4166d6:	pop    ecx
  4166d7:	retf   
  4166d8:	mov    edx,0xe2dce9
  4166dd:	std    
  4166de:	and    ebx,DWORD PTR [edi+ebx*1-0x47]
  4166e2:	pop    edx
  4166e3:	clc    
  4166e4:	push   ds
  4166e5:	mov    edx,DWORD PTR [ecx]
  4166e7:	jb     0x4166bd
  4166e9:	popa   
  4166ea:	in     eax,0xc
  4166ec:	lea    ecx,[esi]
  4166ee:	(bad)  
  4166f0:	jno    0x416701
  4166f2:	lods   eax,DWORD PTR ds:[esi]
  4166f3:	fsubr  DWORD PTR [esi-0xd]
  4166f6:	ins    BYTE PTR es:[edi],dx
  4166f7:	xor    eax,0xded1c708
  4166fc:	lea    ebx,[esi+0x6c]
  4166ff:	out    dx,eax
  416700:	sub    DWORD PTR [eax+eiz*4-0x72],esp
  416704:	das    
  416705:	jo     0x4166a4
  416707:	inc    edi
  416708:	sub    BYTE PTR [esi-0x51dce037],bl
  41670e:	sub    BYTE PTR [ebx+0x6d2dcf23],cl
  416714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416715:	jo     0x4166e1
  416717:	cmp    eax,0x3c4b27b8
  41671c:	push   ss
  41671d:	(bad)  
  41671e:	and    ebx,DWORD PTR [esi]
  416720:	inc    esp
  416721:	pushf  
  416722:	xchg   ebx,eax
  416723:	xchg   edi,eax
  416724:	sbb    esi,DWORD PTR [ebx-0x5a]
  416727:	jne    0x416707
  416729:	inc    ecx
  41672a:	xchg   ebp,eax
  41672b:	ins    BYTE PTR es:[edi],dx
  41672c:	dec    esp
  41672d:	gs cli 
  41672f:	jne    0x4167ad
  416731:	lea    esp,[esp+esi*2]
  416734:	imul   ah
  416736:	xor    eax,0x2e88eb0a
  41673b:	mov    ds:0xd5249fe8,al
  416740:	(bad)  
  416741:	icebp  
  416742:	jp     0x416728
  416744:	jecxz  0x416753
  416746:	mov    ah,0x23
  416748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416749:	dec    ebp
  41674a:	jo     0x4167c2
  41674c:	xchg   esp,eax
  41674d:	daa    
  41674e:	pop    esp
  41674f:	ins    DWORD PTR es:[edi],dx
  416750:	inc    esp
  416751:	psubb  mm5,mm7
  416754:	inc    edx
  416755:	and    ah,BYTE PTR [ecx+0x1a]
  416758:	ins    BYTE PTR es:[edi],dx
  416759:	inc    edx
  41675a:	cmc    
  41675b:	loop   0x4166e5
  41675d:	lods   eax,DWORD PTR ds:[esi]
  41675e:	clc    
  41675f:	jnp    0x4167b1
  416761:	pop    edx
  416762:	rcr    BYTE PTR [eax],cl
  416764:	nop
  416765:	sub    DWORD PTR es:[edx+0x15],esi
  416769:	in     eax,dx
  41676a:	fisub  WORD PTR [ecx-0x65]
  41676d:	mov    eax,0x9821f3e2
  416772:	xchg   ecx,eax
  416773:	sub    DWORD PTR [edx],ebp
  416775:	fadd   st(0),st
  416777:	test   dl,bh
  416779:	data16 lock repz mov bh,ah
  41677e:	mov    eax,ds:0x3ff3ce43
  416783:	pop    ebx
  416784:	(bad)  
  416785:	lds    eax,FWORD PTR [edx-0x76]
  416788:	arpl   WORD PTR [edi+0x7c],cx
  41678b:	cli    
  41678c:	cmp    cl,bl
  41678e:	aaa    
  41678f:	cli    
  416790:	in     al,dx
  416791:	add    esp,ebx
  416793:	in     eax,0x81
  416795:	xchg   edx,eax
  416796:	push   ebp
  416797:	mov    esi,0x91386126
  41679c:	sar    BYTE PTR [edx+0xf],0xc6
  4167a0:	sbb    ebx,DWORD PTR [edx]
  4167a2:	sbb    dh,ah
  4167a4:	mov    bh,0xb0
  4167a6:	cwde   
  4167a7:	in     eax,dx
  4167a8:	add    DWORD PTR [edx],ecx
  4167aa:	dec    edx
  4167ab:	ret    0xb3d6
  4167ae:	aaa    
  4167af:	mov    bl,0x9e
  4167b1:	cmp    DWORD PTR [edx+0x2d007b1c],0xffffffb1
  4167b8:	mov    ah,BYTE PTR [edx+0x5f0d388f]
  4167be:	pop    esp
  4167bf:	xor    al,0xed
  4167c1:	outs   dx,BYTE PTR ds:[esi]
  4167c2:	lahf   
  4167c3:	ret    0x2faa
  4167c6:	push   0xdc7f65bd
  4167cb:	mov    bh,0xd7
  4167cd:	mov    ss,WORD PTR [ebx-0x35a89c80]
  4167d3:	push   0xa8a5f0e1
  4167d8:	jmp    0xbf91f815
  4167dd:	(bad)  
  4167de:	(bad)  
  4167df:	sbb    bh,BYTE PTR [ecx]
  4167e1:	fwait
  4167e2:	bnd je 0x41681e
  4167e5:	mov    bh,0xce
  4167e7:	sbb    al,0x20
  4167e9:	mov    ch,ch
  4167eb:	(bad)  
  4167ed:	clc    
  4167ee:	fs pop es
  4167f0:	xor    DWORD PTR [esi+0x38],0xffffff94
  4167f4:	dec    ebp
  4167f5:	mov    edi,0x8a9f442
  4167fa:	ja     0x4167dc
  4167fc:	or     ebx,DWORD PTR [edx]
  4167fe:	sub    cl,BYTE PTR [edx]
  416800:	push   0xd04095f2
  416805:	dec    eax
  416806:	and    BYTE PTR [ebx-0x724c92b1],dl
  41680c:	mov    bh,0xc2
  41680e:	mov    dh,0x5e
  416810:	mov    ah,0xef
  416812:	lahf   
  416813:	cs mov esp,0xfbb7b13a
  416819:	imul   edx,DWORD PTR [ecx+edi*4-0x3a95a07b],0x0
  416821:	in     al,0xce
  416823:	jecxz  0x4167c9
  416825:	pop    ecx
  416826:	sub    bl,BYTE PTR [edi-0x61fc6710]
  41682c:	lds    ebp,FWORD PTR [edi-0x55]
  41682f:	push   0x4e
  416831:	ja     0x4168af
  416833:	xchg   esp,eax
  416834:	cmp    BYTE PTR [ebp+0x129607c6],al
  41683a:	and    DWORD PTR [ebp+0x25],ecx
  41683d:	ret    0x765f
  416840:	fnsave [ebx-0x7f5d60e0]
  416846:	mov    ah,0x8
  416848:	xor    eax,0x725c72ae
  41684d:	sub    ah,BYTE PTR [ecx]
  41684f:	sbb    DWORD PTR es:[esi+0x277cd297],0x29
  416857:	add    BYTE PTR [edx+0x3bf61c37],cl
  41685d:	test   DWORD PTR [edx+0x3d],ebx
  416860:	jns    0x4168aa
  416862:	lods   eax,DWORD PTR ds:[esi]
  416863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416864:	jmp    0x4168a9
  416866:	mov    al,0x64
  416868:	or     al,0x99
  41686a:	js     0x4168ce
  41686c:	add    al,0xe3
  41686e:	in     eax,dx
  41686f:	pop    ds
  416870:	jmp    0xb7c452e8
  416875:	push   cs
  416876:	xchg   BYTE PTR [eax+0x2fc2bac2],ch
  41687c:	inc    BYTE PTR [edi+ebp*2]
  41687f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416880:	mov    dl,bl
  416882:	dec    esi
  416883:	xor    BYTE PTR [eax+eax*2+0x1a7dad20],ch
  41688a:	inc    ebx
  41688b:	dec    ebx
  41688c:	rcr    DWORD PTR [esi-0x75d27c9f],cl
  416892:	cld    
  416893:	mov    cs,edx
  416895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416896:	ds cs rol dl,cl
  41689a:	pop    ebx
  41689b:	jg     0x41682e
  41689d:	pop    edx
  41689e:	push   esi
  41689f:	sbb    dl,BYTE PTR [ebx-0x52e970eb]
  4168a5:	or     al,0xd7
  4168a7:	and    BYTE PTR [eax-0x137a310e],dh
  4168ad:	into   
  4168ae:	in     eax,0xab
  4168b0:	dec    esp
  4168b1:	pop    edi
  4168b2:	xchg   esp,eax
  4168b3:	adc    esi,edx
  4168b5:	fs xchg edi,eax
  4168b7:	dec    ecx
  4168b8:	rep ins DWORD PTR es:[edi],dx
  4168ba:	adc    esp,DWORD PTR [edx]
  4168bc:	mov    eax,ds:0x6739282c
  4168c1:	cmc    
  4168c2:	jb     0x41684d
  4168c4:	mov    al,ds:0x801a0fa5
  4168c9:	mov    edx,0xd493d62b
  4168ce:	jae    0x4168d2
  4168d0:	test   al,0x62
  4168d2:	sahf   
  4168d3:	fist   DWORD PTR [edx-0xc21d9a]
  4168d9:	into   
  4168da:	fstp   DWORD PTR [edi-0x7a]
  4168dd:	ficomp DWORD PTR [eax-0x3d]
  4168e0:	push   eax
  4168e1:	and    BYTE PTR [edi+0xbf56b3e],0x11
  4168e8:	jo     0x416960
  4168ea:	add    cl,BYTE PTR [ebx+0x70]
  4168ed:	and    ch,dl
  4168ef:	(bad)  
  4168f0:	xor    eax,0xf151449f
  4168f5:	jl     0x4168f8
  4168f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168f8:	mov    edi,0x46e7361a
  4168fd:	xchg   ebx,eax
  4168fe:	pop    esi
  4168ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416900:	mov    WORD PTR [edi],fs
  416902:	and    bh,BYTE PTR [ebp-0x44]
  416905:	and    eax,0xcc710e76
  41690a:	mov    ds,WORD PTR [ebp+0x3f]
  41690d:	xchg   ebx,eax
  41690e:	popa   
  41690f:	pop    ebx
  416910:	and    cl,BYTE PTR [ebp+0x4ad9a65c]
  416916:	shl    DWORD PTR [ebx],1
  416918:	aam    0x7d
  41691a:	push   esp
  41691b:	sahf   
  41691c:	mov    eax,0x202c6b72
  416921:	out    0xa0,eax
  416923:	inc    ecx
  416924:	add    eax,0xd9edec1a
  416929:	cmp    DWORD PTR [esi],0x13
  41692c:	into   
  41692d:	push   ebp
  41692e:	mov    edi,0x3b1d5b7
  416933:	pop    edi
  416934:	mov    DWORD PTR [ecx+0x15707465],edx
  41693a:	push   ds
  41693b:	dec    ecx
  41693c:	mov    ecx,0x615817e2
  416941:	enter  0x75a,0x8b
  416945:	mov    BYTE PTR [ecx],dl
  416947:	stc    
  416948:	sar    BYTE PTR [eax-0x310e50f5],cl
  41694e:	cmp    DWORD PTR [esi],esi
  416950:	mov    eax,0x7f003b9c
  416955:	outs   dx,BYTE PTR ds:[esi]
  416956:	fdiv   DWORD PTR [eax*1+0x584a771a]
  41695d:	sahf   
  41695e:	mov    edi,0xf4602ed5
  416963:	push   ebx
  416964:	fsub   DWORD PTR [ebp-0x230b075b]
  41696a:	fsub   QWORD PTR [ecx]
  41696c:	jne    0x416908
  41696e:	(bad)  
  41696f:	jmp    0x416935
  416971:	jl     0x416999
  416973:	mov    ch,0x6
  416975:	adc    DWORD PTR [ebx],0x8e5b97bc
  41697b:	mov    bh,0xa8
  41697d:	pop    ss
  41697e:	pop    ebx
  41697f:	int3   
  416980:	sub    al,0xf6
  416982:	mov    DWORD PTR [eax],esi
  416984:	(bad)  
  416985:	outs   dx,BYTE PTR ds:[esi]
  416986:	adc    eax,0x3bba25c4
  41698b:	xor    edi,ecx
  41698d:	das    
  41698e:	popa   
  41698f:	jne    0x41698c
  416991:	mov    ds:0xb5ff6b82,al
  416996:	cld    
  416997:	pop    esi
  416998:	iret   
  416999:	dec    ebx
  41699a:	push   ebx
  41699b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41699c:	fs rep stos BYTE PTR es:[edi],al
  41699f:	mov    BYTE PTR [ebp+0x3babdc22],bl
  4169a5:	call   0x294a:0x620aa5f9
  4169ac:	jo     0x4169a4
  4169ae:	xlat   BYTE PTR ds:[ebx]
  4169af:	ss enter 0x7867,0xd9
  4169b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169b5:	mov    dl,0xc2
  4169b7:	dec    ebx
  4169b8:	(bad)  
  4169b9:	mov    eax,ds:0x6216985f
  4169be:	(bad)
  4169c1:	xor    eax,0x5e
  4169c4:	sub    al,0x6
  4169c6:	sub    al,0x72
  4169c8:	les    edi,FWORD PTR [edx]
  4169ca:	(bad)  
  4169cb:	lock jno 0x4169df
  4169ce:	mov    ecx,0xf66f38e7
  4169d3:	fistp  QWORD PTR ds:0x9b172d8d
  4169d9:	or     esp,eax
  4169db:	pop    edi
  4169dc:	push   esp
  4169dd:	or     al,0xcd
  4169df:	push   esi
  4169e0:	jmp    0x4169db
  4169e2:	sbb    al,0x8e
  4169e4:	sti    
  4169e5:	push   0xffffff8f
  4169e7:	mov    dh,0xe4
  4169e9:	pop    esp
  4169ea:	sbb    DWORD PTR [edx-0x2525f222],ebp
  4169f0:	dec    ecx
  4169f1:	loope  0x4169e5
  4169f3:	in     eax,0x1f
  4169f5:	dec    edi
  4169f6:	ins    BYTE PTR es:[edi],dx
  4169f7:	jl     0x416a40
  4169f9:	cmc    
  4169fa:	xor    cl,BYTE PTR [edx-0x524b8254]
  416a00:	jl     0x416991
  416a02:	adc    esi,edi
  416a04:	sub    BYTE PTR [ebx+0x57],0x59
  416a08:	jmp    0xe6b0:0x2d96247a
  416a0f:	(bad)  
  416a11:	das    
  416a12:	xchg   edx,eax
  416a13:	push   ds
  416a14:	or     dh,BYTE PTR [edi]
  416a16:	mov    DWORD PTR [esi-0x35],edi
  416a19:	xchg   ebp,eax
  416a1a:	adc    ebp,DWORD PTR [edx+0x156237ef]
  416a20:	pop    ebp
  416a21:	jb     0x4169b8
  416a23:	popa   
  416a24:	fld    DWORD PTR [edx-0x38]
  416a27:	(bad)  
  416a28:	xchg   esi,eax
  416a29:	in     eax,0x13
  416a2b:	and    DWORD PTR [ebp+0x1e],ebp
  416a2e:	daa    
  416a2f:	xchg   ecx,eax
  416a30:	pop    es
  416a31:	and    al,0x70
  416a33:	cmp    BYTE PTR [ebx+0x1f],ch
  416a36:	neg    DWORD PTR [edi]
  416a38:	sbb    BYTE PTR [ebp-0x1b],bl
  416a3b:	mov    ch,0xc5
  416a3d:	cmp    al,0x6b
  416a3f:	mov    dl,0xc0
  416a41:	add    dl,BYTE PTR [ecx]
  416a43:	out    0x20,eax
  416a45:	enter  0xa9bf,0xef
  416a49:	dec    esp
  416a4a:	int3   
  416a4b:	adc    al,0xed
  416a4d:	pop    esp
  416a4e:	mov    bh,0x6e
  416a50:	sub    ch,BYTE PTR [esi-0x6ff21908]
  416a56:	cld    
  416a57:	aaa    
  416a58:	mov    al,ds:0xb74ee4df
  416a5d:	dec    ebx
  416a5e:	test   ebp,eax
  416a60:	push   ecx
  416a61:	sbb    DWORD PTR [eax],0xffffff9f
  416a64:	nop
  416a65:	ja     0x416a9f
  416a67:	mov    al,0x2d
  416a69:	mov    eax,ds:0x72cea35c
  416a6e:	mov    DWORD PTR [edx-0x7cd0b824],ebp
  416a74:	in     eax,0xe6
  416a76:	clc    
  416a77:	les    ebx,FWORD PTR [edx+eiz*4]
  416a7a:	loop   0x416ac7
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	repz fstp DWORD PTR [eax+ebx*1+0x58]
  416a82:	or     dh,cl
  416a84:	shl    esp,cl
  416a86:	and    BYTE PTR [eax-0x7b],ah
  416a89:	push   eax
  416a8a:	jg     0x416aa7
  416a8c:	pop    es
  416a8d:	or     edi,esi
  416a8f:	push   ecx
  416a90:	in     eax,dx
  416a91:	idiv   BYTE PTR [eax]
  416a93:	jb     0x416aff
  416a95:	wbinvd 
  416a97:	out    dx,eax
  416a98:	push   ebx
  416a99:	cwde   
  416a9a:	inc    edx
  416a9b:	cmp    eax,0xd955f8ec
  416aa0:	sub    al,BYTE PTR [ebp+0x5]
  416aa3:	lea    eax,[ebp-0x1b]
  416aa6:	xor    BYTE PTR [ebp+0xf],0x4d
  416aaa:	aad    0x68
  416aac:	inc    ecx
  416aad:	push   ds
  416aae:	loopne 0x416abe
  416ab0:	adc    al,0xd
  416ab2:	add    dl,bl
  416ab4:	jg     0x416aed
  416ab6:	cdq    
  416ab7:	mov    esp,0x9c99fc73
  416abc:	adc    BYTE PTR [edx],bh
  416abe:	dec    edx
  416abf:	add    ecx,DWORD PTR [edi]
  416ac1:	and    al,0x56
  416ac3:	adc    DWORD PTR [ebx],edx
  416ac5:	cmp    al,0xff
  416ac7:	mov    dl,0xbb
  416ac9:	scas   eax,DWORD PTR es:[edi]
  416aca:	jne    0x416a78
  416acc:	std    
  416acd:	xor    eax,0x7c5c25a5
  416ad2:	push   edi
  416ad3:	inc    eax
  416ad4:	dec    edx
  416ad5:	inc    esp
  416ad6:	iret   
  416ad7:	or     eax,0x1bfc52f4
  416adc:	data16 loope 0x416b18
  416adf:	(bad)  
  416ae0:	dec    ebp
  416ae1:	jmp    0x416a66
  416ae3:	out    0x21,al
  416ae5:	rol    dh,cl
  416ae7:	fs push es
  416ae9:	jmp    0x53aa406
  416aee:	out    0x1c,eax
  416af0:	ja     0x416b48
  416af2:	or     al,0xd4
  416af4:	dec    eax
  416af5:	jle    0x416b42
  416af7:	add    al,0x3a
  416af9:	sbb    cl,cl
  416afb:	cmp    al,0x54
  416afd:	push   cs
  416afe:	xchg   edx,eax
  416aff:	inc    ebp
  416b00:	outs   dx,BYTE PTR ds:[esi]
  416b01:	jo     0x416b04
  416b03:	ja     0x416b29
  416b05:	sub    eax,0x2c3344da
  416b0a:	xchg   ebp,eax
  416b0b:	mov    al,0xbf
  416b0d:	xor    bh,BYTE PTR [esi+0x74ab14fa]
  416b13:	push   ecx
  416b14:	mov    ebx,0xb3834352
  416b19:	jo     0x416b2e
  416b1b:	fs cmp al,0xd9
  416b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b1f:	je     0x416b4b
  416b21:	xchg   esp,eax
  416b22:	aas    
  416b23:	rcr    BYTE PTR [esi-0x54],0x59
  416b27:	mov    eax,0xb93f5f45
  416b2c:	(bad)  
  416b2d:	fadd   QWORD PTR [edx+eax*8]
  416b30:	data16 loope 0x416b09
  416b33:	loope  0x416ac6
  416b35:	xchg   ebx,eax
  416b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b37:	scas   eax,DWORD PTR es:[edi]
  416b38:	sub    DWORD PTR [eax-0x79],edi
  416b3b:	sub    bh,BYTE PTR [ebx+0x70bb4fa4]
  416b41:	clc    
  416b42:	cs and eax,0xe61d89db
  416b48:	jp     0x416bb6
  416b4a:	adc    al,0xc9
  416b4c:	outs   dx,DWORD PTR ds:[esi]
  416b4d:	(bad)  
  416b4e:	xor    DWORD PTR [ebx-0x25287761],edx
  416b54:	(bad)  
  416b55:	in     al,dx
  416b56:	pusha  
  416b57:	xor    eax,0x24c9779e
  416b5c:	fwait
  416b5d:	stos   DWORD PTR es:[edi],eax
  416b5e:	dec    ebp
  416b5f:	leave  
  416b60:	sbb    dh,ch
  416b62:	ret    0xbb17
  416b65:	aad    0xa
  416b67:	fsub   DWORD PTR [edi+0x5f1a5ca4]
  416b6d:	les    edx,FWORD PTR [ecx]
  416b6f:	outs   dx,BYTE PTR ds:[esi]
  416b70:	hlt    
  416b71:	or     bh,BYTE PTR [esi+0x214a222]
  416b77:	sub    ecx,ecx
  416b79:	jne    0x416b68
  416b7b:	mov    ds:0xb1d61408,al
  416b80:	mov    ebx,0xa7cde0a9
  416b85:	mov    esi,0x9b974958
  416b8a:	xchg   esi,eax
  416b8b:	pop    ds
  416b8c:	clc    
  416b8d:	lods   eax,DWORD PTR ds:[esi]
  416b8e:	sub    BYTE PTR ds:0x6fbeac51,cl
  416b94:	push   esi
  416b95:	int3   
  416b96:	sub    al,0x2
  416b98:	fnstcw WORD PTR [edi+0x59]
  416b9b:	dec    esp
  416b9c:	popa   
  416b9d:	in     al,dx
  416b9e:	pop    ecx
  416b9f:	bound  edi,QWORD PTR [eax+0x3e30d497]
  416ba5:	xchg   edx,eax
  416ba6:	ins    BYTE PTR es:[edi],dx
  416ba7:	sub    esp,DWORD PTR [edi-0x2b]
  416baa:	dec    esp
  416bab:	and    dl,BYTE PTR [eax+0x70]
  416bae:	push   0xfffffff6
  416bb0:	(bad)  
  416bb1:	int    0x70
  416bb3:	mov    ebp,0xae5a44c1
  416bb8:	scas   al,BYTE PTR es:[edi]
  416bb9:	call   DWORD PTR [eax+0x751c7ae0]
  416bbf:	iret   
  416bc0:	cs (bad) 
  416bc2:	adc    eax,0xbbb67cbf
  416bc7:	loop   0x416b55
  416bc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bca:	hlt    
  416bcb:	jo     0x416c25
  416bcd:	dec    edi
  416bce:	mov    eax,0xe275b3cb
  416bd3:	dec    ebx
  416bd4:	and    al,0x51
  416bd6:	mov    BYTE PTR [edx+0xbd547ab],bl
  416bdc:	dec    eax
  416bdd:	xchg   edi,eax
  416bde:	mulps  xmm1,XMMWORD PTR [ebx+0x4f]
  416be2:	std    
  416be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416be4:	(bad)  
  416be5:	iret   
  416be6:	(bad)  
  416be7:	xchg   ebx,eax
  416be8:	mov    ah,0xd1
  416bea:	int3   
  416beb:	(bad)  
  416bec:	dec    ebx
  416bed:	cwde   
  416bee:	or     eax,0x642e74e6
  416bf3:	and    ecx,edi
  416bf5:	scas   eax,DWORD PTR es:[edi]
  416bf6:	fs xchg esi,eax
  416bf8:	and    al,BYTE PTR [edi+0x8]
  416bfb:	ss (bad) 
  416bfd:	daa    
  416bfe:	mov    al,ds:0x8d0a05d4
  416c03:	call   0x1d38:0xb64c8d57
  416c0a:	push   es
  416c0b:	das    
  416c0c:	mov    edi,0x3aff3cf5
  416c11:	sbb    al,0x11
  416c13:	retf   0x80bd
  416c16:	xchg   ecx,eax
  416c17:	adc    eax,esp
  416c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c1a:	inc    ebx
  416c1b:	and    eax,0x6b52a78f
  416c20:	adc    DWORD PTR [eax-0x2eadca02],0x54
  416c27:	fild   QWORD PTR [edi]
  416c29:	xchg   esi,eax
  416c2a:	lods   eax,DWORD PTR ds:[esi]
  416c2b:	jmp    0xfa20:0xe1928a2b
  416c32:	pop    es
  416c33:	dec    ebx
  416c34:	ret    0x6629
  416c37:	lahf   
  416c38:	mov    bl,0xd6
  416c3a:	jmp    0xaf8a280c
  416c3f:	shr    BYTE PTR [ebx+0x64010ee],cl
  416c45:	or     al,0xf4
  416c47:	test   eax,0x5f9dd2a6
  416c4c:	or     edx,DWORD PTR [ebp+0x55]
  416c4f:	jae    0x416c4d
  416c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c52:	adc    eax,0xd1888856
  416c57:	push   esp
  416c58:	lahf   
  416c59:	in     eax,0xe6
  416c5b:	gs rcr WORD PTR cs:[edi+edx*4-0x75],0xf1
  416c63:	xchg   ebp,eax
  416c64:	popa   
  416c65:	ret    0x542e
  416c68:	jns    0x416cc7
  416c6a:	ss jge 0x416cc5
  416c6d:	jmp    0x416c1f
  416c6f:	push   ds
  416c70:	stos   DWORD PTR es:[edi],eax
  416c71:	mov    edi,0xe2fbbea8
  416c76:	out    dx,al
  416c77:	mov    ds:0x2ef404e3,al
  416c7c:	and    al,0xc9
  416c7e:	jns    0x416c43
  416c80:	js     0x416ccf
  416c82:	dec    ebx
  416c83:	(bad)  
  416c84:	jmp    0xe2658eec
  416c89:	ret    0x65e
  416c8c:	push   esp
  416c8d:	push   eax
  416c8e:	int3   
  416c8f:	xlat   BYTE PTR ds:[ebx]
  416c90:	mov    ebx,DWORD PTR [ebp-0x8]
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    bh,ah
  416df4:	fcmovu st,st(6)
  416df6:	sbb    BYTE PTR [ebp+eax*2-0x80],dh
  416dfa:	cmp    DWORD PTR [esi],0x5e
  416dfd:	add    DWORD PTR [ebx-0x163bc864],0xffffff9c
  416e04:	das    
  416e05:	int3   
  416e06:	in     eax,dx
  416e07:	jne    0x416d9a
  416e09:	sub    ecx,edx
  416e0b:	cwde   
  416e0c:	pop    esi
  416e0d:	inc    eax
  416e0e:	cmp    BYTE PTR [edi+0x1a547cc1],ah
  416e14:	mov    WORD PTR [eax+0x7a28a2e3],ss
  416e1a:	push   eax
  416e1b:	mov    DWORD PTR [ebx],edi
  416e1d:	ins    DWORD PTR es:[edi],dx
  416e1e:	or     DWORD PTR [esi+0x490d5a56],esp
  416e24:	inc    ebp
  416e25:	ja     0x416dfe
  416e27:	cs es xor bl,bl
  416e2b:	out    0x15,al
  416e2d:	ja     0x416e19
  416e2f:	arpl   sp,dx
  416e31:	push   esi
  416e32:	fcomp  DWORD PTR [ecx]
  416e34:	es push cs
  416e36:	add    DWORD PTR [edx+eiz*2+0x51],esp
  416e3a:	outs   dx,DWORD PTR ds:[esi]
  416e3b:	lods   al,BYTE PTR ds:[esi]
  416e3c:	push   es
  416e3d:	and    dh,BYTE PTR [eax+ebx*1+0x5ae0af00]
  416e44:	fnstcw WORD PTR [esi-0x1c]
  416e47:	cdq    
  416e48:	mov    dl,0x13
  416e4a:	xor    eax,0xc0722920
  416e4f:	std    
  416e50:	scas   eax,DWORD PTR es:[edi]
  416e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e53:	out    0x7b,al
  416e55:	inc    ecx
  416e56:	jo     0x416ec4
  416e58:	push   ebx
  416e59:	push   edi
  416e5a:	test   cl,dl
  416e5c:	mov    DWORD PTR [eax+0x58],ebx
  416e5f:	out    dx,al
  416e60:	xchg   ebp,eax
  416e61:	cmp    eax,0xd18a20d4
  416e66:	mov    eax,ds:0x6b5ade23
  416e6b:	jno    0x416e68
  416e6d:	jp     0x416ea7
  416e6f:	or     dh,bl
  416e71:	xchg   ebp,eax
  416e72:	idiv   BYTE PTR [esi]
  416e74:	in     eax,dx
  416e75:	mov    bh,0xf3
  416e77:	icebp  
  416e78:	sar    DWORD PTR [esi+edx*2+0x20],cl
  416e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e7d:	inc    ebp
  416e7e:	cmc    
  416e7f:	xchg   ebp,eax
  416e80:	fucomi st,st(6)
  416e82:	popf   
  416e83:	dec    esp
  416e84:	and    ah,BYTE PTR ds:0x937bc3ef
  416e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e8b:	lea    sp,[edx-0x475f23f]
  416e92:	test   eax,ebx
  416e94:	jae    0x416eb3
  416e96:	stos   BYTE PTR es:[edi],al
  416e97:	fs xor al,0x17
  416e9a:	mov    al,BYTE PTR [ebp+0x431b5c05]
  416ea0:	sahf   
  416ea1:	jmp    0x57b:0x9a5077d
  416ea8:	sti    
  416ea9:	(bad)  
  416eab:	rol    ah,0xbf
  416eae:	push   edx
  416eaf:	sbb    bh,bl
  416eb1:	pop    edx
  416eb2:	cmp    eax,0x21fcb96c
  416eb7:	fwait
  416eb8:	pop    ss
  416eb9:	add    edx,DWORD PTR [ebx]
  416ebb:	fld    st(0)
  416ebd:	pop    es
  416ebe:	mov    dh,0x3f
  416ec0:	int    0x44
  416ec2:	cmp    dh,BYTE PTR [edi-0x3fb66f90]
  416ec8:	pushf  
  416ec9:	frstor ds:0x433467ca
  416ecf:	jg     0x416f05
  416ed1:	sbb    DWORD PTR [ebx+edi*8-0x43],edx
  416ed5:	(bad)  
  416ed6:	pop    ebx
  416ed7:	cmp    DWORD PTR [ebx+0x65],0x9b63a12
  416ede:	mov    dl,ch
  416ee0:	and    ah,0x2a
  416ee3:	cmp    DWORD PTR [ebp-0x37d9cd9f],esp
  416ee9:	jl     0x416f4a
  416eeb:	loope  0x416e97
  416eed:	out    0xaf,eax
  416eef:	or     al,0x5c
  416ef1:	pop    esi
  416ef2:	mov    ds:0x6728ff6c,al
  416ef7:	pushf  
  416ef8:	bound  esp,QWORD PTR [ebx-0x1a]
  416efb:	xchg   DWORD PTR [eax+0x30],edi
  416efe:	push   edi
  416eff:	leave  
  416f00:	ins    DWORD PTR es:[edi],dx
  416f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f02:	inc    ecx
  416f03:	es pushf 
  416f05:	xchg   esp,ebp
  416f07:	mov    esp,0x1dc5d572
  416f0c:	popa   
  416f0d:	xchg   edx,eax
  416f0e:	dec    edx
  416f0f:	xchg   ebp,eax
  416f10:	aaa    
  416f11:	loopne 0x416f32
  416f13:	repz test eax,0xfcb9bea4
  416f19:	(bad)  
  416f1a:	aad    0xef
  416f1c:	mov    dl,0x34
  416f1e:	adc    ch,bh
  416f20:	into   
  416f21:	xor    DWORD PTR [edi],ecx
  416f23:	retf   
  416f24:	je     0x416ef3
  416f26:	sub    BYTE PTR [eax+eax*8-0x1c],dh
  416f2a:	xchg   esi,eax
  416f2b:	cdq    
  416f2c:	xchg   ebx,eax
  416f2d:	xor    BYTE PTR [edx],bh
  416f2f:	aad    0x63
  416f31:	rcl    BYTE PTR [edi],cl
  416f33:	mov    ecx,0x53b1e88c
  416f38:	dec    eax
  416f39:	push   0xffffffff
  416f3b:	cmp    al,BYTE PTR [ebx]
  416f3d:	mov    bh,0x61
  416f3f:	cmp    eax,0x87df3cfc
  416f44:	out    0xf7,al
  416f46:	jns    0x416f6a
  416f48:	ret    
  416f49:	mov    cs,WORD PTR [eax]
  416f4b:	cmp    al,0xab
  416f4d:	adc    BYTE PTR [ecx+ebp*1+0x7423fdaa],ah
  416f54:	cmp    ebx,edx
  416f56:	inc    ebp
  416f57:	mov    ebx,ds
  416f59:	push   esp
  416f5a:	iret   
  416f5b:	ins    BYTE PTR es:[edi],dx
  416f5c:	call   0x842e:0x65900e8a
  416f63:	mov    DWORD PTR [ecx+0x3b9e59aa],eax
  416f69:	xor    eax,DWORD PTR [edx]
  416f6b:	mov    bh,0x57
  416f6d:	sysexit 
  416f6f:	push   ebx
  416f70:	or     eax,0x8dd60e9f
  416f75:	rcr    edi,0x9b
  416f78:	in     eax,dx
  416f79:	pop    esp
  416f7a:	xor    al,0xae
  416f7c:	and    al,0xdb
  416f7e:	stos   DWORD PTR es:[edi],eax
  416f7f:	div    DWORD PTR [esi-0x6f8cb32f]
  416f85:	into   
  416f86:	daa    
  416f87:	mov    cl,0xb
  416f89:	add    eax,0x5e1a9200
  416f8e:	shl    DWORD PTR [ebp-0x56085ec4],cl
  416f94:	lods   al,BYTE PTR ds:[esi]
  416f95:	(bad)  
  416f96:	mov    esi,0x3c786778
  416f9b:	cs cs (bad) 
  416f9e:	test   al,0xf1
  416fa0:	sub    eax,0x47ecca87
  416fa5:	pop    esp
  416fa6:	ror    DWORD PTR [edx-0x42],cl
  416fa9:	into   
  416faa:	sbb    edi,DWORD PTR [ecx]
  416fac:	xor    al,0xce
  416fae:	loopne 0x417022
  416fb0:	mov    eax,0x96d32480
  416fb5:	test   DWORD PTR [ecx-0x53cedd60],ebp
  416fbb:	xor    dl,0x75
  416fbe:	push   ebp
  416fbf:	mov    ds:0xd28ce406,al
  416fc4:	add    dl,BYTE PTR [ebp+0x3a]
  416fc7:	test   ah,cl
  416fc9:	fcom   QWORD PTR [ecx]
  416fcb:	inc    ecx
  416fcc:	cmp    esp,DWORD PTR [ebx]
  416fce:	add    BYTE PTR [edi],dl
  416fd0:	repnz arpl WORD PTR [ebp-0x1c],bp
  416fd4:	pop    esi
  416fd5:	data16 add BYTE PTR [eax],ah
  416fd8:	push   ebp
  416fd9:	lods   eax,DWORD PTR ds:[esi]
  416fda:	push   ebx
  416fdb:	inc    edx
  416fdc:	mov    eax,0x278085de
  416fe1:	pop    esp
  416fe2:	jp     0x417025
  416fe4:	pop    edi
  416fe5:	int3   
  416fe6:	jl     0x416f6f
  416fe8:	in     al,0xc0
  416fea:	retf   
  416feb:	add    dh,BYTE PTR [ebp+eax*2+0xf]
  416fef:	loopne 0x416fbf
  416ff1:	jns    0x416f8e
  416ff3:	push   edi
  416ff4:	fwait
  416ff5:	mov    ds:0x25016320,al
  416ffa:	mov    bl,0x4e
  416ffc:	test   DWORD PTR [edi+0x28d335fa],0xda038fb5
  417006:	mov    dl,0x47
  417008:	jmp    DWORD PTR [edx+0x57]
  41700b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41700c:	(bad)  
  41700d:	not    DWORD PTR [ebp+0x74]
  417010:	cmp    DWORD PTR [ecx-0x5cd7ce29],esi
  417016:	jae    0x417025
  417018:	mov    ds:0xe4100a31,eax
  41701d:	sbb    BYTE PTR [esi+esi*1+0x69dbf5e6],0x7d
  417025:	aaa    
  417026:	jne    0x417080
  417028:	dec    edi
  417029:	in     al,0x79
  41702b:	test   BYTE PTR [ebx],dl
  41702d:	xor    dl,BYTE PTR [ecx+0x798e4032]
  417033:	jae    0x416fcb
  417035:	in     al,0xc8
  417037:	lahf   
  417038:	std    
  417039:	jno    0x417045
  41703b:	retf   
  41703c:	(bad)  ds:0x91c8cc63
  417042:	cdq    
  417043:	pop    edi
  417044:	sbb    eax,0xa12fdd7d
  417049:	push   esp
  41704a:	dec    ecx
  41704b:	je     0x41706c
  41704d:	jg     0x41704f
  41704f:	lahf   
  417050:	ror    dh,1
  417052:	mov    eax,0x940edb53
  417057:	mov    ebx,0xed731073
  41705c:	clc    
  41705d:	aas    
  41705e:	inc    edi
  41705f:	adc    edx,esp
  417061:	sets   BYTE PTR [ebx-0x549f4717]
  417068:	fisub  DWORD PTR [edx-0x5502277c]
  41706e:	mov    bl,0x3a
  417070:	loopne 0x416ff2
  417072:	arpl   WORD PTR [esp+eiz*8],sp
  417075:	mov    ebx,0x3804d681
  41707a:	rcl    dl,1
  41707c:	dec    dl
  41707e:	pop    ds
  41707f:	cmp    al,0x75
  417081:	imul   esi,DWORD PTR [esi-0x3],0x887220be
  417088:	sub    eax,0x80192d1b
  41708d:	outs   dx,DWORD PTR es:[esi]
  41708f:	sub    DWORD PTR [edx+0x6],ebx
  417092:	ja     0x4170e8
  417094:	adc    edx,DWORD PTR [ebx+0x40f1ee48]
  41709a:	push   edi
  41709b:	pop    edi
  41709c:	jne    0x4170b0
  41709e:	push   ss
  41709f:	pop    esi
  4170a0:	nop
  4170a1:	scas   al,BYTE PTR es:[edi]
  4170a2:	aas    
  4170a3:	or     al,BYTE PTR [ebx+0x3f]
  4170a6:	xor    ebx,DWORD PTR [edx-0x41]
  4170a9:	test   BYTE PTR [ecx-0x22],dh
  4170ac:	rcl    BYTE PTR [edx],cl
  4170ae:	pop    esi
  4170af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170b0:	mov    ecx,0xaa00f7ab
  4170b5:	lods   eax,DWORD PTR ds:[esi]
  4170b6:	fdivr  DWORD PTR [esi-0x1dd43516]
  4170bc:	jb     0x41710c
  4170be:	mov    esp,0x3b21e9d7
  4170c3:	repnz popfw 
  4170c6:	and    DWORD PTR [ecx],edx
  4170c8:	sbb    ebx,ebp
  4170ca:	adc    ch,BYTE PTR ds:0x86647b55
  4170d0:	popa   
  4170d1:	inc    edi
  4170d2:	ss adc edi,ebp
  4170d5:	dec    esi
  4170d6:	pop    es
  4170d7:	jp     0x417125
  4170d9:	dec    esi
  4170da:	mov    esp,0xa6f92324
  4170df:	inc    edx
  4170e0:	xor    ebx,eax
  4170e2:	imul   BYTE PTR [ecx+0x32cc787]
  4170e8:	push   ebp
  4170e9:	cdq    
  4170ea:	shl    ecx,0x3c
  4170ed:	xor    eax,0x1aabe5e8
  4170f2:	and    eax,0xff674baa
  4170f7:	jb     0x41713e
  4170f9:	add    BYTE PTR [edx+eax*2],dh
  4170fc:	adc    al,0xce
  4170fe:	pop    ebx
  4170ff:	ss pop edi
  417101:	or     DWORD PTR [ecx],ecx
  417103:	ds call 0x8ede697d
  417109:	sbb    al,0x19
  41710b:	mov    bl,0x3a
  41710d:	ret    
  41710e:	mov    al,ds:0xfae210d2
  417113:	sti    
  417114:	inc    eax
  417115:	rol    BYTE PTR gs:[edi-0xc],1
  417119:	das    
  41711a:	sub    al,0x8
  41711c:	jae    0x4170d9
  41711e:	mov    ds:0xb972cce4,al
  417123:	xor    DWORD PTR [eax+0x24892e28],esp
  417129:	adc    cl,dl
  41712b:	imul   DWORD PTR [eax+ebx*8+0x69]
  41712f:	mov    dh,0x1
  417131:	xchg   ebp,eax
  417132:	xchg   edi,eax
  417133:	(bad)  
  417134:	jmp    0xd4c69078
  417139:	adc    BYTE PTR [ebx-0x79328f75],cl
  41713f:	hlt    
  417140:	inc    esp
  417141:	fsubr  QWORD PTR [esi+0x39]
  417144:	mov    ds:0x2ab1dace,eax
  417149:	pop    ecx
  41714a:	ins    DWORD PTR es:[edi],dx
  41714b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41714c:	xchg   esp,eax
  41714d:	fld    QWORD PTR [edx]
  41714f:	stos   DWORD PTR es:[edi],eax
  417150:	inc    ecx
  417151:	nop
  417152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417153:	mov    al,0xe4
  417155:	pop    ecx
  417156:	mov    ds:0xb68f8ba5,al
  41715b:	neg    ecx
  41715d:	sub    eax,0xf983c540
  417162:	pop    ds
  417163:	mov    ah,0xe1
  417165:	push   edi
  417166:	sub    DWORD PTR [edi],0x13030717
  41716c:	jmp    0x4967:0xc89d8c2e
  417173:	and    ebx,ebx
  417175:	jae    0x41718d
  417177:	and    al,0x6a
  417179:	js     0x41714e
  41717b:	jecxz  0x41717b
  41717d:	sbb    BYTE PTR [edi-0x302f6691],ah
  417183:	add    cl,al
  417185:	enter  0x9f1d,0x87
  417189:	mov    esp,0x84630ff
  41718e:	jmp    0x5582:0x6b6b844c
  417195:	mov    edx,0x1c0454af
  41719a:	outs   dx,BYTE PTR ds:[esi]
  41719b:	shl    esi,0x56
  41719e:	push   ecx
  41719f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171a0:	jo     0x4171e0
  4171a2:	mov    ds,eax
  4171a4:	sbb    DWORD PTR [edx+0x41],0xee08b7e6
  4171ab:	push   edx
  4171ac:	jnp    0x4171f6
  4171ae:	push   ebp
  4171af:	popf   
  4171b0:	xchg   edx,eax
  4171b1:	jb     0x41715e
  4171b3:	push   edi
  4171b4:	(bad)
  4171b7:	mov    BYTE PTR [eax-0x25bee89c],dh
  4171bd:	xor    BYTE PTR [ebx+ebp*2],cl
  4171c0:	mov    ecx,DWORD PTR [eax]
  4171c2:	jno    0x4171ab
  4171c4:	aaa    
  4171c5:	dec    ecx
  4171c6:	(bad)  
  4171c7:	pop    ecx
  4171c8:	xchg   ebx,eax
  4171c9:	addr16 push eax
  4171cb:	daa    
  4171cc:	add    ebx,esi
  4171ce:	leave  
  4171cf:	test   DWORD PTR [ebx],ebp
  4171d1:	data16 xchg BYTE PTR [eax-0x1d],cl
  4171d5:	lahf   
  4171d6:	clc    
  4171d7:	mov    edx,0x173fc0b8
  4171dc:	fwait
  4171dd:	adc    eax,0xcdc47629
  4171e2:	cmp    ebx,DWORD PTR [ebp-0x77]
  4171e5:	leave  
  4171e6:	push   es
  4171e7:	sbb    al,0x9c
  4171e9:	mov    ch,BYTE PTR [ecx-0x1139c869]
  4171ef:	sbb    bl,BYTE PTR [esi]
  4171f1:	mov    ds:0xdc7e3e,al
  4171f6:	sub    BYTE PTR ds:0x143dc900,bl
  4171fc:	or     BYTE PTR [esi+0x3b],cl
  4171ff:	mov    ebx,0x8ec5cb67
  417204:	outs   dx,BYTE PTR ds:[esi]
  417205:	cli    
  417206:	aam    0xfb
  417208:	or     ebp,ebp
  41720a:	jmp    0x3004610e
  41720f:	mov    ebx,0xbcdf4b8
  417214:	xchg   ebp,eax
  417215:	vmread DWORD PTR ds:0x56863916,edx
  41721c:	and    ecx,0x23270e0
  417222:	lahf   
  417223:	fisttp DWORD PTR [ecx-0x6a197123]
  417229:	xchg   edx,eax
  41722a:	cmp    ecx,esp
  41722c:	xchg   edi,eax
  41722d:	outs   dx,DWORD PTR ds:[esi]
  41722e:	xor    al,0x66
  417230:	mov    bl,0x3a
  417232:	(bad)  
  417233:	aam    0x0
  417235:	outs   dx,BYTE PTR ds:[esi]
  417236:	imul   edi,esp,0xffffffa7
  417239:	fistp  WORD PTR [ebp+0x1a]
  41723c:	sub    bl,BYTE PTR [edx-0x46]
  41723f:	rcr    DWORD PTR [edi+0x63dd697e],0x9d
  417246:	ja     0x41723d
  417248:	sbb    ebx,DWORD PTR [edi-0x77]
  41724b:	ja     0x4172a1
  41724d:	xchg   esp,eax
  41724e:	push   ebp
  41724f:	(bad)  
  417251:	ja     0x4171e0
  417253:	push   cs
  417254:	outs   dx,BYTE PTR ds:[esi]
  417255:	or     al,0xc
  417257:	jl     0x41722c
  417259:	test   eax,0x6d13b493
  41725e:	pushf  
  41725f:	test   BYTE PTR [esi],0xbe
  417262:	mov    eax,ds:0x7f500cb5
  417267:	mov    ecx,0x3af0d1af
  41726c:	ret    0xcc89
  41726f:	ins    BYTE PTR es:[edi],dx
  417270:	imul   ebx,DWORD PTR [esp+eax*2-0x51],0x1a
  417275:	lods   al,BYTE PTR ds:[esi]
  417276:	xchg   esi,eax
  417277:	add    esp,eax
  417279:	pop    ax
  41727b:	fldcw  WORD PTR ds:0xb4bff7ec
  417281:	cmp    ebx,DWORD PTR [eax+ebp*2+0x69ad763]
  417288:	stc    
  417289:	dec    esi
  41728a:	fadd   DWORD PTR [edx]
  41728c:	cmc    
  41728d:	loope  0x417241
  41728f:	repz and DWORD PTR [ecx-0x49539c92],edx
  417296:	dec    esi
  417297:	jae    0x41730e
  417299:	mov    esp,0x559c1cea
  41729e:	(bad)  
  4172a0:	in     eax,0x26
  4172a2:	ss and al,0x29
  4172a5:	sbb    bh,cl
  4172a7:	push   edi
  4172a8:	xchg   edx,eax
  4172a9:	and    dh,BYTE PTR [esi+0x6e]
  4172ac:	fcom   DWORD PTR [esi]
  4172ae:	out    0xdf,eax
  4172b0:	ss cs push cs
  4172b3:	adc    DWORD PTR [esi+0x31a6e866],esi
  4172b9:	call   0x3bd17c8c
  4172be:	jb     0x417287
  4172c0:	cmp    DWORD PTR [ecx],eax
  4172c2:	cmp    dl,BYTE PTR [edx]
  4172c4:	jns    0x417296
  4172c6:	mov    dh,0xc1
  4172c8:	jg     0x41730b
  4172ca:	inc    esi
  4172cb:	mov    ecx,0x9ff139d0
  4172d0:	in     al,dx
  4172d1:	push   edi
  4172d2:	lea    eax,[ebx-0xebbc48]
  4172d8:	and    dh,BYTE PTR [esi+ebp*8]
  4172db:	pop    edi
  4172dc:	call   0x51c4b297
  4172e1:	sub    DWORD PTR [esi],esp
  4172e3:	adc    eax,0xd43d6416
  4172e8:	int    0x9f
  4172ea:	icebp  
  4172eb:	pop    ecx
  4172ec:	jmp    0xd046cc54
  4172f1:	fsubrp st(0),st
  4172f4:	xchg   ebx,eax
  4172f5:	(bad)  
  4172f6:	cmp    dh,BYTE PTR [eax]
  4172f8:	inc    esi
  4172f9:	mov    bl,0xdc
  4172fb:	and    edi,esi
  4172fd:	pop    ebp
  4172fe:	mov    edx,0xca30d066
  417303:	loope  0x41728b
  417305:	(bad)  
  417306:	stos   BYTE PTR es:[edi],al
  417307:	dec    esp
  417308:	test   eax,0xfbbb168d
  41730d:	ins    BYTE PTR es:[edi],dx
  41730e:	test   al,0x35
  417310:	sub    DWORD PTR [ecx+eax*8+0x67],0x4f4d1e38
  417318:	add    DWORD PTR [ebx],ebx
  41731a:	pop    es
  41731b:	bound  edx,QWORD PTR [eax+0x2671854]
  417321:	loopne 0x4172cb
  417323:	push   esp
  417324:	mov    dh,0xc
  417326:	cmp    BYTE PTR [ecx+0x61e9cbc9],0xea
  41732d:	jo     0x4172d9
  41732f:	sub    al,0xcd
  417331:	jo     0x417362
  417333:	or     dl,0x20
  417336:	out    dx,eax
  417337:	les    edi,FWORD PTR [edi]
  417339:	je     0x417378
  41733b:	dec    eax
  41733c:	loope  0x417355
  41733e:	xor    dh,BYTE PTR [esi-0x1]
  417341:	pusha  
  417342:	daa    
  417343:	das    
  417344:	adc    DWORD PTR [ebx+0x11],ecx
  417347:	push   ebp
  417348:	pop    ebp
  417349:	sub    al,0x40
  41734b:	push   es
  41734c:	mov    bl,0x81
  41734e:	dec    ecx
  41734f:	daa    
  417350:	mov    esp,0x7a67f837
  417355:	add    DWORD PTR [edx],eax
  417357:	xor    cl,BYTE PTR [ebx+0x9]
  41735a:	ins    DWORD PTR es:[edi],dx
  41735b:	dec    edi
  41735c:	and    eax,edx
  41735e:	cmc    
  41735f:	jge    0x4173a4
  417361:	jmp    0x4172e8
  417363:	leave  
  417364:	push   edx
  417365:	xchg   edx,eax
  417366:	call   0x5d1c:0xffd02e08
  41736d:	rol    BYTE PTR [esi-0x16a386ae],1
  417373:	lods   eax,DWORD PTR ds:[esi]
  417374:	daa    
  417375:	add    BYTE PTR [ebp-0x31],al
  417378:	add    bl,bh
  41737a:	dec    DWORD PTR [eax]
  41737c:	js     0x4173d5
  41737e:	int    0x93
  417380:	xor    al,0x7e
  417382:	push   0x6ff941fd
  417387:	ret    0xe38e
  41738a:	push   esi
  41738b:	push   0xf3831c6a
  417390:	inc    ebp
  417391:	pop    ss
  417392:	sbb    eax,0xbacc1b99
  417397:	out    0x79,al
  417399:	jbe    0x417342
  41739b:	call   0x5d84b7c3
  4173a0:	pushf  
  4173a1:	jb     0x4173f0
  4173a3:	in     eax,dx
  4173a4:	xchg   DWORD PTR [ecx+ebx*2-0x15518184],esp
  4173ab:	xchg   BYTE PTR [eax-0xa],bl
  4173ae:	arpl   WORD PTR [esi-0x25fa881d],ax
  4173b4:	scas   eax,DWORD PTR es:[edi]
  4173b5:	mov    cl,0x30
  4173b7:	outs   dx,DWORD PTR ds:[esi]
  4173b8:	imul   ebx,edi,0xffffffb2
  4173bb:	out    0x4a,al
  4173bd:	inc    ecx
  4173be:	adc    bh,bl
  4173c0:	pop    ebp
  4173c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173c2:	mov    edi,0xb5a9a883
  4173c7:	in     al,0x39
  4173c9:	xor    DWORD PTR [eax],ebp
  4173cb:	cmp    BYTE PTR [ebx],bh
  4173cd:	stc    
  4173ce:	in     eax,0x3b
  4173d0:	fstp   QWORD PTR [ebp-0x3c356360]
  4173d6:	fisttp WORD PTR [edi-0x4]
  4173d9:	and    al,0x35
  4173db:	sti    
  4173dc:	jno    0x417387
  4173de:	xchg   ah,ch
  4173e0:	in     al,dx
  4173e1:	hlt    
  4173e2:	stos   DWORD PTR es:[edi],eax
  4173e3:	mov    al,dh
  4173e5:	stos   DWORD PTR es:[edi],eax
  4173e6:	loope  0x417383
  4173e8:	pop    esi
  4173e9:	mov    dh,0x65
  4173eb:	mov    dl,0x89
  4173ed:	sbb    DWORD PTR [eax],ebp
  4173ef:	lods   eax,DWORD PTR ds:[esi]
  4173f0:	and    DWORD PTR [edi-0x6b],esi
  4173f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173f4:	cmp    al,BYTE PTR [ecx+0x2d]
  4173f7:	or     eax,0x3f54ed3e
  4173fc:	jo     0x4173ef
  4173fe:	adc    edi,ebp
  417400:	(bad)  
  417401:	sub    BYTE PTR [esi+0x31cb7693],dl
  417407:	sub    bl,BYTE PTR [ebp+0x50fa9bf8]
  41740d:	jne    0x417414
  41740f:	push   0xffffffd8
  417411:	je     0x4173ab
  417413:	cmp    al,al
  417415:	jae    0x4173cb
  417417:	mov    eax,0x58522f09
  41741c:	std    
  41741d:	or     ecx,DWORD PTR [edx]
  41741f:	test   DWORD PTR [esi-0x133eef20],edi
  417425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417426:	adc    eax,0x3d46a488
  41742b:	jnp    0x417487
  41742d:	(bad)  
  41742e:	or     al,0x54
  417430:	mov    dh,0xfc
  417432:	push   edi
  417433:	dec    eax
  417434:	lods   al,BYTE PTR ds:[esi]
  417435:	pop    eax
  417436:	mov    cl,0x55
  417438:	clc    
  417439:	sub    al,0xd7
  41743b:	and    al,BYTE PTR [ebx-0x44dc609c]
  417441:	sub    al,0x2f
  417443:	loopne 0x417474
  417445:	or     DWORD PTR [edx-0xd9d082f],edi
  41744b:	fldcw  WORD PTR [ecx+0x3697d69e]
  417451:	jmp    0xd7a:0xac1c16d0
  417458:	xchg   ebx,eax
  417459:	aas    
  41745a:	mov    al,0x69
  41745c:	or     ebp,DWORD PTR [ebx+0x26]
  41745f:	mov    WORD PTR [edx-0x12],gs
  417462:	xor    eax,0xacd00a9f
  417467:	inc    ecx
  417468:	or     ebp,esp
  41746a:	aad    0x1d
  41746c:	call   0x3b75:0xbebf7c0e
  417473:	mov    ds:0xb380f7a3,eax
  417478:	sbb    eax,eax
  41747a:	in     eax,dx
  41747b:	adc    BYTE PTR [edi+0x3b],ch
  41747e:	and    al,0xc
  417480:	stc    
  417481:	fs dec edi
  417483:	dec    eax
  417484:	mov    cl,0x3d
  417486:	xchg   BYTE PTR [ecx+0x14],bl
  417489:	inc    ebp
  41748a:	sbb    al,0xcf
  41748c:	push   ds
  41748d:	pop    esi
  41748e:	mov    bh,0x55
  417490:	jmp    0xa012:0x952337ef
  417497:	ret    0xfecc
  41749a:	dec    ecx
  41749b:	fistp  QWORD PTR [eax-0x53628882]
  4174a1:	jmp    0x72f135cc
  4174a6:	add    BYTE PTR [eax-0x16],dh
  4174a9:	or     eax,0x55350937
  4174ae:	dec    eax
  4174af:	cwde   
  4174b0:	retf   
  4174b1:	and    ebp,DWORD PTR [esi+ebx*8+0x4d]
  4174b5:	loop   0x417488
  4174b7:	scas   eax,DWORD PTR es:[edi]
  4174b8:	inc    ebx
  4174b9:	push   cs
  4174ba:	iret   
  4174bb:	mov    dl,BYTE PTR [ebx-0x5d]
  4174be:	fcmovnb st,st(0)
  4174c0:	or     DWORD PTR [edx],ecx
  4174c2:	ficomp DWORD PTR [ebx]
  4174c4:	enter  0xd7a7,0xb4
  4174c8:	xchg   edx,eax
  4174c9:	xor    cl,ch
  4174cb:	and    eax,0x1edc7828
  4174d0:	mov    al,0x3b
  4174d2:	and    ch,bl
  4174d4:	ja     0x41754c
  4174d6:	dec    edx
  4174d7:	mov    cl,0x29
  4174d9:	loop   0x4174c3
  4174db:	std    
  4174dc:	shr    BYTE PTR [esi],1
  4174de:	push   edi
  4174df:	or     DWORD PTR [ebp+0x71aa3492],ebx
  4174e5:	cs sub al,0x79
  4174e8:	and    eax,0x8d5863df
  4174ed:	dec    edi
  4174ee:	push   ecx
  4174ef:	add    eax,0x766999fa
  4174f4:	mov    BYTE PTR [ecx],0xa5
  4174f7:	mov    fs,WORD PTR [esi+0x4aa6c10a]
  4174fd:	outs   dx,DWORD PTR ds:[esi]
  4174fe:	shr    BYTE PTR [ebx+ebp*4+0x27],cl
  417502:	stc    
  417503:	sub    DWORD PTR [edx+ebp*2],ebp
  417506:	sbb    DWORD PTR [ebp+0x2cff7b0c],ebp
  41750c:	jl     0x41756c
  41750e:	push   es
  41750f:	stc    
  417510:	iret   
  417511:	and    cl,BYTE PTR [ebp+0x7d]
  417514:	push   esp
  417515:	jmp    0x9288:0xdd4078bc
  41751c:	into   
  41751d:	stos   DWORD PTR es:[edi],eax
  41751e:	scas   al,BYTE PTR es:[edi]
  41751f:	(bad)  
  417520:	lock mov WORD PTR [esi+ebx*1-0x73],es
  417525:	pusha  
  417526:	xchg   esp,eax
  417527:	ret    0x732a
  41752a:	xor    eax,0x3a1e45b5
  41752f:	mov    esp,0x1ab7132a
  417534:	mov    ds:0x3694a794,eax
  417539:	inc    ebx
  41753a:	xor    al,0xa5
  41753c:	addr16 loope 0x417503
  41753f:	mov    ebx,0x70e8e6ec
  417544:	iret   
  417545:	xchg   esp,eax
  417546:	cwde   
  417547:	pop    ds
  417548:	inc    esp
  417549:	(bad)  
  41754a:	imul   ebx,DWORD PTR [ecx+0x648304be],0xb131c46c
  417554:	jmp    0x4174d9
  417556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417557:	push   esp
  417558:	cmp    DWORD PTR [eax],edx
  41755a:	int3   
  41755b:	pop    es
  41755c:	fdiv   DWORD PTR [esi]
  41755e:	jp     0x417508
  417560:	mov    ah,ch
  417562:	sbb    ecx,edi
  417564:	(bad)
  417567:	sti    
  417568:	inc    edx
  417569:	dec    edx
  41756a:	cli    
  41756b:	add    eax,0xf93a08e6
  417570:	mov    ss,WORD PTR [edx+edi*2]
  417573:	pop    edx
  417574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417575:	mov    ds:0x4dfbd5eb,al
  41757a:	in     al,dx
  41757b:	mov    edi,0x52b07686
  417580:	stos   DWORD PTR es:[edi],eax
  417581:	test   DWORD PTR [ebp+0x5eaae935],ecx
  417587:	add    al,0x70
  417589:	xor    DWORD PTR ds:0x220c21ad,edx
  41758f:	mov    ebp,0xa1d3740f
  417594:	cmp    ebx,DWORD PTR cs:[ebp+0x29de42a0]
  41759b:	jmp    0x34a8:0x1b20146c
  4175a2:	and    al,0xd2
  4175a4:	xchg   edi,eax
  4175a5:	mov    eax,0x8a48b9cc
  4175aa:	jmp    0x2de9da9e
  4175af:	(bad)  [esi]
  4175b1:	jns    0x4175f2
  4175b3:	mov    ebx,0xa6bae9e7
  4175b8:	jle    0x417634
  4175ba:	push   es
  4175bb:	call   0xa1ae:0xef652b6e
  4175c2:	push   edi
  4175c3:	sub    dl,BYTE PTR [ebx-0x15]
  4175c6:	hlt    
  4175c7:	and    eax,0xd5b06432
  4175cc:	test   eax,0x7266668
  4175d1:	cdq    
  4175d2:	and    al,BYTE PTR [eax]
  4175d4:	leave  
  4175d5:	push   0x47130249
  4175da:	xor    esp,0xffffffec
  4175dd:	and    al,0xbc
  4175df:	ret    
  4175e0:	and    eax,0xcf259529
  4175e5:	push   ss
  4175e6:	sub    ecx,DWORD PTR [ecx+0x31]
  4175e9:	nop
  4175ea:	(bad)  
  4175eb:	cld    
  4175ec:	shr    BYTE PTR [esi+0x2c316ac9],1
  4175f2:	sub    DWORD PTR [ecx-0x6d4b3a8e],esi
  4175f8:	imul   ebp,DWORD PTR [ecx-0x6e],0xffffffa9
  4175fc:	mov    esi,0x51a8ceec
  417601:	inc    esp
  417602:	outs   dx,BYTE PTR ds:[esi]
  417603:	loopne 0x417663
  417605:	jbe    0x4175d8
  417607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417608:	cdq    
  417609:	mov    BYTE PTR [eax-0x5584ef63],dh
  41760f:	jnp    0x417659
  417611:	outs   dx,DWORD PTR ds:[esi]
  417612:	lods   eax,DWORD PTR ds:[esi]
  417613:	inc    esp
  417614:	lods   al,BYTE PTR ds:[esi]
  417615:	data16 aaa 
  417617:	scas   eax,DWORD PTR es:[edi]
  417618:	dec    edi
  417619:	push   ss
  41761a:	idiv   DWORD PTR [ebp-0x3c]
  41761d:	push   ebp
  41761e:	mov    eax,ds:0xe57fc0aa
  417623:	push   esp
  417624:	in     eax,0x20
  417626:	jmp    0xa167ba1f
  41762b:	mov    dl,0xfe
  41762d:	in     al,0x24
  41762f:	fwait
  417630:	sub    esp,DWORD PTR [esi+ebp*1-0x8fa86f5]
  417637:	and    dh,BYTE PTR [ecx+ecx*8-0x7dca0540]
  41763e:	addr16 repz jp 0x4175f0
  417642:	shl    esi,cl
  417644:	cmp    BYTE PTR [ebx-0x2a],cl
  417647:	adc    al,0xad
  417649:	adc    edi,edx
  41764b:	fnstcw WORD PTR fs:[eax-0x12d95ba0]
  417652:	popf   
  417653:	or     ch,BYTE PTR [ecx]
  417655:	shl    BYTE PTR [ebp+0x76],1
  417658:	xor    DWORD PTR [edi-0x5a],0x7c6f46fe
  41765f:	xchg   edi,eax
  417660:	jo     0x417642
  417662:	push   esp
  417663:	dec    eax
  417664:	out    0xdd,eax
  417666:	arpl   WORD PTR [edx],si
  417668:	sbb    BYTE PTR [ecx+0x27953332],dh
  41766e:	xor    eax,0xb83d765f
  417673:	xor    DWORD PTR ds:0xc8580fb5,ebp
  417679:	pop    edx
  41767a:	fimul  WORD PTR [edx+ecx*2+0x52c8520c]
  417681:	xchg   esi,eax
  417682:	dec    esp
  417683:	or     al,0x4f
  417685:	daa    
  417686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417687:	repz xor ecx,eax
  41768a:	push   es
  41768b:	std    
  41768c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41768d:	and    esp,DWORD PTR [ebx]
  41768f:	je     0x417698
  417691:	cdq    
  417692:	mov    ebp,0x45210b7a
  417697:	call   0x1a41:0x9836e6b7
  41769e:	mov    ch,0xda
  4176a0:	mov    esp,0x930f8dba
  4176a5:	jno    0x417640
  4176a7:	(bad)  
  4176a8:	jmp    0xd4cf:0x558cca28
  4176af:	stos   DWORD PTR es:[edi],eax
  4176b0:	pushf  
  4176b1:	add    DWORD PTR [edi],ecx
  4176b3:	adc    DWORD PTR [eax+0x37],esi
  4176b6:	mov    ah,0x75
  4176b8:	shl    BYTE PTR [ebp-0x58],0x8e
  4176bc:	mul    dl
  4176be:	cli    
  4176bf:	cmp    bh,BYTE PTR [edx-0x55]
  4176c2:	lods   al,BYTE PTR ds:[esi]
  4176c3:	add    al,0xbe
  4176c5:	test   DWORD PTR [ecx],esi
  4176c7:	sbb    DWORD PTR [ebp-0x30f4e4fa],eax
  4176cd:	sbb    al,0x86
  4176cf:	mov    ds:0xcc61350d,al
  4176d4:	test   al,0x99
  4176d6:	test   eax,0x6766f168
  4176db:	xchg   ebx,eax
  4176dc:	lods   al,BYTE PTR ds:[esi]
  4176dd:	(bad)
  4176e0:	in     eax,dx
  4176e1:	jo     0x4176b3
  4176e3:	fld    TBYTE PTR [edx]
  4176e5:	stos   DWORD PTR es:[edi],eax
  4176e6:	fcmovb st,st(6)
  4176e8:	adc    eax,0xe91f0f22
  4176ed:	mov    bh,0xc1
  4176ef:	hlt    
  4176f0:	out    0xb9,al
  4176f2:	pop    edx
  4176f3:	lods   eax,DWORD PTR ds:[esi]
  4176f4:	cmp    al,0x69
  4176f6:	imul   edi,DWORD PTR [ecx],0x2c773ffc
  4176fc:	push   0x4f
  4176fe:	cld    
  4176ff:	fcomp  DWORD PTR [ebx-0x500289b8]
  417705:	jns    0x417735
  417707:	mov    ch,0x54
  417709:	mov    ecx,0x5801a508
  41770e:	jno    0x417751
  417710:	js     0x417717
  417712:	jmp    0x417791
  417714:	adc    DWORD PTR [ebp-0x7f20edbc],ecx
  41771a:	sbb    cl,bl
  41771c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41771d:	xchg   ebx,eax
  41771e:	neg    bh
  417720:	pop    esp
  417721:	stos   DWORD PTR es:[edi],eax
  417722:	fs sti 
  417724:	idiv   BYTE PTR [edi]
  417726:	gs pop ebx
  417728:	jg     0x4176da
  41772a:	sub    eax,0x6fb35680
  41772f:	jns    0x41777d
  417731:	mov    WORD PTR [ecx],es
  417733:	and    DWORD PTR [ebp-0x8],eax
  417736:	test   eax,0xbff25a0f
  41773b:	xor    dh,BYTE PTR [esi+0x75]
  41773e:	lods   eax,DWORD PTR fs:[esi]
  417740:	mov    eax,0xc3856799
  417745:	mov    edi,edx
  417747:	add    al,0x39
  417749:	arpl   WORD PTR [esi+0x16],di
  41774c:	(bad)  
  41774e:	xchg   ebp,eax
  41774f:	or     ah,bh
  417751:	scas   al,BYTE PTR es:[edi]
  417752:	push   esp
  417753:	mov    BYTE PTR [ebp+0x46f92538],cl
  417759:	bound  edx,QWORD PTR [esi-0x6f]
  41775c:	mov    edx,DWORD PTR [eax-0x61]
  41775f:	sub    BYTE PTR [edx],cl
  417761:	ins    BYTE PTR es:[edi],dx
  417762:	jl     0x417714
  417764:	adc    al,0x21
  417766:	addr16 jb 0x41779f
  417769:	sub    ch,dh
  41776b:	(bad)  
  41776c:	mov    al,ds:0x3a69ad1c
  417771:	mov    ebx,0x7fa27098
  417776:	fs stos DWORD PTR es:[edi],eax
  417778:	push   ecx
  417779:	xchg   ebx,eax
  41777a:	ds xchg esi,eax
  41777c:	rcl    BYTE PTR [edi],cl
  41777e:	add    bl,BYTE PTR [esi]
  417780:	xchg   ecx,esp
  417782:	jb     0x4177f9
  417784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417785:	sbb    al,0x82
  417787:	xchg   BYTE PTR [ebp-0x171c55f0],ah
  41778d:	call   0x9159cb9f
  417792:	jo     0x4177d2
  417794:	es es and al,0x87
  417798:	and    esp,eax
  41779a:	aaa    
  41779b:	push   edx
  41779c:	xor    eax,0x697c1cb0
  4177a1:	pushf  
  4177a2:	out    dx,eax
  4177a3:	jmp    0x52fe:0x91510d37
  4177aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ab:	imul   edi,DWORD PTR [ebx+0x36b01dca],0xca0fa069
  4177b5:	repz fdiv DWORD PTR [ecx-0x23]
  4177b9:	xchg   ebp,eax
  4177ba:	dec    edx
  4177bb:	dec    ebx
  4177bc:	gs cmp eax,ecx
  4177bf:	dec    ecx
  4177c0:	sahf   
  4177c1:	retf   
  4177c2:	sahf   
  4177c3:	sbb    esi,ebx
  4177c5:	mov    bh,0xf9
  4177c7:	stos   DWORD PTR es:[edi],eax
  4177c8:	gs or  eax,0x2fe88733
  4177ce:	jle    0x4177d9
  4177d0:	push   0x13
  4177d2:	push   0xfc51b16f
  4177d7:	mov    ah,0x8b
  4177d9:	jmp    0x2a42260f
  4177de:	(bad)  
  4177df:	adc    eax,0x40aebca0
  4177e4:	mov    ch,0x3c
  4177e6:	adc    dl,0x97
  4177e9:	or     al,0x77
  4177eb:	mov    edx,0x943f5076
  4177f0:	loope  0x417813
  4177f2:	mov    ds:0x229615ed,al
  4177f7:	aam    0x44
  4177f9:	or     al,0xf3
  4177fb:	test   DWORD PTR [edx+0x2e3c59a7],esp
  417801:	outs   dx,BYTE PTR ds:[esi]
  417802:	(bad)  [ebx+edx*2]
  417805:	cwde   
  417806:	pop    ebp
  417807:	add    DWORD PTR [ebp+eax*2+0x38],edx
  41780b:	push   edx
  41780c:	ficomp DWORD PTR ss:[eax+0x71]
  417810:	jo     0x417856
  417812:	stc    
  417813:	mov    al,ds:0x88dc4122
  417818:	ins    DWORD PTR es:[edi],dx
  417819:	popa   
  41781a:	cdq    
  41781b:	fnstsw WORD PTR [ebx+edi*2]
  41781e:	fisttp QWORD PTR [edi]
  417820:	hlt    
  417821:	outs   dx,BYTE PTR ds:[esi]
  417822:	jmp    0x3916c97f
  417827:	ins    DWORD PTR es:[edi],dx
  417828:	aaa    
  417829:	mov    ebx,cs
  41782b:	ss mov cl,0xb6
  41782e:	xor    al,0xc6
  417830:	xchg   ebp,ecx
  417832:	(bad)  
  417833:	cmp    ah,ch
  417835:	sub    BYTE PTR [edi+0x239eff14],bh
  41783b:	cmp    al,BYTE PTR [ebp+0x33]
  41783e:	pop    ecx
  41783f:	xor    eax,0x5739333d
  417844:	loope  0x417832
  417846:	cmp    bl,BYTE PTR [ebp+0x25]
  417849:	and    al,0x53
  41784b:	xchg   ecx,eax
  41784c:	jmp    0x4178b0
  41784e:	test   eax,0xf1212445
  417853:	jmp    0x3542b3b0
  417858:	mov    ebx,0x626a575d
  41785d:	adc    esi,DWORD PTR [edx]
  41785f:	mov    DWORD PTR [edx],ebp
  417861:	cwde   
  417862:	xchg   DWORD PTR es:[edi],eax
  417865:	push   es
  417866:	inc    esp
  417867:	loop   0x417821
  417869:	out    0x92,al
  41786b:	popf   
  41786c:	ds add al,0x2a
  41786f:	mov    DWORD PTR [ecx-0x524db158],ecx
  417875:	jg     0x4178c7
  417877:	enter  0x583f,0xe7
  41787b:	xlat   BYTE PTR ds:[ebx]
  41787c:	mov    dl,0x38
  41787e:	popa   
  41787f:	add    dl,BYTE PTR [esi+0x48f331ba]
  417885:	push   esp
  417886:	in     eax,dx
  417887:	hlt    
  417888:	jecxz  0x417830
  41788a:	fs cmc 
  41788c:	aad    0xad
  41788e:	mov    ch,0xee
  417890:	fdiv   DWORD PTR [eax-0x27]
  417893:	push   eax
  417894:	mov    ah,0xc2
  417896:	call   0x9b174b6e
  41789b:	ja     0x4178f6
  41789d:	adc    DWORD PTR [edi+0x1c],0xffffff98
  4178a1:	cmp    BYTE PTR [ebp+0x3f],0xa2
  4178a5:	imul   ebp,DWORD PTR [eax],0x5c
  4178a8:	mov    ebp,0x7d42a866
  4178ad:	add    al,0x14
  4178af:	shr    DWORD PTR [ebp-0x3f5ff3bf],0xe2
  4178b6:	xor    BYTE PTR [edx-0x9166a7e],cl
  4178bc:	add    BYTE PTR [ecx],dh
  4178be:	hlt    
  4178bf:	jno    0x41787e
  4178c1:	mov    cl,0x79
  4178c3:	stos   DWORD PTR es:[edi],eax
  4178c4:	pop    ebp
  4178c5:	inc    edi
  4178c6:	inc    ebx
  4178c7:	or     DWORD PTR [esi-0x54],ebp
  4178ca:	xchg   edi,eax
  4178cb:	inc    esi
  4178cc:	push   es
  4178cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178ce:	xor    BYTE PTR [ecx+0x66],al
  4178d1:	outs   dx,DWORD PTR ds:[esi]
  4178d2:	add    ecx,DWORD PTR [eax]
  4178d4:	ror    DWORD PTR [esp+esi*2+0x31],0x2a
  4178d9:	sub    ebx,edi
  4178db:	enter  0x6432,0xc
  4178df:	pop    ebp
  4178e0:	cmp    al,0xe4
  4178e2:	add    BYTE PTR [esp+esi*2+0x7a],dh
  4178e6:	loop   0x417947
  4178e8:	fistp  WORD PTR [ebx+0x43]
  4178eb:	and    DWORD PTR [ebx-0x64147b54],ecx
  4178f1:	pop    edx
  4178f2:	js     0x41787f
  4178f4:	and    al,0xca
  4178f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178f7:	scas   eax,DWORD PTR es:[edi]
  4178f8:	mov    ecx,DWORD PTR [eax+0x2a]
  4178fb:	int3   
  4178fc:	out    0x9a,eax
  4178fe:	or     BYTE PTR [ebp-0x4a],0x52
  417902:	sbb    bl,BYTE PTR [eax+eax*1]
  417905:	pushf  
  417906:	push   0x2e7fa683
  41790b:	dec    DWORD PTR [esi+0xf]
  41790e:	loope  0x4178c4
  417910:	shl    dh,cl
  417912:	adc    eax,0x2c11c918
  417917:	hlt    
  417918:	pop    esi
  417919:	mov    edx,0xa0371ab3
  41791e:	inc    ebp
  41791f:	in     al,dx
  417920:	mov    ecx,esp
  417922:	xor    eax,0x60fc01f
  417927:	xor    al,0xa2
  417929:	xor    BYTE PTR [esi-0x37],ah
  41792c:	mov    ecx,0x19b338d8
  417932:	retf   
  417933:	in     al,0x43
  417935:	ret    0xc26a
  417938:	jne    0x417962
  41793a:	in     eax,0xf
  41793c:	fisubr WORD PTR ds:0xc57cfe02
  417942:	inc    esp
  417943:	(bad)  
  417944:	pop    eax
  417945:	rdpmc  
  417947:	push   ss
  417948:	vmread DWORD PTR [edx-0x3c],edx
  41794c:	jp     0x417929
  41794e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41794f:	xor    edi,edi
  417951:	div    DWORD PTR [edx]
  417953:	sbb    BYTE PTR [esi+ecx*2+0x66],0x59
  417958:	(bad)  
  417959:	lea    eax,[esi]
  41795b:	sbb    al,0xb9
  41795d:	into   
  41795e:	push   ss
  41795f:	jg     0x417983
  417961:	nop
  417962:	jmp    0x417995
  417964:	dec    esp
  417965:	sub    eax,0x3c4a960d
  41796a:	or     ah,al
  41796c:	scas   eax,DWORD PTR es:[edi]
  41796d:	jbe    0x417980
  41796f:	inc    ebx
  417970:	jmp    0xd4f03d09
  417975:	in     eax,dx
  417976:	ja     0x417910
  417978:	fstp   QWORD PTR [ebx-0x63]
  41797b:	adc    al,0x1f
  41797d:	retf   
  41797e:	and    DWORD PTR [eax],ebp
  417980:	adc    BYTE PTR [edi-0x54],dl
  417983:	xlat   BYTE PTR ds:[ebx]
  417984:	fidivr DWORD PTR [esi]
  417986:	inc    edx
  417987:	push   esp
  417988:	pop    edi
  417989:	mov    esi,0x2f854d35
  41798e:	pop    edx
  41798f:	or     BYTE PTR [esi],ah
  417991:	push   cs
  417992:	dec    esp
  417993:	pop    edx
  417994:	fwait
  417995:	lds    ecx,FWORD PTR [edi+ebx*2]
  417998:	jp     0x417957
  41799a:	jno    0x41794f
  41799c:	mov    ebx,0x88579419
  4179a1:	dec    edx
  4179a2:	mov    dl,0xd3
  4179a4:	rol    BYTE PTR [ebp-0x65],cl
  4179a7:	aad    0x81
  4179a9:	leave  
  4179aa:	pop    ebp
  4179ac:	xor    eax,0x3dc016bd
  4179b1:	or     ch,ch
  4179b3:	popf   
  4179b4:	cmp    BYTE PTR [esi-0x7fb73e87],bl
  4179ba:	and    edx,eax
  4179bc:	xor    DWORD PTR [ebx+0x6a],esi
  4179bf:	xor    edx,ebx
  4179c1:	jg     0x417956
  4179c3:	outs   dx,BYTE PTR ds:[esi]
  4179c4:	and    eax,0x5d972535
  4179c9:	inc    ebp
  4179ca:	mov    dh,0xd1
  4179cc:	lahf   
  4179cd:	test   BYTE PTR [ebx+0x6d],bl
  4179d0:	out    dx,eax
  4179d1:	les    ebx,FWORD PTR ds:0x2aa9192c
  4179d7:	pushf  
  4179d8:	pushf  
  4179d9:	rcl    DWORD PTR [edx-0x2206658],1
  4179df:	xchg   edx,eax
  4179e0:	inc    esp
  4179e1:	sub    eax,0xab860ada
  4179e6:	fwait
  4179e7:	addr16 mov al,ah
  4179ea:	jecxz  0x41799e
  4179ec:	pop    ds
  4179ed:	sbb    eax,0x85897da7
  4179f2:	dec    DWORD PTR [eax-0x384231de]
  4179f8:	mov    ebp,0xf1a7ecb5
  4179fd:	js     0x417a63
  4179ff:	shl    DWORD PTR [esi-0x7c58f1fa],cl
  417a05:	mov    edx,0x92512d8b
  417a0a:	sbb    ebx,esi
  417a0c:	shr    esi,cl
  417a0e:	push   eax
  417a0f:	fs dec esi
  417a11:	push   ss
  417a12:	outs   dx,BYTE PTR ds:[esi]
  417a13:	and    edx,DWORD PTR [esi-0x65]
  417a16:	xor    eax,0x63e0dd3f
  417a1b:	loopne 0x417a08
  417a1d:	dec    ebx
  417a1e:	mov    ah,0xa3
  417a20:	lods   al,BYTE PTR ds:[esi]
  417a21:	rcr    eax,cl
  417a23:	cs push ss
  417a25:	jno    0x417a87
  417a27:	push   0x6ab57e56
  417a2c:	rol    DWORD PTR [edi-0xc],cl
  417a2f:	mov    ah,0x44
  417a31:	rcl    esi,0xbc
  417a34:	(bad)  
  417a36:	xlat   BYTE PTR ds:[ebx]
  417a37:	and    dl,BYTE PTR [edx+0x6c]
  417a3a:	add    ecx,DWORD PTR [edi-0x6dc6a809]
  417a40:	and    eax,0xc20f2dd7
  417a45:	cdq    
  417a46:	or     DWORD PTR [esi+ecx*1-0x22acc08a],edx
  417a4d:	push   ecx
  417a4e:	mov    edx,0xa3b3beb4
  417a53:	popf   
  417a54:	jecxz  0x417aa5
  417a56:	fisttp WORD PTR [ecx-0x37]
  417a59:	ds and eax,0x3e592ab9
  417a5f:	mov    esi,0x4eec82bd
  417a64:	idiv   BYTE PTR [edx-0x4f]
  417a67:	out    0x98,eax
  417a69:	xor    ebp,0xc9cd472b
  417a6f:	mov    edi,0x1ea3a8e2
  417a74:	fmul   DWORD PTR [esi]
  417a76:	cmp    BYTE PTR [eax+0x10c0fa6a],cl
  417a7c:	retf   
  417a7d:	or     eax,0x433b712d
  417a82:	adc    al,0x3c
  417a84:	and    eax,0xfad29cde
  417a89:	inc    ebp
  417a8a:	cmp    al,0xa0
  417a8c:	sub    DWORD PTR [edi-0x1f],esp
  417a8f:	adc    DWORD PTR [ebp+0x3b],0x25
  417a93:	je     0x417a53
  417a95:	std    
  417a96:	shl    BYTE PTR [ebp+0x7af39fde],0xe6
  417a9d:	cmp    edi,DWORD PTR [ebp+0x1a]
  417aa0:	popf   
  417aa1:	(bad)  
  417aa2:	ds scas al,BYTE PTR es:[edi]
  417aa4:	test   DWORD PTR [esi-0x25b39455],ecx
  417aaa:	test   DWORD PTR [eiz*8-0xac53a9c],0x64ec8aef
  417ab5:	push   ebx
  417ab6:	mov    ds,WORD PTR [ecx+edi*8]
  417ab9:	lds    esp,FWORD PTR [edx]
  417abb:	(bad)  
  417abc:	out    dx,al
  417abd:	mov    ds:0x68a2cf70,al
  417ac2:	aas    
  417ac3:	jg     0x417af5
  417ac5:	mov    esp,0xd4d0b91a
  417aca:	std    
  417acb:	xor    ebx,0xffffffb6
  417ace:	test   eax,0x73c89968
  417ad3:	xchg   esp,eax
  417ad4:	ins    DWORD PTR es:[edi],dx
  417ad5:	loop   0x417b54
  417ad7:	jno    0x417acb
  417ad9:	pop    es
  417ada:	push   edx
  417adb:	push   edx
  417adc:	jge    0x417b3d
  417ade:	test   al,0x70
  417ae0:	cmp    eax,0x99ad1353
  417ae5:	popf   
  417ae6:	loope  0x417ad6
  417ae8:	and    ah,ah
  417aea:	sub    bh,BYTE PTR [edx-0xeb00691]
  417af0:	xchg   ebx,eax
  417af1:	pop    es
  417af2:	mov    bl,0x5e
  417af4:	or     BYTE PTR ds:0xd4a1937f,dh
  417afa:	scas   eax,DWORD PTR es:[edi]
  417afb:	add    edi,edi
  417afd:	shr    eax,cl
  417aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b00:	pop    ss
  417b01:	mov    ebx,0x30e52019
  417b06:	in     al,0xe2
  417b08:	jae    0x417abd
  417b0a:	jb     0x417b41
  417b0c:	or     BYTE PTR [eax+ecx*2+0x5ba905b3],ah
  417b13:	mov    al,0x57
  417b15:	jnp    0x417a9e
  417b17:	mul    BYTE PTR [ebp+0x1d]
  417b1a:	ficomp WORD PTR ds:0x56e986d
  417b20:	add    eax,ecx
  417b22:	shl    eax,0x55
  417b25:	inc    ebx
  417b26:	cmc    
  417b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b28:	int3   
  417b29:	idiv   BYTE PTR [ebx-0x6c]
  417b2c:	or     BYTE PTR ds:[esp+ebp*8-0x37a4f69f],al
  417b34:	xchg   ebp,eax
  417b35:	retf   
  417b36:	add    al,0xb9
  417b38:	jp     0x417b01
  417b3a:	sbb    eax,0x3049247d
  417b3f:	test   BYTE PTR [ebx+0x1d],ah
  417b42:	jnp    0x417b29
  417b44:	aaa    
  417b45:	pop    edx
  417b46:	or     bl,BYTE PTR [ebx]
  417b48:	cdq    
  417b49:	dec    edi
  417b4a:	test   DWORD PTR [esi+0x6d],ebx
  417b4d:	mov    esi,0x1da7727b
  417b52:	push   ebp
  417b53:	fwait
  417b54:	jg     0x417b3b
  417b56:	cmp    BYTE PTR [esi+0x77],0x1b
  417b5a:	xor    BYTE PTR [eax-0x4],cl
  417b5d:	pop    ecx
  417b5e:	fidiv  DWORD PTR ds:0x30c89632
  417b64:	dec    esi
  417b65:	ins    DWORD PTR es:[edi],dx
  417b66:	mov    eax,0xcc3565fa
  417b6b:	sbb    edi,DWORD PTR [ecx-0x36]
  417b6e:	fisub  WORD PTR [ebp-0x66]
  417b71:	and    al,0x54
  417b73:	ins    BYTE PTR es:[edi],dx
  417b74:	cs jp  0x417b6e
  417b77:	pop    esi
  417b78:	push   ebp
  417b79:	pop    esi
  417b7a:	inc    ebx
  417b7b:	mov    edi,0x6c3fb373
  417b80:	out    dx,al
  417b81:	xlat   BYTE PTR ds:[ebx]
  417b82:	mov    bl,0x98
  417b84:	inc    ebp
  417b85:	pop    esp
  417b86:	xor    ch,ch
  417b88:	push   0xffffffde
  417b8a:	pop    ds
  417b8b:	cmp    DWORD PTR [ebx+edx*1-0x1f],ecx
  417b8f:	(bad)  
  417b90:	icebp  
  417b91:	jno    0x417c03
  417b93:	aaa    
  417b94:	stos   DWORD PTR es:[edi],eax
  417b95:	fdiv   QWORD PTR [ecx]
  417b97:	dec    ecx
  417b98:	hlt    
  417b99:	inc    edi
  417b9a:	cmp    al,0xa6
  417b9c:	loopne 0x417b76
  417b9e:	shl    BYTE PTR [ecx],cl
  417ba0:	(bad)  
  417ba1:	mov    WORD PTR [edx-0x1a7b29dd],?
  417ba7:	(bad)  
  417ba8:	mov    dh,0x88
  417baa:	int    0x51
  417bac:	iret   
  417bad:	shr    al,1
  417baf:	jns    0x417b79
  417bb1:	jns    0x417b77
  417bb3:	mov    edx,0xb2c86120
  417bb8:	arpl   WORD PTR [esi+0x1533539f],ax
  417bbe:	enter  0x74c8,0xc2
  417bc2:	add    edi,DWORD PTR [ebx-0x45495bb3]
  417bc8:	test   eax,0xc5902513
  417bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bce:	mov    esi,0xcc38605a
  417bd3:	xchg   edi,eax
  417bd4:	jmp    0x271c:0x41f7aacd
  417bdb:	(bad)  
  417bdc:	in     eax,0xc7
  417bde:	int3   
  417bdf:	or     dh,BYTE PTR [eax-0x13]
  417be2:	cmp    dl,bh
  417be4:	mov    ah,0x38
  417be6:	pop    ecx
  417be7:	lahf   
  417be8:	aaa    
  417be9:	mov    cl,0x5d
  417beb:	dec    DWORD PTR [esi-0x58d0963d]
  417bf1:	jae    0x417c54
  417bf3:	sub    BYTE PTR [esi+0x68cfc32e],bl
  417bf9:	repnz dec esi
  417bfb:	mov    bh,0x51
  417bfd:	fcomp  DWORD PTR [edx-0x14f911c8]
  417c03:	imul   edi,DWORD PTR [esi+0x225ba736],0xfffffffd
  417c0a:	push   cs
  417c0b:	dec    ecx
  417c0c:	ja     0x417c05
  417c0e:	das    
  417c0f:	(bad)  
  417c10:	pop    ebx
  417c11:	loop   0x417b95
  417c13:	xor    edx,DWORD PTR [esi+0x1]
  417c16:	mov    esi,0xc7ce56cf
  417c1b:	mov    dh,0xe7
  417c1d:	jo     0x417bf0
  417c1f:	push   eax
  417c20:	hlt    
  417c21:	gs jae 0x417c71
  417c24:	clc    
  417c25:	das    
  417c26:	pop    eax
  417c27:	aaa    
  417c28:	ins    BYTE PTR es:[edi],dx
  417c29:	loope  0x417c19
  417c2b:	retf   
  417c2c:	push   edx
  417c2d:	fucomi st,st(6)
  417c2f:	ror    DWORD PTR [ebp-0x77],0x97
  417c33:	sbb    al,0x10
  417c35:	push   es
  417c36:	into   
  417c37:	fwait
  417c38:	pop    edx
  417c39:	shl    BYTE PTR [ebx],0xfa
  417c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c3d:	stc    
  417c3e:	adc    ch,bl
  417c40:	dec    eax
  417c41:	aas    
  417c42:	icebp  
  417c43:	adc    eax,0xcff90dcd
  417c48:	mov    ebp,0xab3149
  417c4d:	test   DWORD PTR [ecx+0x3f455dc0],esp
  417c53:	shl    DWORD PTR [edx+0x27],0x2f
  417c57:	stos   BYTE PTR es:[edi],al
  417c58:	or     DWORD PTR [ebp-0x7ab038a4],ebx
  417c5e:	imul   ebp,DWORD PTR [edi-0x37],0x4d
  417c62:	xor    BYTE PTR [ebx+0x7f],ah
  417c65:	stos   DWORD PTR es:[edi],eax
  417c66:	mov    edi,0xc7ab5701
  417c6b:	pop    eax
  417c6c:	rcl    DWORD PTR [ecx-0x2f],0x9e
  417c70:	out    0x1c,al
  417c72:	dec    edx
  417c73:	cmp    bl,bl
  417c75:	test   eax,0xf75675bc
  417c7a:	inc    ebp
  417c7b:	aad    0x1
  417c7d:	mov    ch,0x49
  417c7f:	cs jnp 0x417c52
  417c82:	xchg   esi,eax
  417c83:	add    eax,0xbe6334cf
  417c88:	mov    cl,0x2d
  417c8a:	lods   eax,DWORD PTR ds:[esi]
  417c8b:	add    eax,0xb6031b01
  417c90:	bound  esp,QWORD PTR [ebx+0x7f9210b3]
  417c96:	lods   al,BYTE PTR ds:[esi]
  417c97:	(bad)  
  417c98:	inc    esp
  417c99:	push   ecx
  417c9a:	pop    edi
  417c9b:	aas    
  417c9c:	jle    0x417cc2
  417c9e:	pushf  
  417c9f:	cld    
  417ca0:	sbb    cl,BYTE PTR [edi]
  417ca2:	outs   dx,DWORD PTR ss:[esi]
  417ca4:	adc    ecx,DWORD PTR [ebp+0x62]
  417ca7:	add    BYTE PTR [esi+ecx*2],ch
  417caa:	adc    bh,BYTE PTR [edx-0x3caf1785]
  417cb0:	jno    0x417c6c
  417cb2:	push   0xfffffff4
  417cb4:	add    eax,0x5b960546
  417cb9:	mov    bl,0x40
  417cbb:	rcr    DWORD PTR [esi+eiz*1],0xbb
  417cbf:	repnz (bad) 
  417cc1:	jecxz  0x417c43
  417cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cc4:	in     eax,dx
  417cc5:	imul   edx,DWORD PTR [edi+0x6397429c],0x5a62c9b0
  417ccf:	fist   WORD PTR [ebp-0x7498a27d]
  417cd5:	add    BYTE PTR [esi-0x59],dh
  417cd8:	pop    es
  417cd9:	test   BYTE PTR [edi+0x17957e99],0xa0
  417ce0:	outs   dx,BYTE PTR ds:[esi]
  417ce1:	sti    
  417ce2:	mov    al,0xab
  417ce4:	add    BYTE PTR [esi+ebp*8],al
  417ce7:	jg     0x417c7d
  417ce9:	push   ds
  417cea:	xchg   BYTE PTR [ebx+0x4b],dl
  417ced:	sub    eax,0xf74d768f
  417cf2:	repnz fimul DWORD PTR ds:0xe65a3c4f
  417cf9:	jbe    0x417d56
  417cfb:	(bad)  
  417cfc:	leave  
  417cfd:	inc    ebx
  417cfe:	out    0xd0,al
  417d00:	ficomp WORD PTR [ecx-0x5a]
  417d03:	push   es
  417d04:	xchg   ebp,eax
  417d05:	stc    
  417d06:	lahf   
  417d07:	or     eax,edi
  417d09:	xchg   edi,eax
  417d0a:	fdivp  st(7),st
  417d0c:	(bad)  
  417d0e:	ja     0x417cf0
  417d10:	xor    DWORD PTR [ebp-0x73],edx
  417d13:	mov    ah,bh
  417d15:	test   ecx,edi
  417d17:	mov    bl,0xa
  417d19:	(bad)  
  417d1a:	int    0x18
  417d1c:	add    al,0x78
  417d1e:	lahf   
  417d1f:	xchg   esi,eax
  417d20:	xchg   dl,ah
  417d22:	jns    0x417d31
  417d24:	(bad)  
  417d25:	fisttp WORD PTR [eax-0xd]
  417d28:	stos   DWORD PTR es:[edi],eax
  417d29:	inc    edi
  417d2a:	add    ch,BYTE PTR [esi+edi*4-0x4ec85360]
  417d31:	sbb    al,0x15
  417d33:	scas   eax,DWORD PTR es:[edi]
  417d34:	sbb    al,0x5
  417d36:	add    edi,DWORD PTR [ecx+0x21]
  417d39:	ror    ah,cl
  417d3b:	jmp    0x417da1
  417d3d:	pop    DWORD PTR [ebx+0x71]
  417d40:	dec    esi
  417d41:	dec    edx
  417d42:	xor    eax,0xedcce4e0
  417d47:	jge    0x417d5b
  417d49:	inc    ebx
  417d4a:	or     bh,ah
  417d4c:	in     eax,dx
  417d4d:	jecxz  0x417d4d
  417d4f:	or     al,0x91
  417d51:	jbe    0x417d02
  417d53:	lea    ecx,[ebp+0x1bdb7176]
  417d59:	bound  ebp,QWORD PTR [ebx+0x21b78e78]
  417d5f:	inc    eax
  417d60:	call   0xd133:0x6c195e6d
  417d67:	dec    ebx
  417d68:	xchg   DWORD PTR [ebp+0xfcef7ac],edx
  417d6e:	mov    ch,bh
  417d70:	sub    eax,0xf2e39e24
  417d75:	xor    dh,BYTE PTR [edi-0x3ecb8fb2]
  417d7b:	xchg   ebp,eax
  417d7c:	pop    eax
  417d7d:	and    al,BYTE PTR [esi-0x30]
  417d80:	mov    BYTE PTR [edi-0x60],ah
  417d83:	jle    0x417daa
  417d85:	push   ebp
  417d86:	sbb    eax,0x75424fd6
  417d8b:	shl    BYTE PTR [ebx+edi*1],1
  417d8e:	xchg   ebx,eax
  417d8f:	bound  ebp,QWORD PTR [eax]
  417d91:	mov    BYTE PTR [edx+edi*8],ah
  417d94:	imul   esi,DWORD PTR [ebx+0x50],0xc90802fd
  417d9b:	cmp    DWORD PTR [eax+0x1793207e],ebx
  417da1:	nop
  417da2:	or     al,0xa8
  417da4:	mov    BYTE PTR [ebx+0x2aae41ed],ah
  417daa:	arpl   WORD PTR [ecx],dx
  417dac:	xlat   BYTE PTR ds:[ebx]
  417dad:	into   
  417dae:	andps  xmm6,XMMWORD PTR [ecx-0x48]
  417db2:	sahf   
  417db3:	fdivr  DWORD PTR [esi-0x12bed315]
  417db9:	and    DWORD PTR [edi-0x7c],0x1b0bd899
  417dc0:	mov    ebp,DWORD PTR [ebx+0xf772261]
  417dc6:	pop    edx
  417dc7:	pop    edx
  417dc8:	test   BYTE PTR [ebp+0x7af8b5a5],0xff
  417dcf:	and    cl,BYTE PTR [esi+0x49]
  417dd2:	leave  
  417dd3:	call   0x9a5ed881
  417dd8:	ins    DWORD PTR es:[edi],dx
  417dd9:	pop    esi
  417dda:	lods   eax,DWORD PTR ds:[esi]
  417ddb:	or     DWORD PTR [eax-0x6aa89db3],eax
  417de1:	cld    
  417de2:	leave  
  417de3:	cs mov ebx,0xb64e0e54
  417de9:	cmp    BYTE PTR [esi+edi*1],bl
  417dec:	hlt    
  417ded:	mov    bl,0x92
  417def:	adc    BYTE PTR ds:0xd82fc9bf,0xfb
  417df6:	push   edi
  417df7:	xor    BYTE PTR [ebx+0x124568bf],bl
  417dfd:	mov    ds:0x1bcf5f0b,al
  417e02:	inc    ebx
  417e03:	sub    BYTE PTR [esi-0x79],al
  417e06:	push   ebx
  417e07:	repnz (bad) 
  417e0a:	rcl    DWORD PTR [esp+ebx*8],cl
  417e0d:	pusha  
  417e0e:	sbb    eax,0x3dcf93fa
  417e13:	fild   QWORD PTR [ecx+0x142a4383]
  417e19:	sub    ch,BYTE PTR [ecx-0x27]
  417e1c:	push   edi
  417e1d:	(bad)  [edi]
  417e1f:	inc    ebp
  417e20:	cmp    DWORD PTR [edx-0x5eaccc13],edi
  417e26:	mov    ah,0x69
  417e28:	mov    edi,0x2bbbdb8b
  417e2d:	pop    ebx
  417e2e:	xor    al,0x64
  417e30:	rcr    cl,0xd4
  417e33:	adc    DWORD PTR [eax],0xe1437842
  417e39:	sahf   
  417e3a:	clc    
  417e3b:	rcl    DWORD PTR [ebp+0x8],cl
  417e3e:	and    al,0x72
  417e40:	cmp    DWORD PTR [eax+0x235be1ed],ebx
  417e46:	sti    
  417e47:	add    BYTE PTR [edi],0xbc
  417e4a:	aam    0x1e
  417e4c:	(bad)  
  417e4d:	je     0x417e1f
  417e4f:	mov    eax,ds:0xf78a72bd
  417e54:	mov    cl,0x6e
  417e56:	push   ebp
  417e57:	adc    eax,0x4242b8f2
  417e5c:	adc    al,0x1f
  417e5e:	xor    DWORD PTR [ebx-0x40],ebx
  417e61:	es ss cwde 
  417e64:	push   ebx
  417e65:	fisubr DWORD PTR [esi+0x37ab9371]
  417e6b:	shl    DWORD PTR [ebx+0x74],cl
  417e6e:	sub    esi,ebx
  417e70:	push   ds
  417e71:	jmp    0x6cb4:0x54f44df9
  417e78:	xchg   esp,eax
  417e79:	jg     0x417e1f
  417e7b:	ins    BYTE PTR es:[edi],dx
  417e7c:	cli    
  417e7d:	xor    ch,cl
  417e7f:	stos   BYTE PTR es:[edi],al
  417e80:	push   esp
  417e81:	sbb    bh,bl
  417e83:	mov    eax,ds:0x4b9a5f06
  417e88:	(bad)  
  417e89:	popa   
  417e8a:	test   DWORD PTR [ebx],0xecf09234
  417e90:	adc    ch,BYTE PTR [edi+0x30]
  417e93:	xor    eax,0x32b239d1
  417e98:	push   edx
  417e99:	cmp    al,0x57
  417e9b:	les    edi,FWORD PTR [ebx]
  417e9d:	cli    
  417e9e:	cmp    dl,BYTE PTR [esp+eiz*4]
  417ea1:	dec    ebx
  417ea2:	inc    esp
  417ea3:	xchg   esp,eax
  417ea4:	(bad)  
  417ea5:	int3   
  417ea6:	out    0x49,eax
  417ea8:	mov    eax,ds:0x8549ed79
  417ead:	mov    bh,0x54
  417eaf:	adc    ecx,esi
  417eb1:	arpl   dx,sp
  417eb3:	inc    BYTE PTR [ebp-0x38]
  417eb6:	add    eax,ebx
  417eb8:	inc    edi
  417eb9:	(bad)  [eax-0x6b]
  417ebc:	cmc    
  417ebd:	retf   0xfe9c
  417ec0:	mov    al,ds:0xe38ffbfd
  417ec5:	call   0xfa40:0xdf627426
  417ecc:	sub    DWORD PTR [ebx-0x23],eax
  417ecf:	push   esp
  417ed0:	in     al,dx
  417ed1:	xor    al,0x2d
  417ed3:	hlt    
  417ed4:	push   ds
  417ed5:	push   ebp
  417ed6:	or     ecx,DWORD PTR [edi+0x3652fed8]
  417edc:	mov    ebx,0x214ae300
  417ee1:	push   ss
  417ee2:	xchg   cx,ax
  417ee4:	mov    ah,0x10
  417ee6:	inc    edx
  417ee7:	rol    BYTE PTR [ecx],0x80
  417eea:	pop    esi
  417eeb:	test   BYTE PTR [esi+edi*4+0x18],al
  417eef:	(bad)  
  417ef0:	mov    al,0x29
  417ef2:	mov    esp,0x4cd28e0c
  417ef7:	in     al,0xb9
  417ef9:	jle    0x417ea5
  417efb:	sti    
  417efc:	add    BYTE PTR [ebx-0x7a],al
  417eff:	icebp  
  417f00:	adc    DWORD PTR [eax+ebx*4-0x32],ebx
  417f04:	jp     0x417f35
  417f06:	mov    ds:0xb51ef2cd,eax
  417f0b:	aaa    
  417f0c:	outs   dx,DWORD PTR ds:[esi]
  417f0d:	lea    esi,[eax+edx*1-0x2188dc17]
  417f14:	ins    DWORD PTR es:[edi],dx
  417f15:	in     al,0xc1
  417f17:	int3   
  417f18:	in     al,dx
  417f19:	mov    dl,0xeb
  417f1b:	das    
  417f1c:	test   BYTE PTR [esi+0x2bdd937],bl
  417f22:	cld    
  417f23:	inc    eax
  417f24:	xor    al,0x6f
  417f26:	outs   dx,DWORD PTR ds:[esi]
  417f27:	int    0xca
  417f29:	jge    0x417f82
  417f2b:	xchg   esp,eax
  417f2c:	xchg   ebx,eax
  417f2d:	mov    ds:0xc7a7fc8a,al
  417f32:	xor    edi,DWORD PTR [eax+0x65f69357]
  417f38:	cmp    eax,edx
  417f3a:	imul   ebx,DWORD PTR [ebp-0x61],0x22
  417f3e:	fdivr  QWORD PTR [ecx+ecx*1+0xe]
  417f42:	adc    ah,al
  417f44:	cwde   
  417f45:	push   eax
  417f46:	jnp    0x417f44
  417f48:	mov    esi,0x43f35957
  417f4d:	cmp    BYTE PTR [ebx],bl
  417f4f:	mov    BYTE PTR [ecx],dl
  417f51:	mov    ah,0xa3
  417f53:	mov    cl,0x63
  417f55:	xchg   ecx,eax
  417f56:	nop
  417f57:	or     BYTE PTR [eax-0x2bb36da0],al
  417f5d:	and    al,0x2
  417f5f:	mul    BYTE PTR [esi+ebp*2]
  417f62:	fistp  QWORD PTR [esi-0x9]
  417f65:	cmp    eax,0x5c4da053
  417f6a:	test   al,0x2
  417f6c:	jns    0x417fcf
  417f6e:	inc    edi
  417f6f:	test   DWORD PTR [esi+0x28b922fb],ebx
  417f75:	repz idiv BYTE PTR [edi]
  417f78:	rcl    al,0x4a
  417f7b:	leave  
  417f7c:	jne    0x417ffc
  417f7e:	out    dx,al
  417f7f:	jmp    0xe76d:0x9c818f18
  417f86:	out    dx,al
  417f87:	xor    al,BYTE PTR [ecx-0x7a]
  417f8a:	inc    ebx
  417f8b:	cmp    al,0xe2
  417f8d:	addr16 int3 
  417f8f:	xor    DWORD PTR [ebx],edi
  417f91:	or     bl,BYTE PTR [ebx+ebx*1+0x68]
  417f95:	shr    al,1
  417f97:	loopne 0x417f48
  417f99:	bound  edi,QWORD PTR [ecx+ebp*4+0x144f447c]
  417fa0:	mov    ds:0xc91134f5,eax
  417fa5:	xor    esp,DWORD PTR [ecx+0x59]
  417fa8:	sahf   
  417fa9:	and    eax,0xe1bc730f
  417fae:	mov    ds:0x226c6e17,al
  417fb3:	dec    ebp
  417fb4:	ds enter 0xcc1a,0x28
  417fb9:	bound  eax,QWORD PTR [ecx]
  417fbb:	sbb    ebx,ebp
  417fbd:	push   ss
  417fbe:	cmp    esp,DWORD PTR [esi-0x55]
  417fc1:	push   esi
  417fc2:	push   0x667810b5
  417fc7:	mov    al,0xa9
  417fc9:	dec    ecx
  417fca:	fistp  QWORD PTR [ecx+edi*8]
  417fcd:	pusha  
  417fce:	mov    ?,WORD PTR [edi-0x33]
  417fd1:	dec    ecx
  417fd2:	addr16 jns 0x417fe5
  417fd5:	sub    al,dh
  417fd7:	mov    edx,es
  417fd9:	js     0x417f68
  417fdb:	adc    BYTE PTR [eax-0x65],ch
  417fde:	push   ecx
  417fdf:	dec    ebp
  417fe0:	aaa    
  417fe1:	cmp    eax,0xbdcb0b3d
  417fe6:	xchg   BYTE PTR [eax-0x1983ee1e],cl
  417fec:	dec    edx
  417fed:	sbb    bl,BYTE PTR ds:[ebx+ebx*1-0x300b5615]
  417ff5:	fwait
  417ff6:	out    0x3e,eax
  417ff8:	cli    
  417ff9:	ss loop 0x417fc6
  417ffc:	mov    ds:0x7491729c,al
  418001:	mov    al,0x2b
  418003:	and    BYTE PTR [esi],bh
  418005:	std    
  418006:	scas   eax,DWORD PTR es:[edi]
  418007:	ret    0x3433
  41800a:	mov    bh,0xc4
  41800c:	jle    0x418089
  41800e:	scas   eax,DWORD PTR es:[edi]
  41800f:	call   0x8d75:0xd49896ad
  418016:	xchg   esi,eax
  418017:	pop    edx
  418018:	sbb    eax,0x9934b903
  41801d:	fsubrp st(2),st
  41801f:	jge    0x418054
  418021:	mov    ebx,0x76d51488
  418026:	scas   al,BYTE PTR es:[edi]
  418027:	loopne 0x41801e
  418029:	sbb    dl,BYTE PTR [esi+0x4f]
  41802c:	shl    DWORD PTR [edi+esi*4+0x39],0x5d
  418031:	pushf  
  418032:	aam    0xce
  418034:	(bad)  
  418035:	mov    esi,0x1b8b6e8d
  41803a:	loope  0x417fe5
  41803c:	repz mov edx,0x843af021
  418042:	jmp    0x417fcc
  418044:	jp     0x418081
  418046:	pop    edx
  418047:	mov    eax,ds:0x1b685b3
  41804c:	jne    0x417ffc
  41804e:	in     al,0x91
  418050:	dec    eax
  418051:	push   esp
  418052:	mov    bh,0x98
  418054:	retf   
  418055:	jno    0x417fe7
  418057:	add    esi,DWORD PTR [edx-0x3a12ec35]
  41805d:	mov    bh,0xf9
  41805f:	ret    0x2251
  418062:	cmp    ebp,DWORD PTR [edx]
  418064:	fdivrp st(2),st
  418066:	ficom  DWORD PTR [ecx-0x25475038]
  41806c:	mov    bh,0x6a
  41806e:	cdq    
  41806f:	mov    WORD PTR [ebx+0x3e7b46d8],gs
  418075:	stc    
  418076:	sub    ch,BYTE PTR [ebp-0x5ad1852]
  41807c:	test   BYTE PTR [ebp-0x26],al
  41807f:	cmp    DWORD PTR [edi-0x46793433],edx
  418085:	mov    dl,BYTE PTR [edx+ecx*1+0x68fcb877]
  41808c:	outs   dx,DWORD PTR ds:[esi]
  41808d:	fcom   DWORD PTR [edx-0x18]
  418090:	stos   DWORD PTR es:[edi],eax
  418091:	pushf  
  418092:	cwde   
  418093:	mov    ds:0x7b64d6c7,eax
  418098:	ss pop ebp
  41809a:	or     al,0xdd
  41809c:	cs test ebp,edx
  41809f:	(bad)  
  4180a0:	pop    esi
  4180a1:	mov    edi,0xbc7ee869
  4180a6:	shr    DWORD PTR [ebx],cl
  4180a8:	mov    al,ds:0xfe82e8b6
  4180ad:	int    0x61
  4180af:	jle    0x4180cf
  4180b1:	fidiv  DWORD PTR [ebx-0x16]
  4180b4:	stos   DWORD PTR es:[edi],eax
  4180b5:	add    al,0x90
  4180b7:	xor    al,0xb8
  4180b9:	xchg   esp,eax
  4180ba:	pop    edi
  4180bb:	test   al,0x59
  4180bd:	cs mov edi,eax
  4180c0:	mov    eax,esp
  4180c2:	push   0xac7e0f7f
  4180c7:	sub    DWORD PTR [ebp+0xb],edi
  4180ca:	cmc    
  4180cb:	or     ah,bl
  4180cd:	cmp    dh,BYTE PTR [eax]
  4180cf:	jecxz  0x4180ee
  4180d1:	lahf   
  4180d2:	adc    esi,DWORD PTR [ebx-0x26]
  4180d5:	or     DWORD PTR [eax+0x54],eax
  4180d8:	jnp    0x418128
  4180da:	mov    ecx,0x7924cf1c
  4180df:	push   0x58
  4180e1:	std    
  4180e2:	sub    eax,0x62e7739b
  4180e7:	and    esp,edi
  4180e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180ea:	arpl   cx,bx
  4180ec:	xchg   BYTE PTR [ebx+0x68],bh
  4180ef:	mov    eax,0x7e32a837
  4180f4:	pop    edi
  4180f5:	hlt    
  4180f6:	cli    
  4180f7:	and    DWORD PTR [ebx+0x7c2e4e20],ebx
  4180fd:	sub    ebx,ebx
  4180ff:	gs dec esp
  418101:	sbb    esp,eax
  418103:	and    bh,BYTE PTR [ebp+0xf9c235a]
  418109:	pop    eax
  41810a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41810b:	sub    BYTE PTR [ebx+edi*2-0x43],ch
  41810f:	sbb    al,0xfd
  418111:	out    dx,eax
  418112:	(bad)  
  418113:	dec    eax
  418114:	shl    eax,1
  418116:	mov    ebp,0x5799d59b
  41811b:	(bad)  [ecx+0x29]
  41811e:	lock push cs
  418120:	mov    WORD PTR [ebp+0x21089da7],ss
  418126:	mov    dl,0xe6
  418128:	xchg   esi,eax
  418129:	rol    ebp,0x7e
  41812c:	sub    DWORD PTR ds:0x5ca49c91,0x69cf0565
  418136:	fstp   QWORD PTR [esi+0x37e37dc6]
  41813c:	icebp  
  41813d:	ror    DWORD PTR [ebp-0xa],1
  418140:	pusha  
  418141:	pop    ecx
  418142:	mov    ecx,0xa5599bc9
  418147:	aaa    
  418148:	jns    0x41818d
  41814a:	push   0x13af7819
  41814f:	std    
  418150:	cmp    ebx,ebx
  418152:	push   esp
  418153:	mov    esp,0x78392df2
  418158:	call   0xf05cfa25
  41815d:	aas    
  41815e:	scas   al,BYTE PTR es:[edi]
  41815f:	push   0xfd06afc1
  418164:	or     eax,0xba69410d
  418169:	fnstcw WORD PTR [esi+0x79]
  41816c:	mov    DWORD PTR [ebx-0x5ac6c4ca],esi
  418172:	push   ebx
  418173:	call   0x95d77d25
  418178:	ficomp WORD PTR [ebx+0xe377e93]
  41817e:	mov    es,WORD PTR [ebp+ebp*8-0x28]
  418182:	mov    WORD PTR ds:0x5d9d5630,?
  418188:	test   al,0x97
  41818a:	icebp  
  41818b:	cdq    
  41818c:	jno    0x41817a
  41818e:	mov    eax,0x4d7e4b05
  418193:	sar    BYTE PTR [eax],1
  418195:	xchg   edi,eax
  418196:	(bad)  
  418198:	call   0xf8c50e77
  41819d:	fsubr  QWORD PTR [ebp+ebp*4-0x33]
  4181a1:	retf   0x60d9
  4181a4:	or     al,0xff
  4181a6:	iret   
  4181a7:	cwde   
  4181a8:	pop    ss
  4181a9:	sbb    eax,DWORD PTR [ecx-0x67]
  4181ac:	push   edx
  4181ad:	(bad)  
  4181ae:	je     0x418216
  4181b0:	cld    
  4181b1:	mov    esi,0x2c859e24
  4181b6:	or     DWORD PTR [edx+0x7e32b9f2],esp
  4181bc:	xchg   edx,eax
  4181bd:	cmp    DWORD PTR [ecx-0x2e],edx
  4181c0:	adc    ebp,edx
  4181c2:	mov    fs,WORD PTR [ebp+0x5d]
  4181c5:	int3   
  4181c6:	and    DWORD PTR [edx-0x26ac493],edi
  4181cc:	inc    ecx
  4181cd:	inc    edi
  4181ce:	jb     0x418177
  4181d0:	xchg   DWORD PTR [eax],edi
  4181d2:	popf   
  4181d3:	mov    al,0xdc
  4181d5:	inc    ebp
  4181d6:	or     DWORD PTR [ecx+0x291f170a],0xd15388e2
  4181e0:	rol    ebx,0x49
  4181e3:	push   ds
  4181e4:	xchg   esp,eax
  4181e5:	dec    esi
  4181e6:	xchg   esp,eax
  4181e7:	push   ebx
  4181e8:	cld    
  4181e9:	mov    bl,0x1e
  4181eb:	aaa    
  4181ec:	mov    fs,WORD PTR [ebx+0x4d]
  4181ef:	or     ecx,DWORD PTR [ebx+0xa]
  4181f2:	hlt    
  4181f3:	fsubr  DWORD PTR [edi+ebp*2+0x26]
  4181f7:	pop    es
  4181f8:	fdivr  st,st(4)
  4181fa:	sub    edx,ebp
  4181fc:	fist   WORD PTR [esi-0x18]
  4181ff:	push   edi
  418200:	xchg   dl,ch
  418202:	(bad)  
  418204:	mov    DWORD PTR [edx],eax
  418206:	shr    BYTE PTR [esi],cl
  418208:	gs not dh
  41820b:	sub    al,0x26
  41820d:	aad    0x63
  41820f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418210:	out    0x75,eax
  418212:	and    DWORD PTR [edx],0xffffff94
  418215:	sub    DWORD PTR cs:[ebp+ebx*4+0x64],esp
  41821a:	sub    al,0x84
  41821c:	pop    ecx
  41821d:	mov    al,ds:0x6a5cdb63
  418222:	cmp    bl,BYTE PTR [edx-0x62]
  418225:	dec    esp
  418226:	loope  0x418213
  418228:	xor    DWORD PTR [ecx+0x4dd6a878],0xfffffffa
  41822f:	fisttp DWORD PTR [ecx+0x19]
  418232:	shl    DWORD PTR ds:0xb42ad612,1
  418238:	int    0xdf
  41823a:	mov    cl,0x86
  41823c:	lods   eax,DWORD PTR ds:[esi]
  41823d:	mov    cl,0xbf
  41823f:	rol    BYTE PTR [esi-0x66b9f9c8],0xcc
  418246:	jle    0x418295
  418248:	scas   al,BYTE PTR es:[edi]
  418249:	call   0x4fff:0xfe316a00
  418250:	jl     0x4181d2
  418252:	enter  0x8242,0xec
  418256:	les    esp,FWORD PTR [edi-0x3c]
  418259:	pop    ss
  41825a:	jmp    0x418270
  41825c:	cwde   
  41825d:	imul   edx,edi,0x44
  418260:	shl    edi,0xe6
  418263:	test   al,0x7e
  418265:	ret    
  418266:	out    0xdc,eax
  418268:	or     dh,bl
  41826a:	fstp   DWORD PTR [edx+0x37]
  41826d:	dec    edi
  41826e:	or     edi,DWORD PTR [edi+0x2]
  418271:	gs inc ecx
  418273:	mov    ds:0xdc49850e,al
  418278:	pop    ecx
  418279:	inc    edx
  41827a:	xor    DWORD PTR [ebp-0x78997920],0x22
  418281:	stos   DWORD PTR es:[edi],eax
  418282:	cmp    al,0x74
  418284:	sbb    DWORD PTR [edi+0x362de84e],edi
  41828a:	mov    edi,0x7988b654
  41828f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418290:	fild   DWORD PTR [ecx+0x5dee643f]
  418296:	rcl    DWORD PTR es:[esi-0x4bedb93d],cl
  41829d:	push   ecx
  41829e:	std    
  41829f:	dec    edx
  4182a0:	fwait
  4182a1:	inc    edi
  4182a2:	test   ch,dh
  4182a4:	xchg   ebp,eax
  4182a5:	mov    ah,0x23
  4182a7:	cmp    BYTE PTR [ebx-0xe6c94b9],ch
  4182ad:	in     al,dx
  4182ae:	push   0xffffffc0
  4182b0:	adc    esi,DWORD PTR [edx-0x1ff5a0fd]
  4182b6:	pop    edi
  4182b7:	loope  0x41832c
  4182b9:	mov    eax,0x38ae155c
  4182be:	fimul  WORD PTR [eax+eiz*2]
  4182c1:	xchg   BYTE PTR [ebx+0x611b15bd],dh
  4182c7:	bnd jae 0x418345
  4182ca:	mov    bl,0xad
  4182cc:	jbe    0x418344
  4182ce:	add    DWORD PTR [edi],eax
  4182d0:	stc    
  4182d1:	pop    ebp
  4182d2:	lods   eax,DWORD PTR ds:[esi]
  4182d3:	jg     0x41827a
  4182d5:	push   0x73c45549
  4182da:	mov    ebx,0x9dd3571b
  4182df:	das    
  4182e0:	xor    ebp,DWORD PTR [ecx]
  4182e2:	retf   
  4182e3:	cwde   
  4182e4:	pop    edi
  4182e5:	fisttp WORD PTR [ecx+ebp*2]
  4182e8:	pop    ebx
  4182e9:	lea    edx,[ecx-0x559d36bc]
  4182ef:	mov    ch,0xab
  4182f1:	(bad)  
  4182f2:	lock test ebx,ecx
  4182f5:	into   
  4182f6:	shl    bh,cl
  4182f8:	adc    bh,BYTE PTR [ebp+0x7527f389]
  4182fe:	bnd ret 
  418300:	ja     0x41833b
  418302:	pop    ds
  418303:	out    0x9d,al
  418305:	xchg   ecx,eax
  418306:	in     al,dx
  418307:	loop   0x41828d
  418309:	fnsave [edi-0x10322146]
  41830f:	and    eax,0x3d2495ce
  418314:	ror    DWORD PTR [ebx],cl
  418316:	push   ebx
  418317:	js     0x41833e
  418319:	mov    esi,0xc126407a
  41831e:	mov    al,ds:0x382f51d4
  418323:	mov    cl,0x8e
  418325:	xchg   DWORD PTR [ecx+0x73a38235],ebp
  41832b:	ret    0x43e4
  41832e:	cmp    al,bl
  418330:	add    cl,0x91
  418333:	loop   0x418314
  418335:	pop    edi
  418336:	mov    dh,0x54
  418338:	xchg   ebx,esp
  41833a:	push   edi
  41833b:	jae    0x41832e
  41833d:	and    ch,BYTE PTR [edx]
  41833f:	dec    ecx
  418340:	mov    WORD PTR [ebx+0x2d889574],gs
  418346:	add    eax,0x9b826093
  41834b:	push   ecx
  41834c:	jnp    0x4182dc
  41834e:	pop    esi
  41834f:	mov    ebp,0x9b89342b
  418354:	fs adc ebp,ecx
  418357:	dec    edi
  418358:	xor    eax,0x86162a69
  41835d:	mov    esi,0x99eda3e5
  418362:	pop    edx
  418363:	fadd   DWORD PTR [edx-0x6a]
  418366:	(bad)  
  418368:	repz xchg edx,eax
  41836a:	jmp    0x66ad:0xb1dd4c4b
  418371:	cmc    
  418372:	lods   al,BYTE PTR ds:[esi]
  418373:	ss pop esp
  418375:	loopne 0x41832b
  418377:	pop    ss
  418378:	not    eax
  41837a:	push   ebp
  41837b:	popa   
  41837c:	aas    
  41837d:	out    0x90,eax
  41837f:	add    eax,0x74cff18a
  418384:	push   edi
  418385:	jmp    DWORD PTR [ebp-0x13a3df1c]
  41838b:	jae    0x41838a
  41838d:	sub    ebp,edi
  41838f:	outs   dx,BYTE PTR ds:[esi]
  418390:	test   eax,0x3e3df601
  418395:	pop    ds
  418396:	scas   al,BYTE PTR es:[edi]
  418397:	mov    bh,0xa9
  418399:	popf   
  41839a:	or     esp,DWORD PTR ds:0xbf0a366b
  4183a0:	popf   
  4183a1:	icebp  
  4183a2:	or     bl,BYTE PTR [eax+edx*1-0x63]
  4183a6:	jp     0x4183ce
  4183a8:	xchg   esp,eax
  4183a9:	xor    ch,BYTE PTR [esi-0x77]
  4183ac:	or     al,0x3
  4183ae:	fs (bad) 
  4183b0:	mov    ebp,DWORD PTR [edx+0x63]
  4183b3:	cmc    
  4183b4:	mov    dl,0x49
  4183b6:	jo     0x418344
  4183b8:	mov    ebx,0x66480a1f
  4183bd:	fwait
  4183be:	push   ecx
  4183bf:	mov    ch,0xf0
  4183c1:	cdq    
  4183c2:	pop    ebp
  4183c3:	scas   eax,DWORD PTR es:[edi]
  4183c4:	addr16 daa 
  4183c6:	xor    DWORD PTR [eax+0xa],esi
  4183c9:	js     0x41837c
  4183cb:	lahf   
  4183cc:	adc    eax,0x226cdc54
  4183d1:	mov    dh,0x85
  4183d3:	dec    edx
  4183d4:	in     al,dx
  4183d5:	push   eax
  4183d6:	mov    al,ds:0xdb916cb9
  4183db:	or     ecx,DWORD PTR [eax-0x37]
  4183de:	dec    ecx
  4183df:	(bad)  [ebx-0xf]
  4183e2:	outs   dx,BYTE PTR ds:[esi]
  4183e3:	stos   BYTE PTR es:[edi],al
  4183e4:	fild   QWORD PTR [edi-0x51f8d73c]
  4183ea:	int3   
  4183eb:	sbb    DWORD PTR [eax+0x7726a280],ebx
  4183f1:	push   ss
  4183f2:	dec    esi
  4183f3:	fcmovnb st,st(4)
  4183f5:	pop    ebx
  4183f6:	xor    eax,0x1a9cd217
  4183fb:	xchg   ecx,eax
  4183fc:	xchg   ebx,eax
  4183fd:	jnp    0x41843c
  4183ff:	dec    esp
  418400:	dec    edx
  418401:	mov    edx,0xf5da786c
  418406:	dec    ecx
  418407:	jle    0x4183bd
  418409:	or     eax,0x35f1cef2
  41840e:	mov    ebp,0x27c59300
  418413:	dec    eax
  418414:	add    eax,0x4720a5c4
  418419:	pop    eax
  41841a:	ins    BYTE PTR es:[edi],dx
  41841b:	inc    esi
  41841c:	inc    dx
  41841e:	fstp   DWORD PTR [ebx+0x66]
  418421:	(bad)  
  418422:	test   BYTE PTR [edx+0x16],0x9f
  418426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418427:	pop    ebx
  418428:	jnp    0x4183e8
  41842a:	pusha  
  41842b:	push   ds
  41842c:	adc    BYTE PTR [ebp-0x15],dh
  41842f:	data16 add al,0xf6
  418432:	clc    
  418433:	or     bh,0xe0
  418436:	test   eax,0xd6e2cc48
  41843b:	cmp    DWORD PTR [edi-0x17],ecx
  41843e:	repnz hlt 
  418440:	mov    DWORD PTR [esi],0xcb56d682
  418446:	test   al,0xa0
  418448:	cmp    DWORD PTR [edi+0x628bc20a],esp
  41844e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41844f:	pop    esp
  418450:	int    0x14
  418452:	lock les esp,FWORD PTR [edx]
  418455:	adc    BYTE PTR [eax],ch
  418457:	in     al,dx
  418458:	or     al,0xd2
  41845a:	and    al,ah
  41845c:	xor    eax,0xb9a43d04
  418461:	test   BYTE PTR [ebx+0x29615a41],dl
  418467:	and    al,0xf0
  418469:	adc    BYTE PTR [eax+0x5d],0x92
  41846d:	mov    DWORD PTR [eax+0x14],ecx
  418470:	inc    edx
  418471:	xchg   ecx,eax
  418472:	sub    BYTE PTR [ecx+ebp*8+0x2f],cl
  418476:	test   BYTE PTR [ecx+0x63],cl
  418479:	sub    BYTE PTR [ecx-0x74],bl
  41847c:	push   edx
  41847d:	sub    bl,BYTE PTR [ecx+0x66]
  418480:	pop    es
  418481:	inc    esi
  418482:	(bad)  
  418483:	mov    WORD PTR [eax-0x10],ds
  418486:	or     eax,ecx
  418488:	mov    bh,0x3a
  41848a:	(bad)  
  41848b:	call   0x97ef1c32
  418490:	jbe    0x41843e
  418492:	or     esi,DWORD PTR [ecx-0x1d]
  418495:	stos   BYTE PTR es:[edi],al
  418496:	cmp    al,0x7c
  418498:	push   ds
  418499:	out    dx,al
  41849a:	mov    WORD PTR [ebx],es
  41849c:	cmp    BYTE PTR [esi+0x608872bc],cl
  4184a2:	add    al,0xe0
  4184a4:	mov    ch,0x76
  4184a6:	xor    BYTE PTR [edi-0x14cdfd9],bh
  4184ac:	fistp  WORD PTR [eax+0x1e]
  4184af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184b0:	and    ah,BYTE PTR [ebx+0x6f]
  4184b3:	xor    al,0x1f
  4184b5:	mov    WORD PTR [esi+0x50],ss
  4184b8:	(bad)  
  4184b9:	retf   
  4184ba:	sub    BYTE PTR [ecx],ah
  4184bc:	cwde   
  4184bd:	sbb    edi,DWORD PTR [ebx-0x54]
  4184c0:	mov    ebx,DWORD PTR [ebp+0x3e]
  4184c3:	cmc    
  4184c4:	pop    edi
  4184c5:	jg     0x418459
  4184c7:	arpl   WORD PTR [esi],bp
  4184c9:	icebp  
  4184ca:	cmp    al,0x7e
  4184cc:	pop    es
  4184cd:	inc    edx
  4184ce:	mov    cl,0x25
  4184d0:	(bad)
  4184d3:	mov    edi,0xf77274cb
  4184d8:	mov    WORD PTR [ebx],?
  4184da:	lods   eax,DWORD PTR ds:[esi]
  4184db:	and    BYTE PTR [ebx],cl
  4184dd:	ret    0xcd89
  4184e0:	ror    BYTE PTR [edi+ecx*1-0x26],1
  4184e4:	outs   dx,DWORD PTR ds:[esi]
  4184e5:	or     DWORD PTR [esp+edx*8],edi
  4184e8:	xor    eax,0x5e5b5c27
  4184ed:	retf   0xf5d0
  4184f0:	fiadd  WORD PTR ds:0x877a135d
  4184f6:	sti    
  4184f7:	xchg   BYTE PTR [edi+0x2a7117c0],cl
  4184fd:	adc    DWORD PTR [ebx-0x5894347a],edi
  418503:	xor    edx,edx
  418505:	and    BYTE PTR [edx],0xdd
  418508:	adc    BYTE PTR [ecx],bh
  41850a:	cld    
  41850b:	test   al,0x5f
  41850d:	shl    DWORD PTR [esi-0x295f2ab3],0x79
  418514:	push   edi
  418515:	xchg   edi,eax
  418516:	lock sbb DWORD PTR [ebx],0x625c19d8
  41851d:	(bad)  
  41851e:	int3   
  41851f:	lods   eax,DWORD PTR ds:[esi]
  418520:	push   ds
  418521:	mov    dh,0x2b
  418523:	iret   
  418524:	repnz xor eax,0xd835a99d
  41852a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41852b:	xchg   edi,eax
  41852c:	add    al,0xaa
  41852e:	arpl   WORD PTR [bp+si+0x1b],bp
  418532:	xchg   edx,eax
  418533:	inc    edi
  418534:	mov    bh,0x58
  418536:	and    BYTE PTR [eax+0x9],0x5d
  41853a:	mov    edi,0xa302cc61
  41853f:	jecxz  0x4185c0
  418541:	cs dec eax
  418543:	pop    ss
  418544:	stc    
  418545:	push   cs
  418546:	(bad)  
  418547:	cwde   
  418548:	popa   
  418549:	fild   QWORD PTR [ebx-0x80]
  41854c:	rep stos DWORD PTR es:[edi],eax
  41854e:	xchg   DWORD PTR [edi+0x40],eax
  418551:	cmp    al,0x81
  418553:	or     ebx,DWORD PTR [eax-0x3d]
  418556:	imul   ebp,DWORD PTR [edx-0x2c],0x66
  41855a:	nop
  41855b:	adc    DWORD PTR [ebx-0x7e],eax
  41855e:	enter  0x858b,0xfc
  418562:	test   DWORD PTR fs:[edi-0x54ee1e9c],ebx
  418569:	stos   DWORD PTR es:[edi],eax
  41856a:	xchg   esp,eax
  41856b:	dec    ecx
  41856c:	fdivr  DWORD PTR [ebp-0x6ebc7964]
  418572:	scas   al,BYTE PTR es:[edi]
  418573:	xchg   ecx,eax
  418574:	ins    BYTE PTR es:[edi],dx
  418575:	xlat   BYTE PTR ds:[ebx]
  418576:	jb     0x418510
  418578:	retf   0x699a
  41857b:	lds    eax,FWORD PTR [edi+0x19f6fc9e]
  418581:	or     eax,0xef42e305
  418586:	push   ds
  418587:	and    edx,DWORD PTR [ecx-0x4c818967]
  41858d:	sar    DWORD PTR [edi+ebp*4-0x7a],1
  418591:	adc    al,0x9b
  418593:	add    esi,DWORD PTR [edx]
  418595:	adc    al,0xe
  418597:	fist   WORD PTR [edi]
  418599:	ins    BYTE PTR es:[edi],dx
  41859a:	push   eax
  41859b:	pop    DWORD PTR [ecx-0x3c]
  41859e:	and    ah,BYTE PTR [eax]
  4185a0:	sbb    DWORD PTR [esi-0x4a1912e8],ebp
  4185a6:	pop    ebp
  4185a7:	daa    
  4185a8:	fwait
  4185a9:	test   BYTE PTR [esi-0x18],dl
  4185ac:	sub    esi,0x7a5091a5
  4185b2:	call   0x2973:0x6a312e96
  4185b9:	add    edi,ebp
  4185bb:	dec    edx
  4185bc:	in     eax,dx
  4185bd:	test   eax,0x2b85c51b
  4185c2:	cs inc ebx
  4185c4:	std    
  4185c5:	pop    es
  4185c6:	and    esi,DWORD PTR [edx]
  4185c8:	push   cs
  4185c9:	jecxz  0x41860c
  4185cb:	or     dl,ch
  4185cd:	retf   0xce2c
  4185d0:	imul   ebx,DWORD PTR [ebp+0x3fe414f5],0x626511f4
  4185da:	adc    ebp,DWORD PTR [edi-0x1c7f1da2]
  4185e0:	or     edi,ebp
  4185e2:	(bad)  [edx]
  4185e4:	jne    0x418616
  4185e6:	idiv   DWORD PTR [ecx]
  4185e8:	xchg   BYTE PTR [ecx],al
  4185ea:	inc    edx
  4185eb:	data16 add al,0xea
  4185ee:	fbstp  TBYTE PTR [esi]
  4185f0:	mov    ebx,0xae618111
  4185f5:	sub    ebp,0xfd32e25a
  4185fb:	ss push esp
  4185fd:	jp     0x4185cb
  4185ff:	push   ebx
  418600:	sbb    esp,DWORD PTR [eax-0x36]
  418603:	xor    eax,0xcc268a8b
  418608:	push   edi
  418609:	addr16 add eax,0x4e88bde3
  41860f:	or     esp,DWORD PTR [esi]
  418611:	mov    edi,0x84bad7f8
  418616:	xor    al,0x7b
  418618:	shl    ebp,1
  41861a:	xor    al,BYTE PTR [esi+0x42381021]
  418620:	aam    0x9e
  418622:	xchg   DWORD PTR [esp+edx*8],edx
  418625:	leave  
  418626:	daa    
  418627:	enter  0x2529,0xb2
  41862b:	retf   0xc0b4
  41862e:	sub    eax,0x77156f4b
  418633:	pop    es
  418634:	and    BYTE PTR [esi],bh
  418636:	push   0xffffff81
  418638:	sub    cl,al
  41863a:	icebp  
  41863b:	sbb    BYTE PTR [esi-0x6157ba7e],cl
  418641:	mov    edi,0xc417d494
  418646:	push   ebp
  418647:	inc    edi
  418648:	sub    eax,0x706a2c9a
  41864d:	pop    edi
  41864e:	cmp    DWORD PTR [edi],esi
  418650:	cmp    eax,0xea66fbe3
  418655:	ja     0x418602
  418657:	int    0x8e
  418659:	pop    ss
  41865a:	outs   dx,DWORD PTR ds:[esi]
  41865b:	mov    ah,0x69
  41865d:	dec    ecx
  41865e:	or     dl,dl
  418660:	gs cmc 
  418662:	or     al,0x26
  418664:	jo     0x41867f
  418666:	xchg   ebp,eax
  418667:	sar    ebp,cl
  418669:	lock mov eax,0x470173ed
  41866f:	dec    edx
  418670:	clc    
  418671:	stc    
  418672:	div    DWORD PTR [edi+0x35]
  418675:	push   ebx
  418676:	cli    
  418677:	push   ds
  418678:	sbb    BYTE PTR ds:0x42bd8d1c,ah
  41867e:	fmul   QWORD PTR [esi+ebp*2-0x78628fa6]
  418685:	mov    esp,0xebb6f582
  41868a:	ins    DWORD PTR es:[edi],dx
  41868b:	(bad)  
  41868c:	mov    bl,0x14
  41868e:	mov    esi,0x49152ea4
  418693:	sbb    bh,BYTE PTR [edx]
  418695:	mov    ecx,0x6ccc535
  41869a:	repnz test eax,0x920c7c3
  4186a0:	(bad)  
  4186a1:	hlt    
  4186a2:	push   0x7b
  4186a4:	ss ret 0x7dd5
  4186a8:	push   ebp
  4186a9:	pushw  0xffe8
  4186ac:	add    DWORD PTR [ebx+0x3d],ecx
  4186af:	ror    BYTE PTR [ecx+0x4e],cl
  4186b2:	xor    DWORD PTR [ecx+0x4bf87b47],edi
  4186b8:	(bad)  
  4186b9:	and    BYTE PTR [eax-0x52d01f07],bl
  4186bf:	mov    WORD PTR [bp+di-0x6c],gs
  4186c3:	mov    WORD PTR [esp+eiz*2-0x2c261e36],fs
  4186ca:	mov    ds:0xcad864ee,eax
  4186cf:	dec    edi
  4186d0:	jo     0x4186f4
  4186d2:	mov    ?,ebp
  4186d4:	or     eax,0x46fa84cc
  4186d9:	dec    edi
  4186da:	ins    BYTE PTR es:[edi],dx
  4186db:	push   edi
  4186dc:	rcr    eax,cl
  4186de:	sub    bl,bl
  4186e0:	xchg   DWORD PTR [esi-0x21],ebx
  4186e3:	int3   
  4186e4:	dec    edx
  4186e5:	xor    BYTE PTR [ecx+0x34],ch
  4186e8:	fmul   QWORD PTR [eax*8+0xd0dce90]
  4186ef:	jmp    0x2035f8f4
  4186f4:	mov    ebp,0xce5635c
  4186f9:	pop    esp
  4186fa:	jl     0x4186c7
  4186fc:	mov    bl,0xd3
  4186fe:	repnz mov ecx,0x752c478b
  418704:	imul   ebp,DWORD PTR [esi+eax*2],0x9910f5a8
  41870b:	iret   
  41870c:	ficom  WORD PTR [ecx+0x32]
  41870f:	xchg   esi,eax
  418710:	xchg   esi,eax
  418711:	sub    bl,bh
  418713:	cmp    ecx,DWORD PTR [ebp+0x39]
  418716:	lmsw   WORD PTR [ebx]
  418719:	xchg   ebx,eax
  41871a:	mov    ds:0x5f92eb9d,al
  41871f:	adc    BYTE PTR [esi-0x42],ah
  418722:	stos   DWORD PTR es:[edi],eax
  418723:	add    al,0x4d
  418725:	dec    ebp
  418726:	je     0x4186e9
  418728:	mov    bh,0x6
  41872a:	adc    edi,0x69
  41872d:	dec    esi
  41872e:	sub    eax,0xe4e2f5f8
  418733:	dec    edx
  418734:	push   0x1e
  418736:	sub    al,0x53
  418738:	or     DWORD PTR [edx+ebp*4-0x54],esp
  41873c:	(bad)  
  41873d:	mov    es,esi
  41873f:	ins    BYTE PTR es:[edi],dx
  418740:	inc    ecx
  418741:	cmp    eax,0x9b86d828
  418746:	test   eax,0x589d16e1
  41874b:	sbb    eax,0x7e0de4bf
  418750:	jb     0x4187ba
  418752:	xchg   esp,eax
  418753:	push   es
  418754:	iret   
  418755:	or     al,0x12
  418757:	cdq    
  418758:	cmc    
  418759:	cmp    BYTE PTR [eax],dh
  41875b:	mov    ecx,0xb7bca31f
  418760:	and    BYTE PTR [ebx+0x24527f69],0xbf
  418767:	jmp    0x4187ca
  418769:	lods   eax,DWORD PTR ds:[esi]
  41876a:	aas    
  41876b:	nop
  41876c:	adc    bh,BYTE PTR [esi+ebx*4]
  41876f:	shr    DWORD PTR [eax+ebp*8],1
  418772:	mov    eax,ds:0x75bd3b6a
  418777:	pop    es
  418778:	xchg   esp,eax
  418779:	push   esi
  41877a:	lods   al,BYTE PTR ds:[esi]
  41877b:	and    DWORD PTR [eax],eax
  41877d:	int    0x6c
  41877f:	pop    eax
  418780:	lds    eax,FWORD PTR [ebx+0x5383bd2c]
  418786:	mov    BYTE PTR [ecx],dl
  418788:	add    eax,DWORD PTR [eax+0x2a]
  41878b:	jb     0x418743
  41878d:	arpl   WORD PTR [edi],cx
  41878f:	in     eax,dx
  418790:	sub    al,0xb7
  418792:	daa    
  418793:	pop    ss
  418794:	jne    0x4187cb
  418796:	and    cl,0xb3
  418799:	hlt    
  41879a:	cmp    al,dh
  41879c:	mov    cl,0x2f
  41879e:	and    BYTE PTR [eax+ebp*4+0x6c],cl
  4187a2:	push   ecx
  4187a3:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4187a5:	ret    
  4187a6:	adc    edi,esp
  4187a8:	pop    ss
  4187a9:	in     al,dx
  4187aa:	sbb    BYTE PTR [edx-0x45],dl
  4187ad:	iret   
  4187ae:	and    al,0x47
  4187b0:	push   0xd2b1861b
  4187b5:	shr    ah,1
  4187b7:	adc    eax,0xa49da3ca
  4187bc:	rcr    DWORD PTR [ecx-0x20],0x6f
  4187c0:	push   es
  4187c1:	mov    ds:0x68370271,eax
  4187c6:	and    bl,BYTE PTR [eax]
  4187c8:	enter  0x10d8,0x2f
  4187cc:	clc    
  4187cd:	dec    ebx
  4187ce:	xor    al,0x75
  4187d0:	adc    ecx,DWORD PTR [edx]
  4187d2:	mov    ebp,DWORD PTR [esi+0x7d875bc]
  4187d8:	cwde   
  4187d9:	xchg   eax,esi
  4187db:	out    dx,eax
  4187dc:	add    eax,0xca382210
  4187e1:	xor    eax,0x27de2a56
  4187e6:	jmp    0xe222:0x719038e1
  4187ed:	rcr    ebx,cl
  4187ef:	jge    0x418786
  4187f1:	push   0xffffff9e
  4187f3:	push   esp
  4187f4:	push   ebx
  4187f5:	fwait
  4187f6:	or     DWORD PTR [esi-0xd],ecx
  4187f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187fa:	stc    
  4187fb:	cmp    DWORD PTR [ebp-0x7d],esp
  4187fe:	aas    
  4187ff:	div    BYTE PTR [ecx+0x233ec41e]
  418805:	sub    dh,BYTE PTR [ebx]
  418807:	xchg   edx,eax
  418808:	jb     0x4187c2
  41880a:	loop   0x4187e5
  41880c:	xor    BYTE PTR [ebx+0x14],dh
  41880f:	or     al,0x68
  418811:	fcomp  QWORD PTR [eax-0x42]
  418814:	adc    eax,0x398b66c4
  418819:	push   0xa209a79a
  41881e:	mov    ebx,0x68cbc163
  418823:	and    BYTE PTR [ecx-0x7f932704],ch
  418829:	add    eax,0x67377ba2
  41882e:	xchg   ebx,eax
  41882f:	pushf  
  418830:	stos   DWORD PTR es:[edi],eax
  418831:	ds push esp
  418833:	popf   
  418834:	push   eax
  418835:	adc    ah,BYTE PTR ss:[ecx]
  418838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418839:	mov    al,ds:0x570bef1f
  41883e:	imul   esp,DWORD PTR [edi+0x3da70e6d],0x4
  418845:	mov    edx,0xd78aaceb
  41884a:	push   es
  41884b:	mov    ah,BYTE PTR [edx-0x24]
  41884e:	or     BYTE PTR [edx+0x7c],ch
  418851:	xor    DWORD PTR [edx-0x7d],esp
  418854:	push   cs
  418855:	loope  0x4187fa
  418857:	xchg   ebx,eax
  418858:	das    
  418859:	sbb    al,0x86
  41885b:	std    
  41885c:	dec    edx
  41885d:	xor    eax,DWORD PTR [ebx+0x1c]
  418860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418861:	and    DWORD PTR [edx+0x64],0xffffff98
  418865:	pop    ecx
  418866:	cwde   
  418867:	and    eax,0x69d9fc9
  41886c:	push   esi
  41886d:	jmp    0x4f2a9b4d
  418872:	ins    DWORD PTR es:[edi],dx
  418873:	mov    ch,0xb2
  418875:	and    esp,DWORD PTR [edx-0x3f41690a]
  41887b:	xchg   BYTE PTR [esi-0x373d4d3],ah
  418881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418882:	mov    esp,0xd4644d8
  418887:	cs mov al,0x3a
  41888a:	pusha  
  41888b:	dec    edx
  41888c:	xchg   edi,eax
  41888d:	mov    cl,0x6
  41888f:	das    
  418890:	psubsb mm1,mm2
  418893:	aad    0x1a
  418895:	jbe    0x418883
  418897:	add    BYTE PTR [edx+eiz*4+0x531cfd8a],0x11
  41889f:	cmovbe ebp,DWORD PTR [ebp-0xdac97e0]
  4188a6:	add    al,0xe4
  4188a9:	jg     0x4188d2
  4188ab:	push   cs
  4188ac:	pushf  
  4188ad:	or     al,0x87
  4188af:	test   al,0x99
  4188b1:	cs push ecx
  4188b3:	mov    BYTE PTR [edi],ch
  4188b5:	pop    ebp
  4188b6:	fwait
  4188b7:	shl    BYTE PTR [eax+0x6a],cl
  4188ba:	loopne 0x418927
  4188bc:	push   esi
  4188bd:	inc    ebx
  4188be:	inc    edi
  4188bf:	outs   dx,BYTE PTR ds:[esi]
  4188c0:	out    0x2c,eax
  4188c2:	inc    DWORD PTR [ecx-0xe]
  4188c5:	rol    DWORD PTR [ebx+0x322a0321],cl
  4188cb:	aam    0x90
  4188cd:	push   cs
  4188ce:	jbe    0x418943
  4188d0:	jo     0x418862
  4188d2:	jb     0x418928
  4188d4:	sbb    DWORD PTR [ebx+0x7],ecx
  4188d7:	or     DWORD PTR [ebp+0xc],eax
  4188da:	jl     0x4188c7
  4188dc:	lahf   
  4188dd:	sahf   
  4188de:	mov    al,0xf9
  4188e0:	jno    0x418875
  4188e2:	push   ecx
  4188e3:	adc    BYTE PTR [ecx-0x670e459c],0x12
  4188ea:	cmp    dl,BYTE PTR cs:[ecx]
  4188ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188ee:	xchg   ebx,eax
  4188ef:	fst    DWORD PTR [ecx-0x5e]
  4188f2:	xchg   bh,bl
  4188f4:	bound  esi,QWORD PTR [edx]
  4188f6:	or     al,0xe1
  4188f8:	pop    eax
  4188f9:	fisttp QWORD PTR [ebp-0x402bea6f]
  4188ff:	xchg   BYTE PTR [ebp-0x14],dl
  418902:	out    0xff,eax
  418904:	pop    ecx
  418905:	call   0xddae:0xf2bf5618
  41890c:	sbb    cl,ch
  41890e:	lods   eax,DWORD PTR ds:[esi]
  41890f:	nop
  418910:	lds    esp,FWORD PTR [edx+0x17f703d9]
  418916:	cmp    BYTE PTR [edi-0x7d],0xdc
  41891a:	xchg   BYTE PTR [ebp+0x6a],ch
  41891d:	mov    al,0xa1
  41891f:	fcom   DWORD PTR [ecx+0x36cc7fdc]
  418925:	or     bl,0x0
  418928:	ror    BYTE PTR [eax+ecx*1-0x67eaa3f5],0x17
  418930:	mov    al,0x37
  418932:	mov    esi,0xb707b6fa
  418937:	rcr    BYTE PTR [eax-0x7b],1
  41893a:	call   0x8cff:0x8582e066
  418941:	ret    0xef2
  418944:	enter  0x3622,0xb2
  418948:	icebp  
  418949:	pop    esi
  41894a:	jmp    0x4189c0
  41894c:	stos   BYTE PTR es:[edi],al
  41894d:	adc    al,al
  41894f:	inc    ecx
  418950:	maxps  xmm5,XMMWORD PTR gs:[edx-0x5a]
  418955:	sbb    eax,0xcf96bb04
  41895a:	cmp    DWORD PTR [edx+ebx*2],0x44da393b
  418961:	fdiv   QWORD PTR [edx]
  418963:	xchg   DWORD PTR [esi],edi
  418965:	out    dx,eax
  418966:	or     al,0x91
  418968:	xchg   BYTE PTR [eax],dh
  41896a:	cld    
  41896b:	fwait
  41896c:	js     0x4189df
  41896e:	push   ss
  41896f:	cmp    BYTE PTR [esi-0x2e],dh
  418972:	daa    
  418973:	loop   0x418914
  418975:	or     BYTE PTR [edi],bl
  418977:	dec    edi
  418978:	fdiv   DWORD PTR [ecx]
  41897a:	je     0x418978
  41897c:	daa    
  41897d:	loope  0x41899f
  41897f:	add    esp,edx
  418981:	pop    edx
  418982:	adc    BYTE PTR [esi+0x171011f2],0x3f
  418989:	loope  0x41890c
  41898b:	scas   al,BYTE PTR es:[edi]
  41898c:	mov    ds:0xd95e28d7,eax
  418991:	pop    edx
  418992:	gs push 0xfffffff2
  418995:	jp     0x418a0f
  418997:	clc    
  418998:	std    
  418999:	mov    dl,0x48
  41899b:	push   ebp
  41899c:	jmp    0x41899e
  41899e:	out    dx,al
  41899f:	aas    
  4189a0:	aad    0x93
  4189a2:	stc    
  4189a3:	push   ds
  4189a4:	imul   ebx,DWORD PTR ds:0x469db2ab,0x583cddf6
  4189ae:	push   ebp
  4189af:	ror    DWORD PTR [eax+0x31d525d8],cl
  4189b5:	dec    ecx
  4189b6:	ins    BYTE PTR es:[edi],dx
  4189b7:	fwait
  4189b8:	dec    ebp
  4189b9:	fisttp DWORD PTR [ecx+0x48fb4928]
  4189bf:	stos   BYTE PTR es:[edi],al
  4189c0:	imul   eax,ebp,0xffffffed
  4189c3:	sbb    dl,BYTE PTR [edx+0x61]
  4189c6:	test   eax,0x140a670e
  4189cb:	fsubp  st(2),st
  4189cd:	fwait
  4189ce:	and    DWORD PTR [edx+esi*2],esi
  4189d1:	dec    esp
  4189d2:	jl     0x4189bc
  4189d4:	and    eax,DWORD PTR [ecx+0x7e]
  4189d7:	jo     0x4189cd
  4189d9:	push   esp
  4189da:	dec    ecx
  4189db:	mov    al,ds:0xb80b3df2
  4189e0:	bound  edx,QWORD PTR [edi+edi*1-0xe3b60d8]
  4189e7:	cld    
  4189e8:	ins    BYTE PTR es:[edi],dx
  4189e9:	xchg   ebx,eax
  4189ea:	jnp    0x4189dc
  4189ec:	aad    0x71
  4189ee:	ror    BYTE PTR [eax],cl
  4189f0:	dec    esi
  4189f1:	inc    edi
  4189f2:	fisub  WORD PTR [ebx+0xe]
  4189f5:	sbb    DWORD PTR [ecx+esi*4],esi
  4189f8:	dec    ebp
  4189f9:	add    ecx,DWORD PTR [ebp-0x5a236216]
  4189ff:	(bad)  
  418a00:	push   esp
  418a01:	fwait
  418a02:	adc    eax,ebx
  418a04:	sub    DWORD PTR [ecx+ecx*2-0x75],esp
  418a08:	mov    BYTE PTR [eax+0x1e],dh
  418a0b:	test   al,0x82
  418a0d:	scas   al,BYTE PTR es:[edi]
  418a0e:	shl    BYTE PTR [esi-0x6a],0x9
  418a12:	mov    al,BYTE PTR [ebx]
  418a14:	ret    0xda95
  418a17:	daa    
  418a18:	scas   eax,DWORD PTR es:[edi]
  418a19:	mov    ebp,0x5a0edacb
  418a1e:	gs ins DWORD PTR es:[edi],dx
  418a20:	or     ah,BYTE PTR [eax+0x3959fd04]
  418a26:	ret    0x1409
  418a29:	mov    ch,0x78
  418a2b:	sub    al,0xfe
  418a2d:	popa   
  418a2e:	shr    DWORD PTR [eax],cl
  418a30:	(bad)  
  418a31:	mov    esp,DWORD PTR ss:[ebx-0x7e]
  418a35:	mov    eax,ds:0x80becf9f
  418a3a:	fcomi  st,st(5)
  418a3c:	dec    ecx
  418a3d:	clc    
  418a3e:	and    edi,DWORD PTR [edi+0x757c3439]
  418a44:	add    DWORD PTR [esi],esp
  418a46:	scas   eax,DWORD PTR es:[edi]
  418a47:	call   0xd3da7c38
  418a4c:	push   0xe6b50e21
  418a51:	inc    ebp
  418a52:	or     edx,edi
  418a54:	out    dx,al
  418a55:	pop    es
  418a56:	fcmovnu st,st(1)
  418a58:	or     dh,ch
  418a5a:	add    al,0xc4
  418a5c:	retf   0x7b86
  418a5f:	sub    bl,dl
  418a61:	jns    0x418a0c
  418a63:	xchg   DWORD PTR [ebp-0x3057643f],ebx
  418a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a6a:	or     eax,0x57b27ade
  418a6f:	fwait
  418a70:	call   FWORD PTR [edi+esi*1+0x2fb8524e]
  418a77:	xor    eax,0x4ea675a4
  418a7c:	repnz xor edx,DWORD PTR [edx-0x3d]
  418a80:	jmp    0x418ab5
  418a82:	adc    DWORD PTR [esi+0x65],esp
  418a85:	adc    eax,0x2a07ebf6
  418a8a:	push   edi
  418a8b:	test   al,0xac
  418a8d:	inc    ebx
  418a8e:	sahf   
  418a8f:	push   0xffffffac
  418a91:	push   edx
  418a92:	sub    DWORD PTR [edx+0x5c5674ca],0x17911cc
  418a9c:	mov    ebx,0x61bbe155
  418aa1:	sub    BYTE PTR [ecx+0x73340d4d],ah
  418aa7:	call   0x6400:0x7f32ad13
  418aae:	push   edi
  418aaf:	int    0xa9
  418ab1:	add    DWORD PTR [edi-0x6889e83a],edi
  418ab7:	int    0xae
  418ab9:	sbb    ah,BYTE PTR [esp+edx*8]
  418abc:	mov    BYTE PTR [ebx-0x3a],dh
  418abf:	xor    bh,BYTE PTR [edi+eiz*2]
  418ac2:	ja     0x418ab3
  418ac4:	xchg   DWORD PTR [ecx],edx
  418ac6:	sbb    DWORD PTR [edx],esp
  418ac8:	sbb    eax,0x7c1ddc1f
  418acd:	gs pop edx
  418acf:	stos   DWORD PTR es:[edi],eax
  418ad0:	bswap  ebx
  418ad2:	pushw  0xfb3c
  418ad6:	push   0xbed53a48
  418adb:	xchg   BYTE PTR [eax],ch
  418add:	jo     0x418b00
  418adf:	repz add DWORD PTR [ebp+edi*1-0x41],edx
  418ae4:	mov    bh,0x4e
  418ae6:	mov    ch,0xaf
  418ae8:	pop    esi
  418ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aea:	inc    ebp
  418aeb:	mov    dh,0xe1
  418aed:	retf   0x4e03
  418af0:	mov    dh,0xa1
  418af2:	sub    eax,DWORD PTR ss:[ebx-0x2266aa47]
  418af9:	or     al,0x48
  418afb:	ret    0x6e01
  418afe:	repnz cs call 0xf74f:0x29293896
  418b07:	out    dx,al
  418b08:	adc    al,0x8f
  418b0a:	fwait
  418b0b:	pop    ebp
  418b0c:	sub    DWORD PTR [esi+0x45],ebx
  418b0f:	neg    BYTE PTR [esi+0x588261e9]
  418b15:	cmp    BYTE PTR [ecx-0x3d38385b],cl
  418b1b:	popa   
  418b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b1d:	idiv   BYTE PTR [edx]
  418b1f:	push   ebp
  418b20:	inc    ecx
  418b21:	push   esi
  418b22:	ror    bh,cl
  418b24:	jae    0x418ac5
  418b26:	mov    bl,0xac
  418b28:	push   eax
  418b29:	lds    esi,FWORD PTR [edi-0x5c762115]
  418b2f:	outs   dx,DWORD PTR ds:[esi]
  418b30:	pop    ebx
  418b31:	jo     0x418b33
  418b33:	xchg   edi,eax
  418b34:	dec    ecx
  418b35:	js     0x418b5b
  418b37:	(bad)  
  418b38:	fist   DWORD PTR [ecx]
  418b3a:	inc    esp
  418b3b:	into   
  418b3c:	or     al,bl
  418b3e:	cli    
  418b3f:	inc    ecx
  418b40:	adc    BYTE PTR [esp+esi*2-0x7bbc14d3],dl
  418b47:	out    dx,eax
  418b48:	or     BYTE PTR [edx-0x31],al
  418b4b:	rcr    DWORD PTR [eax],cl
  418b4d:	jl     0x418ae0
  418b4f:	xchg   esp,ebx
  418b51:	push   0x15
  418b53:	inc    BYTE PTR [edi-0x3656ddb1]
  418b59:	sti    
  418b5a:	cmc    
  418b5b:	jb     0x418aef
  418b5d:	and    al,0x88
  418b5f:	pop    esp
  418b60:	xor    ebx,esp
  418b62:	(bad)  
  418b63:	xor    esp,ecx
  418b65:	jbe    0x418b59
  418b67:	dec    ebp
  418b68:	add    eax,0x394f1c57
  418b6d:	inc    ebp
  418b6e:	std    
  418b6f:	outs   dx,DWORD PTR ds:[esi]
  418b70:	dec    esi
  418b71:	add    edi,0x46
  418b74:	cld    
  418b75:	inc    edx
  418b76:	jl     0x418b03
  418b78:	push   edx
  418b79:	ins    DWORD PTR es:[edi],dx
  418b7a:	inc    ecx
  418b7b:	fcomp  st(7)
  418b7d:	xchg   edx,eax
  418b7e:	jmp    0x3a8b:0x9423f6cc
  418b85:	loopne 0x418b92
  418b87:	sahf   
  418b88:	or     dh,bh
  418b8a:	adc    al,0xba
  418b8c:	enter  0x1bd1,0x3d
  418b90:	jns    0x418b35
  418b92:	cmp    BYTE PTR [ebx],dl
  418b94:	sbb    eax,0x16e40f99
  418b99:	loop   0x418bbe
  418b9b:	dec    esi
  418b9c:	sbb    DWORD PTR [edi+eax*4-0x7c],esp
  418ba0:	jl     0x418b30
  418ba2:	ja     0x418bcd
  418ba4:	mov    bh,0x2
  418ba6:	ss sahf 
  418ba8:	icebp  
  418ba9:	xor    esp,DWORD PTR [eax+0x68]
  418bac:	adc    ah,al
  418bae:	popa   
  418baf:	add    ah,BYTE PTR [edi+edx*1-0x35270340]
  418bb6:	push   eax
  418bb7:	cld    
  418bb8:	dec    esp
  418bb9:	and    eax,0x6bcc58cb
  418bbe:	sub    cl,BYTE PTR [ecx]
  418bc0:	ror    BYTE PTR [ecx-0x6d],0x62
  418bc4:	sbb    ch,BYTE PTR [ebp+0x6d471a3e]
  418bca:	mov    edx,0x3a77ad45
  418bcf:	sar    BYTE PTR ds:0xf39a960c,0x97
  418bd6:	mov    esp,0x38e1d53d
  418bdb:	mov    eax,ds:0x26e68cf8
  418be0:	out    0x79,eax
  418be2:	push   ss
  418be3:	sar    cl,cl
  418be5:	cmp    eax,edi
  418be7:	dec    ebp
  418be8:	xchg   DWORD PTR [ecx-0x2],ecx
  418beb:	je     0x418c35
  418bed:	mov    ch,0x20
  418bef:	sbb    eax,0x2e511f6d
  418bf4:	sub    ch,bl
  418bf6:	cli    
  418bf7:	jle    0x418bca
  418bf9:	daa    
  418bfa:	or     eax,0xdda9f976
  418bff:	lahf   
  418c00:	in     eax,dx
  418c01:	in     al,dx
  418c02:	sbb    bh,ah
  418c04:	cmp    cl,BYTE PTR [edx]
  418c06:	inc    ecx
  418c07:	xchg   BYTE PTR [edi+eax*1],al
  418c0a:	mov    WORD PTR [ebx+0x1399ab2],ss
  418c10:	outs   dx,BYTE PTR ds:[esi]
  418c11:	addr16 inc eax
  418c13:	inc    ecx
  418c14:	jmp    0x315e4352
  418c19:	cmp    DWORD PTR [edi],ecx
  418c1b:	ror    BYTE PTR gs:[ecx+0x50],cl
  418c1f:	mov    edx,DWORD PTR [esi+eax*2+0x6695db1b]
  418c26:	or     eax,0xc3452ae2
  418c2b:	out    dx,al
  418c2c:	jo     0x418c9b
  418c2e:	aaa    
  418c2f:	outs   dx,DWORD PTR ds:[esi]
  418c30:	xor    ebx,esi
  418c32:	fdivr  DWORD PTR [ebx+0x6d57611]
  418c38:	and    eax,0xc0bb86c6
  418c3d:	ror    DWORD PTR [ecx-0x1bb4545e],cl
  418c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c44:	(bad)  
  418c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c47:	jnp    0x418c74
  418c49:	popa   
  418c4a:	test   eax,0x22e340c2
  418c4f:	sbb    BYTE PTR ds:0x1f516534,cl
  418c55:	or     ebx,eax
  418c57:	ror    DWORD PTR [ebx+0x32],1
  418c5a:	std    
  418c5b:	inc    ebx
  418c5c:	outs   dx,BYTE PTR ds:[esi]
  418c5d:	xor    ch,bl
  418c5f:	imul   ebx,DWORD PTR [ebx-0x1b],0xffffffcc
  418c63:	sti    
  418c64:	mov    DWORD PTR [esi-0x6a],esp
  418c67:	fsub   st(7),st
  418c69:	adc    dh,bl
  418c6b:	push   ss
  418c6c:	fisubr DWORD PTR ds:0x85eafd7b
  418c72:	lock cmp BYTE PTR [ebp-0xe397a27],ch
  418c79:	mov    dh,0x16
  418c7b:	out    dx,al
  418c7c:	int3   
  418c7d:	test   eax,0x96d6960
  418c82:	push   eax
  418c83:	push   eax
  418c84:	lock pop ds
  418c86:	aad    0xa
  418c88:	je     0x418cd3
  418c8a:	xor    eax,0x94af29a4
  418c8f:	inc    ecx
  418c90:	mov    bh,BYTE PTR [ebx-0x5c87a1c5]
  418c96:	xchg   ecx,eax
  418c97:	pushf  
  418c98:	xor    ebp,DWORD PTR [edi]
  418c9a:	in     eax,dx
  418c9b:	jo     0x418c36
  418c9d:	xor    al,0x33
  418c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ca0:	push   eax
  418ca1:	inc    DWORD PTR [eax+0x2a7751d7]
  418ca7:	(bad)  
  418ca8:	pop    edi
  418ca9:	daa    
  418caa:	push   ebx
  418cab:	jno    0x418d22
  418cad:	fldcw  WORD PTR [esi+0x4e]
  418cb0:	popf   
  418cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cb2:	cs leave 
  418cb4:	inc    esi
  418cb5:	adc    cl,BYTE PTR [eax]
  418cb7:	nop
  418cb8:	or     BYTE PTR [esi],bh
  418cba:	lds    eax,FWORD PTR [edi]
  418cbc:	jno    0x418d00
  418cbe:	pop    eax
  418cbf:	mov    bl,0x44
  418cc1:	xchg   ecx,eax
  418cc2:	sbb    BYTE PTR [edx+0x75fd4929],al
  418cc8:	jnp    0x418cd8
  418cca:	xchg   DWORD PTR [ebp+eiz*8+0x35],ebp
  418cce:	push   ebp
  418ccf:	sub    BYTE PTR [ebx+0x76394ecf],al
  418cd5:	in     eax,0xb4
  418cd7:	add    BYTE PTR [edi+0x52fd3ef4],bh
  418cdd:	xor    edx,esp
  418cdf:	fistp  QWORD PTR ds:0x51d6d71b
  418ce5:	lds    eax,FWORD PTR [ebp-0x7c620679]
  418ceb:	push   edi
  418cec:	push   ecx
  418ced:	int    0x1d
  418cef:	lds    esp,FWORD PTR [ebx+0x1f]
  418cf2:	inc    ebp
  418cf3:	adc    eax,0xd79d1e90
  418cf8:	and    al,0x82
  418cfa:	xchg   esp,eax
  418cfb:	xchg   edi,eax
  418cfc:	jmp    0xa28:0xeec6cd60
  418d03:	xchg   esi,eax
  418d04:	rcl    DWORD PTR [edx+0x70],1
  418d07:	mov    ecx,edi
  418d09:	adc    DWORD PTR [ecx+esi*4+0x4e75ee3e],ebp
  418d10:	xor    al,0x2f
  418d12:	and    eax,0x78569a86
  418d17:	ret    
  418d18:	jmp    0x418d10
  418d1a:	add    ebx,DWORD PTR [eax-0x7d]
  418d1d:	pop    ss
  418d1e:	push   ds
  418d1f:	inc    edi
  418d20:	xbegin 0x368830ea
  418d26:	jno    0x418d73
  418d28:	mov    ch,0x5e
  418d2a:	or     esp,DWORD PTR [esi+eax*2+0x59]
  418d2e:	repnz adc al,BYTE PTR [edx-0x1396ec8b]
  418d35:	sbb    eax,0xecd1101a
  418d3a:	out    dx,al
  418d3b:	jno    0x418d12
  418d3d:	adc    al,0xba
  418d3f:	in     eax,0x7f
  418d41:	sub    esi,DWORD PTR ds:0x253a0372
  418d47:	mov    DWORD PTR [eax],eax
  418d49:	dec    ebp
  418d4a:	adc    eax,0x139c744c
  418d4f:	out    dx,al
  418d50:	inc    esp
  418d51:	add    DWORD PTR [ecx+esi*8-0x30],esp
  418d55:	mov    WORD PTR [ebx+0xcc6a91d],cs
  418d5b:	mov    al,0x95
  418d5d:	jl     0x418cf7
  418d5f:	clc    
  418d60:	xor    al,0xf8
  418d62:	pop    ss
  418d63:	and    al,0xcc
  418d65:	jmp    0x7e8b:0x57d4a8ff
  418d6c:	push   0xffffffcf
  418d6e:	dec    edx
  418d6f:	cmp    al,0xc2
  418d71:	out    dx,al
  418d72:	test   al,0x59
  418d74:	mov    eax,ds:0xaa396e05
  418d79:	pusha  
  418d7a:	inc    ebp
  418d7b:	into   
  418d7c:	dec    esp
  418d7d:	mov    ds:0x53639ddf,al
  418d82:	jns    0x418d22
  418d84:	(bad)  
  418d85:	xchg   ebp,edi
  418d87:	add    edx,DWORD PTR [ebp+0x7eeaf730]
  418d8d:	(bad)  
  418d8e:	(bad)  [ebx+0x23ef1b91]
  418d94:	clc    
  418d95:	repnz cmp al,0xcd
  418d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d99:	shl    BYTE PTR [ebx-0x3ce69bac],cl
  418d9f:	sbb    ch,BYTE PTR [esi+0x10]
  418da2:	sbb    ch,BYTE PTR [edx+0x6565b000]
  418da8:	ins    DWORD PTR es:[edi],dx
  418da9:	(bad)  
  418daa:	call   0xe56390fb
  418daf:	pop    ss
  418db0:	test   BYTE PTR [edx+0x7304aca9],dh
  418db6:	mov    BYTE PTR [edx-0x1a960422],0x56
  418dbd:	inc    ebx
  418dbe:	pop    esp
  418dbf:	test   esp,0xd7d55fb3
  418dc5:	imul   ebx,DWORD PTR [esi+ebp*8],0xdcd5de89
  418dcc:	pushf  
  418dcd:	fisub  WORD PTR [edx]
  418dcf:	sub    DWORD PTR [edi],ecx
  418dd1:	or     DWORD PTR [esi+esi*8-0x7b],ebp
  418dd5:	lea    edi,[ebx+0x7b]
  418dd8:	jmp    0x67fd:0x17c4cd50
  418ddf:	jp     0x418e1a
  418de1:	and    al,0xfd
  418de3:	or     BYTE PTR [esi],ah
  418de5:	push   0xffffffe1
  418de7:	push   ecx
  418de8:	hlt    
  418de9:	jle    0x418dbb
  418deb:	icebp  
  418dec:	pop    esp
  418ded:	in     al,0x76
  418def:	sbb    al,0x52
  418df1:	lock push es
  418df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418df4:	jnp    0x418d8c
  418df6:	pop    edx
  418df7:	leave  
  418df8:	jae    0x418e63
  418dfa:	(bad)  
  418dfb:	das    
  418dfc:	jecxz  0x418dc8
  418dfe:	arpl   si,di
  418e00:	clc    
  418e01:	hlt    
  418e02:	adc    ecx,DWORD PTR [ebp+0x5a]
  418e05:	pop    ds
  418e06:	retf   
  418e07:	push   0x70
  418e09:	cli    
  418e0a:	and    al,0x42
  418e0c:	(bad)  
  418e0d:	out    0xae,eax
  418e0f:	push   cs
  418e10:	loopne 0x418d98
  418e12:	retf   
  418e13:	push   edx
  418e14:	loop   0x418e2b
  418e16:	rcr    DWORD PTR [ebx],cl
  418e18:	jo     0x418e5c
  418e1a:	dec    edx
  418e1b:	sbb    eax,0x2a1cafbd
  418e20:	inc    esp
  418e21:	bound  eax,QWORD PTR [ebx+0x37]
  418e24:	jns    0x418db8
  418e26:	add    eax,0x5d8f8058
  418e2b:	jno    0x418e20
  418e2d:	push   ebx
  418e2e:	jnp    0x418dca
  418e30:	add    BYTE PTR [eax],ch
  418e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e33:	xchg   ebx,eax
  418e34:	xlat   BYTE PTR ds:[ebx]
  418e35:	je     0x418e03
  418e37:	mov    eax,DWORD PTR [esi]
  418e39:	and    BYTE PTR [ecx+0x16ba8074],al
  418e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e40:	mov    ecx,0x81e0cc8e
  418e45:	loopne 0x418e78
  418e47:	xchg   ecx,eax
  418e48:	xor    al,0x44
  418e4a:	inc    esi
  418e4b:	out    0xe4,eax
  418e4d:	jmp    0x3a14:0x602990ee
  418e54:	stos   DWORD PTR es:[edi],eax
  418e55:	pop    esp
  418e56:	lods   eax,DWORD PTR ds:[esi]
  418e57:	das    
  418e58:	push   0x1db3391a
  418e5d:	test   BYTE PTR [edx-0x44],dl
  418e60:	pushf  
  418e61:	push   ds
  418e62:	sub    BYTE PTR [ebx-0x46],bh
  418e65:	shr    esp,1
  418e67:	dec    ecx
  418e68:	jmp    0x6cebc732
  418e6d:	ins    BYTE PTR es:[edi],dx
  418e6e:	adc    ah,bl
  418e70:	jne    0x418ec9
  418e72:	mov    WORD PTR [esi-0x79],ss
  418e75:	jmp    0x418e78
  418e77:	cmp    al,0x2a
  418e79:	push   es
  418e7a:	and    eax,0x98a50699
  418e7f:	mov    bh,0xba
  418e81:	aam    0xc8
  418e83:	mov    edx,0x4c41d74e
  418e88:	aaa    
  418e89:	and    DWORD PTR [edx],edi
  418e8b:	sub    DWORD PTR [esi+0x52],eax
  418e8e:	dec    ebp
  418e8f:	fadd   QWORD PTR [ecx]
  418e91:	push   0xffffffde
  418e93:	fs xchg ebp,eax
  418e95:	retf   0x4459
  418e98:	mov    dh,0xde
  418e9a:	test   al,0xec
  418e9c:	add    ah,bh
  418e9e:	cs push edi
  418ea0:	sub    eax,0xcc388a36
  418ea5:	jmp    0x3db2:0x56d9f5e7
  418eac:	sbb    edi,ebp
  418eae:	inc    ebx
  418eaf:	lods   eax,DWORD PTR ds:[esi]
  418eb0:	adc    al,0xd9
  418eb2:	(bad)  
  418eb4:	push   ecx
  418eb5:	popa   
  418eb6:	jne    0x418f26
  418eb8:	(bad)  
  418eb9:	test   BYTE PTR [edi-0x760f33d7],0xee
  418ec0:	mov    ebp,DWORD PTR [edx+0x1d]
  418ec3:	cdq    
  418ec4:	fist   DWORD PTR [esi]
  418ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec7:	mov    cl,0x57
  418ec9:	jno    0x418e63
  418ecb:	jg     0x418e71
  418ecd:	mov    ch,BYTE PTR [edx-0x12]
  418ed0:	mov    cl,0xb
  418ed2:	dec    BYTE PTR [edx+0x254fef9d]
  418ed8:	popa   
  418ed9:	ss pusha 
  418edb:	(bad)  
  418edc:	or     eax,0x8ea05d3f
  418ee1:	sbb    bh,dh
  418ee3:	mov    ds:0xd877ab9a,al
  418ee8:	sub    eax,0x4560cd02
  418eed:	pop    ebx
  418eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eef:	xor    eax,0x1af9e35e
  418ef4:	sub    ecx,DWORD PTR [ecx-0x1a16013]
  418efa:	dec    ecx
  418efb:	test   eax,0xf5b64b7d
  418f00:	cdq    
  418f01:	adc    al,bl
  418f03:	or     ah,BYTE PTR [eax+0x40]
  418f06:	jmp    0x73ccf3cd
  418f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f0c:	imul   esp,DWORD PTR [eax],0xffffffca
  418f0f:	call   0x3bb5:0xb4cd1129
  418f16:	faddp  st(5),st
  418f18:	(bad)  
  418f19:	cmp    DWORD PTR [eax],0xffffffde
  418f1c:	mov    bl,0x5c
  418f1e:	or     BYTE PTR [edx-0x3b10b1ed],ch
  418f24:	out    dx,eax
  418f25:	sbb    al,0x73
  418f27:	fnsave [edi]
  418f29:	pop    sp
  418f2b:	ret    0xb873
  418f2e:	out    0xd6,al
  418f30:	dec    eax
  418f31:	pop    ds
  418f32:	jmp    DWORD PTR [ebx+0x63]
  418f35:	jns    0x418f43
  418f37:	lods   ax,WORD PTR ds:[esi]
  418f39:	rcr    BYTE PTR [edx+0x41447a66],0x5a
  418f40:	jb     0x418f35
  418f42:	ret    
  418f43:	sbb    esi,DWORD PTR [eax]
  418f45:	sbb    al,BYTE PTR [ebp+edx*2+0x3b]
  418f49:	fild   WORD PTR [eax]
  418f4b:	push   ds
  418f4c:	fsub   QWORD PTR [ecx+0x69]
  418f4f:	mov    ah,0xe0
  418f51:	int    0xcb
  418f53:	iret   
  418f54:	mov    ah,0xa5
  418f56:	call   0x544e302f
  418f5b:	mov    ds:0x58cd9c2f,eax
  418f60:	outs   dx,BYTE PTR ds:[esi]
  418f61:	pushf  
  418f62:	jbe    0x418f17
  418f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f65:	lea    edx,[edi]
  418f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f68:	dec    esi
  418f69:	inc    esi
  418f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f6b:	push   0x62aa7679
  418f70:	call   0xb505:0x37313510
  418f77:	inc    edx
  418f78:	pop    edi
  418f79:	cs shr al,cl
  418f7c:	push   edi
  418f7d:	jge    0x418f1e
  418f7f:	push   cs
  418f80:	shl    DWORD PTR [ebp+0x40a0ccbe],0xac
  418f87:	test   eax,0x3320c777
  418f8c:	cmp    BYTE PTR [ecx],0x4f
  418f8f:	and    BYTE PTR [ebx],cl
  418f91:	mov    ebx,esp
  418f93:	add    eax,0x3f843a23
  418f98:	inc    ebp
  418f99:	xchg   ebp,eax
  418f9a:	xchg   edi,eax
  418f9b:	imul   edi,DWORD PTR [ecx],0xd368310b
  418fa1:	test   eax,0xdd5311d2
  418fa6:	and    DWORD PTR [eax],ebx
  418fa8:	jp     0x418f99
  418faa:	xlat   BYTE PTR ds:[ebx]
  418fab:	imul   esp,DWORD PTR [edi],0x67969cfc
  418fb1:	add    DWORD PTR [edi],esi
  418fb3:	out    0xbc,al
  418fb5:	scas   eax,DWORD PTR es:[edi]
  418fb6:	xchg   esp,edx
  418fb8:	push   ebp
  418fb9:	int    0x27
  418fbb:	clc    
  418fbc:	push   esp
  418fbd:	imul   edx,edx,0x14
  418fc0:	stos   DWORD PTR es:[edi],eax
  418fc1:	ins    DWORD PTR es:[edi],dx
  418fc2:	adc    eax,ecx
  418fc4:	(bad)  
  418fc5:	cwde   
  418fc6:	cmp    ah,cl
  418fc8:	mov    eax,ds:0xdff24ca6
  418fcd:	aas    
  418fce:	cmp    eax,0xee23f9f5
  418fd3:	dec    esi
  418fd4:	xlat   BYTE PTR ds:[ebx]
  418fd5:	pop    es
  418fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fd7:	dec    ebx
  418fd8:	in     al,dx
  418fd9:	push   ss
  418fda:	mov    ebx,0x583fc11b
  418fdf:	and    BYTE PTR [ebp+0x473497eb],0x5f
  418fe6:	inc    esp
  418fe7:	inc    esi
  418fe8:	mov    edx,0xde6886b6
  418fed:	push   cs
  418fee:	xlat   BYTE PTR ds:[ebx]
  418fef:	out    dx,eax
  418ff0:	or     al,0x96
  418ff2:	adc    al,0xae
  418ff4:	idiv   BYTE PTR ds:[eax+0x6a]
  418ff8:	std    
  418ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ffa:	std    
  418ffb:	js     0x419044
  418ffd:	mov    BYTE PTR [edx-0x3d038ec2],al
  419003:	mov    ebp,0x24163104
  419008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419009:	(bad)  
  41900b:	cmp    ebp,DWORD PTR ds:0xc5984b01
  419011:	jbe    0x419030
  419013:	or     DWORD PTR [eax-0x63],edi
  419016:	sub    BYTE PTR [ecx+0x2cc6c187],0x80
  41901d:	mov    esi,0xc4ae31a2
  419022:	pop    esp
  419023:	cmp    eax,0x9af7d845
  419028:	sub    eax,0x48c24157
  41902d:	or     BYTE PTR [edi-0x27f3303e],0xaf
  419034:	popf   
  419035:	cmp    al,BYTE PTR [esi-0x78]
  419038:	mov    ?,WORD PTR [ebp+0x25]
  41903b:	sub    DWORD PTR [esp+0x6c],edx
  41903f:	jmp    0x418fe8
  419041:	xchg   cl,ch
  419043:	sti    
  419044:	clc    
  419045:	sti    
  419046:	inc    edx
  419047:	arpl   si,di
  419049:	sbb    bl,BYTE PTR [ebx+0x31a032cd]
  41904f:	lods   eax,DWORD PTR ds:[esi]
  419050:	fsubr  DWORD PTR [ecx]
  419052:	sub    al,0xd4
  419054:	xchg   DWORD PTR [edi-0x3d],edx
  419057:	outs   dx,BYTE PTR ds:[esi]
  419058:	addr16 jmp 0x3da71bf0
  41905e:	dec    edi
  41905f:	inc    eax
  419060:	je     0x419003
  419062:	outs   dx,BYTE PTR ds:[esi]
  419063:	dec    edx
  419064:	mov    bh,0x6f
  419066:	pop    edx
  419067:	sahf   
  419068:	jbe    0x41907e
  41906a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41906b:	bound  ebp,QWORD PTR es:[edx+0x226c877e]
  419072:	sbb    BYTE PTR [ebx+edx*4],bl
  419075:	(bad)  
  419076:	sbb    dl,BYTE PTR [edx+esi*8]
  419079:	(bad)  
  41907a:	stc    
  41907b:	or     esp,0xed0f2dd6
  419081:	test   BYTE PTR [edx-0x737b8763],0x41
  419088:	jecxz  0x4190be
  41908a:	inc    edx
  41908b:	(bad)  
  41908c:	(bad)  
  41908d:	adc    eax,0x86737d00
  419092:	jnp    0x4190dc
  419094:	sbb    bh,cl
  419096:	jmp    0x9d03f8e8
  41909b:	(bad)  
  41909c:	sbb    DWORD PTR [ebp+0x142916e3],eax
  4190a2:	push   0xffffff84
  4190a4:	mov    esp,0xf20c017b
  4190a9:	and    ecx,0xffffffc0
  4190ac:	inc    ebx
  4190ad:	xor    BYTE PTR [eax+0x2f00b13e],bl
  4190b3:	test   al,0xa
  4190b5:	xchg   ch,dl
  4190b7:	rcr    DWORD PTR [eax-0x70],1
  4190ba:	xchg   DWORD PTR [ebp+0x1e],ecx
  4190bd:	jp     0x41911c
  4190bf:	(bad)  
  4190c0:	loope  0x419096
  4190c2:	push   ss
  4190c3:	sahf   
  4190c4:	pusha  
  4190c5:	push   cs
  4190c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190c7:	push   ds
  4190c8:	retf   0xf3a4
  4190cb:	sti    
  4190cc:	(bad)  
  4190ce:	add    ah,BYTE PTR [ebx+0x57]
  4190d1:	dec    eax
  4190d2:	bound  esp,QWORD PTR ds:0xa366eab6
  4190d8:	inc    esp
  4190d9:	iret   
  4190da:	dec    esp
  4190db:	mov    edx,0x8519d0b9
  4190e0:	cmp    BYTE PTR [ebp+0x5a],bh
  4190e3:	clc    
  4190e4:	sbb    BYTE PTR cs:[edi-0x4ffd3219],al
  4190eb:	push   ecx
  4190ec:	dec    ebx
  4190ed:	jge    0x4190d7
  4190ef:	int3   
  4190f0:	cmp    eax,DWORD PTR [eax+0x4d]
  4190f3:	mov    DWORD PTR [ebp-0x6f],esi
  4190f6:	mov    eax,0xfc97a12e
  4190fb:	mov    ebx,0xa3fc2799
  419100:	jge    0x4190f6
  419102:	push   eax
  419103:	fsub   DWORD PTR [ebx+ecx*1+0x3637ac23]
  41910a:	mov    cl,0xa5
  41910c:	into   
  41910d:	sar    esi,0x41
  419110:	repz xor eax,0x46dca059
  419116:	leave  
  419117:	lods   al,BYTE PTR ds:[esi]
  419118:	xor    DWORD PTR [ebx+0x35],ebx
  41911b:	push   0x5c
  41911d:	add    cl,BYTE PTR [ecx]
  41911f:	sub    dl,BYTE PTR [edi-0x7b903946]
  419125:	cmp    DWORD PTR [edx],esi
  419127:	and    BYTE PTR [eax+ebx*4-0x6d],cl
  41912b:	iret   
  41912c:	repnz mov ch,0x6d
  41912f:	pop    edx
  419130:	mov    al,ds:0x9e1535d0
  419135:	cmp    eax,0x95e9b119
  41913a:	cld    
  41913b:	push   es
  41913c:	dec    ecx
  41913d:	dec    ecx
  41913e:	sub    eax,0x8941a538
  419143:	push   ebp
  419144:	mov    al,0x8b
  419146:	push   ebp
  419147:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx-0x6708d874]
  419207:	or     al,0x4b
  419209:	nop
  41920a:	xor    esp,DWORD PTR [eax]
  41920c:	add    BYTE PTR [ebx-0x7c7ca1c2],0xa6
  419213:	or     al,0x86
  419215:	add    ah,BYTE PTR [ecx-0x30f1e4b2]
  41921b:	cli    
  41921c:	adc    dl,BYTE PTR [ecx+esi*2+0x4fb42079]
  419223:	aam    0xcc
  419225:	push   eax
  419226:	into   
  419227:	inc    eax
  419228:	adc    esi,DWORD PTR [ecx]
  41922a:	sar    BYTE PTR [esp+eiz*8],cl
  41922d:	mov    ebp,0xf18755fd
  419232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419233:	pop    esi
  419234:	mov    al,ds:0xdf526fa1
  419239:	or     eax,0x904e9661
  41923e:	push   0x76
  419240:	inc    edi
  419241:	adc    esi,esi
  419243:	add    ecx,0x6b3341a2
  419249:	sub    al,0x6e
  41924b:	cmp    BYTE PTR [edi-0x1ab7048e],ch
  419251:	or     al,0xb4
  419253:	xchg   DWORD PTR [ecx+0x4d],edi
  419256:	pop    ecx
  419257:	mov    eax,0x50a16ab1
  41925c:	int    0x22
  41925e:	add    DWORD PTR [eax],eax
  419260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419261:	call   0x6556:0x9f05cd31
  419268:	and    bh,BYTE PTR [edi-0x308c40df]
  41926e:	outs   dx,DWORD PTR ds:[esi]
  41926f:	shl    DWORD PTR [ecx+0x65],1
  419272:	or     edx,esi
  419274:	xchg   esi,eax
  419275:	xor    al,0x82
  419277:	pop    ebx
  419278:	imul   ebp,DWORD PTR [eax],0x5c
  41927b:	sub    BYTE PTR [ebx],ch
  41927d:	sti    
  41927e:	mov    ebp,0x985910dc
  419283:	adc    al,0x0
  419285:	out    0xce,eax
  419287:	mov    sp,0x7cb3
  41928b:	and    eax,0x9dc8b25e
  419290:	int    0x90
  419292:	stos   DWORD PTR es:[edi],eax
  419293:	jae    0x41924d
  419295:	xchg   esi,eax
  419296:	xlat   BYTE PTR ds:[ebx]
  419297:	mov    ah,0x72
  419299:	cmp    cl,BYTE PTR [esi-0x4f1aa508]
  41929f:	ret    0x9056
  4192a2:	repnz sub BYTE PTR [ebx+ecx*1],cl
  4192a6:	inc    ebp
  4192a7:	fsubr  QWORD PTR [edx+0x23]
  4192aa:	je     0x4192d7
  4192ac:	mov    esp,0xe03e4210
  4192b1:	xchg   esi,eax
  4192b2:	aad    0xab
  4192b4:	imul   edi,DWORD PTR [eax+ebx*1+0xe425a12],0xffffffd9
  4192bc:	retf   
  4192bd:	std    
  4192be:	or     eax,0x4811b2b5
  4192c3:	sub    al,0xf9
  4192c5:	retf   0x69c0
  4192c8:	mov    esp,0x8fd73719
  4192cd:	rol    BYTE PTR [edx+ebx*2+0x7b],cl
  4192d1:	xchg   ebx,eax
  4192d2:	push   edx
  4192d3:	push   ebx
  4192d4:	lods   eax,DWORD PTR ds:[esi]
  4192d5:	jmp    0x5564:0xa3cd9707
  4192dc:	sub    DWORD PTR [ecx-0x18],edx
  4192df:	or     DWORD PTR [edi],esi
  4192e1:	jb     0x4192fd
  4192e3:	cmp    DWORD PTR [eax+0x353d0175],ebx
  4192e9:	xor    eax,0xdf298802
  4192ee:	mov    ds:0x27172bdb,al
  4192f3:	sti    
  4192f4:	pop    ecx
  4192f5:	pop    es
  4192f6:	(bad)  
  4192f7:	rcr    eax,1
  4192f9:	mov    eax,0x18a8864b
  4192fe:	adc    ch,BYTE PTR [ecx]
  419300:	test   DWORD PTR [edi-0x23badf66],esi
  419306:	sub    eax,0x146795a
  41930b:	jl     0x419353
  41930d:	add    bl,BYTE PTR cs:[edx]
  419310:	jle    0x4192aa
  419312:	mov    ds:0x541cc01,eax
  419317:	and    al,0x31
  419319:	xor    BYTE PTR [ebp-0xd3b5929],dh
  41931f:	test   DWORD PTR [ecx-0x72fa69e5],ebx
  419325:	xchg   ecx,eax
  419326:	int    0x6b
  419328:	fstp   TBYTE PTR [ecx+0x25]
  41932b:	cwde   
  41932c:	repnz retf 
  41932e:	bound  eax,QWORD PTR [eax*8+0x2515851e]
  419335:	arpl   WORD PTR [esi],di
  419337:	pop    eax
  419338:	out    dx,al
  419339:	out    0x5f,al
  41933b:	imul   DWORD PTR [ebx+esi*4-0xe]
  41933f:	out    0x49,eax
  419341:	and    eax,0x2d12029a
  419346:	inc    eax
  419347:	stos   BYTE PTR es:[edi],al
  419348:	pop    esi
  419349:	lahf   
  41934a:	xor    DWORD PTR ds:0xa7489b3a,ecx
  419350:	add    BYTE PTR [ecx+0x3b],0x5a
  419354:	pop    ds
  419355:	(bad)  
  419356:	jo     0x419328
  419358:	xchg   edx,eax
  419359:	enter  0x2e4e,0x99
  41935d:	cli    
  41935e:	push   DWORD PTR [edi-0x35]
  419361:	inc    esp
  419362:	(bad)  
  419363:	(bad)  
  419364:	cmp    ebx,DWORD PTR [ebp-0x465d6eff]
  41936a:	cmp    BYTE PTR [ebx+edi*4],dh
  41936d:	bnd jmp 0x4193d2
  419370:	mov    eax,0x50d162a
  419375:	jl     0x41933c
  419377:	ins    DWORD PTR es:[edi],dx
  419378:	fwait
  419379:	push   0xffffffd2
  41937b:	fs repz pop ss
  41937e:	cli    
  41937f:	xchg   ebp,eax
  419380:	mov    bh,0xa3
  419382:	pop    esp
  419383:	and    DWORD PTR [ecx+0x21],esi
  419386:	dec    edx
  419387:	jae    0x419325
  419389:	fiadd  DWORD PTR [ebp-0x5c]
  41938c:	or     DWORD PTR [ecx+ebx*8+0x20cd0f4b],eax
  419393:	lea    eax,[ebx+0x71]
  419396:	push   cs
  419397:	ret    0x17a7
  41939a:	jbe    0x419329
  41939c:	loopne 0x41934f
  41939e:	xchg   BYTE PTR [ebp+0x7c],dh
  4193a1:	cwde   
  4193a2:	xor    al,0x1f
  4193a4:	popa   
  4193a5:	or     bh,BYTE PTR [ebp+0x359df606]
  4193ab:	xchg   ebx,eax
  4193ac:	pop    edi
  4193ad:	mov    dl,0xb0
  4193af:	xchg   ecx,eax
  4193b0:	lds    eax,FWORD PTR [edx]
  4193b2:	icebp  
  4193b3:	shr    DWORD PTR [ecx],0xd1
  4193b6:	pop    ecx
  4193b7:	mov    ah,0xd2
  4193b9:	adc    al,0xc8
  4193bb:	lahf   
  4193bc:	xor    DWORD PTR [ecx+0x9a9ed09],esp
  4193c2:	pop    esp
  4193c3:	pushf  
  4193c4:	mov    DWORD PTR ds:[esi-0x41],ebp
  4193c8:	cwde   
  4193c9:	adc    cl,BYTE PTR [ebx+0x24835bd8]
  4193cf:	sub    eax,0x654450f8
  4193d4:	pop    eax
  4193d5:	fdiv   DWORD PTR [ebp+0x19]
  4193d8:	dec    edi
  4193d9:	mov    ebx,ebx
  4193db:	adc    cl,BYTE PTR [eax-0x36]
  4193de:	aas    
  4193df:	inc    edi
  4193e0:	ins    DWORD PTR es:[edi],dx
  4193e1:	xor    dh,dh
  4193e3:	out    0xe6,eax
  4193e5:	mov    ecx,0x20c3678c
  4193ea:	fbld   TBYTE PTR [ecx-0x74bb285c]
  4193f0:	push   edx
  4193f1:	mov    edi,0x5f8c40f4
  4193f6:	in     al,dx
  4193f7:	xor    BYTE PTR [eax+0x29e683b4],0xc2
  4193fe:	mov    dh,0x6f
  419400:	lods   eax,DWORD PTR ds:[esi]
  419401:	aad    0xe0
  419403:	push   ebp
  419404:	or     cl,BYTE PTR [ecx+0x76]
  419407:	push   ebx
  419408:	push   0x6b
  41940a:	dec    esi
  41940b:	cmp    dh,al
  41940d:	sti    
  41940e:	cli    
  41940f:	(bad)  
  419410:	sbb    cl,BYTE PTR [eax+eiz*2]
  419413:	sbb    al,0xa7
  419415:	sub    esi,eax
  419417:	xor    eax,0xe5bd2d4
  41941c:	push   eax
  41941d:	(bad)  
  41941e:	ret    
  41941f:	inc    esp
  419420:	cmc    
  419421:	mov    ch,dl
  419423:	cmp    dh,al
  419425:	sbb    DWORD PTR [edi],edi
  419427:	mov    ebp,0x37db4e15
  41942c:	arpl   WORD PTR [eax+0x7],sp
  41942f:	sub    ah,bl
  419431:	dec    ecx
  419432:	sbb    ecx,esi
  419434:	cmp    eax,0x792783cb
  419439:	jecxz  0x4193f0
  41943b:	dec    esi
  41943c:	push   edx
  41943d:	mov    al,ds:0x2601cf05
  419442:	lds    eax,FWORD PTR [ecx+ebx*1]
  419445:	iret   
  419446:	adc    BYTE PTR [esp+esi*4+0x186822d7],0x8a
  41944e:	mov    dh,0x54
  419450:	xlat   BYTE PTR ds:[ebx]
  419451:	add    al,0x81
  419453:	loope  0x41940f
  419455:	sbb    esp,eax
  419457:	neg    DWORD PTR [ecx-0x27]
  41945a:	repz mov eax,0x505e2741
  419460:	(bad)  
  419461:	lods   eax,DWORD PTR ds:[esi]
  419462:	(bad)  
  419463:	or     al,bl
  419465:	xor    al,0x4a
  419467:	in     eax,dx
  419468:	adc    eax,0x7441b24f
  41946d:	into   
  41946e:	sahf   
  41946f:	push   esi
  419470:	adc    ch,BYTE PTR [ecx-0x9]
  419473:	xor    al,0x8c
  419475:	in     eax,0x2d
  419477:	and    edx,esp
  419479:	sub    dh,BYTE PTR [eax+0x43]
  41947c:	lods   al,BYTE PTR ds:[esi]
  41947d:	clc    
  41947e:	mov    bh,0xc2
  419480:	imul   esp,DWORD PTR [ebp+0x5817620b],0xffffff8c
  419487:	pop    ds
  419488:	fld    QWORD PTR [esi]
  41948a:	push   cs
  41948b:	adc    DWORD PTR [ecx+ecx*8],ebp
  41948e:	scas   eax,DWORD PTR es:[edi]
  41948f:	push   0xd54b625b
  419494:	sbb    BYTE PTR ds:0xdff11c6f,0xd3
  41949b:	cmp    al,ah
  41949d:	push   edx
  41949e:	sub    eax,0xfa1ed781
  4194a3:	xchg   edi,eax
  4194a4:	fcom   DWORD PTR [ebx-0x20]
  4194a7:	out    0xdb,al
  4194a9:	lods   eax,DWORD PTR ds:[esi]
  4194aa:	and    al,0x7
  4194ac:	lods   al,BYTE PTR ds:[esi]
  4194ad:	inc    ebx
  4194ae:	adc    bl,BYTE PTR [ebx*1-0x5341405d]
  4194b5:	xchg   ebp,eax
  4194b6:	sbb    ebx,DWORD PTR [edx+0x57a8c5ba]
  4194bc:	or     edi,DWORD PTR [edi]
  4194be:	sbb    al,0xf4
  4194c0:	mov    dh,0x1
  4194c2:	scas   al,BYTE PTR es:[edi]
  4194c3:	inc    esi
  4194c4:	cs inc eax
  4194c6:	clc    
  4194c7:	lods   eax,DWORD PTR ds:[esi]
  4194c8:	comiss xmm4,DWORD PTR ds:0xf0003bac
  4194cf:	cmp    DWORD PTR [ecx+edi*2],ecx
  4194d2:	(bad)  
  4194d3:	pop    ss
  4194d4:	or     edx,ebp
  4194d6:	lock mov eax,0xdc910245
  4194dc:	pop    esi
  4194dd:	ret    0xfda7
  4194e0:	fdiv   st,st(0)
  4194e2:	aaa    
  4194e3:	mov    ah,0xd
  4194e5:	add    eax,0xf2603070
  4194ea:	icebp  
  4194eb:	ja     0x41954e
  4194ed:	dec    ebx
  4194ee:	jae    0x419534
  4194f0:	dec    ecx
  4194f1:	out    dx,eax
  4194f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194f3:	stc    
  4194f4:	xchg   ebp,eax
  4194f5:	jb     0x419536
  4194f7:	fdiv   st,st(3)
  4194f9:	mov    eax,ds:0x3105639d
  4194fe:	adc    esi,DWORD PTR [ebx-0x63348b33]
  419504:	or     ch,BYTE PTR [esi]
  419506:	push   eax
  419507:	jmp    0x41951e
  419509:	mov    ch,0x3e
  41950b:	lock ins BYTE PTR es:[edi],dx
  41950d:	inc    ebp
  41950e:	inc    edx
  41950f:	mov    ch,0x81
  419511:	das    
  419512:	xor    DWORD PTR [eax-0x6d],eax
  419515:	pusha  
  419516:	addr16 jmp 0x3b8:0x8cc20681
  41951e:	cwde   
  41951f:	inc    edx
  419520:	lods   eax,DWORD PTR ds:[esi]
  419521:	push   ebx
  419522:	jo     0x419558
  419524:	inc    esi
  419525:	xchg   cx,ax
  419527:	xor    bh,0x34
  41952a:	jle    0x41956d
  41952c:	adc    al,0xd1
  41952e:	jo     0x4195ac
  419530:	jns    0x419545
  419532:	push   0x19
  419534:	test   eax,0x670abf17
  419539:	inc    ebp
  41953a:	loope  0x4194e6
  41953c:	loop   0x41956d
  41953e:	sahf   
  41953f:	mov    ch,0x83
  419541:	rcr    ebx,1
  419543:	dec    esi
  419544:	aaa    
  419545:	push   cs
  419546:	ins    DWORD PTR es:[edi],dx
  419547:	sub    DWORD PTR [ebp*8+0x7a17e159],ebx
  41954e:	add    eax,0xf02be831
  419553:	int    0x81
  419555:	and    al,0x30
  419557:	push   ebp
  419558:	xor    edx,DWORD PTR [esi-0x41f22e5c]
  41955e:	in     al,dx
  41955f:	popf   
  419560:	in     eax,dx
  419561:	fst    DWORD PTR [ebp+0x523bba76]
  419567:	pop    edx
  419568:	sub    al,0x95
  41956a:	mov    esi,0xe936af1c
  41956f:	shl    DWORD PTR [eax+0x2780bba],cl
  419575:	test   BYTE PTR [eax+0x25],dh
  419578:	jmp    0x5893fd6e
  41957d:	fwait
  41957e:	popf   
  41957f:	lahf   
  419580:	scas   al,BYTE PTR es:[edi]
  419581:	dec    ax
  419583:	fld    QWORD PTR [ebp+0x1a]
  419586:	cmc    
  419587:	loop   0x41953f
  419589:	jmp    0xe03e:0xf6ea500f
  419590:	ror    BYTE PTR [ebp-0x5c17ddb8],1
  419596:	ds in  eax,0x3a
  419599:	lods   eax,DWORD PTR ds:[esi]
  41959a:	test   al,0xff
  41959c:	popa   
  41959d:	xor    al,BYTE PTR [esi-0x72]
  4195a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195a1:	scas   eax,DWORD PTR es:[edi]
  4195a2:	mov    edx,0x15004ec4
  4195a7:	enter  0x347e,0xcd
  4195ab:	xor    bl,BYTE PTR [ebx-0x6e]
  4195ae:	xchg   ebx,eax
  4195af:	push   cs
  4195b0:	dec    ebx
  4195b1:	mov    ch,0x1e
  4195b3:	and    al,0xba
  4195b5:	pop    ss
  4195b6:	(bad)
  4195b9:	dec    ebp
  4195ba:	mov    ecx,0xc57342a7
  4195bf:	test   BYTE PTR [ecx],bl
  4195c1:	fbstp  TBYTE PTR [edx-0x309542a6]
  4195c7:	xchg   ecx,eax
  4195c8:	jmp    DWORD PTR [ecx+eax*1-0x50]
  4195cc:	das    
  4195cd:	sbb    ecx,esp
  4195cf:	xchg   esp,eax
  4195d0:	repnz xlat BYTE PTR ds:[ebx]
  4195d2:	xchg   esi,eax
  4195d3:	mov    ds:0x31fc320,al
  4195d8:	push   ecx
  4195d9:	iret   
  4195da:	jbe    0x41959b
  4195dc:	sub    BYTE PTR [edx-0x4a299d2a],cl
  4195e2:	cmp    esp,ebp
  4195e4:	jno    0x41958c
  4195e6:	sub    DWORD PTR [esi+0x85c9d9f],0xcca07bb7
  4195f0:	les    edx,FWORD PTR [ecx+0x3569ec35]
  4195f6:	jecxz  0x419639
  4195f8:	mov    bh,bl
  4195fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195fb:	or     cl,ch
  4195fd:	sub    DWORD PTR [edx+0x2dc2e0db],ecx
  419603:	les    ebx,FWORD PTR [esi]
  419605:	sahf   
  419606:	or     BYTE PTR [ebp+0x50838beb],0xf1
  41960d:	mov    esp,0x54a5d65a
  419612:	repz idiv BYTE PTR [ebx-0x7cf25ca8]
  419619:	jne    0x4195e9
  41961b:	dec    ecx
  41961c:	cmp    eax,DWORD PTR [esi]
  41961e:	pop    eax
  41961f:	mov    bh,0xde
  419621:	cmp    DWORD PTR [eax],0x35599ab0
  419627:	(bad)  
  419628:	in     al,dx
  419629:	aaa    
  41962a:	add    al,0xa7
  41962c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41962d:	sti    
  41962e:	adc    eax,0xa2796188
  419633:	retf   0x65f9
  419636:	push   0x90540fe3
  41963b:	jl     0x41962b
  41963d:	pop    ebp
  41963e:	(bad)  
  41963f:	sbb    DWORD PTR [ebx],ecx
  419641:	shl    DWORD PTR gs:[ebx+0x796c1096],1
  419648:	mov    al,0xe0
  41964a:	jp     0x419622
  41964c:	xlat   BYTE PTR ds:[ebx]
  41964d:	xor    DWORD PTR [edx],eax
  41964f:	mov    bl,0xb8
  419651:	ss test eax,0xbb00b2a6
  419657:	cmp    BYTE PTR [eax-0x422b35da],0x47
  41965e:	(bad)  
  41965f:	cld    
  419660:	fist   WORD PTR [eax]
  419662:	pop    ebx
  419663:	into   
  419664:	adc    eax,0x213351a2
  419669:	dec    esp
  41966a:	xlat   BYTE PTR ds:[ebx]
  41966b:	call   0xe43e8475
  419670:	(bad)
  419673:	fsub   st,st(3)
  419675:	out    0xb7,al
  419677:	sub    dh,BYTE PTR [eax]
  419679:	fcom   DWORD PTR [esi-0x676f0816]
  41967f:	and    dh,dh
  419681:	mov    ebx,0x6275bb64
  419686:	sar    DWORD PTR [edx+0x225448aa],0x5f
  41968d:	dec    ecx
  41968e:	cmp    BYTE PTR [esi+edx*2-0x7f],0x82
  419693:	mov    ah,0x3b
  419695:	sahf   
  419696:	pcmpeqb mm0,QWORD PTR [edx+ecx*8-0x36]
  41969b:	jmp    0x41968e
  41969d:	popa   
  41969e:	mov    ebx,0x25814637
  4196a3:	cmp    eax,0xd22e5c1
  4196a8:	jno    0x419664
  4196aa:	jbe    0x419726
  4196ac:	push   ebp
  4196ad:	mov    WORD PTR [ecx],ss
  4196af:	and    ch,al
  4196b1:	cdq    
  4196b2:	retf   0x91ba
  4196b5:	ins    DWORD PTR es:[edi],dx
  4196b6:	push   0x2b
  4196b8:	les    eax,FWORD PTR [ebx+0x117fe7ec]
  4196be:	aam    0x17
  4196c0:	xchg   ah,dl
  4196c2:	and    edi,DWORD PTR [edi-0x60]
  4196c5:	mov    cs,eax
  4196c7:	pop    edi
  4196c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196c9:	cs pop ds
  4196cb:	cli    
  4196cc:	jl     0x419692
  4196ce:	or     edi,DWORD PTR [esi]
  4196d0:	leave  
  4196d1:	cmp    cl,ch
  4196d3:	mov    ecx,0xd94af6e3
  4196d8:	mul    ebp
  4196da:	mov    eax,0x5ebc4a3e
  4196df:	xchg   DWORD PTR [ecx+0x74374ccf],eax
  4196e5:	fwait
  4196e6:	imul   edi,DWORD PTR [eax],0x41a557fc
  4196ec:	test   BYTE PTR [eax-0x6b],bh
  4196ef:	jg     0x419756
  4196f1:	push   eax
  4196f2:	lods   eax,DWORD PTR ds:[esi]
  4196f3:	pop    ebp
  4196f4:	stc    
  4196f5:	push   ds
  4196f6:	stos   DWORD PTR es:[edi],eax
  4196f7:	jle    0x419680
  4196f9:	jg     0x41974e
  4196fb:	mov    ebp,0x93a86e93
  419700:	mov    eax,0xd73ed6e5
  419705:	addps  xmm2,XMMWORD PTR [ebp+0x7]
  419709:	int3   
  41970a:	xor    DWORD PTR [ecx],eax
  41970c:	sbb    edi,DWORD PTR [edx+0x664b79b9]
  419712:	adc    ecx,ebp
  419714:	scas   al,BYTE PTR es:[edi]
  419715:	xor    DWORD PTR [esi],esi
  419717:	jle    0x4196d3
  419719:	adc    eax,DWORD PTR [edi+ebp*4-0x79da8eb]
  419720:	dec    ebx
  419721:	mov    eax,0xadfad637
  419726:	ins    DWORD PTR es:[edi],dx
  419727:	(bad)  
  419728:	cmp    BYTE PTR [ebp-0x14f2610b],ch
  41972e:	icebp  
  41972f:	push   eax
  419730:	add    BYTE PTR [ecx],al
  419732:	icebp  
  419733:	mov    esi,0xf030a493
  419738:	dec    ecx
  41973a:	es ret 
  41973c:	mov    bl,0x5d
  41973e:	jecxz  0x419755
  419740:	cmp    BYTE PTR [edi+ebx*4-0x3bf1dc4a],dh
  419747:	dec    ebp
  419748:	add    BYTE PTR [ecx+eiz*4+0xbf9ee37],0x3a
  419750:	rol    BYTE PTR [ecx+ecx*2+0x19],0xd6
  419755:	sbb    DWORD PTR [ebx+0x3dadbbdb],edi
  41975b:	xchg   BYTE PTR [ecx+0x4ce2a20c],bl
  419761:	inc    edi
  419762:	ins    DWORD PTR es:[edi],dx
  419763:	mov    eax,ds:0xeeca2b4c
  419768:	test   eax,0x39ee8aac
  41976d:	jp     0x41978d
  41976f:	aam    0x51
  419771:	les    esi,FWORD PTR [esi+0x4b]
  419774:	add    eax,0x471b8b9
  419779:	and    DWORD PTR [edx+0x6f],ebp
  41977c:	xor    esi,esp
  41977e:	retf   0xa547
  419781:	int3   
  419782:	add    al,0xc1
  419784:	add    DWORD PTR [eax+0x6c10c870],edx
  41978a:	pusha  
  41978b:	ficom  WORD PTR [ecx-0x27f4fca9]
  419791:	pop    ebp
  419792:	xor    DWORD PTR [ebx],ebx
  419794:	push   edx
  419795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419796:	jo     0x4197d2
  419798:	add    al,0xb5
  41979a:	loope  0x4197ac
  41979c:	lahf   
  41979d:	arpl   WORD PTR [esi],sp
  41979f:	xchg   esi,esi
  4197a1:	gs mov cl,0x3b
  4197a4:	dec    ebp
  4197a5:	mov    ds,ebp
  4197a7:	mov    ah,0x6a
  4197a9:	mov    ds:0x953e3e98,eax
  4197ae:	push   esp
  4197af:	les    ebp,FWORD PTR [esp+ebx*4]
  4197b2:	cmp    eax,0xb6816353
  4197b7:	mov    esi,0x95e27b20
  4197bc:	xchg   esp,eax
  4197bd:	test   eax,0xf0c53f53
  4197c2:	inc    eax
  4197c3:	cs in  eax,0xfb
  4197c6:	fisub  DWORD PTR [ebx+0x7aa881a5]
  4197cc:	test   DWORD PTR [edi+0x7e],ebp
  4197cf:	inc    esp
  4197d0:	mov    ebx,DWORD PTR [edi-0x92f630e]
  4197d6:	adc    al,0xa4
  4197d8:	push   ebp
  4197d9:	xchg   edi,eax
  4197da:	aad    0x1
  4197dc:	sub    DWORD PTR [ecx-0x3b],eax
  4197df:	repnz sbb eax,0x7daf2347
  4197e5:	pop    eax
  4197e6:	fmul   st(4),st
  4197e8:	xor    al,0x5e
  4197ea:	or     edi,ecx
  4197ec:	xchg   ebx,eax
  4197ed:	push   esp
  4197ee:	mov    esp,es
  4197f0:	xchg   esi,eax
  4197f1:	inc    eax
  4197f2:	dec    esp
  4197f3:	and    eax,0xeb38a2a8
  4197f8:	out    dx,eax
  4197f9:	cmp    cl,dl
  4197fb:	test   ebp,esi
  4197fd:	jb     0x4197f4
  4197ff:	jno    0x419793
  419801:	(bad)  [edx]
  419803:	jmp    0x419797
  419805:	fimul  DWORD PTR [edx]
  419807:	mov    al,ds:0x41b74af8
  41980c:	stc    
  41980d:	or     eax,0x898cfa57
  419812:	popa   
  419813:	stos   DWORD PTR es:[edi],eax
  419814:	test   DWORD PTR [esp+edx*8-0x758ce872],edi
  41981b:	sbb    bl,bl
  41981d:	mov    eax,DWORD PTR [esi-0x49652a5a]
  419823:	cmp    al,0x75
  419825:	aas    
  419826:	fisub  DWORD PTR [ecx+0x4e]
  419829:	cmp    bh,BYTE PTR [edi+0x4a]
  41982c:	and    BYTE PTR [ecx+0x225fa875],dh
  419832:	and    BYTE PTR [edi-0x3e],cl
  419835:	or     bl,BYTE PTR [ebp-0x2261721a]
  41983b:	loop   0x4197f7
  41983d:	adc    cl,bl
  41983f:	push   ebp
  419840:	mov    edi,0x12aabd0c
  419845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419846:	cmp    al,0x83
  419848:	xchg   ecx,edx
  41984a:	dec    ebp
  41984b:	in     al,dx
  41984c:	cdq    
  41984d:	cs push es
  41984f:	test   BYTE PTR [edi+0x17ba439a],ch
  419855:	shr    edx,0xa
  419858:	and    cl,dh
  41985a:	xchg   ebx,eax
  41985b:	jo     0x4197f3
  41985d:	mov    ah,0x7b
  41985f:	xor    eax,0x1d038dd9
  419864:	cs out 0x5,al
  419867:	add    al,0xfa
  419869:	sbb    DWORD PTR [eax+ebx*2-0x6b],edx
  41986d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41986e:	clc    
  41986f:	push   es
  419870:	inc    ecx
  419871:	xchg   ebp,eax
  419872:	push   esp
  419873:	gs pop esi
  419875:	aam    0x8d
  419877:	jae    0x4198a2
  419879:	cmp    ch,0xe7
  41987c:	mov    cx,0xf3
  419880:	jmp    0xfbe83031
  419885:	retf   
  419886:	cmp    eax,0xf196f92b
  41988b:	out    dx,eax
  41988c:	sub    esp,DWORD PTR [edx-0x7cf8dc0f]
  419892:	call   0xc43c:0x437b1c78
  419899:	inc    ebx
  41989a:	ds mov al,0x50
  41989d:	pop    ebx
  41989e:	and    dl,BYTE PTR [ecx+0x0]
  4198a1:	nop    DWORD PTR [ecx*2+0x584233d4]
  4198a9:	retf   0xb7e5
  4198ac:	test   BYTE PTR [esi+edi*4-0x5b98bb74],0x34
  4198b4:	cmp    ch,BYTE PTR [edi-0x35163129]
  4198ba:	(bad)  
  4198bb:	cmp    dh,BYTE PTR [eax-0x2d]
  4198be:	and    al,0x42
  4198c0:	or     edi,DWORD PTR [edi]
  4198c2:	out    dx,eax
  4198c3:	pop    ds
  4198c4:	(bad)  
  4198c5:	retf   0x5975
  4198c8:	scas   eax,DWORD PTR es:[edi]
  4198c9:	xor    esi,DWORD PTR [edi]
  4198cb:	cmp    BYTE PTR [esi-0x77],bl
  4198ce:	arpl   WORD PTR [esi],sp
  4198d0:	push   ss
  4198d1:	adc    eax,0x7458c4ca
  4198d6:	xchg   esi,eax
  4198d7:	jmp    0x5473ca6a
  4198dc:	fistp  QWORD PTR [eax+ecx*8+0x3560e9f]
  4198e3:	sbb    ch,bl
  4198e5:	popf   
  4198e6:	add    DWORD PTR [esi-0x5b],esi
  4198e9:	outs   dx,BYTE PTR ds:[esi]
  4198ea:	add    al,0x82
  4198ec:	daa    
  4198ed:	pusha  
  4198ee:	push   ebx
  4198ef:	push   ecx
  4198f0:	and    al,0xd4
  4198f2:	loop   0x419929
  4198f4:	push   0xffffff94
  4198f6:	xor    cl,0xd8
  4198f9:	fxch   st(2)
  4198fb:	out    0x76,al
  4198fd:	sbb    al,0x19
  4198ff:	sub    eax,0x5e623a7d
  419904:	stos   DWORD PTR es:[edi],eax
  419905:	into   
  419906:	push   cs
  419907:	dec    esp
  419908:	and    BYTE PTR [edx+0x76],bh
  41990b:	pop    ds
  41990c:	sbb    ch,bh
  41990e:	push   es
  41990f:	sbb    BYTE PTR [ebp-0xdbf0906],dl
  419915:	aam    0xb5
  419917:	imul   eax,DWORD PTR [esi+0x74d64a0f],0xa0ac11d9
  419921:	xchg   ecx,eax
  419922:	out    0xb9,eax
  419924:	adc    eax,0x6bf75bda
  419929:	mov    al,0xe9
  41992b:	adc    eax,0x9f2778c7
  419930:	mov    edx,0x58abb14
  419935:	das    
  419936:	call   0xaf026dff
  41993b:	shl    DWORD PTR [ecx],0xec
  41993e:	cmp    eax,DWORD PTR [ecx+0x201b4f8d]
  419944:	aam    0x2a
  419946:	adc    ah,BYTE PTR [esi+eiz*8-0x11552ee8]
  41994d:	sbb    ebp,ebp
  41994f:	mov    bh,BYTE PTR [esi+0x3ad4e7a5]
  419955:	inc    edx
  419956:	sbb    BYTE PTR ds:0x9c2d39c,bh
  41995c:	cmp    DWORD PTR [ecx+0x3a],0x4db1b7f4
  419963:	loop   0x4199c0
  419965:	ja     0x419916
  419967:	out    dx,al
  419968:	or     ecx,ebp
  41996a:	(bad)  
  41996b:	fcomi  st,st(6)
  41996d:	in     eax,0xc1
  41996f:	repnz iret 
  419971:	out    dx,eax
  419972:	test   al,0x4c
  419974:	sbb    ebp,DWORD PTR [eax]
  419976:	dec    edi
  419977:	pop    es
  419978:	neg    BYTE PTR [edi]
  41997a:	jecxz  0x419915
  41997c:	out    0xe5,eax
  41997e:	push   ss
  41997f:	iret   
  419980:	call   0x3733:0xeaee2cad
  419987:	mov    ecx,0xddea4407
  41998c:	mov    eax,ds:0x21ed933b
  419991:	scas   al,BYTE PTR es:[edi]
  419992:	out    dx,al
  419993:	hlt    
  419994:	adc    DWORD PTR [ecx+0xf],edi
  419997:	pop    edi
  419998:	mov    eax,ds:0x8350fb97
  41999d:	push   ecx
  41999e:	pop    esp
  41999f:	dec    esi
  4199a0:	jl     0x419a06
  4199a2:	dec    ecx
  4199a3:	xchg   esp,eax
  4199a4:	jl     0x419a20
  4199a6:	test   al,0x1b
  4199a8:	pop    esi
  4199a9:	mov    dl,0x0
  4199ab:	adc    al,BYTE PTR [edi]
  4199ad:	loope  0x419969
  4199af:	jl     0x41997a
  4199b1:	jb     0x4199f0
  4199b3:	rcl    DWORD PTR [eax-0x1f],0xfb
  4199b7:	icebp  
  4199b8:	shl    DWORD PTR [ecx],1
  4199ba:	jecxz  0x419995
  4199bc:	push   ss
  4199bd:	mov    ecx,0xfcf63c90
  4199c2:	rol    BYTE PTR [edi],1
  4199c4:	ja     0x4199a8
  4199c6:	(bad)  
  4199c7:	cwde   
  4199c8:	xor    esi,DWORD PTR [ebp+ecx*1-0x3c]
  4199cc:	mov    cs,ebp
  4199ce:	aad    0xfc
  4199d0:	jg     0x4199a0
  4199d2:	sub    dl,0x54
  4199d5:	sahf   
  4199d6:	pop    ebx
  4199d7:	jmp    0x7cff:0xf494db42
  4199de:	ds mov al,0x9d
  4199e1:	jg     0x419a01
  4199e3:	pop    esp
  4199e4:	jle    0x419997
  4199e6:	scas   eax,DWORD PTR es:[edi]
  4199e7:	imul   edi,DWORD PTR [edx+0x43],0x18
  4199eb:	cli    
  4199ec:	add    edi,eax
  4199ee:	mov    esp,0xc5e351f4
  4199f3:	inc    edx
  4199f4:	hlt    
  4199f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199f6:	xor    BYTE PTR [ebx+0x11171e1e],0x61
  4199fd:	xor    al,0x71
  4199ff:	mov    al,ds:0x7ef0e08a
  419a04:	shl    BYTE PTR [eax+0x2fcbb96d],1
  419a0a:	popf   
  419a0b:	mov    BYTE PTR [ecx],cl
  419a0d:	ror    BYTE PTR [eax+0x70],0x44
  419a11:	aam    0x20
  419a13:	mov    DWORD PTR [edi],edi
  419a15:	test   BYTE PTR [edi+edi*1+0x6d],cl
  419a19:	ret    
  419a1a:	and    DWORD PTR [esi],ebp
  419a1c:	cmp    eax,0xca02b9bb
  419a21:	ja     0x419a1a
  419a23:	sub    eax,0x26bb8760
  419a28:	jae    0x419a03
  419a2a:	xchg   ebx,eax
  419a2b:	mov    al,ds:0xf5f45624
  419a30:	ja     0x4199cd
  419a32:	add    eax,0xda89aac2
  419a37:	loope  0x419a02
  419a39:	in     al,dx
  419a3a:	pusha  
  419a3b:	adc    bh,al
  419a3d:	jg     0x419a10
  419a3f:	xlat   BYTE PTR ds:[ebx]
  419a40:	jge    0x419aa6
  419a42:	imul   edi
  419a44:	push   ecx
  419a45:	test   eax,0xea5b134a
  419a4a:	imul   ecx,DWORD PTR [ecx+0x2d],0x2c
  419a4e:	pusha  
  419a4f:	add    DWORD PTR [ecx+0x53c6d9ef],edi
  419a55:	and    DWORD PTR [eax+ecx*8+0x14],ebp
  419a59:	xor    dh,ch
  419a5b:	push   ss
  419a5c:	je     0x419acc
  419a5e:	push   0x66810fb3
  419a63:	arpl   WORD PTR gs:[ecx+0x14],bp
  419a67:	shr    DWORD PTR [edx],0x2e
  419a6a:	push   ebp
  419a6b:	je     0x419ab3
  419a6d:	pusha  
  419a6e:	out    0x44,eax
  419a70:	pop    eax
  419a71:	mov    ebp,0x912f8dad
  419a76:	ror    BYTE PTR ds:0x87e40b67,1
  419a7c:	pushf  
  419a7d:	and    DWORD PTR [ebp-0x58],edi
  419a80:	mov    eax,ds:0xd86c42ac
  419a85:	popf   
  419a86:	mov    eax,ds:0xa1c6c3f6
  419a8b:	and    bh,BYTE PTR [ecx]
  419a8d:	xor    ch,BYTE PTR [ecx-0x56ed1f1]
  419a93:	jl     0x419a86
  419a95:	jmp    0x1caffd4
  419a9a:	sbb    bh,BYTE PTR [eax+0x58d28171]
  419aa0:	xor    DWORD PTR [ebx],0xffffffcf
  419aa3:	loope  0x419acf
  419aa5:	lahf   
  419aa6:	cdq    
  419aa7:	adc    dh,bl
  419aa9:	push   ebp
  419aaa:	nop
  419aab:	loopne 0x419ae0
  419aad:	sub    dh,dl
  419aaf:	pop    esp
  419ab0:	dec    ebp
  419ab1:	rcr    DWORD PTR [esi+0x4d],cl
  419ab4:	loopne 0x419aeb
  419ab6:	dec    eax
  419ab7:	pop    ds
  419ab8:	cli    
  419ab9:	adc    eax,0xdf39b72d
  419abe:	add    al,BYTE PTR [edi-0x613b334d]
  419ac4:	xor    ebp,esi
  419ac6:	sub    al,0xea
  419ac8:	je     0x419aab
  419aca:	fwait
  419acb:	push   0x34
  419acd:	xor    ah,BYTE PTR [edi-0x14]
  419ad0:	cmp    dh,ch
  419ad2:	mov    edx,0x2f5b63da
  419ad7:	dec    ebx
  419ad8:	inc    edx
  419ad9:	neg    BYTE PTR [esi+0x15]
  419adc:	imul   eax,DWORD PTR [ebp+0x1b],0x9e3a8c69
  419ae3:	into   
  419ae4:	sub    esi,0xf6103970
  419aea:	cmp    eax,0x5730553f
  419aef:	sti    
  419af0:	cmp    DWORD PTR [esi+0x38fe4b45],0x1a4637e3
  419afa:	ror    BYTE PTR [ebp-0x16],cl
  419afd:	stos   BYTE PTR es:[edi],al
  419afe:	in     al,0x2f
  419b00:	out    0x77,al
  419b02:	popf   
  419b03:	cli    
  419b04:	test   ebx,ecx
  419b06:	push   ebx
  419b07:	sub    BYTE PTR [esi-0x792ab57b],ch
  419b0d:	test   eax,0x44244f0d
  419b12:	ins    BYTE PTR es:[di],dx
  419b14:	mov    ch,0xea
  419b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b17:	pop    es
  419b18:	or     ah,BYTE PTR [edi+0x1190836d]
  419b1e:	jle    0x419b72
  419b20:	inc    edi
  419b21:	shl    BYTE PTR ds:0xc5999ea5,cl
  419b27:	mov    eax,ds:0x32d8ea3e
  419b2c:	xchg   edx,eax
  419b2d:	outs   dx,DWORD PTR ds:[esi]
  419b2e:	inc    eax
  419b2f:	dec    eax
  419b30:	inc    ebx
  419b31:	into   
  419b32:	in     al,dx
  419b33:	(bad)
  419b37:	hlt    
  419b38:	jns    0x419ae1
  419b3a:	xlat   BYTE PTR ds:[ebx]
  419b3b:	aad    0xa5
  419b3d:	pop    ebx
  419b3e:	shl    BYTE PTR [ecx+0x4e],1
  419b41:	cld    
  419b42:	adc    ebp,DWORD PTR [ecx+esi*1-0x35]
  419b46:	daa    
  419b47:	pusha  
  419b48:	test   al,0xfe
  419b4a:	xchg   ebx,eax
  419b4b:	int    0x1e
  419b4d:	mov    esi,0x4e3a8880
  419b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b53:	jecxz  0x419b4a
  419b55:	popf   
  419b56:	jb     0x419b08
  419b58:	enter  0xd394,0xa1
  419b5c:	shl    ah,1
  419b5e:	fwait
  419b5f:	mov    esi,0xbb3562c
  419b64:	test   esi,ecx
  419b66:	and    esi,DWORD PTR fs:[esi+edx*1+0x69]
  419b6b:	cmp    ebp,edi
  419b6d:	mov    ebp,0x506f6fbb
  419b72:	or     eax,0x7c749be3
  419b77:	bound  ebp,QWORD PTR [ebx-0x51]
  419b7a:	push   esp
  419b7b:	sub    al,0x2f
  419b7d:	cmc    
  419b7e:	xlat   BYTE PTR ds:[ebx]
  419b7f:	or     al,0x79
  419b81:	fnsave [ebx+0x504dc79f]
  419b87:	sbb    DWORD PTR [eax+0x64],ebx
  419b8a:	call   0x59b993ef
  419b8f:	ja     0x419bb6
  419b91:	inc    edx
  419b92:	loopne 0x419b73
  419b94:	into   
  419b95:	aaa    
  419b96:	mov    cl,0x1a
  419b98:	jg     0x419bb1
  419b9a:	cmp    bh,BYTE PTR [edx]
  419b9c:	outs   dx,DWORD PTR ds:[esi]
  419b9d:	adc    dh,al
  419b9f:	mov    ah,0xc2
  419ba1:	xchg   esi,eax
  419ba2:	enter  0xee02,0x19
  419ba6:	jb     0x419b52
  419ba8:	stos   DWORD PTR es:[edi],eax
  419ba9:	mov    es,esp
  419bab:	hlt    
  419bac:	out    dx,eax
  419bad:	gs jb  0x419c03
  419bb0:	(bad)  [ecx+0x1f]
  419bb3:	pop    ebp
  419bb4:	test   al,0xbf
  419bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bb8:	jno    0x419b88
  419bba:	xlat   BYTE PTR ds:[ebx]
  419bbb:	push   ss
  419bbc:	sbb    al,0x59
  419bbe:	push   esi
  419bbf:	push   ebx
  419bc0:	rcl    BYTE PTR [ebx+ebp*2+0x79bedd8e],cl
  419bc7:	(bad)  
  419bc8:	sub    ebx,DWORD PTR [ebx+0x7d]
  419bcb:	dec    edx
  419bcc:	push   0xffffff9d
  419bce:	sbb    DWORD PTR [edi+esi*8+0x4709b5],ebx
  419bd5:	mov    dl,0x84
  419bd7:	pusha  
  419bd8:	inc    edx
  419bd9:	fs in  al,0x74
  419bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bdd:	lods   eax,DWORD PTR ds:[esi]
  419bde:	loope  0x419c06
  419be0:	ret    
  419be1:	jns    0x419b8a
  419be3:	xchg   edi,eax
  419be4:	sahf   
  419be5:	dec    esp
  419be6:	popa   
  419be7:	mov    ebp,DWORD PTR [edi+esi*8]
  419bea:	jmp    DWORD PTR [edx]
  419bec:	iret   
  419bed:	in     al,0x37
  419bef:	test   DWORD PTR [ebx+ebx*1],0x17b6d448
  419bf6:	aas    
  419bf7:	popa   
  419bf8:	dec    edi
  419bf9:	jecxz  0x419bc4
  419bfb:	arpl   WORD PTR [edi-0x6d8d763a],si
  419c01:	inc    ecx
  419c02:	cmp    al,0x8e
  419c04:	fs das 
  419c06:	push   0xffffffc2
  419c08:	mov    al,ds:0xb115a9fc
  419c0d:	jp     0x419c0b
  419c0f:	ror    ecx,cl
  419c11:	addr16 shr esi,cl
  419c14:	scas   eax,DWORD PTR es:[edi]
  419c15:	mov    esi,0x260932dc
  419c1a:	lahf   
  419c1b:	mov    dh,0xc4
  419c1d:	(bad)  
  419c1e:	call   0xfb3f:0xcd37fe85
  419c25:	dec    ecx
  419c26:	stos   BYTE PTR es:[edi],al
  419c27:	scas   eax,DWORD PTR es:[edi]
  419c28:	ds pusha 
  419c2a:	(bad)  
  419c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c2c:	push   ebx
  419c2d:	push   0xc4fec7a9
  419c32:	add    edx,DWORD PTR [edx-0x7f7286e1]
  419c38:	pinsrw mm6,ebp,0xf7
  419c3c:	push   esp
  419c3d:	adc    BYTE PTR [esi-0x37],0x3a
  419c41:	sub    al,0x3a
  419c43:	jbe    0x419bfa
  419c45:	out    0x91,al
  419c47:	sar    BYTE PTR [edi],1
  419c49:	push   ds
  419c4a:	js     0x419c9f
  419c4c:	push   ss
  419c4d:	pop    eax
  419c4e:	dec    ebx
  419c4f:	and    DWORD PTR [eax-0x2260ef62],eax
  419c55:	or     al,0x17
  419c57:	hlt    
  419c58:	(bad)  
  419c59:	or     eax,0x8aa57029
  419c5e:	adc    eax,0xd767f4f0
  419c63:	push   eax
  419c64:	add    eax,0xf1e79a78
  419c69:	inc    ebp
  419c6a:	dec    edi
  419c6b:	lock stc 
  419c6d:	hlt    
  419c6e:	and    eax,0xc4a9995d
  419c73:	push   edi
  419c74:	sub    eax,0xd62108c3
  419c79:	inc    esi
  419c7a:	int    0x59
  419c7c:	aas    
  419c7d:	je     0x419cf0
  419c7f:	xchg   ebp,eax
  419c80:	or     ebp,ecx
  419c82:	jb     0x419c1c
  419c84:	mov    bl,0xba
  419c86:	scas   eax,DWORD PTR es:[edi]
  419c87:	push   ds
  419c88:	inc    esp
  419c89:	mov    bh,0xdb
  419c8b:	push   ebx
  419c8c:	mov    BYTE PTR [esi],bh
  419c8e:	push   esi
  419c8f:	adc    eax,0x5d5d0f42
  419c94:	retf   0x3c5e
  419c97:	cmp    al,0x80
  419c99:	lahf   
  419c9a:	mov    al,ds:0xedfe3445
  419c9f:	cmp    al,0xa9
  419ca1:	ret    0xf072
  419ca4:	add    al,0x13
  419ca6:	mov    al,ds:0xa21a7220
  419cab:	jb     0x419c7b
  419cad:	fistp  QWORD PTR [edi-0x32136a5c]
  419cb3:	dec    esp
  419cb4:	cmp    eax,0x52c89993
  419cb9:	jp     0x419d09
  419cbb:	popf   
  419cbc:	pop    ebx
  419cbd:	stos   BYTE PTR es:[edi],al
  419cbe:	sub    al,0x9f
  419cc0:	cmp    eax,0x4533f284
  419cc5:	pop    ss
  419cc6:	loop   0x419ca0
  419cc8:	jmp    0x184e01a2
  419ccd:	nop
  419cce:	sub    DWORD PTR [ebp+eiz*4-0x33],esi
  419cd2:	add    eax,0x4b2b9f62
  419cd7:	je     0x419ceb
  419cd9:	shl    bl,1
  419cdb:	adc    DWORD PTR [ebx+0x6b],edx
  419cde:	test   BYTE PTR [ebx],bl
  419ce0:	adc    cl,bl
  419ce2:	inc    ecx
  419ce3:	mov    edi,0xcc745df9
  419ce8:	ins    DWORD PTR es:[edi],dx
  419ce9:	aad    0xe6
  419ceb:	shl    BYTE PTR [edx+0x4],1
  419cee:	repnz shl DWORD PTR [eax],cl
  419cf1:	adc    BYTE PTR [ebp-0x72867deb],ch
  419cf7:	lods   al,BYTE PTR ds:[esi]
  419cf8:	xrelease xchg BYTE PTR [edi-0xb],ch
  419cfc:	pop    ebx
  419cfd:	hlt    
  419cfe:	div    DWORD PTR [eax]
  419d00:	stos   DWORD PTR es:[edi],eax
  419d01:	or     edi,DWORD PTR ds:0xeef74afe
  419d07:	fild   DWORD PTR [eax+edx*1+0x2f]
  419d0b:	adc    DWORD PTR [esi+0x1cdb0b29],eax
  419d11:	mov    BYTE PTR [edi-0x60],0x5f
  419d15:	mov    ebx,0x15be322f
  419d1a:	daa    
  419d1b:	mov    bl,BYTE PTR [ecx+0x19]
  419d1e:	cmp    dl,cl
  419d20:	add    esp,DWORD PTR [edi-0x1]
  419d23:	call   0x8049ea2e
  419d28:	ret    0x687
  419d2b:	push   esp
  419d2c:	rcl    ebx,1
  419d2e:	inc    eax
  419d2f:	dec    eax
  419d30:	jnp    0x419d68
  419d32:	push   cs
  419d33:	outs   dx,DWORD PTR ds:[esi]
  419d34:	sbb    ah,dh
  419d36:	cld    
  419d37:	lods   eax,DWORD PTR ds:[esi]
  419d38:	mov    ch,0xc4
  419d3a:	sbb    BYTE PTR [edx+0x2c9eaa61],bh
  419d40:	sbb    al,0xc1
  419d42:	pop    esp
  419d43:	cmp    esp,esp
  419d45:	test   ecx,esi
  419d47:	pop    ss
  419d48:	aaa    
  419d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d4a:	push   ebp
  419d4b:	call   0x54b160bd
  419d50:	pop    ss
  419d51:	xor    al,0xe3
  419d53:	xlat   BYTE PTR ds:[ebx]
  419d54:	fild   WORD PTR [ebp-0x4e]
  419d57:	pop    es
  419d58:	out    dx,eax
  419d59:	scas   al,BYTE PTR es:[edi]
  419d5a:	out    dx,eax
  419d5b:	or     BYTE PTR [edx-0x3d],al
  419d5e:	lods   al,BYTE PTR ds:[esi]
  419d5f:	pop    es
  419d60:	mov    esi,0x2cfc2802
  419d65:	sub    al,0xd7
  419d67:	xchg   al,ah
  419d69:	inc    esi
  419d6a:	xor    DWORD PTR [esp+esi*8+0x7a],edx
  419d6e:	xchg   esp,eax
  419d6f:	dec    ebx
  419d70:	mov    cl,0x6b
  419d72:	xlat   BYTE PTR ds:[ebx]
  419d73:	jecxz  0x419dc9
  419d75:	ret    0x9e18
  419d78:	sub    esi,edx
  419d7a:	dec    esi
  419d7b:	gs pop es
  419d7d:	into   
  419d7e:	cmp    eax,0x3e51c006
  419d83:	mov    al,ds:0x936e792
  419d88:	das    
  419d89:	ins    BYTE PTR es:[edi],dx
  419d8a:	cmp    eax,DWORD PTR [edx-0x5c680570]
  419d90:	fistp  DWORD PTR [esi+0x65]
  419d93:	jl     0x419dd3
  419d95:	push   eax
  419d96:	sub    al,0x1e
  419d98:	aad    0x73
  419d9a:	cld    
  419d9b:	fst    st(6)
  419d9d:	jmp    0x105b886f
  419da2:	popf   
  419da3:	popa   
  419da4:	jmp    0x464:0x3fd20da3
  419dab:	stc    
  419dac:	js     0x419e16
  419dae:	xchg   BYTE PTR [edi+0x7d],dh
  419db1:	bound  ecx,QWORD PTR [edx+0x1]
  419db4:	jl     0x419dc8
  419db6:	adc    al,0x30
  419db8:	ja     0x419d3b
  419dba:	pop    edx
  419dbb:	jnp    0x419db9
  419dbd:	adc    al,0xfe
  419dbf:	or     eax,0x4bb01603
  419dc4:	mov    ds:0xbe91ec6f,eax
  419dc9:	shl    DWORD PTR [ecx+0x2e],0xea
  419dcd:	push   esp
  419dce:	div    BYTE PTR [edx]
  419dd0:	(bad)
  419dd3:	test   BYTE PTR [eax-0xd108323],cl
  419dd9:	xchg   ecx,eax
  419dda:	repnz add DWORD PTR [ebx+0x475a0155],esp
  419de1:	sbb    eax,0x941a1cf
  419de6:	mov    BYTE PTR [ecx+0x78],al
  419de9:	adc    eax,0x810242af
  419dee:	mov    dl,0x77
  419df0:	and    DWORD PTR [edi-0x310cdb52],ecx
  419df6:	popa   
  419df7:	lock loopne 0x419e62
  419dfa:	mov    al,ds:0x77089007
  419dff:	call   0x5af05737
  419e04:	or     al,0x2a
  419e06:	jno    0x419e71
  419e08:	test   eax,0x48f9845b
  419e0d:	xchg   edi,eax
  419e0e:	loope  0x419e49
  419e10:	sub    eax,0x1be40e2
  419e15:	rol    ecx,cl
  419e17:	push   edi
  419e18:	xor    al,0x47
  419e1a:	and    al,0xfd
  419e1c:	loop   0x419e14
  419e1e:	sti    
  419e1f:	hlt    
  419e20:	lock enter 0x34a0,0x5f
  419e25:	je     0x419e1c
  419e27:	pop    edi
  419e28:	mov    edx,ss
  419e2a:	(bad)  
  419e2b:	div    DWORD PTR [edx-0xd]
  419e2e:	scas   al,BYTE PTR es:[edi]
  419e2f:	add    BYTE PTR [edi+0x2c7cf0e9],cl
  419e35:	jbe    0x419df9
  419e37:	sbb    eax,0xa952175e
  419e3c:	push   ds
  419e3d:	out    0x19,eax
  419e3f:	mov    esp,0x34a9799f
  419e44:	(bad)  
  419e46:	out    0xef,al
  419e48:	adc    edx,eax
  419e4a:	and    eax,0xc119977e
  419e4f:	push   edx
  419e50:	cmp    al,0x45
  419e52:	jecxz  0x419ea1
  419e54:	add    BYTE PTR [eax+0x607954ac],0xce
  419e5b:	xlat   BYTE PTR ds:[ebx]
  419e5c:	repnz xor edi,DWORD PTR [esi+0x56]
  419e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e61:	push   0xc126da85
  419e66:	pop    esi
  419e67:	mov    al,0xf0
  419e69:	adc    BYTE PTR [edx+0xc],dh
  419e6c:	pop    ebp
  419e6d:	stos   DWORD PTR es:[edi],eax
  419e6e:	aaa    
  419e6f:	ins    DWORD PTR es:[edi],dx
  419e70:	mov    al,0xd1
  419e72:	xor    al,0x20
  419e74:	cli    
  419e75:	jge    0x419ee1
  419e77:	nop
  419e78:	add    edx,DWORD PTR ds:0x753a854c
  419e7e:	push   esi
  419e7f:	sub    BYTE PTR [esi-0x69ca3c1],0xf3
  419e86:	mov    eax,0xf82a87c3
  419e8b:	fcom   QWORD PTR [ecx-0xa078301]
  419e91:	xchg   esi,eax
  419e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e93:	stc    
  419e94:	cdq    
  419e95:	xchg   ch,dl
  419e97:	dec    esi
  419e98:	idiv   bl
  419e9a:	mov    BYTE PTR [eax],dh
  419e9c:	mov    al,0x72
  419e9e:	(bad)  
  419e9f:	jl     0x419e43
  419ea1:	imul   ebp,DWORD PTR [esi-0x44],0x2e
  419ea5:	xchg   edx,eax
  419ea6:	rcl    DWORD PTR [edx-0x5d],1
  419ea9:	sti    
  419eaa:	iret   
  419eab:	jmp    0xa6b3e95a
  419eb0:	ds sub ebp,edi
  419eb3:	jge    0x419ee2
  419eb5:	jno    0x419ecb
  419eb7:	ins    DWORD PTR es:[edi],dx
  419eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eba:	xor    eax,0xa58fc3af
  419ebf:	jbe    0x419e8e
  419ec1:	push   edx
  419ec2:	inc    esp
  419ec3:	imul   edx,DWORD PTR [eax+0x6],0xffffffb4
  419ec7:	or     ah,al
  419ec9:	in     al,dx
  419eca:	imul   ebx,DWORD PTR [ebp+edx*1+0x31],0x1e0257ec
  419ed2:	enter  0x8346,0x37
  419ed6:	mov    bh,0x85
  419ed8:	imul   ecx,ebp,0xdae343c6
  419ede:	lea    esp,[ebp+edi*1-0x71]
  419ee2:	cmp    al,0xdc
  419ee4:	jno    0x419e68
  419ee6:	inc    ecx
  419ee7:	and    BYTE PTR [edx],cl
  419ee9:	bound  ebp,QWORD PTR ds:0x134205f0
  419eef:	loop   0x419eda
  419ef1:	arpl   WORD PTR [edi-0x3d],sp
  419ef4:	add    dl,ah
  419ef6:	bsr    esp,edx
  419ef9:	das    
  419efa:	mov    ah,BYTE PTR ds:0xfd3b76e
  419f00:	sbb    ah,dh
  419f02:	lahf   
  419f03:	in     eax,0x4f
  419f05:	lea    ecx,[ebp-0x76c21f6e]
  419f0b:	sahf   
  419f0c:	or     BYTE PTR [esi-0x35],cl
  419f0f:	nop
  419f10:	xchg   esp,eax
  419f11:	loop   0x419f78
  419f13:	adc    esp,esi
  419f15:	mov    al,0x9a
  419f17:	and    ebx,edi
  419f19:	scas   eax,DWORD PTR es:[edi]
  419f1a:	xchg   ebp,eax
  419f1b:	dec    esi
  419f1c:	mov    ?,WORD PTR [edi+0x6df3ee14]
  419f22:	xchg   edx,eax
  419f23:	fmul   QWORD PTR [edi-0x4c]
  419f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f27:	fist   WORD PTR [ebx+ebx*2+0x13dcbfe6]
  419f2e:	test   BYTE PTR [edx+0x39],dl
  419f31:	lahf   
  419f32:	js     0x419f03
  419f34:	fisttp WORD PTR [edi-0x5948457]
  419f3a:	ror    BYTE PTR [edi+0x5a326966],cl
  419f40:	lods   eax,DWORD PTR ds:[esi]
  419f41:	push   ss
  419f42:	sbb    BYTE PTR [ebp-0x17a9c0d5],al
  419f48:	add    eax,0x2c38885f
  419f4d:	push   edx
  419f4e:	jbe    0x419f44
  419f50:	retf   
  419f51:	dec    ecx
  419f52:	inc    eax
  419f53:	mov    ebx,0xc7e416cb
  419f58:	gs pop ds
  419f5a:	jo     0x419f87
  419f5c:	push   0xaf03b0af
  419f61:	add    BYTE PTR [ebx],al
  419f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f64:	stc    
  419f65:	jae    0x419f1f
  419f67:	inc    esp
  419f68:	dec    ecx
  419f69:	(bad)  
  419f6a:	mov    BYTE PTR [esi],bh
  419f6c:	arpl   WORD PTR ds:0xb3a2021c,dx
  419f72:	mov    DWORD PTR [ebx+0x26],ebx
  419f75:	mov    esp,0x56c83d99
  419f7a:	cmp    DWORD PTR [eax-0x5],0x3f
  419f7e:	rcl    BYTE PTR [eax],1
  419f80:	adc    bl,ch
  419f82:	out    0xfc,eax
  419f84:	and    al,0xe0
  419f86:	mov    ah,0xdb
  419f88:	outs   dx,DWORD PTR ds:[esi]
  419f89:	fwait
  419f8a:	lea    ecx,[eax+0x364c2a29]
  419f90:	repnz mov ds:0x4e34ec51,al
  419f97:	fnstenv [edx]
  419f99:	push   esi
  419f9a:	enter  0x9e18,0xf7
  419f9e:	(bad)  
  419fa0:	clc    
  419fa1:	aas    
  419fa2:	and    ecx,ecx
  419fa4:	push   es
  419fa5:	nop
  419fa6:	pop    esp
  419fa7:	inc    ebp
  419fa8:	imul   ebx,DWORD PTR [ecx-0x28],0xffffff9f
  419fac:	test   BYTE PTR [esi],dl
  419fae:	pop    esp
  419faf:	mov    ah,0x21
  419fb1:	repz sti 
  419fb3:	in     al,0xd2
  419fb5:	scas   eax,DWORD PTR es:[edi]
  419fb6:	sbb    eax,0xe95f715
  419fbb:	iret   
  419fbc:	mov    ecx,cs
  419fbe:	mov    bl,0x18
  419fc0:	cmp    ecx,DWORD PTR [ecx+0x1b]
  419fc3:	mov    al,0x3e
  419fc5:	jae    0x419f5c
  419fc7:	in     eax,dx
  419fc8:	push   0x695ccbc4
  419fcd:	sub    dl,BYTE PTR [eax+ebp*2+0x1dda66e5]
  419fd4:	(bad)  
  419fd5:	fsub   DWORD PTR [edx+eax*8+0x68]
  419fd9:	stos   DWORD PTR es:[edi],eax
  419fda:	sti    
  419fdb:	mov    WORD PTR [edi-0x62a6bb4e],gs
  419fe1:	cmp    edx,DWORD PTR [eax+0x2ef051ff]
  419fe7:	adc    bl,BYTE PTR [ebp+esi*1-0x43]
  419feb:	adc    al,0x3b
  419fed:	mov    edx,0xd510f5aa
  419ff2:	push   ds
  419ff3:	ja     0x419fd3
  419ff5:	imul   ebx,DWORD PTR [ebp+0x14],0xe
  419ff9:	and    eax,0xb1caeb75
  419ffe:	xchg   ebx,eax
  419fff:	scas   eax,DWORD PTR es:[edi]
  41a000:	inc    eax
  41a001:	test   DWORD PTR [ebx+0x6e],ebx
  41a004:	pop    ds
  41a005:	stos   DWORD PTR es:[edi],eax
  41a006:	aad    0x7e
  41a008:	loop   0x419fdf
  41a00a:	sbb    al,0x1a
  41a00c:	(bad)  
  41a00d:	out    dx,eax
  41a00e:	mul    DWORD PTR [eax+0xc]
  41a011:	repz sub edi,ecx
  41a014:	mov    dl,0x1
  41a016:	dec    edi
  41a017:	(bad)  
  41a018:	imul   dl
  41a01a:	lods   eax,DWORD PTR ds:[esi]
  41a01b:	mov    ecx,0xf33bc6ca
  41a020:	inc    ebx
  41a021:	ins    DWORD PTR es:[edi],dx
  41a022:	and    ch,al
  41a024:	mov    esp,0x1a020dae
  41a029:	mov    es,WORD PTR [ecx-0x68]
  41a02c:	les    ecx,FWORD PTR [edi-0xf]
  41a02f:	addr16 mov ebp,0xb38905e8
  41a035:	fisub  DWORD PTR [ecx]
  41a037:	cmp    BYTE PTR [eax+0x290e48e3],al
  41a03d:	mov    ecx,DWORD PTR [edi]
  41a03f:	sbb    al,0xbb
  41a041:	fs mov cl,0x91
  41a044:	xchg   ebp,eax
  41a045:	xor    ch,BYTE PTR [edi-0x72]
  41a048:	nop
  41a049:	(bad)  
  41a04a:	or     eax,0x20c792cb
  41a04f:	in     al,dx
  41a050:	hlt    
  41a051:	adc    bh,BYTE PTR [edi-0x48b11205]
  41a057:	push   cs
  41a058:	js     0x41a054
  41a05a:	pop    edi
  41a05b:	pop    esi
  41a05c:	mov    ebx,0x84f14ca5
  41a061:	push   edx
  41a062:	sub    bl,BYTE PTR [esi+0x2e83d7ad]
  41a068:	xor    al,bh
  41a06a:	xlat   BYTE PTR ds:[ebx]
  41a06b:	test   al,0x8f
  41a06d:	leave  
  41a06e:	je     0x41a02d
  41a070:	or     BYTE PTR [ebx+esi*1-0x4d],ah
  41a074:	or     DWORD PTR [ecx],esp
  41a076:	and    al,0xa4
  41a078:	mov    ebx,0xfdb2d437
  41a07d:	adc    BYTE PTR [ebx],ah
  41a07f:	mov    ah,0x80
  41a081:	test   BYTE PTR ds:0x118f6661,ah
  41a087:	enter  0x7a1a,0xb7
  41a08b:	jle    0x41a0ec
  41a08d:	imul   edi,ecx,0xa
  41a090:	mov    dh,0xcf
  41a092:	out    dx,eax
  41a093:	addr16 sub ch,cl
  41a096:	and    al,0xb2
  41a098:	rcr    DWORD PTR [ebp+0x17],0x79
  41a09c:	call   0xb40636dc
  41a0a1:	push   ds
  41a0a2:	xchg   ecx,eax
  41a0a3:	cmp    bh,dh
  41a0a5:	xchg   edi,eax
  41a0a6:	xchg   ebx,eax
  41a0a7:	fld    DWORD PTR [edx-0x25]
  41a0aa:	jecxz  0x41a07c
  41a0ac:	pop    ds
  41a0ad:	rol    DWORD PTR [edx-0x77c03955],1
  41a0b3:	sti    
  41a0b4:	sub    cl,BYTE PTR [edx+0x62]
  41a0b7:	and    BYTE PTR [edx-0x3a93c1e6],al
  41a0bd:	or     BYTE PTR [ebx],0x1e
  41a0c0:	pop    eax
  41a0c1:	inc    eax
  41a0c2:	sub    ebx,0xfa727863
  41a0c8:	ret    0xe09d
  41a0cb:	ins    BYTE PTR es:[edi],dx
  41a0cc:	jle    0x41a0da
  41a0ce:	aad    0x6f
  41a0d0:	jmp    0x644b:0x76392024
  41a0d7:	adc    bl,ah
  41a0d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0da:	push   es
  41a0db:	dec    esi
  41a0dc:	popf   
  41a0dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0de:	add    al,0xbd
  41a0e0:	and    esp,esp
  41a0e2:	mov    ebx,0xc34de0fb
  41a0e7:	xor    BYTE PTR [edi+0x32],cl
  41a0ea:	mov    ecx,0x3e241604
  41a0f0:	pop    eax
  41a0f1:	jmp    0x232e99fa
  41a0f6:	pop    edx
  41a0f7:	test   DWORD PTR [ebx+eiz*4-0x29],ebx
  41a0fb:	or     BYTE PTR [edx+esi*8+0x5f],cl
  41a0ff:	push   es
  41a100:	add    esp,DWORD PTR ds:0xafdac6c0
  41a106:	or     DWORD PTR [ebp+0x1],eax
  41a109:	push   esp
  41a10a:	sbb    DWORD PTR [edi-0x4c],esi
  41a10d:	in     al,dx
  41a10e:	mov    ah,BYTE PTR gs:0x68f693f7
  41a115:	shr    DWORD PTR [eax-0x6507ab1e],1
  41a11b:	push   edx
  41a11c:	fs pusha 
  41a11e:	mov    al,0x1d
  41a120:	xchg   ebx,eax
  41a121:	sbb    BYTE PTR [edx-0x3],ch
  41a124:	push   esp
  41a125:	in     al,0xe5
  41a127:	xor    bh,BYTE PTR [ebx-0x11]
  41a12a:	xchg   edx,eax
  41a12b:	nop
  41a12c:	fdivr  QWORD PTR [edx-0x41]
  41a12f:	or     al,0x53
  41a131:	jbe    0x41a14d
  41a133:	imul   ebp,DWORD PTR [ebx+edi*2-0x388371c9],0x46b7e270
  41a13e:	or     edx,DWORD PTR [esi-0x6b2b308]
  41a144:	data16 (bad) 
  41a146:	pusha  
  41a147:	call   0xb091:0xcdc7d40c
  41a14e:	xlat   BYTE PTR ds:[ebx]
  41a14f:	imul   edx,DWORD PTR [edx],0x9c37dafe
  41a155:	arpl   WORD PTR [esp+ebp*1+0x32],bp
  41a159:	xchg   dh,bh
  41a15b:	retf   0x67f
  41a15e:	inc    ecx
  41a15f:	pop    ebp
  41a160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a161:	call   0x7abe:0xeb1445f2
  41a168:	leave  
  41a169:	xor    edx,DWORD PTR [ecx]
  41a16b:	retf   
  41a16c:	jns    0x41a1ba
  41a16e:	stc    
  41a16f:	clc    
  41a170:	mov    esp,0x6158d7c4
  41a175:	int3   
  41a176:	and    DWORD PTR [ebx],esp
  41a178:	or     eax,0x30283485
  41a17d:	and    BYTE PTR [esp+edi*8-0x50d04393],al
  41a184:	outs   dx,BYTE PTR ds:[esi]
  41a185:	cdq    
  41a186:	xor    eax,eax
  41a188:	gs hlt 
  41a18a:	cmp    al,0x81
  41a18c:	(bad)  
  41a18d:	sbb    al,0x0
  41a18f:	ficomp DWORD PTR [edi+edx*4-0x5ba3823b]
  41a196:	fnstcw WORD PTR [edi+edi*1-0x27]
  41a19a:	js     0x41a17b
  41a19c:	scas   al,BYTE PTR es:[edi]
  41a19d:	pop    ebx
  41a19e:	test   al,0x35
  41a1a0:	jp     0x41a1e3
  41a1a2:	mov    al,BYTE PTR [eax-0x1d4659dd]
  41a1a8:	(bad)  
  41a1a9:	fistp  QWORD PTR [ebx-0x54]
  41a1ac:	xor    al,0x71
  41a1ae:	inc    ebp
  41a1af:	rcl    BYTE PTR [esi-0x2d4e158],cl
  41a1b5:	cmp    al,BYTE PTR [eax-0xd]
  41a1b8:	leave  
  41a1b9:	jg     0x41a174
  41a1bb:	mov    ah,0x15
  41a1bd:	add    esi,DWORD PTR [esi-0x4c44bc2b]
  41a1c3:	mov    ds:0x95870377,eax
  41a1c8:	cmp    BYTE PTR [esi],dh
  41a1ca:	in     eax,0x28
  41a1cc:	dec    ecx
  41a1cd:	jmp    0x41a1da
  41a1cf:	fwait
  41a1d0:	sar    DWORD PTR [edi],cl
  41a1d2:	xchg   edx,eax
  41a1d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1d4:	ins    DWORD PTR es:[edi],dx
  41a1d5:	dec    edi
  41a1d6:	sbb    edx,esp
  41a1d8:	stos   DWORD PTR es:[edi],eax
  41a1d9:	pop    edx
  41a1da:	ja     0x41a201
  41a1dc:	mov    ds:0x342b6188,eax
  41a1e1:	push   ss
  41a1e2:	scas   eax,DWORD PTR es:[edi]
  41a1e3:	jge    0x41a223
  41a1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1e6:	mov    eax,0x6f2db662
  41a1eb:	jp     0x41a1a3
  41a1ed:	cdq    
  41a1ee:	jne    0x41a25d
  41a1f0:	ficom  DWORD PTR [esi]
  41a1f2:	out    0xee,al
  41a1f4:	xchg   esp,eax
  41a1f5:	out    0x5b,al
  41a1f7:	or     BYTE PTR [edi-0x126e0e88],0xfb
  41a1fe:	mov    dl,BYTE PTR [eax+0x3775d479]
  41a204:	jb     0x41a218
  41a206:	cmp    al,0xfe
  41a208:	sbb    bl,BYTE PTR [ebx+0x4a]
  41a20b:	lods   al,BYTE PTR ds:[esi]
  41a20c:	cmp    eax,0xc699a88b
  41a211:	cmp    BYTE PTR fs:[ebx+0x35],0xf
  41a216:	lods   eax,DWORD PTR ds:[esi]
  41a217:	mov    al,ds:0x27caaf27
  41a21c:	lods   eax,DWORD PTR ds:[esi]
  41a21d:	jns    0x41a1e8
  41a21f:	or     DWORD PTR [ebp-0x47b0282f],ebp
  41a225:	das    
  41a226:	inc    esp
  41a227:	out    dx,eax
  41a228:	add    cl,BYTE PTR [ebp+0x59]
  41a22b:	lea    edx,[edi-0x559254e8]
  41a231:	fisubr WORD PTR [ecx+esi*2+0xd]
  41a235:	pop    ebp
  41a236:	cmp    al,0x1b
  41a238:	icebp  
  41a239:	fcmovne st,st(7)
  41a23b:	bswap  esi
  41a23d:	push   ecx
  41a23e:	xchg   edx,eax
  41a23f:	test   BYTE PTR [ebx-0x54],cl
  41a242:	ins    DWORD PTR es:[edi],dx
  41a243:	int3   
  41a244:	sub    eax,0x6c53b6d3
  41a249:	or     DWORD PTR [esi-0x23],0xfffffff0
  41a24d:	sub    eax,0x192ed376
  41a252:	loop   0x41a28a
  41a254:	push   esp
  41a255:	mov    dl,0xce
  41a257:	jno    0x41a26a
  41a259:	push   ecx
  41a25a:	inc    eax
  41a25b:	jmp    0x41a260
  41a25d:	and    BYTE PTR [ebx+0x7552b710],dh
  41a263:	retf   
  41a264:	jp     0x41a1f2
  41a266:	push   esp
  41a267:	xchg   ebp,eax
  41a268:	out    dx,al
  41a269:	in     al,0xd4
  41a26b:	or     al,0xc
  41a26d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a26e:	fbstp  TBYTE PTR [eax]
  41a270:	daa    
  41a271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a272:	gs in  eax,0xce
  41a275:	inc    ebp
  41a276:	adc    ebp,esp
  41a278:	(bad)  
  41a279:	jecxz  0x41a297
  41a27b:	stos   BYTE PTR es:[edi],al
  41a27c:	dec    edi
  41a27d:	mov    al,ds:0xe7000dbb
  41a282:	mov    al,0x1d
  41a284:	add    BYTE PTR [ebp+0x51cbc551],al
  41a28a:	pop    eax
  41a28b:	shr    DWORD PTR [ebx-0x45cd9090],0x1b
  41a292:	pop    ecx
  41a293:	jl     0x41a283
  41a295:	jnp    0x41a2f5
  41a297:	das    
  41a298:	imul   ebp,DWORD PTR [edi+eiz*4],0xffffff98
  41a29c:	pop    es
  41a29d:	push   cs
  41a29e:	add    ch,BYTE PTR [edi-0x688bef72]
  41a2a4:	fisubr DWORD PTR [eax+0x75]
  41a2a7:	imul   ecx,DWORD PTR [ecx],0x35fbbec0
  41a2ad:	repnz ror dl,0x46
  41a2b1:	nop
  41a2b2:	push   ss
  41a2b3:	in     al,dx
  41a2b4:	xchg   DWORD PTR [edx+0x3c],esp
  41a2b7:	and    DWORD PTR fs:[esi],0xf
  41a2bb:	dec    eax
  41a2bc:	pop    ebx
  41a2bd:	push   ecx
  41a2be:	aad    0xea
  41a2c0:	mov    WORD PTR ds:0x8b0ba0e3,?
  41a2c6:	imul   ax,WORD PTR [ebx+edi*4],0x88c3
  41a2cc:	fbld   TBYTE PTR [eax-0x4067a0c4]
  41a2d2:	imul   esp,esp,0x4767410f
  41a2d8:	adc    BYTE PTR [esi-0x6a270678],cl
  41a2de:	cli    
  41a2df:	cmp    edx,DWORD PTR [ecx+0x12cd0bfe]
  41a2e5:	add    DWORD PTR [ecx],edi
  41a2e7:	cmp    cl,BYTE PTR [ebp-0x6bbd65d0]
  41a2ed:	adc    DWORD PTR [edi+0x17],ebp
  41a2f0:	push   eax
  41a2f1:	clc    
  41a2f2:	retf   
  41a2f3:	fnstcw WORD PTR [eax+0x7c199027]
  41a2f9:	or     BYTE PTR [ecx],dl
  41a2fb:	mov    ch,0xfc
  41a2fd:	in     al,dx
  41a2fe:	sbb    DWORD PTR [ebx-0xa85534e],0x4802d2d3
  41a308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a30a:	and    DWORD PTR [edx-0x5],ebp
  41a30d:	in     eax,dx
  41a30e:	pop    edx
  41a30f:	or     bh,BYTE PTR [edx+eax*4]
  41a312:	or     BYTE PTR [esi+0x6f],bl
  41a315:	pop    ecx
  41a316:	or     al,0xf3
  41a318:	and    DWORD PTR [ecx-0x4f504785],edx
  41a31e:	pushf  
  41a31f:	add    BYTE PTR [edx+0x7376798b],dl
  41a325:	xchg   ebx,eax
  41a326:	daa    
  41a327:	mov    ds:0x852abc96,eax
  41a32c:	mov    ds:0xaa4bc430,eax
  41a331:	fs data16 stc 
  41a334:	xor    al,0x25
  41a336:	xchg   BYTE PTR [edi*8-0x3f7a0cb0],dh
  41a33d:	scas   al,BYTE PTR es:[edi]
  41a33e:	add    al,0x56
  41a340:	cmp    eax,0x4c59de0f
  41a345:	ja     0x41a2ea
  41a347:	push   0x82bda8d4
  41a34c:	gs mov dh,0x83
  41a34f:	adc    bh,BYTE PTR [edx]
  41a351:	mov    esp,0x8019c0cf
  41a356:	mov    esi,0xdc901dff
  41a35b:	retf   0xb7e2
  41a35e:	adc    al,0xb9
  41a360:	xchg   ecx,eax
  41a361:	int    0x63
  41a363:	mov    edx,0x66742a1f
  41a368:	mov    dl,0xb2
  41a36a:	push   ebx
  41a36b:	call   DWORD PTR [ecx+0x4e]
  41a36e:	mov    DWORD PTR [ecx+0xd68c3c5],edi
  41a374:	or     DWORD PTR [edx],esp
  41a376:	adc    BYTE PTR [esi+ebx*4],dh
  41a379:	sub    DWORD PTR [ecx+0x626fb21b],ebx
  41a37f:	xchg   ebx,eax
  41a380:	mov    ecx,0x79367b3a
  41a385:	jnp    0x41a3ac
  41a387:	adc    bh,dh
  41a389:	inc    edi
  41a38a:	iret   
  41a38b:	push   0x784989ae
  41a390:	int3   
  41a391:	dec    edi
  41a392:	loop   0x41a3b2
  41a394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a395:	lahf   
  41a396:	xchg   edi,eax
  41a397:	mov    ds:0xf63b939e,eax
  41a39c:	shl    BYTE PTR [eax+ecx*4],1
  41a39f:	or     BYTE PTR [eax+0x313d06cc],ah
  41a3a5:	test   DWORD PTR [esi],edx
  41a3a7:	addr16 add edx,0xffffff8a
  41a3ab:	pop    ebx
  41a3ac:	push   ss
  41a3ad:	sahf   
  41a3ae:	dec    esi
  41a3af:	adc    ah,BYTE PTR [edi]
  41a3b1:	dec    ebp
  41a3b2:	xor    dl,bl
  41a3b4:	push   ss
  41a3b5:	mov    eax,0x557e130b
  41a3ba:	out    dx,al
  41a3bb:	mov    eax,ds:0xbeaea6c4
  41a3c0:	push   edx
  41a3c1:	sub    al,0x74
  41a3c3:	jge    0x41a349
  41a3c5:	pop    edi
  41a3c6:	mov    ebp,0x5400e3f8
  41a3cb:	(bad)  
  41a3cc:	mov    esp,0xfb4a50b5
  41a3d1:	jg     0x41a3c3
  41a3d3:	out    dx,eax
  41a3d4:	pop    edx
  41a3d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3d6:	dec    ebp
  41a3d7:	xor    al,0x30
  41a3d9:	sub    BYTE PTR [eax+0x57],bl
  41a3dc:	mov    ds:0xfb26e30d,eax
  41a3e1:	jmp    0xe8dc3c97
  41a3e6:	lods   eax,DWORD PTR ds:[esi]
  41a3e7:	jmp    0x41a447
  41a3e9:	leave  
  41a3ea:	xor    eax,0xad714803
  41a3ef:	mov    esp,DWORD PTR [eax-0x2c]
  41a3f2:	test   eax,0xb954ecdf
  41a3f7:	(bad)  
  41a3f8:	or     al,0x22
  41a3fa:	rcr    BYTE PTR [edx-0x55],cl
  41a3fd:	out    dx,al
  41a3fe:	push   edi
  41a3ff:	mov    eax,ds:0x4fffaaca
  41a404:	cmp    bl,al
  41a406:	hlt    
  41a407:	enter  0xf916,0xa3
  41a40b:	push   esi
  41a40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a40d:	test   al,0x3d
  41a40f:	mov    esi,0x706d217b
  41a414:	jmp    0xbab3:0x1f81ebb6
  41a41b:	gs popf 
  41a41d:	mov    DWORD PTR [ecx],0x2f20cc0e
  41a423:	sti    
  41a424:	out    0xe0,al
  41a426:	xor    BYTE PTR [ebp+0x4c084007],bl
  41a42c:	sub    DWORD PTR [esi+0x25],edx
  41a42f:	mov    ebp,0xd9375bbe
  41a434:	into   
  41a435:	jmp    0xe25383e2
  41a43a:	cmp    eax,0x1aeccd46
  41a43f:	sar    BYTE PTR [esi+0x4e10c11b],1
  41a445:	aam    0x63
  41a447:	push   edx
  41a448:	push   esp
  41a449:	sub    DWORD PTR [ebx-0x5beda3fd],edx
  41a44f:	sbb    esi,DWORD PTR [edi+0x5b]
  41a452:	mov    ds:0x49040361,al
  41a457:	ins    BYTE PTR es:[edi],dx
  41a458:	pop    es
  41a459:	stc    
  41a45a:	xor    DWORD PTR [ebp+esi*2-0x48345770],edi
  41a461:	loopne 0x41a446
  41a463:	ret    
  41a464:	cld    
  41a465:	imul   esi,DWORD PTR [ebx+ecx*2-0x7930ad31],0xe4abf71b
  41a470:	xchg   DWORD PTR [esp+ebp*2-0x57502528],edx
  41a477:	and    DWORD PTR [esi+ebp*8+0x4ca2cb9c],esp
  41a47e:	push   ebp
  41a47f:	inc    ebx
  41a480:	jo     0x41a476
  41a482:	jns    0x41a489
  41a484:	pop    ecx
  41a485:	xchg   BYTE PTR [ebx],dh
  41a487:	mov    esp,0xb894d191
  41a48c:	ret    0x238c
  41a48f:	gs adc al,0x41
  41a492:	repz fnsave ds:[ebp-0x2]
  41a497:	arpl   WORD PTR [ebx],bx
  41a499:	in     eax,0x96
  41a49b:	add    ah,dl
  41a49d:	dec    edi
  41a49e:	and    DWORD PTR [edi],esi
  41a4a0:	cmp    eax,0xf688dc62
  41a4a5:	ja     0x41a47f
  41a4a7:	shl    cl,0xc
  41a4aa:	lahf   
  41a4ab:	inc    edx
  41a4ac:	lods   al,BYTE PTR ds:[esi]
  41a4ad:	xchg   edi,eax
  41a4ae:	aas    
  41a4af:	sub    dl,BYTE PTR [edi+0x25911adf]
  41a4b5:	or     ebx,DWORD PTR [ebp+0x5]
  41a4b8:	enter  0x1577,0xc6
  41a4bc:	daa    
  41a4bd:	sub    DWORD PTR [edx+0x66e2f5c8],edx
  41a4c3:	fwait
  41a4c4:	cwde   
  41a4c5:	mov    dl,0x0
  41a4c7:	jae    0x41a503
  41a4c9:	int    0xbc
  41a4cb:	push   edi
  41a4cc:	xchg   ebx,eax
  41a4cd:	mov    ebx,0x7530770f
  41a4d2:	aad    0xb4
  41a4d4:	xchg   DWORD PTR [esi+0x7c8a0240],esi
  41a4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4db:	dec    esi
  41a4dc:	jle    0x41a4bf
  41a4de:	jmp    0x41a486
  41a4e0:	add    al,0x22
  41a4e2:	std    
  41a4e3:	jl     0x41a548
  41a4e5:	or     al,0xc6
  41a4e7:	in     al,0x71
  41a4e9:	das    
  41a4ea:	push   ebx
  41a4eb:	mov    ah,0x85
  41a4ed:	loop   0x41a55f
  41a4ef:	scas   al,BYTE PTR es:[edi]
  41a4f0:	push   0xe078571
  41a4f5:	inc    eax
  41a4f6:	pop    eax
  41a4f7:	int3   
  41a4f8:	les    edi,FWORD PTR [ebx+0x7027f419]
  41a4fe:	hlt    
  41a4ff:	shl    DWORD PTR [eax-0x2f],cl
  41a502:	jmp    0xdb28f590
  41a507:	jnp    0x41a53e
  41a509:	mov    esp,0xc23275be
  41a50e:	arpl   WORD PTR [edi],si
  41a510:	push   edi
  41a511:	bound  edx,QWORD PTR [eax+0x27c1c663]
  41a517:	sub    eax,0xffffffa8
  41a51a:	call   0x7691a833
  41a51f:	sar    DWORD PTR [ecx],1
  41a521:	pusha  
  41a522:	pop    ss
  41a523:	ss stos BYTE PTR es:[edi],al
  41a525:	dec    esp
  41a526:	xchg   esi,eax
  41a527:	jp     0x41a4de
  41a529:	and    BYTE PTR [eax+0x30],dl
  41a52c:	leave  
  41a52d:	scas   eax,DWORD PTR es:[edi]
  41a52e:	rcr    DWORD PTR [edx-0x51],cl
  41a531:	call   0xab78e150
  41a536:	(bad)  
  41a537:	(bad)  
  41a538:	in     al,dx
  41a539:	cmp    BYTE PTR [ebx+0x71712412],dh
  41a53f:	push   0x5651ea24
  41a544:	xor    eax,0x1b36ee5
  41a549:	xor    edi,edi
  41a54b:	rcr    DWORD PTR [esi],1
  41a54d:	fstp   TBYTE PTR [ebx-0x6c]
  41a550:	jp     0x41a4ff
  41a552:	ficomp WORD PTR [edx+0x57]
  41a555:	push   cs
  41a556:	push   ebp
  41a557:	repz pop esp
  41a559:	(bad)  
  41a55a:	xchg   esi,eax
  41a55b:	or     al,0x58
  41a55d:	cdq    
  41a55e:	push   edi
  41a55f:	cmp    al,0x99
  41a561:	loope  0x41a59f
  41a563:	jb     0x41a57e
  41a565:	test   BYTE PTR [esi+edi*8-0xa],dh
  41a569:	push   eax
  41a56a:	mov    cl,0x8f
  41a56c:	adc    eax,0xb2072ccb
  41a571:	pusha  
  41a572:	and    DWORD PTR [eax+0x67],esi
  41a575:	dec    eax
  41a576:	or     al,0xb8
  41a578:	mov    bl,0xe4
  41a57a:	lock cld 
  41a57c:	test   al,0x98
  41a57e:	out    dx,eax
  41a57f:	push   edi
  41a580:	adc    BYTE PTR [eax+0x72fb8fe0],bh
  41a586:	(bad)  
  41a587:	xlat   BYTE PTR ds:[ebx]
  41a588:	aas    
  41a589:	sbb    dh,BYTE PTR [eax+ebx*8]
  41a58c:	cdq    
  41a58d:	call   DWORD PTR [ebp+0x39]
  41a590:	lds    edi,FWORD PTR [esi]
  41a592:	ja     0x41a53a
  41a594:	pop    edx
  41a595:	sbb    ebp,edi
  41a597:	lahf   
  41a598:	mov    ds:0x427a3e72,eax
  41a59d:	pop    ebp
  41a59e:	inc    edx
  41a59f:	and    edi,DWORD PTR [edx]
  41a5a1:	xchg   BYTE PTR [eax+0x61ffb765],bl
  41a5a7:	or     BYTE PTR [edx+0x21],dl
  41a5aa:	jo     0x41a5e2
  41a5ac:	xchg   ebp,eax
  41a5ad:	rcl    BYTE PTR [edi+0x15db80f4],cl
  41a5b3:	sbb    eax,0xf36a4d0
  41a5b8:	jns    0x41a545
  41a5ba:	shl    BYTE PTR [eax+0x36],cl
  41a5bd:	loop   0x41a5ba
  41a5bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5c0:	cmp    al,0x72
  41a5c2:	and    eax,0xf2326f9
  41a5c7:	leave  
  41a5c8:	xchg   ebx,eax
  41a5c9:	imul   ebp,DWORD PTR [eax-0x2f],0xd0f0676e
  41a5d0:	loop   0x41a633
  41a5d2:	cmp    eax,0x5dafe499
  41a5d7:	xchg   bl,dl
  41a5d9:	hlt    
  41a5da:	xchg   BYTE PTR [ebx+0xe027641],dh
  41a5e0:	(bad)  [edi]
  41a5e2:	mov    bl,0x42
  41a5e4:	imul   esp,esi,0xec4b8d78
  41a5ea:	cmp    esi,DWORD PTR [esi]
  41a5ec:	das    
  41a5ed:	call   0xeb3f:0x5afd862c
  41a5f4:	jo     0x41a5c2
  41a5f6:	inc    esi
  41a5f7:	(bad)  
  41a5f8:	test   eax,0xca11f319
  41a5fd:	test   al,0x72
  41a5ff:	in     al,dx
  41a600:	data16 clc 
  41a602:	push   ebx
  41a603:	ds jae 0x41a5a6
  41a606:	ins    BYTE PTR es:[edi],dx
  41a607:	inc    edi
  41a608:	dec    edi
  41a609:	xchg   ch,dl
  41a60b:	ror    BYTE PTR [ebx],1
  41a60d:	stos   BYTE PTR es:[edi],al
  41a60e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a60f:	cdq    
  41a610:	mov    bl,0x2b
  41a612:	test   DWORD PTR [ebx-0x2862f50c],esp
  41a618:	int3   
  41a619:	in     al,0xf7
  41a61b:	int3   
  41a61c:	mov    ebp,?
  41a61e:	add    DWORD PTR [edi-0x41],esp
  41a621:	add    DWORD PTR [ecx-0x31],ebx
  41a624:	xor    bl,ah
  41a626:	jbe    0x41a5fd
  41a628:	sbb    eax,0x684b790a
  41a62d:	mov    cl,bl
  41a62f:	mov    ebp,0x4a7c85d7
  41a634:	mov    eax,0xd6f32e9e
  41a639:	mov    bh,0xb3
  41a63b:	mov    edx,0xec93e164
  41a640:	dec    ebp
  41a641:	jno    0x41a61b
  41a643:	xchg   edi,eax
  41a644:	inc    eax
  41a645:	cli    
  41a646:	mov    edi,DWORD PTR [ebp-0x34ea698e]
  41a64c:	sar    DWORD PTR [edx-0x54d76fd2],1
  41a652:	cdq    
  41a653:	jl     0x41a5f0
  41a655:	push   edx
  41a656:	jecxz  0x41a626
  41a658:	shr    BYTE PTR [ebx+edx*4-0x3fe2d342],0xed
  41a660:	data16 mov ch,bl
  41a663:	xor    al,0x91
  41a665:	or     DWORD PTR [eax+0x9],eax
  41a668:	adc    ebp,0xcfd28ab5
  41a66e:	inc    ebp
  41a66f:	std    
  41a670:	mul    BYTE PTR [esi-0x18]
  41a673:	popa   
  41a674:	or     DWORD PTR [edx],ebp
  41a676:	cmp    al,BYTE PTR [ebp+0x1a9f1884]
  41a67c:	fstp   DWORD PTR [ebx-0x66d952aa]
  41a682:	or     dh,0xf0
  41a685:	(bad)  
  41a686:	xchg   DWORD PTR [ebx-0x3ec21dc7],esp
  41a68c:	jecxz  0x41a621
  41a68e:	sti    
  41a68f:	test   BYTE PTR [eax+0x2cbfc20e],0x2d
  41a696:	repnz add al,BYTE PTR [ecx+0x27]
  41a69a:	or     DWORD PTR [edx+0x3d47200d],0x78
  41a6a1:	test   BYTE PTR [ecx],bl
  41a6a3:	(bad)  
  41a6a4:	push   esp
  41a6a5:	inc    eax
  41a6a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6a7:	lods   al,BYTE PTR ds:[esi]
  41a6a8:	adc    DWORD PTR [ecx+esi*2-0x693292aa],esi
  41a6af:	mov    WORD PTR [edx+0x12a5b686],es
  41a6b5:	mov    ds:0xf9aa6ea0,eax
  41a6ba:	sbb    al,0xcc
  41a6bc:	retf   0x84b4
  41a6bf:	pop    ebx
  41a6c0:	scas   al,BYTE PTR es:[edi]
  41a6c1:	jmp    esp
  41a6c3:	inc    ebp
  41a6c4:	jle    0x41a67c
  41a6c6:	dec    edi
  41a6c7:	cmp    DWORD PTR [esi-0x29c39b8d],ebx
  41a6cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6ce:	daa    
  41a6cf:	jmp    0x41a73e
  41a6d1:	test   eax,0xd394a5af
  41a6d6:	push   ecx
  41a6d7:	dec    ecx
  41a6d8:	retf   0x1dbd
  41a6db:	push   0xffffffa9
  41a6dd:	mov    cl,0x5b
  41a6df:	xchg   esi,esp
  41a6e1:	(bad)  
  41a6e2:	mov    cl,0xc9
  41a6e4:	mov    al,0x25
  41a6e6:	adc    cl,BYTE PTR [esi+eiz*8-0x35]
  41a6ea:	imul   ebx,DWORD PTR [esi],0xffffff92
  41a6ed:	stos   DWORD PTR es:[edi],eax
  41a6ee:	or     BYTE PTR [eax+0x3],dl
  41a6f1:	and    BYTE PTR [ebx],ah
  41a6f3:	fisttp DWORD PTR [edi+eiz*8+0x5bda525a]
  41a6fa:	lahf   
  41a6fb:	cmp    al,0x9b
  41a6fd:	cmp    al,0x70
  41a6ff:	outs   dx,DWORD PTR ds:[esi]
  41a700:	or     DWORD PTR [esi+0x76c76fad],esp
  41a706:	dec    edi
  41a707:	add    al,0x61
  41a709:	pushf  
  41a70a:	and    DWORD PTR [eax],0x4058df75
  41a710:	scas   eax,DWORD PTR es:[edi]
  41a711:	sti    
  41a712:	adc    al,0x88
  41a714:	xor    al,0x93
  41a716:	fidiv  DWORD PTR [ebx]
  41a718:	and    BYTE PTR [edi],0xb6
  41a71b:	xor    eax,0x6e33fb01
  41a720:	rcr    DWORD PTR [ecx*4-0x7969fbc4],1
  41a727:	cmp    ch,BYTE PTR [eax-0x30]
  41a72a:	xor    eax,0x2e33092d
  41a72f:	xor    DWORD PTR ds:[bp+di+0xe],0xffffff9f
  41a735:	shl    BYTE PTR ds:0xea0c5581,1
  41a73b:	outs   dx,DWORD PTR ds:[esi]
  41a73c:	jg     0x41a72c
  41a73e:	xlat   BYTE PTR ds:[ebx]
  41a73f:	std    
  41a740:	add    DWORD PTR [edx-0x4f84f4e5],ebx
  41a746:	bt     DWORD PTR [ebx],esi
  41a749:	xchg   esi,eax
  41a74a:	mov    ch,0x91
  41a74c:	bound  esi,QWORD PTR [ebp+0x79731c69]
  41a752:	jbe    0x41a787
  41a754:	jmp    0x257e704a
  41a759:	dec    edi
  41a75a:	cmp    eax,0x8e651840
  41a75f:	(bad)  
  41a760:	loopne 0x41a6ef
  41a762:	mov    ds:0x2912c9e5,eax
  41a767:	cmp    DWORD PTR [ebp+0x5a],0xffffffa3
  41a76b:	fnsave [esi-0x793414d1]
  41a771:	adc    al,al
  41a773:	aam    0x45
  41a775:	jno    0x41a796
  41a777:	enter  0x6e3,0xce
  41a77b:	xchg   ecx,eax
  41a77c:	addr16 aas 
  41a77e:	sar    DWORD PTR [ebx],cl
  41a780:	adc    DWORD PTR [edi+esi*8],esp
  41a783:	in     eax,0x9
  41a785:	sti    
  41a786:	jge    0x41a732
  41a788:	push   edx
  41a789:	xchg   DWORD PTR [edx-0xd],ebp
  41a78c:	inc    ebx
  41a78d:	repnz push ds
  41a78f:	xchg   ebx,eax
  41a790:	sbb    BYTE PTR ds:0x54d8c6cb,ah
  41a796:	es and al,0xe2
  41a799:	imul   edx,DWORD PTR [edx-0x7],0xffffffa6
  41a79d:	sub    esi,DWORD PTR [esi+0x25]
  41a7a0:	mov    BYTE PTR [ecx+0xe7d2ef0],dl
  41a7a6:	mov    ebx,0x96b80c3c
  41a7ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ac:	mov    cl,0xc2
  41a7ae:	xchg   edi,eax
  41a7af:	push   ebp
  41a7b0:	repnz push cs
  41a7b2:	in     al,dx
  41a7b3:	out    0xb2,al
  41a7b5:	retf   
  41a7b6:	out    dx,al
  41a7b7:	and    eax,0x3318ca03
  41a7bc:	and    eax,0x3f20c34d
  41a7c1:	xchg   esi,eax
  41a7c2:	or     ch,BYTE PTR [ebp+ebp*2-0x11f934f]
  41a7c9:	mov    ecx,0x471a354
  41a7ce:	jnp    0x41a7e3
  41a7d0:	push   0x80bbbe6
  41a7d5:	dec    edi
  41a7d6:	sub    ebx,DWORD PTR [edx-0x77]
  41a7d9:	clc    
  41a7da:	push   0xffffffee
  41a7dc:	ja     0x41a7ec
  41a7de:	sbb    eax,0xb8e273e4
  41a7e3:	xchg   ecx,eax
  41a7e4:	cmp    BYTE PTR [edi],al
  41a7e6:	add    edi,DWORD PTR [edx+0x1b14131]
  41a7ec:	jecxz  0x41a790
  41a7ee:	mov    al,ds:0x20adaaa4
  41a7f3:	mov    BYTE PTR [eax],bh
  41a7f5:	fstp   QWORD PTR [esi]
  41a7f7:	rol    DWORD PTR [ebx+0x11],cl
  41a7fa:	push   edi
  41a7fb:	jae    0x41a863
  41a7fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7fe:	inc    esi
  41a7ff:	mov    bh,0xf
  41a801:	ret    
  41a802:	push   ebx
  41a803:	test   BYTE PTR [eax-0x30],bl
  41a806:	lods   al,BYTE PTR ds:[esi]
  41a807:	push   edi
  41a808:	inc    edi
  41a809:	imul   eax,ebp,0x88582abf
  41a80f:	in     eax,0x67
  41a811:	or     eax,0x2a5e4c58
  41a816:	inc    eax
  41a817:	sbb    al,0x28
  41a819:	mov    bh,0x5b
  41a81b:	mov    ch,0x39
  41a81d:	das    
  41a81e:	pop    edx
  41a81f:	fcomp  QWORD PTR [esi]
  41a821:	push   ds
  41a822:	pop    esp
  41a823:	scas   eax,DWORD PTR es:[edi]
  41a824:	stc    
  41a825:	retf   0xddda
  41a828:	scas   al,BYTE PTR es:[edi]
  41a829:	ins    DWORD PTR es:[edi],dx
  41a82a:	inc    eax
  41a82b:	mov    ebp,0xe5419dce
  41a830:	inc    esp
  41a831:	dec    esp
  41a832:	scas   eax,DWORD PTR es:[edi]
  41a833:	hlt    
  41a834:	mov    dh,0x7e
  41a836:	xor    ebp,DWORD PTR [ebx+eiz*1-0x64]
  41a83a:	das    
  41a83b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a83c:	fs out 0xd0,eax
  41a83f:	pop    ss
  41a840:	loope  0x41a86f
  41a842:	hlt    
  41a843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a844:	or     eax,0x7153937b
  41a849:	ins    DWORD PTR es:[edi],dx
  41a84a:	adc    BYTE PTR [ecx-0x40],dl
  41a84d:	mov    eax,ds:0xefbe34a8
  41a852:	adc    ch,dl
  41a854:	push   cs
  41a855:	mov    WORD PTR [esi],es
  41a857:	inc    esi
  41a858:	xor    eax,0x547d8248
  41a85d:	cmp    edx,edx
  41a85f:	cli    
  41a860:	cwde   
  41a861:	call   0xaf45:0x1e6c244f
  41a868:	loopne 0x41a7f6
  41a86a:	push   ebp
  41a86b:	lahf   
  41a86c:	push   ecx
  41a86d:	xchg   ebp,eax
  41a86e:	jmp    0x41a8b2
  41a870:	xchg   ebp,eax
  41a871:	cmp    BYTE PTR [edx-0x615369cb],al
  41a877:	mov    ah,0xc3
  41a879:	out    0xd7,al
  41a87b:	sahf   
  41a87c:	iret   
  41a87d:	popa   
  41a87e:	xchg   edx,eax
  41a87f:	sbb    al,0x6
  41a881:	pop    eax
  41a882:	mov    edi,0x80c96cc0
  41a887:	mov    ds:0xa0591932,al
  41a88c:	push   eax
  41a88d:	add    eax,0x5eeab2e9
  41a892:	fbld   TBYTE PTR [esi+0x68]
  41a895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a896:	jl     0x41a8a0
  41a898:	jp     0x41a841
  41a89a:	not    BYTE PTR [ebx+ecx*8]
  41a89d:	push   edi
  41a89e:	adc    BYTE PTR [edi],bh
  41a8a0:	out    0x63,al
  41a8a2:	mov    dl,0x3b
  41a8a4:	fdivr  QWORD PTR [ecx-0x5026ab97]
  41a8aa:	push   ebx
  41a8ab:	adc    al,0x5e
  41a8ad:	clc    
  41a8ae:	shr    BYTE PTR [ecx],1
  41a8b0:	inc    ecx
  41a8b1:	adc    al,0x96
  41a8b3:	mov    ebp,0x4b55f731
  41a8b8:	pop    ecx
  41a8b9:	(bad)  
  41a8ba:	js     0x41a860
  41a8bc:	jne    0x41a899
  41a8be:	mov    al,ds:0x4e788cea
  41a8c3:	adc    ch,BYTE PTR [esi-0x4f85e83]
  41a8c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8ca:	clc    
  41a8cb:	mov    al,ds:0x6a75e5
  41a8d0:	fidivr WORD PTR [esi+0x79a56f70]
  41a8d6:	push   cs
  41a8d7:	xchg   edx,eax
  41a8d8:	loopne 0x41a877
  41a8da:	add    DWORD PTR [edi+ecx*8+0x2ada34f4],ecx
  41a8e1:	jmp    0xea60:0x19346d93
  41a8e8:	xchg   esi,eax
  41a8e9:	and    al,0x69
  41a8eb:	hlt    
  41a8ec:	sti    
  41a8ed:	inc    eax
  41a8ee:	gs sti 
  41a8f0:	sub    eax,0x461b3eff
  41a8f5:	mov    cl,0xeb
  41a8f7:	es push ebp
  41a8f9:	aaa    
  41a8fa:	sar    DWORD PTR [ebx+ecx*2],0x51
  41a8fe:	adc    eax,0x6e12fce4
  41a903:	mov    cs,WORD PTR [ecx-0x7a63dca9]
  41a909:	cmp    al,0x89
  41a90b:	cmp    eax,0x5ff4c86b
  41a910:	(bad)  
  41a911:	in     al,0xba
  41a913:	mov    dl,0xb4
  41a915:	inc    ebx
  41a916:	push   ecx
  41a917:	cmp    al,0x41
  41a919:	sahf   
  41a91a:	mov    WORD PTR [eax],ss
  41a91c:	push   ss
  41a91d:	sar    dh,cl
  41a91f:	pop    ecx
  41a920:	sahf   
  41a921:	mov    esp,0xef28189f
  41a926:	add    eax,0x7942bea7
  41a92b:	jae    0x41a971
  41a92d:	int    0xd7
  41a92f:	mov    al,ds:0x1ca01c09
  41a934:	mov    ds:0x63c2d117,al
  41a939:	adc    dl,BYTE PTR [eax]
  41a93b:	dec    edx
  41a93c:	(bad)  
  41a93d:	push   edx
  41a93e:	lods   eax,DWORD PTR ds:[esi]
  41a93f:	pushf  
  41a940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a941:	push   ebx
  41a942:	add    DWORD PTR [ebx-0x70],esi
  41a945:	jo     0x41a946
  41a947:	push   ss
  41a948:	loope  0x41a8d6
  41a94a:	js     0x41a97a
  41a94c:	and    dl,BYTE PTR [edi+0x3b]
  41a94f:	(bad)  
  41a950:	scas   al,BYTE PTR es:[edi]
  41a951:	fidiv  WORD PTR [eax-0x2c]
  41a954:	sub    BYTE PTR [eax+0x5f137a9c],0x4f
  41a95b:	bound  edi,QWORD PTR [edi+0x2fbe819e]
  41a961:	xchg   edi,eax
  41a962:	and    esp,esp
  41a964:	adc    ecx,DWORD PTR [esi+0x78e591ef]
  41a96a:	mov    ch,0x4
  41a96c:	fisub  WORD PTR [edx]
  41a96e:	add    DWORD PTR [esi-0x819f1d5],ecx
  41a974:	jg     0x41a988
  41a976:	push   esp
  41a977:	inc    ebx
  41a978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a979:	popf   
  41a97a:	ja     0x41a9a1
  41a97c:	or     DWORD PTR [edi+0x24],ebp
  41a97f:	sar    DWORD PTR [ebx],1
  41a981:	dec    ecx
  41a982:	and    al,0xc1
  41a984:	out    0xf6,eax
  41a986:	mov    esi,0x41029826
  41a98b:	ins    DWORD PTR es:[edi],dx
  41a98c:	hlt    
  41a98d:	xor    BYTE PTR [ebx],bl
  41a98f:	inc    ebx
  41a990:	imul   ebp,DWORD PTR [esp+eiz*2],0x7b8dffa1
  41a997:	inc    esp
  41a998:	jmp    0xe8e0:0x3d7a6266
  41a99f:	aaa    
  41a9a0:	add    esi,DWORD PTR [ecx+0x7d3357f]
  41a9a6:	mov    edx,0xb21ff5f1
  41a9ab:	outs   dx,BYTE PTR ds:[esi]
  41a9ac:	sahf   
  41a9ad:	adc    esi,esp
  41a9af:	rol    DWORD PTR [eax+0x6771ea15],1
  41a9b5:	sbb    cl,BYTE PTR [eax]
  41a9b7:	xchg   BYTE PTR es:[edx+0x74],bl
  41a9bb:	add    edx,DWORD PTR [edx+0x3b9c04c2]
  41a9c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9c2:	inc    eax
  41a9c3:	lods   eax,DWORD PTR ds:[esi]
  41a9c4:	in     eax,dx
  41a9c5:	pop    ebp
  41a9c6:	dec    esp
  41a9c7:	xor    eax,0xb2166d36
  41a9cc:	lds    eax,FWORD PTR [ebp+esi*4-0x13c2d628]
  41a9d3:	fcomp  DWORD PTR ds:0x9cb2e9d2
  41a9d9:	cmp    eax,0x765c243d
  41a9de:	shl    BYTE PTR [ecx],1
  41a9e0:	sar    BYTE PTR [ebp-0x54c2b65f],cl
  41a9e6:	lds    esp,FWORD PTR [edx]
  41a9e8:	js     0x41aa4b
  41a9ea:	xchg   ebp,eax
  41a9eb:	ficomp WORD PTR [ebx]
  41a9ed:	in     eax,dx
  41a9ee:	add    bh,BYTE PTR [esi+0x1a0698a1]
  41a9f4:	aad    0x79
  41a9f6:	pusha  
  41a9f7:	dec    edi
  41a9f8:	mov    cl,0xb6
  41a9fa:	gs shr bl,cl
  41a9fd:	je     0x41aa51
  41a9ff:	mov    ebx,0xaee79365
  41aa04:	test   eax,0x5f9a16cb
  41aa09:	mul    BYTE PTR [ecx+0x4e212d42]
  41aa0f:	xor    eax,0x6ba91674
  41aa14:	jmp    edi
  41aa16:	pop    ss
  41aa17:	mov    ch,BYTE PTR [edi+0x135c0335]
  41aa1d:	push   edx
  41aa1e:	jmp    0x2318:0xd38a6282
  41aa25:	fcomi  st,st(0)
  41aa27:	push   ss
  41aa28:	and    dh,ah
  41aa2a:	add    esp,ecx
  41aa2c:	cmp    eax,0xea2748b1
  41aa31:	test   DWORD PTR [ebp+eiz*1+0x5e],edx
  41aa35:	mov    bl,0xf4
  41aa37:	(bad)  
  41aa38:	cmp    ah,bh
  41aa3a:	or     eax,0xd050d6d1
  41aa3f:	push   ss
  41aa40:	mov    edx,0x31de1ced
  41aa45:	es push cs
  41aa47:	sub    ebx,DWORD PTR [esi]
  41aa49:	in     al,0x7e
  41aa4b:	cmp    DWORD PTR [ebp+0x9],eax
  41aa4e:	add    al,0x72
  41aa50:	mov    edx,0xc98ee04a
  41aa55:	addr16 adc dh,bl
  41aa58:	mov    ax,ds:0xe5e874fb
  41aa5e:	dec    ebp
  41aa5f:	and    eax,0x2e50eeb2
  41aa64:	imul   edi,DWORD PTR [eax],0xffffffb2
  41aa67:	aaa    
  41aa68:	inc    edx
  41aa69:	fprem1 
  41aa6b:	ins    BYTE PTR es:[edi],dx
  41aa6c:	inc    eax
  41aa6d:	in     al,dx
  41aa6e:	lods   al,BYTE PTR ds:[esi]
  41aa6f:	ret    
  41aa70:	jl     0x41a9f7
  41aa72:	pusha  
  41aa73:	and    al,0x73
  41aa75:	jl     0x41aa46
  41aa77:	(bad)  
  41aa78:	das    
  41aa79:	sahf   
  41aa7a:	inc    edx
  41aa7b:	sub    bl,BYTE PTR [ecx]
  41aa7d:	in     eax,dx
  41aa7e:	and    esi,ecx
  41aa80:	cld    
  41aa81:	sub    eax,0xb1adbd77
  41aa86:	and    al,0x4c
  41aa88:	mov    ah,0x38
  41aa8a:	push   ds
  41aa8b:	push   ebx
  41aa8c:	xchg   ah,cl
  41aa8e:	sub    ah,dl
  41aa90:	xor    bh,BYTE PTR [esi+0x68693561]
  41aa96:	xchg   edx,eax
  41aa97:	iret   
  41aa98:	int3   
  41aa99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa9a:	jnp    0x41aac7
  41aa9c:	sub    DWORD PTR [ecx-0x5c],esp
  41aa9f:	jbe    0x41aaf9
  41aaa1:	add    eax,esp
  41aaa3:	dec    edx
  41aaa4:	inc    ecx
  41aaa5:	pop    ebx
  41aaa6:	popf   
  41aaa7:	mov    ch,0x54
  41aaa9:	shl    DWORD PTR es:[edx],1
  41aaac:	xchg   ebp,eax
  41aaad:	inc    ebx
  41aaae:	fdivr  st(2),st
  41aab1:	jle    0x41aa75
  41aab3:	imul   edi,DWORD PTR [edi+0x32],0x6c
  41aab7:	mov    ds:0x337779e8,al
  41aabc:	add    BYTE PTR ds:0x1da5002,cl
  41aac2:	jp     0x41aaee
  41aac4:	cmp    esp,DWORD PTR [ebp-0x1df5893b]
  41aaca:	adc    BYTE PTR [ecx],dh
  41aacc:	add    eax,0xfef57597
  41aad1:	iret   
  41aad2:	data16 repnz mov BYTE PTR ss:[eax+esi*8+0x7059eb4c],ah
  41aadc:	(bad)
  41aadf:	aas    
  41aae0:	jg     0x41ab09
  41aae2:	fscale 
  41aae4:	enter  0xa886,0xb6
  41aae8:	jg     0x41ab5a
  41aaea:	test   eax,0xb41ce019
  41aaef:	scas   al,BYTE PTR es:[edi]
  41aaf0:	dec    edi
  41aaf1:	xchg   DWORD PTR [esi+0x3e],edx
  41aaf4:	shr    BYTE PTR [di-0x2d7a],1
  41aaf9:	adc    cl,BYTE PTR [edx+0x61]
  41aafc:	aad    0xb2
  41aafe:	fst    st(2)
  41ab00:	or     DWORD PTR [esi-0x788266b7],eax
  41ab06:	mov    dh,0x55
  41ab08:	aaa    
  41ab09:	aad    0x4c
  41ab0b:	aaa    
  41ab0c:	sahf   
  41ab0d:	arpl   WORD PTR [esi-0x38218863],bp
  41ab13:	adc    edi,esp
  41ab15:	mov    DWORD PTR [ebp-0x43],ecx
  41ab18:	repz lock lea edi,[esi+0x52]
  41ab1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab1e:	std    
  41ab1f:	mov    bh,0xb9
  41ab21:	mov    al,BYTE PTR [eax-0x166fd280]
  41ab27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab28:	fnstsw WORD PTR [edx+0x7e]
  41ab2b:	sbb    ecx,DWORD PTR [eax-0x57]
  41ab2e:	cwde   
  41ab2f:	pop    edx
  41ab30:	pop    eax
  41ab31:	ror    esi,cl
  41ab33:	mov    DWORD PTR [eax+ebx*2-0x3a],eax
  41ab37:	jp     0x41ab90
  41ab39:	pop    edx
  41ab3a:	stos   DWORD PTR es:[edi],eax
  41ab3b:	js     0x41ab76
  41ab3d:	add    BYTE PTR [ecx-0x7],dl
  41ab40:	inc    eax
  41ab41:	pop    esp
  41ab42:	pop    ss
  41ab43:	fwait
  41ab44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab45:	mov    bl,0x50
  41ab47:	and    ah,ah
  41ab49:	cli    
  41ab4a:	stc    
  41ab4b:	in     eax,0xc2
  41ab4d:	pushf  
  41ab4e:	inc    ebx
  41ab4f:	mov    eax,ds:0x10f0eca2
  41ab54:	add    bh,0x64
  41ab57:	imul   edx,esp,0x66c0cac8
  41ab5d:	cmp    BYTE PTR [ebp+0x5bd865d7],ah
  41ab63:	sub    al,0xb5
  41ab65:	js     0x41ab0d
  41ab67:	fs cmc 
  41ab69:	jo     0x41ab0c
  41ab6b:	mov    dh,0x17
  41ab6d:	add    edi,DWORD PTR [esp+ecx*1-0x5d]
  41ab71:	adc    eax,0xc32ee5c6
  41ab76:	jnp    0x41abdb
  41ab78:	jmp    0xe49d:0x75dad95d
  41ab7f:	jl     0x41ab61
  41ab81:	add    BYTE PTR ds:0x4d06fdc3,ch
  41ab87:	adc    dh,BYTE PTR [esi-0x4980e9ab]
  41ab8d:	rcr    BYTE PTR [ebx+0x4c],cl
  41ab90:	mov    ebx,0xf3428e1b
  41ab95:	pop    ecx
  41ab96:	ret    
  41ab97:	sahf   
  41ab98:	lods   eax,DWORD PTR ds:[esi]
  41ab99:	aaa    
  41ab9a:	sbb    BYTE PTR [esi-0x5a],0x1e
  41ab9e:	dec    eax
  41ab9f:	push   esi
  41aba0:	imul   esp,DWORD PTR [edx],0xbbbe53b2
  41aba6:	fs push esi
  41aba8:	cld    
  41aba9:	mov    esp,0xd4202b3e
  41abae:	dec    ecx
  41abaf:	fsub   DWORD PTR [eax]
  41abb1:	mov    ecx,0x3855f5c1
  41abb7:	fisttp QWORD PTR [ecx]
  41abb9:	ins    DWORD PTR es:[edi],dx
  41abba:	xor    eax,0xea61862d
  41abbf:	jl     0x41ac02
  41abc1:	fs lahf 
  41abc3:	xchg   edi,eax
  41abc4:	xchg   ecx,eax
  41abc5:	jmp    0xd9892dc6
  41abca:	mov    ebp,0xd08b676e
  41abcf:	push   esi
  41abd0:	push   es
  41abd1:	and    esp,DWORD PTR [ebp-0x1a7cc0ea]
  41abd7:	push   eax
  41abd8:	das    
  41abd9:	mov    esp,0xc44867fd
  41abde:	sbb    BYTE PTR [edx+ecx*2-0x3a6662b0],al
  41abe5:	adc    al,cl
  41abe7:	repnz dec edx
  41abe9:	adc    eax,0xbba6c018
  41abee:	push   es
  41abef:	sbb    eax,ecx
  41abf1:	and    eax,0xd00163de
  41abf6:	cmp    eax,0xf5e48c8d
  41abfb:	fimul  WORD PTR [edx+eiz*4]
  41abfe:	or     eax,edx
  41ac00:	addr16 push 0x26
  41ac03:	xchg   ebp,eax
  41ac04:	dec    ebx
  41ac05:	idiv   BYTE PTR [esi]
  41ac07:	pop    ds
  41ac08:	adc    eax,DWORD PTR [ecx]
  41ac0a:	test   al,0x1a
  41ac0c:	add    eax,0x802e3e72
  41ac11:	inc    edi
  41ac12:	pop    ebp
  41ac13:	aas    
  41ac14:	cld    
  41ac15:	jo     0x41abd1
  41ac17:	pop    eax
  41ac18:	cld    
  41ac19:	sub    al,0xb3
  41ac1b:	xchg   BYTE PTR [eax-0x49],cl
  41ac1e:	jbe    0x41abff
  41ac20:	int3   
  41ac21:	xor    ebp,eax
  41ac23:	jae    0x41abe5
  41ac25:	inc    edx
  41ac26:	scas   al,BYTE PTR es:[edi]
  41ac27:	cld    
  41ac28:	and    ebp,DWORD PTR [eax]
  41ac2a:	shr    DWORD PTR [eax-0x62],1
  41ac2d:	sbb    ebx,0xe843c3ad
  41ac33:	mul    DWORD PTR [edi]
  41ac35:	in     al,dx
  41ac36:	imul   ecx,esp,0x4a
  41ac39:	mov    ch,0xe6
  41ac3b:	iret   
  41ac3c:	cdq    
  41ac3d:	lock sub al,0xb3
  41ac40:	iret   
  41ac41:	and    eax,0xaf462725
  41ac46:	xor    BYTE PTR [ebx+0x75],dl
  41ac49:	mov    DWORD PTR [ecx-0x13ba98ce],esp
  41ac4f:	jbe    0x41acbf
  41ac51:	stos   BYTE PTR es:[edi],al
  41ac52:	ins    BYTE PTR es:[edi],dx
  41ac53:	ret    
  41ac54:	dec    esp
  41ac55:	xor    DWORD PTR [eax-0x293a91bf],edi
  41ac5b:	sbb    eax,0xfe1cf533
  41ac60:	outs   dx,DWORD PTR ds:[esi]
  41ac61:	mov    ecx,0x8ee6b067
  41ac66:	imul   esp,DWORD PTR [edi],0x989378fa
  41ac6c:	xchg   edi,eax
  41ac6d:	push   ss
  41ac6e:	pop    esi
  41ac6f:	push   ebx
  41ac70:	pop    esi
  41ac72:	jecxz  0x41ac12
  41ac74:	loopne 0x41acea
  41ac76:	pop    esp
  41ac77:	jmp    0xaaeeb49d
  41ac7c:	adc    BYTE PTR ds:0x5a6bae83,bh
  41ac82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac83:	mov    edx,DWORD PTR [esi]
  41ac85:	imul   esi,DWORD PTR [ecx+edi*1-0x77],0x43de1479
  41ac8d:	xchg   edx,eax
  41ac8e:	pop    ebx
  41ac8f:	mov    ebx,0xafa0e0b1
  41ac94:	stos   BYTE PTR es:[edi],al
  41ac95:	or     ebp,ebx
  41ac97:	enter  0xa9df,0xe9
  41ac9b:	pop    DWORD PTR [esi]
  41ac9d:	out    dx,eax
  41ac9e:	or     dh,bh
  41aca0:	xlat   BYTE PTR ds:[ebx]
  41aca1:	or     ah,cl
  41aca3:	xor    eax,0x8d25863c
  41aca8:	out    0x28,al
  41acaa:	leave  
  41acab:	data16 mov dh,0x85
  41acae:	popf   
  41acaf:	dec    esi
  41acb0:	clc    
  41acb1:	std    
  41acb2:	call   0x6f33:0x515a9835
  41acb9:	scas   eax,DWORD PTR es:[edi]
  41acba:	and    BYTE PTR [esi+0x4f0ca3f9],0xd0
  41acc1:	push   ebx
  41acc2:	loope  0x41acfc
  41acc4:	or     al,0x57
  41acc6:	xor    dh,BYTE PTR [edi+0x52]
  41acc9:	jecxz  0x41ac6e
  41accb:	(bad)
  41accf:	mov    WORD PTR [ebp-0x39ebe1e4],fs
  41acd5:	into   
  41acd6:	cdq    
  41acd7:	daa    
  41acd8:	mov    al,ds:0x9a09dc0f
  41acdd:	aaa    
  41acde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acdf:	and    ebp,DWORD PTR [edi-0x2c]
  41ace2:	cmp    DWORD PTR [ecx+0xbba5625],edi
  41ace8:	clc    
  41ace9:	push   eax
  41acea:	push   0xffffffe6
  41acec:	scas   al,BYTE PTR es:[edi]
  41aced:	jg     0x41ace1
  41acef:	cwde   
  41acf0:	add    al,0xa6
  41acf2:	push   ds
  41acf3:	(bad)  
  41acf5:	push   ebx
  41acf6:	add    cl,BYTE PTR [esi-0x26]
  41acf9:	cmp    ebx,DWORD PTR [esp+eax*8+0x7d]
  41acfd:	inc    esi
  41acfe:	push   es
  41acff:	(bad)  
  41ad00:	(bad)  
  41ad01:	xor    ebp,esp
  41ad03:	test   DWORD PTR [edi+0x3c],0x8c882275
  41ad0a:	test   eax,0xc794d069
  41ad0f:	in     al,0x40
  41ad11:	push   0x351b4a5f
  41ad16:	mov    esp,DWORD PTR [eax-0x4b]
  41ad19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad1a:	or     eax,0xca2edb19
  41ad1f:	in     al,dx
  41ad20:	xchg   BYTE PTR [ebp-0x4f],ah
  41ad23:	retf   0x79b8
  41ad26:	dec    edi
  41ad27:	dec    ecx
  41ad28:	pop    edx
  41ad29:	xchg   DWORD PTR [esi],ecx
  41ad2b:	mov    esi,0x8bb9c132
  41ad30:	inc    esp
  41ad31:	sub    ecx,DWORD PTR [ebx]
  41ad33:	push   ecx
  41ad34:	jae    0x41ad76
  41ad36:	lds    eax,FWORD PTR [esi]
  41ad38:	pop    ebx
  41ad39:	leave  
  41ad3a:	cmp    DWORD PTR fs:[edi+edx*8-0x6],esp
  41ad3f:	push   ds
  41ad40:	inc    edx
  41ad41:	push   es
  41ad42:	lea    ecx,[ecx]
  41ad44:	xchg   esp,eax
  41ad45:	in     eax,0xb9
  41ad47:	push   eax
  41ad48:	jl     0x41ace6
  41ad4a:	xchg   BYTE PTR [edx],ch
  41ad4c:	lea    esi,[edx+0x75]
  41ad4f:	push   0xb93fc436
  41ad54:	mov    al,0x67
  41ad56:	dec    ebx
  41ad57:	sbb    eax,DWORD PTR [edi+edx*1+0x3ec7ecdd]
  41ad5e:	mov    cl,0x53
  41ad60:	sar    BYTE PTR [esi+0x7b],cl
  41ad63:	mov    eax,0xa13cb477
  41ad68:	inc    esp
  41ad69:	pop    edx
  41ad6a:	(bad)  
  41ad6b:	jp     0x41ad5d
  41ad6d:	pop    esp
  41ad6e:	int    0xd0
  41ad70:	pop    edx
  41ad71:	loop   0x41add5
  41ad73:	mov    cl,0xc3
  41ad75:	or     ah,cl
  41ad77:	(bad)  
  41ad78:	lods   al,BYTE PTR ds:[esi]
  41ad79:	xchg   BYTE PTR [eax],dh
  41ad7b:	and    al,0xa5
  41ad7d:	scas   al,BYTE PTR es:[edi]
  41ad7e:	cwde   
  41ad7f:	ins    DWORD PTR es:[edi],dx
  41ad80:	lods   al,BYTE PTR cs:[esi]
  41ad82:	push   ebp
  41ad83:	jno    0x41ad53
  41ad85:	dec    ecx
  41ad86:	pop    ds
  41ad87:	xor    dl,cl
  41ad89:	push   es
  41ad8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad8b:	aaa    
  41ad8c:	xor    esi,DWORD PTR [ebx-0x2bc97fd8]
  41ad92:	xor    al,0xca
  41ad94:	adc    eax,0xf6e51694
  41ad99:	lods   al,BYTE PTR ds:[esi]
  41ad9a:	(bad)  
  41ad9c:	cmc    
  41ad9d:	mov    bh,0xb2
  41ad9f:	push   ebx
  41ada0:	repnz ror dh,1
  41ada3:	sbb    edx,eax
  41ada5:	lds    esi,FWORD PTR [esi-0x7a8e6937]
  41adab:	push   cs
  41adac:	idiv   DWORD PTR [edx+0x43]
  41adaf:	retf   0x9cf
  41adb2:	(bad)  
  41adb4:	es push ebp
  41adb6:	sub    al,0x28
  41adb8:	out    dx,eax
  41adb9:	xchg   ecx,eax
  41adba:	push   esp
  41adbb:	jle    0x41ae02
  41adbd:	or     ah,BYTE PTR [edx]
  41adbf:	lods   eax,DWORD PTR ds:[esi]
  41adc0:	xor    eax,0x5deb8598
  41adc5:	arpl   WORD PTR [ebp+edx*8-0x80],bx
  41adc9:	mov    eax,0x75ba8a69
  41adce:	cs int 0x3d
  41add1:	jmp    FWORD PTR [edi-0x633c344f]
  41add7:	mov    dh,0xc0
  41add9:	stos   DWORD PTR es:[edi],eax
  41adda:	and    DWORD PTR [ebx],0xe24211d8
  41ade0:	jmp    FWORD PTR [ebp+0x48]
  41ade3:	in     al,0x77
  41ade5:	xor    edi,DWORD PTR [edx]
  41ade7:	enter  0xaeb0,0x9
  41adeb:	cmc    
  41adec:	dec    BYTE PTR [ebp+0x62]
  41adef:	push   edi
  41adf0:	vmread DWORD PTR [eax+0x4c3285bf],eax
  41adf7:	in     eax,dx
  41adf8:	pop    edi
  41adf9:	xor    dl,BYTE PTR [edx+edx*8-0x3bfc17bf]
  41ae00:	enter  0x2374,0x67
  41ae04:	xor    cl,dh
  41ae06:	fdivr  QWORD PTR [esi]
  41ae08:	shl    BYTE PTR [edi-0x4a],0x23
  41ae0c:	sbb    eax,0xcc2e201b
  41ae11:	test   edi,esp
  41ae13:	xchg   ecx,eax
  41ae14:	dec    ecx
  41ae15:	dec    eax
  41ae16:	mov    ebp,edi
  41ae18:	dec    edx
  41ae19:	mov    al,ds:0xfe9bae7d
  41ae1e:	daa    
  41ae1f:	adc    DWORD PTR ds:0xe7862b34,esi
  41ae25:	nop
  41ae26:	xchg   esi,eax
  41ae27:	mov    edi,0x2aa202c9
  41ae2c:	mov    edx,esi
  41ae2e:	ins    BYTE PTR es:[edi],dx
  41ae2f:	inc    edx
  41ae30:	(bad)
  41ae33:	and    eax,0xcaf07aa3
  41ae38:	cmove  ecx,DWORD PTR [edi+0x5cbb5fba]
  41ae3f:	push   0xffffffd8
  41ae41:	pop    ebx
  41ae42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae43:	sbb    DWORD PTR [ebp+0x53],0xffffffae
  41ae47:	loopne 0x41ae71
  41ae49:	or     bh,BYTE PTR [ecx+edx*4+0x77]
  41ae4d:	scas   eax,DWORD PTR es:[edi]
  41ae4e:	mov    al,ds:0x8313f845
  41ae53:	mov    esp,0xddf669e2
  41ae58:	push   esp
  41ae59:	enter  0x34ea,0xdd
  41ae5d:	out    dx,eax
  41ae5e:	mov    edi,0x4635a5e7
  41ae63:	mov    ah,0xed
  41ae65:	sbb    bl,dl
  41ae67:	add    DWORD PTR [edx],ecx
  41ae69:	daa    
  41ae6a:	xor    al,0xde
  41ae6c:	gs retf 
  41ae6e:	mov    esi,0xd57c0935
  41ae73:	jle    0x41ae11
  41ae75:	outs   dx,DWORD PTR ds:[esi]
  41ae76:	hlt    
  41ae77:	(bad)  
  41ae78:	enter  0xf94b,0xcb
  41ae7c:	push   esi
  41ae7d:	(bad)  
  41ae7e:	scas   eax,DWORD PTR es:[edi]
  41ae7f:	xchg   BYTE PTR [edx-0x1e],bl
  41ae82:	pop    ss
  41ae83:	inc    ebx
  41ae84:	clc    
  41ae85:	addr16 dec ecx
  41ae87:	mov    ch,0x64
  41ae89:	xchg   DWORD PTR [bx],eax
  41ae8c:	adc    bl,BYTE PTR [eax-0x7d9e3455]
  41ae92:	add    BYTE PTR [esi],cl
  41ae94:	dec    esi
  41ae95:	push   0x1e0813c8
  41ae9a:	shl    DWORD PTR [ecx],cl
  41ae9c:	jp     0x41ae29
  41ae9e:	test   esi,edi
  41aea0:	or     ebx,DWORD PTR [edi]
  41aea2:	je     0x41aec7
  41aea4:	hlt    
  41aea5:	add    edi,ecx
  41aea7:	adc    eax,0x5fa4ceb8
  41aeac:	and    eax,DWORD PTR [esi]
  41aeae:	fucom  st(2)
  41aeb0:	cmp    DWORD PTR [esi+0x1c],ebx
  41aeb3:	outs   dx,DWORD PTR ds:[esi]
  41aeb4:	scas   al,BYTE PTR es:[edi]
  41aeb5:	loope  0x41ae38
  41aeb7:	pop    ss
  41aeb8:	dec    edi
  41aeb9:	pop    esp
  41aeba:	cmp    BYTE PTR [ebp+eiz*4+0x78],ch
  41aebe:	mov    edi,DWORD PTR [ebx+0x31b6ab29]
  41aec4:	aam    0xfb
  41aec6:	mov    al,0xb9
  41aec8:	fs in  al,0xe4
  41aecb:	mov    eax,0xd904181d
  41aed0:	imul   esi,DWORD PTR [eax+0x64d4099d],0x270d8065
  41aeda:	in     eax,0xf4
  41aedc:	jmp    0x41af3a
  41aede:	push   edi
  41aedf:	scas   eax,DWORD PTR es:[edi]
  41aee0:	xor    eax,0x27fc2bb5
  41aee5:	scas   eax,DWORD PTR es:[edi]
  41aee6:	add    eax,eax
  41aee8:	icebp  
  41aee9:	xor    ch,BYTE PTR [ecx-0x4f]
  41aeec:	sbb    ebx,DWORD PTR [ebx-0x6c]
  41aeef:	popa   
  41aef0:	int3   
  41aef1:	push   es
  41aef2:	ffreep st(3)
  41aef4:	loopne 0x41af22
  41aef6:	mov    dl,0xb5
  41aef8:	repz mov bl,0xcb
  41aefb:	mov    cs,WORD PTR [eax]
  41aefd:	push   es
  41aefe:	mov    gs,WORD PTR [edi]
  41af00:	and    cl,BYTE PTR [ebx+edx*2-0x5fbb89b9]
  41af07:	je     0x41af5f
  41af09:	mov    bh,0x81
  41af0b:	cli    
  41af0c:	cwde   
  41af0d:	popa   
  41af0e:	bnd jmp 0x41af15
  41af11:	mov    ecx,0x2c8fe3e4
  41af16:	xchg   ebp,eax
  41af17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af18:	scas   al,BYTE PTR es:[edi]
  41af19:	jecxz  0x41aee0
  41af1b:	(bad)  
  41af1c:	(bad)  
  41af1d:	and    al,0xb
  41af1f:	sbb    eax,0xfcf4ce04
  41af24:	mov    ch,dl
  41af26:	pop    eax
  41af27:	hlt    
  41af28:	jae    0x41af13
  41af2a:	mov    ah,0xf0
  41af2c:	push   esi
  41af2d:	mov    dh,0x4c
  41af2f:	xor    DWORD PTR [ebp+0x10],esi
  41af32:	outs   dx,BYTE PTR ds:[esi]
  41af33:	mov    WORD PTR [edi-0x15],ss
  41af36:	test   BYTE PTR [edx+edx*4],bh
  41af39:	gs push esi
  41af3b:	int3   
  41af3c:	mov    eax,0x79ee959a
  41af41:	xchg   DWORD PTR [ecx-0x6],ebp
  41af44:	mov    dh,0x9d
  41af46:	and    eax,0x1bc3a2ad
  41af4b:	ins    BYTE PTR es:[edi],dx
  41af4c:	in     al,0xcd
  41af4e:	dec    esi
  41af4f:	jmp    0xbf13:0x704370bc
  41af56:	or     eax,0xd3587fd8
  41af5b:	xchg   DWORD PTR [edi+eax*2+0x398c395b],esi
  41af62:	mov    edi,0x4a45c207
  41af67:	fst    DWORD PTR [eax+0x6f58a289]
  41af6d:	mov    eax,0xd49347af
  41af72:	mov    edx,0x23de0a93
  41af77:	fisttp WORD PTR [esi]
  41af79:	popf   
  41af7a:	lea    esp,[ebp+0x34a381b5]
  41af80:	fisttp DWORD PTR [ebx]
  41af82:	jae    0x41af06
  41af84:	or     ebx,ebp
  41af86:	jne    0x41af49
  41af88:	test   edx,edi
  41af8a:	pushf  
  41af8b:	mov    ds:0x6af88d84,eax
  41af90:	test   al,0x93
  41af92:	or     eax,edx
  41af94:	lock sub al,0x74
  41af97:	mov    WORD PTR [ebp-0x4d51afdb],ds
  41af9d:	jmp    0x41afc0
  41af9f:	lahf   
  41afa0:	sbb    al,0xaa
  41afa2:	outs   dx,BYTE PTR ds:[esi]
  41afa3:	ss push ebp
  41afa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afa6:	mov    edi,0x20e0da27
  41afab:	sbb    bl,BYTE PTR [esi+0x57602caa]
  41afb1:	jbe    0x41af4f
  41afb3:	or     BYTE PTR [eax],al
  41afb5:	xchg   esp,eax
  41afb6:	nop
  41afb7:	mov    eax,ds:0xf395d417
  41afbc:	add    bl,ah
  41afbe:	ins    DWORD PTR es:[edi],dx
  41afbf:	pop    ds
  41afc0:	ins    BYTE PTR es:[edi],dx
  41afc1:	fsubr  st,st(4)
  41afc3:	adc    dl,bh
  41afc5:	in     eax,dx
  41afc6:	add    dh,dh
  41afc8:	ins    DWORD PTR es:[edi],dx
  41afc9:	out    dx,al
  41afca:	jmp    DWORD PTR [ecx+0x4]
  41afcd:	repnz push ebp
  41afcf:	inc    edx
  41afd0:	and    al,0x8e
  41afd2:	ret    
  41afd3:	pop    eax
  41afd4:	test   DWORD PTR ds:0x8de72a10,0x38e01bb9
  41afde:	pop    esi
  41afdf:	aas    
  41afe0:	cmp    al,BYTE PTR [edx]
  41afe2:	dec    esi
  41afe3:	adc    eax,0x441b6434
  41afe8:	sbb    ebp,DWORD PTR ds:0xa6ea240e
  41afee:	nop
  41afef:	(bad)  
  41aff1:	sub    BYTE PTR [esi-0x2c],bl
  41aff4:	mov    edx,0x49a93216
  41aff9:	xchg   esi,eax
  41affa:	jo     0x41b061
  41affc:	stc    
  41affd:	mov    al,0xe2
  41afff:	mov    ch,cl
  41b001:	mov    edi,0x759ca5ae
  41b006:	test   DWORD PTR [edx-0x25],edi
  41b009:	stc    
  41b00a:	inc    eax
  41b00b:	mov    cl,0x58
  41b00d:	xor    ch,BYTE PTR [ecx-0x4dd2a160]
  41b013:	or     edi,0xffffffcf
  41b016:	clc    
  41b017:	sub    al,0x24
  41b019:	in     eax,0x9c
  41b01b:	dec    esp
  41b01c:	popa   
  41b01d:	sub    eax,0xffc56ac7
  41b022:	mov    ds:0xbeb35aa5,al
  41b027:	das    
  41b028:	aam    0x18
  41b02a:	push   ebp
  41b02b:	dec    edx
  41b02c:	mov    dh,BYTE PTR [edx+0x3f]
  41b02f:	lahf   
  41b030:	in     al,0x75
  41b032:	mov    bh,0xfb
  41b034:	test   al,0x31
  41b036:	std    
  41b037:	pop    edi
  41b038:	ror    BYTE PTR ds:0xce114f0f,0x9e
  41b03f:	lock call 0x5ff7:0x332ba0bc
  41b047:	mov    fs,WORD PTR [edi+0x3f]
  41b04a:	xor    edi,DWORD PTR [edi-0x3d]
  41b04d:	stos   DWORD PTR es:[edi],eax
  41b04e:	stos   DWORD PTR es:[edi],eax
  41b04f:	cmp    bl,ah
  41b051:	sub    dl,BYTE PTR [esi+ecx*8]
  41b054:	pop    es
  41b055:	les    ebp,FWORD PTR [edx]
  41b057:	cld    
  41b058:	ins    DWORD PTR es:[edi],dx
  41b059:	jae    0x41b0a7
  41b05b:	mov    ds:0x412a05ba,eax
  41b060:	cld    
  41b061:	inc    ebx
  41b062:	lds    ebp,FWORD PTR es:[ebx-0x428ddf50]
  41b069:	push   ecx
  41b06a:	lods   al,BYTE PTR ds:[esi]
  41b06b:	jae    0x41b0bc
  41b06d:	cmp    eax,0x39da7293
  41b072:	rol    DWORD PTR [ecx-0x26],1
  41b075:	repnz retf 
  41b077:	ja     0x41b031
  41b079:	push   ds
  41b07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b07b:	and    DWORD PTR [eax],esi
  41b07d:	std    
  41b07e:	mov    esi,0x789c6fd9
  41b083:	test   al,0x72
  41b085:	ins    DWORD PTR es:[edi],dx
  41b086:	xchg   BYTE PTR [edi],al
  41b088:	dec    edi
  41b089:	mov    eax,0x53a3781e
  41b08e:	push   edi
  41b08f:	mov    edi,0xc3ccc0d8
  41b094:	cmp    al,0x30
  41b096:	inc    eax
  41b097:	dec    ebx
  41b098:	add    eax,0xd8b7046c
  41b09d:	stos   DWORD PTR es:[edi],eax
  41b09e:	mov    eax,0x13bf337f
  41b0a3:	jmp    0x41b077
  41b0a5:	or     eax,0x9b0288d4
  41b0aa:	sbb    DWORD PTR [ecx],ebp
  41b0ac:	sub    al,0x78
  41b0ae:	adc    eax,0x52b0d174
  41b0b3:	pop    ecx
  41b0b4:	xchg   esi,eax
  41b0b5:	mov    eax,0x8c4ee370
  41b0ba:	stc    
  41b0bb:	push   eax
  41b0bc:	test   DWORD PTR [eax-0x32],edx
  41b0bf:	dec    edi
  41b0c0:	rcl    ebx,cl
  41b0c2:	or     DWORD PTR [eax],ecx
  41b0c4:	sbb    DWORD PTR ds:0x7f1f1ae5,esp
  41b0ca:	pop    ebx
  41b0cb:	and    dl,dl
  41b0cd:	jge    0x41b090
  41b0cf:	xchg   edi,eax
  41b0d0:	xchg   ebx,eax
  41b0d1:	jmp    FWORD PTR [edx-0xbbf8074]
  41b0d7:	fcom   QWORD PTR [edi]
  41b0d9:	fcomp  QWORD PTR [edi+edx*4]
  41b0dc:	dec    ebp
  41b0dd:	adc    edx,DWORD PTR [ecx-0x7e99a353]
  41b0e3:	add    bl,BYTE PTR [edx-0x6e]
  41b0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0e8:	aaa    
  41b0e9:	cwde   
  41b0ea:	push   ebx
  41b0eb:	xor    al,0x57
  41b0ed:	jle    0x41b0fe
  41b0ef:	(bad)  
  41b0f1:	dec    ebx
  41b0f2:	inc    ecx
  41b0f3:	shl    edx,cl
  41b0f5:	and    eax,0x66bdcb1c
  41b0fa:	cld    
  41b0fb:	(bad)  
  41b0fd:	xor    cl,dl
  41b0ff:	pop    eax
  41b100:	ja     0x41b0ee
  41b102:	jecxz  0x41b0d1
  41b104:	and    DWORD PTR [ebx-0x2eefcacf],ebp
  41b10a:	repnz cdq 
  41b10c:	inc    edx
  41b10d:	pop    ss
  41b10e:	push   0xca835851
  41b113:	cmp    DWORD PTR [ebx],esp
  41b115:	dec    eax
  41b116:	jp     0x41b0ec
  41b118:	fdivr  QWORD PTR [bp+di+0x13f5]
  41b11d:	dec    esi
  41b11e:	cli    
  41b11f:	loope  0x41b163
  41b121:	std    
  41b122:	cmp    eax,0x7a83cef8
  41b127:	icebp  
  41b128:	jmp    0xbd76:0x9e4564b4
  41b12f:	jl     0x41b10c
  41b131:	lods   eax,DWORD PTR ds:[esi]
  41b132:	jb     0x41b18e
  41b134:	xor    eax,0xc9cdfb8e
  41b139:	test   eax,0x4306d141
  41b13e:	mov    bl,0x5d
  41b140:	(bad)  
  41b142:	adc    DWORD PTR [edi],edx
  41b144:	(bad)  
  41b145:	jne    0x41b1ad
  41b147:	stos   BYTE PTR es:[edi],al
  41b148:	push   0x51e1f99c
  41b14d:	outs   dx,BYTE PTR ds:[esi]
  41b14e:	mov    edx,0x19ea1801
  41b153:	out    dx,eax
  41b154:	cmp    al,BYTE PTR [edi]
  41b156:	repz repnz mov eax,0x7f034cb6
  41b15d:	sar    BYTE PTR [ebp+eax*4+0x36889539],cl
  41b164:	call   0x8020:0x3e0d59ec
  41b16b:	lods   eax,DWORD PTR ds:[esi]
  41b16c:	or     BYTE PTR [ebp+0x6c],ch
  41b16f:	cmp    eax,DWORD PTR [edx+edi*4-0x5f]
  41b173:	and    ch,BYTE PTR [ebx]
  41b175:	cmp    al,0x66
  41b177:	sub    al,0xbd
  41b179:	sbb    al,0x5b
  41b17b:	es int 0xf6
  41b17e:	push   cs
  41b17f:	es in  eax,dx
  41b181:	dec    ecx
  41b182:	xor    bl,ah
  41b184:	dec    edx
  41b185:	jl     0x41b198
  41b187:	in     eax,dx
  41b188:	icebp  
  41b189:	into   
  41b18a:	push   ebp
  41b18b:	mov    ebx,0x380fdc98
  41b190:	stc    
  41b191:	sub    DWORD PTR [edi-0x53a3793f],0x33
  41b198:	(bad)  
  41b199:	cld    
  41b19a:	scas   eax,DWORD PTR es:[edi]
  41b19b:	add    ah,BYTE PTR [esp+ebx*4]
  41b19e:	push   0x2c
  41b1a0:	jns    0x41b1bf
  41b1a2:	or     bh,BYTE PTR [edx-0x1d]
  41b1a5:	mov    esp,es
  41b1a7:	mov    ah,0xa2
  41b1a9:	inc    edi
  41b1aa:	ret    
  41b1ab:	in     al,dx
  41b1ac:	or     edx,DWORD PTR [esi]
  41b1ae:	xchg   DWORD PTR [ebp+0x7029d9e5],esi
  41b1b4:	jg     0x41b1ba
  41b1b6:	mov    ecx,0x2b874509
  41b1bb:	(bad)  
  41b1bc:	add    al,0x66
  41b1be:	popf   
  41b1bf:	je     0x41b1b6
  41b1c1:	sar    DWORD PTR [ebp+0x62],cl
  41b1c4:	ss sar edx,0x4a
  41b1c8:	(bad)  
  41b1c9:	jb     0x41b1ad
  41b1cb:	ret    
  41b1cc:	aad    0xcb
  41b1ce:	int    0x72
  41b1d0:	out    0xf4,eax
  41b1d2:	imul   eax,DWORD PTR [ebp-0x1e9c51ad],0xffffffd1
  41b1d9:	xor    esi,DWORD PTR [eax]
  41b1db:	mov    ah,0xd3
  41b1dd:	mov    dh,0xa
  41b1df:	jo     0x41b166
  41b1e1:	mov    bl,0x22
  41b1e3:	(bad)  [ebx]
  41b1e5:	mov    esp,0x342793a5
  41b1ea:	shr    BYTE PTR [eax+ecx*2],1
  41b1ed:	inc    ecx
  41b1ee:	ds pop esp
  41b1f0:	outs   dx,DWORD PTR ds:[esi]
  41b1f1:	data16 shl BYTE PTR [eax],1
  41b1f4:	cs mov ebp,0xf4ee912
  41b1fa:	test   BYTE PTR [ebp-0x7d62ecd7],ah
  41b200:	ret    
  41b201:	call   0x3973aa48
  41b206:	scas   al,BYTE PTR es:[edi]
  41b207:	fiadd  DWORD PTR [esp-0x36]
  41b20b:	jmp    0x511e:0x9e387d3d
  41b212:	mov    esi,DWORD PTR [ebp-0x27]
  41b215:	test   al,0x8b
  41b217:	(bad)  
  41b218:	dec    ecx
  41b219:	outs   dx,BYTE PTR ds:[esi]
  41b21a:	jo     0x41b1c6
  41b21c:	push   0x7c
  41b21e:	rol    DWORD PTR [edx-0x588a687c],0xbc
  41b225:	pop    es
  41b226:	in     eax,0xb7
  41b228:	rcr    DWORD PTR [ebx],cl
  41b22a:	jb     0x41b244
  41b22c:	clc    
  41b22d:	cmp    eax,0xf44e2399
  41b232:	lods   al,BYTE PTR ds:[esi]
  41b233:	mov    ds,WORD PTR [esi-0x81972cd]
  41b239:	mov    bl,0xa7
  41b23b:	and    DWORD PTR [ebp+edi*8+0x1e],0xffffffc6
  41b240:	or     eax,0xe66f1795
  41b245:	and    al,0xf2
  41b247:	and    DWORD PTR [edi],edi
  41b249:	mov    eax,0xd79eddf5
  41b24e:	mov    ch,0x81
  41b250:	xchg   esp,eax
  41b251:	xor    eax,0x4104db45
  41b256:	out    0x89,eax
  41b258:	js     0x41b2b6
  41b25a:	mov    edx,0xf60a20e3
  41b25f:	fstp   QWORD PTR [ecx]
  41b261:	sbb    BYTE PTR [ecx+0x12],ah
  41b264:	pop    ss
  41b265:	inc    edx
  41b266:	xor    DWORD PTR [esp+edx*8+0x62cd1ec2],0x33625195
  41b271:	xchg   DWORD PTR [ebx],ecx
  41b273:	pop    es
  41b274:	ins    BYTE PTR es:[edi],dx
  41b275:	in     al,0x8a
  41b277:	into   
  41b278:	cdq    
  41b279:	pop    ds
  41b27a:	and    ebx,DWORD PTR [ebp-0x22]
  41b27d:	pusha  
  41b27e:	and    al,0xef
  41b280:	push   esp
  41b281:	jmp    0xc9b6cc92
  41b286:	or     DWORD PTR [edx-0x76],ecx
  41b289:	jl     0x41b23f
  41b28b:	das    
  41b28c:	inc    edi
  41b28d:	adc    eax,edx
  41b28f:	adc    al,0x5f
  41b291:	jno    0x41b278
  41b293:	cmp    BYTE PTR [esi],ah
  41b295:	ds pushf 
  41b297:	cmp    al,0xd3
  41b299:	inc    esi
  41b29a:	bound  esp,QWORD PTR [ebp-0x34]
  41b29d:	jecxz  0x41b24d
  41b29f:	icebp  
  41b2a0:	xlat   BYTE PTR ds:[ebx]
  41b2a1:	push   edx
  41b2a2:	je     0x41b290
  41b2a4:	inc    esi
  41b2a5:	nop
  41b2a6:	retf   0xd690
  41b2a9:	in     al,0x79
  41b2ab:	imul   edi,DWORD PTR [ecx+0x78952f45],0x63
  41b2b2:	ds (bad) 
  41b2b4:	mov    esi,ebx
  41b2b6:	repnz dec edx
  41b2b8:	cs xor cl,al
  41b2bb:	pop    ss
  41b2bc:	call   0xcffb:0x9198c3ad
  41b2c3:	jge    0x41b265
  41b2c5:	and    DWORD PTR [eax+0x4f],ebx
  41b2c8:	xchg   ecx,eax
  41b2c9:	add    al,0x92
  41b2cb:	jno    0x41b2f8
  41b2cd:	fld    QWORD PTR [esi+0x13]
  41b2d0:	push   ebx
  41b2d1:	jp     0x41b2b8
  41b2d3:	inc    edx
  41b2d4:	or     ah,BYTE PTR [edi]
  41b2d6:	bnd jns 0x41b332
  41b2d9:	add    DWORD PTR ds:0x1ba6f532,ebx
  41b2df:	ins    DWORD PTR es:[edi],dx
  41b2e0:	int3   
  41b2e1:	sbb    BYTE PTR [esi-0x605c8746],dh
  41b2e7:	add    esp,DWORD PTR [ecx+ecx*2+0x47]
  41b2eb:	imul   edx,DWORD PTR [esp+eiz*4+0x54],0x6d3286cb
  41b2f3:	jae    0x41b29c
  41b2f5:	and    eax,0x9a439339
  41b2fa:	fwait
  41b2fb:	ss dec edi
  41b2fd:	ror    BYTE PTR [edx],1
  41b2ff:	js     0x41b30c
  41b301:	mov    eax,0x49150196
  41b306:	popf   
  41b307:	dec    esp
  41b308:	or     DWORD PTR [ecx],ecx
  41b30a:	std    
  41b30b:	mov    edx,0xb52ec13a
  41b310:	pop    edx
  41b311:	cmp    ebp,DWORD PTR fs:0x623707ad
  41b318:	loop   0x41b332
  41b31a:	sbb    esi,eax
  41b31c:	push   0x2e8c6cad
  41b321:	scas   eax,DWORD PTR es:[edi]
  41b322:	cmp    DWORD PTR [edx],esi
  41b324:	xchg   ebx,eax
  41b325:	mov    esp,0x2027557
  41b32a:	pop    edi
  41b32b:	nop
  41b32c:	adc    al,BYTE PTR [ebx-0x65]
  41b32f:	pop    ss
  41b330:	(bad)  
  41b331:	aas    
  41b332:	aad    0x83
  41b334:	std    
  41b335:	xchg   edi,eax
  41b336:	sub    edi,eax
  41b338:	add    al,BYTE PTR ds:0x379527a4
  41b33e:	retf   
  41b33f:	or     edx,ecx
  41b341:	hlt    
  41b342:	out    0xec,al
  41b344:	test   DWORD PTR [ebx-0x4b],edx
  41b347:	std    
  41b348:	jbe    0x41b3c9
  41b34a:	cmp    DWORD PTR [eax+0x54],ebx
  41b34d:	jbe    0x41b2e9
  41b34f:	dec    edx
  41b350:	and    dh,dl
  41b352:	cs pop edx
  41b354:	pop    esi
  41b355:	sbb    ebp,DWORD PTR [edi-0x168b6a53]
  41b35b:	pop    ds
  41b35c:	mov    DWORD PTR ss:[ecx+0x62ccc8f3],esp
  41b363:	push   ss
  41b364:	push   edi
  41b365:	(bad)  
  41b366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b367:	adc    ecx,DWORD PTR [edx-0x2d]
  41b36a:	pop    esp
  41b36b:	je     0x41b32e
  41b36d:	inc    esi
  41b36e:	inc    ebx
  41b36f:	(bad)  
  41b370:	mov    ecx,0x9747347
  41b375:	pop    edx
  41b376:	xlat   BYTE PTR ds:[ebx]
  41b377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b378:	cwde   
  41b379:	adc    BYTE PTR [edi],bh
  41b37b:	or     ebp,DWORD PTR [edx+0x5ca7f2e1]
  41b381:	inc    eax
  41b382:	inc    ebp
  41b383:	mov    bl,0x8b
  41b385:	push   0x2bf235b9
  41b38a:	push   ds
  41b38b:	xlat   BYTE PTR ds:[ebx]
  41b38c:	sub    ebx,DWORD PTR [edi]
  41b38e:	dec    esp
  41b38f:	pop    ebp
  41b390:	in     al,0x9a
  41b392:	(bad)  
  41b393:	xor    esp,edi
  41b395:	imul   ebx,DWORD PTR [edi],0xe59c1fc1
  41b39b:	push   eax
  41b39c:	loop   0x41b3d0
  41b39e:	adc    al,0xa1
  41b3a0:	lock mov ah,BYTE PTR [ebx-0x35]
  41b3a4:	or     DWORD PTR [ebp-0x71],eax
  41b3a7:	(bad)
  41b3aa:	mov    ch,0xee
  41b3ac:	adc    eax,0x296171a
  41b3b1:	jmp    0x2b15:0x496c09af
  41b3b8:	sub    al,BYTE PTR [ebp+0x58]
  41b3bb:	cmp    al,0xa1
  41b3bd:	push   0xfffffff3
  41b3bf:	jp     0x41b37d
  41b3c1:	mov    WORD PTR [edx],gs
  41b3c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3c4:	cld    
  41b3c5:	and    BYTE PTR [edx-0x62501317],bh
  41b3cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3cc:	xchg   ebp,eax
  41b3cd:	fst    DWORD PTR [edx+eax*2+0x1bdc7cdb]
  41b3d4:	pop    ebx
  41b3d5:	mov    edi,edx
  41b3d7:	adc    esi,ebp
  41b3d9:	xor    ch,BYTE PTR [ecx]
  41b3db:	test   DWORD PTR [esi+0x46],eax
  41b3de:	jle    0x41b37b
  41b3e0:	cmp    edi,ecx
  41b3e2:	pop    ebx
  41b3e3:	stos   BYTE PTR es:[edi],al
  41b3e4:	aas    
  41b3e5:	mov    eax,0x5c517b6a
  41b3ea:	pushf  
  41b3eb:	scas   al,BYTE PTR es:[edi]
  41b3ec:	sbb    BYTE PTR [eax-0x68],dh
  41b3ef:	jmp    0x5ae4:0x734dbecb
  41b3f6:	pop    ss
  41b3f7:	jmp    eax
  41b3f9:	cmp    eax,0x4a3aa844
  41b3fe:	out    dx,eax
  41b3ff:	inc    ecx
  41b400:	jge    0x41b3c2
  41b402:	inc    eax
  41b403:	pop    ebx
  41b404:	pop    es
  41b405:	loope  0x41b3c0
  41b407:	and    dh,BYTE PTR [ecx-0xcdafc2f]
  41b40d:	mov    BYTE PTR [ecx+0x350b0fbb],dh
  41b413:	dec    edx
  41b414:	lahf   
  41b415:	ins    BYTE PTR es:[edi],dx
  41b416:	dec    ebp
  41b417:	add    bl,BYTE PTR [ecx+0x35]
  41b41a:	cmp    al,BYTE PTR [eax]
  41b41c:	shr    DWORD PTR [eax+0x95566b0],1
  41b422:	xor    ebp,DWORD PTR [ebx+0x67608128]
  41b428:	call   0x6498:0xca11d7f5
  41b42f:	call   0xfac86f2f
  41b434:	ins    BYTE PTR es:[edi],dx
  41b435:	sbb    eax,0xb8a11365
  41b43a:	inc    ebx
  41b43b:	fld    QWORD PTR [ebx+edx*2+0x6c]
  41b43f:	dec    edi
  41b440:	cmp    DWORD PTR [edi+ecx*2],0x5d
  41b444:	(bad)  
  41b445:	pop    ss
  41b446:	mov    eax,0xd43d1d69
  41b44b:	addr16 xchg ecx,eax
  41b44d:	push   es
  41b44e:	jmp    0x41b3d6
  41b450:	or     esi,DWORD PTR [edi]
  41b452:	pop    es
  41b453:	ins    DWORD PTR es:[edi],dx
  41b454:	sbb    eax,0x51280353
  41b459:	inc    esp
  41b45a:	(bad)  
  41b45b:	mov    al,ds:0xb4e9c2bd
  41b460:	jle    0x41b48d
  41b462:	sahf   
  41b463:	fdiv   QWORD PTR [eax+0x12]
  41b466:	popf   
  41b467:	cmc    
  41b468:	xchg   edi,eax
  41b469:	push   esi
  41b46a:	jns    0x41b44c
  41b46c:	rcl    BYTE PTR [eax-0x73],1
  41b46f:	mov    ds:0xc8e883b2,al
  41b474:	pop    ds
  41b475:	sti    
  41b476:	pop    es
  41b477:	daa    
  41b478:	sar    BYTE PTR [edx],1
  41b47a:	out    0x76,eax
  41b47c:	fstp   TBYTE PTR [eax-0x280d6e22]
  41b482:	mov    bl,0x43
  41b484:	sbb    ch,bh
  41b486:	sub    eax,0xc545ecf
  41b48b:	loop   0x41b4e1
  41b48d:	nop
  41b48e:	jb     0x41b4f2
  41b490:	or     edx,DWORD PTR [eax-0x4c]
  41b493:	(bad)  
  41b495:	cwde   
  41b496:	inc    edi
  41b497:	xchg   ebp,ecx
  41b499:	cs xchg esp,eax
  41b49b:	inc    eax
  41b49c:	cmp    BYTE PTR [edi+ebp*2+0x5a],ah
  41b4a0:	mov    al,0x62
  41b4a2:	cmc    
  41b4a3:	rcl    BYTE PTR [ebx],1
  41b4a5:	push   0xffffffca
  41b4a7:	jae    0x41b453
  41b4a9:	mov    WORD PTR [eax-0x62b7ca5c],?
  41b4af:	mov    bl,0x14
  41b4b1:	fs sti 
  41b4b3:	daa    
  41b4b4:	cmp    DWORD PTR [esi-0x4d0d7604],esp
  41b4ba:	std    
  41b4bb:	(bad)  
  41b4bd:	mov    eax,ds:0x7fa2d99a
  41b4c2:	cdq    
  41b4c3:	xor    ebp,0x55845619
  41b4c9:	icebp  
  41b4ca:	add    dl,0x9
  41b4cd:	retf   
  41b4ce:	mov    edx,0x9a92d67b
  41b4d3:	inc    eax
  41b4d4:	jae    0x41b4ef
  41b4d6:	adc    BYTE PTR [eax-0x2631d71d],0xf7
  41b4dd:	loope  0x41b547
  41b4df:	jno    0x41b479
  41b4e1:	xlat   BYTE PTR ds:[ebx]
  41b4e2:	shr    DWORD PTR [ecx+0x199df869],1
  41b4e8:	mov    dh,0x15
  41b4ea:	mov    ah,0xf9
  41b4ec:	pushf  
  41b4ed:	and    eax,0xab3c9a41
  41b4f2:	add    DWORD PTR [eax],0xffffffe8
  41b4f5:	mov    ch,0x66
  41b4f7:	cli    
  41b4f8:	xchg   esi,eax
  41b4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4fa:	pop    ebx
  41b4fb:	push   edx
  41b4fc:	loopne 0x41b540
  41b4fe:	cmp    DWORD PTR [ebx-0x2d],esi
  41b501:	sub    eax,0x3eca04be
  41b506:	cdq    
  41b507:	clc    
  41b508:	cmp    eax,0xcfe288e1
  41b50d:	ficom  DWORD PTR [edx+ebx*4]
  41b510:	push   ecx
  41b511:	sti    
  41b512:	or     cl,dl
  41b514:	ss push ecx
  41b516:	call   DWORD PTR [esi]
  41b518:	in     al,0x9d
  41b51a:	mov    ebx,0x8937269c
  41b51f:	push   edi
  41b520:	sbb    BYTE PTR [esi],al
  41b522:	mov    edi,0x29494fb2
  41b527:	jns    0x41b52d
  41b529:	stc    
  41b52a:	mov    ebx,0xbab00003
  41b52f:	hlt    
  41b530:	fcomp  DWORD PTR [edx]
  41b532:	xchg   edx,eax
  41b533:	xchg   edi,eax
  41b534:	idiv   BYTE PTR [ecx]
  41b536:	add    DWORD PTR [ecx+0x2f],eax
  41b539:	mov    ecx,0x93473c85
  41b53e:	dec    edi
  41b53f:	inc    ebx
  41b540:	jns    0x41b584
  41b542:	out    dx,eax
  41b543:	jmp    0x3655:0x9112822f
  41b54a:	fwait
  41b54b:	dec    ebx
  41b54c:	jb     0x41b4f7
  41b54e:	lds    edi,FWORD PTR [edi]
  41b550:	push   ss
  41b551:	repnz hlt 
  41b553:	xchg   edi,eax
  41b554:	add    DWORD PTR [ebx+0x558b084d],ecx
  41b55a:	mov    ah,0x3
  41b55c:	iret   
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	jmp    0x41b8ed
  41b872:	adc    BYTE PTR [eax-0x12],ah
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	adc    DWORD PTR [esi-0x6a49d8fc],0xffffff98
  41b882:	popf   
  41b883:	inc    esi
  41b884:	and    BYTE PTR [edi],al
  41b886:	add    esi,DWORD PTR [ebx]
  41b888:	sbb    eax,0x18bcb148
  41b88d:	push   ebx
  41b88e:	ins    DWORD PTR es:[edi],dx
  41b88f:	dec    esp
  41b890:	inc    ebx
  41b891:	mov    ds:0x891f14ef,eax
  41b896:	sti    
  41b897:	jo     0x41b8d6
  41b899:	push   eax
  41b89a:	(bad)  
  41b89b:	xor    ebp,eax
  41b89d:	push   esi
  41b89e:	pop    ss
  41b89f:	push   0xffffff9c
  41b8a1:	mov    al,0xa
  41b8a3:	sub    ch,BYTE PTR [edx]
  41b8a5:	jge    0x41b862
  41b8a7:	push   0x8a50bb2c
  41b8ac:	sub    DWORD PTR [ebp-0x69],0x5075e87f
  41b8b3:	jne    0x41b908
  41b8b5:	pop    ebx
  41b8b6:	nop    DWORD PTR [esi+ecx*1+0xbdc7f33]
  41b8be:	mov    al,0x11
  41b8c0:	mov    bl,0x92
  41b8c2:	aas    
  41b8c3:	ja     0x41b8ec
  41b8c5:	mov    ebp,0xdbeb2f2a
  41b8ca:	adc    ah,BYTE PTR [ebp+0x70]
  41b8cd:	mov    al,0xdc
  41b8cf:	and    al,0x13
  41b8d1:	dec    edx
  41b8d2:	pop    ds
  41b8d3:	cs dec ecx
  41b8d5:	stc    
  41b8d6:	bound  ebx,QWORD PTR ds:0xce722cbc
  41b8dc:	pusha  
  41b8dd:	mov    ah,0xc9
  41b8df:	shl    BYTE PTR [eax],cl
  41b8e1:	mov    WORD PTR [esi],ss
  41b8e3:	sub    edx,DWORD PTR [ebx-0x2d]
  41b8e6:	(bad)  
  41b8e7:	ins    BYTE PTR es:[edi],dx
  41b8e8:	mov    dl,0xb1
  41b8ea:	jecxz  0x41b89e
  41b8ec:	mov    eax,ds:0x7699c4a5
  41b8f1:	aaa    
  41b8f2:	int3   
  41b8f3:	add    eax,0x54f0a63b
  41b8f8:	mov    ?,WORD PTR [ebx-0x7a]
  41b8fb:	mov    al,0x83
  41b8fd:	adc    eax,0xee6de1f3
  41b902:	pop    ss
  41b903:	pop    ds
  41b904:	jne    0x41b8ce
  41b906:	rol    ah,0x45
  41b909:	cmp    dl,bl
  41b90b:	iret   
  41b90c:	out    0x32,al
  41b90e:	aas    
  41b90f:	mov    edi,0x4a42a903
  41b914:	or     bh,bh
  41b916:	inc    eax
  41b917:	pop    edx
  41b918:	imul   ebp,DWORD PTR ds:0x25237162,0xffffffbb
  41b91f:	xchg   DWORD PTR [edi-0x57],edx
  41b922:	and    BYTE PTR [edi],0x70
  41b925:	mov    ecx,0xa7e69ba7
  41b92a:	ds jae 0x41b981
  41b92d:	out    0x17,al
  41b92f:	dec    esi
  41b930:	push   ss
  41b931:	aas    
  41b932:	add    al,0x5e
  41b934:	ret    0x2848
  41b937:	(bad)  
  41b938:	lea    esi,[eax+0x19]
  41b93b:	pop    ds
  41b93c:	pop    esp
  41b93d:	and    ah,BYTE PTR [edx]
  41b93f:	(bad)  
  41b940:	mov    ah,cl
  41b942:	dec    esp
  41b943:	mov    ch,0xb3
  41b945:	cmp    esi,esp
  41b947:	sti    
  41b948:	pop    eax
  41b949:	cli    
  41b94a:	test   eax,0xbe618343
  41b94f:	jnp    0x41b94c
  41b951:	stc    
  41b952:	push   edx
  41b953:	(bad)  
  41b954:	in     eax,dx
  41b955:	adc    eax,DWORD PTR [ebx+eax*1+0x24]
  41b959:	sub    dl,BYTE PTR [ebp+0x7]
  41b95c:	pop    ebp
  41b95d:	cmc    
  41b95e:	(bad)  [ecx+0x41]
  41b961:	ja     0x41b8e8
  41b963:	sub    eax,0xdcb5867d
  41b968:	(bad)  
  41b969:	shl    DWORD PTR [edx+0x72],0x8b
  41b96d:	(bad)
  41b971:	add    eax,0x3246b0e8
  41b976:	jecxz  0x41b9d5
  41b978:	cmp    eax,0xc6f6dfad
  41b97d:	xor    ch,bl
  41b97f:	iret   
  41b980:	scas   eax,DWORD PTR es:[edi]
  41b981:	mov    edi,0xb03c473e
  41b986:	lahf   
  41b987:	aaa    
  41b988:	pop    ss
  41b989:	sar    BYTE PTR [edi-0x6fa12abc],0x68
  41b990:	pop    edx
  41b991:	aam    0x8b
  41b993:	int    0xd7
  41b995:	in     al,0x42
  41b997:	add    BYTE PTR ds:0xdef9f3f1,0x1b
  41b99e:	rcr    cl,cl
  41b9a0:	(bad)  
  41b9a1:	push   esi
  41b9a2:	and    BYTE PTR [esp+edi*2-0x55],0x88
  41b9a7:	retf   
  41b9a8:	push   cs
  41b9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9aa:	aad    0xc8
  41b9ac:	mov    ds:0x9cc7be0d,eax
  41b9b1:	xchg   esi,eax
  41b9b2:	xchg   esi,eax
  41b9b3:	stos   DWORD PTR es:[di],eax
  41b9b5:	out    0x85,al
  41b9b7:	and    DWORD PTR [ebp+0x55bf6b7],0xffffffd5
  41b9be:	xor    BYTE PTR [ebp+0x30],bl
  41b9c1:	push   ds
  41b9c2:	shr    DWORD PTR [esi],0x4
  41b9c5:	imul   ebx,DWORD PTR [ebx-0x58],0x96bb98a8
  41b9cc:	or     cl,BYTE PTR [eax-0x5b]
  41b9cf:	outs   dx,BYTE PTR ds:[esi]
  41b9d0:	dec    esp
  41b9d1:	jmp    0x41ba2e
  41b9d3:	test   DWORD PTR [eax],ebx
  41b9d5:	das    
  41b9d6:	push   ebx
  41b9d7:	ss rcl dl,0x58
  41b9db:	cmp    BYTE PTR [ecx+ecx*1-0x20b2683e],bl
  41b9e2:	fwait
  41b9e3:	jmp    0x254547c
  41b9e8:	lahf   
  41b9e9:	dec    edx
  41b9ea:	sub    DWORD PTR ds:0x1eccde88,ecx
  41b9f0:	cmp    al,0xfe
  41b9f2:	call   DWORD PTR [ebx]
  41b9f4:	xlat   BYTE PTR ds:[ebx]
  41b9f5:	int3   
  41b9f6:	fimul  WORD PTR [esi+0x5278ada5]
  41b9fc:	jmp    0xbca3:0xefe8e448
  41ba03:	jl     0x41ba4a
  41ba05:	xchg   ebp,eax
  41ba06:	mov    ds:0xbde77048,al
  41ba0b:	sub    al,0xf7
  41ba0d:	push   ss
  41ba0e:	mov    dh,0x76
  41ba10:	clc    
  41ba11:	jp     0x41ba29
  41ba13:	ds retf 
  41ba15:	clc    
  41ba16:	or     DWORD PTR [ebx+0x2d],0xc8ba47d5
  41ba1d:	or     al,0xc3
  41ba1f:	out    dx,al
  41ba20:	push   esp
  41ba21:	out    0x2a,eax
  41ba23:	sub    eax,0x724c4a46
  41ba28:	jo     0x41ba29
  41ba2a:	icebp  
  41ba2b:	xor    DWORD PTR [edi+0x21d8f232],esi
  41ba31:	or     ebp,esi
  41ba33:	(bad)
  41ba37:	shr    BYTE PTR [ebp-0x46ced010],0xb0
  41ba3e:	add    al,0xe
  41ba40:	push   edx
  41ba41:	(bad)  
  41ba42:	repnz pusha 
  41ba44:	mov    eax,ds:0x8e486782
  41ba49:	adc    bh,bh
  41ba4b:	pop    ecx
  41ba4c:	mov    ds:0xe9cc35b4,eax
  41ba51:	outs   dx,BYTE PTR ds:[esi]
  41ba52:	pop    eax
  41ba53:	jl     0x41ba3f
  41ba55:	push   edi
  41ba56:	(bad)  
  41ba57:	shl    DWORD PTR ds:0x6a51ba8e,cl
  41ba5d:	or     ecx,ebx
  41ba5f:	sub    DWORD PTR [ecx],esi
  41ba61:	adc    al,0xc3
  41ba63:	call   0x433755e6
  41ba68:	push   eax
  41ba69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba6a:	adc    bl,BYTE PTR [esi+0x1563fff7]
  41ba70:	jle    0x41b9fe
  41ba72:	jp     0x41baeb
  41ba74:	outs   dx,DWORD PTR ds:[esi]
  41ba75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba76:	cmp    cl,BYTE PTR [edx]
  41ba78:	xchg   esp,eax
  41ba79:	cmp    cl,BYTE PTR [esi]
  41ba7b:	add    BYTE PTR [edx+0x70],0x3f
  41ba7f:	mov    ebp,0x3cf42569
  41ba84:	aad    0xef
  41ba86:	icebp  
  41ba87:	push   0xf996f983
  41ba8c:	sbb    BYTE PTR [edi-0x2887c2f],dh
  41ba92:	inc    esp
  41ba93:	or     BYTE PTR [ebp-0x33],ah
  41ba96:	jge    0x41ba3e
  41ba98:	push   edi
  41ba99:	mov    esp,0x6edcd393
  41ba9e:	stos   DWORD PTR es:[edi],eax
  41ba9f:	cld    
  41baa0:	jmp    0x41bad6
  41baa2:	test   BYTE PTR [ecx-0x4041ddba],0x6f
  41baa9:	loop   0x41ba74
  41baab:	push   ss
  41baac:	cmp    ecx,ebp
  41baae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baaf:	xchg   esp,eax
  41bab0:	in     al,0xfd
  41bab2:	arpl   WORD PTR [esi*1+0x172e6d0b],dx
  41bab9:	jmp    0x41baa7
  41babb:	mov    DWORD PTR [esi],esi
  41babd:	cwde   
  41babe:	call   0x5c36fae7
  41bac3:	xchg   BYTE PTR [ebp-0x382c176],al
  41bac9:	push   0x11
  41bacb:	pop    es
  41bacc:	cmp    BYTE PTR fs:[esi-0x6e08d78c],0x3a
  41bad4:	test   esp,ebp
  41bad6:	jo     0x41bb3f
  41bad8:	or     BYTE PTR ds:0x738c340f,bl
  41bade:	inc    esp
  41badf:	mov    al,ds:0x8605bf70
  41bae4:	loop   0x41bb37
  41bae6:	or     esp,0xf4030c4b
  41baec:	add    bl,BYTE PTR [ecx+0x4c]
  41baef:	jl     0x41bb4e
  41baf1:	pop    ecx
  41baf2:	cmp    eax,0x3ba6a618
  41baf7:	xchg   esp,eax
  41baf8:	mov    ch,BYTE PTR [edx-0xfc4366b]
  41bafe:	push   ecx
  41baff:	jmp    0x94917d6b
  41bb04:	mov    bl,BYTE PTR [ecx-0x5b]
  41bb07:	and    al,0x61
  41bb09:	inc    eax
  41bb0a:	lea    eax,[esp+edi*2+0x7ce8d8f9]
  41bb11:	jns    0x41badc
  41bb13:	aad    0xd8
  41bb15:	xchg   ecx,eax
  41bb16:	sahf   
  41bb17:	cmp    eax,0xba43c79b
  41bb1c:	mov    eax,ds:0xce0edd80
  41bb21:	sbb    dl,bh
  41bb23:	cli    
  41bb24:	lahf   
  41bb25:	(bad)  
  41bb26:	jle    0x41baf0
  41bb28:	pop    edi
  41bb29:	retf   
  41bb2a:	rcl    DWORD PTR [ebp+0x7b2d3d5d],cl
  41bb30:	repz xor eax,0x68f98d71
  41bb36:	aad    0xa7
  41bb38:	or     eax,0x8bdb7790
  41bb3d:	xchg   ebx,eax
  41bb3e:	mov    bh,0x61
  41bb40:	mov    edi,0x86b4fa00
  41bb45:	mov    ss,WORD PTR [edx+0x569f5bd3]
  41bb4b:	jae    0x41bb95
  41bb4d:	dec    edx
  41bb4e:	ja     0x41bb66
  41bb50:	ds xchg esp,eax
  41bb52:	pushf  
  41bb53:	lock mov al,0xad
  41bb56:	jne    0x41bbd0
  41bb58:	scas   al,BYTE PTR es:[edi]
  41bb59:	xchg   edi,eax
  41bb5a:	pop    edi
  41bb5b:	inc    ebp
  41bb5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb5d:	cli    
  41bb5e:	mov    DWORD PTR [ebp+0x470fe84],esp
  41bb64:	fcomp  QWORD PTR [ebx-0x30]
  41bb67:	pop    ebp
  41bb68:	and    ebp,ebx
  41bb6a:	inc    esp
  41bb6b:	xchg   edi,eax
  41bb6c:	sub    DWORD PTR [eax-0x7f16344e],ecx
  41bb72:	cmp    eax,esi
  41bb74:	and    al,ch
  41bb76:	jl     0x41bb75
  41bb78:	inc    edx
  41bb79:	rcr    bh,1
  41bb7b:	lods   al,BYTE PTR ds:[esi]
  41bb7c:	repz cmp esp,DWORD PTR [eax]
  41bb7f:	clc    
  41bb80:	retf   0x165d
  41bb83:	and    al,0xf7
  41bb85:	lea    edi,[ebx-0x6b18dabf]
  41bb8b:	iret   
  41bb8c:	ja     0x41bbc8
  41bb8e:	fwait
  41bb8f:	xor    edi,eax
  41bb91:	les    esp,FWORD PTR [ebx+0x78]
  41bb94:	adc    ebx,DWORD PTR [ecx]
  41bb96:	mov    al,BYTE PTR [edx]
  41bb98:	test   BYTE PTR ds:0xbeaa9a5b,cl
  41bb9e:	dec    ebx
  41bb9f:	ror    bl,cl
  41bba1:	jg     0x41bb35
  41bba3:	xor    eax,0x63751fde
  41bba8:	cdq    
  41bba9:	adc    ebp,DWORD PTR [esp+ecx*2+0x21]
  41bbad:	pop    eax
  41bbae:	add    edi,DWORD PTR [edx-0x53]
  41bbb1:	pop    edx
  41bbb2:	xor    DWORD PTR [ebx-0x4a92cb4],0xa36ca18e
  41bbbc:	(bad)  
  41bbbd:	js     0x41bbfe
  41bbbf:	in     al,dx
  41bbc0:	mov    ebx,0xb33be4f0
  41bbc5:	sbb    ah,bh
  41bbc7:	jns    0x41bbc4
  41bbc9:	ret    0x8bfd
  41bbcc:	mov    ecx,0x71a860e5
  41bbd1:	adc    eax,0x4c04135d
  41bbd6:	nop
  41bbd7:	xor    bl,BYTE PTR [esi-0x54526bdb]
  41bbdd:	and    al,0x7
  41bbdf:	push   edi
  41bbe0:	and    al,0x79
  41bbe2:	iret   
  41bbe3:	cwde   
  41bbe4:	sti    
  41bbe5:	(bad)  
  41bbe6:	cwde   
  41bbe7:	mov    ah,BYTE PTR [esi+0x1f62b088]
  41bbed:	adc    al,cl
  41bbef:	dec    eax
  41bbf0:	sbb    DWORD PTR [edi+0x2c],edi
  41bbf3:	xor    DWORD PTR [ecx],0x7f8e55da
  41bbf9:	adc    DWORD PTR [esi+0x7d9c1904],esp
  41bbff:	in     eax,0xb9
  41bc01:	(bad)  
  41bc03:	clc    
  41bc04:	push   edx
  41bc05:	shl    DWORD PTR [edx+0x1b],1
  41bc08:	lods   al,BYTE PTR ds:[esi]
  41bc09:	lds    edx,FWORD PTR [esi+0x25]
  41bc0c:	imul   BYTE PTR [edi-0x5849dc38]
  41bc12:	(bad)  
  41bc13:	xlat   BYTE PTR ds:[ebx]
  41bc14:	jecxz  0x41bbe7
  41bc16:	fbld   TBYTE PTR [edi-0x1f91241a]
  41bc1c:	mov    BYTE PTR [ebp+0x7c62f2a5],bh
  41bc22:	fld    TBYTE PTR [esi]
  41bc24:	adc    al,0x8
  41bc26:	out    dx,eax
  41bc27:	xchg   ch,bl
  41bc29:	loop   0x41bbcc
  41bc2b:	mov    ch,0x87
  41bc2d:	sbb    eax,esp
  41bc2f:	sub    BYTE PTR [edx],ch
  41bc31:	dec    ebx
  41bc32:	cmp    esp,DWORD PTR [eax+0x5f]
  41bc35:	iret   
  41bc36:	iret   
  41bc37:	push   edx
  41bc38:	mov    ecx,0x55ef69ee
  41bc3d:	ss inc edi
  41bc3f:	les    esp,FWORD PTR [edx+edi*8+0x49141719]
  41bc46:	push   eax
  41bc47:	sbb    al,0x93
  41bc49:	(bad)  
  41bc4a:	jbe    0x41bc73
  41bc4c:	shr    cl,cl
  41bc4e:	sbb    DWORD PTR [ecx-0x6a4d8d7f],ebp
  41bc54:	call   0xa4a56d90
  41bc59:	in     al,dx
  41bc5a:	dec    ecx
  41bc5b:	mov    ?,WORD PTR [ebp+0x2f]
  41bc5e:	addr16 xchg edx,eax
  41bc60:	mov    esp,DWORD PTR [ecx-0x4098785f]
  41bc66:	(bad)  
  41bc67:	mov    ch,0x8
  41bc69:	adc    BYTE PTR ds:0x40687113,al
  41bc6f:	mov    ecx,0x5b9c67ef
  41bc74:	ja     0x41bc56
  41bc76:	loopne 0x41bcf5
  41bc78:	jne    0x41bc41
  41bc7a:	inc    ecx
  41bc7b:	pop    ebp
  41bc7c:	mov    ebp,0xe638673a
  41bc81:	xchg   ebp,eax
  41bc82:	jbe    0x41bcee
  41bc84:	imul   ebp,DWORD PTR [ecx*2+0x4b0eca9a],0x499abb77
  41bc8f:	aam    0x97
  41bc91:	sbb    BYTE PTR [edi-0x42befb1f],dl
  41bc97:	inc    esi
  41bc98:	shl    ah,1
  41bc9a:	mov    edi,DWORD PTR [esi+ebx*2]
  41bc9d:	rol    dh,1
  41bc9f:	test   dl,bh
  41bca1:	or     eax,0xf9e451a4
  41bca6:	ins    BYTE PTR es:[edi],dx
  41bca7:	adc    BYTE PTR [edi+0x1621b94e],bl
  41bcad:	pop    edx
  41bcae:	dec    eax
  41bcaf:	ins    DWORD PTR es:[edi],dx
  41bcb0:	mov    esi,0xa11f8e91
  41bcb5:	les    edi,FWORD PTR [edi-0x21]
  41bcb8:	ins    DWORD PTR es:[edi],dx
  41bcb9:	into   
  41bcba:	sub    al,dh
  41bcbc:	sti    
  41bcbd:	ror    ebx,0x4a
  41bcc0:	cmp    DWORD PTR [ecx],esp
  41bcc2:	enter  0xd34d,0xdc
  41bcc6:	mov    ch,0xda
  41bcc8:	cmp    DWORD PTR [edi],edi
  41bcca:	xor    bh,BYTE PTR [esi]
  41bccc:	sti    
  41bccd:	jg     0x41bcb9
  41bccf:	cld    
  41bcd0:	cmp    esp,edx
  41bcd2:	jne    0x41bd53
  41bcd4:	clc    
  41bcd5:	jecxz  0x41bcc8
  41bcd7:	fimul  DWORD PTR [edx-0x6ec1f310]
  41bcdd:	adc    BYTE PTR [ecx+0x35],al
  41bce0:	scas   eax,DWORD PTR es:[edi]
  41bce1:	out    dx,al
  41bce2:	mov    DWORD PTR [edx+eiz*8+0x257b3ad5],ecx
  41bce9:	mov    ds:0xf8b949ce,eax
  41bcee:	cmp    al,0x49
  41bcf0:	push   cs
  41bcf1:	adc    esi,DWORD PTR [ebx+0x71]
  41bcf4:	cmp    al,0x19
  41bcf6:	or     eax,0x6aa05422
  41bcfb:	or     dl,BYTE PTR [edx-0x32]
  41bcfe:	and    ecx,edx
  41bd00:	xor    bh,BYTE PTR [ecx+0x49]
  41bd03:	and    DWORD PTR [ecx-0x31],0xffffffde
  41bd07:	fdivr  DWORD PTR [ebp*1-0x5b8a60aa]
  41bd0e:	xchg   esi,eax
  41bd0f:	sbb    eax,0x3651cdd4
  41bd14:	cli    
  41bd15:	lods   al,BYTE PTR ds:[esi]
  41bd16:	mov    edx,0x117d1e1
  41bd1b:	jns    0x41bc9e
  41bd1d:	cld    
  41bd1e:	push   0xffffff9d
  41bd20:	scas   al,BYTE PTR es:[edi]
  41bd21:	jle    0x41bd10
  41bd23:	mov    esi,0x5b2eea5b
  41bd28:	aam    0x99
  41bd2a:	outs   dx,DWORD PTR ds:[esi]
  41bd2b:	add    ah,BYTE PTR [eax+0xd3a0c5f]
  41bd31:	je     0x41bd12
  41bd33:	sub    ch,BYTE PTR [edi-0x2b3277ee]
  41bd39:	into   
  41bd3a:	test   al,0x81
  41bd3c:	mov    ebx,0x7d15e492
  41bd41:	ja     0x41bd3a
  41bd43:	adc    BYTE PTR [ecx-0x51],al
  41bd46:	les    ebx,FWORD PTR [edi+0x47]
  41bd49:	dec    esp
  41bd4a:	inc    esp
  41bd4b:	emms   
  41bd4d:	std    
  41bd4e:	jne    0x41bcef
  41bd50:	mov    bl,0x4c
  41bd52:	add    al,0xd1
  41bd54:	jns    0x41bd42
  41bd56:	mov    al,ds:0x20466c04
  41bd5b:	add    BYTE PTR [esi+0x36],bl
  41bd5e:	adc    al,0xea
  41bd60:	les    esi,FWORD PTR [esi+0xde6909f]
  41bd66:	sbb    eax,ecx
  41bd68:	orps   xmm7,XMMWORD PTR [edx]
  41bd6b:	fisttp WORD PTR [esi-0x6]
  41bd6e:	mov    ebx,0xcee64b7e
  41bd73:	xchg   ebp,eax
  41bd74:	leave  
  41bd75:	in     al,0xe1
  41bd77:	int3   
  41bd78:	pop    ebx
  41bd79:	popa   
  41bd7a:	mov    edx,0xc134ba2a
  41bd80:	stos   BYTE PTR es:[edi],al
  41bd81:	pop    edx
  41bd82:	sub    al,cl
  41bd84:	cdq    
  41bd85:	mov    ds:0x499cdec2,al
  41bd8a:	jnp    0x41bd8f
  41bd8c:	(bad)  
  41bd8d:	rcl    ah,1
  41bd8f:	cmp    ah,cl
  41bd91:	ins    BYTE PTR es:[edi],dx
  41bd92:	xor    eax,0xc96a14d2
  41bd97:	fisub  WORD PTR [edi]
  41bd99:	dec    edi
  41bd9a:	cmc    
  41bd9b:	lock dec ecx
  41bd9d:	loopne 0x41bde7
  41bd9f:	lds    esi,FWORD PTR [edx+0x632c9ac0]
  41bda5:	adc    DWORD PTR [eax-0x6b35ab94],0x425a47c4
  41bdaf:	(bad)  
  41bdb0:	cmp    eax,0xe3f79da8
  41bdb5:	test   bh,0x6d
  41bdb8:	jmp    FWORD PTR [ebp-0x30]
  41bdbb:	mov    ds:0x7c2dfd88,al
  41bdc0:	pop    ss
  41bdc1:	fnstcw WORD PTR [edx]
  41bdc3:	push   edx
  41bdc4:	add    al,0xeb
  41bdc6:	xchg   edi,eax
  41bdc7:	jae    0x41bd65
  41bdc9:	mov    al,0xad
  41bdcb:	loopne 0x41bd6b
  41bdcd:	aam    0x23
  41bdcf:	xlat   BYTE PTR ds:[ebx]
  41bdd0:	inc    ebp
  41bdd1:	xchg   ebx,eax
  41bdd2:	cmp    bl,BYTE PTR [esi+0x3b5f1731]
  41bdd8:	xchg   DWORD PTR [eax-0x30],edx
  41bddb:	or     al,0x46
  41bddd:	jmp    eax
  41bddf:	cmp    bh,BYTE PTR [edi]
  41bde1:	ins    DWORD PTR es:[edi],dx
  41bde2:	(bad)  
  41bde3:	jmp    0x41bdee
  41bde5:	ins    BYTE PTR es:[edi],dx
  41bde6:	sub    dl,bh
  41bde8:	daa    
  41bde9:	das    
  41bdea:	xor    ebp,edx
  41bdec:	fist   DWORD PTR [edx-0x66b22c6f]
  41bdf2:	mov    BYTE PTR [edi+0x64dc843a],bl
  41bdf8:	inc    edi
  41bdf9:	les    edi,FWORD PTR [ebx+eiz*4-0x5127b358]
  41be00:	scas   al,BYTE PTR es:[edi]
  41be01:	cmp    dl,cl
  41be03:	into   
  41be04:	retf   0x1fd
  41be07:	pop    ecx
  41be08:	(bad)  
  41be09:	push   0xffffffcd
  41be0b:	imul   eax,DWORD PTR [esi+esi*1+0x7],0x78
  41be10:	shr    edx,cl
  41be12:	mov    eax,ds:0x84fe421f
  41be17:	xchg   ecx,eax
  41be18:	sbb    eax,0x72318f3e
  41be1d:	test   BYTE PTR [ebp+0x4b],al
  41be20:	cmp    ebp,DWORD PTR [eax]
  41be22:	xchg   BYTE PTR [ebp+0x58c998b],cl
  41be28:	or     esp,ebp
  41be2a:	nop
  41be2b:	adc    ch,BYTE PTR [esi]
  41be2d:	push   ds
  41be2e:	lds    esp,FWORD PTR [ecx+eiz*4+0x7ecc326]
  41be35:	fsub   DWORD PTR [edi-0x416da2ab]
  41be3b:	jge    0x41bdc2
  41be3d:	sar    BYTE PTR [edx],0x6
  41be40:	or     dl,BYTE PTR [esi+ebp*1]
  41be43:	or     eax,0xa257d2b4
  41be48:	aaa    
  41be49:	shr    BYTE PTR [ecx],1
  41be4b:	in     eax,0x19
  41be4d:	lahf   
  41be4e:	pusha  
  41be4f:	mov    ecx,0x20c420ce
  41be54:	xor    ecx,DWORD PTR [ecx+edi*4]
  41be57:	mov    dh,0xa0
  41be59:	xchg   esp,eax
  41be5a:	in     eax,dx
  41be5b:	mov    esi,0xf687441b
  41be60:	mov    bh,0x59
  41be62:	cmp    bh,BYTE PTR [ebx+0x11f2a5b0]
  41be68:	imul   ebx,esi,0xffffff8b
  41be6b:	jmp    0x41be93
  41be6d:	imul   DWORD PTR ds:0xdd946b4e
  41be73:	xchg   ebx,eax
  41be74:	in     eax,0x13
  41be76:	dec    esp
  41be77:	mov    dl,0x2
  41be79:	scas   eax,DWORD PTR es:[edi]
  41be7a:	clc    
  41be7b:	xchg   ebx,eax
  41be7c:	sbb    BYTE PTR [esi],dh
  41be7e:	inc    ecx
  41be7f:	(bad)  
  41be80:	jp     0x41beb9
  41be82:	(bad)  
  41be83:	xor    BYTE PTR [ecx],bh
  41be85:	fdivrp st(1),st
  41be87:	jle    0x41bea1
  41be89:	adc    eax,0xcea82aab
  41be8e:	pop    ebp
  41be8f:	ins    BYTE PTR es:[edi],dx
  41be90:	(bad)  
  41be92:	outs   dx,BYTE PTR ds:[esi]
  41be93:	mov    ah,bh
  41be95:	ins    DWORD PTR es:[edi],dx
  41be96:	loopne 0x41beeb
  41be98:	shl    DWORD PTR [ebx-0x40],0xc0
  41be9c:	mov    DWORD PTR [edi],esp
  41be9e:	outs   dx,BYTE PTR ds:[esi]
  41be9f:	xor    al,0x60
  41bea1:	pop    esi
  41bea2:	lods   al,BYTE PTR ds:[esi]
  41bea3:	ss cmp al,0x2e
  41bea6:	clc    
  41bea7:	push   es
  41bea8:	and    DWORD PTR [ecx+0x66],esi
  41beab:	fisttp QWORD PTR [ecx-0x4cb5d1e4]
  41beb1:	aam    0x18
  41beb3:	sub    ah,ch
  41beb5:	sahf   
  41beb6:	inc    BYTE PTR [ebp*4-0x415c9469]
  41bebd:	sbb    BYTE PTR [ebp-0x18],ch
  41bec0:	and    DWORD PTR [ebp-0x170da7b2],edi
  41bec6:	xchg   esp,eax
  41bec7:	jbe    0x41bede
  41bec9:	and    eax,edi
  41becb:	popf   
  41becc:	cmp    eax,0x91f1089f
  41bed1:	xor    BYTE PTR [edi+0x29],dh
  41bed4:	nop
  41bed5:	or     DWORD PTR [ebx+0x59b80cfe],edi
  41bedb:	jecxz  0x41befd
  41bedd:	pop    ss
  41bede:	sbb    DWORD PTR [edx],ecx
  41bee0:	xor    DWORD PTR [edx],ebx
  41bee2:	mov    dh,BYTE PTR [edi]
  41bee4:	cwde   
  41bee5:	mov    al,0x4
  41bee7:	fst    QWORD PTR [edi]
  41bee9:	in     al,dx
  41beea:	fs and al,0xa2
  41beed:	ss xor al,0xab
  41bef0:	jb     0x41bee3
  41bef2:	mov    ebp,0x75bae8f3
  41bef7:	mov    eax,ds:0xcf2cc45d
  41befc:	cmp    edi,edi
  41befe:	cmp    ch,BYTE PTR [ebp+0xf819b85]
  41bf04:	ja     0x41bef0
  41bf06:	cmp    dh,0xe4
  41bf09:	fimul  WORD PTR [ebp+0x70cca2e1]
  41bf0f:	add    BYTE PTR [ebp+0x7ce2963a],ah
  41bf15:	mov    edx,0xf0dc6406
  41bf1a:	pop    es
  41bf1b:	mov    esp,0xf1787e72
  41bf20:	jl     0x41befb
  41bf22:	push   edi
  41bf23:	push   edi
  41bf24:	sub    al,BYTE PTR [ebx-0x6495411b]
  41bf2a:	and    bl,ah
  41bf2c:	fbstp  TBYTE PTR [edi+0x39]
  41bf2f:	dec    eax
  41bf30:	div    ecx
  41bf32:	lahf   
  41bf33:	mov    ebp,0x24d0a0ef
  41bf38:	(bad)  
  41bf3a:	mov    ecx,0x78eb32b
  41bf3f:	add    bl,BYTE PTR [ebp+ecx*2-0x4066b8c1]
  41bf46:	imul   ecx,DWORD PTR [eax+0x2f],0xda3cb9ba
  41bf4d:	cmp    BYTE PTR [eax],bh
  41bf4f:	sar    DWORD PTR [eax],0x98
  41bf52:	cmp    ecx,DWORD PTR [ebx+0x35]
  41bf55:	repz (bad) 
  41bf58:	int3   
  41bf59:	out    0xb9,eax
  41bf5b:	inc    esi
  41bf5c:	adc    al,0xb8
  41bf5e:	in     eax,dx
  41bf5f:	adc    al,0x41
  41bf61:	inc    edi
  41bf62:	int    0x43
  41bf64:	xchg   ebp,eax
  41bf65:	mov    WORD PTR [edx-0x50],ss
  41bf68:	push   esp
  41bf69:	lock push 0x3d
  41bf6c:	push   esp
  41bf6d:	sbb    eax,0xbd821fa2
  41bf72:	cdq    
  41bf73:	jge    0x41bf9f
  41bf75:	or     ah,dh
  41bf77:	jg     0x41befd
  41bf79:	enter  0x9b32,0xaf
  41bf7d:	pop    ebx
  41bf7e:	mov    cl,0x18
  41bf80:	jp     0x41bf3d
  41bf82:	sbb    eax,0x904672d3
  41bf87:	xchg   ebx,eax
  41bf88:	pop    ecx
  41bf89:	lahf   
  41bf8a:	cmp    edx,DWORD PTR [esi-0x5c]
  41bf8d:	fmul   DWORD PTR [ebx+0x5f12282f]
  41bf93:	dec    ecx
  41bf94:	gs push cs
  41bf96:	out    0x38,eax
  41bf98:	ror    DWORD PTR [ebx],0x29
  41bf9b:	popa   
  41bf9c:	and    DWORD PTR [edi],esi
  41bf9e:	pushf  
  41bf9f:	daa    
  41bfa0:	push   ebx
  41bfa1:	(bad)  
  41bfa2:	pop    edi
  41bfa3:	cld    
  41bfa4:	push   esp
  41bfa5:	frstor [edi+0x5223484b]
  41bfab:	and    DWORD PTR [eax-0x73121583],0x382cbcb4
  41bfb5:	xor    ah,bh
  41bfb7:	sbb    dl,BYTE PTR [ecx+0x2f]
  41bfba:	in     al,dx
  41bfbb:	out    dx,eax
  41bfbc:	adc    al,0x67
  41bfbe:	lock stc 
  41bfc0:	iret   
  41bfc1:	clc    
  41bfc2:	sbb    eax,0xc19794ac
  41bfc7:	add    BYTE PTR [edx],dl
  41bfc9:	retf   
  41bfca:	fs popa 
  41bfcc:	loop   0x41c023
  41bfce:	or     edx,DWORD PTR gs:[ebp+0x4f]
  41bfd2:	add    DWORD PTR [esp+eax*2+0x5a],esp
  41bfd6:	stos   DWORD PTR es:[edi],eax
  41bfd7:	adc    eax,0xa089f6a9
  41bfdc:	ins    BYTE PTR es:[edi],dx
  41bfdd:	ror    DWORD PTR [ecx+edi*8],cl
  41bfe0:	xor    BYTE PTR [eax+0x21ce44de],ch
  41bfe6:	xor    bh,dh
  41bfe8:	in     eax,0xbe
  41bfea:	fmulp  st(4),st
  41bfec:	shl    BYTE PTR [ebp-0x49e35d95],cl
  41bff2:	and    al,0x19
  41bff4:	fs cld 
  41bff6:	test   DWORD PTR [ebx+ebp*2-0x31],0x800a8572
  41bffe:	cmp    DWORD PTR [ecx+ebx*4],ecx
  41c001:	mov    cl,bl
  41c003:	js     0x41c04f
  41c005:	cld    
  41c006:	sub    ebp,esi
  41c008:	mov    al,BYTE PTR [esi-0x6]
  41c00b:	imul   eax,DWORD PTR [edi-0x225b7da2],0x6d6578cc
  41c015:	int3   
  41c016:	adc    al,0xf3
  41c018:	data16 jl 0x41bfcb
  41c01b:	in     eax,0x72
  41c01d:	push   ebp
  41c01e:	sbb    dh,cl
  41c020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c021:	or     eax,0xc9475945
  41c026:	(bad)  
  41c028:	ins    DWORD PTR es:[edi],dx
  41c029:	test   BYTE PTR [ecx],bh
  41c02b:	les    eax,FWORD PTR [eax]
  41c02d:	add    DWORD PTR [edx-0x31bec5f2],ebp
  41c033:	pop    edi
  41c034:	pop    ebp
  41c035:	mov    BYTE PTR [ecx-0x7b23dc70],al
  41c03b:	fwait
  41c03c:	dec    esi
  41c03d:	ja     0x41c063
  41c03f:	cld    
  41c040:	mov    edx,0xda6d529
  41c045:	ins    BYTE PTR es:[edi],dx
  41c046:	in     eax,dx
  41c047:	fld    DWORD PTR [edi+0x269cb785]
  41c04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c04e:	cld    
  41c04f:	(bad)  
  41c050:	fdivr  DWORD PTR [ecx+0x7f]
  41c053:	ss dec ebx
  41c055:	jg     0x41bfe9
  41c057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c058:	or     bh,ah
  41c05a:	push   ecx
  41c05b:	xchg   ebx,eax
  41c05c:	mov    ds:0x6fad3698,al
  41c061:	cwde   
  41c062:	cmp    DWORD PTR [edi],0x896f7132
  41c068:	push   ebx
  41c069:	push   edi
  41c06a:	pop    esi
  41c06b:	(bad)  
  41c06c:	lock cmp al,0x3f
  41c06f:	mov    eax,0x94d47bb5
  41c074:	xchg   ebx,eax
  41c075:	stos   BYTE PTR es:[edi],al
  41c076:	daa    
  41c077:	push   esp
  41c078:	sbb    eax,0xa41ab19b
  41c07d:	push   edi
  41c07e:	xor    eax,eax
  41c080:	dec    eax
  41c081:	adc    al,0x30
  41c083:	imul   edi,DWORD PTR [edi],0x24cbc1c5
  41c089:	int    0x2c
  41c08b:	sbb    esi,DWORD PTR [ebx]
  41c08d:	scas   eax,DWORD PTR es:[edi]
  41c08e:	shl    ecx,cl
  41c090:	gs rol edi,cl
  41c093:	cmp    DWORD PTR [ecx+0xafbc37b],0xfb8521e4
  41c09d:	dec    ebx
  41c09e:	cmp    BYTE PTR [ecx-0x35],dh
  41c0a1:	push   ss
  41c0a2:	adc    BYTE PTR [ecx],cl
  41c0a4:	aaa    
  41c0a5:	rcl    esp,0xd2
  41c0a8:	xchg   DWORD PTR gs:[esi],ebx
  41c0ab:	sub    ebp,edx
  41c0ad:	cs cmp eax,0xab09e9c4
  41c0b3:	jne    0x41c066
  41c0b5:	out    dx,eax
  41c0b6:	mul    DWORD PTR [eax+ebx*4+0x49fc4a86]
  41c0bd:	xchg   esp,eax
  41c0be:	call   0x23b4034e
  41c0c3:	mov    dl,0x94
  41c0c5:	mov    ebp,0x65968ab0
  41c0ca:	repnz int 0x40
  41c0cd:	dec    eax
  41c0ce:	inc    ebp
  41c0cf:	dec    ebp
  41c0d0:	pusha  
  41c0d1:	add    BYTE PTR [edx+0x1e],dh
  41c0d4:	cmp    dl,BYTE PTR [edi-0x6cc4e0a6]
  41c0da:	fistp  WORD PTR [ebx]
  41c0dc:	loopne 0x41c0ca
  41c0de:	mov    dl,0x70
  41c0e0:	scas   eax,DWORD PTR es:[edi]
  41c0e1:	out    0x9a,eax
  41c0e3:	imul   ecx,DWORD PTR [edx+eax*8],0xffffffad
  41c0e7:	push   0xd77fd86a
  41c0ec:	gs mov edx,0x7b3e3db1
  41c0f2:	or     al,0x8f
  41c0f4:	sub    BYTE PTR [edi+0x55],ch
  41c0f7:	loope  0x41c089
  41c0f9:	mov    ebx,0x193069a3
  41c0fe:	ret    0x243d
  41c101:	inc    ecx
  41c102:	or     esp,DWORD PTR [eax+0x5fa045c6]
  41c108:	inc    esp
  41c109:	test   esi,ecx
  41c10b:	fidiv  DWORD PTR [eax-0x2fd3bb48]
  41c111:	inc    edx
  41c112:	ret    
  41c113:	test   DWORD PTR [esi+0x12429a10],ebx
  41c119:	int    0xcf
  41c11b:	jns    0x41c152
  41c11d:	inc    ebp
  41c11e:	ins    BYTE PTR es:[edi],dx
  41c11f:	sub    ecx,DWORD PTR [esp+esi*1-0x6b]
  41c123:	daa    
  41c124:	xor    al,0xe5
  41c126:	jmp    0x41c12d
  41c128:	inc    ebx
  41c129:	nop
  41c12a:	jne    0x41c0f0
  41c12c:	lods   eax,DWORD PTR ds:[esi]
  41c12d:	fcom   DWORD PTR [eax+0x13]
  41c130:	fnstenv [edi+esi*8]
  41c133:	cmp    DWORD PTR [ebp+0x2ea7c509],esi
  41c139:	jbe    0x41c18c
  41c13b:	mul    BYTE PTR ds:0x4e2eef7a
  41c141:	and    al,BYTE PTR ds:0xe19f81cf
  41c147:	fstp   TBYTE PTR [ecx+0x7ea2528c]
  41c14d:	sub    BYTE PTR [esi],ah
  41c14f:	or     al,0xc9
  41c151:	scas   eax,DWORD PTR es:[edi]
  41c152:	pop    eax
  41c153:	rol    dl,0xdb
  41c156:	push   ebp
  41c157:	push   0x41
  41c159:	sub    dh,BYTE PTR ds:0x2d97d34e
  41c15f:	in     eax,dx
  41c160:	jbe    0x41c1c8
  41c162:	pop    ss
  41c163:	push   esi
  41c164:	mov    cs,WORD PTR [ebx-0x48]
  41c167:	xchg   edi,eax
  41c168:	fwait
  41c169:	mov    esp,DWORD PTR [edx]
  41c16b:	mov    ds:0x9c65e43c,eax
  41c170:	push   ebx
  41c171:	in     eax,dx
  41c172:	cmp    al,0xfd
  41c174:	int3   
  41c175:	sub    bh,BYTE PTR [eax]
  41c177:	pop    ss
  41c178:	cld    
  41c179:	pop    esp
  41c17a:	aas    
  41c17b:	adc    DWORD PTR [edi],esp
  41c17d:	mov    ecx,ss
  41c17f:	pop    ss
  41c180:	stos   BYTE PTR es:[edi],al
  41c181:	inc    esp
  41c182:	lea    ebp,[edx-0x11]
  41c185:	sbb    BYTE PTR [ecx-0x339ab15b],ah
  41c18b:	or     DWORD PTR [eax+0x45],ebp
  41c18e:	imul   esi,ecx,0x232afb79
  41c194:	or     cl,BYTE PTR [edx-0x6b266fd]
  41c19a:	repz mov edx,0x94b30d2e
  41c1a0:	mov    bl,0x56
  41c1a2:	stc    
  41c1a3:	push   ecx
  41c1a4:	pushf  
  41c1a5:	inc    eax
  41c1a6:	cmp    bl,dh
  41c1a8:	das    
  41c1a9:	cmp    ecx,esi
  41c1ab:	inc    ecx
  41c1ac:	lods   al,BYTE PTR ds:[esi]
  41c1ad:	pushf  
  41c1ae:	pop    esp
  41c1af:	push   ecx
  41c1b0:	xor    eax,0x5ecae4b0
  41c1b5:	call   0xec33:0x3a00fa69
  41c1bc:	or     bl,BYTE PTR [ecx+0x7579db06]
  41c1c2:	ror    DWORD PTR [eax-0x53a6a067],0x6c
  41c1c9:	pop    ds
  41c1ca:	pop    ds
  41c1cb:	popa   
  41c1cc:	xor    DWORD PTR [ecx+0xcbd13b0],ebx
  41c1d2:	adc    dh,BYTE PTR [ebp-0x6f9a5c5a]
  41c1d8:	jnp    0x41c1dc
  41c1da:	out    0x54,al
  41c1dc:	inc    esi
  41c1dd:	inc    ecx
  41c1de:	int    0x52
  41c1e0:	add    al,0xc3
  41c1e2:	xacquire xchg DWORD PTR [esp+edi*2-0x8713687],eax
  41c1ea:	int3   
  41c1eb:	push   eax
  41c1ec:	jg     0x41c19e
  41c1ee:	icebp  
  41c1ef:	cmp    BYTE PTR ds:0x1adb3687,bl
  41c1f5:	dec    eax
  41c1f6:	pop    edx
  41c1f7:	lahf   
  41c1f8:	add    ebx,DWORD PTR [eax]
  41c1fa:	dec    edx
  41c1fb:	(bad)  [edi+0x46]
  41c1fe:	mov    bl,0x45
  41c200:	dec    ebx
  41c201:	das    
  41c202:	dec    edi
  41c203:	repnz lock or ebx,ecx
  41c207:	adc    eax,0xf5382a06
  41c20c:	lahf   
  41c20d:	mov    ebx,0xd218d4eb
  41c212:	inc    esp
  41c213:	ret    0xbe9c
  41c216:	push   ecx
  41c217:	sub    eax,0xd6f7064b
  41c21c:	je     0x41c260
  41c21e:	mov    cl,BYTE PTR [ebx+0x46]
  41c221:	push   esi
  41c222:	add    eax,0xa0a541d9
  41c227:	xor    BYTE PTR [edx+ecx*8],bl
  41c22a:	push   esp
  41c22b:	mov    ecx,0x4524afde
  41c230:	addr16 mov edx,0x4ad202cf
  41c236:	adc    DWORD PTR [ebx+0x60],ecx
  41c239:	outs   dx,DWORD PTR ds:[esi]
  41c23a:	adc    cl,BYTE PTR [eax-0x36a19ed6]
  41c240:	in     al,dx
  41c241:	bound  eax,QWORD PTR [eax-0x3144ef75]
  41c247:	cs pop ebx
  41c249:	inc    edx
  41c24a:	(bad)  
  41c24b:	js     0x41c276
  41c24d:	ss aas 
  41c24f:	je     0x41c2c6
  41c251:	mov    bh,0xd2
  41c253:	cmovo  ecx,DWORD PTR [esi]
  41c256:	or     DWORD PTR [esi+0x11d1aaab],eax
  41c25c:	inc    ebx
  41c25d:	mov    fs,WORD PTR [ecx]
  41c25f:	aaa    
  41c260:	adc    esi,ecx
  41c262:	pop    edx
  41c263:	(bad)  
  41c264:	mov    eax,ds:0xbf9d1200
  41c269:	jmp    0x1fe7493c
  41c26e:	in     eax,0x87
  41c270:	sbb    DWORD PTR [ecx],esp
  41c272:	push   ebp
  41c273:	sub    al,0xb3
  41c275:	(bad)  
  41c276:	std    
  41c277:	shr    BYTE PTR [edx],0x91
  41c27a:	es jge 0x41c243
  41c27d:	sbb    edx,ebp
  41c27f:	mov    ds:0x126cc004,al
  41c284:	ss and cl,al
  41c287:	or     eax,0xb271beb0
  41c28c:	iret   
  41c28d:	mov    ebx,0xe1317384
  41c292:	sbb    dh,cl
  41c294:	test   bl,dl
  41c296:	push   es
  41c297:	or     BYTE PTR fs:[edi+eax*1],bl
  41c29b:	sbb    edx,ecx
  41c29d:	sub    edx,esi
  41c29f:	add    al,0x5a
  41c2a1:	push   es
  41c2a2:	pop    ds
  41c2a3:	push   edx
  41c2a4:	xchg   edx,eax
  41c2a5:	out    0xca,al
  41c2a7:	push   ebp
  41c2a8:	jo     0x41c248
  41c2aa:	je     0x41c2fe
  41c2ac:	rcl    BYTE PTR [edi-0x251e2fc5],0xae
  41c2b3:	dec    ebx
  41c2b4:	add    al,0xf5
  41c2b6:	sahf   
  41c2b7:	lahf   
  41c2b8:	pop    es
  41c2b9:	inc    ch
  41c2bb:	pusha  
  41c2bc:	pop    ebx
  41c2bd:	aad    0xa9
  41c2bf:	or     eax,0x80cc02ab
  41c2c4:	lds    eax,FWORD PTR [edx-0x41f6b668]
  41c2ca:	arpl   WORD PTR [esi+0x2c],bx
  41c2cd:	faddp  st(1),st
  41c2cf:	xchg   BYTE PTR [edx+0x58],ch
  41c2d2:	pop    eax
  41c2d3:	add    BYTE PTR [esi],ah
  41c2d5:	aad    0x85
  41c2d7:	cmp    eax,0xa7628d86
  41c2dc:	add    esp,DWORD PTR [edx]
  41c2de:	int    0x50
  41c2e0:	out    0x4d,al
  41c2e2:	fwait
  41c2e3:	mov    esp,DWORD PTR [edi+0x64c7f730]
  41c2e9:	adc    DWORD PTR ds:0x498fe6d6,0x39
  41c2f0:	stos   DWORD PTR es:[edi],eax
  41c2f1:	jmp    0x41c2d6
  41c2f3:	sub    dl,0x62
  41c2f6:	stc    
  41c2f7:	stos   DWORD PTR es:[edi],eax
  41c2f8:	out    dx,al
  41c2f9:	inc    edi
  41c2fa:	push   0x3e6736ea
  41c2ff:	popf   
  41c300:	and    al,0x2f
  41c302:	aam    0x67
  41c304:	and    al,0xce
  41c306:	test   eax,0xf297502
  41c30b:	xchg   BYTE PTR [edi-0x186f73a9],bl
  41c311:	sbb    BYTE PTR [esp+ebx*1],bl
  41c314:	out    dx,al
  41c315:	pop    ss
  41c316:	pop    ebp
  41c317:	mov    ecx,eax
  41c319:	loop   0x41c34a
  41c31b:	test   eax,0xc9784603
  41c320:	das    
  41c321:	aas    
  41c322:	(bad)
  41c326:	call   0x68712c61
  41c32b:	scas   eax,DWORD PTR es:[edi]
  41c32c:	rcl    BYTE PTR [ebp-0x2c],1
  41c32f:	js     0x41c330
  41c331:	hlt    
  41c332:	xabort 0xf8
  41c335:	xor    al,0xe0
  41c337:	test   al,0xeb
  41c339:	mov    dh,0xff
  41c33b:	dec    edi
  41c33c:	pop    esi
  41c33d:	dec    ecx
  41c33e:	sub    bh,BYTE PTR [edx-0x55]
  41c341:	into   
  41c342:	push   es
  41c343:	mov    ecx,0x10fec2b9
  41c348:	adc    al,0x8a
  41c34a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41c34c:	adc    BYTE PTR [ebp-0x70],0x32
  41c350:	sub    eax,0x8fddb252
  41c355:	addr16 mov ch,0x76
  41c358:	inc    ecx
  41c359:	loop   0x41c2ef
  41c35b:	icebp  
  41c35c:	adc    BYTE PTR [ecx+0x23],ch
  41c35f:	jl     0x41c397
  41c361:	or     eax,0x8d5a395f
  41c366:	retf   0x1354
  41c369:	or     edi,edx
  41c36b:	pop    eax
  41c36c:	mov    esi,0xc157fedc
  41c371:	or     al,0xb4
  41c373:	enter  0x1f58,0xd3
  41c377:	pop    es
  41c378:	jmp    0x9af82c42
  41c37d:	out    dx,eax
  41c37e:	out    dx,eax
  41c37f:	xor    BYTE PTR ds:0x7e34c8f5,ch
  41c385:	or     al,dl
  41c387:	dec    esi
  41c388:	repz dec ecx
  41c38a:	imul   esi,edi,0xffffffa9
  41c38d:	imul   ebp,DWORD PTR [ebx-0x11],0xbef2310
  41c394:	lds    ebx,FWORD PTR [edi+0x63eab7ff]
  41c39a:	shr    ebx,0xa5
  41c39d:	adc    dh,bh
  41c39f:	mov    ecx,0x318612c7
  41c3a4:	test   al,0x83
  41c3a6:	push   ds
  41c3a7:	and    esi,DWORD PTR [eax+0x55a239ac]
  41c3ad:	lods   al,BYTE PTR ds:[esi]
  41c3ae:	loopne 0x41c3bc
  41c3b0:	mov    ecx,0x46d770d
  41c3b5:	shr    BYTE PTR [eax+0x12a25305],1
  41c3bb:	ss mov ebx,0x9f2d7cdd
  41c3c1:	sbb    bl,dl
  41c3c3:	cmp    DWORD PTR [eax-0x3528e50d],esi
  41c3c9:	sar    BYTE PTR [esi-0x1d],1
  41c3cc:	jl     0x41c3c1
  41c3ce:	inc    ebx
  41c3cf:	test   DWORD PTR [ebx],esp
  41c3d1:	ret    
  41c3d2:	mov    cl,0xa8
  41c3d4:	shr    DWORD PTR [edx+0x72],1
  41c3d7:	add    BYTE PTR [ebx-0x78525fde],cl
  41c3dd:	mov    dh,0xcc
  41c3df:	ds jo  0x41c3f1
  41c3e2:	fnstenv [ecx+0x3979576c]
  41c3e8:	cmp    edx,esp
  41c3ea:	outs   dx,DWORD PTR ds:[esi]
  41c3eb:	mov    bl,0xa6
  41c3ee:	mov    ah,bl
  41c3f0:	in     eax,dx
  41c3f1:	dec    DWORD PTR [edx]
  41c3f3:	test   DWORD PTR [edi],esi
  41c3f5:	loopne 0x41c3ea
  41c3f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3f8:	je     0x41c3fd
  41c3fa:	pop    esp
  41c3fb:	arpl   WORD PTR [ebx+0x72],bx
  41c3fe:	xor    al,0xba
  41c400:	repz gs push 0x1c
  41c404:	das    
  41c405:	sbb    ebx,DWORD PTR [eax]
  41c407:	push   0xffffff9d
  41c409:	in     al,0xaf
  41c40b:	pop    ds
  41c40c:	and    DWORD PTR ds:0xdec04762,edi
  41c412:	ss pop ebx
  41c414:	or     bh,dl
  41c416:	cmp    al,0x6b
  41c418:	push   ecx
  41c419:	cmp    eax,0xb630f069
  41c41e:	sub    BYTE PTR [edx],al
  41c420:	xor    ebx,esi
  41c422:	mov    al,ds:0xe8a50e88
  41c427:	inc    ebx
  41c428:	xor    DWORD PTR [edx-0x50],edi
  41c42b:	add    ah,BYTE PTR [edi+0x1b]
  41c42e:	xchg   edi,eax
  41c42f:	lahf   
  41c430:	nop
  41c431:	lock stos BYTE PTR es:[edi],al
  41c433:	add    eax,0x30892baf
  41c439:	leave  
  41c43a:	pusha  
  41c43b:	fld    st(2)
  41c43d:	cwde   
  41c43e:	jge    0x41c435
  41c440:	daa    
  41c441:	pop    ecx
  41c442:	mov    eax,ds:0xdec7c297
  41c447:	loope  0x41c4bc
  41c449:	enter  0xc050,0x84
  41c44d:	xchg   DWORD PTR [eax+0x5c],ebp
  41c450:	inc    ecx
  41c451:	jl     0x41c432
  41c453:	dec    esi
  41c454:	scas   eax,DWORD PTR es:[edi]
  41c455:	cmp    eax,0x8cc27019
  41c45a:	stc    
  41c45b:	in     eax,dx
  41c45c:	stos   DWORD PTR es:[edi],eax
  41c45d:	loop   0x41c42e
  41c45f:	ror    DWORD PTR [esi-0x5d8e6c3e],1
  41c465:	and    ecx,DWORD PTR [eax-0x4fb052df]
  41c46b:	fwait
  41c46c:	mov    bl,BYTE PTR [edi+ebp*1]
  41c46f:	lock (bad) 
  41c471:	cmp    edx,DWORD PTR [esi+0x5b]
  41c474:	jle    0x41c458
  41c476:	mov    ch,0xb4
  41c478:	jmp    DWORD PTR [edx]
  41c47a:	or     al,0xd0
  41c47c:	mov    cl,0xf7
  41c47e:	push   eax
  41c47f:	jmp    0x33b1:0x5568d375
  41c486:	mov    ebx,0x99bda5ae
  41c48b:	test   eax,0x8678322e
  41c490:	loop   0x41c433
  41c492:	mov    dl,0xcb
  41c494:	mov    ah,0x8d
  41c496:	or     BYTE PTR [edi-0x4b],al
  41c499:	out    dx,eax
  41c49a:	in     al,dx
  41c49b:	daa    
  41c49c:	call   0x5f07:0x5e9445e5
  41c4a3:	mov    cl,0x66
  41c4a5:	out    0x7e,eax
  41c4a7:	push   ds
  41c4a8:	pop    ecx
  41c4a9:	imul   eax,DWORD PTR [ebx],0xa528a97c
  41c4af:	aaa    
  41c4b0:	mov    bl,BYTE PTR [ecx*1-0x42c703f9]
  41c4b7:	xor    BYTE PTR [eax+0x7aeb55a0],cl
  41c4bd:	shl    BYTE PTR [edi+ebp*2],0x3a
  41c4c1:	lds    edx,FWORD PTR [edx]
  41c4c3:	jg     0x41c4ff
  41c4c5:	dec    edx
  41c4c6:	add    al,0xb1
  41c4c8:	add    DWORD PTR [esi+ebx*4-0x5c],0x37278f42
  41c4d0:	adc    DWORD PTR [ebx+edx*1+0x634aa644],edx
  41c4d7:	stc    
  41c4d8:	mov    eax,0xbe5a0df8
  41c4dd:	call   0x5a94:0x2e4a46fb
  41c4e4:	xor    eax,0x83f7f1e9
  41c4e9:	out    dx,eax
  41c4ea:	push   ds
  41c4eb:	push   esi
  41c4ec:	popa   
  41c4ed:	jg     0x41c4ab
  41c4ef:	xchg   edi,eax
  41c4f0:	shl    cl,cl
  41c4f2:	ss iret 
  41c4f4:	xor    edx,DWORD PTR [ebx-0x37d64e63]
  41c4fa:	push   cs
  41c4fb:	pop    edx
  41c4fc:	or     al,BYTE PTR [eax-0x6cb25daa]
  41c502:	cmp    al,0x36
  41c504:	stc    
  41c505:	cmp    al,BYTE PTR [edi-0x6a]
  41c508:	aas    
  41c509:	jbe    0x41c549
  41c50b:	dec    edx
  41c50c:	pop    ds
  41c50d:	push   esi
  41c50e:	pop    edx
  41c50f:	shl    DWORD PTR [ecx+0x3442f4d0],1
  41c515:	cmp    al,0xc4
  41c517:	fldcw  WORD PTR [ebx]
  41c519:	lods   al,BYTE PTR ds:[esi]
  41c51a:	rol    BYTE PTR [ebx-0x6db2b3f8],cl
  41c520:	das    
  41c521:	pop    esi
  41c522:	sbb    DWORD PTR [ebp-0x4846e2dc],0x1d
  41c529:	mov    esp,0x29e51fc3
  41c52e:	ror    DWORD PTR [edx-0x1d],1
  41c531:	call   0x8a59:0xc56e45b8
  41c538:	dec    esi
  41c539:	add    BYTE PTR [eax-0x3d254f83],0xa0
  41c540:	int    0x5d
  41c542:	mul    eax
  41c544:	jp     0x41c4e6
  41c546:	inc    ebp
  41c547:	mov    al,ds:0x368bb7b8
  41c54c:	cmp    eax,0x8c8e82ba
  41c551:	call   0x2335:0x605887a0
  41c558:	add    eax,DWORD PTR [eax-0x7b]
  41c55b:	cmc    
  41c55c:	clc    
  41c55d:	lods   eax,DWORD PTR ds:[esi]
  41c55e:	adc    ebx,DWORD PTR [eax+0x32]
  41c561:	enter  0xd385,0x7c
  41c565:	inc    edx
  41c566:	add    eax,DWORD PTR [eax]
  41c568:	add    BYTE PTR [eax+ebx*4],bl
  41c56b:	ret    
  41c56c:	mov    dh,0x2a
  41c56e:	sbb    dl,BYTE PTR [edi]
  41c570:	je     0x41c510
  41c572:	jmp    0xba59:0xaa34b2ff
  41c579:	push   edx
  41c57a:	dec    ecx
  41c57b:	call   0xed6730eb
  41c580:	shr    DWORD PTR [edx-0x1289f4b7],0x6c
  41c587:	add    BYTE PTR [edi-0x1c],0xc8
  41c58b:	iret   
  41c58c:	xchg   BYTE PTR [edx-0x328ff71a],cl
  41c592:	scas   al,BYTE PTR es:[edi]
  41c593:	dec    esi
  41c594:	int3   
  41c595:	in     eax,dx
  41c596:	dec    ebx
  41c597:	inc    ebp
  41c598:	and    eax,0x1ad37cfe
  41c59d:	out    dx,eax
  41c59e:	dec    edi
  41c59f:	mov    ebp,0x691f9233
  41c5a4:	pop    ss
  41c5a5:	leave  
  41c5a6:	data16 jecxz 0x41c5a9
  41c5a9:	adc    edx,edi
  41c5ab:	enter  0xc349,0xbb
  41c5af:	mov    ah,0xe6
  41c5b1:	sub    edi,DWORD PTR [ebx-0x6a14212c]
  41c5b7:	clc    
  41c5b8:	mov    fs,WORD PTR ds:0x69e38a3f
  41c5be:	inc    eax
  41c5bf:	dec    eax
  41c5c0:	aam    0x87
  41c5c2:	fsubr  st,st(6)
  41c5c4:	dec    ebx
  41c5c5:	imul   ecx,DWORD PTR [ebx-0x50],0x26
  41c5c9:	inc    ebx
  41c5ca:	jns    0x41c55b
  41c5cc:	pusha  
  41c5cd:	pop    ecx
  41c5ce:	lods   al,BYTE PTR ds:[esi]
  41c5cf:	fstp   DWORD PTR [edx]
  41c5d1:	xchg   DWORD PTR [eax],edi
  41c5d3:	cmp    al,0x2d
  41c5d5:	mov    al,ds:0xc8e267a7
  41c5da:	xor    al,0x22
  41c5dc:	out    0x5b,eax
  41c5de:	mov    ecx,0x3ffb054d
  41c5e3:	pop    ebx
  41c5e4:	(bad)  
  41c5e5:	icebp  
  41c5e6:	call   0xebb9:0xebed1606
  41c5ed:	scas   eax,DWORD PTR es:[edi]
  41c5ee:	stc    
  41c5ef:	retf   
  41c5f0:	xchg   edx,eax
  41c5f1:	mov    ecx,DWORD PTR [esi+0x68e85281]
  41c5f7:	sub    dl,BYTE PTR [edi+eax*2-0x38]
  41c5fb:	and    BYTE PTR [eax+0x6],ch
  41c5fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ff:	mov    WORD PTR [ebx+0xfc1604],?
  41c605:	sbb    esi,DWORD PTR [edx]
  41c607:	push   edx
  41c608:	pop    ecx
  41c609:	in     al,0xab
  41c60b:	mov    ch,0xdd
  41c60d:	mov    ebx,0x2b9ac2bd
  41c612:	fadd   st,st(1)
  41c614:	push   0x76
  41c616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c617:	sbb    eax,0x4137602a
  41c61c:	xchg   DWORD PTR [edx],ebp
  41c61e:	dec    eax
  41c61f:	aaa    
  41c620:	push   edx
  41c621:	xsavec [ecx-0x50]
  41c625:	jmp    0x41c60e
  41c627:	aas    
  41c628:	rcr    DWORD PTR [edx+0x4a],0xf3
  41c62c:	in     eax,dx
  41c62d:	mov    eax,ds:0xcb5f368c
  41c632:	ret    0x518
  41c635:	sbb    dh,BYTE PTR [esi]
  41c637:	mov    ebx,0x8909f4ec
  41c63c:	mul    DWORD PTR [ebx+0x7b]
  41c63f:	inc    edx
  41c640:	add    eax,0x5d347695
  41c645:	aad    0xe7
  41c647:	(bad)  
  41c648:	xor    eax,0xcc3db6bc
  41c64d:	push   esi
  41c64e:	mov    esp,0xed4acbac
  41c653:	xor    al,0x3
  41c655:	in     eax,0x4a
  41c657:	mov    ebx,0x8b42ca82
  41c65c:	xchg   ecx,eax
  41c65d:	xchg   edx,eax
  41c65e:	int3   
  41c65f:	aas    
  41c660:	mov    al,0xed
  41c662:	pop    ecx
  41c663:	mov    gs,WORD PTR [esi-0x1c]
  41c666:	ins    DWORD PTR es:[edi],dx
  41c667:	mov    eax,ds:0xfed4156b
  41c66c:	push   ss
  41c66d:	int    0x3f
  41c66f:	scas   al,BYTE PTR es:[edi]
  41c670:	inc    eax
  41c671:	pop    ds
  41c672:	and    DWORD PTR [edx-0x250cabd0],ebx
  41c678:	push   ss
  41c679:	push   ecx
  41c67a:	iret   
  41c67b:	jmp    0x41c688
  41c67d:	jmp    0xa2d:0x7cdff842
  41c684:	sbb    ebx,DWORD PTR [edi+0x71b136ea]
  41c68a:	popa   
  41c68b:	dec    edi
  41c68c:	push   eax
  41c68d:	adc    dh,BYTE PTR [edx+0x18]
  41c690:	lahf   
  41c691:	mov    ch,0xa3
  41c693:	rcr    esp,0xbd
  41c696:	jne    0x41c647
  41c698:	aam    0xea
  41c69a:	inc    ecx
  41c69b:	ss sub al,0x4c
  41c69e:	inc    edi
  41c69f:	cwde   
  41c6a0:	adc    BYTE PTR [eax+0x45edc404],ah
  41c6a6:	add    ebp,DWORD PTR [esp+eax*1-0x7719b47a]
  41c6ad:	mov    al,ds:0x828043ca
  41c6b2:	xchg   ebx,eax
  41c6b3:	test   DWORD PTR [ebp+ecx*4-0x7216f6f5],esi
  41c6ba:	ret    0x8642
  41c6bd:	mov    edx,0x44996c72
  41c6c2:	rol    BYTE PTR [ebx-0x1b470ddb],1
  41c6c8:	lods   al,BYTE PTR ds:[esi]
  41c6c9:	(bad)  
  41c6ca:	scas   eax,DWORD PTR es:[edi]
  41c6cb:	mov    ecx,0x69687b9d
  41c6d0:	sub    dh,BYTE PTR [ecx+0x35931dd1]
  41c6d6:	ret    0xf52d
  41c6d9:	or     esp,0xffffffaf
  41c6dc:	inc    esp
  41c6dd:	push   ss
  41c6de:	mov    al,0xbb
  41c6e0:	push   ss
  41c6e1:	xor    DWORD PTR [edx+edx*1-0x1119695a],0x30
  41c6e9:	mov    eax,ds:0xe270a2a3
  41c6ee:	mov    DWORD PTR [ebp-0x7a],esp
  41c6f1:	pop    ebp
  41c6f2:	xor    al,BYTE PTR [ecx-0x7d704623]
  41c6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6f9:	ins    DWORD PTR es:[edi],dx
  41c6fa:	xor    al,0xaa
  41c6fc:	fucomip st,st(6)
  41c6fe:	sbb    dl,dh
  41c700:	loop   0x41c6d6
  41c702:	stc    
  41c703:	in     al,0xa2
  41c705:	mov    edi,0xc4703aa2
  41c70a:	repnz or DWORD PTR [ebx+0x697bd257],edx
  41c711:	sbb    ecx,DWORD PTR [ecx-0x44]
  41c714:	daa    
  41c715:	and    DWORD PTR [edx+0x3ec4d1fb],eax
  41c71b:	sar    DWORD PTR [ebp+0x2c639e95],0xe5
  41c722:	cmp    al,0xe6
  41c724:	pusha  
  41c725:	sbb    DWORD PTR [esi+0x3],ebp
  41c728:	push   0x57
  41c72a:	lea    edi,[ebx-0x55]
  41c72d:	and    DWORD PTR [eax],0xffffffbb
  41c730:	out    0x6,eax
  41c732:	cs mov ecx,0x9301b4a0
  41c738:	xor    DWORD PTR [edx],ebp
  41c73a:	call   0x1ef57263
  41c73f:	or     esp,0xffffffe2
  41c742:	mov    al,0xe0
  41c744:	mov    ds:0x21599cc1,eax
  41c749:	in     eax,dx
  41c74a:	adc    al,0x90
  41c74c:	fnstcw WORD PTR [ebx+edi*1+0x4e367474]
  41c753:	daa    
  41c754:	cmp    ch,BYTE PTR ds:0x95e5098a
  41c75a:	stc    
  41c75b:	jge    0x41c74d
  41c75d:	in     eax,0xf4
  41c75f:	retf   0x3586
  41c762:	push   ss
  41c763:	mov    ebx,0xd3ca20ed
  41c768:	ret    0x3524
  41c76b:	mov    cl,0x91
  41c76d:	xchg   ecx,eax
  41c76e:	ins    BYTE PTR es:[edi],dx
  41c76f:	jl     0x41c78a
  41c771:	add    BYTE PTR [esi-0xe],cl
  41c774:	mov    al,ds:0x480914af
  41c779:	in     eax,dx
  41c77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c77b:	enter  0xcc60,0xc2
  41c77f:	ins    DWORD PTR es:[edi],dx
  41c780:	push   ebx
  41c781:	imul   esp,DWORD PTR cs:[eax],0xf544f518
  41c788:	(bad)  
  41c789:	in     al,dx
  41c78a:	pushf  
  41c78b:	jae    0x41c730
  41c78d:	lods   eax,DWORD PTR ds:[esi]
  41c78e:	daa    
  41c78f:	ja     0x41c7a6
  41c791:	mov    eax,0xe3f637c3
  41c796:	and    DWORD PTR [ebp+edx*8+0x7b5a2776],0xffffffb1
  41c79e:	out    dx,eax
  41c79f:	xchg   dh,bh
  41c7a1:	push   esp
  41c7a2:	xor    al,0x5b
  41c7a4:	fptan  
  41c7a6:	ds leave 
  41c7a8:	jns    0x41c752
  41c7aa:	ret    
  41c7ab:	sbb    al,0xda
  41c7ad:	adc    cl,BYTE PTR [ecx+0x4b]
  41c7b0:	push   bp
  41c7b2:	add    bl,bl
  41c7b4:	jle    0x41c827
  41c7b6:	or     eax,0x55e932d1
  41c7bb:	cmp    edx,esi
  41c7bd:	ds adc al,0x56
  41c7c0:	sbb    cl,BYTE PTR [edx+0x24]
  41c7c3:	cmp    BYTE PTR [edi+0x51],0xd
  41c7c7:	sub    eax,0x78295bca
  41c7cc:	or     eax,0xde32e814
  41c7d1:	fnstcw WORD PTR [edi]
  41c7d3:	addr16 jg 0x41c7db
  41c7d6:	js     0x41c80a
  41c7d8:	push   esi
  41c7d9:	mov    BYTE PTR [ebx+0x3b97e602],dh
  41c7df:	jg     0x41c84e
  41c7e1:	sub    ecx,edx
  41c7e3:	sbb    eax,0xd2a1d5f8
  41c7e8:	dec    esi
  41c7e9:	jne    0x41c84a
  41c7eb:	push   ebx
  41c7ec:	or     esi,DWORD PTR [edi]
  41c7ee:	sbb    DWORD PTR [edi+eax*2-0x77493495],0xffffffc5
  41c7f6:	mov    ds:0x137c314,eax
  41c7fb:	pop    ecx
  41c7fc:	mov    ebp,0xa6543cd1
  41c801:	in     al,0xcf
  41c803:	pop    edi
  41c804:	xor    DWORD PTR [ecx],edi
  41c806:	sub    ecx,DWORD PTR [esi-0x40]
  41c809:	test   BYTE PTR [edi],cl
  41c80b:	dec    eax
  41c80c:	adc    ebp,DWORD PTR [ebx+0x28c362d8]
  41c812:	mov    eax,ds:0x94a5fd1d
  41c817:	jno    0x41c87f
  41c819:	add    edi,DWORD PTR [edx+0x78]
  41c81c:	lods   al,BYTE PTR ss:[esi]
  41c81e:	hlt    
  41c81f:	sbb    al,0xd3
  41c821:	or     ah,BYTE PTR [ebp-0x4c]
  41c824:	test   eax,0x1c4af972
  41c829:	not    DWORD PTR es:[esi+eax*2+0x56]
  41c82e:	imul   eax,DWORD PTR [edi+0x2],0x60c7f1ef
  41c835:	fdiv   DWORD PTR [esi]
  41c837:	mov    eax,0xa15f9042
  41c83c:	lea    ecx,[esi]
  41c83e:	popf   
  41c83f:	mov    ecx,0xe4c13ead
  41c844:	mov    al,ds:0x7bed83ab
  41c849:	jne    0x41c7fc
  41c84b:	inc    ebx
  41c84c:	xchg   DWORD PTR [eax+0x5a1c166a],eax
  41c852:	xchg   ebx,eax
  41c853:	jns    0x41c834
  41c855:	pusha  
  41c856:	jmp    0x881e:0x4c6f90c2
  41c85d:	jne    0x41c858
  41c85f:	xchg   esi,eax
  41c860:	dec    eax
  41c861:	jle    0x41c7fc
  41c863:	pop    edi
  41c864:	pop    ds
  41c865:	lds    ebp,FWORD PTR [ebp+0x2]
  41c868:	icebp  
  41c869:	test   BYTE PTR ds:0xa4e0a621,0x9e
  41c870:	into   
  41c871:	mov    bl,0x3e
  41c873:	mov    cl,0xd7
  41c875:	adc    DWORD PTR ds:0x1e5139d4,ebx
  41c87b:	xor    DWORD PTR [esi+0x6231fafa],0xffffffaf
  41c882:	cmp    BYTE PTR [esi-0x6c],bl
  41c885:	add    ah,bh
  41c887:	jb     0x41c879
  41c889:	(bad)  
  41c88a:	(bad)  
  41c88b:	mov    ebp,ebx
  41c88d:	popa   
  41c88e:	frstor [edi]
  41c890:	sbb    dh,bh
  41c892:	(bad)  
  41c893:	push   ebx
  41c894:	xchg   ebp,eax
  41c895:	stos   DWORD PTR es:[edi],eax
  41c896:	pop    ebx
  41c897:	in     al,0x82
  41c899:	sub    ecx,esp
  41c89b:	fs jmp 0x8238:0xae232aab
  41c8a3:	push   edi
  41c8a4:	mov    BYTE PTR [edx-0xe84e604],dl
  41c8aa:	mov    eax,ds:0x543ff811
  41c8af:	mov    edi,0xfe9237b1
  41c8b4:	xchg   edx,eax
  41c8b5:	dec    esi
  41c8b6:	xchg   ecx,eax
  41c8b7:	dec    esp
  41c8b8:	shl    DWORD PTR [eax+0x1ad6dd6a],0x6e
  41c8bf:	cvtpi2ps xmm6,QWORD PTR [edx+0x66]
  41c8c3:	sub    ch,BYTE PTR gs:[ecx-0x53]
  41c8c7:	sbb    al,0x48
  41c8c9:	loopne 0x41c949
  41c8cb:	rol    BYTE PTR [edx+0x58],cl
  41c8ce:	adc    al,0xde
  41c8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8d1:	xchg   edx,eax
  41c8d2:	xchg   esp,eax
  41c8d3:	pop    ss
  41c8d4:	and    al,0x55
  41c8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8d7:	aam    0x55
  41c8d9:	or     ebx,DWORD PTR [esi]
  41c8db:	test   DWORD PTR [edi-0x77810441],0xb3f24b8d
  41c8e5:	pop    es
  41c8e6:	or     eax,0x394d8e9
  41c8eb:	stos   DWORD PTR es:[edi],eax
  41c8ec:	stc    
  41c8ed:	leave  
  41c8ee:	mov    ds:0xf52cb161,eax
  41c8f3:	mov    WORD PTR [bx+di],cs
  41c8f6:	jmp    FWORD PTR [eax-0x6e]
  41c8f9:	sub    al,0x9b
  41c8fb:	mov    al,0x87
  41c8fd:	mov    eax,ds:0x7ffbf9bd
  41c902:	scas   al,BYTE PTR es:[edi]
  41c903:	int    0x20
  41c905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c906:	xor    eax,0x28030e35
  41c90b:	mov    al,0x8b
  41c90d:	jmp    0x7559:0xba1c9d22
  41c914:	and    al,0x2
  41c916:	scas   al,BYTE PTR es:[edi]
  41c917:	mov    eax,ds:0xc216c38d
  41c91c:	xor    esi,DWORD PTR [esi-0x2c145a8]
  41c922:	xchg   edx,eax
  41c923:	nop
  41c924:	cmp    BYTE PTR [ecx],cl
  41c926:	icebp  
  41c927:	nop
  41c928:	cmp    DWORD PTR [eax-0xa],ebp
  41c92b:	dec    ecx
  41c92c:	mov    ah,0xe0
  41c92e:	loop   0x41c951
  41c930:	mov    ebp,0x8a9c4c81
  41c935:	stos   BYTE PTR es:[edi],al
  41c936:	pop    edx
  41c937:	std    
  41c938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c939:	cdq    
  41c93a:	sub    edx,DWORD PTR [edx-0x55]
  41c93d:	xor    eax,DWORD PTR [esi-0x7332e103]
  41c943:	adc    esi,DWORD PTR [ebx+0x6d]
  41c946:	jne    0x41c95d
  41c948:	int    0x74
  41c94a:	daa    
  41c94b:	jmp    0xb530:0x5dc59b3e
  41c952:	and    al,0x43
  41c954:	sbb    ebx,edx
  41c956:	(bad)  
  41c957:	fsub   DWORD PTR [edx]
  41c959:	and    dl,BYTE PTR [edi]
  41c95b:	(bad)  
  41c95c:	std    
  41c95d:	adc    DWORD PTR [edx-0x374b724e],0xffffff85
  41c964:	inc    edi
  41c965:	mov    bh,BYTE PTR [esp+ebx*2]
  41c968:	pop    ebp
  41c969:	jne    0x41c93d
  41c96b:	dec    edx
  41c96c:	fcom   DWORD PTR ds:0x944c2f1b
  41c972:	dec    ebp
  41c973:	mov    dh,ah
  41c975:	pop    ebx
  41c976:	ss push ecx
  41c978:	mov    al,0xf1
  41c97a:	sub    DWORD PTR [esp+ebx*4],esi
  41c97d:	push   edx
  41c97e:	iret   
  41c97f:	packssdw mm0,QWORD PTR [ebx-0xf212afd]
  41c986:	xchg   ecx,eax
  41c987:	enter  0xdb3,0xa9
  41c98b:	test   bh,ch
  41c98d:	jmp    0x41c96a
  41c98f:	out    dx,eax
  41c990:	or     eax,0x9a698b6f
  41c995:	sub    eax,0xdc9ba0cb
  41c99a:	push   ebp
  41c99b:	jp     0x41ca1b
  41c99d:	cmp    BYTE PTR [ecx+0xc],0x16
  41c9a1:	stos   BYTE PTR es:[edi],al
  41c9a2:	stc    
  41c9a3:	aaa    
  41c9a4:	jne    0x41c9da
  41c9a6:	pop    ds
  41c9a7:	adc    ah,BYTE PTR [ebx+esi*4-0x34fa9f06]
  41c9ae:	mov    ?,WORD PTR [ebp+0x27]
  41c9b1:	push   edi
  41c9b2:	mov    ebx,0x97b10c21
  41c9b7:	jl     0x41c9dd
  41c9b9:	sbb    eax,0xedfe1753
  41c9be:	lods   al,BYTE PTR ds:[esi]
  41c9bf:	mov    bh,0xc
  41c9c1:	cmp    edx,esp
  41c9c3:	ds jnp 0x41ca0c
  41c9c6:	and    ebx,DWORD PTR [ecx+0x302b3ed8]
  41c9cc:	xchg   BYTE PTR [ecx],al
  41c9ce:	stos   DWORD PTR es:[edi],eax
  41c9cf:	not    edx
  41c9d1:	popa   
  41c9d2:	push   ebp
  41c9d3:	jnp    0x41ca17
  41c9d5:	xlat   BYTE PTR ss:[ebx]
  41c9d7:	outs   dx,BYTE PTR ds:[esi]
  41c9d8:	in     eax,dx
  41c9d9:	jg     0x41c9ed
  41c9db:	in     al,dx
  41c9dc:	xchg   ebx,ecx
  41c9de:	dec    ebx
  41c9df:	xor    dh,BYTE PTR [eax+0x1f345ff5]
  41c9e5:	mov    ds:0xb89c6d69,al
  41c9ea:	push   ecx
  41c9eb:	fstp   QWORD PTR fs:[edi+0x48a933e0]
  41c9f2:	iret   
  41c9f3:	inc    esp
  41c9f4:	fdiv   DWORD PTR [eax-0x1c6e6d0c]
  41c9fa:	jp     0x41c9f5
  41c9fc:	(bad)  
  41c9fd:	xchg   ecx,eax
  41c9fe:	cmp    eax,0x33f05e86
  41ca03:	mov    bh,0xe0
  41ca05:	rcl    DWORD PTR [ebx-0x7f],0xb9
  41ca09:	sbb    al,0x41
  41ca0b:	xchg   BYTE PTR [eax],bh
  41ca0d:	add    al,0xd1
  41ca0f:	jns    0x41c9a8
  41ca11:	jns    0x41ca27
  41ca13:	out    dx,eax
  41ca14:	test   BYTE PTR gs:[edx+0x3fc774c2],cl
  41ca1b:	lods   eax,DWORD PTR ds:[esi]
  41ca1c:	cli    
  41ca1d:	es out 0x78,al
  41ca20:	jns    0x41ca9a
  41ca22:	mov    ds:0x97710ce1,al
  41ca27:	pusha  
  41ca28:	jmp    0x3a71:0x421c39ae
  41ca2f:	mov    esi,0x482ad3aa
  41ca34:	mov    ah,0x87
  41ca36:	in     al,dx
  41ca37:	mov    al,0xa6
  41ca39:	scas   al,BYTE PTR es:[edi]
  41ca3a:	mov    edi,0x9c088f1f
  41ca3f:	fcmovu st,st(5)
  41ca41:	aas    
  41ca42:	or     ch,cl
  41ca44:	xor    DWORD PTR [edi-0x4e],eax
  41ca47:	sbb    eax,0x8e260c3a
  41ca4c:	addr16 sbb al,0x1f
  41ca4f:	popf   
  41ca50:	jge    0x41ca73
  41ca52:	cmc    
  41ca53:	shl    al,cl
  41ca55:	cmp    eax,0x91130f3e
  41ca5a:	je     0x41ca53
  41ca5c:	jmp    0x7f941d18
  41ca61:	push   0xffffffb2
  41ca63:	dec    esp
  41ca64:	add    eax,DWORD PTR [edi-0x4345140d]
  41ca6a:	das    
  41ca6b:	cmp    dh,BYTE PTR [esi+0x1e67855d]
  41ca71:	pop    esp
  41ca72:	sar    ebp,0x96
  41ca75:	push   esi
  41ca76:	adc    bh,bl
  41ca78:	fcomp  DWORD PTR [esi+0x53059a66]
  41ca7e:	adc    eax,0xb588d1e0
  41ca83:	xor    al,0x16
  41ca85:	(bad)  [eax]
  41ca87:	in     eax,0x51
  41ca89:	cs push cs
  41ca8b:	mov    ds:0x5e3c3bae,al
  41ca90:	aas    
  41ca91:	call   0x428a:0xf23b6cc5
  41ca98:	(bad)  
  41ca99:	out    0x38,al
  41ca9b:	lock pop ds
  41ca9d:	enter  0x234d,0xbf
  41caa1:	out    dx,eax
  41caa2:	jl     0x41cab9
  41caa4:	call   0xaf538190
  41caa9:	dec    esi
  41caaa:	repz test BYTE PTR [esi-0xe9e04e3],cl
  41cab1:	mov    al,ds:0xf743f9dd
  41cab6:	push   ss
  41cab7:	adc    BYTE PTR [edi-0x480600d4],dh
  41cabd:	daa    
  41cabe:	cmp    ebp,ecx
  41cac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cac1:	cs pop ss
  41cac3:	shr    DWORD PTR [eax-0x5c8af077],0x2d
  41caca:	push   0x7a
  41cacc:	mov    eax,0xe6c0712d
  41cad1:	stos   DWORD PTR es:[edi],eax
  41cad2:	mov    dh,0xf7
  41cad4:	pusha  
  41cad5:	jmp    0x41cb01
  41cad7:	(bad)  
  41cad8:	pushf  
  41cad9:	rol    ah,0xe3
  41cadc:	out    dx,eax
  41cadd:	inc    edx
  41cade:	xor    dh,BYTE PTR [edi+0xc93e5a9]
  41cae4:	and    DWORD PTR [esi-0x6cb5f8ad],ecx
  41caea:	add    eax,ebx
  41caec:	xor    DWORD PTR [eax+0x7c],eax
  41caef:	dec    ebx
  41caf0:	adc    edx,DWORD PTR [edx]
  41caf2:	test   eax,0x2a21ac7
  41caf7:	mov    eax,0x7e0a722
  41cafc:	push   ecx
  41cafd:	jb     0x41cab6
  41caff:	outs   dx,DWORD PTR ds:[esi]
  41cb00:	xor    al,0xad
  41cb02:	push   ebp
  41cb03:	push   esi
  41cb04:	mov    bh,0xb0
  41cb06:	iret   
  41cb07:	pop    eax
  41cb08:	repz call 0xba3bd0e0
  41cb0e:	pop    ecx
  41cb0f:	adc    edx,0xffffff83
  41cb12:	icebp  
  41cb13:	and    eax,0xf19d05f0
  41cb18:	sbb    ah,0x83
  41cb1b:	rcpps  xmm4,xmm3
  41cb1e:	or     edx,DWORD PTR [ecx+0x7a]
  41cb21:	dec    ebx
  41cb22:	sti    
  41cb23:	and    dl,BYTE PTR [eax+0x58]
  41cb26:	cmp    al,0xbd
  41cb28:	or     BYTE PTR [ebx],0x4d
  41cb2b:	jnp    0x41cb82
  41cb2d:	mov    dl,0x7b
  41cb2f:	nop
  41cb30:	outs   dx,DWORD PTR ds:[esi]
  41cb31:	xor    dl,BYTE PTR [ebx+0x1c9229c3]
  41cb37:	mov    cl,0xb4
  41cb39:	dec    edx
  41cb3a:	cli    
  41cb3b:	jns    0x41cae1
  41cb3d:	xchg   BYTE PTR [ebx],cl
  41cb3f:	test   DWORD PTR [ebx+0x27],edx
  41cb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb43:	pop    ebx
  41cb44:	shl    edi,1
  41cb46:	mov    ds:0x309fc4b7,ax
  41cb4c:	fsubr  QWORD PTR [ebx+0x6183be84]
  41cb52:	push   edi
  41cb53:	ficomp WORD PTR [eax-0x1ae352b1]
  41cb59:	sub    DWORD PTR [edx+0x19d16ce8],edx
  41cb5f:	xor    eax,0x914a13c
  41cb64:	popf   
  41cb65:	pop    ss
  41cb66:	inc    ebx
  41cb67:	out    dx,eax
  41cb68:	repz aam 0x15
  41cb6b:	test   eax,0xf890ccf6
  41cb70:	outs   dx,BYTE PTR ds:[esi]
  41cb71:	fisub  DWORD PTR [ebx]
  41cb73:	dec    eax
  41cb74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb75:	push   cs
  41cb76:	cmp    DWORD PTR [eax],ecx
  41cb78:	in     eax,0x35
  41cb7a:	xor    DWORD PTR [esi],esi
  41cb7c:	out    dx,eax
  41cb7d:	xchg   BYTE PTR [edx],al
  41cb7f:	cs jle 0x41cbbf
  41cb82:	dec    ebx
  41cb83:	test   al,0x5a
  41cb85:	and    ebx,DWORD PTR [esi+eax*1]
  41cb88:	(bad)  
  41cb89:	jmp    0xdb872881
  41cb8e:	mov    dl,BYTE PTR [ebp+0x3d]
  41cb91:	jmp    0xacf1bbf
  41cb96:	xchg   DWORD PTR [edx],esi
  41cb98:	aam    0x9e
  41cb9a:	out    dx,al
  41cb9b:	(bad)  
  41cb9c:	in     eax,0x75
  41cb9e:	push   ss
  41cb9f:	and    DWORD PTR [eax-0x6c],esi
  41cba2:	js     0x41cc04
  41cba4:	je     0x41cba7
  41cba6:	scas   eax,DWORD PTR es:[edi]
  41cba7:	mov    ch,0x9a
  41cba9:	xchg   BYTE PTR [edx],dl
  41cbab:	add    BYTE PTR [edi-0x72b70578],dh
  41cbb1:	mov    bh,0x26
  41cbb3:	loopne 0x41cbb3
  41cbb5:	sti    
  41cbb6:	div    DWORD PTR ds:0xe198fe26
  41cbbc:	outs   dx,DWORD PTR ds:[esi]
  41cbbd:	mov    ah,BYTE PTR [esi+0x3a]
  41cbc0:	shl    BYTE PTR [esi],cl
  41cbc2:	aam    0xcc
  41cbc4:	jb     0x41cc0b
  41cbc6:	movq   QWORD PTR [ebp-0x270fc90],mm5
  41cbcd:	div    DWORD PTR [ecx+0x7a96fd9]
  41cbd3:	int    0xd5
  41cbd5:	aad    0x7c
  41cbd7:	lahf   
  41cbd8:	aaa    
  41cbd9:	pop    ecx
  41cbda:	fstp   DWORD PTR [edx+edx*4-0x47]
  41cbde:	dec    edi
  41cbdf:	sub    BYTE PTR [esi+0xf402bb9],al
  41cbe5:	dec    edx
  41cbe6:	mov    ebp,0x6742a255
  41cbeb:	sub    edi,edx
  41cbed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbee:	mov    dh,0x27
  41cbf0:	jp     0x41cb89
  41cbf2:	push   esp
  41cbf3:	ins    BYTE PTR es:[edi],dx
  41cbf4:	push   ds
  41cbf5:	fisttp WORD PTR [edx+0x5f49ecb8]
  41cbfb:	repnz loop 0x41cbed
  41cbfe:	dec    esp
  41cbff:	lock jb 0x41cc25
  41cc02:	add    edi,DWORD PTR [edx]
  41cc04:	and    eax,0xe2ad7a8d
  41cc09:	frstor [edx+0x37]
  41cc0c:	sub    BYTE PTR [edx+0x6dbc130a],dl
  41cc12:	or     BYTE PTR [edi+0x15],ah
  41cc15:	(bad)  
  41cc16:	nop
  41cc17:	dec    esp
  41cc18:	adc    BYTE PTR [esi+ebp*2],0x27
  41cc1c:	jecxz  0x41cc8f
  41cc1e:	(bad)  
  41cc1f:	pop    eax
  41cc20:	in     al,0xd2
  41cc22:	aam    0xc6
  41cc24:	pushf  
  41cc25:	add    eax,0x86ba14d6
  41cc2a:	fcom   QWORD PTR [ecx+0x62]
  41cc2d:	push   cs
  41cc2e:	push   cs
  41cc2f:	push   ecx
  41cc30:	sub    edx,ecx
  41cc32:	sbb    bl,BYTE PTR [ecx]
  41cc34:	retf   
  41cc35:	hlt    
  41cc36:	jbe    0x41cc57
  41cc38:	xor    eax,0x8c5f393b
  41cc3d:	test   al,0xab
  41cc3f:	(bad)  [edx-0x256ab4d3]
  41cc45:	pop    edi
  41cc46:	lahf   
  41cc47:	pop    eax
  41cc48:	xchg   ebx,eax
  41cc49:	push   ebp
  41cc4a:	(bad)  
  41cc4b:	push   cs
  41cc4c:	imul   ebx,DWORD PTR [esi-0x1c3188fb],0x9462f016
  41cc56:	ins    BYTE PTR es:[edi],dx
  41cc57:	out    0xfe,eax
  41cc59:	cmp    bh,BYTE PTR [edx]
  41cc5b:	xchg   ebp,eax
  41cc5c:	mov    edx,DWORD PTR [eax+edx*8]
  41cc5f:	das    
  41cc60:	jge    0x41cc64
  41cc62:	push   ebp
  41cc63:	ss mov dh,0xb9
  41cc66:	jne    0x41cc52
  41cc68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc69:	fsub   DWORD PTR [esi+0x1a]
  41cc6c:	xchg   ebx,eax
  41cc6d:	adc    BYTE PTR [eax+ecx*2-0x3fdd88fb],0x97
  41cc75:	popa   
  41cc76:	dec    edx
  41cc77:	mov    edx,0xf7c0cea
  41cc7c:	call   0x3a22:0x6b21790c
  41cc83:	push   esi
  41cc84:	es or  eax,0xe45f69a1
  41cc8a:	xlat   BYTE PTR ds:[ebx]
  41cc8b:	int3   
  41cc8c:	dec    edx
  41cc8d:	mov    edx,0xe013fb1a
  41cc92:	outs   dx,DWORD PTR ds:[esi]
  41cc93:	dec    eax
  41cc94:	lds    esi,FWORD PTR [edx+0x2]
  41cc97:	mov    bl,0x93
  41cc99:	stc    
  41cc9a:	mov    dh,0xba
  41cc9c:	ja     0x41cd08
  41cc9e:	outs   dx,BYTE PTR ds:[esi]
  41cc9f:	mov    esp,0xd2f7cde2
  41cca4:	push   ds
  41cca5:	or     edx,DWORD PTR [edi-0x37]
  41cca8:	std    
  41cca9:	adc    BYTE PTR [edi+ebx*2],cl
  41ccac:	mov    ebp,0x73eeb277
  41ccb1:	ss jb  0x41cc75
  41ccb4:	(bad)  
  41ccb5:	outs   dx,DWORD PTR ds:[esi]
  41ccb6:	ja     0x41ccbd
  41ccb8:	adc    BYTE PTR [ebp+0x30],ah
  41ccbb:	and    DWORD PTR [edx],0x92d95bc4
  41ccc1:	into   
  41ccc2:	popf   
  41ccc3:	cmp    bh,BYTE PTR [ebp+0x688d69df]
  41ccc9:	shl    bl,cl
  41cccb:	xchg   esp,eax
  41cccc:	sub    al,0xbf
  41ccce:	sub    ebp,DWORD PTR ds:[ecx+0x54999008]
  41ccd5:	jmp    esp
  41ccd7:	into   
  41ccd8:	sbb    al,0x9
  41ccda:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ccdc:	xor    BYTE PTR [ecx-0x61],bl
  41ccdf:	jmp    0x41cc71
  41cce1:	mov    eax,0xc1b8783a
  41cce6:	outs   dx,BYTE PTR ds:[esi]
  41cce7:	xchg   edx,eax
  41cce8:	jne    0x41cd37
  41ccea:	push   esp
  41cceb:	or     DWORD PTR [ebp-0x2d],ebp
  41ccee:	rcr    BYTE PTR [ebx+0x10d71834],1
  41ccf4:	std    
  41ccf5:	adc    DWORD PTR [ecx],0x45
  41ccf8:	adc    BYTE PTR [ebp+eiz*2-0x5a],0x7c
  41ccfd:	test   DWORD PTR [eax+0x159e9438],0xee10ba7d
  41cd07:	mov    cl,0x16
  41cd09:	add    cl,BYTE PTR [ebp-0x4b]
  41cd0c:	inc    eax
  41cd0d:	inc    esp
  41cd0e:	sub    al,0x3a
  41cd10:	or     dl,BYTE PTR [ecx+0x16]
  41cd13:	mov    bh,0x89
  41cd15:	std    
  41cd16:	xlat   BYTE PTR ds:[ebx]
  41cd17:	sbb    BYTE PTR [edx+0x7c3689af],bh
  41cd1d:	cmp    BYTE PTR [ecx],bh
  41cd1f:	jmp    0xaad61a8f
  41cd24:	fdivr  st,st(2)
  41cd26:	ret    0x5184
  41cd29:	imul   esp,esi,0xffffffe1
  41cd2c:	stc    
  41cd2d:	iret   
  41cd2e:	retf   0x513c
  41cd31:	pop    ds
  41cd32:	out    dx,eax
  41cd33:	aas    
  41cd34:	sbb    al,0xc2
  41cd36:	jnp    0x41cd34
  41cd38:	sbb    edx,DWORD PTR [edx+0x58a60cf0]
  41cd3e:	cmc    
  41cd3f:	int3   
  41cd40:	adc    al,0x13
  41cd42:	ins    DWORD PTR es:[edi],dx
  41cd43:	sti    
  41cd44:	out    0x47,al
  41cd46:	push   esp
  41cd47:	xchg   ebx,eax
  41cd48:	int    0xb0
  41cd4a:	push   ebp
  41cd4b:	shl    ch,0xee
  41cd4e:	and    dh,BYTE PTR [esi]
  41cd50:	mov    ah,0xfc
  41cd52:	pop    es
  41cd53:	or     DWORD PTR [edi+edi*1-0x3cded18c],0xe70918c2
  41cd5e:	xor    eax,0xe1d10a75
  41cd63:	inc    ecx
  41cd64:	push   ebp
  41cd65:	cmp    ch,al
  41cd67:	daa    
  41cd68:	sub    ecx,DWORD PTR [esi+edi*8+0x7c]
  41cd6c:	stos   BYTE PTR es:[edi],al
  41cd6d:	inc    ecx
  41cd6e:	das    
  41cd6f:	and    ch,ah
  41cd71:	xor    eax,edx
  41cd73:	sub    BYTE PTR [ebx-0x7e],ch
  41cd76:	inc    eax
  41cd77:	mov    edi,0x4b04f742
  41cd7c:	and    esp,esp
  41cd7e:	xchg   edx,eax
  41cd7f:	lock push es
  41cd81:	(bad)
  41cd84:	jge    0x41cd35
  41cd86:	stc    
  41cd87:	jbe    0x41cdd0
  41cd89:	dec    edi
  41cd8a:	sub    BYTE PTR [eax+0x49dc68a8],bl
  41cd90:	sti    
  41cd91:	ins    DWORD PTR es:[edi],dx
  41cd92:	add    al,0x2d
  41cd94:	aas    
  41cd95:	or     cl,BYTE PTR [edi+0x7f]
  41cd98:	ds xchg ebx,eax
  41cd9a:	imul   eax,DWORD PTR [ebp-0x29],0x647d564
  41cda1:	add    ah,ah
  41cda3:	dec    esi
  41cda4:	ret    
  41cda5:	fsubr  QWORD PTR [edi-0x4fdf3214]
  41cdab:	addr16 xchg ebp,eax
  41cdad:	xlat   BYTE PTR ds:[ebx]
  41cdae:	sbb    edi,0xffffff9e
  41cdb1:	dec    eax
  41cdb2:	xchg   ecx,eax
  41cdb3:	nop
  41cdb4:	pop    ebx
  41cdb5:	out    dx,al
  41cdb6:	cwde   
  41cdb7:	sbb    BYTE PTR ss:[esi+0x28],0xf3
  41cdbc:	popf   
  41cdbd:	ja     0x41cdf6
  41cdbf:	pop    ds
  41cdc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdc1:	arpl   WORD PTR [edx+0x15720851],bx
  41cdc7:	scas   al,BYTE PTR es:[edi]
  41cdc8:	sub    eax,0x3fa51ce6
  41cdcd:	mov    ?,WORD PTR [ecx]
  41cdcf:	jp     0x41cdb6
  41cdd1:	jl     0x41cdd2
  41cdd3:	push   0x44
  41cdd5:	mov    bh,0x17
  41cdd7:	sbb    dl,bh
  41cdd9:	ins    DWORD PTR es:[edi],dx
  41cdda:	mov    edx,0x21f8559b
  41cddf:	or     eax,0xe43e76a4
  41cde4:	or     al,0x73
  41cde6:	push   ds
  41cde7:	gs push ebx
  41cde9:	sahf   
  41cdea:	pop    ss
  41cdeb:	lods   eax,DWORD PTR ds:[esi]
  41cdec:	lahf   
  41cded:	aas    
  41cdee:	in     al,0x93
  41cdf0:	retf   0xea56
  41cdf3:	scas   al,BYTE PTR es:[edi]
  41cdf4:	pop    ds
  41cdf5:	lahf   
  41cdf6:	jns    0x41cdf1
  41cdf8:	and    dl,dh
  41cdfa:	xchg   DWORD PTR [edi+0x55],esi
  41cdfd:	out    dx,al
  41cdfe:	pop    es
  41cdff:	gs push esp
  41ce01:	jno    0x41ce4f
  41ce03:	loop   0x41ce28
  41ce05:	test   eax,0x5c7d3f17
  41ce0a:	jecxz  0x41cdd1
  41ce0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce0d:	cli    
  41ce0e:	out    dx,al
  41ce0f:	mov    ch,0xac
  41ce11:	cld    
  41ce12:	stos   BYTE PTR es:[edi],al
  41ce13:	(bad)  
  41ce14:	sbb    al,0x14
  41ce16:	pop    edx
  41ce17:	cs (bad) 
  41ce19:	cmc    
  41ce1a:	xchg   esi,eax
  41ce1b:	rcl    DWORD PTR [eax-0x20],0x84
  41ce1f:	ins    DWORD PTR es:[edi],dx
  41ce20:	mov    esp,0xab6b7da3
  41ce25:	xchg   ecx,eax
  41ce26:	lahf   
  41ce27:	jno    0x41ce18
  41ce29:	sub    ebp,esi
  41ce2b:	outs   dx,BYTE PTR ds:[esi]
  41ce2c:	fnstcw WORD PTR [eax]
  41ce2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce2f:	push   esi
  41ce30:	dec    ebx
  41ce31:	shr    BYTE PTR [esi+0x39181d73],cl
  41ce37:	xchg   esi,eax
  41ce38:	clc    
  41ce39:	(bad)  
  41ce3b:	cld    
  41ce3c:	push   es
  41ce3d:	cmp    DWORD PTR [ebp+0x72],eax
  41ce40:	adc    eax,0xdfd4474e
  41ce45:	aam    0x9f
  41ce47:	mov    DWORD PTR [edx-0x2ab40c1f],edx
  41ce4d:	aam    0x3d
  41ce4f:	int3   
  41ce50:	add    al,BYTE PTR [edi+eax*2+0x76]
  41ce54:	fs or  al,0xd2
  41ce57:	ror    DWORD PTR [edx-0x30],cl
  41ce5a:	cmp    ecx,DWORD PTR [esi]
  41ce5c:	test   ecx,ebx
  41ce5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce5f:	xor    ebx,ebp
  41ce61:	xor    BYTE PTR [ecx-0x657bab5],ch
  41ce67:	or     al,al
  41ce69:	push   eax
  41ce6a:	mov    ebx,0xc020b5c9
  41ce6f:	in     al,0x75
  41ce71:	lods   eax,DWORD PTR ds:[esi]
  41ce72:	gs (bad) 
  41ce75:	dec    ecx
  41ce76:	(bad)  
  41ce77:	inc    eax
  41ce78:	mov    WORD PTR [edi+ecx*2-0x4904cfa5],?
  41ce7f:	jecxz  0x41cedb
  41ce81:	mov    dl,0x18
  41ce83:	(bad)  
  41ce84:	pop    esi
  41ce85:	add    al,BYTE PTR ds:0x4eaf7b4d
  41ce8b:	xor    esp,eax
  41ce8d:	in     eax,0x31
  41ce8f:	mov    dl,0x72
  41ce91:	sbb    DWORD PTR [ebp-0x10f6a7ba],ebx
  41ce97:	mov    esp,0xa12985fe
  41ce9c:	cmp    ecx,DWORD PTR [ebx-0x2]
  41ce9f:	rcl    DWORD PTR [ebp-0x5f],cl
  41cea2:	jle    0x41ce7d
  41cea4:	mov    ch,0x31
  41cea6:	mov    edx,DWORD PTR [ebp-0x3cb021ee]
  41ceac:	stos   DWORD PTR es:[edi],eax
  41cead:	mov    cl,0x57
  41ceaf:	mov    cl,0xc1
  41ceb1:	sbb    ch,BYTE PTR [esi+0x64]
  41ceb4:	xchg   BYTE PTR ds:0x15132c0f,al
  41ceba:	dec    edi
  41cebb:	adc    al,0xf5
  41cebd:	pop    edi
  41cebe:	push   ebx
  41cebf:	call   0xd573:0x5edcfedb
  41cec6:	cmp    eax,0x1c6c2382
  41cecb:	aaa    
  41cecc:	cld    
  41cecd:	loopne 0x41cec5
  41cecf:	fidivr DWORD PTR [eax]
  41ced1:	push   ebx
  41ced2:	(bad)  
  41ced3:	int3   
  41ced4:	retf   0xa4e8
  41ced7:	mov    ah,BYTE PTR [edi+esi*4]
  41ceda:	test   al,0x16
  41cedc:	cli    
  41cedd:	ror    DWORD PTR [esp+esi*1],0x86
  41cee1:	test   ecx,eax
  41cee3:	lahf   
  41cee4:	mov    edi,0xeae8650b
  41cee9:	dec    esi
  41ceea:	pop    ecx
  41ceeb:	daa    
  41ceec:	inc    ebp
  41ceed:	pop    edi
  41ceee:	jmp    0x8b4f068f
  41cef3:	fistp  WORD PTR [edi+0x7a5389bb]
  41cef9:	cmp    ecx,DWORD PTR [eax-0x65283bb]
  41ceff:	mov    al,0x8f
  41cf01:	mov    WORD PTR [edx-0x6828d443],ss
  41cf07:	or     dl,BYTE PTR [eax]
  41cf09:	mov    ebx,0xd5812419
  41cf0e:	lea    ebp,[esp+eax*1+0x2d]
  41cf12:	mov    esi,0x7defda4
  41cf17:	ja     0x41cea6
  41cf19:	cmp    al,cl
  41cf1b:	pop    ebp
  41cf1c:	fst    DWORD PTR [ebp-0xd]
  41cf1f:	imul   ebp,ecx,0x9e6173b7
  41cf25:	jnp    0x41ced4
  41cf27:	xchg   ecx,eax
  41cf28:	mov    DWORD PTR [ebx],ebx
  41cf2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf2b:	jmp    DWORD PTR [ebx-0x5d]
  41cf2e:	nop
  41cf2f:	mov    ah,0xb7
  41cf31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf32:	jo     0x41cf86
  41cf34:	pusha  
  41cf35:	(bad)  
  41cf36:	or     al,0x3d
  41cf38:	aaa    
  41cf39:	fidivr WORD PTR [ecx+0x3a4830e9]
  41cf3f:	mov    dl,0x68
  41cf41:	jecxz  0x41cf31
  41cf43:	jmp    0xe97eb55
  41cf48:	and    al,0xbe
  41cf4a:	test   bl,dl
  41cf4c:	test   DWORD PTR [eax],edx
  41cf4e:	ja     0x41cf59
  41cf50:	test   al,0xa
  41cf52:	data16 (bad) 
  41cf54:	lahf   
  41cf55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf56:	adc    dh,BYTE PTR [ebx-0x3c]
  41cf59:	sub    al,0x22
  41cf5b:	jmp    0x41cfac
  41cf5d:	mov    DWORD PTR [edx-0x741a12c4],0x5430bd0e
  41cf67:	imul   edi,DWORD PTR [ecx-0x4d],0x3b
  41cf6b:	adc    DWORD PTR [ebx],0x31
  41cf6e:	in     al,dx
  41cf6f:	add    edx,DWORD PTR [ebp+ebp*2-0x4d]
  41cf73:	inc    edx
  41cf74:	pop    ds
  41cf75:	inc    edi
  41cf76:	mov    dl,0x7a
  41cf78:	jns    0x41cf86
  41cf7a:	lock xor ebx,ebp
  41cf7d:	out    0x34,eax
  41cf7f:	cwde   
  41cf80:	rol    BYTE PTR [edi],0xf7
  41cf83:	sbb    eax,0x198b34d6
  41cf88:	mov    ch,BYTE PTR [ebx*1-0x374ed851]
  41cf8f:	ret    0x80b7
  41cf92:	mov    ah,0x5
  41cf94:	call   0x870:0x4d022900
  41cf9b:	in     eax,0xec
  41cf9d:	cdq    
  41cf9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf9f:	fimul  WORD PTR [ebp+0x1b]
  41cfa2:	aas    
  41cfa3:	(bad)  
  41cfa5:	mov    eax,0xb8d654d7
  41cfaa:	enter  0x2b70,0x13
  41cfae:	xor    edi,ebx
  41cfb0:	lahf   
  41cfb1:	scas   al,BYTE PTR es:[edi]
  41cfb2:	xor    eax,0x5f279a8d
  41cfb7:	aam    0xbd
  41cfb9:	addr16 dec ebx
  41cfbb:	cmc    
  41cfbc:	test   ebx,eax
  41cfbe:	or     al,0xf0
  41cfc0:	xchg   esp,eax
  41cfc1:	sbb    BYTE PTR [ecx],cl
  41cfc3:	(bad)  
  41cfc4:	out    dx,eax
  41cfc5:	xchg   ebx,ebx
  41cfc7:	lods   eax,DWORD PTR ds:[esi]
  41cfc8:	or     al,0xcf
  41cfca:	jp     0x41cfeb
  41cfcc:	xchg   DWORD PTR [edi],eax
  41cfce:	xlat   BYTE PTR ds:[ebx]
  41cfcf:	inc    ebp
  41cfd0:	or     eax,0x8b131dd
  41cfd5:	adc    esp,DWORD PTR [edx-0x5409f91a]
  41cfdb:	pop    ecx
  41cfdc:	mov    eax,0x72e324e
  41cfe1:	jmp    0x41cf9f
  41cfe3:	out    dx,al
  41cfe4:	pop    ecx
  41cfe5:	outs   dx,BYTE PTR ds:[esi]
  41cfe6:	mov    BYTE PTR [ebx+esi*2-0x178cf118],dl
  41cfed:	stos   DWORD PTR es:[edi],eax
  41cfee:	cli    
  41cfef:	cmp    DWORD PTR [eax+0x6],0x5c2cbe11
  41cff6:	shl    DWORD PTR [ebp-0x6f],0x3f
  41cffa:	sub    al,0x51
  41cffc:	xchg   esp,eax
  41cffd:	gs iret 
  41cfff:	xchg   esi,eax
  41d000:	test   DWORD PTR [ecx],eax
  41d002:	fdiv   QWORD PTR [eax-0x6e]
  41d005:	daa    
  41d006:	out    dx,eax
  41d007:	call   0x9940fec1
  41d00c:	test   DWORD PTR [edi-0x47],ecx
  41d00f:	add    DWORD PTR [ebx],edi
  41d011:	mov    edi,DWORD PTR [eax-0x3caebe7b]
  41d017:	(bad)
  41d01a:	sahf   
  41d01b:	sbb    ah,al
  41d01d:	(bad)  
  41d01f:	lock xchg BYTE PTR [edx-0x4dd2f447],cl
  41d026:	leave  
  41d027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d028:	jp     0x41cfb3
  41d02a:	jge    0x41d01b
  41d02c:	loopne 0x41d093
  41d02e:	mov    esi,0x2bc8bf64
  41d033:	call   0x343f:0x665dfdc8
  41d03a:	sar    DWORD PTR [esi+0x11],cl
  41d03d:	fsub   QWORD PTR [ebx]
  41d03f:	in     eax,0xf4
  41d041:	cmp    eax,0x887afcf4
  41d046:	ds int 0x0
  41d049:	or     eax,DWORD PTR [ebx-0x347b9c21]
  41d04f:	sbb    dl,bl
  41d051:	sbb    eax,0x7d028180
  41d056:	sar    BYTE PTR [edi],0x3e
  41d059:	sbb    DWORD PTR [esi],0x7413f7c5
  41d05f:	std    
  41d060:	out    dx,eax
  41d061:	pop    esp
  41d062:	dec    ebx
  41d063:	mov    esi,0x1b2b9960
  41d068:	sub    DWORD PTR [esi],0xb142f8c2
  41d06e:	mov    edi,0x4ec1c001
  41d073:	popa   
  41d074:	das    
  41d075:	nop
  41d076:	adc    bh,cl
  41d078:	adc    BYTE PTR [esp+ebx*4-0x5c1a4264],0xa1
  41d080:	icebp  
  41d081:	ja     0x41d059
  41d083:	scas   eax,DWORD PTR es:[edi]
  41d084:	jb     0x41d008
  41d086:	out    dx,eax
  41d087:	adc    al,0x75
  41d089:	ret    0x7bfe
  41d08c:	outs   dx,DWORD PTR ds:[esi]
  41d08d:	test   BYTE PTR [ebx-0x73],ah
  41d090:	fadd   QWORD PTR [ecx-0xb]
  41d093:	retf   0x1875
  41d096:	add    ch,bh
  41d098:	test   ch,bl
  41d09a:	or     DWORD PTR [ebx-0x2e0819b],ecx
  41d0a0:	out    0xe3,al
  41d0a2:	adc    eax,0xee54e046
  41d0a7:	sub    BYTE PTR ds:0x4ec65b0e,0x94
  41d0ae:	xchg   ecx,eax
  41d0af:	cmp    ebx,ebp
  41d0b1:	fwait
  41d0b2:	xchg   ecx,eax
  41d0b3:	repnz outs dx,BYTE PTR ds:[esi]
  41d0b5:	sub    al,0x2a
  41d0b7:	pop    esp
  41d0b8:	or     BYTE PTR [edi+eiz*4+0x1f],0x0
  41d0bd:	fmul   QWORD PTR fs:[bp+di-0x50]
  41d0c2:	pop    esi
  41d0c3:	add    eax,0x33613df1
  41d0c8:	pop    esi
  41d0c9:	test   eax,0x85d266b6
  41d0ce:	push   ss
  41d0cf:	retf   0x3c59
  41d0d2:	sub    esi,DWORD PTR [edi+0x3a]
  41d0d5:	mov    dl,0x9a
  41d0d7:	cmp    bl,bl
  41d0d9:	fs ds (bad) 
  41d0dc:	mov    esi,0x46db73d0
  41d0e1:	xor    ebp,ebx
  41d0e3:	popf   
  41d0e4:	inc    esp
  41d0e5:	mov    dl,0x5d
  41d0e7:	pop    ecx
  41d0e8:	popf   
  41d0e9:	test   al,0xda
  41d0eb:	sbb    cl,dl
  41d0ed:	and    BYTE PTR [eax+ebp*2+0x5baace4c],bl
  41d0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0f5:	jmp    0x41d0f6
  41d0f7:	xchg   edx,eax
  41d0f8:	int3   
  41d0f9:	mov    ch,0x5b
  41d0fb:	dec    ebx
  41d0fc:	in     al,0x3
  41d0fe:	cli    
  41d0ff:	lock nop
  41d101:	fld    st(4)
  41d103:	adc    BYTE PTR [esi+0x75d1b708],bl
  41d109:	pushf  
  41d10a:	push   ebx
  41d10b:	into   
  41d10c:	mov    esp,0xce16c044
  41d111:	ds fcom st(0)
  41d114:	jae    0x41d17b
  41d116:	mov    eax,0x97ae71c5
  41d11b:	sub    cl,ch
  41d11d:	hlt    
  41d11e:	sbb    esi,DWORD PTR [esi]
  41d120:	mov    cl,0x0
  41d122:	inc    edi
  41d123:	sub    DWORD PTR [ebx+eax*8],esi
  41d126:	ficom  WORD PTR [ecx]
  41d128:	sbb    al,0x56
  41d12a:	xchg   edx,eax
  41d12b:	hlt    
  41d12c:	mov    bh,BYTE PTR [edi]
  41d12e:	push   0xffffffcb
  41d130:	add    eax,0x3651db5e
  41d135:	hlt    
  41d136:	out    0x8a,al
  41d138:	adc    dl,bh
  41d13a:	aaa    
  41d13b:	adc    eax,0xee5465b8
  41d140:	inc    edx
  41d141:	iret   
  41d142:	daa    
  41d143:	mov    esp,0x39a4885e
  41d148:	xor    eax,0xaec09c2a
  41d14d:	add    DWORD PTR [edx-0x740d589c],esi
  41d153:	out    dx,al
  41d154:	imul   ebx,DWORD PTR [ebp-0x64],0x1fc567ea
  41d15b:	in     al,dx
  41d15c:	cmp    DWORD PTR [eax+0x4d],ecx
  41d15f:	jecxz  0x41d127
  41d161:	xchg   esi,eax
  41d162:	pop    esi
  41d163:	xchg   ebx,eax
  41d164:	shl    BYTE PTR [ebp-0x80],0xf2
  41d168:	sbb    esp,DWORD PTR [edx+0x38]
  41d16b:	jae    0x41d118
  41d16d:	ss pop edx
  41d16f:	inc    esi
  41d170:	lods   eax,DWORD PTR ds:[esi]
  41d171:	fist   WORD PTR [edx]
  41d173:	mov    ds:0xdcb766db,al
  41d178:	sbb    eax,0x34b8bbc3
  41d17d:	dec    ebp
  41d17e:	loopne 0x41d119
  41d180:	adc    BYTE PTR [edx],bh
  41d182:	and    DWORD PTR [esi+edi*1+0x6e0f6f58],0x55
  41d18a:	sub    eax,0xab97d6a4
  41d18f:	xchg   ecx,eax
  41d190:	ins    DWORD PTR es:[edi],dx
  41d191:	and    al,0xcb
  41d193:	retf   
  41d194:	cmp    eax,0x1e290146
  41d199:	jbe    0x41d13e
  41d19b:	push   ss
  41d19c:	and    al,BYTE PTR ds:0x90128004
  41d1a2:	out    dx,eax
  41d1a3:	out    dx,eax
  41d1a4:	pushf  
  41d1a5:	pushf  
  41d1a6:	sbb    al,0xb3
  41d1a8:	in     eax,dx
  41d1a9:	push   edx
  41d1ab:	jecxz  0x41d1e3
  41d1ad:	into   
  41d1ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1af:	inc    ebx
  41d1b0:	xor    DWORD PTR [eax-0x59],edi
  41d1b3:	fdivr  st,st(0)
  41d1b5:	fist   WORD PTR [ecx+ebx*2-0x3c]
  41d1b9:	cmp    al,0x1c
  41d1bb:	repnz pushf 
  41d1bd:	add    bh,ch
  41d1bf:	repnz lahf 
  41d1c1:	inc    ebx
  41d1c2:	dec    edx
  41d1c3:	pop    eax
  41d1c4:	mov    eax,ds:0xaafa968f
  41d1c9:	lea    esi,[edi]
  41d1cb:	mov    esp,0x36d51925
  41d1d0:	lods   al,BYTE PTR ds:[esi]
  41d1d1:	adc    al,0x42
  41d1d3:	xchg   esi,eax
  41d1d4:	dec    esp
  41d1d5:	scas   al,BYTE PTR es:[edi]
  41d1d6:	adc    eax,0xa1c10196
  41d1db:	adc    eax,0xb5df234
  41d1e0:	jg     0x41d23f
  41d1e2:	dec    ecx
  41d1e3:	dec    esp
  41d1e4:	pusha  
  41d1e5:	xchg   ebp,eax
  41d1e6:	jle    0x41d1b7
  41d1e8:	stc    
  41d1e9:	mov    bl,0x18
  41d1eb:	or     edi,DWORD PTR [edi+0x6a063e6f]
  41d1f1:	sar    esi,0x5b
  41d1f4:	sti    
  41d1f5:	mov    esi,edx
  41d1f7:	mov    dh,0xcd
  41d1f9:	jnp    0x41d1a4
  41d1fb:	leave  
  41d1fc:	out    dx,al
  41d1fd:	mov    dh,0xcc
  41d1ff:	or     eax,0xa6e0b256
  41d204:	add    esp,DWORD PTR [eax]
  41d206:	mov    cl,0x68
  41d208:	(bad)  
  41d209:	sbb    cl,BYTE PTR [edi+ebp*4-0x43057d5e]
  41d210:	sahf   
  41d211:	out    0xc6,eax
  41d213:	pushf  
  41d214:	xor    al,0x7d
  41d216:	xor    DWORD PTR [ebx+0x1],ebp
  41d219:	add    DWORD PTR [edi],ebp
  41d21b:	mov    DWORD PTR [esi-0x567d8f94],edi
  41d221:	imul   DWORD PTR [eax+ebx*1]
  41d224:	inc    ebp
  41d225:	push   ecx
  41d226:	mov    ebp,0x631285e5
  41d22b:	test   BYTE PTR [ecx+ecx*2+0x123b17cd],ah
  41d232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d233:	stc    
  41d234:	leave  
  41d235:	jle    0x41d206
  41d237:	sahf   
  41d238:	push   esp
  41d239:	(bad)
  41d23c:	cmc    
  41d23d:	xor    al,0x10
  41d23f:	in     al,dx
  41d240:	cmc    
  41d241:	pusha  
  41d242:	test   al,0x59
  41d244:	jns    0x41d273
  41d246:	shl    BYTE PTR [ecx+0x8],cl
  41d249:	pop    es
  41d24a:	cmp    DWORD PTR [ecx-0x7a23f013],esi
  41d250:	test   DWORD PTR [edx+edi*8-0x550cc2b4],eax
  41d257:	adc    BYTE PTR [edx-0x4f],bl
  41d25a:	pushf  
  41d25b:	pop    ecx
  41d25c:	push   esi
  41d25d:	stc    
  41d25e:	out    0xd0,al
  41d260:	inc    edx
  41d261:	cdq    
  41d262:	scas   al,BYTE PTR es:[edi]
  41d263:	in     eax,dx
  41d264:	mul    esi
  41d266:	xchg   ebx,eax
  41d267:	into   
  41d268:	mov    dl,0x33
  41d26a:	cld    
  41d26b:	or     DWORD PTR [edx],edi
  41d26d:	lock cmp eax,0x5876665b
  41d273:	out    0x34,eax
  41d275:	cli    
  41d276:	mov    ds,ebx
  41d278:	inc    esi
  41d279:	out    0xb2,al
  41d27b:	xchg   esp,eax
  41d27c:	ins    BYTE PTR es:[edi],dx
  41d27d:	adc    ah,BYTE PTR es:[edi]
  41d280:	cdq    
  41d281:	inc    ebx
  41d282:	pop    eax
  41d283:	and    cl,0x3b
  41d286:	or     DWORD PTR [edi],ecx
  41d288:	lods   eax,DWORD PTR ds:[esi]
  41d289:	inc    edx
  41d28a:	push   cs
  41d28b:	xchg   BYTE PTR ds:0xc71555e9,cl
  41d291:	jle    0x41d261
  41d293:	mov    ds:0x6daa3fa8,eax
  41d298:	sahf   
  41d299:	ins    BYTE PTR es:[edi],dx
  41d29a:	daa    
  41d29b:	xor    eax,0xe2267571
  41d2a0:	or     DWORD PTR [ebx-0x18],eax
  41d2a3:	lods   al,BYTE PTR ds:[esi]
  41d2a4:	fisub  WORD PTR [edx-0xf]
  41d2a7:	push   esp
  41d2a8:	add    ch,ch
  41d2aa:	pop    es
  41d2ab:	int    0xcd
  41d2ad:	bound  eax,QWORD PTR [ebp-0x7f5139bf]
  41d2b3:	cwde   
  41d2b4:	enter  0x6dc8,0xc3
  41d2b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2b9:	add    ch,BYTE PTR [esp+edi*4+0x26]
  41d2bd:	dec    esp
  41d2be:	sbb    BYTE PTR [edx],0x2d
  41d2c1:	inc    ebp
  41d2c2:	jl     0x41d2c9
  41d2c4:	test   al,0x7
  41d2c6:	and    bh,cl
  41d2c8:	sti    
  41d2c9:	in     eax,dx
  41d2ca:	shr    BYTE PTR [ebp+0x7dc61e58],0x72
  41d2d1:	mov    dl,BYTE PTR [eax+0x1c525090]
  41d2d7:	xor    BYTE PTR [edi+esi*4],0x58
  41d2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2dc:	add    esi,DWORD PTR ds:0x5f460500
  41d2e2:	mov    bh,BYTE PTR [edi-0x79854aa4]
  41d2e8:	and    al,0x5e
  41d2ea:	adc    al,0x8c
  41d2ec:	push   ss
  41d2ed:	pop    eax
  41d2ee:	push   ebp
  41d2ef:	sbb    eax,0xafb26000
  41d2f4:	jge    0x41d2d3
  41d2f6:	aas    
  41d2f7:	push   0x7f2a00bd
  41d2fc:	icebp  
  41d2fd:	loop   0x41d2f6
  41d2ff:	std    
  41d300:	mov    WORD PTR [ecx-0x5ba385c3],ds
  41d306:	shl    BYTE PTR [ebx],1
  41d308:	jmp    DWORD PTR [ebx+0x7e]
  41d30b:	mov    ds:0x677e8e73,eax
  41d310:	sar    BYTE PTR [eax],0x91
  41d313:	rol    BYTE PTR [esi-0x37],cl
  41d316:	repz mov ebx,0x922789d5
  41d31c:	sbb    al,0xb6
  41d31e:	in     eax,0x2d
  41d320:	mov    esi,0x17dd28fe
  41d325:	loope  0x41d32c
  41d327:	outs   dx,BYTE PTR ds:[esi]
  41d328:	sbb    ebp,DWORD PTR [edx-0x6e]
  41d32b:	out    dx,al
  41d32c:	div    BYTE PTR [edi+0x40]
  41d32f:	sub    al,0x14
  41d331:	mov    DWORD PTR [di],esp
  41d334:	jle    0x41d2ef
  41d336:	fisub  DWORD PTR [edx]
  41d338:	div    BYTE PTR [esi]
  41d33a:	test   al,0xdf
  41d33c:	out    dx,al
  41d33d:	fidiv  WORD PTR [ebx+0x7]
  41d340:	je     0x41d2dd
  41d342:	add    al,0x91
  41d344:	test   al,0xbb
  41d346:	push   ebp
  41d347:	jnp    0x41d3c2
  41d349:	inc    DWORD PTR [edi]
  41d34b:	add    DWORD PTR [ebx+0x3ee8b69],ebx
  41d351:	daa    
  41d352:	loope  0x41d316
  41d354:	ret    0x5e44
  41d357:	add    eax,0x1c9810e2
  41d35c:	ret    0xcc5c
  41d35f:	sub    esp,edi
  41d361:	mul    BYTE PTR [ecx-0x6c]
  41d364:	push   0xffffffff
  41d366:	or     esp,DWORD PTR [edx+eax*4+0xa]
  41d36a:	cwde   
  41d36b:	sub    ah,BYTE PTR [esi-0x48]
  41d36e:	adc    eax,0x83a02aa0
  41d373:	call   0xe95ba45b
  41d378:	pop    es
  41d379:	xchg   ebx,eax
  41d37a:	add    BYTE PTR [ebx-0x42],bl
  41d37d:	sbb    DWORD PTR [esi+0x147c307e],ecx
  41d383:	call   0x538a5bfe
  41d388:	mov    ah,0x3e
  41d38a:	mov    cl,0xca
  41d38c:	inc    edx
  41d38d:	ret    
  41d38e:	ds ins DWORD PTR es:[edi],dx
  41d390:	xor    ah,al
  41d392:	mov    ds:0xc0ad5b22,eax
  41d397:	jae    0x41d32e
  41d399:	ja     0x41d34d
  41d39b:	add    BYTE PTR ds:[eax-0x18],dl
  41d39f:	adc    DWORD PTR [edi-0x3909a3f],edx
  41d3a5:	xchg   DWORD PTR [ecx-0x447b715e],esp
  41d3ab:	or     DWORD PTR [esi],esi
  41d3ad:	adc    al,0x3e
  41d3af:	cmp    al,0x3
  41d3b1:	std    
  41d3b2:	and    BYTE PTR [ebp+0x7c],0x63
  41d3b6:	cmp    edx,DWORD PTR [esi-0x43]
  41d3b9:	jmp    0xb6f2:0xbf130941
  41d3c0:	jle    0x41d396
  41d3c2:	mov    ebp,0x1319b179
  41d3c7:	mov    WORD PTR [ecx-0x76cf5465],cs
  41d3cd:	pop    ebp
  41d3ce:	xchg   ebx,eax
  41d3cf:	add    eax,0xb0a5d7c6
  41d3d4:	cmp    al,0xd7
  41d3d6:	cmp    DWORD PTR [ecx-0x20],0x38d84429
  41d3dd:	mov    dl,0x9a
  41d3df:	lods   eax,DWORD PTR ds:[esi]
  41d3e0:	xchg   esp,eax
  41d3e1:	clc    
  41d3e2:	push   edi
  41d3e3:	add    BYTE PTR [ebp-0x1c],0x68
  41d3e7:	push   ds
  41d3e8:	out    dx,al
  41d3e9:	push   es
  41d3ea:	scas   eax,DWORD PTR es:[edi]
  41d3eb:	aaa    
  41d3ec:	mov    eax,0x905caa2b
  41d3f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3f2:	lock mov ebx,0x1631f2
  41d3f8:	add    esi,DWORD PTR ds:0xfc70fe89
  41d3fe:	out    0x28,eax
  41d400:	add    BYTE PTR [ecx-0x7e],cl
  41d403:	push   eax
  41d404:	jp     0x41d3a7
  41d406:	and    eax,0xb5ddc05c
  41d40b:	cld    
  41d40c:	aaa    
  41d40d:	sbb    DWORD PTR [ebp+0x7827d2cd],esp
  41d413:	xchg   edx,eax
  41d414:	add    esi,DWORD PTR [edi-0x4d0e91ae]
  41d41a:	call   0x683562ad
  41d41f:	outs   dx,BYTE PTR ds:[esi]
  41d420:	int    0xc2
  41d422:	imul   ebp,DWORD PTR [edx-0x54],0xe96e6ed0
  41d429:	ins    DWORD PTR es:[edi],dx
  41d42a:	in     eax,dx
  41d42b:	or     ebx,DWORD PTR [edx-0x3bb59b2b]
  41d431:	xor    cl,dh
  41d433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d434:	repz jmp 0xa781:0xeb8de1d
  41d43c:	js     0x41d44c
  41d43e:	lods   al,BYTE PTR ds:[esi]
  41d43f:	mov    ch,0xb1
  41d441:	add    dh,BYTE PTR [ebx+0x63]
  41d444:	call   DWORD PTR [ecx]
  41d446:	sbb    al,BYTE PTR [ebx]
  41d448:	mov    bl,0x7
  41d44a:	pop    ebp
  41d44b:	cmp    BYTE PTR [eax+eiz*4+0x7fe3ed1d],dh
  41d452:	ss enter 0xfa4d,0x50
  41d457:	(bad)  
  41d458:	ret    
  41d459:	and    edx,DWORD PTR [eax-0x35]
  41d45c:	mov    bh,0xe6
  41d45e:	inc    edx
  41d45f:	pop    ebp
  41d460:	xchg   esi,eax
  41d461:	fldcw  WORD PTR [eax]
  41d463:	pop    ecx
  41d464:	dec    ebp
  41d465:	leave  
  41d466:	nop
  41d467:	xchg   DWORD PTR [esp+ebp*4],esp
  41d46a:	ds in  al,dx
  41d46c:	ins    DWORD PTR es:[edi],dx
  41d46d:	and    bl,BYTE PTR [esi-0x7c]
  41d470:	add    esp,edx
  41d472:	inc    ebp
  41d473:	mov    ah,0x49
  41d475:	adc    BYTE PTR [ebx-0x5a4d49c9],ch
  41d47b:	loop   0x41d468
  41d47d:	jmp    0x41d4da
  41d47f:	repnz pop ds
  41d481:	jne    0x41d41b
  41d483:	push   ds
  41d484:	add    cl,dl
  41d486:	mov    eax,0xac154420
  41d48b:	les    ebx,FWORD PTR [esp+ebp*4+0x6e6c1035]
  41d492:	xor    al,0x5d
  41d494:	mov    ds:0x6f800f23,eax
  41d499:	mov    al,ds:0xaa2ceb51
  41d49e:	sub    DWORD PTR [edx+0x6],edi
  41d4a1:	outs   dx,DWORD PTR es:[esi]
  41d4a3:	mov    ds:0xc7488230,eax
  41d4a8:	(bad)  
  41d4a9:	push   0x67
  41d4ab:	push   ebp
  41d4ac:	fcmovnbe st,st(0)
  41d4ae:	and    DWORD PTR [edx+ebx*2],edi
  41d4b1:	sbb    al,0x38
  41d4b3:	imul   esi,DWORD PTR ds:0xf576d9ca,0xffffffa0
  41d4ba:	sub    dl,bl
  41d4bc:	lahf   
  41d4bd:	lods   eax,DWORD PTR ds:[esi]
  41d4be:	adc    ebx,DWORD PTR [edx+0x12]
  41d4c1:	dec    ecx
  41d4c2:	mov    bh,0x58
  41d4c4:	jmp    0xca8ca95f
  41d4c9:	ss sti 
  41d4cb:	cmp    eax,0xd6d31af1
  41d4d0:	sub    esi,eax
  41d4d2:	jmp    0xba00:0xc018ff51
  41d4d9:	jle    0x41d54c
  41d4db:	and    BYTE PTR [esi-0x65c14812],bl
  41d4e1:	(bad)  
  41d4e2:	gs (bad) 
  41d4e4:	mov    ah,0xf0
  41d4e6:	mov    WORD PTR [esi-0x7c5a3406],fs
  41d4ec:	leave  
  41d4ed:	aaa    
  41d4ee:	mov    gs,WORD PTR [edi+0x59]
  41d4f1:	ds ror cl,0x82
  41d4f5:	and    BYTE PTR [ecx-0x69],bh
  41d4f8:	push   ebp
  41d4f9:	mov    ebp,0x821525e3
  41d4fe:	int3   
  41d4ff:	clc    
  41d500:	cli    
  41d501:	sahf   
  41d502:	sbb    DWORD PTR [ebx+0x9],ecx
  41d505:	jg     0x41d4d0
  41d507:	mov    eax,ds:0xa7eeed68
  41d50c:	sub    edx,ebx
  41d50e:	mov    ebx,0xc1a29e05
  41d513:	mov    ah,0x33
  41d515:	xchg   ebp,eax
  41d516:	iret   
  41d517:	(bad)  
  41d518:	mov    esi,0x5e7e7da0
  41d51d:	sub    ah,dl
  41d51f:	xor    al,0xc6
  41d521:	scas   al,BYTE PTR es:[edi]
  41d522:	mov    esi,0x68a8ba0c
  41d527:	mov    ebp,0x973205bb
  41d52c:	inc    esp
  41d52d:	pop    ecx
  41d52e:	push   0xffffffd8
  41d530:	retf   0x8e15
  41d533:	clc    
  41d534:	pop    edi
  41d535:	test   eax,0x6a89a937
  41d53a:	mov    bl,0xb7
  41d53c:	push   ds
  41d53d:	xlat   BYTE PTR ds:[ebx]
  41d53e:	std    
  41d53f:	and    DWORD PTR [edx],0xdae4b1e2
  41d545:	(bad)  
  41d546:	mov    DWORD PTR [eax],ebp
  41d548:	fimul  DWORD PTR [edi]
  41d54a:	push   esp
  41d54b:	lahf   
  41d54c:	aad    0xb7
  41d54e:	and    BYTE PTR [eax+eiz*1+0x2edbeb16],bl
  41d555:	lds    ebp,FWORD PTR [eax-0x7d00724]
  41d55b:	inc    edi
  41d55c:	jns    0x41d52d
  41d55e:	adc    eax,0xc6673b84
  41d563:	cdq    
  41d564:	clc    
  41d565:	lods   al,BYTE PTR ds:[esi]
  41d566:	mov    bl,0xaf
  41d568:	cli    
  41d569:	or     al,0x4a
  41d56b:	(bad)  
  41d56c:	dec    edi
  41d56d:	add    edi,esi
  41d56f:	enter  0x493a,0xc2
  41d573:	add    bh,BYTE PTR [ebx]
  41d575:	xchg   edi,eax
  41d576:	jl     0x41d5c4
  41d578:	mov    WORD PTR [esi-0x7ee2f777],fs
  41d57e:	enter  0xd081,0xa7
  41d582:	jae    0x41d58f
  41d584:	dec    ebp
  41d585:	mov    edx,DWORD PTR [ebp+0x65]
  41d588:	dec    ebp
  41d589:	or     edi,DWORD PTR [edx]
  41d58b:	(bad)  
  41d58c:	les    esi,FWORD PTR [edx]
  41d58e:	sbb    eax,0xf204d5f9
  41d593:	or     BYTE PTR [eax],0xbe
  41d596:	lods   al,BYTE PTR ds:[esi]
  41d597:	jno    0x41d535
  41d599:	pushf  
  41d59a:	jmp    0x79ed:0xe2d4e6af
  41d5a1:	ins    BYTE PTR es:[edi],dx
  41d5a2:	mov    ch,0x2c
  41d5a4:	pop    ss
  41d5a5:	and    ebp,DWORD PTR [esi]
  41d5a7:	in     al,0xbb
  41d5a9:	pop    es
  41d5aa:	xor    ah,BYTE PTR [ecx]
  41d5ac:	rcl    ebp,1
  41d5ae:	jmp    0x7e42:0x1139bf82
  41d5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5b6:	hlt    
  41d5b7:	mov    bh,0xd5
  41d5b9:	sbb    BYTE PTR [eax-0x3b],ah
  41d5bc:	es inc ebx
  41d5be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5bf:	sbb    dl,0x9f
  41d5c2:	xchg   edx,eax
  41d5c3:	mov    WORD PTR [ebx],ss
  41d5c5:	mov    ecx,0xf69db122
  41d5ca:	jae    0x41d632
  41d5cc:	repnz sbb BYTE PTR [esi+0x319cbb72],al
  41d5d3:	nop
  41d5d4:	pop    esp
  41d5d5:	test   DWORD PTR [esi+0x870d3c3],ebp
  41d5db:	or     dl,BYTE PTR [eax+0x7905b11f]
  41d5e1:	stc    
  41d5e2:	fpatan 
  41d5e4:	pop    esi
  41d5e5:	sub    DWORD PTR [edx-0x76],ebp
  41d5e8:	repnz mov bh,0x36
  41d5eb:	test   DWORD PTR [esi+0x1a],0x48b13469
  41d5f2:	inc    edi
  41d5f3:	xor    esp,DWORD PTR ds:0x90ccb28a
  41d5f9:	in     eax,dx
  41d5fa:	fisttp DWORD PTR [eax+0x6da19cd9]
  41d600:	xchg   BYTE PTR [ecx-0x57f929b1],ah
  41d606:	fs into 
  41d608:	xchg   ecx,eax
  41d609:	fidivr WORD PTR ds:0xaf47b338
  41d60f:	and    bl,ah
  41d611:	gs es adc eax,0xd0845001
  41d618:	sbb    al,0x7a
  41d61a:	xor    edi,eax
  41d61c:	adc    al,0xae
  41d61e:	retf   0x794a
  41d621:	and    BYTE PTR [ecx],dh
  41d623:	repz inc ebp
  41d625:	pop    esi
  41d626:	cmp    al,bl
  41d628:	fmul   st(3),st
  41d62a:	xchg   esi,eax
  41d62b:	and    ecx,DWORD PTR [ebx+0x743a7e9c]
  41d631:	mov    edx,0xf04790b7
  41d636:	pop    eax
  41d637:	pop    edi
  41d638:	das    
  41d639:	sbb    bh,BYTE PTR [edi+ecx*8-0x5a1e61d9]
  41d640:	add    BYTE PTR [edi],cl
  41d642:	sub    DWORD PTR [edx+eax*2],0x4bc81da5
  41d649:	aam    0x7
  41d64b:	fisttp DWORD PTR [esi+0x5f]
  41d64e:	(bad)  
  41d64f:	dec    esp
  41d650:	je     0x41d688
  41d652:	sbb    ch,BYTE PTR [eax]
  41d654:	xor    al,0xd6
  41d656:	pop    edx
  41d657:	cmp    al,0x94
  41d659:	ins    DWORD PTR es:[edi],dx
  41d65a:	push   es
  41d65b:	jmp    0x1572c83b
  41d660:	xchg   esi,eax
  41d661:	ret    
  41d662:	pop    ebx
  41d663:	xchg   edi,eax
  41d664:	mov    cl,0x4d
  41d666:	aas    
  41d667:	xor    esi,edx
  41d669:	and    eax,0x1f9b7e30
  41d66e:	push   es
  41d66f:	js     0x41d6af
  41d671:	out    dx,al
  41d672:	xchg   BYTE PTR [edx+0x5521738c],al
  41d678:	or     BYTE PTR [edx],dl
  41d67a:	mov    eax,0x232e5288
  41d67f:	test   al,0x98
  41d681:	in     eax,0xac
  41d683:	sub    al,0x8c
  41d685:	clc    
  41d686:	sub    DWORD PTR [edi-0x385ea6d3],esi
  41d68c:	jae    0x41d6af
  41d68e:	test   DWORD PTR [esi],edi
  41d690:	rcr    DWORD PTR [edi-0x7e],0x34
  41d694:	shl    BYTE PTR [edx-0x1bf57ec8],1
  41d69a:	xor    DWORD PTR ss:[ecx+0x77],eax
  41d69e:	adc    DWORD PTR [eax],ecx
  41d6a0:	xlat   BYTE PTR ds:[ebx]
  41d6a1:	pop    edx
  41d6a2:	fcmovnb st,st(7)
  41d6a4:	sbb    al,0x88
  41d6a6:	add    cl,BYTE PTR ds:0xc8a32b66
  41d6ac:	ss xchg DWORD PTR es:[edi],esp
  41d6b0:	das    
  41d6b1:	cmp    ebp,DWORD PTR [eax]
  41d6b3:	lock pop eax
  41d6b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6b6:	push   0xffffff8b
  41d6b8:	adc    BYTE PTR ds:0x949bec3f,al
  41d6be:	or     ch,BYTE PTR [esi-0x769e541e]
  41d6c4:	in     al,0x0
  41d6c6:	mov    BYTE PTR [ebx+0x24],ch
  41d6c9:	std    
  41d6ca:	and    edi,DWORD PTR [ecx-0x1697ca38]
  41d6d0:	mov    al,0xa
  41d6d2:	test   BYTE PTR [edi+eiz*8],dh
  41d6d5:	jecxz  0x41d6e8
  41d6d7:	inc    eax
  41d6d8:	add    al,BYTE PTR [ebp+0x32]
  41d6db:	dec    esi
  41d6dc:	pop    es
  41d6dd:	mov    al,ds:0x613564eb
  41d6e2:	mov    BYTE PTR [eax+eiz*4],ah
  41d6e5:	and    eax,ecx
  41d6e7:	bound  edi,QWORD PTR [edx+ebx*4]
  41d6ea:	sbb    eax,0xd966da4
  41d6ef:	lea    ebp,[edi+0x47]
  41d6f2:	mov    ?,edi
  41d6f4:	or     ebx,DWORD PTR [esi+ebx*2-0x80]
  41d6f8:	jnp    0x41d761
  41d6fa:	aam    0x56
  41d6fc:	lods   eax,DWORD PTR ds:[esi]
  41d6fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6fe:	push   edi
  41d6ff:	and    al,0xe7
  41d701:	fdiv   DWORD PTR [ebx-0x11]
  41d704:	fst    st(7)
  41d706:	dec    edi
  41d707:	sub    eax,0x350309c6
  41d70c:	push   ecx
  41d70d:	out    0xba,al
  41d70f:	out    0x98,al
  41d711:	jo     0x41d6d5
  41d713:	xor    eax,0x38feb76b
  41d718:	mov    edi,0x2ad0f5e0
  41d71d:	(bad)  
  41d71e:	mov    edx,0x9b2b75b6
  41d723:	sub    eax,0xdcd9e5a
  41d728:	ds in  al,0xdf
  41d72b:	mov    ecx,DWORD PTR [edx]
  41d72d:	ret    
  41d72e:	fidivr DWORD PTR [ecx+ebp*8-0x11a480cc]
  41d735:	or     BYTE PTR [edx-0x72],ch
  41d738:	push   edi
  41d739:	fdivr  DWORD PTR [ebx+eiz*2+0x63cbe488]
  41d740:	daa    
  41d741:	dec    eax
  41d742:	dec    edi
  41d743:	jp     0x41d78c
  41d745:	mov    ecx,0xef61608e
  41d74a:	enter  0x477f,0x66
  41d74e:	or     eax,0x78bf2120
  41d753:	and    ebp,DWORD PTR [edi-0x7f6ace81]
  41d759:	xchg   esp,eax
  41d75a:	dec    esi
  41d75b:	stos   DWORD PTR es:[edi],eax
  41d75c:	scas   eax,DWORD PTR es:[edi]
  41d75d:	lahf   
  41d75e:	cmp    eax,0xc529ccc3
  41d763:	cld    
  41d764:	aam    0x9b
  41d766:	in     eax,0x72
  41d768:	jns    0x41d736
  41d76a:	mov    ds,WORD PTR [esi+0x2a]
  41d76d:	cmp    bl,cl
  41d76f:	test   DWORD PTR [ebx],esp
  41d771:	js     0x41d721
  41d773:	aaa    
  41d774:	je     0x41d781
  41d776:	dec    eax
  41d777:	scas   al,BYTE PTR es:[edi]
  41d778:	adc    BYTE PTR [edi],ah
  41d77a:	push   ds
  41d77b:	xchg   ebp,eax
  41d77c:	pop    esi
  41d77d:	aas    
  41d77e:	jne    0x47699368
  41d784:	xchg   ecx,eax
  41d785:	pusha  
  41d786:	jg     0x41d72e
  41d788:	inc    edx
  41d789:	push   ecx
  41d78a:	mov    esp,0xe5be2a42
  41d78f:	pop    ebp
  41d790:	jbe    0x41d72f
  41d792:	stos   BYTE PTR es:[edi],al
  41d793:	pop    edi
  41d794:	clc    
  41d795:	push   edi
  41d796:	test   al,0xa1
  41d798:	lea    esi,[ecx]
  41d79a:	xchg   edx,eax
  41d79b:	in     al,0x5a
  41d79d:	cmp    BYTE PTR ds:0xf788e7b3,ah
  41d7a3:	iret   
  41d7a4:	dec    esp
  41d7a5:	add    eax,0x93bae831
  41d7aa:	rcr    BYTE PTR [eax+0x14],1
  41d7ad:	cdq    
  41d7ae:	sbb    al,0xe
  41d7b0:	adc    BYTE PTR [edx],ah
  41d7b2:	not    BYTE PTR es:[ecx]
  41d7b5:	popa   
  41d7b6:	cs inc ecx
  41d7b8:	(bad)  
  41d7b9:	jnp    0x41d73c
  41d7bb:	push   esp
  41d7bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7bd:	adc    BYTE PTR [eax],dh
  41d7bf:	cmp    dl,BYTE PTR [ebx+0x1e]
  41d7c2:	pop    eax
  41d7c3:	lods   eax,DWORD PTR ds:[esi]
  41d7c4:	push   0xc2a63ea1
  41d7c9:	(bad)  [ecx-0x2b]
  41d7cc:	ret    0x48fc
  41d7cf:	mov    dh,0xea
  41d7d1:	pop    edi
  41d7d2:	jle    0x41d820
  41d7d4:	adc    ebp,ebx
  41d7d6:	mov    esi,0x6888ce2
  41d7db:	outs   dx,DWORD PTR ds:[esi]
  41d7dc:	inc    ebp
  41d7dd:	sbb    al,0x59
  41d7df:	add    dh,ah
  41d7e1:	mov    eax,0x78df694f
  41d7e6:	push   ss
  41d7e7:	dec    edx
  41d7e8:	adc    eax,0x53c05855
  41d7ed:	(bad)  [esi-0x1d]
  41d7f0:	ret    
  41d7f1:	mov    ah,0xf4
  41d7f3:	rol    BYTE PTR [ebx-0x11cfafe3],cl
  41d7f9:	repnz mov ebx,0x73dcf2fd
  41d7ff:	es xchg esi,eax
  41d801:	push   ebx
  41d802:	sub    BYTE PTR [edx-0x727769c],dl
  41d808:	sbb    eax,0x1946dbc3
  41d80d:	mov    edi,0xff825974
  41d812:	in     al,dx
  41d813:	cmp    al,BYTE PTR [esi+0x5e]
  41d816:	add    al,0x1
  41d818:	loopne 0x41d7ac
  41d81a:	outs   dx,DWORD PTR ds:[esi]
  41d81b:	inc    eax
  41d81c:	add    al,0x52
  41d81e:	iret   
  41d81f:	fsub   st,st(4)
  41d821:	out    0xa7,eax
  41d823:	push   eax
  41d824:	jb     0x41d84e
  41d826:	pause  
  41d828:	cmp    BYTE PTR ds:0xc319b7d2,ch
  41d82e:	dec    ecx
  41d82f:	xchg   ebx,eax
  41d830:	inc    ebx
  41d831:	sub    al,0xc3
  41d833:	dec    esi
  41d834:	add    ebx,DWORD PTR [esi-0x5b]
  41d837:	add    al,0x4f
  41d839:	mov    dh,bh
  41d83b:	(bad)  
  41d83c:	mov    esp,0x792de8af
  41d841:	aaa    
  41d842:	repnz mov bh,0x37
  41d845:	mov    ds,WORD PTR [edx]
  41d847:	mov    cl,0x7
  41d849:	xchg   ecx,eax
  41d84a:	add    esi,esi
  41d84c:	pop    edi
  41d84d:	push   esp
  41d84e:	lods   eax,DWORD PTR ds:[esi]
  41d84f:	mov    ds:0x73217d2b,al
  41d854:	in     al,dx
  41d855:	cmp    ah,ch
  41d857:	loope  0x41d81c
  41d859:	and    al,0x75
  41d85b:	inc    ecx
  41d85c:	rcr    BYTE PTR [ecx+0x31],cl
  41d85f:	inc    eax
  41d860:	mov    bl,0xd6
  41d862:	(bad)  
  41d864:	pop    eax
  41d865:	hlt    
  41d866:	pop    ds
  41d867:	arpl   WORD PTR [ebx-0x4357be11],ax
  41d86d:	sub    dh,BYTE PTR ds:0xd18dea86
  41d873:	push   ebp
  41d874:	cdq    
  41d875:	sbb    bl,dh
  41d877:	mov    ?,WORD PTR [eax]
  41d879:	mov    edx,0x9ea96be6
  41d87e:	call   0x7f34f2ac
  41d883:	fstp   DWORD PTR [esi]
  41d885:	fwait
  41d886:	lea    esp,[ecx+0x5765908b]
  41d88c:	in     eax,dx
  41d88d:	and    BYTE PTR [ecx],al
  41d88f:	scas   eax,DWORD PTR es:[edi]
  41d890:	pushf  
  41d891:	xchg   edi,eax
  41d892:	fisubr WORD PTR [eax]
  41d894:	jns    0x41d850
  41d896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d897:	loop   0x41d88b
  41d899:	mov    esi,0x4571b868
  41d89e:	fisubr WORD PTR [eax-0x1e]
  41d8a1:	add    BYTE PTR [eax+eax*8-0x19c08],cl
  41d8a8:	shr    BYTE PTR [edi+0x1bf3e142],cl
  41d8ae:	jmp    0x2dc9:0x440ae4f9
  41d8b5:	mov    esi,0x9ea5162c
  41d8ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8bb:	jle    0x41d885
  41d8bd:	(bad)  
  41d8be:	push   cs
  41d8bf:	out    dx,al
  41d8c0:	stos   DWORD PTR es:[edi],eax
  41d8c1:	adc    al,0x86
  41d8c3:	adc    al,BYTE PTR [eax+0x49]
  41d8c6:	cmp    eax,0xf43897fb
  41d8cb:	imul   ecx,eax,0xffffffde
  41d8ce:	lea    ecx,[edi+0x24]
  41d8d1:	pop    eax
  41d8d2:	xlat   BYTE PTR ds:[ebx]
  41d8d3:	lods   al,BYTE PTR ds:[esi]
  41d8d4:	xor    edx,DWORD PTR [edi+ecx*4+0x255a47b7]
  41d8db:	cmp    DWORD PTR [edx+0x33],edi
  41d8de:	das    
  41d8df:	cmp    al,BYTE PTR cs:[ebx+esi*8+0x9f63516]
  41d8e7:	add    edi,DWORD PTR ds:0x3f179bf9
  41d8ed:	mov    ecx,0x38e36ca7
  41d8f2:	sub    BYTE PTR [ecx-0x7e],cl
  41d8f5:	push   0xb0b64b5e
  41d8fa:	jo     0x41d964
  41d8fc:	mov    WORD PTR [ebp+ebp*8+0x73],ds
  41d900:	test   BYTE PTR [ebp-0x6b],0xa9
  41d904:	les    esi,FWORD PTR [edi]
  41d906:	inc    esp
  41d907:	int3   
  41d908:	ds pop edx
  41d90a:	in     al,0xe5
  41d90c:	sbb    DWORD PTR [esi+0x11549d90],ecx
  41d912:	pop    es
  41d913:	ret    0xc27d
  41d916:	clc    
  41d917:	aaa    
  41d918:	retf   
  41d919:	cwde   
  41d91a:	out    dx,eax
  41d91b:	aam    0xeb
  41d91d:	cmp    bh,bh
  41d91f:	(bad)  
  41d920:	and    al,0xd2
  41d922:	retf   0xcfb4
  41d925:	mov    eax,DWORD PTR [edi+0xc940cf6]
  41d92b:	out    dx,al
  41d92c:	mov    ebp,DWORD PTR [ecx]
  41d92e:	xor    bl,BYTE PTR [ebx+eax*8-0x5d95093c]
  41d935:	or     BYTE PTR [edx-0x4fdebd73],bl
  41d93b:	mov    esp,0x443e2bd6
  41d940:	inc    ebx
  41d941:	fdiv   DWORD PTR [edx]
  41d943:	rol    BYTE PTR [eax+edi*1+0x5619348b],0xd0
  41d94b:	or     al,0x60
  41d94d:	add    esi,esi
  41d94f:	pop    esi
  41d950:	dec    ecx
  41d951:	push   0xffffffb2
  41d953:	int3   
  41d954:	jle    0x41d9aa
  41d956:	jo     0x41d9d4
  41d958:	mov    al,0xbd
  41d95a:	and    bl,BYTE PTR [ebp+0x353e6bd6]
  41d960:	and    al,0xcf
  41d962:	sbb    DWORD PTR [ecx+0x77],edx
  41d965:	inc    ebx
  41d966:	in     eax,0x42
  41d968:	fidivr WORD PTR [ecx+0x371dabb1]
  41d96e:	push   ds
  41d96f:	out    dx,eax
  41d970:	xchg   edi,eax
  41d971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d972:	lock cmp esp,edi
  41d975:	out    dx,al
  41d976:	(bad)  
  41d977:	cli    
  41d978:	xor    DWORD PTR [ebx],esi
  41d97a:	mov    al,ds:0x55272fb7
  41d97f:	pushf  
  41d980:	mov    ah,BYTE PTR [ebx+0x6f]
  41d983:	inc    edx
  41d984:	or     al,0x4e
  41d986:	pop    ebp
  41d987:	cmc    
  41d988:	xchg   edx,eax
  41d989:	add    BYTE PTR [esi],cl
  41d98b:	jmp    0x6c6e0c5a
  41d990:	jecxz  0x41d91b
  41d992:	and    DWORD PTR [eax-0x30f11d7e],edx
  41d998:	mov    al,0xd4
  41d99a:	push   es
  41d99b:	shl    DWORD PTR [esp+eax*2+0x3eec4e2c],0x7f
  41d9a3:	fnstenv [ecx-0x61c1b5d5]
  41d9a9:	jmp    0x41d94e
  41d9ab:	je     0x41d99b
  41d9ad:	mov    ds:0x8efc2563,al
  41d9b2:	lods   eax,DWORD PTR ds:[esi]
  41d9b3:	xor    BYTE PTR [ebx+0x5436db03],0xf4
  41d9ba:	lds    ebx,FWORD PTR [esi]
  41d9bc:	push   esp
  41d9bd:	jg     0x41da16
  41d9bf:	mov    ebp,0xcdd09741
  41d9c4:	loop   0x41d9e9
  41d9c6:	and    DWORD PTR [edi+eiz*8-0x34],ebp
  41d9ca:	pop    es
  41d9cb:	pop    esp
  41d9cc:	or     al,0x65
  41d9ce:	xchg   ebp,eax
  41d9cf:	mov    esp,ecx
  41d9d1:	adc    ecx,edi
  41d9d3:	and    eax,0xbb4dbcf8
  41d9d8:	and    esi,ecx
  41d9da:	and    BYTE PTR [eax],bh
  41d9dc:	ins    BYTE PTR es:[edi],dx
  41d9dd:	(bad)  
  41d9de:	push   ebp
  41d9df:	dec    edx
  41d9e0:	xadd   DWORD PTR [esi+0x2c],esp
  41d9e4:	repz sbb BYTE PTR [bx+si+0x0],cl
  41d9e9:	xor    BYTE PTR [esi],ah
  41d9eb:	pop    esp
  41d9ec:	add    DWORD PTR [edi-0x47ee50e4],edx
  41d9f2:	jbe    0x41d9da
  41d9f4:	fs pop es
  41d9f6:	adc    ecx,edx
  41d9f8:	ins    DWORD PTR es:[edi],dx
  41d9f9:	mov    BYTE PTR [edi-0x48e0b73c],bl
  41d9ff:	or     cl,BYTE PTR [edi-0x55e7c032]
  41da05:	ins    BYTE PTR es:[edi],dx
  41da06:	or     al,0x1a
  41da08:	gs (bad) 
  41da0a:	sbb    eax,0xa73343df
  41da0f:	in     al,dx
  41da10:	dec    ebx
  41da11:	mov    ah,0x90
  41da13:	test   ebp,eax
  41da15:	mov    ah,0x29
  41da17:	aaa    
  41da18:	retf   0x640b
  41da1b:	mov    ebx,0x41e94ad5
  41da20:	xchg   esp,eax
  41da21:	cmovge edi,DWORD PTR [edx+0x24]
  41da25:	(bad)  
  41da26:	pusha  
  41da27:	in     eax,0x71
  41da29:	lods   eax,DWORD PTR ds:[esi]
  41da2a:	cs clc 
  41da2c:	jge    0x41da7d
  41da2e:	in     al,0x54
  41da30:	scas   al,BYTE PTR es:[edi]
  41da31:	mov    ds:0xc575da36,al
  41da36:	cwde   
  41da37:	(bad)  
  41da38:	xor    BYTE PTR [ebp-0x40],bl
  41da3b:	test   BYTE PTR [ebx+0x10980dad],al
  41da41:	dec    esp
  41da42:	imul   ecx,DWORD PTR [ebx],0x7d0f95e0
  41da48:	jne    0x41da10
  41da4a:	ins    BYTE PTR es:[edi],dx
  41da4b:	stos   DWORD PTR es:[edi],eax
  41da4c:	jmp    DWORD PTR [edx]
  41da4e:	stos   BYTE PTR es:[edi],al
  41da4f:	jnp    0x41da60
  41da51:	add    al,0xaf
  41da53:	jbe    0x41da7d
  41da55:	(bad)  
  41da56:	pop    esp
  41da57:	mov    eax,0x68ae7b4a
  41da5c:	in     eax,0xde
  41da5e:	inc    ebx
  41da5f:	dec    esp
  41da60:	pop    edx
  41da61:	iret   
  41da62:	(bad)  
  41da63:	xlat   BYTE PTR ds:[ebx]
  41da64:	inc    edi
  41da65:	aaa    
  41da66:	push   esi
  41da67:	dec    ebx
  41da68:	hlt    
  41da69:	ins    DWORD PTR es:[edi],dx
  41da6a:	(bad)  
  41da6b:	add    ecx,edi
  41da6d:	xchg   edi,eax
  41da6e:	les    ebp,FWORD PTR [eax+eax*1]
  41da71:	retf   0x9c47
  41da74:	jmp    0x2239:0x895f8c6
  41da7b:	jo     0x41da31
  41da7d:	xor    ecx,DWORD PTR [esi]
  41da7f:	and    DWORD PTR [edx-0x28632ca6],ebx
  41da85:	sbb    eax,0x50cbf1e9
  41da8a:	or     al,0x45
  41da8c:	sub    edi,esp
  41da8e:	jl     0x41dadd
  41da90:	popa   
  41da91:	sahf   
  41da92:	dec    esp
  41da93:	xchg   ah,dh
  41da95:	jo     0x41da17
  41da97:	clc    
  41da98:	push   0x73
  41da9a:	(bad)  
  41da9b:	fild   WORD PTR [edi-0x27a52122]
  41daa1:	sahf   
  41daa2:	or     bl,BYTE PTR [edi-0x57917aa]
  41daa8:	jne    0x41db27
  41daaa:	adc    BYTE PTR [esi+0x29],dl
  41daad:	ja     0x41db27
  41daaf:	jl     0x41dae9
  41dab1:	into   
  41dab2:	retf   0xe669
  41dab5:	dec    edx
  41dab6:	add    BYTE PTR [edi-0x45],bl
  41dab9:	xor    edx,edx
  41dabb:	int    0x4
  41dabd:	(bad)  
  41dabe:	ds das 
  41dac0:	loop   0x41dae4
  41dac2:	lea    esi,[edx-0x10]
  41dac5:	dec    esi
  41dac6:	push   cs
  41dac7:	fisttp DWORD PTR [edi-0x4e]
  41daca:	arpl   dx,bx
  41dacc:	ins    BYTE PTR es:[edi],dx
  41dacd:	fld    DWORD PTR [ebx]
  41dacf:	call   0x41eddb52
  41dad4:	lds    eax,FWORD PTR [eax]
  41dad6:	lahf   
  41dad7:	sbb    esi,ecx
  41dad9:	sub    al,0x59
  41dadb:	popf   
  41dadc:	hlt    
  41dadd:	call   0xda0b:0x768d238d
  41dae4:	sub    al,0x8e
  41dae6:	adc    eax,0x4c6d6152
  41daeb:	call   FWORD PTR [eax-0x77]
  41daee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daef:	or     bl,ch
  41daf1:	and    BYTE PTR [eax-0x1a],ch
  41daf4:	aam    0x2c
  41daf6:	sub    DWORD PTR [ecx-0x15],edi
  41daf9:	addr16 add ecx,ebx
  41dafc:	push   ecx
  41dafd:	lods   eax,DWORD PTR cs:[esi]
  41daff:	pop    es
  41db00:	mov    dh,0x4
  41db02:	mov    edx,0xefc38fca
  41db07:	jo     0x41dafb
  41db09:	call   0x32dce607
  41db0e:	out    0xa7,eax
  41db10:	pusha  
  41db11:	xchg   edi,eax
  41db12:	pusha  
  41db13:	pop    ss
  41db14:	in     al,dx
  41db15:	test   al,0x35
  41db17:	ja     0x41db43
  41db19:	sub    ebp,edi
  41db1b:	retf   0xb990
  41db1e:	fst    DWORD PTR [ebx]
  41db20:	jmp    0xd1d40f04
  41db25:	(bad)  
  41db26:	mov    bl,BYTE PTR [edi+0x4]
  41db29:	add    edi,DWORD PTR [esi+0x87ccceb]
  41db2f:	xor    eax,0x141d5777
  41db34:	adc    al,0x98
  41db36:	les    edx,FWORD PTR [ebp-0x3]
  41db39:	xchg   edx,eax
  41db3a:	sbb    eax,0x79d15569
  41db3f:	or     al,0xbf
  41db41:	mov    dl,BYTE PTR [edi+esi*1+0x14]
  41db45:	rcr    ebp,0xfa
  41db48:	jns    0x41dae3
  41db4a:	jb     0x41db5d
  41db4c:	xlat   BYTE PTR ds:[ebx]
  41db4d:	or     eax,0x750081c9
  41db52:	fcmovnbe st,st(2)
  41db54:	(bad)  
  41db55:	fcom   QWORD PTR [esi-0x2b]
  41db58:	out    dx,al
  41db59:	fs jmp 0x41dbd5
  41db5c:	sbb    eax,0xcfbfcc4e
  41db61:	xor    DWORD PTR [ebx+edi*2+0x7d74e8d1],0xf7ccccb4
  41db6c:	and    edi,DWORD PTR [eax-0x6]
  41db6f:	out    0xd3,al
  41db71:	and    DWORD PTR ds:0x9b956dbf,esi
  41db77:	adc    edx,DWORD PTR [eax+ecx*4-0x3f]
  41db7b:	test   eax,0xe14f435c
  41db80:	or     eax,0x21f8fedb
  41db85:	fst    DWORD PTR [ecx+0x7d]
  41db88:	sar    DWORD PTR [ebx+0x6aaedfd8],cl
  41db8e:	add    ebx,esp
  41db90:	in     eax,0x6a
  41db92:	push   ebx
  41db93:	repnz sub al,0x89
  41db96:	in     al,dx
  41db97:	loop   0x41dbea
  41db99:	adc    cl,bh
  41db9b:	cld    
  41db9c:	sbb    cl,BYTE PTR [edi-0x2f]
  41db9f:	dec    ebp
  41dba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dba1:	sub    esi,DWORD PTR [ecx]
  41dba3:	mov    ?,WORD PTR [esi-0x5fa70d21]
  41dba9:	std    
  41dbaa:	mov    ah,0xe9
  41dbac:	mov    db6,esp
  41dbaf:	outs   dx,DWORD PTR ds:[esi]
  41dbb0:	scas   al,BYTE PTR es:[edi]
  41dbb1:	rcr    DWORD PTR [eax+0x36],0x13
  41dbb5:	and    eax,0xe4a91f44
  41dbba:	(bad)  
  41dbbb:	nop
  41dbbc:	or     DWORD PTR ds:[eax],esi
  41dbbf:	inc    ebp
  41dbc0:	hlt    
  41dbc1:	mov    dh,0x6f
  41dbc3:	push   esi
  41dbc4:	xchg   ecx,eax
  41dbc5:	sbb    BYTE PTR [ebx-0x7498bf45],bh
  41dbcb:	sub    al,0x53
  41dbcd:	in     al,0xe0
  41dbcf:	xchg   ebx,eax
  41dbd0:	dec    ebx
  41dbd1:	or     eax,0x19b4e370
  41dbd6:	inc    ebx
  41dbd7:	dec    esp
  41dbd8:	out    dx,eax
  41dbd9:	mov    ds:0x995ebc5d,eax
  41dbde:	jg     0x41dc08
  41dbe0:	inc    ebx
  41dbe1:	dec    esp
  41dbe2:	cmp    al,0x38
  41dbe4:	(bad)  
  41dbe5:	mov    al,0xeb
  41dbe7:	push   esi
  41dbe8:	fldz   
  41dbea:	inc    esp
  41dbeb:	pusha  
  41dbec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbed:	int3   
  41dbee:	aaa    
  41dbef:	dec    BYTE PTR [ecx+0xd8bf045]
  41dbf5:	fidiv  WORD PTR [ecx+0xd210042]
  41dbfb:	adc    dh,BYTE PTR [edx+0x75810042]
  41dc01:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc03:	mov    ch,0x9c
  41dc05:	clc    
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	cs mov ah,0x2
  41dc7c:	imul   esp,DWORD PTR [edi-0x7c7f2486],0x83835e0f
  41dc86:	shl    BYTE PTR [edx-0x61],1
  41dc89:	and    ecx,DWORD PTR ds:0x55538802
  41dc8f:	dec    edi
  41dc90:	xchg   edi,eax
  41dc91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc92:	mov    esp,0xf07bc55c
  41dc97:	dec    ebx
  41dc98:	sahf   
  41dc99:	mov    bh,0x7f
  41dc9b:	adc    eax,0xded15c7d
  41dca0:	cld    
  41dca1:	add    BYTE PTR [ebx-0x6a2e1eb8],dh
  41dca7:	mov    edi,0x71ae90eb
  41dcac:	cmp    al,0x5d
  41dcae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcaf:	or     eax,0x806f90ee
  41dcb4:	loop   0x41dc61
  41dcb6:	les    eax,FWORD PTR [edx]
  41dcb8:	or     al,0xb9
  41dcba:	daa    
  41dcbb:	dec    ecx
  41dcbc:	test   al,0xee
  41dcbe:	sub    eax,0x75808fbc
  41dcc3:	in     eax,0xc8
  41dcc5:	or     al,0xa5
  41dcc7:	out    dx,eax
  41dcc8:	(bad)  
  41dcca:	dec    esi
  41dccb:	mov    edi,0x9ee4d6d0
  41dcd0:	repz (bad) 
  41dcd2:	and    al,0xa3
  41dcd4:	ds inc ecx
  41dcd6:	jb     0x41dcf1
  41dcd8:	shl    BYTE PTR [edx+0x4ae749b7],1
  41dcde:	push   0x3b
  41dce0:	jp     0x41dd1b
  41dce2:	dec    edx
  41dce3:	in     eax,0xd7
  41dce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dce6:	cld    
  41dce7:	xchg   esi,eax
  41dce8:	mov    ecx,0xe44d6404
  41dced:	(bad)  
  41dcee:	in     al,0x40
  41dcf0:	cwde   
  41dcf1:	mov    dh,0xbc
  41dcf3:	sar    DWORD PTR [eax],0x8e
  41dcf6:	dec    eax
  41dcf7:	jne    0x41dce4
  41dcf9:	cmp    BYTE PTR [edx],bl
  41dcfb:	popa   
  41dcfc:	std    
  41dcfd:	cmp    BYTE PTR ds:0x4b8bb49e,ch
  41dd03:	not    edx
  41dd05:	in     al,0x7
  41dd07:	test   eax,0x29c494e8
  41dd0c:	out    0x45,eax
  41dd0e:	sahf   
  41dd0f:	cmp    al,0x8
  41dd11:	or     ebx,edi
  41dd13:	inc    ebp
  41dd14:	sbb    ecx,DWORD PTR [ebx+ecx*2-0x23156ae]
  41dd1b:	shl    DWORD PTR [edi-0x353639ae],cl
  41dd21:	out    dx,al
  41dd22:	mov    BYTE PTR [edx+0x373b7540],bl
  41dd28:	pop    eax
  41dd29:	pop    es
  41dd2a:	enter  0x8958,0xe7
  41dd2e:	out    0xb3,al
  41dd30:	ror    BYTE PTR [edi-0x46],0x22
  41dd34:	cld    
  41dd35:	pop    ds
  41dd36:	dec    edx
  41dd37:	bt     DWORD PTR [edx+ecx*8+0x17],esp
  41dd3c:	mov    al,0xb9
  41dd3e:	rdmsr  
  41dd40:	jecxz  0x41dd9f
  41dd42:	inc    esp
  41dd43:	push   ss
  41dd44:	mov    dh,0xce
  41dd46:	xchg   esi,eax
  41dd47:	push   esp
  41dd48:	in     al,dx
  41dd49:	js     0x41dd13
  41dd4b:	cld    
  41dd4c:	test   al,0xa0
  41dd4e:	or     ebx,DWORD PTR [ebp+0x1d]
  41dd51:	mov    WORD PTR [edx-0x6b],?
  41dd54:	fstp   DWORD PTR [eax+0x7a]
  41dd57:	add    eax,0xfe13fe06
  41dd5c:	dec    esp
  41dd5d:	jle    0x41dcec
  41dd5f:	imul   ecx,DWORD PTR [ebx],0x38
  41dd62:	and    al,0xa7
  41dd64:	dec    ebp
  41dd65:	cmp    bh,BYTE PTR [ebx]
  41dd67:	test   eax,0xf7056f01
  41dd6c:	retf   0xbb3a
  41dd6f:	mov    ah,0x51
  41dd71:	jge    0x41dde2
  41dd73:	fmul   QWORD PTR [edx-0x18]
  41dd76:	adc    bl,ah
  41dd78:	xchg   edi,eax
  41dd79:	mov    ch,0xeb
  41dd7b:	push   ds
  41dd7c:	out    0x3e,eax
  41dd7e:	or     al,0x36
  41dd80:	pop    ecx
  41dd81:	add    al,BYTE PTR [eax-0x2b7cb34c]
  41dd87:	xchg   edi,eax
  41dd88:	mov    bl,0x90
  41dd8a:	jns    0x41dd91
  41dd8c:	repz rcr DWORD PTR [ebp-0x36],1
  41dd90:	mov    WORD PTR [ebx+0x23],es
  41dd93:	xor    DWORD PTR [edi+0x3830e780],eax
  41dd99:	sar    ebx,cl
  41dd9b:	jbe    0x41dd46
  41dd9d:	(bad)  
  41dd9f:	out    dx,eax
  41dda0:	pop    esp
  41dda1:	clc    
  41dda2:	mov    ch,0xdc
  41dda4:	or     al,0xa5
  41dda6:	mov    esi,0xfafc5a74
  41ddab:	add    DWORD PTR [eax-0x6b],ebx
  41ddae:	les    ecx,FWORD PTR [ecx+eax*4-0xf1d38fa]
  41ddb5:	aaa    
  41ddb6:	addr16 inc edi
  41ddb8:	cmc    
  41ddb9:	(bad)  
  41ddbb:	aad    0x8d
  41ddbd:	bound  ecx,QWORD PTR [ecx-0x36bfe1bf]
  41ddc3:	jno    0x41ddac
  41ddc5:	jl     0x41dd61
  41ddc7:	out    dx,eax
  41ddc8:	xor    al,BYTE PTR ds:[ebx]
  41ddcb:	mov    al,ds:0xf4f46225
  41ddd0:	mov    ch,0x43
  41ddd2:	and    edx,DWORD PTR [ebp+0x44]
  41ddd5:	mov    al,0xec
  41ddd7:	sub    al,cl
  41ddd9:	xor    al,0xa4
  41dddb:	fwait
  41dddc:	cli    
  41dddd:	xor    al,0x25
  41dddf:	jecxz  0x41de49
  41dde1:	(bad)  
  41dde2:	int    0xd
  41dde4:	xor    cl,BYTE PTR [ebx]
  41dde6:	aad    0x2c
  41dde8:	test   BYTE PTR [edi+ebx*2],bl
  41ddeb:	mov    ds:0x321111e2,al
  41ddf0:	loope  0x41de59
  41ddf2:	in     al,0xff
  41ddf4:	dec    esp
  41ddf5:	xchg   cl,ch
  41ddf7:	mov    ds:0x419a5697,eax
  41ddfc:	xchg   esi,eax
  41ddfd:	(bad)  
  41ddfe:	fsubrp st(1),st
  41de00:	pop    ss
  41de01:	inc    ebp
  41de02:	xor    eax,0x720418da
  41de07:	mov    ah,0x8d
  41de09:	test   eax,0xe0963600
  41de0e:	fcmovnb st,st(1)
  41de10:	rcl    DWORD PTR [esi],0x2d
  41de13:	push   ecx
  41de14:	test   DWORD PTR [ebx+0x2b],ebp
  41de17:	(bad)  
  41de18:	push   ebx
  41de19:	adc    DWORD PTR [eax-0x2fe37bbd],0x2c8900e1
  41de23:	shl    BYTE PTR [edx+edx*1-0x39e62a7d],1
  41de2a:	cdq    
  41de2b:	js     0x41de44
  41de2d:	shl    DWORD PTR [ecx],cl
  41de2f:	iret   
  41de30:	fidiv  DWORD PTR [esi+0x5c]
  41de33:	jmp    0xf608:0xcd9e39da
  41de3a:	push   cs
  41de3b:	repz or bl,ah
  41de3e:	ror    BYTE PTR [esp+edi*1+0x20],1
  41de42:	dec    ebx
  41de43:	mov    ah,0xae
  41de45:	je     0x41de0b
  41de47:	jne    0x41de24
  41de49:	test   al,0x18
  41de4b:	data16 aaa 
  41de4d:	ss cmp al,0xf9
  41de50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de51:	inc    eax
  41de52:	stos   DWORD PTR es:[edi],eax
  41de53:	cwde   
  41de54:	inc    eax
  41de55:	outs   dx,DWORD PTR ds:[esi]
  41de56:	dec    edi
  41de57:	fldenv [esi+edx*8]
  41de5a:	dec    ebp
  41de5b:	pop    es
  41de5c:	mov    cl,BYTE PTR [esi+0x66]
  41de5f:	shr    esi,cl
  41de61:	mov    ?,esp
  41de63:	jge    0x41de6d
  41de65:	repnz imul eax,DWORD PTR [edx],0xae60fa72
  41de6c:	lods   eax,DWORD PTR ds:[esi]
  41de6d:	lahf   
  41de6e:	or     DWORD PTR [esi-0x1c],0x79bd46dd
  41de75:	pop    esp
  41de76:	mov    ch,BYTE PTR [edx-0x69]
  41de79:	aam    0x76
  41de7b:	pop    esp
  41de7c:	push   ds
  41de7d:	fisttp WORD PTR [ecx-0x166c65b4]
  41de83:	mov    DWORD PTR [edi+0x35],edi
  41de86:	push   eax
  41de87:	aam    0xae
  41de89:	sbb    cl,BYTE PTR [ebp+0x120a17b1]
  41de8f:	inc    ebp
  41de90:	mov    ch,0x58
  41de92:	mov    dh,0x68
  41de94:	mov    DWORD PTR [esi+0x61780f30],0x3dc22af7
  41de9e:	push   esi
  41de9f:	lea    ecx,[edx+0x3]
  41dea2:	nop
  41dea3:	inc    ebp
  41dea4:	iret   
  41dea5:	ror    DWORD PTR [esi],0x9c
  41dea8:	out    dx,eax
  41dea9:	in     eax,dx
  41deaa:	mov    ah,0xee
  41deac:	xchg   DWORD PTR ss:[eax+0x4],edi
  41deb0:	add    eax,DWORD PTR [ecx+0x4451552e]
  41deb6:	repz add BYTE PTR [ecx],cl
  41deb9:	jp     0x41df0a
  41debb:	out    dx,eax
  41debc:	jno    0x41de89
  41debe:	mov    ds:0x26a2d774,eax
  41dec3:	xor    dh,BYTE PTR [edx-0x68]
  41dec6:	sub    esp,DWORD PTR [eax+0x15]
  41dec9:	xchg   edi,eax
  41deca:	sub    eax,0xc1319936
  41decf:	xchg   edi,eax
  41ded0:	mov    edi,0x87f5775
  41ded5:	push   ecx
  41ded6:	gs sub ch,cl
  41ded9:	xlat   BYTE PTR ds:[ebx]
  41deda:	dec    ebx
  41dedb:	and    edx,ebx
  41dedd:	push   eax
  41dede:	jecxz  0x41de9e
  41dee0:	icebp  
  41dee1:	add    al,0xd
  41dee3:	inc    edi
  41dee4:	or     eax,0x6bb7f488
  41dee9:	jo     0x41de7e
  41deeb:	add    DWORD PTR [edi],0x69
  41deee:	sbb    bh,BYTE PTR [edi-0x51bd52dc]
  41def4:	or     al,0xb1
  41def6:	call   0xd293:0x517f02a9
  41defd:	and    BYTE PTR [ebp+0x37],ah
  41df00:	xchg   BYTE PTR [eax+0x1cd737b6],dh
  41df06:	test   al,0x34
  41df08:	sub    BYTE PTR ds:0x924a9d57,ah
  41df0e:	push   ebp
  41df0f:	pop    ss
  41df10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df11:	popa   
  41df12:	rol    BYTE PTR [ebx+0x54ba3f05],cl
  41df18:	sbb    eax,0x1b4c65bd
  41df1d:	xlat   BYTE PTR ds:[ebx]
  41df1e:	stc    
  41df1f:	repnz aad 0x33
  41df22:	fisttp DWORD PTR [edx]
  41df24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df25:	push   ss
  41df26:	mov    ecx,0x985df913
  41df2b:	push   ecx
  41df2c:	call   FWORD PTR [esi]
  41df2e:	retf   
  41df2f:	pop    ss
  41df30:	sub    eax,0x7d883410
  41df35:	pop    ss
  41df36:	in     al,dx
  41df37:	jmp    0x41df46
  41df39:	push   ss
  41df3a:	test   DWORD PTR [esi+0xc],esp
  41df3d:	xchg   ebp,eax
  41df3e:	mov    dh,0xdb
  41df40:	add    ebp,eax
  41df42:	aam    0xba
  41df44:	rcl    BYTE PTR [esi+eax*1+0x69],cl
  41df48:	sbb    DWORD PTR [edi+eax*1],0x72
  41df4c:	iret   
  41df4d:	popf   
  41df4e:	add    ecx,0x3b
  41df51:	and    al,0x8a
  41df53:	into   
  41df54:	outs   dx,DWORD PTR ds:[esi]
  41df55:	jl     0x41dfad
  41df57:	repnz push ecx
  41df59:	mov    ebx,0xc3d55550
  41df5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df5f:	inc    ebp
  41df60:	icebp  
  41df61:	push   edx
  41df62:	(bad)
  41df66:	xchg   esi,eax
  41df67:	pop    esp
  41df68:	into   
  41df69:	mov    ds:0x817b0310,al
  41df6e:	cmp    DWORD PTR [ecx],edi
  41df70:	xor    ch,ch
  41df72:	lock leave 
  41df74:	fldenv [ebx]
  41df76:	(bad)  
  41df77:	imul   edi,ebx,0x12c6cb3a
  41df7d:	xor    eax,0x1efd06bc
  41df82:	dec    edi
  41df83:	sub    DWORD PTR [ebx-0x6a181e51],0x6e
  41df8a:	idiv   DWORD PTR [edi-0xd]
  41df8d:	pop    ebx
  41df8e:	imul   ebx,DWORD PTR [esi+0x39],0x748a1c08
  41df95:	test   BYTE PTR [esi+0x6342b6d0],bl
  41df9b:	lock dec ebx
  41df9d:	jg     0x41df4c
  41df9f:	push   esi
  41dfa0:	or     edx,ebp
  41dfa2:	in     al,dx
  41dfa3:	dec    ebp
  41dfa4:	mov    esp,0x2285a5b0
  41dfa9:	dec    esi
  41dfaa:	add    DWORD PTR [edi+eiz*8-0x4f54cd2d],esi
  41dfb1:	push   eax
  41dfb2:	sbb    ah,0x7f
  41dfb5:	ja     0x41dfc5
  41dfb7:	pop    ecx
  41dfb8:	fsub   st(6),st
  41dfba:	das    
  41dfbb:	test   eax,0xa64b59e8
  41dfc0:	jbe    0x41df86
  41dfc2:	push   ss
  41dfc3:	(bad)  
  41dfc4:	or     cl,BYTE PTR [eax-0x1a19ef43]
  41dfca:	xor    ebx,DWORD PTR [edi]
  41dfcc:	mov    ds:0xeb7ac650,eax
  41dfd1:	mov    edx,0xd8050b5f
  41dfd6:	push   esi
  41dfd7:	push   esi
  41dfd8:	push   0xffffff88
  41dfda:	xchg   edx,eax
  41dfdb:	mov    ch,0xf5
  41dfdd:	in     eax,0x67
  41dfdf:	loopne 0x41e03f
  41dfe1:	cmp    bl,BYTE PTR [esi+ebx*2+0x23a6c783]
  41dfe8:	mov    bl,0x3c
  41dfea:	push   ebp
  41dfeb:	sbb    cl,bl
  41dfed:	leave  
  41dfee:	popa   
  41dfef:	inc    esp
  41dff0:	push   0xffffff9b
  41dff2:	xchg   ebx,eax
  41dff3:	and    edx,DWORD PTR [ebx+0x318cdc60]
  41dff9:	jnp    0x41df83
  41dffb:	mov    ds:0xb379d32b,eax
  41e000:	xor    eax,0xaf92e7a
  41e005:	out    dx,eax
  41e006:	pop    ss
  41e007:	cld    
  41e008:	lds    esi,FWORD PTR [edx+0x6fb4316d]
  41e00e:	pop    edi
  41e00f:	rol    DWORD PTR [esi-0x5a],1
  41e012:	mov    al,0x29
  41e014:	lock fcomp DWORD PTR [esi+0x762f7436]
  41e01b:	not    ebx
  41e01d:	jmp    0x4ed3:0xa7d4d785
  41e024:	add    dl,BYTE PTR [eax-0x2636d5b5]
  41e02a:	stos   BYTE PTR es:[edi],al
  41e02b:	xchg   esp,eax
  41e02c:	mov    cl,0xa7
  41e02e:	test   BYTE PTR [ecx+0x5c],cl
  41e031:	stos   DWORD PTR es:[edi],eax
  41e032:	clc    
  41e033:	aas    
  41e034:	adc    BYTE PTR [esi+0x56c65435],al
  41e03a:	dec    ebp
  41e03b:	sub    eax,0x47e627db
  41e040:	mov    ds:0xa2f6d76c,eax
  41e045:	outs   dx,BYTE PTR ds:[esi]
  41e046:	test   al,0xdf
  41e048:	out    dx,al
  41e049:	sbb    esp,DWORD PTR [esi+ebx*1]
  41e04c:	std    
  41e04d:	pop    ss
  41e04e:	sahf   
  41e04f:	cmp    eax,0x3a3d98a8
  41e054:	lods   eax,DWORD PTR ds:[esi]
  41e055:	cmp    DWORD PTR [ecx],ebx
  41e057:	push   esp
  41e058:	frstor [edi+0x36]
  41e05b:	push   eax
  41e05c:	jns    0x41e0d4
  41e05e:	out    dx,eax
  41e05f:	ins    DWORD PTR es:[edi],dx
  41e060:	and    eax,0x228c46b4
  41e065:	sub    dl,BYTE PTR [ebx+0x422b028d]
  41e06b:	jo     0x41e03f
  41e06d:	aad    0xef
  41e06f:	(bad)  
  41e070:	xor    ebx,DWORD PTR [ecx-0xf0cb895]
  41e076:	mov    eax,0xdafa11e4
  41e07b:	bound  esi,QWORD PTR ds:0x87fc03f9
  41e081:	and    BYTE PTR [ebx+0x4ec4d7cf],al
  41e087:	adc    bl,BYTE PTR [eax+0x9c2870d]
  41e08d:	mov    ah,0x10
  41e08f:	adc    eax,0x9d28df46
  41e094:	into   
  41e095:	mov    bl,0xa0
  41e097:	rol    BYTE PTR ds:0xf12d3da9,cl
  41e09d:	out    0xa2,eax
  41e09f:	sbb    DWORD PTR [eax+0x64],eax
  41e0a2:	mov    dl,0xe2
  41e0a4:	jecxz  0x41e035
  41e0a6:	sub    bl,BYTE PTR [edx]
  41e0a8:	sub    DWORD PTR [eax-0x42ab4f2c],ecx
  41e0ae:	mul    bh
  41e0b0:	push   edi
  41e0b1:	fst    st(7)
  41e0b3:	jmp    0x5070b95e
  41e0b8:	adc    al,0x3
  41e0ba:	dec    edi
  41e0bb:	(bad)  cs:[esi+0x78b9260a]
  41e0c2:	popa   
  41e0c3:	push   edx
  41e0c4:	inc    esi
  41e0c5:	lahf   
  41e0c6:	dec    edx
  41e0c7:	leave  
  41e0c8:	dec    ebp
  41e0c9:	stos   DWORD PTR es:[edi],eax
  41e0ca:	inc    ecx
  41e0cb:	push   0xffffffa6
  41e0cd:	xor    BYTE PTR [esi-0x55125828],ah
  41e0d3:	dec    esi
  41e0d4:	outs   dx,DWORD PTR ds:[esi]
  41e0d5:	push   cs
  41e0d6:	add    esi,0x37fe2893
  41e0dc:	add    eax,0x3179ca26
  41e0e1:	pop    edi
  41e0e2:	dec    esi
  41e0e3:	(bad)  
  41e0e4:	pop    esp
  41e0e5:	into   
  41e0e6:	or     al,0x82
  41e0e8:	and    al,0x7e
  41e0ea:	xor    BYTE PTR [edi],ah
  41e0ec:	cmp    edi,eax
  41e0ee:	push   cs
  41e0ef:	mov    bh,0x6d
  41e0f1:	xchg   edi,eax
  41e0f2:	leave  
  41e0f3:	xor    BYTE PTR [ebp-0x378a56e],ch
  41e0f9:	das    
  41e0fa:	mov    bh,ah
  41e0fc:	and    DWORD PTR [ecx+0x4e],eax
  41e0ff:	push   cs
  41e100:	push   esi
  41e101:	aam    0xda
  41e103:	lock inc edx
  41e105:	data16 xlat BYTE PTR ds:[ebx]
  41e107:	nop
  41e108:	fs and dh,dh
  41e10b:	neg    DWORD PTR [ecx]
  41e10d:	mov    ah,0x5f
  41e10f:	xchg   esp,eax
  41e110:	push   edx
  41e111:	push   0x477f8afd
  41e116:	call   DWORD PTR [eax+0x5bd4fca]
  41e11c:	ins    BYTE PTR es:[edi],dx
  41e11d:	push   esp
  41e11e:	adc    ebp,DWORD PTR [ebx-0x30]
  41e121:	jmp    FWORD PTR [eax]
  41e123:	add    DWORD PTR [esi],ecx
  41e125:	lods   eax,DWORD PTR ds:[esi]
  41e126:	sbb    bl,BYTE PTR [eax]
  41e128:	inc    edx
  41e129:	lds    edi,FWORD PTR [eax]
  41e12b:	clc    
  41e12c:	add    bl,BYTE PTR [ebp-0x23b8d055]
  41e132:	sbb    BYTE PTR [ecx],ch
  41e134:	push   cs
  41e135:	clc    
  41e136:	push   esi
  41e137:	adc    al,0xcb
  41e139:	pop    ebx
  41e13a:	jae    0x41e121
  41e13c:	cmp    eax,0xc6257eaa
  41e141:	jne    0x41e101
  41e143:	fimul  DWORD PTR [esi+0x412a2847]
  41e149:	lock retf 
  41e14b:	dec    ecx
  41e14c:	sbb    eax,ebx
  41e14e:	(bad)  
  41e14f:	push   ss
  41e150:	inc    ebp
  41e151:	leave  
  41e152:	mov    ds:0xba8b7bd6,eax
  41e157:	pop    edx
  41e158:	inc    esp
  41e159:	xor    cl,0xc
  41e15c:	and    eax,0x83e71db8
  41e161:	ins    BYTE PTR es:[edi],dx
  41e162:	add    esp,eax
  41e164:	add    DWORD PTR [ebp-0x4ab93cf0],ebp
  41e16a:	mov    cl,dh
  41e16c:	xchg   edx,eax
  41e16d:	jmp    0xd4a3:0xe5eeda4d
  41e174:	push   0x6a
  41e176:	fdivr  st(1),st
  41e178:	xchg   BYTE PTR ds:0x7a01929d,cl
  41e17e:	dec    edx
  41e17f:	fstp   TBYTE PTR [esi-0x2fd557a9]
  41e185:	ror    BYTE PTR [ecx+0x1b],cl
  41e188:	and    al,0x57
  41e18a:	pop    ebx
  41e18b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e18c:	and    eax,0xecfe4499
  41e191:	dec    ecx
  41e192:	jnp    0x41e20a
  41e194:	je     0x41e1e7
  41e196:	pop    ds
  41e197:	stc    
  41e198:	push   esp
  41e199:	std    
  41e19a:	and    DWORD PTR [eax+0x17a4a7e0],edx
  41e1a0:	dec    ebx
  41e1a1:	sub    al,0x6e
  41e1a3:	icebp  
  41e1a4:	sar    DWORD PTR [edx],1
  41e1a6:	jge    0x41e1b1
  41e1a8:	into   
  41e1a9:	in     eax,0xa4
  41e1ab:	jle    0x41e207
  41e1ad:	js     0x41e1e1
  41e1af:	cmp    eax,DWORD PTR [ebp+0x525cb1d6]
  41e1b5:	push   ss
  41e1b6:	data16 es mov ah,0x7e
  41e1ba:	cmp    BYTE PTR [edi-0x62fbc126],ch
  41e1c0:	popf   
  41e1c1:	cmp    DWORD PTR [esi+0x312e8831],edx
  41e1c7:	ins    BYTE PTR es:[edi],dx
  41e1c8:	outs   dx,BYTE PTR ds:[esi]
  41e1c9:	aam    0xf6
  41e1cb:	in     eax,0xa1
  41e1cd:	jne    0x41e164
  41e1cf:	inc    edi
  41e1d0:	imul   edx,esp,0x6c1c5947
  41e1d6:	sub    al,0x26
  41e1d8:	jb     0x41e19e
  41e1da:	push   ds
  41e1db:	test   al,0x2b
  41e1dd:	inc    esi
  41e1de:	lock inc esp
  41e1e0:	ds pop esi
  41e1e2:	mov    bl,0x2
  41e1e4:	pushf  
  41e1e5:	pop    esi
  41e1e6:	jecxz  0x41e21c
  41e1e8:	push   edi
  41e1e9:	push   es
  41e1ea:	hlt    
  41e1eb:	test   DWORD PTR [esp+ebp*4+0x22a346ad],esi
  41e1f2:	ja     0x41e271
  41e1f4:	inc    esi
  41e1f5:	not    DWORD PTR [ebp+0x2c]
  41e1f8:	inc    eax
  41e1f9:	sub    BYTE PTR ds:0xc8ade473,ch
  41e1ff:	sbb    al,0xb7
  41e201:	push   cs
  41e202:	leave  
  41e203:	jl     0x41e1da
  41e205:	mov    cs,esp
  41e207:	cmp    al,0x4f
  41e209:	jo     0x41e1fb
  41e20b:	lods   eax,DWORD PTR ds:[esi]
  41e20c:	sbb    DWORD PTR [esi],ecx
  41e20e:	cs push es
  41e210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e211:	out    dx,al
  41e212:	cwde   
  41e213:	pop    esp
  41e214:	add    ecx,0x6c7f329c
  41e21a:	nop
  41e21b:	and    al,0x19
  41e21d:	(bad)  
  41e21e:	fisub  DWORD PTR [edi+0x3fd204b2]
  41e224:	inc    esi
  41e225:	jmp    0x41e1f5
  41e227:	in     al,dx
  41e228:	in     al,dx
  41e229:	fs out dx,al
  41e22b:	fcomp  st(6)
  41e22d:	fild   DWORD PTR [ecx-0x55b77c61]
  41e233:	lods   al,BYTE PTR ds:[esi]
  41e234:	mov    ah,0xfd
  41e236:	cli    
  41e237:	mov    dl,0x48
  41e239:	jb     0x41e2a7
  41e23b:	push   esp
  41e23c:	xor    al,0xe6
  41e23e:	call   0x9ba9634c
  41e243:	or     DWORD PTR [ecx-0x59173fe5],0x19fc6dd1
  41e24d:	sbb    BYTE PTR [ebp-0x3],dl
  41e250:	push   ds
  41e251:	xchg   DWORD PTR [esi-0x20a80052],esp
  41e257:	(bad)  [esi]
  41e259:	sub    eax,DWORD PTR [edx-0x705a09c5]
  41e25f:	jge    0x41e294
  41e261:	in     eax,0xd7
  41e263:	imul   edi,DWORD PTR [eax+0x57],0x543acc2f
  41e26a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e26b:	sbb    al,0xd7
  41e26d:	dec    ecx
  41e26e:	push   ebp
  41e26f:	bound  ebp,QWORD PTR [ebp+0x34208f32]
  41e275:	dec    esp
  41e276:	(bad)  
  41e277:	push   ebx
  41e278:	int    0x46
  41e27a:	xor    ebx,edi
  41e27c:	push   ds
  41e27d:	cld    
  41e27e:	mov    edi,0x10689cb4
  41e283:	fldenv [edi+0x7303f79e]
  41e289:	cmp    ch,bh
  41e28b:	daa    
  41e28c:	repz add al,BYTE PTR [ebx-0x3d]
  41e290:	das    
  41e291:	mov    al,BYTE PTR [edx]
  41e293:	cwde   
  41e294:	push   eax
  41e295:	jnp    0x41e2f5
  41e297:	add    ecx,DWORD PTR [esi+0x4105c738]
  41e29d:	jl     0x41e26c
  41e29f:	mov    eax,ds:0x789fa01e
  41e2a4:	xor    eax,0x1858be7d
  41e2a9:	xor    BYTE PTR [edi],bl
  41e2ab:	add    eax,0x58f502f8
  41e2b0:	aam    0x73
  41e2b2:	mov    ebp,DWORD PTR [edx]
  41e2b4:	hlt    
  41e2b5:	xchg   ebx,eax
  41e2b6:	or     ecx,DWORD PTR [ebp-0x1dcbc6a2]
  41e2bc:	jno    0x41e2e3
  41e2be:	(bad)  
  41e2bf:	mov    edi,0x7904cc72
  41e2c4:	xchg   bl,ch
  41e2c6:	mov    ebx,0xe1809647
  41e2cb:	xchg   ebx,eax
  41e2cc:	pushf  
  41e2cd:	retf   
  41e2ce:	cdq    
  41e2cf:	div    DWORD PTR ds:0xd6fcc9c1
  41e2d5:	ins    BYTE PTR es:[edi],dx
  41e2d6:	lds    ebp,FWORD PTR [eax+ebx*1-0x58]
  41e2da:	adc    edi,DWORD PTR [edx+0x8]
  41e2dd:	ds clc 
  41e2df:	mov    bh,BYTE PTR [ebp+0x54eccd23]
  41e2e5:	mov    ds:0xc60747e0,al
  41e2ea:	and    DWORD PTR ds:0xe0b11e6,0x475fa8c2
  41e2f4:	ss jo  0x41e346
  41e2f7:	fdiv   QWORD PTR ds:0xb1919a5a
  41e2fd:	mov    esi,0x36fb58a0
  41e302:	mov    bh,0x20
  41e304:	scas   eax,DWORD PTR es:[edi]
  41e305:	mov    cl,al
  41e307:	inc    edx
  41e308:	inc    edi
  41e309:	mov    BYTE PTR [ebx],ah
  41e30b:	sub    BYTE PTR [eax+0x27dd54da],ch
  41e311:	stos   BYTE PTR es:[edi],al
  41e312:	fdiv   st,st(2)
  41e314:	fisttp DWORD PTR ds:0x991b7165
  41e31a:	mov    edx,0x66d44c63
  41e31f:	xchg   esp,eax
  41e320:	lods   al,BYTE PTR ds:[esi]
  41e321:	(bad)  
  41e322:	(bad)  
  41e323:	mov    dl,0xbc
  41e325:	sbb    DWORD PTR [esi-0x2c],edx
  41e328:	imul   ebp,DWORD PTR [eax+0x16],0xffffff92
  41e32c:	sbb    edx,edx
  41e32e:	ficomp DWORD PTR [ebp-0x2dd575fc]
  41e334:	into   
  41e335:	lds    esp,FWORD PTR [eax]
  41e337:	dec    ebx
  41e338:	js     0x41e32a
  41e33a:	jmp    0xc39c:0x9fb1c22b
  41e341:	mov    BYTE PTR [ebp+0x3dc6d0f7],ch
  41e347:	adc    eax,0x67071c37
  41e34c:	sahf   
  41e34d:	mov    dl,0xf
  41e34f:	stos   BYTE PTR es:[edi],al
  41e350:	ins    BYTE PTR es:[edi],dx
  41e351:	jl     0x41e316
  41e353:	xor    DWORD PTR [esi*2+0x20727961],edx
  41e35a:	mov    al,0x3b
  41e35c:	and    al,0xcc
  41e35e:	pop    ecx
  41e35f:	aaa    
  41e360:	push   edi
  41e361:	addr16 pop ecx
  41e363:	arpl   WORD PTR [ebx+0x65],cx
  41e366:	adc    dh,BYTE PTR [esp+edx*8+0x1c]
  41e36a:	jecxz  0x41e370
  41e36c:	xchg   BYTE PTR [ebx],bh
  41e36e:	xchg   DWORD PTR [esi-0x14],ebx
  41e371:	scas   eax,DWORD PTR es:[edi]
  41e372:	retf   0xde53
  41e375:	jge    0x41e377
  41e377:	pushf  
  41e378:	out    0xa9,eax
  41e37a:	out    0x7e,eax
  41e37c:	test   al,0x47
  41e37f:	imul   edi,ecx,0xe740d182
  41e385:	lds    eax,FWORD PTR [ecx+esi*8]
  41e388:	fmul   DWORD PTR [edi]
  41e38a:	sbb    esp,DWORD PTR [ebx-0x7c]
  41e38d:	fimul  DWORD PTR [ebx-0x6d]
  41e390:	clc    
  41e391:	int3   
  41e392:	mov    DWORD PTR [ebp+0xb],esp
  41e395:	adc    ebp,ebx
  41e397:	outs   dx,DWORD PTR ds:[esi]
  41e398:	nop
  41e399:	aaa    
  41e39a:	inc    esi
  41e39b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e39c:	dec    esi
  41e39d:	call   0x9ca0:0x747e294f
  41e3a4:	hlt    
  41e3a5:	cld    
  41e3a6:	dec    esi
  41e3a7:	adc    eax,0x55dbc597
  41e3ac:	jmp    0x41e3d3
  41e3ae:	pop    ebp
  41e3af:	sbb    al,0x5d
  41e3b1:	ret    
  41e3b2:	nop
  41e3b3:	push   ecx
  41e3b4:	popf   
  41e3b5:	loope  0x41e3a5
  41e3b7:	leave  
  41e3b8:	cmp    ebx,DWORD PTR [edi-0x62]
  41e3bb:	fstp   QWORD PTR [ecx]
  41e3bd:	jmp    FWORD PTR [ebp-0x6135c225]
  41e3c3:	xchg   esp,eax
  41e3c4:	fs into 
  41e3c6:	jo     0x41e41e
  41e3c8:	xchg   bh,cl
  41e3ca:	enter  0xdf63,0x83
  41e3ce:	sbb    DWORD PTR [esi+0x589b38e0],ebx
  41e3d4:	adc    ah,ch
  41e3d6:	outs   dx,BYTE PTR ds:[esi]
  41e3d7:	adc    esp,eax
  41e3d9:	lods   al,BYTE PTR ds:[esi]
  41e3da:	fisttp DWORD PTR [ecx]
  41e3dc:	sbb    ebx,DWORD PTR [ecx]
  41e3de:	fs fwait
  41e3e0:	cmp    eax,0xb711f981
  41e3e5:	loop   0x41e39c
  41e3e7:	push   0xf5ed5ae0
  41e3ec:	inc    ebp
  41e3ed:	lea    ebx,[ecx-0x2b314b45]
  41e3f3:	lea    esi,[ebx+0x46]
  41e3f6:	mov    ebp,0x76123c74
  41e3fb:	popf   
  41e3fc:	or     al,0xfc
  41e3fe:	cs adc ah,dl
  41e401:	sub    ecx,DWORD PTR [ebx+0x5e]
  41e404:	jmp    0xc92d80c0
  41e409:	sub    eax,0x62a02542
  41e40e:	add    eax,0xc267bd49
  41e413:	and    bl,bl
  41e415:	cmp    esp,DWORD PTR [edx+0x7b0d76d]
  41e41b:	xchg   ebp,eax
  41e41c:	pop    es
  41e41d:	sar    edx,cl
  41e41f:	fucomp st(7)
  41e421:	into   
  41e422:	ficom  DWORD PTR [ebp-0x22]
  41e425:	mov    eax,ds:0xceb01d64
  41e42a:	and    ch,cl
  41e42c:	cli    
  41e42d:	imul   ebp,DWORD PTR [edi],0x68
  41e430:	dec    ebx
  41e431:	aad    0xcd
  41e433:	mov    ds:0x1090ea6c,al
  41e438:	or     bh,al
  41e43a:	into   
  41e43b:	cmp    eax,0x23f68204
  41e440:	mov    ebp,0x1839c2f1
  41e445:	call   0xfc4c:0x32d65b31
  41e44c:	pop    eax
  41e44d:	les    ebp,FWORD PTR [ebx+0x35d6f063]
  41e453:	lods   eax,DWORD PTR ds:[esi]
  41e454:	in     al,0x8b
  41e456:	retf   
  41e457:	mov    bh,0xc2
  41e459:	sbb    ah,cl
  41e45b:	sbb    BYTE PTR [ecx],0x16
  41e45e:	jmp    0x9f351945
  41e463:	pop    ds
  41e464:	(bad)  
  41e465:	and    al,0xe3
  41e467:	dec    eax
  41e468:	mov    al,0x3c
  41e46a:	mov    esp,0xf8631e89
  41e46f:	mov    eax,ds:0x116e16ef
  41e474:	push   ebx
  41e475:	cmc    
  41e476:	pop    ecx
  41e477:	sub    al,0xf6
  41e479:	dec    esp
  41e47a:	ds push eax
  41e47c:	jge    0x41e423
  41e47e:	retf   
  41e47f:	dec    edx
  41e480:	jb     0x41e499
  41e482:	sbb    BYTE PTR [esi-0x4a],cl
  41e485:	push   eax
  41e486:	inc    edi
  41e487:	(bad)  
  41e488:	out    0x64,al
  41e48a:	mov    eax,ds:0x33f7808a
  41e48f:	mov    esp,0xdb5cb3a0
  41e494:	loop   0x41e4ac
  41e496:	jo     0x41e49b
  41e498:	push   ds
  41e499:	dec    edi
  41e49a:	jbe    0x41e490
  41e49c:	popf   
  41e49d:	cmp    BYTE PTR [edx+0x6b],dh
  41e4a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4a2:	jle    0x41e443
  41e4a4:	loope  0x41e4a0
  41e4a6:	pop    eax
  41e4a7:	add    al,0xc4
  41e4a9:	imul   BYTE PTR [ecx]
  41e4ab:	loop   0x41e4f8
  41e4ad:	adc    al,dh
  41e4af:	jo     0x41e521
  41e4b1:	sub    DWORD PTR fs:[ebx-0x47605eb2],0x7a
  41e4b9:	cdq    
  41e4ba:	pushf  
  41e4bb:	repz jno 0x41e441
  41e4be:	push   ecx
  41e4bf:	sub    BYTE PTR [edx+0xc],dl
  41e4c2:	push   ecx
  41e4c3:	mov    dh,0x3
  41e4c5:	ins    BYTE PTR es:[edi],dx
  41e4c6:	jns    0x41e45a
  41e4c8:	stc    
  41e4c9:	jmp    0x8764bdec
  41e4ce:	int    0xd3
  41e4d0:	loope  0x41e542
  41e4d2:	syscall 
  41e4d4:	bnd jmp DWORD PTR [ebp+0x18]
  41e4d8:	or     al,0xca
  41e4da:	add    bh,BYTE PTR [esi+ebx*4-0x3]
  41e4de:	xor    BYTE PTR [edx+ebp*2],bh
  41e4e1:	test   cl,bl
  41e4e3:	clts   
  41e4e5:	mov    ch,BYTE PTR [ebx-0x78f85b97]
  41e4eb:	add    dl,dl
  41e4ed:	(bad)  
  41e4ef:	sbb    ah,dl
  41e4f1:	fidiv  DWORD PTR ds:0xfaccacec
  41e4f7:	push   esp
  41e4f8:	loopne 0x41e4c4
  41e4fa:	cld    
  41e4fb:	mov    ds:0x4c77457b,al
  41e500:	add    eax,DWORD PTR [ecx-0x44bbd25c]
  41e506:	or     ebp,DWORD PTR [edx+0x762e4c6]
  41e50c:	push   DWORD PTR [ebp-0x18]
  41e50f:	push   eax
  41e510:	add    bl,BYTE PTR [ebp-0x80]
  41e513:	inc    DWORD PTR [ecx-0x6df4d3f6]
  41e519:	hlt    
  41e51a:	fld    DWORD PTR [ebx-0x1c0b9085]
  41e520:	loop   0x41e57a
  41e522:	jb     0x41e4c9
  41e524:	inc    edi
  41e525:	mov    BYTE PTR [edi+edi*2-0x6f],ah
  41e529:	sbb    eax,0xe43b49c8
  41e52e:	retf   0x358a
  41e531:	test   DWORD PTR [ebx],esp
  41e533:	sbb    al,0x9c
  41e535:	jp     0x41e56f
  41e537:	pop    ecx
  41e538:	loope  0x41e4d1
  41e53a:	cdq    
  41e53b:	nop
  41e53c:	(bad)  
  41e53d:	sbb    eax,0xcd2abf5e
  41e542:	jmp    0xd599:0x59d00225
  41e549:	leave  
  41e54a:	out    dx,eax
  41e54b:	and    bl,BYTE PTR [ecx]
  41e54d:	mov    esp,0x3968310a
  41e552:	out    0x57,al
  41e554:	fs mov ecx,0x3c0ede5
  41e55a:	scas   al,BYTE PTR es:[edi]
  41e55b:	inc    DWORD PTR [edx-0x36]
  41e55e:	jle    0x41e570
  41e560:	push   0x11ab6301
  41e565:	div    edi
  41e567:	add    al,0x90
  41e569:	and    BYTE PTR [edx],cl
  41e56b:	mov    ebp,0x4773d0b4
  41e570:	jmp    0xa3bd985b
  41e575:	fstp   DWORD PTR [edi+0x1b]
  41e578:	jmp    0xd803:0x7bcfa047
  41e57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e580:	icebp  
  41e581:	dec    ecx
  41e582:	inc    edi
  41e583:	add    BYTE PTR ds:0x1057eb81,0x3a
  41e58a:	nop
  41e58b:	(bad)  
  41e58c:	stc    
  41e58d:	bound  esi,QWORD PTR [eax+eax*2+0x11d4c02d]
  41e594:	test   eax,0x58e01e3d
  41e599:	arpl   WORD PTR [edi*1+0x30f2182d],ax
  41e5a0:	push   eax
  41e5a1:	nop
  41e5a2:	lods   al,BYTE PTR ds:[esi]
  41e5a3:	sbb    eax,DWORD PTR [esi+0x76]
  41e5a6:	sbb    eax,0xc7117a85
  41e5ab:	cli    
  41e5ac:	shr    BYTE PTR [ebx],1
  41e5ae:	test   BYTE PTR [ebx+0x65f75796],al
  41e5b4:	test   DWORD PTR [edx],ecx
  41e5b6:	mov    ds:0x16e3c1bf,al
  41e5bb:	or     bl,BYTE PTR ds:0x2d6aed6c
  41e5c1:	fidivr WORD PTR [eax+0x4b81d0c0]
  41e5c7:	cmc    
  41e5c8:	(bad)  
  41e5c9:	(bad)
  41e5cc:	dec    eax
  41e5cd:	push   edi
  41e5ce:	jnp    0x41e5d6
  41e5d0:	test   al,0x49
  41e5d2:	out    0x25,al
  41e5d4:	mov    edx,DWORD PTR [edi-0x30]
  41e5d7:	ror    dh,cl
  41e5d9:	jmp    0xba069a54
  41e5de:	sbb    ecx,eax
  41e5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5e1:	jne    0x41e5a1
  41e5e3:	jno    0x41e628
  41e5e5:	and    dh,ah
  41e5e7:	adc    eax,0xf3a435f4
  41e5ec:	sub    eax,0x7c39f96d
  41e5f1:	clc    
  41e5f2:	inc    edi
  41e5f3:	aad    0x30
  41e5f5:	adc    bl,BYTE PTR [ebx+0x16]
  41e5f8:	arpl   WORD PTR [eax],cx
  41e5fa:	fcmovbe st,st(1)
  41e5fc:	lods   al,BYTE PTR ds:[esi]
  41e5fd:	(bad)  
  41e5fe:	call   FWORD PTR [edi-0x1d2b588e]
  41e604:	test   eax,0xd6663238
  41e609:	loop   0x41e5d5
  41e60b:	jp     0x41e67d
  41e60d:	xchg   ecx,eax
  41e60e:	inc    edi
  41e60f:	jle    0x41e623
  41e611:	rsqrtss xmm1,DWORD PTR es:[eax]
  41e616:	fcomp  QWORD PTR [edx-0x5b]
  41e619:	in     al,0xbf
  41e61b:	xchg   edi,eax
  41e61c:	sar    BYTE PTR [ebp+0x48],cl
  41e61f:	je     0x41e627
  41e621:	(bad)  
  41e623:	neg    DWORD PTR [ebp-0xa]
  41e626:	imul   edx,DWORD PTR [eax+esi*1],0xffffff98
  41e62a:	and    DWORD PTR [ebp+0x20b0b3a9],ebp
  41e630:	mov    edx,0x5f166b64
  41e635:	or     al,BYTE PTR [edx-0x71a2cc8]
  41e63b:	jp     0x41e6ac
  41e63d:	les    edx,FWORD PTR [edx]
  41e63f:	inc    edx
  41e640:	gs cdq 
  41e642:	or     bl,ah
  41e644:	icebp  
  41e645:	xor    eax,0x47dd3cdf
  41e64a:	mov    al,ds:0xc75dd8ea
  41e64f:	das    
  41e650:	cmp    ecx,ebp
  41e652:	sub    eax,DWORD PTR [edi-0x254b6014]
  41e658:	aaa    
  41e659:	cmp    edx,ebp
  41e65b:	xor    cl,BYTE PTR [edi]
  41e65d:	mov    ecx,0x89aea085
  41e662:	and    ecx,edx
  41e664:	jo     0x41e667
  41e666:	push   edi
  41e667:	xchg   esi,eax
  41e668:	addr16 mov ebp,cr1
  41e66c:	push   esi
  41e66d:	xor    DWORD PTR [eax+0x34d2fee1],ebx
  41e673:	fisubr DWORD PTR [eax+0x44]
  41e676:	mov    dh,0x44
  41e678:	add    al,0xb8
  41e67a:	mov    edx,0x2bceb35
  41e67f:	test   eax,0xb26b3460
  41e684:	inc    ebp
  41e685:	nop
  41e686:	int3   
  41e687:	sub    ebx,ebx
  41e689:	jle    0x41e6c0
  41e68b:	in     al,dx
  41e68c:	es aaa 
  41e68e:	jmp    0x21c0:0x20d63e36
  41e695:	and    BYTE PTR [ebx+edi*4+0x45],dl
  41e699:	inc    edi
  41e69a:	ror    ch,cl
  41e69c:	dec    esp
  41e69d:	push   ds
  41e69e:	out    0xd5,al
  41e6a0:	sbb    al,0xaa
  41e6a2:	lods   eax,DWORD PTR ds:[esi]
  41e6a3:	nop
  41e6a4:	ret    0xfa27
  41e6a7:	loopne 0x41e6eb
  41e6a9:	leave  
  41e6aa:	lahf   
  41e6ab:	mov    al,ds:0x8463824f
  41e6b0:	mov    eax,ds:0xd35c579d
  41e6b5:	add    eax,0x4532b7b1
  41e6ba:	test   BYTE PTR [ebp+0x18],ah
  41e6bd:	inc    edx
  41e6be:	inc    ebx
  41e6bf:	rcl    DWORD PTR [ebp-0xc],cl
  41e6c2:	mov    ah,0xe3
  41e6c4:	xchg   BYTE PTR [esi+0x7],cl
  41e6c7:	sub    dh,BYTE PTR [ebp+0x6c]
  41e6ca:	mov    edx,0xa249cab9
  41e6cf:	add    eax,0x25658051
  41e6d4:	mov    ds:0xe4a113cd,al
  41e6d9:	js     0x41e669
  41e6db:	add    esi,ecx
  41e6dd:	jl     0x41e708
  41e6df:	add    eax,0x88285c68
  41e6e4:	add    BYTE PTR [esi-0x1d2d11e9],0x97
  41e6eb:	push   ecx
  41e6ec:	jecxz  0x41e6ca
  41e6ee:	fst    QWORD PTR [esi+0x28]
  41e6f1:	push   cs
  41e6f2:	sub    dh,ah
  41e6f4:	leave  
  41e6f5:	mov    esp,0x8e637d86
  41e6fa:	popf   
  41e6fb:	(bad)  
  41e6fc:	(bad)  
  41e6fd:	pop    edi
  41e6fe:	pop    ss
  41e6ff:	out    0xa6,al
  41e701:	aas    
  41e702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e703:	mov    eax,0xe346fe30
  41e708:	pop    ebp
  41e709:	data16 xor bh,BYTE PTR [ebp+ebx*8-0x70]
  41e70e:	lock iret 
  41e710:	pop    ecx
  41e711:	cld    
  41e712:	imul   esp,DWORD PTR [ebp+0xe],0xc322cd15
  41e719:	jae    0x41e70c
  41e71b:	or     al,0x64
  41e71d:	fisubr WORD PTR [edi-0x5f]
  41e720:	fadd   DWORD PTR [edx+0x49ed78c8]
  41e726:	add    al,0x2e
  41e728:	scas   eax,DWORD PTR es:[edi]
  41e729:	adc    eax,0xc8cf4637
  41e72e:	adc    ebp,DWORD PTR [ebp+0x3c]
  41e731:	(bad)  
  41e732:	push   ebx
  41e733:	(bad)  
  41e734:	aaa    
  41e735:	int3   
  41e736:	add    cl,BYTE PTR ds:0x7d5901dd
  41e73c:	and    esi,0x3e200311
  41e742:	cmp    eax,0xb869bece
  41e747:	icebp  
  41e748:	mov    cl,0xd8
  41e74a:	mov    dh,0xb8
  41e74c:	ds mov dl,0xd5
  41e74f:	xchg   BYTE PTR [ecx-0x1cf21f8f],bh
  41e755:	neg    BYTE PTR [eax-0x21]
  41e758:	sbb    eax,edx
  41e75a:	xchg   BYTE PTR [ebx+edi*8],ah
  41e75d:	xchg   DWORD PTR [ebp-0x35],edx
  41e760:	xchg   DWORD PTR [eax],ecx
  41e762:	dec    ebx
  41e763:	(bad)  
  41e765:	pop    esi
  41e766:	test   BYTE PTR [eax],0x4d
  41e769:	dec    edi
  41e76a:	daa    
  41e76b:	sub    bl,BYTE PTR [eax]
  41e76d:	add    BYTE PTR [edi],ah
  41e76f:	inc    edi
  41e770:	clc    
  41e771:	ins    BYTE PTR es:[edi],dx
  41e772:	shl    DWORD PTR [esi-0x3b],1
  41e775:	mov    al,0xd6
  41e777:	xchg   DWORD PTR [eax],ecx
  41e779:	int3   
  41e77a:	jns    0x41e7f9
  41e77c:	mov    edi,0x73088b40
  41e781:	rcr    BYTE PTR [edi+0x27dccf02],cl
  41e787:	lea    edx,ds:0x914951af
  41e78d:	adc    bh,0x99
  41e790:	out    0x18,eax
  41e792:	js     0x41e7bc
  41e794:	repz mov eax,ds:0x79810497
  41e79a:	jmp    0x9440bd77
  41e79f:	mov    ds:0x5c467785,al
  41e7a4:	js     0x41e818
  41e7a6:	imul   ebp
  41e7a8:	add    DWORD PTR [edi-0xdeb4357],esp
  41e7ae:	or     al,0xc1
  41e7b0:	cmp    esi,eax
  41e7b2:	repz rcr DWORD PTR cs:[eax+ebp*1-0x3e35e129],cl
  41e7bb:	xchg   ecx,eax
  41e7bc:	in     al,0xcd
  41e7be:	jmp    0x4a2e:0xf36dff61
  41e7c5:	sbb    dh,BYTE PTR [esi]
  41e7c7:	(bad)  
  41e7c8:	(bad)  
  41e7c9:	shl    DWORD PTR [eax+0x502e7ed8],0xd9
  41e7d0:	out    0xde,eax
  41e7d2:	push   0x2b
  41e7d4:	int3   
  41e7d5:	jmp    0x41e7d5
  41e7d7:	out    dx,eax
  41e7d8:	pop    ds
  41e7d9:	pop    ebx
  41e7da:	pop    esi
  41e7db:	dec    ecx
  41e7dc:	das    
  41e7dd:	push   es
  41e7de:	xor    edi,DWORD PTR [edi]
  41e7e0:	dec    esp
  41e7e1:	mov    esp,edx
  41e7e3:	or     DWORD PTR [edi+0x4a5d47fc],ebx
  41e7e9:	or     BYTE PTR [esi],0xac
  41e7ec:	inc    ebx
  41e7ed:	pop    ss
  41e7ee:	sbb    eax,DWORD PTR [esi-0x4d]
  41e7f1:	dec    edx
  41e7f2:	ficom  WORD PTR [edi+0x767c1d1a]
  41e7f8:	sbb    BYTE PTR [ecx+0x37],0x8c
  41e7fc:	cs pushf 
  41e7fe:	dec    ebx
  41e7ff:	push   esi
  41e800:	sahf   
  41e801:	xor    al,0x95
  41e803:	mov    esp,0xa3740d7
  41e808:	dec    ebp
  41e809:	xchg   esi,eax
  41e80a:	hlt    
  41e80b:	js     0x41e878
  41e80d:	and    BYTE PTR [ebx-0xb],cl
  41e810:	mov    edx,0xc483387a
  41e815:	not    DWORD PTR [ebx]
  41e817:	inc    edi
  41e818:	pop    eax
  41e819:	jg     0x41e805
  41e81b:	mov    eax,ds:0x4f373b3c
  41e820:	pop    ecx
  41e821:	iret   
  41e822:	inc    edi
  41e823:	lds    esp,FWORD PTR [ebx]
  41e825:	ss aas 
  41e827:	push   esp
  41e828:	mov    ebx,0x73adc3cc
  41e82d:	sbb    ebp,DWORD PTR [ebx-0x10]
  41e830:	dec    edi
  41e831:	pop    ss
  41e832:	in     eax,0x9e
  41e834:	add    al,0xda
  41e836:	imul   ecx,DWORD PTR [eax],0x16
  41e839:	(bad)  
  41e83a:	and    edx,DWORD PTR [ecx+ebp*8-0x48]
  41e83e:	fwait
  41e83f:	mov    bh,0x6d
  41e841:	sub    DWORD PTR [esi+0x54f8b9ab],eax
  41e847:	add    DWORD PTR [ecx],0x7b551148
  41e84d:	cmp    ah,BYTE PTR [esi-0x1e4b5f9b]
  41e853:	int3   
  41e854:	out    dx,eax
  41e855:	cmp    BYTE PTR [ebx+0x5],bl
  41e858:	dec    edx
  41e859:	push   cs
  41e85a:	push   edi
  41e85b:	scas   al,BYTE PTR es:[edi]
  41e85c:	pop    ebx
  41e85d:	push   esi
  41e85e:	or     al,0x2b
  41e860:	sti    
  41e861:	jbe    0x41e8a2
  41e863:	(bad)  
  41e864:	xor    al,0x9d
  41e866:	adc    cl,BYTE PTR [ebp+0x43]
  41e869:	stc    
  41e86a:	inc    eax
  41e86b:	call   0xc181a7eb
  41e870:	je     0x41e8a2
  41e872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e873:	pop    eax
  41e874:	and    BYTE PTR [ebp-0x2b],bl
  41e877:	in     eax,dx
  41e878:	push   0x77ea00bf
  41e87d:	inc    edx
  41e87e:	lahf   
  41e87f:	mov    BYTE PTR [esi+0x4466696e],bl
  41e885:	xor    ch,ah
  41e887:	nop
  41e888:	imul   BYTE PTR [edi]
  41e88a:	pop    esi
  41e88b:	dec    ecx
  41e88c:	xor    bh,BYTE PTR [ebp-0x23]
  41e88f:	sub    al,0x45
  41e891:	xchg   DWORD PTR [eax+0x52f70e47],ebp
  41e897:	push   edi
  41e898:	sbb    ch,BYTE PTR [eax]
  41e89a:	fwait
  41e89b:	out    0x3c,eax
  41e89d:	aad    0x50
  41e89f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8a0:	adc    BYTE PTR [ebp-0x36511871],0x6
  41e8a7:	cmp    DWORD PTR [eax+0x71],edi
  41e8aa:	and    bl,BYTE PTR [edx-0x3d]
  41e8ad:	repnz (bad) 
  41e8af:	fmul   QWORD PTR [esi+eax*4+0x43a64d49]
  41e8b6:	repnz and ah,BYTE PTR [ecx]
  41e8b9:	and    bl,BYTE PTR [eax-0x56]
  41e8bc:	(bad)  [ecx+0x588406a4]
  41e8c2:	not    DWORD PTR [esi]
  41e8c4:	repz or eax,0xf30535cd
  41e8ca:	scas   al,BYTE PTR es:[edi]
  41e8cb:	sbb    bh,BYTE PTR [eax-0x40]
  41e8ce:	pop    es
  41e8cf:	push   0xcac14b4
  41e8d4:	cmp    esi,ebp
  41e8d6:	fmul   st,st(2)
  41e8d8:	out    0xd4,al
  41e8da:	sar    DWORD PTR [edx+0x6a3622b0],1
  41e8e0:	scas   al,BYTE PTR es:[edi]
  41e8e1:	cmp    al,0xea
  41e8e3:	sub    DWORD PTR [edi+0x17e5c970],0xca7b204f
  41e8ed:	imul   esp,DWORD PTR [eax+0x3c],0x46d32e16
  41e8f4:	in     eax,0x7e
  41e8f6:	sub    dl,cl
  41e8f8:	sbb    al,0xc7
  41e8fa:	sub    eax,0x49d00a2e
  41e8ff:	in     al,0x49
  41e901:	and    BYTE PTR [eax],0x22
  41e904:	jae    0x41e8f7
  41e906:	fcom   DWORD PTR [esi+0x45]
  41e909:	(bad)  
  41e90b:	push   edi
  41e90c:	sar    BYTE PTR [ebp+0x5201ad02],1
  41e912:	jmp    0xd2bb:0x4d5a7fe7
  41e919:	inc    edx
  41e91a:	push   edx
  41e91b:	sub    DWORD PTR [ecx-0x80],0x3e
  41e91f:	(bad)  
  41e920:	adc    ebp,DWORD PTR [edi+ebp*4]
  41e923:	in     al,0x23
  41e925:	fwait
  41e926:	add    BYTE PTR [ecx+0x30659d6d],dh
  41e92c:	sti    
  41e92d:	bound  eax,QWORD PTR [edi-0x65]
  41e930:	sub    cl,BYTE PTR [eax-0xc]
  41e933:	fwait
  41e934:	daa    
  41e935:	scas   al,BYTE PTR es:[edi]
  41e936:	repz retf 0x30fb
  41e93a:	mov    al,ds:0xde9319c
  41e93f:	pop    eax
  41e940:	add    ecx,DWORD PTR [ebp-0x16fb34fa]
  41e946:	fist   DWORD PTR [esi+0x45]
  41e949:	lds    esp,FWORD PTR [edx+0x353a0f79]
  41e94f:	xchg   edi,eax
  41e950:	hlt    
  41e951:	and    dh,BYTE PTR [ebp+0x370f5da]
  41e957:	dec    esp
  41e958:	xchg   edi,eax
  41e959:	and    al,0x48
  41e95b:	repnz ins DWORD PTR es:[edi],dx
  41e95d:	mov    ecx,0x9cd43474
  41e962:	stos   DWORD PTR es:[edi],eax
  41e963:	pop    esp
  41e964:	jmp    0xca24:0xd6b951d1
  41e96b:	jecxz  0x41e9b5
  41e96d:	jo     0x41e9ae
  41e96f:	aam    0x4e
  41e971:	cmp    dl,BYTE PTR [edx+0x6cc46991]
  41e977:	adc    eax,0xbccb3d2d
  41e97c:	int3   
  41e97d:	pop    ss
  41e97e:	fnstenv [ebp+0x6d]
  41e981:	mov    ch,0x4a
  41e983:	lds    esi,FWORD PTR ds:0x3e4b0731
  41e989:	das    
  41e98a:	adc    edx,DWORD PTR [ecx+0x16]
  41e98d:	das    
  41e98e:	mov    edi,0xbba02e58
  41e993:	daa    
  41e994:	popa   
  41e995:	sbb    ebp,DWORD PTR [edi+0x75]
  41e998:	repz enter 0xc8e7,0xce
  41e99d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e99e:	push   ss
  41e99f:	xchg   edi,eax
  41e9a0:	push   eax
  41e9a1:	push   0x3f
  41e9a3:	popf   
  41e9a4:	inc    edi
  41e9a5:	retf   0x53dc
  41e9a8:	mov    bl,ch
  41e9aa:	outs   dx,DWORD PTR ds:[esi]
  41e9ab:	aas    
  41e9ac:	test   DWORD PTR [eax+0x16adaea5],esp
  41e9b2:	retf   
  41e9b3:	cmp    ch,0x33
  41e9b6:	push   0xf42b7ee6
  41e9bb:	sub    al,0x9a
  41e9bd:	cwde   
  41e9be:	aad    0x94
  41e9c0:	aas    
  41e9c1:	jecxz  0x41e953
  41e9c3:	cmp    eax,0xad650c8b
  41e9c8:	retf   
  41e9c9:	rdtsc  
  41e9cb:	out    dx,eax
  41e9cc:	out    dx,al
  41e9cd:	fld    TBYTE PTR [ebp-0x4b]
  41e9d0:	xor    ebx,ebx
  41e9d2:	adc    al,bl
  41e9d4:	out    0xe6,al
  41e9d6:	mov    al,0x66
  41e9d8:	mov    edx,0xda29a85a
  41e9dd:	push   eax
  41e9de:	stc    
  41e9df:	push   eax
  41e9e0:	(bad)  
  41e9e1:	xor    bl,BYTE PTR [edx]
  41e9e3:	in     eax,dx
  41e9e4:	je     0x41e9ab
  41e9e6:	pop    fs
  41e9e8:	cmp    bl,BYTE PTR gs:[edi+0x77144457]
  41e9ef:	int3   
  41e9f0:	jbe    0x41ea45
  41e9f2:	push   0x2b
  41e9f4:	jl     0x41e999
  41e9f6:	shl    BYTE PTR [edi+0x115e176],cl
  41e9fc:	std    
  41e9fd:	jge    0x41e9b2
  41e9ff:	iret   
  41ea00:	xor    BYTE PTR [edi-0x8092152],dl
  41ea06:	addr16 mov al,0xa6
  41ea09:	ret    0xe955
  41ea0c:	add    eax,0x8cd6b43
  41ea11:	mov    edi,esi
  41ea13:	out    dx,al
  41ea14:	or     ebp,DWORD PTR [ebx+ebp*2]
  41ea17:	add    DWORD PTR [edi-0x3eb12cbf],esp
  41ea1d:	rcl    BYTE PTR [edi],0x1f
  41ea20:	fsub   DWORD PTR [ebx]
  41ea22:	add    al,0xa1
  41ea24:	inc    ebp
  41ea25:	jne    0x41ea98
  41ea27:	retf   0x2b27
  41ea2a:	outs   dx,DWORD PTR ds:[esi]
  41ea2b:	out    0xbc,al
  41ea2d:	das    
  41ea2e:	mov    bl,0xd0
  41ea30:	xor    ebx,DWORD PTR [ebx-0xa]
  41ea33:	call   0x9f2f:0xed01e1b1
  41ea3a:	sub    bh,BYTE PTR ds:0xb293ba03
  41ea40:	clc    
  41ea41:	push   edx
  41ea42:	mov    esp,0xb834c92d
  41ea47:	xchg   esp,eax
  41ea48:	and    al,0x68
  41ea4a:	sub    al,0xc
  41ea4c:	xchg   DWORD PTR [edi+0x408364d7],ecx
  41ea52:	xor    cl,BYTE PTR [ebp-0x5b]
  41ea55:	js     0x41ea63
  41ea57:	imul   DWORD PTR [ebx]
  41ea59:	sbb    DWORD PTR [esi+0x49],0x77
  41ea5d:	mov    al,ds:0xf6f5035d
  41ea62:	nop
  41ea63:	push   edi
  41ea64:	sub    al,0xdf
  41ea66:	mov    ecx,0x2ef2f176
  41ea6b:	inc    esi
  41ea6c:	push   edi
  41ea6d:	xor    dl,al
  41ea6f:	push   ebp
  41ea70:	nop
  41ea71:	fcmove st,st(3)
  41ea73:	cmc    
  41ea74:	rcr    DWORD PTR [esp+eiz*2],1
  41ea77:	out    0xb9,al
  41ea79:	mov    ds:0xe4ea275b,al
  41ea7e:	jmp    0xc6eb02cd
  41ea83:	mov    ebx,0x714628ac
  41ea88:	push   ss
  41ea89:	out    0x79,al
  41ea8b:	adc    eax,0x7e3a6460
  41ea90:	pop    ss
  41ea91:	je     0x41eab7
  41ea93:	test   BYTE PTR [edx],ah
  41ea95:	mov    eax,ds:0x7cb4bd73
  41ea9a:	jge    0x41eaf3
  41ea9c:	inc    edx
  41ea9d:	or     eax,0xb306331
  41eaa2:	cmp    edx,DWORD PTR [edi]
  41eaa4:	xor    eax,0x61c879b6
  41eaa9:	jne    0x41eabd
  41eaab:	or     eax,0xe70a5963
  41eab0:	(bad)  
  41eab1:	mov    esp,0x7be9fcd8
  41eab6:	and    al,0x66
  41eab8:	stos   BYTE PTR es:[edi],al
  41eab9:	sub    DWORD PTR fs:[ecx+esi*4-0x47],0x2f
  41eabf:	mov    dl,0x40
  41eac1:	sbb    BYTE PTR [esi+ebp*2+0x52eadfa3],dh
  41eac8:	int3   
  41eac9:	retf   0x66ad
  41eacc:	xchg   BYTE PTR [esi+0x48],ah
  41eacf:	dec    edi
  41ead0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ead1:	jmp    0x7f21856c
  41ead6:	mov    ah,0x59
  41ead8:	cwde   
  41ead9:	inc    ecx
  41eada:	ror    BYTE PTR [edi],0x68
  41eadd:	aaa    
  41eade:	(bad)
  41eae1:	add    ch,BYTE PTR [eax]
  41eae3:	stos   DWORD PTR es:[edi],eax
  41eae4:	sub    edi,ebp
  41eae6:	hlt    
  41eae7:	add    eax,0x4050e3fd
  41eaec:	pop    eax
  41eaed:	cmp    eax,0xf6b579e7
  41eaf2:	and    al,0x5c
  41eaf4:	inc    eax
  41eaf5:	push   0x22e8843
  41eafa:	ror    BYTE PTR [edx],cl
  41eafc:	and    dl,BYTE PTR [ebp+esi*8+0x52]
  41eb00:	mov    dh,0x40
  41eb02:	pop    ss
  41eb03:	jp     0x41eac1
  41eb05:	call   0xcf1c:0x9bb86b
  41eb0c:	mov    eax,ds:0xf7b90922
  41eb11:	stc    
  41eb12:	add    DWORD PTR [esi],eax
  41eb14:	jb     0x41eab5
  41eb16:	in     al,0xd8
  41eb18:	fwait
  41eb19:	sub    esp,edi
  41eb1b:	add    BYTE PTR [ecx-0x302662dc],al
  41eb21:	leave  
  41eb22:	scas   eax,DWORD PTR es:[edi]
  41eb23:	iret   
  41eb24:	jge    0x41eb57
  41eb26:	adc    DWORD PTR [esi],edi
  41eb28:	aaa    
  41eb29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb2a:	push   ds
  41eb2b:	rcl    BYTE PTR [ebx-0x35],0x1
  41eb2f:	push   esi
  41eb30:	adc    ebp,ebp
  41eb32:	push   0x3a55459
  41eb37:	adc    cl,BYTE PTR [eax+0x21]
  41eb3a:	adc    DWORD PTR [edx],esp
  41eb3c:	or     DWORD PTR [esi],edi
  41eb3e:	in     al,0x92
  41eb40:	sbb    eax,0xc66f2a74
  41eb45:	into   
  41eb46:	xor    eax,0x973e1ab8
  41eb4b:	scas   al,BYTE PTR es:[edi]
  41eb4c:	sahf   
  41eb4d:	inc    ecx
  41eb4e:	(bad)  
  41eb4f:	pop    ecx
  41eb50:	in     eax,dx
  41eb51:	rcr    DWORD PTR [edi],cl
  41eb53:	or     al,0x94
  41eb55:	hlt    
  41eb56:	mov    edx,fs
  41eb58:	mov    ebp,0xe558f10f
  41eb5d:	call   0xfb4a35d9
  41eb62:	test   BYTE PTR es:[edx-0x4ab7a347],0xbe
  41eb6a:	aad    0xd5
  41eb6c:	or     DWORD PTR [ebp-0x73],0xffffffcd
  41eb70:	fcomp  QWORD PTR [ecx-0x7f]
  41eb73:	pop    ecx
  41eb74:	mov    esp,0x25393583
  41eb79:	pop    ds
  41eb7a:	xor    cl,BYTE PTR [ecx-0x4e]
  41eb7d:	xchg   ebx,eax
  41eb7e:	sbb    al,0x28
  41eb80:	cdq    
  41eb81:	fadd   DWORD PTR [eax+0x20]
  41eb84:	push   ebx
  41eb85:	mov    fs,WORD PTR [edx+0x4f00a2a2]
  41eb8b:	stos   DWORD PTR es:[edi],eax
  41eb8c:	mov    edi,ds
  41eb8e:	adc    al,0x1a
  41eb90:	jl     0x41eba2
  41eb92:	jge    0x41eb71
  41eb94:	pop    ds
  41eb95:	dec    esp
  41eb96:	jno    0x41ebf5
  41eb98:	(bad)  
  41eb99:	out    0xb,al
  41eb9b:	arpl   WORD PTR [eax+0x6e2d60b9],di
  41eba1:	je     0x41eb45
  41eba3:	mov    ah,0xb6
  41eba5:	fld    TBYTE PTR [ebx+0x35]
  41eba8:	mov    ah,0x5
  41ebaa:	cs mov esi,0x67f8ea5
  41ebb0:	pop    esi
  41ebb1:	jmp    ebx
  41ebb3:	setae  BYTE PTR [ecx]
  41ebb6:	adc    BYTE PTR [edx-0x2f],cl
  41ebb9:	(bad)  [esi-0x526371ad]
  41ebbf:	scas   eax,DWORD PTR es:[edi]
  41ebc0:	int    0x13
  41ebc2:	das    
  41ebc3:	push   edx
  41ebc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebc5:	nop
  41ebc6:	(bad)  
  41ebc7:	and    eax,0x7b1c5998
  41ebcc:	mov    ah,0x3c
  41ebce:	jge    0x41ec01
  41ebd0:	mov    ah,0xed
  41ebd2:	pop    ds
  41ebd3:	arpl   WORD PTR [edi+0x1e],bx
  41ebd6:	adc    dl,BYTE PTR ds:0x4c8149bc
  41ebdc:	aad    0xe9
  41ebde:	out    dx,eax
  41ebdf:	ror    DWORD PTR [eax+0x10f54a82],0x3c
  41ebe6:	jle    0x41ebe5
  41ebe8:	mov    ds:0xd3276dab,al
  41ebed:	pop    ecx
  41ebee:	push   ecx
  41ebef:	(bad)  
  41ebf0:	or     eax,0x3a68a45e
  41ebf5:	stos   DWORD PTR es:[edi],eax
  41ebf6:	test   al,0xda
  41ebf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebf9:	xchg   edx,eax
  41ebfa:	mov    ebp,gs
  41ebfc:	or     cl,BYTE PTR [edx-0x25]
  41ebff:	mov    al,0xe3
  41ec01:	fist   WORD PTR [eax-0x47]
  41ec04:	mov    bl,0x33
  41ec06:	xor    eax,0x707163eb
  41ec0b:	pushf  
  41ec0c:	aam    0x43
  41ec0e:	out    dx,eax
  41ec0f:	mov    dh,0x8d
  41ec11:	sub    eax,0x676ed508
  41ec16:	cmp    eax,0x6fac7a0
  41ec1b:	adc    esi,DWORD PTR [ebx+0x79406ac]
  41ec21:	jle    0x41ebbe
  41ec23:	and    BYTE PTR [eax-0x1a],ah
  41ec26:	mov    esi,es
  41ec28:	leave  
  41ec29:	in     eax,dx
  41ec2a:	and    dh,BYTE PTR [ecx+esi*2+0x5c3cf08e]
  41ec31:	cli    
  41ec32:	aam    0x2e
  41ec34:	ins    BYTE PTR es:[edi],dx
  41ec35:	jae    0x41ec7f
  41ec37:	push   edx
  41ec38:	xchg   edi,eax
  41ec39:	ins    BYTE PTR es:[edi],dx
  41ec3a:	mov    dl,0xce
  41ec3c:	pop    ebx
  41ec3d:	fdivr  st,st(5)
  41ec3f:	xlat   BYTE PTR ds:[ebx]
  41ec40:	inc    ebx
  41ec41:	stc    
  41ec42:	test   eax,0x74218a5b
  41ec47:	cwde   
  41ec48:	and    al,BYTE PTR [ebx-0x6b]
  41ec4b:	sbb    al,0x60
  41ec4d:	gs ss push ecx
  41ec50:	fistp  WORD PTR [ebp+0x7af1963d]
  41ec56:	xlat   BYTE PTR ds:[ebx]
  41ec57:	dec    esi
  41ec58:	daa    
  41ec59:	sbb    bh,BYTE PTR [edx]
  41ec5b:	push   ebp
  41ec5c:	mov    BYTE PTR [edi+eiz*8+0x199bbd39],dl
  41ec63:	cmp    eax,0xb755cad9
  41ec68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec69:	fdivp  st(7),st
  41ec6b:	lods   eax,DWORD PTR ds:[esi]
  41ec6c:	jp     0x41ecb2
  41ec6e:	enter  0xe7d4,0x7c
  41ec72:	outs   dx,BYTE PTR ds:[esi]
  41ec73:	inc    ecx
  41ec74:	dec    ebp
  41ec75:	(bad)  
  41ec76:	les    edi,FWORD PTR [edx]
  41ec78:	ss and al,0xf
  41ec7c:	fxch   st(7)
  41ec7e:	je     0x41ecca
  41ec80:	cmp    BYTE PTR [eax+0x78],dl
  41ec83:	xchg   ch,al
  41ec85:	ret    
  41ec86:	mov    ebp,0xaff6db68
  41ec8b:	mov    bl,0x36
  41ec8d:	pushf  
  41ec8e:	popf   
  41ec8f:	(bad)  
  41ec90:	sbb    edx,DWORD PTR [ecx]
  41ec92:	xchg   ebp,eax
  41ec93:	ins    BYTE PTR es:[edi],dx
  41ec94:	sub    eax,0x2f6c2c08
  41ec99:	mov    eax,0xa8db5f53
  41ec9e:	lods   eax,DWORD PTR ds:[esi]
  41ec9f:	leave  
  41eca0:	iret   
  41eca1:	adc    bl,BYTE PTR [esi+esi*2]
  41eca4:	mov    esi,0xf57fcae6
  41eca9:	fadd   st,st(3)
  41ecab:	addr16 dec ecx
  41ecad:	pushf  
  41ecae:	push   esi
  41ecaf:	outs   dx,BYTE PTR ds:[esi]
  41ecb0:	mov    edi,0x93c6b12e
  41ecb5:	sbb    al,0x73
  41ecb7:	cld    
  41ecb8:	sbb    eax,eax
  41ecba:	inc    edi
  41ecbb:	ret    0x2fb5
  41ecbe:	xchg   ebp,ebp
  41ecc0:	add    ebp,DWORD PTR [edi]
  41ecc2:	test   al,0x40
  41ecc4:	retf   
  41ecc5:	jbe    0x41ecef
  41ecc7:	xchg   BYTE PTR [ebx+0x64],dl
  41ecca:	ret    0xb352
  41eccd:	push   ebp
  41ecce:	pop    ecx
  41eccf:	daa    
  41ecd0:	daa    
  41ecd1:	nop    DWORD PTR [ebx+0x5d]
  41ecd5:	int    0x16
  41ecd7:	mov    DWORD PTR [esi+ebx*2+0x2c29c655],edx
  41ecde:	mov    esi,0xbefa8e92
  41ece3:	mov    ds:0x93fe81ea,eax
  41ece8:	stos   BYTE PTR es:[edi],al
  41ece9:	retf   0x96d3
  41ecec:	pushf  
  41eced:	bound  edx,QWORD PTR [edi+edx*1+0x6]
  41ecf1:	bound  eax,QWORD PTR [ecx-0x69119804]
  41ecf7:	pop    ss
  41ecf8:	aaa    
  41ecf9:	adc    cl,BYTE PTR [ecx+0x4b04f38b]
  41ecff:	adc    al,0xe7
  41ed01:	mov    eax,0x4f3cfc46
  41ed06:	cmp    BYTE PTR [ebx+0x78],bh
  41ed09:	pop    edx
  41ed0a:	mov    dh,0x3f
  41ed0c:	jecxz  0x41ed67
  41ed0e:	cmp    dl,BYTE PTR [ecx]
  41ed10:	repz enter 0x15fd,0x7c
  41ed15:	test   BYTE PTR [ebp+0x5c],0xf2
  41ed19:	lock mov dh,0xcb
  41ed1c:	in     eax,0x7e
  41ed1e:	bound  ebp,QWORD PTR [ecx]
  41ed20:	jle    0x41ed3f
  41ed22:	push   cs
  41ed23:	mov    al,0xb9
  41ed25:	pop    ds
  41ed26:	jnp    0x41ed4d
  41ed28:	xchg   DWORD PTR [edx+0x43],eax
  41ed2b:	push   ecx
  41ed2c:	mov    bh,0xec
  41ed2e:	cmp    edx,DWORD PTR [ebp+0x6a]
  41ed31:	jbe    0x41ed2b
  41ed33:	inc    ebp
  41ed34:	mov    al,BYTE PTR [edi]
  41ed36:	loope  0x41ece9
  41ed38:	ins    BYTE PTR es:[edi],dx
  41ed39:	pop    ebx
  41ed3a:	sar    BYTE PTR [eax+0x5c],1
  41ed3d:	dec    esp
  41ed3e:	test   eax,0x3eecbe51
  41ed43:	lock add ch,BYTE PTR cs:[esi-0x11ae7b51]
  41ed4b:	mov    ds:0xc601da76,eax
  41ed50:	repz pop esp
  41ed52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed53:	ret    
  41ed54:	es out 0x82,al
  41ed57:	pushf  
  41ed58:	dec    ebx
  41ed59:	dec    eax
  41ed5a:	ss jecxz 0x41ed12
  41ed5d:	(bad)  
  41ed5e:	sbb    DWORD PTR [eax],esi
  41ed60:	mov    ebx,0xac99e73c
  41ed65:	pop    eax
  41ed66:	dec    ecx
  41ed67:	mov    es,eax
  41ed69:	inc    ebp
  41ed6a:	and    al,0xfe
  41ed6c:	rol    BYTE PTR [esi-0x503b4b2a],0x85
  41ed73:	mov    edx,cs
  41ed75:	push   esi
  41ed76:	xchg   esi,eax
  41ed77:	jmp    0xed974db4
  41ed7c:	jl     0x41ede4
  41ed7e:	iret   
  41ed7f:	cmp    eax,0xf00cd58f
  41ed84:	pop    eax
  41ed85:	xchg   BYTE PTR [esi],cl
  41ed87:	push   edi
  41ed88:	fwait
  41ed89:	out    0xb,al
  41ed8b:	pop    eax
  41ed8c:	push   cs
  41ed8d:	push   edx
  41ed8e:	jle    0x41ed73
  41ed90:	mov    esi,0x5a398932
  41ed95:	ret    
  41ed96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed97:	daa    
  41ed98:	popf   
  41ed99:	adc    ecx,DWORD PTR [ecx-0x3c]
  41ed9c:	dec    esi
  41ed9d:	retf   
  41ed9e:	mov    eax,0x148aa899
  41eda3:	imul   ah
  41eda5:	sbb    al,0xc5
  41eda7:	mov    bl,0xfd
  41eda9:	jbe    0x41ed5a
  41edab:	icebp  
  41edac:	mov    edi,DWORD PTR [ebp-0x60]
  41edaf:	adc    al,0x98
  41edb1:	and    BYTE PTR [eax-0x24],dl
  41edb4:	mov    dl,0x9a
  41edb6:	mov    edx,0xece9c638
  41edbb:	add    edi,esi
  41edbd:	pop    ss
  41edbe:	and    BYTE PTR [edx],bh
  41edc0:	dec    edx
  41edc1:	ror    edx,0x9d
  41edc4:	pop    es
  41edc5:	add    al,0x22
  41edc7:	jo     0x41ed7c
  41edc9:	(bad)  
  41edca:	mov    esp,0xc9b29ca6
  41edcf:	aam    0x73
  41edd1:	mov    dl,0xb9
  41edd3:	mov    WORD PTR [esi-0x39e6360f],cs
  41edd9:	xchg   ebx,eax
  41edda:	push   esp
  41eddb:	cmp    BYTE PTR [esi],al
  41eddd:	cmp    esi,DWORD PTR [ebp-0xbe2386b]
  41ede3:	inc    ebx
  41ede4:	rol    esp,cl
  41ede6:	mov    WORD PTR [edi],fs
  41ede8:	test   eax,0xc415d99e
  41eded:	scas   al,BYTE PTR es:[edi]
  41edee:	mov    esp,0xd39157be
  41edf3:	dec    esp
  41edf4:	add    dl,dh
  41edf6:	fsub   QWORD PTR [edx-0x21]
  41edf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edfa:	dec    esp
  41edfb:	out    dx,al
  41edfc:	dec    esp
  41edfd:	push   ebx
  41edfe:	les    edx,FWORD PTR [ebx+0x3d7fe0f2]
  41ee04:	pop    esi
  41ee05:	cmp    DWORD PTR [esi+0x1b71a92a],ebx
  41ee0b:	add    ebp,edx
  41ee0d:	addr16 cmp ecx,ecx
  41ee10:	js     0x41ee73
  41ee12:	mov    dl,0x81
  41ee14:	inc    esp
  41ee15:	jg     0x41ed99
  41ee17:	sti    
  41ee18:	lock shl BYTE PTR [ecx],cl
  41ee1b:	push   esp
  41ee1c:	retf   
  41ee1d:	sbb    eax,0x8344c824
  41ee22:	scas   eax,DWORD PTR es:[edi]
  41ee23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee24:	mov    ebp,0xaa912a0c
  41ee29:	pop    es
  41ee2a:	mov    dl,0xb6
  41ee2c:	jg     0x41edb8
  41ee2e:	jne    0x41ee12
  41ee30:	mov    ah,0xc0
  41ee32:	dec    edi
  41ee33:	add    DWORD PTR [esp+ecx*4-0x34206df6],edx
  41ee3a:	adc    ah,dh
  41ee3c:	lahf   
  41ee3d:	mov    bl,BYTE PTR [ecx+0x1876c87]
  41ee43:	jecxz  0x41eeb8
  41ee45:	xor    DWORD PTR [edx+0x1b3beb90],esp
  41ee4b:	add    DWORD PTR [ecx-0x7da33d44],esi
  41ee51:	daa    
  41ee52:	jp     0x41ee9d
  41ee54:	cwde   
  41ee55:	fwait
  41ee56:	jg     0x41ee18
  41ee58:	cdq    
  41ee59:	jns    0x41edfb
  41ee5b:	xchg   ebx,eax
  41ee5c:	mov    al,ds:0x1093b3c1
  41ee61:	iret   
  41ee62:	mov    gs,WORD PTR [ebp+0x7]
  41ee65:	adc    al,0x35
  41ee67:	or     dh,al
  41ee69:	jmp    0x41edf9
  41ee6b:	mov    es,WORD PTR [edi]
  41ee6d:	sub    ecx,DWORD PTR [ebp-0x2c7c5510]
  41ee73:	lock xchg edx,eax
  41ee75:	test   DWORD PTR [edi+eiz*1-0x4f],eax
  41ee79:	into   
  41ee7a:	mov    ds:0x8656ba21,al
  41ee7f:	aam    0x25
  41ee81:	test   BYTE PTR [ecx+esi*4],al
  41ee84:	inc    ebp
  41ee85:	stos   DWORD PTR es:[edi],eax
  41ee86:	mov    ebx,0x1f1704b4
  41ee8b:	adc    DWORD PTR [esi-0x17],0xc4d958df
  41ee92:	push   0x2f
  41ee94:	scas   al,BYTE PTR es:[edi]
  41ee95:	xchg   ebx,eax
  41ee96:	sub    DWORD PTR [ebx-0x1e5a33ae],esp
  41ee9c:	push   esp
  41ee9d:	lds    edx,FWORD PTR [ebp-0x183046b4]
  41eea3:	test   edi,ebx
  41eea5:	mov    edx,0x7c563272
  41eeaa:	jo     0x41ee85
  41eeac:	ins    BYTE PTR es:[edi],dx
  41eead:	jp     0x41ef05
  41eeaf:	inc    ebp
  41eeb0:	pop    edx
  41eeb1:	cmp    BYTE PTR [edx+0x15ddf08e],ch
  41eeb7:	dec    ebp
  41eeb8:	js     0x41eec9
  41eeba:	jmp    0x54ea:0xb61170ed
  41eec1:	leave  
  41eec2:	add    al,0x8c
  41eec4:	jbe    0x41ef33
  41eec6:	outs   dx,DWORD PTR ds:[esi]
  41eec7:	jecxz  0x41eea4
  41eec9:	xlat   BYTE PTR ds:[ebx]
  41eeca:	(bad)  
  41eecb:	mov    dl,0xe
  41eecd:	xchg   esp,eax
  41eece:	or     edx,DWORD PTR [ecx+eax*8+0x2d]
  41eed2:	jecxz  0x41eee9
  41eed4:	call   0x20e4:0x201a33b7
  41eedb:	retf   0x180
  41eede:	inc    ebp
  41eedf:	mov    eax,0x86b0a508
  41eee4:	out    dx,al
  41eee5:	inc    ebx
  41eee6:	retf   0x936d
  41eee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeea:	mov    dh,0xd2
  41eeec:	add    eax,ecx
  41eeee:	dec    edx
  41eeef:	std    
  41eef0:	xor    al,0x9d
  41eef2:	cld    
  41eef3:	and    bl,BYTE PTR [ebx+0x61]
  41eef6:	fsubr  DWORD PTR [eax+0x227868fb]
  41eefc:	fwait
  41eefd:	jge    0x41ef3f
  41eeff:	test   ebp,0x56cee74a
  41ef05:	push   ebx
  41ef06:	(bad)  
  41ef07:	jp     0x41eead
  41ef09:	mov    ecx,DWORD PTR [edi]
  41ef0b:	pop    edx
  41ef0c:	hlt    
  41ef0d:	into   
  41ef0e:	mov    ecx,fs
  41ef10:	adc    ebp,DWORD PTR [ebx-0x37]
  41ef13:	not    DWORD PTR [esi+0x12]
  41ef16:	inc    eax
  41ef17:	inc    ebp
  41ef18:	cmp    dl,BYTE PTR [ecx+0x8306ed2]
  41ef1e:	test   esi,edx
  41ef20:	rcl    BYTE PTR [ebp+0x39],cl
  41ef23:	test   DWORD PTR [edx-0x2e],ecx
  41ef26:	mov    ch,0x55
  41ef28:	ds jno 0x41eeea
  41ef2b:	dec    edi
  41ef2c:	into   
  41ef2d:	cmp    edi,DWORD PTR [edx]
  41ef2f:	cli    
  41ef30:	pop    esp
  41ef31:	add    esi,DWORD PTR [ecx-0x62319c21]
  41ef37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef38:	or     eax,0xbca2f6c1
  41ef3d:	pop    ds
  41ef3e:	iret   
  41ef3f:	dec    edx
  41ef40:	aad    0x3f
  41ef42:	pushf  
  41ef43:	out    0x6e,al
  41ef45:	push   edx
  41ef46:	mov    BYTE PTR [ebx+eax*1],0x50
  41ef4a:	cld    
  41ef4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef4c:	adc    DWORD PTR [ebx-0x2e],ecx
  41ef4f:	xchg   BYTE PTR [esi+0x3d],bh
  41ef52:	cmp    al,0xba
  41ef54:	(bad)  
  41ef56:	sub    BYTE PTR [esi+0x21],bl
  41ef59:	fisubr DWORD PTR [edi]
  41ef5b:	inc    BYTE PTR [edi+edx*8+0x70217715]
  41ef62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef63:	jecxz  0x41ef8f
  41ef65:	push   edx
  41ef66:	ins    BYTE PTR es:[edi],dx
  41ef67:	push   ds
  41ef68:	mov    eax,ds:0xf637ddff
  41ef6d:	sub    BYTE PTR [ecx+0x5541e471],ah
  41ef73:	push   edx
  41ef74:	es scas al,BYTE PTR es:[edi]
  41ef76:	fisttp DWORD PTR [edx+edi*1+0x5da465b3]
  41ef7d:	jl     0x41ef54
  41ef7f:	les    edi,FWORD PTR [edx+esi*8]
  41ef82:	mov    dl,0xdf
  41ef84:	scas   al,BYTE PTR es:[edi]
  41ef85:	pop    es
  41ef86:	inc    esp
  41ef87:	xchg   DWORD PTR [eax],edx
  41ef89:	sub    edx,esi
  41ef8b:	(bad)
  41ef8e:	call   FWORD PTR [ecx-0x3e16924d]
  41ef94:	inc    esp
  41ef95:	dec    ebp
  41ef96:	add    al,0x45
  41ef98:	fstp   st(6)
  41ef9a:	cld    
  41ef9b:	push   esp
  41ef9c:	cmc    
  41ef9d:	xor    edx,DWORD PTR [ecx]
  41ef9f:	jmp    0xf05451ce
  41efa4:	outs   dx,BYTE PTR ds:[esi]
  41efa5:	mov    ebx,0xc279877
  41efaa:	cdq    
  41efab:	and    BYTE PTR [ebx+0x3c3ff84a],bh
  41efb1:	or     al,0x88
  41efb3:	nop
  41efb4:	loop   0x41efc1
  41efb6:	iret   
  41efb7:	jnp    0x41f00a
  41efb9:	sbb    DWORD PTR fs:[eax+esi*2],esp
  41efbd:	mov    ebx,ebp
  41efbf:	mov    edx,0x829e934e
  41efc4:	mov    esi,0x2bc4ef34
  41efc9:	jmp    0x9403:0xadf366ad
  41efd0:	in     eax,0xfa
  41efd2:	(bad)  
  41efd3:	(bad)  [ebx-0x47]
  41efd6:	repz mov al,0x12
  41efd9:	mov    al,0x25
  41efdb:	int3   
  41efdc:	or     esp,esp
  41efde:	dec    esi
  41efdf:	mov    edi,0x1da81961
  41efe4:	cmp    DWORD PTR [esi+0x4f],ecx
  41efe7:	inc    esi
  41efe8:	push   ecx
  41efe9:	xlat   BYTE PTR ds:[ebx]
  41efea:	loop   0x41ef7c
  41efec:	mov    ch,0xcd
  41efee:	push   cs
  41efef:	test   BYTE PTR ds:0x552d7016,cl
  41eff5:	inc    esp
  41eff6:	das    
  41eff7:	inc    esi
  41eff8:	loope  0x41ef8a
  41effa:	mov    WORD PTR [edi+0x5a],es
  41effd:	push   ebp
  41effe:	push   0x1dbf2230
  41f003:	xor    ch,BYTE PTR [ebx-0x17]
  41f006:	mov    dh,0xa6
  41f008:	and    esi,DWORD PTR [edx]
  41f00a:	cli    
  41f00b:	and    ebx,DWORD PTR [edx-0x1b615cb5]
  41f011:	rcr    BYTE PTR [edi+0x28],0x18
  41f015:	sbb    BYTE PTR [edi+0x43],bl
  41f018:	pop    eax
  41f019:	mov    bl,cl
  41f01b:	pop    ebx
  41f01c:	inc    edx
  41f01d:	les    ebx,FWORD PTR [ebx+0x12be1129]
  41f023:	dec    eax
  41f024:	mov    dl,0xa6
  41f026:	outs   dx,DWORD PTR fs:[esi]
  41f028:	push   esp
  41f029:	xor    eax,0xc444f623
  41f02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f02f:	push   edx
  41f030:	jp     0x41f030
  41f032:	fstp   QWORD PTR [ebx]
  41f034:	push   edx
  41f035:	pop    edx
  41f036:	retf   
  41f037:	pushf  
  41f038:	mov    al,ds:0x85721867
  41f03d:	sbb    DWORD PTR [ebp-0x5d],0x50879da
  41f044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f045:	jae    0x41efd2
  41f047:	and    bh,BYTE PTR [edx]
  41f049:	pop    ecx
  41f04a:	adc    DWORD PTR ss:[ecx-0x41258afd],esi
  41f051:	mov    esp,es
  41f053:	xor    bh,al
  41f055:	xor    BYTE PTR [ecx],0xc1
  41f058:	sbb    bl,BYTE PTR [edx-0x1a8ace16]
  41f05e:	and    DWORD PTR [esp+eiz*8-0x28],esp
  41f062:	sbb    ecx,DWORD PTR [ecx]
  41f064:	std    
  41f065:	fnstenv [edx]
  41f067:	lods   eax,DWORD PTR ds:[esi]
  41f068:	push   0x956e23de
  41f06d:	xor    DWORD PTR [ecx],0xcbeab68a
  41f073:	jne    0x41f0e7
  41f075:	shl    DWORD PTR [edi],1
  41f077:	loopne 0x41f0d8
  41f079:	inc    esi
  41f07a:	push   ecx
  41f07b:	jne    0x41f017
  41f07d:	push   ss
  41f07e:	icebp  
  41f07f:	js     0x41f0c8
  41f081:	out    0x89,al
  41f083:	mov    db0,ebp
  41f086:	clc    
  41f087:	mov    eax,0xf050a504
  41f08c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f08d:	ins    DWORD PTR es:[edi],dx
  41f08e:	fcmovu st,st(4)
  41f090:	imul   esi,DWORD PTR [esi-0x34900621],0x7678ad35
  41f09a:	data16 sti 
  41f09c:	aad    0x63
  41f09e:	pop    eax
  41f09f:	int3   
  41f0a0:	adc    dh,ch
  41f0a2:	or     eax,0xed26588a
  41f0a7:	clc    
  41f0a8:	fdiv   QWORD PTR [eax]
  41f0aa:	pop    es
  41f0ab:	xchg   edi,eax
  41f0ac:	sbb    al,0x50
  41f0ae:	mov    ebp,0xe06ababe
  41f0b3:	mov    ds:0x91ec9d88,al
  41f0b8:	or     BYTE PTR [esi+eiz*8],0xdd
  41f0bc:	adc    DWORD PTR [edx+0x0],0x64fa26e
  41f0c3:	lock dec ch
  41f0c6:	out    0xa6,al
  41f0c8:	xor    DWORD PTR [ebp+0x27],esp
  41f0cb:	scas   eax,DWORD PTR es:[edi]
  41f0cc:	mov    cl,0x17
  41f0ce:	fst    QWORD PTR [ebx+0x14756539]
  41f0d4:	dec    esi
  41f0d5:	not    DWORD PTR [eax-0x26]
  41f0d8:	shl    BYTE PTR [ecx+0x0],0x8e
  41f0dc:	push   ebp
  41f0dd:	push   ebp
  41f0de:	pushf  
  41f0df:	inc    edx
  41f0e0:	dec    edi
  41f0e1:	pop    es
  41f0e2:	add    DWORD PTR [edx+0x87339c],ebp
  41f0e8:	shl    dh,cl
  41f0ea:	or     DWORD PTR [esi-0x34],0x7e
  41f0ee:	pusha  
  41f0ef:	jno    0x41f125
  41f0f1:	outs   dx,BYTE PTR ds:[esi]
  41f0f2:	mov    ecx,0xa274ff80
  41f0f7:	mov    esi,0xb290eded
  41f0fc:	push   0xfa97567a
  41f101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f103:	xchg   edi,eax
  41f104:	std    
  41f105:	mov    al,0x76
  41f107:	xor    edx,esi
  41f109:	nop
  41f10a:	xchg   edi,eax
  41f10b:	ins    DWORD PTR es:[edi],dx
  41f10c:	(bad)  
  41f10e:	cmc    
  41f10f:	jno    0x41f0cb
  41f111:	fmul   DWORD PTR [eax+0x3fede766]
  41f117:	pop    edi
  41f118:	xchg   edi,eax
  41f119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f11a:	jne    0x41f19b
  41f11c:	mov    ecx,0x49f312c2
  41f121:	inc    ebp
  41f122:	adc    dl,bl
  41f124:	mov    ebx,0x1599a7e1
  41f129:	aad    0x6
  41f12b:	xchg   ecx,eax
  41f12c:	xchg   edi,eax
  41f12d:	push   ds
  41f12e:	mov    ebx,0x3c1236b4
  41f133:	ret    0xa7b7
  41f136:	mov    DWORD PTR [ebp-0x601cf0aa],ebx
  41f13c:	pop    eax
  41f13d:	addr16 jae 0x41f0d2
  41f140:	stc    
  41f141:	pop    eax
  41f142:	call   0x7790:0x1ed3bf72
  41f149:	out    dx,eax
  41f14a:	adc    cl,BYTE PTR [edi-0x266c24c8]
  41f150:	dec    esi
  41f151:	mov    al,BYTE PTR [esi]
  41f153:	mov    dl,0x81
  41f155:	cmp    al,0xa8
  41f157:	(bad)  
  41f158:	pop    ebp
  41f159:	fstp   QWORD PTR [ebp+0xab6eb7b]
  41f15f:	sbb    ecx,ecx
  41f161:	mov    bh,0xc7
  41f163:	and    DWORD PTR [edx-0x182b63ac],esp
  41f169:	mov    edx,0x188c8ac2
  41f16e:	stc    
  41f16f:	fucomp st(4)
  41f171:	in     al,0x15
  41f173:	hlt    
  41f174:	lods   eax,DWORD PTR ds:[esi]
  41f175:	pop    esp
  41f176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f177:	imul   ebp,DWORD PTR [edi-0x33],0x29
  41f17b:	addr16 std 
  41f17d:	pushf  
  41f17e:	mov    cl,cl
  41f180:	out    0xff,eax
  41f182:	call   0x185:0x18d66262
  41f189:	sub    dh,dh
  41f18b:	pop    edi
  41f18c:	les    ecx,FWORD PTR [edi-0x9d8a6af]
  41f192:	mov    esi,0xfbe81439
  41f197:	cdq    
  41f198:	bound  esp,QWORD PTR [ebx-0x43]
  41f19b:	jmp    0x77b0:0x6f05e35
  41f1a2:	aas    
  41f1a3:	xchg   edi,eax
  41f1a4:	sbb    ch,dl
  41f1a6:	repz adc esp,DWORD PTR [eax]
  41f1a9:	xchg   edx,eax
  41f1aa:	push   edi
  41f1ab:	std    
  41f1ac:	pop    eax
  41f1ad:	cmp    ch,BYTE PTR [ebx-0x687f9cdd]
  41f1b3:	dec    edx
  41f1b4:	or     eax,0xe4884143
  41f1b9:	jmp    0x90aa0894
  41f1be:	pushf  
  41f1bf:	pop    esi
  41f1c0:	add    DWORD PTR [eax+0x6baa984c],0xffffffc8
  41f1c7:	adc    eax,0x270650a3
  41f1cc:	outs   dx,BYTE PTR ds:[esi]
  41f1cd:	cmp    al,BYTE PTR [edx]
  41f1cf:	(bad)  
  41f1d1:	cwde   
  41f1d2:	dec    ecx
  41f1d3:	xchg   ecx,eax
  41f1d4:	fwait
  41f1d5:	cdq    
  41f1d6:	jnp    0x41f1a2
  41f1d8:	rcl    BYTE PTR [eax],cl
  41f1da:	(bad)  
  41f1dc:	cdq    
  41f1dd:	mov    bh,bh
  41f1df:	int3   
  41f1e0:	dec    edx
  41f1e1:	rcr    BYTE PTR [ebx-0x743b33a4],0xa5
  41f1e8:	push   edx
  41f1e9:	stos   DWORD PTR es:[edi],eax
  41f1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1eb:	pop    eax
  41f1ec:	or     al,0x2e
  41f1ee:	xor    eax,0xad32d2bb
  41f1f3:	and    eax,0xf4957396
  41f1f8:	xchg   ebp,eax
  41f1f9:	repnz pop esi
  41f1fb:	aam    0xdf
  41f1fd:	inc    edi
  41f1fe:	inc    eax
  41f1ff:	fdivrp st(2),st
  41f201:	popa   
  41f202:	add    ah,ah
  41f204:	jmp    0x2d4b:0xf071f540
  41f20b:	mov    ebp,0xfc5a9707
  41f210:	scas   al,BYTE PTR es:[edi]
  41f211:	inc    esi
  41f212:	push   ebp
  41f213:	lea    ecx,[edx]
  41f215:	adc    cl,BYTE PTR [edi-0x2e63f321]
  41f21b:	outs   dx,DWORD PTR ds:[esi]
  41f21c:	cpuid  
  41f21e:	cmp    dh,BYTE PTR [ebx]
  41f220:	fmul   QWORD PTR [ecx]
  41f222:	jbe    0x41f1a6
  41f224:	add    eax,0xd53bf431
  41f229:	jle    0x41f250
  41f22b:	loopne 0x41f1fa
  41f22d:	sti    
  41f22e:	or     al,0x80
  41f230:	xchg   esi,eax
  41f231:	ds push eax
  41f233:	push   edi
  41f234:	mov    ah,0x8c
  41f236:	dec    ecx
  41f237:	pop    ebp
  41f238:	(bad)  
  41f239:	adc    BYTE PTR [ecx+0x4d],bl
  41f23c:	icebp  
  41f23d:	jl     0x41f1dd
  41f23f:	dec    esi
  41f240:	mov    ds:0x64a453c2,eax
  41f245:	into   
  41f246:	or     al,0x7c
  41f248:	mov    ebx,0x6004806c
  41f24d:	sbb    esi,DWORD PTR [ebp+ecx*2-0x59434d21]
  41f254:	in     eax,dx
  41f255:	xor    DWORD PTR [esi],edi
  41f257:	pushf  
  41f258:	mov    ds,ebp
  41f25a:	aaa    
  41f25b:	hlt    
  41f25c:	in     al,dx
  41f25d:	adc    ch,BYTE PTR [edi-0x113eb7be]
  41f263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f264:	pop    ds
  41f265:	std    
  41f266:	adc    ecx,DWORD PTR [ecx+edi*2-0x7a]
  41f26a:	dec    esp
  41f26b:	add    al,bl
  41f26d:	std    
  41f26e:	cmp    dl,dh
  41f270:	jno    0x41f235
  41f272:	outs   dx,DWORD PTR ds:[esi]
  41f273:	or     BYTE PTR [edi-0x652a7b0],dh
  41f279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f27a:	pushf  
  41f27b:	push   ebp
  41f27c:	jp     0x41f298
  41f27e:	cmp    BYTE PTR [ebx],0xa2
  41f281:	xor    bh,BYTE PTR [eax-0x4b6e056e]
  41f287:	scas   eax,DWORD PTR es:[edi]
  41f288:	outs   dx,BYTE PTR ds:[esi]
  41f289:	fcomi  st,st(5)
  41f28b:	loop   0x41f29d
  41f28d:	mov    bh,0xac
  41f28f:	xchg   ebx,eax
  41f290:	ror    esp,1
  41f292:	add    eax,0x5c268df5
  41f297:	jge    0x41f246
  41f299:	add    eax,0xd4d6e0d4
  41f29e:	xor    eax,0x91499b02
  41f2a3:	mov    ch,0xf9
  41f2a5:	or     BYTE PTR [esi+0x14],0x8b
  41f2a9:	inc    ebp
  41f2aa:	fiadd  DWORD PTR [eax]
  41f2ac:	fstp   st(7)
  41f2ae:	mov    dl,0x8b
  41f2b0:	push   esi
  41f2b1:	jmp    0x654b:0xdf3a567f
  41f2b8:	or     al,0xcb
  41f2ba:	inc    esp
  41f2bb:	rcpps  xmm6,XMMWORD PTR [edx+0x2]
  41f2bf:	sub    bh,dh
  41f2c1:	out    0x81,eax
  41f2c3:	push   es
  41f2c4:	addr16 nop
  41f2c6:	add    ah,BYTE PTR [edi]
  41f2c8:	in     al,0x85
  41f2ca:	clc    
  41f2cb:	add    ebp,ebp
  41f2cd:	cmc    
  41f2ce:	xcrypt-ctr (bad)
  41f2cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d0:	fwait
  41f2d1:	add    eax,DWORD PTR [ebx]
  41f2d3:	pop    edx
  41f2d4:	push   ebp
  41f2d5:	push   edi
  41f2d6:	inc    ebx
  41f2d7:	loopne 0x41f334
  41f2d9:	inc    edx
  41f2da:	pop    ds
  41f2db:	test   ecx,0xd9b7a519
  41f2e1:	retf   
  41f2e2:	rcr    ch,0x7d
  41f2e5:	mov    bh,0xf1
  41f2e7:	inc    ecx
  41f2e8:	sub    al,0x58
  41f2ea:	in     eax,0xf7
  41f2ec:	or     dl,BYTE PTR [ebp+0x56]
  41f2ef:	mov    ebp,0xa48653fa
  41f2f4:	inc    esp
  41f2f5:	mov    BYTE PTR [edx],dh
  41f2f7:	xchg   ebp,eax
  41f2f8:	add    dh,bl
  41f2fa:	add    DWORD PTR [esi-0x42e66e],ecx
  41f300:	jo     0x41f323
  41f302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f303:	push   ecx
  41f304:	inc    DWORD PTR [edx-0x2703f9ac]
  41f30a:	lds    esp,FWORD PTR [edi+eiz*1-0x1b808edc]
  41f311:	inc    esi
  41f312:	add    BYTE PTR [edx+0x5fb356ec],ch
  41f318:	out    dx,eax
  41f319:	scas   al,BYTE PTR es:[edi]
  41f31a:	and    eax,0x3e4734a1
  41f31f:	in     eax,dx
  41f320:	jmp    0x24b5:0xa854c701
  41f327:	jae    0x41f37d
  41f329:	std    
  41f32a:	lods   al,BYTE PTR ds:[esi]
  41f32b:	ds pushf 
  41f32d:	mov    al,ds:0xdd4bfffe
  41f332:	cs dec esp
  41f334:	sbb    al,0xff
  41f336:	cs int3 
  41f338:	punpckhdq mm4,mm1
  41f33b:	(bad)  
  41f33c:	jge    0x41f354
  41f33e:	cmp    BYTE PTR [ecx],al
  41f340:	lahf   
  41f341:	mov    edi,0x81f14024
  41f346:	hlt    
  41f347:	xor    DWORD PTR [ecx+0x28c65efd],ebp
  41f34d:	or     al,0xc9
  41f34f:	jno    0x41f2dd
  41f351:	push   esi
  41f352:	and    eax,0x161a3b3f
  41f357:	js     0x41f386
  41f359:	bound  ecx,QWORD PTR [eax-0x4c]
  41f35c:	daa    
  41f35d:	jge    0x41f381
  41f35f:	repz inc edx
  41f361:	add    DWORD PTR [ebp+0x62],ebx
  41f364:	scas   al,BYTE PTR es:[edi]
  41f365:	add    dl,ch
  41f367:	rcr    dh,cl
  41f369:	pop    ebp
  41f36a:	call   FWORD PTR [ecx+edx*8]
  41f36d:	sahf   
  41f36e:	std    
  41f36f:	mov    al,ds:0x89e07661
  41f374:	mov    ecx,0x4a5668c7
  41f379:	pop    esi
  41f37a:	jge    0x41f36e
  41f37c:	xchg   ebp,eax
  41f37d:	repz je 0x41f3f5
  41f380:	lods   eax,DWORD PTR ds:[esi]
  41f381:	mov    dh,BYTE PTR [eax+0x36]
  41f384:	icebp  
  41f385:	out    dx,al
  41f386:	mov    ch,BYTE PTR [edi]
  41f388:	xor    eax,0x250f048d
  41f38d:	cmp    al,0x33
  41f38f:	sbb    edi,esi
  41f391:	and    edi,DWORD PTR [ebx+eax*8+0x7477dcdf]
  41f398:	div    BYTE PTR [ebx+0x58cd064b]
  41f39e:	adc    esp,DWORD PTR [edi+0x5b695b7]
  41f3a4:	mov    ss,eax
  41f3a6:	ficomp WORD PTR [edx+0x31]
  41f3a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3aa:	cmp    DWORD PTR [edx],ebx
  41f3ac:	int    0xb0
  41f3ae:	popf   
  41f3af:	pop    eax
  41f3b0:	mov    ebp,0x18a1ec34
  41f3b5:	loop   0x41f418
  41f3b7:	xor    al,0x10
  41f3b9:	retf   
  41f3ba:	pop    edi
  41f3bb:	dec    eax
  41f3bc:	xchg   DWORD PTR [ecx],ecx
  41f3be:	rcl    BYTE PTR [edi-0x13],cl
  41f3c1:	dec    ecx
  41f3c2:	mov    edx,0x50c3a644
  41f3c7:	mov    ch,0x48
  41f3c9:	or     eax,0x8abe696d
  41f3ce:	pop    esi
  41f3cf:	add    bh,BYTE PTR [ecx]
  41f3d1:	dec    ebp
  41f3d2:	xchg   esi,eax
  41f3d3:	sti    
  41f3d4:	fcom   QWORD PTR ds:0x5ef6957c
  41f3da:	(bad)  
  41f3db:	in     al,0xa4
  41f3dd:	es xchg ecx,eax
  41f3df:	jae    0x41f3e8
  41f3e1:	lock jp 0x41f455
  41f3e4:	push   es
  41f3e5:	or     al,0xdb
  41f3e7:	lods   eax,DWORD PTR ds:[esi]
  41f3e8:	xor    eax,edi
  41f3ea:	mov    esp,0x91e8134b
  41f3ef:	enter  0xda13,0xf3
  41f3f3:	aad    0x9
  41f3f5:	pushf  
  41f3f6:	jp     0x41f38b
  41f3f8:	and    eax,0x2784a470
  41f3fd:	and    DWORD PTR [ecx],esi
  41f3ff:	sbb    edi,DWORD PTR [esi]
  41f401:	or     DWORD PTR [esi-0x1a],esi
  41f404:	jmp    0x8384a8dd
  41f409:	dec    esp
  41f40a:	inc    esp
  41f40b:	add    esp,eax
  41f40d:	loop   0x41f432
  41f40f:	lock cmp BYTE PTR [esi],bh
  41f412:	mov    ecx,0xbee6b0b2
  41f417:	fisttp QWORD PTR [eax]
  41f419:	cmc    
  41f41a:	jl     0x41f3f6
  41f41c:	jno    0x41f3c2
  41f41e:	out    0x5,eax
  41f420:	test   DWORD PTR [ebp-0x3014dde8],0xad2e30bc
  41f42a:	loop   0x41f3f8
  41f42c:	adc    eax,0xd8f213fd
  41f431:	ret    0xea18
  41f434:	add    dh,BYTE PTR [edi-0x61]
  41f437:	mov    dh,0x15
  41f439:	mov    eax,0x7aec04d7
  41f43e:	cmp    dl,BYTE PTR [ebx]
  41f440:	repnz sub al,0xf2
  41f443:	xor    al,0x6a
  41f445:	mov    ah,0x6c
  41f447:	dec    edx
  41f448:	sbb    eax,0x653879a6
  41f44d:	push   es
  41f44e:	ins    BYTE PTR es:[edi],dx
  41f44f:	jno    0x41f44f
  41f451:	push   0x3a
  41f453:	mov    DWORD PTR [esi],ebp
  41f455:	test   bh,cl
  41f457:	inc    esi
  41f458:	mov    ebx,ecx
  41f45a:	mov    edi,0x18413e0
  41f45f:	pop    edi
  41f460:	xchg   edi,eax
  41f461:	inc    ebp
  41f462:	push   edx
  41f463:	lahf   
  41f464:	push   0x4ce2b1f4
  41f469:	(bad)  
  41f46a:	scas   eax,DWORD PTR es:[edi]
  41f46b:	ret    0xfdb8
  41f46e:	fs jg  0x41f486
  41f471:	ret    0xd8f3
  41f474:	or     ax,0xb7a7
  41f478:	inc    ecx
  41f479:	push   cs
  41f47a:	mov    ebx,0x30aa1f8d
  41f47f:	mov    edi,0x38d361c3
  41f484:	stos   BYTE PTR es:[edi],al
  41f485:	test   al,0xad
  41f487:	sbb    eax,0x95ecd744
  41f48c:	adc    ah,BYTE PTR [esi-0x67]
  41f48f:	bound  ebx,QWORD PTR [esi]
  41f491:	in     al,dx
  41f492:	lahf   
  41f493:	jae    0x41f4a0
  41f495:	lods   eax,DWORD PTR ds:[esi]
  41f496:	push   edi
  41f497:	ret    
  41f498:	iret   
  41f499:	stos   DWORD PTR es:[edi],eax
  41f49a:	cmp    al,0x37
  41f49c:	arpl   WORD PTR [esi-0x21583fd5],sp
  41f4a2:	call   0x57cc:0x3d47dac0
  41f4a9:	fdivr  DWORD PTR [edi-0x1d]
  41f4ac:	shl    DWORD PTR [eax-0x7a21ec61],1
  41f4b2:	retf   0xb634
  41f4b5:	or     DWORD PTR [edi],ebx
  41f4b7:	inc    esi
  41f4b8:	push   es
  41f4b9:	in     eax,0x44
  41f4bb:	test   BYTE PTR [eax-0x59],dl
  41f4be:	sub    eax,0x97d93ad3
  41f4c3:	cld    
  41f4c4:	hlt    
  41f4c5:	mov    eax,0xfd2fad46
  41f4ca:	fisttp WORD PTR ds:0x67bed658
  41f4d0:	(bad)  
  41f4d1:	(bad)  [esi+0x9]
  41f4d4:	xchg   edx,eax
  41f4d5:	mov    al,0xef
  41f4d7:	adc    BYTE PTR [ecx+0xfed35da],bl
  41f4dd:	mov    ?,WORD PTR [edi-0xf]
  41f4e0:	(bad)  
  41f4e1:	xor    DWORD PTR [esi],esi
  41f4e3:	add    ch,cl
  41f4e5:	jg     0x41f4b1
  41f4e7:	cmp    eax,0x1ddbb569
  41f4ec:	idiv   bl
  41f4ee:	mov    eax,0xb6f8fff7
  41f4f3:	or     dh,al
  41f4f5:	ret    0xaa3a
  41f4f8:	jb     0x41f55c
  41f4fa:	imul   BYTE PTR [edi-0x8]
  41f4fd:	mov    edi,0x54265c44
  41f502:	out    dx,al
  41f503:	mov    bh,0xdc
  41f505:	out    0x8b,eax
  41f507:	inc    esi
  41f508:	std    
  41f509:	sbb    eax,0x5abf49af
  41f50e:	dec    BYTE PTR [ebx]
  41f510:	retf   
  41f511:	xor    ch,cl
  41f513:	jne    0x41f4e3
  41f515:	scas   eax,DWORD PTR es:[edi]
  41f516:	mov    cl,BYTE PTR [ebx]
  41f518:	fmul   DWORD PTR [esi-0x33]
  41f51c:	pop    esp
  41f51d:	dec    esi
  41f51e:	adc    al,BYTE PTR [edx+0x3e]
  41f521:	out    0x18,eax
  41f523:	fwait
  41f524:	pusha  
  41f525:	js     0x41f4fb
  41f527:	jmp    0x41f4fe
  41f529:	mov    esp,edi
  41f52b:	jge    0x41f526
  41f52d:	pop    ds
  41f52e:	mov    dh,0xed
  41f530:	repnz mov ch,0xc8
  41f533:	aaa    
  41f534:	cs jb  0x41f56e
  41f537:	ror    BYTE PTR ds:0x5ff58d94,1
  41f53d:	pop    ebp
  41f53e:	cmp    al,0x88
  41f540:	ror    DWORD PTR [esi-0x38804550],1
  41f546:	xchg   esp,eax
  41f547:	xor    eax,0x2c0e9365
  41f54c:	in     al,0x33
  41f54e:	sub    esi,DWORD PTR [eax-0x64e63253]
  41f554:	mov    ds:0xa80558d9,al
  41f559:	jg     0x41f549
  41f55b:	inc    esi
  41f55c:	in     eax,dx
  41f55d:	pop    edi
  41f55e:	ja     0x41f4fb
  41f560:	loop   0x41f56b
  41f562:	add    cl,bh
  41f564:	sahf   
  41f565:	sub    al,0xb5
  41f567:	ja     0x41f5af
  41f569:	sti    
  41f56a:	and    eax,0xb19c96d9
  41f56f:	mov    bl,dh
  41f571:	ja     0x41f578
  41f573:	dec    esp
  41f574:	loopne 0x41f500
  41f576:	fcom   QWORD PTR [esi+edx*4+0x30bacefa]
  41f57d:	seto   bh
  41f580:	mov    dh,0x44
  41f582:	(bad)  
  41f583:	repz popa 
  41f585:	push   ebx
  41f586:	dec    ebx
  41f587:	dec    ecx
  41f588:	adc    edi,esi
  41f58a:	adc    ah,BYTE PTR [esi+eiz*8-0x57]
  41f58e:	in     al,0x18
  41f590:	cmp    BYTE PTR [eax+0x67648efc],dh
  41f596:	test   BYTE PTR [ecx-0x44390683],0x8b
  41f59d:	dec    esi
  41f59e:	nop
  41f59f:	push   cs
  41f5a0:	(bad)
  41f5a5:	repnz and DWORD PTR [eax],0x7c
  41f5a9:	mov    ch,0x19
  41f5ab:	push   esp
  41f5ac:	add    DWORD PTR [ebp-0x34ce81c3],ebp
  41f5b2:	mov    ecx,DWORD PTR gs:[ecx+0x52]
  41f5b6:	fidivr WORD PTR [ecx+0x7bf2d8e4]
  41f5bc:	ror    ch,cl
  41f5be:	xor    DWORD PTR [eax+0x51],edi
  41f5c1:	inc    edx
  41f5c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5c3:	inc    esp
  41f5c4:	push   es
  41f5c5:	lock sub BYTE PTR [esi+0x430098da],dl
  41f5cc:	and    cl,BYTE PTR [ebx+edx*8+0x70]
  41f5d0:	mov    ch,0x85
  41f5d2:	sbb    eax,0xfa2bcb9e
  41f5d7:	or     eax,0x1573941b
  41f5dc:	aad    0x94
  41f5de:	arpl   bx,cx
  41f5e0:	pop    ebx
  41f5e1:	ja     0x41f5c0
  41f5e3:	imul   eax,DWORD PTR [edi],0xffffff90
  41f5e6:	mov    BYTE PTR [edi+0x42],bh
  41f5e9:	loopne 0x41f620
  41f5eb:	push   ebx
  41f5ec:	js     0x41f643
  41f5ee:	inc    edx
  41f5ef:	ficom  DWORD PTR gs:[eax]
  41f5f2:	stc    
  41f5f3:	xor    eax,0x2efb9487
  41f5f8:	pop    ecx
  41f5f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5fa:	xchg   edx,eax
  41f5fb:	adc    BYTE PTR [ebx+0x2aa9ad85],cl
  41f601:	or     BYTE PTR [edi],0xc8
  41f604:	pop    eax
  41f605:	pusha  
  41f606:	add    ecx,eax
  41f608:	lods   al,BYTE PTR ds:[esi]
  41f609:	mov    al,0xd
  41f60b:	push   esp
  41f60c:	push   cs
  41f60d:	stos   DWORD PTR es:[edi],eax
  41f60e:	jno    0x41f5ea
  41f610:	xchg   esi,eax
  41f611:	sub    al,al
  41f613:	outs   dx,BYTE PTR ds:[esi]
  41f614:	mov    ?,WORD PTR [ebp+ecx*8+0x711d79b4]
  41f61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f61c:	js     0x41f625
  41f61e:	adc    edi,eax
  41f620:	jmp    0x9f4ec14b
  41f625:	fild   DWORD PTR [ebp-0x71]
  41f628:	retf   0x8601
  41f62b:	clc    
  41f62c:	shl    BYTE PTR [ebp+0x7d],cl
  41f62f:	pop    es
  41f630:	loope  0x41f69e
  41f632:	pop    ss
  41f633:	push   ecx
  41f634:	jg     0x41f657
  41f636:	shl    BYTE PTR [esi],1
  41f638:	inc    ebp
  41f639:	cli    
  41f63a:	xor    BYTE PTR [ebx],cl
  41f63c:	pop    ds
  41f63d:	cld    
  41f63e:	ret    0x5410
  41f641:	dec    eax
  41f642:	jmp    0x41f670
  41f644:	in     eax,dx
  41f645:	dec    eax
  41f646:	xor    al,0xc0
  41f648:	jl     0x41f647
  41f64a:	in     eax,dx
  41f64b:	sub    edx,ecx
  41f64d:	ja     0x41f647
  41f64f:	dec    ecx
  41f650:	mov    edx,0xd7d36b57
  41f655:	loope  0x41f644
  41f657:	ret    
  41f658:	jecxz  0x41f643
  41f65a:	inc    ebx
  41f65b:	add    BYTE PTR [ebx-0x3f],bl
  41f65e:	mov    bh,0x29
  41f660:	push   eax
  41f661:	scas   eax,DWORD PTR es:[edi]
  41f662:	sub    esi,esp
  41f664:	or     esi,edi
  41f666:	jle    0x41f656
  41f668:	sbb    bh,dl
  41f66a:	ss (bad) 
  41f66c:	cmp    DWORD PTR [edx],ecx
  41f66e:	cli    
  41f66f:	mov    ds:0x770b132d,eax
  41f674:	rcr    cl,0x7d
  41f677:	cmp    al,0xdc
  41f679:	nop
  41f67a:	out    0x4d,al
  41f67c:	add    DWORD PTR [eax],eax
  41f67e:	or     dh,bh
  41f680:	aaa    
  41f681:	fisubr DWORD PTR [edx-0x2e]
  41f684:	loopne 0x41f681
  41f686:	xor    eax,0x3c81db1b
  41f68b:	add    dl,BYTE PTR [edx-0x47]
  41f68e:	push   esi
  41f68f:	shr    BYTE PTR [ecx+0x965f7ac],0xd0
  41f696:	out    dx,al
  41f697:	mov    bl,0x33
  41f699:	shr    BYTE PTR [edx],0x48
  41f69c:	add    edi,DWORD PTR [eax+0x71]
  41f69f:	xchg   DWORD PTR ds:0x727e6883,ebx
  41f6a5:	push   ecx
  41f6a6:	rol    DWORD PTR [eax+0x55d2cdc1],0x6b
  41f6ad:	lods   eax,DWORD PTR ds:[esi]
  41f6ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6af:	push   edi
  41f6b0:	aas    
  41f6b1:	dec    ecx
  41f6b2:	popa   
  41f6b3:	mov    edx,0x26b4cc99
  41f6b8:	adc    DWORD PTR [esi-0x40],eax
  41f6bb:	mov    cs,esi
  41f6bd:	adc    bh,BYTE PTR [esi+0x44]
  41f6c0:	dec    ebp
  41f6c1:	push   edi
  41f6c2:	fcom   QWORD PTR [esi+0x4f]
  41f6c5:	sbb    eax,0x97dce433
  41f6ca:	pop    ebx
  41f6cb:	test   eax,0x84c63629
  41f6d0:	repz pop es
  41f6d2:	aas    
  41f6d3:	inc    ebp
  41f6d4:	fist   WORD PTR [ecx+edx*4]
  41f6d7:	dec    eax
  41f6d8:	scas   eax,DWORD PTR es:[edi]
  41f6d9:	push   cs
  41f6da:	mov    ch,0x78
  41f6dc:	adc    DWORD PTR [eax-0x33e26849],edx
  41f6e2:	enter  0x193a,0x74
  41f6e6:	xchg   ebp,eax
  41f6e7:	out    dx,eax
  41f6e8:	pusha  
  41f6e9:	repnz (bad) 
  41f6eb:	fdivr  QWORD PTR [edi]
  41f6ed:	ja     0x41f6e3
  41f6ef:	sub    eax,0xcadc7d18
  41f6f4:	sub    al,dl
  41f6f6:	cmp    DWORD PTR [ecx-0x28],ebx
  41f6f9:	pop    es
  41f6fa:	enter  0x16ae,0xe6
  41f6fe:	or     BYTE PTR [ebx-0x2e1f33f5],0x8d
  41f705:	das    
  41f706:	lds    ebp,FWORD PTR [eax-0x5bf6c65f]
  41f70c:	sti    
  41f70d:	jecxz  0x41f750
  41f70f:	out    0x8f,eax
  41f711:	ss fcmovnb st,st(2)
  41f714:	push   ss
  41f715:	shl    DWORD PTR [ecx-0x755d14e4],cl
  41f71b:	adc    eax,0x9d0db1d
  41f720:	imul   ebp,DWORD PTR [eax+0x77b0b54],0x35
  41f727:	outs   dx,BYTE PTR ds:[esi]
  41f728:	pop    ebx
  41f729:	ret    
  41f72a:	or     edi,DWORD PTR [eax+0x2e5127b2]
  41f730:	icebp  
  41f731:	outs   dx,BYTE PTR ds:[esi]
  41f732:	and    ecx,ebp
  41f734:	imul   ecx,DWORD PTR [eax+0x250b1ee1],0x18ab0f0d
  41f73e:	sub    eax,DWORD PTR ds:0x87d880b5
  41f744:	xchg   ecx,eax
  41f745:	clc    
  41f746:	jne    0x41f6f0
  41f748:	test   eax,0xc7eba694
  41f74d:	aam    0x89
  41f74f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f750:	add    ebx,DWORD PTR [edi]
  41f752:	pop    esp
  41f753:	dec    esi
  41f754:	jnp    0x41f7b0
  41f756:	sub    ecx,DWORD PTR [edi-0x22e9d3a6]
  41f75c:	push   esp
  41f75d:	jmp    0x80272a51
  41f762:	loope  0x41f7b9
  41f764:	lods   eax,DWORD PTR ds:[esi]
  41f765:	lods   al,BYTE PTR ds:[esi]
  41f766:	mov    ds:0xb5b37f69,al
  41f76b:	ror    BYTE PTR [ecx+0x79cdd5c7],cl
  41f771:	xlat   BYTE PTR ds:[ebx]
  41f772:	adc    dl,BYTE PTR [edx]
  41f774:	(bad)  
  41f775:	xlat   BYTE PTR ds:[ebx]
  41f776:	into   
  41f777:	mov    al,0xd8
  41f779:	push   es
  41f77a:	jb     0x41f7dc
  41f77c:	ficomp WORD PTR [ebx+0x25]
  41f77f:	xlat   BYTE PTR ds:[ebx]
  41f780:	or     DWORD PTR [ebx-0x17],0x836efc0d
  41f787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f788:	or     DWORD PTR [esi+0x6c6cabec],esi
  41f78e:	mov    dl,0xe7
  41f790:	imul   esi,DWORD PTR ds:0x82f7f594,0x1cc8d7d6
  41f79a:	leave  
  41f79b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f79c:	and    ebp,esi
  41f79e:	mov    WORD PTR [edx-0x49],es
  41f7a1:	leave  
  41f7a2:	jecxz  0x41f819
  41f7a4:	add    al,0x39
  41f7a6:	gs mov bl,0xa9
  41f7a9:	arpl   dx,bp
  41f7ab:	mov    esi,0xeba2081f
  41f7b0:	dec    esi
  41f7b1:	pop    eax
  41f7b2:	(bad)  
  41f7b3:	in     al,dx
  41f7b4:	dec    ecx
  41f7b5:	mov    ah,0xc2
  41f7b7:	(bad)  
  41f7b8:	fcmovne st,st(6)
  41f7ba:	dec    edi
  41f7bb:	xchg   edx,eax
  41f7bc:	mov    ebp,0xaef0f028
  41f7c1:	in     eax,0xfe
  41f7c3:	aaa    
  41f7c4:	jmp    0x41f841
  41f7c6:	mov    edx,0xbac47054
  41f7cb:	fnstsw WORD PTR [ebx-0x65]
  41f7ce:	adc    al,0xfb
  41f7d0:	aas    
  41f7d1:	popf   
  41f7d2:	jns    0x41f7b9
  41f7d4:	push   ecx
  41f7d5:	out    dx,al
  41f7d6:	nop
  41f7d7:	xor    eax,0x312e38d8
  41f7dc:	arpl   WORD PTR [ebp-0x564c503d],bx
  41f7e2:	or     BYTE PTR ds:0xaf0078bc,bl
  41f7e8:	inc    esp
  41f7e9:	xor    eax,0x86492deb
  41f7ee:	xcrypt-ctr (bad)
  41f7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7f0:	pop    ds
  41f7f1:	inc    edx
  41f7f2:	xor    BYTE PTR [esi+0xbbdf6d],ah
  41f7f8:	sbb    ch,ch
  41f7fa:	xchg   DWORD PTR [ecx],edi
  41f7fc:	pop    eax
  41f7fd:	or     al,0xfd
  41f7ff:	(bad)  
  41f800:	rcr    DWORD PTR [edx+0x60],1
  41f803:	int    0x89
  41f805:	loop   0x41f7a4
  41f807:	and    eax,0x20b95d0
  41f80c:	pop    esi
  41f80d:	test   BYTE PTR ds:0xa73ec369,bh
  41f813:	pusha  
  41f814:	adc    BYTE PTR [eax+0x6aa0960],dh
  41f81a:	cmc    
  41f81b:	aas    
  41f81c:	pop    ebp
  41f81d:	jp     0x41f7c0
  41f81f:	(bad)  
  41f820:	cmp    eax,ecx
  41f822:	out    dx,eax
  41f823:	je     0x41f84f
  41f825:	dec    edi
  41f826:	popa   
  41f827:	hlt    
  41f828:	test   DWORD PTR [ecx+0x69],ecx
  41f82b:	xor    al,0x81
  41f82d:	sbb    BYTE PTR [ebp+eax*2+0x2f],ah
  41f831:	repz dec edx
  41f833:	dec    BYTE PTR [edx+0x9]
  41f836:	jmp    0x926e:0x221c23df
  41f83d:	arpl   dx,di
  41f83f:	push   ebp
  41f840:	xchg   esi,eax
  41f841:	xor    BYTE PTR [ecx+0x79],cl
  41f844:	mov    DWORD PTR [ebp+0x6d0ea273],ebp
  41f84a:	pop    ebp
  41f84b:	daa    
  41f84c:	cmc    
  41f84d:	lods   al,BYTE PTR ds:[esi]
  41f84e:	cwde   
  41f84f:	xchg   ecx,eax
  41f850:	push   ebp
  41f851:	sub    ah,BYTE PTR [edx+0x12]
  41f854:	and    bl,ch
  41f856:	daa    
  41f857:	(bad)
  41f85b:	cmc    
  41f85c:	mov    BYTE PTR [ecx],ah
  41f85e:	mov    esp,DWORD PTR ds:0x23488789
  41f864:	jle    0x41f861
  41f866:	fwait
  41f867:	into   
  41f868:	dec    eax
  41f869:	stc    
  41f86a:	mov    ebp,0x7db2d542
  41f86f:	enter  0x4a95,0xbe
  41f873:	sbb    bl,bh
  41f875:	and    dl,BYTE PTR [ebp-0x50]
  41f878:	ror    DWORD PTR [ebp+0x5b833d58],cl
  41f87e:	imul   edi,DWORD PTR [esi-0xd],0x32193660
  41f885:	ja     0x41f80b
  41f887:	mov    eax,0xbd9640cb
  41f88c:	pop    ebx
  41f88d:	fisttp QWORD PTR [ecx]
  41f88f:	fs jge 0x41f843
  41f892:	(bad)  
  41f893:	into   
  41f894:	dec    edx
  41f895:	mov    ch,0x8a
  41f897:	jmp    0x46f702a5
  41f89c:	adc    cl,al
  41f89e:	popa   
  41f89f:	mov    dl,0xf7
  41f8a1:	sub    al,BYTE PTR [eax]
  41f8a3:	jg     0x41f8ea
  41f8a5:	push   DWORD PTR [ebp-0x70fcfb48]
  41f8ab:	(bad)  
  41f8ac:	cld    
  41f8ad:	enter  0xfc88,0x65
  41f8b1:	xlat   BYTE PTR ds:[ebx]
  41f8b2:	xchg   ecx,eax
  41f8b3:	inc    ebx
  41f8b4:	pop    esp
  41f8b5:	xchg   edi,eax
  41f8b6:	mov    bl,0xcf
  41f8b8:	mov    dh,0x66
  41f8ba:	cmp    esp,DWORD PTR [eax]
  41f8bc:	cmp    ch,bh
  41f8be:	inc    edx
  41f8bf:	push   edx
  41f8c0:	inc    ebp
  41f8c1:	pop    ss
  41f8c2:	stc    
  41f8c3:	test   BYTE PTR [edi],dh
  41f8c5:	ss push ecx
  41f8c7:	pop    ds
  41f8c8:	test   al,0xbe
  41f8ca:	push   esi
  41f8cb:	sub    bl,BYTE PTR [eax]
  41f8cd:	or     eax,0xd1c81b76
  41f8d2:	icebp  
  41f8d3:	xchg   ebx,eax
  41f8d4:	adc    bl,BYTE PTR [ebx+eiz*1-0x377a0737]
  41f8db:	cli    
  41f8dc:	mov    ecx,0xa260d329
  41f8e1:	adc    ch,al
  41f8e3:	add    al,0xca
  41f8e5:	ss into 
  41f8e7:	popa   
  41f8e8:	test   al,0x8b
  41f8ea:	add    bl,BYTE PTR [ebp+edi*4+0x21cf899a]
  41f8f1:	push   0x80425dae
  41f8f6:	std    
  41f8f7:	push   cs
  41f8f8:	pop    ebp
  41f8f9:	add    al,0xf1
  41f8fb:	mov    eax,ds:0xb48c091f
  41f900:	lods   al,BYTE PTR ds:[esi]
  41f901:	mov    bl,BYTE PTR ds:0xab03e0e5
  41f907:	js     0x41f94c
  41f909:	repnz shr DWORD PTR ss:[eax-0x7e],1
  41f90e:	sub    BYTE PTR [esi-0x10],dh
  41f911:	jmp    0xdf00:0x950a4ee1
  41f918:	pop    ss
  41f919:	shl    DWORD PTR [edx+ebp*1+0x67ee186d],0x6e
  41f921:	(bad)
  41f924:	js     0x41f98b
  41f926:	call   0xa866:0x4752485c
  41f92d:	cmp    DWORD PTR [edi],edi
  41f92f:	int    0x81
  41f931:	mov    eax,0xfa5da9cd
  41f936:	shr    BYTE PTR [esi+esi*4],0x38
  41f93a:	test   eax,0x4dc5b637
  41f93f:	icebp  
  41f940:	dec    esi
  41f941:	iret   
  41f942:	push   ebp
  41f943:	(bad)  
  41f944:	jb     0x41f8ef
  41f946:	mov    bl,0xa6
  41f948:	mov    edx,0x2eee105e
  41f94d:	jo     0x41f99f
  41f94f:	sub    al,0xdc
  41f951:	es mov ecx,0xc164a385
  41f957:	int    0xc4
  41f959:	or     BYTE PTR [edx+0x3747459],dl
  41f95f:	jle    0x41f8f5
  41f961:	sub    BYTE PTR [edi],0x13
  41f964:	mov    DWORD PTR [edi],edx
  41f966:	aam    0xfb
  41f968:	mov    DWORD PTR [edi+eiz*2+0x2e77129e],edi
  41f96f:	stc    
  41f970:	add    esi,edx
  41f972:	outs   dx,BYTE PTR ds:[esi]
  41f973:	or     esp,edi
  41f975:	pop    esp
  41f976:	sub    BYTE PTR [edx+0x28b23eff],bh
  41f97c:	jbe    0x41f93a
  41f97e:	mov    al,ds:0xa0e2de34
  41f983:	dec    BYTE PTR [edi-0x70]
  41f986:	repnz inc ecx
  41f988:	out    dx,al
  41f989:	push   ss
  41f98a:	dec    eax
  41f98b:	jecxz  0x41fa00
  41f98d:	iret   
  41f98e:	add    BYTE PTR [ebp+0x44],ch
  41f991:	mov    dh,ah
  41f993:	inc    edx
  41f994:	and    BYTE PTR [edx],bl
  41f996:	loope  0x41f9c9
  41f998:	cmp    eax,0x5dcce42b
  41f99d:	in     eax,dx
  41f99e:	xchg   ecx,eax
  41f99f:	ds aas 
  41f9a1:	in     eax,dx
  41f9a2:	mov    ds:0xe46f5661,eax
  41f9a7:	and    BYTE PTR [esi],0xd3
  41f9aa:	jmp    0xcf41ed1f
  41f9af:	sti    
  41f9b0:	loop   0x41f93e
  41f9b2:	sahf   
  41f9b3:	mov    ebp,fs
  41f9b5:	xor    bh,BYTE PTR [edx-0x65]
  41f9b8:	cld    
  41f9b9:	xchg   esp,eax
  41f9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9bb:	shl    BYTE PTR [edx-0x7129d91],1
  41f9c1:	cmp    al,0xc
  41f9c3:	sub    eax,0xf25f1388
  41f9c8:	add    al,0xb7
  41f9ca:	jno    0x41fa41
  41f9cc:	mov    esi,0xcf6db6f5
  41f9d1:	and    BYTE PTR [ebx],bh
  41f9d3:	enter  0x8248,0xaf
  41f9d7:	not    DWORD PTR [eax+0x21651543]
  41f9dd:	je     0x41f998
  41f9df:	(bad)  
  41f9e0:	neg    dl
  41f9e2:	jb     0x41f9fd
  41f9e4:	repnz mov edi,DWORD PTR [esi+0x2dc3ac6d]
  41f9eb:	fwait
  41f9ec:	cmp    BYTE PTR [ecx-0x15],ch
  41f9ef:	(bad)  [ebx]
  41f9f1:	push   ss
  41f9f2:	je     0x41fa13
  41f9f4:	mov    edx,0x4ca8182a
  41f9f9:	bound  edi,QWORD PTR [edi-0x66cbaa9f]
  41f9ff:	sub    bh,dh
  41fa01:	daa    
  41fa02:	mov    dh,0x0
  41fa04:	mov    eax,gs
  41fa06:	fwait
  41fa07:	ss scas eax,DWORD PTR es:[edi]
  41fa09:	pop    es
  41fa0a:	aad    0x36
  41fa0c:	fdivr  DWORD PTR ss:[ecx]
  41fa0f:	mov    ecx,0xe21718c2
  41fa14:	cs mov eax,0x348e35d8
  41fa1a:	mov    cs,WORD PTR [edx+0x29]
  41fa1d:	xchg   esp,eax
  41fa1e:	or     ecx,esi
  41fa20:	adc    al,BYTE PTR [ebp-0x5a]
  41fa23:	imul   ecx,edx,0x7a
  41fa26:	pop    ss
  41fa27:	push   edx
  41fa28:	mov    fs,esp
  41fa2a:	push   esp
  41fa2b:	(bad)  
  41fa2c:	pop    edi
  41fa2d:	sub    al,0x7b
  41fa2f:	data16 lods al,BYTE PTR ds:[esi]
  41fa31:	adc    esp,DWORD PTR [esi-0x70]
  41fa34:	xchg   edi,eax
  41fa35:	cmp    BYTE PTR [edx],dh
  41fa37:	or     bl,BYTE PTR [eiz*8+0x62e8a798]
  41fa3e:	loopne 0x41fabc
  41fa40:	icebp  
  41fa41:	xchg   esi,eax
  41fa42:	stc    
  41fa43:	out    0x64,eax
  41fa45:	inc    esp
  41fa46:	les    ecx,FWORD PTR [edx-0x7fa2be51]
  41fa4c:	pop    ss
  41fa4d:	mov    ebx,0x1c6d5a6d
  41fa52:	mov    dl,0xc9
  41fa54:	aam    0x7f
  41fa56:	cmp    cl,ch
  41fa58:	in     al,0x73
  41fa5a:	aam    0x5e
  41fa5c:	pusha  
  41fa5d:	dec    edx
  41fa5e:	leave  
  41fa5f:	leave  
  41fa60:	out    dx,al
  41fa61:	jne    0x41fa76
  41fa63:	and    edx,DWORD PTR [edi+0x3fa4ed30]
  41fa69:	xchg   ecx,eax
  41fa6a:	fsubr  QWORD PTR ds:0x412349f9
  41fa70:	bound  ebx,QWORD PTR [ebx+0x3c8b875b]
  41fa76:	loope  0x41faca
  41fa78:	sahf   
  41fa79:	(bad)  
  41fa7a:	fsubr  QWORD PTR [ebx+0x0]
  41fa7d:	or     BYTE PTR [ecx+0x58],dh
  41fa80:	or     eax,0x7bdfecf9
  41fa85:	ds add dh,dh
  41fa88:	leave  
  41fa89:	push   0x10
  41fa8b:	push   eax
  41fa8c:	adc    cl,BYTE PTR [esi+edi*8-0x470e3ef6]
  41fa93:	sub    ebp,edi
  41fa95:	sbb    DWORD PTR [edx-0x60bd4c2b],0xa8be62df
  41fa9f:	(bad)  
  41faa0:	ds (bad) 
  41faa2:	mov    al,0x30
  41faa4:	out    0xe0,eax
  41faa6:	or     BYTE PTR [edx],0xbc
  41faa9:	loop   0x41faa1
  41faab:	aad    0xf4
  41faad:	sub    bl,BYTE PTR [ecx+0x13]
  41fab0:	push   ecx
  41fab1:	xor    eax,0xeab33b71
  41fab6:	retf   0x978c
  41fab9:	stos   BYTE PTR es:[edi],al
  41faba:	adc    eax,0x9e34b9ab
  41fabf:	jnp    0x41fa85
  41fac1:	nop
  41fac2:	mov    esi,0xebdcd141
  41fac7:	cmp    BYTE PTR [esi],dh
  41fac9:	push   ebx
  41faca:	test   al,0xe0
  41facc:	xchg   esi,eax
  41facd:	push   ecx
  41face:	sbb    eax,0xf822fe9b
  41fad3:	jnp    0x41fb3c
  41fad5:	sar    BYTE PTR [edi],1
  41fad7:	and    cl,dh
  41fad9:	jge    0x41fac3
  41fadb:	push   cs
  41fadc:	mov    ds:0x8174503,eax
  41fae1:	cmp    esi,DWORD PTR ss:[ebx+0x41]
  41fae5:	into   
  41fae6:	xor    dl,dh
  41fae8:	repnz adc bl,BYTE PTR ss:[esp+edi*2-0x74]
  41faee:	pop    ds
  41faef:	mov    al,0x9a
  41faf1:	and    ecx,DWORD PTR [edi*2-0x63243d1c]
  41faf8:	mov    ah,0xd
  41fafa:	xchg   esi,eax
  41fafb:	stos   BYTE PTR es:[edi],al
  41fafc:	jmp    0x41fae6
  41fafe:	stc    
  41faff:	inc    ebp
  41fb00:	adc    ecx,DWORD PTR [ebx]
  41fb02:	ins    BYTE PTR es:[edi],dx
  41fb03:	sbb    DWORD PTR [esp+edi*2],edi
  41fb06:	cli    
  41fb07:	xchg   BYTE PTR [edx+0x3b],al
  41fb0a:	outs   dx,BYTE PTR ds:[esi]
  41fb0b:	ja     0x41fae7
  41fb0d:	inc    ebx
  41fb0e:	repnz adc BYTE PTR [esi],ah
  41fb11:	xor    BYTE PTR [esi+0x2bf16582],bl
  41fb17:	inc    esp
  41fb18:	mov    edx,0xb6244a6
  41fb1d:	inc    edx
  41fb1e:	sub    al,0xc9
  41fb20:	jl     0x41faa8
  41fb22:	lahf   
  41fb23:	pop    ebp
  41fb24:	adc    DWORD PTR [esi+0x9],ebp
  41fb27:	cmp    esp,DWORD PTR ds:0xff4ff95d
  41fb2d:	add    eax,0xfcf2c587
  41fb32:	out    0x2e,eax
  41fb34:	sub    eax,0x993ed83e
  41fb39:	mov    ds:0x6b5885c0,eax
  41fb3e:	dec    ecx
  41fb3f:	mov    esi,0x5317fa00
  41fb44:	ja     0x41fbb3
  41fb46:	fsub   DWORD PTR [eax]
  41fb48:	sub    BYTE PTR [edi],ah
  41fb4a:	clc    
  41fb4b:	xchg   ebp,eax
  41fb4c:	add    al,0xfb
  41fb4e:	and    edi,edi
  41fb50:	cmp    al,0xd6
  41fb52:	mov    ch,0xd6
  41fb54:	repnz test BYTE PTR [ebp+0x8],ch
  41fb58:	sub    BYTE PTR [ecx+eax*2-0x2d3f6977],0x1e
  41fb60:	cdq    
  41fb61:	mov    ecx,0xc5471c07
  41fb66:	cld    
  41fb67:	jne    0x41fb60
  41fb69:	je     0x41fbe2
  41fb6b:	jnp    0x41fbe7
  41fb6d:	jb     0x41fb24
  41fb6f:	mov    al,ds:0x39ef8fcf
  41fb74:	jle    0x41fb00
  41fb76:	sub    al,0xcd
  41fb78:	ret    
  41fb79:	push   edx
  41fb7a:	gs nop
  41fb7c:	test   edx,edx
  41fb7e:	nop
  41fb7f:	sub    eax,0x6a25cc3
  41fb84:	adc    BYTE PTR [edi+0x537c6594],0xef
  41fb8b:	(bad)  
  41fb8d:	and    eax,0xd76123b5
  41fb92:	mov    ah,0x9f
  41fb94:	ins    DWORD PTR es:[edi],dx
  41fb95:	or     edx,esp
  41fb97:	and    dl,0x8
  41fb9a:	mov    edx,0xf6bf0d36
  41fb9f:	pop    edx
  41fba0:	mov    edx,0x4b34b787
  41fba5:	add    DWORD PTR [edx+0x68431ef9],0xffffff9a
  41fbac:	(bad)  
  41fbad:	jp     0x41fb81
  41fbaf:	(bad)  
  41fbb0:	nop
  41fbb1:	xchg   DWORD PTR [edx+edx*1+0x34],edx
  41fbb5:	push   edi
  41fbb6:	adc    BYTE PTR [ebp+0x3b],dh
  41fbb9:	scas   eax,DWORD PTR es:[edi]
  41fbba:	and    BYTE PTR [eax+ecx*1],ch
  41fbbd:	jle    0x41fb71
  41fbbf:	xchg   edx,eax
  41fbc0:	push   ss
  41fbc1:	cld    
  41fbc2:	xor    eax,0x665261f3
  41fbc7:	retf   0xdd0d
  41fbca:	in     al,dx
  41fbcb:	pushf  
  41fbcc:	and    BYTE PTR [eax+0x6d],0x39
  41fbd0:	adc    ebp,DWORD PTR [esi+0x638b5971]
  41fbd6:	sbb    ebx,eax
  41fbd8:	mov    ds,WORD PTR ds:0xb46c0c65
  41fbde:	jo     0x41fc16
  41fbe0:	jp     0x41fbc3
  41fbe2:	and    al,0xb7
  41fbe4:	js     0x41fbf3
  41fbe6:	push   edx
  41fbe7:	mov    bl,0x32
  41fbe9:	in     eax,0xdd
  41fbeb:	retf   
  41fbec:	out    0xa6,al
  41fbee:	ret    
  41fbef:	jns    0x41fc23
  41fbf1:	retf   
  41fbf2:	add    esp,DWORD PTR [ecx+0x732709be]
  41fbf8:	inc    eax
  41fbf9:	jb     0x41fb9d
  41fbfb:	xchg   ecx,eax
  41fbfc:	leave  
  41fbfd:	aam    0x27
  41fbff:	test   DWORD PTR [eax],ecx
  41fc01:	dec    ebx
  41fc02:	xchg   ebx,eax
  41fc03:	add    ah,BYTE PTR [edx-0x3e]
  41fc06:	add    BYTE PTR [esi],dl
  41fc08:	loope  0x41fb8a
  41fc0a:	outs   dx,DWORD PTR ds:[esi]
  41fc0b:	pop    ebx
  41fc0c:	dec    ebx
  41fc0d:	jle    0x41fbfc
  41fc0f:	bound  edx,QWORD PTR [edx+esi*1]
  41fc12:	sbb    bh,cl
  41fc14:	(bad)  
  41fc15:	mov    eax,ds:0xad3f8076
  41fc1a:	jecxz  0x41fbb8
  41fc1c:	retf   0x37ce
  41fc1f:	dec    ebp
  41fc20:	lahf   
  41fc21:	test   DWORD PTR [esi],edx
  41fc23:	stc    
  41fc24:	(bad)  
  41fc25:	sahf   
  41fc26:	push   0x7f0f0643
  41fc2b:	xor    esp,DWORD PTR ds:0xa5aa0d0f
  41fc31:	sbb    eax,0xc826c4dd
  41fc36:	sbb    al,0x94
  41fc38:	push   ebp
  41fc39:	in     eax,dx
  41fc3a:	dec    eax
  41fc3b:	cmp    ecx,DWORD PTR [esp+ebp*8+0x71cf5508]
  41fc42:	sar    DWORD PTR [esi-0x6ab79df1],cl
  41fc48:	mov    cl,0x20
  41fc4a:	dec    edi
  41fc4b:	inc    ebx
  41fc4c:	call   0xda2f77ed
  41fc51:	mov    eax,esi
  41fc53:	xchg   ebp,eax
  41fc54:	test   dl,cl
  41fc56:	cmc    
  41fc57:	int    0x14
  41fc59:	mov    bl,0x82
  41fc5b:	push   0xa7af271c
  41fc60:	repnz test BYTE PTR fs:[edx+0x2a],bh
  41fc65:	inc    edx
  41fc66:	les    ebx,FWORD PTR [esi]
  41fc68:	ds inc edi
  41fc6a:	fisttp DWORD PTR [eax-0x4620a6e]
  41fc70:	and    DWORD PTR [esi-0x33],ebx
  41fc73:	mov    WORD PTR [esi],fs
  41fc75:	scas   eax,DWORD PTR es:[edi]
  41fc76:	jecxz  0x41fbfa
  41fc78:	xchg   BYTE PTR [esi+0x6b],dh
  41fc7b:	jbe    0x41fc79
  41fc7d:	in     al,dx
  41fc7e:	sub    al,0xfc
  41fc80:	jmp    0x41fcad
  41fc82:	xchg   ecx,eax
  41fc83:	adc    DWORD PTR [ebx-0x51],0x6425e912
  41fc8a:	loope  0x41fce0
  41fc8c:	rcl    DWORD PTR [eax+0x26af5c26],cl
  41fc92:	mov    ebx,0x12014796
  41fc97:	jnp    0x41fc54
  41fc99:	dec    ecx
  41fc9a:	mov    BYTE PTR [eax],bl
  41fc9c:	mov    bh,0xe7
  41fc9e:	cmp    al,BYTE PTR [ecx+0x7f]
  41fca1:	xlat   BYTE PTR ds:[ebx]
  41fca2:	out    dx,al
  41fca3:	es inc ebp
  41fca5:	jae    0x41fc57
  41fca7:	mov    esp,0xb8e1619b
  41fcac:	je     0x41fcbc
  41fcae:	pop    ebp
  41fcaf:	shr    BYTE PTR [edx-0x73d21579],cl
  41fcb5:	xchg   edx,eax
  41fcb6:	mov    al,ds:0xcbe47aa9
  41fcbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcbc:	fld    QWORD PTR [ebp+eiz*2-0x38]
  41fcc0:	(bad)  
  41fcc1:	mov    bh,0x18
  41fcc3:	shl    ah,1
  41fcc5:	add    al,0xdc
  41fcc7:	leave  
  41fcc8:	sbb    BYTE PTR [edx+0x29],al
  41fccb:	inc    edx
  41fccc:	(bad)  
  41fccd:	scas   eax,DWORD PTR es:[edi]
  41fcce:	pop    esp
  41fccf:	dec    ebp
  41fcd0:	cmp    DWORD PTR [esi],ebp
  41fcd2:	nop    DWORD PTR [ebx]
  41fcd5:	mov    dh,0x7f
  41fcd7:	mov    ebp,fs
  41fcd9:	jmp    0x126e:0x3599dcec
  41fce0:	mov    esp,0xfc081a9c
  41fce5:	icebp  
  41fce6:	xchg   edx,eax
  41fce7:	sbb    dl,BYTE PTR [ebx-0x5c]
  41fcea:	rcr    DWORD PTR [ebp-0x777b6274],0x77
  41fcf1:	or     BYTE PTR [edx+ecx*1-0x1],ch
  41fcf5:	scas   eax,DWORD PTR es:[edi]
  41fcf6:	or     al,dh
  41fcf8:	dec    edx
  41fcf9:	cwde   
  41fcfa:	ins    DWORD PTR es:[edi],dx
  41fcfb:	call   0x892c:0xa6c209ea
  41fd02:	(bad)  
  41fd03:	imul   esp,DWORD PTR [ecx-0x409994ba],0x6e
  41fd0a:	pushf  
  41fd0b:	int    0x1b
  41fd0d:	out    0xd4,al
  41fd0f:	cmp    al,0x15
  41fd11:	mov    DWORD PTR [ecx],ecx
  41fd13:	lahf   
  41fd14:	stos   BYTE PTR es:[edi],al
  41fd15:	xlat   BYTE PTR ds:[ebx]
  41fd16:	fpatan 
  41fd18:	mov    BYTE PTR [ebp-0x795651c2],0xc4
  41fd1f:	xchg   BYTE PTR [esi],dl
  41fd21:	xchg   ecx,eax
  41fd22:	mov    edx,0xf19c0f68
  41fd27:	mov    cl,dl
  41fd29:	cli    
  41fd2a:	cmp    BYTE PTR [ecx-0x48],cl
  41fd2d:	repz popa 
  41fd2f:	cdq    
  41fd30:	jae    0x41fd6a
  41fd32:	adc    BYTE PTR [ebx-0x1c4ee694],al
  41fd38:	adc    ch,BYTE PTR [eax+0xb2418c7]
  41fd3e:	add    esp,DWORD PTR [esi+0x49a5c27]
  41fd44:	mov    al,ds:0x77698e6d
  41fd49:	out    0xb4,eax
  41fd4b:	pop    ss
  41fd4c:	or     DWORD PTR [edx-0x2f],0x6b712994
  41fd53:	or     BYTE PTR [edi-0xb200a24],ah
  41fd59:	in     eax,dx
  41fd5a:	add    eax,0x7ba0c8e3
  41fd5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd60:	push   0x2728d8e
  41fd65:	inc    edi
  41fd66:	mov    esi,0x7b4469b6
  41fd6b:	cld    
  41fd6c:	int3   
  41fd6d:	push   ebx
  41fd6e:	xor    al,0x66
  41fd70:	sub    eax,0x4679f3c0
  41fd75:	nop
  41fd76:	mov    dl,0x1a
  41fd78:	jecxz  0x41fd36
  41fd7a:	mov    ch,0x74
  41fd7c:	test   DWORD PTR [edx+0x1e],ebp
  41fd7f:	enter  0x2412,0x82
  41fd83:	cmp    BYTE PTR [edx-0x3a976ec],cl
  41fd89:	imul   edi,DWORD PTR [edx+esi*1-0x17be7b6b],0xffffffa4
  41fd91:	cmp    BYTE PTR [eax],bh
  41fd93:	push   ecx
  41fd94:	cwde   
  41fd95:	and    BYTE PTR [esi],bl
  41fd97:	shl    DWORD PTR [ebx],cl
  41fd99:	in     al,dx
  41fd9a:	shl    DWORD PTR [ecx-0x60],0xc8
  41fd9e:	imul   esp,DWORD PTR [ebx-0x35dfdac8],0x297596fa
  41fda8:	out    dx,eax
  41fda9:	call   0xf720fef7
  41fdae:	test   edx,ecx
  41fdb0:	popf   
  41fdb1:	xlat   BYTE PTR ds:[ebx]
  41fdb2:	or     al,0xf8
  41fdb4:	cli    
  41fdb5:	or     dh,BYTE PTR [eax+0x14]
  41fdb8:	adc    ebp,DWORD PTR [eax-0x2f]
  41fdbb:	stos   DWORD PTR es:[edi],eax
  41fdbc:	scas   eax,DWORD PTR es:[edi]
  41fdbd:	push   ss
  41fdbe:	mov    esi,0xdcbcc399
  41fdc3:	lods   eax,DWORD PTR ds:[esi]
  41fdc4:	push   es
  41fdc5:	push   ds
  41fdc6:	test   ecx,edi
  41fdc8:	dec    ecx
  41fdc9:	dec    ebx
  41fdca:	cdq    
  41fdcb:	neg    BYTE PTR [edx+ebx*1]
  41fdce:	rcl    esi,0x46
  41fdd1:	aad    0xd4
  41fdd3:	inc    eax
  41fdd4:	mov    eax,ds:0x8db33de5
  41fdd9:	cmp    eax,0x3173af41
  41fdde:	sbb    BYTE PTR [ecx+edx*4-0x25978b03],ch
  41fde5:	pop    eax
  41fde6:	pop    edi
  41fde7:	repnz pusha 
  41fde9:	mov    esi,0x73396328
  41fdee:	adc    DWORD PTR [ebp-0x33a3d7c2],esi
  41fdf4:	into   
  41fdf5:	ins    BYTE PTR es:[edi],dx
  41fdf6:	lods   al,BYTE PTR ds:[esi]
  41fdf7:	cmp    ch,dh
  41fdf9:	into   
  41fdfa:	scas   eax,DWORD PTR es:[edi]
  41fdfb:	inc    ebp
  41fdfc:	daa    
  41fdfd:	xchg   ecx,eax
  41fdfe:	loop   0x41fdc8
  41fe00:	mov    ah,0x4c
  41fe02:	adc    esi,esp
  41fe04:	ss mov ebx,0x94c4ef86
  41fe0a:	push   ebp
  41fe0b:	adc    cl,BYTE PTR [edi]
  41fe0d:	les    esp,FWORD PTR [esi+ecx*2-0x9c3ffa4]
  41fe14:	inc    esi
  41fe15:	xchg   bh,ch
  41fe17:	loopne 0x41fe0a
  41fe19:	les    edx,FWORD PTR [esi+0xe]
  41fe1c:	push   cs
  41fe1d:	push   esi
  41fe1e:	daa    
  41fe1f:	dec    ebx
  41fe20:	enter  0xc10,0x9a
  41fe24:	aam    0x27
  41fe26:	pushf  
  41fe27:	retf   0xc08f
  41fe2a:	cld    
  41fe2b:	mov    WORD PTR [ecx+0x12],?
  41fe2e:	ins    BYTE PTR es:[edi],dx
  41fe2f:	out    dx,al
  41fe30:	(bad)  
  41fe31:	in     eax,dx
  41fe32:	imul   ebx,DWORD PTR [esi+0x6da504b7],0x62398ccb
  41fe3c:	test   DWORD PTR [ebx-0x41],edx
  41fe3f:	les    ebx,FWORD PTR [eax-0x12]
  41fe42:	push   ebx
  41fe43:	xchg   esp,eax
  41fe44:	dec    esp
  41fe45:	scas   al,BYTE PTR es:[edi]
  41fe46:	push   ds
  41fe47:	add    ebp,DWORD PTR [esi+0x58]
  41fe4a:	(bad)  
  41fe4b:	hlt    
  41fe4c:	cmc    
  41fe4d:	out    0xdc,eax
  41fe4f:	dec    eax
  41fe50:	mov    dh,0xf0
  41fe52:	stos   DWORD PTR es:[edi],eax
  41fe53:	cmp    al,0x4a
  41fe55:	add    eax,0x230357b5
  41fe5a:	stc    
  41fe5b:	fidivr WORD PTR [ebx-0x56a9588a]
  41fe61:	jg     0x41fed0
  41fe63:	inc    ecx
  41fe64:	pop    ds
  41fe65:	jb     0x41fe69
  41fe67:	stc    
  41fe68:	xchg   esp,eax
  41fe69:	lds    esi,FWORD PTR [ebp+0x18760721]
  41fe6f:	pop    ds
  41fe70:	adc    eax,0x2927ab39
  41fe75:	pop    ss
  41fe76:	mov    ds:0x8c25a7d0,eax
  41fe7c:	(bad)  
  41fe7d:	stc    
  41fe7e:	adc    BYTE PTR [eax-0x1d],al
  41fe81:	or     al,0xf1
  41fe84:	adc    eax,0xae19ac01
  41fe89:	ja     0x41feea
  41fe8b:	fsub   QWORD PTR [esi]
  41fe8d:	add    eax,0xa77036c6
  41fe92:	mov    al,ds:0x24ba455c
  41fe97:	sbb    BYTE PTR [edx],bl
  41fe99:	fcom   QWORD PTR [eax+0x3f]
  41fe9c:	xor    DWORD PTR [esi-0x64],ebp
  41fe9f:	push   edi
  41fea0:	jle    0x41fece
  41fea2:	loop   0x41fe51
  41fea4:	or     BYTE PTR [ebx+0x4],al
  41fea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea8:	push   ebx
  41fea9:	mov    bh,ah
  41feab:	push   ecx
  41feac:	xor    ch,BYTE PTR [bp+di]
  41feaf:	pushf  
  41feb0:	and    eax,0x9d77c1e
  41feb5:	dec    esp
  41feb6:	(bad)  
  41feb7:	xor    bh,BYTE PTR [edi+0x78aa908c]
  41febd:	xchg   esi,eax
  41febe:	lea    edi,es:[edx-0x18f11063]
  41fec5:	jmp    0x41fe78
  41fec7:	xor    DWORD PTR [esi-0x1c],0x4c
  41fecb:	adc    BYTE PTR [ecx+0x3a617051],dh
  41fed1:	arpl   WORD PTR [ecx+edi*2-0x57],sp
  41fed5:	mov    eax,ds:0x2e1915d5
  41feda:	cmp    eax,0xc50df973
  41fedf:	icebp  
  41fee0:	shr    DWORD PTR [esi+0x5c587642],0xa6
  41fee7:	inc    ecx
  41fee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feea:	sbb    eax,0x21640024
  41feef:	and    al,0xe1
  41fef1:	call   0xcb83ed7a
  41fef6:	fisub  WORD PTR [esi+0x12]
  41fef9:	mov    al,0x23
  41fefc:	add    DWORD PTR [ecx-0x73],edx
  41feff:	and    eax,0xc486409e
  41ff04:	mov    esp,0x46f4acde
  41ff09:	stos   BYTE PTR es:[edi],al
  41ff0a:	jno    0x41ff0d
  41ff0c:	loope  0x41ff5d
  41ff0e:	inc    edi
  41ff0f:	pop    esi
  41ff10:	sti    
  41ff11:	rcr    DWORD PTR [ebx-0x7c1e3d9f],0x84
  41ff18:	inc    ebp
  41ff19:	jb     0x41feee
  41ff1b:	fild   QWORD PTR [ebx]
  41ff1d:	cmp    BYTE PTR [ebx-0x12641d49],dl
  41ff23:	xor    eax,0xbdf6c3b2
  41ff28:	lods   eax,DWORD PTR ds:[esi]
  41ff29:	jmp    0x1d21de66
  41ff2e:	sbb    esp,DWORD PTR [eax]
  41ff30:	mov    ebp,0xfa6d56ab
  41ff35:	and    al,0xbb
  41ff37:	fisttp DWORD PTR [ecx+0x78]
  41ff3a:	adc    dl,BYTE PTR [edi+0x417cb095]
  41ff40:	iret   
  41ff41:	shl    DWORD PTR [ecx-0x55],cl
  41ff44:	fiadd  DWORD PTR [eax+0x17f9b2d9]
  41ff4a:	and    edx,DWORD PTR [ecx]
  41ff4c:	dec    ebx
  41ff4d:	mov    dh,0xac
  41ff4f:	xor    eax,0x4ade7e7d
  41ff54:	push   ds
  41ff55:	pop    ecx
  41ff56:	dec    ebx
  41ff57:	es mov bl,0x61
  41ff5a:	xchg   ebp,eax
  41ff5b:	xchg   esi,eax
  41ff5c:	dec    ebp
  41ff5d:	xlat   BYTE PTR ds:[ebx]
  41ff5e:	inc    ebp
  41ff5f:	xchg   ecx,eax
  41ff60:	xor    BYTE PTR ds:0xe582ffc3,cl
  41ff66:	mov    ah,0xdf
  41ff68:	add    DWORD PTR [edx+ebp*1+0x6a],esp
  41ff6c:	mov    ecx,0x5f2ea8b1
  41ff71:	loopne 0x41ff01
  41ff73:	int    0xf9
  41ff75:	loope  0x41ffe4
  41ff77:	inc    ecx
  41ff78:	rcr    BYTE PTR [edi],1
  41ff7a:	aas    
  41ff7b:	sub    al,BYTE PTR [eax-0x713d75e1]
  41ff81:	arpl   WORD PTR [ecx-0x3be7980],dx
  41ff87:	std    
  41ff88:	int    0xd0
  41ff8a:	push   ebx
  41ff8b:	pop    ebp
  41ff8c:	cmovge edx,DWORD PTR [eax+0x5ea47c5f]
  41ff93:	inc    esi
  41ff94:	pop    es
  41ff95:	mov    al,0xbc
  41ff97:	fsubr  QWORD PTR [ecx]
  41ff99:	adc    DWORD PTR [edi+ebp*8+0x2c72b0cf],0x32
  41ffa1:	jne    0x41ffdf
  41ffa3:	sub    DWORD PTR [ecx],ebp
  41ffa5:	ffreep st(6)
  41ffa7:	mov    al,ds:0x8a7d9f05
  41ffac:	adc    DWORD PTR [edx+0x1863e998],0xef9a7828
  41ffb6:	mov    ch,BYTE PTR [edx-0x69]
  41ffb9:	cwde   
  41ffba:	sbb    al,0xc3
  41ffbc:	mov    ds:0xe7c87a10,al
  41ffc1:	jbe    0x41ff97
  41ffc3:	dec    esi
  41ffc4:	xchg   esp,eax
  41ffc5:	push   cs
  41ffc6:	int3   
  41ffc7:	(bad)  
  41ffc8:	into   
  41ffc9:	jnp    0x41ff87
  41ffcb:	shl    BYTE PTR [edx+0x60],1
  41ffce:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41ffd0:	(bad)  [esi-0x39]
  41ffd3:	pop    ecx
  41ffd4:	test   eax,0x7e8060c4
  41ffd9:	push   edx
  41ffda:	out    0xef,eax
  41ffdc:	cmp    al,0x5b
  41ffde:	int    0xeb
  41ffe0:	lock mov DWORD PTR cs:[edi+0x7b8a9f47],ebx
  41ffe8:	sub    al,0x29
  41ffeb:	xor    dh,cl
  41ffed:	in     eax,0xf8
  41ffef:	push   edx
  41fff0:	cmc    
  41fff1:	retf   
  41fff2:	js     0x420017
  41fff4:	inc    ecx
  41fff5:	mov    edi,0xc762b58
  41fffa:	mov    ecx,DWORD PTR [ebp-0x18]
  41fffd:	sub    eax,ecx
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0xf9e2a80a
  420121:	cmp    BYTE PTR [esi],al
  420123:	mov    dh,0x80
  420125:	or     DWORD PTR [edi],0x5e
  420128:	add    DWORD PTR [ebx+0x16bebf40],0x2a
  42012f:	and    DWORD PTR [edx+eiz*2],edx
  420132:	test   BYTE PTR [edi+0x24],0x27
  420136:	pusha  
  420137:	int3   
  420138:	pop    ecx
  420139:	repz into 
  42013b:	inc    esi
  42013c:	inc    ebp
  42013d:	aas    
  42013e:	pop    esp
  42013f:	shl    DWORD PTR [esi],0x89
  420142:	leave  
  420143:	into   
  420144:	sub    eax,0x87d83a87
  420149:	fisubr WORD PTR [edx+eiz*8+0x5a]
  42014d:	push   ecx
  42014e:	imul   eax,DWORD PTR [ebp-0x25],0xad443132
  420155:	mov    esi,0xf08d5e09
  42015a:	pushf  
  42015b:	or     DWORD PTR [eax],esi
  42015d:	or     ah,dh
  42015f:	out    0x3b,al
  420161:	dec    eax
  420162:	adc    dl,ah
  420164:	adc    BYTE PTR [ecx+0x57],ch
  420167:	dec    edx
  420168:	cdq    
  420169:	ret    0xf52d
  42016c:	mov    edi,0xae6ab67
  420171:	std    
  420172:	ror    BYTE PTR [esi-0x3dfc9960],1
  420178:	sub    eax,DWORD PTR [edx-0x7c588323]
  42017e:	not    DWORD PTR [ebx]
  420180:	pop    edx
  420181:	jae    0x420195
  420183:	and    DWORD PTR [esi+edx*2],eax
  420186:	rol    BYTE PTR [edx-0x8afb270],1
  42018c:	bound  ebp,QWORD PTR [ebp-0x7930a333]
  420192:	pusha  
  420193:	iret   
  420194:	ja     0x42019b
  420196:	and    al,0xf3
  420198:	sar    cl,cl
  42019a:	add    eax,0x57950c8a
  42019f:	je     0x420181
  4201a1:	jecxz  0x420183
  4201a3:	movlps xmm6,QWORD PTR [ebx+ebx*1+0x435e5237]
  4201ab:	aaa    
  4201ac:	shr    BYTE PTR [edi],cl
  4201ae:	outs   dx,BYTE PTR ds:[esi]
  4201af:	mov    dh,0xff
  4201b1:	(bad)  
  4201b2:	push   ds
  4201b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201b4:	out    dx,eax
  4201b5:	mov    al,0xd9
  4201b7:	lods   al,BYTE PTR ds:[esi]
  4201b8:	cs int 0xb6
  4201bb:	idiv   DWORD PTR [edx]
  4201bd:	(bad)  
  4201be:	and    BYTE PTR [ebx-0x2897754e],al
  4201c4:	adc    BYTE PTR [esi+0x7544e424],ch
  4201ca:	(bad)  
  4201cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201cc:	out    dx,eax
  4201cd:	(bad)  
  4201ce:	(bad)  
  4201cf:	loope  0x420185
  4201d1:	and    esp,DWORD PTR ds:0x8b387e08
  4201d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201d8:	int    0x11
  4201da:	xchg   edx,eax
  4201db:	cmp    esi,edi
  4201dd:	call   0x24da7be8
  4201e2:	ret    0x784f
  4201e5:	test   bl,dh
  4201e7:	jns    0x4201f7
  4201e9:	mov    eax,ds:0x1240b248
  4201ee:	jbe    0x4201ce
  4201f0:	inc    ah
  4201f2:	ins    DWORD PTR es:[edi],dx
  4201f3:	cmp    al,0xe7
  4201f5:	pop    ss
  4201f6:	xor    BYTE PTR [ebx+0x4699fad0],bl
  4201fc:	xor    BYTE PTR ds:0xfb217f6a,ch
  420202:	inc    ebx
  420203:	push   ds
  420204:	sbb    al,0x5b
  420206:	out    0x69,al
  420208:	movsx  ebx,BYTE PTR [esi+0x29]
  42020c:	xor    ebp,DWORD PTR [edi-0x78183214]
  420212:	xor    BYTE PTR [edi-0x6791d036],dh
  420218:	and    dh,dh
  42021a:	or     BYTE PTR [eax],al
  42021c:	or     al,dh
  42021e:	or     DWORD PTR [eax-0x4d796c4d],esp
  420224:	jecxz  0x42027d
  420226:	xor    DWORD PTR [eax-0x31b392f2],esp
  42022c:	xchg   DWORD PTR [eax],ecx
  42022e:	mov    bh,0xf6
  420230:	ss retf 
  420232:	out    dx,al
  420233:	leave  
  420234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420235:	ins    BYTE PTR es:[edi],dx
  420236:	or     ecx,0xdeabb826
  42023c:	loop   0x420271
  42023e:	bound  eax,QWORD PTR [esi-0x70]
  420241:	cmc    
  420242:	out    dx,eax
  420243:	hlt    
  420244:	retf   0xefd2
  420247:	xchg   edx,eax
  420248:	test   BYTE PTR [edx+0x4866d2d3],bh
  42024e:	shl    BYTE PTR [edi-0x15],1
  420251:	xchg   edx,eax
  420252:	mov    cl,0x59
  420254:	xor    ch,BYTE PTR [edx]
  420256:	and    BYTE PTR [esi-0x4c],bl
  420259:	retf   
  42025a:	pushf  
  42025b:	imul   edi,DWORD PTR [edi-0x46],0xffffffc5
  42025f:	repnz leave 
  420261:	sbb    DWORD PTR [ebx-0x31],eax
  420264:	retf   0x969d
  420267:	(bad)  
  420268:	fucom  st(2)
  42026a:	jnp    0x4201f8
  42026c:	stos   DWORD PTR es:[edi],eax
  42026d:	add    bh,BYTE PTR [edi+0x2b9e1d47]
  420273:	push   0xffffff8d
  420275:	push   esi
  420276:	and    DWORD PTR [esp+edx*4],ebx
  420279:	jnp    0x420265
  42027b:	sub    DWORD PTR [edx-0x2b],esi
  42027e:	repz push cs
  420280:	lock adc al,0x29
  420283:	adc    eax,0x42646da0
  420288:	dec    eax
  420289:	mov    ds,WORD PTR [esi-0x2444e1a1]
  42028f:	repnz icebp 
  420291:	jno    0x4202c7
  420293:	gs fxam 
  420296:	fs clc 
  420298:	and    al,0x3d
  42029a:	jmp    FWORD PTR [edx+0x25152a75]
  4202a0:	or     BYTE PTR [ebx-0x5e],bl
  4202a3:	fs dec ecx
  4202a5:	sub    edx,DWORD PTR [edx+0x47]
  4202a8:	sbb    al,0xf0
  4202aa:	add    ch,BYTE PTR [edi]
  4202ac:	ds pop ecx
  4202ae:	cmp    BYTE PTR [ecx+0x1846ce66],bl
  4202b4:	inc    ecx
  4202b5:	mov    edi,0x32d6858f
  4202ba:	sbb    esp,DWORD PTR [esi-0x42]
  4202bd:	pop    edx
  4202be:	jo     0x42032a
  4202c0:	cs das 
  4202c2:	dec    ebp
  4202c3:	(bad)  
  4202c4:	adc    bh,BYTE PTR [esi]
  4202c6:	jmp    0x420302
  4202c8:	pop    esi
  4202c9:	imul   edi,DWORD PTR [ebx],0x4f
  4202cc:	dec    esi
  4202cd:	add    DWORD PTR [ebp+0x42],0xa1c1aa35
  4202d4:	mov    ds:0x47715eb6,eax
  4202d9:	mov    BYTE PTR [eax],ch
  4202db:	pushf  
  4202dc:	mov    eax,ds:0xaed0c3ca
  4202e1:	mov    cl,0xe3
  4202e3:	mov    ds:0x62046026,al
  4202e8:	cmp    ebx,DWORD PTR [ecx-0x33183efc]
  4202ee:	dec    edi
  4202ef:	retf   0x90d0
  4202f2:	test   BYTE PTR [ebx],ah
  4202f4:	xor    esp,DWORD PTR [eax]
  4202f6:	add    BYTE PTR [esi-0x6c],bh
  4202f9:	test   dh,bh
  4202fb:	pop    esp
  4202fc:	jp     0x420287
  4202fe:	lea    edi,[ebx-0x3c]
  420301:	mov    WORD PTR [esi],es
  420303:	pop    ebx
  420304:	push   ss
  420305:	shl    BYTE PTR [eax-0x61664d95],0x65
  42030c:	pop    esp
  42030d:	les    ebx,FWORD PTR [ebp-0x5e]
  420310:	inc    edx
  420311:	push   edx
  420312:	dec    edi
  420313:	jns    0x4202fc
  420315:	not    DWORD PTR [ebx+0x5a]
  420318:	add    ebp,DWORD PTR ds:0xe2d293b0
  42031e:	lods   al,BYTE PTR ds:[esi]
  42031f:	fsub   QWORD PTR [ebp-0x28]
  420322:	scas   al,BYTE PTR es:[edi]
  420323:	in     eax,dx
  420324:	cdq    
  420325:	sar    BYTE PTR [edi-0x16],0x4f
  420329:	lods   eax,DWORD PTR ds:[esi]
  42032a:	loopne 0x4202d5
  42032c:	in     al,dx
  42032d:	shr    DWORD PTR [esi+0x12],0xc9
  420331:	jno    0x420331
  420333:	sub    al,0x99
  420335:	push   ds
  420336:	sub    al,0xf6
  420338:	dec    eax
  420339:	ins    BYTE PTR es:[edi],dx
  42033a:	mov    eax,ds:0x56388d9a
  42033f:	sub    BYTE PTR [edx+0x10d5565e],bl
  420345:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  420347:	mov    eax,ds:0x53c93e90
  42034c:	add    al,0xff
  42034e:	or     ah,ah
  420350:	mov    WORD PTR [esi],gs
  420352:	or     eax,0xffb5669a
  420357:	fsin   
  420359:	mov    bh,bl
  42035b:	nop
  42035c:	test   DWORD PTR ds:0xa10e8a92,ebx
  420362:	xchg   edi,eax
  420363:	mov    dl,0x92
  420365:	imul   esi,DWORD PTR [ebx],0x5d1f024e
  42036b:	test   BYTE PTR [ebp-0x59],dl
  42036e:	mov    DWORD PTR [edi-0x509e00ea],esp
  420374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420375:	xchg   edx,eax
  420376:	xor    dh,0x35
  420379:	lods   al,BYTE PTR ds:[esi]
  42037a:	push   ebp
  42037b:	fldenv [ecx+eax*4-0x37cec9ce]
  420382:	inc    ebx
  420383:	mov    al,ds:0x80354869
  420388:	xchg   ecx,eax
  420389:	sub    eax,0x8f78b1ce
  42038e:	sbb    al,0x1c
  420390:	jo     0x4203c4
  420392:	xor    ch,BYTE PTR [edi-0x13]
  420395:	test   al,0x3b
  420397:	pushf  
  420398:	sbb    eax,0x88fb2c82
  42039d:	push   ebx
  42039e:	mov    ds:0xeecf9ed1,eax
  4203a3:	push   ds
  4203a4:	push   esp
  4203a5:	sbb    al,0x91
  4203a7:	stos   DWORD PTR es:[edi],eax
  4203a8:	retf   0x2736
  4203ab:	in     al,dx
  4203ac:	pop    ds
  4203ad:	sbb    al,0x48
  4203af:	mov    ebx,0xf383cd8
  4203b4:	mov    ds:0x447d597e,al
  4203b9:	shl    DWORD PTR [ebx-0x11],1
  4203bc:	sahf   
  4203bd:	fsub   QWORD PTR gs:[eax]
  4203c0:	mov    ecx,0xcd3a0e62
  4203c5:	gs popa 
  4203c7:	scas   al,BYTE PTR es:[edi]
  4203c8:	sub    edx,DWORD PTR [edx-0x2c1325e9]
  4203ce:	adc    ah,dh
  4203d0:	dec    ebx
  4203d1:	push   ecx
  4203d2:	mov    eax,ds:0xab9d611c
  4203d7:	dec    edx
  4203d8:	std    
  4203d9:	and    eax,0xeb12f6a7
  4203de:	push   esi
  4203df:	addr16 aaa 
  4203e1:	popa   
  4203e2:	adc    eax,0x3f4b8bc4
  4203e7:	call   0x6ba4023
  4203ec:	popa   
  4203ed:	sub    bh,BYTE PTR [edx+ecx*1]
  4203f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203f1:	and    BYTE PTR [esp+esi*8+0x3a82c8c7],bh
  4203f8:	jnp    0x420384
  4203fa:	pop    ds
  4203fb:	je     0x420422
  4203fd:	stos   DWORD PTR es:[edi],eax
  4203fe:	adc    eax,0x2955c279
  420403:	mov    esp,cs
  420405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420406:	xchg   DWORD PTR [ebx],edi
  420408:	icebp  
  420409:	int3   
  42040a:	sbb    ecx,0x5915494
  420410:	iret   
  420411:	rcr    BYTE PTR [ebp-0x6d],1
  420414:	popa   
  420415:	dec    esi
  420416:	shr    BYTE PTR ds:0xb1b478f9,cl
  42041c:	cmp    al,0xd9
  42041e:	mov    WORD PTR [ecx+ebp*1-0x310efda4],ds
  420425:	fnstsw WORD PTR [ebx+0x68c7f38d]
  42042b:	push   ss
  42042c:	xchg   edi,eax
  42042d:	ret    
  42042e:	push   ss
  42042f:	cmp    eax,ebx
  420431:	inc    edx
  420432:	push   esp
  420433:	pop    ebp
  420434:	bound  eax,QWORD PTR [eax-0x2a]
  420437:	xchg   ebp,eax
  420438:	sbb    ebp,ebp
  42043a:	xor    eax,DWORD PTR [edi+0x2702187c]
  420440:	outs   dx,BYTE PTR ds:[esi]
  420441:	outs   dx,DWORD PTR ds:[esi]
  420442:	jns    0x42048a
  420444:	cmp    esp,DWORD PTR [edx+0x36]
  420447:	js     0x4203df
  420449:	ficomp DWORD PTR [esi-0x7afd045b]
  42044f:	xchg   esp,eax
  420450:	in     eax,0x81
  420452:	pop    ebx
  420453:	sub    DWORD PTR [esi-0x2],0xfffffffa
  420457:	imul   ebp,DWORD PTR [ecx-0x66],0xf1ab46a9
  42045e:	cmp    DWORD PTR [eax-0x2183f21c],esi
  420464:	aas    
  420465:	push   ss
  420466:	fidivr WORD PTR [esi+0x3c]
  420469:	mov    ebp,0x4fb75649
  42046e:	pop    esi
  42046f:	and    al,BYTE PTR [ebx]
  420471:	das    
  420472:	or     eax,0x91e43062
  420477:	mov    dh,0x2a
  420479:	push   ss
  42047a:	and    al,0x31
  42047c:	cmp    esi,DWORD PTR [edx+0x718dc2e]
  420482:	rcr    BYTE PTR [eax-0x3b715d01],0x7c
  420489:	gs out 0xd7,al
  42048c:	pop    ss
  42048d:	idiv   DWORD PTR [eax]
  42048f:	inc    DWORD PTR [edi+0x5c5bf3a6]
  420495:	mov    eax,ebp
  420497:	jo     0x42042f
  420499:	retf   
  42049a:	shl    DWORD PTR [eax-0x56],1
  42049d:	inc    edx
  42049e:	adc    ebx,DWORD PTR [ebx+0x12]
  4204a1:	ja     0x420427
  4204a3:	sub    ah,bh
  4204a5:	call   0xac26:0x10caded6
  4204ac:	outs   dx,BYTE PTR ds:[esi]
  4204ad:	jbe    0x420436
  4204af:	jge    0x420496
  4204b1:	sbb    BYTE PTR [ecx],0xd0
  4204b4:	test   BYTE PTR [ecx+0x7],cl
  4204b7:	adc    eax,0x907271f5
  4204bc:	ds cld 
  4204be:	fimul  DWORD PTR [edi]
  4204c0:	sbb    eax,0xaf51b857
  4204c5:	mov    ch,cl
  4204c7:	adc    ah,BYTE PTR [edi]
  4204c9:	test   BYTE PTR [edi+0x3686ab2d],ch
  4204cf:	sbb    ecx,0xffffffc5
  4204d2:	sbb    eax,0xef9c7e6
  4204d7:	pop    DWORD PTR ds:0x89fe01f6
  4204dd:	and    BYTE PTR es:[eax+edi*4],bh
  4204e1:	iret   
  4204e2:	pop    ecx
  4204e3:	cs pop ss
  4204e5:	or     DWORD PTR [ecx+0x6d2a3153],0xffffffed
  4204ec:	ficom  WORD PTR [ecx*8+0x614de382]
  4204f3:	add    esp,ecx
  4204f5:	aas    
  4204f6:	cmp    al,0xef
  4204f8:	(bad)  
  4204fa:	and    BYTE PTR [edx-0x15],al
  4204fd:	cdq    
  4204fe:	mov    edi,0x442642e9
  420503:	mov    bh,0x18
  420505:	arpl   WORD PTR [ebp-0x14],ax
  420508:	jmp    FWORD PTR [esi+0x16ffe1e]
  42050e:	jg     0x4204a1
  420510:	mov    ebx,0x764bb35d
  420515:	xor    BYTE PTR [ecx-0x4edf30ab],cl
  42051b:	push   0x37
  42051d:	aas    
  42051e:	sub    ebp,DWORD PTR [esi-0x38]
  420521:	dec    ebx
  420522:	adc    esi,DWORD PTR [ebx*4-0x77554036]
  420529:	push   eax
  42052a:	js     0x42057b
  42052c:	(bad)  
  42052d:	fcom   QWORD PTR [ecx+0x41674e5]
  420533:	dec    esp
  420534:	cmp    ebx,DWORD PTR [edx+0x75991bd]
  42053a:	fbstp  TBYTE PTR [esi+0xb]
  42053d:	pop    ebx
  42053e:	sbb    BYTE PTR [ebx-0x6df265b3],ch
  420544:	add    cl,ah
  420546:	loop   0x420579
  420548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420549:	fild   QWORD PTR [ebp+0x70]
  42054c:	push   esi
  42054d:	xchg   ebx,eax
  42054e:	push   ds
  42054f:	mov    ah,0x96
  420551:	xchg   ebx,eax
  420552:	fadd   QWORD PTR [ecx+eax*2+0x75]
  420556:	addr16 in al,0x29
  420559:	fisttp DWORD PTR [eax-0x35]
  42055c:	pop    ecx
  42055d:	mul    edx
  42055f:	mov    al,0x59
  420561:	retf   0x2459
  420564:	xchg   esi,eax
  420565:	sbb    bx,ax
  420568:	sar    BYTE PTR [ecx],0xd2
  42056b:	mov    BYTE PTR [edx-0x3b],cl
  42056e:	sbb    al,BYTE PTR [bp+di+0x575f]
  420573:	jae    0x420558
  420575:	or     DWORD PTR [edi+0x68],0x2e3a014
  42057c:	mov    eax,ds:0x73d0d5ca
  420581:	push   ds
  420582:	ins    DWORD PTR es:[edi],dx
  420583:	or     eax,DWORD PTR [edx]
  420585:	aas    
  420586:	pop    ecx
  420587:	arpl   WORD PTR [edx+0x294b5207],si
  42058d:	jo     0x42058d
  42058f:	or     al,0x41
  420591:	xchg   BYTE PTR [ebp+0x3c],cl
  420594:	pop    ds
  420595:	jmp    0xd716:0xe5b9ee20
  42059c:	adc    ebx,0xcdf9b112
  4205a2:	sbb    cl,BYTE PTR [edi-0x1e]
  4205a5:	idiv   BYTE PTR [edi+0x4f]
  4205a8:	out    dx,al
  4205a9:	xchg   ebp,eax
  4205aa:	fmulp  st(6),st
  4205ac:	mov    dh,0x49
  4205ae:	cmp    DWORD PTR [edi+0x34cbcf5f],ecx
  4205b4:	shr    BYTE PTR fs:[eax+ebp*1+0x29ba43b6],cl
  4205bc:	sub    WORD PTR [ebp+0x1e2bf231],ax
  4205c3:	mov    WORD PTR [ecx+0x26257d4b],?
  4205c9:	push   ss
  4205ca:	rol    BYTE PTR [ecx+esi*1],0xe4
  4205ce:	or     eax,DWORD PTR [edi]
  4205d0:	int3   
  4205d1:	pop    ebp
  4205d2:	repz pop edi
  4205d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205d5:	pop    edx
  4205d6:	stc    
  4205d7:	or     BYTE PTR [eax-0x163d4b97],al
  4205dd:	push   ecx
  4205de:	pop    edi
  4205df:	xor    eax,0x84389b7c
  4205e4:	fldcw  WORD PTR [ecx-0x78]
  4205e7:	loopne 0x420644
  4205e9:	sub    BYTE PTR [edi],bh
  4205eb:	popa   
  4205ec:	pop    edi
  4205ed:	cdq    
  4205ee:	adc    ebp,DWORD PTR [eax]
  4205f0:	mov    ch,BYTE PTR [ebx+eiz*1]
  4205f3:	mov    dl,0x8c
  4205f5:	sub    DWORD PTR [eax-0x334273ab],edi
  4205fb:	jns    0x4205c3
  4205fd:	adc    dh,BYTE PTR [edi+eax*4-0x42590441]
  420604:	push   ds
  420605:	fidivr DWORD PTR [esi-0x41]
  420608:	xlat   BYTE PTR ds:[ebx]
  420609:	xchg   esp,eax
  42060a:	and    eax,edi
  42060c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42060d:	addr16 std 
  42060f:	xchg   esp,eax
  420610:	jo     0x4205cf
  420612:	dec    esp
  420613:	and    al,0x2b
  420615:	out    dx,eax
  420616:	std    
  420617:	inc    ecx
  420618:	adc    bl,BYTE PTR [ecx+0x52]
  42061b:	add    esp,edi
  42061d:	add    al,0xee
  42061f:	xchg   edx,eax
  420620:	pop    ebx
  420621:	lds    eax,FWORD PTR [esi]
  420623:	and    al,0x42
  420625:	idiv   BYTE PTR [ebx+0x5615b24a]
  42062b:	mov    edi,DWORD PTR [ecx]
  42062d:	test   al,0x9e
  42062f:	fimul  WORD PTR [esp+edi*2+0x3ed24d9e]
  420636:	mov    cl,0xb6
  420638:	mov    ebp,edx
  42063a:	cld    
  42063b:	in     eax,0x75
  42063d:	cwde   
  42063e:	mov    ebx,0x47e12d91
  420643:	scas   eax,DWORD PTR es:[edi]
  420644:	mov    WORD PTR [eax+eax*2-0x2b],gs
  420648:	ins    DWORD PTR es:[edi],dx
  420649:	fwait
  42064a:	jmp    0x742aa91c
  42064f:	mov    ebp,0xa583db8a
  420654:	cdq    
  420655:	xor    BYTE PTR [ebx+0x61],ah
  420658:	leave  
  420659:	popf   
  42065a:	adc    edi,DWORD PTR [ecx+eiz*4]
  42065d:	ins    BYTE PTR es:[edi],dx
  42065e:	jle    0x420637
  420660:	sahf   
  420661:	cmp    DWORD PTR [esi+0x7e],ebx
  420664:	sbb    BYTE PTR [edi-0x1a680b1f],ah
  42066a:	mul    DWORD PTR [ecx+0xe]
  42066d:	rcl    esi,1
  42066f:	adc    edx,DWORD PTR [ebp-0x50a2608e]
  420675:	cld    
  420676:	lods   eax,DWORD PTR ss:[esi]
  420678:	xor    eax,0xfa52084
  42067d:	or     DWORD PTR [esi],edx
  42067f:	mov    ds:0xf572a4d4,al
  420684:	push   ds
  420685:	outs   dx,BYTE PTR ds:[esi]
  420686:	bswap  edi
  420688:	test   al,0x14
  42068a:	jp     0x4206c0
  42068c:	sbb    DWORD PTR [esi-0x78],ebx
  42068f:	div    BYTE PTR [ebx+0x3a1babd3]
  420695:	sub    BYTE PTR [esi],al
  420697:	dec    esp
  420698:	pop    eax
  420699:	dec    ecx
  42069a:	call   0x700a:0x54fd4945
  4206a1:	mov    ch,0x8e
  4206a3:	push   cs
  4206a4:	adc    DWORD PTR [edx+ebp*1-0x4da1214c],ebp
  4206ab:	jle    0x4206bf
  4206ad:	mov    dh,BYTE PTR [edi+0x4146d80b]
  4206b3:	popa   
  4206b4:	or     esp,DWORD PTR [ecx-0x36]
  4206b7:	retf   
  4206b8:	xchg   esp,eax
  4206b9:	mov    BYTE PTR [ebp+0x6f],dh
  4206bc:	mov    esp,DWORD PTR [ebx+0x17ba439e]
  4206c2:	pop    ecx
  4206c3:	mov    dl,0x83
  4206c5:	test   BYTE PTR [ebp-0x80],0x7c
  4206c9:	pop    edx
  4206ca:	dec    ecx
  4206cb:	and    cl,0xc8
  4206ce:	fld    DWORD PTR [ebp+0x40]
  4206d1:	jb     0x4206a1
  4206d3:	not    BYTE PTR [ecx-0xedccc7f]
  4206d9:	cmp    BYTE PTR [edx],bl
  4206db:	(bad)  
  4206dc:	sbb    BYTE PTR [ebx+0x61dffcd5],ch
  4206e2:	inc    ecx
  4206e3:	fild   DWORD PTR [ebp-0x6ddca4c]
  4206e9:	ins    BYTE PTR es:[edi],dx
  4206ea:	std    
  4206eb:	xlat   BYTE PTR ds:[ebx]
  4206ec:	ss push eax
  4206ee:	jmp    0x42069f
  4206f0:	jle    0x420742
  4206f2:	sub    bl,0x12
  4206f5:	scas   eax,DWORD PTR es:[di]
  4206f7:	jl     0x420680
  4206f9:	jb     0x42075a
  4206fb:	mov    fs:0x542491e1,eax
  420701:	xor    edx,DWORD PTR [eax-0x59ad5d28]
  420707:	push   edi
  420708:	jp     0x420755
  42070a:	sbb    al,0xd5
  42070c:	sbb    eax,0xe388844a
  420711:	imul   esp,DWORD PTR [edx-0x7c],0x27
  420715:	inc    esi
  420716:	div    BYTE PTR [ebp+0x3]
  420719:	add    BYTE PTR [ecx+0x28e0f09f],0x4b
  420720:	fnstcw WORD PTR [eax-0x4d]
  420723:	lock (bad) 
  420725:	push   ds
  420726:	inc    edi
  420727:	sbb    al,0x33
  420729:	ret    
  42072a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42072b:	fild   QWORD PTR [edx-0x5a]
  42072e:	adc    dh,0xc8
  420731:	xchg   esi,eax
  420732:	xchg   ebx,eax
  420733:	inc    ecx
  420734:	pop    edi
  420735:	inc    esp
  420736:	xor    DWORD PTR [edx-0x777fd9bd],ecx
  42073c:	mov    ds,WORD PTR ds:0xe2c444b
  420742:	fidivr WORD PTR [ebx]
  420744:	outs   dx,DWORD PTR ds:[esi]
  420745:	nop
  420746:	lods   eax,DWORD PTR ds:[esi]
  420747:	and    ebp,DWORD PTR [ebx]
  420749:	clc    
  42074a:	cmc    
  42074b:	pop    ebp
  42074c:	or     al,0xa4
  42074e:	xchg   BYTE PTR [eax+0xf],dl
  420751:	neg    BYTE PTR [ebx*4-0x1cb7bb72]
  420758:	dec    edi
  420759:	popf   
  42075a:	out    dx,al
  42075b:	repnz inc ebp
  42075d:	push   eax
  42075e:	(bad)  
  42075f:	dec    edi
  420760:	sbb    al,0x93
  420762:	mov    dl,0x8b
  420764:	fwait
  420765:	jbe    0x42079b
  420767:	jno    0x420759
  420769:	out    0xf5,eax
  42076b:	lock stos BYTE PTR es:[edi],al
  42076d:	(bad)  
  42076e:	mov    ebp,0x49640e05
  420773:	aad    0x41
  420775:	mov    ds:0xc51fbd56,al
  42077a:	outs   dx,DWORD PTR ds:[esi]
  42077b:	cli    
  42077c:	pop    edx
  42077d:	jmp    0x69f059aa
  420782:	retf   0xe8b7
  420785:	ret    0x508c
  420788:	retf   0xc061
  42078b:	ficomp DWORD PTR ds:0xb56f7767
  420791:	push   ebp
  420792:	cld    
  420793:	mov    bl,0x81
  420795:	xchg   cl,cl
  420797:	(bad)  
  420798:	mov    ah,0x27
  42079a:	mov    bl,0x22
  42079c:	mov    ss,WORD PTR [ebx-0x7966e02e]
  4207a2:	(bad)  
  4207a3:	fld    TBYTE PTR [esp+ebp*1]
  4207a6:	test   al,0xd1
  4207a8:	jns    0x420765
  4207aa:	inc    edx
  4207ab:	push   0xffffffac
  4207ad:	xlat   BYTE PTR ds:[ebx]
  4207ae:	inc    ebx
  4207af:	fdivr  st,st(0)
  4207b1:	add    ebp,DWORD PTR [eax+eax*8+0x56]
  4207b5:	dec    ebp
  4207b6:	cli    
  4207b7:	in     eax,0x38
  4207b9:	cmp    eax,0xc539795c
  4207be:	cld    
  4207bf:	imul   esi,DWORD PTR [ecx+0x645b8fa9],0x4a
  4207c6:	lods   al,BYTE PTR ds:[esi]
  4207c7:	pop    ebp
  4207c8:	or     BYTE PTR [ecx+0x2e408b1f],ah
  4207ce:	and    BYTE PTR [eax-0x406f67cb],ch
  4207d4:	cmp    al,0x18
  4207d6:	into   
  4207d7:	push   ebx
  4207d8:	mov    eax,ds:0x1e7457d7
  4207dd:	or     bh,bh
  4207df:	jne    0x42081b
  4207e1:	stos   BYTE PTR es:[edi],al
  4207e2:	ret    0x88f8
  4207e5:	jmp    0x420855
  4207e7:	sub    cl,BYTE PTR [eax]
  4207e9:	add    cl,BYTE PTR gs:[ebx]
  4207ec:	or     al,BYTE PTR [ebx]
  4207ee:	and    edi,ecx
  4207f0:	mov    eax,0x443c4ef0
  4207f5:	pushw  cs
  4207f7:	jnp    0x4207bf
  4207f9:	adc    cl,BYTE PTR [ebx+0xa]
  4207fc:	mov    ds,ecx
  4207fe:	adc    bh,BYTE PTR [esp+ebx*2-0x4e]
  420802:	call   FWORD PTR [eax+0x18]
  420805:	(bad)  
  420806:	jmp    FWORD PTR [ecx-0x11]
  420809:	sbb    eax,DWORD PTR [ebx+0xa]
  42080c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42080d:	or     ebp,DWORD PTR [ebp+0x1b5e4a65]
  420813:	pop    edx
  420814:	xchg   edx,eax
  420815:	dec    ebp
  420816:	les    eax,FWORD PTR [edx+0x11]
  420819:	aaa    
  42081a:	or     DWORD PTR [esi-0xde3884e],ecx
  420820:	(bad)  
  420821:	out    0xb0,eax
  420823:	dec    ebp
  420824:	dec    BYTE PTR [ebx+0x180c4222]
  42082a:	(bad)  
  42082b:	shl    DWORD PTR [eax],cl
  42082d:	dec    eax
  42082e:	loop   0x4207d8
  420830:	int    0xf
  420832:	not    DWORD PTR [ebx]
  420834:	outs   dx,BYTE PTR ds:[esi]
  420835:	and    eax,0xfacbc4d5
  42083a:	or     eax,0x77e98988
  42083f:	jge    0x42086f
  420841:	push   es
  420842:	pop    ebx
  420843:	in     eax,0xae
  420845:	dec    dl
  420847:	lds    ebx,FWORD PTR [esp+esi*2+0x4959f83b]
  42084e:	jnp    0x420844
  420850:	sti    
  420851:	and    al,BYTE PTR [ebx]
  420853:	ins    DWORD PTR es:[edi],dx
  420854:	inc    esi
  420855:	mov    dh,BYTE PTR [ebx-0x6]
  420858:	sub    edi,DWORD PTR [edx-0x23]
  42085b:	jo     0x4208bf
  42085d:	xor    DWORD PTR [ebx],esi
  42085f:	out    0x82,al
  420861:	ds pop ebx
  420863:	cmp    eax,0xe74e6111
  420868:	mov    WORD PTR [ebx-0x6b337272],ss
  42086e:	outs   dx,DWORD PTR ds:[esi]
  42086f:	pop    ecx
  420870:	ret    0x4d38
  420873:	inc    esi
  420874:	clc    
  420875:	inc    ebp
  420876:	add    edi,DWORD PTR [ecx-0x33]
  420879:	xor    al,0x24
  42087b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42087c:	fnsave [ecx-0x564cfcb2]
  420882:	push   0x35
  420884:	div    BYTE PTR [edi]
  420886:	sbb    al,al
  420888:	xchg   esi,eax
  420889:	fsubr  DWORD PTR [ecx-0x45b0bb4b]
  42088f:	sahf   
  420890:	mov    esi,0xcea0e3ca
  420895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420896:	pop    es
  420897:	cwde   
  420898:	sub    al,0xf0
  42089a:	and    edi,ecx
  42089c:	mov    dh,cl
  42089e:	rol    ah,cl
  4208a0:	fiadd  DWORD PTR [edi-0x675daa75]
  4208a6:	or     al,0xc5
  4208a9:	mov    cl,0xac
  4208ab:	jb     0x420914
  4208ad:	xchg   edx,eax
  4208ae:	mov    dl,0x5e
  4208b0:	fbld   TBYTE PTR [ebx]
  4208b2:	test   DWORD PTR [edx-0x17],ebx
  4208b5:	jmp    0x2bfc130f
  4208ba:	out    0x2,eax
  4208bc:	in     al,0x26
  4208be:	push   0x9d1c813a
  4208c3:	arpl   WORD PTR [ebx+0x1c2ff95a],bp
  4208c9:	jmp    0x1633dfe5
  4208ce:	rol    DWORD PTR [ebx],1
  4208d0:	xor    eax,0x37086ddd
  4208d5:	js     0x420859
  4208d7:	ja     0x4208f2
  4208d9:	rol    BYTE PTR [ecx*8+0x4681ea20],cl
  4208e0:	push   ds
  4208e1:	pushf  
  4208e2:	mov    ch,al
  4208e4:	(bad)  
  4208e5:	or     eax,0x29761e31
  4208ea:	clc    
  4208eb:	xchg   edi,eax
  4208ec:	dec    esp
  4208ed:	inc    eax
  4208ee:	(bad)  
  4208f0:	and    BYTE PTR [eax+0x6cf1a806],cl
  4208f6:	xchg   esi,eax
  4208f7:	in     eax,0x83
  4208f9:	fs mov dl,0x45
  4208fc:	xor    BYTE PTR ds:0xd7194cd3,ch
  420902:	pusha  
  420903:	pop    DWORD PTR [edi-0x3d897128]
  420909:	push   0xffffffb4
  42090b:	je     0x420977
  42090d:	dec    esp
  42090e:	jge    0x4208cd
  420910:	(bad)  
  420911:	cmp    al,0x1b
  420913:	adc    dl,dh
  420915:	repz add BYTE PTR [ebx-0x1c],cl
  420919:	sbb    DWORD PTR [ebx-0x11],eax
  42091c:	test   DWORD PTR [esp+eax*2],esp
  42091f:	cwde   
  420920:	hlt    
  420921:	push   es
  420922:	and    al,0x10
  420924:	nop
  420925:	push   cs
  420926:	das    
  420927:	aaa    
  420928:	ret    0xe2fd
  42092b:	sbb    eax,0xf571d266
  420930:	xchg   ecx,eax
  420931:	aam    0xf6
  420933:	push   esi
  420934:	std    
  420935:	mov    ebp,0x1c4026d7
  42093a:	dec    ebx
  42093b:	sub    cl,dl
  42093d:	adc    eax,DWORD PTR [esi+0x7d]
  420940:	mov    ah,0xb1
  420942:	dec    esp
  420943:	and    al,0x6
  420945:	test   DWORD PTR [esp+eiz*8],edi
  420948:	xchg   ebp,eax
  420949:	pop    es
  42094a:	fisub  DWORD PTR [ebp+ebp*4+0xe]
  42094e:	std    
  42094f:	mov    ebx,0xd5062e1d
  420954:	xchg   edi,eax
  420955:	mov    eax,ds:0xd53d565e
  42095a:	and    esp,esi
  42095c:	js     0x4208e8
  42095e:	inc    edx
  42095f:	bound  ebx,QWORD PTR [ecx]
  420961:	xor    al,0x80
  420963:	stc    
  420964:	fs adc ebx,esi
  420967:	sbb    bh,BYTE PTR [ebp-0x3c]
  42096a:	mov    esi,0xe228b41f
  42096f:	dec    ebp
  420970:	push   ebp
  420971:	mov    ah,0xef
  420973:	jne    0x42099a
  420975:	sbb    al,BYTE PTR [esi+0x14]
  420978:	jno    0x420935
  42097a:	pop    ebp
  42097b:	push   esp
  42097c:	cs call 0x2e23:0x54ee35e5
  420984:	mov    esi,0x797e363d
  420989:	adc    cl,BYTE PTR [ecx+0x2cdd39b4]
  42098f:	lods   al,BYTE PTR ds:[esi]
  420990:	push   0xffffff99
  420992:	mov    bl,0x50
  420994:	scas   eax,DWORD PTR es:[edi]
  420995:	call   0xe273:0x64a7946f
  42099c:	pusha  
  42099d:	dec    ebp
  42099e:	mov    cl,0xaa
  4209a0:	and    eax,DWORD PTR [eax+0x1fcba513]
  4209a6:	lods   eax,DWORD PTR ds:[esi]
  4209a7:	xor    bh,BYTE PTR [ebx+0x67b0a75f]
  4209ad:	(bad)  
  4209ae:	out    0x76,al
  4209b0:	and    ebx,ebx
  4209b2:	shl    DWORD PTR [esi-0x37e27417],0x5f
  4209b9:	dec    ebx
  4209ba:	ins    BYTE PTR es:[edi],dx
  4209bb:	in     eax,dx
  4209bc:	and    bh,BYTE PTR [ebx+ebp*1-0x16398611]
  4209c3:	and    DWORD PTR [esi+0x336a20d2],ebp
  4209c9:	clc    
  4209ca:	outs   dx,DWORD PTR ds:[esi]
  4209cb:	stos   BYTE PTR es:[edi],al
  4209cc:	out    0xcc,al
  4209ce:	and    BYTE PTR [edi+0x79be81f2],dl
  4209d4:	or     ah,bh
  4209d6:	adc    ch,BYTE PTR [ebp+0x5f]
  4209d9:	fmul   st(2),st
  4209db:	mov    esp,0x35396d54
  4209e0:	inc    eax
  4209e1:	out    0xab,al
  4209e3:	retf   0xd35b
  4209e6:	shl    cl,0xe7
  4209e9:	pop    ds
  4209ea:	push   cs
  4209eb:	rol    DWORD PTR [eax+ebp*1-0x69],0x45
  4209f0:	lods   eax,DWORD PTR ds:[esi]
  4209f1:	pop    edx
  4209f2:	inc    ecx
  4209f3:	push   edx
  4209f4:	popf   
  4209f5:	mov    ?,WORD PTR [eax+0x5]
  4209f8:	xchg   edx,eax
  4209f9:	outs   dx,DWORD PTR ds:[esi]
  4209fa:	mov    esp,0x8b1b88a0
  4209ff:	pop    es
  420a00:	stc    
  420a01:	lahf   
  420a02:	addr16 mov eax,0xd17c17c1
  420a08:	push   cs
  420a09:	sti    
  420a0a:	xchg   ebp,eax
  420a0b:	test   al,0xe0
  420a0d:	jmp    0x420a72
  420a0f:	js     0x420a3a
  420a11:	into   
  420a12:	fmul   st,st(6)
  420a14:	in     eax,dx
  420a15:	xchg   ecx,eax
  420a16:	(bad)  
  420a17:	or     ebp,edx
  420a19:	add    esi,edx
  420a1b:	inc    eax
  420a1c:	enter  0x74a8,0x60
  420a20:	hlt    
  420a21:	retf   0x8f7d
  420a24:	sub    BYTE PTR [ebx+ebx*1],bl
  420a27:	fcom   DWORD PTR [eax+0x16]
  420a2a:	adc    eax,DWORD PTR [edx-0x199bb31d]
  420a30:	dec    edx
  420a31:	mov    DWORD PTR [ebp+0x5a],edx
  420a34:	inc    edx
  420a35:	(bad)  gs:[ebx+0x3e5c92b8]
  420a3c:	fisttp WORD PTR [esi]
  420a3e:	xchg   esp,eax
  420a3f:	xor    al,0xa4
  420a41:	and    al,0xc
  420a43:	xchg   DWORD PTR [ecx],edx
  420a45:	mov    bh,0xe8
  420a47:	pop    esi
  420a48:	jecxz  0x420ab1
  420a4a:	scas   al,BYTE PTR es:[edi]
  420a4b:	je     0x420a5e
  420a4d:	mov    ebx,0x9a3f3479
  420a52:	out    dx,eax
  420a53:	je     0x420a17
  420a55:	mov    bh,0x85
  420a57:	nop
  420a58:	icebp  
  420a59:	fstp   TBYTE PTR [esi-0x703e20cd]
  420a5f:	push   0x2e051c36
  420a64:	jae    0x420a72
  420a66:	mov    eax,ds:0xc03f0ea3
  420a6b:	sbb    al,0xa3
  420a6d:	outs   dx,DWORD PTR ds:[esi]
  420a6e:	retf   
  420a6f:	mov    edi,0x20765365
  420a74:	or     cl,ah
  420a76:	mov    BYTE PTR [edx+0x43],al
  420a79:	dec    esi
  420a7a:	je     0x420add
  420a7c:	mov    fs,ecx
  420a7e:	scas   al,BYTE PTR es:[edi]
  420a7f:	ja     0x420a16
  420a81:	sbb    esi,DWORD PTR ds:0x14368849
  420a87:	jmp    0x7d26:0x9ea9e308
  420a8e:	nop
  420a8f:	fnstenv [edi-0x4b1e1c76]
  420a95:	and    al,0xb0
  420a97:	leave  
  420a98:	xchg   bp,ax
  420a9a:	push   eax
  420a9b:	fistp  DWORD PTR [ebx]
  420a9d:	mov    dh,0x94
  420a9f:	dec    esp
  420aa0:	(bad)  
  420aa2:	fs aad 0x63
  420aa5:	aam    0x28
  420aa7:	(bad)  
  420aa8:	xchg   edi,eax
  420aa9:	cmp    BYTE PTR [ebx-0x61],dh
  420aac:	ja     0x420a87
  420aae:	or     DWORD PTR [esi-0x3bbb2d32],esp
  420ab4:	sahf   
  420ab5:	hlt    
  420ab6:	sub    edx,ecx
  420ab8:	popf   
  420ab9:	push   ds
  420aba:	and    eax,0xff18831
  420abf:	push   eax
  420ac0:	xlat   BYTE PTR ds:[ebx]
  420ac1:	mov    cl,0x25
  420ac3:	jle    0x420ae2
  420ac5:	or     al,0x9c
  420ac7:	retf   0x2ca
  420aca:	sti    
  420acb:	jne    0x420b0e
  420acd:	xchg   ebx,eax
  420ace:	in     al,dx
  420acf:	add    eax,0x202cc344
  420ad4:	mov    bl,0x40
  420ad6:	sbb    dl,BYTE PTR [edi]
  420ad8:	jno    0x420ab1
  420ada:	mov    BYTE PTR gs:[eax+eiz*1],ah
  420ade:	xor    al,0xdf
  420ae0:	pop    eax
  420ae1:	sub    dh,BYTE PTR [ebx+esi*2]
  420ae4:	jmp    0x3d750954
  420ae9:	or     ah,BYTE PTR [esi]
  420aeb:	aad    0x63
  420aed:	loope  0x420b42
  420aef:	add    dh,BYTE PTR ds:0x8ebdfae2
  420af5:	outs   dx,BYTE PTR ds:[esi]
  420af6:	dec    eax
  420af7:	mov    cl,0x25
  420af9:	cld    
  420afa:	mov    ds:0x8fe11f42,al
  420aff:	pmaxub mm0,QWORD PTR [eax+ecx*1]
  420b03:	push   0x3a
  420b05:	in     eax,dx
  420b06:	icebp  
  420b07:	sti    
  420b08:	push   cs
  420b09:	sbb    eax,0x71fb9933
  420b0e:	pop    ebp
  420b0f:	mov    bl,0xd2
  420b11:	jecxz  0x420b69
  420b13:	cmp    DWORD PTR [ebx-0xb2b2cd7],esi
  420b19:	xor    al,0x33
  420b1b:	call   0x148c:0xcd5decaa
  420b22:	dec    edi
  420b23:	sub    DWORD PTR ds:0x63847dfa,0x2
  420b2a:	cs and edi,ebp
  420b2d:	cmp    BYTE PTR [esi-0x67f2a09a],ch
  420b33:	inc    eax
  420b34:	sub    eax,DWORD PTR [edi+0x61754bb5]
  420b3a:	out    0x50,eax
  420b3c:	imul   edx,DWORD PTR [edx+0x318b044e],0xb57be69e
  420b46:	repnz (bad) 
  420b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b4b:	scas   al,BYTE PTR es:[edi]
  420b4c:	in     al,0x2f
  420b4e:	cmp    BYTE PTR [eax+0x4f],0x34
  420b52:	cmp    al,0x3
  420b54:	mov    ds:0xd8919c2d,eax
  420b59:	repz sbb ah,al
  420b5c:	inc    edx
  420b5d:	sbb    al,0x35
  420b5f:	imul   esi,edi,0xe683825
  420b65:	stos   BYTE PTR es:[edi],al
  420b66:	scas   eax,DWORD PTR es:[edi]
  420b67:	gs jl  0x420b58
  420b6a:	pop    es
  420b6b:	inc    ecx
  420b6c:	pop    esi
  420b6e:	add    ah,BYTE PTR [eax]
  420b70:	inc    edx
  420b71:	ins    BYTE PTR es:[edi],dx
  420b72:	mov    DWORD PTR ds:[ebx-0x7e0219f],eax
  420b79:	inc    ecx
  420b7a:	repz and ecx,DWORD PTR [edi+0x6a74fa26]
  420b81:	dec    eax
  420b82:	fdiv   DWORD PTR [ecx+0x67]
  420b85:	inc    ebx
  420b86:	mov    eax,0xcc245133
  420b8b:	mov    bh,0xa
  420b8d:	jecxz  0x420b27
  420b8f:	add    BYTE PTR ds:0x33ab73ca,ch
  420b95:	jmp    0xd972:0xedf151f3
  420b9c:	jp     0x420b68
  420b9e:	mov    eax,0x6f5b093c
  420ba3:	clc    
  420ba4:	lea    edi,[edx]
  420ba6:	dec    BYTE PTR [edx]
  420ba8:	test   DWORD PTR [ebp-0x9],edi
  420bab:	pusha  
  420bac:	enter  0x78a3,0x34
  420bb0:	test   BYTE PTR [eax+0x43159e83],ah
  420bb6:	out    0x92,al
  420bb8:	push   ebx
  420bb9:	push   ds
  420bba:	inc    esi
  420bbb:	aad    0x4c
  420bbd:	adc    BYTE PTR [edx-0x1dfb2bbd],cl
  420bc3:	mov    al,0xc8
  420bc5:	xchg   DWORD PTR [edi-0x703bb6be],esi
  420bcb:	lods   al,BYTE PTR ds:[esi]
  420bcc:	(bad)  
  420bcd:	out    dx,al
  420bce:	(bad)
  420bd2:	in     eax,dx
  420bd3:	add    bl,ah
  420bd5:	loope  0x420b67
  420bd7:	test   DWORD PTR [esi],esi
  420bd9:	add    eax,0xf32102dc
  420bde:	inc    eax
  420bdf:	sar    DWORD PTR [edx-0x59440ae5],0xc
  420be6:	mov    esp,0x74ab0075
  420beb:	cmp    BYTE PTR cs:[edi-0x70],0x59
  420bf0:	add    BYTE PTR [edx+0x48d9a8c],ah
  420bf6:	cmp    eax,edx
  420bf8:	dec    ebx
  420bf9:	daa    
  420bfa:	cld    
  420bfb:	mov    BYTE PTR [ebx+0x352f6207],0x71
  420c02:	mov    ds:0xdebb3b3c,eax
  420c07:	push   esp
  420c08:	sbb    al,0x5b
  420c0a:	aad    0x45
  420c0c:	cdq    
  420c0d:	aaa    
  420c0e:	int3   
  420c0f:	mov    bh,0x27
  420c11:	push   ss
  420c12:	jecxz  0x420bd5
  420c14:	mov    eax,ds:0x865fc003
  420c19:	sar    BYTE PTR [ecx+0x6806ef44],0x3e
  420c20:	pop    edi
  420c21:	arpl   WORD PTR [edx],si
  420c23:	pop    esi
  420c24:	clc    
  420c25:	push   esp
  420c26:	clc    
  420c27:	fstp   TBYTE PTR [ebp+0x164dac42]
  420c2d:	dec    edi
  420c2e:	xchg   ecx,eax
  420c2f:	cmp    esp,ebp
  420c31:	into   
  420c32:	(bad)  
  420c33:	mov    ebx,0xeb224184
  420c38:	cdq    
  420c39:	sbb    eax,DWORD PTR [esi]
  420c3b:	dec    esp
  420c3c:	xor    DWORD PTR [ecx],esp
  420c3e:	fnstsw WORD PTR [ecx-0x77]
  420c41:	scas   al,BYTE PTR es:[edi]
  420c42:	mov    edx,0x719f367d
  420c47:	in     eax,0xa6
  420c49:	pop    ss
  420c4a:	inc    ebx
  420c4b:	call   DWORD PTR [esi]
  420c4d:	call   0x14bd:0x8aa2aceb
  420c54:	sbb    ebx,DWORD PTR [edx+eiz*1+0x2e]
  420c58:	inc    edi
  420c59:	jp     0x420c4e
  420c5b:	mov    ecx,0x664c6279
  420c60:	and    al,0xf1
  420c62:	sub    DWORD PTR [ebp-0x53],ecx
  420c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c66:	push   ds
  420c67:	dec    eax
  420c68:	push   ss
  420c69:	cmc    
  420c6a:	mov    eax,0xb9d7dd92
  420c6f:	sahf   
  420c70:	les    esp,FWORD PTR [ebp-0x48dc80f4]
  420c76:	ins    DWORD PTR es:[edi],dx
  420c77:	jp     0x420c71
  420c79:	inc    edi
  420c7a:	xchg   ebx,eax
  420c7b:	sbb    BYTE PTR [ecx+edx*1-0x6],0x67
  420c80:	mov    ?,WORD PTR [esi]
  420c82:	fidivr WORD PTR [ebx+0x34]
  420c85:	pusha  
  420c86:	outs   dx,BYTE PTR ds:[esi]
  420c87:	cmc    
  420c88:	dec    edx
  420c89:	add    BYTE PTR [ebx-0x26],dl
  420c8c:	add    DWORD PTR [ebp+0x1f],esp
  420c8f:	add    eax,0x912f2eb7
  420c94:	jo     0x420cea
  420c96:	les    esi,FWORD PTR [eax-0x44]
  420c99:	mov    dh,0xda
  420c9b:	ret    0x9106
  420c9e:	(bad)  
  420c9f:	out    dx,al
  420ca0:	dec    esp
  420ca1:	jmp    0x1733:0xba017aeb
  420ca8:	push   ds
  420ca9:	sbb    ecx,ebp
  420cab:	(bad)  
  420cac:	retf   
  420cad:	outs   dx,DWORD PTR ds:[esi]
  420cae:	jno    0x420c3e
  420cb0:	xor    al,0x43
  420cb2:	ins    DWORD PTR es:[edi],dx
  420cb3:	sbb    BYTE PTR ds:0xe0bbca45,dh
  420cb9:	retf   0x582a
  420cbc:	push   0x79
  420cbe:	xor    dl,cl
  420cc0:	push   cs
  420cc1:	dec    eax
  420cc2:	int    0x92
  420cc4:	repnz sar BYTE PTR [ecx+eax*2-0x187dcccf],1
  420ccc:	adc    eax,ebp
  420cce:	ss or  al,0xc8
  420cd1:	xor    edx,DWORD PTR [eax]
  420cd3:	and    BYTE PTR [ebx+0x1ec9b410],dh
  420cd9:	xlat   BYTE PTR fs:[ebx]
  420cdb:	push   0x2e
  420cdd:	(bad)  
  420cde:	lods   al,BYTE PTR ds:[esi]
  420cdf:	mov    esp,0xa425b302
  420ce4:	icebp  
  420ce5:	fidiv  WORD PTR [ebp+0x6c]
  420ce8:	sahf   
  420ce9:	call   0xd7d651c6
  420cee:	dec    ecx
  420cef:	lahf   
  420cf0:	inc    eax
  420cf1:	sub    al,0x1a
  420cf3:	das    
  420cf4:	sub    ch,BYTE PTR [eax-0x6c027aae]
  420cfa:	lahf   
  420cfb:	sub    ch,BYTE PTR [ebx+0x2e4b8bd]
  420d01:	hlt    
  420d02:	mov    DWORD PTR [ebp+0x34],ebx
  420d05:	jge    0x420d48
  420d07:	cmp    DWORD PTR [edi+0x44],0x54edcd42
  420d0e:	xor    al,cl
  420d10:	pop    ebp
  420d11:	xchg   ebx,eax
  420d12:	mov    cl,0xb
  420d14:	add    cl,BYTE PTR [esi]
  420d16:	or     BYTE PTR [ecx+eax*2-0x5a],ah
  420d1a:	cmc    
  420d1b:	jp     0x420d60
  420d1d:	fs push ebp
  420d1f:	mov    dl,0x4c
  420d21:	js     0x420da2
  420d23:	pop    ebp
  420d24:	ins    DWORD PTR es:[edi],dx
  420d25:	loope  0x420d16
  420d27:	cmp    eax,0x82043242
  420d2c:	pop    eax
  420d2d:	mov    dh,BYTE PTR [edi]
  420d2f:	shr    BYTE PTR [ebx+0x26d1c1b6],0x65
  420d36:	je     0x420dae
  420d38:	ins    DWORD PTR es:[edi],dx
  420d39:	ror    BYTE PTR [edi+eiz*2],1
  420d3c:	lods   eax,DWORD PTR ds:[esi]
  420d3d:	dec    edx
  420d3e:	jg     0x420d94
  420d40:	or     al,0xd4
  420d42:	ins    BYTE PTR es:[edi],dx
  420d43:	ret    0xb65d
  420d46:	pushf  
  420d47:	inc    ecx
  420d48:	lahf   
  420d49:	xor    BYTE PTR [ecx-0x65],al
  420d4c:	lahf   
  420d4d:	test   DWORD PTR [esi],0x2a2546c8
  420d53:	sub    al,0x29
  420d55:	jno    0x420dd1
  420d57:	cmp    BYTE PTR [eax+0x758bbf35],0x68
  420d5e:	ror    dh,0x17
  420d61:	or     ah,bl
  420d63:	pop    es
  420d64:	xchg   ebp,eax
  420d65:	push   eax
  420d66:	imul   ebp,DWORD PTR [eax],0x51
  420d69:	icebp  
  420d6a:	pop    ecx
  420d6b:	frstor [ebx]
  420d6d:	and    BYTE PTR [esi],0x80
  420d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d72:	xor    BYTE PTR [edx-0x6ba100a8],cl
  420d78:	stos   DWORD PTR es:[edi],eax
  420d79:	lds    esp,FWORD PTR [ebx-0x3b]
  420d7c:	jmp    DWORD PTR [esi]
  420d7e:	dec    edi
  420d7f:	mov    eax,0x94a831f2
  420d84:	or     bh,BYTE PTR [ebp+0x44944533]
  420d8a:	adc    dl,dl
  420d8c:	call   0xa7e3eee
  420d91:	or     al,0xde
  420d93:	outs   dx,BYTE PTR ds:[esi]
  420d94:	(bad)  
  420d95:	jnp    0x420e02
  420d97:	pop    eax
  420d98:	int    0x10
  420d9a:	call   0x4d7f:0x64c75eae
  420da1:	in     eax,dx
  420da2:	outs   dx,BYTE PTR ds:[esi]
  420da3:	xor    eax,0xe9830674
  420da8:	imul   ebp,DWORD PTR [edx+0x27],0x43839a7f
  420daf:	icebp  
  420db0:	cld    
  420db1:	and    al,BYTE PTR [ecx+ecx*2+0x40]
  420db5:	idiv   BYTE PTR [edi+0x16655a42]
  420dbb:	js     0x420dac
  420dbd:	test   DWORD PTR [edx],esp
  420dbf:	mov    ecx,0x2474d4c7
  420dc4:	jg     0x420dcd
  420dc6:	in     eax,0xa8
  420dc8:	xor    al,0x78
  420dca:	mov    dl,0xd
  420dcc:	xchg   DWORD PTR [ebx],ecx
  420dce:	jbe    0x420da3
  420dd0:	mov    esp,DWORD PTR [eax]
  420dd2:	jge    0x420d85
  420dd4:	sbb    DWORD PTR [ebx],esi
  420dd6:	sub    al,0x71
  420dd8:	(bad)  
  420dd9:	(bad)  
  420dda:	aad    0x1
  420ddc:	sbb    ecx,DWORD PTR ds:0xed2f7bf3
  420de2:	(bad)  [edx]
  420de4:	pushfw 
  420de6:	mov    edx,0xfbb13c0
  420deb:	push   eax
  420dec:	ja     0x420de7
  420dee:	sub    BYTE PTR [eax+0x69ce32f2],ah
  420df4:	add    cl,BYTE PTR [esp+ecx*2]
  420df7:	pop    esp
  420df8:	(bad)  
  420dfa:	xor    ch,BYTE PTR [edi-0x7f751b18]
  420e00:	sbb    esi,DWORD PTR [edx+eiz*1+0x11]
  420e04:	dec    eax
  420e05:	sahf   
  420e06:	or     eax,0xfc097619
  420e0b:	popf   
  420e0c:	fistp  DWORD PTR [esi-0x33]
  420e0f:	jecxz  0x420df5
  420e11:	mov    ebx,0x2f5fec29
  420e16:	push   esp
  420e17:	(bad)  
  420e18:	dec    ebp
  420e19:	ins    BYTE PTR es:[edi],dx
  420e1a:	push   es
  420e1b:	push   0xffffffe6
  420e1d:	xlat   BYTE PTR ds:[ebx]
  420e1e:	cdq    
  420e1f:	std    
  420e20:	fbstp  TBYTE PTR [eax+edi*4-0x5cd365f4]
  420e27:	rcl    DWORD PTR [edi-0x5e],1
  420e2a:	cmp    ecx,DWORD PTR [ecx]
  420e2c:	add    eax,0x3874ca6f
  420e31:	mov    esi,edi
  420e33:	outs   dx,DWORD PTR ds:[esi]
  420e34:	gs jmp 0x7853:0x2029f378
  420e3c:	pop    es
  420e3d:	retf   0xa613
  420e40:	jne    0x420ddd
  420e42:	inc    ebp
  420e43:	xor    ch,al
  420e45:	dec    ecx
  420e46:	add    DWORD PTR [edx+0x2c219d9b],0xffffffba
  420e4d:	fcmovnb st,st(2)
  420e4f:	push   ebp
  420e50:	mov    al,0xf6
  420e52:	mov    BYTE PTR [esp+esi*8-0x2f],bh
  420e56:	das    
  420e57:	sbb    dh,BYTE PTR [esi]
  420e59:	push   es
  420e5a:	sbb    DWORD PTR [eax-0x78],0xe
  420e5e:	cdq    
  420e5f:	mov    bl,0xd7
  420e61:	mov    eax,0x470e9fc9
  420e66:	loopne 0x420e5b
  420e68:	adc    BYTE PTR [ebx+edi*4-0x78b4f56f],ah
  420e6f:	(bad)  
  420e70:	jmp    0x4122fd0a
  420e75:	cmp    BYTE PTR [eax+0x11adfc03],al
  420e7b:	pop    esi
  420e7c:	out    0x78,al
  420e7e:	adc    DWORD PTR [ebp+0x5900b1cc],ebp
  420e84:	xchg   esi,eax
  420e85:	lds    ebx,FWORD PTR [edi+ebx*8+0x3d]
  420e89:	jp     0x420eee
  420e8b:	mov    dh,0x5a
  420e8d:	adc    DWORD PTR ds:0xa1e1bd2f,ebp
  420e93:	inc    ebp
  420e94:	sti    
  420e95:	inc    eax
  420e96:	and    ch,BYTE PTR [edi+esi*1]
  420e99:	fst    DWORD PTR [ebx-0x1f37c730]
  420e9f:	pop    eax
  420ea0:	sbb    DWORD PTR [ecx-0x4a],0x37
  420ea4:	cdq    
  420ea5:	inc    esp
  420ea6:	cdq    
  420ea7:	les    ebx,FWORD PTR [ecx-0x46]
  420eaa:	imul   esp,DWORD PTR [esi+0x2b],0xffffffb8
  420eae:	mov    dh,0xed
  420eb0:	lds    ebp,FWORD PTR [esp+eiz*8+0x4cc020e8]
  420eb7:	stc    
  420eb8:	ror    DWORD PTR [ebx-0x5b],0xed
  420ebc:	sbb    BYTE PTR [esi-0x1e920db1],dh
  420ec2:	push   edx
  420ec3:	xchg   ebx,eax
  420ec4:	std    
  420ec5:	and    ecx,0xfd392c8a
  420ecb:	fist   DWORD PTR [eax-0xd5bb25d]
  420ed1:	(bad)  
  420ed2:	arpl   dx,bp
  420ed4:	call   0xb651e874
  420ed9:	test   DWORD PTR es:[edi],ecx
  420edc:	jae    0x420eb9
  420ede:	sub    eax,0x6ab22547
  420ee3:	inc    edi
  420ee4:	(bad)
  420ee8:	mov    ?,WORD PTR [esi+0x43]
  420eeb:	mov    esp,0x771b5d9a
  420ef0:	pushf  
  420ef1:	stos   BYTE PTR es:[edi],al
  420ef2:	out    dx,al
  420ef3:	arpl   dx,dx
  420ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ef6:	cli    
  420ef7:	repnz loope 0x420eae
  420efa:	in     eax,0x93
  420efc:	fistp  QWORD PTR [edx]
  420efe:	faddp  st(6),st
  420f00:	inc    esp
  420f01:	out    0x3e,eax
  420f03:	mov    eax,0xa6cb22f8
  420f08:	adc    eax,edx
  420f0a:	add    eax,0x1eeb821c
  420f0f:	mov    bh,0x29
  420f11:	lods   eax,DWORD PTR ds:[esi]
  420f12:	inc    ecx
  420f13:	imul   eax,DWORD PTR [ebp+0x53],0xffffffbe
  420f17:	(bad)  
  420f18:	jb     0x420f1e
  420f1a:	das    
  420f1b:	jmp    0x3e305a5b
  420f20:	out    dx,al
  420f21:	mov    ebx,0x21c758c7
  420f26:	stc    
  420f27:	repz jae 0x420ed4
  420f2a:	scas   eax,DWORD PTR es:[edi]
  420f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f2c:	cld    
  420f2d:	lahf   
  420f2e:	test   eax,0xbfc47291
  420f33:	push   0xffffffff
  420f35:	ret    0x6442
  420f38:	sub    edx,edx
  420f3a:	inc    esi
  420f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f3c:	and    al,0x6b
  420f3e:	cdq    
  420f3f:	out    dx,eax
  420f40:	cmp    ecx,DWORD PTR [ecx]
  420f42:	cli    
  420f43:	pushf  
  420f44:	or     eax,0x86426b86
  420f49:	in     al,dx
  420f4a:	jb     0x420f2c
  420f4c:	adc    DWORD PTR [edi-0x1c344946],0xf0ac5df3
  420f56:	xor    eax,0xd4178d48
  420f5b:	ss loop 0x420fa9
  420f5e:	xchg   BYTE PTR [eax],al
  420f60:	pushf  
  420f61:	and    eax,0x5ffc89ec
  420f66:	outs   dx,DWORD PTR ds:[esi]
  420f67:	mov    al,bh
  420f69:	add    DWORD PTR [eax+edi*1+0x44],ecx
  420f6d:	daa    
  420f6e:	nop
  420f6f:	pop    es
  420f70:	push   esi
  420f71:	arpl   WORD PTR [eax],cx
  420f73:	ss dec edi
  420f75:	xchg   ecx,eax
  420f76:	scas   al,BYTE PTR es:[edi]
  420f77:	(bad)  
  420f78:	gs sub al,0xe9
  420f7b:	shl    bh,0xae
  420f7e:	add    dl,BYTE PTR [ecx-0x4f76723a]
  420f84:	loopne 0x420f09
  420f86:	pop    ebx
  420f87:	sti    
  420f88:	add    esi,ebx
  420f8a:	dec    ebx
  420f8b:	mov    ds:0x1c937911,eax
  420f90:	fsub   QWORD PTR ds:0xc3b300c
  420f96:	enterw 0x6771,0x5
  420f9b:	cmp    BYTE PTR [edi],cl
  420f9d:	xor    esp,DWORD PTR [ebp-0x50]
  420fa0:	add    edi,DWORD PTR [edx-0x3cefefe0]
  420fa6:	ror    DWORD PTR [edi+0x25384d71],cl
  420fac:	lea    ecx,[edi+ecx*1-0x4cfe644e]
  420fb3:	push   0x8a8f741c
  420fb8:	jl     0x420ffe
  420fba:	push   ebx
  420fbb:	mov    ah,0x13
  420fbd:	rcr    BYTE PTR [ebx+0x5],0x3b
  420fc1:	loope  0x42102b
  420fc3:	sti    
  420fc4:	es jno 0x42101c
  420fc7:	jmp    0x420f7b
  420fc9:	xchg   ebp,eax
  420fca:	sbb    DWORD PTR [ecx+0x7f],0xa9b4d3b8
  420fd1:	pop    ds
  420fd2:	mov    ebp,0x4de218ef
  420fd7:	enter  0xcc8e,0xa8
  420fdb:	xchg   edi,eax
  420fdc:	push   edi
  420fdd:	and    dl,BYTE PTR [ecx-0x5d]
  420fe0:	sbb    ebp,DWORD PTR [ebx-0x6c]
  420fe3:	mov    eax,ds:0xb5fb2c81
  420fe8:	xor    al,0x44
  420fea:	add    esi,esp
  420fec:	aas    
  420fed:	push   ds
  420fee:	mov    ebx,0xb3d69fa1
  420ff3:	imul   ebp,DWORD PTR [esi+0x32],0x29
  420ff7:	dec    eax
  420ff8:	mov    eax,0xfdef571c
  420ffd:	fisub  WORD PTR [ecx*8-0x6ce280af]
  421004:	mov    dl,0x91
  421006:	pop    ss
  421007:	inc    esi
  421008:	lahf   
  421009:	push   ds
  42100a:	mov    ah,0x12
  42100c:	adc    bl,BYTE PTR [eax]
  42100e:	mov    al,0xa2
  421010:	dec    ebp
  421011:	mov    ch,BYTE PTR [ecx]
  421013:	adc    ch,bh
  421015:	and    dh,BYTE PTR [edx-0x3255c4b2]
  42101b:	out    0x5,al
  42101d:	or     ch,0x66
  421020:	cwde   
  421021:	jmp    0x421048
  421023:	ficom  WORD PTR [ebp-0x1b]
  421026:	out    0x27,al
  421028:	jne    0x420fdc
  42102a:	xor    cl,BYTE PTR ds:0xd96f422d
  421030:	xor    al,0xbc
  421032:	pop    ebx
  421033:	cmp    edi,DWORD PTR [esi+0x6a]
  421036:	pop    ebx
  421037:	enter  0x2112,0xf0
  42103b:	and    DWORD PTR [esp+ecx*2+0x58],ebp
  42103f:	jmp    0xfa65dc4
  421044:	fcmovb st,st(0)
  421046:	sbb    esi,DWORD PTR [ecx]
  421048:	mov    WORD PTR ds:[edx],es
  42104b:	(bad)  
  42104c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42104d:	lods   eax,DWORD PTR ds:[esi]
  42104e:	push   ebp
  42104f:	or     cl,BYTE PTR [eax]
  421051:	mov    ds:0x306a2a64,eax
  421056:	aad    0x1f
  421058:	mov    ecx,ebx
  42105a:	xlat   BYTE PTR ds:[ebx]
  42105b:	lahf   
  42105c:	add    al,0xbe
  42105e:	nop
  42105f:	aaa    
  421060:	and    eax,0xe8f376b3
  421065:	test   DWORD PTR [esi-0x69],0x46c9eb8b
  42106c:	xchg   DWORD PTR [ebx-0x13],ecx
  42106f:	xor    BYTE PTR [esi-0x429876e1],0x85
  421076:	mov    ds:0xa0874373,eax
  42107b:	shl    DWORD PTR [ebp+0x44e268a7],0xa7
  421082:	xor    edx,DWORD PTR [edi-0x2b]
  421085:	inc    esp
  421086:	xchg   edx,eax
  421087:	xchg   edx,eax
  421088:	sub    ch,bh
  42108a:	adc    al,0x5f
  42108c:	cs adc bl,bh
  42108f:	sub    ah,BYTE PTR [esi+0x6fade86f]
  421095:	jae    0x4210b7
  421097:	jae    0x42103a
  421099:	nop
  42109a:	cs stos BYTE PTR es:[edi],al
  42109c:	jge    0x421054
  42109e:	dec    esp
  42109f:	pop    ecx
  4210a0:	jmp    0x4210ac
  4210a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210a3:	sbb    bl,bh
  4210a5:	cld    
  4210a6:	sbb    BYTE PTR [ebp+0x47d9fd0f],dh
  4210ac:	hlt    
  4210ad:	jl     0x421040
  4210af:	in     al,dx
  4210b0:	out    dx,al
  4210b1:	or     al,0x35
  4210b3:	stc    
  4210b4:	outs   dx,BYTE PTR ds:[esi]
  4210b5:	jmp    0x67c5:0x2ce67c9b
  4210bc:	lock cmc 
  4210be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210bf:	jns    0x421125
  4210c1:	jno    0x421138
  4210c3:	mov    bl,0x45
  4210c5:	in     eax,dx
  4210c6:	sti    
  4210c7:	push   edi
  4210c8:	imul   edi,esp,0x945e70a7
  4210ce:	sbb    edx,DWORD PTR ds:[edx-0xb24b05f]
  4210d5:	arpl   sp,di
  4210d7:	scas   al,BYTE PTR es:[edi]
  4210d8:	sub    eax,0xb8669d7d
  4210dd:	mov    cl,BYTE PTR [edx-0x32]
  4210e0:	push   ecx
  4210e1:	xchg   edx,eax
  4210e2:	shl    cl,1
  4210e4:	not    DWORD PTR [eax-0x1e847883]
  4210ea:	arpl   WORD PTR ds:0x22c0be27,cx
  4210f0:	push   edi
  4210f1:	or     eax,0xcd5baf99
  4210f6:	sbb    cl,ch
  4210f8:	pushf  
  4210f9:	dec    edi
  4210fa:	cmp    ebp,DWORD PTR [ecx]
  4210fc:	sahf   
  4210fd:	jl     0x4210ee
  4210ff:	test   DWORD PTR ds:0xadcdddcf,0xee4df89c
  421109:	mov    ebx,0xf78c35a5
  42110e:	ins    DWORD PTR es:[edi],dx
  42110f:	lea    edx,[edx+0x106b613b]
  421115:	pop    es
  421116:	lds    ebx,FWORD PTR [esi-0x2c]
  421119:	dec    ecx
  42111a:	inc    esp
  42111b:	fnstsw WORD PTR [edx]
  42111d:	mov    edx,0x3876a57d
  421122:	xchg   ebx,eax
  421123:	mov    ah,0x2d
  421125:	xor    edx,ebp
  421127:	out    dx,al
  421128:	sbb    esp,DWORD PTR [edi+0x1c]
  42112b:	leave  
  42112c:	lds    edi,FWORD PTR [ebp+0x1011914d]
  421132:	sub    eax,0xa2a94a1c
  421137:	add    dl,BYTE PTR [edi]
  421139:	sub    eax,0x6c3848c8
  42113e:	lock pop edi
  421140:	ret    0x4e57
  421143:	test   al,0x80
  421145:	ret    0x7a0e
  421148:	stos   DWORD PTR es:[edi],eax
  421149:	push   ebx
  42114a:	pop    ss
  42114b:	js     0x421192
  42114d:	call   0x2435:0x86f83738
  421154:	lds    esp,FWORD PTR [ebx]
  421156:	retf   0xa88d
  421159:	sub    DWORD PTR [ebx+0x7c5c833f],eax
  42115f:	stc    
  421160:	xchg   esp,eax
  421161:	out    0xb,eax
  421163:	(bad)  
  421164:	xor    DWORD PTR [edi+0x73],esp
  421167:	test   BYTE PTR [ebx+0x4edfc1b2],ah
  42116d:	test   ecx,0x22c42938
  421173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421174:	xor    ebx,DWORD PTR [ebx-0x3d]
  421177:	pop    esi
  421178:	xchg   edi,eax
  421179:	or     edx,0x7b
  42117c:	les    edx,FWORD PTR [edx+0x3a]
  42117f:	add    bl,dh
  421181:	(bad)  
  421183:	hlt    
  421184:	hlt    
  421185:	cmc    
  421186:	addr16 jo 0x421151
  421189:	cmc    
  42118a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42118b:	fld    QWORD PTR [edi+0x40bad32d]
  421191:	sub    DWORD PTR [edi-0x46123829],edx
  421197:	dec    esp
  421198:	sbb    DWORD PTR [edx-0x73],eax
  42119b:	out    0xf9,al
  42119d:	xor    eax,esp
  42119f:	jecxz  0x421193
  4211a1:	xchg   esp,eax
  4211a2:	fiadd  DWORD PTR [eax]
  4211a4:	cmc    
  4211a5:	fcmovb st,st(6)
  4211a7:	leave  
  4211a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211a9:	idiv   dh
  4211ab:	fnstcw WORD PTR [edi]
  4211ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211ae:	cmc    
  4211af:	int3   
  4211b0:	cmp    eax,0xd9954b3c
  4211b5:	lods   eax,DWORD PTR ds:[esi]
  4211b6:	push   ss
  4211b7:	repnz pop es
  4211b9:	sbb    bh,BYTE PTR [esi+0x53]
  4211bc:	adc    DWORD PTR [edi+0x41ce7721],edi
  4211c2:	jmp    0x86703d95
  4211c7:	bound  eax,QWORD PTR [esi+ecx*1-0x5b311d1e]
  4211ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211cf:	inc    ebx
  4211d0:	mov    eax,ds:0xc25c1f4c
  4211d5:	(bad)
  4211d9:	or     DWORD PTR [edx-0xdace102],ecx
  4211df:	clc    
  4211e0:	sbb    cl,BYTE PTR [edi-0x8]
  4211e3:	mov    eax,0x6ccf9ae3
  4211e8:	imul   eax,DWORD PTR [eax-0x50],0x5b
  4211ec:	and    bl,BYTE PTR [edi-0x3d]
  4211ef:	lods   al,BYTE PTR ds:[esi]
  4211f0:	mov    ah,0x7a
  4211f2:	mov    bl,0x21
  4211f4:	ret    
  4211f5:	and    edi,edx
  4211f7:	dec    edi
  4211f8:	gs jle 0x421204
  4211fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211fc:	xlat   BYTE PTR ds:[ebx]
  4211fd:	fistp  DWORD PTR [edx+0x521ea6fd]
  421203:	jae    0x4211be
  421205:	sbb    BYTE PTR [esp+edx*1+0x8e921a8],al
  42120c:	call   0x4053:0x1089194f
  421213:	sbb    BYTE PTR [edi],dh
  421215:	loop   0x4211b3
  421217:	or     eax,0xaddb1cfb
  42121c:	test   eax,0x94088931
  421221:	sub    esp,DWORD PTR [ebx+0x2df5314b]
  421227:	mov    dl,BYTE PTR [edx+0x67838a36]
  42122d:	sub    DWORD PTR [edi-0x34583f48],ecx
  421233:	punpckhdq mm1,mm0
  421236:	icebp  
  421237:	rcr    BYTE PTR [ebx-0x482cb595],cl
  42123d:	xchg   DWORD PTR [edx+0x61b89a40],ebx
  421243:	pop    ds
  421244:	in     eax,dx
  421245:	ss jb  0x4212b7
  421248:	and    edi,edx
  42124a:	add    edx,DWORD PTR [ebx-0x4625939]
  421250:	fwait
  421251:	xor    al,0xf5
  421253:	jmp    0x843d65ea
  421258:	sti    
  421259:	mov    cl,0xe1
  42125b:	cld    
  42125c:	dec    esp
  42125d:	push   es
  42125e:	aad    0xb9
  421260:	ja     0x4211f2
  421262:	cmc    
  421263:	and    eax,0x2cec94d6
  421268:	or     bl,BYTE PTR [ebp-0x675a7d83]
  42126e:	sahf   
  42126f:	mov    ecx,0x2f605be7
  421274:	pusha  
  421275:	lods   eax,DWORD PTR ds:[esi]
  421276:	(bad)  
  421277:	out    dx,eax
  421278:	pop    edi
  421279:	(bad)  
  42127a:	jmp    ecx
  42127c:	fidiv  WORD PTR [esi-0x22d4bed7]
  421282:	xor    DWORD PTR [esi+0x52],esi
  421285:	adc    al,0xc0
  421287:	inc    esp
  421288:	mov    eax,ds:0xc3367a7c
  42128d:	lock aam 0xf5
  421290:	add    BYTE PTR [edi],0x30
  421293:	sbb    al,0x4b
  421295:	cld    
  421296:	push   ecx
  421297:	data16 fld TBYTE PTR [edx]
  42129a:	lahf   
  42129b:	imul   edi,DWORD PTR [edx+0x16f0cf90],0x30a4ac0
  4212a5:	xor    BYTE PTR [ecx-0xb8e048],dh
  4212ab:	cmp    eax,0x5d572e7b
  4212b0:	retf   0x1894
  4212b3:	popa   
  4212b4:	sub    DWORD PTR [ebp+0x5ec04592],edi
  4212ba:	mov    ah,cl
  4212bc:	(bad)  
  4212bd:	call   0xe9a72788
  4212c2:	jns    0x421306
  4212c4:	cdq    
  4212c5:	clc    
  4212c6:	inc    edi
  4212c7:	push   cs
  4212c8:	adc    al,0xe4
  4212ca:	loope  0x421256
  4212cc:	leave  
  4212cd:	jne    0x421271
  4212cf:	test   BYTE PTR ds:0xeaad9055,bh
  4212d5:	xor    bl,cl
  4212d7:	dec    esp
  4212d8:	add    dl,bl
  4212da:	pop    edi
  4212db:	dec    DWORD PTR [ecx-0x6f]
  4212de:	and    BYTE PTR [ecx+0x1cee8f95],dh
  4212e4:	jmp    0x7f73:0xa0540414
  4212eb:	adc    bl,BYTE PTR [eax+0x11]
  4212ee:	mov    al,0xe0
  4212f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212f1:	stos   BYTE PTR es:[edi],al
  4212f2:	adc    BYTE PTR [ecx-0x6198c294],cl
  4212f8:	fadd   st(5),st
  4212fa:	pushf  
  4212fb:	sub    ah,BYTE PTR [eax]
  4212fd:	not    edx
  4212ff:	fs ins BYTE PTR es:[edi],dx
  421301:	clc    
  421302:	cmp    DWORD PTR [edx+0x4a038266],edx
  421308:	mov    cl,al
  42130a:	aam    0xad
  42130c:	fsin   
  42130e:	sar    ebp,0x62
  421311:	jbe    0x421301
  421313:	sbb    DWORD PTR [eax],0x5faf32d0
  421319:	push   edx
  42131a:	enter  0x787b,0x13
  42131e:	add    eax,0xa99cf0bf
  421323:	push   ebx
  421324:	sbb    al,0x60
  421326:	pushf  
  421327:	xchg   edi,eax
  421328:	test   al,0xc7
  42132a:	ins    BYTE PTR es:[edi],dx
  42132b:	and    edx,DWORD PTR [edi-0x53]
  42132e:	cmp    DWORD PTR [edi-0x1a9c1499],esi
  421334:	mov    al,ds:0x5c55a9d
  421339:	test   ch,dh
  42133b:	push   ss
  42133c:	cmc    
  42133d:	cmc    
  42133e:	outs   dx,DWORD PTR ds:[esi]
  42133f:	stos   BYTE PTR es:[edi],al
  421340:	and    edi,DWORD PTR [eax]
  421342:	rcr    esi,cl
  421344:	cmp    eax,0xed28e0b9
  421349:	aas    
  42134a:	or     eax,0xab994122
  42134f:	dec    edx
  421350:	(bad)  
  421351:	cli    
  421352:	pop    ss
  421353:	cmp    DWORD PTR [ebx-0x71],0xffffffa3
  421357:	mov    esi,0xf711599e
  42135c:	fimul  WORD PTR [esi+0x76820b21]
  421362:	jmp    0x4213a5
  421364:	and    ah,BYTE PTR [ebp+0x1f]
  421367:	mov    eax,0x17cc18d8
  42136c:	xchg   ecx,eax
  42136d:	sti    
  42136e:	inc    ecx
  42136f:	xchg   bh,dl
  421371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421372:	push   es
  421373:	adc    edx,DWORD PTR [ebx+0x221fe7d0]
  421379:	dec    edx
  42137a:	pop    dx
  42137c:	(bad)  
  42137e:	inc    eax
  42137f:	adc    DWORD PTR [esi+edx*2+0x7aa7e49d],edx
  421386:	and    eax,0x9f682bc1
  42138b:	jecxz  0x4213e5
  42138d:	cmp    DWORD PTR [eax],edi
  42138f:	add    eax,0xe8d19e94
  421394:	xor    eax,0x46d13bd8
  421399:	sbb    eax,DWORD PTR [esi]
  42139b:	push   esi
  42139c:	imul   edi,ebx,0x77
  42139f:	into   
  4213a0:	mov    edi,0xe67375bc
  4213a5:	push   eax
  4213a6:	(bad)  [ecx-0x564320c]
  4213ac:	mov    eax,ds:0x109d8401
  4213b1:	lods   al,BYTE PTR ds:[esi]
  4213b2:	fadd   DWORD PTR fs:[ecx-0x2a927dc7]
  4213b9:	mov    dl,0x3c
  4213bb:	mov    DWORD PTR [edi],edi
  4213bd:	jp     0x421391
  4213bf:	add    ch,BYTE PTR [ebx+0x7ba01e3]
  4213c5:	addr16 push ss
  4213c7:	push   ss
  4213c8:	or     eax,0x924ba9ec
  4213cd:	fsubrp st(5),st
  4213cf:	fs pop ds
  4213d1:	dec    ebp
  4213d2:	jge    0x421356
  4213d4:	cmp    al,0x66
  4213d6:	cmp    DWORD PTR [edi],0x1c3a2080
  4213dc:	add    eax,0xf6c2ff18
  4213e1:	fidivr DWORD PTR [eax]
  4213e3:	sti    
  4213e4:	lods   al,BYTE PTR ds:[esi]
  4213e5:	push   edx
  4213e6:	test   DWORD PTR ds:0x4058aeeb,edi
  4213ed:	push   ebx
  4213ee:	mov    ch,0x6b
  4213f0:	mov    esp,0x46f3341d
  4213f5:	icebp  
  4213f6:	imul   ebp,DWORD PTR [edx-0x15ed42d1],0xffffffd8
  4213fd:	jg     0x4213d0
  4213ff:	jl     0x421423
  421401:	rcr    BYTE PTR ds:0x3f42cc8d,0x83
  421408:	adc    DWORD PTR [edx+0x11],eax
  42140b:	jo     0x42142d
  42140d:	jnp    0x4213c9
  42140f:	rcl    BYTE PTR ss:[ebp-0x5],0xef
  421414:	in     eax,0x7d
  421416:	and    ebp,edx
  421418:	js     0x9d6654c4
  42141e:	shl    DWORD PTR [ecx],0xe4
  421421:	xor    cl,BYTE PTR [edi]
  421423:	sub    BYTE PTR [ecx-0x75],ah
  421426:	in     eax,0xab
  421428:	xor    esp,DWORD PTR [ebp-0x4]
  42142b:	dec    edx
  42142c:	jmp    FWORD PTR [eax-0x2497cb91]
  421432:	cmp    eax,0xbd28121c
  421437:	ins    BYTE PTR es:[edi],dx
  421438:	sub    ah,BYTE PTR [edi+0x6290322c]
  42143e:	cdq    
  42143f:	sub    DWORD PTR [ebp+0x6c6ecbd0],ebp
  421445:	adc    DWORD PTR [ebp+0x5f],0x2d
  421449:	mov    esi,0x998baa2a
  42144e:	rcr    BYTE PTR [esi],1
  421450:	adc    ebx,ebp
  421452:	pop    eax
  421453:	adc    dh,dl
  421455:	jmp    0x6c261f83
  42145a:	nop
  42145b:	and    ebp,DWORD PTR [edx-0x26]
  42145e:	hlt    
  42145f:	fadd   DWORD PTR [ecx+0x60]
  421462:	ja     0x421410
  421464:	mov    esp,0x31d2b5c2
  421469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42146a:	jo     0x42142a
  42146c:	out    0xb6,eax
  42146e:	test   BYTE PTR [eax+0x47742ebc],cl
  421474:	retf   0x907d
  421477:	and    ebp,0xffffffa4
  42147a:	test   al,0xdf
  42147c:	shl    BYTE PTR [esi+ebp*1-0x1a99bdbb],cl
  421483:	fadd   st(4),st
  421485:	lea    edi,[ebx-0x19ca3f97]
  42148b:	sub    dl,0x9a
  42148e:	rol    DWORD PTR [esi-0x34e55c61],1
  421494:	call   0x6e6daf6a
  421499:	imul   DWORD PTR [ebp+0x26]
  42149c:	push   ecx
  42149d:	imul   ebx,DWORD PTR [esi+0x4aed83f4],0x29626089
  4214a7:	loop   0x4214dc
  4214a9:	bound  ebx,QWORD PTR [eax]
  4214ab:	push   edi
  4214ac:	xlat   BYTE PTR ds:[ebx]
  4214ad:	aad    0x57
  4214af:	retf   0x9f18
  4214b2:	call   0xb6d3c307
  4214b7:	shl    BYTE PTR [edx],1
  4214b9:	ins    BYTE PTR es:[edi],dx
  4214ba:	test   ecx,edi
  4214bc:	cmc    
  4214bd:	cmc    
  4214be:	movups xmm3,XMMWORD PTR [ebx]
  4214c1:	aam    0xf
  4214c3:	lds    ebx,FWORD PTR [edi]
  4214c5:	sbb    cl,BYTE PTR [edi+0x62]
  4214c8:	fcomp  DWORD PTR [edx-0x381a00a]
  4214ce:	aaa    
  4214cf:	or     al,0x69
  4214d1:	or     al,0x38
  4214d3:	mov    esp,0x514028bb
  4214d8:	add    eax,0xe6589ac9
  4214dd:	sbb    eax,0x24c89760
  4214e2:	ds mov al,0x77
  4214e5:	jo     0x421563
  4214e7:	push   esp
  4214e8:	retf   
  4214e9:	retf   
  4214ea:	push   esi
  4214eb:	int3   
  4214ec:	jmp    0x421550
  4214ee:	fdecstp 
  4214f0:	shr    BYTE PTR [edi+0x2d],1
  4214f3:	add    al,BYTE PTR [edi-0x10932510]
  4214f9:	push   ebx
  4214fa:	imul   ebx,DWORD PTR ds:0xff225a68,0xffffffce
  421501:	inc    ecx
  421502:	xor    eax,0x646e655
  421507:	cmp    al,0x89
  421509:	jg     0x421498
  42150b:	call   0x7caf:0x70655d00
  421512:	adc    eax,0x88959a59
  421517:	pop    esi
  421518:	mov    edi,0xafc3c75
  42151d:	scas   al,BYTE PTR es:[edi]
  42151e:	and    ch,BYTE PTR [ecx]
  421520:	(bad)  [eax]
  421522:	mov    edx,ebx
  421524:	and    ecx,DWORD PTR [edi]
  421526:	into   
  421527:	test   eax,0x72eca40e
  42152c:	jnp    0x421516
  42152e:	ret    0x8221
  421531:	mov    ecx,0x17fca9a9
  421536:	push   ebp
  421537:	neg    DWORD PTR [ecx+0x7c]
  42153a:	and    bh,BYTE PTR [esi-0x38]
  42153d:	mov    ds:0xb3945d5d,al
  421542:	jecxz  0x421531
  421544:	(bad)  
  421545:	fisttp QWORD PTR gs:[edx-0x1e]
  421549:	lahf   
  42154a:	jmp    0xaecfa09d
  42154f:	and    eax,0x98bfd675
  421554:	jge    0x42158e
  421556:	icebp  
  421557:	out    dx,eax
  421558:	jmp    0xa26b:0x61f757dc
  42155f:	rcr    edi,1
  421561:	shr    ecx,1
  421563:	jp     0x421584
  421565:	sbb    DWORD PTR [esi-0x12],ebx
  421568:	xchg   ebp,eax
  421569:	mov    ds:0x6e374e2e,al
  42156e:	mov    edx,0x88883391
  421573:	ja     0x42150b
  421575:	loop   0x42154f
  421577:	aam    0xdf
  421579:	icebp  
  42157a:	add    ecx,DWORD PTR [ecx]
  42157c:	pop    ebx
  42157d:	push   ds
  42157e:	and    bh,BYTE PTR [ecx-0x3d9c920e]
  421584:	(bad)  
  421585:	leave  
  421586:	sub    dh,cl
  421588:	xor    eax,edi
  42158a:	fstp   DWORD PTR [esi-0x5c]
  42158d:	mov    ?,WORD PTR gs:[ebp+0x12c8f08e]
  421594:	mov    ds:0x68083b23,al
  421599:	ficom  DWORD PTR [ebx+eiz*2+0x5f6f6c6c]
  4215a0:	sub    BYTE PTR [ebx],bl
  4215a2:	(bad)  
  4215a3:	cli    
  4215a4:	pop    esp
  4215a5:	xchg   edi,edx
  4215a7:	lar    ebx,cx
  4215aa:	jle    0x4215ec
  4215ac:	popf   
  4215ad:	dec    ebx
  4215ae:	and    DWORD PTR [ecx],esi
  4215b0:	(bad)
  4215b4:	or     DWORD PTR [ebp+eiz*4-0x6a8f6e5e],edi
  4215bb:	sar    ebx,0x38
  4215be:	push   cs
  4215bf:	ja     0x4215d7
  4215c1:	xchg   edi,eax
  4215c2:	pop    es
  4215c3:	rcr    DWORD PTR [edi-0x36eedae4],cl
  4215c9:	jmp    0x4be5c1ae
  4215ce:	mov    ebx,0x7526b007
  4215d3:	mov    es,WORD PTR [ebx]
  4215d5:	loopne 0x421650
  4215d7:	xor    BYTE PTR [ebx-0x7f],al
  4215da:	sub    ecx,DWORD PTR [esi+0x21]
  4215dd:	test   eax,0x9efff352
  4215e2:	outs   dx,BYTE PTR ds:[esi]
  4215e3:	or     al,0x51
  4215e5:	pop    edx
  4215e6:	aam    0x81
  4215e8:	add    eax,0x5409ee28
  4215ed:	dec    edx
  4215ee:	mov    ah,0xe2
  4215f0:	je     0x42159d
  4215f2:	inc    edi
  4215f3:	ss scas al,BYTE PTR es:[edi]
  4215f5:	xchg   edx,eax
  4215f6:	mov    bl,0xeb
  4215f8:	aaa    
  4215f9:	mov    eax,0xfb07ca8f
  4215fe:	xor    al,0x8d
  421600:	adc    dl,ah
  421602:	sub    ebp,DWORD PTR [esi-0x2bbbb835]
  421608:	inc    ecx
  421609:	rol    DWORD PTR [ebx+0x30],0xc
  42160d:	ja     0x421599
  42160f:	sub    esp,0xcac2658c
  421615:	cmp    eax,0xfc73bbc6
  42161a:	mov    eax,DWORD PTR [esi-0x3]
  42161d:	or     al,0x8
  42161f:	pop    es
  421620:	or     al,0x26
  421622:	mov    esp,0x4880498c
  421627:	mov    ds:0xacd086d4,eax
  42162c:	je     0x4215d6
  42162e:	retf   
  42162f:	xor    ah,ah
  421631:	cmc    
  421632:	(bad)  
  421634:	test   DWORD PTR [esi-0x11],ebp
  421637:	sar    BYTE PTR [esi+ecx*1-0x2f],0xd8
  42163c:	imul   esi,eax,0x14
  42163f:	addr16 pop ecx
  421641:	inc    eax
  421642:	das    
  421643:	aaa    
  421644:	leave  
  421645:	jae    0x42166d
  421647:	push   es
  421648:	xchg   ebx,eax
  421649:	xchg   bh,dl
  42164b:	push   ds
  42164c:	dec    ecx
  42164d:	rcr    BYTE PTR [esi],cl
  42164f:	xchg   edi,eax
  421650:	jo     0x421626
  421652:	cmp    ebx,edi
  421654:	pusha  
  421655:	add    DWORD PTR [ecx+0x6bcf5ffd],esp
  42165b:	iret   
  42165c:	daa    
  42165d:	ret    0x76eb
  421660:	inc    esp
  421661:	fild   QWORD PTR [eax+0x42a952a3]
  421667:	inc    esp
  421668:	es repz push edx
  42166b:	mov    ecx,0xc3a1e286
  421670:	jns    0x42161c
  421672:	div    DWORD PTR [esi+0x241e02d5]
  421678:	sbb    al,0x5a
  42167a:	mov    ah,0x80
  42167c:	and    dh,BYTE PTR [eax+0x1a96302c]
  421682:	adc    BYTE PTR [ebx-0x6a5d99f4],bl
  421688:	fdivr  st,st(7)
  42168a:	loope  0x4216b4
  42168c:	mov    es,WORD PTR [esi+0x9]
  42168f:	js     0x4216b7
  421691:	cmp    al,BYTE PTR [ecx+0x6a]
  421694:	sub    al,0xe5
  421696:	push   cs
  421697:	jb     0x42165e
  421699:	fucomp st(1)
  42169b:	xchg   BYTE PTR [esi+edi*2-0x63],ah
  42169f:	mov    ch,0x9c
  4216a1:	mov    al,0x65
  4216a3:	nop
  4216a4:	fcomp  QWORD PTR [edx]
  4216a6:	xchg   ebx,eax
  4216a7:	pushf  
  4216a8:	(bad)  
  4216a9:	loope  0x4216ad
  4216ab:	aas    
  4216ac:	mov    DWORD PTR [edx],ebp
  4216ae:	(bad)
  4216b1:	enter  0xcb71,0xcc
  4216b5:	(bad)  [edx-0x63]
  4216b8:	lds    edx,FWORD PTR [edx+ebx*1]
  4216bb:	mov    edi,edx
  4216bd:	(bad)  
  4216be:	fs xor ch,ah
  4216c1:	ja     0x421736
  4216c3:	mov    edi,DWORD PTR [esi+0x28c9a188]
  4216c9:	iret   
  4216ca:	or     cl,ah
  4216cc:	(bad)  
  4216ce:	fs and al,0x4e
  4216d1:	and    BYTE PTR [edi+ebx*1-0x15235c51],ah
  4216d8:	sub    esi,DWORD PTR [ebx-0x1e]
  4216db:	in     al,dx
  4216dc:	aas    
  4216dd:	and    BYTE PTR [edx-0x35409d47],0xd
  4216e4:	aad    0x8c
  4216e6:	jecxz  0x42166e
  4216e8:	loopne 0x421673
  4216ea:	sbb    al,0x74
  4216ec:	pop    eax
  4216ed:	das    
  4216ee:	jb     0x4216b0
  4216f0:	das    
  4216f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216f2:	(bad)  
  4216f3:	cmc    
  4216f4:	sub    eax,0x3ab235b9
  4216f9:	dec    esi
  4216fa:	leave  
  4216fb:	add    dl,BYTE PTR [edi+0x51]
  4216fe:	(bad)  
  4216ff:	inc    esp
  421700:	cli    
  421701:	fild   WORD PTR [ebx-0x1d836fb1]
  421707:	icebp  
  421708:	xchg   edx,eax
  421709:	xchg   edi,eax
  42170a:	in     al,dx
  42170b:	sub    al,0xe4
  42170d:	inc    ebp
  42170e:	fs pop ecx
  421710:	aad    0x17
  421712:	int    0x63
  421714:	sbb    BYTE PTR [esi],dh
  421716:	mov    eax,0xd370b378
  42171b:	dec    edi
  42171c:	in     al,dx
  42171d:	(bad)  
  42171e:	jle    0x421761
  421720:	rcl    cl,cl
  421722:	stc    
  421723:	jne    0x421764
  421725:	push   ecx
  421726:	jle    0x4216e1
  421728:	adc    esi,DWORD PTR [edx+ebx*1+0x10f6462f]
  42172f:	js     0x421781
  421731:	xor    bl,BYTE PTR ds:0xcec83a46
  421737:	and    al,0xad
  421739:	jmp    0xdd4512b1
  42173e:	test   ecx,0x386df24f
  421744:	loopne 0x421764
  421746:	sub    ebx,DWORD PTR [esi+0x7f]
  421749:	cmp    BYTE PTR [esi+0x74],al
  42174c:	and    al,0xab
  42174e:	lock inc esp
  421750:	dec    esi
  421751:	mov    bh,0x3a
  421753:	inc    edx
  421754:	fucom  st(2)
  421756:	and    bl,BYTE PTR [edi+0x1680080b]
  42175c:	add    eax,0xd8d1418d
  421761:	dec    esi
  421762:	mov    ch,0x9f
  421764:	cwde   
  421765:	cmp    edi,DWORD PTR [ebp-0x62]
  421768:	aaa    
  421769:	ret    
  42176a:	pop    edi
  42176b:	jne    0x4217db
  42176d:	imul   esp,DWORD PTR [ecx+0xb1c8257],0x27
  421774:	push   ecx
  421775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421776:	adc    DWORD PTR [edi],edx
  421778:	jbe    0x421768
  42177a:	mov    eax,edx
  42177c:	sbb    cl,dh
  42177e:	push   ds
  42177f:	pop    ebp
  421780:	inc    ecx
  421781:	arpl   WORD PTR [ecx-0x51],bp
  421784:	jmp    0xc2ee:0xfdac20c9
  42178b:	fist   WORD PTR [ebx-0x7a4086ec]
  421791:	inc    eax
  421792:	add    ch,BYTE PTR [ebp-0x35]
  421795:	fidivr DWORD PTR [ebx-0x20]
  421798:	xor    edi,ebp
  42179a:	shl    BYTE PTR [edx-0x58],1
  42179d:	fadd   QWORD PTR [edi-0x5c69be90]
  4217a3:	sub    BYTE PTR [ebx],al
  4217a5:	sub    ch,BYTE PTR [edx-0x1b]
  4217a8:	pop    ecx
  4217a9:	mov    ebx,0xe7ba1b27
  4217ae:	(bad)  
  4217af:	push   ecx
  4217b0:	cmp    DWORD PTR [eax],ecx
  4217b2:	dec    esp
  4217b3:	jno    0x42176b
  4217b5:	xchg   ecx,eax
  4217b6:	or     eax,0x82925a06
  4217bb:	add    BYTE PTR [ebx-0x5a],dh
  4217be:	adc    ecx,ecx
  4217c0:	mov    dl,0xd1
  4217c2:	repz jns 0x4217f0
  4217c5:	mov    ecx,DWORD PTR [esi+0x17a3bee0]
  4217cb:	(bad)  
  4217cc:	or     edi,ecx
  4217ce:	sub    al,0x41
  4217d0:	or     eax,0x4e6074b9
  4217d5:	xchg   di,ax
  4217d7:	outs   dx,BYTE PTR ds:[esi]
  4217d8:	ja     0x4217f0
  4217da:	ret    0x6764
  4217dd:	lds    esp,FWORD PTR [ebp+0x3a]
  4217e0:	rcl    dl,0x23
  4217e3:	xchg   edx,eax
  4217e4:	fbstp  TBYTE PTR [esi]
  4217e6:	adc    eax,0xb05440cb
  4217eb:	sbb    eax,0x491438ea
  4217f0:	sub    BYTE PTR [ebx],ch
  4217f2:	adc    BYTE PTR [edi],dl
  4217f4:	imul   ebp,DWORD PTR [edi+0x3e],0x849b9734
  4217fb:	fisubr DWORD PTR [ebp+0x22ae9198]
  421801:	mov    eax,0xec3cd5d0
  421806:	sub    BYTE PTR [ecx-0x2b975ddf],al
  42180c:	int    0x54
  42180e:	pop    es
  42180f:	xor    ebx,DWORD PTR ss:[esi+0x217a8b60]
  421816:	inc    ebp
  421817:	fistp  QWORD PTR [ebx+0x14ba830]
  42181d:	data16 loope 0x42183e
  421820:	test   DWORD PTR [ebp+0x14f5fd7],ebp
  421826:	ret    
  421827:	pop    ecx
  421828:	hlt    
  421829:	jmp    0xe28a7dcb
  42182e:	loope  0x421825
  421830:	adc    esp,ebx
  421832:	or     bl,bh
  421834:	scas   eax,DWORD PTR es:[edi]
  421835:	and    al,0x7f
  421837:	(bad)  
  421838:	lods   al,BYTE PTR ds:[esi]
  421839:	inc    ecx
  42183a:	jge    0x421849
  42183c:	add    DWORD PTR [ecx-0x3f07dd8a],esi
  421842:	sbb    ah,BYTE PTR [ebp+0x2b]
  421845:	push   0xffffffa3
  421847:	sbb    al,0x1b
  421849:	retf   0xa937
  42184c:	fnstenv [edx]
  42184e:	xor    bh,bl
  421850:	(bad)  
  421852:	pop    edx
  421853:	aas    
  421854:	jno    0x4218cf
  421856:	dec    esp
  421857:	xchg   ebx,eax
  421858:	mov    eax,ds:0x5fdc3ec0
  42185d:	and    al,0xfa
  42185f:	pop    ebx
  421860:	and    edx,ebx
  421862:	inc    esi
  421863:	sbb    esp,DWORD PTR [ebp-0x70]
  421866:	ins    DWORD PTR es:[edi],dx
  421867:	ret    
  421868:	popf   
  421869:	in     eax,dx
  42186a:	pop    ds
  42186b:	and    al,0xfc
  42186d:	sub    al,0xae
  42186f:	dec    esp
  421870:	pushf  
  421871:	push   edx
  421872:	repnz push ecx
  421874:	adc    al,BYTE PTR [esi+0x19533525]
  42187a:	mov    esi,0x4ea70e5b
  42187f:	rcr    BYTE PTR [eax-0xb],0xd6
  421883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421884:	pusha  
  421885:	mov    DWORD PTR [edx],edx
  421887:	gs rcl edi,cl
  42188a:	outs   dx,BYTE PTR ds:[esi]
  42188b:	push   0xffffffd8
  42188d:	push   ebx
  42188e:	mov    dl,0x61
  421890:	hlt    
  421891:	dec    ecx
  421892:	jle    0x4218b1
  421894:	or     edi,ebp
  421896:	mov    ch,0x9a
  421898:	mov    edx,0xf1a36112
  42189d:	jmp    0x60e1:0xe535ff37
  4218a4:	xor    al,0xad
  4218a6:	add    eax,0x2bf232eb
  4218ab:	iret   
  4218ac:	pop    ds
  4218ad:	ins    DWORD PTR es:[edi],dx
  4218ae:	sub    dl,BYTE PTR [esi+0x53]
  4218b1:	test   BYTE PTR [esi],dh
  4218b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218b4:	retf   0x30d6
  4218b7:	push   edi
  4218b8:	sahf   
  4218b9:	inc    ebx
  4218ba:	(bad)  
  4218bb:	push   esi
  4218bc:	xchg   ebx,eax
  4218bd:	inc    edx
  4218be:	pop    esp
  4218bf:	mov    cl,0x3d
  4218c1:	pop    ebx
  4218c2:	dec    ebx
  4218c3:	sti    
  4218c4:	and    al,0x8c
  4218c6:	int3   
  4218c7:	mov    WORD PTR [edi-0x79],fs
  4218ca:	mov    BYTE PTR [edx-0x65264252],dl
  4218d0:	pusha  
  4218d1:	loop   0x4218e4
  4218d3:	(bad)  
  4218d4:	in     al,0xf4
  4218d6:	xchg   BYTE PTR [ebp+0x7b9b6c1c],dh
  4218dc:	rcl    DWORD PTR [ecx+esi*2-0x32],cl
  4218e0:	jp     0x421955
  4218e2:	cli    
  4218e3:	jl     0x4218b8
  4218e5:	shl    bl,0x4e
  4218e8:	mov    dl,0x95
  4218ea:	pop    ecx
  4218eb:	xchg   esi,eax
  4218ec:	mov    ds:0xabc15145,al
  4218f1:	mov    ds:0x2ce17e9d,eax
  4218f6:	jb     0x4218da
  4218f8:	sbb    al,0xda
  4218fa:	repz ror DWORD PTR [ebx+0x7f],0x6c
  4218ff:	sbb    esi,DWORD PTR [eax+0x3fa6b95]
  421905:	pusha  
  421906:	sqrtps xmm1,XMMWORD PTR [ecx+edx*1+0x6e]
  42190b:	pop    esp
  42190c:	mov    dl,0x18
  42190e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42190f:	ins    DWORD PTR es:[edi],dx
  421910:	scas   eax,DWORD PTR es:[edi]
  421911:	es repz mov dl,0x9d
  421915:	inc    edi
  421916:	mov    ch,bl
  421918:	mov    al,ds:0xd29881a9
  42191d:	std    
  42191e:	jl     0x421989
  421920:	icebp  
  421921:	out    0x9b,eax
  421923:	mov    ds,WORD PTR [edi-0x24]
  421926:	mov    edi,0x4027d941
  42192b:	pop    esp
  42192c:	sbb    BYTE PTR [eax+esi*1+0x6af578f2],dl
  421933:	dec    eax
  421934:	mov    ebp,edi
  421936:	xor    ch,BYTE PTR [ecx+0xe9ef18e]
  42193c:	aas    
  42193d:	cmp    al,0x77
  42193f:	add    DWORD PTR [ebp+edi*4+0x24],edi
  421943:	sbb    ch,BYTE PTR [edx+ebp*8+0x1ab72b01]
  42194a:	ja     0x421909
  42194c:	outs   dx,DWORD PTR ds:[esi]
  42194d:	jmp    0x421992
  42194f:	sub    al,0x21
  421951:	and    dl,BYTE PTR [ebx+0x36]
  421954:	bound  eax,QWORD PTR [esi]
  421956:	ret    
  421957:	popa   
  421958:	loop   0x421910
  42195a:	adc    eax,0xc0b0d9da
  42195f:	jmp    0x4218ed
  421961:	and    eax,0x65a42454
  421966:	retf   
  421967:	fwait
  421968:	clc    
  421969:	ret    
  42196a:	sub    eax,ebx
  42196c:	lea    eax,[edx+ebp*1-0x2dceded1]
  421973:	sbb    DWORD PTR [edi-0x2d46257],ecx
  421979:	rcr    ebp,1
  42197b:	nop
  42197c:	je     0x42190d
  42197e:	xor    ebx,DWORD PTR [ebx]
  421980:	or     ebx,eax
  421982:	int3   
  421983:	inc    ebx
  421984:	mov    ?,WORD PTR [eax]
  421986:	mov    ds:0xf5c46bf6,al
  42198b:	xor    esp,DWORD PTR [ebp+0x3971e335]
  421991:	mov    ecx,0x319c4b5b
  421996:	xor    eax,0x9b3fb83b
  42199b:	sbb    al,0x89
  42199d:	jb     0x4219a6
  42199f:	in     al,dx
  4219a0:	push   eax
  4219a1:	inc    eax
  4219a2:	out    dx,al
  4219a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219a4:	loopne 0x42192a
  4219a6:	add    DWORD PTR [ebx+ecx*8+0x55],esp
  4219aa:	(bad)  
  4219ab:	mov    ecx,0xa75af2b
  4219b0:	sti    
  4219b1:	pop    ss
  4219b2:	pop    esi
  4219b3:	xor    DWORD PTR [esi+edi*2-0x38],0x3ae6a4ff
  4219bb:	mov    ecx,0xe772cffd
  4219c0:	je     0x421a0c
  4219c2:	xchg   edx,eax
  4219c3:	adc    ebx,DWORD PTR [edx+0x3a]
  4219c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219c7:	lods   al,BYTE PTR ds:[esi]
  4219c8:	dec    eax
  4219c9:	or     al,0x56
  4219cb:	(bad)  
  4219cc:	jnp    0x421962
  4219ce:	test   al,0xe6
  4219d0:	adc    al,0xa2
  4219d2:	adc    ebx,DWORD PTR [ebx]
  4219d4:	jg     0x421976
  4219d6:	jmp    0x601e5099
  4219db:	pop    ebp
  4219dc:	out    dx,al
  4219dd:	push   ss
  4219de:	aas    
  4219df:	sub    eax,0xe84052a3
  4219e4:	dec    eax
  4219e5:	lea    ebp,[edi+ebx*8-0x5e9e6add]
  4219ec:	mov    WORD PTR [ecx],?
  4219ee:	bswap  esi
  4219f0:	and    edx,DWORD PTR [edi]
  4219f2:	bound  esp,QWORD PTR [esi-0x3c]
  4219f5:	fadd   QWORD PTR [edx]
  4219f7:	scas   al,BYTE PTR es:[edi]
  4219f8:	loopne 0x421a68
  4219fa:	push   ecx
  4219fb:	(bad)  
  4219fc:	sar    BYTE PTR [ebx-0x19724952],cl
  421a02:	xchg   BYTE PTR [ebx+ecx*1-0x561c2483],ah
  421a09:	cmp    ah,BYTE PTR [edx*1+0x857aa4b]
  421a10:	and    al,0xdf
  421a12:	fld    TBYTE PTR [edx+0x7e]
  421a15:	and    BYTE PTR [edx+0x56e4d425],0xc
  421a1c:	xchg   ecx,eax
  421a1d:	jns    0x421a02
  421a1f:	sbb    eax,0x4b122482
  421a24:	in     al,dx
  421a25:	cmp    BYTE PTR [ebp-0x4dafe7b7],ch
  421a2b:	xchg   esp,eax
  421a2c:	jmp    0x421a7d
  421a2e:	ret    0x5eba
  421a31:	ss mov esi,0x3465ae98
  421a37:	into   
  421a38:	repnz out 0xa0,eax
  421a3b:	sbb    al,BYTE PTR [esi+eax*4-0x1e498db3]
  421a42:	ja     0x4219ed
  421a44:	ins    DWORD PTR es:[edi],dx
  421a45:	icebp  
  421a46:	pop    ecx
  421a47:	call   0xafc02a35
  421a4c:	mov    esp,0x1b36cf62
  421a51:	pop    ecx
  421a52:	cmp    esp,0x1f
  421a55:	adc    DWORD PTR [eax+0x7749f116],esp
  421a5b:	mov    eax,ds:0x7bc7b01b
  421a60:	adc    edx,DWORD PTR [esi-0x75e0760a]
  421a66:	jmp    0x4c293f5d
  421a6b:	fld    TBYTE PTR [eax-0x74c6be45]
  421a71:	imul   esi,DWORD PTR ds:0xe9920618,0x804a741f
  421a7b:	mov    al,ds:0x24f05f23
  421a80:	(bad)  
  421a82:	je     0x421a9f
  421a84:	out    0x7,al
  421a86:	das    
  421a87:	out    0xbb,al
  421a89:	in     al,0xd6
  421a8b:	xor    esp,DWORD PTR [edi+ebp*1+0x6a]
  421a8f:	loop   0x421b02
  421a91:	(bad)  
  421a92:	(bad)  
  421a93:	retf   
  421a94:	stos   DWORD PTR es:[edi],eax
  421a95:	mov    bl,0xff
  421a97:	retf   0xc6a0
  421a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a9b:	dec    edi
  421a9c:	pop    es
  421a9d:	add    ah,BYTE PTR [esi+0x57c6c640]
  421aa3:	and    eax,0x5bc494d7
  421aa8:	xor    dh,BYTE PTR [esi+0x79]
  421aab:	(bad)  
  421aac:	ror    BYTE PTR [ecx+0x3],1
  421aaf:	rcl    BYTE PTR [edx+esi*2-0x298fb0d9],0x19
  421ab7:	sub    al,0x1a
  421ab9:	enter  0x349f,0x3c
  421abd:	mov    ah,0x50
  421abf:	out    0x74,al
  421ac1:	mov    esi,DWORD PTR [eax]
  421ac3:	jnp    0x421b01
  421ac5:	inc    edx
  421ac6:	dec    esp
  421ac7:	mov    cl,0x8
  421ac9:	pop    ecx
  421aca:	pop    esp
  421acb:	or     al,0x8b
  421acd:	xor    ah,BYTE PTR gs:0xf7ad5c20
  421ad4:	jl     0x421a8d
  421ad6:	or     eax,0xaefc2cbd
  421adb:	add    ch,BYTE PTR [ebp+0x5d]
  421ade:	jmp    0x421b47
  421ae0:	dec    ebx
  421ae1:	xor    dh,ah
  421ae3:	or     eax,0x5c5a423c
  421ae8:	jg     0x421b29
  421aea:	push   ss
  421aeb:	cmp    al,bl
  421aed:	mov    dh,0x26
  421aef:	cmc    
  421af0:	inc    eax
  421af1:	cmp    al,0x95
  421af3:	and    al,0xa9
  421af5:	stos   DWORD PTR es:[edi],eax
  421af6:	adc    eax,0xa33f726e
  421afb:	mov    ebx,0x47f880c9
  421b00:	pop    es
  421b01:	jecxz  0x421aa2
  421b03:	stos   BYTE PTR es:[edi],al
  421b04:	mov    al,ds:0xbe7025a2
  421b09:	sti    
  421b0a:	xchg   eax,esp
  421b0c:	es sub eax,eax
  421b0f:	ds push ds
  421b11:	jmp    0x421abe
  421b13:	rcl    DWORD PTR [ebp-0x70],1
  421b16:	scas   eax,DWORD PTR es:[edi]
  421b17:	adc    ch,BYTE PTR [ebx-0x6ff7647a]
  421b1d:	mov    ah,0xbb
  421b1f:	push   esi
  421b20:	ja     0x421b5a
  421b22:	out    0x8c,al
  421b24:	or     al,0xfb
  421b26:	adc    BYTE PTR [esi],0x7
  421b29:	fnstsw WORD PTR [ecx+0x17]
  421b2c:	mov    esp,0xdb99bc63
  421b31:	cwde   
  421b32:	sahf   
  421b33:	or     edi,DWORD PTR [ebx]
  421b35:	imul   edi,DWORD PTR [edi],0xffffff8a
  421b38:	retf   0xe4
  421b3b:	pop    esp
  421b3c:	adc    DWORD PTR [bp+0x4f91],0xe0a10d3f
  421b45:	(bad)  
  421b47:	icebp  
  421b48:	or     ecx,DWORD PTR [ecx-0x21fc0f04]
  421b4e:	push   esp
  421b4f:	xor    eax,0x429535f9
  421b54:	mov    ebx,0x14f12e3e
  421b59:	test   edi,esp
  421b5b:	jmp    FWORD PTR [ecx+0x66581e66]
  421b61:	add    DWORD PTR [ecx-0x48435d27],esi
  421b67:	popa   
  421b68:	xchg   edi,eax
  421b69:	jno    0x421b6b
  421b6b:	mov    DWORD PTR [ebx-0x6a73dd01],esi
  421b71:	mov    BYTE PTR [edx+0x58],ah
  421b74:	dec    ecx
  421b75:	jmp    0x53cdef46
  421b7a:	push   ecx
  421b7b:	cmp    BYTE PTR [ebx+0x3d288dc3],dh
  421b81:	mov    esi,0xe3bcb750
  421b86:	xor    DWORD PTR [ebp+ecx*8-0x65],ecx
  421b8a:	adc    edx,DWORD PTR [edi]
  421b8c:	int3   
  421b8d:	retf   
  421b8e:	mov    dl,0x99
  421b90:	pop    ds
  421b91:	inc    esi
  421b92:	and    al,0x66
  421b94:	xchg   edi,eax
  421b95:	imul   ecx,DWORD PTR [edi+0x63],0xffffffd9
  421b99:	mov    ebp,0xc5ab867c
  421b9e:	andps  xmm2,xmm5
  421ba1:	sub    eax,edx
  421ba3:	xor    BYTE PTR [esi],0x38
  421ba6:	add    esi,DWORD PTR [eax+0x5910500d]
  421bac:	in     eax,dx
  421bad:	mov    bl,0x8b
  421baf:	lock (bad) 
  421bb1:	repnz pop ss
  421bb3:	neg    BYTE PTR [ecx-0x30]
  421bb6:	mov    eax,ds:0xce9f7fbb
  421bbb:	call   0x2acb:0x8bc99f6d
  421bc2:	rol    BYTE PTR [eax-0x25],0xd7
  421bc6:	imul   ecx,DWORD PTR [ebp-0x1],0x25
  421bca:	aaa    
  421bcb:	xor    ebx,ebp
  421bcd:	pop    ds
  421bce:	icebp  
  421bcf:	repz scas eax,DWORD PTR es:[edi]
  421bd1:	imul   ebx,DWORD PTR [esi],0x9b1d076b
  421bd7:	cmp    ah,BYTE PTR [eax-0x5c]
  421bda:	xchg   ebx,eax
  421bdb:	mov    DWORD PTR [eax],esi
  421bdd:	fadd   QWORD PTR ds:0x8c32cda8
  421be3:	test   BYTE PTR [edx-0x64],al
  421be6:	aad    0xe9
  421be8:	sbb    BYTE PTR [ebp+0x76],ah
  421beb:	out    0x37,eax
  421bed:	adc    al,0x4d
  421bef:	gs loop 0x421c01
  421bf2:	leave  
  421bf3:	sbb    ah,dh
  421bf5:	adc    eax,0x9aa4d34c
  421bfa:	mov    ebx,0x805feb78
  421bff:	mov    eax,0x78a9ae9b
  421c04:	cld    
  421c05:	shl    DWORD PTR [edx-0x1d],0x5
  421c09:	shl    BYTE PTR [ebp-0x6c],1
  421c0c:	push   edx
  421c0d:	je     0x421c37
  421c0f:	scas   eax,DWORD PTR es:[edi]
  421c10:	mov    eax,ds:0xd82b586a
  421c15:	popf   
  421c16:	lock mov al,BYTE PTR [esi+0x592f99]
  421c1d:	sub    BYTE PTR ds:0x2bbbf924,al
  421c23:	jb     0x421bef
  421c25:	pop    esi
  421c26:	pop    ecx
  421c27:	(bad)
  421c2b:	add    al,0x58
  421c2d:	hlt    
  421c2e:	push   cs
  421c2f:	fwait
  421c30:	pop    ebp
  421c31:	jae    0x421bca
  421c33:	sti    
  421c34:	dec    edi
  421c35:	(bad)  
  421c36:	mov    ebx,0xa0c65348
  421c3b:	fdivp  st(0),st
  421c3d:	jae    0x421ca8
  421c3f:	inc    ecx
  421c40:	cld    
  421c41:	sbb    al,0x55
  421c43:	push   es
  421c44:	mov    dl,0x34
  421c46:	cmc    
  421c47:	cmp    BYTE PTR [eax],bl
  421c49:	xor    DWORD PTR fs:[edi],ecx
  421c4c:	retf   
  421c4d:	(bad)  
  421c4e:	or     DWORD PTR [esi],edi
  421c50:	cmc    
  421c51:	cmp    ah,bl
  421c53:	shr    DWORD PTR [eax],cl
  421c55:	fdiv   st(2),st
  421c57:	push   ds
  421c58:	push   esp
  421c59:	inc    edi
  421c5a:	push   ecx
  421c5b:	xor    DWORD PTR [edx],edi
  421c5d:	test   al,0xf0
  421c5f:	adc    BYTE PTR [eax+0x5],ah
  421c62:	das    
  421c63:	inc    eax
  421c64:	leave  
  421c65:	rol    DWORD PTR [ecx+0x2e33df0a],cl
  421c6b:	je     0x421c55
  421c6d:	nop
  421c6e:	jne    0x421c89
  421c70:	aam    0x20
  421c72:	or     esp,edx
  421c74:	pop    eax
  421c75:	pop    es
  421c76:	shr    BYTE PTR [bx+di],0xe3
  421c7a:	mov    esp,0xda3ce473
  421c7f:	dec    ecx
  421c80:	mov    ss,WORD PTR ds:[ecx+edx*4+0x16]
  421c85:	ret    
  421c86:	inc    esi
  421c87:	ret    0x8fdd
  421c8a:	or     dh,BYTE PTR [ecx+0x62]
  421c8d:	cmp    BYTE PTR [ecx-0x69f44e00],cl
  421c93:	lods   al,BYTE PTR ds:[esi]
  421c94:	clc    
  421c95:	pop    ebx
  421c96:	out    0x7e,al
  421c98:	mov    eax,ds:0xd70812c3
  421c9d:	mov    ds:0xc44a43de,al
  421ca2:	xchg   edx,eax
  421ca3:	inc    esp
  421ca4:	call   0xb652:0x2ce6f7ac
  421cab:	jg     0x421c90
  421cad:	scas   eax,DWORD PTR es:[edi]
  421cae:	ror    DWORD PTR es:[esi+0x4317a792],0x1
  421cb6:	in     al,dx
  421cb7:	ins    DWORD PTR es:[edi],dx
  421cb8:	or     BYTE PTR [ebp-0x69],0x91
  421cbc:	cmp    ecx,DWORD PTR [edi-0x8edd073]
  421cc2:	and    DWORD PTR [edi+eax*4],edx
  421cc5:	push   0x922d71cb
  421cca:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  421ccc:	mov    ch,0xa2
  421cce:	stos   BYTE PTR es:[edi],al
  421ccf:	aas    
  421cd0:	loopne 0x421ccd
  421cd2:	in     al,dx
  421cd3:	sbb    dl,dh
  421cd5:	push   esp
  421cd6:	scas   eax,DWORD PTR es:[edi]
  421cd7:	or     ch,BYTE PTR [esp+esi*2+0x15ebc333]
  421cde:	test   BYTE PTR [esi+0x1e1ed18e],bl
  421ce4:	jg     0x421c78
  421ce6:	les    eax,FWORD PTR ds:[edx+esi*1]
  421cea:	xor    ah,BYTE PTR [ecx-0x3b492f1b]
  421cf0:	call   0x6d57bb31
  421cf5:	rcr    BYTE PTR [edi],cl
  421cf7:	mov    ds:0x77852b81,eax
  421cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cfd:	inc    esi
  421cfe:	mov    dh,0x28
  421d00:	scas   al,BYTE PTR es:[edi]
  421d01:	jmp    0x93aa235
  421d06:	sub    al,0x6f
  421d08:	(bad)  
  421d09:	out    dx,eax
  421d0a:	adc    eax,eax
  421d0c:	add    ebp,eax
  421d0e:	std    
  421d0f:	cmc    
  421d10:	dec    ebp
  421d11:	jg     0x421cdc
  421d13:	mov    cl,0x22
  421d15:	xchg   BYTE PTR [eax-0x202b1dea],bh
  421d1b:	push   ecx
  421d1c:	out    dx,eax
  421d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d1e:	out    0x2b,eax
  421d20:	rcr    DWORD PTR [edx-0x5675c5db],0xba
  421d27:	mov    ds:0xac56d678,eax
  421d2c:	inc    ebp
  421d2d:	cs mov cl,0x69
  421d30:	sbb    esp,edx
  421d32:	add    DWORD PTR [edx],eax
  421d34:	pushf  
  421d35:	mov    edi,fs
  421d37:	inc    eax
  421d38:	in     al,0x48
  421d3a:	push   ebp
  421d3b:	cli    
  421d3c:	inc    esp
  421d3d:	xchg   esi,eax
  421d3e:	cmc    
  421d3f:	xchg   esp,eax
  421d40:	mov    dl,0x25
  421d42:	fbld   TBYTE PTR [ebx]
  421d44:	xchg   ebp,eax
  421d45:	lock retf 0x27c
  421d49:	retf   
  421d4a:	loop   0x421d90
  421d4c:	jmp    0x421d50
  421d4e:	aaa    
  421d4f:	pop    esi
  421d50:	push   0x5f0a7e23
  421d55:	scas   al,BYTE PTR es:[edi]
  421d56:	pop    ebx
  421d57:	div    BYTE PTR [eax-0x241aab67]
  421d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d5e:	jle    0x421cec
  421d60:	mov    esp,0x59d01de5
  421d65:	fsub   QWORD PTR [ecx]
  421d67:	mov    edi,0x548f1cb0
  421d6c:	adc    DWORD PTR [edx-0x395def68],ebp
  421d72:	stos   BYTE PTR es:[edi],al
  421d73:	xor    eax,0x3cd07d45
  421d78:	add    DWORD PTR [ebp+0x5de80c80],0xfffffff0
  421d7f:	inc    ebx
  421d80:	fsub   DWORD PTR [ebx-0x23]
  421d83:	add    esp,DWORD PTR [eax]
  421d85:	(bad)  
  421d86:	xchg   ebx,eax
  421d87:	add    bl,bh
  421d89:	cs repz adc eax,0x5ec65141
  421d90:	push   0xffffffbf
  421d92:	call   0xb55b:0x2765f903
  421d99:	in     eax,dx
  421d9a:	mov    ebx,0x3be41a3c
  421d9f:	int    0x69
  421da1:	jbe    0x421db6
  421da3:	sahf   
  421da4:	xor    DWORD PTR [esi-0x4a],0xffffffbe
  421da8:	pop    es
  421da9:	(bad)  
  421daa:	shl    bl,1
  421dac:	icebp  
  421dad:	push   edi
  421dae:	arpl   cx,ax
  421db0:	mov    eax,ds:0xa8828e61
  421db5:	cmp    al,0xd9
  421db7:	push   edi
  421db8:	dec    ebp
  421db9:	bound  eax,QWORD PTR [edi+0x62c0e9]
  421dbf:	push   edi
  421dc0:	repnz rcr DWORD PTR [ebx],cl
  421dc3:	xor    ch,BYTE PTR [ecx]
  421dc5:	dec    edx
  421dc6:	aam    0xd2
  421dc8:	mov    ah,0x12
  421dca:	mov    DWORD PTR [esi+0x1d4aaf0c],ebx
  421dd0:	mov    ecx,0x5c665958
  421dd5:	cli    
  421dd6:	xchg   ebx,eax
  421dd7:	push   ecx
  421dd8:	(bad)  
  421dd9:	push   ss
  421dda:	pop    edx
  421ddb:	fcom   QWORD PTR [edx+0x14]
  421dde:	(bad)  
  421ddf:	push   esp
  421de0:	mov    dl,BYTE PTR [ecx+0x3c66c3d0]
  421de6:	(bad)  
  421de7:	rcl    DWORD PTR [ecx+0x28],1
  421dea:	jo     0x421de3
  421dec:	in     al,dx
  421ded:	push   cs
  421dee:	mov    esi,DWORD PTR [ebx+esi*4]
  421df1:	mov    ah,0x46
  421df3:	les    esi,FWORD PTR [edx-0x173646ec]
  421df9:	shr    BYTE PTR [esi-0x16c4a34],0xb
  421e00:	mul    DWORD PTR [esi-0x61]
  421e03:	xchg   edi,eax
  421e04:	and    dh,BYTE PTR ss:[esi+0x9917525]
  421e0b:	add    ecx,DWORD PTR [edi+edi*4-0x5deee334]
  421e12:	jecxz  0x421ddd
  421e14:	pop    edi
  421e15:	sub    eax,0xe3600c82
  421e1a:	test   eax,0x665b33bf
  421e1f:	push   ss
  421e20:	je     0x421e2f
  421e22:	out    0xe8,al
  421e24:	push   eax
  421e25:	cdq    
  421e26:	in     eax,0x9c
  421e28:	jg     0x421e6f
  421e2a:	int    0x67
  421e2c:	mov    edx,0x3bae1509
  421e31:	sar    bh,0x61
  421e34:	pop    edi
  421e35:	cmp    esp,esi
  421e37:	mov    eax,0x29a36ca
  421e3c:	jae    0x421dc1
  421e3e:	ret    
  421e3f:	fsub   DWORD PTR [edi+0x7e]
  421e42:	retf   
  421e43:	(bad)  
  421e45:	imul   DWORD PTR [eax-0x57]
  421e48:	out    dx,al
  421e49:	stos   DWORD PTR es:[edi],eax
  421e4a:	mov    BYTE PTR [edi-0x4a],bl
  421e4d:	repz dec esp
  421e4f:	mov    ah,0xc9
  421e51:	and    edx,DWORD PTR [ebp-0x2fbb8dd6]
  421e57:	mov    al,ds:0xcebe4a53
  421e5c:	sub    BYTE PTR [ebp+0x72f0e87a],0x51
  421e63:	add    eax,0x61a7a29d
  421e68:	nop
  421e69:	mov    ch,0xf
  421e6b:	sub    DWORD PTR [ecx+ebx*2+0x34c93450],esp
  421e72:	and    al,0x8c
  421e74:	call   DWORD PTR [ebx+0x2cd095bd]
  421e7a:	iret   
  421e7b:	mov    ebp,0x6abee73a
  421e80:	pop    ebx
  421e81:	fldcw  WORD PTR [edx-0x7f8b2432]
  421e87:	stos   DWORD PTR es:[edi],eax
  421e88:	aaa    
  421e89:	adc    eax,0xe54bdc95
  421e8e:	push   eax
  421e8f:	jno    0x421f09
  421e91:	sbb    eax,0xa7fb6140
  421e96:	ret    0x5142
  421e99:	in     eax,0x59
  421e9b:	fbld   TBYTE PTR [edx+0xf586215]
  421ea1:	mov    eax,ds:0x6e93e653
  421ea6:	int3   
  421ea7:	pop    eax
  421ea8:	mov    ds:0x24ee839e,eax
  421ead:	add    al,0x97
  421eaf:	dec    esi
  421eb0:	jmp    0xfae322d1
  421eb5:	add    eax,0xb87537a0
  421eba:	fist   DWORD PTR [ebx+edi*1-0xc]
  421ebe:	pop    eax
  421ebf:	out    dx,al
  421ec0:	jno    0x421e50
  421ec2:	loope  0x421ecc
  421ec4:	and    bh,BYTE PTR [ebx-0x349146ca]
  421eca:	int3   
  421ecb:	jmp    DWORD PTR [ebx]
  421ecd:	mov    dl,0x0
  421ecf:	xchg   edi,eax
  421ed0:	inc    ebx
  421ed1:	and    eax,eax
  421ed3:	pushf  
  421ed4:	scas   al,BYTE PTR es:[edi]
  421ed5:	test   al,0x31
  421ed7:	jecxz  0x421e5e
  421ed9:	mov    ah,BYTE PTR [ebx]
  421edb:	inc    esi
  421edc:	out    0x44,al
  421ede:	inc    esi
  421edf:	mov    ch,0xe2
  421ee1:	retf   0x32a8
  421ee4:	in     eax,0x4
  421ee6:	sbb    al,0xb
  421ee8:	out    dx,al
  421ee9:	dec    edi
  421eea:	scas   al,BYTE PTR es:[edi]
  421eeb:	in     eax,dx
  421eec:	or     cl,BYTE PTR [ebx]
  421eee:	pop    ebx
  421eef:	inc    edx
  421ef0:	xor    al,0x28
  421ef2:	jb     0x421eb8
  421ef4:	je     0x421f38
  421ef6:	lahf   
  421ef7:	gs mov dh,0x4d
  421efa:	inc    esi
  421efb:	test   BYTE PTR [edx+ebp*1-0x7c],ch
  421eff:	lock dec edx
  421f01:	and    eax,0x3081bc64
  421f06:	(bad)  
  421f07:	retf   0xb7ea
  421f0a:	or     al,0xde
  421f0c:	fdivr  st,st(4)
  421f0e:	ffree  st(6)
  421f10:	and    BYTE PTR [edi-0x6663c45e],dl
  421f16:	call   0xfb838556
  421f1b:	cmp    eax,0x6cc12369
  421f20:	out    dx,al
  421f21:	push   es
  421f22:	iret   
  421f23:	xchg   ebx,eax
  421f24:	bound  ecx,QWORD PTR [ebx]
  421f26:	lods   eax,DWORD PTR ds:[esi]
  421f27:	(bad)  
  421f29:	gs fwait
  421f2b:	mov    BYTE PTR [ebx],0x62
  421f2e:	push   ebp
  421f2f:	jg     0x421eb4
  421f31:	scas   al,BYTE PTR es:[edi]
  421f32:	jns    0x421f26
  421f34:	stc    
  421f35:	dec    ebx
  421f36:	add    DWORD PTR [edx-0x7e717616],ecx
  421f3c:	retf   
  421f3d:	fdivp  st(3),st
  421f3f:	data16 (bad) [edi-0x6f58787b]
  421f46:	jge    0x421f5e
  421f48:	lea    ecx,[ebx+0x8315e37]
  421f4e:	test   eax,0xf4c56d68
  421f53:	xlat   BYTE PTR ds:[ebx]
  421f54:	mov    DWORD PTR [edi],ebx
  421f56:	clc    
  421f57:	inc    ebp
  421f58:	mov    ?,WORD PTR [edx+0x4efe4ff5]
  421f5e:	or     eax,0xad6e4035
  421f63:	sub    DWORD PTR [ebx-0x1d0b0c44],0x66aa2e22
  421f6d:	pushf  
  421f6e:	cmp    al,0xfc
  421f70:	cmp    esp,ecx
  421f72:	aam    0x87
  421f74:	fldcw  WORD PTR [ebx-0xc]
  421f77:	out    dx,eax
  421f78:	repnz sbb eax,0x497184f
  421f7e:	out    dx,al
  421f7f:	or     edi,DWORD PTR [eax]
  421f81:	pop    ebx
  421f82:	outs   dx,BYTE PTR ds:[esi]
  421f83:	push   cs
  421f84:	inc    ebx
  421f85:	aad    0x7f
  421f87:	lock inc esi
  421f89:	sbb    al,0x45
  421f8b:	nop
  421f8c:	out    0x8a,eax
  421f8e:	lock test DWORD PTR [edx-0x3671d54f],ecx
  421f95:	out    dx,al
  421f96:	fist   WORD PTR [edx-0x51]
  421f99:	icebp  
  421f9a:	scas   eax,DWORD PTR es:[edi]
  421f9b:	and    bh,BYTE PTR [edi-0x7385b473]
  421fa1:	aam    0x0
  421fa3:	dec    esp
  421fa4:	jmp    0x4c3e:0x890080ea
  421fab:	js     0x421fdc
  421fad:	or     al,0x40
  421faf:	popf   
  421fb0:	inc    edi
  421fb1:	mov    dl,0xf3
  421fb3:	lea    esp,[edi+0x7d]
  421fb6:	in     eax,dx
  421fb7:	outs   dx,DWORD PTR ds:[esi]
  421fb8:	xchg   DWORD PTR [ebx+0x9],ebx
  421fbb:	(bad)  
  421fbc:	ds addr16 sahf 
  421fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fc0:	paddw  mm5,QWORD PTR [edx-0x3f]
  421fc4:	shr    BYTE PTR [edi+0x57a4af56],cl
  421fca:	jbe    0x422042
  421fcc:	rcl    BYTE PTR [ebp-0x7fb92360],1
  421fd2:	sahf   
  421fd3:	or     al,0xd1
  421fd5:	mov    cl,BYTE PTR [edx+ecx*1+0x2b]
  421fd9:	mov    eax,0xe48e50ed
  421fde:	jnp    0x421f98
  421fe0:	cmp    al,0x1f
  421fe2:	inc    eax
  421fe3:	data16 in al,0xd6
  421fe6:	ret    0xded5
  421fe9:	push   cs
  421fea:	in     eax,0xf8
  421fec:	push   edi
  421fed:	mov    WORD PTR [edi],ss
  421fef:	mov    BYTE PTR [edi+ebp*2],0x8c
  421ff3:	dec    ebp
  421ff4:	jae    0x421fa8
  421ff6:	jmp    0x5a6e2e28
  421ffb:	(bad)  
  421ffc:	in     eax,dx
  421ffd:	fsub   DWORD PTR es:[ecx-0x52]
  422001:	dec    esi
  422002:	shr    BYTE PTR [ebx-0x4],cl
  422005:	(bad)  
  422006:	js     0x421fdf
  422008:	jae    0x422054
  42200a:	pop    eax
  42200b:	loope  0x42207c
  42200d:	mov    esp,0x33aba9b9
  422012:	cmp    esi,ebp
  422014:	dec    esp
  422015:	loop   0x422014
  422017:	outs   dx,DWORD PTR ds:[esi]
  422018:	je     0x422029
  42201a:	mov    esp,0x20031137
  42201f:	push   es
  422020:	call   0x775c0f1a
  422025:	(bad)  
  422028:	call   0xba58:0xd657d76
  42202f:	push   ebp
  422030:	loope  0x422098
  422032:	xor    al,0x67
  422034:	push   ds
  422035:	sti    
  422036:	xor    al,0x2b
  422038:	retf   
  422039:	jle    0x422048
  42203b:	popf   
  42203c:	push   edi
  42203d:	(bad)  
  42203f:	mov    dh,0xa1
  422041:	pop    es
  422042:	jmp    0xaf5c:0xf1c9456b
  422049:	jne    0x422012
  42204b:	mov    ch,BYTE PTR [ebp+0x26]
  42204e:	stos   BYTE PTR es:[edi],al
  42204f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422050:	gs inc eax
  422052:	push   edx
  422053:	je     0x422055
  422055:	push   es
  422056:	mov    dh,BYTE PTR [eax]
  422058:	or     DWORD PTR [edi],ebx
  42205a:	jo     0x422096
  42205c:	mov    eax,ds:0x8bcac583
  422061:	inc    edx
  422062:	mov    ch,0x54
  422064:	mov    edi,0x75012377
  422069:	or     BYTE PTR [edx+0x5ced4f5f],dl
  42206f:	sbb    al,0xce
  422071:	icebp  
  422072:	(bad)  
  422073:	retf   0xeaf9
  422076:	jno    0x422060
  422078:	and    BYTE PTR [esi+0x77],ch
  42207b:	add    DWORD PTR [ebp-0x22],ecx
  42207e:	mov    dl,0x88
  422080:	adc    dl,bl
  422082:	and    BYTE PTR [eax+edi*8],0x97
  422086:	dec    ebx
  422087:	push   esi
  422088:	(bad)  [ecx-0x4148a298]
  42208e:	sub    edi,DWORD PTR [edx+0x8]
  422091:	loope  0x4220ed
  422093:	dec    edi
  422094:	xchg   edx,eax
  422095:	es jg  0x4220fd
  422098:	push   ebp
  422099:	mov    esi,0x85ec47ca
  42209e:	xor    ebx,DWORD PTR [ebx-0x39]
  4220a1:	fstp   st(3)
  4220a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220a4:	mov    ds:0xb11911ac,al
  4220a9:	sbb    dh,bh
  4220ab:	into   
  4220ac:	dec    edi
  4220ad:	add    edx,DWORD PTR [ecx+edx*8]
  4220b0:	sub    dl,BYTE PTR [ecx-0x5134cf5d]
  4220b6:	adc    al,0x8e
  4220b8:	mov    al,0x51
  4220ba:	inc    edx
  4220bb:	or     DWORD PTR [ebx+ebx*4],edx
  4220be:	push   eax
  4220bf:	mov    ebx,0xe03e3891
  4220c4:	dec    esi
  4220c5:	out    dx,eax
  4220c6:	mov    cl,0x93
  4220c8:	inc    ecx
  4220c9:	(bad)  
  4220ca:	gs and edx,eax
  4220cd:	test   DWORD PTR [ecx+0x1c],eax
  4220d0:	jecxz  0x4220e3
  4220d2:	adc    al,0xf3
  4220d4:	loopne 0x4220e8
  4220d6:	mov    edx,0x8741f6eb
  4220db:	out    dx,al
  4220dc:	lods   al,BYTE PTR ds:[esi]
  4220dd:	adc    al,0x7e
  4220df:	test   DWORD PTR [esi],edx
  4220e1:	inc    ecx
  4220e2:	fidivr WORD PTR ds:0xd0cc45ac
  4220e8:	test   eax,0xebe21612
  4220ed:	pop    ecx
  4220ee:	and    ecx,edx
  4220f0:	xchg   edi,eax
  4220f1:	push   0xffffffa5
  4220f3:	mov    ds:0xe8d0e28b,eax
  4220f8:	test   BYTE PTR [esi-0x1b79955b],bl
  4220fe:	and    DWORD PTR [ebx+0x66322c51],esi
  422104:	jae    0x4220f7
  422106:	cs sbb al,0x1f
  422109:	clc    
  42210a:	scas   al,BYTE PTR es:[edi]
  42210b:	adc    eax,DWORD PTR [edi*4+0xb915c6b]
  422112:	clc    
  422113:	into   
  422114:	pop    edi
  422115:	push   edi
  422116:	push   cs
  422117:	mov    bh,0x61
  422119:	enter  0x24b2,0x93
  42211d:	mov    ch,0xd8
  42211f:	or     eax,0x72faf9ec
  422124:	pop    ebx
  422125:	pop    ebx
  422126:	jno    0x42210e
  422128:	mov    ds:0xf9c97e6d,eax
  42212d:	mov    esi,0x9c81a476
  422132:	sar    BYTE PTR [esi+esi*2+0x1c81a646],1
  422139:	lahf   
  42213a:	mov    al,0x59
  42213c:	call   0x368436e3
  422141:	fcomp  QWORD PTR [esi-0x5]
  422144:	pop    es
  422145:	fwait
  422146:	inc    ebp
  422147:	xor    eax,0x346af92d
  42214c:	fdivp  st(6),st
  42214e:	cmp    al,0xbf
  422150:	pop    ds
  422151:	sub    eax,0x396b2ae2
  422156:	shr    DWORD PTR [edi+esi*4+0x42524ca8],0xd1
  42215e:	xchg   BYTE PTR [edi+0x38],ch
  422161:	sub    al,0xd2
  422163:	mov    edx,0xe2d491b6
  422168:	rcr    BYTE PTR [edi-0x70574d5d],1
  42216e:	and    BYTE PTR [ebx+eax*4-0x72],ch
  422172:	inc    esi
  422173:	add    bh,BYTE PTR [edx+edi*2+0x1e]
  422177:	push   eax
  422178:	push   es
  422179:	std    
  42217a:	dec    esp
  42217b:	test   al,0xa
  42217d:	test   DWORD PTR [ebx+ebx*1+0x3b8155a1],ecx
  422184:	pushf  
  422185:	lahf   
  422186:	cld    
  422187:	mov    ch,0x39
  422189:	or     al,0x26
  42218b:	or     bh,ah
  42218d:	jbe    0x422179
  42218f:	mov    al,BYTE PTR [edx+0x5ad49a32]
  422195:	rcl    esp,0x57
  422198:	inc    ebp
  422199:	dec    esp
  42219a:	aam    0xe7
  42219c:	sub    al,0xc
  42219e:	xlat   BYTE PTR ds:[ebx]
  42219f:	push   edx
  4221a0:	mov    ss,esp
  4221a2:	iret   
  4221a3:	call   FWORD PTR [edi-0x7c976730]
  4221a9:	cmovb  esp,DWORD PTR [ebx+0x7c]
  4221ad:	push   cs
  4221ae:	xchg   esp,eax
  4221af:	out    dx,al
  4221b0:	cmp    al,0xb2
  4221b2:	push   ss
  4221b3:	pop    ebx
  4221b4:	mov    al,0x66
  4221b6:	gs stos DWORD PTR es:[edi],eax
  4221b8:	add    esp,DWORD PTR [esi+eax*4+0x6d3f2f71]
  4221bf:	sub    al,BYTE PTR [ecx]
  4221c1:	jo     0x422168
  4221c3:	jb     0x422147
  4221c5:	pusha  
  4221c6:	rcl    BYTE PTR [edi],1
  4221c8:	mov    dl,0xd1
  4221ca:	js     0x422171
  4221cc:	lds    esp,FWORD PTR [eax+0x16c7bdd2]
  4221d2:	clc    
  4221d3:	rcr    BYTE PTR [edx+0x6a],0x2f
  4221d7:	fs cld 
  4221d9:	xchg   BYTE PTR [ebx+0x10bf41ac],ah
  4221df:	neg    BYTE PTR [eax-0xb37ff9d]
  4221e5:	pushf  
  4221e6:	jmp    0x422245
  4221e8:	aaa    
  4221e9:	mov    bl,0x98
  4221eb:	and    cl,cl
  4221ed:	sahf   
  4221ee:	(bad)  
  4221ef:	or     BYTE PTR [edi+0x75],dh
  4221f2:	mov    BYTE PTR [esi],bl
  4221f4:	loope  0x422272
  4221f6:	mov    eax,0xcb0e2de2
  4221fb:	cmp    eax,0xbd99ef9c
  422200:	outs   dx,BYTE PTR ds:[esi]
  422201:	je     0x42224c
  422203:	pop    eax
  422204:	in     eax,0x4a
  422206:	adc    al,BYTE PTR [ecx+0x41eb2f0a]
  42220c:	adc    BYTE PTR [ebx-0x70eea867],ch
  422212:	inc    ebp
  422213:	in     eax,dx
  422214:	fucomi st,st(5)
  422216:	sub    bl,BYTE PTR [edx-0x78]
  422219:	adc    DWORD PTR [edi+edx*2-0x2],edx
  42221d:	hlt    
  42221e:	sub    al,BYTE PTR [eax+0x539fee0a]
  422224:	push   0x7fb252e2
  422229:	mov    ebp,0x53f8cab7
  42222e:	cmp    eax,edi
  422230:	js     0x422280
  422232:	ja     0x422261
  422234:	aad    0x19
  422236:	mov    esi,0x1fd4f820
  42223b:	das    
  42223c:	jb     0x422275
  42223e:	pop    ecx
  42223f:	fnsave [ebx+0x146c7464]
  422245:	test   BYTE PTR [ecx+0x8],0x7b
  422249:	xchg   esp,eax
  42224a:	stos   BYTE PTR es:[edi],al
  42224b:	lods   al,BYTE PTR ds:[esi]
  42224c:	fdivr  DWORD PTR [ecx+0x71]
  42224f:	jnp    0x422254
  422251:	adc    BYTE PTR [eax-0x311b6f9],cl
  422257:	leave  
  422258:	jmp    FWORD PTR [esi]
  42225a:	xchg   edx,eax
  42225b:	ja     0x42224a
  42225d:	lahf   
  42225e:	push   0xdeffec4a
  422263:	adc    esi,DWORD PTR [ebx-0x22]
  422266:	mov    cl,0x4b
  422268:	mov    dl,0xa8
  42226a:	or     esi,DWORD PTR [esi+ecx*4]
  42226d:	loopne 0x4222c8
  42226f:	mov    edi,0xf92eb3aa
  422274:	ret    
  422275:	stc    
  422276:	lods   eax,DWORD PTR ds:[esi]
  422277:	jnp    0x422242
  422279:	ins    BYTE PTR es:[edi],dx
  42227a:	leave  
  42227b:	hlt    
  42227c:	stos   DWORD PTR es:[edi],eax
  42227d:	sbb    DWORD PTR [ebx-0x65341536],0x867d0a8
  422287:	outs   dx,BYTE PTR ds:[esi]
  422288:	inc    ecx
  422289:	je     0x4222f7
  42228b:	repz adc edx,edx
  42228e:	xchg   edx,eax
  42228f:	pop    eax
  422290:	inc    ecx
  422291:	mov    eax,0x6ea8f87c
  422296:	cmp    eax,0x7c367361
  42229b:	outs   dx,BYTE PTR ds:[esi]
  42229c:	fcomp  DWORD PTR [ebx+eiz*1]
  42229f:	mov    ah,0xfd
  4222a1:	adc    BYTE PTR [ecx+edi*1],ch
  4222a4:	xor    al,0x2f
  4222a6:	add    al,BYTE PTR [esi+0x26d8c93]
  4222ac:	xlat   BYTE PTR ds:[ebx]
  4222ad:	adc    eax,0xd05e3743
  4222b2:	adc    DWORD PTR [esi],edx
  4222b4:	ss std 
  4222b6:	in     al,0xff
  4222b8:	imul   edx,DWORD PTR [ecx],0xffffffe8
  4222bb:	pop    esp
  4222bc:	mov    ebx,0x67b7920d
  4222c1:	cmp    ah,dh
  4222c3:	pop    ebp
  4222c4:	stos   BYTE PTR es:[edi],al
  4222c5:	les    edi,FWORD PTR [edi]
  4222c7:	xchg   ecx,eax
  4222c8:	sub    edi,0x72
  4222cb:	leave  
  4222cc:	sbb    ecx,esi
  4222ce:	or     ch,BYTE PTR [edi+0x22]
  4222d1:	dec    edi
  4222d2:	or     al,BYTE PTR [ecx]
  4222d4:	sub    BYTE PTR [ebp-0x3d],al
  4222d7:	arpl   WORD PTR [edx],si
  4222d9:	push   ss
  4222da:	push   es
  4222db:	test   DWORD PTR [edi+0x2c],edi
  4222de:	xor    DWORD PTR [esi],edx
  4222e0:	sub    cl,BYTE PTR [esi+0x51e67255]
  4222e6:	push   ds
  4222e7:	(bad)  
  4222e8:	xor    edx,DWORD PTR [edi]
  4222ea:	push   0xd174ee92
  4222ef:	dec    eax
  4222f0:	jge    0x422291
  4222f2:	fist   WORD PTR [ecx-0x3f9bf1a4]
  4222f8:	cmp    al,0x58
  4222fa:	arpl   WORD PTR [edi-0x3d],dx
  4222fd:	cli    
  4222fe:	or     DWORD PTR [edi],ebp
  422300:	mov    DWORD PTR [eax+0xa],esp
  422303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422304:	loope  0x4222f1
  422306:	mov    cl,0x17
  422308:	cmp    BYTE PTR [edi+0x30],ah
  42230b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42230c:	lods   al,BYTE PTR ds:[esi]
  42230d:	pop    eax
  42230e:	mov    bl,0x7e
  422310:	retf   0xec96
  422313:	cwde   
  422314:	pusha  
  422315:	inc    ecx
  422316:	addr16 (bad) 
  422318:	xchg   ecx,eax
  422319:	int3   
  42231a:	push   0xffffffd0
  42231c:	push   edx
  42231d:	push   edx
  42231e:	outs   dx,BYTE PTR ds:[esi]
  42231f:	adc    ebx,DWORD PTR [eax+0x6e2d585e]
  422325:	push   ebx
  422326:	and    eax,0xa473274a
  42232b:	jecxz  0x422386
  42232d:	mov    al,0x6b
  42232f:	test   DWORD PTR [edx-0x29],edi
  422332:	fdiv   QWORD PTR [ebx]
  422334:	mov    eax,DWORD PTR [esp+edi*8]
  422337:	jmp    0x2d25:0x87b2209c
  42233e:	mov    al,ds:0x5dd2cc0b
  422343:	pop    ecx
  422344:	test   edx,edx
  422346:	or     eax,0xdfc9bc49
  42234b:	aam    0xe7
  42234d:	push   edx
  42234e:	data16 xchg BYTE PTR [esi],dh
  422351:	mov    edx,0x54b434ee
  422356:	cli    
  422357:	mov    edi,ebp
  422359:	jns    0x4223ad
  42235b:	(bad)  
  42235c:	fstp   DWORD PTR [esi]
  42235e:	enter  0xc511,0xd4
  422362:	sbb    al,0x46
  422364:	lea    edx,[edi+0x742ab391]
  42236a:	sub    ebx,DWORD PTR [esi+0x76]
  42236d:	aaa    
  42236e:	dec    eax
  42236f:	mov    dl,0x6f
  422371:	scas   eax,DWORD PTR es:[edi]
  422372:	mov    al,ds:0xf8509317
  422377:	dec    ecx
  422378:	fistp  DWORD PTR [eax+0x5f]
  42237b:	adc    ebx,DWORD PTR [edx]
  42237d:	xchg   cl,al
  42237f:	nop
  422380:	lods   al,BYTE PTR ds:[esi]
  422381:	push   cs
  422382:	jne    0x422347
  422384:	xor    ch,BYTE PTR [ecx*4-0x6522172e]
  42238b:	gs gs inc edx
  42238e:	xchg   ecx,eax
  42238f:	push   ebx
  422390:	(bad)  
  422391:	pop    ss
  422392:	loopne 0x42239e
  422394:	enter  0xea5,0x99
  422398:	sbb    esp,DWORD PTR [eax]
  42239a:	pop    ss
  42239b:	lock out 0x57,al
  42239e:	imul   ebp,DWORD PTR ds:0x511494ec,0x1541c05b
  4223a8:	mov    ch,dl
  4223aa:	xchg   esi,eax
  4223ab:	(bad)  
  4223ac:	cmp    al,0xe1
  4223ae:	test   eax,0xaeef76a3
  4223b3:	mov    eax,DWORD PTR [edi+0x4d]
  4223b6:	pop    ecx
  4223b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223b8:	push   edi
  4223b9:	add    BYTE PTR [edi+0x27433406],bl
  4223bf:	scas   eax,DWORD PTR es:[edi]
  4223c0:	lods   al,BYTE PTR ds:[esi]
  4223c1:	(bad)  
  4223c2:	out    0xb8,eax
  4223c4:	xor    al,0xee
  4223c6:	sbb    ah,dl
  4223c8:	jmp    0x4223a3
  4223ca:	mov    ebx,0x5dbc0fc3
  4223cf:	sbb    eax,0x37e6fa95
  4223d4:	cmp    eax,0x8a0820fd
  4223d9:	hlt    
  4223da:	jecxz  0x422407
  4223dc:	(bad)  
  4223dd:	xor    BYTE PTR [ecx+esi*1-0x554b739f],dh
  4223e4:	je     0x4223fa
  4223e6:	sar    DWORD PTR [edx+0x176b43d],0x7a
  4223ed:	rcr    BYTE PTR [ecx],1
  4223ef:	fdivr  DWORD PTR [edi+0x3542da29]
  4223f5:	(bad)  
  4223f6:	pop    ebx
  4223f7:	mov    ch,0x17
  4223f9:	sbb    al,bh
  4223fb:	into   
  4223fc:	and    BYTE PTR [ecx+0x2f74afa5],ch
  422402:	and    eax,0x5fc5f53b
  422407:	inc    ebp
  422408:	jmp    DWORD PTR [edx]
  42240a:	jbe    0x4223db
  42240c:	(bad)  [ecx]
  42240e:	std    
  42240f:	inc    esp
  422410:	test   eax,0xb61ca41d
  422415:	mov    ebp,0xa7b1e0de
  42241a:	jne    0x4223e9
  42241c:	and    eax,DWORD PTR [esi-0x7908338e]
  422422:	pop    eax
  422423:	ror    DWORD PTR [edx],cl
  422425:	jmp    0xe996:0xabf57925
  42242c:	xchg   ebx,eax
  42242d:	inc    ebx
  42242e:	mov    al,ds:0xa37a984f
  422433:	lea    edi,[ebx-0x6]
  422436:	and    ah,BYTE PTR ds:[ebp+0x72]
  42243a:	sbb    eax,0x72ac9b71
  42243f:	dec    edi
  422440:	jae    0x4223f8
  422442:	cmc    
  422443:	inc    ebx
  422444:	inc    esp
  422445:	cs cmc 
  422447:	dec    edi
  422448:	mov    dh,0x99
  42244a:	jle    0x4224c5
  42244c:	scas   eax,DWORD PTR es:[edi]
  42244d:	popa   
  42244e:	icebp  
  42244f:	leave  
  422450:	loop   0x4224a6
  422452:	xchg   ecx,eax
  422453:	pop    ds
  422454:	jne    0x422431
  422456:	cli    
  422457:	and    al,0xe9
  422459:	ficom  WORD PTR [edi]
  42245b:	pop    eax
  42245c:	pop    esp
  42245d:	repz or ebp,ebp
  422460:	push   0xf6a58201
  422465:	fidiv  WORD PTR [edi-0x12b8401]
  42246b:	iret   
  42246c:	jmp    DWORD PTR [ecx]
  42246e:	fistp  DWORD PTR [eax-0x7d]
  422471:	sti    
  422472:	dec    edx
  422473:	into   
  422474:	(bad)  
  422475:	hlt    
  422476:	pop    ebx
  422477:	icebp  
  422478:	(bad)  
  422479:	(bad)  [ebp-0x1e]
  42247c:	push   ds
  42247d:	mov    cl,0x7c
  42247f:	cmp    DWORD PTR [eax],edi
  422481:	scas   eax,DWORD PTR es:[edi]
  422482:	daa    
  422483:	mov    dl,0x4f
  422485:	mov    cl,0x21
  422487:	loope  0x422452
  422489:	or     DWORD PTR [esi-0x70],eax
  42248c:	mov    WORD PTR [edi+ecx*4],cs
  42248f:	clc    
  422490:	inc    edx
  422491:	or     al,0x83
  422493:	fmul   QWORD PTR ds:0x15a86803
  422499:	and    bl,cl
  42249b:	(bad)  
  42249c:	and    BYTE PTR [edi+edi*8+0xc6dc75],cl
  4224a3:	jmp    0x42e51349
  4224a8:	add    bh,bh
  4224aa:	xor    bh,bh
  4224ac:	xor    eax,0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x4257ed
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x582776ec
  4242c9:	sub    edx,0xffffff8b
  4242cc:	xchg   edx,eax
  4242cd:	xchg   ebp,eax
  4242ce:	add    BYTE PTR [ebx-0x7c7c9398],0x81
  4242d5:	enter  0xf187,0xa3
  4242d9:	dec    ecx
  4242da:	mov    dh,0x36
  4242dc:	and    DWORD PTR [edi],edi
  4242de:	pop    es
  4242df:	test   BYTE PTR ds:0xc19a4071,cl
  4242e5:	fimul  WORD PTR [ecx]
  4242e7:	and    al,0xd2
  4242e9:	dec    esp
  4242ea:	into   
  4242eb:	pop    ss
  4242ec:	dec    esi
  4242ed:	popf   
  4242ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242ef:	bound  eax,QWORD PTR [ecx]
  4242f1:	rol    DWORD PTR [edx],0xac
  4242f4:	es sub al,0x67
  4242f7:	retf   0x6a86
  4242fa:	pop    ds
  4242fb:	addr16 daa 
  4242fd:	and    al,0x88
  4242ff:	xor    BYTE PTR [eax],ah
  424301:	mov    cl,0x3d
  424303:	in     al,dx
  424304:	jg     0x424337
  424306:	and    eax,0x8848cce5
  42430b:	popf   
  42430c:	dec    eax
  42430d:	in     eax,dx
  42430e:	(bad)  
  42430f:	xchg   ecx,eax
  424310:	sub    al,0x2a
  424312:	or     eax,0x5b80b07f
  424317:	int3   
  424318:	sub    DWORD PTR [esi-0x673c9439],edx
  42431e:	div    BYTE PTR [eax+0x696a5eab]
  424324:	pop    edx
  424325:	mov    edi,0x5470c048
  42432a:	add    esi,DWORD PTR ds:0xa92873b9
  424330:	mov    edx,0x9a7d6214
  424335:	mov    ebx,0xc7a700c2
  42433a:	jbe    0x424355
  42433c:	jae    0x424395
  42433e:	sub    al,0x14
  424340:	repz sub DWORD PTR ds:0x2996cca3,edi
  424347:	inc    ecx
  424348:	adc    edi,DWORD PTR [edx]
  42434a:	into   
  42434b:	mov    al,0x20
  42434d:	add    BYTE PTR [eax],bh
  42434f:	mov    bh,0x51
  424351:	sbb    al,0x2b
  424353:	fsub   st,st(6)
  424355:	mov    ecx,0xa7bf3fcb
  42435a:	add    edi,DWORD PTR [eax+0x7f0a8511]
  424360:	and    edi,DWORD PTR [edi+0x68]
  424363:	mov    DWORD PTR [esi+eax*4],eax
  424366:	aaa    
  424367:	mov    ebp,0x917245fa
  42436c:	mov    WORD PTR [ebx-0x14b07d8a],fs
  424372:	enter  0xf2b3,0x38
  424376:	das    
  424377:	fadd   QWORD PTR [edi+ebp*4-0x1b]
  42437b:	repnz stos BYTE PTR es:[edi],al
  42437d:	pop    ds
  42437e:	repz xchg edi,eax
  424380:	sub    DWORD PTR [esi+0x68],edi
  424383:	fidiv  WORD PTR [edi]
  424385:	shr    DWORD PTR [ebx+ecx*4-0x18],0xca
  42438a:	mov    eax,ds:0x59153cdf
  42438f:	pop    ebp
  424390:	sbb    al,0x9c
  424392:	test   ecx,0x98681797
  424398:	inc    esi
  424399:	(bad)  
  42439a:	ja     0x4243bb
  42439c:	mov    ebx,0x66502f83
  4243a1:	dec    ebx
  4243a2:	xchg   edx,eax
  4243a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243a4:	dec    bx
  4243a6:	sahf   
  4243a7:	sti    
  4243a8:	cdq    
  4243a9:	shl    BYTE PTR [edi],1
  4243ab:	xchg   ebx,ecx
  4243ad:	aad    0xf3
  4243af:	xchg   BYTE PTR [ecx+0x15],bl
  4243b2:	or     ecx,0xe979ee86
  4243b8:	fcmove st,st(1)
  4243ba:	jns    0x4243aa
  4243bc:	addr16 je 0x424353
  4243bf:	cmc    
  4243c0:	jg     0x4243e7
  4243c2:	ret    0x3ba8
  4243c5:	xor    eax,0x4afe2f32
  4243ca:	ret    0xd704
  4243cd:	xadd   BYTE PTR [eax],al
  4243d0:	cmp    dh,BYTE PTR [edi+0x3e25de26]
  4243d6:	pusha  
  4243d7:	sbb    eax,0xe1f07daa
  4243dc:	or     eax,DWORD PTR [edi-0x67]
  4243df:	ins    DWORD PTR es:[edi],dx
  4243e0:	add    DWORD PTR [eax],eax
  4243e2:	or     ah,BYTE PTR [ebp+0x71]
  4243e5:	lods   eax,DWORD PTR ds:[esi]
  4243e6:	(bad)  
  4243e7:	test   edx,0x33b96ade
  4243ed:	mov    eax,ds:0xde05b966
  4243f2:	pop    esi
  4243f3:	jmp    0x459df5c0
  4243f8:	xchg   esi,eax
  4243f9:	mov    DWORD PTR [ebx-0x5df5c6c0],ecx
  4243ff:	les    ecx,FWORD PTR [ecx-0x3f]
  424402:	xlat   BYTE PTR ds:[ebx]
  424403:	sbb    ah,BYTE PTR [edi+0x47105de0]
  424409:	push   ss
  42440a:	add    DWORD PTR [edi+esi*1-0x3a30c0f2],edi
  424411:	mov    fs,WORD PTR [esi-0x6751f811]
  424417:	dec    ebx
  424418:	lds    ecx,FWORD PTR [ebx]
  42441a:	cld    
  42441b:	push   es
  42441c:	ja     0x4243a1
  42441e:	test   BYTE PTR [esi],0x16
  424421:	and    dl,BYTE PTR [esi]
  424423:	test   al,0xfc
  424425:	adc    edi,DWORD PTR [eax]
  424427:	sub    edx,edi
  424429:	int3   
  42442a:	push   esi
  42442b:	lahf   
  42442c:	pop    ecx
  42442d:	pop    edx
  42442e:	stc    
  42442f:	es popf 
  424431:	pushf  
  424432:	loope  0x424468
  424434:	pusha  
  424435:	add    dh,BYTE PTR [eax]
  424437:	sbb    DWORD PTR [esi-0x30],0x2fedb246
  42443e:	add    BYTE PTR [esi-0x2d],dh
  424441:	retf   0x4071
  424444:	jbe    0x424469
  424446:	and    bh,BYTE PTR [ecx+0x70203cbc]
  42444c:	push   ecx
  42444d:	mov    dl,0x67
  42444f:	(bad)  
  424451:	fcomp  QWORD PTR [esi-0x1d]
  424454:	dec    edi
  424455:	retf   
  424456:	pop    ebp
  424457:	inc    ebx
  424458:	push   ss
  424459:	in     eax,0x8c
  42445b:	dec    ebp
  42445c:	pop    ss
  42445d:	mov    ebp,cs
  42445f:	popf   
  424460:	sub    BYTE PTR [esi],cl
  424462:	dec    edx
  424463:	mov    DWORD PTR [edi],ecx
  424465:	mov    esp,ss
  424467:	lods   eax,DWORD PTR ds:[esi]
  424468:	je     0x4244e3
  42446a:	icebp  
  42446b:	or     DWORD PTR [edx],esp
  42446d:	and    BYTE PTR [ecx-0x4a6b852e],ah
  424473:	xchg   edx,eax
  424474:	dec    edx
  424475:	into   
  424476:	js     0x4244e4
  424478:	outs   dx,DWORD PTR ds:[esi]
  424479:	pop    eax
  42447a:	das    
  42447b:	test   DWORD PTR [esp+ecx*1-0x60dfea7e],ebp
  424482:	jmp    0x424422
  424484:	xchg   edx,eax
  424485:	mov    ch,0xb6
  424487:	stos   BYTE PTR es:[edi],al
  424488:	dec    ebx
  424489:	push   ss
  42448a:	push   edx
  42448b:	ret    
  42448c:	xor    BYTE PTR [ebx+eiz*1],ah
  42448f:	imul   DWORD PTR [ebx-0x60728a14]
  424495:	cmp    al,0x75
  424497:	push   ebx
  424498:	jae    0x42443d
  42449a:	pop    edi
  42449b:	retf   0x5996
  42449e:	ret    
  42449f:	ficomp WORD PTR [ecx+0x1fdced96]
  4244a5:	or     BYTE PTR ds:0x12d0a03e,0x84
  4244ac:	adc    bh,BYTE PTR [edi]
  4244ae:	repnz cmp ebx,ebp
  4244b1:	pop    ecx
  4244b2:	je     0x424502
  4244b4:	push   0x329db27e
  4244b9:	aad    0x22
  4244bb:	or     BYTE PTR [ecx-0x406320ec],al
  4244c1:	in     eax,dx
  4244c2:	leave  
  4244c3:	nop
  4244c4:	test   eax,0xa7fb15dc
  4244c9:	and    BYTE PTR [edx-0x4a],ch
  4244cc:	sub    DWORD PTR [ebx],edi
  4244ce:	jbe    0x424504
  4244d0:	retf   0x5355
  4244d3:	fsub   QWORD PTR [ebx]
  4244d5:	xchg   ebp,eax
  4244d6:	cmp    esp,edi
  4244d8:	mov    cs,ebp
  4244da:	xor    DWORD PTR [edi+edx*1-0x2be2acd3],ecx
  4244e1:	lock mov al,ds:0x5f1c175c
  4244e7:	ret    
  4244e8:	sbb    ecx,DWORD PTR [ebx+0x5beaad38]
  4244ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244ef:	fnstsw WORD PTR [ebx+0x160a7835]
  4244f5:	push   0x4369a7e2
  4244fa:	cli    
  4244fb:	xor    ebx,esi
  4244fd:	jb     0x424511
  4244ff:	jmp    0xc73c7510
  424504:	jmp    0x4c9253ce
  424509:	mov    ?,WORD PTR [edx+0x50]
  42450c:	jns    0x42455b
  42450e:	or     eax,0x48e53f3
  424513:	push   esp
  424514:	cli    
  424515:	mov    dl,0x47
  424517:	test   al,0xf4
  424519:	aaa    
  42451a:	fsubr  QWORD PTR [esi]
  42451c:	inc    esp
  42451d:	cs cmp edx,eax
  424520:	cwde   
  424521:	ins    BYTE PTR es:[edi],dx
  424522:	lods   al,BYTE PTR ds:[esi]
  424523:	call   0x39296caa
  424528:	bound  esi,QWORD PTR [edi+eax*2+0x299a55b4]
  42452f:	aam    0x35
  424531:	adc    cl,dl
  424533:	mov    al,0x79
  424535:	rcr    BYTE PTR ds:0x178f81bf,0x13
  42453c:	adc    esi,0x875504af
  424542:	cmp    eax,0x419bdbdd
  424547:	and    BYTE PTR [eax-0x346614bf],0xd6
  42454e:	mov    esp,0xe7a7a35
  424553:	push   esi
  424554:	inc    ebp
  424555:	aaa    
  424556:	push   esp
  424557:	ret    
  424558:	fidivr DWORD PTR [ebp-0x9a99c7e]
  42455e:	sub    al,0xd6
  424560:	xchg   edi,eax
  424561:	(bad)  
  424562:	std    
  424563:	jmp    0x42451c
  424565:	test   BYTE PTR [ecx-0x4b],ch
  424568:	les    ebx,FWORD PTR [ecx-0x44c01e84]
  42456e:	jno    0x424555
  424570:	cmp    eax,0xc2eb6e29
  424575:	sbb    DWORD PTR [ebx+0x1f],0x4358cdd0
  42457c:	dec    edx
  42457d:	mov    ds:0x20c69d04,eax
  424582:	mov    bl,0x18
  424584:	std    
  424585:	rol    BYTE PTR [esp+ebx*2],1
  424588:	xor    BYTE PTR [ebp+ebp*1-0xe5db4ac],bh
  42458f:	imul   ebx,DWORD PTR [eax+0x1363ef72],0xffffffdc
  424596:	in     al,dx
  424597:	sbb    al,0x93
  424599:	retf   0x5bf9
  42459c:	add    al,0xef
  42459e:	fild   WORD PTR [ebp+0x61]
  4245a1:	xor    dl,bl
  4245a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245a4:	pop    edi
  4245a5:	jo     0x42452a
  4245a7:	sub    BYTE PTR [edi+0x26],bh
  4245aa:	pop    ds
  4245ab:	and    dh,0xa0
  4245ae:	jp     0x42454a
  4245b0:	push   ebx
  4245b1:	or     ebp,DWORD PTR [esi]
  4245b3:	mov    eax,ds:0x8a8b174
  4245b8:	int    0xd7
  4245ba:	cld    
  4245bb:	(bad)  
  4245bc:	xor    bl,BYTE PTR [edi+0x5a506b6a]
  4245c2:	mov    edi,0x8efba6be
  4245c7:	xor    dh,BYTE PTR [eax-0x65d30f8a]
  4245cd:	adc    ebx,DWORD PTR [eax]
  4245cf:	pop    ebp
  4245d0:	sbb    eax,0x75cade27
  4245d5:	xchg   ebx,eax
  4245d6:	jae    0x424596
  4245d8:	int    0xf5
  4245da:	mov    cl,BYTE PTR gs:[eax+0x5c85e6c]
  4245e1:	cmp    al,0xfd
  4245e3:	and    eax,0xd6844232
  4245e8:	mov    esp,0x4c48494d
  4245ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245ee:	imul   esp,DWORD PTR [ebx],0x6b368c12
  4245f4:	cmc    
  4245f5:	xchg   edx,eax
  4245f6:	dec    ecx
  4245f7:	mov    ah,0x95
  4245f9:	jecxz  0x4245e8
  4245fb:	imul   ecx,DWORD PTR [ecx+0x59],0x13
  4245ff:	add    eax,0x65987cef
  424604:	xor    bh,BYTE PTR [ebx+0x7]
  424607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424608:	mov    esi,0x3b930ac8
  42460d:	lea    ebx,[esi]
  42460f:	xor    DWORD PTR [ebx+0x29a323cb],ebx
  424615:	pusha  
  424616:	inc    esp
  424617:	inc    edx
  424618:	sub    DWORD PTR [ebp+0x7ec3f1e3],ecx
  42461e:	add    DWORD PTR ss:[esi-0x2a1c9eec],ebx
  424625:	cmp    al,0x4f
  424627:	in     eax,dx
  424628:	jmp    0x48ea:0x30acb547
  42462f:	or     al,0xe1
  424631:	cmp    ebx,DWORD PTR [esp+ebx*2-0x28]
  424635:	aas    
  424636:	push   edi
  424637:	hlt    
  424638:	jns    0x42461f
  42463a:	es jge 0x74658f9f
  424641:	iret   
  424642:	adc    al,0x72
  424644:	dec    edx
  424645:	pushfw 
  424647:	clc    
  424648:	(bad)  
  424649:	pop    ebp
  42464a:	lea    eax,[ecx+0x53]
  42464d:	push   ds
  42464e:	imul   eax,ebx,0x8e66fb25
  424654:	sbb    bh,BYTE PTR [eax-0xa]
  424657:	xchg   ecx,eax
  424658:	paddsb mm1,QWORD PTR [ebx-0x52]
  42465c:	inc    ebp
  42465d:	bound  esp,QWORD PTR ds:0x59d9f4a0
  424663:	jnp    0x424646
  424665:	jge    0x424669
  424667:	jbe    0x42463a
  424669:	push   ecx
  42466a:	mov    cl,0x26
  42466c:	inc    edx
  42466d:	retf   0xabf7
  424670:	jo     0x424610
  424672:	leave  
  424673:	enter  0xd374,0x1f
  424677:	jl     0x4246ea
  424679:	aaa    
  42467a:	jne    0x4246ea
  42467c:	inc    esp
  42467d:	mov    esi,0x35b1bb0c
  424682:	sub    eax,DWORD PTR [ebx+0x722e65e3]
  424688:	inc    ebx
  424689:	push   esi
  42468a:	mov    ebx,0xe2152ad2
  42468f:	cdq    
  424690:	test   BYTE PTR [ebp-0x2c],dh
  424693:	mov    dl,0x4b
  424695:	fs inc esi
  424697:	gs dec ebx
  424699:	xchg   ebp,eax
  42469a:	ins    DWORD PTR es:[edi],dx
  42469b:	in     eax,0xdd
  42469d:	xchg   ebx,eax
  42469e:	pushf  
  42469f:	or     BYTE PTR cs:[ebp+0x62],al
  4246a3:	(bad)  
  4246a4:	inc    ebp
  4246a5:	test   DWORD PTR [edx-0x1a],eax
  4246a8:	mov    BYTE PTR [edi+eiz*4+0x1985298f],cl
  4246af:	iret   
  4246b0:	mov    eax,ds:0x6aa2840c
  4246b5:	and    al,0x68
  4246b7:	xchg   esi,eax
  4246b8:	dec    ebx
  4246b9:	push   edi
  4246ba:	pop    es
  4246bb:	sti    
  4246bc:	pop    ebp
  4246bd:	cld    
  4246be:	enter  0xe802,0x6b
  4246c2:	pushf  
  4246c3:	cmp    edx,esi
  4246c5:	jne    0x424656
  4246c7:	mov    bl,0xfe
  4246c9:	mov    dh,0x90
  4246cb:	into   
  4246cc:	mov    bl,0x69
  4246ce:	adc    BYTE PTR [ecx],0xdd
  4246d1:	imul   edx,DWORD PTR [esi+esi*8+0x5e],0x18
  4246d6:	(bad)  
  4246d8:	test   eax,0xbc6522b5
  4246dd:	mov    edx,0xe39117cd
  4246e2:	sbb    ebp,esi
  4246e4:	loopne 0x4246f6
  4246e6:	(bad)  
  4246e7:	jno    0x424720
  4246e9:	jl     0x424728
  4246eb:	sbb    eax,edx
  4246ed:	sub    eax,0xd92764c3
  4246f2:	data16 outs dx,BYTE PTR ds:[esi]
  4246f4:	mov    eax,DWORD PTR [esi+0x18]
  4246f7:	enter  0x4e6a,0x1
  4246fb:	jmp    0x424727
  4246fd:	sub    bl,dh
  4246ff:	int    0xd9
  424701:	das    
  424702:	xchg   ebx,eax
  424703:	inc    ebx
  424704:	push   esp
  424705:	ss dec ecx
  424707:	mov    dl,0x60
  424709:	(bad)  
  42470a:	call   0x759e:0x4b931004
  424711:	(bad)  
  424712:	dec    BYTE PTR [edi]
  424714:	jo     0x42470d
  424716:	icebp  
  424717:	adc    bh,BYTE PTR [esi]
  424719:	ret    
  42471a:	out    dx,eax
  42471b:	div    cl
  42471d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42471e:	out    0x8e,al
  424720:	and    esi,DWORD PTR [eax+ebx*4+0x30604327]
  424727:	dec    ebx
  424728:	mov    eax,0xdfe12ae0
  42472d:	sub    al,BYTE PTR [edx]
  42472f:	cmc    
  424730:	mov    esp,DWORD PTR [edx+eiz*8+0x60]
  424734:	adc    BYTE PTR [edx+ebx*4+0x3e],0x77
  424739:	in     eax,dx
  42473a:	dec    edi
  42473b:	jne    0x424766
  42473d:	icebp  
  42473e:	(bad)  
  42473f:	jmp    0x4246e1
  424741:	mov    ebx,0xee62289
  424746:	cmp    eax,0x550f4698
  42474b:	ret    0x6871
  42474e:	and    DWORD PTR [ecx-0x10beb1c0],esi
  424754:	xchg   edi,eax
  424755:	xchg   ebx,eax
  424756:	leave  
  424757:	aam    0x1c
  424759:	addr16 and eax,0xcde96dbb
  42475f:	std    
  424760:	mov    WORD PTR [eax+edi*8+0x3b6d3fa0],?
  424767:	sub    eax,0xb05cd229
  42476c:	and    ebp,DWORD PTR [edx-0xd64325b]
  424772:	inc    ebp
  424773:	test   dh,bl
  424775:	lods   eax,DWORD PTR ds:[esi]
  424776:	jle    0x4246ff
  424778:	add    eax,0x697e0780
  42477d:	scas   eax,DWORD PTR es:[edi]
  42477e:	js     0x424758
  424780:	ins    DWORD PTR es:[edi],dx
  424781:	or     BYTE PTR [ecx+ebx*4],dl
  424784:	jp     0x42476e
  424786:	push   ebp
  424787:	call   0x517890c4
  42478c:	sub    al,BYTE PTR [esi+0x2f]
  42478f:	in     eax,0xc6
  424791:	dec    ecx
  424792:	adc    BYTE PTR [edx],0x8
  424795:	xlat   BYTE PTR ds:[ebx]
  424796:	int3   
  424797:	shl    BYTE PTR gs:[edx],0x71
  42479b:	jns    0x4247c6
  42479d:	inc    esp
  42479e:	cmp    BYTE PTR [edx-0x1a6bd3ad],dl
  4247a4:	addr16 dec edi
  4247a6:	ds (bad) 
  4247a8:	sub    esi,ecx
  4247aa:	repz sti 
  4247ac:	xor    eax,0x37874e1
  4247b1:	ins    BYTE PTR es:[edi],dx
  4247b2:	xchg   edx,eax
  4247b3:	add    cl,al
  4247b5:	cs or  eax,0x93ff6f2c
  4247bb:	pop    es
  4247bc:	repz stc 
  4247be:	ret    0xa4c7
  4247c1:	pop    edx
  4247c2:	icebp  
  4247c3:	into   
  4247c4:	mov    ch,0x46
  4247c6:	std    
  4247c7:	pop    ecx
  4247c8:	jge    0x424767
  4247ca:	pop    ds
  4247cb:	cmp    ebp,eax
  4247cd:	outs   dx,DWORD PTR ds:[esi]
  4247ce:	sbb    BYTE PTR [esi-0x48],0x6e
  4247d2:	lock fidiv DWORD PTR [esi+0x70e7b5a8]
  4247d9:	add    cl,BYTE PTR ds:[esi+ebp*8-0x300d32c6]
  4247e1:	mov    ebp,0xbf93258d
  4247e6:	push   edi
  4247e7:	push   0x1a51ec82
  4247ec:	(bad)  
  4247ed:	mov    ebx,0xd8bedbdd
  4247f2:	cmp    eax,0x324ca0be
  4247f7:	mov    al,ds:0x8ccf158c
  4247fc:	ficomp WORD PTR [ecx+0x10]
  4247ff:	out    0x2d,eax
  424801:	rcr    DWORD PTR [eax-0x9],0x4e
  424805:	jno    0x42483a
  424807:	add    cl,BYTE PTR [esp+edx*8]
  42480a:	aaa    
  42480b:	add    DWORD PTR [ebx],0x40
  42480e:	in     al,0xef
  424810:	repnz sti 
  424812:	and    bh,bl
  424814:	add    esp,DWORD PTR ds:0x50d77cf1
  42481a:	add    ecx,DWORD PTR [ebp+0xa]
  42481d:	scas   eax,DWORD PTR es:[edi]
  42481e:	popa   
  42481f:	ror    BYTE PTR [ebx],cl
  424821:	xchg   DWORD PTR [edi+0x52],edx
  424824:	or     BYTE PTR ds:0x44eec8df,dh
  42482a:	ret    0x3416
  42482d:	pop    ebx
  42482e:	mov    eax,0x43307d89
  424833:	and    ecx,DWORD PTR [edx+0x33]
  424836:	inc    edi
  424837:	fld    QWORD PTR [ebp+0x42]
  42483a:	daa    
  42483b:	or     esp,eax
  42483d:	mov    esi,0x59a83294
  424842:	jecxz  0x424809
  424844:	inc    ebp
  424845:	cld    
  424846:	into   
  424847:	nop
  424848:	mov    ecx,0x37a9106a
  42484d:	or     ah,BYTE PTR [ebp-0x4d]
  424850:	add    DWORD PTR [ecx],0xffffff94
  424853:	pop    ebx
  424854:	mov    ah,cl
  424856:	dec    esp
  424857:	fdivr  DWORD PTR [esi+0x6c]
  42485a:	mov    esi,0x9fb1407a
  42485f:	jp     0x424809
  424861:	cmp    al,0x1c
  424863:	push   ecx
  424864:	xor    al,al
  424866:	or     bh,bl
  424868:	(bad)  
  424869:	out    dx,eax
  42486a:	lods   al,BYTE PTR ds:[esi]
  42486b:	push   esp
  42486c:	and    BYTE PTR [ecx-0x13],cl
  42486f:	test   BYTE PTR [eax+ecx*1-0x75],ch
  424873:	dec    edi
  424874:	mov    BYTE PTR [eax],ah
  424876:	mov    esi,0x955b77d7
  42487b:	jg     0x424846
  42487d:	or     ebp,edx
  42487f:	push   esp
  424880:	inc    ecx
  424881:	xor    DWORD PTR [ebx-0x3e8b4161],0x28
  424888:	jns    0x424875
  42488a:	or     ebx,DWORD PTR [ecx+eax*4]
  42488d:	mov    cl,0xca
  42488f:	fnstcw WORD PTR [esi+0x77e07dd3]
  424895:	jmp    0x424904
  424897:	shl    BYTE PTR [edi-0x146433ac],0x8
  42489e:	jb     0x4248ed
  4248a0:	jo     0x4248bb
  4248a2:	adc    eax,0x2a75f4ba
  4248a7:	xchg   ebx,eax
  4248a8:	call   0x9361431e
  4248ad:	mov    dh,0xc0
  4248af:	aad    0x5a
  4248b1:	jne    0x4248cb
  4248b3:	js     0x424840
  4248b5:	adc    eax,0x5eaba302
  4248ba:	jbe    0x4248ba
  4248bc:	fidivr WORD PTR [edi-0x2d43bb06]
  4248c2:	ins    BYTE PTR es:[edi],dx
  4248c3:	or     al,0x4a
  4248c5:	mov    al,0x87
  4248c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248c8:	jns    0x42484a
  4248ca:	dec    edi
  4248cb:	clc    
  4248cc:	sti    
  4248cd:	or     eax,0xa3688953
  4248d2:	fldenv [eax]
  4248d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248d5:	inc    ebp
  4248d6:	ror    ecx,cl
  4248d8:	outs   dx,DWORD PTR ds:[esi]
  4248d9:	pop    ecx
  4248da:	inc    esp
  4248db:	shl    BYTE PTR [ebx+0x6d],1
  4248de:	call   0x1d753834
  4248e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248e4:	pusha  
  4248e5:	lods   eax,DWORD PTR ds:[esi]
  4248e6:	jle    0x424892
  4248e8:	lea    ebp,cs:[eax]
  4248eb:	cmp    edx,DWORD PTR [edi]
  4248ed:	call   FWORD PTR [ecx+ecx*2]
  4248f0:	add    eax,DWORD PTR [esi+0x53ab5e48]
  4248f6:	xor    al,0xea
  4248f8:	mov    ecx,DWORD PTR [ebx-0x6026900d]
  4248fe:	es pusha 
  424900:	std    
  424901:	out    dx,al
  424902:	arpl   WORD PTR [ebx-0x3a],dx
  424905:	pusha  
  424906:	xchg   ecx,eax
  424907:	setb   BYTE PTR [edx-0x2a062e40]
  42490e:	jge    0x42489c
  424910:	fisub  WORD PTR [edx-0x24]
  424913:	or     BYTE PTR [eax],bl
  424915:	push   esp
  424916:	(bad)  
  424918:	dec    ecx
  424919:	daa    
  42491a:	jo     0x4248cc
  42491c:	inc    ebx
  42491d:	lock aas 
  42491f:	js     0x4248e9
  424921:	and    cl,BYTE PTR [edi+0xfcee23c]
  424927:	dec    ebx
  424928:	push   ds
  424929:	aaa    
  42492a:	pop    edi
  42492b:	clc    
  42492c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42492d:	mov    edx,0xfaa738f4
  424932:	loopne 0x42492d
  424934:	push   ecx
  424935:	leave  
  424936:	test   eax,0xbc13b7bf
  42493b:	(bad)  
  42493c:	jge    0x424940
  42493e:	sub    BYTE PTR [eax-0x7c],cl
  424941:	enter  0xb09d,0x91
  424945:	fcmove st,st(4)
  424947:	add    al,0x9a
  424949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42494a:	mov    bl,0xcd
  42494c:	dec    ecx
  42494d:	or     eax,0xafcb1053
  424952:	pop    ebp
  424953:	sub    BYTE PTR gs:[eax+0x5af840bc],0xaa
  42495b:	and    al,0x90
  42495d:	sub    ecx,DWORD PTR [ecx-0x4a800808]
  424963:	mov    al,ds:0xc7c2206c
  424968:	push   edi
  424969:	xchg   edi,eax
  42496a:	push   ebp
  42496b:	into   
  42496c:	loope  0x424917
  42496e:	leave  
  42496f:	jp     0x42497b
  424971:	test   eax,0xd400d889
  424976:	retf   0x627f
  424979:	in     al,0x56
  42497b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42497c:	nop
  42497d:	aas    
  42497e:	sub    DWORD PTR [ebp+0x62],esp
  424981:	inc    ebx
  424982:	adc    edi,edx
  424984:	cmp    DWORD PTR [ebp+0x73],esi
  424987:	sub    bh,BYTE PTR [esi-0x2b295ad]
  42498d:	scas   eax,DWORD PTR es:[edi]
  42498e:	adc    esp,ebx
  424990:	and    dh,BYTE PTR [ecx]
  424992:	out    dx,eax
  424993:	mov    esp,0x38857559
  424998:	pop    ecx
  424999:	dec    eax
  42499a:	cmp    al,0x93
  42499c:	xchg   esi,eax
  42499d:	push   esp
  42499e:	jge    0x424981
  4249a0:	int    0x2f
  4249a2:	pushf  
  4249a3:	push   eax
  4249a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249a6:	shr    BYTE PTR [eax],0x1e
  4249a9:	leave  
  4249aa:	cli    
  4249ab:	bound  ebp,QWORD PTR [ecx+0x1f]
  4249ae:	imul   BYTE PTR [di]
  4249b1:	pop    edi
  4249b2:	out    dx,eax
  4249b3:	jns    0x4249b1
  4249b5:	jl     0x42494c
  4249b7:	shl    BYTE PTR [eax-0x5],cl
  4249ba:	lods   al,BYTE PTR ds:[esi]
  4249bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249bc:	and    DWORD PTR [edi+ebx*8],esp
  4249bf:	iret   
  4249c0:	pushf  
  4249c1:	jg     0x4249a1
  4249c3:	test   al,0x40
  4249c5:	lods   eax,DWORD PTR ds:[esi]
  4249c6:	push   cs
  4249c7:	mov    bh,0xb4
  4249c9:	xchg   ebp,eax
  4249ca:	jmp    0xc246:0x81130271
  4249d1:	jo     0x4249c2
  4249d3:	sti    
  4249d4:	test   al,0x3e
  4249d6:	out    dx,al
  4249d7:	jp     0x4249a9
  4249d9:	dec    ebp
  4249da:	pushf  
  4249db:	push   0x20
  4249dd:	cs out 0x93,al
  4249e0:	adc    ch,0xb6
  4249e3:	sub    DWORD PTR [eax+eiz*8-0x4013256d],esp
  4249ea:	jno    0x424a2d
  4249ec:	aas    
  4249ed:	jle    0x424998
  4249ef:	fistp  QWORD PTR [ebp+0x5a]
  4249f2:	lea    esp,[ebx-0x44a7ea62]
  4249f8:	in     eax,dx
  4249f9:	cdq    
  4249fa:	daa    
  4249fb:	xchg   DWORD PTR [edi-0x71eb786a],eax
  424a01:	fcomp  QWORD PTR [edx]
  424a03:	lods   al,BYTE PTR ds:[esi]
  424a04:	push   ebp
  424a05:	fadd   QWORD PTR [esi+0x7b6d9c06]
  424a0b:	int    0xe8
  424a0d:	cmp    dh,bh
  424a0f:	fsub   DWORD PTR [eax+0x31bb4ee8]
  424a15:	pop    ds
  424a16:	jmp    FWORD PTR [ebx]
  424a18:	mov    DWORD PTR [esi+0x5],esp
  424a1b:	dec    ebx
  424a1c:	repz xor ebp,DWORD PTR [edi+0x2d]
  424a20:	xor    eax,0x3315c49
  424a25:	rol    BYTE PTR [edx-0xb3b4928],cl
  424a2b:	xchg   edi,eax
  424a2c:	mov    ah,dh
  424a2e:	jmp    0xeb8b:0xbbc87729
  424a35:	jg     0x4249c6
  424a37:	hlt    
  424a38:	dec    esi
  424a39:	gs inc edi
  424a3b:	inc    eax
  424a3c:	int3   
  424a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a3e:	push   es
  424a3f:	fcmovnu st,st(4)
  424a41:	outs   dx,BYTE PTR ds:[esi]
  424a42:	(bad)  
  424a43:	loop   0x4249fb
  424a45:	sahf   
  424a46:	pop    eax
  424a47:	jle    0x4249dd
  424a49:	int    0x64
  424a4b:	in     eax,dx
  424a4c:	xor    BYTE PTR [ebp-0x11859149],0xff
  424a53:	mov    ch,0xc3
  424a55:	jl     0x424a9c
  424a57:	mov    ds:0x3399999c,eax
  424a5c:	in     al,dx
  424a5d:	mov    DWORD PTR [edi-0x78608cfd],ebx
  424a63:	inc    ebx
  424a64:	pop    ss
  424a65:	and    eax,0xa2dd680f
  424a6a:	jecxz  0x424abc
  424a6c:	clc    
  424a6d:	pop    ds
  424a6e:	fcomp  DWORD PTR [ebp-0x44]
  424a71:	jle    0x424a01
  424a73:	mov    BYTE PTR [edi-0x54],0x28
  424a77:	(bad)
  424a7a:	cmp    BYTE PTR [ebp+0x164988b9],0x5a
  424a81:	in     eax,dx
  424a82:	stos   BYTE PTR es:[edi],al
  424a83:	ins    BYTE PTR es:[edi],dx
  424a84:	jns    0x424a75
  424a86:	and    BYTE PTR [edx+0x254fd2fa],dl
  424a8c:	push   0xfffffff5
  424a8e:	ror    DWORD PTR [edx*2-0x2fef3bef],1
  424a95:	rol    ch,0x77
  424a98:	mov    eax,0x2eb03e3f
  424a9d:	int    0x89
  424a9f:	out    dx,eax
  424aa0:	jmp    0x27fe7538
  424aa5:	in     al,dx
  424aa6:	mov    dl,0xc0
  424aa8:	pop    esi
  424aa9:	or     eax,0x252335b4
  424aae:	xchg   esi,eax
  424aaf:	adc    DWORD PTR [esp+ebx*4+0xe],0x6b1ef87d
  424ab7:	adc    edi,DWORD PTR ds:0x3b7623f2
  424abd:	adc    al,0xa4
  424abf:	ss cmc 
  424ac1:	cmp    bh,BYTE PTR [edi+eiz*2-0x6f]
  424ac5:	mov    dh,0xf0
  424ac7:	inc    esi
  424ac8:	mov    edx,0x742fae38
  424acd:	mov    al,0xa
  424acf:	sbb    eax,0x2049a30b
  424ad4:	aas    
  424ad5:	add    eax,0xfe8b4106
  424ada:	jle    0x424a67
  424adc:	push   eax
  424add:	cmp    cl,BYTE PTR [esp+ecx*1-0x6c]
  424ae1:	push   edx
  424ae2:	add    BYTE PTR [ecx+eax*1+0x14],bl
  424ae6:	lods   al,BYTE PTR ds:[esi]
  424ae7:	adc    ebp,DWORD PTR [edi]
  424ae9:	jnp    0x424b5f
  424aeb:	call   0xccda:0x46557f8a
  424af2:	xchg   bh,bh
  424af4:	test   DWORD PTR [esi],ebx
  424af6:	lock inc ebx
  424af8:	aam    0x6f
  424afa:	push   eax
  424afb:	icebp  
  424afc:	mov    ebx,0x6c73beae
  424b01:	xchg   esp,ecx
  424b03:	ins    BYTE PTR es:[edi],dx
  424b04:	adc    bl,cl
  424b06:	xchg   DWORD PTR [edx+edi*4],esp
  424b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b0a:	lahf   
  424b0b:	mov    al,ds:0xb7a295cc
  424b10:	xor    DWORD PTR [edi],ebx
  424b12:	pop    eax
  424b13:	and    ebp,esp
  424b15:	(bad)  
  424b16:	jns    0x424ab0
  424b18:	test   DWORD PTR [eax],esi
  424b1a:	jb     0x424b7d
  424b1c:	int3   
  424b1d:	aad    0xbf
  424b1f:	shl    DWORD PTR [ebp*1-0x25d0516b],1
  424b26:	xor    al,0x8d
  424b28:	dec    esi
  424b29:	cmp    esi,esp
  424b2b:	repz mov bl,0x1e
  424b2e:	mov    al,ds:0xd7ca5566
  424b33:	or     edx,0x15
  424b36:	aaa    
  424b37:	sbb    edi,DWORD PTR [ebx]
  424b39:	cmp    eax,0x3d116350
  424b3e:	xor    BYTE PTR [ebx-0x15],ch
  424b41:	cs cdq 
  424b43:	cmp    DWORD PTR [edx+esi*2+0x7d0f6431],esp
  424b4a:	fs popa 
  424b4c:	repz dec BYTE PTR [ebp-0x7b5605bf]
  424b53:	sbb    al,0x76
  424b55:	push   ecx
  424b56:	xchg   ecx,eax
  424b57:	iret   
  424b58:	sub    BYTE PTR [eax+0x75],ah
  424b5b:	scas   al,BYTE PTR es:[edi]
  424b5c:	add    al,0xaa
  424b5e:	popa   
  424b5f:	scas   eax,DWORD PTR es:[edi]
  424b60:	aam    0x6e
  424b62:	sbb    BYTE PTR [esi-0x43],cl
  424b65:	or     DWORD PTR [esi+ebx*2],esi
  424b68:	ins    BYTE PTR es:[edi],dx
  424b69:	aas    
  424b6a:	pslld  mm3,mm5
  424b6d:	add    BYTE PTR [ecx],cl
  424b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b70:	aaa    
  424b71:	dec    edi
  424b72:	shl    esp,1
  424b74:	and    BYTE PTR [eax+0x1e],ah
  424b77:	sub    al,0x99
  424b79:	lea    ebx,[eax]
  424b7b:	dec    eax
  424b7c:	sbb    BYTE PTR [edx+0x68],ch
  424b7f:	lea    edx,[edi+0x7cb9a3b7]
  424b85:	jne    0x424b75
  424b87:	add    al,0x2a
  424b89:	and    eax,0xf9d3a64f
  424b8e:	in     eax,0x32
  424b90:	mov    esp,0xd8bb90f7
  424b95:	repnz lods eax,DWORD PTR ds:[esi]
  424b97:	rdmsr  
  424b99:	call   0xb1d25b26
  424b9e:	jno    0x424b74
  424ba0:	jmp    0x6b5b:0xf60ecf03
  424ba7:	add    ebp,DWORD PTR [ebx+0x21]
  424baa:	inc    esi
  424bab:	jns    0x424c1d
  424bad:	pop    esp
  424bae:	sbb    BYTE PTR [eax],dh
  424bb0:	aaa    
  424bb1:	daa    
  424bb2:	sub    al,0x52
  424bb4:	test   DWORD PTR [ebx-0x29],esp
  424bb7:	repnz push edi
  424bb9:	(bad)  
  424bba:	jmp    0x424c36
  424bbc:	xor    BYTE PTR [ebx+0x73aca99],bh
  424bc2:	imul   edx,DWORD PTR [eax-0x303ea7cd],0x784f8f19
  424bcc:	mov    eax,0xbe65b138
  424bd1:	cmp    esp,DWORD PTR [ebx-0x10e00e3a]
  424bd7:	push   edx
  424bd8:	fidivr WORD PTR [ecx]
  424bda:	(bad)  
  424bdc:	enter  0x730e,0x6b
  424be0:	daa    
  424be1:	mov    cl,0x37
  424be3:	ficomp WORD PTR [ebx-0x3a]
  424be6:	(bad)  
  424be7:	pop    ebx
  424be8:	fiadd  DWORD PTR [ebp+0x2a]
  424beb:	adc    BYTE PTR [edi+0x3c],dl
  424bee:	xchg   esi,eax
  424bef:	sub    al,0xcc
  424bf1:	icebp  
  424bf2:	pop    esp
  424bf3:	lods   eax,DWORD PTR ds:[esi]
  424bf4:	sbb    edi,DWORD PTR [esi+0x4d3e7cf6]
  424bfa:	into   
  424bfb:	push   ebx
  424bfc:	scas   al,BYTE PTR es:[edi]
  424bfd:	jge    0x424b96
  424bff:	iret   
  424c00:	(bad)  
  424c01:	mov    ebp,DWORD PTR [eax]
  424c03:	fldcw  WORD PTR [edi]
  424c06:	adc    ch,ah
  424c08:	and    dh,BYTE PTR [eax+0x17f1ebc2]
  424c0e:	mov    ebp,0xeb39e2b
  424c13:	aam    0x8d
  424c15:	xchg   ebp,eax
  424c16:	pop    edx
  424c17:	imul   edx,DWORD PTR [edx+0x59],0xffffffd6
  424c1b:	inc    ecx
  424c1c:	xor    DWORD PTR [edi-0x68abef56],esp
  424c22:	cwde   
  424c23:	inc    ebp
  424c24:	add    BYTE PTR [eax+eiz*8],0x7f
  424c28:	leave  
  424c29:	shr    edx,cl
  424c2b:	js     0x424cac
  424c2d:	push   0x1d1a7728
  424c32:	test   al,0x55
  424c34:	cmp    DWORD PTR [ebx+esi*8+0x2f],ebx
  424c38:	push   ds
  424c39:	cwde   
  424c3a:	(bad)  [ecx+0x4ec7bb3b]
  424c40:	fiadd  DWORD PTR [ebp+0x2b]
  424c43:	fwait
  424c44:	lock ret 
  424c46:	and    bh,0x39
  424c49:	lods   eax,DWORD PTR ds:[esi]
  424c4a:	out    0x41,eax
  424c4c:	inc    ebx
  424c4d:	scas   al,BYTE PTR es:[edi]
  424c4e:	xchg   edx,eax
  424c4f:	jecxz  0x424c64
  424c51:	repnz fsub st(2),st
  424c54:	add    ebp,DWORD PTR [ebx-0x1dd85d54]
  424c5a:	jns    0x424c89
  424c5c:	add    BYTE PTR [ebp-0x4ba848ae],ah
  424c62:	mov    esp,0x5a65e8fe
  424c67:	pop    ebp
  424c68:	hlt    
  424c69:	repnz xor BYTE PTR [eax-0x429759f],al
  424c70:	lock ror ah,cl
  424c73:	into   
  424c74:	mov    eax,0x9e5ff160
  424c79:	ins    BYTE PTR es:[edi],dx
  424c7a:	or     BYTE PTR [esi+0x76],al
  424c7d:	mov    ch,0xbb
  424c7f:	test   DWORD PTR [ebx-0x5dfd21a1],esp
  424c85:	out    0x97,al
  424c87:	sbb    BYTE PTR [esi+0x2ece748f],0x5d
  424c8e:	pop    ecx
  424c8f:	pop    ecx
  424c90:	add    BYTE PTR [esi],dh
  424c92:	cmp    dh,cl
  424c94:	inc    edx
  424c95:	jmp    0x424cf5
  424c97:	hlt    
  424c98:	shl    BYTE PTR [eax-0x39fb60e6],cl
  424c9e:	out    0xa7,al
  424ca0:	jno    0x424cb2
  424ca2:	lock rcr BYTE PTR [edi-0x6497e0b],cl
  424ca9:	mov    al,ds:0xc6a3ebc6
  424cae:	sub    al,0x1a
  424cb0:	bound  ebx,QWORD PTR [ecx]
  424cb2:	jge    0x424cec
  424cb4:	jb     0x424ca8
  424cb6:	mul    DWORD PTR [ecx+0x6f80f59e]
  424cbc:	sbb    ebx,DWORD PTR [ecx-0x642344fa]
  424cc2:	cmpps  xmm1,XMMWORD PTR [ebp+0x60],0x7c
  424cc7:	lods   al,BYTE PTR ds:[esi]
  424cc8:	ins    DWORD PTR es:[edi],dx
  424cc9:	cli    
  424cca:	add    eax,0x95f5d2ac
  424ccf:	cmp    DWORD PTR [edx+eax*8-0x13c6ea79],edx
  424cd6:	and    BYTE PTR gs:0x784bd971,cl
  424cdd:	test   DWORD PTR [ebx-0x2c],edx
  424ce0:	sbb    al,0x87
  424ce2:	aam    0xe2
  424ce4:	xchg   edi,eax
  424ce5:	and    dl,BYTE PTR [esi-0x123a0091]
  424ceb:	sbb    cl,BYTE PTR [ebx]
  424ced:	aas    
  424cee:	(bad)  
  424cf0:	popa   
  424cf1:	scas   eax,DWORD PTR es:[edi]
  424cf2:	jge    0x424d29
  424cf4:	mov    ah,0x1f
  424cf6:	xor    eax,0x1bcc51f2
  424cfb:	or     ebp,0xf1c442df
  424d01:	popf   
  424d02:	ret    
  424d03:	lahf   
  424d04:	imul   edi,DWORD PTR [eax],0x78
  424d07:	not    al
  424d09:	xlat   BYTE PTR ds:[ebx]
  424d0a:	jg     0x424d79
  424d0c:	sub    ecx,eax
  424d0e:	enter  0x9b71,0x1b
  424d12:	sbb    dl,BYTE PTR [ebp+eax*1-0x35]
  424d16:	jmp    0x424d48
  424d18:	mov    dh,0x2a
  424d1a:	xlat   BYTE PTR ds:[ebx]
  424d1b:	ror    BYTE PTR [eax-0x6cfc8709],0x1
  424d22:	push   ecx
  424d23:	cmp    al,0x4e
  424d25:	stc    
  424d26:	(bad)  
  424d27:	cdq    
  424d28:	loop   0x424ccf
  424d2a:	ret    
  424d2b:	imul   esi,DWORD PTR [edx],0xffffff8e
  424d2e:	mov    WORD PTR [ebx+0x9],?
  424d31:	retf   
  424d32:	stos   BYTE PTR es:[edi],al
  424d33:	sub    eax,0x879a72f0
  424d38:	call   0xe82066f5
  424d3d:	sub    ebp,esi
  424d3f:	inc    edx
  424d40:	mov    eax,ds:0xd961d20a
  424d45:	sub    al,0x2c
  424d47:	popf   
  424d48:	jecxz  0x424ced
  424d4a:	fcmovb st,st(2)
  424d4c:	and    BYTE PTR [ecx-0x69bb44b9],cl
  424d52:	mov    ds:0xc256473f,al
  424d57:	jl     0x424ce2
  424d59:	fs ret 
  424d5b:	add    edx,DWORD PTR [esp+edx*2-0x38]
  424d5f:	inc    ebx
  424d60:	mov    ebp,0xe8107f91
  424d65:	adc    ebp,DWORD PTR [edx-0x361872da]
  424d6b:	popf   
  424d6c:	push   esp
  424d6d:	call   0xc476:0x7a924a56
  424d74:	(bad)
  424d77:	and    cl,bh
  424d79:	xchg   edi,eax
  424d7a:	jp     0x424d12
  424d7c:	fst    QWORD PTR [eax+0x5ad7909f]
  424d82:	adc    cl,cl
  424d84:	jne    0x424d4d
  424d86:	push   ebx
  424d87:	dec    ebp
  424d88:	std    
  424d89:	adc    cx,WORD PTR [edi*1+0x12512d46]
  424d91:	pop    esi
  424d92:	sbb    DWORD PTR ds:0x4adaed49,edi
  424d98:	fwait
  424d99:	mov    bl,0x3e
  424d9b:	xchg   ecx,eax
  424d9c:	push   0x958e7877
  424da1:	add    eax,DWORD PTR [edi]
  424da3:	mov    ebx,0x31fe2a85
  424da8:	and    DWORD PTR [ecx+0x6e],edx
  424dab:	imul   DWORD PTR [edx]
  424dad:	(bad)  
  424dae:	(bad)  
  424daf:	(bad)  
  424db0:	scas   eax,DWORD PTR es:[edi]
  424db1:	push   ecx
  424db2:	cwde   
  424db3:	mov    edi,0x2faf2429
  424db8:	and    BYTE PTR [edx],0xd8
  424dbb:	dec    ebx
  424dbc:	enter  0xf29a,0xe
  424dc0:	cmc    
  424dc1:	mov    edi,0x5bba3ff
  424dc6:	test   edi,esp
  424dc8:	mov    bh,0xab
  424dca:	mov    edx,0xac048bd2
  424dcf:	dec    ebx
  424dd0:	enter  0xfcde,0x89
  424dd4:	mov    edi,DWORD PTR [ecx]
  424dd6:	hlt    
  424dd7:	mov    dh,0x1f
  424dd9:	add    eax,ebx
  424ddb:	pop    eax
  424ddc:	or     eax,0x53af8750
  424de1:	out    dx,eax
  424de2:	cmp    al,0x1c
  424de4:	adc    DWORD PTR [edi+0x7a73717a],ebx
  424dea:	push   ds
  424deb:	mov    ecx,0x23b3fd2e
  424df0:	mov    ch,0xe1
  424df2:	mov    ecx,0x29128e08
  424df7:	mov    ch,0xf5
  424df9:	sub    eax,0x428dbd84
  424dfe:	cmp    ah,BYTE PTR [ebx-0x1562c848]
  424e04:	repz pushf 
  424e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e07:	push   es
  424e08:	xchg   ecx,ebx
  424e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e0b:	sbb    esi,edx
  424e0d:	xchg   ebx,eax
  424e0e:	mov    cl,BYTE PTR [eax+eax*8]
  424e11:	enter  0x70c8,0x58
  424e15:	push   edx
  424e16:	fild   WORD PTR [ebp-0x1a1813fa]
  424e1c:	in     al,dx
  424e1d:	jnp    0x424dda
  424e1f:	loope  0x424e52
  424e21:	dec    edx
  424e22:	sbb    dh,dh
  424e24:	push   esi
  424e25:	add    BYTE PTR [ebp-0x4fa4d8eb],cl
  424e2b:	out    dx,eax
  424e2c:	dec    ecx
  424e2d:	adc    ebx,ecx
  424e2f:	fdiv   DWORD PTR [ebx+0x5a50196d]
  424e35:	jl     0x424ea2
  424e37:	adc    eax,DWORD PTR [edx+0x66185a4a]
  424e3d:	pop    ss
  424e3e:	inc    ecx
  424e3f:	aad    0x8a
  424e41:	ds gs popa 
  424e44:	sbb    ch,dh
  424e46:	fdivrp st(2),st
  424e48:	push   ecx
  424e49:	jne    0x424e8d
  424e4b:	xor    eax,0x564520bf
  424e50:	or     DWORD PTR [edi],edx
  424e52:	xchg   DWORD PTR [ecx],esp
  424e54:	pop    edx
  424e55:	push   0x32538891
  424e5a:	pop    eax
  424e5b:	lea    eax,[eax-0x215d31cf]
  424e61:	sub    esp,ecx
  424e63:	add    eax,0x1069f846
  424e68:	pop    eax
  424e69:	lock lahf 
  424e6b:	nop
  424e6c:	jg     0x424e7d
  424e6e:	gs dec esp
  424e70:	xchg   esp,eax
  424e71:	hlt    
  424e72:	cmp    eax,0xd873f58f
  424e77:	push   esp
  424e78:	shr    BYTE PTR [esi+0x4cc25927],1
  424e7e:	jbe    0x424e2c
  424e80:	jle    0x424ea3
  424e82:	daa    
  424e83:	in     al,dx
  424e84:	psraw  mm2,QWORD PTR [ecx+0x20]
  424e88:	mov    bh,0x9
  424e8a:	call   0xce6e:0xa1087281
  424e91:	jecxz  0x424f03
  424e93:	mov    dl,0x6b
  424e95:	xor    dl,BYTE PTR [edx-0x3c]
  424e98:	push   si
  424e9a:	daa    
  424e9b:	xlat   BYTE PTR ds:[ebx]
  424e9c:	mov    al,ds:0xf505f774
  424ea1:	xchg   edi,eax
  424ea2:	mov    dh,0xd8
  424ea4:	stos   BYTE PTR es:[edi],al
  424ea5:	mul    DWORD PTR [ecx]
  424ea7:	(bad)  
  424ea8:	dec    eax
  424ea9:	aaa    
  424eaa:	out    0xf9,al
  424eac:	adc    BYTE PTR [edi+edi*8],ch
  424eaf:	(bad)  
  424eb0:	mov    ah,0x95
  424eb2:	or     DWORD PTR ds:0xc0e9f89a,0xe7749248
  424ebc:	mov    fs,WORD PTR ds:0x37ad22cb
  424ec2:	adc    edx,esi
  424ec4:	ds xchg ebx,eax
  424ec6:	out    dx,eax
  424ec7:	pop    ss
  424ec8:	push   0xcc414e98
  424ecd:	add    cl,BYTE PTR [edx+0x2e]
  424ed0:	fs (bad) 
  424ed2:	fdiv   st(2),st
  424ed4:	rol    DWORD PTR [esi+eiz*2],1
  424ed7:	fadd   DWORD PTR [edx]
  424ed9:	gs pop edi
  424edb:	je     0x424ea2
  424edd:	mov    bh,0x7e
  424edf:	mov    ds,WORD PTR [ecx]
  424ee1:	inc    edi
  424ee2:	outs   dx,DWORD PTR ds:[esi]
  424ee3:	or     al,0x5e
  424ee5:	jno    0x424f55
  424ee7:	xchg   ecx,eax
  424ee8:	outs   dx,BYTE PTR ds:[esi]
  424ee9:	fdiv   QWORD PTR [esi-0x2e769853]
  424eef:	loop   0x424e73
  424ef1:	xor    al,BYTE PTR ds:0x497a3a3d
  424ef7:	inc    esi
  424ef8:	out    0x44,al
  424efa:	inc    esi
  424efb:	xchg   esi,eax
  424efc:	add    esi,eax
  424efe:	mov    bl,0x1b
  424f00:	and    DWORD PTR [ecx+0x177c435c],esi
  424f06:	scas   al,BYTE PTR es:[edi]
  424f07:	xchg   esi,eax
  424f08:	xchg   ebp,eax
  424f09:	test   eax,0xe9ad1eb5
  424f0e:	sbb    al,0x3c
  424f10:	push   cs
  424f11:	or     dl,ah
  424f13:	inc    esi
  424f14:	push   ebx
  424f15:	pusha  
  424f16:	mov    ds:0x2aa01d21,al
  424f1b:	mov    dl,0xa4
  424f1d:	or     al,0x91
  424f1f:	inc    ecx
  424f20:	push   esp
  424f21:	jl     0x424ebe
  424f23:	sub    edx,ebx
  424f25:	hlt    
  424f26:	into   
  424f27:	bound  edx,QWORD PTR [ebp-0x20]
  424f2a:	mov    bh,0x84
  424f2c:	xchg   esi,eax
  424f2d:	push   esp
  424f2e:	fbstp  TBYTE PTR cs:[ebx-0x20]
  424f32:	and    DWORD PTR [ebx-0x53677827],ecx
  424f38:	ins    BYTE PTR es:[edi],dx
  424f39:	or     BYTE PTR [edx],0x9a
  424f3c:	fcmovb st,st(1)
  424f3e:	jl     0x424f8f
  424f40:	(bad)  
  424f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f42:	(bad)  
  424f43:	sar    DWORD PTR [esi+0x44a7df37],1
  424f49:	and    al,0x17
  424f4b:	jp     0x424efc
  424f4d:	jmp    0x424f93
  424f4f:	jnp    0x424f4d
  424f51:	dec    ebp
  424f52:	push   edx
  424f53:	or     bh,BYTE PTR [eax-0x17]
  424f56:	rcl    DWORD PTR [edi],1
  424f58:	pop    ss
  424f59:	cmp    ebx,DWORD PTR [esi-0x79]
  424f5c:	in     al,0xc4
  424f5e:	in     eax,0x13
  424f60:	pop    eax
  424f61:	add    DWORD PTR ds:0x4fa0d187,ecx
  424f67:	sbb    edi,DWORD PTR [esi-0x7d5efb05]
  424f6d:	xchg   ebp,eax
  424f6e:	or     dh,al
  424f70:	dec    edi
  424f71:	cmp    eax,0xa25fa642
  424f76:	ins    BYTE PTR es:[edi],dx
  424f77:	push   0xf2e82e92
  424f7c:	cli    
  424f7d:	out    0x3f,al
  424f7f:	pop    edi
  424f80:	pop    ebx
  424f81:	add    al,0xab
  424f83:	or     eax,ebx
  424f85:	int    0xa
  424f87:	test   bh,bh
  424f89:	out    dx,eax
  424f8a:	daa    
  424f8b:	(bad)  
  424f8c:	in     al,0x63
  424f8e:	test   BYTE PTR [eax-0x1],bh
  424f91:	test   BYTE PTR [edi-0x4d],cl
  424f94:	loopne 0x424faa
  424f96:	xor    al,0x83
  424f98:	fwait
  424f99:	retf   
  424f9a:	jb     0x424f8f
  424f9c:	pop    ebp
  424f9d:	mov    esi,0x530c12a4
  424fa2:	jo     0x425002
  424fa4:	jmp    0x83885541
  424fa9:	and    cl,BYTE PTR [eax+0x538d240f]
  424faf:	fsubr  DWORD PTR [ebp-0x22]
  424fb2:	repz imul ebp,DWORD PTR [ebx-0x6937ad62],0xfffffffc
  424fba:	sub    al,0xde
  424fbc:	jl     0x424fc1
  424fbe:	test   BYTE PTR [ecx],bl
  424fc0:	mov    dl,0x42
  424fc2:	iret   
  424fc3:	and    al,0xef
  424fc5:	and    al,0x6a
  424fc7:	push   edi
  424fc8:	std    
  424fc9:	mov    ch,0xf
  424fcb:	cs dec ebp
  424fcd:	out    dx,eax
  424fce:	mov    WORD PTR [ebp-0xdd5ec7f],es
  424fd4:	mov    ebx,0x69104d97
  424fd9:	mov    BYTE PTR [ebp-0x7823347a],ah
  424fdf:	std    
  424fe0:	mov    BYTE PTR [edx-0x533f5da],bl
  424fe6:	nop
  424fe7:	push   edx
  424fe8:	or     al,bh
  424fea:	and    BYTE PTR [ebx-0x23],al
  424fed:	adc    al,0xed
  424fef:	or     BYTE PTR [edi],0x4f
  424ff2:	mov    ah,0x40
  424ff4:	xor    cl,BYTE PTR [eax-0x5a2a36ff]
  424ffa:	frstorw [esi+ebx*2-0x42]
  424fff:	(bad)  
  425000:	das    
  425001:	test   eax,0x40e91b66
  425006:	pop    edi
  425007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425008:	cmp    DWORD PTR [edi-0x13],edi
  42500b:	ret    0x2b71
  42500e:	xor    al,0x42
  425010:	pop    ecx
  425011:	xchg   edx,eax
  425012:	imul   eax,esi,0x86e3d634
  425018:	jbe    0x42508f
  42501a:	call   0xe2a7:0xf543374c
  425021:	out    0x1c,eax
  425023:	mov    dl,0x7e
  425025:	pop    esi
  425026:	cmp    al,0xc9
  425028:	fcmovnb st,st(4)
  42502a:	xchg   esi,ebx
  42502c:	adc    ebp,ecx
  42502e:	cmp    DWORD PTR [eax-0x16ade1e3],edx
  425034:	or     DWORD PTR [ebp+eiz*1-0x65022864],esi
  42503b:	pusha  
  42503c:	inc    esi
  42503d:	push   es
  42503e:	inc    edx
  42503f:	jo     0xdb75c954
  425045:	jg     0x42502c
  425047:	in     eax,0xa5
  425049:	cmp    DWORD PTR [edx-0x21],0xffffffca
  42504d:	xchg   edx,eax
  42504e:	add    esp,ebp
  425050:	push   ebp
  425051:	ror    DWORD PTR [edx],1
  425053:	call   0x267d2f50
  425058:	in     eax,0xb5
  42505a:	ins    BYTE PTR es:[edi],dx
  42505b:	jl     0x425030
  42505d:	mov    eax,0x3c4b1828
  425062:	sub    al,0x4c
  425064:	call   0xc602:0x28ecdcad
  42506b:	and    al,0xf6
  42506d:	push   0xffffffc8
  42506f:	pop    ebp
  425070:	mov    esp,0x799e50e8
  425075:	pusha  
  425076:	es call 0xe2897e70
  42507c:	fstp   DWORD PTR [ebx+0x71]
  42507f:	into   
  425080:	lock fwait
  425082:	jge    0x4250e5
  425084:	sub    eax,0x6d9fa391
  425089:	js     0x42500d
  42508b:	push   es
  42508c:	xchg   ebp,eax
  42508d:	rcr    DWORD PTR [ecx-0x61],cl
  425090:	inc    ecx
  425091:	scas   eax,DWORD PTR es:[edi]
  425092:	fsubr  st(3),st
  425094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425095:	cmp    eax,0x14c8f87f
  42509a:	push   0x50c4f88a
  42509f:	fsubr  DWORD PTR fs:[ebx-0xa3ce1a5]
  4250a6:	test   eax,0x39d75446
  4250ab:	sub    al,0xb7
  4250ad:	ins    DWORD PTR es:[edi],dx
  4250ae:	mov    ch,0xa8
  4250b0:	pop    edx
  4250b1:	es push ss
  4250b3:	cmp    al,0x35
  4250b5:	push   eax
  4250b6:	aaa    
  4250b7:	pop    ebp
  4250b8:	cli    
  4250b9:	jle    0x4250e8
  4250bb:	and    esi,DWORD PTR [ebp+0x5ccf25de]
  4250c1:	shl    cl,0xb9
  4250c4:	sar    dh,cl
  4250c6:	xor    BYTE PTR [ecx+eax*8+0x5828cec3],al
  4250cd:	mov    esp,?
  4250cf:	mov    bh,BYTE PTR [esi-0x231ad714]
  4250d5:	into   
  4250d6:	sbb    al,0x78
  4250d8:	mov    ds:0xaa8658d5,eax
  4250dd:	jbe    0x425089
  4250df:	push   esi
  4250e0:	add    eax,edx
  4250e2:	inc    edx
  4250e3:	and    eax,0x3436eb2b
  4250e8:	sti    
  4250e9:	adc    BYTE PTR [edi+0x27],cl
  4250ec:	or     ah,BYTE PTR [ecx-0x7c75f4d5]
  4250f2:	push   edx
  4250f3:	retf   0x4883
  4250f6:	dec    esi
  4250f7:	(bad)  
  4250f8:	sbb    DWORD PTR [esi+0x132a6e31],edi
  4250fe:	jnp    0x425132
  425100:	pop    eax
  425101:	pop    ecx
  425102:	inc    esi
  425103:	inc    esp
  425104:	addr16 mov ecx,0xbc5dd6de
  42510a:	popa   
  42510b:	clc    
  42510c:	mov    dl,0x52
  42510e:	add    ecx,DWORD PTR [esi]
  425110:	push   edi
  425111:	cdq    
  425112:	(bad)  
  425113:	test   al,0x40
  425115:	lds    esp,FWORD PTR [ebp-0x1c]
  425118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425119:	and    ebx,DWORD PTR [ecx+edx*1]
  42511c:	adc    DWORD PTR [esi-0x41cb1106],esi
  425122:	ss mov ebp,0x9b7672c1
  425128:	dec    eax
  425129:	test   al,0x9f
  42512b:	shl    dl,cl
  42512d:	xor    ah,cl
  42512f:	mov    bl,BYTE PTR [esi+0x30]
  425132:	mov    edx,0x5fa9a727
  425137:	sub    eax,0x82de8ef3
  42513c:	xchg   ebp,eax
  42513d:	sbb    DWORD PTR [ebx],0xf6c596d8
  425143:	xor    esp,ecx
  425145:	leave  
  425146:	into   
  425147:	pop    esp
  425148:	adc    ebp,esi
  42514a:	or     BYTE PTR [ecx+0x38],ch
  42514d:	lods   eax,DWORD PTR ds:[esi]
  42514e:	and    BYTE PTR [esi],0x2f
  425151:	lds    ecx,FWORD PTR [esi-0x78]
  425154:	call   0x3ec5:0x49daf81e
  42515b:	push   ds
  42515c:	jnp    0x425172
  42515e:	xchg   DWORD PTR [edi-0x15],edi
  425161:	push   ebx
  425162:	mov    ?,WORD PTR [eax]
  425164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425165:	int    0xda
  425167:	ds pop ebx
  425169:	mov    bl,0xdf
  42516b:	mov    BYTE PTR [esi+0x1e],ah
  42516e:	lds    ecx,FWORD PTR [edi+ecx*1-0x5b]
  425172:	inc    esi
  425173:	adc    BYTE PTR [eax],ah
  425175:	inc    ecx
  425176:	jmp    0x19e34bac
  42517b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42517c:	stos   DWORD PTR es:[edi],eax
  42517d:	xlat   BYTE PTR ds:[ebx]
  42517e:	inc    edx
  42517f:	pop    ss
  425180:	pop    es
  425181:	mov    al,0x72
  425183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425184:	jg     0x4251dd
  425186:	clc    
  425187:	pop    ss
  425188:	jmp    0x9e33:0xa6699ac2
  42518f:	mov    bl,0x0
  425191:	into   
  425192:	test   BYTE PTR [ebx+0x61266d60],al
  425198:	inc    edx
  425199:	loope  0x425144
  42519b:	jmp    0x490b:0x2ae3e111
  4251a2:	(bad)  
  4251a3:	dec    esp
  4251a4:	popf   
  4251a5:	mov    BYTE PTR [esi],0xeb
  4251a8:	jp     0x42519b
  4251aa:	mov    al,0xe4
  4251ac:	jmp    0x425147
  4251ae:	push   es
  4251af:	call   0x88b16dcb
  4251b4:	test   DWORD PTR [eax+0x38],ebp
  4251b7:	fs and al,0xc6
  4251ba:	adc    al,al
  4251bc:	pushf  
  4251bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251be:	or     DWORD PTR [ebp+0x51],ecx
  4251c1:	mov    esi,0xf5d84292
  4251c6:	jl     0x4251ee
  4251c8:	int3   
  4251c9:	mov    dh,0xe8
  4251cb:	xor    bh,BYTE PTR [eax+edx*4-0x22]
  4251cf:	cld    
  4251d0:	ins    BYTE PTR es:[edi],dx
  4251d1:	or     al,0xf7
  4251d3:	mov    al,0x59
  4251d5:	(bad)  
  4251d6:	out    dx,al
  4251d7:	sbb    BYTE PTR [ebx+0x5c73c600],ah
  4251dd:	sahf   
  4251de:	je     0x425198
  4251e0:	rcr    DWORD PTR [edi+eiz*1+0x166c3554],0x57
  4251e8:	iret   
  4251e9:	shl    BYTE PTR [edi-0x56],1
  4251ec:	loopne 0x4251c7
  4251ee:	jo     0x42524b
  4251f0:	jmp    0x42519a
  4251f2:	xchg   DWORD PTR [edx-0xb],eax
  4251f5:	push   ebx
  4251f6:	sahf   
  4251f7:	fdiv   DWORD PTR [ebx-0x4]
  4251fa:	mov    BYTE PTR [ebp+0x5c],bh
  4251fd:	inc    edx
  4251fe:	inc    esi
  4251ff:	sar    BYTE PTR [ecx],cl
  425201:	sub    eax,0x282f28ba
  425206:	xor    esp,DWORD PTR ds:0x385e654d
  42520c:	bound  ebp,QWORD PTR [ebx]
  42520e:	inc    esi
  42520f:	dec    ecx
  425210:	mov    WORD PTR [si],cs
  425213:	out    0xd9,al
  425215:	adc    ah,al
  425217:	out    0xce,al
  425219:	lock mov ebx,0xa61b82bc
  42521f:	add    al,0x41
  425221:	call   0x428b7f8c
  425226:	add    ecx,DWORD PTR [edi]
  425228:	push   edi
  425229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42522a:	loopne 0x4251ed
  42522c:	rol    DWORD PTR [ebp-0x368c662c],cl
  425232:	call   0xefae3e10
  425237:	int3   
  425238:	(bad)  
  425239:	sbb    bh,al
  42523b:	(bad)  [esi+esi*2+0x56]
  42523f:	xchg   ecx,eax
  425240:	jbe    0x4252b0
  425242:	ret    0x6562
  425245:	inc    ebp
  425246:	pop    ecx
  425247:	stc    
  425248:	shl    BYTE PTR [edx],1
  42524a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42524b:	dec    edx
  42524c:	into   
  42524d:	out    0x69,eax
  42524f:	add    dh,ch
  425251:	push   cs
  425252:	jo     0x425250
  425254:	fbld   TBYTE PTR [eax+ebx*1-0x41edbc9d]
  42525b:	int3   
  42525c:	add    DWORD PTR [ecx-0xb],esp
  42525f:	inc    edx
  425260:	leave  
  425261:	mov    ebp,cs
  425263:	jp     0x4252db
  425265:	into   
  425266:	mov    ?,WORD PTR [esp+eax*4]
  425269:	jl     0x42525f
  42526b:	les    eax,FWORD PTR [eax]
  42526d:	int    0xe4
  42526f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425270:	dec    ebx
  425271:	sub    al,0x3a
  425273:	xchg   DWORD PTR [eax-0x15c544e0],esp
  425279:	rcl    WORD PTR [esp+esi*4],1
  42527d:	pop    ds
  42527e:	es aad 0x1a
  425281:	or     al,BYTE PTR [ecx+0x3ce8c6ee]
  425287:	int    0xb3
  425289:	xchg   ebp,eax
  42528a:	leave  
  42528b:	(bad)  
  42528c:	mov    ebp,0xee070c9c
  425291:	pop    es
  425292:	retf   0x35f5
  425295:	mov    esp,0x4f183f1f
  42529a:	mov    edi,0x5dea0725
  42529f:	dec    BYTE PTR [ebx+0x1d7db41e]
  4252a5:	mov    dh,0xcb
  4252a7:	inc    esp
  4252a8:	mov    dh,0x3f
  4252aa:	and    esp,ecx
  4252ac:	mov    bl,dl
  4252ae:	pop    ebp
  4252af:	push   eax
  4252b0:	popf   
  4252b1:	iret   
  4252b2:	mov    ebx,0x57502de6
  4252b7:	mov    edx,0x94c22dfb
  4252bc:	(bad)  
  4252bd:	mov    al,0x8c
  4252bf:	in     eax,0xdb
  4252c1:	fcmove st,st(6)
  4252c3:	dec    ecx
  4252c4:	xchg   ecx,eax
  4252c5:	ss mov ebx,0xa08d1c66
  4252cb:	push   0x582dcb89
  4252d0:	rol    BYTE PTR ds:0xb4a274d2,1
  4252d6:	mov    bh,ch
  4252d8:	clc    
  4252d9:	mov    bl,0xea
  4252db:	sti    
  4252dc:	xor    esp,DWORD PTR [edx-0x136097d1]
  4252e2:	and    DWORD PTR [ecx-0x77791cc4],0x5
  4252e9:	(bad)  [esi-0x3675e10a]
  4252ef:	scas   eax,DWORD PTR es:[edi]
  4252f0:	or     BYTE PTR [edx+eiz*8+0x67b1d887],bl
  4252f7:	push   ebx
  4252f8:	sub    ebx,DWORD PTR [ebp+0x3c]
  4252fb:	add    eax,0xa8703054
  425301:	mov    dl,0x76
  425303:	pop    ebp
  425304:	and    eax,0x15b3a1a7
  425309:	xchg   esp,eax
  42530a:	test   BYTE PTR [ebx],dl
  42530c:	int3   
  42530d:	ins    DWORD PTR es:[edi],dx
  42530e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  425310:	push   esi
  425311:	lock cmp DWORD PTR [ebp+0x7],ebp
  425315:	sbb    BYTE PTR [ecx+ecx*8-0x6e],cl
  425319:	out    0xdc,eax
  42531b:	mov    cl,0x10
  42531d:	dec    ecx
  42531e:	adc    esp,ecx
  425320:	sub    esi,DWORD PTR [edx+0x2]
  425323:	daa    
  425324:	inc    esi
  425325:	fwait
  425326:	mov    esp,0x469c3e5d
  42532b:	mov    ah,cl
  42532d:	jmp    0xe0820731
  425332:	jmp    0x4340:0x8d33f06d
  425339:	jo     0x4252dd
  42533b:	jge    0x42538e
  42533d:	scas   eax,DWORD PTR es:[edi]
  42533e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42533f:	dec    ebx
  425340:	shl    ebx,0x3b
  425343:	popa   
  425344:	pop    esp
  425345:	retf   
  425346:	xchg   DWORD PTR [esi],ebx
  425348:	jbe    0x42538b
  42534a:	test   eax,0x7a1f9cde
  42534f:	jb     0x42534b
  425351:	lds    ebx,FWORD PTR [edi+0x948c7eb]
  425357:	scas   al,BYTE PTR es:[edi]
  425358:	retf   0x89f4
  42535b:	push   ebp
  42535c:	cld    
  42535d:	mov    dl,0xc2
  42535f:	imul   ecx,DWORD PTR [ebx],0xffffffa2
  425362:	inc    esi
  425363:	or     eax,0x575b4cf5
  425368:	(bad)  
  42536a:	das    
  42536b:	repnz aad 0x90
  42536e:	xlat   BYTE PTR ds:[ebx]
  42536f:	(bad)  
  425370:	in     eax,dx
  425371:	mov    ebp,0x6d56f7a0
  425376:	mov    bh,0xf0
  425378:	xchg   edx,eax
  425379:	jbe    0x42535e
  42537b:	push   es
  42537c:	leave  
  42537d:	dec    eax
  42537e:	lea    ebx,[edi]
  425380:	inc    ebp
  425381:	aad    0x73
  425383:	xor    BYTE PTR [edi],ah
  425385:	sbb    BYTE PTR [edi],ch
  425387:	push   ecx
  425388:	push   esi
  425389:	sub    DWORD PTR [eax],ecx
  42538b:	push   edx
  42538c:	jcxz   0x4253b5
  42538f:	push   0xa766b715
  425394:	or     DWORD PTR [edi+0x586a2a3d],edx
  42539a:	mov    al,ds:0xa74f1518
  42539f:	fdivr  DWORD PTR [edx]
  4253a1:	jle    0x42541d
  4253a3:	call   0x7fd76825
  4253a8:	pop    ss
  4253a9:	fcom   st(5)
  4253ab:	leave  
  4253ac:	sub    eax,0x87ab0099
  4253b1:	ffreep st(4)
  4253b3:	adc    al,0x38
  4253b5:	popa   
  4253b6:	push   edi
  4253b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253b8:	add    DWORD PTR [ecx+0x65],ebp
  4253bb:	int3   
  4253bc:	jecxz  0x42539a
  4253be:	icebp  
  4253bf:	scas   al,BYTE PTR es:[edi]
  4253c0:	push   ebx
  4253c1:	mov    BYTE PTR [edi-0x77],bh
  4253c4:	icebp  
  4253c5:	in     al,0xe6
  4253c7:	pop    edx
  4253c8:	dec    ebx
  4253c9:	loopne 0x425420
  4253cb:	sub    cl,BYTE PTR [edi]
  4253cd:	or     bh,cl
  4253cf:	test   BYTE PTR [eax],dl
  4253d1:	sbb    al,0xbf
  4253d3:	cld    
  4253d4:	(bad)  
  4253d5:	dec    eax
  4253d6:	sbb    ebx,DWORD PTR [ecx]
  4253d8:	jb     0x4253d6
  4253da:	jo     0x4253c8
  4253dc:	push   ebx
  4253dd:	sbb    eax,0x5bb6c2b8
  4253e2:	ins    BYTE PTR es:[edi],dx
  4253e3:	cld    
  4253e4:	out    dx,eax
  4253e5:	sbb    esp,DWORD PTR [ecx+edx*4+0x58339c36]
  4253ec:	fisttp WORD PTR [eax+0x52]
  4253ef:	(bad)  
  4253f1:	mov    gs,WORD PTR [ebx+esi*2]
  4253f4:	enter  0x80c3,0xe8
  4253f8:	cmc    
  4253f9:	fwait
  4253fa:	out    dx,al
  4253fb:	xor    eax,0xde15f5ba
  425400:	inc    esi
  425401:	xchg   BYTE PTR [ebp+0x16ef6e1f],ch
  425407:	loope  0x42542d
  425409:	sbb    dh,BYTE PTR ds:0x48c91613
  42540f:	xor    eax,0x7e37e568
  425414:	loope  0x425413
  425416:	stc    
  425417:	lahf   
  425418:	inc    ebp
  425419:	repz mov ebx,0x5a2b9b50
  42541f:	push   esi
  425420:	cmp    BYTE PTR [edi+0x36],bl
  425423:	in     eax,dx
  425424:	push   es
  425425:	mov    cl,BYTE PTR [esp+eiz*8-0x53]
  425429:	push   esp
  42542a:	fadd   DWORD PTR [esi+0x5f93f888]
  425430:	dec    edx
  425431:	shl    DWORD PTR [edx+0x14],1
  425434:	ins    BYTE PTR es:[edi],dx
  425435:	dec    ebp
  425436:	or     BYTE PTR [edi+0x4e],ch
  425439:	fisttp DWORD PTR [ebx-0x8cacad]
  42543f:	mov    ds:0x469ef4ac,al
  425444:	mov    bh,0x9c
  425446:	pop    edi
  425447:	nop
  425448:	mov    bh,0xa4
  42544a:	pushf  
  42544b:	iret   
  42544c:	leave  
  42544d:	and    BYTE PTR ds:0xde19103f,0x29
  425454:	mov    bl,0xf3
  425456:	jg     0x425494
  425458:	data16 std 
  42545a:	sahf   
  42545b:	mov    al,0x1b
  42545d:	mov    bl,0xf1
  42545f:	and    al,0x19
  425461:	int3   
  425462:	pop    edi
  425463:	xchg   edi,eax
  425464:	stc    
  425465:	pop    es
  425466:	cs loope 0x4254c6
  425469:	scas   al,BYTE PTR es:[edi]
  42546a:	push   cs
  42546b:	push   ebx
  42546c:	push   ds
  42546d:	mov    edx,0xd69530ff
  425472:	cmp    esp,DWORD PTR [esi]
  425474:	mov    dh,0xb0
  425476:	push   eax
  425477:	out    dx,al
  425478:	loope  0x42544d
  42547a:	(bad)  
  42547b:	int3   
  42547c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42547d:	adc    al,BYTE PTR [ebx+ecx*1+0x2a]
  425481:	into   
  425482:	fcom   QWORD PTR [esi+0x14381eb]
  425488:	hlt    
  425489:	mov    dl,0xcd
  42548b:	sbb    dl,BYTE PTR gs:[esi]
  42548e:	mov    esi,0x4c882611
  425493:	rcr    DWORD PTR [ebp-0x78],0x5d
  425497:	cmp    DWORD PTR es:[ecx],eax
  42549a:	shr    bh,0x96
  42549d:	pop    eax
  42549e:	fdiv   QWORD PTR [ebp+0x7c82b25a]
  4254a4:	pop    ecx
  4254a5:	mov    al,ds:0x8688b18e
  4254aa:	pop    ss
  4254ab:	cmp    al,0xe
  4254ad:	jl     0x42549b
  4254af:	pop    edi
  4254b0:	fs (bad) 
  4254b2:	xchg   edx,eax
  4254b3:	retf   
  4254b4:	inc    eax
  4254b5:	xchg   ebp,eax
  4254b6:	jns    0x1c9a4403
  4254bc:	pop    DWORD PTR [edi]
  4254be:	mov    ebx,0x863a147a
  4254c3:	dec    ebx
  4254c4:	jb     0x4254a5
  4254c6:	or     dl,cl
  4254c8:	cld    
  4254c9:	cmp    eax,0x4b89efb
  4254ce:	sub    bl,BYTE PTR [ebp-0x74e07dd1]
  4254d4:	mov    dh,BYTE PTR [esi]
  4254d6:	sbb    eax,DWORD PTR [edx-0x1b]
  4254d9:	xchg   esi,eax
  4254da:	jmp    FWORD PTR [eax]
  4254dc:	mov    edx,DWORD PTR [ebp+0x24ba4b7e]
  4254e2:	enter  0xc3c2,0x48
  4254e6:	stos   DWORD PTR es:[edi],eax
  4254e7:	xor    esp,DWORD PTR [ebx-0x7]
  4254ea:	hlt    
  4254eb:	lahf   
  4254ec:	aaa    
  4254ed:	fdivp  st(2),st
  4254ef:	jae    0x42547a
  4254f1:	mov    esp,0xb373b46b
  4254f6:	adc    eax,0xffffffb1
  4254f9:	int    0x3f
  4254fb:	ja     0x42553c
  4254fd:	mov    DWORD PTR [eax+0x42],edi
  425500:	out    0x81,al
  425502:	cmp    al,0x3
  425504:	adc    dl,BYTE PTR [ecx+0x45]
  425507:	fimul  WORD PTR [eax]
  425509:	fistp  QWORD PTR [edi]
  42550b:	xchg   edi,eax
  42550c:	dec    eax
  42550d:	stos   BYTE PTR es:[edi],al
  42550e:	add    ecx,0x5
  425511:	mov    ebx,0x3f529ab5
  425516:	(bad)  
  425517:	out    dx,al
  425518:	add    BYTE PTR [ebp-0x586a4647],cl
  42551e:	sub    bl,ah
  425520:	cmp    DWORD PTR [eax+ebp*4-0x7a],ebp
  425524:	aam    0xf2
  425526:	xchg   ebx,eax
  425527:	mov    dh,0x34
  425529:	jecxz  0x425515
  42552b:	pop    ecx
  42552c:	or     BYTE PTR [ebp+0x4f639cc6],ch
  425532:	push   es
  425533:	fs aas 
  425535:	jns    0x4254e6
  425537:	or     cl,dh
  425539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42553a:	inc    esp
  42553b:	(bad)  
  42553d:	push   esi
  42553e:	mov    bh,0x87
  425540:	jge    0x4255a5
  425542:	retf   
  425543:	pop    edx
  425544:	cmp    al,0xdc
  425546:	sbb    bh,BYTE PTR [edi]
  425548:	push   edx
  425549:	cld    
  42554a:	mov    ebx,0x527e707f
  42554f:	mov    eax,ds:0x81b2509f
  425554:	adc    DWORD PTR [eax+0x369bcf00],eax
  42555a:	jmp    0x5d5e:0x7d29d90f
  425561:	(bad)  
  425563:	or     bh,BYTE PTR [edi+0x5bae9086]
  425569:	pusha  
  42556a:	sbb    BYTE PTR [ebp+0x6406ccec],ch
  425570:	fild   QWORD PTR [esi+edx*1]
  425573:	lock mov esi,0xfc6b5570
  425579:	mov    ds:0xd08f0469,al
  42557e:	adc    DWORD PTR [ecx+esi*4],ecx
  425581:	daa    
  425582:	mov    ecx,0xedc29047
  425587:	enter  0x4e48,0xf5
  42558b:	adc    DWORD PTR [edx],ecx
  42558d:	nop
  42558e:	outs   dx,BYTE PTR ds:[esi]
  42558f:	mov    WORD PTR [ecx+0x7a80c61e],ss
  425595:	mov    esp,0x591d650e
  42559a:	push   0x35d935f7
  42559f:	push   ebx
  4255a0:	push   esp
  4255a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255a2:	push   eax
  4255a3:	dec    edi
  4255a4:	sbb    DWORD PTR [ebx-0x26f9c1a3],ebx
  4255aa:	dec    esp
  4255ab:	mov    ch,0xfa
  4255ad:	pop    ecx
  4255ae:	mov    esp,0xe2f4ea0e
  4255b3:	imul   ecx,DWORD PTR [ecx+0x75],0xffffffbb
  4255b7:	cmc    
  4255b8:	push   0x6c
  4255ba:	cmp    BYTE PTR cs:[ebp+0x3e1d64a],bl
  4255c1:	aam    0x3e
  4255c3:	dec    esi
  4255c4:	mov    al,BYTE PTR [ecx+ebp*2-0x6813790d]
  4255cb:	fs (bad) 
  4255cd:	and    DWORD PTR [edx],edx
  4255cf:	jb     0x425579
  4255d1:	mov    edi,0x3811c7c0
  4255d6:	or     edx,DWORD PTR [ecx+eiz*8-0x1d]
  4255da:	dec    eax
  4255db:	les    esi,FWORD PTR [ebx+0x59]
  4255de:	mov    esp,0x51a16262
  4255e3:	bnd js 0x4255c2
  4255e6:	fmul   DWORD PTR [ebx-0x52464f1e]
  4255ec:	add    edx,esi
  4255ee:	ins    DWORD PTR es:[edi],dx
  4255ef:	push   edx
  4255f0:	push   0xfffffff6
  4255f2:	loope  0x4255d0
  4255f4:	sbb    BYTE PTR [ecx],ch
  4255f6:	adc    ebx,esp
  4255f8:	out    dx,eax
  4255f9:	and    BYTE PTR [edi-0x5b3c438],al
  4255ff:	stc    
  425600:	jo     0x425671
  425602:	dec    ebp
  425603:	scas   al,BYTE PTR es:[edi]
  425604:	(bad)  
  425605:	push   0x8
  425607:	cwde   
  425608:	in     eax,0x82
  42560a:	pop    edx
  42560b:	push   esi
  42560c:	xchg   ecx,eax
  42560d:	sbb    DWORD PTR [ebx-0x6a618cfb],edi
  425613:	add    BYTE PTR [eax+0x596443e6],ah
  425619:	xchg   ebx,eax
  42561a:	mov    esp,0x8dae177a
  42561f:	idiv   DWORD PTR [ebp+0x10]
  425622:	retf   
  425623:	pop    eax
  425624:	pop    esp
  425625:	mov    esp,0x2da300d8
  42562a:	and    al,0x63
  42562c:	mov    al,ds:0x75e94563
  425631:	pop    ss
  425632:	adc    edx,ebp
  425634:	stc    
  425635:	xor    al,0x7a
  425637:	xchg   esi,eax
  425638:	mov    ebx,0xcf67391c
  42563d:	inc    esp
  42563e:	add    al,0x10
  425640:	push   0xffffff85
  425642:	ret    
  425643:	inc    edi
  425644:	sub    ah,BYTE PTR [edi+edi*4]
  425647:	icebp  
  425648:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42564a:	xor    edi,ebx
  42564c:	test   cl,ch
  42564e:	mov    ch,BYTE PTR [eax-0x2d00d1cd]
  425654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425655:	or     al,0x86
  425657:	push   ebp
  425658:	dec    edx
  425659:	stos   DWORD PTR es:[edi],eax
  42565a:	sbb    al,BYTE PTR [edx+0x51a315d8]
  425660:	jmp    0x142de962
  425665:	jmp    0x3c82:0x8e1d8d3b
  42566c:	lods   al,BYTE PTR ds:[esi]
  42566d:	push   ss
  42566e:	(bad)  
  42566f:	data16 jmp 0x42562b
  425672:	jp     0x42569a
  425674:	mov    WORD PTR [eax-0x6e],fs
  425677:	dec    eax
  425678:	add    esp,DWORD PTR [ebp+0x7c]
  42567b:	loop   0x42564c
  42567d:	cli    
  42567e:	inc    ebp
  42567f:	cmp    al,BYTE PTR [ebp-0xf]
  425682:	(bad)  
  425683:	les    ebp,FWORD PTR [eax+0x7271cbb3]
  425689:	(bad)  
  42568a:	jo     0x42565f
  42568c:	imul   esp,esp,0xfffffff9
  42568f:	mov    bl,0xb5
  425691:	or     bl,BYTE PTR [eax-0x5b]
  425694:	add    dl,cl
  425696:	inc    BYTE PTR [esp+ebp*4]
  425699:	mov    eax,ds:0xd6650975
  42569e:	(bad)  [edi-0x5df27796]
  4256a4:	pop    ecx
  4256a5:	push   ss
  4256a6:	gs into 
  4256a8:	xor    DWORD PTR [edx],0xc80fd197
  4256ae:	pop    ebp
  4256af:	hlt    
  4256b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256b1:	cmp    bh,cl
  4256b3:	add    al,BYTE PTR [ebx]
  4256b5:	xor    BYTE PTR [eax-0x29b27a9c],dh
  4256bb:	dec    esp
  4256bc:	cs jg  0x425684
  4256bf:	sub    eax,0xf8ff8fdc
  4256c4:	xchg   ebx,eax
  4256c5:	imul   edi,edi,0xffffff9b
  4256c8:	in     al,0x1d
  4256ca:	xchg   DWORD PTR [ebp+0x22],esp
  4256cd:	jb     0x4256db
  4256cf:	xor    edi,DWORD PTR [edx]
  4256d1:	sbb    bl,dh
  4256d3:	arpl   WORD PTR [ecx-0x72d98e54],si
  4256d9:	pop    ds
  4256da:	es iret 
  4256dc:	mov    ecx,DWORD PTR [ebx+eiz*4-0xe3ea55d]
  4256e3:	push   edi
  4256e4:	enter  0x60d0,0x41
  4256e8:	pop    ss
  4256e9:	and    eax,DWORD PTR [ebx+0x4a]
  4256ec:	pop    ecx
  4256ed:	pop    esi
  4256ee:	inc    ecx
  4256ef:	imul   esp,edx,0x12dae152
  4256f5:	stos   BYTE PTR es:[edi],al
  4256f6:	mov    al,ds:0x3cf79175
  4256fb:	pop    ebp
  4256fc:	and    al,0x19
  4256fe:	add    DWORD PTR [edi+ebp*1],ecx
  425701:	pop    ebx
  425702:	ss sub al,0x64
  425705:	sbb    eax,0x4e323805
  42570a:	aaa    
  42570b:	add    al,0x86
  42570d:	and    al,0x23
  42570f:	and    al,0xc4
  425711:	xchg   esp,eax
  425712:	fninit 
  425714:	cmp    al,BYTE PTR ds:0x31959afa
  42571a:	mov    dl,0x6c
  42571c:	outs   dx,DWORD PTR ds:[esi]
  42571d:	pop    esi
  42571e:	out    dx,al
  42571f:	test   ecx,0xf1ed02d7
  425725:	push   0xffffffdc
  425727:	xor    esp,DWORD PTR [eax]
  425729:	ins    BYTE PTR es:[edi],dx
  42572a:	adc    al,0xfb
  42572c:	xor    DWORD PTR [edi-0x161a9023],edi
  425732:	fmul   DWORD PTR [ebx+0x4d]
  425735:	or     eax,0x6b6df4b7
  42573a:	fcom   DWORD PTR [esi]
  42573c:	enter  0xe155,0x6d
  425740:	test   eax,0x9775f62a
  425745:	fld    QWORD PTR [eax-0x26]
  425748:	and    al,0x9e
  42574a:	adc    ebp,DWORD PTR [esp+ebx*2-0x1]
  42574e:	icebp  
  42574f:	push   es
  425750:	mov    ebx,0xae3d503f
  425755:	inc    ebp
  425756:	(bad)  
  425757:	fidiv  WORD PTR [edx-0x3a]
  42575a:	dec    ebx
  42575b:	fisubr WORD PTR [edx]
  42575d:	mov    ebx,0x36428f04
  425762:	push   cs
  425763:	mov    edi,0x6da835f
  425768:	xor    DWORD PTR [esp+eax*2+0x6f],edx
  42576c:	or     al,0x98
  42576e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42576f:	push   eax
  425770:	add    eax,0xaf4e1a53
  425775:	imul   ebp,DWORD PTR [ebp+0x6f6991ba],0xb096e387
  42577f:	das    
  425780:	xchg   DWORD PTR [ebx],edi
  425782:	mov    edx,0xef9022a8
  425787:	fdivp  st(7),st
  425789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42578a:	scas   al,BYTE PTR es:[edi]
  42578b:	mov    eax,0x3b0f7a70
  425790:	mov    eax,0xc0edbf52
  425795:	inc    esi
  425796:	fistp  WORD PTR [ebx+ebx*2+0x2e]
  42579a:	pop    edx
  42579b:	idiv   BYTE PTR [eax-0x62672c27]
  4257a1:	and    eax,0x39b1395b
  4257a6:	sbb    esp,DWORD PTR [eax+0x92b0551]
  4257ac:	mov    dh,0x4f
  4257ae:	mov    ch,BYTE PTR ds:0x6bba3671
  4257b4:	out    dx,eax
  4257b5:	mov    WORD PTR [ebx-0x5c3af78b],es
  4257bb:	test   DWORD PTR [edx+0x5c],edx
  4257be:	out    dx,eax
  4257bf:	dec    edi
  4257c0:	mov    edi,0xf79673e2
  4257c5:	loopne 0x425820
  4257c7:	loope  0x425833
  4257c9:	pop    ss
  4257ca:	and    bh,BYTE PTR [ecx]
  4257cc:	jae    0x4257a2
  4257ce:	sahf   
  4257cf:	or     DWORD PTR [edi+0xb],esp
  4257d2:	fwait
  4257d3:	ins    BYTE PTR es:[edi],dx
  4257d4:	push   esi
  4257d5:	mov    bl,0x42
  4257d7:	or     DWORD PTR [ebx+0x31],ebx
  4257da:	fist   DWORD PTR [esp+ebp*1]
  4257dd:	push   ebx
  4257de:	pop    ecx
  4257df:	xor    esi,DWORD PTR [eax+0x6b]
  4257e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257e3:	repnz mov ds:0xf348b7c3,al
  4257e9:	mov    ds:0x3b7b3dfe,al
  4257ee:	clc    
  4257ef:	je     0x425844
  4257f5:	mov    DWORD PTR [ebp-0xc],esi
  4257f8:	mov    eax,DWORD PTR [ebp-0xc]
  4257fb:	mov    esi,DWORD PTR [ebp+0xc]
  4257fe:	xor    eax,ecx
  425800:	lea    eax,[eax*8+0x1939820]
  425807:	mov    eax,DWORD PTR [esi+eax*1]
  42580a:	mov    DWORD PTR [ebp+0xc],eax
  42580d:	mov    eax,DWORD PTR [ebp-0x4]
  425810:	mov    esi,DWORD PTR [ebp-0x8]
  425813:	xor    eax,ecx
  425815:	xor    esi,ecx
  425817:	add    esi,edx
  425819:	add    eax,edx
  42581b:	imul   eax,esi
  42581e:	mov    esi,DWORD PTR [ebp+0xc]
  425821:	cmp    esi,eax
  425823:	je     0x425844
  425829:	mov    eax,DWORD PTR [ebp-0x4]
  42582c:	xor    eax,ecx
  42582e:	mov    ecx,DWORD PTR [ebp+0xc]
  425831:	add    eax,edx
  425833:	imul   eax,ecx
  425836:	add    eax,DWORD PTR [ebp+0x8]
  425839:	mov    DWORD PTR [ebp+0xc],eax
  42583c:	mov    eax,DWORD PTR [ebp+0xc]
  42583f:	jmp    0x425855
  425844:	mov    eax,DWORD PTR [ebp-0x4]
  425847:	mov    esi,DWORD PTR [ebp-0x8]
  42584a:	xor    esi,ecx
  42584c:	xor    eax,ecx
  42584e:	add    esi,edx
  425850:	add    eax,edx
  425852:	imul   eax,esi
  425855:	pop    edi
  425856:	pop    esi
  425857:	leave  
  425858:	ret    0x8
	...
  425863:	add    ah,cl
  425865:	cmp    al,0xf3
  425867:	dec    ebp
  425868:	add    BYTE PTR [eax],al
  42586a:	add    BYTE PTR [eax],al
  42586c:	add    al,BYTE PTR [eax]
  42586e:	add    BYTE PTR [eax],al
  425870:	add    BYTE PTR ss:[eax],al
  425873:	add    BYTE PTR [eax-0x7ffffda8],al
  425879:	dec    esp
  42587a:	add    al,BYTE PTR [eax]
  42587c:	add    BYTE PTR [eax],al
  42587e:	add    BYTE PTR [eax],al
  425880:	push   edx
  425881:	push   ebx
  425882:	inc    esp
  425883:	push   ebx
  425884:	(bad)  
  425885:	les    ecx,FWORD PTR [esi-0x53]
  425888:	(bad)  
  425889:	and    ch,BYTE PTR [esi]
  42588b:	dec    eax
  42588c:	mov    edi,0x545d755a
  425891:	xchg   ebp,eax
  425892:	inc    ecx
  425893:	fld    DWORD PTR [ecx]
  425895:	add    BYTE PTR [eax],al
  425897:	add    BYTE PTR [edi+0x3a],al
  42589a:	pop    esp
  42589b:	push   ebx
  42589c:	jns    0x425911
  42589e:	and    BYTE PTR [ecx+ebp*2+0x72],al
  4258a2:	and    BYTE PTR [edi+0x69],dl
  4258a5:	outs   dx,BYTE PTR ds:[esi]
  4258a6:	pop    esp
  4258a7:	inc    esi
  4258a8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  4258b0:	outs   dx,BYTE PTR ds:[esi]
  4258b1:	jae    0x42591c
  4258b3:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  4258bb:	or     BYTE PTR [ecx],al
  4258bd:	add    BYTE PTR [eax],al
  4258bf:	push   ebx
  4258c0:	mov    eax,ebx
  4258c2:	xchg   ecx,eax
  4258c3:	mov    eax,DWORD PTR [ebp+0x8]
  4258c6:	cmp    eax,0xf89c85a5
  4258cb:	jne    0x425d8c
  4258d1:	mov    eax,DWORD PTR [ebp+0xc]
  4258d4:	cmp    eax,0xf89c85a2
  4258d9:	jne    0x425d8c
  4258df:	mov    eax,DWORD PTR [ebp+0x24]
  4258e2:	mov    DWORD PTR [ebp-0x4],eax
  4258e5:	mov    eax,DWORD PTR [ebp-0x4]
  4258e8:	mov    eax,DWORD PTR [eax+0x1d8]
  4258ee:	mov    eax,DWORD PTR [eax]
  4258f0:	mov    eax,DWORD PTR [eax]
  4258f2:	mov    DWORD PTR [ebp-0x8],eax
  4258f5:	mov    BYTE PTR [ebp-0x18],0x1a
  4258f9:	mov    BYTE PTR [ebp-0x17],0x1f
  4258fd:	mov    BYTE PTR [ebp-0x16],0x18
  425901:	mov    BYTE PTR [ebp-0x15],0x4e
  425905:	mov    BYTE PTR [ebp-0x14],0x51
  425909:	mov    BYTE PTR [ebp-0x13],0x83
  42590d:	mov    BYTE PTR [ebp-0x20],0xc
  425911:	mov    BYTE PTR [ebp-0x1f],0xe
  425915:	mov    BYTE PTR [ebp-0x1e],0x1c
  425919:	mov    BYTE PTR [ebp-0x1d],0x11
  42591d:	mov    BYTE PTR [ebp-0x1c],0x4e
  425921:	mov    BYTE PTR [ebp-0x1b],0x51
  425925:	mov    BYTE PTR [ebp-0x1a],0x83
  425929:	mov    BYTE PTR [ebp-0x28],0xe
  42592d:	mov    BYTE PTR [ebp-0x27],0x1b
  425931:	mov    BYTE PTR [ebp-0x26],0x17
  425935:	mov    BYTE PTR [ebp-0x25],0xa
  425939:	mov    BYTE PTR [ebp-0x24],0x20
  42593d:	mov    BYTE PTR [ebp-0x23],0x13
  425941:	mov    BYTE PTR [ebp-0x22],0x18
  425945:	mov    BYTE PTR [ebp-0x21],0x83
  425949:	xor    ecx,ecx
  42594b:	lea    eax,[ebp+ecx*1-0x18]
  42594f:	movzx  edx,BYTE PTR [eax]
  425952:	xor    edx,0x7e
  425955:	add    edx,0x3
  425958:	inc    ecx
  425959:	mov    BYTE PTR [eax],dl
  42595b:	cmp    ecx,0x6
  42595e:	jb     0x42594b
  425960:	xor    ecx,ecx
  425962:	lea    eax,[ebp+ecx*1-0x20]
  425966:	movzx  edx,BYTE PTR [eax]
  425969:	xor    edx,0x7e
  42596c:	add    edx,0x3
  42596f:	inc    ecx
  425970:	mov    BYTE PTR [eax],dl
  425972:	cmp    ecx,0x7
  425975:	jb     0x425962
  425977:	xor    ecx,ecx
  425979:	lea    eax,[ebp+ecx*1-0x28]
  42597d:	movzx  edx,BYTE PTR [eax]
  425980:	xor    edx,0x7e
  425983:	add    edx,0x3
  425986:	inc    ecx
  425987:	mov    BYTE PTR [eax],dl
  425989:	cmp    ecx,0x8
  42598c:	jb     0x425979
  42598e:	lea    eax,[ebp-0x2c]
  425991:	mov    DWORD PTR [ebp-0x8],eax
  425994:	mov    ecx,DWORD PTR [ebp-0x8]
  425997:	mov    eax,0x7113fccf
  42599c:	mov    DWORD PTR [ecx],eax
  42599e:	mov    ecx,DWORD PTR [ebp-0x2c]
  4259a1:	push   esi
  4259a2:	push   edi
  4259a3:	mov    esi,0x4e3e
  4259a8:	mov    ebx,0x3272f5
  4259ad:	cmp    ecx,eax
  4259af:	jne    0x425a7a
  4259b5:	lea    eax,[esi+0x39]
  4259b8:	mov    WORD PTR [ebp-0x78],ax
  4259bc:	mov    eax,esi
  4259be:	mov    WORD PTR [ebp-0x76],ax
  4259c2:	add    eax,0x3f
  4259c5:	mov    WORD PTR [ebp-0x74],ax
  4259c9:	lea    eax,[esi-0x2]
  4259cc:	mov    WORD PTR [ebp-0x72],ax
  4259d0:	add    eax,0x43
  4259d3:	mov    ecx,eax
  4259d5:	lea    eax,[esi-0x9]
  4259d8:	mov    WORD PTR [ebp-0x66],ax
  4259dc:	mov    eax,esi
  4259de:	mov    WORD PTR [ebp-0x64],ax
  4259e2:	add    eax,0xffffffec
  4259e5:	mov    WORD PTR [ebp-0x62],ax
  4259e9:	mov    eax,0x443
  4259ee:	mov    WORD PTR [ebp-0x60],ax
  4259f2:	mov    eax,0x5670
  4259f7:	mov    WORD PTR [ebp-0x5e],ax
  4259fb:	mov    eax,0x6110
  425a00:	mov    WORD PTR [ebp-0x5c],ax
  425a04:	lea    eax,[ebp-0xe0]
  425a0a:	push   eax
  425a0b:	mov    eax,DWORD PTR [ebp+0xc]
  425a0e:	mov    edi,0x75108ae
  425a13:	xor    eax,edi
  425a15:	add    eax,ebx
  425a17:	push   eax
  425a18:	mov    WORD PTR [ebp-0x70],cx
  425a1c:	lea    ecx,[esi-0xe]
  425a1f:	mov    edx,ecx
  425a21:	lea    eax,[ebp-0x78]
  425a24:	push   eax
  425a25:	mov    eax,DWORD PTR [ebp-0x4]
  425a28:	mov    eax,DWORD PTR [eax+0x198]
  425a2e:	mov    WORD PTR [ebp-0x6e],dx
  425a32:	mov    edx,0x4f8a
  425a37:	mov    WORD PTR [ebp-0x6c],dx
  425a3b:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425a42:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425a49:	mov    DWORD PTR [ebp-0xe0],0x1
  425a53:	mov    DWORD PTR [ebp-0xdc],0x255
  425a5d:	push   DWORD PTR [eax]
  425a5f:	mov    eax,DWORD PTR [ebp+0x10]
  425a62:	call   eax
  425a64:	mov    DWORD PTR [ebp-0x8],eax
  425a67:	mov    eax,DWORD PTR [ebp-0x8]
  425a6a:	test   eax,eax
  425a6c:	je     0x425a7f
  425a6e:	xor    DWORD PTR ds:0x76586876,0x87687666
  425a78:	jmp    0x425a7f
  425a7a:	mov    edi,0x75108ae
  425a7f:	mov    eax,DWORD PTR [ebp-0x4]
  425a82:	mov    ecx,DWORD PTR [eax+0x18c]
  425a88:	xor    eax,eax
  425a8a:	cmp    DWORD PTR [ecx],eax
  425a8c:	jne    0x425cff
  425a92:	mov    ecx,DWORD PTR [ebp-0x4]
  425a95:	mov    ecx,DWORD PTR [ecx+0x17c]
  425a9b:	mov    DWORD PTR [ecx],eax
  425a9d:	mov    ecx,DWORD PTR [ebp-0x4]
  425aa0:	mov    ecx,DWORD PTR [ecx+0x180]
  425aa6:	mov    DWORD PTR [ecx],eax
  425aa8:	mov    eax,0x4e6d
  425aad:	mov    WORD PTR [ebp-0x9c],ax
  425ab4:	mov    eax,esi
  425ab6:	mov    WORD PTR [ebp-0x9a],ax
  425abd:	mov    eax,0x4e7d
  425ac2:	mov    WORD PTR [ebp-0x98],ax
  425ac9:	add    eax,0xffffffc0
  425acc:	mov    WORD PTR [ebp-0x96],ax
  425ad3:	mov    eax,0x4f8e
  425ad8:	mov    WORD PTR [ebp-0x94],ax
  425adf:	mov    eax,0x4e32
  425ae4:	mov    WORD PTR [ebp-0x92],ax
  425aeb:	add    eax,0x4d
  425aee:	mov    WORD PTR [ebp-0x90],ax
  425af5:	mov    eax,0x4e30
  425afa:	mov    WORD PTR [ebp-0x8e],ax
  425b01:	mov    eax,esi
  425b03:	mov    WORD PTR [ebp-0x8c],ax
  425b0a:	mov    eax,0x4e31
  425b0f:	mov    WORD PTR [ebp-0x8a],ax
  425b16:	mov    eax,0x99fd
  425b1b:	mov    WORD PTR [ebp-0x88],ax
  425b22:	mov    eax,0x8d62
  425b27:	mov    WORD PTR [ebp-0x86],ax
  425b2e:	mov    eax,0xd66f
  425b33:	mov    WORD PTR [ebp-0x84],ax
  425b3a:	mov    eax,0xd783
  425b3f:	mov    WORD PTR [ebp-0x82],ax
  425b46:	mov    eax,0x2780
  425b4b:	mov    WORD PTR [ebp-0x80],ax
  425b4f:	mov    eax,0x4780
  425b54:	mov    WORD PTR [ebp-0x7e],ax
  425b58:	mov    eax,0x4e33
  425b5d:	push   0x8
  425b5f:	mov    WORD PTR [ebp-0x7c],ax
  425b63:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425b6a:	mov    DWORD PTR [ebp-0xc],0x83181320
  425b71:	lea    eax,[ebp-0x10]
  425b74:	pop    ecx
  425b75:	mov    dl,BYTE PTR [eax]
  425b77:	xor    dl,0x7e
  425b7a:	add    dl,0x3
  425b7d:	mov    BYTE PTR [eax],dl
  425b7f:	inc    eax
  425b80:	dec    ecx
  425b81:	jne    0x425b75
  425b83:	lea    eax,[ebp-0x10]
  425b86:	mov    DWORD PTR [ebp-0xdc],eax
  425b8c:	lea    eax,[ebp-0xe0]
  425b92:	push   eax
  425b93:	mov    eax,DWORD PTR [ebp+0xc]
  425b96:	xor    eax,edi
  425b98:	add    eax,ebx
  425b9a:	push   eax
  425b9b:	mov    eax,DWORD PTR [ebp-0x4]
  425b9e:	add    eax,0x66
  425ba1:	push   eax
  425ba2:	mov    eax,DWORD PTR [ebp-0x4]
  425ba5:	mov    eax,DWORD PTR [eax+0x198]
  425bab:	mov    DWORD PTR [ebp-0xe0],0x1
  425bb5:	push   DWORD PTR [eax]
  425bb7:	mov    eax,DWORD PTR [ebp+0x10]
  425bba:	call   eax
  425bbc:	mov    ecx,DWORD PTR [ebp+0x8]
  425bbf:	xor    ecx,edi
  425bc1:	add    ecx,ebx
  425bc3:	mov    DWORD PTR [ebp-0x8],eax
  425bc6:	cmp    eax,ecx
  425bc8:	jne    0x425be3
  425bca:	mov    eax,ds:0x33730bcc
  425bcf:	or     eax,0x22150bcf
  425bd4:	mov    ds:0x33730bcc,eax
  425bd9:	add    eax,0x3372e92f
  425bde:	mov    ds:0x33730bcc,eax
  425be3:	mov    ecx,0x4e66
  425be8:	mov    eax,ecx
  425bea:	mov    WORD PTR [ebp-0x40],ax
  425bee:	add    eax,0x5
  425bf1:	mov    edx,eax
  425bf3:	mov    WORD PTR [ebp-0x3e],dx
  425bf7:	mov    edx,0x4f93
  425bfc:	mov    WORD PTR [ebp-0x3c],dx
  425c00:	add    edx,0xfffffff8
  425c03:	mov    WORD PTR [ebp-0x3a],dx
  425c07:	mov    edx,0x4f89
  425c0c:	mov    WORD PTR [ebp-0x38],dx
  425c10:	add    edx,0x3
  425c13:	mov    WORD PTR [ebp-0x36],dx
  425c17:	mov    edx,0x4f87
  425c1c:	mov    WORD PTR [ebp-0x34],dx
  425c20:	mov    WORD PTR [ebp-0x32],cx
  425c24:	mov    ecx,esi
  425c26:	mov    WORD PTR [ebp-0x30],cx
  425c2a:	lea    ecx,[edx-0x1]
  425c2d:	mov    edx,ecx
  425c2f:	mov    WORD PTR [ebp-0x54],dx
  425c33:	mov    edx,eax
  425c35:	mov    WORD PTR [ebp-0x52],dx
  425c39:	mov    edx,0x4e73
  425c3e:	mov    WORD PTR [ebp-0x50],dx
  425c42:	mov    WORD PTR [ebp-0x4e],ax
  425c46:	lea    eax,[edx-0xa]
  425c49:	mov    WORD PTR [ebp-0x4c],ax
  425c4d:	add    eax,0x3
  425c50:	mov    WORD PTR [ebp-0x4a],ax
  425c54:	lea    eax,[edx-0xc]
  425c57:	mov    WORD PTR [ebp-0x48],ax
  425c5b:	mov    WORD PTR [ebp-0x46],cx
  425c5f:	mov    WORD PTR [ebp-0x44],si
  425c63:	mov    eax,DWORD PTR [ebp+0x8]
  425c66:	movzx  ecx,WORD PTR [ebp-0x54]
  425c6a:	xor    eax,edi
  425c6c:	add    eax,ebx
  425c6e:	xor    eax,ecx
  425c70:	mov    WORD PTR [ebp-0x54],ax
  425c74:	mov    eax,DWORD PTR [ebp+0x8]
  425c77:	movzx  ecx,WORD PTR [ebp-0x40]
  425c7b:	xor    eax,edi
  425c7d:	add    eax,ebx
  425c7f:	xor    eax,ecx
  425c81:	mov    WORD PTR [ebp-0x40],ax
  425c85:	xor    eax,eax
  425c87:	mov    WORD PTR [ebp-0xf4],ax
  425c8e:	mov    WORD PTR [ebp-0x108],ax
  425c95:	mov    edi,DWORD PTR [ebp+0x24]
  425c98:	lea    eax,[ebp-0xf4]
  425c9e:	lea    edx,[ebp-0x54]
  425ca1:	mov    DWORD PTR [ebp-0xe0],0x2
  425cab:	mov    DWORD PTR [ebp-0xdc],eax
  425cb1:	call   0x4286e9
  425cb6:	mov    DWORD PTR [ebp-0xd8],eax
  425cbc:	lea    eax,[ebp-0xe0]
  425cc2:	push   eax
  425cc3:	mov    eax,DWORD PTR [ebp+0xc]
  425cc6:	xor    eax,0x75108ae
  425ccb:	add    eax,ebx
  425ccd:	push   eax
  425cce:	lea    eax,[ebp-0x9c]
  425cd4:	push   eax
  425cd5:	push   DWORD PTR [ebp-0x8]
  425cd8:	mov    eax,DWORD PTR [ebp+0x10]
  425cdb:	call   eax
  425cdd:	mov    edi,DWORD PTR [ebp+0x24]
  425ce0:	lea    eax,[ebp-0x108]
  425ce6:	lea    edx,[ebp-0x40]
  425ce9:	mov    DWORD PTR [ebp-0xdc],eax
  425cef:	call   0x4286e9
  425cf4:	mov    DWORD PTR [ebp-0xd8],eax
  425cfa:	mov    edi,0x75108ae
  425cff:	mov    eax,DWORD PTR [ebp+0x14]
  425d02:	push   DWORD PTR [ebp-0x4]
  425d05:	push   DWORD PTR [ebp+0x20]
  425d08:	push   DWORD PTR [ebp+0x1c]
  425d0b:	push   DWORD PTR [ebp+0x18]
  425d0e:	push   DWORD PTR [ebp+0x10]
  425d11:	push   DWORD PTR [ebp+0x8]
  425d14:	push   DWORD PTR [ebp+0xc]
  425d17:	call   0x426f8a
  425d1c:	test   eax,eax
  425d1e:	je     0x425d62
  425d20:	add    DWORD PTR [ebp-0x4],eax
  425d23:	push   DWORD PTR [ebp-0x4]
  425d26:	lea    esi,[ebp+0x4]
  425d29:	call   0x42617a
  425d2e:	mov    eax,DWORD PTR [ebp-0x4]
  425d31:	mov    eax,DWORD PTR [eax+0x1c8]
  425d37:	mov    eax,DWORD PTR [eax]
  425d39:	xor    eax,edi
  425d3b:	add    eax,ebx
  425d3d:	mov    eax,DWORD PTR [ebp-0x4]
  425d40:	jne    0x425d58
  425d42:	mov    ecx,DWORD PTR [ebp-0x4]
  425d45:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425d4b:	push   DWORD PTR [ecx]
  425d4d:	mov    eax,DWORD PTR [eax+0x1e0]
  425d53:	call   DWORD PTR [eax+0x28]
  425d56:	jmp    0x425d62
  425d58:	mov    eax,DWORD PTR [eax+0x17c]
  425d5e:	mov    eax,DWORD PTR [eax]
  425d60:	add    DWORD PTR [esi],eax
  425d62:	mov    eax,DWORD PTR [ebp-0x4]
  425d65:	mov    eax,DWORD PTR [eax+0x1dc]
  425d6b:	dec    DWORD PTR [eax]
  425d6d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d70:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425d76:	mov    eax,DWORD PTR [eax]
  425d78:	lea    eax,[ecx+eax*4]
  425d7b:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7e:	mov    ecx,DWORD PTR [ecx+0x17c]
  425d84:	mov    eax,DWORD PTR [eax]
  425d86:	mov    ecx,DWORD PTR [ecx]
  425d88:	add    DWORD PTR [eax],ecx
  425d8a:	pop    edi
  425d8b:	pop    esi
  425d8c:	pop    ebx
  425d8d:	leave  
  425d8e:	ret    0x20
  425d91:	push   edi
  425d92:	push   esi
  425d93:	push   ebx
  425d94:	push   ebp
  425d95:	mov    ebp,esp
  425d97:	mov    eax,DWORD PTR [ebp+0x24]
  425d9a:	add    DWORD PTR [ebp+0x28],eax
  425d9d:	push   eax
  425d9e:	cld    
  425d9f:	mov    esi,DWORD PTR [ebp+0x18]
  425da2:	add    DWORD PTR [ebp+0x1c],esi
  425da5:	push   esi
  425da6:	mov    esi,DWORD PTR [ebp+0x14]
  425da9:	lods   eax,DWORD PTR ds:[esi]
  425daa:	xchg   edx,eax
  425dab:	push   edx
  425dac:	mov    cl,BYTE PTR [esi-0x2]
  425daf:	or     eax,0xffffffff
  425db2:	shl    eax,cl
  425db4:	not    eax
  425db6:	push   eax
  425db7:	mov    cl,dh
  425db9:	or     eax,0xffffffff
  425dbc:	shl    eax,cl
  425dbe:	not    eax
  425dc0:	push   eax
  425dc1:	add    cl,dl
  425dc3:	mov    edi,esi
  425dc5:	sub    esp,0xc
  425dc8:	sub    eax,eax
  425dca:	inc    eax
  425dcb:	push   eax
  425dcc:	push   eax
  425dcd:	push   eax
  425dce:	push   eax
  425dcf:	push   eax
  425dd0:	push   edi
  425dd1:	sub    esi,esi
  425dd3:	push   esi
  425dd4:	or     ebx,0xffffffff
  425dd7:	mov    eax,0x300
  425ddc:	shl    eax,cl
  425dde:	lea    ecx,[eax+0x736]
  425de4:	mov    eax,0x4000400
  425de9:	shr    ecx,1
  425deb:	rep stos DWORD PTR es:[edi],eax
  425ded:	push   0x5
  425def:	pop    ecx
  425df0:	call   0x4260db
  425df5:	loop   0x425df0
  425df7:	lea    esi,[esi]
  425df9:	lea    edi,[edi]
  425dfb:	mov    edi,DWORD PTR [ebp-0x4]
  425dfe:	mov    eax,DWORD PTR [ebp-0x10]
  425e01:	sub    edi,DWORD PTR [ebp+0x24]
  425e04:	and    eax,edi
  425e06:	mov    DWORD PTR [ebp-0x18],eax
  425e09:	mov    al,0x0
  425e0b:	call   0x4260f3
  425e10:	jne    0x425eab
  425e16:	mov    cl,BYTE PTR [ebp-0xc]
  425e19:	and    edi,DWORD PTR [ebp-0x14]
  425e1c:	shl    edi,cl
  425e1e:	sub    cl,0x8
  425e21:	neg    cl
  425e23:	shr    esi,cl
  425e25:	pop    eax
  425e26:	add    edi,esi
  425e28:	pop    esi
  425e29:	lea    edi,[edi+edi*2]
  425e2c:	shl    edi,0x8
  425e2f:	cmp    al,0x7
  425e31:	pop    edx
  425e32:	lea    ecx,[esi+edi*2+0xe6c]
  425e39:	push   ecx
  425e3a:	push   esi
  425e3b:	mov    esi,0x100
  425e40:	push   eax
  425e41:	mov    al,0x1
  425e43:	jb     0x425e79
  425e45:	mov    edi,DWORD PTR [ebp-0x4]
  425e48:	sub    edi,DWORD PTR [ebp-0x24]
  425e4b:	movzx  edi,BYTE PTR [edi]
  425e4e:	mov    ebp,DWORD PTR [ebp-0x34]
  425e51:	shl    edi,1
  425e53:	mov    ecx,esi
  425e55:	and    esi,edi
  425e57:	add    ecx,esi
  425e59:	lea    ebp,[ebp+ecx*2+0x0]
  425e5d:	call   0x426112
  425e62:	mov    ecx,eax
  425e64:	shr    esi,0x8
  425e67:	and    ecx,0x1
  425e6a:	cmp    esi,ecx
  425e6c:	mov    esi,0x100
  425e71:	jne    0x425e81
  425e73:	cmp    eax,esi
  425e75:	jb     0x425e4e
  425e77:	jmp    0x425e8d
  425e79:	mov    ebp,DWORD PTR [ebp-0x34]
  425e7c:	call   0x426112
  425e81:	inc    eax
  425e82:	inc    esi
  425e83:	sub    eax,0x1
  425e86:	sub    esi,0x1
  425e89:	cmp    eax,esi
  425e8b:	jb     0x425e79
  425e8d:	pop    edx
  425e8e:	inc    edx
  425e8f:	cmp    edx,0x5
  425e92:	dec    edx
  425e93:	mov    ecx,edx
  425e95:	jb     0x425ea6
  425e97:	inc    edx
  425e98:	cmp    edx,0xb
  425e9b:	dec    edx
  425e9c:	mov    cl,0x4
  425e9e:	dec    cl
  425ea0:	jb     0x425ea6
  425ea2:	mov    cl,0x7
  425ea4:	dec    cl
  425ea6:	sub    edx,ecx
  425ea8:	push   edx
  425ea9:	jmp    0x425efa
  425eab:	mov    al,0xc1
  425ead:	dec    al
  425eaf:	call   0x426103
  425eb4:	jne    0x425eca
  425eb6:	pop    eax
  425eb7:	pop    edi
  425eb8:	pop    edx
  425eb9:	pop    ecx
  425eba:	pop    edx
  425ebb:	pop    ecx
  425ebc:	push   DWORD PTR [esp]
  425ebf:	push   ecx
  425ec0:	push   edx
  425ec1:	mov    edx,0x664
  425ec6:	mov    cl,0x0
  425ec8:	jmp    0x425f3d
  425eca:	mov    al,0xcd
  425ecc:	dec    al
  425ece:	call   0x426103
  425ed3:	jne    0x425f03
  425ed5:	mov    al,0xf1
  425ed7:	dec    al
  425ed9:	call   0x4260f3
  425ede:	jne    0x425f33
  425ee0:	pop    eax
  425ee1:	cmp    al,0x7
  425ee3:	mov    al,0x9
  425ee5:	jb     0x425ee9
  425ee7:	mov    al,0xb
  425ee9:	push   eax
  425eea:	mov    esi,DWORD PTR [ebp-0x4]
  425eed:	sub    esi,DWORD PTR [ebp-0x24]
  425ef0:	cmp    esi,DWORD PTR [ebp+0x24]
  425ef3:	jb     0x4260ca
  425ef9:	lods   al,BYTE PTR ds:[esi]
  425efa:	mov    edi,DWORD PTR [ebp-0x4]
  425efd:	stos   BYTE PTR es:[edi],al
  425efe:	jmp    0x426091
  425f03:	mov    al,0xd8
  425f05:	call   0x426103
  425f0a:	mov    esi,DWORD PTR [ebp-0x28]
  425f0d:	je     0x425f2a
  425f0f:	mov    al,0xe4
  425f11:	call   0x426103
  425f16:	mov    esi,DWORD PTR [ebp-0x2c]
  425f19:	je     0x425f24
  425f1b:	mov    esi,DWORD PTR [ebp-0x30]
  425f1e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425f21:	mov    DWORD PTR [ebp-0x30],ecx
  425f24:	mov    ecx,DWORD PTR [ebp-0x28]
  425f27:	mov    DWORD PTR [ebp-0x2c],ecx
  425f2a:	mov    ecx,DWORD PTR [ebp-0x24]
  425f2d:	mov    DWORD PTR [ebp-0x28],ecx
  425f30:	mov    DWORD PTR [ebp-0x24],esi
  425f33:	pop    eax
  425f34:	pop    edi
  425f35:	pop    ecx
  425f36:	mov    edx,0xa68
  425f3b:	mov    cl,0x8
  425f3d:	add    edx,edi
  425f3f:	push   edx
  425f40:	push   edi
  425f41:	cmp    al,0x7
  425f43:	mov    al,cl
  425f45:	jb     0x425f49
  425f47:	add    al,0x3
  425f49:	push   eax
  425f4a:	mov    ebp,DWORD PTR [ebp-0x34]
  425f4d:	call   0x426110
  425f52:	jne    0x425f68
  425f54:	mov    eax,DWORD PTR [ebp-0x18]
  425f57:	mov    edi,DWORD PTR [ebp-0x34]
  425f5a:	shl    eax,0x3
  425f5d:	sub    ecx,ecx
  425f5f:	push   0x8
  425f61:	pop    esi
  425f62:	lea    edi,[edi+eax*2+0x4]
  425f66:	jmp    0x425f9d
  425f68:	mov    ebp,DWORD PTR [ebp-0x34]
  425f6b:	add    ebp,0x2
  425f6e:	call   0x426110
  425f73:	jne    0x425f8d
  425f75:	mov    eax,DWORD PTR [ebp-0x18]
  425f78:	mov    edi,DWORD PTR [ebp-0x34]
  425f7b:	shl    eax,0x3
  425f7e:	push   0x8
  425f80:	pop    ecx
  425f81:	push   0x8
  425f83:	pop    esi
  425f84:	lea    edi,[edi+eax*2+0x104]
  425f8b:	jmp    0x425f9d
  425f8d:	mov    edi,0x204
  425f92:	add    edi,DWORD PTR [ebp-0x34]
  425f95:	push   0x10
  425f97:	pop    ecx
  425f98:	mov    esi,0x100
  425f9d:	mov    DWORD PTR [ebp-0x1c],ecx
  425fa0:	sub    eax,eax
  425fa2:	inc    eax
  425fa3:	mov    ebp,edi
  425fa5:	call   0x426112
  425faa:	mov    ecx,eax
  425fac:	sub    ecx,esi
  425fae:	jb     0x425fa3
  425fb0:	add    DWORD PTR [ebp-0x1c],ecx
  425fb3:	cmp    DWORD PTR [ebp-0x3c],0x4
  425fb7:	jae    0x42606d
  425fbd:	add    DWORD PTR [ebp-0x3c],0x7
  425fc1:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fc4:	cmp    ecx,0x4
  425fc7:	jb     0x425fcc
  425fc9:	push   0x3
  425fcb:	pop    ecx
  425fcc:	mov    edi,DWORD PTR [ebp-0x38]
  425fcf:	shl    ecx,0x6
  425fd2:	sub    eax,eax
  425fd4:	inc    eax
  425fd5:	push   0x40
  425fd7:	pop    esi
  425fd8:	lea    edi,[edi+ecx*2+0x360]
  425fdf:	mov    ebp,edi
  425fe1:	call   0x426112
  425fe6:	mov    ecx,eax
  425fe8:	sub    ecx,esi
  425fea:	jb     0x425fdf
  425fec:	mov    DWORD PTR [ebp-0x18],ecx
  425fef:	mov    DWORD PTR [ebp-0x24],ecx
  425ff2:	cmp    ecx,0x4
  425ff5:	jb     0x42606a
  425ff7:	mov    esi,ecx
  425ff9:	and    DWORD PTR [ebp-0x24],0x1
  425ffd:	shr    esi,1
  425fff:	or     DWORD PTR [ebp-0x24],0x2
  426003:	dec    esi
  426004:	cmp    ecx,0xe
  426007:	jae    0x426022
  426009:	mov    eax,0x2af
  42600e:	sub    eax,ecx
  426010:	mov    ecx,esi
  426012:	shl    BYTE PTR [ebp-0x24],cl
  426015:	add    eax,DWORD PTR [ebp-0x24]
  426018:	shl    eax,1
  42601a:	add    eax,DWORD PTR [ebp-0x38]
  42601d:	mov    DWORD PTR [ebp-0x34],eax
  426020:	jmp    0x42604f
  426022:	sub    esi,0x4
  426025:	call   0x4260cf
  42602a:	shr    ebx,1
  42602c:	shl    DWORD PTR [ebp-0x24],1
  42602f:	cmp    DWORD PTR [ebp-0x20],ebx
  426032:	jb     0x42603a
  426034:	inc    DWORD PTR [ebp-0x24]
  426037:	sub    DWORD PTR [ebp-0x20],ebx
  42603a:	dec    esi
  42603b:	jne    0x426025
  42603d:	mov    eax,0x644
  426042:	add    eax,DWORD PTR [ebp-0x38]
  426045:	mov    DWORD PTR [ebp-0x34],eax
  426048:	shl    DWORD PTR [ebp-0x24],0x4
  42604c:	push   0x4
  42604e:	pop    esi
  42604f:	sub    edi,edi
  426051:	inc    edi
  426052:	mov    eax,edi
  426054:	mov    ebp,DWORD PTR [ebp-0x34]
  426057:	call   0x426112
  42605c:	test   al,0x1
  42605e:	je     0x426063
  426060:	or     DWORD PTR [ebp-0x24],edi
  426063:	shl    edi,1
  426065:	dec    esi
  426066:	jne    0x426054
  426068:	jmp    0x42606a
  42606a:	inc    DWORD PTR [ebp-0x24]
  42606d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426070:	add    ecx,0x2
  426073:	mov    edi,DWORD PTR [ebp-0x4]
  426076:	mov    eax,edi
  426078:	sub    eax,DWORD PTR [ebp+0x24]
  42607b:	cmp    DWORD PTR [ebp-0x24],eax
  42607e:	ja     0x4260ca
  426080:	mov    esi,edi
  426082:	sub    esi,DWORD PTR [ebp-0x24]
  426085:	mov    edx,DWORD PTR [ebp+0x28]
  426088:	lods   al,BYTE PTR ds:[esi]
  426089:	stos   BYTE PTR es:[edi],al
  42608a:	cmp    edi,edx
  42608c:	jae    0x426091
  42608e:	dec    ecx
  42608f:	jne    0x426088
  426091:	mov    DWORD PTR [ebp-0x4],edi
  426094:	movzx  esi,al
  426097:	cmp    edi,DWORD PTR [ebp+0x28]
  42609a:	jb     0x425dfb
  4260a0:	call   0x4260cf
  4260a5:	sub    eax,eax
  4260a7:	lea    ebp,[esp+0x3c]
  4260ab:	mov    edx,DWORD PTR [ebp+0x20]
  4260ae:	mov    esi,DWORD PTR [ebp-0x8]
  4260b1:	sub    esi,DWORD PTR [ebp+0x18]
  4260b4:	mov    DWORD PTR [edx],esi
  4260b6:	mov    dh,0xdd
  4260b8:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  4260be:	sbb    BYTE PTR [esi+0x1f5af70],ch
  4260c4:	add    eax,0x188f893
  4260c9:	jmp    0x37cbec02
  4260ce:	jmp    0x42605e
  4260d0:	ja     0x42605a
  4260d2:	mov    BYTE PTR [eax-0x6873ae74],cl
  4260d8:	(bad)  
  4260d9:	pop    ss
  4260da:	test   al,0xe1
  4260dc:	mov    dh,0x5d
  4260de:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  4260e3:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  4260e9:	test   al,0x3a
  4260eb:	scas   al,BYTE PTR es:[edi]
  4260ec:	popf   
  4260ed:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  4260f3:	mov    dh,0xbd
  4260f5:	fwait
  4260f6:	les    esp,FWORD PTR [edx-0x75]
  4260f9:	(bad)  
  4260fa:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  426102:	mov    al,ds:0x948b62c4
  426107:	popf   
  426108:	fwait
  426109:	mov    dh,0x3d
  42610b:	stos   DWORD PTR es:[edi],eax
  42610c:	mov    esi,0x34889d39
  426111:	mov    edi,DWORD PTR [esi-0x717762c7]
  426117:	ja     0x4260a1
  426119:	mov    BYTE PTR [eax-0x4907aa74],cl
  42611f:	mov    ecx,0x198f6818
  426124:	sbb    BYTE PTR [eax],cl
  426126:	test   al,0x74
  426128:	mov    ecx,0xfa55f918
  42612d:	mov    dl,0xcc
  42612f:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  426135:	test   al,0x88
  426137:	push   esp
  426138:	and    al,0x20
  42613a:	mov    ecx,ebx
  42613c:	movzx  edx,WORD PTR [ebp+0x0]
  426140:	shr    ecx,0xb
  426143:	imul   ecx,edx
  426146:	cmp    DWORD PTR [esp+0x20],ecx
  42614a:	jae    0x426163
  42614c:	mov    ebx,ecx
  42614e:	mov    ecx,0x800
  426153:	sub    ecx,edx
  426155:	shr    ecx,0x5
  426158:	add    WORD PTR [ebp+0x0],cx
  42615c:	add    eax,eax
  42615e:	lea    ebp,[esp+0x40]
  426162:	ret    
  426163:	shr    edx,0x5
  426166:	sub    DWORD PTR [esp+0x20],ecx
  42616a:	sub    ebx,ecx
  42616c:	sub    WORD PTR [ebp+0x0],dx
  426170:	add    eax,eax
  426172:	add    eax,0x1
  426175:	lea    ebp,[esp+0x40]
  426179:	ret    
  42617a:	push   ebp
  42617b:	mov    ebp,esp
  42617d:	sub    esp,0x12c
  426183:	push   ebx
  426184:	push   esi
  426185:	push   edi
  426186:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42618d:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426194:	mov    eax,DWORD PTR [ebp+0x8]
  426197:	mov    DWORD PTR [ebp+0x8],eax
  42619a:	mov    ecx,DWORD PTR [ebp-0x10]
  42619d:	mov    ebx,0x75108ae
  4261a2:	xor    ecx,ebx
  4261a4:	mov    eax,0x3272f5
  4261a9:	add    ecx,eax
  4261ab:	mov    DWORD PTR [ebp-0x24],ecx
  4261ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4261b1:	xor    ecx,ebx
  4261b3:	add    ecx,eax
  4261b5:	mov    DWORD PTR [ebp-0x40],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x10]
  4261bb:	xor    ecx,ebx
  4261bd:	add    ecx,eax
  4261bf:	mov    DWORD PTR [ebp-0x3c],ecx
  4261c2:	mov    ecx,DWORD PTR [ebp-0x10]
  4261c5:	xor    ecx,ebx
  4261c7:	add    ecx,eax
  4261c9:	mov    DWORD PTR [ebp-0xd8],ecx
  4261cf:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  4261d6:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  4261dd:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  4261e4:	push   0x25
  4261e6:	pop    ecx
  4261e7:	mov    DWORD PTR [ebp-0x30],ecx
  4261ea:	mov    DWORD PTR [ebp-0x30],ecx
  4261ed:	push   0x65
  4261ef:	pop    ecx
  4261f0:	mov    DWORD PTR [ebp-0x30],ecx
  4261f3:	mov    DWORD PTR [ebp-0x30],ecx
  4261f6:	mov    DWORD PTR [ebp-0x30],0x4d
  4261fd:	mov    DWORD PTR [ebp-0x30],0x43
  426204:	mov    ecx,DWORD PTR [ebp-0x10]
  426207:	xor    ecx,ebx
  426209:	add    ecx,eax
  42620b:	mov    DWORD PTR [ebp-0x30],ecx
  42620e:	mov    ecx,DWORD PTR [ebp-0x10]
  426211:	xor    ecx,ebx
  426213:	add    ecx,eax
  426215:	mov    DWORD PTR [ebp-0x30],ecx
  426218:	mov    DWORD PTR [ebp-0x28],0x258
  42621f:	mov    DWORD PTR [ebp-0x34],0x36
  426226:	mov    DWORD PTR [ebp-0x14],0x7a
  42622d:	lea    edi,[ebp-0x10c]
  426233:	lea    esi,[ebp-0x12c]
  426239:	call   0x426ef9
  42623e:	dec    DWORD PTR [ebp-0x14]
  426241:	jne    0x42622d
  426243:	dec    DWORD PTR [ebp-0x34]
  426246:	jne    0x426226
  426248:	dec    DWORD PTR [ebp-0x28]
  42624b:	jne    0x42621f
  42624d:	mov    DWORD PTR [ebp-0x28],0x400e
  426254:	mov    eax,DWORD PTR [ebp-0x10]
  426257:	xor    eax,ebx
  426259:	mov    esi,0x3272f5
  42625e:	add    eax,esi
  426260:	mov    DWORD PTR [ebp-0x1c],eax
  426263:	mov    eax,DWORD PTR [ebp-0x10]
  426266:	and    DWORD PTR [ebp-0x94],0x0
  42626d:	xor    eax,ebx
  42626f:	add    eax,esi
  426271:	mov    DWORD PTR [ebp-0x38],eax
  426274:	mov    eax,fs:0x18
  42627a:	mov    DWORD PTR [ebp-0x94],eax
  426280:	mov    eax,DWORD PTR [eax+0x30]
  426283:	mov    DWORD PTR [ebp-0xcc],eax
  426289:	mov    eax,DWORD PTR [eax+0xc]
  42628c:	mov    DWORD PTR [ebp-0xc0],eax
  426292:	mov    eax,DWORD PTR [ebp+0x8]
  426295:	lea    ecx,[ebp-0x94]
  42629b:	mov    DWORD PTR [eax+0x1a0],ecx
  4262a1:	mov    eax,DWORD PTR [ebp+0x8]
  4262a4:	lea    ecx,[ebp-0xcc]
  4262aa:	mov    DWORD PTR [eax+0x1a4],ecx
  4262b0:	mov    eax,DWORD PTR [ebp+0x8]
  4262b3:	push   DWORD PTR [ebp+0x8]
  4262b6:	lea    ecx,[ebp-0xc0]
  4262bc:	mov    DWORD PTR [eax+0x1a8],ecx
  4262c2:	call   0x4286ba
  4262c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4262ca:	xor    ecx,ebx
  4262cc:	add    ecx,esi
  4262ce:	cmp    ecx,eax
  4262d0:	je     0x426653
  4262d6:	mov    eax,DWORD PTR [ebp+0x8]
  4262d9:	mov    eax,DWORD PTR [eax+0x194]
  4262df:	mov    ecx,DWORD PTR [eax]
  4262e1:	mov    eax,DWORD PTR [ebp+0x8]
  4262e4:	mov    eax,DWORD PTR [eax+0x194]
  4262ea:	mov    eax,DWORD PTR [eax]
  4262ec:	add    eax,DWORD PTR [ecx+0x3c]
  4262ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4262f2:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4262f8:	lea    edx,[ebp-0xec]
  4262fe:	push   edx
  4262ff:	mov    edx,DWORD PTR [ebp+0x8]
  426302:	mov    edx,DWORD PTR [edx+0x18c]
  426308:	mov    edx,DWORD PTR [edx]
  42630a:	add    edx,DWORD PTR [eax+0x88]
  426310:	push   0x4
  426312:	push   DWORD PTR [eax+0x8c]
  426318:	push   edx
  426319:	call   DWORD PTR [ecx+0x1c]
  42631c:	push   DWORD PTR [ebp+0x8]
  42631f:	xor    eax,eax
  426321:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  42632b:	mov    DWORD PTR [ebp-0xa4],0x12371120
  426335:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  42633f:	mov    BYTE PTR [ebp-0x9c],0x83
  426346:	lea    edi,[ebp-0x9b]
  42634c:	stos   DWORD PTR es:[edi],eax
  42634d:	stos   WORD PTR es:[edi],ax
  42634f:	stos   BYTE PTR es:[edi],al
  426350:	xor    eax,eax
  426352:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  42635c:	mov    DWORD PTR [ebp-0xb8],0x12371120
  426366:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  426370:	mov    BYTE PTR [ebp-0xb0],0x83
  426377:	lea    edi,[ebp-0xaf]
  42637d:	stos   DWORD PTR es:[edi],eax
  42637e:	stos   WORD PTR es:[edi],ax
  426380:	stos   BYTE PTR es:[edi],al
  426381:	mov    edi,DWORD PTR [ebp+0x8]
  426384:	mov    eax,DWORD PTR [ebp+0x8]
  426387:	mov    edx,DWORD PTR [eax+0x1b8]
  42638d:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  426394:	mov    DWORD PTR [ebp-0x64],0x1813141e
  42639b:	mov    WORD PTR [ebp-0x60],0x8340
  4263a1:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  4263ab:	mov    DWORD PTR [ebp-0x8c],0x17401120
  4263b5:	mov    DWORD PTR [ebp-0x88],0x35201b13
  4263bf:	mov    DWORD PTR [ebp-0x84],0x111c140c
  4263c9:	mov    DWORD PTR [ebp-0x80],0x83401e18
  4263d0:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  4263d7:	mov    DWORD PTR [ebp-0x78],0x17401120
  4263de:	mov    DWORD PTR [ebp-0x74],0x35201b13
  4263e5:	mov    DWORD PTR [ebp-0x70],0x111c140c
  4263ec:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  4263f3:	call   0x4286e9
  4263f8:	push   eax
  4263f9:	mov    eax,DWORD PTR [ebp+0x8]
  4263fc:	mov    eax,DWORD PTR [eax+0x1a8]
  426402:	push   DWORD PTR [eax]
  426404:	call   0x42838a
  426409:	test   eax,eax
  42640b:	jne    0x42645d
  42640d:	mov    eax,DWORD PTR [ebp+0x8]
  426410:	mov    eax,DWORD PTR [eax+0x1e0]
  426416:	mov    edi,DWORD PTR [ebp+0x8]
  426419:	add    eax,0x4
  42641c:	mov    DWORD PTR [ebp-0x20],eax
  42641f:	mov    eax,DWORD PTR [ebp+0x8]
  426422:	mov    edx,DWORD PTR [eax+0x1b8]
  426428:	call   0x4286e9
  42642d:	push   eax
  42642e:	mov    eax,DWORD PTR [ebp-0x20]
  426431:	call   DWORD PTR [eax]
  426433:	test   eax,eax
  426435:	jne    0x42645d
  426437:	mov    eax,DWORD PTR [ebp+0x8]
  42643a:	mov    eax,DWORD PTR [eax+0x1e0]
  426440:	mov    edi,DWORD PTR [ebp+0x8]
  426443:	add    eax,0x10
  426446:	mov    DWORD PTR [ebp-0x20],eax
  426449:	mov    eax,DWORD PTR [ebp+0x8]
  42644c:	mov    edx,DWORD PTR [eax+0x1b8]
  426452:	call   0x4286e9
  426457:	push   eax
  426458:	mov    eax,DWORD PTR [ebp-0x20]
  42645b:	call   DWORD PTR [eax]
  42645d:	mov    eax,DWORD PTR [ebp-0x10]
  426460:	mov    ecx,DWORD PTR [ebp-0x28]
  426463:	xor    eax,ebx
  426465:	add    eax,esi
  426467:	cmp    eax,ecx
  426469:	je     0x42662c
  42646f:	mov    eax,DWORD PTR [ebp-0x18]
  426472:	xor    eax,ebx
  426474:	mov    ecx,0xffcd8d0b
  426479:	sub    ecx,eax
  42647b:	add    ecx,DWORD PTR [ebp-0x28]
  42647e:	mov    eax,DWORD PTR [ebp-0x1c]
  426481:	cmp    eax,ecx
  426483:	ja     0x42662c
  426489:	mov    DWORD PTR [ebp-0x34],0x0
  426490:	push   DWORD PTR [ebp+0x8]
  426493:	mov    edi,DWORD PTR [ebp+0x8]
  426496:	mov    eax,DWORD PTR [ebp+0x8]
  426499:	mov    edx,DWORD PTR [eax+0x1b4]
  42649f:	call   0x4286e9
  4264a4:	push   eax
  4264a5:	mov    eax,DWORD PTR [ebp+0x8]
  4264a8:	mov    eax,DWORD PTR [eax+0x1a8]
  4264ae:	push   DWORD PTR [eax]
  4264b0:	call   0x42838a
  4264b5:	mov    ecx,DWORD PTR [ebp+0x8]
  4264b8:	mov    ecx,DWORD PTR [ecx+0x19c]
  4264be:	mov    DWORD PTR [ecx],eax
  4264c0:	mov    eax,DWORD PTR [ebp+0x8]
  4264c3:	mov    edi,DWORD PTR [eax+0x1e0]
  4264c9:	mov    esi,DWORD PTR [ebp+0x8]
  4264cc:	xor    eax,eax
  4264ce:	lea    edx,[ebp-0x7c]
  4264d1:	call   0x42871f
  4264d6:	push   eax
  4264d7:	mov    eax,DWORD PTR [ebp+0x8]
  4264da:	mov    eax,DWORD PTR [eax+0x19c]
  4264e0:	push   DWORD PTR [eax]
  4264e2:	call   DWORD PTR [edi+0x8]
  4264e5:	mov    DWORD PTR [ebp-0x20],eax
  4264e8:	mov    eax,DWORD PTR [ebp+0x8]
  4264eb:	mov    edi,DWORD PTR [eax+0x1e0]
  4264f1:	mov    esi,DWORD PTR [ebp+0x8]
  4264f4:	xor    eax,eax
  4264f6:	lea    edx,[ebp-0x90]
  4264fc:	call   0x42871f
  426501:	push   eax
  426502:	mov    eax,DWORD PTR [ebp+0x8]
  426505:	mov    eax,DWORD PTR [eax+0x19c]
  42650b:	push   DWORD PTR [eax]
  42650d:	call   DWORD PTR [edi+0x8]
  426510:	mov    eax,DWORD PTR [ebp+0x8]
  426513:	mov    edi,DWORD PTR [eax+0x1e0]
  426519:	mov    esi,DWORD PTR [ebp+0x8]
  42651c:	xor    eax,eax
  42651e:	lea    edx,[ebp-0xa8]
  426524:	call   0x42871f
  426529:	push   eax
  42652a:	mov    eax,DWORD PTR [ebp+0x8]
  42652d:	mov    eax,DWORD PTR [eax+0x19c]
  426533:	push   DWORD PTR [eax]
  426535:	call   DWORD PTR [edi+0x8]
  426538:	and    DWORD PTR [ebp-0x8],0x0
  42653c:	mov    DWORD PTR [ebp-0x48],eax
  42653f:	mov    eax,DWORD PTR [ebp-0x8]
  426542:	and    eax,0x7
  426545:	add    eax,0x31
  426548:	push   eax
  426549:	call   DWORD PTR [ebp-0x20]
  42654c:	test   eax,eax
  42654e:	je     0x426592
  426550:	mov    eax,DWORD PTR [ebp-0x8]
  426553:	push   0x19
  426555:	xor    edx,edx
  426557:	pop    ecx
  426558:	div    ecx
  42655a:	add    dl,0x41
  42655d:	movzx  eax,dl
  426560:	push   eax
  426561:	call   DWORD PTR [ebp-0x48]
  426564:	test   eax,eax
  426566:	jne    0x426592
  426568:	mov    eax,DWORD PTR [ebp+0x8]
  42656b:	mov    edi,DWORD PTR [eax+0x1e0]
  426571:	mov    esi,DWORD PTR [ebp+0x8]
  426574:	xor    eax,eax
  426576:	lea    edx,[ebp-0x68]
  426579:	call   0x42871f
  42657e:	push   eax
  42657f:	mov    eax,DWORD PTR [ebp+0x8]
  426582:	mov    eax,DWORD PTR [eax+0x198]
  426588:	push   DWORD PTR [eax]
  42658a:	call   DWORD PTR [edi+0x8]
  42658d:	mov    DWORD PTR [ebp-0x14],eax
  426590:	jmp    0x426596
  426592:	and    DWORD PTR [ebp-0x14],0x0
  426596:	inc    DWORD PTR [ebp-0x8]
  426599:	cmp    DWORD PTR [ebp-0x8],0x10
  42659d:	jb     0x42653f
  42659f:	mov    eax,DWORD PTR [ebp-0x18]
  4265a2:	mov    esi,DWORD PTR [ebp+0x8]
  4265a5:	xor    eax,ebx
  4265a7:	mov    edi,0x3272f5
  4265ac:	add    eax,edi
  4265ae:	lea    edx,[ebp-0x10c]
  4265b4:	call   0x42871f
  4265b9:	push   eax
  4265ba:	mov    eax,DWORD PTR [ebp-0x10]
  4265bd:	mov    esi,DWORD PTR [ebp+0x8]
  4265c0:	xor    eax,ebx
  4265c2:	add    eax,edi
  4265c4:	lea    edx,[ebp-0x12c]
  4265ca:	call   0x42871f
  4265cf:	push   eax
  4265d0:	call   DWORD PTR [ebp-0x14]
  4265d3:	mov    ecx,DWORD PTR [ebp-0x10]
  4265d6:	xor    ecx,ebx
  4265d8:	add    ecx,edi
  4265da:	cmp    ecx,eax
  4265dc:	jne    0x4265e5
  4265de:	mov    DWORD PTR [ebp-0x34],0x1
  4265e5:	mov    eax,DWORD PTR [ebp-0x18]
  4265e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4265eb:	xor    eax,ebx
  4265ed:	lea    eax,[eax+ecx*1+0x3272f5]
  4265f4:	mov    DWORD PTR [ebp-0x1c],eax
  4265f7:	mov    eax,DWORD PTR [ebp-0x34]
  4265fa:	test   eax,eax
  4265fc:	je     0x426610
  4265fe:	mov    eax,DWORD PTR [ebp-0x18]
  426601:	mov    ecx,DWORD PTR [ebp-0x38]
  426604:	xor    eax,ebx
  426606:	lea    eax,[eax+ecx*1+0x3272f5]
  42660d:	mov    DWORD PTR [ebp-0x38],eax
  426610:	mov    eax,DWORD PTR [ebp-0x18]
  426613:	xor    eax,ebx
  426615:	mov    ecx,0xffcd8d0b
  42661a:	sub    ecx,eax
  42661c:	add    ecx,DWORD PTR [ebp-0x28]
  42661f:	mov    eax,DWORD PTR [ebp-0x1c]
  426622:	cmp    eax,ecx
  426624:	jbe    0x426489
  42662a:	mov    esi,edi
  42662c:	mov    eax,DWORD PTR [ebp-0x38]
  42662f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426632:	cmp    ecx,eax
  426634:	jne    0x426647
  426636:	push   DWORD PTR [ebp+0x8]
  426639:	lea    eax,[ebp-0x40]
  42663c:	push   eax
  42663d:	call   0x42918e
  426642:	mov    DWORD PTR [ebp-0x24],eax
  426645:	jmp    0x426653
  426647:	mov    eax,DWORD PTR [ebp-0x24]
  42664a:	mov    ecx,DWORD PTR [ebp-0x18]
  42664d:	xor    ecx,ebx
  42664f:	add    ecx,esi
  426651:	xor    DWORD PTR [eax],ecx
  426653:	mov    eax,DWORD PTR [ebp-0x10]
  426656:	mov    ecx,DWORD PTR [ebp-0x24]
  426659:	xor    eax,ebx
  42665b:	add    eax,esi
  42665d:	cmp    eax,ecx
  42665f:	je     0x426dd7
  426665:	mov    eax,DWORD PTR [ebp-0x10]
  426668:	mov    ecx,DWORD PTR [ebp-0x40]
  42666b:	xor    eax,ebx
  42666d:	add    eax,esi
  42666f:	cmp    eax,ecx
  426671:	je     0x426dd7
  426677:	mov    eax,DWORD PTR [ebp-0x10]
  42667a:	xor    eax,ebx
  42667c:	add    eax,esi
  42667e:	jmp    0x42669c
  426680:	mov    edi,DWORD PTR [ebp-0x24]
  426683:	mov    cl,al
  426685:	and    cl,0x1f
  426688:	or     dl,0xff
  42668b:	sub    dl,cl
  42668d:	add    BYTE PTR [edi+eax*1],dl
  426690:	mov    ecx,DWORD PTR [ebp-0x18]
  426693:	xor    ecx,ebx
  426695:	lea    eax,[eax+ecx*1+0x3272f5]
  42669c:	mov    ecx,DWORD PTR [ebp-0x40]
  42669f:	cmp    eax,ecx
  4266a1:	jb     0x426680
  4266a3:	mov    eax,DWORD PTR [ebp-0x40]
  4266a6:	mov    DWORD PTR [ebp-0x28],eax
  4266a9:	mov    eax,DWORD PTR [ebp-0x24]
  4266ac:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4266b3:	mov    DWORD PTR [ebp-0xd4],eax
  4266b9:	mov    edi,0xf89c85a2
  4266be:	mov    DWORD PTR [ebp-0x2c],edi
  4266c1:	mov    eax,DWORD PTR [ebp-0x38]
  4266c4:	xor    eax,ebx
  4266c6:	add    eax,esi
  4266c8:	mov    DWORD PTR [ebp-0xc],eax
  4266cb:	mov    eax,DWORD PTR [ebp-0x38]
  4266ce:	xor    eax,ebx
  4266d0:	add    eax,esi
  4266d2:	mov    DWORD PTR [ebp-0x8],eax
  4266d5:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4266dc:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  4266e3:	mov    eax,DWORD PTR [ebp-0x38]
  4266e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4266e9:	xor    eax,ebx
  4266eb:	add    eax,esi
  4266ed:	cmp    ecx,eax
  4266ef:	je     0x4268ee
  4266f5:	jmp    0x4268ca
  4266fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4266fd:	mov    eax,DWORD PTR [ebp-0x28]
  426700:	sub    eax,ecx
  426702:	mov    ecx,DWORD PTR [ebp-0x48]
  426705:	xor    ecx,ebx
  426707:	add    ecx,esi
  426709:	xor    edx,edx
  42670b:	div    ecx
  42670d:	mov    DWORD PTR [ebp-0x8],eax
  426710:	mov    eax,DWORD PTR [ebp-0x4c]
  426713:	mov    ecx,DWORD PTR [ebp-0x8]
  426716:	xor    eax,ebx
  426718:	add    eax,esi
  42671a:	cmp    ecx,eax
  42671c:	jbe    0x426728
  42671e:	mov    eax,DWORD PTR [ebp-0x4c]
  426721:	xor    eax,ebx
  426723:	add    eax,esi
  426725:	mov    DWORD PTR [ebp-0x8],eax
  426728:	mov    eax,DWORD PTR [ebp-0x48]
  42672b:	mov    ecx,DWORD PTR [ebp-0x8]
  42672e:	xor    eax,ebx
  426730:	add    eax,esi
  426732:	imul   eax,ecx
  426735:	mov    DWORD PTR [ebp-0x8],eax
  426738:	mov    eax,DWORD PTR [ebp-0x38]
  42673b:	mov    ecx,DWORD PTR [ebp-0x8]
  42673e:	xor    eax,ebx
  426740:	add    eax,esi
  426742:	cmp    ecx,eax
  426744:	je     0x4268b8
  42674a:	mov    eax,DWORD PTR [ebp-0x8]
  42674d:	mov    DWORD PTR [ebp-0x14],eax
  426750:	mov    eax,DWORD PTR [ebp-0xc]
  426753:	add    eax,DWORD PTR [ebp-0xd4]
  426759:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426760:	mov    DWORD PTR [ebp-0x34],edi
  426763:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  42676d:	mov    DWORD PTR [ebp-0x8],eax
  426770:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426777:	mov    DWORD PTR [ebp-0x1c],edi
  42677a:	mov    eax,DWORD PTR [ebp-0x20]
  42677d:	xor    eax,ebx
  42677f:	add    eax,esi
  426781:	jmp    0x426877
  426786:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  426790:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42679a:	mov    eax,DWORD PTR [ebp-0x1c]
  42679d:	mov    ecx,DWORD PTR [ebp-0x44]
  4267a0:	xor    eax,ebx
  4267a2:	add    eax,esi
  4267a4:	imul   eax,ecx
  4267a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4267aa:	mov    al,BYTE PTR [eax+ecx*1]
  4267ad:	mov    BYTE PTR [ebp-0x2],al
  4267b0:	mov    eax,DWORD PTR [ebp-0x1c]
  4267b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4267b6:	xor    eax,ebx
  4267b8:	add    eax,esi
  4267ba:	imul   eax,ecx
  4267bd:	mov    ecx,DWORD PTR [ebp-0xe8]
  4267c3:	xor    ecx,ebx
  4267c5:	add    eax,ecx
  4267c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ca:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4267d2:	mov    ecx,DWORD PTR [ebp-0xe0]
  4267d8:	xor    ecx,ebx
  4267da:	lea    eax,[ecx+eax*1+0x3272f5]
  4267e1:	movzx  ecx,BYTE PTR [ebp-0x2]
  4267e5:	xor    ecx,eax
  4267e7:	mov    BYTE PTR [ebp-0x2],cl
  4267ea:	mov    al,BYTE PTR [ebp-0x2]
  4267ed:	mov    ecx,DWORD PTR [ebp-0x1c]
  4267f0:	mov    edx,DWORD PTR [ebp-0x44]
  4267f3:	xor    ecx,ebx
  4267f5:	add    ecx,esi
  4267f7:	imul   ecx,edx
  4267fa:	mov    edx,DWORD PTR [ebp-0x8]
  4267fd:	mov    BYTE PTR [ecx+edx*1],al
  426800:	mov    eax,DWORD PTR [ebp-0x1c]
  426803:	mov    ecx,DWORD PTR [ebp-0x44]
  426806:	xor    eax,ebx
  426808:	add    eax,esi
  42680a:	imul   eax,ecx
  42680d:	mov    ecx,DWORD PTR [ebp-0x8]
  426810:	mov    al,BYTE PTR [eax+ecx*1]
  426813:	mov    BYTE PTR [ebp-0x2],al
  426816:	mov    eax,DWORD PTR [ebp-0x1c]
  426819:	mov    ecx,DWORD PTR [ebp-0x44]
  42681c:	xor    eax,ebx
  42681e:	add    eax,esi
  426820:	imul   eax,ecx
  426823:	mov    ecx,DWORD PTR [ebp-0x34]
  426826:	xor    ecx,ebx
  426828:	add    eax,ecx
  42682a:	mov    ecx,DWORD PTR [ebp-0x8]
  42682d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426835:	mov    ecx,DWORD PTR [ebp-0xc4]
  42683b:	xor    ecx,ebx
  42683d:	lea    eax,[ecx+eax*1+0x3272f5]
  426844:	movzx  ecx,BYTE PTR [ebp-0x2]
  426848:	xor    ecx,eax
  42684a:	mov    BYTE PTR [ebp-0x2],cl
  42684d:	mov    al,BYTE PTR [ebp-0x2]
  426850:	mov    ecx,DWORD PTR [ebp-0x1c]
  426853:	mov    edx,DWORD PTR [ebp-0x44]
  426856:	xor    ecx,ebx
  426858:	add    ecx,esi
  42685a:	imul   ecx,edx
  42685d:	mov    edx,DWORD PTR [ebp-0x8]
  426860:	mov    BYTE PTR [ecx+edx*1],al
  426863:	mov    eax,DWORD PTR [ebp-0x30]
  426866:	mov    ecx,DWORD PTR [ebp-0x34]
  426869:	xor    eax,ebx
  42686b:	xor    ecx,ebx
  42686d:	add    eax,esi
  42686f:	add    ecx,esi
  426871:	imul   eax,ecx
  426874:	add    eax,DWORD PTR [ebp-0x44]
  426877:	mov    DWORD PTR [ebp-0x44],eax
  42687a:	mov    eax,DWORD PTR [ebp-0x44]
  42687d:	mov    ecx,DWORD PTR [ebp-0x14]
  426880:	cmp    ecx,eax
  426882:	jb     0x426786
  426888:	mov    eax,DWORD PTR [ebp-0x34]
  42688b:	mov    ecx,DWORD PTR [ebp-0x14]
  42688e:	xor    eax,ebx
  426890:	add    eax,esi
  426892:	imul   eax,ecx
  426895:	mov    ecx,DWORD PTR [ebp-0x20]
  426898:	xor    ecx,ebx
  42689a:	add    ecx,esi
  42689c:	or     eax,ecx
  42689e:	mov    ecx,DWORD PTR [ebp-0x2c]
  4268a1:	xor    ecx,ebx
  4268a3:	add    eax,ecx
  4268a5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4268a8:	xor    ecx,ebx
  4268aa:	add    eax,ecx
  4268ac:	mov    ecx,DWORD PTR [ebp-0xc]
  4268af:	lea    eax,[eax+ecx*1+0x64e5ea]
  4268b6:	jmp    0x4268c7
  4268b8:	mov    eax,DWORD PTR [ebp-0x2c]
  4268bb:	mov    ecx,DWORD PTR [ebp-0xc]
  4268be:	xor    eax,ebx
  4268c0:	lea    eax,[eax+ecx*1+0x3272f5]
  4268c7:	mov    DWORD PTR [ebp-0xc],eax
  4268ca:	mov    eax,DWORD PTR [ebp-0x2c]
  4268cd:	xor    eax,ebx
  4268cf:	mov    ecx,0xffcd8d0b
  4268d4:	sub    ecx,eax
  4268d6:	add    ecx,DWORD PTR [ebp-0x28]
  4268d9:	mov    eax,DWORD PTR [ebp-0x2c]
  4268dc:	mov    edx,DWORD PTR [ebp-0xc]
  4268df:	xor    eax,ebx
  4268e1:	add    eax,esi
  4268e3:	imul   eax,edx
  4268e6:	cmp    eax,ecx
  4268e8:	jbe    0x4266fa
  4268ee:	mov    eax,DWORD PTR [ebp-0x10]
  4268f1:	mov    ecx,DWORD PTR [ebp-0x40]
  4268f4:	mov    eax,DWORD PTR [ebp+0x8]
  4268f7:	mov    edx,DWORD PTR [ebp-0x54]
  4268fa:	mov    eax,DWORD PTR [eax+0x1e0]
  426900:	xor    edx,ebx
  426902:	add    edx,esi
  426904:	push   edx
  426905:	mov    edx,DWORD PTR [ebp-0x3c]
  426908:	xor    edx,ebx
  42690a:	add    edx,esi
  42690c:	push   edx
  42690d:	push   ecx
  42690e:	mov    DWORD PTR [ebp-0x30],ecx
  426911:	mov    ecx,DWORD PTR [ebp-0x10]
  426914:	xor    ecx,ebx
  426916:	add    ecx,esi
  426918:	push   ecx
  426919:	call   DWORD PTR [eax+0x14]
  42691c:	mov    edi,eax
  42691e:	mov    eax,DWORD PTR [ebp-0x10]
  426921:	xor    eax,ebx
  426923:	add    eax,esi
  426925:	cmp    eax,edi
  426927:	je     0x426982
  426929:	mov    eax,DWORD PTR [ebp-0x10]
  42692c:	jmp    0x42694f
  42692e:	mov    ecx,DWORD PTR [ebp-0x24]
  426931:	xor    eax,ebx
  426933:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  42693a:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  426941:	mov    ecx,DWORD PTR [ebp-0x18]
  426944:	xor    ecx,ebx
  426946:	lea    eax,[ecx+eax*1+0x3272f5]
  42694d:	xor    eax,ebx
  42694f:	mov    ecx,DWORD PTR [ebp-0x40]
  426952:	sub    ecx,esi
  426954:	xor    ecx,ebx
  426956:	cmp    eax,ecx
  426958:	jne    0x42692e
  42695a:	mov    eax,DWORD PTR [ebp+0x8]
  42695d:	mov    ecx,DWORD PTR [ebp-0x50]
  426960:	mov    eax,DWORD PTR [eax+0x1e0]
  426966:	xor    ecx,ebx
  426968:	add    ecx,esi
  42696a:	push   ecx
  42696b:	mov    ecx,DWORD PTR [ebp-0x10]
  42696e:	xor    ecx,ebx
  426970:	add    ecx,esi
  426972:	push   ecx
  426973:	push   DWORD PTR [ebp-0x24]
  426976:	call   DWORD PTR [eax+0x18]
  426979:	mov    eax,DWORD PTR [ebp-0x30]
  42697c:	mov    DWORD PTR [ebp-0x24],edi
  42697f:	mov    DWORD PTR [ebp-0x40],eax
  426982:	mov    edi,DWORD PTR [ebp-0x24]
  426985:	mov    eax,DWORD PTR [ebp-0x18]
  426988:	mov    ecx,DWORD PTR [ebp-0x10]
  42698b:	xor    eax,ebx
  42698d:	mov    DWORD PTR [ebp-0x30],edi
  426990:	add    eax,esi
  426992:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  426999:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  4269a0:	jmp    0x4269d4
  4269a2:	xor    ecx,ebx
  4269a4:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  4269ab:	xor    dl,0x7e
  4269ae:	add    dl,0x3
  4269b1:	mov    DWORD PTR [ebp-0x3c],ecx
  4269b4:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  4269bc:	movzx  edx,dl
  4269bf:	cmp    ecx,edx
  4269c1:	jne    0x4269de
  4269c3:	mov    ecx,DWORD PTR [ebp-0x18]
  4269c6:	mov    edx,DWORD PTR [ebp-0x3c]
  4269c9:	xor    ecx,ebx
  4269cb:	lea    ecx,[ecx+edx*1+0x3272f5]
  4269d2:	xor    ecx,ebx
  4269d4:	cmp    ecx,0xf89c85bd
  4269da:	jne    0x4269a2
  4269dc:	jmp    0x4269e5
  4269de:	mov    eax,DWORD PTR [ebp-0x10]
  4269e1:	xor    eax,ebx
  4269e3:	add    eax,esi
  4269e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269e8:	xor    ecx,ebx
  4269ea:	add    ecx,esi
  4269ec:	cmp    ecx,eax
  4269ee:	je     0x426b61
  4269f4:	mov    eax,DWORD PTR [edi+0x8]
  4269f7:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4269fe:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426a05:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  426a0c:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426a13:	mov    DWORD PTR [ebp-0x14],eax
  426a16:	mov    eax,DWORD PTR [ebp+0x8]
  426a19:	mov    ecx,DWORD PTR [ebp-0x20]
  426a1c:	xor    ecx,ebx
  426a1e:	add    ecx,esi
  426a20:	push   ecx
  426a21:	mov    ecx,DWORD PTR [ebp-0x48]
  426a24:	mov    eax,DWORD PTR [eax+0x1e0]
  426a2a:	xor    ecx,ebx
  426a2c:	add    ecx,esi
  426a2e:	push   ecx
  426a2f:	mov    ecx,DWORD PTR [ebp-0x3c]
  426a32:	xor    ecx,ebx
  426a34:	add    ecx,esi
  426a36:	push   ecx
  426a37:	mov    ecx,DWORD PTR [ebp-0xc]
  426a3a:	xor    ecx,ebx
  426a3c:	add    ecx,esi
  426a3e:	push   ecx
  426a3f:	call   DWORD PTR [eax+0x14]
  426a42:	mov    edi,eax
  426a44:	mov    eax,DWORD PTR [ebp+0x8]
  426a47:	mov    ecx,DWORD PTR [ebp-0x20]
  426a4a:	mov    eax,DWORD PTR [eax+0x1e0]
  426a50:	xor    ecx,ebx
  426a52:	add    ecx,esi
  426a54:	push   ecx
  426a55:	mov    ecx,DWORD PTR [ebp-0x48]
  426a58:	xor    ecx,ebx
  426a5a:	add    ecx,esi
  426a5c:	push   ecx
  426a5d:	mov    ecx,DWORD PTR [ebp-0xc]
  426a60:	push   DWORD PTR [ebp-0x14]
  426a63:	xor    ecx,ebx
  426a65:	add    ecx,esi
  426a67:	push   ecx
  426a68:	call   DWORD PTR [eax+0x14]
  426a6b:	mov    ecx,DWORD PTR [ebp-0xc]
  426a6e:	xor    ecx,ebx
  426a70:	add    ecx,esi
  426a72:	mov    DWORD PTR [ebp-0x20],eax
  426a75:	cmp    ecx,edi
  426a77:	je     0x426e04
  426a7d:	mov    ecx,DWORD PTR [ebp-0xc]
  426a80:	xor    ecx,ebx
  426a82:	add    ecx,esi
  426a84:	cmp    ecx,eax
  426a86:	je     0x426e04
  426a8c:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426a93:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426a9a:	mov    ecx,DWORD PTR [ebp-0x3c]
  426a9d:	xor    cl,0xae
  426aa0:	sub    cl,0xb
  426aa3:	mov    BYTE PTR [edi],cl
  426aa5:	mov    ecx,DWORD PTR [ebp-0xc]
  426aa8:	xor    cl,0xae
  426aab:	sub    cl,0xb
  426aae:	mov    BYTE PTR [edi+0x1],cl
  426ab1:	mov    ecx,DWORD PTR [ebp-0x54]
  426ab4:	xor    cl,0xae
  426ab7:	sub    cl,0xb
  426aba:	mov    BYTE PTR [edi+0x2],cl
  426abd:	and    DWORD PTR [ebp-0xc8],0x0
  426ac4:	and    DWORD PTR [ebp-0xdc],0x0
  426acb:	lea    ecx,[ebp-0xdc]
  426ad1:	push   ecx
  426ad2:	push   DWORD PTR [ebp-0x14]
  426ad5:	push   eax
  426ad6:	lea    eax,[ebp-0xc8]
  426adc:	push   eax
  426add:	mov    eax,DWORD PTR [ebp-0x30]
  426ae0:	push   DWORD PTR [eax+0xc]
  426ae3:	mov    eax,DWORD PTR [ebp-0x24]
  426ae6:	add    eax,0x10
  426ae9:	push   eax
  426aea:	push   edi
  426aeb:	call   0x425d91
  426af0:	mov    DWORD PTR [ebp-0x3c],eax
  426af3:	mov    eax,DWORD PTR [ebp+0x8]
  426af6:	mov    ecx,DWORD PTR [ebp-0x50]
  426af9:	mov    eax,DWORD PTR [eax+0x1e0]
  426aff:	xor    ecx,ebx
  426b01:	add    ecx,esi
  426b03:	push   ecx
  426b04:	mov    ecx,DWORD PTR [ebp-0xc]
  426b07:	xor    ecx,ebx
  426b09:	add    ecx,esi
  426b0b:	push   ecx
  426b0c:	push   edi
  426b0d:	call   DWORD PTR [eax+0x18]
  426b10:	mov    eax,DWORD PTR [ebp-0x3c]
  426b13:	add    eax,0xffcd8d0b
  426b18:	xor    eax,ebx
  426b1a:	cmp    eax,0xf89c85a5
  426b1f:	mov    eax,DWORD PTR [ebp+0x8]
  426b22:	mov    eax,DWORD PTR [eax+0x1e0]
  426b28:	mov    ecx,DWORD PTR [ebp-0x50]
  426b2b:	jne    0x426b4e
  426b2d:	xor    ecx,ebx
  426b2f:	add    ecx,esi
  426b31:	push   ecx
  426b32:	mov    ecx,DWORD PTR [ebp-0xc]
  426b35:	xor    ecx,ebx
  426b37:	add    ecx,esi
  426b39:	push   ecx
  426b3a:	push   DWORD PTR [ebp-0x24]
  426b3d:	call   DWORD PTR [eax+0x18]
  426b40:	mov    eax,DWORD PTR [ebp-0x20]
  426b43:	mov    DWORD PTR [ebp-0x24],eax
  426b46:	mov    eax,DWORD PTR [ebp-0x14]
  426b49:	mov    DWORD PTR [ebp-0x40],eax
  426b4c:	jmp    0x426b61
  426b4e:	xor    ecx,ebx
  426b50:	add    ecx,esi
  426b52:	push   ecx
  426b53:	mov    ecx,DWORD PTR [ebp-0xc]
  426b56:	xor    ecx,ebx
  426b58:	add    ecx,esi
  426b5a:	push   ecx
  426b5b:	push   DWORD PTR [ebp-0x20]
  426b5e:	call   DWORD PTR [eax+0x18]
  426b61:	mov    eax,DWORD PTR [ebp-0x40]
  426b64:	mov    DWORD PTR [ebp-0x38],eax
  426b67:	mov    eax,DWORD PTR [ebp-0x24]
  426b6a:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426b71:	mov    DWORD PTR [ebp-0x3c],eax
  426b74:	mov    edi,0xf89c85a2
  426b79:	mov    DWORD PTR [ebp-0x2c],edi
  426b7c:	mov    eax,DWORD PTR [ebp-0x28]
  426b7f:	xor    eax,ebx
  426b81:	add    eax,esi
  426b83:	mov    DWORD PTR [ebp-0xc],eax
  426b86:	mov    eax,DWORD PTR [ebp-0x28]
  426b89:	xor    eax,ebx
  426b8b:	add    eax,esi
  426b8d:	mov    DWORD PTR [ebp-0x14],eax
  426b90:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426b97:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426b9e:	mov    eax,DWORD PTR [ebp-0x28]
  426ba1:	mov    ecx,DWORD PTR [ebp-0x38]
  426ba4:	xor    eax,ebx
  426ba6:	add    eax,esi
  426ba8:	cmp    ecx,eax
  426baa:	je     0x426da0
  426bb0:	jmp    0x426d7c
  426bb5:	mov    ecx,DWORD PTR [ebp-0xc]
  426bb8:	mov    eax,DWORD PTR [ebp-0x38]
  426bbb:	sub    eax,ecx
  426bbd:	mov    ecx,DWORD PTR [ebp-0x48]
  426bc0:	xor    ecx,ebx
  426bc2:	add    ecx,esi
  426bc4:	xor    edx,edx
  426bc6:	div    ecx
  426bc8:	mov    DWORD PTR [ebp-0x14],eax
  426bcb:	mov    eax,DWORD PTR [ebp-0x20]
  426bce:	mov    ecx,DWORD PTR [ebp-0x14]
  426bd1:	xor    eax,ebx
  426bd3:	add    eax,esi
  426bd5:	cmp    ecx,eax
  426bd7:	jbe    0x426be3
  426bd9:	mov    eax,DWORD PTR [ebp-0x20]
  426bdc:	xor    eax,ebx
  426bde:	add    eax,esi
  426be0:	mov    DWORD PTR [ebp-0x14],eax
  426be3:	mov    eax,DWORD PTR [ebp-0x48]
  426be6:	mov    ecx,DWORD PTR [ebp-0x14]
  426be9:	xor    eax,ebx
  426beb:	add    eax,esi
  426bed:	imul   eax,ecx
  426bf0:	mov    DWORD PTR [ebp-0x14],eax
  426bf3:	mov    eax,DWORD PTR [ebp-0x28]
  426bf6:	mov    ecx,DWORD PTR [ebp-0x14]
  426bf9:	xor    eax,ebx
  426bfb:	add    eax,esi
  426bfd:	cmp    ecx,eax
  426bff:	je     0x426d6a
  426c05:	mov    eax,DWORD PTR [ebp-0x14]
  426c08:	mov    DWORD PTR [ebp-0x34],eax
  426c0b:	mov    eax,DWORD PTR [ebp-0xc]
  426c0e:	add    eax,DWORD PTR [ebp-0x3c]
  426c11:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426c18:	mov    DWORD PTR [ebp-0x14],edi
  426c1b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426c22:	mov    DWORD PTR [ebp-0x1c],eax
  426c25:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426c2c:	mov    DWORD PTR [ebp-0x8],edi
  426c2f:	mov    eax,DWORD PTR [ebp-0x4c]
  426c32:	xor    eax,ebx
  426c34:	add    eax,esi
  426c36:	jmp    0x426d29
  426c3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426c45:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426c4f:	mov    eax,DWORD PTR [ebp-0x8]
  426c52:	mov    ecx,DWORD PTR [ebp-0x18]
  426c55:	xor    eax,ebx
  426c57:	add    eax,esi
  426c59:	imul   eax,ecx
  426c5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c5f:	mov    al,BYTE PTR [eax+ecx*1]
  426c62:	mov    BYTE PTR [ebp-0x1],al
  426c65:	mov    eax,DWORD PTR [ebp-0x8]
  426c68:	mov    ecx,DWORD PTR [ebp-0x18]
  426c6b:	xor    eax,ebx
  426c6d:	add    eax,esi
  426c6f:	imul   eax,ecx
  426c72:	mov    ecx,DWORD PTR [ebp-0x54]
  426c75:	xor    ecx,ebx
  426c77:	add    eax,ecx
  426c79:	mov    ecx,DWORD PTR [ebp-0x1c]
  426c7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426c84:	mov    ecx,DWORD PTR [ebp-0xe4]
  426c8a:	xor    ecx,ebx
  426c8c:	lea    eax,[ecx+eax*1+0x3272f5]
  426c93:	movzx  ecx,BYTE PTR [ebp-0x1]
  426c97:	xor    ecx,eax
  426c99:	mov    BYTE PTR [ebp-0x1],cl
  426c9c:	mov    al,BYTE PTR [ebp-0x1]
  426c9f:	mov    ecx,DWORD PTR [ebp-0x8]
  426ca2:	mov    edx,DWORD PTR [ebp-0x18]
  426ca5:	xor    ecx,ebx
  426ca7:	add    ecx,esi
  426ca9:	imul   ecx,edx
  426cac:	mov    edx,DWORD PTR [ebp-0x1c]
  426caf:	mov    BYTE PTR [ecx+edx*1],al
  426cb2:	mov    eax,DWORD PTR [ebp-0x8]
  426cb5:	mov    ecx,DWORD PTR [ebp-0x18]
  426cb8:	xor    eax,ebx
  426cba:	add    eax,esi
  426cbc:	imul   eax,ecx
  426cbf:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cc2:	mov    al,BYTE PTR [eax+ecx*1]
  426cc5:	mov    BYTE PTR [ebp-0x1],al
  426cc8:	mov    eax,DWORD PTR [ebp-0x8]
  426ccb:	mov    ecx,DWORD PTR [ebp-0x18]
  426cce:	xor    eax,ebx
  426cd0:	add    eax,esi
  426cd2:	imul   eax,ecx
  426cd5:	mov    ecx,DWORD PTR [ebp-0x14]
  426cd8:	xor    ecx,ebx
  426cda:	add    eax,ecx
  426cdc:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cdf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426ce7:	mov    ecx,DWORD PTR [ebp-0xd0]
  426ced:	xor    ecx,ebx
  426cef:	lea    eax,[ecx+eax*1+0x3272f5]
  426cf6:	movzx  ecx,BYTE PTR [ebp-0x1]
  426cfa:	xor    ecx,eax
  426cfc:	mov    BYTE PTR [ebp-0x1],cl
  426cff:	mov    al,BYTE PTR [ebp-0x1]
  426d02:	mov    ecx,DWORD PTR [ebp-0x8]
  426d05:	mov    edx,DWORD PTR [ebp-0x18]
  426d08:	xor    ecx,ebx
  426d0a:	add    ecx,esi
  426d0c:	imul   ecx,edx
  426d0f:	mov    edx,DWORD PTR [ebp-0x1c]
  426d12:	mov    BYTE PTR [ecx+edx*1],al
  426d15:	mov    eax,DWORD PTR [ebp-0x30]
  426d18:	mov    ecx,DWORD PTR [ebp-0x14]
  426d1b:	xor    eax,ebx
  426d1d:	xor    ecx,ebx
  426d1f:	add    eax,esi
  426d21:	add    ecx,esi
  426d23:	imul   eax,ecx
  426d26:	add    eax,DWORD PTR [ebp-0x18]
  426d29:	mov    DWORD PTR [ebp-0x18],eax
  426d2c:	mov    eax,DWORD PTR [ebp-0x18]
  426d2f:	mov    ecx,DWORD PTR [ebp-0x34]
  426d32:	cmp    ecx,eax
  426d34:	jb     0x426c3b
  426d3a:	mov    eax,DWORD PTR [ebp-0x14]
  426d3d:	mov    ecx,DWORD PTR [ebp-0x34]
  426d40:	xor    eax,ebx
  426d42:	add    eax,esi
  426d44:	imul   eax,ecx
  426d47:	mov    ecx,DWORD PTR [ebp-0x4c]
  426d4a:	xor    ecx,ebx
  426d4c:	add    ecx,esi
  426d4e:	or     eax,ecx
  426d50:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d53:	xor    ecx,ebx
  426d55:	add    eax,ecx
  426d57:	mov    ecx,DWORD PTR [ebp-0x2c]
  426d5a:	xor    ecx,ebx
  426d5c:	add    eax,ecx
  426d5e:	mov    ecx,DWORD PTR [ebp-0xc]
  426d61:	lea    eax,[eax+ecx*1+0x64e5ea]
  426d68:	jmp    0x426d79
  426d6a:	mov    eax,DWORD PTR [ebp-0x2c]
  426d6d:	mov    ecx,DWORD PTR [ebp-0xc]
  426d70:	xor    eax,ebx
  426d72:	lea    eax,[eax+ecx*1+0x3272f5]
  426d79:	mov    DWORD PTR [ebp-0xc],eax
  426d7c:	mov    eax,DWORD PTR [ebp-0x2c]
  426d7f:	xor    eax,ebx
  426d81:	mov    ecx,0xffcd8d0b
  426d86:	sub    ecx,eax
  426d88:	add    ecx,DWORD PTR [ebp-0x38]
  426d8b:	mov    eax,DWORD PTR [ebp-0x2c]
  426d8e:	mov    edx,DWORD PTR [ebp-0xc]
  426d91:	xor    eax,ebx
  426d93:	add    eax,esi
  426d95:	imul   eax,edx
  426d98:	cmp    eax,ecx
  426d9a:	jbe    0x426bb5
  426da0:	push   DWORD PTR [ebp+0x8]
  426da3:	mov    eax,DWORD PTR [ebp+0x8]
  426da6:	push   DWORD PTR [eax+0x1cc]
  426dac:	lea    eax,[ebp-0xd8]
  426db2:	push   eax
  426db3:	mov    eax,DWORD PTR [ebp+0x8]
  426db6:	mov    eax,DWORD PTR [eax+0x1c4]
  426dbc:	push   DWORD PTR [eax]
  426dbe:	mov    eax,DWORD PTR [ebp+0x8]
  426dc1:	mov    eax,DWORD PTR [eax+0x1c0]
  426dc7:	push   DWORD PTR [eax]
  426dc9:	push   DWORD PTR [ebp-0x40]
  426dcc:	push   DWORD PTR [ebp-0x24]
  426dcf:	call   0x427866
  426dd4:	mov    DWORD PTR [ebp-0x3c],eax
  426dd7:	mov    eax,DWORD PTR [ebp-0x10]
  426dda:	mov    ecx,DWORD PTR [ebp-0x24]
  426ddd:	xor    eax,ebx
  426ddf:	add    eax,esi
  426de1:	cmp    eax,ecx
  426de3:	je     0x426e04
  426de5:	mov    eax,DWORD PTR [ebp+0x8]
  426de8:	mov    ecx,DWORD PTR [ebp-0x50]
  426deb:	mov    eax,DWORD PTR [eax+0x1e0]
  426df1:	xor    ecx,ebx
  426df3:	add    ecx,esi
  426df5:	push   ecx
  426df6:	mov    ecx,DWORD PTR [ebp-0x10]
  426df9:	xor    ecx,ebx
  426dfb:	add    ecx,esi
  426dfd:	push   ecx
  426dfe:	push   DWORD PTR [ebp-0x24]
  426e01:	call   DWORD PTR [eax+0x18]
  426e04:	pop    edi
  426e05:	pop    esi
  426e06:	pop    ebx
  426e07:	leave  
  426e08:	ret    0x4
  426e0b:	push   ebp
  426e0c:	mov    ebp,esp
  426e0e:	push   ecx
  426e0f:	push   ecx
  426e10:	lea    eax,[ebp-0x8]
  426e13:	mov    DWORD PTR [ebp-0x4],eax
  426e16:	push   esi
  426e17:	mov    esi,DWORD PTR [ebp-0x4]
  426e1a:	mov    eax,0xf881ba2f
  426e1f:	mov    DWORD PTR [esi],eax
  426e21:	mov    esi,DWORD PTR [ebp-0x8]
  426e24:	cmp    esi,eax
  426e26:	pop    esi
  426e27:	jne    0x426e31
  426e29:	mov    BYTE PTR [ecx+0xa],0x83
  426e2d:	mov    BYTE PTR [edx+0x8],0x2e
  426e31:	mov    BYTE PTR [edx+0xa],0x83
  426e35:	mov    BYTE PTR [ecx+0x2],0x15
  426e39:	leave  
  426e3a:	ret    
  426e3b:	push   ebp
  426e3c:	mov    ebp,esp
  426e3e:	push   ecx
  426e3f:	push   ecx
  426e40:	lea    eax,[ebp-0x8]
  426e43:	mov    DWORD PTR [ebp-0x4],eax
  426e46:	mov    edx,DWORD PTR [ebp-0x4]
  426e49:	mov    eax,0xf88b0bcb
  426e4e:	mov    DWORD PTR [edx],eax
  426e50:	mov    edx,DWORD PTR [ebp-0x8]
  426e53:	cmp    edx,eax
  426e55:	jne    0x426e66
  426e57:	mov    eax,DWORD PTR [ebp+0x8]
  426e5a:	mov    BYTE PTR [ecx+0x9],0xf
  426e5e:	mov    BYTE PTR [eax+0x7],0x56
  426e62:	mov    BYTE PTR [ecx+0x6],0xe
  426e66:	mov    BYTE PTR [ecx+0x3],0x1f
  426e6a:	leave  
  426e6b:	ret    0x4
  426e6e:	push   ebp
  426e6f:	mov    ebp,esp
  426e71:	push   ecx
  426e72:	push   ecx
  426e73:	lea    eax,[ebp-0x8]
  426e76:	mov    DWORD PTR [ebp-0x4],eax
  426e79:	mov    edx,DWORD PTR [ebp-0x4]
  426e7c:	mov    eax,0x7e0da2f
  426e81:	mov    DWORD PTR [edx],eax
  426e83:	mov    edx,DWORD PTR [ebp-0x8]
  426e86:	cmp    edx,eax
  426e88:	jne    0x426e8e
  426e8a:	mov    BYTE PTR [ecx+0x7],0x56
  426e8e:	mov    eax,DWORD PTR [ebp+0x8]
  426e91:	mov    BYTE PTR [ecx+0x1],0x18
  426e95:	mov    BYTE PTR [eax+0x9],0x2f
  426e99:	leave  
  426e9a:	ret    0x4
  426e9d:	push   ebp
  426e9e:	mov    ebp,esp
  426ea0:	push   ecx
  426ea1:	push   ecx
  426ea2:	lea    eax,[ebp-0x8]
  426ea5:	mov    DWORD PTR [ebp-0x4],eax
  426ea8:	push   esi
  426ea9:	mov    esi,DWORD PTR [ebp-0x4]
  426eac:	mov    eax,0x7060e3c
  426eb1:	mov    DWORD PTR [esi],eax
  426eb3:	mov    esi,DWORD PTR [ebp-0x8]
  426eb6:	cmp    esi,eax
  426eb8:	pop    esi
  426eb9:	jne    0x426ec5
  426ebb:	mov    BYTE PTR [edx+0x4],0x12
  426ebf:	mov    WORD PTR [ecx+0x3],0x121f
  426ec5:	mov    BYTE PTR [edx],0x3e
  426ec8:	leave  
  426ec9:	ret    
  426eca:	push   ebp
  426ecb:	mov    ebp,esp
  426ecd:	push   ecx
  426ece:	push   ecx
  426ecf:	lea    eax,[ebp-0x8]
  426ed2:	mov    DWORD PTR [ebp-0x4],eax
  426ed5:	mov    edx,DWORD PTR [ebp-0x4]
  426ed8:	mov    eax,0xf8870b3f
  426edd:	mov    DWORD PTR [edx],eax
  426edf:	mov    edx,DWORD PTR [ebp-0x8]
  426ee2:	cmp    edx,eax
  426ee4:	jne    0x426ef1
  426ee6:	mov    eax,DWORD PTR [ebp+0x8]
  426ee9:	mov    BYTE PTR [ecx+0x8],0xe
  426eed:	mov    BYTE PTR [eax+0x1],0x18
  426ef1:	mov    BYTE PTR [ecx+0x5],0xa
  426ef5:	leave  
  426ef6:	ret    0x4
  426ef9:	push   esi
  426efa:	mov    ecx,edi
  426efc:	call   0x426eca
  426f01:	mov    edx,edi
  426f03:	mov    ecx,esi
  426f05:	mov    BYTE PTR [esi],0x1e
  426f08:	call   0x426e9d
  426f0d:	push   esi
  426f0e:	mov    ecx,edi
  426f10:	mov    BYTE PTR [esi+0x5],0xa
  426f14:	call   0x426e6e
  426f19:	push   esi
  426f1a:	mov    BYTE PTR [esi+0x6],0xe
  426f1e:	call   0x426e3b
  426f23:	mov    BYTE PTR [esi+0x2],0x15
  426f27:	mov    edx,esi
  426f29:	jmp    0x426e0b
  426f2e:	push   ebp
  426f2f:	mov    ebp,esp
  426f31:	push   ecx
  426f32:	mov    ecx,DWORD PTR [edx+0x194]
  426f38:	push   esi
  426f39:	mov    esi,DWORD PTR [ebp+0x8]
  426f3c:	mov    esi,DWORD PTR [esi]
  426f3e:	mov    DWORD PTR [ecx],esi
  426f40:	mov    ecx,DWORD PTR [edx+0x194]
  426f46:	mov    ecx,DWORD PTR [ecx]
  426f48:	mov    esi,DWORD PTR [edx+0x190]
  426f4e:	mov    DWORD PTR [esi],ecx
  426f50:	mov    eax,DWORD PTR [edx+0x194]
  426f56:	mov    ecx,DWORD PTR [eax]
  426f58:	mov    ecx,DWORD PTR [ecx+0x3c]
  426f5b:	add    ecx,DWORD PTR [eax]
  426f5d:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  426f64:	mov    eax,DWORD PTR [ebp-0x4]
  426f67:	movzx  ecx,WORD PTR [ecx+0x16]
  426f6b:	xor    eax,0x75108ae
  426f70:	add    eax,0x3272f5
  426f75:	pop    esi
  426f76:	test   ecx,eax
  426f78:	je     0x426f86
  426f7a:	mov    eax,DWORD PTR [edx+0x1c8]
  426f80:	mov    DWORD PTR [eax],0xf89c85a2
  426f86:	leave  
  426f87:	ret    0x4
  426f8a:	push   ebp
  426f8b:	mov    ebp,esp
  426f8d:	sub    esp,0x70
  426f90:	and    DWORD PTR [ebp-0x20],0x0
  426f94:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  426f9b:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  426fa2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  426fa9:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426fb0:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  426fb7:	mov    eax,DWORD PTR [ebp+0x20]
  426fba:	mov    eax,DWORD PTR [eax+0x194]
  426fc0:	mov    DWORD PTR [ebp-0xc],eax
  426fc3:	mov    eax,DWORD PTR [ebp+0x20]
  426fc6:	push   ebx
  426fc7:	push   esi
  426fc8:	mov    esi,DWORD PTR [eax+0x190]
  426fce:	mov    eax,DWORD PTR [ebp+0x20]
  426fd1:	mov    eax,DWORD PTR [eax+0x18c]
  426fd7:	mov    DWORD PTR [ebp-0x8],eax
  426fda:	mov    eax,DWORD PTR [eax]
  426fdc:	push   edi
  426fdd:	mov    DWORD PTR [ebp-0x4],esi
  426fe0:	test   eax,eax
  426fe2:	jne    0x426fef
  426fe4:	push   DWORD PTR [ebp+0x1c]
  426fe7:	mov    edx,DWORD PTR [ebp+0x20]
  426fea:	call   0x426f2e
  426fef:	mov    eax,DWORD PTR [esi]
  426ff1:	mov    ebx,DWORD PTR [esi]
  426ff3:	add    ebx,DWORD PTR [eax+0x3c]
  426ff6:	mov    eax,DWORD PTR [ebp+0xc]
  426ff9:	mov    ecx,DWORD PTR [ebp-0x8]
  426ffc:	mov    ecx,DWORD PTR [ecx]
  426ffe:	mov    esi,0x75108ae
  427003:	xor    eax,esi
  427005:	mov    edi,0x3272f5
  42700a:	add    eax,edi
  42700c:	cmp    eax,ecx
  42700e:	jne    0x427246
  427014:	mov    eax,DWORD PTR [ebp-0xc]
  427017:	mov    eax,DWORD PTR [eax]
  427019:	mov    DWORD PTR [ebp-0x10],eax
  42701c:	mov    eax,DWORD PTR [ebx+0x50]
  42701f:	mov    DWORD PTR [ebp-0x68],eax
  427022:	mov    eax,DWORD PTR [ebp-0x18]
  427025:	xor    eax,esi
  427027:	add    eax,edi
  427029:	mov    DWORD PTR [ebp-0x64],eax
  42702c:	mov    eax,DWORD PTR [ebp-0x14]
  42702f:	and    DWORD PTR [ebp-0x6c],0x0
  427033:	xor    eax,esi
  427035:	add    eax,edi
  427037:	mov    DWORD PTR [ebp-0x60],eax
  42703a:	lea    eax,[ebp-0x70]
  42703d:	push   eax
  42703e:	mov    eax,DWORD PTR [ebp+0x8]
  427041:	xor    eax,esi
  427043:	add    eax,edi
  427045:	push   eax
  427046:	mov    eax,DWORD PTR [ebp+0x20]
  427049:	add    eax,0xaa
  42704e:	push   eax
  42704f:	mov    eax,DWORD PTR [ebp+0x20]
  427052:	mov    eax,DWORD PTR [eax+0x198]
  427058:	mov    DWORD PTR [ebp-0x70],0x4
  42705f:	push   DWORD PTR [eax]
  427061:	mov    eax,DWORD PTR [ebp+0x10]
  427064:	call   eax
  427066:	mov    ecx,DWORD PTR [ebp-0xc]
  427069:	mov    ecx,DWORD PTR [ecx]
  42706b:	mov    edx,DWORD PTR [ebp-0x8]
  42706e:	mov    DWORD PTR [ebp-0x6c],eax
  427071:	mov    DWORD PTR [ebp+0x1c],eax
  427074:	mov    DWORD PTR [edx],ecx
  427076:	mov    ecx,DWORD PTR [ebp-0x4]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x50]
  42707e:	mov    DWORD PTR [ebp-0x68],eax
  427081:	mov    eax,DWORD PTR [ebp-0x1c]
  427084:	xor    eax,esi
  427086:	add    eax,edi
  427088:	mov    DWORD PTR [ebp-0x64],eax
  42708b:	lea    eax,[ebp-0x20]
  42708e:	mov    DWORD PTR [ebp-0x60],eax
  427091:	lea    eax,[ebp-0x70]
  427094:	push   eax
  427095:	mov    eax,DWORD PTR [ebp+0x8]
  427098:	xor    eax,esi
  42709a:	add    eax,edi
  42709c:	push   eax
  42709d:	mov    eax,DWORD PTR [ebp+0x20]
  4270a0:	add    eax,0xee
  4270a5:	push   eax
  4270a6:	mov    eax,DWORD PTR [ebp+0x20]
  4270a9:	mov    eax,DWORD PTR [eax+0x198]
  4270af:	mov    DWORD PTR [ebp-0x70],0x4
  4270b6:	push   DWORD PTR [eax]
  4270b8:	mov    eax,DWORD PTR [ebp+0x10]
  4270bb:	call   eax
  4270bd:	test   eax,eax
  4270bf:	je     0x4270e4
  4270c1:	and    DWORD PTR [ebp+0xc],0x0
  4270c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4270c9:	jbe    0x4270e4
  4270cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4270ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4270d1:	sub    ecx,eax
  4270d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4270d6:	inc    DWORD PTR [ebp+0xc]
  4270d9:	mov    BYTE PTR [eax],dl
  4270db:	mov    edx,DWORD PTR [ebp+0xc]
  4270de:	inc    eax
  4270df:	cmp    edx,DWORD PTR [ebx+0x50]
  4270e2:	jb     0x4270d3
  4270e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4270e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4270ea:	add    ecx,edx
  4270ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4270f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4270f5:	add    eax,edx
  4270f7:	sub    edx,DWORD PTR [ebp-0x10]
  4270fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4270fd:	mov    DWORD PTR [ebp+0xc],edx
  427100:	mov    DWORD PTR [ebp-0x2c],ecx
  427103:	mov    DWORD PTR [ebp-0x14],ebx
  427106:	mov    DWORD PTR [ebp-0x8],0x0
  42710d:	jmp    0x427189
  42710f:	add    edx,0xfffffff8
  427112:	shr    edx,1
  427114:	mov    DWORD PTR [ebp-0x18],edx
  427117:	je     0x427175
  427119:	lea    edx,[eax+0x8]
  42711c:	mov    DWORD PTR [ebp-0x4],edx
  42711f:	mov    edx,DWORD PTR [ebp-0x18]
  427122:	mov    DWORD PTR [ebp-0x18],edx
  427125:	mov    edx,DWORD PTR [ebp-0x4]
  427128:	movzx  edx,WORD PTR [edx]
  42712b:	mov    DWORD PTR [ebp-0x24],edx
  42712e:	and    edx,0xfff
  427134:	mov    DWORD PTR [ebp-0x28],edx
  427137:	mov    edx,DWORD PTR [ebp-0x24]
  42713a:	shr    edx,0xc
  42713d:	add    edx,0xffcd8d0b
  427143:	xor    edx,esi
  427145:	cmp    edx,0xf89c85a0
  42714b:	jne    0x42716c
  42714d:	mov    edx,DWORD PTR [ebp-0x28]
  427150:	add    edx,DWORD PTR [ebp+0x1c]
  427153:	mov    ebx,DWORD PTR [eax]
  427155:	cmp    DWORD PTR [ebx+edx*1],0x0
  427159:	je     0x427169
  42715b:	mov    ecx,DWORD PTR [ebp+0xc]
  42715e:	add    ecx,DWORD PTR [ebx+edx*1]
  427161:	mov    ebx,DWORD PTR [eax]
  427163:	mov    DWORD PTR [edx+ebx*1],ecx
  427166:	mov    ecx,DWORD PTR [ebp-0x2c]
  427169:	mov    ebx,DWORD PTR [ebp-0x14]
  42716c:	add    DWORD PTR [ebp-0x4],0x2
  427170:	dec    DWORD PTR [ebp-0x18]
  427173:	jne    0x427125
  427175:	mov    edx,DWORD PTR [ebp-0xc]
  427178:	add    DWORD PTR [ebp-0x8],edx
  42717b:	mov    edx,DWORD PTR [ebp-0x8]
  42717e:	cmp    edx,DWORD PTR [ecx+0xa4]
  427184:	jae    0x427197
  427186:	add    eax,DWORD PTR [ebp-0xc]
  427189:	mov    edx,DWORD PTR [eax+0x4]
  42718c:	mov    DWORD PTR [ebp-0xc],edx
  42718f:	test   edx,edx
  427191:	jne    0x42710f
  427197:	mov    eax,DWORD PTR [ebp-0x10]
  42719a:	mov    DWORD PTR [ebp-0x6c],eax
  42719d:	mov    DWORD PTR [ebp-0x70],0x4
  4271a4:	mov    eax,DWORD PTR [ecx+0x50]
  4271a7:	mov    DWORD PTR [ebp-0x68],eax
  4271aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271ad:	xor    eax,esi
  4271af:	add    eax,edi
  4271b1:	mov    DWORD PTR [ebp-0x64],eax
  4271b4:	lea    eax,[ebp-0x20]
  4271b7:	mov    DWORD PTR [ebp-0x60],eax
  4271ba:	lea    eax,[ebp-0x70]
  4271bd:	push   eax
  4271be:	mov    eax,DWORD PTR [ebp+0x8]
  4271c1:	xor    eax,esi
  4271c3:	add    eax,edi
  4271c5:	push   eax
  4271c6:	mov    eax,DWORD PTR [ebp+0x20]
  4271c9:	add    eax,0xee
  4271ce:	push   eax
  4271cf:	mov    eax,DWORD PTR [ebp+0x20]
  4271d2:	mov    eax,DWORD PTR [eax+0x198]
  4271d8:	push   DWORD PTR [eax]
  4271da:	mov    eax,DWORD PTR [ebp+0x10]
  4271dd:	call   eax
  4271df:	mov    eax,DWORD PTR [ebp+0x20]
  4271e2:	mov    eax,DWORD PTR [eax+0x180]
  4271e8:	add    eax,DWORD PTR [ebp+0xc]
  4271eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271ee:	push   DWORD PTR [ebp+0x18]
  4271f1:	mov    DWORD PTR [eax],ecx
  4271f3:	push   DWORD PTR [ebp+0x14]
  4271f6:	push   DWORD PTR [ebp+0x1c]
  4271f9:	call   ebx
  4271fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271fe:	add    ecx,DWORD PTR [ebp+0x20]
  427201:	lea    eax,[ebp+0x4]
  427204:	mov    DWORD PTR [ebp+0x20],ecx
  427207:	mov    ecx,DWORD PTR [ebp+0x20]
  42720a:	mov    ecx,DWORD PTR [ebp+0x20]
  42720d:	mov    edx,DWORD PTR [ecx+0x190]
  427213:	mov    ecx,DWORD PTR [ebp+0x20]
  427216:	mov    ecx,DWORD PTR [ecx+0x18c]
  42721c:	mov    esi,DWORD PTR [ecx]
  42721e:	cmp    DWORD PTR [eax],esi
  427220:	jb     0x427241
  427222:	mov    esi,DWORD PTR [edx]
  427224:	mov    edi,DWORD PTR [edx]
  427226:	mov    esi,DWORD PTR [esi+0x3c]
  427229:	lea    esi,[edi+esi*1+0x50]
  42722d:	mov    edi,DWORD PTR [ecx]
  42722f:	add    edi,DWORD PTR [esi]
  427231:	cmp    DWORD PTR [eax],edi
  427233:	jae    0x427241
  427235:	mov    esi,DWORD PTR [ecx]
  427237:	mov    ecx,DWORD PTR [eax]
  427239:	mov    edx,DWORD PTR [edx]
  42723b:	sub    ecx,esi
  42723d:	add    edx,ecx
  42723f:	mov    DWORD PTR [eax],edx
  427241:	mov    eax,DWORD PTR [ebp+0xc]
  427244:	jmp    0x427248
  427246:	xor    eax,eax
  427248:	pop    edi
  427249:	pop    esi
  42724a:	pop    ebx
  42724b:	leave  
  42724c:	ret    0x1c
  42724f:	push   ebp
  427250:	mov    ebp,esp
  427252:	sub    esp,0x1c
  427255:	push   esi
  427256:	mov    esi,eax
  427258:	mov    eax,DWORD PTR [ecx+0x190]
  42725e:	cmp    DWORD PTR [eax],0x0
  427261:	je     0x427371
  427267:	test   edx,edx
  427269:	je     0x427371
  42726f:	test   esi,esi
  427271:	je     0x427371
  427277:	mov    eax,DWORD PTR [esi+0x88]
  42727d:	test   eax,eax
  42727f:	je     0x42736c
  427285:	cmp    DWORD PTR [esi+0x8c],0x10
  42728c:	je     0x42736c
  427292:	cmp    DWORD PTR [esi+0x34],edx
  427295:	je     0x42736c
  42729b:	mov    esi,DWORD PTR [ecx+0x18c]
  4272a1:	and    DWORD PTR [ebp-0x10],0x0
  4272a5:	mov    ecx,edx
  4272a7:	sub    ecx,DWORD PTR [esi]
  4272a9:	add    eax,edx
  4272ab:	movzx  edx,WORD PTR [eax+0xc]
  4272af:	mov    DWORD PTR [ebp-0x1c],ecx
  4272b2:	movzx  ecx,WORD PTR [eax+0xe]
  4272b6:	add    ecx,edx
  4272b8:	je     0x42736c
  4272be:	lea    ecx,[eax+0x14]
  4272c1:	push   ebx
  4272c2:	mov    DWORD PTR [ebp-0x18],ecx
  4272c5:	mov    esi,0x7fffffff
  4272ca:	push   edi
  4272cb:	test   DWORD PTR [ecx],esi
  4272cd:	je     0x42734e
  4272cf:	mov    edx,DWORD PTR [ecx]
  4272d1:	and    DWORD PTR [ebp-0xc],0x0
  4272d5:	and    edx,esi
  4272d7:	add    edx,eax
  4272d9:	movzx  edi,WORD PTR [edx+0xe]
  4272dd:	movzx  ebx,WORD PTR [edx+0xc]
  4272e1:	add    edi,ebx
  4272e3:	je     0x42734e
  4272e5:	lea    ecx,[edx+0x14]
  4272e8:	mov    DWORD PTR [ebp-0x14],ecx
  4272eb:	test   DWORD PTR [ecx],esi
  4272ed:	je     0x427330
  4272ef:	mov    ecx,DWORD PTR [ecx]
  4272f1:	and    DWORD PTR [ebp-0x8],0x0
  4272f5:	and    ecx,esi
  4272f7:	add    ecx,eax
  4272f9:	movzx  edi,WORD PTR [ecx+0xe]
  4272fd:	movzx  ebx,WORD PTR [ecx+0xc]
  427301:	add    edi,ebx
  427303:	je     0x427330
  427305:	lea    edi,[ecx+0x14]
  427308:	mov    DWORD PTR [ebp-0x4],edi
  42730b:	mov    edi,DWORD PTR [ebp-0x4]
  42730e:	mov    edi,DWORD PTR [edi]
  427310:	test   edi,edi
  427312:	je     0x42731a
  427314:	mov    ebx,DWORD PTR [ebp-0x1c]
  427317:	add    DWORD PTR [edi+eax*1],ebx
  42731a:	movzx  edi,WORD PTR [ecx+0xe]
  42731e:	movzx  ebx,WORD PTR [ecx+0xc]
  427322:	inc    DWORD PTR [ebp-0x8]
  427325:	add    DWORD PTR [ebp-0x4],0x8
  427329:	add    edi,ebx
  42732b:	cmp    DWORD PTR [ebp-0x8],edi
  42732e:	jb     0x42730b
  427330:	movzx  edi,WORD PTR [edx+0xe]
  427334:	movzx  ebx,WORD PTR [edx+0xc]
  427338:	mov    ecx,DWORD PTR [ebp-0x14]
  42733b:	inc    DWORD PTR [ebp-0xc]
  42733e:	add    ecx,0x8
  427341:	add    edi,ebx
  427343:	mov    DWORD PTR [ebp-0x14],ecx
  427346:	cmp    DWORD PTR [ebp-0xc],edi
  427349:	jb     0x4272eb
  42734b:	mov    ecx,DWORD PTR [ebp-0x18]
  42734e:	movzx  edx,WORD PTR [eax+0xe]
  427352:	movzx  edi,WORD PTR [eax+0xc]
  427356:	inc    DWORD PTR [ebp-0x10]
  427359:	add    ecx,0x8
  42735c:	add    edx,edi
  42735e:	mov    DWORD PTR [ebp-0x18],ecx
  427361:	cmp    DWORD PTR [ebp-0x10],edx
  427364:	jb     0x4272cb
  42736a:	pop    edi
  42736b:	pop    ebx
  42736c:	xor    eax,eax
  42736e:	inc    eax
  42736f:	jmp    0x427373
  427371:	xor    eax,eax
  427373:	pop    esi
  427374:	leave  
  427375:	ret    
  427376:	push   ebp
  427377:	mov    ebp,esp
  427379:	mov    ecx,DWORD PTR [ecx+0x190]
  42737f:	mov    eax,DWORD PTR [ebp+0xc]
  427382:	sub    esp,0x10
  427385:	push   ebx
  427386:	xor    ebx,ebx
  427388:	push   esi
  427389:	push   edi
  42738a:	cmp    DWORD PTR [ecx],ebx
  42738c:	je     0x427414
  427392:	cmp    eax,ebx
  427394:	je     0x427414
  427396:	cmp    DWORD PTR [eax+0x78],ebx
  427399:	jne    0x4273a0
  42739b:	xor    eax,eax
  42739d:	inc    eax
  42739e:	jmp    0x427416
  4273a0:	mov    eax,DWORD PTR [eax+0x78]
  4273a3:	add    eax,DWORD PTR [ebp+0x8]
  4273a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4273a9:	mov    edx,DWORD PTR [eax+0x24]
  4273ac:	mov    esi,DWORD PTR [eax+0x14]
  4273af:	mov    edi,DWORD PTR [eax+0x18]
  4273b2:	add    ecx,DWORD PTR [ebp+0x8]
  4273b5:	add    edx,DWORD PTR [ebp+0x8]
  4273b8:	mov    DWORD PTR [ebp-0x4],esi
  4273bb:	cmp    esi,edi
  4273bd:	ja     0x4273c2
  4273bf:	mov    DWORD PTR [ebp-0x4],edi
  4273c2:	mov    DWORD PTR [ebp-0x8],ebx
  4273c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4273c8:	jbe    0x42739b
  4273ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4273cd:	jae    0x4273d5
  4273cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4273d3:	jmp    0x4273d7
  4273d5:	mov    esi,ebx
  4273d7:	lea    esi,[ecx+esi*4]
  4273da:	mov    edi,DWORD PTR [esi]
  4273dc:	test   edi,edi
  4273de:	je     0x427409
  4273e0:	add    edi,DWORD PTR [ebp+0x8]
  4273e3:	mov    DWORD PTR [ebp-0x10],edi
  4273e6:	cmp    edi,eax
  4273e8:	jbe    0x4273fa
  4273ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4273ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4273f0:	add    ebx,eax
  4273f2:	cmp    edi,ebx
  4273f4:	jae    0x4273fa
  4273f6:	mov    esi,DWORD PTR [esi]
  4273f8:	jmp    0x427402
  4273fa:	sub    edi,DWORD PTR [ebp+0x8]
  4273fd:	mov    DWORD PTR [esi],edi
  4273ff:	mov    esi,DWORD PTR [ebp-0x10]
  427402:	test   esi,esi
  427404:	je     0x427414
  427406:	mov    ebx,DWORD PTR [ebp-0x8]
  427409:	inc    ebx
  42740a:	mov    DWORD PTR [ebp-0x8],ebx
  42740d:	cmp    ebx,DWORD PTR [ebp-0x4]
  427410:	jb     0x4273ca
  427412:	jmp    0x42739b
  427414:	xor    eax,eax
  427416:	pop    edi
  427417:	pop    esi
  427418:	pop    ebx
  427419:	leave  
  42741a:	ret    0x8
  42741d:	push   ebp
  42741e:	mov    ebp,esp
  427420:	sub    esp,0x2c
  427423:	mov    edx,0xf89c85a5
  427428:	mov    DWORD PTR [ebp-0x4],edx
  42742b:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  427432:	mov    eax,DWORD PTR [ebp-0x4]
  427435:	mov    ecx,DWORD PTR [ebp-0x4]
  427438:	mov    ecx,DWORD PTR [ebp-0x4]
  42743b:	mov    ecx,DWORD PTR [ebp-0x4]
  42743e:	mov    ecx,DWORD PTR [ebp-0x4]
  427441:	mov    ecx,DWORD PTR [ebp-0x4]
  427444:	push   ebx
  427445:	mov    ebx,DWORD PTR [ebp+0x10]
  427448:	push   esi
  427449:	mov    esi,0x75108ae
  42744e:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  427455:	mov    ecx,DWORD PTR [ebp-0x4]
  427458:	mov    ebx,DWORD PTR [ebx+0x190]
  42745e:	push   edi
  42745f:	mov    edi,0x3272f5
  427464:	xor    ecx,esi
  427466:	xor    eax,esi
  427468:	add    eax,edi
  42746a:	add    ecx,edi
  42746c:	mov    DWORD PTR [ebp-0x18],eax
  42746f:	cmp    ecx,DWORD PTR [ebx]
  427471:	je     0x4276f2
  427477:	mov    ebx,DWORD PTR [ebp-0x4]
  42747a:	mov    ecx,DWORD PTR [ebp+0xc]
  42747d:	xor    ebx,esi
  42747f:	add    ebx,edi
  427481:	cmp    ebx,ecx
  427483:	je     0x4276f2
  427489:	mov    ebx,DWORD PTR [ebp-0x4]
  42748c:	mov    ecx,DWORD PTR [ecx+0x80]
  427492:	xor    ebx,esi
  427494:	add    ebx,edi
  427496:	cmp    ecx,ebx
  427498:	je     0x4276ed
  42749e:	add    ecx,DWORD PTR [ebp+0x8]
  4274a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4274a4:	mov    ebx,edx
  4274a6:	xor    ebx,esi
  4274a8:	add    ebx,edi
  4274aa:	mov    DWORD PTR [ebp-0x10],ebx
  4274ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4274b0:	cmp    ebx,edx
  4274b2:	je     0x4274c6
  4274b4:	mov    edx,DWORD PTR [ebp-0x10]
  4274b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4274ba:	imul   edx,edx,0x14
  4274bd:	xor    ebx,esi
  4274bf:	add    ebx,edi
  4274c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4274c4:	jne    0x4274dd
  4274c6:	mov    edx,DWORD PTR [ebp-0x10]
  4274c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4274cc:	imul   edx,edx,0x14
  4274cf:	xor    ebx,esi
  4274d1:	add    ebx,edi
  4274d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4274d7:	je     0x4276df
  4274dd:	mov    eax,DWORD PTR [ebp-0x4]
  4274e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4274e3:	mov    eax,DWORD PTR [ebp-0x10]
  4274e6:	imul   eax,eax,0x14
  4274e9:	add    eax,ecx
  4274eb:	mov    ecx,DWORD PTR [eax+0x10]
  4274ee:	add    ecx,DWORD PTR [ebp+0x8]
  4274f1:	xor    ebx,esi
  4274f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4274f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4274f9:	mov    edx,DWORD PTR [ebp-0x4]
  4274fc:	xor    ecx,esi
  4274fe:	add    ecx,edi
  427500:	xor    edx,esi
  427502:	mov    DWORD PTR [ebp-0x24],ecx
  427505:	mov    ecx,DWORD PTR [eax]
  427507:	add    edx,edi
  427509:	add    ebx,edi
  42750b:	cmp    ecx,edx
  42750d:	je     0x427515
  42750f:	add    ecx,DWORD PTR [ebp+0x8]
  427512:	mov    DWORD PTR [ebp-0x24],ecx
  427515:	mov    ecx,DWORD PTR [ebp-0x4]
  427518:	xor    ecx,esi
  42751a:	add    ecx,DWORD PTR [eax+0xc]
  42751d:	mov    eax,DWORD PTR [ebp+0x8]
  427520:	lea    eax,[ecx+eax*1+0x3272f5]
  427527:	mov    DWORD PTR [ebp+0xc],eax
  42752a:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  427531:	mov    eax,DWORD PTR [ebp+0x10]
  427534:	push   DWORD PTR [ebp+0xc]
  427537:	mov    eax,DWORD PTR [eax+0x1e0]
  42753d:	call   DWORD PTR [eax]
  42753f:	mov    ecx,DWORD PTR [ebp-0x4]
  427542:	xor    ecx,esi
  427544:	add    ecx,edi
  427546:	mov    DWORD PTR [ebp-0xc],eax
  427549:	cmp    ecx,eax
  42754b:	jne    0x42755f
  42754d:	mov    eax,DWORD PTR [ebp+0x10]
  427550:	push   DWORD PTR [ebp+0xc]
  427553:	mov    eax,DWORD PTR [eax+0x1e0]
  427559:	call   DWORD PTR [eax+0xc]
  42755c:	mov    DWORD PTR [ebp-0xc],eax
  42755f:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  427566:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  42756d:	mov    eax,DWORD PTR [ebp-0x4]
  427570:	xor    eax,esi
  427572:	add    eax,edi
  427574:	cmp    eax,DWORD PTR [ebp-0xc]
  427577:	jne    0x42759c
  427579:	mov    eax,DWORD PTR [ebp-0x8]
  42757c:	mov    ecx,DWORD PTR [ebp-0x20]
  42757f:	xor    eax,esi
  427581:	xor    ecx,esi
  427583:	lea    ebx,[ebx+eax*1+0x3272f5]
  42758a:	mov    eax,DWORD PTR [ebp+0x10]
  42758d:	mov    eax,DWORD PTR [eax+0x1e0]
  427593:	add    ecx,edi
  427595:	imul   ecx,ebx
  427598:	push   ecx
  427599:	call   DWORD PTR [eax+0x24]
  42759c:	mov    eax,DWORD PTR [ebp-0x4]
  42759f:	xor    eax,esi
  4275a1:	add    eax,edi
  4275a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4275a6:	jne    0x4275b7
  4275a8:	mov    eax,DWORD PTR [ebp-0x28]
  4275ab:	xor    eax,esi
  4275ad:	add    eax,edi
  4275af:	cmp    ebx,eax
  4275b1:	jbe    0x427531
  4275b7:	mov    eax,DWORD PTR [ebp-0x4]
  4275ba:	xor    eax,esi
  4275bc:	add    eax,edi
  4275be:	cmp    eax,DWORD PTR [ebp-0xc]
  4275c1:	jne    0x4275da
  4275c3:	mov    eax,DWORD PTR [ebp-0x8]
  4275c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4275c9:	xor    eax,esi
  4275cb:	lea    eax,[ecx+eax*1+0x3272f5]
  4275d2:	mov    DWORD PTR [ebp-0x18],eax
  4275d5:	jmp    0x4276c9
  4275da:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  4275e1:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4275e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4275eb:	xor    ebx,esi
  4275ed:	add    ebx,edi
  4275ef:	jmp    0x4276b6
  4275f4:	mov    eax,DWORD PTR [ebp-0x4]
  4275f7:	xor    eax,esi
  4275f9:	add    eax,edi
  4275fb:	mov    DWORD PTR [ebp-0x14],eax
  4275fe:	mov    eax,DWORD PTR [ebp-0x4]
  427601:	xor    eax,esi
  427603:	add    eax,edi
  427605:	mov    DWORD PTR [ebp+0xc],eax
  427608:	mov    ecx,DWORD PTR [ebp-0x4]
  42760b:	mov    eax,DWORD PTR [ebp-0x24]
  42760e:	xor    ecx,esi
  427610:	add    ecx,edi
  427612:	cmp    ecx,eax
  427614:	je     0x42761c
  427616:	mov    eax,DWORD PTR [eax+ebx*4]
  427619:	mov    DWORD PTR [ebp-0x14],eax
  42761c:	mov    eax,DWORD PTR [ebp-0x1c]
  42761f:	mov    eax,DWORD PTR [eax+ebx*4]
  427622:	mov    DWORD PTR [ebp+0xc],eax
  427625:	mov    eax,DWORD PTR [ebp-0x4]
  427628:	mov    ecx,DWORD PTR [ebp-0x14]
  42762b:	xor    eax,esi
  42762d:	add    eax,edi
  42762f:	cmp    eax,ecx
  427631:	je     0x42765c
  427633:	mov    eax,DWORD PTR [ebp-0x4]
  427636:	mov    ecx,DWORD PTR [ebp-0x14]
  427639:	xor    eax,esi
  42763b:	add    eax,edi
  42763d:	shr    ecx,0x1f
  427640:	cmp    eax,ecx
  427642:	je     0x42765c
  427644:	mov    ecx,DWORD PTR [ebp-0x14]
  427647:	mov    eax,DWORD PTR [ebp+0x10]
  42764a:	mov    eax,DWORD PTR [eax+0x1e0]
  427650:	movzx  ecx,cx
  427653:	push   ecx
  427654:	push   DWORD PTR [ebp-0xc]
  427657:	call   DWORD PTR [eax+0x8]
  42765a:	jmp    0x427675
  42765c:	mov    eax,DWORD PTR [ebp+0xc]
  42765f:	add    eax,DWORD PTR [ebp+0x8]
  427662:	mov    ecx,DWORD PTR [ebp+0x10]
  427665:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42766b:	add    eax,0x2
  42766e:	push   eax
  42766f:	push   DWORD PTR [ebp-0xc]
  427672:	call   DWORD PTR [ecx+0x8]
  427675:	mov    DWORD PTR [ebp+0xc],eax
  427678:	mov    eax,DWORD PTR [ebp-0x4]
  42767b:	mov    ecx,DWORD PTR [ebp+0xc]
  42767e:	xor    eax,esi
  427680:	add    eax,edi
  427682:	cmp    eax,ecx
  427684:	mov    eax,DWORD PTR [ebp-0x8]
  427687:	jne    0x42769a
  427689:	mov    ecx,DWORD PTR [ebp-0x18]
  42768c:	xor    eax,esi
  42768e:	lea    eax,[ecx+eax*1+0x3272f5]
  427695:	mov    DWORD PTR [ebp-0x18],eax
  427698:	jmp    0x4276aa
  42769a:	mov    ecx,DWORD PTR [ebp+0xc]
  42769d:	xor    eax,esi
  42769f:	add    eax,edi
  4276a1:	imul   eax,ecx
  4276a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4276a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4276aa:	mov    eax,DWORD PTR [ebp-0x8]
  4276ad:	xor    eax,esi
  4276af:	lea    ebx,[ebx+eax*1+0x3272f5]
  4276b6:	mov    eax,DWORD PTR [ebp-0x4]
  4276b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4276bc:	xor    eax,esi
  4276be:	add    eax,edi
  4276c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4276c3:	jne    0x4275f4
  4276c9:	mov    edx,DWORD PTR [ebp-0x10]
  4276cc:	mov    eax,DWORD PTR [ebp-0x18]
  4276cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4276d2:	sub    edx,0x3272f4
  4276d8:	xor    edx,esi
  4276da:	jmp    0x4274a4
  4276df:	mov    ecx,DWORD PTR [ebp-0x4]
  4276e2:	xor    ecx,esi
  4276e4:	add    ecx,edi
  4276e6:	cmp    eax,ecx
  4276e8:	mov    eax,DWORD PTR [ebp-0x4]
  4276eb:	jne    0x4276f5
  4276ed:	mov    eax,DWORD PTR [ebp-0x8]
  4276f0:	jmp    0x4276f5
  4276f2:	mov    eax,DWORD PTR [ebp-0x4]
  4276f5:	xor    eax,esi
  4276f7:	add    eax,edi
  4276f9:	pop    edi
  4276fa:	pop    esi
  4276fb:	pop    ebx
  4276fc:	leave  
  4276fd:	ret    0xc
  427700:	push   ebp
  427701:	mov    ebp,esp
  427703:	sub    esp,0x28
  427706:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42770d:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  427714:	mov    eax,DWORD PTR [ebp+0xc]
  427717:	mov    DWORD PTR [ebp+0xc],eax
  42771a:	push   esi
  42771b:	mov    eax,eax
  42771d:	mov    eax,DWORD PTR [ebp-0x4]
  427720:	mov    esi,DWORD PTR [ebp+0x8]
  427723:	mov    ecx,0x75108ae
  427728:	xor    eax,ecx
  42772a:	mov    edx,0x3272f5
  42772f:	add    eax,edx
  427731:	cmp    esi,eax
  427733:	je     0x42785a
  427739:	mov    eax,DWORD PTR [ebp+0x8]
  42773c:	mov    esi,DWORD PTR [ebp+0x8]
  42773f:	add    esi,DWORD PTR [eax+0x3c]
  427742:	push   edi
  427743:	mov    DWORD PTR [ebp+0xc],esi
  427746:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42774d:	mov    eax,DWORD PTR [ebp-0x1c]
  427750:	mov    esi,DWORD PTR [ebp-0x4]
  427753:	mov    edi,DWORD PTR [ebp+0xc]
  427756:	xor    esi,ecx
  427758:	xor    eax,ecx
  42775a:	add    esi,edx
  42775c:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  427763:	je     0x427854
  427769:	mov    esi,DWORD PTR [ebp+0xc]
  42776c:	mov    eax,DWORD PTR [ebp+0x8]
  42776f:	add    eax,DWORD PTR [esi+0xa0]
  427775:	mov    esi,DWORD PTR [ebp+0x8]
  427778:	mov    edi,DWORD PTR [ebp+0xc]
  42777b:	sub    esi,DWORD PTR [edi+0x34]
  42777e:	mov    edi,DWORD PTR [ebp-0x4]
  427781:	xor    edi,ecx
  427783:	add    edi,edx
  427785:	mov    DWORD PTR [ebp-0x24],esi
  427788:	cmp    esi,edi
  42778a:	je     0x427854
  427790:	mov    esi,DWORD PTR [ebp-0x4]
  427793:	xor    esi,ecx
  427795:	add    esi,edx
  427797:	mov    DWORD PTR [ebp-0x8],esi
  42779a:	push   ebx
  42779b:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  4277a2:	jmp    0x42783e
  4277a7:	mov    esi,DWORD PTR [ebp-0x4]
  4277aa:	xor    esi,ecx
  4277ac:	lea    edi,[ebx-0x8]
  4277af:	add    esi,edx
  4277b1:	shr    edi,1
  4277b3:	cmp    esi,edi
  4277b5:	jae    0x427824
  4277b7:	sub    edi,esi
  4277b9:	lea    ebx,[eax+esi*2+0x8]
  4277bd:	mov    DWORD PTR [ebp-0x18],edi
  4277c0:	movzx  esi,WORD PTR [ebx]
  4277c3:	and    esi,0xfff
  4277c9:	mov    DWORD PTR [ebp-0x14],esi
  4277cc:	mov    edi,DWORD PTR [ebp-0x14]
  4277cf:	mov    esi,DWORD PTR [eax]
  4277d1:	sub    esi,edx
  4277d3:	add    edi,esi
  4277d5:	movzx  esi,WORD PTR [ebx]
  4277d8:	shr    esi,0xc
  4277db:	xor    edi,ecx
  4277dd:	mov    DWORD PTR [ebp-0x20],edi
  4277e0:	mov    DWORD PTR [ebp-0x14],esi
  4277e3:	mov    esi,DWORD PTR [ebp-0x20]
  4277e6:	mov    edi,DWORD PTR [ebp+0x8]
  4277e9:	xor    esi,ecx
  4277eb:	lea    esi,[esi+edi*1+0x3272f5]
  4277f2:	mov    DWORD PTR [ebp-0x20],esi
  4277f5:	mov    esi,DWORD PTR [ebp-0x10]
  4277f8:	mov    edi,DWORD PTR [ebp-0x14]
  4277fb:	xor    esi,ecx
  4277fd:	add    esi,edx
  4277ff:	cmp    edi,esi
  427801:	jne    0x427819
  427803:	mov    esi,DWORD PTR [ebp-0x10]
  427806:	mov    edi,DWORD PTR [ebp-0x14]
  427809:	xor    esi,ecx
  42780b:	add    esi,edx
  42780d:	cmp    edi,esi
  42780f:	jne    0x427819
  427811:	mov    esi,DWORD PTR [ebp-0x20]
  427814:	mov    edi,DWORD PTR [ebp-0x24]
  427817:	add    DWORD PTR [esi],edi
  427819:	add    ebx,0x2
  42781c:	dec    DWORD PTR [ebp-0x18]
  42781f:	jne    0x4277c0
  427821:	mov    ebx,DWORD PTR [ebp-0xc]
  427824:	add    DWORD PTR [ebp-0x8],ebx
  427827:	mov    esi,DWORD PTR [ebp-0x1c]
  42782a:	mov    edi,DWORD PTR [ebp-0x8]
  42782d:	mov    ebx,DWORD PTR [ebp+0xc]
  427830:	xor    esi,ecx
  427832:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  427839:	jae    0x427853
  42783b:	add    eax,DWORD PTR [ebp-0xc]
  42783e:	mov    esi,DWORD PTR [ebp-0x4]
  427841:	mov    ebx,DWORD PTR [eax+0x4]
  427844:	xor    esi,ecx
  427846:	add    esi,edx
  427848:	mov    DWORD PTR [ebp-0xc],ebx
  42784b:	cmp    ebx,esi
  42784d:	jne    0x4277a7
  427853:	pop    ebx
  427854:	mov    eax,DWORD PTR [ebp-0x28]
  427857:	pop    edi
  427858:	jmp    0x42785d
  42785a:	mov    eax,DWORD PTR [ebp-0x4]
  42785d:	xor    eax,ecx
  42785f:	add    eax,edx
  427861:	pop    esi
  427862:	leave  
  427863:	ret    0x8
  427866:	push   ebp
  427867:	mov    ebp,esp
  427869:	sub    esp,0xd8
  42786f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427876:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  42787d:	mov    eax,DWORD PTR [ebp-0x4]
  427880:	push   ebx
  427881:	push   esi
  427882:	mov    esi,0x75108ae
  427887:	xor    eax,esi
  427889:	push   edi
  42788a:	mov    edi,0x3272f5
  42788f:	add    eax,edi
  427891:	mov    DWORD PTR [ebp-0x18],eax
  427894:	mov    eax,DWORD PTR [ebp-0x4]
  427897:	xor    eax,esi
  427899:	add    eax,edi
  42789b:	mov    DWORD PTR [ebp-0x8],eax
  42789e:	mov    ebx,DWORD PTR [ebp+0x20]
  4278a1:	mov    eax,DWORD PTR [ebp-0x1c]
  4278a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4278a7:	xor    eax,ecx
  4278a9:	mov    DWORD PTR [ebp-0x1c],eax
  4278ac:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4278b3:	mov    eax,DWORD PTR [ebp-0xc]
  4278b6:	mov    ecx,DWORD PTR [ebp-0xc]
  4278b9:	xor    eax,ecx
  4278bb:	mov    DWORD PTR [ebp-0xc],eax
  4278be:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  4278c5:	mov    eax,DWORD PTR [ebp-0x10]
  4278c8:	mov    ecx,DWORD PTR [ebp-0x10]
  4278cb:	xor    eax,ecx
  4278cd:	mov    DWORD PTR [ebp-0x10],eax
  4278d0:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  4278d7:	mov    eax,DWORD PTR [ebp-0x28]
  4278da:	mov    ecx,DWORD PTR [ebp-0x28]
  4278dd:	xor    eax,ecx
  4278df:	mov    DWORD PTR [ebp-0x28],eax
  4278e2:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4278e9:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4278f0:	mov    eax,DWORD PTR [ebp+0x8]
  4278f3:	test   eax,eax
  4278f5:	je     0x427d7c
  4278fb:	mov    eax,DWORD PTR [ebp+0xc]
  4278fe:	test   eax,eax
  427900:	je     0x427d7c
  427906:	mov    eax,DWORD PTR [ebp+0x18]
  427909:	test   eax,eax
  42790b:	je     0x427d7c
  427911:	mov    eax,DWORD PTR [ebp+0x20]
  427914:	mov    ecx,DWORD PTR [ebp+0x8]
  427917:	xor    eax,0x8ae
  42791c:	add    eax,0x72f5
  427921:	cmp    WORD PTR [ecx],ax
  427924:	jne    0x427d7c
  42792a:	mov    eax,DWORD PTR [ebp-0x4]
  42792d:	xor    eax,esi
  42792f:	add    eax,edi
  427931:	mov    DWORD PTR [ebp-0x30],eax
  427934:	mov    eax,DWORD PTR [ebp-0x4]
  427937:	mov    ecx,DWORD PTR [ebp+0x8]
  42793a:	mov    eax,DWORD PTR [ebp+0x8]
  42793d:	add    eax,DWORD PTR [ecx+0x3c]
  427940:	mov    DWORD PTR [ebp+0xc],eax
  427943:	mov    eax,DWORD PTR [eax+0x50]
  427946:	test   eax,eax
  427948:	je     0x427d7c
  42794e:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427955:	mov    eax,DWORD PTR [ebp-0x2c]
  427958:	xor    eax,esi
  42795a:	add    eax,edi
  42795c:	mov    DWORD PTR [ebp-0x2c],eax
  42795f:	mov    eax,DWORD PTR [ebp-0x4]
  427962:	mov    eax,DWORD PTR [ebx+0x190]
  427968:	mov    ecx,DWORD PTR [eax]
  42796a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42796d:	add    ecx,DWORD PTR [eax]
  42796f:	mov    eax,DWORD PTR [ebp-0x4]
  427972:	mov    eax,DWORD PTR [ebx+0x18c]
  427978:	mov    edx,DWORD PTR [eax]
  42797a:	mov    DWORD PTR [ebp-0x20],ecx
  42797d:	mov    DWORD PTR [ebp+0x20],edx
  427980:	cmp    edx,edx
  427982:	jne    0x4279b6
  427984:	mov    eax,DWORD PTR [ebx+0x1e0]
  42798a:	lea    edx,[ebp-0x18]
  42798d:	push   edx
  42798e:	mov    edx,DWORD PTR [ebp-0xc]
  427991:	xor    edx,esi
  427993:	add    edx,edi
  427995:	push   edx
  427996:	push   DWORD PTR [ecx+0x50]
  427999:	push   DWORD PTR [ebp+0x20]
  42799c:	call   DWORD PTR [eax+0x1c]
  42799f:	mov    eax,DWORD PTR [ebp-0x20]
  4279a2:	mov    ecx,DWORD PTR [eax+0x54]
  4279a5:	mov    eax,DWORD PTR [eax+0x50]
  4279a8:	sub    eax,ecx
  4279aa:	add    ecx,DWORD PTR [ebp+0x20]
  4279ad:	push   ecx
  4279ae:	call   0x428319
  4279b3:	mov    edx,DWORD PTR [ebp+0x20]
  4279b6:	mov    eax,DWORD PTR [ebx+0x194]
  4279bc:	mov    DWORD PTR [eax],edx
  4279be:	mov    eax,DWORD PTR [ebp+0xc]
  4279c1:	push   DWORD PTR [eax+0x54]
  4279c4:	push   DWORD PTR [ebp+0x8]
  4279c7:	push   edx
  4279c8:	call   0x42820f
  4279cd:	mov    ecx,DWORD PTR [ebp+0x20]
  4279d0:	mov    eax,DWORD PTR [ecx+0x3c]
  4279d3:	add    eax,ecx
  4279d5:	movzx  ecx,WORD PTR [eax+0x14]
  4279d9:	lea    ecx,[ecx+eax*1+0x18]
  4279dd:	mov    DWORD PTR [ebp+0x18],ecx
  4279e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4279e3:	movzx  edx,WORD PTR [eax+0x6]
  4279e7:	xor    ecx,esi
  4279e9:	add    ecx,edi
  4279eb:	mov    DWORD PTR [ebp+0xc],eax
  4279ee:	cmp    edx,ecx
  4279f0:	je     0x427a9d
  4279f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4279f9:	xor    ecx,esi
  4279fb:	add    ecx,edi
  4279fd:	mov    DWORD PTR [ebp-0x8],ecx
  427a00:	mov    ecx,DWORD PTR [ebp-0x24]
  427a03:	movzx  edx,WORD PTR [eax+0x6]
  427a07:	xor    ecx,esi
  427a09:	sub    edx,ecx
  427a0b:	sub    edx,edi
  427a0d:	cmp    DWORD PTR [ebp-0x8],edx
  427a10:	ja     0x427a9d
  427a16:	mov    edx,DWORD PTR [ebp+0x18]
  427a19:	add    edx,0x8
  427a1c:	mov    DWORD PTR [ebp+0x18],edx
  427a1f:	jmp    0x427a24
  427a21:	mov    edx,DWORD PTR [ebp+0x18]
  427a24:	mov    eax,DWORD PTR [eax+0x38]
  427a27:	lea    ecx,[eax-0x1]
  427a2a:	mov    DWORD PTR [ebp-0x38],eax
  427a2d:	mov    eax,DWORD PTR [edx]
  427a2f:	test   eax,ecx
  427a31:	je     0x427a3a
  427a33:	not    ecx
  427a35:	and    eax,ecx
  427a37:	add    eax,DWORD PTR [ebp-0x38]
  427a3a:	mov    ecx,DWORD PTR [edx+0x4]
  427a3d:	add    ecx,DWORD PTR [ebp+0x20]
  427a40:	push   ecx
  427a41:	call   0x428319
  427a46:	mov    edx,DWORD PTR [ebp-0x4]
  427a49:	mov    eax,DWORD PTR [ebp+0x18]
  427a4c:	mov    ecx,DWORD PTR [eax+0x8]
  427a4f:	xor    edx,esi
  427a51:	add    edx,edi
  427a53:	cmp    ecx,edx
  427a55:	je     0x427a6e
  427a57:	push   ecx
  427a58:	mov    ecx,DWORD PTR [ebp+0x8]
  427a5b:	add    ecx,DWORD PTR [eax+0xc]
  427a5e:	mov    eax,DWORD PTR [eax+0x4]
  427a61:	add    eax,DWORD PTR [ebp+0x20]
  427a64:	push   ecx
  427a65:	push   eax
  427a66:	call   0x42820f
  427a6b:	mov    eax,DWORD PTR [ebp+0x18]
  427a6e:	mov    ecx,DWORD PTR [ebp-0x24]
  427a71:	mov    edx,DWORD PTR [ebp-0x8]
  427a74:	add    eax,0x28
  427a77:	xor    ecx,esi
  427a79:	lea    ecx,[edx+ecx*1+0x3272f5]
  427a80:	mov    edx,DWORD PTR [ebp+0xc]
  427a83:	mov    DWORD PTR [ebp+0x18],eax
  427a86:	mov    eax,DWORD PTR [ebp-0x24]
  427a89:	movzx  edx,WORD PTR [edx+0x6]
  427a8d:	xor    eax,esi
  427a8f:	sub    edx,eax
  427a91:	mov    eax,DWORD PTR [ebp+0xc]
  427a94:	sub    edx,edi
  427a96:	mov    DWORD PTR [ebp-0x8],ecx
  427a99:	cmp    ecx,edx
  427a9b:	jbe    0x427a21
  427a9d:	mov    edx,DWORD PTR [ebx+0x18c]
  427aa3:	mov    ecx,DWORD PTR [ebp+0x20]
  427aa6:	cmp    ecx,DWORD PTR [edx]
  427aa8:	jne    0x427ad1
  427aaa:	mov    eax,DWORD PTR [ebx+0x1e0]
  427ab0:	lea    edx,[ebp-0x18]
  427ab3:	push   edx
  427ab4:	mov    edx,DWORD PTR [ebp-0x10]
  427ab7:	xor    edx,esi
  427ab9:	add    edx,edi
  427abb:	push   edx
  427abc:	mov    edx,DWORD PTR [ebp-0x20]
  427abf:	push   DWORD PTR [edx+0x54]
  427ac2:	push   ecx
  427ac3:	call   DWORD PTR [eax+0x1c]
  427ac6:	test   eax,eax
  427ac8:	je     0x427d6d
  427ace:	mov    eax,DWORD PTR [ebp+0xc]
  427ad1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427ad7:	mov    ecx,DWORD PTR [ecx]
  427ad9:	xor    ecx,esi
  427adb:	add    ecx,edi
  427add:	je     0x427c98
  427ae3:	mov    eax,DWORD PTR [ebp-0x4]
  427ae6:	xor    eax,esi
  427ae8:	add    eax,edi
  427aea:	and    DWORD PTR [ebp+0x8],0x0
  427aee:	mov    DWORD PTR [ebp-0x14],eax
  427af1:	mov    eax,0xf89c85c1
  427af6:	lea    ecx,[eax+0x18]
  427af9:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427b00:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427b07:	mov    DWORD PTR [ebp-0x50],eax
  427b0a:	mov    DWORD PTR [ebp-0x4c],ecx
  427b0d:	mov    DWORD PTR [ebp-0x48],ecx
  427b10:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427b17:	mov    edx,DWORD PTR [ebp+0x8]
  427b1a:	mov    ecx,0x8ae
  427b1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427b24:	mov    edx,0x72f5
  427b29:	add    cx,dx
  427b2c:	mov    edx,DWORD PTR [ebp+0x8]
  427b2f:	inc    DWORD PTR [ebp+0x8]
  427b32:	cmp    DWORD PTR [ebp+0x8],0x6
  427b36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427b3e:	jb     0x427b17
  427b40:	mov    ecx,0xf89c85d3
  427b45:	mov    DWORD PTR [ebp-0xb0],eax
  427b4b:	mov    DWORD PTR [ebp-0x9c],eax
  427b51:	mov    DWORD PTR [ebp-0x74],eax
  427b54:	mov    DWORD PTR [ebp-0x70],eax
  427b57:	lea    eax,[ecx-0x3]
  427b5a:	lea    edx,[ecx+0x2c]
  427b5d:	mov    DWORD PTR [ebp-0x64],eax
  427b60:	mov    DWORD PTR [ebp-0x60],eax
  427b63:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427b6d:	mov    DWORD PTR [ebp-0xac],ecx
  427b73:	mov    DWORD PTR [ebp-0xa8],edx
  427b79:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427b83:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427b8d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427b97:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427ba1:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427bab:	mov    DWORD PTR [ebp-0x8c],ecx
  427bb1:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427bbb:	mov    DWORD PTR [ebp-0x84],edx
  427bc1:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427bc8:	mov    DWORD PTR [ebp-0x7c],ecx
  427bcb:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427bd2:	mov    DWORD PTR [ebp-0x6c],ecx
  427bd5:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427bdc:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427be3:	xor    eax,eax
  427be5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427bec:	xor    cl,0xae
  427bef:	sub    cl,0xb
  427bf2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427bf9:	inc    eax
  427bfa:	cmp    eax,0x17
  427bfd:	jb     0x427be5
  427bff:	mov    eax,DWORD PTR [ebx+0x1e0]
  427c05:	lea    ecx,[ebp-0xc0]
  427c0b:	push   ecx
  427c0c:	call   DWORD PTR [eax+0x4]
  427c0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427c15:	lea    edx,[ebp-0xd8]
  427c1b:	push   edx
  427c1c:	push   eax
  427c1d:	call   DWORD PTR [ecx+0x8]
  427c20:	mov    DWORD PTR [ebp-0x40],eax
  427c23:	lea    eax,[ebp-0x14]
  427c26:	push   eax
  427c27:	mov    eax,DWORD PTR [ebx+0x18c]
  427c2d:	push   DWORD PTR [eax]
  427c2f:	mov    eax,DWORD PTR [ebp-0x40]
  427c32:	call   eax
  427c34:	mov    eax,DWORD PTR [ebp-0x4]
  427c37:	xor    eax,esi
  427c39:	add    eax,edi
  427c3b:	mov    DWORD PTR [ebp-0x34],eax
  427c3e:	mov    ecx,DWORD PTR [ebp-0x4]
  427c41:	mov    eax,DWORD PTR [ebp-0x14]
  427c44:	xor    ecx,esi
  427c46:	add    ecx,edi
  427c48:	cmp    eax,ecx
  427c4a:	je     0x427c95
  427c4c:	mov    DWORD PTR [ebp-0x3c],eax
  427c4f:	jmp    0x427c60
  427c51:	mov    eax,DWORD PTR [eax]
  427c53:	mov    ecx,DWORD PTR [ebp-0x3c]
  427c56:	mov    DWORD PTR [ebp-0x14],eax
  427c59:	mov    eax,DWORD PTR [ebp-0x14]
  427c5c:	cmp    eax,ecx
  427c5e:	je     0x427c6d
  427c60:	mov    edx,DWORD PTR [eax+0x18]
  427c63:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c69:	cmp    edx,DWORD PTR [ecx]
  427c6b:	jne    0x427c51
  427c6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  427c73:	mov    edx,DWORD PTR [eax+0x18]
  427c76:	cmp    edx,DWORD PTR [ecx]
  427c78:	jne    0x427c95
  427c7a:	mov    ecx,DWORD PTR [ebx+0x190]
  427c80:	mov    edx,DWORD PTR [ebp-0x20]
  427c83:	mov    edx,DWORD PTR [edx+0x28]
  427c86:	add    edx,DWORD PTR [ecx]
  427c88:	mov    DWORD PTR [eax+0x1c],edx
  427c8b:	mov    eax,DWORD PTR [ebp-0x24]
  427c8e:	xor    eax,esi
  427c90:	add    eax,edi
  427c92:	mov    DWORD PTR [ebp-0x34],eax
  427c95:	mov    eax,DWORD PTR [ebp+0xc]
  427c98:	push   ebx
  427c99:	push   eax
  427c9a:	push   DWORD PTR [ebp+0x20]
  427c9d:	call   0x42741d
  427ca2:	test   eax,eax
  427ca4:	je     0x427d6d
  427caa:	push   DWORD PTR [ebp+0xc]
  427cad:	mov    ecx,ebx
  427caf:	push   DWORD PTR [ebp+0x20]
  427cb2:	call   0x427376
  427cb7:	test   eax,eax
  427cb9:	je     0x427d6d
  427cbf:	mov    eax,DWORD PTR [ebp+0xc]
  427cc2:	mov    edx,DWORD PTR [ebp+0x20]
  427cc5:	mov    ecx,ebx
  427cc7:	call   0x42724f
  427ccc:	test   eax,eax
  427cce:	je     0x427d6d
  427cd4:	push   ebx
  427cd5:	push   DWORD PTR [ebp+0x20]
  427cd8:	call   0x427700
  427cdd:	test   eax,eax
  427cdf:	je     0x427d6d
  427ce5:	mov    eax,DWORD PTR [ebx+0x18c]
  427ceb:	mov    edx,DWORD PTR [ebp+0x20]
  427cee:	cmp    edx,DWORD PTR [eax]
  427cf0:	jne    0x427d0c
  427cf2:	mov    eax,DWORD PTR [ebx+0x1e0]
  427cf8:	lea    ecx,[ebp-0x18]
  427cfb:	push   ecx
  427cfc:	push   DWORD PTR [ebp-0x18]
  427cff:	mov    ecx,DWORD PTR [ebp-0x20]
  427d02:	push   DWORD PTR [ecx+0x54]
  427d05:	push   edx
  427d06:	call   DWORD PTR [eax+0x1c]
  427d09:	mov    edx,DWORD PTR [ebp+0x20]
  427d0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  427d12:	mov    eax,DWORD PTR [eax]
  427d14:	xor    eax,esi
  427d16:	add    eax,edi
  427d18:	je     0x427d51
  427d1a:	mov    ecx,DWORD PTR [ebp+0xc]
  427d1d:	mov    eax,DWORD PTR [ecx+0x28]
  427d20:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427d27:	mov    esi,DWORD PTR [ebp+0x8]
  427d2a:	push   DWORD PTR [ebp+0x14]
  427d2d:	xor    esi,0x8ae
  427d33:	push   DWORD PTR [ebp+0x10]
  427d36:	add    esi,0x72f5
  427d3c:	or     WORD PTR [ecx+0x16],si
  427d40:	add    eax,edx
  427d42:	push   edx
  427d43:	call   eax
  427d45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427d4f:	jmp    0x427d5b
  427d51:	mov    eax,DWORD PTR [ebp+0xc]
  427d54:	mov    eax,DWORD PTR [eax+0x28]
  427d57:	add    eax,edx
  427d59:	call   eax
  427d5b:	mov    DWORD PTR [ebp-0x8],eax
  427d5e:	mov    eax,DWORD PTR [ebp-0x8]
  427d61:	mov    ecx,DWORD PTR [ebp+0x1c]
  427d64:	mov    DWORD PTR [ecx],eax
  427d66:	mov    DWORD PTR [ebp-0x30],0x1
  427d6d:	cmp    DWORD PTR [ebp-0x30],0x0
  427d71:	jne    0x427d77
  427d73:	and    DWORD PTR [ebp+0x20],0x0
  427d77:	mov    eax,DWORD PTR [ebp+0x20]
  427d7a:	jmp    0x427d7e
  427d7c:	xor    eax,eax
  427d7e:	pop    edi
  427d7f:	pop    esi
  427d80:	pop    ebx
  427d81:	leave  
  427d82:	ret    0x1c
  427d85:	push   ebp
  427d86:	mov    ebp,esp
  427d88:	movzx  edx,WORD PTR [ecx+0x6]
  427d8c:	movzx  eax,WORD PTR [ecx+0x14]
  427d90:	push   ebx
  427d91:	push   edi
  427d92:	xor    edi,edi
  427d94:	lea    eax,[eax+ecx*1+0x18]
  427d98:	test   edx,edx
  427d9a:	je     0x427dbb
  427d9c:	mov    ecx,DWORD PTR [eax+0xc]
  427d9f:	lea    ebx,[ecx+esi*1]
  427da2:	cmp    DWORD PTR [ebp+0x8],ebx
  427da5:	jb     0x427db3
  427da7:	mov    ebx,DWORD PTR [eax+0x8]
  427daa:	add    ebx,ecx
  427dac:	add    ebx,esi
  427dae:	cmp    DWORD PTR [ebp+0x8],ebx
  427db1:	jb     0x427dbd
  427db3:	add    eax,0x28
  427db6:	inc    edi
  427db7:	cmp    edi,edx
  427db9:	jb     0x427d9c
  427dbb:	xor    eax,eax
  427dbd:	pop    edi
  427dbe:	pop    ebx
  427dbf:	pop    ebp
  427dc0:	ret    0x4
  427dc3:	push   ebp
  427dc4:	mov    ebp,esp
  427dc6:	sub    esp,0x34
  427dc9:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427dd0:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427dd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427dde:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427de5:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427dec:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427df3:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427dfa:	mov    DWORD PTR [ebp-0x10],eax
  427dfd:	mov    eax,DWORD PTR [ebp+0x8]
  427e00:	mov    DWORD PTR [ebp-0x14],eax
  427e03:	mov    eax,DWORD PTR [ebp-0xc]
  427e06:	push   ebx
  427e07:	mov    ecx,0x75108ae
  427e0c:	xor    eax,ecx
  427e0e:	push   esi
  427e0f:	mov    esi,DWORD PTR [ebp-0x10]
  427e12:	mov    edx,0x3272f5
  427e17:	add    eax,edx
  427e19:	push   edi
  427e1a:	cmp    esi,eax
  427e1c:	je     0x427ffb
  427e22:	mov    eax,DWORD PTR [ebp-0xc]
  427e25:	mov    esi,DWORD PTR [ebp-0x14]
  427e28:	xor    eax,ecx
  427e2a:	add    eax,edx
  427e2c:	cmp    esi,eax
  427e2e:	je     0x427ffb
  427e34:	mov    eax,DWORD PTR [ebp-0xc]
  427e37:	xor    eax,ecx
  427e39:	add    eax,edx
  427e3b:	mov    DWORD PTR [ebp-0x24],eax
  427e3e:	mov    eax,DWORD PTR [ebp-0xc]
  427e41:	xor    eax,ecx
  427e43:	add    eax,edx
  427e45:	mov    DWORD PTR [ebp-0x28],eax
  427e48:	mov    edi,DWORD PTR [ebp-0x20]
  427e4b:	mov    ebx,DWORD PTR [ebp-0x8]
  427e4e:	mov    esi,0x8ae
  427e53:	xor    edi,esi
  427e55:	mov    eax,0x72f5
  427e5a:	xor    ebx,esi
  427e5c:	add    edi,eax
  427e5e:	add    ebx,eax
  427e60:	sub    ebx,edi
  427e62:	mov    WORD PTR [ebp-0x8],bx
  427e66:	jmp    0x427f2b
  427e6b:	mov    edi,DWORD PTR [ebp-0xc]
  427e6e:	mov    bx,WORD PTR [ebp-0x4]
  427e72:	xor    edi,esi
  427e74:	add    edi,eax
  427e76:	cmp    bx,di
  427e79:	je     0x427f6d
  427e7f:	mov    edi,DWORD PTR [ebp-0xc]
  427e82:	mov    ebx,DWORD PTR [ebp+0xc]
  427e85:	xor    edi,ecx
  427e87:	add    edi,edx
  427e89:	cmp    ebx,edi
  427e8b:	mov    di,WORD PTR [ebp-0x4]
  427e8f:	mov    bx,WORD PTR [ebp+0x8]
  427e93:	je     0x427efe
  427e95:	cmp    bx,di
  427e98:	je     0x427f07
  427e9a:	mov    edi,DWORD PTR [ebp-0x20]
  427e9d:	mov    bx,WORD PTR [ebp+0x8]
  427ea1:	xor    edi,esi
  427ea3:	add    edi,eax
  427ea5:	cmp    bx,di
  427ea8:	jb     0x427ec8
  427eaa:	mov    edi,DWORD PTR [ebp-0x2c]
  427ead:	mov    bx,WORD PTR [ebp+0x8]
  427eb1:	xor    edi,esi
  427eb3:	add    edi,eax
  427eb5:	cmp    bx,di
  427eb8:	ja     0x427ec8
  427eba:	movzx  edi,WORD PTR [ebp+0x8]
  427ebe:	movzx  ebx,WORD PTR [ebp-0x8]
  427ec2:	add    edi,ebx
  427ec4:	mov    WORD PTR [ebp+0x8],di
  427ec8:	mov    edi,DWORD PTR [ebp-0x20]
  427ecb:	mov    bx,WORD PTR [ebp-0x4]
  427ecf:	xor    edi,esi
  427ed1:	add    edi,eax
  427ed3:	cmp    bx,di
  427ed6:	jb     0x427ef6
  427ed8:	mov    edi,DWORD PTR [ebp-0x2c]
  427edb:	mov    bx,WORD PTR [ebp-0x4]
  427edf:	xor    edi,esi
  427ee1:	add    edi,eax
  427ee3:	cmp    bx,di
  427ee6:	ja     0x427ef6
  427ee8:	movzx  edi,WORD PTR [ebp-0x4]
  427eec:	movzx  ebx,WORD PTR [ebp-0x8]
  427ef0:	add    edi,ebx
  427ef2:	mov    WORD PTR [ebp-0x4],di
  427ef6:	mov    di,WORD PTR [ebp-0x4]
  427efa:	mov    bx,WORD PTR [ebp+0x8]
  427efe:	cmp    bx,di
  427f01:	jne    0x427ffb
  427f07:	mov    edi,DWORD PTR [ebp-0x1c]
  427f0a:	mov    ebx,DWORD PTR [ebp-0x10]
  427f0d:	xor    edi,ecx
  427f0f:	lea    edi,[edi+ebx*1+0x3272f5]
  427f16:	mov    DWORD PTR [ebp-0x10],edi
  427f19:	mov    edi,DWORD PTR [ebp-0x1c]
  427f1c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f1f:	xor    edi,ecx
  427f21:	lea    edi,[edi+ebx*1+0x3272f5]
  427f28:	mov    DWORD PTR [ebp-0x14],edi
  427f2b:	mov    edi,DWORD PTR [ebp-0x24]
  427f2e:	mov    ebx,DWORD PTR [ebp-0x10]
  427f31:	mov    di,WORD PTR [ebx+edi*2]
  427f35:	mov    WORD PTR [ebp+0x8],di
  427f39:	mov    edi,DWORD PTR [ebp-0x28]
  427f3c:	mov    ebx,DWORD PTR [ebp-0x14]
  427f3f:	mov    di,WORD PTR [ebx+edi*2]
  427f43:	mov    WORD PTR [ebp-0x4],di
  427f47:	mov    edi,DWORD PTR [ebp-0xc]
  427f4a:	mov    bx,WORD PTR [ebp+0x8]
  427f4e:	xor    edi,esi
  427f50:	add    edi,eax
  427f52:	cmp    bx,di
  427f55:	jne    0x427e6b
  427f5b:	mov    eax,DWORD PTR [ebp-0x18]
  427f5e:	mov    esi,DWORD PTR [ebp-0xc]
  427f61:	xor    eax,ecx
  427f63:	add    eax,edx
  427f65:	imul   eax,esi
  427f68:	mov    DWORD PTR [ebp-0xc],eax
  427f6b:	jmp    0x427f7f
  427f6d:	mov    eax,DWORD PTR [ebp-0xc]
  427f70:	mov    esi,DWORD PTR [ebp-0x18]
  427f73:	xor    eax,ecx
  427f75:	lea    eax,[eax+esi*1+0x3272f5]
  427f7c:	mov    DWORD PTR [ebp-0x18],eax
  427f7f:	mov    eax,DWORD PTR [ebp-0x24]
  427f82:	sub    eax,edx
  427f84:	xor    eax,ecx
  427f86:	mov    DWORD PTR [ebp-0x30],eax
  427f89:	mov    eax,DWORD PTR [ebp-0x28]
  427f8c:	sub    eax,edx
  427f8e:	xor    eax,ecx
  427f90:	mov    DWORD PTR [ebp-0x34],eax
  427f93:	mov    eax,DWORD PTR [ebp-0x34]
  427f96:	mov    esi,DWORD PTR [ebp-0x1c]
  427f99:	xor    esi,ecx
  427f9b:	add    esi,edx
  427f9d:	xor    eax,ecx
  427f9f:	add    eax,0x3272f5
  427fa4:	imul   esi,eax
  427fa7:	mov    eax,DWORD PTR [ebp-0x14]
  427faa:	movzx  eax,WORD PTR [esi+eax*1]
  427fae:	mov    esi,DWORD PTR [ebp-0x30]
  427fb1:	mov    edi,DWORD PTR [ebp-0x1c]
  427fb4:	xor    esi,ecx
  427fb6:	add    esi,edx
  427fb8:	xor    edi,ecx
  427fba:	add    edi,edx
  427fbc:	imul   edi,esi
  427fbf:	mov    esi,DWORD PTR [ebp-0x10]
  427fc2:	movzx  esi,WORD PTR [edi+esi*1]
  427fc6:	sub    eax,edx
  427fc8:	sub    esi,edx
  427fca:	xor    eax,ecx
  427fcc:	xor    esi,ecx
  427fce:	cmp    esi,eax
  427fd0:	jne    0x427ffb
  427fd2:	mov    eax,DWORD PTR [ebp-0x30]
  427fd5:	mov    esi,DWORD PTR [ebp-0x1c]
  427fd8:	xor    eax,ecx
  427fda:	add    eax,0x3272f5
  427fdf:	xor    esi,ecx
  427fe1:	add    esi,edx
  427fe3:	imul   esi,eax
  427fe6:	mov    eax,DWORD PTR [ebp-0x10]
  427fe9:	movzx  eax,WORD PTR [esi+eax*1]
  427fed:	mov    esi,DWORD PTR [ebp-0xc]
  427ff0:	sub    eax,edx
  427ff2:	xor    eax,ecx
  427ff4:	cmp    eax,esi
  427ff6:	mov    eax,DWORD PTR [ebp-0xc]
  427ff9:	je     0x427ffe
  427ffb:	mov    eax,DWORD PTR [ebp-0x18]
  427ffe:	pop    edi
  427fff:	xor    eax,ecx
  428001:	pop    esi
  428002:	add    eax,edx
  428004:	pop    ebx
  428005:	leave  
  428006:	ret    0x8
  428009:	push   ebp
  42800a:	mov    ebp,esp
  42800c:	push   ecx
  42800d:	mov    cx,WORD PTR [eax]
  428010:	push   esi
  428011:	mov    esi,0x3b5c
  428016:	sub    cx,si
  428019:	mov    esi,0x8a9a
  42801e:	xor    cx,si
  428021:	mov    esi,0x4e3e
  428026:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42802d:	mov    edx,0xf89c85a5
  428032:	cmp    cx,si
  428035:	je     0x428094
  428037:	push   ebx
  428038:	push   edi
  428039:	movzx  ecx,cx
  42803c:	mov    edi,0xffcd8d0b
  428041:	mov    esi,0x75108ae
  428046:	mov    ebx,0x4f9a
  42804b:	cmp    cx,bx
  42804e:	jne    0x428053
  428050:	mov    DWORD PTR [ebp-0x4],edx
  428053:	lea    edx,[edi+0x1]
  428056:	xor    edx,esi
  428058:	mov    edi,edx
  42805a:	xor    edi,esi
  42805c:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  428064:	mov    ebx,0x3b5c
  428069:	sub    cx,bx
  42806c:	mov    ebx,0x8a9a
  428071:	xor    cx,bx
  428074:	mov    ebx,0x4e3e
  428079:	cmp    cx,bx
  42807c:	jne    0x428046
  42807e:	mov    ecx,DWORD PTR [ebp-0x4]
  428081:	pop    edi
  428082:	pop    ebx
  428083:	cmp    ecx,0xf89c85a4
  428089:	je     0x428094
  42808b:	xor    ecx,esi
  42808d:	lea    eax,[eax+ecx*2+0x64e5ec]
  428094:	pop    esi
  428095:	leave  
  428096:	ret    
  428097:	push   ebp
  428098:	mov    ebp,esp
  42809a:	push   ecx
  42809b:	push   esi
  42809c:	push   edi
  42809d:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4280a4:	mov    esi,0xf89c85a5
  4280a9:	call   0x428009
  4280ae:	mov    edi,eax
  4280b0:	mov    al,BYTE PTR [edi]
  4280b2:	sub    al,0x3
  4280b4:	xor    al,0x7e
  4280b6:	cmp    al,0x83
  4280b8:	je     0x42811b
  4280ba:	mov    eax,edi
  4280bc:	mov    edx,0xffcd8d0b
  4280c1:	mov    ecx,0x75108ae
  4280c6:	push   ebx
  4280c7:	mov    ax,WORD PTR [eax]
  4280ca:	mov    ebx,0x3b5c
  4280cf:	sub    ax,bx
  4280d2:	mov    ebx,0x8a9a
  4280d7:	xor    ax,bx
  4280da:	mov    ebx,0x4e48
  4280df:	cmp    ax,bx
  4280e2:	jne    0x4280e7
  4280e4:	mov    DWORD PTR [ebp-0x4],esi
  4280e7:	lea    esi,[edx+0x1]
  4280ea:	xor    esi,ecx
  4280ec:	mov    edx,esi
  4280ee:	xor    edx,ecx
  4280f0:	lea    eax,[edi+edx*2+0x64e5ea]
  4280f7:	mov    bl,BYTE PTR [eax]
  4280f9:	sub    bl,0x3
  4280fc:	xor    bl,0x7e
  4280ff:	cmp    bl,0x83
  428102:	jne    0x4280c7
  428104:	mov    eax,DWORD PTR [ebp-0x4]
  428107:	pop    ebx
  428108:	cmp    eax,0xf89c85a4
  42810d:	je     0x42811b
  42810f:	xor    eax,ecx
  428111:	xor    ecx,ecx
  428113:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  42811b:	mov    eax,edi
  42811d:	pop    edi
  42811e:	pop    esi
  42811f:	leave  
  428120:	ret    
  428121:	push   ebp
  428122:	mov    ebp,esp
  428124:	push   ecx
  428125:	push   esi
  428126:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  42812d:	mov    esi,0xf89c85a5
  428132:	call   0x428009
  428137:	mov    cx,WORD PTR [eax]
  42813a:	mov    edx,0x3b5c
  42813f:	sub    cx,dx
  428142:	mov    edx,0x8a9a
  428147:	xor    cx,dx
  42814a:	mov    edx,0x4e3e
  42814f:	cmp    cx,dx
  428152:	je     0x4281ab
  428154:	push   ebx
  428155:	push   edi
  428156:	movzx  ecx,cx
  428159:	mov    edx,0xffcd8d0b
  42815e:	mov    edi,0x75108ae
  428163:	mov    ebx,0x4e48
  428168:	cmp    cx,bx
  42816b:	jne    0x428170
  42816d:	mov    DWORD PTR [ebp-0x4],esi
  428170:	lea    esi,[edx+0x1]
  428173:	xor    esi,edi
  428175:	mov    edx,esi
  428177:	xor    edx,edi
  428179:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  428181:	mov    ebx,0x3b5c
  428186:	sub    cx,bx
  428189:	mov    ebx,0x8a9a
  42818e:	xor    cx,bx
  428191:	mov    ebx,0x4e3e
  428196:	cmp    cx,bx
  428199:	jne    0x428163
  42819b:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  4281a2:	pop    edi
  4281a3:	pop    ebx
  4281a4:	je     0x4281ab
  4281a6:	xor    eax,eax
  4281a8:	inc    eax
  4281a9:	jmp    0x4281ad
  4281ab:	xor    eax,eax
  4281ad:	pop    esi
  4281ae:	leave  
  4281af:	ret    
  4281b0:	push   ebp
  4281b1:	mov    ebp,esp
  4281b3:	push   ecx
  4281b4:	mov    eax,DWORD PTR [ebp+0x8]
  4281b7:	movzx  ecx,WORD PTR [eax]
  4281ba:	push   esi
  4281bb:	lea    eax,[ecx-0x3b5c]
  4281c1:	mov    esi,0x8a9a
  4281c6:	push   edi
  4281c7:	xor    eax,esi
  4281c9:	mov    edi,0x4e3e
  4281ce:	mov    DWORD PTR [ebp-0x4],edx
  4281d1:	cmp    ax,di
  4281d4:	je     0x428201
  4281d6:	mov    eax,DWORD PTR [ebp+0x8]
  4281d9:	sub    eax,edx
  4281db:	mov    DWORD PTR [ebp+0x8],eax
  4281de:	jmp    0x4281e3
  4281e0:	mov    eax,DWORD PTR [ebp+0x8]
  4281e3:	mov    WORD PTR [edx],cx
  4281e6:	add    edx,0x2
  4281e9:	movzx  edi,WORD PTR [eax+edx*1]
  4281ed:	mov    ecx,edi
  4281ef:	add    edi,0xffffc4a4
  4281f5:	xor    edi,esi
  4281f7:	mov    eax,0x4e3e
  4281fc:	cmp    di,ax
  4281ff:	jne    0x4281e0
  428201:	xor    eax,eax
  428203:	pop    edi
  428204:	mov    WORD PTR [edx],ax
  428207:	mov    eax,DWORD PTR [ebp-0x4]
  42820a:	pop    esi
  42820b:	leave  
  42820c:	ret    0x4
  42820f:	push   ebp
  428210:	mov    ebp,esp
  428212:	sub    esp,0x18
  428215:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  42821c:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  428223:	mov    ecx,DWORD PTR [ebp-0x8]
  428226:	push   esi
  428227:	mov    eax,0x75108ae
  42822c:	xor    ecx,eax
  42822e:	mov    esi,0x3272f5
  428233:	add    ecx,esi
  428235:	mov    DWORD PTR [ebp-0x4],ecx
  428238:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42823f:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  428246:	push   edi
  428247:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  42824e:	jmp    0x4282ef
  428253:	mov    ecx,DWORD PTR [ebp-0x4]
  428256:	mov    edx,DWORD PTR [ebp+0x10]
  428259:	sub    edx,ecx
  42825b:	mov    ecx,DWORD PTR [ebp-0xc]
  42825e:	xor    ecx,eax
  428260:	add    ecx,esi
  428262:	cmp    edx,ecx
  428264:	jbe    0x428281
  428266:	mov    edx,DWORD PTR [ebp-0x4]
  428269:	add    edx,DWORD PTR [ebp+0x8]
  42826c:	mov    ecx,DWORD PTR [ebp-0x4]
  42826f:	add    ecx,DWORD PTR [ebp+0xc]
  428272:	mov    edi,DWORD PTR [ecx]
  428274:	mov    DWORD PTR [edx],edi
  428276:	mov    ecx,DWORD PTR [ecx+0x4]
  428279:	mov    DWORD PTR [edx+0x4],ecx
  42827c:	mov    ecx,DWORD PTR [ebp-0xc]
  42827f:	jmp    0x4282ce
  428281:	mov    ecx,DWORD PTR [ebp-0x4]
  428284:	mov    edx,DWORD PTR [ebp+0x10]
  428287:	sub    edx,ecx
  428289:	mov    ecx,DWORD PTR [ebp-0x10]
  42828c:	xor    ecx,eax
  42828e:	add    ecx,esi
  428290:	cmp    edx,ecx
  428292:	mov    ecx,DWORD PTR [ebp-0x4]
  428295:	jbe    0x4282a9
  428297:	add    ecx,DWORD PTR [ebp+0x8]
  42829a:	mov    edx,DWORD PTR [ebp-0x4]
  42829d:	add    edx,DWORD PTR [ebp+0xc]
  4282a0:	mov    edx,DWORD PTR [edx]
  4282a2:	mov    DWORD PTR [ecx],edx
  4282a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4282a7:	jmp    0x4282ce
  4282a9:	mov    edx,DWORD PTR [ebp+0x10]
  4282ac:	sub    edx,ecx
  4282ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4282b1:	xor    ecx,eax
  4282b3:	add    ecx,esi
  4282b5:	cmp    edx,ecx
  4282b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4282ba:	jbe    0x4282df
  4282bc:	add    ecx,DWORD PTR [ebp+0x8]
  4282bf:	mov    edx,DWORD PTR [ebp-0x4]
  4282c2:	add    edx,DWORD PTR [ebp+0xc]
  4282c5:	mov    dx,WORD PTR [edx]
  4282c8:	mov    WORD PTR [ecx],dx
  4282cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4282ce:	mov    edx,DWORD PTR [ebp-0x4]
  4282d1:	xor    ecx,eax
  4282d3:	lea    ecx,[ecx+edx*1+0x3272f5]
  4282da:	mov    DWORD PTR [ebp-0x4],ecx
  4282dd:	jmp    0x4282ef
  4282df:	add    ecx,DWORD PTR [ebp+0x8]
  4282e2:	mov    edx,DWORD PTR [ebp-0x4]
  4282e5:	add    edx,DWORD PTR [ebp+0xc]
  4282e8:	mov    dl,BYTE PTR [edx]
  4282ea:	mov    BYTE PTR [ecx],dl
  4282ec:	inc    DWORD PTR [ebp-0x4]
  4282ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4282f2:	mov    edx,DWORD PTR [ebp+0x10]
  4282f5:	xor    ecx,eax
  4282f7:	add    ecx,esi
  4282f9:	imul   ecx,edx
  4282fc:	mov    edx,DWORD PTR [ebp-0x8]
  4282ff:	mov    edi,DWORD PTR [ebp-0x4]
  428302:	xor    edx,eax
  428304:	lea    edx,[edx+edi*1+0x3272f5]
  42830b:	cmp    edx,ecx
  42830d:	jb     0x428253
  428313:	pop    edi
  428314:	pop    esi
  428315:	leave  
  428316:	ret    0xc
  428319:	push   ebp
  42831a:	mov    ebp,esp
  42831c:	sub    esp,0xc
  42831f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  428326:	push   esi
  428327:	mov    esi,eax
  428329:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  428330:	mov    edx,DWORD PTR [ebp-0x4]
  428333:	mov    eax,0x75108ae
  428338:	xor    edx,eax
  42833a:	mov    ecx,0x3272f5
  42833f:	add    edx,ecx
  428341:	cmp    esi,edx
  428343:	je     0x428385
  428345:	push   ebx
  428346:	push   edi
  428347:	mov    edx,DWORD PTR [ebp-0x8]
  42834a:	mov    ebx,DWORD PTR [ebp+0x8]
  42834d:	xor    edx,eax
  42834f:	mov    edi,0xffcd8d0b
  428354:	sub    edi,edx
  428356:	add    esi,edi
  428358:	lea    edx,[esi-0x3272f5]
  42835e:	xor    edx,eax
  428360:	mov    DWORD PTR [ebp-0xc],edx
  428363:	mov    edx,DWORD PTR [ebp-0x4]
  428366:	mov    edi,DWORD PTR [ebp-0xc]
  428369:	xor    dl,0xae
  42836c:	sub    dl,0xb
  42836f:	xor    edi,eax
  428371:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  428378:	mov    edx,DWORD PTR [ebp-0x4]
  42837b:	xor    edx,eax
  42837d:	add    edx,ecx
  42837f:	cmp    esi,edx
  428381:	jne    0x428347
  428383:	pop    edi
  428384:	pop    ebx
  428385:	pop    esi
  428386:	leave  
  428387:	ret    0x4
  42838a:	push   ebp
  42838b:	mov    ebp,esp
  42838d:	sub    esp,0x21c
  428393:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42839a:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  4283a1:	mov    eax,DWORD PTR [ebp+0x10]
  4283a4:	mov    eax,DWORD PTR [ebp-0x4]
  4283a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4283aa:	push   esi
  4283ab:	push   edi
  4283ac:	mov    edi,0x75108ae
  4283b1:	xor    eax,edi
  4283b3:	mov    esi,0x3272f5
  4283b8:	add    eax,esi
  4283ba:	cmp    eax,ecx
  4283bc:	mov    eax,DWORD PTR [ebp-0x4]
  4283bf:	jne    0x4283ca
  4283c1:	xor    eax,edi
  4283c3:	add    eax,esi
  4283c5:	jmp    0x428476
  4283ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4283cd:	xor    eax,edi
  4283cf:	add    eax,esi
  4283d1:	cmp    eax,ecx
  4283d3:	jne    0x4283da
  4283d5:	mov    eax,DWORD PTR [ebp-0x4]
  4283d8:	jmp    0x4283c1
  4283da:	lea    eax,[ebp-0x21c]
  4283e0:	mov    DWORD PTR [ebp-0x8],eax
  4283e3:	mov    eax,DWORD PTR [ebp+0xc]
  4283e6:	mov    DWORD PTR [ebp-0x10],eax
  4283e9:	mov    eax,DWORD PTR [ebp-0x4]
  4283ec:	xor    eax,edi
  4283ee:	add    eax,esi
  4283f0:	mov    DWORD PTR [ebp+0x10],eax
  4283f3:	mov    eax,DWORD PTR [ebp+0xc]
  4283f6:	push   ebx
  4283f7:	call   0x428121
  4283fc:	mov    ebx,eax
  4283fe:	mov    eax,DWORD PTR [ebp+0x8]
  428401:	mov    eax,DWORD PTR [eax+0x14]
  428404:	jmp    0x42845e
  428406:	mov    eax,DWORD PTR [ebp+0xc]
  428409:	sub    eax,0x8
  42840c:	mov    DWORD PTR [ebp-0xc],eax
  42840f:	mov    eax,DWORD PTR [ebp-0xc]
  428412:	mov    eax,DWORD PTR [eax+0x28]
  428415:	call   0x428009
  42841a:	mov    DWORD PTR [ebp+0x10],eax
  42841d:	push   DWORD PTR [ebp+0x10]
  428420:	mov    edx,DWORD PTR [ebp-0x8]
  428423:	call   0x4281b0
  428428:	mov    eax,DWORD PTR [ebp-0x4]
  42842b:	xor    eax,edi
  42842d:	add    eax,esi
  42842f:	cmp    eax,ebx
  428431:	jne    0x42843b
  428433:	mov    eax,DWORD PTR [ebp-0x8]
  428436:	call   0x428097
  42843b:	mov    eax,DWORD PTR [ebp-0x14]
  42843e:	xor    eax,edi
  428440:	add    eax,esi
  428442:	push   eax
  428443:	push   DWORD PTR [ebp-0x10]
  428446:	mov    eax,DWORD PTR [ebp-0x8]
  428449:	call   0x427dc3
  42844e:	mov    ecx,DWORD PTR [ebp-0x4]
  428451:	xor    ecx,edi
  428453:	add    ecx,esi
  428455:	cmp    eax,ecx
  428457:	je     0x42847c
  428459:	mov    eax,DWORD PTR [ebp+0xc]
  42845c:	mov    eax,DWORD PTR [eax]
  42845e:	mov    DWORD PTR [ebp+0xc],eax
  428461:	mov    eax,DWORD PTR [ebp+0x8]
  428464:	mov    ecx,DWORD PTR [ebp+0xc]
  428467:	add    eax,0x14
  42846a:	cmp    ecx,eax
  42846c:	jne    0x428406
  42846e:	mov    eax,DWORD PTR [ebp-0x4]
  428471:	xor    eax,edi
  428473:	add    eax,esi
  428475:	pop    ebx
  428476:	pop    edi
  428477:	pop    esi
  428478:	leave  
  428479:	ret    0xc
  42847c:	mov    eax,DWORD PTR [ebp-0xc]
  42847f:	mov    eax,DWORD PTR [eax+0x18]
  428482:	jmp    0x428475
  428484:	push   ebp
  428485:	mov    ebp,esp
  428487:	mov    eax,DWORD PTR [ebp+0xc]
  42848a:	sub    esp,0x10
  42848d:	cmp    DWORD PTR [ebp+0x8],0x0
  428491:	push   ebx
  428492:	push   esi
  428493:	push   edi
  428494:	je     0x428549
  42849a:	test   eax,eax
  42849c:	je     0x428549
  4284a2:	movzx  eax,WORD PTR [eax+0x20]
  4284a6:	mov    ecx,eax
  4284a8:	mov    DWORD PTR [ebp-0x10],eax
  4284ab:	xor    edx,edx
  4284ad:	and    DWORD PTR [ebp-0x8],edx
  4284b0:	mov    eax,0x8a9a
  4284b5:	xor    ecx,eax
  4284b7:	add    ecx,0x3b5c
  4284bd:	mov    DWORD PTR [ebp-0xc],ecx
  4284c0:	and    DWORD PTR [ebp-0x4],0x0
  4284c4:	xor    ecx,ecx
  4284c6:	push   0xffffff81
  4284c8:	pop    edi
  4284c9:	cmp    cx,WORD PTR [ebp-0xc]
  4284cd:	jae    0x428533
  4284cf:	lea    esi,[edx-0x3b5c]
  4284d5:	xor    esi,eax
  4284d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4284db:	mov    ebx,DWORD PTR [ebp+0xc]
  4284de:	lea    ecx,[ebx+ecx*4]
  4284e1:	cmp    WORD PTR [ecx+0x2],si
  4284e5:	jne    0x42851e
  4284e7:	movzx  ecx,WORD PTR [ecx]
  4284ea:	mov    edi,0x4e3e
  4284ef:	cmp    cx,di
  4284f2:	jne    0x428500
  4284f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4284f7:	movzx  edi,dx
  4284fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4284fe:	je     0x42852d
  428500:	mov    ebx,DWORD PTR [ebp+0x8]
  428503:	movzx  edi,dx
  428506:	movsx  di,BYTE PTR [edi+ebx*1]
  42850b:	mov    ebx,0x3b5c
  428510:	sub    di,bx
  428513:	xor    di,ax
  428516:	cmp    cx,di
  428519:	je     0x42852d
  42851b:	push   0xffffff83
  42851d:	pop    edi
  42851e:	inc    DWORD PTR [ebp-0x4]
  428521:	mov    cx,WORD PTR [ebp-0xc]
  428525:	cmp    WORD PTR [ebp-0x4],cx
  428529:	jb     0x4284d7
  42852b:	jmp    0x428533
  42852d:	inc    DWORD PTR [ebp-0x8]
  428530:	push   0xffffff80
  428532:	pop    edi
  428533:	mov    esi,DWORD PTR [ebp+0x8]
  428536:	movzx  ecx,dx
  428539:	cmp    BYTE PTR [ecx+esi*1],0x0
  42853d:	je     0x428552
  42853f:	inc    edx
  428540:	cmp    edi,0xffffff83
  428543:	jne    0x4284c0
  428549:	xor    eax,eax
  42854b:	pop    edi
  42854c:	pop    esi
  42854d:	pop    ebx
  42854e:	leave  
  42854f:	ret    0x8
  428552:	mov    ecx,DWORD PTR [ebp-0x8]
  428555:	add    ecx,0xffffc4a4
  42855b:	xor    cx,ax
  42855e:	xor    eax,eax
  428560:	cmp    cx,WORD PTR [ebp-0x10]
  428564:	sete   al
  428567:	jmp    0x42854b
  428569:	push   ebp
  42856a:	mov    ebp,esp
  42856c:	sub    esp,0x50
  42856f:	push   edi
  428570:	mov    edi,eax
  428572:	mov    eax,DWORD PTR [edi+0x1a8]
  428578:	cmp    DWORD PTR [eax],0x0
  42857b:	jne    0x428584
  42857d:	xor    eax,eax
  42857f:	jmp    0x4286b5
  428584:	push   DWORD PTR [ebp+0x8]
  428587:	push   0x2c
  428589:	pop    eax
  42858a:	call   0x428319
  42858f:	mov    edx,DWORD PTR [edi+0x1ac]
  428595:	lea    eax,[edi+0x22]
  428598:	mov    DWORD PTR [ebp-0x4c],eax
  42859b:	lea    eax,[edi+0x44]
  42859e:	mov    DWORD PTR [ebp-0x48],eax
  4285a1:	lea    eax,[edi+0x66]
  4285a4:	mov    DWORD PTR [ebp-0x44],eax
  4285a7:	lea    eax,[edi+0x88]
  4285ad:	mov    DWORD PTR [ebp-0x40],eax
  4285b0:	lea    eax,[edi+0xaa]
  4285b6:	mov    DWORD PTR [ebp-0x3c],eax
  4285b9:	lea    eax,[edi+0xcc]
  4285bf:	mov    DWORD PTR [ebp-0x38],eax
  4285c2:	lea    eax,[edi+0xee]
  4285c8:	mov    DWORD PTR [ebp-0x34],eax
  4285cb:	lea    eax,[edi+0x110]
  4285d1:	mov    DWORD PTR [ebp-0x30],eax
  4285d4:	lea    eax,[edi+0x132]
  4285da:	mov    DWORD PTR [ebp-0x2c],eax
  4285dd:	lea    eax,[edi+0x154]
  4285e3:	push   edi
  4285e4:	mov    DWORD PTR [ebp-0x50],edi
  4285e7:	mov    DWORD PTR [ebp-0x28],eax
  4285ea:	call   0x4286e9
  4285ef:	push   eax
  4285f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4285f6:	push   DWORD PTR [eax]
  4285f8:	call   0x42838a
  4285fd:	mov    DWORD PTR [ebp-0x10],eax
  428600:	test   eax,eax
  428602:	je     0x4286b5
  428608:	mov    ecx,DWORD PTR [eax+0x3c]
  42860b:	push   ebx
  42860c:	push   esi
  42860d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428611:	add    esi,eax
  428613:	mov    edi,DWORD PTR [esi+0x24]
  428616:	mov    ecx,DWORD PTR [esi+0x1c]
  428619:	mov    edx,DWORD PTR [esi+0x20]
  42861c:	mov    ebx,DWORD PTR [esi+0x18]
  42861f:	add    edi,eax
  428621:	mov    DWORD PTR [ebp-0x20],edi
  428624:	mov    edi,DWORD PTR [esi+0x14]
  428627:	add    ecx,eax
  428629:	add    edx,eax
  42862b:	mov    DWORD PTR [ebp-0xc],ecx
  42862e:	mov    DWORD PTR [ebp-0x1c],edx
  428631:	mov    DWORD PTR [ebp-0x8],edi
  428634:	cmp    edi,ebx
  428636:	ja     0x42863b
  428638:	mov    DWORD PTR [ebp-0x8],ebx
  42863b:	xor    ebx,ebx
  42863d:	mov    DWORD PTR [ebp-0x18],ebx
  428640:	cmp    DWORD PTR [ebp-0x8],ebx
  428643:	jbe    0x4286b3
  428645:	jmp    0x42864a
  428647:	mov    edx,DWORD PTR [ebp-0x1c]
  42864a:	mov    edi,DWORD PTR [ebp-0x20]
  42864d:	movzx  edi,WORD PTR [edi+ebx*2]
  428651:	cmp    ebx,DWORD PTR [esi+0x18]
  428654:	jae    0x4286b3
  428656:	cmp    edi,DWORD PTR [esi+0x14]
  428659:	jae    0x4286b3
  42865b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42865e:	mov    edx,DWORD PTR [ebp+0x8]
  428661:	mov    edi,DWORD PTR [ecx+edi*4]
  428664:	mov    DWORD PTR [ebp-0x4],edx
  428667:	lea    edx,[ebp-0x50]
  42866a:	add    ebx,eax
  42866c:	add    edi,eax
  42866e:	sub    edx,DWORD PTR [ebp+0x8]
  428671:	mov    DWORD PTR [ebp-0x14],0xb
  428678:	mov    DWORD PTR [ebp-0x24],edx
  42867b:	mov    edx,DWORD PTR [ebp-0x4]
  42867e:	cmp    DWORD PTR [edx],0x0
  428681:	jne    0x42869e
  428683:	mov    eax,DWORD PTR [ebp-0x24]
  428686:	push   DWORD PTR [eax+edx*1]
  428689:	push   ebx
  42868a:	call   0x428484
  42868f:	mov    ecx,DWORD PTR [ebp-0xc]
  428692:	test   eax,eax
  428694:	je     0x42869b
  428696:	mov    eax,DWORD PTR [ebp-0x4]
  428699:	mov    DWORD PTR [eax],edi
  42869b:	mov    eax,DWORD PTR [ebp-0x10]
  42869e:	add    DWORD PTR [ebp-0x4],0x4
  4286a2:	dec    DWORD PTR [ebp-0x14]
  4286a5:	jne    0x42867b
  4286a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4286aa:	inc    ebx
  4286ab:	mov    DWORD PTR [ebp-0x18],ebx
  4286ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4286b1:	jb     0x428647
  4286b3:	pop    esi
  4286b4:	pop    ebx
  4286b5:	pop    edi
  4286b6:	leave  
  4286b7:	ret    0x4
  4286ba:	push   ebp
  4286bb:	mov    ebp,esp
  4286bd:	mov    eax,DWORD PTR [ebp+0x8]
  4286c0:	push   esi
  4286c1:	push   DWORD PTR [eax+0x1e0]
  4286c7:	lea    esi,[eax+0x198]
  4286cd:	mov    eax,DWORD PTR [ebp+0x8]
  4286d0:	call   0x428569
  4286d5:	mov    ecx,DWORD PTR [esi]
  4286d7:	mov    DWORD PTR [ecx],eax
  4286d9:	mov    eax,DWORD PTR [esi]
  4286db:	xor    ecx,ecx
  4286dd:	cmp    DWORD PTR [eax],ecx
  4286df:	pop    esi
  4286e0:	setne  cl
  4286e3:	mov    eax,ecx
  4286e5:	pop    ebp
  4286e6:	ret    0x4
  4286e9:	mov    ecx,DWORD PTR [edi+0x188]
  4286ef:	push   ebx
  4286f0:	jmp    0x428705
  4286f2:	xor    eax,0x8a9a
  4286f7:	add    eax,0x3b5c
  4286fc:	mov    WORD PTR [ecx],ax
  4286ff:	add    ecx,0x2
  428702:	add    edx,0x2
  428705:	movzx  eax,WORD PTR [edx]
  428708:	mov    ebx,0x4e3e
  42870d:	cmp    ax,bx
  428710:	jne    0x4286f2
  428712:	xor    eax,eax
  428714:	mov    WORD PTR [ecx],ax
  428717:	mov    eax,DWORD PTR [edi+0x188]
  42871d:	pop    ebx
  42871e:	ret    
  42871f:	push   edi
  428720:	mov    edi,eax
  428722:	mov    eax,DWORD PTR [esi+0x188]
  428728:	shl    edi,0x6
  42872b:	add    eax,edi
  42872d:	jmp    0x428739
  42872f:	xor    cl,0x7e
  428732:	add    cl,0x3
  428735:	mov    BYTE PTR [eax],cl
  428737:	inc    eax
  428738:	inc    edx
  428739:	mov    cl,BYTE PTR [edx]
  42873b:	cmp    cl,0x83
  42873e:	jne    0x42872f
  428740:	mov    BYTE PTR [eax],0x0
  428743:	mov    eax,DWORD PTR [esi+0x188]
  428749:	add    eax,edi
  42874b:	pop    edi
  42874c:	ret    
  42874d:	push   ebp
  42874e:	mov    ebp,esp
  428750:	sub    esp,0x14
  428753:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42875a:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  428761:	mov    eax,DWORD PTR [ebx]
  428763:	mov    DWORD PTR [ebp-0x8],eax
  428766:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42876d:	push   esi
  42876e:	push   edi
  42876f:	mov    DWORD PTR [ebp-0x14],0xead71885
  428776:	mov    edi,DWORD PTR [ebp-0x4]
  428779:	mov    ecx,DWORD PTR [ebp-0x10]
  42877c:	mov    eax,0x75108ae
  428781:	xor    edi,eax
  428783:	mov    edx,0x3272f5
  428788:	xor    ecx,eax
  42878a:	add    edi,edx
  42878c:	add    ecx,edx
  42878e:	imul   edi,ecx
  428791:	jmp    0x4287d9
  428793:	mov    ecx,DWORD PTR [ebp-0x8]
  428796:	mov    esi,DWORD PTR [ebp-0x4]
  428799:	xor    ecx,eax
  42879b:	xor    esi,eax
  42879d:	add    ecx,edx
  42879f:	add    esi,edx
  4287a1:	test   esi,ecx
  4287a3:	mov    esi,DWORD PTR [ebp-0x8]
  4287a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4287a9:	je     0x4287c0
  4287ab:	xor    ecx,eax
  4287ad:	xor    esi,eax
  4287af:	add    ecx,edx
  4287b1:	add    esi,edx
  4287b3:	shr    esi,cl
  4287b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4287b8:	xor    ecx,eax
  4287ba:	add    ecx,edx
  4287bc:	xor    esi,ecx
  4287be:	jmp    0x4287ca
  4287c0:	xor    esi,eax
  4287c2:	xor    ecx,eax
  4287c4:	add    esi,edx
  4287c6:	add    ecx,edx
  4287c8:	shr    esi,cl
  4287ca:	mov    DWORD PTR [ebp-0x8],esi
  4287cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4287d0:	xor    ecx,eax
  4287d2:	lea    edi,[edi+ecx*1+0x3272f5]
  4287d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4287dc:	mov    esi,DWORD PTR [ebp-0x4]
  4287df:	xor    esi,eax
  4287e1:	xor    ecx,eax
  4287e3:	sub    ecx,esi
  4287e5:	cmp    edi,ecx
  4287e7:	jbe    0x428793
  4287e9:	mov    eax,DWORD PTR [ebp-0x8]
  4287ec:	pop    edi
  4287ed:	mov    DWORD PTR [ebx],eax
  4287ef:	mov    eax,DWORD PTR [ebp-0x8]
  4287f2:	pop    esi
  4287f3:	leave  
  4287f4:	ret    
  4287f5:	push   ebp
  4287f6:	mov    ebp,esp
  4287f8:	sub    esp,0x38
  4287fb:	push   ebx
  4287fc:	mov    ebx,0xf89c85a5
  428801:	mov    DWORD PTR [ebp-0x4],ebx
  428804:	lea    ecx,[ebx-0x3]
  428807:	mov    DWORD PTR [ebp-0x24],ecx
  42880a:	mov    eax,DWORD PTR [ebp-0x4]
  42880d:	mov    edx,DWORD PTR [ebp+0x8]
  428810:	push   esi
  428811:	mov    esi,0x75108ae
  428816:	xor    eax,esi
  428818:	push   edi
  428819:	mov    edi,0x3272f5
  42881e:	add    eax,edi
  428820:	cmp    edx,eax
  428822:	mov    eax,DWORD PTR [ebp-0x4]
  428825:	je     0x42898a
  42882b:	mov    edx,DWORD PTR [ebp+0xc]
  42882e:	xor    eax,esi
  428830:	add    eax,edi
  428832:	cmp    edx,eax
  428834:	je     0x428987
  42883a:	mov    eax,DWORD PTR [ebp+0x10]
  42883d:	mov    edx,DWORD PTR [ebp+0xc]
  428840:	mov    DWORD PTR [ebp-0x14],eax
  428843:	mov    eax,DWORD PTR [ebp+0x8]
  428846:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  42884d:	mov    DWORD PTR [ebp-0xc],eax
  428850:	lea    eax,[ebx-0x2]
  428853:	mov    DWORD PTR [ebp-0x1c],eax
  428856:	mov    DWORD PTR [ebp-0x10],ebx
  428859:	mov    DWORD PTR [ebp+0xc],ecx
  42885c:	mov    DWORD PTR [ebp+0x10],eax
  42885f:	mov    eax,DWORD PTR [ebp+0xc]
  428862:	xor    eax,esi
  428864:	mov    DWORD PTR [ebp-0x20],edx
  428867:	sub    edx,eax
  428869:	sub    edx,edi
  42886b:	mov    DWORD PTR [ebp+0x8],edx
  42886e:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428875:	jmp    0x428977
  42887a:	mov    eax,DWORD PTR [ebp+0xc]
  42887d:	mov    ecx,DWORD PTR [ebp+0xc]
  428880:	xor    eax,esi
  428882:	xor    ecx,esi
  428884:	lea    ecx,[eax+ecx*1+0x64e5ea]
  42888b:	mov    eax,DWORD PTR [ebp+0x8]
  42888e:	xor    edx,edx
  428890:	div    ecx
  428892:	mov    eax,DWORD PTR [ebp+0x10]
  428895:	mov    ecx,DWORD PTR [ebp+0xc]
  428898:	xor    eax,esi
  42889a:	xor    ecx,esi
  42889c:	sub    eax,ecx
  42889e:	cmp    edx,eax
  4288a0:	jne    0x428936
  4288a6:	mov    eax,DWORD PTR [ebp+0x8]
  4288a9:	mov    ecx,DWORD PTR [ebp-0xc]
  4288ac:	mov    dl,BYTE PTR [eax+ecx*1]
  4288af:	mov    eax,DWORD PTR [ebp-0x10]
  4288b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4288b5:	xor    eax,esi
  4288b7:	xor    ecx,esi
  4288b9:	add    eax,edi
  4288bb:	add    ecx,edi
  4288bd:	cmp    eax,ecx
  4288bf:	jae    0x428907
  4288c1:	lea    ecx,[eax-0x3272f5]
  4288c7:	mov    DWORD PTR [ebp-0x4],ecx
  4288ca:	mov    ebx,DWORD PTR [ebp-0x4]
  4288cd:	xor    ebx,esi
  4288cf:	add    ebx,0x7f55d8e3
  4288d5:	lea    ecx,[ebp+eax*4-0x38]
  4288d9:	mov    DWORD PTR [ecx],ebx
  4288db:	mov    ebx,DWORD PTR [ecx]
  4288dd:	cmp    ebx,0x244ecb80
  4288e3:	jbe    0x4288ed
  4288e5:	add    DWORD PTR [ecx],0x405fcc1
  4288eb:	jmp    0x4288f3
  4288ed:	add    DWORD PTR [ecx],0xfdaf433f
  4288f3:	mov    ecx,DWORD PTR [ebp-0x8]
  4288f6:	xor    ecx,esi
  4288f8:	inc    eax
  4288f9:	inc    DWORD PTR [ebp-0x4]
  4288fc:	add    ecx,edi
  4288fe:	cmp    eax,ecx
  428900:	jb     0x4288ca
  428902:	mov    ebx,0xf89c85a5
  428907:	cmp    DWORD PTR [ebp-0x14],0x0
  42890b:	jne    0x428915
  42890d:	xor    dl,0x7e
  428910:	add    dl,0x3
  428913:	jmp    0x42892b
  428915:	mov    eax,DWORD PTR [ebp-0x18]
  428918:	xor    al,0xae
  42891a:	mov    cl,0xb
  42891c:	sub    cl,al
  42891e:	add    dl,cl
  428920:	mov    ecx,DWORD PTR [ebp-0x1c]
  428923:	xor    cl,0xae
  428926:	sub    cl,0xb
  428929:	ror    dl,cl
  42892b:	xor    eax,eax
  42892d:	mov    eax,DWORD PTR [ebp+0x8]
  428930:	mov    ecx,DWORD PTR [ebp-0xc]
  428933:	mov    BYTE PTR [eax+ecx*1],dl
  428936:	mov    eax,DWORD PTR [ebp+0x8]
  428939:	mov    ecx,DWORD PTR [ebp-0x10]
  42893c:	sub    eax,edi
  42893e:	xor    eax,esi
  428940:	cmp    eax,ecx
  428942:	jne    0x428965
  428944:	mov    eax,DWORD PTR [ebp+0x10]
  428947:	mov    ecx,DWORD PTR [ebp+0xc]
  42894a:	xor    eax,esi
  42894c:	xor    ecx,esi
  42894e:	sub    eax,ecx
  428950:	mov    ecx,DWORD PTR [ebp-0x20]
  428953:	sub    eax,edi
  428955:	xor    eax,esi
  428957:	mov    DWORD PTR [ebp+0x10],eax
  42895a:	mov    eax,DWORD PTR [ebp+0xc]
  42895d:	xor    eax,esi
  42895f:	sub    ecx,eax
  428961:	sub    ecx,edi
  428963:	jmp    0x428974
  428965:	mov    eax,DWORD PTR [ebp+0xc]
  428968:	xor    eax,esi
  42896a:	mov    ecx,0xffcd8d0b
  42896f:	sub    ecx,eax
  428971:	add    ecx,DWORD PTR [ebp+0x8]
  428974:	mov    DWORD PTR [ebp+0x8],ecx
  428977:	mov    eax,DWORD PTR [ebp+0x10]
  42897a:	cmp    eax,ebx
  42897c:	jne    0x42887a
  428982:	mov    eax,DWORD PTR [ebp-0x24]
  428985:	jmp    0x42898a
  428987:	mov    eax,DWORD PTR [ebp-0x4]
  42898a:	xor    eax,esi
  42898c:	add    eax,edi
  42898e:	pop    edi
  42898f:	pop    esi
  428990:	pop    ebx
  428991:	leave  
  428992:	ret    0xc
  428995:	push   ebp
  428996:	mov    ebp,esp
  428998:	sub    esp,0x420
  42899e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4289a5:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  4289ac:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4289b3:	push   ebx
  4289b4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4289bb:	mov    eax,DWORD PTR [ebp-0x14]
  4289be:	push   esi
  4289bf:	mov    esi,0x75108ae
  4289c4:	push   edi
  4289c5:	xor    eax,esi
  4289c7:	mov    edi,0x3272f5
  4289cc:	add    eax,edi
  4289ce:	mov    DWORD PTR [ebp-0x8],eax
  4289d1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4289d8:	mov    DWORD PTR [ebp-0x4],0xead71885
  4289df:	mov    DWORD PTR [ebp-0x10],0x8
  4289e6:	mov    ecx,ecx
  4289e8:	mov    eax,DWORD PTR [ebp-0xc]
  4289eb:	mov    ecx,DWORD PTR [ebp-0x14]
  4289ee:	xor    eax,esi
  4289f0:	xor    ecx,esi
  4289f2:	add    eax,edi
  4289f4:	add    ecx,edi
  4289f6:	imul   eax,ecx
  4289f9:	jmp    0x428a2c
  4289fb:	mov    eax,DWORD PTR [ebp-0x4]
  4289fe:	sub    eax,edi
  428a00:	xor    eax,esi
  428a02:	mov    DWORD PTR [ebp-0x8],eax
  428a05:	lea    ebx,[ebp-0x8]
  428a08:	call   0x42874d
  428a0d:	mov    DWORD PTR [ebp-0x8],eax
  428a10:	mov    eax,DWORD PTR [ebp-0x8]
  428a13:	mov    ecx,DWORD PTR [ebp-0x4]
  428a16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428a1d:	mov    eax,DWORD PTR [ebp-0xc]
  428a20:	mov    ecx,DWORD PTR [ebp-0x4]
  428a23:	xor    eax,esi
  428a25:	lea    eax,[eax+ecx*1+0x3272f5]
  428a2c:	mov    DWORD PTR [ebp-0x4],eax
  428a2f:	mov    eax,DWORD PTR [ebp-0x18]
  428a32:	mov    ecx,DWORD PTR [ebp-0xc]
  428a35:	xor    ecx,esi
  428a37:	xor    eax,esi
  428a39:	sub    eax,ecx
  428a3b:	mov    ecx,DWORD PTR [ebp-0x4]
  428a3e:	cmp    ecx,eax
  428a40:	jbe    0x4289fb
  428a42:	mov    eax,DWORD PTR [ebp-0x1c]
  428a45:	xor    eax,esi
  428a47:	add    eax,edi
  428a49:	mov    DWORD PTR [ebp-0x8],eax
  428a4c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428a53:	mov    ebx,ebx
  428a55:	jmp    0x428ab8
  428a57:	mov    ecx,DWORD PTR [ebp-0x20]
  428a5a:	mov    eax,DWORD PTR [ebp-0x8]
  428a5d:	xor    ecx,esi
  428a5f:	add    ecx,edi
  428a61:	shr    eax,cl
  428a63:	mov    DWORD PTR [ebp-0x4],eax
  428a66:	mov    eax,DWORD PTR [ebp+0x8]
  428a69:	mov    cl,BYTE PTR [eax]
  428a6b:	mov    BYTE PTR [ebp+0xb],cl
  428a6e:	mov    cl,BYTE PTR [ebp+0xb]
  428a71:	mov    edx,DWORD PTR [ebp-0x8]
  428a74:	movzx  ecx,cl
  428a77:	xor    ecx,edx
  428a79:	mov    DWORD PTR [ebp+0x8],ecx
  428a7c:	mov    ecx,DWORD PTR [ebp-0x18]
  428a7f:	mov    edx,DWORD PTR [ebp+0x8]
  428a82:	xor    ecx,esi
  428a84:	add    ecx,edi
  428a86:	and    ecx,edx
  428a88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428a8f:	mov    edx,DWORD PTR [ebp-0x4]
  428a92:	xor    ecx,edx
  428a94:	mov    DWORD PTR [ebp-0x8],ecx
  428a97:	mov    ecx,DWORD PTR [ebp-0xc]
  428a9a:	xor    ecx,esi
  428a9c:	lea    eax,[eax+ecx*1+0x3272f5]
  428aa3:	mov    DWORD PTR [ebp+0x8],eax
  428aa6:	mov    eax,DWORD PTR [ebp-0xc]
  428aa9:	xor    eax,esi
  428aab:	mov    ecx,0xffcd8d0b
  428ab0:	sub    ecx,eax
  428ab2:	add    ecx,DWORD PTR [ebp-0x10]
  428ab5:	mov    DWORD PTR [ebp-0x10],ecx
  428ab8:	mov    eax,DWORD PTR [ebp-0x14]
  428abb:	mov    ecx,DWORD PTR [ebp-0x10]
  428abe:	xor    eax,esi
  428ac0:	add    eax,edi
  428ac2:	cmp    ecx,eax
  428ac4:	jne    0x428a57
  428ac6:	mov    eax,DWORD PTR [ebp-0x1c]
  428ac9:	mov    ecx,DWORD PTR [ebp-0x8]
  428acc:	xor    eax,esi
  428ace:	add    eax,edi
  428ad0:	pop    edi
  428ad1:	pop    esi
  428ad2:	xor    eax,ecx
  428ad4:	pop    ebx
  428ad5:	leave  
  428ad6:	ret    0x4
  428ad9:	push   ebp
  428ada:	mov    ebp,esp
  428adc:	mov    eax,DWORD PTR [ebp+0x1c]
  428adf:	mov    ecx,DWORD PTR [ebp+0x8]
  428ae2:	mov    edx,DWORD PTR [ebp+0x10]
  428ae5:	mov    eax,DWORD PTR [eax+0x190]
  428aeb:	mov    eax,DWORD PTR [eax]
  428aed:	sub    esp,0x64
  428af0:	push   ebx
  428af1:	push   esi
  428af2:	push   edi
  428af3:	mov    edi,0x75108ae
  428af8:	xor    ecx,edi
  428afa:	mov    ebx,0x3272f5
  428aff:	add    ecx,ebx
  428b01:	cmp    ecx,edx
  428b03:	jne    0x428b14
  428b05:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428b0f:	jmp    0x429010
  428b14:	mov    ecx,DWORD PTR [ebp+0x8]
  428b17:	mov    esi,DWORD PTR [ebp+0x14]
  428b1a:	mov    edx,DWORD PTR [esi]
  428b1c:	xor    ecx,edi
  428b1e:	add    ecx,ebx
  428b20:	cmp    edx,ecx
  428b22:	je     0x428fcb
  428b28:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b2b:	mov    DWORD PTR [ebp-0x1c],eax
  428b2e:	mov    DWORD PTR [ebp+0x1c],ecx
  428b31:	mov    ecx,DWORD PTR [ebp+0x18]
  428b34:	mov    eax,DWORD PTR [esi]
  428b36:	mov    DWORD PTR [ebp-0x20],eax
  428b39:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428b40:	mov    edx,0xf89c85a2
  428b45:	mov    DWORD PTR [ebp-0x8],edx
  428b48:	mov    eax,DWORD PTR [ebp+0x1c]
  428b4b:	mov    DWORD PTR [ebp+0x1c],eax
  428b4e:	mov    eax,DWORD PTR [ebp+0x1c]
  428b51:	mov    eax,DWORD PTR [eax+0x190]
  428b57:	mov    eax,DWORD PTR [eax]
  428b59:	mov    DWORD PTR [ebp-0x24],ecx
  428b5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  428b5f:	mov    ecx,DWORD PTR [ecx+0x190]
  428b65:	mov    ecx,DWORD PTR [ecx]
  428b67:	add    ecx,DWORD PTR [eax+0x3c]
  428b6a:	mov    DWORD PTR [ebp+0x10],ecx
  428b6d:	mov    eax,DWORD PTR [ebp+0x8]
  428b70:	xor    eax,edi
  428b72:	add    eax,ebx
  428b74:	mov    DWORD PTR [ebp-0x4],eax
  428b77:	mov    eax,DWORD PTR [ebp+0x8]
  428b7a:	xor    eax,edi
  428b7c:	add    eax,ebx
  428b7e:	mov    DWORD PTR [ebp+0x18],eax
  428b81:	mov    eax,DWORD PTR [ebp+0x10]
  428b84:	mov    eax,DWORD PTR [eax+0x50]
  428b87:	sub    eax,0xc
  428b8a:	mov    DWORD PTR [ebp-0x28],eax
  428b8d:	mov    eax,DWORD PTR [ebp+0x10]
  428b90:	mov    eax,DWORD PTR [eax+0x38]
  428b93:	mov    ecx,DWORD PTR [ebp+0x10]
  428b96:	dec    eax
  428b97:	test   DWORD PTR [ecx+0x54],eax
  428b9a:	mov    eax,DWORD PTR [ebp+0x10]
  428b9d:	je     0x428bb7
  428b9f:	mov    eax,DWORD PTR [eax+0x38]
  428ba2:	mov    ecx,DWORD PTR [ebp+0x10]
  428ba5:	mov    ecx,DWORD PTR [ecx+0x54]
  428ba8:	dec    eax
  428ba9:	not    eax
  428bab:	and    ecx,eax
  428bad:	mov    eax,DWORD PTR [ebp+0x10]
  428bb0:	mov    eax,DWORD PTR [eax+0x38]
  428bb3:	add    eax,ecx
  428bb5:	jmp    0x428bba
  428bb7:	mov    eax,DWORD PTR [eax+0x54]
  428bba:	mov    DWORD PTR [ebp+0x1c],eax
  428bbd:	mov    eax,DWORD PTR [ebp+0x8]
  428bc0:	xor    eax,edi
  428bc2:	add    eax,ebx
  428bc4:	mov    DWORD PTR [ebp+0x18],eax
  428bc7:	mov    eax,DWORD PTR [ebp+0x8]
  428bca:	xor    eax,edi
  428bcc:	add    eax,ebx
  428bce:	mov    DWORD PTR [ebp+0x18],eax
  428bd1:	mov    eax,DWORD PTR [ebp+0x8]
  428bd4:	mov    ecx,DWORD PTR [ebp-0x24]
  428bd7:	xor    eax,edi
  428bd9:	add    eax,ebx
  428bdb:	mov    DWORD PTR [ecx],eax
  428bdd:	mov    DWORD PTR [ebp+0x18],edx
  428be0:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428be7:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428bee:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428bf5:	mov    eax,DWORD PTR [ebp-0x8]
  428bf8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bfb:	xor    eax,edi
  428bfd:	add    eax,ebx
  428bff:	imul   eax,ecx
  428c02:	mov    ecx,DWORD PTR [ebp+0x8]
  428c05:	mov    edx,DWORD PTR [ebp-0x28]
  428c08:	xor    ecx,edi
  428c0a:	lea    ecx,[ecx+edx*1+0x3272f5]
  428c11:	cmp    eax,ecx
  428c13:	jae    0x428fc4
  428c19:	mov    eax,DWORD PTR [ebp+0x8]
  428c1c:	xor    eax,edi
  428c1e:	add    eax,ebx
  428c20:	mov    DWORD PTR [ebp+0x18],eax
  428c23:	mov    eax,DWORD PTR [ebp+0x1c]
  428c26:	add    eax,DWORD PTR [ebp-0x1c]
  428c29:	mov    DWORD PTR [ebp-0x4],eax
  428c2c:	push   DWORD PTR [ebp-0x4]
  428c2f:	mov    esi,DWORD PTR [ebp-0x1c]
  428c32:	mov    ecx,DWORD PTR [ebp+0x10]
  428c35:	call   0x427d85
  428c3a:	mov    DWORD PTR [ebp+0xc],eax
  428c3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428c44:	mov    eax,DWORD PTR [ebp-0x18]
  428c47:	xor    eax,edi
  428c49:	lea    ecx,[ebp-0x40]
  428c4c:	add    eax,ebx
  428c4e:	push   ecx
  428c4f:	call   0x428319
  428c54:	mov    eax,DWORD PTR [ebp+0xc]
  428c57:	test   eax,eax
  428c59:	je     0x428ca9
  428c5b:	mov    eax,DWORD PTR [ebp-0x18]
  428c5e:	xor    eax,edi
  428c60:	add    eax,ebx
  428c62:	push   eax
  428c63:	push   DWORD PTR [ebp+0xc]
  428c66:	lea    eax,[ebp-0x40]
  428c69:	push   eax
  428c6a:	call   0x42820f
  428c6f:	mov    eax,DWORD PTR [ebp-0x4]
  428c72:	mov    DWORD PTR [ebp-0x18],eax
  428c75:	mov    eax,DWORD PTR [ebp-0x18]
  428c78:	mov    ecx,DWORD PTR [ebp-0x1c]
  428c7b:	sub    eax,ecx
  428c7d:	mov    DWORD PTR [ebp-0x18],eax
  428c80:	mov    eax,DWORD PTR [ebp+0xc]
  428c83:	mov    ecx,DWORD PTR [ebp+0xc]
  428c86:	mov    eax,DWORD PTR [eax+0x10]
  428c89:	add    eax,DWORD PTR [ecx+0xc]
  428c8c:	mov    ecx,DWORD PTR [ebp-0x18]
  428c8f:	cmp    ecx,eax
  428c91:	jb     0x428ca9
  428c93:	mov    eax,DWORD PTR [ebp+0xc]
  428c96:	mov    eax,DWORD PTR [eax+0xc]
  428c99:	mov    ecx,DWORD PTR [ebp+0xc]
  428c9c:	add    eax,DWORD PTR [ecx+0x8]
  428c9f:	mov    ecx,DWORD PTR [ebp-0x18]
  428ca2:	sub    eax,ecx
  428ca4:	jmp    0x428f97
  428ca9:	push   0xc
  428cab:	push   DWORD PTR [ebp-0x4]
  428cae:	lea    eax,[ebp-0x4c]
  428cb1:	push   eax
  428cb2:	call   0x42820f
  428cb7:	mov    eax,0xf89c85a5
  428cbc:	mov    DWORD PTR [ebp-0x2c],eax
  428cbf:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428cc6:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428ccd:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428cd4:	lea    ecx,[ebp-0x2c]
  428cd7:	mov    DWORD PTR [ebp-0xc],ecx
  428cda:	lea    ecx,[ebp-0x30]
  428cdd:	mov    DWORD PTR [ebp-0x10],ecx
  428ce0:	lea    ecx,[ebp-0x34]
  428ce3:	mov    DWORD PTR [ebp+0xc],ecx
  428ce6:	lea    ecx,[ebp-0x38]
  428ce9:	mov    DWORD PTR [ebp-0x14],ecx
  428cec:	mov    ecx,DWORD PTR [ebp+0x8]
  428cef:	xor    ecx,edi
  428cf1:	add    ecx,ebx
  428cf3:	mov    DWORD PTR [ebp-0x18],ecx
  428cf6:	jmp    0x428ef2
  428cfb:	cmp    eax,0xf89c85a3
  428d00:	je     0x428f04
  428d06:	mov    ecx,DWORD PTR [ebp-0x8]
  428d09:	xor    ecx,edi
  428d0b:	mov    esi,eax
  428d0d:	add    ecx,ebx
  428d0f:	mov    DWORD PTR [ebp+0x18],ecx
  428d12:	mov    eax,DWORD PTR [ebp-0x18]
  428d15:	xor    esi,edi
  428d17:	lea    eax,[eax+esi*1+0x3272f5]
  428d1e:	mov    DWORD PTR [ebp-0x18],eax
  428d21:	mov    eax,DWORD PTR [ebp-0x8]
  428d24:	mov    ecx,DWORD PTR [ebp-0x18]
  428d27:	xor    eax,edi
  428d29:	add    eax,ebx
  428d2b:	cmp    ecx,eax
  428d2d:	jne    0x428d42
  428d2f:	mov    eax,DWORD PTR [ebp+0x8]
  428d32:	xor    eax,edi
  428d34:	add    eax,ebx
  428d36:	push   eax
  428d37:	push   0xc
  428d39:	lea    eax,[ebp-0x4c]
  428d3c:	push   eax
  428d3d:	call   0x4287f5
  428d42:	mov    eax,DWORD PTR [ebp-0xc]
  428d45:	mov    eax,DWORD PTR [eax]
  428d47:	xor    eax,edi
  428d49:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d50:	mov    ecx,DWORD PTR [ebp+0x8]
  428d53:	xor    ecx,edi
  428d55:	movzx  eax,al
  428d58:	add    ecx,ebx
  428d5a:	cmp    eax,ecx
  428d5c:	je     0x428eda
  428d62:	mov    eax,DWORD PTR [ebp-0x10]
  428d65:	mov    eax,DWORD PTR [eax]
  428d67:	xor    eax,edi
  428d69:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d70:	mov    ecx,DWORD PTR [ebp+0x8]
  428d73:	xor    ecx,edi
  428d75:	movzx  eax,al
  428d78:	add    ecx,ebx
  428d7a:	cmp    eax,ecx
  428d7c:	je     0x428eda
  428d82:	mov    eax,DWORD PTR [ebp+0xc]
  428d85:	mov    eax,DWORD PTR [eax]
  428d87:	xor    eax,edi
  428d89:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428d90:	mov    ecx,DWORD PTR [ebp+0x8]
  428d93:	xor    ecx,edi
  428d95:	movzx  eax,al
  428d98:	add    ecx,ebx
  428d9a:	cmp    eax,ecx
  428d9c:	je     0x428eda
  428da2:	mov    eax,DWORD PTR [ebp-0x14]
  428da5:	mov    eax,DWORD PTR [eax]
  428da7:	xor    eax,edi
  428da9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428db0:	mov    ecx,DWORD PTR [ebp+0x8]
  428db3:	xor    ecx,edi
  428db5:	movzx  eax,al
  428db8:	add    ecx,ebx
  428dba:	cmp    eax,ecx
  428dbc:	je     0x428eda
  428dc2:	mov    eax,DWORD PTR [ebp-0x10]
  428dc5:	mov    eax,DWORD PTR [eax]
  428dc7:	xor    eax,edi
  428dc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428dd0:	mov    ecx,DWORD PTR [ebp-0xc]
  428dd3:	mov    ecx,DWORD PTR [ecx]
  428dd5:	xor    ecx,edi
  428dd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428dde:	xor    al,cl
  428de0:	mov    ecx,DWORD PTR [ebp+0xc]
  428de3:	mov    ecx,DWORD PTR [ecx]
  428de5:	xor    ecx,edi
  428de7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428dee:	or     al,cl
  428df0:	mov    ecx,DWORD PTR [ebp-0xc]
  428df3:	mov    ecx,DWORD PTR [ecx]
  428df5:	xor    ecx,edi
  428df7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428dfe:	cmp    cl,al
  428e00:	jne    0x428eda
  428e06:	mov    eax,DWORD PTR [ebp+0xc]
  428e09:	mov    eax,DWORD PTR [eax]
  428e0b:	xor    eax,edi
  428e0d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e14:	mov    ecx,DWORD PTR [ebp-0x10]
  428e17:	mov    ecx,DWORD PTR [ecx]
  428e19:	xor    ecx,edi
  428e1b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e22:	xor    al,cl
  428e24:	mov    ecx,DWORD PTR [ebp-0x14]
  428e27:	mov    ecx,DWORD PTR [ecx]
  428e29:	xor    ecx,edi
  428e2b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e32:	or     al,cl
  428e34:	mov    ecx,DWORD PTR [ebp-0x10]
  428e37:	mov    ecx,DWORD PTR [ecx]
  428e39:	xor    ecx,edi
  428e3b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e42:	cmp    cl,al
  428e44:	jne    0x428eda
  428e4a:	mov    eax,DWORD PTR [ebp-0x14]
  428e4d:	mov    eax,DWORD PTR [eax]
  428e4f:	xor    eax,edi
  428e51:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e58:	mov    ecx,DWORD PTR [ebp+0xc]
  428e5b:	mov    ecx,DWORD PTR [ecx]
  428e5d:	xor    ecx,edi
  428e5f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e66:	xor    al,cl
  428e68:	mov    ecx,DWORD PTR [ebp-0xc]
  428e6b:	mov    ecx,DWORD PTR [ecx]
  428e6d:	xor    ecx,edi
  428e6f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e76:	or     al,cl
  428e78:	mov    ecx,DWORD PTR [ebp+0xc]
  428e7b:	mov    ecx,DWORD PTR [ecx]
  428e7d:	xor    ecx,edi
  428e7f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e86:	cmp    cl,al
  428e88:	jne    0x428eda
  428e8a:	mov    eax,DWORD PTR [ebp-0x14]
  428e8d:	mov    eax,DWORD PTR [eax]
  428e8f:	xor    eax,edi
  428e91:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e98:	mov    ecx,DWORD PTR [ebp-0xc]
  428e9b:	mov    ecx,DWORD PTR [ecx]
  428e9d:	xor    ecx,edi
  428e9f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ea6:	xor    al,cl
  428ea8:	mov    ecx,DWORD PTR [ebp-0x10]
  428eab:	mov    ecx,DWORD PTR [ecx]
  428ead:	xor    ecx,edi
  428eaf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428eb6:	or     al,cl
  428eb8:	mov    ecx,DWORD PTR [ebp-0x14]
  428ebb:	mov    ecx,DWORD PTR [ecx]
  428ebd:	xor    ecx,edi
  428ebf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ec6:	cmp    cl,al
  428ec8:	jne    0x428eda
  428eca:	lea    eax,[ebp-0x4c]
  428ecd:	push   eax
  428ece:	call   0x428995
  428ed3:	mov    ecx,DWORD PTR [ebp-0x44]
  428ed6:	cmp    eax,ecx
  428ed8:	je     0x428ee4
  428eda:	mov    eax,DWORD PTR [ebp+0x8]
  428edd:	xor    eax,edi
  428edf:	add    eax,ebx
  428ee1:	mov    DWORD PTR [ebp+0x18],eax
  428ee4:	mov    eax,DWORD PTR [ebp-0x8]
  428ee7:	xor    eax,edi
  428ee9:	lea    eax,[eax+esi*1+0x3272f5]
  428ef0:	xor    eax,edi
  428ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  428ef5:	mov    edx,DWORD PTR [ebp+0x18]
  428ef8:	xor    ecx,edi
  428efa:	add    ecx,ebx
  428efc:	cmp    edx,ecx
  428efe:	je     0x428cfb
  428f04:	mov    eax,DWORD PTR [ebp+0x8]
  428f07:	mov    ecx,DWORD PTR [ebp+0x18]
  428f0a:	xor    eax,edi
  428f0c:	add    eax,ebx
  428f0e:	cmp    ecx,eax
  428f10:	jne    0x428f23
  428f12:	mov    eax,DWORD PTR [ebp-0x8]
  428f15:	mov    ecx,DWORD PTR [ebp+0x1c]
  428f18:	xor    eax,edi
  428f1a:	lea    eax,[eax+ecx*1+0x3272f5]
  428f21:	jmp    0x428f9a
  428f23:	push   0x18
  428f25:	push   DWORD PTR [ebp-0x4]
  428f28:	lea    eax,[ebp-0x64]
  428f2b:	push   eax
  428f2c:	call   0x42820f
  428f31:	mov    eax,DWORD PTR [ebp+0x8]
  428f34:	mov    ecx,DWORD PTR [ebp-0x18]
  428f37:	xor    eax,edi
  428f39:	add    eax,ebx
  428f3b:	cmp    eax,ecx
  428f3d:	je     0x428f52
  428f3f:	mov    eax,DWORD PTR [ebp+0x8]
  428f42:	xor    eax,edi
  428f44:	add    eax,ebx
  428f46:	push   eax
  428f47:	push   0x18
  428f49:	lea    eax,[ebp-0x64]
  428f4c:	push   eax
  428f4d:	call   0x4287f5
  428f52:	mov    eax,DWORD PTR [ebp-0x4]
  428f55:	add    eax,0x18
  428f58:	mov    DWORD PTR [ebp+0x18],eax
  428f5b:	push   DWORD PTR [ebp-0x50]
  428f5e:	push   DWORD PTR [ebp+0x18]
  428f61:	mov    eax,DWORD PTR [ebp-0x54]
  428f64:	add    eax,DWORD PTR [ebp-0x20]
  428f67:	push   eax
  428f68:	call   0x42820f
  428f6d:	mov    eax,DWORD PTR [ebp+0x8]
  428f70:	mov    ecx,DWORD PTR [ebp-0x18]
  428f73:	xor    eax,edi
  428f75:	add    eax,ebx
  428f77:	cmp    eax,ecx
  428f79:	je     0x428f8c
  428f7b:	push   0x0
  428f7d:	push   DWORD PTR [ebp-0x50]
  428f80:	mov    eax,DWORD PTR [ebp-0x54]
  428f83:	add    eax,DWORD PTR [ebp-0x20]
  428f86:	push   eax
  428f87:	call   0x4287f5
  428f8c:	mov    eax,DWORD PTR [ebp-0x24]
  428f8f:	mov    ecx,DWORD PTR [ebp-0x50]
  428f92:	add    DWORD PTR [eax],ecx
  428f94:	mov    eax,DWORD PTR [ebp-0x50]
  428f97:	add    eax,DWORD PTR [ebp+0x1c]
  428f9a:	mov    DWORD PTR [ebp+0x1c],eax
  428f9d:	mov    eax,DWORD PTR [ebp-0x8]
  428fa0:	mov    ecx,DWORD PTR [ebp+0x1c]
  428fa3:	xor    eax,edi
  428fa5:	add    eax,ebx
  428fa7:	imul   eax,ecx
  428faa:	mov    ecx,DWORD PTR [ebp+0x8]
  428fad:	mov    edx,DWORD PTR [ebp-0x28]
  428fb0:	xor    ecx,edi
  428fb2:	lea    ecx,[ecx+edx*1+0x3272f5]
  428fb9:	cmp    eax,ecx
  428fbb:	jb     0x428c19
  428fc1:	mov    esi,DWORD PTR [ebp+0x14]
  428fc4:	mov    eax,DWORD PTR [ebp-0x20]
  428fc7:	mov    DWORD PTR [esi],eax
  428fc9:	jmp    0x429010
  428fcb:	mov    ecx,DWORD PTR [ebp+0x8]
  428fce:	mov    edx,DWORD PTR [ebp+0xc]
  428fd1:	xor    ecx,edi
  428fd3:	xor    edx,edi
  428fd5:	add    ecx,ebx
  428fd7:	add    edx,ebx
  428fd9:	cmp    ecx,edx
  428fdb:	jne    0x428fef
  428fdd:	mov    eax,ds:0x7f642ddc
  428fe2:	imul   eax,eax,0x9f15fccf
  428fe8:	mov    ds:0x7f642ddc,eax
  428fed:	jmp    0x429010
  428fef:	mov    ecx,DWORD PTR [ebp+0x8]
  428ff2:	xor    ecx,edi
  428ff4:	add    ecx,ebx
  428ff6:	cmp    eax,ecx
  428ff8:	je     0x429006
  428ffa:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  429004:	jmp    0x429010
  429006:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  429010:	pop    edi
  429011:	pop    esi
  429012:	pop    ebx
  429013:	leave  
  429014:	ret    0x18
  429017:	push   ebp
  429018:	mov    ebp,esp
  42901a:	and    esp,0xfffffff8
  42901d:	mov    eax,DWORD PTR [ebp+0x20]
  429020:	sub    esp,0x14
  429023:	push   ebx
  429024:	mov    ebx,DWORD PTR [ebp+0x14]
  429027:	push   esi
  429028:	push   edi
  429029:	cmp    eax,0xf89c85a5
  42902e:	jne    0x42903a
  429030:	push   0xf89c85a2
  429035:	jmp    0x42916c
  42903a:	mov    eax,DWORD PTR [ebp+0x20]
  42903d:	cmp    eax,0xf89c85a2
  429042:	jne    0x42904e
  429044:	push   0xf89c85a3
  429049:	jmp    0x42916c
  42904e:	mov    eax,DWORD PTR [ebp+0x20]
  429051:	cmp    eax,0xf89c85a3
  429056:	jne    0x429062
  429058:	push   0xf89c85a0
  42905d:	jmp    0x42916c
  429062:	mov    eax,DWORD PTR [ebp+0x20]
  429065:	cmp    eax,0xf89c85a0
  42906a:	jne    0x429076
  42906c:	push   0xf89c85a1
  429071:	jmp    0x42916c
  429076:	mov    ecx,DWORD PTR [ebp+0x20]
  429079:	mov    eax,0xf89c85bc
  42907e:	cmp    ecx,eax
  429080:	jne    0x42913c
  429086:	mov    eax,DWORD PTR [ebp+0x10]
  429089:	mov    DWORD PTR [esp+0xc],eax
  42908d:	mov    eax,DWORD PTR [ebp+0x18]
  429090:	mov    DWORD PTR [esp+0x14],eax
  429094:	mov    eax,DWORD PTR [ebp+0xc]
  429097:	mov    DWORD PTR [esp+0x18],eax
  42909b:	mov    eax,DWORD PTR [ebp+0x8]
  42909e:	mov    DWORD PTR [esp+0x10],eax
  4290a2:	mov    eax,DWORD PTR [esp+0x10]
  4290a6:	mov    ecx,DWORD PTR [esp+0x14]
  4290aa:	mov    edi,0x75108ae
  4290af:	xor    eax,edi
  4290b1:	mov    esi,0x3272f5
  4290b6:	add    eax,esi
  4290b8:	mov    DWORD PTR [ecx],eax
  4290ba:	mov    eax,DWORD PTR [esp+0xc]
  4290be:	mov    eax,DWORD PTR [eax+0x194]
  4290c4:	mov    ecx,DWORD PTR [eax]
  4290c6:	mov    eax,DWORD PTR [esp+0xc]
  4290ca:	mov    eax,DWORD PTR [eax+0x194]
  4290d0:	mov    eax,DWORD PTR [eax]
  4290d2:	add    eax,DWORD PTR [ecx+0x3c]
  4290d5:	mov    ecx,DWORD PTR [esp+0xc]
  4290d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4290df:	mov    ecx,DWORD PTR [ecx+0x14]
  4290e2:	push   0x4
  4290e4:	push   0x3000
  4290e9:	push   DWORD PTR [eax+0x50]
  4290ec:	push   0x0
  4290ee:	call   ecx
  4290f0:	mov    DWORD PTR [ebx],eax
  4290f2:	mov    eax,DWORD PTR [esp+0x10]
  4290f6:	push   DWORD PTR [esp+0xc]
  4290fa:	xor    eax,edi
  4290fc:	add    eax,esi
  4290fe:	mov    DWORD PTR [esp+0x20],eax
  429102:	lea    eax,[esp+0x20]
  429106:	push   eax
  429107:	push   ebx
  429108:	push   DWORD PTR [esp+0x20]
  42910c:	push   DWORD PTR [esp+0x28]
  429110:	push   DWORD PTR [esp+0x24]
  429114:	call   0x428ad9
  429119:	mov    eax,DWORD PTR [esp+0x10]
  42911d:	mov    ecx,DWORD PTR [ebx]
  42911f:	xor    eax,edi
  429121:	add    eax,esi
  429123:	cmp    ecx,eax
  429125:	je     0x429183
  429127:	mov    eax,DWORD PTR [esp+0x18]
  42912b:	mov    ecx,DWORD PTR [esp+0x14]
  42912f:	xor    eax,edi
  429131:	add    eax,esi
  429133:	imul   eax,DWORD PTR [esp+0x1c]
  429138:	mov    DWORD PTR [ecx],eax
  42913a:	jmp    0x429183
  42913c:	mov    ecx,DWORD PTR [ebp+0x20]
  42913f:	cmp    ecx,0xf89c85a1
  429145:	jne    0x42914e
  429147:	push   0xf89c85be
  42914c:	jmp    0x42916c
  42914e:	mov    ecx,DWORD PTR [ebp+0x20]
  429151:	cmp    ecx,0xf89c85be
  429157:	jne    0x429160
  429159:	push   0xf89c85bf
  42915e:	jmp    0x42916c
  429160:	mov    ecx,DWORD PTR [ebp+0x20]
  429163:	cmp    ecx,0xf89c85bf
  429169:	jne    0x429183
  42916b:	push   eax
  42916c:	push   DWORD PTR [ebp+0x1c]
  42916f:	push   DWORD PTR [ebp+0x18]
  429172:	push   ebx
  429173:	push   DWORD PTR [ebp+0x10]
  429176:	push   DWORD PTR [ebp+0xc]
  429179:	push   DWORD PTR [ebp+0x8]
  42917c:	call   0x429017
  429181:	mov    DWORD PTR [ebx],eax
  429183:	mov    eax,DWORD PTR [ebx]
  429185:	pop    edi
  429186:	pop    esi
  429187:	pop    ebx
  429188:	mov    esp,ebp
  42918a:	pop    ebp
  42918b:	ret    0x1c
  42918e:	push   ebp
  42918f:	mov    ebp,esp
  429191:	sub    esp,0xc
  429194:	mov    eax,0xf89c85a5
  429199:	mov    DWORD PTR [ebp-0x8],eax
  42919c:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  4291a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4291a6:	xor    ecx,0x75108ae
  4291ac:	add    ecx,0x3272f5
  4291b2:	mov    DWORD PTR [ebp-0x4],ecx
  4291b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4291b8:	push   eax
  4291b9:	mov    DWORD PTR [ebp+0xc],ecx
  4291bc:	push   DWORD PTR [ebp+0xc]
  4291bf:	lea    eax,[ebp-0x4]
  4291c2:	push   DWORD PTR [ebp+0x8]
  4291c5:	push   eax
  4291c6:	push   DWORD PTR [ebp+0xc]
  4291c9:	push   DWORD PTR [ebp-0xc]
  4291cc:	push   DWORD PTR [ebp-0x8]
  4291cf:	call   0x429017
  4291d4:	mov    DWORD PTR [ebp-0x4],eax
  4291d7:	mov    eax,DWORD PTR [ebp-0x4]
  4291da:	leave  
  4291db:	ret    0x8
